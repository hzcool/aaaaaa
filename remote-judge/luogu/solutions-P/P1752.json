[
    {
        "content": "###\u770b\u5230\u51fa\u9898\u4eba\u8bf4\u8fd9\u662f\u8fd9\u9053\u9898\u662f\u6539\u7f16\u81ea2013IOI\u7684Day2T2\u7684\u65f6\u5019\u6211\u614c\u5f97\u4e00\u903c\uff0c\u4f46\u8fd8\u662f\u4ee5\u8bd5\u8bd5\u7684\u5fc3\u6001\u8bd5\u7684\u505a\u4e86\u8fd9\u9053\u9898QWQ,\u60f3\u4e862\u5929\u6700\u540e\u53d1\u73b0\u5361\u6b7b\u5728\u4e86\u4e00\u4e2a\u6781\u5176\u611a\u8822\u7684\u5730\u65b9QWQ,\u6781\u5ea6\u60b2\u54c0\u3002\n\u5176\u5b9e\u51fa\u9898\u4eba\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\u201c \u628a\u83dc\u6309\u7f8e\u5473\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u6311\u5254\u7684\u4eba\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\u63a5\u7740\uff0c\u4e8c\u5206\u7b54\u6848\uff0c\u8bbe\u7b54\u6848\u4e3aans\u7136\u540e\u628a\u83dc\u6309\u7f8e\u5473\u5ea6\u4ece\u5927\u5230\u5c0f\u6254\u5230\u4e00\u4e2a\u4ef7\u683c\u7684\u5927\u6839\u5806\u91cc\uff08\u6254p\u6b21\uff0c\u6bcf\u6b21\u6254\u7684\u662f\u6311\u5254\u7684\u4eba\u53ef\u4ee5\u53d6\u7684\uff09\uff0c\u7136\u540e\u6311\u5254\u7684\u4eba\u4f9d\u6b21\u53d6\u51faans\u4e2a\uff08\u4e0d\u8db3\u5219\u5168\u53d6\uff09\u3002\u5269\u4e0b\u7684\u518d\u8ba9\u8d2b\u7a77\u7684\u4eba\u8d2a\u5fc3\uff0c\u5224\u65ad\u5f53\u524d\u7b54\u6848\u662f\u5426\u53ef\u884c \u201d\u6211\u7684\u60f3\u6cd5\u4e5f\u548c\u4ed6\u7684\u57fa\u672c\u4e00\u81f4\uff0c\u7a0d\u5fae\u52a0\u4e00\u4e2a\u7b80\u5355\u7684\u4f18\u5316\u5c31\u53ef\u4ee5Ac\u4e86\uff0c\u5373\u4fbf\u5982\u6b64\uff0c\u8eab\u4e3a\u849f\u84bb\u7684\u6211\u8fd8\u662f\u5361\u4e86\u5f88\u4e45~\uff0c\u6211\u5c31\u628a\u4ee3\u7801\u548c\u6211\u7684\u601d\u8def\u8fc7\u7a0b\u8d34\u51fa\u6765\uff0c\u4f9b\u5927\u5bb6\u53c2\u8003\u5427\uff1b\n\n```#include<iostream>\n#include<queue>\n#include<algorithm>\n#include<cmath>\n#include<cstdio>\n#include<cstring> \n#include<vector>\nusing namespace std;\nint n,m,p,q;\nstruct node{\n    int x,y;\n}s[210000];\nnode ans[210000];\nint pp1[210000],pp2[210000]; \ninline int read(){\n    int f=1,x=0;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    return f*x;\n}//\u5c0f\u5feb\u8bfb\uff0c\u65e0\u89c6\u5c31\u597d\u4e86\nint cmp(int x,int y){\n    return x>y;\n}\nint cmp1(node x,node y){\n    return x.x>y.x;\n}\nint cmp2(node x,node y){\n    return x.y<y.y;\n}\npriority_queue<node> Q;\nbool operator < (node A,node B){\n    return A.y<B.y;\n}//\u6309\u4ef7\u94b1\u6392\u7684\u5927\u6839\u5806\nint check(int ans1){\n\tlong long r=(long long)(n-p-q)*ans1;\n    if(m<=r)return 1;//\u8fd9\u5c31\u662f\u6211\u8bf4\u7684\u5c0f\u4f18\u5316\u4e0d\u52a0\u7684\u8bdd\u6211\u7684\u4ee3\u7801\u662f\u8fc7\u4e0d\u4e86\u7b2c5\u548c\u7b2c10\u4e2a\u70b9\u7684\uff0c\u5e76\u4e14\u5982\u679cr\u662fint\u7c7b\u578b\u7684\u8bdd\u7b2c5\u548c\u7b2c10\u4e2a\u70b9\u4f1awa QWQ;\n    int cnt=1;int now=1;\n    for(int i=1;i<=p;++i){\n        while(s[now].x>=pp1[i]&&now<=m)Q.push(s[now]),++now;\n        for(int j=1;!Q.empty()&&j<=ans1;++j)Q.pop();\n    }\n    while(!Q.empty()){\n    \tans[cnt++]=Q.top();\n    \tQ.pop();\n    }\n    while(now<=m)ans[cnt++]=s[now],now++;;//\u6211\u6df1\u611f\u8fd9\u5730\u65b9\u53ef\u4ee5\u4f18\u5316\u4e00\u4e0b\uff0c\u4f46\u662f\u4e00\u76f4\u6ca1\u60f3\u5230\u6bd4\u8f83\u597d\u7684\u65b9\u6cd5\uff0c\u8fd9\u6837\u786e\u5b9e\u6d6a\u8d39\u4e86\u5f88\u591a\u7684\u65f6\u95f4\n    sort(ans+1,ans+cnt+1,cmp2);\n    int cnt1=1\n    for(int i=1;i<=q;i++){\n        for(int j=1;j<=ans1&&cnt1<=cnt&&ans[cnt1].y<=pp2[i];++j)cnt1++;\n    }\n    if(cnt1<cnt-(n-p-q)*ans1)return 0;\n    return 1;\n}\nint main(){\n    n=read();m=read();p=read();q=read();//\u8bf7\u6ce8\u610f\u8fd9\u4e2an,\u5343\u4e07\u522b\u4ee5\u4e3an=p+q,\u56e0\u4e3a\u8fd8\u6709\u65e2\u4e0d\u6311\u5254\u4e5f\u4e0d\u8d2b\u7a77\u7684\u4eba\u5462\uff0c\u6ca1\u6ce8\u610f\u7684\u8bdd\u5e94\u8be5\u662f20\u5206-->\u7b2c2\u30013\u4e2a\u70b9\u53ef\u4ee5\u8fc7\uff1b\n\tfor(int i=1;i<=m;i++){\n        s[i].x=read();\n        s[i].y=read();\n    }\n    sort(s+1,s+m+1,cmp1);//\u6309\u7f8e\u5473\u5ea6\u62cd\u4e2a\u5e8f\uff1b\n    for(int i=1;i<=p;i++)pp1[i]=read();\n    sort(pp1+1,pp1+p+1,cmp);\n    for(int i=1;i<=q;i++)pp2[i]=read();\n    sort(pp2+1,pp2+q+1);\n    int l=1,r=m,ans=-1;\n    while(l<=r){\n        int mid=l+r>>1;\t\n        if(cherk(mid)){\t\n            r=mid-1;\n            ans=mid;\n        }\n        else l=mid+1;\n    }//\u57fa\u7840\u7684\u4e8c\u5206\u5c31\u4e0d\u7528\u8bf4\u4e86\u5427\n    if(ans!=-1)cout<<ans;\n    else cout<<\"-1\";\n}```\n\u7b2c\u4e00\u7bc7Ac\u7684\u7d2b\u9898+\u7d2b\u9898\u9898\u89e3w(\uff9f\u0414\uff9f)w",
        "postTime": 1548219457,
        "uid": 122822,
        "name": "Merci",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1752 \u3010\u70b9\u83dc\u3011"
    },
    {
        "content": "\u5176\u5b9e\uff0c\u8fd9\u9053\u9898\u662f\u6211\u6539\u7f16\u81ea2013IOI\u7684Day2T2\uff08\u51e1\u662f\u6709\u89c1\u8fc7\u8bb8\u660a\u7136\u7684\u89e3\u9898\u62a5\u544a\u7684\u4eba\uff0c\u5e94\u8be5\u4e00\u773c\u5c31\u80fd\u770b\u51fa\u6765\uff09\u3002\u5c3d\u7ba1\u5b83\u662fIOI\u7684\u9898\u76ee\uff0c\u4f46\u5b83\u7684\u96be\u5ea6\u5e76\u4e0d\u5927\u3002\u89e3\u9898\u62a5\u544a\u8be6\u89c1NOI\u5b98\u7f51\u4e0a\u8bb8\u660a\u7136\u7684\u7248\u672c\uff0c\u8fd9\u91cc\u6211\u53ea\u7b80\u8ff0\u6211\u7684\u65b9\u6cd5\u3002\n\n\u9996\u5148\uff0c\u628a\u83dc\u6309\u7f8e\u5473\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u6311\u5254\u7684\u4eba\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\n\n\u63a5\u7740\uff0c\u4e8c\u5206\u7b54\u6848\uff0c\u8bbe\u7b54\u6848\u4e3aans\n\n\u7136\u540e\u628a\u83dc\u6309\u7f8e\u5473\u5ea6\u4ece\u5927\u5230\u5c0f\u6254\u5230\u4e00\u4e2a\u4ef7\u683c\u7684\u5927\u6839\u5806\u91cc\uff08\u6254p\u6b21\uff0c\u6bcf\u6b21\u6254\u7684\u662f\u6311\u5254\u7684\u4eba\u53ef\u4ee5\u53d6\u7684\uff09\uff0c\u7136\u540e\u6311\u5254\u7684\u4eba\u4f9d\u6b21\u53d6\u51faans\u4e2a\uff08\u4e0d\u8db3\u5219\u5168\u53d6\uff09\u3002\u5269\u4e0b\u7684\u518d\u8ba9\u8d2b\u7a77\u7684\u4eba\u8d2a\u5fc3\uff0c\u5224\u65ad\u5f53\u524d\u7b54\u6848\u662f\u5426\u53ef\u884c\u3002\n",
        "postTime": 1380980367,
        "uid": 185,
        "name": "litc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1752 \u3010\u70b9\u83dc\u3011"
    },
    {
        "content": "md\u8fd9\u4e2a\u9898\u89e3\u600e\u4e48\u662f\u6302\u7684\u554a\uff08\uff08\uff08     \n\n\u4e0d\u96be\u53d1\u73b0\u539f\u9898\u53ef\u4ee5\u4e8c\u5206\u56fe\u5339\u914d\u6a21\u62df\u7b97\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7206\u70b8\u3002 \n\n\u53d1\u73b0\u6392\u5e8f\u540e\u8fde\u8fb9\u6709\u8fde\u7eed\u6027\u4ee5\u53ca\u7b54\u6848\u5177\u6709\u5355\u8c03\u6027\uff0c\u8003\u8651\u4e8c\u5206\u7b54\u6848\u540e\u8d2a\u5fc3\u9009\u3002        \n\n\u6211\u4eec\u53ef\u4ee5\u4efb\u610f\u5148\u6ee1\u7ec4\u7f8e\u5473\u5ea6\u6216\u4ef7\u683c\u7684\u9650\u5236\uff0c\u4ee5\u5148\u6ee1\u8db3\u7f8e\u5473\u5ea6\u9650\u5236\u4e3e\u4f8b\uff0c\u6211\u4eec\u5bf9\u4eba\u7684\u7f8e\u5473\u5ea6\u5355\u8c03\u4e0d\u589e\u6392\u5bf9\u4e8e\u98df\u7269\u4e5f\u5355\u8c03\u4e0d\u589e\u62cd\uff0c\u7136\u540e\u7528\u53cc\u6307\u9488\u53bb\u628a\u6bcf\u4e2a\u4eba\u53ef\u9009\u7684\u98df\u7269\u90fd\u52a0\u5165\u4e00\u4e2a\u96c6\u5408\u91cc\u540e\u5c3d\u91cf\u9009\u5c31\u597d\u4e86\u3002              \n\n\u4f46\u662f\u8003\u8651\u5230\u8fd8\u6709\u4ef7\u683c\u7684\u9650\u5236\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u96c6\u5408\u62ff\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u7ef4\u62a4\uff0c\u6bcf\u6b21\u4ece\u53ef\u4ee5\u9009\u7684\u96c6\u5408\u91cc\u4f18\u5148\u62ff\u51fa\u4ef7\u683c\u5927\u7684\u98df\u7269\u5373\u53ef\u3002               \n\n\u5bf9\u4e8e\u5269\u4e0b\u7684\u98df\u7269\u76f4\u63a5\u7528\u4ef7\u683c\u4ee5\u4e0a\u8ff0\u7c7b\u4f3c\u7684\u65b9\u6cd5\u53cc\u6307\u9488\u8d2a\u5fc3\u5c3d\u91cf\u9009\u5c31\u597d\u4e86\uff0c\u6700\u540e\u770b\u5269\u4e0b\u6ca1\u6709\u9650\u5236\u7684\u4eba\u80fd\u5426\u9009\u5b8c\u5c31\u77e5\u9053\u5f53\u524d\u4e8c\u5206\u7b54\u6848\u5408\u4e0d\u5408\u6cd5\u4e86\u3002           \n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log ^ 2 n)$\u3002\n\n```cpp\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 4e5 + 5;\nint n,m,p,q,tas[Len],costt[Len];\nstruct node\n{\n\tint x,y;\n\tnode(){x = y = 0;}\n\tnode(int X,int Y){x = X , y = Y;}\n\tbool operator < (const node &Ano) const\n\t{\n\t\treturn y < Ano.y;\n\t}\n}s[Len],now[Len];\npriority_queue<node> Q;\nbool cmp1(node x,node y){return x.x > y.x;}\nbool cmp2(node x,node y){return x.y < y.y;}\nbool check(int len)\n{\n\tif(1ll * (n - p - q) * len >= m) return 1;\n\twhile(!Q.empty()) Q.pop();\n\tint idx = 1;\n\tfor(int i = 1 ; i <= p ; i ++) \n\t{\n\t\twhile(idx <= m && s[idx].x >= tas[i]) Q.push(s[idx ++]);\n\t\tfor(int j = 1 ; j <= len && !Q.empty() ; j ++) Q.pop(); \n\t}\n\tint nowl = 0;\n\twhile(!Q.empty()) \n\t{\n\t\tnow[++ nowl] = Q.top();\n\t\tQ.pop();\n\t} \n\tfor(int i = idx ; i <= m ; i ++) now[++ nowl] = s[i];\n\tsort(now + 1 , now + 1 + nowl , cmp2);\n\tidx = 1;\n\tfor(int i = 1 ; i <= q ; i ++) \n\t{\n\t\twhile(idx <= nowl && now[idx].y <= costt[i]) Q.push(now[idx ++]);\n\t\tfor(int j = 1 ; j <= len && !Q.empty() ; j ++) Q.pop();\n\t}\n\tint surp = 0;\n\twhile(!Q.empty()) \n\t{\n\t\tsurp ++;\n\t\tQ.pop();\n\t}\n\tsurp += nowl - idx + 1;\n\treturn surp <= (n - p - q) * len;\n}\nint main()\n{\n\tscanf(\"%d %d %d %d\",&n,&m,&p,&q);\n\tfor(int i = 1 ; i <= m ; i ++) scanf(\"%d %d\",&s[i].x,&s[i].y);\n\tfor(int i = 1 ; i <= p ; i ++) scanf(\"%d\",&tas[i]);\n\tfor(int i = 1 ; i <= q ; i ++) scanf(\"%d\",&costt[i]);\n\tsort(tas + 1 , tas + 1 + p);\n\treverse(tas + 1 , tas + 1 + p);\n\tsort(costt + 1 , costt + 1 + q);\n\tsort(s + 1 , s + 1 + m , cmp1);\n\tint l = 1 , r = m , anss = -1;\n\twhile(l <= r)  \n\t{\n\t\tint mid = (l + r) >> 1;\n\t\tif(check(mid)) anss = mid , r = mid - 1;\n\t\telse l = mid + 1;\n\t}\n\tif(!anss) puts(\"-1\");\n\telse printf(\"%d\\n\",anss);\n\treturn 0;\t\n} \n```",
        "postTime": 1634903944,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1752 \u70b9\u83dc"
    },
    {
        "content": "\u4e8c\u5206\u5e94\u8be5\u5f88\u660e\u663e,\n\u6211\u4eec\u5728\u7b54\u6848\u4e0a\u4e8c\u5206,\n\u8bbe\u6211\u4eec\u9700\u8981mid\u5468,\n\u90a3\u6211\u4eec\u8981check\u7684\u662f\u8fd9mid\u5468\u80fd\u4e0d\u80fd\u628a\u83dc\u5b8c\u6574\u5730\u5403\u4e2a\u904d.\n\n# check:\n\n\u82e5\u4ece\u83dc\u51fa\u53d1,\n\u6211\u4eec\u8981\u8003\u8651\u8fd9m\u4e2a\u83dc\u600e\u4e48\u5206\u7ed9\u8fd9n\u4e2a\u4eba,\n\u4f1a\u53d1\u73b0\u5f88\u96be\u5206,\n\u56e0\u4e3a\u6211\u5b8c\u5168\u4e0d\u77e5\u9053\u8fd9\u76d8\u83dc\u7a76\u7adf\u8be5\u7ed9\u7a77\u4eba\u8fd8\u662f\u7ed9\u6311\u5254\u7684\u4eba,\n\u6240\u4ee5\u6211\u4eec\u8981\n\n# \u6362\u4e2a\u8003\u8651\u89d2\u5ea6\n\n\u6211\u4eec\u6765\u60f3\u4e00\u60f3\u6bcf\u4e2a\u7a77\u4eba\u5e94\u8be5\u8981\u4ec0\u4e48\u6837\u7684\u83dc\n\u3002\u6211\u4eec\u5bb9\u6613\u53d1\u73b0\u6bcf\u4e2a\u7a77\u4eba\u5e94\u8be5\u8981\u7684\u662f\u80fd\u4e70\u5f97\u8d77\u7684\u83dc\u4e2d\n\uff0c\u6700\u96be\u5403\u7684\u90a3mid\u4e2a\u3002\n\n\u6211\u4eec\u6309\u7167\u4e0a\u8ff0\u8d2a\u5fc3\n\uff0c\u5148\u628a\u7a77\u4eba\u7684\u83dc\u9009\u597d\n\uff0c\u7136\u540e\u6311\u5254\u7684\u4eba\u5728\u5269\u4e0b\u7684\u83dc\u4e2d\u6311\u80fd\u63a5\u53d7\u7684\u4e2d\u6700\u96be\u5403\u7684\u90a3mid\u4e2a\n\uff0c\u6700\u540e\u770b\u770b\u5269\u4e0b\u7684\u83dc\u80fd\u4e0d\u80fd\u88ab\u6b63\u5e38\u4eba\u5728mid\u5468\u4e2d\u5403\u5b8c\u3002\n\ncheck\u7ed3\u675f\n\n\u81f3\u4e8e\u4e0a\u8ff0\u8d2a\u5fc3\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\n\u524d\u534a\u6bb5\u7528\u5806\uff0c\u540e\u534a\u6bb5\u7528set\u5373\u53ef\u3002\n\u590d\u6742\u5ea6$ O(n * log2n * log2n) $\n\u5f00$ O(2) $\u5373\u53ef\u8fc7\n\n```cpp\n\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#include <set>\n#include <cmath>\n\nusing namespace std;\nconst int maxn = 200005;\n\nint n, m, p, q;\n\nstruct Food\n{\n\tint prc, del, cnt;\n\tbool operator <(const Food& b) const\n\t{\n\t\treturn del > b.del;\n\t}\n} fd[maxn];\n\nint del[maxn], prc[maxn];\n\nbool cmp(Food a, Food b)\n{\n\treturn a.prc < b.prc;\n}\n\nvoid init()\n{\n\tcin >> n >> m >> p >> q;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tcin >> fd[i].del >> fd[i].prc;\n\t\tfd[i].cnt = i;\n\t}\n\tfor (int i = 1; i <= p; i++) cin >> del[i];\n\tfor (int i = 1; i <= q; i++) cin >> prc[i];\n\tsort(del + 1, del + p + 1);\n\tsort(prc + 1, prc + q + 1);\n\tsort(fd + 1, fd + m + 1, cmp);\n}\n\nstruct Food2\n{\n\tint prc, del, cnt;\n\tbool operator <(const Food2& b) const\n\t{\n\t\treturn del < b.del;\n\t}\n};\n\nbool check(int mid)\n{\n\tpriority_queue<Food> hp;\n\tmultiset<Food2> st;\n\tint pt = 1;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tFood2 tmp2;\n\t\ttmp2.cnt = fd[i].cnt;\n\t\ttmp2.del = fd[i].del;\n\t\ttmp2.prc = fd[i].prc;\n\t\tst.insert(tmp2);\n\t}\n\t//cout << st.size() << endl;\n\tfor (int i = 1; i <= q; i++)\n\t{\n\t\twhile (pt <= m && fd[pt].prc <= prc[i])\n\t\t{\n\t\t\thp.push(fd[pt]);\n\t\t\tpt++;\n\t\t}\n\t\tfor (int j = 1; j <= min((int)hp.size(), mid); j++)\n\t\t{\n\t\t\tFood tmp = hp.top();\n\t\t\thp.pop();\n\t\t\tFood2 tmp2;\n\t\t\ttmp2.cnt = tmp.cnt;\n\t\t\ttmp2.del = tmp.del;\n\t\t\ttmp2.prc = tmp.prc;\n\t\t\tst.erase(tmp2);\n\t\t}\n\t}\n\tfor (int i = 1; i <= p; i++)\n\t{\n\t\tFood2 tmp2;\n\t\ttmp2.del = del[i];\n\t\tfor (int j = 1; j <= mid; j++)\n\t\t{\n\t\t\tif (st.lower_bound(tmp2) != st.end())\n\t\t\t{\n\t\t\t\tst.erase(st.lower_bound(tmp2));\n\t\t\t}\n\t\t\telse break;\n\t\t}\n\t}\n\tint num = st.size();\n\tif (num <= (n - p - q) * mid) return true;\n\telse return false;\n}\n\nint main()\n{\n\tinit();\n\tint l = 1, r;\n\tif (n - p - q) r = ceil(1.0 * m / (n - p - q));\n\telse r = m + 1;\n\twhile (l < r)\n\t{\n\t\tint mid = (l + r) / 2;\n\t\tif (check(mid)) r = mid;\n\t\telse l = mid + 1;\n\t}\n\tif (!(n - p - q))\n\t{\n\t\tif (r == m + 1)\n\t\t{\n\t\t\tcout << -1;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << l << endl;\n\treturn 0;\n}\n```\n\n\u7ec6\u8282\u5f88\u591a\n\n\u6bd4\u5982\u8bf4\u8fd9\u4e2aset\u9700\u8981\u62ffmultiset\n\n\u56e0\u4e3a\u6709\u53ef\u80fd\u91cd\u590d\n\n\u8fd8\u6709\uff0c\u4e8c\u5206\u53f3\u8fb9\u754c\u8fd9\u91cc\u53d6m / (n - p - q)\n\n\u8981\u8003\u8651 (n - p - q) = 0 \u7684\u60c5\u51b5\n\n\u53e6\u5916\u65e0\u89e3\u7684\u60c5\u51b5\u53ea\u80fd\u662f(n - p - q) = 0 \u4e14 l = m + 1(r \u7684\u521d\u59cb\u503c\uff09\n\n\u8fd8\u6709\u8f93\u5165\u7684\u6570\u636e\u8981\u6392\u5e8f\n\np\u3001q\u4e0d\u8981\u641e\u53cd\u4e86\n\n\u8c22\u8c22\n",
        "postTime": 1582125629,
        "uid": 148438,
        "name": "Linshey",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1752 \u3010\u70b9\u83dc\u3011"
    },
    {
        "content": "\u65e2\u7136\u9898\u89e3\u8fd9\u4e48\u5c11\uff0c\u6211\u4e5f\u6765\u5199\u4e00\u7bc7\u9898\u89e3~\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\u76ee\uff0c\u8981\u6c42\u7528\u6700\u5c11\u7684\u65f6\u95f4\u70b9\u5230\u6240\u6709\u7684\u83dc\u80b4\uff0c\u5f88\u5bb9\u6613\u53d1\u73b0\u6240\u6c42\u7684\u7b54\u6848\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u5373\u5982x\u5929\u6ee1\u8db3\u6761\u4ef6\uff0c\u5219\u7528\u591a\u4e8ex\u5929\u7684\u65f6\u95f4\u4e00\u5b9a\u80fd\u6ee1\u8db3\u6761\u4ef6\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4e8c\u5206\u7b54\u6848\u3002\n\n\u4e8c\u5206\u7b54\u6848now\u540e\uff0c\u6211\u4eec\u5982\u4f55\u8fdb\u884c\u5224\u5b9a\u5462\uff1f\u6211\u4eec\u5148\u5bf9\u6240\u6709\u6311\u5254\u7684\u4eba\u7684\u7f8e\u5473\u5ea6\u4e0b\u9650\u8fdb\u884c\u6392\u5e8f\uff0c\u5e76\u8bb0\u4e3af[i]\uff0c\u8be5\u7f8e\u5473\u5ea6\u5728\u83dc\u5355\u4e2d\u7684\u6392\u540d\u8bb0\u4e3afpos[i]\uff0c\u5219\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6311\u5254\u7684\u4ebai\uff0c\u8d2a\u5fc3\u7684\u8003\u8651\uff0c\u4ed6\u4e00\u5b9a\u4f18\u5148\u9009fpos[i]~(fpos[i+1]-1)\uff0c\u56e0\u4e3a\u5176\u4ed6\u6311\u5254\u7684\u4eba\u65e0\u6cd5\u9009\u5230\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u83dc\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6311\u5254\u7684\u4eba\u6240\u9009\u7684\u83dc\u4e00\u5b9a\u6700\u4f18\u3002\u540c\u65f6\u6211\u4eec\u8bb0\u4e0b\u4e00\u4e2a\u53d8\u91cfnow1,\u8868\u793a\u73b0\u5728\u6240\u62e5\u6709\u7684\u70b9\u83dc\u65f6\u95f4\u603b\u548c\uff0c\u5bf9\u4e8efpos[i]~(fpos[i+1]-1)\u5185\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n1. \u5f53fpos[i+1]-fpos[i]>now1\uff0c\u5373\u6240\u62e5\u6709\u7684\u65f6\u95f4\u4e0d\u591f\u70b9\u5b8c\u6240\u6709\u7684\u83dc\uff0c\u5c31\u4f7f\u672a\u70b9\u7684\u83dc\u51cf\u53bbnow1\uff0c\u5e76\u4f7fnow1=0\uff0c\u8868\u793a\u4e00\u6b21\u6027\u7528\u5b8c\u4e86\u6240\u6709\u7684\u65f6\u95f4\u70b9\u5c3d\u53ef\u80fd\u591a\u7684\u83dc\uff0c\u5269\u4e0b\u7684\u83dc\u7531\u90a3\u4e9b\u65e0\u9650\u5236\u7684\u4eba\u53bb\u70b9\u3002\n\n2. \u5f53fpos[i+1]-fpos[i]<=now1\uff0c\u5373\u6240\u62e5\u6709\u7684\u65f6\u95f4\u8db3\u591f\u70b9\u5b8c\u6240\u6709\u7684\u83dc\uff0c\u5c31\u4f7fnow1\u548csum\u4e00\u8d77\u51cf\u53bb(fpos[i+1]-fpos[i])\u3002\n\n\u5f53\u6211\u4eec\u5904\u7406\u5b8c\u6bcf\u4e00\u4e2a\u4eba\uff0c\u5373\u5c06\u5904\u7406\u4e0b\u4e00\u4e2a\u4eba\u65f6\uff0c\u76f4\u63a5\u8ba9now1+=now,\u8868\u793a\u8fd9\u4e2a\u4eba\u4e4b\u524d\u6240\u6709\u4eba\u5269\u4e0b\u7684\u65f6\u95f4\u90fd\u53ef\u4ee5\u5e2e\u8fd9\u4e2a\u4eba\u70b9\u83dc\u3002\n\n\u5bf9\u4e8e\u8d2b\u7a77\u7684\u4eba\u4e5f\u662f\u8fd9\u6837\u5904\u7406\u5373\u53ef\uff0c\u4f46\u9700\u8981\u5224\u65ad\u8fd9\u76d8\u83dc\u88ab\u70b9\u8fc7\u6ca1\u6709\uff0c\u5f00\u4e00\u4e2a\u5e03\u5c14\u6570\u7ec4\u8bb0\u5f55\u5373\u53ef\u3002\n\n\u4e8e\u662f\u5c31\u6709\u4e86\u4e0b\u9762\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint n,m,p,q;\nstruct sb{\n\tint data;\n\tlong long len,val;\n}s[200010],e[200010];\nint fpos[50010],gpos[50010];\nlong long f[50010],g[50010];\ninline bool comp(long long x,long long y){\n\treturn x>y;\n}\ninline bool comp1(sb x,sb y){\n\treturn x.len<y.len;\n}\ninline bool comp2(sb x,sb y){\n\treturn x.val<y.val;\n}\ninline int find1(long long now){\n\tint l=1,r=m,ans=m+1;\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif(s[mid].len>=now){\n\t\t\tr=mid-1;\n\t\t\tans=mid;\n\t\t}\n\t\telse {\n\t\t\tl=mid+1;\n\t\t}\n\t}\n\treturn ans;\n}\ninline int find2(long long now){\n\tint l=1,r=m,ans=0;\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif(e[mid].val<=now){\n\t\t\tl=mid+1;\n\t\t\tans=mid;\n\t\t}\n\t\telse {\n\t\t\tr=mid-1;\n\t\t}\n\t}\n\treturn ans;\n}\nbool inv[200010];\ninline bool check(int now){\n\tmemset(inv,false,sizeof inv);\n\tint now1=0,sum=m;\n\tint pos,pos1;\n\tfor(register int i=1;i<p;i++){\n\t\tnow1+=now;\n\t\tpos=fpos[i],pos1=fpos[i+1];\n\t\tfor(register int j=pos;j<pos1;j++){\n\t\t\tif(now1==0) break;\n\t\t\tinv[s[j].data]=true;\n\t\t\tsum--;\n\t\t\tnow1--;\n\t\t}\n\t}\n\tnow1+=now;\n\tpos=fpos[p];\n\tfor(register int i=pos;i<=m;i++){\n\t\tif(now1==0){\n\t\t\tbreak;\n\t\t}\n\t\tinv[s[i].data]=true;\n\t\tsum--;\n\t\tnow1--;\n\t}\n\tnow1=0;\n\tfor(register int i=1;i<q;i++){\n\t\tnow1+=now;\n\t\tpos=gpos[i],pos1=gpos[i+1];\n\t\tfor(register int j=pos;j>pos1;j--){\n\t\t\tif(now1==0) break;\n\t\t\twhile(inv[e[j].data]) {\n\t\t\t\tj--;\n\t\t\t\tif(j==0) break;\n\t\t\t}\n\t\t\tif(j==0) break;\n\t\t\tinv[e[j].data]=true;\n\t\t\tnow1--;\n\t\t\tsum--;\n\t\t}\n\t} \n\tpos=gpos[q];\n\tnow1+=now;\n\tfor(register int i=pos;i>=1;i--){\n\t\tif(now1==0) break;\n\t\twhile(inv[e[i].data]){\n\t\t\ti--;\n\t\t\tif(i==0) break;\n\t\t}\n\t\tif(i==0) {\n\t\t\tbreak;\n\t\t}\n\t\tinv[e[i].data]=true;\n\t\tnow1--;\n\t\tsum--;\n\t}\n\tint ans1=n-p-q;\n\tif(ans1*now>=sum){\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint main(){\n\tscanf(\"%d%d%d%d\",&n,&m,&p,&q);\n\tfor(register int i=1;i<=m;i++){\n\t\tscanf(\"%lld%lld\",&s[i].len,&s[i].val);\n\t\ts[i].data=i;\n\t}\n\tfor(register int i=1;i<=m;i++){\n\t\te[i]=s[i];\n\t}\n\tfor(register int i=1;i<=p;i++){\n\t\tscanf(\"%lld\",&f[i]);\n\t}\n\tfor(register int i=1;i<=q;i++){\n\t\tscanf(\"%lld\",&g[i]);\n\t}\n\tsort(f+1,f+p+1);\n\tsort(g+1,g+q+1,comp);\n\tsort(s+1,s+m+1,comp1);\n\tfor(register int i=1;i<=p;i++){\n\t\tfpos[i]=find1(f[i]);\n\t}\n\tsort(e+1,e+m+1,comp2);\n\tfor(register int i=1;i<=q;i++){\n\t\tgpos[i]=find2(g[i]);\n\t}\n\tint l=1,r=m,ans=-1;\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid)){\n\t\t\tr=mid-1;\n\t\t\tans=mid;\n\t\t}\n\t\telse{\n\t\t\tl=mid+1;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n}\n```\n\u5f53\u6211\u4fe1\u5fc3\u6ee1\u6ee1\u7684\u4ea4\u4e0a\u53bb\u540e\uff0c\u53ea\u670980\u5206\u3002\u3002\u3002\n\n\u6211\u8c03\u4e86\u5f88\u4e45\uff0c\u600e\u4e48\u90fd\u8c03\u4e0d\u51fa\u6765\uff0c\u6700\u540e\u6211\u4e00\u6c14\u4e4b\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nlong long n,m,p,q;\nstruct sb{\n\tlong long data;\n\tlong long len,val;\n}s[200010],e[200010];\nlong long fpos[50010],gpos[50010];\nlong long f[50010],g[50010];\ninline bool comp(long long x,long long y){\n\treturn x>y;\n}\ninline bool comp1(sb x,sb y){\n\treturn x.len<y.len;\n}\ninline bool comp2(sb x,sb y){\n\treturn x.val<y.val;\n}\ninline long long find1(long long now){\n\tlong long l=1,r=m,ans=m+1;\n\twhile(l<=r){\n\t\tlong long mid=(l+r)>>1;\n\t\tif(s[mid].len>=now){\n\t\t\tr=mid-1;\n\t\t\tans=mid;\n\t\t}\n\t\telse {\n\t\t\tl=mid+1;\n\t\t}\n\t}\n\treturn ans;\n}\ninline long long find2(long long now){\n\tlong long l=1,r=m,ans=0;\n\twhile(l<=r){\n\t\tlong long mid=(l+r)>>1;\n\t\tif(e[mid].val<=now){\n\t\t\tl=mid+1;\n\t\t\tans=mid;\n\t\t}\n\t\telse {\n\t\t\tr=mid-1;\n\t\t}\n\t}\n\treturn ans;\n}\nbool inv[200010];\ninline bool check(long long now){\n\tmemset(inv,false,sizeof inv);\n\tlong long now1=0,sum=m;\n\tlong long pos,pos1;\n\tfor(register long long i=1;i<p;i++){\n\t\tnow1+=now;\n\t\tpos=fpos[i],pos1=fpos[i+1];\n\t\tfor(register long long j=pos;j<pos1;j++){\n\t\t\tif(now1==0) break;\n\t\t\tinv[s[j].data]=true;\n\t\t\tsum--;\n\t\t\tnow1--;\n\t\t}\n\t}\n\tnow1+=now;\n\tpos=fpos[p];\n\tfor(register long long i=pos;i<=m;i++){\n\t\tif(now1==0){\n\t\t\tbreak;\n\t\t}\n\t\tinv[s[i].data]=true;\n\t\tsum--;\n\t\tnow1--;\n\t}\n\tnow1=0;\n\tfor(register long long i=1;i<q;i++){\n\t\tnow1+=now;\n\t\tpos=gpos[i],pos1=gpos[i+1];\n\t\tfor(register long long j=pos;j>pos1;j--){\n\t\t\tif(now1==0) break;\n\t\t\twhile(inv[e[j].data]) {\n\t\t\t\tj--;\n\t\t\t\tif(j==0) break;\n\t\t\t}\n\t\t\tif(j==0) break;\n\t\t\tinv[e[j].data]=true;\n\t\t\tnow1--;\n\t\t\tsum--;\n\t\t}\n\t} \n\tpos=gpos[q];\n\tnow1+=now;\n\tfor(register long long i=pos;i>=1;i--){\n\t\tif(now1==0) break;\n\t\twhile(inv[e[i].data]){\n\t\t\ti--;\n\t\t\tif(i==0) break;\n\t\t}\n\t\tif(i==0) {\n\t\t\tbreak;\n\t\t}\n\t\tinv[e[i].data]=true;\n\t\tnow1--;\n\t\tsum--;\n\t}\n\tlong long ans1=n-p-q;\n\tif(ans1*now>=sum){\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nint main(){\n\tscanf(\"%lld%lld%lld%lld\",&n,&m,&p,&q);\n\tfor(register long long i=1;i<=m;i++){\n\t\tscanf(\"%lld%lld\",&s[i].len,&s[i].val);\n\t\ts[i].data=i;\n\t}\n\tfor(register long long i=1;i<=m;i++){\n\t\te[i]=s[i];\n\t}\n\tfor(register long long i=1;i<=p;i++){\n\t\tscanf(\"%lld\",&f[i]);\n\t}\n\tfor(register long long i=1;i<=q;i++){\n\t\tscanf(\"%lld\",&g[i]);\n\t}\n\tsort(f+1,f+p+1);\n\tsort(g+1,g+q+1,comp);\n\tsort(s+1,s+m+1,comp1);\n\tfor(register long long i=1;i<=p;i++){\n\t\tfpos[i]=find1(f[i]);\n\t}\n\tsort(e+1,e+m+1,comp2);\n\tfor(register long long i=1;i<=q;i++){\n\t\tgpos[i]=find2(g[i]);\n\t}\n\tlong long l=1,r=m,ans=-1;\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid)){\n\t\t\tr=mid-1;\n\t\t\tans=mid;\n\t\t}\n\t\telse{\n\t\t\tl=mid+1;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);\n}\n```\n\n\u7136\u540e\u6211\u5c31A\u4e86\u3002\u3002\u3002\u3002\u3002\u3002\u3002\n\n# \u4e0d\u5f00long long \u89c1\u7956\u5b97\uff01\uff01\uff01\n\n",
        "postTime": 1567840995,
        "uid": 113022,
        "name": "zyj578335934",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1752 \u3010\u70b9\u83dc\u3011"
    },
    {
        "content": "~~\u8bf7\u65e0\u89c6\u672c\u535a\u5ba2\u7684\u540d\u5b57~~\n\n\u8fd9\u9898\u7b2c\u4e00\u773c\u770b\u516b\u6210\u5c31\u662f\u4e2a\u5355\u8c03\u961f\u5217\u6216\u8d2a\u5fc3\uff0c\u6bd5\u7adf\u90fd\u662f\u7c7b\u4f3c\u5458\u5de5\u548c\u8001\u677f\uff08\u8001\u677f\u8981\u6709\u4e00\u4e2a\u6761\u4ef6\u9009\u5458\u5de5\uff0c\u5e74\u9f84\u4e0d\u8d85\u8fc7\u67d0\u503c\uff0c\u5e76\u662f\u53e6\u4e00\u7ef4\u5ea6\u6700\u4f18\u7684\u4e00\u4e2a\uff09\u6a21\u578b\u561b\u3002\n\n\u9996\u5148\u7406\u89e3\u4e00\u4e0b\u9898\u610f\uff1a\u8981\u53bb\u51e0\u5468\u624d\u53ef\u4ee5\u5403\u904d\u6574\u4e2a\u83dc\u5355\uff0c\u53ef\u4ee5\u7406\u89e3\u6210\u6bcf\u4e2a\u4eba\u548c\u624b\u5403\u51e0\u6b21\u624d\u53ef\u4ee5\u5403\u904d\u6574\u4e2a\u83dc\u5355\u3002\n\n\u5047\u8bbe\u95ee\u9898\u662f\u8981\u6211\u4eec\u6c42\u51fa\u6bcf\u4e2a\u4eba\u5403 $x$ \u6b21\u80fd\u4e0d\u80fd\u5403\u904d\u6574\u4e2a\u83dc\u5355\u3002\u987a\u7740\u9898\u610f\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u4eba\u5206\u6210\u4e09\u7c7b\uff1a\n\n- \u6311\u5254\u7684\u4ec1 \u603b\u5171 $p$ \u4e2a\n\n- \u8d2b\u7a77\u7684\u4ec1 \u603b\u5171 $q$ \u4e2a\n\n- \u666e\u901a\u7684\u4ec1 \u603b\u5171 $n-p-q$ \u4e2a\uff0c\u603b\u5171\u53ef\u4ee5\u5403 $x(n-p-q)$ \u9053\u83dc\u3002\n\n\u663e\u800c\u6613\u89c1\uff0c\u6709\u8d2a\u5fc3\u7b56\u7565\u662f\uff1a\u5148\u8ba9\u6311\u5254\u7684\u4ec1\u628a\u83dc\u5355\u4e2d\u8d35\u7684\u98df\u7269\u6361\u4e86\u5403\u4e86\uff0c\u518d\u628a\u5269\u4e0b\u7684\u98df\u7269\u7ed9\u8d2b\u7a77\u7684\u4ec1\u6361\u4e86\u5403\u4e86\uff0c\u6700\u540e\u518d\u628a\u5269\u4e0b\u5403\u4e0d\u5b8c\u7684\u98df\u7269\u7ed9\u666e\u901a\u7684\u4ec1\u5403\u3002\n\n\u5c06\u6311\u5254\u8005\u7684\u6311\u5254\u7a0b\u5ea6\u3001\u8d2b\u7a77\u8005\u7684\u5bb9\u5fcd\u7a0b\u5ea6\u548c\u7f8e\u98df\uff08\u6309\u7167\u7f8e\u5473\u7a0b\u5ea6\uff09\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5047\u8bbe\u4f9d\u6b21\u8003\u8651\u5230\u4e00\u4e2a\u6311\u5254\u7684\u4ec1\uff0c\u73b0\u5728\u83dc\u5355\u4e0a\u7684\u6ca1\u6709\u5403\u8fc7\u83dc\u4e2d\u6709\u4e14\u4ec5\u6709\u4ed6\u4ec0\u4e48\u90fd\u53ef\u4ee5\u5403\u7684\u4e0b\u809a\u7684\uff0c\u90a3\u4e48\u80af\u5b9a\u662f\u4f18\u5148\u5c06\u4ef7\u683c\u5927\u7684\u5403\u6389\uff08\u4f18\u5148\u3001\u4ef7\u683c\u5927\uff0c\u79cd\u79cd\u8ff9\u8c61\u8868\u660e\u6211\u4eec\u9700\u8981\u7528\u5927\u6839\u5806\uff09\uff0c\u5403 $x$ \u4e2a\u6216\u8005\u5403\u5230\u83dc\u5355\u6ca1\u6709\u6ca1\u5403\u8fc7\u7684\u83dc\u4e86\uff08\u5e72\u996d\uff0c\u4ece\u5927\u6839\u5806\u4e2d\u5220\u6570\uff09\u3002\u56e0\u4e3a\u73b0\u5728\u83dc\u5355\u4e0a\u7684\u83dc\u81ea\u5df1\u80fd\u5403\u4e0b\u809a\uff0c\u90a3\u4e48\u81ea\u7136\u5728\u4ed6\u540e\u9762\u7684\u4eba\u4e5f\u80fd\u5403\u4e0b\u809a\uff0c\u6ca1\u6709\u4ec0\u4e48\u81ea\u5df1\u8d2a\u4e86\u4e00\u70b9\u5c0f\u5229\uff0c\u5c31\u4f1a\u5931\u53bb\u5927\u5c40\u7684\u5730\u65b9\uff08\u56e0\u4e3a\u6ca1\u6709\u5904\u7406\u6389\u7684\uff0c\u4ecd\u65e7\u53ef\u4ee5\u7ed9\u540e\u8fb9\u7684\u4eba\u5904\u7406\uff09\uff0c\u4f46\u662f\u53cd\u4e4b\u4e0d\u7136\uff0c\u6240\u4ee5\u6839\u636e\u6211\u4eec\u7684\u8d2a\u5fc3\u7b56\u7565\uff0c\u5c31\u8981\u8fd9\u4e48\u505a\u3002\n\n\u600e\u4e48\u7ef4\u62a4\u73b0\u5728\u7684\u83dc\u5355\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e24\u6761\u6307\u9488\uff08\u4e0d\u662f\u771f\u7684\u6307\u9488\uff0c\u4f60\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b\u3002\u6b63\u6240\u8c13\u201c\u626b\u6570\u7ec4\u201d\uff0c\u5c31\u50cf\u662f\u62bd\u5956\u65f6\u6307\u9488\u626b\u8fc7\u5956\u52b1\u680f\u4e00\u6837\uff09\u628a\u6311\u5254\u7a0b\u5ea6\u548c\u83dc\u5355\u7684\u83dc\u7684\u6570\u7ec4\u626b\u4e00\u904d\uff0c\u6bcf\u626b\u4e00\u4e2a\u83dc\u5355\u7684\u83dc\u4e4b\u524d\uff0c\u628a\u6240\u6709\u6307\u9488\u540e\u8fb9\u7684\u6311\u5254\u7a0b\u5ea6\u5927\u4e8e\u8fd9\u9053\u83dc\u7684\u7f8e\u5473\u6210\u90fd\u7684\u6311\u5254\u8005\uff08\u5373\u5403\u4e0d\u4e0b\u8fd9\u9053\u83dc\u7684\u4ec1\uff09\u8fdb\u884c\u64cd\u4f5c\uff0c\u518d\u5c06\u8fd9\u9053\u83dc\u52a0\u5165\u83dc\u5355\uff0c\u4e8b\u5b9e\u4e0a\u5c31\u662f\u5c06\u5176\u4ef7\u683c\u6253\u5165\u5927\u6839\u5806\u4e2d\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u770b\u8d2b\u7a77\u8005\u3002\u518d\u4f7f\u7528\u4e00\u6761\u6307\u9488\u6b63\u5411\u626b\u4e00\u904d\u5bb9\u5fcd\u7a0b\u5ea6\u6570\u7ec4\uff0c\u7531\u4e8e\u8fd9\u4e9b\u4eba\u5bf9\u4ef7\u683c\u90fd\u662f\u8d8a\u6765\u8d8a\u4e0d\u80fd\u5bb9\u5fcd\uff0c\u6240\u4ee5\u5982\u679c\u83dc\u5355\u4e0a\u7684\u4e00\u6837\u83dc\u6ca1\u6709\u88ab\u5403\u6389\uff08\u4ece\u5927\u6839\u5806\u91cc\u5220\u6389\uff09\uff0c\u4e14\u4ef7\u683c\u5df2\u7ecf\u5927\u4e8e\u626b\u5230\u7684\u67d0\u4e2a\u4eba\u7684\u5bb9\u5fcd\u7a0b\u5ea6\u4e86\uff0c\u90a3\u4e48\u8fd9\u6837\u83dc\u5c31\u66f4\u4e0d\u53ef\u80fd\u88ab\u8fd9\u4e2a\u4eba\u540e\u8fb9\u7684\u4eba\u5bb9\u5fcd\uff0c\u4e5f\u4e0d\u5fc5\u4fdd\u7559\uff0c\u76f4\u63a5\u5220\u6389\u5e76\u4e14\u8ba1\u5165\u8d2b\u7a77\u8005\u5904\u7406\u4e0d\u6389\u7684\u6570\u91cf\u4e86\u3002\u5220\u6389\u7b26\u5408\u6761\u4ef6\u7684\u83dc\u4e4b\u540e\uff0c\u8fd9\u4e2a\u8d2b\u7a77\u8005\u6309\u7740\u6311\u5254\u8005\u540c\u6837\u7684\u65b9\u5f0f\u5e72\u996d\u5220\u6570\u5c31\u884c\u4e86\u3002\n\n\u6700\u540e\u5c31\u662f\u666e\u901a\u4ec1\u4e86\u3002\u6700\u540e\u4e0d\u80fd\u88ab\u5904\u7406\u6389\u7684\u83dc\u54c1\u6570\u91cf\u5c31\u662f\u8d2b\u7a77\u8005\u5904\u7406\u4e0d\u6389\u7684\u6570\u91cf+\u6700\u540e\u5927\u6839\u5806\u4e2d\u8fd8\u5269\u4e0b\u7684\u83dc\u54c1\u6570\u91cf\uff0c\u4e0e\u6240\u6709\u666e\u901a\u4ec1\u548c\u624b\u80fd\u5403\u7684\u83dc\u54c1\u6570\u91cf $x(n-p-q)$ \u4f5c\u6bd4\u8f83\uff0c\u5373\u53ef\u77e5\u9053\u6bcf\u4eba\u5403 $x$ \u6b21\u80fd\u5403\u904d\u6574\u4e2a\u83dc\u5355\u7684\u53ef\u884c\u6027\u4e86\u3002\n\n\u53ef\u60f3\u800c\u77e5\uff0c\u8fd9\u9898\u662f\u4e2a\u4e8c\u5206\u7b54\u6848+\u5927\u6839\u5806\u9898\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\log^2m)$\uff0c\u5f00 $O(2)$ \u5c31\u8fc7\u4e86\u3002\n\n\u4ee3\u7801\u653e\u4e86\u597d\u4e86\uff0c\u9ebb\u98ce\u4e11\u8bf7\u52ff\u55b7o\\_o\n\n```\n#include<bits/stdc++.h>\n#define maxn 50005\n#define maxm 200005\n#define int long long\n#define F(_i,_j,_k) for(int _i=_j;_i<=_k;_i++)\n#define AF(_i,_b) for(;_b;_i++)\n#define W(_b) while(_b)\nusing namespace std;\n\nstruct veg{\n\tint grt,prc;\n\tbool operator<(const veg&C)const{\n\t\treturn grt>C.grt;\n\t}\n}a[maxm];\n\nint n,m,p,q,b[maxn],c[maxn],L=0,R=maxm;\n\nsigned main(){\n\tcin>>n>>m>>p>>q;\n\tif(m==0){\n\t\tcout<<0;\n\t\treturn 0;\n\t}\n\tF(i,1,m)cin>>a[i].grt>>a[i].prc;\n\tF(i,1,p)cin>>b[i];\n\tF(i,1,q)cin>>c[i];\n\tsort(a+1,a+m+1);\n\tsort(b+1,b+p+1);\n\treverse(b+1,b+p+1);\n\tsort(c+1,c+q+1);\n\treverse(c+1,c+q+1);\n\tW(L<R-1){\n\t\tint tot=1,mid=(L+R)/2,cnt=0;\n\t\tpriority_queue<int>Z;\n\t\tF(i,1,m){\n\t\t\tAF(tot,tot<=p&&b[tot]>a[i].grt){\n\t\t\t\tF(o,1,mid){\n\t\t\t\t\tif(Z.empty())break;\n\t\t\t\t\tZ.pop();\n\t\t\t\t}\n\t\t\t}\n\t\t\tZ.push(a[i].prc);\n\t\t}\n\t\tAF(tot,tot<=p){\n\t\t\tF(o,1,mid){\n\t\t\t\tif(Z.empty())break;\n\t\t\t\tZ.pop();\n\t\t\t}\n\t\t}\n\t\tF(i,1,q){\n\t\t\tW(c[i]<Z.top()&&Z.size()>0){\n\t\t\t\tZ.pop();\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t\tF(o,1,mid){\n\t\t\t\tif(Z.empty())break;\n\t\t\t\tZ.pop();\n\t\t\t}\n\t\t}\n\t\tif((n-p-q)*mid>=cnt+Z.size())R=mid;\n\t\telse L=mid;\n\t}\n\tif(R==maxm)cout<<-1;\n\telse cout<<R;\n\treturn 0;\n}\n```\n\n\u5148\u795d\u5927\u5bb6\u516d\u4e00\u513f\u7ae5\u8282\u5237\u9898\u5feb\u4e50\u554a\uff01",
        "postTime": 1653863257,
        "uid": 472950,
        "name": "Mr_Terminator",
        "ccfLevel": 4,
        "title": "\u4e8c\u5206\u7b54\u6848\u9898\uff0c\u719f\u4e0d\u719f\u5440\u4f60\uff0c\u8d2a\u5fc3\u62e9\u7565\u6cd5\uff0c\u8d2a\u5fc3\u8d2a\u54ea\u91cc"
    }
]