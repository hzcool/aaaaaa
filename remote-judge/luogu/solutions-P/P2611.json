[
    {
        "content": "\u6b22\u8fce\u6765\u535a\u5ba2\u9605\u8bfb [Dew~](https://www.cnblogs.com/ppprseter/p/9536806.html)\n\n\u6211\u4eec\u9996\u5148\u5f04\u6e05\u695a\u6211\u4eec\u548b\u7edf\u8ba1\u7684\n\n\u5148\u628a\u77e9\u5f62\u84dd\u767d\u51fa\u6765\n\n![](http://m.qpic.cn/psb?/V14VFGnz4fbJRr/.oJBgY1D2z8TiTAK3qsETZwermJTc9S2knzY.rrwDa8!/b/dDUBAAAAAAAA&bo=jwKlAY8CpQEDCSw!&rf=viewer_4)\n\n\u7136\u540e\u6211\u4eec\u5bf9\u77e9\u5f62\u56fa\u5b9a\u4e00\u4e2a\u4e0b\u8fb9\u754c\uff0c\u8bbe\u4e3a$down$\n\n\u7136\u540e\u6211\u4eec\u679a\u4e3e\u6240\u53d6\u77e9\u5f62\u7684\u5de6\u8fb9\u754c\u4e0e\u53f3\u8fb9\u754c\n\n\u5982\u4f55\u4e0d\u91cd\u4e0d\u6f0f\u7684\u628a\u6240\u6709\u53ef\u884c\u4e0a\u8fb9\u754c\u7edf\u8ba1\u5462\uff1f\n\n![](http://m.qpic.cn/psb?/V14VFGnz4fbJRr/BesSo3e*PU81v3FEWWMQ3lMRrPOMZWF9xI8apc*kdds!/b/dEQBAAAAAAAA&bo=2wKxAdsCsQEDGTw!&rf=viewer_4)\n\n\u6bd4\u65b9\u8bf4\uff0c\u9ed1\u7ebf\u662f\u77e9\u5f62\u4e0b\u8fb9\u754c\uff0c\u5de6\u53f3\u8fb9\u754c\u73b0\u5728\u662f\u4efb\u610f\u679a\u4e3e\u7684\uff0c\u90a3\u4e48\u7ea2\u8272\u7bad\u5934\u8303\u56f4\u5185\u5c31\u662f\u4e0a\u8fb9\u754c\u53ef\u53d6\u7684\u96c6\u5408\u4e86\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u4e0a\u8fb9\u754c\u7684\u6700\u4e0b\u53d6\u503c\u70b9\u4e0e\u6700\u4f4e\u7684\u90a3\u4e2a\u70b9\u76f8\u8fde\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e2a\u5de6\u53f3\u8fb9\u754c\uff0c\u7136\u540e\u627e\u5230\u6700\u4f4e\u7684\u90a3\u4e2a\u70b9\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a~~\u4f18\u79c0~~\u7684$O(N^4)$\u7684\u89e3\u6cd5\u8fa3\n\n\u6ce8\uff1a\u8fd9\u91cc\u628a\u77e9\u5f62\u89c4\u6a21\u79f0\u4f5c$N$\uff0c\u628a\u70b9\u7684\u4e2a\u6570\u79f0\u4f5c$K$\n\n\u53d6\u6700\u4f4e\u70b9\u7684\u4f18\u5316\u5f88\u5bb9\u6613\u641e\u6210$O(N^3)$\u7684\uff0c\u7136\u800c\u8fd9\u6837\u5e03\u661f\u3002\n\n------------\n\u6211\u4eec\u50cfCDQ\u5206\u6cbb\u90a3\u6837\u8fdb\u884c\u7edf\u8ba1\n\n\u5177\u4f53\u7684\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u56fa\u5b9a\u7684\u4e0b\u8fb9\u754c\uff0c\u6bcf\u4e00\u5217\u90fd\u6709\u552f\u4e00\u786e\u5b9a\u7684\u6700\u4f4e\u7684\u70b9\n\n\u6211\u4eec\u4ee5\u7b2c$x$\u5217\u7684$x$\u4e3a\u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u5173\u952e\u5b57\uff0c\u4ee5\u90a3\u4e2a\u6700\u4f4e\u7684\u70b9\u7684\u884c\u6570$y$\u4e3a\u5927\u6839\u5806\u7684\u5173\u952e\u5b57\uff0c\u5efa\u7acb\u4e00\u9897$treap$\n\n\u5728\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u56fa\u5b9a\u7684\u4e0b\u8fb9\u754c\u65f6\uff0c\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\u90fd\u662f (\u5de6\u513f\u5b50\u5927\u5c0f+1)$\\times$ (\u53f3\u513f\u5b50\u5927\u5c0f+1) $\\times$ \u5806\u7684\u5173\u952e\u5b57\n\n\u8868\u793a\uff0c\u5de6\u8fb9\u533a\u95f4\u53ef\u53d6\u96c6\u5408\uff0c\u53f3\u8fb9\u533a\u95f4\u53ef\u53d6\u96c6\u5408\u548c\u4e0a\u8fb9\u754c\u53ef\u53d6\u96c6\u5408\n\n\u5f53\u7136\u5806\u503c\u53ef\u80fd\u4f1a\u53d8\uff0c\u6211\u4eec\u9700\u8981\u5728\u6539\u53d8\u7684\u65f6\u5019\u8fdb\u884c\u8c03\u6574\n\n\u8fd9\u65f6\u5019\u4e00\u4e2a\u5f88\u663e\u7136\u7684$O(N^2)$\u505a\u6cd5\u5c31\u6709\u4e86\n\n\u6211\u4eec\u6539\u5b8c\u4e00\u884c\u53bb\u904d\u5386\u6574\u68f5\u6811\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u81f3\u4e8e\u4fee\u6539\u7684\u590d\u6742\u5ea6\uff0c\u56e0\u4e3a\u6570\u636e\u968f\u673a\uff0c\u53ef\u4ee5\u770b\u505a\u662f$O(KlogN)$\u7684\n\n\u5982\u679c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u5b83\u53ca\u5b83\u513f\u5b50\u7684\u8d21\u732e\uff0c\u6bcf\u6b21\u6539\u7684\u65f6\u5019\u5c31\u53ea\u9700\u8981\u67e5\u8be2\u6839\u8282\u70b9\u5c31\u884c\u8fa3\n\n\u590d\u6742\u5ea6\uff1a$O(KlogN)$(\u6570\u636e\u968f\u673a)\n\n------------\n**Code:**\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define ls ch[now][0]\n#define rs ch[now][1]\n#define fa par[now]\n#define ll long long\nconst int N=1e5+10;\nconst int M=4e4+10;\nint n,m,k;\nstd::pair <int,int > dx[N];\nll sum[M],dat[M],siz[M],ans;int ch[M][2],par[M],root;\nint build(int l,int r)\n{\n    if(l>r) return 0;\n    if(l==r) {siz[l]=1;return l;}\n    int now=l+r>>1;\n    ls=build(l,now-1);\n    if(ls) par[ls]=now;\n    rs=build(now+1,r);\n    if(rs) par[rs]=now;\n    siz[now]=siz[ls]+siz[rs]+1;\n    return now;\n}\nvoid updata(int now)\n{\n    sum[now]=dat[now]*(siz[ls]+1ll)*(siz[rs]+1ll)+sum[ls]+sum[rs];\n    siz[now]=siz[ls]+siz[rs]+1;\n}\nint identity(int now){return ch[fa][1]==now;}\nvoid connect(int f,int now,int typ){fa=f;ch[f][typ]=now;}\nvoid Rotate(int now)\n{\n    int p=fa,typ=identity(now);\n    if(p==root) root=now;\n    connect(p,ch[now][typ^1],typ);\n    connect(par[p],now,identity(p));\n    connect(now,p,typ^1);\n    updata(p),updata(now);\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&k);\n    root=build(1,m);\n    for(int i=1;i<=k;i++)\n        scanf(\"%d%d\",&dx[i].first,&dx[i].second);\n    std::sort(dx+1,dx+1+k);\n    int las=1;dat[0]=n+1;\n    for(int i=1;i<=k;i++)\n    {\n        while(las!=dx[i].first)\n            ans+=sum[root],++las;\n        int now=dx[i].second;\n        dat[now]=dx[i].first;\n        while(dat[fa]<dat[now])\n            Rotate(now);\n        while(now) updata(now),now=fa;\n    }\n    while(las<=n)\n        ans+=sum[root],++las;\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1535266715,
        "uid": 63727,
        "name": "ButterflyDew",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2611 \u3010[ZJOI2012]\u5c0f\u84dd\u7684\u597d\u53cb\u3011"
    },
    {
        "content": "## \u524d\u8a00\uff1a\n\n\u00a0 \u00a0\u4e0a\u6765\u4e00\u770b\uff0c\u8fd9\u4e0d\u662f\u8981\u5148$C\\times R$\u5904\u7406\u4e00\u4e0b\u5417\uff0c\u4e8e\u662f\u770b\u5230\u4e86\u6570\u636e\u8303\u56f4![](http://www.wjyyy.top/wp-content/uploads/2018/07/20170701215640_mRLKu.thumb_.700_0-e1530920143970.jpeg)\n\n\u00a0 \u00a0\u904d\u5386\u4e00\u904d\u90fd\u4e0d\u8ba9\u600e\u4e48\u778e\u641e\u3002\u3002\u3002\u4e0d\u8fc7N\u662f100000+\u968f\u673a\u6570\u636eemmm\n   \n   \u611f\u8c22\u5199\u51fa\u8ba9\u6211\u770b\u5f97\u61c2\u5f97\u9898\u89e3\u7684[xyz32768](https://blog.csdn.net/xyz32768/article/details/80457425)\n   \n   \u4ee5\u53ca\u6211\u7684\u535a\u5ba2[\u4f20\u9001\u95e8](http://www.wjyyy.top/763.html)\n\n## \u9898\u89e3\uff1a\n\n\u00a0 \u00a0\u7edf\u8ba1\u6709\u4e00\u4e2a\u8d44\u6e90\u70b9\u7684\u77e9\u5f62\u4e2a\u6570\uff0c\u611f\u89c9\u4e00\u65f6\u534a\u4f1a\u63a8\u4e0d\u51fa\u516c\u5f0f\u3002\u4e8e\u662f\u4e86\u89e3\u4e86**\u8865\u96c6\u8f6c\u6362**\uff0c\u5c31\u662f\u7528\u6240\u6709\u77e9\u5f62\u4e2a\u6570\u51cf\u53bb\u6ca1\u6709\u8d44\u6e90\u70b9\u7684\u4e2a\u6570\uff0c\u8c8c\u4f3c\u6709\u70b9\u50cf[**Vijos 1225 \u6708\u997c\u76d2**](https://vijos.org/p/1255)\uff0c\u4e0d\u8fc7\u8fd8\u662f\u4e0d\u597d\u60f3\u3002**\u5148\u770b\u600e\u4e48\u7edf\u8ba1\u6240\u6709\u77e9\u5f62\u7684\u4e2a\u6570**\uff1a\u56e0\u4e3a\u77e9\u5f62\u662f\u7531\u7ebf\u6bb5\u00d7\u7ebf\u6bb5\u5f97\u5230\u7684\uff0c\u6240\u4ee5\u7528\u6a2a\u7ebf\u6bb5\u4e2a\u6570\u4e58\u4e0a\u7eb5\u7ebf\u6bb5\u4e2a\u6570\uff0c\u5c31\u662f\u77e9\u5f62\u4e2a\u6570\u3002\u957f\u5ea6\u4e3a1\u7684\u6a2a\u7ebf\u6bb5\u6709$C$\u6761\uff0c\u957f\u5ea6\u4e3a2\u7684\u6a2a\u7ebf\u6bb5\u6709$C-1$\u6761\uff0c\u2026\u2026\uff0c\u957f\u5ea6\u4e3a$C$\u7684\u7ebf\u6bb5\u67091\u6761\uff0c\u540c\u7406\u957f\u5ea6\u4e3a1\u7684\u7eb5\u7ebf\u6bb5\u6709$R$\u6761\u7b49\u7b49\u3002\u56e0\u6b64\u6a2a\u7ebf\u6bb5\u7684\u4e2a\u6570\u4e3a$\\frac{C(C+1)}2$\uff0c\u7eb5\u7ebf\u6bb5\u7684\u4e2a\u6570\u4e3a$\\frac{R(R+1)}2$\uff0c\u76f8\u4e58\u5c31\u5f97\u5230\u4e86$\\frac{C(C+1)R(R+1)}4$\u4e2a\u77e9\u5f62\uff0c\u4e58\u5f00\u4e4b\u540e\uff0c\u53d1\u73b0\u8981\u5f00**long long**\uff08\u4e0d\u5f00long long \u662f\u670910\u5206\u7684\uff09\u3002\n\n\n\n\u00a0 \u00a0\u8fd9\u4e2a\u9898\u8981\u63a8\u5bfc\u7684\u6570\u5b66\u516c\u5f0f\u5f88\u591a\uff0c\u56e0\u4e3a\u6211\u4eec\u4ecd\u7136\u8981\u8ba1\u7b97**\u7a7a\u77e9\u5f62**\u4e2a\u6570\u3002\n\n\u00a0 \u00a0\u63a5\u7740\u770b\u600e\u4e48\u7edf\u8ba1\u7a7a\u77e9\u5f62\u4e2a\u6570\uff0c\u6839\u636e\u6837\u4f8b\uff0c\u7b2c\u4e00\u884c\u662f\u8fd9\u6837\u7684\uff08O\u8868\u793a\u7a7a\u70b9\uff0cX\u8868\u793a\u6709\u8d44\u6e90\uff09\n\n```cpp\nOXOOO\n```\n\u00a0 \u00a0\u56fe\u4e2d\u5171\u67097\u4e2a\u7a7a\u77e9\u5f62\uff0c\u5de6\u8fb9\u7684\u4e00\u4e2aO\u8d21\u732e\u4e861\u4e2a\uff0c\u53f3\u8fb9\u76843\u4e2aO\u8d21\u732e\u4e866\u4e2a\u3002\u8ba1\u7b97\u65b9\u5f0f\u5c31\u662f\u5bf9\u6bcf\u4e00\u4e2a**\u7eb5\u5411\u8fde\u7eed\u6700\u957f\u7684O**\uff0c\u7528\u5b83\u53ca\u5b83\u5de6\u8fb9**\u8fde\u7eed\u7eb5\u5411 _\u4e0d\u6bd4\u5b83\u77ed_ \u7684O**\u7684\u4e2a\u6570\u4e58\u4e0a\u5b83\u53ca\u5b83\u53f3\u8fb9**\u8fde\u7eed\u7eb5\u5411\u6bd4\u5b83\u957f\u7684O**\u7684\u4e2a\u6570\uff0c\u5c31\u4e0d\u4f1a\u51b2\u7a81\u4e86\u3002\u4e5f\u5c31\u662f1\u00d71+1\u00d71+2\u00d71+3\u00d71=7\u3002\u90a3\u5982\u679c\u77e9\u5f62\u7684\u5bbd\u5927\u4e8e1\u600e\u4e48\u5904\u7406\uff1f\u4e00\u6837\u5730\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u8fd9\u6837\u8ba1\u7b97\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n```cpp\nOXOOO\nOOXOO\n```\n\u00a0 \u00a0\u5bf9\u4e8e\u7b2c\u4e8c\u884c\u6700\u5de6\u8fb9\u4e00\u4e2aO\uff0c\u5982\u679c\u6211\u4eec\u540c\u6837\u8ba1\u7b97\uff0c\u5b83**\u6240\u8d21\u732e**\u7684\u77e9\u5f62\u67092(\u9ad8\u5ea6)\u00d71(\u5de6\u8fb9)\u00d71(\u53f3\u8fb9)=2\u4e2a\uff08\u4ee5\u6b64\u7c7b\u63a8\u7eb5\u5411\u9ad8\u5ea6\u4e3ak\u7684\u77e9\u5f62**\u65b0**\u8d21\u732e\u7684\u77e9\u5f62\u6709k\u4e2a\uff09\uff0c\u7b2c\u4e8c\u4e2aO\u8d21\u732e\u4e861\u00d72\u00d71=2\u4e2a\uff0c\u7b2c\u56db\u4e2aO\u8d21\u732e\u4e862\u00d71\u00d71=2\u4e2a\uff0c\u7b2c\u4e94\u4e2a\u8d21\u732e\u4e862\u00d72\u00d71=4\u4e2a\u3002\u5219\u7b2c\u4e8c\u884c\u4e00\u5171\u67098\u4e2a\u7a7a\u77e9\u5f62\u3002\n\n\u00a0 \u00a0\u5982\u4f55\u7ef4\u62a4\u5e76\u5c3d\u5feb\u8ba1\u7b97\u8fd9\u4e2a\u7ed3\u679c\u5462\uff1f\u56e0\u4e3a**\u6570\u636e\u968f\u673a**\uff0c\u5bf9\u4e8e\u7b2ci\u5217\u5230\u6b64\u8fde\u7eedO\u7684\u4e2a\u6570\uff0c\u7528t[i]\u6765\u8868\u793a\uff0c\u628ai\u7684\u5e8f\u53f7\u7528Treap\u7ef4\u62a4\uff08\u968f\u673a\u65f6Treap\u7684\u6df1\u5ea6\u6709\u4fdd\u8bc1\uff09\uff0c\u518d\u7528t[i]\u6765\u7ef4\u62a4Treap\u3002\u5728Treap\u4e0a\uff0c\u6709BST\u7684\u6027\u8d28\uff0c\u6240\u4ee5\u4e0e\u67d0\u4e2a\u4f4d\u7f6e\u76f8\u90bb\u7684\u4e14\u6bd4\u5b83\u77ed\u7684\u70b9\uff0c\u90fd\u5728\u5b83\u7684\u5de6\u53f3\u5b69\u5b50\u5904\uff1b\u56e0\u4e3a\u6bcf\u5411\u4e0b\u6269\u5c55\u4e00\u884c\u5c31\u4f1a\u4f7f\u5f88\u591a\u4e2at[i]\u81ea\u589e1\uff0c\u6240\u4ee5\u6211\u4eec\u7ef4\u62a4t[i]\u4fdd\u5b58\u7684\u662f\u7b2ci\u5217\u4ee5\u5f53\u524d\u884c\u4f4d\u7f6e\u4ece\u4e0b\u5f80\u4e0a\u6570\u7b2c\u4e00\u4e2aX\u5728\u54ea\u4e00\u884c\uff0c\u6bcf\u6b21\u5904\u7406\u7528\u5f53\u524d\u884c\u6570\u51cf\u53bbt[i]\u5c31\u662f**\u65b0\u8d21\u732e**\u77e9\u5f62\u4e2a\u6570\u3002\u90a3\u4e48\u8fd9\u6837\u6211\u4eec\u6309t[i]\u7ef4\u62a4\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u4e0a\u9762\u7684**\u8fde\u7eed\u7eb5\u5411\u6bd4\u5b83\u957f**\u7684\u5c31\u5206\u522b\u662f\u5de6\u53f3\u5b69\u5b50\u7684\u6570\u91cf+1\u4e86\u3002\u65b0\u589e\u77e9\u5f62\u4e2a\u6570$=(sz[ls]+1)(sz[rs]+1)$\uff0cTreap\u6bcf\u6b21\u65cb\u8f6c\u4e5f\u8981\u7ef4\u62a4\u8fd9\u4e2a\u503c\u3002\n\n\u00a0 \u00a0**\u6784\u5efaTreap\uff1a**\u4e00\u5f00\u59cb\u6240\u6709\u70b9\u7684\u6743\u503c\u90fd\u4e3a0\uff0c\u6211\u4eec\u76f4\u63a5\u6309\u7167BST\u6784\u5efa\u5c31\u53ef\u4ee5\u4e86\uff0c\u6bcf\u6b21\u53d6\u4e2d\u70b9\uff0c\u5de6\u53f3\u533a\u95f4\u4f5c\u4e3a\u5de6\u53f3\u5b69\u5b50\uff0c\u9012\u5f52\u5efa\u6811\u3002\n\n\u00a0 \u00a0Treap\u91cc\u8981\u5b58$t[i]\u00d7(sz[i_{ls}]+1)(sz[i_{rs}]+1)$\u3001\u5b50\u6811\u4e2d\u8fd9\u4e2a\u6570\u636e\u7684\u548c\u4ee5\u53ca\u57fa\u7840\u7684BST\u4fe1\u606f\u3002\u56e0\u4e3a\u6ca1\u5b66\u8fc7Treap\uff0c\u6211\u7684Treap\u662f\u6309splay\u98ce\u683c\u5199\u7684\uff0c\u4e0d\u8981\u592a\u4ecb\u610f\u3002\n\n#### \u5e73\u8861\u6811\u591amaintain\u603b\u6ca1\u6709\u9519\u3002\n\n\u00a0 \u00a0\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(C+R+N\\log C)$\n   \n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define mid (l+r>>1)\nint r,c,n;\nstruct node\n{\n    int key,v;//\u5173\u952e\u5b57 \u7ef4\u62a4\u503c\n    long long sz,ans,anstt;//\u5b50\u6811\u5927\u5c0f \u4e58\u79ef(v\u4e0esz) \u4e58\u79ef\u4e4b\u548c v\u4e4b\u548c\n    long long sztt;\n    node *s[2];\n    node(int key,int v)\n    {\n        this->key=key;\n        this->v=v;\n        sz=1;\n        sztt=1;\n        ans=0;\n        anstt=0;\n        s[0]=NULL;\n        s[1]=NULL;\n    }\n    node()\n    {\n        v=0;\n        sz=1;\n        sztt=1;\n        ans=1;\n        anstt=0;\n        s[0]=NULL;\n        s[1]=NULL;\n    }\n    long long getsz()//\u8bbf\u95ee\u8282\u70b9\u5927\u5c0f\n    {\n        if(!this)\n            return 0;\n        return sz;\n    }\n    long long getsztt()\n    {\n        if(!this)\n            return 0;\n        return sztt;\n    }\n    long long getanstt()\n    {\n        if(!this)\n            return 0;\n        return anstt;\n    }\n    long long getd(int x)//\u8be2\u95ee\u65b9\u5411\n    {\n        if(x==key)\n            return -1;\n        return x>key;\n    }\n    long long getv()//\u8bbf\u95ee\u7ef4\u62a4\u503c\n    {\n        if(!this)\n            return -1;\n        return v;\n    }\n    void maintain()\n    {\n        sz=s[0]->getsz()+s[1]->getsz()+1;\n        sztt=(s[0]->getsz()+1)*(s[1]->getsz()+1)+s[0]->getsztt()+s[1]->getsztt();\n        ans=v*(s[0]->getsz()+1)*(s[1]->getsz()+1);\n        anstt=ans+s[0]->getanstt()+s[1]->getanstt();\n    }\n}*root=NULL;\nvoid build(node *&rt,int l,int r)\n{\n    rt=new node(mid,0);\n    if(l==r)\n        return;\n    if(mid>l)\n        build(rt->s[0],l,mid-1);\n    if(mid<r)\n        build(rt->s[1],mid+1,r);\n    rt->maintain();\n    return;\n}\nvoid Rotate(node *&rt,int d)\n{\n    node *tmp=rt->s[d];\n    rt->s[d]=tmp->s[d^1];\n    tmp->s[d^1]=rt;\n    rt->maintain();\n    rt=tmp;\n    rt->maintain();\n    return;\n}\nvoid treap(node *&rt)\n{\n    //\u5927\u6839\u5806\n    if(rt->v>rt->s[0]->getv()&&rt->v>rt->s[1]->getv())\n        return;\n    if(rt->s[0]->getv()>rt->s[1]->getv())//\u628a\u5de6\u5b69\u5b50\u62c9\u4e0a\u6765\n    {\n        Rotate(rt,0);\n        treap(rt->s[1]);\n    }\n    else\n    {\n        Rotate(rt,1);\n        treap(rt->s[0]);\n    }\n    rt->maintain();\n}\nvoid change(node *&rt,int t,int x)//\u628at\u6539\u4e3ax\n{\n    int d=rt->getd(t);\n    if(d==-1)\n    {\n        rt->v=x;//\u53ef\u80fd\u6709\u95ee\u9898\n        rt->maintain();\n        treap(rt);\n        rt->maintain();\n        return;\n    }\n    change(rt->s[d],t,x);\n    treap(rt);\n    rt->maintain();\n}\nstruct pnt\n{\n    int x,y;//\u884c \u5217\u6570\n    friend bool operator <(pnt a,pnt b)\n    {\n        if(a.x!=b.x)\n            return a.x<b.x;\n        return a.y<b.y;\n    }\n}p[101000];\nint main()\n{\n    scanf(\"%d%d%d\",&r,&c,&n);//r\u884cc\u5217\n    build(root,1,c);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d%d\",&p[i].x,&p[i].y);\n    std::sort(p+1,p+1+n);\n    int cur=1;\n    long long sum=(long long)((r+1)*r/2)*((c+1)*c/2);\n    for(int i=1;i<=r;i++)\n    {\n        while(p[cur].x==i)\n        {\n            change(root,p[cur].y,i);\n            cur++;\n        }\n        sum-=i*(root->sztt)-root->anstt;\n    }\n    printf(\"%lld\\n\",sum);\n    return 0;\n}\n```",
        "postTime": 1530951431,
        "uid": 63539,
        "name": "wjyyy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2611 \u3010[ZJOI2012]\u5c0f\u84dd\u7684\u597d\u53cb\u3011\u3010Treap\u3011\u3010\u626b\u63cf\u7ebf\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7528 FHQ Treap \u771f\u7684\u5f88\u597d\u5199\uff0c\u968f\u4fbf\u600e\u4e48\u5199\u90fd\u8d85\u4e0d\u8fc7 1.5kb\uff1a\u8ddf\u697c\u4e0b\u51e0\u4f4d\u5927\u4f6c\u7684\u6bd4\u8d77\u6765\u771f\u7684\u77ed\u591a\u4e86\u3002\n\n\u4ece\u4e0a\u5230\u4e0b\u626b\u63cf\uff0c\u5219\u6bcf\u5217\u4e0a\u9762\u6700\u8fd1\u7684\u5173\u952e\u70b9\u7684\u884c\u6570\u6784\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a $C$ \u7684\u5e8f\u5217\u3002\u6211\u4eec\u7528 FHQ Treap \u7ef4\u62a4\u8fd9\u4e2a\u5e8f\u5217\u7684\u7b1b\u5361\u5c14\u6811\uff08\u4e5f\u5c31\u662f\u4ee5\u4e0b\u6807\u4e3a\u6392\u5e8f\u4e8c\u53c9\u6811\uff0c\u503c\u4e3a\u5927\u8ddf\u5806\u7684 Treap\uff09\uff0c\u9700\u8981\u652f\u6301\uff1a\u4fee\u6539\u4e00\u4e2a\u6570\u7684\u6743\u503c\uff1b\u8be2\u95ee $\\sum rnk_i(s_{l_i}+1)(s_{r_i}+1)$\u3002\n\nFHQ Treap \u5982\u4f55\u4fee\u6539\u5462\uff1f\u6309\u7167**\u6743\u503c**\u5206\u88c2\uff0c\u628a\u4e0b\u6807 $<x$ \u7684\u5206\u51fa\u6765\uff0c\u5728\u7b2c\u4e8c\u68f5\u6811\u4e2d\u7684\u6743\u503c\u6700\u5c0f\u70b9\u5c31\u662f\u7b2c $x$ \u9879\uff0c\u76f4\u63a5\u4fee\u6539\u5c31\u884c\u3002\n\n\u4ee3\u7801\u5982\u4e0b\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pr;\nint c[100005][2],s[100005],v[100005],rnk[100005],R,C,n,root,tot;\nll sum[100005],ans=0;\nvector<int> t[100005];\nvoid Pushup(int p){\n\ts[p]=s[c[p][0]]+s[c[p][1]]+1;\n\tsum[p]=sum[c[p][0]]+sum[c[p][1]]+1ll*(s[c[p][0]]+1)*(s[c[p][1]]+1)*rnk[p];\n}\nint Build(int l,int r){\n\tif(l>r)return 0;\n\tif(l==r)return s[l]=1,v[l]=l,l;\n\tint m=(l+r)/2;\n\tv[m]=m,c[m][0]=Build(l,m-1),c[m][1]=Build(m+1,r);\n\treturn Pushup(m),m;\n}\npr Split(int now,int k) {//\u6743\u503c<k\u7684\n\tif(!now)return make_pair(0,0);\n\tif(v[now]>=k) {\n\t\tpr t=Split(c[now][0],k);\n\t\tc[now][0]=t.second;\n\t\tPushup(now);\n\t\treturn make_pair(t.first,now);\n\t} else {\n\t\tpr t=Split(c[now][1],k);\n\t\tc[now][1]=t.first;\n\t\tPushup(now);\n\t\treturn make_pair(now,t.second);\n\t}\n}\nint Merge(int x,int y) {\n\tif(!x||!y)return x+y;\n\tif(rnk[x]>rnk[y])return c[x][1]=Merge(c[x][1],y),Pushup(x),x;\n\telse return c[y][0]=Merge(x,c[y][0]),Pushup(y),y;\n}\nvoid Insert(int x,int r){\n\tpr t=Split(root,x),t2=Split(t.second,x+1);\n\trnk[t2.first]=r,Pushup(t2.first);\n\troot=Merge(t.first,Merge(t2.first,t2.second));\n}\nint main(){\n\tcin>>R>>C>>n;\n\tfor(int i=1,x,y;i<=n;i++)cin>>x>>y,t[x].push_back(y);\n\troot=Build(1,C),tot=C;\n\tfor(int i=1;i<=R;i++){\n\t\tfor(int j:t[i])Insert(j,i);\n\t\tans+=1ll*i*C*(C+1)/2-sum[root];\n\t}\n\tcout<<1ll*R*(R+1)/2*C*(C+1)/2-ans;\n}\n```",
        "postTime": 1589874424,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2611 \u3010[ZJOI2012]\u5c0f\u84dd\u7684\u597d\u53cb\u3011"
    },
    {
        "content": "\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u770b[\u8fd9\u91cc](https://www.cnblogs.com/zhangleo/p/11083820.html)\n\n\u9996\u5148\u8003\u8651\u5bb9\u65a5\n\n\u6211\u4eec\u8ba1\u7b97\u51fa\u6240\u6709\u6ca1\u6709\u70b9\u5728\u5176\u4e2d\u7684\u77e9\u5f62\uff0c\u7136\u540e\u7528\u6240\u6709\u77e9\u5f62\u51cf\u53bb\u8fd9\u4e9b\u77e9\u5f62\u5373\u53ef\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u8ba1\u7b97\u6ca1\u6709\u70b9\u5728\u5176\u4e2d\u7684\u77e9\u5f62\n\n\u91c7\u7528\u626b\u63cf\u7ebf\u7684\u601d\u60f3\uff0c\u4ece\u4e0a\u5411\u4e0b\u4e00\u884c\u4e00\u884c\u626b\uff0c\u5047\u8bbe\u6211\u4eec\u626b\u5230\u7684\u884c\u7f16\u53f7\u662f$a$\uff0c\u7136\u540e\u8003\u8651\u5982\u679c\u5de6\u53f3\u7684\u5217\u7aef\u70b9\u662f$[l,r]$\uff0c\u90a3\u4e48\u8fd9\u4e00\u884c\u5411\u4e0a\u81f3\u591a\u80fd\u6269\u5c55\u51e0\u4e2a\u77e9\u5f62\u5462\uff1f\n\n\u663e\u7136\uff0c\u6211\u4eec\u8981\u627e\u5230\u533a\u95f4$[l,r]$\u4e2d\u4f4d\u7f6e\u6700\u4e0b\u9762\u7684\u90a3\u4e2a\u70b9\uff0c\u8bbe\u5176\u884c\u7f16\u53f7\u4e3a$w[i]$\uff0c\u90a3\u4e48\u77e9\u5f62\u6570\u91cf\u5373\u4e3a$a-w[i]$\n\n\u5f88\u6e05\u695a\u7684\u5c31\u80fd\u770b\u5230\uff0c\u73b0\u5728\u626b\u5230\u7684\u662f\u7ea2\u8272\u7684$a$\uff0c\u5de6\u53f3\u533a\u95f4\u662f\u84dd\u8272\u7684$[l,r]$\uff0c\u90a3\u4e48\u4e0a\u754c\u4f1a\u88ab\u9650\u5236\u5728$w[i]$\u8fd9\u6761\u9ec4\u7ebf\u5904\uff0c\u80fd\u5411\u4e0a\u5ef6\u4f38\u7684\u77e9\u5f62\u6570\u91cf\u4e5f\u5c31\u662f$a-w[i]$\n\n\u7531\u4e8e$a$\u662f\u5b9a\u503c\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u6bcf\u4e2a$w[i]$\u4f1a\u5bf9\u591a\u5c11\u4e2a\u533a\u95f4$[l,r]$\u4ea7\u751f\u8d21\u732e\n\n\u663e\u7136\uff0c$w[i]$\u5fc5\u987b\u662f\u533a\u95f4$[l,r]$\u4e2d\u7684\u6700\u5927\u503c\uff01\n\n\u56e0\u6b64\u626b\u5230\u6bcf\u4e00\u4e2a$a$\uff0c\u7b54\u6848\u5c31\u53d8\u6210\u4e86$\\frac{c(c+1)}{2}a-\\sum_{i=1}^{c}\\sum_{j=i}^{c}max(i,j)$\uff0c\u5176\u4e2d$max(i,j)$\u8868\u793a\u533a\u95f4$[i,j]$\u4e2d\u6700\u5927\u7684$w$\n\n\u8fd9\u4e2a\u770b\u7740\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u7ef4\u62a4\u7ef4\u62a4\u561b...\n\n\u53ef\u662f\u6211\u4eec\u6bcf\u6b21\u5411\u4e0b\u626b\u63cf\u7684\u65f6\u5019\uff0c$w$\u90fd\u4f1a\u6539\u53d8\uff01\n\n\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u80fd\u591f\u652f\u6301\u4fee\u6539\u7684\u6570\u636e\u7ed3\u6784\uff0c\u663e\u7136\u662f\u4e00\u79cd\u4e8c\u53c9\u6811\n\n\u8fd9\u4e2a\u4e8c\u53c9\u6811\u9700\u8981\u652f\u6301\u4fee\u6539\uff0c\u6700\u597d\u80fd\u4fdd\u8bc1\u662f\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u800c\u4e14\u8fd8\u8981\u4fdd\u8bc1\u4e2d\u5e8f\u904d\u5386\u5f97\u5230\u7684\u662f\u539f\u5e8f\u5217\n\n\u8fd9\u4e2a...\u6709\u70b9\u96be\uff1f\n\ntreap\u561b\uff01\n\n\u628a\u5e8f\u5217\u7684\u4e0b\u6807\u6254\u8fdb\u4e8c\u53c9\u641c\u7d22\u6811\u91cc\uff0c\u518d\u628a$w$\u4f5c\u4e3a\u6743\u503c\u4f53\u73b0\u5806\u7684\u6027\u8d28\u5c31\u53ef\u4ee5\u4e86\u561b\n\n\uff08\u5176\u5b9e\u5c31\u662f\u628a\u539f\u6765\u968f\u673a\u7684\u4e00\u4e2a\u6743\u503c\u53d8\u6210\u4e86\u4e00\u4e2a$w$\uff09\n\n\u7531\u4e8e\u6570\u636e\u968f\u673a\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\n\n\u8fd9\u6837\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\u5c31\u662f$(siz[lson]+1)(siz[rson]+1)w$\n\n\u6ce8\u610f\u5728\u4fee\u6539\u65f6\u5982\u679c\u5148\u5220\u9664\u518d\u91cd\u65b0\u63d2\u5165\u4f1aT\uff0c\u8003\u8651\u5230\u6bcf\u6b21\u4fee\u6539\u6743\u503c\u53ea\u589e\u4e0d\u51cf\uff0c\u56e0\u6b64\u6bcf\u4e2a\u8282\u70b9\u53ea\u4f1a\u5411\u4e0a\u8f6c\uff0c\u56e0\u6b64\u6211\u4eec\u76f4\u63a5\u4fee\u6539\u5373\u53ef\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define ll unsigned long long\n#define ls tree[rt].lson\n#define rs tree[rt].rson\nusing namespace std;\nstruct Treap\n{\n\tint lson,rson;\n\tint size,val;\n\tint rank;\n\tll sum;\n}tree[300005];\nstruct POS\n{\n\tint x,y;\n\tfriend bool operator < (POS a,POS b)\n\t{\n\t\treturn a.x<b.x;\n\t}\n}p[100005];\nint tot=0;\nint rot;\nll sum=0;\nint r,c,n;\ninline void update(const int &rt)\n{\n\ttree[rt].size=tree[ls].size+tree[rs].size+1;\n\ttree[rt].sum=1ll*(tree[ls].size+1)*1ll*(tree[rs].size+1)*tree[rt].rank+tree[ls].sum+tree[rs].sum;\n}\ninline void lturn(int &rt)\n{\n\tint temp=rs;\n\trs=tree[temp].lson;\n\ttree[temp].lson=rt;\n\ttree[temp].size=tree[rt].size;\n\tupdate(rt);\n\trt=temp;\n}\ninline void rturn(int &rt)\n{\n\tint temp=ls;\n\tls=tree[temp].rson;\n\ttree[temp].rson=rt;\n\ttree[temp].size=tree[rt].size;\n\tupdate(rt);\n\trt=temp;\n}\nvoid buildtree(int &rt,int l,int r)\n{\n\trt=++tot;\n\tif(l==r){tree[rt].val=l,tree[rt].size=1;return;}\n\tint mid=(l+r)>>1;\n\ttree[rt].val=mid;\n\tif(l<mid)buildtree(ls,l,mid-1);\n\tif(r>mid)buildtree(rs,mid+1,r);\n\tupdate(rt);\n}\nvoid ins(int &rt,int v,int w)\n{\n\tif(!rt)return;\n\tif(tree[rt].val==v)\n\t{\n\t\ttree[rt].rank=w;\n\t\tupdate(rt);\n\t\treturn;\n\t}\n\tif(v<tree[rt].val)\n\t{\n\t\tins(ls,v,w);\n\t\tif(tree[ls].rank>tree[rt].rank)rturn(rt);\n\t}else\n\t{\n\t\tins(rs,v,w);\n\t\tif(tree[rs].rank>tree[rt].rank)lturn(rt);\n\t}\n\tupdate(rt);\n}\ninline int read()\n{\n\tint f=1,x=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint main()\n{\n\tr=read(),c=read(),n=read();\n\tfor(register int i=1;i<=n;++i)p[i].x=read(),p[i].y=read();//\u4ee5\u884c\u7f16\u53f7\u8bb0\u5f55\u4e0b\u5217\u7f16\u53f7\n\tbuildtree(rot,1,c);\n\tll ans=0;\n\tsort(p+1,p+n+1);\n\tint las=1;\n\tfor(register int i=1;i<=r;++i)//\u679a\u4e3e\u6bcf\u4e00\u884c\n\t{\n\t\twhile(p[las].x==i&&las<=n)ins(rot,p[las].y,i),las++;//del(rot,p[las].y),ins(rot,p[las].y,i),las++;\n\t\tans+=c*(c+1)/2*1ll*i-tree[rot].sum;\n\t}\n\tprintf(\"%llu\\n\",c*(c+1)/2ll*1ll*r*(r+1)/2ll-ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1561453089,
        "uid": 66905,
        "name": "leozhang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2611 \u3010[ZJOI2012]\u5c0f\u84dd\u7684\u597d\u53cb\u3011"
    },
    {
        "content": "\u770b\u4e86\u51e0\u7bc7\u9898\u89e3\uff0c\u59cb\u7ec8\u4e0d\u7406\u89e3\u8865\u96c6\u8f6c\u5316\u7684\u610f\u4e49\u5728\u4f55\u3002\n\n\u603b\u5f97\u6709\u7bc7\u9898\u89e3\u5e26\u7740\u70b9\u56fe\u7167\u987e\u4e00\u4e0b\u6211\u8fd9\u79cd 7s \u8bb0\u5fc6\u7684\u840c\u65b0\u5427\u3002\u3002\u3002\n\n\u76f4\u63a5\u6c42\u6ee1\u8db3\u6761\u4ef6\u7684\u77e9\u5f62\u4e2a\u6570\u3002\n\n---\n\n\u626b\u63cf\u7ebf\uff0c\u6838\u5fc3\u601d\u60f3\u5728\u4e8e\u5bf9\u4e8c\u7ef4\u7684\u64cd\u4f5c\u3001\u8be2\u95ee\u8f6c\u5316\u4e3a\u4e00\u7ef4\u66b4\u529b\u679a\u4e3e\uff0c\u53e6\u4e00\u7ef4\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u622a\u9762\u5e8f\u5217\u3002[\u4e0d\u4f1a\u7684\u51fa\u95e8\u5de6\u8f6c](https://oi-wiki.org/geometry/scanning/)\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ey6zw8vn.png)\n\n\u5982\u56fe\uff0c\u9ed1\u70b9\u662f\u8d44\u6e90\u70b9\uff0c\u5e95\u90e8\u4e00\u884c\u662f\u5f53\u524d\u626b\u63cf\u7ebf\u7684\u4f4d\u7f6e\u3002\n\n\u8003\u8651\u5982\u4f55\u8ba1\u7b97**\u5e95\u90e8\u5728\u9ec4\u8272\u90e8\u5206**\uff0c\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u9ed1\u70b9\u7684\u77e9\u5f62\u4e2a\u6570\u3002\n\n\u5b9a\u4e49\u6bcf\u4e2a\u5408\u6cd5\u77e9\u5f62\u7684\u7279\u5f81\u70b9\u4e3a\u6700\u9760\u4e0b\u7684\u9ed1\u70b9\uff08\u540c\u65f6\u5b58\u5728\u591a\u4e2a\u7279\u5f81\u70b9\u7684\u60c5\u51b5\u6700\u540e\u8bf4\uff09\u3002\n\n\u6211\u4eec\u9700\u8981\u8bbe\u8ba1\u4e00\u4e2a\u7edf\u8ba1\u65b9\u6cd5\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u77e9\u5f62\u53ea\u4f1a\u88ab\u5b83\u7684\u7279\u5f81\u70b9\u7edf\u8ba1\u5230\u3002\n\n\u5982\u56fe\uff0c\u6709\u54ea\u4e9b\u77e9\u5f62\u7684\u7279\u5f81\u70b9\u662f\u53f3\u4e0b\u65b9\u7684\u9ed1\u70b9\u5462\uff1f\uff08\u8bbe\u9ed1\u70b9\u5750\u6807 $x_i,y_i$,\u77e9\u5f62\u5de6\u4e0b\uff0c\u53f3\u4e0a\u9876\u70b9\u5750\u6807\u5206\u522b\u4e3a $(l,d),(r,u)$\uff09\uff0c\u5219\u5f53\u4e14\u4ec5\u5f53 $l \\leq x_i \\And x_i \\leq r \\And u \\leq y_i$\u3002\uff08\u5de6\u4e0b\u70b9\u5fc5\u5b9a\u5728\u9ec4\u8272\u90e8\u5206\uff09\n\n\u8fd9\u6837\u5c31\u6709 $y_i \\times (x_i+1) \\times(C - x_i + 1)$ \u79cd\u4e0d\u540c\u7684\u77e9\u5f62\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u5de6\u4e0a\u65b9\u7684\u9ed1\u70b9\uff0c\u663e\u7136\u5b83\u5bf9\u5e94\u7684\u77e9\u5f62\u7684\u53f3\u4e0a\u89d2\u4e0d\u80fd\u53d6\u5230\u84dd\u8272\u90e8\u5206\u53ca\u5176\u53f3\u8fb9\u3002\n\n\u7531\u6b64\u60f3\u5230\u7528 [treap](https://oi-wiki.org/ds/treap/) \u7ef4\u62a4\u5e8f\u5217\uff0c\uff08\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u968f\u673a\u6807\u53f7\u53d6\u8fd9\u4e00\u5217\u6700\u4e0b\u65b9\u9ed1\u70b9\u7684 $y$ \u5750\u6807\uff0c\u503c\u5219\u7ef4\u62a4\u4f4d\u7f6e\u4e0b\u6807\uff0c\u8fd9\u6837\u7684\u8bdd\u7b54\u6848\u5c31\u662f $\\sum rnd_i \\times (size_{lc}+1) \\times(size_{rc} + 1)$\uff09\u3002\n\n\u81f3\u4e8e\u7279\u5f81\u70b9\u5b58\u5728\u591a\u4e2a\u7684\u60c5\u51b5\uff0c\u5728 treap \u4e2d\u603b\u4f1a\u5206\u51fa\u4e2a\u5148\u540e\u6b21\u5e8f\uff0c\u6240\u4ee5\u4e0d\u4f1a\u7b97\u91cd\u3002\n\nCode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate <class T> inline void read(T &x) {\n\tx = 0;\n\tint f = 0;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9') {\n\t\tf |= ch == '-';\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9') {\n\t\tx = x * 10 + (ch - 48);\n\t\tch = getchar();\n\t}\n\tx = f ? -x : x;\n\treturn;\n}\n#define ll long long\n#define fir first\n#define sec second\n#define N 50005\nint ch[N][2], val[N], rnd[N], siz[N], root; ll sum[N];\nvoid pushup(int x) {\n\tsiz[x] = siz[ch[x][0]] + siz[ch[x][1]] + 1;\n\tsum[x] = sum[ch[x][0]] + sum[ch[x][1]];\n\tsum[x] += 1ll * rnd[x] * (siz[ch[x][0]] + 1) * (siz[ch[x][1]] + 1);\n\treturn;\n}\nint build(int l, int r) {\n\tif(l > r) return 0;\n\tif(l == r) {siz[l] = 1; val[l] = l; return l;}\n\tint mid = (l + r) >> 1;\n\tch[mid][0] = build(l, mid - 1);\n\tch[mid][1] = build(mid + 1, r);\n\tval[mid] = mid;\tpushup(mid); return mid;\n}\nint merge(int x, int y) {\n\tif(!x || !y) return x + y;\n\tif(rnd[x] > rnd[y]) {\n\t\tch[x][1] = merge(ch[x][1], y);\n\t\tpushup(x); return x;\n\t}\n\telse {\n\t\tch[y][0] = merge(x, ch[y][0]);\n\t\tpushup(y); return y;\n\t}\n\treturn 114514;\n}\nvoid split(int rt, int v, int &x, int &y) {\n\tif(!rt) {x = y = 0; return;}\n\tif(val[rt] <= v) x = rt, split(ch[rt][1], v, ch[rt][1], y);\n\telse y = rt, split(ch[rt][0], v, x, ch[rt][0]);\n\tpushup(rt); return;\n}\nvoid update(int pos, int v) {\n\tint x, y, z;\n\tsplit(root, pos, x, y);\n\tsplit(x, pos - 1, x, z);\n\trnd[z] = v;\troot = merge(merge(x, z), y);\n\treturn;\n}\nint R, C, n;\nvector<int> tmp[N];\nsigned main() {\n\tread(R), read(C), read(n);\n\tint x, y; for(int i = 1; i <= n; i++)\n\t\tread(x), read(y), tmp[x].emplace_back(y);\n\troot = build(1, C); ll ans = 0;\n\tfor(int i = 1; i <= R; i++) {\n\t\tfor(auto x : tmp[i]) update(x, i);\n\t\tans += sum[root];\n\t}\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1657029988,
        "uid": 90027,
        "name": "GG_jok_er",
        "ccfLevel": 0,
        "title": "P2611 [ZJOI2012]\u5c0f\u84dd\u7684\u597d\u53cb \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u8865\u96c6\u8f6c\u6362\u4e00\u4e0b\uff0c\u7b97\u51fa\u6709\u591a\u5c11\u4e2a\u533a\u57df\u6ca1\u6709\u8d44\u6e90\u70b9\u3002\u8fd9\u7c7b\u95ee\u9898\u6709\u4e00\u4e2a\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff1a\u626b\u63cf\u7ebf\u3002\u8003\u8651\u4ece\u4e0a\u5f80\u4e0b\u626b\uff0c\u7136\u540e\u7ef4\u62a4\u4e00\u4e9b\u4e1c\u897f\u3002\u672c\u9898\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217 $S_{p}$ \u8868\u793a\u6bcf\u4e00\u5217\u7684\u6bd4 $i$ \u5c0f\u7684\u6700\u9760\u8fd1 $i$ \u7684\u8d44\u6e90\u70b9\u7684\u7eb5\u5750\u6807\u3002\u8bbe $M_p(a,b)$ \u8868\u793a $[a,b]$ \u533a\u95f4 $S_p$ \u7684\u6700\u5927\u503c\uff0c\u5219\u6709\u6bcf\u6761\u626b\u63cf\u7ebf\u7684\u8d21\u732e\u4e3a $\\sum_{i,j\\in[1,c],i\\le j} p-M_p(i,j)=\\frac{c(c+1)}{2}p-\\sum M[i,j]$\u3002\n\n\u8003\u8651\u5bf9\u6bcf\u4e2a $S_{p,i}$ \u8ba1\u7b97\u8d21\u732e\u3002\u5373\u5bf9\u4e8e\u6bcf\u4e2a\u6a2a\u5750\u6807\uff0c\u8ba1\u7b97\u5b83\u80fd\u4f5c\u4e3a\u6700\u5927\u503c\u7684\u6700\u5927\u533a\u95f4\u957f\u5ea6\u3002\u8fd9\u53ef\u4ee5\u7528\u7b1b\u5361\u5c14\u6811\u53bb\u505a\u3002\n\n\u8003\u8651\u7ef4\u62a4\u8fd9\u4e2a $S_p$ \u7684\u7b1b\u5361\u5c14\u6811\uff08\u6a2a\u5750\u6807\u4e3a\u6811\u7684\u5173\u952e\u8bcd $v$\uff0c\u7eb5\u5750\u6807\uff08$S$\uff09\u4e3a\u5806\u7684\u5173\u952e\u8bcd $w$\uff09\u3002\u7b1b\u5361\u5c14\u6811\u7684\u5de6\u8282\u70b9\u4ee3\u8868\u5de6\u533a\u95f4\u4e0d\u5927\u4e8e\u8fd9\u4e2a\u8282\u70b9\u7684\u6700\u5927\u8282\u70b9\u3002\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u5f97\u77e5\u5bf9\u4e8e\u6bcf\u4e2a $S_p$\uff0c\u5176\u8d21\u732e\u4e3a $\\frac{c(c+1)}{2}p-\\sum_u w_u(s_{l_u}+1)(s_{r_u}+1)$\u3002\u7136\u540e\u7ef4\u62a4\u7b1b\u5361\u5c14\u6811\u7528 treap \u5373\u53ef\uff08\u56e0\u4e3a\u8981\u5355\u70b9\u7684\u4fee\u6539\uff09\u3002\u56e0\u4e3a\u6570\u636e\u968f\u673a\u6240\u4ee5\u590d\u6742\u5ea6\u6b63\u786e\u3002\n\n\u6240\u4ee5\u6211\u4eec\u6bcf\u4e2a\u8282\u70b9\u90fd\u7ef4\u62a4\u4e00\u4e0b\u8fd9\u4e2a\u5373\u53ef\u3002\n\n\u7528\u7684 FHQ Treap\u3002\n\n\u6ce8\u610f\u4e00\u5f00\u59cb\u7684 build \u4e00\u5b9a\u8981\u7528\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u7684\u7ed3\u6784\uff0c\u5426\u5219\u590d\u6742\u5ea6\u662f\u4e0d\u5bf9\u7684\uff08\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b\u5982\u679c\u76f4\u63a5\u63d2\u5165\u76f4\u63a5\u9000\u5316\u6210\u94fe\uff09\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\n#define per(i,a,b) for(int i=(a);i>=(b);i--)\nusing namespace std;\nconst int N=1e5+9,inf=(1<<30);\ntypedef pair<int,int>pii;\n\ninline long long read() {\n\tlong long res=0, w=1; char c=getchar();\n\twhile(!isdigit(c)) {if(c=='-') w=-1; c=getchar();}\n\twhile(isdigit(c)) {res=res*10+c-48; c=getchar();}\n\treturn res*w;\n}\n\nnamespace treap {\n\tint ls[N],rs[N],sz[N],v[N],w[N],val[N],tot,root;\n\tint nww(int vv,int ww) {return sz[++tot]=1,v[tot]=vv,w[tot]=val[tot]=ww,tot;}\n\tvoid upd(int x) {sz[x]=sz[ls[x]]+sz[rs[x]]+1, val[x]=val[ls[x]]+val[rs[x]]+w[x]*(sz[ls[x]]+1)*(sz[rs[x]]+1);}\n\tint build(int l,int r) {\n\t\tif(l>r) return 0;\n\t\telse if(l==r) return sz[l]=1,v[l]=l,l;\n\t\telse {\n\t\t\tint m=(l+r)/2;\n\t\t\tls[m]=build(l,m-1), rs[m]=build(m+1,r), sz[m]=sz[ls[m]]+sz[rs[m]]+1, v[m]=m;\n\t\t\treturn m;\n\t\t}\n\t}\n\tint merge(int x,int y) {\n\t\tif(!x||!y) return x+y;\n\t\telse if(w[x]>w[y]) return rs[x]=merge(rs[x],y), upd(x), x;\n\t\telse return ls[y]=merge(x,ls[y]), upd(y), y;\n\t}\n\tvoid split(int x,int val,int &l,int &r) {\n\t\tif(!x) {l=r=0; return;}\n\t\telse if(v[x]<=val) l=x, split(rs[x],val,rs[x],r);\n\t\telse r=x, split(ls[x],val,l,ls[x]);\n\t\tupd(x);\n\t}\n\tvoid mdf(int val,int nw) {\n\t\tint x,y,x1,x2; split(root,val,x,y), split(x,val-1,x1,x2);\n\t\tw[x2]=nw, root=merge(merge(x1,x2),y);\n\t}\n\tint qry() {return val[root];}\n}\nusing namespace treap;\n\nint r,c,n,ans;\nvector<int>t[N];\n\nsigned main() {\n\tr=read(), c=read(), n=read();\n\trep(i,1,n) {\n\t\tint x=read(), y=read();\n\t\tt[x].push_back(y);\n\t}\n\troot=build(1,c);\n\trep(i,1,r) {\n\t\tfor(auto y:t[i]) mdf(y,i);\n\t\tans+=c*(c+1)/2*i-qry();\n\t}\n\tans=c*(c+1)/2*r*(r+1)/2-ans;\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1630501859,
        "uid": 180652,
        "name": "_lgswdn",
        "ccfLevel": 0,
        "title": "P2611 [ZJOI2012]\u5c0f\u84dd\u7684\u597d\u53cb"
    }
]