[
    {
        "content": "\u642c\u81ea[blog](https://blog.csdn.net/diogenes_/article/details/80820571)\n\n## $Description$\n\n\u6709 $n$ \u4e2a\u97f3\u7b26\uff0c\u7f16\u53f7\u4e3a $1$ \u81f3 $n$ \u3002\u7b2c $i$ \u4e2a\u97f3\u7b26\u7684\u7f8e\u5999\u5ea6\u4e3a $A_i$ \u3002\n\n\u6211\u4eec\u8981\u627e\u5230 $k$ \u6bb5\u8d85\u7ea7\u548c\u5f26\u7ec4\u6210\u7684\u4e50\u66f2\uff0c\u6bcf\u6bb5\u8fde\u7eed\u7684\u97f3\u7b26\u7684\u4e2a\u6570 $x$ \u6ee1\u8db3 $L\\leq x\\leq R$ \uff0c\u6c42\u4e50\u66f2\u7f8e\u5999\u5ea6\u7684\u6700\u5927\u503c\u3002\n\n## $Solution$\n\n\u8d2a\u5fc3 + \u5806 + RMQ\n\n\u9996\u5148\u53ef\u4ee5\u770b\u5230\uff0c\u6bcf\u6bb5\u8d85\u7ea7\u548c\u5f26\u90fd\u662f\u8fde\u7eed\u7684\uff0c\u7f8e\u5999\u5ea6\u662f\u8fd9\u6bb5\u533a\u95f4\u5185\u6240\u6709\u7f8e\u5999\u5ea6\u7684\u548c\u3002\u53ef\u4ee5\u60f3\u5230\uff0c\u6bcf\u6b21\u6c42\u89e3\u533a\u95f4\u548c\u663e\u7136\u662f\u4e0d\u5408\u7b97\u7684\uff0c\u6240\u4ee5\u8003\u8651\u5230\u7528\u524d\u7f00\u548c\u3002\n\n\u8003\u8651\u66b4\u529b\uff0c\u6211\u4eec\u9700\u8981\u628a\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u6bb5\u62bd\u51fa\u6765\u6392\u4e2a\u5e8f\uff0c\u4f46\u8fd9\u5b9e\u5728\u662f\u4e0d\u53ef\u60f3\u8c61\u3002\u6240\u4ee5\u8003\u8651\u4f7f\u7528\u8d2a\u5fc3\u601d\u60f3\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u5148\u60f3\u9884\u5904\u7406\u3002\u6211\u4eec\u5b9a\u4e49 $MAX(o, l, r) = max\\{sum(t) - sum(o - 1) \\ | \\ l\\leq t \\leq r \\}$ ,\u5373\u4ee5 $o$ \u4e3a\u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\u8303\u56f4\u662f $[l, r]$ \u7684\u6700\u5927\u5b50\u6bb5\u3002\u6c42 $sum()$ \u5c31\u7528\u524d\u9762\u8bf4\u7684\u524d\u7f00\u548c\u3002\u53ef\u4ee5\u770b\u51fa\uff0c$o$ \u7684\u4f4d\u7f6e\u662f\u56fa\u5b9a\u7684\u3002\u6240\u4ee5 $sum(o - 1)$ \u4e5f\u662f\u56fa\u5b9a\u7684\u3002\u6240\u4ee5\u6211\u4eec\u8981\u6c42\u8fd9\u4e2a\u7684\u6700\u5927\u503c\uff0c\u53ea\u8981 $sum(t)$ \u6700\u5927\u5c31\u53ef\u4ee5\u4e86\u3002\u5373\u8981\u6c42 $sum(t)$ \u5728 $[l, r]$ \u4e2d\u7684\u6700\u5927\u503c\uff0c\u90a3\u600e\u4e48\u5feb\u901f\u5730\u6c42\u51fa\u8fd9\u4e2a\u6700\u5927\u503c\u5462\uff1f\u5f88\u663e\u7136\uff0c\u8fd9\u4e0d\u662f $RMQ$ \u7684\u6d3b\u4e48\u3002\u5bf9 $RMQ$ \u4e0d\u719f\u6089\u7684\u53ef\u4ee5\u53c2\u8003[\u8fd9](https://blog.csdn.net/diogenes_/article/details/80794838) \u3002\u5f53\u7136\uff0c\u5177\u4f53\u8ba1\u7b97\u7684\u65f6\u5019\u8fd8\u8981\u770b\u770b\u4e0a\u754c $r$ \u662f\u5426\u8d85\u8fc7\u4e86 $n$ \u3002\n\n\u63a5\u4e0b\u6765\u60f3\u600e\u4e48\u8d2a\u5fc3\u3002\u6211\u4eec\u53ef\u4ee5\u6bcf\u6b21\u90fd\u9009\u6700\u4f18\u7684\u5b50\u6bb5\uff0c\u8fd9\u6837\u9009 $k$ \u6b21\u663e\u7136\u5c31\u662f\u6211\u4eec\u6240\u8981\u7684\u7ed3\u679c\uff0c\u90a3\u600e\u4e48\u627e\u5230\u6700\u4f18\u89e3\u5462\uff1f\u7528\u5806\u6765\u5c06\u89e3\u5b58\u8fdb\u53bb\uff0c\u6bcf\u6b21\u5806\u9876\u7684\u5143\u7d20\u5c31\u662f\u6700\u4f18\u89e3\u3002\n\n\u8003\u8651\u4e00\u4e2a\u4e09\u5143\u7ec4 $(o, l, r)$ \u8868\u793a\u4ee5 $o$ \u4e3a\u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\u7684\u9009\u62e9\u533a\u95f4\u4e3a $[l, r]$ \u7684 \u60c5\u51b5\uff0c\u6211\u7528\u4e86\u4e00\u4e2a $struct$ \u6765\u8868\u793a\u8fd9\u4e2a\u4e09\u5143\u7ec4\uff0c\u4f46\u5f80\u5f80\u5b9e\u9645\u4e0a\u6bcf\u4e2a\u60c5\u51b5\u9700\u8981\u989d\u5916\u8bb0\u5f55\u8fd9\u4e2a\u60c5\u51b5\u7684\u6700\u4f18\u89e3 $t$ \uff0c\u8fd9\u4e2a\u4e0d\u9ebb\u70e6\uff0c\u5728 $struct$ \u91cc\u9762\u6572\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6211\u4eec\u5047\u8bbe\u5f53\u524d\u6700\u5927\u7684\u4e09\u5143\u7ec4\u662f $(o, l, r)$ \u3002\u6700\u4f18\u89e3\u4f4d\u7f6e\u662f $t$ \u3002$ans$ \u7d2f\u52a0\u8fd9\u4e2a\u4e09\u5143\u7ec4\u7684\u8d21\u732e\u3002\u7531\u4e8e $t$ \u5df2\u7ecf\u88ab\u9009\u4e2d\uff0c\u5bf9\u4e8e\u8fd9\u4e2a $o$\uff0c $t$ \u5df2\u7ecf\u4e0d\u80fd\u91cd\u590d\u9009\u4e2d\uff0c\u4f46\u6700\u4f18\u89e3\u8fd8\u53ef\u80fd\u5b58\u5728\u4e8e $t$ \u5de6\u53f3\u7684\u4e24\u7aef\u533a\u95f4\u4e2d\uff0c\u6240\u4ee5\u63d0\u53d6\u51fa $(o, l, r)$ \u4e4b\u540e\uff0c\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u4e14\u4e0d\u4e27\u5931\u5176\u4ed6\u8f83\u4f18\u89e3\uff0c\u6211\u4eec\u4ecd\u7136\u8981\u628a $(o, l, t - 1)$ , $(o, t + 1, r)$ \u6254\u56de\u5806\u91cc\u9762\u53bb\u3002\u663e\u7136\u5730\uff0c\u5728\u653e\u56de\u53bb\u4e4b\u524d\u5e94\u8be5\u4fdd\u8bc1\u533a\u95f4\u7684\u5b58\u5728\uff0c\u5373 $l = t$ \u6216 $r = t$ \u7684\u60c5\u51b5\u8981\u8fdb\u884c\u7279\u5224\u3002\n\n\u6700\u540e\u5b9e\u73b0\u7684\u65f6\u5019\u8fd8\u8981\u6ce8\u610f\u4e00\u70b9\uff0c$RMQ$ \u539f\u672c\u6570\u7ec4\u91cc\u9762\u8bb0\u5f55\u7684\u662f\u6700\u4f18\u89e3\u7684\u503c\uff0c\u4f46\u6211\u4eec\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c\u7684\u65f6\u5019\u67e5\u8be2\u7684\u662f\u6700\u4f18\u89e3\u7684\u4f4d\u7f6e\u3002\u6240\u4ee5\u6570\u7ec4\u91cc\u9762\u5b58\u7684\u662f\u6700\u4f18\u89e3\u7684\u4f4d\u7f6e\uff0c\u8981\u7279\u6b8a\u5904\u7406\u3002\n\n## $Code$\n\n```c++\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<queue>\n#define MAXN 500005\n#define LOG 20\n#define max(x, y) ((x) > (y) ? (x) : (y))\n#define min(x, y) ((x) < (y) ? (x) : (y))\nlong long sum[MAXN], table[MAXN][LOG];\nnamespace RMQ {\n    void init(int n) {\n        for (int i = 1; i <= n; i++) table[i][0] = i;\n        for (int j = 1; (1 << j) <= n; j++)\n            for (int i = 1; i + (1 << j) - 1 <= n; i++) {\n                int x = table[i][j - 1], y = table[i + (1 << (j - 1))][j - 1];\n                table[i][j] = sum[x] > sum[y] ? x : y;\n            }\n    }\n    int query(int l, int r) {\n        int k = log2(r - l + 1);\n        int x = table[l][k], y = table[r - (1 << k) + 1][k];\n        return sum[x] > sum[y] ? x : y;\n    }\n}\nstruct element {\n    int o, l, r, t;\n    element() {}\n    element(int o, int l, int r) : o(o), l(l), r(r), t(RMQ::query(l, r)) {}\n    friend bool operator < (const element& a, const element& b) {\n        return sum[a.t] - sum[a.o - 1] < sum[b.t] - sum[b.o - 1];\n    }\n};\nstd::priority_queue< element > Q;\nint main() {\n    int n, k, L, R;\n    scanf(\"%d%d%d%d\", &n, &k, &L, &R);\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%lld\", &sum[i]);\n        sum[i] += sum[i - 1];\n    }\n    RMQ::init(n);\n    for (int i = 1; i <= n; i++)\n        if (i + L - 1 <= n) \n            Q.push(element(i, i + L - 1, min(i + R - 1, n)));\n    long long ans = 0;\n    while (k--) {\n        int o = Q.top().o, l = Q.top().l, r = Q.top().r, t = Q.top().t;\n        Q.pop();\n        ans += sum[t] - sum[o - 1];\n        if (l != t) Q.push(element(o, l, t - 1)); \n        if (t != r) Q.push(element(o, t + 1, r));\n    }\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1530017620,
        "uid": 12472,
        "name": "Nekroz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2048 \u3010[NOI2010]\u8d85\u7ea7\u94a2\u7434\u3011"
    },
    {
        "content": "# RMQ\u597d\u9898\n\u8fd9\u662fRMQ\u7684\u4e00\u9053\u96be\u9898\u4e86\u5427,\u81f3\u5c11\u4f5c\u4e3a\u849f\u84bb\u7684\u6211\u662f\u8fd9\u4e48\u8ba4\u4e3a\u7684\n\n\u5f00\u59cb\u6211\u7684\u8868\u6f14~~\n\n~~\u81ea\u8ba4\u4e3a\u8e29\u904d\u6240\u6709\u5751~~\n\n\u9996\u5148\u7ed9\u51fa\u6211\u9898\u89e3\u4e2d\u7684\u53d8\u91cf\u5b9a\u4e49\n\nk: \u9700\u8981\u8d85\u7ea7\u548c\u5f26\u603b\u6570\n\nl,r: \u5206\u522b\u662f\u8d85\u7ea7\u548c\u5f26\u6240\u5305\u542b\u97f3\u7b26\u4e2a\u6570\u7684\u4e0b\u9650\u548c\u4e0a\u9650\n\ndp[i][j]: RMQ\u6570\u7ec4,\u8868\u793ai~(i+2^j-1)\u6700\u5927\u503c\n\nnum[i][j]: dp[i][j]\u4e2d\u6700\u5927\u503c\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff08\u7ed3\u675f\u70b9\uff09\n\n---\n\n## \u7b2c\u4e00\u90e8\u5206 \u533a\u95f4\u6700\u5927\u7f8e\u5999\u5ea6\u8d85\u7ea7\u548c\u5f26\u7684\u89e3\u51b3\n\n\u9996\u5148,\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u4e00\u6bb5\u6bcf\u5999\u5ea6\u7684\u548c,\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u524d\u7f00\u548c\u6570\u7ec4c[i]\n\n\u82e5\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e2a\u533a\u95f4 L~R \n\n\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u5728\u8fd9\u4e00\u6bb5\u533a\u95f4\u4e2d\u627e\u5230\u6700\u5927\u7684\u7f8e\u5999\u5ea6\u548c\u5462\n\n![](https://cdn.luogu.com.cn/upload/pic/59310.png)\n\n\u663e\u7136,\u5982\u4e0a\u56fe\u6240\u793a,\u6700\u5927\u7684\u7f8e\u5999\u5ea6\u4e4b\u548c\u5e94\u4e3a max(c[i])-c[L-1] \n\n\u8fd9\u9053\u9898\u4e2d\u5e94\u662f\u8fd9\u6837\u7684\n![](https://cdn.luogu.com.cn/upload/pic/59321.png)\n\n\u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u627e\u51fa\u524d\u7f00\u548c\u6570\u7ec4 c[i] \u7684\u6700\u5927\u503c\n\n### RMQ\u767b\u573a\u4e86\n\nabout [RMQ](http://iwo.im/?q=RMQ)\n\n---\n## \u7b2c\u4e8c\u90e8\u5206 RMQ\n\u8fd9\u9053\u9898\u6839\u636e\u4e0a\u9762\u7684\u5206\u6790\u6211\u4eec\u5e94\u53bb\u627ec[i]\u7684\u6700\u5927\u503c\n\n\u624d\u80fd\u53bb\u89e3\u51b3\u6700\u5927\u7f8e\u5999\u5ea6\u7684\u95ee\u9898\n\n\u9644RMQ\u6a21\u677f\n```cpp\nvoid RMQ(){\n\tfor(int j=1;j<=maxlog;j++){\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(i+(1<<j)-1<=n)\n\t\t\t\tdp[i][j]=max(dp[i][j-1],dp[i+(1<<(j-1))][j-1]);\n\t\t}\n\t}\n}\n```\n\u8fd9\u9053\u9898RMQ\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u54ea\u5462\uff1f\n\n\u5728\u4e8e\u6211\u4eec\u9700\u8981\u77e5\u9053\u6211\u4eec\u53d6\u7684\u6700\u5927\u503c\u7684\u4f4d\u7f6e\n\n\u4e0d\u7136\u6211\u4eec\u4f1a\u4e0d\u77e5\u9053\u6211\u4eec\u7a76\u7adf\u53d6\u4e86\u54ea\u4e00\u6bb5\u97f3\u7b26,\u6709\u53ef\u80fd\u4f1a\u53d6\u91cd\u6216\u8005\u53d6\u4e0d\u5230\n\n\u5982\u4f55\u5728RMQ\u4e2d\u627e\u5230\u6700\u5927\u503c\u4f4d\u7f6e\u5462\uff1f\n\n\u5176\u5b9e\u4e0d\u96be,\u5728dp[i][j]\u53d6\u6570\u65f6\u54ea\u4e2a\u5927num[i][j]\u5c31\u53d6\u8c01\n```cpp\nvoid RMQ(){\n    for(int j=1;j<=20;j++){\n        for(int i=1;i<=n;i++){\n            if(i+(1<<j)-1<=n){\n                if(dp[i][j-1]<dp[i+(1<<(j-1))][j-1]){\n                    dp[i][j]=dp[i+(1<<(j-1))][j-1];\n                    num[i][j]=num[i+(1<<(j-1))][j-1];\n                }\n                else{\n                    dp[i][j]=dp[i][j-1];\n                    num[i][j]=num[i][j-1];\n                }\n            }\n        }\n    }\n}\n```\n---\n## \u7b2c\u4e09\u90e8\u5206 k\u4e2a\u6700\u5927\u8d85\u7ea7\u548c\u5f26\u7684\u89e3\u51b3\n\n\u90a3\u600e\u4e48\u53bb\u89e3\u51b3k\u4e2a\u8d85\u7ea7\u548c\u5f26\u5462?\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4f18\u5148\u961f\u5217\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u5c06\u4ee51~n\u4e3a\u5f00\u5934\u7684\u957f\u5ea6\u4e3al~r\u7684\u8d85\u7ea7\u548c\u5f26\u4e2d\n\n\u5206\u522b\u662f\u6700\u5927\u7684n\u4e2a\u8d85\u7ea7\u548c\u5f26\u653e\u8fdb\u961f\u5217\n\n\u6309\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n\n\u6b64\u65f6\u6211\u4eec\u53d6\u51fa\u961f\u5217\u4e2d\u7684\u961f\u9876,\u8fd9\u4e00\u5b9a\u662f\u5168\u5c40\u6700\u5927\u7684\u7f8e\u5999\u5ea6\n\n\u63a5\u4e0b\u6765\u5982\u4f55\u627e\u5230\u7b2c\u4e8c\u5927\u7684\u5462\uff1f\n\n- \u6211\u4eec\u53ef\u4ee5\u7834\u5f00\u6700\u5927\u7684\u8fd9\u4e00\u4e2a\n\n- \u7528 w \u8868\u793a\u5f53\u524d\u6700\u5927\u503c\u7ed3\u675f\u4f4d\u7f6e\uff08num[i][])\n\n- \u5c06\u539f\u672c\u7684 i~w \u8fd9\u4e2a\u533a\u57dfpop\u6389\n\n- \u5c06i~((i+l-1)\u2014(w-1)),i~((w+1)\u2014(i+r-1))\u4e2d\u7684\u6700\u5927\u503cpush\u8fdb\u53bb\n\n- \u518d\u53d6\u961f\u9876\u51fa\u6765\u91cd\u590d\u521a\u624d\u64cd\u4f5c\n\n\u4e3a\u4f55\u8fd9\u6837\u64cd\u4f5c\u80fd\u627e\u5230\u6700\u5927\u7f8e\u5999\u5ea6\u5462\n![](https://cdn.luogu.com.cn/upload/pic/59322.png)\n\n---\n## \u7b2c\u56db\u90e8\u5206 \u7ec6\u8282\u5904\u7406\u4e0e\u4ee3\u7801\n\u8fd9\u6837\u6211\u4eec\u7684\u9898\u76ee\u5c31\u57fa\u672c\u4e0a\u89e3\u51b3\u4e86\n\n\u5f00\u5fc3\u5f00\u5fc3~~\n![](https://cdn.luogu.com.cn/upload/pic/59323.png)\n\n\u542c\u53d6WA\u58f0\u4e00\u7247\u554a\n\n\u9644\u4e0a\u6211\u768410\u5206\u4ee3\u7801:\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=500005;\nstruct node{\n    int data;\n    int s,w;\n    bool operator <(node i)const{\n        return data<i.data;\n    }\n};\nint c[maxn],dp[maxn][20],lg[maxn];\nint num[maxn][20];\nbool vis[500000000];\nint p[maxn];\nint n,k,l,r;\nint ans=0;\nint maxnum=0x3f3f3f3f;\npriority_queue<node>q;\nvoid RMQ(){\n    for(int j=1;j<=20;j++){\n        for(int i=1;i<=n;i++){\n            if(i+(1<<j)-1<=n){\n                if(dp[i][j-1]<dp[i+(1<<(j-1))][j-1]){\n                    dp[i][j]=dp[i+(1<<(j-1))][j-1];\n                    num[i][j]=num[i+(1<<(j-1))][j-1];\n                }\n                else{\n                    dp[i][j]=dp[i][j-1];\n                    num[i][j]=num[i][j-1];\n                }\n            }\n        }\n    }\n}\nvoid work(int i,int x,int y){\n    int tmp=lg[y-x+1];\n    int o,jl;\n    bool flag=0;\n    if(dp[x][tmp]>dp[y-(1<<tmp)+1][tmp]){\n        o=dp[x][tmp];\n        o-=c[i-1];\n        jl=num[x][tmp];\n    }\n    else{\n        o=dp[y-(1<<tmp)+1][tmp];\n        o-=c[i-1];\n        jl=num[y-(1<<tmp)+1][tmp];\n    }\n    if(vis[o]==1)flag=1;\n    vis[o]=1;\n    //cout<<i<<\" \"<<o-c[i-1]<<\" \"<<jl<<\" \"<<endl;\n    if(!flag){\n        node u;\n        u.data=o;\n        u.s=i;\n        u.w=jl;\n        q.push(u);\n    }\n}\nint main()\n{\t\n    cin>>n>>k>>l>>r;\n    lg[0]=-1;\n    for(int i=1;i<=n;i++){\n        int x; \n        cin>>x;\n        c[i]=c[i-1]+x;\n        dp[i][0]=c[i];\n        num[i][0]=i;\n        lg[i]=lg[i>>1]+1;\n    }\n    RMQ();\n    for(int i=1;i+l-1<=n;i++)\n        work(i,i+l-1,min(i+r-1,n));\n    ans+=q.top().data;\n    //cout<<\"#\"<<q.top().data<<endl;\n    int d=q.top().w,f=q.top().s;\n    for(int i=1;i<k;i++){\n        q.pop();\n        if(d-1>=f+l-1&&d-1>=1)\n            work(f,f+l-1,d-1);\n        if(d+1<=f+r-1&&d+1<=n)\n            work(f,d+1,min(f+r-1,n));\n        d=q.top().w;\n        f=q.top().s;\n        ans+=q.top().data;\n        //cout<<\"#\"<<q.top().data<<endl;\n    }\n    cout<<ans;\n    return 0;\n}\n```\n\u7a76\u7adf\u662f\u54ea\u91cc\u6709\u95ee\u9898\u5462\uff1f\n\n\u662f\u56e0\u4e3a\u6211\u768410\u5206\u4ee3\u7801\u65e0\u6cd5\u89e3\u51b3\u8fd9\u79cd\u60c5\u51b5:\n![](https://cdn.luogu.com.cn/upload/pic/59324.png)\n\n\u8be6\u60c5\u89c1\u4e0b\n\n\u6b63\u786e\u4ee3\u7801:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=500005;\nstruct node{\n    ***\n    int num;\n    int lid,rid;\n    int w;\n    int data;\n    bool operator <(node i)const{\n        return data<i.data;\n    }\n    ***\n};\nint c[maxn],dp[maxn][20],lg[maxn];\nint num[maxn][20];\nint p[maxn];\nint n,k,l,r;\nint minn=2147483647;\nlong long ans=0;\npriority_queue<node>q;\nvoid RMQ(){\n    for(int j=1;j<=20;j++){\n        for(int i=1;i<=n;i++){\n            if(i+(1<<j)-1<=n){\n                if(dp[i][j-1]<dp[i+(1<<(j-1))][j-1]){\n                    dp[i][j]=dp[i+(1<<(j-1))][j-1];\n                    num[i][j]=num[i+(1<<(j-1))][j-1];\n                }\n                else{\n                    dp[i][j]=dp[i][j-1];\n                    num[i][j]=num[i][j-1];\n                }\n            }\n        }\n    }\n}\nint wz(int x,int y){\n    int tmp=lg[y-x+1];\n    int o,jl;\n    if(dp[x][tmp]>dp[y-(1<<tmp)+1][tmp])\n        jl=num[x][tmp];\n    else\n        jl=num[y-(1<<tmp)+1][tmp];\n    return jl;//\u627e\u5230\u4f4d\u7f6e\n}\nvoid add(int po,int i,int left,int right){\n    node tmp;\n    tmp.w=po;\n    tmp.num=i;\n    tmp.lid=left;\n    tmp.rid=right;\n    tmp.data=c[po]-c[i-1];\n    q.push(tmp);\n    return ;\n}\nint main()\n{   \n    cin>>n>>k>>l>>r;\n    lg[0]=-1;\n    for(int i=1;i<=n;i++){\n        int x; \n        cin>>x;\n        c[i]=c[i-1]+x;\n        dp[i][0]=c[i];\n        num[i][0]=i;\n        lg[i]=lg[i/2]+1;\n    }\n    RMQ();\n    ***\n    for(int i=1;i+l-1<=n;i++)\n    \tadd(wz(i+l-1,min(i+r-1,n)),i,i+l-1,min(i+r-1,n));\n    ***\n    while(k--){\n        int d=q.top().w,left=q.top().lid,right=q.top().rid;\n        int e=q.top().data,id=q.top().num;\n        ans+=e;\n        q.pop();\n        ***\n        if(d>left)\n            add(wz(left,d-1),id,left,d-1);\n        if(d<right)\n            add(wz(d+1,right),id,d+1,right);\n        ***\n   }\n    cout<<ans<<endl;\n    return 0;\n}\n```\n\u5b8c\u7ed3\u6492\u82b1~~\n\n\u7ba1\u7406\u5927\u5927\u6c42\u901a\u8fc7",
        "postTime": 1558617593,
        "uid": 98527,
        "name": "juju527",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2048 \u3010[NOI2010]\u8d85\u7ea7\u94a2\u7434\u3011"
    },
    {
        "content": "Debug\u4e86\u4e00\u4e2a\u4e0b\u5348\u3002\u3002\u3002\u5c45\u7136\u662fST\u8868\u91cc\u9762\u5c11\u5199\u4e86\u51e0\u4e2a+1...\n\n\u6211\u4eec\u8bb0$a_i$\u7684\u524d\u7f00\u548c\u4e3a$sum_i$\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u56fa\u5b9a\u7684\u8d77\u70b9$i$\u548c\u957f\u5ea6\u533a\u95f4$l,r$\uff0c\u5b83\u7684\u6700\u503c\u4e3a\n\n$max_{k=i+l-1}^{i+r-1}(sum_k-sum_{i-1})$\n\n\u53c8\u56e0\u4e3a$sum_{i-1}$\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u4e8b\u5b9e\u4e0a\u53ea\u8981\u6c42\u51fa$[l,r]$\u5185\u6700\u5927\u7684$sum_k$\u5373\u53ef\u3002\u4e8e\u662f\u8f6c\u5316\u4e3a\u533a\u95f4RMQ\uff0c\u4f7f\u7528ST\u8868\u6c42\u51fa\u3002\u6211\u4eec\u628a\u6b64\u65f6\u7684\u7b54\u6848\u8bb0\u4e3a$f(i,l,r)$\n\n\u90a3\u4e48\u600e\u4e48\u6c42\u6574\u4e2a\u5e8f\u5217\u7684\u524dm\u5927\u5462\uff1f\n\n\u8003\u8651\u679a\u4e3e\u533a\u95f4\u8d77\u70b9$i$\uff0c\u5c06$f(i,l,r)$\u548c\u53d6\u5230\u7b54\u6848\u7684\u4f4d\u7f6e(\u5373\u4e4b\u524d$sum_k$\u6700\u5927\u7684$k$)\u6784\u6210\u4e00\u4e2a\u56db\u5143\u7ec4$(i,l,r,k)$\u52a0\u5165\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u6309\u7167$f(i,l,r)$\u7684\u5927\u5c0f\u6392\u5e8f\uff0c\u5373$sum_k-sum_{i-1}$\u3002\n\n\u5f53\u6211\u4eec\u53d6\u51fa\u5806\u5934\u5143\u7d20\u65f6(\u8bbe\u4e3a$(i,l,r,nw)$)\uff0c\u5c06\u4ed6\u7684\u6743\u503c\u52a0\u5165\u7b54\u6848\uff0c\u5e76\u5c06\u5176\u5206\u88c2\u6210\u4e24\u6bb5:\n\n1.$(i,l,nw-1,(f(i,l,nw-1)\\texttt{\u53d6\u5230\u7b54\u6848\u7684}k))$\uff0c\u5f53$nw\\ne l$\u65f6\u5b58\u5728\uff1b\n\n2.$(i,nw+1,r,(f(i,nw+1,r)\\texttt{\u53d6\u5230\u7b54\u6848\u7684}k))$\uff0c\u5f53$nw\\ne r$\u65f6\u5b58\u5728\uff1b\n\n\u53d6\u51fam\u6b21\u540e\u7ed3\u675f\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u5f97\u5230\u7b54\u6848\u3002\n\ncode:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,k,l,r,sum[500010],v,mx[500010][20],d[500010][20],id[500010][20];\nlong long ans;\nstruct node{//\u56db\u5143\u7ec4\n\tint id,l,r,nw;\n\tbool operator <(node y)const{\n\t\treturn sum[nw]-sum[id-1]<sum[y.nw]-sum[y.id-1];\n\t}\n}tmp,t;\npriority_queue<node>q;\nint RMQ(int L,int R){//L\u5230R\u7684\u533a\u95f4\u6700\u5927\u503c\u7684\u53d6\u503c\u4f4d\u7f6e\n\tint Max=-2e9,Id;\n\tfor(int i=19;i>=0;i--){\n\t\tif(L+(1<<i)-1<=R){\n\t\t\tif(mx[L][i]>Max){\n\t\t\t\tMax=mx[L][i];\n\t\t\t\tId=id[L][i];\n\t\t\t}\n\t\t\tL=d[L][i]+1;\n\t\t}\n\t}\n\treturn Id;\n}\nint main(){\n\tscanf(\"%d%d%d%d\",&n,&k,&l,&r);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&v);\n\t\tsum[i]=sum[i-1]+v;\n\t\td[i][0]=i;\n\t\tmx[i][0]=sum[i];\n\t\tid[i][0]=i;\n\t}\n\tfor(int j=1;j<=19;j++){//ST\u8868,mx\u7ef4\u62a4\u6700\u5927\u503c,id\u7ef4\u62a4\u4f4d\u7f6e\n\t\tfor(int i=1;i<=n;i++){\n\t\t\td[i][j]=d[d[i][j-1]+1][j-1];\n\t\t\tif(mx[i][j-1]>mx[d[i][j-1]+1][j-1]){\n\t\t\t\tmx[i][j]=mx[i][j-1];\n\t\t\t\tid[i][j]=id[i][j-1];\n\t\t\t}else{\n\t\t\t\tmx[i][j]=mx[d[i][j-1]+1][j-1];\n\t\t\t\tid[i][j]=id[d[i][j-1]+1][j-1];\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n-l+1;i++){//\u52a0\u5165\u521d\u59cb\u7684\u56db\u5143\u7ec4\n\t\ttmp.nw=RMQ(i+l-1,min(n,i+r-1));\n\t\ttmp.id=i;\n\t\ttmp.l=i+l-1;\n\t\ttmp.r=min(n,i+r-1);\n\t\tq.push(tmp);\n\t}\n\twhile(k--){\n\t\tt=q.top();\n\t\tq.pop();\n\t\tans+=sum[t.nw]-sum[t.id-1];//\u7d2f\u8ba1\u7b54\u6848\n\t\tif(t.nw>t.l){//\u5206\u88c2(\u5de6\u8fb9)\n\t\t\ttmp.l=t.l;\n\t\t\ttmp.r=t.nw-1;\n\t\t\ttmp.id=t.id;\n\t\t\ttmp.nw=RMQ(tmp.l,tmp.r);\n\t\t\tq.push(tmp);\n\t\t}\n\t\tif(t.nw<t.r){//\u5206\u88c2(\u53f3\u8fb9)\n\t\t\ttmp.l=t.nw+1;\n\t\t\ttmp.r=t.r;\n\t\t\ttmp.id=t.id;\n\t\t\ttmp.nw=RMQ(tmp.l,tmp.r);\n\t\t\tq.push(tmp);\n\t\t}\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1540808977,
        "uid": 26294,
        "name": "xryjr233",
        "ccfLevel": 9,
        "title": "[2018.10.29]\u9898\u89e3 LuoguP2048/BZOJ2006 [NOI2010]\u8d85\u7ea7\u94a2\u7434(\u533a\u95f4\u6700\u503cRMQ/\u6570\u636e\u7ed3\u6784/\u5806)"
    },
    {
        "content": "st\u8868\u592a\u795e\u5566~\n\n\u4f46\u662f\u4f3c\u4e4e\u4e3b\u5e2d\u6811\u5438\u6c27\u4e4b\u540e\u8dd1\u7684\u98de\u8d77\u5462~(\u6216\u8005\u662f\u56e0\u4e3astl\u7684\u95ee\u9898\uff1f\u53cd\u6b63\u5f00O2\u548c\u4e0d\u5f00O2\u5927\u6982\u5dee\u4e864\u500d\u5e38\u6570)\n\n## \u672c\u9898\u9898\u89e3\n\n\u8fd9\u9053\u9898\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217a\uff0c\u6c42\u524dk\u5927\u957f\u5ea6\u5728(l,r)\u5185\u7684\u5b50\u4e32\u548c\n\n\u7136\u540e\u7b80\u5355\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5$O(n^2)$\u7684\u5904\u7406\u51fa\u6765\u6240\u6709\u5b50\u4e32\u7684\u548c\uff0c\u7136\u540e\u76f4\u63a5\u66b4\u529b\u7684\u8dd1sort\u6216\u8005\u5806\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e3a\u4e86\u5feb\u901f\u8ba1\u7b97\u5b50\u4e32\u548c\u5f53\u7136\u9700\u8981\u524d\u7f00\u548c\n\n\u7136\u800c\u663e\u7136\u4f1at\u7684\u98de\u8d77\u5bf9\u5427\u2026\u2026\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u60f3\u4e00\u4e9b\u673a\u667a\u7684\u65b9\u6cd5\n\n\u8fd9\u9053\u9898\u5462\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u7c7b\u4f3c\u4e8e\u8d2a\u5fc3\u7684\u601d\u8def\uff0c\u5148\u627e\u5230\u6700\u5927\u503c\uff0c\u7136\u540e\u5220\u6389\u6700\u5927\u503c\uff0c\u7ee7\u7eed\u627e\u5269\u4e0b\u503c\u4e2d\u7684\u6700\u5927\u503c\u5c31\u53ef\u4ee5\u4e86\n\n\u5047\u8bbe\u73b0\u5728\u6211\u4eec\u4e00\u4e2a\u533a\u95f4\u90fd\u6ca1\u5220\uff0c\u73b0\u5728\u8981\u627e\u6700\u5927\u503c\uff0c\n\n\u90a3\u4e48\u6211\u4eec\u679a\u4e3e\u5de6\u7aef\u70b9l\uff0c\u7136\u540e\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5de6\u7aef\u70b9l\u54ea\u4e2a\u662f\u6700\u4f18\u7684\u53f3\u7aef\u70b9r\n\u56e0\u4e3a\u957f\u5ea6\u9650\u5236\u662f[l,r]\u56e0\u6b64\u5bf9\u4e8e\u8fd9\u4e2al\u6765\u8bb2\uff0c\u6240\u6709\u5408\u6cd5\u7684\u53f3\u7aef\u70b9r\u5f62\u6210\u4e00\u4e2a\u533a\u95f4\n\n\u5f53\u7136\u662f\u4e00\u4e2a\u533a\u95f4\u7684\u524d\u7f00\u548c\u503c\u7684\u6700\u5927\u503c\u6240\u5bf9\u5e94\u7684r\u4e86\uff0c\u56e0\u4e3a\u603b\u4e4b\u4f60\u90fd\u8981\u51cf\u53bb\u5de6\u7aef\u70b9\u7684\u524d\u7f00\u548c\u2026\u2026\uff0c\u56e0\u6b64\u5f53\u7136\u662f\u8981r\u7684\u524d\u7f00\u548c\u6700\u5927\u54af\n\n\u8fd9\u662f\u4e00\u4e2a\u533a\u95f4\u6700\u5927\u503c\u95ee\u9898\uff0c\u5f53\u7136\u53ef\u4ee5\u4f7f\u7528st\u8868\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\n\n\u4f46\u662f\u5982\u679c\u4f7f\u7528\u4e3b\u5e2d\u6811\u89e3\u51b3\u8fd9\u4e2a\u9759\u6001\u533a\u95f4\u7b2ck\u5927\u95ee\u9898\u4e5f\u4e0d\u662f\u4e0d\u53ef\u4ee5\u5bf9\u5427\u2026\u2026\n\n\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5de6\u7aef\u70b9\u90fd\u6c42\u51fa\u4e86\u4e00\u4e2a\u6700\u5927\u5408\u6cd5\u7684\u5b50\u4e32\u548c\n\n\u6240\u4ee5\u628a\u8fd9\u4e9b\u503c\u653e\u8fdb\u5806\u91cc\u53d6\u5c31\u53ef\u4ee5\u627e\u5230\u6700\u5927\u503c\uff0c\u597d\u4e86\u6211\u4eec\u73b0\u5728\u6709\u4e86\u4e00\u4e2a\u6700\u5927\u503c\uff01\n\n\u73b0\u5728\u6211\u4eec\u53d6\u51fa\u4e86\u8fd9\u4e2a\u6700\u5927\u503c\u2026\u2026\u6211\u4eec\u53d1\u73b0\u6b64\u65f6\u8fd9\u4e2a\u5de6\u7aef\u70b9\u5bf9\u5e94\u7684\u533a\u95f4\u7b2c2\u5927\u53ef\u80fd\u662f\u6b64\u65f6\u6700\u5927\u7684\u503c\uff0c\u56e0\u6b64\u6211\u4eec\u518d\u6c42\u4e00\u904d\u533a\u95f4\u7b2c2\u5927\u63d2\u5806\u91cc\u53bb\uff0c\u540c\u7406\u5982\u679c\u6211\u4eec\u53d6\u51fa\u6765\u6765\u4e86\u533a\u95f4\u7b2c2\u5927\u5c31\u63d2\u533a\u95f4\u7b2c3\u5927\uff0c\u5f53\u7136\u5982\u679c\u53d6\u6389\u4e86\u533a\u95f4\u6700\u5c0f\u503c\u5c31\u4e0d\u80fd\u63d2\u5165\u4e86\u2026\u2026\n\n(\u4ec0\u4e48\uff1f\u4f60\u4e0d\u4f1a\u4f7f\u7528\u4e3b\u5e2d\u6811\u6c42\u9759\u6001\u533a\u95f4\u7b2ck\u5927\uff1f\u51fa\u95e8\u53f3\u8f6c\u4f60\u7ad9\u819c\u677f\u533a\uff0c\u5305\u6559\u5305\u4f1a~)\n\n\u4e0a\u4ee3\u7801~\n\n```C\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;const int N=5*1e5+10;typedef long long ll;\nint n;int k;int l;int r;int sum[N];ll res;int lsh[N];int rk[N];\nint dl[N];int dr[N];\ninline bool cmp(int a,int b){return sum[a]<sum[b];}//\u79bb\u6563\u5316 \nstruct data\n{\n\tint rk;int l;int v;\n\tfriend bool operator <(data a,data b){return a.v<b.v;} \n};priority_queue <data> pq;//\u4fdd\u5b58\u7b54\u6848\u7684\u5806 \nstruct per_linetree//\u4e3b\u5e2d\u6811\u677f\u5b50\uff0c\u538b\u884c\u4e4b\u540e\u8fd8\u662f\u6bd4\u8f83\u77ed\u5c0f\u7684 \n{\n\tint s[25*N][2];int val[25*N];int root[N];int ct;int tim;\n\tper_linetree(){ct=root[0]=1;}\n\tinline void setadd(int p1,int p2,int l,int r,int pos)\n\t{\n\t\tval[p2]=val[p1]+1;if(r-l==1){return;}int mid=(l+r)/2;\n\t\tif(pos<=mid){s[p2][0]=++ct;s[p2][1]=s[p1][1];setadd(s[p1][0],ct,l,mid,pos);}\n\t\telse {s[p2][1]=++ct;s[p2][0]=s[p1][0];setadd(s[p1][1],ct,mid,r,pos);}\n\t}\n\tinline int kth(int p1,int p2,int l,int r,int rk)\n\t{\n\t\tif(r-l==1){return r;}int nv=val[s[p2][0]]-val[s[p1][0]];int mid=(l+r)/2;\n\t\tif(rk>nv){return kth(s[p1][1],s[p2][1],mid,r,rk-nv);}\n\t\telse {return kth(s[p1][0],s[p2][0],l,mid,rk);}\n\t}\n\tinline void cadd(int pos){setadd(root[tim],root[tim+1]=++ct,0,n,pos);tim++;}\n\tinline int ckth(int l,int r,int rk){return kth(root[l],root[r],0,n,rk);}\n}plt;\nint main()\n{\n\tscanf(\"%d%d%d%d\",&n,&k,&l,&r);\n\tfor(int i=1;i<=n;i++){scanf(\"%d\",&sum[i]);sum[i]+=sum[i-1];}//\u524d\u7f00\u548c \n\tfor(int i=1;i<=n;i++){lsh[i]=i;}sort(lsh+1,lsh+n+1,cmp);//\u79bb\u6563\u5316 \n\trk[lsh[1]]=1;for(int i=2;i<=n;i++){rk[lsh[i]]=(sum[lsh[i]]==sum[lsh[i-1]])?rk[lsh[i-1]]:i;}\n\tfor(int i=1;i<=n;i++){plt.cadd(rk[i]);}\n\tdl[0]=l-1;dr[0]=r-1;//\u6c42\u51fa\u6bcf\u4e2ai\u5bf9\u5e94\u7684\u533a\u95f4\u5de6\u53f3\u7aef\u70b9 \n\tfor(int i=1;i<=n;i++)//\u63d2\u5165\u7684\u4e1c\u897f\u4f1a\u6bd4\u8f83\u6076\u5fc3\uff0c\u51d1\u5408\u7740\u770b\u5427\u2026\u2026 \n\t{\n\t\tdl[i]=dl[i-1]+1;dr[i]=min(dr[i-1]+1,n);if(dl[i]>dr[i]){break;}\n\t\tpq.push((data){dr[i]-dl[i]+1,i,sum[lsh[plt.ckth(dl[i]-1,dr[i],dr[i]-dl[i]+1)]]-sum[i-1]});\n\t}\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tdata nw=pq.top();pq.pop();int v=nw.l;res+=nw.v; \n\t\tif(nw.rk==1){continue;}//\u5224\u4e00\u4e0b\u662f\u4e0d\u662f\u6700\u5c0f\u503c \n\t\tpq.push((data){nw.rk-1,v,sum[lsh[plt.ckth(dl[v]-1,dr[v],nw.rk-1)]]-sum[v-1]});//\u4e0d\u662f\u6700\u5c0f\u503c\u5c31\u63a5\u7740\u63d2\u5165 \n\t}printf(\"%lld\",res);return 0;//\u62dc\u62dc\u7a0b\u5e8f~ \n}\n```",
        "postTime": 1524302878,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2048 \u3010[NOI2010]\u8d85\u7ea7\u94a2\u7434\u3011"
    },
    {
        "content": "## upd 2019.12.10 latex\u548cmarkdown\u5316\n## [\u9898\u610f](https://www.luogu.org/problemnew/show/P2048)\n\n\u89e3\u6790\uff1a\n\n\u5148\u8003\u8651\u66b4\u529b:\u5c06\u6bcf\u4e2a\u533a\u95f4\u6c42\u51fa\u6765,\u653e\u8fdb\u4e00\u4e2a\u5806\u91cc,\u53d6\u51fa\u524dk\u4e2a\u5c31\u662f\u7b54\u6848\u3002\n\n\u671f\u671b\u5f97\u5206\uff1a20,\u539f\u56e0:TLE\n\ncode(\u5bf9,\u6211\u771f\u5199\u4e86):\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=5*1e5+10;\nint n,k,L,R,ans;\nint sum[maxn];\npriority_queue<int> q;\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&k,&L,&R);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&sum[i]),sum[i]+=sum[i-1];\n    for(int i=1;i<=n;i++)\n        for(int j=i;j<=n;j++)\n            if(j-i+1>=L&&j-i+1<=R) q.push(sum[j]-sum[i-1]);\n    for(int i=1;i<=k;i++) ans+=q.top(),q.pop();\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\u8003\u8651\u4f18\u5316,\u5148\u770b[\u8fd9\u9053\u9898](https://www.luogu.org/problemnew/show/P1631)\n\n\u8fd9\u9053\u9898\u4e2d\u6211\u4eec\u5e76\u6ca1\u6709\u5c06\u6240\u6709\u7684\u7ec4\u5408\u5168\u90e8\u6c42\u51fa,\u800c\u662f\u5148\u5c06\u4e00\u4e9b\u6700\u4f18\u89e3\u653e\u5165\u5806\u4e2d,\u53d6\u51fa\u540e\u653e\u5165\u6b21\u4e8e\u5b83\u7684\u6700\u4f18\u89e3\u6765\u66f4\u65b0\u3002\n\n\u8fd9\u9053\u9898\u4e5f\u53ef\u4ee5\u7528\u76f8\u540c\u7684\u65b9\u6cd5\u6765\u4f18\u5316\u3002\n\n\u9996\u5148\u533a\u95f4\u548c\u80af\u5b9a\u7528\u524d\u7f00\u548c\u4f18\u5316\u4e86\u3002\n\n\u6211\u4eec\u5148\u56fa\u5b9a\u5de6\u7aef\u70b9,\u5c06\u4ece\u6bcf\u4e2a\u70b9\u5411\u53f3\u7684\u6700\u4f18\u89e3\u653e\u5165,\u8bb0\u4e3a\u56db\u5143\u7ec4:$(x,l,r,t)$,$x$\u662f\u5de6\u7aef\u70b9,$l$\u548c$r$\u662f\u53f3\u7aef\u70b9\u7684\u8303\u56f4,t\u662f\u5f53\u524d\u89e3\u7684\u53f3\u7aef\u70b9\u7684\u4f4d\u7f6e\u3002\u6c42\u89e3\u8be5\u533a\u95f4\u7684\u6700\u4f18\u89e3\u53ef\u4ee5\u7528ST\u8868\u89e3\u51b3\u3002\n\n\u5c06\u8fd9\u4e9b\u6570\u653e\u5165\u540e,\u6211\u4eec\u6bcf\u4ece\u5806\u4e2d\u53d6\u51fa\u4e00\u4e2a\u56db\u5143\u7ec4$(x,l,r,t)$,\u52a0\u4e0a\u5b83\u7684\u7b54\u6848\u540e,\u5411\u5806\u4e2d\u653e\u5165$(x,l,t-1,query(l,t-1))$\u548c$(x,t+1,query(t+1,r))$(\u76f8\u5f53\u4e8e\u653e\u5165\u5bf9\u4e8e$x$\u7684$[l,r]$\u533a\u95f4\u9664\u53bb$t$\u540e\u7684\u6700\u4f18\u89e3,\u6ce8\u610f\u5224\u65ad$l,r$\u662f\u5426\u4e3a$t$)\n\n\u53d6$k$\u6b21\u5373\u4e3a\u7b54\u6848\u3002\n\n\u4e4b\u524d\u505a\u8fc7\u7684\u9898\u601d\u60f3\u8fd8\u662f\u8981\u8bb0\u4f4f\u7684~\n\ncode\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=5*1e5+10;\nint n,k,L,R;\nint st[maxn][30];\nll ans;\nll sum[maxn];\nvoid init()\n{\n    for(int i=1;i<=n;i++) st[i][0]=i;\n    int t=(int)log2(n);\n    for(int j=1;j<=t;j++)\n        for(int i=1;i+(1<<j)-1<=n;i++)\n        {\n            int x=st[i][j-1],y=st[i+(1<<(j-1))][j-1];\n            st[i][j]=sum[x]>sum[y]?x:y;\n        }\n}\nint query(int l,int r)\n{\n    int k=(int)log2(r-l+1);\n    int x=st[l][k],y=st[r-(1<<k)+1][k];\n    return sum[x]>sum[y]?x:y;\n}\nstruct node\n{\n    int x,l,r,t;\n    bool operator < (const node& y)const\n    {\n        return sum[t]-sum[x-1]<sum[y.t]-sum[y.x-1];\n    }\n};\npriority_queue<node> q;\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&k,&L,&R);\n    for(int i=1;i<=n;i++) scanf(\"%lld\",&sum[i]),sum[i]+=sum[i-1];\n    init();\n    //puts(\"1111\");\n    for(int i=1;i<=n;i++)\n        if(i+L-1<=n) q.push((node){i,i+L-1,min(n,i+R-1),query(i+L-1,min(n,i+R-1))});//puts(\"111\");\n    //puts(\"11\");\n    while(k--)\n    {\n        int x=q.top().x,l=q.top().l,r=q.top().r,t=q.top().t;\n    //\tprintf(\"%d %d %d %d\\n\",x,l,r,t);\n        q.pop();ans+=sum[t]-sum[x-1];\n        //puts(\"111\");\n        if(l!=t) q.push((node){x,l,t-1,query(l,t-1)});\n        if(r!=t) q.push((node){x,t+1,r,query(t+1,r)});\n        //puts(\"111\");\n \t}\n    printf(\"%lld\",ans);\n \treturn 0;\n}\n```\n",
        "postTime": 1559708575,
        "uid": 145441,
        "name": "nofind",
        "ccfLevel": 6,
        "title": "P2048 [NOI2010]\u8d85\u7ea7\u94a2\u7434\uff08\u8d2a\u5fc3+RMQ\uff09"
    },
    {
        "content": "\u4e24\u4e2alog\u7684\u505a\u6cd5\uff0c**\u6211\u5199\u7684\u4e0d\u5f00O2\u4f1aT**\uff0c\u6ca1\u6709\u601d\u7ef4\u96be\u5ea6\u3002\n\n\u5176\u5b9e\u53ef\u4ee5\u7ee7\u7eed\u5361\u5e38\u3002\u6bd4\u5982\u79bb\u6563\u5316\u4e00\u4e0b\uff0c\u4f46\u662f\u52a8\u6001\u5f00\u70b9\u5f88\u65b9\u4fbf\u5bf9\u4e0d\u5bf9\uff08\u9003\uff09\n\n\u90a3\u6837\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n\u9898\u76ee\u662f\u8981\u6c42\u524d$k$\u5927\u7684\u548c\uff0c\n\n\u90a3\u4e48\u6211\u4eec\u4e8c\u5206\u7b54\u6848\uff0c\u6c42\u51fa\u7b2c$k$\u5927\uff0c\n\n\u6211\u4eec\u5148\u8bb0\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u8bbe\u4e3as\u3002\n\n\u6211\u4eeccheck\u7684\u65f6\u5019\u679a\u4e3e\u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\u5728\u4e3b\u5e2d\u6811\u91cc\u67e5\uff0c\u6709\u591a\u5c11\u4e2a\u662f\u5408\u6cd5\u7684\u3002\n\n\u8bbe\u6211\u4eec\u4e8c\u5206\u7684\u7b54\u6848\u662f$x$\uff0c\u5de6\u7aef\u70b9\u4e3a$i$\uff0c\u90a3\u4e48\u53f3\u7aef\u70b9\u7684\u8303\u56f4\u4e3a$i+L-1$\u5230$i+R-1$\u3002\n\n\u7136\u540e\u7b26\u5408\u6761\u4ef6\u7684\u53f3\u7aef\u70b9$p$\u8981\u6ee1\u8db3\u6761\u4ef6$s_p-s_{i-1}\\ge x$\n\n\u6240\u4ee5$s_p\\ge x+s_{i+1}$\n\n\u6211\u4eec\u6700\u540e\u6c42\u7684\u65f6\u5019\u8981\u6ce8\u610f\uff0c\u548c\u7b2ck\u5927\u5143\u7d20\u503c\u76f8\u540c\u7684\u53ef\u80fd\u4e0d\u6b62k\u4e2a\u3002\n\n\u6240\u4ee5\u6211\u4eec\u628a\u5927\u4e8e\u4e8c\u5206\u51fa\u6765\u7684\u7b2ck\u5927\u503c\u52a0\u8d77\u6765\uff0c\u6700\u540e\u518d\u7b97\u4e00\u4e0b\u3002\n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nvoid qmax(int &x,int y) {if (x<y) x=y;}\nvoid qmin(int &x,int y) {if (x>y) x=y;}\ninline ll read()\n{\n    char s;\n    ll k=0,base=1;\n    while((s=getchar())!='-'&&!(isdigit(s)));\n    if(s=='-')base=-1,s=getchar();\n    while(isdigit(s)){k=k*10+(s^'0');s=getchar();}\n    return k*base;\n}\ninline void write(ll x)\n{\n    static char cnt,num[25];cnt=0;\n    if (!x)\n    {\n        putchar('0');\n        return;\n    }\n    for (;x;x/=10) num[++cnt]=x%10;\n    for (;cnt;putchar(num[cnt--]+48));\n}\nconst int maxn=5e5+100;\nconst int N=500000000;\nint n,k,L1,R1,a[maxn],cnt,b[maxn],len;\nll t[maxn*40];\nint L[maxn*40],R[maxn*40],rt[maxn];\nll s[maxn*40];\nvoid insert(int&d,int d1,int x,int y,int p)\n{\n    d=++cnt;\n    *(t+d)=t[d1];s[d]=s[d1];\n    L[d]=(*(L+d1)),R[d]=R[d1];\n    if (x==y)\n    {\n        t[d]++;s[d]+=x;\n        return;\n    }\n    int mid=(x+y)>>1;\n    if (p<=mid) insert(L[d],(*(L+d1)),x,mid,p);\n    else insert(R[d],R[d1],mid+1,y,p);\n    *(t+d)=t[L[d]]+t[R[d]];\n    s[d]=s[L[d]]+s[R[d]];\n}\nll find(int d1,int d2,int x,int y,int K)//\u6c42\u4e8e\u7b49\u4e8ek\u7684\u6570\u7684\u4e2a\u6570\n{\n    if (t[d2]-t[d1]==0) return 0;\n    if (x==y) return t[d2]-t[d1];\n    int mid=(x+y)>>1;\n    if (K<=mid) return t[R[d2]]-t[R[d1]]+find((*(L+d1)),L[d2],x,mid,K);\n    return find(R[d1],R[d2],mid+1,y,K);\n}\nll Find(int d1,int d2,int x,int y,int K)//\u6c42\u5927\u4e8e\u7b49\u4e8eK\u7684\u6570\u7684\u548c\n{\t\n    if (t[d2]-t[d1]==0) return 0;\n    if (x==y) return s[d2]-s[d1];\n    int mid=(x+y)>>1;\n    if (K<=mid) return s[R[d2]]-s[R[d1]]+Find((*(L+d1)),L[d2],x,mid,K);\n    return Find(R[d1],R[d2],mid+1,y,K);\n}\ninline bool check(int x)\n{\n    ll sum=0;\t\n    for (int i=1;i+L1-1<=n;i++)\n    {\n        sum+=find(rt[i+L1-2],rt[min(i+R1-1,n)],-N,N,x+b[i-1]);\n    }\n    return sum>=k;\n}\nll sum,ans;\nsigned main()\n{\n#ifdef ylx\n    freopen(\"piano9.in\",\"r\",stdin);\n    freopen(\"p2048.out\",\"w\",stdout);\n#endif\n    n=read();\n    k=read();\n    L1=read();R1=read();len=R1-L1;\n    for (int i=1;i<=n;i++) \n    {\n        a[i]=read();\n        b[i]=b[i-1]+a[i];//\u524d\u7f00\u548c \n        insert(rt[i],rt[i-1],-N,N,b[i]);//\u63d2\u5165\u5230\u4e3b\u5e2d\u6811\u4e2d\n    }\n    int mid,l=-N,r=N;\n    while (l<=r)//\u4e8c\u5206\u7b2ck\u5927\n    {\n        mid=(l+r)>>1;\n        if (check(mid)) ans=mid,l=mid+1; else r=mid-1;\n    }\n    int Cnt=0,C1;\n    for (int i=1;i+L1-1<=n;i++)\n    {\n        C1=find(rt[i+L1-2],rt[min(n,i+R1-1)],-N,N,ans+b[i-1]+1);\n        sum+=Find(rt[i+L1-2],rt[min(n,i+R1-1)],-N,N,ans+b[i-1]+1);\n        sum-=(ll)b[i-1]*C1;//\u53bb\u6389\u524d\u9762\u7684\u90e8\u5206\uff08\u524d\u9762\u4e0d\u8981\u7b97\uff09\n        Cnt+=C1;\n    }\n    //printf(\"%d %lld\\n\",Cnt,ans);\n    sum+=(ll)(k-Cnt)*ans;//\u52a0\u4e0a\u5269\u4e0b\u7684\u3002\n    printf(\"%lld\\n\",sum);\n    return 0;\n}\n```",
        "postTime": 1535717954,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2048 \u3010[NOI2010]\u8d85\u7ea7\u94a2\u7434\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u771f\u7684\u597d\u5999\u5999\u554a~~\u771f\u6015\u81ea\u5df1\u5fd8\u8bb0\u4e86\u8fd9\u4e2a\u5999\u5999\u7684\u601d\u8def~~\n\n\u9996\u5148\u8003\u8651\u9898\u76ee\u8981\u6211\u4eec\u6c42\u4ec0\u4e48\uff0c\u5373\u524d$k$\u5927\u7684\u533a\u95f4\u6570\u548c\n\n\u5176\u4e2d\uff0c\u533a\u95f4\u957f\u5ea6$[L,R]$\n\n\u6211\u4eec\u8003\u8651\u505a\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u9898\u76ee\u6240\u6c42\u5373\uff1a\n\n$sum_x - \\min_{i=l}^r(sum_i)$\n\n\uff08$l,r$\u8868\u793a\u53ef\u884c\u7684\u8f6c\u79fb\u533a\u95f4$(x-r+1,x-l+1)$\uff09\n\n\u7136\u800c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u90fd\u8003\u8651\u662f\u975e\u5e38\u4e0d\u660e\u667a\u7684\uff0c\u6240\u6709\u7684\u8fd9\u79cd\u503c\u90fd\u6c42\u7684\u590d\u6742\u5ea6\u662f$O(L*n*\\log)$\n\n\uff08\u5f53\u7136\u8981\u7528\u5806\u5b58\u4e00\u4e0b\u7ef4\u62a4\u6700\u5927\u503c\uff09\n\n**$But$**\uff0c\u6211\u4eec\u771f\u7684\u9700\u8981\u6c42\u51fa\u6240\u6709\u8fd9\u79cd\u503c\u5417\uff1f\u6211\u4eec\u53ea\u8981\u6c42\u524d$k$\u5927\u4e0d\u662f\u5417\uff1f\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u6709\u4e00\u4e2a\u6bd4\u8f83\u521d\u6b65\u7684\u60f3\u6cd5\uff0c\u6211\u4eec\u6bcf\u6b21\u5f39\u51fa\u6700\u5927\u7684\u7b54\u6848\uff0c\u8fd9\u6837\u64cd\u4f5c$k$\u6b21\u5373\u53ef\u4e0d\u662f\u4e48\u3002\n\n\u7136\u800c\u5168\u90e8\u5b58\u5165\u5806\u5185\u590d\u6742\u5ea6\u4e0d\u5bf9\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u518d\u4ed4\u7ec6\u601d\u8003\u5f97\u5230\uff1a\n\n\u5bf9\u6bcf\u4e2a$x$\u6c42\u51fa\u6700\u5927\u503c\uff08\u663e\u7136\u6709$x$\u7684\u6700\u5927\u503c\u5b58\u5728\uff0c\u4ee5$x$\u7ed3\u5c3e\u7684\u5176\u4ed6\u503c\u4e0d\u4f1a\u6210\u4e3a\u7b54\u6848\uff09\uff0c\u628a\u8fd9\u4e9b\u6700\u5927\u503c\u4e22\u5165\u5806\u5185\uff0c\u6bcf\u6b21\u5220\u9664\u540e\u66f4\u65b0\u6700\u5927\u503c\u5bf9\u5e94\u5143\u7d20\u7684\u503c\u3002\n\n\u6211\u4eec\u5c1d\u8bd5\u5c06\u6bcf\u4e2a\u70b9\u7684\u8f6c\u79fb\u533a\u95f4\u548c\u5176\u672c\u8eab\u53ca\u7b54\u6848\u548c\u7b54\u6848\u4ece\u90a3\u91cc\u6765\u770b\u4f5c\u4e00\u4f53\uff0c\u7528\u4e00\u4e2a\u4e94\u5143\u7ec4\u8868\u793a\n\n$(l,r,x,w,t)$\u8868\u793a\u8fd9\u6bb5\u533a\u95f4$(l,r)$\u4ee5$x$\u4e3a\u7ed3\u5c3e\u7684\u6700\u5927\u7b54\u6848\u4e3a$w$\uff0c\u4e14\u662f\u901a\u8fc7$(sum_x-sum_t)$\u5f97\u5230\u7684\uff0c\u56e0\u4e3a$sum_x$\u672c\u8eab\u5927\u5c0f\u4e0d\u53d8\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u6c42\u51fa$(l,r)$\u533a\u95f4\u5185\u6700\u5c0f$sum_t$\u5373\u53ef\n\n\u6211\u4eec\u5c06\u8fd9\u4e9b\u4e94\u5143\u7ec4\u4f9d\u6b21\u4e22\u5165\u4e00\u4e2a\u5806\u5185\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f39\u51fa\u6700\u5927\u7684\u7b54\u6848\uff0c\u800c\u4e14\u4ea6\u53ef\u4ee5\u4fdd\u8bc1\u8fd9\u4e00\u5b9a\u662f\u6700\u5927\u7684\u7b54\u6848\u3002\n\n\u6bcf\u6b21\u5f39\u51fa\u540e\u6211\u4eec\u628a\u4e94\u5143\u7ec4\u5206\u88c2\u4e00\u4e0b\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u4e0d\u80fd\u8f6c\u79fb\u7ed9$x$\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u539f\u6765\u7684\u4e94\u5143\u7ec4\u524d\u4e09\u9879\u9879\u53d8\u6210\uff1a$(l,t-1,x),(t+1,r,x)$\n\n\u6bcf\u6b21\u5206\u88c2\u540e\u91cd\u65b0\u6c42\u4e00\u4e0b$(l,r)$\u5185\u6700\u5c0f\u503c\u518d\u91cd\u65b0\u4e22\u5165\u5806\u597d\u4e86\u3002\n\n\u5f53\u7136\u6c42\u8fd9\u4e2a\u6700\u5c0f\u503c\u7528\u4ec0\u4e48\u90fd\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662fST\u8868\u5e38\u6570\u5c0f\uff0c\u5c31\u7528ST\u8868\u7b97\u4e86\n\n\u590d\u6742\u5ea6$O(k\\log(n+k))$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ; \n#define int long long\nint read() {\n\tchar cc = getchar() ; int cn = 0, flus = 1 ; \n\twhile( cc < '0' || cc > '9' ) { if( cc == '-' ) flus = -flus; cc = getchar() ; }\n\twhile( cc >= '0' && cc <= '9' ) cn = cn * 10 + cc - '0', cc = getchar() ; \n\treturn cn * flus ; \n}\nconst int N = 5e5 + 5 ; \n#define inf 123456789\n#define rep( i, s, t ) for( register int i = s; i <= t; ++ i )\nint n, k, L, R, a[N], mx[N][22], rj[N][22], sum[N], Ans ;  \nstruct node {\n\tint l, r, fr, wh, val ;\n\tbool operator < ( const node& x ) const {\n\t\treturn val < x.val ; \n\t}\n};\npriority_queue<node> q ; \nint query( int l, int r ) {\n\tint w = log2(r - l + 1);\n\tif( mx[l][w] > mx[r - ( 1 << w ) + 1][w] ) return rj[l][w] ; \n\telse return rj[r - ( 1 << w ) + 1][w] ;\n}\nvoid ins( int l, int r, int x ) {\n\tint y = query( l, r ) ;\n\tq.push((node){ l, r, x, y, sum[y] - sum[x - 1] });\n}\nvoid init() {\n\trep( j, 1, 21 ) {\n\t\tfor( int i = 1; i + ( 1 << j ) - 1 <= n; ++ i ) {\n\t\t\tmx[i][j] = mx[i][j - 1], rj[i][j] = rj[i][j - 1];\n\t\t\tif( mx[i + ( 1 << (j - 1) )][j - 1] > mx[i][j - 1] ) \n\t\t\tmx[i][j] = mx[i + ( 1 << (j - 1) )][j - 1], rj[i][j] = rj[i + ( 1 << (j - 1) )][j - 1];\n\t\t}\n\t}\n\tint l, r, x ; \n\trep( i, 1, n ) {\n\t\tl = i + L - 1, r = i + R - 1, r = min( r, n );\n\t\tif( l <= n ) ins( l, r, i ) ;\n\t}\n}\nvoid solve() {\n\trep( i, 1, k ) {\n\t\tif( q.empty() ) break ; \n\t\tnode u = q.top(); Ans += 1ll * u.val; q.pop();\n\t\tif( u.wh != u.r ) ins( u.wh + 1, u.r, u.fr ) ;\n\t\tif( u.wh != u.l ) ins( u.l, u.wh - 1, u.fr ) ; \n\t} \n\tprintf(\"%lld\\n\", Ans ) ;\n}\nsigned main() {\n\tn = read(), k = read(); L = read(), R = read() ;\n\trep( i, 1, n ) a[i] = read(), rj[i][0] = i, sum[i] = sum[i - 1] + a[i], mx[i][0] = sum[i] ; \n\tinit(), solve() ;\n\treturn 0 ; \n}  \n```",
        "postTime": 1563199389,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2048 \u3010[NOI2010]\u8d85\u7ea7\u94a2\u7434\u3011"
    },
    {
        "content": "# \u524dK\u5927\u503c\u6c42\u89e3\u65b9\u6cd5\n\n\u8fd9\u9898\u7684\u601d\u7ef4\u96be\u5ea6\u8fd8\u662f\u5f88\u5927\u7684\n\n\u770b\u9898\u89e3\u6211\u624d\u505a\u51fa\u6765\uff08\u597d\u5427\u90a3\u4e0d\u53eb\u505a\u51fa\u6765\n\n# 1.RMQ\u95ee\u9898\n\nRMQ \u5373\u533a\u95f4\u6700\u5927\u503c,\u5206\u4e3a\u52a8\u6001\u548c\u9759\u6001\u533a\u95f4\u6700\u5927\u503c,\u52a8\u6001\u533a\u95f4\u6700\u5927\u503c\u4f7f\u7528\u7ebf\u6bb5\u6811\u5b9e\u73b0\uff08\u53ef\u4ee5\u6301\u4e45\u5316\uff09\n\n\u4eca\u5929\u7684\u91cd\u70b9\u662f\u9759\u6001\u533a\u95f4\u6700\u5927\u503c\u2014\u2014ST\u8868,\uff08\u8349\uff0c\u6211\u8fdeST\u8868\u90fd\u4e0d\u4f1a\u6211\u6562\u6765\u505a\u8fd9\u9053\u9898\uff1f\uff09\n\nST\u8868\u7684\u539f\u7406\u5c31\u662f\u500d\u589e\uff0c\u6709\u70b9\u50cf\u500d\u589eDP\n\n\u5b9e\u73b0\u4f7f\u7528\u6570\u7ec4$ f_{i, j} = max{A_k|k \u2208[i, i+2^j]}$ \n\u8f6c\u79fb\uff1a $ f_{i, j} = max(f_{i, j-1}, f_{i + 2^{j- 1},j - 1})$ \n\u521d\u59cb\u503c\uff1a$f_{i, 0} = A_{i} $\n\n\u6613\u9519\u70b9\uff1a$ \\color{red}\\text{\u5f88\u591a\u7ec6\u8282\u8981\u6ce8\u610f} $\n\u5982\u4e0b\uff1a\n\n1.\u521d\u59cb\u503c\u662f$f_{i,0} = A_{i} $ \u800c\u4e0d\u662f$f_{i, 1}=A_{i} $  \n2.\u4f4d\u8fd0\u7b97\u4e00\u5b9a\u8981\u52a0\u62ec\u53f7   \n3.\u8f6c\u79fb\u65f6\u7684+1/-1\u6781\u5bb9\u6613\u51fa\u5c94\u5b50   \n4.\u5de6\u53f3\u8fb9\u754c\u4e00\u5b9a\u8981\u5bf9\u4e0a  \n5.\u521d\u59cb\u5316\u53ca\u5176\u4ed6\u4efb\u4f55\u8111\u6b8b\u9519\u8bef  \n\n## Code.\n\n### init:\n\n```cpp\nvoid init()\n{\n\tmemset(ST, -127 / 3, sizeof(ST));\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tcin >> A[i];\n\t}\n\tfor (int i = n; i > 0; i--)\n\t{\n\t\tST[i][0] = A[i];\n\t\tfor (int j = 1; i + (1 << j) - 1 <= n; j++)\n\t\t{\n\t\t\tST[i][j] = max(ST[i][j - 1], ST[i + (1 << (j - 1))][j - 1]);\n\t\t}\n\t}\n}\n```\n\n( pos\u6307\u7684\u662f\u6700\u5927\u503c\u7684\u4f4d\u7f6e\uff0c\u89c6\u60c5\u51b5\u800c\u5b9a\uff09\n\n### qry:\n\n```cpp\nint qryk(int l, int r)\n{\n\tint tmp = int(log(r - l + 1) / log(2));\n\tint maxsumk = max(ST[l][tmp], ST[r - (1 << tmp) + 1][tmp])\n\treturn maxsumk;\n}\n```\n\n\u8fd8\u6709\u53e6\u4e00\u79cd\u5de7\u5999\u5730\u5199\u6cd5\uff0c\u4f7f\u5f97\u652f\u6301\u67e5\u8be2\u6700\u503c\u7684\u4f4d\u7f6e\uff1a(\u611f\u8c22Nekroz\uff09\n\n```cpp\nvoid init(int n) {\n    for (int i = 1; i <= n; i++) table[i][0] = i;\n    for (int j = 1; (1 << j) <= n; j++)\n        for (int i = 1; i + (1 << j) - 1 <= n; i++) {\n            int x = table[i][j - 1], y = table[i + (1 << (j - 1))][j - 1];\n            table[i][j] = sum[x] > sum[y] ? x : y;\n        }\n}\nint query(int l, int r) {\n    int k = log2(r - l + 1);\n    int x = table[l][k], y = table[r - (1 << k) + 1][k];\n    return sum[x] > sum[y] ? x : y;\n}\n```\n\n# 2.\u672c\u9898\u7684\u5904\u7406\n\n\u672c\u9898\u7684\u5904\u7406\u6bd4\u8f83\u9ebb\u70e6\uff0c\u5927\u81f4\u601d\u8def\u5982\u4e0b\uff1a\n\n\u9996\u5148\u89e3\u51b3\u4e00\u4e2a\u8bef\u4f1a\uff1a\u97f3\u7b26\u96c6\u5408\u76f8\u540c\u5e76\u4e0d\u662f\u7f8e\u5999\u5ea6\u96c6\u5408\u76f8\u540c\uff0c\u56e0\u6b64\u90a3\u53e5\u8bdd\u51e0\u4e4e\u53ef\u4ee5\u5ffd\u7565\n\n\u6211\u4eec\u8fd9\u4e2a\u80af\u5b9a\u662f\u53d6\u5e8f\u5217\u4e2d\u6700\u5927\u7684k\u4e2a\u548c\u5f26,\u90a3\u4e48\u6700\u4e3a\u66b4\u529b\u65b9\u6cd5\u662f\u53d6\u51fa\u5e8f\u5217\u4e2d\u6240\u6709\u7684\u548c\u5f26,\u53d6\u6700\u5927\u7684K\u4e2a\uff0c\u80af\u5b9a\u8d85\u65f6.\n\n\u89e3\u51b3\u8fd9\u79cd\u95ee\u9898\u7684\u4e00\u822c\u65b9\u6cd5\uff1a\n\n$ \\color{red}\\text{\u5efa\u7acb\u96c6\u5408S, \u4f7f\u5f53\u524d\u5269\u4f59\u6700\u5927\u503c\u4e00\u5b9a\u5b58\u5728\u4e8eS\u4e2d\uff0c\u4e14\u4f7f\u5f97\u5c06\u6700\u5927\u503c\u6392\u9664\u540e\uff0c\u96c6\u5408\u6027\u8d28\u4e0d\u53d8} $\n\n\u8fd9\u4e00\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\uff1a\n\n$ Nowmax = max{f_{o,l,r}}$,   \n$ f_{o,l,r} = max{sum_k - sum_{o-1}|k\u2208[l,r]}$,\n\n\u8fd9\u6837\u505a\u7684\u597d\u5904\uff1a\u53ef\u4ee5\u5b8c\u7f8e\u5730\u6ee1\u8db3\u9898\u76ee\u4e2d$[l,r]$\u7684\u6027\u8d28,\u4e14\u53d6\u51fa\u6700\u4f18\u89e3\u540e\uff0c\u53ef\u4ee5\u5c06$(o,l,r)$\u5207\u6210\u524d\u540e\u4e24\u534a\uff0c\u653e\u56de\u53bb\uff0c\u539f\u96c6\u5408\u6027\u8d28\u4e0d\u53d8\n\n\u5177\u4f53\u5b9e\u73b0\u4f7f\u7528\u4e8c\u53c9\u5806\uff0c\u5c06\u4e09\u5143\u7ec4\u653e\u8fdb\u5806\u91cc\uff0c\u7136\u540e\u53d6k\u6b21\u5806\u9876\uff0c\u53d6\u5b8c\u5806\u9876\u5c06\u5806\u9876\u5207\u6210\u4e24\u534a\u653e\u56de\u5806\u91cc\u3002\n\n# Talk is cheap.\n\n```cpp\n\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n#include <cmath>\n\nusing namespace std;\nconst int maxn = 500005 * 4;\n\nint n, k, L, R, A[maxn];\nint sum[maxn], ST[maxn][20], pos[maxn][20];\n\nvoid init()\n{\n\tmemset(sum, -127 / 3, sizeof(sum));\n\tmemset(ST, -127 / 3, sizeof(ST));\n\tcin >> n >> k >> L >> R;\n\tsum[0] = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tcin >> A[i];\n\t\tsum[i] = sum[i - 1] + A[i];\n\t}\n\tfor (int i = n; i > 0; i--)\n\t{\n\t\tST[i][0] = sum[i]; pos[i][0] = i;\n\t\tfor (int j = 1; i + (1 << j) - 1 <= n; j++)\n\t\t{\n\t\t\tST[i][j] = max(ST[i][j - 1], ST[i + (1 << (j - 1))][j - 1]);\n\t\t\tpos[i][j] = ST[i][j - 1] > ST[i + (1 << (j - 1))][j - 1] ? pos[i][j - 1] : pos[i + (1 << (j - 1))][j - 1];\n\t\t}\n\t}\n}\n\nint qryk(int o, int l, int r)\n{\n\tint tmp = int(log(r - l + 1) / log(2));\n\tint maxsumk = ST[l][tmp] > ST[r - (1 << tmp) + 1][tmp] ?\n\t\tpos[l][tmp] : pos[r - (1 << tmp) + 1][tmp];\n\treturn maxsumk;\n}\n\nstruct node\n{\n\tint o, l, r, k;\n\tbool operator <(const node b) const\n\t{\n\t\treturn sum[k] - sum[o - 1] < sum[b.k] - sum[b.o - 1];\n\t}\n} tmp, tmp2;\n\npriority_queue<node> hp;\n\nint main()\n{\n\tinit();\n\tfor (int o = 1; o + L - 1 <= n; o++)\n\t{\n\t\ttmp.o = o;\n\t\ttmp.l = o + L - 1;\n\t\ttmp.r = min(n, o + R - 1);\n\t\ttmp.k = qryk(o, tmp.l, tmp.r);\n\t\thp.push(tmp);\n\t}\n\tlong long ans = 0;\n\twhile (k--)\n\t{\n\t\ttmp = hp.top(); hp.pop();\n\t\tans += sum[tmp.k] - sum[tmp.o - 1];\n\t\tif (tmp.k != tmp.r)\n\t\t{\n\t\t\ttmp2 = tmp;\n\t\t\ttmp2.l = tmp.k + 1;\n\t\t\ttmp2.k = qryk(tmp2.o, tmp2.l, tmp2.r);\n\t\t\thp.push(tmp2);\n\t\t}\n\t\tif (tmp.k != tmp.l)\n\t\t{\n\t\t\ttmp.r = tmp.k - 1;\n\t\t\ttmp.k = qryk(tmp.o, tmp.l, tmp.r);\n\t\t\thp.push(tmp);\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1582516926,
        "uid": 148438,
        "name": "Linshey",
        "ccfLevel": 9,
        "title": "P2048 [NOI2010]\u8d85\u7ea7\u94a2\u7434"
    },
    {
        "content": "\u5927\u81f4\u9898\u610f\u662f\u6c42\u524dk\u5927\u957f\u5ea6\u5728l\u5230r\u957f\u5ea6\u7684\u5b50\u4e32\u548c\u3002\n\n\u5148\u7528\u524d\u7f00\u548c\u5904\u7406\u6570\u636e\uff0c\u7528st\u8868\u9884\u5904\u7406\u533a\u95f4\u6700\u5c0f\u503c\n\n\u7136\u540e\u6784\u5efa\u4e00\u4e2a\u5927\u6839\u5806\n\n\u961f\u91cc\u5b58\u50a8\u5de6\u8fb9\u754c\u7684\u8303\u56f4(-1)\uff0c\u53f3\u8fb9\u754c\uff0c\u4ee5\u6b64\u4e3a\u53f3\u8fb9\u754c\u7684\u6700\u5927\u7b54\u6848\uff0c\u6700\u5927\u7b54\u6848\u65f6\u7684\u5de6\u8fb9\u754c\uff08-1\uff09\n\n\u6bcf\u6b21\u53d6\u51fa\u90fd\u628a\u5de6\u8fb9\u754c\u7684\u8303\u56f4\u62c6\u5206\u62102\u4efd\n\n\u7ef4\u62a4\u4e00\u4e0b\u5c31\u597d\u4e86\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nll a[500005],i,j,k,lll,rr,xx,yy,zz,ed,ans,n;\nint st[500005][20];\nstruct da{\n    ll l1,l2,r,x,sum;\n}h[1000005],yyyy;\nint min(int x,int y)\n{\n    return a[x]<a[y]?x:y;\n}\ninline void read(ll &xxx)\n{\n    char ch;ll bo=0;xxx=0;\n    for (ch=getchar();ch<'0'||ch>'9';ch=getchar())if (ch=='-')bo=1;\n    for (;ch>='0'&&ch<='9';xxx=xxx*10+ch-'0',ch=getchar());\n    if (bo)xxx=-xxx;\n}\nvoid up(ll i)\n{\n    if (i==1) return;\n    if (h[i].sum>h[i>>1].sum)\n    {\n        swap(h[i],h[i>>1]);\n        up(i>>1);\n    }\n}\nvoid down(ll i)\n{\n    //cout<<i<<endl;\n    ll j=i<<1;\n    if (j>ed) return;\n    if (j<ed)\n        if (h[j].sum<h[j+1].sum)\n            ++j;\n    if (h[i].sum<h[j].sum)\n    {\n        swap(h[i],h[j]);\n        down(j);\n    }\n}\nvoid build(ll z1,ll z2,ll y)\n{\n    //cout<<z1<<' '<<z2<<' '<<y<<endl;\n    ll m = int(double(log(z2-z1+1))/double(log(2)));\n    ++ed;\n    h[ed].l1=z1;\n    h[ed].l2=z2;\n    h[ed].r=y;\n    if (z1==z2) \n        h[ed].x=z1;\n    else h[ed].x=min(st[z1][m],st[z2-(1<<m)+1][m]);\n    h[ed].sum=a[y]-a[h[ed].x];\n    up(ed);\n}\nvoid cut()\n{\n    da o=h[1];\n    //cout<<'!'<<h[1].l1<<' '<<h[1].l2<<' '<<h[1].r<<' '<<h[1].x<<' '<<h[1].sum<<endl;\n    ans+=h[1].sum;\n    h[1]=h[ed];\n    --ed;\n    down(1);\n    if (o.l1<=o.x-1) \n        build(o.l1,o.x-1,o.r);\n    if (o.l2>=o.x+1)\n        build(o.x+1,o.l2,o.r);\n    //for (ll i=1;i<=ed;i++)\n    //    cout<<'?'<<h[i].l1<<' '<<h[i].l2<<' '<<h[i].r<<' '<<h[i].x<<' '<<h[i].sum<<endl;\n}\nint main()\n{\n    read(n);\n    read(k);\n    read(lll);\n    read(rr);\n    for (i=1;i<=n;++i)\n    {    \n        read(a[i]);\n        a[i]+=a[i-1];\n        st[i][0]=i;\n    }\n    a[0]=0;\n    xx=double(log(n))/double(log(2));\n    for (i=1;i<=xx;i++)\n    {\n        yy=1<<i;\n        zz=yy>>1;\n        for (j=0;j<=n-yy+1;j++)\n            st[j][i]=min(st[j][i-1],st[j+zz][i-1]);\n    }\n    /*for (i=0;i<=n;i++)\n        cout<<a[i]<<' ';\n    cout<<endl;\n    for (i=1;i<=xx;i++)\n    {\n        for (j=0;j<=n-(1<<i)+1;j++)\n            cout<<j<<' '<<i<<' '<<st[j][i]<<';';\n        cout<<endl;\n    }*/\n    for (i=lll;i<=n;i++)\n        build(max(i-rr,(ll)0),i-lll,i);\n    //for (i=1;i<=ed;i++)\n    //    cout<<h[i].l1<<' '<<h[i].l2<<' '<<h[i].r<<' '<<h[i].x<<' '<<h[i].sum<<endl;\n    for (i=1;i<=k;i++)\n    {    \n        cut();\n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1484030260,
        "uid": 18935,
        "name": "axs7384",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2048 \u3010\u8d85\u7ea7\u94a2\u7434\u3011"
    },
    {
        "content": "\u5927\u6982......\u8fd9\u9898\u5c31\u6211\u60f3\u590d\u6742\u4e86\uff1f\n\n\u770b\u5230\u9898\uff1a\u524d\u7f00\u548c\u4f18\u5316--->\u4f18\u5148\u961f\u5217+\u533a\u95f4\u7b2ck\u5927--->priority\\_queue+\u6811\u5957\u6811\n\n\u7136\u540e\u53d1\u73b0\u4e24\u4e2alog\u8fc7\u4e0d\u53bb...\n\n\u518d\u601d\u8003\u5230\u8fd9\u9898\u7684\u533a\u95f4\u7b2ck\u5927\u662f\u4e0d\u5e26\u4fee\u7684\n\n\u4e8e\u662f\u5c31\u81ea\u7136\u800c\u7136\u7684\u60f3\u5230\u4e86\u4e3b\u5e2d\u6811\n\n\u601d\u8def\u5927\u81f4\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u70b9x\uff0c\u4ee5\u5b83\u4e3a\u53f3\u7aef\u70b9\u7684\u6700\u4f18\u533a\u95f4\u5148\u585e\u5165\u4e00\u4e2aheap\u4e2d\n\n\u8fd9\u4e00\u6b65\u7b49\u4ef7\u4e8e\u6c42\u524d\u7f00\u548cs[i]\u51cf\u53bbx-max\u5230x-min\u8fd9\u6bb5\u524d\u7f00\u548c\u533a\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u4e3b\u5e2d\u6811\u6c42\u7b2c\u4e00\u5c0f\n\n\u7136\u540e\u6bcf\u6b21pop\u51fa\u5806\u9876\u7d2f\u5165\u7b54\u6848\uff0c\u5047\u8bbe\u8fd9\u6b21pop\u51fa\u7684\u4f4d\u7f6e\u662fi\uff0c\u4e3a\u7b2cRank[i]\u5c0f\n\n\u90a3\u5c31\u5c06\u4ee5i\u4e3a\u53f3\u7aef\u70b9\u7684\u524d\u7f00\u548c\u51cf\u53bb\u533a\u95f4i-max\u5230i-min\u7684\u7b2cRank[i]+1\u5c0f\u7684\u524d\u7f00\u548c\u538b\u5165heap\n\n\u540c\u65f6Rank[i]++;\u8fd9\u4e00\u5207\u90fd\u5229\u7528\u9759\u6001\u4e3b\u5e2d\u6811\u7684\u533a\u95f4\u7b2ck\u5c0f\u89e3\u51b3\n\n\u6211\u7528\u4e86STL\u7684\u4f18\u5148\u961f\u5217\uff0c\u8dd1\u4e861500ms\uff0c\u65f6\u95f4\u548c\u7a7a\u95f4\u90fd\u6bd4RMQ\u8981\u591a\u7684\u591a\u3002\u4e0d\u8fc7\u597d\u60f3\u554a...\n\n\nAttention\uff1a\n\ni-max\u5230i-min\u53ef\u80fd\u4f1a<=0\u9700\u8981\u7279\u5224\uff0c\u6211\u76f4\u63a5\u5728\u5e8f\u5217\u6700\u524d\u7aef\u5f3a\u884c\u52a0\u5165\u4e00\u4e2a0\u4ee5\u907f\u514d\n\n\n\u4ee5\u4e0b\u662f\u6211\u7684\u4ee3\u7801\uff1a\n\n    \n        \n\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<queue>\n#include<algorithm>\n#define rt register int\n#define l printk()\n#define ll long long\n#define r read()\nusing namespace std;\ninline ll read()\n{\n    ll x = 0; int zf = 1; char ch;\n    while (ch != '-' && (ch < '0' || ch > '9')) ch = getchar();\n    if (ch == '-') zf = -1, ch = getchar();\n    while (ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar(); return x * zf;\n}\nvoid write(ll y)\n{\n    if (y < 0) putchar('-'), y = -y;\n    if (y > 9) write(y / 10);\n    putchar(y % 10 + '0');\n}\ninline int min(const int x,const int y)\n{\n    return x<y?x:y;\n}\ninline int max(const int x,const int y)\n{\n    return x>y?x:y;\n}\nvoid printk(){puts(\"\");}\ninline void writeln(ll x)\n{\n    write(x);l;\n}\nint i,j,k,m,n,x,y,z,cnt,all,Min,Max,u,mid,h,t;\nint a[500010],ys[500010],Root[500010],Rank[500010],L,R;\nstruct num{\n    int a,bh;\n}s[500010];\nstruct hjt_tree{\n    int ls,rs,size,val;\n}tree[500010*40];\ninline void up(const int x)\n{\n    tree[x].size=tree[tree[x].ls].size+tree[tree[x].rs].size;\n}\nvoid First_build(int &x,const int L,const int R)\n{\n    x=++u;\n    if(L!=R)\n    {\n        mid=L+R>>1;\n        First_build(tree[x].ls,L,mid);\n        First_build(tree[x].rs,mid+1,R);\n    }\n}\nvoid insert(const int v,int &x,const int la,const int L,const int R)\n{\n    x=++u;tree[x].size=tree[la].size+1;\n    if(L==R)return (void)(tree[x].val=v);\n    tree[x].ls=tree[la].ls;tree[x].rs=tree[la].rs;tree[x].size=tree[la].size+1;\n    mid=L+R>>1;\n    if(v<=mid)insert(v,tree[x].ls,tree[la].ls,L,mid);\n    else insert(v,tree[x].rs,tree[la].rs,mid+1,R);\n}\ninline bool cmp(const num x,const num y)\n{\n    return x.a<y.a;\n}\ninline int find(int le,int ri,int rank)\n{        \n    if(rank>tree[ri].size-tree[le].size)return 2000000000;\n    while(tree[ri].ls)\n    {\n        const rt l1=tree[le].ls,l2=tree[ri].ls,v=tree[l2].size-tree[l1].size;\n        if(v>=rank)le=l1,ri=l2;\n        else rank-=v,le=tree[le].rs,ri=tree[ri].rs;\n    }\n    return ys[tree[ri].val];\n}\nstruct two{\n    int x,dis;\n}p[500010];\ninline bool operator <(const two x,const two y)\n{\n    return x.x<y.x;\n}\npriority_queue<two>S;\ninline int reans(const int x)\n{\n    return ys[a[x]]-find(Root[max(0,x-R-1)],Root[x-L],Rank[x]++)  ;\n}\nint main()\n{\n    n=r;k=r;L=r;R=r;s[1].bh=1;\n    for(rt i=2;i<=n+1;i++)a[i]=r,s[i].a=s[i-1].a+a[i],s[i].bh=i;n++;\n    sort(s+1,s+n+1,cmp);\n    for(rt i=1;i<=n;i++)\n    {\n        if(s[i].a!=s[i-1].a||i==1)cnt++;\n        a[s[i].bh]=cnt;ys[cnt]=s[i].a;\n    }\n    First_build(Root[0],1,n);\n    for(rt i=1;i<=n;i++)insert(a[i],Root[i],Root[i-1],1,cnt);\n    for(rt i=1;i<=n;i++)Rank[i]=1;\n    for(rt i=1;i<=n;i++)if(i>=L)\n    S.push((two){reans(i),i});ll ans=0;\n    while(k--)\n    {\n        ans+=S.top().x;x=S.top().dis;\n        S.pop();S.push((two){reans(x),x});\n       }\n    cout<<ans;\n    return 0;\n}\n\n```",
        "postTime": 1515600173,
        "uid": 58448,
        "name": "Flaranis",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2048 \u3010[NOI2010]\u8d85\u7ea7\u94a2\u7434\u3011"
    },
    {
        "content": "### 2019/11/14 \u66f4\u65b0\u65e5\u5fd7\uff1a\n\n\u8fd1\u671f\u53d1\u73b0\u8fd9\u7bc7\u9898\u89e3\u6709\u70b9\u70c2\uff0c\u66f4\u65b0\u4e00\u4e0b\uff0c\u5220\u7e41\u5c31\u7b80\uff0c\u8be6\u7ec6\u91cd\u70b9\u3002\u4ee3\u7801\u591a\u52a0\u4e86\u6ce8\u91ca\u3002\u5c31\u9171\u7d2b\u5566\uff01\n\n------------\n\n> ## \u6b63\u89e3\u6b65\u9aa4\n\n1. \u6211\u4eec\u9700\u8981\u5148\u7b97\u7f8e\u5999\u5ea6\u7684\u524d\u7f00\u548c\uff0c\u5e76\u521d\u59cb\u5316RMQ\u3002\n\n2. \u5faa\u73af $i$ \u4ece $1$ \u5230 $n$ \uff0c\u56e0\u4e3a\u4ee5i\u4e3a\u8d77\u70b9\u7684 __\u548c\u5f26__ \u7ec8\u70b9\u5fc5\u5b9a\u662f $i + L - 1$ \u5230 $i + R - 1$ \u4e4b\u95f4\uff0c\u6240\u4ee5\u53ea\u8981\u5728\u533a\u95f4\u5185\u7528RMQ\u53d6 __\u8d85\u7ea7\u548c\u5f26__ \uff0c\u5e76\u52a0\u5165\u4ee5\u7f8e\u5999\u5ea6\u4ece\u5c0f\u6392\u5230\u5927\u7684\u4f18\u5148\u961f\u5217\u4e2d\u3002\n\n3. \u53d6\u51fa\u5806\u9876\u5143\u7d20\uff0c\u5c06\u7f8e\u5999\u5ea6\u52a0\u5165 $ans$ \uff0c\u5e76\u5c06\u5143\u7d20\u5207\u4e3a\u4ece \uff08\u5f53\u524d\u5143\u7d20\u7684\u5de6\u8fb9\u754c \u5230 \u5f53\u524d\u5143\u7d20\u7ec8\u70b9 - 1\uff09 \u548c \uff08$\u5f53\u524d\u5143\u7d20\u7ec8\u70b9 + 1 \u5230 \u5f53\u524d\u5143\u7d20\u53f3\u8fb9\u754c$\uff09 \u4e24\u4e2a\u90e8\u5206\uff0c\u5e76\u518d\u6b21\u52a0\u5165\u4f18\u5148\u961f\u5217\uff0c\u4f9d\u6b21\u8fdb\u884c $k$ \u6b21\u3002\n\n4. \u8f93\u51fa\u7b54\u6848\u5373\u53ef\n\n------------\n\n> \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u524d\u7f00\u548c and RMQ\uff1f\n\n\u6570\u636e\u8303\u56f4\u662f500000\uff0c\u5f88\u660e\u663e\uff0c\u4e3a\u4e86\u4f18\u5316\u9700\u8981\u524d\u7f00\u548c and RMQ\u3002\n\n\u524d\u7f00\u548c\u6700\u660e\u663e\u7684\u7528\u5904\uff0c\u662f\u53ef\u4ee5\u4f18\u5316\u4e00\u4e2a\u7528\u6765\u5faa\u73af\u7d2f\u52a0\u548c\u7684 $n$ \u3002\u800c $RMQ$ \uff0c\u663e\u7136\u533a\u95f4\u6700\u503c\u7b26\u5408\u9898\u76ee\u8981\u6c42\u3002\n\n\u8fd9\u4e24\u4e2a\u7b97\u6cd5\u8be2\u95ee\u7b54\u6848\u90fd\u662fO(1)\u3002\u524d\u7f00\u548c\u540e\u9762\u51cf\u53bb\u524d\u9762\uff0cRMQ\u53ea\u9700\u8981\u521d\u59cb\u5316\u4e00\u4e0b\uff0c\u7136\u540eO(1)\u8be2\u95ee\u5373\u53ef\u3002\n\n------------\n\n\n> \u4e3a\u4ec0\u4e48\u7b2c\u4e09\u6b65\u8981\u5207\u5f00\u5143\u7d20\u5e76\u653e\u5165\u4f18\u5148\u961f\u5217\uff1f \u76f4\u63a5\u7d2f\u52a0\u524d $k$ \u4e2a\u5143\u7d20\u4e0d\u884c\u4e48\uff1f\n\n\u9996\u5148\uff0c\u6211\u4eec\u80af\u5b9a\u53ef\u4ee5\u786e\u5b9a\uff1a\u4f18\u5148\u961f\u5217\u4e2d\u7b2c\u4e00\u5927\u7684\u548c\u5f26\u4e00\u5b9a\u662f __\u5168\u5c40__ \u6700\u5927\u7684\u548c\u5f26\u3002 ~~\u4e0d\u8981\u95ee\u6211\u600e\u4e48\u8bc1\u660e~~\n\n\u90a3\u4e48\u4f18\u5148\u961f\u5217\u4e2d\u7b2c\u4e8c\u5927\u7684\u548c\u5f26\u4e00\u5b9a\u662f $\u5168\u5c40$ \u6b21\u5927\u7684\u548c\u5f26\u4e48\uff1f\u8fd9\u5c31\u4e0d\u4e00\u5b9a\u4e86\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5207\u5f00\u5143\u7d20\u5e76\u653e\u5165\u4f18\u5148\u961f\u5217\uff0c\u4fdd\u8bc1\u6bcf\u6b21\u53d6\u51fa\u6765\u7684\u5143\u7d20\u4e00\u5b9a\u662f\u5168\u5c40\u5927\u5c0f\u6392\u540d\u7684\u5143\u7d20\n\n__\u81ea\u5df1\u62ff\u51fa\u7eb8\u548c\u7b14\uff0c\u7ed3\u5408\u9898\u89e3\u81ea\u5df1\u601d\u8003\uff0c\u5728\u8349\u7a3f\u7eb8\u4e0a\u6f14\u7b97\u4e00\u4e0b\uff0c\u5c31\u61c2\u4e86__\n\n------------\n\n### \u90a3\u6211\u5c31\u628a\u89e3\u9898\u601d\u8def\u653e\u4e0a\u5427233\n\n~~\u5b9e\u5728\u8fd8\u6709\u95ee\u9898\uff0c\u79c1\u4fe1\u672c\u4eba233~~\n\n![](https://i.loli.net/2019/07/01/5d19da9db12ad27222.jpg)\n\n\u611f\u8c22\u8001\u5e08 @apple365 \u7684\u601d\u8def\u6307\u5f15\u3002\n\n## AC\u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\n#include<cctype>\n#pragma GCC optimize(2)\n\n#define in(a) a = read()\n#define out(a) write(a)\n#define outn(a) out(a),putchar('\\n')\n\n#define ll long long\n#define Min(a,b) a < b ? a : b\n#define Max(a,b) a > b ? a : b\n#define rg register\n#define New ll\n\nusing namespace std;\n\nnamespace IO_Optimization{\n\n\tinline New read()\n\t{\n\t    New X = 0,w = 0;\n\t\tchar ch = 0;\n\n\t\twhile(!isdigit(ch))\n\t\t{\n\t\t\tw |= ch == '-';\n\t\t\tch=getchar();\n\t\t}\n\t    while(isdigit(ch))\n\t\t{\n\t\t\tX = (X << 3) + (X << 1) + (ch ^ 48);\n\t\t\tch = getchar();\n\t\t}\n\t    return w ? -X : X;\n\t}\n\n\tinline void write(New x)\n\t{\n\t     if(x < 0) putchar('-'),x = -x;\n\t     if(x > 9) write(x/10);\n\t     putchar(x % 10 + '0');\n\t}\n\n\t#undef New\n}\nusing namespace IO_Optimization;//\u4e0a\u9762\u4e00\u5768\u4f18\u5316\u7684\u4e1c\u897f\u4e0d\u7528\u5728\u610f \n\nconst int MAXN = 500000 + 2;//\u5b9a\u4e49\u5e38\u4eae \n\nint n,k,L,R;\nint sum[MAXN],lg[MAXN],dp[MAXN][20],pos[MAXN][20];\n//  \u524d\u7f00\u548c    lg2\u503c\n//dp[i][j]\u8868\u793ai\u76842^j\u6b21\u65b9\u7956\u5148  pos\u6570\u7ec4\u6765\u8bb0\u5f55\u6700\u4f73\u4f4d\u7f6e \nll ans;\nstruct Node\n{\n\tint start, left, right, t, val; \n\t//\u8d85\u7ea7\u548c\u5f26\u7684\u8d77\u70b9 \u5de6\u3001\u53f3\u8fb9\u754c \u6700\u503c\u4f4d\u7f6e \u6700\u503c \n\tbool operator < (const Node &next) const\n\t{\n\t\treturn val < next.val; //\u6700\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f \n\t} \n};\n\ninline void RMQ_init() //\u9884\u5904\u7406 \n{ \n\tfor(rg int j = 1;j <= 20; ++j)\n\t\tfor(rg int i = 1;i + (1 << j) - 1 <= n; ++i)\n\t\t{\n\t\t\tif(dp[i][j - 1] > dp[i + (1 << (j - 1))][j - 1])\n\t\t\t{\n\t\t\t\tdp[i][j] = dp[i][j - 1];\n\t\t\t\tpos[i][j] = pos[i][j - 1];//\u66f4\u65b0\u6700\u503c\u4f4d\u7f6e \n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdp[i][j] = dp[i + (1 << (j - 1))][j - 1];\n\t\t\t\tpos[i][j] = pos[i + (1 << (j - 1))][j - 1];\n\t\t\t}\n\t\t}\n\treturn;\n} \n\ninline int RMQ_query(int l, int r) //\u8fd4\u56de\u6700\u503c\u7684\u4f4d\u7f6e \n{\n\tint t, tmp = lg[r - l + 1];\n\tif(dp[l][tmp] > dp[r - (1 << tmp) + 1][tmp])\n\t\tt = pos[l][tmp];\n\telse t = pos[r - (1 << tmp) + 1][tmp];\n\treturn t;\n}\n\nint main()\n{\n\tin(n),in(k),in(L),in(R);\n\tlg[0] = -1;//lg2(0) = -1,\u65b9\u4fbf\u540e\u9762\u9884\u5904\u7406lg2\u503c \n\tfor(rg int i = 1;i <= n; ++i)\n\t{\n\t\tint a = read();//\u8bfb\u5165\u97f3\u7b26 \n\t\tsum[i] = sum[i - 1] + a; //\u524d\u7f00\u548c \n\t\tlg[i] = lg[i >> 1] + 1; //\u9884\u5904\u7406lg2\u503c \n\t\tdp[i][0] = sum[i];\n\t\tpos[i][0] = i; //\u521d\u59cb\u5316\u6700\u5927\u503c\u7684\u4f4d\u7f6e \n\t}\n\tRMQ_init();//\u521d\u59cb\u5316 \n\tpriority_queue<Node> pq; //\u5b9a\u4e49\u4f18\u5148\u961f\u5217 \n\tfor(rg int i = 1;i + L - 1 <= n; ++i) //\u8ba1\u7b97\u6bcf\u4e2a\u4f4d\u7f6e\u6700\u5927\u7684\u8d85\u7ea7\u548c\u5f26 \n\t{\n\t\tint t = RMQ_query(i + L - 1, Min(n, i + R - 1)); \n\t\tNode cur;\n\t\tcur.val = sum[t] - sum[i - 1]; //\u7531\u524d\u7f00\u548c\u53d6\u6700\u5927\u503c \n\t\tcur.t = t;\n\t\tcur.start = i; //\u5f53\u524d\u8d85\u7ea7\u548c\u5f26\u7684\u8d77\u59cb\u4f4d\u7f6e \n\t\tcur.left = i + L - 1; //\u5f53\u524d\u7684\u5de6\u8fb9\u754c \n\t\tcur.right = Min(n,i + R - 1); //\u5f53\u524d\u7684\u53f3\u8fb9\u754c \n\t\tpq.push(cur); //\u5165\u5806 \n\t}\n\n\tfor(rg int i = 1;i <= k; ++i) //\u53d6k\u6b21\u5806\u9876\u7684\u503c \n\t{\n\t\tNode cur = pq.top();\n\t\tpq.pop();\n\t\tans = ans + cur.val; //\u7d2f\u52a0\u7ed3\u679c \n\t\tNode next;\n\n\t\tif(cur.t > cur.left) //\u5f53\u524d\u53d6\u6700\u503c\u7684\u4f4d\u7f6e \u5927\u4e8e \u5f53\u524d\u548c\u5f26\u7684 \u5de6\u8fb9\u754c \n\t\t{\n\t\t\tnext.start = cur.start;\n\t\t\tnext.left = cur.left;\n\t\t\tnext.right = cur.t - 1; //\u65b0\u7684\u53f3\u8fb9\u754c \n\t\t\tnext.t = RMQ_query(next.left, next.right);\n\t\t\tnext.val = sum[next.t] - sum[next.start - 1];\n\t\t\tpq.push(next);\n\t\t}\n\n\t\tif(cur.t < cur.right) //\u5f53\u524d\u53d6\u6700\u503c\u7684\u4f4d\u7f6e \u5c0f\u4e8e \u5f53\u524d\u548c\u5f26\u7684 \u53f3\u8fb9\u754c \n\t\t{\n\t\t\tnext.start = cur.start;\n\t\t\tnext.left = cur.t + 1; //\u65b0\u7684\u5de6\u8fb9\u754c \n\t\t\tnext.right = cur.right;\n\t\t\tnext.t = RMQ_query(next.left, next.right);\n\t\t\tnext.val = sum[next.t] - sum[next.start - 1];\n\t\t\tpq.push(next);\n\t\t}\n\t}\n\toutn(ans);\n\treturn 0;\n}\n```\n\n### END.",
        "postTime": 1561975615,
        "uid": 37682,
        "name": "\u5fa1\u00b7Dragon",
        "ccfLevel": 0,
        "title": "P2048 [NOI2010]\u8d85\u7ea7\u94a2\u7434 \u9898\u89e3"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\uff1a\n\n### \u6c42\u524dk\u5927\u7684\u957f\u5ea6\u5728L~R\u4e4b\u95f4\u7684\u6700\u5927\u8fde\u7eed\u5b50\u5e8f\u5217\u548c\u7684\u548c\u3002\n\n\n# \u9898\u89e3\uff1a\n\n\u9996\u5148\u5148\u505a\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u8bbesum[i]\u8868\u793a\u7684\u662f1~i\u7684\u548c\n\n\u7136\u540e\u679a\u4e3e\u53f3\u7aef\u70b9 r\uff0c\u533a\u95f4\u6240\u5bf9\u5e94\u7684\u5de6\u7aef\u70b9\u53ea\u80fd\u5728 r - R + 1\u5230 r -\u00a0L + 1 \u4e4b\u95f4\uff0c\u7136\u540e\u5bf9sum\u6570\u7ec4\u7684r - R \u5230 r - L \u4e4b\u95f4\u53d6\u4e2a\u6700\u5c0f\u503c\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u91cc\u76f4\u63a5\u7528st\u8868\u7ef4\u62a4\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u6700\u5927\u7684\u52a0\u5230\u5927\u6839\u5806\u91cc\uff0c\u7ef4\u62a4\u4e00\u4e2a\u56db\u5143\u7ec4\uff08a, b, c, d\uff09,a\u8868\u793a\u7b54\u6848\uff0c\u5c31\u662f\u4ee5b\u4e3a\u53f3\u7aef\u70b9\uff0c\u5de6\u7aef\u70b9\u5728c~d\u4e4b\u95f4\u7684\u6700\u5927\u8fde\u7eed\u5b50\u5e8f\u5217\u548c\u3002\n\n\u7136\u540e\u6bcf\u6b21\u628a\u5927\u6839\u5806\u5806\u9876\u7684\u5143\u7d20\u62ff\u51fa\u6765\uff0c\u7b54\u6848\u52a0\u4e0aa\u4e4b\u540e\u628a\u8fd9\u4e2a\u533a\u95f4\u62c6\u6210\u4e24\u4e2a\u533a\u95f4\uff0c\u5047\u8bbe\u6700\u5927\u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u5728mid\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u5c31\u53ef\u4ee5\u62c6\u6210c~mid-1\u548cmid+1~d\u8fd9\u4e24\u4e2a\u533a\u95f4\uff0c\u518d\u628a\u5b83\u4eec\u52a0\u5165\u5230\u5806\u91cc,\u8fd9\u6837\u505ak\u6b21\u5c31\u53ef\u4ee5\u4e86\u3002\n\ncode\uff1a~~\uff08\u597d\u50cf\u8fd8\u6bd4\u8f83\u77ed\uff09~~\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define N 1000005\n#define pr pair<int,int>//\u6bd2\u7624\u64cd\u4f5c\n#define mp(a, b, c, d) make_pair(make_pair(a, b), make_pair(c, d))//\u6bd2\u7624\u64cd\u4f5c+1\nusing namespace std;\npriority_queue<pair<pr, pr> >q;//\u6bd2\u7624\u64cd\u4f5c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8868\u793a\u56db\u5143\u7ec4\u4e86\nint sum[N], f[N][24], n, k, L, R;\nint mi(int x, int y){//\u6bd4\u8f83x,y\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u7684sum\u7684\u503c\n\tif(sum[x] < sum[y]) return x;\n\treturn y;\n}\nint query(int x, int y){//\u6c42x~y\u7684\u6700\u5c0f\u503c\u7684\u4f4d\u7f6e\n\tif(x > y) return -1;\n\tint k = log2(y - x + 1);\n\treturn mi(f[x][k], f[y - (1 << k) + 1][k]);\n}\nsigned main(){\n\tscanf(\"%lld%lld%lld%lld\", &n ,&k, &L, &R);\n\tfor(int i = 1; i <= n; i ++) scanf(\"%lld\", &sum[i]), f[i][0] = i, sum[i] += sum[i - 1];\n\tfor(int j = 1; j <= 20; j ++)\n\t\tfor(int i = 0; i <= n; i ++)\n\t\t\tf[i][j] = mi(f[i][j - 1], (i + (1 << (j - 1)) <= n)? f[i + (1 << (j - 1))][j - 1]:f[i][j - 1]);//st\u8868\n\tfor(int i = L; i <= n; i ++) q.push(mp(sum[i] - sum[query(max(i - R, 0ll), i - L)], i, max(i - R, 0ll), i - L));//\u5148\u628a\u4e00\u5f00\u59cb\u7684\u52a0\u8fdb\u53bb\n\tint ans = 0;\n\tfor(int i = 1; i <= k; i ++){\n\t\tpr h1 = q.top().first, h2 = q.top().second; q.pop();\n\t\tint a = h1.first, b = h1.second, c = h2.first, d = h2.second;\n\t\tans += a; int mid = query(c, d);\n\t\tint x = query(c, mid - 1), y = query(mid + 1, d);//x,y\u5206\u522b\u4e3a\u62c6\u5f00\u540e\u4e24\u4e2a\u533a\u95f4\u7684\u6700\u4f18\u5de6\u7aef\u70b9\n\t\tif(x != -1) q.push(mp(sum[b] - sum[x], b, c, mid - 1));//\u62c6\u6210\u4e24\u4e2a\u533a\u95f4\n\t\tif(y != -1) q.push(mp(sum[b] - sum[y], b, mid + 1, d));\t\n\t}\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}//\u597d\u68d2\u7684\u4e00\u9053\u9898\uff01\n```",
        "postTime": 1555652237,
        "uid": 31656,
        "name": "lomit",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2048 \u3010[NOI2010]\u8d85\u7ea7\u94a2\u7434\u3011"
    },
    {
        "content": "\u5148\u524d\u62ffst\u8868\u641e\u4e86\u534a\u5929,\u597d\u6b79\u662f\u8c03\u8fc7\u4e86.\n\u7a81\u7136\u610f\u8bc6\u5230,\u7528\u5212\u5206\u6811\u5e94\u8be5\u5f88\u7b80\u5355.\u7ed3\u679c\u4e00\u53d1\u5c31\u8fc7\u4e86==...\n\u770b\u9898\u89e3\u4e5f\u6ca1\u6709\u5199\u5212\u5206\u6811\u7684,\u4fbf\u5206\u4eab\u4e00\u4e0b\u81ea\u5df1\u7684\u601d\u8def.~~\u5957\u4e3b\u5e2d\u6811\u6211\u662f\u4e0d\u4f1a\u7684~~\n***\n### \u9996\u5148\u6211\u4eec\u6765\u7406\u89e3\u4e00\u4e0b\u9898\u610f:\n\u7ed9\u4f60$n$\u4e2a\u6570,\u6c42\u524d$k$\u5927\u957f\u5ea6\u5728$(L,R)$\u5185\u7684\u5b50\u4e32\u548c\n\n\u90a3\u4e48,\u5f88\u663e\u7136,\u6c42\u5b50\u6bb5\u548c,\u9996\u5148\u5c31\u8981\u628a\u524d\u7f00\u548c\u6c42\u51fa\u6765.\n\n\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u53d8\u6210\u4e86:\n\n\u524d\u7f00\u548c:$sum[i]=\t\\sum_{j=1}^i a[j]$\n\n\u5982\u4f55\u518d\u628a\u6bcf\u4e00\u4e2a$i$\u5bf9\u5e94\u7684\u6240\u6709$\\{sum[i+L-1]......sum[min(i+R-1,n)]\\}-sum[i]$\u90fd\u5b58\u8d77\u6765,\u5217\u5982\u6254\u8fdb\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u91cc,\u7136\u540e\u53d6\u524d$k$\u4e2a.\n***\n### \u663e\u7136\u8fd9\u4e2a\u8fc7\u4e8e\u66b4\u529b,\u5f53\u7136\u662f\u4f1a$TLE$\u7684.\n\u6211\u4eec\u540c\u4e00\u4e2a\u601d\u8def,\u6362\u4e00\u4e2a\u89e3\u6cd5.\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4ee5$a[i]$\u4e3a\u5f00\u5934\u7684\u5b50\u4e32\u548c$\\{sum[L+i-1]....sum[R+i-1]\\}-sum[i]$,\u90fd\u6709\u4e00\u4e2a\u6700\u5927\u503c.\n\n\u90a3\u4e48\u662f\u4e0d\u662f\u6211\u4eec\u628a\u6240\u6709\u6700\u5927\u503c\u5b58\u8d77\u6765\u5c31\u5b8c\u4e8b\u4e86?\n\n\u663e\u7136\u6709\u4e2a\u95ee\u9898:\u5bf9\u4e8e$\\{sum[L+j-1].....sum[R+j-1]\\}-sum[j]$,\u4ee5$a[j]$\u4e3a\u5f00\u5934\u7684\u7b2c\u4e8c\u751a\u81f3\u7b2c\u4e09,\u7b2c\u56db\u5927\u5b50\u6bb5\u548c,\u90fd\u6709\u53ef\u80fd\u5927\u4e8e\u4ee5$a[i]$\u5f00\u5934\u7684$\\{sum[L+i-1]....sum[R+i-1]\\}-sum[i]$\u7684\u6700\u5927\u503c.\n\n\u89e3\u51b3\u65b9\u6cd5\u5219\u662f,\u5f53\u6211\u4eec\u53d6\u5b8c\u4ee5$a[j]$\u4e3a\u5f00\u5934\u7684\u5b50\u6bb5\u548c\u6700\u5927\u503c,\u518d\u5c06\u4ee5$a[j]$\u5f00\u5934\u7684\u5b50\u6bb5\u548c\u6b21\u5927\u503c\u6254\u8fdb\u4f18\u5148\u961f\u5217\u91cc,\u4e0d\u65ad\u53d6\u51fa\u653e\u8fdb.\n\n\u76f4\u5230\u53d6\u6ee1$k$\u4e2a\u4e3a\u6b62.\n***\n### \u6839\u636e\u4e0a\u8ff0\u601d\u8def,\u6211\u4eec\u5728\u8fd9\u91cc\u53ef\u4ee5\u5b8c\u7f8e\u7684\u4f7f\u7528\u5212\u5206\u6811\u6765\u89e3\u51b3.\n\u5212\u5206\u6811\u80fd\u5e72\u4ec0\u4e48\u5462?\u5b83\u53ef\u4ee5\u6c42\u53d6\u533a\u95f4$[L,R]$\u4e2d\u7684\u7b2c$k$\u5927\u503c.\u800c\u4e14\u5f88\u7b80\u5355\u7b80\u6d01.\n\n\u5212\u5206\u6811\u7684\u8bb2\u89e3\u53ef\u53c2\u8003\u6211\u7684[blog](https://blog.csdn.net/UnKfrozen/article/details/90215747)\n1. \u5148\u5c06\u6bcf\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\u653e\u5165\u4f18\u5148\u961f\u5217\u4e2d\n2. \u904d\u5386\u4f18\u5148\u961f\u5217,\u5148\u53d6\u51fa\u7684\u503c\u5fc5\u5b9a\u662f\u6700\u5927\u503c.\n3. \u518d\u6c42\u53d6\u8be5\u533a\u95f4\u7684\u7b2c\u4e8c\u5927\u503c,\u653e\u5165\u4f18\u5148\u961f\u5217\n4. \u5faa\u73af\u76f4\u5230\u53d6\u5f97$k$\u4e2a\u503c\n\n\u5982\u4f55\u4fdd\u5b58\u5462?\u6211\u4eec\u6574\u4e00\u4e2a\u7ed3\u6784\u4f53,\u91cc\u9762\u4fdd\u5b58$i,i+L-1,min(n,i+R-1)$,\u53d6\u5f97\u7684\u6570\u662f$\\{i+L-1,min(n,i+R-1)\\}$\u7684\u7b2c$t$\u5927\u6570,\u548c\u6240\u5f97\u7684\u6700\u5927\u503cans.\n***\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<string.h>\n#include<queue>\n#include<stdio.h>\n#include<stdlib.h>\n#include<map>\n#include<cstring>\n#include<algorithm>\n#ifndef null\n#define null -1\n#endif\nusing namespace std;\ntypedef unsigned long long ull;\ntypedef long long ll;\nconst int MAXN = 5e5 + 10;\n\nll tree[20][MAXN],sorted[MAXN];\nint toleft[20][MAXN],n;\n\nvoid built(int l, int r, int dep)\n{\n\tif (l == r)\n\t\treturn;\n\tint mid = (l + r) >> 1, same = mid - l + 1;\n\tfor (int i = l; i <= r; i++)\n\t\tif (tree[dep][i] > sorted[mid])\n\t\t\tsame--;\n\tint lpos = l, rpos = mid + 1;\n\tfor (int i = l; i <= r; i++) {\n\t\tif (tree[dep][i] > sorted[mid])\n\t\t\ttree[dep + 1][lpos++] = tree[dep][i];\n\t\telse if (tree[dep][i] == sorted[mid] && same > 0) {\n\t\t\ttree[dep + 1][lpos++] = tree[dep][i];\n\t\t\tsame--;\n\t\t}\n\t\telse\n\t\t\ttree[dep + 1][rpos++] = tree[dep][i];\n\t\ttoleft[dep][i] = toleft[dep][l - 1] + lpos - l;\n\t}\n\tbuilt(l, mid, dep + 1);\n\tbuilt(mid + 1, r, dep + 1);\n}\n\nll query(int L, int R, int l, int r, int dep, int k)\n{\n\tif (l == r)\n\t\treturn tree[dep][l];\n\tint mid = (L + R) >> 1;\n\tint cnt = toleft[dep][r] - toleft[dep][l - 1];\n\tif (cnt >= k) {\n\t\tint newl = L + toleft[dep][l - 1] - toleft[dep][L - 1];\n\t\tint newr = newl + cnt - 1;\n\t\treturn query(L, mid, newl, newr, dep + 1, k);\n\t}\n\telse {\n\t\tint newr = r + toleft[dep][R] - toleft[dep][r];\n\t\tint newl = newr - (r - l - cnt);\n\t\treturn query(mid + 1, R, newl, newr, dep + 1, k - cnt);\n\t}\n}\n\nbool cmp(ll a, ll b)\n{\n\treturn a > b;\n}\n\nstruct vec {\n\tint o, l, r, t;\n\tll a;\n\tvec(int x, int y, int z,int k ) {\n\t\to = x, l = y, r = z, t = k;\n\t\ta = query(1, n, l, r, 0, t) - tree[0][o - 1];\n\t}\n\tvec(){}\n\tfriend bool operator < (const vec &x,const vec &y) {\n\t\treturn x.a < y.a;\n\t}\n}p;\n\npriority_queue<struct vec>q;\n\nint main()\n{\n\tint  k, L, R;\n\tcin >> n >> k >> L >> R;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> tree[0][i];\n\t\ttree[0][i]+= tree[0][i - 1];\n\t\tsorted[i] = tree[0][i];\n\t}\n\n\tsort(sorted + 1, sorted + n + 1,cmp);\n\tbuilt(1, n, 0);\n\n\tfor (int i = 1; i + L - 1 <= n; i++) \n\t\tq.push(vec(i, i + L - 1, min(n, i + R - 1), 1));\n\t\n\tll ans = 0;\n\twhile (k && !q.empty()) {\n\t\tp = q.top(); q.pop();\n\t\tans += p.a;\n\t\tk--;\n\n\t\tif(p.r-p.l+1>p.t)\n\t\t\tq.push(vec(p.o, p.l, p.r,p.t + 1));\n\t}\n\tcout << ans << endl;\n\n\treturn 0;\n}\n```\n\n",
        "postTime": 1558272970,
        "uid": 23273,
        "name": "Kyon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2048 \u3010[NOI2010]\u8d85\u7ea7\u94a2\u7434\u3011"
    },
    {
        "content": "\u8fd9\u9898\u601d\u8def\u6bd4\u8f83\u5de7\u5999\n\n\u9996\u5148\u9898\u610f\u662f\u8ba9\u4f60\u6c42\u524dk\u5927\u533a\u95f4\u4e4b\u548c\u3002\n\n\u9996\u5148\u533a\u95f4\u548c\u5bb9\u6613\u60f3\u5230\u5dee\u5206\u3002\n\n\u6211\u4eec\u679a\u4e3e\u5de6\u7aef\u70b9$i$\uff0c\u90a3\u4e48\u53f3\u7aef\u70b9\u4f1a\u6709\u4e00\u4e2a\u8303\u56f4$[i + L - 1, min(i + R - 1,n)]$\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5de6\u7aef\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u53f3\u7aef\u70b9\uff0c\u4f7f\u5f97\u8fd9\u6bb5\u533a\u95f4\u548c\u6700\u5927\u3002\u7528\u5806\u7ef4\u62a4\u6240\u6709\u8fd9\u6837\u7684\u6700\u5927\u503c\uff0c\u6211\u4eec\u5c31\u80fd\u627e\u5230\u5f53\u524d\u6ca1\u9009\u7684\u533a\u95f4\u91cc\u533a\u95f4\u548c\u6700\u5927\u7684\u662f\u54ea\u4e2a\u533a\u95f4\n\n\u56e0\u4e3a\u6bcf\u6b21\u8981\u5220\u9664\u9009\u8fc7\u7684\u533a\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u5de6\u7aef\u70b9\u62c6\u6210\u4e24\u4e2a\uff0c\u8bb0\u9009\u7684\u6570\u4f4d\u7f6e\u4e3ak\uff0c\u90a3\u4e48\u5728\u5806\u4e2d\u52a0\u5165(\u5de6\u7aef\u70b9i,\u53f3\u7aef\u70b9\u8303\u56f4$[i+L-1,k-1]$)\u548c(\u5de6\u7aef\u70b9i,\u53f3\u7aef\u70b9\u8303\u56f4$[k+1, min(i + R - 1,n)])$\u5373\u53ef\n\n\u590d\u6742\u5ea6\u662f$O(nlogn)$\u7684\u5566\n\n\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define fo(i, a, b) for (int i = (a); i <= (b); ++i)\n#define fd(i, a, b) for (int i = (a); i >= (b); --i)\n#define N 2200005\n#define ls(u) t[u].s[0]\n#define rs(u) t[u].s[1]\n#define mod 51061\n#define ll long long\nint a[N], n, m, L, R, len, st[N][23];\nll ans;\ninline int query (int l, int r)\n{\n    len = log(r - l + 1) / log(2);\n    return a[st[l][len]] > a[st[r - (1 << len) + 1][len]] ? st[l][len] : st[r - (1 << len) + 1][len];\n}\nstruct node{\n    int z, l, r, v;\n    node (int z, int l, int r) : z(z), l(l), r(r), v(query(l, r)) {}\n    friend bool operator < (node x, node y) {return a[x.v] - a[x.z] < a[y.v] - a[y.z];}\n};\nstd::priority_queue<node> q;\nint main ()\n{\n    scanf(\"%d %d %d %d\", &n, &m, &L, &R);\n    fo (i, 1, n) {scanf(\"%d\", &a[i]); a[i] += a[i - 1]; st[i][0] = i;}\n    fo (j, 1, 20)\n        fo (i, 1, n)\n            st[i][j] = a[st[i][j - 1]] > a[st[i + (1 << j - 1)][j - 1]] ? st[i][j - 1] : st[i + (1 << j - 1)][j - 1];\n    fo (i, 1, n)\n        if (i + L - 1 <= n)\n            q.push(node(i - 1, i + L - 1, std::min(i + R - 1, n)));\n    fo (i, 1, m)\n    {\n        node tmp = q.top(); q.pop();\n        ans += a[tmp.v] - a[tmp.z];\n        if (tmp.v != tmp.l) q.push(node(tmp.z, tmp.l, tmp.v - 1));\n        if (tmp.v != tmp.r) q.push(node(tmp.z, tmp.v + 1, tmp.r));\n    }\n    printf(\"%lld\\n\", ans);\n}\n```",
        "postTime": 1544711023,
        "uid": 13137,
        "name": "HomuraCat",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2048 \u3010[NOI2010]\u8d85\u7ea7\u94a2\u7434\u3011"
    },
    {
        "content": "**\u4f18\u5148\u961f\u5217+zkw\u7ebf\u6bb5\u6811**\n\n\u7528\u5927\u6839\u5806\u53bb\u7ef4\u62a4\u56db\u5143\u7ec4(s, x, l, r)\uff0c\u8868\u793a\u4ee5x\u4e3a\u53f3\u7aef\u70b9\u3001\\[l, r\\]\u4e2d\u53d6\u4e00\u4e2a\u4f4d\u7f6e\u4e3a\u5de6\u7aef\u70b9\u7684\u8fd9\u4e9b\u533a\u95f4\u4e2d\uff0c\u6700\u5927\u7684\u533a\u95f4\u548c\u4e3as\u3002\u76f4\u63a5\u4f7f\u7528STL\u7684\u4f18\u5148\u961f\u5217\u5373\u53ef\n\n\u7136\u540e\u6bcf\u6b21\u53d6\u5806\u9876\u5143\u7d20\uff0c\u5c06s\u52a0\u5165\u7b54\u6848\uff0c\u7136\u540e\u627e\u5230\u53d6\u5f97s\u8fd9\u4e2a\u6700\u5927\u503c\u7684\u4f4d\u7f6ep\uff0c\u5c06\u5de6\u7aef\u70b9\u9009\u53d6\u533a\u95f4\u5206\u88c2\u4e3a\\[l, p-1\\]\u548c\\[p+1, r\\]\u4e24\u4e2a\u3002\u7136\u540e\u6c42\u51fa\u4e24\u4e2a\u9009\u53d6\u533a\u95f4\u4e2d\u7684\u5de6\u7aef\u70b9\u4e0e\u53f3\u7aef\u70b9\u6240\u6784\u6210\u7684\u533a\u95f4\u4e2d\u7684\u6700\u5927\u533a\u95f4\u548c\u3002\u5c06\u65b0\u5f97\u5230\u7684\u4e24\u4e2a\u56db\u5143\u7ec4\u5165\u5806\n\n\u73b0\u5728\u95ee\u9898\u53d8\u6210\u4e86\u2014\u2014\u5df2\u77e5\u53f3\u7aef\u70b9\u4e0e\u5de6\u7aef\u70b9\u7684\u9009\u53d6\u533a\u95f4\uff0c\u6c42\u4e00\u4e2a\u5de6\u7aef\u70b9\uff0c\u4f7f\u5f97\u533a\u95f4\u548c\u6700\u5927\u3002\u54e6\u6211\u77e5\u9053\u4e86\uff0c\u7528\u4e3b\u5e2d\u6811\uff01\u6211\u53ef\u53bb\u4f60\u7684\u554a\uff01(\u256f\u2035\u25a1\u2032)\u256f\ufe35\u253b\u2501\u253b\n\n\u5176\u5b9e\u5427\uff0c\u6c42\u51fa\u524d\u7f00\u548c\u6570\u7ec4\uff0c\u7136\u540e\u6c42\u5de6\u7aef\u70b9\u9009\u53d6\u533a\u95f4\u4e2d\u7684\u6700\u5c0f\u524d\u7f00\u548c\uff0c\u90a3\u4e0e\u53f3\u7aef\u70b9\u6784\u6210\u7684\u4e0d\u5c31\u662f\u6700\u5927\u533a\u95f4\u548c\u5417\uff1f\u6240\u4ee5\u5c31\u662f\u4e00\u4e2aRMQ\u554a\uff0c\u7528ST\u8868\u641e\u641e\u5c31\u884c\u3002\u4f46\u662fST\u8868\u9884\u5904\u7406\u5e38\u6570\u597d\u5927\u554a\uff0czkw\u7ebf\u6bb5\u6811\u7684\u5b9e\u9645\u6548\u7387\u6bd4ST\u8868\u5feb\u591a\u4e86\uff01\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int S=(1<<20)+5;\nchar buf[S],*H,*T;\ninline char Get()\n{\n    if(H==T) T=(H=buf)+fread(buf,1,S,stdin);\n    if(H==T) return -1;return *H++;\n}\ninline int read()\n{\n    int x=0,fg=1;char c=Get();\n    while(!isdigit(c)&&c!='-') c=Get();\n    if(c=='-') fg=-1,c=Get();\n    while(isdigit(c)) x=x*10+c-'0',c=Get();\n    return x*fg;\n}\n\nconst int N=500010;\ntypedef pair<int,int> pii;\ntypedef pair<pii,pii> ppp;\npriority_queue<ppp> q;\nint mn[N<<2],mnid[N<<2],leaf;\nint n,K,L,R;\nint sum[N];\n\nvoid build()\n{\n    for(leaf=1;leaf<=n+2;leaf<<=1);\n    memset(mn,0x3f,sizeof(mn));leaf++;\n    for(int i=0;i<=n;i++) mn[leaf+i]=sum[i],mnid[leaf+i]=i;\n    for(int i=leaf-2;i;i--)\n    {\n        if(mn[i<<1]<mn[i]) mn[i]=mn[i<<1],mnid[i]=mnid[i<<1];\n        if(mn[i<<1|1]<mn[i]) mn[i]=mn[i<<1|1],mnid[i]=mnid[i<<1|1];\n    }\n}\nint query(int l,int r)\n{\n    if(l>r) return -1;\n    int res=INT_MAX,ans;\n    for(l=leaf+l-1,r=leaf+r+1;l^r^1;l>>=1,r>>=1)\n    {\n        if(~l&1) if(mn[l^1]<res) res=mn[l^1],ans=mnid[l^1];\n        if(r&1) if(mn[r^1]<res) res=mn[r^1],ans=mnid[r^1];\n    }\n    return ans;\n}\n\nint main()\n{\n    n=read();K=read();L=read();R=read();\n    for(int i=1;i<=n;i++) sum[i]=sum[i-1]+read();\n    build();\n    for(int i=L;i<=n;i++)\n    {\n        int l=max(i-R,0),x=query(l,i-L);\n        q.push(ppp(pii(sum[i]-sum[x],i),pii(l,i-L)));\n    }\n    long long ans=0;\n    for(int i=1;i<=K;i++)\n    {\n        pii p1=q.top().first,p2=q.top().second;q.pop();\n        int p=p1.second;ans+=p1.first;\n        int x=query(p2.first,p2.second);\n        int y1=query(p2.first,x-1),y2=query(x+1,p2.second);\n        if(~y1) q.push(ppp(pii(sum[p]-sum[y1],p),pii(p2.first,x-1)));\n        if(~y2) q.push(ppp(pii(sum[p]-sum[y2],p),pii(x+1,p2.second)));\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1539851220,
        "uid": 20158,
        "name": "Ebola",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2048 \u3010[NOI2010]\u8d85\u7ea7\u94a2\u7434\u3011"
    },
    {
        "content": "# [NOI2010]\u8d85\u7ea7\u94a2\u7434\n\n## \u60f3\u6cd5\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e$i$\u800c\u8a00\uff0c\u53ef\u4ee5\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u524d\u9762$i-L+1$\u5230$i-R+1$\u8fd9\u4e9b\u4f4d\u7f6e\u4e2d\u9009\u62e9\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6c42\u533a\u95f4\u548c\u3002\u4e8e\u662f\u6211\u4eec\u5c31\u9700\u8981\u6c42\u51fa\u6240\u6709\u7684\u4f4d\u7f6e\u7684\u6240\u6709\u533a\u95f4\u548c\u4e2d\u524d$k$\u5927\u7684\u6570\u7684\u548c\u3002\u73b0\u5728\u4e8c\u5206\u7b2c$k$\u5927\u662f\u591a\u5c11\uff0c\u7136\u540e\u770b\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u800c\u8a00\u6709\u591a\u5c11\u4e2a\u53ef\u9009\u533a\u95f4\u4f7f\u5f97\u6bd4\u7b2c$k$\u5927\u8981\u5927\u3002\u4e8c\u5206\u4e4b\u540e\uff0c\u518d\u6c42\u51fa\u524d$k$\u5927\u7684\u6240\u6709\u6570\u7684\u548c\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4\uff0c\u8fd9\u6837\u6c42\u51fa\u6bcf\u4e2a\u533a\u95f4\u5185\u5c0f\u4e8e\u4e00\u4e2a\u6570\u7684\u6570\u7684\u6570\u91cf\uff0c\u800c\u4e14\u6c42\u51fa\u8fd9\u4e9b\u6570\u7684\u548c\u3002\u4f46\u4ed4\u7ec6\u89c2\u5bdf\u53d1\u73b0\u6bcf\u4e00\u6b21\u4e8c\u5206$check$\u7684\u65f6\u5019\uff0c\u7ef4\u62a4\u7684\u533a\u95f4\u662f\u8fd9\u6837\u7684\uff1a$[l,r],[l+1,r+1],[l+2,r+2]\\cdots\\cdots$\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u6bcf\u4e00\u6b21\u53bb\u6389\u5f53\u524d\u533a\u95f4\u7684\u5934\uff0c\u52a0\u4e0a\u5c3e\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7ed3\u679c\u662f\u8fd9\u6837\u7684\uff1a\n\n| \u7b97\u6cd5     | \u5e38\u6570 |      | \u5f97\u5206                              | \u590d\u6742\u5ea6       | \u4ee3\u7801\u590d\u6742\u5ea6 |\n| -------- | ---- | ---- | --------------------------------- | ------------ | ---------- |\n| \u6811\u72b6\u6570\u7ec4 | \u5c0f   |      | $80$\uff08\u7ecf\u8fc7\u5361\u5e38\u540e\u5f97\u5230\u4e24\u4e2a\u8d85\u65f6\uff09    | $O(nlog^2n)$ | \u4e0d\u590d\u6742     |\n| \u4e3b\u5e2d\u6811   | \u5927   |      | $60$\uff08\u4e00\u4e2a\u9519\u8bef\u7b54\u6848 $\\&$ 3\u4e2a\u8d85\u65f6\uff09 | $O(nlog^2n)$ | \u590d\u6742       |\n|          |      |      |                                   |              |            |\n\n\n\n## \u4ee3\u7801\n\n### \u6811\u72b6\u6570\u7ec4\uff0880\u5206\uff09\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <iostream>\n#define lowbit(x) (((x))&(-(x)))\n\nusing namespace std;\n\ntypedef long long ll;\ninline int read()\n{\n    char s;\n    ll k=0,base=1;\n    while((s=getchar())!='-'&&!(isdigit(s)));\n    if(s=='-')base=-1,s=getchar();\n    while(isdigit(s)){k=k*10+(s^'0');s=getchar();}\n    return k*base;\n}\nconst int maxLen = 5e5;\nint len = 0, chosK = 0, lLim = 0, rLim = 0, diffNum = 0;\nint seq[maxLen + 5] = {}, liSan[maxLen + 5] = {}, preSum[maxLen + 5] = {};\nstruct BIT\n{\n\tll bit[maxLen + 5];\n\tvoid clear() { memset(bit, 0, sizeof(bit)); }\n\tinline void add(int pos, int val)\n\t{\n\t\tfor (; pos <= diffNum; pos += lowbit(pos))\n\t\t\tbit[pos] += val;\n\t\treturn ;\n\t}\n\tinline ll ask(int pos)\n\t{\n\t\tll ret = 0;\n\t\t//ret\u5e94\u8be5\u662f long long \u7c7b\u578b\u7684\uff01\uff01\uff01\n\t\tfor (; pos; pos -= lowbit(pos))\n\t\t\tret += bit[pos];\n\t\treturn ret;\n\t}\n} valSum, cnt;\nll getNum(int val)\n{\n\tcnt.clear();\n\tll ret = 0;\n\tint nowLep = 1, nowRep = 0;\n\t\n\tfor (int seqI = 1; seqI <= len; ++seqI)\n\t{\n\t\tint lep = max(1, seqI - rLim + 1), rep = min(len, seqI - lLim + 1);\n\t\tint need = upper_bound(liSan + 1, liSan + diffNum + 1, preSum[seqI + 1] - val) - (liSan + 1);\n\t\twhile (nowLep < lep)\n\t\t{\n\t\t\tint delVal = upper_bound(liSan + 1, liSan + diffNum + 1, preSum[nowLep]) - liSan - 1;\n\t\t\tcnt.add(delVal, -1);\n\t\t\t++nowLep;\n\t\t}\n\t\twhile (nowRep < rep)\n\t\t{\n\t\t\tint addVal = upper_bound(liSan + 1, liSan + diffNum + 1, preSum[rep]) - liSan - 1;\n\t\t\tcnt.add(addVal, 1);\n\t\t\t++nowRep;\n\t\t}\n\t\tret += cnt.ask(need);\n\t}\n\treturn ret;\n}\nll getSum(int val)\n{\n\tcnt.clear();\n\tvalSum.clear();\n\tll ret = 0;\n\tint nowLep = 1, nowRep = 0;\n\t\n\tfor (int seqI = 1; seqI <= len; ++seqI)\n\t{\n\t\tint lep = max(1, seqI - rLim + 1), rep = min(len, seqI - lLim + 1);\n\t\tint need = upper_bound(liSan + 1, liSan + diffNum + 1, preSum[seqI + 1] - val) - (liSan + 1);\n\t\twhile (nowLep < lep)\n\t\t{\n\t\t\tint delVal = upper_bound(liSan + 1, liSan + diffNum + 1, preSum[nowLep]) - liSan - 1;\n\t\t\tcnt.add(delVal, -1);\n\t\t\tvalSum.add(delVal, -preSum[nowLep]);\n\t\t\t++nowLep;\n\t\t}\n\t\twhile (nowRep < rep)\n\t\t{\n\t\t\tint addVal = upper_bound(liSan + 1, liSan + diffNum + 1, preSum[rep]) - liSan - 1;\n\t\t\tcnt.add(addVal, 1);\n\t\t\tvalSum.add(addVal, preSum[rep]);\n\t\t\t++nowRep;\n\t\t}\n\t\tret += 1ll * preSum[seqI + 1] * cnt.ask(need) - valSum.ask(need);\n\t\t//\u8fd9\u91cc\u4e5f\u8981\u5f00 long long\uff01\uff01\uff01\n\t}\n\treturn ret;\n}\n\nsigned main()\n{\n\tfreopen(\"super.in\", \"r\", stdin);\n\tfreopen(\"piano.out\", \"w\", stdout);\n\tlen = read(); chosK = read(); lLim = read(); rLim = read();\n\tfor (int seqI = 1; seqI <= len; ++seqI)\n\t{\n\t\tseq[seqI] = read();\n\t\tpreSum[seqI + 1] = preSum[seqI] + seq[seqI];\n\t\tliSan[seqI + 1] = preSum[seqI + 1];\n\t}\n\tliSan[1] = 0;\n\tsort(liSan + 1, liSan + (len + 1) + 1);\n\tdiffNum = unique(liSan + 1, liSan + (len + 1) + 1) - (liSan + 1);\n\tint lep = -5e8, rep = 5e8;\n\twhile (rep > lep)\n\t{\n\t\tint mid = (lep + rep + 1) / 2;\n\t\tif (getNum(mid) >= chosK)\n\t\t{\n\t\t\tlep = mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\trep = mid - 1;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\", getSum(lep + 1) + (chosK - getNum(lep + 1)) * lep);\n\tfclose(stdin);\n\tfclose(stdout);\n\treturn 0;\n}\n```\n\n### \u4e3b\u5e2d\u6811\uff0860\u5206\uff09\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <iostream>\n\nusing namespace std;\n\ntypedef long long ll;\ninline ll read()\n{\n    char s;\n    ll k=0,base=1;\n    while((s=getchar())!='-'&&!(isdigit(s)));\n    if(s=='-')base=-1,s=getchar();\n    while(isdigit(s)){k=k*10+(s^'0');s=getchar();}\n    return k*base;\n}\nconst int maxLen = 5e5 + 10;\nint len = 0, regNum = 0, lSize = 0, rSize = 0, diffNum = 0, totNode = 0;\nint seq[maxLen] = {}, sum[maxLen] = {}, liSan[maxLen] = {}, gen[maxLen] = {};\n//sum[i]\u8868\u793a\u524d i - 1 \u4e2a\u6570\u7684\u548c\nstruct TREE\n{\n\tint lson, rson, num;\n\tll sum;\n\t#define ls(p) tree[p].lson\n\t#define rs(p) tree[p].rson\n\t#define num(p) tree[p].num\n\t#define sum(p) tree[p].sum\n} tree[maxLen << 5] = {};\nint build(int lVal, int rVal)\n{\n\tint root = ++totNode;\n\tif (lVal == rVal)\n\t\treturn root;\n\tint mid = (lVal + rVal) >> 1;\n\tls(root) = build(lVal, mid);\n\trs(root) = build(mid + 1, rVal);\n\treturn root;\n}\nvoid update(int id)\n{\n\tnum(id) = num(ls(id)) + num(rs(id));\n\tsum(id) = sum(ls(id)) + sum(rs(id));\n\treturn ;\n}\nint insert(int last, int insVal, int real, int lVal, int rVal)\n{\n\tint root = ++totNode;\n\tls(root) = ls(last), rs(root) = rs(last);\n\tnum(root) = num(last) + 1;\n\tsum(root) = sum(last) + real;\n\t//\u8fd9\u4e48\u5199\u7684\u8bdd\u8981\u628a\u8fd9\u4e24\u53e5\u8bdd\u653e\u5728\u524d\u9762\n\tif (lVal == rVal)\n\t{\n\t\t//\u8fd9\u91cc\u5e94\u8be5\u662f num(root) = num(last) + 1\uff0c\u4e0d\u80fd\u76f4\u63a5\u628a\u4ed6\u7684\u503c\u8d4b\u4e3a1\n\t\treturn root;\n\t}\n\tint mid = (lVal + rVal) >> 1;\n\tif (insVal <= mid) ls(root) = insert(ls(last), insVal, real, lVal, mid);\n\telse rs(root) = insert(rs(last), insVal, real, mid + 1, rVal);\n\treturn root;\n}\nint numQuery(int now, int lVal, int rVal, int ql, int qr)\n{\n\tif (ql <= lVal && rVal <= qr)\n\t{\n\t\treturn num(now);\n\t}\n\tint mid = (lVal + rVal) >> 1, ret = 0;\n\tif (ql <= mid) ret += numQuery(ls(now), lVal, mid, ql, qr);\n\tif (mid + 1 <= qr) ret += numQuery(rs(now), mid + 1, rVal, ql, qr);\n\treturn ret;\n}\nll sumQuery(int now, int lVal, int rVal, int ql, int qr)\n{\n\tif (ql <= lVal && rVal <= qr)\n\t\treturn sum(now);\n\tint mid = (lVal + rVal) >> 1;\n\tll ret = 0;\n\tif (ql <= mid)\n\t\tret += sumQuery(ls(now), lVal, mid, ql, qr);\n\tif (mid + 1 <= qr)\n\t\tret += sumQuery(rs(now), mid + 1, rVal, ql, qr);\n\treturn ret;\n}\ninline int getNum(int val)\n{\n\tint ret = 0;\n\tfor (int seqI = 1; seqI <= len; ++seqI)\n\t{\n\t\tint lep = std::max(1, seqI - rSize + 1), rep = std::min(len, seqI - lSize + 1);\n\t\t//\u8fd9\u91cc\u5e94\u8be5\u662f seqI - rSize + 1\u662f\u5de6\u7aef\u70b9\n\t\tif (lep > rep) continue;\n\t\tint lim = upper_bound(liSan + 1, liSan + diffNum + 1, sum[seqI + 1] - val) - liSan;\n\t\t--lim;\n\t\tif (lim == 0) continue;\n\t\tret += numQuery(gen[rep], 1, diffNum, 1, lim) - numQuery(gen[lep - 1], 1, diffNum, 1, lim);\n\t}\n\treturn ret;\n}\nll getWrongAns(int val)\n{\n\tll ret = 0;\n\tfor (int seqI = 1; seqI <= len; ++seqI)\n\t{\n\t\tint rep = std::min(len, seqI - lSize + 1), lep = std::max(1, seqI - rSize + 1);\n\t\tif (lep > rep) continue;\n\t\tint lim = upper_bound(liSan + 1, liSan + diffNum + 1, sum[seqI + 1] - val) - liSan;\n\t\t--lim;\n\t\tif (lim == 0) continue;\n\t\tret += sum[seqI + 1] * (numQuery(gen[rep], 1, diffNum, 1, lim) - numQuery(gen[lep - 1], 1, diffNum, 1, lim))\n\t\t\t - sumQuery(gen[rep], 1, diffNum, 1, lim) + sumQuery(gen[lep - 1], 1, diffNum, 1, lim);\n\t\t//sum[seqI + 1]\u8981\u4e58\u4ee5\u4e00\u4e2a\u7cfb\u6570\uff0c\u5c31\u662f\u8fd9\u4e2a\u533a\u95f4\u9009\u4e86\u591a\u5c11\u6b21\n\t\t//\u53d1\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u628a\u7c7b\u4f3c\u7684\u95ee\u9898\u4e5f\u6539\u6389\uff0c\u5c31\u662f getNum\u90e8\u5206\u548c\u8fd9\u90e8\u5206\u57fa\u672c\u5b8c\u5168\u4e00\u6837\uff0c\u4f46\u662f\u5f00\u59cb getNum \u90e8\u5206\u6709\u4e9b\u9519\u8bef\n\t}\n\treturn ret;\n}\n\nint main()\n{\n\tscanf(\"%d%d%d%d\", &len, &regNum, &lSize, &rSize);\n\tfor (int seqI = 1; seqI <= len; ++seqI)\n\t{\n//\t\t\tscanf(\"%d\", &seq[seqI]);\n\t\tseq[seqI] = read();\n\t\tsum[seqI + 1] = sum[seqI] + seq[seqI];\n\t}\n\tfor (int seqI = 1; seqI <= len + 1; ++seqI)\n\t{\n\t\tliSan[seqI] = sum[seqI];\n\t}\n\tsort(liSan + 1, liSan + len + 1);\n\tdiffNum = unique(liSan + 1, liSan + (len + 1) + 1) - (liSan + 1);\n\tbuild(1, diffNum);\n\tgen[0] = 1;\n\tfor (int seqI = 1; seqI <= len + 1; ++seqI)\n\t{\n\t\tint insVal = lower_bound(liSan + 1, liSan + diffNum + 1, sum[seqI]) - liSan;\n\t\tgen[seqI] = insert(gen[seqI - 1], insVal, sum[seqI], 1, diffNum);\n\t\t//\u8fd9\u91cc\u8981\u5199 gen[seqI] = \uff01\uff01\uff01\u5426\u5219\u5c31\u70b8\u4e86\uff01\uff01\uff01\n\t}\n\tint lep = -5e8, rep = 5e8;\n\twhile (rep > lep)\n\t{\n\t\tint mid = (lep + rep + 1) / 2;\n\t\tif (getNum(mid) >= regNum)\n\t\t{\n\t\t\tlep = mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\trep = mid - 1;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\", getWrongAns(lep + 1) + (regNum - getNum(lep + 1)) * lep);\n\treturn 0;\n}\n```\n\n## \u6b63\u89e3\n\n\u8bbe$f(i,a,b)$\u8868\u793a\u7ed3\u5c3e\u5728$i$\u5904\uff0c\u9009\u62e9\u7684\u8d77\u70b9\u5728$[a,b]$\u4e4b\u95f4\u7684\u6700\u5927\u503c\u3002\u73b0\u5728\u7528\u4e00\u4e2a\u5806\uff0c\u4ee5\u8fd9\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\u4e3a\u5173\u952e\u5b57\u6392\u5e8f\u3002\u6bcf\u6b21\u53d6\u51fa\u5806\u9876\uff0c\u7136\u540e\u5c06\u5806\u9876$f(j,a_0,b_0)$\u5206\u88c2\u4e3a\u4e24\u5757\uff08\u5982\u679c\u53d6\u5230\u6700\u5927\u503c\u7684\u70b9\u4e3a$k$\uff09\uff0c\u90a3\u4e48\u5c06\u5206\u88c2\u4e3a$f(j,a_0,k-1)$\u4e0e$f(j,k+1,b_0)$\u4e24\u4e2a\u90e8\u5206\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u4e0d\u4f1a\u9009\u62e9\u91cd\u590d\u7684\u4e24\u4e2a\u533a\u95f4\u4e86\u3002\n\n## \u77e5\u8bc6\u70b9\n\n+ \u7528\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u524d\u5148\u60f3\u60f3\u80fd\u4e0d\u80fd\u7528\u66f4\u7b80\u5355\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u4e14\u8981\u7ed3\u5408\u5b9e\u73b0\u7684\u95ee\u9898\u8fdb\u884c\u89c2\u5bdf\uff0c\u6700\u597d\u753b\u51fa\u6765\u3002\uff08\u6bd4\u5982\u8fd9\u9053\u9898\u6839\u672c\u7528\u4e0d\u7740\u4e3b\u5e2d\u6811\uff09\u3002\n+ \u5f53\u6211\u4eec\u9047\u89c1\u4e00\u4e2a\u548c**\u8fde\u7eed\u4e00\u6bb5\u533a\u95f4**\u76f8\u5173\u7684\uff0c\u5e76\u4e14\u628a\u533a\u95f4\u5c55\u5f00\u6210\u597d\u51e0\u6bb5\u5c31\u4f1a\u8d85\u65f6/\u8d85\u7a7a\u95f4\u7684\uff0c**\u8003\u8651\u628a\u8fd9\u6bb5\u533a\u95f4\u8bb0\u5f55\u6210\u4e00\u5757**\u3002",
        "postTime": 1575226087,
        "uid": 75715,
        "name": "KokiNiwa",
        "ccfLevel": 0,
        "title": "[NOI2010] \u8d85\u7ea7\u94a2\u7434"
    },
    {
        "content": "\u9898\u610f\u7b80\u8ff0\uff1a\n\n1.\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 $n$\uff0c\u6c42\u51fa\u6bcf\u4e00\u4e2a\u957f\u5ea6\u4e3a l~r \u7684\u5b50\u5e8f\u5217\u6570\u503c\u7684\u548c\u3002\n\n2.\u53d6\u51fa\u524d $k$ \u5927\u4e2a\uff0c\u7d2f\u53ca\u603b\u548c\u3002\n\n------------\n###  Solution\uff1a\n\u5bb9\u6613\u60f3\u5230\uff0c\u6c42\u9759\u6001\u5b50\u5e8f\u5217\u4e4b\u548c\uff0c\u53ef\u4ee5\u4f7f\u7528\u524d\u7f00\u548c\uff0c\u533a\u95f4 l~r \u548c\u5373\u4e3a $pre[r]-pre[l-1]$\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u66b4\u529b\u6c42\u51fa\u6bcf\u4e2a\u7684\u548c\u7136\u540e\u6392\u5e8f\u7d2f\u52a0\uff0c\u4f46\u8fd9\u6837\u590d\u6742\u5ea6\u8fc7\u9ad8\uff0c\u4f1a TLE\u3002\n\n\u518d\u60f3\u60f3\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8d85\u7ea7\u548c\u5f26\u7684\u8d77\u59cb\u70b9 k\uff0c\u7ec8\u70b9\u7684\u8303\u56f4\u5728 k+l-1~k+r-1 \u4e4b\u95f4\u3002\n\n\u90a3\u4e48\u6211\u4eec\u82e5\u80fd\u627e\u51fa\u6bcf\u4e00\u4e2a k \u4e2d\uff0c\u5bf9\u5e94\u7684\u7ec8\u70b9\u4e2d\u7684\u6700\u5927\u503c\uff0c\u4e0d\u65ad\u53d6\u51fa\u6700\u5927\u503c\u4e0d\u5c31\u53ef\u4ee5\u4e86\u5417\uff1f\n\n~~\u663e\u7136\u662f\u4e0d\u53ef\u884c\u7684\u3002~~\n\n\u7406\u75311\uff1ak \u53ef\u80fd\u5927\u4e8e $n$\uff0c\u5373\u53d6\u5b8c\u4e0d\u591f\u3002\n\n\u7406\u75312\uff1a\u5982\u56fe\uff1a\n![](https://s2.ax1x.com/2019/11/29/QEuHr8.png)\n\n\u5f53 1~3,2~3 \u53d6\u5b8c\u65f6\uff0c1~2 \u663e\u7136\u76f8\u5bf9\u4e8e\u5176\u4ed6\u89e3\u66f4\u4f18\u3002\n\n\u6240\u4ee5\uff0c\u5f53\u6211\u4eec\u7d2f\u52a0\u4e00\u4e2a\u8282\u70b9 mid \u65f6\uff0c\u5e94\u8003\u8651 l~mid-1\uff0cmid+1~r\uff0c\u5c06\u5176\u52a0\u5165\u5019\u9009\u961f\u5217\uff0c\u4ee5\u907f\u514d\u6f0f\u6389\u66f4\u4f18\u89e3\u3002\n\n\u7531\u6b64\u53ef\u89c1\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4 1.\u524d\u7f00\u548c 2.RMQ 3.\u5f53\u524d\u6700\u4f18\u89e3\uff08\u4f18\u5148\u961f\u5217\uff09\u3002\n\n\u540c\u65f6\uff0c\u4f18\u5148\u961f\u5217\u4e2d\u7ef4\u62a4\u4e94\u4e2a\u5143\u7d20\uff1a\u5f53\u524d\u9009\u53d6\u8282\u70b9\u7f16\u53f7\uff0c\u5f53\u524d\u7684\u8303\u56f4 l~r\uff0c\u5f53\u524d\u7684\u6700\u5927\u503c\uff0c\u5f53\u524d\u7684\u8d85\u7ea7\u548c\u5f26\u7684\u6765\u6e90\u3002\n\n\u6ce8\u610f\uff1ast \u8868\u7ef4\u62a4\u7684\u662f\u524d\u7f00\u548c\u6700\u5927\u503c\uff0c\u4f18\u5148\u961f\u5217\u5219\u662f\u533a\u95f4\u548c\u6700\u5927\u503c\u3002\n\n\u6211\u7684\u5199\u6cd5\u8c8c\u4f3c\u548c\u5176\u4ed6\u4eba\u4e0d\u5927\u4e00\u6837\uff08~~\u8dd1\u5f97\u6162~~\uff09\u4ee3\u7801\u5185\u6709\u6ce8\u91ca\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nstruct hx\n{\n\tlong long now,lk,rk,val,pos;//\u5f53\u524d\u9009\u53d6\u7f16\u53f7\uff0cl~r\uff0cmax\uff0c\u548c\u5f26\u6765\u6e90\n\thx();\n\thx(long long _now,long long _lk,long long _rk,long long _val,long long _pos):now(_now),lk(_lk),rk(_rk),val(_val),pos(_pos){};\n\tbool operator < (hx x) const\n\t{\n        return val<x.val;\n    }\n};//\u548c\u5f26\u7ed3\u6784\u4f53\uff0c\u5e76\u91cd\u8f7d<\uff0c\u6309\u503c\u6392\u5e8f\npriority_queue<hx> q;\nlong long n,k,l,r,st[23][2000500][2],hxt[2000500],ans;//st\u8868\uff0c\u7b2c\u4e09\u7ef40\u662f\u7ef4\u62a4\u533a\u95f4\u524d\u7f00\u548c\u6700\u5927\u503c\uff0c1\u662f\u533a\u95f4\u524d\u7f00\u548c\u6700\u5927\u503c\u7f16\u53f7\n//\u4e00\u5f00\u59cb\u6ca1\u5f00long long\u9519\u4e86\uff0c\u4e00\u6c14\u4e4b\u4e0b\u60f3\u90fd\u6ca1\u60f3\u5168\u5f00\u6210long long\nvoid st_pre()\n{\n\tfor(int i=1;i<=20;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tif(st[i-1][j][0]<st[i-1][j+(1<<(i-1))][0]) st[i][j][0]=st[i-1][j+(1<<(i-1))][0],st[i][j][1]=st[i-1][j+(1<<(i-1))][1];\n\t\t\telse st[i][j][0]=st[i-1][j][0],st[i][j][1]=st[i-1][j][1];\n\t\t}//\u5728\u66f4\u65b0\u533a\u95f4\u524d\u7f00\u548c\u6700\u5927\u503c\u65f6\u540c\u65f6\u66f4\u65b0\u6700\u5927\u503c\u4f4d\u7f6e\uff08\u7a0d\u5fae\u6539\u4e0b\u6a21\u677f\uff09\n\t}\n}//st\u8868\u9884\u5904\u7406\n\nint main()\n{\n\tscanf(\"%lld %lld %lld %lld\",&n,&k,&l,&r);//\u8bfb\u5165\n\tfor(int i=1;i<=n;i++) scanf(\"%lld\",&st[0][i][0]),st[0][i][0]+=st[0][i-1][0],st[0][i][1]=i;//\u7ef4\u62a4\u521d\u59cb\u524d\u7f00\u548c\u6700\u5927\u503c\u4e0e\u521d\u59cb\u4f4d\u7f6e\n\tst_pre();\n\tfor(int i=1;i<=20;i++) hxt[1<<i]++;\n\tfor(int i=1;i<=n;i++) hxt[i]+=hxt[i-1];//O(1)\u8be2\u95ee\u9884\u5904\u7406\n\tfor(int i=1;i<=n-l+1;i++)\n\t{\n\t\tlong long ll=i+l-1,rr=min(n,i+r-1),len=rr-ll+1;//\u5de6\uff0c\u53f3\uff0c\u957f\u5ea6\uff0c\u6ce8\u610f\u8303\u56f4\u53d6min\n\t\tlong long max1=st[hxt[len]][ll][0],max2=st[hxt[len]][rr-(1<<hxt[len])+1][0],id1=st[hxt[len]][ll][1],id2=st[hxt[len]][rr-(1<<hxt[len])+1][1];//\u8fd9\u56db\u4e2a\u53d8\u91cf\u5176\u5b9e\u5c31\u662fst\u8868\u4e2d\u4e24\u6bb5\u533a\u95f4\u5185\u7684\u524d\u7f00\u548c\u6700\u5927\u503c\u4e0e\u7f16\u53f7\uff0c\u53d6max\n\t\tif(max1<max2) q.push(hx(id2,ll,rr,max2-st[0][i-1][0],i));\n\t\telse q.push(hx(id1,ll,rr,max1-st[0][i-1][0],i));//\u63d2\u5165\u5927\u7684\uff0c\u540c\u65f6\u7528\u524d\u7f00\u548c\u6700\u5927\u503c\u51cf\u53bb\u8d77\u59cb\u70b9-1\uff0c\u5f97\u5230\u5e8f\u5217\u548c\n\t}\n\tint js=0;\n\twhile(js<k)\n\t{\n\t\tjs++;\n\t\tans=ans+q.top().val;//\u66f4\u65b0\n\t\tlong long ll=q.top().lk,rr=q.top().rk,mid=q.top().now,poss=q.top().pos;//\u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\uff0c\u4e0a\u6b21\u53d6\u7684\u4f4d\u7f6e\uff0c\u539f\u672c\u8d77\u70b9\n\t\tif(mid>ll)//\u5de6\u8fb9\u6709\u53ef\u66f4\u65b0\u63d2\u5165\u7684\n\t\t{\n\t\t\tmid--;//\u56e0\u4e3a\u4e0d\u80fd\u91cd\u590d\u53d6mid\uff0c\u6545\u51cf\u4e00\n\t\t\tlong long len=mid-ll+1,max1=st[hxt[len]][ll][0],max2=st[hxt[len]][mid-(1<<hxt[len])+1][0],id1=st[hxt[len]][ll][1],id2=st[hxt[len]][mid-(1<<hxt[len])+1][1];\n\t\t\tif(max1<max2) q.push(hx(id2,ll,mid,max2-st[0][poss-1][0],poss));\n\t\t\telse q.push(hx(id1,ll,mid,max1-st[0][poss-1][0],poss));//\u63d2\u5165\u5806\n\t\t\tmid++;//\u4e00\u5b9a\u8981\u8bb0\u5f97\u56de\u6765\uff0c\u4e0b\u9762\u53ef\u80fd\u8fd8\u7528\u5230\n\t\t}\n\t\tif(rr>mid)//\u540c\u4e0a\uff0c\u53f3\u8fb9\u60c5\u51b5\n\t\t{\n\t\t\tmid++;\n\t\t\tlong long len=rr-mid+1,max1=st[hxt[len]][mid][0],max2=st[hxt[len]][rr-(1<<hxt[len])+1][0],id1=st[hxt[len]][mid][1],id2=st[hxt[len]][rr-(1<<hxt[len])+1][1];\n\t\t\tif(max1<max2) q.push(hx(id2,mid,rr,max2-st[0][poss-1][0],poss));\n\t\t\telse q.push(hx(id1,mid,rr,max1-st[0][poss-1][0],poss));\n\t\t\tmid--;\n\t\t}\n\t\tq.pop();\n\t}\n\tprintf(\"%lld\",ans);//\u8f93\u51fa\u7ed3\u679c\n\treturn 0;\n}\n```\n\u9898\u89e3\u6e05\u695a\u4e48\uff1f\n\nreturn 0\uff1b",
        "postTime": 1575040105,
        "uid": 147523,
        "name": "Wyxrg",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2048 \u3010[NOI2010]\u8d85\u7ea7\u94a2\u7434\u3011"
    },
    {
        "content": "\u6211\u8981\u89e3\u51fa\u4e00\u4e2a\n\ni l r x v\u7684 \u7ec4\n\n\u6211\u53ef\u4ee5\u67e5\u627e\u7684\u662f\u4e00\u4e2a\u6700\u5927\u503c\n\n\u5e76\u4e14\u6211\u8981\u77e5\u9053\u4ed6\u5728\u54ea\u4e2a\u4f4d\u7f6e\n\n\u67e5\u6700\u5927\u503cST\u8868\u5373\u53ef\n\n\u4f46\u662f\u67e5\u627e\u4f4d\u7f6e\u7684\u8bdd\n\nst\u8868\u662f\u4e0d\u662f\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u5904\u4f4d\u7f6e\u6765\n\n\u7b54\u6848\u662f\u80af\u5b9a\u7684\n\n\u53ea\u8981\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\uff08\u4e00\u4e2a2\u7684j\u6b21\u65b9\u7684\u6700\u5927\u503c\uff09\n\n\u5728\u54ea\u4e00\u4e2a\u4f4d\u7f6e\u5373\u53ef\n\n\u8d2a\u5fc3\u6bcf\u6b21\u53d6\u51fa\u6700\u5927\u7684\u5e76\u5c06\u6700\u5927\u7684\u5206\u88c2\u6210\u4e3a\n\ni l x-1 posl vl\n\ni x+1 r pos2 vr\n\n\u5373\u53ef\n\n\u6700\u540e\u4e0d\u8981\u5fd8\u8bb0\u8981\u5f00long long\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define int long long\n\ninline int read(){\n\tint x=0,f=1;\n\tchar p=getchar();\n\twhile(!isdigit(p)){\n\t\tif(p=='-') f=-1;\n\t\tp=getchar();\n\t}\n\twhile(isdigit(p)) x=(x<<3)+(x<<1)+p-48,p=getchar();\n\treturn x*f;\n}\n\nconst int maxn=5e5+5;\n\nstruct node{\n\tint start,l,r,val,pos;\n\tbool operator <(const node x)const{\n\t\treturn x.val>val;\n\t}\n};\n\nint f[maxn][21],p[maxn][21],n,m,L,R,ans,x[maxn],sum[maxn];\n\npriority_queue<node> q;\n\ninline void pre_work(){\n\tfor(int j=1;j<=19;j++)\n\t\tfor(int i=1;i+(1<<j)-1<=n;i++){\n\t\t\tif(f[i][j-1]<f[i+(1<<j-1)][j-1]){\n\t\t\t\tf[i][j]=f[i+(1<<j-1)][j-1];\n\t\t\t\tp[i][j]=p[i+(1<<j-1)][j-1];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tf[i][j]=f[i][j-1];\n\t\t\t\tp[i][j]=p[i][j-1];\n\t\t\t}\n\t\t}\n}\n\ninline pair<int,int> query(int l,int r){\n\tint t=log2(r-l+1);\n\tpair<int,int> pi;\n\tif(f[l][t]<f[r-(1<<t)+1][t]){\n\t\tpi.first=f[r-(1<<t)+1][t];\n\t\tpi.second=p[r-(1<<t)+1][t];\n\t} \n\telse{\n\t\tpi.first=f[l][t];\n\t\tpi.second=p[l][t];\n\t}\n\treturn pi;\n}\n\nsigned main(){\n\tn=read();m=read();L=read();R=read();\n\tfor(int i=1;i<=n;i++) x[i]=read(),p[i][0]=i;\n\tfor(int i=1;i<=n;i++) sum[i]=sum[i-1]+x[i];\n\tfor(int i=1;i<=n;i++) f[i][0]=sum[i];\n\tpre_work();\n\tfor(int i=1;i<=n;i++){\n\t\tif(i+L-1<=n){\n\t\t\tint l=i+L-1,r=min(i+R-1,n);\n\t\t\tpair<int,int> pi=query(l,r);\n\t\t\tq.push((node){i,l,r,pi.first-sum[i-1],pi.second});\n\t\t}\n\t\telse break;\n\t}\n//\tcout<<\"%^&\"<<endl;\n\twhile(m--){\n\t//\tcout<<ans<<endl;\n\t\tnode a=q.top();\n\t\tq.pop();\n\t\tans+=a.val;\n\t\tif(a.pos==a.l){\n\t//\t\tcout<<\"$%^\"<<endl;\n\t\t\tif(a.l==a.r) continue;\n\t\t\tpair<int,int> pi=query(a.l+1,a.r);\n\t//\t\tcout<<\":\"<<endl;\n\t\t\tq.push((node){a.start,a.l+1,a.r,pi.first-sum[a.start-1],pi.second});\n\t\t}\n\t\telse if(a.pos==a.r){\n\t\t\tif(a.l==a.r) continue;\n\t\t\tpair<int,int> pi=query(a.l,a.r-1);\n\t\t\tq.push((node){a.start,a.l,a.r-1,pi.first-sum[a.start-1],pi.second});\n\t\t}\n\t\telse{\n\t\t\tpair<int,int> pi=query(a.l,a.pos-1);\n\t\t\tq.push((node){a.start,a.l,a.pos-1,pi.first-sum[a.start-1],pi.second});\n\t\t\tpi=query(a.pos+1,a.r);\n\t\t\tq.push((node){a.start,a.pos+1,a.r,pi.first-sum[a.start-1],pi.second});\t\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1569927332,
        "uid": 118918,
        "name": "whyl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2048 \u3010[NOI2010]\u8d85\u7ea7\u94a2\u7434\u3011"
    },
    {
        "content": "\u7ed9\u5927\u5bb6\u4e00\u4e2a\u901a\u4fd7\u4e00\u70b9\u7684\u4ee3\u7801\uff0c\u5806\u4e2d\u5143\u7d20\u610f\u4e49\uff1aval\u4e3a\u8be5\u9009\u53d6\u65b9\u6848\u7684\u503c\uff0cmid\u4e3a\u9009\u53d6\u7684\u53f3\u8fb9\u7aef\u70b9\uff0cl\uff0cr\u4e3a\u9650\u5236\u5728l-r\u53d6\u8fd9\u4e2amid\uff0cori\u4e3a\u5de6\u7aef\u70b9\u4f4d\u7f6e-1\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nlong long a[500100],st[500100][21];\nlong long qr(int l,int r){\n\tlong long mx=-1;\n\tint j=log2(r-l+1);\n\tif(a[st[l][j]]>a[st[r-(1<<j)+1][j]])return st[l][j];\n\telse return st[r-(1<<j)+1][j];\n}\nint n,k,l,r;\nstruct p{\n\tlong long ori,l,r,val,mid;\nbool operator<(const p &a)const{\n\treturn a.val>val;\n}\n};\npriority_queue<p> q;\nint main()\n{\n\tcin>>n>>k>>l>>r;long long tt;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>tt;a[i]=a[i-1]+tt;\n\t\tst[i][0]=i;\n\t}\n\tfor(int i=1;(1<<i)<=n;i++){\n\t\tfor(int j=1;j+(1<<i)-1<=n;j++){\n\t\t//printf(\"%d %d\\n\",i,j);\n\t\tif(a[st[j][i-1]]>a[st[j+(1<<(i-1))][i-1]])\n\t\tst[j][i]=st[j][i-1];\n\t\telse st[j][i]=st[j+(1<<(i-1))][i-1];\n\t\t}\n\t}long long ans=0;\n\tfor(int i=0;i<=n;i++){\n\t\tint z=i+l,zz=min(n,i+r);\n\t\t\t\tif(z>n)break;\n\t\t//printf(\"%lld\\n\",a[qr(z,zz)]-a[i]);\n\tp t;\n\tt.ori=i;t.val=a[qr(z,zz)]-a[i];t.l=z,t.r=zz;t.mid=qr(z,zz);\n\tq.push(t);\n\t}//push pile \n\twhile(k--){\n\t\tp d=q.top();q.pop();\n\t\tans+=d.val;\n\t\tp j,k;\n\t\tif(d.mid-1>=d.l&&d.mid-1<=d.r){\n\t\t\tj.l=d.l;j.r=d.mid-1;j.ori=d.ori;j.mid=qr(j.l,j.r);j.val=a[j.mid]-a[j.ori];\n\t\tq.push(j);\n\t\t}\n\t\tif(d.mid+1>=d.l&&d.mid+1<=d.r){\n\t\t\tk.l=d.mid+1;k.r=d.r;k.ori=d.ori;k.mid=qr(k.l,k.r);k.val=a[k.mid]-a[k.ori];\n\t\tq.push(k);\n\t\t}\n\t}\n\tcout<<ans;\n}```",
        "postTime": 1546590446,
        "uid": 56803,
        "name": "VPYEKINDAR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2048 \u3010[NOI2010]\u8d85\u7ea7\u94a2\u7434\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u6211\u7ed9\u51fa\u4e00\u79cd\u601d\u7ef4\u96be\u5ea6\u6bd4\u8f83\u4f4e\uff0c\u6bd4\u8f83\u76f4\u63a5\u7684\u505a\u6cd5.\n\u9996\u5148\u6211\u4eec\u5c06\u8fd9\u9053\u9898\u8f6c\u5316\u4e3a\u6c42\u524d\uff4b\u5927\u533a\u95f4\u548c\uff0c\u533a\u95f4\u957f\u5ea6\u9700\u8981\u5728L,R\u4e4b\u95f4\uff0e\u8fd9\u4e2a\u95ee\u9898\u6bd4\u8f83\u96be\uff0c\u6211\u4eec\u5148\u6c42\u8fd9\u4e9b\u533a\u95f4\u4e2d\u7b2ck\u5927\u533a\u95f4\u548c\u662f\u591a\u5c11\uff0e\u6b64\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5224\u5b9a\u6027\u95ee\u9898\uff0c\u7528\u4e8c\u5206\u7b54\u6848\u89e3\u51b3\uff0e\n\n   \u6211\u4eec\u9700\u8981\u6c42\u5bf9\u67d0\u4e2ax\uff0c\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u7684\u548c<=x\uff0c\u4e14\u533a\u95f4\u957f\u5ea6\u6ee1\u8db3\u6761\u4ef6\uff0e\u5bf9\u4ee5j\u7ed3\u5c3e\u7684\u533a\u95f4\uff0c\u5176\u5f00\u5934i\u5c5e\u4e8e[j-R+1,j-L+1]\uff0e\u8bbe\u524d\u7f00\u548c\u6570\u7ec4\u4e3aS\uff0cS[j]-S[i-1]<=x\uff0c\u5373\u4e3aS[i-1]<=S[j]-x\uff0e\u5982\u679c\u5c06\u524d\u7f00\u548c\u6570\u7ec4\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\uff0c\u8be5\u95ee\u9898\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8f6c\u5316\u4e3a\u5e8f\u5217\u4e0a\u67d0\u533a\u95f4\u4e2d\u6709\u591a\u5c11\u4e2a\u6570<=x\uff0e\n   \n   \u6211\u4eec\u53ef\u4ee5\u5c06\u524d\u7f00\u548c\u6570\u7ec4\u4f9d\u6b21\u63d2\u5165\u53ef\u6301\u4e45\u531601trie\uff0e\u8be5\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u4ee5O(32)\u7684\u590d\u6742\u5ea6\u67e5\u8be2\u533a\u95f4[1,x]\u4e2d<=\u67d0\u6570\uff59\u7684\u6570\u7684\u4e2a\u6570\uff0e\u67e5\u8be2[L,R]\u53ea\u9700\u8981\u7528\u67e5\u8be2\u4e24\u6b21\u76f8\u51cf\u5373\u53ef\uff0e\n   \n   \u5f53\u6211\u4eec\u5f97\u5230\u7b2c\uff4b\u5927\u533a\u95f4\u548c\u662fp\uff0e\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u548c\u5927\u4e8ek\uff0c\u8bbe\u6709\uff41\u4e2a\uff0c\u8fd9\u4e9b\u533a\u95f4\u548c\u7684\u548c\u4e3aSum\uff0e\u5219\u6211\u4eec\u6070\u597d\u8fd8\u8981\u9009k-a\u4e2a\u548c\u4e3ap\u7684\u533a\u95f4\uff0e\u6700\u7ec8\u7b54\u6848\u5373\u4e3a(k-a)*p+Sum\n   \n   \u5982\u679c\u60f3\u77e5\u9053\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u548c\u5927\u4e8e\uff4b\uff0c\u65b9\u6cd5\u548c\u4e4b\u524d\u5224\u5b9a\u65b9\u6cd5\u975e\u5e38\u7c7b\u4f3c\u4e0d\u518d\u8d58\u8ff0\uff0e\u8fd9\u4e9b\u533a\u95f4\u7684\u548c\u8981\u5728\u53ef\u6301\u4e45\u531601trie\u4e0a\u591a\u7ef4\u62a4\u4e00\u4e2a\u548c\u7684\u4fe1\u606f\uff0c\u601d\u8def\u4e5f\u5f88\u76f8\u4f3c\uff0e\n   \u521d\u59cb\u5316\u53ef\u6301\u4e45\u531601trie\u590d\u6742\u5ea6O(32n)\uff0c\u4e8c\u5206\u5224\u5b9a\u590d\u6742\u5ea6O(32nlogn)\uff0c\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u590d\u6742\u5ea6O(32n),\u6545\u603b\u590d\u6742\u5ea6O(32nlogn)\uff0c01trie\u5e38\u6570\u6781\u5c0f\uff0c\u6545\u80fd\u9669\u9669\u5730\u8fc7\u672c\u9898\uff0e\n   \t\n    \n \n```cpp\n// luogu-judger-enable-o2\n#include <iostream>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\nconst int maxn=5e5+1000;\nint n,K,L,R;\nint a[maxn];\nint sum[maxn]={0};\ntypedef long long ll;\nstruct trie\n{\n    int size,ch[2];\n    ll sum;\n}Trie[maxn*40];\nint mem=0;\nint root[maxn]={0};\n#define size(x) Trie[x].size\n#define lch(x) Trie[x].ch[0]\n#define rch(x) Trie[x].ch[1]\n#define sum(x) Trie[x].sum\nvoid insert(int& rt,int old,int v)\n{\n    int org=v;\n    v+=5e8;\n    rt=++mem;\n    size(rt)=size(old)+1;\n    sum(rt)=sum(old)+org;\n    int p=rt,q=old;\n    for(int i=30;i>=0;i--)\n    {\n        if(v&(1<<i))\n        {\t\n            rch(p)=++mem;\n            lch(p)=lch(q);\n            p=rch(p);\n            q=rch(q);\n        }\n        else\n        {\n            lch(p)=++mem;\n            rch(p)=rch(q);\n            p=lch(p);\n            q=lch(q);\n        }\n        size(p)=size(q)+1;\t\n        sum(p)=sum(q)+org;\n    }\n    \n} \ninline int getsmaller(int rt,int v) //\u67e5\u8be2\u5e73\u8861\u6811\u4e2d<v\u7684\u6570\u7684\u4e2a\u6570\n{\n    v+=5e8;\n    register int p=rt,ret=0;\n    for(int i=30;i>=0;i--)\n    {\n        if(v&(1<<i))\n        {\t\n            ret+=size(lch(p));\n            p=rch(p);\n        }\n        else\n            p=lch(p);\n        if(!p)\n            return ret;\n    }\n    return ret;\n}\ninline ll getsum(int rt,int v)\t\t//\u67e5\u8be2\u5e73\u8861\u6811\u4e2d<v\u7684\u6570\u7684\u548c\n{\n    v+=5e8;\n    register int p=rt;\t\n    register ll ret=0;\n    for(int i=30;i>=0;i--)\n    {\n        if(v&(1<<i))\n        {\n            ret+=sum(lch(p));\n            p=rch(p);\n        }\n        else\n            p=lch(p);\n        if(!p)\n            return ret;\n    }\n    return ret;\n}\nll getcount(int x)\t\t//\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u548c<=x\n{\n    ll ret=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(i>R)\n        {\n            int lp=i-R-1;\n            int rp=i-L;\n            int l=getsmaller(root[lp],sum[i]-x+1);\n            int r=getsmaller(root[rp],sum[i]-x+1);\n            ret+=r-l;\n        }\n        else if(i>=L)\n        {\n            int rp=i-L;\n            int r=getsmaller(root[rp],sum[i]-x+1);\n            ret+=r;\n        }\n    }\n\n    return ret;\n}\nint main()\n{\n//\tfreopen(\"piano10.in\",\"r\",stdin);\n    ios::sync_with_stdio(false);\n    cin>>n>>K>>L>>R;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a[i];\n        sum[i]=sum[i-1]+a[i];\n    }\n    insert(root[0],root[0],0);\n    for(int i=1;i<=n;i++)\n        insert(root[i],root[i-1],sum[i]);\n    //cout<<mem<<endl;\n    const int t=5e8;\n    int l=0,r=1e9+100;\n    while(l<r)\n    {\n        int mid=(l+r)>>1;\n        ll ret=getcount(mid-t);\n        if(ret<K)\n            r=mid;\n        else\n            l=mid+1;\n    }\n    int x=l-t-1;\n    ll real=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(i>R)\n        {\n            int lp=i-R-1;\n            int rp=i-L;\n            int li=getsmaller(root[lp],sum[i]-x);\n            int ri=getsmaller(root[rp],sum[i]-x);\n            real+=ri-li;\n        }\n        else if(i>=L)\n        {\n            int rp=i-L;\n            \n            int ri=getsmaller(root[rp],sum[i]-x);\n            real+=ri;\n        }\n    }\n    real=K-real;\t//real\u662f\u533a\u95f4\u548c\u6070\u597d\u4e3ax\u7684\u533a\u95f4\u4e2d\u6211\u4eec\u8981\u9009\u7684\u4e2a\u6570\n    ll su=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(i>R)\n        {\n            int lp=i-R-1;\n            int rp=i-L;\n            ll l=getsum(root[lp],sum[i]-x);\n            ll r=getsum(root[rp],sum[i]-x);\n            int li=getsmaller(root[lp],sum[i]-x);\n            int ri=getsmaller(root[rp],sum[i]-x);\n            su+=1ll*sum[i]*(ri-li)-(r-l);\n        }\n        else if(i>=L)\n        {\n            int rp=i-L;\n            ll r=getsum(root[rp],sum[i]-x);\n            int ri=getsmaller(root[rp],sum[i]-x);\n            su+=1ll*sum[i]*ri-r;\t\n        }\n    }\n    su+=1ll*real*x;\n    cout<<su<<endl;\n    return 0;\n}\n/*\n5 7 1 5\n1 1 -1 1 1\n */\n```",
        "postTime": 1525450833,
        "uid": 70833,
        "name": "\u82cf\u8054\u5143\u5e05",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2048 \u3010[NOI2010]\u8d85\u7ea7\u94a2\u7434\u3011"
    }
]