[
    {
        "content": "\u5224\u65ad\u65e0\u89e3\u662f\u5bb9\u6613\u7684\uff0c\u4e0d\u59a8\u53ea\u8003\u8651\u6709\u89e3\u7684\u60c5\u51b5\u3002\u4ee5\u65f6\u95f4\u4e3a\u6a2a\u8f74\u3001\u8f66\u6570\u4e3a\u7eb5\u8f74\u753b\u51fa\u4e00\u6761\u6298\u7ebf\uff0c\u53ef\u4ee5\u53d1\u73b0\u6240\u6709\u4eba\u7684\u7b49\u5f85\u65f6\u95f4\u4e4b\u548c\u6070\u597d\u662f\u6298\u7ebf\u5728\u6a2a\u8f74\u4e0b\u65b9\u7684\u90e8\u5206\u548c\u6a2a\u8f74\u56f4\u6210\u7684\u56fe\u5f62\u7684\u9762\u79ef\u3002\n\n\u8003\u8651\u5982\u4f55\u5904\u7406\u591a\u6b21\u8be2\u95ee\uff1a\u5148\u7b97\u51fa $b_i =0$ \u65f6\u7684\u7b54\u6848\uff0c\u6b64\u65f6\u6298\u7ebf\u5728\u6a2a\u8f74\u4e0b\u65b9\u7684\u90e8\u5206\u548c\u6a2a\u8f74\u6240\u56f4\u6210\u7684\u56fe\u5f62\u53ef\u4ee5\u62c6\u5206\u6210\u82e5\u5e72\u9ad8\u5ea6\u4e0d\u540c\u7684\u77e9\u5f62\u3002\u5f53 $b_i > 0$ \u65f6\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u8fd9\u4e9b\u77e9\u5f62\u5411\u4e0a\u5e73\u79fb $b_i$ \u540e\u7684\u7b54\u6848\uff0c\u5c06\u77e9\u5f62\u6309\u9ad8\u5ea6\u6392\u5e8f\uff0c\u8be2\u95ee\u6309 $b_i$ \u6392\u5e8f\u540e\u7528\u6307\u9488\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\u3002\u89c6 $n,q$ \u540c\u9636\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n)$\u3002\n\n```cpp\n/*\n\u6700\u9eef\u6de1\u7684\u4e00\u4e2a\u3000\u68a6\u6700\u4e3a\u70bd\u70ed\n\u4e07\u5343\u5b64\u5355\u7130\u706b\u3000\u8ba9\u8fd9\u865a\u6784\u7075\u9b42\u9c9c\u6d3b\n\u81f3\u5c11\u5728\u8fd9\u4e00\u523b\u3000\u70ed\u7231\u4e0d\u95ee\u4e3a\u4f55\n\u5b58\u5728\u4e3a\u5c06\u5fc3\u58f0\u54cd\u5f7b\n*/\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n\nconst int N = 2e5 + 5;\n\nstruct node {\n    int x, id;\n    bool operator < (const node &b) const {\n        return x < b.x;\n    }\n} p[N];\nint n, m, q, a[N], s[N], t[N]; \nint vr[N], bak; \nLL s1, s2, ans[N];\n\nsigned main(void) {\n    cin >> n >> q;\n    for (int i = 1; i <= n; i++) {\n        char ch;\n        cin >> ch >> t[i] >> a[i];\n        a[i] *= (ch == '+' ? 1 : -1);\n    }\n    for (int i = 1; i <= n; i++) {\n        s[i] = s[i - 1] + a[i];\n        if (i < n) t[i] = t[i + 1] - t[i];\n    }\n    for (int i = 1; i <= n; i++) if (s[i] < 0) {\n        vr[++bak] = i;\n        s1 += 1ll * t[i] * (-s[i]);\n        s2 += t[i];\n    }  \n    sort(vr + 1, vr + bak + 1, [&](const int &i, const int &j) {\n        return s[i] > s[j];\n    });\n    for (int i = 1; i <= q; i++) cin >> p[i].x, p[i].id = i;\n    sort(p + 1, p + q + 1);\n    int j = 1;\n    for (int i = 1; i <= q; i++) {\n        while (j <= bak && -s[vr[j]] <= p[i].x) {\n            s1 -= 1ll * t[vr[j]] * -s[vr[j]];\n            s2 -= t[vr[j]];\n            j++;\n        }\n        ans[p[i].id] = (s[n] + p[i].x < 0 ? -1 : s1 - 1ll * p[i].x * s2); \n    }\n    for (int i = 1; i <= q; i++)\n        ans[i] == -1 ? puts(\"INFINITY\") : printf(\"%lld\\n\", ans[i]);\n    return 0;   \n}\n```\n",
        "postTime": 1664364096,
        "uid": 246019,
        "name": "_came11ia_",
        "ccfLevel": 7,
        "title": "P6968 [NEERC2016]Expect to Wait"
    }
]