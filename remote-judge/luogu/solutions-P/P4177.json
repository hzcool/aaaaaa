[
    {
        "content": "[Youngsc](https://youngscc.github.io/)  \n**\u9996\u5148\u5982\u679c\u6ca1\u6709\u79df\u7528\u673a\u5668\u8fd9\u79cd\u9b3c\u755c\u7684\u64cd\u4f5c\uff0c\u90a3\u4e48\u5c31\u662f\u4e00\u4e2a\u88f8\u7684\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u4f8b\u5982\n[\u592a\u7a7a\u98de\u884c\u8ba1\u5212](https://www.luogu.org/problemnew/show/P2762)**  \n**\u4f46\u662f\u6709\u4e86\u79df\u7528\u8fd9\u79cd\u64cd\u4f5c\u663e\u7136\u5c31\u90a3\u6837\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e86**  \n**\u666e\u901a\u7684\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u5c06\u5de5\u4f5c\u4e0e\u6e90\u76f8\u8fde\uff0c\u5bb9\u91cf\u4e3a\u6536\u76ca\uff0c\u673a\u5668\u4e0e\u6c47\u76f8\u8fde\uff0c\u5bb9\u91cf\u4e3a\u4ee3\u4ef7\u7684\u76f8\u53cd\u6570\uff0c\u5bf9\u5e94\u7684\u5de5\u4f5c\u4e0e\u673a\u5668\u4e4b\u95f4\u662f\u65e0\u7a77\u5927**  \n**\u8fd9\u6837\u5272\u6389\u4e0e\u6e90\u70b9\u6216\u6c47\u70b9\u76f8\u8fde\u7684\u8fb9\u8868\u793a\u9009\u62e9\u5931\u53bb\u90a3\u79cd\u5229\u76ca**  \n**\u611f\u6027\u8ba4\u8bc6\u4e00\u4e0b\uff0c\u79df\u7528\u673a\u5668\u8fd9\u79cd\u64cd\u4f5c\u4ec5\u4ec5\u53ea\u4f1a\u5bf9\u4e00\u79cd\u5de5\u4f5c\u4ea7\u751f\u5f71\u54cd\uff0c\u65e0\u8bba\u5176\u4ed6\u5de5\u4f5c\u662f\u5426\u9700\u8981\u5b83**  \n**\u90a3\u4e48\u542f\u53d1\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u7528\u4e2d\u95f4\u5de5\u4f5c\u4e0e\u673a\u5668\u7684\u76f8\u8fde\u7684\u8fb9\u641e\u4e00\u4e9b\u4e8b\u60c5**  \n**\u6211\u4eec\u5c06\u5de5\u4f5c\u4e0e\u673a\u5668\u4e4b\u95f4\u7684\u8fb9\u5bb9\u91cf\u7531\u6b63\u65e0\u7a77\u53d8\u4e3a\u79df\u7528\u7684\u4ee3\u4ef7\u5373\u53ef\u5904\u7406\u79df\u7528\u95ee\u9898**  \n**\u539f\u7406\u5c31\u662f\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u95ee\u9898\u7684\u5b9e\u8d28\u662f\u5272\u6389\u4e00\u4e9b\u8fb9\u4f7f\u6e90\u548c\u6c47\u4e0d\u8fde\u901a**  \n**\u8003\u8651\u6e90\u548c\u6c47\u4e4b\u95f4\u7684\u4e00\u6761\u8def\u5f84\uff0c\u6709\u4e09\u79cd\u9009\u62e9\uff0c\u5bf9\u5e94\u5272\u6389\u4e09\u6761\u8fb9**  \n**\u663e\u7136\u4e2a\u70b9\u5de6\u53f3\u4e24\u6761\u8fb9\u53ef\u4ee5\u5f71\u54cd\u5176\u4ed6\u7684\u8def\u5f84\uff0c\u800c\u5272\u6389\u4e2d\u95f4\u4e0d\u4f1a**\n**\u56e0\u6b64\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u4e2d\u95f4\u7684\u8fb9\u8f6c\u5316\u4e3a\u79df\u7528\u64cd\u4f5c**\n**\u5176\u4ed6\u7684\u5c31\u548c\u666e\u901a\u7684\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u4e00\u6bdb\u4e00\u6837\u4e86**\n\n### \u4ee3\u7801\n```cpp\n# include <bits/stdc++.h>\n# define LL long long\n# define R register\n# define N 1210\n# define inf 2000101900\nusing namespace std;\n\nint n,s,t,e=-1,h[N*2],ans,used[N*2],tot,d,w,m,num;\nstruct zx{int v,flow,pre;} ed[2000010];\nint v[N*2];\nqueue <int> q;\n\ntemplate <typename T> inline void in(R T& a){\n    R char c=getchar(); R T x=0,f=1;\n    while (!isdigit(c)) {if (c == '-') f=-1; c=getchar();}\n    while (isdigit(c)) x = (x<<1)+(x<<3)+c-'0', c=getchar();\n    a = x*f;\n}\n\ninline void add(R int x,R int y,R int z){\n    ed[++e] = (zx){y,z,h[x]};\n    h[x] = e;\n}\n\ninline bool bfs(){\n    for(R int i=0; i<=t; ++i) v[i] = 0;\n    v[0] = 1;\n    q.push(0);\n    while(!q.empty()){\n        R int x=q.front();\n        q.pop();\n        for(R int i=h[x]; i!=-1; i=ed[i].pre)\n        {\n            R int p=ed[i].v;\n            if(ed[i].flow&&!v[p])\n            {\n                v[p] = v[x]+1;\n                q.push(p);\n            }\n        }\n    }\n    return v[t];\n}\n\ninline int maxflow(R int x,R int want){\n    if(x==t||!want) return want;\n    R int flow = 0;\n    for(R int i=used[x]; i!=-1; i=ed[i].pre,used[x]=i)\n    {\n        R int p=ed[i].v;\n        if(!ed[i].flow||v[p] != v[x]+1) continue;\n        R int f=maxflow(p,min(want,ed[i].flow));\n        if(!f) continue;\n        ed[i].flow -= f;\n        ed[i^1].flow += f;\n        flow += f;\n        want -= f;\n    }\n    return flow;\n}\n\nint main(){\n    in(n),in(m);\n    s = 0,t = n+m+1;\n    for (R int i=s; i<=t; ++i) h[i] = -1;\n    for (R int i=1; i<=n; ++i)\n    {\n        in(w); add(s,i,w),add(i,s,0);\n        tot += w;\n        in(num);\n        while (num--)\n        {\n            in(d),in(w);\n            add(i,d+n,w),add(d+n,i,0);\n        }\n    }\n    for (R int i=1; i<=m; ++i) in(w), add(n+i,t,w),add(t,n+i,0);\n    while (bfs()){\n        memcpy(used,h,sizeof(h));\n        ans += maxflow(s,inf);\n    }\n    printf(\"%d\\n\",tot-ans);\n    return 0;\n}\n\n```",
        "postTime": 1517466830,
        "uid": 36282,
        "name": "Youngsc",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4177 \u3010[CEOI2008]order\u3011"
    },
    {
        "content": "[$$\\color{#0e90d2}\\huge{\\texttt{my blog}}$$](https://wxwoo.github.io/2019/07/10/solution-p4177)\n\n******\n\n[\u539f\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problemnew/show/P4177)\n\n\u5148\u65e0\u89c6\u79df\u673a\u5668\uff0c~~\u660e\u663e\u7684~~\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\n\n\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\uff1a\n\n> \u7ed9\u5b9a\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u70b9\u6709\u70b9\u6743\uff0c\u9009\u62e9\u4e00\u4e2a\u5b50\u56fe\uff0c\u6ee1\u8db3\u5b50\u56fe\u4e0a\u5982\u679c\u9009\u62e9\u4e86\u4e00\u4e2a\u70b9\u5c31\u5fc5\u987b\u9009\u62e9\u5b83\u540e\u7ee7\u7684\u6240\u6709\u70b9\u3002\u6700\u5927\u5316\u70b9\u6743\u548c\u3002\n\n\u6211\u4eec\u5c06\u673a\u5668\u548c\u4efb\u52a1\u90fd\u770b\u6210\u4e00\u4e2a\u70b9\n\n\u5982\u679c\u8fd9\u9898\u6ca1\u6709\u79df\u673a\u5668\uff0c\u8fd9\u9898\u7684\u5efa\u8fb9\u65b9\u5f0f\u5c31\u5e94\u8be5\u662f\u8fd9\u6837\uff1a\n\n> 1. \u6e90\u70b9\u5411\u8ba2\u5355\u8fde\u6d41\u91cf\u4e3a\u5229\u6da6\u7684\u8fb9\n>\n> 1. \u673a\u5668\u5411\u6c47\u70b9\u8fde\u6d41\u91cf\u4e3a\u8d2d\u4e70\u4ef7\u683c\u7684\u8fb9\n>\n> 1. \u6bcf\u4e2a\u8ba2\u5355\u5411\u9700\u8981\u7684\u673a\u5668\u8fde\u6d41\u91cf\u4e3ainf\u7684\u8fb9\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6e90\u70b9\u8fde\u7684\u8fb9\u90fd\u662f\u8ba2\u5355\u7684\u5229\u6da6\uff0c\u6c47\u70b9\u8fde\u7684\u8fb9\u90fd\u662f\u673a\u5668\u7684\u6210\u672c\uff0c\u53ea\u6709\u673a\u5668\u548c\u8ba2\u5355\u4e4b\u95f4\u7684\u8fb9\u662f$inf$\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8ba2\u5355\u9700\u8981\u7684\u76f8\u540c\u673a\u5668\uff0c\u79df\u7528\u7684\u4ef7\u683c\u4e5f\u4e0d\u4e00\u6837\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u628a$inf$\u6362\u6210\u79df\u673a\u5668\u7684\u8d39\u7528\n\n\u4ece\u6b63\u786e\u6027\u7684\u89d2\u5ea6\u8003\u8651\uff0c\u8dd1\u6700\u5927\u6d41\uff08\u6700\u5c0f\u5272\uff09\u662f\u8ba1\u7b97\u6700\u4f18\u65b9\u6848\u4e0b\u7684\u6210\u672c\uff0c\u82e5\u603b\u79df\u501f\u8d39\u7528\u4f4e\u4e8e\u8d2d\u4e70\u673a\u5668\u8d39\u7528\uff0c\u8868\u793a\u8d2d\u4e70\u8d39\u7528\u7684\u90a3\u6761\u8fb9\u5c31\u4e0d\u4f1a\u6ee1\u6d41\uff0c\u9632\u6b62\u8d2d\u4e70\u673a\u5668\u53cd\u800c\u589e\u52a0\u6210\u672c\uff1b\u53cd\u4e4b\u8868\u793a\u8d2d\u4e70\u8d39\u7528\u7684\u90a3\u6761\u8fb9\u5c31\u4f1a\u6ee1\u6d41\uff0c\u9650\u5236\u4f4f\u6210\u672c\u56e0\u591a\u6b21\u79df\u7528\u540c\u4e00\u673a\u5668\u800c\u589e\u52a0\n\n\u6700\u7ec8\u5efa\u8fb9\u65b9\u5f0f\u5982\u4e0b\uff1a\n\n> 1. \u6e90\u70b9\u5411\u8ba2\u5355\u8fde\u6d41\u91cf\u4e3a\u5229\u6da6\u7684\u8fb9\n>\n> 1. \u673a\u5668\u5411\u6c47\u70b9\u8fde\u6d41\u91cf\u4e3a\u8d2d\u4e70\u4ef7\u683c\u7684\u8fb9\n>\n> 1. \u6bcf\u4e2a\u8ba2\u5355\u5411\u9700\u8981\u7684\u673a\u5668\u8fde\u6d41\u91cf\u4e3a\u79df\u7528\u8d39\u7528\u7684\u8fb9\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\ntemplate<typename T>\ninline void read(T &x)\n{\n    int ch=getchar();\n    T f=1;\n    x=0;\n    while(!('0'<=ch&&ch<='9'))\n    {\n        if(ch=='-')\n            f=-1;\n        ch=getchar();\n    }\n    while('0'<=ch&&ch<='9')\n    {\n        x=(x<<3)+(x<<1)+ch-48;\n        ch=getchar();\n    }\n    x*=f;\n}\nconst int inf=1e9,N=3e5+1;\nstruct edge\n{\n    int from,to,nxt,cap,flow;\n}e[N*20];\nint cnt,n,m,sour,sink,head[N],ans,q[N],l[N],p[N];\ninline void add(const int &u,const int &v,const int &f)\n{\n    e[++cnt]=(edge){u,v,head[u],f,0};\n    head[u]=cnt;\n    e[++cnt]=(edge){v,u,head[v],0,0};\n    head[v]=cnt;\n}\ninline bool find()\n{\n    memset(l,0,sizeof(l));\n    int h=1,t=1;\n    q[1]=sour;\n    l[sour]=1;\n    while(h<=t)\n    {\n        int x=q[h++];\n        for(int i=head[x];i;i=e[i].nxt)\n        {\n            if(!l[e[i].to]&&e[i].cap>e[i].flow)\n            {\n                q[++t]=e[i].to;\n                l[e[i].to]=l[x]+1;\n                if(e[i].to==sink)\n                    return 1;\n            }\n        }\n    }\n    return 0;\n}\nint dfs(const int &x,const int &now)\n{\n    if(x==sink||!now)\n        return now;\n    int t=now,detla;\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        if(e[i].cap>e[i].flow&&l[e[i].to]==l[x]+1)\n        {\n            detla=dfs(e[i].to,min(t,e[i].cap-e[i].flow));\n            if(!detla)\n                l[e[i].to]=0;\n            e[i].flow+=detla;\n            e[((i-1)^1)+1].flow-=detla;\n            t-=detla;\n            if(t==0)\n                break;\n        }\n    }\n    return now-t;\n}\ninline void dinic()\n{\n    while(find())\n        ans+=dfs(sour,inf);\n}\nint main()\n{\n    read(n);\n    read(m);\n    sour=0;\n    sink=n+m+1;\n    int u,v,t,r,tot=0;\n    for(int i=1;i<=n;++i)\n    {\n        read(v);\n        read(t);\n        add(sour,i,v);\n        for(int j=1;j<=t;++j)\n        {\n            read(u);\n            read(r);\n            add(i,u+n,r);\n        }\n        tot+=v;\n    }\n    for(int i=1;i<=m;++i)\n    {\n        read(v);\n        add(i+n,sink,v);\n    }\n    dinic();\n    printf(\"%d\",tot-ans);\n    return 0;\n}\n```",
        "postTime": 1562747777,
        "uid": 116659,
        "name": "wxwoo",
        "ccfLevel": 6,
        "title": "P4177 [CEOI2008]order \u9898\u89e3"
    },
    {
        "content": "[P4177 [CEOI2008]order](https://www.luogu.com.cn/problem/P4177)\n\n\u4e4d\u4e00\u770b\uff0c\u5c31\u662f\u6700\u5927\u6743\u503c\u95ed\u5408\u5b50\u56fe\u3002\n\n\u4f46\u662f\u6709\u79df\u7528\u3002\u79df\u7528\u548c\u4e70\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u8d39\u7528\u4e0d\u4e00\u6837\uff0c\u6ca1\u4e86\u3002\u90a3\u4e48\u76f4\u63a5\u628a\u8fde\u8fb9\u7684 $ \\infty $ \u53d8\u6210\u8d39\u7528\u5373\u53ef\u3002\n\n\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8fd9\u6837\u505a\uff1f\u672c\u9898\u7b54\u6848\u662f\u603b\u6536\u76ca $ - $ \u6700\u5c0f\u5272\u3002\u8fd9\u6837\u4fee\u6539\u4e4b\u540e\u6700\u5c0f\u5272\u53ef\u80fd\u53d8\u5c0f\uff0c\u53ef\u4ee5\u4fdd\u969c\u7b54\u6848\u6b63\u786e\u6027\uff0c\u53c8\u56e0\u4e3a\u4ed6\u4eec\u4e5f\u662f\u8fde\u8d77\u6765\u7684\u9700\u8981\u8d39\u7528\u4fdd\u8bc1\u8054\u901a\uff0c\u6240\u4ee5\u662f\u6ee1\u8db3\u9898\u610f\u7684\u3002\uff08\u8bf4\u7684\u53ef\u80fd\u4e0d\u592a\u6e05\u695a\uff09\u3002\n\n\u5e38\u89c4\u8fde\u8fb9\u5373\u53ef\u3002\n\n\u6e90\u70b9 $ \\rightarrow $ \u6bcf\u4e2a\u5de5\u4f5c\uff0c\u8fb9\u6743\u4e3a\u5229\u76ca\u3002\n\n\u6bcf\u53f0\u673a\u5668 $ \\rightarrow $ \u6c47\u70b9\uff0c\u8fb9\u6743\u4e3a\u8d2d\u4e70\u8d39\u7528\u3002\n\n\u6bcf\u4e2a\u5de5\u4f5c $ \\rightarrow $ \u6240\u9700\u673a\u5668\uff0c\u8fb9\u6743\u4e3a\u79df\u7528\u7684\u8d39\u7528\u3002\n\nCode\n\n```cpp\n # include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1e6 + 5;\nconst int M = 2e6 + 5;\nconst int inf = 1e9; \n\ntypedef struct {\n\tint x , y , z , next;\n}Node;\nNode edge[M];\nint E = 1 , elast[N];\nint S , T;\n\nvoid add(int x , int y , int z) {\n\tE ++ , edge[E].x = x , edge[E].y = y , edge[E].z = z , edge[E].next = elast[x] , elast[x] = E;\n}\n\nint dis[N] , cnt[N];\nvoid bfs(int start) {\n    queue<int> q;\n    q.push(start);\n    dis[start] = 0;\n    cnt[S] = 1;\n    while (!q.empty()) {\n        int cur = q.front();\n        q.pop();\n        for (int i = elast[cur] ; i ; i = edge[i].next) {\n            int v = edge[i].y;\n            if (dis[v] != -1) continue;\n            dis[v] = dis[cur] + 1;\n            q.push(v);\n            cnt[dis[v]] ++;\n        }\n    }\n}\nint cur[N];\nint dfs(int u , int flow) {\n    if (u == T) return flow;\n    int delta = 0;\n    for (int i = cur[u] ; i ; i = edge[i].next) {\n        cur[u] = i;\n        int v = edge[i].y;\n        if (edge[i].z > 0 && dis[u] == dis[v] + 1) {\n            int temp = dfs(v , min(flow - delta , edge[i].z));\n            edge[i].z -= temp;\n            edge[i ^ 1].z += temp;\n            delta += temp;\n            if (delta == flow) return delta;\n        }\n    }\n    if (dis[S] >= T + 1) return delta;\n    cur[u] = elast[u];\n    if (-- cnt[dis[u]] == 0) dis[S] = T + 1;\n    cnt[++ dis[u]] ++;\n    return delta;\n}\nint Isap() {\n    int ans = 0;\n    memset(cnt , 0 , sizeof cnt);\n    memset(dis , -1 , sizeof dis);\n    bfs(T);\n    for (int i = 0 ; i <= T ; i ++) {\n        cur[i] = elast[i];\n    }\n    while (dis[S] < T + 1) ans += dfs(S , inf);\n    return ans;\n}\n\nint m , n , sum = 0;\nint main() {\n\tcin >> n >> m;\n\tS = 0 , T = n + m + 1;\n\tfor (int i = 1 ; i <= n ; i ++) {\n\t\tint in_Kikyo , step;\n\t\tcin >> in_Kikyo >> step;\n\t\tsum += in_Kikyo;\n\t\tadd(S , i , in_Kikyo) , add(i , S , 0);\n\t\tfor (int j = 1 ; j <= step ; j ++) {\n\t\t\tint used , use;\n\t\t\tcin >> used >> use;\n\t\t\tadd(i , n + used , use) , add(n + used , i , 0);\n\t\t}\n\t}\n\tfor (int i = 1 ; i <= m ; i ++) {\n\t\tint cos;\n\t\tcin >> cos;\n\t\tadd(n + i , T , cos) , add(T , n + i , 0);\n\t}\n\tcout << sum - Isap() << endl;\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1629969167,
        "uid": 335477,
        "name": "ker_xyxyxyx_xxs",
        "ccfLevel": 0,
        "title": "P4177 [CEOI2008]order"
    },
    {
        "content": "[order](https://www.luogu.com.cn/problem/P4177)\n\n\u660e\u663e\u7684\u6700\u5927\u6743\u95ed\u5408\u56fe\uff0c\u552f\u4e00\u6709\u6240\u4e0d\u540c\u7684\u5c31\u53ea\u6709**\u79df**\u8fd9\u79cd~~\u8ff7\u60d1~~\u64cd\u4f5c\u4e86\u3002\n\n**\u9898\u76ee\u5206\u6790**\uff1a \n\n\u91c7\u7528\u6a21\u677f\u5316\u7684\u5efa\u56fe\u65b9\u5f0f\uff1a\n\n- \u9996\u5148\uff0c\u56e0\u4e3a\u7b2c $i$ \u4e2a\u4efb\u52a1\u7684\u6536\u5165\u76f8\u5f53\u4e8e\u6b63\u8fb9\u6743\uff0c\u6240\u4ee5\u8fde\u7531**\u6e90\u70b9** $s$ \u5230\u4efb\u52a1 $i$ \u7684\u5bb9\u91cf\u4e3a**\u6536\u5165** $xi$ \u7684\u6709\u5411\u8fb9\uff1b\n\n- \u7136\u540e\uff0c\u5148\u4e0d\u8003\u8651\u8d2d\u4e70\u64cd\u4f5c\uff0c\u5047\u5b9a**\u53ea\u80fd\u79df**\uff0c\u90a3\u95ee\u9898\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u76f4\u63a5\u8fde\u4e00\u6761\u7531\u4efb\u52a1 $i$ \u5230\u673a\u5668 $b$ \u7684\u5bb9\u91cf\u4e3a\u5176**\u8d39\u7528** $b$ \u7684\u6709\u5411\u8fb9\uff1b\n\n- \u6700\u540e\uff0c\u8003\u8651\u8d2d\u4e70\u64cd\u4f5c\u4f1a\u5bf9\u7ed3\u679c\u4ea7\u751f\u4ec0\u4e48\u5f71\u54cd\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u7b2c $i$ \u53f0\u673a\u5668\u800c\u8a00\uff0c\u5f53\u4e14\u4ec5\u5f53\u524d\u9762\u6240\u6709\u79df\u7528\u7b2c $i$ \u673a\u5668\u4ea7\u751f\u7684\u603b\u8d39\u7528**\u5927\u4e8e**\u8d2d\u4e70\u673a\u5668\u7684\u8d39\u7528 $c$ \u65f6\uff0c\u6211\u4eec\u624d\u4f1a\u9009\u62e9\u8d2d\u4e70\u673a\u5668\u3002\u4e8e\u662f\u5c31\u53ef\u4ee5\u5229\u7528**\u7f51\u7edc\u6d41**\u7684\u7279\u6027\uff0c\u5c06\u7b2c $i$ \u53f0\u673a\u5668\u5411**\u6c47\u70b9** $t$ \u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $c$ \u7684\u6709\u5411\u8fb9\u3002\u56e0\u4e3a\uff0c\u7b2c\u4e00\uff0c\u8d39\u7528\u76f8\u5f53\u4e8e\u8d1f\u6743\uff0c\u5e94\u8be5\u8fde\u5411\u6c47\u70b9\uff1b\u5176\u6b21\uff0c\u8fd9\u6837\u8fde\u8fb9\u53ef\u4ee5\u9650\u5236\u5f53\u524d\u673a\u5668\u7684\u8d39\u7528\uff08\u5982\u679c\u603b\u79df\u91d1\u5c0f\u4e8e\u8d2d\u4e70\u8d39\u7528\uff0c\u9009\u62e9\u79df\uff1b\u5982\u679c\u5927\u4e8e\u4e86\u8d2d\u4e70\u8d39\u7528\uff0c\u5f53\u524d\u8fb9\u7684\u5bb9\u91cf\u4f1a\u9650\u5236\u6d41\u91cf\uff0c\u5c06\u8d39\u7528\u53d8\u4e3a\u8d2d\u4e70\u503c\uff09\u3002\n\n\u6700\u540e\u7b54\u6848\u5c31\u662f\u6240\u6709\u4efb\u52a1\u603b\u6536\u5165\u51cf\u53bb\u6700\u5c0f\u5272\u7684\u503c\u3002\u5269\u4e0b\u7684\u90fd\u662f\u677f\u5b50\u5566~~\n\n\n\n**\u5b8c\u6574\u4ee3\u7801**:\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N = 2420, M = 3e6, inf = 1e9;\nint n,m,s,t,tot = -1,head[N],cur[N],dep[N],f[M],sum,q[M],top,ed;\nstruct node {\n\tint to,nex;\n}e[M];\ninline void add(int x,int y,int w) {\n\te[++tot] = (node) {y,head[x]}, f[tot] = w, head[x] = tot;\n\te[++tot] = (node) {x,head[y]}, head[y] = tot; \n}\ninline bool bfs() {\n\tmemset(dep,-1,sizeof(dep));\n\tdep[s] = 0, cur[s] = head[s], q[top = 1] = s; ed = 1;\n\tint now,ver;\n\twhile(top <= ed) {\n\t\tnow = q[top++];\n\t\tfor(register int i = head[now]; ~i; i = e[i].nex) {\n\t\t\tver = e[i].to;\n\t\t\tif(dep[ver] == -1 && f[i]) {\n\t\t\t\tdep[ver] = dep[now] + 1, cur[ver] = head[ver];\n\t\t\t\tif(ver == t) return 1;\n\t\t\t\tq[++ed] = ver;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\ninline int find(int x,int limit) {\n\tif(x == t) return limit;\n\tint flow = 0, tmp, ver;\n\tfor(register int i = head[x]; ~i && flow < limit; i = e[i].nex) {\n\t\tver = e[i].to;\n\t\tif(dep[ver] == dep[x] + 1 && f[i]) {\n\t\t\ttmp = find(ver,min(limit - flow,f[i]));\n\t\t\tif(!tmp) dep[ver] = -1;\n\t\t\tf[i] -= tmp, f[i ^ 1] += tmp, flow += tmp; \n\t\t}\n\t}\n\treturn flow;\n}\ninline int dinic() {\n\tint res = 0, flow;\n\twhile(bfs()) res += find(s,inf);\n\treturn res;\n}\ninline void read(int &x) {\n\tx = 0;int ff = 1;\n\tchar s = getchar();\n\twhile(s < '0' || s > '9') {\n\t\tif(s == '-') ff = -1;\n\t\ts = getchar();\n\t}\n\twhile(s <= '9' && s >= '0') {x = x * 10 + s - '0', s = getchar(); }\n\tx *= ff;\n}\nsigned main() {\n\tmemset(head,-1,sizeof(head));\n\tread(n), read(m);\n\tint a,b,xi,ti;\n\ts = 0, t = n + m + 1;\n\tfor(register int i = 1; i <= n; i ++) {\n\t\tread(xi), read(ti);\n\t\tsum += xi, add(s,i,xi);\n\t\twhile(ti --) read(a), read(b), add(i,a + n,b);\n\t}\n\tfor(register int i = 1; i <= m; i ++) read(a), add(i + n,t,a);\n\tprintf(\"%d\",sum - dinic());\n\treturn 0;\n} \n```\n",
        "postTime": 1608973209,
        "uid": 140643,
        "name": "crescentic",
        "ccfLevel": 0,
        "title": "P4177 [CEOI2008]order"
    },
    {
        "content": "\u6700\u5c0f\u5272\u3002\n\n\u5982\u679c\u4e0d\u80fd\u79df\u7528\u80af\u5b9a\u5c31\u662f\u6700\u5c0f\u5272\u7684\u88f8\u9898\u3002\n\n\u73b0\u5728\u8003\u8651\u79df\u7528\u3002\n\n\u79df\u7528\u5c31\u662f\u53ea\u53ef\u4ee5\u5728\u8fd9\u4e00\u4e2a\u4efb\u52a1\u4e0a\u4f7f\u7528\u8fd9\u53f0\u673a\u5668\uff0c\u4e0d\u5f71\u54cd\u5176\u4ed6\u4efb\u52a1\uff1b\u6362\u8a00\u4e4b\u5c31\u662f\u53ea\u4f1a\u5f71\u54cd\u8fd9\u4e00\u4e2a\u4efb\u52a1\u4e0e\u8fd9\u4e00\u53f0\u673a\u5668\u4e4b\u95f4\u7684s-t\u8054\u901a\u5173\u7cfb\u3002\n\n\u8003\u8651\u5230\u4e4b\u524d\u4e0d\u80fd\u79df\u7528\u7684\u6a21\u578b\uff0c\u4efb\u52a1\u4e0e\u673a\u5668\u4e4b\u95f4\u7684\u8fde\u8fb9\u662fINF\uff0c\u73b0\u5728\u66f4\u6539\u6210\u79df\u7528\u8d39\u7528\u5373\u53ef\u3002\n\n\u4ee3\u7801\n\n```\n#define inf (1<<30)\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#define M 5000000\n#include<queue>\n#define N 5000\nusing namespace std;\nint head[N],to[M],Next[M],cup[M],e=1;\nvoid buid(int u,int v,int c)\n{\n\tNext[++e]=head[u];head[u]=e;to[e]=v;cup[e]=c;\n\tNext[++e]=head[v];head[v]=e;to[e]=u;cup[e]=0;\n}\nint itc[N],ans,use[N],n,m,s,t;\nqueue<int> q;\nbool bfs()\n{\n\tmemset(itc,0,sizeof(itc));\n\titc[s]=1;q.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint now=q.front();q.pop();\n\t\tfor(int i=head[now];i;i=Next[i])\n\t\t{\n\t\t\tif(!cup[i]) continue;\n\t\t\tint j=to[i];\n\t\t\tif(!itc[j]) itc[j]=itc[now]+1,q.push(j);\n\t\t}\n\t}\n\treturn itc[t];\n}\nint doit(int now,int want)\n{\n\tif(now==t||!want) return want;\n\tint get=0;\n\tfor(int i=use[now];i;i=Next[i],use[now]=i)\n\t{\n\t\tint j=to[i];\n\t\tif(itc[j]!=itc[now]+1) continue;\n\t\tint f=doit(j,min(want,cup[i]));\n\t\twant-=f;get+=f;\n\t\tcup[i]-=f;cup[i^1]+=f;\n\t\tif(!want) return get;\n\t}\n\treturn get;\n}\nvoid max_flow()\n{\n\twhile(bfs())\n\t{\n\t\tfor(int i=s;i<=t;++i) use[i]=head[i];\n\t\tans-=doit(s,inf);\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);t=n+m+1;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tint f,m;scanf(\"%d%d\",&f,&m);ans+=f;\n\t\tbuid(s,i,f);\n\t\tfor(int j=1;j<=m;++j)\n\t\t{\n\t\t\tint id,z;scanf(\"%d%d\",&id,&z);\n\t\t\tbuid(i,id+n,z);\n\t\t}\n\t}\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint f;scanf(\"%d\",&f);\n\t\tbuid(n+i,t,f);\n\t}\n\tmax_flow();\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1517465816,
        "uid": 35718,
        "name": "MloVtry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4177 \u3010[CEOI2008]order\u3011"
    },
    {
        "content": "**\u672c\u9898\u7f3a\u5c11 $\\sum t_i$ \u7684\u8303\u56f4\uff0c\u5fc5\u987b\u4eba\u8089\u4e8c\u5206\u6570\u7ec4\u5927\u5c0f\u624d\u80fd\u901a\u8fc7\uff0c\u5efa\u8bae\u7ba1\u7406\u5458\u52a0\u4e0a**\u3002\n\n\u6700\u5c0f\u5272\u7ecf\u5178\u9898\u3002\n\n\u9996\u5148\u4e0d\u8003\u8651\u79df\u7528\uff0c\u53ea\u8003\u8651\u8d2d\u4e70\u673a\u5668\u3002\u6700\u5927\u6d41\u663e\u7136\u662f\u51c9\u4e86\uff0c\u6240\u4ee5\u8003\u8651\u6700\u5c0f\u5272\u3002\u6211\u4eec\u9700\u8981\u6784\u9020\u4e00\u4e2a\u56fe\uff0c\u5982\u679c\u8868\u793a\u83b7\u5f97\u8fd9\u4e2a\u4efb\u52a1\u6536\u76ca\u7684\u8fb9\u548c\u8868\u793a\u8d2d\u4e70\u6240\u9700\u8981\u7684\u673a\u5668\u7684\u8fb9\u90fd\u6ca1\u6709\u5272\u6389\uff0c\u90a3\u4e48 $s,t$ \u8fde\u901a\uff08$s$ \u4e3a\u6e90\u70b9\uff0c$t$ \u4e3a\u6c47\u70b9\uff09\u3002\n\n\u90a3\u4e48\u4ece\u6e90\u70b9 $s$ \u5411\u8fd9\u4e9b\u673a\u5668\u8fde\u8fb9\u6743\u4e3a\u8d2d\u4e70\u8fd9\u4e2a\u673a\u5668\u6240\u9700\u7684\u8d39\u7528\u7684\u8fb9\uff0c\u4ece\u673a\u5668\u5411\u4e00\u4e2a\u4efb\u52a1\u8fde\u8fb9\u6743\u4e3a INF \u7684\u8fb9\uff0c\u4ece\u4efb\u52a1\u5411\u6c47\u70b9 $t$ \u8fde\u4e00\u6761\u8fb9\u6743\u4e3a\u8fd9\u4e2a\u4efb\u52a1\u7684\u6536\u76ca\u7684\u8fb9\u3002\n\n~~\u5176\u5b9e\u4ee5\u4e0a\u662f\u5b8c\u5168\u6309\u7167 [P4313 \u6587\u7406\u5206\u79d1](https://www.luogu.com.cn/problem/P4313) \u7684\u5957\u8def\u8fde\u7684\u8fb9\uff08\uff08\uff08~~\n\n\u8003\u8651\u79df\u7528\u3002\u5982\u679c\u79df\u7528\u4e86\u673a\u5668\u6211\u5c31\u4e0d\u7528\u4e70\u673a\u5668\u4e5f\u80fd\u83b7\u5f97\u4efb\u52a1\u7684\u53d7\u76ca\u4e86\uff0c\u6240\u4ee5\u673a\u5668\u5411\u4efb\u52a1\u8fde\u7684\u8fb9\u5e76\u4e0d\u662f\u4e0d\u53ef\u4ee5\u5272\u6389\u7684\uff0c\u8fb9\u6743\u5e94\u8be5\u4e3a\u8fd9\u4e2a\u4efb\u52a1\u79df\u7528\u8fd9\u53f0\u673a\u5668\u7684\u8d39\u7528\u3002\n\n\u7136\u540e\u5c31\u5b8c\u7f8e\u89e3\u51b3\u4e86\u3002\u6570\u7ec4\u5f00\u4e09\u767e\u4e07\u80fd\u8fc7\u3002\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cstring>\n\nconst int INF = 1e9;\ninline int min(const int x, const int y) {return x < y ? x : y;}\nstruct Edge {\n\tint to, nxt, cap;\n} e[3000005];\nint head[10005], dep[10005], cur[10005], num[10005], tot = 1, s, t, n, m;\nstd::queue<int> Q;\ninline void AddEdge(const int u, const int v, const int cap) {\n\te[++ tot].to = v, e[tot].cap = cap, e[tot].nxt = head[u], head[u] = tot;\n\te[++ tot].to = u, e[tot].cap = 0, e[tot].nxt = head[v], head[v] = tot;\n}\n\nvoid bfs() {\n\tmemcpy(cur, head, sizeof cur);\n\tnum[dep[t] = 1] = 1;\n\tQ.push(t);\n\twhile (Q.size()) {\n\t\tint u = Q.front();\n\t\tQ.pop();\n\t\tfor (int i = head[u]; i; i = e[i].nxt)\n\t\t\tif (!dep[e[i].to]) ++ num[dep[e[i].to] = dep[u] + 1], Q.push(e[i].to);\n\t\t\n\t}\n}\nint dfs(const int u, const int flow) {\n\tif (u == t) return flow;\n\tint used = 0, tmp = 0;\n\tfor (int i = cur[u]; i; i = e[i].nxt) {\n\t\tcur[u] = i;\n\t\tif (e[i].cap && dep[u] - 1 == dep[e[i].to]) {\n\t\t\ttmp = dfs(e[i].to, min(e[i].cap, flow - used));\n\t\t\tused += tmp, e[i].cap -= tmp, e[i ^ 1].cap += tmp;\n\t\t\tif (used == flow) return used;\n\t\t}\n\t}\n\tcur[u] = head[u];\n\tif (!(-- num[dep[u]])) dep[s] = n + m + 2;\n\t++ num[++ dep[u]];\n\treturn used;\n}\n\nint ISAP() {\n\tint Maxflow = 0;\n\tbfs();\n\twhile (dep[s] <= n + m + 1) Maxflow += dfs(s, INF);\n\treturn Maxflow;\n}\n\nint main() {\n\tint ans = 0;\n\tscanf(\"%d%d\", &n, &m);\n\ts = 0, t = n + m + 1;\n\tfor (int i = 1; i <= n; ++ i) {\n\t\tint x, T;\n\t\tscanf(\"%d%d\", &x, &T);\n\t\tans += x;\n\t\tAddEdge(i + m, t, x);\n\t\twhile (T --) {\n\t\t\tint a, b;\n\t\t\tscanf(\"%d%d\", &a, &b);\n\t\t\tAddEdge(a, i + m, b);\n\t\t}\n\t}\n\tfor (int i = 1; i <= m; ++ i) {\n\t\tint x;\n\t\tscanf(\"%d\", &x);\n\t\tAddEdge(s, i, x);\n\t}\n\tprintf(\"%d\\n\", ans - ISAP());\n\treturn 0;\n}\n```",
        "postTime": 1620739143,
        "uid": 361308,
        "name": "Stinger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 \u3010P4177 [CEOI2008]order\u3011"
    },
    {
        "content": "\u5982\u679c\u6ca1\u6709\u79df\u7528\u673a\u5668\u8fd9\u4e00\u64cd\u4f5c\uff0c\u505a\u6cd5\u540c [P2762 \u592a\u7a7a\u98de\u884c\u8ba1\u5212\u95ee\u9898](https://www.luogu.com.cn/problem/P2762)\uff0c\u7528\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u6a21\u578b\u89e3\u51b3\u3002\n\n\u8003\u8651\u5982\u4f55\u5728\u7ecf\u5178\u65b9\u6cd5\u6784\u9020\u7684\u65b0\u56fe\u4e2d\u4f53\u73b0\u79df\u7528\u673a\u5668\u8fd9\u4e00\u64cd\u4f5c\u3002\n\n\u65b0\u56fe\u4e2d\u5bf9\u4e8e\u5de5\u4f5c\u548c\u5b83\u6240\u9700\u7684\u673a\u5668\u4e4b\u95f4\u7684\u5bb9\u91cf\u4e3a $+\\infty$ , \u610f\u4e49\u5373\u4e3a\u9009\u62e9\u8fd9\u4e2a\u5de5\u4f5c\u5c31**\u5fc5\u987b\u8d2d\u4e70**\u8fd9\u4e2a\u673a\u5668\u3002\n\n\u90a3\u4e48 \u2018\u79df\u7528\u2019 \u5c31\u53ef\u4ee5\u5c06\u8fd9\u6761\u8fb9\u7684\u5bb9\u91cf\u6539\u4e3a $b_{ij}$ , \u8868\u793a\u9009\u62e9\u8fd9\u4e2a\u5de5\u4f5c\u540e\uff0c\u53ef\u4ee5\u82b1\u8d39 $b_{i,j}$ \u7684\u4ee3\u4ef7\u4ee3\u66ff\u8d2d\u4e70\u673a\u5668\u3002\n\n\u5176\u5b83\u7684\u4ecd\u540c\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u6a21\u578b\u3002\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define Inf 0x3f3f3f3f\n\nconst int MAXN = 2400 , MAXM = MAXN * ( MAXN + 1 );\nstruct Edge {\n    int v , flw , nxt;\n    Edge(){}\n    Edge( int V , int Flw , int Nxt ) { v = V , flw = Flw , nxt = Nxt; }\n}Graph[ 2 * MAXM + 5 ];\nint Head[ MAXN + 5 ] , Enum = 1;\nvoid Add_Edge( int u , int v , int flw ) {\n    Graph[ ++ Enum ] = Edge( v , flw , Head[ u ] ); Head[ u ] = Enum;\n    Graph[ ++ Enum ] = Edge( u , 0   , Head[ v ] ); Head[ v ] = Enum;\n}\nint cur[ MAXN + 5 ] , lev[ MAXN + 5 ];\nbool Layer( int S , int T ) {\n    memcpy( cur , Head , sizeof( Head ) );\n    memset( lev , -1 , sizeof( lev ) );\n    queue< int > Que;\n    lev[ S ] = 0 , Que.push( S );\n    while( !Que.empty() ) {\n        int u = Que.front(); Que.pop();\n        for( int i = Head[ u ] ; i ; i = Graph[ i ].nxt ) {\n            int v = Graph[ i ].v , flw = Graph[ i ].flw;\n            if( flw && lev[ v ] == -1 )\n                lev[ v ] = lev[ u ] + 1 , Que.push( v );\n        }\n    }\n    return lev[ T ] != -1;\n}\nint dfs( int u , int t , int f ) {\n    if( u == t ) return f;\n    for( int &i = cur[ u ] ; i ; i = Graph[ i ].nxt ) {\n        int v = Graph[ i ].v , flw = Graph[ i ].flw;\n        if( flw && lev[ v ] == lev[ u ] + 1 ) {\n            int d = dfs( v , t , min( f , flw ) );\n            if( d ) {\n                Graph[ i ].flw -= d , Graph[ i ^ 1 ].flw += d;\n                return d;\n            }\n        }\n    }\n    return 0;\n}\nint Dinic( int S , int T ) {\n    int Mxf = 0;\n    while( Layer( S , T ) ) for( int fl = 0 ; ( fl = dfs( S , T , Inf ) ) > 0 ; Mxf += fl );\n    return Mxf;\n}\n\nint n , m , s , t , val[ MAXN + 5 ];\n\nint main( ) {\n    scanf(\"%d %d\",&m,&n); s = n + m + 1,  t = s + 1;\n    for( int i = 1 , p ; i <= m ; i ++ ) {\n        scanf(\"%d %d\",&val[ n + i ],&p);\n        for( int j = 1 , id , ct ; j <= p ;j ++ ) {\n            scanf(\"%d %d\",&id,&ct);\n            Add_Edge( n + i , id , ct );\n        }\n    }\n    for( int i = 1 ; i <= n ; i ++ ) scanf(\"%d\",&val[ i ]) , val[ i ] *= -1;\n\n    int all = 0;\n    for( int i = 1 ; i <= n + m ; i ++ ) {\n        if( val[ i ] > 0 ) Add_Edge( s , i , val[ i ] ) , all += val[ i ];\n        if( val[ i ] < 0 ) Add_Edge( i , t , -val[ i ] );\n    }\n    printf(\"%d\\n\", all - Dinic( s , t ) );\n    return 0;\n}\n```",
        "postTime": 1608952154,
        "uid": 123802,
        "name": "chihik",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4177 \u3010[CEOI2008]order\u3011"
    },
    {
        "content": "### P.S.\n\u8fd9\u9898\u8fd8\u7b97\u6bd4\u8f83\u6e05\u65b0\uff0c\u6bd5\u7adf\u662f\u4e2a\u4e0d\u9700\u8981\u62c6\u70b9\u7684\u7f51\u7edc\u6d41\u3002  \n\u6bd5\u7adf\u6211\u8fd9\u4e2a\u4e0d\u4f1a\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u7684\u83dc\u9e21\u90fd\u80fd\u6784\u9020\u51fa\u6765\u5efa\u56fe\u65b9\u5f0f\u3002\n### Description.\n\u4f60\u9700\u8981\u5b8c\u6210\u5f88\u591a\u4e2a\u5de5\u4f5c\uff0c\u6bcf\u4e2a\u5de5\u4f5c\u9700\u8981\u4e00\u4e9b\u673a\u5668\uff0c\u5b8c\u6210\u540e\u4f1a\u5f97\u5230\u4e00\u5b9a\u7684\u6536\u76ca\u3002  \n\u5bf9\u4e8e\u6bcf\u4e2a\u673a\u5668\uff0c\u4f60\u53ef\u4ee5\u4e70\u4e0b\u5b83\uff0c\u662f\u6c38\u4e45\u7684\uff0c\u9700\u8981\u4e00\u5b9a\u7684\u4ee3\u4ef7\u3002  \n\u5bf9\u4e8e\u6bcf\u4e2a\u673a\u5668\uff0c\u5728\u6bcf\u4e2a\u5de5\u4f5c\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4e00\u6b21\u6027\u5730\u79df\u7528\u8fd9\u4e2a\u673a\u5668\uff0c\u9700\u8981\u4e00\u5b9a\u7684\u4ee3\u4ef7\u3002  \n\n### Solution.\n\u7b14\u8005\u521a\u5f00\u59cb\u770b\u5230\u8fd9\u9898\u7684\u65f6\u5019\u5e76\u6ca1\u6709\u60f3\u5230\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\uff0c\u4f46\u662f\u4e00\u6837\u505a\u51fa\u6765\u4e86\u3002  \n~~\u867d\u7136\u4e8b\u540e\u53d1\u73b0\u8fd9\u4e2a\u601d\u8def\u5c31\u662f\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u3002~~  \n\u9996\u5148\uff0c\u6211\u4eec\u8d2a\u5fc3\u5730\u5047\u8bbe\u6211\u4eec\u80fd\u5b8c\u6210\u6240\u6709\u5de5\u4f5c\u5e76\u4e0d\u82b1\u8d39\u4efb\u4f55\u4ee3\u4ef7 ~~\uff0c\u505a\u68a6~~\u3002  \n\u7136\u540e\uff0c\u6211\u4eec\u6b64\u65f6\u6709\u4e09\u79cd\u9009\u62e9\uff0c\u5982\u4e0b\uff1a\n1. \u6211\u4eec\u53ef\u4ee5\u653e\u5f03\u4e00\u4e2a\u5de5\u4f5c\u4e0d\u5b8c\u6210\u3002\n2. \u6211\u4eec\u53ef\u4ee5\u5728\u5b8c\u6210\u4e00\u4e2a\u5de5\u4f5c\u7684\u524d\u63d0\u4e0b\u653e\u5f03\u8d2d\u4e70\u673a\u5668\uff08\u79df\u7528\n3. \u6211\u4eec\u53ef\u4ee5\u5728\u5b8c\u6210\u4e00\u4e2a\u5de5\u4f5c\u7684\u524d\u63d0\u4e0b\u9009\u62e9\u8d2d\u4e70\u673a\u5668\u3002\n\n\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u6700\u5c0f\u5272\u4e86\u3002  \n\u6211\u4eec\u9700\u8981\u6784\u9020\u51fa\u4e00\u4e2a\u56fe\u6ee1\u8db3\u4e0a\u9762\u7684\u4e09\u79cd\u5272\u8fb9\u65b9\u5f0f\u3002  \n\u5177\u4f53\u6784\u9020\u8fc7\u7a0b\u8fd9\u91cc\u5c31\u4e0d\u5177\u4f53\u5c55\u5f00\u4e86\uff0c\u5c55\u793a\u4e00\u4e0b\u7b14\u8005\u6784\u9020\u7684\u7ed3\u679c\uff0c\u5982\u4e0b\uff1a  \n1. \u4ece\u6e90\u70b9\u5411\u6bcf\u4e2a\u5de5\u4f5c\u8fde\u8fb9\uff0c\u6743\u503c\u4e3a\u8fd9\u4e2a\u5de5\u4f5c\u7684\u6536\u76ca\u3002\n2. \u4ece\u6bcf\u4e2a\u5de5\u4f5c\u5411\u6bcf\u4e2a\u5de5\u4f5c\u6240\u9700\u673a\u5668\u8fde\u8fb9\uff0c\u6743\u503c\u4e3a\u79df\u7528\u8fd9\u4e2a\u673a\u5668\u7684\u4ee3\u4ef7\u3002\n3. \u4ece\u6bcf\u4e2a\u673a\u5668\u5411\u6c47\u70b9\u8fde\u8fb9\uff0c\u6743\u503c\u4e3a\u8fd9\u4e2a\u8d2d\u4e70\u8fd9\u4e2a\u673a\u5668\u7684\u4ef7\u683c\u3002\n\n~~\u611f\u6027\u7406\u89e3~~\u5177\u4f53\u5206\u6790\u4e00\u4e0b\u5c31\u77e5\u9053\u5272\u53bb\u4e0b\u9762\u7684\u8fb9\u5206\u522b\u5bf9\u5e94\u4e0a\u9762\u7684\u9009\u62e9\u3002  \n\u7136\u540e\u5957\u4e00\u4e2a dinic \u677f\u5b50\u5c31\u597d\u4e86\uff0c\u8fd8\u633a\u6e05\u65b0\u7684qwq\u3002  \n\n### Coding.\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;const int INF=1e9;\ntemplate<typename T>inline void read(T &x)\n{\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<'0'||c>'9';c=getchar()) if(c=='-') f=1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tif(f) x=-x;\n}\nstruct edge{int to,w,nxt;}e[5000005];\nint n,m,s,t,sm,et,head[5005],cur[5005],d[5005];\ninline void ADDE(int x,int y,int w) {e[++et]=(edge){y,w,head[x]},head[x]=et;}\ninline void adde(int x,int y,int w) {ADDE(x,y,w),ADDE(y,x,0);}\ninline char bfs(int s,int t)\n{\n\tqueue<int>q;q.push(s),memset(d,0,sizeof(d)),d[s]=1;\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=head[x];i;i=e[i].nxt) if(e[i].w&&!d[e[i].to]) d[e[i].to]=d[x]+1,q.push(e[i].to);\n\t}\n\treturn !!d[t];\n}\n#define rev(x) ((((x)&1)?1:-1)+(x))\ninline int dfs(int x,int t,int lim=INF)\n{\n\tint f=lim;if(x==t) return lim;\n\tfor(int i=cur[x];i;cur[x]=i=e[i].nxt) if(d[e[i].to]==d[x]+1&&e[i].w)\n\t{\n\t\tint g=dfs(e[i].to,t,min(f,e[i].w));f-=g;\n\t\te[i].w-=g,e[rev(i)].w+=g;if(!f) break;\n\t}\n\treturn lim-f;\n}\ninline int dinic(int s,int t) {int r=0;while(bfs(s,t)) memcpy(cur,head,sizeof(cur)),r+=dfs(s,t);return r;}\n//\u4e0a\u9762\u5168\u90fd\u662fdinic\u677f\u5b50\uff0c\u770b\u4e0d\u61c2\u8bf7\u81ea\u5b66\u7f51\u7edc\u6d41\nint main()\n{//\u4e3b\u7a0b\u5e8f\u5982\u679c\u770b\u4e0d\u61c2\u770b\u4e0a\u9762\u7684\u5efa\u56fe\u65b9\u5f0f\n\tread(n),read(m),s=n+m+1,t=s+1;//\u6e90\u70b9\u6c47\u70b9\n\tfor(int i=1,q,c,x,y;i<=n;i++)\n\t{\n\t\tread(c),read(q),adde(s,i,c),sm+=c;\n\t\twhile(q--) read(x),read(y),adde(i,x+n,y);\n\t}\n\tfor(int i=1,w;i<=m;i++) read(w),adde(i+n,t,w);\n\treturn printf(\"%d\\n\",sm-dinic(s,t)),0;\n}\n```",
        "postTime": 1602856712,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "P4177[CEOI2008]order\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "\u8fdb\u884c\u5206\u6790\u540e\uff0c\u53d1\u73b0\u6700\u5927\u6536\u76ca\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6700\u5c0f\u4ee3\u4ef7\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u7528\u6700\u5c0f\u5272\u6765\u89e3\u51b3\u8fd9\u9053\u9898\u3002\n\n\u5148\u7b97\u51fa\u603b\u6536\u76ca$sum$\uff0c\u603b\u6536\u76ca\u51cf\u53bb\u6700\u5c0f\u4ee3\u4ef7\u5373\u4e3a\u7b54\u6848\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u5efa\u56fe\uff0c\u5982\u4f55\u5efa\u7acb\u6700\u5c0f\u5272\u7684\u6a21\u578b\u3002\n\n\u53d1\u73b0\u4e00\u4e2a\u4efb\u52a1\u6700\u7ec8\u7684\u5904\u7406\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\u2460 \u4e0d\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u652f\u4ed8$val$\u7684\u4ee3\u4ef7\u3002\n\n\u2461 \u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\uff0c\u82e5\u4efb\u52a1\u4e2d\u67d0\u4e2a\u5de5\u5e8f\u7528\u79df\u7684\u65b9\u5f0f\u6765\u89e3\u51b3\uff0c\u5219\u9700\u8981\u652f\u4ed8\u5176\u79df\u91d1\u7684\u4ee3\u4ef7\uff0c\u82e5\u7528\u4e70\u7684\u65b9\u5f0f\u6765\u89e3\u51b3\uff0c\u5219\u9700\u8981\u652f\u4ed8\u5176\u8d2d\u4e70\u8d39\u7528\u7684\u4ee3\u4ef7\uff0c\u4e14\u4ee5\u540e\u53ef\u4ee5\u4f7f\u7528\u8fd9\u53f0\u673a\u5668\u3002\n\n\u90a3\u4e48\u6700\u5c0f\u5272\u7684\u6a21\u578b\u5c31\u53ef\u4ee5\u5efa\u7acb\u4e86\u3002\n\n\u4ece\u6e90\u70b9$S$\u5411\u6bcf\u4e2a\u4efb\u52a1\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u6536\u76ca$val$\uff0c\u5272\u8fb9\u8868\u793a\u4e0d\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u3002\n\n\u4ece\u6bcf\u4e2a\u4efb\u52a1\u5411\u5176\u6240\u5bf9\u5e94\u7684\u673a\u5668\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u79df\u91d1\uff0c\u5272\u8fb9\u8868\u793a\u79df\u673a\u5668\u6765\u5b8c\u6210\u5de5\u5e8f\u3002\n\n\u4ece\u6bcf\u4e2a\u673a\u5668\u5411\u6c47\u70b9$T$\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u8d2d\u4e70\u7684\u8d39\u7528\uff0c\u5272\u8fb9\u8868\u793a\u8d2d\u4e70\u673a\u5668\u3002\n\n\u8fb9\u7684\u6570\u7ec4\u8bb0\u5f97\u5f00\u5927\uff0c\u5b9e\u73b0\u7ec6\u8282\u5c31\u770b\u4ee3\u7801\u5427\u3002\n\n$code:$\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 3000010\n#define inf 200000000\nusing namespace std;\ntemplate<typename T> inline void read(T &x)\n{\n\tx=0;char c=getchar();bool flag=false;\n\twhile(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n\twhile(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n\tif(flag)x=-x;\n}\nint n,m,s,t,sum;\nstruct edge\n{\n    int to,nxt,v;\n}e[maxn];\nint head[maxn],edge_cnt=1;\nvoid add(int from,int to,int val)\n{\n    e[++edge_cnt]=(edge){to,head[from],val};\n    head[from]=edge_cnt;\n    e[++edge_cnt]=(edge){from,head[to],0};\n    head[to]=edge_cnt;\n}\nint d[maxn],cur[maxn];\nbool bfs()\n{\n    for(int i=s;i<=t;++i) cur[i]=head[i];\n    memset(d,0,sizeof(d));\n    d[s]=1;\n    queue<int> q;\n    q.push(s);\n    while(!q.empty())\n    {\n        int x=q.front();\n        q.pop();\n        for(int i=head[x];i;i=e[i].nxt)\n        {\n            int y=e[i].to,v=e[i].v;\n            if(d[y]||!v) continue;\n            d[y]=d[x]+1;\n            q.push(y);\n        }\n    }\n    return d[t];\n}\nint dfs(int x,int lim)\n{\n    if(x==t) return lim;\n    int flow,res=lim;\n    for(int &i=cur[x];i;i=e[i].nxt)\n    {\n        int y=e[i].to,v=e[i].v;\n        if(d[y]!=d[x]+1||!v) continue;\n        if(flow=dfs(y,min(res,v)))\n        {\n            res-=flow;\n            e[i].v-=flow;\n            e[i^1].v+=flow;\n            if(!res) break;\n        }\n    }\n    return lim-res;\n}\nint dinic()\n{\n    int ans=0,flow;\n    while(bfs())\n        while(flow=dfs(s,inf))\n            ans+=flow;\n    return ans;\n}\nint main()\n{\n    read(n),read(m),t=n+m+1;\n    for(int i=1;i<=n;++i)\n    {\n        int val,k;\n        read(val),read(k);\n        sum+=val,add(s,i,val);\n        for(int j=1;j<=k;++j)\n        {\n            int num,cost;\n            read(num),read(cost);\n            add(i,n+num,cost);\n        }\n    }\n    for(int i=1;i<=m;++i)\n    {\n        int cost;\n        read(cost);\n        add(n+i,t,cost);\n    }\n    printf(\"%d\",sum-dinic());\n\treturn 0;\n}\n```\n",
        "postTime": 1578126002,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4177 \u3010[CEOI2008]order\u3011"
    },
    {
        "content": "[\u6b64\u9898\u535a\u5ba2\u4f20\u9001\u95e8qwq](https://www.cnblogs.com/LLTYYC/p/10764319.html)\n\n\u597d\u50cf\u5e76\u4e0d\u9700\u8981\u4f1a\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u4e5f\u80fd\u505a\n\n\u7b54\u6848\u7b49\u4e8e\u603b\u5de5\u4f5c\u4ef7\u503c\u51cf\u53bb\u6700\u5c0f\u5931\u53bb\u7684\u4ef7\u503c\n\n\u8003\u8651\u6784\u5efa\u6700\u5c0f\u5272\u6a21\u578b\n\n\u5728 $S$\u5272 \u7684\u70b9\u8868\u793a\u9009\uff0c\u5728 $T$\u5272 \u7684\u70b9\u8868\u793a\u4e0d\u9009\n\n\u4e0d\u61c2 $S$\u5272 \u548c $T$\u5272 \u7684\u8bf7\u770b[\u8fd9\u91cc](https://www.cnblogs.com/LLTYYC/p/10763685.html)qwq\n\n\u5bf9\u4e8e\u673a\u5668\uff08\u7f16\u53f7\u4ece $n+1$ \u5230 $n+m$\uff09 $n+i$\uff0c\u8fde\u8fb9 $(n+i,T,cost)$ \u8868\u793a\u9009\u7684\u4ee3\u4ef7\n\n\u5373\u5982\u679c\u6b64\u8fb9\u6ee1\u6d41\u8868\u793a\u6b64\u673a\u5668\u5728 $S$\u5272\uff0c\u8868\u793a\u9009\u4e86\uff0c\u4ee3\u4ef7\u5c31\u662f $cost$\n\n\u5bf9\u4e8e\u5de5\u4f5c $i$\uff0c\u8fde\u8fb9 $(S,i,money)$ \u5982\u679c\u6b64\u8fb9\u6ee1\u6d41\u8868\u793a\u6b64\u5de5\u4f5c\u5728 $T$\u5272\uff0c\u5931\u53bb\u7684\u4ef7\u503c\u4e3a $money$\uff0c\u8868\u793a\u4e0d\u9009\u7684\u4ee3\u4ef7\n\n\u5bf9\u4e8e\u5de5\u4f5c $i$ \u9700\u8981\u5de5\u5e8f $n+j$\uff0c\u8fde\u8fb9 $(i,n+j,once)$ \u8868\u793a\u5982\u679c\u9009\u62e9\u5de5\u4f5c $i$\uff08\u5728 $S$\u5272\uff09\uff0c\u4e0d\u9009\u62e9\u673a\u5668 $j$\uff08\u5728 $T$\u5272\uff09\uff0c\u4ea7\u751f\u7684\u4ee3\u4ef7\u3002\n\n\u56e0\u4e3a\u6bcf\u4e2a\u673a\u5668\u548c\u5de5\u4f5c\u90fd\u8981\u786e\u5b9a\u9009\u6216\u8005\u4e0d\u9009\uff0c\u6240\u4ee5\u56fe\u4e00\u5b9a\u8981\u5206\u51fa $S$\u5272 \u548c $T$\u5272\n\n\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u603b\u5de5\u4f5c\u4ef7\u503c\u51cf\u6700\u5c0f\u5272\n\n\u5982\u679c\u4f60 $TLE$ \u6216\u8005 $RE$ \u4e86\uff0c\u8bf7\u6ce8\u610f\u8fb9\u6570\u8981\u5f00\u5927...\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<queue>\nusing namespace std;\ntypedef long long ll;\ninline int read()\n{\n    int x=0,f=1; char ch=getchar();\n    while(ch<'0'||ch>'9') { if(ch=='-') f=-1; ch=getchar(); }\n    while(ch>='0'&&ch<='9') { x=(x<<1)+(x<<3)+(ch^48); ch=getchar(); }\n    return x*f;\n}\nconst int N=1e5+7,M=4e6+7,INF=1e9+7;\nint fir[N],from[M],to[M],val[M],cntt=1;\ninline void add(int a,int b,int c)\n{\n    from[++cntt]=fir[a]; fir[a]=cntt;\n    to[cntt]=b; val[cntt]=c;\n    from[++cntt]=fir[b]; fir[b]=cntt;\n    to[cntt]=a; val[cntt]=0;\n}\nint dep[N],Fir[N],S,T;\nqueue <int> q;\nbool BFS()\n{\n    for(int i=S;i<=T;i++) Fir[i]=fir[i],dep[i]=0;\n    q.push(S); dep[S]=1; int x;\n    while(!q.empty())\n    {\n        x=q.front(); q.pop();\n        for(int i=fir[x];i;i=from[i])\n        {\n            int &v=to[i]; if(dep[v]||!val[i]) continue;\n            dep[v]=dep[x]+1; q.push(v);\n        }\n    }\n    return dep[T]>0;\n}\nint DFS(int x,int mxf)\n{\n    if(x==T||!mxf) return mxf;\n    int fl=0,res;\n    for(int &i=Fir[x];i;i=from[i])\n    {\n        int &v=to[i]; if(dep[v]!=dep[x]+1||!val[i]) continue;\n        if( res=DFS(v,min(mxf,val[i])) )\n        {\n            mxf-=res; fl+=res;\n            val[i]-=res; val[i^1]+=res;\n            if(!mxf) break;\n        }\n    }\n    return fl;\n}\ninline int Dinic() { int res=0; while(BFS()) res+=DFS(S,INF); return res; }\n\nint n,m,ans;\nint main()\n{\n    n=read(),m=read();\n    S=0,T=n+m+1;\n    int v,t,a,c;\n    for(int i=1;i<=n;i++)\n    {\n        v=read(),t=read(); add(S,i,v); ans+=v;\n        for(int j=1;j<=t;j++)\n        {\n            a=read(),c=read();\n            add(i,n+a,c);\n        }\n    }\n    for(int i=1;i<=m;i++) add(n+i,T,read());\n    printf(\"%d\",ans-Dinic());\n    return 0;\n}\n```\n",
        "postTime": 1556103816,
        "uid": 34274,
        "name": "javalyc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4177 \u3010[CEOI2008]order\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4177)\n\n### \u524d\u8a00\n\n\u6b64\u9898\u662f\u4e00\u9053\u5f88\u663e\u7136\u7684\u6700\u5c0f\u5272\u9898\u76ee\uff0c\u4f46\u662f\u8fd9\u9898\u5bf9\u6700\u5927\u6d41\u6a21\u677f\u5361\u7684\u6bd4\u8f83\u4e25\uff0c\u6709\u4e00\u4e9b\u4e0d\u591f\u4f18\u79c0\u7684\u6a21\u677f\u4f1a **TLE**\uff08\u8c03\u4e864\u4e2a\u591a\u5c0f\u65f6\u7684\u75db\uff09\u3002\u4f46\u662f\u4ece\u53e6\u4e00\u4e2a\u89d2\u5ea6\u770b\uff0c\u8c03\u6a21\u677f\u672a\u5fc5\u4e0d\u662f\u4e00\u4ef6\u597d\u4e8b\uff08\u81f3\u5c11\u6211\u8c03\u5b8c\u4e4b\u540e\u4e0d\u53ef\u80fd\u4f1a\u518d\u6b21\u51fa\u95ee\u9898\u4e86\uff09\u3002\u56e0\u6b64\uff0c\u672c\u9898\u53ea\u7ed9**\u5efa\u56fe**\u90e8\u5206\u7684\u4ee3\u7801\u3002\n\n\n\n------------\n\n\n### $ \\mathcal{Solution} $\uff1a\n\n\u770b\u5230\u9898\u76ee\uff0c\u80af\u5b9a\u4f1a\u5148\u60f3\u5230\u76f4\u63a5\u8dd1\u6700\u5927\u6d41\uff0c\u4f46\u662f\u90a3\u6837\u7684\u8bdd\u6211\u4eec\u65e0\u6cd5\u5224\u65ad\u6b64\u5de5\u5e8f\u9700\u8981\u7684\u6240\u6709\u673a\u5668\u662f\u5426\u9f50\u5168\uff0c\u800c\u4e14\u8fb9\u6743\u4e3a\u8d1f\u4e5f\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\n\n\u6240\u4ee5\u6211\u4eec\u6362\u4e2a\u601d\u8def\uff0c\u5148\u5047\u8bbe\u6240\u6709\u7684\u5de5\u4f5c\u90fd\u505a\u3002\n\n\u9996\u5148\u770b\u5de5\u4f5c\uff0c\u7531\u6e90\u70b9\u5411\u6bcf\u4e2a\u5de5\u4f5c\u8fde\u8fb9\u6743\u4e3a\u5de5\u4f5c\u6536\u5165\u7684\u8fb9\u3002\u5272\u6389\u8868\u793a\u653e\u5f03\u6b64\u5de5\u4f5c\u3002\n\n\u800c\u673a\u5668\uff0c\u7531\u6bcf\u4e2a\u673a\u5668\u5411\u6c47\u70b9\u8fde\u8fb9\u6743\u4e3a**\u8d2d\u4e70**\u8d39\u7528\u7684\u8fb9\uff0c\u5272\u6389\u8868\u793a**\u8d2d\u4e70**\u6b64\u673a\u5668\u3002\n\n\u6bcf\u4e2a\u5de5\u4f5c\u5411\u5176\u9700\u8981\u7684\u673a\u5668\u8fde\u8fb9\u6743\u4e3a**\u79df\u7528**\u8d39\u7528\u7684\u8fb9\uff0c\u5272\u6389\u8868\u793a\u505a\u6b64\u5de5\u4f5c\u65f6**\u79df\u7528**\u8fd9\u4e2a\u673a\u5668\u3002\n\n\u5728\u8fd9\u6837\u5efa\u51fa\u7684\u56fe\u4e0a\u8dd1\u6700\u5c0f\u5272\uff0c\u603b\u6536\u76ca\u51cf\u53bb\u6700\u5c0f\u5272\u5373\u4e3a\u7b54\u6848\u3002\n\n```cpp\n#include<bits/stdc++.h> \nusing namespace std;\nconst int N=3e6;\nint n,m,s,t;\nint tot=1,head[3000],now[3000],ver[N],nxt[N],edge[N],ans;\nvoid add(int u,int v,int w)\n{\n\tver[++tot]=v,edge[tot]=w,nxt[tot]=head[u],head[u]=tot;\n\tver[++tot]=u,edge[tot]=0,nxt[tot]=head[v],head[v]=tot;\n}\n```\n \n\u7f51\u7edc\u6d41\u90e8\u5206\u4ee3\u7801\u7701\u7565\u3002\n\n```cpp\nint main()\n{\n//\tfreopen(\"\",\"r\",stdin);\n//\tfreopen(\"\",\"w\",stdout);\n\tscanf(\"%d%d\",&n,&m);\n\ts=n+m+1,t=s+1;\n\tint x,tt,a,b,y;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%d%d\",&x,&tt);\n\t\tadd(s,i,x);\n\t\tans+=x;\n\t\tfor(int j=1;j<=tt;++j)\n\t\t{\n\t\t\tscanf(\"%d%d\",&a,&b);\n\t\t\tadd(i,a+n,b);\n\t\t}\n\t}\n\tfor(int i=1;i<=m;++i) {scanf(\"%d\",&y);add(i+n,t,y);}\n\tint flow=0;\n\twhile(bfs())\n\twhile(flow=dinic(s,N)) ans-=flow;\n\tprintf(\"%d\",ans);\n   \treturn 0;\n}\n```\n\n\n\u5982\u679c\u5bf9\u6211\u7684\u7b97\u6cd5\u6709\u7591\u95ee\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u4e2d\u8bc4\u8bba\u3002",
        "postTime": 1645450368,
        "uid": 255581,
        "name": "gao_yc",
        "ccfLevel": 0,
        "title": "P4177 [CEOI2008]order \u9898\u89e3"
    },
    {
        "content": "\u4e00\u4e2a\u5947\u602a\u7684\u505a\u6cd5\uff0c\u5c31\u5f53\u7ec3\u4e60\u4e00\u4e0b\u4f18\u5316\u7f51\u7edc\u6d41\u5efa\u56fe\u7684\u6280\u672f\u7f62\u3002\n\n\u9996\u5148\u53d1\u73b0 $b_{i,j}=+\\infty$\u200b \u7684\u60c5\u51b5\u5c31\u662f\u4e2a\u88f8\u7684\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\uff0c\u6240\u4ee5\u539f\u9898\u4e0d\u5f31\u4e8e\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\uff0c\u90a3\u57fa\u672c\u4e0a\u5c31\u53ef\u4ee5\u786e\u5b9a\u662f\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u3002$b_{i,j}<+\\infty$\u200b \u7684\u60c5\u51b5\u600e\u4e48\u7834\u5462\uff1f\u4e00\u4e2a\u5bb9\u6613\u60f3\u5230\u7684\u60f3\u6cd5\u662f\uff1a\u5148\u94a6\u5b9a\u6240\u6709\u5de5\u4f5c\u5168\u90e8\u79df\u7528\u673a\u5668\uff0c\u7136\u540e\u8003\u8651\u8fdb\u884c\u4e00\u4e9b\u4e70\u7684\u64cd\u4f5c\uff0c\u6bcf\u6b21\u4e70\u53ef\u4ee5\u51cf\u5c11\u4e00\u4e9b\u4ee3\u4ef7\u3002\u5177\u4f53\u5730\uff1a\u673a\u5668 $(i,j)$ \u91c7\u7528\u8d2d\u4e70\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5e26\u6765 $b_{i,j}$ \u7684\u6536\u76ca\uff0c\u4f46\u540c\u65f6\u8981\u6c42\u5de5\u4f5c $i$ \u548c\u673a\u5668 $a_{i,j}$ \u88ab\u9009\uff08\u673a\u5668 $x$ \u88ab\u9009\u7684\u6536\u76ca\u662f $-y_x$\uff09\u3002\u6211\u4eec\u5bf9\u6bcf\u4e2a $(i,j)$ \u90fd\u65b0\u5efa\u4e00\u4e2a\u70b9\uff0c\u300c\u540c\u65f6\u8981\u6c42 xx \u548c xxx \u88ab\u9009\u300d\u663e\u7136\u662f\u53ef\u4ee5\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u8868\u8fbe\u51fa\u6765\u7684\u3002\n\n\u4e0d\u8fc7\u8fd9\u6837\u6709 $\\mathrm O(nm)$ \u4e2a\u70b9\uff0c1e6 \u8dd1\u4e2a\u9524\u9524\u68d2\u68d2\u9524\u7684\u7f51\u7edc\u6d41\uff1f\u8003\u8651\u4f18\u5316\u5efa\u56fe\u3002\u8003\u8651\u56fa\u5b9a\u4f4f\u5f53\u524d $i$\uff0c\u90a3\u4e48\u8fde\u8fb9\u7684\u753b\u98ce\u5176\u5b9e\u662f\u8fd9\u6837\u7684\uff1a\u5bf9\u6bcf\u4e2a $(i,j)$\uff0c\u90fd\u6709 $S\\to (i,j)$ \u8fb9\u6743\u4e3a $b_{i,j}$\uff0c$(i,j)\\to i$ \u8fb9\u6743\u4e3a $+\\infty$\uff0c$(i,j)\\to a_{i,j}$ \u8fb9\u6743\u4e3a $+\\infty$\u3002\u73b0\u5728\u53ea\u8981\u628a\u6240\u6709\u7684 $j$ \u5168\u90e8\u538b\u6210\u4e00\u4e2a\u70b9\uff0c\u603b\u70b9\u6570\u5c31\u662f $\\mathrm O(n+m)$ \u4e86\u3002\u6211\u4eec\u6ce8\u610f\u5230\uff1a\u5bf9\u4e8e\u6bcf\u4e2a $(i,j)$\uff0c\u5b83\u5b58\u5728\u7684\u610f\u4e49\u76f8\u5f53\u4e8e\u7ed9 $i$ \u548c $a_{i,j}$ \u6700\u591a\u5171 $b_{i,j}$ \u7684\u6d41\u91cf\uff0c\u800c\u524d\u8005 $i$ \u662f\u56fa\u5b9a\u7684\u3002\u6211\u4eec\u8003\u8651\uff1a\u5148\u628a\u4e0d\u8d85\u8fc7 $b_{i,j}$ \u7684\u6d41\u91cf\u5206\u522b\u5206\u53d1\u7ed9 $a_{i,j}$\uff0c\u7136\u540e\u628a\u5269\u4e0b\u6765\u7684\u4e00\u80a1\u8111\u7ed9 $i$\uff08\u5229\u7528\u4e86 $i$\u200b \u56fa\u5b9a\u8fd9\u4e00\u6027\u8d28\uff09\u3002\u8fd9\u6837\u663e\u7136\u5c31\u53ef\u4ee5\u628a $j$ \u4eec\u5bf9\u5e94\u7684 $(i,j)$ \u7f29\u8d77\u6765\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define pb push_back\n#define mp make_pair\n#define X first\n#define Y second\nconst int inf=0x3f3f3f3f3f3f3f3f;\nconst int N=5e3+10;\nint n,m,s,t;\nvector<pair<int,int> > nei[N+1];\nvector<int> rv[N+1];\nvoid ae(int x,int y,int z){\n\tnei[x].pb(mp(y,z)),nei[y].pb(mp(x,0));\n\trv[x].pb(nei[y].size()-1),rv[y].pb(nei[x].size()-1);\n}\nint dep[N+1];\nbool bfs(){\n\tmemset(dep,-1,sizeof(dep));\n\tdep[s]=0;\n\tqueue<int> q;\n\tq.push(s);\n\twhile(q.size()){\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tfor(int i=0;i<nei[x].size();i++){\n\t\t\tint y=nei[x][i].X,c=nei[x][i].Y;\n\t\t\tif(c&&!~dep[y])dep[y]=dep[x]+1,q.push(y);\n\t\t}\n\t}\n\treturn ~dep[t];\n}\nint now[N+1];\nint dfs(int x=s,int flw=inf){\n\tif(x==t||!flw)return flw;\n\tint res=0,tmp;\n\tfor(int &i=now[x];i<nei[x].size();i++){\n\t\tint y=nei[x][i].X,&c=nei[x][i].Y;\n\t\tif(dep[y]==dep[x]+1&&(tmp=dfs(y,min(flw,c)))){\n\t\t\tres+=tmp,flw-=tmp;\n\t\t\tc-=tmp,nei[y][rv[x][i]].Y+=tmp;\n\t\t\tif(!flw)break;\n\t\t}\n\t}\n\treturn res;\n}\nint dinic(){\n\tint res=0;\n\twhile(bfs()){\n\t\tmemset(now,0,sizeof(now));\n\t\tres+=dfs();\n\t}\n\treturn res;\n}\nint c1[N];\nint noww,tot;\nvoid add_node(int x,int v){\n\tif(v>=0)tot+=v,ae(s,x,v);\n\telse ae(x,t,-v);\n}\nsigned main(){\n\tcin>>n>>m;\n\ts=1,t=2,noww=n+m+2;\t\n\tfor(int i=1;i<=n;i++){\n\t\tint x,t;\n\t\tcin>>x>>t;\n\t\tc1[i]=x;\n\t\tnoww++,ae(noww,i+2,inf);\n\t\tint sum=0;\n\t\twhile(t--){\n\t\t\tint a,b;\n\t\t\tscanf(\"%lld%lld\",&a,&b);\n\t\t\tc1[i]-=b;\n\t\t\ttot+=b;\n\t\t\tsum+=b;\n\t\t\tae(noww,a+n+2,b);\n\t\t}\n\t\tae(s,noww,sum);\n\t}\n\tfor(int i=1;i<=n;i++)add_node(i+2,c1[i]);\n\tfor(int i=1;i<=m;i++){\n\t\tint v;\n\t\tcin>>v;\n\t\tadd_node(i+n+2,-v);\n\t}\n\tcout<<tot-dinic();\n\treturn 0;\n}\n```",
        "postTime": 1635561083,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "P4177 - order \u9898\u89e3"
    },
    {
        "content": "#### \u7b97\u6cd5\n\n\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\n\n#### \u601d\u8def\n\n\u9996\u5148\uff0c\u5982\u679c\u6ca1\u6709\u79df\u501f\u8fd9\u4e2a\u6761\u4ef6\uff0c\u5c31\u662f\u4e00\u4e2a\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u7684\u6a21\u677f\u4e86\uff0c\u8ba9\u6211\u4eec\u80cc\u8bf5\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u7684\u5efa\u56fe\u65b9\u6cd5\uff1a\n\n> 1. \u5c06\u6e90\u70b9\u4e0e\u6b63\u6743\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a\u6743\u503c\uff1b\n> 2. \u5c06\u8d1f\u6743\u70b9\u4e0e\u6c47\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a\u6743\u503c\u76f8\u53cd\u6570\uff08\u6b63\u6570\uff09\uff1b\n> 3. \u5c06\u539f\u56fe\u4e2d\u7684\u8fb9\u76f8\u8fde\uff0c\u6d41\u91cf\u4e3a\u6b63\u65e0\u7a77\u3002\n> 4. \u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe$ =$ \u539f\u56fe\u6b63\u6743\u70b9\u6743\u503c\u548c$ -$ \u6700\u5c0f\u5272\n\n##### \u601d\u8003\uff1a\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u628a\u539f\u56fe\u4e2d\u7684\u8fb9\u8bbe\u4e3a\u6b63\u65e0\u7a77\uff1f\n\n$A:$\u5c06\u67d0\u70b9\u4e0e\u6e90\u70b9\u7684\u8fb9\u5272\u53bb\u8868\u793a\u5c06\u5176\u5212\u5206\u5728\u4e0d\u9009\u96c6\u5408\u4e2d\uff0c\u5c06\u4e0e\u6c47\u70b9\u7684\u8fb9\u5272\u53bb\u8868\u793a\u5728\u9009\u62e9\u96c6\u5408\u4e2d\uff0c\u800c\u539f\u56fe\u4e2d\u7684\u8fb9\u662f\u4e0d\u80fd\u5272\u6389\u7684\uff0c\u6240\u4ee5\u8bbe\u4e3a\u6b63\u65e0\u7a77\uff0c\u8fd9\u6837\u6211\u4eec\u518d\u6c42\u6700\u5c0f\u5272\u7684\u65f6\u5019\u5c31\u4e0d\u4f1a\u628ata\u5272\u6389\u4e86\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5982\u4f55\u89e3\u6551\u8fd9\u9053\u9898\u5462\uff1f\n\n\u60f3\u4e00\u60f3\u79df\u501f\u8fd9\u4e2a\u6761\u4ef6\u4e3a\u4ec0\u4e48\u4f1a\u4f7f\u539f\u672c\u7684\u7b97\u6cd5\u9519\u8bef\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u79df\u501f\u67d0\u4e2a\u673a\u5668\u6765\u6ee1\u8db3\u5de5\u4f5c\u9700\u6c42\u6bd4\u8d2d\u4e70ta\u66f4\u5212\u7b97\uff0c\u800c\u79df\u501f\u673a\u5668\u662f\u5bf9\u5176\u4ed6\u7684\u5de5\u4f5c\u6ca1\u6709\u5f71\u54cd\u7684\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5de5\u4f5c\u4e0e\u673a\u5668\u4e4b\u95f4\u7684\u8fb9\u7684\u6d41\u91cf\u8bbe\u6210\u79df\u501f\u8d39\u7528\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u5272\u6389\u79df\u501f\u8fb9\u6765\u628a\u67d0\u4e2a\u5de5\u4f5c\u5212\u5206\u5230\u9009\u62e9\u96c6\u5408\u4e2d\u800c\u4e0d\u5f71\u54cd\u5176\u4ed6\u7684\u5de5\u4f5c\u3002\n\n#### \u53c2\u8003\u4ee3\u7801\n\n```cpp\n/*\n * @Author: When_C \n * @Date: 2020-11-23 17:34:21 \n * @Last Modified by: When_C\n * @Last Modified time: 2020-11-23 18:35:43\n */\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n#define INF 0x3f3f3f3f\n\nusing namespace std;\n\nconst int maxm = 3e6 + 10,maxn = 1e5 + 10;\nint n,m,head[maxn],num,S,T,Ans;\nstruct Edge{\n    int then,to,val;\n}e[maxm];\n\nvoid add(int u, int v, int val){\n    e[++num] = (Edge){head[u], v, val}; head[u] = num;\n    e[++num] = (Edge){head[v], u, 0}; head[v] = num;\n}\n\nint vis[maxn],dep[maxn];\nint bfs(int st, int en){\n    memset(vis,0,sizeof(vis));\n    for(int i = 1; i <= n + m + 2; ++ i) dep[i] = INF;\n    queue<int> q;\n    vis[st] = 1, dep[st] = 1, q.push(st);\n    while(!q.empty()){\n        int u = q.front();\n        vis[u] = 0, q.pop();\n        for(int i = head[u]; i; i = e[i].then){\n            int v = e[i].to;\n            if(dep[v] == INF && e[i].val){\n                dep[v] = dep[u] + 1;\n                if(!vis[v]){vis[v] = 1; q.push(v);}\n            }\n        }\n    }\n    return (dep[en] != INF);\n}\n\nint cur[maxn];\nint dfs(int u, int sum){\n    if(u == T) return sum;\n    int now = 0;\n    for(int &i = cur[u]; i; i = e[i].then){\n        int v = e[i].to;\n        if(dep[v] == dep[u] + 1 && e[i].val){\n            int a = dfs(v, min(e[i].val, sum - now));\n            now += a;\n            e[i].val -= a, e[i ^ 1].val += a;\n            if(now == sum) return now;\n        }\n    }\n    return now;\n}\n\nint dinic(){\n    int maxflow = 0;\n    while(bfs(S, T)){\n        memcpy(cur,head,sizeof(head));\n        maxflow += dfs(S, INF);\n    }\n    return maxflow;\n}\n\nint main(){\n    scanf(\"%d%d\", &n, &m);\n    num = 1, S = n + m + 1; T = S + 1;\n    for(int i = 1; i <= n; ++ i){\n        int x,t; scanf(\"%d%d\", &x, &t);\n        add(S, i, x); Ans += x;\n        while(t--){\n            int a,b; scanf(\"%d%d\", &a, &b);\n            add(i, a + n, b);\n        }\n    }\n    for(int i = 1; i <= m; ++ i){\n        int y; scanf(\"%d\", &y);\n        add(i + n, T, y);\n    }\n    printf(\"%d\\n\", Ans - dinic());\n    return 0;\n}\n```\n\n",
        "postTime": 1606129114,
        "uid": 120351,
        "name": "When",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4177 \u3010[CEOI2008]order\u3011"
    }
]