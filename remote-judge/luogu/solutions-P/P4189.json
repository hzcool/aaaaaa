[
    {
        "content": "**\u8fd9\u91cc\u662f\u7ed9\u51fa\u6240\u6709\u9898\u89e3\u6240\u6ca1\u6709\u7684\u7ec6\u8282\u8bc1\u660e**\n\n\n\u9996\u5148 \u601d\u8003\u4e00\u4e2a\u95ee\u9898:\u53ea\u6709\u4e00\u6761\u94fe\u7684\u65f6\u5019,\u4f60\u53ef\u4ee5\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u76f8\u90bb\u70b9\u5bf9\u4f7f\u5f97ans+=2,h[x]--,h[y]--\uff0c\u6c42\u5982\u4f55\u9009\u62e9\u4f1a\u4f7fans\u6700\u5927\u3002  \u9996\u5148\u5f53\u70b9\u6570<=4\u7684\u65f6\u5019\u4e0d\u7ba1\u600e\u4e48\u64cd\u4f5c,\u64cd\u4f5c\u5230\u65e0\u64cd\u4f5c\u53ef\u9009\u7684\u65f6\u5019,ans\u6c38\u8fdc\u76f8\u7b49\u3002 \u4ee5<=4\u4e3a\u8d77\u70b9\u8fd9\u6837\u6570\u5b66\u5f52\u7eb3\u4e00\u4e0b\u4f1a\u53d1\u73b0\u4e0d\u8bba\u70b9\u6570\u591a\u5c11 \u7ed3\u8bba\u90fd\u662f\u6210\u7acb\u3002\n\n\n------------\n\u56de\u5f52\u672c\u9898\u3002 \u7b54\u6848\u80af\u5b9a\u4f1a\u904d\u5386\u6bcf\u6761\u8fb9,\u6240\u4ee5\u5148\u628a\u6bcf\u4e2a\u70b9\u51cf\u53bb\u5ea6\u6570,\u7136\u540e\u8d21\u732e\u7ed9\u7b54\u6848\uff0c\u5f53\u505a\u5df2\u7ecf\u904d\u5386\u4e00\u6b21\u4e86\u3002\u6b64\u65f6 \u5c31\u7b49\u4e8e\u628a\u4e0a\u9762\u7684\u95ee\u9898\u5f52\u7c7b\u5728\u4e00\u68f5\u6811\u4e0a\u4e86\uff0c\u56e0\u4e3a\u4e00\u68f5\u6811\u5176\u5b9e\u4f1a\u88ab\u591a\u6761\u94fe\u5256\u5f00\uff0c\u8fd0\u7528\u4e0a\u9762\u7684\u7ed3\u8bba\uff0c\u73b0\u5728\u628a\u4ed6\u4eec\u968f\u610f\u64cd\u4f5c\u6389\u7edf\u8ba1\u7b54\u6848\u5c31\u662f\u4ece\u8d77\u70b9\u56de\u5230\u8d77\u70b9\u7684\u7b54\u6848\u4e86\u3002\u5982\u6b64\u8d2a\u5fc3\u64cd\u4f5c\u7684\u7ed3\u679c \u4f60\u4f1a\u53d1\u73b0\u5269\u4f59\u7684h\u7684\u5206\u5e03\u751a\u81f3\u90fd\u5b8c\u5168\u76f8\u540c.\n\n\n------------\n\n\u8d77\u70b9\u56de\u5230\u8d77\u70b9\u7684\u7b54\u6848\u5df2\u7ecf\u88ab\u7edf\u8ba1,\u73b0\u5728\u53ea\u8981\u4ece\u8fd9\u4e2a\u7b54\u6848\u51fa\u53d1,\u66f4\u65b0\u5176\u4ed6\u70b9\u7684\u7b54\u6848\u5373\u53ef\u3002\u76f4\u63a5dfs,\u4ece\u7236\u4eb2\u8d70\u5411\u513f\u5b50\u3002\n\n\u7b2c\u4e00\u4e2a\u60c5\u51b5 \u5018\u82e5\u7236\u4eb2\u7684h>0  \u513f\u5b50\u7684\u7b54\u6848\u5c31\u662f\u7236\u4eb2\u7684+1\uff0c\u7236\u4eb2\u7684h--\u7136\u540e\u5411\u4e0b\u7ee7\u7eed\u66f4\u65b0\u3002\n\n\u7b2c\u4e8c\u4e2a\u60c5\u51b5 \u7236\u4eb2\u7684h==0, \u90a3\u4e48\u8003\u8651 \u5c06\u539f\u672c\u7684\u4e00\u6b21\u70b9\u5bf9\u64cd\u4f5c\u9000\u56de\u53bb\u8ba9\u7236\u4eb2\u548c\u513f\u5b50\u7684h\u540c\u65f6++\u3002\u513f\u5b50\u7684\u7b54\u6848\u5c31\u662f\u7236\u4eb2\u7684\u7b54\u6848-1.\n\n\u7b2c\u4e09\u4e2a\u60c5\u51b5 \u7236\u4eb2\u7684h\u867d\u7136==0 \u4f46\u662f \u513f\u5b50\u5b58\u5728h>0\u7684\u513f\u5b50 \u6b64\u65f6\u53ef\u4ee5\u9000\u7236\u4eb2\u548c\u513f\u5b50\u7684\u6d41 \u7136\u540e\u8ba9\u513f\u5b50\u7684\u513f\u5b50\u4e4b\u524d\u8dd1\u6765\u56de \u603b\u7684ans\u662f++  \u7136\u540e\u53ea\u6709\u513f\u5b50\u7684\u513f\u5b50\u7684h--\n\n\u81f3\u4e8e\u5411\u4e0b\u66f4\u65b0\u7684\u6b63\u786e\u6027 \u611f\u6027\u7406\u89e3\u5927\u81f4\u5982\u4e0b\uff1a\n\u73b0\u5728\u4e0d\u5b58\u5728\u4efb\u4f55\u4e00\u4e2a\u76f8\u90bb\u70b9\u5bf9x,y  \u4e2dx y\u7684h>0\n\u6240\u4ee5\u6b64\u65f6\u4f60\u4e0d\u8bba\u53bb\u54ea\u91cc \u56e0\u4e3a\u6bcf\u6761\u8fb9\u4e00\u5b9a\u4f1a\u6298\u8fd4\uff0c\u6240\u4ee5\u4e00\u5b9a\u4f1a\u9000\u6d41\u4e00\u6b21\u5f80\u8fd4\uff0c \n\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6253\u7b97\u518d\u4ece\u4e00\u4e2a\u70b9x \u904d\u5386\u5176\u4ed6\u5730\u65b9\u5c1d\u8bd5\u8ba9ans++ \u662f\u4e0d\u53ef\u80fd\u7684\uff1b\n\u6240\u4ee5\u5f53\u524d\u552f\u4e00\u7684\u9009\u62e9\u5c31\u662f\u901a\u8fc7\u9000\u6d41\u4f7f\u5f97\u4ecex to y \u5408\u6cd5\u3002 \n\n\n\n------------\n\n\u7efc\u4e0a\u6240\u8ff0\u6240\u4ee5\u7b2c\u4e00\u6b65\u64cd\u4f5c\u76f8\u5bf9\u521d\u59cb\u5f62\u6001\u56fe\u662f\u6700\u4f18\uff0c\u7b2c\u4e8c\u6b65\u7edf\u8ba1\u76f8\u5bf9\u7b2c\u4e00\u6b65\u64cd\u4f5c\u5b8c\u540e\u7684\u56fe\u662f\u6700\u4f18\u3002\u901a\u8fc7\u7ed3\u8bba\u5957\u7ed3\u8bba \u53ef\u8bc1\u5982\u6b64\u662f\u6700\u4f18\n\n\n\n\n```cpp\n#include<bits/stdc++.h>\n#define N 1<<20\nusing namespace std;\nint las[N],to[N],nxt[N],n,val[N],now,ans[N],p[N];\nvoid dfs(int x,int f){\n\tfor(int i=las[x];i;i=nxt[i])if(to[i]!=f)dfs(to[i],x);\n\tint c=min(val[f],val[x]);now+=c*2,val[x]-=c,val[f]-=c,val[x]?p[f]=x:0;\n}\nvoid dfs1(int x,int f){\n\tans[x]=now;for(int i=las[x];i;i=nxt[i])if(to[i]!=f)\n\t if(val[x])now++,val[x]--,dfs1(to[i],x),now--,val[x]++;\n\t else if(p[to[i]])val[p[to[i]]]--,now++,dfs1(to[i],x),val[p[to[i]]]++,now--;\n\t else val[to[i]]++,now--,dfs1(to[i],x),val[p[to[i]]]--,now++;\n}\nint main(){\n\tcin>>n;for(int i=1;i<=n;i++)scanf(\"%d\",&val[i]);\n\tfor(int i=1;i<n*2-1;i+=2)scanf(\"%d%d\",&to[i],&to[i+1]),\n\t to[i]++,to[i+1]++,now+=2,val[to[i]]--,val[to[i+1]]--,\n\tnxt[i]=las[to[i+1]],las[to[i+1]]=i,nxt[i+1]=las[to[i]],las[to[i]]=i+1;\n\tdfs(1,0),dfs1(1,0);for(int i=1;i<=n;i++)printf(\"%d\\n\",ans[i]);\n}\n\n```\n",
        "postTime": 1565620659,
        "uid": 59907,
        "name": "Sakura_\u68a6\u7476",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4189 \u3010[CTSC2010]\u661f\u9645\u65c5\u884c\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u6bd4\u8f83\u76f4\u63a5\u7684\u60f3\u6cd5\u5c31\u662f\u5bf9\u6bcf\u4e2a\u70b9\u8fdb\u884c\u62c6\u70b9\uff0c\u62c6\u6210\u5165\u70b9\u548c\u51fa\u70b9\uff0c\u9650\u5236\u653e\u5728\u5165\u70b9\u548c\u51fa\u70b9\u76f8\u8fde\u7684\u8fb9\u4e0a\uff0c\u7136\u540e\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n\u4f46\u662f\u8fd9\u6837\u590d\u6742\u5ea6\u65e0\u6cd5\u63a5\u53d7\uff0c\u6240\u4ee5\u8003\u8651\u6a21\u62df\u8d39\u7528\u6d41\u6765\u89e3\u51b3\u672c\u9898\u3002\n\n\u53d1\u73b0 $H$ \u90fd\u5927\u4e8e\u7b49\u4e8e\u8be5\u8282\u70b9\u7684\u5ea6\u6570\uff0c\u6240\u4ee5\u4ece\u6839\u8282\u70b9\u51fa\u53d1\uff0c\u4e00\u5b9a\u53ef\u4ee5\u5230\u8fbe\u6240\u6709\u8282\u70b9\u3002\n\n\u5148\u8003\u8651\u4ee5\u6839\u8282\u70b9\u4e3a\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u7b54\u6848\uff0c\u9996\u5148\u53ef\u4ee5\u904d\u5386\u6574\u68f5\u6811\u540e\u56de\u5230\u6839\u8282\u70b9\uff0c\u6bcf\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7684 $H$ \u90fd\u51cf\u4e00\uff0c\u7b54\u6848\u52a0\u4e8c\u3002\u7136\u540e\u7ee7\u7eed\u8003\u8651\u6bcf\u6761\u8fb9\u7684\u8d21\u732e\uff0c\u82e5\u5176\u4e24\u4e2a\u7aef\u70b9\u5728\u904d\u5386\u540e $H$ \u4e0d\u4e3a $0$\uff0c\u5219\u53ef\u4ee5\u53cd\u590d\u8d70\u8fd9\u6761\u8fb9\uff0c\u76f4\u5230\u5176\u4e2d\u4e00\u4e2a\u7aef\u70b9\u7684 $H$ \u4e3a $0$\u3002\n\n\u5f97\u51fa\u6839\u8282\u70b9\u7684\u7b54\u6848\u540e\uff0c\u8003\u8651\u5982\u4f55\u63a8\u51fa\u5176\u4ed6\u70b9\u7684\u7b54\u6848\u3002\u8bbe\u5f53\u524d\u8282\u70b9\u4e3a $x$\uff0c\u5f53\u524d\u8003\u8651\u7684\u513f\u5b50\u4e3a $y$\u3002\u82e5 $H_x$ \u4e0d\u4e3a $0$\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u4ece $x$ \u8d70\u5230 $y$\uff0c\u4f7f\u7b54\u6848\u52a0\u4e00\u3002\u82e5 $H_x$ \u4e3a $0$\uff0c\u90a3\u4e48\u4ece $y$ \u5230 $x$ \u540e\u4ece $x$ \u5c31\u65e0\u6cd5\u5230\u8fbe $y$\uff0c\u6240\u4ee5\u8fdb\u884c\u53cd\u6094\u9000\u6d41\uff0c\u5c06\u539f\u5148 $y$ \u5230 $x$ \u7684\u4e00\u4e2a\u6d41\u9000\u6389\uff0c\u5982\u679c\u6b64\u65f6 $y$ \u5b58\u5728\u4e00\u4e2a\u513f\u5b50\u7684 $H$ \u4e0d\u4e3a $0$\uff0c\u90a3\u4e48\u5176\u5c31\u53ef\u4ee5\u53cd\u590d\u8d70\u548c\u8fd9\u4e2a\u513f\u5b50\u76f8\u8fde\u7684\u8fb9\uff0c\u4f7f\u7b54\u6848\u52a0\u4e00\uff0c\u82e5\u6ca1\u6709\uff0c\u5219\u7b54\u6848\u51cf\u4e00\u3002\n\n\u540c\u65f6\u8fd8\u8981\u6ce8\u610f\u5728 $dfs$ \u65f6\u9700\u8981\u56de\u6eaf\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 100010\nusing namespace std;\ntemplate<typename T> inline void read(T &x)\n{\n    x=0;char c=getchar();bool flag=false;\n    while(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    if(flag)x=-x;\n}\nint n,tot;\nint v[maxn],ans[maxn],son[maxn];\nstruct edge\n{\n    int to,nxt;\n}e[maxn];\nint head[maxn],edge_cnt;\nvoid add(int from,int to)\n{\n    e[++edge_cnt]=(edge){to,head[from]};\n    head[from]=edge_cnt;\n}\nvoid dfs_pre(int x,int fa)\n{\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        int y=e[i].to,val;\n        if(y==fa) continue;\n        dfs_pre(y,x),val=min(v[x],v[y]);\n        v[x]-=val,v[y]-=val,tot+=val*2;\n        if(v[y]) son[x]=y;\n    }\n}\nvoid dfs_ans(int x,int fa)\n{\n    ans[x]=tot;\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        int y=e[i].to,type;\n        if(y==fa) continue;\n        if(v[x]) v[x]--,tot++,type=1;\n        else if(son[y]) v[son[y]]--,tot++,type=2;\n        else v[y]++,tot--,type=3;\n        dfs_ans(y,x);\n        if(type==1) v[x]++,tot--;\n        if(type==2) v[son[y]]++,tot--;\n        if(type==3) v[y]--,tot++;\n    }\n}\nint main()\n{\n    read(n);\n    for(int i=1;i<=n;++i) read(v[i]);\n    for(int i=1;i<n;++i)\n    {\n        int x,y;\n        read(x),read(y),x++,y++;\n        add(x,y),add(y,x),v[x]--,v[y]--,tot+=2;\n    }\n    dfs_pre(1,0),dfs_ans(1,0);\n    for(int i=1;i<=n;++i) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1595296703,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4189 \u3010[CTSC2010]\u661f\u9645\u65c5\u884c\u3011"
    },
    {
        "content": "### \u53d1\u73b0\u9996\u5148\u53ef\u4ee5\u5168\u8d70\u4e00\u904d\u56de\u5230\u8d77\u70b9\uff0c\u7136\u540e\u8d2a\u5fc3\u5730\u6d88\u6389\u8fd8\u80fd\u8d70\u7684\u8fb9\uff0c\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u56de\u5230\u539f\u70b9\u7684\u6700\u5927\u6b65\u6570\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u518d\u8d70\u5230\u6bcf\u4e2a\u70b9\u3002\n\ndfs\u4e00\u904d\uff0c\u5982\u679c\u7236\u8282\u70b9\u8fd8\u6709\u5269\u4f59\u6d41\u91cf\u5c31\u76f4\u63a5\u8d70\u8fc7\u6765\uff0c\u5426\u5219\u9700\u8981\u9000\u6389\u5411\u7236\u8282\u70b9\u8d70\u7684\u8fb9\uff0c\u7136\u540e\u518d\u68c0\u67e5\u4e00\u4e0b\u591a\u51fa\u6765\u7684\u6d41\u91cf\u80fd\u5426\u548c\u513f\u5b50\u8d70\u6765\u56de\u3002\u6ce8\u610f\u9700\u8981\u56de\u6eaf\u3002\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define LL long long\nint rd()\n{\n    int x=0;\n    char c=getchar();\n    while (c<'0'||c>'9') c=getchar();\n    while (c>='0'&&c<='9')\n    {\n        x=x*10+c-'0';\n        c=getchar();\n    }\n    return x;\n}\nint fir[50010],ne[100010],to[100010],w[50010],du[50010],n;\nLL now,ans[50010];\nvoid add(int num,int u,int v)\n{\n    ne[num]=fir[u];\n    fir[u]=num;\n    to[num]=v;\n}\nvoid dfs1(int u,int fa)\n{\n    LL x;\n    int v;\n    for (int i=fir[u];i;i=ne[i])\n        if ((v=to[i])!=fa)\n        {\n            dfs1(v,u);\n            x=min(w[u],w[v]);\n            w[u]-=x;\n            w[v]-=x;\n            now+=2*x;\n        }\n}\nvoid dfs2(int u,int fa)\n{\n    int v,flag;\n    if (fa!=-1&&w[fa])\n    {\n        flag=1;\n        w[fa]--;\n        now++;\n    }\n    else\n    {\n        flag=0;\n        now--;\n        w[u]++;\n        if (w[u]==1)\n            for (int i=fir[u];i;i=ne[i])\n                if ((v=to[i])!=fa&&w[v])\n                {\n                    w[u]--;\n                    w[v]--;\n                    now+=2;\n                    flag=-1;\n                    break;\n                }\n    }\n    ans[u]=now;\n    for (int i=fir[u];i;i=ne[i])\n        if ((v=to[i])!=fa)\n            dfs2(v,u);\n    if (flag==1)\n    {\n        w[fa]++;\n        now--;\n    }\n    else\n    {\n        now++;\n        if (flag==-1) now-=2;\n    }\n}\nint main()\n{\n    int u,v;\n    n=rd();\n    for (int i=1;i<=n;i++) w[i]=rd();\n    for (int i=1;i<n;i++)\n    {\n        u=rd()+1;\n        v=rd()+1;\n        du[u]++;\n        du[v]++;\n        add(i<<1,u,v);\n        add(i<<1|1,v,u);\n    }\n    for (int i=1;i<=n;i++) w[i]-=du[i];\n    now=2*(n-1);\n    dfs1(1,-1);\n    ans[1]=now;\n    for (int i=fir[1];i;i=ne[i]) dfs2(to[i],1);\n    for (int i=1;i<=n;i++) printf(\"%lld\\n\",ans[i]);\n}\n```\n",
        "postTime": 1558446362,
        "uid": 98954,
        "name": "\u4e0d\u5b58\u5728\u4e4b\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4189 \u3010[CTSC2010]\u661f\u9645\u65c5\u884c\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9053\u9898\u7b2c\u4e00\u773c\u662f\u4ec0\u4e48\uff1f\n\n\u7f51\u7edc\u6d41\uff01exciting\uff01\n\n\u5927\u4f6c\u4eec\u4ee5\u5149\u901f~~\u590d\u5236~~\u6572\u597d\u677f\u5b50\uff0c\u75283\u6beb\u79d2\u60f3\u51fa\u4e86\u5982\u4f55\u5efa\u6a21\uff0c\u6253\u597d\u7a0b\u5e8f\uff0c\u770b\u773c\u6570\u636e\u8303\u56f4\u2026\u2026\n\n\u7b11\u5bb9\u6e10\u6e10\u6d88\u5931.jpg\n\n~~\u4ec0\u4e48\uff0c\u8fd8\u6709\u6211\u9884\u6d41\u63a8\u8fdb\u89e3\u51b3\u4e0d\u4e86\u7684\u5361\u5e38\u7f51\u7edc\u6d41\uff1f~~\n\n\u8fd8\u771f\u641e\u4e0d\u5b9a\n\n\n------------\n\u524d\u7f6e\u59ff\u52bf\uff1a\n\n- \u6811\u5f62DP\n\n\u5de6\u8f6c\u767e\u5ea6\uff0c\u4f60\u8c37\u5e76\u6ca1\u6709\u6811\u5f62DP\u7684\u6a21\u677f\n\n- \u8db3\u591f\u5927\u7684\u8111\u6d1e\n***\n\n\u518d\u4ed4\u7ec6\u770b\u4e00\u773c\uff1aN\u4e2a\u661f\u7403\uff0cN-1\u6761\u53cc\u5411\u65f6\u7a7a\u96a7\u9053\uff0c\u4efb\u610f\u4e24\u70b9\u8054\u901a\n\n\u2014\u2014\u8fd9\u662f\u6811\uff01\n\n\u6811\u4e0a\u7f51\u7edc\u6d41\u4e0d\u884c\uff0c\u90a3\u4e48\u2026\u2026\u8fd8\u6709\u4ec0\u4e48\u7b97\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u2026\u2026\n\n\u2014\u2014\u6811\u4e0aDP\uff01\n\n\u597d\u4e86\u600e\u4e48DP\u4e5f\u662f\u4e00\u4e2a\u95ee\u9898\u554a\n\n\u5148\u770b\u4e00\u53e5\u8bdd\uff1a\n\n> \u6bcf\u4e2a\u661f\u7403\u7684H_iHi\u5927\u4e8e\u7b49\u4e8e\u4e0e\u8be5\u661f\u7403\u76f4\u63a5\u76f8\u8fde\u7684\u661f\u7403\u6570\uff08\u5373\u5ea6\u6570\uff09\u3002\n\n\u4ec0\u4e48\u9b3c\uff1f\u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u79cd\u6bd2\u7624\u73a9\u610f\u513f\uff1f\n\n\u5176\u5b9eta\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u5173\u952e\u7684\u4fe1\u606f\uff1a\n\n> \u7531\u4e8e\u6709Hi>=i\u7684\u5ea6\u6570\uff0c\u90a3\u4e48\u53ef\u4ee5\u60f3\u8c61\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u6bd4\u5982\u6240\u6709Hi=i\u7684\u5ea6\u6570\uff09\uff0c\u7b54\u6848\u81f3\u5c11\u662f\u6839\u8282\u70b9\u8d70\u8fc7\u6240\u6709\u70b9\u4e4b\u540e\u56de\u5230\u6839\u8282\u70b9\uff0c\u7136\u540e\u53bb\u6389\u4e00\u4e2a\u70b9i\u5230\u6839\u8282\u70b9\u7684\u90a3\u4e9b\u8def\u5f84\u3002\n\n\u2014\u2014\u6765\u81eahttps://blog.csdn.net/lych_cys/article/details/51062609\n\n\u90a3\u4e48\u611f\u6027\u4e00\u4e0b\uff0c\u7b54\u6848\u5927\u6982\u5c31\u662f\u6839\u8282\u70b9\u56de\u5230\u6839\u8282\u70b9\u7684\u6700\u5927\u6d41\u91cf\uff0c\u4f7f\u5f97\u6ca1\u6709\u4e00\u6761\u8fb9e(u,v)\uff0cu\u548cv\u7684\u53ef\u51fa\u53d1\u6b21\u6570\u90fd>0\u3002\n\n\u5206\u4e09\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n1. \u8fd8\u53ef\u4ee5\u4ecex\u5904\u51fa\u53d1\uff0c\u603b\u6d41\u91cf++\uff0ccnt[x]--\n2. y\u800c\u513f\u5b50\u4e2d\u5b58\u5728\u4e00\u4e2a\u70b9p\u7684\u53ef\u51fa\u53d1\u6b21\u6570>0\uff0c\u90a3\u4e48\u53ef\u4ee5\u8ba9y->x\u7684\u6d41\u91cf-1\uff0c\u7136\u540ey->p\u6d41\u91cf+1\uff0cp->y\u6d41\u91cf+1\uff0cp\u7684\u53ef\u51fa\u53d1\u6b21\u6570-1\uff1b\n3. \u5426\u5219\u6ca1\u6709\u529e\u6cd5\u5230\u8fbey\uff0c\u90a3\u4e48\u53ea\u80fd\u8ba9y->x\u7684\u8fb9\u9000\u6d41\uff0c\u540c\u65f6y\u7684\u53ef\u51fa\u53d1\u6b21\u6570+1\u3002\n\n\u2014\u2014\u4ecd\u7136\u6765\u81eahttps://blog.csdn.net/lych_cys/article/details/51062609\n\n\u90a3\u4e48\u2026\u2026\n\n\u8fd9\u5c31\u5f88\u663e\u7136\u4e86\uff0c\u4ee3\u7801\u5c31\u4e0d\u9632\u4e86\uff08\u88ab\u6cfc\u786b\u9178\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n/*\ninline void read(int &x)\n{\n    x=0;\n    int f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9')\n    {\n        if(ch=='-')\n        {\n            f=-1;\n        }\n        ch=getchar();\n    }\n    while(ch<='9'&&ch>='0')\n    {\n        x=(x<<3)+(x<<1)+ch-'0';\n        ch=getchar();\n    }\n    x*=f;\n}\n*/\nstruct note\n{\n    int next;\n    int t;\n};\n\nnote e[200010];\nint head[50010],ind[50010];\nint n;\nint cnt;\nint flag[50010],ans[50010],g[50010];\nint flow;\n\ninline void add(int x,int y)\n{\n    e[++cnt].t=y;\n    e[cnt].next=head[x];\n    head[x]=cnt;\n    ind[y]--;\n}\n\nvoid dfs(int x,int fa)\n{\n    for(int i=head[x];i+1;i=e[i].next)\n    {\n        int p=e[i].t;\n        if(p==fa)\n        {\n            continue;\n        }\n        dfs(p,x);\n        int val=min(ind[p],ind[x]);\n        ind[x]-=val;\n        ind[p]-=val;\n        flow+=val<<1;\n        if(ind[p])\n        {\n            g[x]=p;\n        }\n    }\n}\n\nvoid solve(int x,int fa)\n{\n    ans[x]=flow;\n    for(int i=head[x];i+1;i=e[i].next)\n    {\n        int p=e[i].t;\n        if(p==fa)\n        {\n            continue;\n        }\n        if(ind[x])\n        {\n            ind[x]--;\n            flow++;\n            flag[x]=0;\n        }\n        else if(g[p])\n        {\n            ind[g[p]]--;\n            flow++;\n            flag[x]=1;\n        }\n        else\n        {\n            ind[p]++;\n            flow--;\n            flag[x]=2;\n        }\n        solve(p,x);\n        if(!flag[x])\n        {\n            ind[x]++;\n            flow--;\n        }\n        else if(flag[x]==1)\n        {\n            ind[g[p]]++;\n            flow--;\n        }\n        else\n        {\n            ind[p]--;\n            flow++;\n        }\n    }\n}\n\nint main()\n{\n    memset(head,-1,sizeof(head));\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&ind[i]);\n    }\n    for(int i=1;i<n;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        x++;\n        y++;\n        add(x,y);\n        add(y,x);\n    }\n    flow=(n-1)<<1;\n    dfs(1,-1);\n    solve(1,-1);\n    for(int i=1;i<=n;i++)\n    {\n        printf(\"%d\\n\",ans[i]);\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1548664753,
        "uid": 103603,
        "name": "tt66ea",
        "ccfLevel": 0,
        "title": "P4189 [CTSC2010]\u661f\u9645\u65c5\u884c"
    }
]