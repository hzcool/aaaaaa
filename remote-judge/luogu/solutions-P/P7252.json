[
    {
        "content": "\u9996\u5148\u8fd9\u9898\u663e\u7136\u53ef\u4ee5\u6709\u4e00\u4e07\u79cd\u505a\u6cd5\u505a\u5230 $O(n\\log n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4f46\u6570\u636e\u8303\u56f4\u624d $50000$\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u7528\u4e00\u70b9\u66f4\u52a3\u4f46\u662f\u66f4\u597d\u5199\u7684\u505a\u6cd5\u5462\uff1f\n\n\u8003\u8651\u5230\u5982\u679c\u533a\u95f4\u6709\u7edd\u5bf9\u4f17\u6570\uff0c\u90a3\u4e48\u5982\u679c\u4f60\u968f\u673a\u6311\u9009\u4e00\u4e2a\u533a\u95f4\u4e2d\u7684\u6570\uff0c\u53d6\u5230\u7b54\u6848\u7684\u6982\u7387\u8d85\u8fc7 $\\frac{1}{2}$\u3002\u5982\u679c\u6709\u7b54\u6848\uff0c\u90a3\u4e48\u671f\u671b\u968f\u673a $O(1)$ \u6b21\u5c31\u80fd\u627e\u5230\uff0c\u5e76\u4e14\u968f\u673a $k$ \u6b21\u540e\u8fd8\u672a\u627e\u5230\u7b54\u6848\u7684\u6982\u7387\u662f\u4e0d\u8d85\u8fc7 $(\\frac{1}{2})^k$ \u7684\uff0c\u56e0\u6b64\u5982\u679c\u591a\u968f\u51e0\u6b21\u540e\u8fd8\u672a\u627e\u5230\u7b54\u6848\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba4\u5b9a\u8be5\u533a\u95f4\u6ca1\u6709\u7edd\u5bf9\u4f17\u6570\u3002\u6211\u5728\u4ee3\u7801\u4e2d\u628a\u8fd9\u4e2a\u9608\u503c\u5b9a\u4e3a\u4e86 $40$ \u6b21\u3002\n\n\u6700\u540e\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u600e\u4e48\u7b97\u4e00\u4e2a\u503c\u5728\u533a\u95f4\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u8fd9\u91cc\u76f4\u63a5\u9009\u62e9\u7528 `vector` \u5b58\u4e0b\u6bcf\u4e00\u4e2a\u989c\u8272\u7684\u5e8f\u5217\uff0c\u7136\u540e\u5728\u5bf9\u5e94\u989c\u8272\u7684 `vector` \u4e2d\u4e8c\u5206\u5de6\u53f3\u7aef\u70b9\uff0c\u4e0b\u6807\u4e4b\u5dee\u5373\u4e3a\u51fa\u73b0\u6b21\u6570\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <random>\nconst int N = 50005;\nint n, m;\nint c[N];\nstd::vector<int> vec[N];\ninline int calc(int l, int r, int c)\n{\n    return std::upper_bound(vec[c].begin(), vec[c].end(), r) - std::lower_bound(vec[c].begin(), vec[c].end(), l);\n}\nstd::mt19937 rng(114514);\nint main(void)\n{\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= n;++i)\n        scanf(\"%d\", c + i), vec[c[i]].push_back(i);\n    for (int i = 1, l, r; i <= m;++i)\n    {\n        scanf(\"%d%d\", &l, &r);\n        int ans = 0;\n        for (int j = 1; j <= 40; ++j)\n        {\n            int t = rng() % (r - l + 1) + l;\n            int cnt = calc(l, r, c[t]);\n            if(cnt * 2 > r - l + 1)\n            {\n                ans = c[t];\n                break;\n            }\n        }\n        printf(\"%d\\n\", ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1662602147,
        "uid": 244204,
        "name": "namelessgugugu",
        "ccfLevel": 9,
        "title": "P7252 \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u662f\u849f\u84bb\u7684\u7b2c\u4e09\u7bc7\u9898\u89e3\uff0c\u6587\u7b14\u53ef\u80fd\u4e0d\u592a\u597d\uff0c\u5e0c\u671b\u5404\u4f4d\u795e\u4ed9\u80fd\u7406\u89e3\u3002\n\n\u8fd9\u662f\u4e00\u9053\u9898\u53ef\u4ee5\u7528\u4e3b\u5e2d\u6811\u6765\u505a\uff0c\u6211\u4eec\u5148\u4ece\u8fd9\u9053\u9898\u7684\u7956\u5b97\u8bf4\u8d77\u3002\n\n---\n\n> \u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217\uff0c\u652f\u6301\u63d2\u5165\u4e00\u4e2a\u503c\uff0c\u67e5\u8be2\u51fa\u73b0\u6b21\u6570\u4e25\u683c\u5927\u4e8e\u5e8f\u5217\u4e2d\u5143\u7d20\u4e2a\u6570\u7684\u4e00\u534a\u7684\u6570\uff0c\u82e5\u4e0d\u5b58\u5728\u5219\u8fd4\u56de$0$\u3002\n\n\u5f00\u4e00\u68f5\u503c\u57df\u7ebf\u6bb5\u6811\uff0c\u7531\u4e8e\u4e00\u4e2a\u6b63\u6574\u6570 $x$ \u5982\u679c\u5927\u4e8e\u53e6\u4e00\u4e2a\u6570 $k$\uff0c\u5219 $x$ \u52a0\u4e0a\u5176\u4ed6\u6b63\u6574\u6570\uff0c\u4f9d\u7136\u5927\u4e8e $k$ \u3002~~\u5e9f\u8bdd\uff01~~\n\n\u6240\u4ee5\u6211\u4eec\u8fd9\u4e48\u5199\u5c31\u597d\u4e86\uff1a\n```cpp\n//\u6ca1\u6709\u7f16\u8bd1\u8fc7\uff0c\u4e0d\u4fdd\u8bc1\u6b63\u786e\u3002\nint query(int rt,int k,int l,int r) {\n    if(l==r)\n        return l;\n    int mid=l+r>>1;\n    if(node[node[rt].lc].sum>k)//\u5982\u679c\u5de6\u8fb9\u7684\u548c\u5927\u4e8ek\uff0c\u5de6\u8fb9\u5c31\u6709\u53ef\u80fd\u6709\u5927\u4e8ek\u7684\n        return query(node[rt].lc,k,l,mid);\n    if(node[node[rt].rc].sum>k)//\u5982\u679c\u53f3\u8fb9\u7684\u548c\u5927\u4e8ek\uff0c\u53f3\u8fb9\u5c31\u6709\u53ef\u80fd\u6709\u5927\u4e8ek\u7684\n        return query(node[rt].rc,k,mid+1,r);\n    return 0;//\u5982\u679c\u6ca1\u6709\u4e00\u8fb9\u5927\u4e8ek\uff0c\u5c31\u8fd4\u56de0\n}rn 0;\n}\n```\n---\n\n\u90a3\u6211\u4eec\u8fd9\u9053\u9898\u5c31\u5f00 $n+1$ \u68f5\u503c\u57df\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u67e5\u8be2\u7684\u65f6\u5019\u5c31\u628a\u7b2c $r$ \u68f5\u7ebf\u6bb5\u6811\u51cf\u6389\u7b2c $l-1$ \u68f5\u7ebf\u6bb5\u6811\u5c31\u597d\u4e86\uff01\n\n\u67e5\u8be2\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nint query(int rtl,int rtr,int k,int l,int r) {\n    if(l==r)\n        return l;\n    int lcsum=node[node[rtr].lc].sum-node[node[rtl].lc].sum,rcsum=node[node[rtr].rc].sum-node[node[rtl].rc].sum; //\u6ce8\u610f\u7528\u53f3\u8fb9\u7684\u7ebf\u6bb5\u6811\u51cf\u6389\u5de6\u8fb9\u7684\n    int mid=l+r>>1;\n    if(lcsum>k)\n        return query(node[rtl].lc,node[rtr].lc,k,l,mid);\n    if(rcsum>k)\n        return query(node[rtl].rc,node[rtr].rc,k,mid+1,r);\n    return 0;\n}\n```\n\u4f46\u5982\u679c\u771f\u7684\u5f00 $n+1$ \u68f5\u7ebf\u6bb5\u6811\u7a7a\u95f4\u590d\u6742\u5ea6\u4f1a\u7206\u70b8\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4f18\u5316\uff1a\n\n1. \u52a8\u6001\u5f00\u70b9\n1. \u53ef\u6301\u4e45\u5316\n\n\u5355\u7eaf\u52a8\u6001\u5f00\u70b9\u53ef\u80fd\u80fd\u8fc7\uff0c\u53ea\u6709\u53ef\u6301\u4e45\u5316\u5e94\u8be5\u80fd\u8fc7\uff0c\u4f46\u6211\u4e24\u4e2a\u90fd\u7528\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<cstdio>\nstruct tree{\n    int sum;\n    int lc, rc;\n    tree(int a=0,int b=0,int c=0) {\n        sum=a;\n        lc=b;\n        rc=c;\n    }\n}node[850001];\nint cnt;\nint newnode(int a,int b,int c) {//\u65b0\u5efa\u4e00\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\uff0c\u8d1f\u8d23\u7684\u533a\u95f4\u7684\u548c\u4e3aa\uff0c\u5de6\u53f3\u513f\u5b50\u5206\u522b\u4e3ab\u3001c\uff0c\u5e76\u8fd4\u56de\u8fd9\u4e2a\u8282\u70b9\n    node[++cnt]=tree(a,b,c);\n    return cnt;\n}\nint add(int rt,int x,int l,int r) {//\u590d\u5236rt\u8fd9\u68f5\u7ebf\u6bb5\u6811\uff0c\u5e76\u5728x\u4f4d\u7f6e\u4e0a\u52a0\u4e00\uff0c\u5e76\u8fd4\u56de\u65b0\u7ebf\u6bb5\u6811\uff0c\u5176\u4e2dl\u548cr\u8868\u793a\u8fd9\u68f5\u7ebf\u6bb5\u6811\u8d1f\u8d23\u7684\u8303\u56f4\n    if(l==r)\n        return newnode(node[rt].sum+1,0,0);\n    int mid=l+r>>1;\n    if(x<=mid) \n        return newnode(node[rt].sum+1,add(node[rt].lc,x,l,mid),node[rt].rc);\n    return newnode(node[rt].sum+1,node[rt].lc,add(node[rt].rc,x,mid+1,r));\n}\nconst int qwq=0;\nint query(int rtl,int rtr,int k,int l,int r) {\n    if(l==r)\n        return l;\n    int lcsum=node[node[rtr].lc].sum-node[node[rtl].lc].sum,rcsum=node[node[rtr].rc].sum-node[node[rtl].rc].sum;\n    int mid=l+r>>1;\n    if(lcsum>k)\n        return query(node[rtl].lc,node[rtr].lc,k,l,mid);\n    if(rcsum>k)\n        return query(node[rtl].rc,node[rtr].rc,k,mid+1,r);\n    return 0;\n}\nint root[50001];\nint main() {\n    int n,m;\n    std::scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++) {\n        int x;\n        std::scanf(\"%d\",&x);\n        root[i]=add(root[i-1],x,1,50000);\n    }\n    while(m--) {\n        int s,t;\n        std::scanf(\"%d%d\",&s,&t);\n        std::printf(\"%d\\n\",query(root[s-1],root[t],t-s+1>>1,1,50000));\n    }\n    return qwq;\n}\n```\n\n\u7801\u5b57\u4e0d\u6613\uff0c\u6c42\u70b9\u4e2a\u8d5eqwq\u3002",
        "postTime": 1614066323,
        "uid": 203008,
        "name": "toaru",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P7252 \u3010[JSOI2011]\u68d2\u68d2\u7cd6\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ecf\u5178\u9898\uff0c\u533a\u95f4\u4e25\u683c\u8fc7\u534a\u4f17\u6570\u3002\u82e5\u4e0d\u5b58\u5728\u5219\u8f93\u51fa $0$\u3002\n\n## sol\n\n\u4ffa\u6765\u4ecb\u7ecd\u4e00\u4e9b~~\u65e9\u5df2\u666e\u53ca\u7684~~\u9ad8\u79d1\u6280\u3002\n\n~~\u968f\u673a\u5316\u4e00\u8fb9\u53bb\u5566~~\n\n#### \u4e00\u4e2a\u975e\u5e38\u89c4\u7684\u5de7\u5999\u505a\u6cd5\n\n\u62c6\u4f4d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4f4d\u7ec4\u6210\u7684 $01$ \u5e8f\u5217\uff0c\u5efa\u524d\u7f00\u548c\u4ee5\u7ef4\u62a4\u533a\u95f4\u4e2d $1$\uff08$0$ \u4e5f\u53ef\uff09\u7684\u4e2a\u6570\u3002\n\n#### \u5bf9\u4e8e\u7b54\u6848\u7684\u6bcf\u4e00\u4f4d\u7684\u72b6\u6001\uff0c\u5c31\u662f\u8fd9\u4e00\u4f4d\u5bf9\u5e94\u7684 $01$ \u5e8f\u5217\u7684 $[l,r]$ \u533a\u95f4\u4e2d\u72b6\u6001\u6570\u8f83\u591a\u7684\u90a3\u4e2a\u3002\n\n\u5b9e\u73b0\u7ec6\u8282\uff1a\u62c6\u4f4d\u7684\u65f6\u5019\uff0c\u9010\u4f4d\u5206\u5f00\u5904\u7406\uff0c\u53ef\u4ee5\u505a\u5230 $O(n)$ \u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u3002\n\n\u505a\u5b8c\u4e86\u3002\u3002\u5417\uff1f\n\n\u5e76\u6ca1\u6709\uff01\u5f53\u533a\u95f4\u4e2d\u4e0d\u5b58\u5728\u4e25\u683c\u4f17\u6570\u65f6\u4f1a\u51fa\u9519\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a check \u6765\u9a8c\u8bc1\u6c42\u51fa\u6765\u7684\u7b54\u6848\u662f\u5426\u6b63\u786e\u3002\u3002\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u6c42\u533a\u95f4\u4e2d\u67d0\u6570\u51fa\u73b0\u6b21\u6570\u3002\n\n~~\u83ab\u961f\u4e8c\u6b21\u79bb\u7ebf\u5927\u5bb6\u90fd\u5b66\u8fc7\u5427\uff1f\u90a3\u4f60\u5e94\u8be5\u4f1a\u90a3\u4e2a\u79bb\u7ebf\u626b\u63cf\u7ebf~~\n\n\u6ca1\u5b66\u8fc7\u4e5f\u6ca1\u6709\u5173\u7cfb\u3002\u6211\u4eec\u5c06\u6c42 $[l,r]$ \u4e2d $x$ \u51fa\u73b0\u6b21\u6570\u5dee\u5206\u4e3a $[1,r]-[1,l-1]$\u3002\u73b0\u5728\u6240\u6709\u7684\u8be2\u95ee\u90fd\u53d8\u6210\u4e86 $[1,k]$ \u7684\u5f62\u5f0f\u3002\u628a\u6240\u6709\u8be2\u95ee\u6309 $k$ \u5f52\u7c7b\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u6392\u5e8f\uff0c\u5f53\u7136\u8fd9\u4e00\u6b65\u662f $O(n)$ \u7684\uff09\u3002\n\n\u4ece\u5c0f\u5230\u5927\u626b\u63cf\u3002\u53e6\u5916\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4 $t$\u3002\u8bbe\u6211\u4eec\u626b\u5230\u4e86 $p$ \u8fd9\u4e2a\u4f4d\u7f6e\u5219 $t_i$ \u6240\u8868\u793a\u7684\u5c31\u662f $[1,p]$ \u4e2d $i$ \u7684\u51fa\u73b0\u6b21\u6570\u3002\u5373\u6bcf\u626b\u5230\u4e00\u4e2a\u4f4d\u7f6e $p$\uff0c$t_{a_p}\\leftarrow t_{a_p}+1$\u3002\n\n\u8fd9\u6837\u626b\u5230 $k$ \u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5 $O(1)$ \u56de\u7b54\u6240\u6709\u201c$[1,k]$ \u4e2d $x$ \u7684\u51fa\u73b0\u6b21\u6570\u201d\u7684\u8be2\u95ee\uff01\u7b54\u6848\u5c31\u662f $t_x$\uff01~~\u592a\u795e\u5947\u4e86\uff01~~\n\n\u8fd9\u4e2a\u7b97\u6cd5\u5c31\u5b8c\u6574\u4e86\u3002\u53ef\u60dc\u662f\u79bb\u7ebf\u7684\u3002\u4e0b\u6587\u4f1a\u4ecb\u7ecd\u53e6\u5916\u4e00\u79cd check \u65b9\u6cd5\u3002\n\nhttps://www.luogu.com.cn/paste/2jpfpq4j\n\n$O(n\\log n)-(\\log n)$\n\n\n#### \u6b63\u9053\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u6469\u5c14\u6295\u7968\u6cd5\u3002\n\n\u7b80\u4ecb\u4e00\u4e0b\uff0c\u8003\u8651\u589e\u91cf\u6c42\u51fa\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u4e25\u683c\u4f17\u6570\u3002\u7ef4\u62a4\u5f53\u524d\u4e25\u683c\u4f17\u6570 $p$ \u548c\u4e00\u4e2a $cnt$\u3002\u52a0\u5165\u4e00\u4e2a\u6570 $x$ \u65f6\uff0c\u5982\u679c $cnt=0$ \u5c31\u628a $p$ \u7528 $x$ \u66ff\u6362\u6389\u3002\u518d\u5982\u679c\uff08\u6ce8\u610f\u201c\u518d\u201d\uff0c\u662f\u6267\u884c\u4e86\u4e0a\u4e00\u6b65\u66ff\u6362\u540e\u518d\u6267\u884c\uff0c\u4fdd\u8bc1\u4e86\u52a0\u5165\u65b0\u7684\u6570\u540e $cnt=1$\uff09 $x=p$ \u5c31\u628a $cnt$ \u52a0 $1$\uff0c\u5426\u5219\u5c31\u51cf $1$\u3002\n\n\u4ed6\u662f\u6b63\u786e\u7684\u56e0\u4e3a\u5373\u4f7f\u4e25\u683c\u4f17\u6570\u548c\u5176\u4ed6\u6570\u90fd\u62b5\u6d88\u4e86\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u3002\n\n\u5e94\u8be5\u53ef\u4ee5\u770b\u51fa\u4ed6\u662f\u4e00\u4e2a\u534a\u7fa4\u4fe1\u606f\u3002\u3002\u901a\u4fd7\u6765\u8bb2\u5c31\u662f\u4e00\u822c\u7ebf\u6bb5\u6811\u53ef\u4ee5\u7ef4\u62a4\u7684\u4e1c\u897f\u3002\n\n\u6240\u4ee5\u4f60\u628a\u4ed6\u4e22\u5230\u7ebf\u6bb5\u6811\u4e0a\u5c31\u597d\u4e86\u3002\uff08\u6211\u7528\u7684 zkw\uff09\n\n\u540c\u6837\u8981 check\u3002\n\n$O(n)-(\\log n)$\n\nhttps://www.luogu.com.cn/paste/9hoisbd3\n\n\n#### \u771f\u00b7\u9ad8\u79d1\u6280\n\n\u55ef\u65e2\u7136\u662f\u534a\u7fa4\u4fe1\u606f\uff0c\u5b66\u672f\u754c\u6709 $O(n\\alpha(n))$ \u7684\u4e00\u822c\u7ef4\u62a4\u65b9\u5f0f\u3002$\\alpha$ \u4e3a\u53cd\u963f\u514b\u66fc\u51fd\u6570\u3002\n\n\u4f46\u8fd9\u4e2a\u7279\u6b8a\u95ee\u9898\u6709\u4e25\u683c $O(n)-O(1)$ \u7684\u505a\u6cd5\u3002\n\n\u770b\u8fd9\u91cc https://zhuanlan.zhihu.com/p/79423299 \u8fd9\u91cc\u9762\u6709\u53e6\u5916\u4e00\u79cd\u9ad8\u8bba check\n\nsto hqztrue orz",
        "postTime": 1627463219,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7252 [JSOI2011] \u68d2\u68d2\u7cd6"
    },
    {
        "content": "\u533a\u95f4\u8fc7\u534a\u4f17\u6570\u3002\n\n\u770b\u5230\u9898\u76ee\u81ea\u7136\u60f3\u5230\u56de\u6eda\u83ab\u961f\u3002\n\n\u6211\u4eec\u53d1\u73b0\u9898\u76ee\u6709\u5982\u4e0b\u7279\u5f81\uff1a\n+ \u9759\u6001\uff08\u4e0d\u5e26\u4fee\u6539\uff0c\u591a\u6b21\u67e5\u8be2\uff09\n+ \u6bcf\u6b21\u67e5\u8be2\u662f\u533a\u95f4 $[l,r]$\n+ \u7edf\u8ba1\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u800c\u8fd9\u4e2a\u662f\u7ecf\u5178\u7684\u53ef\u4ee5\u7528\u83ab\u961f\u505a\u7684\u95ee\u9898\n\n\u5224\u65ad\u662f\u5426\u5b58\u5728\u6570\u7684\u51fa\u73b0\u6b21\u6570\u4e25\u683c\u5927\u4e8e\u533a\u95f4\u957f\u5ea6\u7684\u4e00\u534a\uff0c\u5c31\u7b49\u4ef7\u4e8e\u5224\u65ad\u533a\u95f4\u91cc\u6240\u6709\u6570\u7684\u51fa\u73b0\u6b21\u6570\u6700\u5927\u503c\u662f\u5426\u4e25\u683c\u5927\u4e8e\u533a\u95f4\u957f\u5ea6\u7684\u4e00\u534a\u3002\n\n\u51fa\u73b0\u6b21\u6570\u7684\u6700\u5927\u503c\uff0c\u662f\u4e00\u4e2a\u5728\u6dfb\u52a0\u8fc7\u7a0b\u4e2d\u6613\u7ef4\u62a4\uff0c\u800c\u5728\u5220\u9664\u8fc7\u7a0b\u4e2d\u4e0d\u6613\u7ef4\u62a4\u7684\u4fe1\u606f\u3002\u56e0\u6b64\u6211\u4eec\u8003\u8651\u4f7f\u7528\u56de\u6eda\u83ab\u961f\uff0c\u4e5f\u5c31\u662f\u4e0d\u5220\u9664\u83ab\u961f\u3002\n\n\u56de\u6eda\u83ab\u961f\u7684\u5b9e\u73b0\u65b9\u5f0f\u53ca\u7ec6\u8282\u4e0d\u4e86\u89e3\u7684\u8bf7\u81ea\u884c\u79fb\u6b65\u6a21\u677f\u9898\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u4e8e\u662f\u8fd9\u9898\u53d8\u6210\u4e86\u4e00\u9053\u677f\u5b50\u9898\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt n)$\uff0c\u7531\u4e8e $n,m$ \u540c\u9636\u7edf\u4e00\u4f7f\u7528 $n$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\nconst int maxn = 5e4 + 10 , maxm = 5e4 + 10, maxb = 230;\nint n, m;\nint a[maxn];\nstruct query {\n    int l, r, id;\n} q[maxm];\nint ans[maxm];\nint blen, bnum, bel[maxn];\nint cnt[maxn];\nint L[maxb], R[maxb];\n\nbool cmp(const query &x, const query &y) { return bel[x.l] != bel[y.l] ? bel[x.l] < bel[y.l] : x.r < y.r; }\n\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    for(int i = 1; i <= n; ++i) scanf(\"%d\", a + i);\n    for(int i = 1; i <= m; ++i) {\n        scanf(\"%d%d\", &q[i].l, &q[i].r);\n        q[i].id = i;\n    }\n    blen = sqrt(n);\n    bnum = n / blen;\n    for(int i = 1; i <= bnum; ++i) {\n        L[i] = (i - 1) * blen + 1;\n        R[i] = i * blen;\n    }\n    if(R[bnum] != n) {\n        L[bnum + 1] = R[bnum] + 1;\n        R[++bnum] = n;\n    }\n    for(int i = 1; i <= bnum; ++i) fill(bel + L[i], bel + R[i] + 1, i);\n    sort(q + 1, q + m + 1, cmp);\n    int l = 1, r = 0, lst = 0, mx, fr;\n    for(int i = 1; i <= m; ++i) {\n        if(bel[q[i].l] != lst) {\n            while(r >= l) --cnt[a[r--]];\n            mx = 0; fr = 0;\n            lst = bel[q[i].l];\n            r = R[lst];\n            l = r + 1;\n        }\n        if(bel[q[i].l] == bel[q[i].r]) {\n            for(int j = q[i].l; j <= q[i].r; ++j)\n                if(++cnt[a[j]] > mx)\n                    mx = cnt[fr = a[j]];\n            ans[q[i].id] = mx > (q[i].r - q[i].l + 1) / 2 ? fr : 0;\n            for(int j = q[i].l; j <= q[i].r; ++j) --cnt[a[j]];\n            mx = 0; fr = 0;\n            continue;\n        }\n        while(r < q[i].r) {\n            if(++cnt[a[++r]] > mx)\n                mx = cnt[fr = a[r]];\n        }\n        int lol = l, tmp = mx, ffr = fr;\n        while(lol > q[i].l) {\n            if(++cnt[a[--lol]] > tmp)\n                tmp = cnt[ffr = a[lol]];\n        }\n        ans[q[i].id] = tmp > (q[i].r - q[i].l + 1) / 2 ? ffr : 0;\n        while(lol < l) --cnt[a[lol++]];\n    }\n    for(int i = 1; i <= m; ++i) printf(\"%d\\n\", ans[i]);\n    return 0;\n}\n```",
        "postTime": 1660817903,
        "uid": 286770,
        "name": "Andrewzdm",
        "ccfLevel": 7,
        "title": "P7252 [JSOI2011] \u68d2\u68d2\u7cd6"
    },
    {
        "content": "\u7b80\u5316\u4e00\u4e0b\u9898\u610f\uff0c\u5176\u5b9e\u5c31\u662f\u8981\u6c42\u533a\u95f4\u4f17\u6570\uff0c\u4e14\u533a\u95f4\u4f17\u6570\u6570\u91cf\u5fc5\u987b\u8fc7\u534a\u3002\u663e\u7136\u5bf9\u4e8e\u8fd9\u6837\u7684\u533a\u95f4\u8be2\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u6765\u5904\u7406\u3002\u770b\u5230\u9898\u89e3\u533a\u91cc\u7684\u5927\u4f6c\u8fd8\u6709\u7528\u524d\u7f00\u548c\u6216\u83ab\u961f\u6216\u968f\u673a\u5316\u5904\u7406\u7684\uff0c\u4f46\u662f\u56e0\u4e3a\u849f\u84bb\u4e0d\u4f1a\u6240\u4ee5\u8fd9\u91cc\u7528\u7b80\u5355\u597d\u61c2\u7684\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u6765\u5904\u7406 qwq\u3002\n\n\u6211\u4eec\u5148\u719f\u7ec3\u5730\u6253\u51fa\u4e00\u5957\u53ef\u6301\u4e45\u5316\u6743\u503c\u7ebf\u6bb5\u6811\u7684\u677f\u5b50\uff0c\u5728\u8f93\u5165\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u63d2\u5165\uff0c\u7136\u540e\u5728\u67e5\u8be2\u533a\u95f4\u4f17\u6570\u7684\u65f6\u5019\u5229\u7528\u5206\u6cbb\u7684\u601d\u60f3\uff0c\u5982\u679c\u5de6\u53f3\u4e24\u8fb9\u7684\u67d0\u4e00\u8fb9\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u603b\u6b21\u6570\u7684\u4e00\u534a\uff0c\u90a3\u4e48\u5c31\u5728\u8be5\u533a\u95f4\u4e0a\u7ee7\u7eed\u67e5\u627e\uff0c\u5426\u5219\u5c31\u53bb\u53e6\u4e00\u533a\u95f4\u67e5\u627e\u3002\n\n\u9700\u8981\u7528\u5230\u79bb\u6563\u5316\u5904\u7406\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\uff0c\u4ee3\u7801\u5b9e\u73b0\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u57fa\u672c\u4e0a\u5c31\u662f\u677f\u5b50\uff0c\u5982\u679c\u5bf9\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u638c\u63e1\u5f97\u4e0d\u592a\u719f\u7ec3\u7684\u53ef\u4ee5\u53bb\u770b\u770b\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u7684\u4e24\u4e2a\u6a21\u677f\u9898\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int maxn=1e6+5;\nint rr[maxn],c[maxn],b[maxn],cnt;\n\nstruct node\n{\n\tint ls,rs,v;\n}t[maxn];\n\nint build(int l,int r)\n{\n\tint id=++cnt;\n\tt[id].v=0;\n\tif(l==r) return id;\n\tint mid=(l+r)/2;\n\tt[id].ls=build(l,mid);\n\tt[id].rs=build(mid+1,r);\n\treturn id;\n} \n\nvoid update(int now,int pre,int l,int r,int k)\n{\n\tt[now].ls=t[pre].ls,t[now].rs=t[pre].rs,t[now].v=t[pre].v+1;\n\tif(l==r) return;\n\tint mid=(l+r)/2;\n\tif(k<=mid) t[now].ls=++cnt,update(t[now].ls,t[pre].ls,l,mid,k);\n\telse t[now].rs=++cnt,update(t[now].rs,t[pre].rs,mid+1,r,k);\n\tt[now].v=t[t[now].ls].v+t[t[now].rs].v;\n}\n\nint query(int u,int v,int k,int l,int r)\n{\n\tif(l>=r) return b[l];\n\tint ll=abs(t[t[v].ls].v-t[t[u].ls].v),rr=abs(t[t[v].rs].v-t[t[u].rs].v);\n\tint mid=(l+r)/2;\n\tif(ll>k) return query(t[u].ls,t[v].ls,k,l,mid);\n\tif(rr>k) return query(t[u].rs,t[v].rs,k,mid+1,r);\n\treturn 0;\n}\n\nint main()\n{\n\tint n,m;cin>>n>>m;\n\tfor(int i=1;i<=n;i++) cin>>c[i],b[i]=c[i];\n\tsort(b+1,b+n+1);\n\tint mm=unique(b+1,b+n+1)-b-1;rr[0]=build(1,mm);\n\tfor(int i=1;i<=n;i++) \n\t\tc[i]=lower_bound(b+1,b+mm+1,c[i])-b,rr[i]=++cnt,update(rr[i],rr[i-1],1,mm,c[i]);\n\twhile(m--)\n\t{\n\t\tint s,t;cin>>s>>t;\n\t\tcout<<query(rr[s-1],rr[t],(t-s+1)/2,1,mm)<<endl;\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1678346927,
        "uid": 822239,
        "name": "ncwzdlsd",
        "ccfLevel": 3,
        "title": "P7252\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5f88\u6c34\uff0c\u5199\u8fd9\u7bc7\u9898\u89e3\u53ea\u662f\u56e0\u4e3a\u5176\u4ed6 AC \u4ee3\u7801\u90fd\u6709\u70b9\u957f\u3002\n\n\u5982\u679c $r-l < 2T$ \u66b4\u529b\u5904\u7406\n\n\u5426\u5219\u7b54\u6848\u51fa\u73b0\u6b21\u6570\u5fc5\u7136\u5927\u4e8e $T$ , \u90a3\u4e48\u6211\u4eec\u8bb0\u5f55\u6bcf\u4e2a\u51fa\u73b0\u6b21\u6570\u5927\u4e8e $T$ \u7684\u6570\u51fa\u73b0\u6b21\u6570\u524d\u7f00\u548c\uff0c\u6328\u4e2a\u5224\u65ad\u3002\n\n\u590d\u6742\u5ea6 $O(2qT+\\frac{n+q}{T})$ \uff0c\u53d6$T=\\sqrt n$ \u5373\u53ef AC\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 50005\nint S[N][251],i,c[N],g[251],a[N],j,l,r,cnt,n,m,mn,rv[N],fl;\nmain(){\n\tcin>>n>>m;\n\tfor(i=1;i<=n;++i)cin>>a[i],++c[a[i]];\n\tfor(i=1;i<N;++i)if(c[i]>200)g[++cnt]=i,rv[i]=cnt;\n\tmemset(c,0,sizeof(c));\n\tfor(i=1;i<=n;++S[i][rv[i]],++i)\n\t\tfor(j=1;j<=cnt;++j)S[i][j]=S[i-1][j];\n\twhile(m--){\n\t\tcin>>l>>r;mn=(r-l+1>>1);fl=0;\n\t\tif(r-l<400){\n\t\t\tfor(i=l;i<=r;++i)if((++c[a[i]])>mn){cout<<a[i]<<\"\\n\",fl=1;break;}\n\t\t\tfor(;i>=l;--i)c[a[i]]=0;\n\t\t}\n\t\telse for(--l,i=1;i<=cnt;++i)\n\t\t\tif(S[r][i]-S[l][i]>mn){cout<<g[i]<<\"\\n\",fl=1;break;}\n\t\tif(!fl)cout<<\"0\\n\";\n\t}\n}\n```",
        "postTime": 1612877197,
        "uid": 126321,
        "name": "eexyz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P7252 \u3010[JSOI2011] \u68d2\u68d2\u7cd6\u3011"
    },
    {
        "content": "\u4e3b\u5e2d\u6811\u6a21\u677f\u9898\u6253\u5361\n\n\u5148\u628a\u6bcf\u4e2a\u6570\u63d2\u8fdb\u4e3b\u5e2d\u6811\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u5224\u65ad\u4f17\u6570\u5728\u5de6\u8fb9\u8fd8\u662f\u5728\u53f3\u8fb9\u3002\u663e\u7136\u5982\u679c\u5de6\u8fb9\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u4e00\u534a\u5c31\u5728\u5de6\u8fb9\uff0c\u5426\u5219\u5c31\u5728\u53f3\u8fb9\u3002\n\n\u9700\u8981\u79bb\u6563\u5316\uff0c\u4ee3\u7801\u548c\u9759\u6001\u533a\u95f4\u7b2c k \u5c0f\u6ca1\u4ec0\u4e48\u533a\u522b\u3002\n\n```cpp\n#include <map>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define ll long long\nusing namespace std;\n\ninline int read() {\n\tint x = 0, w = 1;char ch = getchar();\n\twhile (ch > '9' || ch < '0') { if (ch == '-')w = -1;ch = getchar(); }\n\twhile (ch >= '0' && ch <= '9')x = x * 10 + ch - '0', ch = getchar();\n\treturn x * w;\n}\ninline void write(int x) {\n    if (x < 0) putchar('-'), x = -x;\n    if (x > 9) write(x / 10);\n    putchar(x % 10 + '0');\n}\n\nconst int maxn = 1e6 + 5;\nconst int mod = 1e9 + 7;\nconst int inf = 1e9;\n\ninline int min(int x, int y) { return x < y ? x : y; }\ninline int max(int x, int y) { return x > y ? x : y; }\n\nstruct node {\n    int val, lson, rson;\n} tree[maxn << 6];\nint a[maxn], root[maxn], pos[maxn], tmp[maxn], b[maxn];\nint n, m, cnt = 1, tot;\n\n#define ls(x) tree[x].lson\n#define rs(x) tree[x].rson\n#define val(x) tree[x].val\ninline void pushup(int x) {\n    val(x) = val(ls(x)) + val(rs(x));\n}\ninline void build(int x, int l, int r) {\n    val(x) = 0;\n    if (l != r) {\n    \tls(x) = ++cnt, rs(x) = ++cnt;\n    \tint mid = (l + r) >> 1;\n    \tbuild(ls(x), l, mid);\n    \tbuild(rs(x), mid + 1, r);\n\t}\n}\ninline void modify(int x, int pre, int to, int l, int r) {\n    ls(x) = ls(pre), rs(x) = rs(pre), val(x) = val(pre) + 1;\n    if (l == r) return;\n    int mid = (l + r) >> 1;\n    if (to <= mid) ls(x) = ++cnt, modify(ls(x), ls(pre), to, l, mid);\n    else rs(x) = ++cnt, modify(rs(x), rs(pre), to, mid + 1, r);\n    pushup(x);\n}\ninline int query(int ql, int qr, int l, int r, int k) {\n    if (l >= r) return b[l];\n    int L = val(ls(qr)) - val(ls(ql)), R = val(rs(qr)) - val(rs(ql));\n    int mid = (l + r) >> 1;\n    if (L > k) return query(ls(ql), ls(qr), l, mid, k);\n    if (R > k) return query(rs(ql), rs(qr), mid + 1, r, k);\n    return 0;\n}\n#undef ls(x)\n#undef rs(x)\n#undef val(x)\n \ninline void init() {\n\tfor (int i = 1;i <= n;i++) b[i] = a[i];\n    sort(b + 1, b + n + 1); tot = unique(b + 1, b + n + 1) - b - 1;\n    for (int i = 1;i <= n;i++) tmp[i] = lower_bound(b + 1, b + tot + 1, a[i]) - b;\n}\n\nint main(void) {\n    n = read(), m = read();\n    for (int i = 1;i <= n;i++) a[i] = read();\n    init(), root[0] = 1, build(1, 1, tot);\n    for (int i = 1;i <= n;i++) {\n    \troot[i] = ++cnt;\n    \tmodify(root[i], root[i - 1], tmp[i], 1, tot);\n\t}\n\twhile (m--) {\n\t\tint l = read(), r = read();\n\t\tprintf(\"%d\\n\", query(root[l - 1], root[r], 1, tot, (r - l + 1) >> 1));\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1612161226,
        "uid": 246019,
        "name": "_came11ia_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7252 \u3010[JSOI2011] \u68d2\u68d2\u7cd6\u3011"
    },
    {
        "content": "\u5927\u5bb6\u597d\uff0c\u6211\u975e\u5e38\u559c\u6b22\u66b4\u529b\u6570\u636e\u7ed3\u6784\uff0c\u4e8e\u662f\u5c31\u7528\u83ab\u961f\u8fc7\u4e86\u8fd9\u9053\u9898\u3002\n\n\u6211\u4eec\u8003\u8651\u5bf9\u8be2\u95ee\u8fdb\u884c\u79bb\u7ebf\uff0c\u7136\u540e\u8dd1\u83ab\u961f\uff0c\u540c\u65f6\u8bb0\u5f55\u51fa\u73b0\u6b21\u6570\u6700\u591a\u4e3a\u591a\u5c11\uff0c\u518d\u7528$multiset$\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u6b21\u6570\u5bf9\u5e94\u54ea\u4e00\u4e9b\u79cd\u7c7b\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff0c\u5982\u679c$maxn>((que[i].r-que[i].l+1)/2)$\u5c31\u8fd4\u56de$muliset$\u91cc\u9762\u7684\u503c\uff0c\u5426\u5219\u5c31\u8fd4\u56de0\n\n\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u770b\u4ee3\u7801\uff08\u542b\u90e8\u5206\u6ce8\u91ca\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 50005\nint n,m,a[N],b[N],c[N],len,an[N],ans,ll=1,rr,maxn;\nstruct question{\n\tint l,r,id;\n}que[N];\ninline int read(){\n\tint x=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9')ch=getchar();\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn x;\n}//\u5feb\u8bfb \ninline bool cmp(question x,question y){\n\tif(x.l/len==y.l/len)return ((x.l/len)&1)?x.r<y.r:x.r>y.r;\n\treturn x.l<y.l;\n}//\u6bd4\u8f83\u51fd\u6570 \nmultiset<int>s[N];\ninline void add(int x){\n\ts[b[a[x]]].erase(a[x]);\n\t--c[b[a[x]]],++b[a[x]];\n\ts[b[a[x]]].insert(a[x]);\n\t++c[b[a[x]]];\n\tif(b[a[x]]>maxn)++maxn;//\u5982\u679c\u8d85\u8fc7\u4e86\u6700\u5927\u503c\u5c31\u66f4\u65b0\u6700\u5927\u503c \n}\ninline void del(int x){\n\ts[b[a[x]]].erase(a[x]);\n\t--c[b[a[x]]],--b[a[x]];\n\ts[b[a[x]]].insert(a[x]);\n\t++c[b[a[x]]];\n\tif(b[a[x]]+1==maxn)maxn-=(c[b[a[x]]+1]==0);//\u5982\u679c\u6700\u5927\u503c\u6d88\u5931,\u5c31--\uff08\u56e0\u4e3a\u6b64\u65f6b[a[x]]\u4e3a\u6700\u5927\u503c\uff09\n}\nint main(){\n\tn=read(),m=read(),len=sqrt(n);\n\tfor(int i=1;i<=n;++i)a[i]=read();\n\tfor(int i=1;i<=m;++i)que[i].l=read(),que[i].r=read(),que[i].id=i;\n\tsort(que+1,que+m+1,cmp);\n\tfor(int i=1;i<=n;++i)s[0].insert(a[i]),++c[0];//\u6ce8\u610f\u4e00\u5b9a\u5728\u5f00\u59cb\u65f6\u8981\u52a0\u5165\uff0c\u5426\u5219\u4f1aRE \n\tfor(int i=1;i<=m;++i){\n\t\twhile(ll>que[i].l)add(--ll);\n\t\twhile(rr<que[i].r)add(++rr);\n\t\twhile(ll<que[i].l)del(ll++);\n\t\twhile(rr>que[i].r)del(rr--);//\u83ab\u961f\u6b63\u5e38\u64cd\u4f5c \n\t\tan[que[i].id]=(maxn>((que[i].r-que[i].l+1)/2))?(s[maxn].empty()?0:*s[maxn].begin()):0;//\u5224\u65ad\u662f\u5426\u6709\u89e3 \n\t}\n\tfor(int i=1;i<=m;++i)printf(\"%d\\n\",an[i]);\n\treturn 0;\n}\n```\n\n\u590d\u6742\u5ea6$\\mathcal{O}(n\\sqrt n\\log n)$\u80fd\u8fc7\n\n\u636e\u8bf4\u6b63\u89e3\u662f\u4e3b\u5e2d\u6811\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u601d\u8003\uff08\u597d\u50cf\u66f4\u597d\u5199\uff1f",
        "postTime": 1609940108,
        "uid": 262934,
        "name": "\u60df\u6709\u6cea\u5343\u884c",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P7252 \u3010[JSOI2011]\u68d2\u68d2\u7cd6\u3011"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u6c42\u533a\u95f4\u4e25\u683c\u5927\u4e8e\u533a\u95f4\u957f\u5ea6\u4e00\u534a\u7684\u4f17\u6570\uff0c\u82e5\u4e0d\u5b58\u5728\u5219\u8f93\u51fa0\u3002\n\n~~\u8fd9\u4e0d\u5c31\u4e3b\u5e2d\u6811\u6a21\u677f\u9898\u561b~~\n\n\n## \u9898\u76ee\u5206\u6790\n\n\u6c42\u533a\u95f4\u4f17\u6570\uff0c\u5176\u5b9e\u53ef\u4ee5\u5f88\u5bb9\u6613\u60f3\u5230\u4e3b\u5e2d\u6811\uff08\u5373\u53ef\u6301\u4e45\u5316\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u4e0d\u4f1a\u7684\u53ef\u4ee5\u5148\u53bb\u770b\u770b\u6a21\u677f\u9898[P3834](https://www.luogu.com.cn/problem/P3834)\uff09\u3002\u8fd9\u91cc\u7a0d\u5fae\u8bb2\u4e00\u4e0b\u4e3b\u5e2d\u6811\u7684\u57fa\u672c\u601d\u60f3\uff0c\u4ece\u5de6\u5230\u53f3\u6bcf\u63d2\u5165\u4e00\u4e2a\u6570 $a_i$ \u5c31\u4ea7\u751f\u4e00\u4e2a\u7248\u672c\u7684\u6743\u503c\u7ebf\u6bb5\u6811 $T_i$ \uff0c\u6743\u503c\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8bb0\u5f55\u4e00\u4e2a\u503c $sum$ \uff0c\u8868\u793a\u8be5\u8282\u70b9\u5bf9\u5e94\u503c\u57df $[L,R]$ \u4e00\u5171\u63d2\u5165\u8fc7\u591a\u5c11\u6570\uff0c\u5373\u5728\u6b64\u7248\u672c\u7684\u6743\u503c\u7ebf\u6bb5\u6811 $T_i$ \u4e2d\u503c\u57df\u533a\u95f4 $[L,R]$ \u91cc\u6709\u591a\u5c11\u4e2a\u6570\u3002\u5904\u7406\u5b8c\u6240\u6709\u6570\u540e\uff0c\u7528\u7c7b\u4f3c\u524d\u7f00\u548c\u7684\u64cd\u4f5c\u5c06 $T_R$ \u7684 $sum$ \u51cf\u53bb $T_{L-1}$ \u7684 $sum$ \uff0c\u5373\u53ef\u6c42\u51fa\u503c\u57df\u533a\u95f4 $[L,R]$ \u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u57fa\u4e8e\u4ee5\u4e0a\u4e3b\u5e2d\u6811\u5904\u7406\u533a\u95f4\u7b2c k \u5c0f\u95ee\u9898\u7684\u57fa\u672c\u601d\u60f3\uff0c\u6211\u4eec\u5df2\u7ecf\u80fd\u6c42\u51fa\u4efb\u610f\u533a\u95f4\u7684\u6570\u7684\u4e2a\u6570\uff0c\u4f46\u9898\u76ee\u8981\u6c42\u7684\u662f\u533a\u95f4\u4e25\u683c\u5927\u4e8e\u533a\u95f4\u957f\u5ea6\u4e00\u534a\u7684\u4f17\u6570\uff0c\u8fd9\u8981\u600e\u4e48\u505a\u5462\uff1f\n\n\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6743\u503c\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\uff0c\u5982\u679c\u5de6\u513f\u5b50\u7684\u6570\u7684\u4e2a\u6570\u6bd4\u603b\u6570\u4e00\u534a\u5927\uff0c\u90a3\u4e48\u6ee1\u8db3\u6761\u4ef6\u7684\u4f17\u6570\u5c31\u53ef\u80fd\u5728\u5de6\u513f\u5b50\u91cc\uff08\u4e5f\u53ef\u80fd\u6ca1\u6709\uff09\uff0c\u6b64\u65f6\u518d\u9012\u5f52\u627e\u5de6\u513f\u5b50\uff0c\u53f3\u513f\u5b50\u4e5f\u540c\u7406\u3002\u5982\u679c\u5de6\u53f3\u513f\u5b50\u7684\u6570\u7684\u4e2a\u6570\u90fd\u6bd4\u603b\u6570\u4e00\u534a\u5c0f\uff0c\u90a3\u663e\u7136\u5de6\u53f3\u513f\u5b50\u90fd\u4e0d\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u4f17\u6570\u3002\n\n\u8981\u6ce8\u610f\u4e00\u70b9\uff0c\u5f53\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u513f\u5b50\u6ee1\u8db3\u6761\u4ef6\u65f6\uff0c\u4f17\u6570\u4e0d\u4e00\u5b9a\u5728\u5de6\u513f\u5b50\u91cc\uff0c\u53f3\u513f\u5b50\u4e5f\u53ef\u80fd\u6ee1\u8db3\u6761\u4ef6\uff0c\u6240\u4ee5\u4e24\u8fb9\u90fd\u8981\u5224\u65ad\u548c\u9012\u5f52\u67e5\u627e\u3002\n\n\u4e3b\u5e2d\u6811\u66f4\u65b0\u548c\u67e5\u627e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u4e3a $O(n\\log n)$ \uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n+m)\\log n)$ \u3002\n\n\n## Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=50005;\nint n,m,cnt,len,ans;\n\nstruct node{\n    int ls,rs,sum,zl;\n}tree[maxn<<5];\nint c[maxn],root[maxn];\n\n//\u5efa\u6811\nint build(int l,int r){\n    int p=++cnt;\n    if(l==r){\n        tree[p].zl=1;\n        return p;\n    }\n    int mid=(l+r)>>1;\n    build(l,mid);\n    build(mid+1,r);\n\n    return p;\n}\n\n//\u63d2\u5165\u64cd\u4f5c\nint update(int l,int r,int now,int val){\n    int p=++cnt;\n    tree[p]=tree[now];\n    tree[p].sum++;\n\n    if(l==r)return p;\n\n    int mid=(l+r)>>1;\n\n    if(val<=mid)tree[p].ls=update(l,mid,tree[p].ls,val);\n    else tree[p].rs=update(mid+1,r,tree[p].rs,val);\n\n    return p;\n}\n\n//\u8be2\u95ee\nvoid query(int l,int r,int p,int q,int k){\n    if(l==r){\n        ans=l;\n        return;\n    }\n\n    int m=(l+r)>>1;\n\n    int lx=tree[tree[p].ls].sum-tree[tree[q].ls].sum;   //\u503c\u57df[l,m]\u4e0a\u6570\u7684\u4e2a\u6570\n    int rx=tree[tree[p].rs].sum-tree[tree[q].rs].sum;   //\u503c\u57df[m+1,r]\u4e0a\u6570\u7684\u4e2a\u6570\n\n    if(lx<=k and rx<=k){    //\u5982\u679c\u5de6\u53f3\u513f\u5b50\u7684\u6570\u7684\u4e2a\u6570\u90fd\u6bd4\u603b\u6570\u4e00\u534a\u5c0f\uff0c\u8bf4\u660e\u8be5\u533a\u95f4\u4e0a\u4e0d\u5b58\u5728\n        ans=0;\n        return;\n    }\n\n    if(lx>k)query(l,m,tree[p].ls,tree[q].ls,k);     //\u503c\u57df[l,m]\u4e0a\u6570\u7684\u4e2a\u6570\u5927\u4e8e\u603b\u6570\u4e00\u534a\uff0c\u5c31\u5c1d\u8bd5\u5728\u5de6\u8fb9\u627e\n\n    if(rx>k)query(m+1,r,tree[p].rs,tree[q].rs,k);   //\u503c\u57df[m+1,r]\u4e0a\u6570\u7684\u4e2a\u6570\u5927\u4e8e\u603b\u6570\u4e00\u534a\uff0c\u5c31\u5c1d\u8bd5\u5728\u53f3\u8fb9\u627e\n}\n\n\nint main(){\n    ios::sync_with_stdio(0);\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)cin>>c[i],len=max(len,c[i]);\n\n    root[0]=build(1,len);\n\n    for(int i=1;i<=n;i++)root[i]=update(1,len,root[i-1],c[i]);\n\n    while(m--){\n        int l,r,k;\n        cin>>l>>r;\n        k=(r-l+1)>>1;\n        query(1,len,root[r],root[l-1],k);\n        cout<<ans<<endl;\n    }\n\n    return 0;\n}\n\n```\n",
        "postTime": 1678418421,
        "uid": 464081,
        "name": "\u897f\u74dcnd",
        "ccfLevel": 4,
        "title": "P7252 [JSOI2011] \u68d2\u68d2\u7cd6 \u9898\u89e3"
    },
    {
        "content": "~~\u6211\u662f\u6bd2\u7624\u5927\u7801\u91cf\u9009\u624b\u3002~~\n\n\u8fd9\u9053\u9898\u7684\u52a0\u5f3a\u7248 [$P3765$](https://www.luogu.com.cn/problem/P3765)\uff0c\u672c\u6587\u4e3b\u8981\u8bb2\u89e3\u80fd\u8fc7\u52a0\u5f3a\u7248\u7684\u505a\u6cd5\uff08\u663e\u7136\u52a0\u5f3a\u7248\u80fd\u8fc7\uff0c\u8fd9\u9053\u9898\u4e5f\u81ea\u7136\u80fd\u8fc7\uff09\u3002\n\n## \u9898\u9762\u63cf\u8ff0\n\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $c$\uff0c$m$ \u6b21\u67e5\u8be2\u533a\u95f4\u4e25\u683c\u4f17\u6570\uff08\u51fa\u73b0\u6b21\u6570\u4e25\u683c\u5927\u4e8e\u533a\u95f4\u957f\u5ea6\u7684\u4e00\u534a\uff09\u3002\n\n$1\\leq n,m,c_i \\leq5\\times10^4$\n\n## \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u77e5\u9053\u4e00\u4e2a\u6c42\u4e25\u683c\u533a\u95f4\u4f17\u6570\u7684\u597d\u4e1c\u897f\uff0c\u53eb\u505a\u6469\u5c14\u6295\u7968\u6cd5\uff08\u4e0d\u4f1a\u8fd9\u4e2a\u7684\u8f6c\u53bb [$P2397$](https://www.luogu.com.cn/problem/P2397)\uff09\uff0c\u8fd9\u4e2a\u4e1c\u897f\u652f\u6301\u67e5\u8be2\u4e25\u683c\u533a\u95f4\u4f17\u6570\uff0c\u5982\u679c\u5f53\u524d\u533a\u95f4\u5b58\u5728\u4e25\u683c\u4f17\u6570\uff0c\u90a3\u4e48\u5176\u4e00\u5b9a\u6b63\u786e\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u662f\u4efb\u610f\u6570\u3002\n\n\u4f46\u662f\u73b0\u5728\u8981\u67e5\u8be2\u7684\u662f\u533a\u95f4\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6469\u5c14\u6295\u7968\u7684\u5408\u5e76\u8fc7\u7a0b\u5373\u53ef\uff0c\u5177\u4f53\u505a\u6cd5\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\u7ef4\u62a4\u533a\u95f4\u4f17\u6570\u662f\u4ec0\u4e48\u548c\u6469\u5c14\u6295\u7968\u7684\u503c\uff0c\u5982\u679c\u5de6\u53f3\u513f\u5b50\u4f17\u6570\u76f8\u540c\uff0c\u5219\u5408\u5e76\uff0c\u503c\u76f8\u52a0\uff0c\u5426\u5219\u53d6\u503c\u8f83\u5927\u7684\uff0c\u503c\u53d6\u5dee\u3002\n\n\u4f46\u662f\u4e4b\u524d\u8bf4\u8fc7\u4e86\uff0c\u53ea\u6709\u5b58\u5728\u4e25\u683c\u4f17\u6570\u65f6\uff0c\u6469\u5c14\u6295\u7968\u6cd5\u624d\u4fdd\u8bc1\u6b63\u786e\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u77e5\u9053\u7ebf\u6bb5\u6811\u627e\u5230\u7684\u533a\u95f4\u4f17\u6570\uff0c\u5176\u51fa\u73b0\u6b21\u6570\u662f\u5426\u4e25\u683c\u5927\u4e8e\u533a\u95f4\u957f\u5ea6\u7684\u4e00\u534a\uff0c\u600e\u4e48\u7ef4\u62a4\u5462\uff1f\u6211\u4f1a\u4e3b\u5e2d\u6811\uff01\u7136\u800c\u52a0\u5f3a\u7248\u5e26\u4fee\u3002\n\n\u6211\u4eec\u7528\u4e00\u4e2a\u66f4\u4e3a\u5de7\u5999\u7684\u6570\u636e\u7ed3\u6784\u2014\u2014\u5e73\u8861\u6811\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u79cd\u989c\u8272\u7ef4\u62a4\u4e00\u68f5\u5e73\u8861\u6811\uff0c\u5c06 $c_i=x$ \u7684\u4e0b\u6807 $i$ \u63d2\u5230 $x$ \u8fd9\u68f5\u5e73\u8861\u6811\u4e0a\u3002\n\n\u5047\u8bbe\u5f53\u524d\u627e\u5230\u7684\u7b54\u6848\u4e3a $col$\uff0c\u90a3\u4e48\u5c31\u5728 $col$ \u8fd9\u68f5\u5e73\u8861\u6811\u4e0a\u5c06\u533a\u95f4 $[l,r]$ \u5206\u88c2\u51fa\u6765\uff0c\u56e0\u4e3a\u5e73\u8861\u6811\u4e0a\u7684\u503c\u662f\u4e0b\u6807\uff0c\u6240\u4ee5\u76f4\u63a5\u6309\u503c\u5206\u88c2\u51fa\u6765\u5373\u53ef\u3002\u6b64\u65f6\u5206\u88c2\u51fa\u6765\u7684\u8fd9\u68f5\u5e73\u8861\u6811\u7684\u5927\u5c0f\u5373\u4e3a\u533a\u95f4\u5185 $col$ \u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u800c\u4e14\u8fd9\u4e2a\u663e\u7136\u652f\u6301\u4fee\u6539\uff0c\u6211\u4eec\u76f4\u63a5\u7ef4\u62a4\u6bcf\u4e2a\u503c\u5c5e\u4e8e\u54ea\u68f5\u5e73\u8861\u6811\uff0c\u4fee\u6539\u65f6\u5728\u539f\u6811\u4e0a\u5220\u6389\u5b83\uff0c\u7136\u540e\u518d\u628a\u5b83\u52a0\u5165\u5230\u65b0\u6811\u4e0a\u5373\u53ef\u3002\n\n## Code\n\n\u8fd9\u90e8\u5206\u4ee3\u7801\u5220\u53bb\u4e86\u52a0\u5f3a\u7248\u7684\u4fee\u6539\uff0c\u80fd\u591f\u901a\u8fc7\u6b64\u9898\uff0c\u4fee\u6539\u6309\u7167\u52a0\u5f3a\u7248\u8bf4\u7684\u76f4\u63a5\u7ef4\u62a4\u5373\u53ef\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n#include <cmath>\nusing namespace std;\nint read(){\n\tint x=0,f=1;char ch = getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-'){f=-1;}ch = getchar();}\n\twhile(ch>='0'&&ch<='9'){x = x*10+ch-'0';ch = getchar();}\n\treturn x*f;\n}\nconst int N = 5e5+5;\nstruct aa{\n\tint lc,rc,cnt,val;\n}tree[N*2];\naa pushup(aa ls,aa rs){\n\taa res;\n\tif(ls.val==rs.val){\n\t\tres.val = ls.val;\n\t\tres.cnt = ls.cnt+rs.cnt;\n\t}else if(ls.cnt>=rs.cnt){\n\t\tres.val = ls.val;\n\t\tres.cnt = ls.cnt-rs.cnt;\n\t}else{\n\t\tres.val = rs.val;\n\t\tres.cnt = rs.cnt-ls.cnt;\n\t}\n\treturn res;\n}\nvoid up(int u){\n\tint ls = tree[u].lc,rs = tree[u].rc;\n\ttree[u] = pushup(tree[ls],tree[rs]);\n\ttree[u].lc = ls;tree[u].rc = rs;\n}\nint tote = 1;\nint a[N];\nvoid build(int u,int l,int r){\n\tif(l==r){\n\t\ttree[u].val = a[l];\n\t\ttree[u].cnt = 1;\n\t\treturn;\n\t}\n\tint mid = (l+r)/2;\n\ttree[u].lc = ++tote;\n\tbuild(tote,l,mid);\n\ttree[u].rc = ++tote;\n\tbuild(tote,mid+1,r);\n\tup(u); \n}\nvoid upd(int u,int l,int r,int p,int x){\n\tif(l==r){\n\t\ttree[u].val = x;\n\t\ttree[u].cnt = 1;\n\t\treturn;\n\t}\n\tint mid = (l+r)/2;\n\tif(p<=mid){\n\t\tupd(tree[u].lc,l,mid,p,x);\n\t}else{\n\t\tupd(tree[u].rc,mid+1,r,p,x);\n\t}\n\tup(u);\n}\naa query(int u,int l,int r,int ll,int rr){\n\tif(l==ll&&r==rr){\n\t\treturn tree[u];\n\t}\n\tint mid = (l+r)/2;\n\tif(rr<=mid){\n\t\treturn query(tree[u].lc,l,mid,ll,rr);\n\t}else if(ll>mid){\n\t\treturn query(tree[u].rc,mid+1,r,ll,rr);\n\t}else{\n\t\treturn pushup(query(tree[u].lc,l,mid,ll,mid),query(tree[u].rc,mid+1,r,mid+1,rr));\n\t}\n}\nint rt[N];\nstruct bb{\n\tint lc,rc,val,siz,rnd;\n\tvoid clear(){\n\t\tlc = rc = val = rnd = siz = 0;\n\t}\n}node[N*2];\nvoid pus(int u){\n\tnode[u].siz = node[node[u].lc].siz+node[node[u].rc].siz+1;\n} \nint tot;\nint sta[N*2],top;\nint newnode(int val){\n\tint u;\n\tif(top){\n\t\tu = sta[top--];\n\t\tnode[u].clear();\n\t}else{\n\t\tu = ++tot;\n\t}\n\tnode[u].val = val;\n\tnode[u].rnd = rand();\n\tnode[u].siz = 1;\n\treturn u;\n}\nvoid split(int u,int val,int &x,int &y){\n\tif(!u){\n\t\tx = 0;y = 0;\n\t\treturn;\n\t}\n\tif(node[u].val<=val){\n\t\tx = u;\n\t\tsplit(node[u].rc,val,node[u].rc,y);\n\t}else{\n\t\ty = u;\n\t\tsplit(node[u].lc,val,x,node[u].lc);\n\t}\n\tpus(u);\n}\nint merge(int u,int v){\n\tif(!u||!v){\n\t\treturn u+v;\n\t}\n\tif(node[u].rnd>node[v].rnd){\n\t\tnode[u].rc = merge(node[u].rc,v);\n\t\tpus(u);\n\t\treturn u;\n\t}else{\n\t\tnode[v].lc = merge(u,node[v].lc);\n\t\tpus(v);\n\t\treturn v;\n\t}\n}\nint x,y,z;\nvoid ins(int ver,int val){\n\tsplit(rt[ver],val,x,y);\n\trt[ver] = merge(merge(x,newnode(val)),y);\n}\nvoid del(int ver,int val){\n\tsplit(rt[ver],val,x,z);\n\tsplit(x,val-1,x,y);\n\tsta[++top] = y;\n\ty = merge(node[y].lc,node[y].rc);\n\trt[ver] = merge(merge(x,y),z);\n}\nint n,m;\nint ask(int l,int r){\n\tint id = query(1,1,n,l,r).val;\n\tsplit(rt[id],l-1,x,y);\n\tsplit(y,r,y,z);\n\tint len = node[y].siz;\n\trt[id] = merge(merge(x,y),z);\n\tif(len>(r-l+1)/2){\n\t\treturn id;\n\t}else{\n\t\treturn -1;\n\t}\n}\nvoid add(int u,int v){\n\tdel(a[u],u);\n\ta[u] = v;\n\tins(v,u);\n\tupd(1,1,n,u,v);\n}\nint main(){\n\tn = read();m = read();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i] = read();\n\t\tins(a[i],i);\n\t} \n\tbuild(1,1,n);\n\tint l,r;\n\twhile(m--){\n\t\tl = read();r = read();\n\t\tint u = ask(l,r);\n\t\tif(u==-1){\n\t\t\tcout<<0<<\"\\n\";\n\t\t}else{\n\t\t\tcout<<u<<\"\\n\";\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n\n\u8c8c\u4f3c\u8fd8\u53ef\u4ee5\u62ff\u5206\u5757/\u83ab\u961f\u73a9\u8fd9\u4e2a\u9898\u3002",
        "postTime": 1668393029,
        "uid": 369399,
        "name": "yizhiming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u3010P7252 [JSOI2011] \u68d2\u68d2\u7cd6\u3011"
    }
]