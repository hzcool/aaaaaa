[
    {
        "content": "\u6b64\u9898\u662f\u7ec3\u4e6001\u80cc\u5305\u53d8\u5f62\u4e00\u9053\u975e\u5e38\u597d\u7684\u9898\n\n- Q1 \u4e3a\u5565\u8981\u752801\u80cc\u5305\u800c\u4e0d\u662f\u5176\u5b83\u7b97\u6cd5\uff1f\n- \u7b54\uff1a\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u53ea\u5976\u725b\u53ea\u6709\u9009\u548c\u4e0d\u9009\u4e24\u79cd\u72b6\u6001\uff0c\u800c\u4e14\u662f\u9700\u8981**\u51b3\u7b56**\u7684\uff0c\u6240\u4ee501\u80cc\u5305\u7edd\u5bf9\u662f\u6700\u597d\u7684\u9009\u62e9\n\n\u4e0b\u9762\u5c06\u4f1a\u5bf9 OI \u4e2d01\u80cc\u5305\u95ee\u9898\u7684\u57fa\u672c\u89e3\u9898\u6b65\u9aa4\u8fdb\u884c\u8be6\u7ec6\u7684\u8bb2\u89e3\n\n### \u4e00\u300101\u80cc\u5305\u57fa\u672c\u601d\u8003\u6b65\u9aa4\n\n\u5728\u8003\u573a\u4e0a\uff0c\u601d\u8003\u5173\u4e8e\u52a8\u6001\u89c4\u5212\u7684\u95ee\u9898\u4e00\u822c\u5206\u4e09\u6b65\uff1a\n\n1. \u786e\u5b9a\u5982\u4f55\u8868\u793a\u72b6\u6001\n2. \u63a8\u5bfc\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n3. \u601d\u8003\u52a8\u89c4\u521d\u59cb\u72b6\u6001\n\n\u4e0b\u9762\uff0c\u6211\u5c06\u4ee5\u6b64\u9898\u4e3a\u4f8b\uff0c\u5177\u4f53\u8bb2\u89e3\u4e00\u4e0b\u8fd9\u4e9b\u6b65\u9aa4\u3002\n\n### \u4e8c\u3001\u5982\u4f55\u8868\u793a\u72b6\u6001\n\n01\u80cc\u5305\u4e2d\uff0c\u4e00\u5b9a\u8981\u60f3\u597d\u4ec0\u4e48\u662f**\u4f53\u79ef**\uff0c\u4ec0\u4e48\u662f**\u4ef7\u503c**\uff0c\u4ec0\u4e48\u662f**\u80cc\u5305\u5bb9\u91cf**\u3002\u6b64\u9898\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4f53\u79ef\u770b\u6210\u5976\u725b\u7684\u667a\u5546\uff0c\u80cc\u5305\u5bb9\u91cf\u770b\u6210\u5976\u725b\u7684\u4e2a\u6570\uff0c\u4ef7\u503c\u770b\u6210\u5976\u725b\u7684\u60c5\u5546\u3002\u6240\u4ee5\u8fd9\u9898\u7684\u72b6\u6001\u8868\u793a\u5c31\u662f\uff1a\n\n$dp[i][j]$ \u8868\u793a\u524d $i$ \u53ea\u5976\u725b\u4e2d\uff0c\u603b\u667a\u5546\u4e3a $j$ \u65f6\u60c5\u5546\u7684\u6700\u5927\u503c\n\n\u6700\u7ec8\u7684\u7b54\u6848\u662f\u667a\u5546\u4e0e\u60c5\u5546\u4e4b\u548c\u7684\u6700\u5927\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a $dp$ \u6570\u7ec4\u626b\u4e00\u904d\uff0c\u53d6 $dp[n][j]+j$ \u7684\u6700\u5927\u503c\uff0c\u5176\u4e2d$1\\leq j\\leq n, dp[n][j] \\geq 0$\u3002\n\n\u4e00\u5f00\u59cb\u60f3\u7684\u72b6\u6001\u8868\u793a\u53ef\u80fd\u6709\u9519\uff08\u6bd4\u5982\u6b64\u9898\uff09\uff0c\u9700\u8981\u5728\u5b8c\u6210\u540e\u9762\u7684\u6b65\u9aa4\u540e\u8fdb\u884c\u4fee\u6539\u3002\n\n### \u4e09\u3001\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\n\u8fd9\u5176\u5b9e\u662f dp \u91cc\u9762\u6700\u96be\u7684\u4e00\u6b65\uff0c\u4f46\u6b64\u9898\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u8fd8\u662f\u6bd4\u8f83\u597d\u60f3\u7684\u3002\n\n\u6bcf\u53ea\u725b\u6709\u4e24\u79cd\u9009\u62e9\uff1a\u53c2\u52a0\u4f1a\u5c55\u548c\u4e0d\u53c2\u52a0\u4f1a\u5c55\u3002\u6211\u4eec\u8981\u6c42\u5728\u667a\u5546\u4e00\u5b9a\u7684\u60c5\u51b5\u4e0b\u60c5\u5546\u7684\u6700\u5927\u503c\uff0c\u8fd9\u5176\u5b9e\u5c31\u662f01\u80cc\u5305\u7684\u6a21\u677f\u3002\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7684\u63a8\u5bfc\u5982\u4e0b\uff1a\n\n- \u7b2c $i$ \u53ea\u5976\u725b\u4e0d\u53c2\u52a0\u4f1a\u5c55\uff1a$dp[i][j]=dp[i-1][j]$\n- \u7b2c $i$ \u53ea\u5976\u725b\u53c2\u52a0\u4f1a\u5c55\uff1a$dp[i][j]=dp[i-1][j-a[i].iq]+a[i].eq$\n- \u52a0\u4e0a\u51b3\u7b56\uff0c\u9009\u53d6\u4e0a\u9762\u4e24\u79cd\u60c5\u51b5\u7684\u6700\u5927\u503c\uff1a$dp[i][j]=\\max(dp[i-1][j], dp[i-1][j-a[i].iq]+a[i].eq)$\n\n\u8fd9\u5c31\u662f\u6211\u4eec\u6b64\u9898\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e86\u3002\n\n\u5f53\u7136\uff0c\u6b64\u9898\u5f00\u4e8c\u7ef4\u6570\u7ec4\u4f1aMLE\uff08\u62ff\u8ba1\u7b97\u5668\u7b97\u4e00\u4e0b\uff0c\u5b66\u8fc7\u521d\u8d5b\u7684\u5e94\u8be5\u90fd\u4f1a\u7b97\u5427\uff09\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u7684 $dp[i][j]$ \u53ea\u548c\u4e0a\u4e00\u884c\u6709\u5173\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a $dp$ \u6570\u7ec4\u4f18\u5316\u6210\u4e00\u7ef4\uff08\u8fd9\u4e5f\u662f01\u80cc\u5305\u6a21\u677f\u7684\u4e00\u90e8\u5206\uff09\n$$dp[j]=\\max(dp[j], dp[j-a[i].iq]+a[i].eq)$$\n\n- Q2\uff1a\u6709\u4e00\u4e9b\u50bb\u50bb\u7684\u5976\u725b\u667a\u5546\u5c45\u7136\u662f\u8d1f\u7684\uff0c\u8fd9\u6837\u5bfc\u81f4 $j-a[i].iq$ \u6bd4 $j$ \u5927\uff0c\u5728 $dp[j]$ \u7684\u53f3\u4e0a\u89d2\uff0c\u800c\u90a3\u4e9b\u806a\u660e\u7684\u6b63\u667a\u5546\u7684\u5976\u725b\u4f1a\u5728 $dp[j]$ \u7684\u5de6\u4e0a\u89d2\uff0c\u90a3\u538b\u6210\u4e00\u7ef4\u540e\u52a8\u89c4\u7684\u987a\u5e8f\u662f\u4ec0\u4e48\u5462\uff1f\n- \u7b54\uff1a\u53ef\u4ee5\u5728\u52a8\u89c4\u7684\u65f6\u5019\u5224\u65ad\u4e00\u4e0b\uff0c\u5982\u679c\u8fd9\u53ea\u5976\u725b\u5f88\u50bb\uff0c\u90a3\u4e48\u6b63\u7740dp\uff0c\u5426\u5219\u53cd\u7740dp\u3002\n\n### \u56db\u3001\u521d\u59cb\u72b6\u6001\n\n\u6700\u540e\uff0c\u6211\u4eec\u8981\u8003\u8651dp\u7684\u521d\u59cb\u72b6\u6001\uff0c\u4e5f\u5c31\u662f\u8fb9\u754c\u6761\u4ef6\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6709\u70b9\u7c7b\u4f3c\u4e8e\u5199 dfs \u65f6\u5bfb\u627e\u51fa\u53e3\uff0c\u4e5f\u5c31\u662f\u628a\u4e00\u773c\u80fd\u770b\u51fa\u7b54\u6848\u7684\u5730\u65b9\u76f4\u63a5\u8d4b\u503c\u3002\u6bd4\u5982\u6211\u4eec\u8fd9\u4e2a $dp[0]$\uff0c\u5728\u6ca1\u6709\u5976\u725b\u65f6\u6700\u5927\u60c5\u5546\u662f\u591a\u5c11\u5462\uff1f\u80af\u5b9a\u662f $0$\u3002\u6240\u4ee5\u6211\u4eec\u7684\u4e00\u4e2a\u8fb9\u754c\u6761\u4ef6\u662f $dp[0]=0$\n\n\u53ef\u662f\uff0c\u6211\u4eec\u7684\u60c5\u5546\u80fd\u662f\u8d1f\u6570\u3002\u5982\u679c\u628a\u6570\u7ec4\u5b9a\u4e49\u6210\u5168\u5c40\u53d8\u91cf\uff0c\u9ed8\u8ba4\u6240\u6709\u5143\u7d20\u4e3a $0$ \u7684\u8bdd\uff0cdp\u7684\u8fc7\u7a0b\u4e2d\u53d6\u6700\u5927\u503c\u6709\u53ef\u80fd\u4e00\u76f4\u4e3a $0$\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u8fd8\u8981\u628a\u6570\u7ec4\u7684\u5176\u5b83\u5143\u7d20\u8d4b\u503c\u6210\u4e00\u4e2a\u975e\u5e38\u5c0f\u7684\u503c\u3002\u5934\u6587\u4ef6 $\\mathtt{cstring}$ \u91cc\u7684 $\\mathtt{memset}$ \u51fd\u6570\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u628a\u6570\u7ec4\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u8d4b\u503c\u4e3a $-\\infty$\u3002\u5177\u4f53\u7528\u6cd5\uff1a $\\mathtt{memset(dp, -0x3f, sizeof\\;dp);}$\n\n\u4f46\u662f\uff0c\u6b64\u65f6\u4e00\u4e2a\u68d8\u624b\u7684\u95ee\u9898\u51fa\u6765\u4e86\uff1a\u56e0\u4e3a $a[i].iq$ \u548c $a[i].eq$ \u90fd\u6709\u53ef\u80fd\u662f\u8d1f\u6570\uff0c\u6240\u4ee5\u4f1a\u5bfc\u81f4\u6570\u7ec4\u8d8a\u754c\u3002\u8fd9\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u628a $dp$ \u6570\u7ec4\u5411\u53f3\u79fb\u52a8 $400000$ \u4f4d\u3002\u6570\u7ec4\u7684\u6539\u53d8\u610f\u5473\u7740\u6211\u4eec\u72b6\u6001\u7684\u5b9a\u4e49\u4e5f\u4f1a\u53d1\u751f\u6539\u53d8\uff1a\n\n$dp[j]$ \u8868\u793a\u5728\u5976\u725b\u667a\u5546\u4e4b\u548c\u4e3a $j-400000$ \u65f6\uff0c\u60c5\u5546\u7684\u6700\u5927\u503c\u3002\n\n\u662f\u4e0d\u662f\u53c8\u5b66\u4f1a\u4e00\u62db\uff1f\u5728\u6570\u7ec4\u4e0b\u6807\u53ef\u80fd\u4e3a\u8d1f\u6570\u65f6\uff0c\u5c06\u5176\u53f3\u79fb\u53ef\u4ee5\u6709\u6548\u907f\u514d\u6570\u7ec4\u8d8a\u754c\u3002\u4f46\u662f\u5728\u6700\u540e\u6c42\u7b54\u6848\u65f6\uff0c\u4e0d\u8981\u5fd8\u8bb0\u6211\u4eec\u6c42\u5f97\u5176\u5b9e\u662f $dp[j]+j-400000$ \u7684\u6700\u5927\u503c\u3002\u8fd8\u6709\u4e00\u4e2a\u6613\u9519\u70b9\uff1a\u522b\u5fd8\u8bb0\u7279\u5224\u65e0\u6cd5\u4fdd\u8bc1\u667a\u5546\u548c\u60c5\u5546\u65e0\u6cd5\u4fdd\u8bc1\u5927\u4e8e $0$ \u7684\u60c5\u51b5\uff01\n\n\u6700\u540e\u9644\u6838\u5fc3 dp \u4ee3\u7801\uff1a\n\n```cpp\n\tmemset(dp, -0x3f, sizeof dp);\n\tdp[400000] = 0;\n\tfor(int i = 1; i <= n; i ++)\n\t{\n\t\tif(a[i].iq >= 0)\n\t\t\tfor(int j = 800000; j >= a[i].iq; j --)\n\t\t\t\tdp[j] = max(dp[j], dp[j-a[i].iq] + a[i].eq);\n\t\telse\n\t\t\tfor(int j = 0; j <= 800000 + a[i].iq; j ++)\n\t\t\t\tdp[j] = max(dp[j], dp[j-a[i].iq] + a[i].eq);\n\t}\n\tfor(int i = 400000; i <= 800000; i ++)\n\t\tif(dp[i] > 0)\n\t\t\tans = max(ans, i + dp[i] - 400000);\n```\n",
        "postTime": 1589595378,
        "uid": 192631,
        "name": "\u5b66\u800c\u601d\u674e\u8001\u5e08",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2340 \u3010[USACO03FALL]Cow Exhibition G\u3011"
    },
    {
        "content": "## # **\u6b64\u9898\u641c\u7d22\u53ef\u4ee5\u8fc7\uff01\uff01\uff01**\n\u770b\u5230\u6b64\u9898,\u7b2c\u4e00\u60f3\u6cd5,\u662f01\u80cc\u5305,\u7136\u800c,\u4f5c\u4e3a\u4e00\u4e2a\u849f\u84bb,~~\u6211\u600e\u4e48\u4f1a\u6253\u6b63\u89e3\u5462\uff1f~~,\u4e8e\u662f\u5c31\u5f00\u59cb\u6253dfs\uff01\n\n\u60f3\u8981\u5b8c\u6210\u6b64\u9898,\u666e\u901a\u7684\u641c\u7d22\u80af\u5b9a\u662f\u8fc7\u4e0d\u4e86\u7684(~~\u4e0d\u7136\u8981dp\u5e72\u561b~~),\u6240\u4ee5,\u6211\u4eec\u8981\u8003\u8651\n\n#### \u526a\u679d\n\u6bd4\u8f83\u5bb9\u6613\u7684,\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u60f3\u51fa\u6765\u526a\u679d:\n\n(\u4e0d\u5410\u69fd\u540d\u5b57\u6211\u4eec\u8fd8\u662f\u597d\u670b\u53cb\u3002\u3002\u3002)\n\n1.\u7528\u6570\u7ec4guji[i]\u8868\u793a\u641c\u7d22\u5230i\u65f6,\u4e0d\u8003\u8651\u667a\u5546,\u60c5\u5546\u5fc5\u987b\u5927\u4e8e\u96f6\u7684\u9650\u5236,\u4e4b\u540e\u80fd\u83b7\u5f97\u7684\u6700\u5927\u667a,\u60c5\u5546\u4e4b\u548c\u3002\u5982\u679c\u5f53\u524d\u641c\u7d22\u5230\u7684\u667a,\u60c5\u5546\u4e4b\u548c\u52a0\u4e0aguji[i]\u4efb\u7136\u5c0f\u4e8e\u7b49\u4e8e\u5df2\u7ecf\u641c\u51fa\u6765\u7684ans,\u90a3\u4e48,\u5f53\u524d\u7684\u72b6\u6001\u4e00\u5b9a\u4e0d\u662f\u6700\u4f18\u7684(\u8fd9\u5c5e\u4e8e\u6700\u4f18\u6027\u4f18\u5316)\n\n2.\u7528\u6570\u7ec4jiuz[i](\u6551\u667a\u5546\u3002\u3002\u30022333)\u8868\u793a\u641c\u7d22\u5230i\u65f6,\u4e0d\u8003\u8651\u5176\u4ed6\u9650\u5236,\u4e4b\u540e\u80fd\u83b7\u5f97\u7684\u6700\u5927\u7684\u667a\u5546\u3002\u5982\u679c\u5f53\u524d\u641c\u7d22\u5230\u7684\u667a\u5546\u52a0\u4e0ajiuz[i]\u4efb\u7136\u5c0f\u4e8e0,\u90a3\u4e48,\u5f53\u524d\u72b6\u6001\u4e00\u5b9a\u4e0d\u6ee1\u8db3\u667a\u5546\u5fc5\u987b\u5927\u4e8e\u96f6\u7684\u9650\u5236\u3002\n\n3.\u7528\u6570\u7ec4jiuq[i]\u8868\u793a\u641c\u7d22\u5230i\u65f6,\u4e0d\u8003\u8651\u5176\u4ed6\u9650\u5236,\u4e4b\u540e\u80fd\u83b7\u5f97\u7684\u6700\u5927\u7684\u60c5\u5546\u3002\u540c2\n\n\u7136\u540e\u3002\u3002\u3002\u4f60\u5c31A\u4e86\u3002\u3002\u3002\u6d4b\u8bd5\u901f\u5ea625ms\u3002\u3002\u3002(orz)\n\n\u4ee3\u7801\uff1a\n\n    //#pragma GCC optimize()//\u624b\u52a8Ox\u4f18\u5316\n    #include<bits/stdc++.h>\n    using namespace std;\n    const int N=402;//\u8bb0\u5f97\u591a\u5f001\u4f4d,\u56e0\u4e3a\u8981\u8bbf\u95een+1\n    int z[N],q[N];\n    int ans=0;\n    int n;\n    int guji[N],jiuz[N],jiuq[N];\n    inline void dfs(int now,int zh,int qh){\n        if(zh+qh+guji[now]<=ans){\n            return;\n        }\n        if(zh+jiuz[now]<0){\n            return;\n        }\n        if(qh+jiuq[now]<0){\n            return;\n        }\n        if(now==n+1){//\u5982\u679c\u641c\u7d22\u5230\u5e95\n            ans=zh+qh;//\u7531\u4e8e\u5f53\u524d\u7b54\u6848\u4e00\u5b9a\u6700\u4f18,\u76f4\u63a5\u8d4b\u503c\n            return;\n        }\n        dfs(now+1,zh+z[now],qh+q[now]);\n        dfs(now+1,zh,qh);\n    }\n    int main(){\n        scanf(\"%d\",&n);\n        for(int i=1;i<=n;++i){\n            scanf(\"%d%d\",&z[i],&q[i]);\n        }\n        for(int i=n;i>=1;--i){\n            guji[i]=guji[i+1];\n            jiuz[i]=jiuz[i+1],jiuq[i]=jiuq[i+1];\n            if(z[i]>0){//\u5982\u679c\u667a\u5546\u5927\u4e8e0\n                jiuz[i]+=z[i];//\u667a\u5546\u53ef\u53d6\u6700\u5927\u503c\u52a0\u4e0az[i]\n            }\n            if(q[i]>0){\n                jiuq[i]+=q[i];//\u60c5\u5546\u53ef\u53d6\u6700\u5927\u503c\u52a0\u4e0aq[i]\n            }\n            if(z[i]+q[i]>0){//\u5982\u679c\u548c\u5927\u4e8e\u96f6\n                guji[i]+=z[i]+q[i];//\u6700\u5927\u503c\u52a0\u4e0az[i]+q[i]\n            }\n        }\n        dfs(1,0,0);\n        cout<<ans;\n        return 0;\n    }\n    /**\n    *\u3000\u3000\u250f\u2513\u3000\u3000\u3000\u250f\u2513+ +\n    *\u3000\u250f\u251b\u253b\u2501\u2501\u2501\u251b\u253b\u2513 + +\n    *\u3000\u2503\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\n    *\u3000\u2503\u3000\u3000\u3000\u2501\u3000\u3000\u3000\u2503 ++ + + +\n    *  \u2588\u2588\u2588\u2588\u2501\u2588\u2588\u2588\u2588+\n    *  \u25e5\u2588\u2588\u25e4\u3000\u25e5\u2588\u2588\u25e4 +\n    *\u3000\u2503\u3000\u3000\u3000\u253b\u3000\u3000\u3000\u2503\n    *\u3000\u2503\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503 + +\n    *\u3000\u2517\u2501\u2513\u3000\u3000\u3000\u250f\u2501\u251b\n    *\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u2503 + + + +Code is far away from \u3000\n    *\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u2503 + bug with the animal protecting\n    *\u3000\u3000\u3000\u2503\u3000 \u3000 \u2517\u2501\u2501\u2501\u2513 \u795e\u517d\u4fdd\u4f51,\u4ee3\u7801\u65e0bug\u3000\n    *\u3000\u3000\u3000\u2503 \u3000\u3000\u3000\u3000\u3000\u3000 \u2523\u2513\n    *\u3000\u3000  \u2503 \u3000\u3000\u3000\u3000\u3000 \u3000\u250f\u251b\n    *\u3000    \u2517\u2513\u2513\u250f\u2501\u2533\u2513\u250f\u251b + + + +\n    *\u3000\u3000\u3000\u3000\u2503\u252b\u252b\u3000\u2503\u252b\u252b\n    *\u3000\u3000\u3000\u3000\u2517\u253b\u251b\u3000\u2517\u253b\u251b+ + + +\n    */\n\n",
        "postTime": 1539235146,
        "uid": 71458,
        "name": "a13518354766",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2340 \u3010\u5976\u725b\u4f1a\u5c55\u3011"
    },
    {
        "content": "\u6211\u4eec\u53d1\u73b0\u8fd9\u9053\u9898\u5bf9\u4e8e\u6bcf\u5934\u5976\u725b\u65e0\u975e\u4e5f\u662f\u9009\u6216\u4e0d\u9009\u4e24\u79cd\u72b6\u6001\u3002\u90a3\u4e4801\u80cc\u5305\u540c\u6837\u662f\u9009\u6216\u4e0d\u9009\u4e24\u79cd\u72b6\u6001\uff0c\u4e0d\u59a8\u8bd5\u7740\u5c06\u672c\u9898\u8f6c\u621001\u80cc\u5305\uff1f\u90a3\u4e48\u4f55\u4e3a\u4ee3\u4ef7\uff1f\u53d1\u73b0\u6709\u4e24\u4e2a\u5143\u7d20\uff1a\u60c5\u5546\uff0c\u667a\u5546\u3002\u800c\u8fd9\u4e24\u4e2a\u5143\u7d20\u5bf9\u4e8e\u9898\u6765\u8bf4\u90fd\u662f\u7b49\u4ef7\u7684\uff0c\u90a3\u4e48\u662f\u4e0d\u662f\u4efb\u9009\u4e00\u4e2a\u4f5c\u4e3a\u80cc\u5305\u4ee3\u4ef7\u4e5f\u53ef\u4ee5\u5462\uff1f\u6211\u4eec\u6765\u8bd5\u8bd5\uff1a\u5047\u8bbe\u667a\u5546\u4e3a\u4ee3\u4ef7\uff0c\u5373 f[j] \u4e3a\u5f53\u667a\u5546\u4e3a j \u65f6\u60c5\u5546\u7684\u6700\u5927\u503c\u3002\uff08\u4e3a\u4ec0\u4e48 f[j] \u4e0d\u80fd\u8868\u793a\u4e3a\u667a\u5546\u4e0e\u60c5\u5546\u7684\u548c \u540e\u9762\u518d\u8bf4\uff09\u518d\u601d\u8003\u72b6\u6001\u8f6c\u79fb\uff0c\u6a21\u4eff01\u80cc\u5305\uff0c\u5f97\u51fa\u65b9\u7a0b \n```cpp\n\tf[j]=max(f[j],f[j-cow[i].s]+cow[i].f);\n```\n\uff08cow.s \u4e3a\u667a\u5546\uff0ccow.f \u4e3a\u60c5\u5546\uff09\u4f46\u662f\u53c8\u7531\u9898\u53ef\u5f97\u8f6c\u79fb\u65f6 j \u6709\u53ef\u80fd\u5728\u67d0\u4e2a\u65f6\u523b\u4e3a\u8d1f\u6570\uff0c\u5f53\u7136\u6700\u7ec8\u7b54\u6848\u91cc\u7684 j \u548c f[j] \u90fd\u5927\u4e8e\u7b49\u4e8e 0\uff0c\u4e3a\u4e86\u9632\u6b62\u6570\u7ec4\u8d8a\u754c\uff0c\u6211\u4eec\u53ef\u4ee5\u628a j \u6574\u4f53\u5411\u53f3\u79fb\u52a8\u4e00\u4e9b\u5355\u4f4d\uff0c\u79fb\u52a8\u591a\u5c11\u5462\uff1f\u56e0\u4e3a1 \u2264 N \u2264 400 \u4e14 \u22121000 \u2264 \u5976\u725b\u7684\u60c5\u5546\u548c\u667a\u5546 \u2264 1000\uff0c\u6240\u4ee5\u4efb\u610f\u4e00\u4e2a\u65f6\u523b j \u6700\u5c0f\u4e3a 400 \u00d7\uff08-1000\uff09= -400000\uff0c\u6700\u5927\u4e3a 400 \u00d7\uff081000\uff09= 400000 \u90a3\u4e48\u6211\u4eec\u5c06 j \u6574\u4f53\u5411\u53f3\u79fb 400000 \u5c31\u597d\u4e86\u3002\u79fb\u52a8\u5b8c\u540e\u7684 f[j] \u5c31\u662f\u79fb\u52a8\u524d\u7684 f[j-400000] \u3002\u4f8b\u5982\u79fb\u52a8\u540e\u7684 400000 \u5c31\u5bf9\u5e94\u7740\u79fb\u52a8\u524d\u7684 0 \u4e5f\u5c31\u662f\u539f\u6765\u7684\u6700\u5c0f\u503c\u3002\u800c\u79fb\u52a8\u540e\u7684 800000 \u5c31\u5bf9\u5e94\u7740\u79fb\u52a8\u524d\u7684 400000 \u4e5f\u5c31\u662f\u539f\u6765\u7684\u6700\u5927\u503c\u3002\u81f3\u6b64\u6211\u4eec\u4fbf\u5df2\u7ecf\u89e3\u51b3\u4e86 j \u4e3a\u8d1f\u65f6\u7684\u95ee\u9898\u3002\u73b0\u5728\u5df2\u7ecf\u5f88\u50cf01\u80cc\u5305\u4e86\uff08\u667a\u5546\u4e3a\u4ee3\u4ef7\uff0c\u60c5\u5546\u4e3a\u4ef7\u503c\uff0c\u80cc\u5305\u5bb9\u91cf\u4e3a 0\uff5e800000\uff09\uff0c\u4f46\u662f\u8fd8\u6709\u4e00\u70b9\u4e0d\u540c\uff0c\u5c31\u662f\u7269\u54c1\u4ee3\u4ef7\u6709\u53ef\u80fd\u4e3a\u8d1f\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e86\u6211\u4eec\u4e0d\u80fd\u8ddf01\u80cc\u5305\u4e00\u6837\u5168\u90e8\u90fd\u5012\u5e8f\u679a\u4e3e\u80cc\u5305\u5bb9\u91cf\u7136\u540e\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\uff0c\u82e5\u5f53\u6211\u4eec\u4ece800000\u5f00\u59cb\u5012\u5e8f\u679a\u4e3e\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u679a\u4e3e\u8fc7 j = 666666 \u8fd9\u4e2a\u72b6\u6001\u5e76\u4e14\u5f53\u524d\u6211\u4eec\u5728 j = 666660\uff0c\u540c\u65f6\u5f53\u524d\u7684 cow.s = -6\uff0c\u90a3\u4e48\u6b64\u65f6\u6211\u4eec\u5c31\u4f1a\u56de\u9000\u5230 666666 \u8fd9\u4e2a\u72b6\u6001\uff0c\u4e07\u4e00\u5728\u72b6\u6001 666666 \u5df2\u7ecf\u628a cow \u9009\u4e86\u4e00\u904d\uff0c\u73b0\u5728\u5c31\u4f1a\u53c8\u518d\u9009\u4e00\u904d\uff0c\u663e\u7136\u8fd9\u6837\u662f\u4e0d\u884c\u7684\u3002\u65e2\u7136\u6709\u4e9b\u4e3a\u8d1f\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ea\u628a cow.s \u4e3a\u8d1f\u7684\u51e0\u4e2a\u5976\u725b\u5355\u72ec\u7528\u6b63\u5e8f\u679a\u4e3e\uff0c\u8fd9\u6837\u82e5\u8981\u51cf\u53bb\u4e00\u4e2a cow.s \u4e5f\u4e0d\u4f1a\u51fa\u73b0\u91cd\u9009\u7684\u60c5\u51b5\u4e86\u3002\u81f3\u6b64\uff0c\u4e00\u4e2a\u5b8c\u6574DP\u5c31\u8bbe\u8ba1\u51fa\u6765\u4e86\uff1a\n\n```\n\tfor(int i=1;i<=n;i++) {\n\u00a0 \u00a0 \u00a0 \u00a0 if(cow[i].s>=0) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 for(int j=800000;j>=cow[i].s;j--) \u00a0 \u00a0 \u00a0 //\u975e\u8d1f\u6570\u5c31\u5012\u53d9\u679a\u4e3e\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 f[j]=max(f[j],f[j-cow[i].s]+cow[i].f);\n\u00a0 \u00a0 \u00a0 \u00a0 }else {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 for(int j=0;j<=800000+cow[i].s;j++) \u00a0 \u00a0 //\u8d1f\u6570\u5c31\u6b63\u5e8f\u679a\u4e3e\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 f[j]=max(f[j],f[j-cow[i].s]+cow[i].f);\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 }\n```\n\n\u5728\u6700\u7ec8\u627e\u7b54\u6848\u7684\u65f6\u5019\u4ece j = 400000 -> 800000 \u8303\u56f4\u5185\u627e\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a 400000 \u5bf9\u5e94\u7740\u79fb\u52a8\u524d\u7684 j = 0\uff08\u667a\u5546\u548c\u8981\u4e3a\u975e\u8d1f\u6570\uff09\u3002 \n\u4e3a\u4ec0\u4e48 f[j] \u4e0d\u80fd\u8868\u793a\u4e3a\u667a\u5546\u4e0e\u60c5\u5546\u7684\u548c\uff1f  \n\u56e0\u4e3a\u5728\u627e\u7b54\u6848\u65f6\u5c31\u65e0\u6cd5\u5224\u65ad\u5f53\u524d\u72b6\u6001\u7684\u60c5\u5546\u548c\u662f\u5426\u4e3a\u8d1f\u6570\u3002  \n\n\u4ee3\u7801\uff1a  \n\u8dd1\u5f97\u6bd4\u8f83\u6162\uff5e\n```cpp\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nint n,m,maxx=-2147483647,f[800005];\nstruct {\n    int s,f;\n}cow[405];\nint max(int a,int b) {\n    return a>b?a:b;\n}\nint main() {\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d%d\",&cow[i].s,&cow[i].f);\n    memset(f,-0x3f,sizeof(f));\n    f[400000]=0;\n    for(int i=1;i<=n;i++) {\n        if(cow[i].s>=0) {\n            for(int j=800000;j>=cow[i].s;j--)\n                f[j]=max(f[j],f[j-cow[i].s]+cow[i].f);\n        }else {\n            for(int j=0;j<=800000+cow[i].s;j++)\n                f[j]=max(f[j],f[j-cow[i].s]+cow[i].f);\n        }\n    }\n    for(int i=400000;i<=800000;i++)\n        if(f[i]>=0)\n            maxx=max(maxx,f[i]+i-400000);\n    printf(\"%d\\n\",maxx);\n    return 0;\n}\n```",
        "postTime": 1536924000,
        "uid": 36139,
        "name": "YJunJ",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2340 \u3010\u5976\u725b\u4f1a\u5c55\u3011"
    },
    {
        "content": "~~\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u9898\u96be\u5ea6\u4e0d\u5230\u84dd\uff0c\u4e0d\u8fc7\u662f\u7eff\u8fd8\u662f\u9ec4\u5c31\u4e0d\u786e\u5b9a\u4e86\u3002~~\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u9053\u9898\u4e2d\u867d\u7136\u770b\u8d77\u6765\u5f88\u590d\u6742\uff0c\u4f46\u662f\u5176\u5b9e\u4e5f\u5c31\u662f\u9009\u54ea\u51e0\u4e2a\u5976\u725b\u53ef\u4ee5\u6ee1\u8db3\u8981\u6c42\uff0c\u4e8e\u662f\u6211\u60f3\u5230\u4e86\u4e00\u53e5\u6b4c\u8bcd\uff1a\n\n> 01\u80cc\u5305\u4e3b\u8981\u5173\u6ce8\u9009\u4e0e\u4e0d\u9009\u7684\u95ee\u9898\n\n\uff08\u51fa\u5904\uff1a[\u6211\u4eec\u4ecd\u672a\u77e5\u9053\u90a3\u5929\u6240\u770b\u89c1\u7684\u7b97\u6cd5\u7684\u540d\u5b57](https://www.bilibili.com/video/av20220384?spm_id_from=333.338.__bofqi.13)\uff09\n\n\u6240\u4ee5\uff0c\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u4e2a01\u80cc\u5305\u3002\n\n### 1.1\uff1a\n\n\u77e5\u9053\u4e8601\u80cc\u5305\uff0c\u90a3\u4e48\u5c31\u8981\u786e\u5b9a\u4e09\u4e2a\u95ee\u9898\uff1a\n\n- \u521d\u503c\n\n- \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\n- \u7b54\u6848\n\n\u5148\u8bf4\u4e00\u4e0b\u5b9a\u4e49\uff1a$dp_{i,j}$ \u8868\u793a\u524d $i$ \u4e2a\u7269\u54c1\uff0c\u667a\u5546\u4e3a $j$ \u65f6\uff0c\u60c5\u5546\u7684\u6700\u5927\u503c\u3002\uff08\u60c5\u5546\u548c\u667a\u5546\u53ef\u4ee5\u76f8\u4e92\u8f6c\u6362\uff0c\u4e5f\u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\uff09\n\n\u521d\u503c\uff1a$dp_{0,0}=0$\uff0c\u5176\u4ed6\u90fd\u4e0d\u53ef\u80fd\u3002\uff08\u4e0d\u80fd\u7528 $-1$ \u4ee3\u8868\u4e0d\u53ef\u80fd\uff0c\u56e0\u4e3a\u9898\u76ee\u4e2d\u6709\u8d1f\u6570\uff0c\u8fd9\u91cc\u5efa\u8bae\u7528 ~0x3f3f3f3f\uff09\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\u6807\u51c601\u80cc\u5305\u5199\u6cd5\uff1a$dp_{ij}=\\max(dp_{i-1,j},dp_{i-1,j-iq_{i}}+eq_i)$\uff08\u667a\u5546\u548c\u60c5\u5546\u7684\u4e0d\u540c\u4e8e\u9898\u9762\uff0c\u8bf7\u81ea\u884c\u7406\u89e3\uff09\n\n\u7b54\u6848\uff1a\u5f53 $dp_{n,k} \\ge 0$ \u65f6\uff0c\u6240\u6709 $k+dp_{n,k}$ \u7684\u6700\u5927\u503c\uff08$0 \\le k \\le MR$\uff09\uff08$MR=400000$\uff0c\u5373\u667a\u5546\u6216\u60c5\u5546\u7684\u6700\u5927\u503c\uff09\u3002\n\n\u73b0\u5728\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u6700\u6734\u7d20\u768401\u80cc\u5305\u5199\u6cd5\uff1a\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cmath>\n#include <algorithm>\n#include <string>\n#include <cstring>\n#include <queue>\n#define MR 400000\nusing namespace std;\nint n,iq[405],eq[405],dp[405][MR+20],ans;\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>iq[i]>>eq[i];\n\t}\n\tmemset(dp,~0x3f3f3f3f,sizeof(dp));\n\tdp[0][0]=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n        for(int j=0;j<=MR;j++)\n        {\n            if(j-iq[i]>=-MR&&j-iq[i]<=MR)//\u5224\u65ad\u662f\u5426\u5728\u8303\u56f4\u5185\n            dp[i][j]=max(dp[i-1][j],dp[i-1][j-iq[i]]+eq[i]);\n        }\n\t}\n\tfor(int i=0;i<=MR;i++)\n\t{\n\t\tif(dp[i+MR]>=0)\n\t\t{\n\t\t\tans=max(i+dp[n][i+MR],ans);\n\t\t}\n\t}\n\tcout<<ans<<endl;\n    return 0;\n}\n```\n\u4f46\u662f\uff0c\u5982\u679c\u4f60\u5c31\u628a\u5b83\u4ea4\u4e0a\u53bb\u7684\u8bdd\uff0c\u5c31\u4f1a\u5f97\u5230\u6ee1\u5c4f\u7684 MLE\u3002\n\n\u8fd9\u65f6\u6211\u4eec\u53d1\u73b0\u6570\u7ec4\u5f00\u5927\u4e86\uff0c\u6539\u5c0f\u4e00\u70b9\u51c6\u5907\u641e\u90e8\u5206\u5206\u65f6\uff0c\u53c8\u53d1\u73b0\u53ea\u80fd\u641e\u5230\u4e00\u4e2a\u70b9\uff0c\u4e8e\u662f\u4fbf\u53cd\u5e94\u8fc7\u6765\u6b63\u786e\u6027\u4e5f\u6709\u95ee\u9898\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u89e3\u51b3\u4e24\u4e2a\u95ee\u9898\uff1a\n\n- \u6b63\u786e\u6027\n- \u7a7a\u95f4\n\n### 2.1\uff1a\u6b63\u786e\u6027\n\n\u4e3a\u4ec0\u4e48\u4f1a\u9519\u8bef\u5462\uff1f\u5b9e\u9645\u4e0a\u662f\u56e0\u4e3a\u6570\u7ec4\u8d8a\u754c\uff0c\u53ef\u80fd\u51fa\u73b0\u8d1f\u6570\u3002\uff08\u56e0\u4e3a\u53ef\u4ee5\u4e2d\u9014\u662f\u8d1f\u6570\uff0c\u4f46\u662f\u6700\u540e\u53c8\u6512\u4e86\u5f88\u591a\u6b63\u7684\u6570\u56de\u6765\u5927\u4e8e0\uff09\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u53d1\u73b0\u8981\u5904\u7406\u7684 $j$ \u5e76\u4e0d\u662f $0 \\le j \\le MR$\uff0c\u800c\u662f $-MR \\le j \\le MR$\uff0c\u4e3a\u4e86\u907f\u514d\u8d1f\u6570\uff0c\u6211\u4eec\u628a\u672c\u6765\u7684 $dp_{i,j}$ \u5728 $dp_{i,j+MR}$ \u4e0a\u8d4b\u503c\uff0c\u5c31\u53ef\u4ee5\u6709\u6548\u907f\u514d\u8d1f\u6570\u4e0b\u6807\u7684\u51fa\u73b0\u3002\n\n\u4ee3\u7801\u5c31\u4e0d\u653e\u4e86\uff0c\u9664\u4e86\u6bcf\u6b21\u4f7f\u7528 $dp$ \u6570\u7ec4\u662f\u65f6\u7b2c\u4e8c\u7ef4\u8981 $+MR$ \u548c\u6570\u7ec4\u7684\u5b9a\u4e49\u4ee5\u5916\u6ca1\u5565\u533a\u522b\u3002\n\n### 2.2\uff1a\u7a7a\u95f4\n\n\u5f53\u7136\u4e0d\u6ee1\u8db3\u4e8e\u53ea\u9a97\u90e8\u5206\u5206\uff0c\u4e8e\u662f\u6211\u4eec\u8981\u60f3\u529e\u6cd5\u628a\u4e8c\u7ef4\u7684 $dp$ \u538b\u6210\u4e00\u7ef4\u7684\u3002\n\n\u9996\u5148\u6211\u4eec\u60f3\u5230\u559c\u95fb\u4e50\u89c1\u7684\u6eda\u52a8\u6570\u7ec4\u64cd\u4f5c\uff08\u5373\u4e00\u76f4\u7528\u540c\u4e00\u4e2a\u6570\u7ec4\uff0c\u7528 $n$ \u6b21\uff09\uff0c\u4f46\u662f\u6b64\u9898\u4e2d $iq$ \u6709\u6b63\u6709\u8d1f\uff0c\u65e0\u6cd5\u5224\u65ad\u662f\u6b63\u7740\u5faa\u73af\u8fd8\u662f\u5012\u7740\u5faa\u73af\uff0c\u4e8e\u662f\u53ef\u4ee5\u5148\u5224\u65ad\u6b63\u8d1f\u518d\u9009\u62e9\u6b63\u7740\u5faa\u73af\u8fd8\u662f\u5012\u7740\u5faa\u73af\uff0c\u53ef\u4ee5\u51cf\u5c11\u6389 $dp$ \u7684\u7b2c\u4e00\u7ef4\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cmath>\n#include <algorithm>\n#include <string>\n#include <cstring>\n#include <queue>\n#define MR 400000\nusing namespace std;\nint n,iq[405],eq[405],dp[MR*2+20],ans;\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>iq[i]>>eq[i];\n\t}\n\tmemset(dp,~0x3f3f3f3f,sizeof(dp));\n\tdp[0+MR]=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(iq[i]>0)\n\t\t{\n\t\t\tfor(int j=MR;j>=-MR;j--)\n\t\t\t{\n\t\t\t\tif(-MR<=j-iq[i]&&j-iq[i]<=MR)\n\t\t\t\tdp[j+MR]=max(dp[j+MR],dp[j-iq[i]+MR]+eq[i]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int j=-MR;j<=MR;j++)\n\t\t\t{\n\t\t\t\tif(-MR<=j-iq[i]&&j-iq[i]<=MR)\n\t\t\t\tdp[j+MR]=max(dp[j+MR],dp[j-iq[i]+MR]+eq[i]);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<=MR;i++)\n\t{\n\t\tif(dp[i+MR]>=0)\n\t\t{\n\t\t\tans=max(i+dp[i+MR],ans);\n\t\t}\n\t}\n\tcout<<ans<<endl;\n    return 0;\n}\n```\n\u5b9e\u9645\u4e0a\u8fd9\u4efd\u4ee3\u7801\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\uff08\u6700\u6162962ms\uff09\uff0c\u4f46\u662f\u4f5c\u8005\u53c8\u9762\u4e34\u4e86\u4e00\u4e2a\u95ee\u9898\u2014\u2014\u6821\u5185 OJ \u88ab\u5361\u4e86\uff0c\u8fc7\u4e0d\u53bb\u3002\n\n### 3.1\uff1a\u51e0\u4e2a\u5c0f\u5c0f\u7684\u4f18\u5316\n\n#### \u9996\u5148\u8981\u5361\u8fc7\u6821\u5185 OJ \n\n\u5f53\u6211\u8003\u8651\u4f18\u5316\u65f6\u95f4\u65f6\uff0c\u6211\u9996\u5148\u770b\u5230\u4e86\u5bf9\u4e8e\u6bcf\u4e2a\u5976\u725b\u7684\u5faa\u73af\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5976\u725b\uff0c\u90fd\u8981\u5faa\u73af $2 \\times MR=800000$ \u6b21\uff0c\u770b\u8d77\u6765\u53ef\u4ee5\u518d\u4f18\u5316\u3002\n\n\u4e8e\u662f\u6211\u60f3\u5230\uff0c\u53ef\u4ee5\u5728 dp \u4e4b\u524d\u5148\u5904\u7406\u51fa $maxx,minx$ \u4e24\u4e2a\u6570\u7ec4\uff0c$maxx_i$ \u8bb0\u5f55\u524d $i$ \u4e2a\u5976\u725b\u7684\u6700\u5927\u667a\u5546\u662f\u591a\u5c11\uff0c$minx_i$ \u8bb0\u5f55\u524d $i$ \u4e2a\u5976\u725b\u7684\u6700\u5c0f\u667a\u5546\u662f\u591a\u5c11\u3002\uff08\u7528 $O(n)$ \u5c31\u53ef\u89e3\u51b3\uff0c\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\u662f\uff1a\u8d2a\u5fc3+\u524d\u7f00\u548c\uff0c\u53ef\u4ee5\u770b\u4ee3\u7801\uff09\n\n\u7136\u540e\uff0c\u6bcf\u6b21\u5faa\u73af\u65f6\uff0c\u53ef\u4ee5\u53ea\u4ece $minx_i$ \u5faa\u73af\u5230 $maxx_i$\uff0c\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u65f6\u95f4\u3002\uff08\u6210\u529f\u5361\u8fc7\u4e86\u6821\u5185 OJ\uff09\n\n#### \u7ee7\u7eed\u4f18\u5316\u5faa\u73af\u8303\u56f4\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5faa\u73af\u7684\u6700\u5c0f\u503c\u4e0d\u4ec5\u6709 $minx_i$\uff0c\u8fd8\u6709 $-\\dfrac{MR}{2}$\uff0c\u56e0\u4e3a\u4e00\u65e6\u6bd4\u8fd9\u4e2a\u6570\u5b57\u66f4\u5c0f\uff0c\u65e0\u8bba\u540e\u9762\u7684 $iq$ \u6709\u591a\u9ad8\u4e5f\u65e0\u6cd5\u628a\u6574\u4f53\u7684 $iq$ \u62c9\u5230 $\\ge 0$ \u6240\u4ee5\u5c31\u4e0d\u9700\u8981\u518d\u5224\u65ad\u4e86\uff08\u5b9e\u9645\u4e0a\u901a\u8fc7\u8fd9\u4e2a\u8fd8\u53ef\u4ee5\u5c06\u6570\u7ec4\u964d\u5230 $600000$\uff0c\u4e0d\u8fc7\u6ca1\u4ec0\u4e48\u610f\u4e49\uff08\u6bd5\u7adf\u4e0d\u5361\u7a7a\u95f4\uff09\uff0c\u5c31\u7b97\u4e86\uff09\n\n#### \u8fdb\u884c\u4e00\u6b21\u7c7b\u4f3c\u8d2a\u5fc3\u7684\u9009\u53d6\n\n\u5982\u679c\u4e00\u4e2a\u5976\u725b\u7684 $iq \\le 0$ \u4e14 $eq \\le 0$\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\uff0c\u56e0\u4e3a\u8fd9\u79cd\u5976\u725b\u7eaf\u5c5e\u201c\u62d6\u6cb9\u74f6\u201d\uff0c\u65e0\u6cd5\u5bf9\u7ed3\u679c\u9020\u6210\u826f\u597d\u7684\u5f71\u54cd\uff0c\u53ef\u4ee5\u76f4\u63a5\u820d\u53bb\u3002\n\n\u800c\u4e14\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\u538b\u7a7a\u95f4\uff0c\u6240\u4ee5\u4e0d\u5fc5\u62c5\u5fc3\u4e2d\u95f4\u8df3\u8fc7\u4e86\u4e00\u4e2a\u5976\u725b\u5bfc\u81f4\u7384\u5b66\u9519\u8bef\u3002\n\n\u81f3\u4e8e\u5176\u5b83\u7684\u4f18\u5316\u3002\u3002\u3002\u53ef\u80fd\u53ea\u6709\u4e09\u76ee\u8fd0\u7b97\u7b26\u548c\u5feb\u8bfb\u5feb\u8f93\u4e4b\u7c7b\u7684\u5427\u3002\n\n\u518d\u7ed9\u51fa\u4e00\u79cd\u5176\u5b83\u7684\u538b\u4e00\u7ef4\u505a\u6cd5\uff1a\u56e0\u4e3a\u5728\u7b2c $i$ \u6b21\u5faa\u73af\u65f6\uff0c\u53ea\u6709 $dp_{i},dp_{i-1}$ \u5bf9\u6574\u4f53\u6709\u7528\uff0c\u53ef\u4ee5\u53ea\u4fdd\u5b58\u8fd9\u4e24\u4e2a\uff0c\u6bcf\u6b21\u4f7f\u7528 memcpy \u51fd\u6570\u6765\u8f6c\u6362\u5373\u53ef\u3002\u4ee3\u7801\u5c31\u4e0d\u8d34\u4e86\uff0c\u4e0d\u7136\u592a\u957f\u3002\n\nupdate\uff1a\u589e\u52a0\u4e86\u51e0\u4e2a\u5c0f\u4f18\u5316\u548c\u4e00\u79cd\u65b0\u7684\u538b\u4e00\u7ef4\u505a\u6cd5\u30022020.5.6\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cmath>\n#include <algorithm>\n#include <string>\n#include <cstring>\n#include <queue>\n#define MR 400000\nusing namespace std;\nint n,iq[405],eq[405],dp[MR*2+20],ans,maxx[405],minx[405];\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>iq[i]>>eq[i];\n\t}\n\tmemset(dp,~0x3f3f3f3f,sizeof(dp));\n\tdp[0+MR]=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(iq[i]>0)\n\t\t{\n\t\t\tmaxx[i]=maxx[i-1]+iq[i];\n\t\t\tminx[i]=minx[i-1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmaxx[i]=maxx[i-1];\n\t\t\tminx[i]=minx[i-1]+iq[i];\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n        if(iq[i]<=0&&eq[i]<=0) continue;\n\t\tif(iq[i]>0)\n\t\t{\n\t\t\tfor(int j=maxx[i];j>=max(minx[i],MR/(-2));j--)\n\t\t\t{\n\t\t\t\tif(-MR<=j-iq[i]&&j-iq[i]<=MR)\n\t\t\t\tdp[j+MR]=max(dp[j+MR],dp[j-iq[i]+MR]+eq[i]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int j=max(minx[i],MR/(-2));j<=maxx[i];j++)\n\t\t\t{\n\t\t\t\tif(-MR<=j-iq[i]&&j-iq[i]<=MR)\n\t\t\t\tdp[j+MR]=max(dp[j+MR],dp[j-iq[i]+MR]+eq[i]);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<=MR;i++)\n\t{\n\t\tif(dp[i+MR]>=0)\n\t\t{\n\t\t\tans=max(i+dp[i+MR],ans);\n\t\t}\n\t}\n\tcout<<ans<<endl;\n    return 0;\n}\n```\n\n\u770b\u5728\u6211\u5199\u7684\u8fd9\u4e48\u8ba4\u771f\u8be6\u7ec6\u7684\u4efd\u4e0a\uff0c\u7ed9\u8fc7\u5457 qaq\u3002",
        "postTime": 1588737844,
        "uid": 191868,
        "name": "monstersqwq",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2340 \u3010[USACO03FALL]Cow Exhibition G\u3011"
    },
    {
        "content": "\u672c\u9898\u53ef\u7528DP\u6c42\u89e3\n\n\u8003\u865101\u80cc\u5305\uff0c\u628a\u667a\u5546\u770b\u6210\u4f53\u79ef\uff0c\u60c5\u5546\u770b\u6210\u4ef7\u503c\n\n\u6ce8\u610f\u662f**\u6070**\u653e\u5165\u4f53\u79ef\u4e3a$j$\u7684\u80cc\u5305\u91cc\n\n\u8f6c\u79fb\u65b9\u7a0b$dp[j]=max(dp[j],dp[j-s[i]]+f[i])$\n\n\u4f46\u662f\u4f60\u4ee5\u4e3a\u8fd9\u6837\u5c31\u884c\u4e86\u5417\uff1f\uff1f\n\n\u9898\u76ee\u4e2d\u662f\u4f1a\u51fa\u73b0\u8d1f\u6570\u7684\uff01\n\n\u600e\u4e48\u529e\uff1f\u6570\u7ec4\u504f\u79fb\u554a\n\n\u4ece400000\u5f00\u59cb\u8fdb\u884c\u8f6c\u79fb\uff0c(\u5373\u5f002\u500d\u7684\u6570\u7ec4\u4f7f\u8d1f\u6570\u8f6c\u4e3a\u6b63\u6570)\n\n400000\u662f\u600e\u4e48\u6765\u7684\u5462?\u6700\u5927\u5976\u725b\u6570$400$\u548c\u6700\u5927\u667a\u5546$1000$\u7684\u4e58\u79ef\n\n\u53e6\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u70b9\uff0c\u56e0\u4e3a\u8d1f\u6570\u7684\u7279\u6b8a\u6027\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u6211\u4eec\u8981\u4ece0\u6b63\u7740\u5411\u540e\u9762\u627e\uff0c\u56e0\u4e3a\u8d1f\u6570\u662f\u4ece\u5de6\u5f80\u53f3\u8fdb\u884c\u8f6c\u79fb\u7684\n\n\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint s[444],f[444],dp[888888];//s,f\u5982\u9898\u610f\uff0cdp\u6570\u7ec4Emm\u4e0d\u9700\u8981\u89e3\u91ca\nint n,ans;\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d%d\",s+i,f+i);//\u8f93\u5165\n    memset(dp,-0x7f,sizeof(dp));//\u6070\u653e\u5165\u7684\u521d\u59cb\u5316\n    dp[400000]=0;//\u4ece400000\u5f00\u59cb\u8f6c\u79fb\n    for(int i=1;i<=n;i++){\n        if(s[i]>0)\n            for(int j=800000;j>=s[i];j--)\n                dp[j]=max(dp[j],dp[j-s[i]]+f[i]);//\u540c01\u80cc\u5305\n        else\n            for(int j=0;j<=800000+s[i];j++)\n                dp[j]=max(dp[j],dp[j-s[i]]+f[i]);\t//\u8d1f\u6570\u8981\u6b63\u7740\u505aDP\uff0c\u56e0\u4e3a\u4ed6\u662f\u4ece\u5de6\u5f80\u53f3\u8fdb\u884c\u8f6c\u79fb\u7684\n    }\n    for(int i=400000;i<=800000;i++)//\u56e0\u4e3a\u4e0d\u4e00\u5b9a\u667a\u5546\u8d8a\u5927\u8d8a\u597d,\u6240\u4ee5\u8981\u679a\u4e3e\u4e00\u904d\n    if(dp[i]>=0)//\u6ce8\u610f\uff0c\u53ea\u6709\u80fd\u591f\u6070\u653e\u5165\uff08\u88ab\u66f4\u65b0\u8fc7\uff09\uff0c\u4ee5\u53ca\u60c5\u5546\u975e\u8d1f\u65f6\uff0c\u624d\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848\n    ans=max(ans,i+dp[i]-400000);\n    printf(\"%d\\n\",ans);//\u8f93\u51fa\u7b54\u6848\uff0c\u6362\u884c\u662f\u4e2a\u597d\u4e60\u60ef\n    return 0;\n}\n\n```\n\n\u6211\u53e3\u80e1\u4e86\uff0c\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u7ed9\u8fc7\u5427QWQ",
        "postTime": 1541463771,
        "uid": 58399,
        "name": "\u72f8\u72f8\u517b\u7684\u654f\u654f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2340 \u3010\u5976\u725b\u4f1a\u5c55\u3011"
    },
    {
        "content": "\u5982\u4f55\u8868\u793a\u72b6\u6001\uff1f\n```\ndp[j]  \u524di\u53ea\u5976\u725b\u7528for\u5b8c\u6210\u3002\n```\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1f\n```\ndp[j] = max(dp[j], dp[j\u2212s[i]] + f[i])\n```\n\u521d\u59cb\u72b6\u6001\uff1f\n```\nmemset(dp, \u22120x3f, sizeof(dp)); \u8d1f\u65e0\u7a77\n\ndp[400000] = 0;\n```\n### \u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n;\nint s[405], f[405];\nint dp[400005];\nconst int MR = 100000;\n\nint main() {\n    memset(dp, -0x3f, sizeof(dp));\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t    cin >> s[i] >> f[i];\n\t}\n\tdp[MR] = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (s[i] >= 0) {\n\t\t    for (int j = 2 * MR; j >= s[i]; j--) {\n\t\t        dp[j] = max(dp[j], dp[j - s[i]] + f[i]);\n\t\t    }\n\t\t} else {\n\t\t    for (int j = 0; j <= 2 * MR + s[i]; j++) {\n\t\t        dp[j] = max(dp[j], dp[j - s[i]] + f[i]);\n\t\t    }\n\t\t}\n\t}\n\tint ans = 0;\n\tfor (int i = MR; i <= 2 * MR; i++)\n\t\tif (dp[i] >= 0)\n\t\t\tans = max(ans, i + dp[i] - MR);\n\tcout << ans << endl;\n    return 0;\n}\n```\n",
        "postTime": 1589683329,
        "uid": 317198,
        "name": "MilkyCoffee",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2340 \u3010[USACO03FALL]Cow Exhibition G\u3011"
    },
    {
        "content": "\u89e3\u6790\uff1a\u7531\u4e8e\u8fd9\u662f\u6bcf\u4e2a\u5976\u725b\u88c5\u6216\u4e0d\u88c5\uff0c\u5f88\u660e\u663e\u8fd9\u662f\u4e00\u4e2a 01 \u80cc\u5305\n\n\u72b6\u6001\uff1a$dp[i][j]=x$ \u8868\u793a\u8003\u8651\u52301\u5230 i \u5934\u5976\u725b\uff0c\u667a\u5546\u548c\u4e3a j \u7684\u6700\u5927\u60c5\u5546\u548c\u4e3a x\u3002\n\n\u7b54\u6848\uff1a$max(dp[n][j])$ $(0\\leq$ $j\\leq400000)$\u3002\n\n\u8f6c\u79fb\uff1a$dp[i][j]$ $=max$ $(dp[i-1][j-IQ[i]]+EQ[i],dp[i-1][j])$\u3002\n\n\u521d\u503c\uff1a$memset(dp,-999999,sizeof(dp));\ndp[i][0]=1$ $(0\\leq$ $i\\leq$ $n$ $)$\u3002\n\n\u4f46\u662f\u7531\u4e8e j \u6709\u53ef\u80fd\u4e3a\u8d1f\u6570\uff0c\u6240\u4ee5\u8981\u5c06 dp \u6570\u7ec4\u6574\u4f53\u5e73\u79fb\u3002\n\n\u7531 -400000 \u5230 400000 \u53d8\u6210 0 \u5230 800000\u3002\n\n\u6240\u4ee5\u8fd9\u4e2a\u601d\u8def\u5bf9\u5417\uff1f\n\n\u4f60\u53ea\u8981\u7a0d\u5fae\u6d4b\u8bd5\u4e00\u4e0b\u5c31\u77e5\u9053\uff0c\u8fd9\u4e2a\u601d\u8def\u4f1a MLE\u3002\n\n\u4e0b\u9762\u6765\u4ecb\u7ecd\u4e00\u4e0b\u6211\u7684\u89e3\u51b3\u65b9\u6cd5\uff1a\u6eda\u52a8\u6570\u7ec4\uff01\uff01\uff01\n\n\u8fd9\u662f\u6307\u5728\u7b2c i \u9879\u53ea\u4e0e\u7b2c i-1 \u9879\u6709\u5173\u7cfb\u7684\u4e00\u79cd dp \u4f18\u5316\u65b9\u6cd5\uff0c\u8fd9\u53ef\u4ee5\u5c06\u7b2c i-2 \u9879\u4e4b\u524d\u7701\u7565\uff0c\u80fd\u8282\u7701\u7a7a\u95f4\u3002\n\n\u6570\u7ec4\u6eda\u52a8\u540e\u7684\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint IQ[401],EQ[401];\nint dp[3][800001];\nint ans;\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&IQ[i],&EQ[i]);\n    }\n    memset(dp,-999999,sizeof(dp));\n    dp[1][400000]=0;\n    dp[2][400000]=0;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=800000;j++)\n        {\n            if(j>IQ[i])\n            {\n                dp[2][j]=max(dp[1][j],dp[1][j-IQ[i]]+EQ[i]);\n            }\n            else\n            {\n                dp[2][j]=dp[1][j];\n            }\n        }\n        for(int j=1;j<=800000;j++)\n        {\n            dp[1][j]=dp[2][j];\n        }\n    }\n    for(int i=400000;i<=800000;i++)\n    {\n        if(dp[1][i]>=0) ans=max(ans,dp[1][i]+i-400000);\n    }\n    cout<<ans;\n    return 0;\n}\n```\n\n\n",
        "postTime": 1558175883,
        "uid": 97136,
        "name": "chenzida",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2340 \u3010\u5976\u725b\u4f1a\u5c55\u3011"
    },
    {
        "content": "~~\u88ab\u7eff\u9898\u652f\u914d\u7684\u6050\u60e7\uff1f\uff1f\uff1f~~ \u6700\u5f00\u59cb\u770b\u5230\u9898\u76ee\u662f\u61f5\u903c\u7684\uff0c\u4e4b\u540e\u770b\u4e86\u9898\u89e3\u624d\u660e\u767d\u3002\u5c06**\u667a\u5546\u548c\u60c5\u5546\u5206\u522b\u770b\u4f5c\u5bb9\u91cf\u548c\u4ef7\u503c**\u6765\u505a01\u80cc\u5305\u3002\n$F[i]$\u8868\u793a\u5f53\u667a\u5546\u603b\u548c\u4e3a$i$\u65f6\uff0c\u60c5\u5546\u7684\u6700\u5927\u503c\u3002\n$$F[i]=max(F[i-a[k]]+b[k])$$\n\u4f46\u662f\u6709\u4e00\u70b9\u6211\u4eec\u9700\u8981\u6ce8\u610f\uff0c\u5728\u72b6\u6001\u8f6c\u79fb\u7684\u8fc7\u7a0b\u4e2d\uff0c\u667a\u5546\u548c\u60c5\u5546\u662f\u5141\u8bb8\u4e3a\u8d1f\u6570\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e3a\u4e86\u8003\u8651\u5230\u8fd9\u79cd\u60c5\u51b5\uff0c\u5c06\u667a\u5546\u5f80\u53f3\u79fb$sa$\u4e2a\u5355\u4f4d\u3002\n\u6b22\u8fce\u8e29[Frozen_Heart](https://www.cnblogs.com/lsgjcya/p/9183448.html)",
        "postTime": 1528963107,
        "uid": 45206,
        "name": "Frozen_Heart",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2340 \u3010\u5976\u725b\u4f1a\u5c55\u3011"
    },
    {
        "content": "\u6b64\u9898\u4e3a\u7279\u6b8a\u76840-1\u80cc\u5305\u95ee\u9898\u3002\u6211\u4eec\u53ef\u4ee5\u4ee5\u60c5\u5546\u4e3a\u7269\u54c1\u5bb9\u91cf,\u667a\u5546\u4e3a\u4ef7\u503c\uff0c\u5c06\u5176\u8f6c\u4e3a\u6b63\u89c4\u768401\u80cc\u5305\u95ee\u9898\u3002\uff08\u697c\u4e0b\u9898\u89e3\u8ba4\u4e3a\u6b64\u65b9\u6cd5\u672a\u770b\u5230\u672c\u8d28\uff0c\u4f46\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u80fdAC\uff0c\u4f46\u4e5f\u53ef\u80fd\u662f\u6211\u9020\u5316\u592a\u6d45\uff09\n\n\u4e00\u70b9\u5c0f\u4f18\u5316\uff08\u72b6\u538b DP\uff09\uff1a\u6570\u7ec4\u7684\u4e0b\u6807\u548c\u503c\u90fd\u53ef\u4ee5\u5b58\u50a8\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u667a\u5546\u5b58\u5728\u4e0b\u6807\u4e0a\uff0c\u60c5\u5546\u5b58\u5728\u503c\u4e0a\u3002\n\n\u6700\u540e\u8981\u6ce8\u610f\uff1aC++ \u4e2d\u6ca1\u6709\u8d1f\u6570\u4e0b\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u628a dp \u6570\u7ec4\u5e73\u79fb m\uff08\u80cc\u5305\u5bb9\u91cf\u3001\u4e3a\u6b63\u6570\u60c5\u5546\u4e4b\u548c\uff09 \u4f4d\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint w[105]={},f[105]={},ff[200010]={};\nint main()\n{\n    int n,m=0;\n    //freopen(\"smrtfun.in\",\"r\",stdin);\n    //freopen(\"smrtfun.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n      scanf(\"%d%d\",&w[i],&f[i]);//w\u6570\u7ec4\u5b58\u667a\u5546\uff0cf\u6570\u7ec4\u5b58\u60c5\u5546\uff08w\u53d8\u4e0b\u6807\uff0cf\u53d8\u503c\uff09 \n      if(w[i]>0) m+=w[i];//\u8ba1\u7b97\u80cc\u5305\u5bb9\u91cf\uff08\u60c5\u5546\uff09 \n    }\n    m*=2;//m\u662f\u5e73\u79fb\u7684\u4f4d\u6570 \n    memset(ff,-127/3,sizeof(ff)); \n    ff[m/2]=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(w[i]>0)//\u6839\u636ew[i]\u7684\u7b26\u53f7\u786e\u5b9a\u5faa\u73af\u65b9\u5411\uff0c\u6d88\u9664\u540e\u6548\u6027,\u5e76\u4ece\u8fd9\u91cc\u5f00\u59cb\u6570\u7ec4\u5e73\u79fb\uff0c\u9632\u6b62\u51fa\u73b0\u8d1f\u4e0b\u6807 \n        for(int j=m;j>=w[i];j--)//\u63a5\u4e0b\u6765\u662f01\u80cc\u5305\u95ee\u9898\u6a21\u677f\uff0c\u4fdd\u8bc1\u6bcf\u4ef6\u7269\u54c1\u53ea\u9009\u4e00\u6b21 \n          ff[j]=max(ff[j],ff[j-w[i]]+f[i]);\n        else\n        for(int j=0;j<=m-w[i];j++)//\u8fd9\u4e2a\u5faa\u73af\u662f\u6570\u7ec4\u5e73\u79fb\u5f04\u51fa\u6765\u7684\uff0c\u7531\u4e0a\u4e2a\u5faa\u73af\u7ecf\u6570\u5b66\u8fd0\u7b97\u5f97\u6765\u3002\u4e0a\u4e2a\u5faa\u73af\u662fm->w[i]\uff0c\u4e24\u8fb9\u4e58-1\uff0c\u53d8\u6210-w[i]**<-**-m\uff0c\u518d\u52a0m\uff0c\u5373\u5f97\u5230m-w[i]**<-**0 \n          ff[j]=max(ff[j],ff[j-w[i]]+f[i]);\n    }\n    int ans=0,k=m/2;//k\u662f\u5e73\u79fb\u7684\u4f4d\u6570\n    for(int i=0;i<=k;i++)\n      if(ff[i+k]>=0 && i+ff[i+k]>ans)//ff[i+k]\u5b58\u7684\u662f\u60c5\u5546\uff0c\u5fc5\u987b\u5224\u65ad\u975e\u8d1f\u6570\uff0c\u800c\u4ece0\u5f00\u59cb\u7684\u4e0b\u6807\u4fdd\u8bc1\u667a\u5546\u6ca1\u8d1f\u6570 \n        ans=i+ff[i+k];////i\u662f\u667a\u5546\uff0cff[i+k]\u662f\u60c5\u5546 \n    printf(\"%d\",ans);\n    //fclose(stdin);\n   // fclose(stdout);\n    return 0;\n}\n\u53ef\u80fd\u5c0f\u849f\u84bb\u5bf9\u8fd9\u9053\u9898\u7684\u89e3\u6cd5\u4e0d\u591f\u597d\uff0c\u4e5f\u5e0c\u671b\u795e\u725b\u6307\u6559\u3002\n```",
        "postTime": 1499586696,
        "uid": 21534,
        "name": "ysner",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2340 \u3010\u5976\u725b\u4f1a\u5c55\u3011"
    },
    {
        "content": "[\u5982\u6709\u4e0d\u80fd\u6b63\u5e38\u663e\u793a\u7684LaTeX\u8bf7\u6765\u8fd9\u91cc](https://blog.csdn.net/kkkksc03/article/details/102093788)\n\n## description:\n\u8d1d\u897f\u6709\u6743\u9009\u62e9\u8ba9\u54ea\u4e9b\u5976\u725b\u53c2\u52a0\u5c55\u89c8\u3002\u7531\u4e8e\u8d1f\u7684\u667a\u5546\u6216\u60c5\u5546\u4f1a\u9020\u6210\u8d1f\u9762\u6548\u679c\uff0c\u6240\u4ee5\u8d1d\u897f\u4e0d\u5e0c\u671b\u51fa\u5c55\u5976\u725b\u7684\u667a\u5546\u4e4b\u548c\u5c0f\u4e8e\u96f6\uff0c\u6216\u60c5\u5546\u4e4b\u548c\u5c0f\u4e8e\u96f6\u3002\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u6761\u4ef6\u4e0b\uff0c\u5979\u5e0c\u671b\u51fa\u5c55\u5976\u725b\u7684\u667a\u5546\u4e0e\u60c5\u5546\u4e4b\u548c\u8d8a\u5927\u8d8a\u597d\uff0c\u8bf7\u5e2e\u52a9\u8d1d\u897f\u6c42\u51fa\u8fd9\u4e2a\u6700\u5927\u503c\u3002\n\n## solution:\n\u8fd9\u9053\u9898\u53ef\u4ee5\u60f3\u5230\u7528\u80cc\u5305\u6765\u505a\u3002\n\n\u56e0\u4e3a\u4e24\u4e2a\u5546\u662f\u76f8\u5bf9\u7b49\u4ef7\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8bbe\u4e00\u4e2a\u4e3a\u201c\u4ef7\u683c\u201d\uff0c\u4e00\u4e2a\u4e3a\u201c\u4ef7\u503c\u201d\u5c31\u884c\u4e86\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5206\u522b\u5224\u65ad\u6570\u7ec4\u7684\u4e0b\u6807\u548c\u8fd9\u4e2a\u4e0b\u6807\u5185\u503c\u7684\u6b63\u8d1f\u6765\u786e\u8ba4\u5b83\u662f\u5426\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848\u3002\n\n\u4f46\u662f\u4e0b\u6807\u6709\u4e00\u4e2a\u5f0a\u7aef\u5c31\u662f\u4e0d\u80fd\u4e3a\u8d1f\n\n\u4f46\u8fd9\u6837\u4e5f\u7b80\u5355\uff0c\u53ea\u8981\u628a\u5b83\u4eec\u7edf\u4e00\u52a0\u4e0a\u4e00\u4e2a\u5927\u503c\u5c31\u884c\u4e86\u3002\n\n\u6ce8\u610f\u8fd9\u91cc\u4e5f\u4e0d\u80fd\u4e71\u52a0\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u662f\u8981\u7b97\u5165\u80cc\u5305\u65f6\u95f4\u590d\u6742\u5ea6\u7684\uff0c\u52a0\u4e0a400*1000=400000\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u6d1b\u5495\u7684\u6570\u636e\u597d\u7384\u5b66\uff0c\u8bfb\u5165\u7684\u6570\u7ec4\u5f00\u5c0f\u4e864\u500d\u8fd8\u80fdA...\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint s[105],f[105];\nint dp[900005];\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d\",&s[i],&f[i]);\n\t}\n\tmemset(dp,-0x3f,sizeof(dp));\n\tdp[400000]=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(s[i]>=0)\n\t\tfor(int j=800000;j>=s[i];j--)\n\t\t{\n\t\t\tdp[j]=max(dp[j],dp[j-s[i]]+f[i]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int j=0;j<=800000+s[i];j++)\n\t\t\t{\n\t\t\t\tdp[j]=max(dp[j],dp[j-s[i]]+f[i]);\n\t\t\t}\n\t\t}\n\t}\n\tint ans=0;\n\tfor(int i=400000;i<=800000;i++)\n\t{\n\t\tif(dp[i]>=0)\n\t\t{\n\t\t\tans=max(ans,dp[i]+i-400000);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n} \n```\n",
        "postTime": 1570193669,
        "uid": 45475,
        "name": "ShineEternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2340 \u3010\u5976\u725b\u4f1a\u5c55\u3011"
    },
    {
        "content": "# \u6211\u4eec\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\u6765AC\uff08~~tle~~\uff09\u8fd9\u9053\u9898\n\n\n\n\n### \u770b\u5230\u8fd9\u9053\u9898\u9996\u5148\u60f3\u5230\u7684\u65b9\u6cd5\u662f\u8bb0\u5fc6\u5316\u641c\u7d22 ~~\u56e0\u4e3a\u597d\u6253\u561b~~\n\n\n### \u4ece\u7b2c\u4e00\u53ea\u5976\u725b\u5f00\u59cb\u6df1\u641c\uff0c\u7b49\u5230\u60c5\u5546\u548c\u667a\u5546\u90fd\u4e0d\u5c0f\u4e8e0\u7684\u65f6\u5019\u66f4\u65b0\u7b54\u6848\n\n\u540c\u65f6\u6211\u4eec\u5c31\u667a\u5546\u548c\u60c5\u5546\u90fd\u4e0d\u5c0f\u4e8e\u96f6\u65f6\u66f4\u65b0\u5230\u6bcf\u4e2a\u5976\u725b\u7684\u7b54\u6848\u5224\u91cd\u526a\u679d \n\n\n\u4ee3\u7801\u65e2\u597d\u5199\u53c8\u597d\u60f3\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<map>\n#include<cstring>\n#include<algorithm>\n#define ss 808087\nusing namespace std;\ninline int read(){\n\tint x(0),f(1);char c(getchar());\n\tfor(;!isdigit(c);c=getchar()) c=='-'?f=-1:1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0';\n\treturn  x*f;\n}\n\ninline bool cmp(int a,int b){return a>b;}\nmap<int ,int >p;\nint n,w[505],v[505],cnt(0),ans=0;\ninline void dfs(int v1,int v2,int step){\n\tif(step==cnt){\n\t\tif(v1<0||v2<0) return;\n\t\tif(v1+v2<ans) return;\n\t\tans=v1+v2;return ;\n\t}\n\tif(p[step]>v1+v2&&v1>=0&&v2>=0) return ;\n\tif(v1>=0&&v2>=0) p[step]=v1+v2;\n\tif(step>cnt) return;\n\tdfs(v1,v2,step+1);\n\tdfs(v1+w[step+1],v2+v[step+1],step+1);\n\t\n}\n\nint main(){\n\tn=read();\n\tfor(register int i=1;i<=n;i++){\n\t\tint x(read()),y(read());\n\t\tif(x<0&&y<0) continue;\n\t\tw[++cnt]=x;v[cnt]=y;\n\t\t//f[x+400000]=y;\n\t}\n\tdfs(0,0,1);\n\tdfs(w[1],v[1],1);\n\tprintf(\"%d\\n\",ans);\n}\n```\n~~\u5b9e\u9645\u4e0a\u8ddf\u4e0d\u526a\u679d\u76f8\u6bd4\u53d8\u5316\u4e0d\u5927~~\n\n------------\n\n\n\n\n### \u6240\u4ee5\u6211\u4eec\u73b0\u5728\u8003\u8651dp\u505a\u6cd5\n\n### \u6211\u4eec\u8ba9F[i][j]\u8868\u793a\u5230\u7b2ci\u53f7\u5976\u725b\u7684\u60c5\u5546\u603b\u548c\u4e3aj\u65f6\u7684\u6700\u4f18\u667a\u5546\n\uff08\u4f46\u60c5\u5546\u6709\u53ef\u80fd\u662f\u8d1f\u6570\u554a\uff0c\u8fd9\u548b\u529e\u561e\uff09\u53ef\u4ee5\u540c\u65f6\u52a0\u4e0a\u4e00\u4e2a\u8f83\u5927\u7684\u6570\u5b57\u8ba9\u4ed6\u53d8\u6210\u975e\u8d1f\u6570\u3002\u6570\u636e\u8303\u56f4\u5df2\u7ecf\u7ed9\u4e86\u6211\u4eec\u8fd9\u4e2a\u6570\uff0c400*1000=400000\u3002\n\n\n\n\n\u5bf9\u4e8e\u6bcf\u4e00\u53ea\u5976\u725b\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u6216\u8005\u4e0d\u9009\u3002\n\n\u6211\u4eec\u5c31\u53ef\u4ee5\u5199\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n## f[i][j]=max(f[i-1][j],f[i-1][j-v1[i]]+v2[i])\n\n## \u54a6\uff0c\u8fd9\u5c31\u662f\u4e2a\u88f8\u7684\u80cc\u5305\u554a\uff01\n\n\n### \u4e8e\u662f\u6211\u4eec\u538b\u7f29\u72b6\u6001\uff0c\u5c31\u6709\u4e86\n\n\n\n## f[j]=max(f[j],f[j-v[i]]+w[i]);\n\n\n\n#### \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8d1f\u6570\u6bd4\u8f83\u7279\u6b8a\uff0c\u8ddf\u6b63\u6570\u4e0d\u540c\uff0c\u6211\u4eec\u9700\u8981\u6b63\u7740\u5faa\u73afj\n#### \u8fd8\u6709\u4e00\u4e2a\u5c0f\u4f18\u5316\u5c31\u662f\uff0c\u5f53\u4e00\u53ea\u5976\u725b\u7684\u667a\u5546\u548c\u60c5\u5546\u90fd\u662f\u8d1f\u6570\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8fd8\u8981\u4ed6\u5e72\u5565\uff1f\u6254\u6389\uff01\n\n\u9644\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<map>\n#include<cstring>\n#include<algorithm>\n#define ss 808087\nusing namespace std;\ninline int read(){\n\tint x(0),f(1);char c(getchar());\n\tfor(;!isdigit(c);c=getchar()) c=='-'?f=-1:1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0';\n\treturn  x*f;\n}\n\ninline bool cmp(int a,int b){return a>b;}\n\nint n,w[505],v[505],cnt(0),ans=0,f[ss];\nint main(){\n\tn=read();\n\tfor(register int i=1;i<=n;i++){\n\t\tint x(read()),y(read());\n\t\tif(x<0&&y<0) continue;\n\t\tw[++cnt]=x;v[cnt]=y;\n\t\tf[x+400000]=y;\n\t}\n\tmemset(f,0xcf,sizeof(f));f[400000]=0;\n\tfor(register int i=1;i<=cnt;i++){\n\t\tif(v[i]>0){\n\t\t\tfor(int j=800000;j>=v[i];j--)\n\t\t\tf[j]=max(f[j],f[j-v[i]]+w[i]);\n\t\t}\n\t\telse {\n\t\t\tfor(int j=0;j<=800000+v[i];j++)\n\t\t\tf[j]=max(f[j],f[j-v[i]]+w[i]);\n\t\t}\n\t}\n\tfor(register int i=400000;i<=800000;i++) \n\t  if(f[i]>=0) \n\t     ans=max(ans,f[i]+i);\n\tprintf(\"%d\\n\",ans-400000);\n}\n```\n\u6c42\u8fc7\n\n\n\n\n\n",
        "postTime": 1564038745,
        "uid": 124591,
        "name": "\u7d2b\u85af\u5e03\u4e01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2340 \u3010\u5976\u725b\u4f1a\u5c55\u3011"
    },
    {
        "content": "### \u6cbf\u7528\u5404\u4f4ddalao\u7684\u601d\u8def\uff0c\u8fd9\u91cc\u53ea\u662f\u4ecb\u7ecd\u4e00\u4e0b\u4e00\u79cd\u6570\u7ec4\u5e73\u79fb\u7684~~\u5077\u61d2~~\u65b9\u6cd5\u3002\n\n\u770b\u89c1\u5404\u4f4ddalao\u4eec\u90fd\u662f\u62ff\u7740400000\u52a0\u554a\u51cf\u7684\uff0c\u8fd9\u9898\u7801\u91cf\u4e0d\u5927\u8fd8\u597d\u70b9\uff0c\u5982\u679c\u9047\u5230\u7801\u91cf\u5927\u7684\u9898\u76ee\u5c31\u5f88\u70e6\u4e86\uff0c\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u7528\u6307\u9488\u4ee3\u66ff\u6570\u7ec4\u3002\n\n\u5177\u4f53\u505a\u6cd5\uff1a\u6bd4\u5982\u5bf9\u4e8e\u6b64\u9898\uff0c\u5f00\u4e2a400000\\*2\u4ee5\u4e0a\u5927\u5c0f\u7684\u6570\u7ec4`_f`\uff0c\u4e0b\u6807\u662f\u4ece0\u5f00\u59cb\u7684\u3002\u6211\u4eec\u73b0\u5728\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488`f`\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u53e5\u8bdd\uff1a\n\n```cpp\nf = _f + 400003 //\uff08\u4e3a\u4e86\u9632\u6b62\u8bef\u64cd\u4f5c\u8d8a\u754c\uff0c\u539f\u6570\u7ec4\u5927\u5c0f\u5f00\u76848e5+7\uff09\n```\n\n\u7531\u4e8e`_f`\u76f8\u5f53\u4e8e\u5f00\u8f9f\u4e86\u8fde\u7eed\u5185\u5b58\u5730\u5740\u7684\u6307\u9488\uff08\u603b\u5171\u5f00\u4e868e5+7\u4e2aint\u7c7b\u578b\u6570\u636e\u5927\u5c0f\uff09\uff0c\u73b0\u5728\u628a`f`\u8d4b\u503c\u4e3a`_f`\u540e\u8fde\u7eed\u5185\u5b58\u7684\u4e2d\u95f4\u4f4d\u7f6e\uff0c\u90a3\u4e48\u6307\u9488`f`\u524d\u3001\u540e\u5404\u6709`4e5`\u4ee5\u4e0a\u7684\u5185\u5b58\u3002\n\n\u90a3\u4e48\u8fd9\u4e2a`f`\u600e\u4e48\u7528\u5462\uff1f\u7528`*(f - 400000)`\uff1f\n\n\u4e0d\u9700\u8981\uff01\u6211\u4eec\u628a\u5b83\u5f53\u6210\u6570\u7ec4\u5373\u53ef\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c`f[xxx]`\u548c`*(f + xxx)`\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u662f\u7b49\u4ef7\u7684\u3002\u6211\u4eec\u5927\u591a\u6570\u65f6\u5019\u53ef\u4ee5\u628a\u6307\u9488\u5f53\u505a\u6570\u7ec4\u4f7f\u7528\u3002\n\n\u7136\u540e\u901a\u8fc7\u628a\u9898\u610f\u5efa\u6a21\u621001\u80cc\u5305\u7c7b\u578b\u7684dp\uff0c\u76f4\u63a5\u505a\u5c31\u53ef\u4ee5\u5566\uff01\n\n#### code\uff1a\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\nusing namespace std;\n#define maxn 405\n#define maxm 800007\nint n, iq[maxn], eq[maxn], _f[maxm], ans;\nint *f;\n#define isdigit(x) ((x) >= '0' && (x) <= '9')\ninline int read() {\n\tint res = 0, flag = 0;\n\tchar c = getchar();\n\twhile (!isdigit(c)) flag = c == '-', c = getchar();\n\twhile (isdigit(c)) res = (res << 1) + (res << 3) + (c ^ 48), c = getchar();\n\treturn flag ? -res : res;\n}\nint main() {\n\tf = _f + 400003;\n\tn = read();\n\tfor (int i = 1; i <= n; ++i) iq[i] = read(), eq[i] = read();\n\tmemset(_f, 0xcf, sizeof(_f));\n\tf[0] = 0;\n\tfor (int i = 1; i <= n; ++i)\n\t\tif (iq[i] > 0) {\n\t\t\tfor (int j = 400000; j - iq[i] > -400000; --j) f[j] = max(f[j], f[j - iq[i]] + eq[i]);\n\t\t} else {\n\t\t\tfor (int j = -400000; j <= 400000 + iq[i]; ++j) f[j] = max(f[j], f[j - iq[i]] + eq[i]);\n\t\t}\n\tfor (int i = 0; i <= 400000; ++i) if (f[i] >= 0) ans = max(ans, i + f[i]);\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n\n```\n\n\u6211\u8bf4\u7684\u4e00\u5927\u5806\u90fd\u5f88\u57fa\u7840\uff0c\u4e0d\u8fc7\u6709\u65f6\u5019\u4e5f\u5f88\u6709\u7528\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u505a\u4e00\u4e0b\u8fd9\u9898=>[\u3010P5026\u3011Lycanthropy](https://www.luogu.org/problemnew/show/P5026)\u3002",
        "postTime": 1548752653,
        "uid": 73574,
        "name": "WAMonster",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2340 \u3010\u5976\u725b\u4f1a\u5c55\u3011"
    },
    {
        "content": "dp\n\n\u5982\u679c\u7206\u641c\u4f1a\u5927\u5927\u7684\u65f6\u95f4\u8d85\u9650\n\n\u800c\u6211\u4eec\u8fd8\u8981\u8003\u8651\u8d1f\u6570\u7684\u60c5\u51b5\uff08\u6837\u4f8b\uff09\n\n\u7a7a\u95f4\u4e0d\u591f\uff0c\u6eda\u52a8\u6570\u7ec4\u7701\u7a7a\u95f4\n\n\u8bbef[i][j]\u4e3a\u7528\u5230\u7b2ci\u53ea\u5976\u725b\uff0c\u667a\u5546\u4e3aj\u65f6\u60c5\u5546\u6700\u5927\u503c(\u6ce8\u610f\u8d1f\u6570\uff09\n\n\u9009\u7b2ci\u53ea\u5976\u725bf[i-1][j-a[i]]+b[i]\n\n\u4e0d\u9009\u7b2ci\u53ea\u5976\u725bf[i-1][j]\n\n\u53d6\u4e00\u4e2amax\u5c31\u53ef\u4ee5\u4e86\n\n\u6700\u540e\u7edf\u8ba1f[n][j]+j(\u6ce8\u610f\u4ed6\u4eec\u90fd\u4e0d\u662f\u8d1f\u6570\uff09\n\n\u8bb0\u5f97\u9644\u52a0\u6eda\u52a8\u6570\u7ec4\uff0c\u4e0d\u7136\u7ea663\u5206\n\n\u4e0b\u9762\u662f\u4ee3\u780163\u5206\uff1a\n\n\n```pascal\nvar\n  n,i,j:longint;\n  s,ans:longint;\n  a,b:array[-5..1005] of longint;\n  f:array[-5..405,-8005..8005] of longint;\nfunction max(x,y:int64):int64;\nbegin\n  if x>y then exit(x)\n         else exit(y);\nend;\nbegin\n  readln(n);\n  for i:=1 to n do\n    begin\n      readln(a[i],b[i]);\n      s:=s+abs(a[i]);\n      //writeln(s);\n    end;\n  for i:=0 to n do\n    for j:=-2*s to s*2 do\n      f[i][j]:=-100000000;\n  f[0][0]:=0;\n  //writeln(s);\n  for i:=1 to n do\n    for j:=-1*s to s do\n      f[i][j]:=max(f[i-1][j-a[i]]+b[i],f[i-1][j]);\n  //for i:=1 to n do\n    //begin\n      //for j:=-s to s do\n        //write(f[n][j],' ');\n      //writeln;\n    //end;\n  //writeln(0);\n  for i:=0 to s do\n    if (f[n][i]+i>ans) and (f[n][i]>0) then ans:=f[n][i]+i;\n  writeln(ans);\nend.\n```\n\nAC\uff1a\n\n```pascal\nvar\n  n,i,j:longint;\n  s,ans:longint;\n  a,b:array[-5..1005] of longint;\n  f:array[-5..5,-800005..800005] of longint;\nfunction max(x,y:int64):int64;\nbegin\n  if x>y then exit(x)\n         else exit(y);\nend;\nbegin\n  //writeln(sizeof(f)/1024/1024:0:2);\n  readln(n);\n  for i:=1 to n do\n    begin\n      readln(a[i],b[i]);\n      s:=s+abs(a[i]);\n      //writeln(s);\n    end;\n  for i:=0 to 1 do\n    for j:=-2*s to s*2 do\n      f[i][j]:=-100000000;\n  f[0][0]:=0;\n  //writeln(s);\n  for i:=1 to n do\n    for j:=-1*s to s do\n      f[i and 1][j]:=max(f[(i-1) and 1][j-a[i]]+b[i],f[(i-1) and 1][j]);\n  //for i:=1 to n do\n    //begin\n      //for j:=-s to s do\n        //write(f[n][j],' ');\n      //writeln;\n    //end;\n  //writeln(0);\n  for i:=0 to s do\n    if (f[n and 1][i]+i>ans) and (f[n and 1][i]>0) then ans:=f[n and 1][i]+i;\n  writeln(ans);\nend.\n```\n\u8c22\u8c22\u5de8\u4f6c\u4eec\u7684\u89c2\u8d4f\uff01\uff01\uff01",
        "postTime": 1546313009,
        "uid": 36957,
        "name": "RainFestival",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2340 \u3010\u5976\u725b\u4f1a\u5c55\u3011"
    },
    {
        "content": "\u8bdd\u8bf4\u6211\u662f\u7b2c\u4e00\u6b21\u505ac++\u5904\u7406\u6570\u7ec4\u8d1f\u4e0b\u6807\u7684\u9898\u76ee\n\n\u53ef\u4ee5\u5f88\u5feb\u7684\u60f3\u5230\u7528\u667a\u5546\u4f5c\u4e3a\u4e0b\u6807\uff0c$dp_i$\u8868\u793a\u667a\u5546\u548c\u4e3a$i$\u7684\u6700\u5927\u60c5\u5546\u548c\n\u76f4\u63a5\u4e0a01\u80cc\u5305\n\n\u5bf9\u4e8e\u667a\u5546$s$\u4e3a\u6b63\uff0c\u5927\u5230\u5c0f\u679a\u4e3e\uff0c\u4e3a\u8d1f\uff0c\u5c0f\u5230\u5927\u679a\u4e3e\uff0c\u4e3b\u8981\u662f\u8981\u6ee1\u8db301\u80cc\u5305\n\n\u7531\u6837\u4f8b\u5f97\u77e5\uff0c\u4e2d\u9014\u667a\u5546/\u60c5\u5546\u548c<0\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff0c\u5b58\u5728\u9006\u88ad\u60c5\u51b5\n\n\u6240\u4ee5dp\u6570\u7ec4\u9700\u8981\u8bb0\u5f55\u8d1f\u4e0b\u6807\n\nc++\u65e0\u6cd5\u8d1f\u4e0b\u6807\uff0c\u6240\u4ee5\u5168\u90e8\u4e0b\u6807\u52a0\u4e0a$400000$\n\n\u56e0\u4e3a\u548c\u7684\u4e0a\u754c\u662f400000\n\n\u4f60\u6700\u7ec8\u5224\u65ad\u4e00\u4e0b\u4e24\u4e2a\u548c\u90fd\u5f97>0\n\nCode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 800010\nusing namespace std;\nint n, dp[maxn], ans;\n\ninline int read(){\n\tint s = 0, w = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') w = -1;\n\tfor (; isdigit(c); c = getchar()) s = (s << 1) + (s << 3) + (c ^ 48);\n\treturn s * w;\n}\n\nint main(){\n\tn = read();\n\tmemset(dp, -0x3f, sizeof(dp));\n\tdp[400000] = 0;\n\twhile (n--){\n\t\tint s = read(), f = read();\n\t\tif (s > 0) for (int i = 800000; i >= s; --i) dp[i] = max(dp[i - s] + f, dp[i]); else\n\t\tfor (int i = 0; i <= 800000 + s; ++i) dp[i] = max(dp[i - s] + f, dp[i]);\n\t}\n\tfor (int i = 400000; i <= 800000; ++i)\n\t\tif (dp[i] >= 0) ans = max(ans, dp[i] + i - 400000);\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1566048395,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2340 \u3010\u5976\u725b\u4f1a\u5c55\u3011"
    },
    {
        "content": "\u52a8\u89c4\u6e23\u770b\u8fc7\u6765\u4e86\uff0c\u641c\u7d22+\u526a\u679dA\u6389\u8fd9\u9898\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint a[100010][2],ans,n,q[100010];\nvoid dfs(int k,int s1,int s2)\n{\n    if(s1+s2+q[k]<=ans)\n     return;\n    if(s1>=0&&s2>=0&&ans<s1+s2)\n     ans=s1+s2;\n    if(k==n+1)\n     return;\n    if(a[k][0]<=0&&a[k][1]<=0)\n     dfs(k+1,s1,s2);\n    else\n    {\n        dfs(k+1,s1+a[k][0],s2+a[k][1]);\n        dfs(k+1,s1,s2);\n    }\n} \nint main()\n{\n    //freopen(\".in\",\"r\",stdin);\n    //freopen(\".out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {scanf(\"%d%d\",&a[i][0],&a[i][1]);\n     if(a[i][0]+a[i][1]>0)\n      q[i]=a[i][0]+a[i][1];}\n    for(int i=n-1;i>=1;i--)\n     q[i]+=q[i+1];\n    dfs(1,0,0);\n    cout<<ans;\n    return 0;    \n}\n```",
        "postTime": 1512818134,
        "uid": 55748,
        "name": "hyr1357",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2297 \u3010\u5237\u56fe\u3011"
    },
    {
        "content": "# \u4e00\u9898\u80cc\u5305\u9898\n\n### \u5b9a\u4e49\n- s[i]\u8868\u793a\u60c5\u5546,f[i]\u8868\u793a\u667a\u5546\n\n- \u7531\u4e8e\u667a\u5546\u60c5\u5546\u53ef\u4ee5\u4e3a\u8d1f\u6240\u4ee5\u6211\u4eec\u8bbe\u4e00\u4e2amid=450000\u7528dp[k]\u8868\u793a\u60c5\u5546\u4e3ak\u65f6\u667a\u5546\u7684\u6700\u5927\u503c(\u60c5\u5546\u603b\u548c\u6700\u4f4e\u4e3a-400000\u6240\u4ee5mid\u7528450000)\u7136\u540e\u6bcf\u4e2a\u6570\u7ec4\u7684\u4e0b\u6807\u90fd\u52a0\u4e0amid\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b58\u8d1f\u6570\u4e86(\u4f8b\u5982dp[-1]\u8868\u793a\u4e3adp[449999])\n\n~~\u672c\u6765\u662f\u6253\u7b97\u7528map\u7684,\u7136\u540e\u88ab\u901f\u5ea6\u6162\u548c\u9ebb\u70e6\u529d\u9000\u4e86~~\n\n- \u7531\u4e8e\u60c5\u5546\u53ef\u4ee5\u4e3a\u8d1f\u4e5f\u53ef\u4ee5\u4e3a\u6b63,\u6240\u4ee5\u80cc\u5305\u6b63\u7740\u5faa\u73af\u4e0d\u884c\u53cd\u7740\u4e5f\u4e0d\u884c ~~(\u5f53\u7136\u4f60\u53ef\u4ee5\u5168\u90fd\u8981)~~ \u6570\u7ec4\u52a0\u4e0a\u8868\u793a\u7b2c\u51e0\u5934\u725b\u4f1a\u7206\u70b8,\u6240\u4ee5\u8fd9\u91cc\u7528dp[1][k]\u8868\u793a\u4e0a\u4e00\u6b21\u7684\u7ed3\u679c,dp[2][k]\u8868\u793a\u672c\u6b21\u5faa\u73af\u7684\u7ed3\u679c,\u7136\u540e\u7528dp[2][k]\u5237\u65b0dp[1][k]\n\n- k\u7684\u53d6\u503c\u4e3alow<=k<=high(low\u4e3a\u5230\u73b0\u5728\u60c5\u5546\u51fa\u73b0\u7684\u6700\u5c0f\u503c\u6240\u4ee5\u5f53\u60c5\u5546\u5c0f\u4e8e\u96f6\u65f6low+=\u60c5\u5546,high\u4e3a\u5230\u73b0\u5728\u60c5\u5546\u51fa\u73b0\u7684\u6700\u5927\u503c\u6240\u4ee5\u5f53\u60c5\u5546\u4e0d\u5c0f\u4e8e\u96f6\u65f6high+=\u60c5\u5546)\n\n### \u521d\u59cb\u5316\n\n- for(int p=-400000;p<=400000;p++) dp[2][mid+p]=-5641239;//\u56e0\u4e3a\u667a\u5546\u60c5\u5546\u53ef\u80fd\u4e3a\u8d1f\u6240\u4ee5\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u5f88\u5c0f\u7684\u6570\n\n- dp[2][mid]=0;//\u76f8\u5f53\u4e8e\u4e00\u5f00\u59cb\u667a\u5546\u60c5\u5546\u90fd\u4e3a0\n    \n\n\n### \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n```\ndp[2][k+s[i]+mid]=max(dp[2][k+s[i]+mid],dp[1][k+mid]+f[i]);(1<=i<=n,low<=k<=high)\n```\n\n### \u627e\u6700\u5927\u503c \nans=max(ans,dp[2][p+mid]+p);(0<=p<=400000)\u6ce8\u610fdp[2][p+mid]\u4e00\u5b9a\u8981\u5927\u4e8e\u96f6\n## \u4ee3\u7801\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define low lll//\u9632\u6b62\u5df2\u7ecf\u88ab\u5b9a\u4e49\u51fa\u73b0\u9519\u8bef\n#define high gggg//\u540c\u4e0a\nint n,s[10001],f[10001];//\u524d\u9762\u90fd\u63d0\u5230\u8fc7\nint ans=0,dp[3][900000],mid=450000,low,high;//\u540c\u4e0a\nint main()\n{\n\tcin>>n;//\u8f93\u5165\n\tfor(int p=1;p<=n;p++) cin>>s[p]>>f[p];//\u8f93\u5165\n\tfor(int p=-400000;p<=400000;p++) dp[2][mid+p]=-5641239;//\u521d\u59cb\u5316\n\tdp[2][mid]=0;//\u540c\u4e0a\n\tfor(int i=1;i<=n;i++)//\u5f00\u59cbdp\n\t{\n\t\tfor(int k=high;k>=low;k--) dp[1][k+mid]=dp[2][k+mid];//\u7528dp[2][k]\u5237\u65b0dp[1][k]\n\t\tfor(int k=high;k>=low;k--)\n\t\t{\n\t\t\tif(dp[1][k+mid]>-5000000)//\u5224\u65addp[k+mid]\u662f\u5426\u6210\u7acb,\u5982\u679c\u4e0d\u6ee1\u8db3\u8868\u793a\u642d\u914d\u4e0d\u51fa\u8fd9\u4e2a\u6570,\u4e0d\u9700\u8981\u8ba1\u7b97(\u4e0d\u8fc7\u597d\u50cf\u6ca1\u5fc5\u8981)\n\t\t\t{\n\t\t\tdp[2][k+s[i]+mid]=max(dp[2][k+s[i]+mid],dp[1][k+mid]+f[i]);\n\t\t        }\n\t\t}\n\t\tif(s[i]<=0) low+=s[i];\n\t\telse high+=s[i];//\u5237\u65b0low\u4e0ehigh\u7684\u503c\n\t}\n\tfor(int p=0;p<=400000;p++) if(dp[2][p+mid]>=0) ans=max(ans,dp[2][p+mid]+p);//\u627e\u6700\u5927\u503c,\u6ce8\u610fif(dp[2][p+mid]>=0)\u662f\u5fc5\u987b\u7684\n\tcout<<ans;//\u8f93\u51fa\n}\n```\n\n\n",
        "postTime": 1565356279,
        "uid": 199270,
        "name": "Y_B_Y",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2340 \u3010\u5976\u725b\u4f1a\u5c55\u3011"
    },
    {
        "content": "\u597d\u9898\u554a!\u597d\u9898!\n\n\u597d\u4e00\u4e2aDP!\n\n\u8fd9\u9053\u9898\u6211\u4e5f\u6ca1\u5565\u597d\u8bf4\u7684,\u76f4\u63a5\u4e0a\u4ee3\u7801!\u4e3a\u9632\u6b62\u6284\u88ad,\u4ee3\u7801\u4e2d\u6709\u4e9b\u5730\u65b9\u6ca1\u6709,\u8bf7\u5927\u5bb6\u81ea\u5df1\u6572!\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<iostream>\n#include<algorithm>\n#define for1(i,a,b) for(int i=a;i<=b;++i)\n#define for2(i,a,b) for(int i=a;i>=b;--i)\nusing namespace std;\nconst int MR=400000;\nint f[2*400000+10],q[401],z[401],ans;\n//\u56e0\u4e3a\u5982\u679c\u5f002\u7ef4\u6570\u7ec4\u4f1a\u70b8,\u6545\u7528\u60c5\u5546\u548c\u4f5c\u4e3a\u6570\u7ec4\u4e0b\u6807,\u8ba9f[i]\u8868\u793a\u60c5\u5546\u548c\u4e3ai\u65f6\u667a\u5546\u4e4b\u548c\u7684\u6700\u5927\u503c. \n//\u6ce8\u610f:\u8fd9\u9053\u9898\u8981\u5e73\u79fb!\u56e0\u4e3a\u5976\u725b\u60c5\u5546\u548c\u4e3a\u8d1f\u65f6\u53ef\u80fd\u540e\u9762\u518d\u52a0\u4e0a\u4e00\u4e9b\u5976\u725b\u7684\u60c5\u5546\u503c\u4f1a\u53d8\u6210\u6b63\u6570,\u6240\u4ee5\u5e73\u79fb200000.\n/*\n\u72b6\u6001:f[i]\u8868\u793a\u60c5\u5546\u548c\u4e3ai\u65f6\u667a\u5546\u4e4b\u548c\u7684\u6700\u5927\u503c\n\u8f6c\u79fb:f[i]=max(f[i],f[i-q[j]]+z[j])\n\u7b54\u6848:ans=max(i+f[i])\n\u521d\u503c:-999999,f[400000]=0\n*/\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n   \tstd::ios::sync_with_stdio(false);\n   \tint n;\n   \tcin>>n;\n   \tmemset(f,-999999,sizeof(f));\n   \tf[400000]=0; \n   \tfor1(i,1,n) cin>>z[i]>>q[i];//\u8bfb\u5165,z[]\u4ee3\u8868\u667a\u5546,q[]\u4ee3\u8868\u60c5\u5546. \n   \tfor1(i,1,n){\n   \t   \tif(q[i]>0) for2(j,400000<<2,0) if(j-q[i]>=0&&j-q[i]<=2*400000) f[j]=max(f[j],f[j-q[i]]+z[i]);\n   \t   \telse for1(j,0,400000<<2) if(j-q[i]>=0&&j-q[i]<=2*400000) f[j]=max(f[j],f[j-q[i]]+z[i]);\n   \t}\n   \t//ans\u8bf7\u5927\u5bb6\u81ea\u5df1\u5199\u5427 \n   \tcout<<ans;\n   \treturn 0;\n}\n\n```\n\n\u7b2c\u4e00\u6b21\u5199\u9898\u89e3,\u6c42\u7ba1\u7406\u653e\u8fc7",
        "postTime": 1541296816,
        "uid": 89934,
        "name": "\u8349\u539f\u98de\u98de\u7f8a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2340 \u3010\u5976\u725b\u4f1a\u5c55\u3011"
    }
]