[
    {
        "content": "### [\u9898\u76ee](https://www.luogu.com.cn/problem/P5543)\u63cf\u8ff0\uff1a\n\n\u4e00\u573a\u6f2b\u957f\u7684\u5e72\u65f1\u4f7f\u519c\u573a\u4e3b\u7ea6\u7ff0\u7684N\u7267\u573a\u6ca1\u6709\u8349, \u7136\u800c, \u968f\u7740\u96e8\u5b63\u7684\u5230\u6765, \u662f\u65f6\u5019\u201c\u91cd\u65b0\u79cd\u690d\u201d\u4e86\u3002\u5728\u519c\u592b\u7ea6\u7ff0\u7684\u5c0f\u5c4b\u91cc, \u4ed6\u6709\u4e24\u4e2a\u6876, \u5206\u522b\u6709\u4e00\u79cd\u8349\u7c7d\u3002\u4ed6\u60f3\u5728\u4ed6\u7684\u6bcf\u4e00\u4e2a\u7267\u573a\u79cd\u8349, \u5728\u6bcf\u4e00\u4e2a\u7267\u573a\u4e2d\u53ea\u80fd\u79cd\u4e00\u79cd\u8349\u3002 \u4f5c\u4e3a\u4e00\u540d\u5976\u519c, \u519c\u573a\u4e3b\u7ea6\u7ff0\u60f3\u786e\u4fdd\u4ed6\u80fd\u6ee1\u8db3\u4ed6\u7684M\u5934\u5976\u725b\u7684\u7279\u6b8a\u996e\u98df\u9700\u6c42\u3002\u4ed6\u6bcf\u5934\u5976\u725b\u90fd\u6709\u4e24\u4e2a\u81ea\u5df1\u6700\u559c\u6b22\u7684\u7267\u573a\u3002\u4e00\u4e9b\u5976\u725b\u53ea\u5403\u4e00\u79cd\u8349, \u56e0\u6b64\u7ea6\u7ff0\u5e0c\u671b\u786e\u4fdd\u5728\u8fd9\u4e9b\u5976\u725b\u6700\u559c\u6b22\u7684\u4e24\u4e2a\u7267\u573a\u91cc\u79cd\u690d\u540c\u4e00\u79cd\u7684\u8349; \u5269\u4e0b\u7684\u5976\u725b\u5219\u5403\u4e0d\u540c\u79cd\u7c7b\u7684\u8349\u3002\u5bf9\u4e8e\u90a3\u4e9b\u5976\u725b\uff0c\u7ea6\u7ff0\u5f53\u7136\u60f3\u786e\u4fdd\u5b83\u4eec\u6700\u559c\u6b22\u7684\u4e24\u5757\u7267\u573a\u91cc\u6709\u4e0d\u540c\u7684\u8349\u3002 \u8bf7\u5e2e\u52a9\u519c\u573a\u4e3b\u7ea6\u7ff0\u786e\u5b9a\u4ed6\u5728\u4ed6\u7684N\u5757\u7267\u573a\u4e0a\u6709\u591a\u5c11\u79cd\u79cd\u690d\u8349\u7684\u4e0d\u540c\u65b9\u5f0f\u3002\n\n### \u601d\u8def\uff1a\n\n\u4e0e\u5173\u62bc\u7f6a\u72af\u6709\u5f88\u591a\u76f8\u4f3c\u4e4b\u5904\uff0c\u5b9e\u7528\u5e76\u67e5\u96c6\u8865\u96c6\u7684\u601d\u8def\uff0c\u5c06\u4e24\u4e2a\u7267\u573a\u79cd\u76f8\u540c\u8349\u7684\u5173\u7cfb\u5f53\u4f5c\u300c\u53cb\u597d\u300d\uff0c\u5c06\u4e24\u4e2a\u7267\u573a\u79cd\u4e0d\u540c\u8349\u7684\u5173\u7cfb\u5f53\u4f5c\u300c\u654c\u5bf9\u300d\uff0c\u4f46\u503c\u5f97\u6ce8\u610f\u7684\u4e00\u70b9\u662f\u5e76\u975e\u6240\u6709\u7684\u7267\u573a\u4e00\u5b9a\u4e3a\u4efb\u610f\u4e00\u53ea\u5976\u725b\u6240\u559c\u7231\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u989d\u5916\u7684\u4e00\u4e2a\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u88ab\u63d0\u5230\u7684\u7267\u573a\u7684\u8fde\u901a\u6027\u3002\n\n\u5982\u679c\u4ea7\u751f\u51b2\u7a81\uff0c\u90a3\u4e48\u6700\u7ec8\u65b9\u6848\u6570\u5fc5\u5b9a\u4e3a0\uff1b\u82e5\u6ca1\u6709\u51b2\u7a81\uff0c\u5c31\u5728\u7b2c\u4e09\u4e2a\u5e76\u67e5\u96c6\u4e2d\u5224\u65ad\u8fde\u901a\u5757\uff0c\u8fde\u901a\u5757\u6570\u4e3a\u4e3acnt\uff0c\u5219$ans=2^{cnt}$;\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint n,m,a,b,ans;\nchar op;\nint fa[100005],gr[200005];\nint find(int x){\n    if(fa[x]==x) return x;\n    else return fa[x]=find(fa[x]);\n}\nint com(int x){\n    if(gr[x]==x) return x;\n    else return gr[x]=com(gr[x]);\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    ans=n;\n    for(int i=1;i<=n;i++){\n        gr[i]=i;\n        gr[i+n]=i+n;\n        fa[i]=i;\n    }\n    for(int i=1;i<=m;i++){\n        cin>>op>>a>>b;\n        // op=getchar();\n        // getchar();\n        // scanf(\"%d%d\",&a,&b);\n      //\u4e56\u4e56\u7528cin\uff08\u7b11\uff09\n        if(op=='S'){\n            gr[com(a)]=com(b);\n            gr[com(a+n)]=com(b+n);\n        }\n        else{\n            if(com(a)==com(b)){\n                ans=0;\n                break;\n            }\n            gr[com(a+n)]=com(b);\n            gr[com(a)]=com(b+n);\n        }\n        if(find(a)!=find(b)){\n            fa[find(a)]=find(b);\n            ans--;\n        }\n    }\n    if(ans==0){\n        printf(\"%d\",ans);\n        return 0;\n    }\n    printf(\"1\");\n    for(int i=1;i<=ans;i++) printf(\"0\");\n    return 0;\n}\n```\n\n",
        "postTime": 1580827445,
        "uid": 235832,
        "name": "potatoler",
        "ccfLevel": 4,
        "title": "Task200204.3 P5543 The Great Revegetation"
    },
    {
        "content": "\u89c2\u5bdf\u9898\u76ee\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u67d0\u51e0\u4e2a\u7267\u573a\u88ab\u63d0\u5230\u4e4b\u540e\uff0c\u82e5\u7267\u573a\u4e4b\u95f4\u6ca1\u6709\u51b2\u7a81\uff0c\u4ed6\u4eec\u7684\u65b9\u6848\u6570\u80af\u5b9a\u662f2\u3002\u5bf9\u4e8e\u6ca1\u6709\u88ab\u63d0\u5230\u7684\u7267\u573a\uff0c\u4ed6\u4eec\u80af\u5b9a\u67092\u79cd\u65b9\u6848\u3002\u4e8e\u662f\u5c31\u53ef\u4ee5\u60f3\u5230\u662f\u8054\u901a\u5757\u548c\u79cd\u7c7b\u5e76\u67e5\u96c6\u95ee\u9898\u3002\u5f003\u4e2a\u5e76\u67e5\u96c6\uff0c\u7b2c\u4e00\u4e2a\u5e76\u67e5\u96c6\u5224\u65ad\u4ed6\u4eec\u662f\u5426\u8054\u901a\uff08\u5373\u88ab\u63d0\u5230\uff09\uff0c\u53e6\u5916\u4e24\u4e2a\u79cd\u7c7b\u5e76\u67e5\u96c6\u5224\u65ad\u4ed6\u4eec\u6709\u6ca1\u6709\u51b2\u7a81\uff0c\u5373\u5982\u679c\u540c\u65f6\u9700\u8981\u76f8\u540c\u548c\u4e0d\u540c\u5c31\u5931\u8d25\u3002\u5982\u679c\u5931\u8d25\u65b9\u6848\u6570\u5c31\u5fc5\u5b9a\u4e3a0\u3002\u82e5\u5904\u7406\u5b8c\u540e\u6ca1\u6709\u51b2\u7a81\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5728\u7b2c\u4e00\u4e2a\u5e76\u67e5\u96c6\u4e2d\u5224\u65ad\u8054\u901a\u5757\uff0c\u6709\u51e0\u4e2a\u8054\u901a\u5757\uff0c\u65b9\u6848\u6570\u5219\u4e3a$2^{cnt}$(cnt=\u8054\u901a\u5757\u4e2a\u6570),\u53d8\u62102\u8fdb\u5236\u8868\u793a\uff0c\u5c31\u662f1\u540e\u9762cnt\u4e2a0\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1000010;\nint n,m,cnt;\nint fa[3*maxn];\nbool b;\nint find(int x){return fa[x]==x?x:fa[x]=find(fa[x]);}\nvoid join(int x,int y)\n{\n\tint fx=find(x),fy=find(y);\n\tif(fx!=fy) fa[fy]=fx;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=3*n;i++)\tfa[i]=i;\n\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tint x,y;\n\t\t\tchar a;\n\t\t\tcin>>a>>x>>y;\n\t\t\tjoin(x,y);\n\t\t\tif(a=='S')\n\t\t\t\t{\n\t\t\t\t\tif(fa[x+n]==fa[y+2*n] || fa[x+2*n]==fa[y+n])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tb=1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tjoin(x+n,y+n);\n\t\t\t\t\tjoin(x+2*n,y+2*n);\n\t\t\t\t}\n\t\t\tif(a=='D')\n\t\t\t\t{\n\t\t\t\t\tif(fa[x+n]==fa[y+n])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tb=1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tjoin(x+2*n,y+n);\n\t\t\t\t\tjoin(x+n,y+2*n);\n\t\t\t\t}\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(fa[i]==i)\tcnt++;\n\tif(b) cnt=0;\n\tif(!cnt) printf(\"0\\n\");\n\telse\n\t\t{\n\t\t\tprintf(\"1\");\n\t\t\tfor(int i=1;i<=cnt;i++)\n\t\t\t\tprintf(\"0\");\n\t\t}\n\t\t\n\treturn 0; \n}\n```\n",
        "postTime": 1567934889,
        "uid": 112391,
        "name": "\u540d\u6768\u5929\u5413",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P5543 \u3010[USACO19FEB]The Great Revegetation\u3011"
    },
    {
        "content": "### \u9898\u76ee\u7b80\u8ff0   \n- \u7ed9\u51fa $n$ \u4e2a\u70b9\uff0c$m$\u79cd\u9650\u5236\uff1a$a$ \u4e0e $b$ \u76f8\u7b49\u6216\u4e0d\u7b49\u3002\n- \u6bcf\u4e2a\u70b9\u53ea\u6709\u4e24\u79cd\u6570\u503c\u3002\n- \u6c42\u6700\u540e\u6ee1\u8db3\u9650\u5236\u7684\u65b9\u6848\u603b\u6570\u3002\n- \u6700\u540e\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u7b54\u6848\u3002\n- $n,m<=1e5$\n### \u601d\u8def\u5206\u6790  \n\u5148\u5047\u8bbe\u6ca1\u6709\u9650\u5236\u6761\u4ef6\uff0c\u5219 $1..n$ \u7684\u6392\u5217\u65b9\u6848\u6570\u4e3a $2^n$ \u3002\u800c\u6211\u4eec\u90fd\u77e5\u9053\uff0c $2^n$ \u7528\u4e8c\u8fdb\u5236\u8868\u793a\u5c31\u662f $1$ \u540e\u9762 $n$ \u4e2a $0$\uff0c\u5982\uff1a  \n$2^3= (1000)_2$   \n$2^4= (10000)_2$  \n$2^5= (100000)_2$  \n\u89c2\u5bdf\u9898\u76ee\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e0d\u7ba1\u662f\u54ea\u79cd\u9650\u5236\u6761\u4ef6\uff08\u4e24\u4e2a\u70b9\u76f8\u7b49\u6216\u4e0d\u7b49\uff09\uff0c\u5b9e\u9645\u4e0a\u90fd\u662f\u5c06\u8fd9\u4e24\u4e2a\u70b9\u201c\u6346\u7ed1\u201d\u5728\u4e86\u4e00\u8d77\u3002\u539f\u672c\u4e24\u4e2a\u70b9\u5206\u522b\u6709\u4e24\u79cd\u6570\u503c\uff0c\u5728\u9650\u5236\u4e4b\u540e\uff0c\u4e00\u4e2a\u70b9\u7684\u6570\u503c\u51b3\u5b9a\u4e8e\u53e6\u4e00\u4e2a\u70b9\u7684\u6570\u503c\uff0c\u8fd9\u4e24\u4e2a\u70b9\u5b8c\u5168\u53ef\u4ee5\u770b\u505a\u4e00\u4e2a\u70b9\u3002\u6240\u4ee5\uff0c\u6700\u540e\u6c42\u7684\u7b54\u6848\u5c31\u8f6c\u6362\u6210\u4e86\uff0c$n$ \u4e2a\u70b9\u4e2d\u6709\u591a\u5c11\u4e2a\u4e92\u76f8\u6ca1\u6709\u5173\u7cfb\u7684\u90e8\u5206\u3002\u6c42\u51fa\u8fd9\u4e2a\u7b54\u6848\uff0c\u4e0d\u9700\u8981\u8003\u8651\u4e24\u79cd\u9650\u5236\u6761\u4ef6\u7684\u533a\u522b\uff0c\u901a\u8fc7\u4e00\u4e2a\u5e76\u67e5\u96c6\u5168\u90fd\u5408\u5e76\u5373\u53ef\u3002  \n\u4f46\u662f\u8fd9\u6837\u505a\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u9898\u76ee\u7ed9\u7684\u6570\u636e\u5e76\u4e0d\u4fdd\u8bc1\u5404\u7ec4\u6570\u636e\u4e4b\u95f4\u4e92\u4e0d\u51b2\u7a81\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u8fdb\u884c\u5224\u65ad.\u8fd9\u4e2a\u5224\u65ad\u6bd4\u8f83\u7b80\u5355\uff0c\u76f4\u63a5\u5efa\u56fe\u66b4\u529b\u67d3\u8272\uff0c\u4e2d\u9014\u5982\u679c\u9047\u5230\u77db\u76fe\u5c31\u8868\u793a\u51b2\u7a81\u4e86\uff0c\u76f4\u63a5\u8f93\u51fa $0$\u3002\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct E{\n\t\tint to,next,v;//\u7ed3\u6784\u4f53\u5b58\u8fb9\n}e[211111];\nint e_num,p[111111];\nvoid e_add(int x,int y,int v)//\u5efa\u8fb9\n{\n\t\te[++e_num].to=y;\n\t\te[e_num].v=v;\n\t\te[e_num].next=p[x];\n\t\tp[x]=e_num;\n}\nint n,m;\nint f[311111];\nint find(int x)//\u5e76\u67e5\u96c6\n{\n\t\tif(x==f[x])return x;\n\t\treturn f[x]=find(f[x]);\n}\nint mark[111111];\nint col[111111];\nint fl=0;\nvoid dfs(int x)//\u66b4\u529b\u67d3\u8272\n{\n\t\t if(fl)return ;\n\t\t for(int i=p[x];i;i=e[i].next)\n\t\t {\n\t \t\tint y=e[i].to;\n\t\t\tif(col[y]==-1)//\u4e0d\u540c\u60c5\u51b5\u4e00\u4e00\u5224\u65ad\n\t\t\t{\n\t\t\t\tif(e[i].v==0)\n\t\t\t\t{\n\t\t\t\t\tcol[y]=col[x];\n\t\t\t\t\tdfs(y);\n\t\t\t\t}\n\t\t\t\tif(e[i].v==1)\n\t\t\t\t{\n\t\t\t\t\tcol[y]=!col[x];\n\t\t\t\t\tdfs(y);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif((e[i].v==0 && col[x]!=col[y]) || (e[i].v==1 && col[x]==col[y]))\n\t\t\t\t{\n\t\t\t\t\tfl=1;\n\t\t\t\t\tcout<<0;//\u7ed3\u679c\u77db\u76fe\uff0c\u76f4\u63a5\u8f93\u51fa0\n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(fl)return ;\n\t\t}\n}\nint main()\n{\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=1;i<=n;i++)f[i]=i;\n\t\tmemset(col,-1,sizeof(col));//\u989c\u8272\u6570\u7ec4\u521d\u59cb\u5316\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tchar c;\n\t\t\tint a,b;\n\t\t\tcin>>c>>a>>b;\n\t\t\tif(c=='S')\n\t\t\t\te_add(a,b,0),e_add(b,a,0);//\u82e5\u76f8\u7b49\uff0c\u5219\u8fb9\u6743\u4e3a0\n\t\t\telse \n\t\t\t\te_add(a,b,1),e_add(b,a,1);//\u82e5\u4e0d\u7b49\uff0c\u5219\u8fb9\u6743\u4e3a1\n\t\t\tint ra=find(a),rb=find(b);\n\t\t\tf[ra]=rb;//\u4e0d\u7ba1\u6761\u4ef6\uff0c\u76f4\u63a5\u5408\u5e76\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(col[i]==-1)//\u5efa\u51fa\u6765\u7684\u56fe\u4e0d\u4e00\u5b9a\u8054\u901a\uff0c\u6bcf\u4e2a\u70b9\u90fd\u8981\u5224\u65ad\u4e00\u8fb9\n\t\t\t{\n\t\t\t\tcol[i]=0;\n\t\t\t\tdfs(i);\n\t\t\t}\n\t\t}\n\t\tif(fl)return 0;//\u5982\u679c\u51b2\u7a81\uff0c\u5c31\u5728\u8fd9\u91cc\u7ed3\u675f\u7a0b\u5e8f\n\t\tint cnt=0;//\u7edf\u8ba1\u4e2a\u6570\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tfind(i);\n\t\t\tif(!mark[f[i]])\n\t\t\t{\n\t\t\t\tmark[f[i]]=1;\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t\tcout<<1;\n\t\tfor(int i=1;i<=cnt;i++)cout<<0;\n\t\treturn 0;\n}\n```\n",
        "postTime": 1625638223,
        "uid": 290856,
        "name": "SzTC",
        "ccfLevel": 0,
        "title": "P5543 [USACO19FEB]The Great Revegetation S \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\u5bf9\u7ed9\u5b9a\u56fe\u8fdb\u884c `01` \u67d3\u8272\uff0c\u6bcf\u6761\u8fb9\u63cf\u8ff0\u4e86\u4e24\u4e2a\u70b9\u662f\u540c\u8272\u6216\u8005\u5f02\u8272\uff0c\u6c42\u67d3\u8272\u65b9\u6848\u6570\u3002\n## \u601d\u8def\n\u56e0\u4e3a\u53ea\u6709\u4e24\u79cd\u989c\u8272\uff0c\u6240\u4ee5\u8fde\u901a\u5757\u4e2d\u53ea\u8981\u6709\u4efb\u4f55\u4e00\u4e2a\u70b9\u7684\u989c\u8272\u786e\u5b9a\u4e86\uff0c\u5c31\u53ef\u4ee5\u786e\u5b9a\u5176\u4ed6\u70b9\u7684\u989c\u8272\uff0c\u56e0\u6b64\u6bcf\u4e2a\u8fde\u901a\u5757\u5982\u679c\u53ef\u4ee5\u8fdb\u884c\u4e8c\u5206\u56fe\u67d3\u8272\uff0c\u5219\u5fc5\u7136\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u67d3\u8272\u65b9\u6cd5\uff0c$K$ \u4e2a\u8fde\u901a\u5757\u5219\u6709 $2^K$ \u79cd\u67d3\u8272\u65b9\u6cd5\u3002\u5982\u679c\u6709\u4e00\u4e2a\u8fde\u901a\u5757\u65e0\u6cd5\u4e8c\u5206\u56fe\u67d3\u8272\uff0c\u5219\u603b\u7684\u67d3\u8272\u65b9\u6848\u4e3a $0$\u3002\u6211\u4eec\u4f9d\u6b21\u627e\u5230\u6bcf\u4e2a\u8fde\u901a\u5757\u5e76\u8fdb\u884c\u6a21\u62df\u67d3\u8272\u5373\u53ef\u3002\n## \u590d\u6742\u5ea6\n### \u65f6\u95f4\n\u904d\u5386\u56fe $O(N+M)$\u3002\n### \u7a7a\u95f4\n\u8bb0\u5f55\u56fe $O(N+M)$\u3002\n## CODE\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int kMaxN = 1e5 + 1;\nstruct V {        // \u70b9\n  int c;          // \u67d3\u8272\n  vector<pair<int, int>> e;  // \u90bb\u8fb9\n} v[kMaxN];\nint n, m, x, y, t;\nchar ch;\nvoid S(int x, int c) {      // \u70b9x\u67d3\u8272c\n  if (v[x].c) {             // \u5df2\u7ecf\u67d3\u8272\n    if (v[x].c != c + 1) {  // \u4e0e\u4e4b\u524d\u7684\u67d3\u8272\u4e0d\u540c\n      t = -n;               // \u6807\u8bb0\u65e0\u89e3\n    }\n    return;\n  }\n  v[x].c = c + 1;          // \u67d3\u8272\n  for (auto i : v[x].e) {  // \u904d\u5386\u90bb\u8fb9\n    S(i.first, c ^ i.second);\n  }\n}\nint main() {\n  cin >> n >> m;\n  for (int i = 1; i <= m; i++) {\n    cin >> ch >> x >> y;\n    v[x].e.push_back({y, ch == 'D'}), v[y].e.push_back({x, ch == 'D'});\n  }\n  for (int i = 1; i <= n; i++) {  // \u679a\u4e3e\u70b9\n    if (!v[i].c) {                // \u627e\u5230\u65b0\u7684\u8fde\u901a\u5757\n      S(i, 0);                    // \u67d3\u8272\n      t++;                        // \u7d2f\u52a0\u6570\u91cf\n    }\n  }\n  cout << (t > 0 ? \"1\" + string(t, '0') : \"0\");\n  return 0;\n}\n```",
        "postTime": 1644657773,
        "uid": 444534,
        "name": "\u54c8\u58eb\u5947\u61a8\u61a8",
        "ccfLevel": 5,
        "title": "P5543 [USACO19FEB]The Great Revegetation S \u9898\u89e3"
    },
    {
        "content": "\u56e0\u4e3a\u53ea\u6709\u4e24\u79cd\u8349\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u9ed1\u767d\u67d3\u8272\u3002\u5fc5\u987b\u76f8\u540c\u7684\u4e00\u4e2a\u70b9\u67d3\u4e00\u6837\u7684\u4e00\u4e2a\u989c\u8272\uff0c\u5426\u5219\u7136\u4e0d\u4e00\u6837\u7684\u989c\u8272\u3002\u53ef\u4ee5\u75281\u548c-1\u8868\u793a\u8fd9\u4e24\u79cd\u989c\u8272\uff0c\u7136\u540e\u7528\u521d\u59cb\u5316\u4e3a0\u8868\u793a\u8fd8\u6ca1\u6709\u8d70\u5230\u3002\n\n\u7528\u4e00\u4e2adfs\uff0c\u4ece\u4e00\u4e2a\u70b9\u5f00\u59cb\uff0c\u6839\u636e\u89c4\u5219\u67d3\u8272\uff0c\u5982\u679c\u4efb\u4f55\u65f6\u95f4\u53d1\u73b0\u77db\u76fe\uff0c\u5c31\u8fd4\u56de \u975e\u3002\n\n\u9898\u76ee\u8ba9\u8f93\u51fa\u4e8c\u8fdb\u5236\uff0c\u6240\u4ee5\u6bcf\u6b21\u67d3\u5b8c\u7684\u65b9\u6848\u6570\u4e58\u4e8c\uff0c\u7ed3\u679c\u672b\u5c3e\u591a\u4e00\u4e2a0\u5373\u53ef\u3002\n\n\u6211\u4eec\u5b9a\u4e00\u4e2a\u6570\u7ec4color\u8868\u793a\u67d0\u70b9\u7684\u989c\u8272\uff0c\u521d\u59cb\u5316\u4e3a0\uff0c\u5f53\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u70b9\u4e3a0\u5c31\u5f00\u59cb\u4ece\u4ed6\u8dd1dfs\uff0cdfs\u4e3a\u5e03\u5c14\u7c7b\u578b\uff0c\u8fd4\u56detrue\u8868\u793a\u6ca1\u6709\u77db\u76fe\uff0cfalse\u8868\u793a\u6709\u77db\u76fe\u3002\u5728main\u91cc\u5982\u679c\u5f97\u5230\u6ca1\u6709\u77db\u76fe\u5c31\u7b54\u6848\u52a0\u4e00\uff0c\u5426\u5219\u8f93\u51fa0\uff08\u56e0\u4e3a\u5982\u679c\u56fe\u4e2d\u6709\u4e00\u4e2a\u77db\u76fe\u5c31\u8f93\u51fa0\uff09\uff0c\u6ca1\u6709\u7684\u8bdd\u5c31\u662f1\u540e\u9762\u7b54\u6848\u4e2a\u6570\u4e2a0\u3002\n\ndfs\u91cc\u4f20\u8fdb\u6765\u4e00\u4e2a\u70b9\uff0c\u8fd8\u6709\u8fd9\u4e2a\u70b9\u7684\u989c\u8272\u3002\u8fdb\u6765\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u8bb0\u5f55\u5728color\u6570\u7ec4\u4e2d\u3002adj1\u8868\u793a\u548c\u4f60\u76f8\u540c\u7684\u70b9\uff0c\u6240\u4ee5\u5faa\u73af\u5230adj1[u].size()\uff08\u8868\u793a\u548c\u4f60\u8fd9\u4e2a\u70b9\u7684\u76f8\u540c\u7684\u4e2a\u6570\uff09\uff0c\u627e\u5230\u4e00\u4e2a\u65b0\u7684\u70b9\uff0c\u770b\u770b\u662f\u4e0d\u662f0\uff0c\u5982\u679c\u662f\uff0c\u518d\u5728\u4ed6\u8eab\u4e0a\u8dd1\u4e00\u904ddfs\uff0c\u5982\u679c\u8fd9\u4e2a\u4e5f\u6709\u77db\u76fe\uff0c\u90a3\u4e48u\u70b9\u4e5f\u6709\u77db\u76fe\uff0c\u6240\u4ee5\u8fd4\u56defalse\u5373\u53ef\u3002\u7136\u540e\u5982\u679c\u8fd9\u4e2a\u70b9\u7684\u989c\u8272\u548cu\u7684\u989c\u8272\u4e0d\u540c\uff0c\u660e\u663e\u77db\u76fe\uff0c\u4e5f\u8fd4\u56defalse\u3002\u4e0d\u540c\u7684\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662fdfs\u65f6\u5019\u6ce8\u610fcolor\u8981\u7528\u8fd9u\u70b9\u76f8\u53cd\u7684\u989c\u8272\u3002\n\n\u8d34\u4e00\u4e0bdfs\u7684\u4ee3\u7801\u5c31\u884c\u4e86\uff0c\u5176\u4ed6\u7684\u90fd\u5f88\u7b80\u5355\u3002\n\n```\nbool dfs(int u, int c) {\n    color[u] = c;\n    for (int i = 0; i < adj1[u].size(); ++i) {\n        int v = adj1[u][i];\n        if (color[v] == false) if (dfs(v, c) == false) return false;\n        if (color[v] != color[u]) return false;\n    }\n    for (int i = 0; i < adj2[u].size(); ++i) {\n        int v = adj2[u][i];\n        if (color[v] == false) if (dfs(v, -c) == false) return false;\n        if (color[v] == color[u]) return false;\n    }\n    return true;\n}\n\n```\n\n",
        "postTime": 1597820336,
        "uid": 298325,
        "name": "Marshadow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5543 \u3010[USACO19FEB]The Great Revegetation S\u3011"
    },
    {
        "content": "\u5bb9\u6613\u60f3\u5230\uff0c\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u628a\u6bcf\u4e2a\u7ea6\u675f\u6761\u4ef6\u4e2d\u63d0\u5230\u7684\u4e24\u7267\u573a\u6240\u5728\u96c6\u5408\u5408\u5e76\u3002  \n\u8bbe\u6700\u540e\u96c6\u5408\u7684\u4e2a\u6570\u4e3a cnt \u5982\u679c\u4e0d\u53d1\u751f\u51b2\u7a81\u6bcf\u4e2a\u96c6\u5408\u90fd\u6709\u4e24\u79cd\u9009\u62e9\uff0c\u90a3\u4e48\u65b9\u6848\u6570\u5373\u4e3a $2^{cnt}$\uff0c\u5176\u4e8c\u8fdb\u5236\u5373\u4e3a1\u540e cnt \u4e2a0\u3002\n\n\u662f\u5426\u51b2\u7a81\u600e\u4e48\u5224\u5b9a\u5462\uff1f\n\n\u53ef\u4ee5\u7528\u5e26\u6743\u5e76\u67e5\u96c6\u89e3\u51b3\uff0c\u6240\u8c13\u5e26\u6743\u5e76\u67e5\u96c6\u5c31\u662f\u5728\u666e\u901a\u5e76\u67e5\u96c6fa\u6570\u7ec4\u7684\u57fa\u7840\u4e0a\uff0c\u589e\u52a0val\u6570\u7ec4\u6765\u8bb0\u5f55\u4e00\u4e2a\u8282\u70b9\u4e0e\u5176\u7236\u8282\u70b9\u7684\u5173\u7cfb\uff08\u5373\u201c\u6743\u201d\uff09\u3002  \n\u5982\u4f55\u8bb0\u5f55\u5173\u7cfb\u5462\uff1f  \n\u6700\u5f00\u59cb\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684 fa \u90fd\u662f\u81ea\u5df1\uff0c val \u90fd\u4e3a0\uff1b  \n\u5728\u67e5\u627e a \u7684\u7956\u5148\u5e76\u8def\u5f84\u538b\u7f29\u65f6\uff0c\u5728\u666e\u901a\u5e76\u67e5\u96c6\u8def\u5f84\u538b\u7f29\u7684\u57fa\u7840\u4e0a  \u4f7f$val_a=(val_{{fa}_a}+val_a)\\bmod \\texttt{base}$  \uff1b  \n\u82e5\u8981\u5408\u5e76 a , b \u4e24\u8282\u70b9\uff0c\u6743\u4e3a w \uff0c\u5c31\u8ba9 a \u7684\u7956\u5148\u6210\u4e3a b \u7684 fa,\n\u5e76\u4f7f $val_{{fa}_b}=(w-val_a-val_b) \\bmod \\texttt{base}$ \u3002  \nbase\u89c6\u60c5\u51b5\u800c\u5b9a\u3002   \n\u5728\u8fd9\u9053\u9898\u4e2d\uff0c\u53ef\u4ee5\u7528 0 \u6765\u8868\u793a\u76f8\u540c\uff0c\u7528 1 \u6765\u8868\u793a\u76f8\u5f02\uff1b  \n\u76f8\u540c\u5408\u5e76\u65f6\u7684\u6743\u503c\u4e3a 0 \uff0c\u76f8\u5f02\u65f6\u6743\u503c\u4e3a 1 \uff1b  \n\u663e\u7136\uff0c$(1+1) \\bmod2=0$,\u5219 base=2\u3002  \n\u5f53\u5408\u5e76\u65f6\u53d1\u73b0a\u548cb\u5728\u540c\u4e00\u96c6\u5408\u4e2d\u65f6\uff0c\u82e5$(val_a+val_b)\\bmod2=w$\uff0c\u4e0d\u6210\u7acb\uff0c\u5219\u6709\u51b2\u7a81\uff0c\u65b9\u6848\u6570\u4e3a 0 \u3002\n\n\n##\n## \u53c2\u8003\u4ee3\u7801\uff1a\n```cpp\n#include<stdio.h>\nconst int maxn=100010;\nint p[maxn],s[maxn],v[maxn];\nint find(int x){\n\tif(p[x]==x)return x;\n\tint f=find(p[x]);\n\tv[x]=(v[x]+v[p[x]])&1,p[x]=f;\n\treturn f;\n}\nint main(){\n\tint n,m,impossible=0;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)p[i]=i,s[i]=1;\n\tchar str;\n\twhile(m--){\n\t\tstr=getchar();\n\t\twhile(str!='S'&&str!='D')str=getchar();\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tif(impossible)continue;\n\t\tint fa=find(a),fb=find(b),t,l,w=(str=='D');\n\t\tif(fa!=fb){\n\t\t\tif(s[fa]>s[fb])t=fa,fa=fb,fb=t,l=a,a=b,b=l;\n\t\t\tp[fa]=fb,s[fb]+=s[fa],v[fa]=(w>=v[a]+v[b]?w-v[a]-v[b]:v[a]+v[b]-w)&1;\n\t\t}else impossible=(((v[a]+v[b])&1)!=w);\n\t}if(impossible){\n\t\tputchar('0');\n\t\treturn 0;\n\t}for(int i=1;i<=n;i++)\n\t\tif(p[i]==i)s[0]++;\n\tputchar('1');\n\twhile(s[0]--)putchar('0');\n\treturn 0;\n} \n```",
        "postTime": 1581586824,
        "uid": 212187,
        "name": "VTloBong",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P5543 \u3010[USACO19FEB]The Great Revegetation\u3011"
    },
    {
        "content": "\u6211\u4eec\u4f1a\u53d1\u73b0\u51e0\u4e2a\u6027\u8d28\uff1a\n\n\u628a\u6bcf\u4e2a\u9650\u5236\u7684\u4e24\u4e2a\u70b9\u8fde\u8fb9\uff0c\u5982\u679c\u80fd\u6ee1\u8db3\u6240\u6709\u9650\u5236\uff0c\u90a3\u4e48\u65b9\u6848\u6570\u5c31\u662f $2^{\\text{\u8fde\u901a\u5757\u7684\u4e2a\u6570}}$\n\n\u56e0\u4e3a\uff0c\u4e00\u4e2a\u8fde\u901a\u5757\u5185\u5982\u679c\u80fd\u6ee1\u8db3\u6240\u6709\u9650\u5236\uff0c\u90a3\u4e48\u628a\u6240\u6709\u8fde\u901a\u5757\u5185\u7684\u7c7b\u578b\u90fd\u6362\u4e00\u4e0b\u4e5f\u80fd\u6ee1\u8db3\u6240\u6709\u9650\u5236\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u4e2a\u8fde\u901a\u5757\u5b58\u5728\u4e24\u79cd\u4e0d\u540c\u79cd\u8349\u65b9\u5f0f\n\n\u90a3\u4e48\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u5185\u65e0\u8bba\u600e\u4e48\u79cd\u8349\u90fd\u6ca1\u529e\u6cd5\u4f7f\u8fde\u901a\u5757\u5185\u7684\u6240\u6709\u9650\u5236\u90fd\u80fd\u6ee1\u8db3\n\n\u90a3\u4e48\u76f4\u63a5\u8f93\u51fa 0\n\n\u8fd9\u4e2a\u5224\u65ad\u53ef\u4ee5\u8d2a\u5fc3\u7684\u5224\uff0c\u76f4\u63a5\u66b4\u529b\u67d3\u8272\uff0c\u7136\u540e\u6700\u540e\u518d\u626b\u4e00\u904d\u5c31\u884c\u4e86\n\n\u56e0\u4e3a\u8d2a\u5fc3\u53ef\u4ee5\u6ee1\u8db3\u5f53\u524d\u8fd9\u4e2a\u9650\u5236\u662f\u6ee1\u8db3\u7684\uff0c\u4f46\u662f\u4e0d\u80fd\u4fdd\u8bc1\u4f1a\u4e0d\u4f1a\u4f7f\u5176\u4ed6\u9650\u5236\u4e0d\u6ee1\u8db3\uff0c\u5982\u679c\u4ed6\u548c\u5176\u4ed6\u9650\u5236\u4ea7\u751f\u4e86\u51b2\u7a81\uff0c\u90a3\u4e48\u5728\u6700\u540e\u626b\u7684\u8fc7\u7a0b\u4e2d\u4e00\u5b9a\u4f1a\u88ab\u5224\u65ad\u51fa\u6765\uff0c\u5426\u5219\u5c31\u6ca1\u6709\u51b2\u7a81\n\n```cpp\n// This code wrote by chtholly_micromaker(MicroMaker)\n#include <bits/stdc++.h>\n#define reg register\nusing namespace std;\nconst int MaxN=100050;\nstruct Edge\n{\n\tint nxt,to,w;\n\t// S 0  D 1\n}E[MaxN<<2];\nstruct Quetion\n{\n\tint opt,u,v;\n\t// S 0  D 1\n}Q[MaxN<<1];\ntemplate <class t> inline void read(t &s)\n{\n\ts=0;\n\treg int f=1;\n\treg char c=getchar();\n\twhile(!isdigit(c))\n\t{\n\t\tif(c=='-')\n\t\t\tf=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c))\n\t\ts=(s<<3)+(s<<1)+(c^48),c=getchar();\n\ts*=f;\n\treturn;\n}\nint hd[MaxN],en,n,m;\nint col[MaxN];\ninline void adde(int u,int v,int w)\n{\n\t++en;\n\tE[en]=(Edge){hd[u],v,w};\n\thd[u]=en;\n\treturn;\n}\ninline void dfs(int u,int fa)\n{\n\tfor(int i=hd[u];~i;i=E[i].nxt)\n\t{\n\t\treg int v=E[i].to;\n\t\tif(v==fa||col[v]!=-1)\n\t\t\tcontinue;\n\t\tif(!E[i].w)\n\t\t\tcol[v]=col[u];\n\t\telse\n\t\t\tcol[v]=1-col[u];\n\t\tdfs(v,u);\n\t}\n\treturn;\n}\nsigned main(void)\n{\n\tmemset(hd,-1,sizeof hd);\n\tmemset(col,-1,sizeof col);\n\tcin>>n>>m;\n\treg int u,v;\n\tchar opt[3];\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tscanf(\"%s\",opt);\n\t\tread(u);read(v);\n\t\tQ[i]=(Quetion){\n\t\t\t0,u,v\n\t\t};\n\t\tif(opt[0]=='S')\n\t\t\tadde(u,v,0),adde(v,u,0);\n\t\telse\n\t\t\tadde(u,v,1),adde(v,u,1),Q[i].opt=1;\n\t}\n\treg int ans=0;\n\tfor(int i=1;i<=n;++i)\n\t\tif(col[i]==-1)\n\t\t{\n\t\t\t++ans;\n\t\t\tcol[i]=0;\n\t\t\tdfs(i,0);\n\t\t}\n\tfor(int i=1;i<=m;++i)\n\t\tif(!Q[i].opt)\n\t\t{\n\t\t\tif(col[Q[i].u]!=col[Q[i].v])\n\t\t\t{\n\t\t\t\tputs(\"0\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(col[Q[i].u]==col[Q[i].v])\n\t\t\t{\n\t\t\t\tputs(\"0\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\tprintf(\"1\");\n\tfor(int i=1;i<=ans;++i)\n\t\tputchar('0');\n\tputs(\"\");\n\treturn 0;\n}\n```\n\n",
        "postTime": 1584590788,
        "uid": 51376,
        "name": "MyukiyoMekya",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5543 \u3010[USACO19FEB]The Great Revegetation S\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u79cd\u7c7b\u5e76\u67e5\u548c\u666e\u901a\u5e76\u67e5\u7684\u7efc(keng)\u5408(die)\u9898  \n\u79cd\u7c7b\u5e76\u67e5\u662f\u4e00\u79cd\u53ef\u4ee5\u7528\u4e8e\u89e3\u51b3\u5206\u7c7b\u5173\u7cfb\u7684\u7b97\u6cd5  \n\u5b83\u9700\u8981\u4e00\u4e2a\u540c\u7c7b\u96c6\u548cn\u4e2a\u5f02\u7c7b\u96c6\uff08n\u4e3a\u603b\u7c7b\u522b-1\uff09\uff0c\u6bcf\u4e2a\u5f02\u7c7b\u96c6\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u5bf9\u5e94\u540c\u7c7b\u96c6\u7684\u4e00\u4e2a\u5143\u7d20  \n\u5f02\u7c7b\u96c6\u7684\u5143\u7d20\u5728\u4e00\u4e2a\u96c6\u5c31\u8868\u793a\u540c\u7c7b\u96c6\u5143\u7d20\u4e0d\u5728\u67d0\u4e2a\u96c6  \n\n\u4e3e\u4e2a\u6817\u5b50qwq  \n\u73b0\u5728\u67095\u4e2a\u4eba\uff0c\u5206\u4e3a3\u652f\u961f\u4f0d  \n1\u53f7\u8ddf2\u53f7\u4e0d\u5728\u4e00\u961f\n1\u53f7\u540c\u7c7b\u96c6\u54082\u53f7\u5f02\u7c7b\u96c6\u5408\u5e76\uff0c2\u53f7\u548c1\u53f7\u5f02\u7c7b\u96c6\u5408\u5e76  \n\u5982\u679c1\u53f7\u548c2\u53f7\u7684\u540c\u7c7b\u96c6\u5df2\u5408\u5e76\uff0c\u5219\u51fa\u73b0\u9519\u8bef  \n\n#### \u6ce8\u610f\u540c\u7c7b\u7684\u5408\u5e76\u65f6\u4e0d\u9700\u8981\u5224\u65ad\u662f\u5426\u7b26\u5408\u6761\u4ef6\uff0c\u5f02\u7c7b\u5408\u5e76\u9700\u8981\u5224\u65ad\uff08\u56e0\u4e3a\u8fd9\u4e2a\u6211\u8c03\u4e86\u4e09\u5468\uff09\uff01  \n\u666e\u901a\u7684\u5e76\u67e5\u8fd9\u91cc\u4e0d\u518d\u7ec6\u8bf4\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u7a0b\u5e8f\u4e2d\u7684findf,unite\u51fd\u6570\u548cfa\u6570\u7ec4  \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,u,v,ans;\nint fa[100005],grass[200005];\nint findf(int a)\n{\n\tif(fa[a]==a)\n\t\treturn a;\n\tfa[a]=findf(fa[a]);\n\treturn fa[a];\n}\nint findg(int a)\n{\n\tif(grass[a]==a)\n\t\treturn a;\n\tgrass[a]=findg(grass[a]);\n\treturn grass[a];\n}\nbool unite(bool s,int a,int b)\n{\n\tif(s)\n\t{\n\t\tgrass[findg(a)]=findg(b);\n\t\tgrass[findg(a+n)]=findg(b+n);\n\t}\n\telse\n\t{\n\t\tif(findg(a)==findg(b))\n\t\t\treturn false;\n\t\tgrass[findg(a+n)]=findg(b);\n\t\tgrass[findg(a)]=findg(b+n);\n\t}\n\tif(findf(a)!=findf(b))\n\t{\n\t\tfa[findf(a)]=findf(b);\n\t\tans--;\n\t}\n\treturn true;\n}\nint main()\n{\n\tchar c;\n\tcin>>n>>m;\n\tans=n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tgrass[i]=i;\n\t\tgrass[i+n]=i+n;\n\t\tfa[i]=i;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>c>>u>>v;\n\t\tif(!unite(c=='S',u,v))\n\t\t{\n\t\t\tans=0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(ans==0)\n\t{\n\t\tcout<<ans<<endl;\n\t\treturn 0;\n\t}\n\tcout<<1;\n\tfor(int i=1;i<=ans;i++)\n\t\tcout<<0;\n\tcout<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1578722101,
        "uid": 182525,
        "name": "yangyujia18",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5543 \u3010[USACO19FEB]The Great Revegetation\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a$n$\u5934\u725b\uff0c$m$\u4e2a\u6761\u4ef6\uff0c\u6bcf\u4e2a\u6761\u4ef6\u5173\u4e8e\u4e24\u5934\u725b$i$,$j$\u3002\u4e3a\u8fd9\u4e24\u5934\u725b\u7684\u53e3\u5473\u662f\u5426\u76f8\u540c\u3002\u6c42\u6240\u6709\u725b\u7684\u53e3\u5473\u7684\u65b9\u6848\u6570\uff0c\u4ee5\u4e8c\u8fdb\u5236\u8f93\u51fa\u3002\n\n\u89e3\uff1a\u5bb9\u6613\u60f3\u5230\uff0c\u5e94\u7528\u5e76\u67e5\u96c6\u3002\u5982\u679c\u6709\u5173\u4e8e\u4e24\u5934\u5976\u725b\u7684\u6761\u4ef6\uff0c\u4e00\u4e2a\u7684\u53e3\u5473\u5c31\u968f\u53e6\u4e00\u4e2a\u7684\u786e\u5b9a\u800c\u786e\u5b9a\uff0c\u5c31\u628a\u4ed6\u4eec\u5e76\u8d77\u6765\u3002\u8bbe\u6700\u540e\u5e76\u67e5\u96c6\u7684\u4e2a\u6570\u4e3a$cnt$\uff0c\u7b54\u6848\u4e3a$2^{cnt}$\u3002\u4f46\u5982\u4f55\u5224\u662f\u5426\u53ef\u884c\u5462\uff1f\n\n\u5982\u679c\u5f00\u59cb\u65f6\u5f00\u4e24\u4e2a\u96c6\u5408\uff0c\u76f8\u540c\u7684\u5728\u4e00\u4e2a\u96c6\u5408\uff0c\u4e0d\u76f8\u540c\u7684\u4e0d\u5728\u4e00\u4e2a\u96c6\u5408\uff0c\u53ef\u4ee5\u5417\uff1f\n\n\u4e0d\u884c\uff0c\u56e0\u4e3a\uff0c\u5728\u8bfb\u5230\u4e00\u4e2a\u5976\u725b\u65f6\uff0c\u5b83\u53ef\u4ee5\u88ab\u653e\u5230A\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u88ab\u653e\u5230B\u4e2d\uff0c\u5982\u679c\u4f60\u968f\u4fbf\u628a\u5b83\u6254\u8fdb\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u5c31\u4f1a\u9519\u5224\u3002\n\n\u6211\u7684\u505a\u6cd5\u662f\uff0c\u5148\u5efa\u4e00\u5f20\u5e26\u6743\u56fe\uff0c\u6743\u503c\u4e3a0\u62161\uff0c\u8868\u793a\u662f\u5426\u4e0d\u540c\uff0c\u5728\u56fe\u4e0a\u4ee5\u6df1\u641c\u9ed1\u767d\u67d3\u8272\uff0c\u5c31\u80fd\u907f\u514d\u4e0a\u9762\u7684\u95ee\u9898\u3002\n\n``` cpp\n\n//love yjl forever\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long  \nconst int INF=0x3f3f3f3f,MAX=1e5+5;\nint n,m;\nint f[MAX];\nint find(int x)\n{\n\tif(f[x]!=x) f[x]=find(f[x]);\n\treturn f[x];\n}\nvoid hebing(int x,int y){\n\tx=find(x);y=find(y);\n\tif(x!=y) f[x]=y;\n}\nint head[MAX*2],to[MAX*2],type[MAX*2],cnt,Next[MAX*2];\nvoid add(int x,int y,int z)\n{\n\tcnt++;\n\tNext[cnt]=head[x];head[x]=cnt;\n\tto[cnt]=y;type[cnt]=z;\n}\nint col[MAX];\nbool vis[MAX];\nbool dfs(int x)\n{\n\tint i;\n\tfor(i=head[x];i;i=Next[i])\n\t{\n\t\tint u=to[i],z=type[i];\n\t\tint yg=col[x]^z;\t\t\n\t\tif(col[u]&&col[u]!=yg)\n\t\t\treturn false;\n\t\tif(col[u]) continue;\n\n\t\tcol[u]=yg;\n\t\tif(!dfs(u))\t return false;\n\t}\n\treturn true;\n}\nint main()\n{\n/*\tfreopen(\"\",\"r\",stdin);\n\tfreopen(\"\",\"w\",stdout);*/\n\tint i;\n\tcin>>n>>m;\n\t\n\tchar c;\n\tfor(i=1;i<=n;i++)\n\t\tf[i]=i;\n\tc=getchar();\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tc=getchar();\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\t\n\t\t\n\t\thebing(x,y);\n\t\tif(c=='D'){\n\t\t\tadd(x,y,1);\n\t\t\tadd(y,x,1);\n\t\t}\n\t\telse {\n\t\t\tadd(x,y,0);\n\t\t\tadd(y,x,0);\n\t\t}\n\t\tc=getchar();\n\t}\n\t\n/*\tfor(i=1;i<=cnt;i++)\n\t\tcout<<type[i]<<\" \";\n\tcout<<endl;*/\n\tbool f=1;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(!col[i])\n\t\t{\n\t\t\tcol[i]=2;\n\t\t\tf&=dfs(i);\n\t\t}\n\t}\n\tif(!f) cout<<0<<endl;\n\telse \n\t{\n\t\tint ans=0;\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tint x=find(i);\n\t\t\tif(!vis[x]){\n\t\t\t\tans++;\n\t\t\t\tvis[x]=1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tcout<<1;\n\t\tfor(i=1;i<=ans;i++)\n\t\t\tcout<<0;\n\t}\n}\n/*\n3 3\nS 1 2\nD 3 2\nS 1 3\n*/\n```",
        "postTime": 1568726175,
        "uid": 20338,
        "name": "zhmshitiancai",
        "ccfLevel": 7,
        "title": "USACO 19 Feb S T3"
    },
    {
        "content": "    \n    \n    \n   \u901a\u8fc7\u89c2\u5bdf\u9898\u76ee\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u7ec4\u5976\u725b\u559c\u7231\u7684\u7267\u573a\u8349\u7684\u79cd\u7c7b\u90fd\u662f\u88ab\u6346\u7ed1\u5728\u4e00\u8d77\u7684\uff08\u5373\u786e\u5b9a\u4e86\u4e00\u4e2a\u7267\u573a\u4e2d\u7684\u8349\u5c31\u53ef\u4ee5\u786e\u5b9a\u53e6\u4e00\u4e2a\u7267\u573a\u79cd\u4ec0\u4e48\u8349\uff09\u3002\n    \n   \u4e0d\u96be\u60f3\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e00\u4e9b\u5177\u6709\u6346\u7ed1\u5173\u7cfb\u7684\u7267\u573a\u5e76\u5230\u4e00\u4e2a\u96c6\u5408\u4e2d\u8fdb\u884c\u7ef4\u62a4\u3002\u90a3\u4e48\u8fd9\u4e2a\u96c6\u5408\u4e2d\u7684\u7267\u573a\u79cd\u7684\u8349\u5c31\u6709\u4e24\u79cd\u65b9\u6848\u3002\n    \n   \u6211\u4eec\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fd9\u4e9b\u96c6\u5408\uff0c\u901a\u8fc7\u8ba1\u7b97\u53ef\u4ee5\u5f97\u5230\u6700\u7ec8\u7684\u7b54\u6848\u4e3a $2^{\u96c6\u5408\u6570\u91cf}$ \u3002\n\n```c++\n#include <cstdio>\n#include <iostream>\nusing namespace std;\nconst int N=1e5+7;\n\nint fa[N];\n\nint n,m,ans;\n\ninline int find(int x) {\n    while(x!=fa[x]) \n    \tfa[x]=fa[fa[x]],x=fa[x];\n    return x;\n}\n\ninline void merge(int x,int y) {\n\tfa[find(x)]=find(y);\n}\n\nsigned main() {\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i)\n\t\tfa[i]=i;\n\tfor(int i=1,x,y;i<=m;++i) {\n\t\tchar c;\n\t\tcin>>c;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tmerge(x,y); // \u5c06\u5177\u6709\u6346\u7ed1\u5173\u7cfb\u7684\u7267\u573a\u5e76\u5230\u4e00\u4e2a\u96c6\u5408\u4e2d\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tif(find(i)==i)\n\t\t\t++ans; // \u8ba1\u7b97\u96c6\u5408\u6570\u91cf\n\tputchar('1');\n\tfor(int i=1;i<=ans;++i)\n\t\tputchar('0'); // \u4e8c\u8fdb\u5236\u8f93\u51fa\n    return 0;\n}\n```\n\n\u4f46\u662f\u8fd9\u6837\u4ea4\u4e0a\u53bb\u4f60\u53ea\u670992\u5206\u3002\n\n\u56e0\u4e3a\u5b58\u5728\u65e0\u89e3\u7684\u60c5\u51b5\uff0c\u4f8b\u5982\uff1a\n\n```c++\n2 2\nD 1 2\nS 1 2\n```\n\n\u6240\u4ee5\u6211\u4eec\u8981\u66b4\u529b\u6a21\u62df\u4e00\u904d\u7267\u573a\u79cd\u7684\u8349\uff0c\u82e5\u5728\u6807\u8bb0\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u77db\u76fe\uff0c\u5373\u4e3a\u65e0\u89e3\u3002\n\n\u6ee1\u5206\u4ee3\u7801\uff1a\n\n```c++\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\nconst int N=1e5+7;\n\nint fa[N];\n\nstruct node {\n\tchar op;\n\tint x,y;\n};\n\nqueue<node> q;\n\nint vis[N];\n\nint n,m,ans;\n\ninline int find(int x) {\n    while(x!=fa[x]) \n    \tfa[x]=fa[fa[x]],x=fa[x];\n    return x;\n}\n\ninline void merge(int x,int y) {\n\tfa[find(x)]=find(y);\n}\n\nsigned main() {\n\tmemset(vis,-1,sizeof(vis));\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i)\n\t\tfa[i]=i;\n\tfor(int i=1,x,y;i<=m;++i) {\n\t\tchar c;\n\t\tcin>>c;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tmerge(x,y); // \u5c06\u5177\u6709\u6346\u7ed1\u5173\u7cfb\u7684\u7267\u573a\u5e76\u5230\u4e00\u4e2a\u96c6\u5408\u4e2d\n\t\tq.push({c,x,y});\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tif(find(i)==i) {\n\t\t\t++ans; // \u8ba1\u7b97\u96c6\u5408\u6570\u91cf\n\t\t\tvis[i]=0; // \u4e3a\u6bcf\u4e2a\u96c6\u5408\u5148\u79cd\u4e00\u79cd\u8349\n\t\t}\n\twhile(!q.empty()) {\n\t\tchar op=q.front().op;\n\t\tint x=q.front().x,y=q.front().y;\n\t\tq.pop();\n\t\tif(vis[x]==-1 && vis[y]==-1)\n\t\t\tq.push({op,x,y}); // \u82e5\u8fd8\u65e0\u6cd5\u786e\u5b9a\u79cd\u4ec0\u4e48\u8349\uff0c\u5148\u653e\u7740\n\t\telse if(vis[y]==-1)\n\t\t\tvis[y]=((op=='S') ? vis[x] : !vis[x]); // \u6807\u8bb0\u7267\u573a\u79cd\u7684\u8349\n\t\telse if(vis[x]==-1)\n\t\t\tvis[x]=((op=='S') ? vis[y] : !vis[y]); // \u6807\u8bb0\u7267\u573a\u79cd\u7684\u8349\n\t\telse if(vis[y]!=((op=='S') ? vis[x] : !vis[x]))\n\t\t\treturn putchar('0'),0; // \u4ea7\u751f\u77db\u76fe\uff0c\u65e0\u89e3\n\t\telse if(vis[x]!=((op=='S') ? vis[y] : !vis[y]))\n\t\t\treturn putchar('0'),0; // \u4ea7\u751f\u77db\u76fe\uff0c\u65e0\u89e3\n\t}\n\tputchar('1');\n\tfor(int i=1;i<=ans;++i)\n\t\tputchar('0'); // \u4e8c\u8fdb\u5236\u8f93\u51fa\n    return 0;\n}\n```\n\n",
        "postTime": 1640489623,
        "uid": 357101,
        "name": "wshcl",
        "ccfLevel": 4,
        "title": "P5543 [USACO19FEB]The Great Revegetation S \u9898\u89e3"
    }
]