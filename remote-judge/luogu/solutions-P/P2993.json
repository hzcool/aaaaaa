[
    {
        "content": "\u5f88\u88f8\u7684\u4e00\u9053\u70b9\u5206\u6cbb\uff0c\u611f\u89c9\u5c31\u662f[\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/P4149)\u7684\u5347\u7ea7\u7248\u3002\n\n\u663e\u7136\u6211\u4eec\u5c31\u662f\u8981\u5efa\u51fa\u6700\u77ed\u8def\u5f84\u6811\uff0c\u7136\u540e\u76f4\u63a5\u5728\u6811\u4e0a\u8dd1\u70b9\u5206\u6cbb\u5c31\u884c\u4e86\u3002\n\n\u9996\u5148\uff0c\u5173\u4e8e\u5efa\u6811\n\n\u9898\u76ee\u8981\u6c42\u6211\u4eec\u6309\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u8def\u5f84\u5efa\u6811\uff0c\u4f46\u7531\u4e8e\u5b98\u65b9\u6570\u636e\u8fc7\u6c34\uff0c\u8c8c\u4f3c\u5927\u90e8\u5206\u9898\u89e3\u90fd\u6ca1\u7ba1\u5b57\u5178\u5e8f(\u4e0d\u8fc7\u540e\u6765\u6dfb\u52a0\u4e86hack\u6570\u636e)\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u8d2a\u5fc3\u601d\u60f3\u6765\u5efa\u6811\uff1a\u9996\u5148\u901a\u8fc7dfs\u6765\u5efa\u6811\uff0c\u5c06\u4ee5\u5f53\u524d\u70b9\u4e3a\u8d77\u70b9\u7684**\u5728\u6700\u77ed\u8def\u4e0a\u4e14\u513f\u5b50\u4e0d\u5728\u6811\u4e0a**\u7684\u8fb9\u52a0\u5230\u6811\u4e0a\uff0c\u7136\u540e\u5bf9\u6240\u6709**\u5728\u6811\u4e0a\u8fde\u4e86\u8fb9**\u7684\u5b50\u8282\u70b9\u7ee7\u7eeddfs\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u5730\u6309\u7f16\u53f7\u4ece\u5c0f\u5230\u5927\u4f5c\u4e3a\u987a\u5e8f\u6765\u641c\u7d22\u3002\u56e0\u4e3a\u5bf9\u4e8e\u540e\u9762\u7684\u4e00\u4e2a\u5b50\u5b59\u8282\u70b9\u6765\u8bf4\uff0c\u5f53\u524d\u70b9\u7684\u5b50\u8282\u70b9\u5728\u5b57\u5178\u5e8f\u4e0a\u7684\u4f4d\u6743\u4e00\u5b9a\u662f\u4e00\u6837\u7684\u3002\u5c31\u50cf\u9898\u5e72\u4e2d\u7ed9\u51fa\u76841,32,11\u548c1,3,2,11\u3002\u56e0\u4e3a\u65e0\u8bba\u540e\u9762\u7684\u8def\u5f84\u957f\u77ed\uff0c\u524d\u9762\u90e8\u5206\u7684\u8def\u5f84\u4e00\u5b9a\u662f\u4e00\u6837\u7684\u3002\u6bd4\u59821\u7684\u513f\u5b50\u670932\u548c3\uff0c\u6b64\u65f632\u548c3\u4e4b\u95f4\u6211\u4eec\u5c31\u5e94\u8be5\u9009\u7f16\u53f7\u8f83\u5c0f\u76843\u3002\n\n#### \u5efa\u6811\u90e8\u5206\u4ee3\u7801\uff1a\n```\nstruct tmp{int v,w;bool operator <(const tmp&x)const{return v<x.v;}};\nvoid build(int x)\n{\n\tvector<tmp>son;\n\tfor(re int i=h[x];i;i=e[i].nxt)\n\t\tif(dis[e[i].v]==dis[x]+e[i].w)\n\t\t\tson.push_back((tmp){e[i].v,e[i].w});//\u5c06\u513f\u5b50\u52a0\u5165vector\u4e2d\u65b9\u4fbf\u6392\u5e8f\n\tsort(son.begin(),son.end());//\u6309\u7f16\u53f7\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\tfor(re int i=0;i<son.size();++i)\n\t\tif(!ontree[son[i].v])//\u5f53\u524d\u513f\u5b50\u4e0d\u5728\u6811\u4e0a\n\t\t{\n\t\t\tontree[son[i].v]=true;\n\t\t\tdivide::add(x,son[i].v,son[i].w);\n\t\t\tdivide::add(son[i].v,x,son[i].w);//\u52a0\u8fb9\n\t\t\tbuild(son[i].v);//\u7ee7\u7eed\u5efa\u6811\n\t\t}\n}\n```\n\n\n\u5f53\u5efa\u597d\u6811\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u5982\u4f55\u7edf\u8ba1\u7b54\u6848\u4e86\u3002\n\n\u95ee\u9898\uff1a\n\n>\u8bf7\u95ee\uff0c\u5728\u8fd9\u68f5\u6700\u77ed\u8def\u5f84\u6811\u4e0a\uff0c\u6700\u957f\u7684\u5305\u542bK\u4e2a\u70b9\u7684\u7b80\u5355\u8def\u5f84\u957f\u5ea6\u4e3a\u591a\u957f\uff1f\u957f\u5ea6\u4e3a\u8be5\u6700\u957f\u957f\u5ea6\u7684\u4e0d\u540c\u8def\u5f84\u6709\u591a\u5c11\u6761\uff1f\n\n\u5bf9\u4e8e\u6700\u957f\u8def\u5f84\u7684\u957f\u5ea6\uff0c\u505a\u6cd5\u53ef\u4ee5\u53c2\u8003[\u8fd9\u91cc](https://www.luogu.com.cn/problem/P4149)\u3002\u6211\u4eec\u53ef\u4ee5\u5f00\u4e24\u4e2a\u6808\uff0c\u4e00\u4e2a\u5b58\u94fe\u957f\uff0c\u4e00\u4e2a\u5b58\u6df1\u5ea6\uff0c\u82e5\u5f53\u524d\u94fe\u7ecf\u8fc7\u8282\u70b9\u6570\u4e3a$x$\u90a3\u4e48\u8fd9\u6761\u94fe\u5c31\u5e94\u8be5\u548c\u4e4b\u524d\u5b50\u6811\u4e2d\u7684\u4e00\u6761\u7ecf\u8fc7$k-x-1$\u4e2a\u8282\u70b9\u7684\u94fe\u7ec4\u6210\u7b54\u6848\uff08\u51cf1\u662f\u56e0\u4e3a\u5f53\u524d\u7684\u91cd\u5fc3\u4e5f\u662f\u94fe\u4e0a\u7684\u70b9\uff09\uff0c\u5982\u679c\u6bd4\u7b54\u6848\u66f4\u957f\u5219\u66f4\u65b0\u957f\u5ea6\u548c\u65b9\u6848\uff0c\u5982\u679c\u4e00\u6837\u957f\u5c31\u76f4\u63a5\u7d2f\u52a0\u65b9\u6848\u3002\n\n#### \u70b9\u5206\u6cbb\u90e8\u5206\u4ee3\u7801\uff1a\n```\nnamespace divide\n{\n\tint cnt,h[N];\n\tstruct edge{int v,w,nxt;}e[N<<1];\n\til void add(int u,int v,int w){e[++cnt]=(edge){v,w,h[u]};h[u]=cnt;}\n\tint rt,sum;\n\tint siz[N],son[N],dis[N],dep[N],len[N],tot[N];\n\t//len[i]\u8868\u793a\u7ecf\u8fc7i\u4e2a\u70b9\u7684\u6700\u957f\u94fe\u957f\u5ea6\n\t//tot[i]\u8868\u793a\u7ecf\u8fc7i\u4e2a\u70b9\u7684\u6700\u957f\u94fe\u7684\u6761\u6570\n\tbool vis[N];\n\tvoid getrt(int x,int fa)\n\t{\n\t\tsiz[x]=1;son[x]=0;\n\t\tfor(re int i=h[x],v;i;i=e[i].nxt)\n\t\t\tif(!vis[v=e[i].v]&&v^fa)\n\t\t\t{\n\t\t\t\tgetrt(v,x);\n\t\t\t\tsiz[x]+=siz[v];\n\t\t\t\tson[x]=max(son[x],siz[v]);\n\t\t\t}\n\t\tson[x]=max(son[x],sum-siz[x]);\n\t\trt=son[x]<son[rt]?x:rt;\n\t}//\u6c42\u91cd\u5fc3\u6a21\u677f\n\tint st1[N],st2[N],top;\n\t//st1\u5b58\u8ddd\u79bb,st2\u5b58\u6df1\u5ea6\n\tvoid getdis(int x,int fa)\n\t{\n\t\tif(dep[x]>k) return;\n\t\tst1[++top]=dis[x];\n\t\tst2[top]=dep[x];\n\t\tfor(re int i=h[x],v;i;i=e[i].nxt)\n\t\t\tif(!vis[v=e[i].v]&&v^fa)\n\t\t\t{\n\t\t\t\tdis[v]=dis[x]+e[i].w;\n\t\t\t\tdep[v]=dep[x]+1;\n\t\t\t\tgetdis(v,x);\n\t\t\t}\n\t}\n\til int solve(int x)\n\t{\n\t\tre int pre=top=0,res=0;\n\t\tmemset(tot,0,sizeof(tot));\n\t\tmemset(len,0,sizeof(len));\n\t\ttot[0]=1;//\u5f53\u524d\u91cd\u5fc3\u4e5f\u6709\u53ef\u80fd\u662f\u4e00\u6761\u6700\u957f\u94fe\u7684\u8d77\u70b9\uff01\uff01\uff01\u56e0\u4e3a\u8fd9\u91ccwa\u4e86\u597d\u591a\u6b21QAQ\n\t\tfor(re int i=h[x],v;i;i=e[i].nxt)\n\t\t\tif(!vis[v=e[i].v])\n\t\t\t{\n\t\t\t\tdis[v]=dis[x]+e[i].w;\n\t\t\t\tdep[v]=dep[x]+1;\n\t\t\t\tpre=top;\n\t\t\t\tgetdis(v,x);\n\t\t\t\t//\u5904\u7406\u51fa\u5f53\u524d\u5b50\u6811\u4e2d\u7684\u4fe1\u606f\n\t\t\t\tfor(re int j=pre+1;j<=top;++j)\n\t\t\t\t{\n\t\t\t\t\tif(len[k-st2[j]-1]+st1[j]>ans[0])\n\t\t\t\t\t\tans[0]=len[k-st2[j]-1]+st1[j],res=tot[k-st2[j]-1];\n\t\t\t\t\t\t//\u5f53\u524d\u5b50\u6811\u4e0a\u5b58\u5728\u53ef\u4ee5\u548c\u4e4b\u524d\u5b50\u6811\u4e0a\u7684\u94fe\u7ec4\u6210\u66f4\u4f18\u7b54\u6848\u7684\u94fe\n\t\t\t\t\telse if(len[k-st2[j]-1]+st1[j]==ans[0]) res+=tot[k-st2[j]-1];\n\t\t\t\t\t//\u5f53\u524d\u5b50\u6811\u4e0a\u5b58\u5728\u53ef\u4ee5\u548c\u4e4b\u524d\u5b50\u6811\u4e0a\u7684\u94fe\u7ec4\u6210\u6700\u4f18\u7b54\u6848\u7684\u94fe\uff0c\u90a3\u4e48\u7d2f\u52a0\u65b9\u6848\u6570\n\t\t\t\t}\n\t\t\t\tfor(re int j=pre+1;j<=top;++j)//\u7ed9\u4e0b\u4e00\u68f5\u5b50\u6811\u7528\n\t\t\t\t{\n\t\t\t\t\tif(len[st2[j]]==st1[j]) ++tot[st2[j]];//\u7d2f\u52a0\u65b9\u6848\n\t\t\t\t\tif(len[st2[j]]<st1[j]) tot[st2[j]]=1,len[st2[j]]=st1[j];//\u66f4\u65b0\u65b9\u6848\u3001\u957f\u5ea6\n\t\t\t\t}\n\t\t\t}\n\t\treturn res;\n\t}\n\tvoid getdiv(int x)\n\t{\n\t\tvis[x]=true;dis[x]=0;dep[x]=0;\n\t\tre int pre=ans[0],tmp=solve(x);\n\t\tif(ans[0]^pre) ans[1]=tmp;//\u66f4\u65b0\u65b9\u6848\n\t\telse ans[1]+=tmp;//\u7d2f\u52a0\u65b9\u6848\n\t\tfor(re int i=h[x],v;i;i=e[i].nxt)\n\t\t\tif(!vis[v=e[i].v])\n\t\t\t{\n\t\t\t\tson[rt=0]=sum=siz[v];\n\t\t\t\tgetrt(v,0);\n\t\t\t\tgetrt(rt,0);\n\t\t\t\t//\u5176\u5b9e\u8fd9\u4e00\u6b21\u641c\u7d22\u53ef\u4ee5\u4e0d\u7528\uff0c\u76ee\u7684\u662f\u5c06\u5b50\u6811\u4e2d\u7684siz\u66f4\u65b0\u4e3a\u4ee5rt\u4f5c\u4e3a\u6839\u7684siz\n\t\t\t\tgetdiv(rt);\n\t\t\t}\n\t\t//\u70b9\u5206\u6cbb\u4e3b\u4f53\n\t}\n}\n```\n\n\u7531\u4e8e\u4ee3\u7801\u7684\u6838\u5fc3\u90e8\u5206\u4e0a\u9762\u90fd\u5df2\u7ecf\u7ed9\u51fa\uff0c\u8fd9\u91cc\u5c31\u4e0d\u7ed9\u5b8c\u6574\u4ee3\u7801\u4e86\u3002",
        "postTime": 1598276114,
        "uid": 209454,
        "name": "watermonster",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2993 \u3010[FJOI2014]\u6700\u77ed\u8def\u5f84\u6811\u95ee\u9898\u3011"
    },
    {
        "content": "\u8fd9\u662f\u5f3a\u884c\u62fc\u9898\u554a\u3002\u4e0d\u592a\u64c5\u957f\u70b9\u5206\u7684\u6211\u90fd\u505a\u51fa\u6765\u8fd9\u9898\uff0c\u4e0d\u8fc7\u7801\u8d77\u6765\u662f\u771f\u7684\u96be\u53d7\uff0c\u8bf4\u5b9e\u8bdd\u6211\u611f\u89c96K+\u7684\u90a3\u79cd\u6570\u636e\u7ed3\u6784\u9898\u7801\u8d77\u6765\u90fd\u975e\u5e38\u8212\u670d\uff0c\u4f46\u8fd9\u79cd\u9898\u5c31\u83ab\u540d\u5f88\u96be\u53d7\n\n\u9996\u5148\u662f\u8981\u6c42\u51fa\u6700\u77ed\u8def\u56fe\u3002\u5177\u4f53\u5730\uff0c\u5148\u4ee51\u4e3a\u6e90\u70b9\u505a\u4e00\u904d\u5355\u6e90\u6700\u77ed\u8def\uff0c\u82e5\u4e00\u6761\u8fb9e\u6ee1\u8db3d[u]+e.capa=d[v]\uff0c\u5219\u8fd9\u6761\u8fb9\u5728\u6700\u77ed\u8def\u56fe\u4e2d\u3002\u7136\u540e\u8fd9\u9898\u8981\u6c42\u5efa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u6811\u5427\uff0c\u90a3\u5c31\u7528\u90bb\u63a5\u8868\u5b58\u56fe\uff0c\u628a\u6bcf\u4e2a\u70b9\u7684\u51fa\u8fb9\u6309\u6307\u5411\u7684\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540edfs\u5efa\u6811\u5c31\u662f\u4e86\u3002\u8fd9\u4e2a\u6570\u636e\u89c4\u6a21\u8981\u5361\u8d77spfa\u6765\u662f\u4f1a\u70b8\u7684\uff0c\u4e0d\u77e5\u9053\u51fa\u9898\u4eba\u5361\u4e0d\u5361\uff0c\u53cd\u6b63\u4fdd\u9669\u8d77\u89c1\u6211\u5199\u4e86dij\n\n\u90a3\u81f3\u4e8e\u9898\u76ee\u8981\u6c42\u7684\u7b54\u6848\u5427\uff0c\u5c31\u662f\u70b9\u5206\u7684\u7ecf\u5178\u5957\u8def\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u70b9u\uff0c\u8003\u8651\u7ecf\u8fc7u\u8fd9\u4e2a\u70b9\u7684\u8def\u5f84\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\u53ef\u4ee5\u7528tmp\\[x\\]\u8868\u793a\u7ecf\u8fc7\u70b9u\uff0c\u5305\u542bx\u6761\u8fb9\u7684\u8def\u5f84\u7684\u4fe1\u606f\uff08\u4fe1\u606f\u5305\u62ec\uff1a\u6700\u957f\u957f\u5ea6\u3001\u8def\u5f84\u6570\u91cf\uff09\u3002\u7136\u540e\u5904\u7406u\u7684\u6bcf\u4e2a\u5b50\u8282\u70b9v\u65f6\uff0c\u5904\u7406\u51fa\u4ee5v\u4e3a\u6839\u7684\u5b50\u6811\u7684\u8def\u5f84\u4fe1\u606f\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5305\u542bk-1\u6761\u8fb9\u7684\u8def\u5f84\uff0c\u76f4\u63a5\u66f4\u65b0\u7b54\u6848\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5305\u542b\u8fb9\u6570\u5c11\u4e8ek-1\u7684\u8def\u5f84\uff0c\u8bbe\u5b83\u5305\u542bx\u6761\u8fb9\uff0c\u90a3\u5c06\u5b83\u7684\u4fe1\u606f\u4e0etmp[k-1-x]\u5408\u5e76\u5230\u4e00\u8d77\u6765\u66f4\u65b0\u7b54\u6848\u3002tmp\u6570\u7ec4\u5728\u6bcf\u4e2a\u5206\u6cbb\u73af\u8282\u90fd\u8981\u6e05\u7a7a\uff0c\u5343\u4e07\u4e0d\u8981\u6574\u4e2amemset\uff01\n\n\u5177\u4f53\u8fd8\u662f\u770b\u4ee3\u7801\u5427\uff0c\u4e00\u770b\u5c31\u61c2\u3002\u53cd\u6b63\u6211\u7801\u7740\u975e\u5e38\u96be\u53d7\u5c31\u662f\u4e86\n\n```cpp\n#include<bits/stdc++.h>\n#define FR first\n#define SE second\n#define MP make_pair\n#define PB push_back\nusing namespace std;\n\nconst int S=(1<<20)+5;\nchar buf[S],*H,*T;\ninline char Get()\n{\n    if(H==T) T=(H=buf)+fread(buf,1,S,stdin);\n    if(H==T) return -1;return *H++;\n}\ninline int read()\n{\n    int x=0;char c=Get();\n    while(!isdigit(c)) c=Get();\n    while(isdigit(c)) x=x*10+c-'0',c=Get();\n    return x;\n}\n\ntypedef pair<int,int> pii;\nconst int N=30010;\nstruct Edge{int to,capa,next;} e[N<<1];\nint h[N],n,m,K,esum=0;\nvector<pii> G[N];\npriority_queue<pii> q;\nbool vis[N];int dis[N];\nint sum=0,root,mxsz[N];\npii ans,d[N],now[N],cross[N];\nint sz[N],mxd,tot;\n\nvoid add_edge(int u,int v,int w)\n{\n    e[++esum].to=v;\n    e[esum].capa=w;\n    e[esum].next=h[u];\n    h[u]=esum;\n}\n\nvoid dijkstra()\n{\n    memset(dis,0x3f,sizeof(dis));\n    q.push(MP(0,1));dis[1]=0;\n    while(!q.empty())\n    {\n        pii tmp=q.top();q.pop();\n        int u=tmp.SE,w=-tmp.FR;\n        if(vis[u]) continue;\n        vis[u]=1;\n        for(pii pr : G[u])\n            if(w+pr.SE<dis[pr.FR])\n            {\n                dis[pr.FR]=w+pr.SE;\n                q.push(MP(-dis[pr.FR],pr.FR));\n            }\n    }\n}\n\nvoid find(int u,int fa)\n{\n    sz[u]=1;mxsz[u]=0;\n    for(int t=h[u];t;t=e[t].next)\n    {\n        int v=e[t].to;\n        if(v==fa||vis[v]) continue;\n        find(v,u);sz[u]+=sz[v];\n        mxsz[u]=max(mxsz[u],sz[v]);\n    }\n    mxsz[u]=max(mxsz[u],sum-sz[u]);\n    if(mxsz[u]<mxsz[root]) root=u;\n}\n\nvoid dfs(int u,int fa)\n{\n    now[++tot]=d[u];\n    for(int t=h[u];t;t=e[t].next)\n    {\n        int v=e[t].to;\n        if(v==fa||vis[v]) continue;\n        d[v].SE=d[u].SE+e[t].capa;\n        d[v].FR=d[u].FR+1;dfs(v,u);\n    }\n}\n\nvoid gao(int u,int w)\n{\n    d[u].FR=1;d[u].SE=w;\n    tot=0;dfs(u,0);\n    for(int i=1;i<=tot;i++)\n    {\n        int rest=K-now[i].FR-1,w=now[i].SE;\n        if(now[i].FR<K-1)\n        {\n            int t1=cross[rest].FR,t2=cross[rest].SE;\n            if(w+t2>ans.FR) ans=MP(w+t2,t1);\n            else if(w+t2==ans.FR) ans.SE+=t1;\n        }\n        if(now[i].FR==K-1)\n        {\n            if(w>ans.FR) ans=MP(w,1);\n            else if(w==ans.FR) ans.SE++;\n        }\n    }\n    for(int i=1;i<=tot;i++)\n        if(now[i].FR<=K-1)\n        {\n            int num=now[i].FR;\n            if(now[i].SE>cross[num].SE) cross[num]=MP(1,now[i].SE);\n            else if(now[i].SE==cross[num].SE) cross[num].FR++;\n            mxd=max(mxd,num);\n        }\n}\n\nvoid solve(int u)\n{\n    vis[u]=1;mxd=0;\n    for(int t=h[u];t;t=e[t].next)\n        if(!vis[e[t].to]) gao(e[t].to,e[t].capa);\n    memset(cross,0,sizeof(pii)*(mxd+2));\n    for(int t=h[u];t;t=e[t].next)\n    {\n        int v=e[t].to;\n        if(vis[v]) continue;\n        sum=sz[v];root=0;\n        find(v,u);solve(root);\n    }\n}\n\nvoid build(int u)\n{\n    vis[u]=1;\n    for(pii pr : G[u])\n    {\n        int v=pr.FR,w=pr.SE;\n        if(vis[v]||dis[u]+w!=dis[v]) continue;\n        add_edge(u,v,w);add_edge(v,u,w);build(v);\n    }\n}\n\nint main()\n{\n    int u,v,w;\n    n=read();m=read();K=read();\n    for(int i=1;i<=m;i++)\n    {\n        u=read();v=read();w=read();\n        G[u].PB(MP(v,w));\n        G[v].PB(MP(u,w));\n    }\n    for(int i=1;i<=n;i++) sort(G[i].begin(),G[i].end());\n    dijkstra();memset(vis,0,sizeof(vis));build(1);\n    memset(vis,0,sizeof(vis));\n    sum=mxsz[0]=n;root=0;\n    find(1,0);solve(root);\n    printf(\"%d %d\\n\",ans.FR,ans.SE);\n    return 0;\n}\n```\n\n",
        "postTime": 1538215169,
        "uid": 20158,
        "name": "Ebola",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2993 \u3010[FJOI2014]\u6700\u77ed\u8def\u5f84\u6811\u95ee\u9898\u3011"
    }
]