[
    {
        "content": "\u7b80\u5355\u6765\u8bf4\uff0c\u56e0\u4e3a\u4efb\u52a1\u53ef\u4ee5\u5e76\u53d1\uff0c\u6240\u4ee5\u4e00\u4e2a\u4efb\u52a1\u5982\u679c\u6709\u524d\u9a71\u7684\u8bdd\uff0c\u6700\u4f18\u65b9\u6848\u4fbf\u662f\u5728\u5b83\u7684\u6700\u665a\u4e00\u4e2a\u524d\u9a71\u7ed3\u675f\u540e\u5c31\u7acb\u5373\u5f00\u59cb\uff0c\u800c\u4e14\u4efb\u52a1k\u7684\u524d\u9a71\u8282\u70b9\u4e00\u5b9a\u5c0f\u4e8ek\uff0c\u6240\u4ee5\u8bfb\u5165\u65f6\u987a\u4fbf\u4ece\u5b83\u7684\u524d\u9a71\u91cc\u6311\u4e00\u4e2a\u6700\u5927\u7684\u8f6c\u79fb\u5373\u53ef\u3002\u540c\u65f6\u53ef\u4ee5\u66f4\u65b0\u6700\u7ec8\u7b54\u6848\u3002\n\n*\u6211\u662f\u4ed7\u7740\u4ee3\u7801\u77ed\u624d\u6765\u53d1\u7684*\n\n---\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,l,t,ans[10005],maxans;\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i){\n        scanf(\"%d\",&i);\n        scanf(\"%d\",&l);\n        int tmp=0;\n        while(scanf(\"%d\",&t)&&t)\n            tmp=max(ans[t],tmp);\n        ans[i]=tmp+l;\n        maxans=max(ans[i],maxans);\n    } \n    printf(\"%d\\n\",maxans);\n    return 0;\n } \n ```",
        "postTime": 1523367343,
        "uid": 59692,
        "name": "Nishikino_Curtis",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "## \u8fd9\u662f\u4e00\u9053\u62d3\u6251\u6392\u5e8f\u7684\u6a21\u677f\u9898\n\n### 0 \u5199\u5728\u524d\u9762\n\nUPD 2020-05-13 \u4fee\u6539\u4e86\u4ee3\u7801\u4e2d\u6ca1\u6709\u521d\u59cb\u5316\u7684\u5c0f\u9519\u8bef\uff0c\u4fee\u6539\u4e86\u683c\u5f0f\u3002\n\n\u5173\u4e8e\u9898\u89e3\uff1a\u867d\u7136\u8fd9\u9053\u9898\u7684\u9898\u89e3\u6570\u91cf\u6bd4\u8f83\u591a\uff0c\u4f46\u662f\u6211\u8ba4\u4e3a\u6211\u7684\u9898\u89e3\u76f8\u5bf9\u6765\u8bf4\u6bd4\u8f83\u6e05\u6670\uff0c\u6613\u4e8e\u7406\u89e3\uff0c\u5e0c\u671b\u4fee\u6539\u540e\u7ba1\u7406\u80fd\u591f\u901a\u8fc7\u5ba1\u6838\u3002\n\n\u6b64\u9898\u89e3\u4e3b\u8981\u4ecb\u7ecd\u62d3\u6251\u6392\u5e8f\u7684\u5b9e\u73b0\u65b9\u6cd5\uff08\u5982\u679c\u6709\u4e0d\u5bf9\u7684\u5730\u65b9\u8fd8\u8bf7\u5927\u4f6c\u6307\u6559\uff09\uff0c\u6587\u7ae0\u7565\u957f\uff0c\u4f46\u662f\u6211\u8ba4\u4e3a\u8fd8\u662f\u6bd4\u8f83\u6e05\u6670\u7684\uff0c\u5e0c\u671b\u5404\u4f4d\u80fd\u591f\u8ba4\u771f\u770b\u5b8c\u3002\n\n#### \u5728\u5b66\u4e60\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u4f60\u62e5\u6709\u4ee5\u4e0b\u524d\u7f6e\u77e5\u8bc6\uff1a\n\n- \u56fe\u8bba\u76f8\u5173\u7684\u57fa\u672c\u6982\u5ff5\n\n- \u5efa\u56fe\u3001\u5b58\u56fe\n\n- \u56fe\u7684\u904d\u5386\n\n- \u975e\u5e38\u5165\u95e8\u7684 DP\n\n---\n\n*\u4e0b\u9762\u8fdb\u5165\u6b63\u6587*\n\n### 1 \u5f15\u5165\n\n\u62d3\u6251\u6392\u5e8f\u662f\u4e00\u7c7b\u7528\u4e8e\u5904\u7406 DAG\uff08Directed acyclic graph\uff09\uff0c\u5373**\u6709\u5411\u65e0\u73af\u56fe**\u4e0a\u7684\u95ee\u9898\u3002\n\n\u4ee5\u8fd9\u9053\u9898\u4e3a\u4f8b\uff0c\u6211\u4eec\u5206\u6790\u62d3\u6251\u6392\u5e8f\u7684\u4f5c\u7528\uff1a\n\n\u663e\u7136\u5730\uff0c\u672c\u9898\u4e2d\u5404\u9879\u5de5\u4f5c\u662f\u6709\u4e00\u5b9a\u7684**\u4f9d\u8d56\u6761\u4ef6**\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5728\u8fdb\u884c\u5de5\u4f5c X \u4e4b\u524d\u53ef\u80fd\u9700\u8981\u5148\u8fdb\u884c\u4e00\u4e9b\u5176\u4ed6\u7684\u5de5\u4f5c\u3002\n\n\u800c\u5b8c\u6210\u5de5\u4f5c X \u6240\u9700\u7684\u65f6\u95f4\u548c\u6240\u6709 X \u6240\u4f9d\u8d56\u7684\u5de5\u4f5c\u5b8c\u6210\u7684\u65f6\u95f4\u7684\u6700\u5927\u503c\u6709\u5173\u3002\uff08\u5e94\u8be5\u8fd8\u597d\u7406\u89e3\u5427\uff09\n\n\u5728\u8fd9\u9053\u9898\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5217\u51fa\u4e00\u4e2a\u7b80\u5355\u7684 DP \u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$f_i=\\max\\{pre_i\\}+a_i$$\n\n\u5176\u4e2d $f_i$ \u4e3a\u4ece\u6700\u5f00\u59cb\u5230\u8fdb\u884c\u5b8c\u7b2c $i$ \u9879\u4efb\u52a1\u6240\u9700\u7684\u65f6\u95f4\uff0c$pre_i$ \u4e3a $i$ \u53f7\u7ed3\u70b9\u7684\u524d\u9a71\u6570\u7ec4\uff0c$a_i$ \u4e3a\u505a\u7b2c $i$ \u4ef6\u4e8b\u6240\u9700\u7684\u65f6\u95f4\u3002\n\n\u4f46\u662f\uff0c\u6211\u4eec\u5982\u679c\u76f4\u63a5\u8fdb\u884c dfs \u904d\u5386\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e2a\u95ee\u9898\uff1a\u5728\u6211\u4eec**\u8ba1\u7b97 $f_i$ \u7684\u65f6\u5019\uff0c\u8fd8\u5b58\u5728\u6ca1\u6709\u8ba1\u7b97\u8fc7\u7684 $pre_i$**\uff0c\u4ece\u800c\u5bfc\u81f4\u7ed3\u679c\u8ba1\u7b97\u9519\u8bef\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5728\u8ba1\u7b97\u7684\u65f6\u5019\uff0c\u5e94\u8be5\u786e\u4fdd**\u5728\u8ba1\u7b97\u4e00\u4e2a\u7ed3\u70b9 $u$ \u65f6\uff0c\u6240\u6709\u4e0e\u8fde\u5411\u5b83\u7684\u70b9\u90fd\u5df2\u7ecf\u88ab\u8ba1\u7b97\u8fc7**\u3002\n\n\u800c\u5b9e\u73b0\u8fd9\u4e00\u8fc7\u7a0b\u5c31\u5229\u7528\u5230\u4e86\u4eca\u5929\u7684\u4e3b\u89d2\uff1a**\u62d3\u6251\u6392\u5e8f\uff08topo sort\uff09**\n\n***\n\n### 2 ~~\u62d3\u6251\u6392\u5e8f~~  \u8bb0\u5fc6\u5316\u641c\u7d22\uff01\n\n\u86e4\uff1f\u4f60\u4e0d\u662f\u8981\u8bf4\u62d3\u6251\u6392\u5e8f\u5417\uff1f\n\n\u522b\u6025\uff0c\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e0b\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u65b9\u6cd5\u3002\u901a\u8fc7\u6b64\u65b9\u6cd5\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u8fbe\u5230\u62d3\u6251\u6392\u5e8f\u7684\u76ee\u7684\u3002\n\n\u5148\u653e\u4e0a\u4ee3\u7801:\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cctype>\n#include <vector>\n\n#define ll long long\n\nusing namespace std;\n\ninline int read() {\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile (!isdigit(ch)) {if (ch=='-') f=-1;ch=getchar();}\n\twhile (isdigit(ch)) x=x*10+ch-'0',ch=getchar();\n\treturn x*f;\n}\n\n//\u4ee5\u4e0a\u90fd\u662f\u6a21\u677f\uff0c\u4e0d\u89e3\u91ca\n\nconst int N=10005;\n\nint a[N],f[N];  //f\u6570\u7ec4\u542b\u4e49\u5982\u4e0a\u6240\u793a\nvector <int> edge[N];  //\u6211\u4e60\u60ef\u4f7f\u7528vector\u90bb\u63a5\u8868\u5b58\u56fe\uff0c\u5176\u4ed6\u5b58\u56fe\u65b9\u5f0f\u505a\u6cd5\u7c7b\u4f3c\n\n//\u8fd9\u91cc\u5f00\u59cb\u662f\u91cd\u70b9\n\nint dfs(int x) {\n\tif (f[x]) return f[x];  //\u5047\u5982\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\uff0c\u76f4\u63a5\u8fd4\u56de\n\tfor (int i=0;i<edge[x].size();i++) {  //\u5faa\u73af\uff1ax \u7684\u6bcf\u6761\u51fa\u8fb9\u6307\u5411\u7684\u70b9\n\t\tf[x]=max(f[x],dfs(edge[x][i]));  //DP\uff0c\u6c42pre\u7684\u6700\u5927\u503c\n\t}\n\tf[x]+=a[x];  //\u52a0\u4e0aa[i]\u7684\u503c\uff0c\u5373DP\u65b9\u7a0b\n\treturn f[x];  //\u8fd4\u56deDP\u7684\u7ed3\u679c\n}\n\nint main() {\n\tint n=read();\n\tfor (int i=1;i<=n;i++) {\n\t\tint x=read(); //\u7f16\u53f7\n\t\ta[i]=read();  //\u6240\u9700\u65f6\u95f4\n\t\tint y=read();\n        //\u4ee5\u4e0b\u7684\u8bfb\u5165\u4e0d\u89e3\u91ca\n\t\twhile (y!=0) {\n\t\t\tedge[y].push_back(x);\n\t\t\ty=read();\n\t\t}\n\t}\n    //\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u8fdb\u884cdfs\uff0c\u6c42f\u7684\u503c\n\tint ans=0;\n\tfor (int i=1;i<=n;i++) {\n\t\tans=max(ans,dfs(i));  //\u53d6\u6700\u5927\u503c\n\t}\n\tprintf(\"%d\\n\",ans);  //\u8f93\u51fa\u7ed3\u679c\n\treturn 0;\n}\n```\n\n\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u4ee3\u7801\u53ef\u4ee5\u5b9e\u73b0\u62d3\u6251\u6392\u5e8f\u7684\u76ee\u7684\u5462\uff1f\n\n\u5148\u770b\u4e00\u5f20\u56fe\uff1a\n\n![graph.png](https://i.loli.net/2020/02/24/IPTLBYEg5K4R2Jr.png)\n\n\u5728\u4e3b\u51fd\u6570\u7684 `for` \u5faa\u73af\u4e2d\u6267\u884c `dfs(1)` \u7684\u65f6\u5019\uff0c$2$ \u53f7\u70b9\u7684\u524d\u9a71 $3$ \u53f7\u70b9\u8fd8\u6ca1\u6709\u88ab\u8bbf\u95ee\u3002\u4f46\u662f\u5728\u6267\u884c`dfs(3)`\u7684\u65f6\u5019\uff0c$2$ \u53f7\u70b9\u5c31\u88ab\u8bbf\u95ee\u4e86\u3002\n\n\u540c\u7406\uff0c$4$\u53f7\u70b9\u4ea6\u662f\u5982\u6b64\uff0c\u8bfb\u8005\u53ef\u81ea\u5df1\u5728\u5934\u8111\u4e2d\u63a8\u6f14\u4e00\u904d\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u6574\u4e2a\u5faa\u73af\u4e2d\uff0c**\u4e00\u5b9a\u4f1a\u5b58\u5728\u4e00\u6b21`dfs(i)`\u7684\u65f6\u5019\uff0c\u5176\u524d\u9a71\u5168\u90e8\u88ab\u8bbf\u95ee**\u3002\n\n\u56e0\u6b64\u5c31\u5b9e\u73b0\u4e86\u62d3\u6251\u6392\u5e8f\u7684\u529f\u80fd\u3002\n\n\u5176\u5b9e\uff0c\u8fd9\u4e2a\u4ee3\u7801\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5e7f\u4e49\u4e0a\u7684\u62d3\u6251\u6392\u5e8f\uff0c\u5373\u5b9e\u73b0\u4e86\u5bf9\u7ed3\u70b9\u8bbf\u95ee\u987a\u5e8f\u8fdb\u884c\u6392\u5e8f\u7684\u529f\u80fd\uff0c\u53ea\u662f\u5b9e\u73b0\u7684\u65b9\u5f0f\u4e3a dfs \u800c\u5df2\u3002\n\n***\n\n### 3 \u201c\u771f\u6b63\u201d\u7684\u62d3\u6251\u6392\u5e8f\uff08\u4e5f\u8bb8\u53ef\u4ee5\u8bf4\u662f bfs \u5f0f\u62d3\u6251\u6392\u5e8f\uff09\n\n\u8fd9\u79cd\u62d3\u6251\u6392\u5e8f\u901a\u5e38\u662f\u6307\u72ed\u4e49\u4e0a\u7684\u62d3\u6251\u6392\u5e8f\uff0c\u5f53\u7136\uff0c\u6211\u66f4\u559c\u6b22\u5c06\u6574\u4e2a\u8fc7\u7a0b\u7406\u89e3\u4e3a\u4e00\u4e2abfs\u7684\u8fc7\u7a0b\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2abfs\u7684\u8fc7\u7a0b\u800c\u8a00\uff0c\u6211\u4eec\u9996\u5148\u8981\u627e\u5230\u641c\u7d22\u7684\u8d77\u59cb\u70b9\uff0c\u4e5f\u5c31\u662f\u4e00\u5f00\u59cb\u52a0\u5165\u961f\u5217\u4e2d\u7684\u70b9\u3002\n\n\u663e\u7136\uff0c\u8fd9\u4e2a\u70b9\u4e0d\u80fd\u6709\u4efb\u4f55\u524d\u9a71\uff0c\u56e0\u6b64\u6211\u4eec\u8981**\u627e\u5165\u5ea6\u4e3a0\u7684\u7ed3\u70b9\u52a0\u5165\u961f\u5217**\u3002\n\n\u6709\u8bfb\u8005\u53ef\u80fd\u8981\u95ee\u4e86\uff1a\u8981\u662f\u6ca1\u6709\u5165\u5ea6\u4e3a $0$ \u7684\u7ed3\u70b9\u8be5\u600e\u4e48\u529e\u5462\uff1f\n\n\u5176\u5b9e\uff0c\u8fd9\u79cd\u60c5\u51b5\u5728\u4e00\u4e2a **DAG** \u4e2d\u662f**\u4e0d\u5b58\u5728**\u7684\u3002\u4e0b\u9762\u8bc1\u660e\uff1a**\u4e00\u4e2a DAG \u4e2d\u4e00\u5b9a\u5b58\u5728\u81f3\u5c11\u4e00\u4e2a\u5165\u5ea6\u4e3a $0$ \u7684\u7ed3\u70b9**\u3002\n\n\u5229\u7528\u53cd\u8bc1\u6cd5\uff0c\u5047\u8bbe\u4e0d\u5b58\u5728\u4efb\u4f55\u4e00\u4e2a\u5165\u5ea6\u4e3a0\u7684\u7ed3\u70b9\uff0c\u5219\u6bcf\u4e2a\u7ed3\u70b9\u7684\u5165\u5ea6\u81f3\u5c11\u4e3a1\u3002\n\n\u8fd9\u6837\uff0c\u5bf9\u4e8e\u7ed3\u70b9 $G_1$\uff0c\u4e00\u5b9a\u5b58\u5728 $G_2$ \u4e3a $G_1$ \u7684\u524d\u9a71\u3002\u540c\u7406\uff0c\u4e00\u5b9a\u5b58\u5728 $G_3$ \u4e3a $G_2$ \u7684\u524d\u9a71\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5047\u8bbe\u56fe\u5171\u6709 $n$ \u4e2a\u7ed3\u70b9\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709 $G_n$ \u4e3a $G_{n-1}$ \u7684\u524d\u9a71\u3002\n\n\u90a3\u4e48\uff0c\u5982\u679c $G_{n-1}$ \u5b58\u5728\u524d\u9a71 $G_i$ \u6ee1\u8db3 $1 \\leq i \\leq n$\uff0c\u90a3\u4e48\u5c31\u4f1a\u5f62\u6210\u4e00\u4e2a\u73af\uff0c\u4e0e\u6761\u4ef6 DAG \u77db\u76fe\u3002\u5982\u679c\u8be5\u5e97\u4e0d\u5b58\u5728\u524d\u9a71\uff0c\u5219\u90a3\u4e2a\u70b9\u7684\u5165\u5ea6\u4e3a0\uff0c\u4e0e\u5047\u8bbe\u77db\u76fe\u3002\n\n\u6545\u6b64\uff0c\u6211\u4eec\u8bc1\u660e\u4e86\u4e0d\u5b58\u5728 DAG \u4e2d\u6ca1\u6709\u5165\u5ea6\u4e3a0\u7684\u7ed3\u70b9\u7684\u60c5\u51b5\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u904d\u5386\u6bcf\u4e2a\u7ed3\u70b9 $x$ \u7684\u51fa\u8fb9\uff0c\u8003\u8651\u5230\u8fbe\u7684\u4e00\u4e2a\u70b9\uff0c\u5047\u8bbe\u4e3a $y$\uff0c\u6211\u4eec\u5220\u53bb $x$ \u5230 $y$ \u7684\u8fb9\u3002\n\n\u5728\u4ee3\u7801\u5b9e\u73b0\u4e2d\uff0c\u5176\u5b9e\u662f\u53d6\u51fa\u961f\u5217\u7684\u961f\u5934 $x$\uff0c\u5c06 $y$ \u7684**\u5165\u5ea6\u51cf\u4e00**\u5373\u53ef\u3002\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u901a\u5e38\u5229\u7528\u52a8\u6001\u89c4\u5212\u5bf9\u6570\u636e\u8fdb\u884c**\u7ef4\u62a4**\u3002\u5728\u8fd9\u9053\u9898\u76ee\u4e2d\uff0c\u4fbf\u662f\u8fd9\u4e00\u884c\u4ee3\u7801`f[y]=max(f[y],f[x]+a[y]);`\n\n\u5f53\u4e00\u4e2a\u70b9\u7684**\u5165\u5ea6\u51cf\u52300\u65f6**\uff0c\u8bf4\u660e\u6240\u6709\u5b83\u7684**\u6240\u6709\u524d\u9a71\u5df2\u7ecf\u88ab\u8ba1\u7b97\u8fc7\u4e86**\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u5b83**\u63d2\u5165\u961f\u5217**\u3002\n\n**\u91cd\u590d\u4ee5\u4e0a\u6b65\u9aa4\uff0c\u76f4\u5230\u961f\u5217\u4e3a\u7a7a**\u3002\u8fd9\u65f6\u6211\u4eec\u5c31\u5df2\u7ecf\u7edf\u8ba1\u51fa\u4e86\u7b54\u6848\u3002\n\n#### \u603b\u7ed3\u4e00\u4e0b\uff0c\u6b64\u79cd\u62d3\u6251\u6392\u5e8f\u5171\u6709\u56db\u4e2a\u4e3b\u8981\u6b65\u9aa4\uff1a\n\n1. **\u521d\u59cb\u5316\u961f\u5217\uff0c\u5c06\u5165\u5ea6\u4e3a $0$ \u7684\u8282\u70b9\u653e\u5165\u961f\u5217\u3002**\n2. **\u53d6\u51fa\u961f\u9996\uff0c\u904d\u5386\u5176\u51fa\u8fb9\uff0c\u5c06\u80fd\u591f\u5230\u8fbe\u7684\u70b9\u5165\u5ea6\u51cf\u4e00\uff0c\u540c\u65f6\u7ef4\u62a4\u7b54\u6848\u6570\u7ec4\u3002**\n3. **\u82e5\u5728\u6b64\u65f6\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6\u53d8\u4e3a $1$\uff0c\u90a3\u4e48\u5c06\u5176\u52a0\u5165\u961f\u5217\u3002**\n4. **\u56de\u5230\u7b2c\u4e8c\u6b65\uff0c\u76f4\u5230\u961f\u5217\u4e3a\u7a7a\u3002**\n\n\u4ee3\u7801\u653e\u51fa\u6765\u7ed9\u8bfb\u8005\u53c2\u8003\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cctype>\n#include <vector>\n#include <queue>\n\n#define ll long long\n\nusing namespace std;\n\ninline int read() {\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile (!isdigit(ch)) {if (ch=='-') f=-1;ch=getchar();}\n\twhile (isdigit(ch)) x=x*10+ch-'0',ch=getchar();\n\treturn x*f;\n}\n\nconst int N=500005;\n\nint ind[N],f[N],a[N];  //ind--\u5165\u5ea6   f--\u7b54\u6848   a--\u65f6\u95f4\nvector <int> edge[N];\nqueue <int> q;\n\nint main() {\n\tint n=read();\n\tfor (int i=1;i<=n;i++) {\n\t\tint x=read();\n\t\ta[i]=read();\n\t\twhile (int y=read()) {\n\t\t\tif (!y) break;\n\t\t\tedge[y].push_back(x);\n            ind[x]++;\n\t\t}\n\t}\n    //\u6b65\u9aa4\u4e00\n\tfor (int i=1;i<=n;i++) {\n\t\tif (ind[i]==0) {\n\t\t\tq.push(i);\n\t\t\tf[i]=a[i];\n\t\t}\n\t};\n\twhile (!q.empty()) {\n\t\tint rhs=q.front();\n\t\tq.pop();\n        //\u6b65\u9aa4\u4e8c\n\t\tfor (int i=0;i<edge[rhs].size();i++) {\n\t\t\tint u=edge[rhs][i];\n\t\t\tind[u]--;\n\t\t\tif (ind[u]==0) q.push(u);  //\u6b65\u9aa4\u4e09\n\t\t\tf[u]=max(f[u],f[rhs]+a[u]);\n\t\t}\n\t}\n\tint ans=0;\n\tfor (int i=1;i<=n;i++) {\n\t\tans=max(ans,f[i]);   //\u7edf\u8ba1\u7b54\u6848\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u8003\u8651\u5230\u4e0a\u9762\u6211\u5df2\u7ecf\u8bb2\u5730\u6bd4\u8f83\u6e05\u695a\u4e86\uff0c\u8fd9\u91cc\u4ee3\u7801\u4e0d\u52a0\u8fc7\u591a\u6ce8\u91ca\uff0c\u4ec5\u6807\u8bb0\u5173\u952e\u5904\u3002\n\n***\n\n### 4 \u4e00\u4e9b\u9898\u76ee\n\n#### \u505a\u5b8c\u8fd9\u4e00\u9053\u62d3\u6251\u6392\u5e8f\u6a21\u677f\u9898\u4e4b\u540e\uff0c\u5927\u5bb6\u53ef\u4ee5\u79fb\u6b65\uff1a\n\n[P4017 \u6700\u5927\u98df\u7269\u94fe\u8ba1\u6570](https://www.luogu.com.cn/problem/P4017)\n\n[P1983 \u8f66\u7ad9\u5206\u7ea7](https://www.luogu.com.cn/problem/P1983)\n\n\u5f88\u591a DAG \u4e0a\u7684 DP \u90fd\u9700\u8981\u4f9d\u8d56\u4e8e\u62d3\u6251\u6392\u5e8f\uff0c\u4e5f\u6709\u5f88\u591a\u9898\u76ee\u662f\u9700\u8981\u5148\u8fdb\u884c\u7f29\u70b9\u7136\u540e\u518d\u62d3\u6251\u6392\u5e8f\uff0c\u6bd4\u5982\u8bf4\u8fd9\u4e2a\u9898\uff1a\n\n[P3387 \u3010\u6a21\u677f\u3011\u7f29\u70b9](https://www.luogu.com.cn/problem/P3387)\n\n\uff08\u5176\u5b9e\u5f88\u5927\u4e00\u90e8\u5206\u548c\u5f3a\u8fde\u901a\u5206\u91cf\u6709\u5173\u7684\u9898\u76ee\u90fd\u5229\u7528\u5230\u62d3\u6251\u6392\u5e8f\uff09\n\n***\n\n####  \u5b8c\u7ed3\u6492\u82b1 QAQ\uff01\n\n*\u5982\u679c\u89c9\u5f97\u6587\u7ae0\u6709\u4e00\u4e9b\u5e2e\u52a9\u7684\u8bdd\u4e0d\u59a8\u70b9\u4e2a\u8d5e\u54e6\uff01\u8c22\u8c22\uff01*",
        "postTime": 1582549150,
        "uid": 106510,
        "name": "Keith_2006",
        "ccfLevel": 4,
        "title": "\u62d3\u6251\u6392\u5e8f\u5b66\u4e60\u7b14\u8bb0 \uff08\u3010\u9898\u89e3\u3011P1113 \u6742\u7269\uff09"
    },
    {
        "content": "[${\\color{orange}\\text{\u6b22\u8fce\u62dc\u8bbf\u6211\u8fd9\u4e2a\u849f\u84bb\u7684\u535a\u5ba2}}$](https://www.luogu.org/blog/wzc-wwwwd/)\n\n[P1113 \u3010\u6742\u52a1\u3011\u4f20\u9001\u95e8](https://www.luogu.org/problem/P1113)\n\n### \u6b64\u9898\u7b97\u6cd5:\u62d3\u6251\u6392\u5e8f\n\n\u5927\u81f4\u601d\u8def:\n\n>1.$ $\u8f93\u5165\u6742\u7269\u8017\u65f6\uff0c\u7528$vector$\u5b58\u4e0b\u5b83\u7684\u5148\u51b3\u6742\u7269\u3002\u5e76\u7528\u6570\u7ec4$rud[i]$\u5b58\u4e0b\u7b2c$i$\u4e2a\u6742\u7269\u7684\u5148\u51b3\u6742\u7269\u4e2a\u6570(\u5373\u5165\u5ea6)\u3002\n\n>2.$ $\u5c06\u6240\u6709\u5165\u5ea6\u4e3a$0$\u7684\u70b9$i$\u52a0\u5165\u961f\u5217\u5e76\u5c06$dp[i]$(\u8868\u793a\u7b2c$i$\u4e2a\u6742\u7269\u7684\u6700\u65e9\u5b8c\u6210\u65f6\u95f4)\u7684\u503c\u7f6e\u4e3a\u7b2c$i$\u4e2a\u6742\u7269\u7684\u8017\u65f6$tim[i]$\u3002\n\n>3.$ $\u53ea\u8981\u961f\u5217\u4e0d\u7a7a\uff0c\u62ff\u51fa\u961f\u5217\u9876\u7aef\u7684\u6742\u7269$now$\u5e76\u7528$now$\u66f4\u65b0\u4ee5$now$\u4e3a\u5148\u51b3\u6742\u7269\u7684\u6742\u7269$nex$\u7684$dp[nex]$\u7684\u503c\u3002\u4f7f$dp[nex]=max(dp[nex],dp[i]+tim[nex])$\u3002\u518d\u5c06$rud[nex]--$\u3002\u5982\u679c$rud[nex]$\u4e3a$0$\u65f6\uff0c\u5c06\u70b9$nex$\u52a0\u5165\u961f\u5217\u3002\n\n>4.$ $\u6c42\u51fa\u6240\u6709$dp[i]$\u7684\u6700\u5927\u503c$ans$\u5c31\u662f\u7b54\u6848\u3002\n\n\u4e00\u4e2a\u6817\u5b50\uff1a\n\n![](https://s2.ax1x.com/2019/09/13/nrlyT0.jpg)\n\n## \u4ee5\u4e0b\u662f\u4ee3\u7801+\u6ce8\u91ca \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=10010;\nint n,t,tim[N],e;\nint rud[N],dp[N],ans;\nvector<int> to[N];\nqueue<int> q;\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&t);\n\t\tscanf(\"%d\",tim+t);\n\t\tscanf(\"%d\",&e);\n\t\twhile(e!=0){\n\t\t\tto[e].push_back(t);\u3001\n\t\t\t//vector\u5b58\u5148\u51b3\u6742\u7269\n\t\t\trud[t]++;\n\t\t\tscanf(\"%d\",&e);\n\t\t} \n\t} for(int i=1;i<=n;i++)\n\t\tif(!rud[i]){\n\t\t\tq.push(i);\n\t\t\tdp[i]=tim[i];\n\t\t}//\u5904\u7406\u5f00\u59cb\u65f6\u5165\u5ea6\u4e3a0\u7684\u70b9\n\twhile(!q.empty()){\n\t\tint now=q.front();\n\t\tq.pop();\n\t\tfor(int i=0;i<to[now].size();i++){\n\t\t\tint nex=to[now][i];\n\t\t\tdp[nex]=max(dp[nex],dp[now]+tim[nex]);//\u5982\u9898\n\t\t\trud[nex]--;\n\t\t\tif(rud[nex]==0)\n\t\t\t\tq.push(nex);\n\t\t}\n\t} for(int i=1;i<=n;i++)\n\t\t\tans=max(ans,dp[i]);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\u6ca1\u4e8b\u5c31\u505a\u505a\u6742\u7269\u5427\u3002\n\n\u8c22\u8c22\u5927\u5bb6! !\n",
        "postTime": 1568347472,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "\u62d3\u6251\u6392\u5e8f\u3002\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nconst int N = 10005;\nqueue <int> q;\nbool e[N][N];\nint ti[N];\nint mx[N];\nint ru[N];\nint n,ans;\nvoid topo()\n{\n    for(int i=1;i<=n;++i)\n        if(ru[i] == 0) \n        {\n            q.push(i);\n            mx[i] = ti[i];\n        }\n    while(!q.empty())\n    {\n        int d = q.front();\n        q.pop();\n        for(int i=1;i<=n;++i)\n        {\n            if(e[d][i])\n            {\n                ru[i]--;\n                if(ru[i]==0) q.push(i);\n                mx[i] = max(mx[i],mx[d]+ti[i]);\n            }\n        }\n    }\n    for(int i=1;i<=n;++i)\n        ans = max(ans,mx[i]);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i)\n    {\n        int a,b,c;\n        scanf(\"%d%d%d\",&a,&b,&c);\n        ti[a] = b;\n        while(c!=0)\n        {\n            ru[a]++;\n            e[c][a] = true;\n             scanf(\"%d\",&c);\n        }\n    }\n    topo();\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1494672882,
        "uid": 39828,
        "name": "amstar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "\u62d3\u6251\u6392\u5e8f\u5165\u95e8\u9898\n\n\u5f00\u6570\u7ec4\u8bb0\u5f55\u8282\u70b9\u7ed3\u675f\u4e0e\u5f00\u59cb\u65f6\u95f4\n\n\u5165\u961f\u5217\u524d\u4e0d\u65ad\u66f4\u65b0\u8282\u70b9\u5f00\u59cb\u65f6\u95f4\n\n\u51fa\u961f\u5217\u65f6\u66f4\u65b0\u8282\u70b9\u7ed3\u675f\u65f6\u95f4\n\n\u6392\u5e8f\u540e\u9009\u6570\u7ec4\u6700\u5927\u503c\u8f93\u51fa\n\n\u552f\u4e00\u95ee\u9898\u662f\u8fd9\u4efd\u4ee3\u7801C++11\u8fc7\u4e0d\u4e86\n\n```cpp\n#include<cstdio>\n#include<memory.h>\n#include<queue>\n#define MAXN 10005\n#define MAXM 10000005\nusing namespace std;\n\nint n,id=0;\nint Y[MAXM];\nint next[MAXM];\nint head[MAXN];\nint END[MAXN];//\u521d\u59cb\u8bb0\u5f55\u6742\u7269\u5f00\u59cb\u65f6\u95f4\uff0c\u66f4\u65b0\u540e\u8bb0\u5f55\u6742\u7269\u7ed3\u675f\u65f6\u95f4 \nint T[MAXN];\nint idu[MAXN];//\u62d3\u6251\u5b58 \u5165\u5ea6  \nqueue<int> Q;\n\nvoid ADD(int a,int b)//\u94fe\u5f0f\u524d\u5411\u661f \n{\n\tY[++id]=b;\n\tnext[id]=head[a];\n\thead[a]=id;\n\tidu[b]++;\n}\n\nvoid SCAN()\n{\n\tscanf(\"%d\",&n);\n\tint i;\n\tfor(i=1; i<=n; i++)\n\t{\n\t\tint a,c=1;\n\t\tscanf(\"%d\",&a);\n\t\tscanf(\"%d\",&T[a]);\n\t\tscanf(\"%d\",&c);\n\t\twhile(c)\n\t\t{\n\t\t\tADD(c,a);\n\t\t\tscanf(\"%d\",&c);\n\t\t}\n\t}\n}\n\nint TP()//\u62d3\u6251\u6392\u5e8f \n{\n\tmemset(END,0,sizeof(END));\n\tint ans=0;\n\tint i;\n\tfor(i=1; i<=n; i++)\n\t\tif(!idu[i])\n\t\t{\n\t\t\tQ.push(i);\n\t\t}\n\twhile(!Q.empty())\n\t{\n\t\tint x=Q.front();\n\t\tQ.pop();\n\t\tEND[x]+=T[x];\n\t\tans=ans>END[x]?ans:END[x];\n\t\tint i;\n\t\tfor(i=head[x]; i; i=next[i])\n\t\t{\n\t\t\tidu[Y[i]]--;\n\t\t\tEND[Y[i]]=END[Y[i]]>END[x]?END[Y[i]]:END[x];\n\t\t\t//\u88ab\u66f4\u65b0\u8282\u70b9\u5f00\u59cb\u65f6\u95f4\u4e3a\u539f\u88ab\u66f4\u65b0\u8282\u70b9\u5f00\u59cb\u65f6\u95f4\u4e0e\u524d\u9a71\u8282\u70b9\u7ed3\u675f\u65f6\u95f4\u7684\u8f83\u5927\u503c \n\t\t\tif(!idu[Y[i]])\n\t\t\t{\n\t\t\t\tQ.push(Y[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\n\nint main()\n{\n\tSCAN();\n\tprintf(\"%d\",TP());\n\treturn 0;\n}\n```",
        "postTime": 1526560291,
        "uid": 63345,
        "name": "llllllQ",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "#\u4e00\u5b9a\u8981\u7528\u3002\u3002\u3002\u3002\u3002\u3002\n\n```cpp\n#include<iostream> \n#include<cstdio>\n#include<cstring>//\u65e0\u804a\u5b9a\u8fd9\u4e48\u591a \nusing namespace std;\nint main(){ \n    int t[10001],n,ans=0,k,num,ti,x,y,i;//\u5b9a\u8fd9\u4e48\u4e00\u5927\u5768\u4e1c\u897f \n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){ \n        scanf(\"%d%d\",&k,&ti);\n        t[k]=ti;\n        scanf(\"%d\",&x);\n        while(x!=0){ \n               t[k]=max(t[k],ti+t[x]);\n               ans=max(ans,t[k]);//\u66f4\u65b0\u64cd\u4f5c\n            scanf(\"%d\",&x);\n        } \n    } \n    printf(\"%d\",ans);\n    return 0;\n} \n\n```",
        "postTime": 1470300613,
        "uid": 18220,
        "name": "\u5c39\u661520160508",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "\u7ffb\u4e86\u7ffb\u9898\u89e3\u53d1\u73b0\u90fd\u662f\u4ec0\u4e48\u62d3\u6251\uff1f\u6700\u957f\u8def\uff1fdfs\uff1f\u54e6\uff01\uff01\u6211\u5929\uff0cdalao dalao\u3002\n\n\u4e0d\u8fc7\u697c\u4e0bdalao\u7684\u4ee3\u7801\u957f\u5ea6\u7740\u5b9e\u8ba9\u6211\u6298\u670d\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u505a\u7684\u90a3\u4e48\u9ebb\u70e6\u3002\n\n\u5728\u8fd9\u8bf4\u4e00\u4e0b\u6211\u7684\u89e3\u6cd5\uff0c\u65e2\u7136\u7b2ck\u4ef6\u4e8b\u7684\u51c6\u5907\u4e00\u5b9a\u5728\u7b2c1\u5230k-1\u4ef6\u4e8b\u4e2d\uff0c\u90a3\u4e48\u4e0d\u96be\u60f3\u5230\u4e8c\u8005\u4e4b\u95f4\u7684\u8054\u7cfb\u3002\n\u90a3\u4e48\u5f00\u59cb\u5faa\u73af\u5904\u7406\u6bcf\u4e00\u4ef6\u4e8b\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u6bd4\u8f83\u53d6max\u4e0d\u5c31\u597d\u4e86\uff0c\u5177\u4f53\u7406\u89e3\u770b\u4ee3\u7801\u3002\n```cpp\n/*....................\n\u4f5c\u8005\uff1aManjusaka\n\u65f6\u95f4\uff1a2018/7/5\n\u9898\u76ee\uff1aluogu P1113 \u6742\u52a1  \n......................*/\n\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\nusing namespace std;\nint n,ans;\nstruct ahah\n{\n    int need,over;        // need \u8868\u793a\u9700\u8981\u65f6\u95f4 \uff0cover\u8868\u793a\u7ed3\u675f\u65f6\u95f4\u3002 \n    int pre[111],tot;    // pre[],tot \u8868\u793a\u5f00\u59cb\u8fd9\u4ef6\u4e8b\u524d\u6709tot\u4ef6\u4e8b\u8981\u51c6\u5907\uff0cpre\u50a8\u5b58\u3002 \n} edge[10010];\nint main()\n{\n    int x,y,z;\n    scanf(\"%d\",&n);\n    for(int i=1; i<=n; i++)\n    {\n        scanf(\"%d%d\",&x,&edge[i].need);\n        while(scanf(\"%d\",&y)==1&&y!=0)edge[x].pre[++edge[x].tot]=y;\n    }\n    edge[1].over=edge[1].need;\n    for(int i=2; i<=n; i++)\n    {\n        for(int j=1; j<=edge[i].tot; j++)\n        {\n            edge[i].over=max(edge[i].over,edge[edge[i].pre[j]].over+edge[i].need);\n        //\u53ef\u80fd\u6bd4\u8f83\u6df7\u4e71\uff0c\u8fd9\u4ef6\u4e8b\u7684\u7ed3\u675f\u65f6\u95f4\u4e00\u5b9a\u662f\u8fd9\u4e9b\u4e8b\u5b8c\u6210\u540e\u518d\u505a\uff0c\n        //\u6240\u4ee5\u53d6\u6bcf\u4ef6\u4e8b\u5b8c\u6210\u7684\u65f6\u95f4\u52a0\u4e0a\u73b0\u5728\u8fd9\u4ef6\u4e8b\u7684\u65f6\u95f4 ,\u4f5c\u4e3a\u76ee\u524d\u6240\u5904\u7406\u5230\u7684\u65f6\u95f4\u7684\u5b8c\u6210\u65f6\u95f4\u3002 \n        }\n        ans=max(ans,edge[i].over);\n    }\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1531655430,
        "uid": 61727,
        "name": "Manjusaka\u4e36\u68a6\u5bd2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "\u57fa\u672c\u4e0a\u662f\u6a21\u677f\u7684\u62d3\u6251\u6392\u5e8f\u3002\u5728\u8fc7\u7a0b\u4e2d\u5c06\u6700\u5927\u8017\u65f6\u7684\u51c6\u5907\u5de5\u4f5c\u7684\u65f6\u95f4\u52a0\u5230\u5f53\u524d\u5de5\u4f5c\u4e0a\uff0c\u7b97\u51fa\u65b0\u7684\u65f6\u95f4\uff0c\u6700\u540e\u6240\u6709\u5de5\u4f5c\u4e2d\u8017\u65f6\u6700\u957f\u7684\u5c31\u662f\u7ed3\u679c\u3002\n\n          program project1;\n          var\n             n,i,p,ans:longint;\n             a,b,ru:array[0..10005]of longint;\n             f:array[1..10005,0..105]of longint;\n             tf:array[1..10005]of boolean;\n          procedure psort;\n          var l,r,i,p:longint;\n              q:array[1..10005]of longint;\n          begin\n            l:=0;\n            r:=0;\n            fillchar(q,sizeof(q),0);\n            for i:=1 to n do if ru[i]=0 then begin \n              inc(r);\n              q[r]:=i;\n              tf[i]:=true; \n            end;\n            repeat\n              inc(l);p:=q[l];\n              for i:=1 to f[p,0] do begin\n                if (tf[f[p,i]]=false) then begin\n                  dec(ru[f[p,i]]);\n                  if b[f[p,i]]<a[p]+a[f[p,i]] then \n                      b[f[p,i]]:=a[p]+a[f[p,i]];\n                  if (ru[f[p,i]]=0) then begin \n                    inc(r);\n                    q[r]:=f[p,i];\n                    tf[f[p,i]]:=true;\n                    a[f[p,i]]:=b[f[p,i]]; \n                  end;\n                end;\n              end;\n            until l>=r;\n          end;\n\n          begin\n             fillchar(a,sizeof(a),0);\n             fillchar(b,sizeof(b),0);\n             fillchar(ru,sizeof(ru),0);\n             fillchar(f,sizeof(f),0);\n             fillchar(tf,sizeof(tf),false);\n             readln(n);\n             for i:=1 to n do begin\n               read(P);\n               read(a[i]); b[i]:=a[i];\n               read(p);\n               while p<>0 do begin\n                 inc(f[p,0]);\n                 inc(ru[i]);\n                 f[p,f[p,0]]:=i;\n                 read(P);\n               end;\n             end;\n             psort;\n             for i:=1 to n do if ans<=a[i] then ans:=a[i];\n             writeln(ans);\n             readln;\n             readln;\n          end.",
        "postTime": 1523537749,
        "uid": 24425,
        "name": "fysbb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "\u7ffb\u904d\u4e86\u9898\u89e3\uff0c\u53d1\u73b0\u5404\u4f4d\u57fa\u672c\u5168\u662f\u62d3\u6251\u505a\u7684\uff0c\u4e00\u7247\u62d3\u6251\u5e8f\u2026\u2026 \u800c\u6211\u592a\u5f31\u4e86\uff0c\u5b8c\u5168\u4e0d\u77e5\u9053\u600e\u4e48\u62d3\u6251\u2026\u2026\n\n\u4e0d\u8fc7\u5f88\u660e\u663e\u8fd9\u9898\u662f\u6c42\u4e00\u4e2a\u6700\u957f\u8def\uff0c\u4e8e\u662f\u6211\u5c31\u53ea\u80fd\u4ece1\u53f7\u8282\u70b9\u5f00\u59cb\u641c\u7d22\u2026\u2026 \u4e0d\u8fc7\u5927\u7206\u641c\u80af\u5b9a\u662f\u4f1aTLE\u7684\uff0c\u4e8e\u662f\u6211\u5c31\u52a0\u4e86\u4e00\u4e2a\u8bb0\u5fc6\u5316\u6570\u7ec4\u3002\n\n### \u56e0\u4e3a\u4ee5\u4e00\u4e2a\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u6700\u957f\u8def\u4e0d\u53d8\u4e14\u5c06\u4f1a\u88ab\u91cd\u590d\u4f7f\u7528\uff0c\u5c31\u53ef\u4ee5\u5199\u51fa\u8bb0\u5fc6\u5316\u641c\u7d22\u3002\n\n\u4f5c\u4e3adp\u7684\u8bb0\u641c\u4e00\u822c\u662f n^2 \u7684\uff0c\u800c\u4e00\u4e2a\u56fe\u662f\u6709\u8fb9\u4f5c\u4e3a\u9650\u5236\u7684\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u5927\u6982\u662f O(m) \uff0c\u672c\u9898 m \u6700\u5927\u503c\u5c0f\u4e8e 10000 * 100 \uff0c\u53ef\u8fc7\u3002\n\n\u9898\u89e3\u4e2d\u53ea\u6709\u4e00\u4e2a\u548c\u6211\u601d\u8def\u76f8\u540c\u7684\uff0c\u4e0d\u8fc7\u4ed6\u5199\u7684\u662f\u7eafdp~~\uff0c\u800c\u6211\u4e5f\u4e0d\u4f1a\u5199dp~~\u3002\n\n\u6700\u540e\u6302\u4e0a 1A 0ms \u4ee3\u7801\uff0c\u5f88\u7b80\u5355\u7684~\n\n```cpp\n#include <queue>\n#include <cctype>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nconst int maxn = 10000 + 10;\nint n, head[maxn], memo[maxn], tim[maxn], edge_num;\n\nstruct Edge{ int v, nxt; }edge[100 * maxn];\n\ninline int read() {\n  register char ch = 0; register int x = 0;\n  while( !isdigit(ch) ) ch = getchar();\n  while( isdigit(ch) ) x = (x * 10) + (ch ^ 48), ch = getchar();\n  return x;\n}\n\ninline void Add_edge(int u, int v) {\n  edge[++edge_num].v = v;\n  edge[edge_num].nxt = head[u], head[u] = edge_num;\n}\n\nint Decade_fripSide(int x) {\n  if( memo[x] ) return memo[x];\n  if( !head[x] ) return tim[x];\n  for(int i = head[x]; i; i = edge[i].nxt)\n    memo[x] = max(memo[x], Decade_fripSide(edge[i].v) + tim[x]);\n  return memo[x];\n}\n\nint main(int argc, char const *argv[])\n{\n  int v = 0;\n  scanf(\"%d\", &n);\n  for(int i = 1; i <= n; ++i) {\n    v = read(), tim[i] = read();\n    while( v = read() ) Add_edge(v, i);\n  }\n  printf(\"%d\\n\", Decade_fripSide(1));\n\n  return 0;\n}\n```",
        "postTime": 1529575672,
        "uid": 59478,
        "name": "\u67d2\u547d\u4e5d\u9668_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "\u66b4\u529b,\u5f53\u4e00\u4e2a\u4efb\u52a1\u5b8c\u6210\u65f6\uff0c\u770b\u5176\u4ed6\u7684\u4efb\u52a1\u80fd\u4e0d\u80fd\u5b8c\u6210\uff0c\u4f46\u597d\u50cf\u6bd4\u62d3\u6251\u6392\u5e8f\u6162\u4e00\u4e9b\n\n```cpp\n#include<iostream>\n#include<queue>\nusing namespace std;\nint n;\nint len[10005];//rt\nbool cs[10005][10005];//cs[i][j]:j\u662f\u5426\u4e3ai\u7684\u5148\u51b3\u6761\u4ef6\nbool pd[10005];\nstruct axx\n{\n    int num;\n    int wz;\n    bool operator <(const axx p)const\n    {\n        return num>p.num;\n    }\n    axx(int a,int b)\n    {\n        wz=a;\n        num=b;\n    }\n};\nint time[10005];//\u6700\u5febi\u7684\u5b8c\u6210\u65f6\u95f4\nint tj[10005];//i\u6709\u591a\u5c11\u4e2a\u5148\u51b3\u6761\u4ef6\npriority_queue<axx> bd;//\u6240\u6709\u540c\u65f6\u8fdb\u884c\u7684\u5de5\u5e8f\uff0c\u4f7f\u5b8c\u6210\u6700\u65e9\u7684\u5148\u8f93\u51fa\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        int x;\n        cin>>x>>len[i];\n        bool xpd=true;\n        while(xpd==true)\n        {\n            int y;\n            cin>>y;\n            if(y==0)\n            {\n                xpd=false;\n            }\n            else\n            {\n                tj[x]++;\n                cs[x][y]=true;\n            }\n        }\n    }\n    bd.push(axx(1,len[1]));\n    time[1]=len[1];\n    pd[1]=true;\n    while(!bd.empty())\n    {\n        axx u=bd.top();\n        bd.pop();\n        pd[u.wz]=true;\n        for(int i=1;i<=n;i++)\n        {\n            if(cs[i][u.wz]==true&&pd[i]==false)\n            {\n                cs[i][u.wz]=false;\n                tj[i]--;\n                if(tj[i]==0)\n                {\n                    time[i]=u.num+len[i];\n                    bd.push(axx(i,time[i]));\n                }\n            }\n        }\n    }\n    int axxmax=0;\n    for(int i=1;i<=n;i++)\n    {\n        axxmax=max(axxmax,time[i]);\n    }\n    cout<<axxmax<<endl;\n    return 0;\n}\n```",
        "postTime": 1508151915,
        "uid": 30148,
        "name": "AXXWTGST",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "\u7528\u66b4\u641c\u6c34\u8fc7\u6b64\u9898\uff0c~~\u6211\u8fd8\u662f\u592a\u83dc\u4e86~~\n\n\u770b\u4e86\u697c\u4e0a\u7684dp\u5927\u4f6c\u5b9e\u5728\u4f69\u670d\uff08~~\u770b\u4e0d\u61c2~~\uff09\u6240\u4ee5\u6211\u8fd8\u662f\u53d1\u4e2a\u66b4\u641c\u4ee3\u7801\u5427\n\n\u8fd9\u9898\u4e3b\u8981\u8981\u6ce8\u610f\u7684\u662f\u5de5\u4f5c\u5e8f\u53f7\u5df2\u7ecf\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u4e14\u8fd9\u4e2a\u5de5\u4f5c\u8981\u5148\u5b8c\u6210\u7684\u4e00\u5b9a\u5728\u5176\u524d\u9762\u3002\n\n```cpp\n#include<iostream>\nusing namespace std;\nint n,a[10001][101],t[10001]={0},maxans=-1;//\u5176\u4e2da[i][0]\u8868\u793a\u7b2ci\u4e2a\u5de5\u4f5c\u7684\u51c6\u5907\u5de5\u4f5c\u7684\u4e2a\u6570\nbool b[10001];//\u526a\u679d\ninline int max(int x,int y){//\u624b\u6253\u5feb\u4e00\u70b9\n\treturn x>y?x:y;\n}\nint fine(int x){\n\tint maxx=-1;\n\tfor(int i=1;i<=a[x][0];i++){\n\t\tif(!b[a[x][i]]){\n\t\t\tb[a[x][i]]=1;\n\t\t\tif(a[a[x][i]][0]!=0)t[a[x][i]]+=fine(a[x][i]);//\u5982\u679c\u51c6\u5907\u5de5\u4f5c\u8fd8\u6709\u51c6\u5907\u5de5\u4f5c\uff0c\u7ee7\u7eed\u641c\u7d22\n\t\t}\n\t\tmaxx=max(maxx,t[a[x][i]]);\n\t}\n\treturn maxx;//\u8fd4\u56de\u6700\u5927\u503c\n}\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){//\u8f93\u5165\n\t\tint k,len,x,tt=0;\n\t\tcin>>k>>len>>x;//k\u662f\u5b57\u5178\u5e8f\u53f7\uff0clen\u662f\u6b64\u9879\u8017\u65f6\n\t\tt[k]=len;//\u81ea\u5df1\u7684\u8017\u65f6\n\t\twhile(x){//x\u7b49\u4e8e0\u65f6\uff0c\u9000\u51fa\n\t\t\ta[k][++tt]=x;\n\t\t\tcin>>x;\n\t\t}\n\t\ta[k][0]=tt;//\u4e0a\u9762\u89e3\u91ca\u8fc7\u4e86\n\t}\n\tfor(int i=n;i>=1;i--)if(!b[i]){//\u5982\u679c\u6ca1\u6709\u641c\u7d22\u8fc7\n\t\t\tb[i]=1;\n\t\t\tif(a[i][0])t[i]+=fine(i);\n\t\t}\n\tfor(int i=1;i<=n;i++)maxans=max(maxans,t[i]);//\u53d6\u6700\u5927\u503c\n\tcout<<maxans<<endl;\n\treturn 0;//\u597d\u4e60\u60ef\n}\n```",
        "postTime": 1569856385,
        "uid": 130424,
        "name": "kevin_y",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "**\u4e3a\u4ec0\u4e48\u8981\u5199\u8fd9\u7bc7\u9898\u89e3\uff1f**\n\n\u4e00\u697c\u9898\u89e3\u4ee3\u7801\u77ed\u4e5f\u6613\u4e8e\u7406\u89e3\n\u5c31\u662f\u5faa\u73af\u5185\u8f93\u5165\u7684\u65f6\u5019\u6211\u6b7b\u6d3b\u4e5f\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u8f93\u5165i\n\u7136\u540e\u6309\u7167\u81ea\u5df1\u7684\u7406\u89e3\u8f93\u4e86\u4e2a\u987a\u5e8f\u7ed3\u679cA\u4e86\u3002\n\u518d\u56de\u53bb\u770b\u9898\uff0c \u5c31\u660e\u767d\u4e86\u4e3a\u5565\u4e86 \u5c31\u5f88\u60f3\u5199\u5199\u3002\n~~\uff08\u5e2e\u52a9\u548c\u6211\u4e00\u6837\u7684\u5c0f\u840c\u65b0\uff09~~\n\n**solution**\n\n\u6839\u636e\u9898\u76ee\u610f\u601d \uff0c _\u4ed6\u7684\u65f6\u95f4\u53ef\u4ee5\u4e3a\u5728\u4ed6\u4e4b\u524d\u6240\u6709\u7684\u5fc5\u505a\u7684\u5de5\u4f5c\u4e2d\u65f6\u95f4\u7ed3\u675f\u6700\u665a\u7684\u518d\u52a0\u4e0a\u4ed6\u7684\u65f6\u95f4\uff0c \u53d6max\u5c31\u597d_ \n\n\u4e0e\u4e00\u697c\u9898\u89e3\u4e0d\u4e00\u6837\u7684\u662f\u6211\u5faa\u73af\u5185\u8f93\u5165\u65f6\uff0c \u5173\u4e8e\u5c40\u90e8\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf\uff0c \u5728for\u5faa\u73af\u91cc\u518d\u8f93\u5165i\u4f1a\u5f71\u54cd\u5faa\u73af\u5427\uff1f\u6240\u4ee5\u5c31\u4e0d\u662f\u5f88\u660e\u767d\uff0c \u6211\u76f4\u63a5\u5c31\u91cd\u65b0\u5f00\u4e86\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\uff0c \u7ed3\u679c\u662f\u53ef\u4ee5A\u6389\u7684\n\n\u4f46\u662f\uff01\uff01\u518d\u91cd\u65b0\u770b\u9898\u76ee\uff0c \u987a\u5e8f\u554a\uff0c \u8f93\u5165i\u4e0d\u5f71\u54cd\u554a\uff0c \u56e0\u4e3a\u662f\u6309\u7167\u987a\u5e8f\u6765\u7684\u554a\uff0c \u6240\u4ee5\u8fd9\u91cc\u518d\u5f00\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u987a\u5e8f\u548c\u76f4\u63a5\u8f93\u5165i\u4e24\u8005\u90fd\u662f\u5bf9\u7684\uff0c ~~\uff08\u6211\u8bf4\u7684\u597d\u50cf\u6ca1\u4ec0\u4e48\u7528\uff0c \u5351\u5fae\uff09~~\n\nso \n\nThe Last:\n```cpp\n#include <cstdio>\n#include <iostream>\nusing namespace std;\nconst int N = 10000;\nint n, a[N], num, x, len, ans, sum, lz[N];\nint read() {\n\tint s = 0, w = 1;\n\tchar ch = getchar();\n\twhile(!isdigit(ch)) {if(ch == '-') w = -1;ch = getchar();}\n\twhile(isdigit(ch)) {s = s * 10 + ch - '0';ch = getchar();}\n\treturn s * w;\n}\nint main() {\n\tn = read();\n//\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; i++) {\n\t\tnum = read();\n//\t\tscanf(\"%d\", &num);\n\t\tlen = read();\n//\t\tscanf(\"%d\", &len);\n\t\tsum = 0;\n\t\twhile(scanf(\"%d\", &x) && x) \n\t\t\tsum = max(sum, lz[x]);\n\t\tlz[num] = sum + len;\n\t\tans = max(ans, lz[num]);\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n} \n```\n\n\u8c22\u8c22\u6536\u770b\uff0c \u795d\u8eab\u4f53\u5065\u5eb7\uff01",
        "postTime": 1568527948,
        "uid": 147646,
        "name": "lzpclxf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "# \u9898\u76ee\uff1a\n## \u9898\u76ee\u63cf\u8ff0\n\nJohn\u7684\u519c\u573a\u5728\u7ed9\u5976\u725b\u6324\u5976\u524d\u6709\u5f88\u591a\u6742\u52a1\u8981\u5b8c\u6210\uff0c\u6bcf\u4e00\u9879\u6742\u52a1\u90fd\u9700\u8981\u4e00\u5b9a\u7684\u65f6\u95f4\u6765\u5b8c\u6210\u5b83\u3002\u6bd4\u5982\uff1a\u4ed6\u4eec\u8981\u5c06\u5976\u725b\u96c6\u5408\u8d77\u6765\uff0c\u5c06\u4ed6\u4eec\u8d76\u8fdb\u725b\u68da\uff0c\u4e3a\u5976\u725b\u6e05\u6d17\u4e73\u623f\u4ee5\u53ca\u4e00\u4e9b\u5176\u5b83\u5de5\u4f5c\u3002\u5c3d\u65e9\u5c06\u6240\u6709\u6742\u52a1\u5b8c\u6210\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837\u624d\u6709\u66f4\u591a\u65f6\u95f4\u6324\u51fa\u66f4\u591a\u7684\u725b\u5976\u3002\u5f53\u7136\uff0c\u6709\u4e9b\u6742\u52a1\u5fc5\u987b\u5728\u53e6\u4e00\u4e9b\u6742\u52a1\u5b8c\u6210\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u8fdb\u884c\u3002\u6bd4\u5982\uff1a\u53ea\u6709\u5c06\u5976\u725b\u8d76\u8fdb\u725b\u68da\u624d\u80fd\u5f00\u59cb\u4e3a\u5b83\u6e05\u6d17\u4e73\u623f\uff0c\u8fd8\u6709\u5728\u672a\u7ed9\u5976\u725b\u6e05\u6d17\u4e73\u623f\u4e4b\u524d\u4e0d\u80fd\u6324\u5976\u3002\u6211\u4eec\u628a\u8fd9\u4e9b\u5de5\u4f5c\u79f0\u4e3a\u5b8c\u6210\u672c\u9879\u5de5\u4f5c\u7684\u51c6\u5907\u5de5\u4f5c\u3002\u81f3\u5c11\u6709\u4e00\u9879\u6742\u52a1\u4e0d\u8981\u6c42\u6709\u51c6\u5907\u5de5\u4f5c\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u6700\u65e9\u7740\u624b\u5b8c\u6210\u7684\u5de5\u4f5c\uff0c\u6807\u8bb0\u4e3a\u6742\u52a11\u3002John\u6709\u9700\u8981\u5b8c\u6210\u7684n\u4e2a\u6742\u52a1\u7684\u6e05\u5355\uff0c\u5e76\u4e14\u8fd9\u4efd\u6e05\u5355\u662f\u6709\u4e00\u5b9a\u987a\u5e8f\u7684\uff0c\u6742\u52a1k(k>1)\u7684\u51c6\u5907\u5de5\u4f5c\u53ea\u53ef\u80fd\u5728\u6742\u52a11\u81f3k\u22121\u4e2d\u3002\n\n\u5199\u4e00\u4e2a\u7a0b\u5e8f\u4ece1\u5230n\u8bfb\u5165\u6bcf\u4e2a\u6742\u52a1\u7684\u5de5\u4f5c\u8bf4\u660e\u3002\u8ba1\u7b97\u51fa\u6240\u6709\u6742\u52a1\u90fd\u88ab\u5b8c\u6210\u7684\u6700\u77ed\u65f6\u95f4\u3002\u5f53\u7136\u4e92\u76f8\u6ca1\u6709\u5173\u7cfb\u7684\u6742\u52a1\u53ef\u4ee5\u540c\u65f6\u5de5\u4f5c\uff0c\u5e76\u4e14\uff0c\u4f60\u53ef\u4ee5\u5047\u5b9aJohn\u7684\u519c\u573a\u6709\u8db3\u591f\u591a\u7684\u5de5\u4eba\u6765\u540c\u65f6\u5b8c\u6210\u4efb\u610f\u591a\u9879\u4efb\u52a1\u3002\n\n# \u5206\u6790\uff1a\n\u6b64\u9898\u53ef\u4ee5\u4f7f\u7528\u62d3\u6251\u6392\u5e8f\u6765\u505a\uff1a\n- \u5f00\u6570\u7ec4\u8bb0\u5f55\u8282\u70b9\u7ed3\u675f\u4e0e\u5f00\u59cb\u65f6\u95f4\n- \u5165\u961f\u5217\u524d\u4e0d\u65ad\u66f4\u65b0\u8282\u70b9\u5f00\u59cb\u65f6\u95f4\n- \u51fa\u961f\u5217\u65f6\u66f4\u65b0\u8282\u70b9\u7ed3\u675f\u65f6\u95f4\n- \u6392\u5e8f\u540e\u9009\u6570\u7ec4\u6700\u5927\u503c\u8f93\u51fa\n## \u4e00\u5207\u90fd\u662f\u90a3\u4e48\u7684\u548c\u8c10\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u6709\u6ca1\u6709\u66f4\u7b80\uff08du\uff09\u5355\uff08liu\uff09\u7684\u505a\u6cd5\u5462\uff1f\n\n\u8003\u8651\u7684\u4efb\u52a1\u53ef\u4ee5\u540c\u65f6\u505a\uff0c\u6240\u4ee5\u4e00\u4e2a\u4efb\u52a1\u7684\u6700\u4f18\u65b9\u6848\u5c31\u662f\u7b49\u5230\u4ed6\u6700\u665a\u7684\u51c6\u5907\u5de5\u4f5c\u7ed3\u675f\u540e\u7d27\u63a5\u7740\u505a\u3002\u9898\u76ee\u4fdd\u8bc1\u6309\u987a\u5e8f\u7ed9\u51fa\uff0c\u6240\u4ee5\u76f4\u63a5\u53ef\u4ee5\u8fb9\u8bfb\u8fb9\u505a\u3002\n\n# [\u4ee3\u7801](https://blog.csdn.net/kkkksc03/article/details/83117703)",
        "postTime": 1539781614,
        "uid": 45475,
        "name": "ShineEternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "\u770b\u5230\u697c\u4e0b\u4e00\u5806dp\u548cspfa\u8ba9\u6211\u8fd9\u4e2a\u5b66\u56fe\u8bba\u7684\u5fc3\u4e2d\u5f88\u4e0d\u662f\u6ecb\u5473\u554a\n\n\u867d\u8bf4\u90fd\u80fd\u8fc7 \u4f46\u8fd9\u9898\u653e\u5728\u8f83\u590d\u6742\u56fe\u8bba\u6a21\u5757\u91cc\u7684\u539f\u56e0\n\n\u770b\u9898\u5e72\u4e2a\u4eba\u8ba4\u4e3a\u662f\u56e0\u4e3a\u8003\u7684\u662fAOV\u7f51\u4e2d\u7684\u5173\u952e\u8def\u5f84\u7b97\u6cd5\n\n\u6a21\u62df\u51fa\u5173\u952e\u8def\u5f84\u4e4b\u540e\u8ba1\u7b97\u8be5\u8def\u5f84\u6240\u82b1\u7684\u65f6\u95f4\u5c31\u662f\u9898\u76ee\u7b54\u6848\u4e86\n\n\u60f3\u8d21\u732e\u4e00\u5957\u6570\u636e\u7ed3\u6784\u4e66\u4e0a\u5173\u952e\u8def\u5f84\u7684\u4f2a\u4ee3\u7801\u6a21\u677f\n\nvoid FindInDegree(ALGraph G,int indegree[]) {\n\n/\\* \u6c42\u9876\u70b9\u7684\u5165\u5ea6\uff0c\u7b97\u6cd57.12\u30017.13\u8c03\u7528 \\*/\n\n```cpp\n    int i;\n    ArcNode *p;\n    for(i=0; i<G.vexnum; i++)\n        indegree[i]=0; /* \u8d4b\u521d\u503c */\n    for(i=0; i<G.vexnum; i++) {\n        p=G.vertices[i].firstarc;\n        while(p) {\n            indegree[p->adjvex]++;\n            p=p->nextarc;\n        }\n    }\n}\nStatus TopologicalOrder(ALGraph G,SqStack *T) {\n```\n/\\* \u7b97\u6cd57.13  \u6709\u5411\u7f51G\u91c7\u7528\u90bb\u63a5\u8868\u5b58\u50a8\u7ed3\u6784,\u6c42\u5404\u9876\u70b9\u4e8b\u4ef6\u7684\u6700\u65e9\u53d1\u751f\u65f6\u95f4ve \\*/\n/\\* (\u5168\u5c40\u53d8\u91cf)\u3002T\u4e3a\u62d3\u6251\u5e8f\u5217\u9876\u70b9\u6808,S\u4e3a\u96f6\u5165\u5ea6\u9876\u70b9\u6808\u3002\u82e5G\u65e0\u56de\u8def,\u5219\u7528\u6808T \\*/\n\n/\\* \u8fd4\u56deG\u7684\u4e00\u4e2a\u62d3\u6251\u5e8f\u5217,\u4e14\u51fd\u6570\u503c\u4e3aOK,\u5426\u5219\u4e3aERROR \\*/\n\n```cpp\n    int j,k,count,indegree[MAX_VERTEX_NUM];\n    SqStack S;\n    ArcNode *p;\n    FindInDegree(G,indegree);/*\u5bf9\u5404\u9876\u70b9\u6c42\u5165\u5ea6indegree[0..vernum-1] */\n    InitStack(&S); /* \u521d\u59cb\u5316\u6808 */\n    for(j=0; j<G.vexnum; ++j) /* \u5efa\u96f6\u5165\u5ea6\u9876\u70b9\u6808S */\n        if(!indegree[j])\n            Push(&S,j); /* \u5165\u5ea6\u4e3a0\u8005\u8fdb\u6808 */\n    InitStack(T); /* \u521d\u59cb\u5316\u62d3\u6251\u5e8f\u5217\u9876\u70b9\u6808 */\n    count=0; /* \u5bf9\u8f93\u51fa\u9876\u70b9\u8ba1\u6570 */\n    for(j=0; j<G.vexnum; ++j) /* \u521d\u59cb\u5316ve[]=0 (\u6700\u5c0f\u503c) */\n        ve[j]=0;\n    while(!StackEmpty(S)) {\n```\n/\\* \u6808\u4e0d\u7a7a \\*/\n```cpp\n        Pop(&S,&j);\n        Push(T,j); /* j\u53f7\u9876\u70b9\u5165T\u6808\u5e76\u8ba1\u6570 */\n        ++count;\n        for(p=G.vertices[j].firstarc; p; p=p->nextarc) {\n```\n/\\* \u5bf9j\u53f7\u9876\u70b9\u7684\u6bcf\u4e2a\u90bb\u63a5\u70b9\u7684\u5165\u5ea6\u51cf1 \\*/\n\n```cpp\n            k=p->adjvex;\n            if(--indegree[k]==0) /* \u82e5\u5165\u5ea6\u51cf\u4e3a0,\u5219\u5165\u6808 */\n                Push(&S,k);\n            if(ve[j]+*(p->info)>ve[k])\n                ve[k]=ve[j]+*(p->info);\n        }\n    }\n    if(count<G.vexnum) {\n        printf(\"\u6b64\u6709\u5411\u7f51\u6709\u56de\u8def\\n\");\n        return ERROR;\n    } else\n        return OK;\n}\nStatus CriticalPath(ALGraph G) {\n```\n/\\* \u7b97\u6cd57.14 G\u4e3a\u6709\u5411\u7f51,\u8f93\u51faG\u7684\u5404\u9879\u5173\u952e\u6d3b\u52a8 \\*/\n```cpp\n    int vl[MAX_VERTEX_NUM];\n    SqStack T;\n    int i,j,k,ee,el;\n    ArcNode *p;\n    char dut,tag;\n    if(!TopologicalOrder(G,&T)) /* \u4ea7\u751f\u6709\u5411\u73af */\n        return ERROR;\n    j=ve[0];\n    for(i=1; i<G.vexnum; i++) /* j=Max(ve[]) \u5b8c\u6210\u70b9\u7684\u503c */\n        if(ve[i]>j)\n            j=ve[i];\n    for(i=0; i<G.vexnum; i++) /* \u521d\u59cb\u5316\u9876\u70b9\u4e8b\u4ef6\u7684\u6700\u8fdf\u53d1\u751f\u65f6\u95f4(\u6700\u5927\u503c) */\n        vl[i]=j; /* \u5b8c\u6210\u70b9\u7684\u6700\u65e9\u53d1\u751f\u65f6\u95f4 */\n    while(!StackEmpty(T)) /* \u6309\u62d3\u6251\u9006\u5e8f\u6c42\u5404\u9876\u70b9\u7684vl\u503c */\n        for(Pop(&T,&j),p=G.vertices[j].firstarc; p; p=p->nextarc) {\n            k=p->adjvex;\n            dut=*(p->info); /* dut<j,k> */\n            if(vl[k]-dut<vl[j])\n                vl[j]=vl[k]-dut;\n        }\n    printf(\" j  k  dut  ee  el  tag\\n\");\n    for(j=0; j<G.vexnum; ++j) /* \u6c42ee,el\u548c\u5173\u952e\u6d3b\u52a8 */\n        for(p=G.vertices[j].firstarc; p; p=p->nextarc) {\n            k=p->adjvex;\n            dut=*(p->info);\n            ee=ve[j];\n            el=vl[k]-dut;\n            tag=(ee==el)?'*':' ';\n            printf(\"%2d %2d %3d %3d %3d    %c\\n\",j,k,dut,ee,el,tag); /* \u8f93\u51fa\u5173\u952e\u6d3b\u52a8 */\n        }\n    printf(\"\u5173\u952e\u6d3b\u52a8\u4e3a:\\n\");\n    for(j=0; j<G.vexnum; ++j) /* \u540c\u4e0a */\n        for(p=G.vertices[j].firstarc; p; p=p->nextarc) {\n            k=p->adjvex;\n            dut=*(p->info);\n            if(ve[j]==vl[k]-dut)\n                printf(\"%s\u2192%s\\n\",G.vertices[j].data,G.vertices[k].data); /* \u8f93\u51fa\u5173\u952e\u6d3b\u52a8 */\n        }\n    return OK;\n}\n```",
        "postTime": 1513666256,
        "uid": 64002,
        "name": "Gino_Hong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "**\n\u6211\u6ef4\u4e2a\u5929-> ->\u4ee3\u7801\u5199\u5b8c\u76f4\u63a5\u8fc7\u7f16\u8bd1  \u76f4\u63a5\u8fc7\u6837\u4f8b  \u76f4\u63a5AC\n\n\u8981\u4e0d\u8981\u8fd9\u4e48\u540a= =\n\n\u6839\u636e\u62d3\u6251\u5e8f\u7684\u601d\u60f3 \u5b83\u5fc5\u5b9a\u662f\u665a\u4e8e\u6240\u6709\u51c6\u5907\u5de5\u4f5c\u7684\n\n\u90a3\u4e48\u51c6\u5907\u5de5\u4f5c\u91cc\u9762\u6700\u665a\u5b8c\u6210\u65f6\u95f4\u5c31\u662f\u5b83\u6700\u65e9\u5f00\u59cb\u65f6\u95f4\n\n\u8fb9\u754c\u662f\u6ca1\u6709\u51c6\u5907\u5de5\u4f5c\u7684\u7684\u4efb\u52a1  \u5b83\u7684\u5b8c\u6210\u65f6\u95f4\u7b49\u4e8e\u8be5\u4efb\u52a1\u8017\u8d39\u65f6\u95f4\n\n\u7136\u540e\u90fd\u770b\u51fa\u6765\u4e86\u5427= =\u5c31\u662f\u4e2a\u8bb0\u5fc6\u5316\u800c\u5df2\n\n\u56e0\u4e3a\u5e76\u4e0d\u77e5\u9053\u54ea\u4e00\u4e2a\u662f\u6700\u540e\u5b8c\u6210\u7684  \u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u4efb\u52a1DP\u4e00\u6b21\n\n\u56e0\u4e3a\u6709\u8bb0\u5fc6\u5316  \u5e76\u4e0d\u7528\u62c5\u5fc3\u8fd9\u6837\u4f1a\u964d\u4f4e\u65f6\u95f4\u6548\u7387\n\n\u6700\u540e\u518d\u6311\u51fan\u4e2a\u91cc\u9762\u7684\u6700\u665a\u5b8c\u6210\u65f6\u95f4\n\n\u5c31\u662f\u7b54\u6848\u5566= =  \u4e0d\u8fc7\u6700\u957f\u8def\u597d\u50cf\u4e5f\u53ef\u4ee5  \u4f46\u662f\u5199\u4e0d\u6765QAQ\n\n\u5173\u4e8evector\u7684\u4f7f\u7528= =\u56e0\u4e3a\u6211\u627e\u4e0d\u5230\u4ec0\u4e48\u597d\u7684\u5b58\u8fb9\u7684\u65b9\u6cd5 \u76f4\u63a5\u5b58\u7238\u7238\u597d\u4e86= =\n\n**\n```cpp\n\n#include<vector>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int maxn=10000+10;\nvector<int>p[maxn];\n\nint n,t[maxn];\nvoid init_data()\n{\n    cin>>n;\n    for(int i=1,fa;i<=n;i++)\n    {\n        scanf(\"%*d%d\",t+i);\n        scanf(\"%d\",&fa);\n        while(fa)\n        {\n            p[i].push_back(fa);\n            scanf(\"%d\",&fa);\n        }\n    }\n}\n\nint dp[maxn];\nint f(int u)\n{\n    if(p[u].size()==0) return dp[u]=t[u];\n    if(dp[u]!=-1) return dp[u];\n    int l=p[u].size(),ft=0;\n    for(int i=0;i<l;i++)\n    {\n        ft=max(ft,f(p[u][i]));\n    }\n    return dp[u]=ft+t[u];\n}\n\nint main()\n{\n    init_data();\n    memset(dp,-1,sizeof(dp));\n    for(int i=1;i<=n;i++)\n      f(i);\n    int ans=0;\n    for(int i=1;i<=n;i++)\n      ans=max(ans,dp[i]);\n    printf(\"%d\",ans);\n    return 0;\n}\n\n\n```",
        "postTime": 1452242136,
        "uid": 11280,
        "name": "QWsin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "[\u9898\u76ee\u89c1\u6b64\u5904](https://www.luogu.org/problemnew/show/P1113)\n\n\u8fd9\u9898\u8bfb\u51e0\u904d\u9898\u5c31\u53ef\u4ee5\u63a8\u51fadp\u65b9\u7a0b\uff1a\n\nf[i]=a[i]+max(f[b[i][0]]...f[b[i][n]])\n\nf[i]\u662f\u7b2ci\u4e2a\u9879\u76ee\u7684\u5b8c\u6210\u65f6\u95f4\uff0c\n\na[i]\u662f\u7b2ci\u4e2a\u9879\u76ee\u6240\u9700\u65f6\u95f4\uff0c\n\nb[i][j]\u662f\u7b2ci\u4e2a\u9879\u76ee\u7684\u524d\u63d0\u9879\u76ee\uff0c\n\n\u4e8e\u662f\u6211\u5f97\u51fa\uff08\u522b\u7c98\uff0c\u4f1a\u7206\u5185\u5b58\uff0c\u800c\u4e14\u662f\u9519\u7684\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 10001\nint n,a[N],b[N][N],f[N];\ninline int read(){\n\tint X=0,w=0;\n\tchar ch=0;\n\twhile(!isdigit(ch)){\n\t\tw|=ch=='-';\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tX=(X<<3)+(X<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn w?-X:X;\n}\nint dp(int x){\n\tif(f[x]!=-1){\n\t\treturn f[x];\n\t}\n\tif(b[x][1]==0){\n\t\treturn f[x]=a[x];\n\t}\n\tfor(int i=1;1;i++){\n\t\tif(b[x][i]==0){\n\t\t\tbreak;\n\t\t}\n\t\tf[x]=max(f[x],dp(b[x][i]));\n\t}\n\tf[x]+=a[x];\n\treturn f[x];\n}\nint main(){\n\tmemset(f,-1,sizeof(f));\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\tint k=read();\n\t\ta[k]=read();\n\t\tint j=1;\n\t\twhile(1){\n\t\t\tb[k][j]=read();\n\t\t\tif(b[k][j]==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tj++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",dp(n));\n\treturn 0;\n}\n```\n\n\u56e0\u4e3a\u7206\u4e86\u5185\u5b58\uff0c\u6240\u4ee5\u6211\u53c8\u60f3\u4e86\u60f3\u600e\u6837\u4f18\u5316\uff0c\u4e8e\u662f\u5c31\u628ab[i][j]\u53bb\u6389\u4e86\u3002\n\n\u5f97\u51fa\u4ee5\u4e0b\u4ee3\u7801\uff08\u522b\u7c98\uff0c\u8fd8\u662f\u9519\u7684\uff09\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 10001\nint n,a[N],f[N];\ninline int read(){\n\tint X=0,w=0;\n\tchar ch=0;\n\twhile(!isdigit(ch)){\n\t\tw|=ch=='-';\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tX=(X<<3)+(X<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn w?-X:X;\n}\nint main(){\n\tmemset(f,0,sizeof(f));\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\tint k=read();\n\t\ta[k]=read();\n\t\tint x;\n\t\twhile(1){\n\t\t\tx=read();\n\t\t\tif(x==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tf[k]=max(f[k],f[x]);\n\t\t}\n\t\tf[k]+=a[k];\n\t}\n\tprintf(\"%d\\n\",f[m]);\n\treturn 0;\n}\n```\n\n\u4f46\u53ea\u5bf9\u4e861\u4e2a\u70b9\uff0c\u4e8e\u662f\u53d1\u73b0\n# \u7b2cm\u4e2a\u4e0d\u4e00\u5b9a\u6700\u540e\u624d\u5b8c\u6210\n\u6240\u4ee5\u53c8\u6539\u4e86\u6539\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 10001\nint n,a[N],f[N],ans=0;\ninline int read(){\n\tint X=0,w=0;\n\tchar ch=0;\n\twhile(!isdigit(ch)){\n\t\tw|=ch=='-';\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tX=(X<<3)+(X<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn w?-X:X;\n}\nint main(){\n\tmemset(f,0,sizeof(f));\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\tint k=read();\n\t\ta[k]=read();\n\t\tint x;\n\t\twhile(1){\n\t\t\tx=read();\n\t\t\tif(x==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tf[k]=max(f[k],f[x]);\n\t\t}\n\t\tf[k]+=a[k];\n\t\tans=max(ans,f[k]);\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1549529001,
        "uid": 157639,
        "name": "lxhhhh",
        "ccfLevel": 0,
        "title": "\u6d1b\u8c37P1113\u6742\u52a1"
    },
    {
        "content": "## \u6742\u52a1\u9898\u89e3\n\u542c\u8bf4\u8fd9\u9053\u9898\u5f88\u96be\uff0c\u4ec0\u4e48\u5173\u952e\u8def\u5f84\u7684\u849f\u84bb\u542c\u4e0d\u61c2.....\u9898\u89e3\u4e2d\u7684\u5176\u4ed6\u5947\u5947\u602a\u602a\u7684\u7b97\u6cd5\u849f\u84bb\u4e5f\u770b\u4e0d\u61c2.....\u53ea\u9700\u8981\u505a\u4e00\u904d\u7b80\u5355\u7684\u62d3\u6251\u6392\u5e8f\u5c31\u80fdAC\u4e86\uff0c\u5728\u505a\u7684\u65f6\u5019\u8fdb\u884c\u4e00\u5b9a\u7684\u5904\u7406\u5373\u53ef.\n\n\u6ca1\u9519\uff0c\u8fd9\u9053\u9898\u4e2d\u6bcf\u4e2a\u4efb\u52a1\u90fd\u662f\u6709\u5148\u540e\u987a\u5e8f\u7684\uff0c\u5373\u5b8c\u6210\u4e00\u6837\u4efb\u52a1\u624d\u80fd\u5b8c\u6210\u53e6\u5916\u4e00\u6837\u4efb\u52a1\uff0c\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u8054\u60f3\u5230\u62d3\u6251\u6392\u5e8f\uff0c\u5373\uff0c\u8ddf\u5267\u5b83\u4eec\u7684\u62d3\u6251\u5e8f\u53bb\u5b8c\u6210\u5373\u53ef.\n\n\u8fd9\u9053\u9898\u76ee\u5c31\u662f\u6c42\u7684\u662f\u5b8c\u6210\u4efb\u52a1\u6700\u77ed\u65f6\u95f4\uff0c\u6211\u4eec\u53ea\u8981\u5728\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d\u53ca\u65f6\u66f4\u65b0\u7ed3\u679c\u5373\u53ef.\n\n\u5177\u4f53\u505a\u6cd5\u5982\u4e0b\uff1a\n\u8ddf\u5267\u62d3\u6251\u7684\u5148\u540e\u987a\u5e8f\u8fdb\u884c\u5efa\u56fe\uff0c\u7531\u5148\u5b8c\u6210\u7684\u4efb\u52a1\u7f16\u53f7\u8fde\u5411\u672a\u5b8c\u6210\u7684\u4efb\u52a1\u7f16\u53f7\uff08emmmm\u4ee3\u7801\u6bd4\u8f83\u4e11\u5566\uff0cSTL+\u624b\u5199\u6df7\u7528\u7684\u5566\uff09\uff0c\u518d\u8ddf\u5267\u51fa\u5ea6\u4e3a0\u7684\u70b9\u8fde\u5411\u865a\u62df\u539f\u70b9n+1\uff08\u8fd9\u662f\u6211\u4eec\u81ea\u5df1\u8bbe\u7f6e\u7684\u70b9\uff09\uff0c\u8fb9\u6743\u4e3a0\uff0c\u8fd9\u6837\u6211\u4eec\u7edf\u8ba1\u7ed3\u679c\u65f6\u53ea\u8981\u8f93\u51fasum[i+1]\u5373\u53ef\uff0csum[i]\u8868\u793a\u5b8c\u6210\u4efb\u52a1i\u81f3\u5c11\u8981\u591a\u5c11\u65f6\u95f4.\n\n\u90a3\u4e48\uff0c\u5728\u62d3\u6251\u7684\u8fc7\u7a0b\u4e2d\uff0c\u82e5\u5f53\u524d\u7ed3\u70b9\u4e3atemp\uff0c\u62d3\u5c55\u7684\u7ed3\u70b9\u4e3anext\uff0c\u90a3\u4e48\u4e0d\u96be\u5f97\u51fa\uff1a\nsum[next]=max(sum[next],sum[temp]+Time[next]),\u5373\u82b1\u8d39\u7684\u65f6\u95f4\u4e3a\u4e0a\u4e00\u4e2a\u7ed3\u70b9\u7684\u4efb\u52a1\u52a0\u4e0a\u5f53\u524d\u65f6\u95f4\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5b8c\u6210\u7edf\u8ba1\u7b54\u6848\u7684\u8fc7\u7a0b.\n\n\u6211\u4f1a\u5728\u7a0b\u5e8f\u4e2d\u9002\u5f53\u4e0b\u4e00\u4e9b\u6ce8\u91ca\uff0c\u82e5\u6ca1\u6709\u770b\u61c2\u53ef\u4ee5\u5728\u8bc4\u8bba\u533a\u4e2d\u8bc4\u8bba.\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint q[10000000];\nint head=1,tail=0;\nint in[10000000];//\u5165\u8bfb\nint out[10000000];//\u51fa\u5ea6\nint sum[10000000];//\u7edf\u8ba1\u65f6\u95f4\nint Time[10000000];//\u6807\u8bb0\u4efb\u52a1\u65f6\u95f4\nvector<int>Map[1000000];//\u7528\u4e8e\u4ee3\u66ff\u90bb\u63a5\u8868\u7684\u5b58\u50a8\nint main()\n{\n\tios::sync_with_stdio(false);//\u8bfb\u5165\u4f18\u5316\n\tint n;\n\tcin>>n;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tint num,last;\n\t\tcin>>num>>Time[i];\n\t\twhile (cin>>last)//\u4e0d\u65ad\u5faa\u73af\u8bfb\u5165\n\t\t{\n\t\t\tif (!last) break;\n\t\t\tin[num]++;\n\t\t\tout[last]++;\n\t\t\tMap[last].push_back(num);//\u5efa\u56fe\n\t\t}\t\n\t}\t\n\tfor (int i=1;i<=n;i++)\n\t\tif (!in[i]) \n\t\t{\n\t\t\tq[++tail]=i;\n\t\t\tsum[i]=Time[i];\n\t\t}//\u5c06\u5165\u8bfb\u4e3a0\u7684\u70b9\u52a0\u5165\u961f\u5217\n\tfor (int i=1;i<=n;i++)\n\t\tif (!out[i])\n\t\t{\n\t\t\tMap[i].push_back(n+1);\n\t\t\tin[n+1]++;\n\t\t}//\u5efa\u7acb\u865a\u62df\u539f\u70b9\n\twhile (head<=tail)\n\t{\n\t\tint temp=q[head];head++;\n\t\tfor (int i=0;i<Map[temp].size();i++)\n\t\t{\n\t\t\tint next=Map[temp][i];\n\t\t\tin[next]--;\n\t\t\tif (!in[next]) q[++tail]=next;\n\t\t\tsum[next]=max(sum[temp]+Time[next],sum[next]);\n\t\t}\n\t}//\u4ee5\u4e0a\u4e3atopsort\u7684\u5168\u8fc7\u7a0b\n\tcout<<sum[n+1]<<endl;\n\treturn 0;\n} \n```",
        "postTime": 1532263037,
        "uid": 33243,
        "name": "\u5c0f\u5468\u732a\u732a",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "\u6a21\u62df\u8d5b\u8003\u4e86\u8fd9\u9898QAQ\n\n\u7528\u5230\u4e86\u62d3\u6251\u6392\u5e8f\u601d\u60f3\uff1b\n\n\u6bcf\u4e00\u4e2a\u5de5\u4f5c\u53ef\u4ee5\u5f00\u59cb\u7684\u524d\u63d0\u662f\u5b83\u7684\u524d\u671f\u5de5\u4f5c\u5fc5\u987b\u5168\u90e8\u5b8c\u6210\uff1b\n\n\u6240\u4ee5\uff0c \u53ea\u9700\u8981\u4ece\u5b83\u524d\u671f\u5de5\u4f5c\u7684\u65f6\u95f4\u4e2d\u53d6max\u52a0\u4e0a\u5b83\u7684\u65f6\u95f4\uff0c \u5c31\u53ef\u4ee5\u8f6c\u79fb\u5230\u5b83\uff1b\n\n\u7ec6\u8282\u90fd\u5728\u4ee3\u7801\u91cc\u4e86\uff1b\n\n```cpp\n#include <bits/stdc++.h>//\u61d2...\n\nusing namespace std;\n\nint n;\nint dp[10010];\nint rud[10010];//\u5165\u5ea6 \nint v[100010];//\u4ef7\u503c\nint ans;\n\nvector <int> net[10010];\n\ninline void Search(int cur)\n{\n\tfor(register int i = 0 ; i < net[cur].size() ; i ++)\n\t{\n\t\tint x = net[cur][i];\n\t\trud[x]--;\n\t\tdp[x] = max(dp[x], dp[cur] + v[x]);//\u72b6\u6001\u8f6c\u79fb \n\t\tans = max(ans, dp[x]);\n\t\tif(rud[x] == 0)\n\t\t{\n\t\t\t Search(x);\n\t\t}\n\t}\n}\n\nint main()\n{\n\tcin >> n;\n\t\n\tfor(register int i = 1 ; i <= n ; i ++)\n\t{\n\t\tint x;\n\t\tcin >> x;\n\t\tscanf(\"%d\", &v[i]);\n\t\tint y;\n\t\twhile(scanf(\"%d\", &y) != EOF)\n\t\t{\n\t\t\tif(y == 0) break;\n\t\t\trud[x]++;\n\t\t\tnet[y].push_back(x);\u5e72\u5b8cy\u540e\u53ef\u4ee5\u5f00\u59cbx \n\t\t}\n\t}\n\t\n\tdp[1] = v[1];//\u6ce8\u610f\uff01\uff01\uff01 \n\t\n\tSearch(1);//\u4ece\u7b2c\u4e00\u9879\u5f00\u59cb\u62d3\u6251\uff1b \n\t\n\tcout<<ans;\n\t\n\treturn 0;\n}\n```\n\u7adf\u7136\u8fd9\u9898\u53ea\u670960\u884c\uff1f\uff08\u6211\u4e0d\u662f\u538b\u884c\u9009\u624b\uff08\u9003.",
        "postTime": 1521890989,
        "uid": 56756,
        "name": "BriMon",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "\u5f00\u59cb\u5b8c\u6210\u8fd9\u9879\u5bb6\u52a1\u7684\u65f6\u95f4\u7b49\u4e8e\u9700\u8981\u5b8c\u6210\u5bb6\u52a1\u65f6\u95f4\u4e2d\u7684\u6700\u5927\u503c\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,work[10010]={0},len[10010]={0},a[10010][110]={0},sum[10010]={0},f[10010]={0};\n//f[i]\u4ee3\u8868\u505a\u5b8ci\u5bb6\u52a1\u7684\u6700\u5c0f\u503c\n//work\u4ee3\u8868\u5e8f\u53f7\n//len\u4ee3\u8868\u65f6\u95f4\n//a[i][j]\u4ee3\u8868j\u662fi\u7684\u57fa\u7840\n\nint wok(int k)\n{\n    int ans=0;\n    for(int i=1; i<=sum[k]; i++)\n      ans=max(ans,f[a[k][i]]);//\u53d6\u5f97\u6700\u5927\u503c\n    return ans+len[k];\n}\n\nvoid read()\n{\n    int x;\n    scanf(\"%d\",&n);//\u4e2a\u6570\n    for(int i=1; i<=n; i++)\n    {\n        scanf(\"%d%d\",&work[i],&len[i]);\n        scanf(\"%d\",&x);\n        while(x!=0)//\u8fd8\u6ca1\u7ed3\u675f\n        {\n            sum[i]++;//\u603b\u6570\n            a[i][sum[i]]=x;//\u5b58\u5165\u6570\u7ec4\u4e2d\n            scanf(\"%d\",&x);//\u7ee7\u7eed\u8f93\u5165\n        }\n    }\n}\n\nvoid write()\n{\n    int ans=0;\n    for(int i=1; i<=n; i++)\n      ans=max(ans,f[i]);//\u53d6\u6700\u5927\u503c\n    printf(\"%d \",ans);\n}\n\nint main()\n{\n    read();\n    for(int i=1; i<=n; i++)\n      f[i]=wok(i);\n    write();\n    return 0;\n}\n```",
        "postTime": 1512786829,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "0ms\n\u8feb\u771f\u94fe\u8868\n\n\u8db4\u3002\u770b\u6ce8\u91ca\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n#define MAXN 10001\n#define MAXM 1000001\n\ninline void read(int &x){\n    //\u8bfb\u5165\u4f18\u5316 \n    x=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9') ch=getchar();\n    while(ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n}\n\nstruct nico{\n    int to;\n    int next;\n} edge[MAXM];\n\nint head[MAXN],cnt_edge=1,n,f[MAXN];\n\nint lol,pre,ans;\n\nvoid add_edge(int x,int y){\n    //\u52a0\u8fb9 \n    edge[cnt_edge].next=head[x];\n    head[x]=cnt_edge;\n    edge[cnt_edge].to=y;\n    cnt_edge++;\n}\n\nint find(int x){\n    //\u627e\u5230\u6240\u6709\u51c6\u5907\u4e2d\u7528\u65f6\u6700\u957f\u7684\u4e00\u4e2a \n    if(edge[x].next) return max(f[edge[x].to],find(edge[x].next));\n    return f[edge[x].to];\n}\n\nint main(){\n    read(n);\n    for(int i=1;i<=n;i++){\n        read(lol);//\u9a97\u8f93\u5165lolololol \n        read(f[i]);//\u8f93\u5165\u5f53\u524d\u8282\u70b9\u6240\u7528\u65f6\u95f4 \n        read(pre);\n        while(pre){\n            //\u5faa\u73af\u8f93\u5165\u51c6\u5907\u8282\u70b9 \n            add_edge(i,pre);//\u4ee5\u94fe\u8868\u5f62\u5f0f\u5b58\u50a8\u6240\u6709\u51c6\u5907 \n            read(pre);\n        }\n    }\n    for(int i=1;i<=n;i++){\n        if(head[i]){\n            f[i]+=find(head[i]);//\u5f53\u524d\u8282\u70b9\u9700\u8981\u65f6\u95f4\u52a0\u4e0a\u51c6\u5907\u9700\u8981\u65f6\u95f4 \n        }\n        ans=max(ans,f[i]);//\u627e\u6700\u5927\u503c\u5373\u4e3a\u7b54\u6848 \n    }\n    printf(\"%d\\n\",ans);//\u8f93\u51fa \n    return 0;\n}\n```",
        "postTime": 1509414213,
        "uid": 37993,
        "name": "cat_yyy",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "\u6211\u6765\u53d1\u4e00\u4e2aDP\u7684\u9898\u89e3\u3002\u6839\u636e\u9898\u610f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e8b\u60c5\uff0c\u4ed6\u7684\u4f9d\u8d56\u90fd\u4e25\u683c\u5c0f\u4e8e\u4ed6\u672c\u8eab\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528dp[i]\u8868\u793a\u7b2ci\u4ef6\u4e8b\u60c5\u6700\u65e9\u53ef\u4ee5\u5728\u4ec0\u4e48\u65f6\u5019\u505a\u5b8c\uff0c\u8f6c\u79fb\u4e3adp[i]=max(dp[j])+time[i]\uff0c\u5176\u4e2dj\u662fi\u7684\u6240\u6709\u4f9d\u8d56\u9879\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int maxn=10100;\nint n,value,number,max,to,f[maxn],num;\nint main()\n{\n    scanf(\"%d\",&n);\n    memset(f,0,sizeof(f));\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&num);\n        scanf(\"%d\",&value);\n        max=0;\n        scanf(\"%d\",&to);\n        while(to)\n        {\n            if(f[to]>max) max=f[to];\n            scanf(\"%d\",&to);\n        }\n        f[i]=max+value;\n    }\n    max=0;\n    for(int i=1;i<=n;i++)\n        if(f[i]>max)\n            max=f[i];\n    printf(\"%d\\n\",max);\n    return 0;\n}\n```\n\u5728\u67d0\u6b21\u6a21\u62df\u8d5b\u4e2d\u9047\u5230\u5230\u8fd9\u9053\u9898\uff0c\u6309\u7167\u5f53\u65f6\u7684\u72b6\u51b5\uff0c\u4f3c\u4e4e\u8fd9\u4e2adp\u6bd4\u62d3\u6251\u6392\u5e8f\u5feb\u4e00\u70b9\uff0c\u7136\u800c\u6211\u5e76\u4e0d\u592a\u4f1a\u8bc1\u660e\u8fd9\u4e2a\u73a9\u610f\u7684\u590d\u6742\u5ea6\u662f\u591a\u5c11\uff0c\u5404\u4f4d\u770b\u5b98\u795e\u7287\u53ef\u4ee5\u81ea\u884c\u8111\u8865\u3002\u3002\u3002\n\n\u6700\u540e sro tyc\u795e\u7287\n",
        "postTime": 1479129282,
        "uid": 18058,
        "name": "Silicon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "\u6c42\u8981\u628a\u6240\u6709\u6742\u7269\u505a\u5b8c\u7684 \u6700\u5c0f\u7684\u65f6\u95f4\uff0c\u6240\u4ee5\u8981\u8dd1\u6700\u957f\u8def\uff0c\u56e0\u4e3a\u662f\u505a\u5b8c\u6240\u6709\u6742\u7269\uff0c\u6bcf\u4e00\u4e2a\u70b9\u90fd\u8981\u505a\u3002\n\n\n\nAC\u4ee3\u7801\uff1a\n\n```delphi\n\nprogram exam1;\nvar map:array[1..1000000,1..3]of longint;\nvar f:array[1..10000]of longint;\nvar v:array[1..10000]of boolean;\nvar h:array[1..1000000]of longint;\nvar first:array[1..10000]of longint;\nvar bb:array[1..10000]of longint;\nvar tot,i,j,n,x,y,z,l,r,q,tt,qi,zhong,ans,len,num:longint;\nprocedure insert(a,b,c:longint);\nbegin\ninc(tot);\nmap[tot,1]:=b;\nmap[tot,2]:=c;\nmap[tot,3]:=first[a];\nfirst[a]:=tot;\nend;\nprocedure spfa(ss:longint);\nbegin\n//for i:=1 to n do\n//if i<>ss then f[i]:=100000000;\nfillchar(h,sizeof(h),0);\nl:=0;\nr:=1;\nh[1]:=ss;\nv[ss]:=true;\nwhile l<r do\nbegin\ninc(l);\nq:=h[l];\ntt:=first[q];\nwhile tt<>0 do\nbegin\nif f[map[tt,1]]<f[q]+map[tt,2] then\nbegin\nf[map[tt,1]]:=f[q]+map[tt,2];\nif f[map[tt,1]]>ans then\nans:=f[map[tt,1]];\nif not v[map[tt,1]] then\nbegin\ninc(r);\nh[r]:=map[tt,1];\nv[map[tt,1]]:=true;\nend;\nend;\ntt:=map[tt,3];\nend;\nv[q]:=false;\nend;\nend;\n\nprocedure search;\nvar ii:longint;\nbegin\nfor ii:=1 to n do\nif f[ii]>ans then\nans:=f[ii];\nend;\n\nbegin\nread(n);\nfor i:=1 to n do\nbegin\nread(zhong);\nread(len);\nread(qi);\nif qi=0 then\nbegin\ninc(num);\nbb[num]:=zhong;\nf[zhong]:=len;\nend\nelse\nwhile qi<>0 do\nbegin\ninsert(qi,zhong,len);\nread(qi);\nend;\nend;\n\n//for i:=1 to n do\n//if f[i]=0 then f[i]:=100000000;\nfor i:=1 to num do\nspfa(bb[i]);\n//search;\nwriteln(ans);\nend.\n\n```\n",
        "postTime": 1443194011,
        "uid": 2266,
        "name": "\u51ef\u7279\u7433",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "\u6700\u5927\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u0398(n\\*100)\uff0c\u7edd\u5bf9\u77ac\u95f4\u51fa\u89e3\u3002\u52a8\u6001\u89c4\u5212\uff0c\u67d0\u9879\u5de5\u4f5c\u5b8c\u6210\u7684\u6700\u65e9\u65f6\u95f4\u4e3a\u5b83\u6240\u9700\u8981\u7684\u5de5\u4f5c\u5b8c\u6210\u65f6\u95f4\u6700\u957f\u7684\u4e00\u4e2a\u52a0\u4e0a\u5b83\u81ea\u5df1\u6240\u7528\u7684\u65f6\u95f4\n\n```delphi\n\nvar\n    a:array[1..10000] of longint;\n    i,j,k,l,m,n:longint;\nbegin\n    readln(n);\n    fillchar(a,sizeof(a),0);\n    m:=0;\n    for i:=1 to n do begin\n        read(k,l,j);\n        k:=0;\n        while j<>0 do begin\n            if a[j]>k then\n                k:=a[j];\n            read(j);\n        end;\n        a[i]:=k+l;\n        if a[i]>m then m:=a[i];\n    end;\n    write(m);\nend.\n\n```",
        "postTime": 1439434587,
        "uid": 3911,
        "name": "Skywalker_David",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e0d\u96be\uff0c\u4e3b\u8981\u662f\u5efa\u7acb\u76f8\u5e94\u7684\u6a21\u578b\uff08\u56fe\uff09\u4ee5\u5f97\u51fa\u89e3\u9898\u65b9\u6cd5\u3002\n\n```delphi\n\nvar     \n  n:longint;\n  f:array[0..10000] of longint;\n  i,s,h,t,max:longint;\n  ans:longint;\nbegin\n  readln(n); \n  for i:=1 to n do\n    begin\n    read(s); //\u8bfb\u5165\u3002s\u4e3a\u5f53\u524d\u5904\u7406\u9879\u7f16\u53f7\uff0ct\u4e3a\u5f53\u524d\u5904\u7406\u9879\u8017\u65f6\u3002\n    read(t);\n    read(h);\n    max:=0;\n    while h>0 do\n      begin\n      if f[h]>max then max:=f[h]; //\u4ece\u5f53\u524d\u5904\u7406\u9879\u5fc5\u987b\u5b8c\u6210\u7684\u4efb\u52a1\u4e2d\u5bfb\u627e\u8017\u65f6\u6700\u5927\u7684\u4e00\u9879\u3002\u6b64\u65f6\u9ed8\u8ba4\u5df2\u7ecf\u628a\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u7684\u9879\u76ee\u540c\u65f6\u8fdb\u884c\uff0c\u6240\u5f97\u603b\u548c\u7ed3\u679c\u4e3a\u6700\u5c0f\u3002\n      read(h);\n      end;\n    readln;\n    f[s]:=max+t; //\u52a0\u4e0a\u5f53\u524d\u5904\u7406\u9879\u7684\u8017\u65f6\n    if f[s]>ans then ans:=f[s];\n    end;\n  writeln(ans);\nend.\n\n```",
        "postTime": 1382110937,
        "uid": 15,
        "name": "\u8def\u8fb9\u7684\u6c34\u6c9f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "\u672c\u4ee5\u4e3a\u6211\u5df2\u7ecf\u6ca6\u843d\u5230\u666e\u53ca\u7684\u9898\u76ee\u90fd\u4e0d\u4f1a\u505a\u4e86\uff0c\u5230\u590d\u8d5b\u53ea\u80fd\u6c34\u6c34\u5206\u4e86\uff0c\u6ca1\u60f3\u5230\uff0c\u8fd9\u9898\u7ed9\u6211\u5e26\u6765\u4e86\u4fe1\u5fc3\uff01\n\n\u8fd9\u9898\u662f\u6211\u4e13\u95e8\u627e\u56fe\u8bba\u7684\u9898\u505a\u7684\u65f6\u5019\u627e\u5230\u7684\uff0c\u5f53\u7136\uff0c\u4e0d\u5f97\u4e0d\u627f\u8ba4\u7684\u662f\uff0c\u6211\u662f\u6309\u7167\u96be\u5ea6\u7531\u7b80\u5230\u7e41\u2026\u2026\u8fd9\u9898\u8c8c\u4f3c\u662f\u5f88\u7b80\u5355\u7684\u90a3\u79cd\u2026\u2026\n\n\u6211\u4e00\u770b\u5230\u8fd9\u9898\u9898\u76ee\uff0c\u9996\u5148\u7ed9\u6211\u5e26\u6765\u7684\u662f\u548c\u6b63\u5e38\u56fe\u8bba\u9898\u7c7b\u4f3c\u7684\u611f\u89c9\uff0c\u4f30\u8ba1\u597d\u6b79\u8981\u767e\u884c\u4ee3\u7801\u5de6\u53f3\uff0c\u4f46\u662f\uff0c\u539f\u8c05\u6211\u662f\u4e2a\u849f\u84bb\uff0c\u6ca1\u6709\u90a3\u4e48\u5389\u5bb3\u53ef\u4ee5\u7801\u767e\u884c\u4ee3\u7801\u7684\u5b9e\u529b\u3002\n\n\u90a3\u4e48\uff0c\u5148\u8d34\u4e0a\u6211\u7684\u6c34\u9898\u4ee3\u7801\uff0c\u7136\u540e\u5728\u8bb2\u89e3\u2014\u2014\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,x,y,i,j,k;\nint f[10001][10001];\nint d[10001],dd[10001];\nunsigned long long ans=0;\nvoid dfs(int x)\n{\n    if(ans<d[x])ans=d[x];\n    for(int i=1;i<=f[x][0];i++)\n    {\n        if(d[f[x][i]]<d[x]+dd[f[x][i]]&f[x][i]!=x)\n        {\n            d[f[x][i]]=d[x]+dd[f[x][i]];\n            dfs(f[x][i]);\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&x,&dd[i]);\n        scanf(\"%d\",&x);\n        while(x!=0) {f[x][++f[x][0]]=i;scanf(\"%d\",&x);}\n    }\n    d[1]=dd[1];dfs(1);\n    cout<<ans<<endl;\n    return 0;\n}\n```\n\u4ee3\u7801\u8d34\u51fa\u6765\u4e4b\u540e\uff0c\u6211\u5fc5\u987b\u6307\u660e\u90a3\u4e48\u51e0\u70b9\u2026\u2026\n1.\u80fd\u6c34\u8fc7\u8fd9\u9898\u4f30\u8ba1\u662f\u6570\u636e\u592a\u6c34\u4e86\uff0c\u5982\u679c\u662f\u4e00\u76f4\u4f38\u4e0b\u53bb\u7684\u4e00\u68f5\u6811\u7684\u8bdd\u2026\u2026\u54b3\u54b3\uff0c\u6211\u5f88\u6709\u81ea\u77e5\u4e4b\u660e\u7684\u77e5\u9053\u6211\u8fd9\u80af\u5b9a\u4f1a\u7206\u7684\u3002\n\n2.\u4e2a\u4eba\u7f16\u7a0b\u6c34\u5e73\u5f88\u4e00\u822c\uff0c\u6570\u7ec4\u540d\u5565\u7684\u90fd\u5f88\u968f\u610f\u7684\uff0c\u4e0d\u8981\u5728\u610fdd\u8fd9\u4e9b\u6570\u7ec4\u540d\u3002\n\n\u7136\u540e\u8bb2\u89e3\uff1a\n\n\u539f\u7406\u5c31\u662f\uff0c\u4f9d\u9898\u610f\u5f97\uff0c1\u53ef\u4ee5\u770b\u505a\u8be5\u5b50\u6811\u7684\u6839\u8282\u70b9\uff0c\u7136\u540edfs\u8d70\u8d77\uff0c\u7b97\u51fa\u6bcf\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff08\u51c6\u786e\u70b9\u8bf4\u6cbf\u9014\u7684\u90fd\u7b97\u4e86\u4e2a\u904d\uff09\uff0c\u7136\u540e\u4e00\u8def\u90fd\u66f4\u65b0\u7b54\u6848\uff0c\u6700\u540e\u8f93\u51fa\u3002\n\n\u6c34\u5427\uff1f\u6211\u4e5f\u8fd9\u4e48\u89c9\u5f97\uff0c\u867d\u7136\u6c34\u4f46\u662f\u6700\u540e\u770b\u5230AC\u4e86\u8fd8\u662f\u597d\u5f00\u5fc3\u8bf6~\n",
        "postTime": 1508662139,
        "uid": 49357,
        "name": "_\u65e0v\u540d_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "\u770b\u5230\u524d\u9762\u5f88\u591a\u4eba\u7528\u4e86\u62d3\u6251\u6392\u5e8f\uff0c\u5176\u5b9e\u5b8c\u5168\u4e0d\u7528\uff0c\u6392\u4e86\u56e0\u4e3a\u5df2\u7ecf\u6392\u597d\u4e86\u3002\u3002\n\n**\u6742\u52a1k(k>1)\u7684\u51c6\u5907\u5de5\u4f5c\u53ea\u53ef\u80fd\u5728\u6742\u52a11..k-1\u4e2d**\n\n\u5b8c\u5168\u662f\u9012\u63a8\uff0c\u6700\u540e\u6ce8\u610f\u7b54\u6848\u4e0d\u662ff[n]\u800c\u662ff[1]~f[n]\u7684\u6700\u5927\u503c\n\n```cpp\n#include<cstdio>\nusing namespace std;\nint f[10001]={0};\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i)\n    {\n        int x,t,max=0;\n        scanf(\"%*d%d%d\",&t,&x);\n        while(x!=0)\n        {\n            max=f[x]>max?f[x]:max;\n            scanf(\"%d\",&x);\n        }\n        f[i]=t+max;\n    }\n    int max=0;\n    for(int i=1;i<=n;++i)\n        max=f[i]>max?f[i]:max;\n    printf(\"%d\",max);\n    return 0;\n}\n```",
        "postTime": 1501067085,
        "uid": 8425,
        "name": "Rainey",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "\u6c34\u9898\u4e00\u9053\n\n\u7528f[i]\u8868\u793a\u5b8c\u6210\u7b2ci\u4ef6\u4efb\u52a1\u6700\u65e9\u65f6\u95f4\n\n\u7136\u540e\u6240\u6709f[i]\u4e2d\u6700\u5927\u7684\u5c31\u662f\u5b8c\u6210\u6240\u6709\u4efb\u52a1\u7684\u6700\u5c11\u65f6\u95f4\n\n\u4e0d\u8fc7\u6211\u4ee3\u7801\u662f\u4e0d\u662f\u77ed\u4e86\u70b9\u3002\u3002\u3002\uff08\u8ddf\u697c\u4e0b\u7684\u6bd4\u8d77\u6765\uff09\n\n```cpp\n#include <bits/stdc++.h>//\u5077\u61d2\u4e13\u7528\u5305\nusing namespace std;\nint f[10005], n, k, ans, t;//ans\u4fdd\u5b58\u7b54\u6848\uff08\u4e0d\u8bf4\u4e5f\u77e5\u9053= =\uff09\nint main(){\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; i++){\n        scanf(\"%d%d\", &k, &t);//\u5176\u5b9e\u8fd9\u4e2ak\u5e76\u6ca1\u6709\u4ec0\u4e48\u5375\u7528\n        while(scanf(\"%d\", &k) && k)//\u5f53k\u7b49\u4e8e0\u5c31\u4f1a\u8df3\u51fa\u5faa\u73af\n            f[i] = max(f[k], f[i]);//\u4ece\u8fd9\u4ef6\u4e8b\u6240\u6709\u7684\u524d\u63d0\u4e2d\u627e\u5230\u4e00\u4e2a\u6700\u8fdf\u5b8c\u6210\u7684\uff0c\u8fd9\u5c31\u662f\u8fd9\u4ef6\u4e8b\u7684\u6700\u65e9\u8d77\u59cb\u65f6\u95f4\n        f[i] += t;//\u7136\u540e\u52a0\u4e0a\u5b8c\u6210\u8fd9\u4ef6\u4e8b\u6240\u9700\u8981\u7684\u65f6\u95f4\u5c31\u662f\u8fd9\u4ef6\u4e8b\u6700\u65e9\u5b8c\u6210\u7684\u65f6\u95f4\n        ans = max(ans, f[i]);//\u7edf\u8ba1\u7b54\u6848\n    }\n    printf(\"%d\", ans);\n}\n```\n\u5b8c\u7f8eAC\uff0c\u4e00\u6b21\u8fc7\n",
        "postTime": 1485151417,
        "uid": 33729,
        "name": "SW_Wind",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "\u795e\u5947\u7684\u89e3\u6cd5\u3002\u3002\n\n\u8bfb\u5165\u65f6\u8bb0\u5f55\u4e0b\u6bcf\u4ef6\u4e8b\u6709\u51e0\u4e2a\u5148\u51b3\u6761\u4ef6\u3001\u662f\u5426\u6ca1\u6709\u5148\u51b3\u6761\u4ef6\u3001\u662f\u54ea\u51e0\u4ef6\u4e8b\u7684\u5148\u51b3\u6761\u4ef6\uff08\u7528\u56fe\u8bb0\u5f55\uff0cvector\uff09\uff1b\u8bfb\u5165\u5b8c\u4e4b\u540e\u628a\u6240\u6709\u6ca1\u6709\u5148\u51b3\u6761\u4ef6\u7684\u4e8b\u653e\u5165\u4e00\u4e2a\u5806\uff0c\u4ee5\u5b8c\u6210\u65f6\u95f4\u4e3a\u6bd4\u8f83\u5927\u5c0f\u7684\u6807\u51c6\uff0c\u5b8c\u6210\u65e9\u7684\u5728\u524d\u9762\uff1b\u4e4b\u540e\u6bcf\u6b21\u4ece\u5806\u9876\u53d6\u51fa\u4e00\u4e2a\u5143\u7d20\uff0c\u628a\u9700\u8981\u5b83\u4f5c\u4e3a\u5148\u51b3\u6761\u4ef6\u7684\u4e8b\u7684\u5148\u51b3\u6761\u4ef6\u4e2a\u6570\u90fd-1\uff0c\u5982\u679c\u4e3a\u96f6\u5c31\u5165\u961f\uff0c\u5b8c\u6210\u65f6\u95f4\u4e3a\u5f53\u524d\u65f6\u95f4\uff0b\u8be5\u4e8b\u6d88\u8017\u7684\u65f6\u95f4\uff0c\u76f4\u5230\u5806\u4e3a\u7a7a\u4e3a\u6b62\uff0c\u6700\u540e\u4e00\u4ef6\u4e8b\u7684\u65f6\u95f4\u5c31\u662f\u7b54\u6848\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<queue>\n#include<vector>\nusing namespace std;\nint n,i,j,len[100001],need[100001],hand[100001],now;//need\uff1a\u5148\u51b3\u6761\u4ef6\u4e2a\u6570\uff1bhand\uff1a\u662f\u5426\u6ca1\u6709\u5148\u51b3\u6761\u4ef6 \nstruct work\n{\n    int num,tm;//num\u4e3a\u7f16\u53f7\uff0ctm\u4e3a\u6d88\u8017\u7684\u65f6\u95f4 \n    bool operator <(const work&a)const\n    {\n        return tm>a.tm;//priority_queue\u9ed8\u8ba4\u4e3a\u5927\u6839\u5806\uff0c\u800c\u6b64\u9898\u9700\u8981\u5c0f\u6839\u5806\uff0c\u6240\u4ee5\u5c0f\u4e8e\u5b9a\u4e49\u4e3a\u5927\u4e8e \n    }\n};\npriority_queue<work> q;\nvector<int> t[100001];\nint main()\n{\n    cin>>n;\n    for(i=1;i<=n;i++)\n    {\n        cin>>now>>len[i]>>j;\n        while(j!=0)\n        {\n            hand[i]=1;\n            need[i]++;\n            t[j].push_back(i);\n            cin>>j;\n        }\n    }\n    for(i=1;i<=n;i++)\n    {\n        if(!hand[i])\n          q.push((work){i,len[i]});\n    }\n    work k;\n    while(!q.empty())\n    {\n        k=q.top();q.pop();now=k.tm;//now\u4e3a\u5f53\u524d\u65f6\u95f4\uff0ck\u4e3a\u5f53\u524d\u5b8c\u6210\u7684\u4e8b \n        for(i=0;i<t[k.num].size();i++)\n        {\n            need[t[k.num][i]]--;\n            if(need[t[k.num][i]]==0)\n              q.push((work){t[k.num][i],now+len[t[k.num][i]]});\n        }\n    }\n    cout<<now;\n    return 0;\n}\n```",
        "postTime": 1483780237,
        "uid": 9517,
        "name": "a2956331800",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "\u636e\u8bf4\u6709\u4eba\u7528C\u5199\u4e86\u62d3\u6251\u6392\u5e8f\u3002\n\n\u672c\u4eba\u51b3\u5b9a\u653e\u4e00\u4e2apascal\u7248\u7684\u3002\n\n```cpp\nvar ut,alt,temp,first,last,r:array [1..10000] of longint;\nnext,en:array [1..1000000] of longint;\ntop,tot,i,j,n,x,ma:longint;\nprocedure add(x,y:longint);\nbegin\n  inc(tot);\n  if first[x]=0 then first[x]:=tot\n  else next[last[x]]:=tot;\n  last[x]:=tot;\n  en[tot]:=y;\nend;//\u4e00\u4e07\u4e2a\u70b9\uff0c\u90bb\u63a5\u77e9\u9635\u4e0d\u4f1a\u7206\u5185\u5b58\u5417\uff1f\nfunction max(a,b:longint):longint;\nbegin\n  if a>b then exit(a);\n  exit(b);\nend;\nprocedure push(x:longint);\nbegin\n  inc(top);\n  temp[top]:=x;\nend;\nfunction pop:longint;\nbegin\n  pop:=temp[top];\n  dec(top);\nend;\nbegin\n  read(n);\n  for i:=1 to n do\n  begin\n    read(x);\n    read(ut[i],x);\n    if x=0 then push(i);\n    while x>0 do\n    begin\n      add(x,i);\n      inc(r[i]);\n      read(x);\n    end;\n  end;\n  while top>0 do\n  begin\n    x:=pop;\n    alt[x]:=alt[x]+ut[x];\n    i:=first[x];\n    while i>0 do\n    begin\n      alt[en[i]]:=max(alt[en[i]],alt[x]);//\u9047\u5230\u5b83\u4e00\u6b21\u5c31\u66f4\u65b0\u4e00\u6b21\n      dec(r[en[i]]);\n      if r[en[i]]=0 then push(en[i]);\n      i:=next[i];\n    end;\n  end;\n  for i:=1 to n do\n  if alt[i]>ma then ma:=alt[i];//\u627e\u6700\u5927\u503c\n  write(ma);\nend.\n```",
        "postTime": 1469678982,
        "uid": 13940,
        "name": "pupuvovovovovo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    },
    {
        "content": "\u6211\u7528\u4e86\u4e00\u79cd\u6700\u7b28\u7684\u65b9\u6cd5\u3002\u3002\u3002\u76f4\u63a5\u4e0a\u62d3\u6251/(\u3112o\u3112)/~~\n\n\u8fd8\u5947\u602a\u7684WA\u4e86QAQ\n\n\u540e\u6765\u53d1\u73b0\u9700\u8bb0\u5f55\u5728\u505a\u8fd9\u4e2a\u5de5\u4f5c\u4e4b\u524d\u7684\u6700\u5c0f\u7684\u6700\u5927\u65f6\u95f4\u3002\n\n\u800c\u4e0d\u662f\u7ecf\u8fc7\u6700\u591a\u51c6\u5907\u5de5\u4f5c\u7684\u65f6\u95f4\u3002\u3002\u3002\u3002\n\n\nPS:\u5e76\u4e0d\u77e5\u9053\u9898\u76ee\u4e2d\u7684\u5de5\u4f5c\u5e8f\u53f7\u6709\u4ec0\u4e48\u5375\u7528\n\n```cpp\n(\n#include<stdio.h>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nint n,id[10005],t[10005],x,q[100005][3],l,r,d[10005],c[100005];\nvector <int>a[10005];\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&id[i]);\n        scanf(\"%d\",&t[i]);\n        scanf(\"%d\",&x);\n        while(x)\n        {\n            a[x].push_back(i);\n            d[i]++;\n            scanf(\"%d\",&x);\n        }\n    }\n    l=1;\n    for (int i=1;i<=n;i++)\n        if (!d[i])\n            r++,q[r][1]=i,q[r][2]=t[i];\n    while(r<n)\n    {\n        for (int i=0;i<a[q[l][1]].size();i++)\n        {\n            d[a[q[l][1]][i]]--;\n            if (q[l][2]>c[a[q[l][1]][i]])\n                c[a[q[l][1]][i]]=q[l][2];\n            if (!d[a[q[l][1]][i]])\n            {\n                r++;\n                q[r][1]=a[q[l][1]][i];\n                q[r][2]=c[a[q[l][1]][i]]+t[a[q[l][1]][i]];\n            }\n        }\n        l++;\n    }\n    int ans=0;\n    for (int i=1;i<=n;i++)\n        ans=max(ans,q[i][2]);\n    printf(\"%d\\n\",ans);\n    //while(1);\n    return 0;\n}            \n)\n```\uff08c/c++\uff09\n",
        "postTime": 1456723027,
        "uid": 14615,
        "name": "fltflt1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1113 \u3010\u6742\u52a1\u3011"
    }
]