[
    {
        "content": "//\u849f\u84bbsxz\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\n\n//\u548c\u5927\u4f6c\u4eec\u8fd8\u6709\u5f88\u5927\u5dee\u8ddd\n\n//\u819c\u62dc\u697c\u4e0b\u5b88\u671b\u5927\u795e\n\n\n\n\u6211\u4f3c\u4e4e\u4e5f\u6709\u51e0\u4e2a\u5b9a\u7406\u8981\u8bc1\u660e\uff1a\n\n#### 1.\u5224\u5b9a\u8fb9x\uf0e0y\u662f\u5426\u53ef\u80fd\u5728\u6700\u5c0f\u5272\u4e2d \uff08\u6700\u5c0f\u5272\u53ef\u884c\u8fb9\uff09\n\n  \u5145\u8981\u6761\u4ef6\uff1a\n  \n\u3000\u30001.\u6ee1\u6d41\u3002\n  \n\u3000\u30002.\u5728\u6b8b\u4f59\u7f51\u7edc\u4e2d\u627e\u4e0d\u5230x\u5230y\u7684\u8def\u5f84\u3002\uff08**\u6b63\u5411\u5f27\u90fd\u4e0d\u884c\uff01**\uff09\n \n  \u4e5f\u5c31\u662f\u697c\u4e0b\u5927\u795e\u76842\n  \n  \u5f88\u597d\u7406\u89e3\uff0c\u5982\u679c\u8fd8\u80fd\u627e\u5230\uff0c\u90a3\u4e48\u780d\u4e86\u5b83\u4e5f\u6ca1\u4ec0\u4e48\u7528\n  \n  \u5982\u679c\u6b63\u5411\u5f27\u6ca1\u6d41\u6ee1\uff0c\u90a3\u4e48\u80af\u5b9a\u4e0d\u662f\u6700\u5c0f\u5272\uff08\u53ef\u4ee5\u627e\u5230\u53e6\u4e00\u6761\u66f4\u597d\u9650\u5236\u6d41\u91cf\u7684\u8fb9\uff09\n  \n  \u53ea\u6709\u6ee1\u6d41\u624d\u80fd\u8ba9\u6b63\u5411\u5f27\u7b49\u4e8e0\uff0c\u624d\u6709\u4e0d\u80fd\u627e\u5230\u7684\u6761\u4ef6\n  \n  \u56e0\u6b64\uff0c**\u5728\u7b97\u6cd5\u4f53\u73b0\u4e2d\uff0c\u4ed6\u4eec\u4e24\u4e2a\u5fc5\u5b9a\u53ea\u80fd\u4e0d\u5c5e\u4e8e\u4e00\u4e2aSCC\u624d\u80fd\u5728\u6700\u5c0f\u5272\u4e2d**\n  \n------------\n\n#### 2.\u5224\u5b9a\u8fb9x\uf0e0y\u662f\u5426\u5fc5\u7136\u5728\u6700\u5c0f\u5272\u4e2d\n  \uff08\u6700\u5c0f\u5272\u5fc5\u987b\u8fb9\uff09\n    \n  \u5145\u8981\u6761\u4ef6\uff1a\n   \n\u3000\u30001.\u6ee1\u6d41\u3002\n  \n\u3000\u30002.\u6b8b\u4f59\u7f51\u7edc\u4e2d\u6e90\u70b9\u80fd\u5230\u5165\u70b9\uff0c\u51fa\u70b9\u80fd\u5230\u6c47\u70b9\u3002\n  \n  \u82e5\u6ee1\u6d41\u4f46\u5728\u6b8b\u4f59\u7f51\u7edc\u4e2d\u6e90\u70b9\u4e0d\u80fd\u5230\u5165\u70b9\u6216\u51fa\u70b9\u4e0d\u80fd\u5230\u6c47\u70b9\uff0c\n  \n  \u90a3\u4e48\u5728\u6bcf\u6761\u5355\u72ec\u8def\u5f84\u4e0a\u4e00\u5b9a\u90fd\u5b58\u5728\u4e00\u6761\u6ee1\u8db3\u6700\u5c0f\u5272\u53ef\u884c\u8fb9\u7684\u8fb9\n  \n  \uff08\u4e00\u6761\u5bb9\u91cf\u4e3a0\u7684\u6b63\u5411\u5f27\u963b\u65ad\u8def\u5f84\u4e14\u6ca1\u6709\u5176\u4ed6\u8def\u5f84\uff09\uff0c\n  \n  \u5272\u6389\u8fd9\u6761\u53ef\u884c\u8fb9\u662f\u53ef\u4ee5\u8d77\u5230\u540c\u6837\u7684\u963b\u65ad\u6548\u679c\u540c\u65f6\u4ee3\u4ef7\u66f4\u4f18\u7684\u3002\n\n  \u56e0\u6b64\uff0c**\u5728\u7b97\u6cd5\u5b9e\u73b0\u4e2d\uff0c\u53ea\u6709\u6e90\u70b9\u548cx\u5c5e\u4e8e\u4e00\u4e2aSCC\uff0c\u6c47\u70b9\u548cy\u5c5e\u4e8e\u4e00\u4e2aSCC\uff0c\u624d\u80fd\u8fbe\u5230\u5272\u6389\u5b83\u5c5e\u4e8e\u6700\u4f18\u89e3**\n  \n\u5b9a\u7406\u8bc1\u660e\u5b8c\u4e86\uff0c\u63a5\u4e0b\u6765\u4e0a\u4ee3\u7801\n\n#### \u5c31\u662f\u7528dinic\u8dd1\u5b8c\u6700\u5927\u6d41\u4ee5\u540etarjan\u6c42SCC\uff0c\u6309\u7167\u6211\u63a8\u5bfc\u7684\u516c\u5f0f\u6c42\u89e3\n\n\u9644\uff1a\u672c\u4eba\u5bf9tarjan\u7684\u7406\u89e3\u4e0d\u662f\u7279\u522b\u6df1\uff0c\u518d\u52a0\u4e0atarjan\u51e0\u4e4e\u5c31\u662f\u6a21\u677f\uff0c\u6240\u4ee5\u5bf9SCC\u4e0d\u660e\u767d\u7684\u8bf7\u53c2\u89c1\u6a21\u677fP1726\n \n \n\n------------\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){//\u8bfb\u4f18 \n\tint x=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9')ch=getchar();\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=x*10+ch-'0';ch=getchar();\n\t}\n\treturn x;\n}\nint n,m,s,t;\nstruct Edge{\n\tint u,v,w,nxt;\n}e[120010];\nint head[4010],cnt=1;//\u6ce8\u610f\uff1acnt\u5fc5\u987b\u4ece1\u5f00\u59cb\uff0c\u56e0\u4e3a\u52a0\u8fb9\u662fn\u548cn+1\uff0c\u5076\u6570\u548c\u5076\u6570+1\u53ef\u4ee5\u901a\u8fc7\u5f02\u6216\u8f6c\u5316\uff0c\u5177\u4f53\u8bf7\u81ea\u884c\u63a8\u5bfc \ninline void add(int u,int v,int w){//\u524d\u5411\u661f\u52a0\u8fb9 \n\te[++cnt].u=u;\n\te[cnt].v=v;\n\te[cnt].w=w;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nint dis[4010];\nint bfs(){\n\tqueue<int>q;//\u5e7f\u641c\u961f\u5217 \n\tq.push(s);\n\tmemset(dis,-1,sizeof(dis));//\u6240\u6709\u7f16\u53f7\u8d4b\u521d\u503c \n\tdis[s]=0;//\u521d\u59cb\u539f\u70b9\u7f16\u53f7\uff0c\u8ba9\u5176\u53ef\u4ee5\u671d\u4e0b\u5206\u5c42 \n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();//\u53d6\u51fa\u961f\u9996 \n\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\tif(e[i].w>0&&dis[e[i].v]==-1){//\u5982\u679c\u6b64\u70b9\u53ef\u4ee5\u6d41\u5e76\u4e14\u5b83\u6ca1\u6709\u88ab\u7f16\u53f7\u8fc7 \n\t\t\t\tdis[e[i].v]=dis[u]+1;//\u5206\u5c42\u7f16\u53f7\n\t\t\t\tq.push(e[i].v);//\u5165\u961f \n\t\t\t\tif(e[i].v==t)return 1;//\u5982\u679c\u5c06\u6c47\u70b9\u7f16\u5b8c\u53f7\uff0c\u8fd4\u56de\uff0c\u793a\u610fdinic\u7ee7\u7eed\u627e\u589e\u5e7f \n\t\t\t}\n\t\t}\n\t}\n\treturn 0;//\u627e\u4e0d\u5230\u4e00\u6761\u53ef\u884c\u6d41\uff0c\u793a\u610fdinic\u8fd4\u56de \n}\nint dfs(int x,int f){\n\tif(x==t||f==0)return f;//\u5982\u679c\u641c\u5230\u4e86\u589e\u5e7f\u8def\u6216\u8005\u6ca1\u6709\u6d41\u91cf\u8d70\u4e0d\u4e0b\u53bb \n\tint used=0;//\u5b9a\u4e49\u5df2\u7ecf\u6d41\u51fa\u7684\u6d41\u91cf \n\tfor(int i=head[x];i;i=e[i].nxt){\n\t\tif(e[i].w>0&&dis[e[i].v]==dis[x]+1){//\u5982\u679c\u6b64\u8fb9\u80fd\u8d70\u901a\u5e76\u4e14\u7f16\u53f7\u6b63\u786e\uff08\u6839\u636edinic\uff0c\u53ea\u6709\u662f\u4e0b\u4e00\u7f16\u53f7\u624d\u80fd\u8d70\u901a\uff09 \n\t\t\tint k=dfs(e[i].v,min(e[i].w,f));//\u5411\u4e0b\u6d41\uff0c\u6ce8\u610f\u5904\u7406\u6d41\u91cf!!!\u4e00\u5b9a\u8981\u4e8c\u8005\u6700\u5c0f\u7684\uff01 \n\t\t\tif(k==0)continue;//\u65e0\u6cd5\u6d41\u901a\uff0c\u7ee7\u7eed\u5904\u7406\u4e0b\u4e00\u6761\u8fb9 \n\t\t\tused+=k;f-=k;//\u51cf\u5c11\u5269\u4f59\u6d41\u91cf\uff0c\u589e\u52a0\u6d41\u51fa\u6d41\u91cf \n\t\t\te[i].w-=k;e[i^1].w+=k;//\u5bf9\u6b63\u5411\u5f27\u548c\u53cd\u5411\u5f27\u505a\u6d41\u91cf\u5904\u7406\n\t\t\tif(f==0)break;//\u5269\u4f59\u6d41\u91cf\u4e3a0\uff0c\u7ed3\u675f \n\t\t}\n\t}\n\tif(used==0)dis[x]=-1;//\u65e0\u6cd5\u4e0b\u6d41\uff0c\u4f7f\u5176\u9000\u51fa\u5206\u5c42\uff0c\u4e0b\u6b21\u4e0d\u7528\u518d\u8d70\uff0c\u5426\u5219\u6d6a\u8d39\u6548\u7387 \n\treturn used;//\u8fd4\u56de\u53ef\u884c\u6d41\u7684\u6700\u5927\u6d41\u91cf \n}\nint dinic(){\n\tint flow=0;//\u6700\u5927\u6d41 \n\twhile(bfs())\n\t\tflow+=dfs(s,0x7fffffff);//\u52a0\u4e0a\u6bcf\u6b21\u589e\u5e7f\u53ef\u7ee7\u7eed\u4e0b\u6d41\u7684\u6d41\u91cf \n\treturn flow;\n}\nint dfn[4010],low[4010],vis[4010],scc[4010],num,cntt;\nstack<int>st;\nvoid tarjan(int u){//tarjan\u6a21\u677f\uff0c\u5224scc\u5206\u91cf\uff0c\u89c1\u6a21\u677f\u9898\uff0c\u4e0d\u505a\u8be6\u7ec6\u89e3\u91ca \n\tst.push(u);vis[u]=1;\n\tdfn[u]=low[u]=++cntt;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tif(e[i].w==0)continue;//\u6ce8\u610f,\u6ee1\u6d41\u65f6\u65e0\u6cd5\u7ee7\u7eed\uff0c\u662f\u672c\u9898\u7684\u5173\u952e\u70b9 \n\t\tif(dfn[e[i].v]==0){\n\t\t\ttarjan(e[i].v);\n\t\t\tlow[u]=min(low[u],low[e[i].v]);\n\t\t}\n\t\telse if(vis[e[i].v]==1)\n\t\t\tlow[u]=min(dfn[e[i].v],low[u]);\n\t}\n\tif(dfn[u]==low[u]){\n\t\t++num;\n\t\twhile(1){\n\t\t\tint top=st.top();st.pop();\n\t\t\tvis[top]=0;scc[top]=num;\n\t\t\tif(top==u)break;\n\t\t}\n\t}\n}\nint main(){\n\tn=read();m=read();s=read();t=read();\n\tfor(int i=1;i<=m;++i){\n\t\tint u,v,w;\n\t\tu=read();v=read();w=read();\n\t\tadd(u,v,w);add(v,u,0);//\u52a0\u8fb9\uff0c\u6b63\u5411\u5f27\u548c\u53cd\u5411\u5f27 \n\t}\n\tint flow=dinic();//\u5c3d\u7ba1flow\u5e76\u6ca1\u6709\u7528\uff0c\u4f46\u8c03\u8bd5\u8f83\u4e3a\u65b9\u4fbf \n\tfor(int i=1;i<=n;++i)\n\t\tif(scc[i]==0)\n\t\t\ttarjan(i);//\u5982\u679c\u6ca1\u6709\u5224\u8fc7scc\uff0c\u8dd1\u4e00\u904d\uff0c\u6c42\u51fa\u5b83\u5c5e\u4e8e\u7684\u8054\u901a\u5757\n\t//\u5224\u65ad\u65b9\u6cd5\u548c\u516c\u5f0f\u89c1\u524d\u9762 \n\tfor(int i=2;i<cnt;i+=2){//\u8fd9\u6837\u624d\u80fd\u8df3\u5230\u6bcf\u4e00\u6761\u6b63\u5411\u8fb9 \n\t\tint u=e[i].u,v=e[i].v;\n\t\tif(e[i].w==0&&scc[u]!=scc[v]){//\u8bb0\u5f97\u5224\u65ad\u6ee1\u6d41\n\t\t\tprintf(\"1 \");\n\t\t\tif(scc[u]==scc[s]&&scc[v]==scc[t])printf(\"1\");\n\t\t\telse printf(\"0\");\n\t\t}\n\t\telse printf(\"0 0\");\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n} \n```\n\n\n------------\n\n\n\u6700\u540e\uff0c\u9644\u52a0\u4e24\u4e2a\u5173\u4e8e\u6700\u5c0f\u5272\u7684\u77e5\u8bc6\u70b9\uff1a\n\n1.\u5e38\u7528\u63cf\u8ff0\n\n\t\u8868\u8ff0\u4e00\uff1a\u5220\u53bb\u82e5\u5e72\u6761\u8fb9\u4f7f\u5f97\u6e90\u70b9\u5230\u6c47\u70b9\u4e0d\u8fde\u901a\uff0c\n    \n    \u6c42\u5220\u8fb9\u7684\u6743\u503c\u548c\u7684\u6700\u5c0f\u53ef\u80fd\u503c\u3002\n    \n\u8868\u8ff0\u4e8c\uff1a\u5c06\u70b9\u96c6\u5206\u4e3a(S,T)\uff0c\n\n\u8bb0\u6240\u6709\u4eceS\u4e2d\u51fa\u53d1\u5230T\u4e2d\u7684\u8fb9\u7684\u6743\u503c\u548c\u4e3ac(S,T)\uff0c\n\n\u6c42c(S,T)\u7684\u6700\u5c0f\u503c\u3002\n\n2.\u6c42\u6700\u5c0f\u5272\n\na. \u4ee5\u6743\u503c\u4e3a\u5bb9\u91cf\uff0c\u8be5\u7f51\u7edc\u6700\u5927\u6d41\u7684\u503c\u5373\u4e3a\u6700\u5c0f\u5272\u7684\u503c\n\nb. \u5728\u6b8b\u91cf\u7f51\u7edc\u4e2d\uff0c\u4ece\u6e90\u70b9\u51fa\u53d1\u8fdb\u884c\u4e00\u6b21\u589e\u5e7fBFS\uff0c\n\n\u5373\u5f97\u5230\u4e00\u4e2a\u5206\u5272\u3002\u8be5\u5206\u5272\u662f\u4e00\u4e2a\u6700\u5c0f\u5272\n",
        "postTime": 1527930248,
        "uid": 49644,
        "name": "\u6597\u795e\u00b7\u541b\u83ab\u7b11",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4126 \u3010[AHOI2009]\u6700\u5c0f\u5272\u3011"
    },
    {
        "content": "**\u6700\u5c0f\u5272\u7684\u53ef\u884c\u8fb9\u548c\u5fc5\u987b\u8fb9**(\u6240\u6709\u5272\u96c6\u7684\u4ea4\u96c6\u548c\u5e76\u96c6)\n\n\u6ce8\u610f\u5fc5\u987b\u8fb9$\\subseteq$\u53ef\u884c\u8fb9.\n\n\u663e\u7136,\u5728**\u67d0\u79cd**\u6700\u5927\u6d41\u65b9\u6848\u4e2d,\u6700\u5c0f\u5272$\\Rightarrow$\u6ee1\u6d41\u3002\n\n\u8003\u8651\u73b0\u6709\u7684\u6ee1\u6d41\u8fb9 $u,v$ \u5982\u4f55\u88ab\u66ff\u4ee3,\u4e0d\u96be\u60f3\u5230 : **\u6b8b\u91cf\u7f51\u7edc**\u4e2d\u6709\u5305\u542b $u,v$ \u7684\u73af(\u53e6\u4e00\u6761\u8def,\u6ce8\u610f\u8fd8\u5305\u62ec\u53cd\u5411\u8fb9)\u3002\n\n\u8ba9\u6d41\u6cbf\u7740\u73af\u6d41\u52a8\u4e00\u5708,\u6700\u5927\u6d41\u4e0d\u53d8,\u4f46\u662f\u6ee1\u6d41\u88ab\u7834\u574f\u3002\n\n\u7531\u6b64\u5f15\u51fa : \u4e24\u4e2a\u7aef\u70b9\u5728\u540c\u4e00**\u5f3a\u8fde\u901a\u5206\u91cf**\u5185\u7684\u8fb9\u5fc5\u7136\u603b\u4e0d\u662f\u6700\u5c0f\u5272\u3002\n\n\u5c06\u5f53\u524d\u6b8b\u91cf\u7f51\u7edc\u7f29\u70b9\u6210`DAG`,\u4e0a\u9762\u7684\u8fb9\u624d\u6709\u53ef\u80fd\u6210\u4e3a\u6700\u5c0f\u5272\u3002\n\n\u5728\u8fd9\u4e9b\u8fb9\u91cc\u9762,\u76f4\u63a5\u5c06$S,T$\u76f8\u8fde\u7684\u6211\u4eec\u5fc5\u987b\u8981\u5272,\u8fd9\u4e9b\u8fb9\u5c31\u662f\u5fc5\u987b\u8fb9\u3002\n\n\u5bf9\u4e8e\u5176\u4ed6\u8fb9\u90fd\u80fd\u5206\u522b\u591f\u6784\u9020\u5272\u4e0e\u4e0d\u5272\u7684\u65b9\u6848,\u5b83\u4eec\u662f\u53ef\u884c\u8fb9\u3002\n\n\u5728\u8fd9\u4e2a`DAG`\u4e0a,\u6bcf\u4e00\u79cd\u7d27\u7684\u5272(\u4e0d\u8003\u8651\u6743\u503c)\u90fd\u662f\u6700\u5c0f\u5272\u3002\n\n\u5de6\u7aef\u70b9 : \u9760\u8fd1$S$\u7684\u4e00\u7aef, \u53f3\u7aef\u70b9 : \u9760\u8fd1$T$\u7684\u4e00\u7aef\u3002\n\n\u5272\u7684\u6784\u9020 : \u628a\u8fd9\u6761\u8fb9\u5de6\u7aef\u70b9\u5230 $S$ \u7684\u8def\u5f84\u94a6\u5b9a\u4e3a $S$ \u96c6\u5408,\u5176\u4f59\u4e3a $T$ \u96c6\u5408,\u7136\u540e\u628a\u6240\u6709 $S,T$ \u4e4b\u95f4\u7684\u8fb9\u5272\u65ad,\u8fd9\u662f\u7d27\u7684,\u800c\u4e14\u8be5\u8fb9\u662f\u6700\u5c0f\u5272\u7684\u4e00\u90e8\u5206\u3002\n\n\u4e0d\u5272\u7684\u6784\u9020 : \u5982\u679c\u53f3\u7aef\u70b9\u4e0d\u662f $T$ ,\u628a\u8fd9\u6761\u8fb9\u53f3\u7aef\u70b9\u5230 $S$ \u7684\u8def\u5f84\u94a6\u5b9a\u4e3a $S$ \u96c6\u5408\u3002\u5426\u5219\u5de6\u7aef\u70b9\u5fc5\u7136\u4e0d\u662f $S$ ,\u628a\u8fd9\u6761\u8fb9\u5de6\u7aef\u70b9\u5230 $T$ \u7684\u8def\u5f84\u94a6\u5b9a\u4e3a $T$ \u96c6\u5408\u5373\u53ef\u3002\u8fd9\u6837\u6574\u6761\u8fb9\u603b\u662f\u88ab\u5b8c\u6574\u5730\u5305\u542b\u5728 $S$ \u6216 $T$ \u96c6\u4e2d\u3002\n\n\u5728\u8fd9\u4e2a`DAG`\u4e0a\u641e\u641e\u8bf4\u4e0d\u5b9a\u8fd8\u6709\u4ec0\u4e48\u65b0\u79d1\u6280\u2026\u2026\n\n\u5177\u4f53\u5b9e\u73b0,\u9700\u8981\u5148\u8dd1\u6700\u5927\u6d41,\u7136\u540e`Tarjan`\u7f29\u5f3a\u8fde\u901a\u5206\u91cf,\u6761\u4ef6\u662f:\n\n- \u53ef\u884c\u8fb9 : \u4e24\u7aef\u4e0d\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u3002\n\n- \u5fc5\u987b\u8fb9 : \u4e00\u7aef\u5728$S$\u7684\u5206\u91cf\u5185,\u53e6\u4e00\u7aef\u5728$T$\u7684\u5206\u91cf\u5185\u3002\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<queue>\n#define INF 1000000000 \n#define MaxN 4050\n#define MaxM 120500\nusing namespace std;\nstruct Line\n{int to,nxt,cap;}l[MaxM];\nint tl=1,fir[MaxN];\nvoid add(int f,int t,int cap){\n  l[++tl]=(Line){t,fir[f],cap};fir[f]=tl;\n  l[++tl]=(Line){f,fir[t],0  };fir[t]=tl;\n}\nint S,T,n,dis[MaxN],cur[MaxN];\nqueue<int> q;\nbool bfs()\n{\n  for (int i=1;i<=n;i++)\n    {cur[i]=fir[i];dis[i]=0;}\n  q.push(S);dis[S]=1;\n  while(!q.empty()){\n  \tint u=q.front();\n  \tq.pop();\n  \tfor (int i=fir[u],v;i;i=l[i].nxt)\n  \t  if (l[i].cap&&!dis[v=l[i].to]){\n  \t  \tdis[v]=dis[u]+1;\n  \t  \tq.push(v);\n      }\n  }return dis[T];\n}\nint dfs(int u,int flow)\n{\n  if (u==T)return flow;\n  int sum=0,sav,v;\n  for (int &i=cur[u];i;i=l[i].nxt){\n  \tif (dis[v=l[i].to]==dis[u]+1&&l[i].cap){\n  \t  sav=dfs(v,min(flow,l[i].cap));\n  \t  if (sav){\n  \t  \tl[i].cap-=sav;\n  \t  \tl[i^1].cap+=sav;\n  \t  \tsum+=sav;\n  \t  \tif (!(flow-=sav))return sum;\n      }else dis[v]=-1;\n    }\n  }return sum;\n}\nint dfn[MaxN],low[MaxN],tim,\n    stk[MaxN],top,col[MaxN],Bcnt;\nbool in[MaxN];\nvoid dfs2(int u)\n{\n  low[u]=dfn[u]=++tim;\n  in[stk[++top]=u]=1;\n  for (int i=fir[u],v;i;i=l[i].nxt)\n    if (l[i].cap){\n      if (!dfn[v=l[i].to])\n        {dfs2(v);low[u]=min(low[u],low[v]);}\n      else if (in[v])low[u]=min(low[u],dfn[v]);\n    }\n  if (low[u]==dfn[u]){\n    Bcnt++;\n    while(stk[top+1]!=u){\n      in[stk[top]]=0;\n      col[stk[top--]]=Bcnt;\n    }\n  }\n}\nint m,fr[MaxM],to[MaxM];\nint main()\n{\n  scanf(\"%d%d%d%d\",&n,&m,&S,&T);\n  for (int i=1,cap;i<=m;i++){\n    scanf(\"%d%d%d\",&fr[i],&to[i],&cap);\n    add(fr[i],to[i],cap);\n  }while(bfs())dfs(S,INF);\n  for (int i=1;i<=n;i++)\n    if (!dfn[i])dfs2(i);\n  for (int i=1;i<=m;i++)\n    if (!l[i<<1].cap){\n      printf(\"%d %d\\n\",\n        col[fr[i]]!=col[to[i]],\n        col[fr[i]]==col[S]&&col[to[i]]==col[T]\n      );\n    }else puts(\"0 0\");\n  return 0;\n}\n```",
        "postTime": 1586158449,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4126 \u3010[AHOI2009]\u6700\u5c0f\u5272\u3011"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.org/problemnew/show/P4126)\n\n\u6700\u5c0f\u5272\u7684\u53ef\u884c\u8fb9\u548c\u5fc5\u987b\u8fb9\n\n\u53ef\u884c\u8fb9$(u,v)$\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\u6761\u4ef6\n\n1. \u6ee1\u6d41\n\n1. \u6b8b\u91cf\u7f51\u7edc\u4e2d\u4e0d\u5b58\u5728$u$\u5230$v$\u7684\u8def\u5f84\n\n\u8fd9\u4e2a\u633a\u597d\u7406\u89e3\u7684\u5440\uff0c\u5982\u679c\u5b58\u5728\u8fd8\u5b58\u5728\u8def\u5f84\u7684\u8bdd\u90a3\u4e48\u8fd9\u6761\u8fb9\u5c31\u4e0d\u4f1a\u662f\u74f6\u9888\u4e86\n\n\u5fc5\u987b\u8fb9$(u,v)$\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\n\n1. \u6ee1\u6d41\n\n1. \u6b8b\u91cf\u7f51\u7edc\u4e2d$S$\u80fd\u5230\u8fbe$u$\uff0c$v$\u80fd\u5230\u8fbe$T$\n\n\u8fd9\u6837\u7684\u8bdd$(u,v)$\u5c31\u6210\u4e3a\u4e86\u552f\u4e00\u7684\u74f6\u9888\u4e86\n\n\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a\u8dd1$tarjan$\uff0c\u53ea\u8dd1\u6ca1\u6ee1\u6d41\u7684\u8fb9\n\n\u5982\u679c\u53d1\u73b0$u$\u548c$v$\u4e0d\u5728\u540c\u4e00\u5f3a\u8054\u901a\u5206\u91cf\u91cc\uff0c\u5c31\u8bf4\u660e\u8fd9\u662f\u4e00\u6761\u53ef\u884c\u8fb9\n\n\u56e0\u4e3a$(u,v)$\u6ee1\u6d41\uff0c$(v,u)$\u5fc5\u7136\u5b58\u5728\uff0c\u5728\u540c\u4e00\u8fde\u901a\u5206\u91cf\u91cc\u5c31\u8bf4\u660e\u53ef\u4ee5\u4ece$u$\u8d70\u5230$v$\u5f62\u6210\u4e00\u4e2a\u73af\uff0c\u4e5f\u5c31\u5b58\u5728$u$\u5230$v$\u7684\u8def\u5f84\n\n\u5982\u679c$u$\u548c$S$\u5728\u540c\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u91cc\uff0c$v$\u548c$T$\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u662f\u4e00\u6761\u5fc5\u987b\u8fb9\uff0c\u548c\u4e0a\u9762\u7c7b\u4f3c\n\n\u4ee3\u7801\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\n#define re register\n#define LL long long\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\nconst int maxn=4e3+5;\nconst int inf=1e9;\ninline int read() {\n\tchar c=getchar();int x=0;while(c<'0'||c>'9') c=getchar();\n\twhile(c>='0'&&c<='9') x=(x<<3)+(x<<1)+c-48,c=getchar();return x;\n}\nstd::queue<int> q;\nstruct E{int v,nxt,f;}e[150000];\nint n,m,S,T,cnt,top,p,mid,num=1;\nint dfn[maxn],low[maxn],st[maxn],f[maxn];\nint head[maxn],d[maxn],cur[maxn],col[maxn];\ninline void C(int x,int y,int f) {\n\te[++num].v=y;e[num].nxt=head[x];\n\thead[x]=num;e[num].f=f;\n}\nint X[60005],Y[60005],id[60005];\ninline void add(int x,int y,int f) {C(x,y,f),C(y,x,0);}\ninline int BFS() {\n\tfor(re int i=1;i<=n;i++) d[i]=0,cur[i]=head[i];\n\td[S]=1,q.push(S);\n\twhile(!q.empty()) {\n\t\tint k=q.front();q.pop();\n\t\tfor(re int i=head[k];i;i=e[i].nxt)\n\t\tif(!d[e[i].v]&&e[i].f) d[e[i].v]=d[k]+1,q.push(e[i].v);\n\t}\n\treturn d[T];\n}\nint dfs(int x,int now) {\n\tif(x==T||!now) return now;\n\tint flow=0,ff;\n\tfor(re int& i=cur[x];i;i=e[i].nxt)\n\tif(d[e[i].v]==d[x]+1) {\n\t\tff=dfs(e[i].v,min(e[i].f,now));\n\t\tif(now<=0) continue;\n\t\tnow-=ff,flow+=ff,e[i].f-=ff,e[i^1].f+=ff;\n\t\tif(!now) break;\n\t}\n\treturn flow;\n}\nvoid tarjan(int x) {\n\tdfn[x]=low[x]=++cnt;\n\tst[++top]=x;f[x]=1;\n\tfor(re int i=head[x];i;i=e[i].nxt) {\n\t\tif(!e[i].f) continue;\n\t\tif(!dfn[e[i].v]) tarjan(e[i].v),low[x]=min(low[x],low[e[i].v]);\n\t\telse if(f[e[i].v]) low[x]=min(low[x],dfn[e[i].v]);\n\t}\n\tif(dfn[x]==low[x]) {\n\t\t++p;\n\t\tdo {\n\t\t\tmid=st[top--];\n\t\t\tf[mid]=0;\n\t\t\tcol[mid]=p;\n\t\t}while(x!=mid);\n\t}\n}\nint main() {\n\tn=read(),m=read();S=read(),T=read();\n\tfor(re int z,i=1;i<=m;i++) {\n\t\tX[i]=read(),Y[i]=read();\n\t\tz=read();id[i]=num+1;add(X[i],Y[i],z);\n\t}\n\twhile(BFS()) dfs(S,inf);\n\tfor(re int i=1;i<=n;i++) if(!dfn[i]) tarjan(i);\n\tfor(re int i=1;i<=m;i++) {\n\t\tif(col[X[i]]!=col[Y[i]]&&!e[id[i]].f) putchar('1');\n\t\t\telse putchar('0');\n\t\tputchar(' ');\n\t\tif(!e[id[i]].f&&col[X[i]]==col[S]&&col[Y[i]]==col[T]) putchar('1');\n\t\t\telse putchar('0');\n\t\tputchar(10);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1553675644,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4126 \u3010[AHOI2009]\u6700\u5c0f\u5272\u3011"
    },
    {
        "content": "- [\u7c7b\u9898](https://www.luogu.com.cn/blog/luo1gu1zui1bang1/post-tu-lun-edges-in-mst)\u3002\n\n**\u9898\u610f**\n- [\u94fe\u63a5](https://www.luogu.com.cn/problem/P4126)\u3002\n- \u7ed9\u5b9a\u4e00\u4e2a\u6709\u5411\u56fe\u8fde\u901a\u56fe\uff0c\u6e90\u70b9\u548c\u6c47\u70b9\uff0c\u5224\u65ad\u5b83\u7684\u6bcf\u6761\u8fb9\u5c5e\u4e8e\u8fd9\u4e09\u79cd\u60c5\u51b5\u7684\u54ea\u4e00\u79cd\uff1a\u5728\u6240\u6709\u6700\u5c0f\u5272\u4e0a\uff0c\u5728\u90e8\u5206\u6700\u5c0f\u5272\u4e0a\uff0c\u4e0d\u5728\u4efb\u4f55\u6700\u5c0f\u5272\u4e0a\u3002\n- \u70b9\u6570\u4e0d\u5927\u4e8e $4000$\uff0c\u8fb9\u6570\u4e0d\u5927\u4e8e $60000$\u3002\n\n**\u5206\u6790**\n- \u9996\u5148\uff0c\u6839\u636e\u6211\u4eec\u5bf9\u6d41\u548c\u5272\u7684\u7406\u89e3\uff08[\u53c2\u89c1](https://www.luogu.com.cn/blog/luo1gu1zui1bang1/wang-lao-liu)\u6d41\u6a21\u578b\u7ae0\u8282\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u4e00\u79cd\u4e00\u822c\u5316\u7684\u6700\u5c0f\u5272\u65b9\u6848\uff0c\u6784\u9020 $S,T$ \u4e3a\u4e24\u4e2a\u5206\u522b\u5305\u542b\u6e90\u70b9\u548c\u6c47\u70b9\u7684\u70b9\u96c6\uff0c\u4f7f\u5f97\u4ece $S$ \u5230 $T$ \u6240\u6709\u7684\u8fb9\u90fd\u662f\u6ee1\u6d41\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8fb9\u96c6\u4e00\u5b9a\u662f\u6700\u5c0f\u5272\uff0c\u800c\u4e14\u6240\u6709\u8fd9\u6837\u7684\u8fb9\u96c6\u7ec4\u6210\u6700\u5c0f\u5272\u7684\u6240\u6709\u53ef\u80fd\u65b9\u6848\u3002\n- \u57fa\u4e8e\u6700\u5927\u6d41\u548c\u6700\u5c0f\u5272\u5b8c\u5168\u76f8\u7b49\uff0c\u6211\u4eec\u5bb9\u6613\u8bc1\u660e\u8fd9\u4e2a\u4e8b\u5b9e\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u7406\u89e3\u4e86\u8fd9\u4e00\u70b9\uff0c\u540e\u9762\u7684\u5c31\u5f88\u5bb9\u6613\u63a8\u5bfc\u3002\n- \u6211\u4eec\u5bb9\u6613\u5f97\u5230\uff1a\u5982\u679c\u4e00\u6761\u8fb9\u672a\u6ee1\u6d41\uff0c\u90a3\u4e48\u5b83\u4e0d\u5728\u4efb\u4f55\u6700\u5c0f\u5272\u4e0a\u3002\n- \u90a3\u4e48\u5982\u679c\u4e00\u6761\u8fb9\u6ee1\u6d41\u4e86\uff0c\u5b83\u662f\u5426\u603b\u5728\u67d0\u4e2a\u6700\u5c0f\u5272\u4e0a\u5462\uff1f\u4e0b\u9762\u662f\u4e00\u4e2a\u53cd\u4f8b\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/rpir7iep.png)\n- \u6ca1\u9519\uff0c\u5982\u679c\u6211\u4eec\u67d0\u6761\u8fb9\u6ee1\u6d41\uff0c\u4f46\u662f\u6211\u4eec\u77e5\u9053\uff1a\u8fd9\u53ea\u4e0d\u8fc7\u662f\u4e2a\u5de7\u5408\uff0c\u8bc1\u636e\u5c31\u662f\u5b58\u5728\u53e6\u4e00\u6761\u8def\u5f84\uff0c\u5b83\u4e5f\u53ef\u4ee5\u6d41\u8fd9\u4e00\u6761\uff0c\u7136\u540e\u8ba9\u8fd9\u6761\u4e0d\u6d41\uff0c\u6240\u4ee5\u5272\u8fd9\u6761\u8fb9\u662f\u6ca1\u7528\u7684\uff08\u53cd\u4e4b\uff0c\u5272\u8fd9\u6761\u8fb9\u53ef\u4ee5\u8ba9\u67d0\u4e24\u4e2a\u70b9\u4e0d\u8fde\u901a\uff0c\u6839\u636e\u4e0a\u9762\u7684\u63a8\u8bba\uff0c\u5b83\u53ef\u4ee5\u51fa\u73b0\u5728\u5272\u7684\u65b9\u6848\u5185\uff09\u3002\n- \u8003\u8651\u53cd\u5411\u8fb9\u6b64\u65f6\u663e\u7136\u6709\u6d41\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u5224\u5b9a\uff1a\u4e24\u4e2a\u7aef\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u7684\u6ee1\u6d41\u8fb9\u4e00\u5b9a\u5728\u67d0\u4e2a\u6700\u5c0f\u5272\u65b9\u6848\u5185\u3002\n- \u63a5\u4e0b\u6765\u8fdb\u884c\u7f29\u70b9\uff0c\u56fe\u5373\u53d8\u6210\u4e86\u6709\u5411\u65e0\u73af\u56fe\uff0c\u6839\u636e\u4e0a\u9762\u7684\u63a8\u8bba\uff1a\u5982\u679c\u4e00\u6761\u8fb9\u59cb\u7ec8\u5728\u6700\u5c0f\u5272\u4e0a\uff0c\u90a3\u4e48\u663e\u7136\u8981\u6c42\u82e5\u4e0d\u5272\u8fd9\u6761\u8fb9\uff0c$S$ \u4e0e $T$ \u59cb\u7ec8\u8fde\u901a\u3002\n- \u6240\u4ee5\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u7b2c\u4e8c\u4e2a\u5224\u5b9a\uff0c\u5982\u679c\u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a\u52a0\u4e0a\u8fd9\u6761\u8fb9\uff0c$S$ \u5c06\u4e0e $T$ \u8fde\u901a\uff0c\u8003\u8651\u5230\u53cd\u5411\u8fb9\u7684\u56e0\u7d20\uff0c\u7f29\u70b9\u540e\u8fd9\u6761\u8fb9\u53ef\u4ee5\u770b\u4f5c\u662f\u4ece $S$ \u6d41\u5411 $T$\uff0c[\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/0w4dfpzy)\u3002\n- \u8bf4\u53e5\u5b9e\u8bdd\uff0c\u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a $\\text{Tarjan}$ \u7f29\u70b9\u7136\u540e\u5efa\u51fa\u4e00\u4e2a $\\text{DAG}$\uff08\u5b9e\u9645\u4e0a\uff0c\u662f\u4ece $T$ \u5230 $S$ \u7684 $\\text{DAG}$\uff09\uff0c\u4e0a\u9762\u4efb\u610f\uff08\u4e25\u683c\u5b9a\u4e49\uff09\u7684 $S,T$ \u5272\u90fd\u662f\u6700\u5c0f\u5272\uff0c\u7136\u540e\u76f4\u63a5\u4ece $S$ \u6307\u5411\u5230 $T$ \u7684\u8fb9\u4e00\u5b9a\u5728\u4efb\u610f\u7684\u6700\u5c0f\u5272\u4e0a\uff0c\u8fd9\u4e2a\u6027\u8d28\u5b9e\u5728\u592a\u4f18\u7f8e\u4e86\u3002\n- \u4ece\u5b9e\u7528\u6027\u7684\u89d2\u5ea6\uff0c\u5b83\u5df2\u7ecf\u53ef\u4ee5\u89e3\u51b3\u5982\u4e0b\u95ee\u9898\uff0c\u6307\u5b9a $k$ \u6761\u8fb9\uff0c\u8be2\u95ee\u5b83\u4eec\u662f\u5426\u80fd\u591f\u540c\u65f6\u5728\u67d0\u4e2a\u6700\u5c0f\u5272\u4e0a\uff0c\u9664\u53bb\u7f51\u7edc\u6d41\u7684\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u89e3\u51b3\u5b83\u3002",
        "postTime": 1646974408,
        "uid": 260884,
        "name": "WeLikeStudying",
        "ccfLevel": 0,
        "title": "\u3010\u56fe\u8bba\u3011Edges in the Minimal cut"
    },
    {
        "content": "[link\u3002](https://www.luogu.com.cn/problem/P4126)\n\n\u4e5f\u8bb8\u9898\u4e0d\u9519\uff0c\u53cd\u6b63\u6709\u70b9\u964d\u667a\u2026\n\n\u5148\u7ed9\u7ed3\u8bba\uff0c\u5728\n\n$$\nV_N=V \\\\\nE_N=E \\\\\nc(x,y)=w(x,y)\n$$\n\n\u7684\u6d41\u7f51\u7edc\u4e2d\uff1a\n\n- \u53ef\u884c\u8fb9\uff1a\u5728\u589e\u5e7f\u5b8c\u7684 induced subgraph \u4e2d\uff0c\u4e0d\u5b58\u5728 $u$ \u5230 $v$ \u7684**\u8def\u5f84**\uff1b\n- \u5fc5\u8981\u8fb9\uff1a\u5728\u589e\u5e7f\u5b8c\u7684 induced subgraph \u4e2d\uff0c\u53ef\u4ee5\u4ece $S$ \u5230 $u$ \u4e14\u53ef\u4ee5\u4ece $v$ \u5230 $T$\u3002\n\n\u5148\u770b\u53ef\u884c\u8fb9\u3002\u4e0d\u5b58\u5728 $(u,v)$ \u6709\u4e24\u4e2a\u6761\u4ef6\uff0c\u4e00\u4e2a\u662f $c_f(u,v)=0$\uff0c\u53e6\u4e00\u4e2a\u662f\u4e0e\u4e4b\u5e76\u8054\uff08\u7279\u6307\u4ee5 $u$ \u4e3a\u8d77\u70b9\uff0c$v$ \u4e3a\u7ec8\u70b9\u7684\uff09\u7684\u7ebf\u8def\u4e2d\u5b58\u5728 $c_f(u',v')=0$\u3002\u7b2c\u4e00\u4e2a\u7684\u7406\u89e3\u662f\uff0c\u5982\u679c\u5b83\u6ca1\u6ee1\u6d41\uff0c\u5219\u4e0e\u4e4b\u4e32\u8054\u7684 arcs \u4e2d\u5b58\u5728\u6bd4\u5b83\u7684\u5bb9\u91cf\u66f4\u5c0f\u7684\u8fb9\uff0c\u6839\u636e\u6700\u5c0f\u5272\u4e32\u8054\u5272\u6700\u5c0f\u7684\u539f\u5219\u6210\u7acb\uff1b\u7b2c\u4e8c\u4e2a\u5c31\u662f\uff0c\u5982\u679c\u4f60\u4e0d\u628a\u5e76\u8054\u7684\u780d\u4e86\uff0c\u4f60\u7684\u5212\u5206\u538b\u6839\u4e0d\u5408\u6cd5\uff0c\u4f55\u8c08\u53ef\u884c\u4e0e\u5426\u3002\n\n\u90a3\u4e48\u5173\u4e8e\u53ef\u884c\u8fb9\u7684\u5224\u65ad\uff0c\u628a\u56fe\u7f29\u70b9\u5373\u53ef\u3002\n\n\u518d\u770b\u5fc5\u8981\u8fb9\u3002\u8fd9\u4e2a\u7c7b\u6bd4\u53ef\u884c\u8fb9\u5373\u53ef\uff0c\u4e0d\u8d58\u8ff0\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,S,T,co[4100],dfsnt,colnt,inst[4100],sta[4100],top,dfn[4100],low[4100],vi[4100],rec[60100];\nvector<pair<int,int>> arc;\ntemplate<typename T> struct network {\n\tconst int n;\n\tstruct edge {\n\t\tint to,r; T w;\n//\t\tfriend bool operator<(const edge& one,const edge& ano) { return one.to<ano.to || (one.to==ano.to && one.r<ano.r); }\n\t};\n\tvector<vector<edge>> e;\n\tvector<int> lev,iter;\n\tnetwork(int n):n(n),e(n+1),lev(n+1),iter(n+1) {}\n\tvoid link(const int x,const int y,T w,int ID) {\n\t\tassert(1<=x && x<=n && 1<=y && y<=n);\n\t\trec[ID]=int(e[x].size());\n\t\te[x].push_back((edge){y,int(e[y].size())+(x==y),w});\n\t\te[y].push_back((edge){x,int(e[x].size())-1,0});\n\t}\n\tbool BFS(const int s,const int t) {\n\t\tqueue<int> q; lev.assign(n+1,0);\n\t\tfor(q.push(s),lev[s]=1; q.size(); q.pop()) {\n\t\t\tfor(int now=q.front(),i=iter[now]=0,y; i<int(e[now].size()); ++i) {\n\t\t\t\tif(now==t)\treturn 1;\n\t\t\t\tif(!lev[y=e[now][i].to] && e[now][i].w)\tlev[y]=lev[now]+1,q.push(y);\n\t\t\t}\n\t\t}\n\t\treturn lev[t];\n\t}\n\tT DFS(const int now,T f,const int t) {\n\t\tif(now==t)\treturn f;\n\t\tT res=0,tt;\n\t\tfor(int& i=iter[now],y; i<int(e[now].size()); ++i) {\n\t\t\tif(lev[y=e[now][i].to]==lev[now]+1 && e[now][i].w && (tt=DFS(y,min(f,e[now][i].w),t))) {\n\t\t\t\te[now][i].w-=tt; e[y][e[now][i].r].w+=tt; res+=tt; f-=tt;\n\t\t\t\tif(!f)\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!res)\tlev[now]=0;\n\t\treturn res;\n\t}\n\tT get(const int s,const int t) {\n\t\tT res=0;\n\t\twhile(BFS(s,t))\tres+=DFS(s,numeric_limits<T>::max(),t);\n\t\treturn res;\n\t}\n};\ntemplate<typename T=int> T rd() {\n\tT x=0; char IO=getchar(); bool f=0;\n\twhile(IO<'0' || IO>'9')\tf|=IO=='-',IO=getchar();\n\twhile(IO>='0' && IO<='9')\tx=x*10+(IO&15),IO=getchar();\n\treturn f?-x:x;\n}\nvoid DFS(const int now,const network<int>& G) {\n\tdfn[now]=low[now]=++dfsnt;\n\tinst[sta[++top]=now]=1;\n\tfor(int i=0,y; i<int(G.e[now].size()); ++i) {\n\t\tif(!G.e[now][i].w)\tcontinue;\n\t\tif(!dfn[y=G.e[now][i].to])\tDFS(y,G),low[now]=min(low[now],low[y]);\n\t\telse if(inst[y])\tlow[now]=min(low[now],dfn[y]);\n\t}\n\tif(dfn[now]==low[now]) {\n\t\t++colnt;\n\t\twhile(sta[top]!=now)\tco[sta[top]]=colnt,inst[sta[top]]=0,top--;\n\t\ttop--; co[now]=colnt; inst[now]=0;\n\t}\n}\nvoid DFS_network(const int now,const network<int>& G,const int c) {\n\tvi[now]=c;\n\tfor(int i=0,y; i<int(G.e[now].size()); ++i) {\n\t\tif(!vi[y=G.e[now][i].to] && (c-1?G.e[y][G.e[now][i].r].w:G.e[now][i].w))\tDFS_network(y,G,c);\n\t}\n}\nsigned main() {\n\tfreopen(\"mincut.in\",\"r\",stdin);\n\tfreopen(\"mincut.out\",\"w\",stdout);\n\tn=rd(); m=rd(); S=rd(); T=rd();\n\tnetwork<int> G(n);\n\tfor(int i=0,x,y; i<m; ++i)\tx=rd(),y=rd(),G.link(x,y,rd(),i),arc.emplace_back(x,y);\n\tfor(int i=(G.get(S,T),1); i<=n; ++i)\tif(!dfn[i])\tDFS(i,G);\n\tDFS_network(S,G,1); DFS_network(T,G,2);\n//\tfor(int i=1; i<=n; ++i)\tprintf(\" --- %d \",vi[i]); puts(\"\\n\");\n//\tfor(int i=1; i<=n; ++i)\tprintf(\" --- %d \",co[i]); puts(\"\");\n//\tfor(int i=1; i<=n; ++i)\tsort(G.e[i].begin(),G.e[i].end());\n//\tfor(int now=1; now<=n; ++now) {\n//\t\tprintf(\" --- current node = %d:\",now);\n//\t\tfor(int i=0; i<int(G.e[now].size()); ++i)\tprintf(\" %d\",G.e[now][i].to);\n//\t\tputs(\"\");\n//\t}\n\tfor(int i=0; i<m; ++i) {\n//\t\tprintf(\" (%d %d)\\n\",arc[i].first,lower_bound(G.e[arc[i].first].begin(),G.e[arc[i].first].end(),(network<int>::edge){arc[i].second,0,0})->to);\n//\t\tif(lower_bound(G.e[arc[i].first].begin(),G.e[arc[i].first].end(),(network<int>::edge){arc[i].second,0,0})->w)\tputs(\"0 0\");\n//\t\tprintf(\" (%d %d)[%d %d]\\n\",arc[i].first,G.e[arc[i].first][rec[i]].to,co[arc[i].first],co[G.e[arc[i].first][rec[i]].to]);\n\t\tif(G.e[arc[i].first][rec[i]].w)\tputs(\"0 0\");\n\t\telse\tprintf(\"%d %d\\n\",co[arc[i].first]!=co[arc[i].second],vi[arc[i].first]==1 && vi[arc[i].second]==2);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1639813356,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "\u533a\u5206\u5ea6\u5c31\u662f\u58ec\u58ec\u4e24\u767e"
    },
    {
        "content": "\u7f51\u7edc\u6d41\u7ecf\u5178\u9898\u578b\u3002\n\n\u6700\u5c0f\u5272\u5fc5\u7ecf\u8fb9/\u53ef\u884c\u8fb9 \u3002\n\n\u663e\u7136\u53ef\u884c\u8fb9\u5305\u542b\u5fc5\u7ecf\u8fb9\u3002\n\n\u53ef\u884c\u8fb9\u6ee1\u8db3\u7684\u7b2c\u4e00\u4e2a\u6761\u4ef6\uff1a\u5728\u6700\u5927\u6d41\u4e2d\u6ee1\u6d41\u3002\n\n\u6ca1\u6709\u6ee1\u6d41\uff0c\u8bf4\u660e\u6709\u4e00\u6761\u66f4\u5c0f\u7684\u8fb9\u6d41\u6ee1\u4e86\uff0c\u663e\u7136\u5272\u6389\u8fd9\u66f4\u5c0f\u7684\u8fb9\u4f1a\u4f7f\u5f97\u7b54\u6848\u66f4\u4f18\u3002\n\n\u53ef\u884c\u8fb9\u6ee1\u8db3\u7684\u7b2c\u4e8c\u4e2a\u6761\u4ef6\uff1a\u5728\u5269\u4f59\u7f51\u7edc\u4e2d\u6ca1\u6709$u\\to v$\u7684\u8def\u5f84\u3002\n\n\u5982\u679c\u5b58\u5728\u8def\u5f84\u3002\u5219$u\\to v$\u53ef\u4ee5\u9000\u6d41\uff0c\u8fd9\u6837\u5c31\u4e0d\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u6761\u4ef6\u4e86\u3002\n\n\u53ef\u884c\u8fb9\u5fc5\u987b\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u6761\u4ef6\u3002\n\n\u5fc5\u7ecf\u8fb9\u6ee1\u8db3\u7684\u7b2c\u4e09\u4e2a\u6761\u4ef6\uff1a\u5728\u5269\u4f59\u7f51\u7edc\u4e2d\u5b58\u5728$S\\to u$\uff0c$v\\to T$\u7684\u8def\u5f84\u3002\n\n\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u3002\u65e2\u7136\u6e90\u70b9\uff0c\u56de\u70b9\u53ef\u4ee5\u5230\u8fd9\u6761\u8fb9\u4e24\u7aef\uff0c\u90a3\u4e48\u74f6\u9888\u4e00\u5b9a\u5728\u5f53\u524d\u8fb9\u3002\n\n\u6240\u4ee5\u5f53\u524d\u8fb9\u7684\u5bb9\u91cf\u6539\u53d8\uff0c\u4e00\u5b9a\u4f1a\u4f7f\u5f97\u6700\u5927\u6d41\u6539\u53d8\uff0c\u4ece\u800c\u4f7f\u6700\u5c0f\u5272\u6539\u53d8\u3002\n\n\u6240\u4ee5\u5f53\u524d\u8fb9\u4e3a\u5fc5\u7ecf\u8fb9\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<=b;i++)\n#define pre(i,a,b) for(int i=a;i>=b;i--)\n#define N 20005\nusing namespace std;\nint h[N],tot=1,mat[N<<2];\nstruct edge{\n\tint to,nxt,cap;\n}e[N<<3];\nvoid add(int x,int y,int z){\n\te[++tot].nxt=h[x];h[x]=tot;e[tot].to=y;e[tot].cap=z;\n\te[++tot].nxt=h[y];h[y]=tot;e[tot].to=x;e[tot].cap=0;\n}\nint d[N],s,t;queue<int>q;\nbool bfs(){\n\tmemset(d,0,sizeof(d));\n\td[s]=1;q.push(s);\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=h[x];i;i=e[i].nxt)if(!d[e[i].to]&&e[i].cap)\n\t\t\td[e[i].to]=d[x]+1,q.push(e[i].to);\n\t}\n\treturn d[t]?1:0;\n}\nint dfs(int x,int flow){\n\tif(x==t)return flow;\n\tint res=flow;\n\tfor(int i=h[x];i;i=e[i].nxt){\n\t\tint y=e[i].to;\n\t\tif(!e[i].cap||d[y]!=d[x]+1)continue;\n\t\tint now=dfs(y,min(e[i].cap,res));\n\t\tif(!now)d[y]=0;\n\t\te[i].cap-=now;e[i^1].cap+=now;res-=now;\n\t\tif(!res)return flow;\n\t}\n\treturn flow-res;\n}\nint n,m;\nstruct node{\n\tint x,y,z;\n}a[N<<3];\nint dfn[N],low[N],idx,sta[N],top,v[N],cnt,pos[N];\nvoid dfs(int x){\n\tdfn[x]=low[x]=++idx;sta[++top]=x;v[x]=1;\n\tfor(int i=h[x];i;i=e[i].nxt)if(e[i].cap){\n\t\tif(!dfn[e[i].to])dfs(e[i].to),low[x]=min(low[x],low[e[i].to]);\n\t\telse if(v[e[i].to])low[x]=min(low[x],dfn[e[i].to]);\n\t}\n\tif(low[x]==dfn[x]){\n\t\t++cnt;\n\t\twhile(true){\n\t\t\tint y=sta[top--];\n\t\t\tv[y]=0;pos[y]=cnt;\n\t\t\tif(x==y)return ;\n\t\t}\n\t}\n}\nint hav[N][2];\nvoid calc(){\n\tq.push(s);hav[s][0]=1;\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=h[x];i;i=e[i].nxt)if(e[i].cap&&!hav[e[i].to][0])\n\t\t\thav[e[i].to][0]=1,q.push(e[i].to);\n\t}\n\tq.push(t);hav[t][1]=1;\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=h[x];i;i=e[i].nxt)if(e[i^1].cap&&!hav[e[i].to][1])\n\t\t\thav[e[i].to][1]=1,q.push(e[i].to);\n\t}\n}\nint main(){\n\tscanf(\"%d%d%d%d\",&n,&m,&s,&t);\n\trep(i,1,m){\n\t\tscanf(\"%d%d%d\",&a[i].x,&a[i].y,&a[i].z);\n\t\tadd(a[i].x,a[i].y,a[i].z);mat[i]=tot^1;\n\t}\n\twhile(bfs())dfs(s,0x7fffffff);\n\trep(i,1,n)if(!dfn[i])dfs(i);\n\tcalc();\n\trep(i,1,m){\n\t\tif(!e[mat[i]].cap){\n\t\t\tif(pos[a[i].x]!=pos[a[i].y])printf(\"1 \");\n\t\t\telse {printf(\"0 0\\n\");continue;}\n\t\t\tif(hav[a[i].x][0]&&hav[a[i].y][1])puts(\"1\");\n\t\t\telse puts(\"0\");\n\t\t}\n\t\telse puts(\"0 0\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1600908921,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4126 \u3010[AHOI2009]\u6700\u5c0f\u5272\u3011"
    },
    {
        "content": "\u9898\u76ee\u5730\u5740\uff1a[P4126 [AHOI2009]\u6700\u5c0f\u5272](https://www.luogu.org/problemnew/show/P4126)\n\n#### \u6700\u5c0f\u5272\u7684\u53ef\u884c\u8fb9\u4e0e\u5fc5\u987b\u8fb9\n\n\u9996\u5148\u6c42\u6700\u5927\u6d41\uff0c\u90a3\u4e48\u6700\u5c0f\u5272\u7684\u53ef\u884c\u8fb9\u4e0e\u5fc5\u987b\u8fb9\u90fd\u5fc5\u987b\u662f**\u6ee1\u6d41**\u3002\n\n* \u53ef\u884c\u8fb9\uff1a\u5728\u6b8b\u91cf\u7f51\u7edc\u4e2d\u4e0d\u5b58\u5728 $x$ \u5230 $y$ \u7684\u8def\u5f84\uff08\u5f3a\u8fde\u901a\u5206\u91cf\uff09\uff1b\n\n* \u5fc5\u987b\u8fb9\uff1a\u5728\u6b8b\u91cf\u7f51\u7edc\u4e2d $S$ \u80fd\u5230 $x$ && $y$ \u80fd\u5230 $T$ \u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 4e3 + 6, M = 6e4 + 6, inf = 1e9;\nint n, m, s, t, d[N], f[N];\nint Head[N], Edge[M<<1], Leng[M<<1], Next[M<<1], tot = 1;\nstruct E {\n    int x, y, z;\n} e[M<<1];\nint dfn[N], low[N], num, st[N], top, ins[N], c[N], cnt;\n\ninline void add(int x, int y, int z) {\n    Edge[++tot] = y;\n    Leng[tot] = z;\n    Next[tot] = Head[x];\n    Head[x] = tot;\n}\n\ninline bool bfs() {\n    memset(d, 0, sizeof(d));\n    queue<int> q;\n    d[s] = 1;\n    q.push(s);\n    while (q.size()) {\n        int x = q.front();\n        q.pop();\n        for (int i = Head[x]; i; i = Next[i]) {\n            int y = Edge[i], z = Leng[i];\n            if (d[y] || !z) continue;\n            d[y] = d[x] + 1;\n            q.push(y);\n            if (y == t) return 1;\n        }\n    }\n    return 0;\n}\n\nint dinic(int x, int flow) {\n    if (x == t) return flow;\n    int rest = flow;\n    for (int i = Head[x]; i && rest; i = Next[i]) {\n        int y = Edge[i], z = Leng[i];\n        if (d[y] != d[x] + 1 || !z) continue;\n        int k = dinic(y, min(z, rest));\n        if (!k) d[y] = 0;\n        else {\n            Leng[i] -= k;\n            Leng[i^1] += k;\n            rest -= k;\n        }\n    }\n    return flow - rest;\n}\n\nvoid dfs(int x, int k) {\n    f[x] = k;\n    for (int i = Head[x]; i; i = Next[i]) {\n        int y = Edge[i], z = Leng[i^(k-1)];\n        if (f[y] || !z) continue;\n        dfs(y, k);\n    }\n}\n\nvoid tarjan(int x) {\n    dfn[x] = low[x] = ++num;\n    st[++top] = x;\n    ins[x] = 1;\n    for (int i = Head[x]; i; i = Next[i]) {\n        int y = Edge[i], z = Leng[i];\n        if (!z) continue;\n        if (!dfn[y]) {\n            tarjan(y);\n            low[x] = min(low[x], low[y]);\n        } else if (ins[y])\n            low[x] = min(low[x], dfn[y]);\n    }\n    if (dfn[x] == low[x]) {\n        ++cnt;\n        int y;\n        do {\n            y = st[top--];\n            ins[y] = 0;\n            c[y] = cnt;\n        } while (x != y);\n    }\n}\n\nint main() {\n    cin >> n >> m >> s >> t;\n    for (int i = 1; i <= m; i++) {\n        scanf(\"%d %d %d\", &e[i].x, &e[i].y, &e[i].z);\n        add(e[i].x, e[i].y, e[i].z);\n        add(e[i].y, e[i].x, 0);\n    }\n    while (bfs())\n        while (dinic(s, inf));\n    dfs(s, 1);\n    dfs(t, 2);\n    for (int i = 1; i <= n; i++)\n        if (!dfn[i]) tarjan(i);\n    for (int i = 1; i <= m; i++) {\n        int k = i << 1;\n        if (Leng[k]) puts(\"0 0\");\n        else printf(\"%d %d\\n\", c[e[i].x] != c[e[i].y], f[e[i].x] == 1 && f[e[i].y] == 2);\n    }\n    return 0;\n}\n```",
        "postTime": 1552035397,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "P4126 [AHOI2009]\u6700\u5c0f\u5272"
    },
    {
        "content": "#### \u6ce8\uff1a\u611f\u8c22 command_block \u9898\u89e3\u548c\u4e07\u80fd\u7684 uoj \u7fa4\u53cb\uff0e\n\n\u53ef\u884c\u8fb9\u6307\u5b58\u5728\u4e8e\u81f3\u5c11\u4e00\u4e2a\u6700\u5c0f\u5272\u96c6\u4e2d\u7684\u8fb9\uff0e  \n\u5fc5\u987b\u8fb9\u6307\u5305\u542b\u4e8e\u4efb\u610f\u6700\u5c0f\u5272\u96c6\u4e2d\u7684\u8fb9\uff0e  \n\u53d1\u73b0\u9898\u76ee\u7684\u4e24\u95ee\u5206\u522b\u4e3a\u5224\u65ad\u53ef\u884c\u8fb9\u548c\u5224\u65ad\u5fc5\u987b\u8fb9\uff0e  \n\u6211\u4eec\u73b0\u5728\u8003\u8651\u5224\u65ad\u65b9\u6cd5\uff0e\n\n\u8bbe\u6700\u5927\u6d41\u5f97\u5230\u7684\u67d0\u4e00\u4e2a\uff08\u4efb\u610f\u4e00\u4e2a\uff09\u6b8b\u91cf\u7f51\u7edc\u4e3a $G$\uff0e\n\n#### $part\\;1$ \u53ef\u884c\u8fb9\uff0e  \n\u5bf9\u4e8e\u4e00\u6761\u8fb9 $e$\uff0c\u5982\u679c\u5b83\u5728 $G$ \u4e0a\u4e0d\u662f\u6ee1\u6d41\uff08\u6ee1\u6d41\u6307\u6700\u5927\u6d41\u540e\u8fb9\u6743\u51cf\u4e3a $0$, \u5373\u88ab\u6d41\u6ee1\u4e86\uff09\uff0c\u5219\u5c06 $e$ \u7684\u8fb9\u6743 $-eps$\uff08\u5373\u51cf\u5c11\u4e00\u4e2a\u5fae\u5c0f\u503c\uff09\u4e4b\u540e\uff0c\u6700\u5927\u6d41\u7684\u5927\u5c0f\u6ca1\u6709\u53d8\u5316\uff1b\u800c\u5982\u679c\u5176\u6ee1\u6d41\uff0c\u8fd9\u6837\u64cd\u4f5c\u6700\u5927\u6d41\u80af\u5b9a\u4f1a\u53d8\u5c0f\uff0e\u82e5 $e$ \u4e0d\u6ee1\u6d41\uff0c\u5219\u5047\u8bbe $e$ \u5b58\u5728\u4e8e\u4e00\u79cd\u6700\u5c0f\u5272\u96c6\u4e2d\uff0c\u5c06 $e$ \u7684\u8fb9\u6743 $-eps$\uff0c\u6700\u5c0f\u5272\u96c6\u7684\u5927\u5c0f\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u800c\u6839\u636e\u6700\u5927\u6d41\u7b49\u4e8e\u6700\u5c0f\u5272\uff0c\u6700\u5927\u6d41\u4e5f\u56e0\u53d1\u751f\u53d8\u5316\uff0c\u800c\u8fd9\u4e8e\u4e0a\u6587\u7684\u7ed3\u8bba\u4e0d\u7b26\uff0e\u8fd9\u5c31\u8bc1\u660e\u4e86\uff0c\u5b58\u5728\u4e00\u79cd\u6700\u5927\u6d41\u540e\u7684\u6b8b\u91cf\u7f51\u7edc\u4f7f\u5f97 $e$ \u4e0d\u6ee1\u6d41\u7b49\u4ef7\u4e8e\uff08\u5f53\u4e14\u4ec5\u5f53\uff09$e$ \u4e0d\u88ab\u5305\u542b\u5728\u4efb\u610f\u4e00\u4e2a\u6700\u5c0f\u5272\u96c6\u4e2d\uff0e  \n\u5bf9\u4e8e\u4e00\u6761\u8fb9  $e=(u \\rightarrow v, w)$ \u5728\u8fdb\u884c\u6700\u5927\u6d41\u540e\u82e5\u88ab\u6d41\u6ee1\uff0c\u5219\u6709\u53ef\u80fd\u4e3a\u53ef\u884c\u8fb9\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u786e\u5b9a\u5224\u65ad\uff0e\u6211\u4eec\u8003\u8651\u82e5\u5b58\u5728\u4e00\u79cd\u6700\u5927\u6d41\u540e\u7684\u6b8b\u91cf\u7f51\u7edc\u4f7f\u5f97 $e$ \u6d41\u4e0d\u6ee1\uff0c\u5219\u5e94\u8be5\u6ee1\u8db3\u53ef\u4ee5\u627e\u5230 $u \\rightarrow v$ \u7684\u53e6\u4e00\u6761\u589e\u5e7f\u8def\u5f84\u4f7f\u5f97 $v$ \u4ea4\u8fd8\u7ed9 $u$ \u4e00\u4e9b\u6d41\u91cf\uff08\u6d41\u7ecf $e$ \u7684\uff09\u540e\uff0c$u$ \u53ef\u4ee5\u4e0d\u901a\u8fc7 $e$ \u5c06\u5176\u9001\u5230 $v$\uff0e\u5bf9\u5e94\u5728\u5f53\u524d\u7684\u6b8b\u91cf\u7f51\u7edc\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad $u$ \u548c $v$ \u662f\u5426\u5728\u540c\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u91cc\u5373\u53ef\uff08\u8bf7\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u5f3a\u8054\u901a\u5206\u91cf\u6307\u7684\u662f\u7531\u6b8b\u91cf\u7f51\u7edc\u4e0a\u4e0d\u8d70\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\u540e\u6c42\u5f97\u7684\u5f3a\u8054\u901a\u5206\u91cf\uff09\uff0e\n\n#### $part\\;2$ \u5fc5\u987b\u8fb9\uff0e  \n\u5fc5\u987b\u8fb9\u96c6\u5305\u542b\u4e8e\u53ef\u884c\u8fb9\u96c6\uff0e\u6211\u4eec\u6cbf\u7528 $part\\;1$ \u4e2d\u7684\u601d\u8def\uff0c\u6c42\u51fa\u6b8b\u91cf\u7f51\u7edc\u4e0a\u4e0d\u8d70 0 \u8fb9\u540e\u7684\u7f29\u70b9\u56fe $G^{'}$\uff08$G^{'}$ \u7684\u8fb9\u96c6\u662f\u539f\u56fe\u4e2d\u6ee1\u6d41\uff0c\u5e76\u4e14\u5728\u7f29\u70b9\u540e\u4e0d\u6210\u81ea\u73af\u7684\u8fb9\uff0c\u5373\u4f7f\u7528\u6709\u6b8b\u4f59\u6d41\u91cf\u8fb9\u7f29\u70b9\u5f97\u5230\u7684\u65b0\u56fe\u518d\u7528\u6ee1\u6d41\u8fb9\u8fde\u63a5\uff09\uff0e\u53ef\u4ee5\u53d1\u73b0\uff0c$G^{'}$ \u4e0a\u7684\u8fb9\u5c31\u662f\u53ef\u884c\u8fb9\u96c6\uff0e\u4efb\u610f\u4e00\u79cd\u6700\u5c0f\u5272\uff0c\u5e94\u90fd\u662f\u82e5\u5e72\u4e2a $G^{'}$ \u4e2d\u7684\u8fb9\u7ec4\u6210\u7684\uff0c\u5e76\u4e14 $G^{'}$ \u4e2d\u4efb\u610f\u4e00\u79cd\u7d27\u7684\u5272\u90fd\u662f\u6700\u5c0f\u5272\uff0e  \n\u8fd9\u91cc\u5148\u63d0\u4f9b\u4e00\u79cd\u6784\u9020\u6700\u5c0f\u5272\u96c6\u7684\u65b9\u6cd5\uff0e\u5c06 $G^{'}$ \u4e0a\u7684\u70b9\u5212\u5206\u6210\u4e24\u4e2a\u8054\u901a\u5757\uff0c\u4e00\u90e8\u5206\u548c $s$ \u76f8\u8fde\uff0c\u8bb0\u4f5c $S$ \u96c6\uff0c\u53e6\u4e00\u90e8\u5206\u548c $t$ \u76f8\u8fde\uff0c\u8bb0\u4f5c $T$ \u96c6\uff0c\u5c06 $S$ \u96c6\u548c $T$ \u96c6\u95f4\u7684\u8fb9\u5272\u6389\uff0c\u5373\u6784\u9020\u51fa\u4e86\u4e00\u79cd\u6700\u5c0f\u5272\uff0e  \n\u6211\u4eec\u5bf9\u4e8e $e=(u \\rightarrow v)$\uff0c\u82e5 $v$ \u6240\u5728\u7684\u5f3a\u8054\u901a\u5206\u91cf\u4e0e $t$ \u6240\u5728\u7684\u5f3a\u8054\u901a\u5206\u91cf\u4e0d\u540c\uff0c\u6211\u4eec\u6784\u9020  $S=\\left\\{ x|x \\in path_{s \\rightarrow v} \\right\\}$\uff0c\u82e5 $u$ \u6240\u5728\u7684\u5f3a\u8054\u901a\u5206\u91cf\u548c $s$ \u6240\u5728\u7684\u5f3a\u8054\u901a\u5206\u91cf\u4e0d\u540c\uff0c\u6211\u4eec\u6784\u9020 $T=\\left\\{ x|x \\in path_{u \\rightarrow t} \\right\\}$\uff0e\u8fd9\u4e24\u4e2d\u60c5\u51b5\u90fd\u53ef\u4ee5\u6784\u9020\u51fa $e$ \u4e0d\u5272\u7684\u4e00\u79cd\u6700\u5c0f\u5272\u96c6\u51fa\u6765\uff0c\u6613\u77e5 $e$ \u4e0d\u662f\u5fc5\u987b\u8fb9\uff1b\u800c\u5269\u4e0b\u7684\u60c5\u51b5\uff0c\u5373 $s$ \u4e0e $u$ \u5728\u540c\u4e00\u5f3a\u8054\u901a\u5206\u91cf\u5e76\u4e14 $v$ \u4e0e $t$ \u5728\u540c\u4e00\u5f3a\u8054\u901a\u5206\u91cf\uff0c\u53ef\u5f97\u77e5 $e$ \u4e00\u5b9a\u4e3a\u5fc5\u987b\u8fb9\uff0e\u6545\u4e5f\u53ef\u4ee5\u8fd9\u6837\u5224\u65ad\u5fc5\u987b\u8fb9\uff1a\u6cbf\u7740\u6b8b\u91cf\u7f51\u7edc\u4e2d\u7684\u975e $0$ \u8fb9\uff0c$s$ \u53ef\u505a\u5230\u8fbe $u$\uff0c$v$\u53ef\u4ee5\u5230\u8fbe $t$\uff0e\n\n#### code\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define pii pair<int, int>\n#define fr first\n#define sc second\nusing namespace std;\ninline int rd(void){\n\tint s=0, f=1; char c=getchar();\n\twhile(c<'0' || c>'9') {if(c=='-') f=0; c=getchar();}\n\twhile(c>='0' && c<='9') {s=s*10+c-'0'; c=getchar();}\n\treturn f? s:-s;\n}\nconst int N=4005, M=60005, inf=2e9;\n\nstruct edge{int to, w, nt;} e[M<<1]; int hd[N], ect=1;\nvoid _ade(int u, int v, int w){e[++ect]={v, w, hd[u]}; hd[u]=ect;}\nvoid ade(int u, int v, int w){_ade(u, v, w); _ade(v, u, 0);}\n\nstruct node{int u, v, id;} g[M];\n\nint dep[N];\nbool bfs(int S, int T){\n\tmemset(dep, -1, sizeof(dep));\n\tdep[S]=0;\n\tqueue<int> q;\n\tq.push(S);\n\twhile(!q.empty()){\n\t\tint u=q.front(); q.pop();\n\t\tfor(int i=hd[u]; i; i=e[i].nt){\n\t\t\tint v=e[i].to;\n\t\t\tif(e[i].w && dep[v]==-1){\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn ~dep[T];\n}\n\nint cur[N];\nint dfs(int u, int flow, int T){\n\tif(u==T) return flow;\n\tfor(int i=cur[u]; i; i=e[i].nt){\n\t\tint v=e[i].to;\n\t\tcur[u]=i;\n\t\tif(e[i].w && dep[v]==dep[u]+1){\n\t\t\tint nflow=dfs(v, min(flow, e[i].w), T);\n\t\t\tif(nflow){\n\t\t\t\te[i].w-=nflow;\n\t\t\t\te[i^1].w+=nflow;\n\t\t\t\treturn nflow;\n\t\t\t}\n\t\t\telse dep[v]=-1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint dinic(int S, int T){\n\tint totflow=0, nflow=0;\n\twhile(bfs(S, T)){\n\t\tmemcpy(cur, hd, sizeof(hd));\n\t\twhile(nflow=dfs(S, inf, T)) totflow+=nflow;\n\t}\n\treturn totflow;\n}\n\nint n, m, s, t;\n\nint id, bid, dfn[N], low[N], bel[N], fstk[N];\nstack<int> stk;\nvoid tarjan(int u){\n\tdfn[u]=low[u]=++id;\n\tstk.push(u);\n\tfstk[u]=1;\n\tfor(int i=hd[u]; i; i=e[i].nt){\n\t\tint v=e[i].to;\n\t\tif(!e[i].w) continue;\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u], low[v]);\n\t\t}\n\t\telse if(fstk[v]) low[u]=min(low[u], dfn[v]);\n\t}\n\tif(dfn[u]==low[u]){\n\t\tbid++;\n\t\twhile(1){\n\t\t\tint x=stk.top(); stk.pop();\n\t\t\tbel[x]=bid;\n\t\t\tfstk[x]=0;\n\t\t\tif(x==u) break;\n\t\t}\n\t}\n}\n\nsigned main(){\n\tn=rd(), m=rd(), s=rd(), t=rd();\n\tfor(int i=1, u, v, w; i<=m; i++){\n\t\tu=rd(), v=rd(), w=rd();\n\t\tg[i]={u, v, ect+1};\n\t\tade(u, v, w);\n\t}\n\tdinic(s, t);\n\tfor(int i=1; i<=n; i++) if(!dfn[i]) tarjan(i);\n\t\n\tfor(int i=1, u, v; i<=m; i++){\n\t\tu=g[i].u, v=g[i].v;\n\t\tif(e[g[i].id].w==0&& bel[u]!=bel[v]){\n\t\t\tprintf(\"1 \");\n\t\t\tif(bel[u]==bel[s] && bel[v]==bel[t]) printf(\"1\");\n\t\t\telse printf(\"0\");\n\t\t}\n\t\telse printf(\"0 0\");\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1684598224,
        "uid": 456415,
        "name": "ckain",
        "ccfLevel": 6,
        "title": "P4126 [AHOI2009]\u6700\u5c0f\u5272 \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u628a\u539f\u56fe\u5efa\u51fa\u6765\u540e\u5229\u7528\u6700\u5c0f\u5272\u6700\u5927\u6d41\u5b9a\u7406\u8dd1\u4e00\u8fb9\u6700\u5c0f\u5272\uff0c\u8fd9\u662f\u6bd4\u8f83\u660e\u663e\u7684\u3002\n\n\u90a3\u4e48\u73b0\u5728\u518d\u6765\u8003\u8651\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0c\u5148\u89e3\u51b3\u7b2c\u4e00\u4e2a\uff0c\u662f\u5426\u5b58\u5728\u4e00\u6761\u6700\u5c0f\u5272\u7684\u65b9\u6848\u4f7f\u5f97\u8fd9\u6761\u9053\u8def\u88ab\u5207\u65ad\uff1f\n\n\u901a\u8fc7\u624b\u6a21\u4ee5\u53ca\u601d\u60f3\u5b9e\u9a8c\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u5728\u6b8b\u91cf\u7f51\u7edc\u4e2d\uff0c\u8fd9\u6761\u8fb9\u7684\u6d41\u91cf\u5fc5\u987b\u4e3a $0$\uff08\u4e0d\u7136\u8fd9\u6761\u8fb9\u5272\u4e86\u4e5f\u6ca1\u7528\uff0c\u4f1a\u6709\u5176\u5b83\u66f4\u597d\u7684\u8fb9\u66ff\u4ee3\u5b83\uff0c\u5b83\u4e0d\u53ef\u80fd\u5b58\u5728\u4e8e\u6700\u5c0f\u5272\u4e2d\uff09\uff0c\u8fd9\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u7531\u6b64\u53ef\u4ee5\u63a8\u51fa\uff0c\u8fd9\u4e24\u4e2a\u70b9\u4e5f\u4e0d\u80fd\u901a\u8fc7\u5176\u5b83\u6d41\u91cf\u975e $0$ \u7684\u8def\u5f84\u5230\u8fbe\uff0c\u5426\u5219\u8fd9\u6761\u8fb9\u5272\u4e86\u4e5f\u6ca1\u7528\u3002\n\n\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u663e\u7136\u9700\u8981\u7528\u5230 ``Tarjan`` \u7b97\u6cd5\uff0c\u5c06\u539f\u56fe\u53d8\u6210\u4e00\u4e2a ``DAG``\uff0c\u4fdd\u8bc1 $scc_u$ \u4e0d\u7b49\u4e8e $scc_v$\u3002\n\n\u7136\u540e\u6765\u7814\u7a76\u7b2c\u4e8c\u4e2a\u95ee\u9898\u3002\n\n\u601d\u8def\u5c31\u6bd4\u8f83\u660e\u663e\u4e86\uff0c\u6211\u4eec\u5fc5\u987b\u4fdd\u8bc1 $scc_s=scc_u$\uff0c\u5e76\u4e14 $scc_v=scc_t$\uff0c\u5f53\u7136\u8fd9\u662f\u5728\u8fd9\u6761\u8fb9\u6d41\u91cf\u4e3a $0$ \u65f6\u624d\u80fd\u8003\u8651\u3002\n\n\u6bd4\u8f83\u5bb9\u6613\u8bc1\u660e\uff0c\u5982\u679c\u6b64\u65f6 $u$ \u4e0e\u6e90\u70b9\u4e0d\u8fde\u901a\uff0c\u6216\u8005 $v$ \u4e0e\u6c47\u70b9\u4e0d\u8fde\u901a\uff0c\u90a3\u4e48\u8bf4\u660e\u53ef\u4ee5\u627e\u5230\u66f4\u597d\u7684\u8fb9\u66ff\u4ee3\u8fd9\u6761\u8fb9\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u5c31\u6ca1\u6709\u610f\u4e49\u4e86\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\uff1a\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u95ee\u9898\uff1a\n\n1. \u6b8b\u91cf\u7f51\u7edc\u4e2d\uff0c\u8fd9\u6761\u8fb9\u6d41\u91cf\u4e3a $0$\u3002\n\n2. \u5728\u53c2\u91cf\u7f51\u7edc\u7f29\u6210\u7684 ``Tarjan`` \u4e2d\uff0c$scc_u$ \u4e0d\u7b49\u4e8e $scc_v$\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff1a\n\n1. \u6b8b\u91cf\u7f51\u7edc\u4e2d\uff0c\u8fd9\u6761\u8fb9\u6d41\u91cf\u4e3a $0$\u3002\n\n2. \u5728\u53c2\u91cf\u7f51\u7edc\u7f29\u6210\u7684 ``Tarjan`` \u4e2d\uff0c$scc_s=scc_u$ \u4e14 $scc_v=scc_t$\u3002\n\nCode\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tint sss=0;\n\tchar chh=getchar();\n\twhile(chh<'0'||chh>'9') chh=getchar();\n\twhile(chh>='0'&&chh<='9'){\n\t\tsss=sss*10+chh-'0';\n\t\tchh=getchar();\n\t}\n\treturn sss;\n}\nint n,m,S,T;\nint head[4005],to[1000005],val[1000005],nxt[1000005],tot=1;\nint depth[4005];\nint dfn[4005],low[4005],cnt=0;\nint scc[4005],scc_num=0;\nstack<int> s;\nbool insta[4005];\nstruct Gragh{\n\tint u,v;\n}gragh[200005];\nbool bfs(){\n\tmemset(depth,0,sizeof depth); depth[S]=1;\n\tqueue<int> q; q.push(S);\n\twhile(!q.empty()){\n\t\tint x=q.front(); q.pop();\n\t\tfor(register int i=head[x];i;i=nxt[i]){\n\t\t\tif(!val[i]) continue;\n\t\t\tint u=to[i];\n\t\t\tif(!depth[u]){\n\t\t\t\tdepth[u]=depth[x]+1;\n\t\t\t\tq.push(u);\n\t\t\t}\n\t\t}\n\t}\n\treturn depth[T];\n}\nint dfs(int now,int flow){\n\tif(now==T) return flow;\n\tint out_flow=0;\n\tfor(register int i=head[now];i&&flow;i=nxt[i]){\n\t\tint u=to[i];\n\t\tif(val[i]&&depth[u]==depth[now]+1){\n\t\t\tint tmp=dfs(u,min(flow,val[i]));\n\t\t\tflow-=tmp,out_flow+=tmp;\n\t\t\tval[i]-=tmp,val[i^1]+=tmp;\n\t\t}\n\t}\n\tif(out_flow==0) depth[now]=0;\n\treturn out_flow;\n}\nint Dinic(){\n\tint ans=0;\n\twhile(bfs()) ans+=dfs(S,1e9);\n\treturn ans;\n}\nvoid add(int u,int v,int w){\n\tto[++tot]=v;\n\tval[tot]=w;\n\tnxt[tot]=head[u];\n\thead[u]=tot;\n\tgragh[tot].u=u;\n\tgragh[tot].v=v;\n}\nvoid add_edge(int u,int v,int w){\n\tadd(u,v,w),add(v,u,0);\n}\nvoid Tarjan(int now){\n\tdfn[now]=low[now]=++cnt;\n\tinsta[now]=true; s.push(now);\n\tfor(register int i=head[now];i;i=nxt[i]){\n\t\tif(!val[i]) continue;\n\t\tint u=to[i];\n\t\tif(!dfn[u]){\n\t\t\tTarjan(u);\n\t\t\tlow[now]=min(low[now],low[u]);\n\t\t}\n\t\telse if(insta[u]) low[now]=min(low[now],dfn[u]);\n\t}\n\tif(low[now]==dfn[now]){\n\t\tint tmp; scc_num++;\n\t\twhile(s.top()!=now){\n\t\t\ttmp=s.top(); s.pop();\n\t\t\tscc[tmp]=scc_num;\n\t\t\tinsta[tmp]=false;\n\t\t}\n\t\ts.pop();\n\t\tscc[now]=scc_num;\n\t\tinsta[now]=false;\n\t}\n}\nint main(){\n\tn=read(),m=read(),S=read(),T=read();\n\tint u,v,w;\n\tfor(register int i=1;i<=m;i++){\n\t\tu=read(),v=read(),w=read();\n\t\tadd_edge(u,v,w);\n\t}\n\tint now_flow=Dinic();\n\tfor(register int i=1;i<=n;i++){\n\t\tif(!dfn[i]) Tarjan(i);\n\t}\n\tfor(register int i=2;i<=tot;i+=2){\n\t\t//\u8fd8\u4e0d\u80fd\u4e71\u5b58\u8fb9\uff0c\u6ce8\u610f\u8fd9\u6837\u679a\u4e3e\u6bcf\u6761\u8fb9 \n\t\tint u=gragh[i].u,v=gragh[i].v,w=val[i];\n\t\tif(!w&&scc[u]!=scc[v]){\n\t\t\tcout<<\"1 \";\n\t\t\tif(scc[u]==scc[S]&&scc[v]==scc[T]){\n\t\t\t\tcout<<\"1\\n\";\n\t\t\t}\n\t\t\telse cout<<\"0\\n\";\n\t\t}\n\t\telse cout<<\"0 0\\n\";\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1652363173,
        "uid": 367316,
        "name": "Foreverxxx",
        "ccfLevel": 0,
        "title": "P4126 [AHOI2009]\u6700\u5c0f\u5272 \u9898\u89e3"
    },
    {
        "content": "## \u524d\u8a00\n\u770b\u5230\u5927\u5bb6\u90fd\u662f\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5199\u7684\u9898\u89e3\uff0c\u4f5c\u4e3a\u6d1b\u8c37\u6700\u52a3\u89e3\uff0c\u4e00\u5b9a\u8981\u53d1\u4e00\u7bc7 vector \u7684\u9898\u89e3\u4e2b~~\u6bd5\u7adf vector \u662f\u4fe1\u4ef0~~\n\n## \u9898\u89e3\n\n\u6211\u4eec\u5148\u8003\u8651\u4e00\u4e2a\u65e0\u6cd5\u518d\u589e\u5e7f\u7684\u6b8b\u7559\u7f51\u7edc\u4e2d\u6709\u4ec0\u4e48\u6027\u8d28\n\n\u56e0\u4e3a\u6b8b\u7559\u7f51\u7edc\u662f\u7531\u6b63\u5411\u8fb9\u548c\u5176\u5bf9\u5e94\u7684\u53cd\u5411\u8fb9\u7ec4\u6210\u7684\uff0c\u90a3\u4e48\u5bf9\u4e8e $x,y$ \u4e4b\u95f4\u7684\u67d0\u6761\u8fb9\u6ee1\u6d41\u540e\uff0c\u5176\u5bf9\u5e94\u7684\u53cd\u5411\u8fb9\u4e00\u5b9a\u6709\u6d41\u91cf\u3002\n\n\u8fd9\u65f6\uff0c\u5982\u679c $x,y$ \u95f4\u53e6\u6709\u4e00\u6761\u975e\u6ee1\u6d41\u8fb9\uff0c\u5219 $x,y$ \u95f4\u6784\u6210\u4e00\u4e2a\u5f3a\u8fde\u901a\u5757\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u5982\u679c\u5728\u4e00\u79cd\u65b9\u6848\u4e2d\u7684\u4e00\u6761\u8fb9**\u975e\u6ee1\u6d41**\uff0c\u800c\u8fd9\u6761\u8fb9\u5728\u5176\u5b83\u65b9\u6848\u4e2d**\u6ee1\u6d41**\u4e86\uff0c\u90a3\u4e48\u5fc5\u4f1a\u5bfc\u81f4\u539f\u65b9\u6848\u4e2d\u7684\u67d0\u4e00\u6761\u8fb9\u7531**\u6ee1\u6d41**\u53d8\u4e3a\u7531**\u975e\u6ee1\u6d41**(\u5982\u679c\u5b83\u8fd8\u662f\u6ee1\u6d41\u90a3\u4e48\u6700\u5927\u6d41\u5c31\u5e94\u8be5\u53d8\u5927\u4e86)\u3002\n\n\u90a3\u4e48\u8fd9\u4e24\u6761\u8fb9\u6709\u4ec0\u4e48\u6027\u8d28\u5462\uff1f\u5982\u679c\u6211\u4eec\u6cbf\u7740\u589e\u5e7f\u8def\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e24\u6761\u8fb9\u5e94\u8be5\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u4e2d\n\n\u6240\u4ee5\u8fd9\u9053\u9898\u6211\u4eec\u5c31\u505a\u5b8c\u4e86\uff1a\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u5224\u65ad\u5b83\u662f\u4e0d\u662f\u6ee1\u6d41\uff0c\u7136\u540e\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n\u5bf9\u4e8e\u5b58\u5728\u4e8e\u67d0\u79cd\u6700\u5c0f\u5272\u65b9\u6848\u4e2d\u7684\u8fb9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u8fd9\u6761\u8fb9\u7684\u4e24\u7aef\u662f\u5426\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u91cc\u3002\n\n\u5bf9\u4e8e\u5b58\u5728\u4e8e\u4efb\u4f55\u6700\u5c0f\u5272\u65b9\u6848\u4e2d\u7684\u8fb9\uff0c\u5b83\u7684\u4e24\u7aef\u4e00\u5b9a\u662f\u4e00\u7aef\u548c\u6e90\u70b9\u8054\u901a\uff0c\u4e00\u7aef\u548c\u6c47\u70b9\u8054\u901a\u7684\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int INF=0x3f3f3f3f;\n\nstruct zz{\n\tint u,w,id,idid;\n};\nvector<zz> v[1000005];\nmap<int,bool> mp[60006];\n\nstruct Dinic{\n\tint dist[1000005],be[1000005];\n\tint s,t;\n\tvoid Add(int x,int y,int z,int id){\n\t\tint idx=v[x].size(),idy=v[y].size();\n\t\tv[x].push_back((zz){y,z,idy,id});\n\t\tv[y].push_back((zz){x,0,idx,id});\n\t\tmp[y][id]=1;\n\t}\n\tbool BFS(){\n\t\tbool f=0;memset(dist,-1,sizeof dist);\n\t\tqueue<int> q;q.push(s);\n\t\tdist[s]=be[s]=0;\n\t\twhile(!q.empty()){\n\t\t\tint x=q.front();q.pop();\n\t\t\tint siz=v[x].size();\n\t\t\tfor(int i=0;i<siz;i++){\n\t\t\t\tint y=v[x][i].u,w=v[x][i].w;\n\t\t\t\tif(!w||dist[y]!=-1) continue;\n\t\t\t\tq.push(y),be[y]=0,dist[y]=dist[x]+1;\n\t\t\t\tif(y==t) f=1;\n\t\t\t}\n\t\t}\n\t\treturn f;\n\t}\n\tint DFS(int x,int sum){\n\t\tif(x==t||!sum) return sum;\n\t\tint siz=v[x].size(),ans=0;\n\t\tfor(int i=be[x];i<siz&&sum!=ans;i++){\n\t\t\tint y=v[x][i].u,w=v[x][i].w,id=v[x][i].id;be[x]=i;\n\t\t\tif(!w||dist[x]!=dist[y]-1) continue;\n\t\t\tint now=DFS(y,min(sum-ans,w));\n\t\t\tif(!now) dist[y]=0;\n\t\t\tv[x][i].w-=now,v[y][id].w+=now,ans+=now;\n\t\t}\n\t\treturn ans;\n\t}\n\tint dinic(){\n\t\tint ans=0,now=0;\n\t\twhile(BFS()) while(now=DFS(s,INF)) ans+=now;\n\t\treturn ans;\n\t}\n}T;\n\nint n,m;\nbool f[600005];\nbool FLAG[600006];\nbool vis[600006];                      \nstruct ss{\n\tint x,y;\n}a[100000];\n\nint col[100005];\nint DFSN[100005],Low[100005];\n\nstruct TarJan{\n\tbool qwq[100005];\n\tint tot=0,qwqtot=0;\n\tstack<int> st;\n\tvoid Tarjan(int x){\n\t\tDFSN[x]=Low[x]=++tot;\n\t\tst.push(x);qwq[x]=1;\n\t\tfor(int i=0;i<v[x].size();i++){\n\t\t\tint y=v[x][i].u;\n\t\t\tif(!v[x][i].w) continue;\n\t\t\tif(!DFSN[y]) Tarjan(y),Low[x]=min(Low[x],Low[y]);\n\t\t\telse if(qwq[y]) Low[x]=min(Low[x],DFSN[y]);\n\t\t}\n\t\tif(DFSN[x]==Low[x]){\n\t\t\tint now;++qwqtot;\n\t\t\tdo{\n\t\t\t\tnow=st.top();st.pop();\n\t\t\t\tqwq[now]=0,col[now]=qwqtot;\n\t\t\t}while(x!=now);\n\t\t}\n\t}\n}xf;\n\nint main(){\n\tcin>>n>>m>>T.s>>T.t;\n\tfor(int i=1,x,y,z;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tT.Add(x,y,z,i);\n\t}\n\tint ans=T.dinic();\n\tfor(int i=1;i<=n;i++) if(!DFSN[i]) xf.Tarjan(i);\n\tfor(int x=1;x<=n;x++){\n\t\tfor(int i=0;i<v[x].size();i++){\n\t\t\tint y=v[x][i].u,id=v[x][i].idid;\n\t\t\tif(v[x][i].w) continue;\n\t\t\tif(mp[x][id]) continue;\n\t\t\tif(col[x]!=col[y]) f[id]=1;\n\t\t\tif(col[x]==col[T.s]&&col[y]==col[T.t]) FLAG[id]=1;\n\t\t}\n\t} \n\tfor(int i=1;i<=m;i++) printf(\"%d %d\\n\",f[i],FLAG[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1639812702,
        "uid": 225883,
        "name": "MiRaciss",
        "ccfLevel": 7,
        "title": "P4126 \u9898\u89e3"
    },
    {
        "content": "\u4f3c\u4e4e\u6709\u51e0\u4e2a\u6027\u8d28\uff1a\n- **1.\u6b8b\u4f59\u7f51\u7edc\u4e2d\u6709\u5269\u4f59\u6d41\u91cf\u7684\u8fb9\u4e00\u5b9a\u4e0d\u5728\u6700\u5c0f\u5272\u4e2d**\n\n\u5982\u679c\u6709\u5269\u4f59\u6d41\u91cf\u7684\u8bdd\u80af\u5b9a\u8fd8\u6709\u66f4\u4f18\u89e3\n\n\u5982\u56fe\uff1a\n![](/img/study/zuixiaoge.png)\n\n\u6700\u5c0f\u5272\u4e3a$4$\uff0c\u5bb9\u91cf\u4e3a$5$\u7684\u8fb9\u6709\u5269\u4f59\u6d41\u91cf\uff0c\u5b83\u4e0d\u5728\u6700\u5c0f\u5272\u91cc\n\n- **2.\u6b8b\u4f59\u7f51\u7edc\u4e2d\u4e00\u6761\u8fb9\uff08\u6ee1\u8db3\u6027\u8d28$1$\uff09\u7684\u9996\u5c3e\u8fd8\u80fd\u76f8\u4e92\u5230\u8fbe\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u4e0d\u6ee1\u8db3\u6761\u4ef6$1$**\n\n\u6211\u4e2a\u4eba\u7406\u89e3\u662f\u4e00\u8fb9\u7684\u4e24\u70b9\u8fd8\u80fd\u76f8\u4e92\u5230\u8fbe\uff0c\u8bf4\u660e\u5b83\u4eec\u5728\u5272\u540e\u7684\u540c\u4e00\u70b9\u96c6\u5408\u4e2d\n\n\u8fde\u63a5\u5b83\u4eec\u7684\u8fb9\u5c31\u80af\u5b9a\u4e0d\u662f\u6700\u5c0f\u5272\u65b9\u6848\uff0c\u53cd\u4e4b\u8fde\u63a5\u5b83\u4eec\u7684\u8fb9\u5c31\u80af\u5b9a\u5728\u67d0\u4e2a\u6700\u5c0f\u5272\u65b9\u6848\u4e2d\n\n- **3.\u5728\u6b8b\u4f59\u7f51\u7edc\u4e2d\u4e00\u8fb9\uff08\u6ee1\u8db3\u6027\u8d28$1$\uff09\u7684\u9996\u5c3e\u5206\u522b\u4e0e$S$\u548c$T$\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u6ee1\u8db3\u6761\u4ef6$2$**\n\n\u5f88\u597d\u8bc1\u660e\u5427\u2026\u2026\n\n\u4f60\u5982\u679c\u4e0d\u5272\u8fd9\u6761\u8fb9\uff0c\u6700\u5927\u6d41\uff08\u5373\u6700\u5c0f\u5272\uff09\u80af\u5b9a\u5f97\u6539\u53d8\n\n\u6027\u8d28$2,3$\u90fd\u662f\u5728\u6027\u8d28$1$\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u7684\uff0c\u6027\u8d28$2$\u4e0d\u6ee1\u8db3\u6027\u8d28$3$\u80af\u5b9a\u4e5f\u4e0d\u6ee1\u8db3\n\n\u81f3\u4e8e\u662f\u5426\u8054\u901a\uff0c\u7528$Tarjan$\u5224\u65ad\u5c31\u884c\u4e86~~\u6211\u60f3\u7528\u5e76\u67e5\u96c6\u5931\u8d25\u4e86~~\n\n### \u4ee3\u7801\n```\n# include<iostream>\n# include<cstdio>\n# include<cstring>\n# include<queue>\n# include<stack>\n# define ini inline int\n# define inv inline void\n# define inb inline bool\nusing namespace std;\nconst int MAX=4e3+1,inf=1e8;\nstruct p{\n    int fr,x,y,dis;\n}c[MAX<<5];\nint n,m,s,t,num,TOT,ans,cnt;\nint h[MAX],d[MAX],col[MAX],dfn[MAX],low[MAX];\nbool use[MAX];\nstack<int> st;\nini read()\n{\n    int x=0;\n    char ch=getchar();\n    while(!isdigit(ch)) ch=getchar();\n    while(isdigit(ch))\n    {\n        x=x*10+ch-48;\n        ch=getchar(); \n    }\n    return x;\n}\ninv add(int x,int y,int dis)\n{\n    c[num].fr=y,c[num].x=h[y],c[num].y=x,c[num].dis=0,h[y]=num++;\n    c[num].fr=x,c[num].x=h[x],c[num].y=y,c[num].dis=dis,h[x]=num++;\n}\ninb bfs()\n{\n    queue<int> qu;\n    memset(d,0,sizeof(d));\n    d[s]=1;\n    qu.push(s);\n    while(!qu.empty())\n    {\n        int tt=qu.front();\n        qu.pop();\n        for(int i=h[tt];i;i=c[i].x)\n          if(!d[c[i].y]&&c[i].dis)\n          {\n          \td[c[i].y]=d[tt]+1;\n          \tqu.push(c[i].y);\n          }\n    }\n    return d[t];\n}\nint dfs(int x,int dix)\n{\n    if(x==t||!dix) return dix;\n    int sum=0;\n    for(int i=h[x];i;i=c[i].x)\n      if(d[c[i].y]==d[x]+1&&c[i].dis)\n      {\n      \tint dis=dfs(c[i].y,min(dix,c[i].dis));\n      \tif(dis)\n      \t{\n      \t\tsum+=dis;\n      \t\tdix-=dis;\n      \t\tc[i].dis-=dis;\n      \t\tc[i^1].dis+=dis;\n      \t\tif(!dix) break;\n        }\n      }\n    if(!sum) d[x]=-1;\n    return sum;\n}\ninv dinic()\n{\n    while(bfs()) dfs(s,inf);\n}\nvoid tarjan(int x)\n{\n    dfn[x]=low[x]=++cnt;\n    use[x]=1;\n    st.push(x);\n    for(int i=h[x];i;i=c[i].x)\n      if(c[i].dis)\n      if(!dfn[c[i].y])\n      tarjan(c[i].y),low[x]=min(low[x],low[c[i].y]);\n      else if(use[c[i].y])\n      low[x]=min(low[x],dfn[c[i].y]);\n    if(low[x]==dfn[x])\n    {\n        ans++;\n        int tt=-1;\n        while(tt!=x)\n        {\n            tt=st.top();\n            st.pop();\n            col[tt]=ans;\n            use[tt]=0;\n        }\n    }\n}\nint main()\n{\n    n=read(),m=read(),s=read(),t=read();\n    for(int i=1;i<=m;i++)\n      {\n      \tint x=read(),y=read(),dis=read();\n      \tadd(x,y,dis);\n      }\n    dinic();\n    for(int i=1;i<=n;i++)\n      if(!dfn[i]) tarjan(i);\n    for(int i=1;i<num;i+=2)\n      {\n        if(c[i].dis)\n      \t{\n      \t\tprintf(\"0 0\\n\");\n      \t\tcontinue;\n        }\n      \tif(col[c[i].fr]==col[c[i].y])\n      \tprintf(\"0 \");\n      \telse printf(\"1 \");\n      \tif(col[c[i].fr]==col[s]&&col[c[i].y]==col[t])\n      \tprintf(\"1\\n\");\n      \telse printf(\"0\\n\");\n      }\n    return 0;\n}\n```\n### [\u535a\u5ba2](https://a-failure.github.io/2018/04/03/AHOI2009-%E6%9C%80%E5%B0%8F%E5%89%B2/)",
        "postTime": 1517925697,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4126 \u3010[AHOI2009]\u6700\u5c0f\u5272\u3011"
    }
]