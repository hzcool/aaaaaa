[
    {
        "content": "\u9996\u5148\u5c06n\u8fdb\u884c\u8f6c\u6210\u56db\u8fdb\u5236\uff0c\u8bb0\u5f55\u5728T\u6570\u7ec4\u91cc\u9762(T[1]\u4e3a\u6700\u4f4e\u4f4d)\uff0c\u7136\u540e\u8003\u8651\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4dDP\u3002\n\n\u6211\u4eec\u8bbef[i]\u8868\u793a\u4e0d\u8fdb\u884c\u501f\u4f4d\uff0cg[i]\u8868\u793a\u5411\u9ad8\u4f4d\u501f\u4e00\u4f4d\u3002\n\n\u5982\u679c\u501f\u5230\u4e86\u4e00\u4f4d\u662f\u4e0d\u80fd\u7b97\u5728\u7b2ci\u4f4d\u91cc\u9762\u7684\uff0c\u56e0\u4e3a\u4e0d\u8bba\u662ff[i]\u8fd8\u662fg[i]\u8bb0\u5f55\u7684\u90fd\u662f$4^i$\uff0c\u4e0d\u8bba\u6b63\u8d1f\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b:\n\nf[i]=merge(f[i-1]+T[i],g[i-1]+1+T[i]);\n\ng[i]=merge(f[i-1]+4-T[i],g[i-1]+3-T[i]);\n\n\u4e4b\u6240\u4ee5\u8981\u7528merge\u662f\u56e0\u4e3af[i],g[i]\u8bb0\u5f55\u4e86\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u7528\u4e86\u591a\u5c11\u4e2a\u6570\uff0c\u4e00\u4e2a\u662f\u65b9\u6848\u6570\u3002\n\n\u4ee3\u7801\u8be6\u89c1[\u6211\u7684\u535a\u5ba2](http://www.cnblogs.com/Wolfycz/p/8945344.html)",
        "postTime": 1524659645,
        "uid": 21633,
        "name": "Wolfycz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3464 \u3010[POI2007]WAG-Quaternary Balance\u3011"
    },
    {
        "content": "\u501f\u9274\u4e86clairs\u5927\u4f6c\u7684\u60f3\u6cd5\n\n\u9996\u5148\u5bf9\u6570\u8fdb\u884c\u56db\u8fdb\u5236\u5206\u89e3\n\nf[i]\u8868\u793a\u5f53\u524d\u4f4d\u7f6e\u4e0d\u4ecei+1\u501f\u4f4d\u62fc\u5b8c\u524di\u4f4d\u6570\u6240\u9700\u8981\u7684\u6570\u7684\u6700\u5c0f\u503c\uff0c\u5373\u4ece\u5f53\u524d\u4f4d\u4ece0\u5f00\u59cb\u9009\n\ng[i]\u8868\u793a\u5f53\u524d\u4f4d\u7f6e\u4ecei+1\u501f\u4f4d\u62fc\u5b8c\u524di\u4f4d\u6570\u6240\u9700\u8981\u7684\u6570\u7684\u6700\u5c0f\u503c\uff0c\u5f53\u524d\u4f4d\u4ece4\u5f00\u59cb\u9009\n\n\u6ce8\u610f\u56e0\u4e3a\u7b2cn\u4f4d\u53ef\u80fd\u5bf9\u7b2cn+1\u4f4d\u501f\u4f4d\uff0c\u9700\u8981\u5bf9n+1\u4f4d\u8fdb\u884c\u8ba1\u7b97\n\n\u6700\u540e\u53d6f[n+1],g[n+1]\u4e2d\u8f83\u5c0f\u503c\uff0cdp\u7684\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u65b9\u6848\u6570\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<string>\n#include<cstring>\n#include<cmath>\n#define N 3005\n#define mod 1000000000\nusing namespace std;\ntypedef long long ll;\nstruct node{\n\tint x,y;node(){};\n\tnode(int _x,int _y){x=_x,y=_y;}\n\tinline node operator+(int _x){return node(x+_x,y);}\n\tinline node operator+(node b){return x==b.x?node(x,(y+b.y)%mod):(x<b.x?node(x,y):b);}\n}f[N],g[N];\nint n,i,l,a[N],b[N];char s[N];\ninline ll read(){\n\tll x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint main(){\n\tscanf(\"%s\",s);l=strlen(s);for(i=1;i<=l;i++) a[i]=s[l-i]-'0';\n\twhile(l){\n\t\tfor(i=l,a[0]=0;i;i--) a[i-1]+=(a[i]&3)*10,a[i]>>=2;\n\t\tfor(b[++n]=a[0]/10;l&&!a[l];l--);\n\t}\n\tf[0]=node(0,1);g[0]=node(N,0);\n\tfor(i=1,n++;i<=n;i++) f[i]=(f[i-1]+b[i])+(g[i-1]+b[i]+1),g[i]=(f[i-1]+(4-b[i]))+(g[i-1]+(3-b[i]));\n\treturn printf(\"%d\\n\",f[n].y),0;\n}\n```\n",
        "postTime": 1553256336,
        "uid": 53032,
        "name": "\u5c0f\u5858\u7a7a\u660e",
        "ccfLevel": 0,
        "title": "P3464 [POI2007]WAG-Quaternary Balance"
    }
]