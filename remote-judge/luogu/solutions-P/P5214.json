[
    {
        "content": "\u6211\u4eec\u5148\u8003\u8651\u66b4\u529b\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u4e00\u4e2a$O((m+n) \\times q)$\u7684\u7b97\u6cd5\uff1a\u7528\u94fe\u8868\u5b58\u56fe\uff0c\u7528\u4e8c\u7ef4\u6570\u7ec4\u8bb0\u5f55\u5220\u53bb\u7684\u8fb9\uff0c\u7136\u540e\u6bcf\u6b21\u67e5\u8be2\u5c31\u66b4\u529bdfs\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u867d\u7136$m$\u5f88\u5927\uff0c\u4f46\u662f$q$\u5f88\u5c0f\uff0c\u8fd9\u610f\u5473\u7740\u5927\u591a\u6570\u8fb9\u662f\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u5220\u9664\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u79bb\u7ebf\uff0c\u5148\u7528\u5e76\u67e5\u96c6\u628a\u6240\u6709\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u5220\u6389\u7684\u8fb9\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u66b4\u529b\u5c31\u597d\u4e86\n\n\u8bbe\u67e5\u8be2\u7684\u6b21\u6570\u4e3a$k$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u6982\u662f$O(((q-k)+n) \\times k)$\uff0c\u80fd\u8dd1\u8fc7\u53bb\n\ncode\uff1a[\u6b63\u89e3](https://www.luogu.com.cn/paste/wvjq153u)\n\n\u603b\u7ed3\uff1a\u5728\u9047\u5230\u4e0d\u4f1a\u505a\u7684\u9898\u76ee\u65f6\u5019\uff0c\u53ef\u4ee5\u89c2\u5bdf\u6570\u636e\u8303\u56f4\u7684\u7279\u6b8a\u6027\uff0c\u7136\u540e~~\u66b4\u529b~~\u5bf9\u75c7\u4e0b\u836f",
        "postTime": 1600146178,
        "uid": 141179,
        "name": "pigstd",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5214 \u3010[SHOI2014]\u795e\u5947\u5316\u5408\u7269\u3011"
    },
    {
        "content": "\u968f\u4fbf\u70b9\u5f00\u4e00\u9053\uff0c\u53d1\u73b0\u5c45\u7136\u80fd\u79d2\u3002\u7136\u540e\u53e3\u80e1\u4e00\u4e0b\u9898\u89e3\u3002\n\n\u770b\u5230\u64cd\u4f5c\uff0c\u660e\u663e\u53cd\u5e94\u662f\u7ebf\u6bb5\u6811\u5206\u6cbb\u5427\uff0c\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u3002\u5f53\u7136\u8fd9\u597d\u50cf\u4e0d\u662f\u6b63\u89e3\u5427\u3002\n\n\u770b\u5230\u6570\u636e\u8303\u56f4\uff0c\u5c31\u4f1a\u53d1\u73b0\u8fd9\u662f\u4e00\u9053\u50bb\u5b50\u9898\u3002\u8fb9\u67092e5\uff0c\u4fee\u6539\u64cd\u4f5c\u53ea\u67091e4\uff0c\u90a3\u4e0d\u662f\u968f\u4fbf\u505a\u5417\u3002\u66b4\u529b\u628a\u67d0\u4e9b\u4e00\u76f4\u5b58\u5728\u7684\u8fde\u901a\u5757\u8bb0\u4e00\u4e0b\uff0c\u8fd9\u6837\u70b9\u6570\u8fc5\u901f\u4e0b\u964d\uff0c\u76f4\u63a5\u66b4\u529b\u505a\u5c31\u6ca1\u4e86\u3002\n\n\u8fd8\u662f\u7ebf\u6bb5\u6811\u5206\u6cbb\u597d\uff0c\u61d2\u5f97\u5199\u4ee3\u7801\u4e86\u3002",
        "postTime": 1549725531,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010SHOI2014\u3011\u795e\u5947\u5316\u5408\u7269"
    },
    {
        "content": "**2021/3/15 \u4fee\u590d\u4e86\u4ee3\u7801\u4e2d\u7684\u4e00\u4e2a\u5c0fbug\u3002**~~\u518d\u6b21\u5410\u69fd\u6570\u636e\u662f\u771f\u7684\u6c34~~\n\n------\n\n\u6211\u505a\u5b8c\u8fd9\u4e2a\u9898\u624d\u53d1\u73b0\u53ef\u4ee5\u7528\u7f29\u70b9+\u66b4\u529b\u6c34\u8fc7\u53bb\u3002\u3002\u3002\u3002\u5efa\u8bae\u52a0\u5f3a\u6570\u636e\u5427\u3002\n\n\u6211\u7684\u7b2c\u4e00\u601d\u8def\u662f\u7ebf\u6bb5\u6811\u5206\u6cbb\u3002\u770b\u5230\u8fd9\u79cd\u52a8\u6001\u56fe\uff0c\u7b2c\u4e00\u53cd\u5e94\u662f\u7ebf\u6bb5\u6811\u5206\u6cbb\u6ca1\u4ec0\u4e48\u95ee\u9898\u5427\u3002\u3002\u3002\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u628a\u6bcf\u6761\u8fb9\u51fa\u73b0\u7684\u65f6\u95f4\u7edf\u8ba1\u51fa\u6765\uff0c\u6302\u5230\u7ebf\u6bb5\u6811\u4e0a\uff0c\u7136\u540e\u904d\u5386\u4e00\u904d\u5373\u53ef\u3002\u8981\u6807\u8bb0\u4e00\u4e0b\u6bcf\u6b21\u8be2\u95ee\u7684\u65f6\u95f4\u70b9\u3002\u5224\u65ad\u56fe\u7684\u5757\u6570\u7684\u8bdd\uff0c\u53ef\u4ee5\u7528**\u53ef\u64a4\u9500\u5e76\u67e5\u96c6**\uff0c\u7528\u6808\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u6b21\u7684\u64cd\u4f5c\uff0c\u6700\u540e\u56de\u9000\u56de\u53bb\u5c31\u597d\u4e86\u3002\n\n\u95ee\u9898\u662f\u5982\u4f55\u8bb0\u5f55\u6bcf\u6761\u8fb9\u51fa\u73b0\u7684\u65f6\u95f4\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a\u6570\u7ec4 $a_{i,j}$ \u8bb0\u5f55 $(i,j)$ \u8fd9\u6761\u8fb9\u76ee\u524d\u6700\u65e9\u4e00\u6b21\u51fa\u73b0\u7684\u65f6\u95f4\u70b9\u3002\n\n- \u5982\u679c\u9047\u5230 `A i j`\uff0c\u5c31\u628a $a_{i,j}$ \u66f4\u6539\u6210\u5f53\u524d\u65f6\u95f4\u70b9\u3002\n- \u5982\u679c\u662f `D i j`\uff0c\u5c31\u628a $a_{i,j}$ \u8bb0\u4e3a $0$\uff0c\u628a\u8fd9\u4e00\u6bb5\u65f6\u95f4\u6302\u5230\u7ebf\u6bb5\u6811\u4e0a\u5373\u53ef\u3002\n\n\u6700\u540e\u904d\u5386\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u65f6\u95f4\u70b9\u7684\u7b54\u6848\u5c31\u7b97\u51fa\u6765\u4e86\uff0c\u53ea\u9700\u8981\u5bf9\u53f7\u5165\u5ea7\u5373\u53ef\u3002\n\n```cpp\n//Don't act like a loser.\n//This code is written by huayucaiji\n//You can only use the code for studying or finding mistakes\n//Or,you'll be punished by Sakyamuni!!!\n#include<bits/stdc++.h>\n#define int long long\n#define pr pair<int,int>\nusing namespace std;\n\nint read() {\n\tchar ch=getchar();\n\tint f=1,x=0;\n\twhile(ch<'0'||ch>'9') {\n\t\tif(ch=='-')\n\t\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') {\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn f*x;\n}\n\nconst int MAXN=5000+10,MAXM=4e5+10;\n\nint n,m,q,cnt,num;\nstack<pr > stk;\nint size[MAXN],father[MAXN],a[MAXN][MAXN],qu[MAXM],ans[MAXM];\nvector<pr > edge[MAXM<<2];\n\nint find(int x) {\n\tif(x!=father[x]) {\n\t\treturn find(father[x]);\n\t}\n\treturn x;\n}\nvoid merge(pr s) {\n\tint x=find(s.first);\n\tint y=find(s.second);\n\tif(x==y) {\n\t\tstk.push(make_pair(-1,-1));\n\t\treturn ;\n\t}\n\tnum--;\n\tif(size[x]>size[y]) {\n\t\tswap(x,y);\n\t}\n\tfather[x]=y;\n\tsize[y]+=size[x];\n\tstk.push(make_pair(x,y));\n}\nvoid del() {\n\tint x=stk.top().first;\n\tint y=stk.top().second;\n\tstk.pop();\n\tif(x==-1) {\n\t\treturn ;\n\t}\n\tnum++;\n\tfather[x]=x;\n\tsize[y]-=size[x];\n}\n\nvoid modify(int l,int r,int p,int x,int y,pr s) {\n\tif(r<x||y<l) {\n\t\treturn ;\n\t}\n\tif(x<=l&&r<=y) {\n\t\tedge[p].push_back(s);\n\t\treturn ;\n\t}\n\t\n\tint mid=(l+r)>>1;\n\tmodify(l,mid,p<<1,x,y,s);\n\tmodify(mid+1,r,p<<1|1,x,y,s);\n}\n\nvoid query(int l,int r,int p) {\n\tint sz=edge[p].size();\n\tfor(int i=0;i<sz;i++) {\n\t\tmerge(edge[p][i]);\n        //\u52a0\u8fb9\n\t}\n\tif(l==r) {\n\t\tans[l]=num;\n\t}\n\telse {\n\t\tint mid=(l+r)>>1;\n\t\tquery(l,mid,p<<1);\n        //\u904d\u5386\u7ebf\u6bb5\u6811\n\t\tquery(mid+1,r,p<<1|1);\n\t} \n\twhile(sz--) {\n\t\tdel();\n        //\u56de\u9000\u64cd\u4f5c\n\t}\n}\n\nsigned main() {\n\tcin>>n>>m;\n\tnum=n;\n\tfor(int i=1;i<=n;i++) {\n\t\tfather[i]=i;\n\t\tsize[i]=i;\n\t} \n\tfor(int i=1;i<=m;i++)  {\n\t\tint u,v;\n\t\tu=read();\n\t\tv=read();\n\t\ta[u][v]=a[v][u]=1;\n\t}\n\tcin>>q;\n\t\n\tfor(int i=1;i<=q;i++) {\n\t\tchar c;\n\t\tcin>>c;\n\t\tif(c=='Q') {\n\t\t\tqu[++cnt]=i;\n\t\t}\n\t\tif(c=='A') {\n\t\t\tint u,v;\n\t\t\tu=read();\n\t\t\tv=read();\n\t\t\ta[u][v]=a[v][u]=i;\n\t\t}\n\t\tif(c=='D') {\n\t\t\tint u,v;\n\t\t\tu=read();\n\t\t\tv=read();\n\t\t\tmodify(1,q,1,a[u][v],i-1,make_pair(u,v));\n\t\t\ta[u][v]=a[v][u]=0;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=1;j<i;j++) {\n\t\t\tif(a[i][j]) {\n\t\t\t\tmodify(1,q,1,a[i][j],q,make_pair(i,j));\n\t\t\t}\n\t\t}\n\t}\n\t\n\tquery(1,q,1);\n\tfor(int i=1;i<=cnt;i++) {\n\t\tcout<<ans[qu[i]]<<endl; \n\t}\n\treturn 0;\n}\n/*\n7 10\n1 2\n2 3\n3 4\n4 1\n1 3\n2 4\n5 6\n6 7\n7 5\n2 5\n3\nQ\nD 2 5\nQ\n*/\n```",
        "postTime": 1614175071,
        "uid": 132976,
        "name": "huayucaiji",
        "ccfLevel": 6,
        "title": "Luogu P5214 [SHOI2014]\u795e\u5947\u5316\u5408\u7269"
    },
    {
        "content": "# \u795e\u5947\u5316\u5408\u7269\n## \u601d\u8def\n\u5176\u5b9e\u8fd9\u9053\u9898\u62ff\u7ebf\u6bb5\u6811\u5206\u6cbb\u5f88\u7b80\u5355\u3002\u3002\u3002\n\n\u6211\u4eec\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u5206\u6cbb\uff0c\u7136\u540e\u91cc\u9762\u7528\u6309\u79e9\u5408\u5e76\u5e76\u67e5\u96c6\u7ef4\u62a4\u8054\u901a\u6570\u5c31\u597d\u4e86\u3002\u5177\u4f53\u64cd\u4f5c\u5c31\u662f\u6bcf\u5408\u5e76\u4e00\u6b21\u5c31\u610f\u5473\u7740\u8fde\u901a\u6570\u51cf\u4e00\uff0c\u64a4\u9500\u64cd\u4f5c\u5c31\u662f\u52a01\u3002\n\n\u7136\u540e\u4e5f\u6ca1\u6709\u4ec0\u4e48\u96be\u70b9\uff0c\u6570\u636e\u968f\u968f\u4fbf\u4fbf\u5c31\u80fd\u8dd1\u8fc7\u3002\n\n\u4f46\u5176\u5b9e\u8fd9\u9053\u9898\u8bc4\u4e3a\u84dd\u724c\u8fd8\u662f\u6709\u70b9\u8fc7\u4e86\uff0c\u7ebf\u6bb5\u6811\u5206\u6cbb\u7684\u9898\u518d\u600e\u4e48\u4e5f\u5e94\u8be5\u662f\u7d2b\u7684\u5427\u3002\u3002\u3002\u53ef\u80fd\u662f\u56e0\u4e3a\u66b4\u529b\u80fd\u6c34\u8fc7\u53bb\u3002\n## $\\text {Code}$\n```cpp\nint n,m,Ans;\nint fa[MAXN],size[MAXN];\n\nstack <int> S; \n\nint findSet (int x)\n{\n\twhile (x ^ fa[x]) x = fa[x];\n\treturn x;\n}\n\nvoid Merge (int x,int y)\n{\n\tif (x == y) return ;\n\tif (size[x] > size[y]) swap (x,y);\n\tAns --,S.push (x),size[y] += size[x],fa[x] = y;\n}\n\nstruct Edge\n{\n\tint u,v,l,r;//\u76f8\u8fde\u7684\u4e24\u4e2a\u70b9\uff0c\u6301\u7eed\u65f6\u95f4 \n}e[MAXX + MAXK]; \n\nvector <int> tree[MAXK << 2];\n\nvoid update (int k,int l,int r,int tl,int tr,int res)\n{\n\tif (l > tr || tl > r) return ;\n\tif (l >= tl && r <= tr) return tree[k].push_back (res);\n\tint mid = (l + r) >> 1;\n\tupdate (k << 1,l,mid,tl,tr,res);\n\tupdate (k << 1 | 1,mid + 1,r,tl,tr,res);\n}\n\nvoid Delete (int tag)\n{\n\twhile (S.size() > tag)\n\t{\n\t\tint x = S.top();S.pop ();\n\t\tAns ++,size[fa[x]] -= size[x],fa[x] = x;\n\t}\t\n}\n\nvoid Divide (int k,int l,int r)\n{\n\tint tag = S.size();\n\tfor (Int i = 0;i < tree[k].size();++ i)\n\t{\n\t\tint x = tree[k][i],u = e[x].u,v = e[x].v;\n\t\tu = findSet (u),v = findSet (v);\n\t\tMerge (u,v);\n\t}\n\tif (l == r)\n\t{\n\t\twrite (Ans),putchar ('\\n');\n\t\treturn Delete (tag);\n\t}\n\tint mid = (l + r) >> 1;\n\tDivide (k << 1,l,mid),Divide (k << 1 | 1,mid + 1,r);\n\treturn Delete (tag);\n}\n\nmap <int,int> mp[MAXN];\n\nsigned main()\n{\n\tn = Ans = read (),m = read ();\n\tfor (Int i = 1;i <= n;++ i) fa[i] = i,size[i] = 1;\n\tfor (Int i = 1;i <= m;++ i) e[i].u = read (),e[i].v = read (),e[i].l = 1,mp[e[i].u][e[i].v] = mp[e[i].v][e[i].u] = i;\n\tint q = read (),cnt = 0,ecnt = m;\n\tfor (Int i = 1;i <= q;++ i)\n\t{\n\t\tchar s[10] = {};\n\t\tscanf (\"%s\",s);\n\t\tif (s[0] == 'A')\n\t\t{\n\t\t\tint x = read (),y = read ();\n\t\t\tmp[x][y] = mp[y][x] = ++ ecnt;\n\t\t\te[ecnt] = Edge {x,y,cnt + 1,0};\n\t\t}\n\t\telse if (s[0] == 'D')\n\t\t{\n\t\t\tint x = read (),y = read ();\n\t\t\te[mp[x][y]].r = cnt + 1;\n\t\t}\n\t\telse ++ cnt;\n\t}\n\tfor (Int i = 1;i <= ecnt;++ i) \n\t{\n\t\tif (e[i].r == 0) e[i].r = cnt + 1;\n\t\tif (e[i].l < e[i].r) update (1,1,cnt,e[i].l,e[i].r - 1,i);\n\t}\n\tDivide (1,1,cnt);\n    return 0;\n}\n```",
        "postTime": 1584529341,
        "uid": 124781,
        "name": "Walking_Dead",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5214 \u3010[SHOI2014]\u795e\u5947\u5316\u5408\u7269\u3011"
    },
    {
        "content": "### \u6839\u636e\u9898\u610f\uff0c\u4e00\u6761\u8fb9\u88ab\u5220\u53bb\u4f1a\u4f7f\u8054\u901a\u5757\u4e2a\u6570$+1$\u5f53\u4e14\u4ec5\u5f53\u8be5\u8fb9\u4e0d\u5904\u4e8e\u4e00\u4e2a\u4e09\u5143\u73af\u5185\u3002\u540c\u7406\uff0c\u52a0\u8fb9\u65f6\uff0c\u82e5\u4e24\u70b9\u5c5e\u4e8e\u540c\u4e00\u8054\u901a\u5757\uff0c\u5219\u4e24\u70b9\u5747\u4e0e\u540c\u4e00\u70b9\u76f4\u63a5\u76f8\u8fde\n\n### \u5148\u7528\u5e76\u67e5\u96c6\u7b97\u51fa\u521d\u59cb\u8054\u901a\u5757\u6570\uff0c\u5728\u7528bitset\u7ef4\u62a4\u8fde\u8fb9\u60c5\u51b5\u5373\u53ef\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cmath>\n#include<stack>\n#include<cstring>\n#include<bitset>\n#include<string>\n#define ll long long\n#define maxn 5005\n#define re(i,a,b) for(int i=a;i<=b;i++)\nusing namespace std;\ninline int read(){char c=getchar();int f=1;int ans = 0;while(c>'9'||c<'0'){if(c=='-')f=-f;c=getchar();}while(c<='9'&&c>='0'){ans =ans*10+c-'0';c=getchar();}return ans*f;}\n//_____________________________________________________________________________________________________\nint n,m,fa[maxn];\nbitset<maxn>bit[maxn];\nint find(int x)\n{return fa[x]==x?x:fa[x]=find(fa[x]);}\nint main()\n{\n\tn=read(),m=read();\n\tre(i,1,n) fa[i] = i;\n\tint ans = n;\n\twhile(m--)\n\t{\n\t\tint x=read(),y=read();\n\t\tbit[x].set(y,1); bit[y].set(x,1);\n\t\tint xx = find(x),  yy=find(y);\n\t\tif(xx!=yy)\n\t\t\t--ans, fa[xx] = yy;\n\t}\n\tint q = read();\n\tchar c[10] ;\n\twhile(q--)\n\t{\n\t\tscanf(\"%s\",c);\n\t\tif(c[0]=='Q') printf(\"%d\\n\",ans);\n\t\telse \n\t\t{\n\t\t\tint x = read(),y=read();\n\t\t\tif(c[0]=='A')\n\t\t\t{\n\t\t\t\tif((bit[x]&bit[y]).none()) --ans;\n\t\t\t\tbit[x].set(y,1);bit[y].set(x,1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbit[x].set(y,0);bit[y].set(x,0);\n\t\t\t\tif((bit[x]&bit[y]).none()) ++ans;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1554283425,
        "uid": 118037,
        "name": "Yajnun",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5214 \u3010[SHOI2014]\u795e\u5947\u5316\u5408\u7269\u3011"
    },
    {
        "content": "# \u795e\u5947\u5316\u5408\u7269\n\n## \u9898\u610f\n\u7ed9\u4e00\u4e2a\u56fe\uff0c\u5bf9\u5176\u8fdb\u884c\u5220\u8fb9\u548c\u52a0\u8fb9\uff0c\u6c42\u8054\u901a\u5757\u3002\n\n\n------------\n\n## \u601d\u8def\n\n\n### $30pt$\n\u6211\u4eec\u770b\u5230\u6570\u636e\uff0c\u7acb\u523b\u60f3\u5230\u4e86\u4e00\u4e2a$m*q$\u7684\u66b4\u529b\u89e3\u6cd5\uff0c\u628a\u5220\u8fb9\u7528\u4e8c\u7ef4\u6570\u7ec4\u6807\u8bb0\uff0c\u5bf9\u6bcf\u6b21\u8be2\u95ee\u7528$m$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6c42\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n\tchar ch=getchar();int x=0;bool f=0;\n\tfor(;!isdigit(ch);ch=getchar())if(ch=='-')f=1;\n\tfor(;isdigit(ch);ch=getchar())x=(x<<1)+(x<<3)+(ch^48);\n\tif(f==1)x=-x;return x;\n}\nstruct node\n{\n\tint v,nex;\n}e[500005];\nint n,m,q,x,y,cnt=0,ans=0,head[5005];\nbool flag[5005][5005],vis[5005];\nchar ch=0;\nvoid add(int u,int v)\n{\n\te[++cnt].v=v,e[cnt].nex=head[u],head[u]=cnt;\n}\nvoid dfs(int x)\n{\n\tfor(int i=head[x];i;i=e[i].nex)\n\t{\n\t\tif(!vis[e[i].v]&&!flag[x][e[i].v])vis[e[i].v]=1,dfs(e[i].v);\n\t}\n}\nint main()\n{\n\tfreopen(\"edge.in\",\"r\",stdin);\n\tfreopen(\"edge.out\",\"w\",stdout);\n\tn=read();m=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tx=read(),y=read();add(x,y),add(y,x);\n\t}\n\tq=read();\n\twhile(q--)\n\t{\n\t\twhile(ch!='Q'&&ch!='D'&&ch!='A')ch=getchar();\n\t\tif(ch=='Q')\n\t\t{\n\t\t\tmemset(vis,0,sizeof vis);ans=0;\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t{\n\t\t\t\tif(!vis[i])ans++,dfs(i);\n\t\t\t}\n\t\t\tcout<<ans<<endl;\n\t\t}\n\t\telse if(ch=='D')\n\t\t{\n\t\t\tx=read(),y=read();\n\t\t\tflag[x][y]=1;\n\t\t\tflag[y][x]=1;\n\t\t}\n\t\telse if(ch=='A')\n\t\t{\n\t\t\tx=read(),y=read();\n\t\t\tadd(x,y),add(y,x);\n\t\t\tflag[x][y]=0,flag[y][x]=0;\n\t\t}\n\t\tch=0;\n\t}\n\treturn 0;\n}\n```\n\n\n------------\n\n### $100pt$\n\n\u6211\u4eec\u53d1\u73b0m\u8fdc\u5927\u4e8eq,\u6240\u4ee5\u8003\u8651\u7f29\u70b9\uff0c\u628a\u6c38\u4e0d\u5220\u9664\u7684\u8fb9\u6807\u8bb0\uff0c\u8fdb\u884c\u4e00\u904d\u6c42\u8054\u901a\u5757\uff0c\u628a\u503c$Hash$\u4e86\u53d1\u73b0\u53ea\u5269\u4e0b\u5f88\u5c11\u7684\u70b9\uff0c\u4e4b\u540e\u76f4\u63a5\u66b4\u529b\u5373\u53ef\u3002\n\n\u6ce8\uff1a\u540c\u4e00\u8054\u901a\u5757\u4e4b\u95f4\u4e0d\u80fd\u8fde\u8fb9\uff0c\u4e24\u4e2a\u8054\u901a\u5757\u4e4b\u95f4\u4f1a\u6709\u591a\u4e2a\u8fb9\u8981\u8bb0\u5f55\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ninline int read()\n{\n\tchar ch=getchar();bool f=0;int x=0;\n\tfor(;!isdigit(ch);ch=getchar())if(ch=='-')f=1;\n\tfor(;isdigit(ch);ch=getchar())x=(x<<1)+(x<<3)+(ch^48);\n\tif(f==1)x=-x;return x;\n}\nstruct node\n{\n\tint v,nex;\n}e[400005],e1[400005];\nint n,m,head[5005],cnt=0,x[200005],y[200005],q,qes[20005][3],num=0,id[5005],tot=0,f[1005][1005],head1[1005],ans;\nbool flag[5005][5005],vis[5005];\nchar ch[20005];\nvoid add(int u,int v)\n{\n\te[++cnt].v=v,e[cnt].nex=head[u],head[u]=cnt;\n}\nvoid add1(int u,int v)\n{\n\te1[++tot].v=v,e1[tot].nex=head1[u],head1[u]=tot;\n}\nvoid dfs(int x,int y)\n{\n\tid[x]=y;\n\tfor(int i=head[x];i;i=e[i].nex)\n\t{\n\t\tif(!vis[e[i].v])vis[e[i].v]=1,dfs(e[i].v,y);\n\t}\n}\nvoid dfs1(int x)\n{\n\tfor(int i=head1[x];i;i=e1[i].nex)\n\t{\n\t\tif(!vis[e1[i].v]&&f[x][e1[i].v]>0)vis[e1[i].v]=1,dfs1(e1[i].v);\n\t}\n}\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++)\t\n\t\tx[i]=read(),y[i]=read(),flag[x[i]][y[i]]=1;\n\tq=read();\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\twhile(ch[i]!='Q'&&ch[i]!='D'&&ch[i]!='A')ch[i]=getchar();\n\t\tif(ch[i]=='Q');\n\t\telse if(ch[i]=='D')\n\t\t{\n\t\t\tqes[i][1]=read(),qes[i][2]=read();\n\t\t\tflag[qes[i][1]][qes[i][2]]=0;\n\t\t\tflag[qes[i][2]][qes[i][1]]=0;\n\t\t}\n\t\telse if(ch[i]=='A')qes[i][1]=read(),qes[i][2]=read();\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(flag[i][j]&&i!=j)add(i,j),add(j,i);\n\tmemset(vis,0,sizeof vis);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!vis[i])vis[i]=1,dfs(i,++num);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(id[x[i]]!=id[y[i]])add1(id[x[i]],id[y[i]]),add1(id[y[i]],id[x[i]]),\n\t\tf[id[x[i]]][id[y[i]]]++,f[id[y[i]]][id[x[i]]]++;\n\t}\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tif(ch[i]=='Q')\n\t\t{\n\t\t\tans=0;\n\t\t\tmemset(vis,0,sizeof vis);\n\t\t\tfor(int i=1;i<=num;i++)\n\t\t\t\tif(!vis[i])vis[i]=1,dfs1(i),ans++;\n\t\t\tcout<<ans<<endl;\n\t\t}\n\t\telse if(ch[i]=='D')\n\t\t{\n\t\t\tif(id[qes[i][1]]!=id[qes[i][2]])f[id[qes[i][1]]][id[qes[i][2]]]--,f[id[qes[i][2]]][id[qes[i][1]]]--;\n\t\t}\t\t\n\t\telse if(ch[i]=='A')\n\t\t{\n\t\t\tif(id[qes[i][1]]!=id[qes[i][2]])add1(id[qes[i][1]],id[qes[i][2]]),add1(id[qes[i][2]],id[qes[i][1]]),\n\t\t\tf[id[qes[i][1]]][id[qes[i][2]]]++,f[id[qes[i][2]]][id[qes[i][1]]]++;\n\t\t}\n\t\t\t\n\t}\n\treturn clock();\n}\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1599897379,
        "uid": 343748,
        "name": "louhao088",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5214 \u3010[SHOI2014]\u795e\u5947\u5316\u5408\u7269\u3011"
    },
    {
        "content": "~~\u770b\u4e00\u773c\u5c31\u77e5\u9053\u662f\u52a8\u6001\u56fe\u5416\uff08\u53e3\u80e1.jpg~~\n\n\u4ee5\u4e0a\u7eaf\u5c5e\u5047\u6d88\u606f\u3002\u3002\u3002\n\n\u5176\u5b9e\u8fd9\u9898\u662f\u4e00\u9053\u660e\u663e\u7684\u6280(xia)\u5de7(gao)\u9898\uff0c\u6211\u4eec\u53d1\u73b0\u8be2\u95ee\u6570\u8fdc\u5c0f\u4e8e\u8fb9\u6570\uff0c\u8fd9\u8868\u660e\u6709\u4e00\u4e9b\u8fb9\u662f\u4e00\u76f4\u5b58\u5728\u7684\u3002\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u79bb\u7ebf\u505a\uff0c\uff0c\u5bf9\u4e00\u76f4\u5b58\u5728\u7684\u8fb9\u7ec4\u6210\u7684\u56fe\u8fdb\u884c\u7f29\u70b9\uff0c\u7136\u540e\u5c31\u5f00\u59cb\u66b4\u529b\u7ef4\u62a4\u6dfb\u8fb9\u548c\u5220\u8fb9\u5373\u53ef\u3002\u3002\u6ce8\u610f\u7528\u8ba1\u6570\u5668\u7eaa\u5f55\u4e00\u4e0b\u91cd\u8fb9\uff0c\u800c\u4e0d\u662f\u4e0d\u505c\u7684\u52a0\u8fb9\u5373\u53ef\u3002\u3002\n\n\u6700\u597d\u518d\u5224\u4e00\u4e0b\u81ea\u73af\uff0c\uff0c\u6709\u4eba\u5df2\u7ecf\u9020\u51fa\u6709\u81ea\u73af\u7684hack\u6570\u636e\u60f9\u3002\u3002\u4f3c\u4e4e\u8fd8\u5361\u6389\u4e86\u4e0d\u5c11\u4eba\u3002\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define mp make_pair\nusing namespace std;\n\nint lst[5005], to[100005], pre[100005], tot,in[5005][5005], iu[200005], iv[200005], qu[10005], qv[10005], idx[5005], fa[5005], cnt;\nchar tp[10005];\nbool vis[5005], del[100005];\n\nmap<int, pair<int, int> > edge[5005];\n\ninline void add_edge(int u, int v) {\n    if (edge[u].count(v) && edge[u][v].first) {\n        edge[u][v].first++;\n        return;\n    }\n    edge[u][v] = mp(1, tot);\n    to[tot] = v;\n    pre[tot] = lst[u];\n    lst[u] = tot++;\n}\n\nint findf(int u) {\n    if (u == fa[u]) return u;\n    return fa[u] = findf(fa[u]);\n}\n\nvoid dfs(int u) {\n    vis[u] = true;\n    for (int i = lst[u]; ~i; i = pre[i]) {\n        if (!del[i] && !vis[to[i]])\n            dfs(to[i]);\n    }\n}\n\nint main() {\n    memset(lst, -1, sizeof lst);\n    int n, m;\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < m; i++) {\n        scanf(\"%d%d\", iu + i, iv + i);\n        in[--iu[i]][--iv[i]] = 1;\n        in[iv[i]][iu[i]] = 1;\n    }\n    int q;\n    scanf(\"%d\", &q);\n    for (int i = 0; i < q; i++) {\n        scanf(\" %c\", tp + i);\n        if (tp[i] != 'Q') {\n            scanf(\"%d%d\", qu + i, qv + i);\n            qu[i]--;\n            qv[i]--;\n            if (tp[i] == 'D') in[qu[i]][qv[i]] = in[qv[i]][qu[i]] = 0;\n        }\n    }\n    for (int i = 0; i < n; i++) fa[i] = i;\n    for (int i = 0; i < n; i++)\n        for (int j = 0; j < n; j++)\n            if (in[i][j]) fa[findf(i)] = findf(j);\n    for (int i = 0; i < n; i++)\n        if (findf(i) == i) idx[i] = cnt++;\n    for (int i = 0; i < n; i++) idx[i] = idx[fa[i]];\n    memset(in, false, sizeof in);\n    for (int i = 0; i < m; i++) {\n        int u = idx[iu[i]], v = idx[iv[i]];\n        if (u != v) {\n            add_edge(u, v);\n            add_edge(v, u);\n\t\t}\n    }\n    for (int i = 0; i < q; i++)\n        if (tp[i] == 'Q') {\n            memset(vis, false, cnt);\n            int ans = 0;\n            for (int j = 0; j < cnt; j++) {\n                if (!vis[j]) {\n                    ans++;\n                    dfs(j);\n                }\n            }\n            printf(\"%d\\n\", ans);\n        } else if (tp[i] == 'A') {\n            int u = idx[qu[i]], v = idx[qv[i]];\n            if (u != v) {\n                add_edge(u, v);\n                add_edge(v, u);\n\t\t\t}\n        } else {\n            int u = idx[qu[i]], v = idx[qv[i]];\n            if (u == v) continue;\n            edge[u][v].first--;\n            edge[v][u].first--;\n            if (!edge[u][v].first) del[edge[u][v].second] = del[edge[v][u].second] = true;\n        }\n}\n```\n\n~~\u4e2a\u4eba\u611f\u89c9shoi\u5e76\u4e0d\u7b97\u7279\u522b\u7684\u6bd2\u7624\uff1f~~",
        "postTime": 1549726583,
        "uid": 119553,
        "name": "rEdWhitE_uMbrElla",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5214 \u3010[SHOI2014]\u795e\u5947\u5316\u5408\u7269\u3011"
    },
    {
        "content": "\u5520\u51e0\u53e5\uff1a   \n\u4e00\u5f00\u59cb\u8ba9\u6211\u5199\u8fd9\u9053\u9898\uff0c\u5176\u5b9e\u6211\u662f\uff0c\u662f\u62d2\u7edd\u7684\u3002    \n\u6211\u8ddf\u5927\u7237\u8bb2\uff0c\u6211\u62d2\u7edd\uff0c\u56e0\u4e3a\uff0c\u5176\u5b9e\u6211\uff0c\u6839\u672c\u641e\u4e0d\u61c2\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u3002    \n\u5927\u7237\u8ddf\u6211\u8bb2\uff0c\u6572\u65f6\u52a0\u7279\u6280\uff0c\u4ee3\u7801\u5f88\u77ed\u5f88\u5feb\u5f88\u597d\u3002    \n\u52a0\u4e8630\u884c\u7279\u6280\u4e4b\u540e\u5462\uff0c\u4ee3\u7801    \n\u540e\u6765\u6211\u5176\u5b9e\u77e5\u9053\u8fd9\u4e2a\u662f\u771f\u7684\uff0c\u662f\u6709\u65f6\u95f4\u590d\u6742\u5ea6\u4fdd\u8bc1\u7684\u3002\u6211\u7684\u4ee3\u7801\u5462\uff0c\u5c31\u8fd9\u4e48\u52a0\u7279\u6280\uff0c\u52a0\u4e86\u5f88\u591a\u7279\u6280\uff0c\u4ee3\u7801\uff0c    \n\u6211\u6572\u5b8c\u7684\u4ee3\u7801\u5c31\u662f\u8fd9\u4e2a\u6837\u5b50\u7684\uff0c\u4f60\u6572\u5b8c\u4e5f\u4f1a\u662f\u8fd9\u4e2a\u6837\u5b50\uff0c\u56e0\u4e3a...   \n\n\u52a0\uff01\u7279\uff01\u6280\uff01\n---\n\u79bb\u7ebf\u540e\u6709\u4e9b\u8fb9\u4e00\u5b9a\u4e0d\u4f1a\u88ab\u5220\uff0c\u7136\u540e\u7528\u8fd9\u4e9b\u8fb9\u6765\u5e76\u67e5\u96c6\u7f29\u70b9\u3002\n\u7136\u540e\u6570\u636e\u89c4\u6a21\u5c31\u5f88\u5c0f\u7684\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u66b4\u529b\u641e\u4e86\u3002    \n\n---\nAC\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define N 5050\n#define M 501000\nusing namespace std;\nint ru[M],rv[M];\nstruct KSD\n{\n    int v,len,next;\n}e[M];\nint head[N],cnt;\nint f[N],map[N][N];\nint find(int x){return (x==f[x])?x:f[x]=find(f[x]);}\ninline void add(int u,int v,int len=1)\n{\n    map[u][v]=++cnt;\n    e[cnt].v=v;\n    e[cnt].len=len;\n    e[cnt].next=head[u];\n    head[u]=cnt;\n}\nint n,m,q;\nstruct QUERY\n{\n    int f,a,b;\n    QUERY(int _f=0,int _a=0,int _b=0):f(_f),a(_a),b(_b){}\n    void read(int _f)\n    {\n        f=_f;\n        scanf(\"%d%d\",&a,&b);\n        if(f==2)map[a][b]=map[b][a]=0;\n    }\n}query[10100];\nbool vis[N];\nvoid dfs(int x)\n{\n    int i,v;\n    vis[x]=true;\n    for(i=head[x];i;i=e[i].next)\n    {\n        if(e[i].len)\n        {\n            v=e[i].v;\n            if(!vis[v])dfs(v);\n        }\n    }\n}\nchar tt[5];\nint main()\n{\n    freopen(\"test.in\",\"r\",stdin); \n    int i,j,k;\n    int a,b,c;\n    int fa,fb;\n\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=n;i++)f[i]=i;\n    for(i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        ru[i]=a,rv[i]=b;\n        map[a][b]=map[b][a]=true;\n    }\n    scanf(\"%d\",&q);\n    for(i=1;i<=q;i++)\n    {\n        scanf(\"%s\",tt);\n        if(tt[0]=='Q')continue;\n        else if(tt[0]=='A')query[i].read(1);\n        else query[i].read(2);\n    }\n    for(i=1;i<n;i++)for(j=i+1;j<=n;j++)\n        if(map[i][j])f[find(j)]=find(i);\n    memset(map,0,sizeof map),cnt=1;\n    for(i=1;i<=m;i++)\n    {\n        a=find(ru[i]),b=find(rv[i]);\n        if(a==b)continue;\n        if(map[a][b])e[map[a][b]].len++,e[map[b][a]].len++;\n        else add(a,b),add(b,a);\n    }\n    for(i=1;i<=n;i++)find(i);\n    for(i=1;i<=q;i++)\n    {\n        if(!query[i].f)\n        {\n            int ret=0;\n            memset(vis,0,sizeof vis);\n            for(j=1;j<=n;j++)if(f[j]==j&&!vis[j])\n            {\n                ret++;\n                dfs(j);\n            }\n            printf(\"%d\\n\",ret);\n        }\n        else if(query[i].f==1)\n        {\n            a=f[query[i].a],b=f[query[i].b];\n            if(map[a][b])e[map[a][b]].len++,e[map[b][a]].len++;\n            else add(a,b),add(b,a);\n        }\n        else \n        {\n            a=f[query[i].a],b=f[query[i].b];\n            e[map[a][b]].len--,e[map[b][a]].len--;\n        }\n    }\n    return 0;\n}\n\n```\n\u70b9\u4e2a\u8d5e\u5728\u8d70\u5457\uff01\uff08*\uff3e3\uff3e\uff09",
        "postTime": 1654771056,
        "uid": 727076,
        "name": "cuiwei01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3"
    }
]