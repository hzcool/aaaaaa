[
    {
        "content": "\u90fd\u662f\u505a\u70c2\u4e86\u7684\u5957\u8def\u4e86....\u5927\u7237\u4eec\u90fd\u4e0d\u5c51\u4e8e\u5199\u9898\u89e3\u6211\u6765\u6574\u4e00\u4e2a\n\n\u6309\u7167\u5957\u8def\u65af\u7279\u6797\u6570\u4e00\u4e0b\uff0c\u8bbe$ans(S)$\u4e3a$S$\u96c6\u5408\u7684\u8fde\u901a\u5757\u6570\uff0c\u6709\n\n$$\n\\sum_S ans(S)^K=\\sum_S\\sum_{i=0}^KS(K,i)i!\\binom{ans(S)}{i}=\\sum_{i=0}^KS(K,i)i!\\sum_S\\binom{ans(S)}{i}\n$$\n\n\u6309$l$\u6392\u4e2a\u5e8f\uff0c\u7136\u540e\u4e00\u4e2a\u4e2a\u52a0\u5165\uff0c\u8bbe$f[i]$\u8868\u793a\u6240\u6709\u53f3\u7aef\u70b9\u4e3a$i$\u7684\u5b50\u96c6\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u5047\u8bbe\u5f53\u524d\u533a\u95f4\u4e3a$[l,r]$\uff0c\u5206\u4e09\u79cd\u60c5\u51b5:\n\n1. $i<r$ \uff0c\u90a3\u4e48$i$\u4f1a\u5bf9$r$\u9020\u6210\u8d21\u732e\uff0c\u5177\u4f53\u5730\u5c31\u662f$i$\u5bf9\u5e94\u7684\u8fd9\u4e9b\u5b50\u96c6\u5e76\u4e0a$[l,r]$\u5f97\u5230$r$\u5bf9\u5e94\u7684\u5b50\u96c6\uff0c\u8fd9\u65f6\u8fde\u901a\u5757\u6570$+1$\uff0c\u7528$\\binom{n+1}{k}=\\binom{n}{k}+\\binom{n}{k-1}$\u8f6c\u79fb\u5373\u53ef.\n\n2. $i\\in [l,r]$\uff0c\u90a3\u4e48$i$\u4f1a\u5bf9$r$\u9020\u6210\u8d21\u732e\uff0c\u8fd9\u65f6\u8fde\u901a\u5757\u6570\u4e0d\u53d8\uff0c\u76f4\u63a5\u52a0\u4e0a\u5373\u53ef.\n\n3. $i>r$\uff0c\u90a3\u4e48$r$\u4f1a\u5bf9$i$\u9020\u6210\u8d21\u732e\uff0c\u8fd9\u65f6$i$\u5bf9\u5e94\u7684\u5b50\u96c6\u9009\u4e0d\u9009$[l,r]$\u7b54\u6848\u76f8\u540c\uff0c\u6240\u4ee5$f[i]$\u5e94\u8be5\u4e58\u4e0a$2$\n\n\u8fd9\u4e09\u79cd\u64cd\u4f5c\u90fd\u662f\u7ebf\u6bb5\u6811\u57fa\u672c\u64cd\u4f5c\uff0c\u76f4\u63a5\u4e0a\u5c31\u5b8c\u4e86.\n\n\u590d\u6742\u5ea6$O(nK\\log n)$\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int mod=1000000007,N=1e6;\nstruct P{int l,r;}w[N];\nint s[20][20],n,K,f[11],tmp[11];\nstruct Seg\n{\n\tint a[N][11],tag[N];\n\tvoid upd(int rot,int w)\n\t{\n\t\tfor(int i=0;i<=K;i++)a[rot][i]=(1ll*w*a[rot][i])%mod;tag[rot]=1ll*tag[rot]*w%mod;\n\t}\n\tvoid pushdown(int rot)\n\t{\n\t\tif(tag[rot]!=1)\n\t\t{\n\t\t\tint t=tag[rot];tag[rot]=1;\n\t\t\tupd(rot<<1,t),upd(rot<<1|1,t);\n\t\t}\n\t}\n\tvoid update(int rot,int lt,int rt,int lq,int rq)\n\t{\n\t\tif(lt>=lq&&rt<=rq){upd(rot,2);return;}\n\t\tint mid=(lt+rt)>>1;pushdown(rot);\n\t\tif(lq<=mid)update(rot<<1,lt,mid,lq,rq);\n\t\tif(rq>mid)update(rot<<1|1,mid+1,rt,lq,rq);\n\t\tfor(int i=0;i<=K;i++)a[rot][i]=(a[rot<<1][i]+a[rot<<1|1][i])%mod;\n\t}\n\tvoid ins(int rot,int lt,int rt,int q,int w[])\n\t{\n\t\tfor(int i=0;i<=K;i++)a[rot][i]=(a[rot][i]+w[i])%mod;\n\t\tif(lt==rt)return;\n\t\tint mid=(lt+rt)>>1;pushdown(rot);\n\t\tif(q<=mid)ins(rot<<1,lt,mid,q,w);\n\t\telse ins(rot<<1|1,mid+1,rt,q,w);\n\t}\n\tvoid query(int rot,int lt,int rt,int lq,int rq,int w[])\n\t{\n\t\tif(lt>=lq&&rt<=rq){for(int i=0;i<=K;i++)w[i]=(w[i]+a[rot][i])%mod;return;}\n\t\tpushdown(rot);\n\t\tint mid=(lt+rt)>>1;\n\t\tif(lq<=mid)query(rot<<1,lt,mid,lq,rq,w);\n\t\tif(rq>mid)query(rot<<1|1,mid+1,rt,lq,rq,w);\n\t}\n\tvoid build(int rot,int lt,int rt)\n\t{\n\t\ttag[rot]=1;if(lt==rt)return;\n\t\tint mid=(lt+rt)>>1;build(rot<<1,lt,mid),build(rot<<1|1,mid+1,rt);\n\t}\n}a;\nvoid clear(int w[]){for(int i=0;i<=K;i++)w[i]=0;}\nint cmp(const P &a,const P &b){return a.l<b.l;}\nint main()\n{\n\tscanf(\"%d%d\",&n,&K);\n\ts[0][0]=1;\n\tfor(int i=1;i<=K;i++)\n\t{\n\t\ts[i][0]=0,s[i][i]=1;\n\t\tfor(int j=1;j<i;j++)s[i][j]=(s[i-1][j-1]+1ll*j*s[i-1][j])%mod;\n\t}\n\tfor(int i=1;i<=n;i++)scanf(\"%d%d\",&w[i].l,&w[i].r);\n\tsort(w+1,w+n+1,cmp);\n\ttmp[0]=1;a.ins(1,0,2*n,0,tmp);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tclear(tmp);a.query(1,0,2*n,0,w[i].l-1,tmp);\n\t\tf[0]=tmp[0];for(int k=1;k<=K;k++)f[k]=(tmp[k-1]+tmp[k])%mod;\n\t\tclear(tmp);a.query(1,0,2*n,w[i].l,w[i].r,tmp);\n\t\tfor(int k=0;k<=K;k++)f[k]=(f[k]+tmp[k])%mod;\n\t\ta.update(1,0,2*n,w[i].r+1,2*n);\n\t\ta.ins(1,0,2*n,w[i].r,f);\n\t}\n\tint ans=0;\n\tfor(int i=0,fac=1;i<=K;i++,fac*=i)ans=(ans+1ll*fac*s[K][i]%mod*a.a[1][i])%mod;\n\tcout<<ans<<endl;\n}\n```",
        "postTime": 1584003895,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P6144 \u3010[USACO20FEB]Help Yourself P\u3011"
    },
    {
        "content": "\u6211\u4e22\uff1a https://www.luogu.com.cn/problem/P6144\n\n\n\u5148\u8003\u8651 k = 1\n\n\u8003\u8651DP\n\n\u9996\u5148\u5c06\u6240\u6709\u7684\u7ebf\u6bb5\u6309\u7167\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u8003\u8651 $f[r]$\u8868\u793a\u6700\u53f3\u4ee5$r$\u7ed3\u5c3e\u7684\u7ebf\u6bb5\u96c6\u5408\u7684\u8fde\u901a\u5757\u7684\u6570\u91cf\u7684\u548c.\n\n\u63d2\u5165\u4e00\u4e2a\u7ebf\u6bb5$[l,r]$\n\n\u5bf9\u4e8e\u53f3\u7aef\u70b9\u5728$[1,l-1]$\u7684\u6bcf\u79cd\u60c5\u51b5\uff0c\u90fd\u53ef\u4ee5\u4f7f\u5b83\u4eec\u7684\u8fde\u901a\u5757\u52a0$1$,\u518d\u52a0\u5230$f[r]$\u91cc\u9762\n\n\u5bf9\u4e8e\u53f3\u7aef\u70b9\u5728$[l,r]$\u7684\u6bcf\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u76f4\u63a5\u52a0\u5230$f[r]$\u91cc\u9762\n\u5bf9\u4e8e\u53f3\u7aef\u70b9\u5728$[r+1,n]$\u7684$f[i]$,\u8981\u5168\u90e8*2  (\u9009\u5f53\u524d\u7ebf\u6bb5\u6216\u4e0d\u9009)\n\n\u4e5f\u5c31\u662f\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u533a\u95f4*2,\u533a\u95f4\u6c42\u548c\uff0c\u663e\u7136\u7ebf\u6bb5\u6811\n\n\n\u5bf9\u4e8e$k != 1$, \u53ef\u4ee5\u8003\u8651\u628a\u5b83\u7684 $[0\uff0ck]$\u6b21\u7684\u7ed3\u679c\u5206\u522b\u7ef4\u62a4\uff0c\u8ba1\u7b97\u7684\u65f6\u5019\u7528\u4e8c\u9879\u5f0f\u5b9a\u7406\u5408\u5e76\u5c31\u597d\u4e86\n\n\u5c31\u662f\u5bf9\u4e8e$[1,l-1]$\u7684 \u8981\u628a $x^k -> (x+1)^k$\u518d\u52a0\u5230$f[r]$\u91cc\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7528\u4e8c\u9879\u5f0f\u5b9a\u7406\u628a$[0,k]$\u6b21\u65b9\u7684\u7ed3\u679c\u4e58\u4e0a\u4e8c\u9879\u5f0f\u7cfb\u6570\u518d\u52a0\u8d77\u6765\u5c31\u597d\n\n\u5c31\u662f\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u70b9\u8981\u7ef4\u62a4\u5404\u4e2a\u6b21\u65b9\u7684\u7ed3\u679c\n\n\u770b\u4ee3\u7801\u597d\u7406\u89e3\u4e00\u70b9\n\ncode:\n```cpp\n#include<bits/stdc++.h>\n#define N 400005\n#define int long long\n#define mod 1000000007\nusing namespace std;\nstruct haha {\n\tint a[13];\n};\nstruct A {\n\tint l, r;\n} a[N];\nint cmp(A x, A y) {\n\treturn x.l < y.l;\n}\nint ha[N << 3][12], tag[N << 3], n, k, C[25][25];\nvoid update(int rt) {\n\tfor(int i = 0; i <= k; i ++)\n\t \tha[rt][i] = (ha[rt << 1][i] + ha[rt << 1 | 1][i]) % mod;\n}\nvoid pushdown(int rt) {\n\tif(tag[rt] == 1) return;\n\ttag[rt << 1] *= tag[rt], tag[rt << 1 | 1] *= tag[rt], tag[rt << 1 | 1] %= mod, tag[rt << 1] %= mod;\n\tint t = 1;\n\tfor(int i = 0; i <= k; i ++) \n\t\tha[rt << 1][i] *= tag[rt], ha[rt << 1 | 1][i] *= tag[rt], ha[rt << 1][i] %= mod, ha[rt << 1 | 1][i] %= mod;\n\ttag[rt] = 1;\n}\t\nvoid add(int rt, int l, int r, int x, haha b) { \n\tif(l == r) {\n\t\tfor(int i = 0; i <= k; i ++) ha[rt][i] = (ha[rt][i] + b.a[i]) % mod;\n\t\treturn;\n\t}\n\tpushdown(rt);\n\tint mid = (l + r) >> 1;\n\tif(x <= mid) add(rt << 1, l, mid, x, b);\n\telse add(rt << 1 | 1, mid + 1, r, x, b);\n\tupdate(rt);\n}\nvoid mul(int rt, int l, int r, int L, int R) {\n\tif(L > R) return;\n\tif(L <= l && r <= R) {\n\t\ttag[rt] = tag[rt] * 2 % mod;\n\t\tint t = 1;\n\t\tfor(int i = 0; i <= k; i ++)\n\t\t\tha[rt][i] = ha[rt][i] * 2 % mod;\n\t\treturn;\n\t}\n\tpushdown(rt);\n\tint mid = (l + r) >> 1;\n\tif(L <= mid) mul(rt << 1, l, mid, L, R);\n\tif(R > mid) mul(rt << 1 | 1, mid + 1, r, L, R);\n\tupdate(rt);\n}\nhaha query(int rt, int l, int r, int L, int R) { \n\tif(L > R) {\n\t\thaha b;\n\t\tfor(int i = 0; i <= k; i ++) b.a[i] = 0;\n\t\treturn b;\n\t}\n\tif(L <= l && r <= R) {\n\t\thaha d;\n\t\tfor(int i = 0; i <= k; i ++) d.a[i] = ha[rt][i];\n\t\treturn d;\n\t}\n\tpushdown(rt);\n\tint mid = (l + r) >> 1; haha ret;\n\tret.a[0] = 1;\n\tfor(int i =  0; i <= k; i ++) ret.a[i] = 0;\n\tif(L <= mid) {\n\t\thaha b = query(rt << 1, l, mid, L, R);\n\t\tfor(int i = 0; i <= k; i ++) ret.a[i] += b.a[i], ret.a[i] %= mod;\n\t} \n\tif(R > mid) {\n\t\thaha b = query(rt << 1 | 1, mid + 1, r, L, R);\n\t\tfor(int i = 0; i <= k; i ++) ret.a[i] += b.a[i], ret.a[i] %= mod;\n\t}\n\treturn ret;\n}\nsigned main() {\n\tscanf(\"%lld%lld\", &n, &k); int lim = 2 * n;\n\tfor(int i = 0; i <= lim * 4; i ++) ha[i][0] = 0\t;\n\tfor(int i = 0; i <= k; i ++) C[i][0] = 1;\n\tfor(int i = 1; i <= k; i ++)\n\t\tfor(int j = 1; j <= i; j ++)\n\t\t\tC[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod;\n\tfor(int i = 1; i <= n; i ++) scanf(\"%lld%lld\", &a[i].l, &a[i].r);\n\tsort(a + 1, a + 1 + n, cmp);\n\thaha d;\n\tfor(int i = 0; i <= k; i ++) d.a[i] = 0;\n\td.a[0] = 1;\n\tadd(1, 0, lim, 0, d);\n\tfor(int tt = 1; tt <= n; tt ++) {\n\t\tint l = a[tt].l, r = a[tt].r;\n\t\thaha b = query(1, 0, lim, 0, l - 1);\n\t\thaha c;\n\t\tfor(int i = 0; i <= k; i ++) c.a[i] = 0;\n\t\tfor(int i = 0; i <= k; i ++){\n\t\t\tint ret = 0;\n\t\t\tfor(int j = 0; j <= i; j ++)\n\t\t\t\tc.a[i] += b.a[j] * C[i][j] % mod, c.a[i] %= mod;\n\t\t}\n\t\tb = query(1, 0, lim, l, r - 1);\n\t\tfor(int i = 0; i <= k; i ++) c.a[i] = (c.a[i] + b.a[i]) % mod;\n\t\tadd(1, 0, lim, r, c);\n\t\tmul(1, 0, lim, r + 1, lim);\n\t}\n\tprintf(\"%lld\", query(1, 0, lim, 0, lim).a[k]);\n\treturn 0;\n}\n```\n\n\u8fd9\u4e00\u573a\u5c31\u8fd9\u9898\u503c\u5f97\u5199\u4e00\u4e0bQWQ",
        "postTime": 1590126041,
        "uid": 31656,
        "name": "lomit",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P6144 \u3010[USACO20FEB]Help Yourself P\u3011"
    },
    {
        "content": "\u9898\u76ee\u8981\u6211\u4eec\u6c42\u8fd9\u4e9b\u7ebf\u6bb5\u5171 $2^n$ \u4e2a\u7684\u590d\u6742\u5ea6\u7684 $K$ \u6b21\u65b9\u4e4b\u548c\uff0c\u6211\u4eec\u9996\u5148\u60f3\u60f3\u5f53 $K=1$ \u600e\u4e48\u505a\u3002\n\n\u6211\u4eec\u8bbe $f_i$ \u8868\u793a\u4ee5 $i$ \u4e3a\u7ed3\u5c3e\u7684\u7ebf\u6bb5\u5bf9\u7b54\u6848\u4ea7\u751f\u7684\u8d21\u732e\uff08\u56e0\u4e3a\u6240\u4ee5\u7ebf\u6bb5\u5de6\u53f3\u7aef\u70b9\u5404\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u4e0d\u7528\u8003\u8651\u91cd\u590d\uff09\n\n\u663e\u7136\u662f\u8981\u6392\u5e8f\u7684\uff0c\u5e94\u8be5**\u6309\u5de6\u7aef\u70b9\u6392**\uff0c\u56e0\u4e3a\u6211\u4eec\u7528\u53f3\u7aef\u70b9\u4f5c\u6570\u7ec4\u4e0b\u6807\uff0c\u7528\u5de6\u7aef\u70b9\u6392\u7684\u8bdd\u5c31\u4e0d\u5bb9\u6613\u4e22\u5931\u4fe1\u606f\u3002\n\n\u5f53\u6211\u4eec\u52a0\u5165\u4e00\u4e2a\u65b0\u7684\u7ebf\u6bb5 $l$ \u5230 $r$ \u65f6\uff0c\u5b83\u4f1a\u5bf9\u524d\u9762\u7684\u7ebf\u6bb5\u4ea7\u751f\u8d21\u732e\uff1a\n\n1. \u5bf9\u4e8e\u53f3\u7aef\u70b9 $1$ \u5230 $l-1$ \uff0c\u73b0\u5728\u7684\u7ebf\u6bb5\u4e0e\u5b83\u6ca1\u4ea4\u96c6\uff0c\u6240\u4ee5\u8fde\u901a\u5757\u6570\u91cf\u4f1a\u591a\u4e00\uff0c\u6240\u4ee5\u628a $f_1$ \u5230 $f_{l-1}$ \u7684\u503c\u90fd\u52a0\u4e00\u518d\u7d2f\u52a0\u5230 $f_r$\n\n2. \u5bf9\u4e8e\u53f3\u7aef\u70b9 $l$ \u5230 $r-1$ \uff0c\u73b0\u5728\u7684\u7ebf\u6bb5\u4e0e\u4e4b\u76f8\u4ea4\uff0c\u8fde\u901a\u5757\u6570\u91cf\u4e0d\u53d8\uff0c\u628a $f_l$ \u5230 $f_{r-1}$ \u76f4\u63a5\u7d2f\u52a0\u5230 $f_r$\n\n3. \u5bf9\u4e8e\u53f3\u7aef\u70b9 $r+1$ \u5230 $2*n$ \uff0c\u8fd9\u4e9b\u7ebf\u6bb5\u5305\u542b\u4e86\u73b0\u5728\u7684\u7ebf\u6bb5\uff0c**\u8fd9\u65f6\u5c31\u4e0d\u80fd\u628a\u8d21\u732e\u8bb0\u5230 $f_r$ \u4e86**\uff0c\u56e0\u4e3a\u540e\u9762\u7684\u7ebf\u6bb5\u5224\u65ad\u662f\u5426\u4e0e\u4e4b\u76f8\u4ea4\u662f\u5224\u65ad $r$ \u4e0e\u540e\u9762\u7684\u7ebf\u6bb5\u7aef\u70b9\u7684\u4f4d\u7f6e\u5173\u7cfb\uff0c\u800c $r+1$ \u5230 $2*n$ \u7684\u7ebf\u6bb5\u53f3\u7aef\u70b9\u6bd4 $r$ \u8fd8\u53f3\uff0c\u6240\u4ee5\u5224\u65ad\u662f\u5426\u76f8\u4ea4\u5e94\u8be5\u7531 $r+1$ \u5230 $2*n$ \u7684\u7ebf\u6bb5\u6765\u5224\u65ad\uff0c\u6240\u4ee5\u5e94\u8be5\u628a\u8d21\u732e\u7d2f\u8ba1\u5230 $f_{r+1}$ \u5230 $f_{2*n}$\u4e0a\n\n\u6700\u7ec8\u628a\u6240\u5f97\u7684\u503c\u653e\u5165 $f_r$\u3002\n\n### \u7efc\u4e0a\u6240\u8ff0\uff0c\u8fd9\u4e9b\u72b6\u6001\u8f6c\u79fb\u9700\u8981\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff0c\u91c7\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\n\n------------\n\n\u73b0\u5728\u6211\u4eec\u6765\u8003\u8651 $K\\ne 1$ \u7684\u60c5\u51b5\u3002\n\n\u552f\u4e00\u7684\u95ee\u9898\u5c31\u662f\u628a$\u3000f_1$ \u5230 $f_{l-1}$ \u7684\u503c\u52a0\u4e00\u518d\u7d2f\u8ba1\u5230 $f_r$ \u600e\u4e48\u505a\u3002\n\n\u5176\u5b9e\u5c31\u662f\u8fd9\u6837\uff1a$(x+1)^k$\n\n\u7528\u4e8c\u9879\u5f0f\u5b9a\u7406\u5c55\u5f00\uff1a\n\n$(x+1)^k=\\sum_{i=0}^k C_k^i x^i$\n\n$K\\le 10$ \uff0c\u6240\u4ee5\u628a $x$ \u7684 $0$ \u5230 $k$ \u6b21\u65b9\u90fd\u7ef4\u62a4\u4e00\u4e0b\u5c31\u5b8c\u4e86\n\n\n------------\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(NK^2log_n)$\uff0c\u7a7a\u95f4 $O(NKlog_n)$\n\n\u7528\u7b2c\u4e8c\u7c7b\u65af\u7279\u6797\u6570\u53ef\u4ee5\u4f18\u5316\u65f6\u95f4\u7684\u4e00\u4e2a $K$ \uff0c\u53ef\u662f\u6211\u592a\u84bb\u4e86\uff0c\u4e0d\u4f1a\u3002\n### $Code$\n\n```cpp\n#include<iostream>\n#include<stdio.h>\n#include<algorithm>\n#define ls k<<1\n#define rs k<<1|1\n#define N 100005\n#define mo 1000000007\n#define int long long\nusing namespace std;\nstruct segment{\n\tint l,r;\n\tbool operator < (const segment &A)const{\n\t\treturn l<A.l;\n\t}\n}s[N];\nstruct node{\n\tint a[11];\n}val[N*8];\nstruct segment_tree{\n\tint l,r,lazy;\n}d[N*8];\ninline int read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0' || ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\treturn x*f;\n}\nint n,lim,K,C[11][11];\nvoid pushup(int k){\n\tfor(int i=0;i<=K;++i) val[k].a[i]=(val[ls].a[i]+val[rs].a[i])%mo;\n}\nvoid pushdown(int k){\n\tif(d[k].lazy!=1){\n\t\tint t=d[k].lazy;\n\t\tfor(int i=0;i<=K;++i){\n\t\t\tval[ls].a[i]=(val[ls].a[i]*t)%mo;\n\t\t\tval[rs].a[i]=(val[rs].a[i]*t)%mo;\n\t\t}\n\t\td[ls].lazy=(d[ls].lazy*t)%mo;\n\t\td[rs].lazy=(d[rs].lazy*t)%mo;\n\t\td[k].lazy=1;\n\t}\n}\nvoid build(int k,int l,int r){\n\td[k].l=l,d[k].r=r;\n\td[k].lazy=1;\n\tif(l==r) return;\n\tint mid=l+r>>1;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n}\nvoid add(int k,int x,node v){\n\tif(d[k].l==d[k].r){\n\t\tfor(int i=0;i<=K;++i) val[k].a[i]=(val[k].a[i]+v.a[i])%mo;\n\t\treturn;\n\t}\n\tpushdown(k);\n\tif(x<=d[ls].r) add(ls,x,v);\n\telse add(rs,x,v);\n\tpushup(k);\n}\nvoid mul(int k,int x,int y,int v){\n\tif(x>y) return;\n\tif(x<=d[k].l && d[k].r<=y){\n\t\td[k].lazy=(d[k].lazy*v)%mo;\n\t\tfor(int i=0;i<=K;++i) val[k].a[i]=(val[k].a[i]*v)%mo;\n\t\treturn;\n\t}\n\tpushdown(k);\n\tif(x<=d[ls].r) mul(ls,x,y,v); \n\tif(d[rs].l<=y) mul(rs,x,y,v);\n\tpushup(k);\n}\nnode query(int k,int x,int y){\n\tif(x>y){\n\t\tnode fuck;\n\t\tfor(int i=0;i<=K;++i) fuck.a[i]=0;\n\t\treturn fuck;\n\t}\n\tif(x<=d[k].l && d[k].r<=y) return val[k];\n\tpushdown(k);\n\tnode res;\n\tfor(int i=0;i<=K;++i) res.a[i]=0;\n\tif(x<=d[ls].r){\n\t\tnode tmp=query(ls,x,y);\n\t\tfor(int i=0;i<=K;++i) res.a[i]=(res.a[i]+tmp.a[i])%mo;\n\t}\n\tif(d[rs].l<=y){\n\t\tnode tmp=query(rs,x,y);\n\t\tfor(int i=0;i<=K;++i) res.a[i]=(res.a[i]+tmp.a[i])%mo;\n\t}\n\treturn res;\n}\nsigned main(){\n\tn=read(),lim=n*2,K=read();\n\tfor(int i=0;i<=K;++i) C[i][0]=1;\n\tfor(int i=1;i<=K;++i){\n\t\tfor(int j=1;j<=K;++j){\n\t\t\tC[i][j]=(C[i-1][j-1]+C[i-1][j])%mo;\n\t\t}\n\t}\n\tbuild(1,0,lim);\n\tfor(int i=1;i<=n;++i) s[i].l=read(),s[i].r=read();\n\tsort(s+1,s+n+1);\n\tnode tmp,res;\n\tfor(int lsy=1;lsy<=n;++lsy){\n\t\tint l=s[lsy].l,r=s[lsy].r;\n\t\ttmp=query(1,0,l-1);\n\t\tfor(int i=0;i<=K;++i){\n\t\t\tres.a[i]=0;\n\t\t\tfor(int j=0;j<=i;++j){\n\t\t\t\tres.a[i]=(res.a[i]+C[i][j]*tmp.a[j]%mo)%mo;\n\t\t\t}\n\t\t}\n\t\ttmp=query(1,l,r-1);\n\t\tfor(int i=0;i<=K;++i)\n\t\t\tres.a[i]=(res.a[i]+tmp.a[i]+1)%mo;\n\t\tadd(1,r,res);\n\t\tmul(1,r+1,lim,2);\n\t}\n\tprintf(\"%lld\",query(1,0,lim).a[K]);\n\treturn 0;\n}\n```",
        "postTime": 1611476073,
        "uid": 238861,
        "name": "xzzduang",
        "ccfLevel": 0,
        "title": "P6144 Help Yourself P"
    },
    {
        "content": "\u5904\u7406\u7ebf\u6bb5\u8986\u76d6\u6bb5\u6570\u9020\u6210\u8d21\u732e\u7684\u95ee\u9898\uff0c\u6709\u4e00\u4e2a\u597d\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u5c06\u6240\u6709\u7ebf\u6bb5\u6309\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u6309\u987a\u5e8f\u52a0\u5165\u7ebf\u6bb5\uff0c\u7ebf\u6bb5\u8986\u76d6\u6210\u7684\u6bb5\u6570\u663e\u7136\u5355\u8c03\u4e0d\u51cf\u3002\n\n\u7136\u540e\u518d\u5206\u6790\u6570\u636e\u8303\u56f4\uff0c\u53d1\u73b0 $k \\leq 10$\uff0c\u53c8\u56e0\u4e3a\u6709 $k$ \u6b21\u5e42\u8fd9\u79cd\u4e1c\u897f\u5b58\u5728\uff0c\u663e\u7136\u65af\u7279\u6797\u6570\u5904\u7406\u3002\u5b9a\u4e49 $f(S)$ \u4e3a\u96c6\u5408 $S$ \u4e2d\u6240\u6709\u7ebf\u6bb5\u8986\u76d6\u540e\u5f62\u6210\u7684\u6bb5\u6570\uff0c\u6709\u7b54\u6848\uff1a\n\n$$\n\\sum_{i=0}^k i! \\begin{Bmatrix} k \\\\ i \\end{Bmatrix} \\sum_{S \\subseteq U} \\dbinom{f(S)}{i}\n$$\n\n\u6ce8\u610f\u5230\uff0c\u76f4\u63a5\u7ef4\u62a4\u7b54\u6848\u4e0d\u4f1a\u5f88\u5408\u7406\uff0c\u6839\u636e\u7ecf\u9a8c\u60f3\u5230\u5c06 $0$ \u5230 $k$ \u5168\u90e8\u90fd\u7ef4\u62a4\u4e00\u904d\u3002\u5e76\u4e14\u53d1\u73b0 $f(S)$ \u5728\u7279\u6b8a\u7684\u679a\u4e3e\u8fc7\u7a0b\u4e2d\u663e\u7136\u4e0d\u4f1a\u51cf\u5c11\uff0c\u52a0\u5165\u4e00\u6761\u7ebf\u6bb5\u589e\u91cf\u81f3\u591a\u4e3a $1$\u3002\u56e0\u4e3a $\\dbinom{n+1}{m} = \\dbinom{n}{m} + \\dbinom{n}{m-1}$\uff0c\u5f53 $f(S)$ \u589e\u52a0 $1$ \u7684\u65f6\u5019\u53ef\u4ee5\u4ee5 $O(k)$ \u7684\u65f6\u95f4\u5feb\u901f\u66f4\u65b0\u3002\n\n\u8003\u8651 dp\u3002\u5b9a\u4e49 $dp_{i,j}$ \u4e3a\u9009\u62e9\u4e86\u524d\u9762 $i$ \u6761\u7ebf\u6bb5\u7684\u4e00\u4e9b\uff0c\u5176\u4e2d\u6700\u5927\u7684\u53f3\u7aef\u70b9\u5728\u4f4d\u7f6e $j$\u3002\u6ce8\u610f\u5230 $dp_{i,j}$ \u5b9e\u8d28\u4e0a\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a $k+1$ \u7684\u6570\u7ec4\uff0c\u4fdd\u5b58\u4e86\u5f62\u4f3c\u4e8e\u7b54\u6848\u5f0f\u5b50\u4e2d $i=0,1,\\cdots ,k$ \u65f6\u7684\u7b54\u6848\u3002\n\n\u8003\u8651\u679a\u4e3e $j$ \u8868\u793a\u4e0a\u4e00\u5c42\u4e2d\u6700\u5927\u7684\u53f3\u7aef\u70b9\u6240\u5728\u4f4d\u7f6e\uff0c\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n- $j < l_i$\uff1a\u663e\u7136\u4f1a\u5f62\u6210\u65b0\u7684\u4e00\u6bb5\uff0c$f(S)$ \u589e\u52a0 $1$\uff0c\u6309\u4e0a\u9762\u8bf4\u7684\u65b9\u6cd5 $O(k)$ \u66f4\u65b0\u5230 $dp_{i,r_i}$\uff1b   \n- $l_i \\leq j \\leq r_i$\uff1a\u4e0d\u4f1a\u5f62\u6210\u65b0\u7684\u4e00\u6bb5\uff0c\u76f4\u63a5\u7ee7\u627f\u72b6\u6001\uff08\u6216\u8005\u8bf4\uff0c\u52a0\u8d77\u6765\uff09\u81f3 $dp_{i,r_i}$\uff1b   \n- $r_i < j$\uff1a\u56e0\u4e3a\u5df2\u7ecf\u6309 $l_i$ \u6392\u5e8f\u4e86\uff0c\u56e0\u6b64\u7ebf\u6bb5 $j$ \u5305\u542b\u7ebf\u6bb5 $i$\uff0c\u7ebf\u6bb5 $i$ \u53ea\u6709\u5b58\u5728\u548c\u4e0d\u5b58\u5728\u4e24\u79cd\u60c5\u51b5\u3002\u8fd9\u4e2a\u72b6\u6001\u5bf9\u5f53\u524d\u7684 $dp_{i,r_i}$ \u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\uff0c\u5f71\u54cd\u7684\u662f $dp_{i,j}$\uff0c\u76f8\u5f53\u4e8e\u5c06 $dp_{i,j} \\gets dp_{i-1,j}$\uff0c\u5e76\u4e14\u5c06 $dp_{i,j}$ \u4e2d\u6240\u6709\u5143\u7d20\u4e58\u4e0a $2$\u3002\n\n\u5206\u6790\uff0c\u53d1\u73b0\u53ef\u4ee5\u7ebf\u6bb5\u6811\u7ef4\u62a4:\n\n- $j < l_i$\uff1a\u9700\u8981\u5bf9\u6240\u6709\u7684 $0 \\leq p < l_i$\uff0c\u5c06 $dp_{i-1,p}$ \u5168\u90e8\u52a0\u8d77\u6765\uff08\u5373\uff0c\u5bf9\u4e8e\u7b54\u6848\u6570\u7ec4 $t$\uff0c\u6709 $t_q \\gets \\sum_{p=0}^{l_i-1} dp_{i-1,p,q}$\uff0c\u4e0b\u8ff0\u540c\u7406\uff09\uff0c\u8bb0\u4e3a $t$\uff1b\u7136\u540e\u518d\u4ece\u5927\u5230\u5c0f\u66f4\u65b0 $t_i \\gets t_i + t_{i-1}$\uff0c\u6700\u540e\u518d\u66f4\u65b0\u81f3 $dp_{i,r_i}$\uff0c\u9700\u8981\u4e00\u4e2a\u533a\u95f4\u548c\uff1b   \n- $l_i \\leq j \\leq r_i$\uff1a\u5bf9\u6240\u6709\u7684 $l_i \\leq p \\leq r_i$\uff0c\u5c06 $dp_{i-1,p}$ \u52a0\u8d77\u6765\uff0c\u518d\u66f4\u65b0\u81f3 $dp_{i,r_i}$\uff0c\u9700\u8981\u533a\u95f4\u548c\u3002\n\n\u4ee5\u4e0a\u4e24\u79cd\u60c5\u51b5\u4e2d\u66f4\u65b0 $dp_{i,r_i}$ \u76f8\u5f53\u4e8e\u5355\u70b9\u52a0\u3002\n\n- $r_i < j$\uff1a\u5bf9\u6240\u6709 $r_i < p \\leq 2n$\uff0c\u5c06 $dp_{i,j} \\gets dp_{i-1,j}$\uff0c\u518d\u5c06 $dp_{i,j}$ \u4e2d\u6240\u6709\u5143\u7d20\u4e58\u4e0a $k$\u3002\n\n\u5ffd\u7565\u6389\u300c\u7ee7\u627f\u300d\u8fd9\u4e00\u64cd\u4f5c\uff08\u76f8\u5f53\u4e8e\u5728 dp \u8fc7\u7a0b\u4e2d\u5c06\u7b2c\u4e00\u7ef4\u6eda\u6389\uff09\uff0c\u8fd9\u662f\u4e00\u4e2a\u533a\u95f4\u4e58\u6cd5\u3002\n\n\u533a\u95f4\u548c\uff0c\u533a\u95f4\u4e58\uff0c\u5355\u70b9\u52a0\uff0c\u8fd9\u4e9b\u90fd\u662f\u7ebf\u6bb5\u6811\u7684\u7ecf\u5178\u64cd\u4f5c\uff0c\u76f4\u63a5\u505a\u5c31\u884c\u4e86\u3002\n\n\u6709\u4e00\u4e2a\u7ec6\u8282\u662f\uff0c\u521d\u59cb\u72b6\u6001\u662f $dp_{0,0,0}=1$\u3002\u8fd9\u4e2a\u4e1c\u897f\u7b2c\u4e00\u70b9\u662f\u8981\u5355\u70b9\u52a0\uff0c\u7b2c\u4e8c\u70b9\u662f\u5de6\u7aef\u70b9\u662f $0$\uff0c\u5904\u7406\u65b9\u6cd5\u662f\u5c06\u540e\u9762\u7684\u6240\u6709\u7aef\u70b9\u52a0\u4e00\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst LL MOD=1e9+7;\nLL QuickPow(LL x,LL p)\n{\n\tLL ans=1,base=x;\n\twhile(p)\n\t{\n\t\tif(p&1)\tans=ans*base%MOD;\n\t\tbase=base*base%MOD;\n\t\tp>>=1;\n\t}\n\treturn ans;\n}\nstruct Segment{\n\tLL l,r;\n\tbool operator < (Segment ano) const {return l<ano.l;}\n}seg[200005];\nLL k;\nstruct SegmentTree{\n\tLL sum[800010][11],tag[800010];\n\t#define lc(x) (x<<1)\n\t#define rc(x) (lc(x)|1)\n\t#define Mm LL mid=(l+r)>>1\n\tvoid build(LL l,LL r,LL now)\n\t{\n\t\ttag[now]=1;\n\t\tif(l==r)\treturn ;\n\t\tMm;\n\t\tbuild(l,mid,lc(now));\n\t\tbuild(mid+1,r,rc(now));\n\t}\n\tvoid push_up(LL now){for(LL i=0;i<=k;++i)\tsum[now][i]=(sum[lc(now)][i]+sum[rc(now)][i])%MOD;}\n\tvoid push_down(LL now)\n\t{\n\t\tif(tag[now]!=1)\n\t\t{\n\t\t\ttag[lc(now)]=tag[lc(now)]*tag[now]%MOD;\n\t\t\ttag[rc(now)]=tag[rc(now)]*tag[now]%MOD;\n\t\t\tfor(LL i=0;i<=k;++i)\tsum[lc(now)][i]=sum[lc(now)][i]*tag[now]%MOD,sum[rc(now)][i]=sum[rc(now)][i]*tag[now]%MOD;\n\t\t\ttag[now]=1;\n\t\t}\n\t}\n\tvoid modify(LL l,LL r,LL now,LL x,LL y,LL val)\n\t{\n\t\tif(x<=l && r<=y)\n\t\t{\n\t\t\ttag[now]=tag[now]*val%MOD;\n\t\t\tfor(LL i=0;i<=k;++i)\tsum[now][i]=sum[now][i]*val%MOD;\n\t\t\treturn ;\n\t\t}\n\t\tpush_down(now);\n\t\tMm;\n\t\tif(x<=mid)\tmodify(l,mid,lc(now),x,y,val);\n\t\tif(mid<y)\tmodify(mid+1,r,rc(now),x,y,val);\n\t\tpush_up(now);\n\t}\n\tvoid modify(LL l,LL r,LL now,LL pos,LL *val)\n\t{\n\t\tfor(LL i=0;i<=k;++i)\tsum[now][i]=(sum[now][i]+val[i])%MOD;\n\t\tif(l==r)\treturn ;\n\t\tpush_down(now);\n\t\tMm;\n\t\tif(pos<=mid)\tmodify(l,mid,lc(now),pos,val);\n\t\telse\tmodify(mid+1,r,rc(now),pos,val);\n\t\tpush_up(now);\n\t}\n\tvoid query(LL l,LL r,LL now,LL x,LL y,LL *ret)\n\t{\n\t\tif(x<=l && r<=y)\n\t\t{\n\t\t\tfor(LL i=0;i<=k;++i)\tret[i]=(ret[i]+sum[now][i])%MOD;\n\t\t\treturn ;\n\t\t}\n\t\tpush_down(now);\n\t\tMm;\n\t\tif(x<=mid)\tquery(l,mid,lc(now),x,y,ret);\n\t\tif(mid<y)\tquery(mid+1,r,rc(now),x,y,ret);\n\t}\n\t#undef lc\n\t#undef rc\n\t#undef Mm\n}tr;\nLL n,S[15][15],tek[15],tmp[15],R;\nint main(){\n\tS[0][0]=1;\n\tfor(LL i=1;i<=13;++i)\tfor(LL j=1;j<=i;++j)\tS[i][j]=(S[i-1][j-1]+S[i-1][j]*j%MOD)%MOD;\n\tscanf(\"%lld %lld\",&n,&k);\n\tfor(LL i=1;i<=n;++i)\tscanf(\"%lld %lld\",&seg[i].l,&seg[i].r);\n\tsort(seg+1,seg+1+n);\n\tR=2*n+1;\n\ttmp[0]=1;\n\ttr.modify(1,R,1,1,tmp);\n\tfor(LL i=1;i<=n;++i)\n\t{\n\t\tmemset(tek,0,sizeof tek);\n\t\tmemset(tmp,0,sizeof tmp);\n\t\ttr.query(1,R,1,1,seg[i].l,tek);\n\t\ttmp[0]=tek[0];\n\t\tfor(LL j=1;j<=k;++j)\ttmp[j]=(tek[j]+tek[j-1])%MOD;\n\t\tmemset(tek,0,sizeof tek);\n\t\ttr.query(1,R,1,seg[i].l+1,seg[i].r+1,tek);\n\t\tfor(LL j=0;j<=k;++j)\ttmp[j]=(tmp[j]+tek[j])%MOD;\n\t\tif(seg[i].r<2*n)\ttr.modify(1,R,1,seg[i].r+2,R,2);\n\t\ttr.modify(1,R,1,seg[i].r+1,tmp);\n\t}\n\tLL ans=0,fac=1;\n\tfor(LL i=1;i<=k;++i)\n\t{\n\t\tfac=fac*i%MOD;\n\t\tans=(ans+fac*S[k][i]%MOD*tr.sum[1][i]%MOD)%MOD;\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1629964260,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "\u8c14\u8c145"
    },
    {
        "content": "### \u9898\u610f\n\n\u9898\u610f\u5f88\u660e\u663e\uff0c\u6211\u4e0d\u60f3\u8bb2\u4e86\u3002\n\n$\\texttt{Data Range:}n\\leq 10^5,k\\leq 10$\n\n### \u9898\u89e3\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4f4e\u6b21\u591a\u9879\u5f0f\u4f18\u5316 $\\texttt{dp}$\u3002\n\n\u8fd9\u9898\u4e0e\u540c\u540d\u91d1\u7ec4\u9898\u76ee\u5f3a\u7684\u4e0d\u662f\u4e00\u70b9\u70b9\u3002\n\n\u6ce8\u610f\u5230\u6709\u8fd9\u4e2a\u4e1c\u897f\n\n$$\\sum\\limits_{i=0}^{\\infty}\\frac{a^i}{i!}x^i=e^{ax}$$\n\n\u6240\u4ee5\u8bf4\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u5e42\u7528\u751f\u6210\u51fd\u6570\u7684\u5f62\u5f0f\u8868\u793a\u51fa\u6765\uff1a\n\n$$a^k=k![x^k]e^{ax}$$\n\n\u7c7b\u4f3c\u4e8e\u540c\u540d\u91d1\u7ec4\u9898\u76ee\uff0c\u6211\u4eec\u5bf9\u533a\u95f4\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u4f9d\u6b21\u52a0\u5165\u6bcf\u4e2a\u533a\u95f4\u3002\u8bbe $f_i$ \u8868\u793a\u4ee5 $i$ \u4e3a\u53f3\u7aef\u70b9\u7684\u533a\u95f4\u96c6\u5408\u5bf9\u5e94\u7684 $\\texttt{egf}$ \u4e4b\u548c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 $\\texttt{dp}$ \u6765\u641e\u3002\n\n\u8003\u8651\u65b0\u52a0\u5165\u7684\u533a\u95f4 $[l,r]$ \u5bf9\u7b54\u6848\u7684\u5f71\u54cd\uff0c\u53ef\u4ee5\u5206\u4e3a\u5982\u4e0b\u51e0\u79cd\uff1a\n\n- $i<l$\uff0c\u6b64\u65f6\u52a0\u8fdb\u6765\u7684 $[l,r]$ \u4f1a\u4f7f\u8d21\u732e\u589e\u52a0 $1$\uff0c\u6240\u4ee5\u53ef\u4ee5\u5199\u6210 $f_r\\gets e^x(\\sum\\limits_{i<l}f_i)$\u3002\n\n- $i\\in [l,r]$\uff0c\u6b64\u65f6\u8d21\u732e\u4e0d\u53d8\uff0c\u800c\u53f3\u7aef\u70b9\u53d8\u6210 $r$\uff0c\u5373 $f_r\\gets\\sum\\limits_{l\\leq i\\leq r}f_i$\u3002\n\n- $i>r$ \u7684\u8bdd\uff0c\u7531\u4e8e\u533a\u95f4\u6309\u7167\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u6240\u4ee5\u5b58\u5728\u4e4b\u524d\u7684\u533a\u95f4 $[l_0,r_0]$ \u6ee1\u8db3 $l_0<l,r_0>r$\uff0c\u6240\u4ee5 $[l,r]$ \u88ab\u5b8c\u5168\u8986\u76d6\uff0c\u4e8e\u662f\u5c31\u6709 $f_i\\gets 2f_i(i>r)$\n\n\u8fd9\u4e09\u4e2a\u64cd\u4f5c\u6d89\u53ca\u5230\u533a\u95f4\u67e5\u8be2\u591a\u9879\u5f0f\u7684\u548c\uff0c\u533a\u95f4\u591a\u9879\u5f0f\u4e58\u5e38\u6570\u548c\u5355\u70b9\u4fee\u6539\uff0c\u800c\u4e14 $k$ \u7684\u8303\u56f4\u5f88\u5c0f\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u8fd9\u4e9b\u591a\u9879\u5f0f\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nk\\log n+nk^2)$\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\nconst ll MAXN=1e5+51,MOD=1e9+7;\nstruct Polynomial{\n    ll cof[18];\n    Polynomial()\n\t{\n\t\tmemset(cof,0,sizeof(cof));\n\t}\n};\nstruct SegmentTree{\n    ll l,r,tag;\n    Polynomial poly;\n};\nstruct Interval{\n    ll l,r;\n    inline bool operator <(const Interval &rhs)const\n\t{\n\t\treturn this->l<rhs.l;\n\t}\n};\nPolynomial p0;\nSegmentTree tree[MAXN<<3];\nInterval x[MAXN];\nll n,kk,l,r;\nll fact[18],finv[18];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\ninline Polynomial operator +(Polynomial x,Polynomial y)\n{\n    Polynomial res=Polynomial();\n    for(register int i=0;i<kk;i++)\n    {\n\t\tres.cof[i]=(x.cof[i]+y.cof[i])%MOD;\n    }\n    return res;\n}\ninline Polynomial operator *(Polynomial x,ll y)\n{\n    Polynomial res=Polynomial();\n    for(register int i=0;i<kk;i++)\n    {\n\t\tres.cof[i]=(li)x.cof[i]*y%MOD;\n    }\n    return res;\n}\ninline ll binom(ll m,ll n)\n{\n    return (li)fact[m]*finv[n]%MOD*finv[m-n]%MOD;\n}\ninline Polynomial exMul(Polynomial x)\n{\n    Polynomial res=Polynomial();\n    for(register int i=0;i<kk;i++)\n    {\n\t\tfor(register int j=0;j<=i;j++)\n\t\t{\n\t\t\tres.cof[i]=(res.cof[i]+(li)x.cof[j]*binom(i,j)%MOD)%MOD;\n\t\t}\n    }\n    return res;\n}\ninline void update(ll node)\n{\n    tree[node].poly=tree[node<<1].poly+tree[(node<<1)|1].poly;\n}\ninline void create(ll l,ll r,ll node)\n{\n    tree[node].l=l,tree[node].r=r,tree[node].tag=1;\n    tree[node].poly=Polynomial();\n    if(l==r)\n    {\n\t\treturn;\n    }\n    ll mid=(l+r)>>1;\n    create(l,mid,node<<1),create(mid+1,r,(node<<1)|1);\n}\ninline void spread(ll node)\n{\n    if(tree[node].tag!=1)\n    {\n\t\tll ls=node<<1,rs=ls|1;\n\t\ttree[ls].poly=tree[ls].poly*tree[node].tag;\n\t\ttree[ls].tag=(li)tree[ls].tag*tree[node].tag%MOD;\n\t\ttree[rs].poly=tree[rs].poly*tree[node].tag;\n\t\ttree[rs].tag=(li)tree[rs].tag*tree[node].tag%MOD;\n\t\ttree[node].tag=1;\n    }\n}\ninline void change(ll pos,Polynomial poly,ll node)\n{\n    if(tree[node].l==tree[node].r)\n    {\n\t\ttree[node].poly=tree[node].poly+poly;\n\t\treturn;\n    }\n    spread(node);\n    ll mid=(tree[node].l+tree[node].r)>>1;\n    if(pos<=mid)\n    {\n\t\tchange(pos,poly,node<<1);\n    }\n    else\n    {\n\t\tchange(pos,poly,(node<<1)|1);\n    }\n    update(node);\n}\ninline void multiply(ll l,ll r,ll node)\n{\n    if(l<=tree[node].l&&r>=tree[node].r)\n    {\n\t\ttree[node].poly=tree[node].poly*2;\n\t\ttree[node].tag=(li)tree[node].tag*2%MOD;\n\t\treturn;\n    }\n    spread(node);\n    ll mid=(tree[node].l+tree[node].r)>>1;\n    if(l<=mid)\n    {\n\t\tmultiply(l,r,node<<1);\n    }\n    if(r>mid)\n    {\n\t\tmultiply(l,r,(node<<1)|1);\n    }\n    update(node);\n}\ninline Polynomial query(ll l,ll r,ll node)\n{\n    if(l<=tree[node].l&&r>=tree[node].r)\n    {\n\t\treturn tree[node].poly;\n    }\n    spread(node);\n    ll mid=(tree[node].l+tree[node].r)>>1;\n    Polynomial poly=Polynomial();\n    if(l<=mid)\n    {\n\t\tpoly=poly+query(l,r,node<<1);\n    }\n    if(r>mid)\n    {\n\t\tpoly=poly+query(l,r,(node<<1)|1);\n    }\n    return poly;\n}\nint main()\n{\n    n=read(),kk=read()+1,p0.cof[0]=1;\n    fact[0]=fact[1]=finv[0]=1,finv[14]=320774361;\n    for(register int i=2;i<=14;i++)\n    {\n\t\tfact[i]=(li)fact[i-1]*i%MOD;\n    }\n    for(register int i=13;i;i--)\n    {\n\t\tfinv[i]=(li)finv[i+1]*(i+1)%MOD;\n    }\n    for(register int i=1;i<=n;i++)\n    {\n\t\tx[i].l=read(),x[i].r=read();\n    }\n    sort(x+1,x+n+1),create(0,n<<1,1),change(0,p0,1);\n    for(register int i=1;i<=n;i++)\n    {\n\t\tl=x[i].l,r=x[i].r;\n\t\tchange(r,exMul(query(0,l-1,1)),1);\n\t\tif(l+1<r)\n\t\t{\n\t\t\tchange(r,query(l+1,r-1,1),1);\n\t\t}\n\t\tif(r<n+n)\n\t\t{\n\t\t\tmultiply(r+1,n<<1,1);\n\t\t}\n    }\n    printf(\"%d\\n\",tree[1].poly.cof[kk-1]);\n}\n```",
        "postTime": 1590491225,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6144 \u3010[USACO20FEB]Help Yourself P\u3011"
    }
]