[
    {
        "content": "\u5e73\u8861\u6811\u88f8\u9898\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u5c06\u4e00\u6761\u8fb9\u62c6\u6210\u4e24\u6761\u8fb9:\u4e0a\u548c\u4e0b(\u6216\u8005\u5de6\u548c\u53f3)\uff0c\u7136\u540e\u5206\u522b\u90fd\u6807\u4e0a\u53f7\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/57321.png)\n\n\u7136\u540e\uff0c\u6211\u4eec\u5f3a\u5236\u89c4\u5b9a\u7528\u5de6\u624b\u6478\u7740\u7684\u524d\u8fdb\u65b9\u5411\u4e3a\u8fd9\u6761\u8fb9\u7684\u65b9\u5411\u3002\u5bf9\u4e8e\u4e00\u4e2a\u95ed\u5408\u73af\u7684\u5185\u5708\uff0c\u8fd9\u4e2a\u65b9\u5411\u4e3a\u987a\u65f6\u9488\uff0c\u800c\u5bf9\u4e8e\u5916\u5708\u5219\u662f\u9006\u65f6\u9488\u3002\n\n\u53ef\u4ee5\u501f\u52a9\u793a\u610f\u56fe\u6765\u8f85\u52a9\u7406\u89e3\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/57322.png)\n\n\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u4ec0\u4e48\u4e1c\u897f\u80fd\u591f\u5f88\u597d\u5730\u76f4\u63a5\u7ef4\u62a4\u6574\u4e2a\u73af\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u62c6\u6389\u73af\u4e0a\u7684\u67d0\u6761\u8fb9\u3002\u6ce8\u610f\u56e0\u4e3a\u6211\u4eec\u8981\u6c42\u7684\u662f\u4e24\u6761\u8fb9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u56e0\u6b64\u6211\u4eec\u7ed9\u6bcf\u6761\u8fb9\u5efa\u4e00\u4e2a\u70b9\uff0c\u800c\u539f\u6765\u7684\u70b9\u4e0d\u4e88\u7ef4\u62a4\u3002\u8fd9\u91cc\u62c6\u6389\u7684\u8fb9\u6307\u7684\u662f\u8fb9\u4e0e\u8fb9\u76f8\u4ea4\u7684\u8fb9\u754c\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/57323.png)\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u73af\u4e0a\u4efb\u610f\u4e24\u76f8\u90bb\u8fb9\u4ee3\u8868\u70b9\u4e2d\u95f4\u7684\u8fb9\u90fd\u53ef\u4ee5\u62c6\u6389\u3002\u800c\u5177\u4f53\u62c6\u6389\u7684\u8fb9\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u66f4\u6362\uff0c\u53ea\u9700\u8981\u5c06\u5e73\u8861\u6811\u5206\u88c2\u6210\u4e24\u90e8\u5206\uff0c\u4ea4\u6362\u540e\u91cd\u65b0\u5408\u5e76\u5373\u53ef\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/57325.png)\n\n\u4ee3\u7801:\n\n```cpp\ninline void Cgbk(int u)\n{\n    int rk=order_of_key(u);//\u67e5\u8be2rank\n    while(fa[u])u=fa[u];//\u627e\u5230\u6839\n    if(rk==sz[u])return;\n    Pr y=split(u,rk);\n    merge(y.second,y.first);\n}\n```\n\n\u7136\u540e\uff0c\u6309\u7167\u590d\u6742\u7a0b\u5ea6\u5f00\u59cb\u8ba8\u8bba\u4e09\u4e2a\u64cd\u4f5c\u3002\n\n## 1.\u8be2\u95ee\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u8be2\u95ee\u7684\u8fb9\u8f6c\u6210\u70b9\uff0c\u7136\u540e\u76f4\u63a5\u5728\u5e73\u8861\u6811\u4e0a\u67e5\u8be2\u3002\n\n\u5982\u679c\u8fd9\u4e24\u4e2a\u70b9\u5c5e\u4e8e\u540c\u4e00\u68f5\u5e73\u8861\u6811\uff0c\u90a3\u4e48\u8f93\u51fa\u7ec8\u70b9\u5728\u5e73\u8861\u6811\u4e0a\u524d\u9762\u6709\u591a\u5c11\u4e2a\u70b9\u51cf\u53bb\u8d77\u70b9\u524d\u9762\u6709\u591a\u5c11\u4e2a\u70b9\u3002\u56e0\u4e3a\u62c6\u7684\u8fb9\u53ef\u80fd\u4f1a\u88ab\u7ecf\u8fc7\uff0c\u56e0\u6b64\u7b54\u6848\u4e3a\u8d1f\u6570\u65f6\u9700\u8981\u52a0\u4e0a\u6574\u68f5\u5e73\u8861\u6811\u7684\u5927\u5c0f\u3002\n\n\u5426\u5219\u76f4\u63a5\u8f93\u51fa $-1$ \u3002\n\n\u4ee3\u7801:\n\n```cpp\nread(x0),read(y0),read(x1),read(y1),read(d0);\nread(x2),read(y2),read(x3),read(y3),read(d1);\nif(x0+y0>x1+y1)swap(x0,x1),swap(y0,y1);\nif(x2+y2>x3+y3)swap(x2,x3),swap(y2,y3);//\u5148\u5904\u7406\u8f93\u5165\nint u=getid(x0<x1,x0,y0,d0),v=getid(x2<x3,x2,y2,d1);\nif(getrt(u)^getrt(v)){write(-1);continue;}//\u65e0\u89e3\nint z=order_of_key(v)-order_of_key(u);\nif(z<0)z+=leafy_tree::sz[getrt(u)];\nwrite(z);\n```\n\n## 2.\u5220\u9664\n\n\u6211\u4eec\u5148\u67e5\u8be2\u5220\u6389\u7684\u8fb9\u7684\u4e24\u4e2a\u534a\u8fb9\u662f\u5426\u5728\u540c\u4e00\u4e2a\u73af\u4e0a\u3002\u5982\u679c\u5728\uff0c\u5219\u5220\u6389\u8fd9\u6761\u8fb9\u53ea\u6709\u53ef\u80fd\u5c06\u73af\u5206\u6210\u4e24\u4e2a(\u6216\u8005\u4e0d\u53d8\u6216\u8005\u76f4\u63a5\u6d88\u5931\uff0c\u4f46\u662f\u53ef\u4ee5\u4e00\u8d77\u8003\u8651)\u3002\n\n\u6211\u4eec\u5220\u6389\u540e\uff0c\u5e73\u8861\u6811\u5e8f\u5217\u4f1a\u53d8\u6210\u4e24\u90e8\u5206\uff0c\u8fd9\u4e24\u90e8\u5206\u5728\u73af\u4e0a\u90fd\u662f\u8fde\u7eed\u7684\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u5220\u53bb\u8fb9\u7684\u5176\u4e2d\u4e00\u6761\u66f4\u6362\u5230\u73af\u7684\u6700\u540e\u9762\uff0c\u7136\u540e\u5c06\u5e73\u8861\u6811\u5728\u53e6\u4e00\u6761\u7684\u4f4d\u7f6e\u5206\u88c2\u6210\u4e24\u90e8\u5206\u3002\u6700\u540e\uff0c\u6211\u4eec\u5c06\u5e94\u8be5\u5220\u53bb\u7684\u4e24\u6761\u534a\u8fb9\u5220\u53bb\u5373\u53ef\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/57332.png)\n\n\u5982\u56fe\u3002\u6b64\u6b21\u5220\u6389\u7684\u8fb9\u4e3a $6-13$ \u8fd9\u6761\u8fb9\u3002\n\n\u5426\u5219\u5982\u679c\u4e0d\u5728\u4e00\u4e2a\u73af\u4e0a\u7684\u8bdd\uff0c\u672c\u6b21\u5220\u9664\u80af\u5b9a\u4f1a\u5c06\u8fd9\u4e24\u4e2a\u73af\u5408\u5e76\u6210\u4e00\u4e2a\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u5220\u53bb\u7684\u4e24\u4e2a\u534a\u8fb9\u90fd\u8c03\u6574\u5230\u73af\u7684\u6700\u540e\u9762\uff0c\u5220\u6389\u8fd9\u4e24\u4e2a\u534a\u8fb9\u540e\u76f4\u63a5\u5c06\u73af\u9996\u4f4d\u76f8\u63a5\u5373\u53ef\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/57327.png)\n\n\u5982\u56fe\uff0c\u6b64\u6b21\u5220\u6389\u7684\u8fb9\u4e3a $2-8$ \u8fd9\u6761\u8fb9\u3002\n\n\u4ee3\u7801:\n\n```cpp\nread(x0),read(y0),read(x1),read(y1);\nif(x0+y0>x1+y1)swap(x0,x1),swap(y0,y1);//\u5904\u7406\u8f93\u5165\nhs[x0<x1][x0][y0]=0;//\u8bb0\u5f97\u7ed9\u6bcf\u6761\u5b58\u5728\u7684\u8fb9\u6253\u6807\u8bb0\uff0c\u5728\u63d2\u5165\u7684\u65f6\u5019\u8981\u7528\nint u=getid(x0<x1,x0,y0,0),v=u+1;\nif(getrt(u)==getrt(v))//\u5728\u540c\u4e00\u4e2a\u73af\u4e0a\n{\n\tCgbk(v);\n\tint rt=split(getrt(u),order_of_key(u)-1).second;\n\trt=split(rt,1).second;\n\tsplit(rt,leafy_tree::sz[rt]-1);\n}\nelse//\u4e0d\u5728\n{\n\tCgbk(u),Cgbk(v);\n\tu=split(getrt(u),leafy_tree::sz[getrt(u)]-1).first,\n\tv=split(getrt(v),leafy_tree::sz[getrt(v)]-1).first;\n\tmerge(u,v);\n}\n```\n\n## 3.\u63d2\u5165\n\n\u6700\u6076\u5fc3\u7684\u64cd\u4f5c\u3002\n\n\u6211\u4eec\u8003\u8651\u5148\u6c42\u51fa\u6765\u8fd9\u6837\u7684\u4e24\u6761\u8fb9 $ubl$ \u548c $dbl$ \uff0c\u5206\u522b\u8868\u793a\u4e24\u4e2a\u534a\u8fb9\u63d2\u5165\u540e\u5728\u73af\u4e0a\u7684\u524d\u4e00\u6761\u8fb9\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/57338.png)\n\n\u5982\u679c\u4e24\u8fb9\u90fd\u6ca1\u6709\u8fb9\u7684\u8bdd\uff0c\u6211\u4eec\u76f4\u63a5\u5c06\u4e24\u4e2a\u534a\u8fb9\u9996\u4f4d\u76f8\u63a5\u3002\n\n(\u8fd9\u5c31\u4e0d\u9644\u56fe\u4e86)\n\n\u5426\u5219\u5982\u679c\u53ea\u6709\u4e00\u8fb9\u5b58\u5728\u8fb9\uff0c\u5219\u76f4\u63a5\u5c06\u4e24\u4e2a\u534a\u8fb9\u9996\u4f4d\u76f8\u63a5\u63d2\u5165\u5230\u90a3\u4e00\u8fb9\u6240\u5728\u5e73\u8861\u6811\u4e2d\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/57333.png)\n\n\n\n\u5426\u5219\u6211\u4eec\u67e5\u8be2 $ubl$ \u548c $dbl$ \u662f\u5426\u5728\u540c\u4e00\u4e2a\u73af\u4e2d\u3002\u5982\u679c\u5728\u7684\u8bdd\uff0c\u5219\u8fd9\u6b21\u63d2\u5165\u4f1a\u5c06\u539f\u6765\u7684\u73af\u62c6\u6210\u4e24\u4e2a\u73af\u3002\u6211\u4eec\u8c03\u6574 $ubl$ \u4f7f\u5b83\u5230\u8fd9\u4e2a\u73af\u7684\u6700\u540e\u9762\uff0c\u7136\u540e\u5c06\u73af\u5728 $dbl$ \u7684\u4f4d\u7f6e\u62c6\u6210\u4e24\u4e2a\u90e8\u5206\uff0c\u5e76\u5728\u8fd9\u4e24\u4e2a\u90e8\u5206\u7684\u6700\u540e\u9762\u5206\u522b\u63d2\u5165\u4e24\u4e2a\u534a\u8fb9\u3002\u6ce8\u610f\u4e0d\u80fd\u4e71\u63d2\u3002\n\n\u5426\u5219\u4e0d\u5728\u7684\u8bdd\uff0c\u8fd9\u6b21\u63d2\u5165\u4f1a\u5c06\u4e24\u4e2a\u73af\u5408\u5e76\u3002\u6211\u4eec\u8c03\u6574 $ubl$ \u548c $dbl$ \u53d8\u6210\u73af\u4e0a\u6700\u540e\u4e00\u6761\u8fb9\uff0c\u5206\u522b\u63a5\u4e0a\u4e24\u4e2a\u534a\u8fb9\u540e\u9996\u4f4d\u76f8\u63a5\u3002\u6ce8\u610f\u534a\u8fb9\u7684\u987a\u5e8f\u3002\n\n(\u6700\u540e\u4e24\u79cd\u60c5\u51b5\u53ef\u4ee5\u76f4\u63a5\u770b\u5220\u8fb9\u7684\u56fe\uff0c\u5012\u8fc7\u6765\u5c31\u53ef\u4ee5\u4e86)\n\n\u4ee3\u7801:\n\n```cpp\ninline void insert(int x0,int y0,int x1,int y1)\n{\n    int ubl=-1,dbl=-1;\n    if(x0<x1)//\u5148\u5206\u60c5\u51b5\u627e\u51faubl\u548cdbl\n    {\n        if(y0&&hs[0][x0][y0-1])ubl=getid(0,x0,y0-1,1);\n        else if(x0&&hs[1][x0-1][y0])ubl=getid(1,x0-1,y0,0);\n        else if(hs[0][x0][y0])ubl=getid(0,x0,y0,0);\n\n        if(hs[0][x1][y1])dbl=getid(0,x1,y1,0);\n        else if(hs[1][x1][y1])dbl=getid(1,x1,y1,1);\n        else if(y1&&hs[0][x1][y1-1])dbl=getid(0,x1,y1-1,1);\n    }\n    else\n    {\n        if(hs[1][x0][y0])ubl=getid(1,x0,y0,1);\n        else if(y0&&hs[0][x0][y0-1])ubl=getid(0,x0,y0-1,1);\n        else if(x0&&hs[1][x0-1][y0])ubl=getid(1,x0-1,y0,0);\n\n        if(x0&&hs[1][x1-1][y1])dbl=getid(1,x1-1,y1,0);\n        else if(hs[0][x1][y1])dbl=getid(0,x1,y1,0);\n        else if(hs[1][x1][y1])dbl=getid(1,x1,y1,1);\n    }\n    if(~ubl&&~dbl)\n    {\n        if(getrt(ubl)==getrt(dbl))//\u5728\u540c\u4e00\u4e2a\u73af\u4e0a\u7684\u65f6\u5019\n        {\n            Cgbk(ubl);\n            Pr z=split(getrt(ubl),order_of_key(dbl));\n            merge(z.second,getid(x0<x1,x0,y0,y0<y1));\n            merge(z.first,getid(x0<x1,x0,y0,x0<x1));\n        }\n        else//\u4e0d\u5728\u540c\u4e00\u4e2a\u73af\u4e0a\n        {\n            Cgbk(ubl),Cgbk(dbl);\n            merge(getrt(ubl),getid(x0<x1,x0,y0,y0<y1));\n            merge(getrt(dbl),getid(x0<x1,x0,y0,x0<x1));\n            merge(getrt(ubl),getrt(dbl));\n        }\n    }\n    else\n    {\n        if(~ubl)Cgbk(ubl),merge(getrt(ubl)//\u53ea\u6709\u4e00\u8fb9\u6709\u73af\n                ,merge(getid(x0<x1,x0,y0,y0<y1)\n                    ,getid(x0<x1,x0,y0,x0<x1)));\n        else if(~dbl)Cgbk(dbl),merge(getrt(dbl)\n                ,merge(getid(x0<x1,x0,y0,x0<x1)\n                    ,getid(x0<x1,x0,y0,y0<y1)));\n        else merge(getid(x0<x1,x0,y0,0),getid(x0<x1,x0,y0,1));//\u4e24\u8fb9\u90fd\u6ca1\u6709\n    }\n    hs[x0<x1][x0][y0]=1;//\u6807\u8bb0\u8fd9\u6761\u8fb9\u51fa\u73b0\u8fc7\n}\n```\n\n\u56e0\u4e3a\u5e73\u8861\u6811\u9700\u8981\u5b9e\u73b0\u5206\u88c2\u5408\u5e76\uff0c\u56e0\u6b64\u53ea\u80fd\u4f7f\u7528\u5e26\u6709\u533a\u95f4\u5206\u88c2\u80fd\u529b\u7684\u5e73\u8861\u6811(\u5982 $splay,FHQ,$leafy_tree) \u3002\u6211\u8fd9\u91cc\u5199\u7684\u662f leafy_tree \u3002\n\n\u603b\u4ee3\u7801:\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cctype>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<climits>\n#define y1 djksaflsdajnfdsaknfkcjhdcfyduifbhrelfkcnrfr\n#define Rep(i,a,b) for(register int i=(a);i<=(b);++i)\n#define Repe(i,a,b) for(register int i=(a);i>=(b);--i)\n#define rep(i,a,b) for(register int i=(a);i<(b);++i)\n#define pb push_back\n#define mp make_pair\n#define mx(a,b) (a>b?a:b)\n#define mn(a,b) (a<b?a:b)\ntypedef unsigned long long uint64;\ntypedef unsigned int uint32;\ntypedef long long ll;\nusing namespace std;\n\nnamespace IO\n{\n\tconst uint32 Buffsize=1<<15,Output=1<<24;\n\tstatic char Ch[Buffsize],*S=Ch,*T=Ch;\n\tinline char getc()\n\t{\n\t\treturn((S==T)&&(T=(S=Ch)+fread(Ch,1,Buffsize,stdin),S==T)?0:*S++);\n\t}\n\tstatic char Out[Output],*nowps=Out;\n\t\n\tinline void flush(){fwrite(Out,1,nowps-Out,stdout);nowps=Out;}\n\n\ttemplate<typename T>inline void read(T&x)\n\t{\n\t\tx=0;static char ch;T f=1;\n\t\tfor(ch=getc();!isdigit(ch);ch=getc())if(ch=='-')f=-1;\n\t\tfor(;isdigit(ch);ch=getc())x=x*10+(ch^48);\n\t\tx*=f;\n\t}\n\n\ttemplate<typename T>inline void write(T x,char ch='\\n')\n\t{\n\t\tif(!x)*nowps++='0';\n\t\tif(x<0)*nowps++='-',x=-x;\n\t\tstatic uint32 sta[111],tp;\n\t\tfor(tp=0;x;x/=10)sta[++tp]=x%10;\n\t\tfor(;tp;*nowps++=sta[tp--]^48);\n\t\t*nowps++=ch;\n\t\tif(nowps-Out>=1<<23)flush();\n\t}\n\n\tinline void getstr(char*q)\n\t{\n\t\tregister char ch;\n\t\tfor(ch=getc();!isgraph(ch);ch=getc());\n\t\tfor(;isgraph(ch);ch=getc())*q++=ch;\n\t\t*q='\\0';\n\t}\n\n\tinline void getwd(char&x){for(x=getc();!isupper(x);x=getc());}\n}\nusing namespace IO;\n\nvoid file()\n{\n#ifndef ONLINE_JUDGE\n\tFILE*DSD=freopen(\"water.in\",\"r\",stdin);\n\tFILE*CSC=freopen(\"water.out\",\"w\",stdout);\n#endif\n}\n\ninline void Chkmin(int&u,int v){u>v?u=v:0;}\n\ninline void Chkmax(int&u,int v){u<v?u=v:0;}\n\ninline void Chkmax(double&u,double v){u<v?u=v:0;}\n\ninline void Chkmax(ll&u,ll v){u<v?u=v:0;}\n\ninline void Chkmin(ll&u,ll v){u>v?u=v:0;}\n\nstatic int n,m,Q;\n\ninline void init(){read(n),read(m),read(Q);}\n\nconst int MAXN=501,NODE=2e6+5e3;\n\ninline int getid(int dr,int i,int j,int bk)\n{\n\tif(!dr)return 2*(i*m+j+1)+bk-1;\n\telse return 2*(n+1)*m+2*(i*(m+1)+j+1)+bk-1;\n}\n\nstatic int lm;\n\ntypedef pair<int,int>Pr;\n\nnamespace leafy_tree\n{\n\tconst double alp=1-sqrt(2)/2;\n\n\tstatic int sz[NODE],son[NODE][2],fa[NODE];\n\n\tnamespace Memery_Manage\n\t{\n\t\tstatic int sta[NODE],tp,cr;\n\n\t\tinline int newnode(){return !tp?++cr:sta[tp--];}\n\n\t\tinline void del(int u)\n\t\t{\n\t\t\tfa[son[u][0]]=fa[son[u][1]]=0;\n\t\t\tfa[u]=son[u][0]=son[u][1]=sz[u]=0;\n\t\t\tassert(u>lm);\n\t\t\tsta[++tp]=u;\n\t\t}\n\t}\n\tusing Memery_Manage::newnode;\n\tusing Memery_Manage::del;\n\n\tint build_tree(int*a,int l,int r)\n\t{\n\t\tif(l==r)return a[l];\n\t\tint md=(l+r)>>1,cr=newnode();sz[cr]=r-l+1;\n\t\tfa[son[cr][0]=build_tree(a,l,md)]\n\t\t\t=fa[son[cr][1]=build_tree(a,md+1,r)]=cr;\n\t\treturn cr;\n\t}\n\n\tint merge(int u,int v)\n\t{\n\t\tif(!u||!v)return u|v;\n\t\tif(sz[u]>=sz[v]*alp&&sz[v]>=sz[u]*alp)\n\t\t{\n\t\t\tint cr=newnode();sz[cr]=sz[u]+sz[v];\n\t\t\tfa[son[cr][0]=u]=fa[son[cr][1]=v]=cr;\n\t\t\treturn cr;\n\t\t}\n\t\tif(sz[u]>sz[v])\n\t\t{\n\t\t\tint ls=son[u][0],rs=son[u][1];del(u);\n\t\t\tif(sz[ls]>=alp*(sz[ls]+sz[rs]+sz[v]))return merge(ls,merge(rs,v));\n\t\t\telse\n\t\t\t{\n\t\t\t\tint lls=son[rs][0],rrs=son[rs][1];del(rs);\n\t\t\t\treturn merge(merge(ls,lls),merge(rrs,v));\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint ls=son[v][0],rs=son[v][1];del(v);\n\t\t\tif(sz[rs]>=alp*(sz[u]+sz[ls]+sz[rs]))return merge(merge(u,ls),rs);\n\t\t\telse\n\t\t\t{\n\t\t\t\tint lls=son[ls][0],rrs=son[ls][1];del(ls);\n\t\t\t\treturn merge(merge(u,lls),merge(rrs,rs));\n\t\t\t}\n\t\t}\n\t}\n\n\tPr split(int u,int k)\n\t{\n\t\tif(!u||!k)return mp(0,u);\n\t\tif(k==sz[u])return mp(u,0);\n\t\tint ls=son[u][0],rs=son[u][1];del(u);\n\t\tif(sz[ls]>=k)\n\t\t{\n\t\t\tPr y=split(ls,k);\n\t\t\treturn mp(y.first,merge(y.second,rs));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tPr y=split(rs,k-sz[ls]);\n\t\t\treturn mp(merge(ls,y.first),y.second);\n\t\t}\n\t}\n\n\tinline int order_of_key(int u)\n\t{\n\t\tregister int sm=1;\n\t\tfor(;fa[u];u=fa[u])if(u==son[fa[u]][1])\n\t\t\tsm+=sz[son[fa[u]][0]];\n\t\treturn sm;\n\t}\n\n\tinline int getrt(int u){while(fa[u])u=fa[u];return u;}\n\n\tinline int Cgbk(int u)\n\t{\n\t\tint rk=order_of_key(u);\n\t\twhile(fa[u])u=fa[u];\n\t\tif(rk==sz[u])return u;\n\t\tPr y=split(u,rk);\n\t\treturn merge(y.second,y.first);\n\t}\n\n\tvoid dfout(int u)\n\t{\n\t\tif(son[u][0])dfout(son[u][0]),dfout(son[u][1]);\n\t\telse cerr<<u<<' ';\n\t}\n}\nusing leafy_tree::build_tree;\nusing leafy_tree::merge;\nusing leafy_tree::split;\nusing leafy_tree::order_of_key;\nusing leafy_tree::getrt;\nusing leafy_tree::Cgbk;\nusing leafy_tree::dfout;\n\nstatic int hs[2][MAXN][MAXN];\n\ninline void insert(int x0,int y0,int x1,int y1)\n{\n\tint ubl=-1,dbl=-1;\n\tif(x0<x1)\n\t{\n\t\tif(y0&&hs[0][x0][y0-1])ubl=getid(0,x0,y0-1,1);\n\t\telse if(x0&&hs[1][x0-1][y0])ubl=getid(1,x0-1,y0,0);\n\t\telse if(hs[0][x0][y0])ubl=getid(0,x0,y0,0);\n\n\t\tif(hs[0][x1][y1])dbl=getid(0,x1,y1,0);\n\t\telse if(hs[1][x1][y1])dbl=getid(1,x1,y1,1);\n\t\telse if(y1&&hs[0][x1][y1-1])dbl=getid(0,x1,y1-1,1);\n\t}\n\telse\n\t{\n\t\tif(hs[1][x0][y0])ubl=getid(1,x0,y0,1);\n\t\telse if(y0&&hs[0][x0][y0-1])ubl=getid(0,x0,y0-1,1);\n\t\telse if(x0&&hs[1][x0-1][y0])ubl=getid(1,x0-1,y0,0);\n\n\t\tif(x0&&hs[1][x1-1][y1])dbl=getid(1,x1-1,y1,0);\n\t\telse if(hs[0][x1][y1])dbl=getid(0,x1,y1,0);\n\t\telse if(hs[1][x1][y1])dbl=getid(1,x1,y1,1);\n\t}\n\tif(~ubl&&~dbl)\n\t{\n\t\tif(getrt(ubl)==getrt(dbl))\n\t\t{\n\t\t\tCgbk(ubl);\n\t\t\tPr z=split(getrt(ubl),order_of_key(dbl));\n\t\t\tmerge(z.second,getid(x0<x1,x0,y0,y0<y1));\n\t\t\tmerge(z.first,getid(x0<x1,x0,y0,x0<x1));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tCgbk(ubl),Cgbk(dbl);\n\t\t\tmerge(getrt(ubl),getid(x0<x1,x0,y0,y0<y1));\n\t\t\tmerge(getrt(dbl),getid(x0<x1,x0,y0,x0<x1));\n\t\t\tmerge(getrt(ubl),getrt(dbl));\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(~ubl)Cgbk(ubl),merge(getrt(ubl)\n\t\t\t\t,merge(getid(x0<x1,x0,y0,y0<y1)\n\t\t\t\t\t,getid(x0<x1,x0,y0,x0<x1)));\n\t\telse if(~dbl)Cgbk(dbl),merge(getrt(dbl)\n\t\t\t\t,merge(getid(x0<x1,x0,y0,x0<x1)\n\t\t\t\t\t,getid(x0<x1,x0,y0,y0<y1)));\n\t\telse merge(getid(x0<x1,x0,y0,0),getid(x0<x1,x0,y0,1));\n\t}\n\ths[x0<x1][x0][y0]=1;\n}\n\nstatic int a[NODE],z;\n\ninline void solve()\n{\n\tleafy_tree::Memery_Manage::cr=lm=2*(n*(m+1)+m*(n+1));\n\tRep(i,1,lm)leafy_tree::sz[i]=1;\n\tRep(i,0,m-1)a[++z]=getid(0,0,i,1),hs[0][0][i]=hs[0][n][i]=1;\n\tRep(i,0,n-1)a[++z]=getid(1,i,m,0),hs[1][i][0]=hs[1][i][m]=1;\n\tRepe(i,m-1,0)a[++z]=getid(0,n,i,0);\n\tRepe(i,n-1,0)a[++z]=getid(1,i,0,1);\n\tbuild_tree(a,1,z),z=0;\n\tRepe(i,m-1,0)a[++z]=getid(0,0,i,0);\n\tRep(i,0,n-1)a[++z]=getid(1,i,0,0);\n\tRepe(i,0,m-1)a[++z]=getid(0,n,i,1);\n\tRepe(i,n-1,0)a[++z]=getid(1,i,m,1);\n\tbuild_tree(a,1,z);\n\tstatic int op,x0,y0,x1,y1,x2,y2,x3,y3,d0,d1;\n\tRep(i,1,n)Rep(j,1,m-1)\n\t{\n\t\tread(op);\n\t\tif(op)insert(i-1,j,i,j);\n\t}\n\tRep(i,1,n-1)Rep(j,1,m)\n\t{\n\t\tread(op);\n\t\tif(op)insert(i,j-1,i,j);\n\t}\n\twhile(Q--)\n\t{\n\t\tread(op);\n\t\tif(op==3)\n\t\t{\n\t\t\tread(x0),read(y0),read(x1),read(y1),read(d0);\n\t\t\tread(x2),read(y2),read(x3),read(y3),read(d1);\n\t\t\tif(x0+y0>x1+y1)swap(x0,x1),swap(y0,y1);\n\t\t\tif(x2+y2>x3+y3)swap(x2,x3),swap(y2,y3);\n\t\t\tint u=getid(x0<x1,x0,y0,d0),v=getid(x2<x3,x2,y2,d1);\n\t\t\tif(getrt(u)^getrt(v)){write(-1);continue;}\n\t\t\tint z=order_of_key(v)-order_of_key(u);\n\t\t\tif(z<0)z+=leafy_tree::sz[getrt(u)];\n\t\t\twrite(z);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tread(x0),read(y0),read(x1),read(y1);\n\t\t\tif(x0+y0>x1+y1)swap(x0,x1),swap(y0,y1);\n\t\t\tif(op==1)insert(x0,y0,x1,y1);\n\t\t\telse\n\t\t\t{\n\t\t\t\ths[x0<x1][x0][y0]=0;\n\t\t\t\tint u=getid(x0<x1,x0,y0,0),v=u+1;\n\t\t\t\tif(getrt(u)==getrt(v))\n\t\t\t\t{\n\t\t\t\t\tCgbk(v);\n\t\t\t\t\tint rt=split(getrt(u),order_of_key(u)-1).second;\n\t\t\t\t\trt=split(rt,1).second;\n\t\t\t\t\tsplit(rt,leafy_tree::sz[rt]-1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tCgbk(u),Cgbk(v);\n\t\t\t\t\tu=split(getrt(u),leafy_tree::sz[getrt(u)]-1).first,\n\t\t\t\t\tv=split(getrt(v),leafy_tree::sz[getrt(v)]-1).first;\n\t\t\t\t\tmerge(u,v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tflush();\n}\n\nint main()\n{\n\tfile();\n\tinit();\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1556107165,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5321 \u3010[BJOI2019]\u9001\u522b\u3011"
    },
    {
        "content": "[\u5e7f\u544a](https://m-sea-blog.com)\n\n---\n\n\u4ece hyj \u90a3\u91cc\u5b66\u4e60\u4e86\u4e00\u4e2a\u597d\u5199\u7684 LCT \u505a\u6cd5\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u4e2a\u4eba\u7406\u89e3\uff0c\u5982\u679c\u6709\u9519\u8bef\u6b22\u8fce\u63d0\u51fa\u3002\n\n\u5c06\u6bcf\u4e2a\u683c\u70b9\u62c6\u6210\u56db\u4e2a\u70b9\uff0c\u5206\u522b\u8868\u793a\u4ece\u8fd9\u4e2a\u70b9\u5f80\u53f3\u8d70\u3001\u5f80\u4e0b\u8d70\u3001\u5f80\u5de6\u8d70\u3001\u5f80\u4e0a\u8d70\u3002\n\n\u5bf9\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u4e00\u4e2a $nxt$\uff0c\u8868\u793a\u6309\u7167\u9898\u76ee\u4e2d\u7684\u65b9\u5f0f\u4e0b\u4e00\u6b65\u4f1a\u8d70\u5230\u54ea\u4e2a\u70b9\u4e0a\u3002\u53ef\u4ee5\u53d1\u73b0 $nxt$ \u6784\u6210\u4e86\u4e00\u4e9b\u6709\u5411\u73af\uff0c\u6211\u4eec\u60f3\u529e\u6cd5\u5bf9\u5176\u8fdb\u884c\u7ef4\u62a4\u3002\n\n\u8003\u8651\u5c06\u73af\u62c6\u6389\u4e00\u6761\u8fb9\u53d8\u6210\u4e00\u6761\u6709\u5411\u94fe\uff0c\u5e76\u7528 LCT \u7ef4\u62a4\u8fd9\u6761\u94fe\u3002\u6211\u4eec\u540c\u65f6\u7ef4\u62a4\u6bcf\u4e00\u6bb5\u5899\u662f\u5426\u5b58\u5728\uff0c\u5e76\u4fee\u6539\u8fde\u8fdb\u67d0\u4e2a\u70b9\u7684\u94fe\u3002\u5728\u4fee\u6539\u65f6\uff0c\u6211\u4eec\u9996\u5148\u65ad\u6389\u8fde\u8fdb\u6765\u7684\u8fb9\uff0c\u7136\u540e\u518d\u6839\u636e\u5899\u7684\u60c5\u51b5\u4fee\u6539\u8fde\u8fdb\u6765\u7684\u70b9\u7684 $nxt$ \u5e76\u8fde\u8fb9\u3002\u8fd9\u4e00\u6bb5\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801\u7406\u89e3\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u65ad\u8fb9\u65f6\u9700\u8981\u628a\u4e4b\u524d\u62c6\u6389\u7684\u90a3\u4e00\u6761\u8fb9\u8fde\u4e0a\uff0c\u4fdd\u8bc1\u73af\u53ea\u62c6\u6389\u4e86\u4e00\u6761\u8fb9\u3002\n\n\u90a3\u4e48\u4fee\u6539\u64cd\u4f5c\u5c31\u53ea\u9700\u8981\u5c06\u90a3\u6bb5\u5899\u7684\u72b6\u6001\u6539\u53d8\uff0c\u7136\u540e\u4fee\u6539\u4e24\u4e2a\u70b9\u5373\u53ef\u3002\n\n\u8003\u8651\u5982\u4f55\u8be2\u95ee\uff0c\u53d1\u73b0\u4e3b\u8981\u95ee\u9898\u662f $s\\to t$ \u53ef\u80fd\u4f1a\u7ecf\u8fc7\u62c6\u6389\u7684\u90a3\u6761\u8fb9\u3002\u4e8e\u662f\u6211\u4eec\u65ad\u6389 $t\\to nxt_t$\uff0c\u518d\u628a\u4e4b\u524d\u62c6\u6389\u7684\u8fb9\u8fde\u4e0a\uff0c\u5c31\u53d8\u6210\u4e86\u8be2\u95ee $s$ \u5230 $t$ \u7684\u8ddd\u79bb\uff0c\u5728 LCT \u4e0a\u7ef4\u62a4 $size$ \u5373\u53ef\u3002\n\n```cpp\n// ====================================\n//   author: M_sea\n//   website: https://m-sea-blog.com/\n// ====================================\n#include <bits/stdc++.h>\n#define file(x) freopen(#x\".in\",\"r\",stdin),freopen(#x\".out\",\"w\",stdout)\n#define debug(...) fprintf(stderr,__VA_ARGS__)\nusing namespace std;\ntypedef long long ll;\n\nint read() {\n\tint X=0,w=1; char c=getchar();\n\twhile (c<'0'||c>'9') { if (c=='-') w=-1; c=getchar(); }\n\twhile (c>='0'&&c<='9') X=X*10+c-'0',c=getchar();\n\treturn X*w;\n}\n\nconst int N=500+10,M=1004004+10;\nconst int dx[4]={0,1,0,-1},dy[4]={1,0,-1,0};\n\nint n,m,Q;\nint id[N][N][4],tot=0;\nint f[N][N][4];\n\nint ch[M][2],fa[M],sz[M],nxt[M];\nbool nroot(int x) { return ch[fa[x]][0]==x||ch[fa[x]][1]==x; }\nvoid pushup(int x) { sz[x]=sz[ch[x][0]]+sz[ch[x][1]]+1; }\nvoid rotate(int x) {\n\tint y=fa[x],z=fa[y],k=(x==ch[y][1]),w=ch[x][!k];\n\tif (nroot(y)) ch[z][y==ch[z][1]]=x;\n\tch[x][!k]=y,ch[y][k]=w;\n\tif (w) fa[w]=y; fa[y]=x,fa[x]=z;\n\tpushup(y);\n}\nvoid splay(int x) {\n\twhile (nroot(x)) {\n\t\tint y=fa[x],z=fa[y];\n\t\tif (nroot(y)) rotate((x==ch[y][1])^(y==ch[z][1])?x:y);\n\t\trotate(x);\n\t}\n\tpushup(x);\n}\nvoid access(int x) {\n\tfor (int y=0;x;x=fa[y=x])\n\t\tsplay(x),ch[x][1]=y,pushup(x);\n}\nint findroot(int x) {\n\taccess(x),splay(x);\n\twhile (ch[x][0]) x=ch[x][0];\n\tsplay(x); return x;\n}\nvoid link(int x) { // link (x,nxt[x])\n\tif (!nxt[x]) return;\n\tif (findroot(x)!=findroot(nxt[x])) fa[x]=nxt[x];\n}\nvoid cut(int x) { // cut (x,nxt[x])\n\tif (!nxt[x]) return;\n\tint y=findroot(x);\n\taccess(x),splay(x),ch[x][0]=fa[ch[x][0]]=nxt[x]=0,pushup(x);\n\tlink(y);\n}\n\nvoid modify(int x,int y) {\n\tfor (int d=0;d<4;++d) {\n\t\tint X=x+dx[d],Y=y+dy[d];\n\t\tif (X<0||X>n||Y<0||Y>m) continue;\n\t\tcut(id[X][Y][(d+2)%4]);\n\t}\n\tint p[5],s=0;\n\tfor (int d=0;d<4;++d){ \n\t\tint X=x+dx[d],Y=y+dy[d];\n\t\tif (X<0||X>n||Y<0||Y>m||!f[X][Y][(d+2)%4]) continue;\n\t\tp[++s]=d;\n\t}\n\tp[0]=p[s];\n\tfor (int i=1;i<=s;++i) {\n\t\tint d=p[i],X=x+dx[d],Y=y+dy[d];\n\t\tnxt[id[X][Y][(d+2)%4]]=id[x][y][p[i-1]],link(id[X][Y][(d+2)%4]);\n\t}\n}\nint query(int s,int t) {\n\tint tmp=nxt[t]; cut(t),access(s),splay(s); int res=sz[s];\n\tnxt[t]=tmp; return res;\n}\n\nint get() {\n\tint a=read(),b=read(),c=read(),d=read(),e=read();\n\tif (a!=c) {\n\t\tif (a>c) swap(a,c),swap(b,d);\n\t\tif (!e) return id[a][b][1];\n\t\telse return id[c][d][3];\n\t} else {\n\t\tif (b>d) swap(a,c),swap(b,d);\n\t\tif (!e) return id[c][d][2];\n\t\telse return id[a][b][0];\n\t}\n}\n\nint main() {\n\tn=read(),m=read(),Q=read();\n\tfor (int i=0;i<=n;++i)\n\t\tfor (int j=0;j<=m;++j)\n\t\t\tfor (int k=0;k<4;++k) id[i][j][k]=++tot;\n\tfor (int i=0;i<=n;++i) f[i][0][1]=f[i][0][3]=f[i][m][1]=f[i][m][3]=1;\n\tfor (int i=0;i<=m;++i) f[0][i][0]=f[0][i][2]=f[n][i][0]=f[n][i][2]=1;\n\tfor (int i=1;i<=n;++i)\n\t\tfor (int j=1;j<m;++j) f[i-1][j][1]=f[i][j][3]=read();\n\tfor (int i=1;i<n;++i)\n\t\tfor (int j=1;j<=m;++j) f[i][j-1][0]=f[i][j][2]=read();\n\tfor (int i=0;i<=n;++i)\n\t\tfor (int j=0;j<=m;++j) modify(i,j);\n\twhile (Q--) {\n\t\tint op=read();\n\t\tif (op<=2) {\n\t\t\tint a=read(),b=read(),c=read(),d=read();\n\t\t\tfor (int i=0;i<4;++i)\n\t\t\t\tif (a+dx[i]==c&&b+dy[i]==d) f[a][b][i]^=1,f[c][d][(i+2)%4]^=1;\n\t\t\tmodify(a,b),modify(c,d);\n\t\t} else {\n\t\t\tint s=get(),t=get();\n\t\t\tprintf(\"%d\\n\",query(s,t)-1);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1610632803,
        "uid": 38370,
        "name": "M_sea",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5321 \u3010[BJOI2019]\u9001\u522b\u3011"
    },
    {
        "content": "## BJOI 2019 D1T3 \u9001\u522b Sol\n\n\u8003\u573a\u7206\u809d $3.5h$ \u8fc7\u6389\u5927\u6837\u4f8b\u51fa\u5206\u7206 $30$ \u9009\u624b\u6765\u5199\u4e2a\u9898\u89e3\n\n\u8fd9\u9898\u7684\u601d\u8def\u8fd8\u662f\u633a\u76f4\u89c2\u7684\uff0c\u9898\u9762\u7684\u63d0\u793a\u4e5f\u6bd4\u8f83\u660e\u663e\u3002\u5927\u6982\u5fc3\u8def\u5386\u7a0b\u5c31\u662f\uff1a\u8fd9\u4e2a\u63d2\u5165/\u5220\u9664\u5899\u600e\u4e48\u4e00\u6b21\u53ea\u5904\u7406\u4e00\u4e2a\u554a...\u4e3a\u5565\u4e0d\u4e00\u6b21\u641e\u4e00\u4e32\u5899...\u96be\u4e0d\u6210\u590d\u6742\u5ea6\u548c\u5899\u7684\u4e2a\u6570\u6709\u5173...\u8bf6\u597d\u50cf\u6bcf\u4e2a\u5899\u5efa\u4e24\u4e2a\u70b9\u5c31\u6ca1\u4e86\u554a\n\n\u6211\u4eec\u4e3a\u6bcf\u4e2a\u5899\u5efa\u7acb\u4e24\u4e2a\u70b9\uff0c\u5206\u522b\u4ee3\u8868\u6a2a\u7740\u5899\u7684\u4e0a\u4e0b\u548c\u7ad6\u7740\u5899\u7684\u5de6\u53f3\u4e24\u4fa7\u3002\u6ce8\u610f\u9898\u76ee\u4e2d\u8d70\u7684\u8def\u4e00\u5b9a\u662f\u7531\u82e5\u5e72\u4e2a\u73af\u7ec4\u6210\uff0c\u8003\u8651\u76f4\u63a5\u7ef4\u62a4\u8fd9\u4e9b\u73af\u3002\u628a\u6bcf\u4e2a\u73af\u4ece\u968f\u4fbf\u4e00\u4e2a\u5730\u65b9\u62c6\u5f00\uff0c\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u5e8f\u5217\u3002\u63d2\u5165\u5220\u9664\u5c31\u662f\u82e5\u5e72\u73af\u7684\u5e76/\u5206\u79bb\uff0c\u67e5\u8be2\u5c31\u76f4\u63a5\u5728\u5e73\u8861\u6811\u4e0a\u67e5 $rank$ \u5c31\u884c\u4e86\n\n\u5b9e\u73b0\u7ec6\u8282\u53ef\u80fd\u5404\u4e0d\u76f8\u540c\uff0c $std$ \u5199\u4e86\u53ef\u6301\u4e45\u5316\u5e73\u8861\u6811\uff0c\u6211\u76f4\u63a5\u5199\u4e86\u5e73\u8861\u6811\uff0c\u5199\u6cd5\u4e0a\u53ef\u4ee5\u5404\u4f4d\u81ea\u5df1\u63a8\u660e\u767d\u81ea\u5df1\u7684\u5199\u6cd5\uff0c\u5728\u6b64\u5904\u6211\u7b80\u8ff0\u4e00\u4e0b\u6211\u5b9e\u73b0\u7684\u5185\u5bb9\u3002\n\n\u5bf9\u6bcf\u4e2a\u70b9\u6c42\u51fa\u5176\u524d\u9a71\u540e\u7ee7\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u76f4\u63a5\u5927\u529b\u8ba8\u8bba\uff08\u8be6\u89c1\u4ee3\u7801\u4e2d\u7684 $pre$ \u548c $nxt$ \u51fd\u6570\uff09\n\n\u5728\u63d2\u5165\u65f6\u8981\u8ba8\u8bba\u4e24\u79cd\u60c5\u51b5\uff0c\u4e00\u79cd\u60c5\u51b5\u662f\u8fd9\u4e2a\u65b0\u8fb9\u628a\u539f\u672c\u7684\u67d0\u4e2a\u73af\u9694\u65ad\u4e86\uff08\u6bd4\u5982\u4e00\u4e2a\u201c\u53e3\u201d\u53d8\u6210\u4e86\u4e00\u4e2a\u201c\u65e5\u201d\uff09\uff0c\u8fd9\u79cd\u60c5\u51b5\u5bf9\u5e94\u6211\u4ee3\u7801\u4e2d\u7684 $Same\\_cyc$ \uff0c\u8981\u63d0\u53d6\u51fa\u539f\u672c\u73af\u4e2d\u88ab\u65ad\u5f00\u7684\u90e8\u5206\uff1b\u53e6\u4e00\u79cd\u60c5\u51b5\u5219\u662f\u4ece\u73af\u4e0a\u63a5\u4e00\u6bb5\uff08\u6bd4\u5982\u4ece \u201c|\u201d \u53d8\u6210\u4e86 \u201c|-\u201d\uff09\uff0c\u8fd9\u79cd\u60c5\u51b5\u5219\u9700\u8981\u5c06\u539f\u672c\u7684\u73af\u65ad\u5f00\u7684\u90e8\u5206\u8f6c\u5230\u5f53\u524d\u8fd9\u6761\u8fb9\u5904\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u63a5\u4e0a\u4e86\u3002\n\n\u5220\u9664\u5219\u6bd4\u8f83\u5bb9\u6613\uff0c\u76f4\u63a5\u65ad\u5f00\u4ed6\u548c\u4ed6\u7684\u524d\u9a71\u53ca\u540e\u7ee7\uff0c\u7136\u540e\u5224\u4e00\u4e0b\u662f\u5426\u6b64\u65f6\u524d\u540e\u4e24\u6bb5\u8fd8\u8054\u901a\uff08\u56e0\u4e3a\u5934\u7684\u524d\u9a71\u53ef\u80fd\u662f\u5c3e\uff09\uff0c\u5982\u679c\u8054\u901a\u5c31\u62fc\u8d77\u6765\u3002\u4e4b\u540e\u8ba9\u4ed6\u7684\u524d\u9a71\u548c\u540e\u7ee7\u5404\u81ea\u627e\u5230\u81ea\u5df1\u7684\u524d\u9a71\u540e\u7ee7\u5373\u53ef\u3002\n\n\u53ef\u80fd\u8bf4\u7684\u4e0d\u592a\u6e05\u695a\uff0c\u770b\u4ee3\u7801\u5427...\u8981\u662f\u6211\u54ea\u91cc\u5199\u7684\u6bd4\u8f83\u4ee4\u4eba\u56f0\u60d1\u53ef\u4ee5\u8bc4\u8bba\u4e00\u4e0b\u6216\u8005\u7ed9\u6211\u53d1\u79c1\u4fe1\u90fd\u884cqwq\n\n```cpp\n// luogu-judger-enable-o2\n#include <bits/stdc++.h>\n#define il inline\n#define ri register int\n#define mp make_pair\n#define pb push_back\n#define mid ((l+r)>>1)\n#define MAXN 1050\n#define MAXM 3000050\n#define mod\n#define inf (INT_MAX)\n#define rep(i, x, y) for(ri i = (x); i <= (y); ++i)\n#define repd(i, x, y) for(ri i = (x); i >= (y); --i)\n#define alpha 0.75\n#define eps 1e-7\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntemplate <typename T> il bool chkmax(T &x, T y) {return x < y ? x = y, 1 : 0;}\ntemplate <typename T> il bool chkmin(T &x, T y) {return x > y ? x = y, 1 : 0;}\ntemplate <typename T> il void read(T &x) {\n    char ch = getchar(); int f = 1; x = 0;\n    while(ch < '0' || ch > '9') {if(ch == '-') f = -1; ch = getchar();}\n    while(ch >= '0' && ch <= '9') x = (x << 3) + (x << 1) + ch - '0', ch = getchar();\n    x *= f;\n}\nint n, m, q;\nint ver[MAXN<<1][MAXN<<1][2];\nint xx[MAXM], yy[MAXM], kk[MAXM];\nil int pre(int u);\nil int nxt(int u);\nvoid info(int u, const char* s);\nstruct Treap {\n    int size[MAXM], ch[MAXM][2], fa[MAXM], tcnt, kick[MAXM];\n    il int rnd() {\n        static int x = 19260817;\n        return x = (x * 48271ll) & INT_MAX;\n    }\n    il int newnode() {\n        int u = ++tcnt;\n        return update(u), u;\n    }\n    il void update(int u) {\n        size[u] = size[ch[u][0]] + size[ch[u][1]] + 1;\n    }\n    il int merge(int x, int y) {\n        if(!x || !y) return x ^ y;\n        int t;\n        if(rnd() % (size[x] + size[y]) < size[x]) \n            ch[t=x][1] = merge(ch[x][1], y), fa[ch[x][1]] = x;\n        else ch[t=y][0] = merge(x, ch[y][0]), fa[ch[y][0]] = y;\n        return update(t), t;\n    }\n    il void split(int u, int k, int &x, int &y) {\n        if(!u) x = y = 0;\n        else {\n            if(k <= size[ch[u][0]]) split(ch[u][0], k, x, ch[u][0]), fa[x] = 0, y = fa[ch[u][0]] = u;\n            else split(ch[u][1], k-size[ch[u][0]]-1, ch[u][1], y), fa[y] = 0, x = fa[ch[u][1]] = u;\n            update(u);\n        }\n    }\n    il int find(int u) {\n        while(fa[u]) u = fa[u];\n        return u;\n    }\n    il int rnk(int u) {\n        int ret = size[ch[u][0]] + 1;\n        while(fa[u]) ret += (u == ch[fa[u]][1]) * (size[ch[fa[u]][0]] + 1), u = fa[u];\n        return ret;\n    }\n    void prt(int u) {\n        if(!u) return ;\n        prt(ch[u][0]), cout << xx[u] << ' ' << yy[u] << ' ' << kk[u] << endl, prt(ch[u][1]);\n    }\n    void Print() {\n        cerr << \"start Prt\" << endl;\n        rep(i, 1, tcnt) if(find(i) == i && !kick[i]) prt(i), cerr << endl;\n        cerr << \"finish Prt\" << endl;\n    }\n    void check() {\n        rep(i, 1, tcnt) if(find(i) == i && !kick[i]) \n            if(pre(get(i, 0)) != get(i, 1)) {\n                prt(i);\n                info(get(i, 0), \"try\"), info(get(i, 1), \"try\");\n                info(pre(get(i, 0)), \"try\"), info(nxt(get(i, 1)), \"try\");\t\n                assert(0 * 2);\n            }\n    }\n    il int get(int u, int t) {\n        int _rt = find(u), x, y, r;\n        if(t) split(_rt, size[_rt]-1, x, y), r = y, merge(x, y);\n        else split(_rt, 1, x, y), r = x, merge(x, y);\n        return r;\n    }\n} T;\n#define chk(x) if((x)) return (x)\nil int nxt(int x, int y, int k) {\n    if(x & 1) {\n        if(!k) {\n            if(x >= 1) chk(ver[x-1][y+1][1]);\n            if(x >= 2) chk(ver[x-2][y][0]);\n            if(x >= 1 && y >= 1) chk(ver[x-1][y-1][0]);\n            return ver[x][y][1];\n        }\n        else {\n            if(y >= 1) chk(ver[x+1][y-1][0]);\n            chk(ver[x+2][y][1]);\n            chk(ver[x+1][y+1][1]);\n            return ver[x][y][0];\n        }\n    }\n    else {\n        if(!k) {\n            if(x >= 1 && y >= 1) chk(ver[x-1][y-1][0]);\n            if(y >= 2) chk(ver[x][y-2][0]);\n            if(y >= 1) chk(ver[x+1][y-1][1]);\n            return ver[x][y][1];\n        }\n        else {\n            chk(ver[x+1][y+1][1]);\n            chk(ver[x][y+2][1]);\n            if(x >= 1) chk(ver[x-1][y+1][0]);\n            return ver[x][y][0];\n        }\n    }\n}\nil int pre(int x, int y, int k) {\n    if(x & 1) {\n        if(!k) {\n            chk(ver[x+1][y+1][0]);\n            chk(ver[x+2][y][0]);\n            if(y >= 1) chk(ver[x+1][y-1][1]);\n            return ver[x][y][1];\n        }\n        else {\n            if(x >= 1 && y >= 1) chk(ver[x-1][y-1][1]);\n            if(x >= 2) chk(ver[x-2][y][1]);\n            if(x >= 1) chk(ver[x-1][y+1][0]);\n            return ver[x][y][0];\n        }\n    }\n    else {\n        if(!k) {\n            if(x >= 1) chk(ver[x-1][y+1][1]);\n            chk(ver[x][y+2][0]);\n            chk(ver[x+1][y+1][0]);\n            return ver[x][y][1];\n        }\n        else {\n            if(y >= 1) chk(ver[x+1][y-1][0]);\n            if(y >= 2) chk(ver[x][y-2][1]);\n            if(x >= 1 && y >= 1) chk(ver[x-1][y-1][1]);\n            return ver[x][y][0];\n        }\n    }\n}\nil int pre(int u) {\n    return pre(xx[u], yy[u], kk[u]);\n}\nil int nxt(int u) {\n    return nxt(xx[u], yy[u], kk[u]);\n}\nvoid info(int u, const char* s) {\n    cout << s << \": \"<< u << ' ' << xx[u] << ' ' << yy[u] << ' ' << kk[u] << endl;\n}\nil void merge(int x, int y) {\n    if(!x || !y) return ;\n    if(T.find(x) == T.find(y)) return ;\n//\tassert(T.rnk(x) == T.size[T.find(x)]);\n    T.fa[T.merge(T.find(x), T.find(y))] = 0;\n}\nil void link(int u) {\n    if(!u) return ;\n    merge(pre(u), u), merge(u, nxt(u));\n}\nvoid take(int u, int v) {\n    int _rt = T.find(u), a, b, c;\n    if(T.rnk(u) > T.rnk(v)) {\n        T.split(_rt, T.rnk(u)-1, a, c), T.split(a, T.rnk(v), a, b);\n        T.merge(c, a);\n    }\n    else {\n        T.split(_rt, T.rnk(v), a, c), T.split(a, T.rnk(u)-1, a, b);\n        T.merge(c, a);\n    }\n}\nbool Same_cyc(int u, int v) {\n    if(!u || !v) return 0;\n    return T.find(u) == T.find(v) && pre(T.get(u, 0)) == T.get(u, 1);\n}\nvoid setfr(int u) {\n    if(!u) return ;\n    int _rt = T.find(u), a, b;\n    T.split(_rt, T.rnk(u)-1, a, b), T.merge(b, a);\n}\nvoid setre(int u) {\n    if(!u) return ;\n    int _rt(T.find(u)), a, b;\n    T.split(_rt, T.rnk(u), a, b), T.merge(b, a);\n}\nvoid create(int x, int y, int k) {\n    int u = T.newnode();\n    ver[x][y][k] = u, xx[u] = x, yy[u] = y, kk[u] = k;\n}\nvoid insert(int x, int y) {\n//\tcout << \"In I \" << x << ' ' << y << endl;\n    rep(k, 0, 1) {\n        if(Same_cyc(pre(x, y, k), nxt(x, y, k))) {\n            take(nxt(x, y, k), pre(x, y, k));\n        }\n        else setfr(nxt(x, y, k)), setre(pre(x, y, k));\n        create(x, y, k);\n        link(ver[x][y][k]);\n    }\n//\tT.check();\n//\tcout << \"out I\" << endl;\n}\nil void cut(int u) {\n    if(!u) return ;\n    int _rt = T.find(u), a, b, c;\n    T.split(_rt, T.rnk(u), a, c), T.split(a, T.rnk(u)-1, a, b);\n    if(a && c && pre(T.get(a, 0)) == T.get(c, 1)) T.merge(T.find(c), T.find(a));\n}\nvoid erase(int x, int y) {\n//\tcout << \"In E \" << x << ' ' << y << endl;\n    rep(k, 0, 1) cut(ver[x][y][k]), T.kick[ver[x][y][k]] = 1, ver[x][y][k] = 0;\n    rep(k, 0, 1) link(pre(x, y, k)), link(nxt(x, y, k));\n//\tT.check();\n//\tcerr << \"Out E\" << endl;\n}\nil int query(int u, int v) {\n    if(T.find(u) != T.find(v)) return -1;\n    int w1 = T.rnk(u), w2 = T.rnk(v);\n    if(w1 <= w2) return w2-w1;\n    return w2-w1+T.size[T.find(u)];\n}\nil void Ex(int &x, int &y) {\n    int a = x, b = y;\n    y = m-a, x = b;\n}\nint main() {\n//\tfreopen(\"farewell.in\", \"r\", stdin);\n//\tfreopen(\"farewell.out\", \"w\", stdout);\n    read(n), read(m), read(q);\n    swap(n, m);\n    rep(i, 1, n) insert(i*2-1, 0), insert(i*2-1, m*2);\n    rep(i, 1, m) insert(0, i*2-1), insert(n*2, i*2-1);\n    int op, x0, y0, x1, y1, x2, y2, x3, y3, k1, k2;\n    repd(i, m, 1) \n        rep(j, 1, n-1) {\n            read(op); \n            if(op) insert(j * 2, i * 2 - 1);\n        }\n    repd(i, m-1, 1) \n        rep(j, 1, n) {\n            read(op);\n            if(op) insert(j * 2 - 1, i * 2);\n        }\n    while(q--) {\n        read(op);\n        read(x0), read(y0), read(x1), read(y1);\n        Ex(x0, y0), Ex(x1, y1);\n        if(op == 1) insert(x0+x1, y0+y1);\n        else if(op == 2) erase(x0+x1, y0+y1);\n        else {\n            read(k1), read(x2), read(y2), read(x3), read(y3), read(k2);\n            Ex(x2, y2), Ex(x3, y3);\n            int u1 = ver[x0+x1][y0+y1][k1], u2 = ver[x2+x3][y2+y3][k2];\n            printf(\"%d\\n\", query(u1, u2));\n        }\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1556000966,
        "uid": 3369,
        "name": "hychyc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5321 \u3010[BJOI2019]\u9001\u522b\u3011"
    },
    {
        "content": "~~\u5783\u573e\u9898\uff0c\u51fa\u9898\u4eba\u5783\u573e\u4f6c~~\n\n\u8fd9\u8fb9\u63d0\u4f9b\u4e00\u7bc7 FHQ treap \u7684\u9898\u89e3\n\n## \u5927\u81f4\u601d\u8def\n\n\u8003\u8651\u5230\u53ea\u9700\u8981\u627e\u4e24\u70b9\u4e4b\u95f4\u7684\u8def\u7a0b\uff0c\u800c\u590d\u6742\u5ea6\u660e\u663e\u4e0d\u80fd\u4f7f\u7528\u641c\u7d22\u5e76\u4e14\u8fd8\u6709\u6076\u5fc3\u7684\u4fee\u6539\u64cd\u4f5c\uff0c\u800c\u6bcf\u4e24\u70b9\u95f4\u90fd\u6709\u56fa\u5b9a\u7684\u8def\u7ebf\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u5408\u6cd5\u4f4d\u7f6e\u770b\u6210  $1$  \u4e2a\u865a\u70b9\uff0c\u7136\u540e\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u8fd9\u4e9b\u865a\u70b9\u5728\u67d0\u4e2a\u73af\u4e2d\u7684\u6392\u540d\u5373\u53ef\u8ba1\u7b97\u51fa\u7b54\u6848\u3002\n\n## \u5f62\u8c61\u5316\u7406\u89e3\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/pic322vy.png)\n\n\u5982\u56fe\u6240\u793a\uff0c\u76f4\u7ebf\u4ee3\u8868\u4e86\u5899\uff0c\u6570\u5b57\u5219\u662f\u6211\u4eec\u53ef\u4ee5\u7f16\u53f7\u4e0a\u53bb\u7684\u3002\n\n\u5f88\u660e\u663e\u8be2\u95ee\u65f6\u4e24\u4e2a\u4eba\u80af\u5b9a\u662f\u4f1a\u51fa\u73b0\u5728\u6211\u4eec\u7f16\u8fc7\u53f7\u7684\u8fd9\u4e9b\u70b9\u4e0a\uff0c\u8b6c\u5982\uff1a\n\n\u5f53\u8d77\u70b9\u5728  $1$  \uff0c\u7ec8\u70b9\u5728  $9$  \u65f6\uff0c\u8def\u7ebf\u5c31\u662f  $1,2,3,7,8,10,9$\u3002\n\n\u5f88\u660e\u663e\uff0c\u5728\u8fd9\u91cc\u8def\u5f84\u5f62\u6210\u4e86  $1$  \u4e2a\u73af\uff0c\u5373  $1,2,3,8,10,9,4,6,5,1,2,......$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u628a\u5df2\u6709\u7684\u70b9\u90fd\u8bb0\u5f55\u5230 FHQ \u4e2d\uff0c\u6bcf\u68f5 FHQ \u4e2d\u7684  $rank(1)$  \u548c  $rank(size)$  \u6070\u597d\u4e3a\u76f8\u90bb\u5143\u7d20\uff0c\u90a3\u4e48\u4e00\u4e2a\u73af\u5c31\u88ab\u8bb0\u5f55\u4e0b\u6765\u3002\n\n\u8fd9\u4e48\u8bb0\u5f55\u6700\u5927\u7684\u7528\u5904\u5c31\u662f\uff1a\u7531\u4e8e\u6bcf\u6bb5\u5899\u957f\u5ea6\u4e3a  $1$  \uff0c\u5f53\u4f60\u8981\u627e\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb\u65f6\uff0c\u53ea\u9700\u67e5\u627e\u8fd9\u4e24\u70b9\u7684\u6392\u540d\u5c31\u53ef\u4ee5\u8f7b\u677e\u5730\u8ba1\u7b97\u51fa\u4eba\u8981\u8d70\u7684\u8def\u5f84\u957f\u5ea6\u3002\n\n## \u5177\u4f53\u64cd\u4f5c\n\n### 1. \u67e5\u627e\u6392\u540d\n\n\u8fd9\u4e2a\u53ea\u8981\u6709\u4e00\u70b9\u5e73\u8861\u6811\u57fa\u7840\u7684\u5e94\u8be5\u90fd\u77e5\u9053\u600e\u4e48\u627e\uff1a\n\n\u6cbf\u7740\u7236\u4eb2\u5f80\u4e0a\u627e\uff0c\u5f53\u524d\u8282\u70b9\u662f\u7236\u4eb2\u7684\u53f3\u513f\u5b50\u5219  ```ans+=```  \u7236\u4eb2\u4ee5\u53ca\u7236\u4eb2\u5de6\u5b50\u6811\u7684\u5927\u5c0f\u3002\u82e5\u662f\u5de6\u513f\u5b50\u5219\u4e0d\u7528\u7406\u4f1a\u3002\n\n\u7528 FHQ \u7684\u540c\u5b66\u53ef\u4ee5\u5c06\u8282\u70b9\u7236\u4eb2\u5f53\u505a\u4e00\u9879\u9700\u8981\u989d\u5916\u7ef4\u62a4\u7684\u503c\uff0c\u5904\u7406\u65b9\u6cd5\u5c31\u662f\u5728  ```update```  \u7684\u65f6\u5019\u8bb2\u5f53\u524d\u8282\u70b9\u7684\u513f\u5b50\u7684\u7236\u4eb2\u6307\u5411\u81ea\u5df1\u5e76\u6e05\u7a7a\u5f53\u524d\u8282\u70b9\u7684\u7236\u4eb2\u503c\uff0c\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1\u7236\u4eb2\u7684\u6b63\u786e\u6027\u4e14\u6839\u8282\u70b9\u7684\u7236\u4eb2\u6307\u5411  $0$  \u3002\n\n### 2. \u73af\u7684\u65cb\u8f6c\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8bb0\u4e0b\u7684\u73af\u6765\u8bf4\uff1a\u6bd4\u5982  $1,2,3,4,1,2,3,4,1,2,...$  \u3002\n\n\u6211\u4eec\u8bb0\u5f55\u7684\u65f6\u5019\u662f\u8fd9\u6837\u8bb0\u5f55\u7684\uff1a  $1,2,3,4$  \u3002\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u628a\u524d\u9762\u7684\u4efb\u4f55\u6570\u88c2\u5f00\u7136\u540e\u5408\u5e76\u5230\u540e\u9762\u73af\u7684\u6027\u8d28\u4e0d\u4f1a\u6539\u53d8\uff1a\n\n\u4f8b\u5982\uff1a \u7531  $1,2,3,4$  \u53d8\u4e3a  $3,4,1,2$  \u3002\n\n\u8fd9\u4e2a\u6027\u8d28\u5f88\u91cd\u8981\uff0c\u5bf9\u4e8e\u6211\u4eec\u540e\u9762\u51cf\u5c11\u8ba8\u8bba\u60c5\u51b5\u5960\u5b9a\u4e86\u91cd\u8981\u57fa\u7840\u3002\n\n### 3. \u63d2\u5165\n\n\u8fd9\u4e2a\u662f\u6700 [\u6570\u636e\u5df2\u5220\u9664] \u6076\u5fc3\u7684\u64cd\u4f5c\u4e86\uff0c\u4ec5\u6b21\u4e8e\u5220\u9664\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/w5260oyc.png)\n\n\u8003\u8651\u8bb0  $i$  \u70b9\u7406\u8bba\u4e0a\u7684\u524d\u9a71\u4e3a  $p_i$  ,\u7406\u8bba\u4e0a\u7684\u540e\u7ee7\u4e3a  $s_i$  \u3002\n\n\u7ad6\u7740\u7684\u8fb9\u5de6\u7aef\u70b9\u4e3a  $t_0$  \u53f3\u7aef\u70b9\u4e3a  $t_1$  \u3002\n\n\u6a2a\u7740\u7684\u8fb9\u4e0b\u7aef\u70b9\u4e3a  $t_0$  \u4e0a\u7aef\u70b9\u4e3a  $t_1$  \u3002\n\n\u8fd9\u91cc\u5206\u4eab\u6211\u7684\u5206\u7c7b\u8ba8\u8bba\u65b9\u6cd5\uff0c\u5177\u4f53\u65b9\u6cd5\u636e\u4e2a\u4eba\u7406\u89e3\u800c\u5b9a\uff08\u56e0\u4e3a\u8981\u5206\u7c7b\u8ba8\u8bba\u7684\u70b9\u592a\u591a\u4e86\uff0c\u5206\u7c7b\u65b9\u6cd5\u4e5f\u56e0\u6b64\u6709\u5f88\u591a\uff0c\u5982\u679c\u4f60\u7684\u65b9\u6cd5\u4e0e\u9898\u89e3\u4e0d\u4e00\u6837\u4e5f\u4e0d\u9700\u8981\u6000\u7591\u81ea\u5df1\uff09\u3002\n\n\u5206\u51e0\u79cd\u60c5\u51b5\u8003\u8651\uff1a\n\n1. \u4e00\u6761\u8fb9\u6ca1\u6709\u4efb\u4f55\u524d\u9a71\u540e\u7ee7\uff1a \u53ea\u9700\u8981\u628a\u5899\u4e24\u8fb9\u8282\u70b9\u5408\u8d77\u6765\u5373\u53ef;\n\n2. \u53ea\u6709  $t_0$  \u7684\u524d\u9a71\u4e0e\u5176\u4ed6\u8fb9\u76f8\u8fde\uff1a\u628a  $p[t_0]$ \u8f6c\u5230\u5b83\u6240\u5728\u7684\u73af\u7684\u6700\u540e\uff0c\u5e76\u5728\u524d\u9762\u63d2\u4e0a  $t_1$  \u540e\u9762\u63d2\u4e0a  $t_0$\n\n3. \u53ea\u6709  $t_1$  \u7684\u524d\u9a71\u4e0e\u5176\u4ed6\u8fb9\u76f8\u8fde\uff1a\u628a  $s[t_0]$  \u8f6c\u5230\u5b83\u6240\u5728\u7684\u7684\u73af\u6700\u524d\uff0c\u5e76\u5728\u524d\u9762\u63d2\u4e0a  $t_0$  \u540e\u9762\u63d2\u4e0a  $t_1$\n\n4. \u5899\u7684\u4e24\u7aef\u90fd\u4e0e\u5176\u4ed6\u5899\u76f8\u8fde\uff1a\u5148\u6309\u7167\u7b2c  $2$  \u6761\u7684\u65b9\u6cd5\u8fdb\u884c\u5904\u7406\uff0c\u7136\u540e\u5224\u65ad  $s[t_0]$  \u662f\u5426\u4e0e  $p[t_0]$  \u5728\u540c\u4e00\u68f5\u6811\u4e2d\uff08\u627e\u6839\u5373\u53ef\uff09\u3002\u5982\u679c\u5728\uff0c\u8bf4\u660e\u5f62\u6210\u4e86\u73af\uff0c\u4e14\u73af\u4ee5  $t_0$  \u5f00\u5934  \uff0c  $s[t_0]$  \u7ed3\u5c3e\uff0c\u56e0\u6b64\u628a  $s[t_0]$  \u524d\u9762\u7684\u6570\u90fd\u5206\u51fa\u53bb\u5373\u53ef\u3002\u82e5\u4e0d\u5728\uff0c\u5219\u5148\u5c06  $s[t_0]$  \u8f6c\u5230\u5f00\u5934\u7136\u540e\u628a  $t_0$  \u63a5\u5728  $s[t_0]$  \u524d\u9762\u5373\u53ef\u3002\n\n\u6b63\u786e\u6027\u662f\u53ef\u4ee5\u4fdd\u8bc1\u7684\uff0c\u81ea\u5df1\u6a21\u62df\u4e00\u904d\u5c31\u80fd\u8bc1\u660e\u3002\n\n### 4. \u5220\u9664\n\n\u5176\u5b9e\u5220\u9664\u5c31\u662f\u63d2\u5165\u7684\u9006\u64cd\u4f5c\uff0c\u7b80\u5355\u5f88\u591a\u3002\n\n1. \u4e00\u6761\u8fb9\u6ca1\u6709\u4efb\u4f55\u524d\u9a71\u540e\u7ee7\uff1a \u76f4\u63a5\u66b4\u8e81\u62c6\u5899\u5373\u53ef\n\n2. \u5982\u679c\u6709\u4efb\u4f55\u8fb9\u8fde\u5728\u5899\u4e0a\uff0c\u5176\u5b9e\u5c31\u662f\u628a\u5f85\u62c6\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u5206\u522b\u8f6c\u5230\u73af\u7684\u524d\u9762\u6253\u6389\u7136\u540e\u5206\u60c5\u51b5\u5408\u5e76\u5c31\u884c\u4e86\uff0c\u5177\u4f53\u770b\u4ee3\u7801\u3002\n\n### 5. \u67e5\u8be2\n\n\u54ce\u5466\u5582\u7ec8\u4e8e\u6765\u5230\u6700\u540e\u4e00\u5173\u4e86\n\n\u6700\u540e\u4e00\u5173\u662f\u660e\u663e\u662f\u5956\u52b1\u5173\u5361\uff0c\u5f02\u5e38\u7b80\u5355\u3002\n\n\u9996\u5148\u6211\u4eec\u5224\u65ad\u8d77\u70b9\u4e0e\u7ec8\u70b9\u662f\u5426\u5728\u540c\u4e00\u73af\u4e2d\uff08\u5224\u6839\uff09\uff0c\u4e0d\u5728\u5c31\u76f4\u63a5  $-1$  \u6253\u56de\n\n\u5176\u6b21\u6211\u4eec\u627e\u5230\u8d77\u70b9\u4e0e\u7ec8\u70b9\u7684\u6392\u540d\u3002\n\n1. \u5982\u679c\u8d77\u70b9\u6392\u540d\u6bd4\u7ec8\u70b9\u5c0f\uff1a\u76f4\u63a5\u8f93\u51fa\u6392\u540d\u5dee\u5373\u53ef\n\n2. \u53cd\u4e4b\uff0c\u5219\u7528\u73af\u7684\u5927\u5c0f\u51cf\u53bb\u6392\u540d\u5dee\u8f93\u51fa\u5373\u53ef\n\n### 6. \u8c03\u8bd5\n\n\u8fd9\u4e48\u6076\u5fc3\u7684\u9898\u76ee\u8c03\u8bd5\u8d77\u6765\u4e5f\u5f88\u6076\u5fc3\u561b\uff0c\u8fd9\u8fb9\u63a8\u8350\u4e00\u79cd\u8c03\u8bd5\u65b9\u6cd5\u3002\n\n\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u627e\u5230\u4ed6\u4eec\u7684\u6839\uff0c\u5982\u679c\u6839\u6ca1\u6709\u88ab\u8bbf\u95ee\uff0c\u4e2d\u5e8f\u904d\u5386\u8fd9\u4e2a\u6839\u3002\n\n\u8fd9\u6837\u6bcf\u6b21\u4e2d\u5e8f\u904d\u5386\u51fa\u6765\u7684\u5c31\u662f\u4e00\u4e2a\u4e2a\u7684\u73af\u4e86\uff01\uff08\u5177\u4f53\u770b\u4ee3\u7801\u4e2d\u7684  ```debug()```  \u51fd\u6570\uff09\n\n## \u4ee3\u7801\n\n\u7801\u98ce~~\u6bd4\u8f83~~\u5f88\u4e11\uff0c\u5927\u4f6c\u8f7b\u55b7\u3002\n\n\n```\n#include<bits/stdc++.h>\n#define rep(a,b,c) for(register int c=(a);c<=(b);++c)\n#define N 1000005\n#define Debug(a,b) if(L==a&&R==b)debug();  \nusing namespace std;\nint csd;\ninline int read()\n{\n\tint res=0;char ch=getchar();while(ch<'0'||ch>'9')ch=getchar();\n\twhile(ch<='9'&&ch>='0')res=(res<<1)+(res<<3)+(ch^48),ch=getchar();return res;\n}\nstruct FHQ{int l,r,f,pos,siz,key;}t[N]; int n,m,q,cnt,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10;\ninline int Node(){t[++cnt].siz=1;t[cnt].key=rand();return cnt;}\nbool vis[1001]; int Loc[505][505][2][2],qkq;//\u5de6\u4e0a0\u53f3\u4e0b1\uff0c\u7ad60\u6a2a1\ninline int getRt(int k){while(t[k].f)k=t[k].f;return k;}//accept\ninline void print(int cur) {if(!cur)return;print(t[cur].l);printf(\"%d \",cur);print(t[cur].r);}\ninline void update(int k){t[k].siz=t[t[k].l].siz+t[t[k].r].siz+1;if(t[k].l)t[t[k].l].f=k; if(t[k].r)t[t[k].r].f=k; t[k].f=0;}\ninline void debug(){rep(1,cnt,i)vis[i]=0;rep(1,cnt,i){int r=getRt(i);if(!vis[r])print(r),vis[r]=1,puts(\"\");}puts(\"\");}\ninline void split(int k,int cur,int &x,int &y)\n{\n\t\n\tif(!cur){x=y=0;return;}\n\tif(k<=t[t[cur].l].siz){y=cur;split(k,t[cur].l,x,t[cur].l);update(cur);return;}\n\telse {x=cur;split(k-t[t[cur].l].siz-1,t[cur].r,t[cur].r,y);update(cur);return;}\n}\ninline int merge(int L,int R)\n{\n\tif(!L||!R)return L+R;\n\tif(t[L].key<t[R].key){t[L].r=merge(t[L].r,R);update(L);return L;}\n\telse{t[R].l=merge(L,t[R].l);update(R);return R;}\n}\ninline int rnk(int k){int res=t[t[k].l].siz;while(t[k].f){res+=(k==t[t[k].f].r)?t[t[t[k].f].l].siz+1:0;k=t[k].f;}return res+1;}\ninline int pre(int x,int y,bool d,bool b)\n{\n\tif(!d&&!b)return (Loc[x-1][y][1][1])?(Loc[x-1][y][1][1]):((Loc[x-1][y][0][0])?Loc[x-1][y][0][0]:((Loc[x-1][y+1][0][1])?Loc[x-1][y+1][0][1]:0));//accept\n\tif( d&& b)return (Loc[x+1][y-1][1][0])?Loc[x+1][y-1][1][0]:((Loc[x][y-1][1][1])?Loc[x][y-1][1][1]:((Loc[x][y-1][0][0])?Loc[x][y-1][0][0]:0));//accept\n\tif( d&&!b)return (Loc[x][y+1][0][1])?Loc[x][y+1][0][1]:((Loc[x+1][y][1][0])?Loc[x+1][y][1][0]:((Loc[x][y][1][1])?Loc[x][y][1][1]:0));//accept\n\tif(!d&& b)return (Loc[x][y][0][0])?Loc[x][y][0][0]:((Loc[x][y+1][0][1])?Loc[x][y+1][0][1]:((Loc[x+1][y][1][0])?Loc[x+1][y][1][0]:0));//accept\n\treturn 0;\n}\ninline int suc(int x,int y,bool d,bool b)\n{\n\tif(!d&&!b)return (Loc[x][y][0][1])?Loc[x][y][0][1]:((Loc[x+1][y][0][0])?Loc[x+1][y][0][0]:((Loc[x][y+1][1][1])?Loc[x][y+1][1][1]:0));//accept\n\tif( d&& b)return (Loc[x+1][y][0][0])?Loc[x+1][y][0][0]:((Loc[x][y+1][1][1])?Loc[x][y+1][1][1]:((Loc[x][y][1][0])?Loc[x][y][1][0]:0));//accept\n\tif( d&&!b)return (Loc[x-1][y+1][1][1])?Loc[x-1][y+1][1][1]:((Loc[x-1][y][1][0])?Loc[x-1][y][1][0]:((Loc[x-1][y][0][1])?Loc[x-1][y][0][1]:0));//accept\n\tif(!d&& b)return (Loc[x][y-1][1][0])?Loc[x][y-1][1][0]:((Loc[x][y-1][0][1])?Loc[x][y-1][0][1]:((Loc[x+1][y-1][0][0])?Loc[x+1][y-1][0][0]:0));//accept\n}\ninline void ins(int x,int y,bool b)//accept\n{\n\tint t0,t1;t0=Loc[x][y][0][b]=Node();t1=Loc[x][y][1][b]=Node();if(b)swap(t0,t1);\n\tint p0=pre(x,y,b,b),p1=pre(x,y,b^1,b),s0=suc(x,y,b,b),s1=suc(x,y,b^1,b);\n\tif(!p0&&!s0&&!p1&&!s1){merge(t0,t1);return;} if(p0)\n\t{\n\t\tsplit(rnk(p0),getRt(p0),T1,T2);T1=merge(merge(merge(t1,T2),T1),t0);\n\t\tif(s0){split(rnk(s0)-1,getRt(s0),T2,T3);if(getRt(t0)!=getRt(s0))merge(merge(T1,T3),T2);}\n\t}\n\telse split((rnk(s0)-1),getRt(s0),T1,T2),merge(merge(merge(t0,T2),T1),t1);\n}\ninline void del(int x,int y,bool b)\n{\n\tint t0,t1;t0=Loc[x][y][0][b];t1=Loc[x][y][1][b];if(b)swap(t0,t1);\n\tint p0=pre(x,y,b,b),p1=pre(x,y,b^1,b),s0=suc(x,y,b,b),s1=suc(x,y,b^1,b);if(p0)\n\t{\n\t\tsplit(rnk(t0)-1,getRt(t0),T1,T2);split(1,T2,T10,T2);T1=merge(T2,T1);\n\t\tif(getRt(p0)==getRt(s1)){split(rnk(s1)-1,T1,T1,T2);split(t[T1].siz-1,T1,T1,T10);}\n\t\telse {split(rnk(t1)-1,getRt(t1),T2,T3);split(1,T3,T10,T3);merge(T1,merge(T3,T2));} \n\t}\t\n\telse if(p1){split(rnk(t0)-1,getRt(t0),T1,T2);T1=merge(T2,T1);split(1,T1,T10,T1);split(t[T1].siz-1,T1,T1,T10);}\n\tLoc[x][y][0][b]=Loc[x][y][1][b]=0;return;\n}\ninline void Query(int x0,int y0,bool d0,bool b0,int x1,int y1,bool d1,bool b1)\n{\n\tint a=Loc[x0][y0][d0][b0],b=Loc[x1][y1][d1][b1];\n\tint ra=getRt(a),rb=getRt(b);if(ra!=rb){puts(\"-1\");return;}\n\tint aa=rnk(a),ab=rnk(b);\n\tint ans=(ab>aa)?(ab-aa):(ab-aa+t[ra].siz)%t[ra].siz;\n\tprintf(\"%d\\n\",ans);\n}\n\nint main()\n{\n\t//freopen(\"in.txt\",\"r\",stdin);\n\t//freopen(\"mout.txt\",\"w\",stdout);\n\tsrand(time(0));\n\tn=read();m=read();q=read();\n\trep(1,m,i)ins(0,i,1),ins(n,i,1);\n\trep(1,n,i)ins(i,0,0),ins(i,m,0);\n\trep(1,n,i)rep(1,m-1,j)if(read())ins(i,j,0);\n\trep(1,n-1,i)rep(1,m,j)if(read())ins(i,j,1);\n\tint opt,x0,y0,x1,y1,x2,y2,x3,y3;bool d1,d0;rep(1,q,i)\n\t{\n\t\topt=read();\n\t\tif(opt==1){x0=read();y0=read();x1=read();y1=read(); if(x0<x1)swap(x0,x1); if(y0<y1)swap(y0,y1);ins(x0,y0,(x0==x1));}\n\t\tif(opt==2){x0=read();y0=read();x1=read();y1=read();if(x0<x1)swap(x0,x1);if(y0<y1)swap(y0,y1);del(x0,y0,(x0==x1));}\n\t\tif(opt==3)\n\t\t{\n\t\t\tx0=read();y0=read();x1=read();y1=read();d0=read();x2=read();y2=read();x3=read();y3=read();d1=read();\n\t\t\tif(y0<y1)swap(y0,y1); if(x0<x1)swap(x0,x1); if(y2<y3) swap(y2,y3); if(x2<x3) swap(x2,x3);\n\t\t\tQuery(x0,y0,d0,((x0==x1)?1:0),x2,y2,d1,((x2==x3)?1:0));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u7ec3\u4e60\u7801\u529b\u7684\u6700\u597d\u65b9\u6cd5\u662f\u2014\u2014 A \u4e86\u8fd9\u9053\u9898\uff0c\u795d\u4f60\u597d\u8fd0\uff01\uff08\u7801\u529b++\uff09\u3002",
        "postTime": 1616311579,
        "uid": 191281,
        "name": "Jr_Zlw",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5321 \u9001\u522b"
    },
    {
        "content": "## $\\text{Foreword}$\n\u809d\u4e86\u4e00\u4e0b\u5348+\u4e00\u665a\u4e0a\u7684\u7801\u519c\u9898...  \n\uff08\u4e3b\u8981\u5c31\u662f\u5728 debug\uff0cLCT \u592a\u96be de \u4e86...\uff09  \n\u611f\u8c22 [@M_sea](https://www.luogu.com.cn/user/38370)\uff0c\u5728\u8c03\u65e0\u53ef\u8c03\u8ba4\u4e3aLCT\u4f1a\u4e0d\u4f1a\u4e0d\u53ef\u505a\u65f6\uff0c\u6211\u770b\u5230\u4e86\u4ed6\u7684\u9898\u89e3\uff0c\u51e0\u4e4e\u4e00\u6837\u7684\u601d\u8def\uff0c\u7ed9\u4e86\u6211\u7ee7\u7eed\u8c03\u4e0b\u53bb\u7684\u4fe1\u5fc3\u3002  \n## $\\text{Solution}$\n\u7b2c\u4e00\u611f\u5c31\u662f\u5272\u70b9 LCT \u7684\u611f\u89c9\u3002(~~\u4e3a\u4ec0\u4e48\u90fd\u8bf4\u8fd9\u662f\u5e73\u8861\u6811\u677f\u9898\u554a...~~)  \n\n\u7ec6\u5316\u4e00\u4e0b\uff0c\u628a\u6bcf\u4e2a\u683c\u70b9\u5206\u6210\u5de6\u4e0a\u3001\u53f3\u4e0a\u3001\u5de6\u4e0b\u3001\u53f3\u4e0b\u56db\u4e2a\u70b9\uff0c\u6bcf\u6761\u8fb9\u5206\u6210\u4e24\u8fb9\u4e24\u4e2a\u70b9\uff0c\u5728\u53ef\u4ee5\u76f4\u63a5\u8d70\u8fc7\u7684\u76f8\u90bb\u70b9\u76f4\u63a5\u8fde\u8fb9\uff0c\u90a3\u4e48\u6574\u5f20\u56fe\u5c31\u4f1a\u53d8\u6210\u82e5\u5e72\u4e2a\u73af\u3002  \n\u8be2\u95ee\u5c31\u662f\u8981\u6c42\u7ed9\u51fa\u4e24\u70b9\u5728\u73af\u4e0a\u94a6\u5b9a\u65b9\u5411\u7684\u8ddd\u79bb\u3002  \n\u5bf9\u4e8e\u4fee\u6539\uff0c\u4e00\u4e2a\u907f\u514d\u5206\u8ba8\u7684\u5b9e\u73b0\u65b9\u6cd5\u662f\u628a\u4fee\u6539\u683c\u8fb9\u6d89\u53ca\u5230\u6240\u6709\u70b9\u4e4b\u95f4\u7684\u8fb9 cut \u6389\uff0c\u4fee\u6539\u683c\u8fb9\u7684\u5b58\u5728\u72b6\u6001\u540e\uff0c\u518d\u6309\u7167\u65b0\u7684\u72b6\u6001\u628a\u5bf9\u5e94\u7684\u70b9 link \u56de\u53bb\u3002  \n\n\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff1aLCT\u662f\u65e0\u6cd5\u7ef4\u62a4\u73af\u7684\uff0c\u600e\u4e48\u529e\uff1f  \n\u4e00\u4e2a\u6bd4\u8f83\u76f4\u89c2\u7684\u60f3\u6cd5\u662f\uff1a\u968f\u4fbf\u9009\u4e00\u6761\u8fb9 cut \u6389\uff08\u79f0\u4e3a\u7279\u6b8a\u8fb9\uff09\uff0c\u8fd9\u6837\u5c31\u53d8\u6210\u4e00\u6761\u94fe\u4e86\u3002\u8be2\u95ee\u7684\u65f6\u5019\uff0c\u201c\u94a6\u5b9a\u7684\u65b9\u5411\u201d\u8981\u4e48\u662f split \u51fa\u7684\u5b9e\u94fe\u7684\u957f\u5ea6\uff0c\u8981\u4e48\u662f\u5176\u8865\u96c6\uff0c\u5e38\u89c4\u5957\u8def\u8bb0\u5f55\u5b9e\u94fe\u5927\u5c0f\u548c\u865a\u5b50\u6811\u5927\u5c0f\u5373\u53ef\u3002  \n\n\u4f46\u8fd9\u6837\u4fee\u6539\u7684\u65f6\u5019\u4f1a\u51fa\u95ee\u9898\uff1a\u5982\u679c\u4fee\u6539\u8fb9\u4f7f\u4e24\u4e2a\u73af\u5408\u5e76\u4e3a\u4e00\u4e2a\u73af\uff0c\u90a3\u4e48\u8fd9\u4e2a\u73af\u4e0a\u5c31\u4f1a\u6709\u4e24\u6761\u7279\u6b8a\u8fb9\uff0c\u90a3\u4e48\u6700\u7ec8\u7684 LCT \u5f62\u6001\u5c31\u4f1a\u53d8\u5f97\u4e0d\u8fde\u901a\u4e86...  \n\u4e5f\u6709\u89e3\u51b3\u65b9\u6cd5\uff1a\u5728\u5408\u5e76\u73af\u4e4b\u524d\u628a\u5404\u81ea\u7684\u7279\u6b8a\u8fb9 link \u56de\u53bb\uff0c\u5408\u5e76\u5b8c\u4e4b\u540e\u81ea\u7136\u5c31\u53ea\u4f1a\u51fa\u73b0\u4e00\u6761\u65b0\u7684\u7279\u6b8a\u8fb9\uff08\u5373\u5408\u5e76\u5931\u8d25\u7684\u8fb9\uff09\u3002  \n\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u8fd8\u9700\u8981\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u73af\u7684\u7279\u6b8a\u8fb9\u662f\u4ec0\u4e48\uff0c\u901a\u8fc7 LCT \u6253\u6807\u8bb0\u5373\u53ef\u7ef4\u62a4\u3002   \n\n\u4e8e\u662f\u672c\u9898\u5c31\u505a\u5b8c\u4e86\u3002  \n\uff08\u6211\u8c03\u4e86\u4e00\u665a\u4e0a\u7684\u5751\u70b9\uff1a\u5f53\u7279\u6b8a\u8fb9\u88ab\u4fee\u6539\u7684\u683c\u8fb9\u72b6\u6001\u6d89\u53ca\u5230\u65f6\uff0c\u4e0d\u5e94\u8be5\u989d\u5916 link \u7279\u6b8a\u8fb9\uff0c\u56e0\u4e3a\u4fee\u6539\u683c\u8fb9\u72b6\u6001\u540e\u53ef\u80fd\u8fd9\u6761\u8fb9\u672c\u8eab\u53ef\u80fd\u5c31\u5df2\u7ecf\u4e0d\u590d\u5b58\u5728\u4e86\uff01\uff09\n\n## $\\text{Code}$\n\u4ee3\u7801\u8c03\u8c03\u8865\u8865\u53d8\u5f97\u53c8\u957f\u53c8\u4e11\uff0c\u5c31\u653e[\u526a\u5207\u677f](https://www.luogu.com.cn/paste/foqu0p9k)\u5427\u3002  \n",
        "postTime": 1654650909,
        "uid": 449265,
        "name": "wind_whisper",
        "ccfLevel": 10,
        "title": "P5321 [BJOI2019]\u9001\u522b"
    }
]