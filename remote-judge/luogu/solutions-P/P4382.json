[
    {
        "content": "\u849f\u84bb\u5f3a\u884c\u53d1\u4e00\u6ce2\u9898\u89e3\n\n\u636e\u8bf4\u8fd9\u4e2a\u9898\u505a\u6cd5\u591a\u79cd\u591a\u6837\uff0c\u82b1\u6837\u8dd1\u5308\u7259\u5229\u3001dinic\uff0c\u751a\u81f3\u6709\u4eba\u8dd1\u8d39\u7528\u6d41\u90fd\u8fc7\u4e86\uff1f\n\n\u6211\u5199\u7684\u662f\u4e00\u79cd\u201c\u53d8\u5f62\u5308\u7259\u5229\u201d\uff0c\u53ef\u80fd\u662fsdoi\u5168\u573a\u8dd1\u5f97\u6700\u5feb\u7684\u4e4b\u4e00\u3002\n\n\u5927\u4f53\u601d\u8def\u5c31\u662f\uff0c\u6b63\u5e38\u8dd1\u5308\u7259\u5229\u65f6\u6bcf\u4e2a\u70b9\u53ea\u80fd\u5339\u914d\u4e00\u4e2a\u70b9\uff0c\u8fd9\u91cc\u6211\u4eec\u5f3a\u884c\u8ba9\u6bcf\u4e2a\u5bfc\u5e08\u7684\u70b9\u53ef\u4ee5\u5339\u914d\u591a\u4e2a\u9009\u624b\u3002\n\n\u6211\u4eec\u6309\u7167\u5e8f\u53f7\u4f9d\u6b21\u52a0\u5165\u4e00\u4e2a\u9009\u624b\uff0c\u5bf9\u4e8e\u6bcf\u4f4d\u9009\u624b\u679a\u4e3e\u6bcf\u4e2a\u5fd7\u613f\u7684\u6bcf\u4e2a\u5bfc\u5e08\u3002\n\n\u5982\u679c\u5f53\u524d\u5bfc\u5e08\u7684\u540d\u989d\u8fd8\u6ca1\u7528\u5b8c\uff0c\u76f4\u63a5\u5339\u914d\u6210\u529f\u3002\n\n\u5426\u5219\uff0c\u5bf9\u8fd9\u4f4d\u5bfc\u5e08\u5df2\u5339\u914d\u7684\u9009\u624b\uff0c\u518d\u5728**\u540c\u4e00\u5fd7\u613f**\u5185\u5bfb\u627e\u5176\u4ed6\u5bfc\u5e08\uff0c\u80fd\u5339\u914d\u5219\u5339\u914d\u6210\u529f\u3002\n\n\u8fd9\u4e00\u90e8\u5206\u4e0e\u4f20\u7edf\u7684\u5308\u7259\u5229\u601d\u8def\u662f\u7c7b\u4f3c\u7684\u3002\n\n\u81f3\u4e8e\u590d\u6742\u5ea6\uff0c\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u4eba\u65f6\uff0c\u6700\u591a\u5c06\u6240\u6709\u4eba\u7684**\u67d0\u4e00\u5fd7\u613f**\u5168\u90e8\u8bbf\u95ee\u4e00\u904d\uff0c\u56e0\u6b64\u603b\u590d\u6742\u5ea6\u662fn ^ 2 * c\u7684\u3002\n\n\u8fd9\u6837\u4e00\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u89e3\u51b3\u7b2c\u4e00\u95ee\u4e86\uff0c\u90a3\u4e48\u7b2c\u4e8c\u95ee\u5462\uff1f\n\n\u6211\u4eec\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u5c31\u662f\u4e8c\u5206\uff0c\u56e0\u4e3a\u7b54\u6848\u663e\u7136\u5177\u6709\u53ef\u4e8c\u5206\u6027\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u7b54\u6848k\uff0c\u5148\u628a\u524dk-1\u4e2a\u4eba\u8dd1\u4e00\u904d\u5308\u7259\u5229\uff0c\u518d\u52a0\u5165\u5f53\u524d\u8fd9\u4e2a\u4eba\u5373\u53ef\u3002\n\n\u7136\u800c\u5982\u679c\u6211\u4eec\u6bcf\u6b21\u90fd\u9700\u8981\u91cd\u8dd1\u4e00\u904d\u5308\u7259\u5229\u7684\u8bdd\uff0c\u590d\u6742\u5ea6\u5c31\u4e0a\u5347\u5230\u4e86n ^ 3 c logn,\u5bf9\u4e8e0.3s\u4e00\u7ec4\u6570\u636e\u6765\u8bf4\u4f1aT\u3002\n\n\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u5730\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u524d\u7f00\u8dd1\u5308\u7259\u5229\u7684\u7ed3\u679c\uff0c\u7136\u540e\u6bcf\u6b21check\u65f6\u76f4\u63a5\u5728\u5bf9\u5e94\u7248\u672c\u4e0a\u52a0\u5165\u4e00\u4e2a\u4eba\u5373\u53ef\u3002\n\n\u603b\u590d\u6742\u5ea6n ^ 2 c logn\uff0cluogu\u8dd1\u523092ms\u6682\u65f6\u5e94\u8be5\u662frk1\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<ctime>\nusing namespace std;\n#define li long long\n#define gc getchar()\n#define pc putchar\n#define kg pc(' ')\n#define hh pc('\\n')\nli read(){\n\tli x = 0,y = 1;\n\tchar c;\n\tc = gc;\n\twhile(!isdigit(c)){\n\t\tif(c == '-') y = -1;\n\t\tc = gc;\n\t}\n\twhile(isdigit(c)){\n\t\tx = (x << 1) + (x << 3) + c - '0';\n\t\tc = gc;\n\t}\n\treturn x * y;\n} \nvoid print(li x){\n\tif(x < 0){\n\t\tpc('-');\n\t\tx = -x;\n\t}\n\tif(x >= 10) print(x / 10);\n\tpc(x % 10 + '0');\n}\nint t,c,n,m;\nint a[210][210];\nint zy[210][210][11],sl[210][210];\nint mx[210],b[210];\nbool vst[210];\nint p1[210],p2[210][210],nw[210],an[210];\nint tp1[210][210],tp2[210][210][210],tnw[210][210];\nbool dfs(int q,int w){//\u5308\u7259\u5229\n\tint i,j,k,l;\n\tfor(j = 1;j <= sl[q][w];++j){\n\t\tk = zy[q][w][j];\n\t\tif(vst[k]) continue;\n\t\tvst[k] = 1;\n\t\tif(nw[k] < mx[k]){\n\t\t\tp1[q] = k;\n\t\t\tp2[k][++nw[k]] = q;\n\t\t\treturn 1;\n\t\t}\n\t\tfor(l = 1;l <= mx[k];++l){\n\t\t\ti = p2[k][l];\n\t\t\tif(dfs(i,a[i][k])){\n\t\t\t\tp1[q] = k;\n\t\t\t\tp2[k][l] = q;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nvoid wk1(){//\u7b2c\u4e00\u95ee\n\tint i,j,k;\n\tfor(i = 1;i <= n;++i){\n\t\tmemset(vst,0,sizeof(vst));\n\t\tfor(j = 1;j <= m;++j){\n\t\t\tif(!sl[i][j]) continue;\n\t\t\tif(dfs(i,j)) break;\n\t\t}\n        //\u4e0b\u9762\u662f\u590d\u5236\u5308\u7259\u5229\u7684\u7ed3\u679c\n\t\tfor(j = 1;j <= i;++j) tp1[i][j] = p1[j];\n\t\tfor(j = 1;j <= m;++j) tnw[i][j] = nw[j];\n\t\tfor(j = 1;j <= m;++j){\n\t\t\tfor(k = 1;k <= nw[j];++k) tp2[i][j][k] = p2[j][k];\n\t\t}\n\t}\n}\nbool wk2(int q,int w){//\u7b2c\u4e8c\u95ee\u7684check\uff0c\u8868\u793a\u7b2cq\u4e2a\u4eba\u5982\u679c\u5728\u7b2cw\u540d\u662f\u5426\u53ef\u884c\n\tint i,j;\n\tfor(i = 1;i <= w - 1;++i) p1[i] = tp1[w - 1][i];\n\tfor(i = 1;i <= m;++i) nw[i] = tnw[w - 1][i];\n\tfor(i = 1;i <= m;++i){\n\t\tfor(j = 1;j <= nw[i];++j) p2[i][j] = tp2[w - 1][i][j];\n\t}//copy\u524dw-1\u4e2a\u4eba\u7684\u7ed3\u679c\n\tmemset(vst,0,sizeof(vst));\n\tfor(i = 1;i <= b[q];++i){\n\t\tif(!sl[q][i]) continue;\n\t\tif(dfs(q,i)) return 1;\n\t}\n\treturn 0;\n}\nint main(){\n\tint i,j,l,r,mid,as;\n\tt = read();\n\tc = read();\n\twhile(t--){\n\t\tmemset(sl,0,sizeof(sl));\n\t\tmemset(p1,0,sizeof(p1));\n\t\tmemset(nw,0,sizeof(nw));\n\t\tn = read();\n\t\tm = read();\n\t\tfor(i = 1;i <= m;++i) mx[i] = read();\n\t\tfor(i = 1;i <= n;++i){\n\t\t\tfor(j = 1;j <= m;++j) {\n\t\t\t\ta[i][j] = read();\n\t\t\t\tif(a[i][j]) zy[i][a[i][j]][++sl[i][a[i][j]]] = j;\n\t\t\t}\n\t\t}\n\t\tfor(i = 1;i <= n;++i) a[i][0] = m + 1;\n\t\tfor(i = 1;i <= n;++i) b[i] = read();\n\t\twk1();\n\t\tfor(i = 1;i <= n;++i) {\n\t\t\tan[i] = a[i][p1[i]];\n\t\t\tprint(an[i]);\n\t\t\tkg;\n\t\t}\n\t\thh;\n\t\tfor(i = 1;i <= n;++i){\n\t\t\tif(an[i] <= b[i]){\n\t\t\t\tputchar('0');kg;continue;\n\t\t\t}\n\t\t\tl = 1;r = i - 1;as = 0;\n\t\t\twhile(l <= r){\n\t\t\t\tmid = l + r >> 1;\n\t\t\t\tif(wk2(i,mid)) {\n\t\t\t\t\tas = mid;\n\t\t\t\t\tl = mid + 1;\n\t\t\t\t}\n\t\t\t\telse r = mid - 1;\n\t\t\t}\n\t\t\tprint(i - as);kg;\n\t\t}\n\t\thh;\n\t}\n\treturn 0;\n}\n```\n\nupdate:\n\n\u9274\u4e8e\u5927\u591a\u6570\u4eba\u5199\u7684\u90fd\u662fdinic\uff0c\u672c\u849f\u84bb\u518d\u6597\u80c6\u66f4\u65b0\u4e00\u6ce2dinic\u7b97\u6cd5\u7684\u9898\u89e3\u3002\n\n\u539f\u70b9\u5411\u6bcf\u4e2a\u9009\u624b\u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a1\uff1b\u6bcf\u4e2a\u5bfc\u5e08\u5411\u6c47\u70b9\u8fde\u8fb9\uff0c\u8fb9\u6743\u662f\u8fd9\u4e2a\u5bfc\u5e08\u7684\u540d\u989d\u4e0a\u9650\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u8fd9\u91cc\u7684dinic\u9700\u8981\u52a8\u6001\u52a0\u8fb9\u3002\n\n\u540c\u6837\u8fd8\u662f\u679a\u4e3e\u6bcf\u4e2a\u4eba\uff0c\u679a\u4e3e\u6bcf\u4e2a\u5fd7\u613f\u3002\n\n\u628a\u8fd9\u4e2a\u4eba\u4e0e\u8fd9\u4e2a\u5fd7\u613f\u7684\u5bfc\u5e08\u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a1\u3002\n\n\u7136\u540e\u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a\u8dd1\u4e00\u6b21\u589e\u5e7f\u8def\uff0c\u5982\u679c\u6709\u6d41\u5219\u5339\u914d\u6210\u529f\u3002\n\n\u5426\u5219\u8fd9\u4e00\u7ec4\u7684\u8fb9\u5c31\u7528\u4e0d\u4e0a\u4e86\uff0c\u4e0d\u59a8\u76f4\u63a5\u5220\u9664\u3002\uff08\u636e\u8bf4\u4e0d\u8fd9\u6837\u7684\u8bdd\u4f1aT?\uff09\n\n\u8fd9\u6837\u7b2c1\u95ee\u5c31\u89e3\u51b3\u4e86\u3002\n\n\u5bf9\u4e8e\u7b2c2\u95ee\uff0c\u540c\u6837\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\u5e76\u66b4\u529b\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u524d\u7f00\u7684\u6b8b\u91cf\u7f51\u7edc\uff0c\u7136\u540e\u76f4\u63a5\u52a0\u4e0a\u524d\u9762\u6240\u6709\u7ec4\u7684\u8fb9\uff0c\u8dd1\u4e00\u6b21\u589e\u5e7f\u8def\u5373\u53ef\u5224\u65ad\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u7531\u4e8e\u4e8c\u5206\u56fe\u4e2ddinic\u7684\u590d\u6742\u5ea6\u5927\u7ea6\u4e3an * sqrt(n),\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u5927\u7ea6\u4e3an^2 sqrt(n) logn\u3002\n\n~~\u7ecf\u8fc7\u4e00\u756a\u4e27\u5fc3\u75c5\u72c2\u7684\u5e95\u5c42\u4f18\u5316\u540e~~luogu\u8dd1\u5230\u4e86180ms\uff0c\u4e5f\u8bb8\u662fdinic\u7684rk1\uff1f\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint p,c,n,m;\nstruct edge{\n\tint fr,to,nxt,pre,val;\n}e[10010],te[210][10010];\nint tf[210][410],fir[410],dq[410],an[210],tct[210];\nint cnt,s,g;\nint q[100010],h,t;\nint a[210][210],b[210],mx[210];\nint sl[210][210],zy[210][210][11];\nint vis[410];\n#define gc getchar()\n#define pc putchar\n#define kg pc(' ')\n#define hh pc('\\n')\n#define inf 987654321\n#define rg register\ninline int read(){\n\tint x = 0;\n\tchar c;\n\tc = gc;\n\twhile(!isdigit(c)) c = gc;\n\twhile(isdigit(c)){\n\t\tx = (x << 1) + (x << 3) + c - '0';\n\t\tc = gc;\n\t}\n\treturn x;\n}\nvoid print(int x){\n\tif(x >= 10) print(x / 10);\n\tpc(x % 10 + '0');\n}\ninline void ins(int u,int v,int w){\n\te[++cnt].to = v;e[cnt].nxt = fir[u];e[cnt].fr = u;\n\tif(fir[u]) e[fir[u]].pre = cnt;\n\tfir[u] = cnt;e[cnt].val = w;\n\te[++cnt].to = u;e[cnt].nxt = fir[v];e[cnt].fr = v;\n\tif(fir[v]) e[fir[v]].pre = cnt;\n\tfir[v] = cnt;e[cnt].val = 0;\n}\ninline void in2(int u,int v,int w){//\u8fd9\u91cc\u662f\u5e95\u5c42\u4f18\u5316\n\te[++cnt].to = v;e[cnt].nxt = fir[u];fir[u] = cnt;e[cnt].val = w;\n\te[++cnt].to = u;e[cnt].nxt = fir[v];fir[v] = cnt;e[cnt].val = 0;\n}\ninline void del(int q){//\u5220\u8fb9\uff0c\u7c7b\u4f3c\u4e8e\u4ece\u94fe\u8868\u4e2d\u5220\u9664\u5143\u7d20\u7684\u64cd\u4f5c\n\tif(e[q].nxt) e[e[q].nxt].pre = e[q].pre;\n\tif(e[q].pre) e[e[q].pre].nxt = e[q].nxt;\n\tif(q == fir[e[q].fr]) fir[e[q].fr] = e[q].nxt;\n}\n//\u4ee5\u4e0b\u662fdinic\nbool bfs(){\n\tmemset(vis,0,g * 4 + 4);\n\trg int i,j;\n\tmemcpy(dq,fir,g * 4 + 4);\n\th = t = 0;\n\tq[++t] = s;\n\tvis[s] = 1;\n\twhile(h < t){\n\t\tj = q[++h];\n\t\tfor(i = fir[j];i;i = e[i].nxt){\n\t\t\tif(e[i].val <= 0) continue;\n\t\t\tif(vis[e[i].to]) continue;\n\t\t\tvis[e[i].to] = vis[j] + 1;\n\t\t\tq[++t] = e[i].to;\n\t\t}\n\t}\n\treturn vis[g];\n}\nint dfs(int q,int fl){\n\tif(q == g) return fl;\n\tint tp,nw = 0;\n\tfor(int &i = dq[q];i;i = e[i].nxt){\n\t\tif(e[i].val <= 0) continue;\n\t\tif(vis[e[i].to] != vis[q] + 1) continue;\n\t\ttp = dfs(e[i].to,min(e[i].val,fl));\n\t\tnw += tp;\n\t\te[i].val -= tp;\n\t\te[i ^ 1].val += tp;\n\t\tif(nw == fl) return nw;\n\t}\n\tif(nw != fl) vis[q] = -1;\n\treturn nw;\n}\nvoid wk1(){//\u7b2c\u4e00\u95ee\n\trg int i,j,k;\n\tint l;\n\tfor(i = 1;i <= n;++i){\n\t\tan[i] = m + 1;\n\t\tins(s,i,1);\n\t\tfor(j = 1;j <= m;++j){\n\t\t\tif(!sl[i][j]) continue;\n\t\t\tl = cnt;\n\t\t\tfor(k = 1;k <= sl[i][j];++k) ins(i,zy[i][j][k] + n,1);//\u52a8\u6001\u52a0\u8fb9\n\t\t\tif(bfs() && dfs(s,inf)){\n\t\t\t\tan[i] = j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfor(k = l;k <= cnt;++k) del(k);//\u52a8\u6001\u5220\u8fb9\n\t\t\t\tcnt = l;\n\t\t\t}\n\t\t}\n        //copy\u6b8b\u91cf\u7f51\u7edc\n\t\tfor(j = 2;j <= cnt;++j) te[i][j] = e[j];\n\t\tfor(j = 1;j <= g;++j) tf[i][j] = fir[j];\n\t\ttct[i] = cnt;\n\t}\n}\nbool wk2(int q,int w){//\u7b2c\u4e8c\u95ee\u7684check\uff0c\u8868\u793a\u7b2cq\u4e2a\u4eba\u5982\u679c\u5728\u7b2cw\u540d\u662f\u5426\u53ef\u884c\n\trg int i,j;\n\tcnt = tct[w - 1];\n\tfor(i = 1;i <= g;++i) fir[i] = tf[w - 1][i];\n\tfor(i = 2;i <= cnt;++i) e[i] = te[w - 1][i];\n    //\u4ee5\u4e0a\u4e3acopy\u524dw-1\u4e2a\u4eba\u7684\u6b8b\u91cf\u7f51\u7edc\n\tins(s,q,1);\n\tfor(i = 1;i <= b[q];++i){\n\t\tif(!sl[q][i]) continue;\n\t\tfor(j = 1;j <= sl[q][i];++j) in2(q,zy[q][i][j] + n,1);\n\t}\n\treturn bfs() && dfs(s,inf);\n}\nint main(){\n\trg int i,j;\n\tint l,r,mid,as;\n\tp = read();\n\tc = read();\n\twhile(p--){\n\t\tmemset(sl,0,sizeof(sl));\n\t\tmemset(fir,0,sizeof(fir));\n\t\tcnt = 1;\n\t\tn = read();\n\t\tm = read();\n\t\ts = n + m + 1;\n\t\tg = n + m + 2;\n\t\tfor(i = 1;i <= m;++i) {\n\t\t\tmx[i] = read();\n\t\t\tins(i + n,g,mx[i]);\n\t\t}\n\t\ttct[0] = cnt;\n\t\tfor(i = 1;i <= g;++i) tf[0][i] = fir[i];\n\t\tfor(i = 2;i <= cnt;++i) te[0][i] = e[i];\n        //\u522b\u5fd8\u4e86\u628a\u4e00\u5f00\u59cb\u7684\u8fb9\u4e5f\u8bb0\u5f55\u4e0b\u6765\uff0c\u6211\u5728\u8fd9\u91ccwa\u4e86\u82e5\u5e72\u6b21qwq\n\t\tfor(i = 1;i <= n;++i){\n\t\t\tfor(j = 1;j <= m;++j){\n\t\t\t\ta[i][j] = read();\n\t\t\t\tif(!a[i][j]) continue;\n\t\t\t\tzy[i][a[i][j]][++sl[i][a[i][j]]] = j;\n\t\t\t}\n\t\t}\n\t\tfor(i = 1;i <= n;++i) b[i] = read();\n\t\twk1();\n\t\tfor(i = 1;i <= n;++i){\n\t\t\tprint(an[i]);\n\t\t\tkg;\n\t\t}\n\t\thh;\n\t\tfor(i = 1;i <= n;++i){\n\t\t\tif(an[i] <= b[i]){\n\t\t\t\tpc('0');kg;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tl = 1;r = i - 1;as = 0;\n\t\t\twhile(l <= r){\n\t\t\t\tmid = l + r >> 1;\n\t\t\t\tif(wk2(i,mid)){\n\t\t\t\t\tas = mid;\n\t\t\t\t\tl = mid + 1;\n\t\t\t\t}\n\t\t\t\telse r = mid - 1;\n\t\t\t}\n\t\t\tprint(i - as);kg;\n\t\t}\n\t\thh;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1523159853,
        "uid": 45775,
        "name": "liuzhangfeiabc",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4382 \u3010[\u516b\u7701\u8054\u80032018]\u5288\u914d\u3011"
    },
    {
        "content": "&emsp;\u8fd9\u9898\u538b\u6839\u5c31\u4e0d\u7528\u90a3\u4e48\u9ad8\u7ea7\u7684dinic\uff0cisap\u3002\u4e00\u53d1\u5308\u7259\u5229\u5c31\u89e3\u51b3\u4e86\u5440\uff0c\u7b2c\u4e8c\u95ee\u4e5f\u5b8c\u5168\u4e0d\u7528\u4e8c\u5206,\u53ef\u4ee5\u76f4\u63a5\u5728\u5308\u7259\u5229\u8dd1\u589e\u5e7f\u7684\u65f6\u5019\u987a\u4fbf\u6c42\u89e3\u3002\n\n&emsp;\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\u7edf\u8ba1\u5b83\u5728\u6bcf\u4e2a\u5fd7\u613f\u9009\u4e86\u90a3\u4e9b\u5bfc\u5e08\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\u6309\u5fd7\u613f\u987a\u5e8f\u9009\u62e9\u679a\u4e3e\u3002\u8bbe\u5f53\u524d\u679a\u4e3e\u5b66\u5458X\uff0c\u5bf9\u4e8e\u5bfc\u5e08A\uff0c\u5982\u679cA\u7684\u6218\u961f\u540d\u989d\u672a\u6ee1\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f4\u63a5\u5c06X\u5f52\u5230A\u7684\u6218\u961f\uff0c\u7136\u540e\u6ee1\u4e86\uff0c\u90a3\u4e48\u679a\u4e3e\u5bfc\u5e08A\u6218\u961f\u4e2d\u7684\u4ebaY\uff0cdfs\u66b4\u529b\u67e5\u770b\u662f\u5426\u53ef\u4ee5\u5728Y\u4e2dX\u5bfc\u5e08\u5bf9\u5e94\u7684\u5fd7\u613f\u4e2d\u9009\u62e9\u53e6\u4e00\u4f4d\u5bfc\u5e08B\uff0c\u82e5\u53ef\u4ee5\u5219\u5c06Y\u5f52\u5230B\u7684\u6218\u961f\uff0cX\u5f52\u5230A\u7684\u6218\u961f\u3002\n\n&emsp;\u5bf9\u4e8e\u7b2c\u4e8c\u95ee\u4f60\u53ea\u9700\u8981\u5728\u627e\u589e\u5e7f\u8def\u7684\u65f6\u5019\u7edf\u8ba1\u4f60\u589e\u5e7f\u4f7f\u4f60\u4e0d\u6cae\u4e27\u7684\u5fd7\u613f\u4e2d\u589e\u5e7f\u5230\u7684\u5b66\u5458\u4e2d\u7f16\u53f7\u6700\u5927\u7684\u90a3\u4e2a\uff0c\u5373\u662f\u7b54\u6848\u3002\u56e0\u4e3a\u90a3\u4e2a\u4eba\u53ef\u4ee5\u5728\u4ed6\u7684\u6392\u540d\u627e\u5230\u4ed6\u7684\u7406\u8bba\u6700\u4f18\u89e3\uff0c\u800c\u4f60\u589e\u5e7f\u65f6\u904d\u5386\u5230\u4e86\u4ed6\uff0c\u90a3\u4f60\u5982\u679c\u662f\u4ed6\u7684\u4f4d\u7f6e\u90a3\u4e48\u4f60\u5c31\u53ef\u4ee5\u76f4\u63a5\u9009\u62e9\u5230\u4f60\u5f53\u524d\u8981\u7684\u8fd9\u4e2a\u5bfc\u5e08\u3002\n\n&emsp;\u7136\u540e\uff0c\u6211\u5b8c\u5168\u6ca1\u6709\u53bb\u5361\u5e38\uff0c\u4f46\u662f\u8fd9\u73a9\u610f\u5feb\u5230\u98de\u8d77\u3002\n\n```cpp\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#include<vector>\nusing namespace std;\nint T,n,m,mx,nw,sl,fh,s[210],mn[210],num[210],q[210][210],p[210][210][15];\nint a[210],id[210],vis[210];\nint rd()\n{\n    sl=0;fh=1;\n    char ch=getchar();\n    while(ch<'0'||'9'<ch) {if(ch=='-') fh=-1; ch=getchar();}\n    while('0'<=ch&&ch<='9') sl=sl*10+ch-'0',ch=getchar();\n    return sl*fh;\n}\nbool dfs(int u,int k)\n{\n    if(u<nw) mx=max(mx,u);\n    for(int v,i=1;i<=q[u][k];++i)\n    {\n        v=p[u][k][i];\n        if(vis[v]) continue;vis[v]=1;\n        if(num[v])\n        {\n            a[u]=v;id[u]=k;num[v]--;\n            return 1;\n        }\n        for(int j=1;j<=n;++j)\n        {\n            if(j==u) continue;\n            if(a[j]!=v) continue;\n            if(dfs(j,id[j]))\n            {\n                a[u]=v;id[u]=k;\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\nint main()\n{\n    T=rd();rd();\n    while(T--)\n    {\n        n=rd();m=rd();memset(q,0,sizeof(q));memset(a,0,sizeof(a));\n        for(int i=1;i<=m;++i) num[i]=rd();\n        for(int x,i=1;i<=n;++i)\n            for(int j=1;j<=m;++j)\n            {\n                x=rd();if(!x) continue;\n                p[i][x][++q[i][x]]=j;\n            }\n        for(int i=1;i<=n;++i) s[i]=rd(),id[i]=m+1,mn[i]=i;\n        for(int i=1;i<=n;++i)\n        {\n            memset(vis,0,sizeof(vis));nw=i;\n            for(int j=1;j<=m;++j)\n            {\n                if(!q[i][j]) continue;mx=0;\n                if(dfs(i,j)) {if(j<=s[i]) mn[i]=0; break;}\n                if(j<=s[i]) mn[i]=min(mn[i],i-mx);\n            }\n        }\n        for(int i=1;i<=n;++i) printf(\"%d \",id[i]);puts(\"\");\n        for(int i=1;i<=n;++i) printf(\"%d \",mn[i]);puts(\"\");\n    }\n    return 0;\n}\n```",
        "postTime": 1545053718,
        "uid": 27677,
        "name": "day_dream",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4382 \u3010[\u516b\u7701\u8054\u80032018]\u5288\u914d\u3011"
    },
    {
        "content": "~~\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u8e29\u7ebf\u7684\u7701\u9009~~\n\n$C=1$\u7684\u60c5\u51b5\uff0c\u663e\u7136\u5f55\u53d6\u7ed3\u679c\u662f\u552f\u4e00\u7684\uff0c\u53ea\u9700\u8981\u8d2a\u5fc3\u5c31\u53ef\u4ee5\u83b7\u5f97$50$\u9ad8\u5206\u3002\n\n\u5bf9\u4e8e\u6d4b\u8bd5\u70b9$2,3$\uff0c\u7531\u4e8e\u6570\u636e\u5f88\u5c0f\uff0c\u778e\u66b4\u529b\u90fd\u80fd\u8fc7\uff0c\u4e8e\u662f\u5c31\u83b7\u5f97\u4e86$70$\u9ad8\u5206\u3002\n\n\u5bf9\u4e8e\u5168\u90e8\u7684\u6570\u636e\uff0c\u663e\u7136\u662f\u8d2a\u5fc3\u7684\u4ece\u7b2c\u4e00\u4eba\u5230\u7b2c$n$\u4eba\u8ba1\u7b97\uff0c\u5bf9\u4e8e\u7b2c$i$\u4e2a\u4eba\uff0c\u6309\u7167\u4ed6\u7684\u5fd7\u613f\u4ece$1$\u5230$m$\u52a0\u8fb9\uff0c\u6bcf\u6b21\u52a0\u4e00\u7ea7\u5fd7\u613f\u7684\u8fb9\uff0c\u7136\u540e\u5728\u7f51\u7edc\u4e0a\u627e\u589e\u5e7f\u8def\uff0c\u5982\u679c\u627e\u5230\u4e86\u589e\u5e7f\u8def\uff0c\u5c31\u53ef\u4ee5\u9000\u51fa\u4e86\uff0c\u81f3\u6b64\u5b8c\u7f8e\u89e3\u51b3\u4e86\u7b2c\u4e00\u95ee\u3002\n\n\u7b2c\u4e00\u95ee\u53ef\u4ee5\u4f18\u5316\uff0c\u5982\u679c\u7b2c$i$\u4e2a\u4eba\u7684\u7b2c$j$\u7ea7\u5fd7\u613f\u4e0d\u80fd\u589e\u5e7f\uff0c\u5c31\u76f4\u63a5\u628a\u8fd9\u4e9b\u8fb9\u5220\u6389\u3002\n\n\u7b2c\u4e8c\u95ee\u53ea\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4eba\u4e8c\u5206\u7b54\u6848$ans_i$\uff0c\u628a$ans_i$\u4e4b\u524d\u7684\u4eba\u5168\u90e8\u6309\u7167\u6700\u4f18\u65b9\u6848\u5efa\u51fa\u56fe\uff0c\u7136\u540e\u989d\u5916\u7684\u8fde\u4e0a\u7b2c$i$\u4e2a\u4eba\u6240\u671f\u671b\u7684\u8fb9\uff0c\u518d\u5bfb\u627e\u589e\u5e7f\u8def\uff0c\u5c31\u53ef\u4ee5\u5b8c\u7f8e\u89e3\u51b3\u7b2c\u4e8c\u95ee\u3002\n\n\u4e0a\u9762\u7684\u7b97\u6cd5\u53ef\u4ee5\u770b\u51fa\u6765\u8981\u5f88\u591a\u6b21\u5efa\u56fe\uff0c\u53c8\u56e0\u4e3a\u56fe\u6700\u591a\u53ea\u6709$2n$\u7684\u70b9\u548c$nC$\u7684\u8fb9\uff0c\u90a3\u5c31\u53ef\u4ee5\u66b4\u529b\u7684\u5b58$n$\u4e2a\u56fe\uff0c\u5206\u522b\u5bf9\u5e94\u524d$n$\u4e2a\u4eba\u7684\u6700\u4f18\u65b9\u6848\u7684\u6b8b\u4f59\u7f51\u7edc\uff0c\u8fd9\u6837\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u5efa\u56fe\u6d6a\u8d39\u7684\u65f6\u95f4\uff0c\u5e76\u4e14\u6bcf\u6b21\u53ea\u9700\u8981\u5355\u8def\u589e\u5e7f\u3002\n\n\u7528$vector$\u8c8c\u4f3c\u4f1a\u5feb\u4e00\u4e9b\uff1f\n\n\u590d\u6742\u5ea6O(\u4e0d\u6162)\uff0c\u7b2c\u4e00\u95ee\u6700\u591a$nm$\u6b21\u627e\u589e\u5e7f\u8def\uff0c\u7b2c\u4e8c\u95ee$nlogn$\u6b21\uff0c\u53ca\u65f6\u5220\u6389\u6ca1\u7528\u7684\u8fb9\u5c31\u4e0d\u4f1a$TLE$\u3002\n\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <cctype>\n#include <vector>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint read()\n{\n\tint x = 0, f = 1; char ch = getchar();\n\twhile (!isdigit(ch)) { if (ch == '-') f = -1; ch = getchar(); }\n\twhile (isdigit(ch)) { x = x * 10 + ch - '0'; ch = getchar(); }\n\treturn x * f;\n}\nconst int MAX = 233;\nconst int MAXN = 466;\nconst int inf = 100000000;\nint n, m, s, t;\nint b[MAX], p[MAX], ans[MAX], ans2[MAX];\nvector<int> a[MAX][MAX];\nstruct edge\n{\n\tint to, cap, rev;\n\tedge() {}\n\tedge(int a, int b, int c)\n\t{\n\t\tto = a, cap = b, rev = c;\n\t}\n};\nstruct Graph\n{\n\tvector<edge> e[MAXN];\n\tqueue<int> que;\n\tint dis[MAXN];\n\tvoid addedge(int u, int v, int cap)\n\t{\n\t\te[u].push_back(edge(v, cap, e[v].size()));\n\t\te[v].push_back(edge(u, 0, e[u].size() - 1));\n\t}\n\tvoid deledge(int x) { e[x].pop_back(); }\n\tbool bfs()\n\t{\n\t\tmemset(dis, -1, sizeof dis);\n\t\tque.push(s);\n\t\tdis[s] = 0;\n\t\twhile (!que.empty())\n\t\t{\n\t\t\tint u = que.front();\n\t\t\tque.pop();\n\t\t\tfor (vector<edge>::iterator i = e[u].begin(); i != e[u].end(); i++)\n\t\t\t\tif (i -> cap && dis[i -> to] < 0)\n\t\t\t\t{\n\t\t\t\t\tdis[i -> to] = dis[u] + 1;\n\t\t\t\t\tque.push(i -> to);\n\t\t\t\t}\n\t\t}\n\t\treturn dis[t] != -1;\n\t}\n\tint dfs(int u, int f)\n\t{\n\t\tif (u == t) return f;\n\t\tfor (vector<edge>::iterator i = e[u].begin(); i != e[u].end(); i++)\n\t\t\tif (i -> cap && dis[i -> to] > dis[u])\n\t\t\t{\n\t\t\t\tint d = dfs(i -> to, min(f, i -> cap));\n\t\t\t\tif (d)\n\t\t\t\t{\n\t\t\t\t\ti -> cap -= d;\n\t\t\t\t\te[i -> to][i -> rev].cap += d;\n\t\t\t\t\treturn d;\t\n\t\t\t\t}\n\t\t\t}\n\t\treturn 0;\n\t}\n\tvoid clear()\n\t{\n\t\tfor (int i = 1; i <= n + m + 2; i++)\n\t\t\te[i].clear();\n\t}\n} G[233], tG;\nvoid solveq1()\n{\n\tfor (int i = 1; i <= m; i++)\n\t\tG[0].addedge(i + n, t, b[i]);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tG[i] = G[i - 1];\n\t\tG[i].addedge(s, i, 1);\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tfor (vector<int>::iterator k = a[i][j].begin(); k != a[i][j].end(); k++)\n\t\t\t\tG[i].addedge(i, *k + n, 1);\n\t\t\tif (G[i].bfs())\n\t\t\t{\n\t\t\t\tG[i].dfs(s, inf);\n\t\t\t\tans[i] = j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor (vector<int>::iterator k = a[i][j].begin(); k != a[i][j].end(); k++)\n\t\t\t\tG[i].deledge(i), G[i].deledge(*k + n);\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif (!ans[i]) ans[i] = m + 1;\n\t\tprintf(\"%d \", ans[i]);\n\t}\n\tputchar('\\n');\n}\nbool check(int u, int x)\n{\n\ttG = G[x - 1];\n\ttG.addedge(s, u, 1);\n\tfor (int i = 1; i <= p[u]; i++)\n\t\tfor (vector<int>::iterator j = a[u][i].begin(); j != a[u][i].end(); j++)\n\t\t\ttG.addedge(u, *j + n, 1);\n\tif (tG.bfs()) return 1;\n\telse return 0;\n}\nvoid solveq2()\n{\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif (ans[i] <= p[i])\n\t\t\tcontinue;\n\t\tans2[i] = 1000;\n\t\tint l = 1, r = i - 1;\n\t\twhile (r >= l)\n\t\t{\n\t\t\tint mid = (l + r) >> 1;\n\t\t\tif (check(i, mid))\n\t\t\t\tans2[i] = mid, l = mid + 1;\n\t\t\telse r = mid - 1;\n\t\t}\n\t\tif (ans2[i] && ans2[i] != 1000)\n\t\t\tans2[i] = i - ans2[i];\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tprintf(\"%d \", ans2[i] == 1000 ? i : ans2[i]);\n\tputchar('\\n');\n}\nvoid init()\n{\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t\ta[i][j].clear();\n\tfor (int i = 1; i <= n; i++)\n\t\tans[i] = ans2[i] = 0;\n\tG[0].clear();\n}\nvoid solve()\n{\n\tn = read(), m = read();\n\tinit();\n\tfor (int i = 1; i <= m; i++)\n\t\tb[i] = read();\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tint x = read();\n\t\t\tif (x) a[i][x].push_back(j);\n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tp[i] = read();\n\ts = n + m + 1, t = s + 1;\n\tsolveq1();\n\tsolveq2();\n}\nint main()\n{\n\tint T = read(), C = read();\n\twhile (T--) solve();\n\treturn 0;\n}\n```",
        "postTime": 1523169288,
        "uid": 37070,
        "name": "Ameyax",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4382 \u3010[\u516b\u7701\u8054\u80032018]\u5288\u914d\u3011"
    },
    {
        "content": "\u8bf4\u4e0d\u5b9a\u6bd4\u5b98\u65b9sol\u91cc\u7684\u67d0\u7406\u8bba\u6700\u4f18\u7b97\u6cd5\u8fd8\u4f18\u79c0\u4e00\u70b9\uff1f\n\n~~\u6240\u4ee5$n,m$\u8bf4\u4e0d\u5b9a\u53ef\u4ee5\u51fa\u5230$1000$\uff1f~~\n\n\u65e0\u6240\u8c13\u5566\uff0c\u53cd\u6b63\u662f\u4e2a\u5f97\u5206\u9898\u3002Orz\u826f\u5fc3\u51fa\u9898\u4eba\uff0c~~\u66b4\u529b\u670970\u52062333~~\n\n## \u601d\u8def\u5206\u6790\n\n\u6b63\u89e3\u7684\u601d\u8def\u5f88\u5de7\u5999\uff0c\u5176\u5b9e\u6211\u5e76\u4e0d\u89c9\u5f97\u8fd9\u662f\u4e2a\u6b63\u513f\u516b\u7ecf\u7684\u7f51\u7edc\u6d41\u6216\u8005\u4e8c\u5206\u56fe\u5339\u914d\u7684\u9898\u76ee\uff0c\u4e3b\u8981\u8fd8\u662f\u4e2a\u601d\u7ef4+\u5efa\u56fe\u6a21\u578b+\u4e71\u641e\u3002\u3002\u3002\u3002\u3002\u3002\n\n$C=1$\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\u76f4\u63a5\u5339\u914d\u800c\u4e0d\u4f1a\u5f71\u54cd\u5230\u540e\u9762\u7684\u9009\u62e9\u4e86\u3002\u4f46\u662f$C>1$\u7684\u8bdd\uff0c\u53ef\u80fd\u67d0\u4e00\u4e2a\u4eba\u53ef\u4ee5\u9009\u591a\u4e2a\u5bfc\u5e08\uff0c\u5f53\u4ed6\u968f\u4fbf\u9009\u4e86\u5176\u4e2d\u4e00\u4e2a\u4ee5\u540e\uff0c\u53ef\u80fd\u5f71\u54cd\u5230\u540e\u9762\u67d0\u4e2a\u4eba\u4f7f\u5176\u9009\u4e0d\u5230\u672c\u6765\u7684\u6700\u4f18\u89e3\u3002\u800c\u6b64\u65f6\u540e\u9762\u90a3\u4e2a\u4eba\u5c31\u8981\u8ba9\u524d\u9762\u90a3\u4e2a\u4eba\u6539\u53d8\u51b3\u7b56\uff0c\u505a\u51fa\u53cd\u6094\u3002\n\n\u8fd9\u65f6\u5019\u6709\u6ca1\u6709\u60f3\u5230\u7f51\u7edc\u6d41\u7b97\u6cd5\u7684\u53cd\u6094\u8fb9\u7684\u5e94\u7528\u5462\uff1f\uff08\u56e0\u4e3a\u849f\u84bb\u53ea\u4f1a\u7f51\u7edc\u6d41\u6240\u4ee5\u5c31\u7528\u7f51\u7edc\u6d41\u6765\u8dd1\u4e8c\u5206\u56fe\u5339\u914d\uff09\u5efa\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u5de6\u8fb9$n$\u4e2a\u70b9\u4ee3\u8868\u9009\u624b\uff0c\u53f3\u8fb9$m$\u4e2a\u70b9\u4ee3\u8868\u5bfc\u5e08\uff08\u6218\u961f\uff09\uff0c\u4e00\u5f00\u59cb\u6240\u6709\u5bfc\u5e08\u5411\u6c47\u70b9$T$\u8fde\u6d41\u91cf\u4e3a\u6218\u961f\u4eba\u6570\u4e0a\u9650\u7684\u8fb9\u3002\u6bcf\u6b21\u4ece\u524d\u5f80\u540e\u679a\u4e3e\u9009\u624b\uff0c\u627e\u5230\u80fd\u591f\u9009\u62e9\u7684\u6700\u9ad8\u5fd7\u613f\uff0c\u52a8\u6001\u5730\u5411\u8be5\u6863\u5fd7\u613f\u80fd\u9009\u62e9\u7684\u6240\u6709\u5bfc\u5e08\u8fde\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\uff0c\u7136\u540e\u589e\u5e7f\u4e00\u6b21\uff08\u8fd9\u65f6\u4f1a\u968f\u610f\u9009\u62e9\u4e00\u4e2a\u53ef\u884c\u7684\u5bfc\u5e08\uff09\u3002\u56e0\u4e3a\u589e\u5e7f\u540e\u4f1a\u7559\u4e0b\u53cd\u6094\u8fb9\uff0c\u6240\u4ee5\u8fd9\u6837\u505a\u5c31\u5f88\u65b9\u4fbf\u5566\u3002\u56e0\u4e3a\u6bcf\u6b21\u662f\u52a8\u6001\u52a0\u8fb9\u76f4\u63a5\u4ece\u6bcf\u4e2a\u9009\u624b\u5f00\u59cb\u589e\u5e7f \uff0c\u6240\u4ee5\u8c8c\u4f3c\u8fde\u6e90\u70b9\u90fd\u4e0d\u9700\u8981\uff08\u8fd9\u5c31\u662f\u849f\u84bb\u4e00\u76f4\u89c9\u5f97\u8fd9\u9898\u50cf\u4e00\u4e2a\u4e71\u641e\u9898\u7684\u539f\u56e0\uff09\n\n\u8fd9\u65f6\u5019\u7559\u4e0b\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u4f55\u65b9\u4fbf\u5730\u5224\u65ad\u67d0\u65f6\u523b\u67d0\u6218\u961f\u662f\u5426\u5df2\u7ecf\u4e0d\u53ef\u9009\u4e86\u5462\uff1f\u66b4\u529b\u5b58\u56fe\u5b9e\u5728\u662f\u592a\u9ebb\u70e6\u5566\uff01\u800c\u4e14\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u77e5\u9053\u6574\u4e2a\u56fe\u662f\u4ec0\u4e48\u6837\u5b50\uff0c\u53ea\u8981\u77e5\u9053\u8fd9\u4e00\u4e9bbool\u578b\u72b6\u6001\uff0c\u66b4\u529b\u5b58\u56fe\u5b9e\u5728\u662f\u6d6a\u8d39\u65f6\u7a7a\u3002\u5927\u6982\u7b97\u6cd5\u590d\u6742\u5ea6\u4f18\u5316\u7684\u74f6\u9888\u5c31\u5728\u8fd9\u91cc\u5427\u3002\u4e00\u5f00\u59cb\u849f\u84bbyy\u5404\u79cd~~\u6781\u5176\u9519\u8bef\u7684~~\u65b9\u6cd5\u6765\u4e71\u641e\u3002\u540e\u6765\u53d1\u73b0\uff0c\u5c06\u95ee\u9898\u5e26\u5165\u5230\u6211\u4eec\u5efa\u7684\u7f51\u7edc\u6d41\u6a21\u578b\u91cc\u9762\uff0c\u4e0d\u5c31\u662f\u8981\u77e5\u9053\u6bcf\u4e2a\u4ee3\u8868\u5bfc\u5e08\u7684\u70b9\u5230\u6c47\u70b9\u662f\u5426\u5b58\u5728\u589e\u5e7f\u8def\u5417\uff1f\u5177\u4f53\u65b9\u6cd5\uff0c\u4ece\u6c47\u70b9\u5f00\u59cbdfs\u641c\u7d22\uff0c\u5982\u679c\u67d0\u6761\u8fb9\u7684\u53cd\u5411\u8fb9\u6709\u6d41\u91cf\u5c31\u641c\u8fc7\u53bb\uff0c\u628a\u641c\u5230\u7684\u70b9\u6807\u8bb0\u8d77\u6765\u5c31\u597d\u5566\uff01\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u95ee\uff0c\u663e\u7136\u53ef\u4ee5\u60f3\u5230\u4e8c\u5206\u3002\u5148\u628a\u6bcf\u6b21\u6bcf\u4e2a\u6218\u961f\u80fd\u5426\u9009\u62e9\u7684\u72b6\u6001\u4fdd\u5b58\u4e0b\u6765\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u9009\u624b\uff0c\u4e8c\u5206\u4ed6\u4e4b\u524d\u7684\u6392\u540d\uff0c\u6839\u636e\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u53ef\u4ee5\u9009\u62e9\u800c\u4e14\u4ee4\u4ed6\u6ee1\u610f\u7684\u6218\u961f\u6765\u51b3\u5b9a\u4e0b\u9762\u5f80\u54ea\u4e00\u534a\u533a\u95f4\u63a5\u7740\u627e\u3002\n\n## \u590d\u6742\u5ea6\u5206\u6790\n\n\u6709\u4e09\u6b65\u3002\u9996\u5148\u8981\u66b4\u529b\u627e\u5230\u80fd\u6ee1\u8db3\u7684\u6700\u9ad8\u5fd7\u613f\uff0c\u590d\u6742\u5ea6$O(nm)$\n\n\u63a5\u7740\uff0c\u589e\u5e7f\uff08\u849f\u84bb\u76f4\u63a5dfs\u53bb\u627e\u800c\u4e0d\u662fdinic\uff09\u548c\u66f4\u65b0\u5f53\u524d\u6218\u961f\u662f\u5426\u53ef\u9009\u72b6\u6001\uff0c\u56e0\u4e3a\u662f\u5728\u56fe\u4e0a\u641e\uff0c\u8fb9\u6570\u4e0d\u8d85\u8fc7$O(nC)$\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u7684\u590d\u6742\u5ea6\u90fd\u662f$O(n^2C)$\u7684\uff08\u636e\u8bf4\u5728\u4e8c\u5206\u56fe\u4e0a\u4f7f\u7528dinic\u53ef\u4ee5\u4f7f\u589e\u5e7f\u7684\u590d\u6742\u5ea6\u964d\u5230$O(n\\sqrt nC)$\uff1f\u4f46\u662f\u8fd9\u662f\u52a8\u6001\u52a0\u8fb9\uff0c\u6bcf\u6b21\u90fd\u8981\u8dd1\uff0c\u90a3\u5e94\u8be5\u662f\u4e0d\u80fd\u4f18\u5316\u7684\u5427\uff09\n\n\u6700\u540e\uff0c\u4e8c\u5206\u6700\u5c11\u4e0a\u5347\u7684\u6392\u540d\uff0c\u590d\u6742\u5ea6$O(nm\\log n)$\n\n\u7efc\u4e0a\uff0c\u56e0\u4e3an\u4e0em\u540c\u9636\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u5e94\u8be5\u662f$O(n^2(C+\\log n))$\u7ea7\u522b\u7684\u3002\u7531\u4e8e\u662f\u7f51\u7edc\u6d41\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u975e\u5e38\u7384\u5b66\uff0c\u4e5f\u4e0d\u81f3\u4e8e\u5220\u8fb9\u90a3\u4e48\u9ebb\u70e6\uff0c\u849f\u84bb\u968f\u610f\u52a0\u4e86\u4e00\u70b9\u70b9\u526a\u679d\uff0c\u8fd8\u6709register\uff0cinline\uff0c\u5feb\u8bfb\u5feb\u5199\uff0c\u5c31\u53ea\u89818ms\uff0c\u5f00O2 4ms\u3002~~\u5c45\u7136\u6ca1\u67090msTAT\uff0c\u6b22\u8fce\u8d85\u8d8a~~\n\n\u6700\u540e\u63d0\u4e00\u4e2a\u60e8\u75db\u7684\u7ecf\u5386\uff1a\u849f\u84bb\u8c03\u8fd9\u9898\u4e00\u5929\u591a\u4e86\uff0c\u6240\u6709\u7684\u7b97\u6cd5\u6027\u9519\u8bef\u90fd\u66f4\u6b63\u4e86\uff0c\u8fd8\u662fWA\uff0c\u6700\u540e\u624d\u53d1\u73b0\u91cd\u5efa\u56fe\u7684\u65f6\u5019\u53cd\u5411\u8fb9\u7684\u6d41\u91cf\u5fd8\u8bb0\u8d4b\u62100\u6765\u8986\u76d6\u6389\u539f\u6765\u7684\u4fe1\u606f\u4e86TAT\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#define R register int\n#define I inline void\n#define pc(C) *po++=C\n#define add(X,Y,F)\\\n    to[++p]=Y,ne[p]=he[X],f[he[X]=p]=F,\\\n    to[++p]=X,ne[p]=he[Y],f[he[Y]=p]=0//\u53cd\u8fb9\u8d4b0\uff01\nconst int SZ=1<<20,N=209,M=N<<1,L=N*22;//\u8fb9\u6570\u6700\u591a2(nC+m)\nchar ibuf[SZ],obuf[SZ],*pi=ibuf-1,*po=obuf;\nI in(R&x){\n    while(*++pi<'-');\n    x=*pi&15;\n    while(*++pi>'-')x*=10,x+=*pi&15;\n}\nI out(R x){\n    if(x>9)out(x/10);\n    pc(x%10|'0');\n}\nint T,he[M],ne[L],to[L],f[L],he1[N],ne1[N];\nint a[N][N],b[N],up[N];//up\u8bb0\u5f55\u6700\u5c11\u4e0a\u5347\u6392\u540d\nbool c[N][N],vis[M];//c\u5b58\u4e0b\u6218\u961f\u662f\u5426\u53ef\u9009\nvoid remain(R x){//\u66f4\u65b0\u72b6\u6001\uff0c\u5229\u7528\u597d\u53cd\u5411\u8fb9\uff01\n    vis[x]=1;\n    for(R i=he[x];i;i=ne[i])\n        if(f[i^1]&&!vis[to[i]])remain(to[i]);\n}\nbool flow(R x){//dfs\u589e\u5e7f\n    if(vis[x])return x==T;\n    vis[x]=1;\n    for(R i=he[x];i;i=ne[i])\n        if(f[i]&&flow(to[i])){\n            --f[i];++f[i^1];\n            return 1;\n        }\n    return 0;\n}\nint main(){\n    fread(ibuf,1,SZ,stdin);\n    R TT,CC,n,m,p,i,j,x,s,l,r,mi;\n    in(TT);in(CC);\n    while(TT--){\n        in(n);in(m);\n        T=n+m+1;p=vis[T]=1;\n        for(j=1;j<=m;++j)\n        \tin(b[j]),add(j+n,T,b[j]);\n        for(i=1;i<=n;++i)\n            for(j=1;j<=m;++j)in(a[i][j]);\n        for(j=1;j<=m;++j)\n        \tc[1][j]=(bool)b[j];//\u521d\u59cb\u72b6\u6001\u5c31\u662f\u6536\u4e0d\u6536\u4eba(\u4e0d\u4f1a\u6765\u4e2a\u5bfc\u5e08\u4e0d\u6536\u4eba\u5427233)\n        for(i=1;i<=n;++i){\n            memset(he1,0,(n+1)<<2);\n            for(j=1;j<=m;++j)//\u94fe\u8868\u628a\u540c\u7b49\u7ea7\u5fd7\u613f\u6302\u4e00\u8d77\uff0c\u50cf\u90bb\u63a5\u8868\u4e00\u6837\n                ne1[j]=he1[a[i][j]],he1[a[i][j]]=j;\n            for(x=1;x<=m;++x){\n                for(j=he1[x];j;j=ne1[j])\n                    if(c[i][j])break;\n                if(j){\n                    for(j=he1[x];j;j=ne1[j])\n                    \tif(c[i][j])add(i,j+n,1);//\u8d2a\u5fc3\u9009\u62e9\uff0c\u52a8\u6001\u8fde\u8fb9\n                    memset(vis,0,T);flow(i);\n                    break;\n                }\n            }\n            out(x);pc(' ');\n            if(x<=m){\n                memset(vis,0,T);remain(T);\n                memcpy(c[i+1]+1,vis+n+1,m);\n            }//\u6ca1\u9009\u5230\u80af\u5b9a\u72b6\u6001\u4e0d\u53d8\u5566\uff0c\u76f4\u63a5copy\u4e0a\u4e00\u6b21\u7684\n            else memcpy(c[i+1]+1,c[i]+1,N);\n            in(s);if(x<=s){up[i]=0;continue;}//\u5224\u6389\u4e00\u5f00\u59cb\u5c31\u6ee1\u610f\u7684\n            l=0;r=i-1;\n            F:while(l!=r){\n                mi=(l+r+1)>>1;//\u6ce8\u610f\u4e8c\u5206\u533a\u95f4\u662f\u5de6\u95ed\u53f3\u5f00\u7684\uff0c\u6240\u4ee5\u8981\u5199\u6210\u8fd9\u6837\n                for(x=s;x;--x)\n                    for(j=he1[x];j;j=ne1[j])\n                        if(c[mi][j]){l=mi;goto F;}\n                r=mi-1;\n            }\n            up[i]=i-l;\n        }\n        pc('\\n');for(i=1;i<=n;++i){out(up[i]);pc(' ');}pc('\\n');\n        memset(he,0,(T+1)<<2);//\u5e94\u8be5\u53ea\u6709he\u9700\u8981\u6e05\u7a7a\n    }\n    fwrite(obuf,1,po-obuf,stdout);\n    return 0;\n}\n```",
        "postTime": 1523454821,
        "uid": 61325,
        "name": "FlashHu",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4382 \u3010[\u516b\u7701\u8054\u80032018]\u5288\u914d\u3011"
    },
    {
        "content": "\u5927\u591a\u6570AC\u7684\u7b97\u6cd5\u90fd\u662f\u7f51\u7edc\u6d41\u7136\u540e\u52a0\u4e00\u5806\u5efa\u56fe\u65b9\u9762\u7684\u4f18\u5316\uff0c\u7136\u540e\u7531\u4e8e\u7f51\u7edc\u6d41\u590d\u6742\u5ea6\u7684\u7384\u5b66\u6027\u8dd1\u5f97\u98de\u5feb\uff0c\u590d\u6742\u5ea6\u4e5f\u6ca1\u529e\u6cd5\u8bc1\u660e\u5f97\u5f88\u6e05\u695a\u3002\n\n\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e2a**\u590d\u6742\u5ea6\u4e25\u683c**\uff08\u4f46\u662f\u8dd1\u7684\u4e0d\u5feb\uff09\u7684\u505a\u6cd5\uff08\u4e5f\u6ca1\u5565\u5375\u7528\u5c31\u5f53\u56fe\u4e2a\u4e50\uff09\u3002\n\n\u6211\u4eec\u8003\u8651\u7f51\u7edc\u6d41\uff0c\u5f53\u524d\u5df2\u7ecf\u6c42\u51fa\u4e86\u524d $i-1$ \u4e2a\u4eba\u5b8c\u6210\u5339\u914d\u540e\u7684\u6b8b\u91cf\u7f51\u7edc\uff0c\u6211\u4eec\u8003\u8651\u628a\u67d0\u4e2a\u4eba\u52a0\u4e0a\u53bb\u3002\n\n\u6211\u4eec\u53d1\u73b0\u6240\u9700\u8981\u7684\u5b8c\u6210\u7684\u589e\u5e7f\u5341\u5206\u7279\u6b8a\uff0c\u56e0\u4e3a**\u53ea\u6709\u4e00\u5355\u4f4d\u7684\u6d41\u91cf\u9700\u8981\u8fdb\u884c\u5339\u914d**\u3002\u8fd9\u4e0b\u5c31\u7b80\u5355\u4e86\uff1a\u4e00\u4e2a\u4eba\u80fd\u591f\u901a\u8fc7\u67d0\u5bfc\u5e08\u589e\u5e7f\uff0c\u5f53\u4e14\u4ec5\u5f53\u4ece\u90a3\u4e2a\u5bfc\u5e08\u51fa\u53d1\uff0c\u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a\u6709\u5230\u8fbe\u6c47\u70b9\u7684\u8def\u5f84\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5ffd\u7565 dinic, Hungary \u7b49\u4e00\u4f17\u7f51\u7edc\u6d41\u7b97\u6cd5\uff0c\u5c31\u628a\u6b8b\u91cf\u7f51\u7edc\u5f53\u505a\u4e00\u5f20\u6709\u5411\u56fe\uff0c\u7136\u540e\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u80fd\u4e0d\u80fd\u5230\u6c47\u70b9\u3002\n\n\uff08\u5177\u4f53\u4e00\u70b9\u7684\u8bdd\uff0c\u5047\u5982\u8fd9\u4e2a\u5bfc\u5e08\u7684\u6218\u961f\u8fd8\u6ca1\u6709\u6ee1\u5c31\u628a\u5b83\u52a0\u5165\u521d\u59cb\u7684\u961f\u5217\uff0c\u7136\u540e\u6cbf\u7740\u53cd\u8fb9\u6d41\u91cf\u4e3a1\uff0c\u4e5f\u5c31\u662f\u6d41\u91cf\u4e3a0\u7684\u8fb9bfs\uff0c\u6ce8\u610f\u4f60\u4e0d\u80fd\u50cf\u5728DAG\u4e0a\u4f3c\u7684dfs\uff0c\u666e\u901a\u6709\u5411\u56fe\u4e0a\u90a3\u4e2a\u7b97\u6cd5\u662f\u9519\u7684\uff09\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u662f\u5c31\u662f\u975e\u5e38\u4e25\u683c\u7684 $O(V+E)=O(nm)$\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5904\u7406\u51fa\u6765\u4e86\u6bcf\u4e2a\u5bfc\u5e08\u7684\u961f\u4f0d\u80fd\u4e0d\u80fd\u65b0\u52a0\u4eba\u3002\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u9009\u624b\u76f4\u63a5\u68c0\u67e5\u4e00\u4e0b\u5047\u5982\u4ed6\u7684\u6392\u540d\u53d8\u4e3a\u7b2c $i$ \u540d\u6700\u9ad8\u80fd\u6ee1\u8db3\u7b2c\u51e0\u5fd7\u613f\uff0c\u975e\u5e38\u5feb\u4e50\u5730\u628a\u95ee\u9898\u4e00\u3001\u4e8c\u4e00\u6b21\u6027\u89e3\u51b3\u4e86\u3002\n\n\u590d\u6742\u5ea6\u4f9d\u7136\u662f\u4e00\u6b21 $O(nm)$\n\n\u6700\u540e\u6211\u4eec\u628a\u7b2c $i$ \u540d\u52a0\u8fdb\u53bb\uff0c\u628a\u4ed6\u6240\u80fd\u88ab\u6ee1\u8db3\u7684\u6700\u9ad8\u5fd7\u613f\u5185\u7684\u6240\u6709\u5bfc\u5e08\u8fde\u4e0a\u8fb9\uff0c\u7136\u540e\u4e00\u6b21\u589e\u5e7f\uff0c$O(nm)$\n\n\u6700\u540e\u7684\u590d\u6742\u5ea6\u662f\u975e\u5e38\u4e25\u683c\u7684 $O(n^2m)$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=400+5;\nint n,m,S,T=N-1;\nstruct edge{\n\tint v,f,b;\n\tinline edge(int v,int f,int b):v(v),f(f),b(b){}\n};\nvector<edge> g[N];\ninline void add(int u,int v,int f){\n\tint bu=g[u].size(),bv=g[v].size();\n\tg[u].push_back(edge(v,f,bv));\n\tg[v].push_back(edge(u,0,bu));\n}\nint d[N],cur[N];\ninline bool bfs(){\n\tqueue<int> q;q.push(S);\n\tmemset(d,0,sizeof(d));\n\td[S]=1;\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();\n\t\tfor(auto e:g[u]){\n\t\t\tif(!e.f||d[e.v]) continue;\n\t\t\td[e.v]=d[u]+1;\n\t\t\tq.push(e.v);\n\t\t}\n\t}\n\treturn d[T];\n}\nint dfs(int u,int fl){\n\tif(u==T) return fl;\n\tif(!fl) return 0;\n\tint ans=0;\n\tfor(int &i=cur[u];i<g[u].size();i++){\n\t\tint v=g[u][i].v,f=g[u][i].f,b=g[u][i].b;\n\t\tif(!f||d[v]!=d[u]+1) continue;\n\t\tint ff=dfs(v,min(f,fl));\n\t\tans+=ff;\n\t\tfl-=ff;\n\t\tg[u][i].f-=ff;\n\t\tg[v][b].f+=ff;\n\t\tif(!fl) break;\n\t}\n\treturn ans;\n}\nvector<int> a[N][N];\nbool vis[N];\nvoid prep(){\n\tint i;\n\tqueue<int> q;\n\tmemset(vis,0,sizeof(vis));\n\tfor(i=n+1;i<=n+m;i++){\n\t\tfor(auto e:g[i]){\n\t\t\tif(e.v==T&&e.f){\n\t\t\t\tvis[i]=1;\n\t\t\t\tq.push(i);\n\t\t\t}\n\t\t}\n\t}\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();\n\t\tfor(auto e:g[u]){\n\t\t\tif(e.f||vis[e.v]) continue;\n\t\t\tvis[e.v]=1;\n\t\t\tq.push(e.v);\n\t\t}\n\t}\n}\nint s[N];\nint ans1[N],ans2[N];\nint main(){\n\tint i,j,k;\n\tint tot,C;cin>>tot>>C;\n\twhile(tot--){\n\t\tfor(i=0;i<N;i++) g[i].clear();\n\t\tfor(i=1;i<N;i++){\n\t\t\tfor(j=1;j<N;j++)\n\t\t\t\ta[i][j].clear();\n\t\t}\n\t\tcin>>n>>m;\n\t\tfor(i=1;i<=m;i++){\n\t\t\tint b;cin>>b;\n\t\t\tadd(n+i,T,b);\n\t\t}\n\t\tfor(i=1;i<=n;i++){\n\t\t\tfor(j=1;j<=m;j++){\n\t\t\t\tint c;cin>>c;\n\t\t\t\tif(c) a[i][c].push_back(j);\n\t\t\t}\n\t\t}\n\t\tfor(i=1;i<=n;i++) cin>>s[i];\n\t\tfor(i=1;i<=n;i++)\n\t\t\tadd(S,i,1);\n\t\tfor(i=1;i<=n;i++) ans2[i]=i;\n\t\tfor(i=1;i<=n;i++){\n\t\t\tprep();\n\t\t\tfor(j=i;j<=n;j++){\n\t\t\t\tfor(k=1;k<=m;k++)\n\t\t\t\t\tfor(auto x:a[j][k])\n\t\t\t\t\t\tif(vis[x+n]&&k<=s[j])\n\t\t\t\t\t\t\tans2[j]=min(ans2[j],j-i);\n\t\t\t}\n\t\t\tfor(j=1;j<=m;j++){\n\t\t\t\tbool flag=0;\n\t\t\t\tfor(auto x:a[i][j])\n\t\t\t\t\tif(vis[x+n]){\n\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tif(flag){\n\t\t\t\t\tfor(auto x:a[i][j])\n\t\t\t\t\t\tadd(i,x+n,1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tans1[i]=j;\n\t\t\tmemset(cur,0,sizeof(cur));\n\t\t\tbfs();\n\t\t\tdfs(S,1);\n\t\t}\n\t\tfor(i=1;i<=n;i++) cout<<ans1[i]<<\" \";cout<<endl;\n\t\tfor(i=1;i<=n;i++) cout<<ans2[i]<<\" \";cout<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1613744052,
        "uid": 62948,
        "name": "Crabby_Maskiv",
        "ccfLevel": 10,
        "title": "\u3010P4382 \u5288\u914d\u3011\u4e00\u4e2a\u590d\u6742\u5ea6\u6709\u7406\u6709\u636e\u7684\u505a\u6cd5"
    },
    {
        "content": "## Solution\uff1a\n\n\u8003\u573a\u4e0a\u53ea\u60f3\u5230\u4e86\u8d39\u7528\u6d41\uff0c\u4f46\u662fT\u6389\u4e86\uff0c\u81ea\u6d4b\u662f\u8dd1\u4e863s\uff0c\u5728\u6b64\u5206\u4eab\u4e00\u4e0b\u8d39\u7528\u6d41\u505a\u6cd5\uff1a\n\n\u56e0\u4e3a\u6211\u4eec\u6bcf\u6b21\u9700\u8981\u4f18\u5148\u6ee1\u8db3\u6392\u540d\u5728\u524d\u7684\u9009\u624b\uff0c\u5fd7\u613f\u5728\u524d\u7684\u5bfc\u5e08\uff0c\u6240\u4ee5\u8bf4\u6211\u4eecS\u5411\u6bcf\u4e2a\u9009\u624b\u8fde\u8d39\u7528\u4e3a1000*\u6392\u540d\uff0c\u6d41\u91cf\u4e3a1\u7684\u8fb9\uff0c\u6bcf\u4e2a\u5bfc\u5e08\u5411T\u8fde\u8d39\u7528\u4e3a0\uff0c\u6d41\u91cf\u4e3a\u4eba\u6570\u4e0a\u9650\u7684\u8fb9\uff0c\u6bcf\u4e2a\u9009\u624b\u5411\u5bfc\u5e08\u8fde\u8d39\u7528\u4e3a\u5fd7\u613f\u4f18\u5148\u7ea7\uff0c\u6d41\u91cf\u4e3a1\u7684\u8fb9\uff0c\u8fd9\u6837\u5bf9\u4e8e\u6bcf\u6b21\u8dd1\u51fa\u7684\u8d39\u7528V,$\\frac V {1000}$\u662f\u8fd9\u4e2a\u9009\u624b\u7684\u6392\u540d\uff0c$V \\% 1000$\u662f\u8fd9\u4e2a\u9009\u624b\u80fd\u6ee1\u8db3\u7684\u6700\u9ad8\u5fd7\u613f\u3002\n\n\u4f46\u662f\u8fd9\u6837\u76f4\u63a5\u8dd1\u662f\u9519\u7684\uff08\u8fc7\u4e0d\u4e86\u5927\u6837\u4f8b\uff09\uff0c\u6211\u4eec\u9700\u8981\u6bcf\u6b21\u91cd\u65b0\u5efa\u56fe\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5df2\u77e5\u7ed3\u679c\u7684\u9009\u624b\uff0c\u6211\u4eec\u8fde\u8fb9\u7684\u65f6\u5019\u53ea\u80fd\u8fde\u548c\u7ed3\u679c\u5fd7\u613f\u4e00\u6837\u7684\u8fb9\uff0c\u7406\u7531\u5927\u6982\u5c31\u662f\u540e\u9762\u7684\u6d41\u5728\u8dd1\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u901a\u8fc7\u524d\u9762\u5efa\u7684\u56de\u6d41\u6765\u5f71\u54cd\u524d\u9762\u7684\u7ed3\u679c\n\n\u8fd9\u6837\u6211\u4eec\u9700\u8981\u679a\u4e3e\u6bcf\u4e2a\u9009\u624b\uff0c\u7136\u540e\u6bcf\u6b21\u91cd\u65b0\u5efa\u56fe+\u8d39\u7528\u6d41\n\n\u81f3\u4e8e\u7b2c\u4e8c\u95ee\u53ea\u9700\u8981\u4e8c\u5206\u4e00\u4e0b\u5c31\u597d\u4e86\n\n\u590d\u6742\u5ea6\u5927\u6982\u662f$O(n*n*n*c)$\uff08\u8d39\u7528\u6d41\u590d\u6742\u5ea6\u5927\u6982\u662f$n*n*c$\uff09\n\n\u4ee3\u7801\uff08TLE\uff09\uff1a\n\n\n\n```\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int N=410;\nconst int inf=1e9;\nint n,m,t,C,S,T,sz,head[N],ans[N],a[300][300],b[300],dis[N],q[N*N],s[N];\nbool vis[N];\nint pre[N],prv[N];\nstruct edg{\n\tint to,next,v,f;\n}e[200*N];\nvoid add(int x,int y,int f,int v)\n{\n\tsz++;e[sz].to=y;e[sz].f=f;e[sz].v=v;e[sz].next=head[x];head[x]=sz;\n\tsz++;e[sz].to=x;e[sz].f=0;e[sz].v=-v;e[sz].next=head[y];head[y]=sz;\n}\nbool SPFA()\n{\n\tint tt=0,hh=0;\n\tfor (int i=S;i<=T;++i) vis[i]=0,dis[i]=inf;\n\tvis[S]=1;dis[S]=0;q[++tt]=S;\n\twhile (hh<tt)\n\t{\n\t\tint x=q[++hh];vis[x]=0;\n\t\tfor (int i=head[x];i;i=e[i].next)\n\t\t{\n\t\t\tint y=e[i].to;\n\t\t\tif (e[i].f&&dis[y]>dis[x]+e[i].v)\n\t\t\t{\n\t\t\t\tdis[y]=dis[x]+e[i].v;\n\t\t\t\tpre[y]=i;prv[y]=x;\n\t\t\t\tif (!vis[y]) q[++tt]=y,vis[y]=1;\n\t\t\t}\n\t\t}\n\t}\n\treturn (dis[T]!=inf); \n}\nint main()\n{\n\tfreopen(\"mentor.in\",\"r\",stdin);\n\tfreopen(\"mentor.out\",\"w\",stdout);\n\tscanf(\"%d%d\",&t,&C);\n\twhile (t--)\n\t{\n\t\tsz=1;memset(head,0,sizeof(head));\n\t\tscanf(\"%d%d\",&n,&m);S=0;T=n+m+1;\n\t\tfor (int i=1;i<=n;++i) ans[i]=m+1;\n\t\tfor (int i=1;i<=m;++i) scanf(\"%d\",&b[i]);\n\t\tfor (int i=1;i<=n;++i)\n\t\t{\n\t\t\tsz=1;memset(head,0,sizeof(head));\n\t\t\tfor (int j=1;j<=n;++j) add(S,j,1,j*1000);\n\t\t\tfor (int j=1;j<=m;++j) add(n+j,T,b[j],0);\n\t\t\tfor (int j=1;j<i;++j)\n\t\t\t\tfor (int k=1;k<=m;++k)\n\t\t\t\t\tif (a[j][k]==ans[j]) add(j,n+k,1,a[j][k]);\n\t\t\tfor (int j=1;j<=m;++j)\n\t\t\t{\n\t\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t\t\tif (a[i][j]) add(i,n+j,1,a[i][j]);\n\t\t\t}\n\t\t\twhile (SPFA())\n\t\t\t{\n\t\t\t\tans[dis[T]/1000]=dis[T]%1000;\n\t\t\t\tfor (int i=T;i!=S;i=prv[i])\n\t\t\t\t\te[pre[i]].f--,e[pre[i]^1].f++;\n\t\t\t}\n\t\t}\n\t\tfor (int x,i=1;i<=n;++i)\n\t\t{\n\t\t\tscanf(\"%d\",&x);s[i]=0;\n\t\t\tif (x>=ans[i]) continue;\n\t\t\tint l=1,r=i-1;s[i]=i;\n\t\t\twhile (l<=r)\n\t\t\t{\n\t\t\t\tsz=1;memset(head,0,sizeof(head));\n\t\t\t\tfor (int j=1;j<=n;++j) add(S,j,1,j*1000);\n\t\t\t\tfor (int j=1;j<=m;++j) add(n+j,T,b[j],0);\n\t\t\t\tint mid=l+r>>1;\n\t\t\t\tfor (int j=1;j<mid;++j)\n\t\t\t\t\tfor (int k=1;k<=m;++k)\n\t\t\t\t\t\tif (a[j][k]==ans[j]) add(j,n+k,1,a[j][k]);\n\t\t\t\tfor (int j=1;j<=m;++j)\n\t\t\t\t\tif (a[i][j]) add(i,n+j,1,a[i][j]);\n\t\t\t\tbool p=0;\n\t\t\t\twhile (SPFA())\n\t\t\t\t{\n\t\t\t\t\tif (dis[T]/1000==i)\n\t\t\t\t\t{\n\t\t\t\t\t\tp=1;\n\t\t\t\t\t\tif (dis[T]%1000<=x) {s[i]=i-mid;l=mid+1;break;}\n\t\t\t\t\t\telse {r=mid-1;break;} \n\t\t\t\t\t}\n\t\t\t\t\t//cout<<dis[T]<<endl; \n\t\t\t\t\tfor (int i=T;i!=S;i=prv[i])\n\t\t\t\t\t\te[pre[i]].f--,e[pre[i]^1].f++;\n\t\t\t\t}\n\t\t\t\tif (!p) r=mid-1;\n\t\t\t}\n\t\t} \n\t\tfor (int i=1;i<=n;++i)\n\t\t\tprintf(\"%d \",ans[i]);\n\t\tprintf(\"\\n\");\n\t\tfor (int i=1;i<=n;++i)\n\t\t\tprintf(\"%d \",s[i]);\n\t\tprintf(\"\\n\");\n\t}\n}\n```\n\n\n\n\u666e\u901a\u7f51\u7edc\u6d41\u601d\u8def\u548c\u8d39\u7528\u6d41\u5dee\u4e0d\u591a\uff0c\u53ea\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u9009\u624b\u679a\u4e3e\u4e00\u4e2a\u5fd7\u613f\u5373\u53ef\u4e86\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u9009\u624b\u53ea\u9700\u8981\u91cd\u65b0\u5efa\u8fb9\u4e00\u6b21\uff0c\u679a\u4e3e\u5fd7\u613f\u65f6\u53ef\u4ee5\u76f4\u63a5\u52a0\u8fb9\n\n\u7b2c\u4e8c\u95ee\u4e5f\u662f\u4e8c\u5206\n\n\u590d\u6742\u5ea6$O(n*m*n\\sqrt{nc})$($n\\sqrt{nc}$\u662f\u4e8c\u5206\u56fedinic\u590d\u6742\u5ea6)\n\n\u4ee3\u7801\uff1a\n\n```\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int N=410;\nconst int inf=1e9;\nint n,m,t,C,S,T,sz,head[N],v[N],ans[N],a[300][300],b[300],dis[N],q[N],s[N];\nint dep[N];\nint pre[N],prv[N];\nstruct edg{\n\tint to,next,f;\n}e[200*N];\nvoid add(int x,int y,int f)\n{\n\tsz++;e[sz].to=y;e[sz].f=f;e[sz].next=head[x];head[x]=sz;\n\tsz++;e[sz].to=x;e[sz].f=0;e[sz].next=head[y];head[y]=sz;\n}\nbool bfs()\n{\n\tint hh=0,tt=0;\n\tfor (int i=S;i<=T;i++) dep[i]=0;\n\tdep[S]=1;q[++tt]=S;\n\twhile (hh<tt)\n\t{\n\t\tint x=q[++hh];\n\t\tfor (int i=head[x];i;i=e[i].next)\n\t\t{\n\t\t\tint y=e[i].to;\n\t\t\tif (e[i].f&&!dep[y]) dep[y]=dep[x]+1,q[++tt]=y;\n\t\t}\n\t}\n\treturn (dep[T]!=0);\n}\nint dfs(int x,int flow)\n{\n\tif (x==T) return flow;\n\tint used=0,now=0;\n\tfor (int i=v[x];i;i=e[i].next)\n\t{\n\t\tint y=e[i].to;\n\t\tif (dep[y]==dep[x]+1&&e[i].f)\n\t\t{\n\t\t\tnow=dfs(y,min(flow-used,e[i].f));\n\t\t\te[i].f-=now;\n\t\t\te[i^1].f+=now;\n\t\t\tused+=now;\n\t\t\tv[x]=i;\n\t\t\tif (flow==used) break;\n\t\t}\n\t}\n\tif (used==0) dep[x]=-1;\n\treturn used;\n}\nint main()\n{\n//\tfreopen(\"mentor.in\",\"r\",stdin);\n//\tfreopen(\"mentor.out\",\"w\",stdout);\n\tscanf(\"%d%d\",&t,&C);\n\twhile (t--)\n\t{\n\t\tsz=1;memset(head,0,sizeof(head));\n\t\tscanf(\"%d%d\",&n,&m);S=0;T=n+m+1;\n\t\tfor (int i=1;i<=n;++i) ans[i]=m+1;\n\t\tfor (int i=1;i<=m;++i) scanf(\"%d\",&b[i]);\n\t\tint tag=0;\n\t\tfor (int i=1;i<=n;++i)\n\t\t{\n\t\t\tsz=1;memset(head,0,sizeof(head));\n\t\t\tfor (int j=1;j<=i;++j) {if (j==i) tag=sz+1;add(S,j,1);}\n\t\t\tfor (int j=1;j<=m;++j) add(n+j,T,b[j]);\n\t\t\tfor (int j=1;j<i;++j)\n\t\t\t\tfor (int k=1;k<=m;++k)\n\t\t\t\t\tif (a[j][k]==ans[j]) add(j,n+k,1);\n\t\t\tfor (int j=1;j<=m;++j)\n\t\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t\twhile (bfs())\n\t\t\t{\n\t\t\t\tfor (int j=S;j<=T;++j) v[j]=head[j]; \n\t\t\t\tdfs(S,inf);\n\t\t\t}\n\t\t\tfor (int l=1;l<=m;++l)\n\t\t\t{\n\t\t\t\tfor (int j=1;j<=m;++j)\n\t\t\t\t\tif (a[i][j]==l) add(i,n+j,1);\n\t\t\t\twhile (bfs())\n\t\t\t\t{\n\t\t\t\t\tfor (int j=S;j<=T;++j) v[j]=head[j]; \n\t\t\t\t\tdfs(S,inf);\n\t\t\t\t}\n\t\t\t\tif (e[tag].f==0) {ans[i]=l;break;}\n\t\t\t}\n\t\t}\n\t\tfor (int x,i=1;i<=n;++i)\n\t\t{\n\t\t\tscanf(\"%d\",&x);s[i]=0;\n\t\t\tif (x>=ans[i]) continue;\n\t\t\tint l=1,r=i-1;s[i]=i;\n\t\t\twhile (l<=r)\n\t\t\t{\n\t\t\t\tsz=1;memset(head,0,sizeof(head));\n\t\t\t\tfor (int j=1;j<=n;++j) {if (j==i) tag=sz+1;add(S,j,1);}\n\t\t\t\tfor (int j=1;j<=m;++j) add(n+j,T,b[j]);\n\t\t\t\tint mid=l+r>>1;\n\t\t\t\tfor (int j=1;j<mid;++j)\n\t\t\t\t\tfor (int k=1;k<=m;++k)\n\t\t\t\t\t\tif (a[j][k]==ans[j]) add(j,n+k,1);\n\t\t\t\twhile (bfs())\n\t\t\t\t{\n\t\t\t\t\tfor (int j=S;j<=T;++j) v[j]=head[j]; \n\t\t\t\t\tdfs(S,inf);\n\t\t\t\t}\n\t\t\t\tfor (int j=1;j<=m;++j)\n\t\t\t\t\tif (a[i][j]>0&&a[i][j]<=x) add(i,n+j,1);\n\t\t\t\t\n\t\t\t\twhile (bfs())\n\t\t\t\t{\n\t\t\t\t\tfor (int j=S;j<=T;++j) v[j]=head[j]; \n\t\t\t\t\tdfs(S,inf);\n\t\t\t\t}\n\t\t\t\tif (e[tag].f==0) {l=mid+1,s[i]=i-mid;}\n\t\t\t\telse r=mid-1;\n\t\t\t}\n\t\t} \n\t\tfor (int i=1;i<=n;++i)\n\t\t\tprintf(\"%d \",ans[i]);\n\t\tprintf(\"\\n\");\n\t\tfor (int i=1;i<=n;++i)\n\t\t\tprintf(\"%d \",s[i]);\n\t\tprintf(\"\\n\");\n\t}\n}\n```",
        "postTime": 1523255672,
        "uid": 17800,
        "name": "Fizzmy",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4382 \u3010[\u516b\u7701\u8054\u80032018]\u5288\u914d\u3011"
    },
    {
        "content": "\u66b4\u529b\u5373\u6b63\u89e3\n\n$P_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u9009\u624b\uff0c$Q_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u5bfc\u5e08\n\n\u9996\u5148\u5bf9\u4e8e\u6bcf\u4e2a\u9009\u624b\u8fde\u8fb9 $(S, P_i, 1)$ \uff0c\u6bcf\u4e2a\u5bfc\u5e08\u8fde\u8fb9 $(Q_i, T, B_i)$\n\n\u7b2c\u4e00\u95ee\u6bd4\u8f83\u663e\u7136\uff0c\u5c31\u662f\u679a\u4e3e\u6bcf\u4e2a\u9009\u624b\u88ab\u7b2c\u51e0\u5fd7\u613f\u5f55\u53d6\uff0c\u7136\u540e\u8fd9\u4e2a\u9009\u624b\u5411\u5bf9\u5e94\u7684\u5bfc\u5e08\u8fde\u8fb9\uff0c\u770b\u80fd\u5426\u8dd1\u51fa\u6d41\u91cf\u5373\u53ef\n\n\u7b2c\u4e8c\u95ee\u5927\u5bb6\u90fd\u4e8c\u5206\uff0c\u7136\u800c\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\uff0c\u6bcf\u5f53\u8dd1\u5b8c\u4e00\u4e2a\u9009\u624b\u4e4b\u540e\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u5bfc\u5e08\u66b4\u529b\u8fde\u8fb9 $(S, Q_i, 1)$ \uff0c\u518d\u8dd1\u7f51\u7edc\u6d41\uff0c\u5982\u679c\u80fd\u8dd1\u51fa\u6d41\u91cf\uff0c\u90a3\u4e48\u8bf4\u660e\u7b2c $i$ \u4e2a\u5bfc\u5e08\u7684\u961f\u4f0d\u6ca1\u6709\u6ee1\u5458\uff0c\u7136\u540e\u518d\u628a\u8fd9\u6761\u8fb9\u5220\u6389\n\n\u90a3\u4e48\u7b2c\u4e8c\u95ee\u7684\u7b54\u6848\u5c31\u76f8\u5f53\u4e8e\u662f\u5728\u5b83\u7684\u6240\u6709\u524d $s_i$ \u5fd7\u613f\u4e2d\u627e\u51fa\u4e00\u4e2a\u6700\u665a\u6ee1\u5458\u7684\u5bfc\u5e08\uff0c\u6ee1\u5458\u7684\u65f6\u95f4\u5c31\u662f\u5c31\u662f\u8fd9\u4e2a\u4eba\u6700\u5c11\u9700\u8981\u5230\u8fbe\u7684\u540d\u6b21\n\n\u8fd9\u6837\u5b50\u65f6\u95f4\u590d\u6742\u5ea6\u662f : $O(n^2m^2)$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u7b2c\u4e00\u95ee\u7684\u65f6\u5019\uff0c\u5982\u679c\u53d1\u73b0\u9009\u624b\u7684\u5fd7\u613f\u7684\u961f\u4f0d\u5df2\u7ecf\u6ee1\u5458\u5c31\u4e0d\u52a0\u8fb9\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8dd1\u8fc7\u53bb\u4e86\n\n\u7136\u800c\u6211\u4eec\u53d1\u73b0 $C\\leq 10$\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e00\u8f6e\u6700\u591a\u52a0 $10$ \u6761\u8fb9\uff0c\u5982\u679c\u4e00\u4e2a\u9009\u624b\u6ca1\u6709\u88ab\u7b2c $i$ \u5fd7\u613f\u5f55\u53d6\uff0c\u90a3\u4e48\u4e4b\u540e\u7b2c $i$ \u5fd7\u613f\u7684\u8fb9\u4e5f\u4e0d\u53ef\u80fd\u8dd1\u51fa\u6d41\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e9b\u8fb9\u5220\u6389\uff0c\u4e8e\u662f\u65f6\u95f4\u590d\u6742\u5ea6 : $O(n^2mC)$\n\n```cpp\n#include <cctype>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\n#define DEBUG(args...) fprintf(stderr, args)\n\ntypedef long long LL;\n\n#define FOR(i, l, r) for(int i = (l), i##_end = (r); i <= i##_end; ++i)\n#define REP(i, l, r) for(int i = (l), i##_end = (r); i <  i##_end; ++i)\n#define DFR(i, l, r) for(int i = (l), i##_end = (r); i >= i##_end; --i)\n#define DRP(i, l, r) for(int i = (l), i##_end = (r); i >  i##_end; --i)\n\ntemplate<class T>T Min(const T &a, const T &b) {return a < b ? a : b;}\ntemplate<class T>T Max(const T &a, const T &b) {return a > b ? a : b;}\ntemplate<class T>bool Chkmin(T &a, const T &b) {return a > b ? a = b, 1 : 0;}\ntemplate<class T>bool Chkmax(T &a, const T &b) {return a < b ? a = b, 1 : 0;}\n\nclass fast_input {\nprivate:\n\tstatic const int SIZE = 1 << 15 | 1;\n\tchar buf[SIZE], *front, *back;\n\n\tvoid Next(char &c) {\n\t    if(front == back) back = (front = buf) + fread(buf, 1, SIZE, stdin);\n\t\tc = front == back ? (char)EOF : *front++;\n\t}\n\npublic :\n\ttemplate<class T>void operator () (T &x) {\n\t\tchar c, f = 1;\n\t\tfor(Next(c); !isdigit(c); Next(c)) if(c == '-') f = -1;\n\t\tfor(x = 0; isdigit(c); Next(c)) x = x * 10 + c - '0';\n\t\tx *= f;\n\t}\n\tvoid operator () (char &c, char l = 'a', char r = 'z') {\n\t\tfor(Next(c); c > r || c < l; Next(c)) ;\n\t}\n}input;\n\nconst int SN = 200 + 47;\nconst int SP = SN << 1 | 1;\nconst int SE = SN * SN * 4 + 1;\nconst int S = SP - 1;\nconst int T = SP - 2;\nconst int INF = 0x3f3f3f3f;\n\nint cur[SP], head[SP], nxt[SE], to[SE], flow[SE], ce = 1;\nint que[SP], front, back, deep[SP], pre[SP];\nint a[SN][SN], b[SN], n, m, s[SN];\nint ans1[SN], ans2[SN];\nint team_full[SN], team_test_edge[SN];\n\nvoid Clear();\nvoid Add(int, int, int);\nbool BFS();\nvoid Doit();\n\nint main() {\n\n#ifdef Cai\n\tfreopen(\"s.in\", \"r\", stdin);\n#endif\n\n\tint x, y, z, cases;\n\n\tinput(cases), input(x);\n\n\twhile(cases--) {\n\t\tClear();\n\t\tinput(n), input(m);\n\t\tFOR(i, 1, m) input(b[i]);\n\t\tFOR(i, 1, n) FOR(j, 1, m) input(a[i][j]);\n\t\tFOR(i, 1, n) input(s[i]);\n\t\t\n\t\tFOR(i, 1, m) Add(i + n, T, b[i]);\n\t\tFOR(i, 1, m) team_test_edge[i] = ce + 1, Add(S, i + n, 0);\n\t\t\n\t\tFOR(i, 1, n) {\n\t\t\tAdd(S, i, 1), ans1[i] = m + 1;\n\t\t\tFOR(j, 1, m) {\n\t\t\t\tx = ce;\n\t\t\t\tmemcpy(cur, head, sizeof head);\n\t\t\t\tFOR(k, 1, n) if(a[i][k] == j && !team_full[k]) Add(i, k + n, 1);\n\t\t\t\tif(BFS()) {ans1[i] = j; Doit(); break;}\n\t\t\t\tmemcpy(head, cur, sizeof head);\n\t\t\t}\n\t\t\tFOR(j, 1, m) if(!team_full[j]) {\n\t\t\t\tflow[team_test_edge[j]] = 1;\n\t\t\t\tif(!BFS()) team_full[j] = i;\n\t\t\t\tflow[team_test_edge[j]] = 0;\n\t\t\t}\n\t\t}\n\n\t\tFOR(i, 1, n) if(!team_full[i]) team_full[i] = n + 1;\n\t\t\n\t\tFOR(i, 1, n) {\n\t\t\tx = 0;\n\t\t\tFOR(j, 1, m) if(a[i][j] && a[i][j] <= s[i]) Chkmax(x, team_full[j]);\n\t\t\tif(!x) ans2[i] = i;\n\t\t\telse if(x >= i) ans2[i] = 0;\n\t\t\telse ans2[i] = i - x;\n\t\t}\n\n\t\tFOR(i, 1, n) printf(\"%d \", ans1[i]); putchar(10);\n\t\tFOR(i, 1, n) printf(\"%d \", ans2[i]); putchar(10);\n\t}\n\n\treturn 0;\n\n}\n\nvoid Clear() {\n\tmemset(head, 0, sizeof head), ce = 1;\n\tmemset(team_full, 0, sizeof team_full);\n}\n\nvoid Add(int x, int y, int z) {\n\tnxt[++ce] = head[x], head[x] = ce, to[ce] = y, flow[ce] = z;\n\tnxt[++ce] = head[y], head[y] = ce, to[ce] = x, flow[ce] = 0;\n}\n\nbool BFS() {\n\tmemset(deep, 0, sizeof deep), deep[S] = 1;\n\tque[0] = S, front = 0, back = 1;\n\twhile(front < back)\n\t\tfor(int now, i = head[now = que[front++]]; i; i = nxt[i])\n\t\t\tif(!deep[to[i]] && flow[i]) {\n\t\t\t\tdeep[to[i]] = deep[now] + 1;\n\t\t\t\tpre[to[i]] = i;\n\t\t\t\tif(to[i] == T) return true;\n\t\t\t\tque[back++] = to[i];\n\t\t\t}\n\treturn false;\n}\n\nvoid Doit() {\n\tfor(int i = T; i != S; i = to[pre[i] ^ 1])\n\t\t--flow[pre[i]], ++flow[pre[i] ^ 1];\n}\n\n/*\ng++11 -o s s.cpp -O2; for((i = 1; i <= 10; ++i)) do cp $i.in s.in; time ./s > s.out; diff $i.ans s.out -w > s.res; echo $i : $?; done;\n*/\n\n```",
        "postTime": 1523319728,
        "uid": 21784,
        "name": "Caii",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4382 \u3010[\u516b\u7701\u8054\u80032018]\u5288\u914d\u3011"
    },
    {
        "content": "\u4e00\u79cd\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e25\u683c\u4e0e $C$ \u65e0\u5173\u7684\u505a\u6cd5\u3002\n\n------\n\n\u9996\u5148\uff0c\u770b\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e00\u4e0b\u5b50\u5c31\u80fd\u60f3\u5230\u4e8c\u5206\u56fe\u591a\u91cd\u5339\u914d\u7684\u6a21\u578b\u2014\u2014\u6bcf\u4e2a\u9009\u624b\u5747\u53ef\u4ee5\u5339\u914d\u591a\u4e2a\u5bfc\u5e08\uff0c\u800c\u5bfc\u5e08\u6709\u7740\u5339\u914d\u4eba\u6570\u7684\u4e0a\u9650\u3002\n\n\u4e8e\u662f\u6211\u4eec\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u6bcf\u4e2a\u4eba\uff0c\u518d\u679a\u4e3e\u5176\u6240\u6709\u6863\u5fd7\u613f\uff0c\u4f9d\u6b21\u5224\u65ad\u5176\u8be5\u6863\u5fd7\u613f\u7684\u8fb9\u52a0\u5165\u56fe\u4e2d\u4f1a\u4e0d\u4f1a\u4f7f\u6700\u5927\u6d41\u91cf\u53d8\u5927\u5373\u53ef\u3002\n\n\u4e3a\u4e86\u907f\u514d\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u9519\u8bef\uff0c\u6211\u7684\u5199\u6cd5\u662f\u52a0\u5165\u4e00\u6863\u5fd7\u613f\u540e\uff0c\u82e5\u5408\u6cd5\uff0c\u5219\u4e0d\u9000\u6d41\uff0c\u76f4\u63a5\u8fdb\u884c\u4e0b\u4e00\u4e2a\u4eba\u7684\u8fd0\u7b97\uff1b\u5426\u5219\uff0c\u5c31\u8981**\u9000\u6d41**\uff0c\u6d88\u9664\u672c\u6863\u5fd7\u613f\u7684\u5f71\u54cd\u3002\u5177\u4f53\u800c\u8a00\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u5efa\u56fe\u662f\u4ece $S$ \u8fde\u5230\u6240\u6709\u4eba\uff0c\u4ece\u6240\u6709\u4eba\u8fde\u5230\u5408\u6cd5\u7684\u5bfc\u5e08\uff0c\u4ece\u6240\u6709\u5bfc\u5e08\u518d\u8fde\u5230 $T$\uff1b\u4e8e\u662f\u5f53\u60f3\u8981\u4ec5\u5bf9\u4e00\u4e2a\u4eba\u9000\u6d41\u65f6\uff0c\u5c31\u65ad\u6389\u5176\u4e0e $S$ \u7684\u8fde\u8fb9\uff0c\u5e76\u4e14\u4ee5 $T$ \u4e3a\u6e90\u70b9\uff0c\u6b64\u4eba\u6240\u5bf9\u5e94\u7684\u8282\u70b9\u4e3a\u6c47\u70b9\uff0c\u8dd1\u4e00\u904dDinic\uff0c\u7136\u540e\u518d\u8fde\u56de\u8be5\u8fde\u8fb9\u5373\u53ef\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u4e9b\u7406\u8bba\u4e0a\u5df2\u7ecf\u4e0d\u5b58\u5728\u7684\u8fb9\u7684\u5f71\u54cd\uff0c\u6211\u4eec\u5c06\u6b64\u6863\u5fd7\u613f\u7684\u8fb9**\u5168\u6570\u5220\u53bb**\uff08\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5199\u7684\u94fe\u5f0f\u524d\u5411\u661f\u8981\u88ab\u5347\u7ea7\u4e3a\u94fe\u8868\u6765\u652f\u6301\u5feb\u901f\u5220\u9664\uff09\u3002\n\n\u4e0b\u9762\u8003\u8651\u7b2c\u4e8c\u95ee\u3002\u7b2c\u4e8c\u95ee\u7684\u601d\u8def\u4e5f\u5f88\u7b80\u5355\uff0c\u5728\u7b2c\u4e00\u95ee\u7684\u6b8b\u91cf\u7f51\u7edc\u4e0a\uff0c\u5012\u7740\u904d\u5386\u6bcf\u4e2a\u4eba\u3002\u5f53\u904d\u5386\u5230\u4e00\u4e2a\u4eba\u65f6\uff0c\u5148\u5220\u53bb\u5176\u7b2c\u4e00\u95ee\u4e2d\u8fde\u4e0a\u7684\u6240\u6709\u8fb9\uff0c\u7136\u540e\u518d\u628a\u4ed6\u524d $s_i$ \u6863\u7684\u8fb9\u5168\u6570\u52a0\u5165\u56fe\u4e2d\u3002\u8dd1\u6700\u5927\u6d41\uff0c\u627e\u5230\u90a3\u4e2a\u65b0\u88ab\u5339\u914d\u4e0a\u7684\u4eba\uff0c\u9000\u6d41\u5e76\u5220\u53bb\u5176\u6240\u6709\u8fb9\uff0c\u7136\u540e\u91cd\u65b0\u8dd1\u6700\u5927\u6d41\uff0c\u76f4\u5230\u518d\u4e5f\u627e\u4e0d\u5230\u65b0\u88ab\u5339\u914d\u4e0a\u7684\u4eba\u3002\n\n\u8fd9\u6837\u5c31\u9700\u8981\u4e00\u4e9b\u64cd\u4f5c\u6765\u4fdd\u8bc1\u6b63\u786e\u6027\u3002\u5177\u4f53\u800c\u8a00\uff0c\u5728\u5220\u53bb\u7b2c\u4e00\u95ee\u4e2d\u7684\u8fb9\u65f6\uff0c\u540c\u6837\uff0c\u8981\u5148\u9000\u6d41\u6765\u6d88\u53bb\u5f71\u54cd\uff0c\u518d\u5220\u8fb9\u3002\u7136\u540e\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u4e0d\u4f1a\u6709\u4e24\u4e2a\u7b2c\u4e8c\u95ee\u7684\u4eba\u540c\u65f6\u5339\u914d\u4e0a\u4e86\uff0c\u5374\u62a2\u8d70\u4e86\u7b2c\u4e00\u95ee\u7684\u4eba\u7684\u6d41\u91cf\uff0c\u6211\u4eec\u5fc5\u987b\u4fdd\u8bc1\u4efb\u610f\u65f6\u523b\u6240\u6709\u7b2c\u4e8c\u95ee\u7684\u4eba\u4e2d\u6700\u591a\u53ea\u80fd\u5339\u914d\u4e00\u4e2a\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u8981\u5efa\u7acb\u4e00\u4e2a**\u4f2a\u6e90\u70b9** $s$\uff0c\u8fde\u8fb9 $(S,s,1)$\uff0c\u5e76\u4e14\u5c06\u6240\u6709\u7b2c\u4e8c\u95ee\u7684\u4eba\u7684\u8fb9\u4ece $s$ \u800c\u975e $S$ \u8fde\u51fa\u3002\u8fd9\u6837\uff0c\u5373\u53ef\u4fdd\u8bc1\u6240\u6709\u7b2c\u4e8c\u95ee\u7684\u4eba\u6700\u591a\u5339\u914d\u4e00\u4e2a\u3002\u5f53Dinic\u4e0b\u6765\u53d1\u73b0\u6700\u5927\u6d41\u91cf\u589e\u52a0\u65f6\uff0c\u627e\u5230 $s$ \u6d41\u5411\u7684\u90a3\u4e2a\u8282\u70b9\uff0c\u9000\u6d41\u5e76\u5220\u8fb9\uff0c\u7136\u540e\u91cd\u65b0\u8dd1Dinic\u76f4\u5230\u6700\u5927\u6d41\u91cf\u4e0d\u518d\u589e\u52a0\uff1b\u5426\u5219\uff0c\u5373\u6700\u5927\u6d41\u91cf\u6ca1\u6709\u589e\u52a0\uff0c\u4e3a\u4e86\u6d88\u9664\u5f71\u54cd\uff0c\u6211\u4eec\u5bf9 $s$ \u9000\u6d41\uff08\u4e8b\u5b9e\u4e0a\uff0c\u6b64\u5904\u9000\u6d41\u4e0e\u5426\u5e76\u4e0d\u4f1a\u5f71\u54cd\u7b97\u6cd5\u6b63\u786e\u6027\u2014\u2014\u56e0\u4e3a\u6700\u7ec8\u65b9\u6848\u4e2d $s$ \u4e5f\u662f\u8981\u6709\u6d41\u91cf\u7684\uff0c\u4f46\u662f\u8fd9\u91cc\u4ee3\u7801\u4e2d\u5c31\u968f\u624b\u5199\u4e0a\u4e86\u4e00\u6b21\u9000\u6d41\uff09\uff0c\u7136\u540e\u8fdb\u5165\u524d\u4e00\u4e2a\u4eba\u7684\u64cd\u4f5c\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u4e0d\u9700\u8981\u50cf\u5e38\u89c4\u505a\u6cd5\u4e2d\u4e00\u6837\u652f\u6301\u524d\u7f00\u548c\u6b8b\u91cf\u7f51\u7edc\u7684\u67e5\u8be2\uff0c\u6240\u4ee5\u7a7a\u95f4\u590d\u6742\u5ea6\u662f\u5341\u5206\u4f18\u79c0\u7684\uff1b\u7136\u800c\uff0c\u56e0\u4e3a\u9000\u6d41\u6b21\u6570\u5f88\u591a\uff0c\u6240\u4ee5\u5b9e\u9645\u6d88\u8017\u65f6\u95f4\u8f83\u5e38\u89c4\u505a\u6cd5\u751a\u81f3\u66f4\u52a3\uff0c\u4f46\u662f\u5f53\u6570\u636e\u8303\u56f4\u66f4\u5927\u65f6\uff0c\u6b64\u7b97\u6cd5\u4fbf\u4f1a\u663e\u8457\u4f18\u4e8e\u5e38\u89c4\u505a\u6cd5\uff08\u56e0\u4e3a\u5c11\u4e86\u4e8c\u5206\u4ee5\u53ca\u62f7\u8d1d\u524d\u7f00\u548c\u6b8b\u91cf\u7f51\u7edc\u7b49\u64cd\u4f5c\uff09\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,T_T,C_C,lim[210],acc[210],ide[210],imp[210];\nnamespace MaxFlow{\n\tconst int N=510,M=1000000;\n\tint head[N],cur[N],dep[N],S,T,res;\n\tint bin[M],tp,cnt;//storing the id of edges\n\tint newedge(){return tp?bin[tp--]:cnt++;}//generating the id of an edge\n\tstruct node{int to,next,last,val;}edge[M];//using a handwritten list to store edges\n\tint ae(int u,int v,int w){//adding an edge in the back, returning the id\n\t\tint U=newedge();\n\t\tedge[U].next=head[u],edge[U].last=-1,edge[U].to=v,edge[U].val=w;\n\t\tif(head[u]!=-1)edge[head[u]].last=U;head[u]=U;\n\t\t\n\t\tint V=newedge();\n\t\tedge[V].next=head[v],edge[V].last=-1,edge[V].to=u,edge[V].val=0;\n\t\tif(head[v]!=-1)edge[head[v]].last=V;head[v]=V;\n\t\t\n\t\treturn U;//under every circumstance, V equals U+1. \n\t}\n\tvoid ea(int U){//eliminating edge U\n\t\tint V=U+1,u=edge[V].to,v=edge[U].to;\n\t\tif(edge[V].next!=-1)edge[edge[V].next].last=edge[V].last;\n\t\tif(edge[V].last!=-1)edge[edge[V].last].next=edge[V].next;\n\t\tif(head[v]==V)head[v]=edge[V].next;\n\t\tbin[++tp]=V;\n\t\t\n\t\tif(edge[U].next!=-1)edge[edge[U].next].last=edge[U].last;\n\t\tif(edge[U].last!=-1)edge[edge[U].last].next=edge[U].next;\n\t\tif(head[u]==U)head[u]=edge[U].next;\n\t\tbin[++tp]=U;\n\t}\n\tqueue<int>q;\n\tinline bool bfs(){\n\t\tmemset(dep,0,sizeof(dep)),q.push(S),dep[S]=1;\n\t\twhile(!q.empty()){\n\t\t\tregister int x=q.front();q.pop();\n\t\t\tfor(register int i=cur[x]=head[x];i!=-1;i=edge[i].next)if(edge[i].val&&!dep[edge[i].to])dep[edge[i].to]=dep[x]+1,q.push(edge[i].to);\n\t\t}\n\t\treturn dep[T]>0;\n\t}\n\tbool reach;\n\tinline int dfs(int x,int flow){\n\t\tif(x==T){res+=flow,reach=true;return flow;}\n\t\tint used=0;\n\t\tfor(register int &i=cur[x];i!=-1;i=edge[i].next){\n\t\t\tif(!edge[i].val||dep[edge[i].to]!=dep[x]+1)continue;\n\t\t\tregister int ff=dfs(edge[i].to,min(edge[i].val,flow-used));\n\t\t\tif(ff){edge[i].val-=ff,edge[i^1].val+=ff,used+=ff;if(used==flow)break;}\n\t\t}\n\t\treturn used;\n\t}\n\tinline void Dinic(int SS,int TT){S=SS,T=TT;while(bfs()){reach=true;while(reach)reach=false,dfs(S,0x3f3f3f3f);}}\n}\nusing MaxFlow::head;\nusing MaxFlow::Dinic;\nusing MaxFlow::res;\nusing MaxFlow::edge;\nusing MaxFlow::cnt;\nusing MaxFlow::ae;\nusing MaxFlow::ea;\nusing MaxFlow::tp;\nvector<int>v[210][210];\nint read(){\n\tint x=0;\n\tchar c=getchar();\n\twhile(c>'9'||c<'0')c=getchar();\n\twhile(c>='0'&&c<='9')x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn x;\n}\nint S,T,s;//s is the pseudo source point. \nvoid compensate(int i){//conpensate for the influence of edge i.\n\tedge[i].val=0,edge[i+1].val=0;//blocking the supplying edge\n\tDinic(T,edge[i].to);//eliminating the influence of the current operation, using backflowing\n\tedge[i].val=1,edge[i+1].val=0;//restore the supplying edge\n} \nint e[210][210],sz[210];\nint main(){\n\tT_T=read(),C_C=read();\n\twhile(T_T--){\n\t\tn=read(),m=read(),memset(head,-1,sizeof(head)),cnt=res=tp=0,s=n+m+1,S=n+m+2,T=n+m+3;\n\t\tfor(int i=1;i<=m;i++)ae(i+n,T,lim[i]=read());\n\t\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++){int x=read();if(x)v[i][x].push_back(j);}\n\t\tfor(int i=1;i<=n;i++)ide[i]=read();\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tacc[i]=m+1,e[i][sz[i]=1]=ae(S,i,1);\n\t\t\tfor(int j=1;j<=m;j++){\n\t\t\t\tfor(auto k:v[i][j])e[i][++sz[i]]=ae(i,n+k,1);\n\t\t\t\tDinic(S,T);\n\t\t\t\tif(res==i){acc[i]=j;break;}\n\t\t\t\tcompensate(e[i][1]);\n\t\t\t\tres=i-1;//reset the answer\n\t\t\t\twhile(sz[i]>1)ea(e[i][sz[i]--]);//reset the graph\n\t\t\t}\n\t\t\tres=i;//forcing the flow to i\n\t\t}\n\t\tfor(int i=1;i<=n;i++)printf(\"%d \",acc[i]);puts(\"\");\n\t\tint sor=ae(S,s,1);\n\t\tfor(int i=n;i>=1;i--){\n\t\t\timp[i]=i;\n\t\t\tcompensate(e[i][1]),res=i-1;\n\t\t\twhile(sz[i])ea(e[i][sz[i]--]);\n\t\t\te[i][sz[i]=1]=ae(s,i,1);\n\t\t\tfor(int j=1;j<=ide[i];j++)for(auto k:v[i][j])e[i][++sz[i]]=ae(i,n+k,1);\n\t\t\twhile(true){\n\t\t\t\tDinic(S,T);\n\t\t\t\tif(res==i-1){compensate(sor);break;}//inpossible to find one\n\t\t\t\tfor(int k=head[s];k!=-1;k=edge[k].next)if(edge[k].to<=n&&!edge[k].val){\n\t\t\t\t\tint x=edge[k].to;\n\t\t\t\t\tcompensate(k);\n\t\t\t\t\timp[x]=x-i,res=i-1;\n\t\t\t\t\twhile(sz[x])ea(e[x][sz[x]--]);\n\t\t\t\t\tedge[sor].val=1,edge[sor^1].val=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;i++)printf(\"%d \",imp[i]);puts(\"\");\n\t\tfor(int i=1;i<=n;i++)sz[i]=0;\n\t\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++)v[i][j].clear();\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1612057093,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4382 \u3010[\u516b\u7701\u8054\u80032018]\u5288\u914d\u3011"
    },
    {
        "content": "\u62c6\u70b9+\u5308\u7259\u5229\u7b97\u6cd5\u3002\u4ee5\u4e0b\u8bbe\u5f53\u524d\u5904\u7406\u7684\u4eba\u53eb $R$\u3002\n\n\u9996\u5148\u5904\u7406\u201c\u4e00\u4e2a\u5bfc\u5e08\u5339\u914d $b$ \u4e2a\u4eba\u201d\u7684\u95ee\u9898\uff0c\u628a\u6bcf\u4e2a\u5bfc\u5e08\u62c6\u6210 $b$ \u4e2a\u70b9\u5c31\u884c\u3002\n\n\u7b2c\u4e00\u95ee\uff0c\u76f4\u63a5\u4ece\u7b2c\u4e00\u4e2a\u4eba\u8d77\uff0c\u4e00\u4e2a\u5fd7\u613f\u4e00\u4e2a\u5fd7\u613f\u5c1d\u8bd5\u662f\u5426\u80fd\u591f\u5339\u914d\uff0c\u82e5\u80fd\u5c31 `break` \u8fdb\u5165\u4e0b\u4e00\u4e2a\u4eba\uff0c\u5426\u5219\u7ee7\u7eed\u5c1d\u8bd5\u3002\u6ce8\u610f\u8fd9\u91cc\u4e0d\u9700\u8981\u6bcf\u6b21\u91cd\u65b0\u5efa\u56fe\uff0c\u76f4\u63a5\u6e05\u7a7a $R$ \u8fde\u51fa\u53bb\u7684\u8fb9\u5373\u53ef\u3002\u5339\u914d\u6210\u529f\uff08\u6216\u8005\u6240\u6709\u5fd7\u613f\u90fd\u65e0\u6cd5\u5339\u914d\uff09\u540e\u8fdb\u5165\u4e0b\u4e00\u4e2a\u4eba\uff08$R+1$\uff09\u65f6\u4e0d\u6e05\u7a7a $R$ \u8fde\u51fa\u53bb\u7684\u8fb9\uff0c\u56e0\u4e3a\u4e4b\u540e\u7684\u5339\u914d\u4e2d\uff0c\u4e0e $R$ \u6709\u5173\u7684\u589e\u5e7f\u8def\u53ef\u80fd\u53d1\u751f\u53d8\u5316\uff0c\u4ecd\u7136\u9700\u8981\u4e4b\u524d\u7684\u8fb9\u3002\u8fd9\u4e00\u6b65\u7684\u590d\u6742\u5ea6\u662f $O(n^5)$\uff0c\u5176\u4e2d\u5171\u5bfb\u627e $O(n^2)$ \u6b21\u589e\u5e7f\u8def\uff0c\u6bcf\u6b21\u5bfb\u627e\u589e\u5e7f\u8def\u7684\u590d\u6742\u5ea6\u662f $O(N+M)=O(n^5)$\uff08\u70b9\u6570 $N$ \u4e3a $n+\\sum b_i$ \u5728 $n^2$ \u7ea7\u522b\uff0c\u6bcf\u4e2a\u4eba\u81f3\u591a\u8fde\u51fa\u53bb $bn$ \u6761\u8fb9\uff0c\u800c\u6709 $n$ \u4e2a\u4eba\uff0c\u56e0\u6b64\u8fb9\u6570\u5728 $O(bn^2)=O(n^3)$ \u7ea7\u522b\uff09\u3002\u5b9e\u9645\u4e0a**\u4e0d\u53ef\u80fd**\u8dd1\u6ee1\uff08\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u6ca1\u529e\u6cd5\u8ba9\u6bcf\u6b21\u589e\u5e7f\u90fd\u904d\u5386\u6574\u4e2a\u56fe\uff09\uff0c\u56e0\u6b64\u662f\u6b63\u786e\u7684\u3002\n\n\u7b2c\u4e8c\u95ee\u4e5f\u5f88\u7b80\u5355\u3001\u5f88\u66b4\u529b\uff1a$p$ \u4ece $R\\to 1$ \u679a\u4e3e\uff0c\u4f9d\u6b21\u770b\u53ea\u8003\u8651\u524d $p-1$ \u4e2a\u4eba\u548c $R$ \u7684\u65f6\u5019\u53ef\u5426\u8ba9 $R$ \u7684\u524d $s_R$ \u4e2a\u5fd7\u613f\u6ee1\u8db3\u3002\u4e0d\u9700\u8981\u8dd1 $s_{R}$ \u6b21\u589e\u5e7f\uff0c\u628a\u524d $s_R$ \u4e2a\u5fd7\u613f\u5168\u90e8\u52a0\u8fdb\u53bb\u4e00\u6b21\u589e\u5e7f\u5c31\u884c\uff0c\u6ce8\u610f\u505a\u5b8c\u540e\u56fe\u7684\u6e05\u7a7a\u4e0e\u8fd8\u539f\u3002\u8fd9\u90e8\u5206\u7684\u590d\u6742\u5ea6\u4e5f\u662f $O(n^5)$\uff0c\u540c\u6837\u4e0d\u53ef\u80fd\u8dd1\u6ee1\u3002\u66f4\u4f18\u7684\u505a\u6cd5\u662f\u4e8c\u5206\uff08$O(n^4\\log n)$\uff09\uff0c\u4f46\u662f\u5bf9\u603b\u4f53\u590d\u6742\u5ea6\u65e0\u5f71\u54cd\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u6709\u7b80\u8981\u6ce8\u91ca\uff09\uff0c\u6700\u5927\u7684\u70b9\u8dd1\u4e86 $500\\text{ms}$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,C,b[205],s[205],mch[40005],ans[205],mm[205],sign,vst[205],tmp[40005];\nvector<int> g[205],z[205][205];\nbool dfs(int x,int id) {\n\tvst[x]=id;\n\tfor(int y:g[x]) {\n\t\tif(!mch[y]||(vst[mch[y]]!=id&&dfs(mch[y],id)))return mch[y]=x,mm[x]=y,1;\n\t}\n\treturn 0;\n}\nbool Try(int x,int y) { //\u7b2cx\u4e2a\u4eba\u7684\u7b2cy\u5fd7\u613f\u80fd\u5426\u6ee1\u8db3\n\tfor(int w:z[x][y]) {\n\t\tfor(int i=b[w-1]+1; i<=b[w]; i++)g[x].push_back(i);\n\t}\n\tif(dfs(x,++sign))return ans[x]=y,memset(mm,0,sizeof(mm)),1;\n\tg[x].clear();\n\tfor(int i=1; i<=n; i++)if(mm[i])mch[mm[i]]=0,mm[i]=0;\n\treturn 0;\n}\nbool dfs2(int x,int w1,int id) {//\u53ea\u8003\u8651<=w1\u7684 \n\tvst[x]=id;\n\tfor(int y:g[x]) {\n\t\tint t=mch[y];\n\t\tif(t>w1||!t||(vst[t]!=id&&dfs2(t,w1,id)))return mch[y]=x,1;\n\t}\n\treturn 0;\n}\nint main() {\n\tint T;\n\tscanf(\"%d%d\",&T,&C);\n\twhile(T--) {\n\t\tsign=0,cin>>n>>m;\n\t\tfor(int i=1; i<=m; i++)scanf(\"%d\",&b[i]),b[i]+=b[i-1]; //\u7f16\u53f7\uff1ab[i-1]+1~b[i]\n\t\tfor(int i=1; i<=n; i++) {\n\t\t\tans[i]=m+1;\n\t\t\tfor(int j=1,x; j<=m; j++) {\n\t\t\t\tscanf(\"%d\",&x);\n\t\t\t\tif(x)z[i][x].push_back(j);\n\t\t\t}\n\t\t}\n\t\tfor(int i=1; i<=n; i++) {\n\t\t\tfor(int j=1; j<=m; j++)if(Try(i,j))break;\n\t\t}\n\t\tfor(int i=1; i<=n; i++)printf(\"%d \",ans[i]);\n\t\tputs(\"\");\n\t\tfor(int i=1,flag; i<=n; i++) {\n\t\t\tscanf(\"%d\",&s[i]),g[i].clear(),flag=0;\n\t\t\tfor(int j=1; j<=s[i]; j++) {\n\t\t\t\tfor(int w:z[i][j]) {\n\t\t\t\t\tfor(int k=b[w-1]+1; k<=b[w]; k++)g[i].push_back(k)/*,cout<<endl<<\"P:\"<<i<<' '<<k<<endl*/;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j=i; j>=1; j--) {\n\t\t\t\tmemcpy(tmp,mch,sizeof(tmp));\n\t\t\t\tif(dfs2(i,j-1,++sign)){\n\t\t\t\t\tflag=1,printf(\"%d \",i-j);\n\t\t\t\t\tmemcpy(mch,tmp,sizeof(tmp));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tmemcpy(mch,tmp,sizeof(tmp));\n\t\t\t}\n\t\t\tif(!flag)printf(\"%d \",i);\n\t\t\tg[i].clear();\n\t\t\tfor(int w:z[i][ans[i]]) {\n\t\t\t\tfor(int k=b[w-1]+1; k<=b[w]; k++)g[i].push_back(k);\n\t\t\t}\n\t\t}\n\t\tputs(\"\");\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tg[i].clear(),mch[i]=0;\n\t\t\tfor(int j=1;j<=m;j++)z[i][j].clear();\n\t\t}\n\t}\n}\n```",
        "postTime": 1592034292,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4382 \u3010[\u516b\u7701\u8054\u80032018]\u5288\u914d\u3011"
    },
    {
        "content": "\u5e76\u4e0d\u77e5\u9053\u52a8\u6001\u52a0\u8fb9\u7684 dinic \u7684\u590d\u6742\u5ea6/fad\n\n\n\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\u4f9d\u6b21\u786e\u5b9a\u4e00\u4e2a\u5b57\u7b26\uff0c\u8fd9\u6837\u7684\u786e\u5b9a\u4f1a\u53d1\u751f $n^2$ \u6b21\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u786e\u5b9a\u7684\u5b57\u7b26\u4e32\uff0ccheck \u7684\u65b9\u5f0f\u5c31\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u4e4b\u524d\u7684\u70b9\u4f1a\u4fdd\u7559 $nC$ \u6761\u8fb9\uff0c\u8fd9\u6837\u8dd1 dinic \u7684\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n\\sqrt{n}C)$\uff0c\n\n\u4e0d\u8fc7\u4e8b\u5b9e\u4e0a\u6211\u4eec\u53ef\u4ee5\u52a8\u6001\u52a0\u8fb9\uff0c\u7136\u540e\u5982\u679c\u589e\u5e7f\u5931\u8d25\u90a3\u4e48\u65b0\u52a0\u7684\u8fb9\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\uff0c\u65f6\u523b\u6709\u6548\u7684\u8fb9\u6570\u4e3a $\\mathcal O(nC)$\uff0c\u7531\u4e8e\u56fe\u4e3a\u4e8c\u5206\u56fe\uff0c\u6240\u4ee5\u589e\u5e7f\u7684\u603b\u590d\u6742\u5ea6\u5927\u81f4\u53ef\u4ee5\u964d\u4e3a $\\mathcal O(n\\sqrt{n}C)$\uff0c\u9700\u8981\u5904\u7406 $n$ \u6b21\u6240\u4ee5\u8fd9\u91cc\u7684\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n^2\\sqrt{n}C)$\n\n\u7136\u540e check $s_i$ \u662f\u53ef\u4ee5\u76f4\u63a5\u4e00\u4e2a\u4e8c\u5206\u7136\u540e\u66b4\u529b\u52a0\u8fb9\u7136\u540e\u8dd1 dinic \u6765 check\uff0c\u590d\u6742\u5ea6\u662f $\\mathcal O(n\\cdot m\\sqrt n\\log n)$ \u5373 $\\mathcal O(n^2C\\sqrt{n}\\log n)$\u3002\n\n\u4e0d\u8fc7\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\uff0c\u6211\u5e76\u4e0d\u77e5\u9053\u52a8\u6001\u52a0\u8fb9\u5904\u7406\u4e8c\u5206\u56fe\u4e0a\u7684 dinic \u7684\u590d\u6742\u5ea6\u662f\u4e0d\u662f\u4ecd\u662f $\\mathcal O(n\\sqrt{n})$\uff0c\u4e0d\u8fc7\u611f\u6027\u4e0a\u611f\u89c9\u81f3\u591a\u4e5f\u4ec5\u662f $\\mathcal O(n^2)$\uff0c\u7136\u540e\u83ab\u540d\u5947\u5999\u76f4\u63a5\u8dd1\u52a8\u6001\u52a0\u8fb9\uff0c\u4e0d\u7528\u4e8c\u5206\u800c\u6362\u6210\u679a\u4e3e\u66b4\u529b check \u4e5f\u53ef\u4ee5\u8fc7\u53bb\uff0c\u590d\u6742\u5ea6\u4e0d\u77e5\u9053\u662f $\\mathcal O(n^2\\sqrt{n}C)$ \u8fd8\u662f $\\mathcal O(n^3C)$\uff0c\u4e0d\u8fc7\u5373\u4f7f\u662f\u540e\u8005\u770b\u4e0a\u53bb\u4e5f\u633a\u80fd\u8fc7\u7684\u3002\u8bd5\u4e86\u4e00\u4e0b\uff0c\u9700\u8981 O2 \u7684\u5e2e\u52a9\u3002\n\n\u4e0d\u8fc7\u53ef\u80fd\u662f\u6211 STL \u51fd\u6570\u7528\u591a\u4e86\u7684\u7f18\u6545\uff1f\u6709\u6ca1\u6709\u8001\u54e5\u8bf4\u4e00\u4e0b\u8fd9\u73a9\u610f\u513f\u7684\u590d\u6742\u5ea6\u5230\u5e95\u662f\u5565\u554a\n\n$Code:$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\n#define Next( i, x ) for( register int i = head[x]; i; i = e[i].next )\n#define rep( i, s, t ) for( register int i = (s); i <= (t); ++ i )\n#define drep( i, s, t ) for( register int i = (t); i >= (s); -- i )\n#define re register\nint gi() {\n\tchar cc = getchar() ; int cn = 0, flus = 1 ;\n\twhile( cc < '0' || cc > '9' ) {  if( cc == '-' ) flus = - flus ; cc = getchar() ; }\n\twhile( cc >= '0' && cc <= '9' )  cn = cn * 10 + cc - '0', cc = getchar() ;\n\treturn cn * flus ;\n}\nconst int inf = 1e8 + 7 ; \nconst int N = 500 + 5 ; \nconst int M = 3000 + 5 ; \nint C, n, m, b[N], S, T, head[N], a[N][N], AA[N], s[N], t[N], ff[N], mcp[N], cur[N], dep[N], cnt ;\nstruct E { int to, next, w ; } e[M << 1] ; \nqueue<int> q ; \nvoid add( int x, int y, int z ) {\n\te[++ cnt] = (E){ y, head[x], z }, head[x] = cnt,\n\te[++ cnt] = (E){ x, head[y], 0 }, head[y] = cnt ; \n}\nbool bfs() {\n\tq.push(S) ; memset( dep, 0, sizeof(dep) ), dep[S] = 1 ; \n\twhile( !q.empty() ) {\n\t\tint u = q.front() ; q.pop() ; \n\t\tNext( i, u ) {\n\t\t\tint v = e[i].to ; \n\t\t\tif( !dep[v] && e[i].w ) dep[v] = dep[u] + 1, q.push(v) ; \n\t\t}\n\t} \n\treturn ( dep[T] != 0 ) ;\n}\nint dfs( int x, int dist ) {\n\tif( x == T ) return dist ; int flow = 0 ; \n\tfor( int &i = cur[x]; i; i = e[i].next ) {\n\t\tint v = e[i].to ; \n\t\tif( ( dep[v] == dep[x] + 1 ) && e[i].w ) {\n\t\t\tint di = dfs( v, min( dist, e[i].w ) ) ;\n\t\t\te[i].w -= di, e[i ^ 1].w += di, dist -= di, flow += di ; \n\t\t\tif( !dist ) break ; \n\t\t}\n\t} return flow ; \n}\nint dinic() {\n\tint ans = 0 ; while( bfs() ) {\n\t\tmemcpy( cur, head, sizeof(head) ) ; int di = 1 ; \n\t\twhile(di) di = dfs( S, inf ), ans += di ; \n\t} return ans ; \n}\nvoid init() {\n\tmemset( head, 0, sizeof(head) ), cnt = 1 ; S = 0, T = n + m + 10 ;\n\trep( i, 1, n ) add( S, i, 1 ) ;\n\trep( i, 1, m ) add( i + n, T, b[i] ) ;\n\tmemcpy( mcp, head, sizeof(head) ); \n}\nsigned main()\n{\n\tint qwq = gi() ; C = gi() ; \n\twhile( qwq -- ) {\n\t\tn = gi(), m = gi() ; \n\t\trep( i, 1, m ) b[i] = gi() ; \n\t\trep( i, 1, n ) rep( j, 1, m ) a[i][j] = gi() ;\n\t\trep( i, 1, n ) s[i] = gi() ; \n\t\tinit() ; \n\t\tint flow = 0, bef = 0 ; \n\t\trep( i, 1, n ) {\n\t\t\tint id = m + 1, rnt = cnt ;\n\t\t\trep( j, 1, m ) {\n\t\t\t\trep( k, 1, m ) if( a[i][k] == j ) add( i, k + n, 1 ) ;\n\t\t\t\tflow += dinic() ; \n\t\t\t\tif( flow ^ bef ) { id = j, bef = flow ; break ; }\n\t\t\t\telse {\n\t\t\t\t\tcnt = rnt, memcpy( head, mcp, sizeof(mcp) ) ;\n\t\t\t\t}\n\t\t\t}\n\t\t\tAA[i] = flow, t[i] = id ; \n\t\t\tmemcpy( mcp, head, sizeof(head) );\n\t\t}\n\t\trep( i, 1, n ) printf(\"%d \", t[i] ) ; puts(\"\") ; \n\t\trep( i, 1, n ) {\n\t\t\tinit() ; \n\t\t\trep( j, 1, m ) if( a[i][j] && ( a[i][j] <= s[i] ) ) add( i, j + n, 1 ) ;\n\t\t\tflow = dinic() ; \n\t\t\tif( !flow ) { ff[i] = i ; continue ; }\n\t\t\tfor( int j = 1; j < i; ++ j ) {\n\t\t\t\trep( k, 1, m ) if( a[j][k] == t[j] ) add( j, k + n, 1 ) ;\n\t\t\t\tflow += dinic() ; \n\t\t\t\tif( flow != AA[j] + 1 ) { ff[i] = i - j ; break ; }\n\t\t\t} \n\t\t}\n\t\trep( i, 1, n ) printf(\"%d \", ff[i] ) ; puts(\"\") ;\n\t\tmemset( ff, 0, sizeof(ff) ) ; \n\t}\n\treturn 0 ;\n}\n```",
        "postTime": 1591861459,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4382 \u3010[\u516b\u7701\u8054\u80032018]\u5288\u914d\u3011"
    },
    {
        "content": "**\uff08\u89e3\u9898\u601d\u8def\uff1a\u7f51\u7edc\u6d41+\u4e8c\u5206\uff09**\n\n\u7b2c\u4e00\u95ee\uff1a\n\n\u5de6\u8fb9\u4e00\u5217\u70b9\u4ee3\u8868\u5b66\u751f\uff0c\u53f3\u8fb9\u4e00\u5217\u70b9\u4ee3\u8868\u5bfc\u5e08\n\n\u5bfc\u5e08\u5411\u6c47\u70b9\u8fde\u6d41\u91cf\u4e3a \u4eba\u6570\u9650\u5236\u7684 \u8fb9\n\n\u7136\u540e\u4ece\u7b2c\u4e00\u4e2a\u5b66\u751f\u7684\u7b2c\u4e00\u5fd7\u613f\u5f80\u91cc\u9762\u52a0\u8fb9\n\n\u5982\u679c\u5f53\u524d\u5b66\u751f\u7684\u5f53\u524d\u5fd7\u613f\u53ef\u4ee5\u6ee1\u8db3\uff0c\u5373\u76ee\u524d\u7f51\u7edc\u6d41\u53ef\u4ee5\u6ee1\u6d41\uff0c\u4fdd\u7559\u8fd9\u4e00\u5fd7\u613f\u7684\u8fb9\uff0c\u7136\u540e\u4e0b\u4e00\u4e2a\u5b66\u751f\n\n\u5426\u5219\uff0c\u5220\u9664\u8fd9\u4e00\u5fd7\u613f\u7684\u8fb9\uff0c\u7136\u540e\u4e0b\u4e00\u4e2a\u5fd7\u613f\n\n\n\n------------\n\u7b2c\u4e8c\u95ee\uff1a\n\n\u4e8c\u5206\u8fd9\u4e2a\u5b66\u751f\u8981\u524d\u8fdb\u591a\u5c11\u540d\n\n\u5047\u8bbe\u662f\u5b66\u751fi\u8981\u524d\u8fdbx\u540d\n\n\u628a\u524di-x-1\u540d\u7684\u5b66\u751f \u5728\u7b2c\u4e00\u95ee\u4e2d\u6ee1\u8db3\u7684\u5fd7\u613f \u7684\u8fb9\u52a0\u8fdb\u53bb\n\n\u5728\u628a\u5b66\u751fi\u7684\u8fb9\u52a0\u8fdb\u53bb\n\n\u5224\u65ad\u662f\u5426\u6ee1\u6d41\n\n\u6ce8\u610f\u5224\u65ad\u6ee1\u6d41\u7684\u65f6\u5019 \u4e0d\u5305\u62ec\u524di-x-1\u540d\u5b66\u751f\u91cc\u6ca1\u6709\u4efb\u4f55\u5bfc\u5e08\u7684\u5b66\u751f\n\nAC\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n\nusing namespace std;\n\n#define N 201\n#define M 80801 \n\nint n,m;\n\nint lim[N];\nint a[N][N][N];\nint cnt[N][N];\n\nint dream[N];\n\nint tot=1;\nint src,decc;\nint lev[N<<1],cur[N<<1];\nint front[M<<1],nxt[M<<1],to[M<<1],cap[M<<1];\nqueue<int>q;\n\nint st[N];\n\ninline void read(int &x)\n{\n    x=0; char c=getchar();\n    while(!isdigit(c)) c=getchar();\n    while(isdigit(c)) { x=x*10+c-'0'; c=getchar(); }\n}\n\ninline void init()\n{\n    read(n); read(m);\n    decc=n+m+1;\n    for(int i=1;i<=m;++i) read(lim[i]);\n    int x;\n    for(int i=1;i<=n;++i)\n        for(int j=1;j<=m;++j)\n        {\n            read(x);\n            if(x) a[i][x][++cnt[i][x]]=j;\n        }\n    for(int i=1;i<=n;++i) read(dream[i]);\n}\n\ninline void add(int u,int v,int w)\n{\n    to[++tot]=v; nxt[tot]=front[u]; front[u]=tot; cap[tot]=w;\n    to[++tot]=u; nxt[tot]=front[v]; front[v]=tot; cap[tot]=0;\n}\n\ninline bool bfs()\n{\n    for(int i=0;i<=decc;++i) cur[i]=front[i],lev[i]=-1;\n    while(!q.empty()) q.pop();\n    q.push(src);\n    lev[src]=0;\n    int now,t;\n    while(!q.empty())\n    {\n        now=q.front();\n        q.pop();\n        for(int i=front[now];i;i=nxt[i])\n        {\n            t=to[i];\n            if(lev[t]==-1 && cap[i])\n            {\n                lev[t]=lev[now]+1;\n                if(t==decc) return true;\n                q.push(t);\n            }\n        }\n    }\n    return false;\n}\n\ninline int dinic(int now,int flow)\n{\n    if(now==decc) return flow;\n    int rest=0,delta;\n    for(int &i=cur[now];i;i=nxt[i])\n        if(cap[i] && lev[to[i]]==lev[now]+1)\n        {\n            delta=dinic(to[i],min(flow-rest,cap[i]));\n            if(delta)\n            {\n                rest+=delta; \n                cap[i]-=delta; cap[i^1]+=delta;\n                if(rest==flow) break;\n            }\n        }\n    if(rest!=flow) lev[now]=-1;\n    return rest;\n}\n\nvoid solve1()\n{\n    for(int i=1;i<=m;++i) add(n+i,decc,lim[i]);\n    int ok;\n    for(int i=1;i<=n;++i)\n    {\n        add(src,i,1);\n        for(int j=1;j<=m;++j)\n            if(cnt[i][j])\n            {\n                for(int k=1;k<=cnt[i][j];++k) add(i,n+a[i][j][k],1);\n                if(bfs()) \n                {\n                    dinic(src,i);\n                    st[i]=j;\n                    break;\n                }\n                else\n                {\n                    for(int k=1,h=tot;k<=cnt[i][j];++k,h-=2) cap[h]=cap[h-1]=0;\n                }\n            }\n    }\n    for(int i=1;i<=n;++i) printf(\"%d \",st[i] ? st[i] : m+1);\n    putchar('\\n');\n}\n\ninline bool check(int x,int goal)\n{\n    tot=1;\n    memset(front,0,sizeof(front));\n    for(int i=1;i<=m;++i) add(n+i,decc,lim[i]);\n    int ok=0;\n    for(int i=1;i<goal;++i)\n    {\n        add(src,i,1);\n        if(!st[i]) \n        {\n            ok++;\n            continue;\n        }\n        for(int j=1;j<=cnt[i][st[i]];++j) add(i,n+a[i][st[i]][j],1);\n    }\n    add(src,x,1);\n    for(int i=1;i<=dream[x];++i)\n        for(int j=1;j<=cnt[x][i];++j) add(x,n+a[x][i][j],1);\n    while(bfs()) ok+=dinic(src,goal);\n    return ok==goal;\n}\n\nvoid solve2()\n{\n    int l,r,mid,ans;\n    for(int i=1;i<=n;++i)\n    {\n        if(st[i] && st[i]<=dream[i])\n        {\n            printf(\"0 \");\n            continue;\n        }\n        ans=i;\n        l=1; r=i-1;\n        while(l<=r)\n        {\n            mid=l+r>>1;\n            if(check(i,i-mid)) ans=mid,r=mid-1;\n            else l=mid+1;\n        }\n        printf(\"%d \",ans);\n    }\n    putchar('\\n');\n}\n\nvoid clear()\n{\n    memset(st,0,sizeof(st));\n    memset(cnt,0,sizeof(cnt));\n    memset(front,0,sizeof(front));\n    tot=1;\n}\n\nint main()\n{\n    //freopen(\"mentor.in\",\"r\",stdin);\n    //freopen(\"mentor.out\",\"w\",stdout);\n    int T,C;\n    read(T); read(C);\n    while(T--)\n    {\n        clear();\n        init();\n        solve1();\n        solve2();\n    }\n}\n```\n",
        "postTime": 1560251014,
        "uid": 111289,
        "name": "Ryan_",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4382 \u3010[\u516b\u7701\u8054\u80032018]\u5288\u914d\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u56e0\u4e3a\u591a\u6d4b\u4e0d\u6e05\u96f6\u7684\u60b2\u60e8\u6545\u4e8b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ra83ydhp.png?x-oss-process=image)\n\n### (\u9996)  \u5e0c\u671b\u5404\u4f4d\u5f15\u4ee5\u4e3a\u6212\n\n\u8ba9\u6211\u4eec\u6765\u770b\u8fd9\u9053\u9898\u3002\n\n\u4f60\u770b\u5230\u5bfc\u5e08\u548c\u9009\u624b\u95f4\u8981\u5339\u914d\uff0c\u4f60\u60f3\u5230\u4e86\u4e8c\u5206\u56fe\u5339\u914d\u3002\n\n\u4f60\u770b\u5230\u5bfc\u5e08\u9009\u62e9\u540d\u989d\u6709\u4e0a\u9650\uff0c\u4f60\u66f4\u52a0\u786e\u5b9a\u8fd9\u662f\u4e00\u9053\u4e8c\u5206\u56fe\u5339\u914d\u3002\u4f60\u6309\u7167\u5957\u8def\uff0c\u5c06\u4e00\u540d\u4e0a\u9650\u4e3a $p$ \u7684\u5bfc\u5e08\u4e0e\u6c47\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a  $p$ \u7684\u8fb9\u3002\n\n\u6b63\u5f53\u4f60\u51c6\u5907\u4e00\u9f13\u4f5c\u6c14\u628a\u6240\u6709\u9009\u624b\u4e0e\u5bfc\u5e08\u4e4b\u95f4\u53ea\u8981\u6709\u5173\u7cfb\u5c31\u8fde\u4e00\u6761\u8fb9\u7136\u540e\u51c6\u5907\u8dd1\u4e00\u904d\u6700\u5927\u6d41\u5c31\u5b8c\u4e8b\u7684\u65f6\u5019\uff0c\u4f60\u60f3\u8d77\u8fd9\u9053\u9898\u6709\u8fb9\u662f\u6709\u4f18\u5148\u7ea7\u7684\uff1a\n\n- \u5728\u524d\u7684\u9009\u624b\u6bd4\u5728\u540e\u7684\u9009\u624b\u66f4\u4f18\u5148\u5339\u914d\u3002\n\n- \u76f8\u540c\u7684\u9009\u624b\u5fd7\u613f\u524d\u7684\u6bd4\u5fd7\u613f\u540e\u7684\u66f4\u4f18\u5148\u5339\u914d\u3002\n\n\u4e8e\u662f\u4f60\u60f3\u5230\u4e86\u8d39\u7528\u6d41\uff0c\u8ba9\u6700\u5c0f\u8d39\u7528\u5f15\u5bfc\u7a0b\u5e8f\u4f18\u5148\u9009\u8fd9\u4e9b\u8fb9\u3002\n\n\u7406\u8bba\u4e0a\u5b8c\u5168\u53ef\u884c\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/tvsdgez8.png?x-oss-process=image)\n\n\uff08)\n\n\u4f60\u770b\u7740\u540e\u9762\u7684TLE\u9677\u5165\u4e86\u6c89\u601d\u3002\u4e5f\u8bb8\u662f\u4f60\u5efa\u56fe\u5efa\u7684\u5f88\u4e11\u7684\u539f\u56e0\uff0c\u4f46\u662f\u4f60\u51b3\u5b9a\u4e0d\u53bb\u60f3\u8d39\u7528\u6d41\u4e86\u3002\n\n\u4e8e\u662f\u4f60\u8003\u8651\u5982\u4f55\u8ba9\u6700\u5927\u6d41\u5b9e\u73b0\u8fd9\u4e9b\u4f18\u5148\u7ea7\u3002\n\n\u4e8e\u662f\uff0c\u4f60\u51b3\u5b9a\u6309\u9009\u624b\u6392\u540d\u52a0\u8fb9\uff0c\u9009\u624b\u5185\u90e8\u6309\u7167\u5fd7\u613f\u52a0\u8fb9\uff0c\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1\u9009\u7684\u65f6\u5019\u662f\u6309\u4f18\u5148\u7ea7\u8dd1\u7684\u3002\n\n\u4e8e\u662f\u4f60\u7ed9\u4e86\u81ea\u5df1\u4e00\u7ec4 hack\uff1a\n\n```\n1 2\n2 2\n1 1\n1 2\n1 0\n1 1\n```\n\n\u4f60\u53d1\u73b0\u52a0\u5165\u7b2c\u4e8c\u4e2a\u4eba\u7684\u65f6\u5019\uff0c\u4e3a\u4e86\u52a0\u5165\u7b2c\u4e8c\u4e2a\u4eba\uff0c\u628a\u7b2c\u4e00\u4e2a\u4eba\u4ece\u7b2c\u4e00\u5fd7\u613f\u79fb\u5230\u4e86\u7b2c\u4e8c\u5fd7\u613f\u3002\n\n\u4e8e\u662f\u4f60\u51b3\u5b9a\uff0c\u6bcf\u6b21\u6309\u7167\u5fd7\u613f\u4f18\u5148\u7ea7\u76f8\u540c\u7684\u8fb9\u4e3a\u4e00\u7ec4\uff0c\u4e00\u7ec4\u4e00\u7ec4\u52a0\u3002\u5982\u679c\u8fd9\u4e00\u7ec4\u8fb9\u6ca1\u6709\u80fd\u8ba9\u9009\u624b\u5339\u914d\uff0c\u4f60\u5c31\u5220\u6389\uff1b\u5982\u679c\u6210\u529f\u5339\u914d\uff0c\u5c31\u4e0d\u518d\u8fd9\u4e2a\u9009\u624b\u52a0\u540e\u9762\u4f18\u5148\u7ea7\u7684\u8fb9\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5fd7\u613f\u4f18\u5148\u7ea7\u4e0d\u4f1a\u53d8\u4e86\u3002\n\n\u7136\u540e\u4f60\u53d1\u73b0\u8fd8\u6709\u7b2c\u4e8c\u95ee\u3002\n\n\u4f60\u53d1\u73b0\u4e86\u4e00\u4e2a\u663e\u7136\u7684\u6027\u8d28\uff1a\u5047\u5982\u4e00\u4e2a\u9009\u624b\u6392\u5728\u67d0\u4e2a\u9009\u624b\u540e\u4e0d\u4f1a\u6cae\u4e27\uff0c\u90a3\u4e48\u4ed6\u6392\u5728\u8fd9\u4e2a\u9009\u624b\u4e4b\u524d\u7684\u9009\u624b\u4e4b\u540e\u4e5f\u4e0d\u4f1a\u6cae\u4e27\u3002\n\n\u4e8e\u662f\u81ea\u7136\u5730\u4f60\u60f3\u5230\u4e86\u4e8c\u5206\u3002\n\n\u4e8e\u662f\u5728\u7b2c\u4e00\u95ee\u91cc\uff0c\u4f60\u8bb0\u5f55\u4e86\u6bcf\u4e2a\u4eba\u5339\u914d\u5b8c\u6bd5\u540e\u4ed6\u4eec\u7684\u6b8b\u91cf\u7f51\u7edc\u60c5\u51b5\u3002\uff08\u987a\u5e26\u4e00\u63d0\uff0c\u7b2c\u4e00\u95ee\u7684\u5220\u8fb9\u53ef\u4ee5\u901a\u8fc7\u53cd\u590d\u8bfb\u4e0a\u4e00\u4f4d\u9009\u624b\u7684\u6b8b\u91cf\u7f51\u7edc\u8fdb\u884c\u56de\u6863XD\uff09\u4f60\u4e8c\u5206\u4e86\u4e00\u4e2a\u7b54\u6848\uff0c\u4f60\u5728\u8fd9\u4e2a\u7b54\u6848\u9009\u624b\u7684\u6b8b\u91cf\u7f51\u7edc\u4e0a\u52a0\u4e0a\u4e86\u76ee\u6807\u9009\u624b\u7684\u5728\u6cae\u4e27\u503c\u4e4b\u4e0b\u7684\u8fb9\u3002\u4f60\u5c1d\u8bd5\u5bfb\u627e\u589e\u5e7f\u8def\u3002\u4f60\u53d1\u73b0\uff0c\u5047\u5982\u627e\u5230\u4e86\u589e\u5e7f\u8def\uff0c\u8bf4\u660e\u6392\u5728\u8fd9\u4e2a\u9009\u624b\u4e4b\u540e\u76ee\u6807\u9009\u624b\u4e0d\u4f1a\u6cae\u4e27\u3002\u4e8e\u662f\u7b2c\u4e8c\u95ee\u4e5f\u8fc7\u4e86\u3002\n\n\u6700\u540e\u8bf4\u4e00\u53e5\uff1a**\u591a\u6d4b\u4e0d\u6e05\u7a7a\uff0c\u7206\u9519\u4e24\u884c\u6cea\u3002**~~\u6211\u6740\u4f60\u4e00\u5343\u904d\u4e5f\u4e0d\u591f\uff0c\u5fd7\u613f\u586b\u62a5~~\n\ncode:\n\n```cpp\n\n#include<bits/stdc++.h>\nusing namespace std;\nint t,C,n,m,b,x,S,T;\nint fi[1001][1001],nx[300][70000],to[300][70000],val[300][70000],tot[666];\nint depth[1001];\npair<int,int>choose[1001][2222];\nint ccnt[1001];\nint want[1001];\nint final[1001],finalwant[1001];\nvoid link(int a,int b,int c,int p)\n{\n\tnx[p][++tot[p]]=fi[p][a];\n\tfi[p][a]=tot[p];\n\tto[p][tot[p]]=b;\n\tval[p][tot[p]]=c;\n}\nbool bfs(int p)\n{\n\tqueue<int>que;\n\tmemset(depth,0x3f3f3f3f,sizeof(depth));\n\tdepth[S]=0;\n\tque.push(S);\n\twhile(!que.empty())\n\t{\n\t\tint x=que.front();\n\t\tque.pop();\n\t\tfor(int i=fi[p][x];i;i=nx[p][i])\n\t\t{\n\t\t\tint v=to[p][i];\n\t\t\tif(val[p][i]&&depth[v]>depth[x]+1)\n\t\t\t{\n\t\t\t\tdepth[v]=depth[x]+1;\n\t\t\t\tque.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn depth[T]<0x3f3f3f3f;\n}\nint dinic(int x,int in,int p)\n{\n\tif(x==T) return in;\n\tint out=0;\n\tfor(int i=fi[p][x];i&&in;i=nx[p][i])\n\t{\n\t\tint v=to[p][i];\n\t\tif(val[p][i]&&depth[v]==depth[x]+1)\n\t\t{\n\t\t\tint res=dinic(v,min(val[p][i],in),p);\n\t\t\tin-=res;\n\t\t\tout+=res;\n\t\t\tval[p][i]-=res;\n\t\t\tval[p][i^1]+=res;\n\t\t}\n\t}\n\tif(!out) depth[x]=0;\n\treturn out;\n}\nbool cmp(pair<int,int>a,pair<int,int>b)\n{\n\treturn a.first<b.first;\n}\nint main()\n{\n\tcin>>t>>C;\n\twhile(t--)\n\t{\n\t\tmemset(fi,0,sizeof(fi));\n\t\tmemset(ccnt,0,sizeof(ccnt));\n\t\tmemset(choose,0,sizeof(choose));//\u542c\u6211\u8bf4\u8c22\u8c22\u4f60 \n\t\tcin>>n>>m;\n\t\tS=0,T=n+m+1;\n\t\tfor(int i=0;i<=n;i++)\n\t\t\ttot[i]=1,final[i]=m+1,finalwant[i]=i;\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tcin>>b;\n\t\t\tlink(i+n,T,b,0);\n\t\t\tlink(T,i+n,0,0);\n\t\t}\t\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t{\n\t\t\t\tcin>>x;\n\t\t\t\tif(x)\n\t\t\t\t\tchoose[i][++ccnt[i]]={x,j};\n\t\t\t}\t\n\t\t\tsort(choose[i]+1,choose[i]+ccnt[i]+1,cmp);\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tcin>>want[i];\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int p=1;p<=ccnt[i];)\n\t\t\t{\n\t\t\t\ttot[i]=tot[i-1];\n\t\t\t\tfor(int j=0;j<=T;j++)\n\t\t\t\t\tfi[i][j]=fi[i-1][j];\n\t\t\t\tfor(int j=2;j<=tot[i-1];j++)\n\t\t\t\t\tnx[i][j]=nx[i-1][j],to[i][j]=to[i-1][j],val[i][j]=val[i-1][j];\n\t\t\t\t//\u4ee5\u4e0a\u5168\u90e8\u5728\u53cd\u590d\u8bfb\u6863 \n\t\t\t\tlink(S,i,1,i);\n\t\t\t\tlink(i,S,0,i);\n\t\t\t\tint color=choose[i][p].first;\n\t\t\t\twhile(choose[i][p].first==color)\n\t\t\t\t{\n\t\t\t\t\tlink(i,choose[i][p].second+n,1,i);\n\t\t\t\t\tlink(choose[i][p].second+n,i,0,i);\n\t\t\t\t\tp++;\n\t\t\t\t} \n\t\t\t\tif(bfs(i))\n\t\t\t\t{\n\t\t\t\t\tdinic(S,0x7fffff,i);\n\t\t\t\t\tfinal[i]=color;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tint l=0,r=i-1,mid;\n\t\t\twhile(l<=r)\n\t\t\t{\n\t\t\t\tint mid=(l+r)>>1;\n\t\t\t\ttot[n+1]=tot[mid];\n\t\t\t\tfor(int j=0;j<=T;j++)\n\t\t\t\t\tfi[n+1][j]=fi[mid][j];\n\t\t\t\tfor(int j=2;j<=tot[mid];j++)\n\t\t\t\t\tnx[n+1][j]=nx[mid][j],to[n+1][j]=to[mid][j],val[n+1][j]=val[mid][j];\n\t\t\t\t//\u7528\u6ca1\u6709\u7528\u5230\u7684n+1\u6765\u4e13\u95e8\u8bfb\u6863 \n\t\t\t\tlink(S,i,1,n+1);\n\t\t\t\tlink(i,S,0,n+1);\n\t\t\t\tfor(int j=1;j<=ccnt[i]&&choose[i][j].first<=want[i];j++)\n\t\t\t\t{\n\t\t\t\t\tlink(i,choose[i][j].second+n,1,n+1);\n\t\t\t\t\tlink(choose[i][j].second+n,1,0,n+1);\n\t\t\t\t}\n\t\t\t\tif(bfs(n+1))\n\t\t\t\t{\n\t\t\t\t\tfinalwant[i]=i-mid-1;\n\t\t\t\t\tl=mid+1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tr=mid-1;\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tcout<<final[i]<<\" \";\n\t\tcout<<endl;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tcout<<finalwant[i]<<\" \";\n\t\tcout<<endl;\n\t}\n}\n\n```",
        "postTime": 1665649391,
        "uid": 167279,
        "name": "Danno0v0",
        "ccfLevel": 7,
        "title": "P4382"
    },
    {
        "content": "\u9898\u9762\u81ea\u5df1\u770b\u5427\u3002\u3002\u3002\n\n#### std\n\n\u5bf9\u4e8e\u7b2c\u4e00\u95ee\uff0c\u5bb9\u6613\u60f3\u5230\u662f\u4e8c\u5206\u56fe\u5339\u914d\u3002\n\n\u5177\u4f53\u6a21\u578b\uff1a\n\n* $s$ \u5411\u5b66\u751f\u8fde\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\u3002\n* \u5bfc\u5e08\u5411 $t$ \u8fde\u6d41\u91cf\u4e3a\u4eba\u6570\u9650\u5236\u7684\u8fb9\u3002\n* \u4ece\u7b2c\u4e00\u4e2a\u5b66\u751f\u7684\u7b2c\u4e00\u5fd7\u613f\u5f80\u91cc\u9762\u52a0\u8fb9\uff0c\u5982\u679c\u5f53\u524d\u5b66\u751f\u7684\u5f53\u524d\u5fd7\u613f\u53ef\u4ee5\u6ee1\u8db3\uff0c\u5373\u76ee\u524d\u7f51\u7edc\u6d41\u53ef\u4ee5\u6ee1\u6d41\uff0c\u4fdd\u7559\u8fd9\u4e00\u5fd7\u613f\u7684\u8fb9\uff0c\u7136\u540e\u4e0b\u4e00\u4e2a\u5b66\u751f\uff1b\u5426\u5219\uff0c\u5220\u9664\u8fd9\u4e00\u5fd7\u613f\u7684\u8fb9\uff0c\u7136\u540e\u4e0b\u4e00\u4e2a\u5fd7\u613f\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u95ee\uff0c\u53ef\u4ee5\u679a\u4e3e\u8fd9\u4e2a\u5b66\u751f\u8981\u524d\u8fdb\u591a\u5c11\u540d\u3002\n\n\u5047\u8bbe\u5f53\u524d\u5b66\u751f $i$ \u524d\u8fdb $x$ \u540d\u3002\n\n\u90a3\u4e48\u628a\u5b66\u751f $i$ \u7684\u53ef\u4ee5\u4f7f\u4ed6\u4e0d\u6cae\u4e27\u7684\u6240\u6709\u5fd7\u613f\u7684\u6240\u6709\u8fb9\u8fde\u4e0a\u3002\n\n\u518d\u628a\u524d $i - x - 1$ \u540d\u5b66\u751f\u6ee1\u8db3\u7b2c\u4e00\u95ee\u4e2d\u7684\u5fd7\u613f\u7684\u8fb9\u8fde\u4e0a\u3002\n\n\u5224\u65ad\u662f\u5426\u6ee1\u6d41\u5373\u53ef\u3002\n\n\u603b\u7ed3\uff1a\u52a8\u6001\u52a0\u8fb9\u7f51\u7edc\u6d41\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nnamespace Fread\n{\n    const int SIZE = 1 << 23;\n    char buf[SIZE], *S, *T;\n    inline char getchar()\n    {\n        if (S == T)\n        {\n            T = (S = buf) + fread(buf, 1, SIZE, stdin);\n            if (S == T)\n                return '\\n';\n        }\n        return *S++;\n    }\n}\nnamespace Fwrite\n{\n    const int SIZE = 1 << 23;\n    char buf[SIZE], *S = buf, *T = buf + SIZE;\n    inline void flush()\n    {\n        fwrite(buf, 1, S - buf, stdout);\n        S = buf;\n    }\n    inline void putchar(char c)\n    {\n        *S++ = c;\n        if (S == T)\n            flush();\n    }\n    struct NTR\n    {\n        ~NTR()\n        {\n            flush();\n        }\n    } ztr;\n}\n\n#ifdef ONLINE_JUDGE\n#define getchar Fread::getchar\n#define putchar Fwrite::putchar\n#endif\n\ninline int read()\n{\n    int x = 0, f = 1;\n    char c = getchar();\n    while(c < '0' || c > '9')\n    {\n        if(c == '-') f = -1;\n        c = getchar();\n    }\n    while(c >= '0' && c <= '9')\n    {\n        x = x * 10 + c - '0';\n        c = getchar();\n    }\n    return x * f;\n}\n\ninline void write(int x)\n{\n    if(x < 0)\n    {\n        putchar('-');\n        x = -x;\n    }\n    if(x > 9)\n        write(x / 10);\n    putchar(x % 10 + '0');\n}\n\ntypedef int tp;\n\nconst int _ = 3e3 + 10;\n\nint n, m, s, t, lv[_], cur[_];\n\nint tot = 1, head[_], mcp[_], to[_ << 1], nxt[_ << 1];\n\ntp w[_ << 1];\n\ninline void add(int u, int v, tp dis)\n{\n    to[++tot] = v;\n    nxt[tot] = head[u];\n    w[tot] = dis;\n    head[u] = tot;\n}\n\ninline void Add(int u, int v, tp dis)\n{\n\tadd(u, v, dis);\n\tadd(v, u, 0);\n}\n\ninline bool bfs()\n{\n    memset(lv, -1, sizeof(lv));\n    lv[s] = 0;\n    memcpy(cur, head, sizeof(head));\n    queue<int> q;\n    q.push(s);\n    while (!q.empty())\n    {\n        int p = q.front();\n        q.pop();\n        for (int eg = head[p]; eg; eg = nxt[eg])\n        {\n            int v = to[eg];\n\t\t\ttp vol = w[eg];\n            if (vol > 0 && lv[v] == -1)\n                lv[v] = lv[p] + 1, q.push(v);\n        }\n    }\n    return lv[t] != -1;\n}\n\ntp dfs(int p = s, tp flow = 2e9)\n{\n    if (p == t)\n        return flow;\n    tp rmn = flow;\n    for (int eg = cur[p]; eg && rmn; eg = nxt[eg])\n    {\n        cur[p] = eg;\n        int v = to[eg];\n\t\ttp vol = w[eg];\n        if (vol > 0 && lv[v] == lv[p] + 1)\n        {\n            tp c = dfs(v, min(vol, rmn));\n            rmn -= c;\n            w[eg] -= c;\n            w[eg ^ 1] += c;\n        }\n    }\n    return flow - rmn;\n}\n\ninline tp dinic()\n{\n    tp ans = 0;\n    while (bfs())\n        ans += dfs();\n    return ans;\n}\n\nint a[207][207], b[_], sv[_], A[_], tv[_], f[_];\n\ninline void init()\n{\n\ttot = 1;\n\tmemset(head, 0, sizeof head);\n\ts = 0, t = _ - 1;\n\tfor(int i = 1; i <= n; ++i)\n\t\tAdd(s, i, 1);\n\tfor(int i = 1; i <= m; ++i)\n\t\tAdd(i + n, t, b[i]);\n\tmemcpy(mcp, head, sizeof head);\n}\n\nsigned main()\n{\n\tint T = read();\n\tread();\n\twhile(T--)\n\t{\n\t\tn = read(), m = read();\n\t\tfor(int i = 1; i <= m; ++i)\n\t\t\tb[i] = read();\n\t\tfor(int i = 1; i <= n; ++i)\n\t\t\tfor(int j = 1; j <= m; ++j)\n\t\t\t\ta[i][j] = read();\n\t\tfor(int i = 1; i <= n; ++i)\n\t\t\tsv[i] = read();\n\t\tinit();\n\t\tint Fl = 0, bef = 0;\n\t\tfor(int i = 1; i <= n; ++i)\n\t\t{\n\t\t\tint id = m + 1, rnt = tot;\n\t\t\tfor(int j = 1; j <= m; ++j)\n\t\t\t{\n\t\t\t\tfor(int k = 1; k <= m; ++k)\n\t\t\t\t\tif(a[i][k] == j)\n\t\t\t\t\t\tAdd(i, k + n, 1);\n\t\t\t\tFl += dinic();\n\t\t\t\tif(Fl ^ bef)\n\t\t\t\t{\n\t\t\t\t\tid = j, bef = Fl;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttot = rnt;\n\t\t\t\t\tmemcpy(head, mcp, sizeof mcp);\n\t\t\t\t}\n\t\t\t}\n\t\t\tA[i] = Fl, tv[i] = id;\n\t\t\tmemcpy(mcp, head, sizeof head);\n\t\t}\n\t\tfor(int i = 1; i <= n; ++i)\n\t\t\twrite(tv[i]), putchar(' ');\n\t\tputchar('\\n');\n\t\tfor(int i = 1; i <= n; ++i)\n\t\t{\n\t\t\tinit();\n\t\t\tfor(int j = 1; j <= m; ++j)\n\t\t\t\tif(a[i][j] && a[i][j] <= sv[i])\n\t\t\t\t\tAdd(i, j + n, 1);\n\t\t\tFl = dinic();\n\t\t\tif(!Fl)\n\t\t\t{\n\t\t\t\tf[i] = i;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor(int j = 1; j < i; ++j)\n\t\t\t{\n\t\t\t\tfor(int k = 1; k <= m; ++k)\n\t\t\t\t\tif (a[j][k] == tv[j]) Add(j, k + n, 1);\n                Fl += dinic();\n                if (Fl != A[j] + 1)\n                {\n                    f[i] = i - j;\n                    break;\n                }\n\t\t\t}\n\t\t}\n\t\tfor(int i = 1; i <= n; ++i)\n\t\t\twrite(f[i]), putchar(' ');\n\t\t\tputchar('\\n');\n\t\tmemset(f, 0, sizeof f);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1646027630,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "P4382 [\u516b\u7701\u8054\u8003 2018] \u5288\u914d"
    },
    {
        "content": "**$n^{2}$\u8fc7\u767e\u4e07\uff0c\u66b4\u529b\u51fa\u5947\u8ff9\uff01**\n\n\u4e00\u9053\u6bd4\u8f83\u66b4\u529b\u7684\u9898\u76ee\uff0c\u849f\u84bb\u4e5f\u53ea\u4f1a\u66b4\u529b\u7684\u505a\u6cd5\u3002\n\n### \u601d\u8def\n\n\u53ef\u4ee5\u4e00\u773c\u770b\u51fa\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u6240\u4ee5\u8003\u8651\u7f51\u7edc\u6d41\u505a\u6cd5\u3002\n \n\u9996\u5148\u8003\u8651\u66b4\u529b\u7f51\u7edc\u6d41\u3002\n\n\u6e90\u70b9\u5411\u6bcf\u4e00\u4f4d\u9009\u624b\u8fde\u6d41\u91cf\u4e3a\u4e00\u7684\u8fb9\u3002\n\n\u6bcf\u4e00\u4f4d\u8bc4\u59d4\u5411\u6c47\u70b9\u8fde\u6d41\u91cf\u4e3a $b_{i}$ \u7684\u8fb9\u3002\n \n\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u64cd\u4f5c\u90fd\u76f4\u63a5\u8fde\u8fb9\uff0c\u66b4\u529b\u8dd1\u7f51\u7edc\u6d41\uff0c\u6765\u89e3\u51b3\u4e24\u4e2a\u95ee\u9898\u3002\n \n\u6211\u4eec\u53d1\u73b0\u590d\u6742\u5ea6\u592a\u8fc7\u5de8\u5927\uff0c\u53ef\u4ee5\u8fdb\u884c\u4e00\u6ce2\u4f18\u5316\u3002\n\n#### \u5982\u4f55\u4f18\u5316\n\n\u9996\u5148\u8003\u8651\u7b2c\u4e00\u4e2a\u95ee\u9898\u3002\n\n\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u9009\u624b\u201c\u53cd\u6094\u201d\u7684\u8001\u5e08\u53ea\u6709\u540c\u6837\u5fd7\u613f\u7b49\u7ea7\u7684\u8001\u5e08\u3002\n\n\u6211\u4eec\u5f88\u5feb\u5c31\u80fd\u60f3\u5230\u52a8\u6001\u8fde\u8fb9\u548c\u52a8\u6001\u5220\u8fb9\u3002\n\n\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a\u5fd7\u613f\u7b49\u7ea7\u7684\u8001\u5e08\u8fdb\u884c\u8fde\u8fb9\uff0c\u5982\u679c\u8fd8\u6709\u4f59\u6d41\uff0c\u5219\u8bb0\u5f55\u7b54\u6848\uff1b\u5982\u679c\u6ca1\u6709\uff0c\u5219\u5220\u6389\u8fd9\u4e9b\u8fb9\uff0c\u7ee7\u7eed\u904d\u5386\u4e0b\u4e00\u4e2a\u5fd7\u613f\u7b49\u7ea7\u7684\u8001\u5e08\u3002\n\n\u81f3\u4e8e\u4e4b\u524d\u9009\u624b\u8dd1\u8fc7\u7684\u6b8b\u91cf\u7f51\u7edc\u4e0d\u9700\u5220\u9664\uff0c\u76f4\u63a5\u8dd1\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a\u9700\u8981\u6709\u53cd\u6094\u7684\u4f59\u5730\u3002\n\n\u5f53\u7136\uff0c\u5982\u679c\u8fd9\u4f4d\u9009\u624b\u4e00\u4e2a\u7b54\u6848\u90fd\u6ca1\u627e\u5230\uff0c\u90a3\u4e48\u8fde\u6e90\u70b9\u5411\u4ed6\u8fde\u5f97\u8fb9\u90fd\u53ef\u4ee5\u5220\u6389\u3002\n \n\u63a5\u7740\u518d\u8003\u8651\u7b2c\u4e8c\u4e2a\u95ee\u9898\u3002\n\n\u4e00\u4e2a\u5f88\u5bb9\u6613\u770b\u51fa\u7684\u5c31\u662f\u9996\u5148\u8fdb\u884c\u4e8c\u5206\u3002\n\n\u5bf9\u4e8e\u4e8c\u5206\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u6bd4\u8f83\u66b4\u529b\u7684\u601d\u8def\uff0c\u8bb0\u5f55\u4e0b\u4e4b\u524d\uff0c\u6700\u4f18\u89e3\u7684\u6bcf\u4e00\u4e2a\u65f6\u95f4\uff08\u6bcf\u4e00\u4e2a\u9009\u624b\u52a0\u5165\u7684\u65f6\u5019\uff09\u7684\u6b8b\u91cf\u7f51\u7edc\uff0c\u63a5\u7740\u66b4\u529b\u52a0\u8fb9\uff0c\u8dd1\u4e00\u904d\u7f51\u7edc\u6d41\uff0c\u68c0\u6d4b\u6709\u6ca1\u6709\u4f59\u6d41\u3002\n\n\u53ef\u4ee5\u63a8\u7b97\u4e00\u4e0b\u8fd9\u4e2a\u66b4\u529b\u505a\u6cd5\u7684\u590d\u6742\u5ea6\u3002\n\n\u6bcf\u4e00\u6b21\u4e8c\u5206\u4e3a\uff1a$O(\\log n)$\n\n\u7f51\u7edc\u6d41\u8dd1\u4e8c\u5206\u56fe\u4e3a\uff1a$O(n \\sqrt{m})$\n\n\u6240\u4ee5\u7b2c\u4e8c\u4e2a\u95ee\u9898\u590d\u6742\u5ea6\u4e3a\uff1a$O(n^{2} \\sqrt{m}\\log n)$\n\n\u53d1\u73b0\u590d\u6742\u5ea6\u597d\u50cf\u662f\u4e00\u4e2a\u6b63\u786e\u7684\u3002\n\n\u53ea\u80fd\u8bf4\u662f\u66b4\u529b\u51fa\u5947\u8ff9\u5417\u3002\n\n#### Code\n\n\u770b\u7740\u4eba\u5747 $2kb$ \u7684\u4ee3\u7801\uff0c$4kb$ \u7684\u6211\u9677\u5165\u4e86\u6c89\u601d\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf = 1e7;\n\nint t , c , n , m , sl , tl , cnt = 1;\n\nint head[500] , b[500] , s[500] , cnt2[500];\n\nint dep[500] , ans[500] , cop[500][500];\n\npair<int , int> a[500][500];\n\nstruct edge\n{\n\tint to , nxt , v;\n}e[10000] , ce[300][10000];\n\ninline int read()\n{\n\tint asd = 0 , qwe = 1; char zxc;\n\twhile(!isdigit(zxc = getchar())) if(zxc == '-') qwe = -1;\n\twhile(isdigit(zxc)) asd = asd * 10 + zxc - '0' , zxc = getchar();\n\treturn asd * qwe;\n}\n\ninline void add(int x , int y , int z)\n{\n\te[++cnt] = (edge){y , head[x] , z} , head[x] = cnt;\n\te[++cnt] = (edge){x , head[y] , 0} , head[y] = cnt;\n}\n\ninline bool bfs()\n{\n\tmemset(dep , 0 , sizeof(dep));\n\tqueue<int> q; \n\t\n\tdep[sl] = 1 , q.push(sl);\n\t\n\twhile(q.empty() == 0)\n\t{\n\t\tint x = q.front(); q.pop();\n\t\tfor(int i = head[x];i;i = e[i].nxt)\n\t\t{\n\t\t\tint y = e[i].to;\n\t\t\tif(dep[y] == 0 && e[i].v > 0) dep[y] = dep[x] + 1 , q.push(y);\n\t\t}\n\t}\n\t\n\treturn dep[tl];\n}\n\ninline int dfs(int now , int flow , int &mflow)\n{\n\tif(now == tl)\n\t{\n\t\tmflow += flow;\n\t\treturn flow;\n\t}\n\t\n\tint used = 0;\n\t\n\tfor(int i = head[now];i;i = e[i].nxt)\n\t{\n\t\tint x = e[i].to;\n\t\tif(e[i].v && dep[x] == dep[now] + 1)\n\t\t{\n\t\t\tint y = dfs(x , min(e[i].v , flow - used) , mflow);\n\t\t\tused += y , e[i].v -= y , e[i ^ 1].v += y;\n\t\t\tif(used == flow) return used;\n\t\t}\n\t}\n\t\n\treturn used;\n}\n\ninline int Dinic()\n{\n\tint sum = 0;\n\twhile(bfs()) while(dfs(sl , inf , sum));\n\treturn sum;\n}\n\ninline void solve1()\n{\n\tcnt2[0] = cnt;\n\tmemset(ce[0] , 0 , sizeof(ce[0]));\n\tmemset(cop[0] , 0 , sizeof(cop[0]));\n\t\n\tfor(int i = 1;i <= cnt;i++) ce[0][i] = e[i];\n\tfor(int i = 1;i <= n + m + 2;i++) cop[0][i] = head[i];\n\t\n\tfor(int i = 1;i <= n;i++) \n\t{ \n\t\tans[i] = m + 1;\n\t\tint last = a[i][1].first;\n\t\tadd(sl , i , 1);\n\t\tfor(int j = 1;j <= m && a[i][j].first != inf;j++) \n\t\t{ \n\t\t\tif(a[i][j].first == last) \n\t\t\t\tadd(i , a[i][j].second + n , 1);\n\t\t\telse \n\t\t\t{ \n\t\t\t\tint sum = Dinic();\n\t\t\t\tif(sum == 1) \n\t\t\t\t{ \n\t\t\t\t\tans[i] = last;\n\t\t\t\t\tbreak;\n\t\t\t\t} \n\t\t\t\telse\n\t\t\t\t{ \n\t\t\t\t\tcnt = cnt2[i - 1];\n\t\t\t\t\tmemcpy(e , ce[i - 1] , sizeof(ce[i - 1]));\n\t\t\t\t\tmemcpy(head , cop[i - 1] , sizeof(cop[i - 1]));\n\t\t\t\t\tadd(sl , i , 1) , add(i , a[i][j].second + n , 1) , last = a[i][j].first;\n\t\t\t\t} \n\t\t\t\t\t\n\t\t\t} \n\t\t} \n\t\t\n\t\tif(ans[i] == m + 1)\n\t\t{ \n\t\t\tint sum = Dinic();\n\t\t\tif(sum == 1) ans[i] = last;\n\t\t\telse\n\t\t\t{ \n\t\t\t\tcnt = cnt2[i - 1];\n\t\t\t\tmemcpy(e , ce[i - 1] , sizeof(ce[i - 1]));\n\t\t\t\tmemcpy(head , cop[i - 1] , sizeof(cop[i - 1]));\n\t\t\t} \n\t\t} \n\t\t\n\t\tmemset(ce[i] , 0 , sizeof(ce[i]));\n\t\tmemset(cop[i] , 0 , sizeof(cop[i]));\n\t\t\n\t\tcnt2[i] = cnt;\n\t\tfor(int j = 1;j <= cnt;j++) ce[i][j] = e[j];\n\t\tfor(int j = 1;j <= n + m + 2;j++) cop[i][j] = head[j];\n\t\t\n\t\tprintf(\"%d \" , ans[i]);\n\t}\n\tputs(\"\");\n}\n\ninline void calc(int x , int y)\n{\n\tcnt = cnt2[x - 1];\n\tmemcpy(e , ce[x - 1] , sizeof(ce[x - 1]));\n\tmemcpy(head , cop[x - 1] , sizeof(cop[x - 1]));\n\tadd(sl , y , 1);\n\tfor(int i = 1;i <= m && a[y][i].first <= s[y];i++) add(y , a[y][i].second + n , 1);\n}\n\ninline void solve2()\n{\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tif(ans[i] <= s[i]) \n\t\t{\n\t\t\tprintf(\"0 \");\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\t\n\t\tint l = 1 , r = i - 1 , sum = 0;\n\t\twhile(l <= r)\n\t\t{\n\t\t\tint mid = (l + r) >> 1;\n\t\t\tcalc(mid , i);\n\t\t\tint num = Dinic();\n\t\t\tif(num == 1) l = mid + 1 , sum = mid;\n\t\t\telse r = mid - 1;\n\t\t}\n\t\t\n\t\tprintf(\"%d \" , i - sum);\n\t}\n\tputs(\"\");\n}\n\nint main()\n{\n\tt = read() , c = read();\n\t\n\twhile(t--)\n\t{\n\t\tn = read() , m = read() , sl = n + m + 1 , tl = n + m + 2 , cnt = 1;\n\t\t\n\t\tfor(int i = 1;i <= m;i++) b[i] = read();\n\t\t\n\t\tfor(int i = 1;i <= n;i++)\n\t\t{\n\t\t\tfor(int j = 1;j <= m;j++)\n\t\t\t{\n\t\t\t\ta[i][j].first = read() , a[i][j].second = j;\n\t\t\t\tif(a[i][j].first == 0) a[i][j].first = inf;\n\t\t\t}\n\t\t\tsort(a[i] + 1 , a[i] + m + 1);\n\t\t}\n\t\t\n\t\tfor(int i = 1;i <= n;i++) s[i] = read();\n\t\t\n\t\tfor(int i = 1;i <= m;i++) add(i + n , tl , b[i]);\n\t\t\n\t\tsolve1() , solve2();\n\t\t\n\t\t\n\t\tmemset(e , 0 , sizeof(e));\n\t\tmemset(s , 0 , sizeof(s));\n\t\tmemset(b , 0 , sizeof(b));\n\t\tmemset(cnt2 , 0 , sizeof(cnt2));\n\t\tmemset(head , 0 , sizeof(head));\n\t\t\n\t}\n\t\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1637225547,
        "uid": 320933,
        "name": "Mfeitveer",
        "ccfLevel": 0,
        "title": "P4382 [\u516b\u7701\u8054\u80032018]\u5288\u914d \u9898\u89e3"
    },
    {
        "content": "\u4fee\u6539Hungary\u53ef\u4ee5\u89e3\u51b3\u7b2c\u4e00\u95ee\u3002   \n\u6309\u6392\u540d\u4ece\u524d\u5f80\u540e\u5230\u5927\u679a\u4e3e\u5b66\u5458$u$\uff0c\u518d\u4ece\u4f18\u81f3\u52a3\u679a\u4e3e\u5fd7\u613f\u7b49\u7ea7\uff0c\u518d\u4efb\u610f\u679a\u4e3e\u8be5\u5fd7\u613f\u7b49\u7ea7\u4e2d\u7684\u5bfc\u5e08$x$\uff0c\u82e5$x$\u7684\u6218\u961f\u540d\u989d\u672a\u6ee1\uff0c\u90a3\u4e48\u76f4\u63a5\u8ba9$u$\u8fdb\u5165$x$\u7684\u6218\u961f\u3002\u5426\u5219\u6309\u679a\u4e3e$x$\u7684\u6218\u961f\u4e2d\u7684\u5b66\u5458$v$\uff0c\u9012\u5f52\u68c0\u67e5\u80fd\u5426\u8ba9$v$\u9009\u62e9\u5bf9\u4ed6\u800c\u8a00\u548c$x$\u540c\u4e00\u7b49\u7ea7\u7684\u5bfc\u5e08\uff0c\u5982\u679c\u6210\u529f\u7684\u8bdd\u5c31\u53ef\u4ee5\u8ba9$u$\u8fdb\u5165$x$\u7684\u6218\u961f\u3002   \n\u5bf9\u4e8e\u7b2c\u4e8c\u95ee\uff0c\u9996\u5148\u6211\u4eec\u5224\u65ad\u6389\u53ef\u4ee5\u8fdb\u5165\u7406\u60f3\u7684\u7b49\u7ea7\u7684\u6218\u961f\u7684\u5b66\u5458\uff0c\u5bf9\u4e8e\u5269\u4e0b\u7684\u5b66\u5458$u$\uff0c\u6211\u4eec\u7ed9\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff1a   \n> \u5728\u679a\u4e3e$u$\u7684\u524d$s_i$\u7ea7\u5fd7\u613f\u8fdb\u884c\u589e\u5e7f\u65f6\u6211\u4eec\u4f1a\u627e\u5230\u4e00\u4e9b\u4ea4\u9519\u8def\uff0c\u8ba9$u$\u9009\u62e9\u4ea4\u9519\u8def\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u5b66\u5458\u5e76\u5347\u4e0a\u4ed6\u7684\u6392\u540d\u90fd\u53ef\u4ee5\u8ba9$u$\u8fdb\u5165\u7406\u60f3\u7684\u7b49\u7ea7\u7684\u6218\u961f\u3002\n \n\u8bc1\u660e\uff1a   \n\n> \u9009\u62e9\u4ea4\u9519\u8def\u4ee5\u5916\u7684\u5b66\u5458\u4e00\u5b9a\u975e\u6cd5\uff0c\u8fd9\u4e2a\u662f\u663e\u7136\u7684\u3002   \n> \u6240\u6709\u4ea4\u9519\u8def\u4e00\u5b9a\u662f$u\\rightarrow x\\Rightarrow u_0\\rightarrow v_0\\cdots$\u5f62\u5f0f\u7684\uff08\u5355\u7bad\u5934\u6307\u672a\u5339\u914d\u8fb9\uff0c\u53cc\u7bad\u5934\u6307\u5339\u914d\u8fb9\uff09\u3002   \n> $u$\u7684\u524d$s_i$\u5fd7\u613f\u7b49\u7ea7\u7684\u6240\u6709\u5bfc\u5e08\u6784\u6210\u7684\u96c6\u5408\u5c31\u662f\u6240\u6709$x$\u6784\u6210\u7684\u96c6\u5408\uff0c\u800c\u8fd9\u4e9b\u5bfc\u5e08\u7684\u6218\u961f\u4e2d\u7684\u6210\u5458\u5c31\u662f$u_0$\u6784\u6210\u7684\u96c6\u5408\u3002   \n> \u5982\u679c\u8ba9$u$\u4e0a\u5347\u81f3\u4efb\u610f\u4e00\u4e2a$u_0$\u7684\u6392\u540d\uff0c\u4ed6\u5c31\u53ef\u4ee5\u76f4\u63a5\u5339\u914d$x$\u3002   \n> \u5982\u679c\u8ba9$u$\u4e0a\u5347\u81f3\u4efb\u610f\u4e00\u4e2a$u_i$\u7684\u6392\u540d\uff0c\u8fd9\u5c31\u76f8\u5f53\u4e8e\u662f$u$\u53d6\u4ee3\u4e86\u4ea4\u9519\u8def\u4e2d$u_i$\u7684\u4f4d\u7f6e\u3002   \n> \u90a3\u4e48\u8ba9$u$\u5339\u914d$x$\uff0c\u5e76\u4fee\u6539$u_j(j<i)$\u5339\u914d$v_j$\u5373\u53ef\u6210\u529f\u5339\u914d\u3002   \n> \u90a3\u4e48\u4ea4\u9519\u8def\u4e2d\u7684\u5b66\u5458\u4e00\u5b9a\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u65b9\u6848\uff0c\u56e0\u6b64\u9009\u62e9\u4ea4\u9519\u8def\u4e2d\u6392\u540d\u6700\u4f4e\u7684\u5b66\u5458\u5373\u53ef\u3002   \n\n```c++\n#include<cctype>\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<algorithm>\nconst int N=207;\nint n,m,mx,now,b[N],s[N],up[N],id[N],vis[N],bel[N];std::vector<int>a[N][N];\nint read(){int x=0,c=getchar();while(isspace(c))c=getchar();while(isdigit(c))(x*=10)+=c&15,c=getchar();return x;}\nint dfs(int u,int k)\n{\n    if(u^now) mx=std::max(mx,u);\n    for(int x:a[u][k])\n\tif(!vis[x])\n\t{\n\t    if(vis[x]=1,b[x]) return --b[x],id[u]=k,bel[u]=x;\n\t    for(int v=n;v;--v) if(v^u&&bel[v]==x) if(dfs(v,id[v])) return id[u]=k,bel[u]=x; \n\t}\n    return 0;\n}\nvoid solve()\n{\n    n=read(),m=read(),memset(bel+1,0,n*4);\n    for(int i=1;i<=n;++i) for(int j=1;j<=m;++j) a[i][j].clear();\n    for(int i=1;i<=m;++i) b[i]=read();\n    for(int i=1;i<=n;++i) for(int j=1;j<=m;++j) a[i][read()].push_back(j);\n    for(int i=1;i<=n;++i) s[i]=read(),id[i]=m+1,up[i]=i;\n    for(int i=1;i<=n;++i)\n    {\n\tmemset(vis+1,0,m*4),now=i;\n\tfor(int j=1;j<=m;++j)\n\t    if(a[i][j].size())\n\t    {\n\t\tif(mx=0,dfs(i,j)) {if(j<=s[i])up[i]=0; break;}\n\t\tif(j<=s[i]) up[i]=std::min(up[i],i-mx);\n\t    }\n    }\n    for(int i=1;i<=n;++i) printf(\"%d \",id[i]);puts(\"\");\n    for(int i=1;i<=n;++i) printf(\"%d \",up[i]);puts(\"\");\n}\nint main(){for(int T=read(),C=read();T;--T)solve();}\n```",
        "postTime": 1587718906,
        "uid": 89875,
        "name": "EMT__Mashiro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4382 \u3010[\u516b\u7701\u8054\u80032018]\u5288\u914d\u3011"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.org/problemnew/show/P4382)\n\n\u4e00\u4e2a\u7b2c\u4e8c\u95ee\u4e0d\u7528\u4e8c\u5206\u7684\u505a\u6cd5\n\n\u7b2c\u4e00\u95ee\u975e\u5e38\u88f8\uff0c\u5c31\u662f\u4e00\u4e2a\u52a8\u6001\u52a0\u8fb9\u7684$dinic$\uff0c\u6211\u4eec\u4ece$1$\u5230$n$\u8003\u8651\u6bcf\u4e00\u4e2a\u4eba\u7684\u6bcf\u4e00\u4e2a\u5fd7\u613f\uff0c\u6bcf\u6b21\u628a\u8fd9\u4e2a\u4eba\u8fd9\u4e00\u5fd7\u613f\u7684\u6240\u6709\u8fb9\u90fd\u8fde\u51fa\u6765\uff0c\u8dd1\u6700\u5927\u6d41\u53d1\u73b0\u6d41\u91cf\u589e\u52a0\u5c31\u8bf4\u660e\u8fd9\u4e2a\u5fd7\u613f\u5339\u914d\u4e0a\u4e86\uff0c\u9000\u51fa\u505a\u4e0b\u4e00\u4e2a\u4eba\uff1b\u5426\u5219\u5c31\u505a\u8fd9\u4e2a\u4eba\u7684\u4e0b\u4e00\u4e2a\u5fd7\u613f\n\n\u5728$dinic$\u7684\u65f6\u5019\u5220\u6389\u6ca1\u6709\u7528\u7684\u8fb9\u4f1a\u8ba9\u4ee3\u7801\u5feb\u5f88\u591a\n\n\u7b2c\u4e8c\u95ee\u770b\u8d77\u6765\u975e\u5e38\u4e8c\u5206\uff0c\u4f46\u662f\u4e8c\u5206\u9700\u8981\u6211\u4eec\u6bcf\u6b21\u90fd\u91cd\u6784\u51fa\u6b8b\u91cf\u7f51\u7edc\u6216\u8005\u662f\u66b4\u529b\u5b58\u4e0b\u6240\u6709\u6b8b\u91cf\u7f51\u7edc\uff0c\u8fd9\u6709\u70b9\u8fc7\u4e8e\u66b4\u529b\u4e86\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u6bcf\u5f53\u6211\u4eec\u6784\u9020\u51fa\u524d$i$\u4e2a\u4eba\u7684\u6b8b\u91cf\u7f51\u7edc\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u628a\u4e4b\u540e\u7684$n-i$\u4e2a\u4eba\u7684\u524d$s$\u5fd7\u613f\u7684\u8fb9\u52a0\u8fdb\u6765\uff0c\u8dd1$dinic$\u770b\u770b\u80fd\u5426\u5339\u914d\uff0c\u5982\u679c\u80fd\u5339\u914d\u4e0a\u6211\u4eec\u7ed9\u8fd9\u4e2a\u4eba\u8bb0\u5f55\u4e00\u4e0b\uff0c\u540c\u65f6\u9000\u6d41\n\n\u7531\u4e8e\u6211\u4eec\u9700\u8981\u5220\u6389\u8fd9\u4e2a\u4eba\u7684\u6240\u6709\u8fb9\uff0c\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u5b8c\u6574\u9000\u6d41\uff0c\u53ea\u9700\u8981\u628a\u6c47\u70b9\u5411\u8fd9\u4e2a\u4eba\u6240\u8fde\u7684\u5bfc\u5e08\u6307\u5411\u6c47\u70b9\u7684\u8fb9\u7ed9\u9000\u6d41\u5c31\u597d\u4e86\n\n\u4ee3\u7801\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<vector>\n#include<queue>\n#define re register\n#define LL long long\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\nconst int maxn=405;\nconst int inf=1e9;\ninline int read() {\n\tchar c=getchar();int x=0;while(c<'0'||c>'9') c=getchar();\n\twhile(c>='0'&&c<='9') x=(x<<3)+(x<<1)+c-48,c=getchar();return x;\n}\nstd::vector<int> v[205][205];\nstd::queue<int> q;\nstruct E{int v,nxt,f;}e[maxn*maxn];\nint h[maxn*maxn];\nint Te,Cc,S,T,b[205],ans[205],a[205],vis[205],g[205],id[205];\nint n,m,tot,r[maxn],num;\nint head[maxn],d[maxn],cur[maxn];\ninline void C(int x,int y,int f) {\n\te[++num].v=y;e[num].nxt=head[x];\n\thead[x]=num;e[num].f=f;h[num]=x;\n}\ninline void add(int x,int y,int f) {C(x,y,f),C(y,x,0);}\ninline int BFS() {\n\tfor(re int i=1;i<=tot;i++) d[r[i]]=0,cur[r[i]]=head[r[i]];\n\td[S]=1,q.push(S);\n\twhile(!q.empty()) {\n\t\tint k=q.front();q.pop();\n\t\tfor(re int i=head[k];i;i=e[i].nxt)\n\t\tif(!d[e[i].v]&&e[i].f) d[e[i].v]=d[k]+1,q.push(e[i].v);\n\t}\n\treturn d[T];\n}\nint dfs(int x,int now) {\n\tif(x==T||!now) return now;\n\tint flow=0,ff;\n\tfor(re int& i=cur[x];i;i=e[i].nxt)\n\tif(d[e[i].v]==d[x]+1) {\n\t\tff=dfs(e[i].v,min(e[i].f,now));\n\t\tif(ff<=0) continue;\n\t\tnow-=ff,flow+=ff,e[i].f-=ff,e[i^1].f+=ff;\n\t\tif(!now) break;\n\t}\n\treturn flow;\n}\ninline void reBuild() {\n\ttot=0;\n\tS=0,T=n+m+1;\n\tr[++tot]=S,r[++tot]=T;\n\tfor(re int i=1;i<=m;i++) \n\t\tr[++tot]=n+i,id[i]=num+1,add(n+i,T,b[i]);\n}\ninline void back(int pre) {\n\twhile(num>pre) {head[h[num]]=e[num].nxt;num--;} \n}\nint main() {\n\tTe=read(),Cc=read();\n\twhile(Te--) {\n\t\tn=read(),m=read();\n\t\tmemset(head,0,sizeof(head));num=1;\n\t\tmemset(vis,0,sizeof(vis));\n\t\tmemset(ans,0,sizeof(ans));\n\t\tfor(re int i=1;i<=n;i++)\n\t\t\tfor(re int j=1;j<=m;j++)\n\t\t\t\tv[i][j].clear();\n\t\tfor(re int i=1;i<=m;i++) b[i]=read();\n\t\tfor(re int i=1;i<=n;i++)\n\t\t\tfor(re int j=1;j<=m;j++) {\n\t\t\t\tint k=read();\n\t\t\t\tif(!k) continue;\n\t\t\t\tv[i][k].push_back(j);\n\t\t\t}\n\t\treBuild();\n\t\tint now=0;\n\t\tfor(re int i=1;i<=n;i++) {\n\t\t\tr[++tot]=i;add(S,i,1);now=num;\n\t\t\tfor(re int j=1;j<=m;j++) {\n\t\t\t\tfor(re int k=0;k<v[i][j].size();++k)\n\t\t\t\t\tadd(i,v[i][j][k]+n,1);\n\t\t\t\tint mid=0;\n\t\t\t\twhile(BFS()) mid+=dfs(S,inf);\n\t\t\t\tif(mid>=1) {ans[i]=j;break;}\n\t\t\t\tback(now);\n\t\t\t}\n\t\t}\n\t\tfor(re int i=1;i<=n;i++) if(!ans[i]) ans[i]=m+1;\n\t\tfor(re int i=1;i<=n;i++) a[i]=read();\n\t\tfor(re int i=1;i<=n;i++) printf(\"%d \",ans[i]);\n\t\tputchar(10);\n\t\tmemset(head,0,sizeof(head));num=1;\n\t\tfor(re int i=1;i<=n;i++) {\n\t\t\tif(ans[i]<=a[i]) {vis[i]=1;g[i]=i;continue;}\n\t\t\tfor(re int j=1;j<=a[i];j++) vis[i]+=v[i][j].size();\n\t\t\tif(vis[i]) vis[i]=0;\n\t\t\t\telse vis[i]=1,g[i]=0;\n\t\t}\n\t\tfor(re int i=1;i<=n;i++) if(!vis[i]) g[i]=1;\n\t\treBuild();\n\t\tfor(re int i=1;i<=n;i++) {\n\t\t\tr[++tot]=i;add(S,i,1);now=num;\n\t\t\tfor(re int j=1;j<=m;j++) {\n\t\t\t\tfor(re int k=0;k<v[i][j].size();++k)\n\t\t\t\t\tadd(i,v[i][j][k]+n,1);\n\t\t\t\tint mid=0;\n\t\t\t\twhile(BFS()) mid+=dfs(S,inf);\n\t\t\t\tif(mid>=1) break;\n\t\t\t\tback(now);\n\t\t\t}\n\t\t\tnow=num;\n\t\t\tfor(re int j=i+2;j<=n;j++) {\n\t\t\t\tif(vis[j]) continue;\n\t\t\t\tr[++tot]=j;add(S,j,1);\n\t\t\t\tfor(re int p=1;p<=a[j];p++) \n\t\t\t\t\tfor(re int k=0;k<v[j][p].size();k++)\n\t\t\t\t\t\tadd(j,v[j][p][k]+n,1);\n\t\t\t\tint mid=0;\n\t\t\t\twhile(BFS()) mid+=dfs(S,inf);\n\t\t\t\tif(mid>=1) {\n\t\t\t\t\tg[j]=i+1;\n\t\t\t\t\tfor(re int k=head[j];k;k=e[k].nxt)\n\t\t\t\t\tif(!e[k].f&&e[k].v>n) {\n\t\t\t\t\t\te[id[e[k].v-n]].f++;\n\t\t\t\t\t\te[id[e[k].v-n]^1].f--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttot--;back(now);\n\t\t\t}\n\t\t}\n\t\tfor(re int i=1;i<=n;i++) printf(\"%d \",i-g[i]);\n\t\tputchar(10);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1553693738,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4382 \u3010[\u516b\u7701\u8054\u80032018]\u5288\u914d\u3011"
    },
    {
        "content": "\u6211\u7528\u7684\u505a\u6cd5\u662f\u4e24\u6b21\u4e8c\u5206+dinic \n\u7b2c\u4e00\u6b21\u6211\u4eec\u4e8c\u5206\u7b2ci\u4e2a\u4eba\u53ef\u4ee5\u6ee1\u8db3\u7684\u6700\u9ad8\u5fd7\u613f\uff0ccheck \u5373\u4e3a\u8bb2\u524di-1\u4e2a\u4eba\u8fde\u5df2\u6c42\u51fa\u7684\u7b54\u6848\u7b49\u540c\u5fd7\u613f\u7684\u6240\u6709\u8fb9\uff0c\u7b2ci\u4e2a\u4eba\u8fde\u4e0d\u4f4e\u4e8e\u4e8c\u5206\u51fa\u7684mid\u7684\u6240\u6709\u8fb9\uff0c\u82e5\u6ee1\u6d41\u5373\u6b63\u786e\u3002 \u7b54\u6848\u5373mid\n\u7b2c\u4e8c\u6b21\u6211\u4eec\u4e8c\u5206\u7b2ci\u4e2a\u4eba\u6700\u665a\u51fa\u73b0\u5728\u54ea\u91cc\u53ef\u4ee5\u88ab\u6ee1\u8db3\u5fd7\u613f\uff0ccheck \u7c7b\u4f3c\u4e0a\u4e00\u95ee\u3002\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nqueue<int  > q;\nconst int inf = 1e9;\nconst int maxn =  510;\nconst int s=402;\nconst int t=403;\nstruct node{\n\tint to,next,flow;\n}e[maxn*100];\nint b[maxn],ss[maxn],zhiyuan[maxn][maxn][15],n,m,anss1[maxn],anss2[maxn],tot=1,h[maxn],dis[maxn],ttt[maxn];\nbool vis[450];\nbool is[maxn];\nvoid clear()\n{\n\tmemset(is,0,sizeof(is));\n\tmemset(ttt,0,sizeof(ttt));\n\tmemset(zhiyuan,0,sizeof(zhiyuan));\n}\nvoid add(int from,int to,int flow)\n{\n\te[++tot].next=h[from];\n\te[tot].to=to;\n\te[tot].flow=flow;\n\th[from]=tot;\n\te[++tot].next=h[to];\n\te[tot].to=from;\n\te[tot].flow=0;\n\th[to]=tot;\n}\nbool bfs()\n{\n\tmemset(vis,0,sizeof(vis));\n\tmemset(dis,0,sizeof(dis));\n\tvis[s]=1;\n\tdis[s]=0;\n\tq.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=h[u];i;i=e[i].next)\n\t\t{\n\t\t\tint to=e[i].to;\n\t\t\tif(!vis[to]&&e[i].flow)\n\t\t\t{\n\t\t\t\tq.push(to);\n\t\t\t\tvis[to]=1;\n\t\t\t\tdis[to]=dis[u]+1;\n\t\t\t}\n\t\t}\n\t}\n\treturn vis[t];\n}\nint dfs(int x,int y)\n{\n\tif(x==t||y==0) return y;\n\tint flow=0,f;\n\tfor(int i=h[x];i;i=e[i].next)\n\t{\n\t\tint to=e[i].to;\n\t\tif(dis[to]==dis[x]+1&&(f=dfs(to,min(y,e[i].flow)))>0)\n\t\t{\n\t\t\te[i].flow-=f;\n\t\t\te[i^1].flow+=f;\n\t\t\tflow+=f;\n\t\t\ty-=f;\n\t\t\tif(y==0) break;\n\t\t}\n\t}\n\tif(y>0)\n\tdis[x]=-1;\n\treturn flow;\n}\nint dinic()\n{\n\tint ans=0;\n\twhile(bfs()){\n\t\tans+=dfs(s,10000000);\n\t}\n\treturn ans;\n}\nbool check1(int now,int mid)\n{\n\tfor(int i=0;i<=tot;++i) e[i].flow=e[i].next=e[i].to=0;\n\tfor(int i=0;i<=t;++i) h[i]=0;\n\ttot=1;\n\tfor(int i=1;i<=now;++i)\n\t{\n\t\tif(is[i]) continue;\n\t\tadd(s,i,1);\n\t\tif(i!=now)\n\t\t{\n\t\t\tint cnt=zhiyuan[i][anss1[i]][0];\n\t\t\tfor(int j=1;j<=cnt;++j){\n\t\t\t\tadd(i,zhiyuan[i][anss1[i]][j]+n,1);\n\t\t\t}\n\t\t}\n\t\tif(now==i)\n\t\t{\n\t\t\tfor(int k=1;k<=mid;++k)\n\t\t\t{\n\t\t\t\tint cnt=zhiyuan[i][k][0];\n\t\t\t\tfor(int j=1;j<=cnt;++j)\n\t\t\t\t{\n\t\t\t\t\tadd(i,zhiyuan[i][k][j]+n,1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=m;++i) add(i+n,t,b[i]);\n\tint tmp=dinic();\n\tif(tmp>=now-ttt[now-1]) return 1;\n\telse  return 0; \n}\nbool check2(int now,int mid)\n{\n\tfor(int i=1;i<=tot;++i) e[i].flow=e[i].next=e[i].to=0;\n\tfor(int i=1;i<=t;++i) h[i]=0;\n\ttot=1;\n\tfor(int i=1;i<=mid-1;++i)\n\t{\n\t\tif(is[i]) continue;\n\t\tadd(s,i,1);\n\t\tint cnt=zhiyuan[i][anss1[i]][0];\n\t\tfor(int j=1;j<=cnt;++j)\n\t\t{\n\t\t\tadd(i,zhiyuan[i][anss1[i]][j]+n,1);\n\t\t}\n\t}\n\tadd(s,now,1);\n\tfor(int i=1;i<=ss[now];++i)\n\t{\n\t\tint cnt=zhiyuan[now][i][0];\n\t\tfor(int j=1;j<=cnt;++j)\n\t\t{\n\t\t\tadd(now,zhiyuan[now][i][j]+n,1);\n\t\t}\n\t}\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tadd(i+n,t,b[i]);\n\t}\n\tint tmp=dinic();\n\tif(tmp>=mid-ttt[mid-1]) return 1;\n\telse return 0;\n}\nint main()\n{\n//\tfreopen(\"10.in\",\"r\",stdin);\n//\tfreopen(\"std.out\",\"w\",stdout);\n\tint t,c;\n\tscanf(\"%d%d\",&t,&c);\n\twhile(t--){\n\t\tclear();\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=1;i<=m;++i){\n\t\t\tscanf(\"%d\",&b[i]);\n\t\t}\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tfor(int  j=1;j<=m;++j){\n\t\t\t\tint x;\n\t\t\t\tscanf(\"%d\",&x);\n\t\t\t\tif(x!=0)\n\t\t\t\tzhiyuan[i][x][++zhiyuan[i][x][0]]=j;\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;++i) scanf(\"%d\",&ss[i]);\n\t\tfor(int i=1;i<=n;++i){// \u7b2c\u4e00\u6b21\u4e8c\u5206 \u4e8c\u5206\u7b2ci\u4e2a\u4eba\u53ef\u4ee5\u6ee1\u8db3\u7684\u6700\u9ad8\u5fd7\u613f \n\t\t\tint l=1,r=m,ans=m+1;\n\t\t\twhile(l<=r)\n\t\t\t{\n\t\t\t\tint mid=(l+r)/2;\n\t\t\t\tif(check1(i,mid)) r=mid-1,ans=mid;\n\t\t\t\telse l=mid+1;\n\t\t\t}\n\t\t\tttt[i]=ttt[i-1];\n\t\t\tif(ans==m+1) is[i]=1,ttt[i]++;\n\t\t\tanss1[i]=ans;\n\t\t}\n\t\tfor(int i=1;i<=n;++i)\n\t\t{// \u7b2c\u4e8c\u6b21\u4e8c\u5206 \u4e8c\u5206\u7b2ci\u4e2a\u4eba\u53ef\u4ee5\u6ee1\u8db3\u7406\u60f3\u7684\u6700\u9760\u540e\u7684\u4f4d\u7f6e \n\t\t\tint l=1,r=i-1,ans=i;\n\t\t\tif(anss1[i]<=ss[i]) \n\t\t\t{\n\t\t\t\tanss2[i]=0;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\twhile(l<=r){\n\t\t\t\tint mid=(l+r)/2;\n\t\t\t\tif(check2(i,mid))l=mid+1,ans=mid;\n\t\t\t\telse r=mid-1;\n\t\t\t}\n\t\t\tif(ans==i)\n\t\t\t{\n\t\t\t\tanss2[i]=ans;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tanss2[i]=i-ans;\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;++i) \n\t\t{\n\t\t\tcout<<anss1[i]<<\" \";\n\t\t}\n\t\tcout<<endl;\n\t\tfor(int i=1;i<=n;++i)\n\t\t{\n\t\t\tcout<<anss2[i]<<\" \";\n\t\t}\n\t\tcout<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1523269321,
        "uid": 45185,
        "name": "was_n",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4382 \u3010[\u516b\u7701\u8054\u80032018]\u5288\u914d\u3011"
    }
]