[
    {
        "content": "\u6811\u4e0a\u8def\u5f84\u7edf\u8ba1\u663e\u7136\u662f\u975e\u5e38\u7ecf\u5178\u7684\u70b9\u5206\u6cbb\u6a21\u578b\u3002\u4e0e\u7ecf\u5178\u95ee\u9898\u4e0d\u540c\u7684\u662f\uff0c\u672c\u9898\u9700\u8981\u5bf9\u6bcf\u4e2a\u70b9\u6c42\u51fa\u7ecf\u8fc7\u8be5\u70b9\u7684\u5408\u6cd5\u8def\u5f84\u6570\u3002\n\n\u9996\u5148\u56de\u5fc6\u7528\u70b9\u5206\u6cbb\u7edf\u8ba1\u201c\u6811\u4e0a\u8ddd\u79bb\u5728 $[l,r]$ \u4e4b\u95f4\u7684\u70b9\u5bf9\u6570\u201d\u7684\u7b97\u6cd5\uff0c\u7531\u4e8e\u4e00\u6b21\u9012\u5f52\u4e2d\u7edf\u8ba1\u7684\u8def\u5f84\u5747\u7ecf\u8fc7\u5206\u6cbb\u91cd\u5fc3\uff0c\u8fd9\u79cd\u7b97\u6cd5\u663e\u7136\u5177\u6709\u4ee5\u4e0b\u6027\u8d28\uff1a\n\n- \u80fd\u591f\u4e0e\u67d0\u4e2a\u70b9\u62fc\u51fa\u4e00\u6761\u8def\u5f84\u7684\u70b9\u4e00\u5b9a\u4e0e\u8be5\u70b9\u6765\u81ea\u5206\u6cbb\u91cd\u5fc3\u7684\u4e0d\u540c\u5b50\u6811\u3002\n- \u7edf\u8ba1\u8fc7\u7a0b\u4e0d\u5173\u5fc3\u6bcf\u4e2a\u70b9\u7684\u5177\u4f53\u6765\u6e90\uff0c\u4ee5\u67d0\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u4e00\u4e2a\u7aef\u70b9\u7684\u5408\u6cd5\u8def\u5f84\u603b\u6570\u53ea\u4e0e\u5176\u4ed6\u5b50\u6811\u6bcf\u4e00\u5c42\u7684\u603b\u70b9\u6570\u6709\u5173\u3002\n- \u7ecf\u8fc7\u67d0\u4e2a\u70b9\u7684\u6240\u6709\u5408\u6cd5\u8def\u5f84\u5747\u7ecf\u8fc7\u8be5\u70b9\u7684\u7236\u4eb2\u7ed3\u70b9\u3002\n\n\u56e0\u6b64\u6211\u4eec\u91c7\u7528\u8fd9\u6837\u7684\u7b56\u7565\uff1a\u70b9\u5206\u6cbb\u8fc7\u7a0b\u4e2d\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e4b\u524d\u626b\u8fc7\u7684\u5b50\u6811\u4e2d\u6bcf\u4e00\u5c42\u7684\u7ed3\u70b9\u603b\u6570\uff0cdfs \u5230\u67d0\u4e2a\u70b9\u4f5c\u4e3a\u8def\u5f84\u4e00\u7aef\u70b9\u65f6\u67e5\u8be2\u533a\u95f4\u548c\u3002\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\u90fd\u8981\u7d2f\u52a0\u5230\u5176\u7236\u4eb2\u7ed3\u70b9\u4e0a\uff0c\u626b\u63cf\u5b8c\u5206\u6cbb\u91cd\u5fc3\u7684\u4e00\u68f5\u5b50\u6811\u540e\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u66f4\u65b0\u5bf9\u5e94\u6df1\u5ea6\u7684\u603b\u7ed3\u70b9\u6570\u3002\u8fd9\u6837\u4f1a\u6f0f\u6389\u4e00\u4e9b\u7ed3\u70b9\u4e0e\u5176\u4ed6\u66f4\u9760\u540e\u626b\u63cf\u5230\u7684\u5b50\u6811\u4e2d\u7684\u7ed3\u70b9\u6784\u6210\u7684\u8def\u5f84\u7684\u8d21\u732e\uff0c\u56e0\u6b64\u626b\u63cf\u5b8c\u5168\u90e8\u5b50\u6811\u4e4b\u540e\u6211\u4eec\u5012\u8fc7\u6765\u91cd\u65b0\u626b\u4e00\u904d\u3002\u6ce8\u610f\u8fd9\u4e00\u6b21\u626b\u63cf\u5c31\u4e0d\u8981\u66f4\u65b0\u5206\u6cbb\u91cd\u5fc3\u7684\u7b54\u6848\u4e86\u3002\n\n\u4e00\u4e2a\u5c0f\u4f18\u5316\uff1a\u6bcf\u6b21\u9012\u5f52\u626b\u63cf\u5b8c\u5168\u90e8\u5b50\u6811\u540e\u90fd\u9700\u8981\u6e05\u7a7a\u6811\u72b6\u6570\u7ec4\uff0c\u6bd4\u8f83\u8d39\u65f6\u95f4\u3002\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u53eb\u505a\u201c\u65f6\u95f4\u6233\u201d\u7684 trick\uff0c\u5373\u8bb0\u5f55\u6811\u72b6\u6570\u7ec4\u4e0a\u6bcf\u4e2a\u4f4d\u7f6e\u6700\u540e\u4e00\u6b21\u4fee\u6539\u7684\u65f6\u523b\uff0c\u67e5\u8be2\u65f6\u628a\u4fee\u6539\u65f6\u523b\u6bd4\u5f53\u524d\u65f6\u523b\u65e9\u7684\u4f4d\u7f6e\u90fd\u5f53 0 \u6765\u5904\u7406\u3002\n\n\u5f53\u7136\u4e86\u8fd9\u505a\u6cd5\u8981\u5e26\u4e24\u679a $\\log$\uff0c\u6ca1\u6709\u4e0a\u9762\u7684\u5b98\u65b9\u9898\u89e3\u4f18\u79c0\u3002\u4f46\u662f\u4e2a\u4eba\u611f\u89c9\u8fd9\u79cd\u505a\u6cd5\u601d\u7ef4\u96be\u5ea6\u548c\u4ee3\u7801\u96be\u5ea6\u90fd\u6bd4\u8f83\u5c0f\uff0c\u800c\u4e14\u8dd1\u5f97\u5e76\u4e0d\u6162\uff0c\u56e0\u4e3a\u63d0\u4ea4\u4eba\u6570\u73b0\u5728\u8fd8\u6bd4\u8f83\u5c11\u7684\u7f18\u6545\u6682\u5c45\u6700\u4f18\u89e3 rank1\u3002\n\n\u4ee3\u7801\uff1a\n\n```c++\n#include<cstdio>\nconst int N=1000086;\nint n,l,r,tot,md,ws,nms,tp,h[N],st[N],sze[N],dc[N];\nlong long cnt[N],ans[N];\nbool vis[N];\nstruct edge{int v,nxt;}e[N<<1];\nstruct BIT{\n\tint lt[N],tme;long long c[N];\n\tint lowbit(int x){return x&(-x);}\n\tbool updtme(){tme++;return true;}//\u66f4\u65b0\u65f6\u95f4\u6233\n\t#define gn(x) (c[x]*(lt[x]==tme))//\u4fee\u6539\u65e9\u7684\u5f530\u5904\u7406\n\tbool updata(int pos,int num){while(pos<=r)c[pos]=gn(pos)+1ll*num,lt[pos]=tme,pos+=lowbit(pos);return true;}\n\tlong long query(int pos){int ret=0;while(pos>0)ret+=gn(pos),pos-=lowbit(pos);return ret;}\n\tlong long getsum(int l,int r){return query(r)-query(l-1);}\n}t;\nint Max(int a,int b){return a>b?a:b;}\nint Min(int a,int b){return a<b?a:b;}\nint read(){\n\tchar ch=getchar();int nn=0,ssss=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')ssss*=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){nn=nn*10+(ch-'0');ch=getchar();}\n\treturn nn*ssss;\n}\nbool add(int u,int v){e[++tot].v=v;e[tot].nxt=h[u];h[u]=tot;return true;}\nint getws(int np,int lst,int nsze){\n\tsze[np]=1;int ms=1;\n\tfor(int i=h[np];i;i=e[i].nxt){\n\t\tif(vis[e[i].v]||e[i].v==lst)continue;\n\t\tsze[np]+=getws(e[i].v,np,nsze);\n\t\tms=Max(ms,sze[e[i].v]);\n\t}\n\tms=Max(ms,nsze-sze[np]);\n\tif(ms<nms)nms=ms,ws=np;\n\treturn sze[np];\n}\nbool dfs(int np,int lst,int dep){\n\tif(dep>r+1)return false;dc[dep]++;md=Max(md,dep);\n\tcnt[np]=t.getsum(Max(l-dep+2,1),r-dep+2);\n\tfor(int i=h[np];i;i=e[i].nxt){\n\t\tif(e[i].v==lst||vis[e[i].v])continue;\n\t\tcnt[e[i].v]=0;\n\t\tdfs(e[i].v,np,dep+1);\n\t\tcnt[np]+=cnt[e[i].v];cnt[e[i].v]=0;\n\t}\n\tans[np]+=cnt[np];\n\treturn true;\n}\nbool solve(int np,int lst,int nsze){\n\tnms=nsze;ws=np;getws(np,lst,nsze);\n\tt.updtme();t.updata(1,1);tp=0;vis[ws]=true;\n\tfor(int i=h[ws];i;i=e[i].nxt){\n\t\tif(e[i].v==lst||vis[e[i].v])continue;\n\t\tmd=2;cnt[e[i].v]=0;dfs(e[i].v,ws,2);\n\t\tfor(int j=1;j<=md;j++)t.updata(j,dc[j]),dc[j]=0;\n\t\tst[++tp]=e[i].v;ans[ws]+=cnt[e[i].v];//\u6ce8\u610f\u66f4\u65b0\u5206\u6cbb\u91cd\u5fc3\u7684\u8d21\u732e\n\t}\n\tt.updtme();\n\tfor(int i=tp;i;i--){//\u5012\u8fc7\u6765\u518d\u626b\u4e00\u904d\n\t\tint v=st[i];\n\t\tif(v==lst||vis[v])continue;\n\t\tmd=2;cnt[v]=0;dfs(v,ws,2);\n\t\tfor(int j=1;j<=md;j++)t.updata(j,dc[j]),dc[j]=0;\n\t\tcnt[v]=0;\n\t}\n\tint nw=ws;\n\tfor(int i=h[nw];i;i=e[i].nxt)if(!vis[e[i].v])solve(e[i].v,nw,sze[e[i].v]);\n\treturn true;\n}\nint main(){\n\tn=read();l=read();r=read();\n\tfor(int i=2;i<=n;i++){\n\t\tint u=read();\n\t\tadd(u,i);add(i,u);\n\t}\n\tsolve(1,0,n);\n\tfor(int i=1;i<=n;i++)printf(\"%lld\\n\",ans[i]);\n}\n```\n\n\u8682\u8702\u7565\u4e11\u6c42\u539f\u8c05\uff0c\u5982\u679c\u53d1\u73b0\u6709\u9505\u6c42\u6307\u51fa\u3002",
        "postTime": 1628603057,
        "uid": 26551,
        "name": "LFCode",
        "ccfLevel": 0,
        "title": "P7782\uff1a\u70b9\u5206\u6cbb + \u6811\u72b6\u6570\u7ec4\u7684\u4e24\u679a log \u505a\u6cd5"
    },
    {
        "content": "\u5047\u5b9a\u6811\u4ee5 $1$ \u4e3a\u6839\uff0c\u8003\u8651\u5c06 $u$ \u7684\u7b54\u6848\u5206\u4e3a\u4e24\u7c7b\uff1a\n\n## I \u4e24\u7aef\u70b9 LCA \u662f $u$ \u7684\u8def\u5f84\n\n\u957f\u94fe\u5256\u5206\u4f18\u5316 DP\uff0c\u6bcf\u4e00\u6b21\u66b4\u529b\u5408\u5e76\u77ed\u94fe\u7684\u65f6\u5019\u5230\u957f\u94fe\u91cc\u9762\u7edf\u8ba1\u4e00\u4e0b\u7b54\u6848\u3002\n\n\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u957f\u94fe\uff0c\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002\n\n## II \u4e24\u7aef\u70b9 LCA \u4e0d\u662f $u$ \u7684\u8def\u5f84\n\n\u5c06\u7b54\u6848\u8bb0\u4e3a $b_u$\uff0c\u8003\u8651 $b_u$ \u4e0e $\\sum_{(u,v)\\in E}b_v$ \u76f8\u5dee\u591a\u5c11\u3002\n\n\u76f8\u5dee\u7684\u6709\u4e24\u90e8\u5206\uff1a\n\n1. \u8fc7\u4e00\u4e2a\u5b69\u5b50\uff0c\u5e76\u4e14 LCA \u662f $u$ \u7684\u8def\u5f84\u3002\u5982\u679c\u4e00\u7aef\u662f $u$\uff0c\u5219\u9700\u8981\u51cf 1 \u6b21\uff1b\u5426\u5219\u9700\u8981\u51cf 2 \u6b21\u3002\n2. \u4ece $u$ \u5f00\u59cb\u5411\u4e0a\u8d70\u7684\u8def\u5f84\uff0c\u9700\u8981\u52a0\u4e0a\u3002\n\n\u5c06 2 \u770b\u4f5c\u662f\u6240\u6709\u4ece $u$ \u5f00\u59cb\u7684\u8def\u5f84\u51cf\u53bb\u4ece $u$ \u5f00\u59cb\u5411\u4e0b\u7684\u8def\u5f84\u3002\n\n\u5c06 1 \u548c 2 \u52a0\u8d77\u6765\uff0c$b_u$ \u5c31\u662f \u6240\u6709\u4ece $u$ \u5f00\u59cb\u7684\u8def\u5f84\u6570\u91cf \u51cf\u53bb \u6240\u6709 LCA \u662f $u$ \u7684\u8def\u5f84\u6570\u91cf\u7684 2 \u500d \u52a0\u4e0a $\\sum_{(u,v)\\in E}b_v$\u3002\n\n\u6240\u6709\u4ece $u$ \u5f00\u59cb\u7684\u8def\u5f84\u6570\u91cf\u4f7f\u7528\u70b9\u5206\u6cbb\u6c42\u51fa\uff0c\u5728\u5408\u5e76\u5b50\u6811\u7684\u65f6\u5019\u6309\u7167\u5b50\u6811\u6811\u9ad8\u6392\u5e8f\u4e4b\u540e\u66b4\u529b\u5408\u5e76\u524d\u7f00\u548c\uff0c\u5373\u53ef\u505a\u5230\u603b\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u597d\u50cf\u6709\u4e2a\u4e24\u6b21\u70b9\u5206\u7136\u540e\u4e0d\u7528\u505a dp \u7684\u65b9\u6cd5\uff0c\u6bd4 std \u4e00\u6b21\u70b9\u5206\u6162\u4e00\u4e9b\u4f46\u662f\u597d\u5199\u5f88\u591a\uff0c\u8be6\u60c5\u8bf7\u54a8\u8be2\t\u58a8\u67d3\u7a7a \u795e\u4ed9\uff08\u96fe\uff09\u3002",
        "postTime": 1619016990,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "AC6 Round C sol"
    },
    {
        "content": "\u7ed9\u51fa\u4e00\u79cd\u7b80\u5355\u4e00\u70b9\u7684 $\\mathcal{O}(n\\log n)$ \u505a\u6cd5\u3002\n\n\u5148\u62cd\u4e0a\u53bb\u4e00\u4e2a\u70b9\u5206\u6cbb\u3002\u5148\u5f00\u6876\u8bb0\u5f55\u5b50\u6811\u5185\u6240\u6709\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u518d\u904d\u5386\u6bcf\u4e2a\u8282\u70b9\u6c42\u8d21\u732e\uff0c\u7528\u6811\u4e0a\u5dee\u5206\u6253\u4e0a\u6807\u8bb0\u518d\u7edf\u8ba1\uff0c\u7279\u5224\u6839\u8282\u70b9\u4e00\u6761\u8def\u5f84\u7b97\u4e24\u6b21\u7684\u60c5\u51b5\u3002\n\n\u53d1\u73b0\u95ee\u9898\u5728\u4e8e\u76f4\u63a5\u5f00\u6876\u8ba1\u7b97\u4f1a\u7b97\u4e0a\u5b50\u6811\u5185\u7684\u8d21\u732e\uff0c\u800c\u5728\u904d\u5386\u6bcf\u4e2a\u5b50\u6811\u524d\u90fd\u51cf\u53bb\u8fd9\u4e2a\u5b50\u6811\u7684\u65b9\u6848\u662f\u8981\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u7684\u3002\u8003\u8651\u5728\u7b2c\u4e00\u904d\u6c42\u5b8c\u540e\uff0c\u518d\u5728\u6bcf\u4e2a\u5b50\u6811\u5185\u90fd\u505a\u4e00\u904d\uff0c\u51cf\u53bb\u591a\u51fa\u6765\u7684\u8d21\u732e\u3002\u7531\u4e8e\u524d\u7f00\u548c\u6240\u9700\u8981\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(\\text{\u5b50\u6811\u5927\u5c0f})$ \u7684\uff0c\u6240\u4ee5\u4e00\u6b21\u8ba1\u7b97\u662f\u7ebf\u6027\u7684\u3002\n\n\u5199\u7684\u6bd4\u8f83\u4e11\uff0c\u8dd1\u5f97\u6bd4\u8f83\u6162\u3002\n\n```cpp\n/* name: P7782\n * author: 5ab\n * created at: 22-09-29\n */\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\ntypedef long long ll;\nconst int max_n = 1000000;\n\nint hd[max_n], des[max_n<<1], nxt[max_n<<1], e_cnt = 0, l, r;\nll ans[max_n], df[max_n], cpf[max_n+1];\nint siz[max_n], cnt[max_n+1], cntl;\nbool vis[max_n];\n\nvoid add(int s, int t)\n{\n\tdes[e_cnt] = t;\n\tnxt[e_cnt] = hd[s];\n\thd[s] = e_cnt++;\n}\n\nvoid dfs1(int id, int fa)\n{\n\tsiz[id] = 1;\n\tfor (int p = hd[id], dst; p != -1; p = nxt[p])\n\t{\n\t\tdst = des[p];\n\t\tif (dst != fa && !vis[dst])\n\t\t{\n\t\t\tdfs1(dst, id);\n\t\t\tsiz[id] += siz[dst];\n\t\t}\n\t}\n}\n\nint mn, mnp;\n\ninline void chmax(int& a, int b) { if (a < b) a = b; }\nvoid dfs2(int id, int fa, int tps)\n{\n\tint tmps = tps;\n\tfor (int p = hd[id], dst; p != -1; p = nxt[p])\n\t{\n\t\tdst = des[p];\n\t\tif (dst != fa && !vis[dst])\n\t\t{\n\t\t\tchmax(tmps, siz[dst]);\n\t\t\tdfs2(dst, id, tps + siz[id] - siz[dst]);\n\t\t}\n\t}\n\tif (tmps < mn)\n\t{\n\t\tmn = tmps;\n\t\tmnp = id;\n\t}\n}\n\nvoid dfs3(int id, int fa, int dis)\n{\n\tcnt[dis++]++;\n\tfor (int p = hd[id], dst; p != -1; p = nxt[p])\n\t{\n\t\tdst = des[p];\n\t\tif (dst != fa && !vis[dst])\n\t\t\tdfs3(dst, id, dis);\n\t}\n}\n\ninline int my_min(int a, int b) { return (a < b)? a:b; }\n\nvoid dfs4(int id, int fa, int flg, int dis)\n{\n\tdf[id] = 0;\n\tfor (int p = hd[id], dst; p != -1; p = nxt[p])\n\t{\n\t\tdst = des[p];\n\t\tif (dst != fa && !vis[dst])\n\t\t{\n\t\t\tdfs4(dst, id, flg, dis + 1);\n\t\t\tdf[id] += df[dst];\n\t\t}\n\t}\n\tif (dis <= l - 1)\n\t\tdf[id] -= cpf[my_min(l - 1 - dis, cntl)];\n\tif (dis <= r)\n\t\tdf[id] += cpf[my_min(r - dis, cntl)];\n\tans[id] += df[id] * flg;\n}\n\nvoid solve(int id)\n{\n\tdfs1(id, -1);\n\tmn = siz[id] + 1, mnp = -1;\n\tdfs2(id, -1, 0);\n\tid = mnp;\n\t\n\tdfs1(id, -1);\n\t\n\tdfs3(id, -1, 0);\n\t\n\tcntl = siz[id], cpf[0] = cnt[0];\n\tfor (int i = 0; i < cntl; i++)\n\t\tcpf[i+1] = cpf[i] + cnt[i+1];\n\t\n\tdf[id] = cpf[my_min(r, cntl)] - cpf[my_min(l-1, cntl)];\n\tfor (int p = hd[id], dst; p != -1; p = nxt[p])\n\t{\n\t\tdst = des[p];\n\t\tif (!vis[dst])\n\t\t{\n\t\t\tdfs4(dst, id, 1, 1);\n\t\t\tdf[id] += df[dst];\n\t\t}\n\t}\n\tfill(cnt, cnt + cntl + 1, 0);\n\t\n\tfor (int p = hd[id], dst; p != -1; p = nxt[p])\n\t{\n\t\tdst = des[p];\n\t\tif (!vis[dst])\n\t\t{\n\t\t\tdfs3(dst, id, 1);\n\t\t\tcntl = siz[dst], cpf[0] = cnt[0];\n\t\t\tfor (int i = 0; i < cntl; i++)\n\t\t\t\tcpf[i+1] = cpf[i] + cnt[i+1];\n\t\t\tdfs4(dst, id, -1, 1);\n\t\t\tdf[id] -= df[dst];\n\t\t\tfill(cnt, cnt + cntl + 1, 0);\n\t\t}\n\t}\n\t\n\tans[id] += df[id] / 2;\n\t\n\tvis[id] = true;\n\tfor (int p = hd[id], dst; p != -1; p = nxt[p])\n\t{\n\t\tdst = des[p];\n\t\tif (!vis[dst])\n\t\t\tsolve(dst);\n\t}\n}\n\nsigned main()\n{\n\tios_base::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\t\n\tint n;\n\t\n\tcin >> n >> l >> r;\n\tfill(hd, hd + n, -1);\n\t\n\tfor (int i = 1, x; i < n; i++)\n\t{\n\t\tcin >> x; x--;\n\t\tadd(x, i), add(i, x);\n\t}\n\t\n\tsolve(0);\n\tfor (int i = 0; i < n; i++)\n\t\tcout << ans[i] << \"\\n\";\n\t\n\treturn 0;\n}\n// started coding at: 18:08\n// finished debugging at: 19:45\n```",
        "postTime": 1664453203,
        "uid": 119491,
        "name": "5ab_juruo",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P7782 \u300cMCOI-Zero / AC6-M03\u300d Sipli Field"
    }
]