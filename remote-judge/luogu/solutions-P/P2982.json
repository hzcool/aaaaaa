[
    {
        "content": "\u7ebf\u6bb5\u6811  dfs\u5e8f\n\n\u6570\u636e\u7ed3\u6784\u7684\u5e94\u7528\n\n\n\u201c\u6570\u636e\u7ed3\u6784 \u662f\u5148\u6709\u9700\u6c42 \u518d\u6709\u5e94\u7528\u201d by mzx dalao\n\n\u90a3\u4e48\u6309\u7167\u8fd9\u4e2a\u601d\u8def\n\n\u5148\u770b\u770b\u9488\u5bf9\u8fd9\u9053\u9898 \u6709\u4ec0\u4e48\u9700\u6c42\n\n\u518d\u8003\u8651\u7528\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u53bb\u89e3\u51b3\n\n\u4ee5\u53ca\u600e\u4e48\u7528\u8be5\u6570\u636e\u7ed3\u6784\n\n\n\u8fd9\u662f\u4e00\u4e2a\u6811\u4e0a\u7684\u9898\n\n\u67d0\u4e2a\u725b\u8fdb\u4e86\u7267\u573a\n\n\u53ea\u4f1a\u5f71\u54cd\u5230\u4ed6\u5b50\u6811\u7684\u7b54\u6848\n\n\u56e0\u4e3a\u53ea\u6709\u4ed6\u7684 \u5b50\u6811 \u56de\u7267\u573a\u65f6\n\n\u624d\u8981\u7ecf\u8fc7\u4ed6 \u5f97slowing down\u5bf9\u5427\n\n\n\u8fd9\u65f6 \u8981\u5bf9\u4ed6\u7684 \u5b50\u6811\u7684\u7b54\u6848\u5168\u90e8 \u533a\u95f4+1\n\n\u8fd9\u662f \u5bf9dfs\u5e8f\u7684\u9700\u6c42\n\n\u9700\u8981 dfs\u5e8f \u5c06\u6811\u8f6c\u6362\u6210\u533a\u95f4\n\n\n\u533a\u95f4\u4fee\u6539 \u5355\u70b9\u67e5\u8be2 \u53c8\u662f\u5bf9 \u7ebf\u6bb5\u6811 \u7684\u9700\u6c42\n\n\u9700\u8981 \u7ebf\u6bb5\u6811 \u7684\u9ad8\u6548\u7ef4\u62a4\n\n\u5982\u6709dalao\u6709\u66f4\u9ad8\u6548\u7684\u65b9\u6cd5\u8bf7[\u535a\u5ba2](http://www.cnblogs.com/1227xq/p/6847229.html)\u7559\u8a00\n\n\u6211\u76ee\u524d\u53ea\u5b66\u4e86\u7ebf\u6bb5\u6811\u8fd9\u4e2a\u5bb6\u4f19\u5566\n\n\n\u5177\u4f53\u5e94\u7528\n\n\ndfs\u5e8f\n```cpp\nvoid dfs(int u){\n    dfn[u]=++cnt;//dfn[]\u4e3a\u6811\u8f6c\u6362\u4e3adfs\u5e8f\u4e2d\u7684\u4e0b\u6807\n    size[u]=1;//u\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\n    int v;\n    for(int i=head[u];i;i=next[i]){\n        v=to[i];\n        if(dfn[v])continue;\n        dfs(v);\n        size[u]+=size[v];\n    }\n}\n```\n\u8fd9\u6837\u4e00\u68f5\u5b50\u6811 \u5c31\u5bf9\u5e94\u4e86 dfn[]\u6570\u7ec4 \u7684\u4e00\u6bb5\u533a\u95f4\n\u4ee5\u70b9k\u4e3a\u6839\u7684 \u533a\u95f4\n\n\u5de6\u7aef\u70b9 \u662f dfn[k],\n\n\u53f3\u7aef\u70b9 \u662f dfn[k] + size [k] - 1 \u3002\n\n\n\u7ebf\u6bb5\u6811\n\n\n         \n         \n \n```cpp\n//main() \u51fd\u6570\u4e2d\u7684\u4ee3\u7801\nfor(int k,i=1;i<=n;i++){\n      k=read();\n      //\u5355\u70b9\u67e5\u8be2\n      printf(\"%d\\n\",query(dfn[k],root));\n      //\u533a\u95f4\u4fee\u6539\n      update(dfn[k],dfn[k]+size[k]-1,root);\n}\n//\u5176\u4ed6\u51fd\u6570\n void pushdown(int rt){//\u61d2\u6807\u8bb0\u4e0b\u4f20\n    if(!add[rt])return;\n    add[rt<<1]+=add[rt];\n    add[rt<<1|1]+=add[rt];\n    add[rt]=0;\n}\nvoid update(int x,int y,int l,int r,int rt){\n    if(x<=l&&r<=y){\n        add[rt]++;//\u533a\u95f4\u4fee\u6539\u65f6 \u9488\u5bf9\u672c\u9898 \u61d2\u6807\u8bb0+1 \n        return;\n    }\n    pushdown(rt);\n    int mid=(l+r)>>1;\n    if(x<=mid)update(x,y,lson);\n    if(mid<y)update(x,y,rson);\n}\nint query(int k,int l,int r,int rt){\n    //\u5355\u70b9\u67e5\u8be2 \u6240\u4ee5\u7ebf\u6bb5\u6811\u53ea\u7528 \u61d2\u6807\u8bb0add[]\u6570\u7ec4 \u5373\u53ef\n    if(l==r)return add[rt];\n    pushdown(rt);\n    int mid=(l+r)>>1;\n    if(k<=mid)return query(k,lson);\n    return query(k,rson);\n}\n```\n\u8fd9\u6837\u5c31 \u6ecb\u74f7 \u4e86\u672c\u9898\u7684\u4fee\u6539\u4e0e\u67e5\u8be2\u64cd\u4f5c\n\u5b8c\n\n\u603b\u4ee3\u7801\n\n         \n         \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 100015\n#define root 1,n,1\n#define lson l,mid,rt<<1\n#define rson mid+1,r,rt<<1|1\nint n,cnt;\nint head[N],next[N<<1],to[N<<1];\nint dfn[N],size[N];\nint add[N<<2];\nint read(){\n    int ans=0;\n    char ch=getchar();\n    for(;!isdigit(ch);ch=getchar());\n    for(;isdigit(ch);ch=getchar())\n        ans=(ans<<3)+(ans<<1)+ch-'0';\n    return ans;\n}\nvoid ad(int from,int too){\n    next[++cnt]=head[from];\n    to[cnt]=too;\n    head[from]=cnt;\n}\nvoid dfs(int u){\n    dfn[u]=++cnt;//dfn[]\u4e3a\u6811\u8f6c\u6362\u4e3adfs\u5e8f\u4e2d\u7684\u4e0b\u6807\n    size[u]=1;//u\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\n    int v;\n    for(int i=head[u];i;i=next[i]){\n        v=to[i];\n        if(dfn[v])continue;\n        dfs(v);\n        size[u]+=size[v];\n    }\n}\nvoid pushdown(int rt){//\u61d2\u6807\u8bb0\u4e0b\u4f20\n    if(!add[rt])return;\n    add[rt<<1]+=add[rt];\n    add[rt<<1|1]+=add[rt];\n    add[rt]=0;\n}\nvoid update(int x,int y,int l,int r,int rt){\n    if(x<=l&&r<=y){\n        add[rt]++;//\u533a\u95f4\u4fee\u6539\u65f6 \u9488\u5bf9\u672c\u9898 \u61d2\u6807\u8bb0+1 \n        return;\n    }\n    pushdown(rt);\n    int mid=(l+r)>>1;\n    if(x<=mid)update(x,y,lson);\n    if(mid<y)update(x,y,rson);\n}\nint query(int k,int l,int r,int rt){\n    //\u5355\u70b9\u67e5\u8be2 \u6240\u4ee5\u7ebf\u6bb5\u6811\u53ea\u7528 \u61d2\u6807\u8bb0add[]\u6570\u7ec4 \u5373\u53ef\n    if(l==r)return add[rt];\n    pushdown(rt);\n    int mid=(l+r)>>1;\n    if(k<=mid)return query(k,lson);\n    return query(k,rson);\n}\nint main(){\n    n=read();\n    for(int x,y,i=1;i<n;i++){\n        x=read(),y=read();\n        ad(x,y);\n        ad(y,x);\n    }\n    cnt=0;\n    dfs(1);\n    for(int k,i=1;i<=n;i++){\n        k=read();\n        //\u5355\u70b9\u67e5\u8be2\n        printf(\"%d\\n\",query(dfn[k],root));\n        //\u533a\u95f4\u4fee\u6539\n        update(dfn[k],dfn[k]+size[k]-1,root);\n    }\n    return 0;\n}\n```",
        "postTime": 1494595369,
        "uid": 18146,
        "name": "insprition",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2982 \u3010[USACO10FEB]\u6162\u4e0b\u6765Slowing down\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7684\u524d\u7f6e\u77e5\u8bc6\u662f\u524d\u5411\u661f\u548c\u6811\u72b6\u6570\u7ec4\u6216\u8005\u7ebf\u6bb5\u6811\uff0c\u8fd9\u91cc\u56e0\u4e3a\u662f\u5355\u70b9\u4fee\u6539\u533a\u95f4\u67e5\u8be2\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u6811\u72b6\u6570\u7ec4\u65b9\u4fbf\u70b9\u3002\n\u9898\u76ee\u5927\u610f\u662f\u4ece\u6839\u8282\u70b9\u5f80\u4e0b\u641c\uff0c\u53ea\u8981\u641c\u5230\u5b83\u7684\u7956\u5148\u91cc\u9762\u6709\u6bd4\u4ed6\u5c0f\u7684\u8282\u70b9\u90a3\u4e48\u4ed6\u5c31\u8981\u7b49\u4e00\u6b21\uff0c\u8ba1\u7b97\u603b\u5171\u7b49\u51e0\u6b21\u3002\n\n\u6838\u5fc3\u4ee3\u7801\u5c31\u8fd9\u4e48\u4e9b\n```cpp\nvoid dfs(int u,int fa)\n{\n\tint k=a[u];//\u8fd9\u4e2a\u8282\u70b9\u7684\u725b\u7684\u7f16\u53f7\n\tans[k]=sum(k-1);//\u67e5\u8be2\u8fd9\u5934\u725b\u8981\u7b49\u7684\u725b\u7684\u603b\u6570\n\tadd(k,1);//\u5355\u70b9\u4fee\u6539\n\tfor(int i=0;i<q[u].size();i++)\n\t{\n\t\tint t=q[u][i];\n\t\tif(t==fa)//\u9898\u76ee\u662f\u53cc\u5411\u8fb9\u6240\u4ee5\u4e0d\u80fd\u641c\u5230\u7236\u4eb2\u8282\u70b9\n\t\tcontinue;\n\t\tdfs(t,u);\n\t}\n\tadd(k,-1);//\u56de\u6eaf\n}\n```\n//\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nvector<int>q[100001];\nint a[100001],num[100001],ans[100001];\nint lowbit(int x)\n{\n\treturn -x & x;\n}\nvoid add(int x,int k)\n{\n\twhile(x<=n)\n\t{\n\t\tnum[x]+=k;\n\t\tx+=lowbit(x);\n\t}\n}\nint sum(int x)\n{\n\tint s=0;\n\twhile(x>0)\n\t{\n\t\ts+=num[x];\n\t\tx-=lowbit(x);\t\t\n\t}\n\treturn s;\n}\nvoid dfs(int u,int fa)\n{\n\tint k=a[u];\n\tans[k]=sum(k-1);\n\tadd(k,1);\n\tfor(int i=0;i<q[u].size();i++)\n\t{\n\t\tint t=q[u][i];\n\t\tif(t==fa)\n\t\tcontinue;\n\t\tdfs(t,u);\n\t}\n\tadd(k,-1);\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tq[u].push_back(v);\n\t\tq[v].push_back(u);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint t;\n\t\tscanf(\"%d\",&t);\n\t\ta[t]=i;\n\t}\n\tdfs(1,1);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tprintf(\"%d\\n\",ans[i]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1572957553,
        "uid": 155626,
        "name": "\u8001\u54b8\u9c7c\u4e86",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2982 \u3010[USACO10FEB]\u6162\u4e0b\u6765Slowing down\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u4e00\u5171\u6709 $N$ \u5934\u5976\u725b\uff0c$N$ \u4e2a\u7267\u573a\uff0c$N-1$ \u6761\u9053\u8def\u5c06\u7267\u573a\u8fde\u63a5\u6210\u6811\u72b6\uff0c\u6bcf\u5934\u5976\u725b\u90fd\u6709\u4e00\u4e2a\u79c1\u4eba\u7267\u573a\uff0c\u7b2c $i$ \u5934\u5976\u725b\u7684\u79c1\u4eba\u7267\u573a\u8bb0\u4f5c $P_i$ \u3002\n\n\u4e00\u5f00\u59cb\u6240\u6709\u5976\u725b\u90fd\u805a\u96c6\u5728 $1$ \u53f7\u8282\u70b9\uff0c\u7136\u540e\u4ece $1-N$ \u6bcf\u6b21\u7b2c $i$ \u5934\u5976\u725b\u53bb\u5f80\u5176\u79c1\u4eba\u7267\u573a $P_i$ \uff0c\u95ee\u5bf9\u4e8e\u6bcf\u4e00\u5934\u5976\u725b\u5b83\u8fd4\u56de\u7684\u8def\u9014\u4e0a\u7ecf\u8fc7\u591a\u5c11\u4e2a\u5976\u725b\u5df2\u8fd4\u56de\u7684\u7267\u573a\u3002\n\n### \u89e3\u9898\u601d\u8def\n\n\u5957\u8def\u9898\uff0c\u8003\u8651\u5982\u4f55\u5c06\u6574\u68f5\u6811\u8f6c\u6362\u6210\u4e00\u4e2a\u5e8f\u5217\u7136\u540e\u4e0a\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u3002\n\n\u663e\u7136\u53ef\u4ee5\u7528 dfs \u5e8f\uff0c\u4f46\u63a5\u7740\u53c8\u4e00\u4e2a\u95ee\u9898\u5982\u4f55\u7ef4\u62a4\u8fd9\u4e2a\u5e8f\u5217\u3002\n\ndfs \u5e8f\u6709\u4e00\u4e2a\u6027\u8d28\uff1a\u5f53\u4e24\u4e2a\u8282\u70b9\u7684 LCA \u4e3a\u5176\u4e2d\u4e00\u4e2a\u7684\u65f6\u5019\uff0c\u5176\u5728 dfs \u5e8f\u4e0a ```in``` \u65f6\u523b\u533a\u95f4\u6216\u8005 ```out``` \u65f6\u523b\u533a\u95f4\u5373\u4e3a\u4e24\u4e2a\u8282\u70b9\u7684\u552f\u4e00\u8def\u5f84\u3002\n\n\u8fd9\u91cc ```in``` \u8868\u793a\u8282\u70b9\u8fdb\u5165 dfs \u7684\u65f6\u523b\uff0c```out``` \u8868\u793a\u79bb\u5f00 dfs \u7684\u65f6\u523b\u3002\n\n\u6240\u4ee5\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u5c31\u5f88\u5bb9\u6613\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e86\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <iostream> \n#include <vector>\nusing namespace std;\n#define MAX_N 100010\nstruct Tree{\n\tvector<int> next;\n}node[MAX_N];\nint n,p[MAX_N],in[MAX_N],out[MAX_N],B[MAX_N],A[MAX_N],t = 0;\nvoid dfs(int u,int fa){\n\tB[++t] = u;\n\tin[u] = t;\n\tfor(int i = 0;i < node[u].next.size();i++){\n\t\tint v = node[u].next[i];\n\t\tif(v != fa)dfs(v,u);\n\t}\n\tB[++t] = u;\n\tout[u] = t;\n}\nstruct SegmentTree{\n\tint lson,rson,sum;\n}tree[MAX_N * 8];\nvoid build(int l,int r,int p){\n\ttree[p].lson = l;\n\ttree[p].rson = r;\n\tif(l == r){\n\t\ttree[p].sum = 0;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(l,mid,p << 1);\n\tbuild(mid + 1,r,p << 1 | 1);\n\ttree[p].sum = 0;\n}\nvoid change(int x,int a,int p){\n\tif(tree[p].lson == tree[p].rson && tree[p].lson == x){\n\t\ttree[p].sum = a;\n\t\treturn;\n\t}\n\tint mid = (tree[p].lson + tree[p].rson) >> 1;\n\tif(x <= mid)change(x,a,p << 1);\n\telse change(x,a,p << 1 | 1);\n\ttree[p].sum = tree[p << 1].sum + tree[p << 1 | 1].sum;\n}\nint query(int L,int R,int p){\n\tif(tree[p].lson == L && tree[p].rson == R)\n\t\treturn tree[p].sum;\n\tint mid = (tree[p].lson + tree[p].rson) >> 1;\n\tif(R <= mid)return query(L,R,p << 1);\n\telse if(L > mid)return query(L,R,p << 1 | 1);\n\telse return query(L,mid,p << 1) + query(mid + 1,R,p << 1 | 1);\n}\nint qnode(int u){\n\treturn query(in[1],in[p[u]],1);\n}\nvoid updnode(int u){\n\tchange(in[p[u]],1,1);\n\tchange(out[p[u]],-1,1);\n\treturn;\n}\nint main(){\n\tcin >> n;\n\tfor(int i = 1;i < n;i++){\n\t\tint u,v;\n\t\tcin >> u >> v;\n\t\tnode[u].next.push_back(v);\n\t\tnode[v].next.push_back(u);\n\t}\n\tdfs(1,-1);\n\tbuild(1,2 * n,1);\n\tfor(int i = 1;i <= n;i++)cin >> p[i];\n\tfor(int i = 1;i <= n;i++){\n\t\tcout << qnode(i) << endl;\n\t\tupdnode(i); \n\t}\n\treturn 0;\n}\n```\n\n\n## \u540e\u8bb0\n\nUpdata 2021.6.13 : \u5b8c\u6210\u9898\u89e3\n",
        "postTime": 1623549874,
        "uid": 355559,
        "name": "FutureThx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2982 \u3010[USACO10FEB]\u6162\u4e0b\u6765Slowing down\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u867d\u7136\u662f\u4e00\u9053\u7ebf\u6bb5\u6811\u6216\u6811\u72b6\u6570\u7ec4\u6a21\u677f\u9898 ~~\uff08\u4e5f\u53ef\u4ee5\u7528\u6811\u5256\uff0c\u4e0d\u8fc7\u6811\u5256\u7801\u91cf\u6709\u70b9\u5927qwq\uff09~~\uff0c\u4f46\u662f\u975e\u5e38\u6709\u4ef7\u503c\uff0c\u9700\u8981\u70b9\u601d\u7ef4\u3002\n\n\u7531\u9898\u76ee\u53ef\u77e5\uff0c\u6bcf\u4e00\u53ea\u5976\u725b\u8d70\u7684\u8def\u7ebf\uff0c\u90fd\u53ea\u5728\u5176\u4e2d\u4e00\u6761\u94fe\u4e0a\uff0c\u518d\u6839\u636e\u9898\u76ee\u8981\u6c42\uff0c\u5bb9\u6613\u53d1\u73b0\u6bcf\u53ea\u5976\u725b\u7684\u7b54\u6848\u5176\u5b9e\u5c31\u662f\u5b83\u6240\u5728\u7684\u5bb6\uff08\u4e5f\u5c31\u662f\u6811\u4e0a\u7684\u8282\u70b9\uff09\u7684\u7956\u5148\u6240\u4f4f\u7684\u5976\u725b\u4e2d\uff0c\u5e8f\u53f7\u6bd4\u5b83\u5c0f\u7684\u5976\u725b\u6570\u91cf\u3002\n\n\u53e3\u80e1\u4e00\u4e2a\u8bc1\u660e\uff1a\u56e0\u4e3a\u6bcf\u4e2a\u5976\u725b\u90fd\u4ece\u6839\u8282\u70b9\u51fa\u53d1\uff0c\u6240\u4ee5\u8bbe\u6811\u4e0a\u8282\u70b9\u7684\u6df1\u5ea6\u4e3a $ dep $ \uff0c\u5976\u725b\u7ecf\u8fc7\u7684\u8282\u70b9\u4e3a $ i $ \uff0c\u5976\u725b\u7684\u5bb6\u4e3a $ n $ \uff0c\u5219\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $ i $ \u6709 $ dep_i \\leqslant dep_n $ \uff0c\u53c8\u56e0\u4e3a\u6811\u4e0a\u4efb\u610f\u4e24\u4e2a\u8282\u70b9\u7684\u8def\u5f84\u552f\u4e00\uff0c\u6240\u4ee5\u6240\u6709\u7684 $ i $ \u4e00\u5b9a\u90fd\u662f $ n $ \u7684\u7956\u5148\u3002\u53c8\u5e8f\u53f7\u5c0f\u7684\u5976\u725b\u5148\u5230\u5bb6\uff0c\u6240\u4ee5\u53ea\u6709\u5e8f\u53f7\u5c0f\u7684\u5976\u725b\u5bf9\u7b54\u6848\u6709\u8d21\u732e\uff0c\u56e0\u6b64\u4e0a\u8ff0\u7ed3\u8bba\u6210\u7acb\uff0c\u8bc1\u6bd5\u3002\n\n\u8003\u8651\u600e\u4e48\u7edf\u8ba1\u7b54\u6848\u3002\u8003\u8651\u66b4\u529b\uff0c\u5148\u6df1\u641c\u627e\u70b9\uff0c\u7136\u540e\u66b4\u529b\u679a\u4e3e\u7956\u5148\uff0c\u7edf\u8ba1\u5976\u725b\u7f16\u53f7\u5c0f\u4e8e\u8be5\u8282\u70b9\u5976\u725b\u7f16\u53f7\u7684\u6570\u91cf\u3002\u7136\u800c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u662f $ O(n^2) $ \u7684\uff0c\u80af\u5b9a\u8fc7\u4e0d\u4e86\u3002\n\n\u8003\u8651\u7528\u6570\u636e\u7ed3\u6784\u4f18\u5316\uff0c\u5176\u5b9e\u6709\u5f88\u591a\u6570\u636e\u7ed3\u6784\u90fd\u53ef\u4ee5\u7528\uff0c\u6bd4\u5982\u6811\u5256\uff0c\u6811\u72b6\u6570\u7ec4\uff0c\u7ebf\u6bb5\u6811\u3002\u8fd9\u91cc\u53ea\u8bf4\u7ebf\u6bb5\u6811\u505a\u6cd5\u3002\u56e0\u4e3a\u53ea\u6709\u4fee\u6539\u548c\u67e5\u8be2\u64cd\u4f5c\uff0c\u6240\u4ee5\u7801\u91cf\u8fd8\u662f\u5f88\u5c11\u7684\uff0c\u4e5f\u5f88\u597d\u7406\u89e3\u3002\n\n\u6211\u4eec\u5b9a\u4e49\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u5b58\u7684\u662f\u5f53\u524d\u72b6\u6001\u4e0b\u5e8f\u53f7\u5728\u533a\u95f4 $ \\left[ l , r \\right ] $ \u4e2d\u7684\u5976\u725b\u7684\u6570\u91cf\uff0c\u7136\u540e\u5728\u5411\u4e0b\u6df1\u641c\u65f6\uff0c\u5c06\u8fd9\u4e2a\u8282\u70b9\u7684\u5976\u725b\u5e8f\u53f7\u6240\u5728\u533a\u95f4\u5728\u7ebf\u6bb5\u6811\u4e0a\u90fd\u52a0\u4e00\uff0c\u5e76\u987a\u4fbf\u7edf\u8ba1\u7b54\u6848\uff0c\u8bbe\u5976\u725b\u7f16\u53f7\u4e3a $ x $ \uff0c\u5f53\u524d\u533a\u95f4\u4e3a $ \\left[ l , r \\right ] $ \uff0c\u533a\u95f4\u4e2d\u70b9\u4e3a $ mid $ \uff0c\u5148\u4fee\u6539\u8fd9\u4e2a\u533a\u95f4\u7684\u503c\uff0c\u663e\u7136\u5f53 $ x \\leqslant mid $ \u65f6\uff0c\u5bf9\u7b54\u6848\u6ca1\u6709\u8d21\u732e\uff0c\u7ee7\u7eed\u4fee\u6539\u5de6\u5b50\u6811\uff1b\u5f53 $ x > mid $ \u65f6\uff0c\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a\u5f53\u524d\u533a\u95f4\u7684\u5de6\u513f\u5b50\u7684\u503c\uff0c\u66f4\u65b0\u7b54\u6848\u540e\u7ee7\u7eed\u4fee\u6539\u53f3\u5b50\u6811\uff0c\u5728\u56de\u6eaf\u65f6\u518d\u5c06\u8fd9\u4e2a\u8282\u70b9\u7684\u5976\u725b\u5e8f\u53f7\u6240\u5728\u533a\u95f4\u5728\u7ebf\u6bb5\u6811\u4e0a\u90fd\u52a0\u4e00\u5373\u53ef\u3002\u7531\u4e8e\u4fee\u6539\u548c\u67e5\u8be2\u90fd\u662f $ O(\\log n) $ \u7684\uff0c\u53c8\u6bcf\u4e2a\u70b9\u4e00\u6b21\u52a0\u4e00\u6b21\u5220\uff08\u67e5\u8be2\u5728\u52a0\u5165\u65f6\u5df2\u987a\u4fbf\u7edf\u8ba1\uff09\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $ O(2 n \\log n) $ \uff0c\u5ffd\u7565\u5e38\u6570\u5c31\u662f $ O(n \\log n) $ \u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nint n,cow[100005],u,v,tre[400005],ret[100005];\nbool vis[100005];\nvector <int> e[100005];\n\nvoid add (int x,int l,int r,int y)\n{\n\t++tre[x];\n\tif (l==r)  return ;\n\tint mid=(l+r)/2;\n\tif (y<=mid)  add(x*2,l,mid,y);\n\telse\n\t{\n\t\tret[y]+=tre[x*2];  //\u987a\u4fbf\u7edf\u8ba1\u7b54\u6848\n\t\tadd(x*2+1,mid+1,r,y);\n\t}\n}\n\nvoid del (int x,int l,int r,int y)\n{\n\t--tre[x];\n\tif (l==r)  return ;\n\tint mid=(l+r)/2;\n\tif (y<=mid)  del(x*2,l,mid,y);\n\telse  del(x*2+1,mid+1,r,y);\n}\n\nvoid dfs (int x)\n{\n\tadd(1,1,n,cow[x]);\n\tvis[x]=1;\n\tfor (int i=0;i<e[x].size();++i)\n\t{\n\t\tint y=e[x][i];\n\t\tif (vis[y])  continue;\n\t\tdfs(y);\n\t}\n\tdel(1,1,n,cow[x]);  //\u56de\u6eaf\u65f6\u5220\u9664\n}\n\nint main ()\n{\n\tscanf (\"%d\",&n);\n\tfor (int i=1;i<n;++i)\n\t{\n\t\tscanf (\"%d%d\",&u,&v);\n\t\te[u].push_back(v);\n\t\te[v].push_back(u);\n\t}\n\tfor (int i=1;i<=n;++i)\n\t{\n\t\tint a;\n\t\tscanf (\"%d\",&a);\n\t\tcow[a]=i;\n\t}\n\tdfs(1);\n\tfor (int i=1;i<=n;++i)\n\t{\n\t\tprintf (\"%d\\n\",ret[i]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1621694521,
        "uid": 386887,
        "name": "HSY666",
        "ccfLevel": 7,
        "title": "P2982 [USACO10FEB]Slowing down G"
    },
    {
        "content": "## \u7531\u6570\u636e\u6807\u7b7e\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u662f\u4e00\u9053\u6811\u72b6\u6570\u7ec4\u7684\u6c34\u9898\n\n\u9898\u610f\u5927\u81f4\u662f\u5bf9\u4e00\u68f5\u6811\u4e0a\u8fdb\u884c\u82e5\u5e72\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u65f6\u5148\u67e5\u8be2\u5f53\u524d\u8282\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u6743\u7684\u548c\uff0c\u7136\u540e\u4f7f\u5f53\u524d\u8282\u70b9\u7684\u6743\u503c+1\n\n\u90a3\u4e48\u74f6\u9888\u5728\u4e8e\u7edf\u8ba1\u8def\u5f84\u4e0a\u7684\u70b9\u6743\u548c\n\n~~\u76f4\u63a5\u719f\u7ec3\u5256\u5206\u5373\u53ef~~\n\n\u4f46\u4f5c\u4e3a\u65b0\u65f6\u4ee3\u7684\u9752\u5e74\uff0c\u6211\u4eec\u8981\u6709\u5f00\u62d3\u7cbe\u795e\uff08\u5927\u96fe\uff09\n\n\u4e8e\u662f\u6211\u4eec\u70b9\u5f00\u6570\u636e\u6807\u7b7e\uff1a\u201c\u6811\u72b6\u6570\u7ec4\u201d\n\n\u5f88\u81ea\u7136\u5730\u53ef\u4ee5\u60f3\u5230\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6761\u4ece\u6839\u51fa\u53d1\u7684\u8def\u5f84\u5efa\u7acb\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u8fdb\u884c\u7edf\u8ba1\uff08\u8bf7\u7c7b\u6bd4AC\u81ea\u52a8\u673a\uff09~~\uff08\u7a81\u7136\u7384\u5b66\uff09~~\n\n~~\uff08\u6211\u7b80\u76f4\u5fd8\u4e86\u6709dfs\u5e8f\u8fd9\u79cd\u597d\u4e1c\u897f\uff0c\u4f46\u6ca1\u6709\u5173\u7cfb\uff09~~\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9x\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4NEXT[]\uff08\u6b64\u5904\u6211\u4f7f\u7528\u4e86vector\u964d\u4f4e\u4e86\u7a7a\u95f4\u590d\u6742\u5ea6\uff09\uff0c\u6307\u5411x\u5b50\u6811\u4e2d\u6240\u6709\u6ee1\u8db3dep[v]=dep[x]+lowit(x)\u7684\u5b50\u8282\u70b9\u3002\u76f4\u63a5\u6c42NEXT\u663e\u7136\u4e0d\u600e\u4e48\u65b9\u4fbf\uff0c\u4e8e\u662f\u6211\u4eec\u53cd\u8fc7\u6765\uff0c\u6bcf\u641c\u5230\u4e00\u4e2a\u8282\u70b9\u65f6\u5c06\u5176\u538b\u5165\u5b83\u7684\u6bcf\u4e00\u4e2a\u524d\u9a71\u7684NEXT\u4e2d\uff1a\n\n```c\nvoid dfsson(re x)\n{\n\tvis[x]=1;\n\tfor(re v,i=h[x];i;i=e[i].next)\n\tif(!vis[v=e[i].to])\n\tdfsson(v);\n\tfor(re i=round(log((double)lowbit(dep[x]))/log(2.0)-1);i>=0;i--)\n\tNEXT[fa[x][i]].push_back(x);\n\tvis[x]=0;\n}\n```\n~~\u6d6e\u70b9\u8bef\u5dee\u662f\u4e2a\u5de8\u5751~~\n\nfather\u6570\u7ec4\u5229\u7528\u500d\u589e\u9884\u5904\u7406\u5373\u53ef\n\n\u5269\u4e0b\u7684\u4e8b\u60c5\u5c31\u5b8c\u5168\u7c7b\u4f3c\u666e\u901a\u7684\u6811\u72b6\u6570\u7ec4\u4e86\n\n\u6ce8\u610f\u5b58\u5728\u591a\u5934\u725b\u5171\u4eab\u79c1\u4eba\u7267\u573a\u7684\u60c5\u51b5\n~~\uff08\u79c1\u4eba\uff1f\uff09~~\n\n\u63d2\u503c\u548c\u67e5\u8be2\u7684\u4ee3\u7801:\n```c\ninline void add(re x)\n{\n\tval[x]++;\n\tfor(re i=0;i<NEXT[x].size();i++)\n\tadd(NEXT[x][i]);\n}\nint query(re x)\n{\n\tif(!x)return 0;\n\tre last=round(log((double)lowbit(dep[x]))/log(2.0));\n\treturn val[x]+query(fa[x][last]);\n}\n```\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n```c\n#include<bits/stdc++.h>\n#define MAXN 1000005\n#define re register int\nusing namespace std;\ntypedef long long ll;\nll read()\n{\n\tll ret=0,f=1;char ch=getchar();\n\twhile('0'>ch||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile('0'<=ch&&ch<='9'){ret=(ret<<3)+(ret<<1)+(ch^48);ch=getchar();}\n\treturn ret*f;\n}\nstruct edge\n{\n\tint to,next;\n}e[MAXN<<1];\nint h[MAXN],fa[MAXN][18];\nint dep[MAXN],pos[MAXN],val[MAXN];//pos\u5b58\u653e\u5976\u725b\u7684\u79c1\u4eba\u7267\u573a\uff0cval\u662f\u8282\u70b9\u7684\u6743\u503c\nint n,m,top;\nbool vis[MAXN];\nvector<int> NEXT[MAXN];\nint lowbit(re x)\n{return x&(-x);}\ninline void ins(re u,re v)\n{\n\te[++top].to=v;\n\te[top].next=h[u];\n\th[u]=top;\n}\nvoid dfsfa(re x)\n{\n\tvis[x]=1;\n\tfor(re i=1;(1<<i)<=dep[x];i++)\n\tfa[x][i]=fa[fa[x][i-1]][i-1];\n\tfor(re v,i=h[x];i;i=e[i].next)\n\tif(!vis[v=e[i].to])\n\t{\n\t\tfa[v][0]=x;\n\t\tdep[v]=dep[x]+1;\n\t\tdfsfa(v);\n\t}\n\tvis[x]=0;\n}\nvoid dfsson(re x)\n{\n\tvis[x]=1;\n\tfor(re v,i=h[x];i;i=e[i].next)\n\tif(!vis[v=e[i].to])\n\tdfsson(v);\n\tfor(re i=round(log((double)lowbit(dep[x]))/log(2.0)-1);i>=0;i--)\n\tNEXT[fa[x][i]].push_back(x);\n\tvis[x]=0;\n}\ninline void add(re x)\n{\n\tval[x]++;\n\tfor(re i=0;i<NEXT[x].size();i++)\n\tadd(NEXT[x][i]);\n}\nint query(re x)\n{\n\tif(!x)return 0;\n\tre last=round(log((double)lowbit(dep[x]))/log(2.0));\n\treturn val[x]+query(fa[x][last]);\n}\nint main()\n{\n\tn=read();\n\tre u,v;\n\tfor(re i=1;i<n;i++)\n\t{\n\t\tu=read();\n\t\tv=read();\n\t\tins(u,v);\n\t\tins(v,u);\n\t}\n\tfor(re i=1;i<=n;i++)\n\tpos[i]=read();\n\tdep[1]=1;\n\tdfsfa(1);\n\tdfsson(1);\n\tfor(re i=1;i<=n;i++)\n\t{\n\t\tprintf(\"%d\\n\",query(pos[i]));\n\t\tadd(pos[i]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1569853335,
        "uid": 51702,
        "name": "Argentum",
        "ccfLevel": 0,
        "title": "\u6781\u5ea6\u7384\u5b66\u9898\u89e3 P2982 \u3010[USACO10FEB]\u6162\u4e0b\u6765Slowing down\u3011"
    },
    {
        "content": "# \u7b80\u76f4\u5c31\u662f\u6811\u5256\u6a21\u677f\u9898\uff01\uff01\uff01\n\u6211\u76f4\u63a5\u628a[P3384 \u3010\u6a21\u677f\u3011\u6811\u94fe\u5256\u5206](https://www.luogu.org/problemnew/show/P3384)\u7684\u4ee3\u7801\u590d\u5236\u8fc7\u6765\uff0c\u53ea\u6539\u4e86\u8f93\u5165\u4e0e\u8f93\u51fa\u5c31A\u4e86\uff08\u5f53\u7136dfs+\u7ebf\u6bb5\u6811\u505a\uff09  \n\u597d\u4e86\uff0c\u6b65\u5165\u6b63\u9898\uff1a  \n\u521d\u59cb\u5316\u4e00\u4e2a\u503c\u90fd\u4e3a0\u7684\u7ebf\u6bb5\u6811\u5b58\u50a8\u6811\u5256\uff0c\u6bcf\u8f93\u5165\u4e00\u4e2a$P_i$\u5c31\u67e5\u8be2$1$\u5230$P_i$\u8def\u5f84\u4e0a\u4e4b\u548c\uff0c\u518d\u5c06$P_i$\u5728\u7ebf\u6bb5\u6811\u4e2d\u7684\u503c\u6539\u4e3a1\uff0c\u4f9b\u540e\u7eed\u67e5\u8be2\u3002  \n\u4e0a\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\n#define N 100005\nusing namespace std;\nint n,R=1,P=1e9+7;//R\u4e3a\u6839\uff0c%P\u9632\u7206\nint fi[N],ne[N<<1],to[N<<1],seg[N],dad[N],son[N],top[N],rev[N],siz[N],dep[N],tot;\n/*\n\u90bb\u63a5\u8868\u5b58\u8fb9\uff0cson\u4e3a\u91cd\u513f\u5b50\uff0ctop\u4e3a\u91cd\u94fe\u9876\uff0cdep\u4e3a\u6df1\u5ea6\uff0c\nsiz\u4e3a\u5b50\u6811\u5927\u5c0f\uff0cseg\u4e3a\u7ebf\u6bb5\u6811\u4e2d\u7f16\u53f7\uff0crev[seg[x]]=x\n*/\nstruct L_TREE{\n    int sum,lzy;//lazy\u6807\u8bb0\uff0c\u4e60\u60ef\u4e86\n}t[N<<2];\ninline void add(int x,int y){ne[++tot]=fi[x];to[tot]=y;fi[x]=tot;}\ninline void ad(int x,int y){add(x,y);add(y,x);}\ninline void up(int x){t[x].sum=(t[x<<1].sum+t[x<<1|1].sum)%P;}\ninline void usd(int x,int l,int r,int k)\n{\n    t[x].lzy=(t[x].lzy+k)%P;\n    t[x].sum=(t[x].sum+k*(r-l+1))%P;\n}\ninline void down(int x,int l,int r)\n{\n    int mid=(l+r)>>1;\n    usd(x<<1,l,mid,t[x].lzy);\n    usd(x<<1|1,mid+1,r,t[x].lzy);\n    t[x].lzy=0;\n}\ninline void dfs1(int x,int fa)\n{\n    dep[x]=dep[fa]+1;\n    siz[x]=1;\n    dad[x]=fa;\n    for(int i=fi[x];i;i=ne[i])\n    {\n        int y=to[i];\n        if(y!=fa)\n        {\n            dfs1(y,x);\n            siz[x]+=siz[y];\n            if(siz[y]>siz[son[x]])son[x]=y;\n        }\n    }\n}\ninline void dfs2(int x,int fa)\n{\n    if(son[x])\n    {\n        seg[son[x]]=++seg[0];\n        top[son[x]]=top[x];\n        rev[seg[0]]=son[x];\n        dfs2(son[x],x);\n    }\n    for(int i=fi[x];i;i=ne[i])\n    {\n        int y=to[i];\n        if(y!=fa && y!=son[x])\n        {\n            seg[y]=++seg[0];\n            rev[seg[0]]=y;\n            top[y]=y;\n            dfs2(y,x);\n        }\n    }\n}//\u6811\u5256\u9884\u5904\u7406\ninline void update(int now,int l,int r,int L,int R,int x)\n{\n    if(L<=l&&R>=r)\n    {\n        t[now].sum=(t[now].sum+(r-l+1)*x)%P;\n        t[now].lzy=(t[now].lzy+x)%P;\n        return ;\n    }\n    down(now,l,r);\n    int mid=(l+r)>>1;\n    if(L<=mid) update(now<<1,l,mid,L,R,x);\n    if(R>mid)update(now<<1|1,mid+1,r,L,R,x);\n    up(now);\n}\ninline int query(int now,int l,int r,int L,int R)\n{\n    if(L<=l&&R>=r) return t[now].sum;\n    int mid=(l+r)>>1,anss=0;\n    down(now,l,r);\n    if(L<=mid) anss=(anss+query(now<<1,l,mid,L,R))%P;\n    if(R>mid) anss=(anss+query(now<<1|1,mid+1,r,L,R))%P;\n    return anss%P;\n}\ninline int askline(int x,int y)\n{\n    int fx=top[x],fy=top[y],anss=0;\n    while(fx!=fy)\n    {\n        if(dep[fx]<dep[fy]) swap(x,y),swap(fx,fy);//\u6df1\u5ea6\u5927\u7684\u5f80\u4e0a\u8df3\n        anss=(anss+query(1,1,n,seg[fx],seg[x]))%P;\n        x=dad[fx];fx=top[x];\n    }\n    if(dep[x]>dep[y])swap(x,y);\n    anss=(anss+query(1,1,n,seg[x],seg[y]))%P;\n    return anss%P;\n}\nint main()\n{\n    cin>>n;\n    int x,y,z;\n    for(int i=1;i<n;i++)\tcin>>x>>y,ad(x,y);\n    dfs1(R,0);\n    seg[0]=seg[R]=1;\n    top[R]=rev[1]=R;\n    dfs2(R,0);\n    for(int i=1;i<=n;i++)\n    {\n        cin>>x;\n        cout<<askline(1,x)<<endl;\n        update(1,1,n,seg[x],seg[x],1);\n    }\n    return 0;\n}\n```",
        "postTime": 1532490914,
        "uid": 103990,
        "name": "asd_a",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2982 \u3010[USACO10FEB]\u6162\u4e0b\u6765Slowing down\u3011"
    },
    {
        "content": "--->[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P2982)\n\n---\n\n### \u524d\u8a00\n\nupd:2021.7.1 \u6539\u6b63\u4e86\u4e00\u4e9b\u5df2\u77e5\u9519\u8bef qwq\n\n\u8fd9\u662f\u4e00\u9053\u6811\u5256\u677f\u5b50\u9898\uff0c\u5982\u679c\u4e0d\u4f1a\u6811\u5256\u7684\u53ef\u4ee5\u5148\u5de6\u8f6c--->[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3384)\n\n---\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u7ed9\u4f60 $q$ \u4e2a\u70b9\uff0c\u4f9d\u6b21\u5c06\u8fd9\u4e9b\u70b9\u8d4b\u503c\u4e3a $1$ \u5e76\u8f93\u51fa\u51fa\u4ece $1$ \u5230\u8fd9\u4e2a\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u70b9\u6743\u4e4b\u548c\n\n**\u6ce8\u610f**\uff1a\u521d\u59cb\u65f6\u8fd9\u68f5\u6811\u4e0a\u7684\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743\u503c\u90fd\u4e3a $0$\n\n---\n### \u601d\u8def\n\n\u6211\u4eec\u80fd\u591f\u60f3\u5230\u6811\u5256\u53ef\u4ee5 $\\log^2n$ \u6c42\u51fa $[1,q]$ \u7684\u6743\u503c\u548c,\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u6574\u4e00\u4e2a\u6811\u5256\u677f\u5b50\u4e0a\u6765\n\n\u7136\u540e\u5bf9\u4e8e\u7ed9\u51fa\u7684 $q$ \u4e2a\u70b9\u53ef\u4ee5\u770b\u6210\u662f\u4fee\u6539\u533a\u95f4 $[q,q]$ \u4e3a $1$\n\n\u6240\u4ee5\u6211\u4eec\u5728\u6811\u5256\u7684\u57fa\u7840\u4e0a\u5c06\u539f\u8be2\u95ee\u6539\u6210\u4fee\u6539\u533a\u95f4\u548c\u6c42\u6743\u503c\u548c\u5c31\u597d\u4e86\n\n---\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define in inline\n#define ri register\n#define _123hh2 0\nusing namespace std;\nin int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0') {if(ch=='-') f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') {x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*f;\n}\nin void write(int x)\n{\n    if(x<0) {x=-x;putchar('-');}\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\nconst int maxn=3e5+1;\nstruct awa\n{\n\tint nxt,to;\n}edge[maxn];\nint head[maxn],cnt;\nint n,m,s;\ninline void add(int u,int v)\n{\n\tedge[++cnt].to=v;edge[cnt].nxt=head[u];head[u]=cnt;\n}\nint a[maxn],lazy[maxn],tree[maxn],neww[maxn];\ninline void pushup(int rt)\n{\n\ttree[rt]=tree[rt<<1]+tree[rt<<1|1];\n\ttree[rt];\n}\ninline void build(int rt,int l,int r)\n{\n\tlazy[rt]=0;\n\tif(l==r)\n\t{\n\t\ttree[rt]=neww[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(rt<<1,l,mid);build(rt<<1|1,mid+1,r);\n\tpushup(rt);\n}\ninline void pushdown(int rt,int l,int r)\n{\n\tif(!lazy[rt]) return;\n\tint mid=(l+r)>>1;\n\tlazy[rt<<1]+=lazy[rt];lazy[rt<<1|1]+=lazy[rt];\n\ttree[rt<<1]+=lazy[rt]*(mid-l+1);\n\ttree[rt<<1|1]+=lazy[rt]*(r-mid);\n\tlazy[rt]=0;\n}\ninline void update(int rt,int l,int r,int ql,int qr,int k)\n{\n\tif(qr<l||r<ql) return ;\n\tif(ql<=l&&r<=qr) \n\t{\n\t\ttree[rt]+=k*(r-l+1);\n\t\tlazy[rt]+=k;\n\t\treturn;\n\t}\n\tpushdown(rt,l,r);\n\tint mid=(l+r)>>1;\n\tupdate(rt<<1,l,mid,ql,qr,k);\n\tupdate(rt<<1|1,mid+1,r,ql,qr,k);\n\tpushup(rt);\n}\ninline int query(int rt,int l,int r,int ql,int qr)\n{\n\tif(qr<l||r<ql) return 0;\n\tif(ql<=l&&r<=qr) return tree[rt];\n\tpushdown(rt,l,r);\n\tint mid=(l+r)>>1;\n\treturn (query(rt<<1,l,mid,ql,qr)+query(rt<<1|1,mid+1,r,ql,qr));\n}\nint deep[maxn],top[maxn],id[maxn],fa[maxn],size[maxn];\ninline void updated(int x,int y,int k)\n{\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(deep[top[x]]<deep[top[y]]) swap(x,y);\n\t\tupdate(1,1,n,id[top[x]],id[x],k);\n\t\tx=fa[top[x]];\n\t}\n\tif(deep[x]>deep[y]) swap(x,y);\n\tupdate(1,1,n,id[x],id[y],k);\n}\ninline int querysum(int x,int y)\n{\n\tint ans=0;\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(deep[top[x]]<deep[top[y]]) swap(x,y);\n\t\tint res=query(1,1,n,id[top[x]],id[x]);\n\t\tans=(ans+res);\n\t\tx=fa[top[x]];\n\t}\n\tif(deep[x]>deep[y]) swap(x,y);\n\tint res=query(1,1,n,id[x],id[y]);\n\tans=(ans+res);\n\treturn ans;\n}\ninline void updateson(int u,int k)\n{\n\tupdate(1,1,n,id[u],id[u]+size[u]-1,k);\n}\ninline int queryson(int u)\n{\n\treturn query(1,1,n,id[u],id[u]+size[u]-1);\n}\nint son[maxn];\ninline void dfs1(int u,int f)//\n{\n\tsize[u]=1;fa[u]=f;deep[u]=deep[f]+1;\n\tfor(int i=head[u];i;i=edge[i].nxt)\n\t{\n\t\tint v=edge[i].to;\n\t\tif(v==f) continue;\n\t\tdfs1(v,u);\n\t\tsize[u]+=size[v];size[u]; \n\t\tif(size[v]>size[son[u]]) son[u]=v;\n\t}\n}\nint dfn;\ninline void dfs2(int u,int topf)//\n{\n\tid[u]=++dfn;neww[dfn]=a[u];top[u]=topf;\n\tif(!son[u]) return;\n\tdfs2(son[u],topf);\n\tfor(int i=head[u];i;i=edge[i].nxt)\n\t{\n\t\tint v=edge[i].to;\n\t\tif(v==fa[u]||v==son[u]) continue;\n\t\tdfs2(v,v);\n\t}\n}\nsigned main()\n{\n\tn=read();\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u=read(),v=read();\n\t\tadd(u,v),add(v,u);//\u53cc\u5411\u8fb9\n\t}\n\tdfs1(1,0);dfs2(1,1);build(1,1,n);//\u6b63\u5e38\u6811\u5256\u5904\u7406\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x=read();\n\t\twrite(querysum(1,x)),puts(\"\");//\u8fd9\u91cc\u76f4\u63a5\u8f93\u51fa\u6743\u503c\n\t\tupdated(x,x,1);//\u770b\u6210\u533a\u95f4\u4fee\u6539\u5c31\u597d\u4e86\n\t}\n    return _123hh2;\n}\n```",
        "postTime": 1625130077,
        "uid": 388626,
        "name": "123hh2",
        "ccfLevel": 6,
        "title": "P2982\u3010\u9898\u89e3\u3011[USACO10FEB]Slowing down G"
    },
    {
        "content": "## \u5173\u4e8e\u81ea\u5df1\n- \u521a\u770b\u5230\u8fd9\u9053\u9898\u5f88\u61f5\u903c\u2026\u2026\u60f3\u4e86\u51e0\u5341\u5206\u949f\uff0c\u653e\u5f03\u4e86\u3002\u7ed3\u679c\u770b\u5230\u53e6\u4e00\u9053\u9898\uff0c\u8054\u60f3\u5230\u8fd9\u9053\u9898\u5c31\u6709\u601d\u8def\u4e86\u2026\u2026\n- \u8ba9\u540e\u5f88\u5feb\u5c31`AC`\u4e86\u3002\n## \u601d\u8def\n- \u770b\u5230`\u6811\u72b6\u6570\u7ec4`\u65f6\u5f88\u96be\u60f3\uff0c\u4f46\u770b\u5230`DFS`\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\u4e86\u3002\n\n- \u8fd9\u9053\u9898\u5b9e\u9645\u4e0a\u6c42\u7684\u662f\u679a\u4e3e\u6bcf\u4e00\u5934\u725b\uff0c\u628a\u8fd9\u5934\u725b\u7684\u76ee\u6807\u70b9\u7684\u72b6\u6001\u8bbe\u4e3a1\u3002\u5b9e\u9645\u6c42\u8fd9\u5934\u725b\u7684\u76ee\u6807\u70b9\u5230\u6839\u8282\u70b9\u4e2d\u72b6\u6001\u4e3a\u4e00\u7684\u70b9\u7684\u4e2a\u6570\u3002\n\n- \u63a5\u7740\u601d\u8003\u4e00\u4e0b\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4`a[N]`\uff0c`a[i]`\u8868\u793a\u8fd9\u4e2a\u70b9\u7684\u725b\u4e3b\u4eba\uff0c\u5c31\u662f\u8bf4\uff0c\u7b2c`a[i]`\u6b21\u725b\u7684\u884c\u8d70\u7684\u76ee\u6807\u70b9\u4e3a`a[i]`\u3002\n\n- \u6df1\u635c\u4e00\u904d\uff0c\u6bcf\u5230\u8282\u70b9`x`\u7684\u65f6\u5019\u5b9e\u9645\u4e0a\u662f\u6c42\u6240\u6709\u4ece\u6839\u8282\u70b9\u5230\u6b64\u8282\u70b9\u8def\u5f84\u4e0a\u7684\u70b9\u4e2d`a[i]`\u503c\u6bd4`a[x]`\u5c0f\u7684\u70b9\u7684\u4e2a\u6570\u3002\n\n- \u7136\u540e\u5c31\u80fd\u591f\u60f3\u5230\u5982\u4f55\u7528\u6811\u72b6\u6570\u7ec4\u6765\u505a\u4e86\u3002\n\n- \u603b\u4f53\u601d\u8def\uff1a\u6df1\u635c\u4e00\u904d\uff0c\u6bcf\u5230\u8282\u70b9`x`\u7684\u65f6\u5019`ans[sum(x)]++`,\u518d\u7528\u6811\u72b6\u6570\u7ec4\u5728`add(x,1)`\uff0c\u7136\u540e\u679a\u4e3e\u6240\u6709\u5b50\u8282\u70b9\uff0c\u9047\u5230\u975e\u7236\u8282\u70b9\u5c31\u9012\u5f52\u3002\u679a\u4e3e\u5b8c\u5b50\u8282\u70b9\u540e\uff0c\u518d`add(x,-1)`\u3002\n\n- \u6700\u597d\u81ea\u5df1\u597d\u597d\u60f3\u4e00\u4e0b\u3002\n## Code\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n#define lowbit(x) x&-x \nconst int N=100005;\nusing namespace std;\nint n,m,c[N],cnt;\nint a[N],ans[N];\nvector<int> g[N];\nvoid add(int x,int d)\t\t\t\t//\u6a21\u677f \n{\n\twhile(x<=n)\n\t{\n\t\tc[x]+=d;\n\t\tx+=lowbit(x);\n\t}\n}\nint sum(int x)\n{\n\tint s=0;\n\twhile(x>0)\n\t{\n\t\ts+=c[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn s;\n}\nvoid dfs(int u,int fa)\t\t\t\t//\u6df1\u635c \n{\n\tans[a[u]]=sum(a[u]);\t\t\t//\u6240\u6709\u6bd4\u4ed6\u5c0f\u7684\u8282\u70b9\u4e2a\u6570 \n\tadd(a[u],1);\n\tfor(int i=0;i<g[u].size();i++)\n\t{\n\t\tint v=g[u][i];\n\t\tif(v==fa) continue;\t\t\t//\u975e\u7236\u8282\u70b9 \n\t\tdfs(v,u);\n\t}\n\tadd(a[u],-1);\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n    for(int i=1;i<n;i++)\t\t\t//\u8bfb\u8fb9 \n    {\n    \tint u,v;\n    \tscanf(\"%d%d\",&u,&v);\n    \tg[u].push_back(v);\n    \tg[v].push_back(u);\n\t}\n\tfor(int i=1;i<=n;i++)\t\t\t//\u4e3a\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u7f16\u53f7 \n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\ta[x]=i;\n\t}\n\tdfs(1,0);\t\t\t\t\t\t//\u6df1\u635c\u6c42\u7b54\u6848 \n\tfor(int i=1;i<=n;i++)\t\t\t//\u8f93\u51fa \n\t{\n\t\tprintf(\"%d\\n\",ans[i]);\n\t}\n    return 0;\n}\n```\n\n#### \u5e0c\u671b\u6b64\u7bc7\u9898\u89e3\u5bf9\u4f60\u6709\u5e2e\u52a9\uff01",
        "postTime": 1605688441,
        "uid": 218478,
        "name": "\u7f16\u7a0b\u5ba2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2982 \u3010[USACO10FEB]Slowing down G\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u5148\u6309\u6d4b\u8bd5\u6837\u4f8b\u753b\u4e2a\u6811\u5f62\u56fe\u3002\u5927\u6982\u8fd9\u6837\n                       \uff081\uff09\n                     \uff083\uff09\uff084\uff09\n                         \uff082\uff09\uff085\uff09\uff1b\n \u56fe\u5c31\u662f\u8fd9\u6837\u4e86\u3002\u6211\u662f\u6309\u697c\u4e0b\u67d0\u5927\u4f6c\u7684\u601d\u8def\u505a\u7684\u3002\uff08\u521a\u5f00\u59cb\u7528\u7684\u4fee\u571f\u8def\u7684\u601d\u8def\u5904\u7406\u7684\uff0c\u7ed3\u679c\u7b54\u6848\u4e0d\u6b63\u786e\u3002\u4e0d\u77e5\u9053\u54ea\u91cc\u9519\u4e86\u3002\uff09\u5148\u8bf4\u8fd9\u4e2a\u9898\u3002\u6309\u9898\u76ee\u7ed9\u7684\u6570\u636e\uff0cdfs\u5e8f\u5217\u4e3a\uff1a1->4->5->2->3\u3002\u597d\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u6bcf\u4e2a\u725b\u68da\u5bf9\u5e94\u4e00\u4e2a\u5976\u725b\uff0c\u800c\u5976\u725b\u662f\u7531\u7f16\u53f7\u7684\u3002\u5976\u725b\u56de\u68da\u662f\u6309\u5976\u725b\u7684\u7f16\u53f7\u8d70\u7684\u3002\u90a3\u4e48\u6211\u4eec\u5728\u56de\u725b\u68da\u7684\u8def\u4e0a\u7edf\u8ba1\u6bd4\u81ea\u5df1\u7f16\u53f7\u5c0f\u7684\u6709\u51e0\u4e2a\u4e0d\u5c31\u597d\u4e86\u3002\uff08\u7f16\u53f7\u6bd4\u81ea\u5df1\u5c0f\u7684\u6709\u51e0\u4e2a\uff0c\u8fd9\u4e0d\u5c31\u662f\u6c42\u524d\u7f00\u548c\u561b\u3002\uff09\u5b8c\u4e8b\u513f\uff0c\u5f53\u8bbf\u95ee\u8fd9\u4e2a\u8282\u70b9\uff08\u725b\u68da\uff09\u7ed3\u675f\u5c31\u51cf\u53bb\u8fd9\u4e2a\u8282\u70b9\uff08\u725b\u68da\uff09\u6240\u5bf9\u5e94\u7f16\u53f7\u51cf\u4e00\u3002\u8fd9\u6837\uff0c\u4ed6\u5c31\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u8282\u70b9\u4e86\u561b\u3002\uff08\u6b64\u65f6\u4f60\u53ef\u4ee5\u60f3\u60f3dfs\u5b9e\u73b0\u8fc7\u7a0b\u5c31\u660e\u767d\u4e86\u4e3a\u5565\u51cf\u53bb\u4e86\u3002\u4ed6\u4e0d\u5bf9\u6bd4\u4ed6\u5927\u7684\u5976\u725b\u7f16\u53f7\u505a\u8d21\u732e\uff0c\u4f46\u662f\u5728\u524d\u7f00\u548c\u5e8f\u5217\u91cc\uff0c\u4e3a\u4e86\u4e0d\u5f71\u54cd\u5c31\u5f97\u51cf\u53bb\u3002\uff09\u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u89e3\u51b3\u6240\u6709\u95ee\u9898\u4e86\u3002\n\u6309\u4e4b\u524d\u601d\u8def\uff0c\u4e00\u53f7\u725b\u68da\u5bf9\u5e94\u4e09\u53f7\u5976\u725b\u3002\uff08\u90a3\u4e48\u4e09\u53f7\u725b\u8981\u6162\u51e0\u6b21\uff0c\u5b8c\u5168\u53d6\u51b3\u4e8e\u8fd9\u6761\u8def\u5f84\u4e0a\u5c0f\u4e8e3\u7684\u6709\u51e0\u4e2a\uff0c\u5c31\u662f0\u4e86\uff09\u3002\u56db\u53f7\u725b\u68da\u5bf9\u5e94\u4e00\u53f7\u5976\u725b\u3002\uff08\u6bd41\u5c0f\u7684\u6ca1\u6709\uff0c\u5c31\u662f0\u4e86\uff09\u4e94\u53f7\u725b\u68da\u5bf9\u5e94\u56db\u53f7\u5976\u725b\u3002\uff08\u6bd4\u56db\u5c0f\u7684\u67091\u548c3\uff0c\u52a0\u8d77\u6765\u5c31\u662f2\uff09\u3002\u5b8c\u4e86\u9000\u51fa\u4e94\u53f7\u725b\u68da\uff0c\u6240\u4ee5\u5c31\u51cf\u53bb\u4e94\u53f7\u725b\u68da\u5bf9\u5e94\u5976\u725b\u7f16\u53f7\uff08\u51cf\u4e00\uff09\u3002\u4e5f\u5c31\u662f\u56db\u53f7\u5976\u725b\u51cf\u4e00\u3002\uff08\u56e0\u4e3a\u4ed6\u6bd4\u4e94\u53f7\u5976\u725b\u7f16\u53f7\u5927\uff0c\u4f46\u662f\u4e0d\u662f\u4e94\u53f7\u5976\u725b\u7684\u7236\u8282\u70b9\uff0c\u4e0d\u505a\u8d21\u732e\uff0c\u4f46\u662f\u5f71\u54cd\u524d\u7f00\u548c\uff09\u3002\u4e4b\u540e\u662f\u4e8c\u53f7\u725b\u68da\uff0c\u5bf9\u5e94\u4e8c\u53f7\u5976\u725b\u3002\uff08\u6bd4\u4e8c\u53f7\u5976\u725b\u7f16\u53f7\u5c0f\u7684\u67091\u53f7\u5976\u725b\uff0c\u6545\u4e3a1\uff09\u3002\u4e4b\u540e\u4e8c\u53f7\u5976\u725b\u51cf\u4e00\uff0c\u4e00\u53f7\u51cf\u4e00\u3002\u4e09\u53f7\u725b\u68da\u5bf9\u5e94\u4e94\u53f7\u5976\u725b\uff0c\uff08\u6bd45\u5c0f\u7684\u67091,2,3,4\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u6ce8\u610f\u52301,2,4\u5df2\u7ecf\u88ab\u51cf\u4e3a0\u4e86\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ea\u67093\u53f7\u505a\u8d21\u732e\uff0c\u6240\u4ee5\u5c31\u662f1\u4e86\uff09\u3002\n\n```c\n#include<stdio.h>\n#include<iostream>\n#include<vector>\n#include<algorithm>\n#define MAXN  100005\nusing namespace std;\n\nint n,m,tot;\nvector<int> G[MAXN];\nbool vis[MAXN];\nint c[MAXN];\nint cnt[MAXN];\nint d[MAXN];\n\nint lowbit(int x)\n{\n    return (x&((-1)*x));\n}\n\nvoid add(int x,int d)\n{\n    while(x<=n)\n    {\n        c[x]+=d;\n        x+=lowbit(x);\n    }\n}\n\nint sum(int x)\n{\n    int ans=0;\n    while(x>0)\n    {\n        ans+=c[x];\n        x-=lowbit(x);\n    }\n    return ans;\n}\n\nvoid dfs(int u,int fa)\n{\n    vis[u]=true;\n    int kk=cnt[u];                   //\u5176\u5b9e\u5e8f\u5c31\u662f1,2,3,4,5\n    d[kk]=sum(cnt[u]);          //\u67d0\u4e2a\u5976\u725b\uff08\u5976\u725b\u662f\u6709\u5e8f\u7684\uff0c\u4ece\u4e00\u53f7\u5f00\u59cb\u56de\u81ea\u5df1\u7684\u519c\u573a\uff09\u6c42\u524d\u7f00\u548c\n    //printf(\"\u7b2c%d\u5934\u5976\u725b\u7684\u503c\u4e3a%d\\n\",kk,d[kk]);\n    add(kk,1);\n    for(int i=0;i<G[u].size();i++)\n    {\n        int v=G[u][i];\n        if(vis[v])\n            continue;\n        dfs(v,u);\n    }\n    add(kk,-1);\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    //tot=0;\n    memset(vis,false,sizeof(vis));\n    for(int i=1;i<n;i++)\n    {\n        int uu,vv;\n        scanf(\"%d %d\",&uu,&vv);\n        G[uu].push_back(vv);\n        G[vv].push_back(uu);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        int op;\n        scanf(\"%d\",&op);\n        cnt[op]=i;                     //\u5c06\u8282\u70b9\u7f16\u53f7\u6620\u5c04\u6210\u5976\u725b\u7f16\u53f7\n    }\n    dfs(1,-1);\n    for(int i=1;i<=n;i++)\n    {\n       printf(\"%d\\n\",d[i]);\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1568804615,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2982 \u3010[USACO10FEB]\u6162\u4e0b\u6765Slowing down\u3011"
    },
    {
        "content": "\u5e86\u795d300\u901a\u8fc7\uff01\u5199\u4e00\u4e2a\u9898\u89e3\u3002\n\n**\u770b\u8d77\u6765\u597d\u50cfdfs\u52a0\u6c42\u548c\u3010\u6811\u72b6\u6570\u7ec4\u3011\u5c31\u53ef\u4ee5\u4e86**\n\n\n\u5728\u4ece\u7236\u8282\u70b9dfs\u5230\u6bcf\u4e2a\u8282\u70b9\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u4e8e\u8282\u70b9u\uff0c\u4ed6\u6709\u51e0\u4e2a\u7956\u5148\u8bbf\u95ee\u987a\u5e8f\u3010\u4e5f\u5c31\u662f\u5976\u725b\u7f16\u53f7\u3011\u6bd4\u4ed6\u5c0f\uff0c\u4ed6\u5c31\u8981\u505c\u51e0\u6b21\n\n\u6240\u4ee5\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\u628a\u6bcf\u4e2a\u8282\u70b9\u6240\u5bf9\u5e94\u7684\u5976\u725b\u7f16\u53f7+1\uff0c\u5728\u904d\u5386\u5b8c\u8be5\u8282\u70b9\u540e-1\u3010\u6539\u56de\u6765\uff0c\u56e0\u4e3a\u4e0d\u540c\u6811\u4e0a\u7684\u8282\u70b9\u4e92\u4e0d\u5f71\u54cd\uff0c\u800c\u8be5\u8282\u70b9\u7684\u513f\u5b50\u90fd\u8bbf\u95ee\u5b8c\u4e86\uff0c\u4e0d\u4f1a\u6709\u725b\u518d\u7ecf\u8fc7\u8fd9\u4e2a\u8282\u70b9\u4e86\u3011\n\n\n\u5bf9\u4e8e+1\u548c\u6c42\u548c\u64cd\u4f5c\uff0c\u6211\u849f\u84bb\u7528\u4e86\u4e2a\u5feb\u4e00\u70b9\u7684\u6811\u72b6\u6570\u7ec4\u3010\u8fd9\u79cd\u70b9\u4fee\u6539\u3001\u533a\u95f4\u8be2\u95ee[1,n]\u7684\u7528\u6811\u72b6\u6570\u7ec4\u5199\u591a\u7b80\u6d01\u3011\n\n\n\u9644\u4ee3\u7801\uff1a\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#define lowerbit(x) (x&-x)\nusing namespace std;\nconst int maxn=100005,INF=2000000000;\nint d[maxn],A[maxn],own[maxn],L,R,N;  //d\u662f\u7b54\u6848,A\u662f\u6811\u72b6\u6570\u7ec4,own\u662f\u8282\u70b9\u4e0e\u5976\u725b\u7f16\u53f7\u7684\u6620\u5c04\nint read()   //\u5feb\u901f\u8bfb\u5165\n{\n    int out=0,flag=1;char c=getchar();\n    while(c<48||c>57) {if(c=='-') flag=-1;c=getchar();}\n    while(c>=48&&c<=57){out=out*10+c-48;c=getchar();}\n    return out*flag;\n}\nint head[maxn],nedge=0;\nclass EDGE                //\u94fe\u5f0f\u524d\u5411\u661f\n{\n```\npublic:\n\n\n\n\n```cpp\n        int to,next;\n}edge[maxn*3];\ninline void addedge(int a,int b)\n{\n    edge[nedge]=(EDGE){b,head[a]};head[a]=nedge++;\n    edge[nedge]=(EDGE){a,head[b]};head[b]=nedge++;\n}\nvoid update(int u,int v){while(u<=N) {A[u]+=v;u+=lowerbit(u);}} //\u6811\u72b6\u6570\u7ec4\u90e8\u5206\nint sum(int u) {int tot=0;while(u>0){tot+=A[u];u-=lowerbit(u);} return tot;}//\u591a\u7d27\u51d1\nvoid dfs(int u,int fa)     //\u6df1\u641c\u6c42\u89e3\n{\n    int cow=own[u],to;\n    d[cow]=sum(cow);\n    update(cow,1);\n    for(int k=head[u];k!=-1;k=edge[k].next)\n        if((to=edge[k].to)!=fa)\n            dfs(to,u);\n    update(cow,-1);\n}\nint main()\n{\n    fill(head,head+maxn,-1);\n    N=read();\n    for(int i=1;i<N;i++) addedge(read(),read());  //\u94fe\u5f0f\u524d\u5411\u661f\u6784\u56fe\n    for(int i=1;i<=N;i++) own[read()]=i;  //\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684\u5976\u725b\u7f16\u53f7\n    fill(A,A+maxn,0);\n    dfs(1,0);\n    for(int i=1;i<=N;i++) printf(\"%d\\n\",d[i]); //\u8f93\u51fa\u7ed3\u679c\n    return 0;\n}\n\n```",
        "postTime": 1497753429,
        "uid": 32842,
        "name": "Mychael",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2982 \u3010[USACO10FEB]\u6162\u4e0b\u6765Slowing down\u3011"
    },
    {
        "content": "\u672c\u9898\u76ee\u53ef\u4ee5\u7406\u89e3\u4e3a\u7ed9\u51fa\u4e00\u9897n\u4e2a\u8282\u70b9\u7684\u6811\uff0c\u987a\u5e8f\u6fc0\u6d3b\u6bcf\u4e2a\u70b9\uff0c\u5e76\u8be2\u95ee\u6bcf\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7ecf\u8fc7\u4e86\u591a\u5c11\u4e2a\u5df2\u7ecf\u6fc0\u6d3b\u7684\u70b9\u3002\u4f7f\u7528\u7ebf\u6bb5\u6811+DFS\u5e8f\u3002\u4e0e\u5176\u4ed6\u7ebf\u6bb5\u6811\u4e0d\u540c\uff0c\u672c\u9898\u7684\u7ebf\u6bb5\u6811\u5b58\u50a8\u7684\u662f\u4e00\u4e2a\u70b9\u7684\u5b50\u6811\uff0c\u6240\u4ee5\u7528DFS\u5e8f\u628a\u6811\u8f6c\u5316\u4e3a\u7ebf\u6bb5\u6765\u5b58\u3002\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u6c42\u548c\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct pig\n{\n    int end,next;\n}a[200005];\nint n,tot,head[200005],l[100005],r[100005],tree[400005];\ninline void add(int x,int y)\n{\n    a[++tot].end=y,a[tot].next=head[x],head[x]=tot;\n    return;\n}\nvoid dfs(int k,int f)\n{\n    l[k]=++tot;\n    for(int i=head[k];i;i=a[i].next)\n        if(a[i].end!=f)dfs(a[i].end,k);\n    r[k]=tot;\n    return;\n}\nint query(int l,int r,int k,int x)\n{\n    int mid=(l+r)>>1;\n    if(l==r)return tree[k];\n    if(x<=mid)return tree[k]+query(l,mid,k<<1,x);\n    return tree[k]+query(mid+1,r,(k<<1)+1,x);\n}\nvoid insert(int l,int r,int k,int start,int end)  \n{  \n    int mid=(l+r)>>1;\n    if(l==start && r==end){tree[k]++;return;}\n    if(mid>=end)return insert(l,mid,k<<1,start,end);\n    if(mid<start)return insert(mid+1,r,(k<<1)+1,start,end);\n    return insert(l,mid,k<<1,start,mid),insert(mid+1,r,(k<<1)+1,mid+1,end);\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin>>n;\n    for(int i=1,x,y;i<n;i++)cin>>x>>y,add(x,y),add(y,x);\n    tot=0,dfs(1,0);\n    for(int i=1,x;i<=n;i++)\n    {\n        cin>>x;\n        cout<<query(1,n,1,l[x])<<endl;\n        insert(1,n,1,l[x],r[x]);\n    }\n    return 0;\n}\n```",
        "postTime": 1495373785,
        "uid": 20564,
        "name": "\u963f\u5ed6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2982 \u3010[USACO10FEB]\u6162\u4e0b\u6765Slowing down\u3011"
    },
    {
        "content": "\n\u5bf9\u4e8e\u6bcf\u53ea\u725b\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u786e\u5b9a\u7b54\u6848\n\n\u6211\u4eec\u8bbemuchang[i]\u8868\u793a\u4ee5\u8282\u70b9i\u4e3a\u76ee\u7684\u5730\u7684\u5976\u725b\u7f16\u53f7\uff0c\n\n\n\u90a3\u4e48\u5bf9\u4e8e\u5976\u725bk\uff1a\n\nmuchang[k]\u6240\u6709\u7956\u5148\u8282\u70b9\u96c6E\u7684muchang[e],e\u2208E\u4e2d\uff0c\u6ee1\u8db3muchang[e] < muchang[k] \u7684e\u7684\u4e2a\u6570\u5c31\u662f\u5976\u725bk\u7684\u7b54\u6848\u3002\n\n\n\u8be6\u60c5\u89c1<http://www.cnblogs.com/huibixiaoxing/p/6849588.html>\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#define max(a,b) ((a) > (b) ? (a) : (b))\n#define min(a,b) ((a) > (b) ? (b) : (a))\n#define lowbit(a) ((a) & (-(a)))\nint read()\n{\n    int x = 0;char ch = getchar();char c = ch;\n    while(ch > '9' || ch < '0')c = ch, ch = getchar();\n    while(ch <= '9' && ch >= '0')x = x * 10 + ch - '0', ch = getchar();\n    if(c == '-')return -x;\n    return x;\n}\nconst int INF = 0x3f3f3f3f;\nconst int MAXN = 1000000 + 10;\nint n,muchang[MAXN],ans[MAXN],head[MAXN],cnt,step,data[MAXN];\nbool b[MAXN];\nstruct Edge{int u,v,next;}edge[MAXN];\nvoid insert(int a,int b){edge[++cnt] = Edge{a, b, head[a]};head[a] = cnt;}\ninline void modify(int x, int k){for(;k <= n;k += lowbit(k))data[k] += x;}\ninline int ask(int k){int x = 0;for(;k;k -= lowbit(k))x += data[k];return x;}\nvoid dfs(int x){\n    b[x] = true;\n    ans[muchang[x]] = ask(muchang[x]);\n    modify(1, muchang[x]);\n    for(int pos = head[x];pos;pos = edge[pos].next)\n    {\n        int y = edge[pos].v;\n        if(b[y])continue;\n        dfs(y);\n    }\n    modify(-1, muchang[x]);\n}\nint main()\n{\n    freopen(\"data.txt\", \"r\", stdin);\n    n = read();\n    int tmp1,tmp2;\n    for(int i = 1;i < n;i ++){\n        tmp1 = read();tmp2 = read();\n        insert(tmp1, tmp2);\n        insert(tmp2, tmp1);\n    }\n    for(int i = 1;i <= n;i ++)\n        muchang[read()] = i;\n    dfs(1);\n    for(int i = 1;i <= n;i ++)\n        printf(\"%d\\n\", ans[i]);\n    return 0;\n}\n```",
        "postTime": 1494665936,
        "uid": 26661,
        "name": "\u5612\u5f7c\u5c0f\u661f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2982 \u3010[USACO10FEB]\u6162\u4e0b\u6765Slowing down\u3011"
    },
    {
        "content": "## \u7b80\u8ff0\u9898\u610f  \n\u5728\u4e00\u68f5\u4ee5 $1$ \u4e3a**\u6839**\u7684\u6811\u4e0a\uff0c\u6bcf\u4e2a\u5976\u725b\u4ece**\u6839**\u8d70\u5411\u81ea\u5df1\u7684\u70b9\uff08\u5c31\u662f\u7267\u573a $P_i$ \uff09\u3002  \n  \n\u5728\u5b83\u4ece\u6839\u8d70\u5411 $P_i$ \u7684**\u8fc7\u7a0b**\u4e2d\uff0c\u4f1a\u9047\u89c1\u5176\u4ed6**\u5df2\u7ecf\u5230\u8fbe**\u7684\u5976\u725b\uff0c\u6c42\u6240\u6709\u9047\u89c1\u6b21\u6570\u3002  \n  \n## \u9898\u76ee\u5206\u6790  \n\u9898\u76ee\u89c4\u5b9a\uff1a\u6070\u597d\u6709 $N-1$ \u6761\u9053\u8def\u76f4\u63a5\u8fde\u63a5\u7740\u6839\uff0c\u6240\u4ee5**\u6bcf\u4e2a\u70b9\u4e4b\u95f4\u662f\u8fde\u901a\u7684**\u3002  \n  \n\u76f4\u63a5\u5728\u6811\u4e0a\u6c42\u89e3\u4e0d\u65b9\u4fbf\uff0c\u53ef\u4ee5\u8003\u8651\u7528 dfs \u5e8f\uff0c\u5c06\u6811\u53d8\u6210**\u7ebf\u6bb5**\u533a\u95f4\u7ef4\u62a4\u3002  \n  \n\u7ef4\u62a4\u7ebf\u6bb5\uff0c\u53ef\u4ee5\u9009\u62e9**\u7ebf\u6bb5\u6811**\u6216\u8005**\u6811\u72b6\u6570\u7ec4**\uff0c\u8fd9\u9053\u9898\u90fd\u53ef\u4ee5\u3002  \n  \n\u56e0\u4e3a\u6811\u72b6\u6570\u7ec4\u7801\u91cf\u8981\u5c0f\u5f88\u591a\uff0c\u6211\u5c31\u9009\u7684\u6811\u72b6\u6570\u7ec4\u3002~~\u5176\u5b9e\u5c31\u662f\u6211\u61d2~~    \n  \n\u4f46\u662f\uff0c\u5982\u679c**\u7b80\u5355\u7684**\u7528\u6811\u72b6\u6570\u7ec4\u9700\u8981\u53bb\u7ef4\u62a4\u76f8\u9047\u7684\u6b21\u6570\uff0c\u65f6\u95f4\u5e76\u4e0d\u5141\u8bb8\u3002  \n  \n- \u67e5\u8be2\u6ca1\u95ee\u9898\uff0c\u6b63\u5e38\u65f6\u95f4\u590d\u6742\u5ea6 $\\log_2{N}$ \u3002  \n\n- \u4f46\u4fee\u6539\u5c31\u4e0d\u884c\u4e86\uff0c\u56e0\u4e3a\u5976\u725b\u6bcf\u6b21\u5f71\u54cd\u7684\u662f\u4e00\u4e2a**\u533a\u95f4**\uff0c\u800c\u666e\u901a\u4fee\u6539\u662f\u9488\u5bf9\u7684**\u5355\u70b9**\u3002  \n  \n\u63a5\u4e0b\u6765\u53ef\u4ee5\u7528**\u5dee\u5206\u6570\u7ec4\u7684\u601d\u60f3**\u7ef4\u62a4\uff0c\u4e5f\u5c31\u662f\u5e73\u5e38\u6211\u4eec\u6240\u8bf4\u7684\u6811\u72b6\u6570\u7ec4**\u533a\u95f4\u4fee\u6539**\u3002  \n  \n\u603b\u7ed3\u6765\u8bf4\uff0c\u8fd9\u9053\u9898\u5c31\u662f dfs \u5e8f + \u6811\u72b6\u6570\u7ec4 + \u6811\u4e0a\u5dee\u5206\u3002  \n  \n\u8981\u6ce8\u610f\u7684\u5730\u65b9\u4ee3\u7801\u91cc\u6709\u3002  \n  \n## \u4ee3\u7801  \n```\n#include <bits/stdc++.h>\nusing namespace std;\nint n,a,b,op,tot,last[200005],in[100005],out[100005],tim,tr[100005],vis[200005];\n//in\u3001out\u8bb0\u5f55dfs\u5e8f\u7684\u6570\u636e\uff0ctr\u662f\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6b21\u6570\u7528\u7684\u53d8\u91cf \nstruct node{\n\tint x,y,nex;\n}e[200005];\nint lowbit(int x){\n\treturn x&(-x);\n}\nvoid add(int a,int b){//\u94fe\u5f0f\u5b58\u56fe \n\ttot++;\n\te[tot].x=a,e[tot].y=b,e[tot].nex=last[a],last[a]=tot;\n}\nvoid dfs_build(int u,int fa){\n\tin[u]=++tim;\n\tfor(int i=last[u]; i; i=e[i].nex){\n\t\tvis[i]=1;\n\t\tint v=e[i].y;\n\t\tif(in[v]){\n\t\t\tcontinue;\n\t\t}\n\t\tif(u!=v){\n\t\t\tdfs_build(v,u);\n\t\t}\n\t}\n\tout[u]=tim;\n}\nint get_sum(int x){//\u67e5\u8be2\u64cd\u4f5c \n\tint sum=0;\n\tfor(int i=x; i>=1; i-=lowbit(i)){\n\t\tsum+=tr[i];\n\t}\n\treturn sum;\n}\nvoid modify(int x,int k){//\u4fee\u6539\u64cd\u4f5c(\u533a\u95f4) \n\tfor(int i=x; i<=n; i+=lowbit(i)){\n\t\ttr[i]+=k;\n\t}\n}\nint main(){\n\tcin>>n;\n\tfor(int i=1; i<=n-1; i++){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tadd(a,b),add(b,a);//\u6ce8\u610f\u662f\u65e0\u5411\u56fe \n\t}\n\tdfs_build(1,1);\n\tfor(int i=1; i<=n; i++){\n\t\tscanf(\"%d\",&op);\n\t\t//\u6ce8\u610f\u8981\u5148\u67e5\u8be2\u518d\u4fee\u6539\uff0ci\u53f7\u5976\u725b\u4e0d\u4f1a\u5f71\u54cd\u5b83\u81ea\u5df1\uff0c\u662fi\u53f7\u4ee5\u540e\u7684\u5976\u725b \n\t\tcout<<get_sum(in[op])<<endl;\n\t\tmodify(in[op],1),modify(out[op]+1,-1);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1626306908,
        "uid": 169555,
        "name": "Kiloio",
        "ccfLevel": 0,
        "title": "P2982 [USACO10FEB]Slowing down G"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u4e00\u68f5\u6811\uff0c\u6709 $m$ \u4e2a\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5148\u8f93\u51fa\u6839\u8282\u70b9\u5230\u8fd9\u4e2a\u70b9\u7684\u70b9\u6743\u548c\uff0c\u518d\u4fee\u6539\u8fd9\u4e2a\u70b9\u7684\u6743\u503c\u4e3a $1$ \u3002\n\n### \u89e3\u6cd5\n\n\u5982\u679c\u628a\u6811\u4e0a\u95ee\u9898\u8f6c\u6362\u5230\u5e8f\u5217\uff0c\u5c31\u662f\u7b80\u5355\u7684\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff0c\u663e\u7136\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6216\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u95ee\u9898\u5c31\u5728\u4e8e\u80fd\u5426\u5c06\u6811\u4e0a\u95ee\u9898\u8f6c\u6362\u4e3a\u5e8f\u5217\u95ee\u9898\u3002\n\n\u5982\u679c\u4e86\u89e3\u8fc7\u6811\u94fe\u5256\u5206\u7684\u540c\u5b66\u4e00\u5b9a\u80fd\u60f3\u5230\uff1a**DFS\u5e8f**\u3002\n\n\u5982\u679c\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5dee\u5206\u7684\u601d\u60f3\uff0c\u5728\u7b2c\u4e00\u6b21\u904d\u5386\u4e00\u4e2a\u5f85\u4fee\u6539\u7684\u8282\u70b9\u65f6\u52a01\uff0c\u56de\u6eaf\u5230\u65f6\u51cf1\uff0c\u8fd9\u6837\u6c42\u524d\u7f00\u548c\u5373\u53ef\u5f97\u5230\u533a\u95f4\u503c\uff1b\u4f7f\u7528\u7ebf\u6bb5\u6811\u7684\u8bdd\u76f4\u63a5\u4fee\u6539\u3001\u67e5\u8be2\u5373\u53ef\u3002\n\n\u8fd9\u91cc\u666e\u53ca\u4e00\u4e2a\u7279\u6b8a\u7684DFS\u5e8f\uff0c\u4e5f\u662f\u672c\u9898\u89e3\u7684\u6838\u5fc3\u601d\u8def\uff1a**\u6b27\u62c9\u5e8f**\u3002\n\n\u6b27\u62c9\u5e8f\u662f\u6307\u5bf9\u4e8e\u6811\u4e0a\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u7b2c\u4e00\u6b21\u904d\u5386\u5230\u5b83\u65f6\u8bb0\u5f55\u4e00\u4e0b\uff0c\u5728\u641c\u7d22\u56de\u6eaf\u65f6\u518d\u8bb0\u5f55\u4e00\u4e0b\uff0c\u6240\u4ee5**\u6574\u4e2a\u6b27\u62c9\u5e8f\u957f\u5ea6\u4e3a\u8282\u70b9\u6570\u76842\u500d**\u3002\uff08\u56e0\u4e3a\u8fd9\u4e2a\u8c03\u4e86\u534a\u5929\u3002\u3002\u3002\uff09\n\n\u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c ```euler``` \u6570\u7ec4\u8bb0\u5f55\u4e86\u904d\u5386\u65f6\u7684\u6b27\u62c9\u5e8f\u3002\n\n```cpp\nint euler[N], dfn;\nvoid dfs(int u, int fa) {\n\teuler[++dfn] = u;\n\tfor (ri i = head[u]; i; i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tif (v == fa) continue;\n\t\tdfs(v, u);\n\t}\n\teuler[++dfn] = u;\n}\n```\n\n\u4f46\u4ec5\u8bb0\u5f55\u4e00\u4e2a\u6570\u7ec4\u662f\u4e0d\u80fd\u591f\u5206\u6e05\u662f\u7b2c\u51e0\u6b21\u904d\u5386\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u4e24\u4e2a\u6570\u7ec4 ```id1``` \uff0c ```id2``` \u5206\u522b\u8868\u793a\u7b2c\u4e00\u6b21\u904d\u5386\u548c\u641c\u7d22\u56de\u6eaf\u65f6\u7684\u65f6\u95f4\u6233\u3002\n\n\u8fd9\u79cd\u505a\u6cd5\u5176\u5b9e\u7b49\u4ef7\u4e8e\u8bb0\u5f55\u4e86\u4e00\u4e2a\u6b27\u62c9\u5e8f\uff0c\u6240\u4ee5**\u957f\u5ea6\u8fd8\u662f\u8282\u70b9\u6570\u76842\u500d**\u3002\n\n\u4ee5\u4e0b\u662fDFS\u90e8\u5206\uff1a\n\n```cpp\nint id1[N], id2[N], dfn;\nvoid dfs(int u, int fa) {\n\tid1[++dfn] = u;\n\tfor (ri i = head[u]; i; i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tif (v == fa) continue;\n\t\tdfs(v, u);\n\t}\n\tid2[++dfn] = u;\n}\n```\n\n\u5355\u70b9\u4fee\u6539\u3001\u533a\u95f4\u67e5\u8be2\u5c31\u5f88\u7b80\u5355\u4e86\u3002\n\n\u6811\u72b6\u6570\u7ec4\uff1a\n\n```\nnamespace BIT {\nint tree[N];\n#define lowbit(x) x&(-x)\ninline void add(int x, int d) {\n    for (; x <= n * 2; x += lowbit(x)) tree[x] += d;\n}\ninline int sum(int x) {\n    int res = 0;\n    for (; x; x -= lowbit(x)) res += tree[x];\n    return res;\n}\n}  // namespace BIT\n```\n\n\u7ebf\u6bb5\u6811\uff1a\n\n```cpp\nnamespace SegmentTree {\nint t[N << 2];\n#define ls u << 1\n#define rs u << 1 | 1\n#define mid ((l + r) >> 1)\ninline void push_up(int u) { t[u] = t[ls] + t[rs]; }\nvoid update(int u, int l, int r, int pos, int val) {\n    if (l == r && l == pos) return t[u] = val, void();\n    if (pos <= mid)\n        update(ls, l, mid, pos, val);\n    else\n        update(rs, mid + 1, r, pos, val);\n    push_up(u);\n}\nint query(int u, int l, int r, int ql, int qr) {\n    if (qr < l || r < ql) return 0;\n    if (ql <= l && r <= qr) return t[u];\n    int lson = query(ls, l, mid, ql, qr);\n    int rson = query(rs, mid + 1, r, ql, qr);\n    return lson + rson;\n}\n}  // namespace SegmentTree\n```\n\n### Code\uff1a\n\n1.\u7ebf\u6bb5\u6811\u7248\u672c\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define ri register int\nconst int N = 2e5 + 10;\ninline int read() {\n    int x = 0;\n    char ch = getchar();\n    bool f = 1;\n    while (!isdigit(ch)) {\n        if (ch == '-') f = 0;\n        ch = getchar();\n    }\n    while (isdigit(ch)) {\n        x = (x << 1) + (x << 3) + (ch ^ 48);\n        ch = getchar();\n    }\n    return f ? x : -x;\n}\nint n;\nstruct Edge {\n    int to, nxt;\n} e[N];\nint head[N], cnt;\ninline void link(int u, int v) {\n    e[++cnt].to = v;\n    e[cnt].nxt = head[u];\n    head[u] = cnt;\n}\n#define Ergodic(u) for (ri i = head[u]; i; i = e[i].nxt)\nint id1[N], id2[N], dfn, euler[N];\nvoid dfs(int u, int fa) {\n    id1[u] = dfn;\n    Ergodic(u) {\n        int v = e[i].to;\n        if (v == fa) continue;\n        dfs(v, u);\n    }\n    id2[u] = dfn;\n    return;\n}\nnamespace SegmentTree {\nint t[N << 2];\n#define ls u << 1\n#define rs u << 1 | 1\n#define mid ((l + r) >> 1)\ninline void push_up(int u) { t[u] = t[ls] + t[rs]; }\nvoid update(int u, int l, int r, int pos, int val) {\n    if (l == r && l == pos) return t[u] = val, void();\n    if (pos <= mid)\n        update(ls, l, mid, pos, val);\n    else\n        update(rs, mid + 1, r, pos, val);\n    push_up(u);\n}\nint query(int u, int l, int r, int ql, int qr) {\n    if (qr < l || r < ql) return 0;\n    if (ql <= l && r <= qr) return t[u];\n    int lson = query(ls, l, mid, ql, qr);\n    int rson = query(rs, mid + 1, r, ql, qr);\n    return lson + rson;\n}\n}  // namespace SegmentTree\nusing namespace SegmentTree;\nsigned main() {\n    n = read();\n    for (ri i = 1; i < n; i++) {\n        int u = read(), v = read();\n        link(u, v), link(v, u);\n    }\n    dfs(1, 0);\n    for (ri i = 1; i <= n; i++) {\n        int x = read();\n        printf(\"%lld\\n\", query(1, 1, 2 * n, id1[1], id1[x]));\n        update(1, 1, 2 * n, id1[x], 1);\n        update(1, 1, 2 * n, id2[x], -1);\n    }\n    return 0;\n}\n```\n\n2.\u6811\u72b6\u6570\u7ec4\u7248\u672c\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define ri register int\nconst int N = 2e5 + 10;\ninline int read() {\n    int x = 0;\n    char ch = getchar();\n    bool f = 1;\n    while (!isdigit(ch)) {\n        if (ch == '-') f = 0;\n        ch = getchar();\n    }\n    while (isdigit(ch)) {\n        x = (x << 1) + (x << 3) + (ch ^ 48);\n        ch = getchar();\n    }\n    return f ? x : -x;\n}\nint n;\nstruct Edge {\n    int to, nxt;\n} e[N];\nint head[N], cnt;\ninline void link(int u, int v) {\n    e[++cnt].to = v;\n    e[cnt].nxt = head[u];\n    head[u] = cnt;\n}\n#define Ergodic(u) for (ri i = head[u]; i; i = e[i].nxt)\nint id1[N], id2[N], dfn;\nvoid dfs(int u, int fa) {\n    id1[u] = dfn;\n    Ergodic(u) {\n        int v = e[i].to;\n        if (v == fa) continue;\n        dfs(v, u);\n    }\n    id2[u] = dfn;\n    return;\n}\nnamespace BIT {\nint tree[N];\n#define lowbit(x) x&(-x)\ninline void add(int x, int d) {\n    for (; x <= n * 2; x += lowbit(x)) tree[x] += d;\n}\ninline int sum(int x) {\n    int res = 0;\n    for (; x; x -= lowbit(x)) res += tree[x];\n    return res;\n}\n}  // namespace BIT\nusing namespace BIT;\nsigned main() {\n    n = read();\n    for (ri i = 1; i < n; i++) {\n        int u = read(), v = read();\n        link(u, v), link(v, u);\n    }\n    dfs(1, 0);\n    for (ri i = 1; i <= n; i++) {\n        int x = read();\n        printf(\"%lld\\n\", sum(id1[x]));\n        add(id1[x], 1);\n        add(id2[x], -1);\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1625198917,
        "uid": 375030,
        "name": "CG__HeavenHealer",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011 [P2982] [USACO10FEB\\]Slowing down G]"
    },
    {
        "content": "## \u5206\u6790\u9898\u76ee\n\u8fd9\u9898\u7684\u96be\u70b9\u5728\u4e8e\u5982\u4f55\u5c06\u6811\u4e0a\u95ee\u9898\u8f6c\u5316\u4e3a\u533a\u95f4\u95ee\u9898\u3002\n\n### \u524d\u7f6e\u77e5\u8bc6\uff1adfs\u5e8f\n\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5728\u4e00\u68f5\u6811\u4e0a\u8dd1\u4e00\u904d dfs \uff0c\u7136\u540e\u6309\u987a\u5e8f\u8bb0\u5f55\u4e0b\u8d70\u5230\u7684\u70b9\u662f\u7b2c\u51e0\u4e2a\u88ab\u904d\u5386\u5230\u7684\u70b9\u3002\n\ndfs \u7684\u672c\u8d28\u662f **\u6df1\u5ea6\u4f18\u5148** \uff0c\u5373\u7684\u987a\u5e8f\u662f\u7531\u6839\u5411\u53f6\u5b50\uff0c\u6240\u4ee5\u4e00\u4e2a\u8282\u70b9\u5728 dfs \u5e8f\u4e2d\u7684 $[ ord_x,ord_x + size_i - 1]$ \uff08$ord_x$ \u6307 $x$ \u7684 dfs \u5e8f\uff0c $size_i$ \u662f\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u7684\u5927\u5c0f\uff09\u5c31\u662f\u8fd9\u4e2a\u8282\u70b9\u5b50\u6811\u5bf9\u5e94\u7684\u533a\u95f4\u3002\n\n### \u7ef4\u62a4\u5b50\u6811\u52a0\uff0c\u5355\u8282\u70b9\u8be2\u95ee\n\u65e2\u7136\u5df2\u7ecf\u8f6c\u5316\u4e3a\u533a\u95f4\u95ee\u9898\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u5dee\u5206\u6765\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\u4e86\u3002\n\n\u6211\u4eec\u987a\u5e8f\u904d\u5386\u6bcf\u4e00\u5934\u725b\uff0c\u5148\u67e5\u8be2\u8be5\u5934\u725b\u6240\u5728\u70b9\u7684\u503c\uff0c\u518d\u628a\u6bcf\u5934\u725b\u6240\u5728\u8282\u70b9\u7684\u5b50\u6811\u52a0 $1$\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100004;\nchar vis[maxn],res[maxn<<3];\nint n,u,v,p,cnt;\nint head[maxn],to[maxn<<1],nxt[maxn<<1],ord[maxn],treesz[maxn],tree[maxn];\n\ninline void read(int &x){\n\tchar c=getchar();bool f=0;x=0;\n\tfor(;c<'0'||c>'9';c=getchar())\n\t\tif(c=='-')\n\t\t\tf=1;\n\tfor(;c>='0'&&c<='9';c=getchar())\n\t\tx=x*10+(c^48);\n\tx=f?-x:x;\n}\n\nvoid save(const int x){\n\tif(x>9)\n\t\tsave(x/10);\n\tres[++cnt]=x%10+48;\n}\n\ninline void add_edge(const int &a,const int &b){\n\t++cnt;\n\tto[cnt]=b;\n\tnxt[cnt]=head[a];\n\thead[a]=cnt;\n}\n\ninline const int lowbit(const int &x){ return x&-x;}\n\nvoid add(int p,int v){\n\twhile(p<=n){\n\t\ttree[p]+=v;\n\t\tp+=lowbit(p);\n\t}\n}\n\nint sum(int p){\n\tint ans=0;\n\twhile(p){\n\t\tans+=tree[p];\n\t\tp-=lowbit(p);\n\t}\n\treturn ans;\n}\n\nvoid dfs(int node,int fa){\n\tord[node]=++cnt; \n\ttreesz[node]=1;  //\u4e0d\u8981\u5b9a\u4e49\u6210size,\u6709\u53ef\u80fd\u4f1aCE \n\tfor(int i=head[node];i;i=nxt[i]){\n\t\tif(to[i]==fa)\n\t\t\tcontinue;\n\t\tdfs(to[i],node);\n\t\ttreesz[node]+=treesz[to[i]];\n\t}\n}\n\nint main(){\n\tread(n);\n\tfor(int i=1;i<n;i++){\n\t\tread(u),read(v);\n\t\tadd_edge(u,v);\n\t\tadd_edge(v,u);\n\t}\n\tcnt=0;\n\tdfs(1,0);\n\tcnt=0;\n\tfor(int i=1;i<=n;i++){\n\t\tread(p);\n\t\tsave(sum(ord[p]));\n\t\tres[++cnt]='\\n';\n\t\tadd(ord[p],1);\n\t\tadd(ord[p]+treesz[p],-1);\n\t}\n\tfwrite(res+1,1,cnt,stdout);\n\treturn 0;\n}\t\t\n```",
        "postTime": 1604807931,
        "uid": 289944,
        "name": "Na2PtCl6",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2982 \u3010[USACO10FEB]Slowing down G\u3011"
    },
    {
        "content": "**\u8fd9\u7bc7\u9898\u89e3\u7528\u7684\u786e\u5b9e\u90fd\u662f\u5df2\u6709\u7684\u89e3\u6cd5\uff0c\u4f46\u662f\u5b83\u5bf9\u5df2\u6709\u7684\u4e24\u79cd\u89e3\u6cd5\u8fdb\u884c\u4e86\u68b3\u7406\uff0c\u5e2e\u52a9\u8bfb\u8005\u6bd4\u8f83\u4e24\u8005\u5728\u4e24\u65b9\u9762\u4e0a\u7684\u4f18\u52a3**\n\n---\n\n\u7b80\u5355\u68b3\u7406\u4e00\u4e0b\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u7684\u4e24\u79cd\u65b9\u6cd5  \n\n\u9996\u5148\u57fa\u7840\u662f\uff1a**dfs\u5e8f+\u533a\u95f4\u6570\u636e\u7ed3\u6784(\u7ebf\u6bb5\u6811\uff0c\u6811\u72b6\u6570\u7ec4)**\n\n## 1. \u6811\u94fe\u5256\u5206\uff08\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u8003\u8651\u201c\u4ece\u54ea\u91cc\u6765\u201d\uff09\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u67e5\u8be2\u4ece\u8fd9\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u7ecf\u8fc7\u4e86\u591a\u5c11\u4e2a\u6709\u5976\u725b\u7684\u70b9\uff0c\u4f5c\u4e3a\u5176 $ans$  \n\u53ef\u4ee5\u5904\u7406\u4e00\u4e2a\u70b9\u5c31\u8f93\u51fa\u8fd9\u4e2a\u70b9\u7684 $ans$  \n\u56e0\u6b64\u9700\u8981 **\u6811\u94fe\u5256\u5206**   \n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$n$ \u4e2a\u8282\u70b9 $\\times$ \u6811\u94fe\u5256\u5206\u7684 $\\log n$ \u6bb5\u94fe $\\times$ \u533a\u95f4\u67e5\u8be2(\u533a\u95f4\u52a0)\u7684 $\\log n$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log^2 n)$  \n\n\u4f18\u70b9\u662f\u53ef\u4ee5**\u5728\u7ebf\u67e5\u8be2**  \n\u7f3a\u70b9\u662f**\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u5927\uff0c\u5e38\u6570\u76f8\u5bf9\u8f83\u5927**\uff0c\u4e0d\u8fc7\u8db3\u5df2\u901a\u8fc7\u672c\u9898  \n\n\u4ee3\u7801: [\u4f20\u9001\u95e8](https://gitee.com/hkxa/mycode/blob/master/luogu/P2982.cpp)\n\n## 2. dfs \u5e8f\uff08\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u8003\u8651\u201c\u5230\u54ea\u91cc\u53bb\u201d\uff09\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u4f7f\u5176\u6240\u6709\u5b50\u6811\u7684 $ans = ans + 1$  \n\u6700\u540e\u5904\u7406\u5b8c\u6bcf\u4e2a\u70b9\u540e\u518d\u8f93\u51fa\u6bcf\u4e2a\u70b9\u7684 $ans$  \n\u4e0d\u9700\u8981 **\u6811\u94fe\u5256\u5206**\uff0c\u4ec5\u9700\u8981 **dfs\u5e8f**  \n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$n$ \u4e2a\u8282\u70b9 $\\times$ \u533a\u95f4\u67e5\u8be2(\u533a\u95f4\u52a0)\u7684 $\\log n$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$  \n\n\u4f18\u70b9\u662f**\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u5c0f\uff0c\u5e38\u6570\u76f8\u5bf9\u8f83\u5c0f**\uff0c\u53ef\u4ee5\u5e94\u5bf9\u65f6\u95f4\u5361\u7684\u6bd4\u8f83\u4e25\u683c\u7684\u9898\u76ee   \n\u7f3a\u70b9\u662f\u4e0d\u53ef\u4ee5**\u5728\u7ebf\u67e5\u8be2** \n\n\u8fd9\u79cd\u4ee3\u7801\u5c31\u4e0d\u8d34\u4e86\uff0c\u5927\u90e8\u5206\u9898\u89e3\u90fd\u662f\u8fd9\u79cd",
        "postTime": 1589873324,
        "uid": 63720,
        "name": "brealid",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2982 \u3010[USACO10FEB]Slowing down G\u3011"
    },
    {
        "content": "### \u9898\u89e3 P2982 \u3010[USACO10FEB]\u6162\u4e0b\u6765Slowing down\u3011\n\n[\u535a\u5ba2\u5185\u9605\u8bfb](https://www.cnblogs.com/bj2002/p/10432150.html)\n\n- \u9898\u76ee\u5927\u610f \uff1a\u7ed9\u51fa\u4e00\u68f5\u6811\uff0c\u8282\u70b9\u6709\u70b9\u6743\uff0c\u6c42\u6bcf\u4e2a\u8282\u70b9\u7684**\u7956\u5148**\u4e2d\u70b9\u6743\u5c0f\u4e8e\u8be5\u8282\u70b9\u7684\u7ed3\u70b9\u7684\u4e2a\u6570 \u3002\n\n- \u601d\u8def\u5982\u4e0b \uff1a\n\n  - \u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u5bf9\u6811\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u3002\n  - \u5f53\u8fdb\u884c\u5230\u8282\u70b9 i \u65f6\uff0c\u6709\uff1a\n    -  $\\text{i}$ \u7684\u7956\u5148\u4eec $\\text{Father[i]}$ \u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\u4e86\uff0c\u4f46\u8fd8\u6ca1\u6709\u9000\u51fa\u3002\n    - \u5176\u4ed6\u8282\u70b9\u6216\u8005\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\u5e76\u9000\u51fa\u4e86\uff0c\u6216\u8005\u8fd8\u6ca1\u6709\u88ab\u8bbf\u95ee\u3002\n  - \u90a3\u4e48\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u7ef4\u62a4\u90a3\u4e9b**\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\u4e86\uff0c\u4f46\u8fd8\u6ca1\u6709\u9000\u51fa\u7684\u70b9\u6743**\uff0c\u652f\u6301\u67e5\u8be2**\u5c0f\u4e8e\u7279\u5b9a\u503c\u7684\u5143\u7d20\u7684\u6570\u91cf** \u3002\n  - \u53ef\u4ee5\u4f7f\u7528**\u6811\u72b6\u6570\u7ec4**\u6216\u8005**\u7ebf\u6bb5\u6811**\u3002\n\n- Code\n\n  ```\n  #include <cstdio>\n  #include <cstring>\n  #define re register\n  #define GC getchar()\n  #define Clean(X,K) memset(X,K,sizeof(X))\n  #define Lowbit(X) (X&(-X))\n  int Qread () {\n      int X = 0 ;    char C = GC ;\n      while (C > '9' || C < '0') C = GC ;\n      while (C >='0' && C <='9') {\n          X = X * 10 + C - '0' ;\n          C = GC ;\n      }\n      return X ;\n  }\n  const int Maxn = 100005 ;\n  int N ,  P_C[Maxn] , Ans[Maxn] , En = 0 , Head[Maxn] , T[Maxn];\n  struct Edge {\n      int From_Where , Goto_Where , Next_Edge ;\n  };\n  Edge E[Maxn * 2] ;\n  void Adg (int X , int Y) {\n      E[++En].From_Where = X ;\n      E[En].Goto_Where = Y ;\n      E[En].Next_Edge = Head[X] ;\n      Head[X] = En ;\n  }\n  void Add (int X , int K) {\n      while (X <= N) {\n          T[X] += K ;\n          X += Lowbit(X) ;\n      }\n  }\n  int Ask (int X) {\n      int Ans = 0 ;\n      while (X > 0) {\n          Ans += T[X] ;\n          X -= Lowbit(X) ;\n      }\n      return Ans ;\n  }\n  void Super_Powerful_DFS (int X , int Lst) {\n      Ans[P_C[X]] = Ask (P_C[X]) ;\n      //printf (\"%d %d %d\\n\" , X , P_C[X],Ans[P_C[X]]) ;\n      Add (P_C[X] , 1) ;\n      for (re int i = Head[X] ; i ; i = E[i].Next_Edge ) {\n          if (E[i].Goto_Where == Lst) continue ;\n          Super_Powerful_DFS ( E[i].Goto_Where , X) ;\n      }\n      Add (P_C[X] , -1) ;\n  }\n  int main () {\n      //freopen (\"P2982.in\" , \"r\" , stdin) ;\n      Clean (Ans , 0) , Clean (Head , 0) , Clean (T , 0) , En = 0 ;\n      N = Qread () ;\n      for (re int i = 1 ; i < N ; ++ i) {\n          int X = Qread () , Y = Qread () ;\n          Adg (X , Y) , Adg (Y , X) ;\n      }\n      for (re int i = 1 ; i <= N; ++ i) {\n          int X = Qread () ;\n          P_C[X] = i ;\n      }\n      Super_Powerful_DFS ( 1 , -1) ;\n      for (re int i = 1 ; i <= N; ++ i) printf (\"%d\\n\" , Ans[i]) ;\n      fclose (stdin) ;\n      fclose (stdout);\n      return 0;\n  }\n  ```\n\n  \u70b9\u51fb[\u8fd9\u91cc](https://www.luogu.org/problemnew/show/P3374)\u5b66\u4e60\u6811\u72b6\u6570\u7ec4\n\n### Thanks \uff01",
        "postTime": 1551160566,
        "uid": 35219,
        "name": "Baihua",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2982 \u3010[USACO10FEB]\u6162\u4e0b\u6765Slowing down\u3011"
    },
    {
        "content": "\u4ecb\u7ecd\u4e00\u4e2a\u901a\u89e3\u60f3\u6cd5\uff0c\u867d\u7136\u53ef\u80fd\u5728\u8fd9\u9053\u9898\u4e0a\u6709\u70b9\u5927\u6750\u5c0f\u7528\n\n\u539f\u56e0\u662f\u6211\u89c9\u5f97dfs\u592a\u66b4\u529b\u4e0d\u4f18\u96c5\n\n\u770b\u5230 \u201c\u7267\u573a\u6784\u6210\u4e86\u4e00\u68f5\u6811\u201d \u4ee5\u53ca \u201c\u7cae\u4ed3\u8d70\u5411\u4ed6\u7684\u81ea\u5df1\u7684\u7267\u573a\uff08\u6811\u4e0a\u4ece\u6839\u5230\u67d0\u4e00\u8282\u70b9\uff0c\u5373\u6811\u4e0a\u8def\u5f84\uff09\u201d\uff0c\u53ef\u4ee5\u60f3\u5230\u6811\u94fe\u5256\u5206\u3002\n\n~~dfs\u66b4\u529b\u4e0d\u4f18\u96c5\uff1f\u6811\u5256\u4e0d\u662f\u6709\u4e24\u4e2adfs\u5417~~\n\n\u9996\u5148\u8bf4\u4e00\u4e0b\uff0c\u6811\u94fe\u5256\u5206\u4e0d\u662fNOIP\u8003\u70b9\uff0c\u5982\u679c\u76ee\u6807\u662fNOIP\u7684\u6682\u65f6\u53ef\u4ee5\u4e0d\u638c\u63e1\u3002\n\n\u6811\u94fe\u5256\u5206\u7684\u8be6\u7ec6\u8bb2\u89e3\u5728\u6b64\u2192https://www.luogu.org/problemnew/solution/P3384\n\n\u7528\u6811\u5256+\u6811\u72b6\u6570\u7ec4\uff08\u6709\u5355\u70b9\u4fee\u6539\uff0c\u6240\u4ee5\u7edd\u5bf9\u6bd4\u6811\u5256+\u7ebf\u6bb5\u6811\u5feb\uff09\u89e3\u51b3\uff0c\u5728\u7ebf\u5904\u7406\u8be2\u95ee\u3002\n\n\u6bcf\u4e00\u6b21\u8f93\u5165\u4e00\u4e2a\u5976\u725b\u7684\u76ee\u6807\u7267\u573a\uff0c\u5c31\u8be2\u95ee\u8be5\u76ee\u6807\u7267\u573a\u5230\u6839\u7684\u8def\u5f84\u4e0a\u70b9\u7684\u6743\u503c\u548c\uff0c\u7136\u540e\u628a\u76ee\u6807\u7267\u573a\u70b9\u7684\u6743\u503c+1\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cctype>\n#define MAXN (int)(1e5+7)\nusing namespace std;\nint n, num_edge, head[MAXN], p[MAXN], cnt;\nint size[MAXN], son[MAXN], father[MAXN], dep[MAXN];\nint top[MAXN], bit[MAXN];\nint sum[MAXN];\nstruct add\n{\n\tint to, next;\n}edge[MAXN<<1];\nint read()\n{\n\tint tt = 0;\n\tchar c = getchar();\n\twhile(!isdigit(c)) c = getchar();\n\twhile(isdigit(c))\n\t{\n\t\ttt = (tt<<1)+(tt<<3)+(c&15);\n\t\tc = getchar();\n\t}\n\treturn tt;\n}\nvoid add_edge(int from, int to)\n{\n\tedge[++num_edge] = (add){to, head[from]};\n\thead[from] = num_edge;\n}\nvoid dfs1(int u, int fa)\n{\n\tfather[u] = fa;\n\tsize[u] = 1;\n\tdep[u] = dep[fa]+1;\n\tfor(int i=head[u]; i; i=edge[i].next)\n\t{\n\t\tint v = edge[i].to;\n\t\tif(v == fa) continue;\n\t\tdfs1(v, u);\n\t\tsize[u] += size[v];\n\t\tif(size[v] > size[son[u]]) son[u] = v;\n\t}\n}\nvoid dfs2(int u, int topu)\n{\n\ttop[u] = topu;\n\tbit[u] = ++cnt;\n\tif(!son[u]) return;\n\tdfs2(son[u], topu);\n\tfor(int i=head[u]; i; i=edge[i].next)\n\t{\n\t\tint v = edge[i].to;\n\t\tif(v==father[u] || v==son[u]) continue;\n\t\tdfs2(v, v);\n\t}\n}\nint lowbit(int x)\n{\n\treturn x&-x;\n}\nint query(int pos)\n{\n\tint res = 0;\n\twhile(pos)\n\t{\n\t\tres += sum[pos];\n\t\tpos -= lowbit(pos);\n\t}\n\treturn res;\n}\nvoid update(int pos, int v)\n{\n\twhile(pos <= n)\n\t{\n\t\tsum[pos] += v;\n\t\tpos += lowbit(pos);\n\t}\n} \n//\u56e0\u4e3a\u8ba1\u7b97\u7684\u603b\u662f\u6839(1)\u5230\u67d0\u4e00\u70b9\u7684\u8ddd\u79bb\uff0c\u6240\u4ee5\u5c31\u505a\u4e86\u4e2a\u5c0f\u6539\u52a8\nint query_path(int x) \n{\n\tint res = 0;\n\twhile(1 != top[x])\n\t{\n\t\tres += query(bit[x])-query(bit[top[x]]-1);\n\t\tx = father[top[x]];\n\t}\n\tres += query(bit[x]);\n\treturn res;\n}\nint main()\n{\n\tn = read();\n\tfor(int i=1; i<=n-1; ++i)\n\t{\n\t\tint x = read(), y = read();\n\t\tadd_edge(x, y);\n\t\tadd_edge(y, x);\n\t}\n\tdfs1(1, 0);\n\tdfs2(1, 1);\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tint x = read();\n\t\tprintf(\"%d\\n\", query_path(x));\n\t\tupdate(bit[x], 1);\n\t}\n\treturn 0;\t\n}\n```",
        "postTime": 1540285122,
        "uid": 68001,
        "name": "AugustineYang",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2982 \u3010[USACO10FEB]\u6162\u4e0b\u6765Slowing down\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u8fd9\u9898\u6765\u8bf4 \u6211\u4eec\u8dd1\u4e00\u904dDFS \u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u7b2c\u4e00\u6b21\u88ab\u8bbf\u95ee\u7684\u65f6\u95f4\u548c\u7ed3\u675f\u8bbf\u95ee\u7684\u65f6\u95f4\n\n\u4e00\u4e2a\u8282\u70b9\u7684\u6240\u6709\u5b50\u6811\u5c31\u4e00\u5b9a\u5728\u5b83\u7b2c\u4e00\u6b21\u88ab\u8bbf\u95ee\u7684\u65f6\u95f4\u5230\u7ed3\u675f\u8bbf\u95ee\u7684\u65f6\u95f4\u4e4b\u95f4\n\n\u5c06\u5b83\u7b2c\u4e00\u6b21\u88ab\u8bbf\u95ee\u7684\u65f6\u95f4c[graw[i]]++\uff0c\u7ed3\u675f\u8bbf\u95ee\u7684\u65f6\u95f4c[black[i]--\uff0c\u6bcf\u6b21\u6c42\u89e3\u7684\u65f6\u5019\u53ea\u8981\u6c421~graw[p]\u7684\u524d\u7f00\u548c\u5c31\u884c\u4e86\n\u5feb\u901f\u6c42\u524d\u7f00\u548c\uff1f\n\n\u6811\u72b6\u6570\u7ec4\u554a\uff01\u3010\u6ed1\u7a3d\u3011\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\u3010\u4ee3\u7801\u5199\u7684\u4e11QAQ\u3011\n\n\n```cpp\n/*\nDFS\u5e8f\n\u7136\u540e\uff01\uff01\uff01\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u6765\u8bf4 \u4ed6\u7684\u5b50\u8282\u70b9\u5c31\u662fgraw[i]~black[i]\u8fd9\u4e2a\u533a\u95f4\n\u6240\u4ee5\u6211\u4eec\u7528\u5dee\u5206\n\u628ac[graw[i]]++,c[black[i]]--\n\u7edf\u8ba1\u7684\u65f6\u5019\u76f4\u63a5\u8dd1\u4e00\u904dgraw[i]\u524d\u7f00\u548c\u5c31\u53ef\u4ee5\u4e86\n*/\n#include <bits/stdc++.h>\nusing namespace std;\nint n,c[100005];\nint numm[100005],ans;\nint black[100005],graw[100005],cnt,next[200005],last[200005],Arrive[200005],Time;\nvoid jt(int x,int y) {\n\tcnt++;\n\tnext[cnt]=last[x];\n\tlast[x]=cnt;\n\tArrive[cnt]=y;\n}\nvoid dfs(int r,int fa) {\n\tTime++;\n\tgraw[r]=Time;\n\tfor (int i=last[r]; i; i=next[i]) {\n\t\tif (Arrive[i]!=fa)\n\t\t\tdfs(Arrive[i],r);\n\t}\n\tTime++;\n\tblack[r]=Time;\n}\nint lowbit(int kk) {\n\treturn kk&(-kk);\n}\nvoid add(int wz,int x) {\n\tfor (int i=wz; i<=2*n; i+=lowbit(i))\n\t\tc[i]+=x;\n}\nint summ(int From) {\n\tint ans=0;\n\tfor (int i=From; i>0; i-=lowbit(i))\n\t\tans+=c[i];\n\treturn ans;\n}\nint main() {\n\tscanf(\"%d\",&n);\n\tfor (int i=1; i<=n-1; i++) {\n\t\tint xx,yy;\n\t\tscanf(\"%d%d\",&xx,&yy);\n\t\tjt(xx,yy);\n\t\tjt(yy,xx);\n\t}\n\tdfs(1,0);\n\tfor (int i=1; i<=n; i++) {\n\t\tint p;\n\t\tscanf(\"%d\",&p);\n\t\tprintf(\"%d\\n\",summ(graw[p]));\n\t\tadd(graw[p],1);\n\t\tadd(black[p],-1);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1534820502,
        "uid": 23899,
        "name": "\u4e03\u6761\u73b2\u5948",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2982 \u3010[USACO10FEB]\u6162\u4e0b\u6765Slowing down\u3011"
    },
    {
        "content": "\u539f\u6587\u70b9[\u8fd9\u91cc](https://blog.csdn.net/A_Comme_Amour/article/details/79722330)\n\n\u9898\u76ee\n-\n[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P2982)\n\u9898\u89e3\n-\n\n\u8fd9\u9053\u9898\u8fd8\u662f\u6bd4\u8f83\u597d\u7684\uff1b\n\n\u6211\u4eec\u5148\u8003\u8651\u6811\u5f62\u6210\u4e00\u6761\u94fe\u7684\u60c5\u51b5\uff0c\u90a3\u5c31\u6210\u4e86\u5355\u70b9\u4fee\u6539 \u533a\u95f4\u67e5\u8be2\u64cd\u4f5c\uff0c\u90fd\u662f\u7ebf\u6bb5\u6811\u7684\u57fa\u672c\u64cd\u4f5c\uff1b\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u4f7f\u7528dfs\u5e8f\u7684\u65b9\u6cd5\uff0c\u628a\u5b83\u53d8\u6210\u4e00\u6761\u94fe\uff0c\u90a3\u4e48\u67d0\u68f5\u5b50\u6811\u7684\u533a\u95f4\u5c31\u662f dfn[i]+tot[i]-1\uff0c\u8fdb\u884c\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\uff1b\n\n\u901a\u8fc7dfs\u5e8f\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86\u4ece\u4e8c\u7ef4\u964d\u5230\u4e00\u7ef4\uff0c\u7c7b\u4f3c\u201c\u7d22\u5f15\u8868\u201d\u7684\u601d\u60f3\uff0c\u5927\u5bb6\u53ef\u4ee5\u53bb\u770b\u770b\u8fd9\u9053\u9898\u2014[\u6d77\u6e2f](https://blog.csdn.net/a_comme_amour/article/details/78384395)\n\u4ee3\u7801\n-\n\n```\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <iostream>\nusing namespace std;\nconst int maxn=1000001;\nconst int inf=1e9;\n\nint n,m,tot[maxn],dfn[maxn],idfn[maxn],a[maxn];\nstruct Node{\n    int sum,tag;\n}tree[maxn<<1|1];\nstruct Edge{\n    int next,to;\n}edge[maxn<<1];\nint num_edge=-1,head[maxn];\n\nvoid add_edge(int from,int to)\n{\n    edge[++num_edge].next=head[from];\n    edge[num_edge].to=to;\n    head[from]=num_edge;\n}\n\nint cnt;\nvoid dfs(int x,int fa)\n{\n    dfn[x]=++cnt; \n\tidfn[cnt]=x;\n    tot[x]=1;\n    for (int i=head[x]; i!=-1; i=edge[i].next)\n    {\n        int to=edge[i].to;\n        if (to!=fa) \n\t\t{\n\t\t\tdfs(to,x);\n\t\t\ttot[x]+=tot[to];\n\t\t}\n    }\n}\n\nvoid pushup(int rt) {tree[rt].sum=tree[rt<<1].sum+tree[rt<<1|1].sum;}\nvoid pushdown(int rt,int ln,int rn)\n{\n    if (tree[rt].tag)\n    {\n        tree[rt<<1].tag+=tree[rt].tag;\n\t\ttree[rt<<1|1].tag+=tree[rt].tag;\n        tree[rt<<1].sum+=tree[rt].tag*ln;\n        tree[rt<<1|1].sum+=tree[rt].tag*rn;\n        tree[rt].tag=0;\n    }\n}\n\nvoid change(int L,int R,int C,int l,int r,int rt)\n{\n    if (L<=l && r<=R){\n        tree[rt].sum+=(r-l+1)*C; tree[rt].tag+=C; return;\n    }\n    int mid=(l+r)>>1;\n    pushdown(rt,mid-l+1,r-mid);\n    if (L<=mid) change(L,R,C,l,mid,rt<<1);\n    if (R>mid)  change(L,R,C,mid+1,r,rt<<1|1);\n    pushup(rt);\n}\n\nint ques(int x,int l,int r,int rt)\n{\n    if (l==r && x==l) return tree[rt].sum;\n    int mid=(l+r)>>1;\n    pushdown(rt,mid-l+1,r-mid);\n    if (x<=mid) return ques(x,l,mid,rt<<1);\n    else return ques(x,mid+1,r,rt<<1|1);\n}\n\nint main()\n{\n\tmemset(head,-1,sizeof(head));\n    scanf(\"%d\",&n); \n    for (int i=1; i<=n-1; i++)\n    {\n        int x,y; scanf(\"%d%d\",&x,&y);\n        add_edge(x,y); add_edge(y,x);\n\t}\n//  for (int i=0; i<=num_edge; i++) printf(\"%d: %d %d\\n\",i,edge[i^1].to,edge[i].to);\n    dfs(1,0);\n    for (int i=1; i<=n; i++)\n    {\n    \tint x; scanf(\"%d\",&x);// printf(\"%d %d\\n\",dfn[x],dfn[x]+tot[x]-1);\n\t\tprintf(\"%d\\n\",ques(dfn[x],1,n,1));\n\t\tchange(dfn[x],dfn[x]+tot[x]-1,1,1,n,1);\n\t}\n//    for (int i=1; i<=n; i++) printf(\"%d %d\\n\",idfn[i],tot[idfn[i]]);\n    return 0;\n}\n```\n\n\n\u603b\u7ed3\n-\n\u6211\u8003\u8651\u5230\u4e86\u5982\u679c\u4f7f\u7528\u66b4\u529b\u7684\u8bdd\u76f8\u5f53\u4e8e\u628a\u6bcf\u4e2a\u70b9\u6807\u8bb0\u4e00\u4e2a\u6df1\u5ea6\uff0c\u7136\u540e\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u65e0\u5411\u56fe\u8fdb\u884c\u641c\u7d22\uff0c\u4e0edfs\u5e8f\u6709\u76f8\u901a\u4e4b\u5904\uff1b\n\n\u901a\u8fc7\u8fd9\u9053\u9898\u7ec8\u4e8e\u660e\u767d\u4e86\u6811\u94fe\u5256\u5206\u4e2ddfn\u6570\u7ec4\u7684\u7528\u5904",
        "postTime": 1522199074,
        "uid": 48036,
        "name": "\u79cb\u65e5\u79c1\u8bed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2982 \u3010[USACO10FEB]\u6162\u4e0b\u6765Slowing down\u3011"
    },
    {
        "content": "\u533a\u95f4\u4fee\u6539\u5355\u70b9\u67e5\u8be2\u5c45\u7136\u6ca1\u4eba\u5199zkw\u7ebf\u6bb5\u6811\uff1b\n\n\u6211\u4eec\u5148\u786e\u5b9a\u6570\u636e\u8d21\u732e\u7684\u8303\u56f4\uff0c\u5bf9\u67d0\u8282\u70b9\u7684\u725b\u4f1a\u4e14\u53ea\u4f1a\u5f71\u54cd\u4ee5\u8be5\u8282\u70b9\u4e3a\u6839\u7684\u6574\u68f5\u5b50\u6811\uff1b\n\n\u6811\u4e0a\u95ee\u9898\u6211\u4eec\u901a\u5e38\u9700\u8981\u7528\u5230dfs\u5e8f\uff1b\n\n\u5bf9\u4e8e\u4e00\u68f5\u6811\u6765\u8bf4\uff0c\u67d0\u8282\u70b9\u53ca\u5176\u5b50\u6811\u7684dfs\u5e8f\u5fc5\u7136\u5728\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\u5185\uff0c\u539f\u56e0\u662fdfs\u904d\u5386\u65f6\u5148\u904d\u5386\u6839\u8282\u70b9\uff0c\u540e\u904d\u5386\u5b50\u6811\u7684\u5404\u4e2a\u8282\u70b9\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9dfs\u5e8f\u8fdb\u884c\u64cd\u4f5c\u4e86\u3002\n\n\u4e0a\u4ee3\u7801\u2193\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nconst int MAXN=(1<<17)-1;\n\nint n,x,y,np;\nint tree[MAXN<<1],tp[MAXN],siz[MAXN],h[MAXN];\nstruct rpg{\n    int li,nx;\n}a[MAXN<<1];\n\ninline int read(){\n\tint x=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}return x;\n}\n\nvoid add(int ls,int nx){\n    a[++np]=(rpg){h[ls],nx};\n    h[ls]=np;\n}\n\nvoid dfs(int x){\n    tp[x]=++tp[0];\n    siz[x]=1;\n    for(int i=h[x];i;i=a[i].li){\n        if(!tp[a[i].nx]){\n            dfs(a[i].nx);\n            siz[x]+=siz[a[i].nx];\n        }\n    }return;\n}\n\nvoid init(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<n;++i){\n        x=read(),y=read();\n        add(x,y);add(y,x);\n    }return;\n}\n\nvoid solve(){\n    dfs(1);\n    for(int i=1;i<=n;++i){\n    \tx=read();\n    \tint ct=tp[x]+MAXN,sum=0;\n    \twhile(ct){\n    \t\tsum+=tree[ct];\n    \t\tct>>=1;\n\t\t}printf(\"%d\\n\",sum);\n        int l=MAXN+tp[x]-1,r=MAXN+tp[x]+siz[x];\n        while(l^r^1){\n        \tif(~l&1) ++tree[l^1];\n        \tif(r&1) ++tree[r^1];\n        \tint ct=min(tree[l],tree[l^1]);\n        \ttree[l]-=ct;tree[l^1]-=ct;\n        \ttree[l>>=1]+=ct;\n        \tct=min(tree[r],tree[r^1]);\n        \ttree[r]-=ct;tree[r^1]-=ct;\n        \ttree[r>>=1]+=ct;\n\t\t}while(l){\n\t\t\tint ct=min(tree[l],tree[l^1]);\n\t\t\ttree[l]-=ct;tree[l^1]-=ct;\n\t\t\ttree[l>>=1]+=ct;\n\t\t}\n\t}return;\n}\n\nint main(){\n    init();\n    solve();\n    return 0;\n}\n```",
        "postTime": 1522136195,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2982 \u3010[USACO10FEB]\u6162\u4e0b\u6765Slowing down\u3011"
    },
    {
        "content": "\u7528$dfs$\u5e8f\u50a8\u5b58\u6bcf\u4e2a\u70b9\u52301\u53f7\u70b9\u7684\u8ddd\u79bb\u548c\u8def\u7ebf\uff0c\u56e0\u4e3a\u6ca1\u6709\u503c\u6240\u4ee5\u53ea\u7528\u50a8\u5b58\u61d2\u6807\u8bb0\n\n\u61d2\u6807\u8bb0\u8868\u793a$1$\u53f7\u70b9\u5230\u81ea\u5df1\u519c\u573a\u8fd9\u6bb5\u533a\u95f4\u6709\u591a\u5c11\u56de\u5230\u519c\u573a\u7684\u725b\uff0c\u5f53\u4e00\u5934\u725b\u8d70\u65f6\u76ee\u6807\u70b9$+1$\uff0c\u5e76\u987a\u4fbf\u4e0b\u63a8\u61d2\u6807\u8bb0\n\n ![](https://a-failure.github.io/img/study/slowdown.png) \n\n\u5982\u56fe\u6240\u793a\uff08\u6837\u4f8b\uff09\uff0c\u5f53\u53bb$2$\u7684\u725b\u8d70\u65f6\uff0c\u5fc5\u5b9a\u7ecf\u8fc7$4$\u53f7\u70b9\uff0c$4$\u53f7\u70b9\u5df2\u7ecf\u6709\u725b\u4e86\uff0c\u6240\u4ee5\u4e0b\u63a8\u6807\u8bb0\uff0c$5$\u53f7\u70b9\u3001$2$\u53f7\u70b9\u61d2\u6807\u8bb0\u5404$+1$\n\n\u6700\u540e\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u61d2\u6807\u8bb0\n\n\u4ee3\u7801\uff1a\n```\n# include<iostream>\n# include<cstdio>\n# include<cstring>\nusing namespace std;\nstruct p{\n    int x,y;\n}c[200001];\nstruct q{\n    int dfn,l;\n}d[100001];\nint n,num,tot;\nint lazy[400001],h[100001];\nvoid add(int x,int y)\n{\n    c[++num].x=h[x];\n    c[num].y=y;\n    h[x]=num;\n}\nvoid dfs(int x)\n{\n    d[x].dfn=++tot;\n    for(int i=h[x];i;i=c[i].x)\n      if(!d[c[i].y].dfn)\n      dfs(c[i].y),d[x].l+=d[c[i].y].l;\n}\nvoid down(int k)\n{\n    lazy[k<<1]+=lazy[k];\n    lazy[k<<1|1]+=lazy[k];\n    lazy[k]=0;\n}\nvoid change(int x,int y,int k,int l,int r)\n{\n    if(l>=x&&r<=y)\n    {\n        lazy[k]++;\n        return;\n    }\n    if(lazy[k]) down(k);\n    int mid=(l+r)>>1;\n    if(x<=mid) change(x,y,k<<1,l,mid);\n    if(y>mid) change(x,y,k<<1|1,mid+1,r); \n}\nint ask(int x,int k,int l,int r)\n{\n    if(l==r)\n    return lazy[k];\n    if(lazy[k]) down(k);\n    int mid=(l+r)>>1;\n    if(x<=mid) return ask(x,k<<1,l,mid);\n    else return ask(x,k<<1|1,mid+1,r);\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n      d[i].l=1;\n    for(int i=1;i<n;i++)\n      {\n          int x,y;\n          cin>>x>>y;\n          add(x,y);\n          add(y,x);\n      }\n    dfs(1);\n    for(int i=1;i<=n;i++)\n      {\n          int x;\n          cin>>x;\n          cout<<ask(d[x].dfn,1,1,n)<<endl;\n          change(d[x].dfn,d[x].dfn+d[x].l-1,1,1,n);\n      }\n    return 0;\n}\n```\n\u4e5f\u53ef\u4ee5\u7528\u6811\u94fe\u5256\u5206\u505a\n\n\u5904\u7406\u51fa\u6bcf\u4e00\u6761\u94fe\u540e\uff0c\u6bcf\u6b21\u56de\u81ea\u5df1\u519c\u573a\u65f6\uff0c\u5256\u5206\u7edf\u8ba1\u533a\u95f4\u548c\uff0c\u7136\u540e\u81ea\u5df1\u519c\u573a\u503c$+1$\n\n\u8dd1\u7684\u8fd8\u4e0d\u6162\uff0c$O_2$\u540e$200ms$\u5de6\u53f3\n\n\u4ee3\u7801\uff1a\n```\n# include<iostream>\n# include<cstdio>\n# include<cstring>\n#define mid ((l+r)>>1)\n#define tl (k<<1)\n#define tr (k<<1|1)\n#define ini inline int\n#define inv inline void\n#define is isdigit(ch)\nusing namespace std;\nconst int MAX=1e5+1;\nstruct p{\n    int x;\n}s[MAX<<2];\nstruct q{\n    int x,y;\n}c[MAX<<1];\nint n,num,cnt;\nint h[MAX],id[MAX],top[MAX],son[MAX],fa[MAX],siz[MAX],d[MAX];\nini read()\n{\n    int x=0;\n    char ch=getchar();\n    while(!is) ch=getchar();\n    while(is)\n    {\n        x=x*10+ch-48;\n        ch=getchar();\n    }\n    return x;\n}\ninv add(int x,int y)\n{\n    c[++num].x=h[x];\n    c[num].y=y;\n    h[x]=num;\n}\nvoid dfs(int x,int f)\n{\n    d[x]=d[f]+1;\n    fa[x]=f;\n    siz[x]=1;\n    for(int i=h[x];i;i=c[i].x)\n      {\n          int y=c[i].y;\n          if(y==f) continue;\n          dfs(y,x);\n          siz[x]+=siz[y];\n          if(siz[son[x]]<siz[y])\n          son[x]=y;\n      }\n}\nvoid dfs1(int x,int tp)\n{\n    top[x]=tp;\n    id[x]=++cnt;\n    if(son[x]) dfs1(son[x],tp);\n    for(int i=h[x];i;i=c[i].x)\n      {\n          int y=c[i].y;\n          if(y==fa[x]||y==son[x]) continue;\n          dfs1(y,y);\n      }\n}\ninv pus(int k)\n{\n    s[k].x=s[tl].x+s[tr].x;\n}\nvoid change(int l,int r,int k,int x)\n{\n    if(l==r)\n    {\n        s[k].x++;\n        return;\n    }\n    if(x<=mid) change(l,mid,tl,x);\n    else change(mid+1,r,tr,x);\n    pus(k);\n}\nint ask(int l,int r,int k,int L,int R)\n{\n    if(l>=L&&r<=R)\n    return s[k].x;\n    if(l>R||r<L) return 0;\n    return ask(l,mid,tl,L,R)+ask(mid+1,r,tr,L,R);\n}\nint ASK(int x,int y)\n{\n    int ans=0;\n    while(top[x]!=top[y])\n    {\n        if(d[top[x]]<d[top[y]]) swap(x,y);\n        ans+=ask(1,n,1,id[top[x]],id[x]);\n        x=fa[top[x]];\n    }\n    if(d[x]>d[y]) swap(x,y);\n    ans+=ask(1,n,1,id[x],id[y]);\n    return ans;\n}\nint main()\n{\n    n=read();\n    for(int i=1;i<n;i++)\n      {\n          int x=read(),y=read();\n          add(x,y);\n          add(y,x);\n      }\n    dfs(1,0);\n    dfs1(1,1);\n    for(int i=1;i<=n;i++)\n      {\n          int x=read();\n          printf(\"%d\\n\",ASK(1,x));\n          change(1,n,1,id[x]);\n      }\n    return 0;\n}\n```\n",
        "postTime": 1514078762,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2982 \u3010[USACO10FEB]\u6162\u4e0b\u6765Slowing down\u3011"
    }
]