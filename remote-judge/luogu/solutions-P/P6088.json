[
    {
        "content": "\u63d0\u4f9b\u7b2c\u4e8c\u79cd\u89e3\u6cd5\uff1a\u7b80\u5355 $\\text{stl}$\uff0c$\\text{hash}$\uff0c\u6811\u5256\u3002\n\n#### \u524d\u8a00\n\n- \u548c\u6211\u4e0a\u4e00\u7bc7\u9898\u89e3\u4e0d\u592a\u4e00\u6837\uff0c\u8fd9\u7bc7\u9898\u89e3\u66f4\u504f\u5411\u4e8e\u8bb2\u505a\u6cd5\uff0c\u4f1a\u987a\u5e26\u63d0\u53ca\u60f3\u5230\u8fd9\u79cd\u505a\u6cd5\u7684\u5fc3\u8def\u5386\u7a0b\u3002\u539f\u56e0\u6700\u540e\u8bf4\u3002\n\n---\n\n#### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u4e00\u68f5\u65e0\u6839\u6811\uff0c\u8fb9\u6709\u5b57\u7b26\u4e32\u6743\u503c\uff0c\u591a\u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u5b57\u7b26\u4e32 $s$\uff0c\u6c42\u6811\u4e0a\u4e24\u70b9\u95f4\u8def\u5f84\u4e2d\u4ee5 $s$ \u4e3a\u524d\u7f00\u7684\u8fb9\u6570\u3002\n\n$n,q \\le 10^5$\uff0c **\u6240\u6709\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u8d85\u8fc7 $10$\uff0c\u53ea\u542b\u5c0f\u5199\u5b57\u6bcd\u3002**\n\n---\n\n#### \u505a\u9898\u601d\u8003\n\n\u770b\u9898\uff0c\u9898\u9762\u770b\u5b8c\u6ca1\u4ec0\u4e48\u60f3\u6cd5\uff0c\u7b2c\u4e00\u773c\u53ea\u60f3\u5230\u4e86 $O(n \\times len)$ \u9884\u5904\u7406 $\\text{hash}$ \u503c\uff0c$O(nq)$ \u66b4\u529b\u67e5\u8be2\u3002\n\n\u524d\u7f00\u5339\u914d\u95ee\u9898\uff0c\u770b\u770b\u80fd\u4e0d\u80fd\u4e0a $\\text{AC}$ \u81ea\u52a8\u673a\u4e4b\u7c7b\u7684\u4e1c\u897f\uff1f\u597d\u50cf\u4e0d\u592a\u884c\u3002\n\n\u7b2c\u4e00\u65f6\u95f4\u6ca1\u6709\u60f3\u5230 $\\text{trie}$ \uff0c\u601d\u8def\u65ad\u6389\u3002\n\n\u770b\u773c\u6570\u636e\u8303\u56f4\u6709\u6ca1\u6709\u7279\u6b8a\u4e4b\u5904\u3002\u201c\u8f93\u5165\u6240\u6709\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u8d85\u8fc7 $10$ \u4e14\u53ea\u5305\u542b `a~z` \u7684\u5c0f\u5199\u5b57\u6bcd\u3002\u201d\n\n\u957f\u5ea6\u4e0d\u8d85\u8fc7 $10$ \uff1f\u90a3\u6211\u7684\u9884\u5904\u7406\u5c31\u80fd\u63a5\u53d7\u4e86\u554a\uff01\u80fd\u4e0d\u80fd\u4f18\u5316\u4e00\u4e0b\u67e5\u8be2\uff1f\n\n\u6811\u4e0a\u4e24\u70b9\uff0c\u8be2\u95ee\u662f\u6c42\u6570\u91cf\uff0c\u6709\u53ef\u52a0\u6027\uff0c\u90a3\u53ef\u4ee5\u4e0a\u6811\u5256\u554a\uff01\n\n\u4f46\u662f\u7ebf\u6bb5\u6811\u600e\u4e48\u5199\uff1f\u628a\u6240\u6709\u5b57\u7b26\u4e32\u90fd\u8bb0\u4e00\u904d\uff1f\u4e0d\u73b0\u5b9e\u3002\n\n\u90a3\u5c31\u6362\u4e2a\u6570\u636e\u7ed3\u6784\uff01\u4f46\u662f\u7528\u4ec0\u4e48\u5462\uff1f\n\n\u8fd9\u65f6\u5019\u662f\u62fc\u5e95\u8574\u7684\u65f6\u5019\u4e86\u3002\u5982\u679c\u4f60\u505a\u8fc7[\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/P5838)\u5e76\u4ed4\u7ec6\u770b\u4e86\u9898\u89e3\uff0c\u4f60\u5e94\u8be5\u53d1\u73b0\u5728\u7b2c\u4e00\u9875\u6700\u4e0b\u9762\u6709[Fzzzz](https://www.luogu.com.cn/user/174045)\u7684\u53e6\u7c7b\u505a\u6cd5\u3002 $\\text{vector}$ \u5b58\u6bcf\u4e2a\u54c1\u79cd\u5728\u6811\u5256\u5e8f\uff08\u5c31\u662f $\\text{dfs}$ \u5e8f\uff09 \u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u67e5\u8be2\u5c31\u5728\u8df3 $\\text{top}$ \u65f6\u4e8c\u5206\u67e5\u627e \u9876\u90e8\u548c\u5e95\u90e8\u7684 $\\text{dfs}$ \u5e8f\u5728\u8be2\u95ee\u54c1\u79cd\u7684 $\\text{vector}$ \u4e2d\u7684\u4f4d\u7f6e\u5dee\u3002\u4ed6\u7684\u505a\u6cd5\u5728\u90a3\u9053\u9898\u4e2d\u8868\u73b0\u4f18\u79c0\uff0c\u975e\u5e38\u4fbf\u4e8e\u7f16\u5199\u548c\u8c03\u8bd5\u3002\n\n\u56de\u5230\u8fd9\u9898\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u501f\u7528\u8fd9\u79cd\u65b9\u6cd5\u3002\u5148\u628a\u8fb9\u6743\u8f6c\u4e3a\u70b9\u6743\uff0c\u7136\u540e\u5c06\u6811\u5256\u7684\u7ebf\u6bb5\u6811\u6362\u6210 $\\text{vector}$\uff0c\u628a\u8be2\u95ee\u5b57\u7b26\u4e32\u7684 $\\text{hash}$ \u503c\u79bb\u6563\u5316\u540e\u4f5c\u4e3a $\\text{vector}$ \u7684\u4e0b\u6807\uff0c\u6bcf\u6b21\u67e5\u8be2\u5728 $\\text{vector}$ \u4e0a\u4e8c\u5206\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n \\times len\\ +\\ q \\log n)$\u3002\n\n\u4e0d\u8981\u5fd8\u4e86\u628a\u6bcf\u4e2a\u70b9\u7684 $\\text{dfs}$ \u5e8f\u52a0\u5165 $\\text{vector}$ \u540e\u8981\u6392\u5e8f\u3002\n\n\u6ce8\u610f $\\text{vector}$ \u7684\u5927\u5c0f\u3002\n\n\u6ce8\u610f\u4e8c\u5206\u7684\u5199\u6cd5\u3002\n\n\u8bb0\u5f97\u6700\u540e\u628a $\\text{lca}$ \u7684\u8d21\u732e\u51cf\u6389\u3002\n\n---\n\n#### \u4ee3\u7801\n\n\u4ee3\u7801\u91cc\u4f7f\u7528\u4e86 $\\text{map}$ \u79bb\u6563\u5316\uff0c\u5e38\u6570\u7565\u5927\uff0c\u4e0d\u5f00 $\\text{O2}$ \u6700\u5927\u70b9\u9700\u8981 $1.9s$\uff0c\u5f00\u4e86\u9700\u8981 $650ms$\u3002~~\u4f46\u662f\u65f6\u9650 $2s$\uff0c\u6ca1\u60f3\u5230\u5427~~\n\n\u4ee3\u7801\u8f83\u957f\uff0c\u539f\u56e0\u662f\u6811\u5256\u548c $\\text{hash}$ \u9884\u5904\u7406\u957f\u5ea6\u8f83\u5927\u3002\n\n\u76f8\u4fe1\u542c\u61c2\u4e86\u5c31\u4e0d\u9700\u8981\u6ce8\u91ca\u3002\n\n\u4e0d\u52a0\u53cd\u4f5c\u5f0a~~\u8c01\u6284\u8fd9\u4e2a\u8be1\u5f02\u7684\u505a\u6cd5\u554a~~\u3002\n\n```\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#include<vector>\n#include<map>\ntypedef unsigned long long ull;\nconst int maxn=1e5+5;\nconst int maxm=maxn*2+5;\nconst int maxl=1e1+5;\nconst int jz=131;\nstruct edge{\n\tint to;\n\tint next;\n\tchar str[maxl];\n\tvoid out(){\n\t\tfor(int i=1;i<=(int)strlen(str+1);i++)printf(\"%c\",str[i]);\n\t\tputs(\"\");\n\t\treturn;\n\t}\n}qxx[maxm];\nint qxx_cnt,h[maxn];\nvoid add(int x,int y,char *s){\n\tint len=strlen(s+1);\n\tqxx_cnt++;\n\tfor(int i=1;i<=len;i++)qxx[qxx_cnt].str[i]=s[i];\n\tqxx[qxx_cnt].to=y;\n\tqxx[qxx_cnt].next=h[x];\n\th[x]=qxx_cnt;\n\treturn;\n}\nvoid ad(int x,int y,char *s){\n\tadd(x,y,s);\n\tadd(y,x,s);\n\treturn;\n}\null hash[maxn][maxl];\nchar up[maxn][maxl];\nint d[maxn],size[maxn],fa[maxn],son[maxn];\nvoid init(int x,int f){\n\td[x]=d[f]+1;\n\tsize[x]=1;\n\tfa[x]=f;\n\tfor(int i=h[x];i;i=qxx[i].next){\n\t\tint v=qxx[i].to;\n\t\tif(v==f)continue;\n\t\tint len=strlen(qxx[i].str+1);\n\t\thash[v][0]=1;\n\t\tfor(int j=1;j<=len;j++)up[v][j]=qxx[i].str[j];\n\t\tfor(int j=1;j<=len;j++)hash[v][j]=hash[v][j-1]*jz+(int)qxx[i].str[j];\n\t\tinit(v,x);\n\t\tsize[x]+=size[v];\n\t\tif(size[v]>size[son[x]])son[x]=v;\n\t}\n\treturn;\n}\nint dfn[maxn],top[maxn];\nint alt;\nvoid topen(int x,int tp){\n\ttop[x]=tp;\n\tdfn[x]=++alt;\n\tif(son[x])topen(son[x],tp);\n\tfor(int i=h[x];i;i=qxx[i].next){\n\t\tint v=qxx[i].to;\n\t\tif(v==fa[x]||v==son[x])continue;\n\t\ttopen(v,v);\n\t}\n\treturn;\n}\nstd::vector<int>apr[maxn*maxl];\nstd::map<ull,int>mp;\nint mcnt;\nint n,q;\nint get(int l,int r,ull nhash){\n\tint id=mp[nhash];\n\tint rig=std::upper_bound(apr[id].begin(),apr[id].end(),r)-apr[id].begin(),\n\t\tlef=std::lower_bound(apr[id].begin(),apr[id].end(),l)-apr[id].begin();\n\treturn rig-lef;\n}\nint tian(int x,int y,char *str){\n\tull nhash=1;\n\tint len=strlen(str+1);\n\tfor(int i=1;i<=len;i++)nhash=nhash*jz+(int)str[i];\n\tif(!mp[nhash])return 0;\n\tint ans=0;\n\twhile(top[x]!=top[y]){\n\t\tif(d[top[x]]<d[top[y]])std::swap(x,y);\n\t\tans+=get(dfn[top[x]],dfn[x],nhash);\n\t\tx=fa[top[x]];\n\t}\n\tif(d[x]<d[y])std::swap(x,y);\n\tans+=get(dfn[y],dfn[x],nhash);\n\tans-=(hash[y][len]==nhash);\n\treturn ans;\n}\nsigned main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n-1;i++){\n\t\tint x,y;\n\t\tchar str[maxl];\n\t\tscanf(\"%d%d %s\",&x,&y,str+1);\n\t\tad(x,y,str);\n\t}\n\tinit(1,1);\n\ttopen(1,1);\n\tfor(int i=2;i<=n;i++){\n\t\tint len=(int)strlen(up[i]+1);\n\t\tfor(int j=1;j<=len;j++){\n\t\t\tif(!mp[hash[i][j]])mp[hash[i][j]]=++mcnt;\n\t\t\tapr[mp[hash[i][j]]].push_back(dfn[i]);\n\t\t}\n\t}\n\tfor(int i=1;i<=mcnt;i++)std::sort(apr[i].begin(),apr[i].end());\n\tscanf(\"%d\",&q);\n\tfor(int i=1;i<=q;i++){\n\t\tint x,y;\n\t\tchar str[maxl];\n\t\tscanf(\"%d%d %s\",&x,&y,str+1);\n\t\tprintf(\"%d\\n\",tian(x,y,str));\n\t}\n\treturn 0;\n}\n```\n\n---\n\n#### \u4e3a\u4ec0\u4e48\u4f1a\u60f3\u5230\u8fd9\u4e2a\u505a\u6cd5\n\n\u56e0\u4e3a\u4e0a\u6765\u60f3\u5230\u4e86 $\\text{hash}$ \uff0c\u4e00\u770b\u957f\u5ea6\u5f88\u5c0f\u53d1\u73b0\u53ef\u884c\uff0c\u95ee\u9898\u76f4\u63a5\u8f6c\u5316\u4e3a\u8be2\u95ee\u4e00\u4e2a\u6570\u5728\u6811\u4e0a\u4e24\u70b9\u95f4\u8def\u5f84\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u8fd9\u5c31\u662f\u4e0a\u9762\u90a3\u9898\u3002\n\n\u63a8\u8350\u628a\u4e0a\u9898\u4e5f\u505a\u4e86\u3002\n\n\u611f\u8c22\u4f60\u7684\u9605\u8bfb\uff0c\u518d\u89c1\uff01",
        "postTime": 1624071388,
        "uid": 293810,
        "name": "serene_analysis",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6088 \u3010[JSOI2015]\u5b57\u7b26\u4e32\u6811\u3011"
    },
    {
        "content": "### [\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P6088)\n\n### \u524d\u7f6e\u6280\u80fd\uff1aLCA, \u53ef\u6301\u4e45\u5316 Trie\n\n### \u7b80\u8981\u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u6811\u4e0a\u6bcf\u6761\u8fb9\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f60\u9700\u8981\u6c42\u51fa\u4efb\u610f\u4e24\u4e2a\u8282\u70b9\u8def\u5f84\u4e0a\u6709\u591a\u5c11\u8fb9\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\u4ee5\u7ed9\u5b9a\u5b57\u7b26\u4e32\u4e3a\u524d\u7f00\u3002\n\n- \u6811\u4e0a\u8def\u5f84\u67e5\u8be2\u95ee\u9898\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684\u601d\u8def\uff1a\u6c42\u51fa\u4e24\u4e2a\u7ed9\u5b9a\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u7b54\u6848\uff0c\u518d\u51cf\u53bb\u91cd\u590d\u7684\u7b54\u6848\uff08LCA \u5230\u6839\u8282\u70b9\u7684\u90a3\u4e00\u6bb5\uff0c\u6839\u636e\u6bcf\u9053\u9898\u53ef\u80fd\u7a0d\u6709\u4e0d\u540c\uff09\u3002\n\n- \u4e8e\u662f\u95ee\u9898\u5c31\u53d8\u6210\u4e86\uff1a\u6c42\u51fa\u7ed9\u5b9a\u70b9\u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u6709\u591a\u5c11\u6761\u8fb9\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\u4ee5\u7ed9\u5b9a\u5b57\u7b26\u4e32\u4e3a\u524d\u7f00\u3002\n\n- \u5f88\u5bb9\u6613\u60f3\u5230 Trie\u3002\u800c\u6811\u4e0a\u4e00\u5171\u6709 $(n - 1)$ \u6761\u4ee5\u6839\u8282\u70b9\u4e3a\u7aef\u70b9\u7684\u94fe\uff0c\u800c\u4e14\u6709\u6781\u5927\u90e8\u5206\u91cd\u590d\u3002\u8003\u8651\u53ef\u6301\u4e45\u5316 Trie\u3002\n\n### \u4ee3\u7801\n\n```cpp\nenum Max { N = 100000, LogN = 17, Len = 10 }; enum Inf { Inf = N + 1 };\nunsigned int n, q;\nusing namespace std;\n# include <cmath>\n# include <iostream>\n# include <string>\n# define log log_by_9u46_MX\nunsigned char log;\n\nclass Trie_Tree {\nprivate:\n    enum Char_Type_N { Char_Type_N = 26 };\n    typedef unsigned int ID_Type;\n    typedef unsigned int Size_Type;\n    struct Point {\n        ID_Type daughter[Char_Type_N];\n        Size_Type size;\n        Point() {\n            for (unsigned char register i(0); i < Char_Type_N; ++i) daughter[i] = 0;\n            size = 0;\n        }\n    } p[N * Len + 1];\n    ID_Type root[N + 1];\n    ID_Type length;\npublic:\n    Trie_Tree() { p[root[1] = ++(length = 0)].size = 0; }\n    void const inline Insert(string const s, ID_Type const mother, ID_Type const x) {\n        ID_Type from(root[mother]), to(root[x] = ++length);\n        for (unsigned char register i(0); i < s.length(); ++i) {\n            for (unsigned char register j(0); j < Char_Type_N; ++j) p[to].size += p[p[to].daughter[j] = p[from].daughter[j]].size;\n            ++p[to].size, from = p[from].daughter[s[i] - 'a'], to = p[to].daughter[s[i] - 'a'] = ++length;\n        }\n        ++p[to].size;\n    }\n    unsigned int const inline Query(string const s, ID_Type const x) {\n        ID_Type t(root[x]);\n        for (unsigned char register i(0); i < s.length(); ++i) t = p[t].daughter[s[i] - 'a'];\n        return p[t].size;\n    }\n} trie;\n# include <vector>\nstruct Point {\n    struct Edge {\n        unsigned int to;\n        string str;\n        Edge() { str.clear(); }\n        Edge(unsigned int const to, string const str) { this->to = to, this->str = str; }\n    };\n    unsigned int mother[LogN];\n    unsigned int depth;\n    vector<Edge> out;\n    Point() {\n        for (unsigned char register i(0); i < LogN; ++i) mother[i] = 0;\n        depth = 0, out.clear();\n    }\n} p[N + 1];\n\nvoid const inline add(unsigned int const, unsigned int const, string const);\nvoid const inline in() {\n    cin >> n, log = log2(n);\n    for (unsigned int register i(1); i < n; ++i) {\n        unsigned int u, v; string s;\n        cin >> u >> v >> s;\n        add(u, v, s);\n    }\n}\n\nvoid const search(unsigned int const x = 1, unsigned int const from = 0) {\n    p[x].depth = p[from].depth + 1, p[x].mother[0] = from;\n    for (unsigned char register i(1); i <= log; ++i) p[x].mother[i] = p[p[x].mother[i - 1]].mother[i - 1];\n    for (unsigned int register i(0); i < p[x].out.size(); ++i) {\n        if (p[x].out[i].to == from) continue;\n        trie.Insert(p[x].out[i].str, x, p[x].out[i].to);\n        search(p[x].out[i].to, x);\n    }\n}\n\nunsigned int const inline LCA(unsigned int, unsigned int);\nvoid const inline solve() {\n    unsigned int u, v; string s;\n    cin >> u >> v >> s;\n    cout << trie.Query(s, u) + trie.Query(s, v) - trie.Query(s, LCA(u, v)) * 2 << endl;\n}\n\nsigned int main() {\n    in(), search();\n    cin >> q;\n    for (unsigned int register i(0); i < q; ++i) solve();\n    return 0;\n}\n\nvoid const inline add(unsigned int const a, unsigned int const b, string const s) {\n    p[a].out.push_back(Point::Edge(b, s)), p[b].out.push_back(Point::Edge(a, s));\n}\n# include <algorithm>\nunsigned int const inline LCA(unsigned int x, unsigned int y) {\n    if (p[x].depth < p[y].depth) swap(x, y);\n    for (signed char register i(log); p[x].depth > p[y].depth; --i)\n        if (p[p[x].mother[i]].depth >= p[y].depth) x = p[x].mother[i];\n    if (x == y) return x;\n    for (signed char register i(log); i >= 0; --i)\n        if (p[x].mother[i] not_eq p[y].mother[i]) x = p[x].mother[i], y = p[y].mother[i];\n    return p[x].mother[0];\n}\n```",
        "postTime": 1582686552,
        "uid": 321004,
        "name": "Houraisan_Kaguya",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6088"
    },
    {
        "content": "\u8c8c\u4f3c\u9898\u89e3\u533a\u8fd8\u6ca1\u4eba\u5199\u6211\u8fd9\u4e2a\u505a\u6cd5\uff1f\n\n\u9898\u610f\u5927\u6982\u662f\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6bcf\u6761\u8fb9\u4e0a\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6bcf\u6b21\u7ed9\u4e24\u4e2a\u70b9\u548c\u4e00\u4e2a\u65b0\u5b57\u7b26\u4e32\uff0c\u95ee\u4e24\u70b9\u8def\u5f84\u4e0a\u6709\u591a\u5c11\u5b57\u7b26\u4e32\u4ee5\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e3a\u524d\u7f00\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8be2\u95ee\u662f\u4e00\u6761\u94fe\u5f88\u96be\u53d7\uff0c\u56e0\u6b64\u8003\u8651\u5148\u6811\u5256\uff0c\u628a $u\\to v$ \u7684\u8def\u5f84\u5256\u6210 $O(\\log n)$ \u6bb5 $\\text{DFS}$ \u5e8f\u8fde\u7eed\u7684\u6bb5\uff0c\u7136\u540e\u76f8\u5f53\u4e8e\u5728 $\\text{DFS}$ \u5e8f\u4e0a\u505a $O(q\\log n)$ \u6b21\u533a\u95f4\u67e5\u8be2\u3002\n\n\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\u67e5\u8be2\u533a\u95f4 $[l,r]$ \u4e2d\u4ee5 $S$ \u4e3a\u524d\u7f00\u7684\u5b57\u7b26\u4e32\u4e2a\u6570\u3002\n\n\u8003\u8651\u5dee\u5206\u4e00\u6ce2\uff0c\u53d8\u6210 $[1,r]$ \u7684\u7b54\u6848\u51cf\u53bb $[1,l-1]$ \u7684\u7b54\u6848\uff0c\u7136\u540e\u4ece $1$ \u5f00\u59cb\u505a\u626b\u63cf\u7ebf\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a $\\text{Trie}$\uff0c\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u4e00\u4e2a\u8be2\u95ee\u5c31\u76f8\u5f53\u4e8e\u95ee\u6b64\u65f6 $\\text{Trie}$ \u91cc\u9762\u6709\u591a\u5c11\u4e2a\u5b57\u7b26\u4e32\u4ee5\u5b83\u4e3a\u524d\u7f00\u3002\u8fd9\u4e2a\u5c5e\u4e8e $\\text{Trie}$ \u7684\u57fa\u64cd\uff0c\u76f4\u63a5\u5199\u5c31\u884c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(L\\times (n+q)\\log n)$\uff0c\u5176\u4e2d $L=10$ \u4e3a\u5b57\u7b26\u4e32\u7684\u6700\u5927\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f $\\text{Trie}$ \u6811\u7684\u9ad8\u5ea6\u3002\n\n\u4ee3\u7801\u5e76\u4e0d\u662f\u5f88\u96be\u5199\uff0c\u867d\u7136\u6211\u5199\u4e86 $125$ \u884c\uff0c\u4f46\u662f\u5927\u90e8\u5206\u5176\u5b9e\u90fd\u662f\u677f\u5b50=\\_=\n\n```cpp\n#include<bits/stdc++.h>\n\n#define int long long\n\nusing namespace std;\n\ninline int read(){\n\tint x=0,f=1;char c=getchar();\n\tfor(;(c<'0'||c>'9');c=getchar()){if(c=='-')f=-1;}\n\tfor(;(c>='0'&&c<='9');c=getchar())x=x*10+(c&15);\n\treturn x*f;\n}\n\nconst int MN=1e5+5;\n\nstruct Trie{\n\tint d[MN*10][26],tot,siz[MN*10];\n\n\tvoid clear(){memset(d,0,sizeof(d)),tot=1,memset(siz,0,sizeof(siz));}\n\n\tvoid ins(string str){\n\t\tint len=str.size(),p=1;\n\t\tfor(int i=0;i<len;i++){\n\t\t\tint c=str[i]-'a';siz[p]++;\n\t\t\tif(!d[p][c])d[p][c]=++tot;\n\t\t\tp=d[p][c];\n\t\t}\n\t\tsiz[p]++;\n\t}\n\n\tint find(string str){\n\t\tint len=str.size(),y=1,p=1;\n\t\tfor(int i=0;i<len;i++){\n\t\t\tint c=str[i]-'a';\n\t\t\tif(!d[p][c]){y=0;break;}\n\t\t\tp=d[p][c];\n\t\t}\n\t\tif(y==0)return 0;\n\t\telse return siz[p];\n\t}\n}tree;\n\nstruct Edge{\n\tint to;string str;\n\tEdge(int T,string S):to(T),str(S){}\n\tEdge(){}\n};\n\nvector<Edge>G[MN];\nint dep[MN],fa[MN],dfn[MN],siz[MN],top[MN],hson[MN];\nstring wei[MN],val[MN];\n\nint dfs1(int u,int de){\n\tdep[u]=de,siz[u]=1;\n\tfor(auto e:G[u]){\n\t\tint v=e.to;string w=e.str;\n\t\tif(v==fa[u])continue;\n\t\tfa[v]=u,wei[v]=w,siz[u]+=dfs1(v,de+1);\n\t\tif(siz[v]>siz[hson[u]])hson[u]=v;\n\t}\n\treturn siz[u];\n}\n\nint tot=0;\nvoid dfs2(int u,int tp){\n\tdfn[u]=++tot,top[u]=tp,val[tot]=wei[u];\n\tif(hson[u])dfs2(hson[u],tp);\n\tfor(auto e:G[u]){\n\t\tint v=e.to;\n\t\tif(v!=fa[u]&&v!=hson[u])dfs2(v,v);\n\t}\n}\n\nstruct Node{\n\tint f,id;string str;\n\tNode(int F,int I,string S):f(F),id(I),str(S){}\n\tNode(){}\n};\nvector<Node>q[MN];\n\nint n,Q,ans[MN];\n\nvoid add(int u,int v,int id,string str){\n\twhile(top[u]!=top[v]){\n\t\tif(dep[top[u]]<dep[top[v]])swap(u,v);\n\t\tint l=dfn[top[u]],r=dfn[u];\n\t\tq[l-1].push_back(Node(-1,id,str));\n\t\tq[r].push_back(Node(1,id,str));\n\t\tu=fa[top[u]];\n\t}\n\tif(dep[u]>dep[v])swap(u,v);\n\tint l=dfn[u]+1,r=dfn[v];\n\tq[l-1].push_back(Node(-1,id,str));\n\tq[r].push_back(Node(1,id,str));\n}\n\nsigned main(void){\n\n#ifndef ONLINE_JUDGE\n\tfreopen(\"in.in\",\"r\",stdin);\n#endif\n\n\tcin>>n;\n\tfor(int i=1;i<=n-1;i++){\n\t\tint u,v;string s;cin>>u>>v>>s;\n\t\tG[u].push_back(Edge(v,s)),G[v].push_back(Edge(u,s));\n\t}\n\tdfs1(1,1),dfs2(1,1);\n\n\tcin>>Q;\n\tfor(int i=1;i<=Q;i++){\n\t\tint u,v;string s;cin>>u>>v>>s;\n\t\tadd(u,v,i,s);\n\t}\n\n\ttree.clear();\n\tfor(int i=2;i<=n;i++){\n\t\ttree.ins(val[i]);\n\t\tfor(auto x:q[i])ans[x.id]+=x.f*tree.find(x.str);\n\t}\n\n\tfor(int i=1;i<=Q;i++)cout<<ans[i]<<endl;\n\n\treturn 0;\n}\n```",
        "postTime": 1646975505,
        "uid": 307453,
        "name": "\u4e91\u6d45\u77e5\u5904",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6088 JSOI2015 \u5b57\u7b26\u4e32\u6811"
    },
    {
        "content": "\u53d1\u73b0\u5b57\u7b26\u4e32\u957f\u5ea6\u5f88\u5c0f\uff0c\u8003\u8651\u54c8\u5e0c\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\u76f8\u5f53\u4e8e\u6c42\u51fa $x$ \u5230 $y$ \u8def\u5f84\u4e0a\u7684\u5b57\u7b26\u4e32\u524d\u7f00\u957f\u5ea6\u4e3a $\\left|S\\right|$ \u4e14\u54c8\u5e0c\u503c\u4e0e $S$ \u76f8\u7b49\u7684\u4e2a\u6570\u3002\n\n\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u505a\u6cd5\u662f\u628a\u54c8\u5e0c\u503c\u79bb\u6563\u5316\uff0c\u5f00 $10$ \u4e2a\u4e3b\u5e2d\u6811\uff0c\u7b2c $i$ \u4e2a\u8bb0\u5f55\u6bcf\u4e2a\u957f\u5ea6\u4e3a $i$ \u7684\u54c8\u5e0c\u503c\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u548c [Count on a tree](https://www.luogu.com.cn/problem/P2633) \u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u6ce8\u610f\u8fd9\u91cc\u8fb9\u6743\u8f6c\u70b9\u6743\u4e4b\u540e\u67e5\u8be2\u65f6\u662f\u51cf\u53bb\u4e24\u500d\u7684 LCA \u800c\u4e0d\u662f LCA \u548c\u5b83\u7684\u7236\u4eb2\u3002\n\n\u8bb0 $m=\\sum\\left|S\\right|$\uff0c\u65f6\u95f4 $O\\left(m\\log m+q\\log m\\right)$\uff0c\u7a7a\u95f4 $O(m\\log m)$\u3002\n\n\u867d\u7136\u8fd9\u6837\u5df2\u7ecf\u8fc7\u4e86\uff0c\u4f46\u662f\u8fd9\u6837\u7a7a\u95f4\u5f00\u9500\u5f88\u5927\u3002\n\n\u53ef\u4ee5\u628a\u8be2\u95ee\u62c6\u6210\u6c42\u4ece\u6839\u5230 $x$\uff0c\u6839\u5230 $y$ \u548c \u6839\u5230 LCA \u4e09\u6761\u8def\u5f84\u4e0a\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u7136\u540e\u79bb\u7ebf\u4e0b\u6765\u5c31\u53d8\u6210\u4e86\u5355\u70b9\u4fee\u6539\u5355\u70b9\u67e5\u8be2\uff0c\u5f00\u4e2a\u6876\u8bb0\u5f55\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u65f6\u95f4 $O(m\\log m+q)$\uff0c\u7a7a\u95f4 $O(m)$\u3002\n\n[\u4e3b\u5e2d\u6811](https://www.luogu.com.cn/paste/29xetp34)\n\n[\u79bb\u7ebf\u505a\u6cd5](https://www.luogu.com.cn/paste/sv74udlc)\n\n\u95f2\u8bdd\uff1a\n\n\u4e00\u5f00\u59cb\u6211\u5199\u4e86\u4e2a\u4e3b\u5e2d\u6811 RE \u4e86 4 \u4e2a\u70b9\uff0c\u6211\u4ee5\u4e3a\u662f\u4e3b\u5e2d\u6811\u7a7a\u95f4\u592a\u5927\u4e86\uff0c\u53c8\u5199\u4e86\u4e2a\u79bb\u7ebf\u505a\u6cd5\uff0c\u7ed3\u679c\u8fd8\u662f RE\u3002\u6700\u540e\u8c03\u4e86\u534a\u5929\u624d\u53d1\u73b0\u662f\u79bb\u6563\u5316\u6570\u7ec4\u5f00\u5c0f\u4e86\uff08",
        "postTime": 1632138175,
        "uid": 150843,
        "name": "\u5510\u4e00\u6587",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6088 \u3010[JSOI2015]\u5b57\u7b26\u4e32\u6811\u3011"
    },
    {
        "content": "# \u5b57\u7b26\u4e32\u6811-\u9898\u89e3\n\n### \u9898\u9762\n\n\u4e00\u68f5\u6811\uff0c$n$ \u4e2a\u70b9\uff0c$n-1$ \u6761\u8fb9\uff0c\u6bcf\u6761\u8fb9\u5bf9\u5e94\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002$m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u4e24\u4e2a\u70b9 $x,y$ \u548c\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$\uff0c\u56de\u7b54 $x$ \u5230 $y$ \u8def\u5f84\u4e0a\u7684\u6240\u6709\u5b57\u7b26\u4e32\u4e2d\u4ee5s\u4e3a\u524d\u7f00\u7684\u6709\u591a\u5c11\u4e2a\u3002\n\n### \u5206\u6790\n\n\u524d\u7f00 $\\to$ Trie Hash\n\n\u6811\u4e0a\u6700\u77ed\u8def\u5f84 $\\to$ LCA\n\nLCA \u5f88\u597d\u6c42\uff0c\u53ef\u4ee5\u7528\u500d\u589e\u3001\u6811\u5256\u3001Tarjan \u79bb\u7ebf\u8fd9\u4e9b\u7b97\u6cd5\u3002\u63a5\u4e0b\u6765\u5206\u6790\u5982\u4f55\u7edf\u8ba1\u8def\u5f84\u4e0a\u7684\u4fe1\u606f\u3002\n\n\u9700\u8981\u6c42\u7684\u6ee1\u8db3\u533a\u95f4\u52a0\u51cf\u6027\uff0c\u5b9a\u4e49 $Ans(x\\to y)$ \u8868\u793a\u8fd9\u6761\u94fe\u4e0a\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u901a\u8fc7\u7b80\u5355\u7684\u5bb9\u65a5\u53ef\u5f97 :\n\n$$\nAns(x\\to LCA(x,y)\\to y)=Ans(root\\to x)+Ans(root\\to y)-2Ans(root\\to LCA(x,y))\n$$\n\n\u73b0\u5728\u53ea\u9700\u8981\u89e3\u51b3\u4ece\u6839\u8282\u70b9\u5230\u5b50\u8282\u70b9\u4e4b\u95f4\u7684\u6c42\u89e3\u4e86\u3002\n\n\u7ed9\u6bcf\u4e00\u4e2a\u8282\u70b9\u5efa\u4e00\u68f5 Trie\uff0c\u50a8\u5b58\u4ece\u6839\u8282\u70b9\u5230\u6b64\u8282\u70b9\u7ecf\u8fc7\u7684\u5b57\u7b26\u4e32\u3002\u8fd9\u4e2d\u95f4\u6709\u6781\u591a\u7684\u91cd\u590d\u90e8\u5206\uff0c\u53ef\u4ee5\u6539\u6210\u53ef\u6301\u4e45\u5316 Trie\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u4ee5\u5b83\u7684\u7236\u4eb2\u8282\u70b9\u4e3a\u57fa\u7840\uff0c\u52a0\u4e0a\u5b83\u7236\u4eb2\u4e0e\u5b83\u8fde\u8fb9\u4e0a\u7684\u5b57\u7b26\u4e32\u3002\n\n\u5c31\u597d\u4e86\uff01\u590d\u6742\u5ea6\u4e3a $O(Q\\log N)$\n\n#### \u4ee3\u7801\u53ca\u6ce8\u91ca\n\n```cpp\n#include<bits/stdc++.h>\n\nusing std::string;\nusing std::vector;\nusing std::pair;\n\nint n,q;\nclass Trie{\npublic:\n    int c[30];\n    int num;\n}t[3000000];//\u53ef\u6301\u4e45\u5316Trie\nint Tcnt;\nint rt[100005];\nint Rcnt;\nvoid ins(int p,string s){//\u63d2\u5165\n    q=++Tcnt;rt[++Rcnt]=q;\n    for(char c:s){\n        t[q]=t[p];\n        ++t[q].num;\n        t[q].c[c-'a']=++Tcnt;\n        p=t[p].c[c-'a'],q=t[q].c[c-'a'];\n    }\n    t[q]=t[p];\n    ++t[q].num;\n}\nint pre(int p,string s){//\u524d\u9a71\u4e2a\u6570\uff08\u5c31\u5b58\u5728num\u91cc\u9762\uff09\n    for(char c:s){\n        p=t[p].c[c-'a'];\n    }\n    return t[p].num;\n}\n\nclass Node{\npublic:\n    vector<pair<int,string>> c;\n    int fa[20];\n    int dp;\n    int rt;\n}a[100005];\nvoid dfs(int x){//LCA\u521d\u59cb\u5316\n    for(int i=1;i<20;++i){\n        a[x].fa[i]=a[a[x].fa[i-1]].fa[i-1];\n    }\n    a[x].dp=a[a[x].fa[0]].dp+1;\n    \n    a[x].rt=rt[Rcnt];\n    for(pair<int,string> i:a[x].c){\n        int v=i.first;\n        if(v!=a[x].fa[0]){\n            a[v].fa[0]=x;\n            ins(a[x].rt,i.second);\n            dfs(v);\n        }\n    }\n}\nint lca(int x,int y){//LCA\n    if(a[x].dp<a[y].dp)return lca(y,x);\n    for(int i=19;i>=0;--i){\n        if(a[a[x].fa[i]].dp>=a[y].dp)\n            x=a[x].fa[i];\n    }\n    if(x==y)return y;\n    for(int i=19;i>=0;--i){\n        if(a[x].fa[i]!=a[y].fa[i])\n            x=a[x].fa[i],y=a[y].fa[i];\n    }\n    return a[x].fa[0];\n}\n\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<n;++i){\n        int u,v;string s;\n        scanf(\"%d%d\",&u,&v);std::cin>>s;\n        a[u].c.push_back({v,s}),a[v].c.push_back({u,s});\n    }\n    dfs(1);\n    scanf(\"%d\",&q);\n    while(~--q){\n        int u,v;string s;\n        scanf(\"%d%d\",&u,&v);std::cin>>s;\n        int w=lca(u,v);\n        printf(\"%d\\n\",pre(a[u].rt,s)+pre(a[v].rt,s)-2*pre(a[w].rt,s));//\u4e0a\u6587\u63a8\u7684\u5bb9\u65a5\n    }\n    return 0;\n}\n```\n \n",
        "postTime": 1654591252,
        "uid": 492662,
        "name": "Endt_or_endt",
        "ccfLevel": 5,
        "title": "\u5b57\u7b26\u4e32\u6811-\u9898\u89e3"
    },
    {
        "content": "\u9898\u76ee\u8981\u6211\u4eec\u6c42\u7684\u662f $x$ \u5230 $y$ \u7684\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u4e0e\u7ed9\u5b9a\u5b57\u7b26\u4e32\u76f8\u540c\u7684\u6570\u91cf\u3002\n\n\u89c2\u5bdf\u53d1\u73b0\uff0c\u7b54\u6848\u8981\u6ee1\u8db3\u4e24\u4e2a\u8981\u6c42\uff1a\n\n1\u3001\u5b57\u7b26\u4e32\u8981\u5728 $x$ \u5230 $y$ \u7684\u6700\u77ed\u8def\u5f84\u4e0a\u3002\n\n\u6700\u77ed\u8def\u5f84\uff1f\uff1f\u4f60\u60f3\u5230\u4e86\u4ec0\u4e48\uff1f\n\n\u5bf9\uff0c\u6211\u4eec\u5e73\u65f6\u6c42\u6811\u4e0a\u4e24\u70b9\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u65f6\u5c31\u662f\u6c42 $x$ \u3001$y$ \u548c\u4ed6\u4eec\u7684 $LCA$ \u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u52a0\u52a0\u51cf\u51cf\u5373\u53ef\u3002\u90a3\u4e48\u5982\u679c\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u5408\u6cd5\u5b57\u7b26\u4e32\u7684\u6570\u91cf\uff0c\u90a3\u4e48\u7b54\u6848\u4e5f\u5c31\u51fa\u6765\u4e86\u3002\n\n2\u3001\u7ed9\u5b9a\u5b57\u7b26\u4e32\u662f\u8be5\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u3002\n\n\u524d\u7f00\uff1f\uff1f\u6709\u4ec0\u4e48\u4e1c\u897f\u53ef\u4ee5\u5feb\u901f\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u591a\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u5462\uff1f\n\n\u53ef\u4ee5\u60f3\u5230\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u3002\n\n\u90a3\u4e48\u7ef4\u62a4\u5b57\u7b26\u4e32\u7684\u6570\u636e\u7ed3\u6784\u5c31\u5bb9\u6613\u60f3\u5230\u5b57\u5178\u6811\u4e86\u3002\n\n\u90a3\u4e48\u5224\u65ad\u5408\u6cd5\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\u4e5f\u5c31\u89e3\u51b3\u4e86\u3002\n\n\u4f46\u662f\u5982\u679c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u90fd\u5f00\u4e00\u4e2a\u5b57\u5178\u6811\u7684\u8bdd\uff0c\u5f88\u660e\u663e\u7a7a\u95f4\u4f1a\u70b8\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e00\u4e2a\u8282\u70b9\u7684\u5b57\u5178\u6811\u72b6\u6001\u4e0e\u5b83\u7684\u7236\u8282\u70b9\u7684\u5b57\u5178\u6811\u72b6\u6001\u662f\u6709\u8054\u7cfb\u7684\uff0c\u5c31\u662f\u591a\u4e86\u5b83\u5230\u5b83\u7236\u4eb2\u7684\u8def\u5f84\u4e0a\u7684\u5b57\u7b26\u4e32\u561b\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u5b57\u5178\u6811\u770b\u505a\u662f\u4e00\u4e2a\u5386\u53f2\u7248\u672c\uff0c\u90a3\u4e48\u5efa\u8bfe\u53ef\u6301\u4e45\u5316\u5b57\u5178\u6811\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nstruct node{int last,en,next;char s[11];} e[200001];\nstruct trie{int last,en,next;} tr[20000001];\nint n,x,y,q,f[100001][18],tot,dep[100001],root[100001],t[20000001][2],tot1,tot2,len;\nchar s[11];\nvoid add(int x,int y,char *s)\n{\n\te[++tot].en=y;\n\tfor (int i=1;i<=len;i++)\n\t\te[tot].s[i]=s[i];\n\te[tot].next=e[x].last;\n\te[x].last=tot;\n}\nvoid add1(int x,int y)\n{\n\ttr[++tot1].en=y;\n\ttr[tot1].next=tr[x].last;\n\ttr[x].last=tot1;\n}\nvoid change(int k1,int k,int x,int z)\n{\n\tt[k][0]=t[k1][0]+1;\n\tif (x>len) return;\n\tint kk=0;\n\tfor (int i=tr[k1].last;i;i=tr[i].next)\n\t\tif (t[tr[i].en][1]!=e[z].s[x]-96) add1(k,tr[i].en);\n\t\telse kk=tr[i].en;\n\tt[++tot2][1]=e[z].s[x]-96;\n\tadd1(k,tot2);\n\tchange(kk,tot2,x+1,z);\n}\nvoid dfs(int x,int fa)\n{\n\tdep[x]=dep[fa]+1;\n\tfor (int i=e[x].last;i;i=e[i].next)\n\t\tif (e[i].en!=fa)\n\t\t{\n\t\t\tf[e[i].en][0]=x;\n\t\t\tlen=strlen(e[i].s+1);\n\t\t\troot[e[i].en]=++tot2;\n\t\t\tchange(root[x],root[e[i].en],1,i);\n       \t\t\tdfs(e[i].en,x);\n\t\t}\n}\nint lca(int x,int y)\n{\n\tif (dep[x]<dep[y]) swap(x,y);\n\tfor (int i=17;i>=0;i--)\n\t\tif (dep[f[x][i]]>=dep[y]) x=f[x][i];\n\tif (x==y) return x;\n\tfor (int i=17;i>=0;i--)\n\t\tif (f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\nint query(int k,int x)\n{\n\tint kk=0;\n\tfor (int i=tr[k].last;i;i=tr[i].next)\n\t\tif (t[tr[i].en][1]==s[x]-96)\n\t\t{\n\t\t\tkk=tr[i].en;\n\t\t\tbreak;\n\t\t}\n\tif (kk)\n\t{\n\t\tif (x==len) return t[kk][0];\n\t\telse return query(kk,x+1);\n\t}\n\treturn 0;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tscanf(\"%s\",s+1);\n\t\tlen=strlen(s+1);\n\t\tadd(x,y,s);add(y,x,s);\n\t}\n\tdfs(1,0);\n\tfor (int j=1;j<=17;j++)\n\t\tfor (int i=1;i<=n;i++)\n\t\t\tf[i][j]=f[f[i][j-1]][j-1];\n\tscanf(\"%d\",&q);\n\tfor (int i=1;i<=q;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tscanf(\"%s\",s+1);\n\t\tlen=strlen(s+1);\n\t\tint z=lca(x,y);\n\t\tprintf(\"%d\\n\",query(root[x],1)+query(root[y],1)-query(root[z],1)*2);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1582191144,
        "uid": 157857,
        "name": "ImmortalWatcher",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6088 \u3010[JSOI2015]\u5b57\u7b26\u4e32\u6811\u3011"
    },
    {
        "content": "## P6088 \u9898\u89e3\n\n~~\u867d\u7136\u6811\u5256 + \u53ef\u6301\u4e45\u5316 trie \u7684\u5199\u6cd5\u9898\u89e3\u6709\uff0c\u4f46\u8c8c\u4f3c\u5b9e\u73b0\u7ec6\u8282\u548c\u6211\u7684\u5e76\u4e0d\u4e00\u6837\uff0c\u8fd9\u91cc\u4e5f\u8bb2\u4e00\u4e0b\u5427~~\n~~\u8fd9\u7bc7\u9898\u89e3\u4e3b\u8981\u5f15\u5bfc\u4e00\u4e0b\u4e0d\u4f1a\u53ef\u6301\u4e45\u5316 trie \u7684\u670b\u53cb~~\n\n\u4e3b\u8981\u601d\u8def\u662f\u53ef\u6301\u4e45\u5316 trie \u548c\u6811\u5256\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u4e0d\u53ea\u7528 LCA\uff1f\u5176\u5b9e\u6811\u5256\u8981\u5feb\u4e00\u70b9\u70b9\uff08\u597d\u5427\u5176\u5b9e\u662f\u6211\u5f53\u65f6\u6ca1\u6709\u60f3\u5230\u600e\u4e48\u53ea\u7528 LCA\uff09\u3002\u5982\u679c\u60a8\u8fd8\u4e0d\u4f1a trie \u6216\u8005\u4e0d\u4f1a\u6811\u5256\u2026\u2026\u6211\u89c9\u5f97\u53ef\u4ee5\u53bb\u770b\u770b\u522b\u7684\u9898\u89e3\u6216\u8005\u8865\u5145\u76f8\u5173\u77e5\u8bc6\u518d\u6765\u5199\u8fd9\u9053\u9898\u3002\n\n#### \u9898\u610f\n\n\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u6811\u4e0a\u6bcf\u4e00\u6761\u8fb9\u5bf9\u5e94\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a $x, y$ \u548c\u5b57\u7b26\u4e32 $s$\uff0c\u8be2\u95ee $x, y$ \u4e4b\u95f4\u6709\u591a\u5c11\u5b57\u7b26\u4e32\u4ee5 $s$ \u4e3a\u524d\u7f00\u3002\n\n#### \u4ebf\u70b9\u70b9\u89e3\u6790\n\n\u5982\u679c\u4f60\u5230\u73b0\u5728\u8fd8\u6ca1\u6709\u663e\u8457\u601d\u8def\uff0c\u6216\u8005\u662f\u4e0d\u4f1a\u53ef\u6301\u4e45\u5316 trie\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u8003\u8651\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\u7684\u7b80\u5355\u7248\uff1a  \n\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4 $str$\uff0c\u7ed9\u5b9a\u533a\u95f4 $l, r$ \u4e0e\u524d\u7f00 $s$\uff0c\u6c42 $s_l$ \u5230 $s_r$ \u4e4b\u95f4\u6709\u591a\u5c11\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u4e3a $s$\u3002\n\n\u6700\u66b4\u529b\u7684\u601d\u8def\u5c31\u662f\u4ece $l$ \u904d\u5386\u5230 $r$ \u67e5\u770b\u6709\u591a\u5c11\u5b57\u7b26\u4e32\u7b26\u5408\u6761\u4ef6\uff0c\u4f46\u662f\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(qn^2)$ \u663e\u7136\u4f1aT\u3002\n\n\u6216\u8005\u53ef\u4ee5\u5efa\u7acb n \u68f5\u5b57\u5178\u6811\uff0c\u7b2c $i$ \u68f5\u5b57\u5178\u6811\u5185\u5305\u542b\u7740\u524d\u9762\u6240\u6709\u5b57\u7b26\u4e32\u7684\u4fe1\u606f\u3002\u8fd9\u6837\u6211\u4eec\u5728\u67e5\u8be2\u7684\u65f6\u5019\u5c31\u53ea\u9700\u8981\u83b7\u53d6\u7b2c $r$ \u68f5\u5b57\u5178\u6811\u5185\u5339\u914d\u6570\u91cf\u4e0e \u7b2c $l - 1$ \u68f5\u5b57\u5178\u6811\u5185\u5339\u914d\u6570\u91cf\u7684\u5dee\u3002\n\n\u5982\u4f8b\u5b50 $\\{aba, abb, acb\\}$\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u51e0\u68f5\u5b57\u5178\u6811\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/k0i3cbgw.png)\n\n\u5f53\u6211\u4eec\u67e5\u8be2 $1, 3$ \u4e2d\u4ee5 $ab$ \u4e3a\u524d\u7f00\u7684\u5b57\u7b26\u4e32\u6570\u91cf\u65f6\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u7b2c 3 \u68f5\u5b57\u5178\u6811\u4e2d\u7684\u5339\u914d\u6570 2\uff0c\u7b2c 0 \u68f5\u5b57\u5178\u6811\u4e2d\u7684\u5339\u914d\u6570 0\uff0c\u76f8\u51cf\u5f97\u5230\u7b54\u6848\u3002\n\n\u4e0d\u8fc7\u8fd9\u6837\u5b50\u5199\u4e0d\u4ec5\u5728\u5185\u5b58\u4e0a\u4e0d\u4f18\u79c0\uff0c\u5728\u6bcf\u6b21\u62f7\u8d1d\u5b57\u5178\u6811\u65f6\u4e5f\u4f1a\u6d6a\u8d39\u8fc7\u591a\u65f6\u95f4\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6bd4\u8f83\u8ba8\u5de7\u7684\u624b\u6bb5\uff1a\u6bcf\u6b21\u53ea\u5c06\u81ea\u5df1\u4fee\u6539\u4e86\u7684\u8282\u70b9\u7684\u4fe1\u606f\u5305\u62ec\u5176\u8fde\u51fa\u7684\u8fb9\u91cd\u65b0\u62f7\u8d1d\u4e00\u904d\u3002\u5982\u5728\u63d2\u5165\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32 $abb$ \u65f6\uff0c\u53ef\u4ee5\u4ece\u7b2c\u4e00\u68f5\uff08\u7b2c\u4e00\u4e2a\u7248\u672c\uff09\u5b57\u5178\u6811\u4e2d\u62f7\u8d1d\u8282\u70b9 $a$ \u548c $ab$ \u540e\u8fdb\u884c\u4fee\u6539\u3002\u6700\u540e\u7ed3\u679c\u5c31\u50cf\u4e0b\u9762\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/r7b7eilp.png)\n\n\u5f53\u63d2\u5165\u7b2c\u4e09\u4e2a\u5b57\u7b26\u4e32\u65f6\uff0c\u5f88\u7b80\u5355\u7684\u5c31\u53ef\u4ee5\u5f97\u5230\u8fd9\u5f20\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/5cro2hct.png)\n\n\u5efa\u8bae\u81ea\u5df1\u624b\u63a8\u4e00\u904d\u540e\u81ea\u5df1\u5b9e\u73b0\u4ee3\u7801\u3002\u4f46\u662f\u8fd9\u91cc\u7ed9\u51fa\u6211\u7684\u5efa\u6811\u65b9\u5f0f\uff1a\n\n``` cpp\nconst int kMaxN = 1e6;\n\n// root[i] \u8868\u793a\u7b2c i \u4e2a\u7248\u672c\u7684\u5b57\u5178\u6811\u7684\u6839\u8282\u70b9\nint root[kMaxN];\nint cnt[kMaxN];\nint next[kMaxN][26];\nint tot = 0;\n\nvoid insert(const std::string& str, int pre, int now, int i = 0) {\n  cnt[now] = cnt[pre]; // \u4ece\u4e0a\u4e00\u4e2a\u7248\u672c\u90a3\u91cc\u62f7\u8d1d\u4e00\u4efd\n  memcpy(next[now], next[pre], sizeof(next[now])); // \u4ece\u4e0a\u4e00\u4e2a\u7248\u672c\u90a3\u91cc\u62f7\u8d1d\u4e00\u4efd\n  cnt[now]++; // \u5bf9\u5f53\u524d\u8282\u70b9\u4fee\u6539\n  if (i >= str.size()) return;\n  char v = str[i] - 'a';\n  // \u7531\u4e8e next[now][v] \u662f\u4f1a\u88ab\u4fee\u6539\u7684\uff0c\u4e3a\u4e86\u4e0d\u5f71\u54cd\u4e0a\u4e00\u4e2a\u7248\u672c\uff0c\u4f1a\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\n  next[now][v] = ++tot;\n  insert(str, next[pre][v], next[now][v], i + 1);\n}\n```\n\u67e5\u8be2\uff1a\n``` cpp\nint query(const std::string& str, int now, int i = 0) {\n  if (i >= str.size() || now == 0) return cnt[now];\n  return query(str, next[now][str[i] - 'a'], i + 1);\n}\n```\n\n\u73b0\u5728\u6211\u4eec\u56de\u5230\u5f31\u5316\u7248\u7684\u9898\u76ee\u4e0a\u6765\u3002\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u5b9e\u73b0\u53ef\u6301\u4e45\u5316 trie\uff0c\u8fd9\u6837\u6211\u4eec\u5728\u8be2\u95ee $l, r, s$ \u65f6\u5c31\u53ef\u4ee5\u4ece $r$ \u7248\u672c $l - 1$ \u7248\u672c\u83b7\u53d6\u5bf9\u5e94\u7684\u5339\u914d\u6570\u91cf\u3002\n\n``` cpp\nint query(int l, int r, const std::string& str) {\n  return query(str, root[r]) - query(str, root[l - 1]);\n}\n```\n\n\u539f\u9898\u76ee\u7684\u4e00\u90e8\u5206\u5df2\u7ecf\u88ab\u89e3\u51b3\u3002\u63a5\u4e0b\u6765\u53ea\u9700\u8981\u7528\u6811\u5256\u5c06\u6574\u68f5\u6811\u62bd\u6210\u4e00\u4e2a\u5e8f\u5217\uff0c\u7136\u540e\u6bcf\u6b21\u67e5\u8be2 $x, y$ \u65f6\u76f8\u5f53\u4e8e\u8f6c\u5316\u4e3a\u5728\u4e00\u4e2a\u5e8f\u5217\u4e0a\u505a\u82e5\u5e72\u6b21\u533a\u95f4\u8be2\u95ee\u3002  \n\u4e0d\u8fc7\u7531\u4e8e\u9898\u76ee\u662f\u67e5\u8be2\u5339\u914d\u7684\u8fb9\uff0c\u4f46\u662f\u6811\u5256\u66f4\u9002\u5408\u5904\u7406\u70b9\u4e0a\u4fe1\u606f\u3002\u6240\u4ee5\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u70b9\u7684\u5b57\u7b26\u4e32\u662f\u5b83\u4e0e\u5b83\u7236\u4eb2\u76f8\u8fde\u7684\u90a3\u6761\u8fb9\u7684\u5b57\u7b26\u4e32\uff08\u6839\u7ed3\u70b9\u7684\u5b57\u7b26\u4e32\u4e3a\u7a7a\uff09\uff0c\u7ed9\u51fa\u6837\u4f8b\u7684\u56fe\u5e2e\u52a9\u7406\u89e3\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lveday35.png)\n\n\u5f53\u6211\u4eec\u67e5\u8be2\u7ed3\u70b9 $x, y$ \u4e4b\u95f4\u6709\u591a\u5c11\u8def\u5f84\u4ee5 $s$ \u4e3a\u524d\u7f00\uff0c\u5c31\u53ef\u4ee5\u5229\u7528\u6811\u5256\u6765\u8fdb\u884c\u533a\u95f4\u67e5\u8be2\uff1a\n\n``` cpp\nint ask(int x, int y, const std::string& str) {\n  int ans = 0;\n  while (top[x] != top[y]) {\n    if (depth[top[x]] < depth[top[y]]) std::swap(x, y);\n    ans += query(dfn[top[x]], dfn[x], str);\n    x = fa[top[x]];\n  }\n  if (depth[x] > depth[y]) std::swap(x, y);\n  ans += query(dfn[x], dfn[y], str);\n  ans -= query(dfn[x], dfn[x], str);\n  return ans;\n}\n```\n\n\u7531\u4e8e\u6211\u4eec\u5c06\u6bcf\u4e2a\u70b9\u7684\u5b57\u7b26\u4e32\u8bbe\u5b9a\u4e3a\u5b83\u4e0e\u5b83\u7236\u4eb2\u7684\u8fde\u8fb9\uff0c\u6240\u4ee5 $x$ \u4e0e $y$ \u7684 LCA \u662f\u4e0d\u80fd\u8ba1\u5165\u7b54\u6848\u7684\uff0c\u6700\u540e\u8981\u51cf\u6389 LCA \u7684\u503c\u3002\n\n\u5168\u90e8\u4ee3\u7801\u5c31\u4e0d\u653e\u4e86\uff08\u6700\u4e3b\u8981\u7684\u4e00\u4e9b\u4ee3\u7801\u90fd\u5df2\u7ecf\u7ed9\u5b8c\u4e86qwq\uff09[AC\u8bb0\u5f55](https://www.luogu.com.cn/record/90752132)\uff0c\u4ea4\u7684\u65f6\u5019\u662f\u6700\u4f18\u89e3\uff0c~~\u53ef\u80fd\u662f\u5361\u5e38\u5361\u51fa\u6765\u7684~~\n\n~~\u7b2c\u4e00\u6b21\u5199\u7d2b\u9898\u9898\u89e3\uff0c\u597d\u7d27\u5f20~~\n\n",
        "postTime": 1666312901,
        "uid": 311721,
        "name": "YCSluogu",
        "ccfLevel": 6,
        "title": "P6088 \u9898\u89e3"
    },
    {
        "content": "\u53ef\u6301\u4e45\u5316 trie \u6811\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u7b54\u6848\u662f\u6709\u53ef\u51cf\u6027\u7684\uff0c\u5982\u679c $a,b,c$ \u4e09\u70b9\u662f\u539f\u6811\u4e00\u6761\u94fe\u6df1\u5ea6\u9012\u589e\u7684\u4e09\u4e2a\u70b9\uff0c\u90a3\u4e48 $Ans_{b,c}=Ans_{a,c} - Ans_{a,b}$\u3002\n\n\u4e8e\u662f\u60f3\u5230\u7528 [\u53ef\u6301\u4e45\u5316 trie \u6811](https://oi-wiki.org//ds/persistent-trie/) \u7ef4\u62a4\u6bcf\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u5b57\u7b26\u4e32\u3002trie \u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u7ecf\u8fc7\u5f53\u524d\u8282\u70b9\u7684\u5b57\u7b26\u4e32\u6709\u591a\u5c11\u4e2a\u3002\u67e5\u8be2\u7684\u8fd4\u56de\u65f6\u5019\u524d\u7f00\u5b57\u7b26\u4e32\u7684\u7ec8\u70b9\u8282\u70b9\u7684\u7ef4\u62a4\u503c\u5373\u53ef\u3002\n\n\u67e5\u8be2 $Ans_{u,v}$ \u7684\u65f6\u5019\uff0c\u8bbe $u,v$ \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u4e3a $lc$\uff0c\u5219 $Ans_{u,v} = Ans_{root,u} + Ans_{root,v} - 2 * Ans_{root,lc}$\u3002\n\n\u7136\u540e\u5199\u4e2a [\u500d\u589e\u6216\u8005\u6811\u5256](https://oi-wiki.org//graph/lca/) \u6c42 lca \u5c31\u5b8c\u4e86\u3002\n\nCode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\ntemplate <class T> inline void read(T &x)\n{\n\tx = 0;\n\tint f = 0;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9')\n\t{\n\t\tf |= ch == '-';\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9')\n\t{\n\t\tx = x * 10 + (ch - 48);\n\t\tch = getchar();\n\t}\n\tx = f ? -x : x;\n\treturn;\n}\n#define N 100005\nint ch[N << 4][26], val[N << 4], cnt;\nvoid clone(int &x)\n{\n\tcnt++;\n\tmemcpy(ch[cnt], ch[x], sizeof(ch[x]));\n\tval[cnt] = val[x];\n\tx = cnt;\n\treturn;\n}\ninline void insert(int *x, char *s)\n{\n\tfor(int i = 1; i <= (int)strlen(s + 1); i++)\n\t{\n\t\tclone(*x);\n\t\tval[*x]++;\n\t\tx = &ch[*x][s[i] - 'a'];\n\t}\n\tclone(*x);\n\tval[*x]++;\n\treturn;\n}\ninline int query(int x, char *s)\n{\n\tfor(int i = 1; i <= (int)strlen(s + 1); i++)\n\t{\n\t\tx = ch[x][s[i] - 'a'];\n\t}\n\treturn val[x];\n}\nint first[N], Next[N << 1], to[N << 1], tot;\nchar w[N << 1][15];\ninline void add(int x, int y, char z[15])\n{\n\tNext[++tot] = first[x];\n\tfirst[x] = tot;\n\tto[tot] = y;\n\tmemcpy(w[tot], z, 15);\n\treturn;\n}\nint dep[N], fa[N][18], RT[N];\nvoid dfs(int u)\n{\n\tfor(int i = 1; (1 << i) <= dep[u]; i++)\n\t{\n\t\tfa[u][i] = fa[fa[u][i - 1]][i - 1];\n\t}\n\tfor(int i = first[u]; i; i = Next[i])\n\t{\n\t\tint v = to[i];\n\t\tif(dep[v])\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tRT[v] = RT[u];\n\t\tinsert(&RT[v], w[i]);\n\t\tdep[v] = dep[u] + 1;\n\t\tfa[v][0]= u;\n\t\tdfs(v);\n\t}\n\treturn;\n}\nint lca(int x, int y)\n{\n\tif(dep[x] > dep[y])\n\t{\n\t\tswap(x, y);\n\t}\n\tfor(int i = 17; i >= 0; i--)\n\t{\n\t\tif(dep[fa[y][i]] >= dep[x])\n\t\t{\n\t\t\ty = fa[y][i];\n\t\t}\n\t}\n\tif(x == y)\n\t{\n\t\treturn x;\n\t}\n\tfor(int i = 17; i >= 0; i--)\n\t{\n\t\tif(fa[x][i] != fa[y][i])\n\t\t{\n\t\t\tx = fa[x][i], y = fa[y][i];\n\t\t}\n\t}\n\treturn fa[x][0];\n}\nint n, q;\nsigned main()\n{\n//\tfreopen(\"strings.in\", \"r\", stdin);\n//\tfreopen(\"strings.out\", \"w\", stdout);\n\tread(n);\n\tint u, v;\n\tchar w[15];\n\tfor(int i = 1; i < n; i++)\n\t{\n\t\tread(u), read(v), scanf(\"%s\", w + 1);\n\t\tadd(u, v, w), add(v, u, w);\n\t}\n\tdep[1] = 1;\n\tdfs(1);\n\tread(q);\n\twhile(q--)\n\t{\n\t\tread(u), read(v), scanf(\"%s\", w + 1);\n\t\tint lc = lca(u, v);\n\t\tprintf(\"%d\\n\", query(RT[u], w) + query(RT[v], w) - 2 * query(RT[lc], w));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1648976201,
        "uid": 90027,
        "name": "GG_jok_er",
        "ccfLevel": 0,
        "title": "P6088 [JSOI2015]\u5b57\u7b26\u4e32\u6811 \u9898\u89e3"
    },
    {
        "content": "\u6c34\u6c34\u6c34\u6c34\u6c34\u9898\u89e3\u3002\n\n#### \u975e\u5b8c\u7f8e\u505a\u6cd5\uff01\n\n\u8fd9\u91cc\u5e26\u6765\u4e00\u4e2a\u5e76\u975e\u6b63\u786e\u590d\u6742\u5ea6\uff0c\u4f46\u662f\u80fd\u591f\u901a\u8fc7\u7684\u505a\u6cd5\uff08\u4f46\u662f\u4e0d\u5f00 O2 \u4e5f\u80fd\u8fc7\uff09\n\n\uff08\u5982\u679c\u4ec0\u4e48\u65f6\u5019\u6709\u4eba\u628a\u6211 Hack \u4e86\u5c31\u8e39\u6211\u4e00\u811a\u6211\u9a6c\u4e0a\u5220\u9898\u89e3\uff09\n\n#### \u9898\u89e3\u6b63\u6587\n\n\u505a\u6cd5\uff1a\u6811\u4e0a\u83ab\u961f\n\n\u8ba9\u6211\u4eec\u628a\u6bcf\u4e00\u6761\u8fb9\u4e0a\u9762\u7684\u5b57\u7b26\u4e32\u5206\u89e3\u4e3a\u5176\u82e5\u5e72\u4e2a\u540e\u7f00\u3002\u56e0\u4e3a\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u8d85\u8fc7 $10$ \uff0c\u6240\u4ee5\u6700\u591a\u4f1a\u6709 $10$ \u4e2a\u540e\u7f00\u3002\n\n\u7136\u540e\u6211\u4eec\u7ed9\u8fd9\u4e9b\u540e\u7f00\u7f16\u53f7\uff0c\u4e5f\u5c31\u662f\u4f1a\u6709 $10^6$ \u4e2a\u5b57\u7b26\u540e\u7f00\u4e32\u3002\n\n\u505a\u6811\u4e0a\u83ab\u961f\u7684\u8bdd\u8fd8\u662f\u5c31\u8001\u6837\u5b50\u505a\uff0c\u52a0\u5165\u4e00\u6761\u8fb9\u7684\u8d21\u732e\u7684\u65f6\u5019\u5c31\u628a\u5b83\u90a3\u4e9b\u540e\u7f00\u7684\u8d21\u732e\u5168\u90fd\u52a0\u4e0a\uff0c\u7136\u540e\u5220\u9664\u4e00\u6761\u8fb9\u7684\u8d21\u732e\u7684\u65f6\u5019\u5c31\u628a\u5b83\u7684\u540e\u7f00\u7684\u8d21\u732e\u5168\u90fd\u51cf\u53bb\uff0c\u7528\u4e00\u4e2a\u6876\u7ef4\u62a4\uff0c\u5f97\u5230\u67e5\u8be2\u7684\u7b54\u6848\u5c31\u662f\u67e5\u8fd9\u4e2a\u8be2\u95ee\u7684\u5b57\u7b26\u4e32\u5728\u7f16\u53f7\u540e\u5bf9\u5e94\u7684\u6876\u3002\n\n\u8fd9\u6837\u4f60\u5c31\u83b7\u5f97\u4e86 $40pts$ \u7684\u597d\u6210\u7ee9\uff01\uff08\n\n\u4f46\u662f\u5b9e\u9645\u4e0a\u6709\u8d21\u732e\u7684\u540e\u7f00\u53ea\u6709\u8be2\u95ee\u67e5\u8be2\u5230\u7684\u90a3\u4e00\u4e9b\uff0c\u4e8e\u662f\u6211\u4eec\u81f3\u5c11\u53ef\u4ee5\u5220\u6389 $9 \\times 10^5$ \u4e2a\u65e0\u7528\u7f16\u53f7\uff0c\u6bd4\u5982 `aababaaba`\uff0c\u67e5\u8be2\u53ea\u6709 `baaba` \u548c `ba` \u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ea\u9700\u8981\u7559\u4e0b `ba` \u548c `baaba`\uff0c\u5176\u5b83\u7684\u90fd\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\uff08\u597d\u50cf\u526a\u679d\u4e0d\u5c11\uff0c\u8ba9 $40pts$ \u76f4\u63a5\u5230 $100pts$ \u7684\u79d8\u6280\uff09\u3002\n\n\u628a\u7ecf\u8fc7\u5220\u9664\u7684\u5269\u4f59\u5b57\u7b26\u4e32\u91cd\u65b0\u7f16\u53f7\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u6bcf\u4e00\u4e2a\u8be2\u95ee\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u7f16\u53f7\uff0c\u8fd8\u662f\u6309\u7167\u4e00\u5f00\u5934\u63d0\u5230\u7684\u65b9\u6cd5\u505a\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u83b7\u5f97\u4e86 $100pts$ \u7684\u597d\u6210\u7ee9\uff01\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a \n\n$O(20 \\times n \\times \\sqrt{Q} )$ (\u6811\u4e0a\u83ab\u961f\u81ea\u5e26 $\\times  2$ \uff0c\u7136\u540e\u56e0\u4e3a\u5b57\u7b26\u4e32\u957f\u5ea6\u662f $O(10)$ \u7684\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f\u8fd9\u6837\u7684)\n\n\u56e0\u4e3a\u526a\u679d\u7684\u539f\u56e0\u6240\u4ee5\u8dd1\u8fc7\u53bb\u4e86\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u5c31\u53d1\u4e00\u7bc7\u9898\u89e3\u6765\u51d1\u70ed\u95f9\u5427\u3002\n\n#### Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n#define getchar() (p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1 << 21, stdin), p1 == p2) ? EOF : *p1 ++)\ninline int read() {\n    int x = 0, flag = 1;\n    char ch = getchar();\n    for( ; ch > '9' || ch < '0' ; ch = getchar()) if(ch == '-') flag = -1;\n    for( ; ch >= '0' && ch <= '9' ; ch = getchar()) x = (x << 3) + (x << 1) + ch - '0';\n    return x * flag;\n}\ninline void write(int x) {\n    if(x == 0) { putchar('0'); return ; }\n    int O[20], t = 0;\n    while(x) {\n        O[++ t] = x % 10;\n        x /= 10;\n    }\n    for(register int i = t ; i >= 1 ; i --) putchar(O[i] + '0');\n    return ;\n}\nunordered_map <string, int> mp, asked;\nconst int MAXN = 1e5 + 50;\nint n, tot = 1, start[MAXN], now = 0;\nint t[MAXN][20], nm[MAXN];\nchar s[30], f[20];\nint q;\nchar sh[MAXN][20];\nint fa[MAXN][22], dep[MAXN << 1], tail = 0, Dfs[MAXN << 1];\nint fia[MAXN], ed[MAXN], block, used[MAXN << 1];\nint Ans[MAXN], Cnt[MAXN * 20];\nstruct Edge{\n\tint next, to;\n} edge[MAXN << 1];\n\nstruct Ques {\n    int l, r, lca, id, op;\n\tchar s[11];\n} Q[MAXN << 1];\n\nvoid add(int from, int to) {\n\tedge[++ tot] = (Edge){start[from], to};\n\tstart[from] = tot;\n\treturn ;\n}\n\nvoid DFS(int x, int from) {\n    Dfs[++ tail] = x, fia[x] = tail;\n    dep[x] = dep[from] + 1; fa[x][0] = from;\n    for(register int i = 1 ; i <= log2(dep[x]) ; i ++) \n        fa[x][i] = fa[fa[x][i - 1]][i - 1];\n    for(register int i = start[x] ; i ; i = edge[i].next) {\n        int to = edge[i].to;\n        if(to == from) continue;\n        DFS(to, x);\n    }\n    Dfs[++ tail] = x, ed[x] = tail;\n    return ;\n}\n\nint LCA(int x, int y) {\n    if(dep[x] > dep[y]) swap(x, y);\n    for(register int i = log2(dep[y]) ; i >= 0 ; i --)\n        if(dep[fa[y][i]] >= dep[x]) y = fa[y][i];\n    if(x == y) return x;\n    for(register int i = log2(dep[x]) ; i >= 0 ; i --) {\n        if(fa[x][i] != fa[y][i]) \n        x = fa[x][i], y = fa[y][i];\n    }\n    return fa[x][0];\n}\n\nbool cmp(Ques a, Ques b) {\n    if(a.l / block != b.l / block) return a.l / block < b.l  / block;\n    if(a.l / block % 2 == 1) return a.r / block < b.r / block;\n\telse return a.r / block > b.r / block;\n}\n\nvoid init() {\n    n = read();\n\tfor(register int i = 1 ; i <= n - 1 ; i ++) {\n\t\tint u = read(), v = read(), now = 0;\n\t\tchar c;\n\t\twhile((c = getchar()) != '\\n') sh[i][now] = c, now ++;\n\t\tadd(u, v), add(v, u);\n\t}\n\n    DFS(1, 0), q = read();\n\n    for(register int i = 1 ; i <= q ; i ++) {\n        int u = read(), v = read(), lca = LCA(u, v), now = 0;\n\t\tchar c;\n\t\twhile((c = getchar()) != '\\n') Q[i].s[now] = c, now ++;\n\t\tQ[i].lca = lca;\n\t\tif(!asked.count(Q[i].s)) asked[Q[i].s] = 1;\n        if(dep[u] > dep[v]) swap(u, v);\n        if(lca == u) {\n            Q[i].id = i; Q[i].op = 2;\n            Q[i].l = fia[u], Q[i].r = fia[v];\n            if(Q[i].l > Q[i].r) swap(Q[i].l, Q[i].r);\n        }\n        else {\n            Q[i].op = 1; Q[i].id = i; \n            Q[i].l = ed[u], Q[i].r = fia[v];\n           if(Q[i].l > Q[i].r) Q[i].l = ed[v], Q[i].r = fia[u];\n        }\n    } block = pow(tail, 0.50);\n\n\tfor(register int i = 1 ; i <= n - 1 ; i ++) {\n\t\tint u = edge[i * 2].to, v = edge[(i * 2) ^ 1].to, len = strlen(sh[i]);\n\t\tif(dep[v] < dep[u]) swap(u, v);\n\t\tfor(register int j = 0 ; j < len ; j ++) {\n\t\t\tchar c = sh[i][j];\n\t\t\tf[j] = c;\n\t\t\tif(!asked.count(f)) continue;\n\t\t\tif(!mp.count(f)) mp[f] = ++ now;\n\t\t\tt[v][++ nm[v]] = mp[f];\n\t\t}\n\t\tfor(register int j = 0 ; j < len ;  j ++) f[j] = '\\0';\n\t}\n    return ;\n}\n\nvoid add(int x) {\n    for(register int j = 1 ; j <= nm[x] ; j ++) Cnt[t[x][j]] ++;\n    return ;\n}\n\nvoid del(int x) {\n    for(register int j = 1 ; j <= nm[x] ; j ++) Cnt[t[x][j]] --;\n    return ;\n}\n\nvoid ask(int x) {\n    used[Dfs[x]] ? del(Dfs[x]) : add(Dfs[x]); used[Dfs[x]] ^= 1;\n    return ;\n}\n\nvoid work() {\n    sort(Q + 1, Q + 1 + q, cmp);\n    int nowl = 1, nowr = 0;\n    for(register int v = 1 ; v <= q ; v ++) {\n        int ql = Q[v].l, qr = Q[v].r, id = Q[v].id, lca = Q[v].lca;\n\t\tif(!mp.count(Q[v].s)) { Ans[id] = 0; continue; }\n        while(nowl > ql) ask(-- nowl);\n        while(nowr < qr) ask(++ nowr);\n        while(nowl < ql) ask(nowl ++);\n        while(nowr > qr) ask(nowr --);\n    \tif(Q[v].op == 2) del(lca);\n        Ans[id] = Cnt[mp[Q[v].s]];\n        if(Q[v].op == 2) add(lca);\n    }\n    for(register int i = 1 ; i <= q ; i ++) write(Ans[i]), putchar('\\n');\n    return ;\n}\n\nint main() {\n\t//freopen(\"in\", \"r\" ,stdin);\n\t//freopen(\"out\", \"w\", stdout);\n\tinit(), work();\n\t//cout << n << \" \"  << tail;\n\treturn 0;\n}\n```",
        "postTime": 1624023661,
        "uid": 67817,
        "name": "MuYC",
        "ccfLevel": 6,
        "title": "P6088 [JSOI2015]\u5b57\u7b26\u4e32\u6811 \u9898\u89e3"
    },
    {
        "content": "~~\u8fd9\u9053\u9898\u597d\u6c34~~\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u5efa\u4e00\u9897\u53ef\u6301\u4e45\u5316Trie\uff0c\u524d\u4e00\u4e2a\u7248\u672c\u662f\u5b83\u7684\u7236\u4eb2\uff0c\u5bf9\u4e8e\u81ea\u5df1\u8fd9\u4e2a\u7248\u672c\u52a0\u5165\u4e0e\u5b83\u7236\u4eb2\u8fde\u7684\u8fb9\u7684\u5b57\u7b26\u4e32\u3002\u7136\u540e\u8fd9\u9898\u6ca1\u4e86\u3002\n\n\u5bf9\u4e8e\u7b54\u6848\uff0c\u5c31\u662f$Sum_u+Sum_v-2*Sum_{lca_{u,v}}$\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nconst int N = 100010;\n\ntemplate < class T >\ninline void read(T &x)\n{\n\tchar ch = getchar(); x = 0; int fg = 1;\n\tfor(;ch < '0' || ch > '9';) fg = ch == '-' ? -1 : 1, ch = getchar();\n\tfor(;ch >= '0' && ch <= '9';) x = x * 10 + (ch ^ '0'), ch = getchar(); x *= fg;\n}\n\nstruct Edge{ int to,nxt,id; } g[N << 1];\nstruct Trie{ int son[27],sum; } t[N * 10];\nint last[N],cnt = 0,tot = 0,dep[N];\nint n,st[N][20],m,rt[N];\nchar s[N][15];\n\nvoid add(int u,int v,int id) { g[++cnt] = (Edge){ v,last[u],id }, last[u] = cnt; }\nvoid Add_Edge(int u,int v,int id) { add(u,v,id), add(v,u,id); }\n\nvoid build(int &root,int cur,int p,char *s,int len)\n{\n\troot = ++tot; t[root] = t[cur], t[root].sum++;\n\tif(p > len) return;\n\tbuild(t[root].son[s[p] - 'a'],t[cur].son[s[p] - 'a'],p + 1,s,len);\n}\nvoid dfs(int x)\n{\n\tfor(int i = last[x];i;i = g[i].nxt)\n\t\tif(g[i].to != st[x][0]) st[g[i].to][0] = x, dep[g[i].to] = dep[x] + 1,\n\t\t\tbuild(rt[g[i].to],rt[x],1,s[g[i].id],strlen(s[g[i].id] + 1)), dfs(g[i].to);\n}\nint get_lca(int u,int v)\n{\n\tif(dep[u] < dep[v]) swap(u,v);\n\tfor(int i = 17;i >= 0; -- i)\n\t\tif(dep[st[u][i]] >= dep[v]) u = st[u][i];\n\tif(u == v) return u;\n\tfor(int i = 17;i >= 0; -- i)\n\t\tif(st[u][i] != st[v][i]) u = st[u][i], v = st[v][i];\n\treturn st[u][0];\n}\nint calc(int root,int len)\n{\n\tfor(int i = 1;i <= len; ++ i)\n\t\troot = t[root].son[s[0][i] - 'a'];\n\treturn t[root].sum;\n}\nint main()\n{\n\tread(n);\n\tfor(int i = 1,u,v;i < n; ++ i)\n\t\tread(u), read(v), scanf(\" %s\",s[i] + 1), Add_Edge(u,v,i);\n\tdep[1] = 1, dfs(1), read(m), ++m;\n\tfor(int j = 1;j <= 17; ++ j)\n\t\tfor(int i = 1;i <= n; ++ i) st[i][j] = st[st[i][j - 1]][j - 1];\n\tfor(int u,v;--m;)\n\t{\n\t\tread(u), read(v), scanf(\" %s\",s[0] + 1);\n\t\tint lca = get_lca(u,v),len = strlen(s[0] + 1);\n\t\tprintf(\"%d\\n\",calc(rt[u],len) + calc(rt[v],len) - 2 * calc(rt[lca],len));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1582158888,
        "uid": 141350,
        "name": "Iota2029",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6088 \u3010[JSOI2015]\u5b57\u7b26\u4e32\u6811\u3011"
    }
]