[
    {
        "content": "\u8fd9\u9053\u9898\u7f51\u4e0a\u7684\u9898\u89e3\u57fa\u672c\u4e0a\u90fd\u662f\u7528\u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811\u505a\u7684\uff0c\u7136\u800c\u7ecf\u8fc7\u6211\u7684\u89c2\u5bdf\u53d1\u73b0\uff0c\u7531\u4e8e\u8fd9\u9053\u9898\u7684\u6570\u636e\u8f83\u5c0f\uff0c\u5176\u5b9e\u53ef\u4ee5\u7528\u5f52\u5e76\u6392\u5e8f+\u66b4\u529b\u627e\u9006\u5e8f\u6570\u5bf9\u5c31\u884c\u4e86\uff0c\u603b\u590d\u6742\u5ea6\u4e3aO(nlogn + nm),\u9996\u5148\u5148\u7528\u5f52\u5e76\u6392\u5e8f\u6c42\u51fa\u521d\u59cb\u72b6\u6001\u7684\u9006\u5e8f\u6570\u5bf9\uff0c\u7136\u540e\u5728\u5f53\u4ea4\u6362\u4e24\u4e2a\u6570\u65f6\u66b4\u529b\u67e5\u627e\u4e24\u6570\u4e4b\u95f4\u6709\u591a\u5c11\u9006\u5e8f\u6570\u5bf9\uff0c\u8fdb\u884c\u51cf\u53bb\u6216\u52a0\u4e0a\uff0c\u7136\u540e\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint i,n,q,h[100002],o[100002],p[100002],ans,a,b;\nint gb(int x,int y){\n    int mid=(x+y)/2,j=x,k=mid+1,l=x;\n    if(x==y) return 0;\n    gb(x,mid);\n    gb(k,y);\n    while(j<=mid&&k<=y){\n        if(o[j]<=o[k]){\n            p[l]=o[j];\n            j++;\n            l++;\n        }\n        else{\n            p[l]=o[k];\n            ans+=mid-j+1;\n            k++;\n            l++;\n        }\n    }\n    while(j<=mid){\n        p[l]=o[j];\n        j++;\n        l++;\n    }\n    while(k<=y){\n        p[l]=o[k];\n        k++;\n        l++;\n    }\n    for(i=x;i<=y;i++)\n        o[i]=p[i];\n    return 0;\n}\nint main()\n{\n    int j,k,l;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&h[i]);\n    for(i=1;i<=n;i++)\n        o[i]=h[i];\n    gb(1,n);\n    printf(\"%d\\n\",ans);\n    scanf(\"%d\",&q);\n    for(i=1;i<=q;i++){\n        scanf(\"%d%d\",&a,&b);\n        if(a>b){\n            j=a;\n            a=b;\n            b=j;\n        }\n        if(h[b]>h[a])\n            ans++;\n        else if(h[b]<h[a])\n            ans--;\n        for(j=a+1;j<=b-1;j++){\n            if(h[j]>h[a])\n                ans++;\n            else if(h[j]<h[a])\n                ans--;\n            if(h[j]<h[b])\n                ans++;\n            else if(h[j]>h[b])\n                ans--;\n        }\n        j=h[a];\n        h[a]=h[b];\n        h[b]=j;\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1516966137,
        "uid": 20578,
        "name": "ningyuheng",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1975 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u6392\u961f\u3011"
    },
    {
        "content": "# \u5927\u5bb6\u597d\uff0c\u6211\u975e\u5e38\u559c\u6b22\u66b4\u529b\u6570\u636e\u7ed3\u6784\uff0c\u4e8e\u662f\u6211\u5c31\u7528\u5206\u5757\u8fc7\u4e86\u8fd9\u9053\u9898\n\n\u9996\u5148\u8fd9\u9898\u5176\u5b9e\u5c31\u662f\u6bcf\u6b21\u4ea4\u6362\u4e24\u4e2a\u6570\u7136\u540e\u67e5\u8be2\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002\n\n\u8bbe\u4ea4\u6362\u7684\u4e24\u4e2a\u6570\u4e0b\u6807\u4e3au,v(u<v) \u90a3\u4e48\u663e\u800c\u6613\u89c1\u7684\u662f\n\n**\u4ea4\u6362u\uff0cv\u5bf91~(u-1)\u548c(v+1)~n\u5185\u7684\u6570\u662f\u6ca1\u6709\u5f71\u54cd\u7684**\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u4ea4\u6362u,v\u5bf9u+1~v-1\u5185\u7684\u6570\u7684\u5f71\u54cd\n\n\u6211\u4eec\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee **\u7528\u4e0a\u4e00\u6b21\u7684\u7b54\u6848\u52a0\u4e0a\u4ea4\u6362u,v\u7684\u5f71\u54cd\uff0c\u5c31\u662f\u8fd9\u6b21\u7684\u7b54\u6848**\n\n\u8bbei\u4e3au~v\u4e2d\u7684\u4e00\u4e2a\u6570 \u5219i\u5bf9ans\u4ea7\u751f\u5f71\u54cd **\u5f53\u4e14\u4ec5\u5f53\u4e0b\u9762\u56db\u79cd\u60c5\u51b5**\uff1a\n\n**\u5f53a[i]>a[u] ans++** **\u5f53a[i]<a[u] ans--**\n\n**\u5f53a[i]<a[v] ans++** **\u5f53a[i]>a[v] ans--**\n\n\u5373\u5f53a[i]>a[u]\u65f6\uff0c\u4ea4\u6362u,v\u5c31\u4f1a\u4ea7\u751f\u65b0\u7684\u9006\u5e8f\u5bf9(i,u) \u5176\u4f59\u4e09\u7ec4\u540c\u7406\n\n**\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\u4e86 \u5728\u533a\u95f4u+1~v-1\u5185\uff0c\u6709\u591a\u5c11\u4e2a\u6570\u6ee1\u8db3\u4e0a\u8ff0\u7684\u56db\u79cd\u6761\u4ef6**\n\n\u7136\u540e\u5c31\u53d8\u6210\u5206\u5757\u5341\u5206\u64c5\u957f\u7684\u57fa\u672c\u64cd\u4f5c\u4e86\u3002\n\n\u7f51\u4e0a\u5173\u4e8e\u5206\u5757\u7684\u8bb2\u89e3\u5f88\u591a \u5728\u6b64\u4e0d\u7ec6\u8bb2\n\n~~\u5f53\u7136\u8fd9\u4e2a\u9898\u4e3b\u5e2d\u6811\u5957\u6811\u72b6\u6570\u7ec4\u4f3c\u4e4e\u4e5f\u6210\u5427 \u4e0d\u6210\u522b\u6253\u6211 \u6211yy\u7684~~\n\n\u4e0b\u9762\u8d34code ~~\u8fde\u5feb\u8bfb\u90fd\u6ca1\u52a0\u5c31rank1\u4e86 \u6b22\u8fce\u5927\u4f6c\u6765\u8e29\u7206\u6211~~\n\n```c\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\nint a[20010],b[20010],p[20010],ov[20010],ans;\nint n,m,block,belong[20010],l[150],r[150],u,v;\nvoid MergeSort(int L,int R){\n    int M=(L+R)>>1;\n    if(M > L) MergeSort( L ,M);\n    if(M+1<R) MergeSort(M+1,R);\n    int k=L,t1=L,t2=M+1;\n    while(t1<=M&&t2<=R){\n        if(b[t1]<=b[t2]){\n            p[k++]=b[t1++];\n        } else {\n            ans+=M-t1+1;\n            p[k++]=b[t2++];\n        }\n    }\n    while(t1<=M) p[k++]=b[t1++];\n    while(t2<=R) p[k++]=b[t2++];\n    for(register int i=L;i<=R;i++) b[i]=p[i];\n}\nint main(){\n    scanf(\"%d\",&n); block=sqrt(n); \n    for(register int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n    for(register int i=1;i<=n;i++) b[i] = ov[i] = a[i];\n    for(register int i=1;i<=n;i++) belong[i]=(i-1)/block+1;\n    for(register int i=1;i<=n;i++) if(!l[belong[i]]) l[belong[i]]=i;\n    for(register int i=n;i>=1;i--) if(!r[belong[i]]) r[belong[i]]=i;\n    for(register int i=1;i<=belong[n];i++) sort(ov+l[i],ov+r[i]+1);\n    MergeSort(1,n); printf(\"%d\\n\",ans); scanf(\"%d\",&m);\n    while(m--){\n        scanf(\"%d%d\",&u,&v);\n        if(u>v) swap(u,v); \n        if(a[u]==a[v]){\n            printf(\"%d\\n\",ans);\n            continue;\n        } else {\n            if(a[u]>a[v]) ans--;\n            if(a[v]>a[u]) ans++;\n            if(belong[v]==belong[u]){\n                for(register int i=u+1;i<v;i++){\n                    ans+=(a[i]>a[u]);\n                    ans-=(a[i]<a[u]);\n                    ans+=(a[i]<a[v]);\n                    ans-=(a[i]>a[v]);\n                }\n            } else {\n                for(register int i=u+1;i<=r[belong[u]];i++){\n                    ans+=(a[i]>a[u]);\n                    ans-=(a[i]<a[u]);\n                    ans+=(a[i]<a[v]);\n                    ans-=(a[i]>a[v]);\n                }\n                for(register int i= l[belong[v]];i < v;i++){\n                    ans+=(a[i]>a[u]);\n                    ans-=(a[i]<a[u]);\n                    ans+=(a[i]<a[v]);\n                    ans-=(a[i]>a[v]);\n                }\n                for(register int i=belong[u]+1;i<=belong[v]-1;i++){\n                \tif(ov[l[i]]<a[u]){\n                \t\tint L=l[i],R=r[i],c=a[u];\n                    \twhile(L!=R){\n                    \t    int M=(L+R)>>1;\n                    \t    if(ov[M]<c) L=M+1; else R=M;\n                   \t\t}\n                    \tif(L>=l[i]&&ov[L]>=c) L--;\n                    \tans-=L-l[i]+1;\t\n                    }\n                    if(ov[r[i]]>a[u]){\n                    \tint L=l[i],R=r[i],c=a[u];\n                    \twhile(L!=R){\n                       \t\tint M=(L+R)>>1;\n            \t            if(ov[M]<=c) L=M+1; else R=M;\n            \t        }\n                    \tans+=r[i]-R+1;\n                    }\n                    if(ov[l[i]]<a[v]){\n                \t\tint L=l[i],R=r[i],c=a[v];\n                    \twhile(L!=R){\n                    \t    int M=(L+R)>>1;\n                    \t    if(ov[M]<c) L=M+1; else R=M;\n                   \t\t}\n                    \tif(L>=l[i]&&ov[L]>=c) L--;\n                    \tans+=L-l[i]+1;\t\n                    }\n                    if(ov[r[i]]>a[v]){\n                    \tint L=l[i],R=r[i],c=a[v];\n                    \twhile(L!=R){\n                       \t\tint M=(L+R)>>1;\n            \t            if(ov[M]<=c) L=M+1; else R=M;\n            \t        }\n                    \tans-=r[i]-R+1;\n                    }\n                }\n                int L=l[belong[u]],R=r[belong[u]],M,c=a[u];\n                while(L!=R){\n                    M=(L+R)>>1;\n                    if(ov[M]<c) L=M+1; else R=M;\n                }\n                int temp=L;ov[temp]=a[v];\n                L=l[belong[u]],R=r[belong[u]];\n                while(temp>L&&ov[temp]<ov[temp-1]) swap(ov[temp],ov[temp-1]),temp--;\n                while(temp<R&&ov[temp]>ov[temp+1]) swap(ov[temp],ov[temp+1]),temp++;\n                L=l[belong[v]],R=r[belong[v]],c=a[v];\n                while(L!=R){\n                    M=(L+R)>>1;\n                    if(ov[M]<c) L=M+1; else R=M;\n                }\n                temp=L,ov[temp]=a[u];\n                L=l[belong[v]],R=r[belong[v]];\n                while(temp>L&&ov[temp]<ov[temp-1]) swap(ov[temp],ov[temp-1]),temp--;\n                while(temp<R&&ov[temp]>ov[temp+1]) swap(ov[temp],ov[temp+1]),temp++;\n            }\n            swap(a[u],a[v]);\n            printf(\"%d\\n\",ans);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1520239744,
        "uid": 65376,
        "name": "\u6829\u7b19\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1975 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u6392\u961f\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a\u5e8f\u5217 $h$,\u652f\u6301\u4ea4\u6362\u5176\u4e2d\u7684\u4e24\u6570,\u6c42\u51fa\u6bcf\u4e00\u65f6\u523b\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570.\n\n# \u5206\u6790\n\n\u6c42\u9006\u5e8f\u5bf9\u662f $O(N\\log_2N)$ \u7684,\u6709 $M$ \u4e2a\u64cd\u4f5c,\u5982\u679c\u66b4\u529b\u6c42\u7684\u8bdd\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(MN\\log_2N)$ \u867d\u7136\u6570\u636e\u8303\u56f4\u4e0d\u5927,\u4f46\u662f\u8fd8\u662f\u53ef\u80fd\u56e0\u4e3a\u8bc4\u6d4b\u673a\u6d6e\u52a8\u800cTLE,\u6240\u4ee5\u5c31\u4e0d\u8981\u60f3\u7740\u6298\u817e\u8fd9\u4e9b\u4e1c\u897f\u4e86,\u8fd8\u662f\u8981\u7528\u4e00\u4e9b\u6b63\u7ecf\u70b9\u7684\u65b9\u6cd5\u53bb\u8fc7\u8fd9\u79cd\u9898.\n\n\u6c42\u9006\u5e8f\u5bf9\u7684\u65b9\u6cd5\u5927\u81f4\u53ef\u4ee5\u5206\u6210\u4e24\u79cd:\n\n1. \u7528\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u5927\u4e8e\u67d0\u4e2a\u6570\u7684\u6570\u5728\u8fd9\u4e2a\u6570\u4e4b\u524d\u51fa\u73b0\u8fc7\u51e0\u6b21,\u53ea\u9700\u8981\u5c06\u8fd9\u4e9b\u6570\u4e00\u4e2a\u4e00\u4e2a\u653e\u5165\u5c31\u597d\u4e86,\u4f18\u70b9\u5f88\u660e\u663e,\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u6570\u5bf9\u4e8e\u7ed3\u679c\u7684\u8d21\u732e,\u4f46\u662f\u7f3a\u70b9\u4e5f\u5f88\u81f4\u547d,\u5e38\u6570\u8f83\u5927,\u5982luogu\u4e0a\u7684[\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/P1908)\u5c31\u8fc7\u4e0d\u4e86\u4e86.\n2. \u5229\u7528\u5f52\u5e76\u6392\u5e8f\u7684\u6027\u8d28\u6765\u8ba1\u7b97,\u4f46\u662f\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u7684\u6bcf\u4e2a\u6570\u7684\u8d21\u732e\u662f\u65e0\u6cd5\u5355\u72ec\u8ba1\u7b97\u7684,\u8dd1\u8d77\u6765\u786e\u5b9e\u4f1a\u6bd4\u7b2c\u4e00\u79cd\u65b9\u6cd5\u5feb.\n\n\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u7528\u5728\u672c\u9898\u663e\u7136\u4e0d\u5408\u9002,\u6240\u4ee5\u672c\u9898\u9700\u8981\u7528\u7b2c\u4e00\u79cd\u65b9\u6cd5.\n\n\u5148\u4e0d\u8003\u8651\u4ea4\u6362\u4e24\u6570\u6709\u4ec0\u4e48\u7279\u6b8a\u7684\u6027\u8d28,\u5355\u7eaf\u8003\u8651\u5220\u9664\u4e00\u4e2a\u6570\u5bf9\u4e8e\u9006\u5e8f\u5bf9\u4e2a\u6570\u7684\u5f71\u54cd([P3157 [CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9](https://www.luogu.com.cn/problem/P3157)).\n\n\u56e0\u4e3a\u662f\u5220\u9664\u4e00\u4e2a\u6570,\u5176\u5f71\u54cd\u5230\u7684\u53ea\u6709\u5176\u4ed6\u6570\u4e0e\u5b83\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9,\u800c\u4ea7\u751f\u9006\u5e8f\u5bf9\u7684\u6761\u4ef6\u5c31\u662f $j<i$ \u4e14 $a_j>a_i$,\u6240\u4ee5\u5728\u8fd9\u4e2a\u6570\u524d\u9762\u4e14\u5927\u4e8e\u5b83\u7684\u6570\u4f1a\u548c\u5b83\u4ea7\u751f\u4e00\u4e2a\u9006\u5e8f\u5bf9,\u5728\u8fd9\u4e2a\u6570\u540e\u9762\u4e14\u5c0f\u4e8e\u5b83\u7684\u6570\u4e5f\u4f1a\u548c\u5b83\u4ea7\u751f\u4e00\u4e2a\u9006\u5e8f\u5bf9,\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u8ba1\u7b97\u524d\u9762\u6709\u591a\u5c11\u5927\u4e8e\u5b83\u7684\u6570,\u540e\u9762\u6709\u591a\u5c11\u5c0f\u4e8e\u5b83\u7684\u6570,\u4e0d\u8003\u8651\u8303\u56f4\u7684\u8bdd\u53ef\u4ee5\u76f4\u63a5\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u89e3\u51b3,\u7136\u800c\u8fd9\u91cc\u662f\u4e00\u4e2a\u533a\u95f4\u95ee\u9898+\u5355\u70b9\u4fee\u6539,\u90a3\u4e48\u5c31\u5f88\u5bb9\u6613\u60f3\u5230\u5229\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u7f00\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570,\u53ea\u8981\u5dee\u5206\u4e00\u4e0b\u5c31\u53ef\u4ee5\u5f97\u51fa\u7ed3\u679c.\n\n\u81f3\u4e8e\u9700\u8981\u91cd\u65b0\u52a0\u4e0a\u4e00\u4e2a\u6570\u90a3\u8fd8\u662f\u4e00\u6837,\u53ea\u8981\u627e\u5230\u524d\u9762\u5927\u4e8e\u8fd9\u4e2a\u6570\u7684\u4e2a\u6570,\u540e\u9762\u5c0f\u4e8e\u8fd9\u4e2a\u6570\u7684\u4e2a\u6570,\u76f8\u52a0\u5c31\u662f\u8fd9\u4e2a\u6570\u5bf9\u4e8e\u8fd9\u4e2a\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u4ea7\u751f\u7684\u8d21\u732e,\u56e0\u4e3a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u7684\u662f\u524d\u7f00,\u6240\u4ee5\u4ea4\u6362\u4e24\u6570\u5e26\u6765\u7684\u826f\u597d\u6027\u8d28\u81ea\u7136\u4e5f\u6ca1\u4ec0\u4e48\u7528\u4e86,\u4f46\u662f,\u4e3a\u4e86\u8ba9\u8fd9\u4e2a\u6ca1\u4ec0\u4e48\u7528\u7684\u6027\u8d28\u770b\u4f3c\u6709\u7528\u4e00\u70b9,\u8fd8\u662f\u653e[\u4e00\u9053\u53ef\u4ee5\u7528\u8fd9\u4e2a\u6027\u8d28\u7684\u9898](https://www.luogu.com.cn/problem/P3939).\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define REP(i,first,last) for(int i=first;i<=last;++i)\n#define DOW(i,first,last) for(int i=first;i>=last;--i)\nusing namespace std;\nconst int MAXN=114514;\nint N,M;\nint arr[MAXN];\nint tot=0;\nmap<int,int>Hash;//\u7528\u4e8e\u79bb\u6563\u5316\nint sor[MAXN];//\u7528\u4e8e\u79bb\u6563\u5316\nint root[MAXN];//\u6811\u72b6\u6570\u7ec4\u4e0a\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u7ebf\u6bb5\u6811\u7684\u6839\u8282\u70b9\nlong long answer=0;\n//\u7ebf\u6bb5\u6811\u90e8\u5206\nstruct SegmentTree\n{\n\tint sum,lson,rson;\n}sgt[MAXN*32];\nint sgt_cnt=0;\n#define LSON sgt[now].lson\n#define RSON sgt[now].rson\n#define MIDDLE ((left+right)>>1)\n#define LEFT LSON,left,MIDDLE\n#define RIGHT RSON,MIDDLE+1,right\nvoid PushUp(int now)//\u5408\u5e76\u4fe1\u606f\n{\n\tsgt[now].sum=sgt[LSON].sum+sgt[RSON].sum;\n}\nvoid Updata(int num,int add,int &now,int left=1,int right=tot)//\u4fee\u6539\u64cd\u4f5c,\u548c\u666e\u901a\u52a8\u6001\u5f00\u70b9\u6743\u503c\u7ebf\u6bb5\u6811\u76f8\u540c\n{\n\tif(num<left||right<num)//\u4e0d\u5305\u542b\u4fee\u6539\u4f4d\u7f6e\u5c31\u8fd4\u56de\n\t{\n\t\treturn;\n\t}\n\tif(!now)//\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u6ca1\u6709\u8282\u70b9\u5c31\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\n\t{\n\t\tnow=++sgt_cnt;\n\t}\n\tif(left==right)//\u5230\u53f6\u8282\u70b9\u5c31\u76f4\u63a5\u4fee\u6539\n\t{\n\t\tsgt[now].sum+=add;\n\t\treturn;\n\t}\n\t//\u7ee7\u7eed\u4fee\u6539\n\tUpdata(num,add,LEFT);\n\tUpdata(num,add,RIGHT);\n\tPushUp(now);\n}\nint num_add,num_dec;\nint add_sgt[MAXN],dec_sgt[MAXN];//\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4,\u9700\u8981\u7528\u5230\u5dee\u5206,\u9700\u8981\u8bb0\u5f55\u4e0b\u5f53\u524d\u9700\u8981\u52a0\u4e0a\u7684\u7ebf\u6bb5\u6811\u7684\u5f53\u524d\u6839\u8282\u70b9\u7684\u7f16\u53f7,\u4ee5\u53ca\u9700\u8981\u51cf\u53bb\u7684\u7ebf\u6bb5\u6811\u7684\u5f53\u524d\u7f16\u53f7\nint GetSum()//\u5f97\u5230\u5f53\u671f\u8303\u56f4\u4e2d\u7684\u6570\u7684\u4e2a\u6570,\u548c\u6811\u72b6\u6570\u7ec4\u8ba1\u7b97\u533a\u95f4\u548c\u540c\u7406\n{\n\tint result=0;\n\tREP(i,1,num_add)\n\t{\n\t\tresult+=sgt[add_sgt[i]].sum;\n\t}\n\tREP(i,1,num_dec)\n\t{\n\t\tresult-=sgt[dec_sgt[i]].sum;\n\t}\n\treturn result;\n}\n//\u5de6\u53f3\u5b50\u6811\u4e2d\u7684\u6570\u7684\u4e2a\u6570\u8ba1\u7b97\u65b9\u6cd5\u540c\u7406\nint GetSumL()\n{\n\tint result=0;\n\tREP(i,1,num_add)\n\t{\n\t\tresult+=sgt[sgt[add_sgt[i]].lson].sum;\n\t}\n\tREP(i,1,num_dec)\n\t{\n\t\tresult-=sgt[sgt[dec_sgt[i]].lson].sum;\n\t}\n\treturn result;\n}\nint GetSumR()\n{\n\tint result=0;\n\tREP(i,1,num_add)\n\t{\n\t\tresult+=sgt[sgt[add_sgt[i]].rson].sum;\n\t}\n\tREP(i,1,num_dec)\n\t{\n\t\tresult-=sgt[sgt[dec_sgt[i]].rson].sum;\n\t}\n\treturn result;\n}\n//\u5c06\u5f53\u524d\u7684\u6839\u8282\u70b9\u53d8\u4e3a\u5de6\u5b50\u8282\u70b9\nvoid GetRootL()\n{\n\tREP(i,1,num_add)\n\t{\n\t\tadd_sgt[i]=sgt[add_sgt[i]].lson;\n\t}\n\tREP(i,1,num_dec)\n\t{\n\t\tdec_sgt[i]=sgt[dec_sgt[i]].lson;\n\t}\n}\n//\u53d8\u4e3a\u53f3\u5b50\u8282\u70b9\nvoid GetRootR()\n{\n\tREP(i,1,num_add)\n\t{\n\t\tadd_sgt[i]=sgt[add_sgt[i]].rson;\n\t}\n\tREP(i,1,num_dec)\n\t{\n\t\tdec_sgt[i]=sgt[dec_sgt[i]].rson;\n\t}\n}\nint QuerySmall(int num,int left=1,int right=tot)//\u67e5\u8be2\u5c0f\u4e8e\u7684\u6570\u7684\u4e2a\u6570,\u8ba1\u7b97\u65b9\u6cd5\u548c\u6743\u503c\u7ebf\u6bb5\u6811\u540c\u7406,\u4e0d\u591a\u8bb2\n{\n\tif(num<=left)\n\t{\n\t\treturn 0;\n\t}\n\tif(right<num)\n\t{\n\t\treturn GetSum();\n\t}\n\tif(num<=MIDDLE)\n\t{\n\t\tGetRootL();\n\t\treturn QuerySmall(num,left,MIDDLE);\n\t}\n\tint result=GetSumL();\n\tGetRootR();\n\treturn result+QuerySmall(num,MIDDLE+1,right);\n}\nint QueryBig(int num,int left=1,int right=tot)//\u8ba1\u7b97\u5927\u4e8e\u7684\u6570\u7684\u4e2a\u6570,\u540c\u7406\n{\n\tif(right<=num)\n\t{\n\t\treturn 0;\n\t}\n\tif(left>num)\n\t{\n\t\treturn GetSum();\n\t}\n\tif(MIDDLE+1<=num)\n\t{\n\t\tGetRootR();\n\t\treturn QueryBig(num,MIDDLE+1,right);\n\t}\n\tint result=GetSumR();\n\tGetRootL();\n\treturn result+QueryBig(num,left,MIDDLE);\n}\n#undef LSON\n#undef RSON\n#undef MIDDLE\n#undef LEFT\n#undef RIGHT\nint Lowbit(int now)//\u6811\u72b6\u6570\u7ec4\u8981\u7528\u7684lowbit\n{\n\treturn now&-now;\n}\nvoid BeforeQuery(int left,int right)//\u5728\u67e5\u8be2\u524d\u7684\u9884\u5904\u7406,\u5c06\u9700\u8981\u52a0\u4e0a\u7684\u7ebf\u6bb5\u6811\u7684\u6839\u8282\u70b9\u548c\u9700\u8981\u51cf\u53bb\u7684\u7ebf\u6bb5\u6811\u7684\u6839\u8282\u70b9\u7f16\u53f7\u8bb0\u5f55\u4e0b\u6765\n{\n\tnum_add=0,num_dec=0;\n\tfor(int now=right;now;now-=Lowbit(now))\n\t{\n\t\tadd_sgt[++num_add]=root[now];\n\t}\n\tfor(int now=left-1;now;now-=Lowbit(now))\n\t{\n\t\tdec_sgt[++num_dec]=root[now];\n\t}\n}\nint Small(int num,int left,int right)//\u67e5\u8be2\u533a\u95f4\u5185\u5c0f\u4e8e\u7684\u6570\u7684\u4e2a\u6570\n{\n\tBeforeQuery(left,right);\n\treturn QuerySmall(num);\n}\nint Big(int num,int left,int right)//\u67e5\u8be2\u533a\u95f4\u5185\u5927\u4e8e\u7684\u6570\u7684\u4e2a\u6570\n{\n\tBeforeQuery(left,right);\n\treturn QueryBig(num);\n}\nvoid Change(int p1,int p2)//\u4ea4\u6362\u4e24\u6570,\u5c31\u662f\u5220\u6389\u4e00\u4e2a\u6570,\u518d\u653e\u4e0a\u4e00\u4e2a\u6570\u7684\u64cd\u4f5c\u6700\u4e24\u904d\n{\n\tint ha=arr[p1];\n\tint hb=arr[p2];\n\tanswer-=Big(ha,1,p1-1)+Small(ha,p1+1,N);//\u5220\u9664\u4e00\u4e2a\u6570\u6240\u51cf\u53bb\u7684\u8d21\u732e\n\tfor(int now=p1;now<=N;now+=Lowbit(now))//\u5728\u7ebf\u6bb5\u6811\u4e2d\u51cf\u53bb\u8fd9\u4e2a\u6570\n\t{\n\t\tUpdata(ha,-1,root[now]);\n\t}\n\tanswer+=Big(hb,1,p1-1)+Small(hb,p1+1,N);//\u540c\u7406\u52a0\u4e0a\u8fd9\u4e2a\u6570\n\tfor(int now=p1;now<=N;now+=Lowbit(now))\n\t{\n\t\tUpdata(hb,1,root[now]);\n\t}\n\tanswer-=Big(hb,1,p2-1)+Small(hb,p2+1,N);\n\tfor(int now=p2;now<=N;now+=Lowbit(now))\n\t{\n\t\tUpdata(hb,-1,root[now]);\n\t}\n\tanswer+=Big(ha,1,p2-1)+Small(ha,p2+1,N);\n\tfor(int now=p2;now<=N;now+=Lowbit(now))\n\t{\n\t\tUpdata(ha,1,root[now]);\n\t}\n\tswap(arr[p1],arr[p2]);\n}\nint main()\n{\n\tscanf(\"%d\",&N);\n\tREP(i,1,N)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t\tsor[i]=arr[i];\n\t}\n\tsort(sor+1,sor+1+N);//\u79bb\u6563\u5316\n\tsor[0]=114514233;\n\tREP(i,1,N)\n\t{\n\t\tif(sor[i]!=sor[i-1])\n\t\t{\n\t\t\tHash[sor[i]]=++tot;\n\t\t}\n\t}\n\tREP(i,1,N)//\u9006\u5e8f\u5bf9\u7684\u8ba1\u7b97\u4e2d\u53ea\u9700\u8981\u8003\u8651\u76f8\u5bf9\u5927\u5c0f,\u6240\u4ee5\u4e0d\u9700\u8981\u4fdd\u7559\u539f\u6765\u7684\u503c\n\t{\n\t\tarr[i]=Hash[arr[i]];\n\t}\n\tREP(i,1,N)//\u5efa\u6811\n\t{\n\t\tfor(int now=i;now<=N;now+=Lowbit(now))\n\t\t{\n\t\t\tUpdata(arr[i],1,root[now]);\n\t\t}\n\t}\n\tREP(i,2,N)//\u8ba1\u7b97\u6700\u5f00\u59cb\u7684\u9006\u5e8f\u5bf9\n\t{\n\t\tanswer+=Big(arr[i],1,i-1);\n\t}\n\tprintf(\"%lld\\n\",answer);//\u8bb0\u5f97\u8f93\u51fa\u6700\u5f00\u59cb\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\n\tscanf(\"%d\",&M);\n\tint l,r;\n\tREP(i,1,M)\n\t{\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tChange(l,r);\n\t\tprintf(\"%lld\\n\",answer);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1582541765,
        "uid": 86625,
        "name": "Limit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1975 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u6392\u961f\u3011"
    },
    {
        "content": "# \u9898\u89e3P1975\n\n### [$Blog$](https://www.luogu.com.cn/blog/qshjydzh/solution-p1975)\n\n\u6211\u4eec\u5148\u7406\u89e3\u4e00\u4e0b\u9898\u610f\u3002\uff08\u597d\u5427\u5176\u5b9e~~\u6ca1\u4ec0\u4e48\u9700\u8981\u7406\u89e3\u7684~~\uff09\n\n\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5728\u7ebf\u4fee\u6539\u5e76\u67e5\u8be2\u9006\u5e8f\u5bf9\u4e2a\u6570\u7684\u6570\u636e\u7ed3\u6784\u3002\n\n\u9006\u5e8f\u5bf9\u5927\u5bb6\u90fd\u4f1a\uff0c\u5f52\u5e76\u6392\u5e8f\uff0c\u79bb\u6563\u5316+\u7ebf\u6bb5\u6811or\u6811\u72b6\u6570\u7ec4\u90fd\u53ef\u4ee5\u3002\u4f46\u662f\uff0c\u5728\u7ebf\u4fee\u6539\u7684\u9006\u5e8f\u5bf9\u95ee\u9898\uff0c\u5c31\u6709\u70b9\u56f0\u96be\u4e86\u3002\n\n\u6211\u4eec\u5148\u611f\u6027\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u73a9\u610f\u513f\u600e\u4e48\u6c42\u3002\n\n\u5f53\u6211\u4eec\u4ea4\u6362$a[l]$\u548c$a[r]$\u65f6\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u4e00\u4e2a\u4ea4\u6362\uff0c\u4e0e$[1,l]$\u548c$[r,n]$\u8fd9\u4e24\u4e2a\u533a\u95f4\u5185\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u662f\u6ca1\u4ec0\u4e48\u5173\u7cfb\u7684\uff0c\u552f\u4e00\u76f8\u5173\u7684\u53ea\u6709$[l+1,r-1]$\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u6709\u5173\u3002\n\n\u539f\u672c\u80fd\u7ec4\u6210\u9006\u5e8f\u5bf9\u7684\u53ea\u6709\uff1a$a[r]$\u548c$[l+1,r-1]$\u4e2d\u6bd4\u4ed6\u5927\u7684\uff0c$a[l]$\u548c$[l+1,r-1]$\u533a\u95f4\u4e2d\u6bd4\u4ed6\u5c0f\u7684\u3002\n\n\u6211\u4eec\u7c7b\u6bd4\u4e00\u4e0b\uff0c\u65b0\u6dfb\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u5c31\u4e00\u5b9a\u662f\uff1a$a[r]$\u548c$[l+1,r-1]$\u4e2d\u6bd4\u4ed6\u5c0f\u7684\uff0c$a[l]$\u548c$[l+1,r-1]$\u533a\u95f4\u4e2d\u6bd4\u4ed6\u5927\u7684\u3002\n\n\u6700\u540e\uff0c\u518d\u7279\u5224\u4e00\u4e0b\uff1a\n\n\u5982\u679c$a[l]<a[r]$,\u90a3\u4e48$ans++$\n\n\u5982\u679c$a[l]>a[r]$,\u90a3\u4e48$ans--$\n\n\u95ee\u9898\u89e3\u51b3\u4e86\uff0c\u4e0b\u9762\u95ee\u9898\u6765\u4e86\uff0c\u600e\u6837\u89e3\u51b3\u4e0a\u8ff0\u7684\u95ee\u9898\u5462\uff1f\n\n\u6211\u4eec\u60f3\u4e00\u4e0b\uff0c\u65e2\u8981\u8bb0\u5f55\u4e00\u4e2a\u533a\u95f4\uff0c\u6709\u8981\u8bb0\u5f55\u5176\u4e2d\u6bd4\u4ed6\u5c0f\u7684\u6570\u7684\u4e2a\u6570\uff0c\u8981\u5b9e\u73b0\u4e00\u4e2a\u53cc\u91cd\u529f\u80fd\uff0c\u4e8e\u662f\uff0c\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u8dc3\u5165\u6211\u4eec\u7684\u8111\u4e2d\uff1a\u6811\u5957\u6811\u3002\uff08\u867d\u7136\u5206\u5757\u5927\u6cd5\u4e5f\u5f88\u68d2\uff0c\u4f46\u662f\uff0c\u6211\u4eec\u5c3d\u91cf\u7528\u5728\u5927\u6570\u636e\u4e0b\u4e5f\u4f9d\u7136\u4e0d\u5012\u7684\u6570\u636e\u7ed3\u6784\u3002\uff09\n\n\u6211\u4eec\u7528\u6811\u72b6\u6570\u7ec4\u7684\u4fee\u6539\u65b9\u5f0f\u6765\u5957\u5e26\u6743\u503c\u7684\u7ebf\u6bb5\u6811,\u5728\u5e26\u4e0a\u4e00\u4e2a\u52a8\u6001\u5f00\u70b9\u5c31\u597d\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=20009;\nint a[N],n,q,root[N],tot;\nstruct Segtree\n{\n\tint lc,rc,v; //lc\u4e3a\u5de6\u513f\u5b50\u8282\u70b9\u53f7\uff0crc\u4e3a\u53f3\u513f\u5b50\u8282\u70b9\u53f7 \n}tree[N<<8];\ninline void swap(int &x,int &y) {int tmp=x;x=y;y=tmp;}\ninline int read()\n{\n\tint flag=1,x=0;\n\tchar ch=getchar();\n\twhile(ch<'0' || ch>'9') {if(ch=='-') flag=-1;ch=getchar();}\n\twhile(ch>='0' && ch<='9') x=x*10+ch-'0',ch=getchar();\n\treturn x*flag;\n}\ninline int build() //\u52a8\u6001\u5f00\u70b9\uff0c\u5f00\u4e00\u4e2a\u70b9\uff0c\u5047\u8bbe\u4ed6\u6ca1\u6709\u4efb\u4f55\u5b69\u5b50\u4e14\u65e0\u6743\u503c \n{\n\ttot++;\n\ttree[tot].lc=tree[tot].rc=tree[tot].v=0;\n\treturn tot;\n}\nvoid update(int &k,int l,int r,int x,int z) //\u4fee\u6539\u64cd\u4f5c \n{\n\tif(!k) k=build();\n\tif(l==r)\n\t{\n\t\ttree[k].v+=z;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(x<=mid) update(tree[k].lc,l,mid,x,z);\n\telse update(tree[k].rc,mid+1,r,x,z);\n\ttree[k].v=tree[tree[k].lc].v+tree[tree[k].rc].v;\n}\nint query(int k,int l,int r,int x,int y) //\u67e5\u8be2\u64cd\u4f5c \n{\n\tif(!k) return 0; \n\tif(l>y || r<x) return 0;\n\tif(l>=x && r<=y) return tree[k].v;\n\tint mid=(l+r)>>1;\n\treturn query(tree[k].lc,l,mid,x,y)+query(tree[k].rc,mid+1,r,x,y);\n}\ninline void insert(int x,int y,int z) //\u7528\u6811\u72b6\u6570\u7ec4\u7684\u65b9\u6cd5\u63d2\u5165 \n{\n\tfor(;x<=n;x+=x&-x) update(root[x],1,n,y,z);\n}\ninline int sum(int x,int y,int l,int r) //\u6811\u72b6\u6570\u7ec4\u65b9\u5f0f\u67e5\u8be2 \n{\n\tint res=0;\n\tfor(;y;y-=y&-y) res+=query(root[y],1,n,l,r);\n\tfor(x--;x;x-=x&-x) res-=query(root[x],1,n,l,r);\n\treturn res;\n}\nint b[N];\n\nint main()\n{\n\tint ans=0;\n\tn=read();\n\tfor(int i=1;i<=n;i++) \n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tb[i]=a[i];\n\t}\n\t/*-------------------------\u79bb\u6563\u5316-------------------------*/\n\tsort(b+1,b+n+1);\n\tint m=unique(b+1,b+n+1)-b-1;\n\tfor(int i=1;i<=n;i++) a[i]=lower_bound(b+1,b+m+1,a[i])-b;\n\t/*-------------------------\u5c06\u8be5\u5e8f\u5217\u6309\u6811\u72b6\u6570\u7ec4\u65b9\u5f0f\u63d2\u5165\u7ebf\u6bb5\u6811-------------------------*/\n\tfor(int i=1;i<=n;i++) insert(i,a[i],1);\n\tfor(int i=2;i<=n;i++) ans+=sum(1,i-1,a[i]+1,m);\n\tq=read(); \n\tprintf(\"%d\\n\",ans);\n\twhile(q--)\n\t{\n\t\tint l=read(),r=read();\n\t\tif(l>r) swap(l,r);\n\t\t/*-------------------------\u8ba1\u7b97\u53d8\u5316\u540e\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570-------------------------*/\n\t\tans-=sum(l+1,r-1,1,a[l]-1);\n\t\tans+=sum(l+1,r-1,a[l]+1,m);\n\t\tans-=sum(l+1,r-1,a[r]+1,m);\n\t\tans+=sum(l+1,r-1,1,a[r]-1);\n\t\tif(a[l]<a[r]) ans++;\n\t\tif(a[l]>a[r]) ans--;\n\t\t/*-------------------------\u4fee\u6539-------------------------*/\n\t\tinsert(l,a[l],-1);\n\t\tinsert(l,a[r],1);\n\t\tinsert(r,a[l],1);\n\t\tinsert(r,a[r],-1);\n\t\tswap(a[l],a[r]);\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n} \n```\n\n\u5982\u679c\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u79c1\u4fe1\u95ee\u6211\u6216\u8bc4\u8bba\u533a\u4e0b\u95ee\u6211\u90fd\u884c\u3002\n\n$Thanks$ $for$ $watching$",
        "postTime": 1580101254,
        "uid": 108610,
        "name": "Dzhao",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1975 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u6392\u961f\u3011"
    },
    {
        "content": "## \u9898\u76ee\u63cf\u8ff0\r\n\r\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1975)\r\n\r\n## \u601d\u8def\r\n\r\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](http://www.cmsblog.top/archives/-guo-jia-ji-xun-dui--pai-dui)\r\n\r\n\u5bf9\u4e8e\u4ea4\u6362 $i , j$ \u7684\u6570\u5b57\uff0c\u6211\u4eec\u8003\u8651\u4ea4\u6362\u8fd9\u4e24\u4e2a\u6570\u5b57\uff08\u8bb0\u8fd9\u4e24\u4e2a\u6570\u5b57\u5206\u522b\u4e3a $a,b$\uff09\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\r\n\r\n\u663e\u7136\uff0c\u5bf9\u4e8e\u533a\u95f4 $[i+1,j-1]$ \u4e2d\u6bcf\u4e00\u4e2a\u5927\u4e8e $a$ \u7684\u6570\u5b57\u4f1a\u4ea7\u751f $+1$ \u7684\u8d21\u732e\uff0c\u6bcf\u4e00\u4e2a\u5c0f\u4e8e $a$ \u7684\u6570\u5b57\u4f1a\u4ea7\u751f $-1$ \u7684\u8d21\u732e\uff0c\u6bcf\u4e00\u4e2a\u5c0f\u4e8e $b$ \u7684\u6570\u5b57\u4f1a\u4ea7\u751f $+1$ \u7684\u8d21\u732e\uff0c\u6bcf\u4e00\u4e2a\u5927\u4e8e $b$ \u7684\u6570\u5b57\u4f1a\u4ea7\u751f $-1$ \u7684\u8d21\u732e\u3002\u6700\u540e\u8fd8\u6709 $a$ \u4e0e $b$ \u662f\u5426\u4e3a\u9006\u5e8f\u5bf9\u7684\u8d21\u732e\u3002\r\n\r\n\u663e\u7136\uff0c\u6211\u4eec\u9700\u8981\u6c42\u51fa\u533a\u95f4\u4e2d\u5927\uff08\u5c0f\uff09\u4e8e\u4e00\u4e2a\u6570\u5b57\u7684\u4e2a\u6570\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u4f7f\u7528\u6811\u5957\u6811~~\u6216\u66b4\u529b~~\u89e3\u51b3\uff0c\u4f46\u662f\u5728\u6b64\u5904\u8bb2\u4e00\u79cd\u522b\u81f4\u7684\u5206\u5757\u3002\r\n\r\n\u5bf9\u6570\u5217\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u6570\u7684\u5927\u5c0f\u7684\u503c\u57df\u4e3a $1 \\sim n$\u3002\u6211\u4eec\u4e0d\u59a8\u5728\u6570\u5217\u5206\u5757\u4e2d\u5728\u5957\u4e0a\u4e00\u4e2a\u503c\u57df\u5206\u5757\u3002\u8bb0 `Cnt1[x][y]` \u8868\u793a\u524d $x$ \u5757\u7684\u6570\u5217\u4e2d\u503c\u57df\u5728\u7b2c $y$ \u5757\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u8bb0 `Cnt2[x][y]`  \u8868\u793a\u524d $x$ \u5757\u7684\u6570\u5217\u4e2d\u6570\u5b57 $y$\uff0c\u8bb0 `Bel[i]` \u8868\u793a\u6570\u5b57 $i$ \u6240\u5bf9\u5e94\u7684\u5757\uff0c\u7531\u4e8e\u503c\u57df\u548c\u5757\u5927\u5c0f\u662f\u540c\u9636\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6570\u7ec4\u65e2\u53ef\u4ee5\u8868\u793a\u6570\u5217\u5bf9\u5e94\u7684\u5757\uff0c\u4e5f\u53ef\u4ee5\u8868\u793a\u6570\u503c\u5bf9\u5e94\u7684\u5757\u3002\r\n\r\n\u4e00\u4e0b\u7684\u64cd\u4f5c\u4ec5\u8ba8\u8bba\u67e5\u8be2\u5c0f\u4e8e\u4e00\u4e2a\u6570\u7684\u4e2a\u6570\uff0c\u5927\u4e8e\u4e00\u4e2a\u6570\u5b57\u540c\u7406\u3002\r\n\r\n\u67e5\u8be2\uff1a\u8bbe\u67e5\u8be2\u5c0f\u4e8e\u7684\u6570\u5b57\u4e3a $k$\uff0c\u5757\u5927\u5c0f\u4e3a `block_size`\u3002\u5bf9\u4e8e\u6570\u5217\u4e2d\u7684\u5757\u5916\u5143\u7d20\uff0c\u66b4\u529b\u89e3\u51b3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\sqrt n)$\u3002\u6570\u5217\u4e2d\u7684\u5757\u5185\u5143\u7d20\u6211\u4eec\u518d\u6b64\u5206\u4e3a\u4e24\u7c7b\uff0c\u7b2c\u4e00\u7c7b\u4e3a\u5b8c\u6574\u503c\u57df\u4e2d\u51fa\u73b0\uff0c\u5373\u503c\u57df `Bel[0]` $\\sim$ `Bek[k]-1`\uff0c\u8fd9\u4e2a\u5229\u7528 `Cnt1` \u524d\u7f00\u76f8\u51cf\u53ef\u4ee5\u5728 $O(\\sqrt n)$ \u7684\u65f6\u95f4\u5185\u7b97\u5b8c\uff1b\u7b2c\u4e8c\u7c7b\u4e3a\u4e0d\u5728\u5b8c\u6574\u5757\u5185\u7684\uff0c\u5373\u6570\u503c `(Bel[k]-1)*block_size+1` $\\sim k$\uff0c\u8fd9\u4e2a\u5229\u7528 `Cnt2` \u524d\u7f00\u76f8\u51cf\u53ef\u4ee5\u5728 $O(\\sqrt n)$ \u7684\u65f6\u95f4\u5185\u7b97\u5b8c\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\sqrt n)$\u3002\r\n\r\n\u4ea4\u6362\uff1a\u5c06 `Cnt1[][Bel[a]],Cnt1[][Bel[b]],Cnt2[][a],Cnt2[][a]` \u56db\u4e2a\u6570\u7ec4\u603b\u540e\u5f80\u524d\u5dee\u5206\u5373\u53ef\u5f97\u5230\u6bcf\u4e00\u5757\u7684\u6570\uff0c\u4fee\u6539\u5bf9\u5e94\u7684\u503c\u5e76\u7ef4\u62a4\u7136\u540e\u505a\u524d\u7f00\u548c\u5c31\u597d\u4e86\u3002\u8fd9\u91cc\u6709\u4e2a\u7ec6\u5fae\u7684\u4f18\u5316\uff0c\u5dee\u5206\uff08\u524d\u7f00\uff09\u53ea\u9700\u4ece `Bel[j]` \u5230 `Bel[i]` \u5c31\u53ef\u4ee5\u4e86\u3002\u7531\u4e8e\u5757\u7684\u6570\u91cf\u4e0d\u8d85\u8fc7\u6839\u53f7\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\sqrt n)$\u3002\r\n\r\n\u663e\u7136\uff0c`Cnt1` \u53ef\u4ee5 $O(n)$ \u9884\u5904\u7406\uff0c `Cnt2` \u53ef\u4ee5 $O(n\\sqrt n)$ \u9884\u5904\u7406\u3002\u81f3\u6b64\uff0c\u6211\u4eec\u5c31\u5df2\u7ecf\u5728 $O(n \\sqrt n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185 AC\u3002\r\n\r\n\u8fd9\u4e2a\u601d\u8def\u6765\u81ea\u4e8e [[Ynoi2018] \u672a\u6765\u65e5\u8bb0](https://www.luogu.com.cn/problem/P4119) \u7684\u542f\u53d1\u3002\r\n\r\n## \u4ee3\u7801\r\n\r\n```cpp\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nchar gc() {\r\n    static char now[1 << 20], *S, *T;\r\n    if (T == S) {\r\n        T = (S = now) + std::fread(now, 1, 1 << 20, stdin);\r\n        if (T == S) return EOF;\r\n    }\r\n    return *S++;\r\n}\r\ntemplate <typename T>\r\nvoid read(T &x) {\r\n    x = 0;\r\n    char c = gc();\r\n    while (c < '0' || c > '9') c = gc();\r\n    x = c - '0';\r\n    while ((c = gc()) >= '0' && c <= '9') x = x * 10 + c - '0';\r\n}\r\ntemplate <typename T, typename... Args>\r\nvoid read(T &x, Args &...args) {\r\n    read(x);\r\n    read(args...);\r\n}\r\n\r\nconst int MAXN = 20010;\r\n\r\nint Num[MAXN] , Temp[MAXN] , N , M , Num2[MAXN] , l , r , Block;\r\n\r\nlong long Sum;\r\n\r\nint Cnt1[600][600];\r\nint Cnt2[600][MAXN];\r\n\r\nint Left[600] , Right[600] , Bel[MAXN];\r\n\r\nvoid Merge(int l1 , int r1 , int l2 , int r2) {\r\n\tint ToT = 0;\r\n\twhile(l1 <= r1 && l2 <= r2) {\r\n\t\tif(Num[l1] <= Num[l2]) {\r\n\t\t\tTemp[++ToT] = Num[l1++];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tTemp[++ToT] = Num[l2++];\r\n\t\t\tSum += r1 - l1 + 1;\r\n\t\t}\r\n\t}\r\n\twhile(l1 <= r1) Temp[++ToT] = Num[l1++];\r\n\twhile(l2 <= r2) Temp[++ToT] = Num[l2++];\r\n\t\r\n\tfor(int i = ToT , j = r2; i >= 1; i--, j--) {\r\n        Num[j] = Temp[i];\r\n    }\r\n}\r\n\r\nvoid MergeSort(int l , int r) {\r\n\tif(l < r) {\r\n\t\tint Mid = l + r >> 1;\r\n\t\tMergeSort(l , Mid);\r\n\t\tMergeSort(Mid + 1 , r);\r\n\t\tMerge(l , Mid , Mid + 1 , r);\r\n\t}\r\n}\r\n\r\nint Query1(int l , int r , int k) { //\u67e5\u627e < k \u7684\u6570\u7684\u4e2a\u6570 \r\n\tint Bel_R = Bel[r] , Bel_L = Bel[l];\r\n\t\r\n\tif(Bel_L == Bel_R) {\r\n\t\tint res = 0;\r\n\t\t\r\n\t\tfor(int i = l; i <= r; i++) {\r\n\t\t\tif(Num2[i] < k) res++;\r\n\t\t}\r\n\t\t\r\n\t\treturn res;\r\n\t}\r\n\telse {\r\n\t\tint res = 0;\r\n\t\t\r\n\t\tfor(int i = l; i <= Right[Bel_L]; i++) {\r\n\t\t\tif(Num2[i] < k) res++;\r\n\t\t}\r\n\t\t\r\n\t\tfor(int i = 0; i < Bel[k]; i++) {\r\n\t\t\tres += Cnt1[Bel_R - 1][i] - Cnt1[Bel_L][i];\r\n\t\t}\r\n\t\tfor(int i = (Bel[k] - 1) * Block + 1; i < k; i++) {\r\n\t\t\tres += Cnt2[Bel_R - 1][i] - Cnt2[Bel_L][i];\r\n\t\t}\r\n\t\t\r\n\t\tfor(int i = Left[Bel_R]; i <= r; i++) {\r\n\t\t\tif(Num2[i] < k) res++;\r\n\t\t}\r\n\t\t\r\n\t\treturn res;\r\n\t}\r\n}\r\n\r\nint Query2(int l , int r , int k) { //\u67e5\u627e > k \u7684\u6570\u7684\u4e2a\u6570 \r\n\tint Bel_R = Bel[r] , Bel_L = Bel[l];\r\n\t\r\n\tif(Bel_L == Bel_R) {\r\n\t\tint res = 0;\r\n\t\t\r\n\t\tfor(int i = l; i <= r; i++) {\r\n\t\t\tif(Num2[i] > k) res++;\r\n\t\t}\r\n\t\t\r\n\t\treturn res;\r\n\t}\r\n\telse {\r\n\t\tint res = 0;\r\n\t\t\r\n\t\tfor(int i = l; i <= Right[Bel_L]; i++) {\r\n\t\t\tif(Num2[i] > k) res++;\r\n\t\t}\r\n\t\t\r\n\t\tfor(int i = Bel[N]; i > Bel[k]; i--) {\r\n\t\t\tres += Cnt1[Bel_R - 1][i] - Cnt1[Bel_L][i];\r\n\t\t}\r\n\t\tfor(int i = min(Bel[k] * Block , 20000); i > k; i--) {\r\n\t\t\tres += Cnt2[Bel_R - 1][i] - Cnt2[Bel_L][i];\r\n\t\t}\r\n\t\t\r\n\t\tfor(int i = Left[Bel_R]; i <= r; i++) {\r\n\t\t\tif(Num2[i] > k) res++;\r\n\t\t}\r\n\t\t\r\n\t\treturn res;\r\n\t}\r\n}\r\n\r\nvoid Swap(int l , int r) {\r\n\tint x = Num2[l] , y = Num2[r];\r\n\t\r\n\tint Bel_R = Bel[r] , Bel_L = Bel[l];\r\n\t\r\n\tfor(int i = Bel[N]; i >= Bel_L; i--) {\r\n\t\tCnt1[i][Bel[x]] -= Cnt1[i - 1][Bel[x]];\r\n\t\tCnt1[i][Bel[y]] -= Cnt1[i - 1][Bel[y]];\r\n\t\tCnt2[i][x] -= Cnt2[i - 1][x];\r\n\t\tCnt2[i][y] -= Cnt2[i - 1][y];\r\n\t}\r\n\t\r\n\tCnt1[Bel_L][Bel[y]]++;\r\n\tCnt1[Bel_L][Bel[x]]--;\r\n\tCnt2[Bel_L][y]++;\r\n\tCnt2[Bel_L][x]--;\r\n\t\r\n\tCnt1[Bel_R][Bel[y]]--;\r\n\tCnt1[Bel_R][Bel[x]]++;\r\n\tCnt2[Bel_R][y]--;\r\n\tCnt2[Bel_R][x]++;\r\n\t\r\n\tfor(int i = Bel_L; i <= Bel[N]; i++) {\r\n\t\tCnt1[i][Bel[x]] += Cnt1[i - 1][Bel[x]];\r\n\t\tCnt1[i][Bel[y]] += Cnt1[i - 1][Bel[y]];\r\n\t\tCnt2[i][x] += Cnt2[i - 1][x];\r\n\t\tCnt2[i][y] += Cnt2[i - 1][y];\r\n\t}\r\n\t\r\n\tswap(Num2[l] , Num2[r]);\r\n}\r\n\r\nint main() {\r\n\tscanf(\"%d\" ,&N);\r\n\t\r\n\tBlock = sqrt(N);\r\n\t\r\n\tfor(int i = 1; i <= N; i++) {\r\n\t\tscanf(\"%d\" ,&Num[i]);\r\n\t\tNum2[i] = Num[i];\r\n\t}\r\n\t\r\n\tfor(int i = 1; i <= 20000; i++) {\r\n\t\tBel[i] = (i - 1) / Block + 1;\r\n\t}\r\n\tMergeSort(1 , N);\r\n\t\r\n\tint Size = unique(Num + 1 , Num + 1 + N) - Num - 1;\r\n\t\r\n\tfor(int i = 1; i <= N; i++) {\r\n\t\tNum2[i] = lower_bound(Num + 1 , Num + 1 + Size , Num2[i]) - Num;\r\n\t}\r\n\t\r\n\tfor(int i = 1; i <= Bel[N]; i++) {\r\n\t\tLeft[i] = Right[i - 1] + 1;\r\n\t\tRight[i] = i * Block;\r\n\t}\r\n\r\n\tRight[Bel[N]] = N;\r\n\t\r\n\tfor(int i = 1; i <= Bel[N]; i++) {\r\n\t\tfor(int j = 1; j <= Bel[N]; j++) {\r\n\t\t\tCnt1[i][j] = Cnt1[i - 1][j];\r\n\t\t}\r\n\t\t\r\n\t\tfor(int j = 1; j <= N; j++) {\r\n\t\t\tCnt2[i][j] = Cnt2[i - 1][j];\r\n\t\t}\r\n\t\t\r\n\t\tfor(int j = Left[i]; j <= Right[i]; j++) {\r\n\t\t\tCnt1[i][Bel[Num2[j]]]++;\r\n\t\t\tCnt2[i][Num2[j]]++;\r\n\t\t}\r\n\t}\r\n\t\r\n\tscanf(\"%d\" ,&M);\r\n\t\r\n\tprintf(\"%lld\\n\" ,Sum);\r\n\t\r\n\r\n\twhile(M--) {\r\n\t\tscanf(\"%d%d\" ,&l ,&r);\r\n\t\t\r\n\t\tif(l > r) swap(l , r);\r\n\t\t\r\n\t\tSum = Sum - Query1(l + 1 , r - 1 , Num2[l]) + Query2(l + 1 , r - 1 , Num2[l]) + Query1(l + 1 , r - 1 , Num2[r]) - Query2(l + 1 , r - 1 , Num2[r]);\r\n\t\tif(Num2[r] > Num2[l]) Sum++;\r\n\t\tif(Num2[r] < Num2[l]) Sum--;\r\n\t\t\r\n\t\tSwap(l , r);\r\n\t\t\r\n\t\tprintf(\"%lld\\n\" ,Sum);\r\n\t}\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1651298414,
        "uid": 461426,
        "name": "CmsMartin",
        "ccfLevel": 6,
        "title": "[\u56fd\u5bb6\u96c6\u8bad\u961f]\u6392\u961f"
    },
    {
        "content": "\u8fd9\u9898\u600e\u4e48\u80fd\u6ca1\u6709$CDQ$\u5206\u6cbb\u7684\u9898\u89e3\u5462\uff1f\n\n\u663e\u7136\u8fd9\u9898\u662f\u4e00\u4e2a\u4e09\u7ef4\u504f\u5e8f\u95ee\u9898\uff0c\u548c\u90a3\u51e0\u9053\u52a8\u6001\u9006\u5e8f\u5bf9\u540c\u7406\uff0c\u7528CDQ\u5206\u6cbb\u975e\u5e38\u7684\u597d\u5199\u3002\n\n\u4e00\u6b21\u4ea4\u6362\u64cd\u4f5c\u7684\u8d21\u732e\u5c31\u53ef\u4ee5\u770b\u6210\u4e24\u6b21\u63d2\u5165\u548c\u4e24\u6b21\u5220\u9664\n\n\u5176\u4ed6\u5c31\u548c\u52a8\u6001\u9006\u5e8f\u5bf9\u4e00\u6837\u4e86\uff0c\u7edf\u8ba1\u7b54\u6848\u8981\u524d\u7f00\u548c\uff0c\u8fd8\u6709\u8fd9\u9898\u503c\u57df$1e9$\uff0c\u8981\u79bb\u6563\u5316\u3002\n\n\u4e3a\u4e86\u51cf\u5c0f\u5e38\u6570\u628a$sort$\u6362\u6210\u4e86\u5f52\u5e76\u6392\u5e8f\n\nCode\uff1a\n\n```cpp\n#pragma region revive\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <vector>\n#define inl inline\n#define re register int\n#define fa(x) t[x].fa\n#define ls(x) t[x].child[0]\n#define rs(x) t[x].child[1]\n#define ll long long\n#define mid ((l) + (r) >> 1)\nconst int inf = 0x3f3f3f3f;\n#define lowbit(x) ((x) & (-x))\nusing namespace std;\ntemplate <class Read>\ninl Read read() {\n\tRead x = 0;\n\tregister bool w = 0;\n\tregister char c = getchar();\n\twhile (c > '9' || c < '0') {\n\t\tif (c == '-')\n\t\t\tw = 1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + (c ^ 48);\n\t\tc = getchar();\n\t}\n\treturn w ? -x : x;\n}\n#pragma endregion\nstruct quiz {\n\tint v, w, poi, id;\n} q[5000001], tmp[5000001];\nint ans[100001], a[100001], t[100001], b[100001], n, tot, m;\ninl void add(int x, int w) {\n\tfor (; x <= n; x += lowbit(x))t[x] += w;\n}\ninl int query(int x) {\n\tre sum = 0;\n\tfor (; x; x -= lowbit(x))sum += t[x];\n\treturn sum;\n}\ninl void cdq(int l, int r) {\n\tif (l == r) return;\n\tre lp = l, rp = mid + 1, o = l;\n\tcdq(l, mid), cdq(mid + 1, r);\n\twhile (rp <= r) {\n\t\twhile (lp <= mid && q[rp].poi >= q[lp].poi) add(q[lp].w, q[lp].v), tmp[o++] = q[lp++];\n\t\tans[q[rp].id] += q[rp].v * (query(n) - query(q[rp].w)), tmp[o++] = q[rp++];\n\t}\n\tfor (re i = l; i < lp; i++)add(q[i].w, -q[i].v);\n\twhile (lp <= mid) tmp[o++] = q[lp++];\n\tlp = mid, rp = r;\n\twhile (rp > mid) {\n\t\twhile (lp >= l && q[rp].poi <= q[lp].poi)add(q[lp].w, q[lp].v), lp--;\n\t\tans[q[rp].id] += q[rp].v*query(q[rp].w - 1), rp--;\n\t}\n\tfor (re i = lp + 1; i <= mid; i++)add(q[i].w, -q[i].v);\n\tfor (re i = l; i <= r; i++) q[i] = tmp[i];\n}\nsigned main() {\n\tn = read<int>();\n\tfor (re i = 1; i <= n; i++) {\n\t\tq[++tot] = quiz{ 1, a[i] = b[i] = read<int>(), i, 0 };\n\t}\n\tsort(b + 1, b + 1 + n);\n\tre siz = unique(b + 1, b + 1 + n) - b;\n\tfor (re i = 1; i <= n; i++) {\n\t\tq[i].w = a[i] = lower_bound(b + 1, b + siz, a[i]) - b;\n\t}\n\tm = read<int>();\n\tfor (re i = 1; i <= m; i++) {\n\t\tre x = read<int>(), y = read<int>();\n\t\tq[++tot] = quiz{ -1, a[x], x, i };\n\t\tq[++tot] = quiz{ -1, a[y], y, i };\n\t\tswap(a[x], a[y]);\n\t\tq[++tot] = quiz{ 1, a[x], x, i };\n\t\tq[++tot] = quiz{ 1, a[y], y, i };\n\t}\n\tcdq(1, tot);\n\tfor (re i = 1; i <= m; i++) ans[i] += ans[i - 1];\n\tfor (re i = 0; i <= m; i++) printf(\"%d\\n\", ans[i]);\n}\n```\n\n",
        "postTime": 1554360144,
        "uid": 110271,
        "name": "Genius_Z",
        "ccfLevel": 0,
        "title": "P1975 \u6392\u961f CDQ\u5206\u6cbb"
    },
    {
        "content": "\u9898\u610f\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\uff0c\u6c42\u51fa\u9006\u5e8f\u5bf9\uff0c\u5e76\u4e14\u652f\u6301\u7ef4\u62a4\u4ea4\u6362\u4e24\u4e2a\u5143\u7d20\u540e\u9006\u5e8f\u5bf9\u4e2a\u6570\u7edf\u8ba1\n\n\u6570\u636e\u8303\u56f4\uff1a\u5bf9\u4e8e100%\u7684\u6570\u636e $1 \\leq n \\leq 2000$ , $1 \\leq m \\leq 20000$,\n### \u5f3a\u70c8\u8981\u6c42\u52a0\u5f3a\u6570\u636e!!!\n\n## Solution\n\n**\u4e0b\u5217\u8ba8\u8bba\u9ed8\u8ba4$l \\leq r$,\u82e5\u8f93\u5165\u4e2d\u4e0d\u7b26\uff0c\u8bf7\u4ea4\u6362 l,r**\n\n**\u82e5\u4f60\u7684\u7a0b\u5e8f\u5bf9\u4e8e\u6d4b\u8bd5\u70b9$10-15$ WA\u4e86\uff0c\u8bf7\u52a1\u5fc5\u6d4b\u8bd5\u4e0b\u9762\u7684\u6570\u636e,\u8bf7\u68c0\u67e5\u662f\u5426\u5c06\u533a\u95f4\u8be2\u95ee\u6bd4$val$\u5927/\u5c0f\u7684\u5143\u7d20\u6709\u51e0\u4e2a\u7684\u65f6\u5019\u4ea7\u751f\u7684BUG\uff0c\u8bf7\u5145\u5206\u8003\u8651\u5143\u7d20\u76f8\u540c\u7684\u60c5\u51b5**\n\n``` \ndata.in\n6\n4 4 2 3 2 2 \n2\n6 2\n6 3\n\n\ndata.out\n10\n5\n9\n\n```\n\n\u8003\u8651\u5f52\u5e76\u6392\u5e8f\u6c42\u51fa\u539f\u6765\u6570\u7ec4\u7684\u9006\u5e8f\u5bf9\uff0c\u5e76\u4e14\u5229\u7528\u4e4b\u524d\u7edf\u8ba1\u51fa\u7684\u9006\u5e8f\u5bf9\u8ba1\u7b97\u5f53\u524d\u7b54\u6848\u3002\n\n\u8003\u8651\u4ea4\u6362(l,r)\u5bf9\u9006\u5e8f\u5bf9\u4e2a\u6570\u53d8\u5316\u7684\u8d21\u732e\uff0c\n\n\u82e5\u6539\u53d8\u4f7f\u9006\u5e8f\u5bf9\u6570\u91cf\u53d8\u591a\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u6709\u6b63\u8d21\u732e\uff0c\u53cd\u4e4b\u4e3a\u8d1f\u8d21\u732e\u3002\n\n\u7531\u4e8e $ a_l , a_r$  \u4ea4\u6362\u540e\u5bf9\u4e8e\u533a\u95f4$i \\in [1,l-1]\\bigcup[r+1,n] $\u7684\u5143\u7d20$a_i$\u548c\u4e24\u4e2a\u53d8\u5316\u5143\u7d20$a_l,a_r$\u76f8\u5bf9\u4f4d\u7f6e\u6ca1\u6709\u53d1\u751f\u53d8\u5316\uff0c\u8fd9\u4e4b\u95f4\u4ea7\u751f\u8d21\u732e\u4e3a $0$\n\n\u5bf9\u4e8e\u8d21\u732e\u7406\u89e3\u4e0d\u90a3\u4e48\u6df1\u5165\u7684\u540c\u5b66\uff0c\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u6b63\u8d21\u732e\u5c31\u662f\u4f7f\u5168\u5c40\u9006\u5e8f\u5bf9\u589e\u52a0\u7684\u4ee3\u540d\u8bcd\uff0c\u8d1f\u8d21\u732e\u5c31\u662f\u4f7f\u5168\u5c40\u9006\u5e8f\u5bf9\u51cf\u5c11\u7684\u4ee3\u540d\u8bcd\u3002\n\n\u90a3\u4e48\u8003\u8651$a_l$\u79fb\u5230\u4f4d\u7f6e$r$\u4ea7\u751f\u7684\u8d21\u732e\uff1a\n\n- \u5bf9\u4e8e\u533a\u95f4$i\\in[l+1,r-1]$\u7684\u6240\u6709$a_i<a_l$\u7684\u5143\u7d20\u4ea7\u751f$ -1 $\u7684\u8d21\u732e\n- \u5bf9\u4e8e\u533a\u95f4$i\\in[l+1,r-1]$\u7684\u6240\u6709$a_i>a_l$\u7684\u5143\u7d20\u4ea7\u751f$ +1 $\u7684\u8d21\u732e\n\n\u8003\u8651$a_r$\u79fb\u5230\u4f4d\u7f6e$l$\u4ea7\u751f\u7684\u8d21\u732e\uff1a\n\n- \u5bf9\u4e8e\u533a\u95f4$i\\in[l+1,r-1]$\u7684\u6240\u6709$a_i<a_r$\u7684\u5143\u7d20\u4ea7\u751f$ +1 $\u7684\u8d21\u732e\n- \u5bf9\u4e8e\u533a\u95f4$i\\in[l+1,r-1]$\u7684\u6240\u6709$a_i>a_r$\u7684\u5143\u7d20\u4ea7\u751f$ -1 $\u7684\u8d21\u732e\n\n\u8fd8\u9700\u8981\u8003\u8651$a_l$\u548c$a_r$\u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\u5bf9\u5168\u5c40\u9006\u5e8f\u5bf9\u7684\u8d21\u732e\n\n- \u82e5$a_l < a_r$ \u90a3\u4e48\u4ea4\u6362\u540e\u4f1a\u4ea7\u751f$ 1 $\u7684\u8d21\u732e\n- \u82e5$a_l > a_r$ \u90a3\u4e48\u4ea4\u6362\u540e\u4f1a\u4ea7\u751f$-1$\u7684\u8d21\u732e\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8fd9\u6837\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u652f\u6301\uff1a\n\n- \u5355\u70b9\u63d2\u5165\n- \u5355\u70b9\u5220\u9664\n- \u533a\u95f4\u8be2\u95ee\u4e25\u683c\u7684\u6bd4$val$\u5c0f\u7684\u5143\u7d20\u6709\u591a\u5c11\u4e2a\n- \u533a\u95f4\u8be2\u95ee\u4e25\u683c\u7684\u6bd4$val$\u5927\u7684\u5143\u7d20\u6709\u591a\u5c11\u4e2a\n\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\uff1a\u5206\u5757\u6216\u8005\u6811\u5957\u6811\n\n\u6211\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u6811\u5957\u6811(\u5373\u7ebf\u6bb5\u6811\u5957Treap)\n\n\u590d\u6742\u5ea6$O(n {log_2}^2 n)$\n\n```cpp\n# include<bits/stdc++.h>\nusing namespace std;\nconst int N=4e6+10;\nint a[N],n,ans,w[N],b[N];\ninline int read()\n{\n    int X=0,w=0; char c=0;\n    while(c<'0'||c>'9') {w|=c=='-';c=getchar();}\n    while(c>='0'&&c<='9') X=(X<<3)+(X<<1)+(c^48),c=getchar();\n    return w?-X:X;\n}\nvoid write(int x)\n{\n    if (x<0) x=-x,putchar('-');\n    if (x>9) write(x/10);\n    putchar(x%10+'0');\n}\nvoid writeln(int x)\n{\n    write(x); putchar('\\n');\n}\nvoid Merge_Sort(int l,int r)\n{\n    if (l==r) return;\n    int mid=(l+r)>>1;\n    Merge_Sort(l,mid);\n    Merge_Sort(mid+1,r);\n    int i=l,j=mid+1,k=l;\n    while (i<=mid&&j<=r) {\n        if (a[i]>a[j]) ans+=mid-i+1,w[k++]=a[j++];\n        else w[k++]=a[i++];\n    }\n    while (i<=mid) w[k++]=a[i++];\n    while (j<=r) w[k++]=a[j++];\n    for (int i=l;i<=r;i++) a[i]=w[i];\n}\nstruct node{\n    int cnt,size,ch[3],key,val;\n}t[N];\nint root[N],tot;\nstruct Treap{\n    # define ls(x) t[x].ch[0]\n    # define rs(x) t[x].ch[1]\n    void up(int &x){\n        t[x].size=t[ls(x)].size+t[rs(x)].size+t[x].cnt;\n    }\n    void rotate(int &x,int d) {\n        int son=t[x].ch[d];\n        t[x].ch[d]=t[son].ch[d^1];\n        t[son].ch[d^1]=x;\n        up(x); up(x=son);\n    }\n    void insert(int &x,int val) {\n        if (!x) {\n            x=++tot;\n            t[x].size=t[x].cnt=1;\n            t[x].val=val;\n            t[x].key=rand();\n            return;\n        }\n        t[x].size++;\n        if (t[x].val==val) { t[x].cnt++; return;}\n        int d=val>t[x].val;\n        insert(t[x].ch[d],val);\n        if (t[t[x].ch[d]].key<t[x].key) rotate(x,d);\n    }\n    void erase(int &x,int val)\n    {\n        if (!x) return;\n        if (t[x].val==val) {\n            if (t[x].cnt>1) { t[x].cnt--; t[x].size--; return;}\n            int d=t[ls(x)].key>t[rs(x)].key;\n            if (ls(x)==0||rs(x)==0) x=ls(x)+rs(x);\n            else rotate(x,d),erase(x,val);\n        } else t[x].size--,erase(t[x].ch[t[x].val<val],val);\n    }\n    int rank_min(int &x,int val) { //\u5c0f\u4e8eval\u7684\u6709\u591a\u5c11\u4e2a\n        if (!x) return 0;\n        if (t[x].val==val) return t[ls(x)].size;\n        else if (t[x].val>val) return rank_min(ls(x),val);\n        else return t[ls(x)].size+t[x].cnt+rank_min(rs(x),val);\n    }\n    int rank_max(int &x,int val) { //\u5927\u4e8eval\u7684\u6709\u591a\u5c11\u4e2a\n    \tif (!x) return 0;\n    \tif (t[x].val==val) return t[rs(x)].size;\n    \telse if (t[x].val<val) return rank_max(rs(x),val);\n    \telse return t[x].cnt+t[rs(x)].size+rank_max(ls(x),val);\n    }\n    # undef ls\n    # undef rs\n}treap;\n# define lson (x<<1),l,mid\n# define rson (x<<1)+1,mid+1,r\n# define mid ((l+r)>>1)\nvoid SegInsert(int x,int l,int r,int pos,int val)\n{\n    treap.insert(root[x],val);\n    if (l==r) return;\n    if (pos<=mid) SegInsert(lson,pos,val);\n    else SegInsert(rson,pos,val);\n}\nvoid SegDelete(int x,int l,int r,int pos,int val)\n{\n    treap.erase(root[x],val);\n    if (l==r) return;\n    if (pos<=mid) SegDelete(lson,pos,val);\n    else SegDelete(rson,pos,val);\n}\nint SegMin(int x,int l,int r,int ql,int qr,int val) //\u533a\u95f4\u5185\u6bd4val\u5c0f\u7684\u6709\u591a\u5c11\n{\n    if (ql<=l&&r<=qr) return treap.rank_min(root[x],val);\n    int ret=0;\n    if (ql<=mid) ret+=SegMin(lson,ql,qr,val);\n    if (qr>mid) ret+=SegMin(rson,ql,qr,val);\n    return ret;\n}\nint SegMax(int x,int l,int r,int ql,int qr,int val) //\u533a\u95f4\u5185\u6bd4val\u5927\u7684\u6570\u6709\u591a\u5c11\n{\n    if (ql<=l&&r<=qr) return treap.rank_max(root[x],val);\n    int ret=0;\n    if (ql<=mid) ret+=SegMax(lson,ql,qr,val);\n    if (qr>mid) ret+=SegMax(rson,ql,qr,val);\n    return ret;\n}\n# undef lson\n# undef rson\n# undef mid\n/*\n \u8003\u8651\u5bf9\u4e8e\u4ea4\u6362(l,r)\u5bf9\u9006\u5e8f\u5bf9\u4ea7\u751f\u8d21\u732e\u5fc5\u7136\u5728[l,r]\u5185\n l->r\u90a3\u4e48 [l,r]\u91cc\u9762\u5927\u4e8el\u7684\u6570\u4ea7\u751f\u6b63\u8d21\u732e\uff0c\u5c0f\u4e8el\u7684\u6570\u4ea7\u751f\u8d1f\u8d21\u732e\n r->l\u90a3\u4e48 [l,r]\u91cc\u9762\u5927\u4e8er\u7684\u6570\u4ea7\u751f\u8d1f\u8d21\u732e\uff0c\u5c0f\u4e8er\u7684\u6570\u4ea7\u751f\u6b63\u8d21\u732e\n\u652f\u6301\u5355\u70b9\u5220\u9664\uff0c\u5355\u70b9\u63d2\u5165,kth\u3002\n*/\nsigned main()\n{\n    srand(time(NULL)*100007);\n    n=read();\n    for (int i=1;i<=n;i++) b[i]=a[i]=read(),SegInsert(1,1,n,i,b[i]);\n    Merge_Sort(1,n);\n    writeln(ans);\n    int m=read();\n    while (m--) {\n        int l=read(),r=read();\n        if (l>r) swap(l,r);\n        ans+=SegMax(1,1,n,l+1,r-1,b[l])-SegMin(1,1,n,l+1,r-1,b[l]);\n        ans+=SegMin(1,1,n,l+1,r-1,b[r])-SegMax(1,1,n,l+1,r-1,b[r]);\n        if (b[l]>b[r]) ans--;\n        if (b[l]<b[r]) ans++;\n        writeln(ans);\n        int vall=b[l],valr=b[r];\n        SegInsert(1,1,n,l,valr);\n        SegInsert(1,1,n,r,vall);\n        SegDelete(1,1,n,l,vall);\n        SegDelete(1,1,n,r,valr);\n        swap(b[l],b[r]);\n    }\n    return 0;\n}\n```",
        "postTime": 1553910008,
        "uid": 16456,
        "name": "ljc20020730",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1975 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u6392\u961f\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u6839\u636e $x$ \u548c $y$ \u4e4b\u95f4\u7684\u6570\u548c\u4e0a\u4e00\u6b21\u5f97\u5230\u7684\u7b54\u6848\u6765\u63a8\u51fa\u672c\u6b21\u7684\u7b54\u6848\n\n\u56e0\u4e3a $x$ \u5de6\u9762\u548c $y$ \u53f3\u9762\uff08\u9ed8\u8ba4$x<y$\uff09\u7684\u6570\u662f\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651 $x+1$ \u5230 $y-1$ \u91cc\u7684\u6570\u548c $x$ \u4e0e $y$ \u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u8fd9\u4e2a\u5e94\u8be5\u5f88\u663e\u7136\u5427\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u6c42\u4e2d\u95f4\u8fd9\u6bb5\u533a\u95f4\u4e2d\u5c0f\u4e8e $a_x$ \u5927\u4e8e $a_x$ \uff0c\u5c0f\u4e8e $a_y$\uff0c\u5927\u4e8e$a_y$ \u7684\u6570\u6709\u591a\u5c11 \uff0c\u7136\u540e\u4ee5\u4e0a\u6b21\u7b54\u6848\u4e3a\u57fa\u7840\u5206\u522b\u5904\u7406\u5f97\u5230\u65b0\u7684\u7b54\u6848\n \n$tips:$ \u6ce8\u610f $x$ \u548c $y$ \u4e24\u4e2a\u70b9\u4e4b\u95f4\u4e5f\u4f1a\u6709\u5f71\u54cd \n \n## \u5206\u5757\n\n\u8003\u8651\u5206\u5757\u6765\u505a\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5757\u5185\u90e8\u90fd\u6392\u597d\u5e8f\uff0c\u7136\u540e\u5148\u5f52\u5e76\u6392\u5e8f\u6c42\u51fa\u6700\u5f00\u59cb\u7684\u9006\u5e8f\u5bf9\u3002\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5757\u5185\u4e8c\u5206\u67e5\u627e\uff0c\u5757\u5916\u66b4\u529b\u7edf\u8ba1\u7684\u65b9\u6cd5\u6765\u5f97\u5230\u7b54\u6848\u3002\n\n\u7136\u540e\u4ea4\u6362\u4f4d\u7f6e\u5e76\u5728\u5404\u81ea\u5757\u5185\u90e8\u6392\u5e8f\u4e00\u4e0b\u5373\u53ef\n\n```cpp\nint main(){\n    n=read();\n    for(int i=1;i<=n;i++){\n        a[i]=read();\n        c[i]=a[i];\n        b[i]=a[i];\n    }\n    merge(1,n);\n    cout<<ans<<endl;\n    int k=sqrt(n);\n    int nn=n/k;\n    if(n%k!=0) nn++;\n    for(int i=1;i<=n;i++){\n        bel[i]=i/k;\n        if(i%k!=0) bel[i]++;\n        if(l[bel[i]]==0){\n            l[bel[i]]=i;\n        }\n        r[bel[i]]=i;\n    }\n    for(int i=1;i<=nn;i++){\n        sort(b+l[i],b+r[i]+1);\n    }\n    int m=read();\n    while(m--){\n        int x=read(),y=read();\n        if(x==y){\n            cout<<ans<<endl;\n            continue;\n        }\n        if(a[x]==a[y]){\n            cout<<ans<<endl;\n            continue;\n        }\n        if(x>y) swap(x,y);\n        if(a[x]<a[y]) ans++;\n        else ans--;\n        int lx=bel[x],rx=bel[y];\n        if(lx==rx){\n            for(int i=x+1;i<y;i++){\n                if(a[i]<a[x]) ans--;\n                if(a[i]>a[x]) ans++;\n                if(a[i]<a[y]) ans++;\n                if(a[i]>a[y]) ans--;\n            }\n        }\n        else{\n            for(int i=x+1;i<=r[lx];i++){\n                if(a[i]<a[x]) ans--;\n                if(a[i]>a[x]) ans++;\n                if(a[i]<a[y]) ans++;\n                if(a[i]>a[y]) ans--;\n            }\n            for(int i=l[rx];i<y;i++){\n                if(a[i]<a[x]) ans--;\n                if(a[i]>a[x]) ans++;\n                if(a[i]<a[y]) ans++;\n                if(a[i]>a[y]) ans--;\n            }\n            for(int i=bel[x]+1;i<=bel[y]-1;i++){\n                if(b[l[i]]<a[x]){\n                    int ll=l[i],rr=r[i];\n                    while(ll!=rr){\n                        int mid=ll+rr>>1;\n                        if(b[mid]<a[x]) ll=mid+1;\n                        else rr=mid;\n                    }\n                    if(ll>=l[i] && b[ll]>=a[x]) ll--;\n                    ans-=ll-l[i]+1;\n                }\n                if(b[r[i]]>a[x]){\n                    int ll=l[i],rr=r[i];\n                    while(ll!=rr){\n                        int mid=ll+rr>>1;\n                        if(b[mid]<=a[x]) ll=mid+1;\n                        else rr=mid;\n                    }\n                    ans+=r[i]-rr+1;\n                }\n                if(b[l[i]]<a[y]){\n                    int ll=l[i],rr=r[i];\n                    while(ll!=rr){\n                        int mid=ll+rr>>1;\n                        if(b[mid]<a[y]) ll=mid+1;\n                        else rr=mid;\n                    }\n                    if(ll>=l[i] && b[ll]>=a[y]) ll--;\n                    ans+=ll-l[i]+1;\n                }\n                if(b[r[i]]>a[y]){\n                    int ll=l[i],rr=r[i];\n                    while(ll!=rr){\n                        int mid=ll+rr>>1;\n                        if(b[mid]<=a[y]) ll=mid+1;\n                        else rr=mid;\n                    }\n                    ans-=r[i]-rr+1;\n                }\n            }\n        }\n        swap(a[x],a[y]);\n        for(int i=l[bel[x]];i<=r[bel[x]];i++){\n           \tb[i]=a[i];\n        }\n        for(int i=l[bel[y]];i<=r[bel[y]];i++){\n            b[i]=a[i];\n        }\n        sort(b+l[bel[x]],b+r[bel[x]]+1);\n        sort(b+l[bel[y]],b+r[bel[y]]+1);\n        cout<<ans<<endl;\n    }\n```\n\n### \u6811\u5957\u6811\n\n\u8fd9\u91cc\u5e76\u6ca1\u6709\u5173\u4e8e\u6811\u5957\u6811\u7684\u8be6\u7ec6\u8bb2\u89e3\uff0c\u53ea\u6709\u5927\u6982\u601d\u8def\n\n\u5bf9\u4e8e\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u4ed6\u7684\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u662f\u4e00\u68f5\u5e73\u8861\u6811\uff0c\u5e73\u8861\u6811\u91cc\u662f\u8be5\u7ed3\u70b9\u6240\u8868\u793a\u533a\u95f4\u91cc\u7684\u6240\u6709\u6570\n\n\u5927\u6982\u50cf\u8fd9\u4e2a\u56fe\u4e00\u6837\uff08\u56fe\u4e11\u52ff\u55b7\uff09\n\n![](https://cdn.luogu.com.cn/upload/pic/52319.png)\n\n\u6211\u4eec\u6c42\u4e00\u4e2a\u533a\u95f4\u5185\u6709\u591a\u5c11\u4e2a\u6570\u5c0f\u4e8e $x$ \uff0c\u53ef\u4ee5\u628a\u5b83\u62c6\u6210\u51e0\u4e2a\u533a\u95f4\uff0c\u5206\u522b\u8ba1\u7b97\u518d\u52a0\u548c\u8d77\u6765\uff0c\u6211\u4eec\u6309\u7167\u8fd9\u4e2a\u65b9\u6cd5\u6765\u89e3\u51b3\u95ee\u9898\n\n\u540c\u6837\u5148\u5f52\u5e76\u6392\u5e8f\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u6211\u4eec\u5c06\u8fd9\u4e2a\u533a\u95f4\u5728\u7ebf\u6bb5\u6811\u4e0a\u5206\u6210\u51e0\u4e2a\u5c0f\u533a\u95f4\uff0c\u518d\u5229\u7528\u5e73\u8861\u6811\u5f97\u5230\u6211\u4eec\u9700\u8981\u7684\u4fe1\u606f\u8fdb\u884c\u4fee\u6539\u5373\u53ef\n\n\u8be6\u60c5\u770b\u4ee3\u7801\u5427\n\n```cpp\nint n,m;\nint a[2020202];\nint ans,mx,tot,cnt;\n\nstruct node{\n    int size,cnt;\n    int ch[3];\n    int fa;\n    int val;\n}t[4040404];\n\nint rt[4040404]; \n\nvoid pushup(int p){\n    t[p].size=t[t[p].ch[0]].size+t[t[p].ch[1]].size+t[p].cnt;\n}\n\nvoid rotate(int x){\n    int y=t[x].fa,z=t[y].fa;\n    int k=(t[y].ch[1]==x);\n    t[z].ch[y==t[z].ch[1]]=x;\n    t[x].fa=z;\n    t[y].ch[k]=t[x].ch[k^1];\n    t[t[x].ch[k^1]].fa=y;\n    t[x].ch[k^1]=y;\n    t[y].fa=x;\n    pushup(y);pushup(x);\n}\n\nvoid splay(int i,int x,int goal){\n    while(t[x].fa!=goal){\n        int y=t[x].fa;\n        int z=t[y].fa;\n        if(z!=goal){\n            (t[z].ch[0]==y)^(t[y].ch[0]==x)?rotate(x):rotate(y);\n        }\n        rotate(x);\n    }\n    if(goal==0){\n        rt[i]=x;\n    }\n}\n\n\nvoid insert(int i,int x){\n    int u=rt[i],ff=0;\n    if(rt[i]==0){\n    \trt[i]=u=++cnt;\n    \tt[u].val=x;\n    \tt[u].cnt=t[u].size=1;\n    \tt[u].fa=t[u].ch[0]=t[u].ch[1]=0;\n    \treturn;\n    }\n    while(u && t[u].val!=x){\n        ff=u;\n        u=t[u].ch[x>t[u].val];\n    }\n    if(u){\n        t[u].cnt++;\n    }\n    else{\n        u=++cnt;\n        if(ff){\n            t[ff].ch[x>t[ff].val]=u;\n        }\n        t[u].fa=ff;\n        t[u].val=x;\n        t[u].cnt=t[u].size=1;\n        t[u].ch[0]=t[u].ch[1]=0;\n    }\n    splay(i,u,0);\n}\n\nint getrank(int i,int v){\n    int u=rt[i],res=0;\n    while(u){\n        if(t[u].val==v) return res+t[t[u].ch[0]].size;\n        if(t[u].val<v){\n            res+=t[u].cnt+t[t[u].ch[0]].size;\n            u=t[u].ch[1];\n        }\n        else u=t[u].ch[0];\n    }\n    return res;\n}\n\n\nvoid clear(int i){\n    t[i].ch[0]=t[i].ch[1]=t[i].fa=t[i].size=t[i].val=t[i].cnt=0;\n}\n\nint find(int i,int v){\n    int x=rt[i];\n    while(x){\n        if(t[x].val==v){\n            splay(i,x,0);\n            return x;\n        }\n        x=t[x].ch[v>t[x].val];\n    }\n}\n\nint pre(int i){\n    int x=t[rt[i]].ch[0];\n    while(t[x].ch[1]){\n        x=t[x].ch[1];\n    }\n    return x;\n}\n\nvoid del(int i,int w){\n    int x=find(i,w);\n    if(t[x].cnt>1){\n        t[x].cnt--;\n        pushup(x);\n        return;\n    }\n    if(t[x].ch[0]==0 && t[x].ch[1]==0){\n        clear(rt[i]);\n        rt[i]=0;\n        return;\n    }\n    if(t[x].ch[0]==0){\n        int y=t[x].ch[1];\n        rt[i]=y;\n        t[y].fa=0;\n        return;\n    }\n    if(t[x].ch[1]==0){\n        int y=t[x].ch[0];\n        rt[i]=y;\n        t[y].fa=0;\n        return;\n    }\n    int p=pre(i);\n    int old=rt[i];\n    splay(i,p,0);\n    t[rt[i]].ch[1]=t[old].ch[1];\n    t[t[old].ch[1]].fa=rt[i];\n    clear(old);\n    pushup(rt[i]);\n}\n\n//-------------------------------------------------------\n\nvoid segrank(int p,int l,int r,int x,int y,int v){\n    if(x<=l && y>=r) {\n        ans+=getrank(p,v);\n        return;\n    }\n    int mid=l+r>>1;\n    if(x<=mid){\n        segrank(p<<1,l,mid,x,y,v);\n    }\n    if(y>mid){\n        segrank(p<<1|1,mid+1,r,x,y,v);\n    }\n}\n\nvoid segadd(int p,int l,int r,int x,int w){\n    insert(p,w);\n    if(l==r){\n        return ;\n    }\n    int mid=l+r>>1;\n    if(x<=mid) segadd(p<<1,l,mid,x,w);\n    else segadd(p<<1|1,mid+1,r,x,w);\n}\nvoid segchange(int p,int l,int r,int x,int w){\n    del(p,a[x]);insert(p,w);\n    if(l==r){\n        a[x]=w;\n        return;\n    }\n    int mid=l+r>>1;\n    if(x<=mid) segchange(p<<1,l,mid,x,w);\n    else segchange(p<<1|1,mid+1,r,x,w);\n\n}\n\nint sum=0;\nint c[2020022],gb[2020202];\n\nvoid merge(int l,int r){\n    if(l>=r) return;\n    int mid=l+r>>1;\n    merge(l,mid);\n    merge(mid+1,r);\n    int k=l,t1=l,t2=mid+1;\n    while(t1<=mid && t2<=r){\n        if(c[t1]<=c[t2]){\n            gb[k++]=c[t1++];\n        }\n        else{\n            sum+=mid-t1+1;\n            gb[k++]=c[t2++];\n        }\n    }\n    while(t1<=mid){\n        gb[k++]=c[t1++];\n    }\n    while(t2<=r){\n        gb[k++]=c[t2++];\n    }\n    for(int i=l;i<=r;i++){\n        c[i]=gb[i];\n    }\n}\n\n\nint main(){\n    n=read();\n    for(int i=1;i<=n;i++){\n        a[i]=read();\n        c[i]=a[i];\n        segadd(1,1,n,i,a[i]);\n    }\n    merge(1,n);\n    cout<<sum<<endl;\n    int m=read();\n    while(m--){\n    \tint x=read(),y=read();\n    \tif(x==y) {\n    \t\tcout<<sum<<endl;\n    \t\tcontinue;\n        }\n    \tif(a[x]==a[y]) {\n    \t\tcout<<sum<<endl;\n    \t\tcontinue;\n        }\n        if(x>y) swap(x,y);\n        if(a[x]<a[y]) sum++;\n        else sum--;\n        ans=0;\n        segrank(1,1,n,x+1,y-1,a[x]);\n        sum-=ans;\n        ans=0;\n        segrank(1,1,n,x+1,y-1,a[x]+1);\n        sum+=(y-x+1-ans);\n        ans=0;\n        segrank(1,1,n,x+1,y-1,a[y]);\n        sum+=ans;\n        ans=0;\n        segrank(1,1,n,x+1,y-1,a[y]+1);\n        sum-=(y-x+1-ans);\n        int xa=a[x],ya=a[y];\n        segchange(1,1,n,x,ya);\n        segchange(1,1,n,y,xa);\n        cout<<sum<<endl;\n    }\n    return 0;\n}\n```\n\u5f53\u7136\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u6765\u4ee3\u66ff\u5e73\u8861\u6811\u3002\n\n\u6743\u503c\u7ebf\u6bb5\u6811\u8fd8\u53ef\u4ee5\u6c42\u524d\u9a71\u540e\u7ee7\uff0c\u4e2a\u4eba\u89c9\u5f97\u633a\u597d\u4f7f\u7684\u3002\n\n```cpp\nint n,m;\nint ans;\nint ls[20200020],rs[20200020],val[20200020]; \nint rt[20400040];\nint a[2200022];\nint cnt=0;\n//\u6743\u503c\u7ebf\u6bb5\u6811\u90e8\u5206\n\ninline void add(int &p,int l,int r,int v){\n    if(p==0){\n        cnt++;p=cnt;\n    }\n    val[p]++;\n    if(l==r){\n        return;\n    }\n    int mid=l+r>>1;\n    if(v<=mid) add(ls[p],l,mid,v);\n    else add(rs[p],mid+1,r,v);\n}\n\ninline void del(int &p,int l,int r,int v){\n    val[p]--;\n    if(l==r){\n        return;\n    }\n    int mid=l+r>>1;\n    if(v<=mid) del(ls[p],l,mid,v);\n    else del(rs[p],mid+1,r,v);\n}\n\ninline int qsum(int p,int l,int r,int x,int y){\n    if(x<=l && y>=r){\n        return val[p];\n    }\n    if(p==0) return 0;\n    int mid=l+r>>1;\n    int ans=0;\n    if(x<=mid) ans+=qsum(ls[p],l,mid,x,y);\n    if(y>mid) ans+=qsum(rs[p],mid+1,r,x,y);\n    return ans;\n}\n\n\n//\u7b2c\u4e00\u5c42\u7ebf\u6bb5\u6811\u90e8\u5206 \n\ninline void segadd(int p,int l,int r,int x,int v){\n    add(rt[p],0,1e9+1,v);\n    if(l==r){\n        return;\n    }\n    int mid=l+r>>1;\n    if(x<=mid) segadd(p<<1,l,mid,x,v);\n    else segadd(p<<1|1,mid+1,r,x,v);\n}\n\ninline void segwork1(int p,int l,int r,int x,int y,int k){\n    if(x<=l && y>=r){\n        ans+=qsum(rt[p],0,1e9+1,1,k-1);\n        return;\n    }\n    int mid=l+r>>1;\n    if(x<=mid) segwork1(p<<1,l,mid,x,y,k);\n    if(y>mid) segwork1(p<<1|1,mid+1,r,x,y,k);\n}\n\ninline void segwork3(int p,int l,int r,int x,int v){\n    del(rt[p],0,1e9+1,a[x]);\n    add(rt[p],0,1e9+1,v);\n    if(l==r){\n        return;\n    }\n    int mid=l+r>>1;\n    if(x<=mid) segwork3(p<<1,l,mid,x,v);\n    else segwork3(p<<1|1,mid+1,r,x,v);\n}\n\n\nint sum=0;\nint c[2020022],gb[2020202];\n\nvoid merge(int l,int r){\n\tif(l>=r) return;\n\tint mid=l+r>>1;\n\tmerge(l,mid);\n\tmerge(mid+1,r);\n\tint k=l,t1=l,t2=mid+1;\n\twhile(t1<=mid && t2<=r){\n\t\tif(c[t1]<=c[t2]){\n\t\t\tgb[k++]=c[t1++];\n\t\t}\n\t\telse{\n\t\t\tsum+=mid-t1+1;\n\t\t\tgb[k++]=c[t2++];\n\t\t}\n\t}\n\twhile(t1<=mid){\n\t\tgb[k++]=c[t1++];\n\t}\n\twhile(t2<=r){\n\t\tgb[k++]=c[t2++];\n\t}\n\tfor(int i=l;i<=r;i++){\n\t\tc[i]=gb[i];\n\t}\n}\n\nint main(){\n    n=read();\n    for(int i=1;i<=n;i++){\n        a[i]=read();\n        segadd(1,1,n,i,a[i]);\n        c[i]=a[i];\n    }\n    merge(1,n);\n    cout<<sum<<endl;\n    int m=read();\n    while(m--){\n    \tint x=read(),y=read();\n    \tif(x==y) {\n    \t\tcout<<sum<<endl;\n    \t\tcontinue;\n\t\t}\n    \tif(a[x]==a[y]) {\n    \t\tcout<<sum<<endl;\n    \t\tcontinue;\n\t\t}\n\t\tif(x>y) swap(x,y);\n\t\tif(a[x]<a[y]) sum++;\n\t\telse sum--;\n\t\tans=0;\n\t\tsegwork1(1,1,n,x+1,y-1,a[x]);\n\t\tsum-=ans;\n\t\tans=0;\n\t\tsegwork1(1,1,n,x+1,y-1,a[x]+1);\n\t\tsum+=(y-x+1-ans);\n\t\tans=0;\n\t\tsegwork1(1,1,n,x+1,y-1,a[y]);\n\t\tsum+=ans;\n\t\tans=0;\n\t\tsegwork1(1,1,n,x+1,y-1,a[y]+1);\n\t\tsum-=(y-x+1-ans);\n\t\tint xa=a[x],ya=a[y];\n\t\tsegwork3(1,1,n,x,ya);\n\t\tsegwork3(1,1,n,y,xa);\n\t\ta[y]=xa;\n\t\ta[x]=ya;\n\t\tcout<<sum<<endl;\n\t}\n    return 0;\n}\n```\n\n\u4ee3\u7801\u6709\u70b9\u4e11\uff0c\u8bf7\u89c1\u8c05\n\n\n",
        "postTime": 1550669272,
        "uid": 60136,
        "name": "chengni",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1975 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u6392\u961f\u3011"
    },
    {
        "content": "[\u5b89\u5229](http://www.cnblogs.com/YoungNeal/p/9009902.html)\u4e00\u4e0b\u535a\u5ba2~\n\n\u770b\u5230\u697c\u4e0b\u5927\u4f6c\u90fd\u5728\u5757\u5185\u6392\u5e8f\u52a0\u6811\u72b6\u6570\u7ec4\uff0c\u849f\u84bb\u60f3\u53d1\u8868\u4e00\u4e0b\u81ea\u5df1\u7684\u505a\u6cd5\u3002  \n\u8fd9\u91cc\u6709\u4e00\u79cd\u524d\u7f00\u548c\u601d\u60f3\u7684\u505a\u6cd5\u3002  \n\u8fd9\u4e2a\u601d\u60f3\u662f\u53d7[\u4f5c\u8bd7](https://www.luogu.org/problemnew/show/P4135)\u7684\u542f\u53d1\u3002  \n\u5728\u90a3\u9053\u9898\u4e2d\uff0c\u6211\u4eec\u501f\u7528\u524d\u7f00\u548c\u7edf\u8ba1\u4e86\u6bcf\u4e2a\u6570\u51fa\u73b0\u6b21\u6570\uff0c\u8fd9\u9053\u9898\u4e5f\u5b8c\u5168\u53ef\u4ee5\u561b\uff01   \n\u5b9a\u4e49 $sum[i][j]$ \u8868\u793a\u7b2c $1-i$ \u4e2a\u5757\uff0c\u8eab\u9ad8\u4e3a $j$ \u7684\u5c0f\u5b69\u51fa\u73b0\u7684\u6b21\u6570\u3002  \n\u6240\u6709\u8eab\u9ad8\u5148\u79bb\u6563\u5316\u4e00\u904d\u4e4b\u540e\uff0c\u6ca1\u6709\u4efb\u4f55\u64cd\u4f5c\u7684\u7b54\u6848\u5148\u6811\u72b6\u6570\u7ec4\u6c42\u4e00\u4e0b\u3002 \n\u7136\u540e\u5c31\u53ef\u4ee5\u501f\u52a9\u4ee5\u524d\u7684\u7b54\u6848\u66f4\u65b0\u5f53\u524d\u4e86\uff0c\u8fd9\u4e2a\u697c\u4e0b\u5927\u4f6c\u8bb2\u4e86\u5c31\u4e0d\u5570\u55e6\u4e86\u3002  \n\u5bf9\u4e8e\u4ea4\u6362 $[l,r]$\uff0c\u8fb9\u89d2\u66b4\u529b\uff0c\u5757\u5185\u7edf\u8ba1\u7b54\u6848\u3002  \n\u5982\u4f55\u7edf\u8ba1\u5462\uff1f\u7531\u697c\u4e0b\u5927\u4f6c\u7684\u516c\u5f0f\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u5982\u679c $a[i]<val[l]$ \uff0c\u90a3\u4e48 $ans++$\u3002\u8fd9\u662f\u5c06 $i$ \u4ece $belong[l]+1$ \u5230 $belong[r]-1$ \u5faa\u73af\u3002  \n\u6362\u4e2a\u601d\u8def\uff0c\u5982\u679c $i$ \u4ee3\u8868\u7684\u4e0d\u662f\u5143\u7d20\uff0c\u800c\u662f\u6570\u503c\u5462\uff1f  \n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c06 $i$ \u4ece1\u5230\u503c\u57df\u5faa\u73af\uff0c\u90a3\u4e48\u5982\u679c $i<val[l]$\uff0c\u90a3\u4e48 $ans$ \u5c31\u4f1a\u53d8\u5927\u3002  \n\u53d8\u5927\u591a\u5c11\u5462\uff1f\u8fd9\u4e2a\u503c\u5373\u4e3a $sum[belong[r]-1][i]-sum[belong[l]][i]$\u3002  \n\u5176\u4ed6\u4e09\u79cd\u60c5\u51b5\u540c\u7406\uff0c\u90a3\u4e48\u6bcf\u6b21\u7b54\u6848\u5c31\u6c42\u5b8c\u4e86\u3002  \n\u8bb0\u5f97\u66f4\u65b0 $sum$ \u6570\u7ec4\uff01\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#define N 20005\n#define int long long\n\nint f[N],len;\nint n,m,tot,ans;\nint sum[150][N];\nint val[N],t[N];\nint l[150],r[150];\nint block,belong[N];\n\nint ask(int x){\n\tint b=0;\n\tfor(;x;x-=x&-x)\n\t\tb+=f[x];\n\treturn b;\n}\n\nvoid add(int x){\n\tfor(;x<=n;x+=x&-x)\n\t\tf[x]++;\n}\n\nint query(int a,int b){\n\t//printf(\"a=%lld,b=%lld\\n\",a,b);\n\tif(val[a]==val[b]) return ans;\n\tif(belong[a]==belong[b] or belong[a]+1==belong[b]){\n\t\t//puts(\"dfgfhhg\");\n\t\tfor(int i=a+1;i<b;i++){\n\t\t\tif(val[i]<val[a]) ans--;\n\t\t\tif(val[i]<val[b]) ans++;\n\t\t\tif(val[i]>val[a]) ans++;\n\t\t\tif(val[i]>val[b]) ans--;\n\t\t\t//printf(\"i=%lld,val=%lld,ans=%lld\\n\",i,val[i],ans);\n\t\t}\n\t\tif(val[a]>val[b]) ans--;\n\t\tif(val[a]<val[b]) ans++;\n\t\tif(belong[a]+1==belong[b])\n\t\t\tsum[belong[a]][val[a]]--,sum[belong[a]][val[b]]++;\n\t\tval[a]^=val[b]^=val[a]^=val[b];\n\t\treturn ans;\n\t}\n\tif(val[a]>val[b]) ans--;\n\tif(val[a]<val[b]) ans++;\n\tfor(int i=a+1;i<=r[belong[a]];i++){\n\t\tif(val[i]<val[a]) ans--;\n\t\tif(val[i]<val[b]) ans++;\n\t\tif(val[i]>val[a]) ans++;\n\t\tif(val[i]>val[b]) ans--;\n\t}\n\tfor(int i=b-1;i>=l[belong[b]];i--){\n\t\tif(val[i]<val[a]) ans--;\n\t\tif(val[i]<val[b]) ans++;\n\t\tif(val[i]>val[a]) ans++;\n\t\tif(val[i]>val[b]) ans--;\n\t}\n\tfor(int i=1;i<=len;i++){\n\t\tif(i<val[a]) ans-=sum[belong[b]-1][i]-sum[belong[a]][i];\n\t\tif(i<val[b]) ans+=sum[belong[b]-1][i]-sum[belong[a]][i];\n\t\tif(i>val[a]) ans+=sum[belong[b]-1][i]-sum[belong[a]][i];\n\t\tif(i>val[b]) ans-=sum[belong[b]-1][i]-sum[belong[a]][i];\n\t}\n\tfor(int i=belong[a];i<belong[b];i++){\n\t\tsum[i][val[a]]--;\n\t\tsum[i][val[b]]++;\n\t}\n\tval[a]^=val[b]^=val[a]^=val[b];\n\t/*for(int i=1;i<=tot;i++){\n\t\tfor(int j=1;j<=len;j++)\n\t\t\tprintf(\"i=%lld,j=%lld,sum=%lld\\n\",i,j,sum[i][j]);\n\t}*/\n\treturn ans;\n}\n\nvoid file(){\n\tfreopen(\"in.txt\",\"r\",stdin);\n\tfreopen(\"out2.txt\",\"w\",stdout);\n}\n\nsigned main(){\n\t//file();\n\tscanf(\"%lld\",&n);\n\tblock=sqrt(n);\n\ttot=n/block;\n\tif(n%block) tot++;\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%lld\",&val[i]),t[i]=val[i],belong[i]=(i-1)/block+1;\n\tstd::sort(t+1,t+1+n);\n\tlen=std::unique(t+1,t+1+n)-t-1;\n\tfor(int i=1;i<=n;i++) val[i]=std::lower_bound(t+1,t+1+len,val[i])-t;\n\tfor(int i=1;i<=tot;i++)\n\t\tl[i]=(i-1)*block+1,r[i]=i*block;\n\tfor(int i=n;i;i--){\n\t\tans+=ask(val[i]-1);\n\t\tadd(val[i]);\n\t\tsum[belong[i]][val[i]]++;\n\t}\n\tfor(int i=1;i<=tot;i++){\n\t\tfor(int j=1;j<=len;j++)\n\t\t\tsum[i][j]+=sum[i-1][j];\n\t}\n\tscanf(\"%lld\",&m);\n\tprintf(\"%lld\\n\",ans);\n\twhile(m--){\n\t\tint x,y;\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\tif(x>y) x^=y^=x^=y;\n\t\tprintf(\"%lld\\n\",query(x,y));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1525773188,
        "uid": 56778,
        "name": "YoungNeal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1975 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u6392\u961f\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u7b80\u5316\u7248\u662f[P3157 CQOI2011\u52a8\u6001\u9006\u5e8f\u5bf9](https://www.luogu.com.cn/problem/P3157)\u3002\n\n\u5bf9\u4e8e\u7ef4\u62a4**\u52a8\u6001\u9006\u5e8f\u5bf9\u95ee\u9898**\u6709\u5f88\u591a\u79cd\u89e3\u6cd5\uff0c\u5176\u4e2d\u6811\u72b6\u6570\u7ec4\u5957\u7ebf\u6bb5\u6811\u662f\u6bd4\u8f83\u5e38\u89c4\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\n\n\u73b0\u5c06\u5e8f\u5217\u79bb\u6563\u5316\uff0c\u7136\u540e\u4e00\u6b21\u6dfb\u52a0\u5143\u7d20\u8fdb\u5165\u6811\u5957\u6811\u3002\n\n\u4ea4\u6362\u4f4d\u7f6e\u65f6\uff0c\u53ea\u7528\u4f9d\u6b21\u8003\u8651\u4ed6\u6240\u4ea7\u751f\u7684\u5f71\u54cd\u5373\u53ef\uff0c\u5728\u6811\u5957\u6811\u4e2d\u4fee\u6539\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$\\Theta(n\\log^2n)$,\u7a7a\u95f4\u590d\u6742\u5ea6$\\Theta(n\\log^2n)$\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<vector>\n#define ll long long\n#define ull unsigned long long\nusing namespace std;\nconst int maxn=20005;\nint n,m,rt[maxn],a[maxn],b[maxn],sum;\nnamespace tree\n{\n\tint tot;\n\tint c[maxn],ls[maxn*200],rs[maxn*200],sum[maxn*200],temp[2][20],cnt[2];\n\tinline void update(int &u,int l,int r,int x,int v)\n\t{\n\t\tif(!u)u=++tot;\n\t\tif(l==r)\n\t\t{\n\t\t\tsum[u]+=v;\n\t\t\treturn ;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(x<=mid)update(ls[u],l,mid,x,v);\n\t\t\telse update(rs[u],mid+1,r,x,v);\n\t\t\tsum[u]=sum[ls[u]]+sum[rs[u]];\n\t\t}\n\t}\n\tinline void preupdate(int x,int v,int val)\n\t{\n\t\twhile(x<=n)\n\t\t{\n\t\t\tupdate(rt[x],1,n,val,v);\n\t\t\tx+=x&-x;\n\t\t}\n\t}\n\tinline int query(int l,int r,int x,int mode)\n\t{\n\t\tcnt[0]=cnt[1]=0;\n\t\tfor(int i=l-1;i>0;i-=i&-i)temp[0][++cnt[0]]=rt[i];\n\t\tfor(int i=r;i>0;i-=i&-i)temp[1][++cnt[1]]=rt[i];\n\t\tl=1,r=n;\n\t\tint ret=0;\n\t\twhile(l<r)\n\t\t{\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(x<=mid)\n\t\t\t{\n\t\t\t\tif(mode)\n\t\t\t\t{\n\t\t\t\t\tfor(int i=1;i<=cnt[0];++i)ret-=sum[rs[temp[0][i]]];\n\t\t\t\t\tfor(int i=1;i<=cnt[1];++i)ret+=sum[rs[temp[1][i]]];\n\t\t\t\t}\n\t\t\t\tfor(int i=1;i<=cnt[0];++i)temp[0][i]=ls[temp[0][i]];\n\t\t\t\tfor(int i=1;i<=cnt[1];++i)temp[1][i]=ls[temp[1][i]];\n\t\t\t\tr=mid;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(!mode)\n\t\t\t\t{\n\t\t\t\t\tfor(int i=1;i<=cnt[0];++i)ret-=sum[ls[temp[0][i]]];\n\t\t\t\t\tfor(int i=1;i<=cnt[1];++i)ret+=sum[ls[temp[1][i]]];\n\t\t\t\t}\n\t\t\t\tfor(int i=1;i<=cnt[0];++i)temp[0][i]=rs[temp[0][i]];\n\t\t\t\tfor(int i=1;i<=cnt[1];++i)temp[1][i]=rs[temp[1][i]];\n\t\t\t\tl=mid+1;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)scanf(\"%d\",&a[i]),b[i]=a[i];\n\tsort(b+1,b+n+1);\n\tint tot=unique(b+1,b+n+1)-b-1;\n\tfor(int i=1;i<=n;++i)\n\ta[i]=lower_bound(b+1,b+tot+1,a[i])-b;\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tsum+=tree::query(1,i-1,a[i],1);\n\t\ttree::preupdate(i,1,a[i]);\n\t}\n\tprintf(\"%d\\n\",sum);\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(x>y)swap(x,y);\n\t\tsum-=tree::query(x+1,y-1,a[x],0);\n\t\tsum+=tree::query(x+1,y-1,a[x],1);\n\t\tsum-=tree::query(x+1,y-1,a[y],1);\n\t\tsum+=tree::query(x+1,y-1,a[y],0);\n\t\tif(a[x]<a[y])sum++;\n\t\tif(a[x]>a[y])sum--;\n\t\ttree::preupdate(x,-1,a[x]);\n\t\ttree::preupdate(y,-1,a[y]);\n\t\tswap(a[x],a[y]);\n\t\ttree::preupdate(x,1,a[x]);\n\t\ttree::preupdate(y,1,a[y]);\n\t\tprintf(\"%d\\n\",sum);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1588383510,
        "uid": 333789,
        "name": "lory1608",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1975 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u6392\u961f\u3011"
    },
    {
        "content": "\u4f3c\u4e4e\u6ca1\u4eba\u7528$stl$\u554a\uff0c\u90a3\u6211\u6765\u4e00\u53d1~~\u4f18\u7f8e~~\u7684$stl$\u597d\u4e86qwq\n\n\u9898\u610f\uff1a\u7ed9\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u6b21\u4ea4\u6362$a_l,a_r$\uff0c\u5e76\u4e14\u8be2\u95ee\u4ea4\u6362\u540e\u7684\u6574\u4e2a\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u6570\n\n\u521a\u5f00\u59cb\u7684\u9006\u5e8f\u5bf9\u6570\u53ef\u4ee5\u76f4\u63a5\u7528\u5f52\u5e76\u6392\u5e8f\u6c42\u51fa\u6765\uff0c\u6211\u4eec\u5148\u66f4\u65b0\u7b54\u6848\u518d\u4ea4\u6362\uff0c\u8003\u8651\u6bcf\u6b21\u4ea4\u6362\u7684$a_l,a_r$\uff0c\u4f1a\u5f71\u54cd\u9006\u5e8f\u5bf9\u7684\u53ea\u53ef\u80fd\u662f$[l,r]$\u8fd9\u4e2a\u533a\u95f4\u7684\u6570\uff0c\u5982\u679c\u5355\u72ec\u62ff\u51fa\u4e4b\u95f4\u7684\u4e00\u4e2a\u6570$a_i(l+1\\le i\\le r-1)$\u6765\u8bf4\uff0c\u5bf9\u7b54\u6848\u5219\u6709\u56db\u79cd\u53ef\u80fd\u7684\u5f71\u54cd\n\n>1. $a_i>a_l\\to ans++$\n\n>$a_i$\u6bd4$a_l$\u5927\uff0c$a_l$\u548c$a_r$\u4ea4\u6362\u4e4b\u540e$a_l$\u4e0b\u6807\u6bd4$a_i$\u5927\uff0c\u9006\u5e8f\u5bf9\u6570$+1$\n\n>2. $a_i<a_l\\to ans--$\n\n>$a_i$\u6bd4$a_l$\u5c0f\uff0c\u5df2\u7ecf\u662f\u9006\u5e8f\u5bf9\uff0c$a_l$\u548c$a_r$\u4ea4\u6362\uff0c\u9006\u5e8f\u5bf9\u6570$-1$\n\n>3. $a_i<a_r\\to ans++$\n\n>$a_i$\u6bd4$a_r$\u5c0f\uff0c$a_l$\u548c$a_r$\u4ea4\u6362\u4e4b\u540e$a_r$\u4e0b\u6807\u6bd4$a_i$\u5c0f\uff0c\u9006\u5e8f\u5bf9\u6570$+1$\n\n>4. $a_i>a_r\\to ans--$\n\n>$a_i$\u6bd4$a_r$\u5927\uff0c\u5df2\u7ecf\u662f\u9006\u5e8f\u5bf9\uff0c$a_l$\u548c$a_r$\u4ea4\u6362\uff0c\u9006\u5e8f\u5bf9\u6570$-1$\n\n\u90a3\u4e48\u6211\u4eec\u7528\u5206\u5757\u6765\u7ef4\u62a4\uff0c\u5bf9\u4e8e\u5728\u540c\u4e00\u4e2a\u5757\u6216\u76f8\u90bb\u5757\u7684\uff0c\u66b4\u529b\u679a\u4e3e$a_i$\u66f4\u65b0\u7b54\u6848\n\n\u7136\u540e\u8003\u8651\u5728\u6bcf\u4e2a\u5757\u91cc\u7ef4\u62a4\u8fd9\u4e2a\u5757\u7684\u6709\u5e8f\u5e8f\u5217\uff0c\u6bcf\u6b21\u8bbf\u95ee\u5230\u8fd9\u4e2a\u5757\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u4e8c\u5206\u67e5\u627e\u66f4\u65b0\u7b54\u6848\uff0c\u8fb9\u89d2\u7684\u6570\u76f4\u63a5\u679a\u4e3e\u66f4\u65b0\u5c31\u597d\u4e86\n\n\u8fd9\u6837\u6bcf\u6b21\u4ea4\u6362\u540e\u5bf9$a_l$\u548c$a_r$\u8c03\u6574\u4e00\u4e0b\u6240\u5728\u5757\u7684\u6709\u5e8f\u5e8f\u5217\u5c31\u597d\u4e86\n\n\u6ce8\u610f\u8be2\u95ee\u7684$l,r$\u53ef\u80fd$l>r$\u6240\u4ee5\u8981\u4ea4\u6362\n\n\u849f\u84bb\u4e5f\u4e0d\u4f1a\u7b97\u5757\u7684\u5927\u5c0f\u4ec0\u4e48\u7684\uff0c\u5e38\u6570\u8fd8\u5927\u7684\u4e00\u6279\uff0c\u5c31\u8fd9\u6837\u5427qwq\n\n**Code**\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <vector>\n#define N 20000\n#define rep(i,s,t) for (register int i=s;i<=t;i++)\n#define drep(i,s,t) for (register int i=s;i>=t;i--)\nusing namespace std;\nint n,a[N+5],data[N+5],m,bs,blo[N+5],na[N+5],ans;\nvector <int> p[N+5];\nvoid merge_sort(int l,int r)\n{\n    if (r-l>0)\n    {\n        int it=l,mid=l+r>>1,p=l,q=mid+1;\n        merge_sort(l,mid);\n        merge_sort(mid+1,r);\n        while (p<=mid||q<=r)\n        {\n            if (q>r||p<=mid&&na[p]<=na[q])\n                data[it++]=na[p++];\n            else\n            {\n                data[it++]=na[q++];\n                ans+=mid-p+1;\n            }\n        }\n        rep(i,l,r)\n            na[i]=data[i];\n    }\n}\nvoid com(int x,int l,int r)\n{\n    ans+=a[x]>a[l];\n    ans-=a[x]<a[l];\n    ans+=a[x]<a[r];\n    ans-=a[x]>a[r];\n}\nvoid reset(int x)\n{\n    p[x].clear();\n    rep(i,(x-1)*bs+1,x*bs)\n        p[x].push_back(a[i]);\n    sort(p[x].begin(),p[x].end());\n}\nvoid exc(int l,int r)\n{\n    swap(a[l],a[r]);\n    reset(blo[l]);\n    reset(blo[r]);\n}\nvoid calc(int l,int r)\n{\n    if (a[l]==a[r])\n        return;\n    ans+=(a[l]<a[r]);\n    ans-=(a[l]>a[r]);\n    if (blo[r]-blo[l]<=1)\n    {\n        rep(i,l+1,r-1)\n            com(i,l,r);\n    }\n    else\n    {\n        rep(i,l+1,blo[l]*bs)\n            com(i,l,r);\n        rep(i,(blo[r]-1)*bs+1,r-1)\n            com(i,l,r);\n        rep(i,blo[l]+1,blo[r]-1)\n        {\n            ans+=p[i].end()-upper_bound(p[i].begin(),p[i].end(),a[l]);\n            ans-=lower_bound(p[i].begin(),p[i].end(),a[l])-p[i].begin();\n            ans+=lower_bound(p[i].begin(),p[i].end(),a[r])-p[i].begin();\n            ans-=p[i].end()-upper_bound(p[i].begin(),p[i].end(),a[r]);\n        }\n    }\n    exc(l,r);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    rep(i,1,n)\n        scanf(\"%d\",&a[i]),na[i]=data[i]=a[i];\n    sort(data+1,data+n+1);\n    bs=sqrt(n);    \n    rep(i,1,n)\n    {\n        blo[i]=(i-1)/bs+1;        \n        na[i]=a[i]=lower_bound(data+1,data+n+1,a[i])-data;\n        p[blo[i]].push_back(a[i]);\n    }\n    rep(i,1,blo[n])\n        sort(p[i].begin(),p[i].end());\n    merge_sort(1,n);\n    printf(\"%d\\n\",ans);\n    scanf(\"%d\",&m);\n    int l,r;\n    rep(i,1,m)\n    {\n        scanf(\"%d%d\",&l,&r);\n        if (l>r)\n            swap(l,r);\n        calc(l,r);\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1563413056,
        "uid": 73231,
        "name": "eee_hoho",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1975 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u6392\u961f\u3011"
    },
    {
        "content": "\u770b\u5230\u5404\u4f4d\u795e\u7287\u90fd\u662f\u7528\u5206\u5757+\u6811\u72b6\u6570\u7ec4\u505a\u7684\u3002\u6211\u7279\u522b\u83dc\uff0c\u6211\u6ca1\u6709\u60f3\u5230\u8fd9\u79cd\u505a\u6cd5\uff0c\u4f46\u662f\u56e0\u4e3a\u8fd9\u4e2a\u9898\u7684\u6570\u636e\u8303\u56f4\u6bd4\u8f83\u5c0f\uff0c\u6211\u60f3\u5230\u4e86\u4e00\u79cd\u66f4\u66b4\u529b\u7684\u89e3\u51b3\u65b9\u6cd5\u3002  \n\n\u5bf9\u4e8e\u6bcf\u6b21\u4ea4\u6362\uff0c\u6211\u5e76\u6ca1\u6709\u4ece\u5176\u4ed6\u5143\u7d20\u7684\u89d2\u5ea6\u53bb\u8003\u8651\u8fd9\u6b21\u4ea4\u6362\u7684\u5f71\u54cd\uff0c\u76f8\u53cd\uff0c\u6211\u662f\u4ece\u88ab\u4ea4\u6362\u7684\u4e24\u4e2a\u5143\u7d20\u51fa\u53d1\u53bb\u8003\u8651\u3002\u5bf9\u4e8e\u4e00\u4e2a\u88ab\u4ea4\u6362\u7684\u5143\u7d20\uff0c\u5b83\u5bf9\u4e8e\u6574\u4e2a\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u8d21\u732e\u6570\u662f\u5728\u5b83\u524d\u9762\u7684\u800c\u4e14\u5927\u4e8e\u5b83\u7684\u6570\u548c\u5728\u5b83\u540e\u9762\u7684\u5e76\u4e14\u5c0f\u4e8e\u5b83\u7684\u6570\u7684\u4e2a\u6570\u548c\u3002  \n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u9884\u5904\u7406\u7684\u65f6\u5019\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u5757\u5185\u8fdb\u884c\u6392\u5e8f\uff0c\u4e4b\u540e\u5728\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9996\u5148\u627e\u5230\u8981\u4ea4\u6362\u7684\u4e24\u4e2a\u5143\u7d20\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u5176\u6240\u5728\u5757\u524d\u9762\u6240\u6709\u7684\u6574\u5757\uff0c\u6211\u4eec\u4f7f\u7528$upperbound$\u76f4\u63a5\u53bb\u67e5\u627e\u8fd9\u4e2a\u5143\u7d20\u5728\u5757\u5185\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684\u5143\u7d20\u7684\u4f4d\u7f6e\uff0c\u5c31\u80fd\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u5757\u5185\u6709\u591a\u5c11\u5143\u7d20\u5927\u4e8e\u5b83\uff0c\u5176\u6240\u5728\u5757\u540e\u9762\u6240\u6709\u7684\u7684\u6574\u5757\uff0c\u6211\u4eec\u7528$lowerbound$\u53bb\u67e5\u627e\u8fd9\u4e2a\u5143\u7d20\u5728\u5757\u5185\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u5b83\u7684\u5143\u7d20\u7684\u4f4d\u7f6e\uff0c\u5c31\u80fd\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u5757\u5185\u6709\u591a\u5c11\u4e2a\u5143\u7d20\u5c0f\u4e8e\u5b83\u3002\u81f3\u4e8e\u4e0e\u4ed6\u5728\u540c\u4e00\u5757\u5185\u7684\u5143\u7d20\uff0c\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u5224\u5b9a\u5373\u53ef\u3002  \n\n\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u8ba1\u7b97\u51fa\u8fd9\u4e24\u4e2a\u5143\u7d20\u5206\u522b\u7684\u9006\u5e8f\u5bf9\u8d21\u732e\u6570\uff0c\u6211\u4eec\u5148\u628a\u5b83\u51cf\u53bb\uff0c\u4ea4\u6362\u4ee5\u540e\u91cd\u65b0\u7edf\u8ba1\u4e24\u4e2a\u5143\u7d20\u7684\u8d21\u732e\uff0c\u518d\u52a0\u4e0a\u5373\u53ef\u3002\u6ce8\u610f\u4ea4\u6362\u4e4b\u524d\u5982\u679c$a[x]$ > $a[y]$\uff0c\u90a3\u4e48\u8fd9\u5bf9\u6570\u7684\u9006\u5e8f\u5bf9\u6570\u4f1a\u88ab\u8ba1\u7b97\u4e24\u6b21\uff0c\u8981\u51cf\u6389\uff0c\u540c\u7406\u4ea4\u6362\u4e4b\u540e\u5982\u679c$a[x]$ > $a[y]$,\u8fd9\u5bf9\u9006\u5e8f\u5bf9\u6570\u4e5f\u4f1a\u88ab\u8ba1\u7b97\u4e24\u6b21\uff0c\u4e5f\u8981\u51cf\u6389\u3002\u5728\u4ea4\u6362\u4e4b\u540e\uff0c\u4e24\u4e2a\u5143\u7d20\u6240\u5728\u7684\u5757\u66b4\u529b\u91cd\u6784\uff0c\u91cd\u65b0$sort$\u4e00\u904d\u5373\u53ef\u3002  \n\n\u6ce8\u610f\u7684\u662f\u4e00\u5f00\u59cb\u9ad8\u5ea6\u8981\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u8fd8\u6709\u5c31\u662f\u6211\u7684\u8fd9\u79cd\u505a\u6cd5\u8981\u4fdd\u8bc1$x<y$\uff0c\u5426\u5219\u6211\u4eec\u9700\u8981\u4ea4\u6362\u3002~~debug\u8fd9\u4e48\u957f\u65f6\u95f4\u5f88\u6d41\u6cea~~  \n\n\u4e4b\u540e\u8fd9\u4e2a\u9898\u5c31\u505a\u5b8c\u5566\uff0c\u4e00\u5f00\u59cb\u7684\u65f6\u5019\u6211\u7684\u786e\u4f7f\u7528\u4e86\u6811\u72b6\u6570\u7ec4\u8ba1\u7b97\u9006\u5e8f\u5bf9\u2026\u2026\u4e0d\u8fc7\u540e\u6765\u5c31\u6ca1\u7528\u4e86\u2026\u2026  \n\n\u9884\u5904\u7406\u590d\u6742\u5ea6$O(n\\log\\sqrt{n})$,\u67e5\u8be2\u590d\u6742\u5ea6\u4e3a$O(m\\sqrt{n}\\log\\sqrt{n})$\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002  \n\n\u8d34\u4e0a\u672c\u4eba\u4ee3\u7801\u3002  \n```\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<iostream>\n#include<cmath>\n#include<set>\n#include<queue>\n#define lowbit(x) x & (-x)\n#define rep(i,a,n) for(register int i = a;i <= n;i++)\n#define per(i,n,a) for(register int i = n;i >= a;i--)\n#define enter putchar('\\n')\n\nusing namespace std;\ntypedef long long ll;\nconst int M = 20005;\nconst int N = 155;\nconst int INF = 1000000009;\n\ninline int read()\n{\n    int ans = 0,op = 1;\n    char ch = getchar();\n    while(ch < '0' || ch > '9')\n    {\n\t\tif(ch == '-') op = -1;\n\t\tch = getchar();\n    }\n    while(ch >= '0' && ch <= '9')\n    {\n\t\tans *= 10;\n\t\tans += ch - '0';\n\t\tch = getchar();\n    }\n    return ans * op;\n}\n\nint n,m,B,cnt,blo[M],a[M],b[M],l[N],r[N],c[M],g = 1,tot,ans,x,y,cur1,cur2;\n\nvoid add(int x)\n{\n    while(x <= M-2) c[x]++,x += lowbit(x);\n}\n\nint ask(int x)\n{\n    int d = 0;\n    while(x) d += c[x],x -= lowbit(x);\n    return d;\n}\n\nvoid calc(int x,int y)\n{\n    int L = blo[x],R = blo[y];\n    cur1 = 0,cur2 = 0;\n    rep(i,1,L-1)\n    {\n\t\tint d = upper_bound(b+l[i],b+r[i]+1,a[x]) - b - l[i] + 1;\n\t\tcur1 += B - d + 1;\n    }\n    rep(i,l[L],x-1) if(a[i] > a[x]) cur1++;\n    rep(i,x+1,r[L]) if(a[i] < a[x]) cur1++;\n    rep(i,L+1,cnt)\n    {\n\t\tint d = lower_bound(b+l[i],b+r[i]+1,a[x]) - b - l[i] + 1;\n\t\tcur1 += d - 1;\n    }\n    rep(i,1,R-1)\n    {\n\t\tint d = upper_bound(b+l[i],b+r[i]+1,a[y]) - b - l[i] + 1;\n\t\tcur2 += B - d + 1;\n    }\n    rep(i,l[R],y-1) if(a[i] > a[y]) cur2++;\n    rep(i,y+1,r[R]) if(a[i] < a[y]) cur2++;\n    rep(i,R+1,cnt)\n    {\n\t\tint d = lower_bound(b+l[i],b+r[i]+1,a[y]) - b - l[i] + 1;\n\t\tcur2 += d - 1;\n    }\n}\n\nvoid rebuild(int x,int y)\n{\n    int L = blo[x],R = blo[y];\n    rep(i,l[L],r[L]) b[i] = a[i];\n    sort(b+l[L],b+r[L]+1);\n    rep(i,l[R],r[R]) b[i] = a[i];\n    sort(b+l[R],b+r[R]+1);\n}\n\nvoid solve(int x,int y)\n{\n    calc(x,y);\n    ans -= (cur1 + cur2);\n    if(a[x] > a[y]) ans++;\n    swap(a[x],a[y]);\n    rebuild(x,y);\n    calc(x,y);\n    ans += (cur1 + cur2);\n    if(a[x] > a[y]) ans--;\n    printf(\"%d\\n\",ans);\n}\n\nint main()\n{\n    n = read(),B = sqrt(n);\n    cnt = (n%B) ? n / B + 1 : n / B;\n    rep(i,1,n) a[i] = b[i] = read();\n    sort(b+1,b+1+n),tot = unique(b+1,b+1+n) - b - 1;\n    rep(i,1,n) a[i] = lower_bound(b+1,b+1+tot,a[i]) - b;\n    rep(i,1,n) b[i] = a[i];\n    rep(i,1,cnt) l[i] = r[i-1] + 1,r[i] = l[i] + B - 1;\n    r[cnt] = n;\n    rep(i,1,n)\n    {\n\t\tblo[i] = g;\n\t\tif(i == r[g]) g++;\n    }\n    rep(i,1,cnt) sort(b+l[i],b+r[i]+1);\n    per(i,n,1) ans += ask(a[i]-1),add(a[i]);\n    printf(\"%d\\n\",ans);\n    m = read();\n    rep(i,1,m)\n    {\n\t\tx = read(),y = read();\n\t\tif(x > y) swap(x,y);\n\t\tsolve(x,y);\n    }\n    return 0;\n}\n\n\n```",
        "postTime": 1540306130,
        "uid": 67695,
        "name": "Captain1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1975 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u6392\u961f\u3011"
    },
    {
        "content": "\u590d\u4e60\u5206\u5757\u3002\n\n\u8fd9\u9898\u7528\u6811\u72b6\u6570\u7ec4+\u5206\u5757\u53ef\u4ee5\u505a\uff0c\u6811\u5957\u6811\u4e5f\u53ef\u4ee5\u3002\n\n\u4f46\u540e\u8005\u5e38\u6570\u5de8\u5927\uff0c\u4ee3\u7801\u590d\u6742\u5ea6\u504f\u9ad8\u3002\n\n\u8fd9\u9898\u6bd4\u8f83\u5957\u8def\u3002\u5206\u5757\u4ee5\u540e\u5bf9\u4e8e\u6bcf\u4e00\u5757\u5957\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u3002\u4e24\u6570\u4ea4\u6362\u53ea\u9700\u8981\u8003\u8651\u4e2d\u95f4\u4e00\u90e8\u5206\u3002\u6574\u5757\u7684\u5728\u6811\u72b6\u6570\u7ec4\u8fdb\u884c\u67e5\u8be2\u3002\u96f6\u6563\u7684\u76f4\u63a5\u66b4\u529b\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nconst int maxn=2e4+5,maxb=200;\nstruct node{\n\tint id,x;\n}a[maxn];\nint n,h[maxn],block,r[maxb],l[maxb],belong[maxn],cnt;\ninline bool cmp(node A,node B){\n\treturn A.x<B.x;\n}\ninline void init(){\n\tscanf(\"%d\",&n);\n\tblock=(int)sqrt(n);\n\tfor (int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i].x); a[i].id=i; \n\t\tbelong[i]=(i-1)/block+1;\n\t}\n\tsort(a+1,a+1+n,cmp);\n\tfor (int i=1;i<=n;i++){\n\t\tif (a[i].x!=a[i-1].x) cnt++;\n\t\th[a[i].id]=cnt;\n\t}\n\tcnt=belong[n];\n\tfor (int i=1;i<=cnt;i++){\n\t\tl[i]=r[i-1]+1;\n\t\tr[i]=i*block;\n\t}\n\tr[cnt]=n;\n}\nint bit[maxb][maxn],m,Bit[maxn];\ninline int lowbit(int x){return x&(-x);}\ninline void update(int c[],int x,int y){for (;x<=n;x+=lowbit(x)) c[x]+=y;}\ninline int query(int c[],int x){int ans=0; for (;x;x-=lowbit(x)) ans+=c[x]; return ans;}\ninline void solve(){\n\tint ans=0;\n\tfor (int i=n;i;i--){\n\t\tans+=query(Bit,h[i]-1);\n\t\tupdate(Bit,h[i],1);\n\t\tupdate(bit[belong[i]],h[i],1);\n\t}\n\tprintf(\"%d\\n\",ans);\n\tscanf(\"%d\",&m);\n\tfor (int i=1;i<=m;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif (x>y) swap(x,y);\n\t\tint ll=belong[x]+1,rr=belong[y]-1;\n\t\tif (belong[x]!=belong[y]){\n\t\t\tfor (int j=ll;j<=rr;j++){\n\t\t\t\tans-=query(bit[j],h[x]-1);\n\t\t\t\tans+=query(bit[j],n)-query(bit[j],h[x]);\n\t\t\t\tans+=query(bit[j],h[y]-1);\n\t\t\t\tans-=query(bit[j],n)-query(bit[j],h[y]);\n\t\t\t}\n\t\t\tfor (int j=x+1;j<=r[ll-1];j++){\n\t\t\t\tif (h[j]>h[x]) ans++;\n\t\t\t\tif (h[j]>h[y]) ans--;\n\t\t\t\tif (h[j]<h[x]) ans--;\n\t\t\t\tif (h[j]<h[y]) ans++; \n\t\t\t}\n\t\t\tfor (int j=l[rr+1];j<y;j++){\n\t\t\t\tif (h[j]>h[x]) ans++;\n\t\t\t\tif (h[j]>h[y]) ans--;\n\t\t\t\tif (h[j]<h[x]) ans--;\n\t\t\t\tif (h[j]<h[y]) ans++; \n\t\t\t}\n\t\t}else{\n\t\t\tfor (int j=x+1;j<y;j++){\n\t\t\t\tif (h[j]>h[x]) ans++;\n\t\t\t\tif (h[j]>h[y]) ans--;\n\t\t\t\tif (h[j]<h[x]) ans--;\n\t\t\t\tif (h[j]<h[y]) ans++; \n\t\t\t}\n\t\t}\n\t\tif (h[x]<h[y]) ans++;\n\t\tif (h[x]>h[y]) ans--;\n\t\tprintf(\"%d\\n\",ans);\n\t\tupdate(bit[belong[x]],h[x],-1);\n\t\tupdate(bit[belong[x]],h[y],1);\n\t\tupdate(bit[belong[y]],h[y],-1);\n\t\tupdate(bit[belong[y]],h[x],1);\n\t\tswap(h[x],h[y]);\n\t}\n}\nint main(){\n\tinit();\n\tsolve();\n\treturn 0;\n} \n```",
        "postTime": 1523795339,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1975 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u6392\u961f\u3011"
    },
    {
        "content": "### \u9898\u76ee\u63cf\u8ff0\n\n\u6392\u6392\u5750\uff0c\u5403\u679c\u679c\uff0c\u751f\u679c\u751c\u55e6\u55e6\uff0c\u5927\u5bb6\u7b11\u5475\u5475\u3002\u4f60\u4e00\u4e2a\uff0c\u6211\u4e00\u4e2a\uff0c\u5927\u7684\u5206\u7ed9\u4f60\uff0c\u5c0f\u7684\u7559\u7ed9\u6211\uff0c\u5403\u5b8c\u679c\u679c\u5531\u652f\u6b4c\uff0c\u5927\u5bb6\u4e50\u548c\u548c\u3002\n\n\u7ea2\u661f\u5e7c\u513f\u56ed\u7684\u5c0f\u670b\u53cb\u4eec\u6392\u8d77\u4e86\u957f\u957f\u5730\u961f\u4f0d\uff0c\u51c6\u5907\u5403\u679c\u679c\u3002\u4e0d\u8fc7\u56e0\u4e3a\u5c0f\u670b\u53cb\u4eec\u7684\u8eab\u9ad8\u6709\u6240\u533a\u522b\uff0c\u6392\u6210\u7684\u961f\u4f0d\u9ad8\u4f4e\u9519\u4e71\uff0c\u6781\u4e0d\u7f8e\u89c2\u3002\u8bbe\u7b2ci\u4e2a\u5c0f\u670b\u53cb\u7684\u8eab\u9ad8\u4e3ahi\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5e8f\u5217\u7684\u6742\u4e71\u7a0b\u5ea6\u4e3a\uff1a\u6ee1\u8db3i<j\u4e14hi>hj\u7684(i,j)\u6570\u91cf\u3002\n\n\u5e7c\u513f\u56ed\u963f\u59e8\u6bcf\u6b21\u4f1a\u9009\u51fa\u4e24\u4e2a\u5c0f\u670b\u53cb\uff0c\u4ea4\u6362\u4ed6\u4eec\u7684\u4f4d\u7f6e\uff0c\u8bf7\u4f60\u5e2e\u5fd9\u8ba1\u7b97\u51fa\u6bcf\u6b21\u4ea4\u6362\u540e\uff0c\u5e8f\u5217\u7684\u6742\u4e71\u7a0b\u5ea6\u3002\u4e3a\u65b9\u4fbf\u5e7c\u513f\u56ed\u963f\u59e8\u7edf\u8ba1\uff0c\u5728\u672a\u8fdb\u884c\u4efb\u4f55\u4ea4\u6362\u64cd\u4f5c\u65f6\uff0c\u4f60\u4e5f\u5e94\u8be5\u8f93\u51fa\u8be5\u5e8f\u5217\u7684\u6742\u4e71\u7a0b\u5ea6\u3002\n\n### \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\n#### \u8f93\u5165\u683c\u5f0f\uff1a\n\n\u7b2c\u4e00\u884c\u4e3a\u4e00\u4e2a\u6b63\u6574\u6570n\uff0c\u8868\u793a\u5c0f\u670b\u53cb\u7684\u6570\u91cf\uff1b\n\n\u7b2c\u4e8c\u884c\u5305\u542bn\u4e2a\u7531\u7a7a\u683c\u5206\u9694\u7684\u6b63\u6574\u6570h1,h2,\u2026,hn\uff0c\u4f9d\u6b21\u8868\u793a\u521d\u59cb\u961f\u5217\u4e2d\u5c0f\u670b\u53cb\u7684\u8eab\u9ad8\uff1b\n\n\u7b2c\u4e09\u884c\u4e3a\u4e00\u4e2a\u6b63\u6574\u6570m\uff0c\u8868\u793a\u4ea4\u6362\u64cd\u4f5c\u7684\u6b21\u6570\uff1b\n\n\u4ee5\u4e0bm\u884c\u6bcf\u884c\u5305\u542b\u4e24\u4e2a\u6b63\u6574\u6570ai\u548cbi\u00ad\uff0c\u8868\u793a\u4ea4\u6362\u4f4d\u7f6eai\u4e0e\u4f4d\u7f6ebi\u7684\u5c0f\u670b\u53cb\u3002\n\n#### \u8f93\u51fa\u683c\u5f0f\uff1a\n\u8f93\u51fa\u6587\u4ef6\u5171m+1\u884c\uff0c\u7b2ci\u884c\u4e00\u4e2a\u6b63\u6574\u6570\u8868\u793a\u4ea4\u6362\u64cd\u4f5ci\u7ed3\u675f\u540e\uff0c\u5e8f\u5217\u7684\u6742\u4e71\u7a0b\u5ea6\u3002\n\n### putin\uff1a\n\n3\n\n130 150 140\n\n2\n\n2 3\n\n1 3\n\n### putout\uff1a\n\n1\n\n0\n\n3\n\n### \u9898\u610f\u7406\u89e3\n\n\u7ed9\u4e00\u4e2a\u6570\u5217\uff0c\u6c42\u539f\u59cb\u7684\u6570\u5217\u548c\u4fee\u6539(\u4ea4\u6362\u4e24\u4e2a\u6570)\u540e\u7684\u6570\u5217\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\n\n### \u5206\u6790\n\n\u9996\u5148\uff0c\u7b2c\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u9759\u6001\u9006\u5e8f\u5bf9,BIT\u548c\u5f52\u5e76\u6392\u5e8f\u4e4b\u7c7b\u7684\u90fd\u53ef\u4ee5...\n\n\u8003\u8651\u4fee\u6539(\u4ea4\u6362\u64cd\u4f5c)\n\n\u4ea4\u6362\u7b2ci\u4e2a\u548c\u7b2cj\u4e2a\u6570\u65f6(i<j)\u7684\u5f71\u54cd\n\n\u539f\u59cb\u6570\u5217\uff1a$a_1,a_2,...,a_{i-1},a_i,a_{i+1},...,a_{j-1},a_j,a_{j+1},...,a_{n-1},a_n$\n\n\u4fee\u6539\u540e\uff1a$a_1,a_2,...,a_{i-1},a_j,a_{i+1},...,a_{j-1},a_i,a_{j+1},...,a_{n-1},a_n$\n\n\u628a$a_1...a_{i-1}$\u3001$a_{i+1}...a_{j-1}$\u548c$a_{j+1}...a_n$\u5206\u522b\u770b\u6210\u4e00\u4e2a\u6574\u4f53(\u7528A,B,C\u8868\u793a)\n\n\u5f53\u7136A,B,C\u4e2d\u7684\u8d21\u732e\u7684\u4e0d\u4f1a\u6539\u53d8\u7684\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0$a_i$\u548c$a_j$\u5728A,C\u4e2d\u7684\u8d21\u732e\u662f\u6ca1\u6709\u53d8\u5316\u7684\n\n\u53ea\u7528\u8ba8\u8bba\u5728B\u4e2d\u4e0e$a_i$\u548c$a_j$\u7684\u8d21\u732e\n\n\u5148\u51cf\u53bb\u539f\u6709\u7684\u8d21\u732e\uff0c\u518d\u52a0\u4e0a\u65b0\u52a0\u4e0a\u7684\u8d21\u732e\n\n\u4e8e\u662f\u95ee\u9898\u5c31\u6210\u4e86\u5728\u4e00\u4e2a\u533a\u95f4\u5185\u9ad8\u6548\u67e5\u8be2\u6bd4\u4e00\u4e2a\u6570\u5927\u548c\u6bd4\u4e00\u4e2a\u6570\u5c0f\u7684\u6570\u6709\u51e0\u4e2a\n\n\u533a\u95f4\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e24\u4e2a\u524d\u7f00\u548c\u4e4b\u5dee\uff0c\u67e5\u8be2\u5c31\u662f\u5e73\u8861\u6811\u7684\u57fa\u672c\u64cd\u4f5c\n\n\u5c31\u53ef\u4ee5BIT\u5957SBT\n\n### Code\u548c\u4e00\u4e9b\u6ce8\u91ca\n\n```cpp\n#include<bits/stdc++.h>\n#define ls tree[x].left\n#define rs tree[x].right\nusing namespace std;\nstruct SBT {\n\tint key;\n\tint left,right,size;\n} tree[1000100];\nvoid left_rot(int &x) {\n\tint y = rs;\n\trs = tree[y].left;\n\ttree[y].left = x;\n\ttree[y].size = tree[x].size;\n\ttree[x].size = tree[ls].size + tree[rs].size + 1;\n\tx = y;\n}\nvoid right_rot(int &x) {\n\tint y = ls;\n\tls = tree[y].right;\n\ttree[y].right = x;\n\ttree[y].size = tree[x].size;\n\ttree[x].size = tree[ls].size + tree[rs].size + 1;\n\tx = y;\n}\nvoid maintain(int &x,bool flag) {\n\tif(flag == false) {\n\t\tif(tree[tree[ls].left].size > tree[rs].size)\n\t\t\tright_rot(x);\n\t\telse if(tree[tree[ls].right].size > tree[rs].size) {\n\t\t\tleft_rot(ls);\n\t\t\tright_rot(x);\n\t\t} else return;\n\t} else {\n\t\tif(tree[tree[rs].right].size > tree[ls].size)\n\t\t\tleft_rot(x);\n\t\telse if(tree[tree[rs].left].size > tree[ls].size) {\n\t\t\tright_rot(rs);\n\t\t\tleft_rot(x);\n\t\t} else return;\n\t}\n\tmaintain(ls,false);\n\tmaintain(rs,true);\n\tmaintain(x,true);\n\tmaintain(x,false);\n}\nint top=0;\nvoid insert(int &x,int key) {\n\tif(x==0) {\n\t\tx=++top;\n\t\tls=rs=0;\n\t\ttree[x].size=1;\n\t\ttree[x].key=key;\n\t} else {\n\t\ttree[x].size++;\n\t\tif(key<tree[x].key) insert(ls,key);\n\t\telse insert(rs,key);\n\t\tmaintain(x,key>=tree[x].key);\n\t}\n}\nint  delet(int &x,int key) {\n\tint d_key;\n\ttree[x].size --;\n\tif((key == tree[x].key)||(key < tree[x].key && ls == 0) ||\n\t        (key>tree[x].key && rs == 0)) {\n\t\td_key = tree[x].key;\n\t\tif(ls && rs) {\n\t\t\ttree[x].key = delet(ls,tree[x].key+1);\n\t\t} else {\n\t\t\tx = ls + rs;\n\t\t}\n\t} else if(key > tree[x].key)\n\t\td_key = delet(rs,key);\n\telse if(key < tree[x].key)\n\t\td_key = delet(ls,key);\n\treturn d_key;\n}\nint find_min(int x,int key){//\u67e5\u8be2\u5728\u5b50\u6811x\u4e2d\u6709\u51e0\u4e2a\u6bd4\u5b83\u5c0f \n\tif(!x) return 0;\n\tif(key>tree[x].key) return tree[ls].size+1+find_min(rs,key);\n\telse if(key==tree[x].key) return find_min(ls,key);\n\telse return find_min(ls,key);\n}\nint find_max(int x,int key){//\u67e5\u8be2\u5728\u5b50\u6811x\u4e2d\u6709\u51e0\u4e2a\u6bd4\u5b83\u5927 \n\tif(!x) return 0;\n\tif(key<tree[x].key) return tree[rs].size+1+find_max(ls,key);\n\telse if(key==tree[x].key) return find_max(rs,key);\n\telse return find_max(rs,key);\n}\nint root[20005],n;\nint a[20005];\nint lowbit(int i){return i&(-i);}\nvoid add(int x,int val){//\u5728x\u7684\u4f4d\u7f6e\u4e0a\u63d2\u5165val\u952e\u503c \n\tfor(int i=x;i<=n;i+=lowbit(i))\n\tinsert(root[i],val);\n}\nvoid del(int x,int val){//\u5728x\u7684\u4f4d\u7f6e\u4e0a\u5220\u53bbval\u952e\u503c\n\tfor(int i=x;i<=n;i+=lowbit(i))\n\tdelet(root[i],val);\n}\nint query_min(int x,int val){//\u67e5\u8be21~x\u4e2d\u6bd4val\u5c0f\u7684\u6709\u51e0\u4e2a \n\tint ans=0;\n\tfor(int i=x;i!=0;i-=lowbit(i))\n\tans+=find_min(root[i],val);\n\treturn ans;\n}\nint query_max(int x,int val){//\u67e5\u8be21~x\u4e2d\u6bd4val\u5927\u7684\u6709\u51e0\u4e2a\n\tint ans=0;\n\tfor(int i=x;i!=0;i-=lowbit(i))\n\tans+=find_max(root[i],val);\n\treturn ans;\n}\nint ans=0;\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tadd(i,a[i]);\n\t}//\u8f93\u5165\u987a\u5e26\u9884\u5904\u7406 \n\tfor(int i=2;i<=n;i++){\n\t\tint tmp=query_max(i-1,a[i]);\n\t\tans+=tmp;\n\t}//\u627e\u539f\u59cb\u6570\u5217\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570 \n\tprintf(\"%d\\n\",ans);\n\tint m;scanf(\"%d\",&m);\n\twhile(m--){\n\t\tint l,r;\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tif(l>r) swap(l,r);//\u907f\u514d\u53f3\u7aef\u70b9\u6bd4\u5de6\u7aef\u70b9\u8fd8\u5c0f \n\t\tif(a[l]==a[r]){//\u6ca1\u6709\u4efb\u4f55\u53d8\u5316 \n\t\t\tprintf(\"%d\\n\",ans);\n\t\t\tcontinue;\n\t\t}\n\t\tif(r-l==1){//\u76f4\u63a5\u4ea4\u6362\u4e24\u4e2a\u6570 \n\t\t\tif(a[l]<a[r]) ans++;else ans--;//a_i\u548ca_j\u7684\u8d21\u732e \n\t\t\tprintf(\"%d\\n\",ans);\n\t\t\tdel(l,a[l]);add(l,a[r]);//\u5220\u53bb\u539f\u6765\u7684\u503c\u548c\u52a0\u5165\u65b0\u503c \n\t\t\tdel(r,a[r]);add(r,a[l]);\n\t\t\tswap(a[l],a[r]);//\u4ea4\u6362\u503c \n\t\t\tcontinue;\t\t\t\n\t\t}\n\t\t\n\t\t//\u7edf\u8ba1\u53f3\u7aef\u70b9\u7684\u8d21\u732e \n\t\tans-=query_max(r-1,a[r])-query_max(l,a[r]);//\u51cf\u53bb\u539f\u6765\u7684 \n\t\tans+=query_min(r-1,a[r])-query_min(l,a[r]);//\u52a0\u4e0a\u73b0\u5728\u7684 \n\t\t\n\t\t//\u7edf\u8ba1\u5de6\u7aef\u70b9\u7684\u8d21\u732e \n\t\tans-=query_min(r-1,a[l])-query_min(l,a[l]);//\u540c\u7406 \n\t\tans+=query_max(r-1,a[l])-query_max(l,a[l]);\n\t\t\n\t\tif(a[l]<a[r]) ans++;\n\t\telse ans--;\n\t\tprintf(\"%d\\n\",ans);\n\t\tdel(l,a[l]);add(l,a[r]);\n\t\tdel(r,a[r]);add(r,a[l]);\n\t\tswap(a[l],a[r]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1556814160,
        "uid": 87691,
        "name": "Cheng_yf",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1975 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u6392\u961f\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\t\u4e3a\u4f55\u90fd\u662f\u5206\u5757\u9898\u89e3\uff0c\u90a3\u849f\u84bb\u5c31\u6765\u4e2a\u6811\u5957\u6811\u597d\u4e86\n## \u601d\u8def \n\u5e8f\u5217a b c L d e f R g h\u4e2d(\u4e3a\u503c\uff0c\u4e0b\u68071\u523010)\n\n\u73b0\u9006\u5e8f\u5bf9\u4e3aans,\u8981\u4ea4\u6362L,R\n\n\u5219$[1,3],[9,10]$\u8fd9\u4e24\u6bb5\u533a\u95f4\u7684\u90fd\u4e0d\u4f1a\u88ab\u4ed6\u4fe9\u5f71\u54cd (\u56e0\u4e3aL,R\u548c\u4ed6\u4eec\u76f8\u5bf9\u4f4d\u7f6e\u6ca1\u53d8\u5566)\n\n\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u533a\u95f4$[4,8]$\u5c31\u597d\uff0c\u5176\u4ed6\u7684\u4e0d\u8003\u8651\u5728\u5185\n\u4e00\u4e2a\u6570\u5bf9\u4e00\u4e2a\u533a\u95f4\u4ea7\u751f\u9006\u5e8f\u5bf9\u7684\u8d21\u732e\u4e3a\n\n\u2460 \u524d\u9762\u5927\u4e8e\u4ed6\u7684\u6570\u7684\u4e2a\u6570 (\u5728\u533a\u95f4\u524d\u9762)\n\n\u2461 \u540e\u9762\u5c0f\u4e8e\u4ed6\u7684\u6570\u7684\u4e2a\u6570 (\u5728\u533a\u95f4\u540e\u9762) \n\n\u56e0\u4e3a$L,R$\u4e4b\u95f4\u7684\u533a\u95f4[3,6](\u6211\u4eec\u53eb\u4ed6\u533a\u95f4zz)\u662f\u4e0d\u53d8\u7684(\u5e9f\u8bdd)\n\n$L,R$\u53c8\u5728\u533a\u95f4\u4e24\u7aef \n\n\u90a3\u4e48\u5f88\u663e\u7136\u7684 \n\nans=ans-(L\u5bf9\u533a\u95f4zz\u7684\u8d21\u732e\u2461)+(L\u5bf9\u533a\u95f4zz\u7684\u8d21\u732e\u2460)-(R\u5bf9\u533a\u95f4zz\u7684\u8d21\u732e\u2460)+(R\u5bf9\u533a\u95f4zz\u7684\u8d21\u732e\u2461)\n\n\u90a3\u533a\u95f4\u5185\u7684\u8d21\u732e\u548b\u6c42\u554a\uff1f\n\n\u5b9a\u4e49\u4e0d\u662f\u5f88\u660e\u786e\u4e86\u5417 \u5c31\u662f\u533a\u95f4\u5927\u4e8ex\u6216\u8005\u5c0f\u4e8e\u7684\u4e2a\u6570\n\n=>ans-(\u533a\u95f4zz\u5185\u5c0f\u4e8eL\u7684\u4e2a\u6570)+(\u533a\u95f4zz\u5185\u5927\u4e8eL\u7684\u4e2a\u6570)-(\u533a\u95f4zz\u5185\u5927\u4e8eR\u7684\u4e2a\u6570)+(\u533a\u95f4zz\u5185\u5c0f\u4e8eR\u7684\u4e2a\u6570)\n\n(\u6ce8\u610f\uff0c\u76f8\u7b49\u7684\u6ca1\u6709\u4efb\u4f55\u8d21\u732e)\n\n\u65e0\u8111\u6570\u636e\u7ed3\u6784\u5457 \n\n\u968f\u4fbf\u6765\u4e2a\u5e26\u4fee\u4e3b\u5e2d\u6811 (\u6811\u72b6\u6570\u7ec4\u5957\u7ebf\u6bb5\u6811)\n\n\u590d\u6742\u5ea6$nlog^{2}n$ \n\n\u4f46\u5e38\u6570\u5de8\u5927\uff0c\u66f4\u65b0\u4e00\u6b21ans\u8981\u8be2\u95ee8\u6b21 \n\n\u770b\u5230\u5404\u4f4d\u5206\u5757\u5927\u4f6c\uff0c\u849f\u84bb\u745f\u745f\u53d1\u6296\n## \u4ee3\u7801\n```cpp\n//\u5929\u82cd\u82cd\uff0c\u91ce\u832b\u832b\uff0c\u4ee3\u7801\u600e\u4e48\u8fd9\u4e48\u957f\n#include <bits/stdc++.h>\n#define FOR(i,a,b) for(int i=a;i<=b;++i)\nusing namespace std;\nconst int maxn=1e5+7;\nint read() {\n    int x=0,f=1;char s=getchar();\n    for(;s>'9'||s<'0';s=getchar()) if(s=='-') f=-1;\n    for(;s>='0'&&s<='9';s=getchar()) x=x*10+s-'0';\n    return x*f;\n}\nint n,m,ans,len,rt[maxn],a[maxn],lsh[maxn],cnt;\nint thu[maxn];\nstruct node {\n    int ch[2],siz;\n}e[maxn*30];\nvoid build(int &now,int old,int l,int r,int k) {\n     now=++cnt;\n     e[now]=e[old];\n     e[now].siz++;\n     if(l==r) return;\n     int mid=(l+r)>>1;\n     if(k<=mid) build(e[now].ch[0],e[old].ch[0],l,mid,k);\n     else build(e[now].ch[1],e[old].ch[1],mid+1,r,k);\n}\nvoid modify(int &now,int l,int r,int k,int gs) {\n    if(!now) now=++cnt;\n    e[now].siz+=gs;\n    if(l==r) return;\n    int mid=(l+r)>>1;\n    if(k<=mid) modify(e[now].ch[0],l,mid,k,gs);\n    else modify(e[now].ch[1],mid+1,r,k,gs);\n}\nint query1(int now,int l,int r,int k) { //\u5c0f\u4e8emid\u7684\u6570 \n    if(l>=k) return 0;\n    if(r<k) {\n        int tot=e[now].siz;\n        FOR(i,1,thu[0]) tot+=e[thu[i]].siz;\n        return tot;\n    }\n    int mid=(l+r)>>1;\n    if(k<=mid) {\n        FOR(i,1,thu[0]) thu[i]=e[thu[i]].ch[0];\n        return query1(e[now].ch[0],l,mid,k);\t\n    } else {\n        int tot=e[e[now].ch[0]].siz;\n        FOR(i,1,thu[0]) tot+=e[e[thu[i]].ch[0]].siz;\n        FOR(i,1,thu[0]) thu[i]=e[thu[i]].ch[1];\n        return tot+query1(e[now].ch[1],mid+1,r,k);\t\n    }\n}\nint query2(int now,int l,int r,int k) { //\u5927\u4e8emid\u7684\u6570 \n    if(r<=k) return 0;\n    if(l>k) {\n        int tot=e[now].siz;\n        FOR(i,1,thu[0]) tot+=e[thu[i]].siz;\n        return tot;\n    }\n    int mid=(l+r)>>1;\n    if(k<=mid) {\n        int tot=e[e[now].ch[1]].siz;\n        FOR(i,1,thu[0]) tot+=e[e[thu[i]].ch[1]].siz;\n        FOR(i,1,thu[0]) thu[i]=e[thu[i]].ch[0];\n        return tot+query2(e[now].ch[0],l,mid,k);\n    } else {\n        FOR(i,1,thu[0]) thu[i]=e[thu[i]].ch[1];\n        return query2(e[now].ch[1],mid+1,r,k);\t\n    }\n}\nint solve(int l,int r,int k,int pd) {//\u533a\u95f4\u5185\u5c0f\u4e8e(\u6216\u5c0f\u4e8e)k\u7684\u4e2a\u6570\n    int tmp=0;\n    \n    thu[0]=0;\n    for(int i=r;i>=1;i-=(i&-i)) thu[++thu[0]]=rt[i+n];\n    tmp+=pd ? query1(rt[r],1,len,k) : query2(rt[r],1,len,k);\n    \n    thu[0]=0;\n    for(int i=l-1;i>=1;i-=(i&-i)) thu[++thu[0]]=rt[i+n];\n    tmp-=pd ? query1(rt[l-1],1,len,k) : query2(rt[l-1],1,len,k);\n    \n    return tmp;\n}\nnamespace get_init_ans {\n    int sum[maxn];\n    void BIT_modify(int x) {\n        for(int i=x;i<=n;i+=(i&-i)) sum[i]++;\n    }\n    int BIT_query(int x) {\n        int tot=0;\n        for(int i=x;i>=1;i-=(i&-i)) tot+=sum[i];\n        return tot;\n    } \n    void get_ans() {\n        for(int i=1;i<=n;++i) {\n            BIT_modify(a[i]); \n            ans+=i-BIT_query(a[i]);\n        }\n    }\n}\nusing namespace get_init_ans; \nint main() {\n    //read\n    n=read();\n    FOR(i,1,n) a[i]=lsh[i]=read();\n    //lsh and init\n    sort(lsh+1,lsh+1+n);\n    len=unique(lsh+1,lsh+1+n)-lsh-1;\n    FOR(i,1,n) {\n        a[i]=lower_bound(lsh+1,lsh+1+len,a[i])-lsh;\t\n        build(rt[i],rt[i-1],1,len,a[i]);\n    }\n    //get_ans\n    get_ans();\n    cout<<ans<<\"\\n\";\n    //work\n    m=read();\n    FOR(i_ak_ioi,1,m) {\n        int x=read(),y=read(),l,l1=0,l2=0,r,r1=0,r2=0;\n        if(a[x]==a[y]) {\n            cout<<ans<<\"\\n\";\n            continue;   \n        }\n        if(x>y) swap(x,y);\n        //query\n        l=x+1,r=y-1;\n        if(l<=r) {\n            l2=solve(l,r,a[x],1);\n            l1=solve(l,r,a[x],0);\n            r2=solve(l,r,a[y],1);\n            r1=solve(l,r,a[y],0);\n        }\n        //update\n        ans=ans-l2+l1-r1+r2+(a[x]<a[y] ? 1 : -1);\n        cout<<ans<<\"\\n\";\n        //update\n        for(int i=x;i<=n;i+=(i&-i)) {\n            modify(rt[i+n],1,len,a[x],-1);\n            modify(rt[i+n],1,len,a[y],1);\n        }\n        for(int i=y;i<=n;i+=(i&-i)) {\n            modify(rt[i+n],1,len,a[y],-1);\n            modify(rt[i+n],1,len,a[x],1);\t\n        }\n        swap(a[x],a[y]);\n    }\n    return 0;\n}\n```",
        "postTime": 1544790407,
        "uid": 92100,
        "name": "\u590d\u6742\u7684\u54c8\u76ae\u72d7",
        "ccfLevel": 7,
        "title": "P1975 [\u56fd\u5bb6\u96c6\u8bad\u961f]\u6392\u961f"
    },
    {
        "content": "~~\u5927\u5bb6\u548b\u90fd\u4e71\u641e\u5462...~~\n\n\u6765\u4e2a\u6b63\u7ecf\u70b9\u7684\u6811\u5957\u6811\u5427,\u5927\u81f4\u662f\u6811\u72b6\u6570\u7ec4\u5957\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811(\u5916\u9762\u662f\u6811\u72b6\u6570\u7ec4,\u91cc\u9762\u662f\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811),\u6839\u636e\u6c42\u9006\u5e8f\u5bf9\u7684\u5e38\u89c4\u64cd\u4f5c,\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\u533a\u95f4\u548c\u5c31\u597d\u4e86.\n\n~~\u6211\u975e\u5e38\u65e0\u804a\u7684\u79bb\u6563\u5316\u4e86\u4e00\u4e0b~~\n\n### \u7b2c\u4e00\u6b65:\u6784\u5efa\u6811\u5957\u6811\n\n\u628a\u6bcf\u4e2a\u70b9\u52a0\u8fdb\u6811\u72b6\u6570\u7ec4\u4e2d,\u7136\u540e\u7ef4\u62a4\u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u548c.\n\n#### \u7ef4\u62a4\u533a\u95f4\u548c\n\u5728\u7b2cp\u4e2a\u70b9\u52a0\u4e0as(s\u4e3a1\u5219\u4e3a\u52a0\u70b9,\u4e3a-1\u5219\u4e3a\u5220\u70b9)\n\n```cpp\n\nvoid add(int p,int s,int k)\n{\n    int l=1,r=mx,mid;\n    while (l<r)\n    {\n        t[k].sum+=s;\n        mid=(l+r)>>1;\n        if (p<=mid)\n        {\n            if (!t[k].l) t[k].l=++top;\n            k=t[k].l;\n            r=mid;\n        }\n        else\n        {\n            if (!t[k].r) t[k].r=++top;\n            k=t[k].r;\n            l=mid+1;\n        }\n    }\n    t[k].sum+=s;\n}\n```\n\n#### \u52a0\u5165\u6811\u72b6\u6570\u7ec4\n\n\u8981\u628a\u6bcf\u4e2a\u70b9\u90fdupdata\u4e00\u4e0b\n\n```cpp\nvoid updata(int k,int s)\n{\n    int p=k;\n    while (p<=n) add(h[k],s,root[p]),p+=p & (-p);\n}\n```\n\n\n#### \u56e0\u4e3a\u6bcf\u4e2a\u70b9\u4f1a\u88ab\u585e\u5230\u6811\u72b6\u6570\u7ec4\u4e2dlog\u4e2a\u70b9\u4e2d,\u6bcf\u4e2a\u70b9\u4e2d\u7ef4\u62a4\u7ebf\u6bb5\u6811,\u6240\u4ee5\u65f6\u7a7a\u590d\u6742\u5ea6$O(nloglogn)$\n\n### \u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee,\u7ef4\u62a4\u6811\u72b6\u6570\u7ec4\u548c\u9006\u5e8f\u5bf9\u5373\u53ef.\n\n#### \u5f97\u5230\u4e00\u4e2a\u70b9\u7684\u9006\u5e8f\u5bf9\u8d21\u732e\n\n\u5229\u7528\u6811\u72b6\u6570\u7ec4\u524d\u7f00\u7684\u7279\u70b9\u6c42\u51fa1~p-1\u4e2dh[p]+1~mx\u7684\u6570\u6709\u51e0\u4e2a\u548cp+1~n\u4e2d1~h[p]\u6709\u51e0\u4e2a\n```cpp\nint ask(int x,int y,int l,int r,int k)//\u7ebf\u6bb5\u6811\u5e38\u89c4\u533a\u95f4\u8be2\u95ee\n{\n    if ((!k)||(!t[k].sum)) return 0;\n    if ((l==x)&&(r==y)) return t[k].sum;\n    int mid=(l+r)>>1;\n    if (y<=mid) return ask(x,y,l,mid,t[k].l);\n    if (x>mid) return ask(x,y,mid+1,r,t[k].r);\n    return ask(x,mid,l,mid,t[k].l)+ask(mid+1,y,mid+1,r,t[k].r);\n}\n```\n```cpp\nint query(int k,int l,int r)//\u8be2\u95ee1~k\u4e2dl~r\u7684\u6570\u6709\u51e0\u4e2a\n{\n    if (k<1) return 0;\n    if (k>n) return 0;\n    if (l>r) return 0;\n    int p=k;\n    long long res=0;\n    while (p) res+=ask(l,r,1,mx,root[p]),p-=p & (-p);\n    return res;\n}\n```\n```cpp\n\nint getans(int p)//\u5904\u7406\u70b9p\u5bf9\u7b54\u6848\u7684\u8d21\u732e\n{\n    return query(p-1,h[p]+1,mx)+query(n,1,h[p]-1)-query(p-1,1,h[p]-1);\n}\n```\n\n#### \u5904\u7406\u8be2\u95ee\u7684\u4e3b\u7a0b\u5e8f\n```cpp\nwhile (q--)\n    {\n        scanf(\"%d%d\",&x,&y);\n        if (x>y) swap(x,y);\n        if (h[x]>h[y]) ans++;//\u5982\u679cx,y\u662f\u4e00\u5bf9\u9006\u5e8f\u5bf9,\u540e\u9762\u8d21\u732e\u4f1a\u91cd\u590d\u51cf\n        ans-=getans(x)+getans(y);//\u51cf\u53bb\u539f\u6765x,y\u7684\u8d21\u732e\n        updata(x,-1);updata(y,-1);//\u5220\u53bb\u539f\u6765x,y\u4e0a\u7684\u6570\n        swap(h[x],h[y]);\n        if (h[x]>h[y]) ans--;//\u540c\u4e0a,\u4f1a\u91cd\u590d\u52a0\n        updata(x,1);updata(y,1);//\u52a0\u4e0a\u73b0\u5728x,y\u4e0a\u7684\u6570\n        ans+=getans(x)+getans(y);//\u66f4\u65b0\u7b54\u6848\n        printf(\"%lld\\n\",ans);\n    }\n```\n#### \u89c6\u4fee\u6539\u70b9\u6570\u4e3a\u5e38\u6570,\u90a3\u4e48\u4fee\u6539\u4e86\u6570\u7ec4\u6570\u7ec4\u4e2dlog\u4e2a\u70b9,\u540c\u65f6\u7ef4\u62a4log\u9897\u7ebf\u6bb5\u6811,\u6240\u4ee5\u65f6\u7a7a\u590d\u6742\u5ea6\u4e3a$O(loglogn)$(\u5355\u6b21\u4fee\u6539)\n\n#### \u7efc\u4e0a,\u6811\u5957\u6811\u505a\u6cd5\u65f6\u7a7a\u7ea6\u4e3a$O(nloglogn+qloglogn)$\n### \u6700\u540e\u7ed9\u51fa\u4ee3\u7801,\u4ec5\u4f9b\u53c2\u8003\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=20005;\nstruct node//\u79bb\u6563\u5316\u6240\u9700\n{\n    int v,id;\n}a[N];\nstruct nodet//\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\n{\n    int l,r,sum;\n}t[10000005];\nint n,q,x,y,mx,top,h[N],root[N];\nlong long ans;\nvoid add(int p,int s,int k)//\u5728\u7ebf\u6bb5\u6811k\u4e2d\u52a0\u5165(\u5220\u9664)\u70b9p\n{\n    int l=1,r=mx,mid;\n    while (l<r)\n    {\n        t[k].sum+=s;\n        mid=(l+r)>>1;\n        if (p<=mid)\n        {\n            if (!t[k].l) t[k].l=++top;\n            k=t[k].l;\n            r=mid;\n        }\n        else\n        {\n            if (!t[k].r) t[k].r=++top;\n            k=t[k].r;\n            l=mid+1;\n        }\n    }\n    t[k].sum+=s;\n}\nint ask(int x,int y,int l,int r,int k)//\u8be2\u95ee\u7ebf\u6bb5\u6811k\u4e2dx~y\u7684\u503c\n{\n    if ((!k)||(!t[k].sum)) return 0;\n    if ((l==x)&&(r==y)) return t[k].sum;\n    int mid=(l+r)>>1;\n    if (y<=mid) return ask(x,y,l,mid,t[k].l);\n    if (x>mid) return ask(x,y,mid+1,r,t[k].r);\n    return ask(x,mid,l,mid,t[k].l)+ask(mid+1,y,mid+1,r,t[k].r);\n}\nvoid updata(int k,int s)//\u66f4\u65b0\u70b9k\u4fe1\u606f\n{\n    int p=k;\n    while (p<=n) add(h[k],s,root[p]),p+=p & (-p);\n}\nint query(int k,int l,int r)//\u8be2\u95ee1~k\u4e2dl~r\u7684\u503c\n{\n    if (k<1) return 0;\n    if (k>n) return 0;\n    if (l>r) return 0;\n    int p=k;\n    long long res=0;\n    while (p) res+=ask(l,r,1,mx,root[p]),p-=p & (-p);\n    return res;\n}\nint getans(int p)//\u5904\u7406\u70b9p\u5bf9\u7b54\u6848\u8d21\u732e\n{\n    return query(p-1,h[p]+1,mx)+query(n,1,h[p]-1)-query(p-1,1,h[p]-1);\n}\nbool cmp(node a,node b)//sort\u7528\u7684\n{\n    return a.v<b.v;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++) scanf(\"%d\",&a[i].v),a[i].id=i;\n    sort(a+1,a+n+1,cmp);//\u79bb\u6563\u5316\n    for (int i=1;i<=n;i++)\n    {\n        if (a[i-1].v!=a[i].v) mx++;\n        h[a[i].id]=mx;\n        root[i]=++top;\n    }\n    for (int i=1;i<=n;i++) updata(i,1),ans+=query(i-1,h[i]+1,mx);\n    printf(\"%lld\\n\",ans);\n    scanf(\"%d\",&q);\n    while (q--)//\u5904\u7406\u8be2\u95ee\n    {\n        scanf(\"%d%d\",&x,&y);\n        if (x>y) swap(x,y); \n        if (h[x]>h[y]) ans++;\n        ans-=getans(x)+getans(y);\n        updata(x,-1);updata(y,-1);\n        swap(h[x],h[y]);\n        if (h[x]>h[y]) ans--;\n        updata(x,1);updata(y,1);\n        ans+=getans(x)+getans(y);\n        printf(\"%lld\\n\",ans);\n    }\n}\n```",
        "postTime": 1547122883,
        "uid": 28810,
        "name": "King_of_gamers",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1975 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u6392\u961f\u3011"
    }
]