[
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a_i$\uff0c\u6c42\u51fa\u5728\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u6240\u6709\u9009\u51fa $k$ \u4e2a\u5143\u7d20\u65b9\u6848\u4e2d\u5143\u7d20\u7684\u4e58\u79ef\u4e4b\u548c\u3002\n\n$\\texttt{Data Range:}1\\leq k\\leq n\\leq 1.2\\times 10^5$\n\n### \u9898\u89e3\n\n~~\u6c34\u591a\u9879\u5f0f\u9898\u597d\u5f00\u5fc3\u8bf6qaq~~\n\n\u591a\u9879\u5f0f\u4e58\u6cd5\u3002\n\n\u5f88\u660e\u663e\u7b54\u6848\u4e3a\n\n$$[x^k]\\prod\\limits_{i=1}^{n}(1+a_ix)$$\n\n\u6765\u8003\u8651\u4e00\u4e0b\u8bc1\u660e\u3002\n\n\u8fd9\u4e9b\u591a\u9879\u5f0f\u4e58\u79ef\u4e2d $x^k$ \u7684\u7cfb\u6570\u76f8\u5f53\u4e8e\u5728 $n$ \u4e2a\u591a\u9879\u5f0f\u4efb\u610f\u9009\u51fa $k$ \u4e2a\u591a\u9879\u5f0f\uff0c\u5176\u4e2d\u88ab\u9009\u51fa\u6765\u7684\u7684\u53d6\u4e00\u6b21\u9879\uff0c\u5269\u4e0b\u7684\u53d6\u5e38\u6570\u9879\uff0c\u5c06\u8fd9\u4e9b\u4e1c\u897f\u4e58\u8d77\u6765\u7684\u548c\u3002\u8fd9\u4e2a\u4e1c\u897f\u5f88\u660e\u663e\u662f\u8ddf\u9898\u76ee\u7b49\u4ef7\u7684\u3002\n\n~~\u4e0a\u9762\u7684\u4e1c\u897f\u84af\u7684\u6211\u539f\u9898\u7684\u9898\u89e3~~\n\n\u6ce8\u610f\u5230\u7c7b\u4f3c\u4e8e\u8fd9\u79cd\u4e1c\u897f\u53ef\u4ee5\u5206\u6cbb NTT \u505a\uff0c\u56e0\u4e3a\u6a21\u6570\u662f $10^9+7$ \u6240\u4ee5\u9700\u8981 MTT\u3002\n\n\u7531\u4e8e\u6211\u672c\u4eba\u6ca1\u6709\u7279\u610f\u5361\u8fc7 FFT \u6240\u4ee5\u8fd9\u4efd\u4ee3\u7801\u8dd1\u7684\u5f88\u6162\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\ntypedef long double db;\nconst ll MAXN=262151,MOD=1e9+7;\nconst db PI=acos(-1.0);\nstruct Complex{\n\tdb re,im;\n\tComplex(db x=0,db y=0)\n\t{\n\t\tre=x,im=y;\n\t}\n\tinline Complex conj()\n\t{\n\t\treturn Complex(re,-im);\n\t}\n};\nll n,syk;\nll x[MAXN],rev[MAXN];\nvector<ll>f[MAXN];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\ninline Complex operator +(Complex x,Complex y)\n{\n\treturn Complex(x.re+y.re,x.im+y.im);\n}\ninline Complex operator -(Complex x,Complex y)\n{\n\treturn Complex(x.re-y.re,x.im-y.im);\n}\ninline Complex operator *(Complex x,Complex y)\n{\n\treturn Complex(x.re*y.re-x.im*y.im,x.re*y.im+x.im*y.re);\n}\ninline Complex operator /(Complex x,db y)\n{\n\treturn Complex(x.re/y,x.im/y);\n}\ninline void FFT(Complex *cp,ll cnt,ll inv)\n{\n\tll cur=0;\n\tComplex res,omg;\n\tfor(register int i=0;i<cnt;i++)\n\t{\n\t\tif(i<rev[i])\n\t\t{\n\t\t\tswap(cp[i],cp[rev[i]]);\n\t\t}\n\t}\n\tfor(register int i=2;i<=cnt;i<<=1)\n\t{\n\t\tcur=i>>1,res=Complex(cos(2*PI/i),inv*sin(2*PI/i));\n\t\tfor(register Complex *p=cp;p!=cp+cnt;p+=i)\n\t\t{\n\t\t\tomg=Complex(1,0);\n\t\t\tfor(register int j=0;j<cur;j++)\n\t\t\t{\n\t\t\t\tComplex t=omg*p[j+cur],t2=p[j];\n\t\t\t\tp[j+cur]=t2-t,p[j]=t+t2;\n\t\t\t\tomg=omg*res;\n\t\t\t}\n\t\t}\n\t}\n\tif(inv==-1)\n\t{\n\t\tfor(register int i=0;i<cnt;i++)\n\t\t{\n\t\t\tcp[i]=cp[i]/cnt;\n\t\t}\n\t}\n}\ninline void conv(ll fd,ll *f,ll *g,ll *res)\n{\n\tComplex p,q,r,s;\n\tll t,cnt=1,limit=-1;\n\tli t0,t1,t2,t3;\n\tstatic Complex tmpf[MAXN],tmpg[MAXN],p0[MAXN],p1[MAXN],p2[MAXN],p3[MAXN];\n\twhile(cnt<=(fd<<1))\n\t{\n\t\tcnt<<=1,limit++;\n\t}\n\tfor(register int i=0;i<cnt;i++)\n\t{\n\t\ttmpf[i]=i<fd?Complex(f[i]&32767,f[i]>>15):Complex();\n\t\ttmpg[i]=i<fd?Complex(g[i]&32767,g[i]>>15):Complex();\n\t\trev[i]=(rev[i>>1]>>1)|((i&1)<<limit);\n\t}\n\tFFT(tmpf,cnt,1),FFT(tmpg,cnt,1);\n\tfor(register int i=0;i<cnt;i++)\n\t{\n\t\tt=(cnt-i)&(cnt-1);\n\t\tp=(tmpf[i]+tmpf[t].conj())*Complex(0.5,0);\n\t\tq=(tmpf[i]-tmpf[t].conj())*Complex(0,-0.5);\n\t\tr=(tmpg[i]+tmpg[t].conj())*Complex(0.5,0);\n\t\ts=(tmpg[i]-tmpg[t].conj())*Complex(0,-0.5);\n\t\tp0[i]=p*r,p1[i]=p*s,p2[i]=q*r,p3[i]=q*s;\n\t}\n\tfor(register int i=0;i<cnt;i++)\n\t{\n\t\ttmpf[i]=p0[i]+p1[i]*Complex(0,1);\n\t\ttmpg[i]=p2[i]+p3[i]*Complex(0,1);\n\t}\n\tFFT(tmpf,cnt,-1),FFT(tmpg,cnt,-1);\n\tfor(register int i=0;i<cnt;i++)\n\t{\n\t\tt0=(li)(tmpf[i].re+0.5)%MOD,t1=(li)(tmpf[i].im+0.5)%MOD;\n\t\tt2=(li)(tmpg[i].re+0.5)%MOD,t3=(li)(tmpg[i].im+0.5)%MOD;\n\t\tres[i]=(t0+(t1+t2)*32768%MOD+t3*1073741824ll%MOD)%MOD;\n\t}\n}\ninline void dnc(ll l,ll r,ll x)\n{\n\tstatic ll tmp[MAXN],tmp2[MAXN],tmp3[MAXN];\n\tif(l==r)\n\t{\n\t\treturn (void)(f[x].push_back(1),f[x].push_back(::x[l]));\n\t}\n\tll mid=(l+r)>>1,ls=x<<1,rs=ls|1,szl,szr;\n\tdnc(l,mid,ls),dnc(mid+1,r,rs),szl=f[ls].size(),szr=f[rs].size();\n\tcopy(f[ls].begin(),f[ls].end(),tmp),copy(f[rs].begin(),f[rs].end(),tmp2);\n\tszr!=szl?tmp2[szr]=0:1,conv(szl,tmp,tmp2,tmp3),f[x].resize(szl+szr-1);\n\tcopy(tmp3,tmp3+szl+szr-1,f[x].begin());\n}\nint main()\n{\n\tn=read(),syk=read();\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tx[i]=read();\n\t}\n\tdnc(1,n,1),printf(\"%d\\n\",f[1][syk]);\n}\n```",
        "postTime": 1610201712,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6012 \u3010[P5087] \u6570\u5b66 \u52a0\u5f3a\u7248\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u5f31\u5316\u7248\uff0c\u53ef\u4ee5 0/1 \u80cc\u5305\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(nk)$ \u7684\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6570\uff0c\u53ef\u4ee5\u9009\u6216\u8005\u4e0d\u9009\uff0c\u90a3\u6211\u4eec\u6784\u9020\u5176\u751f\u6210\u51fd\u6570\u4e3a $1+a_ix$\uff0c\u8868\u793a\u8fd9\u4e2a\u4eba\u9009\u4e86\u5c31\u53ef\u4ee5\u4e3a\u603b\u4e58\u79ef\u4ea7\u751f $a_i$ \u7684\u8d21\u732e\u3002\n\n\u90a3\u4e48\u8981\u6c42\u6070\u597d $k$ \u4e2a\uff0c\u7b54\u6848\u5c31\u662f $[x^k]\\prod_{i=1}^n (1+a_ix)$\uff0c\u7528\u5206\u6cbb fft \u8ba1\u7b97\u5373\u53ef\uff0c\u8fd9\u4e2a\u9898\u4e2d\u9700\u8981\u4f7f\u7528\u62c6\u7cfb\u6570 fft\u3002\n\n```cpp\n#include<queue>\n#include<vector>\n#include<math.h>\n#include<stdio.h>\n#include<string.h>\n#include<algorithm>\n#define SZ(x) ((int)x.size())\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> poly;\nconst int sz=17,N=1<<17|5;\nconst double Pi=acos(-1);\n\nconst int P=1e9+7;\n\nint L,rev[N];\nstruct Cp {\n\tdouble x, y;\n\tCp(double a = 0, double b = 0) : x(a), y(b) {}\n\tCp operator + (Cp t) { return Cp(x + t.x, y + t.y); }\n\tCp operator - (Cp t) { return Cp(x - t.x, y - t.y); }\n\tCp operator * (Cp t) { return Cp(x * t.x - y * t.y, x * t.y + y * t.x); }\n\tCp operator / (double t) { return Cp(x / t, y / t); }\n\tCp operator ~ () { return Cp(x, -y); }\n}w[N],_[N];\n\nvoid init(){\n\tL=1<<sz;\n\tfor(int i=0;i<L;i++)rev[i]=(rev[i>>1]>>1)|((i&1)<<(sz-1));\n\tw[L/2]=Cp(1,0);\n\tfor(int i=1;i<L/2;i++)w[i+L/2]=Cp(cos(2*Pi*i/L),sin(2*Pi*i/L));\n\tfor(int i=L/2-1;i>=0;i--)w[i]=w[i<<1];\n}\n\nvoid dft(int n,Cp*a){\n\tfor(int i=0,s=sz-__builtin_ctz(n);i<n;i++)_[rev[i]>>s]=a[i];\n\tfor(int l=1;l<n;l<<=1)for(int i=0;i<n;i+=l+l)for(int j=0;j<l;j++)\n\t{Cp k=_[i+j+l]*w[j+l];_[i+j+l]=_[i+j]-k;_[i+j]=_[i+j]+k;}\n\tmemcpy(a,_,sizeof(Cp)*n);\n}\n\nstruct __mtt {\n\tint Mod;\n\tCp a[N], b[N], c[N], d[N];\n\t__mtt(int _Md = 1000000007) : Mod(_Md) {}\n\tpoly operator()(const poly& p,const poly& q) {\n\t\tint l;\n\t\tfor(l=1; l<=SZ(p)+SZ(q)-2; l<<=1);\n\t\tmemset(a,0,sizeof(Cp)*l);\n\t\tmemset(b,0,sizeof(Cp)*l);\n\t\tfor(int i=0; i<SZ(p); i++)\n\t\t\ta[i]=Cp(p[i]&32767,p[i]>>15);\n\t\tfor(int i=0; i<SZ(q); i++)\n\t\t\tb[i]=Cp(q[i]&32767,q[i]>>15);\n\t\tdft(l,a);dft(l,b);\n\t\tfor(int i=0; i!=l; i++){\n\t\t\tint j=(l-i)&(l-1);\n\t\t\tc[i]=(~a[i]+a[j])*Cp(0.5,0)*b[j];\n\t\t\td[i]=(~a[i]-a[j])*Cp(0,0.5)*b[j];\n\t\t}\n\t\tdft(l,c);dft(l,d);\n\t\tauto Z=[&](double x){return(ll)(0.5+x)%Mod;};\n\t\tpoly v(SZ(p)+SZ(q)-1);\n\t\tfor(int i=0; i<SZ(v); i++)\n\t\t\tv[i]=(Z(c[i].x/l)+(Z(c[i].y/l)+Z(d[i].x/l))%Mod*32768+Z(d[i].y/l)%Mod*32768%Mod*32768)%Mod;\n\t\treturn v;\n\t}\n}mtt;\n\nint n,k,x;\npoly f[N];\n\npoly solve(int l,int r)\n{\n\tif(l==r)return f[l];\n\treturn mtt(solve(l,(l+r)/2),solve((l+r)/2+1,r));\n}\n\nint main()\n{\n\tinit();\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tf[i]=(poly){1,x};\n\t}\n\tprintf(\"%d\",solve(1,n)[k]);\n\treturn 0;\n}\n```",
        "postTime": 1581559267,
        "uid": 13052,
        "name": "iostream",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6012 \u3010[P5087] \u6570\u5b66 \u52a0\u5f3a\u7248\u3011"
    },
    {
        "content": "\u5176\u4ed6\u9898\u89e3\u90fd\u5199\u7684\u62c6\u7cfb\u6570 fft \uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a 3\u6a21\u6570NTT \u7684\u4ee3\u7801\u3002\n\n\u8003\u8651\u6784\u9020\u751f\u6210\u51fd\u6570\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6570 $k$ \uff0c\u9009\u62e9\u5219\u7b54\u6848\u4e58 $k$ \uff0c\u4e2a\u6570\u52a0\u4e00\uff1b\u4e0d\u9009\u62e9\u5219\u4e0d\u53d8\uff1a\u90a3\u4e48\u6709 $f(x) = 1 + kx$ \u3002\u7b54\u6848\u4e3a $[x ^ n]\\prod f(x)$ \u3002\n\n\u5c06\u6240\u6709\u51fd\u6570\u4e58\u8d77\u6765\uff0c\u6ce8\u610f\u5230\u6bcf\u4e2a\u591a\u9879\u5f0f\u7684\u6b21\u6570\u5f88\u5c0f\uff0c\u6328\u4e2a\u4e58\u4ee3\u4ef7\u5f88\u5927\u3002\u8003\u8651\u5206\u6cbb\uff0c\u6bcf\u6b21\u5c06\u5de6\u53f3\u4e00\u534a\u5408\u5e76\u3002\u90a3\u4e48\u6709 $T(n) = T(\\frac n 2) + O(n \\log n) = O(n \\log ^ 2 n)$ \u3002\n\n\u5c3d\u91cf\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u53d6\u6a21\uff0c\u4f18\u5316\u52a0\u51cf\u6cd5\u7684\u53d6\u6a21\uff0c\u5c06\u5904\u7406\u8303\u56f4\u538b\u6b7b\uff0c\u5f00 O2 \u3002\u3002\u3002\u53ef\u4ee5\u5361\u8fc7\u3002\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\nusing namespace std;\ntemplate <class Type>\nvoid read(Type &x)\n{\n    char c;\n    bool flag = false;\n    while ((c = getchar()) < '0' || c > '9')\n        c == '-' && (flag = true);\n    x = c - '0';\n    while ((c = getchar()) >= '0' && c <= '9')\n        x = (x << 3) + (x << 1) + c - '0';\n    if (flag) x = ~x + 1;\n}\ntemplate <class Type, class ...rest>\nvoid read(Type &x, rest &...y) { read(x), read(y...); }\ntemplate <class Type>\nvoid write(Type x)\n{\n    if (x < 0) putchar('-'), x = ~x + 1;\n    if (x > 9) write(x / 10);\n    putchar(x % 10 + '0');\n}\ntypedef __int128 L;\ntypedef long long LL;\nconst int N = 1e6 + 10, p1 = 998244353, p2 = 1004535809, p3 = 469762049, p = 1e9 + 7;\ntemplate <const int &mod>\nstruct NTT\n{\n    int rev[N];\n    void adj (int &x) { x += x >> 31 & mod; }\n    int binpow (int b, int k = mod - 2)\n    {\n        int res = 1;\n        for (; k; k >>= 1, b = (LL)b * b % mod)\n            if (k & 1) res = (LL)res * b % mod;\n        return res;\n    }\n    void ntt (int *x, int bit, int op)\n    {\n        int tot = 1 << bit;\n        for (int i = 0; i < tot; ++i)\n            if ((rev[i] = rev[i >> 1] >> 1 | ((i & 1) << bit - 1)) > i)\n                swap(x[rev[i]], x[i]);\n        for (int mid = 1; mid < tot; mid <<= 1)\n        {\n            int w1 = binpow(3, (mod - 1) / (mid << 1));\n            if (!~op) w1 = binpow(w1);\n            for (int i = 0; i < tot; i += mid << 1)\n                for (int j = 0, k = 1; j < mid; ++j, k = (LL)k * w1 % mod)\n                {\n                    int p = x[i | j], q = (LL)k * x[i | j | mid] % mod;\n                    adj((x[i | j] = p) += q - mod), adj((x[i | j | mid] = p) -= q);\n                }\n        }\n        if (~op) return;\n        int itot = binpow(tot);\n        for (int i = 0; i < tot; ++i)\n            x[i] = (LL)x[i] * itot % mod;\n    }\n    void PolyMul (int n, vector <int> &f, int m, vector <int> &g, int nm, vector <int> &w)\n    {\n        static int A[N], B[N], C[N];\n        for (int i = 0; i <= n; ++i)\n            adj(A[i] = f[i] - mod);\n        for (int i = 0; i <= m; ++i)\n            adj(B[i] = g[i] - mod);\n        int bit = 1;\n        while (n + m + 1 > 1 << bit) ++bit;\n        int tot = 1 << bit;\n        for (int i = n + 1; i < tot; ++i) A[i] = 0;\n        for (int i = m + 1; i < tot; ++i) B[i] = 0;\n        ntt(A, bit, 1), ntt(B, bit, 1);\n        for (int i = 0; i < tot; ++i)\n            C[i] = (LL)A[i] * B[i] % mod;\n        ntt(C, bit, -1);\n        for (int i = 0; i <= nm; ++i) w[i] = C[i];\n    }\n};\nNTT <p1> q1; NTT <p2> q2; NTT <p3> q3;\nint CRT (int x1, int x2, int x3)\n{\n    L res = 0, mul = (L)p1 * p2 * p3;\n    res += (L)x1 * p2 * p3 * q1.binpow((LL)p2 * p3 % p1);\n    res += (L)x2 * p1 * p3 * q2.binpow((LL)p1 * p3 % p2);\n    res += (L)x3 * p1 * p2 * q3.binpow((LL)p1 * p2 % p3);\n    return res % mul % p;\n}\nvoid solve (int l, int r, int &k, vector <int> &g)\n{\n    if (l == r) return g[0] = 1, read(g[1]);\n    int mid = l + r >> 1;\n    int nm = min(k, r - l + 1), n = min(k, mid - l + 1), m = min(k, r - mid);\n    vector <int> A, B, C, D, E;\n    A.resize(n + 1); B.resize(m + 1);\n    C.resize(nm + 1), D.resize(nm + 1), E.resize(nm + 1);\n    solve(l, mid, k, A), solve(mid + 1, r, k, B);\n    q1.PolyMul(n, A, m, B, nm, C);\n    q2.PolyMul(n, A, m, B, nm, D);\n    q3.PolyMul(n, A, m, B, nm, E);\n    for (int i = 0; i <= nm; ++i)\n        g[i] = CRT(C[i], D[i], E[i]);\n}\nint main ()\n{\n    int n, k;\n    read(n, k);\n    vector <int> A; A.resize(min(k, n) + 1);\n    solve(1, n, k, A);\n    write(A[k]);\n    return 0;\n}\n```",
        "postTime": 1657190092,
        "uid": 185726,
        "name": "RuSun",
        "ccfLevel": 8,
        "title": "Solution P6012"
    },
    {
        "content": "## \u524d\u8a00\n\u600e\u4e48\u6ca1\u4eba\u505a\u8fd9\u9898\u554a\uff08\n## \u601d\u8def\n\u663e\u7136\u8fd9\u662f\u4e00\u4e2a\u80cc\u5305\u95ee\u9898\uff0c\u6211\u4eec\u8003\u8651\u6784\u9020\u7b54\u6848\u7684 $\\text{OGF}$\u3002\n\n\u8003\u8651\u8bb0\u5df2\u7ecf\u6709\u4e00\u4e9b\u7269\u54c1\u65f6\uff0c\u88c5 $n$ \u4e2a\u7269\u54c1\u7684\u6240\u6709\u65b9\u6cd5\u7684\u4ef7\u503c\u548c\u4e3a $F_n$\u3002\n\n\u7136\u540e\u8fd9\u4e9b\u7269\u54c1\u5bf9\u5e94\u7b54\u6848\u7684 $\\text{OGF}$ \u5373\u4e3a $F(x)=\\sum\\limits_{i=0}^\\infty F_ix^i$\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u5408\u5e76\u4e24\u4e2a\u7269\u54c1\u96c6 $A,B$ \u5230 $C$\uff0c\u6ce8\u610f\u5230\u9009 $n$ \u4e2a\u7269\u54c1\u7684\u65b9\u6848\u53ea\u80fd\u662f\u5728\u7b2c\u4e00\u4e2a\u7269\u54c1\u96c6\u9009 $i$ \u4e2a\uff0c\u518d\u5728\u7b2c\u4e8c\u4e2a\u7269\u54c1\u96c6\u9009 $n-i$ \u4e2a\uff0c\u56e0\u6b64 $C_n=\\sum\\limits_{i=0}^nA_iB_{n-i}$\u3002\n\n\u8bf6\uff0c\u8fd9\u4e0d\u5c31\u662f\u5377\u79ef\u5f62\u5f0f\u5417\uff1f\n\n\u4e8e\u662f\u8fd9\u9898\u53ea\u5dee\u6700\u540e\u4e00\u6b65\u4e86\uff0c\u8003\u8651\u53ea\u6709\u4e00\u4e2a\u7269\u54c1\u65f6\u7b54\u6848\u7684\u751f\u6210\u51fd\u6570\u3002\u8fd9\u663e\u7136\u5f88\u7b80\u5355\uff0c\u5c31\u662f $a_ix+1$\uff0c\u5176\u4e2d $a_i$ \u662f\u6743\u503c\u3002\n\n\u7136\u540e\u76f4\u63a5\u5206\u6cbb $\\text{MTT}$ \u5c31\u884c\u5566\uff01\u51fa\u9898\u4eba\u8981\u6211\u4eec\u5199 $\\text{MTT}$\uff0c\u722c\uff08",
        "postTime": 1612076359,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P6012 \u3010[P5087] \u6570\u5b66 \u52a0\u5f3a\u7248\u3011"
    }
]