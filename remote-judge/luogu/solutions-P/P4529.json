[
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u5728\u4e00\u5f20$n\\times m$\u7684\u7eb8\u4e2d\uff0c\u9700\u8981\u88c1\u526a\u51fa\u5176\u4e2d\u7684\u4e00\u4e2a\u51f8$k$\u8fb9\u56fe\u6848\u3002\u6bcf\u6b21\u88c1\u526a\u4f1a\u5c06\u4e00\u5f20\u7eb8\u526a\u6210\u4e24\u5f20\uff0c\u5e76\u6254\u53bb\u5176\u4e2d\u4e00\u5f20\u3002\u73b0\u5728\u8be2\u95ee\u6700\u77ed\u7684\u88c1\u526a\u7ebf\u4e4b\u548c\u3002\n\n## \u9898\u89e3\n\n\u611f\u89c9\u8fd9\u9898\u6709\u4e00\u70b9\u6076\u8bc4\u4e86\uff0c\u96be\u5ea6\u5e94\u8be5\u5728\u7eff~\u84dd\u4ee5\u5185\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u4e66\u5199\uff0c\u6211\u4eec\u4f7f\u7528\u76f4\u7ebf\u7684\u4e00\u822c\u5f62\u5f0f\u8868\u793a\uff0c\u5373$l:Ax+By+C=0$\u3002\n\n\u8fd9\u8fb9\u5148\u666e\u53ca\u4e00\u4e0b\u89e3\u6790\u51e0\u4f55\u4e2d\u5173\u4e8e\u76f4\u7ebf\u65b9\u7a0b\u7684\u76f8\u5173\u77e5\u8bc6\u3002\u5982\u679c\u4f60\u5df2\u7ecf\u5b66\u8fc7\uff0c\u6211\u89c9\u5f97\u4f60\u4e0d\u9700\u8981\u770b\u8fd9\u7bc7\u9898\u89e3\u4e5f\u80fd\u5207\u8fd9\u9053\u9898\u2026\u2026\n\n### \u76f4\u7ebf\u7684\u4ea4\u70b9\n\n\u8003\u8651\u4e24\u6761\u76f4\u7ebf\uff1a\n\n$$\\begin{cases}Ax+By+C&=0\\cr A'x+B'y+C'&=0 \\end{cases}$$\n\n\u6211\u4eec\u5c06$1$\u5f0f\u4e58\u4e0a$A'$,$2$\u5f0f\u4e58\u4e0a$A$\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f97\u5230\uff1a\n\n$$\\begin{cases}AA'x+A'By+A'C&=0\\cr AA'x+AB'y+AC'&=0 \\end{cases}$$\n\n\u4e0a\u4e0b\u4e24\u4e2a\u5f0f\u5b50\u76f8\u51cf\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a\n\n$$(A'B-AB')y=A'C-AC'$$\n\n\u540c\u7406\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5f97\u5230\uff1a\n\n$$(A'B-AB')x=B'C-BC'$$\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u5f97\u5230\u5b83\u4eec\u7684\u4ea4\u70b9\u4e3a$\\left(\\dfrac{BC'-B'C}{AB'-A'B},\\dfrac{AC'-A'C}{AB'-A'B}\\right)$\u3002\n\n\u5f53\u7136\uff0c\u8fd8\u6709\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u5c31\u662f\u4e24\u6761\u76f4\u7ebf\u5e73\u884c\u3002\u7531\u4e8e\u672c\u9898\u7684\u7279\u6b8a\u60c5\u51b5\uff0c\u4e0d\u5b58\u5728\u4e24\u6761\u76f4\u7ebf\u91cd\u5408\u3002\u56e0\u6b64\uff0c\u5f53\u51fa\u73b0\u4e24\u6761\u76f4\u7ebf\u5e73\u884c\uff08\u5373$AB'=A'B$\uff09\uff0c\u7279\u5224\u5373\u53ef\u3002\n\n\u7279\u522b\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e0a\u8ff0\u5f0f\u5b50$A,A',B,B'$\u4e2d\u5b58\u5728$0$\u5e76\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c\u7684\u6b63\u786e\u6027\u3002\n\n### \u4e24\u70b9\u786e\u5b9a\u76f4\u7ebf\n\n\u672c\u9898\u6309\u7167\u987a\u65f6\u9488\u987a\u5e8f\u8f93\u5165\u5404\u70b9\u5750\u6807\uff0c\u6211\u4eec\u9700\u8981\u6839\u636e\u6bcf\u4e24\u4e2a\u76f8\u90bb\u7684\u70b9\u6c42\u51fa\u8fc7\u4ed6\u4eec\u7684\u76f4\u7ebf\u3002\n\n\u8003\u8651\u4e24\u4e2a\u70b9$(a,b),(c,d)$\uff0c\u6211\u4eec\u73b0\u5728\u9700\u8981\u6c42\u51fa**\u4e00\u4e2a**\u76f4\u7ebf$l:Ax+By+C=0$\u3002\u4e3a\u4ec0\u4e48\u8981\u8bf4\u662f**\u4e00\u4e2a**\u5462\uff1f\u56e0\u4e3a$Akx+Bky+Ck=0$\u5176\u5b9e\u4e0e\u4e0a\u5f0f\u7b49\u4ef7\u3002\n\n\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n- $C=0$\u3002 \u8fd9\u79cd\u60c5\u51b5\u975e\u5e38\u7b80\u5355\u3002\u56e0\u4e3a$aA+Bb=0$\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5f97\u5230$A=b,B=-a$\u65f6\u6ee1\u8db3\u6761\u4ef6\u3002\n\n- $C\\ne 0$\u3002\u8fd9\u79cd\u60c5\u51b5\u6bd4\u8f83\u590d\u6742\u3002\u8ba9\u6211\u4eec\u8ba8\u8bba\u8ba8\u8bba\u3002\n\n\u7531$Ax+By+C\\Leftrightarrow Akx+Bky+Ck=0 \\quad(k\\ne 0)$\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee4$C=1$\u3002\u53ef\u4ee5\u8054\u7acb\u65b9\u7a0b\u7ec4\uff1a\n\n$$\\begin{cases}Aa+Bb+1&=0 \\cr Ac+Bd+1&=0 \\end{cases}$$\n\n\u8003\u8651\u6309\u7167\u4e0a\u9762\u7684\u65b9\u6cd5\uff0c\u8ba9\u4e00\u5f0f\u4e58\u4ee5$c$\uff0c\u4e8c\u5f0f\u4e58\u4ee5$a$\uff0c\u5f97\u5230\uff1a\n\n$$\\begin{cases}Aac+Bbc+c&=0 \\cr Aac+Bad+a&=0 \\end{cases}$$\n\n\u540c\u6837\u7684\uff0c\u8ba9\u4e00\u5f0f\u51cf\u53bb\u4e8c\u5f0f\uff0c\u5f97\u5230$(bc-ad)B=a-c$\n\n\u540c\u7406\u53ef\u4ee5\u63a8\u51fa$(ad-bc)A=b-d$\n\n\u90a3\u4e48\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a$l:\\dfrac{b-d}{ad-bc}x+\\dfrac{a-c}{bc-ad}y+1=0$\u3002\n\n### \u4ea4\u70b9\u7684\u4f4d\u7f6e\n\n\u8fd9\u91cc\u5e94\u8be5\u662f\u6700\u540e\u4e00\u4e2a\u8981\u8003\u8651\u7684\u95ee\u9898\u4e86\u3002\n\n\u6211\u4eec\u5728\u4e00\u5f20\u7eb8\u7684**\u5185\u90e8**\uff0c\u6309\u7167\u4e00\u6761\u591a\u8fb9\u5f62\u7684\u8fb9\u505a\u76f4\u7ebf\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u5b83\u7a76\u7adf\u4f1a\u4e0e\u54ea\u4e24\u6761\u76f4\u7ebf\u4ea7\u751f\u4ea4\u70b9\u3002\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u6c42\u51fa\u8fd9\u6761\u8fb9\u7684\u4e2d\u70b9$M\\left(\\dfrac{x_1+x_2}{2},\\dfrac{y_1+y_1}{2}\\right)$\u3002\n\n\u663e\u7136\uff0c\u53ea\u9700\u8981\u66b4\u529b\u679a\u4e3e\u4e4b\u524d\u7684\u6bcf\u6761\u76f4\u7ebf\uff0c\u4e0e\u5f53\u524d\u76f4\u7ebf\u6c42\u51fa\u4ea4\u70b9\uff0c\u7136\u540e\u5224\u65ad\u5176\u4e2d\u7684\u54ea\u4e24\u4e2a\u70b9**\u521a\u597d**\u5305\u56f4\u4e86$M$\u3002\n\n$$\\begin{gathered}\\stackrel{\\normalsize P_1}{\\bullet}\\kern{20pt}\\stackrel{\\normalsize P_2}{\\bullet}\\kern{20pt}\\stackrel{\\normalsize M}{\\bullet}\\kern{30pt}\\stackrel{\\normalsize P_3}{\\bullet}\\kern{10pt}\\stackrel{\\normalsize P_4}{\\bullet}\\kern{60pt}\\stackrel{\\normalsize P_5}{\\bullet}\\\\[-19pt]\\underline{\\kern{250pt}}\\end{gathered}$$\n\n\u5728\u8fd9\u5f20\u56fe\u4e2d\uff0c$P_2,P_3$\u5373\u4e3a\u6211\u4eec\u7684\u6240\u6c42\u70b9\u3002\n\n\uff08\u7531\u4e8e\u4f5c\u8005\u592a\u83dc\u4e86\uff0c\u53ea\u80fd\u753b\u6c34\u5e73\u7684\u76f4\u7ebf\u3002\u5b9e\u9645\u60c5\u51b5\u8fd9\u6761\u7ebf\u53ef\u80fd\u662f\u659c\u7684\uff0c\u751a\u81f3\u6709\u53ef\u80fd\u662f\u5782\u76f4\u4e8e$x$\u8f74\u7684\u3002\uff09\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528\u4e24\u4e2a\u70b9$L,R$\u8868\u793a\u5f53\u524d**\u6700\u63a5\u8fd1**$M$\u7684\u5de6\u53f3\u4e24\u4e2a\u70b9\u7684\u5750\u6807\u3002\n\n\u540c\u6837\u7684\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\u8981\u8003\u8651\uff1a\n\n- \u659c\u7387\u4e0d\u5b58\u5728\uff0c\u5373\u76ee\u524d\u7684\u4ea4\u70b9$P$\u6ee1\u8db3$P_x=M_x$\u3002\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u6bd4\u8f83$P_y,M_y$\uff0c\u51b3\u5b9a$P$\u5728$M$\u7684\u54ea\u4e00\u4fa7\u5373\u53ef\u3002\n\n- \u659c\u7387\u5b58\u5728\u3002\u76f4\u63a5\u5224\u65ad$P_x,M_x$\uff0c\u5224\u5b9a$P$\u5728$M$\u7684\u54ea\u4e00\u4fa7\u5373\u53ef\u3002\n\n\u90a3\u4e48\uff0c\u8fd9\u6761\u526a\u5207\u7ebf\u7684\u957f\u5ea6\u5c31\u662f$|LR|=\\sqrt{(L_x-R_x)^2+(L_y-R_y)^2}$\u3002\n\n### \u66b4\u529b\u679a\u4e3e\n\n\u7531\u4e8e\u672c\u9898$k$\u7684\u8303\u56f4\u6781\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5$\\mathcal O(k\\times k!)$\u66b4\u529b\u641c\u7d22\u3002\n\n\u521d\u59cb\u65f6\uff0c\u5411\u5f53\u524d\u7684\u9009\u8fb9\u96c6\u5408\u52a0\u5165\u56db\u6761\u76f4\u7ebf$x=0,y=0,x=n,y=m$\u5373\u53ef\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define up(l,r,i) for(int i=l;i<=r;i++)\n#define dn(l,r,i) for(int i=l;i>=r;i--)\nusing namespace std;\ntypedef double LF;\nconst int MAXN =8+3;\nstruct Node{\n    LF a,b,c; Node(LF _a=0,LF _b=0,LF _c=0):a(_a),b(_b),c(_c){}\n}R[MAXN+3],L[MAXN+3];\nLF X[MAXN],Y[MAXN],n,m; int k;\nvoid get(Node l1,Node l2,LF &x,LF &y){\n    if(fabs(l1.a*l2.b-l1.b*l2.a)<1e-9) {x=y=-1;return;}\n    x=(l1.b*l2.c-l1.c*l2.b)/(l1.a*l2.b-l1.b*l2.a);\n    y=(l1.c*l2.a-l1.a*l2.c)/(l1.a*l2.b-l1.b*l2.a);\n}\ndouble ans=INFINITY; bool vis[MAXN];\nint _;\nvoid dfs(int stp,double sum){\n    if(stp==k+1){ans=min(ans,sum); return;}\n    up(1,k,i){\n        if(vis[i]) continue; vis[i]=true;\n        LF mx=(X[i]+X[i+1])/2.0,my=(Y[i]+Y[i+1])/2.0;\n        LF nsum=sum,px,py,qx,qy,dp=INFINITY,dq=INFINITY;\n        up(1,stp+3,j){\n            LF nx,ny; get(L[i],R[j],nx,ny); if(fabs(nx+1)<1e-9) continue;\n            LF dis=sqrt((nx-mx)*(nx-mx)+(ny-my)*(ny-my));\n            if(fabs(mx-nx)<1e-9){\n                if(ny>my){if(dp>dis) dp=dis,px=nx,py=ny;}\n                else {if(dq>dis) dq=dis,qx=nx,qy=ny;}\n            } else{\n                if(nx>mx){if(dp>dis) dp=dis,px=nx,py=ny;}\n                else {if(dq>dis) dq=dis,qx=nx,qy=ny;}\n            }\n        }\n        nsum+=sqrt((px-qx)*(px-qx)+(py-qy)*(py-qy));\n        R[stp+4]=L[i]; dfs(stp+1,nsum); vis[i]=false;\n    }\n}\nint main(){\n    scanf(\"%lf%lf%d\",&n,&m,&k);\n    R[1].a=0,R[1].b=1,R[1].c=0;\n    R[2].a=0,R[2].b=1,R[2].c=-m;\n    R[3].a=1,R[3].b=0,R[3].c=0;\n    R[4].a=1,R[4].b=0,R[4].c=-n;\n    up(1,k,i) scanf(\"%lf%lf\",&X[i],&Y[i]);\n    X[k+1]=X[1],Y[k+1]=Y[1]; up(1,k,i){\n        LF a=X[i],b=Y[i],c=X[i+1],d=Y[i+1];\n        if(fabs(a*d-b*c)<1e-9) L[i].a=b,L[i].b=-a,L[i].c=0;\n        else{\n            L[i].a=(b-d)/(a*d-b*c);\n            L[i].b=(a-c)/(b*c-a*d);\n            L[i].c=1.0;\n        }\n    }\n    dfs(1,0); printf(\"%.3lf\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1585795278,
        "uid": 68344,
        "name": "\u79bb\u6563\u5c0f\u6ce2\u53d8\u6362\u00b0",
        "ccfLevel": 9,
        "title": "\u3010\u9898\u89e3\u3011\u3010P4529 [SCOI2003]\u5207\u5272\u591a\u8fb9\u5f62\u3011"
    },
    {
        "content": "\u9996\u5148\u6b64\u9898\u6709\u4e00\u4e2a\u663e\u800c\u6613\u89c1\u7684\u7b56\u7565\uff1a\u6bcf\u6b21\u5207\u5272\u90fd\u6cbf\u591a\u8fb9\u5f62\u7684\u8fb9\u7f18\u3002  \n\u90a3\u4e48\u5c31\u53ef\u4ee5\u72b6\u538b dp \u6c42\u89e3\u6700\u5c0f\u5207\u5272\u7ebf\uff0c\u5177\u4f53\u600e\u4e48\u8f6c\u79fb\u4e5f\u4e0d\u5fc5\u5570\u55e6\u4e86\u3002  \n\u552f\u4e00\u7684\u96be\u70b9\u5728\u4e8e\u6c42\u89e3\u5355\u6b21\u5207\u5272\u7684\u957f\u5ea6\u3002  \n\u4e0d\u96be\u53d1\u73b0\uff0c\u5207 $FG$ \u7684\u5207\u5272\u7ebf\u6b63\u597d\u662f $FG$ \u6240\u5728\u76f4\u7ebf\u4e0e\u5df2\u6709\u7684\u5207\u5272\u7ebf\u96c6\u5408 $\\{KJ, IL, AB, BC, CD, AD\\}$ \u7684\u4e24\u4e2a\u4ea4\u70b9 $M, N$ \u4e4b\u95f4\u7684\u7ebf\u6bb5 $MN$\u3002\u53ef\u4ee5\u679a\u4e3e\u6240\u6709\u5df2\u6709\u5207\u5272\u7ebf\uff0c\u6c42\u51fa $M, N$\u3002  \n![](https://cdn.luogu.com.cn/upload/image_hosting/z3q2voft.png)\n\u4e3a\u4e86\u8868\u8fbe\u6ca1\u6709\u659c\u7387\u7684\u76f4\u7ebf\uff0c\u6211\u4f7f\u7528\u4e00\u822c\u5f0f\u65b9\u7a0b\u3002\u89e3\u65b9\u7a0b\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u7279\u5224\u9664 $0$\u3001\u5e73\u884c\u7b49\u6bd2\u7624\u60c5\u51b5\u3002\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n\ninline double min(const double& a, const double& b){\n\treturn a < b ? a : b;\n}\n\nconst int MAXQ = 8 + 1;\n\ndouble dp[1 << 8];\n\nint n, m, q;\n\nstruct Point{\n\tdouble x, y;\n\tPoint(){}\n\tPoint(double a, double b){\n\t\tx = a, y = b;\n\t}\n\tbool operator<(const Point& b)const{\n\t\treturn std::fabs(x - b.x) < 1e-12 ? y < b.y : x < b.x;\n\t}\n\tbool operator>(const Point& b)const{\n\t\treturn std::fabs(x - b.x) < 1e-12 ? y > b.y : x > b.x;\n\t}\n}p[MAXQ];\n\nstruct Line{\n\tdouble a, b, c;//\u4e00\u822c\u5f0f\n\tLine(){}\n\tLine(double __a, double __b, double __c){//\u53c2\u6570\u6784\u9020\u76f4\u7ebf\n\t\ta = __a, b = __b, c = __c;\n\t}\n\tLine(Point __a, Point __b){//\u4e24\u70b9\u6784\u9020\u76f4\u7ebf\n\t\tif(std::fabs(__a.x - __b.x) < 1e-12)\n\t\t\ta = 1, b = 0, c = -__a.x;\n\t\telse\n\t\t\ta = -__a.y + __b.y, b = __a.x - __b.x, c = -a * __a.x - b * __a.y;\n\t}\n\tPoint operator^(const Line& __b)const{//\u91cd\u8f7d ^ \u8fd0\u7b97\u7b26\u6c42\u89e3\u4e24\u76f4\u7ebf\u4ea4\u70b9\n\t\tif(std::fabs(b) < 1e-12 || std::fabs(__b.b) < 1e-12){\n\t\t\tif(std::fabs(b) < 1e-12 && std::fabs(__b.b) < 1e-12)\n\t\t\t\treturn Point(1e18, 1e18);\n\t\t\telse if(std::fabs(b) < 1e-12){\n\t\t\t\tdouble x = -c / a, y = -(__b.a * x + __b.c) / __b.b;\n\t\t\t\treturn Point(x, y);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdouble x = -__b.c / __b.a, y = -(a * x + c) / b;\n\t\t\t\treturn Point(x, y);\n\t\t\t}\n\t\t}\n\t\telse if(std::fabs(a / b - __b.a / __b.b) < 1e-12)\n\t\t\treturn Point(1e18, 1e18);\n\t\telse{\n\t\t\tdouble x = -(c * __b.b - __b.c * b) / (a * __b.b - __b.a * b),\n\t\t\t\ty = -(a * x + c) / b;\n\t\t\treturn Point(x, y);\n\t\t}\n\t}\n}line[MAXQ];\n\ninline double dist(Point a, Point b){\n\tdouble x = a.x - b.x, y = a.y - b.y;\n\tx *= x, y *= y;\n\treturn std::sqrt(x + y);\n}\n\ndouble value(int status, int node){\n\tPoint tmp, l = p[node], r = p[node % q + 1], re_l, re_r,\n\t\tmid = Point((l.x + r.x) / 2, (l.y + r.y) / 2);\n//re_l, re_r \u662f\u5207\u5272\u7ebf\u4e0e\u5df2\u6709\u5207\u75d5\u7684\u4e24\u4e2a\u4ea4\u70b9\n\tif(std::fabs(line[node].a) < 1e-12)\n\t\tre_l = line[node] ^ Line(1, 0, 0),\n\t\tre_r = line[node] ^ Line(1, 0, -n);\n\telse if(std::fabs(line[node].b) < 1e-12)\n\t\tre_l = line[node] ^ Line(0, 1, 0),\n\t\tre_r = line[node] ^ Line(0, 1, -m);\n\telse if(line[node].a / line[node].b > 0)\n\t\tre_l = std::max(line[node] ^ Line(0, 1, -m), line[node] ^ Line(1, 0, 0)),\n\t\tre_r = std::min(line[node] ^ Line(0, 1, 0), line[node] ^ Line(1, 0, -n));\n\telse if(line[node].a / line[node].b < 0)\n\t\tre_l = std::max(line[node] ^ Line(0, 1, 0), line[node] ^ Line(1, 0, 0)),\n\t\tre_r = std::min(line[node] ^ Line(0, 1, -m), line[node] ^ Line(1, 0, -n));\n\tfor(int i = 1; i <= q; ++i)\n\t\tif(status & (1 << i - 1)){\n\t\t\ttmp = line[node] ^ line[i];\n\t\t\tif(tmp < mid)\n\t\t\t\tre_l = std::max(re_l, tmp);\n\t\t\telse if(tmp > mid)\n\t\t\t\tre_r = std::min(re_r, tmp);\n\t\t}\n\treturn dist(re_l, re_r);\n}\n\nint main(){\n\tstd::scanf(\"%d%d%d\", &n, &m, &q);\n\tfor(int i = 1; i <= q; ++i)\n\t\tstd::scanf(\"%lf%lf\", &p[i].x, &p[i].y);\n\tfor(int i = 1; i <= q; ++i)\n\t\tline[i] = Line(p[i], p[i % q + 1]);\n\tfor(int i = 1; i < (1 << q); ++i){\n\t\tdp[i] = 1e18;\n\t\tfor(int j = 1; j <= q; ++j)\n\t\t\tif(i & (1 << j - 1))\n\t\t\t\tdp[i] = min(dp[i], dp[i ^ (1 << j - 1)] + value(i ^ (1 << j - 1), j));//\u6734\u7d20\u72b6\u538b\n\t}\n\tstd::printf(\"%lf\\n\", dp[(1 << q) - 1]);\n\treturn 0;\n}\n```\n\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u6982\u662f $O(2 ^ n)$\uff1f",
        "postTime": 1585138231,
        "uid": 222441,
        "name": "Flan",
        "ccfLevel": 7,
        "title": "P4529 [SCOI2003]\u5207\u5272\u591a\u8fb9\u5f62"
    },
    {
        "content": "# **\u3010\u9898\u89e3\u3011\u5207\u5272\u591a\u8fb9\u5f62 [SCOI2003] [P4529] [Bzoj1091]**\n\n[$\\mathcal{My}\\ \\mathcal{Blog}$](https://www.cnblogs.com/Xing-Ling/p/12116733.html)\n\n\u4f20\u9001\u95e8\uff1a[\u5207\u5272\u591a\u8fb9\u5f62 $\\text{[SCOI2003] [P4529]}$](https://www.luogu.com.cn/problem/P4529) [$\\text{[Bzoj1091]}$](https://www.lydsy.com/JudgeOnline/problem.php?id=1091)\n\n## **\u3010\u9898\u76ee\u63cf\u8ff0\u3011**\n\n\u7ed9\u51fa\u4e00\u4e2a $Mx*My$ $(0 < Mx,My < 500)$ \u7684\u77e9\u5f62\uff0c\u73b0\u8981\u7528 $n$ $(3 \\leqslant n \\leqslant 8)$ \u6761\u76f4\u7ebf\u4f9d\u6b21\u5bf9\u5176\u8fdb\u884c\u5207\u5272\uff0c\u5c06\u5b83\u53d8\u6210\u51f8 $n$ \u8fb9\u5f62\uff0c\u6bcf\u6b21\u5207\u5272\u7684\u957f\u5ea6\u4e3a\u8be5\u76f4\u7ebf\u5728\u5269\u4e0b\u7684\u77e9\u5f62\u5185\u90e8\u7684\u90e8\u5206\u7684\u957f\u5ea6\uff0c\u6c42\u6700\u77ed\u7684\u5207\u5272\u7ebf\u603b\u957f\u5ea6\u3002\n\n## **\u3010\u5206\u6790\u3011**\n\n\u4e00\u9053\u8ba1\u7b97\u51e0\u4f55\u819c\u60a8\u9898\u3002\n\n\u7531\u4e8e $n$ \u6bd4\u8f83\u5c0f\uff0c\u53ef\u4ee5 $O(n!)$ \u679a\u4e3e\u5207\u5272\u7ebf\u7684\u987a\u5e8f\uff0c\u6700\u540e\u8ba1\u7b97\u603b\u957f\u5ea6\u53d6\u6700\u5c0f\u503c\u5c31\u884c\u4e86\u3002\n\n\u4f46\u6709\u4e2a\u975e\u5e38\u9ebb\u70e6\u7684\u95ee\u9898\uff1a\u5982\u4f55\u6c42\u6bcf\u6b21\u52a0\u5165\u76f4\u7ebf\u7684\u5207\u5272\u7ebf\u957f\u5ea6\uff1f\n\n\u8003\u8651\u7528\u4e00\u4e2a\u6808\u50a8\u5b58\u5f53\u524d\u5df2\u7ecf\u52a0\u5165\u7684\u76f4\u7ebf\uff08\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u8fb9\u754c\u4f1a\u5728\u6700\u521d\u65f6\u52a0\u5165\uff09\uff0c\u5982\u679c\u73b0\u5728\u8981\u52a0\u5165\u76f4\u7ebf $p_1-p_2$\uff08\u8fd9\u91cc\u4e3a\u65b9\u4fbf\u63cf\u8ff0\uff0c\u8bbe $p_1$ \u5728\u5de6\u8fb9\uff0c$p_2$ \u5728\u53f3\u8fb9\uff09\uff0c\u5148\u6c42\u51fa\u5b83\u4e0e\u6808\u4e2d\u6240\u6709\u76f4\u7ebf\u7684\u4ea4\u70b9\uff0c\u7136\u540e\u5728\u8fd9\u4e9b\u4ea4\u70b9\u4e2d\u5206\u522b\u627e\u5230\uff1a$p_1$ \u5de6\u8fb9\u8ddd\u79bb $p_1$ \u6700\u8fd1\u7684\u70b9 $ans_1$ \u548c $p_2$ \u53f3\u8fb9\u8ddd\u79bb $p_2$ \u6700\u8fd1\u7684\u70b9$ans_2$\uff0c\u6613\u77e5 $len(ans_1,ans_2)$ \u5373\u4e3a\u5f53\u6b21\u5207\u5272\u7ebf\u957f\u5ea6\u3002\n\n\u56fe\u5c31\u4e0d\u753b\u4e86\uff0c\u81ea\u5df1\u9886\u4f1a\u5427\u3002\u3002\u3002\n\n## **\u3010Code\u3011**\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<cmath>\n#define LD double\n#define LL long long\n#define Re register int\n#define Vector Point\nusing namespace std;\nconst int N=20;\nconst LD eps=1e-9,inf=1e9;\ninline int dcmp(LD a){return a<-eps?-1:(a>eps?1:0);}//\u5904\u7406\u7cbe\u5ea6\ninline LD Abs(LD a){return a*dcmp(a);}//\u53d6\u7edd\u5bf9\u503c\nstruct Point{\n    LD x,y;Point(LD X=0,LD Y=0){x=X,y=Y;}\n    inline void in(){scanf(\"%lf%lf\",&x,&y);}\n    inline void out(){printf(\"%.2lf %.2lf\\n\",x,y);}\n}p1,p2,p3,p4,P[N];\nstruct Line{\n    Point a,b;int id;LD k;Line(Point X=Point(0,0),Point Y=Point(0,0),int ID=0,LD K=0){a=X,b=Y,id=ID,k=K;}\n    inline void sakura(){k=(!dcmp(a.x-b.x))?0.0:(a.y-b.y)/(a.x-b.x);}\n    inline bool operator<(Line O)const{return k<O.k;}\n}L[N],Q[N];\ninline LD Dot(Vector a,Vector b){return a.x*b.x+a.y*b.y;}//\u70b9\u79ef\ninline LD Cro(Vector a,Vector b){return a.x*b.y-a.y*b.x;}//\u53c9\u79ef\ninline LD Len(Vector a){return sqrt(Dot(a,a));}//\u6a21\u957f\ninline Point operator+(Point a,Vector b){return Vector(a.x+b.x,a.y+b.y);}\ninline Vector operator-(Point a,Point b){return Vector(a.x-b.x,a.y-b.y);}\ninline Vector operator*(Vector a,LD b){return Vector(a.x*b,a.y*b);}\ninline Point cross_LL(Point a,Point b,Point c,Point d){//\u4e24\u76f4\u7ebfAB,CD\u7684\u4ea4\u70b9\n    Vector x=b-a,y=d-c,z=a-c;\n    return a+x*(Cro(y,z)/Cro(x,y));//\u70b9A\u52a0\u4e0a\u5411\u91cfAF\n}\nint n,t,a[N],vis[N];LD Mx,My,Ans=inf;\ninline void dfs(Re g,LD ans){\n    if(g>n){Ans=min(Ans,ans);return;}\n    for(Re i=1;i<=n;++i)\n        if(!vis[i]){\n            Point p1=L[i].a,p2=L[i].b,ans1=Point(inf,inf),ans2=Point(inf,inf);\n            //ans1:\u5728p2-p1\u5ef6\u957f\u7ebf\u4e0a\u8ddd\u79bbp1\u6700\u8fd1\u7684\u70b9\n            //ans2:\u5728p1-p2\u5ef6\u957f\u7ebf\u4e0a\u8ddd\u79bbp2\u6700\u8fd1\u7684\u70b9\n            for(Re j=1;j<=t;++j){\n                Point b=cross_LL(p1,p2,Q[j].a,Q[j].b);//\u83b7\u53d6\u76f4\u7ebfL[i]\u4e0eQ[i]\u7684\u4ea4\u70b9b\n                if(dcmp(Len(p1-b)-Len(p2-b))<0&&dcmp(Len(p1-ans1)-Len(p1-b))>0)ans1=b;//\u5982\u679c len(b,p1)<len(b,p2) \u4e14 len(p1,b)<len(p1,ans1)\n                if(dcmp(Len(p2-b)-Len(p1-b))<0&&dcmp(Len(p2-ans2)-Len(p2-b))>0)ans2=b;//\u5982\u679c len(b,p2)<len(b,p1) \u4e14 len(p2,b)<len(p2,ans2)\n            }\n            vis[i]=1,Q[++t]=L[i];\n            dfs(g+1,ans+Len(ans1-ans2));//\u52a0\u4e0alen(ans1,ans2)\n            vis[i]=0,--t;\n        }\n}\nint main(){\n//  freopen(\"123.txt\",\"r\",stdin);\n    scanf(\"%lf%lf%d\",&Mx,&My,&n);\n    for(Re i=1;i<=n;++i)P[i].in();\n    for(Re i=1;i<=n;++i)L[i]=Line(P[i],P[i<n?i+1:1],i);//\u83b7\u53d6n\u6761\u76f4\u7ebf\n    p1=Point(0,0),p2=Point(0,My),p3=Point(Mx,My),p4=Point(Mx,0);//\u56db\u4e2a\u9876\u70b9\n    Q[++t]=Line(p1,p2),Q[++t]=Line(p2,p3),Q[++t]=Line(p3,p4),Q[++t]=Line(p4,p1);//\u5148\u5c06\u56db\u4e2a\u8fb9\u754c\u5165\u961f\n    dfs(1,0.0);\n    printf(\"%.3lf\\n\",Ans);\n}\n```\n",
        "postTime": 1577627972,
        "uid": 110985,
        "name": "\u8fb0\u661f\u51cc",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4529 \u3010[SCOI2003]\u5207\u5272\u591a\u8fb9\u5f62\u3011"
    }
]