[
    {
        "content": "\u611f\u8c22@[Duan2baka](https://www.luogu.org/space/show?uid=21682) \u7684\u601d\u8def,\u611f\u89c9\u76f8\u5f53\u6e05\u6670,\u4f46\u662f\u6307\u9488\u7a0d\u6709\u4e0d\u723d,\u4e8e\u662f\u5c31\u5199\u4e86\u4e2a\u6570\u7ec4\u7248\u7684.\n\n**\u4e3b\u8981\u601d\u8def**:\u9996\u5148\u6309\u7167\u5e73\u5e38$AC$\u81ea\u52a8\u673a\u7684\u6b65\u9aa4,\u5efa\u51fa$Trie$\u56fe,\u548c\u5404\u4e2a\u70b9\u7684$Fail$\u6307\u9488,\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u901a\u8fc7bfs\u641c\u7d22\u51fa\u6240\u6709\u5408\u6cd5\u7684\u65b9\u6848.\u5728\u5efa$Trie$\u56fe\u7684\u540c\u65f6,\u6211\u4eec\u628a\u5355\u8bcd$i$\u7684\u672b\u8282\u70b9\u503c$state$\u4e3a$(1<<i)$,$Bfs$\u65f6\u7528\u5f53\u524d\u72b6\u6001$\\color{red} or $\u904d\u5386\u5230\u8282\u70b9\u7684$state$\u503c,\u5f53$Bfs$\u5230\u67d0\u4e2a\u72b6\u6001\u7b49\u4e8e$(1<<(n)-1)$\u65f6,\u5c31\u8bc1\u660e\u6240\u6709\u7684\u5355\u8bcd\u7684\u672b\u7aef\u70b9\u90fd\u904d\u5386\u4e86\u4e00\u6b21,\u90a3\u8fd9\u4e2a\u641c\u7d22\u5230\u7684\u5b57\u7b26\u4e32\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u7b54\u6848\u4e86.\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u662f$O(cnt*2^n)$,$cnt$\u4e3a$Trie$\u6811\u7684\u8282\u70b9\u6570,\u8fd8\u5e26$26$\u7684\u5e38\u6570\n\n\u5f53\u7136,\u6211\u4eec\u628a\u5f53\u524d\u641c\u7d22\u5230\u7684\u5b57\u7b26\u4e32\u90fd\u5b58\u4e0b\u6765\u662f\u76f8\u5f53\u6d88\u8017\u7a7a\u95f4\u7684,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u60f3\u51fa$1$\u4e2a\u4f18\u5316:\u56e0\u4e3a\u6240\u6709$Bfs$\u51fa\u7684\u72b6\u6001\u90fd\u662f\u7531\u524d\u9762\u7684\u72b6\u6001\u63a8\u5bfc\u51fa\u7684,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6bcf\u6b21\u641c\u7d22\u65f6\u53ea\u8bb0\u5f55\u8fd9\u6b21\u641c\u7d22\u7684\u5b57\u7b26\u548c\u5b83\u662f\u7531\u54ea\u4e2a\u72b6\u6001\u63a8\u5bfc\u51fa\u7684,\u8f93\u51fa\u65f6\u5012\u56de\u53bb\u7edf\u8ba1\u5c31\u884c\u4e86.\n\n### \u770b\u4e0d\u61c2\u4e5f\u6ca1\u5173\u7cfb~~\u6211\u7684\u8868\u8fbe\u80fd\u529b\u6211\u5fc3\u91cc\u6709\u70b9$*$\u6570,~~ \u7a0b\u5e8f\u7684\u6ce8\u91ca\u8fd8\u662f\u6bd4\u8f83\u591a\u7684\n\n#### \u53e6\u5916,$90$\u5206\u7684\u6ce8\u610f\u4e86,\u53ef\u80fd\u6709\u76f8\u540c\u7684\u5b57\u7b26\u4e32,\u6240\u4ee5\u8bbestate\u7684\u521d\u503c\u65f6\u4e5f\u8981$or(1<<i)$\u800c\u4e0d\u662f\u76f4\u63a5\u8d4b\u503c\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\n#define MN 605\nint add[MN][26],fail[MN],state[MN],nod,ans[MN*(1<<12|1)],fa[MN*(1<<12|1)],n,cnt,tot;\n//add:Trie\u6811\u4e2d\u7684\u5730\u5740(address)\nbool vis[MN][1<<12|1];\nchar C[MN],ch[51];\nqueue<int>Q,Q1,Q2;\nvoid getfail(){\n    for(int i=0;i<26;++i)\n        if(add[0][i])Q.push(add[0][i]);\n    while(!Q.empty()){\n        int x=Q.front();\n        Q.pop();\n        for(int i=0;i<26;++i)\n            if(add[x][i]){\n                fail[add[x][i]]=add[fail[x]][i];\n                state[add[x][i]]|=state[add[fail[x]][i]];//\u5b83\u7684fail\u6307\u9488\u5305\u542b\u7684\u5b57\u7b26\u4e32\u5b83\u4e5f\u5305\u542b\n                Q.push(add[x][i]);\n            }\n            else add[x][i]=add[fail[x]][i];\n    }\n}//AC\u81ea\u52a8\u673a\u5efafail\u6811\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i){\n        scanf(\"%s\",ch);\n        int now=0,ln=strlen(ch);\n        for(int j=0;j<ln;++j){\n            if(!add[now][ch[j]-'A'])add[now][ch[j]-'A']=++cnt;\n            now=add[now][ch[j]-'A'];\n        }\n        state[now]|=1<<(i-1);//i-1\u4e5f\u4e0d\u4f1a\u51b2\u7a81,\u7701\u4e00\u70b9\u7a7a\u95f4\n        //\u6709\u91cd\u590d\u7684,\u8981\u7528|\n    }//\u5efatrie\u6811\n    getfail();\n    Q1.push(0);\n    Q2.push(0);\n    //Q1:\u5728Trie\u4e2d\u7684\u4f4d\u7f6e\n    //Q2:\u72b6\u6001\u538b\u7f29,\u8868\u793a\u5f53\u524d\u5305\u542b\u4e86\u54ea\u4e9b\u8981\u6c42\u7684\u5b57\u7b26\u4e32\n    vis[0][0]=1;\n    int Ti=0;\n    while(!Q1.empty()){\n        int now=Q1.front(),St=Q2.front();\n        Q1.pop();Q2.pop();\n        if(St==((1<<n)-1)){\n            while(Ti){\n                C[++nod]=ans[Ti];\n                Ti=fa[Ti];\n            }//\u9012\u5f52\u56de\u53bb\u6c42\u7b54\u6848\n            for(int i=nod;i>0;--i)putchar(C[i]+'A');\n            return 0;\n        }\n        for(int i=0;i<26;++i){\n            if(!vis[add[now][i]][St|state[add[now][i]]]){\n                vis[add[now][i]][St|state[add[now][i]]]=1;\n                Q1.push(add[now][i]);\n                Q2.push(St|state[add[now][i]]);\n                //\u627e\u51fa\u73b0\u65b0\u7684\u72b6\u6001\n                fa[++tot]=Ti;\n                ans[tot]=i;\n                //\u8bb0\u5f55\u5f53\u524d\u641c\u5230\u7684\u5b57\u7b26,\u540c\u65f6\u5efa1\u68f5\u5173\u4e8e\u7b54\u6848\u7684\u6811,\u4fbf\u4e8e\u6700\u540e\u67e5\u8be2\n            }\n        }\n        ++Ti;//Ti\u8868\u793a\u5f53\u524d\u7684\u641c\u7d22\u5230\u7684\u7f16\u53f7\n    }\n    return 0;\n}\n```",
        "postTime": 1557838186,
        "uid": 7480,
        "name": "skydogli",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2322 \u3010[HNOI2006]\u6700\u77ed\u6bcd\u4e32\u95ee\u9898\u3011"
    },
    {
        "content": "[Blog\u94fe\u63a5](http://blog.csdn.net/waduan2/article/details/79150703)\n\n\nAC\u81ea\u52a8\u673a\u591a\u8bb0\u5f55\u4e00\u4e2a$state$\u8868\u793a\u8fd9\u4e2a\u70b9\u4ee3\u8868\u7684\u72b6\u6001\n\n\u628a\u6240\u6709\u4e32\u63d2\u8fdbAC\u81ea\u52a8\u673a\u91cc\uff0c\u4e32$i$\u7684\u672b\u5c3e\u7684$state$\u5c31\u662f$2^{i-1}$\n\n\u6784\u5efa$Fail$\u7684\u65f6\u5019\u987a\u4fbf\u7ee7\u627f\u6240\u6709\u540e\u7f00\u7684$state$\n\n\n\u7136\u540e\u4ece\u6839\u6309\u5b57\u5178\u5e8fbfs\uff0c\u6bcf\u8d70\u5230\u4e00\u4e2a\u70b9\u7ee7\u627f\u4ed6\u7684$state$\u76f4\u5230\u5305\u542b\u6240\u6709\u4e32\u5c31\u53ef\u4ee5\u5566\n\n\n\u8d34\u8fd9\u4e48\u4e11\u7684\u4ee3\u7801\u771f\u7684\u662f\u5bf9\u4e0d\u8d77\u5927\u5bb6\u7684\u773c\u775bQAQ\uff1a\n\n```cpp\n#include<cstring>\n#include<ctype.h>\n#include<cstdio>\n#include<queue>\n#define N 2500050\n#define mp make_pair\n#define pr pair<Node*,pair<int,int> >\nusing namespace std;\ninline int read(){\n    int x=0,f=1;char c;\n    do c=getchar(),f=c=='-'?-1:f; while(!isdigit(c));\n    do x=(x<<3)+(x<<1)+c-'0',c=getchar(); while(isdigit(c));\n    return x*f;\n}\nint n,k,cnt,id,state;\nint fa[N],a[N];\nchar s[55];\nbool b[1020][1<<12];\nstruct Node{\n    Node *ch[26],*nex;\n    int state,id;///\u8fd9\u4e2a\u70b9\u5305\u542b\u4e32\u7684\u72b6\u6001\uff0c\u8282\u70b9\u7f16\u53f7\n    Node():state(0),nex(NULL),id(++cnt){\n        for(int i=0;i<26;i++)\n            ch[i]=NULL;\n    }\n}*root=new Node,*node;\nvoid print(int x){\n    if(!x) return;\n    print(fa[x]);\n    printf(\"%c\",a[x]+'A');\n}\nstruct Aho_Corasick_Automaton{\n    inline void Insert(char *s,int id){\n        int len=strlen(s+1);\n        Node *x=root;\n        for(int i=1;i<=len;i++){\n            if(!x->ch[s[i]-'A']) x->ch[s[i]-'A']=new Node;\n            x=x->ch[s[i]-'A'];\n        }\n        x->state|=1<<id>>1;\n    }\n    inline void GetFail(){\n        queue<Node*>q;\n        for(int i=0;i<26;i++)\n            if(!root->ch[i]) root->ch[i]=root;\n            else root->ch[i]->nex=root,q.push(root->ch[i]);\n        while(!q.empty()){\n            Node *x=q.front();q.pop();\n            for(int i=0;i<26;i++)\n                if(x->ch[i]) x->ch[i]->nex=x->nex->ch[i],q.push(x->ch[i]);\n                else x->ch[i]=x->nex->ch[i];\n            Node *tmp=x->nex;\n            while(tmp!=root && !tmp->state) tmp=tmp->nex;\n            x->state|=tmp->state;///\u7ee7\u627f\u6240\u6709\u540e\u7f00\u7684\u72b6\u6001\n        }\n    }\n    inline void solve(){\n        queue<pr>q;\n        q.push(mp(root,mp(root->state,cnt=0)));\n        b[root->id][root->state]=true;\n        while(!q.empty()){\n            pr x=q.front();q.pop();\n            id=x.second.second;\n            state=x.second.first;\n            node=x.first;\n            if(state==(1<<n)-1){///\u627e\u5230\u6ee1\u8db3\u7684\uff0c\u8f93\u51fa\n                print(id);\n                return;\n            }\n            for(int i=0;i<26;i++){\n                k=state|node->ch[i]->state;///\u65b0\u8f6c\u79fb\u51fa\u7684\u72b6\u6001\n                if(b[node->ch[i]->id][k]) continue;///\u4e0d\u8d70\u91cd\u590d\u7684\n                b[node->ch[i]->id][k]=true;\n                fa[++cnt]=id;a[cnt]=i;///\u8bb0\u5f55\u8def\u5f84\n                q.push(mp(node->ch[i],mp(k,cnt)));\n            }\n        }\n    }\n}AC;\nint main(){\n    n=read();\n    for(int i=1;i<=n;i++){\n        scanf(\"%s\",s+1);\n        AC.Insert(s,i);\n    }\n    AC.GetFail();///\u641eFail\u6307\u9488\n    AC.solve();\nreturn 0;\n}\n\n```",
        "postTime": 1516776389,
        "uid": 21682,
        "name": "Duan2baka",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2322 \u3010[HNOI2006]\u6700\u77ed\u6bcd\u4e32\u95ee\u9898\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6211\u662f\u62ff\u6700\u77ed\u8def\u5199\u7684\u3002\n\n\u9996\u5148\u770b\u5230\u591a\u4e32\u5c31\u80af\u5b9a\u662fAC\u81ea\u52a8\u673a\uff0c\u5bb9\u6613\u60f3\u5230\u7b54\u6848\u5c31\u662f\u6784\u9020\u51faTrie\u56fe\u4e0a\u4ee50\u4e3a\u8d77\u70b9\u7684\u4e00\u6761\u6700\u77ed\u7684\u5230\u8fc7\u6240\u6709\u4e32\u7ed3\u5c3e\u7684\u8def\u5f84\uff0c\u56e0\u4e3aTrie\u56fe\u4e2d\u4e00\u6761\u8fb9$(s,t)$\u7684\u610f\u4e49\u5c31\u662f\uff0c\u4eces\u70b9\u7684\u524d\u7f00\u540e\u9762\u6dfb\u52a0\u4e00\u4e2a\u8fd9\u6761\u8fb9\u5bf9\u5e94\u7684\u5b57\u7b26\uff0ct\u5bf9\u5e94\u7684\u524d\u7f00\u662f\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u7684\u4e00\u4e2a\u540e\u7f00\uff08\u4e0d\u592a\u660e\u767d\u7684\u53ef\u4ee5\u81ea\u884c\u7406\u89e3\u4e00\u4e0bAC\u81ea\u52a8\u673a\u7684\u539f\u7406\uff09\u3002\n\n\u7136\u540e\u5230\u6ca1\u5230\u8fc7\u67d0\u4e2a\u4e32\u7684\u7ed3\u5c3e\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u72b6\u6001\u6765\u8868\u793a\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u201c\u5728\u4e00\u4e2a\u6709\u5411\u56fe\u4e0a\u627e\u4e00\u6761\u4ee50\u4e3a\u8d77\u70b9\u7684\u6700\u77ed\u8def\uff0c\u5e76\u4e14\u4f7f\u5f97\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u6743\u6216\u8d77\u6765\u7b49\u4e8e$2^n-1$\u201d\uff08\u8fd9\u91cc\u7684\u70b9\u6743\u662f\u6307\uff0c\u5728\u4e00\u4e2a\u70b9\u7684Fail\u94fe\u4e0a\u51fa\u73b0\u7684\u7ed3\u5c3e\u7684\u96c6\u5408\uff0c\u5230\u8fbe\u8fd9\u4e2a\u70b9\u5c31\u76f8\u5f53\u4e8e\u5230\u8fbe\u8fd9\u4e9b\u7ed3\u5c3e\u4e86\uff09\u3002\n\n\u6211\u4eec\u5148\u6765\u8003\u8651\u600e\u4e48\u6c42\u8fd9\u4e2a\u7684\u957f\u5ea6\uff0c\u8fd9\u4e2a\u6bd4\u8f83\u5bb9\u6613\uff0c\u8bbe$dp[i][S]$\u4e3a\u5230i\u70b9\uff0c\u5df2\u7ecf\u5230\u8fc7\u7684\u7ed3\u5c3e\u96c6\u5408\u4e3aS\uff0c\u7684\u6700\u77ed\u957f\u5ea6\u3002\u7136\u540e\u5c31\u4ee5$dp[0][0]$\u4e3a\u8d77\u70b9\u8dd1\u4e2a\u6700\u77ed\u8def\u5c31\u884c\u4e86\uff08\u5176\u5b9e\u5c31\u662f\u666e\u901a\u7684bfs\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6b65\u4ee3\u4ef7\u90fd\u662f1\u2026\u2026\uff09\u3002\u7ec8\u70b9\u5c31\u662fS\u4e3a$2^n-1$\u7684\u4efb\u610f\u70b9\u7684\u72b6\u6001\uff0c\u53d6\u4e2a\u6700\u5c0f\u7684\u5373\u53ef\u3002\n\n\u4f46\u662f\u8fd9\u4e2a\u65b9\u6848\u600e\u4e48\u51fa\u6765\u5462\uff1f\u6bd4\u5982\u6211\u4eec\u73b0\u5728\u8981\u6c42\u4ee5$dp[i][S]$\u4e3a\u8d77\u70b9\u7684\u6700\u77ed\u8def\uff0c\u4e3a\u4e86\u51d1\u51fa\u65b9\u6848\u6211\u4eec\u9700\u8981\u6c42\u51fa\u5b83\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001\u662f\u591a\u5c11\uff0c\u90a3\u4e48\u5047\u5982\u6709\u4e00\u6761\u8fb9$(i,j)$\uff0c\u5e76\u4e14$dp[j][S|S[j]]=dp[i][S]+1$\uff0c\u90a3\u4e48\u53ef\u4ee5\u770b\u505a\u8fd9\u4e24\u4e2a\u72b6\u6001\u53d1\u751f\u4e86\u8f6c\u79fb\uff0c$dp[j][S|S[j]]$\u5c31\u53ef\u4ee5\u662f\u4e0b\u4e00\u4e2a\u72b6\u6001\u3002\u4f46\u662f\u8981\u60f3\u8ba9\u5b83\u6210\u4e3a\u5408\u6cd5\u7684\uff0c\u5c31\u5fc5\u987b\u4fdd\u8bc1\u4ece\u8fd9\u6761\u8fb9\u8d70\u4e0b\u53bb\u80fd\u591f\u5230\u8fbe\u4e00\u4e2a$S=2^n-1$\u7684\u72b6\u6001\u5e76\u4e14dp\u503c\u4e3a\u6211\u4eec\u6700\u77ed\u8def\u8dd1\u51fa\u6765\u7684\u7b54\u6848\u957f\u5ea6\uff0c\u90a3\u4e48\u6211\u4eec\uff08\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u80af\u5b9a\u5c31\u5f97\u7528dfs\u4e86\uff09\u5c31dfs\u8fd9\u4e2a\u70b9\uff0c\u5e76\u4e14dfs\u8fd4\u56de\u4ece\u8fd9\u4e2a\u70b9\u5230\u4e00\u4e2a$S=2^n-1$\u7684\u72b6\u6001\u7684\u6700\u77ed\u8def\uff0c\u8fd9\u6837\u6211\u4eec\u80fd\u591f\u77e5\u9053\u8d70\u8fd9\u6761\u8fb9\u662f\u4e0d\u662f\u5408\u6cd5\u7684\u3002\u800c\u4e14\u4e3a\u4e86\u4f7f\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5728dfs\u7684\u65f6\u5019\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u51fa\u8fb9\u7684\u5b57\u7b26\uff0c\u4e8e\u662f\u7b54\u6848\u5c31\u51fa\u6765\u4e86\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nshort trie[601][26];\nshort dp[601][4097];\nshort que1[3000001],que2[3000001];\nunsigned char nxt[601][4097];\nint ans,n;\nint S[601];\nint dfs(int pt,int zt){\n\tif(zt==((1<<n)-1))return(dp[pt][zt]);\n\tfor(register int i=0;i<26;i++){\n\t\tif(trie[pt][i]){\n\t\t\tint me=trie[pt][i];if(dp[me][zt|S[me]]==dp[pt][zt]+1){\n\t\t\t\tint cjr=dfs(me,zt|S[me]);\n\t\t\t//\tif(pt==0&&zt==0){\n\t\t\t\t\t//printf(\"(%d,%d)->(%d,%d),%d,%c\\n\",pt,zt,me,zt|S[me],cjr,i+'A');\n\t\t\t//\t}\n\t\t\t\tif(cjr==ans){\n\t\t\t\t\tnxt[pt][zt]=i;return(ans);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn(-1);\n}\nchar str[100];\nshort fail[601];\nint main(){\n\tcin>>n;int gn=1;for(register int i=0;i<n;i++){\n\t\tint cur=0;cin>>str;int len=strlen(str);for(register int j=0;j<len;j++){\n\t\t\tif(!trie[cur][str[j]-'A']){\n\t\t\t\ttrie[cur][str[j]-'A']=gn;gn++;\n\t\t\t}cur=trie[cur][str[j]-'A'];\n\t\t}S[cur]|=(1<<i);\n\t}register int head=0,tail=0;\n\tfor(register int i=0;i<26;i++){\n\t\tif(trie[0][i]){\n\t\t\tfail[trie[0][i]]=0;que1[tail]=trie[0][i];tail++;\n\t\t}\n\t}do{\n\t\tint me=que1[head];head++;for(register int i=0;i<26;i++){\n\t\t\tif(trie[me][i]){\n\t\t\t\tfail[trie[me][i]]=trie[fail[me]][i];que1[tail]=trie[me][i];tail++;\n\t\t\t}else{\n\t\t\t\ttrie[me][i]=trie[fail[me]][i];\n\t\t\t}\n\t\t}\n\t}while(head<tail);\n\tfor(register int i=0;i<gn;i++){\n\t\tint ptr=fail[i];while(ptr){\n\t\t\tS[i]|=S[ptr];ptr=fail[ptr];\n\t\t}for(register int j=0;j<(1<<n);j++){\n\t\t\tdp[i][j]=32767;\n\t\t}\n\t}dp[0][0]=0;head=0,tail=1;que1[0]=0;que2[0]=0;do{\n\t\tint me=que1[head],zt=que2[head];head++;for(register int i=0;i<26;i++){\n\t\t\tif(trie[me][i]){\n\t\t\t\tint cjr=trie[me][i];if(dp[me][zt]+1<dp[cjr][zt|S[cjr]]){\n\t\t\t\t\tdp[cjr][zt|S[cjr]]=dp[me][zt]+1;que1[tail]=cjr;que2[tail]=(zt|S[cjr]);tail++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}while(head<tail);\n\tans=32767;for(register int i=0;i<gn;i++){\n\t\tans=min(ans,(int)dp[i][(1<<n)-1]);\n\t}dfs(0,0);\n\tint cur=0,zt=0;for(register int i=1;i<=ans;i++){\n\t\tputchar(nxt[cur][zt]+'A');int cjr=trie[cur][nxt[cur][zt]];\n\t\tcur=cjr;zt|=S[cjr];\n\t}\n\treturn(0);\n}\n```",
        "postTime": 1530188909,
        "uid": 56917,
        "name": "\u989c\u4f1f\u4e1a_C_Asm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2322 \u3010[HNOI2006]\u6700\u77ed\u6bcd\u4e32\u95ee\u9898\u3011"
    },
    {
        "content": "## 1.\u5927\u81f4\u6d41\u7a0b\n\n\u5148\u5c06 *n* \u4e2a\u5b57\u7b26\u4e32\u5b58\u5165 *trie* \u6811\u4e2d\uff0c\u5e76\u6c42\u51fa *fail* \u6307\u9488\uff0c\u518d\u5bf9\u8fd9\u68f5\u6811\u8fdb\u884c\u5e7f\u641c\uff0c\u627e\u5230\u6bcf\u4e2a\u5b57\u7b26\u4e32\u4e3a\u6b62\u3002\n\n## 2.\u5177\u4f53\u64cd\u4f5c\n\u9ed8\u8ba4\u5927\u5bb6\u5df2\u7ecf\u638c\u63e1\u4e86[AC\u81ea\u52a8\u673a](https://www.luogu.com.cn/problem/P3808)\n\u3002\n\n\u5173\u4e8e\u5982\u4f55\u5224\u65ad\u627e\u5230\u4e86\u6bcf\u4e2a\u5b57\u7b26\u4e32\uff0c\u5bb9\u6613\u60f3\u5230\u7528\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u6765\u5b58\u50a8\u6bcf\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u5df2\u627e\u5230\uff0c\u7528\u7b2ci\u4e3a\u8868\u793a\u7b2ci\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u5df2\u627e\u5230\uff0c\u5982\uff1a\n\n\u5047\u8bbe\u4e00\u5171\u67095\u4e2a\u5b57\u7b26\u4e32\uff0c\u5df2\u7ecf\u627e\u5230\u4e86\u7b2c1\u30012\u30014\u4e2a\uff0c\u7528\u4e8c\u8fdb\u5236\u6570\u8868\u793a\u5c31\u662f *01011* \n\n## 3.Code\n\n\u4ee3\u7801\u91cc\u6709\u6ce8\u91ca ~~\u6240\u4ee5\u53ef\u80fd\u770b\u7740\u5f88\u4e71~~\n\n```cpp\n#include<bits/stdc++.h>\n#define N 16\nusing namespace std;\nint n,top;\nbool vis[1<<N][N*50];\n/* \nvis\u6570\u7ec4\u7528\u6765\u4f5c\u6807\u8bb0\uff0c\u907f\u514d\u91cd\u590d\u641c\u7d22 \n\t\u4e4b\u6240\u4ee5\u5e7f\u641c\u9700\u8981\u6807\u8bb0\u6570\u7ec4\uff0c\u662f\u56e0\u4e3atrie\u6811\u7684\u6307\u9488\n\t\u5df2\u7ecf\u53d7\u5230fail\u7684\u6c61\u67d3\uff08\u5927\u96fe\uff09\uff0c\u6709\u53ef\u80fd\u6307\u5411\u524d\u9762\n\t\u7684\u8282\u70b9\uff0c\u6240\u4ee5\u9700\u8981\u6807\u8bb0\u6570\u7ec4\u907f\u514d\u91cd\u590d\u641c\u7d22 \ni\u662f\u72b6\u6001\u538b\u7f29\uff0c\u8868\u793a\u6709\u54ea\u51e0\u4e2a\u5b57\u7b26\u4e32\u5df2\u7ecf\u627e\u5230\u4e86\nj\u662ftrie\u6570\u4e0a\u7ed3\u70b9\u7684\u6307\u9488 \n*/ \nstruct trie{\n\tint son[26];\n\tint cnt,fail;\n\t/* \n\tcnt\u4e3a\u72b6\u6001\u538b\u7f29\u7528\u6765\n\t\u5b58\u50a8\u5f53\u524d\u7ed3\u70b9\u662f\u54ea\uff08\u51e0\uff09\u4e2a\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\u4f4d\u7f6e \n\t*/ \n}a[N*50];\nvoid insert(string s,int k){\n\t//trie\u6811\u7684\u63d2\u5165\u64cd\u4f5c \n\tint f,p=0,len=s.size();\n\tfor(int i=0;i<len;i++){\n\t\tf=s[i]-65;\n\t\tif(!a[p].son[f])\n\t\t\ta[p].son[f]=++top;\n\t\tp=a[p].son[f];\n\t}\n\ta[p].cnt|=1<<k;\n\t/* \n\t\u8fd9\u91cc\u662f|= \n\t\u539f\u56e0\u5176\u4ed6\u9898\u89e3\u4e5f\u6709\u63d0\u5230\uff08\u6211\u5c31\u662f\u5728\u522b\u4eba\u9898\u89e3\u770b\u5230\u7684\n\t\u56e0\u4e3a\u53ef\u80fd\u6709\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u63d2\u5165trie\u6811\n\t*/ \n}\nvoid getFail(){\n\t//\u6734\u7d20\u7684getFail \n\tqueue<int>q;\n\tfor(int i=0;i<26;i++)\n\t\tif(a[0].son[i])\n\t\t\tq.push(a[0].son[i]);\n\tint u,v,fail;\n\twhile(!q.empty()){\n\t\tu=q.front();\n\t\tfail=a[u].fail;\n\t\tq.pop();\n\t\tfor(int i=0;i<26;i++){\n\t\t\tv=a[u].son[i];\n\t\t\tif(!v)\n\t\t\t\ta[u].son[i]=a[fail].son[i];\n\t\t\telse{\n\t\t\t\ta[v].fail=a[fail].son[i];\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n}\nstruct afa{\n\tint u,v;\n\t//u \u72b6\u6001\u538b\u7f29\n\t//v \u6307\u9488 \n\tstring s;\n\t//s \u5b58\u50a8\u8def\u5f84\uff08\u5176\u5b9e\u5c31\u662f\u8f93\u51fa \n};\nvoid find(){\n\tqueue<afa>q;\n\tq.push({0,0,\"\"});\n\tvis[0][0]=1;\n\t/*\n\t\u5e7f\u641c\u7528\u7684\u961f\u5217 \n\t\u5148\u5c06\u6839\u8282\u70b9\u5165\u961f\u5e76\u505a\u6807\u8bb0 \n\t*/ \n\tint u,v,w;\n\tint sum,k;\n\tstring s;\n\twhile(!q.empty()){\n\t\tu=q.front().u;\n\t\tv=q.front().v;\n\t\ts=q.front().s;\n\t\tq.pop();\n\t\tfor(int i=0;i<26;i++){\n\t\t\t/* \n\t\t\t\u641c\u7d22\u6bcf\u4e2a\u5b69\u5b50 \n\t\t\t\t0~26\u7684\u641c\u7d22\u987a\u5e8f\u65e0\u5f62\u4e2d\u4f7f\u5f97\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u4e00\u5b9a\u662f\n\t\t\t\t\u6240\u6709\u89e3\u4e2d\u5b57\u5178\u5e8f\u6392\u5217\u7684\u7b2c\u4e00\u4e2a \n\t\t\t*/ \n\t\t\tw=a[v].son[i];\n\t\t\tif(!vis[u][w]){\n\t\t\t\tsum=u,k=w;\n\t\t\t\twhile(k){\n\t\t\t\t\tsum|=a[k].cnt;\n\t\t\t\t\tk=a[k].fail;\n\t\t\t\t}\n\t\t\t\t//\u6ce8\u610f\uff01\u8fd9\u91cc\u8981\u8df3fail\uff08\u6211\u5199\u7684\u65f6\u5019\u5c31\u5fd8\u4e86 \n\t\t\t\tvis[sum][w]=1;\n\t\t\t\tif(sum+1==1<<n){\n\t\t\t\t\t/*\n\t\t\t\t\t\u5f53sum\u7684\u6bcf\u4e00\u4f4d\uff08\u5e94\u8be5\u662f\u524dn\u4f4d\uff09\u90fd\u662f1\u65f6 \n\t\t\t\t\t\u6bcf\u4e2a\u5b57\u7b26\u4e32\u90fd\u88ab\u627e\u5230\u4e86\uff0c\u4e5f\u5c31\u662f\u6b64\u65f6\u7684 s+char(i+65) \u5305\u542b\u4e86\u6bcf\u4e2a\u5b57\u7b26\u4e32 \n\t\t\t\t\t*/\n\t\t\t\t\t//\u8f93\u51fa \n\t\t\t\t\tcout<<s+char(i+65);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tq.push({sum,w,s+char(i+65)});\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\t//\u7b80\u964b\u7684main \n\tstring s;\n\tcin>>n;\n\tfor(int i=0;i<n;i++){\n\t\tcin>>s;\n\t\tinsert(s,i);\n\t}\n\tgetFail();\n\t//cout<<\"sb\";\n\tfind();\n}\n```\n\n## 4.\u6211\u60f3\u8bf4\u7684\u8bdd\n\n\u611f\u89c9\u8fd9\u9898 ~~\u5361\u4e86\u6211\u597d\u4e00\u4f1a~~ \u86ee\u6709\u610f\u601d\u7684\uff0c\u5c31\u5199\u4e86\u7bc7\u9898\u89e3\n\n\u6211\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u5982\u6709\u9519\u8bef\uff08\u6216\u7f3a\u9677\uff09\u6b22\u8fce\u6307\u51fa",
        "postTime": 1623509486,
        "uid": 405894,
        "name": "233L",
        "ccfLevel": 6,
        "title": "P2322 [HNOI2006]\u6700\u77ed\u6bcd\u4e32\u95ee\u9898"
    },
    {
        "content": "# P2322 [HNOI2006]\u6700\u77ed\u6bcd\u4e32\u95ee\u9898\n\n\u62ff\u5230\u6b64\u9898\u540e\uff0c\u5148\u89c2\u5bdf\u9898\u76ee\u4e2d\u7ed9\u7684\u6570\u636e\u8303\u56f4\uff0c$n \\le 12$\uff0c\u6545\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u4e00\u4e9b\u9ad8\u590d\u6742\u5ea6\u7b97\u6cd5\u89e3\u51b3\u6b64\u9898\u3002\n\n\u5728\u8fdb\u884c n \u4e2a\u5b57\u7b26\u4e32\u7684\u5408\u5e76\u4e4b\u524d\uff0c\u5148\u8003\u8651\u5982\u679c\u53ea\u6709\u4e24\u4e2a\u5b57\u7b26\u4e32\u600e\u4e48\u529e\uff1f\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u7684\u53bb\u60f3\u8fd9\u4e2a\u95ee\u9898\u3002\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u88ab\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u5305\u542b\uff0c\u5219\u76f4\u63a5\u53d6\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u5426\u5219\uff0c\u627e\u51fa a \u7684\u4e00\u4e2a\u524d\u7f00\u548c b \u7684\u4e00\u4e2a\u540e\u7f00\u76f8\u7b49\uff0c\u7136\u540e\u628a\u5b83\u4ece b \u4e2d\u53bb\u6389\u5728\u5c06 ab \u76f4\u63a5\u8fde\u63a5\u8d77\u6765\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6bd4\u5982\uff1a\n\n$aaaabcd\\,\\,\\,bcdaaa$ $\\to$ $aaaabcdaaa$\n\n\u90a3\u4e48\u6709\u4e86\u8fd9\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u63a5\u7740\u8003\u8651\u5982\u4f55\u6c42\u89e3 $n$ \u4e2a\u5b57\u7b26\u4e32\u7684\u60c5\u51b5\u3002\n\n\u4ee4 $dp_{i, S}$ \u8868\u793a\u8003\u8651 S \u8fd9\u4e2a\u96c6\u5408\u4e2d\u7684\u5b57\u7b26\u4e32\u5408\u5e76\u8d77\u6765\u4e14\u4ee5 $s_i$ \u4e3a\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u4e2d\u6ee1\u8db3\u9898\u76ee\u6761\u4ef6\u6700\u5c0f\u7684\u4e00\u4e2a\u6bcd\u4e32\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9884\u5904\u7406\u51fa\u6bcf\u5bf9\u5b57\u7b26\u4e32\u95f4\u7684\u516c\u5171\u524d\u540e\u7f00\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8fdb\u884c\u8f6c\u79fb\u4e86\u3002\n\n\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728 dp \u524d\u5fc5\u987b\u628a\u6240\u6709\u88ab\u5176\u4ed6\u5b57\u7b26\u4e32\u5305\u542b\u7684\u5b57\u7b26\u4e32\u53bb\u6389\uff0c\u8fd9\u6837 dp \u5c31\u53ef\u4ee5\u5f97\u51fa\u7ed3\u679c\u4e86\u3002\n\n\u4e0b\u9762\u662f\u6211\u7684 Code\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\nusing namespace std;\ntypedef long long ll;\nconst ll maxn = (1 << 12) + 5;\nstring dp[maxn][12];\nbool al[maxn][12];\nll ct[12][12];\nll n;\nbool vis[maxn];\nstring s[13];\nbool bel(string x, string y){\n\tif(x == y) return 0;\n\tif(y.find(x) == string::npos) return 0;\n\treturn 1;\n}\nstring tmp;\nll pub[13][13];\nstring ccc[13];\nll calc(string x, string y){\n\tll l1 = x.size(), l2 = y.size();\n\tll ans = 0;\n\tfor(int i = 1;i <= l2 && i <= l1;i++){\n\t\tstring c1 = y.substr(0, i), c2 = x.substr(l1 - i, i);\n\t\tif(c1 == c2) ans = i;\n//\t\tcout << c1 << \" \" << c2 << endl;\n\t}\n//\tputs(\"\");\n\treturn ans;\n}\nint main(){\n\tcin >> n;\n\tfor(int i = 0;i < n;i++){\n\t\tcin >> tmp;\n\t\ts[i] = tmp;\n\t}\n\tfor(int i = 0;i < n;i++){\n\t\tfor(int j = 0;j < n;j++){\n\t\t\tif(i == j) continue;\n\t\t\tif(bel(s[i], s[j])) vis[i] = 1;\n\t\t}\n\t}\n\tll tot = 0;\n\tfor(int i = 0;i < n;i++){\n\t\tif(!vis[i]){\n\t\t\tccc[tot] = s[i];\n\t\t\ttot++;\n\t\t}\n\t}\n\tfor(int i = 0;i < tot;i++) s[i] = ccc[i];\n\tn = tot;\n\tfor(int i = 0;i < n;i++){\n\t\tfor(int j = 0;j < n;j++){\n\t\t\tpub[i][j] = calc(s[i], s[j]);\n//\t\t\tcout << pub[i][j] << \" \";\n\t\t}\n//\t\tputs(\"\");\n\t}\n\tfor(int i = 0;i < n;i++){\n\t\tdp[1 << i][i] = s[i];\n\t\tal[1 << i][i] = 1;\n\t}\n\tfor(int i = 1;i < (1 << n);i++){\n\t\tfor(int j = 0;j < n;j++){\n\t\t\tif(!((i >> j) & 1)) continue;\n\t\t\tif(!al[i][j]) continue;\n\t\t\tfor(int k = 0;k < n;k++){\n\t\t\t\tif((i >> k) & 1) continue;\n\t\t\t\tll le = pub[j][k], l3 = s[k].size();\n\t\t\t\tif(al[i | (1 << k)][k] && dp[i | (1 << k)][k].size() \n\t\t\t\t< dp[i][j].size() + l3 - le){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ttmp = s[k].substr(le, l3 - le);\n\t\t\t\ttmp = dp[i][j] + tmp;\n\t\t\t\tif(!al[i | (1 << k)][k]){\n\t\t\t\t\tdp[i | (1 << k)][k] = tmp;\n\t\t\t\t\tal[i | (1 << k)][k] = 1;\n\t\t\t\t}\n\t\t\t\tif(dp[i | (1 << k)][k].size() == tmp.size()){\n\t\t\t\t\tif(dp[i | (1 << k)][k] > tmp){\n\t\t\t\t\t    dp[i | (1 << k)][k] = tmp;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdp[i | (1 << k)][k] = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tstring ans;\n\tll lee = 0x3f3f3f3f3f;\n\tfor(int i = 0;i < n;i++){\n\t\tif(dp[(1 << n) - 1][i].size() < lee || (dp[(1 << n) - 1][i].size() == lee && dp[(1 << n) - 1][i] < ans)){\n\t\t\tans = dp[(1 << n) - 1][i];\n\t\t\tlee = ans.size();\n\t\t}\n//\t\tcout << dp[(1 << n) - 1][i] << endl;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```\n\n\u590d\u6742\u5ea6\u662f $\\mathcal O(n^2 \\cdot 2^n \\cdot |S|)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002",
        "postTime": 1608301264,
        "uid": 177999,
        "name": "juicyyou",
        "ccfLevel": 9,
        "title": "P2322 [HNOI2006]\u6700\u77ed\u6bcd\u4e32\u95ee\u9898"
    },
    {
        "content": "[$\\text{Link}$](https://www.luogu.com.cn/problem/P2322)\n## \u9898\u610f\n\u7ed9\u51fa $n$ \u4e2a\u4e92\u4e0d\u5305\u542b\u7684\u5b57\u7b26\u4e32 $a_{1,2,...,n}$\uff0c\u8981\u6c42\u4f60\u6c42\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32 $S$\uff0c\u4f7f\u5f97 $\\forall i\\in[1,n],a_i\\in S$\uff0c\u6c42 $\\min|S|$\u3002\n\n$|a_i|\\le50,1\\le n\\le 12$.\n## \u601d\u8def\n\u9996\u5148\u6211\u4eec\u770b\u5230\u6709 $n$ \u4e2a\u5b57\u7b26\u4e32\uff0c\u611f\u89c9 $\\text{KMP}$ \u4e0d\u600e\u4e48\u597d\u505a\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651 $\\text{ACAM}$\u3002\n\n\u7136\u540e\u8fd9\u4e2a $n\\le 12$ \u975e\u5e38\u5947\u602a\uff0c\u4e8e\u662f\u8003\u8651\u72b6\u538b $\\text{dp}$\u3002\n\n\u6211\u4eec\u7ed9\u6bcf\u4e2a\u8282\u70b9\u8d4b\u503c $state_i$\uff0c\u82e5\u5728 $\\text{Trie}$ \u4e0a $i$ \u4e32\u4ee5 $j$ \u8282\u70b9\u7ed3\u5c3e\u5219 $state_j\\gets state_j\\text{ or }2^{i-1}$\uff0c\u5728\u5efa\u51fa $\\text{Fail}$ \u6811\u540e\uff0c\u5c06 $state$ \u518d $\\text{or}$ \u4e0a\u5f53\u524d\u8282\u70b9\u7684\u6240\u6709\u540e\u7f00\u3002\n\n\u7136\u540e\u6211\u4eec\u4ece\u6839\u8282\u70b9\u5f00\u59cb $\\text{BFS}$\uff0c\u5f53\u6309\u7167\u5b57\u5178\u5e8f\u904d\u5386\u5230\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u5c06\u5f53\u524d\u72b6\u6001 $\\text{or}$ \u4e0a\u8282\u70b9\u7684 $statu$\uff0c\u82e5\u53d6\u5230\u5168\u5c40\u5219\u5c06\u8def\u5f84\u4e0a\u7684\u5b57\u7b26\u8f93\u51fa\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(2^n\\sum|a_i|)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nnamespace IO{//by cyffff\n\t\n}\nconst int N=600+10,C=(1<<12)+1,S=N*C;\n#define Tr ACAM.ch\nint n,ans[S],pre[S],state[N],all;\nchar str[N];\nbool vis[N][C];\nstruct node{\n\tint pos,state;\n\tnode(int x=0,int y=0){pos=x,state=y;};\n};\nqueue<node>q;\nstruct AC_AutoMaton{\n\tint fail[N];\n\tint ch[N][26],cnt=0;\n\tinline void insert(char *s,int n,int x){\n\t\tint cur=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tint x=s[i]-'A';\n\t\t\tif(!ch[cur][x]) ch[cur][x]=++cnt;\n\t\t\tcur=ch[cur][x];\n\t\t}\n\t\tstate[cur]|=1<<x-1;\n\t}\n\tinline void getfail(){\n\t\tqueue<int>q;\n\t\tfor(int i=0;i<26;i++){\n\t\t\tif(ch[0][i]) q.push(ch[0][i]);\n\t\t}\n\t\twhile(!q.empty()){\n\t\t\tint cur=q.front();\n\t\t\tq.pop();\n\t\t\tfor(int i=0;i<26;i++){\n\t\t\t\tif(!ch[cur][i]){\n\t\t\t\t\tch[cur][i]=ch[fail[cur]][i];\n\t\t\t\t}else{\n\t\t\t\t\tint v=fail[cur];\n\t\t\t\t\tfail[ch[cur][i]]=ch[v][i];\n\t\t\t\t\tstate[ch[cur][i]]|=state[ch[v][i]];\n\t\t\t\t\tq.push(ch[cur][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}ACAM;\nint main(){\n\tn=read();\n\tall=(1<<n)-1;\n\tfor(int i=1;i<=n;i++){\n\t\treadstr(str);\n\t\tACAM.insert(str,strlen(str+1),i);\n\t}\n\tACAM.getfail();\n\tq.push({0,0});\n\tvis[0][0]=1;\n\tint cnt=0,now=0;\n\twhile(!q.empty()){\n\t\tnode cur=q.front();\n\t\tq.pop();\n\t\tif(cur.state==all){\n\t\t\tstack<char>st;\n\t\t\twhile(now){\n\t\t\t\tst.push(ans[now]+'A');\n\t\t\t\tnow=pre[now];\n\t\t\t}\n\t\t\twhile(!st.empty()) putc(st.top()),st.pop();\n\t\t\treturn flush(),0;\n\t\t}\n\t\tfor(int i=0;i<26;i++){\n\t\t\tint x=Tr[cur.pos][i],sta=cur.state;\n\t\t\tif(!vis[x][sta|state[x]]){\n\t\t\t\tvis[x][sta|state[x]]=1;\n\t\t\t\tq.push({x,sta|state[x]});\n\t\t\t\tpre[++cnt]=now;\n\t\t\t\tans[cnt]=i;\n\t\t\t}\n\t\t}\n\t\tnow++;\n\t}\n}\n```\n",
        "postTime": 1624338904,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2322\u3010[HNOI2006]\u6700\u77ed\u6bcd\u4e32\u95ee\u9898\u3011"
    },
    {
        "content": "\u505a\u6cd5 \uff1a\u72b6\u538b$DP$ + $KMP$\n\n\u5148\u8bb2\u4e00\u4e0b\u6211\u505a\u8fd9\u9898\u7684\u539f\u6765\u601d\u8def\n\nstring\u7c7b\u578b\u7684$DP$\n\n$f_i$ \u8868\u793a\u5728\u5b57\u7b26\u4e32\u88ab\u9009\u62e9\u7684\u60c5\u51b5\u4e3a $i$ \u65f6\u7684\u6bcd\u4e32 $(\u4ee5\u957f\u5ea6\u7b2c\u4e00\u5173\u952e\u5b57,\u5b57\u5178\u5e8f\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57)$\n\n\u663e\u800c\u6613\u89c1\u7684\u8f6c\u79fb$f_i = f_j $ + \u539f\u5b50\u4e32 $k$ \u4e0e $f_j$ \u975e\u91cd\u53e0\u90e8\u5206\u957f\u5ea6 ($i$ ^ $k$ = $j$)\n\n(\u82e5$k$\u88ab$f_j$\u5b8c\u5168\u5305\u542b,\u5219\u91cd\u53e0\u90e8\u5206\u4e3a$0$)\n\n\u7528$KMP$\u5c06 $k$ \u4e32\u4e0e $f_j$ \u5339\u914d,\u53d6\u7b2c\u4e00\u6b21\u5339\u914d\u5230\u7684,\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\u8df3\u8fc7\uff0c\u4e4b\u540e\u770b\u4ee3\u7801\u3002\n\n\u6ee1\u6000\u6b23\u559c\u7684\u4ea4\u4e0a\u53bb\u4e00\u53d1,\u5495\u5495\u5495 $80$\u3002\n\n\u81ea\u5df1\u7528\u4ee3\u7801\u9020\u4e86\u6570\u636e\u731b\u5730\u53d1\u73b0,\u8fd9\u6837$DP$\u4f1a\u5bfc\u81f4\u539f\u672c\u67d0\u4e00\u72b6\u6001\u5c40\u90e8\u6700\u4f18\uff0c\u4f46\u662f\u5728\u540e\u671f\u66f4\u65b0\u4f1a\u628a**\u4e0d\u5982\u539f\u6765\u7684\u4e14\u4e0e\u5176\u957f\u5ea6\u76f8\u540c\u4f46\u5b57\u5178\u5e8f\u5927**\u800c\u88ab\u820d\u53bb\u7684\uff0c**\u5bfc\u81f4\u6574\u4f53\u4e0d\u4f18**\u3002(\u4e0d\u5f97\u4e0d\u8bf4Luogu\u6570\u636e\u6709\u70b9\u6c34)\u3002\n\n\u60f3\u4e86\u4e00\u4f1a,\u6211\u4eec\u53d1\u73b0\u53ef\u4ee5\u5728\u539f\u6765 $DP$ \u4e0a\u52a0\u4e00\u4e2a\u7ef4\u5ea6, $f_{ij}$ \u8868\u793a\u72b6\u6001\u4e3a $i$ ,\u4e14\u6700\u540e\u4e00\u6b21\u5408\u5e76\u4e0a\u53bb\u7684\u5b57\u4e32\u4e3a $j$ \u65f6\u7684\u6bcd\u4e32\u3002\n\n\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e00\u79cd\u60c5\u51b5\u90fd\u88ab\u8003\u8651\u5230\u4e86(\u8bf7\u8bfb\u8005\u81ea\u5df1\u611f\u6027\u7406\u89e3\u4e00\u4e0b)\n\n\u6700\u540e\u7684\u7b54\u6848\u4f1a\u5728 $f[(1 << n) - 1][i](i\\in[1,n])$ \u4e2d\u53d6\u5230\uff0c\u76f4\u63a5\u626b\u63cf\u66f4\u65b0\u3002\n\n\u8bdd\u4e0d\u591a\u8bf4\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define debug(x) cerr << #x << \" = \" << x <<endl;\n#define rep(i, a, b) for(int i = (a); i <= (b); ++ i)\nusing namespace std;\ntemplate<typename Tp> void Cmax(Tp &x, Tp y) { x = max(x, y); }\ntemplate<typename Tp> void Csum(Tp &x, Tp y) { x = x + y; }\ntemplate<typename Tp>\nvoid read(Tp &x){\n\tx = 0; int f = 1;\n\tchar ch = getchar();\n\twhile(!isdigit(ch)){ if(ch == '-') f = -1; ch = getchar(); }\n\twhile(isdigit(ch)){ x = x * 10 + ch - 48; ch = getchar(); }\n\tx = x * f;\n}\ntypedef long long LL;\ntypedef double doub;\nconst int N = (1 << 13) + 40;\nchar s[20][100];\nstring g[N][20];\nint KMP[1000], n;\nstring merge(string S, int pos){\n\tint len = strlen(s[pos] + 1);\n\tint j = 0, r = S.size();\n\tfor(int i = 2; i <= len; ++i){\n\t\twhile(j && s[pos][j + 1] != s[pos][i]) j = KMP[j];\n\t\tif(s[pos][j + 1] == s[pos][i]) ++j;\n\t\tKMP[i] = j;\n\t}\n\tj = 0;\n\tfor(unsigned int i = 0; i < S.size(); ++i){\n\t\twhile(j && s[pos][j + 1] != S[i])\n\t\t\tj = KMP[j];\n\t\tif(s[pos][j + 1] == S[i]) ++j;\n\t\tif(j == len){\n\t\t\tr = i; //\u8fd9\u91cc\u662f\u7528\u6765\u5224\u65ad\u662f\u5426\u88ab\u5b8c\u5168\u5305\u542b \n\t\t\tbreak;\n\t\t}\n\t}\n\tint f = S.size() - j; //\u60f3\u50cf\u4e00\u4e0b\uff0c\u5982\u679c\u4e0d\u88ab\u5b8c\u5168\u5305\u542b\uff0c\u90a3\u8fd9\u4e2aS\u4e32\u7684\u90e8\u5206\u540e\u7f00\u80af\u5b9a\u4e0e\u5b57\u4e32\u90e8\u5206\u524d\u7f00\u6709\u91cd\u5408 \n\tif((unsigned int)r >= S.size()) //\u5982\u679c\u4e0d\u88ab\u5b8c\u5168\u5305\u542b\u5c31\u8981\u5f80\u540e\u66b4\u529b\u66f4\u65b0 \n\tfor(int i = 1; i <= len; ++i){\n\t\tif((unsigned int)i + f - 1  >= S.size()) S += 'a'; //\u8fd9\u91cc\u662f\u5c06DP\u91cc\u9762\u7684\u4e32\u548c\u67d0\u4e00\u5b57\u4e32\u5408\u5e76\u7684\u64cd\u4f5c \n\t\tS[i + f - 1] = s[pos][i];\n\t}\n\treturn S;\n}\nstring ans;\nsigned main(){\n\tread(n);\n\trep(i, 1, n)\n\t\tscanf(\"%s\", s[i] + 1);\n\tfor(int i = 1; i <= n; ++i){\n\t\tstring r = \"\";\n\t\tint si = strlen(s[i] + 1);\n\t\tfor(int j = 1; j <= si; ++j)\n\t\t\tr += s[i][j];\n\t\tg[(1 << (i - 1))][i] = r;\n\t}\n\trep(i, 1, (1 << n) - 1)\n\t\trep(j, 1, n)\n\t\t\tif(i & (1 << (j - 1))){\n\t\t\t\trep(k, 1, n){\n\t\t\t\t\tif(k == j) continue; //\u5df2\u7ecf\u5408\u5e76\u8fc7\u81ea\u5df1,\u4e0d\u80fd\u5408\u5e76 \n\t\t\t\t\tint sta = i ^ (1 <<(k - 1));\n\t\t\t\t\tif((i & (1 << (k - 1)))){\n\t\t\t\t\t\tstring p = merge(g[sta][j], k); //\u5408\u5e76 \n\t\t\t\t\t\tif(g[i][k].size() == 0) g[i][k] = p;//\u4e0b\u9762\u662f\u66f4\u65b0DP \n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tif(g[i][k].size() > p.size())\n\t\t\t\t\t\t\t\tg[i][k] = p;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tif(g[i][k].size() == p.size() && g[i][k] > p)\n\t\t\t\t\t\t\t\t\tg[i][k] = p;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\tint tt = (1 << n) - 1;\n\tfor(int i = 1; i <= n; ++i){ //\u66f4\u65b0\u7b54\u6848 \n\t\tif(ans.size() == 0) ans = g[tt][i];\n\t\telse{\n\t\t\tif(ans.size() > g[tt][i].size())\n\t\t\t\tans = g[tt][i];\n\t\t\telse\n\t\t\t\tif(ans.size() == g[tt][i].size() && g[tt][i] < ans)\n\t\t\t\tans = g[tt][i];\n\t\t}\n\t}\n\tcout << ans <<endl;\n\treturn 0;\n}\n```\n\u5b8c\u7ed3\u6492\u82b1\n\n",
        "postTime": 1605695393,
        "uid": 291139,
        "name": "TinG\u96ea\u4e4b\u4e0b",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2322 \u3010[HNOI2006]\u6700\u77ed\u6bcd\u4e32\u95ee\u9898\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u51fa$n$\u4e2a\u5b57\u7b26\u4e32\uff0c\u6c42\u4e00\u4e2a\u6700\u77ed\u7684\u4e32\u4f7f\u5f97\u6240\u6709\u5b57\u7b26\u4e32\u90fd\u662f\u8fd9\u4e2a\u4e32\u7684\u5b50\u4e32\u3002\n\n\u5148\u628a\u5b57\u7b26\u4e32\u5efa\u51fa$trie$\u56fe\uff0c\u95ee\u9898\u7b49\u4ef7\u4e8e\u6c42\u4e00\u6761\u6700\u5c0f\u7684\u94fe\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u8fde\u7ecf\u8fc7\u6bcf\u4e2a\u4e32\u7684\u7ed3\u5c3e\u3002\u94fe\u4e0a\u7684\u5b57\u7b26\u5373\u4e3a\u6240\u6c42\u5b57\u7b26\u4e32\u3002\n    \u6240\u4ee5\u6211\u4eec$bfs$\uff0c\u56e0\u4e3a$n\\leq 12$\u6240\u4ee5\u5224\u65ad\u5230\u6ca1\u5230\u8fc7\u8fd9\u4e2a\u4e32\u7684\u7ed3\u5c3e\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\uff0c$0$\u8868\u793a\u6ca1\u6709\u5230\u8fc7\uff0c$1$\u8868\u793a\u5230\u8fc7\u3002\u8bbe\u7f6e\u5230\u7ed3\u5c3e\u65f6\u7528\u6309\u4f4d\u6216$\\,|\\,$\u8fd0\u7b97\u3002\n    \u6700\u540e\u7b54\u6848\u5c31\u662f\u7b2c\u4e00\u6b21\u72b6\u6001\u6bcf\u4e00\u4f4d\u90fd\u4e3a$1$\u6240\u8bb0\u5f55\u7684\u5b57\u7b26\u4e32\u3002\n\n\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define eps 1e-7\n#define re register\n#define N 3001001\n#define MAX 5001\n#define inf 1e18\nusing namespace std;\ntypedef int ll;\ntypedef double db;\ninline void read(re ll& ret)\n{\n\tret=0;re ll pd=0;re char c=getchar();\n\twhile(!isdigit(c)){pd|=c=='-';c=getchar();}\n\twhile(isdigit(c)){ret=(ret<<1)+(ret<<3)+(c^48);c=getchar();}\n\tret=pd?-ret:ret;\n}\nll n,trie[601][26],tot,f[MAX],nxt[MAX];\nchar s[MAX];\ninline void insert(re ll pos)\n{\n\tre ll p=0,len=strlen(s+1);\n\tfor(re int i=1;i<=len;i++)\n\t{\n\t\tre ll c=s[i]-'A';\n\t\tif(!trie[p][c])\n\t\t\ttrie[p][c]=++tot;\n\t\tp=trie[p][c];\n\t}\n\tf[p]|=(1<<pos);\n}\nll b[MAX],sum;\ninline void bfs()\n{\n\tqueue<ll>q;\n\tfor(re int i=0;i<26;i++)\n\t\tif(trie[0][i])\n\t\t\tq.push(trie[0][i]);\n\twhile(!q.empty())\n\t{\n\t\tre ll p=q.front();\n\t\tb[++sum]=p;\n\t\tq.pop();\n\t\tfor(re int i=0;i<26;i++)\n\t\t{\n\t\t\tif(!trie[p][i])\n\t\t\t\ttrie[p][i]=trie[nxt[p]][i];\n\t\t\telse\n\t\t\t{\n\t\t\t\tnxt[trie[p][i]]=trie[nxt[p]][i];\n\t\t\t\tq.push(trie[p][i]);\n\t\t\t}\n\t\t}\n\t}\n}\n\nstruct node\n{\n\tll p,state,fa,data;\n\tchar c;\n}ans[1350000];\nqueue<node>q;\nbool vis[601][MAX];\nll top;\nint main()\n{\n\tread(n);\n\tfor(re int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",s+1);\n\t\tinsert(i);\n\t}\n\tbfs();\n\tfor(re int i=sum;i;i--)\n\t\tf[i]|=f[nxt[i]];\n\tre node qwq;\n\tqwq.p=0;\n\tqwq.state=f[0];\n\tqwq.fa=0;\n\tqwq.c=0;\n\tqwq.data=++top;\n\tans[top]=qwq;\n\tq.push(qwq);\n\twhile(!q.empty())\n\t{\n\t//\tif(top>1000000)\n\t//\t\tcout<<top<<endl;\n\t\tqwq=q.front();\n\t\tq.pop();\n/*\t\tre node tt=qwq;\n\t\tre ll cnt=0;\n\t\twhile(qwq.fa)\n\t\t\t{\n\t\t\t\ts[++cnt]=qwq.c;\n\t\t\t\tqwq=ans[qwq.fa];\n\t\t\t}\n\t\t\tfor(re int i=cnt;i;i--)\n\t\t\t\tputchar(s[i]);\n\t\t\tputchar('\\n');\n\t\tqwq=tt;*/\n\t//\tcout<<qwq.p<<\" \"<<qwq.data<<\" \"<<qwq.state<<\" \"<<qwq.fa<<endl;\n\t\tif(qwq.state+2==(1<<n+1))\n\t\t{\n\t\t\tre ll cnt=0;\n\t\t\twhile(qwq.fa)\n\t\t\t{\n\t\t\t\ts[++cnt]=qwq.c;\n\t\t\t\tqwq=ans[qwq.fa];\n\t\t\t}\n\t\t\tfor(re int i=cnt;i;i--)\n\t\t\t\tputchar(s[i]);\n\t\t\tputchar('\\n');\n\t\t\tbreak;\n\t\t}\n\t\tre ll tmp=qwq.p;\n\t\tre node qaq;\n\t\tfor(re int i=0;i<26;i++)\n\t\t\tif(trie[qwq.p][i])\n\t\t\t{\n\t\t\t\tqaq.p=trie[qwq.p][i];\n\t\t\t\tqaq.state=(qwq.state|f[qaq.p]);\n\t\t\t\tif(vis[qaq.p][qaq.state])\n\t\t\t\t\tcontinue;\n\t\t\t\tqaq.c=char(i+'A');\n\t//\t\t\tcout<<qaq.c<<endl;\n\t\t\t\tqaq.fa=qwq.data;\n\t\t\t\tqaq.data=++top;\n\t\t\t\tans[top]=qaq;\n\t\t//\t\tcout<<qaq.p<<\" \"<<qaq.data<<\" \"<<qaq.state<<\" \"<<qaq.fa<<endl;\n\t\t\t\tvis[qaq.p][qaq.state]=true;\n\t\t\t\tq.push(qaq);\n\t\t\t}\n\t}\n    exit(0);\n}\n```\n",
        "postTime": 1583752348,
        "uid": 176990,
        "name": "Celtic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2322 \u3010[HNOI2006]\u6700\u77ed\u6bcd\u4e32\u95ee\u9898\u3011"
    },
    {
        "content": "\u770b\u5230$n<=12$\u7684\u6570\u636e\u8303\u56f4\uff0c\u4e00\u773c\u72b6\u538b$dp$\uff1f\u968f\u4fbf\u5f00\u59cb\u6572\u4e86\u6572\uff0c\u4e00\u665a\u4e0a\u5c31\u6ca1\u4e86\uff1f\n\n\u770b\u5230\u9898\u89e3\u8fd8\u6709\u4e00\u7bc7\u72b6\u538b\uff0c\u611f\u89c9\u633a\u9ebb\u70e6\u7684\u3002\u8fd9\u91cc\u7ed9\u51fa\u53ef\u80fd\u7a0d\u5fae\u65b9\u4fbf\u4e00\u70b9\u7684\u3002\n\n\u72b6\u538b\u72b6\u6001\u548c\u65b9\u7a0b\u5e94\u8be5\u5f88\u597d\u60f3\uff0c$f[i][j]$\u8868\u793a\u72b6\u6001$i$\u4e0b\uff0c\u6700\u540e\u7684\u5b57\u7b26\u4e32\u662f$j$\u7684\u6700\u77ed\u957f\u5ea6\uff0c\u56e0\u4e3a\u8981\u8f93\u51fa\u65b9\u6848\uff0c\u518d\u6765\u4e00\u4e2a$g[i][j]$\u8868\u793a\u957f\u5ea6\u6700\u77ed\u65f6\u7684\u5b57\u7b26\u4e32\u3002\n\n\u505a\u8fc7\u51e0\u9898\u5b57\u7b26\u4e32\u63a5\u9f99\u72b6\u538b\u9898\uff0c\u5e94\u8be5\u5f88\u5bb9\u6613\u5199\u51fa\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$\nf[to][k]=min(f[to][k],f[i][j]+chongdie)\n$$\n$to$\u663e\u7136\u5c31\u662f$i\\ |\\ (1<<(k-1))$\uff0c\u5373\u72b6\u6001\u4e2d\u591a\u63a5\u4e86\u4e00\u4e2a$k$\uff0c$chongdie$\u662f$k$\u63a5\u5728$j$\u540e\u9762\u65f6\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u91cd\u53e0\u90e8\u5206\u7684\u957f\u5ea6\uff0c\u6ce8\u610f\u662f\u6709\u987a\u5e8f\u7684\uff0c\u662f$k$\u63a5$j$\u540e\u9762\u3002\u6700\u540e\uff0c\u5f53$f$\u6570\u7ec4\u66f4\u65b0\u65f6\uff0c\u6211\u4eec\u540c\u65f6\u4e5f\u66f4\u65b0$g$\u6570\u7ec4\u3002\n\n\u5177\u4f53\u5206\u6790\u4e00\u4e0b\u8f6c\u79fb\uff1a\n\n1\u3001$k$\u662f$j$\u7684\u5b50\u4e32\uff0c\u53ef\u4ee5\u7528$string$\u7684$find$\u51fd\u6570\u8f7b\u677e\u89e3\u51b3\uff0c$chongdie=0$\u3002\n\n2\u3001$k$\u4e0d\u662f$j$\u7684\u5b50\u4e32\uff0c\u6211\u4eec\u66b4\u529b\u5339\u914d\uff0c\u679a\u4e3e$j$\u4ece\u54ea\u4e00\u4f4d\u5f00\u59cb\u4e0e$k$\u91cd\u53e0\uff0c\u975e\u5e38\u66b4\u529b\uff0c\u53ef\u4ee5\u89c1\u4ee3\u7801\u3002\n\n\u7b54\u6848\u663e\u7136\u6613\u89c1\uff0c\u5c31\u662f$min(\\sum\\limits_{i=1}^{n}f[(1<<n)-1][i]))$\uff0c\u7136\u540e\u53d6\u51fa\u6240\u6709\u957f\u5ea6\u6700\u5c0f\u7684$g[(1<<n)-1][i]$\uff0c\u6392\u904d\u5e8f\u5f97\u5230\u6700\u5c0f\u5b57\u5178\u5e8f\u7684\u7b54\u6848\u3002\n\n\u4ee3\u7801\u91cc\u8fd8\u6709\u90e8\u5206\u6ce8\u91ca\uff0c\u633a\u597d\u61c2\u7684\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define ts cout<<\"ok\"<<endl\n#define ll long long\n#define hh puts(\"\")\nusing namespace std;\nint n,f[5005][13],max_status,top;\nstring s[105],g[5005][13],ans[105];\ninline int read(){\n    int ret=0,ff=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-') ff=-ff;ch=getchar();}\n    while(isdigit(ch)){ret=(ret<<3)+(ret<<1)+(ch^48);ch=getchar();}\n    return ret*ff;\n}\ninline int check(int x,int y){\n    if(s[x].find(s[y])!=s[x].npos) return -1;//x\u5305\u542by \n    for(int i=0;i<s[x].size();i++){//\u679a\u4e3ej\u4ece\u54ea\u4e00\u4f4d\u5f00\u59cb\u4e0ek\u91cd\u53e0\n        bool fl=1;\n        for(int j=i;j<s[x].size();j++){\n            if(s[y][j-i]!=s[x][j]){\n                fl=0;\n                break;\n            }\n        }\n        if(fl) return s[x].size()-i;//\u8fd4\u56de\u91cd\u53e0\u90e8\u5206\u957f \n    }\n    return 0;\n}\nsigned main(){\n    n=read();\n    for(int i=1;i<=n;i++) cin>>s[i];\n    memset(f,0x3f,sizeof(f));\n    f[0][0]=0;\n    for(int i=1;i<=n;i++) f[1<<(i-1)][i]=s[i].length(),g[1<<(i-1)][i]=s[i];\n    max_status=(1<<n)-1;\n    for(int i=0;i<=max_status;i++){\n        for(int j=1;j<=n;j++){//\u4ee5j\u7ed3\u5c3e \n            if(i&(1<<(j-1))){\n                for(int k=1;k<=n;k++){//\u540e\u9762\u63a5k \n                    if(!(i&(1<<(k-1)))){\n                        int to=i|(1<<(k-1));\n                        int chong=check(j,k);//\u91cd\u53e0\u90e8\u5206\u957f\u5ea6 \n                        if(chong==-1){//j\u5305\u542bk \n                            if(f[i][j]<f[to][j]||(f[i][j]==f[to][j]&&g[to][j]>g[i][j])){\n                                f[to][j]=f[i][j];\n                                g[to][j]=g[i][j];\n                            }\n                        }\n                        else{\n                            string t=\"\";\n                            for(int p=chong;p<s[k].size();p++) t+=s[k][p];//t\u662fj\u63a5\u4e0ak\u540e\u591a\u51fa\u6765\u7684\u4e00\u6bb5\u5b57\u7b26 \n                            t=g[i][j]+t;\n                            if((f[i][j]+s[k].size()-chong<f[to][k])||\n\t\t\t\t\t\t\t(f[i][j]+s[k].size()-chong==f[to][k]&&g[to][k]>t)){\n                                f[to][k]=f[i][j]+s[k].size()-chong;\n                                g[to][k]=t;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    int minn=1e9;\n    for(int i=1;i<=n;i++){\n        if(f[max_status][i]<minn){\n            minn=f[max_status][i];\n            top=1;\n            ans[top]=g[max_status][i];\n        }\n        else if(f[max_status][i]==minn) ans[++top]=g[max_status][i];\n    }\n    sort(ans+1,ans+top+1);//\u6392\u5e8f\u627e\u5b57\u5178\u5e8f\u6700\u5c0f \n    cout<<ans[1];\n    return 0;\n}\n```\n\n",
        "postTime": 1557097846,
        "uid": 27858,
        "name": "ycyaw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2322 \u3010[HNOI2006]\u6700\u77ed\u6bcd\u4e32\u95ee\u9898\u3011"
    },
    {
        "content": "\u672c\u6765\u9ad8\u9ad8\u5174\u5174\u5199\u4e86\u4e2aDP\uff0c\u7136\u800c\u53d1\u73b0\u6839\u672c\u65e0\u6cd5\u89e3\u51b3\u5b57\u5178\u5e8f\u95ee\u9898\uff0c\u600e\u4e48\u529e\u80fd\uff1f\n\n\u641c\u5427\u3002\u3002\u3002\u3002\u3002\n\n\u6211\u4eec\u5047\u8bbe\u5df2\u7ecf\u6b63\u786e\u5730\u5199\u51fa\u4e86DP\uff0c\u4ece\u800c\u5f97\u51fa\u4e86\u7b54\u6848\u7684\u957f\u5ea6\u4ee5\u53ca\u4e00\u4e2a\u5b57\u5178\u5e8f\u4e0d\u600e\u4e48\u4f18\u7684\u89e3\uff0c\u6211\u4eec\u8fd8\u662fdfs\u679a\u4e3e\u987a\u5e8f\uff0c\u4fdd\u8bc1\u5f53\u524d\u679a\u4e3e\u5b57\u7b26\u4e32\u7684\u5b57\u5178\u5e8f\u5c0f\u4e8e\u7b54\u6848\u3002\n\n\u4e00\u4e2a\u5f3a\u526a\u679d\uff1a\u5982\u679c\u5f53\u524d\u6240\u6709\u6ca1\u6709\u9009\u7684\u4e32\u7684\u201c\u6700\u5c11\u9009\u62e9\u589e\u52a0\u91cf\u201d\u4e4b\u548c\u52a0\u4e0a\u5f53\u524d\u5b57\u7b26\u4e32\u957f\u5ea6\u5927\u4e8e\u7b54\u6848\u76f4\u63a5break\n\n\u7136\u540e\u5c31\u8fc7\u4e86\u3002\u3002\u3002\u3002\n\nmaya\uff0c\u4ee5\u540e\u8fd9\u7c7bDP\u9898\u6211\u90fd\u4f1a\u505a\u4e86\uff01\n\n```cpp\n\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<string>\n#include<vector>\n#include<cassert>\nusing namespace std;\n#define MAXN 13\n#define MAXS 55\n#define INF 0x3f3f3f3f\nchar str[20][55];\nstring res;\nint bstans=INF;\nnamespace task1\n{\n        string str[MAXN];\n        char ss[MAXN][MAXS];\n        int len[MAXN];\n        int dis[MAXN][MAXN];\n        int dp[MAXN][1<<13];\n        int rec[MAXN][1<<13][2];\n        char res[MAXN*MAXS];\n        void deal(int &x,int y)\n        {\n                if (x>y)x=y;\n        }\n        bool cmp_str(const string& s1,const string &s2)\n        {\n                for (int i=1;i<=min(s1.length(),s2.length());i++)\n                {\n                        if (s1[s1.length()-i]!=s2[s2.length()-i])return s1[s1.length()-i]<s2[s2.length()-i];\n                }\n                return false;\n        }\n        int main(int n)\n        {\n                int m,i,j,k1,k2,k;\n                int x,y;\n                for (i=0;i<n;i++)\n                {\n                        str[i]=::str[i];\n                }\n                for (j=0;j<n;j++)\n                        for (i=0;i<n;i++)\n                                if (i!=j && str[i].find(str[j])!=-1)\n                                {\n                                        swap(str[n-1],str[j]);\n                                        str[--n]=\"\";\n                                        j--;\n                                        break;\n                                }\n                sort(str,&str[n],cmp_str);\n                for (i=0;i<n;i++)\n                        len[i]=str[i].length(),strcpy(ss[i],str[i].c_str());\n                for (i=0;i<n;i++)\n                {\n                        for (j=0;j<n;j++)\n                        {\n                                if (i==j)continue;\n                                dis[i][j]=len[j];\n                                for (k1=0;k1<len[i];k1++)\n                                {\n                                        bool flag=true;\n                                        for (k2=0;k2+k1<len[i] && k2<len[j];k2++)\n                                        {\n                                                if (ss[i][k1+k2]!=ss[j][k2])\n                                                {\n                                                        flag=false;\n                                                        break;\n                                                }\n                                        }\n                                        if (flag)\n                                        {\n                                                dis[i][j]=max(0,-(len[i]-k1)+len[j]);\n                                                break;\n                                        }\n                                }\n                        }\n                }\n                memset(dp,INF,sizeof(dp));\n                for (i=0;i<n;i++)\n                        dp[i][1<<i]=len[i];\n                int ii;\n                for (ii=0;ii<n;ii++)\n                {\n                        for (k=0;k<n;k++)\n                        {\n                                for (j=0;j<(1<<n);j++)\n                                {\n                                        if (__builtin_popcount(j)!=ii)continue;\n                                        for (i=0;i<n;i++)\n                                        {\n                                                if (dp[i][j]==INF)continue;\n                                                if ((j&(1<<k))==0)\n                                                {\n                                                        if (dp[k][j|(1<<k)]>dp[i][j]+dis[i][k])\n                                                        {\n                                                                dp[k][j|(1<<k)]=dp[i][j]+dis[i][k];\n                                                                rec[k][j|(1<<k)][0]=i;\n                                                                rec[k][j|(1<<k)][1]=j;\n                                                        }\n                                                }\n                                        }\n                                }\n                        }\n                }\n                int ans=INF;\n                for (i=0;i<n;i++)\n                        if (ans>dp[i][(1<<n)-1])\n                        {\n                                ans=dp[i][(1<<n)-1];\n                                x=i;\n                                y=(1<<n)-1;\n                        }\n                vector<int> vec;\n                int xx,yy;\n                for (i=0;i<n;i++)\n                {\n                        vec.push_back(x);\n                        xx=x;yy=y;\n                        x=rec[xx][yy][0];\n                        y=rec[xx][yy][1];\n                }\n                for (int i=0;i<vec.size()/2;i++)\n                        swap(vec[i],vec[vec.size()-1-i]);\n                strcat(res,ss[vec[0]]);\n                for (i=1;i<vec.size();i++)\n                {\n                        strcat(res,ss[vec[i]]+len[vec[i]]-dis[vec[i-1]][vec[i]]);\n                }\n                ::res=res;\n                ::bstans=ans;\n        }\n}\nint cst[20][20];\nint len[20];\nbool bad[20];\nstring curs;\nint cnt;\nint n;\nbool cmp_pair(pair<char*,int> p1,pair<char*,int> p2)\n{\n        return strcmp(p1.first,p2.first)<0;\n}\nint mncst[22];\nint dfs(int now,int status,int tdis,int cnt)\n{\n        if (tdis>bstans)return 0;\n        if (curs>res)return 0;\n        int t=0,ret=1;\n        for (int i=0;i<n;i++)\n        {\n                if (!(status&(1<<i)))\n                {\n                        t+=mncst[i];\n                }\n        }\n        if (t+tdis>bstans)\n                return 0;\n        if (status==(1<<n)-1)\n        {\n                if (bstans>tdis)\n                {\n                        assert(false);\n                        res=curs;\n                        bstans=tdis;\n                }else\n                {\n                        res=min(res,string(curs));\n                }\n                return 1;\n        }\n        pair<char *,int> seq[13];\n        int tots=0;\n        for (int i=0;i<n;i++)\n                if (!(status&(1<<i)))\n                        seq[tots++]=make_pair(str[i] + len[i]-cst[now][i],i);\n        sort(seq,seq+tots,cmp_pair);\n        for (int i=0;i<tots;i++)\n        {\n                curs+=str[seq[i].second]+(len[seq[i].second]-cst[now][seq[i].second]);\n                t=dfs(seq[i].second,status|(1<<seq[i].second),tdis+cst[now][seq[i].second],cnt*2/tots);\n                cnt-=t;\n                ret+=t;\n                curs=curs.substr(0,tdis);\n        }\n        return ret;\n}\n\nint main()\n{\n        int x,y,z;\n        scanf(\"%d\",&n);\n        for (int i=0;i<n;i++)\n        {\n                scanf(\"%s\",str[i]);\n                len[i]=strlen(str[i]);\n        }\n        task1::main(n);\n        for (int i=0;i<n;i++)\n        {\n                if (bad[i])continue;\n                for (int j=0;j<n;j++)\n                {\n                        if (i==j)continue;\n                        for (int k=0;k<len[i];k++)\n                        {\n                                bool flag2=false;\n                                for (int k2=0;k+k2<len[i];k2++)\n                                {\n                                        if (str[i][k2+k]!=str[j][k2])\n                                        {\n                                                break;\n                                        }\n                                        if (k2==len[j]-1)\n                                        {\n                                                flag2=true;\n                                                break;\n                                        }\n                                }\n                                if (flag2)\n                                        bad[j]=true;\n                        }\n                }\n        }\n        x=0;\n        for (int i=0;i<n;i++)\n        {\n                if (!bad[i])\n                        strcpy(str[x++],str[i]);\n        }\n        n=x;\n        char tmp[55];\n        for (int i=0;i<n;i++)\n                for (int j=i;j<n;j++)\n                        if (string(str[i])>string(str[j]))\n                        {\n                                strcpy(tmp,str[i]);\n                                strcpy(str[i],str[j]);\n                                strcpy(str[j],tmp);\n                        }\n        for (int i=0;i<n;i++)\n                len[i]=strlen(str[i]);\n        for (int i=0;i<n;i++)\n        {\n                for (int j=0;j<n;j++)\n                {\n                        if (i==j)continue;\n                        for (int k=0;k<=len[i];k++)\n                        {\n                                bool flag=true;\n                                for (int k2=0;k2+k<len[i];k2++)\n                                {\n                                        if (str[i][k2+k]!=str[j][k2])\n                                        {\n                                                flag=false;\n                                                break;\n                                        }\n                                }\n                                if (flag)\n                                {\n                                        cst[i][j]=len[j]-(len[i]-k);\n                                        break;\n                                }\n                        }\n                }\n        }\n        for (int i=0;i<n;i++)\n        {\n                int x=INF;\n                for (int j=0;j<n;j++)\n                {\n                        if (i==j)continue;\n                        x=min(x,cst[j][i]);\n                }\n                mncst[i]=x;\n        }\n        for (int i=0;i<n;i++)\n        {\n                curs=str[i];\n                dfs(i,1<<i,len[i],100000000);\n        }\n        cout<<res<<endl;\n}\n```",
        "postTime": 1451464833,
        "uid": 10086,
        "name": "skylee",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2322 \u3010[HNOI2006]\u6700\u77ed\u6bcd\u4e32\u95ee\u9898\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u4e3a\u4ec0\u4e48\u8981\u7528AC\u81ea\u52a8\u673a\u5462\uff08wtcl  \n\u5176\u5b9e\u8fd9\u4e2a\u9898\u53ea\u9700\u8981\u9884\u5904\u7406+DP\u5c31\u53ef\u4ee5\u89e3\u51b3  \n\u9996\u5148\uff0c\u6211\u4eec\u7b97\u51fa\u6765\u90a3\u4e9b\u5b57\u7b26\u4e32\u662f\u88ab\u5305\u542b\u4e86\uff0c\u88ab\u5305\u542b\u7684\u90fd\u4e0d\u518d\u9700\u8981\u8003\u8651\u4e86  \n```cpp\nfor(int j=0;j<N;j++){\n\tbool flag1=true;\n\tfor(int i=0;i<N;i++){\n\t\tif(len[j]>len[i] || (len[i]==len[j] && i<j)) continue;\n\t\tif(i==j) continue;\n\t\tif(strstr(str[i],str[j])!=NULL){\n\t\t\tflag1=false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(flag1) useful[tot++]=j;\n}\n```\n\u7136\u540e\uff0c\u6211\u4eec\u8ba1\u7b97\u51fa\u6bcf\u4e24\u4e2a\u5b57\u7b26\u4e32\u91cd\u53e0\u4e86\u591a\u5c11 \n```\nfor(int i=0;i<tot;i++){//\u8fd9\u65f6\u53ea\u9700\u8981\u5728\u6709\u7528\u7684\u91cc\u9762\u679a\u4e3e\u5c31\u53ef\u4ee5\u4e86\n\tfor(int j=0;j<tot;j++){\n\t\tif(i==j) continue;\n\t\tfor(int l=min(len[useful[i]],len[useful[j]]);l>=0;l--){\n\t\t\tbool flag=true;\n\t\t\tfor(int pos2=0;pos2<l;pos2++){\n\t\t\t\tint pos1=len[useful[i]]-l+pos2;\n\t\t\t\tif(str[useful[i]][pos1]!=str[useful[j]][pos2]){\n\t\t\t\t\tflag=false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag){\n\t\t\t\tmatch[i][j]=l;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\u6700\u540e\u6211\u4eec\u8dd1DP  \n\u5982\u679c\u8fd9\u9053\u9898\u76f4\u63a5\u6c42\u6700\u77ed\u7684\u5b57\u7b26\u4e32\u7684\u8bdd\u76f8\u6bd4\u5927\u5bb6\u90fd\u4f1a\u505a  \n\u4ee4 $f[i][j]$ \u8868\u793a\u5df2\u7ecf\u653e\u4e86 $i$ \u8fd9\u4e9b\u5b57\u7b26\u4e32\uff0c\u6700\u540e\u4e00\u4e2a\u653e $j$ \u53f7\u5b57\u7b26\u4e32\u65f6\u7684\u6700\u77ed\u957f\u5ea6  \n\u521d\u503c\uff1a$f[i][j]=\\infty$\uff0c$f[1<<(i-1)][i]=0$  \n\u8f6c\u79fb\uff1a$f[i|(1<<(k-1))][k]=min(f[i|(1<<(k-1))][k],f[i][j]+match[j][k]$  \n\u4f46\u662f\u8fd9\u4e2a\u9898\u76ee\u8981\u6c42\u6700\u5c0f\u5b57\u5178\u5e8f\uff0c\u600e\u4e48\u529e\u5462  \n\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u518d\u5f00\u4e00\u4e2a\u6570\u7ec4\u770b\u6700\u77ed\u957f\u5ea6\u5bf9\u5e94\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32\u5c31\u597d\u4e86  \n\u4ee4 $g[i][j]$ \u8868\u793a\u5df2\u7ecf\u653e\u4e86 $i$ \u8fd9\u4e9b\u5b57\u7b26\u4e32\uff0c\u6700\u540e\u4e00\u4e2a\u653e $j$ \u53f7\u5b57\u7b26\u4e32\u65f6\u7684\u6700\u77ed\u957f\u5ea6\u5bf9\u5e94\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32\n\u7136\u540e\u5728\u5f53\u4e24\u4e2a\u76f8\u7b49\u7684\u65f6\u5019\u6bd4\u8f83\u5b57\u5178\u5e8f\u5c31\u597d\u4e86\n\nAC\u4ee3\u7801\n```cpp\n/***************************************************************************\n* File Name: LG2322.cpp\n* Author: lcy\n* Created Time: 2020\u5e7405\u670827\u65e5 \u661f\u671f\u4e09 17\u65f634\u520641\u79d2\n***************************************************************************/\n\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int MAX_N=12,MAX_LEN=52;\nint N;\nchar str[MAX_N][MAX_LEN];\nint match[MAX_N][MAX_N];\nint len[MAX_N],useful[MAX_N],tot;\nvoid init(){\n\tfor(int j=0;j<N;j++){\n\t\tbool flag1=true;\n\t\tfor(int i=0;i<N;i++){\n\t\t\tif(len[j]>len[i] || (len[i]==len[j] && i<j)) continue;\n\t\t\tif(i==j) continue;\n\t\t\tif(strstr(str[i],str[j])!=NULL){\n\t\t\t\tflag1=false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag1) useful[tot++]=j;\n\t}\n\tfor(int i=0;i<tot;i++){\n\t\tfor(int j=0;j<tot;j++){\n\t\t\tif(i==j) continue;\n\t\t\tfor(int l=min(len[useful[i]],len[useful[j]]);l>=0;l--){\n\t\t\t\tbool flag=true;\n\t\t\t\tfor(int pos2=0;pos2<l;pos2++){\n\t\t\t\t\tint pos1=len[useful[i]]-l+pos2;\n\t\t\t\t\tif(str[useful[i]][pos1]!=str[useful[j]][pos2]){\n\t\t\t\t\t\tflag=false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(flag){\n\t\t\t\t\tmatch[i][j]=l;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint f[1<<MAX_N][MAX_N];\nchar g[1<<MAX_N][MAX_N][MAX_LEN*MAX_N];\nchar ans[MAX_LEN*MAX_N];\nchar tmp[MAX_LEN*MAX_N];\n\nint main(){\n\tscanf(\"%d\",&N);\n\tfor(int i=0;i<N;i++) scanf(\"%s\",str[i]),len[i]=strlen(str[i]);\n\tinit();\n\tmemset(f,0x3f,sizeof(f));\n\tfor(int i=0;i<tot;i++){\n\t\tf[1<<i][i]=len[useful[i]];\n\t\tmemcpy(g[1<<i][i],str[useful[i]],len[useful[i]]);\n\t}\n\tfor(int s=0;s<(1<<tot);s++){\n\t\tfor(int i=0;i<tot;i++){\n\t\t\tif(!(s&(1<<i))) continue;\n\t\t\tfor(int j=0;j<tot;j++){\n\t\t\t\tif(s&(1<<j)) continue;\n\t\t\t\tmemcpy(tmp,g[s][i],f[s][i]);\n\t\t\t\tfor(int k=match[i][j];k<len[useful[j]];k++) tmp[f[s][i]+k-match[i][j]]=str[useful[j]][k];\n\t\t\t\tif(f[s|(1<<j)][j]>f[s][i]+len[useful[j]]-match[i][j]){\n\t\t\t\t\tf[s|(1<<j)][j]=f[s][i]+len[useful[j]]-match[i][j];\n\t\t\t\t\tmemcpy(g[s|(1<<j)][j],tmp,f[s|(1<<j)][j]);\n\t\t\t\t}\n\t\t\t\telse if(f[s|(1<<j)][j]==f[s][i]+len[useful[j]]-match[i][j]){\n\t\t\t\t\tfor(int k=0;k<f[s|(1<<j)][j];k++) {\n\t\t\t\t\t\tif(tmp[k]<g[s|(1<<j)][j][k]){\n\t\t\t\t\t\t\tmemcpy(g[s|(1<<j)][j],tmp,f[s|(1<<j)][j]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(tmp[k]>g[s|(1<<j)][j][k]){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint ans_length=0x3f3f3f3f;\n\tfor(int i=0;i<tot;i++){\n\t\tif(f[(1<<tot)-1][i]<ans_length){\n\t\t\tans_length=f[(1<<tot)-1][i];\n\t\t\tmemcpy(ans,g[(1<<tot)-1][i],ans_length);\n\t\t}\n\t\telse if(f[(1<<tot)-1][i]==ans_length){\n\t\t\tfor(int j=0;j<ans_length;j++) {\n\t\t\t\tif(ans[j]<g[(1<<tot)-1][i][j]){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if(ans[j]>g[(1<<tot)-1][i][j]){\n\t\t\t\t\tmemcpy(ans,g[(1<<tot)-1][i],ans_length);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(ans_length>0x3f3f0000){\n\t\tputs(\"\");\n\t\treturn 0;\n\t}\n\tans[ans_length]='\\0';\n\tprintf(\"%s\\n\",ans);\n    return 0;\t\n}\n\n```\n",
        "postTime": 1590665049,
        "uid": 55812,
        "name": "_lcy_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2322 \u3010[HNOI2006]\u6700\u77ed\u6bcd\u4e32\u95ee\u9898\u3011"
    },
    {
        "content": "\u672c\u6765\u60f3\u6253$dfs$\u7684\uff0c\u4f46\u72b6\u6001\u5b9e\u5728\u4e0d\u597d\u50a8\u5b58\u5c31\u53ea\u597d\u6253$bfs$\u4e86\u3002\n\n\u5927\u610f\uff1a\u8fd9\u9053\u9898\u4e0e[P2444 [POI2000]\u75c5\u6bd2](https://www.luogu.org/problem/P2444)\u6b63\u597d\u76f8\u53cd\uff0c\u662f\u8ba9\u4f60\u6c42\u4e00\u4e2a\u6700\u5c0f\u7684\u6587\u672c\u4e32\u4f7f\u5176\u5305\u542b\u6240\u6709\u7684\u6a21\u5f0f\u4e32\n\n\u601d\u8def\uff1a\u5148\u5904\u7406\u51fa$trie$\u6811\u4e0e$fail$\u6307\u9488\uff0c\u56e0\u4e3a\u662f\u6c42\u4e00\u4e2a\u5305\u542b\u6240\u6709\u6a21\u5f0f\u4e32\u7684\u6587\u672c\u4e32\uff0c\u4f46\u5728\u5224\u65ad\u662f\u4e0d\u597d\u5224\u65ad\u7ed3\u675f\u72b6\u6001\uff0c\u5c31\u8bbe\u4e00\u4e2a$state$\u6570\u7ec4\uff0c\u5e76\u5c06\u6bcf\u4e2a\u4e32\u5c3e\u7684\u503c\u8bbe\u4e3a1<<(Num-1\uff09(\u6b64\u5904\u8981\u7528\u6216\u56e0\u4e3a\u4f1a\u6709\u91cd\u590d)\u5e76\u5728\u641c\u7684\u65f6\u5019\u7528$st$\u6216\u4e0a$state[now]$ \u5f53$st=(1<<n)-1$\u7684\u65f6\u5019\u5c31\u627e\u51fa\u7b54\u6848\u4e86\u3002\n\n\u4f46\u8f93\u51fa\u8fd8\u662f\u633a\u9ebb\u70e6\u7684\uff0c\u6211\u4eec\u5c31\u8bbe\u4e00\u4e2a$fa$\u548c$ans$.$fa$\u5c31\u662f\u8bb0\u5f55\u8fd9\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684\u4e0a\u4e2a\u5b57\u7b26\uff08\u76f8\u5f53\u4e8e\u5efa\u4e00\u9897\u7b54\u6848\u6811\uff09 $ans$\u8bb0\u5f55\u7b54\u6848\uff0c\u8f93\u51fa\u65f6\u76f4\u63a5\u4ece\u53f6\u8282\u70b9\u901a\u8fc7\u8df3$fa$\u8f93\u51fa\u5c31$ok$\u4e86\n\n\u9700\u8981\u6ce8\u610f\u7684\u70b9\u5982\u4e0b\n#### 1.\u8bb0\u5f97\u8bb0\u641c\u907f\u514d\u51fa\u73b0\u91cd\u590d\u60c5\u51b5\n#### 2.\u8bb0\u5f97\u5904\u7406\u91cd\u590d\u5b57\u7b26\u4e32\u7684\u60c5\u51b5\n#### 3.\u8bb0\u5f97\u8f93\u51fa\u65f6\u8981\u5012\u5e8f\u8f93\u51fa\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define mn 605\nint fail[mn],trie[mn][26],state[mn],ans[6000005],fa[6000005];\nbool vis[mn][10005];\nint tot=0;\nint n,maxn;\nchar s[mn];\nvoid make_trie(char s[605],int Num)\n{\n\tint now=0,len=strlen(s);\n\tfor(int i=0;i<len;i++)\n\t{\n\t\tint next=s[i]-'A';\n\t\tif(!trie[now][next])\n\t\t{\n\t\t\ttrie[now][next]=++tot;\n\t\t}\n\t\tnow=trie[now][next];\n\t}\n\tstate[now]|=(1<<(Num-1));\n   //\u8fd9\u91cc\u7528\u6216\u907f\u514d\u88ab\u8986\u76d6\n}\nvoid getfail()\n{\n\tqueue<int> q;\n\tfor(int i=0;i<26;i++)\n\t{\n\t\tif(trie[0][i])\n\t\t{\n\t\t\tfail[trie[0][i]]=0;\n\t\t\tq.push(trie[0][i]);\n\t\t}\n\t}\n\tint now=0;\n\twhile(!q.empty())\n\t{\n\t\tnow=q.front();\n\t\tq.pop();\n\t\tfor(int i=0;i<26;i++)\n\t\t{\n\t\t\tif(trie[now][i])\n\t\t\t{\n\t\t\t\tfail[trie[now][i]]=trie[fail[now]][i];\n\t\t\t\tstate[trie[now][i]]|=state[trie[fail[now]][i]];\n           //\u8fd9\u91cc\u4e5f\u8981\u7528\u6216\uff0c\u540c\u6837\u662f\u907f\u514d\u8986\u76d6\u6216\u591a\u52a0\n\t\t\t\tq.push(trie[now][i]); \n\t\t\t\t\n\t\t\t}else\n\t\t\t{\n\t\t\t\ttrie[now][i]=trie[fail[now]][i];\n\t\t\t}\n\t\t}\n\t}\n}\nvoid dfs()\n{\n\tchar s[2005];//\u50a8\u5b58\u6700\u7ec8\u7b54\u6848\u7684\u6570\u7ec4\n\tqueue<int> q1,q2;//q1\u8bb0\u5f55now q2\u8bb0\u5f55state\u3002\n\tq1.push(0),q2.push(0);\n\tint t=0,cnt=0,qaq=0;\n\twhile(!q1.empty())\n\t{\n\t\tint now=q1.front(),st=q2.front();\n\t\tq1.pop(),q2.pop();\n\t\tif(st==(1<<n)-1)//\u5982\u679c\u5f53\u524d\u5305\u542b\u4e86\u6240\u6709\u6a21\u5f0f\u4e32 \n\t\t{\n\t\t\twhile(t)//\u56e0\u4e3a\u662f\u7b54\u6848\u6811\uff0c\u6240\u4ee5\u4e00\u76f4\u8df3\u5230\u6839\u8282\u70b9\u5c31\u662f\u7b54\u6848\n\t\t\t{\n\t\t\t\ts[++cnt]=ans[t];\n\t\t\t\tt=fa[t];//\u627e\u5230\u7b54\u6848\u4e32\u5e76\u8d4b\u503c \n\t\t\t}\n\t\t\tfor(int i=cnt;i>=1;i--)\n\t\t\t{\n\t\t\t\tprintf(\"%c\",s[i]+'A');//\u4f9d\u6b21\u8f93\u51fa \n\t\t\t}\n\t\t\texit(0);//\u5f3a\u5236\u7ed3\u675f\n\t\t}\n\t\tfor(int i=0;i<26;i++)\n\t\t{\n\t\t\tif(!vis[trie[now][i]][st|state[trie[now][i]]])\n\t\t\t{\n\t\t\t\tvis[trie[now][i]][st|state[trie[now][i]]]=1;//\u9632\u6b62\u91cd\u590d\u627e\n\t\t\t\tfa[++qaq]=t;\n\t\t\t\tans[qaq]=i;\n\t\t\t\tq1.push(trie[now][i]);\n\t\t\t\tq2.push(st|state[trie[now][i]]);\n\t\t\t}\n\t\t}\n\t\t++t;\n\t} \n}\nint main()\n{\n//\tfreopen(\"1.in\",\"r\",stdin);\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",s);\n\t\tmake_trie(s,i);\n\t}\n\tgetfail();\n\tbfs();\n\treturn 0;\n}\n```\n",
        "postTime": 1565235448,
        "uid": 53852,
        "name": "\u5f26\u5dfb\u3053\u3053\u308d",
        "ccfLevel": 0,
        "title": "[HNOI2006]\u6700\u77ed\u6bcd\u4e32\u95ee\u9898"
    },
    {
        "content": "\u5176\u5b9e\u6211\u5199\u9ebb\u70e6\u4e86\u3002\u3002\u3002\n\n\n\u8bbedp[i][j]\u8868\u793a\u5728i\u8fd9\u4e2a\u72b6\u6001\u4e0b\uff0c\u6211\u4eec\u8fde\u63a5\u8fd9\u4e9b\u5b57\u7b26\u4e32\u4e14\u4ee5\u7b2cj\u4e2a\u5b57\u7b26\u4e32\u4e3a\u7ed3\u5c3e\u6240\u5f62\u6210\u7684\u5b57\u7b26\u4e32\u6700\u77ed\u4e3a\u5c11\uff0cg[i][j]\u50a8\u5b58\u8fd9\u4e2a\u72b6\u6001\u4e0b\u7684\u5b57\u7b26\u4e32\u662f\u4ec0\u4e48\u3002bin[i]=2^i\uff1b\n\n\n\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662fdp[i|bin[k]][j]=min(dp[i|bin[k]][j],dp[i][j]+(\u628a\u7b2ck\u4e2a\u5b57\u7b26\u4e32\u8fde\u5230\u7b2cj\u4e2a\u5b57\u7b26\u4e32\u540e\u9762\u6240\u4f1a\u589e\u52a0\u7684\u957f\u5ea6));\uff08j\u662f\u6211\u4eec\u679a\u4e3e\u7684i\u72b6\u6001\u4e2d\u5df2\u8fde\u63a5\u7684\u5b57\u7b26\u4e32\uff0ck\u662fi\u72b6\u6001\u4e2d\u8fd8\u672a\u8fde\u63a5\u7684\u5b57\u7b26\u4e32\uff09\n\n\u5f88\u660e\u663e\uff0c\u90a3\u4e9b\u8fde\u63a5\u4efb\u610f\u4e24\u4e2a\u5b57\u7b26\u4e32\u6240\u8981\u589e\u52a0\u7684\u957f\u5ea6\u53ef\u4ee5\u4e8b\u5148\u5904\u7406\u51fa\u6765\u3002g\u6570\u7ec4\u7684\u5904\u7406\u4e5f\u5dee\u4e0d\u591a\uff0c\u53ea\u4e0d\u8fc7\u52a0\u7684\u662f\u628a\u7b2ck\u4e2a\u5b57\u7b26\u4e32\u8fde\u5230\u7b2cj\u4e2a\u5b57\u7b26\u4e32\u540e\u9762\u6240\u4f1a\u589e\u52a0\u7684\u5b57\u7b26\u4e32\uff08\u9664\u53bb\u516c\u5171\u90e8\u5206\uff09\u3002\n\n\n\u63a5\u4e0b\u6765\u8bf4\u4e00\u4e9b\u5c0f\u7ec6\u8282\uff1a\n\n\n1.\u9996\u5148\uff0c\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5176\u4ed6\u4e32\u7684\u5b50\u4e32\u7684\u8bdd\uff0c\u5c31\u76f4\u63a5\u628a\u5b83\u9664\u53bb\uff0c\u6211\u5728\u7a0b\u5e8f\u4e2d\u5224\u65ad\u5b50\u4e32\u662f\u7528kmp\u7684\uff09\uff0c\u4e3a\u4e86\u7ec3\u4e60\u4e00\u4e0b\uff0c\u5176\u5b9e\u76f4\u63a5\u679a\u4e3e\u5c31\u597d\u4e86\u3002\n\n\n2.\u5176\u6b21\uff0c\u6211\u4eec\u8981\u600e\u4e48\u5224\u65ad\u4e24\u4e2a\u5b57\u4e32\u76f8\u8fde\u7684\u516c\u5171\u90e8\u5206\u6700\u957f\u662f\u591a\u5c11\u5462\uff0c\u5176\u5b9e\u662fO\uff08n\uff09\u626b\u4e00\u904d\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u91cc\u9762\u8be6\u7ec6\u5199\u3002\n\n\n\u5514\uff0c\u5176\u4ed6\u7ec6\u8282\u7a0b\u5e8f\u91cc\u5199\u3002\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<string>\n#define maxx 100000000\nusing namespace std;\nint ans,len[30][30],dp[6009][30],n,next[30],bin[30];\nstring a[30],b[30],g[6009][30],len2[30][30];\nbool check(string&s1,string&s2)\n//\u68c0\u67e5s1\u662f\u4e0d\u662fs2\u7684\u5b50\u4e32\uff0c\u6211\u7528\u4e86kmp\uff0c\u8fd8\u662f\u5efa\u8bae\u679a\u4e3e\u3002\n{\n  int l1=s1.size(),l2=s2.size();\n  if (l1>l2) return false;\n  int now=-1; next[0]=-1;\n  for (int i=1;i<l1;i++)\n  {\n      while ((now!=-1)&&(s1[now+1]!=s1[i])) now=next[now];\n      if (s1[now+1]==s1[i]) now++;\n      next[i]=now;\n  }\n  now=-1;\n  for (int i=0;i<l2;i++)\n  {\n      while ((now!=-1)&&(s2[i]!=s1[now+1])) now=next[now];\n      if (s2[i]==s1[now+1]) now++;\n      if (now==l1-1) return true;\n  }\n  return false;\n}\nvoid calc(int x,int y)\n//\u8ba1\u7b97\u7b2cx\u548c\u7b2cy\u7684\u5b50\u4e32\uff0c\u8fde\u63a5\u4ed6\u4eec\u4f1a\u589e\u52a0\u7684\u957f\u5ea6\uff0c\u548c\u589e\u52a0\u7684\u5b57\u7b26\u4e32\n{\n  string s1=a[x],s2=a[y];\n  int tot=0,l1=s1.size(),l2=s2.size();\n  int h1=l1-1,h2=0;\n  string p1,p2;\n  while ((h1>=0)&&(h2<l2))\n  {\n      p1=s1[h1--]+p1; p2=p2+s2[h2++];\n      if (p1==p2) tot=max(tot,h2);\n  }\n  len[x][y]=l2-tot;\n  for (int i=tot;i<l2;i++) len2[x][y]=len2[x][y]+s2[i];\n//\u8fd9\u4e2a\u662f\u5982\u679c\u8fde\u63a5\u7740\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u8bdd\uff0c\u5728\u7b2cX\u4e2a\u5b57\u7b26\u4e32\u540e\u9762\u4f1a\u589e\u52a0\u7684\u5b57\u7b26\u4e32\u662f\u591a\u5c11\n}\nint main()\n{\n  scanf(\"%d\",&n);\n  char s[100];\n  for (int i=1;i<=n;i++) \n  {\n    scanf(\"%s\",s);\n    string t;\n    for (int j=0;j<strlen(s);j++) t=t+s[j];\n    b[i]=t; \n  }\n  int cnt=0;\n  for (int i=1;i<=n;i++)\n  {\n   bool fg=false;\n   for (int j=1;j<=n;j++)\n   if ((i!=j)&&(check(b[i],b[j]))) \n   {\n        fg=true;\n        break;\n   }\n   if (!fg) a[++cnt]=b[i];\n  }\n//\u5220\u53bb\u88ab\u522b\u4eba\u5305\u542b\u7684\u5b57\u7b26\u4e32\n  n=cnt;\n  if (n==0) cout<<b[1]<<endl;//\u5982\u679c\u5b57\u7b26\u4e32\u5168\u90e8\u76f8\u540c\u7684\u8bdd\uff0c\u5c31\u4e0d\u7528\u8ba1\u7b97\u4e86\n  else\n  {\n   for (int i=1;i<=n;i++)\n   for (int j=1;j<=n;j++)\n   if (i!=j) calc(i,j);\n//\u8ba1\u7b97\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u540e\u4f1a\u589e\u52a0\u7684\u90e8\u5206\n   bin[0]=1;\n   for (int i=1;i<=n;i++) bin[i]=bin[i-1]*2;\n   for (int i=0;i<bin[n];i++)\n   for (int j=1;j<=n;j++) dp[i][j]=maxx;\n   for (int i=1;i<=n;i++) \n   {\n    dp[bin[i-1]][i]=a[i].size();\n    g[bin[i-1]][i]=a[i];\n   } \n//dp\n   for (int i=0;i<bin[n];i++)\n   for (int j=1;j<=n;j++)\n   if ((i&bin[j-1])&&(dp[i][j]!=maxx))\n   for (int k=1;k<=n;k++)\n   if (!(i&bin[k-1]))\n   {\n//\u4ee5\u4e0b\u7684if\u8bed\u53e5\u662f\u4e3a\u4e86\u5b57\u5178\u5e8f\n      if (dp[i|bin[k-1]][k]==dp[i][j]+len[j][k])\n    g[i|bin[k-1]][k]=min(g[i|bin[k-1]][k],g[i][j]+len2[j][k]);\n    if (dp[i|bin[k-1]][k]>dp[i][j]+len[j][k])\n    {\n      dp[i|bin[k-1]][k]=dp[i][j]+len[j][k];\n      g[i|bin[k-1]][k]=g[i][j]+len2[j][k];\n    }\n   }\n   ans=maxx; string ans2;\n//\u7edf\u8ba1\u7b54\u6848\n   for (int i=1;i<=n;i++)\n   if (dp[bin[n]-1][i]<ans)\n   {\n      ans=dp[bin[n]-1][i];\n      ans2=g[bin[n]-1][i];\n   }\n   else if (dp[bin[n]-1][i]==ans)\n   ans2=min(ans2,g[bin[n]-1][i]);\n   cout<<ans2<<endl;\n  }\n  return 0;\n}\n\n```",
        "postTime": 1511948891,
        "uid": 21621,
        "name": "nihanchu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2322 \u3010[HNOI2006]\u6700\u77ed\u6bcd\u4e32\u95ee\u9898\u3011"
    }
]