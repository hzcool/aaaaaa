[
    {
        "content": "**\u8fd9\u662f\u4e00\u4e2a\u4e0d\u9700\u8981$STL$\u7684\u65b9\u6cd5**  \n\u56e0\u4e3a\u6bcf\u4e2a\u56e0\u5b50\u90fd\u5f88\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u53ef\u80fd\u76f4\u63a5\u4e58\u8d77\u6765\u518d\u9664~~\uff08\u8fd9\u4e0d\u662f\u5e9f\u8bdd\uff09~~\uff0c\u800c\u9898\u76ee\u4fdd\u8bc1\u5bf9\u4e8e\u4e00\u4e2a\u6570\u5b57\uff0c\u5176\u5728$b_i$\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u4e0d\u591a\u4e8e\u5728$a_i$\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u8981\u628a$a$\u4e2d\u7684\u6570\u7528$b$\u91cc\u7684\u7ea6\u5206\u6389\uff0c\u800c\u4f17\u6240\u5468\u77e5\uff0c$a\\land a=0$\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u5229\u7528**\u5f02\u6216**\u6765\u7ea6\u5206\uff0c\u4e3b\u8981\u7ec6\u8282\u770b\u4ee3\u7801\u8bf4\u5427\u3002  \n```cpp\n#include<cstdio>\nusing namespace std;\ntypedef long long ll;\nll re()//\u5feb\u8bfb\n{\n\tll x=0;\n\tchar c=getchar();\n\tbool p=0;\n\tfor(;c<'0'||c>'9';c=getchar())\n\t\tp=(c=='-'||p)?1:0;\n\tfor(;c>='0'&&c<='9';c=getchar())\n\t\tx=x*10+(c-'0');\n\treturn p?-x:x;\n}\nbool judge(ll x)//\u5224\u65ad\u662f\u5426\u662f\u8d28\u6570\n{\n\tint i;\n\tif(!x||x==1)//\u7279\u52240\u548c1\n\t\treturn false;\n\tfor(i=2;1LL*i*i<=x;i++)//\u6734\u7d20\u6839\u53f7n\u8bd5\u9664\u6cd5\u5224\u65ad\n\t\tif(!(x%i))\n\t\t\treturn false;\n\treturn true;\n}\nint main()\n{\n\tint i,n,m,t,s;\n\tll x,y;\n\tt=re();\n\twhile(t--)//\u591a\u7ec4\u6570\u636e\n\t{\n\t\tx=y=s=0;//\u521d\u59cb\u5316\u4e3a0\n\t\tn=re();\n\t\tm=re();\n\t\tfor(i=1;i<=n+m;i++)//\u56e0\u4e3a\u5f02\u6216\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u6b21\u6027\u8bfb\u5b8c\u5e76\u5f02\u6216\n\t\t{\n\t\t\ty=re();\n\t\t\tif(y!=1)//\u6ce8\u610f\uff01\u56e0\u4e3a\u65e0\u8bba\u6709\u591a\u5c11\u4e2a1\uff0c\u90fd\u662f\u4e0d\u5f71\u54cd\u7ed3\u679c\u7684\uff0c\u6240\u4ee5\u5728\u5f02\u6216\u65f6\u8981\u628a1\u6392\u9664\n\t\t\t{\n\t\t\t\ti>n?s--:s++;//\u663e\u7136\uff08\u9664\u53bb1\u540e\uff09\u53ea\u6709\u5f53a\u91cc\u7684\u6570\u6bd4b\u91cc\u7684\u6570\u591a\u4e00\u4e2a\u65f6\u624d\u53ef\u80fd\u662f\u8d28\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u8fc7\u7edf\u8ba1\u6765\u5224\u65ad\n\t\t\t\tx^=y;//\u5c06\u6240\u6709\u6570\u5f02\u6216\u8d77\u6765\uff0c\u5982\u679c\u6ee1\u8db3\u4e0a\u8ff0\u201c\u591a\u4e00\u4e2a\u201d\u7684\u6761\u4ef6\uff0c\u5219\u5f02\u6216\u5b8c\u6240\u5269\u4e0b\u7684\u5fc5\u662f\u6ca1\u6709\u88ab\u7ea6\u5206\u7684\u6570\n\t\t\t}\n\t\t}\n\t\tif(s==1&&judge(x))//\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u4e0a\u8ff0\u201c\u591a\u4e00\u4e2a\u201d\u7684\u6761\u4ef6\uff0c\u4e14\u8fd9\u4e2a\u5269\u4f59\u7684\u6570\u662f\u5426\u8d28\u6570\n\t\t\tprintf(\"YES\\n\");\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n```\n\u53e6\u5916\uff0c\u6211\u7528\u4e0b\u9762\u8fd9\u4e2a\u6570\u636e\uff0c\u5c06\u4e00\u4e2a\u9898\u89e3\u5361\u6389\u4e86  \n```cpp\n1\n5 2\n1 1 1 2 3\n1 2\n\n\u6b63\u786e\u8f93\u51fa\uff1aYES\n```",
        "postTime": 1531742874,
        "uid": 60181,
        "name": "Iowa_BattleShip",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4752 \u3010Divided Prime\u3011"
    },
    {
        "content": "\u7531\u4e8e\u4fdd\u8bc1\u4e86\u4efb\u4f55\u4e00\u4e2a\u6570\u5b57\u5728 $b$ \u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u4e0d\u5927\u4e8e\u5728 $a$ \u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a $b$ \u4e2d\u7684\u6570\u5b57\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5176\u5728 $a$ \u4e2d\u5220\u53bb\u5373\u53ef\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u5224\u65ad $a$ \u5269\u4e0b\u7684\u6570\u5b57\u662f\u5426\u4e3a\u8d28\u6570\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u68c0\u67e5\u6bcf\u4e2a\u6570\u5b57\u7531\u51e0\u4e2a\u8d28\u6570\u7ec4\u6210\u5373\u53ef\u3002\n\n\u5728\u5224\u65ad\u8d28\u6570\u65f6\uff0c\u53d1\u73b0\u5f53\u524d\u5df2\u7ecf\u6709\u4e24\u4e2a\u6216\u4ee5\u4e0a\u7684\u8d28\u6570\u4e86\u9700\u8981\u9a6c\u4e0a\u9000\u51fa\uff0c\u5426\u5219\u6709\u53ef\u80fd\u4f1a\u9020\u6210TLE\u3002\n\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u7531 $0$ \u4e2a\u8d28\u6570\u7ec4\u6210\u7684\u6570\u5b57\uff08\u5373 $1$ \uff09\u4e5f\u4e0d\u662f\u8d28\u6570\u3002\n\n\u590d\u6742\u5ea6 $O(n\\ log\\ n + \\sqrt a_i )$\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define MAXN 100005\nusing namespace std;\n\tint T,n,m,cnt;\n\tll a[MAXN],b[MAXN];\n\tbool u[MAXN];\nll inline read()\n{\n    ll x=0;char ch=getchar();\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x;\n}\nint check(int x)\n{\n\tfor (int i=2,to=sqrt(x);i<=to;i++)\n\t\tif (x%i==0) return 2;\n\treturn 1;\n}\nbool cmp(int x,int y)\n{\n\treturn x>y;\n}\nint main()\n{\n\tT=read();\n\twhile (T--)\n\t{\n\t\tmemset(u,0,sizeof(u));\n\t\tn=read(),m=read();\n\t\tfor (int i=1;i<=n;i++)\n\t\t\ta[i]=read();\n\t\tsort(a+1,a+n+1,cmp);\n\t\tfor (int i=1;i<=m;i++)\n\t\t\tb[i]=read();\n\t\tsort(b+1,b+m+1,cmp);\n\t\tfor (int i=1,j=1;i<=m;i++)\n\t\t{\n\t\t\twhile (b[i]<a[j]) j++;\n\t\t\tu[j]=true;j++;\n\t\t}\n\t\tcnt=0;\n\t\tfor (int i=1;i<=n;i++)\n\t\t\tif (!u[i])\n\t\t\t{\n\t\t\t\tif (a[i]==1) continue;\n\t\t\t\tcnt+=check(a[i]);\n\t\t\t\tif (cnt>1) break;\n\t\t\t}\n\t\tputs(cnt==1?\"YES\":\"NO\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1531581427,
        "uid": 9433,
        "name": "FlierKing",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4752 \u3010Divided Prime\u3011"
    },
    {
        "content": "# \u9898\u76ee\uff1aP4752 Divided Prime 2018 \u6d1b\u8c377\u6708\u6708\u8d5b T1\n## \u9898\u76ee\u63cf\u8ff0\n\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5b57 $A$ , \u8fd9\u4e2a$A$\u7531 $a_1$,$a_2$...$a_N$ \u76f8\u4e58\u5f97\u5230\u3002  \n\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5b57 $B$ , \u8fd9\u4e2a$B$\u7531 $b_1$,$b_2$...$b_N$ \u76f8\u4e58\u5f97\u5230\u3002  \n\u5982\u679c$\\frac{A}{B}$\u662f\u4e00\u4e2a\u8d28\u6570\uff0c\u8bf7\u8f93\u51fa $YES$ , \u5426\u5219\u8f93\u51fa $NO$\u3002  \n**\u4fdd\u8bc1\u5bf9\u4e8e\u4e00\u4e2a\u6570\u5b57\uff0c\u5176\u5728** $b_i$ **\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u4e0d\u591a\u4e8e\u4e8e** $a_i$ **\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002**  \n## \u5206\u6790\n$1$ . \u5bf9\u4e8e\u6570\u636e\u8303\u56f4$1\u2264a_i$,$b_i\u226410^{12}$, \u5f88\u660e\u663e\u4e0d\u80fd\u66b4\u529b\u4e58\u79ef\u6216\u7528\u6570\u7ec4\u50a8\u5b58\u51fa\u73b0\u6b21\u6570\uff0c\u90fd\u4f1a\u8d85\u8fc7$long \\ long$\u3002( \u9664\u975e\u4f60\u60f3\u9ad8\u7cbe , \u4f46\u4f1a\u52a0\u4e0a\u590d\u6742\u5ea6 )  \n$2$ . \u6ce8\u610f\u9898\u76ee (\u9ed1\u4f53\u90e8\u5206) , \u611f\u89c9\u8fd9\u53e5\u8bdd\u6709\u6240\u7384\u673a\uff0c \u62ff\u51fa\u7b14\u597d\u597d\u6a21\u62df\u4e00\u4e0b\u3002  \n$3$ . \u6709\u4e86\u57fa\u672c\u601d\u8def\uff0c\u8981\u4f18\u5316\uff0c\u8fd8\u8981\u5c3d\u91cf\u907f\u5f00\u7b97\u51fa\u4e58\u79ef\uff0c\u5426\u5219\u4f1aTLE\u3002  \n## \u89e3\u7b54\n$1$ .\u4ed4\u7ec6\u63a8\u7406\u4e00\u6ce2\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5f53 $n$ \u7b49\u4e8e $m$\u65f6\uff0c$a$\u548c $b$ \u6570\u7ec4(\u5728\u6ca1$1$\u7684\u60c5\u51b5\u4e0b )\u7edd\u5bf9\u4e0d\u53ef\u80fd\u6ee1\u8db3\u76f8\u9664\u4e3a\u8d28\u6570\uff0c\u5373\u4f7f\u5f53\u4e24\u8005\u5b8c\u5168\u76f8\u540c\u65f6\u90fd\u53ea\u80fd\u5f97\u5230\u975e\u8d28\u975e\u5408\u7684 $1$ ; \u5f53 $n$\u6bd4 $m$\u5927$2$\u53ca\u4ee5\u4e0a\u65f6\uff0c\u5373\u4f7f $a$\uff0c$b$\u524d $n$\u9879\u5b8c\u5168\u76f8\u540c\u65f6\uff08\u5728\u6ca1$1$\u7684\u60c5\u51b5\u4e0b),\u5269\u4f59\u4e24\u4e2a\u6570\uff0c\u4e58\u79ef\u660e\u663e\u4e3a\u5408\u6570,\u5373\uff1a    \n$\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ n=m+1$ \u65f6\u7b26\u5408$YES$\u6761\u4ef6.    \n$2$ .\u6211\u4eec\u8fd8\u9700\u8981\u6bd4\u8f83\u4e24\u6570\u7ec4 \uff0c\u5c06\u5b83\u4eec\u5347\u5e8f\u6392\u5217\uff0c\u8bbe\u5b9a $l$ , $r$\u4e24\u6570\u7ec4\u7684\u6307\u9488 \uff0c\u5f53$a_l=b_r$\u65f6,\u4e0a\u4e0b\u53ef\u4ee5\u6d88\u53bb\uff0c\u7ee7\u7eed\u5411\u540e\u79fb\u52a8\u6307\u9488\u76f4\u5230\u4e0a\u4e0b\u4e0d\u76f8\u7b49\uff0c\u9700\u8981\u5bfb\u627e\u65b0\u7684$a_l$,\u4f7f\u91cd\u65b0\u76f8\u7b49\uff0c\u5c06$l$\u6307\u9488\u5355\u72ec\u5411\u540e\u79fb\u52a8 \uff0c\u6ce8\u610f\u5224\u5b9a\u8303\u56f4\uff0c\u4e0d\u8981\u8d8a\u5230 \u201cTLE\u9886\u57df\u201d\uff08\u56e0\u4e3a\u90a3\u91cc\u90fd\u662f$0$\uff0c\u4e0a\u4e0b\u76f8\u7b49\uff0c\u505c\u4e0d\u4e0b\u6765\uff09,\u5373\uff1a  \n$\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ if(a_l=a_i)then\\ inc(l\\ and\\ r)$  \n$\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ else\\ inc(l)\\ ...$  \n$3$ .\u5982\u4f55\u907f\u514dTLE\u5462\uff0c\u5176\u6838\u5fc3\u662f\u63d0\u524d\u56e0\u67d0\u4e9b\u5145\u8981\u6761\u4ef6\u8df3\u51fa\u5faa\u73af\uff0c\u5f53\u6211\u4eec\u7528 $sum$\u8bb0\u5f55\u4e0b $a$ \u6570\u7ec4\u4e2d\u6bd4 $b $\u591a\u51fa\u6570\u5b57\u7684\u4e58\u79ef\uff0c\u601d\u8003\u53d1\u73b0 \uff0c\u5982\u679c $sum$ \u5df2\u7ecf\u662f\u5408\u6570\u4e86\uff08\u6216\u8005\u8bf4\u662f\u591a\u51fa\u4e86\u4e24\u4e2a\u4ee5\u4e0a\uff0c\u8fd9\u662f\u5927\u591a\u6570\u4eba\u7684\u601d\u8def \uff09\u5c31\u53ef\u4ee5\u8df3\u51fa\u5faa\u73af\u6253\u51fa $NO$\uff0c\u5373\uff1a\n$\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ sum=sum\\times a_l$  \n$\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ if(sum\\ not\\ a\\ prime\\ or\\ cnt=2)\\ break$  \n$4$ .\u5f53$r=m $\u65f6\uff0c\u6700\u574f\u7684\u60c5\u51b5\u662f\u4e24\u6570\u7ec4\u4e4b\u524d\u5b8c\u5168\u76f8\u540c \uff0c$a$ \u6570\u7ec4\u53ef\u80fd\u8fd8\u5dee\u6700\u540e\u4e00\u9879\u6ca1\u6709\u5224\u5b9a\u662f\u5426\u4e3a\u8d28\u6570\uff0c\u5c31\u9700\u8981\u5224\u5b9a\u4e00\u4e0b\uff0c\u5728\u7edf\u8ba1\u65f6\u4e58\u4e0a\u5373\u53ef\u3002  \n$5$ .\u5982\u679c\u8fd9\u4e00\u5207\u4f60\u90fd\u6ca1\u542c\u61c2\uff0c\u6211\u6a21\u62df\u7ed9\u4f60\u770b\uff1a  \n\u6837\u4f8b\u4e2d$a={5,7,7,7}$  , $b={5,7}$;  \n$5,7,7,    ->7,7->7(left)$  \n$5,7\\ \\ \\ \\ \\ \\  ->5\\  \\ \\ ->NO$  \n\u4e0a\u4ee3\u7801\uff0c\u5176\u4e2d\u6709\u7ec6\u8282\u95ee\u9898\uff1a\n```cpp\ninline bool judge(LL x)//\u5224\u662f\u5426\u4e3a\u8d28\u6570\u3002\n{\n  if(x==1||x==0)return false;\n  if(x==2)return true;\n  for(int i=2;i<=sqrt(x);i++)\n    if(x%i==0)return false;\n  return true;\n}\nLL t,n,m,l,r,sum,a[N],b[N],flag_1,flag_2;//sum:\u8bb0\u4e0b\u4e58\u79ef\uff0cflag_1:\u5224\u65ad\u662f\u5426\u662f\u89e3\u7b544\u7684\u60c5\u51b5\u3002\ninline void inti()//\u591a\u7ec4\u6570\u636e\uff0c\u4e0d\u8981\u5fd8\u8bb0\u3002\n{\n  memset(a,0,sizeof(a));\n  memset(b,0,sizeof(b));\n  sum=l=r=1;\n  flag_1=flag_2=false;\n}\nint main()\n{\n  t=read();\n  while(t--)\n  {\n    inti();\n    n=read(),m=read();\n    for(int i=1;i<=n;i++)a[i]=read();\n    for(int i=1;i<=m;i++)b[i]=read();\n    if(n-m>=2||n==m){printf(\"NO\\n\");continue;}//\u89e3\u7b541\u7684\u60c5\u51b5\uff08\u5176\u5b9e\u6211\u5077\u61d2\u4e86\uff0c\u6ca1\u6709\u5224\u5b9a\u6570\u7ec4\u4e2d\u67091\u7684\u60c5\u51b5\u3002\n    sort(a+1,a+n+1);\n    sort(b+1,b+m+1);\n    while(true)\n    {\n      if(l>n)break;\n      else if(r>m){flag_1=true;break;}\n      if(a[l]==b[r]){l++,r++;continue;}\n      else sum*=a[l],l++;//\u5176\u5b9e\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u6570\u7ec4\u4e2d\u67091\u7684\u60c5\u51b5\uff0ccnt\u8bb0\u5f55\u6b21\u6570\u5c31\u65e0\u6cd5\u907f\u514d\uff0c\u8fd8\u8981\u5199\u5f88\u591a\u4ee3\u7801\u6765\u5224\u5b9a\u3002\n      if(!judge(sum)){flag_2=true;break;}//\u89e3\u7b543\u7684\u60c5\u51b5\u3002\n    }\n    if(flag_1)sum*=a[n];//\u5faa\u73af\u5916\u522b\u5fd8\u4e86\u4e58\u4e0a\u6700\u540e\u4e00\u9879\u3002\n    if(!judge(sum)||flag_2)printf(\"NO\\n\");\n    else printf(\"YES\\n\");//\u6ce8\u610f\uff0c\u5927\u5199\uff0c\u5927\u5199\uff0c\u5927\u5199\uff0c\u6211\u88ab\u5751\u4e86\u3002\n  }\n  return 0;\n}\n```\n## \u603b\u7ed3  \n$1$ .\u9762\u5bf9\u8fd9\u79cd\u5927\u6570\u636e\uff0c\u4e0d\u8981\u5934\u94c1\uff0c\u597d\u597d\u4f18\u5316\u3002  \n$2$ .\u8fd9\u4e2a\u9898\u6211\u6539\u4e86\u5f88\u4e45\uff0c\u5728\u5c0f\u7ec6\u8282\u4e0a\u5403\u4e86\u4e0d\u5c11\u4e8f\uff0c\u52a1\u5fc5\u5199\u597d\u7279\u5224\u3002  \n\n\u611f\u8c22\u5927\u89c2\u770b\u9898\u89e3\uff0c\u4ee3\u7801\u4e0d\u662f\u5f88\u7b80\u6d01\uff08\u67d0\u5229\u76ca\u6587\u540c\u5b66\u8bf4\u7684\uff09\uff0c\u4f46\u662f\u901f\u5ea6\u8fd8\u53ef\u4ee5\uff0c\u597d\u6b79\u6682\u65f6\u80fd\u8fdb\u7b2c\u4e8c\u9762\uff0c\u4e0d\u559c\u52ff\u55b7\uff0c\u8c22\u8c22\u3002",
        "postTime": 1531644901,
        "uid": 60089,
        "name": "Trinity",
        "ccfLevel": 0,
        "title": "P4752 Divided Prime \u9898\u89e3 by HydraNazis"
    },
    {
        "content": "#### \u5199\u5728\u524d\u9762\u7684\u8bdd:\u672c\u9898\u5199\u7ed9\u4e00\u4e2a\u4e0d\u4f1asort\u7684z\u5927\u4f6c\n@ \u5e7d\u754c\u306e\u51a5\u795e\n\n\u513f\u6b4c\u4e09\u767e\u9996:\u627e\u5440\u627e\u5440\u627e\u5927\u4f6c,\u627e\u5230\u4e00\u4e2az\u5927\u4f6c,sort\u6392\u5e8f\u90fd\u4e0d\u4f1a,\u4f60\u80fdAK\u548c\u6367\u676f........\n\n\u95f2\u8bdd\u5c11\u53d9,\u4e0b\u9762\u5f00\u59cb\u8bb2\u9898:\n\nA=a1```*```a2```*```......```*```an\n\nB=b1```*```b2```*```......```*```bn\n\n\u6c42:A/B\u662f\u5426\u662f\u4e2a\u8d28\u6570\u54a7\uff1f\n\n\u5f88\u660e\u663e\u5927\u5bb6\u90fd\u60f3\u5230\u7ea6\u5206(\u5e7f\u5927\u849f\u84bb\u5c31\u5feb\u6253\u7834\u76f4\u63a5\u7b97\u7136\u540e\u5224\u65ad\u7684\u7f8e\u597d\u68a6\u60f3\u5427,\u8fd9\u5f88\u660e\u663e\u662f\u6ce1\u5f71,\u4e0d\u7136\u5c31\u4e0d\u4f1a\u7eff\u4e86).\n\n\u91cd\u70b9\u6765\u4e86:\u600e\u4e48\u7ea6\u5206\u5462\uff1f\u7531\u4e8e\u4e00\u4e2a\u6570\u5b57\u5728b\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u4e0d\u591a\u4e8e\u5728a\u4e2d\u51fa\u73b0\u7684\u6b21\u6570,\u6240\u4ee5\u4e0d\u96be\u60f3\u5230\u628aa\u6570\u7ec4\u4e2d\u7684\u6570\u7ea6\u6389b\u4e2a\u5373\u53ef(\u524d\u63d0:a\u4e2d\u51fa\u73b0\u7684\u6570b\u4e2d\u4e5f\u6709).\n\n\u663e\u7136,\u5f53n\u548cm\u76f8\u7b49\u6216n-m>2\u65f6,\u7ea6\u5206\u5b8c\u5269\u4e0b\u7684\u6570\u76f8\u4e58\u4e00\u5b9a\u662f\u4e2a\u5408\u6570.\u4e8e\u662f\u53ea\u5269\u4e0bn-m=1\u8fd9\u79cd\u60c5\u51b5\n\n\u90a3\u4e48,\u9996\u5148,** sort\u6392\u5e8f\uff01\uff01\uff01\uff01\uff01\uff01**(z\u5927\u4f6c\u5c31\u56e0\u4e3a\u8fd9\u4e2a\u7206\u96f6\u4e86).\u4e4b\u540ei\u4ece1~n\u679a\u4e3ei,\u627e\u5230a\u6570\u7ec4\u4e2d\u7ea6\u4e0d\u6389\u7684\u90a3\u4e2a\u6570,\u62ce\u51fa\u6765\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u4e3a\u8d28\u6570\u5c31\u884c\u4e86.\n\nCode:\n\n```#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#include<ctime>\nusing namespace std;\nconst int N=100005;\nint t,n,m,a[N],b[N];\nbool isprime(int x){//\u6734\u7d20\u8d28\u6570\u5224\u65ad\n\tif(x==1){\n\t\treturn false;\n\t}\n    for(int i=2;i*i<=x;i++){\n        if(x%i==0){\n            return false;\n\t\t}\n\t}\n    return true;\n}\nint main(){\n    scanf(\"%d\",&t);\n    while(t--){\n\t\tmemset(a,0,sizeof(a));//\u6ce8\u610f\u6bcf\u6b21\u6e05\u7a7a\n\t\tmemset(b,0,sizeof(b));//\u6ce8\u610f\u6bcf\u6b21\u6e05\u7a7a\n        scanf(\"%d%d\",&n,&m);\n        for(int i=1;i<=n;i++){\n            scanf(\"%d\",&a[i]);\n        }\n        for(int i=1;i<=m;i++){\n            scanf(\"%d\",&b[i]);\n        }\n\t\tif(n-m==0||n-m>1){//\u5f53n\u548cm\u76f8\u7b49\u6216n-m>2\u65f6,\u7ea6\u5206\u5b8c\u5269\u4e0b\u7684\u6570\u76f8\u4e58\u4e00\u5b9a\u662f\u4e2a\u5408\u6570,\u76f4\u63a5\u8f93\u51faNO\n            printf(\"NO\\n\");\n            continue;\n        }\n        sort(a+1,a+1+n),sort(b+1,b+1+m);//\u6392\u5e8f\uff01\uff01\uff01\uff01\uff01\uff01\n        for(int i=1;i<=n;i++){\n\t\t\tif(a[i]!=b[i]){//\u627e\u5230\u5269\u4e0b\u7684\u90a3\u4e2a\u6570\n\t\t\t\tif(isprime(a[i])){//\u5224\u65ad\u662f\u5426\u4e3a\u8d28\u6570\n                    printf(\"YES\\n\");\n                }\n                else{\n                    printf(\"NO\\n\");\n                }\n                break;\n\t\t\t}\n\t\t}\n    }\n    return 0;\n}\n```\nPS:\u5199\u5230\u6734\u7d20\u8d28\u6570\u5224\u65ad\u65f6,\u6211\u7a81\u53d1\u5947\u60f3,\u60f3\u5230\u4e00\u4e2a\u795e\u5947\u7684\u7b97\u6cd5:\nMiller Rabbin\u8d28\u6570\u5224\u65ad(\u6b27\u62c9\u7b5b10\u768412\u6b21\u65b9\u5c31\u522b\u60f3\u4e86)\n\u4e8e\u662f,\u5c31\u6709\u4e86.........\n```#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#include<ctime>\n#include<map>\nusing namespace std;\nconst int N=100005;\nlong long t,n,m,a[N],b[N];\nmap<long long,int> Map;//map\u6bd4\u8f83\u65b9\u4fbf\n//Miller Rabbin,\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\nlong long pow_mod(long long a,long long b,long long r){\n    long long ans=1,buff=a;\n    while(b){\n        if(b&1)\n            ans=(ans*buff)%r;\n        buff=(buff*buff)%r;\n        b>>=1;\n    }\n    return ans;\n}\nbool test(long long n,long long a,long long d){\n    if(n==2){\n\t\treturn true;\n\t}\n    if(n==a){\n\t\treturn false;\n\t}\n    if(!(n&1)){\n\t\treturn false;\n\t}\n    while(!(d&1)){\n\t\td>>=1;\n\t}\n    long long t=pow_mod(a,d,n);\n    while(d!=n-1&&t!=n-1&&t!=1){\n        t=t*t%n;\n        d<<=1;\n    }\n    return t==n-1||(d&1)==1;\n}\nbool isprime(long long n){\n    int a[]={2,3,5,7};\n    for(int i=0;i<=3;i++){\n        if(n==a[i]){\n\t\t\treturn true;\n\t\t}\n        if(!test(n,a[i],n-1)){\n\t\t\treturn false;\n\t\t}\n    }\n    return true;\n}\nint main(){\n    scanf(\"%lld\",&t);\n    while(t--){\n\t\tMap.clear();//\u6ce8\u610f\u6e05\u7a7a\n\t\tmemset(a,0,sizeof(a));//\u6ce8\u610f\u6e05\u7a7a\n\t\tmemset(b,0,sizeof(b));//\u6ce8\u610f\u6e05\u7a7a\n        scanf(\"%lld%lld\",&n,&m);\n        for(int i=1;i<=n;i++){\n            scanf(\"%lld\",&a[i]);\n\t\t\tMap[a[i]]++;//\u8fd9\u4e2a\u6570\u51fa\u73b0\u6b21\u6570++\n        }\n        for(int i=1;i<=m;i++){\n\t\t\tscanf(\"%lld\",&b[i]);\n\t\t\tMap[b[i]]--;//\u8fd9\u4e2a\u6570\u51fa\u73b0\u6b21\u6570--,\u76f8\u5f53\u4e8e\u7ea6\u5206\n        }\n\t\tif(n-m==0||n-m>1){//\u5f53n\u548cm\u76f8\u7b49\u6216n-m>2\u65f6,\u7ea6\u5206\u5b8c\u5269\u4e0b\u7684\u6570\u76f8\u4e58\u4e00\u5b9a\u662f\u4e2a\u5408\u6570,\u76f4\u63a5\u8f93\u51faNO\n            printf(\"NO\\n\");\n            continue;\n        }\n        for(int i=1;i<=n;i++){\n\t\t\tif(Map[a[i]]==1){//\u627e\u5230\u4e86\u5269\u4f59\u7684\u90a3\u4e2a\u6570\n\t\t\t\tif(a[i]==2){\n\t\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\t}\n\t\t\t\telse if(a[i]%2==0||a[i]<2){\n\t\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\t}\n\t\t\t\telse if(isprime(a[i])){\n\t\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n    }\n    return 0;\n}\n```\n#### z\u5927\u4f6c\u4e07\u5c81\uff01\uff01\uff01",
        "postTime": 1534500258,
        "uid": 31021,
        "name": "Limerick",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4752 \u3010Divided Prime\u3011"
    },
    {
        "content": "**\u6b64\u9898\u7684\u611f\u60f3:**\u6211\u4e2a\u4eba\u611f\u89c9\u8fd9\u9053\u9898\u7eff\u7684\u6709\u70b9\u5047\u3002\u3002\u4e0d\u8fc7\u5b9e\u9645\u4e0a\u662f\u5927\u4f6c\u4eec\u7684\u7a0b\u5e8f\u6211\u6ca1\u770b\u61c2\u3002\u8fd9\u91cc\u60f3\u7ed9\u5927\u5bb6\u666e\u53ca\u4e00\u4e2a\u65b0\u7684\u601d\u8def\u3002                  \n### \u7b97\u6cd5\uff1a            \n\u2460\uff1a\u6211\u4eec\u77e5\u9053\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u7684**\u975e1\u56e0\u6570\u4e2a\u6570\u51cf\u53bb\u7b2c\u4e8c\u4e2a\u6570\u7684\u975e\u4e00\u56e0\u6570\u4e2a\u6570>1\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u6570\u76f8\u9664\u5c31\u4e00\u5b9a\u4e0d\u662f\u8d28\u6570\u3002**\u56e0\u4e3a\u8d28\u6570\u7684\u56e0\u6570\u9664\u4e861\u548c\u672c\u8eab\u5c31\u6ca1\u6709\u4e86\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u79cd\u91cd\u8981\u7684\u6761\u4ef6\uff0c\u5982\u679c\u6ee1\u8db3\u8fd9\u79cd\u6761\u4ef6\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\"No\",\u7136\u540e\u9000\u51fa\u5faa\u73af\u3002                 \n\u2461\uff1a\u5982\u679c\u4e0d\u7b26\u5408\u6761\u4ef6\u2460\u7684\u8bdd\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f00\u4e24\u4e2a\u6570\u7ec4$a$\u548c$b$,\u5e76\u8fdb\u884c\u6392\u5e8f\uff0c\u56e0\u4e3a**a\u548cb\u7684\u957f\u5ea6\u5dee\u4e00**\u80af\u5b9a\u4f1a\u6709\u4e00\u4e2a\u5730\u65b9$a$\u548c$b$\u7684\u6570\u5b57\u4e0d\u540c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u9000\u51fa\u5faa\u73af\uff0c\u5e76\u8bb0\u5f55\u8fd9\u4e2a\u4e0b\u6807\uff0c\u8fdb\u884c\u5224\u65ad\u6b64\u6570\u662f\u5426\u4e3a\u8d28\u6570\uff0c\u5373\u53ef\u3002                         \n#### \u8fd9\u6837\u6700\u5dee\u60c5\u51b5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(N)$,\u662f\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u7684\u3002\u6211\u6700\u6162\u4e00\u4e2a\u70b910ms\u3002\n### \u8bdd\u4e0d\u591a\u8bf4,\u770b\u4ee3\u7801\uff1a          \n```cpp\n#include<bits/stdc++.h>\n#define MAXN 100010//\u5b9a\u4e49\u6700\u5927\u503c\nusing namespace std;\nint n,i,j,x,m,t,t1,t2;\nint a[MAXN],b[MAXN];\ninline int read(){//\u5feb\u8bfb\n    int x=0;char c=getchar();\n    while(!isdigit(c)) c=getchar();\n    while(isdigit(c)) x=x*10+c-48,c=getchar();\n    return x; \n}\ninline void write(int x){//\u5feb\u5199\n    if(x/10>0) write(x/10);\n    putchar(x%10+48);\n    return;\n}\ninline void printno(){//\u8f93\u51fa\"NO\"\n    putchar('N');putchar('O');\n    return;\n}\ninline void printyes(){//\u8f93\u51fa\"YES\"\n    putchar('Y');putchar('E');putchar('S');return;\n}\ninline bool ps(int x){//\u5224\u65ad\u8d28\u6570\n    int p=2;\n    while(p<=round(sqrt(x))){\n        if(x%p==0) return 0;\n        p++;\n    }\n    return 1;\n}\nint main(){\n    t=read();\n    for(i=1;i<=t;i++){\n        n=read();m=read(); //\u8f93\u5165n,m\n        memset(a,0,sizeof(a));memset(b,0,sizeof(b));\n        //\u5c06\u6570\u7ec4\u6e050\n        t1=0;t2=0;  //\u975e\u4e00\u5143\u7d20\u4e2a\u6570\u6e050\n        for(j=1;j<=n;j++){\n            x=read();\n            if(x!=1) t1++,a[t1]=x; //\u5982\u679c\u6b64\u6570\u4e0d\u4e3a1\uff0c\u90a3\u4e48\u5c31\u5c06\u5176\u52a0\u5165\u6570\u7ec4\n        }  \n        for(j=1;j<=m;j++){\n            x=read();\n            if(x!=1) t2++,b[t2]=x;//\u548c\u8f93\u5165a\u6570\u7ec4\u662f\u4e00\u6837\u7684\u539f\u7406\uff0c\u8fd9\u91cc\u4e0d\u518d\u63cf\u8ff0\n        }\n        if(t1-t2!=1){//\u975e\u4e00\u5143\u7d20\u4e2a\u6570\u4e4b\u5dee\u4e0d\u4e3a1\uff0c\u4e0d\u53ef\u80fd\u4e3a\u8d28\u6570\uff0c\u76f4\u63a5\u8f93\u51faNO,\u9000\u51fa\u5faa\u73af\n            printno();cout<<endl;continue; \n        }\n        sort(a+1,a+t1+1);//\u6392\u5e8f\n        sort(b+1,b+t2+1);\n        for(j=1;j<=t1;j++){\n            if(a[j]!=b[j]) break;//\u5f53a\u6570\u7ec4\u8be5\u5143\u7d20\u4e0eb\u6570\u7ec4\u8be5\u5143\u7d20\u4e0d\u76f8\u7b49\u65f6\uff0c\u9000\u51fa\u5faa\u73af\n        }\n        if(ps(a[j-1])&&a[j-1]!=0){\n        //\u82e5\u6b64\u6570\u4e3a\u8d28\u6570\uff0c\u6ce8\u610f\uff0c\u6211\u4f7f\u7528\u7684\u5224\u65ad\u7d20\u6570\u65b9\u6cd50\u4e5f\u4f1a\u8bef\u5224\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u8981\u52a0\u4e2a\u7279\u5224\uff0c\u5426\u5219\u4f1aWA\u4e24\u4e2a\u70b9\n            printyes();\n            cout << endl;\n            continue;\n        }\n        else{\n            printno();//\u8f93\u51faNO\n            cout << endl;\n            continue;\n        }\n    }\n} \n```\n",
        "postTime": 1535803060,
        "uid": 114320,
        "name": "\u843d\u6c50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4752 \u3010Divided Prime\u3011"
    },
    {
        "content": "# \u6d1b\u8c37\u4e03\u6708\u6708\u8d5b T1 Divided Prime\u9898\u89e3\n#### \u770b\u4e0d\u61c2\u5176\u4ed6\u9898\u89e3\u5404\u4f4ddalao\u4e3a\u4ec0\u4e48\u5c06\u672c\u9898\u505a\u5f97\u8fd9\u4e48\u590d\u6742\u3002\n#### \u9996\u5148\u9898\u76ee\u91cc\u9762\u6709\u4e00\u53e5\u975e\u5e38\u91cd\u8981\u7684\u8bdd\uff1a\n\n### **\u4fdd\u8bc1\u5bf9\u4e8e\u4e00\u4e2a\u6570\u5b57\uff0c\u5176\u5728 $b_i$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u4e0d\u591a\u4e8e\u5728 $a_i$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002**\n\n#### \u6839\u636e\u8fd9\u53e5\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\uff1a\n\n#### **1.\u5728a\u4e2d\u6ca1\u6709\u51fa\u73b0\u7684\u6570\u5b57b\u4e2d\u4e00\u5b9a\u6ca1\u6709\u51fa\u73b0\u3002**\n#### **2.\u5728b\u4e2d\u51fa\u73b0\u7684\u6570\u5b57a\u4e2d\u4e00\u5b9a\u51fa\u73b0\u3002**\n\n#### \u770b\u5230\u8fd9\u91cc\uff0c\u5c31\u80fd\u591f\u5927\u6982\u60f3\u5230\u89e3\u6cd5\uff0c\u56e0\u4e3aa\u4e2d\u4e58\u79ef\u4e00\u5b9a\u6574\u9664b\u4e2d\u4e58\u79ef\uff08\u5982\u4e0a\u4e24\u6761\uff09\u3002\u800c\u5982\u679cm-n\u5927\u4e8e\u7b49\u4e8e2\uff0c\u6216\u8005m=n\u65f6\uff0c\u5269\u4e0b\u7684\u4e58\u79ef\u4e00\u5b9a\u4e0d\u662f\u8d28\u6570\u3002\n\n#### \u6240\u4ee5\u53ea\u9700\u8981\u770ba\u4e2d\u591a\u51fa\u6765\u7684\u6570\u5b57\u5373\u53ef\u3002\n\n#### \u800c\u591a\u51fa\u6765\u7684\u6570\u5b57\u600e\u4e48\u770b\uff1f\n\n#### \u5f88\u7b80\u5355\uff0c\u591a\u51fa\u6765\u6700\u591a\u53ea\u6709\u4e00\u4e2a\uff0c\u90a3\u4e48\u5728b\u672b\u5c3e\u585e\u4e00\u4e2a-100.\u5bf9\u4e24\u4e2a\u6570\u7ec4\u5206\u522b\u6392\u5e8f\u4ee5\u540e\uff0ca\u4e2d\u7b2c\u4e00\u4e2a\u4e0d\u5bf9\u5e94\u7684\u6570\u5b57\u5c31\u662f\u90a3\u4e2a\u591a\u51fa\u6765\u7684\u6570\u5b57\uff0c\u6700\u540e\u5224\u65ad\u5176\u662f\u5426\u4e3a\u7d20\u6570\u5373\u53ef\uff01\n\n#### **\u7279\u522b\u6ce8\u610f\uff01\u56e0\u4e3a1\u5bf9\u4e8e\u4e58\u79ef\u6ca1\u6709\u5f71\u54cd\uff0c\u6240\u4ee5\u5e94\u8be5\u8fc7\u6ee4\u6389\u8bfb\u5165\u91cc\u9762\u6240\u6709\u76841**\n\n### ac\u7a0b\u5e8f\n\n```c\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m;\nint a[100001],b[100001];\nbool check(int tar){\n\tfor (int i=2;i<=sqrt(tar);i++)\n\t\tif (tar%i==0)\n\t\t\treturn false;\n\treturn true;\n}\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile (t--){\n\t\tscanf(\"%d%d\",&m,&n);\n\t\tfor (int i=1;i<=m;i++){\n\t\t\tscanf(\"%d\",a+i);\n\t\t\tif (a[i]==1)\n\t\t\t\ti--,m--;\n\t\t}\n\t\tfor (int i=1;i<=n;i++){\n\t\t\tscanf(\"%d\",b+i);\n\t\t\tif (b[i]==1)\n\t\t\t\ti--,n--;\n\t\t}\n\t\tif (m-n>1||m-n==0){\n\t\t\tprintf(\"NO\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tsort(a+1,a+1+m);\n\t\tsort(b+1,b+1+n);\n\t\tb[m]=-100;\n\t\tfor (int i=1;i<=m;i++)\n\t\t\tif (a[i]!=b[i]){\n\t\t\t\tprintf(\"%s\",(check(a[i])?\"YES\\n\":\"NO\\n\"));\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1531737008,
        "uid": 57060,
        "name": "dasxxx",
        "ccfLevel": 7,
        "title": "\u6d1b\u8c37\u4e03\u6708\u6708\u8d5b T1 Divided Prime\u9898\u89e3"
    },
    {
        "content": "\n### \u8fd9\u9053\u9898\u7528\u4f18\u5148\u961f\u5217\u65e2\u65b9\u4fbf\u53c8\u5bb9\u6613\u7406\u89e3\uff01\n\n\n------------\n\n### \u4f18\u5148\u961f\u5217\uff08priority_queue\uff09\n\n\u5176\u5b9e\u5b83\u5c31\u662f _\u81ea\u5e26\u6392\u5e8f\u529f\u80fd\u7684\u961f\u5217_ \u3002\n```\n\u548c\u961f\u5217\u57fa\u672c\u64cd\u4f5c\u76f8\u540c:\n- top   \u8bbf\u95ee\u961f\u5934\u5143\u7d20 \u3010\u4e0d\u662f front\u3011\n- empty \u961f\u5217\u4e3a\u7a7a\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false\n- size  \u8fd4\u56de\u961f\u5217\u5185\u5143\u7d20\u4e2a\u6570\n- push  \u63d2\u5165\u5143\u7d20\u5230\u961f\u5c3e \u3010\u5e76\u6392\u5e8f\u3011\n- pop   \u5f39\u51fa\u961f\u5934\u5143\u7d20\n\n```\n\u7f51\u4e0a\u770b\u5230\u4e86[\u8fd9\u4e2a](https://blog.csdn.net/weixin_36888577/article/details/79937886)\u4ecb\u7ecd\u4f18\u5148\u961f\u5217\u7684\uff0c\u611f\u89c9\u5f88\u4e0d\u9519\u3002\n\n------------\n\n### \u601d\u8def\n\n\u672c\u9898\u7684\u601d\u8def\u697c\u9876\u7684\u5927\u4f6c\u4eec\u8bb2\u5f97\u5341\u5206\u6e05\u695a\u4e86\uff0c\u6211\u5c31\u6765\u7b80\u5355\u603b\u7ed3\u4e00\u4e0b\u3002\n\n\u5f88\u91cd\u8981\u7684\u4e00\u70b9\uff1a _\u4fdd\u8bc1\u5bf9\u4e8e\u4e00\u4e2a\u6570\u5b57\uff0c\u5176\u5728 $b_i$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u4e0d\u591a\u4e8e\u5728 $a_i$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002_ \n\n- \u6240\u4ee5\u5bf9\u4e8e\u9898\u76ee\u8bf4\u7684 $\\dfrac{A}{B}$ \uff0c\u5c31\u662f\u8f93\u5165\u7684\u4e24\u4e2a\u6570\u5217\u6392\u5e8f\u540e **\u4e0d\u91cd\u5408\u90e8\u5206\u4e4b\u79ef**\u3002~~\u8fd8\u662f\u770b\u5927\u4f6c\u4eec\u7684\u7406\u89e3\u4e00\u4e0b\u5427~~\n\n- \u8003\u8651\u5230 $1$ **\u5bf9\u4e58\u79ef\u4e0d\u5f71\u54cd**\uff0c\u53ef\u4ee5**\u76f4\u63a5\u5ffd\u7565**\u3002\n\n- \u8981\u6c42$\\dfrac{A}{B}$\u662f **\u8d28\u6570** \uff0c\u53bb\u9664\u4e86 $1$ \u7684\u5e72\u6270\u540e\uff0c~~\u5f88\u663e\u7136~~\u8f93\u5165\u7684\u4e24\u4e2a\u6570\u5217 **\u5305\u542b\u5143\u7d20\u6570\u91cf\u5dee\u4e0d\u662f $1$** \uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\u201cNO\u201d\u3002\n\n- \u5426\u5219\u5224\u65ad **\u4e0d\u91cd\u5408\u90e8\u5206**\uff08\u5176\u5b9e\u5c31\u53ea\u6709\u4e00\u4e2a\u6570\u5b57\uff0c\u4e0b\u6587\u4e2d\u6211\u4eec\u53eb\u5b83\u201c\u7279\u6b8a\u5143\u7d20\u201d\uff09**\u662f\u5426\u662f\u8d28\u6570** \u5373\u53ef\u3002\n\n\u53ef\u4ee5\u81ea\u5df1\u5199\u4e24\u4e32\u6570\u5b57\u6a21\u62df\u4e00\u4e0b~\n\n\n------------\n\n\n### \u4ee3\u7801\uff1a\n\n```C++\n#include<bits/stdc++.h>  //\u65b9\u4fbf\u7684 \u4e07\u80fd\u5934 \n#define ll long long     //\u65b9\u4fbf\u7684 \u5b8f\u5b9a\u4e49 \nusing namespace std;     //\u65b9\u4fbf\u7684 \u547d\u540d\u7a7a\u95f4 \npriority_queue<ll> a,b;  //\u65b9\u4fbf\u7684 \u4f18\u5148\u961f\u5217 \nll t,n,m,c,ans;          //\u6734\u7d20\u7684 \u53d8\u91cf\u540d \n\n//\u6734\u7d20\u7684\u5feb\u8bfb \ninline ll read() \n{\n\tll x=0;\n\tchar c=getchar();\n\tbool p=0;\n\tfor(;c< '0'||c> '9';c=getchar()) p=(c=='-'||p)?1:0;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=x*10+(c-'0');\n\treturn p?-x:x;\n}\n//\u6734\u7d20\u7684\u8d28\u6570\u5224\u65ad \ninline bool prime(ll x) \n{\n\tif(x==0) return false;\n\tif(x==1) return false;\n\tif(x==2) return true;\n\tfor(int i=2;i*i<=x;i++)\n\tif(x%i==0) return false;\n\treturn true;\n}\n\nint main()\n{\n\tt=read();\n\twhile(t--)\n\t{\n\t\t//\u521d\u59cb\u5316 \n\t\tans=-1;  //ans \u521d\u59cb\u5316\u4e3a -1 \u56e0\u4e3a\u4e0b\u9762\u5224\u65ad\u8981\u7528 \n\t\twhile(!a.empty()) a.pop();  //\u6734\u7d20\u5730\u6e05\u7a7a a \u961f\u5217\n\t\twhile(!b.empty()) b.pop();  //\u6734\u7d20\u5730\u6e05\u7a7a b \u961f\u5217\n\t\t//\u8bfb\u5165\u90e8\u5206 \n\t\tn=read();m=read();\n\t\tfor(int i=1;i<=n;i++){c=read();if(c!=1) a.push(c);}  //\u8bfb\u5165\u7684 1 \u4e0d\u5165\u961f\u5217\uff0c\u4ed6\u662f\u6253\u9171\u6cb9\u7684 \n\t\tfor(int i=1;i<=m;i++){c=read();if(c!=1) b.push(c);}  //\u4f18\u5148\u961f\u5217\u7684 push \u81ea\u5e26\u6392\u5e8f\u529f\u80fd \u5f88\u65b9\u4fbf \n\t\t//\u5224\u65ad\u90e8\u5206 \n\t\tif(a.size()-b.size()!=1){cout<<\"NO\"<<endl;continue;} //size \u8fd4\u56de\u961f\u5217\u5185\u7684\u5143\u7d20\u6570\u91cf \u5f88\u65b9\u4fbf \n\t\twhile(!b.empty())        //\u53ea\u8981\u961f\u5217 b \u4e0d\u662f\u7a7a\u7684 \n\t\t{\n\t\t\tif(b.top()==a.top()) //\u627e\u5230\u4e86\u91cd\u5408\u7684\u5143\u7d20 \n\t\t\t{b.pop();a.pop();}   //\u4e00\u8d77\u5f39\u51fa\uff0c\u5c31\u548c\u666e\u901a\u7684\u961f\u5217\u4e00\u6837 \n\t\t\telse\n\t\t    {ans=a.top();break;} //\u627e\u5230\u4e86\u552f\u4e00\u7684\u7279\u6b8a\u5143\u7d20\uff0c\u9000\u51fa\u5faa\u73af \n\t\t}\n\t\tif(ans==-1) ans=a.top(); //\u7279\u6b8a\u5143\u7d20\u53ef\u80fd\u5728\u961f\u5217 a \u672b\u5c3e\uff0c\u7279\u5224\u3002\u6211\u5c31\u662f\u5728\u8fd9\u91cc\u5361\u4e86\u597d\u51e0\u6b21 92 \u5206www \n\t\tif(prime(ans)) cout<<\"YES\"<<endl;\n\t\telse cout<<\"NO\"<<endl;\n\t}\n\treturn 0;\n}\n\n```\n\n\n------------\n\n\u672c\u849f\u84bb\u5199\u5f97\u4e0d\u600e\u4e48\u597d\uff0c\u6709\u9519\u8bef\u6b22\u8fce\u6307\u51fa\uff0c\u5e0c\u671b\u5927\u5bb6\u591a\u591a\u5305\u6db5~",
        "postTime": 1594964235,
        "uid": 328256,
        "name": "DrownedFish",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4752 \u3010Divided Prime\u3011"
    },
    {
        "content": "**\u4fdd\u8bc1\u5bf9\u4e8e\u4e00\u4e2a\u6570\u5b57\uff0c\u5176\u5728 $b_i$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u4e0d\u591a\u4e8e\u5728 $a_i$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002**\n\n\u8fd9\u8bf4\u660e $B$ \u91cc\u7684\u6570 $A$ \u91cc\u4e00\u5b9a\u6709\u3002\u800c\u4e14\u5bf9\u4e8e\u67d0\u4e2a\u6570\u636e\uff0c\u5b83\u5728 $B$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u80af\u5b9a\u5c0f\u4e8e\u7b49\u4e8e $A$ \u91cc\u7684\u3002\n\n\u4e8e\u662f\u5c31\u6709\u4e86\u4e00\u4e2a\u601d\u8def\uff1a\u628a $A$ \u4e2d\u5728 $B$ \u91cc\u51fa\u73b0\u7684\u6570\u636e\u5168\u90e8\u5220\u6389\u3002\n\n\u5f00\u4e24\u4e2a `std::multiset`\uff0c\u7136\u540e\u7528 `std::set_difference` \u6c42\u4e00\u4e0b\u5dee\u96c6\u3002\u82e5\u5dee\u96c6\u4e2d\u5143\u7d20\u6570\u91cf\u4e0d\u7b49\u4e8e $1$\uff0c\u90a3\u5fc5\u7136\u4e0d\u662f\u8d28\u6570\uff0c\u5426\u5219\u5224\u65ad\u5dee\u96c6\u4e2d\u552f\u4e00\u7684\u6570\u5b57\u662f\u4e0d\u662f\u8d28\u6570\u5373\u53ef\u3002\n\n```cpp\n#include <iostream>\n#include <ctime>\nusing namespace std;\n//==========================================\n#include <set>\n#include <algorithm>\n#include <iterator>\ntypedef long long ll;\nbool isprime(int x)\n{\n    if(x==1) return false;\n    for(int i=2;i*i<=x;i++)\n        if(x%i==0) return false;\n    return true;\n}\nsigned main(signed argc, char const *argv[])\n{\n#ifdef LOCAL\n    freopen(\"in.in\", \"r\", stdin);\n    freopen(\"out.out\", \"w\", stdout);\n    clock_t c1 = clock();\n#endif\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    //======================================\n    int t;\n    cin>>t;\n    while(t--)\n    {\n        int n,m;\n        cin>>n>>m;\n        multiset<ll> s1, s2, s3;\n        copy_n(istream_iterator<ll>(cin), n, inserter(s1, s1.begin()));\n        copy_n(istream_iterator<ll>(cin), m, inserter(s2, s2.begin()));\n        set_difference(s1.begin(), s1.end(), s2.begin(), s2.end(), inserter(s3, s3.begin()));\n        if(s3.size()!=1||!isprime(*s3.begin())) cout<<\"NO\"<<endl;\n        else cout<<\"YES\"<<endl;\n    }\n    //======================================\n#ifdef LOCAL\n    cerr << \"Time Used:\" << clock() - c1 << \"ms\" << endl;\n#endif\n    return 0;\n}\n```",
        "postTime": 1532107177,
        "uid": 109757,
        "name": "AgOH",
        "ccfLevel": 4,
        "title": "201807\u6708\u8d5b \u9898\u89e3 P4752 \u3010Divided Prime\u3011"
    },
    {
        "content": "\u6211\u662f\u4e00\u4e2a\u51c6\u521d\u4e09\u7684\u849f\u84bb\u2026\u2026\n\n\u8fd9\u6b21\u6708\u8d5b\u6211\u4e00\u5f00\u59cb\u4e00\u76f4\u5728\u770bT4\uff0c\u7b2c\u4e00\u773c\u89c9\u5f97\u8fd9\u662f\u4e2a\u7ebf\u6bb5\u6811\uff0c\u4e8e\u662f\u4e0a\u6a21\u677f\uff0c\u7ed3\u679c\u6302\u4e86\u2026\u2026\u4e00\u76f4\u6539\u4e86\u4e00\u4e2a\u5c0f\u65f6\u2026\u2026\u653e\u5f03\u540e\u53bb\u5199T1\uff0c\u5199\u52309:00\u7ec8\u4e8eA\u6389\u4e86\uff0c\u597d\u5f00\u5fc3~~~\uff08\u6211\u771f\u7684\u592a\u83dc\u4e86\uff09\n\n\u7b80\u5355\u770b\u4e86\u770b\u9898\u89e3\uff0c\u611f\u89c9\u6211\u7684\u4ee3\u7801\u76f8\u5bf9\u6765\u8bf4\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u56e0\u6b64\u6765\u6c34\u4e00\u6ce2\u3002\n\n\u5176\u5b9e\u6211\u89c9\u5f97\u8fd9\u4e2a\u9898\u5927\u6982\u5c31\u662f\u534a\u4e2a\u6570\u5b66\u9898\uff0c\u60f3\u901a\u4e86\u5c31\u80fd\u5bf9\uff0c\u5bf9\u4ee3\u7801\u80fd\u529b\u7684\u8003\u5bdf\u4e0d\u662f\u5f88\u5f3a\u3002\n\n\u6211\u505a\u8fd9\u4e2a\u9898\uff0c\u4e00\u5f00\u59cb\u60f3\u5230\u7684\u662fmap+gcd\u518d\u52a0\u4e0a\u5f02\u6216\u8fd0\u7b97\uff08\u6211\u4e5f\u4e0d\u77e5\u9053\u6211\u7684\u8111\u56de\u8def\u662f\u600e\u4e48\u641e\u7684\uff09\uff0c\u7ed3\u679c\u5199\u4e86\u8001\u534a\u5929\u4e5f\u53ea\u80fd\u8fc7\u524d15\u4e2a\u70b9\u2026\u2026\n\n\u4e8e\u662f\u6539\u53d8\u601d\u8def\uff0c\u7559\u4e0b\u4e00\u4e2amap\uff0c\u5bf9\u4e8e\u5206\u6bcd\uff0c\u5728map\u91cc\u8bb0\u5f55\u6bcf\u4e2a\u4e58\u6570\u7684\u503c\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5e76\u5728\u8bfb\u5165\u5206\u5b50\u7684\u4e58\u6570\u65f6\u540c\u65f6\u68c0\u9a8c\u5206\u6bcd\u91cc\u662f\u5426\u6709\u8db3\u591f\u7684\u6570\u53bb\u7ea6\u5206\uff0c\u5982\u679c\u8db3\u591f\uff0cmap\u91cc\u7684\u503c\u51cf\u4e00\uff0c\u5426\u5219\u5c31\u53bb\u4e58\u4e0a\u8fd9\u4e2a\u6570\uff08\u5206\u6bcd\u6839\u672c\u4e0d\u7528\u5b58\u8fdb\u6570\u7ec4\uff09\u3002\n\n\u7136\u540e\uff0c\u518d\u626b\u4e00\u904d\u5206\u5b50\u7684\u6570\u7ec4\uff0c\u5c06\u6240\u6709\u6ca1\u6709\u88ab\u7ea6\u5206\u7684\u6570\u5168\u90e8\u4e58\u8d77\u6765\uff0c\u5e76\u5b9a\u4e49\u4e00\u4e2aans\u5b58\u4e0b\u7ea6\u5206\u540e\u7684\u5206\u5b50\u9664\u4ee5\u5206\u6bcd\u7684\u503c\uff0c\u4e4b\u540e\u5224\u65ad\u4e00\u4e0b\u7d20\u6570\u5c31\u53ef\u4ee5\u5566~\\(\u2267\u25bd\u2266)/~\uff08P.S.\u6211\u8fd9\u91cc\u5224\u65ad\u7d20\u6570\u7684\u65b9\u6cd5\u597d\u50cf\u6bd4\u8f83\u5feb\u8bf6\uff0c\u5c3d\u7ba1\u6ca1\u6709\u5fc5\u8981\uff09\n\n\u8fd9\u6837\u4e0b\u6765\uff0c\u7c97\u7565\u5730\u8ba1\u7b97\u6574\u4f53\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7ea6\u4e3a$ O(tn) $\uff08\u6211\u6ca1\u6709\u7ba1\u90a3\u4e2a\u7d20\u6570\u5224\u65ad\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[100001], b;\nbool check(int num)\n{\n    if (num == 2 || num == 3 || num == 5)\n    \treturn true;\n    if (num % 2 == 0 || num % 3 == 0 || num % 5 == 0 || num == 1)\n        return false;\n    unsigned int c = 7;\n    int maxc = int (sqrt (num));\n    while (c <= maxc)\n    {\n        if (num % c == 0)\treturn false;\n        c += 4;\n        if (num % c == 0)\treturn false;\n        c += 2;\n        if (num % c == 0)\treturn false;\n        c += 4;\n        if (num % c == 0)\treturn false;\n        c += 2;\n        if (num % c == 0)\treturn false;\n        c += 4;\n        if (num % c == 0)\treturn false;\n        c += 6;\n        if (num % c == 0)\treturn false;\n        c += 2;\n        if (num % c == 0)\treturn false;\n        c += 6;\n    }\n    return true;\n}\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int ii = 1; ii <= t; ii++)\n    {\n        int n, m;\n        scanf(\"%d%d\",&n,&m);\n        map<int,int> wyj, xhz;\n        int o = 1, p = 1;\n        for(int i = 1; i <= n; i++)\n        {\n            scanf(\"%d\",&a[i]);\n            wyj[a[i]]++;\n        }\n        p = 1;\n        for(int i = 1; i <= m; i++)\n        {\n        \t\n            scanf(\"%d\",&b);\n            if(wyj[b])\n                wyj[b]--;\n            else\n            \tp *= b;\n        }\n        for(int i = 1; i <= n; i++)\n        \tif(wyj[a[i]])\n        \t\to *= a[i], wyj[a[i]]--;\n        int ans = o / p;\n        if(check(ans))\tprintf(\"YES\\n\");\n        else\tprintf(\"NO\\n\");\n    }\n    return 0;\n} \n```",
        "postTime": 1531639127,
        "uid": 48970,
        "name": "\u4ec1\u548c_\u7ae5\u535a\u626c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4752 \u3010Divided Prime\u3011"
    },
    {
        "content": "## \u5206\u6790+\u89e3\u6cd5\r\n\u8fd9\u9898\u663e\u7136\u4e0d\u80fd\u786c\u4e58\u51fa\u6765\uff0c\u4e8e\u662f\u8003\u8651\u4e00\u79cd**\u8bb0\u5f55\u56e0\u6570**\u518d\u6bd4\u8f83\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u6ce8\u610f\u8fd9\u91cc\u53ef\u4ee5**\u53ea\u7528\u8bb0\u5f55\u662f\u8d28\u6570\u7684\u56e0\u5b50**\uff0c\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u9898\u76ee\u5df2\u7ecf\u7ed9\u51fa $b\\subseteq a$\uff08\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u51fa\u73b0\u5728 $b$ \u4e2d\u7684\u6570\u7684\u51fa\u73b0\u6b21\u6570\u90fd\u5c0f\u4e8e\u5728 $a$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4 $b$ \u6240\u6709\u51fa\u73b0\u7684\u90fd\u5728 $a$ \u91cc\u6709**\u5bf9\u5e94**\uff0c\u4e3a $b\\subseteq a$\uff09\uff0c\u4e8e\u662f\u5b9e\u9645\u4e0a $\\complement_ab$ \u5c31**\u53ea\u80fd\u662f\u4e00\u4e2a\u8d28\u6570**\u3002\u6240\u4ee5\u5982\u679c\u6709\u5408\u6570\u51fa\u73b0\uff0c\u4e0d\u662f\u6b63\u597d\u7ea6\u5149\u3001\u5c31\u662f\u591a\u51fa\u6765\uff0c\u4f46\u662f\u56e0\u4e3a\u53ea\u80fd\u591a\u51fa\u6765\u8d28\u6570\u6240\u4ee5\u5408\u6570\u5c31\u88ab\u5426\u5b9a\u4e86\uff0c\u53ef\u4ee5\u5ffd\u7565\uff1b\u4e0b\u9762\u8bf4\u4e00\u4e0b\u5982\u4f55\u8bb0\u5f55\u8d28\u6570\uff0c\u9996\u5148\u5148\u8981**\u5224\u5b9a**\u662f\u4e0d\u662f\u8d28\u6570\uff0c\u5c31\u53ef\u4ee5\u8fd0\u7528**\u7ebf\u6027\u7b5b\u8d28\u6570+\u4e8c\u5206\u67e5\u627e**\u6765\u5b8c\u6210\uff1a\r\n\r\n**\u7ebf\u6027\u7b5b\u8d28\u6570**\uff1a\u8fd0\u7528**\u94fe\u8868**\uff0c\u6bcf\u4e00\u6b21\u679a\u4e3e\u94fe\u8868\u4e2d\u7684 $i$\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i$ \u518d\u679a\u4e3e\u94fe\u8868\u4e2d\u7684\u6bcf\u4e00\u4e2a $h$\uff0c $i\\times h$ \u5c31**\u662f\u4e00\u4e2a\u5408\u6570**\uff0c\u628a\u5176\u4ece\u94fe\u8868\u4e2d**\u62b9\u53bb**\uff0c\u8fd9\u6837\u80fd\u505a\u5230\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u7ebf\u6027\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u7528 $i$ \u679a\u4e3e\u51fa\u6765\u7684\u5408\u6570\u90fd\u662f\u4ee5 $i$ \u4e3a**\u6700\u5c0f\u56e0\u5b50**\u7684\u6570\uff0c\u4e8e\u662f\u5176\u5b9e\u6bcf\u4e00\u4e2a\u6570\u90fd\u4f1a**\u4e0d\u91cd\u4e0d\u6f0f**\u7684\u88ab\u679a\u4e3e\u521a\u597d\u4e00\u904d\uff0c\u6700\u540e\u626b\u4e00\u904d\u94fe\u8868\u653e\u5230\u6570\u7ec4\u91cc\u53bb\u5b8c\u6210\u3002\r\n\r\n```cpp\r\nfor ( int i = 0; i < 1000005; i++ )\tprime[i].bef = i - 1 , prime[i].aft = i + 1;\r\nfor ( int i = 2; prime[i].bef <= 1000000; i = prime[i].aft )\r\n{\r\n\tcnt = 0;\r\n\tfor ( int h = 2; i * h <= 1000000; h = prime[h].aft )\tq[++cnt] = i * h;\r\n\tfor ( int h = 1; h <= cnt; h++ )\taa = prime[q[h]].bef , bb = prime[q[h]].aft , prime[aa].aft = bb , prime[bb].bef = aa;\r\n}\r\nfor ( int i = 2; i <= 1000000; i = prime[i].aft )\tp[++cmp] = i;\r\n```\r\n\r\n**\u4e8c\u5206\u67e5\u627e**\uff1a\u56e0\u4e3a\u8d28\u6570\u6570\u7ec4\u662f**\u4e25\u683c\u9012\u589e**\u7684\uff0c\u4e8e\u662f\u53ef\u4ee5\u8fd0\u7528\u4e8c\u5206\u67e5\u627e\u7684\u6027\u8d28\uff0c\u4ee5 $\\log$ \u7ea7\u522b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u627e\u5230\u5927\u4e8e\u8fd9\u4e2a\u6570\u7684\u6700\u5c0f\u6570\u5bf9\u5e94\u6570\u7ec4\u5185\u7684**\u4f4d\u7f6e**\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u4f4d\u7f6e\u4ee3\u5165\u6570\u7ec4\u627e\u5230**\u5bf9\u5e94\u6570\u5b57**\uff0c\u5224\u65ad\u8fd9\u4e2a\u6570\u5b57**\u662f\u5426\u7b49\u4e8e**\u6b63\u5728\u67e5\u627e\u7684\u6570\u5b57\uff0c\u5982\u679c\u662f\u90a3\u4e48\u8fd9\u4e2a\u6570\u5b57\u5c31\u5728\u6570\u7ec4\u91cc\u9762\uff0c\u5426\u5219\u5c31\u4e0d\u5728\u3002\r\n\r\n```cpp\r\nint fnd( ll x[] , ll y )\r\n{\r\n\tif ( x[upper_bound( x , x + 202515 , y ) - x - 1] == y )\treturn 1;\r\n\treturn 0;\r\n}\r\n```\r\n\r\n\u4e0b\u9762\u6211\u4eec\u5c31\u8fdb\u5165\u6700\u540e\u4e00\u4e2a\u677f\u5757\uff1a\u5224\u65ad\u662f\u5426**\u53ea\u591a\u51fa\u6765\u4e00\u4e2a\u8d28\u6570**\u3002\u5982\u4f55\u505a\uff1f\u6211\u4eec\u672c\u5e94\u8be5\u5f88\u7b80\u5355\u7684\u8fd0\u7528\u6876\u6392\uff0c\u4f46\u662f\u65e0\u5948\u6570\u636e\u89c4\u6a21\u8fc7\u4e8e\u5e9e\u5927\uff0c\u6211\u4eec\u8fd0\u7528**\u4f18\u5148\u961f\u5217**\uff0c\u627e\u5230\u8d28\u6570\u90fdpush\u5230\u961f\u5217\u91cc\u53bb\uff0c\u6700\u540e\u626b\u4e00\u904d\u4e24\u4e2a\u961f\u5217\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u4e0d\u4e00\u6837\u7684\uff0c\u4e5f\u5c31\u662f $a$ \u4e2d\u6bd4 $b$ \u591a\u51fa\u4e86\u4e00\u4e2a\u8d28\u6570\uff0c\u6807\u8bb0\u5e76**\u5355\u72ec\u8e22\u6389\u5b83**\uff0c\u5982\u679c\u4e0b\u6b21\u53c8\u9047\u5230\u4e86\u5c31\u76f4\u63a5**\u7ed3\u675f\u7a0b\u5e8f\uff0c\u8f93\u51fa** ```NO``` \u3002\u5982\u679c\u5230\u6700\u540e**\u6709\u4e14\u4ec5\u6709\u4e00\u6b21**\u9047\u5230\u4e0d\u540c\u7684\uff0c\u5c31\u53ef\u4ee5\uff0c\u5426\u5219\u5c31\u4e0d\u53ef\u4ee5\u3002\r\n\r\n\u4e0b\u9762\u662f\u4ee3\u7801\u5b9e\u73b0\uff1a\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\n#define ll long long\r\nusing namespace std;\r\nll p[202515] , cmp , q[1000005] , cnt , aa , bb , t;\r\nint fnd( ll x[] , ll y )\r\n{\r\n\tif ( x[upper_bound( x , x + 202515 , y ) - x - 1] == y )\treturn 1;\r\n\treturn 0;\r\n}\r\npriority_queue<int> p1 , p2;\r\nstruct P\r\n{\r\n\tint bef , aft;\r\n\tbool flag = true;\r\n}prime[1000005];\r\nll m , n , a[100005] , b[100005];\r\nint main()\r\n{\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(NULL) , cout.tie(NULL);\r\n\tfor ( int i = 0; i < 1000005; i++ )\tprime[i].bef = i - 1 , prime[i].aft = i + 1;\r\n\tfor ( int i = 2; prime[i].bef <= 1000000; i = prime[i].aft )\r\n\t{\r\n\t\tcnt = 0;\r\n\t\tfor ( int h = 2; i * h <= 1000000; h = prime[h].aft )\tq[++cnt] = i * h;\r\n\t\tfor ( int h = 1; h <= cnt; h++ )\taa = prime[q[h]].bef , bb = prime[q[h]].aft , prime[aa].aft = bb , prime[bb].bef = aa;\r\n\t}\r\n\tfor ( int i = 2; i <= 1000000; i = prime[i].aft )\tp[++cmp] = i;\r\n\tcin >> t;\r\n\twhile ( t-- )\r\n\t{\r\n\t\tcin >> n >> m;\r\n\t\tfor ( int i = 1; i <= n; i++ )\r\n\t\t{\r\n\t\t\tcin >> a[i];\r\n\t\t\tif ( fnd( p , a[i] ) )\tp1.push( a[i] );\r\n\t\t}\r\n\t\tfor ( int i = 1; i <= m; i++ )\r\n\t\t{\r\n\t\t\tcin >> b[i];\r\n\t\t\tif ( fnd( p , b[i] ) )\tp2.push( b[i] );\r\n\t\t}\r\n\t\tbool flag = false , jug = true;\r\n\t\tif ( p1.size() <= p2.size() )\tcout << \"NO\\n\";\r\n\t\telse\r\n\t\t{\r\n\t\t\twhile ( !p2.empty() )\r\n\t\t\t{\r\n\t\t\t\tif ( p1.top() != p2.top() && !flag )\tflag = true , p1.pop();\r\n\t\t\t\telse\tif ( p1.top() != p2.top() && flag )\r\n\t\t\t\t{\r\n\t\t\t\t\tcout << \"NO\\n\" , flag = false , jug = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse\tp1.pop() , p2.pop();\r\n\t\t\t}\r\n\t\t\tif ( flag || p1.size() == 1 && p2.size() == 0 )\tcout << \"YES\\n\";\r\n\t\t\telse\tif ( jug )\tcout << \"NO\\n\";\r\n\t\t}\r\n\t\twhile ( !p1.empty() )\tp1.pop();\r\n\t\twhile ( !p2.empty() )\tp2.pop();\r\n\t}\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1672574131,
        "uid": 726395,
        "name": "ztntonny",
        "ccfLevel": 4,
        "title": "P4752\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u7b80\u5355\u7684(\u6570\u8bba?)\u9898\uff0c\u5927\u81f4\u601d\u8def\u5f88\u7b80\u5355\uff0c\u51fa\u9898\u4eba\u5927\u4f6c\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\uff0c\u8fd9\u91cc~~\u8865\u5145\u4e00\u70b9~~\uff1a\n\n- \u5410\u69fd\u6570\u636e\uff0c\u672c\u4eba\u6ca1\u6709\u52a0\u4e00\u4e9b\u5bf9\u4e00\u7684\u7279\u5224\u90fdAC\u4e86\u672c\u9898\uff0c\u4e0d\u5f97\u4e0d\u8bf4\u6570\u636e\u6709\u4e00\u70b9\u6c34\u4e86\uff08\u53ea\u662f\u4e00\u90e8\u5206\u7279\u5224\u6ca1\u52a0\uff09\n\n\u5148\u7ed9\u51fa\u542b\u6709\u9519\u8bef\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>//\u4e0d\u52a0\u522b\u7684\u6ce8\u91ca\u4e86\uff0c\u53ea\u6307\u51fa\u9519\u8bef\u90e8\u5206\n#define int long long\nusing namespace std;\nbool prime(int a){\n    if(a==2||a==3)return 1;if(a%2==0)return 0;\n    for(int i=3;i*i<=a;i++)if(a%i==0)return 0;return 1;\n}\nsigned main(){\n    int t,a,b,n[101001],m[101001],l,ll,num,ooo;\n    cin>>t;\n    while(t--){\n        l=0,ll=0,num=0,ooo=0;\n        cin>>a>>b;\n        for(int i=1;i<=a;i++)cin>>n[i];\n        for(int i=1;i<=b;i++)cin>>m[i];\n        sort(n+1,n+1+a),sort(m+1,m+1+b);\n        while(l<=a&&ll<=b){\n            if(n[l]>m[ll])ll++;\n            if(n[l]<m[ll])l++;\n            if(n[l]==m[ll])n[l]=-1,m[ll]=-1,l++,ll++;\n        }\n        for(int i=1;i<=a;i++){\n            if(n[i]>1)ooo=n[i];\n        }\n        if(a-b>1)cout<<\"NO\\n\";//\u8fd9\u884ccode\u662f\u6709\u95ee\u9898\u7684\uff0c\u5982\u679ca\u91cc\u5269\u4e0b\u7684\u5143\u7d20\u6709\u4e00\u4e2a\u8d28\u6570\uff0c\u5176\u4f59\u5747\u4e3a1\uff0c\u90a3\u4e48\u7a0b\u5e8f\u4ecd\u7136\u4f1a\u8f93\u51fa\"NO\"\uff0c\u800c\u6b63\u89e3\u662f\"YES\"\n        else if(prime(ooo))cout<<\"YES\\n\";\n        else cout<<\"NO\\n\";\n    }\n}\n```\n\n\u6b63\u89e3\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nbool prime(int a){\n    if(a==2||a==3)return 1;if(a%2==0)return 0;\n    for(int i=3;i*i<=a;i++)if(a%i==0)return 0;return 1;\n}//\u6734\u7d20\u7684\u5224\u65ad\u8d28\u6570\nsigned main(){\n    int t,a,b,n[101001],m[101001],l,ll,num,ooo;\n    cin>>t;\n    while(t--){\n        l=0,ll=0,num=0,ooo=0;\n        cin>>a>>b;\n        for(int i=1;i<=a;i++)cin>>n[i];\n        for(int i=1;i<=b;i++)cin>>m[i];\n        sort(n+1,n+1+a),sort(m+1,m+1+b);//\u6392\u5e8f\n        while(l<=a&&ll<=b){\n            if(n[l]>m[ll])ll++;\n            if(n[l]<m[ll])l++;\n            if(n[l]==m[ll])n[l]=-1,m[ll]=-1,l++,ll++;//\u5254\u9664\u91cd\u590d\u90e8\u5206\n        }\n        for(int i=1;i<=a;i++){\n            if(n[i]>1)ooo=n[i];//\u7b97\u51fa\u6700\u540e\u4e0d\u662f\u4e00\u7684\u7684\u6570\u7684\u503c\n            if(n[i]==1)a--;//\u5c06\u4e00\u5254\u9664\n        }\n        if(a-b>1)cout<<\"NO\\n\";//\u5982\u679c\u5df2\u7ecf\u542b>1\u4e2a\u8d28\u6570\uff0c\u90a3\u4e48\u663e\u7136\u8981\u8f93\u51fa\"NO\"\n        else if(prime(ooo))cout<<\"YES\\n\";//\u7b26\u5408\u8981\u6c42\n        else cout<<\"NO\\n\";\n    }//exit(0);\n}\n```\n\n\u989d\uff0c\u6700\u540e\u5462\uff0c\u672c\u849f\u84bb\u53d1\u73b0\u4e00\u4e9b\u6781\u5176\u7279\u6b8a\u7684\u6570\u636e\u80fd\u591f\u5c06\u4e24\u7bc7\u4ee3\u7801\u90fd\u5361\u6389\uff0c\u6240\u4ee5\u5982\u679c\u6709\u5927\u4f6c\u80fd\u77e5\u9053\u4e3a\u4ec0\u4e48\u4f1a\u9519\uff0c\u9ebb\u70e6\u79c1\u4fe1\u544a\u8bc9\u6211\u4e00\u4e0b",
        "postTime": 1571397952,
        "uid": 209547,
        "name": "infinities",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4752 \u3010Divided Prime\u3011"
    },
    {
        "content": "\u5927\u8d28\u6570\u5224\u5b9a\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u7528**Miller_Rabin**\u7b97\u6cd5\u5462\uff1f\n\n\u9996\u5148\uff0c\u8981\u4f7fA/B\u662f\u4e00\u4e2a\u8d28\u6570\uff0c\u524d\u63d0\u6761\u4ef6\u662fA\u4e2d\u56e0\u5b50\u4e2a\u6570\u4e25\u683c\u6bd4B\u4e2d\u7684\u591a1\u4e2a\uff08\u522b\u5fd8\u4e86\u53bb\u96641\uff09\u3002\n\n\u7136\u540e\u5bf9\u5269\u4e0b\u7684\u90a3\u4e2a\u6570Miller_Rabin\u5224\u5b9a\u5c31\u597d\u4e86\u3002\u3002\u3002\n\nPascal Code\uff1a\n\n```cpp\nconst prime:array[1..14]of longint=(2,3,5,7,11,13,17,19,37,43,67,73,97,101);\nvar\n  a,b:array[0..200005]of int64;\n  t,i,j,jn,jm,n,m:longint;\n  x,s:int64;\nprocedure qsort1(l,r:longint);\nvar\n  i,j,k:longint;\n  t:int64;\nbegin\n  i:=l;\n  j:=r;\n  k:=(i+j) div 2;\n  t:=a[k];\n  a[k]:=a[i];\n  while i<j do\n  begin\n    while (i<j) and (a[j]>t) do\n      dec(j);\n    if i<j then\n    begin\n      a[i]:=a[j];\n      inc(i);\n    end;\n    while (i<j) and (a[i]<t) do\n      inc(i);\n    if i<j then\n    begin\n      a[j]:=a[i];\n      dec(j);\n    end;\n  end;\n  a[i]:=t;\n  if i-1>l then\n    qsort1(l,i-1);\n  if i+1<r then\n    qsort1(i+1,r);\nend;\nprocedure qsort2(l,r:longint);\nvar\n  i,j,k:longint;\n  t:int64;\nbegin\n  i:=l;\n  j:=r;\n  k:=(i+j) div 2;\n  t:=b[k];\n  b[k]:=b[i];\n  while i<j do\n  begin\n    while (i<j) and (b[j]>t) do\n      dec(j);\n    if i<j then\n    begin\n      b[i]:=b[j];\n      inc(i);\n    end;\n    while (i<j) and (b[i]<t) do\n      inc(i);\n    if i<j then\n    begin\n      b[j]:=b[i];\n      dec(j);\n    end;\n  end;\n  b[i]:=t;\n  if i-1>l then\n    qsort2(l,i-1);\n  if i+1<r then\n    qsort2(i+1,r);\nend;\nfunction cf(n,m,p:int64):int64;//\u5927\u6574\u6570\u4e58+mod\nvar\n  ans:int64;\nbegin\n  ans:=0;\n  while m<>0 do\n  begin\n    if m and 1<>0 then\n      ans:=(ans+n) mod p;\n    m:=m >> 1;\n    n:=n << 1 mod p;\n  end;\n  exit(ans);\nend;\nfunction ksm(x,y,p:int64):int64;//\u5feb\u901f\u5e42\nvar\n  zc:int64;\nbegin\n  if y=1 then\n    exit(x mod p);\n  zc:=ksm(x,y div 2,p);\n  if odd(y) then\n    exit(cf(zc,zc,p) mod p*x mod p) else\n    exit(cf(zc,zc,p) mod p);\nend;\nfunction Miller_Rabin(n:int64):boolean;//\u7d20\u6570\u5224\u5b9a\nvar\n  i,j,t:longint;\n  now,res,u:int64;\nbegin\n  Miller_Rabin:=true;\n  if n=1 then\n    exit(false);\n  for i:=1 to 5 do\n  begin\n    if prime[i]=n then\n      exit(true);\n    if n mod prime[i]=0 then\n      exit(false);\n  end;\n  u:=n-1;\n  t:=0;\n  while u mod 2=0 do\n  begin\n    u:=u >> 1;\n    inc(t);\n  end;\n  for i:=1 to 5 do\n  begin\n    now:=ksm(prime[i],u,n);\n    for j:=1 to t do\n    begin\n      res:=cf(now,now,n);\n      if (res=1) and (now<>1) and (now<>n-1) then\n        exit(false);\n      now:=res;\n    end;\n    if now<>1 then\n      exit(false);\n  end;\nend;\nbegin\n  readln(t);\n  for i:=1 to t do\n  begin\n    readln(jn,jm);\n    n:=0;\n    m:=0;\n    for j:=1 to jn do\n    begin\n      read(x);\n      if x<>1 then//\u53bb\u96641\n      begin\n        inc(n);\n        a[n]:=x;\n      end;\n    end;\n    readln;\n    for j:=1 to jm do\n    begin\n      read(x);\n      if x<>1 then//\u53bb\u96641\n      begin\n        inc(m);\n        b[m]:=x;\n      end;\n    end;\n    readln;\n    if (n=0) or (n<>m+1) then\n      writeln('NO') else\n      begin\n        qsort1(1,n);\n        qsort2(1,m);\n        s:=-1;\n        for j:=1 to m do\n        if a[j]<>b[j] then//\u627e\u51fa\u6570\n        begin\n          s:=a[j];\n          break;\n        end;\n        if s=-1 then\n          s:=a[n];\n        if Miller_Rabin(s) then\n          writeln('YES') else\n          writeln('NO');\n      end;\n  end;\nend.\n```",
        "postTime": 1536836424,
        "uid": 10341,
        "name": "GK0328",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4752 \u3010Divided Prime\u3011"
    },
    {
        "content": "# [P4752](https://www.luogu.org/problemnew/show/P4752)\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(N+$ $\\sqrt{a_x}$)\n\u57fa\u672c\u601d\u60f3:  \n- \u7531\u9898\u76ee\u4e2d\"\u4fdd\u8bc1\u5bf9\u4e8e\u4e00\u4e2a\u6570\u5b57\uff0c\u5176\u5728 ${b}$\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u4e0d\u591a\u4e8e\u5728 $a$\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\"\u53ef\u77e5\uff0c$a$\u548c$b$\u53ef\"\u7ea6\u5206\"\n- \u82e5\u6570\u5217 $a$\uff0c$b$\u4e2d\u90fd\u4e0d\u542b\u6709 1 \n   - \u82e5 $n == m$ ,\u5219\u4e00\u5b9a\u6709 $\\Pi a_i$/$\\Pi b_i$ == 1 \n   - \u82e5 $n - m \\geq 2 $,\u5219$\\Pi a_i$ / $\\Pi b_i$ $\\neq$ \u7d20\u6570\n   - \u82e5 $n - m == 1 $,\u5219 $\\Pi a_i / \\Pi b_i$ \u4e00\u5b9a\u53ea\u542b\u6709\u4e00\u4e2a\u6570,\u53ea\u9700\u5224\u65ad\u6b21\u6570\u662f\u5426\u4e3a\u8d28\u6570  \n   \n> $ Q:$ \u5982\u4f55\u5f97\u5230\u8fd9\u4e2a\u6570?  \n> $A:xor!  $\n\n\u56e0\u4e3a\u9664\u4e86\u6b21\u6570\u5916\u7684\u6240\u6709\u6570\u5b57\u90fd\u662f\"\u4e24\u4e24\u5bf9\u5e94\",\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u4e24\u904d $xor$ \u5c06\u5176\u62b5\u6d88,\u65e0\u9700\u6392\u5e8f!\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <iostream>\nusing namespace std;\ntypedef long long ll;\nconst int MAXN=1e5+1;\nll a[MAXN],b[MAXN];\ninline ll readll()\n{\n    ll f=1,x=0;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    return f*x; \n}\nbool is_prime(ll x)\n{\n    if(x==2)return true;\n    if(!(x%2))return false; \n    ll m=sqrt(x+0.5);\n    for(ll i=3;i<=m;i+=2)if(!(x%i))return false;\n    return true;\n}\nint main()\n{\n    int T;scanf(\"%d\",&T);\n    while(T--)\n    {\n        int n,m;\n        scanf(\"%d %d\",&n,&m);\n        for(int i=0;i<n;i++)a[i]=readll();\n        for(int i=0;i<m;i++)b[i]=readll();\n        ll x=0,cnt1=0,cnt2=0;\n        for(int i=0;i<n;i++){\n            x ^= a[i];\n            if(a[i]==1)cnt1++;\n        }\n        for(int i=0;i<m;i++)\n        {\n            if(b[i]==1)cnt2++;\n            x ^= b[i];\n        }\n        if((n-cnt1)-(m-cnt2)>=2){\n            printf(\"NO\\n\");\n            continue;\n        }\n        ll cnt=cnt1+cnt2;\n        if(cnt%2)x ^= 1;\n        if(x==0 || x==1 || !is_prime(x))printf(\"NO\\n\");\n        else printf(\"YES\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1531669191,
        "uid": 35335,
        "name": "\u6624\u663d",
        "ccfLevel": 0,
        "title": "P4752"
    },
    {
        "content": "\u53ea\u6709\u7ba1\u7406\u5927\u5927\u7684\u9898\u89e3\uff0c\u601d\u8def\u597d\u50cf\u5f88\u5947\u7279\uff0c\u611f\u89c9\u81ea\u5df1\u7684\u89e3\u9898\u601d\u60f3\u6bd4\u8f83\u597d\u3002\n\u5e94\u8be5\u4e0d\u4f1a\u6709bug\u3002\n\n\u6233\u8fd9\u91cc\u9605\u8bfb\u6548\u679c\u66f4\u68d2\u54e6\uff1a[luogu 7\u6708\u6708\u8d5b #A \u89e3\u8bfb](https://www.cnblogs.com/rmy020718/p/9311785.html)\n\n## \u5410\u69fd\u4e24\u53e5\uff1a\n\n\u8bf4\u597d\u7684\u96be\u5ea6\u4ece\u666e\u53ca-\u5230\u7701\u9009\u5462\uff1f\u666e\u53ca-\u96be\u5ea6\u5462\uff1f\u6700\u4f4e\u7684\u53ea\u6709 \u666e\u53ca+\u63d0\u9ad8-\u7684\u5427\uff0c\u7136\u800c\u6211\u770b\u7740\u90fd\u60f3\u7701\u9009\u9898\u3002\n\n## \u4f53\u9762\u89e3\u8bfb\u89e3\u9898\u5206\u6790\uff1a\n\n\u9898\u9762\u7b80\u6d01\u6613\u61c2\uff0c\u53ea\u662f\u6839\u636e\u6570\u636e\u8303\u56f4\uff0c\u8c8c\u4f3c\u5982\u679c\u76f8\u4e58\u7684\u8bddlong long \u6050\u6015\u90fd\u76db\u4e0d\u5f00\u3002\n\n\u7136\u800c\u7ec6\u7ec6\u8bfb\u9898\u76ee\u4f60\u4f1a\u53d1\u73b0\uff0c\u6709\u53e5\u5f88\u91cd\u8981\u7684\u8bdd\n(\u4fdd\u8bc1\u5bf9\u4e8e\u4e00\u4e2a\u6570\u5b57\uff0c\u5176\u5728 {bi}\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u4e0d\u591a\u4e8e\u5728 {ai}\u4e2d\u51fa\u73b0\u7684\u6570)\n\n\u65e2\u7136\u662fA/B\uff0c\u90a3\u4e48 \u96c6\u5408A \u4e0e \u96c6\u5408B\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u5148\u63d0\u524d\u7ea6\u5206\u554a\u3002\n\n\u8fd9\u53e5\u8bdd\u8bf4\u7684\u6570\u5b57\u5728 B \u4e2d\u51fa\u73b0\u6b21\u6570\u4e00\u5b9a\u5c11\u4e8e A\u4e2d\u7684\u6b21\u6570\uff0c\u90a3\u4e48\u8fd9\u8bf4\u660eB\u4e2d\u7684\u6570\u5b57\u53ef\u4ee5\u5728A\u4e2d\u5168\u90e8\u7ea6\u53bb\uff0c\u90a3\u4e48B=1\u54af\uff0c\u6240\u4ee5A/B\u7684\u503c\u4e0d\u5c31\u662fA\u4e2d\u6240\u5269\u5143\u7d20\u7684\u4e58\u79ef\u561b\u3002\n\n\u5c11\u5e74\uff0c\u83ab\u7740\u6025\uff0c\u7b49\u6211\u628a\u8bdd\u8bf4\u5b8c\u3002\n\nA\u4e2d\u5143\u7d20\u7684\u4e58\u79ef\u96be\u9053\u5c31\u4f1a\u5c0f\uff1f\u7edd\u5bf9\u6709\u6570\u636e\u4f1a\u4e58\u4e0d\u5f00\u3002\n\n\u6240\u4ee5\u5728\u7ea6\u5206\u5b8c\u4ee5\u540e\uff0c\u9700\u8981\u4e00\u4e2a\u6bd4\u8f83\u6709\u610f\u601d\u7684\u5224\u65ad\u3002\n\n\u4f60\u60f3A\u4e2d\u5143\u7d20\u7684\u4e58\u79ef\uff0c\u65e2\u7136\u53ef\u4ee5\u4e58\u51fa\u6765\uff0c\u90a3\u4e48\u4e00\u5b9a\u5c31\u4e0d\u662f\u7d20\u6570(prime).(emmm...\u8bf4\u7684\u5728\u7406)\n\n\u8fd8\u9700\u8981\u52a0\u4e00\u4e2a\u5224\u65ad\uff0c\u5982\u679cA\u4e2d\u53ea\u5269\u4e0b\u4e00\u4e2a\u5143\u7d20\u540e\uff0c\u90a3\u4e48\u4e58\u79ef\u5c31\u662f\u8fd9\u4e2a\u6570\u4e86\uff0c\u5219\u9700\u8981\u5224\u65ad\u4e00\u4e0b\u8fd9\u4e2a\u6570\u662f\u5426\u4e3a\u7d20\u6570\u3002\n\n1012\u5927\u7684\u6570\uff0c\u7528\u4ec0\u4e48\u5224\u65ad\u5462\uff1f\n\n\u5f53\u7136\u662f Miller_Rabin \u7b97\u6cd5\u5224\u65ad\u4e86\uff0c\u4e0b\u9762\u7ed9\u51fa\u4e86\u6a21\u677f\u3002\n\n\u6240\u4ee5\u6b64\u9898\u5c31\u89e3\u51b3\u5b8c\u4e86\u3002\n\n\u6240\u4ee5\u4ee3\u7801\u5c31\u6bd4\u8f83\u597d\u5199\u4e86\uff0c\u4e0a\u8fb9\u7f51\u5740\u6709 Miller_Rabin \u677f\u5b50\u3002\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <queue>\n#include <map>\nusing  namespace std;\n#define N int(1e6+2)\n#define M int(2e5+2)\n#define ll long long\nll n,m,T;\nll a[N],b,c[N],tot;\nmap<ll,int> f;\nbool vis[N];\nll sum;\nll add_mod(ll a,ll b,ll mod)\n{\n    ll ans=0;\n    while(b)\n    {\n        if(b&1)\n            ans=(ans+a)%mod;\n        a=a*2%mod;\n        b>>=1;\n    }\n    return ans;\n}\n\nll pow_mod(ll a,ll n,ll mod)\n{\n    if(n>1)\n    {\n        ll tmp=pow_mod(a,n>>1,mod)%mod;\n        tmp=add_mod(tmp,tmp,mod);\n        if(n&1) tmp=add_mod(tmp,a,mod);\n        return tmp;\n    }\n    return a;\n}\n\nbool Miller_Rabbin(ll n,ll a)\n{\n    ll d=n-1,s=0,i;\n    while(!(d&1))\n    {\n        d>>=1;\n        s++;\n    }\n    ll t=pow_mod(a,d,n);\n    if(t==1 || t==-1)\n        return 1;\n    for(i=0; i<s; i++)\n    {\n        if(t==n-1)\n            return 1;\n        t=add_mod(t,t,n);\n    }\n    return 0;\n}\nbool is_prime(ll n)\n{\n    ll i,tab[4]= {3,4,7,11};\n    for(i=0; i<4; i++)\n    {\n        if(n==tab[i])\n            return 1;\n        if(!n%tab[i])\n            return 0;\n        if(n>tab[i] && !Miller_Rabbin(n,tab[i]))\n            return 0;\n    }\n    return 1;\n}\nint main()\n{\n\n    scanf(\"%lld\",&T);\n    while(T--)\n    {\n        sum=1;\n        ll k=0,p;\n        scanf(\"%lld%lld\",&n,&m);\n        for(int i=1; i<=n; i++)\n        scanf(\"%lld\",&a[i]),f[a[i]]++;;\n        for(int i=1; i<=m; i++)scanf(\"%lld\",&b),f[b]--;\n        for(int i=1; i<=n; i++)\n        {\n            if(f[a[i]])k+=f[a[i]],f[a[i]]=0,p=a[i];\n        }\n        f.clear();\n        if(k==1)\n        {\n            n=p;\n            if(n<2) printf(\"NO\\n\");\n            else if(n==2) printf(\"YES\\n\");\n            else\n            {\n                if(!n%2) printf(\"NO\\n\");\n                else if(is_prime(n))\n                    printf(\"YES\\n\");\n                else printf(\"NO\\n\");\n            }\n        }\n        else printf(\"NO\\n\");\n    }\n}\n```",
        "postTime": 1531615425,
        "uid": 61727,
        "name": "Manjusaka\u4e36\u68a6\u5bd2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4752 \u3010Divided Prime\u3011"
    },
    {
        "content": "\u6570\u636e\u8303\u56f4\u4e2d $n$ \u548c $m$ \u90fd\u53ef\u4ee5\u5230\u8fbe $10^5$ \u7ea7\u522b\uff0c\u800c\u4e14\u5355\u4e2a\u7684\u6570 $a_i$ \u548c $b_i$ \u8fbe\u5230\u4e86 $10^{12}$ \u7684\u6570\u91cf\u7ea7\uff0c\u663e\u7136\u4e0d\u80fd\u7528\u6734\u7d20\u7684\u65b9\u6cd5\u505a\uff08\u5373\u4f7f\u81ea\u5e26\u9ad8\u7cbe\u7684 Python \u4e5f\u5b58\u4e0d\u4e0b\u8fd9\u4e48\u591a\u4f4d\u6570\u5427\uff09\n\n\u6211\u4eec\u53d1\u73b0\u8f93\u5165\u7684\u90fd\u662f\u4e24\u4e2a~~\u5929\u6587~~\u6570\u5b57\u7684\u56e0\u5b50\uff0c\u663e\u7136\u5f53\u4e00\u4e2a\u6570\u62e5\u6709\u9664 1 \u4ee5\u5916\u7684\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u56e0\u5b50\u65f6\u4e0d\u662f\u8d28\u6570\u3002\n\n\u600e\u4e48\u529e\u5462\uff1f\u53ef\u4ee5\u8003\u8651\u62ff STL \u81ea\u5e26\u7684 map \u6784\u9020\u6620\u5c04\uff0c\u7528\u6765\u8bb0\u5f55\u6bcf\u4e2a\u56e0\u5b50\u51fa\u73b0\u7684\u6b21\u6570\uff0c`map<long long, int> cnt` \uff0c\u5176\u4e2d `Key` \u662f\u8f93\u5165\u7684\u56e0\u5b50\uff0c`Value` \u662f\u8fd9\u4e2a\u56e0\u5b50\u51fa\u73b0\u7684\u6b21\u6570\uff08`map<Key, Value>`\uff09\u3002\u8f93\u5165\u7b2c\u4e00\u4e2a\u6570$A$\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5728\u7edf\u8ba1\u65f6\u52a0\u4e0a\u56e0\u5b50\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u8f93\u5165\u7b2c\u4e8c\u4e2a\u6570$B$\u7684\u65f6\u5019\u51cf\u53bb\u56e0\u5b50\u51fa\u73b0\u7684\u4e2a\u6570\uff08\u76f8\u5f53\u4e8e\u7ea6\u5206\u4e86\uff09\uff0c\u8fd9\u6837 map \u8bb0\u5f55\u7684\u5e94\u8be5\u662f\u6700\u7ec8\u9664\u6cd5\u8ba1\u7b97\u7684\u7ed3\u679c\u7684\u56e0\u5b50\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u597d\u529e\u4e86\u3002\u53ea\u8981 map \u7684\u5927\u5c0f\u5927\u4e8e 1\uff0c\u90a3\u4e48\u8bf4\u660e\u5b83\u4e00\u5b9a\u5b58\u5728\u4e24\u4e2a\u6216\u4ee5\u4e0a\u7684\u4e0d\u540c\u56e0\u5b50\uff0c\u4e00\u5b9a\u4e0d\u662f\u8d28\u6570\uff0c\u8f93\u51fa `NO` \u5373\u53ef\u3002\n\u7136\u540e\u5982\u679c map \u7684\u5927\u5c0f\u7b49\u4e8e 1 \u7684\u8bdd\uff0c\u5c31\u770b\u8fd9\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u4e86\uff0c\u5982\u679c\u51fa\u73b0\u7684\u6b21\u6570\u5927\u4e8e 1\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u4e5f\u4e0d\u662f\u8d28\u6570\u3002\n\u6700\u540e\u5982\u679c\u8fd9\u4e2a\u6570\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\uff0c\u8bf4\u660e\u7ed3\u679c\u5c31\u662f\u8fd9\u4e2a\u6570\uff0c\u53ea\u8981\u7528 $O(\\sqrt{N})$ \u7684\u7b97\u6cd5\u5224\u65ad\u8fd9\u4e2a\u6570\u662f\u5426\u662f\u8d28\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxN = 1e5 + 3;\nint T, n, m;\ntemplate<typename Tp> void read(Tp &x) {\n\tchar c = getchar();\n\tx = 0;\n\twhile (!isdigit(c)) c = getchar();\n\tdo {\n\t\tx = (x * 10) + (c ^ 48);\n\t\tc = getchar();\n\t} while (isdigit(c));\n}\nbool isprime(long long x) {\n\tlong long tmp = sqrt(x);\n\tfor (long long i = 2; i <= tmp; i++)\n\t\tif (!(x % i)) return false;\n\treturn true;\n}\nint main() {\n\tread(T);\n\twhile (T--) {\n\t\tmap<long long, int> cnt;\n\t\tread(n), read(m);\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tlong long num;\n\t\t\tread(num);\n\t\t\tif (num == 1) continue; // \u5982\u679c\u662f 1 \u5c31\u8df3\u8fc7\uff081 \u6709\u6ca1\u6709\u90fd\u4e00\u6837\uff09\n\t\t\tcnt[num]++;\n\t\t}\n\t\tfor (int i = 1; i <= m; i++) {\n\t\t\tlong long num;\n\t\t\tread(num);\n\t\t\tif (num == 1) continue;\n\t\t\tif(!(--cnt[num]))\n\t\t\t\tcnt.erase(num);\n\t\t}\n\t\tif (cnt.size() != 1) printf(\"NO\\n\");\n\t\telse {\n\t\t\tlong long num = cnt.begin()->first;\n\t\t\tint sum = cnt.begin()->second;\n\t\t\tif (sum != 1) printf(\"NO\\n\");\n\t\t\telse if (isprime(num)) printf(\"YES\\n\");\n\t\t\telse printf(\"NO\\n\");\n\t\t}\n\t}\n}\n```",
        "postTime": 1531611109,
        "uid": 46833,
        "name": "hawa130",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4752 \u3010Divided Prime\u3011"
    },
    {
        "content": "~~\u8fd9\u9898\u88ab\u8bc4\u6210\u7eff\u9898\u771f\u5fc3\u89c9\u5f97\u4e0d\u59a5~~\n\n~~\u4e5f\u5c31\u6a59\u9898\u5427\u3002\u3002\u3002~~\n\n\u54b3\u54b3\uff0c\u8a00\u5f52\u6b63\u4f20\uff0c\u9996\u5148\u6211\u5728\u6708\u8d5b\u7684\u65f6\u5019\u770b\u5230\u8fd9\u9898\uff0c\u6761\u4ef6\u53cd\u5c04\u662f\uff1a\n\n### \u6211\u4e0d\u8981\u9ad8\u7cbe\uff01\uff01\uff01$QWQ$\n\n\u4e8e\u662f\u5c31\u4e00\u672c\u6b63\u7ecf\u7684~~\u80e1\u8bf4\u516b\u9053~~\u627e\u89c4\u5f8b\u3002\u3002\u3002\n\n\u9996\u5148\uff0c$A,B$\u4e24\u4e2a\u6570\u80af\u5b9a\u6709\u8bb8\u8bb8\u591a\u591a\u80fd\u591f\u7ea6\u6389\u7684\u56e0\u6570\u7684\uff1b\n\n\u5176\u6b21\uff0c\u76f4\u63a5\u4e58\u8d77\u6765\u4f1a\u59a5\u59a5\u7684\u7206\u70b8$QAQ$\uff1b\n\n\u4f46\u662f\u8981\u5224\u65ad\u7684\u8fc7\u7a0b\u5176\u5b9e\u5199\u6210\u4e00\u4e2a\u7b97\u5f0f\u662f\u8fd9\u6837\u7684\uff1a\n\n$A/B=(a_1*a_2*a_3*...*a_n)/(b_1*b_2*b_3*...*b_m)$\n\n\u6253\u5f00\u62ec\u53f7\uff0c\u5f97\uff1a\n\n$A/B=a_1*a_2*a_3*...*a_n/b_1/b_2/b_3/.../b_m$\n\n\u73b0\u5728\u5e94\u8be5\u505a\u4ec0\u4e48\u5462\uff1f\n\n\u5176\u5b9e\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u6240\u6b20\u7f3a\u7684\u6761\u4ef6\u5c31\u662f\u628a\u6570\u636e\u5168\u90e8\u4e58\u8d77\u6765\u518d\u505a\u9664\u6cd5\u4f1a\u7206\u70b8\uff0c\u5982\u679c\u80fd\u8ba9\u4e2d\u95f4\u6570\u636e\u53d8\u5c0f\uff0c\u4e0d\u5c31$OK$\u4e86\uff1f\n\n\u6240\u4ee5\u518d\u628a\u5f0f\u5b50\u53d8\u5f62\uff1a\n\n$A/B=a_1/b_1*a_2/b_2*a_3/b_3*...*a_n$\n\n\u6f02\u4eae\uff01\u8fd9\u6837\u4e58\u9664\u4ea4\u66ff\uff0c\u4e2d\u95f4\u7684\u6570\u5b57\u5c31\u4e0d\u4f1a\u8fc7\u5927\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd0\u7b97\u3002\n\n\u4f46\u662f\u6709\u65f6$n\u2260m$\uff0c\u600e\u4e48\u529e\uff1f\n\n\u53ef\u4ee5\u518d\u5b9e\u73b0\u7a0b\u5e8f\u65f6\u7a7a\u4f4d\u9664\u4ee51\uff0c\u4e0d\u5f71\u54cd\u7ed3\u679c\u3002\n\n\u73b0\u5728\u53ef\u4ee5\u6253\u4ee3\u7801\u4e86\uff0c\u8bb0\u5f97\u6570\u7ec4\u5f00\u5927\u4e00\u70b9\uff01$QWQ$\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nlong long t,n,m,a[1000001],b[1000001];\ndouble s;//A/B\u7684\u7ed3\u679c\nbool prime(long long x)//\u7d20\u6570\u5224\u65ad\u673a\u5668\uff0c\u4e0d\u89e3\u91ca\n{\n    if(x<2)\n        return false;\n    if(x==2)\n        return true;\n    double p=sqrt(x)+0.5;\n    for(register long long i=2;i<=p;i++)\n        if(x%i==0)\n            return false;\n    return true;\n}\nint main()\n{\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        s=1.0000;//\u521d\u59cb\u5316\u4e3a1\uff0c\u5426\u5219\u4f1aWA\n        scanf(\"%d%d\",&n,&m);\n        memset(a,0,sizeof(a));//\u522b\u5fd8\u6e05\u96f6\n        memset(b,0,sizeof(b));\n        for(register long long i=1;i<=n;i++)\n            scanf(\"%d\",&a[i]);\n        for(register long long i=1;i<=m;i++)\n            scanf(\"%d\",&b[i]);\n        for(register long long int i=1;i<=n;i++)\n            s*=a[i]*1.0/(b[i]==0? 1:b[i]);//\u4e58\u9664\u6cd5\u4ea4\u66ff\u6c42\u503c\uff0c\u5982\u679c\u6ca1\u6709b[i]\u5219\u9664\u4ee51\n        if(floor(s)!=s)//\u5148\u5224\u65ads\u662f\u5426\u662f\u6574\u6570\n        {\n            printf(\"NO\\n\");\n            continue;//\u6267\u884c\u4e0b\u4e00\u6b21\u5faa\u73af\n        }\n        if(prime((long long)s))//\u518d\u5224\u65ad\u7d20\u6570\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1533020679,
        "uid": 85682,
        "name": "\u7edd\u9876\u6211\u4e3a\u5cf0",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4752 \u3010Divided Prime\u3011"
    },
    {
        "content": "\u505a\u6cd5\u548c\u6807\u7a0b\u7565\u6709\u4e0d\u540c\uff0c\u6240\u4ee5\u5c31\u6765\u53d1\u4e00\u53d1\u9898\u89e3\n\n\u9996\u5148\u8981\u6ce8\u610f\u5230\u4e00\u70b9\uff0c\u9898\u76ee\u4e2d\u8bf4\u5230\n\n\u4fdd\u8bc1\u5bf9\u4e8e\u4e00\u4e2a\u6570\u5b57\uff0c\u5176\u5728 $bi$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u4e0d\u591a\u4e8e\u5728 $ai$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u5c31\u662fb\u6570\u7ec4\u4e2d\u51fa\u73b0\u7684\u6570\u5168\u90fd\u662fa\u6570\u7ec4\u91cc\u9762\u6709\u7684\uff0c\u800c\u4e14\u7edd\u5bf9\u4e0d\u4f1a\u8d85\u8fc7\u5728a\u6570\u7ec4\u91cc\u9762\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u4e3a\u4ec0\u4e48\uff1f\u5982\u679c\u4f60\u5728b\u4e2d\u6709\u4e00\u4e2aa\u4e2d\u6ca1\u6709\u51fa\u73b0\u7684\u6570\uff0c\u90a3\u4e48\u5b83\u5728b\u4e2d\u51fa\u73b0\u4e86\u4e00\u6b21\uff0c\u5728a\u4e2d\u51fa\u73b0\u4e860\u6b21\uff0c\u663e\u7136\u8fdd\u80cc\u4e86\u9898\u76ee\u63cf\u8ff0\n\n\u770b\u5230\u6807\u7a0b\u90a3\u91cc\u4e0d\u77e5\u9053\u7684\u4eba\u5728\u95ee\u5c31\u987a\u4fbf\u89e3\u7b54\u4e00\u4e0bqwq\n\n\u518d\u56de\u60f3\u4e00\u4e0b\u7d20\u6570\u7684\u5b9a\u4e49\uff0c\u53ea\u8981\u4e00\u4e2a\u6570\u53ef\u4ee5\u7531\u9664\u4e861\u4e4b\u5916\u7684\u4efb\u610f\u4e24\u4e2a\u6570\u76f8\u4e58\u5f97\u5230\uff0c\u90a3\u4e48\u5b83\u5c31\u80af\u5b9a\u4e0d\u662f\u4e00\u4e2a\u7d20\u6570\n\n\u57fa\u4e8e\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u672c\u9898\u7684\u89e3\u6cd5\uff0c\u5728a\u6570\u7ec4\u4e2d\u628ab\u6570\u7ec4\u4e2d\u51fa\u73b0\u7684\u6570\u5220\u53bb\uff0c\u540c\u65f6\u628a\u6240\u6709\u76841\u5220\u53bb\uff081\u662f\u5bf9\u6211\u4eec\u7684\u7ed3\u679c\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\u7684\uff09\uff0c\u5269\u4e0b\u7684\u6570\u5982\u679c\u6570\u91cf\u5927\u4e8e1\uff0c\u90a3\u5c31\u80af\u5b9a\u4e0d\u662f\u7d20\u6570\uff0c\u53cd\u4e4b\uff0c\u5982\u679c\u6570\u91cf\u4e3a1\uff0c\u53ea\u8981\u5224\u65ad\u4e00\u4e0b\u5269\u4e0b\u7684\u90a3\u4e2a\u6570\u662f\u4e0d\u662f\u7d20\u6570\u5c31\u53ef\u4ee5\u4e86\n\n\u4e0e\u6807\u7a0b\u7565\u6709\u4e0d\u540c\u7684\u662f\uff0c\u5728a\u6570\u7ec4\u4e2d\u5220\u9664\u6389b\u6570\u7ec4\u65f6\uff0c\u6211\u91c7\u7528\u7684\u662f\u4e8c\u5206\u67e5\u627e\u7684\u65b9\u5f0f\n\n\u7136\u540e\u6ce8\u610f\u4e8c\u5206\u4e0d\u8981\u5199\u6302\u5c31\u597d\u4e86\uff0c\u6211\u8fd9\u9898\u6bd4\u8d5b\u65f6wa\u4e869\u6b21..\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define ll unsigned long long\n#define inf 1<<30\n#define il inline \n#define in1(a) readl(a)\n#define in2(a,b) in1(a),in1(b)\n#define in3(a,b,c) in2(a,b),in1(c)\n#define in4(a,b,c,d) in2(a,b),in2(c,d)\nil int max(int x,int y){return x>y?x:y;}\nil int min(int x,int y){return x<y?x:y;}\nil int abs(int x){return x>0?x:-x;}\nil void swap(int &x,int &y){int t=x;x=y;y=t;}\nil void readl(ll &x){\n    x=0;ll f=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-f;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    x*=f;\n}\nil void read(int &x){\n    x=0;int f=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-f;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    x*=f;\n}\nusing namespace std;\n/*===================Header Template=====================*/\n#define N 100010\nll t,n,m,a[N],f[N][2];\n//f\u6570\u7ec4\u8bb0\u5f55a\u4e2d\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\n//f[i][0]\u4e3a\u6570\u7684\u5927\u5c0f\uff0cf[i][1]\u4e3a\u8be5\u6570\u51fa\u73b0\u6b21\u6570\nbool isprime(ll x){//\u5224\u65ad\u662f\u5426\u7d20\u6570\uff0c\u662f\u8fd4\u56de1\uff0c\u4e0d\u662f\u5219\u8fd4\u56de0\n    for(ll i=2;i*i<=x;i++){\n        if(x%i==0)return 0;\n    }return 1;\n}\nint main(){\n    in1(t);\n    while(t--){\n        in2(n,m);\n        for(ll i=1;i<=n;i++)in1(a[i]);\n        sort(a+1,a+n+1);ll len=0;//\u8bb0\u5f97\u6392\u5e8f\n        for(ll i=1;i<=n;i++){\n            if(a[i]==1)continue;\n            if(a[i]!=f[len][0])f[++len][0]=a[i],f[len][1]=1;\n            else f[len][1]++;\n        }//\u5c06a\u6570\u7ec4\u5b58\u5165f\u6570\u7ec4\u4e2d\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\n        for(int i=1;i<=m;i++){//\u4e8c\u5206\u67e5\u627eb\u4e2d\u6bcf\u4e2a\u6570\u5728a\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5e76\u62b5\u6d88\n            ll x;in1(x);\n            if(x==1)continue;\n            int l=1,r=len;\n            while(l<=r){\n                ll mid=(l+r)>>1;\n                if(f[mid][0]>=x)r=mid-1;\n                else if(f[mid][0]<=x)l=mid+1;\n                else break;\n            }\n            f[l][1]--;\n        }ll k=0,ans=1;\n        for(int i=1;i<=len;i++)if(f[i][1])k+=f[i][1],ans*=f[i][0]*f[i][1];\n        if(k==1&&isprime(ans)){puts(\"YES\");continue;}\n        //\u62b5\u6d88\u540e\u53ea\u5269\u4e0b\u4e00\u4e2a\u6570\u4e14\u975e\u7d20\u6570\uff0c\u90a3\u4e48\u8f93\u51faYES\n        else puts(\"NO\");\n        //\u5426\u5219\u8f93\u51faNO\n    }\n    return 0;\n}\n```",
        "postTime": 1531616914,
        "uid": 36526,
        "name": "henry_y",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4752 \u3010Divided Prime\u3011"
    },
    {
        "content": "\u9898\u76ee\u4e2d\u5df2\u7ecf\u5f88\u660e\u786e\u4e86\uff0c\u5728b\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u5c11\u4e8e\u5728a\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2abi\uff0c\u4e00\u5b9a\u80fd\u627e\u5230\u548c\u5b83\u76f8\u7b49\u7684ai\uff0c\u4e5f\u5c31\u662f\u4e00\u5b9a\u80fd\u628aa\u4e2d\u76f8\u540c\u7684\u4e00\u4e2a\u6570\u7ea6\u6389\u3002\n\n------------\n\u5f97\u51fa\u8fd9\u4e2a\u7ed3\u8bba\u540e\u5c31\u597d\u529e\u4e86\u3002\u5982\u679cn\u6bd4m\u5927\u4e862\u6216\u4ee5\u4e0a\uff0c\u6700\u540e\u5728\u7ea6\u5b8c\u540e\u80af\u5b9a\u81f3\u5c11\u7559\u4e0b\u4e862\u4e2a\u6570\uff0c\u8fd9\u51e0\u4e2a\u6570\u76f8\u4e58\u4e0d\u53ef\u80fd\u4e3a\u8d28\u6570\uff0c\u5982\u679cn\u7b49\u4e8em\uff0c\u4e5f\u5c31\u662f\u8bf4\u6700\u540e\u5168\u88ab\u7ea6\u6389\u4e86\uff0c\u7ed3\u679c\u4e3a1\uff0c\u4e5f\u4e0d\u662f\u8d28\u6570\u3002\n\n\u540e\u6765\u7684\u8865\u5145:\n\n\u8981\u5bf91\u8fdb\u884c\u7279\u6b8a\u8003\u8651\uff0c\u5177\u4f53\u65b9\u6cd5\u5c31\u662f\u628aa\u548cb\u6570\u7ec4\u4e2d\u6240\u6709\u76841\u90fd\u62ff\u6389\uff0c\u7136\u540en\u548cm\u90fd\u5404\u81ea\u51cf\u53bb\u88ab\u62ff\u6389\u76841\u7684\u4e2a\u6570\u518d\u8fdb\u884c\u5224\u65ad\u3002\n(\u7136\u800c\u9898\u76ee\u6570\u636e\u6ca1\u6709\u5361\u8fd9\u4e00\u70b9)\n\u53ef\u4ee5\u5728\u8bfb\u5165\u7684\u65f6\u5019\u5b8c\u6210\uff0c\u8bfb\u53d6\u52301\u7684\u65f6\u5019\u5c31\u4e0d\u8bfb\u5165\uff0c\u7136\u540e\u6570\u91cf-1\n\u5177\u4f53\u4fee\u6539\u65b9\u6848\n```\nfor(int i=1;i<=n;i++)\n\tscanf(\"%lld\",&a[i]);\nfor(int j=1;j<=m;j++)\n\tscanf(\"%lld\",&b[j]);\n//\u4fee\u6539\u524d\n//==========================\n//\u4fee\u6539\u540e\nint i=1,j=1;\nwhile(i<=n)\n{\n\tscanf(\"%lld\",&a[i]);\n\tif(a[i]==1)\n\t{\n\t\ti--;\n\t\tn--;\n\t}\n\ti++;\n} \nwhile(j<=m)\n{\n\tscanf(\"%lld\",&b[j]);\n\tif(b[j]==1)\n\t{\n\t\tj--;\n\t\tm--;\n\t}\n\tj++;\n}\n\n```\n\n------------\n\u7efc\u4e0a\u5f97\uff0c\u53ea\u6709n=m+1\u65f6\u7ed3\u679c\u624d\u6709\u53ef\u80fd\u4e3a\u8d28\u6570\uff0c\u53ea\u8981\u5224\u65ada\u6bd4b\u591a\u51fa\u4e86\u54ea\u4e00\u4e2a\u6570\uff0c\u7136\u540e\u5224\u65ad\u591a\u51fa\u6765\u7684\u8fd9\u4e2a\u6570\u662f\u4e0d\u662f\u8d28\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\n\n------------\n\u6211\u7684\u65b9\u6cd5\u662f\u8bfb\u53d6a\uff0cb\u6570\u7ec4\u540e\u5bf9a\uff0cb\u5347\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u7b2c1\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u6bd4\u8f83\uff0c\u76f8\u540c\u5219\u90fd\u6bd4\u8f83\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4e0d\u76f8\u540c\u5c31\u6807\u8bb0\u5e76\u9000\u51fa\uff0c\u6b64\u65f6\u6807\u8bb0\u7684\u5c31\u662fa\u6570\u7ec4\u4e2d\u591a\u51fa\u6765\u7684\u90a3\u4e2a\u6570\u3002\n\u4ee3\u7801\u5b9e\u73b0\uff1a\n```cpp\nsort(a+1,a+n+1,Cmp);\nsort(b+1,b+m+1,Cmp);//\u5347\u5e8f\u6392\u5e8f\nmark=-1;\nfor(long long int j=1;j<=m;j++)\n//\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u7528\u4e86long long\n{\n\tif(a[j]!=b[j])\n\t{\n\t\tmark=j;\n\t\tbreak;\n\t}\n}\nif(mark==-1) mark=n;\n//\u7279\u6b8a\u60c5\u51b5\uff0c\u521a\u597da\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u6570\u662f\u591a\u51fa\u6765\u7684\n\n//\u8fd9\u65f6a[mark]\u5c31\u662f\u591a\u51fa\u6765\u7684\u8fd9\u4e2a\u6570\u4e86\uff0c\u5224\u65ad\u5b83\u662f\u4e0d\u662f\u8d28\u6570\u5373\u53ef\n```\n\u5b8c\u6574\u4ee3\u7801(\u672c\u840c\u65b0\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6211\u5168\u7528\u4e86long long\uff0c\u4ee3\u7801\u6709\u6b20\u7f3a\u8fd8\u8bf7dalao\u6307\u6b63):\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n\nusing namespace std;\n\nlong long int t,m,n;\nlong long int a[100010],b[100010];\n\nbool Cmp(long long int x,long long int y)\n{\n\treturn x<y;\n}\n\nint prime(long long int x)\n{\n\tif(x==1) return 0;\n\tlong long int k=sqrt(x);\n\tfor(long long int i=2;i<=k;i++)\n\t{\n\t\tif(x%i==0) return 0;\n\t}\n\treturn 1;\n}\n\nint main()\n{\n\tlong long int mark;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tmemset(a,0,sizeof(a));\n\t\tmemset(b,0,sizeof(b));\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tint i=1,j=1;\n\t\twhile(i<=n)\n\t\t{\n\t\t\tscanf(\"%lld\",&a[i]);\n\t\t\tif(a[i]==1)\n\t\t\t{\n\t\t\t\ti--;\n\t\t\t\tn--;\n\t\t\t}\n\t\t\ti++;\n\t\t} \n\t\twhile(j<=m)\n\t\t{\n\t\t\tscanf(\"%lld\",&b[j]);\n\t\t\tif(b[j]==1)\n\t\t\t{\n\t\t\t\tj--;\n\t\t\t\tm--;\n\t\t\t}\n\t\t\tj++;\n\t\t}\n\t\tif(n-m>=2||n==m)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tsort(a+1,a+n+1,Cmp);\n\t\tsort(b+1,b+m+1,Cmp);\n\t\tmark=-1;\n\t\tfor(long long int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(a[j]!=b[j])\n\t\t\t{\n\t\t\t\tmark=j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(mark==-1) mark=n;\n\t\tif(prime(a[mark])) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1531616657,
        "uid": 88711,
        "name": "LakeArcFox",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4752 \u3010Divided Prime\u3011"
    }
]