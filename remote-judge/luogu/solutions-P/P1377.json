[
    {
        "content": "# \u7b1b\u5361\u5c14\u6811\n\t\n#### \u901a\u8fc7\u4e24\u4e2a\u9898\u76ee\u66f4\u597d\u5730\u7406\u89e3\u7b1b\u5361\u5c14\u6811\n    \n## [\u3010\u6a21\u677f\u3011\u7b1b\u5361\u5c14\u6811](https://www.luogu.com.cn/problem/P5854)\n\n### Part 1\uff1a\u5b9a\u4e49\n\u5b9a\u4e49\u548c[Treap](https://www.luogu.com.cn/problem/P3369)\u76f8\u540c\uff1a\uff08Treap\u662f\u6743\u503c\u968f\u673a\u7684\u7b1b\u5361\u5c14\u6811\uff09\n\n- k\u6ee1\u8db3\u4e8c\u53c9\u641c\u7d22\u6811\u6027\u8d28\n\n- w\u6ee1\u8db3[\u5c0f\u6839\u5806](https://www.luogu.com.cn/problem/P3378)\u6027\u8d28\n\n\u672c\u9898\u4e0b\u6807\u4e3ak\uff0c\u5143\u7d20\u4e3aw\uff08\u9898\u76ee\u5b9a\u4e49\uff09\n\n\u6b63\u5e38\u6784\u5efa\u7684Treap\u5e94\u8be5\u662f\u4e0b\u6807\u4e3aw\uff0c\u5143\u7d20\u4e3ak\uff08\u53ef\u4ee5\u6a21\u62df\u63d2\u5165\u8fc7\u7a0b\u7406\u89e3\uff09 \u4f8b\u9898\uff1a[\u6811\u7684\u5e8f](https://www.luogu.com.cn/problem/P1377)\n\uff08\u4e0b\u9762\u6709\u4ee3\u7801\uff09\n\n### Part 2\uff1a\u6784\u5efa\n\n#### \u7528[\u5355\u8c03\u6808](https://www.luogu.com.cn/problem/P5788)\u7ef4\u62a4\u63d2\u5165\u7684\u4f4d\u7f6e\n\n\uff08\u4e0b\u6807\u5df2\u7ecf\u5355\u8c03\u9012\u589e\u4e86\uff0c\u6240\u4ee5\u65b0\u63d2\u5165\u7684\u70b9\u53ea\u80fd\u662f\u5df2\u524d\u9762\u70b9\u7684\u53f3\u513f\u5b50\u3001\u524d\u9762\u70b9\u53ea\u80fd\u662f\u5b83\u7684\u5de6\u513f\u5b50\uff09\n      \n- \u7528\u5355\u8c03\u6808\u7ef4\u62a4\u4e00\u4e2a\u6743\u503c\u5355\u8c03\u9012\u589e\u7684\u4e0b\u6807\u5e8f\u5217\uff0c\n\n- \u63d2\u5165\u4e00\u4e2a\u70b9\u65f6\u63d2\u5165\u5230\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5c0f\u7684\u70b9\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\uff08\u4f5c\u4e3a\u53f3\u513f\u5b50\uff09\u540e\uff0c\u5982\u679c\u9047\u5230\u4e86\u6bd4\u5b83\u5927\u7684\u70b9\uff0c\u5c06\u6700\u540e\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684\u70b9\u4f5c\u4e3a\u5de6\u513f\u5b50\n\n### code\n\n```cpp\n#include<bits/stdc++.h>\n#define re register\n#define il inline\n#define LL long long\nusing namespace std;\ntemplate<typename T>il void read(T &ff){\n    T rr=1;ff=0;re char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')rr=-1;ch=getchar();}\n    while(isdigit(ch)){ff=(ff<<1)+(ff<<3)+(ch^48);ch=getchar();}\n    ff*=rr;\n}\nconst int N=1e7+7;\nint n,a[N],stk[N],ls[N],rs[N];\nLL L,R;\nsigned main(){\n    read(n);\n    for(re int i=1,pos=0,top=0;i<=n;++i){//\u8fd9\u662f\u6309\u4e0b\u6807\u987a\u5e8f\u63d2\u5165\u5143\u7d20\u7684\u4ee3\u7801\n        read(a[i]);\n        //\u9664\u4e86\u4e0a\u8ff0\u7684\u7ef4\u62a4\u5de6\u53f3\u513f\u5b50\u5c31\u662f\u666e\u901a\u5355\u8c03\u6808\u5566\n        pos=top;\n        while(pos&&a[stk[pos]]>a[i])pos--;\n        if(pos)rs[stk[pos]]=i;\n        if(pos<top)ls[i]=stk[pos+1];\n        stk[top=++pos]=i;\n    }\n    for(re int i=1;i<=n;++i)L^=1LL*i*(ls[i]+1),R^=1LL*i*(rs[i]+1);\n    printf(\"%lld %lld\",L,R);\n    return 0;\n}\n```\n\n## [\u6811\u7684\u5e8f](https://www.luogu.com.cn/problem/P1377)\n\n### \u9898\u610f\uff1a\n\n\u7ed9\u4e00\u4e2a\u751f\u6210\u5e8f\u5217\uff0c\u5efa\u51fa\u4e00\u68f5\u7b1b\u5361\u5c14\u6811\uff0c\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u53ef\u4ee5\u5f97\u5230\u76f8\u540c\u7b1b\u5361\u5c14\u6811\u7684\u751f\u6210\u5e8f\u5217\n\n### \u9898\u89e3\n\n\u6309\u9898\u610f\u5efa\u597d\u6811\u4e4b\u540e\u8f93\u51fa[\u5148\u5e8f\u904d\u5386](https://baike.baidu.com/item/%E5%85%88%E5%BA%8F%E9%81%8D%E5%8E%86/6442839?fr=aladdin)\u5373\u53ef\n\n\u5efa\u6811\u7565\u6709\u4e0d\u540c\uff08\u4ee3\u7801\u4e2d\u6709\u6ce8\u91ca\uff09\n\n### code\n\n```cpp\n\u590d\u6742\u5ea6 O(N)\n#include<bits/stdc++.h>\n#define re register\n#define il inline\n#define LL long long\nusing namespace std;\ntemplate<typename T>il void read(T &ff){\n    T rr=1;ff=0;re char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')rr=-1;ch=getchar();}\n    while(isdigit(ch)){ff=(ff<<1)+(ff<<3)+(ch^48);ch=getchar();}\n    ff*=rr;\n}\nconst int N=1e5+7;\nint n,a[N],stk[N],ls[N],rs[N];\nvoid dfs(re int x){\n    if(x)printf(\"%d \",x),dfs(ls[x]),dfs(rs[x]);\n}\nsigned main(){\n    read(n);\n    for(re int i=1,x;i<=n;++i)read(x),a[x]=i;//\u4e0e\u7b1b\u5361\u5c14\u6811\u6a21\u677f\u4e0d\u540c\u4e4b\u5904\n                                            //\u8fd9\u91cc\u201c\u628a\u6743\u503c\u5f53\u505a\u4e0b\u6807\uff0c\u4ee5\u4e0b\u6807\u4e3a\u6743\u503c\u2018\u8f93\u5165\u2019a\u6570\u7ec4\u201d\uff0c\u5c31\u8f6c\u5316\u6210\u677f\u5b50\u5566\n    for(re int i=1,pos=0,top=0;i<=n;++i){\n        pos=top;\n        while(pos&&a[stk[pos]]>a[i])pos--;\n        if(pos)rs[stk[pos]]=i;\n        if(pos<top)ls[i]=stk[pos+1];\n        stk[top=++pos]=i;\n    }\n    dfs(stk[1]);\n    return 0;\n}\n```\n",
        "postTime": 1597979101,
        "uid": 286239,
        "name": "ql12345",
        "ccfLevel": 0,
        "title": "\u3010[TJOI2011]\u6811\u7684\u5e8f\u3011"
    },
    {
        "content": "\u5b89\u5229\u4e00\u4e0b[\u4e2a\u4eba\u535a\u5ba2](http://www.wjyyy.top/487.html)\uff0c\u867d\u7136\u53ef\u80fd\u6392\u7248\u6ca1\u6709\u8fd9\u91cc\u597d\u770b\u2026\u2026\n\n\u867d\u7136\u8fd9\u4e2a\u9898\u6b63\u89e3\u4e0d\u662f\u5e73\u8861\u6811\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u62ff\u5e73\u8861\u6811\u4f18\u5316\u4e00\u4e0b\u5e38\u6570\uff0c\u8fbe\u5230$ O(NlogN)$\u5c31\u80fd\u8fc7\u4e86\u3002\n\n### \u4e3a\u4ec0\u4e48\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u5462\uff1f \n**\u5e73\u8861\u6811**\u5957\u7528\u4e86BST\u7684\u4e00\u79cd\u6027\u8d28\uff0c\u5c31\u662f\u67d0\u6570\u5728\u63d2\u5165\u524d\uff08\u7b2c\u4e00\u4e2a\u6570\u8df3\u8fc7\uff09\uff0c\u8981\u4e48\u5b83\u7684\u524d\u9a71\u548c\u540e\u7ee7\u7684\u6df1\u5ea6\u662f\u4e0d\u540c\u7684\uff0c\u8981\u4e48\u5b83\u6ca1\u6709\u524d\u9a71\uff08\u6b64\u65f6\u524d\u9a71\u6df1\u5ea6\u5b9a\u4e3a0\uff09\uff0c\u8981\u4e48\u5b83\u6ca1\u6709\u540e\u7ee7\uff08\u6b64\u65f6\u540e\u7ee7\u6df1\u5ea6\u5b9a\u4e3a0\uff09\uff1b**\u8fd9\u65f6\u5019\u5b83\u4e00\u5b9a\u4f1a\u88ab\u63d2\u5165\u4e3a\u8f83\u6df1\u7684\u90a3\u4e00\u4e2a\u7684\u5b69\u5b50**\uff08\u4e0b\u9762\u7ed9\u51fa\u8bc1\u660e\uff09\u3002\n\n### \u505a\u6cd5\n\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u5b58\u6bcf\u4e2a\u70b9\u7684\u8282\u70b9\u5730\u5740\uff0c\u5c31\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u6c42\u51fa\u524d\u9a71\u548c\u540e\u7ee7\u4ece\u800c\u76f4\u63a5\u8bbf\u95ee\u8f83\u6df1\u8282\u70b9\u5e76\u63d2\u5165\uff0c\u5c31\u56de\u907f\u4e86BST\u9000\u5316\u6210\u94fe\u7684\u60c5\u51b5\u3002~~**\u7528BST\u4f18\u5316BST XD**~~\n\n\n**\u4e0a\u8ff0\u547d\u9898\u8bc1\u660e\uff1a**\u5982\u679c\u904d\u5386\u8fc7\u7a0b\u4e24\u4e2a\u8282\u70b9\u90fd\u8981\u7ecf\u8fc7\uff08\u5373\u5728\u6839\u8282\u70b9\u7684\u540c\u4fa7\uff09\uff0c\u90a3\u4e48\u4f1a\u53bb\u5230\u8f83\u6df1\u7684\u70b9\u3002**\u56e0\u4e3a\u7ecf\u8fc7\u8f83\u6d45\u7684\u90a3\u4e2a\u8282\u70b9\u65f6\uff0c\u90a3\u4e2a\u8282\u70b9\u4f1a\u628a\u5b83\u7ee7\u7eed\u5411\u4e0b\u63d2\u5165\uff0c\u76f4\u5230\u627e\u5230\u8f83\u6df1\u7684\u53e6\u4e00\u4e2a\u70b9\uff0c\u8fd9\u662fBST\u7684\u63d2\u5165\u6027\u8d28\u3002**\u5982\u679c\u904d\u5386\u8fc7\u7a0b\u4e0d\u540c\u65f6\u7ecf\u8fc7\u8fd9\u4e24\u4e2a\u70b9\uff08\u524d\u9a71\u548c\u540e\u7ee7\uff09\uff0c\u5219\u4e0d\u4f1a\u51fa\u73b0\u5206\u5c5e\u4e24\u6811\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u6b64\u65f6\u7684\u6839\u8282\u70b9\u6bd4\u524d\u9a71\u5927\uff0c\u6bd4\u540e\u7ee7\u5c0f\uff0c\u90a3\u4e48\u524d\u9a71\u548c\u540e\u7ee7\u6c42\u7684\u5c31\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u56e0\u6b64\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u3002**\u539f\u547d\u9898\u5f97\u8bc1\u3002**\n\n\n### \u603b\u7ed3\n\u4f38\u5c55\u6811\u5728\u8fd9\u91cc\u4f1a\u7528\u5230\u7684\u529f\u80fd\u53ef\u80fd\u4e0d\u7b97\u591a\uff0c\u6240\u4ee5\u6572\u8d77\u6765\u6bd4\u8f83\u65b9\u4fbf\u4e5f\u6bd4\u8f83\u8fc5\u901f\u3002\u56e0\u6b64\u5728\u60f3\u4e0d\u5230\u6b63\u89e3\u800csplay\u53ef\u505a\u65f6\uff0c\u5c31\u6700\u597d\u5148\u6253\u4e2asplay\u4e0a\u53bb\u54af\u3002\uff08~~\u8bf4\u4e0d\u5b9a\u5e73\u8861\u6811\u662f\u6b63\u89e3\u554a\u86e4\u86e4\u86e4~~\uff09\n\n### \u4e60\u60ef\u7528\u6307\u9488\n\n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#define Root spl::root\n#define RooT BST::root\nint dpt[101000];//\u6df1\u5ea6\nnamespace spl//\u5f00\u4e24\u4e2anamespace\u53ef\u4ee5\u7528\u4e24\u4e2anode\uff08\u8d77\u540d\u56f0\u96be\u75c7\uff09\n{\nstruct node\n{\n    int key;\n    node *s[2];\n    node(int key)\n    {\n        this->key=key;\n        s[0]=NULL;\n        s[1]=NULL;\n    }\n    node()\n    {\n        s[0]=NULL;\n        s[1]=NULL;\n    }\n    int getd(int x)\n    {\n        if(x==key)\n            return -1;\n        return x>key;\n    }\n};\nnode *root=NULL;\nvoid Rotate(node *&rt,int d)\n{\n    node *tmp=rt->s[d];\n    rt->s[d]=tmp->s[d^1];\n    tmp->s[d^1]=rt;\n    rt=tmp;\n    return;\n}\nvoid splay(node *&rt,int x)\n{\n    int d1=rt->getd(x);\n    if(d1==-1)\n        return;\n    int d2=rt->s[d1]->getd(x);\n    if(d2==-1)\n    {\n        Rotate(rt,d1);\n        return;\n    }\n    splay(rt->s[d1]->s[d2],x);\n    if(d1==d2)\n    {\n        Rotate(rt,d1);\n        Rotate(rt,d1);\n        return;\n    }\n    else\n    {\n        Rotate(rt->s[d1],d2);\n        Rotate(rt,d1);\n        return;\n    }\n}\nvoid Insert(node *&rt,int x)\n{\n    if(!rt)\n    {\n        rt=new node(x);\n        return;\n    }\n    Insert(rt->s[rt->getd(x)],x);//\u6ca1\u6709\u91cd\u590d\u5143\u7d20\n    return;\n}\n//\u4e5f\u6ca1\u6709\u5220\u9664\nint getm(node *rt,int d)\n{\n    if(!rt->s[d])\n        return rt->key;\n    return getm(rt->s[d],d);\n}\n}\nnamespace BST\n{\nstruct node\n{\n    int v;\n    node *ls,*rs;\n    node(int v)\n    {\n        this->v=v;\n        ls=NULL;\n        rs=NULL;\n    }\n    node()\n    {\n        ls=NULL;\n        rs=NULL;\n    }\n}*root=NULL;\nnode *pla[101000];//\u5b58\u8fd9\u4e2a\u8282\u70b9\u7684\u6307\u9488\u5730\u5740\nvoid Insert(node *&rt,int x,int d)//\u8bb0\u5f97\u8ba1\u7b97\u6df1\u5ea6\n{\n    if(!rt)\n    {\n        dpt[x]=d;\n        rt=new node(x);\n        pla[x]=rt;\n        return;\n    }\n    if(x<rt->v)\n        Insert(rt->ls,x,d+1);\n    else\n        Insert(rt->rs,x,d+1);\n    return;\n}\nvoid pre_ord(node *rt)\n{\n    printf(\"%d \",rt->v);\n    if(rt->ls)\n        pre_ord(rt->ls);\n    if(rt->rs)\n        pre_ord(rt->rs);\n}\n}\nusing BST::pla;\n\nint main()\n{\n    memset(dpt,0,sizeof(dpt));\n    memset(pla,NULL,sizeof(pla));\n    int n,a;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&a);\n    spl::Insert(Root,a);//\u7b2c\u4e00\u4e2a\u662f\u6784\u9020\u6839\u8282\u70b9\u8981\u7279\u5224\n    BST::Insert(RooT,a,1);\n\n    int p,s;//p\u662fpre\u524d\u9a71\uff0cs\u662fsuc\u540e\u7ee7\n    for(int i=2;i<=n;i++)\n    {\n        scanf(\"%d\",&a);\n        spl::Insert(Root,a);\n        spl::splay(Root,a);\n        p=0;//\u8fd9\u91cc\u6ce8\u610f\u7f6e0\uff0c\u5426\u5219\u4e0b\u9762\u7528\u5230s\u548cp\u5c31\u4f1aGG\uff08\u7d0a\u4e71\uff09\n        s=0;\n        if(Root->s[0])\n            p=getm(Root->s[0],1);\n        if(Root->s[1])\n            s=getm(Root->s[1],0);\n        if(dpt[p]>dpt[s])\n            BST::Insert(pla[p],a,1);\n        else\n            BST::Insert(pla[s],a,1);\n    }\n    BST::pre_ord(RooT);\n    return 0;\n}\n```",
        "postTime": 1529414919,
        "uid": 63539,
        "name": "wjyyy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1377 \u3010[TJOI2011]\u6811\u7684\u5e8f\u3011 \u4f38\u5c55\u6811\u505a\u6cd5"
    },
    {
        "content": "\u539f\u6765\u65e9\u57282011\u5e74\u5c31\u8003\u7ebf\u6bb5\u6811\u4f18\u5316\u5efaBST\u4e86\uff08\u762b\n\n\u7ecf\u8fc7\u4e00\u756a\u601d\u7d22\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u63d2\u5165\u5e8f\u5217\u6784\u6210\u7684BST\u7684\u524d\u5e8f\u904d\u5386\u5373\u4e3a\u7b54\u6848\uff0c\u6b63\u786e\u6027\u663e\u7136.\n\n\u4f46\u662fBST\u5f88\u660e\u663e\u5177\u6709\u4e0d\u7a33\u5b9a\u6027\uff0c\u76f4\u63a5\u5efa\u6811\u65f6\u95f4\u590d\u6742\u5ea6\u975e\u5e38\u5047\uff0c\u8003\u8651\u4f18\u5316\u5efa\u6811\uff0c\u53ef\u4ee5\u4f7f\u7528\u7b1b\u5361\u5c14\u6811\u5efa\u6811\u6216\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u6811\uff0c\u8fd9\u91cc\u7279\u522b\u8bb0\u5f55\u4e00\u4e0b\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u6811.\n\n\u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u88ab\u63d2\u5165\u7684\u8282\u70b9\u7684\u7236\u4eb2\u548c\u8be5\u8282\u70b9\u7ba1\u8f96\u533a\u95f4\u4f1a\u53d8\u5316\uff0c\u4e8e\u662f\u6211\u4eec\u8bb0\u5f55\u4e0b\u8fd9\u4e9b\u7ba1\u8f96\u533a\u95f4\uff0c\u5e76\u5728\u8fd9\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u8282\u70b9\u88ab\u63d2\u5165\u65f6\u5206\u522b\u4fee\u6539\u8fd9\u4e9b\u7ba1\u8f96\u533a\u95f4\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u76f4\u63a5\u67e5\u8be2\u5f53\u524d\u70b9\u88ab\u54ea\u4e9b\u7ba1\u8f96\u533a\u95f4\u8986\u76d6\uff0c\u7ebf\u6bb5\u6811\u533a\u95f4\u8986\u76d6+\u5355\u70b9\u4fee\u6539\u5373\u53ef.\n\n**Show the Code**\n```cpp\n#include<cstdio>\nint n,rt;\nint l[100005],r[100005];\nint tag[400005],sum[400005],ch[100005][2];\ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f;\n}\ninline void spread(int p) {if(tag[p]) {tag[p<<1]=tag[p<<1|1]=sum[p<<1]=sum[p<<1|1]=tag[p];tag[p]=0;}}\ninline void change(int L,int R,int x,int p=1,int l=1,int r=n) {\n\tif(L>R) return;\n\tif(L<=l&&r<=R) {sum[p]=tag[p]=x;return;}\n\tspread(p);\n\tint mid=l+r>>1;\n\tif(L<=mid) change(L,R,x,p<<1,l,mid);\n\tif(R>mid) change(L,R,x,p<<1|1,mid+1,r);\n}\ninline int ask(int x,int p=1,int l=1,int r=n) {\n\tif(l==r) return sum[p];\n\tspread(p);\n\tint mid=l+r>>1;\n\tif(x<=mid) return ask(x,p<<1,l,mid);\n\telse return ask(x,p<<1|1,mid+1,r);\n}\ninline void print(int x) {\n\tprintf(\"%d \",x);\n\tif(ch[x][0]) print(ch[x][0]);\n\tif(ch[x][1]) print(ch[x][1]);\n}\nint main() {\n\tn=read(),rt=read();\n\tchange(1,n,rt);\n\tl[rt]=1;r[rt]=n;\n\tfor(register int i=2;i<=n;++i) {\n\t\tint x=read(),res=ask(x);\n\t\tif(x<res) {\n\t\t\tch[res][0]=x;\n\t\t\tl[x]=l[res],r[x]=res-1;\n\t\t\tchange(l[x],r[x],x);\n\t\t\tif(!ch[res][1]) {l[res]=res+1;}\n\t\t\telse {l[res]=res,r[res]=res;}\n\t\t}\n\t\telse {//x>=res\n\t\t\tch[res][1]=x;\n\t\t\tl[x]=res,r[x]=r[res];\n\t\t\tchange(l[x],r[x],x);\n\t\t\tif(!ch[res][0]) {r[res]=res-1;}\n\t\t\telse {l[res]=res,r[res]=res;}\n\t\t}\n\t}\n\tprint(rt);\n\treturn 0;\n}\n\n```",
        "postTime": 1589100249,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1377 \u3010[TJOI2011]\u6811\u7684\u5e8f\u3011"
    },
    {
        "content": "\u6211\u6765\u8bb2\u4e00\u8bb2\u5982\u4f55\u5f97\u51fa\u6240\u6c42\u6811\u5c31\u662f\u7b1b\u5361\u5c14\u6811\u7684\uff1a\n\n\u8fd9\u9053\u9898\u5176\u5b9e\u5c31\u662f\u5efa\u4e00\u9897\u6307\u5b9a\u7684\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u7531\u4e8e\u6307\u5b9a\u4e86\u63d2\u5165\u65b9\u5f0f\uff0c\u6240\u4ee5\u8fd9\u9053\u9898\u76ee\u7684\u6811\u6709\u4e24\u4e2a\u9650\u5236\uff1a\u503c\u8981\u6ee1\u8db3\u4e8c\u53c9\u67e5\u627e\u6811\u7684\u9650\u5236\uff0c\u63d2\u5165\u987a\u5e8f\u4e0a\u513f\u5b50\u6bd4\u7236\u4eb2\u665a\u63d2\u5165\uff0c\u6ee1\u8db3\u5806\u5f97\u6027\u8d28\u3002\n#### \u8fd9\u4e0d\u5c31\u662f\u7b1b\u5361\u5c14\u6811\u5417\uff01\n\u6240\u4ee5\u5c31\u53ef\u4ee5O(NlogN)\u5efa\u6811\u4e86\uff0c\u5176\u5b9e\u6876\u6392\u80fd\u5230O(N)\n>\u6574\u4e2a\u8fc7\u7a0b\u7684\u7b2c\u4e00\u6b65\u662f\u628a\u6240\u6709\u70b9\u6309\u7167key\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u4e00\u4e2a\u8282\u70b9\u5f00\u59cb\uff0c\u6309key\u9012\u589e\u987a\u5e8f\u4f9d\u6b21\u63d2\u5165\u8282\u70b9\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u5047\u8bbe\u5df2\u7ecf\u6709\u4e00\u68f5\u7b1b\u5361\u5c14\u6811\uff0c\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u8981\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\uff0c\u800c\u8fd9\u4e2a\u8282\u70b9\u6bd4\u8fd9\u68f5\u6811\u6240\u6709\u8282\u70b9\u7684key\u90fd\u5927\uff0c\u90a3\u4e48\u5e94\u8be5\u5982\u4f55\u63d2\u5165\u5462\uff1f\u5047\u8bbe\u8fd9\u4e2a\u8282\u70b9\u5df2\u7ecf\u88ab\u63d2\u5165\uff0c\u90a3\u4e48\u5b83\u7684\u4f4d\u7f6e\u80af\u5b9a\u662f\u5728\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u4e00\u76f4\u5411\u53f3\u8d70\u3002\u6240\u4ee5\uff0c\u6bcf\u6b21\u63d2\u5165\u65b0\u8282\u70b9\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u63d2\u5165\u5230\u6700\u53f3\u4fa7\u90a3\u6761\u8def\u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u800c\u539f\u6765\u4f4d\u7f6e\u7684\u8282\u70b9\u53d8\u6210\u4e86\u8fd9\u4e2a\u65b0\u8282\u70b9\u7684\u5de6\u5b50\u6811\uff0c\u65b0\u63d2\u5165\u7684\u70b9\u53d8\u6210\u6700\u53f3\u4fa7\u90a3\u6761\u8def\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u3002\n\n>\u90a3\u4e48\u5982\u4f55\u786e\u5b9a\u63d2\u5165\u7684\u4f4d\u7f6e\u5462\uff1f\u90a3\u5c31\u8981\u6839\u636e\u8fd9\u4e2a\u8282\u70b9\u7684value\u503c\u4e86\uff0c\u56e0\u4e3a\u6ee1\u8db3\u5806\u7684\u6027\u8d28\uff0c\u6240\u4ee5\u4e00\u6761\u8def\u4ece\u4e0a\u5230\u4e0b\uff0c\u5176value\u503c\u80af\u5b9a\u662f\u9012\u51cf\u7684\u3002\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2a\u9012\u51cf\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6700\u53f3\u4fa7\u7684\u90a3\u6761\u8def\u7528\u4e00\u4e2a\u6808\u8868\u793a\uff0c\u6808\u5e95\u662f\u6839\uff0c\u6808\u9876\u662f\u6700\u65b0\u8282\u70b9\uff0c\u4ece\u5e95\u5230\u9876\uff0cvalue\u503c\u548ckey\u503c\u90fd\u9012\u589e\u3002\u6bcf\u6b21\u65b0\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\u7684\u65f6\u5019\uff0c\u5c31\u4ece\u9876\u5f80\u5e95\u4e00\u4e2a\u4e2a\u770b\uff0c\u627e\u5230\u7b2c\u4e00\u4e2avalue\u5927\u4e8e\u65b0\u8282\u70b9value\u7684\u8282\u70b9\uff0c\u4f5c\u4e3a\u65b0\u8282\u70b9\u7684\u7236\u4eb2\u5373\u53ef\u3002\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u8fdb\u6808\u4e00\u6b21\uff0c\u51fa\u6808\u4e00\u6b21\uff0c\u6240\u4ee5\u6574\u4e2a\u6784\u6811\u8fc7\u7a0b\u662fO(N)\u7684\u3002\n\n```cpp\n#include <bits/stdc++.h>\nconst int MAXN=1e5+10;\nusing namespace std;\nint N;\nint ls[MAXN],rs[MAXN],vv[MAXN];\nint s[MAXN],top;\nstruct dat{\n    int val,id;\n    bool operator <(const dat&d) const {\n        return val<d.val;\n    }\n}a[MAXN];\nvoid dfs(int st) {\n\tif(!st) return;\n\tprintf(\"%d \",vv[st]);\n    dfs(ls[st]);\n    dfs(rs[st]);\n}\nint main() {\n\tscanf(\"%d\",&N);\n\tfor(int i=1;i<=N;++i) scanf(\"%d\",&a[i].val),a[i].id=i;\n    sort(a+1,a+N+1);\n    for(int i=1;i<=N;++i) {\n        while(top&&a[s[top]].id>a[i].id) top--;\n\t\tvv[i]=a[i].val;\n        ls[i]=rs[s[top]];\n        rs[s[top]]=i;\n        s[++top]=i;\n    }\n //   for(int i=0;i<=N;++i) printf(\"ls[%d]=%d,rs[%d]=%d vv[%d]=%d\\n\",i,ls[i],i,rs[i],i,vv[i]);\n    dfs(rs[0]);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1533436894,
        "uid": 20565,
        "name": "wzj423",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1377 \u3010[TJOI2011]\u6811\u7684\u5e8f\u3011"
    },
    {
        "content": "\u55b5~\n\n\u7a0d\u5fae\u8be6\u7ec6\u4e00\u70b9\u7684\u8bf4\u4e00\u4e0b\u5427\uff0c\u5c31\u662f\u697c\u4e0b\u7684\u4e24\u79cd\u65b9\u6cd5\u7684\u8865\u5145\u3002\n\n\u5148\u5316\u7b80\u4e00\u4e0b\u6a21\u578b\uff0c\u6211\u4eec\u628a$BST$\u6811\u5efa\u597d\uff0c\u7136\u540e\u8f93\u51fa\u4e2d\u5e8f\u904d\u5386\u5373\u662f\u7b54\u6848\u3002\n\n\u7136\u800c\uff0c\u76f4\u63a5\u5efa$BST$\u662f\u5f88\u5bb9\u6613\u9000\u5316\u6210\u94fe\u7684\u3002\n\n\u505a\u8fc7\u9898\u76ee\u591a\u7684\u4eba\u53ef\u80fd\u542c\u8bf4\u8fc7\uff0c\u8fd9\u4e2a\u53eb**\u7b1b\u5361\u5c14\u6811**\n\n\u7b1b\u5361\u5c14\u6811\u662f\u4e00\u79cd\u65e2\u6ee1\u8db3**\u5806\u6027\u8d28**\u53c8\u6ee1\u8db3**\u4e8c\u53c9\u6392\u5e8f\u6811**\u6027\u8d28\u7684\u6811\u3002\n\n**\u65b9\u6cd5\u4e00\uff1a\u666e\u901a\u7b1b\u5361\u5c14\u6811\u7684\u5efa\u6811\u65b9\u6cd5**\n\n\u73b0\u5728\u6709\u4e00\u4e2a\u5e8f\u5217\u6309\u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u5173\u952e\u5b57$Key$\u4ece\u5c0f\u5230\u5927\u6709\u5e8f\uff0c\u5e8f\u5217\u4e2d\u5305\u542b\u5c0f\u8ddf\u5806\u7684\u5173\u952e\u5b57$Index$\u5173\u952e\u5b57\uff0c\u5728$O(N)$\u7684\u65f6\u95f4\u5efa\u6811\u3002\n\n\u6309\u539f\u6570\u5217\u987a\u5e8f\u4e00\u4e2a\u4e00\u4e2a\u5c06\u8282\u70b9\u52a0\u5165\u7b1b\u5361\u5c14\u6811\uff0c\u53ef\u4ee5\u786e\u5b9a\u4e00\u5b9a\u662f\u4ece\u94fe\u7684\u53f3\u8fb9\u5411\u4e0b\u627e\u5230\u4e00\u4e2a$Index$\u5927\u4e8e\u8fd9\u4e2a\u70b9\u7684\u8282\u70b9\uff0c\u628a\u8fd9\u4e2a\u8282\u70b9\u4f4d\u7f6e\u5360\u636e\uff0c\u7136\u540e\u7f6e\u8ba9Ta\u5f53\u81ea\u5df1\u7684\u5de6\u513f\u5b50\u5373\u53ef\u3002\n\n\u7528\u6808\u628a\u6700\u53f3\u8fb9\u7684\u94fe\u5b58\u4e0b\u6765\uff0c\u6808\u9876\u4e3a\u53f3\u8fb9\u6700\u5e95\u7684\u90a3\u4e2a\u70b9\uff0c\u52a0\u5165\u65f6\u8fb9\u5f39\u51fa\u8fb9\u5411\u4e0a\u627e\uff0c\u66f4\u65b0\u597d\u4f4d\u7f6e\u5173\u7cfb\u540e\u628a\u81ea\u5df1\u5b58\u8fdb\u6808\u5373\u53ef\u3002\n\n**code\uff1a**\n```\n#include <cstdio>\n#include <algorithm>\n#define ls t[now].ch[0]\n#define rs t[now].ch[1]\n#define f t[now].par\nconst int N=100010;\nstruct node\n{\n    int dat,index;\n    bool friend operator <(node n1,node n2)\n    {\n        return n1.dat<n2.dat;\n    }\n}a[N];\nstruct BST\n{\n    int ch[2],dat,index,par;//\u5de6\u53f3\u513f\u5b50\uff0cBST\u57df\uff0c\u5806\u57df\uff0c\u7236\u4eb2\n}t[N];\nint tot=0,n,s[N];\nvoid connect(int fa,int now,int typ)\n{\n    f=fa;\n    t[fa].ch[typ]=now;\n}\nvoid dfs(int now)\n{\n    if(!now) return;\n    printf(\"%d \",t[now].dat);\n    dfs(ls);\n    dfs(rs);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",a+i);\n        a[i].index=i;\n    }\n    std::sort(a+1,a+1+n);\n    for(int i=1;i<=n;i++)\n    {\n        int last=0;\n        while(tot&&t[s[tot]].index>a[i].index)\n            last=tot--;\n        t[i].dat=a[i].dat;\n        t[i].index=a[i].index;\n        connect(s[tot],i,1);\n        connect(i,s[last],0);\n        s[++tot]=i;\n    }\n    dfs(t[0].ch[1]);\n    return 0;\n}\n\n```\n\n**\u65b9\u6cd5\u4e8c\uff1a\u6309\u5806\u6027\u8d28\u81ea\u5e95\u5411\u4e0a\u5efa\u7acb\u3002**\n\n\u8fd9\u4e2a\u65b9\u6cd5\u597d\u5389\u5bb3\u554a\u3002\n\n\u5219\u5982\u679c\u4e24\u4e2a\u70b9\u7684$Key$\u5728\u201c\u5f53\u524d\u201d\u6570\u503c\u4e0a\u7684\u5dee\u6700\u5c0f\uff0c\u90a3\u4e48Ta\u4fe9\u4e00\u5b9a\u6709\u4e00\u6761\u8fb9\u3002\n\n\u6309$Index$**\u4ece\u5927\u5230\u5c0f**\u5efa\u7acb\u7b1b\u5361\u5c14\u6811\uff0c\u5219\u5bf9$1$-$Index-1$\u7684\u70b9\u4e2d\uff0c\u662f\u4e0d\u4f1a\u6709$Index$\u7684\u513f\u5b50\u7684\u3002\n\n\u7528$pre[i]$\u4e0e$suc[i]$\u5206\u522b\u5b58\u50a8$Key$\u4e3a$i$\u7684\u70b9\u5728\u201c\u5f53\u524d\u201d\u6240\u76f8\u90bb\u7684\u524d\u9a71\u548c\u540e\u7ee7\u3002\n\n\u6bcf\u6b21\u5904\u7406\u5b8c\u4e00\u4e2a\u70b9\uff0c\u66f4\u65b0\u4e0e\u5b83\u76f8\u8fde\u7684\u201c\u524d\u9a71\u201d\u548c\u201c\u540e\u7ee7\u201d\uff0c\u8fd9\u5bf9\u5e94\u4e86\u201c\u5f53\u524d\u201d\n\n\u6ce8\u610f\u5230\u539f\u6570\u636e\u4e3a1\u5230n\u7684\u6392\u5217\uff0c\u53ef\u4ee5\u7528\u6876\u6392\uff0c\u6bd4\u8f83\u5feb\u3002\n\n**Code\uff1a**\n\n```\n#include <cstdio>\nconst int N=100010;\nint a[N],b[N],L[N],R[N],pre[N],suc[N],n;\nvoid dfs(int now)\n{\n    if(!now) return;\n    printf(\"%d \",a[now]);\n    dfs(L[now]);dfs(R[now]);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",a+i);\n        b[a[i]]=i;\n        pre[i]=i-1,suc[i]=i+1;\n    }\n    for(int i=n;i>1;i--)\n    {\n        int pree=pre[a[i]],succ=suc[a[i]];\n        if(b[pree]>b[succ])\n            R[b[pree]]=i;\n        else\n            L[b[succ]]=i;\n        suc[pree]=succ;pre[succ]=pree;\n    }\n    dfs(1);\n    return 0;\n}\n```",
        "postTime": 1529400209,
        "uid": 63727,
        "name": "ButterflyDew",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1377 \u3010[TJOI2011]\u6811\u7684\u5e8f\u3011"
    },
    {
        "content": "\u6b63\u89e3\u5e94\u8be5\u662fO(n)\u5efa\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u56e0\u4e3a\u76f4\u63a5\u5efa\u6811\u53ef\u80fd\u4f1a\u9000\u5316\u5230O(n^2)\uff08luogu\u6570\u636e\u4e0d\u591f\u5f3a\uff09\n\nO(n)\u5efa\u6811\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u5206\u522b\u662f\u5bf9\u6392\u5e8f\u540e\u7684\u6570\u7ec4\u5efa\u7b1b\u5361\u5c14\u6811\u548c\u5012\u5e8f\u8fde\u8fb9\n\n\u7b2c\u4e8c\u79cd\u6bd4\u8f83\u7b80\u5355\uff0c\u53cc\u5411\u961f\u5217\u7ef4\u62a4\u5c31\u597d\u4e86\n\n\u6bcf\u6b21\u627e\u6700\u540e\u4e00\u4e2a\u63d2\u5165\u7684\u70b9\uff0c\u5c06\u5b83\u548c\u524d\u9a71\u3001\u540e\u7ee7\u4e2d\u8f83\u8fdf\u7684\u70b9\u8fde\u8fb9\uff0c\u7136\u540e\u5220\u53bb\u8fd9\u4e2a\u70b9\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define fo(a,b,c) for(int a=b;a<=c;a++)\n#define go(a,b,c) for(int a=b;a>=c;a--)\n#define mp make_pair\nint read(){\n    int a=0,f=0;char c=getchar();\n    for(;c<'0'||c>'9';c=getchar())if(c=='-')f=1;\n    for(;c>='0'&&c<='9';c=getchar())a=a*10+c-'0';\n    return f?-a:a;\n}\nconst int N=1e5+2;\nint a[N],t[N],pre[N],suc[N],lc[N],rc[N];\nvoid dfs(int x){\n    if(!x)return;\n    printf(\"%d \",x);\n    dfs(lc[x]);dfs(rc[x]);\n} \nint main(){\n    int n=read();\n    fo(i,1,n)\n        a[t[i]=read()]=i,\n        pre[i]=i-1,suc[i]=i+1; \n    go(i,n,2){\n        int pree=pre[t[i]],succ=suc[t[i]];\n        if(a[pree]>a[succ])rc[pree]=t[i];\n        else lc[succ]=t[i];\n        pre[succ]=pree,suc[pree]=succ;\n    } \n    dfs(t[1]);\n    return 0;\n}\n```",
        "postTime": 1511329269,
        "uid": 12668,
        "name": "Minclxc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1377 \u3010[TJOI2011]\u6811\u7684\u5e8f\u3011"
    },
    {
        "content": "\u6211\u4eec\u9996\u5148\u628a\u8fd9\u68f5\u6811\u7ed9\u5efa\u51fa\u6765\uff08\u5c31\u548c\u5efa\u4e8c\u53c9\u641c\u7d22\u6811\u4e00\u4e2a\u5efa\u6cd5\uff09\n\n\u7136\u540e\u8bb0\u5f55\u597d\u5f53\u524d\u8282\u70b9\u7684\u503c\uff0c\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u4e4b\u540e\uff0c\u6211\u4eec\u5f00\u4e00\u4e2a\u5806\n\n\u9996\u5148\u628a\u6839\u6254\u8fdb\u53bb\uff0c\u6bcf\u6b21\u53d6\u51fa\u6700\u5c0f\u7684\u8282\u70b9\uff0c\u8f93\u51fa\u5e76\u628a\u8fd9\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u513f\u5b50\u6254\u8fdb\u5806\u91cc\uff08\u5982\u679c\u6ca1\u6709\u5de6\u513f\u5b50\u6216\u53f3\u513f\u5b50\u90a3\u5c31\u4e0d\u7528push\u4e86\uff09\n\n\u6700\u540e\u8f93\u51fa\u7684n\u4e2a\u8282\u70b9\u5c31\u662f\u7b54\u6848\u4e86\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <iostream>\n#include <ctime>\n#include <map>\n#include <queue>\n#include <cstdlib>\n#include <string>\n#include <climits>\n#include <set>\n#include <vector>\nusing namespace std;\ninline int read(){\n    int k=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){k=k*10+ch-'0';ch=getchar();}\n    return k*f;\n}\nstruct ppap{int x,ls,rs;}a[100010];\nbool operator <(ppap a,ppap b){return a.x>b.x;}\npriority_queue<ppap>q;\nint n,rt,cnt=0;\ninline void insert(int x){\n    if(!rt){rt=++cnt;a[rt].x=x;return;}\n    int now=rt,p;\n    while(now){\n        p=now;\n        if(x<a[now].x)now=a[now].ls;\n        else now=a[now].rs;\n    }\n    if(x<a[p].x)a[p].ls=++cnt;\n    else a[p].rs=++cnt;\n    a[cnt].x=x;\n}\nint main()\n{\n    n=read();\n    for(int i=1;i<=n;i++){\n        int x=read();\n        insert(x);\n    }\n    q.push(a[rt]);\n    for(int i=1;i<=n;i++){\n        ppap now=q.top();q.pop();\n        printf(\"%d \",now.x);\n        if(now.ls)q.push(a[now.ls]);\n        if(now.rs)q.push(a[now.rs]);\n    }\n    return 0;\n}\n```",
        "postTime": 1507199572,
        "uid": 5716,
        "name": "jzqjzq",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1377 \u3010[TJOI2011]\u6811\u7684\u5e8f\u3011"
    },
    {
        "content": "~~\u8bf4\u5b9e\u5728\u7684\uff0c\u8fd9\u9898\u5e94\u8be5\u6ca1\u6709\u63d0\u9ad8+\u96be\u5ea6~~\n\n\n------------\n\u7b80\u5355\u7684\u8bf4\uff0c\u9898\u610f\u5c31\u662f\u8981\u4f60\u6839\u636e\u751f\u6210\u5e8f\u5217\u5efa\u4e00\u9897\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u7136\u540e\u5bf9\u5b83\u904d\u5386~~\n\n\u904d\u5386\u5f88\u663e\u7136\u662f$O(n)$\u7684\uff0c\u4f46\u662f\u5982\u679c\u662f\u4e00\u6761\u94fe\uff0c\u5efa\u6811\u4f1a\u88ab\u5361\u5230$O(n^2)$\u3002\u3002\n\n\u90a3\u4e48\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\u5b9e\u73b0\u3002\u3002\n\n\u8fd9\u91cc\u6211\u7528\u6811\u72b6\u6570\u7ec4\u4e0e\u4e8c\u5206\u5b9e\u73b0\u7684\n\n## \u6811\u72b6\u6570\u7ec4\u4e3a\u4ec0\u4e48\u80fd\u591f\u505a\uff1f\n\n\u9996\u5148\u6211\u4eec\u77e5\u9053\u6392\u5e8f\u4e8c\u53c9\u6811\u7684 \u5de6\u5b50\u6811<\u6839\u8282\u70b9<\u53f3\u5b50\u6811 \u90a3\u4e48\u6211\u4eec\u8981\u5bf9\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\u63d2\u5165\uff0c\u6211\u4eec\u80af\u5b9a\u5c31\u662f\u5c06\u5b83\u63d2\u5728\u4e8c\u53c9\u6811\u4e2d\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5c0f\u7684\u53f3\u513f\u5b50\u6216\u8005\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684\u5de6\u513f\u5b50\u4e2d\u3002\u6811\u72b6\u6570\u7ec4\u4e0e\u4e8c\u5206\u5c31\u5b9e\u73b0\u627e\u5230\u8fd9\u4e24\u4e2a\u503c\u7684\u4f4d\u7f6e\u3002\n\n## \u8981\u600e\u4e48\u5b9e\u73b0\u5462\uff1f\n\n\u5b9e\u73b0\u5176\u5b9e\u5f88\u7b80\u5355\u7684\uff0c\u6211\u4eec\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u7f00\u548c\uff0c\u65e2\u7136\u8003\u8651\u5230\u524d\u7f00\u548c\u662f\u5355\u8c03\u9012\u589e\uff0c\u6211\u4eec\u5c31\u76f4\u63a5\u5bf9\u5b83\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\u5c31\u884c\u4e86\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```\nint findpos(int x)\n{\n\tint l = 1,r = n + 1;\n\twhile(l + 1 < r)\n\t{\n\t\tint mid = (l + r) / 2;\n\t\tif(findsum(mid) >= x) r = mid;\n\t\telse l = mid; \n\t}\n\tif(findsum(l) != x) return r;//\u4e0b\u9762\u6ce8\u91ca\n\treturn l;\n}\n```\n\u4e3a\u4e86\u4fdd\u8bc1\u6211\u4eec\u67e5\u627e\u540e\u7684\u6570\u5728\u8fd9\u9897\u6811\u4e2d\uff0c\u6211\u4eec\u4e8c\u5206\u67e5\u627e\u7684\u76ee\u7684\u662f\u627e\u5230\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5c0f\u7684\u6811\uff0c\u4f46\u662f\uff0c\u5f53mid\u6307\u9488\u6307\u5411\u6211\u4eec\u8981\u7684\u6570\u65f6\uff0cl\u6307\u9488\u5c31\u4e0d\u4f1a\u6307\u5230\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u8fdb\u884c\u5224\u65ad\u3002\u4e00\u6b21\u67e5\u627e\u590d\u6742\u5ea6\u662f$O(log^2n)$\n\n\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n*log^2n)$\n\n\u867d\u7136\u76f8\u6bd4\u4e8e\u5176\u4ed6\u6b63\u89e3\u6162\u4e86\u4e00\u70b9\uff0c\u4f46\u662f\u601d\u8def\u5374\u4e0d\u4f1a\u96be\u60f3\uff0c~~\u800c\u4e14\u80fd\u8fc7~~\n\n### \u4e0b\u9762\u8d34\u5b8c\u6574\u4ee3\u7801\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,i,sum[210000],g,minn;\nint lowbit(int x)\n{\n\treturn x & (-x);\n}\nstruct node\n{\n\tint ch[2];\n}f[210000];\nint add(int x)\n{\n\twhile(x<=n)\n\t{\n\t\tsum[x] ++;\n\t\tx += lowbit(x); \n\t}\n}\nint findsum(int x)\n{\n\tint ans = 0;\n\twhile(x)\n\t{\n\t\tans += sum[x];\n\t\tx -= lowbit(x);\n\t}\n\treturn ans;\n}\nint findpos(int x)\n{\n\tint l = 1,r = n + 1;\n\twhile(l + 1 < r)\n\t{\n\t\tint mid = (l + r) / 2;\n\t\tif(findsum(mid) >= x) r = mid;\n\t\telse l = mid; \n\t}\n\tif(findsum(l) != x) return r;\n\treturn l;\n}\nint print(int x)\n{\n\tif(x > n || x < 1) return 0;\n\tprintf(\"%d \", x );\n\tprint(f[x].ch[0]);\n\tprint(f[x].ch[1]);\n}\nint main()\n{\n\tscanf(\"%d\", &n );\n\tscanf(\"%d\", &g );\n\tadd(g);minn = g;\n\tfor(i = 2;i <= n;i ++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\", &x);\n\t\tint op=findsum(x);//\u6211\u4eec\u7684\u76ee\u7684\u5c31\u662f\u8981\u627e\u5230\u5b83\u662f\u7b2c\u51e0\u5927\u7684\u4f4d\u7f6e\n\t\tint s = findpos(op);//\u7136\u540e\u8fdb\u884c\u67e5\u627e\n\t\tif(x < minn) s = minn,minn = x;//\u5982\u679c\u627e\u51fa\u6765\u662f0\u600e\u4e48\u529e\uff0c\u8fd9\u662f\u4e00\u4e2a\u5c0f\u7ec6\u8282\n\t\tint k = (s < x);\n\t\tif(!f[s].ch[k]) f[s].ch[k] = x;\n\t\telse f[findpos(op + (k ? 1 : -1))].ch[1 ^ k] = x;\n\t\tadd(x);\n\t}\n\tprint(g);\n} \n```",
        "postTime": 1532823341,
        "uid": 49719,
        "name": "__JR_\u98d8\u6447__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1377 \u3010[TJOI2011]\u6811\u7684\u5e8f\u3011"
    },
    {
        "content": "\u697c\u4e0b\u4e24\u4e2a\u9898\u89e3\u90fd\u8981\u5148\u6a21\u62df\u5efa\u6811\uff0c\u4f46\u662f\u6a21\u62df\u5efa\u6811\u662f\u4f1a\u9000\u5316\u5230O(N^2)\u7684\uff0c\u4f8b\u5982\u63d2\u5165\u987a\u5e8f\u662f1, 2, 3, ..., N\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7528\u4e00\u4e2a\u6709\u590d\u6742\u5ea6\u4fdd\u8bc1\u7684\u65b9\u6cd5\u5efa\u6811\u3002\n\n\u8bbeP[i]\u8868\u793a\u6570\u5b57i\u662f\u7b2c\u51e0\u4e2a\u88ab\u63d2\u5165\u7684\uff0c\u4e5f\u5c31\u662fP[ki]=i\u3002\u56e0\u4e3a\u63d2\u5165\u7684\u6570\u5b57\u662f1...N\uff0c\u90a3\u4e48\u6bcf\u4e00\u4e2a\u5b50\u6811\u5fc5\u7136\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\u81ea\u7136\u6570\uff08\u5047\u8bbe\u4e3a[x, y]\uff09\uff0c\u4e14\u8fd9\u4e2a\u5b50\u6811\u7684\u6839\u8282\u70b9\u662f x ~ y \u4e2d\u6700\u65e9\u88ab\u63d2\u5165\u7684\uff0c\u4e5f\u5c31\u662f\u6c42 P[x...y] \u7684\u6700\u5c0f\u503c\u3002\u6c42\u51fa\u6700\u5c0f\u503c\u4e4b\u540e\uff0c\u5047\u8bbe\u4e3a z\uff0c\u6211\u4eec\u5c06 z \u8bbe\u4e3a\u5f53\u524d\u5b50\u6811\u7684\u6839\u8282\u70b9\uff0c\u7136\u540e\u5c06\u533a\u95f4 [x, y] \u5206\u6210 [x, z-1] \u548c [z+1, y] \u9012\u5f52\u5904\u7406\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728 O(n log n) \u65f6\u95f4\u5185\u5c06\u6811\u5efa\u51fa\u6765\u3002\n\n```cpp\nint build_tree(int x, int y) { // \u4f20\u5165\u533a\u95f4\uff0c\u8fd4\u56de\u6839\u8282\u70b9\u3002\n  int z = find_min(x, y);\n  if (x < z) tree[z].l = build_tree(x, z-1);\n  if (z < y) tree[z].r = build_tree(z+1, y);\n  return z;\n}\n```\n\u5efa\u5b8c\u6811\u4e4b\u540e\uff0c\u90a3\u4e48\u5c31\u662f\u76f4\u63a5\u8f93\u51fa\u8fd9\u68f5\u6811\u7684\u5148\u5e8f\u904d\u5386\u5373\u53ef\u3002\n",
        "postTime": 1509159501,
        "uid": 54522,
        "name": "\u51b7\u6708\u51b0\u77b3",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1377 \u3010[TJOI2011]\u6811\u7684\u5e8f\u3011"
    },
    {
        "content": "\u8fd9\u9898\u96be\u5ea6\u6700\u9ad8\u4e5f\u53ea\u80fd\u5b9a\u7ea7\u5230\u3010\u63d0\u9ad8-\u3011\u5427\u2026\u2026\n\n\u505a\u6cd5\uff1a\u8d2a\u5fc3\u3002\n\n\u5148\u6309\u7167\u8f93\u5165\u6570\u636e\u5efa\u6811\uff0c\u540e\u76f4\u63a5\u8f93\u51fa\u524d\u5e8f\u904d\u5386\u3002\n\n\u7531\u4e8e\u6839\u4e00\u5b9a\u662f\u5148\u63d2\u5165\uff0c\u4e14\u5de6\u5b50\u8282\u70b9\u7684\u5e8f\u53f7\u4e00\u5b9a\u5c0f\u4e8e\u53f3\u5b50\u8282\u70b9\uff0c\u800c\u5de6\u53f3\u5b50\u6811\u7684\u63d2\u5165\u987a\u5e8f\u65e0\u5f71\u54cd\uff0c\u6545\u5206\u6cbb\u5904\u7406\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<queue>\n#include<cstdlib>\n#include<cmath>\n#define mem(a) memset(a, 0, sizeof(a))\nusing namespace std;\ntypedef long long LL;\ntypedef int T;\nint n, sz = 1;\nint v[100009];\nint ch[100009][2];\nT _read();\nvoid init();\nvoid solve();\nvoid dfs(int);\nvoid insert(int);\nvoid insert(int, int);\nint main() {\n    init();\n    solve();\n    return 0;\n}\nvoid init() {\n    n = _read();\n    v[1] = _read(); // \u8282\u70b91\u4e3aroot\n    for(int i = 2; i <= n; i++) {\n        int a = _read();\n        insert(a); // \u5efa\u6811\n    }\n}\nvoid solve() {\n    dfs(1); // \u524d\u5e8f\u904d\u5386\n} \nvoid insert(int x) {\n    insert(1, x);\n}\nvoid insert(int o, int x) {\n    int d = x > v[o] ? 1 : 0;\n    if(!ch[o][d]) {\n        ch[o][d] = ++sz;\n        v[sz] = x;\n        return;\n    }\n    insert(ch[o][d], x);\n}\nvoid dfs(int o) {\n    if(!o) return;\n    printf(\"%d \", v[o]);\n    dfs(ch[o][0]);\n    dfs(ch[o][1]);\n}\nT _read() {\n    T a = 0, f = 1;\n    char c = getchar();\n    while(c < '0' || c > '9') {\n        if(c == '-')\n            f *= -1;\n        c = getchar();\n    }\n    while(c <= '9' && c >= '0') {\n        a *= 10;\n        a += c - '0';\n        c = getchar();\n    }\n    return a * f;\n}\n```",
        "postTime": 1507215100,
        "uid": 19427,
        "name": "zby2001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1377 \u3010[TJOI2011]\u6811\u7684\u5e8f\u3011"
    }
]