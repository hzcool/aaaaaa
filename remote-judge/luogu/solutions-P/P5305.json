[
    {
        "content": "## [\u539f\u6587\u5730\u5740](https://www.cnblogs.com/bcoier/p/10788658.html)\n\n### \u524d\u7f6e\u829d\u58eb\uff1a[[LNOI2014]LCA](https://www.luogu.org/problemnew/show/P4211)\n\n~~\u8981\u662f\u8fd9\u9898\u653eHNOI\u5c31\u597d\u4e86~~\n\n\u539f\u9898\uff1a$\\sum_{l\u2264i\u2264r}dep[LCA(i,z)]$\n\n\u8fd9\u9898\uff1a$\\sum_{i\u2264r}dep[LCA(i,z)]^k$\n\n\u5bf9\u4e8e\u539f\u9898\uff0c\u6211\u4eec\u9700\u8981\u628a\u6bcf\u4e2a\u8be2\u95ee\u62c6\u62101~l-1 & 1~r\u518d\u8fdb\u884c\u5dee\u5206\uff08~~\u6240\u4ee5\u8fd9\u9898\u5e2e\u6211\u4eec\u7701\u53bb\u4e86\u4e00\u4e2a\u6b65\u9aa4~~\uff09\n\n### \u5148\u8003\u8651$k=1$~~\u539f\u9898~~\n\n\u6211\u4eec\u5148\u8f6c\u5316\u9898\u610f\n\n$dep[lca]\\ ==\\ dis[1][lca]+1\\ ==\\ lca->1$\u7684\u70b9\u6570\n\n\u6240\u4ee5\u6211\u4eec\u6bcf\u4e00\u4e2a\u70b9(x)\u5bf9\u7b54\u6848\u7684\u8d21\u732e($dep[lca(x, z)]$)\uff0c\u5c31\u662f\u4ed6\u4eec\u5230\u6839\u8282\u70b9\u7684\u516c\u5171\u8def\u5f84\u7684\u70b9\u6570\n\n\u4e8e\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a1->x\u7684\u94fe\u4e0a\u52a01\u5373\u53ef\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa1->z\u7684\u94fe\u4e0a\u7684\u548c\u5373\u53ef\n\n\u8fd9\u4e00\u70b9\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u6811\u5256$/LCT$\u89e3\u51b3\n\n\u4f46\u662f\u76f4\u63a5\u505a\u662f$O(N^2*$\u6811\u5256/$LCT)$\u7684\uff0c\u6211\u4eec\u8003\u8651\u83ab\u961f\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u53d8\u6210\u4e86$O(N\\sqrt{N}*$\u6811\u5256/$LCT)$\n\n~~\u4ec0\u4e48\uff1f\u4f60\u89c9\u5f97\u8fd9\u4e2a\u7b97\u6cd5\u8fd8\u4e0d\u591f\u4f18\u79c0\uff1f\u6240\u4ee5\u6211\u4eec\u6765\u8003\u8651\u4f18\u5316\u83ab\u961f~~\n\n\u83ab\u961f\u7684$\\sqrt{N}$\u662f\u600e\u4e48\u6765\u7684\uff1f\u4e0d\u505c\u7684\u79fb\u52a8\u5de6\u53f3\u7aef\u70b9\n\n\u4f46\u662f\u8fd9\u9053\u9898\u7684\u5de6\u7aef\u70b9\u662f\u56fa\u5b9a\u7684$(1)$\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u79fb\u52a8\u53f3\u7aef\u70b9\u5373\u53ef\uff0c\u800c\u53f3\u7aef\u70b9\u4e0d\u9700\u8981\u52a8\u6765\u52a8\u53bb\uff0c\u53ea\u9700\u8981\u5f80\u540e\u626b\u4e00\u904d\u5373\u53ef\uff0c\u590d\u6742\u5ea6\u662f$O(N*$\u6811\u5256/$LCT)$\n\n\u4ee3\u7801\u7684\u8bdd\u53ef\u4ee5\u53c2\u8003[[LNOI2014]LCA](https://www.luogu.org/problemnew/show/P4211)\n\n### \u8003\u8651k!=1\n\n\u6211\u4eec\u4e3a\u4ec0\u4e48k=1\u7684\u65f6\u5019\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u662f$1->x$\u8def\u5f84\u4e0a+1\uff1f\n\n\u8fd9\u4e2a1\u7684\u672c\u8d28\u662f\u6811\u4e0a\u5dee\u5206\uff0c\u5373\uff1a$(dep[x]+1)^1-dep[x]^1 = 1$\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u628a1\u6539\u6210k\u5373\u53ef\n\n\u6240\u4ee5\u73b0\u5728\u95ee\u9898\u53d8\u6210\u4e86\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u4e00\u4e2a\u70b9\u6709\u4e24\u4e2a\u6743\u503c$(a, b)$\uff0c\u6bcf\u4e00\u4e2a\u70b9\u7684\u70b9\u6743\u4e3a$a*b$\uff0c\u652f\u6301a\u6743\u503c\u533a\u95f4\u52a01\u548c\u533a\u95f4\u67e5\u8be2\n\n\u56e0\u4e3ab\u4e0d\u4f1a\u6539\u53d8\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7ebf\u6bb5\u6811\n\n\u628a\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u65b0\u5f04\u4e00\u4e2a\u6743\u503c\uff0c\u4e3a$\\sum_{l\u2264i\u2264r} b$\uff0c\u6bcf\u6b21\u66f4\u65b0\u533a\u95f4\u7684\u65f6\u5019\u7528\u8fd9\u4e2a\u6743\u503c$\\times sum$\u5373\u53ef\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define il inline\n#define re register\n#define debug printf(\"Now is Line : %d\\n\",__LINE__)\n#define file(a) freopen(#a\".in\",\"r\",stdin);freopen(#a\".out\",\"w\",stdout)\n#define int long long\n#define inf 123456789\n#define mod 998244353\nil int read() {\n    re int x = 0, f = 1; re char c = getchar();\n    while(c < '0' || c > '9') { if(c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9') x = x * 10 + c - 48, c = getchar();\n    return x * f;\n}\n#define rep(i, s, t) for(re int i = s; i <= t; ++ i)\n#define Next(i, u) for(re int i = head[u]; i; i = e[i].next)\n#define mem(k, p) memset(k, p, sizeof(k))\n#define ls k * 2\n#define rs k * 2 + 1\n#define _ 500005\nstruct edge {int v, next;}e[_];\nstruct ques {\n    int u, z, id;\n    il bool operator < (const ques x) const {return u < x.u;}\n}q[_];\nint n, m, k, val[_ << 2], sum[_ << 2], mi[_], head[_], cnt, ans[_], tag[_ << 2], now;\nint fa[_], dep[_], size[_], son[_], top[_], seg[_], col, rev[_];\nil void add(int u, int v) {\n    e[++ cnt] = (edge) {v, head[u]}, head[u] = cnt;\n}\nil int qpow(int a, int b) {\n    int r = 1;\n    while(b) {\n        if(b & 1) r = 1ll * r * a % mod;\n        b >>= 1, a = 1ll * a * a % mod;\n    }\n    return r;\n}\nil void dfs1(int u) {\n    dep[u] = dep[fa[u]] + 1, size[u] = 1;\n    Next(i, u) {\n        if(e[i].v == fa[u]) continue;\n        dfs1(e[i].v), size[u] += size[e[i].v];\n        if(size[son[u]] < size[e[i].v]) son[u] = e[i].v;\n    }\n}\nil void dfs2(int u, int fr) {\n    top[u] = fr, seg[u] = ++ col, rev[col] = u;\n    if(son[u]) dfs2(son[u], fr);\n    Next(i, u) if(e[i].v != son[u] && e[i].v != fa[u]) dfs2(e[i].v, e[i].v);\n}\nil void build(int k, int l, int r) {\n    if(l == r) return (void)(val[k] = (mi[dep[rev[l]]] - mi[dep[rev[l]] - 1] + mod) % mod);\n    int mid = (l + r) >> 1;\n    build(ls, l, mid), build(rs, mid + 1, r), val[k] = (val[ls] + val[rs]) % mod;\n}\nil void pushdown(int k) {\n    if(!tag[k]) return;\n    sum[ls] = (sum[ls] + ((tag[k] * val[ls]) % mod)) % mod;\n    sum[rs] = (sum[rs] + ((tag[k] * val[rs]) % mod)) % mod;\n    tag[ls] += tag[k], tag[rs] += tag[k], tag[k] = 0;\n}\nil void change(int k, int l, int r, int ll, int rr) {\n    if(l > rr || ll > r) return;\n    if(l >= ll && r <= rr) {sum[k] = (sum[k] + val[k]) % mod, ++ tag[k]; return;}\n    int mid = (l + r) >> 1;\n    pushdown(k), change(ls, l, mid, ll, rr), change(rs, mid + 1, r, ll, rr);\n    sum[k] = (sum[ls] + sum[rs]) % mod;\n}\nil int query(int k, int l, int r, int ll, int rr) {\n    if(l > rr || ll > r) return 0;\n    if(l >= ll && r <= rr) return sum[k];\n    int mid = (l + r) >> 1;\n    pushdown(k);\n    return (query(ls, l, mid, ll, rr) + query(rs, mid + 1, r, ll, rr)) % mod;\n}\nil int query(int u) {\n    int ans = 0;\n    while(top[u]) ans = (ans + query(1, 1, n, seg[top[u]], seg[u])) % mod, u = fa[top[u]];\n    return ans;\n}\nil void change(int u) {\n    while(top[u]) change(1, 1, n, seg[top[u]], seg[u]), u = fa[top[u]];\n}\nsigned main() {\n    n = read(), m = read(), k = read() % (mod - 1), now = 1;\n    rep(i, 1, n) mi[i] = qpow(i, k);\n    rep(i, 2, n) fa[i] = read(), add(fa[i], i);\n    rep(i, 1, m) q[i].id = i, q[i].u = read(), q[i].z = read();\n    sort(q + 1, q + m + 1), dfs1(1), dfs2(1, 1), build(1, 1, n);\n    rep(i, 1, n) {\n        change(i);\n        while(i == q[now].u) ans[q[now].id] = query(q[now].z), ++ now;\n    }\n    rep(i, 1, m) printf(\"%lld\\n\", ans[i]);\n    return 0;\n}\n```",
        "postTime": 1556502854,
        "uid": 57014,
        "name": "Nemlit",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5305 \u3010[GXOI/GZOI2019]\u65e7\u8bcd\u3011"
    },
    {
        "content": "\u4e0d\u540c\u4e8e\u5176\u4ed6\u9898\u89e3\u7684\u6811\u94fe\u5256\u5206+\u6811\u72b6\u6570\u7ec4\u505a\u6cd5\u3002\n\n\u7b2c\u4e00\u6b65\u8fd8\u662f\u79bb\u7ebf\uff0c\u7136\u540e\u6309\u7167$x$\u4ece\u5c0f\u5230\u5927\u63d2\u5165\u3002\n\n\u6211\u4eec\u8003\u8651\u8be2\u95ee$y$\u65f6\uff0c$y$\u5230\u6839\u8def\u5f84\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u8d21\u732e\u3002\n\n\u4ee4$sz_i$\u8868\u793a\u5f53\u524d\u4ee5\u8282\u70b9$i$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u5df2\u7ecf\u88ab\u63d2\u5165\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u5219$y$\u7684\u8d21\u732e\u4e3a$dep(y)^k\\times sz_y$\uff0c\u800c$y$\u7684\u7956\u5148$z$\u7684\u8d21\u732e\u4e3a$dep(y)^k\\times (sz_z-sz_p)$\uff0c\u5176\u4e2d$p$\u4e3a$y$\u5230\u6839\u7684\u8def\u5f84\u4e2d\uff0c\u6700\u6d45\u7684\u6bd4$z$\u6df1\u7684\u8282\u70b9\u3002\n\n\u5982\u679c$y$\u5230\u6839\u662f\u4e00\u6761\u91cd\u94fe\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u8f7b\u513f\u5b50\u7684\u5b50\u6811\u8d21\u732e\u548c$S_x$\uff08\u5305\u62ec\u81ea\u5df1\u672c\u8eab\uff09\uff0c\u7136\u540e\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u5c31\u597d\u4e86\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5bf9\u539f\u6811\u8fdb\u884c\u6811\u94fe\u5256\u5206\uff0c\u6bcf\u6b21\u8be2\u95ee\u90fd\u662f\u82e5\u5e72\u6bb5\u91cd\u94fe\u548c\u82e5\u5e72\u6761\u8f7b\u8fb9\u3002\u91cd\u94fe\u4e0a\u7684\u6211\u4eec\u76f4\u63a5\u5728\u6570\u636e\u7ed3\u6784\u4e0a\u67e5\uff0c\u8f7b\u8fb9\u4e0a\u7684\u7279\u6b8a\u5904\u7406\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u6211\u4eec\u5177\u4f53\u6765\u770b\u4e00\u4e0b\u5982\u4f55\u7ef4\u62a4\uff1a\n\n\u8003\u8651\u65b0\u63d2\u5165\u4e00\u4e2a\u8282\u70b9$x$\uff0c\u5219\u5176\u5230\u6839\u8def\u5f84\u4e0a\u7684\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u8282\u70b9\u4e2a\u6570\u90fd\u8981\u52a01\u3002\u800c$S$\u4e2d\u9700\u8981\u53d8\u5316\u7684\u8282\u70b9\u53ea\u6709\u8282\u70b9$x$\u672c\u8eab\u548c\u6bcf\u6761\u8f7b\u8fb9\u7684\u9876\u3002\n\n\u8003\u8651\u67e5\u8be2\u4e00\u4e2a\u8282\u70b9\uff0c\u5bf9\u4e8e\u6bcf\u6761\u8f7b\u8fb9\u9876\u7684\u70b9\uff0c\u6211\u4eec\u5df2\u7ecf\u7ef4\u62a4\u4e86\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u51fa\u5176\u771f\u5b9e\u6709\u8d21\u732e\u7684\u8282\u70b9\u4e2a\u6570\uff0c\u7136\u540e\u7edf\u8ba1\u8fdb\u7b54\u6848\u3002\u5176\u4ed6\u7684\u70b9\u7684\u8d21\u732e\u5728$S$\u4e2d\u5df2\u7ecf\u7ef4\u62a4\uff0c\u76f4\u63a5\u67e5\u8be2\u5373\u53ef\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u8d44\u74f7\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\u7684\u6570\u636e\u7ed3\u6784\u548c\u4e00\u4e2a\u8d44\u74f7\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u7684\u6570\u636e\u7ed3\u6784\u3002\n\n\u4e24\u8005\u90fd\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log^2 n)$\u3002\n\n\u57282019\u5e744\u670823\u65e5\u62ff\u5230\u5f53\u65f6\u6d1b\u8c37\u548cLOJ\u7684\u53cc\u6700\u4f18\u89e3\u3002\n\n~~\u52a0\u90a3\u4e2a\u8bfb\u5165\u4f18\u5316\u7eaf\u5c5e\u662f\u56e0\u4e3a\u5f3a\u8feb\u75c7\uff0c\u4e0d\u52a0\u4e5f\u662f\u5f53\u65f6\u6700\u4f18\u89e3~~\n\n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<algorithm>\ntypedef long long LL;\nconst int md=998244353,N=50005;\nchar buf[(int)5e6],*ss=buf;\ninline void init(){buf[fread(buf,1,(int)5e6-1,stdin)]='\\n';fclose(stdin);}\ninline int readint(){\n\tint d=0;\n\twhile(!isdigit(*ss))++ss;\n\twhile(isdigit(*ss))d=d*10+(*ss++&15);\n\treturn d;\n}\nint n,Q,k,fa[N],head[N],cnt,ans[N],dep[N],sz[N],top[N],son[N],dfn[N],idx,dp[N];\nint b1[N],b2[N],c[N];\ninline void upd(int&a){a+=a>>31&md;}\ninline void add1(int i,int x){for(;i<=n;i+=i&-i)b1[i]+=x;}\ninline int ask1(int i){int x=0;for(;i;i^=i&-i)x+=b1[i];return x;}\ninline void add2(int i,int x){for(x>0?x-=md:0;i<=n;i+=i&-i)upd(b2[i]+=x);}\ninline int ask2(int i){int x=0;for(;i;i^=i&-i)upd(x+=b2[i]-md);return x;}\nstruct edge{\n\tint to,nxt;\n}e[N];\ninline int pow(int a){\n\tint ret=1,b=k;\n\tfor(;b;b>>=1,a=(LL)a*a%md)if(b&1)ret=(LL)ret*a%md;\n\treturn ret;\n}\nstruct que{\n\tint x,y,id;\n\tinline bool operator<(const que&rhs)const{return x<rhs.x;}\n}q[N];\nvoid dfs(int now){\n\tsz[now]=1,son[now]=0;\n\tfor(int i=head[now];i;i=e[i].nxt){\n\t\tdep[e[i].to]=dep[now]+1,dfs(e[i].to),sz[now]+=sz[e[i].to];\n\t\tif(!son[now]||sz[son[now]]<sz[e[i].to])son[now]=e[i].to;\n\t}\n}\nvoid dfs2(int now){\n\tdfn[now]=++idx;\n\tif(son[now])top[son[now]]=top[now],dfs2(son[now]);\n\tfor(int i=head[now];i;i=e[i].nxt)\n\tif(e[i].to!=son[now])dfs2(top[e[i].to]=e[i].to);\n}\nvoid add(int x){\n\tfor(;x;x=fa[top[x]])\n\tadd1(dfn[top[x]],1),add1(dfn[x]+1,-1),\n\tadd2(dfn[x],-c[x]),add2(dfn[x],c[x]=(LL)dp[x]*(ask1(dfn[x])-ask1(dfn[son[x]]))%md);\n}\nint query(int x){\n\tint ret=0,pre=0;\n\tfor(;x;x=fa[top[x]]){\n\t\tret=(ret+(LL)dp[x]*(ask1(dfn[x])-ask1(dfn[pre])))%md;\n\t\tif(x!=top[x])x=fa[x],upd(ret+=ask2(dfn[x])-md),upd(ret-=ask2(dfn[top[x]]-1));\n\t\tpre=top[x];\n\t}\n\treturn ret;\n}\nint main(){\n\tinit();\n\tn=readint(),Q=readint(),k=readint();\n\tfor(int i=2;i<=n;++i)\n\te[++cnt]=(edge){i,head[fa[i]=readint()]},head[fa[i]]=cnt;\n\tdfs(dep[1]=1),dfs2(top[1]=1);\n\tfor(int i=1;i<=n;++i)dp[i]=pow(dep[i]);\n\tfor(int i=1;i<=Q;++i)q[i].x=readint(),q[q[i].id=i].y=readint();\n\tstd::sort(q+1,q+Q+1);\n\tfor(int i=1,x=0;i<=Q;++i){\n\t\twhile(x<q[i].x)\n\t\tadd(++x);\n\t\tans[q[i].id]=query(q[i].y);\n\t}\n\tfor(int i=1;i<=Q;++i)\n\tprintf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1556011987,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5305 \u3010[GXOI/GZOI2019]\u65e7\u8bcd\u3011"
    },
    {
        "content": "[$$\\color{green}\\Large\\texttt{\u300e\u83dc\u9e21\u7684blog\u300f}$$](https://www.luogu.org/blog/zyxxs/)\n\n\u5982\u679c$k=1$\uff0c\u90a3\u4e48\u5c31\u662f\u4e00\u9053\u539f\u9898\uff1a[P4211 [LNOI2014]LCA](https://www.luogu.org/problem/P4211)\uff0c\u987a\u4fbf\u6302\u4e00\u4e0b\u6211\u6b64\u9898\u7684\u9898\u89e3\uff1a[click here](https://www.luogu.org/blog/zyxxs/solution-p4211)\u3002\u4e0b\u9762\u7684\u8bb2\u89e3\u4ee5\u8fd9\u9898\u4e3a\u57fa\u7840\u3002\n\n\u5728\u4e0a\u9762\u90a3\u9053\u9898\u4e2d\uff0c\u6211\u4eec\u63d0\u5230\uff0c\u8981\u5bf9$u$\u5230\u6839\u7684\u8def\u5f84\u4e0a\u6240\u6709\u70b9+1\uff0c$v$\u5230\u6839\u7684\u8def\u5f84\u7684\u6743\u503c\u5c31\u662f$u,v$\u7684LCA\u7684\u6df1\u5ea6\uff08\u76841\u6b21\u65b9\uff09\u3002\u4fee\u6539\u548c\u67e5\u8be2\u4f7f\u7528\u6811\u5256\u518d\u52a0\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u601d\u8003$k\\neq1$\u7684\u60c5\u51b5\u3002\u539f\u6765$k=1$\u7684+1\u662f\u4ece\u54ea\u91cc\u6765\u7684\uff1f\u6df1\u5ea6\u4ece$d$\u53d8\u6210$d+1$\uff0c\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u4f1a\u589e\u957f$(d+1)^1-d^1=1$\uff0c\u6240\u4ee5\u6211\u4eec+1\u3002\n\n\u5982\u679c\u628a1\u6539\u6210$k$\u5462\uff1f$(d+1)^k-d^k=\\dots$\u7b97\u4e86\u6211\u4eec\u4e5f\u4e0d\u662f\u5f88\u5173\u5fc3\u67ff\u5b50\uff0c\u53cd\u6b63\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\u53ea\u6709\u4e00\u4e2a\uff0c\u76f4\u63a5\u7b97\u51fa\u6765\u5c31\u597d\u4e86\u3002\n\n\u73b0\u5728\u7684\u95ee\u9898\u662f\uff0c\u6211\u4eec\u9700\u8981\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217\uff0c\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\uff1a\n\n- \u5bf9$[l,r]$\u7684\u6bcf\u4e00\u4e2a\u6570\u52a0$A[i]=dep[i]^k-(dep[i]-1)^k$\n\n- \u6c42$[l,r]$\u7684\u533a\u95f4\u548c\n\n\u8fd9\u975e\u5e38sb\uff0c\u5904\u7406\u51fa\u6bcf\u4e2a\u533a\u95f4$[l,r]$\u7684$\\sum _{i=l}^rA[i]$\u5c31\u53ef\u4ee5\u8f7b\u677e\u7ef4\u62a4\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int tt=998244353;\n\nint N,M,K;\nint lnk[50005];\nint pre[50005],tgt[50005],cnt;\nvoid add_E(int u,int v){\n\tpre[++cnt]=lnk[u],tgt[cnt]=v,lnk[u]=cnt;\n}\n\nint fa[50005],son[50005],s[50005],dep[50005];\nint top[50005],seg[50005],rev[50005],idx;\nvoid dfs1(int x){\n\ts[x]=1;dep[x]=dep[fa[x]]+1;\n\tfor(int e=lnk[x];e;e=pre[e]){\n\t\tdfs1(tgt[e]),s[x]+=s[tgt[e]];\n\t\tif(s[tgt[e]]>s[son[x]]) son[x]=tgt[e];\n\t}\n}\nvoid dfs2(int x){\n\tseg[x]=++idx;rev[idx]=x;\n\tif(son[x]) top[son[x]]=top[x],dfs2(son[x]);\n\tfor(int e=lnk[x];e;e=pre[e])if(tgt[e]!=son[x])\n\t\ttop[tgt[e]]=tgt[e],dfs2(tgt[e]);\n}\n\nint A[50005];\n\nint ANS[50005];\nstruct Qs{\n\tint u,v,pos;\n\tbool operator <(const Qs b)const{return u<b.u;}\n}Q[50005];\n\nint Key[200005],Sum[200005],Lzy[200005];\nvoid push_up(int x){Sum[x]=(Sum[x<<1]+Sum[x<<1|1])%tt;}\nvoid push_down(int x,int l,int r){\n\tint mid=(l+r)>>1;\n\tSum[x<<1]=(Sum[x<<1]+1LL*Key[x<<1]*Lzy[x]%tt)%tt;\n\tLzy[x<<1]=(Lzy[x<<1]+Lzy[x])%tt;\n\tSum[x<<1|1]=(Sum[x<<1|1]+1LL*Key[x<<1|1]*Lzy[x]%tt)%tt;\n\tLzy[x<<1|1]=(Lzy[x<<1|1]+Lzy[x])%tt;\n\tLzy[x]=0;\n}\nvoid Build(int x,int l,int r){\n\tif(l==r){Key[x]=A[rev[l]];return;}\n\tint mid=(l+r)>>1;\n\tBuild(x<<1,l,mid);Build(x<<1|1,mid+1,r);\n\tKey[x]=(Key[x<<1]+Key[x<<1|1])%tt;\n}\nvoid Update(int x,int l,int r,int L,int R){\n\tif(L<=l&&r<=R){Sum[x]=(Sum[x]+Key[x]%tt)%tt;Lzy[x]=(Lzy[x]+1)%tt;return;}\n\tpush_down(x,l,r);\n\tint mid=(l+r)>>1;\n\tif(L<=mid) Update(x<<1,l,mid,L,R);\n\tif(R>mid) Update(x<<1|1,mid+1,r,L,R);\n\tpush_up(x);\n}\nint Query(int x,int l,int r,int L,int R){\n\tif(L<=l&&r<=R) return Sum[x];\n\tpush_down(x,l,r);\n\tint mid=(l+r)>>1,ans=0;\n\tif(L<=mid) ans=(ans+Query(x<<1,l,mid,L,R))%tt;\n\tif(R>mid) ans=(ans+Query(x<<1|1,mid+1,r,L,R))%tt;\n\tpush_up(x);\n\treturn ans;\n}\n\nvoid Chain_Update(int x){\n\twhile(x){\n\t\tUpdate(1,1,N,seg[top[x]],seg[x]);\n\t\tx=fa[top[x]];\n\t}\n}\nint Chain_Query(int x){\n\tint ans=0;\n\twhile(x){\n\t\tans=(ans+Query(1,1,N,seg[top[x]],seg[x]))%tt;\n\t\tx=fa[top[x]];\n\t}\n\treturn ans;\n}\n\nint now_id=1;\nint qpow(int a,int k){\n\tint ans=1;\n\twhile(k){\n\t\tif(k&1) ans=1LL*ans*a%tt;\n\t\ta=1LL*a*a%tt;\n\t\tk>>=1;\n\t}\n\treturn ans;\n}\n\nint main(){\n\tscanf(\"%d%d%d\",&N,&M,&K);\n\tfa[1]=0;\n\tfor(int i=2;i<=N;i++) scanf(\"%d\",&fa[i]),add_E(fa[i],i);\n\tdfs1(1);top[1]=1;dfs2(1);\n\tfor(int i=1;i<=N;i++) A[i]=(qpow(dep[i],K)-qpow(dep[i]-1,K)+tt)%tt;\n\tBuild(1,1,N);\n\tfor(int i=1;i<=M;i++){\n\t\tint r,z;scanf(\"%d%d\",&r,&z);\n\t\tQ[i].u=r,Q[i].v=z,Q[i].pos=i;\n\t}\n\tsort(Q+1,Q+M+1);\n\tfor(int i=1;i<=N;i++){\n\t\tChain_Update(i);\n\t\twhile(Q[now_id].u==i&&now_id<=M){\n\t\t\tANS[Q[now_id].pos]=Chain_Query(Q[now_id].v);\n\t\t\tnow_id++;\n\t\t}\n\t}\n\tfor(int i=1;i<=M;i++) printf(\"%d\\n\",ANS[i]);\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1568204970,
        "uid": 58567,
        "name": "x\u4e49x",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5305 \u3010[GXOI/GZOI2019]\u65e7\u8bcd\u3011"
    },
    {
        "content": "\u9898\u76ee\u5730\u5740\uff1a[P5305 [GXOI/GZOI2019]\u65e7\u8bcd](https://www.luogu.org/problemnew/show/P5305)\n\n\u8fd9\u91cc\u662f\u5b98\u65b9\u9898\u89e3\n\n$$\\sum_{i \\leq x}^{}\\ depth(lca(i,y))^k$$\n\n### $k = 1$\n\n\u6c42\u7684\u662f $\\sum_{i \\leq x}^{}\\ depth(lca(i,y))$ \uff0c\u4e00\u5806\u70b9\u7136\u540e\u6bcf\u4e2a\u70b9\u548c $y$ \u6c42 $lca$ \u7136\u540e\u6df1\u5ea6\u6c42\u548c\u3002\n\n\u603b\u4f53\u601d\u8def\u662f\u628a $lca$ \u7684\u503c\u644a\u6d3e\u5230\u8fd9\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\uff08\u8fd9\u4e2a\u4e1c\u897f\u4e5f\u53eb\u6811\u4e0a\u5dee\u5206\uff1f\uff09\uff0c\u518d\u79bb\u7ebf\u89e3\u51b3\u6240\u6709\u8be2\u95ee\u3002\n\n\u7ef4\u62a4\u4e00\u4e2a\u70b9\u6743\u6570\u7ec4 $sum$ \uff0c\u521d\u59cb\u4e3a $0$ \uff0c\u7136\u540e\u5c06 $y$ \u5230\u6839\u7684\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743\u8bbe\u4e3a $1$ \uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $i \\leq x$ \uff0c\u6c42\u4ece $i$ \u5230\u6839\u7684\u6743\u503c\u548c\u4e3a\u4e0a\u9762\u8981\u6c42\u7684\u7b54\u6848\uff0c\u4f46\u8fd9\u6837\u5c31 $O(n)$ \u4e86\u3002\n\n\uff08\u53ef\u4ee5\u53cd\u5411\u8003\u8651\uff09\uff0c\u7ef4\u62a4\u4e00\u4e2a\u70b9\u6743\u6570\u7ec4 $sum$ \uff0c\u521d\u59cb\u4e3a $0$ \uff0c\u5bf9\u4e8e\u5c0f\u4e8e\u7b49\u4e8e $x$ \u7684\u70b9 $i$ \uff0c\u5c06 $i$ \u5230\u6839\u7684\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u7684\u70b9\u6743 **++** \u3002\u7136\u540e\u6c42\u4ece $y$ \u5230\u6839\u7684\u6743\u503c\u548c\u4e5f\u662f\u4e0a\u9762\u8981\u6c42\u7684\u7b54\u6848\u3002\u8fd9\u79cd\u65b9\u6cd5\u6c42\u53ef\u4ee5\u6309 $x$ \u6392\u5e8f\uff0c\u7136\u540e\u79bb\u7ebf\uff0c $x$ \u76f8\u7b49\u7684\u8be2\u95ee\u4e00\u5757\u95ee\u3002\n\n\u53ef\u4ee5\u6811\u94fe\u5256\u5206 + \u7ebf\u6bb5\u6811\u89e3\u51b3\u3002 $O(nlog^2n)$ \u3002\u6216\u8005 **LCT** \u4e5f\u884c\u3002\n\n### $k > 1$\n\n$k = 2$ \u7684\u8bdd\uff0c\u6309\u7167\u4e0a\u8ff0\u601d\u8def\u60f3\uff0c\u628a $lca^2$ \u7684\u503c\u644a\u5230\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u8bdd\u5c31\u4e0d\u662f\u4e4b\u524d\u7684 $1,1,1,...$ \uff0c\u53d8\u6210\u4e86 $1,3,5,...$ \u76f4\u63a5\u770b\u7684\u8bdd\u95ee\u9898\u53d8\u6210\u4e86\u7ebf\u6bb5\u6811\u533a\u95f4\u52a0\u7b49\u5dee\u6570\u5217\uff0c\u597d\u50cf\u6539\u4e00\u4e0b\u7ebf\u6bb5\u6811\u5b9e\u73b0\u4e5f\u80fd\u505a\uff08\u6240\u4ee5\u7ed9\u4e86\u70b9\u90e8\u5206\u5206\uff09\u3002\n\n\u4f46\u662f $k > 2$ \u7684\u65f6\u5019\u5c31\u6bd4\u8f83\u9ebb\u70e6\u4e86\u3002\n\n\u57fa\u4e8e\u628a $lca^k$ \u644a\u5230\u4ece\u8fd9\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u8fd9\u4e2a\u601d\u8def\uff0c\u5b9e\u9645\u4e0a\u5bf9\u4e8e\u6df1\u5ea6\u662f $x$ \u7684\u70b9\u6765\u8bf4\uff0c\u8fd9\u4e2a\u70b9\u6bcf\u6b21\u70b9\u6743\u589e\u52a0\u7684\u503c\u56fa\u5b9a\u662f $x ^ k - (x - 1) ^ k$ \u3002\n\n\u6240\u4ee5\u5b9e\u9645\u4e0a\uff0c\u7ebf\u6bb5\u6811\u6253\u6807\u8bb0\u53ea\u7528\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u88ab\u7b97\u4e86\u591a\u5c11\u6b21 $cnt$ \u5373\u53ef\u3002\u7136\u540e\u5b9e\u9645\u4e0a\u7684\u6743\u503c\u548c\u662f $sum_i = cnt_i * (dep_i^k -(dep_i - 1)^k)$ \uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ea\u6709 $cnt$ \u533a\u95f4\u52a0 $1$ \uff0c\u4e8e\u662f\u9884\u5904\u7406\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u533a\u95f4\u7684 $\\sum (dep_i^k -(dep_i - 1)^k)$ \u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u62ff\u7ebf\u6bb5\u6811\u7ef4\u62a4 $sum$ \u6570\u7ec4\u3002\n\n\u4e8e\u662f\u8fd8\u662f\u4e4b\u524d\u7684\u6811\u94fe\u5256\u5206 + \u7ebf\u6bb5\u6811\u89e3\u51b3\u3002 $O(nlog^2n)$ \u3002\u6216\u8005 **LCT** \u4e5f\u884c\u3002\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cassert>\n\n// by zrt\n// zhangruotian@foxmail.com\n\nusing namespace std;\n\ntypedef long long LL;\n\nconst int MAXN = 50000+5;\nconst LL mod = 998244353;\n\nint n,Q,k;\nint H[MAXN], X[MAXN], P[MAXN], tot;\nint fa[MAXN], dep[MAXN], dfn[MAXN], invdfn[MAXN], siz[MAXN], son[MAXN], top[MAXN];\n\ninline void add(int x,int y) {\n\tP[++tot]=y;\n\tX[tot]=H[x];\n\tH[x]=tot;\n}\n\nstruct Query {\n\tint x,y,id;\n} query[MAXN];\n\nint ans[MAXN];\n\n\nbool cmp_by_x(Query a, Query b) {\n\treturn a.x<b.x;\n}\n\nvoid dfs1(int x) {\n\tdep[x] = dep[fa[x]] + 1;\n\tsiz[x] = 1;\n\tfor(int i=H[x]; i; i=X[i]) {\n\t\tdfs1(P[i]);\n\t\tsiz[x] += siz[P[i]];\n\t\tif(siz[P[i]]>siz[son[x]]) {\n\t\t\tson[x] = P[i];\n\t\t}\n\t}\n}\n\nint tim;\n\nvoid dfs2(int x) {\n\tdfn[x] = ++tim;\n\tif(!top[x]) top[x]=x;\n\tif(son[x]) top[son[x]] = top[x], dfs2(son[x]);\n\tfor(int i=H[x]; i; i=X[i]) {\n\t\tif(P[i] == son[x]) continue;\n\t\tdfs2(P[i]);\n\t}\n}\n\nLL pow(LL a,LL b,LL p) {\n\tLL ret = 1%p;\n\twhile(b) {\n\t\tif(b&1) ret = ret*a%p;\n\t\tb>>=1;\n\t\ta=a*a%p;\n\t}\n\treturn ret;\n}\n\nconst int MAXN4 = MAXN*4;\nstruct SEGMENT_TREE {\n\tLL sum[MAXN4], cnt[MAXN4], pre[MAXN4];\n\tvoid updsum(int o) {\n\t\tsum[o] = (sum[o<<1] + sum[o<<1|1])%mod;\n\t}\n\tvoid bd(int o,int l,int r) {\n\t\tif(l==r) {\n\t\t\tpre[o] = (pow(dep[invdfn[l]],k,mod) - pow(dep[invdfn[l]]-1,k,mod) + mod)%mod;\n\t\t\tcnt[o] = sum[o] = 0;\n\t\t} else {\n\t\t\tint mid=(l+r)/2;\n\t\t\tbd(o<<1,l,mid);\n\t\t\tbd(o<<1|1,mid+1,r);\n\t\t\tpre[o] = (pre[o<<1]+pre[o<<1|1])%mod;\n\t\t}\n\t}\n\tvoid build() {\n\t\tbd(1,1,n);\n\t}\n\tvoid down(int o) {\n\t\tif(cnt[o]>0) {\n\t\t\tsum[o<<1] = (sum[o<<1]+(pre[o<<1]*cnt[o])%mod)%mod;\n\t\t\tcnt[o<<1] += cnt[o];\n\t\t\tsum[o<<1|1] = (sum[o<<1|1]+(pre[o<<1|1]*cnt[o])%mod)%mod;\n\t\t\tcnt[o<<1|1] += cnt[o];\n\t\t\tcnt[o]=0;\n\t\t}\n\t}\n\tvoid add(int o,int l,int r,int L,int R) {\n\t\tif(l == L && r == R) {\n\t\t\tsum[o] = (sum[o]+pre[o]) % mod;\n\t\t\tcnt[o] ++;\n\t\t} else {\n\t\t\tint mid=(l+r)/2;\n\t\t\tdown(o);\n\t\t\tif(R<=mid) add(o<<1,l,mid,L,R);\n\t\t\telse if(L>mid) add(o<<1|1,mid+1,r,L,R);\n\t\t\telse add(o<<1,l,mid,L,mid), add(o<<1|1,mid+1,r,mid+1,R);\n\t\t\tupdsum(o);\n\t\t}\n\t}\n\tvoid add(int l,int r) {\n\t\tassert(l<=r);\n\t\tadd(1,1,n,l,r);\n\t}\n\tLL ask(int o,int l,int r,int L,int R) {\n\t\tif(l==L && r == R) {\n\t\t\treturn sum[o];\n\t\t} else {\n\t\t\tint mid=(l+r)/2;\n\t\t\tdown(o);\n\t\t\tif(R<=mid) return ask(o<<1,l,mid,L,R);\n\t\t\telse if(L>mid) return ask(o<<1|1,mid+1,r,L,R);\n\t\t\telse return (ask(o<<1,l,mid,L,mid) + ask(o<<1|1,mid+1,r,mid+1,R))%mod;\n\t\t}\n\t}\n\tLL ask(int l,int r) {\n\t\tassert(l<=r);\n\t\treturn ask(1,1,n,l,r);\n\t}\n} tree;\n\nvoid prepare() {\n\tdfs1(1);\n\tdfs2(1);\n\tassert(tim == n);\n\tfor(int i=1; i<=n; i++) invdfn[dfn[i]] = i;\n\ttree.build();\n}\n\nvoid add_point(int x) {\n\twhile(x) {\n\t\ttree.add(dfn[top[x]], dfn[x]);\n\t\tx=fa[top[x]];\n\t}\n}\n\nLL ask(int x) {\n\tLL ret = 0;\n\twhile(x) {\n\t\tret = (ret + tree.ask(dfn[top[x]], dfn[x]))%mod;\n\t\tx=fa[top[x]];\n\t}\n\treturn ret;\n}\n\nint main() {\n\tscanf(\"%d%d%d\",&n,&Q,&k);\n\tassert(n+5 <= MAXN );\n\tassert(Q+5 <= MAXN );\n\n\tfor(int i=2,x; i<=n; i++) {\n\t\tscanf(\"%d\",&x);\n\t\tadd(x,i);\n\t\tfa[i]=x;\n\t}\n\tfor(int i=1; i<=Q; i++) {\n\t\tscanf(\"%d%d\",&query[i].x,&query[i].y);\n\t\tquery[i].id = i;\n\t}\n\n\tprepare();\n\n\tsort(query+1,query+Q+1,cmp_by_x);\n\tint p = 1;\n\tfor(int i=1; i<=n; i++) {\n\t\tadd_point(i);\n\t\twhile(p <= Q && query[p].x == i) {\n\t\t\tans[query[p].id] = ask(query[p].y);\n\t\t\tp++;\n\t\t}\n\t}\n\tassert(p==Q+1);\n\n\tfor(int i=1; i<=Q; i++) {\n\t\tprintf(\"%d\\n\",ans[i]);\n\t}\n\n\treturn 0;\n}\n```",
        "postTime": 1555508966,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "P5305 [GXOI/GZOI2019]\u65e7\u8bcd"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u4e00\u68f5 $n$ \u4e2a\u70b9\uff0c\u4ee5 $1$ \u4e3a\u6839\u7684\u6709\u6839\u6811\u548c\u4e00\u4e2a\u6574\u6570 $k$\uff0c$q$ \u7ec4\u8be2\u95ee\uff0c\u6bcf\u7ec4\u7ed9\u5b9a $x,y$\uff0c\u6c42\uff1a\n\n$$\\sum\\limits_{i=1}^{x}\\operatorname{depth}\\left(\\operatorname{lca}(x,y)\\right)^k$$\n\n\u5bf9 $998244353$ \u53d6\u6a21\u3002\n\n$\\texttt{Data Range:}1\\leq n,q\\leq 5\\times 10^4,1\\leq k\\leq 10^9$\n\n### \u9898\u89e3\n\n[\u4e0d\u4e00\u5b9a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Karry5307/p/13656239.html)\n\n\u4e00\u5b9a\u8981\u8fc7\u554a >_<\n\n\u9996\u5148\u770b\u4e00\u4e2a\u5f31\u5316\u7248\uff1a[[LNOI2014]LCA](https://www.luogu.com.cn/problem/P4211)\uff0c\u5148\u8003\u8651\u8fd9\u4e2a\u9898\u76ee\u600e\u4e48\u505a\u3002\n\n\u6ce8\u610f\u5230\u8fd9\u91cc\u6709\u4e00\u4e2a\u5f88\u6734\u7d20\u7684\u6c42 $x,y$ \u7684 LCA \u7684\u65b9\u6cd5\uff1a\u9996\u5148\u5148\u5c06 $x$ \u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u6253\u4e2a\u6807\u8bb0\uff0c\u7136\u540e $y$ \u5230\u6839\u7684\u8def\u5f84\u4e2d\u6df1\u5ea6\u6700\u5927\u7684\u70b9\u5c31\u662f\u4e24\u4e2a\u70b9\u7684 LCA\u3002\n\n\u6ce8\u610f\u5230\u5728 $y$ \u5230\u6839\u7684\u8def\u5f84\u4e0a\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u88ab\u6253\u4e86\u6807\u8bb0\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u7684\u6240\u6709\u7956\u5148\u90fd\u4f1a\u88ab\u6253\u6807\u8bb0\u3002\u6240\u4ee5\u8bf4\uff0c$x,y$ \u7684 LCA \u7684\u6240\u6709\u7956\u5148\u90fd\u662f\u88ab\u6253\u6807\u8bb0\u7684\uff0c\u800c $y$ \u5230 LCA \u7684\u8fd9\u4e00\u6bb5\u90fd\u662f\u6ca1\u6253\u6807\u8bb0\u7684\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u901a\u8fc7\u6570\u4e00\u4e0b $y$ \u5230\u6839\u4e2d\u88ab\u6253\u6807\u8bb0\u70b9\u7684\u4e2a\u6570\u5f97\u5230 $\\operatorname{depth}\\left(\\operatorname{lca}(x,y)\\right)$\u3002\n\n\u5728\u8fd9\u4e2a\u7684\u57fa\u7840\u4e4b\u4e0a\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u65b9\u6cd5\uff1a\n\n\u5bf9\u4e8e\u6240\u6709\u6ee1\u8db3 $l\\leq x\\leq r$ \u7684 $x$ \u90fd\u5c06 $x$ \u5230\u6839\u7684\u6240\u6709\u70b9\u70b9\u6743\u52a0\u4e00\uff0c\u7136\u540e\u67e5\u8be2\u4e00\u4e0b $z$ \u5230\u6839\u7684\u6240\u6709\u70b9\u7684\u70b9\u6743\u548c\u5373\u53ef\u3002\n\n\u4f46\u662f\u8fd9\u4e48\u505a\u662f $O(qn\\log^2n)$ \u7684\uff0c\u5f88\u660e\u663e\u65e0\u6cd5\u901a\u8fc7\u3002\n\n\u6211\u4eec\u8003\u8651\u5bf9\u8be2\u95ee $[l,r]$ \u62c6\u6210 $[1,r]$ \u548c $[1,l-1]$ \u7684\u5f62\u5f0f\u3002\u7136\u540e\u7c7b\u4f3c\u4e8e\u83ab\u961f\u4e00\u6837\uff0c\u56e0\u4e3a\u6240\u6709\u8be2\u95ee\u7684\u5de6\u7aef\u70b9\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u5148\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u7528\u4e00\u4e2a\u6307\u9488\u626b\u4e00\u4e0b\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O(n\\log^2n)$\u3002\n\n\u73b0\u5728\u8003\u8651\u8fd9\u4e2a\u9898\uff0c\u74f6\u9888\u662f\u770b\u80fd\u4e0d\u80fd\u6709\u4e00\u4e2a\u666e\u9002\u6027\u7684\u65b9\u6cd5\u6765\u6c42\u51fa $\\operatorname{depth}\\left(\\operatorname{lca}(x,y)\\right)^k$\u3002\n\n\u6ce8\u610f\u5230\u6211\u4eec\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u4e1c\u897f\u8fdb\u884c\u5dee\u5206\u3002\u8bbe $w_x=\\operatorname{depth}(x)^k-\\operatorname{depth}\\left(fa_x\\right)^k$\uff0c\u90a3\u4e48\u6839\u5230 $x$ \u8def\u5f84\u4e0a\u7684 $w_x$ \u4e4b\u548c\u6070\u597d\u5c31\u662f $\\operatorname{depth}(x)^k$\uff01\n\n\u4e8e\u662f\u8fd8\u662f\u6309\u7167\u539f\u6765\u4e00\u6837\uff0c\u5c06\u6240\u6709\u8be2\u95ee\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\uff08\u56e0\u4e3a\u5de6\u7aef\u70b9\u90fd\u4e3a $1$\uff09\uff0c\u7136\u540e\u7528\u4e00\u4e2a\u6307\u9488\u626b\u4e00\u904d\u6240\u6709\u8be2\u95ee\u5373\u53ef\u3002\n\n\u4f46\u662f\u4f1a\u51fa\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u9700\u8981\u5bf9\u4e8e\u6240\u6709 $l\\leq i\\leq r$ \u7684 \u4f4d\u7f6e $i$ \u52a0 $w_i$\u3002\n\n\u8fd9\u91cc\u5927\u591a\u6570\u9898\u89e3\u90fd\u6ca1\u8bb2\u6e05\u695a\u3002\u8003\u8651\u8bb0\u4e00\u4e2a $v_i$ \u5728**\u6811\u5256\u6c42\u51fa\u7684 dfn** \u7684\u524d\u7f00\u548c $w_i$\u3002\u7136\u540e\u5982\u679c\u9012\u5f52\u5230\u67d0\u4e2a\u88ab\u8be2\u95ee\u533a\u95f4\u5305\u542b\u7684\u7ebf\u6bb5\u6811\u533a\u95f4 $[l,r]$\uff0c\u5c06\u8fd9\u4e00\u6bb5\u533a\u95f4\u7684\u548c\u52a0\u4e0a\u4e00\u4e2a $w_r-w_{l-1}$\uff0c\u7136\u540e\u6253\u6807\u8bb0\u3002\n\n\u5bf9\u4e8e\u6807\u8bb0\u4e0b\u4f20\u7684\u8bdd\u4e5f\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u7136\u540e\u8fd9\u9053\u9898\u5c31\u89e3\u51b3\u4e86\uff0c\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\nconst ll MAXN=2e5+51,MOD=998244353;\nstruct Edge{\n\tll to,prev;\n};\nstruct SegmentTree{\n\tll l,r,sm,tag;\n};\nstruct Query{\n\tll r,u,id;\n\tinline bool operator <(const Query &rhs)const\n\t{\n\t\treturn this->r<rhs.r;\n\t}\n};\nEdge ed[MAXN<<1];\nSegmentTree tree[MAXN<<2];\nQuery qry[MAXN];\nll n,qcnt,kk,to,tot,totd,r,u,lst;\nll last[MAXN],fa[MAXN],depth[MAXN],sz[MAXN],hv[MAXN],dfn[MAXN];\nll top[MAXN],w[MAXN],v[MAXN],pw[MAXN],res[MAXN],rdfn[MAXN];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\ninline ll qpow(ll base,ll exponent)\n{\n\tll res=1;\n\twhile(exponent)\n\t{\n\t\tif(exponent&1)\n\t\t{\n\t\t\tres=(li)res*base%MOD;\n\t\t}\n\t\tbase=(li)base*base%MOD,exponent>>=1;\n\t}\n\treturn res;\n}\ninline void addEdge(ll from,ll to)\n{\n\ted[++tot].prev=last[from];\n\ted[tot].to=to;\n\tlast[from]=tot;\n}\ninline void dfs(ll node,ll f)\n{\n\tll mx=-1;\n\tsz[node]=1,pw[node]=qpow(depth[node]=depth[fa[node]=f]+1,kk);\n\tfor(register int i=last[node];i;i=ed[i].prev)\n\t{\n\t\tif(ed[i].to!=f)\n\t\t{\n\t\t\tdfs(ed[i].to,node),sz[node]+=sz[ed[i].to];\n\t\t\tsz[ed[i].to]>mx?mx=sz[hv[node]=ed[i].to]:1;\n\t\t}\n\t}\n}\ninline void dfs2(ll node,ll link)\n{\n\tll to;\n\trdfn[dfn[node]=++totd]=node,top[node]=link;\n\tif(!hv[node])\n\t{\n\t\treturn;\n\t}\n\tdfs2(hv[node],link);\n\tfor(register int i=last[node];i;i=ed[i].prev)\n\t{\n\t\t(to=ed[i].to)!=fa[node]&&to!=hv[node]?dfs2(to,to):(void)1;\t\n\t}\n}\n#define ls node<<1\n#define rs (node<<1)|1\ninline void update(ll node)\n{\n\ttree[node].sm=(tree[ls].sm+tree[rs].sm)%MOD;\n}\ninline void create(ll l,ll r,ll node)\n{\n\ttree[node]=(SegmentTree){l,r,0,0};\n\tif(l==r)\n\t{\n\t\treturn;\n\t}\n\tll mid=(l+r)>>1;\n\tcreate(l,mid,ls),create(mid+1,r,rs),update(node);\n}\ninline void spread(ll node)\n{\n\tif(tree[node].tag)\n\t{\n\t\tll tag=tree[node].tag;\n\t\ttree[ls].sm+=(li)tag*(v[tree[ls].r]-v[tree[ls].l-1]+MOD)%MOD;\n\t\ttree[rs].sm+=(li)tag*(v[tree[rs].r]-v[tree[rs].l-1]+MOD)%MOD;\n\t\ttree[ls].sm%=MOD,tree[rs].sm%=MOD;\n\t\ttree[ls].tag+=tag,tree[rs].tag+=tag,tree[node].tag=0;\n\t}\n}\ninline void add(ll l,ll r,ll node)\n{\n\tif(l<=tree[node].l&&r>=tree[node].r)\n\t{\n\t\ttree[node].sm+=(v[tree[node].r]-v[tree[node].l-1]+MOD)%MOD;\n\t\treturn (void)(tree[node].sm%=MOD,tree[node].tag++);\n\t}\n\tll mid=(tree[node].l+tree[node].r)>>1;\n\tspread(node);\n\tl<=mid?add(l,r,ls):(void)1,r>mid?add(l,r,rs):(void)1,update(node);\n}\ninline ll query(ll l,ll r,ll node)\n{\n\tif(l<=tree[node].l&&r>=tree[node].r)\n\t{\n\t\treturn tree[node].sm;\n\t}\n\tll mid=(tree[node].l+tree[node].r)>>1;\n\tspread(node);\n\treturn ((l<=mid?query(l,r,ls):0)+(r>mid?query(l,r,rs):0))%MOD;\n}\ninline void add(ll x,ll y)\n{\n\twhile(top[x]!=top[y])\n\t{\n\t\tdepth[top[x]]<depth[top[y]]?swap(x,y):(void)1;\n\t\tadd(dfn[top[x]],dfn[x],1),x=fa[top[x]];\n\t}\n\tdepth[x]>depth[y]?swap(x,y):(void)1;\n\tadd(dfn[x],dfn[y],1);\n}\ninline ll query(ll x,ll y)\n{\n\tll res=0;\n\twhile(top[x]!=top[y])\n\t{\n\t\tdepth[top[x]]<depth[top[y]]?swap(x,y):(void)1;\n\t\tres=(res+query(dfn[top[x]],dfn[x],1))%MOD,x=fa[top[x]];\n\t}\n\tdepth[x]>depth[y]?swap(x,y):(void)1;\n\treturn (res+query(dfn[x],dfn[y],1))%MOD;\n}\nint main()\n{\n\tn=read(),qcnt=read(),kk=read();\n\tfor(register int i=2;i<=n;i++)\n\t{\n\t\tto=read(),addEdge(i,to),addEdge(to,i);\n\t}\n\tfor(register int i=1;i<=qcnt;i++)\n\t{\n\t\tr=read(),u=read(),qry[i]=(Query){r,u,i};\n\t}\n\tdfs(1,0),dfs2(1,1),create(1,n,1);\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tw[i]=(pw[i]-pw[fa[i]]+MOD)%MOD;\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tv[i]=(v[i-1]+w[rdfn[i]])%MOD;\n\t}\n\tsort(qry,qry+qcnt+1);\n\tfor(register int i=1;i<=qcnt;i++)\n\t{\n\t\tfor(register int j=lst+1;j<=qry[i].r;j++)\n\t\t{\n\t\t\tadd(1,j);\n\t\t}\n\t\tlst=qry[i].r,res[qry[i].id]=query(1,qry[i].u);\n\t}\n\tfor(register int i=1;i<=qcnt;i++)\n\t{\n\t\tprintf(\"%d\\n\",res[i]);\n\t}\n}\n```",
        "postTime": 1599872704,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5305 \u3010[GXOI/GZOI2019]\u65e7\u8bcd\u3011"
    },
    {
        "content": "[$\\texttt{\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c}$](https://www.cnblogs.com/tommy0103/p/13050433.html)\n\n## \u94fe\u63a5\n\n[LOJ 3088](https://loj.ac/problem/3088)\n\n[Luogu P5305](https://www.luogu.com.cn/problem/P5305)\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6709\u6839\u6811\uff0c\u8282\u70b9\u6807\u53f7 $1 \\sim n$\uff0c$1$ \u53f7\u8282\u70b9\u4e3a\u6839\u3002\n\n\u7ed9\u5b9a\u5e38\u6570 $k$\u3002\n\n\u7ed9\u5b9a $Q$ \u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a $x,y$\u3002\n\u6c42\uff1a\n$$\n\\sum\\limits_{i \\le x} \\text{depth}(\\text{lca}(i,y))^k\n$$\n$\\text{lca}(x,y)$ \u8868\u793a\u8282\u70b9 $x$ \u4e0e\u8282\u70b9 $y$ \u5728\u6709\u6839\u6811\u4e0a\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002\n\n$\\text{depth}(x)$ \u8868\u793a\u8282\u70b9 $x$ \u7684\u6df1\u5ea6\uff0c\u6839\u8282\u70b9\u7684\u6df1\u5ea6\u4e3a $1$\u3002\n\n\u7531\u4e8e\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u4f60\u53ea\u9700\u8981\u8f93\u51fa\u7b54\u6848\u6a21 $998244353$ \u7684\u7ed3\u679c\u3002\n\n$\\texttt{Data Range:}1\\leq n \\leq 5\\times 10^4,1\\leq q \\leq 5\\times 10^4$\u3002 \n\n## \u9898\u89e3\n\n\u8003\u8651\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\u7684\u5f31\u5316\u7248\uff0c\u5373 **[LNOI2014]LCA**\u3002\n\n\u6c42\uff1a\n$$\n\\sum_{i\\leq x} \\text{depth}(\\text{lca}(i,y))\n$$\n\u53ef\u4ee5\u60f3\u5230\u6700\u66b4\u529b\u7684\u65b9\u6cd5\uff0c\u4f9d\u6b21\u5c06 $i,y$ \u4e0a\u7684\u8def\u5f84\u67d3\u8272\uff0c\u6c42 $\\text{lca}$\u3002 \n\n\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff0c$y$ \u7684 $\\text{lca}$ \u4e00\u5b9a\u5728\u4ece\u6839\u8282\u70b9 $1$ \u5230 $y$ \u7684\u8def\u5f84\u4e0a\uff0c$i$ \u7684 $\\text{lca}$ \u4e5f\u4e00\u5b9a\u5728\u70b9 $i$ \u5230\u6839\u8282\u70b9 $1$ \u7684\u8def\u5f84\u4e0a\u3002**\u5e76\u4e14\u8fdb\u4e00\u6b65\u53ef\u4ee5\u5f97\u51fa\uff0c$\\text{lca}(i,y)$ \u5c31\u5728\u4e24\u8005\u8def\u5f84\u7684\u516c\u5171\u90e8\u5206\u4e0a\uff0c\u5e76\u4e14\u5c31\u662f\u8fd9\u4e2a\u516c\u5171\u90e8\u5206\u6240\u5305\u542b\u7684\u6df1\u5ea6\u6700\u5927\u7684\u70b9\u3002**\u6b63\u786e\u6027\u663e\u7136\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/etg1e17j.png)\n\n\u4f8b\u5982\uff0c\u5728\u4e0a\u56fe\u4e2d\uff0c\u70b9 $i$ \u5230\u6839\u8282\u70b9 $1$ \u7684\u8def\u5f84\u4e0e\u70b9 $y$ \u5230\u6839\u8282\u70b9 $1$ \u7684\u8def\u5f84\u7684\u516c\u5171\u90e8\u5206\uff0c\u5c31\u4e3a\u6839\u8282\u70b9 $1$ \u5230\u70b9 $z$ \u7684\u8def\u5f84\uff0c\u5e76\u4e14 $\\text{lca}(i,y)=z$\u3002\n\n\u56de\u60f3\u4e00\u4e0b\u4e0a\u9762\u7684\u6027\u8d28\uff0c**\u70b9 $i$ \u5230\u6839\u8282\u70b9 $1$ \u4e0e\u70b9 $y$ \u5230\u6839\u8282\u70b9 $1$ \u7684\u516c\u5171\u8def\u5f84\u6240\u5305\u542b\u7684\u6df1\u5ea6\u6700\u5927\u7684\u70b9** \u5c31\u662f $\\text{lca}(i,y)$\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u5bf9\u4ece\u6839\u8282\u70b9 $1$ \u5230\u6bcf\u4e2a\u70b9 $i$ \u7684\u8def\u5f84\u67d3\u8272\uff0c\u518d\u67e5\u8be2\u6839\u8282\u70b9 $1$ \u5230\u70b9 $y$ \uff0c\u5c31\u76f8\u5f53\u4e8e\u53d6\u4e86\u8fd9\u4e9b\u516c\u5171\u8def\u5f84\uff0c\u95ee\u9898\u662f\u5982\u4f55\u67e5\u8be2 \u70b9 $y$ \u5230\u6839\u8282\u70b9 $1$ \u7684\u8def\u5f84 \u4e0e \u70b9 $i$ \u5230\u6839\u8282\u70b9 $1$ \u7684\u8def\u5f84 \u7684\u516c\u5171\u90e8\u5206\u7684\u6df1\u5ea6\u6700\u5927\u7684\u8282\u70b9\u7684 **\u6df1\u5ea6**\uff1f\n\n\u53ef\u4ee5\u60f3\u5230\u5dee\u5206\uff0c\u8bbe $b[x]=\\text{depth}(x)-\\text{depth}(fa[x])$\uff0c\u5219 $\\text{depth}(x)$ \u5373\u4e3a\u4ece $1$ \u5230\u70b9 $x$ \u7684\u8def\u5f84\u4e0a\u6240\u6709$b[j]$ \u548c\u3002\u7531\u4e8e\u6b64\u5f31\u5316\u7248\u6c42\u89e3\u7684\u662f\u4e00\u4e2a\u5e42\u4e3a $1$ \u7684\u60c5\u51b5\uff0c\u6240\u4ee5 $\\forall x\\geq 1,b[x]=1$\u3002 \n\n\u901a\u8fc7\u4e0a\u8ff0\u7ed3\u8bba\u53ef\u4ee5\u5f97\u5230\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i$ \uff0c\u5c06\u5b83\u5230\u6839\u8282\u70b9 $1$ \u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9 $j$ \u7684\u6743\u503c\u52a0\u4e0a $b[j]$\uff08$j$ \u662f\u70b9 $i$ \u5230\u6839\u8282\u70b9 $1$ \u7684\u8def\u5f84\u4e0a\u5305\u542b\u7684\u70b9\uff09\uff0c\u67e5\u8be2\u65f6\u76f4\u63a5\u67e5\u8be2\u70b9 $y$ \u5230\u6839\u8282\u70b9 $1$ \u7684\u70b9\u6743\u548c\uff0c\u5373\u4e3a\u6bcf\u6b21\u8be2\u95ee\u7684\u7b54\u6848\u3002\n\n\u5bf9\u4e8e\u6b64\u5f31\u5316\u7248\u95ee\u9898\uff0c\u533a\u95f4\u52a0 $b[j]$ \u53ef\u76f4\u63a5\u89c6\u4e3a\u533a\u95f4 $+1$\u3002\n\n\n\n\u4f46\u5bf9\u4e8e\u6b64\u9898\uff0c\u8981\u6c42\u6c42\u89e3 $k$ \u6b21\u65b9\uff0c\u5e94\u4ee4 $b[x]=\\text{depth}(x)^k-\\text{depth}(fa[x])^k$\u3002\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u5bf9\u4e8e\u6bcf\u4e2a $x\\in [l,r]$\uff0c\u70b9\u6743 $val[x]=val[x]+b[x]$ \u7684\u64cd\u4f5c\uff0c\u5176\u5b9e\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u5bf9 $b[i]$ \u505a\u524d\u7f00\u548c\uff0c\u8fdb\u884c\u6b64\u64cd\u4f5c\u65f6\u5728\u7ebf\u6bb5\u6811\u4e0a\u76f4\u63a5\u52a0\u4e0a\u5bf9\u5e94\u7684\u548c\u5373\u53ef\u3002\n\n~~\u6bcf\u6b21\u8be2\u95ee\u4e0d\u662f $n \\log^2 n$ \u7684\u4e48\uff1f\u6ca1\u770b\u51fa\u6bd4\u66b4\u529b\u4f18\u79c0\u591a\u5c11\u554a\uff1f~~\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u8be2\u95ee\u79bb\u7ebf\uff0c\u5c06 $x$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4fdd\u8bc1\u6bcf\u6b21\u8be2\u95ee\u65f6\u90fd\u7ef4\u62a4\u4e86\u70b9 $1\\sim x$\u7684\u8d21\u732e\uff08\u5f53\u524d\u8be2\u95ee\u7684 $x$\uff09\u5e76\u7edf\u8ba1\u7b54\u6848\u3002\u8fd9\u6837\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u5230\u6839\u8282\u70b9 $1$ \u7684\u8def\u5f84\u53ea\u4f1a\u5728\u6811\u4e0a\u88ab\u64cd\u4f5c\u4e00\u6b21\uff0c\u51cf\u5c11\u4e86\u5197\u4f59\u64cd\u4f5c\u3002\u5176\u5b9e\u5c31\u662f\u4e2a $one-pointer$\uff0c\u5f88\u597d\u7406\u89e3\u3002\n\n\u7ecf\u8fc7\u4e0a\u8ff0\u5206\u6790\uff0c\u5bf9\u4e8e\u8be5\u9898\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u652f\u6301\u8def\u5f84\u4fee\u6539\uff0c\u8def\u5f84\u67e5\u8be2\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f7f\u7528 **\u6811\u94fe\u5256\u5206+\u7ebf\u6bb5\u6811** \u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n+q \\log^2 n)$\u3002\n\n**Show the Code**\n\n```cpp\n#include<cstdio>\n#include<algorithm>\ntypedef long long ll;\nconst ll mod=998244353;\nint tot=0,cnt=0;\nint h[500005],to[500005],ver[500005];\nint d[500005],fa[500005],size[500005],son[500005];\nint seg[500005],rev[500005],top[500005];\nll sum[2000005],tag[2000005],b[500005],ans[500005];\nstruct node {int x,y,id;} q[500005];\ninline void swap(int &x,int &y) {int tmp=y;y=x;x=tmp;}\ninline bool cmp(node x,node y) {return x.x<y.x;}\ninline ll Add(ll x,ll y) {return (((x+y)%mod)+mod)%mod;}\ninline ll read() {\n\tregister ll x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f;\n}\ninline void add(int x,int y) {\n\tto[++cnt]=y;\n\tver[cnt]=h[x];\n\th[x]=cnt;\n}\ninline ll qpow(ll x,ll p) {\n\tll res=1;\n\tfor(;p;p>>=1) {\n\t\tif(p&1) res=res*x%mod;\n\t\tx=x*x%mod;\n\t}\n\treturn res;\n}\ninline void dfs1(int x) {\n\tsize[x]=1;son[x]=-1;\n\tfor(register int i=h[x];i;i=ver[i]) {\n\t\tint y=to[i];\n\t\td[y]=d[x]+1;fa[y]=x;\n\t\tdfs1(y);size[x]+=size[y];\n\t\tif(son[x]==-1||size[son[x]]<size[y]) son[x]=y;\n\t}\n}\ninline void dfs2(int x,int t) {\n\tseg[x]=++tot;rev[tot]=x;top[x]=t;\n\tif(son[x]!=-1) dfs2(son[x],t);\n\tfor(register int i=h[x];i;i=ver[i]) {\n\t\tint y=to[i];\n\t\tif(y==son[x]) continue;\n\t\tdfs2(y,y);\n\t}\n}\ninline void work(int p,int l,int r,ll val) {\n\tval%=mod;\n\ttag[p]=Add(tag[p],val);\n\tsum[p]=Add(sum[p],val*Add(b[r],-b[l-1]));\n}\ninline void spread(int p,int l,int r) {\n\tif(tag[p]) {\n\t\tint mid=l+r>>1;\n\t\twork(p<<1,l,mid,tag[p]);\n\t\twork(p<<1|1,mid+1,r,tag[p]);\n\t\ttag[p]=0;\n\t}\n}\ninline void change(int p,int L,int R,int l=1,int r=tot) {\n\tif(L<=l&&r<=R) {work(p,l,r,1);return;}\n\tspread(p,l,r);\n\tint mid=l+r>>1;\n\tif(L<=mid) change(p<<1,L,R,l,mid);\n\tif(R>mid) change(p<<1|1,L,R,mid+1,r);\n\tsum[p]=sum[p<<1]+sum[p<<1|1];\n}\ninline ll ask(int p,int L,int R,int l=1,int r=tot) {\n\tif(L<=l&&r<=R) return sum[p];\n\tspread(p,l,r);\n\tint mid=l+r>>1;ll res=0;\n\tif(L<=mid) res=Add(res,ask(p<<1,L,R,l,mid));\n\tif(R>mid) res=Add(res,ask(p<<1|1,L,R,mid+1,r));\n\treturn res;\n}\ninline void Modify(int x,int y) {\n\twhile(top[x]!=top[y]) {\n\t\tif(d[top[x]]<d[top[y]]) swap(x,y);//d[top[x]]>=d[top[y]]\n\t\tchange(1,seg[top[x]],seg[x]);\n\t\tx=fa[top[x]];\n\t}\n\tif(d[x]>d[y]) swap(x,y);//d[x]<=d[y]\n\tchange(1,seg[x],seg[y]);\n}\ninline ll Qsum(int x,int y) {\n\tll res=0;\n\twhile(top[x]!=top[y]) {\n\t\tif(d[top[x]]<d[top[y]]) swap(x,y);\n\t\tres=Add(res,ask(1,seg[top[x]],seg[x]));\n\t\tx=fa[top[x]];\n\t}\n\tif(d[x]>d[y]) swap(x,y);//d[x]<=d[y]\n\treturn Add(res,ask(1,seg[x],seg[y]));\n}\nint main() {\n\tint n=read(),T=read(),k=read();\n\tfor(register int i=2;i<=n;++i) add(read(),i);\n\tfor(register int i=1;i<=T;++i) {q[i].x=read();q[i].y=read();q[i].id=i;}\n\tstd::sort(q+1,q+1+T,cmp);\n\td[1]=1;dfs1(1);dfs2(1,1);//printf(\"%d\\n\",tot);\n\tfor(register int i=1;i<=tot;++i) {int x=rev[i];b[i]=Add(b[i-1],qpow(d[x],k)-qpow(d[fa[x]],k)+mod);}\n\tint now=1;\n\tfor(register int i=1;i<=T;++i) {\n\t\twhile(now<=q[i].x) {Modify(1,now);++now;}\n\t\tans[q[i].id]=Qsum(1,q[i].y);\n\t}\t\n\tfor(register int i=1;i<=T;++i) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1591433018,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5305 \u3010[GXOI/GZOI2019]\u65e7\u8bcd\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u975e\u5e38\u7b80\u6d01\uff1a\u8981\u6c42 $\\sum_{i\\le x}depth(lca(i,y))^k$ ~~\uff08\u90fd\u5199\u5728\u9898\u9762\u91cc\u4e86\uff09~~\n\n\u8981\u76f4\u63a5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u662f\u6709\u70b9\u56f0\u96be\u7684\uff0c\u90a3\u4e48\u2014\u2014\n\n**\u6211\u4eec\u5148\u770b\u5b83\u7684\u5f31\u5316\u7248**\uff1a[[LNOI2014]LCA](https://www.luogu.com.cn/problem/P4211)\n\n\u8981\u6c42 $\\sum_{i=l}^rdepth(lca(i,z))$\n\n~~\u5c11\u4e86\u4e2ak\u6b21\u65b9\u5462\uff01~~\n\n\u9996\u5148\u8f6c\u5316\u4e00\u4e0b   $\\sum_{i=l}^rdepth(lca(i,z))=\\sum_{i=1}^rdepth(lca(i,z))-\\sum_{i=1}^{l-1}depth(lca(i,z))$\n\n\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u628a\u6bcf\u4e2a\u8be2\u95ee\u62c6\u6210 $(1,l-1)$ \u548c $(1,r)$ \u5206\u522b\u89e3\u51b3\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u6309\u987a\u5e8f\u628a $1$ \u5230 $n$ \u7684\u70b9\u52a0\u8fdb\u6765\uff0c\u540c\u65f6\u8ba1\u7b97\u52a0\u5230\u6bcf\u4e2a\u70b9\u65f6\u7684\u8be2\u95ee\u7b54\u6848\u3002\n\n\u90a3\u4e48\u73b0\u5728\u8003\u8651\u52a0\u5230\u7b2c $i$ \u4e2a\u70b9\u65f6\u5982\u4f55\u8ba1\u7b97\u8d21\u732e\u3002\n\n\u5148\u4e0a\u5f20\u56fe\u4e3e\u4e2a\u4f8b\u5b50~\n\n![](https://s1.ax1x.com/2020/07/28/aEbJr6.png)\n\n\u5176\u4e2d\u6d82\u6210\u7ea2\u8272\u7684\u70b9\u5c31\u662f\u5df2\u7ecf\u52a0\u5165\u7684\u70b9\u3002\n\n\u6211\u4eec\u5148\u8ba1\u7b97\u4e00\u4e0b\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u6709\u591a\u5c11\u5df2\u7ecf\u52a0\u5165\u7684\u70b9\uff0c\u7528 $siz[x]$ \u8868\u793a\u3002\u6ca1\u6709\u52a0\u5165\u7684\u8282\u70b9\u5bf9\u5f53\u524d\u8be2\u95ee\u80af\u5b9a\u6ca1\u6709\u8d21\u732e\u3002\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u7edf\u8ba1\u52a0\u5165\u7684\u8282\u70b9\u5c31\u597d\u4e86\u3002\n\n\u90a3\u4e48 $siz[1]=4$ , $siz[2]=2$,  $siz[3]=1$, $siz[4]=1$ ,  $siz[5]=1$ , $siz[6]=0$ \u3002\n\n\u73b0\u5728\u8003\u8651\u8ba1\u7b97\u5f53\u524d\u52a0\u5165\u7684\u8282\u70b9\u52304\u7684LCA\u6df1\u5ea6\u548c\u3002\n\n$ans=siz[4]\\times dep[4]+(siz[2]-siz[4])\\times dep[2]+(siz[1]-siz[2])\\times dep[1]$\n\n\u5373\u52a0\u5165\u7684\u8282\u70b9\u4e2d\u5728 $4$ \u7684\u5b50\u6811\u4e2d\u7684\u5230 $4$ \u7684 $LCA$ \u80af\u5b9a\u4e3a $4$\u3002\u5728 $2$ \u7684\u5b50\u6811\u4f46\u4e0d\u5728 $4$ \u7684\u5b50\u6811\u4e2d\u7684\u5230 $4$ \u7684 $LCA$ \u80af\u5b9a\u4e3a $2$\uff0c\u5728 $1$ \u7684\u5b50\u6811\u4f46\u4e0d\u5728 $2$ \u7684\u5b50\u6811\u4e2d\u7684\u5230 $4$ \u7684 $LCA$ \u80af\u5b9a\u4e3a $1$\u3002\n\n\u628a\u5f0f\u5b50\u62c6\u5f00\u5316\u7b80\u5f97\u5230:\n\n$ans=siz[4]\\times (dep[4]-dep[2])+siz[2]\\times (dep[2]-dep[1])+siz[1]$\n\n$ans=siz[4]+siz[2]+siz[1]$\n\n\u4e8e\u662f\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u7b54\u6848\u5c31\u662f\u8be5\u8282\u70b9\u5230\u6839\u8def\u5f84\u7684\u8282\u70b9\u5b50\u6811\u5927\u5c0f\u4e4b\u548c\u3002\n\n\u666e\u904d\u5f62\u5f0f\uff1a\u8bbe\u67e5\u8be2\u8282\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e3a $\\{v_1,v_2,v_3\\dots v_k\\}$\u3002\n\n$ans=siz[v_1]\\times dep[v_1]+(siz[v_2]-siz[v_1])\\times dep[v_2]+(siz[v_3]-siz[v_2])\\times dep[v_3]+\\dots +(siz[v_k]-siz[v_{k-1}])\\times dep[v_k]$\n\n\u7531\u4e8e\u662f\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\uff0c\u6240\u4ee5 $dep[v_i]=dep[v_{i+1}]+1$\u3002\n\n\u4e8e\u662f\u5316\u7b80\u5f97\uff1a\n\n$ans=siz[v_1]\\times (dep[v_1]-dep[v_2])+siz[v_2]\\times (dep[v_2]-dep[v_3])+siz[v_3]\\times (dep[v_3]-dep[v_4])+\\dots +siz[v_k]\\times dep[v_k]$\n\n$ans=siz[v_1]+siz[v_2]+siz[v_3]+\\dots +siz[v_k]$\n\n\u5c31\u6b64\u5f97\u51fa\u7ed3\u8bba\uff1a\u7b54\u6848\u5c31\u662f\u8be5\u8282\u70b9\u5230\u6839\u8def\u5f84\u7684\u8282\u70b9\u5b50\u6811\u5927\u5c0f\u4e4b\u548c\u3002\n\n\u67e5\u8be2\u76f4\u63a5\u67e5\u8be2\u8981\u67e5\u8be2\u7684\u8282\u70b9\u5230\u6839\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u4e4b\u548c\u3002\n\n\u52a0\u5165\u8282\u70b9\u65f6\u53ea\u6709\u5b83\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u52a0\u4e86\u4e00\u3002\n\n\u4f7f\u7528\u6811\u94fe\u5256\u5206\u52a0\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n---\n\n**\u56de\u5230\u672c\u9898**\n\n\u672c\u9898\u6ca1\u6709 $l$ \u7684\u9650\u5236\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u7528\u524d\u7f00\u548c\u62c6\u8be2\u95ee\u5904\u7406\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u62ac\u51fa\u4e4b\u524d\u7684\u5f0f\u5b50\u6539\u6210\u8fd9\u9053\u9898\u7684\u6837\u5b50\u3002\n\n$ans=siz[v1]\\times dep[v1]^k+(siz[v2]-siz[v1])\\times dep[v2]^k+(siz[v3]-siz[v2])\\times dep[v3]^k+\\dots+(siz[vk]-siz[vk-1])\\times dep[vk]^k$\n\n\u5316\u7b80\u4e00\u4e0b\uff0c\u5f97\u5230\uff1a\n\n$ans=siz[v_1]\\times (dep[v_1]^k-dep[v_2]^k)+siz[v_2]\\times (dep[v_2]^k-dep[v_3]^k)+siz[v_3]\\times (dep[v_3]^k-dep[v4]^k)+\\dots  siz[v_k]\\times dep[v_k]^k$\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c$dep[v_2]$ \u603b\u7b49\u4e8e $dep[v_1]-1$\uff08\u56e0\u4e3a\u662f\u4ece\u67e5\u8be2\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u561b\uff09\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e$(dep[v_i]^k-dep[v_{i+1}]^k)$\u8fd9\u79cd\u4e1c\u897f\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b83\u8fdb\u884c\u9884\u5904\u7406\u3002\n\n\u8bbe\u5bf9\u4e8e\u70b9i\u7684\u9884\u5904\u7406\u7b54\u6848\u4e3a $val[i]$\u3002\n\n\u5219\u7b54\u6848\u4e3a:\n\n$ans=siz[v_1]\\times  val[v_1]+siz[v_2]\\times  val[v_2]+siz[v_3]\\times  val[v_3]+...siz[v_k]\\times  val[v_k]$\n\n\u5c31\u662f\u5728\u7ebf\u6bb5\u6811\u7ef4\u62a4\u65f6\u591a\u52a0\u4e00\u4e2a\u6743\u503c\u7684\u95ee\u9898\u4e86\u3002\n\n\u5728\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u4e0a\u9644\u52a0\u4e00\u4e2a\u6743\u503c\uff0c\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u91cc\u6240\u6709\u70b9\u7684 $val$ \u4e4b\u548c\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u533a\u95f4\u4fee\u6539\u548c\u4e0b\u4f20\u6807\u8bb0\u4e86\u3002\n\n~~\u8ddf\u4e0a\u9762\u90a3\u9053\u5f31\u5316\u7248\u5dee\u5f97\u4e0d\u591a\u5427~~~\n\n\u4ee3\u7801\uff1a\n\n```cpp\n//\u76f4\u63a5\u7528 LCA \u4ee3\u7801\u6539\u7684\uff0c\u53ef\u80fd\u6709\u70b9\u8ff7\u60d1\uff08\uff1f \n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nvector<long long> e[50010];\nstruct node\n{\n\tlong long bas,sum,tag;//bas\u4e3a\u9644\u52a0\u7684\u6743\u503c\n}nodes[400010];\nstruct ask\n{\n\tlong long pos,val,ID,nag;\n}q[100010];\nbool cmp(ask one,ask ano)\n{\n\treturn one.pos<ano.pos;\n}\nlong long n,m,s,opl,opr,opz,f,cnt,tot,waste,ans[50010],kkk,dep[50010],fa[50010],son[50010],siz[50010],hb[50010],dfn[50010],ton[50010],power[50010],bruh;\nconst long long mod=998244353;\nlong long qpow(long long bas,long long tim)//\u5feb\u901f\u5e42\u7528\u6765\u5904\u7406val \n{\n\tlong long res=1,fur=bas;\n\twhile(tim)\n\t{\n\t\tif(tim&1)\tres=(res*fur)%mod;\n\t\tfur=(fur*fur)%mod;\n\t\ttim>>=1;\n\t}\n\treturn res;\n}\nvoid dfs(long long x,long long las)\n{\n\tfa[x]=las;\n\tdep[x]=dep[las]+1;\n\tsiz[x]=1;\n\tlong long b=0,s=0;\n\tfor(long long i=0;i<e[x].size();++i)\n\t{\n\t\tlong long y=e[x][i];\n\t\tdfs(y,x);\n\t\tsiz[x]+=siz[y];\n\t\tif(siz[y]>b)\n\t\t{\n\t\t\tb=siz[y];\n\t\t\ts=y;\n\t\t}\n\t}\n\tson[x]=s;\n}\nvoid dfs2(long long x,long long las,long long heavy)//\u6811\u5256dfs\n{\n\tif(heavy)\thb[x]=hb[las];\n\telse\thb[x]=x;\n\tdfn[x]=++cnt;\n\tton[cnt]=x;\n\tif(son[x])\tdfs2(son[x],x,1);\n\tfor(long long i=0;i<e[x].size();++i)\n\t{\n\t\tlong long y=e[x][i];\n\t\tif(y^son[x])\tdfs2(y,x,0);\n\t}\n}\nvoid pushdown(long long x)\n{\n\tif(nodes[x].tag)\n\t{\n\t\t//(siz[x]+a)*val[x]+(siz[y]+a)*val[y]+...+(siz[z]+a)*val[z]\n\t\t//=siz[x]*val[x]+siz[y]*val[y]+...+siz[z]*val[z]+a*(val[x]+val[y]+...+val[z])\n\t\tnodes[x].sum+=(nodes[x].bas*nodes[x].tag);\n\t\tnodes[x].sum%=mod;\n\t\tnodes[x<<1].tag+=nodes[x].tag;\n\t\tnodes[x<<1].tag%=mod;\n\t\tnodes[x<<1|1].tag+=nodes[x].tag;\n\t\tnodes[x<<1|1].tag%=mod;\n\t\tnodes[x].tag=0;\n\t}\n}\nvoid build(long long l,long long r,long long x)//\u9884\u5904\u7406val\u533a\u95f4\u548c \n{\n\tif(l^r)\n\t{\n\t\tlong long mid=(l+r)>>1;\n\t\tbuild(l,mid,x<<1);\n\t\tbuild(mid+1,r,x<<1|1);\n\t\tnodes[x].bas=(nodes[x<<1].bas+nodes[x<<1|1].bas)%mod;\n\t}\n\telse\tnodes[x].bas=power[dep[ton[l]]]-power[dep[ton[l]]-1];\n//\tprintf(\" %lld %lld %lld\\n\",l,r,nodes[x].bas);\n} \nvoid update(long long l,long long r,long long x,long long fr,long long ba)\n{\n\tif(l>ba||r<fr)\treturn;\n\tif(l>=fr&&r<=ba)\tnodes[x].tag=(nodes[x].tag+1)%mod;\n\telse\n\t{\n\t\tpushdown(x);\n\t\tlong long mid=(l+r)>>1;\n\t\tupdate(l,mid,x<<1,fr,ba);\n\t\tupdate(mid+1,r,x<<1|1,fr,ba);\n\t\tpushdown(x<<1);\n\t\tpushdown(x<<1|1);\n\t\tnodes[x].sum=(nodes[x<<1].sum+nodes[x<<1|1].sum)%mod;\n\t}\n}\nlong long find(long long l,long long r,long long x,long long fr,long long ba)\n{\n\tif(l>ba||r<fr)\treturn 0;\n\tpushdown(x);\n\tif(l>=fr&&r<=ba)\treturn nodes[x].sum;\n\telse\n\t{\n\t\tlong long mid=(l+r)>>1;\n\t\treturn (find(l,mid,x<<1,fr,ba)+find(mid+1,r,x<<1|1,fr,ba))%mod;\n\t}\n}\nvoid output(long long l,long long r,long long x)\n{\n\tpushdown(x);\n\tprintf(\" %lld %lld %lld\\n\",l,r,nodes[x].sum);\n\tif(l^r)\n\t{\n\t\tlong long mid=(l+r)>>1;\n\t\toutput(l,mid,x<<1);\n\t\toutput(mid+1,r,x<<1|1);\n\t}\n}\nvoid update_LCA(long long x,long long y)\n{\n\tlong long fx=hb[x],fy=hb[y];\n\twhile(fx^fy)\n\t{\n\t\tif(dep[fx]<dep[fy])\n\t\t{\n\t\t\tswap(fx,fy);\n\t\t\tswap(x,y);\n\t\t}\n\t\tupdate(1,s,1,dfn[fx],dfn[x]);\n\t\tx=fa[fx];\n\t\tfx=hb[x];\n\t}\n\tupdate(1,s,1,min(dfn[x],dfn[y]),max(dfn[x],dfn[y]));\n}\nlong long find_LCA(long long x,long long y)\n{\n\tlong long res=0;\n\tlong long fx=hb[x],fy=hb[y];\n\twhile(fx^fy)\n\t{\n\t\tif(dep[fx]<dep[fy])\n\t\t{\n\t\t\tswap(fx,fy);\n\t\t\tswap(x,y);\n\t\t}\n\t\tres+=find(1,s,1,dfn[fx],dfn[x]);\n\t\tres%=mod;\n\t\tx=fa[fx];\n\t\tfx=hb[x];\n\t}\n\tres+=find(1,s,1,min(dfn[x],dfn[y]),max(dfn[x],dfn[y]));\n\tres%=mod;\n\treturn res;\n}\nint main()\n{\n\tscanf(\"%lld %lld %lld\",&n,&m,&bruh);\n\ts=n;\n\tfor(long long i=1;i<=n;++i)\tpower[i]=qpow(i,bruh);\n\tfor(long long i=2;i<=n;++i)\n\t{\n\t\tscanf(\"%lld\",&f);\n\t\te[f].push_back(i);\n\t}\n\tdfs(1,1);\n\tdfs2(1,1,0);\n\tbuild(1,s,1);\n\tfor(long long i=1;i<=m;++i)\n\t{\n\t\tscanf(\"%lld %lld\",&opr,&opz);\n\t\tq[++tot].ID=i;\n\t\tq[tot].nag=1;\n\t\tq[tot].pos=opr;\n\t\tq[tot].val=opz;\n\t}\n\tsort(q+1,q+1+tot,cmp);\n\twhile(q[kkk].pos<=0&&kkk<=tot)\n\t{\n\t\tans[q[kkk].ID]+=(q[kkk].nag*0);\n\t\t++kkk;\n\t}\n\tfor(long long i=1;i<=n;++i)\n\t{\n\t\tupdate_LCA(1,i);\n\t\twhile(q[kkk].pos<=i&&kkk<=tot)\n\t\t{\n\t\t\tans[q[kkk].ID]+=(q[kkk].nag*find_LCA(1,q[kkk].val));\n\t\t\tans[q[kkk].ID]%=mod;\n\t\t\t++kkk;\n\t\t}\n//\t\tputs(\"\");\n//\t\toutput(1,s,1);\n//\t\tputs(\"\\n\");\n\t}\n\tfor(long long i=1;i<=m;++i)\tprintf(\"%lld\\n\",((ans[i]%mod)+mod)%mod);\n\treturn 0;\n}\n```",
        "postTime": 1596010369,
        "uid": 174555,
        "name": "CyanSineSin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5305 \u3010[GXOI/GZOI2019]\u65e7\u8bcd\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd $O(n \\sqrt n)$ \u7684\u505a\u6cd5\u3002\n\n\u601d\u8def\u548c[\u8fd9\u9898](https://www.luogu.com.cn/problem/P4211)\u7b2c\u4e8c\u7bc7\u9898\u89e3\u662f\u4e00\u6837\u7684\uff0c\u5c31\u662f\u628a\u6240\u6709\u7684\u70b9\u6309\u7f16\u53f7\u8fdb\u884c\u5206\u5757\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5757\u9884\u5904\u7406\u51fa\u8fd9\u4e00\u5757\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7684\u8d21\u732e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u6574\u5757\u7684\u7528\u9884\u5904\u7406\u7684\u7ed3\u679c\uff0c\u8fb9\u89d2\u90e8\u5206\u7528 $O(1)$ \u7684\u500d\u589e RMQ \u66b4\u529b\u6c42 LCA \u6df1\u5ea6\u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u8bb2\u4e00\u4e0b\u5982\u4f55\u9884\u5904\u7406\u6bcf\u4e00\u5757\u7684\u8d21\u732e\u3002\n\n\u8bbe\u8981\u5904\u7406\u7684\u5757\u5728 $l$~$r$\uff0c\u6211\u4eec\u5148\u628a $l$~$r$ \u4e4b\u95f4\u7684\u8282\u70b9\u7684\u6807\u8bb0\u503c $+1$\uff0c\u7136\u540e\u7528\u4e00\u6b21 DFS \u628a\u8fd9\u4e9b\u70b9\u7684\u7956\u5148\u8282\u70b9\u7684\u6807\u8bb0\u503c\u90fd $+1$\uff0c\u8bbe $f(i)=i^k-(i-1)^k$\uff0c\u53c2\u7167\u524d\u9762\u51e0\u7bc7\u9898\u89e3\u7684\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9 $i$\uff0c\u628a\u5728\u8fd9\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u6240\u6709\u7684\u70b9 $k$ \uff08\u5305\u62ec\u8282\u70b9 $i$ \u672c\u8eab\uff09\u7684 $f(dep[k]) * tag[k]$ \u52a0\u8d77\u6765\u5373\u4e3a\u8fd9\u4e2a\u70b9\u7684\u7b54\u6848\u3002\uff08 $dep$ \u4e3a\u6df1\u5ea6\uff0c$tag$ \u4e3a\u662f\u5426\u6709\u6807\u8bb0\uff09\u800c\u8ba1\u7b97\u8fd9\u4e2a\u7b54\u6848\u7684\u8fc7\u7a0b\u4e5f\u53ef\u4ee5\u7528DFS\u5b9e\u73b0\u3002\n\n\u5f53\u7136\u8fd9\u4e2a\u65b9\u6cd5\u5e38\u6570\u6bd4\u8f83\u5927\uff0c\u9700\u8981\u5361\u4e00\u4e0b\u5e38\u6570\u3002\n\ncode\uff1a\uff08\u6700\u6162\u7684\u70b9\u7528\u65f6846ms\uff09\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define ri register int\nusing namespace std;\nconst ll mod=998244353,siz=800;//\u5b9e\u6d4b\u5757\u7684\u5927\u5c0f\u5f00800\u65f6\u6bd4\u8f83\u5feb\nint belong[50005],block[105],bin[50005],dfn[100005],dep[100005],cnt\n,st[100005][20],lg2[100005],n,q,k;\nll temp[50005],pw[50005],pw1[50005],ans[105][50005];\nint head[50005],nex[50005],var[50005],tot;\n//bin\u5373\u4e3a\u524d\u9762\u8bb2\u5230\u7684tag\uff0cans\u4e3a\u6bcf\u4e00\u5757\u5bf9\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\nchar buf[(int)5e6],*ss=buf;\ninline void init(){buf[fread(buf,1,(int)5e6-1,stdin)]='\\n';fclose(stdin);}\ninline int readint(){\n\tint d=0;\n\twhile(!isdigit(*ss))++ss;\n\twhile(isdigit(*ss))d=d*10+(*ss++&15);\n\treturn d;\n}\nvoid add(int x,int y){\n\tvar[++tot]=y;\n\tnex[tot]=head[x];\n\thead[x]=tot;\n}\nll qpow(ll a,ll b){\n\tll ans=1;\n\twhile(b){\n\t\tif(b&1)ans=ans*a%mod;\n\t\ta=a*a%mod;\n\t\tb>>=1;\n\t}\n\treturn ans;\n}\nvoid dfs_1(int x){\n\tst[++cnt][0]=dep[x];\n\tdfn[x]=cnt;\n\tfor(ri i=head[x];i;i=nex[i]){\n\t\tint y=var[i];\n\t\tdep[y]=dep[x]+1;\n\t\tdfs_1(y);\n\t\tst[++cnt][0]=dep[x];\n\t}\n}\n//\u9884\u5904\u7406\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\uff0c\u5b58\u5728ST\u8868\u4e2d\n\nvoid dfs_2(int x){\n\tfor(ri i=head[x];i;i=nex[i]){\n\t\tint y=var[i];\n\t\tdfs_2(y);\n\t\tbin[x]+=bin[y];\n\t}\n}\n//\u5411\u4e0a\u7ed9\u6807\u8bb0\u503c+1\n\nvoid dfs_3(int x,ll dist){\n\tfor(ri i=head[x];i;i=nex[i]){\n\t\tint y=var[i];\n\t\tdfs_3(y,dist+bin[x]*pw1[dep[x]]);\t\n\t}\n\ttemp[x]+=dist+bin[x]*pw1[dep[x]];\n}\n//\u6839\u636e\u6807\u8bb0\u503c\u5904\u7406\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\n\nvoid prework(){\n\tfor(ri i=1;i<=n;i++)pw[i]=qpow(i,k);\n\tfor(ri i=1;i<=n;i++)pw1[i]=(pw[i]-pw[i-1]+mod)%mod;\n   //pw1\u5373\u4e3a\u4e4b\u524d\u8bb2\u5230\u7684f\n\tdep[1]=1;\n\tdfs_1(1);\n\tfor(ri i=2;i<=2*n;i++)lg2[i]=lg2[i/2]+1;\n\tfor(ri i=1;i<=17;i++)\n\t\tfor(ri j=1;j<=2*n-(1<<i);j++)\n\t\t\tst[j][i]=min(st[j][i-1],st[j+(1<<(i-1))][i-1]);\n   //\u9884\u5904\u7406ST\u8868\n\tfor(ri i=1;i<=n;i++){\n\t\tbelong[i]=i/siz+1;\n\t\tif(belong[i]-belong[i-1]>0)block[belong[i]]=i;\n\t}\n\tbelong[0]=0;belong[n+1]=belong[n]+1;\n    block[0]=0;block[belong[n+1]]=n+1;\n    for(ri i=1;i<=belong[n];i++){\n    \tmemset(bin,0,sizeof(bin));\n    \tmemset(temp,0,sizeof(temp));\n    \tfor(ri j=1;j<=n;j++)if(belong[j]==i)bin[j]=1;\n    \tdfs_2(1);dfs_3(1,0);\n    \tfor(ri j=1;j<=n;j++)ans[i][j]=temp[j];\n\t}\n   //\u9884\u5904\u7406\u6bcf\u4e2a\u5757\u7684\u8d21\u732e\n}\nint lca(int x,int y){\n\tx=dfn[x],y=dfn[y];\n\tif(x>y)swap(x,y);\n\tint p=lg2[y-x+1];\n\treturn min(st[x][p],st[y-(1<<p)+1][p]);\n}\n//\u7528RMQ\u6c42LCA\u6df1\u5ea6\n\nint main(){\n\tinit();\n\tn=readint(),q=readint(),k=readint();\n\tfor(ri i=2;i<=n;i++){\n\t\tint x;\n\t\tx=readint();\n\t\tadd(x,i);\n\t}\n\tprework();\n\twhile(q--){\n\t\tint r,x;\n\t\tr=readint(),x=readint();\n\t\tint r1=belong[r]-1;\n\t\tll res=0;\n\t\tfor(int i=1;i<=r1;i++)res+=ans[i][x];\n\t\tfor(;belong[r]!=r1&&r>=1;r--)res+=pw[lca(r,x)];\n\t\tprintf(\"%lld\\n\",res%mod);\n\t}\n}\n```\n",
        "postTime": 1597302724,
        "uid": 134476,
        "name": "wyx__",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5305 \u3010[GXOI/GZOI2019]\u65e7\u8bcd\u3011"
    },
    {
        "content": "\u524d\u9762\u7684\u9898\u89e3\u90fd\u8bf4\u4e86\u6811\u5256\u7684\u505a\u6cd5\uff0c\u8fd9\u91cc\u8d34\u4e00\u4e0bLCT\u5b9e\u73b0\u7684\u4ee3\u7801\u3002\n\n\u601d\u8def\u662f\u4e00\u6837\u7684\uff0c\u5728\u6839\u5230\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u8fdb\u884c$dep_i-dep_{fa_i}$\u7684\u5dee\u5206\uff0c\u79bb\u7ebf\u4e4b\u540e\u626b\u63cf\u7ebf\uff0c\u5c31\u4e0d\u4f5c\u8d58\u8ff0\u4e86\u3002\n\n\u7531\u4e8e$N\\le 50000$\uff0c\u6240\u4ee51/2\u4e2alog\u7684\u505a\u6cd5\u90fd\u53ef\u4ee5\u8f7b\u677e\u901a\u8fc7\u3002\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\n\nconst int N=100010,P=998244353;\n\nint n,k,q,fa[N],dep[N],b[N],ans[N];\nvector<int>G[N];\n\nvoid dfs(int u)\n{\n\tfor(auto&v:G[u])\n\t\tdep[v]=dep[u]+1,dfs(v);\n}\n\nint fpow(int a,int b)\n{\n\tll w(1),o(a);\n\twhile(b) {\n\t\tif(b&1) w=w*o%P;\n\t\to=o*o%P;\n\t\tb>>=1;\n\t}\n\treturn w;\n}\n\nnamespace LCT\n{\n\tint cnt,ch[N][2],fa[N],st[N],top;\n\tstruct node\n\t{\n\t\tint tg;\n\t\tll sb;\n\t\tll s;\n\t\tll ans;\n\t}t[N];\n\t\n\t#define lc(x) (ch[x][0])\n\t#define rc(x) (ch[x][1])\n\t\n\tbool get(int x)\n\t{\n\t\treturn rc(fa[x])==x;\n\t}\n\t\n\tbool nrt(int x)\n\t{\n\t\treturn rc(fa[x])==x || lc(fa[x])==x;\n\t}\n\t\n\tvoid up(int x)\n\t{\n\t\tt[x].sb=t[lc(x)].sb+t[rc(x)].sb+b[x];\n\t\tt[x].ans=t[lc(x)].ans+t[rc(x)].ans+(ll)b[x]*t[x].s;\n\t}\n\t\n\tvoid down(int x)\n\t{\n\t\tif(t[x].tg)\n\t\t{\n\t\t\tint y=t[x].tg;\n\t\t\tt[x].tg=0;\n\t\t\tif(lc(x))\n\t\t\t{\n\t\t\t\tt[lc(x)].tg+=y;\n\t\t\t\tt[lc(x)].s+=y;\n\t\t\t\tt[lc(x)].ans+=(ll)y*t[lc(x)].sb;\n\t\t\t}\n\t\t\tif(rc(x))\n\t\t\t{\n\t\t\t\tt[rc(x)].tg+=y;\n\t\t\t\tt[rc(x)].s+=y;\n\t\t\t\tt[rc(x)].ans+=(ll)y*t[rc(x)].sb;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvoid rot(int x)\n\t{\n\t\tint y=fa[x],i=get(x);\n\t\tif(nrt(y))\n\t\t\tch[fa[y]][get(y)]=x;\n\t\tfa[x]=fa[y];\n\t\tch[y][i]=ch[x][i^1];\n\t\tfa[ch[x][i^1]]=y;\n\t\tch[x][i^1]=y;\n\t\tfa[y]=x;\n\t\tup(y);\n\t}\n\t\n\tvoid splay(int x)\n\t{\n\t\tst[top=1]=x;\n\t\tfor(int y=x;nrt(y);y=fa[y])\n\t\t\tst[++top]=fa[y];\n\t\tfor(int i=top;i;i--)\n\t\t\tdown(st[i]);\n\t\tfor(int y=fa[x];nrt(x);rot(x),y=fa[x])\n\t\t\tif(nrt(y))\n\t\t\t\trot(get(x)==get(y)?y:x);\n\t\tup(x);\n\t}\n\t\n\tvoid access(int x)\n\t{\n\t\tfor(int y=0;x;y=x,x=fa[x])\n\t\t{\n\t\t\tsplay(x);\n\t\t\trc(x)=y;\n\t\t}\n\t}\n\t\n\tvoid upd(int x,int y)\n\t{\n\t\tt[x].tg+=y;\n\t\tt[x].s+=y;\n\t\tt[x].ans+=(ll)y*t[x].sb;\n\t}\n\t\n\tvoid link(int x,int y)\n\t{\n\t\tfa[x]=y;\n\t}\n}\n\nstruct Ques {\n\tint x,y,id;\n}a[N];\n\nbool cmp(Ques a,Ques b)\n{\n\treturn a.x<b.x;\n}\n\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&q,&k);\n\tfor(int i=2; i<=n; i++)\n\t\tscanf(\"%d\",&fa[i]),G[fa[i]].push_back(i);\n\tdep[1]=1;\n\tdfs(1);\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tdep[i]=fpow(dep[i],k);\n\t}\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tb[i]=(dep[i]-dep[fa[i]]+P)%P;\n\t\tLCT::link(i,fa[i]);\n\t}\n\tfor(int i=1; i<=q; i++)\n\t{\n\t\tscanf(\"%d%d\",&a[i].x,&a[i].y);\n\t\ta[i].id=i;\n\t}\n\tsort(a+1,a+1+q,cmp);\n\tfor(int i=1,j=1; i<=q; i++)\n\t{\n\t\twhile(j<=n && j<=a[i].x)\n\t\t{\n\t\t\tLCT::access(j);\n\t\t\tLCT::splay(j);\n\t\t\tLCT::upd(j,1);\n\t\t\tj++;\n\t\t}\n\t\tint o=a[i].y;\n\t\tLCT::access(o);\n\t\tLCT::splay(o);\n\t\tans[a[i].id]=LCT::t[o].ans%P;\n\t}\n\tfor(int i=1; i<=q; i++)\n\t\tprintf(\"%d\\n\",ans[i]);\n\treturn 0;\n}",
        "postTime": 1555849128,
        "uid": 13052,
        "name": "iostream",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5305 \u3010[GXOI/GZOI2019]\u65e7\u8bcd\u3011"
    },
    {
        "content": "\u6811\u94fe\u5256\u5206\u3002\n\n```\n\u6211\u771f\u50bb\uff0c\u771f\u7684\u3002\u6211\u5355\u77e5\u9053 NOIP \u4f1a\u51fa\u539f\u9898\uff0c\u6211\u6ca1\u60f3\u5230\u7701\u9009\u4e5f\u4f1a\u51fa\u539f\u9898\u3002\n\u2014\u2014\u9c81\u8fc5\n```\n\n\u4eb2\uff0c\u8fd9\u8fb9\u5efa\u8bae\u53bb\u770b\u4e00\u4e0b $\\texttt{[LNOI2014]LCA}$ \u5462\u3002\n\n\u8003\u8651 $k=1$ \u65f6\uff0c\u6bcf\u6b21\u8be2\u95ee $(x,y)$\uff0c\u53ef\u4ee5\u8003\u8651\u628a $\\text{dep}$ \u5747\u644a\u5230\u6839\u5230 $y$ \u7684\u8def\u5f84\u4e0a\uff0c\u7136\u540e\u53ef\u4ee5\u76f4\u63a5\u67e5\u8be2\uff0c\u4f46\u662f\u8fd9\u6837\u663e\u7136\u4f1a\u53d8\u6210 $\\text{O}(n)$ \u5904\u7406\uff0c\u6211\u4eec\u53cd\u8fc7\u6765\u8003\u8651\uff0c\u5bf9 $x$ \u8fdb\u884c\u5904\u7406\uff0c\u90a3\u4e48\u53ef\u4ee5\u79bb\u7ebf\u505a\uff0c\u628a\u8be2\u95ee\u6392\u5e8f\uff0c\u7136\u540e\u6bcf\u4e2a\u8be2\u95ee\u628a\u6240\u6709 $i\\in[1,x]$ \u7684\u70b9\u5230\u6839\u7684\u6743\u503c\u90fd\u52a0 $1$\uff0c\u7136\u540e\u76f4\u63a5\u67e5\u8be2\u6839\u5230 $y$ \u7684\u6743\u503c\u548c\uff0c\u6240\u6709 $x$ \u76f8\u540c\u7684\u8be2\u95ee\u90fd\u53ef\u4ee5\u4e00\u8d77\u5904\u7406\u3002\n\n\u90a3\u4e48\u8981\u600e\u4e48\u6269\u5c55\u5230 $k>1$ \u5462\uff1f\u6211\u4eec\u5206\u6790\u4e00\u4e0b $k=1$ \u65f6\u7684\u672c\u8d28\uff0c\u6211\u4eec\u52a0\u4e0a\u7684\u8fd9\u4e2a $1$ \u5176\u5b9e\u5c31\u662f $\\text{dep}_x-\\text{dep}_{fa[x]}$\uff0c\u90a3\u4e48\u73b0\u5728\u662f $\\text{dep}^k$ \u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6269\u5c55\u5230 $k$ \u6b21\u7684\u60c5\u51b5\uff0c\u5373\u52a0\u4e0a\u7684\u5c31\u662f $\\text{dep}_x^k-\\text{dep}_{fa[x]}^k$\uff0c\u90a3\u4e48\u4f9d\u7136\u548c $k=1$ \u65f6\u4e00\u6837\u505a\uff0c\u8be2\u95ee\u79bb\u7ebf\uff0c\u7136\u540e\u628a $x$ \u76f8\u7b49\u7684\u4e00\u8d77\u5904\u7406\u4e86\u3002\u4e0d\u8fc7\u8fd9\u4e2a $\\text{dep}_x^k-\\text{dep}_{fa[x]}^k$ \u9700\u8981\u9884\u5904\u7406\u4e00\u4e0b\uff0c\u4e0d\u7136\u5904\u7406\u975e\u5e38\u9ebb\u70e6\u3002\n\n\u7b97\u6cd5\u5f53\u7136\u5c31\u662f\u6811\u5256+\u7ebf\u6bb5\u6811\u4e86\u3002\uff08\u542c\u8bf4 $\\texttt{LCT}$ \u4e5f\u53ef\u4ee5\u505a\uff0c\u5f53\u7136\u6211\u662f\u4e0d\u4f1a\u7684\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 50005\n#define reg register\n#define inl inline\n#define stc static\n#define int long long\nusing namespace std;\nconst int Mod=998244353;\nstc int cnt,fst[MAXN],nxt[MAXN<<1],to[MAXN<<1];\nstc int n,q,k,a[MAXN],sum[MAXN],ans[MAXN];\ninl int Add(reg int x,reg int y)\n{\n\treturn x+y>Mod?x+y-Mod:x+y;\n}\ninl int Dec(reg int x,reg int y)\n{\n\treturn x-y<0?x-y+Mod:(x-y>Mod?x-y-Mod:x-y);\n}\ninl int Mul(reg int x,reg int y)\n{\n\treturn x*y-x*y/Mod*Mod;\n}\ninl int Pow(reg int x,reg int y)\n{\n\treg int res=1;\n\tfor(;y;y>>=1,x=Mul(x,x)) if(y&1) res=Mul(res,x);\n\treturn res;\n}\ninl void AddEdge(reg int u,reg int v)\n{\n\tto[++cnt]=v;\n\tnxt[cnt]=fst[u];\n\tfst[u]=cnt;\n}\ntemplate <typename T> inl void Read(reg T &x)\n{\n\tx=0;\n\treg int fu=1;\n\treg char ch=getchar();\n\tfor(;!isdigit(ch);ch=getchar()) if(ch=='-') fu=-1;\n\tfor(;isdigit(ch);ch=getchar()) x=(x<<3)+(x<<1)+(ch-48);\n\tx*=fu;\n}\nstruct TreeSplit\n{\n\tint t[MAXN<<2],tag[MAXN<<2];\n\tint siz[MAXN],son[MAXN],dfn[MAXN],Idx,top[MAXN],faz[MAXN],rk[MAXN],dep[MAXN];\n\tvoid Dfs1(reg int u)\n\t{\n\t\tsiz[u]=1;\n\t\tson[u]=0;\n\t\tfor(reg int i=fst[u];i;i=nxt[i])\n\t\t{\n\t\t\treg int v=to[i];\n\t\t\tif(v==faz[u]) continue;\n\t\t\tfaz[v]=u;\n\t\t\tdep[v]=dep[u]+1;\n\t\t\tDfs1(v);\n\t\t\tsiz[u]+=siz[v];\n\t\t\tif(siz[v]>siz[son[u]]) son[u]=v;\n\t\t}\n\t}\n\tvoid Dfs2(reg int u,reg int rt)\n\t{\n\t\tdfn[u]=++Idx;\n\t\trk[Idx]=u;\n\t\ttop[u]=rt;\n\t\tif(son[u]) Dfs2(son[u],rt);\n\t\tfor(reg int i=fst[u];i;i=nxt[i])\n\t\t{\n\t\t\treg int v=to[i];\n\t\t\tif(v==son[u] || v==faz[u]) continue;\n\t\t\tDfs2(v,v);\n\t\t}\n\t}\n\tinl void PushUp(reg int rt)\n\t{\n\t\tt[rt]=Add(t[rt<<1],t[rt<<1|1]);\n\t}\n\tinl void PushDown(reg int rt,reg int l,reg int r)\n\t{\n\t\tif(tag[rt])\n\t\t{\n\t\t\treg int mid=l+r>>1;\n\t\t\tt[rt<<1]=Add(t[rt<<1],Mul(tag[rt],Dec(sum[mid],sum[l-1])));\n\t\t\tt[rt<<1|1]=Add(t[rt<<1|1],Mul(tag[rt],Dec(sum[r],sum[mid])));\n\t\t\ttag[rt<<1]=Add(tag[rt<<1],tag[rt]);\n\t\t\ttag[rt<<1|1]=Add(tag[rt<<1|1],tag[rt]);\n\t\t\ttag[rt]=0;\n\t\t}\n\t}\n\tvoid Modify(reg int rt,reg int l,reg int r,reg int tl,reg int tr)\n\t{\n\t\tif(tl<=l && r<=tr)\n\t\t{\n\t\t\tt[rt]=Add(t[rt],Dec(sum[r],sum[l-1]));\n\t\t\ttag[rt]++;\n\t\t\treturn;\n\t\t}\n\t\treg int mid=l+r>>1;\n\t\tPushDown(rt,l,r);\n\t\tif(tl<=mid) Modify(rt<<1,l,mid,tl,tr);\n\t\tif(tr>mid) Modify(rt<<1|1,mid+1,r,tl,tr);\n\t\tPushUp(rt);\n\t}\n\tint Query(reg int rt,reg int l,reg int r,reg int tl,reg int tr)\n\t{\n\t\tif(tl<=l && r<=tr) return t[rt];\n\t\treg int mid=l+r>>1,res=0;\n\t\tPushDown(rt,l,r);\n\t\tif(tl<=mid) res=Add(res,Query(rt<<1,l,mid,tl,tr));\n\t\tif(tr>mid) res=Add(res,Query(rt<<1|1,mid+1,r,tl,tr));\n\t\treturn res;\n\t}\n\tinl void Mdy(reg int u)\n\t{\n\t\tfor(;u;u=faz[top[u]]) Modify(1,1,n,dfn[top[u]],dfn[u]);\n\t}\n\tinl int Qry(reg int u)\n\t{\n\t\treg int res=0;\n\t\tfor(;u;u=faz[top[u]]) res=Add(res,Query(1,1,n,dfn[top[u]],dfn[u]));\n\t\treturn res;\n\t}\n}T;\nstruct Query\n{\n\tint v,id;\n};\nvector <Query> vec[MAXN];\nsigned main()\n{\n\tRead(n);\n\tRead(q);\n\tRead(k);\n\tfor(reg int i=2;i<=n;i++)\n\t{\n\t\tRead(T.faz[i]);\n\t\tAddEdge(T.faz[i],i);\n\t\tAddEdge(i,T.faz[i]);\n\t}\n\tT.dep[1]=1;\n\tT.Dfs1(1);\n\tT.Dfs2(1,0);\n\tfor(reg int i=1;i<=n;i++) a[i]=Dec(Pow(T.dep[i],k),Pow(T.dep[i]-1,k));\n\tfor(reg int i=1;i<=n;i++) sum[i]=Add(sum[i-1],a[T.rk[i]]);\n\tfor(reg int i=1;i<=q;i++)\n\t{\n\t\treg int x,y;\n\t\tRead(x);\n\t\tRead(y);\n\t\tvec[x].push_back((Query){y,i});\n\t}\n\tfor(reg int i=1;i<=n;i++)\n\t{\n\t\tT.Mdy(i);\n\t\tfor(reg int j=0;j<(int)vec[i].size();j++) ans[vec[i][j].id]=T.Qry(vec[i][j].v);\n\t}\n\tfor(reg int i=1;i<=q;i++) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1555508939,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5305 \u3010[GXOI/GZOI2019]\u65e7\u8bcd\u3011"
    },
    {
        "content": "\u663e\u7136\u8fd9\u9898\u548cLNOI2014\u57fa\u672c\u662f\u4e00\u4e2a\u9898\u3002\n\n~~\u81f3\u5c11\u6211\u7684\u505a\u6cd5\u6539\u4e86\u4e24\u4e09\u884c\u5c31\u8fc7\u4e86~~\n\n\u8003\u8651\u5206\u5757\uff0c\u5757\u5927\u5c0f$\\sqrt n$\n\n\u5757\u5185\u7528\u6811\u5f62dp\u8dd1\u51fa\u6765\u6bcf\u4e2a\u70b9y\u5728\u8fd9\u4e2a\u5757\u5185\u7684\u7b54\u6848$\\sum dep\\big(lca(i,y)\\big)^k$\n\n\u5757\u5916\u53ef\u4ee5\u9884\u5904\u7406$O(1)LCA$\uff0c\u5c31\u53ef\u4ee5$O(1)$\u56de\u7b54\u4e86\n\n\u90a3\u4e48\u663e\u7136\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f$O(n\\sqrt n)$\u4e86\u3002\n\n\u6539\u7684\u51e0\u884c\u5c31\u662f\u52a0\u4e86\u4e2ak\u6b21\u5e42\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<algorithm>\n#define LL long long\nusing namespace std;\n\ninline int read(){\n    int x=0,f=1;char ch=' ';\n    while(ch<'0' || ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0' && ch<='9')x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n    return f==1?x:-x;\n}\n\nconst int N=1e5+5,sqN=250,mod=998244353;\ninline int ksm(int a,int n){\n\tint ans=1;\n\twhile(n){\n\t\tif(n&1)ans=(LL)ans*a%mod;\n\t\ta=(LL)a*a%mod;\n\t\tn>>=1;\n\t}\n\treturn ans;\n}\n\nint n,q,tot,k;\nint head[N],to[N],Next[N];\ninline void addedge(int x,int y){\n    to[++tot]=y;\n    Next[tot]=head[x];\n    head[x]=tot;\n}\n\nint cnt,dep[N],depk[N],a[N],p[N],st[N][17],Log[N];\ninline void dfs1(int x){\n    a[++cnt]=x;\n    p[x]=cnt;\n    st[cnt][0]=x;\n    depk[x]=ksm(dep[x],k);\n    for(int i=head[x];i;i=Next[i]){\n        int u=to[i];\n        dep[u]=dep[x]+1;\n        dfs1(u);\n        a[++cnt]=x;\n        st[cnt][0]=x;\n    }\n}\ninline int Min(int x,int y){\n    if(p[x]<p[y])return x;\n    else return y;\n}\ninline int getlca(int x,int y){\n    if(p[x]>p[y])swap(x,y);\n    int k=Log[p[y]-p[x]+1];\n    return Min(st[p[x]][k],st[p[y]-(1<<k)+1][k]);\n}\n\nint block,bcnt,L[sqN],R[sqN],belong[N];\nint f[sqN][N],dp[N];\nint vis[N],size[N];\ninline void dfs2(int x){\n    size[x]=vis[x];\n    for(int i=head[x];i;i=Next[i]){\n        int u=to[i];\n        dfs2(u);\n        size[x]+=size[u];\n    }\n}\ninline void dfs3(int x){\n    for(int i=head[x];i;i=Next[i]){\n        int u=to[i];\n        dp[u]=(dp[x]+(LL)(size[x]-size[u])*depk[x])%mod;\n        dfs3(u);\n    }\n    dp[x]=(dp[x]+(LL)size[x]*depk[x])%mod;\n}\n\nint main(){\n    n=read();q=read();k=read();\n    for(int i=2;i<=n;++i){\n        int x=read();\n        addedge(x,i);\n    }\n    dep[1]=1;\n    dfs1(1);\n    for(int k=1;k<=16;++k)\n        for(int i=1;i+(1<<k)-1<=cnt;++i)\n            st[i][k]=Min(st[i][k-1],st[i+(1<<(k-1))][k-1]);\n    Log[0]=-1;\n    for(int i=1;i<=cnt;++i)Log[i]=Log[i>>1]+1;\n    block=min(n,400);\n    bcnt=n/block;\n    if(n%block)bcnt++;\n    for(int i=1;i<=bcnt;++i)L[i]=(i-1)*block+1,R[i]=i*block;\n    R[bcnt]=n;\n    for(int i=1;i<=n;++i)belong[i]=(i-1)/block+1;\n    for(int i=1;i<=bcnt;++i){\n        for(int j=1;j<=n;++j)size[j]=vis[j]=dp[j]=0;\n        for(int j=L[i];j<=R[i];++j)vis[j]=1;\n        dfs2(1);\n        dfs3(1);\n        for(int j=1;j<=n;++j)f[i][j]=dp[j];\n    }\n    for(int s=1;s<=q;++s){\n        int l=1,r=read(),x=read();\n        LL ans=0;\n        if(belong[l]==belong[r]){\n            for(int i=l;i<=r;++i)\n                ans+=depk[getlca(x,i)];\n        }\n        else{\n            for(int i=l;i<=R[belong[l]];++i)\n                ans+=depk[getlca(x,i)];\n            for(int i=L[belong[r]];i<=r;++i)\n                ans+=depk[getlca(x,i)];\n            for(int i=belong[l]+1;i<belong[r];++i)\n                ans+=f[i][x];\n        }\n        printf(\"%lld\\n\",ans%mod);\n    }\n    return 0;\n}\n```",
        "postTime": 1556006003,
        "uid": 39505,
        "name": "\u73ab\u8475\u4e4b\u8776",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5305 \u3010[GXOI/GZOI2019]\u65e7\u8bcd\u3011"
    },
    {
        "content": "GXOI\u7684\u9898\u76f8\u5f53\u6c34\uff0c\u8fd9\u4e2a\u9898\u6211\u4f30\u8ba1\u53ef\u4ee5\u51fa\u6210TG\u7ec4D2T3\u5427\u3002\u5efa\u8bae\u53ef\u4ee5\u52a0\u5f3a\u4e00\u4e0b\u6570\u636e\uff0c\u52a0\u5f3a\u52304e5\u6700\u597d\u3002\n\n\u7b97\u6cd5\u4e00\uff1a\u5bf9\u4e8e\u524d$1-4$\u4e2a\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u53bb\u66b4\u529b\u679a\u4e3e\u7edf\u8ba1\u8d21\u732e\uff0c\u901a\u8fc7ST+\u6b27\u62c9\u5e8f\u627eLCA\uff0c\u53ef\u4ee5\u8fbe\u5230O($n^2$)\u7684\u590d\u6742\u5ea6\uff0c\u671f\u671b\u5f97\u520620\u3002\n\n\u7b97\u6cd5\u4e8c\uff1a\u5bf9\u4e8e$5-8$\u4e2a\u70b9\uff0c\u8003\u8651\u4ee51\u4e3a\u6839\u7684\u94fe\u4e0a\u7684\u95ee\u9898\uff0c\u6df1\u5ea6\u4e3ai\u7684\u70b9\u5bf9\u4e8e\u4e0b\u9762\u7684\u70b9\u7684\u8d21\u732e\u662f$i^k$\uff0c\u5bf9\u4e8e\u4ed6\u4e0a\u9762\u7684\u6df1\u5ea6\u4e3aj\u7684\u70b9\u7684\u8d21\u732e\u662f$j^k$\uff0c\u8fd9\u4e24\u79cd\u8d21\u732e\u53ef\u4ee5\u5206\u5f00\u7edf\u8ba1\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u9898\u53ef\u4ee5\u79bb\u7ebf\u505a\uff0c\u518d\u52a0\u4e0a$9-10$\u4e2a\u70b9\u7684\u6697\u793a\uff0c\u4e0d\u96be\u60f3\u5230\u628a\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\u6309x\u6392\u5e8f\uff0c\u4e0d\u65ad\u52a0\u70b9\uff0c\u7136\u540e\u7edf\u8ba1\u8d21\u732e\u3002\n\n\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u6c42\u548c\uff0c\u8fd9\u4e2a\u4e1c\u897f\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\uff0c\u590d\u6742\u5ea6O($nlogn$)\uff0c\u671f\u671b\u5f97\u520640\u3002\n\n\u4e4b\u540e\u7684\u601d\u8def\u5c31\u662f\u6b63\u89e3\u4e86\uff0c\u5176\u4ed6\u90e8\u5206\u5206\u7684\u5b58\u5728\u610f\u4e49\u6211\u611f\u89c9\u5c31\u662f\u6697\u793a\u6b63\u89e3\u3002\n\n\u7b97\u6cd5\u4e09\uff1a\u7ed3\u5408\u4e0a\u9762\u7684\u601d\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u628a\u5bf9$i <= x$\u7edf\u8ba1\u7b54\u6848\u8f6c\u5316\u6210\u5bf9\u4e8ey\u7684\u6bcf\u4e2a\u7956\u5148\u7edf\u8ba1\u8d21\u732e\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u5404\u4e2a\u7956\u5148\u7684\u8d21\u732e\uff0c\u6211\u4eec\u53ef\u4ee5\u5bb9\u65a5\u5730\u7edf\u8ba1\u8fd9\u4e2a\u8d21\u732e\uff0c\u5bf9\u4e8e$i$\u7684\u67d0\u4e2a\u7956\u5148$j$\uff0c$j$\u7684\u513f\u5b50$k$\u7684\u540e\u4ee3\u91cc\u6709$i$, \u6211\u4eec\u628a$sum[j] * dep[j] ^ k$\u7edf\u8ba1\u5230\u8d21\u732e\u91cc\uff0c\u518d\u5bb9\u65a5\u6389$sum[k] * dep[j] ^ k$\uff0c \u5176\u4e2d$sum[i]$\u4ee3\u8868$i$\u5b50\u6811\u5185\u5df2\u88ab\u52a0\u5165\u7684\u70b9\u7684\u6570\u91cf\u3002\n\n$Si$\u4ee3\u8868i\u7684\u7956\u5148\u96c6\u5408\uff0c\u7edf\u8ba1\u7b54\u6848\u7684\u5f0f\u5b50\u4e3a$\\sum\\limits_{j \u2208 Si}(dep[j]^k-(dep[j] - 1)^k) * sum[j]$\u3002\n\n\u7136\u540e\u6211\u4eec\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u8fd9\u4e2a\u5f0f\u5b50\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c```j```\u70b9\u7684\u5b50\u6811\u5185\u6bcf\u591a\u4e00\u4e2a\u70b9\uff0c\u5b83\u7684\u6743\u503c\u5c31\u8981\u52a0\u4e0a$dep[j]^k-{(dep[j] - 1)}^k$\u3002\u6bcf\u6b21x\u4fee\u6539\u53ea\u6d89\u53ca\u76f4\u4e0a\u76f4\u4e0b\u7684\u8def\u5f84\uff0c\u5bf9\u4e8e\u4e00\u6761\u8d77\u70b9\u4e3a```i```\uff0c\u7ec8\u70b9\u4e3a```j```\u7684\u8def\u5f84\uff0c\u6743\u503c\u7684\u589e\u503c\u662f$dep[j]^k - (dep[i] - 1) ^ k$\u3002\n\n\u6240\u4ee5\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u9700\u8981\u5e72\u4e24\u4ef6\u4e8b\u3002\n\n\u7b2c\u4e00\u4ef6\u4e8b\uff1a\u628a\u4e00\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u52a0\u4e0a\u67d0\u4e2a\u503c\u3002\n\n\u7b2c\u4e8c\u4ef6\u4e8b\uff1a\u67e5\u8be2\u4e00\u4e2a\u70b9\u5230\u6839\u8def\u5f84\u7684\u6743\u503c\u548c\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u6811\u5256\u6216\u8005LCT\u7ef4\u62a4\u3002\u524d\u8005\u590d\u6742\u5ea6O($n\\log ^2n$)\uff0c\u540e\u8005\u590d\u6742\u5ea6O($n\\log n$)\u3002\u4e0d\u8fc7\u6548\u7387\u90fd\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u57fa\u672c\u8dd1\u4e2a$4e5$\u538b\u529b\u4e0d\u5927\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define maxn 50005\n#define maxt 200005\n#define int long long\n#define mod 998244353\n#define For(i, j, n) for(register int i = j ; i <= n ; ++i)\nint n, k, Q, tot, po[maxn];\nint c[maxt], fa[maxn], ans[maxn], dep[maxn], dfn[maxn], lis[maxn], siz[maxn], top[maxn], lazy[maxt], mson[maxn]; \nvector<int>E[maxn];\nstruct node{ int x, y, id; }q[maxn];\n//\u7ebf\u6bb5\u6811 \n#define ls x << 1\n#define rs x << 1 | 1\n#define mid (l + r >> 1) \ninline void pushup(int x){ c[x] = c[ls] + c[rs]; }\ninline void add(int x, int l, int r, int y){ c[x] = (c[x] + (po[dep[lis[r]]] - po[dep[lis[l]] - 1] + mod) * y) % mod, lazy[x] += y; }\ninline void pushdown(int x, int l, int r){ add(ls, l, mid, lazy[x]), add(rs, mid + 1, r, lazy[x]), lazy[x] = 0; }\ninline int query(int x, int l, int r, int ql, int qr){\\\n\tif(ql <= l && r <= qr) return c[x];\n\tif(lazy[x]) pushdown(x, l, r);\n\tint ans = 0;\n\tif(ql <= mid) ans += query(ls, l, mid, ql, qr);\n\tif(qr > mid) ans += query(rs, mid + 1, r, ql, qr);\n\treturn ans % mod; \n}\ninline void revise(int x, int l, int r, int ql, int qr){\\\n\tif(ql <= l && r <= qr) return add(x, l, r, 1);\n\tif(lazy[x]) pushdown(x, l, r);\n\tif(ql <= mid) revise(ls, l, mid, ql, qr);\n\tif(qr > mid) revise(rs, mid + 1, r, ql, qr);\n\tpushup(x);\n}\n//\u6811\u5256 \ninline void dfs(int x){\n\tdep[x] = dep[fa[x]] + (siz[x] = 1);\n\tfor(auto i : E[x]){\n\t\tdfs(i), siz[x] += siz[i];\n\t\tif(siz[i] > siz[mson[x]]) mson[x] = i;\n\t}\n}\ninline void dfs(int x, int tp){\n\ttop[x] = tp, lis[dfn[x] = ++tot] = x;\n\tif(mson[x]) dfs(mson[x], tp);\n\tfor(auto i : E[x]) if(!dfn[i]) dfs(i, i);\n}\n//jump \ninline void Insert(int x){\n\tfor( ; top[x] ^ 1 ; x = fa[top[x]]) revise(1, 1, n, dfn[top[x]], dfn[x]);\n\trevise(1, 1, n, 1, dfn[x]);\n}\ninline int Query(int x){\n\tint ans = 0;\n\tfor( ;top[x] ^ 1 ; x = fa[top[x]]) ans += query(1, 1, n, dfn[top[x]], dfn[x]);\n\treturn ans + query(1, 1, n, 1, dfn[x]);\n}\n//\u4e3b\u51fd\u6570 \ninline bool cmp(node a, node b){ return a.x < b.x; }\ninline int quickpow(int x, int y){\n\tint sum = 1;\n\tfor( ; y ; x = x * x % mod, y >>= 1) if(y & 1) sum = sum * x % mod;\n\treturn sum;\n}\nsigned main(){\n\tscanf(\"%lld %lld %lld\", &n, &Q, &k);\n\tFor(i, 2, n) scanf(\"%lld\", &fa[i]), E[fa[i]].push_back(i);\n\tdfs(1), dfs(1, 1);\n\tFor(i, 1, n) po[i] = quickpow(i, k);\n\tFor(i, 1, Q) q[i].id = i, scanf(\"%lld %lld\", &q[i].x, &q[i].y);\n\tsort(q + 1, q + Q + 1, cmp);\n\tFor(i, 1, Q){\n\t\tFor(j, q[i - 1].x + 1, q[i].x) Insert(j);\n\t\tans[q[i].id] = Query(q[i].y);\n\t}\n\tFor(i, 1, Q) printf(\"%lld\\n\", ans[i] % mod);\n\treturn 0;\n}",
        "postTime": 1586742843,
        "uid": 163980,
        "name": "\u884c\u541f\u5578\u4e5d\u5dde",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5305 \u3010[GXOI/GZOI2019]\u65e7\u8bcd\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.com.cn/problem/P5305)\u770b\u9898\u76ee\u3002  \n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~~\u636e\u8bf4\u8fd9\u662f\u677f\u5b50\u9898\uff0c\u53ef\u662f\u6211\u6ca1\u6709\u505a\u8fc7\u3002~~  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4ece\u7b80\u5316\u7248\u672c\u5f00\u59cb\u5206\u6790\uff1a  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5f53$k=1$\u7684\u65f6\u5019\uff0c\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u6811\u94fe\u5256\u5206\u7684\u95ee\u9898\uff08\u53cc\u500d\u7ecf\u9a8c[$[LNOI2014]LCA$](https://www.luogu.com.cn/problem/P4211)\uff09\u3002\u628a\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\u6309\u7167$x$\u6392\u5e8f\u3002\u987a\u5e8f\u52a0\u5165$1\\sim n$\uff0c\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u6570$i$\u5c31\u5c06$i$\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u70b9$+1$\u3002\u67e5\u8be2\u5c31\u67e5\u8be2$y$\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u70b9\u548c\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5f88\u597d\u7406\u89e3\uff0c\u4e0d\u518d\u8be6\u8bf4\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651$k>1$\u7684\u65f6\u5019\u8be5\u600e\u4e48\u505a\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5728$k=1$\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u70b9$u$\u52a0\u4e0a\u7684\u76f8\u5f53\u4e8e$dep(u)-(dep(u)-1)$\u3002\u6240\u4ee5\u6211\u4eec\u4f9d\u846b\u82a6\u753b\u74e2\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9$u$\uff0c\u4fee\u6539\u7684\u65f6\u5019\u5c31\u52a0\u4e0a$dep(i)^k-(dep(i)-1)^k$\uff08$i$\u4e3a$u$\u5bf9\u5e94\u7684\u8f93\u5165\u7684\u6811\u4e0a\u7684\u70b9\uff09\u3002\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u7684\u8282\u70b9\uff0c\u5982\u679c\u5b83\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u7b97\u51fa\u6765\u4e00\u6b21\u8be5\u52a0\u591a\u5c11\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6807\u8bb0\u4e0b\u4f20\u7b54\u6848\u4e0d\u53d8\uff0c\u5b83\u4e00\u6b21\u52a0\u7684\u503c\u5c31\u662f\u5de6\u53f3\u513f\u5b50\u4e00\u6b21\u52a0\u7684\u548c\u3002\u6bd4\u5982$v$\u548c$w$\u662f\u5171\u5c5e\u4e00\u4e2a\u7236\u4eb2$u$\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u5bf9\u5e94\u8f93\u5165\u7684\u6811\u4e0a\u7684\u70b9$i$\u548c$j$\uff0c\u90a3\u4e48$v$\u4e00\u6b21\u589e\u52a0$dep(i)^k-(dep(i)-1)^k$\uff0c$w$\u4e00\u6b21\u589e\u52a0$dep(j)^k-(dep(j)-1)^k$\uff0c\u800c$u$\u4e00\u6b21\u5c31\u5e94\u8be5\u589e\u52a0$dep(i)^k-(dep(i)-1)^k+dep(j)^k-(dep(j)-1)^k$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u65f6\u95f4\u662f$O(q\\log_2q+(n+q)\\log_2n)$\u3002  \n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <utility>\n#include <algorithm>\nusing namespace std;\n\ntypedef pair<int, pair<int, int> > queries;\n\n#define xx first\n#define yy second.first\n#define zz second.second\n\nconst int mod = 998244353;\nconst int MAXN = 50005, MAXQ = 50005, MAXLOG = 20;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0; char s = getchar();int f = 1;\n\twhile( s < '0' || '9' < s ) { f = 1; if( s == '-' ) f = -1; s = getchar(); }\n\twhile( '0' <= s && s <= '9' ) { x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar(); }\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ) { putchar( '-' ), x = -x; }\n\tif( 9 < x ) { write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\nstruct edge\n{\n\tint to, nxt;\n}Graph[MAXN << 1];\n\nstruct segmentTreeNode\n{\n\tint s, adup, tag;\n\t#define s( a ) ( segTree[a].s )\n\t#define tag( a ) ( segTree[a].tag )\n\t#define adup( a ) ( segTree[a].adup )\n}segTree[MAXN << 2];\n\nqueries q[MAXQ];\nint ans[MAXQ];\n\nint f[MAXN];\nint LTail[MAXN], seq[MAXN];\nint dep[MAXN], head[MAXN], heavy[MAXN], siz[MAXN], bel[MAXN], LPos[MAXN];\nint N, Q, K, cnt, ID, tot;\n \nint fix( const int x ) { return ( x % mod + mod ) % mod; }\nvoid add( const int x, const int val ) { s( x ) = ( s( x ) + 1ll * val * adup( x ) % mod ) % mod, tag( x ) += val; }\nvoid upt( const int x ) { s( x ) = ( s( x << 1 ) + s( x << 1 | 1 ) ) % mod, adup( x ) = ( adup( x << 1 ) + adup( x << 1 | 1 ) ) % mod; }\nvoid normalize( const int x ) { if( ! tag( x ) ) return ; add( x << 1, tag( x ) ), add( x << 1 | 1, tag( x ) ), tag( x ) = 0; }\n\nint qkpow( int base, int indx )\n{\n\tint res = 1;\n\twhile( indx )\n\t{\n\t\tif( indx & 1 ) res = 1ll * res * base % mod;\n\t\tbase = 1ll * base * base % mod, indx >>= 1;\n\t}\n\treturn res;\n}\n\nvoid addEdge( const int from, const int to )\n{\n\tGraph[++ cnt].to = to, Graph[cnt].nxt = head[from];\n\thead[from] = cnt;\n}\n\nvoid DFS1( const int u, const int fa )\n{\n\tdep[u] = dep[fa] + 1, siz[u] = 1, heavy[u] = -1;\n\tfor( int i = head[u], v ; i ; i = Graph[i].nxt )\n\t\tif( ( v = Graph[i].to ) ^ fa ) \n\t\t{\n\t\t\tDFS1( v, u ), siz[u] += siz[v];\n\t\t\tif( heavy[u] == -1 || siz[heavy[u]] < siz[v] ) heavy[u] = v;\n\t\t}\n}\n\nvoid DFS2( const int u, const int fa )\n{\n\tLPos[u] = ++ ID, seq[ID] = u;\n\tif( ~ heavy[u] ) DFS2( heavy[u], u ), bel[u] = bel[heavy[u]];\n\telse bel[u] = ++ tot;\n\tLTail[bel[u]] = u;\n\tfor( int i = head[u], v ; i ; i = Graph[i].nxt ) \n\t\tif( ( v = Graph[i].to ) ^ fa && v ^ heavy[u] ) DFS2( v, u );\n}\n\nvoid build( const int u, const int l, const int r )\n{\n\tif( l > r ) return ;\n\tint mid = l + r >> 1;\n\tif( l == r ) \n\t{ s ( u ) = 0, adup( u ) = fix( qkpow( dep[seq[l]], K ) - qkpow( dep[seq[l]] - 1, K ) ), tag( u ) = 0; return ; }\n\tbuild( u << 1, l, mid ), build( u << 1 | 1, mid + 1, r ), upt( u );\n}\n\nvoid update( const int u, const int l, const int r, const int segL, const int segR, const int val )\n{\n\tif( l > r ) return ;\n\tint mid = l + r >> 1;\n\tif( segL <= l && r <= segR ) { add( u, val ); return ; }\n\tif( l == r ) return; normalize( u );\n\tif( segL <= mid ) update( u << 1, l, mid, segL, segR, val );\n\tif( segR > mid ) update( u << 1 | 1, mid + 1, r, segL, segR, val );\n\tupt( u );\n}\n\nint query( const int u, const int l, const int r, const int segL, const int segR )\n{\n\tif( l > r ) return 0;\n\tint mid = l + r >> 1, ret = 0;\n\tif( segL <= l && r <= segR ) return s( u );\n\tif( l == r ) return 0; normalize( u );\n\tif( segL <= mid ) ret = ( ret + query( u << 1, l, mid, segL, segR ) ) % mod;\n\tif( segR > mid ) ret = ( ret + query( u << 1 | 1, mid + 1, r, segL, segR ) ) % mod;\n\treturn ret;\n}\n\nvoid change( const int x )\n{ \n\tfor( int i = x ; i ; i = f[LTail[bel[i]]] ) \n\t\tupdate( 1, 1, N, LPos[LTail[bel[i]]], LPos[i], 1 ); \n}\n\nint ask( const int x )\n{\n\tint ret = 0;\n\tfor( int i = x ; i ; i = f[LTail[bel[i]]] )\n\t\tret = ( ret + query( 1, 1, N, LPos[LTail[bel[i]]], LPos[i] ) ) % mod;\n\treturn ret;\n}\n\nint main()\n{\n\tread( N ), read( Q ), read( K );\n\tfor( int i = 2 ; i <= N ; i ++ ) read( f[i] ), addEdge( f[i], i );\n\tDFS1( 1, 0 ), DFS2( 1, 0 );\n\tfor( int i = 1 ; i <= Q ; i ++ ) read( q[i].xx ), read( q[i].yy ), q[i].zz = i;\n\tsort( q + 1, q + 1 + Q );\n\tbuild( 1, 1, N );\n\tfor( int i = 1 ; i <= Q ; i ++ )\n\t{\n\t\tif( q[i].xx ^ q[i - 1].xx ) for( int j = q[i - 1].xx + 1 ; j <= q[i].xx ; j ++ ) change( j );\n\t\tans[q[i].zz] = ask( q[i].yy );\n\t}\n\tfor( int i = 1 ; i <= Q ; i ++ ) write( ans[i] ), putchar( '\\n' );\n\treturn 0;\n}\n```",
        "postTime": 1576545590,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[GXOI/GZOI2019]\u65e7\u8bcd"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[$luogu$](https://www.luogu.com.cn/problem/P5305).\n# \u9898\u89e3\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6211\u4eec\u5148\u8003\u8651\u7b80\u5355\u7684\u60c5\u51b5, $k=1$.\n## $k=1$\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6b64\u65f6, \u6211\u4eec\u76f8\u5f53\u4e8e\u8981\u6c42:\n$$\nAns_i=\\sum_{j\\le x_i}depth(LCA(j,y_i))\n$$\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6ce8\u610f\u5230, \u4e00\u4e2a\u70b9\u5230\u6839\u8def\u5f84\u4e0a\u7684\u7ed3\u70b9\u4e2a\u6570\u5c31\u662f\u8be5\u70b9\u7684\u6df1\u5ea6. \u6240\u4ee5\u6211\u4eec\u628a\u8be2\u95ee\u79bb\u7ebf, \u6309$x$\u4ece\u5c0f\u5230\u5927\u6392\u5e8f. \u5f53\u6c42\u548c\u7684\u4e0b\u6807\u4ece$x_1$\u589e\u5927\u5230$x_2$, \u5bf9\u4e8e$(x_1,x_2]$\u4e2d\u6240\u6709\u70b9, \u6211\u4eec\u5c06\u5176\u5230\u6839\u7684\u8def\u5f84\u6240\u6709\u70b9\u70b9\u6743\u5168\u90e8$+1$. \u6c42\u7b54\u6848\u65f6, \u7edf\u8ba1$y$\u5230\u6839\u7684\u70b9\u6743\u548c\u5373\u53ef.  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u53cc\u500d\u7ecf\u9a8c](https://www.luogu.com.cn/problem/P4211).\n## $k\\not=1$\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728$k=1$\u65f6\u53ea\u628a$x$\u5230\u6839\u7684\u8def\u5f84\u70b9\u6743$+1$?  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u56e0\u4e3a$x$\u5230\u6839\u7684\u70b9\u6743\u548c\u5c31\u662f$x$\u7684\u6df1\u5ea6.  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6240\u4ee5, \u6211\u4eec\u5c31\u8981\u8bbe\u8ba1\u4e00\u79cd\u52a0\u70b9\u6743\u7684\u65b9\u6cd5\u4f7f\u5f97\u4e00\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u70b9\u6743\u548c\u5c31\u662f\u8be5\u70b9\u6df1\u5ea6\u7684$k$\u6b21\u65b9.  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5f88\u7b80\u5355, \u5229\u7528\u5dee\u5206, \u5bf9\u4e8e\u7ed3\u70b9$u$, \u70b9\u6743\u52a0\u4e0a$depth(u)^k-(depth(u)-1)^k$\u5c31\u884c\u4e86. \u5728\u6811\u94fe\u5256\u5206\u5efa\u6811\u7684\u65f6\u5019, \u6211\u4eec\u987a\u4fbf\u5904\u7406\u5904\u6bcf\u4e2a\u533a\u95f4\u7684$adv$, \u8868\u793a\u5f53\u8fd9\u4e2a\u533a\u95f4\u6574\u4f53$'+1'$\u65f6, \u5176\u5b9e\u662f\u52a0\u4e0a$adv$, \u5c31\u8f6c\u5316\u6210$k=1$\u7684\u60c5\u51b5\u4e86.\n## \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <utility>\n#include <algorithm>\n\n#define Int register int\n\nusing namespace std;\n\nconst int MAXN = 5e4, MOD = 998244353;\nint n, Q, k, Cnte, Head[MAXN + 5];\nint Depth[MAXN + 5], Heav[MAXN + 5], Siz[MAXN + 5], Fa[MAXN + 5];\nint Indx, Top[MAXN + 5], DFN[MAXN + 5], Rank[MAXN + 5], Ans[MAXN + 5];\npair<int, pair<int, int> > q[MAXN + 5];\n\nstruct Edge {\n\tint To, _nxt;\n\tEdge () {}\n\tEdge ( const int t, const int n ): To ( t ), _nxt ( n ) {}\n} Graph[MAXN + 5];\n\ninline int qkpow ( int a, int b, const int p ) {\n\tint ret = 1;\n\tfor ( ; b; a = 1LL * a * a % p, b >>= 1 ) ret = 1LL * ret * ( b & 1 ? a : 1 ) % p;\n\treturn ret;\n}\n\nclass Segment_Tree {\nprivate:\n\tstruct Node {\n\t\tint l, r, Sum, Adv, Lazy;\n\t} Tree[MAXN << 2];\n\npublic:\n\tinline void Push_up ( const int i, const bool upadv = false ) {\n\t\tTree[i].Sum = ( Tree[i << 1].Sum + Tree[i << 1 | 1].Sum ) % MOD;\n\t\tif ( upadv ) Tree[i].Adv = ( Tree[i << 1].Adv + Tree[i << 1 | 1].Adv ) % MOD;\n\t}\n\tinline void Push_dn ( const int i ) {\n\t\tif ( ! Tree[i].Lazy ) return ;\n\t\tint& k = Tree[i].Lazy;\n\t\tTree[i << 1].Lazy += k, Tree[i << 1 | 1].Lazy += k;\n\t\tTree[i << 1].Sum = ( Tree[i << 1].Sum + 1LL * Tree[i << 1].Adv * k % MOD ) % MOD;\n\t\tTree[i << 1 | 1].Sum = ( Tree[i << 1 | 1].Sum + 1LL * Tree[i << 1 | 1].Adv * k % MOD ) % MOD;\n\t\tk = 0;\n\t}\n\tinline void Build ( const int i, const int l, const int r ) {\n\t\tTree[i] = { l, r, 0, 0, 0 };\n\t\tif ( l == r ) return Tree[i].Adv = ( qkpow ( Depth[Rank[l]], k, MOD ) - qkpow ( Depth[Rank[l]] - 1, k, MOD ) + MOD ) % MOD, void ();\n\t\tint mid = l + r >> 1;\n\t\tBuild ( i << 1, l, mid ), Build ( i << 1 | 1, mid + 1, r );\n\t\tPush_up ( i, true );\n\t}\n\tinline void Update ( const int i, const int l, const int r, const int x ) {\n\t\tif ( r < Tree[i].l || Tree[i].r < l ) return ;\n\t\tif ( l <= Tree[i].l && Tree[i].r <= r ) {\n\t\t\tTree[i].Sum = ( Tree[i].Sum + 1LL * Tree[i].Adv * x % MOD ) % MOD;\n\t\t\treturn Tree[i].Lazy += x, void ();\n\t\t}\n\t\tPush_dn ( i );\n\t\tUpdate ( i << 1, l, r, x ), Update ( i << 1 | 1, l, r, x );\n\t\tPush_up ( i );\n\t}\n\tinline int Query ( const int i, const int l, const int r ) {\n\t\tif ( r < Tree[i].l || Tree[i].r < l ) return 0;\n\t\tif ( l <= Tree[i].l && Tree[i].r <= r ) return Tree[i].Sum;\n\t\treturn Push_dn ( i ), ( Query ( i << 1, l, r ) + Query ( i << 1 | 1, l, r ) ) % MOD;\n\t}\n} ST;\n\ninline int rint () {\n\tint x = 0; char s = getchar ();\n\tfor ( ; s < '0' || '9' < s; s = getchar () );\n\tfor ( ; '0' <= s && s <= '9'; s = getchar () ) x = ( x << 3 ) + ( x << 1 ) + ( s ^ '0' );\n\treturn x;\n}\n\ninline void Link ( const int f, const int t ) {\n\tGraph[++ Cnte] = Edge ( t, Head[f] );\n\tHead[f] = Cnte;\n}\n\ninline void DFS1 ( const int u, const int fa ) {\n\tDepth[u] = Depth[Fa[u] = fa] + ( Siz[u] = 1 );\n\tfor ( Int i = Head[u], v; i; i = Graph[i]._nxt ) {\n\t\tDFS1 ( v = Graph[i].To, u ), Siz[u] += Siz[v];\n\t\tif ( Siz[v] > Siz[Heav[u]] ) Heav[u] = v;\n\t}\n}\n\ninline void DFS2 ( const int u, const int tp ) {\n\tTop[Rank[DFN[u] = ++ Indx] = u] = tp;\n\tif ( Heav[u] ) DFS2 ( Heav[u], tp );\n\tfor ( Int i = Head[u], v; i; i = Graph[i]._nxt ) {\n\t\tif ( ( v = Graph[i].To ) ^ Heav[u] ) {\n\t\t\tDFS2 ( v, v );\n\t\t}\n\t}\n}\n\ninline void Add ( int x, int y, const int v ) {\n\tfor ( ; Top[x] ^ Top[y]; ) {\n\t\tif ( Depth[Top[x]] < Depth[Top[y]] ) x ^= y, y ^= x, x ^= y;\n\t\tST.Update ( 1, DFN[Top[x]], DFN[x], 1 );\n\t\tx = Fa[Top[x]];\n\t}\n\tif ( Depth[x] < Depth[y] ) x ^= y, y ^= x, x ^= y;\n\tST.Update ( 1, DFN[y], DFN[x], 1 );\n}\n\ninline int Sum ( int x, int y ) {\n\tint ret = 0;\n\tfor ( ; Top[x] ^ Top[y]; ) {\n\t\tif ( Depth[Top[x]] < Depth[Top[y]] ) x ^= y, y ^= x, x ^= y;\n\t\tret = ( ret + ST.Query ( 1, DFN[Top[x]], DFN[x] ) ) % MOD;\n\t\tx = Fa[Top[x]];\n\t}\n\tif ( Depth[x] < Depth[y] ) x ^= y, y ^= x, x ^= y;\n\tret = ( ret + ST.Query ( 1, DFN[y], DFN[x] ) ) % MOD;\n\treturn ret;\n}\n\ninline void Work () {\n\tn = rint (), Q = rint (), k = rint ();\n\tfor ( Int i = 2; i <= n; ++ i ) Link ( rint (), i );\n\tDFS1 ( 1, 0 ), DFS2 ( 1, 1 );\n\tST.Build ( 1, 1, n );\n\tfor ( Int i = 1; i <= Q; ++ i ) q[i].first = rint (), q[i].second = { rint (), i };\n\tsort ( q + 1, q + Q + 1 );\n\tfor ( Int i = 1, lstx = 0; i <= Q; ++ i ) {\n\t\tint x = q[i].first, y = q[i].second.first, id = q[i].second.second;\n\t\tfor ( Int j = lstx + 1; j <= x; ++ j ) Add ( 1, j, 1 );\n\t\tAns[id] = Sum ( 1, y );\n\t\tlstx = x;\n\t}\n\tfor ( Int i = 1; i <= Q; ++ i ) printf ( \"%d\\n\", Ans[i] );\n}\n\nint main () {\n//\tfreopen ( \"poetry.in\", \"r\", stdin );\n//\tfreopen ( \"poetry.out\", \"w\", stdout );\n\tWork ();\n\treturn 0;\n}\n\n/*\n5 1 2\n1\n4\n1\n2\n2 5\n*/\n```",
        "postTime": 1576544051,
        "uid": 123807,
        "name": "Rainybunny",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5305 \u3010[GXOI/GZOI2019]\u65e7\u8bcd\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5341\u5206\u660e\u663e\u3002\u4e0d\u5c31\u662f\u7ebf\u6bb5\u6811\uff08\u4e3b\u5e2d\u6811\uff09\uff1f  \n\u4f46\u662f\u5982\u4f55\u7ef4\u62a4?  \n\u65e2\u7136\u662f$LCA$\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u7528\u6811\u5256\u6765\u6c42\u3002\n\n\u82e5\u679c\u9898\u76ee\u4e2d\u6ca1\u6709\u90a3\u4e2a$k$\uff0c\u90a3\u4e48\u5bb9\u6613\u60f3\u5230\u5dee\u5206\uff1a\u5c06\u8ddf\u5230\u6bcf\u4e2a$i$\u7684\u8def\u5f84\u503c\u52a0\u4e00\uff0c\u90a3\u4e48\u8ddf\u5230$y$\u7684\u8def\u5f84\u503c\u5c31\u662f\u7b54\u6848\u3002\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u4e5f\u53ef\u4ee5\u7528\u7c7b\u4f3c\u7684\u601d\u60f3\u3002\u4e8e\u662f\u70b9$x$\u7684\u8d21\u732e\u5c31\u4e0d\u4ec5\u4ec5\u662f1\uff0c\u800c\u662f$dep_{x}^k - dep_{fa_{x}}^k$\u3002\u7136\u540e\u5c31\u53ef\u4ee5\u7ef4\u62a4\u4e86\u3002\n\n\u548c\u4e00\u9053\u9898\u5f88\u50cf\uff0c[Luogu P4211](https://www.luogu.org/problem/P4211)\uff0c\u53ea\u4e0d\u8fc7\u662f\u5957\u4e86\u4e2a$k$\u6b21\u65b9\u3002\n\n\u4e0a\u4e2a\u4ee3\u7801\uff1f   \n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <utility>\n#define ll long long\nusing namespace std;\n\nconst int N = 5e4 + 10;\nconst int mod = 998244353;\nint n, q, k;\nint to[N], nxt[N], last[N], cnt = 0, tot = 0;\nint fa[N], id[N], rk[N], son[N], sz[N], dep[N], top[N], val[N];\nstruct Tree {int ls, rs, tag, sum, val;}t[N <<7];\nint rt[N], seg_tot = 0;\n\npair<int,int> operator + (const pair<int,int> &a, const pair<int,int> &b)\n{\n\treturn make_pair((a.first + b.first) % mod, (a.second + b.second) % mod);\n}\nint f_pow(int a,int x) \n{\n\tint ret = 1;\n\tfor (;x;x >>= 1)\n\t\t(x & 1) && (ret = (ll)ret * a % mod), a = (ll)a * a % mod;\n\treturn ret;\n}\nvoid add(int u,int v) {to[ ++cnt] = v, nxt[cnt] = last[u], last[u] = cnt;}\nvoid Dfs1(int p)\n{\n\tsz[p] = 1, val[p] = (f_pow(dep[p], k) - f_pow(dep[fa[p]], k) % mod + mod) % mod;\n\tfor (int i = last[p];i;i = nxt[i])\n\t\tif (to[i] ^ fa[p])\n\t\t\t{\n\t\t\t\tfa[to[i]] = p, dep[to[i]] = dep[p] + 1, \n\t\t\t\tDfs1(to[i]), sz[p] += sz[to[i]];\n\t\t\t\tif (!son[p] || sz[son[p]] < sz[to[i]]) son[p] = to[i];\n\t\t\t}\n}\nvoid Dfs2(int p)\n{\n\trk[id[p] = ++tot] = p;\n\tif (son[p]) \n\t\ttop[son[p]] = top[p], Dfs2(son[p]);\n\tfor (int i = last[p];i;i = nxt[i])\n\t\tif (!id[to[i]]) \n\t\t\ttop[to[i]] = to[i], Dfs2(to[i]);\n}\nstruct SGT \n{\n\t#define ls(p) t[p].ls\n\t#define rs(p) t[p].rs\n\tvoid build(int &p,int l,int r)\n\t{\n\t\tp = ++seg_tot;\n\t\tif (l == r) {t[p].val = val[rk[l]]; return;}\n\t\tint mid = l + r >>1;\n\t\tbuild(ls(p), l, mid), build(rs(p), mid + 1, r);\n\t\tt[p].val = (t[ls(p)].val + t[rs(p)].val) % mod;\n\t}\n\tvoid change(int l,int r,int &p,int tl,int tr)\n\t{\n\t\tt[ ++seg_tot] = t[p], p = seg_tot;\n\t\tif (l <= tl && tr <= r) \n\t\t{\n\t\t\tt[p].sum = (t[p].sum + t[p].val) % mod, t[p].tag = (t[p].tag + 1) % mod;\n\t\t\treturn;\n\t\t}\n\t\tint mid = tl + tr >>1;\n\t\tif (mid >= l) change(l, r, ls(p), tl, mid);\n\t\tif (mid < r) change(l, r, rs(p), mid + 1, tr);\n\t\tt[p].sum = ((t[ls(p)].sum + t[rs(p)].sum) % mod + (ll)t[p].tag * t[p].val) % mod;\n\t}\n\tpair<int,int> query(int l,int r,int p,int tl,int tr)\n\t{\n\t\tif (!p || l <= tl && tr <= r) \n\t\t\treturn make_pair(t[p].sum, t[p].val);\n\t\tint mid = tl + tr >>1;\n\t\tpair<int,int> ret = make_pair(0, 0);\n\t\tif (mid >= l) ret = ret + query(l, r, ls(p), tl ,mid);\n\t\tif (mid < r) ret = ret + query(l, r, rs(p), mid + 1, tr);\n\t\tret.first = (ll)(ret.first + (ll)ret.second * t[p].tag) % mod;\n\t\treturn ret;\n\t}\n}T;\nint query(int x,int p)\n{\n\tint ret = 0;\n\twhile (x) \n\t\tret = (ret + T.query(id[top[x]], id[x], rt[p], 1, n).first) % mod, x = fa[top[x]];\n\treturn ret;\n}\n\nint main()\n{\n\tscanf(\"%d %d %d\", &n, &q, &k);\n\tfor (int i = 2, u;i <= n; ++i)\n\t\tscanf(\"%d\", &u), add(u, i);\n\tdep[1] = top[1] = 1, Dfs1(1), Dfs2(1);\n\tT.build(rt[0], 1, n);\n\tfor (int i = 1, x;i <= n && (x = i, rt[i] = rt[i - 1], 1); ++i)\n\t\twhile (x)\n\t\t\tT.change(id[top[x]], id[x], rt[i], 1, n), x = fa[top[x]];\n\tfor (int x, y;q--;)\n\t{\n\t\tscanf(\"%d %d\", &x, &y);\n\t\tprintf(\"%d\\n\", query(y, x));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1565091378,
        "uid": 141350,
        "name": "Iota2029",
        "ccfLevel": 0,
        "title": "\u65e7\u8bcd"
    },
    {
        "content": "\u597d\u5957\u8def\u7684\u9898\u76ee\uff0c\u548c[Luogu P4211 [LNOI2014]LCA](https://www.luogu.org/problemnew/show/P4211)\u57fa\u672c\u4e0a\u5c31\u662f\u4e00\u4e2a\u9898\n\n\u5148\u8003\u8651$\\sum{i\\le x}\\ depth(lca(i,y))$\u600e\u4e48\u505a\uff08\u5176\u5b9e\u5c31\u662fLNOI\u90a3\u9898\uff09\n\n\u5f88\u5bb9\u6613\u53d1\u73b0\u6b64\u65f6\u6211\u4eec\u4e24\u4e2a\u70b9\u5bf9\u7684\u8d21\u732e\u4e3a$\\operatorname{lca}$\u7684\u6df1\u5ea6$\\Leftrightarrow$\u4e24\u70b9\u4e0e\u6839\u8282\u70b9\u516c\u5171\u8def\u5f84\u957f\u5ea6\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5229\u7528**\u83ab\u961f+\u6811\u5256**\uff0c\u6bcf\u6b21\u52a0\u4e00\u4e2a\u70b9\u5c31\u662f\u5230\u6839\u7684\u4e00\u6761\u94fe\u52a0$1$\uff0c\u67e5\u8be2\u5c31\u662f\u67e5\u67d0\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u548c\uff0c\u590d\u6742\u5ea6\u662f$O(n\\sqrt n\\log^2 n)$\n\n\u7136\u540e\u53d1\u73b0\u5220\u9664\u5176\u5b9e\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\uff0c\u56e0\u6b64\u6211\u4eec**\u79bb\u7ebf**\u4e00\u4e0b\u5c31\u53d8\u6210$O(n\\log^2 n)$\u7684\u4e86\n\n\u90a3\u4e48\u8003\u8651\u8fd9\u9898\u600e\u4e48\u505a\uff0c\u4e0a\u9762\u7684\u7b97\u6cd5\u76f8\u5f53\u4e8e\u8fd9\u91cc\u7684$k=1$\uff0c\u800c\u8fd9\u4e2a\u7d2f\u52a0\u7684$1$\u5176\u5b9e\u5c31\u662f$( depth(x)+1)^1-depth(x)^1$\uff0c\u662f\u4e00\u4e2a**\u6811\u4e0a\u5dee\u5206**\u7684\u8fc7\u7a0b\n\n\u56e0\u6b64\u8fd9\u9898\u6bcf\u4e2a\u70b9\u6bcf\u6b21\u8981\u52a0\u4e0a\u7684\u503c\u5c31\u662f$( depth(x)+1)^k-depth(x)^k$\uff0c\u4e4d\u4e00\u770b\u4e0d\u597d\u7ef4\u62a4\uff0c\u5176\u5b9e\u4ed4\u7ec6\u60f3\u4e00\u60f3\u6bcf\u6b21\u52a0\u7684\u90fd\u662f\u5b9a\u503c\n\n\u90a3\u4e48\u6211\u4eec\u7ebf\u6bb5\u6811\u5904\u7406\u51fa\u6240\u6709\u5bf9\u5e94\u533a\u95f4\u7684\u6bcf\u6b21\u589e\u52a0\u503c\u7684\u548c\uff0c\u4fee\u6539\u7684\u65f6\u5019\u52a0\u4e0a\u8fd9\u4e2a\u503c\u5373\u53ef\u3002\u603b\u4f53\u590d\u6742\u5ea6$O(n\\log^2 n)$\n\nCODE\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<vector>\n#include<utility>\n#define RI register int\n#define CI const int&\n#define Tp template <typename T>\nusing namespace std;\ntypedef pair <int,int> pi;\nconst int N=50005,mod=998244353;\nstruct edge\n{\n\tint to,nxt;\n}e[N]; int head[N],n,q,k,cnt,anc[N],dep[N],id[N],s[N],x,y,ans[N]; vector <pi> et[N];\nclass FileInputOutput\n{\n\tprivate:\n\t\tstatic const int S=1<<21;\n\t\t#define tc() (A==B&&(B=(A=Fin)+fread(Fin,1,S,stdin),A==B)?EOF:*A++)\n\t\t#define pc(ch) (Ftop<S?Fout[Ftop++]=ch:(fwrite(Fout,1,S,stdout),Fout[(Ftop=0)++]=ch))\n\t\tchar Fin[S],Fout[S],*A,*B; int Ftop,pt[15];\n\tpublic:\n\t\tTp inline void read(T& x)\n\t\t{\n\t\t\tx=0; char ch; while (!isdigit(ch=tc()));\n\t\t\twhile (x=(x<<3)+(x<<1)+(ch&15),isdigit(ch=tc()));\n\t\t}\n\t\tTp inline void write(T x)\n\t\t{\n\t\t\tif (!x) return (void)(pc('0'),pc('\\n')); RI ptop=0;\n\t\t\twhile (x) pt[++ptop]=x%10,x/=10; while (ptop) pc(pt[ptop--]+48); pc('\\n');\n\t\t}\n\t\tinline void Fend(void)\n\t\t{\n\t\t\tfwrite(Fout,1,Ftop,stdout);\n\t\t}\n\t\t#undef tc\n\t\t#undef pc\n}F;\ninline void inc(int& x,CI y)\n{\n\tif ((x+=y)>=mod) x-=mod;\n}\ninline int sum(CI a,CI b)\n{\n\tint t=a+b; return t>=mod?t-mod:t;\n}\ninline int sub(CI a,CI b)\n{\n\tint t=a-b; return t<0?t+mod:t;\n}\ninline int quick_pow(int x,int p,int mul=1)\n{\n\tfor (;p;p>>=1,x=1LL*x*x%mod) if (p&1) mul=1LL*mul*x%mod; return mul;\n}\ninline void addedge(CI x,CI y)\n{\n\te[++cnt]=(edge){y,head[x]}; head[x]=cnt;\n}\nclass Segment_Tree\n{\n\tprivate:\n\t\tstruct segment\n\t\t{\n\t\t\tint sum,val,tag;\n\t\t}node[N<<2];\n\t\t#define ls now<<1\n\t\t#define rs now<<1|1\n\t\t#define S(x) node[x].sum\n\t\t#define V(x) node[x].val\n\t\t#define T(x) node[x].tag\n\t\tinline void pushdown(CI now)\n\t\t{\n\t\t\tif (!T(now)) return; T(ls)+=T(now); inc(S(ls),1LL*T(now)*V(ls)%mod);\n\t\t\tT(rs)+=T(now); inc(S(rs),1LL*T(now)*V(rs)%mod); T(now)=0;\n\t\t}\n\tpublic:\n\t\t#define TN CI now=1,CI l=1,CI r=n\n\t\t#define LS ls,l,mid\n\t\t#define RS rs,mid+1,r\n\t\tinline void build(TN)\n\t\t{\n\t\t\tif (l==r) return (void)(V(now)=sub(quick_pow(dep[s[l]]+1,k),quick_pow(dep[s[l]],k)));\n\t\t\tint mid=l+r>>1; build(LS); build(RS); V(now)=sum(V(ls),V(rs));\n\t\t}\n\t\tinline int query(CI beg,CI end,TN)\n\t\t{\n\t\t\tif (beg<=l&&r<=end) return S(now); int mid=l+r>>1,ret=0; pushdown(now);\n\t\t\tif (beg<=mid) inc(ret,query(beg,end,LS)); if (end>mid) inc(ret,query(beg,end,RS)); return ret;\n\t\t}\n\t\tinline void modify(CI beg,CI end,TN)\n\t\t{\n\t\t\tif (beg<=l&&r<=end) return ++T(now),inc(S(now),V(now)); int mid=l+r>>1; pushdown(now);\n\t\t\tif (beg<=mid) modify(beg,end,LS); if (end>mid) modify(beg,end,RS); S(now)=sum(S(ls),S(rs));\n\t\t}\n\t\t#undef ls\n\t\t#undef rs\n\t\t#undef S\n\t\t#undef V\n\t\t#undef T\n\t\t#undef TN\n\t\t#undef LS\n\t\t#undef RS\n}SEG;\nclass Heavy_Light_Division\n{\n\tprivate:\n\t\tint son[N],top[N],size[N],idx;\n\tpublic:\n\t\t#define to e[i].to\n\t\tinline void DFS1(CI now)\n\t\t{\n\t\t\tsize[now]=1; for (RI i=head[now];i;i=e[i].nxt)\n\t\t\t{\n\t\t\t\tdep[to]=dep[now]+1; DFS1(to); size[now]+=size[to];\n\t\t\t\tif (size[to]>size[son[now]]) son[now]=to;\n\t\t\t}\n\t\t}\n\t\tinline void DFS2(CI now,CI topf=1)\n\t\t{\n\t\t\ts[id[now]=++idx]=now; top[now]=topf; if (son[now]) DFS2(son[now],topf);\n\t\t\tfor (RI i=head[now];i;i=e[i].nxt) if (to!=son[now]) DFS2(to,to);\n\t\t}\n\t\tinline int query(int nw,int ret=0)\n\t\t{\n\t\t\twhile (top[nw]) inc(ret,SEG.query(id[top[nw]],id[nw])),nw=anc[top[nw]]; return ret;\n\t\t}\n\t\tinline void modify(int nw)\n\t\t{\n\t\t\twhile (top[nw]) SEG.modify(id[top[nw]],id[nw]),nw=anc[top[nw]];\n\t\t}\n\t\t#undef to\n}T;\nint main()\n{\n\t//freopen(\"CODE.in\",\"r\",stdin); freopen(\"CODE.out\",\"w\",stdout);\n\tRI i; for (F.read(n),F.read(q),F.read(k),i=2;i<=n;++i)\n\tF.read(anc[i]),addedge(anc[i],i); for (i=1;i<=q;++i)\n\tF.read(x),F.read(y),et[x].push_back(make_pair(y,i));\n\tfor (T.DFS1(1),T.DFS2(1),SEG.build(),i=1;i<=n;++i)\n\t{\n\t\tT.modify(i); for (pi it:et[i]) ans[it.second]=T.query(it.first);\n\t}\n\tfor (i=1;i<=q;++i) F.write(ans[i]); return F.Fend(),0;\n}\n```\n\n",
        "postTime": 1559538793,
        "uid": 41698,
        "name": "hl666",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5305 \u3010[GXOI/GZOI2019]\u65e7\u8bcd\u3011"
    },
    {
        "content": "## \u4f20\u9001\u95e8\n[Loj](https://loj.ac/problem/3088)\n\n## Solution\n\u6211\u4eec\u5148\u60f3\u4e00\u4e0b\u7b54\u6848\u600e\u4e48\u8f6c\u6362(\u5982\u679c$k=1$)?\n\u628a$y$\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u6253\u4e0a\u6807\u8bb0,\u7b54\u6848\u5c31\u662f$i \\leq x$\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u7684\u6807\u8bb0\u603b\u6570.\n\u8fd9\u4e2a\u53c8\u53ef\u4ee5\u53d8\u6210:\n$i \\leq x$\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u6253\u6807\u8bb0,\u7136\u540e$y$\u5230\u6839\u8282\u70b9\u7684\u6807\u8bb0\u603b\u6570.\n\u7136\u540e\u5982\u679c$k!=1$,\u4e5f\u53ef\u4ee5\u5dee\u5206\u5c31\u597d\u4e86.\n\n## \u4ee3\u7801\u5b9e\u73b0\n```cpp\n/*\n  mail: mleautomaton@foxmail.com\n  author: MLEAutoMaton\n  This Code is made by MLEAutoMaton\n*/\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#include<algorithm>\n#include<queue>\n#include<set>\n#include<map>\n#include<iostream>\nusing namespace std;\n#define ll long long\n#define re register\n#define file(a) freopen(a\".in\",\"r\",stdin);freopen(a\".out\",\"w\",stdout)\ninline int gi()\n{\n\tint f=1,sum=0;char ch=getchar();\n\twhile(ch>'9' || ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0' && ch<='9'){sum=(sum<<3)+(sum<<1)+ch-'0';ch=getchar();}\n\treturn f*sum;\n}\nconst int N=50010,Mod=998244353;\nstruct node{int to,nxt;}e[N<<1];\nstruct ques{int x,y,id;}q[N];\nint front[N],cnt,dep[N],fa[N],siz[N],son[N],dfn[N],top[N],Time,n,Q,k,id[N],sum[N];\nint qpow(int a,int b){int ret=1;while(b){if(b&1)ret=1ll*ret*a%Mod;a=1ll*a*a%Mod;b>>=1;}return ret;}\nvoid Add(int u,int v){e[++cnt]=(node){v,front[u]};front[u]=cnt;}\nbool cmp(ques a,ques b){return a.x<b.x;}\nvoid dfs1(int u,int ff)\n{\n\tdep[u]=dep[ff]+1;siz[u]=1;\n\tfor(int i=front[u];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].to;\n\t\tdfs1(v,u);\n\t\tsiz[u]+=siz[v];\n\t\tif(siz[son[u]]<siz[v])son[u]=v;\n\t}\n}\nvoid dfs2(int u,int tp)\n{\n\tdfn[u]=++Time;top[u]=tp;id[dfn[u]]=u;\n\tif(!son[u])return;\n\tdfs2(son[u],tp);\n\tfor(int i=front[u];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].to;if(v==son[u])continue;\n\t\tdfs2(v,v);\n\t}\n}\nstruct Tree{int sum,atag;}t[N<<2];\nvoid pushup(int x)\n{\n\tt[x].sum=(t[x<<1].sum+t[x<<1|1].sum)%Mod;\n}\nvoid pushdown(int x,int l,int r)\n{\n\tif(t[x].atag)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tt[x<<1].sum=(t[x<<1].sum+1ll*t[x].atag*((sum[mid]-sum[l-1]+Mod)%Mod)%Mod)%Mod;\n\t\tt[x<<1|1].sum=(t[x<<1|1].sum+1ll*t[x].atag*((sum[r]-sum[mid]+Mod)%Mod)%Mod)%Mod;\n\t\tt[x<<1].atag+=t[x].atag;t[x<<1|1].atag+=t[x].atag;\n\t\tt[x].atag=0;\n\t}\n}\nvoid modify(int o,int l,int r,int posl,int posr)\n{\n\tif(posl<=l && r<=posr)\n\t{\n\t\tt[o].sum=((t[o].sum+sum[r])%Mod-sum[l-1]+Mod)%Mod;\n\t\tt[o].atag++;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;pushdown(o,l,r);\n\tif(posl<=mid)modify(o<<1,l,mid,posl,posr);\n\tif(mid<posr)modify(o<<1|1,mid+1,r,posl,posr);\n\tpushup(o);\n}\nint query(int o,int l,int r,int posl,int posr)\n{\n\tif(posl<=l && r<=posr)return t[o].sum;\n\tint mid=(l+r)>>1,s=0;pushdown(o,l,r);\n\tif(posl<=mid)s=query(o<<1,l,mid,posl,posr);\n\tif(mid<posr)s=(s+query(o<<1|1,mid+1,r,posl,posr))%Mod;\n\treturn s;\n}\nvoid Modify(int x)\n{\n\twhile(x)\n\t{\n\t\tmodify(1,1,n,dfn[top[x]],dfn[x]);\n\t\tx=fa[top[x]];\n\t}\n}\nint Query(int x)\n{\n\tint ret=0;\n\twhile(x)\n\t{\n\t\tret=(ret+query(1,1,n,dfn[top[x]],dfn[x]))%Mod;\n\t\tx=fa[top[x]];\n\t}\n\treturn ret;\n}\nint ans[N];\nint main()\n{\n\tfreopen(\"poetry.in\",\"r\",stdin);\n\tfreopen(\"poetry.out\",\"w\",stdout);\n\tn=gi();Q=gi();k=gi();\n\tfor(int i=2;i<=n;i++)fa[i]=gi(),Add(fa[i],i);\n\tfor(int i=1;i<=Q;i++)q[i].x=gi(),q[i].y=gi(),q[i].id=i;\n\tsort(q+1,q+Q+1,cmp);\n\tdfs1(1,1);dfs2(1,1);\n\tfor(int i=1;i<=n;i++)sum[i]=(sum[i-1]+(qpow(dep[id[i]],k)-qpow(dep[id[i]]-1,k)+Mod)%Mod)%Mod;\n\tint pos=1;\n\tfor(int i=1;i<=Q;i++)\n\t{\n\t\twhile(pos<=q[i].x)\n\t\t{\n\t\t\tModify(pos);pos++;\n\t\t}\n\t\tans[q[i].id]=Query(q[i].y);\n\t}\n\tfor(int i=1;i<=Q;i++)printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1556615931,
        "uid": 51343,
        "name": "MLEAutoMaton",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5305 \u3010[GXOI/GZOI2019]\u65e7\u8bcd\u3011"
    },
    {
        "content": "\u6765\u4e2a\u7a0d\u5fae\u6709\u70b9\u4e0d\u4e00\u6837\u7684\n\n\u5176\u5b9e\u5927\u4f53\u601d\u8def\u5927\u5bb6\u90fd\u5df2\u7ecf\u8bb2\u5f97\u6bd4\u8f83\u5230\u4f4d\u4e86\n\n\u5c31\u662f\u628a[LNOI2014]LCA\u90a3\u9898\u6539\u4e00\u6539\uff0c\u628a\u52a0$1$\u6539\u6210\u52a0$k$\u6b21\u5dee\u5206\n\n\u53ef\u662f\u8be2\u95ee\u79bb\u7ebf\u4ec0\u4e48\u7684\u6700\u8ba8\u538c\u4e86\n\n\u6211\u8fd9\u79cd\u61d2\u4eba\u5f53\u7136\u662f\u5199\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u4e86\n\n\u7a7a\u95f4\u8981\u5f00\u5927\u4e00\u70b9\uff0c\u6ce8\u610f\u6807\u8bb0\u4e0b\u4f20\u7684\u65f6\u5019\u4e5f\u8981\u590d\u5236\u8282\u70b9\n\n\u6309\u53ef\u6301\u4e45\u5316\u7684\u65b9\u6cd5\u5199\u5c31\u884c\u4e86\n\n\u6240\u4ee5\u5176\u5b9e\u8fd9\u9898\u5b8c\u5168\u53ef\u4ee5\u5f3a\u5236\u5728\u7ebf\u561b\uff01\n\n```cpp\n#include <cctype>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n\ntemplate <typename T> inline void read(T& x) {\n    int f = 0, c = getchar(); x = 0;\n    while (!isdigit(c)) f |= c == '-', c = getchar();\n    while (isdigit(c)) x = x * 10 + c - 48, c = getchar();\n    if (f) x = -x;\n}\ntemplate <typename T, typename... Args>\ninline void read(T& x, Args&... args) {\n    read(x); read(args...); \n}\ntemplate <typename T> void write(T x) {\n    if (x < 0) x = -x, putchar('-');\n    if (x > 9) write(x / 10);\n    putchar(x % 10 + 48);\n}\ntemplate <typename T> inline void writeln(T x) { write(x); puts(\"\"); }\ntemplate <typename T> inline bool chkmin(T& x, const T& y) { return y < x ? (x = y, true) : false; }\ntemplate <typename T> inline bool chkmax(T& x, const T& y) { return x < y ? (x = y, true) : false; }\n\ntypedef long long LL;\n\nconst LL mod = 998244353;\nconst int maxn = 5e4 + 207;\n\ninline LL qpow(LL x, LL k) {\n\tLL s = 1;\n\tfor (; k; x = x * x % mod, k >>= 1)\n\t\tif (k & 1) s = s * x % mod;\n\treturn s;\n}\n\nint v[maxn], head[maxn], next[maxn], etot;\nint dep[maxn], top[maxn], fa[maxn], size[maxn], son[maxn], dfn[maxn], arcdfn[maxn], xys;\nLL s[maxn], a[maxn];\nint n, q, K;\n\ninline void ae(int x, int y) {\n\tv[++etot] = y; next[etot] = head[x]; head[x] = etot;\n}\n\nvoid dfs(int x) {\n\tdep[x] = dep[fa[x]] + 1; size[x] = 1;\n\tfor (int i = head[x]; i; i = next[i]) {\n\t\tfa[v[i]] = x;\n\t\tdfs(v[i]);\n\t\tsize[x] += size[v[i]];\n\t\tif (size[v[i]] >= size[son[x]]) son[x] = v[i];\n\t}\n}\nvoid dfs(int x, int t) {\n\ttop[x] = t; dfn[x] = ++xys; arcdfn[xys] = x;\n\tif (son[x]) dfs(son[x], t);\n\tfor (int i = head[x]; i; i = next[i])\n\t\tif (v[i] != son[x]) dfs(v[i], v[i]);\n}\n\nstruct Node {\n\tint lc, rc;\n\tLL sum, add;\n\tNode() : lc(0), rc(0), sum(0), add(0) {}\n\t\n};\nNode T[maxn << 7];\nint root[maxn], tot;\n\ninline void update(int o) {\n\tT[o].sum = (T[T[o].lc].sum + T[T[o].rc].sum) % mod;\n}\ninline void pushdown(int o, int l, int mid, int r) {\n\tif (T[o].add) {\n\t\tLL &d = T[o].add;\n\t\tT[++tot] = T[T[o].lc];\n\t\tT[o].lc = tot;\n\t\tT[++tot] = T[T[o].rc];\n\t\tT[o].rc = tot;\n\t\tT[T[o].lc].sum = (T[T[o].lc].sum + d * (s[mid] - s[l - 1] + mod) % mod) % mod;\n\t\tT[T[o].rc].sum = (T[T[o].rc].sum + d * (s[r] - s[mid] + mod) % mod) % mod;\n\t\tT[T[o].lc].add += d;\n\t\tT[T[o].rc].add += d;\n\t\td = 0;\n\t}\n}\nvoid modify(int &o, int lb, int rb, int l, int r) {\n\tif (l > rb || r < lb) return;\n\tT[++tot] = T[o]; o = tot;\n\tif (l <= lb && r >= rb) {\n\t\tT[o].sum = (T[o].sum + s[rb] - s[lb - 1] + mod) % mod;\n\t\t++T[o].add;\n\t\treturn;\n\t}\n\tint mid = (lb + rb) >> 1;\n\tpushdown(o, lb, mid, rb);\n\tmodify(T[o].lc, lb, mid, l, r);\n\tmodify(T[o].rc, mid + 1, rb, l, r);\n\tupdate(o);\n}\nLL query(int o, int lb, int rb, int l, int r) {\n\tif (!o || l > rb || r < lb) return 0;\n\tif (l <= lb && r >= rb) return T[o].sum;\n\tint mid = (lb + rb) >> 1;\n\tpushdown(o, lb, mid, rb);\n\treturn (query(T[o].lc, lb, mid, l, r) + query(T[o].rc, mid + 1, rb, l, r)) % mod;\n}\n\ninline void add(int x, int i) {\n\tfor (; x; x = fa[top[x]])\n\t\tmodify(root[i], 1, n, dfn[top[x]], dfn[x]);\n}\ninline LL query(int x, int i) {\n\tLL ans = 0;\n\tfor (; x; x = fa[top[x]])\n\t\tans = (ans + query(root[i], 1, n, dfn[top[x]], dfn[x])) % mod;\n\treturn ans;\n}\n\nint main() {\n\tread(n, q, K);\n\tfor (int i = 2, f; i <= n; ++i)\n\t\tread(f), ae(f, i);\n\tdfs(1); dfs(1, 1);\n\tfor (int i = 1; i <= n; ++i)\n\t\ta[i] = (qpow(dep[i], K) - qpow(dep[i] - 1, K) + mod) % mod;\n\tfor (int i = 1; i <= n; ++i)\n\t\ts[i] = (s[i - 1] + a[arcdfn[i]]) % mod;\n\tfor (int i = 1; i <= n; ++i) {\n\t\troot[i] = root[i - 1];\n\t\tadd(i, i);\n\t}\n\twhile (q--) {\n\t\tint x, y; read(x, y);\n\t\twriteln(query(y, x));\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1555926405,
        "uid": 72071,
        "name": "GKxx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5305 \u3010[GXOI/GZOI2019]\u65e7\u8bcd\u3011"
    },
    {
        "content": "\u548c[\u8fd9\u9053\u9898](https://www.luogu.org/problemnew/show/P4211)\u7b80\u76f4\u4e00\u6a21\u4e00\u6837\u3002\n\n\u5f53 $k=1$ \u65f6\uff0c\u95ee\u9898\u4e3a\u7ed9\u5173\u952e\u70b9\u5230\u6839\u8def\u5f84\u4e0a\u6bcf\u4e2a\u70b9\u52a0\u4e0a\u7b54\u6848\u7684\u5dee\u5206\u503c $1$\uff0c\u7136\u540e\u8be2\u95ee\u524d $x$ \u4e2a\u70b9\u5230\u6839\u6743\u503c\u4e4b\u548c\u7684\u548c\u3002\u8fd9\u7b49\u4ef7\u4e8e\u7ed9\u524d $x$ \u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u6bcf\u4e2a\u70b9\u52a0 $1$ \uff0c\u7136\u540e\u8be2\u95ee\u67e5\u8be2\u70b9\u5230\u6839\u8def\u5f84\u4e4b\u548c\u3002\n\n\u6211\u4eec\u5c06\u8be2\u95ee\u79bb\u7ebf\uff0c\u7136\u540e\u6309\u7167\u7f16\u53f7\u4ece\u5c0f\u5230\u5927\u63d2\u5165\u6811\u4e2d\uff0c\u6bcf\u6b21\u7ed9\u63d2\u5165\u70b9\u5230\u6839\u8282\u70b9\u52a0\u4e0a\u548c\u4e0a\u4e00\u4e2a\u70b9\u7b54\u6848\u7684\u5dee\u5206\u503c $1$ \uff0c\u7136\u540e\u8be2\u95ee\u8be2\u95ee\u70b9\u5230\u6839\u7684\u8def\u5f84\u6743\u503c\u548c\u5373\u53ef\u3002\n\n\u4f46\u662f\u8fd9\u6b21\u8981\u6c42\u7684\u662f $dep(lca)^k$ \uff0c\u6211\u4eec\u5c06\u5dee\u5206\u503c\u53d8\u6210 $dep_i^k-(dep_i-1)^k$ \u5373\u53ef\u3002\u8fd9\u6837\u4fee\u6539\u5c31\u53d8\u6210\u4e86\u94fe\u4e0a\u52a0\u4e0d\u540c\u7684\u56fa\u5b9a\u503c\u3002\u4ecd\u7136\u53ef\u4ee5\u7528\u6811\u5256\u7ebf\u6bb5\u6811\u5b9e\u73b0\u3002\n\n\u590d\u6742\u5ea6 $O((n+q)\\log^2 n)$ \u3002\n\n\u4ee3\u7801:\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cctype>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<cassert>\n#include<queue>\n#include<iostream>\n#define Rep(i,a,b) for(register int i=(a);i<=(b);++i)\n#define Repe(i,a,b) for(register int i=(a);i>=(b);--i)\n#define rep(i,a,b) for(register int i=(a);i<(b);++i)\n#define pb push_back\n#define mx(a,b) (a>b?a:b)\n#define mn(a,b) (a<b?a:b)\ntypedef unsigned long long uint64;\ntypedef unsigned int uint32;\ntypedef long long ll;\nusing namespace std;\n\nnamespace IO\n{\n\tconst uint32 Buffsize=1<<15,Output=1<<24;\n\tstatic char Ch[Buffsize],*S=Ch,*T=Ch;\n\tinline char getc()\n\t{\n\t\treturn((S==T)&&(T=(S=Ch)+fread(Ch,1,Buffsize,stdin),S==T)?0:*S++);\n\t}\n\tstatic char Out[Output],*nowps=Out;\n\t\n\tinline void flush(){fwrite(Out,1,nowps-Out,stdout);nowps=Out;}\n\n\ttemplate<typename T>inline void read(T&x)\n\t{\n\t\tx=0;static char ch;T f=1;\n\t\tfor(ch=getc();!isdigit(ch);ch=getc())if(ch=='-')f=-1;\n\t\tfor(;isdigit(ch);ch=getc())x=x*10+(ch^48);\n\t\tx*=f;\n\t}\n\n\ttemplate<typename T>inline void write(T x,char ch='\\n')\n\t{\n\t\tif(!x)*nowps++='0';\n\t\tif(x<0)*nowps++='-',x=-x;\n\t\tstatic uint32 sta[111],tp;\n\t\tfor(tp=0;x;x/=10)sta[++tp]=x%10;\n\t\tfor(;tp;*nowps++=sta[tp--]^48);\n\t\t*nowps++=ch;\n\t}\n}\nusing namespace IO;\n\nvoid file()\n{\n#ifndef ONLINE_JUDGE\n\tFILE*DSD=freopen(\"water.in\",\"r\",stdin);\n\tFILE*CSC=freopen(\"water.out\",\"w\",stdout);\n#endif\n}\n\nconst int MAXN=5e4+7,mod=998244353;\n\nstatic int n,Q,k,fa[MAXN];\n\nvector<int>ed[MAXN];\n\nstatic struct quer\n{\n\tint x,y,id;\n\n\tbool operator<(const quer&a)const{return x<a.x;}\n}q[MAXN];\n\ninline void init()\n{\n\tread(n),read(Q),read(k),k%=mod-1;\n\tRep(i,2,n)read(fa[i]),ed[fa[i]].pb(i);\n\tRep(i,1,Q)read(q[i].x),read(q[i].y),q[i].id=i;\n\tsort(q+1,q+Q+1);\n}\n\nstatic int dep[MAXN],son[MAXN],sz[MAXN],dfs_clock,dfn[MAXN],top[MAXN],ri[MAXN];\n\nvoid dfs1(int u)\n{\n\tdep[u]=dep[fa[u]]+1,sz[u]=1;\n\tfor(int v:ed[u])\n\t{\n\t\tdfs1(v),sz[u]+=sz[v];\n\t\tif(sz[son[u]]<sz[v])son[u]=v;\n\t}\n}\n\nvoid dfs2(int u,int tp)\n{\n\tri[dfn[u]=++dfs_clock]=u,top[u]=tp;\n\tif(son[u])dfs2(son[u],tp);\n\telse return;\n\tfor(int v:ed[u])if(v^son[u])dfs2(v,v);\n}\n\nstatic int sm[MAXN];\n\ninline int power(int u,int v)\n{\n\tregister int sm=1;\n\tfor(;v;v>>=1,u=(ll)u*u%mod)if(v&1)\n\t\tsm=(ll)sm*u%mod;\n\treturn sm;\n}\n\ninline int ad(int u,int v){return(u+=v)>=mod?u-mod:u;}\n\nnamespace Segment_Tree\n{\n\tstatic int p[MAXN<<2],laz[MAXN<<2];\n\n\tinline void pushdown(int h,int l,int r)\n\t{\n\t\tif(laz[h])\n\t\t{\n\t\t\tint md=(l+r)>>1;\n\t\t\tp[h<<1]=(p[h<<1]+(ll)laz[h]*(sm[md]-sm[l-1]+mod))%mod;\n\t\t\tp[h<<1|1]=(p[h<<1|1]+(ll)laz[h]*(sm[r]-sm[md]+mod))%mod;\n\t\t\tlaz[h<<1]+=laz[h],laz[h<<1|1]+=laz[h];\n\t\t\tlaz[h]=0;\n\t\t}\n\t}\n\n\tvoid mf(int h,int l,int r,int x,int y)\n\t{\n\t\tif(l>=x&&r<=y)\n\t\t{\n\t\t\tp[h]=((ll)p[h]+sm[r]-sm[l-1]+mod)%mod;\n\t\t\t++laz[h];\n\t\t\treturn;\n\t\t}\n\t\tint md=(l+r)>>1;pushdown(h,l,r);\n\t\tif(x<=md)mf(h<<1,l,md,x,y);\n\t\tif(y>md)mf(h<<1|1,md+1,r,x,y);\n\t\tp[h]=ad(p[h<<1],p[h<<1|1]);\n\t}\n\n\tint qr(int h,int l,int r,int x,int y)\n\t{\n\t\tif(l>=x&&r<=y)return p[h];\n\t\tint md=(l+r)>>1,s=0;pushdown(h,l,r);\n\t\tif(x<=md)s=qr(h<<1,l,md,x,y);\n\t\tif(y>md)s=ad(s,qr(h<<1|1,md+1,r,x,y));\n\t\treturn s;\n\t}\n}\nusing Segment_Tree::mf;\nusing Segment_Tree::qr;\n\ninline void change(int u)\n{\n\twhile(u)\n\t{\n\t\tmf(1,1,n,dfn[top[u]],dfn[u]);\n\t\tu=fa[top[u]];\n\t}\n}\n\ninline int query(int u)\n{\n\tint sm=0;\n\twhile(u)\n\t{\n\t\tsm=ad(sm,qr(1,1,n,dfn[top[u]],dfn[u]));\n\t\tu=fa[top[u]];\n\t}\n\treturn sm;\n}\n\nstatic int ans[MAXN];\n\ninline void solve()\n{\n\tdfs1(1),dfs2(1,1);\n\tRep(i,1,n)sm[i]=\n((ll)sm[i-1]+power(dep[ri[i]],k)-power(dep[ri[i]]-1,k)+mod)%mod;\n\tint cr=1;\n\tRep(i,1,Q)\n\t{\n\t\twhile(cr<=q[i].x)change(cr++);\n\t\tans[q[i].id]=query(q[i].y);\n\t}\n\tRep(i,1,Q)write(ans[i]);\n\tflush();\n}\n\nint main()\n{\n\tfile();\n\tinit();\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1555415016,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5305 \u3010[GXOI/GZOI2019]\u65e7\u8bcd\u3011"
    },
    {
        "content": "$GXOI/GZOI2019$ \u5c45\u7136\u51fa\u539f\u9898\uff1f\uff1f\uff1f\n\n[\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P4211)\n\n### \u6811\u4e0a\u5dee\u5206 + \u6811\u5256 + \u7ebf\u6bb5\u6811\n\n\u6211\u4eec\u628a\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u5dee\u5206\u6210 $dep_i^k-(dep_i-1)^k$\uff0c\u7136\u540e\u5c31\u6109\u5feb\u533a\u95f4\u52a0+\u533a\u95f4\u548c\u4e86\u3002\n\n$Code\\ Below:$\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int maxn=50000+10;\nconst int mod=998244353;\nint n,m,k,a[maxn];ll sumE[maxn],sum[maxn<<2],add[maxn<<2],ans[maxn];\nint top[maxn],dep[maxn],siz[maxn],son[maxn],fa[maxn],id[maxn],mp[maxn],tim;\nint head[maxn],to[maxn<<1],nxt[maxn<<1],tot;\nvector<pair<int,int> > q[maxn];\n\ninline int read()\n{\n\tregister int x=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n\twhile(isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n\treturn (f==1)?x:-x;\n}\n\nvoid print(ll x)\n{\n\tif(x<0){putchar('-');x=-x;}\n\tif(x>9) print(x/10);\n\tputchar(x%10+'0');\n}\n\ninline ll fpow(ll a,ll b)\n{\n\tll ret=1;\n\tfor(;b;b>>=1,a=a*a%mod)\n\t\tif(b&1) ret=ret*a%mod;\n\treturn ret;\n}\n\ninline void addedge(int x,int y)\n{\n\tto[++tot]=y;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n}\n\nvoid dfs1(int x,int f)\n{\n\tsiz[x]=1;fa[x]=f;dep[x]=dep[f]+1;\n\tint maxson=-1;\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint y=to[i];\n\t\tif(y==f) continue;\n\t\tdfs1(y,x);siz[x]+=siz[y];\n\t\tif(siz[y]>maxson) maxson=siz[y],son[x]=y;\n\t}\n}\n\nvoid dfs2(int x,int topf)\n{\n\tid[x]=++tim;mp[tim]=x;top[x]=topf;\n\tif(son[x]) dfs2(son[x],topf);\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint y=to[i];\n\t\tif(y==fa[x]||y==son[x]) continue;\n\t\tdfs2(y,y);\n\t}\n}\n\n#define lson (rt<<1)\n#define rson (rt<<1|1)\n\ninline void pushup(int rt)\n{\n\tsum[rt]=(sum[lson]+sum[rson])%mod;\n}\n\ninline void pushdown(int rt,int l,int r)\n{\n\tif(add[rt])\n\t{\n\t\tint mid=(l+r)>>1;\n\t\t(sum[lson]+=add[rt]*(sumE[mid]-sumE[l-1]))%=mod;\n\t\t(sum[rson]+=add[rt]*(sumE[r]-sumE[mid]))%=mod;\n\t\tadd[lson]+=add[rt];add[rson]+=add[rt];add[rt]=0;\n\t}\n}\n\nvoid update(int L,int R,int l,int r,int rt)\n{\n\tif(L <= l && r <= R)\n\t{\n\t\t(sum[rt]+=sumE[r]-sumE[l-1])%=mod;\n\t\tadd[rt]++;\n\t\treturn ;\n\t}\n\tpushdown(rt,l,r);\n\tint mid=(l+r)>>1;\n\tif(L <= mid) update(L,R,l,mid,lson);\n\tif(R > mid) update(L,R,mid+1,r,rson);\n\tpushup(rt);\n}\n\nll query(int L,int R,int l,int r,int rt)\n{\n\tif(L <= l && r <= R) return sum[rt];\n\tpushdown(rt,l,r);\n\tint mid=(l+r)>>1;ll ans=0;\n\tif(L <= mid) (ans+=query(L,R,l,mid,lson))%=mod;\n\tif(R > mid) (ans+=query(L,R,mid+1,r,rson))%=mod;\n\treturn ans;\n}\n\ninline void modify(int x)\n{\n\tfor(;x;x=fa[top[x]]) update(id[top[x]],id[x],1,n,1);\n}\n\ninline ll ask(int x)\n{\n\tll ans=0;\n\tfor(;x;x=fa[top[x]]) (ans+=query(id[top[x]],id[x],1,n,1))%=mod;\n\treturn ans;\n}\n\nint main()\n{\n\tn=read(),m=read(),k=read();\n\tfor(int i=2;i<=n;i++) fa[i]=read(),addedge(fa[i],i),addedge(i,fa[i]);\n\tdfs1(1,0);dfs2(1,1);\n\tfor(int i=1;i<=n;i++) a[i]=(fpow(dep[i],k)-fpow(dep[i]-1,k))%mod;\n\tfor(int i=1;i<=n;i++) sumE[i]=(sumE[i-1]+a[mp[i]])%mod;\n\tint x,y;\n\tfor(int i=1;i<=m;i++) x=read(),y=read(),q[x].push_back(make_pair(y,i));\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tmodify(i);\n\t\tfor(int j=0,k=q[i].size();j<k;j++) ans[q[i][j].second]=ask(q[i][j].first);\n\t}\n\tfor(int i=1;i<=m;i++) print((ans[i]+mod)%mod),putchar('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1555416113,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5305 \u3010[GXOI/GZOI2019]\u65e7\u8bcd\u3011"
    }
]