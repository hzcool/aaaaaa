[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n> \u6709\u4e00\u4e2a$n \\times m$\u7684\u77e9\u9635\uff0c\u5bf9\u4e8e\u7b2c$i$\u884c\uff0c\u6bcf\u6b21**\u53d6\u8d70**\u8fb9\u7f18\u7684\u503c$A_{i,j}$\uff0c\u589e\u52a0\u8fd9\u4e00\u884c\u7684\u5f97\u5206$x$~~(\u81ea\u884c\u770b\u9898\u76ee\u89c4\u5219)~~\uff0c\u6c42$n$\u884c\u7684\u6700\u5927\u5f97\u5206\u603b\u548c\u3002\n\n## \u5206\u6790\u4e00\u4e0b\n- \u6c42$n$\u884c\u6700\u5927\u5f97\u5206\u548c\uff0c\u6bcf\u4e00\u884c\u53d6\u6570\u53c8\u4e0d\u4f1a\u5f71\u54cd\u5230\u5176\u4ed6\u884c\uff0c\u90a3\u4e48\u53ea\u8981\u786e\u4fdd\u6bcf\u4e00\u884c\u5f97\u5206\u6700\u5927\uff0c\u7ba1\u597d\u81ea\u5bb6\u5b69\u5b50\u5c31\u884c\u4e86\u3002\uff08\u8fd9\u4e2a\u5728\u52a8\u89c4\u4e2d\u53eb**\u6700\u4f18\u5b50\u7ed3\u6784**\uff09\n- \u6bcf\u6b21\u53d6\u6570\u662f\u5728\u8fb9\u7f18\u53d6\uff0c\u90a3\u4e48\u6bcf\u6b21\u53d6\u6570\u5b8c\u5269\u4e0b\u6765\u7684\u5143\u7d20\u4e00\u5b9a\u662f\u5728\u4e00\u4e2a\u5b8c\u6574\u7684\u4e00\u4e2a\u533a\u95f4\u4e2d\uff0c\u53c8\u662f\u6c42\u6700\u4f18\u89e3\uff0c**\u533a\u95f4DP**\u5e94\u8fd0\u800c\u751f\u3002\n\n## DP\u6d41\u7a0b\n(\u6bcf\u6b21DP\u4ec5\u9488\u5bf9\u7b2c$T$\u884c)\n### \u72b6\u6001\n- \u6211\u4eec\u7528$f_{i,j}$\u8868\u793a\u533a\u95f4**\u53d8\u4e3a**$[i,j]$\u65f6\uff0c\u83b7\u5f97\u7684\u6700\u5927\u5206\u6570\u3002\n\n### \u8f6c\u79fb\n- \u5f53\u533a\u95f4\u53d8\u4e3a$[i,j]$\u65f6\uff0c\u4e0a\u4e00\u6b21\u53d6\u6570\u7684\u65f6\u5019\u533a\u95f4\u4e00\u5b9a\u662f$[i-1,j]$\u6216$[i,j+1]$\uff0c\u4ece\u8fd9\u4e24\u4e2a\u72b6\u6001\u8f6c\u79fb\u5373\u53ef\u3002\u5728\u7b2c$m-j+i-1$\u6b21(\u8fd9\u4e2a\u8bf7\u81ea\u884c\u6a21\u62df)\u53d6\u8d70\u4e86$A_{i-1,j}$\u6216$A_{i,j+1}$\u5373\uff1a$$f_{i,j}=max\\{f_{i-1,j}+A_{i-1,j} \\cdot 2^{m-j+i-1},f_{i,j+1}+A_{i,j+1} \\cdot 2^{m-j+i-1}\\}$$\n\n### \u7ec8\u503c\uff08\u7b54\u6848\uff09\n- \u554a\u8fd9\u4e2a\u7ec8\u503c\u8d85\u7ea7\u8ba8\u538c\uff0c\u72b6\u6001\u4e0d\u660e\u786e\u7684\u8bdd\u8fd8\u771f\u60f3\u4e0d\u51fa\u6765\u3002\n- \u56e0\u4e3a\u9898\u76ee\u4e2d\u8bf4\u8981\u53d6\u5b8c\uff0c\u4f46\u662f\u7a7a\u533a\u95f4\u662fDP\u4e0d\u51fa\u6765\u7684\uff0c\u7136\u540e\u5c31\u5f97\u624b\u52a8\u6a21\u62df\u6bcf\u4e2a\u957f\u5ea6\u4e3a$1$\u7684\u533a\u95f4\u3002\u5373\uff1a\n$$Ans=max_{i \\leq m}\\{f_{i,i}+A_{i,i} \\cdot 2^m\\}$$\n-----\n## \u4e00\u4e9b~~(\u8d85\u7ea7\u70e6\u7684)~~\u4e8b\u60c5\n- \u6211\u5c31\u4e0d\u8bf4\u4e3a\u4ec0\u4e48\u8981\u7528**\u9ad8\u7cbe\u5ea6**\u4e86$\\cdots$\n- \u554a\u9ad8\u7cbe\u5ea6\u597d\u70e6\u7684$\\cdots$\n- \u70e6\u5f52\u70e6\u6211\u53c8\u6709\u4ec0\u4e48\u529e\u6cd5\u5462\uff0c\u6211\u53c8\u4e0d\u4f1a$int128 \\cdots$\n\n#### \u603b\u7ed3\u4e00\u4e0b\u8981\u7528\u7684\u6240\u6709\u9ad8\u7cbe\u5ea6\n1. \u9ad8\u7cbe$+$\u9ad8\u7cbe\n\n2. \u9ad8\u7cbe$\\times$\u5355\u7cbe\n\n3. $max\\{$\u9ad8\u7cbe$,$\u9ad8\u7cbe$\\}$(\u624b\u52a8\u8c03\u76ae)\n\n#### \u597d\u4e86\u6211\u4e0d\u7ba1\u4f60\u4eec\u60f3\u7c98\u677f\u5b50\u5c31\u7c98\u677f\u5b50\u5427$\\cdots$\n*****\n## \u4ee3\u7801\u541b\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n\nusing namespace std;\n\nconst int MAXN = 85, Mod = 10000; //\u9ad8\u7cbe\u56db\u4f4d\u538b\u7f29\u5927\u6cd5\u597d \nint n, m;\nint ar[MAXN];\n\nstruct HP {\n\tint p[505], len;\n\tHP() {\n\t\tmemset(p, 0, sizeof p);\n\t\tlen = 0;\n\t} //\u8fd9\u662f\u6784\u9020\u51fd\u6570\uff0c\u7528\u4e8e\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u53d8\u91cf \n\tvoid print() {\n\t\tprintf(\"%d\", p[len]);  \n        for (int i = len - 1; i > 0; i--) {  \n            if (p[i] == 0) {\n\t\t\t\tprintf(\"0000\"); \n\t\t\t\tcontinue;\n\t\t\t}\n            for (int k = 10; k * p[i] < Mod; k *= 10) \n\t\t\t\tprintf(\"0\");\n            printf(\"%d\", p[i]);\n        }\n\t} //\u56db\u4f4d\u538b\u7f29\u7684\u8f93\u51fa \n} f[MAXN][MAXN], base[MAXN], ans;\n\nHP operator + (const HP &a, const HP &b) {\n\tHP c; c.len = max(a.len, b.len); int x = 0;\n\tfor (int i = 1; i <= c.len; i++) {\n\t\tc.p[i] = a.p[i] + b.p[i] + x;\n\t\tx = c.p[i] / Mod;\n\t\tc.p[i] %= Mod;\n\t}\n\tif (x > 0)\n\t\tc.p[++c.len] = x;\n\treturn c;\n} //\u9ad8\u7cbe+\u9ad8\u7cbe \n\nHP operator * (const HP &a, const int &b) {\n\tHP c; c.len = a.len; int x = 0;\n\tfor (int i = 1; i <= c.len; i++) {\n\t\tc.p[i] = a.p[i] * b + x;\n\t\tx = c.p[i] / Mod;\n\t\tc.p[i] %= Mod;\n\t}\n\twhile (x > 0)\n\t\tc.p[++c.len] = x % Mod, x /= Mod;\n\treturn c;\n} //\u9ad8\u7cbe*\u5355\u7cbe \n\nHP max(const HP &a, const HP &b) {\n\tif (a.len > b.len)\n\t\treturn a;\n\telse if (a.len < b.len)\n\t\treturn b;\n\tfor (int i = a.len; i > 0; i--)\n\t\tif (a.p[i] > b.p[i])\n\t\t\treturn a;\n\t\telse if (a.p[i] < b.p[i])\n\t\t\treturn b;\n\treturn a;\n} //\u6bd4\u8f83\u53d6\u6700\u5927\u503c \n\nvoid BaseTwo() {\n\tbase[0].p[1] = 1, base[0].len = 1;\n\tfor (int i = 1; i <= m + 2; i++){ //\u8fd9\u91cc\u662fm! m! m! \u6211TM\u5199\u6210n\u8c03\u4e86n\u5e74... \n\t\tbase[i] = base[i - 1] * 2;\n\t}\n} //\u9884\u5904\u7406\u51fa2\u7684\u5e42 \n\nint main(void) {\n\tscanf(\"%d%d\", &n, &m);\n\tBaseTwo();\n\twhile (n--) {\n\t\tmemset(f, 0, sizeof f);\n\t\tfor (int i = 1; i <= m; i++)\n\t\t\tscanf(\"%d\", &ar[i]);\n\t\tfor (int i = 1; i <= m; i++)\n\t\t\tfor (int j = m; j >= i; j--) { //\u56e0\u4e3a\u7ec8\u503c\u662f\u5c0f\u533a\u95f4\uff0cDP\u81ea\u7136\u5c31\u4ece\u5927\u533a\u95f4\u5f00\u59cb \n\t\t\t\tf[i][j] = max(f[i][j], f[i - 1][j] + base[m - j + i - 1] * ar[i - 1]); \n\t\t\t\tf[i][j] = max(f[i][j], f[i][j + 1] + base[m - j + i - 1] * ar[j + 1]);\n\t\t\t} //\u7528\u7ed3\u6784\u4f53\u91cd\u8f7d\u8fd0\u7b97\u7b26\u5199\u8d77\u6765\u6bd4\u8f83\u81ea\u7136 \n\t\tHP Max;\n\t\tfor (int i = 1; i <= m; i++)\n\t\t\tMax = max(Max, f[i][i] + base[m] * ar[i]);\n\t\tans = ans + Max; //\u8bb0\u5f55\u5230\u603b\u7b54\u6848\u4e2d \n\t}\n\tans.print(); //\u8f93\u51fa \n\treturn 0;\n}\n```",
        "postTime": 1532402367,
        "uid": 14908,
        "name": "Jack_Homes_Huang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "\u9996\u5148\u8fd9\u4e2a\u9898\u7684\u8f6c\u79fb\u65b9\u7a0b\u697c\u4e0b\u7684\u90fd\u8bf4\u8fc7\u4e86\uff0c\u5c31\u662f\u5728\u6bcf\u884c\u4e0a\u7684[i,j]\u533a\u95f4\u7684\u6700\u5927\u503c\n\n`dp[i][j]=max{dp[i+1][j]+2^(m-(j-i))\u00d7v[i],dp[i][j-1]+2^(m-(j-i))\u00d7v[j]}`\n\n\u4f46\u662f\u8fd9\u9898\u4f1a\u7206long long\uff0c\u5f97\u7528\u9ad8\u7cbe\uff0c\u4f46\u662f\u9ad8\u7cbe\u5f88\u6162\uff0c\u8fd9\u4e2a\u65b9\u7a0b\u53c8\u662fO(nm^2)\u7684\uff0c\u4e8e\u662f\u6211\u53d7\u5230\u8ba8\u8bba\u201c\u4e3a\u4ec0\u4e48int128\u4f1aCE\u201d\u7684\u542f\u53d1\uff0c\u81ea\u5df1\u624b\u5199\u4e86\u4e2a128\u4f4d\u7684\u6574\u6570\u8fd0\u7b97\uff0c\u4e00\u70b9\u5faa\u73af\u90fd\u6ca1\u7528\uff0c\u6bd4\u9ad8\u7cbe\u5feb\u591a\u4e86\uff0c\u4e3b\u8981\u5c31\u662f\u5404\u79cd\u9ad8\u4f4e\u4f4d\u7684\u64cd\u4f5c\u3002\u4e0d\u8fc7\u503c\u5f97\u4e00\u63d0\u7684\u5c31\u662f\u5728\u8f93\u51fa\u65f6\u80af\u5b9a\u8981\u6a2110\u966410\uff0c\u6211\u7528\u4e86\u8fd9\u6837\u4e00\u4e2a\u9664\u6cd5\u516c\u5f0f\uff1a\n\n\u8bbeA\u4e3a128\u4f4d\u6574\u6570\uff0cAH\u4e3a\u9ad864\u4f4d\uff0cAL\u4e3a\u4f4e64\u4f4d\uff0c\u5219\uff1a\n\n`A/n=((AH/n)<<64)|((((AH%n)<<64)+AL)/n)`\n\n`A%n=(((AH%n)<<64)+AL)%n`\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5546\u7684\u9ad8\u4f4d\u4e3aAH/n\uff0c\u4f4e\u4f4d\u5c31\u662fAH%n\u4e0eAL\u7ec4\u5408\u6210\u7684128\u4f4d\u6574\u6570\u9664\u4ee5n\u7684\u5546\uff08\u4f59\u6570\u5c31\u662fA%n\u4e86\uff09\uff0c\u8fd9\u4e2a\u5546\u80af\u5b9a\u4e0d\u4f1a\u720664\u4f4d\u3002\n\n\u5176\u4f59\u7684\u6d89\u53ca\u5230\u7684\u8fd0\u7b97\u5982\u4e0b\uff1a\n\n\u82e5b\u4e3aint\uff0c\u5219\uff1a\n\n`A\\*b=(AH\\*b)<<64+(AL\\*b)`\n\n\u82e5B\u4e3a128\u4f4d\uff0c\u5219\uff1a\n\n`A+B=(AH+BH)<<64+(AL+BL)`\n\n\u4f7f\u7528\u4ee5\u4e0a\u4e24\u4e2a\u516c\u5f0f\u7684\u65f6\u5019\u8981\u6ce8\u610f\u8fdb\u4f4d\u95ee\u9898\u3002\n\n\u4e8e\u662f\uff0c\u6709\u4e86128\u4f4d\u8fd0\u7b97\uff0c\u6211\u5c31\u7528\u8bb0\u641c\u89e3\u51b3\u4e86\u6b64\u9898\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n    #include<iostream>\n    #include<cstdio>\n    #include<stack>\n    #include<cstring>\n    using namespace std;\n    //\u4ece\u8fd9\u91cc\u5230100\u884c\u90fd\u662fint128\u7684\u8fd0\u7b97\u4ee3\u7801\n    typedef struct _tword{\n        unsigned long long rah;//\u9ad864\u4f4d\n        unsigned long long ral;//\u4f4e64\u4f4d\n        friend bool operator <(const _tword &a,const _tword &b){\n            if(a.rah<b.rah)return(1);\n            if(a.rah>b.rah)return(0);\n            return(a.ral<b.ral);\n        }\n    }tword;//\u8fd9\u4e2a\u7ed3\u6784\u4f53\u5c31\u662f128\u4f4d\u6574\u6570\u4e86\n    unsigned long long hbt=1;\n    unsigned long long man32;//0~31\u4f4d\u51681\n    unsigned long long man32h;//32~63\u4f4d\u51681\n    void add(tword a,tword b,tword &res){\n        unsigned long long al=a.ral&man32;\n        unsigned long long ah=(a.ral&man32h)>>32;\n        unsigned long long bl=b.ral&man32;\n        unsigned long long bh=(b.ral&man32h)>>32;\n        //\u56e0\u4e3a\u8fd9\u91cc\u9700\u8981\u5904\u7406\u8fdb\u4f4d\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u628a128\u4f4d\u62c6\u62104\u4e2a32\u4f4d\u5e76\u628a\u5b83\u4eec\u6269\u5145\u81f364\u4f4d\uff0c\u8fd9\u6837\u5c31\u80fd\u901a\u8fc7\u5bf9\u7ed3\u679c\u7684\u9ad832\u4f4d\u7684\u5904\u7406\u6765\u52a0\u4e0a\u8fdb\u4f4d\n        al+=bl;\n        ah=ah+bh+((al&man32h)>>32);\n        res.rah=a.rah+b.rah+((ah&man32h)>>32);\n        res.ral=((ah&man32)<<32)|(al&man32);\n    }//128\u4f4d\u52a0\u6cd5\n    void kuomul(unsigned long long a,unsigned long long b,tword &res){//\u8ba1\u7b9764\u4f4d\u00d764\u4f4d=128\u4f4d\n        unsigned long long al=a&man32;\n        unsigned long long ah=(a&man32h)>>32;\n        unsigned long long bl=b&man32;\n        unsigned long long bh=(b&man32h)>>32;\n        //ah\u3001al\u4e3aa\u7684\u9ad8\u4f4e32\u4f4d\uff0cbh\u3001bl\u4e3ab\u7684\u9ad8\u4f4e32\u4f4d\uff0c\u5219a*b=(ah*bh)<<32+(ah<<32)*bl+(bh<<32)*al+al*bl\n        unsigned long long albl=al*bl;\n        unsigned long long ahbh=ah*bh;\n        unsigned long long albh=al*bh;\n        unsigned long long ahbl=ah*bl;\n        tword r1,r2,r3,r4;\n        r1.rah=ahbh;\n        r1.ral=0;\n        r2.rah=0;\n        r2.ral=albl;\n        r3.ral=(albh&man32)<<32;\n        r3.rah=(albh&man32h)>>32;\n        r4.ral=(ahbl&man32)<<32;\n        r4.rah=(ahbl&man32h)>>32;\n        res.rah=0;\n        res.ral=0;\n        add(res,r1,res);\n        add(res,r2,res);\n        add(res,r3,res);\n        add(res,r4,res);//\u628a\u56db\u9879\u76f8\u52a0\uff0c\u5f97\u51fa\u7ed3\u679c\n    }\n    void mul(tword a,int b,tword &res){//128\u4e58int\u7684\u8fd0\u7b97\n        tword tmp;\n        unsigned long long ah=a.rah*b;\n        kuomul(a.ral,b,tmp);\n        unsigned long long al=tmp.ral;\n        res.rah=ah+tmp.rah;\n        res.ral=al;\n    }\n    int mod10(tword &hint){//\u628a128\u4f4dhint\u9664\u4ee510\uff0c\u5e76\u8fd4\u56de\u4f59\u6570\n        unsigned long long eah=hint.rah / 10;\n        unsigned long long mod=((hint.rah%10)<<32)|((hint.ral&man32h)>>32);\n        unsigned long long low=hint.ral&man32;\n        hint.rah=eah;\n        unsigned long long eal=(mod/10)<<32;\n        low=low|((mod%10)<<32);\n        eal=eal|(low/10);\n        hint.ral=eal;\n        return(low%10);\n    }\n    stack<char> ss;//\u5b57\u7b26\u6808\n    void print(tword hint){//\u8f93\u51fa128\u4f4d\u6574\u6570\n        if(hint.rah==0&&hint.ral==0){\n            printf(\"0\");//\u4e3a0\u76f4\u63a5\u8f93\u51fa0\n        }\n        else{\n            while(hint.rah!=0||hint.ral!=0){\n                ss.push(mod10(hint)+'0');\n            }\n            while(!ss.empty()){\n                putchar(ss.top());\n                ss.pop();\n            }\n        }\n    }\n    int v[81];//\u77e9\u9635\u7684\u4e00\u884c\n    int line;\n    unsigned char bv[81][81];\n    tword f[81][81];\n    int m;\n    void dp(int l,int r,tword &res){//\u8bb0\u641c\n        if(bv[l][r]){res=f[l][r];return;}\n        //\u6ce8\u610f\u8fd9\u91cc\u4e00\u65e6\u627e\u5230\u5c31\u8d76\u7d27return\uff0c\u4e00\u822c\u7684\u8bb0\u641c\u90fd\u662f\u5e26\u8fd4\u56de\u503c\u7684\uff0c\u6211\u56e0\u4e3a\u8981\u4f20\u9012\u7ed3\u6784\u4f53\u5c31\u6ca1\u5e26\u8fd4\u56de\u503c\uff0c\u5f00\u59cb\u7684\u65f6\u5019\u5fd8\u4e86\u52a0return\u7136\u540e\u5c31\u4e00\u76f4\u51fa\u9519\n        bv[l][r]=1;\n        tword resx;\n        resx.rah=0;\n        resx.ral=0;\n        int bit=m-(r-l);\n        unsigned long long bt=1;\n        if(bit<64){\n            bt=bt<<bit;\n            resx.ral=resx.ral|bt;\n        }\n        else{\n            bt=bt<<(bit-64);\n            resx.rah=resx.rah|bt;\n        }//resx\u5373\u4e3a2^i\uff0c\u76f4\u63a5\u6309\u4f4d\u5c31\u884c\u4e86\n        if(l==r){//\u533a\u95f4\u5185\u53ea\u6709\u4e00\u4e2a\u6570\n            mul(resx,v[l],resx);\n            f[l][r]=resx;\n            res=resx;\n        }\n        else{\n            tword left;\n            dp(l+1,r,left);\n            tword lefta=resx;\n            mul(lefta,v[l],lefta);\n            add(left,lefta,left);\n            tword right;\n            dp(l,r-1,right);\n            tword righta=resx;\n            mul(righta,v[r],righta);\n            add(right,righta,right);\n            //left\u4e3a\u53d6\u5de6\u8fb9\u80fd\u83b7\u5f97\u7684\u6700\u5927\u503c\uff0cright\u4e3a\u53d6\u53f3\u8fb9\u80fd\u83b7\u5f97\u7684\u6700\u5927\u503c\uff0c\u6700\u540e\u5728\u4ed6\u4eec\u4e2d\u95f4\u53d6\u4e2a\u6700\u5927\u7684\n            if(left<right){\n                f[l][r]=right;\n                res=right;\n            }\n            else{\n                f[l][r]=left;\n                res=left;\n            }\n        }\n    }\n    inline int get(){//\u8bfb\u5165\u4f18\u5316\n        char c;\n        int n;\n        while(1){\n            c=getchar();\n            if(c>='0'&&c<='9')break;\n        }\n        n=c-'0';\n        while(1){\n            c=getchar();\n            if(c>='0'&&c<='9'){\n                n=n*10+c-'0';\n            }\n            else{\n                return(n);\n            }\n        }\n    }\n    int main(){\n        man32=0xffffffff;\n        man32h=0xffffffff00000000;\n        int height,width;\n        cin>>height>>width;\n        m=width;\n        tword sum;\n        sum.rah=0;\n        sum.ral=0;\n        for(register int i=1;i<=height;i++){\n            memset(bv,0,sizeof(bv));\n            for(register int j=1;j<=width;j++){\n                v[j]=get();\n            }\n            tword tmp;\n            dp(1,width,tmp);\n            add(sum,tmp,sum);//\u628a\u5404\u884c\u7684\u6700\u5927\u5f97\u5206\u4f9d\u6b21\u76f8\u52a0\n        }\n        print(sum);//\u8f93\u51fa\n        return(0);\n}\n```",
        "postTime": 1515835798,
        "uid": 56917,
        "name": "\u989c\u4f1f\u4e1a_C_Asm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "\u6211\u7684\u8f6c\u79fb\u65b9\u7a0b\u4f3c\u4e4e\u548c\u697c\u4e0b\u7684\u90fd\u4e0d\u592a\u4e00\u6837\n\n\u9996\u5148\uff0c\u53ef\u4ee5\u53d1\u73b0\u6bcf\u884c\u600e\u4e48\u53d6\u5e76\u4e0d\u4f1a\u6709\u4ec0\u4e48\u5f71\u54cd\uff0c\u53ea\u8981\u7b97\u51fa\u8fd9\u4e9b\u7136\u540e\u52a0\u8d77\u6765\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u884c\uff0c\u6709$f[i][j]$\u4ee3\u8868\u53d6\u533a\u95f4$[i,j]$\u7684\u6700\u5927\u503c\n\n\u7136\u540e\u8f6c\u79fb\u65b9\u7a0b\u6211\u4eec\u8003\u8651\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u65b0\u7684$f[i][j]$\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff08\u4e0b\u9762\u5b9a\u4e49$a[i]$\u4ee3\u8868\u8be5\u884c\u7684\u6bcf\u4e2a\u6570\uff09\uff1a\n\n\u5148\u53d6\u524d\u9762\u7684\uff08$a[i]$\uff09\uff0c\u518d\u53d6\u5269\u4e0b\u7684$f[i+1][j]$\u5373$[i+1,j]$\u7684\u6700\u5927\u503c\uff1a$2f[i+1][j]+2a[i]$\u5373\u628a\u63a5\u4e0b\u6765\u53d6\u7684\u6240\u6709\u6570\u4e58\u4e0a2\uff0c\u4e5f\u5c31\u662f\u628a\u63a5\u4e0b\u6765\u53d6\u7684\u6240\u6709\u6570\u4ece$x2^{i}$\u53d8\u4e3a$x2^{i+1}$\u5373\u6bcf\u6b21\u53d6\u90fd\u628a\u4e4b\u524d\u7684\u7ffb\u4e00\u500d\uff0c\u7136\u540e\u5f53\u524d\u53d6\u7684\u503c$a[i]$\u8981\u4e58\u4e0a$2^1$\u5373$2$\n\n\u5148\u53d6\u540e\u9762\u7684\uff08$a[j]$\uff09\uff0c\u518d\u53d6\u5269\u4e0b\u7684$f[i][j-1]$\u5373$[i,j-1]$\u7684\u6700\u5927\u503c\uff1a$2f[i][j-1]+2a[j]$\u540c\u7406\n\n\u6545\u8f6c\u79fb\u65b9\u7a0b\u4e3a$$f[i][j]=max(2f[i+1][j]+2a[i],2f[i][j-1]+2a[j])$$\n\n\u6240\u4ee5\u7a0b\u5e8f\u5c31\u5f88\u597d\u5199\u4e86\n\n\u4e3b\u8981\u90e8\u5206\u5982\u4e0b\n```cpp\nint n, m;\n__int128 game[MAXN][MAXN];\n\n__int128 f[MAXN][MAXN];\n__int128 solve(__int128 a[])\n{\n    memset(f,0,sizeof(f));\n    for(int len=0;len<=m;++len)\n    \tfor(int i=1;i+len<=m;++i)\n            f[i][i+len]=max(2*f[i+1][i+len]+2*a[i],2*f[i][i+len-1]+2*a[i+len]);\n    return f[1][m];\n}\n```\n\n\u6ce8\u610f\u7528int128\u6216\u9ad8\u7cbe\uff0c\u4e0d\u7136\u4f1a\u7206longlong\n\nAC\u7a0b\u5e8f\uff080ms/2.13MB\uff09\uff0c\u5e94\u8be5\u662f\u6bd4\u8f83\u5feb\u7684\u4e86\uff1a\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int MAXN=81;\n\ninline void input(__int128 &s)\n{\n    s=0;\n    char c=' ';\n    while(c>'9'||c<'0') c=getchar();\n    while(c>='0'&&c<='9')\n    {\n        s=s*10+c-'0';\n        c=getchar();\n    }\n}\n\ninline void output(__int128 x)\n{\n    if(x>9)\n        output(x/10);\n    putchar(x%10+'0');\n}\n\nint n, m;\n__int128 game[MAXN][MAXN];\n\n__int128 f[MAXN][MAXN];\n__int128 solve(__int128 a[])\n{\n    memset(f,0,sizeof(f));\n    for(int len=0;len<=m;++len)\n    \tfor(int i=1;i+len<=m;++i)\n            f[i][i+len]=max(2*f[i+1][i+len]+2*a[i],2*f[i][i+len-1]+2*a[i+len]);\n    return f[1][m];\n}\n\n__int128 ans=0;\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            input(game[i][j]);\n    for(int i=1;i<=n;i++)\n        ans+=solve(game[i]);\n    output(ans);\n    return 0;\n}\n```",
        "postTime": 1521035814,
        "uid": 34238,
        "name": "zhylj",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "~~\u8ba9\u6211\u6765\u4e00\u6ce250\u884c\u7cbe\u7b80\u4ee3\u7801\u7684\u624b\u5199int128\uff1b~~\n\n\n\n------------\n\n\u9996\u5148\u63a8\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\n\u8bbe\n```\nf[l][l+len][i]\n```\n\u8868\u793a\u5de6\u7aef\u70b9\u4e3al\uff0c\u53f3\u7aef\u70b9\u4e3al+len,\u7b2ci\u884c\u53d6\u6570\u6240\u80fd\u83b7\u5f97\u7684\u6700\u5927\u503c\n\n\u5f88\u5bb9\u6613\u5f97\u51fa\n```\nf[l][l+len][i]=max(2*f[l+1][l+len][i]+2*a[i][l],2*f[l][l+len-1][i]+2*a[i][l+len]);\n```\n\u8fdb\u4e00\u6b65\u63a8\u5f97\n```\nf[l][l+len][i]=max(f[l+1][l+len][i]+a[i][l],f[l][l+len-1][i]+a[i][l+len])*2\n```\n**\u5982\u6b64\u5316\u7b80\u65b9\u4fbf\u91cd\u8f7d\u8fd0\u7b97\u7b26\u65f6\u51cf\u5c11\u8fd0\u7b97\u91cf**\n\n~~\u627e\u516b\u963f\u54e5\uff08bug\uff09\u4e5f\u65b9\u4fbf\u4e00\u70b9~~\n\n------------\n\n\u76ee\u6d4b\u53d1\u73b0\u6700\u5927\u6570\u4e3a**80x1000x(2^81-1)**\n\n\u663e\u7136\u4e0d\u4f1a\u8d85\u8fc7128\u4f4d\uff0c\u4e8e\u662f\u6211\u9009\u62e9\u624b\u5199int128\n\n\u7528a.hig\u50a8\u5b58a\u7684\u9ad8\u4f4d\uff0ca.low\u50a8\u5b58a\u7684\u4f4e\u4f4d\u3002\n\n\u9ad8\u4f4d\u663e\u7136\u4e0d\u4f1a\u6ea2\u51fa\uff08\u56e0\u4e3a\u53ea\u67092^81-1\uff09\uff0c\u6240\u4ee5\u5c06\u4f4e\u4f4d\u76841e18\u7a7a\u51fa\uff0c\u9632\u6b62\u4e24\u6570\u76f8\u52a0\u65f6\u6ea2\u51fa\n\n~~\u867d\u7136\u8fd9\u6837\u4e00\u641e\u53d8\u6210\u4e86int123 =_=~~\n\n\u8f93\u51fa\u65f6\u8981\u683c\u5916\u6ce8\u610f\uff1a\n\n- \u5f53\u9ad8\u4f4d\u4e3a\u96f6\u65f6\u76f4\u63a5\u8f93\u51fa\u4f4e\u4f4d\uff1b\n- \u5f53\u9ad8\u4f4d\u4e0d\u4e3a\u96f6\u65f6\u76f4\u63a5\u8f93\u51fa\u9ad8\u4f4d\uff0c\u4f4e\u4f4d\u4f4d\u6570\u4e0d\u8db318\u4f4d\u8981\u8865\u96f6\n- ~~\u5f53\u521d\u5c31\u662f\u56e0\u4e3a\u4f4e\u4f4d\u6ca1\u8865\u96f6\uff0c\u627e\u4e86\u516b\u767e\u5341\u4e2a\u5c0f\u65f6\u7684\u516b\u963f\u54e5~~\n\n\n------------\n\n\u4ee3\u7801\uff08\u6709\u6ce8\u91ca\uff09\u5982\u4e0b\uff1a\n```\n#include<cstdio>\nstruct int128\n{\n    long long hig;\n    long long low;\n};//\u5b9a\u4e49int128\nint n,m;\nlong long p=1e18;//\u4f5cmod\u7528\nint128 ans,f[85][85][85],a[85][85];\nint128 max(int128 a,int128 b)\n{\n\tif(a.hig>b.hig) return a;\n\tif(a.hig<b.hig) return b;//\u9ad8\u4f4d\u6bd4\u8f83\n\tif(a.low>b.low) return a;\n\tif(a.low<b.low) return b;//\u4f4e\u4f4d\u6bd4\u8f83\n\treturn a;//\u76f8\u7b49\u65f6\u8fd8\u8981\u8fd4\u56de\u4e00\u4e2a\u503c\n}\nint128 operator + (int128 a,int128 b)//\u91cd\u8f7d\u8fd0\u7b97\u7b26\n{\n    int128 k;\n    k.low=0,k.hig=0;\n    k.low=a.low+b.low;\n    k.hig=k.low/p+a.hig+b.hig;//\u9632\u6b62\u6ea2\u51fa\n    k.low%=p;\n    return k;\n}\nint128 operator * (int128 a,int b)\n{\n\tint128 k;\n\tk.low=0,k.hig=0;\n\tk.low=a.low*b;\n\tk.hig+=k.low/p+b*a.hig;//\u4e0e\u4e0a\u540c\u7406\n\tk.low%=p;\n\treturn k;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=m;j++)\n        scanf(\"%lld\",&a[i][j].low);\n\tfor(int i=1;i<=n;i++)\n    for(int len=0;len<m;len++)\n    for(int l=1;l+len<=m;l++)//\u533a\u95f4\u52a8\u6001\u89c4\u5212\n            f[l][l+len][i]=max(f[l+1][l+len][i]+a[i][l],f[l][l+len-1][i]+a[i][l+len])*2;\n    for(int i=1;i<=n;i++)\n    \tans=ans+f[1][m][i];\n    if(ans.hig==0)\tprintf(\"%lld\",ans.low);\n    else\tprintf(\"%lld%018lld\\n\",ans.hig,ans.low);\n}\n```\n\u7eaf\u4ee3\u7801\uff1a\n```\n#include<cstdio>\nstruct int128\n{\n    long long hig;\n    long long low;\n};\nint n,m;\nlong long p=1e18;\nint128 ans,f[85][85][85],a[85][85];\nint128 max(int128 a,int128 b)\n{\n\tif(a.hig>b.hig) return a;\n\tif(a.hig<b.hig) return b;\n\tif(a.low>b.low) return a;\n\tif(a.low<b.low) return b;\n\treturn a;\n}\nint128 operator + (int128 a,int128 b)\n{\n    int128 k;\n    k.low=0,k.hig=0;\n    k.low=a.low+b.low;\n    k.hig=k.low/p+a.hig+b.hig;\n    k.low%=p;\n    return k;\n}\nint128 operator * (int128 a,int b)\n{\n\tint128 k;\n\tk.low=0,k.hig=0;\n\tk.low=a.low*b;\n\tk.hig+=k.low/p+b*a.hig;\n\tk.low%=p;\n\treturn k;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=m;j++)\n        scanf(\"%lld\",&a[i][j].low);\n\tfor(int i=1;i<=n;i++)\n    for(int len=0;len<m;len++)\n    for(int l=1;l+len<=m;l++)\n            f[l][l+len][i]=max(f[l+1][l+len][i]+a[i][l],f[l][l+len-1][i]+a[i][l+len])*2;\n    for(int i=1;i<=n;i++)\n    \tans=ans+f[1][m][i];\n    if(ans.hig==0)\tprintf(\"%lld\",ans.low);\n    else\tprintf(\"%lld%018lld\\n\",ans.hig,ans.low);\n}\n```\n",
        "postTime": 1536983045,
        "uid": 53410,
        "name": "XY_cpp",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "\u4e00\u884c\u4e00\u884c\u7684\u5904\u7406\uff0c\u6700\u540e\u52a0\u8d77\u6765\n\nf[i][j]\u8868\u793a\u53d6i~j\u8fd9\u4e00\u6bb5\u80fd\u83b7\u5f97\u7684\u6700\u5927\u5206\u6570\uff08i~j\u8fd9\u90e8\u5206\u6700\u540e\u53d6\uff09\n\n\u521d\u59cb\u5316\uff1a$f[i][i]=a[i]*2^m$\n\n\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$f[i][j]=max(f[i+1][j])+a[k][i]*2^{m+i-j},f[i][j-1]+a[k][j]*2^{m+i-j})$$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,lc;\nchar ch[100];\nint d[100];\nint a[100][100][100];\nint er[81][100];\nint A[100];\nint B[100];\nint ans[200];\nint f[81][81][100];\ninline void Add(int *b,int *c)//b=b+c\n{\n    memset(d,0,sizeof(d));\n    d[0]=max(b[0],c[0])+1;\n    for (int I=1;I<=d[0];I++)//\u52a0\u6cd5 \n    {\n        d[I]+=b[I]+c[I];\n        d[I+1]+=(d[I]/10);\n        d[I]%=10;\n    }\n    while (d[d[0]]==0) d[0]--;//\u53bb\u63890 \n    for (int I=0;I<=d[0];I++) b[I]=d[I];\n    return;\n}\ninline void CF(int *b,int *c)//\u9ad8\u7cbe\u5ea6\u4e58\u6cd5 \n{\n    memset(d,0,sizeof(d));//\u6e05\u7a7a \n    d[0]=b[0]+c[0];\n    for (int k=1;k<=b[0];k++)//\u4e58 \n        for (int l=1;l<=c[0];l++)\n        {\n            d[k+l-1]+=b[k]*c[l];\n        }\n    for (int k=1;k<=d[0];k++)//\u8fdb\u4f4d \n    {\n        d[k+1]+=d[k]/10;\n        d[k]%=10;\n    }\n    while (d[d[0]]==0) d[0]--;//\u53bb\u6389\u524d\u9762\u76840 \n    for (int k=0;k<=d[0];k++) b[k]=d[k];\n}\ninline bool Max(int *b,int *c)//\u6bd4\u8f83b\u6570\u7ec4\u548cc\u6570\u7ec4\u54ea\u4e2a\u5927 \n{\n    while (b[b[0]]==0&&b[0]>0) b[0]--;\n    while (c[c[0]]==0&&c[0]>0) c[0]--;\n    if (b[0]>c[0]) return true;\n    if (c[0]>b[0]) return false;\n    for (int i=b[0];i>=1;i--)\n        if (b[i]>c[i]) return true; else\n        if (b[i]<c[i]) return false;\n    return false;\n}\nbool flag;\nint main()\n{\n    scanf(\"%d%d\",&n,&m); \n    for (int i=1;i<=n;i++)\n        for (int j=1;j<=m;j++)\n        {\n            scanf(\"%s\",ch+1);//\u8bfb\u5165 \n            lc=strlen(ch+1);\n            a[i][j][0]=0;\n            for (int k=lc;k>=1;k--)\n            {\n                a[i][j][++a[i][j][0]]=ch[k]-'0';\n            }\n        }\n    er[0][0]=1;er[0][1]=1; \n    for (int i=1;i<=m;i++)//\u9884\u5904\u74062^1~2^m \n    {\n        for (int j=0;j<=er[i-1][0];j++)\n        {\n            er[i][j]=er[i-1][j];\n        }\n        Add(er[i],er[i-1]); \n    }\n    for (int k=1;k<=n;k++)//\u884c \n    {\n        memset(f,0,sizeof(f));\n        for (int i=1;i<=m;i++)\n        {//f[i][i]=a[k][i]*2^m;\n            Add(f[i][i],a[k][i]);\n            CF(f[i][i],er[m]);\n        }\n        for (int l=1;l<m;l++)\n        {\n            for (int i=1,j=i+l;j<=m;i++,j=i+l)\n            {//\u8fd9\u5c31\u662fdp\u8f6c\u79fb\u7684\u8fc7\u7a0b \n                memset(A,0,sizeof(A));\n                Add(A,a[k][i]);\n                CF(A,er[m+i-j]);\n                Add(A,f[i+1][j]);\n                memset(B,0,sizeof(B));\n                Add(B,a[k][j]);\n                CF(B,er[m+i-j]);\n                Add(B,f[i][j-1]);    \n                flag=Max(A,B);\n                if (flag)\n                {\n                    for (int l=0;l<=A[0];l++)\n                        f[i][j][l]=A[l];\n                } else\n                {\n                    for (int l=0;l<=B[0];l++)\n                        f[i][j][l]=B[l];\n                }\n            }\n        }\n        Add(ans,f[1][m]);\n    }\n    while (ans[ans[0]]==0&&ans[0]>0) ans[0]--;//\u53bb\u63890 \n    if (ans[0]==0) ans[0]++;//\u7279\u52240 \n    for (int i=ans[0];i>=1;i--)//\u5012\u7740\u8f93\u51fa \n        printf(\"%d\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1504973917,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "\u6bcf\u4e00\u884c\u4e92\u4e0d\u5f71\u54cd\uff0c\u4e00\u884c\u4e00\u884c\u6765\u505a\u3002\n\u5173\u4e8e\u52a8\u6001\u89c4\u5212\u7684\u65e0\u540e\u6548\u6027\uff0c\u5176\u5b9e\u533a\u95f4dp\u600e\u4e48\u6837\u90fd\u884c\uff0c\u6211\u6700\u540e\u4e3a\u4e86for\u5faa\u73af\u597d\u770b\u4e00\u70b9\uff0c\u9009\u62e9\u4e86f[i][j]: i\u8868\u793a\u533a\u95f4\u957f\u5ea6\uff0cj\u8868\u793a\u533a\u95f4\u5f00\u59cb\u7684\u4f4d\u7f6e\u3002\n\u90a3\u4e48\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u662f:\n\tf[i][j]=max(f[i-1][j]+num[i+j]*2^(m-i), f[i-1][j+1]+num[j]*2^(m-i))\n    \n------------\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```python\nstring = raw_input()\nn, m = string.split(' ')\nn, m = int(n), int(m)\ni2 = list()\ntemp = 2\nout = 0\nfor each in range(m):\n    i2.append(temp)\n    temp = temp*2\nfor time in range(n):\n    string = raw_input()\n    num = [int(each) for each in string.split(' ')]\n    f = [[0 for every in range(m)] for each in range(m)]\n    for each in range(m):\n        f[0][each] = num[each] * i2[m - 1]\n    for i in range(1, m):\n        for j in range(m-i):\n            temp1 = f[i-1][j] + num[i + j] * i2[m - 1 - i]\n            temp2 = f[i-1][j+1] + num[j] * i2[m - 1 - i]\n            f[i][j] = temp1 if temp1 > temp2 else temp2\n    out += f[m-1][0]\nprint(out)\n```",
        "postTime": 1530707109,
        "uid": 109825,
        "name": "zyk1256",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "\u5509\u3002\u5fc3\u597d\u7d2f\u3002\n\n\u5218\u6c5d\u4f73\u9a97\u4e86\u6211\u3002\u300a\u7b97\u6cd5\u7ade\u8d5b\u5165\u95e8\u7ecf\u5178\u300b\u9a97\u4e86\u6211\u3002\n\nvector\u5b9e\u73b0\u7684\u9ad8\u7cbe\u5ea6\u4e0d\u597d\u5199\uff0c\u800c\u4e14\u6162\u7684\u8981\u6b7b\u3002\u75af\u72c2\u5730\u538b\u5230\u4e8615\u4f4d\u624d\u52c9\u5f3a\u901a\u8fc7\u5012\u6570\u7b2c\u4e8c\u4e2a\u6d4b\u8bd5\u70b9\u3002\n\n\u75db\u5b9a\u601d\u75db\u3002\u6539\u7528\u6570\u7ec4\u3002\n\n\u8d3c\u5feb\u3002\n\n\u4e0d\u8fc7\u91cc\u9762\u4fdd\u7559\u4e86\u6211\u4e4b\u524d\u7528\u7684\u4f18\u5316\u3002\n\n- two\u6570\u7ec4\uff0c\u7528\u6765\u5b58\u50a82\u7684n\u6b21\u65b9\u3002\u52a0\u901f\u663e\u8457\u3002\n\n- multi\u51fd\u6570\u548cat\u6570\u7ec4\uff0c\u76f8\u5f53\u4e8e\u8bb0\u5fc6\u5316\u4e58\u6cd5\u3002\u4e0d\u77e5\u9053\u7528\u5904\u5927\u4e0d\u5927\u3002\n\n\u6211\u90fd\u5fd8\u4e86\u8fd9\u662f\u4e00\u9053\u52a8\u6001\u89c4\u5212\u7684\u9898\u76ee\u3002\n\n\u90a3\u5c31\u5fd8\u4e86\u5427\u3002\n\n\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cstdio>\n#define A 1000000000000000\nusing namespace std;\n\nstruct bint{\n\tlong long s[10];\n\t\n\tbint(long long num = 0){\n\t\t*this=num;\n\t}\n\t\n\tbint operator = (long long num){\n\t\tmemset(s, 0, sizeof(s));\n\t\ts[0]=num;\n\t\treturn *this;\n\t}\n\t\n\tbint operator + (const bint& b) const {\n\t\tbint c;\n\t\tunsigned long long g = 0;\n\t\tfor (int i=0; i<9 ; i++){\n\t\t\tunsigned long long x = g;\n\t\t\tx += (unsigned long long)s[i]+b.s[i];\n\t\t\tc.s[i]=x%A;\n\t\t\tg=x/A;\n\t\t}\n\t\treturn c;\n\t}\n\t\n\tbint operator* (const bint& b) const {\n\t\tbint c;\n\t\tunsigned long long g=0;\n\t\tfor (int i=0; i<9; i++){\n\t\t\tunsigned long long x=g;\n\t\t\tfor (int j=0; j<=i; j++){\n\t\t\t\tint k=i-j;\n\t\t\t\tx+=(unsigned long long)s[k]*b.s[j];\n\t\t\t}\n\t\t\tc.s[i]=x%A;\n\t\t\tg=x/A;\n\t\t}\n\t\treturn c;\n\t\t\n\n\t}\n\t\n\tbool operator < (const bint& b) const {\n\t\tfor (int i=9; i>=0; i--){\n\t\t\tif (s[i]<b.s[i]) return 1;\n\t\t\tif (s[i]>b.s[i]) return 0;\n\t\t}\n\t\treturn 0;\t\n\t}\n\t\n\tvoid print(){\n\t\tchar buf[200];\n\t\tfor (int i=9; i>=0; i--){\n\t\t\tsprintf(buf+(9-i)*15, \"%015lld\", s[i]);\n\t\t}\n\t\tbool flag=0;\n\t\tfor (int i=0; i<150; i++){\n\t\t\tif (buf[i]>'0') flag=1;\n\t\t\tif (flag) printf(\"%c\", buf[i]);\n\t\t}\n\t\t\n\t\tif (!flag) printf(\"0\");\n\n\t}\n\t\n}; \n\n\nlong long a[100]; bint dp[100][100];\nbint ans;\nbint two[82];\n\ninline void ini(){\n\ttwo[0]=1;\n\tfor (int i=1; i<=80; i++){\n\t\ttwo[i]=two[i-1]*2;\n\t}\n}\n\nbint at[100][100];\nbool used[100][100];\n\ninline bint multi(int i, int p){\n\tif (used[i][p]) return at[i][p];\n\tused[i][p]=true;\n\treturn at[i][p]=(bint)a[i]*two[p];\n}\n\n\nint main(){\n\n\t\n\tfreopen(\"1005.cpp\", \"r\", stdin);\n\tini();\n\tint n, m;\n\tcin>>n>>m;\n\tans=0;\n\tfor (int w=0; w<n; w++){\n\t\tmemset(dp, 0, sizeof(dp));\n\t\tmemset(used, false, sizeof(used));\n\t\tfor (int i=1; i<=m; i++) scanf(\"%d\", a+i);\n\t\tbint anst=0;\n\n\t\tfor (int t=0; t<m; t++){\t\n\t\t\tfor (int i=1; i+t<=m; i++){\n\t\t\t\tint j=i+t;\n\t\t\t\tint p=m-t;\n\t\t\t\tbint s = dp[i+1][j]+multi(i,p);\n\t\t\t\tbint t = dp[i][j-1]+multi(j,p);\n\t\t\t\tif (s<t) dp[i][j]=t;\n\t\t\t\telse dp[i][j]=s;\n\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\tans=ans+dp[1][m];\n\t}\n\tans.print();\n\tcout<<endl;\n} \n\n```",
        "postTime": 1527421336,
        "uid": 81690,
        "name": "EricWay1024",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u8fd9\u4e2a\u9898\u76ee\u4e0d\u662f\u7528\u7a77\u4e3e\u505a\u7684\u3002\u7531\u6b64\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u6709\u52a8\u6001\u89c4\u5212\u6765\u7f16\u5199\u3002\n\n\u4ece\u6570\u636e\u89c4\u6a21\u770b\uff0c\u52a8\u5f52\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(N*M^2)$\u6216\u8005$O(N*M^3)$\u53c8\u56e0\u4e3a\u8981\u9ad8\u7cbe\u5ea6\uff0c\u53ef\u4ee5\u65ad\u5b9a\u662f$O(N*M^2)$\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u7528$F[i,j]$\u8868\u793a\u4ece$i$\u5230$j$\u8fd9\u4e00\u6bb5\u6570\u636e\u7684\u6700\u5927\u503c\u3002\u4ece$I*2^n$\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6bcf\u53d6\u4e00\u4e2a\u5168\u90e8$*2$\uff0c\u5373\u5728\u6bcf\u4e00\u5c42\u8fd0\u7b97\u4e2d\u5148\u5c06$2$\u4e58\u5165\uff0c\u90a3\u4e48\u4ee5\u540e\u7684\u53d6\u503c\u90fd\u53ea\u8981$*2$\u5c31\u884c\u4e86\uff01\n\n\u8fd9\u662f\u6211\u7684\u65b9\u7a0b\uff1a$F[i,j]:=max${$2\\times(data[i]+F[i+1,j]),2\\times(data[j]+F[i,j-1])$}\u3002\n\n\u5176\u8ba1\u7b97\u65b9\u6cd5\u89e3\u91ca\u5982\u4e0b\uff1a\n\n\u6211\u4eec\u9700\u8981\u7528$I$(\u4ece$M$\u5230$1$)\u6765\u63a7\u5236\u8d77\u59cb\u6bb5\u7684\u4f4d\u7f6e\uff0c\u6bcf\u6b21$J$\u90fd\u4ece$I$\u5230\u5c3e\u8d70\u4e00\u904d\u3002\n\n\u5f53$i=1$\uff0c$j=1$\u65f6\uff0c$F[1,1]=max${$2\\times(data[1]+F[2,1])$,$2\\times(data[1]+F[1,0])$}\n\n\u7531\u4e8e\u6b64\u65f6$F[2,1]$\u3001$F[1,0]$\u503c\u4e3a$0$\uff0c\u6240\u4ee5$L=1$\u65f6\u6570\u636e\u6700\u5927\u503c\u5c31\u662f$2\\times data[i]$\uff0c\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u7684$data[i]$\u5c06\u4f1a\u662f\u6700\u540e\u4e00\u4e2a\u53d6\u8d70\u7684\u5143\u7d20\u3002\n\n\u5f53$i\uff1d1$\uff0c$j\uff1d2$\u65f6\uff0c$F[1,2]=max$ {$2 \\times (data[1]+F[2,2])$,$2\\times(data[2]+F[1,1])$}\n\n\u6b64\u65f6\u4ee5\u524d\u7684\u8ba1\u7b97\u5c31\u7528\u4e0a\u4e86\uff0c\u5047\u8bbe\u6570\u636e$max$\u90fd\u662f\u524d\u8005\uff0c\u90a3\u4e48$F[1,2]=2\\times (data[1]+F[2,2])=2\\times(data[1]+2 \\times data[2])$\u3002\n\n\u518d\u770b\u4e00\u4e2a\uff0c$i=1$\uff0c$j=3$\u65f6\uff0c\u540c\u6837\u5047\u8bbe\uff0c$F[1,3]=2 \\times (data[1]+2\\times (data[2]+2 \\times data[3]))$\u3002\n\n\u5982\u6837\u4f8b$1$\u7b2c\u4e00\u884c\u7684\u8ba1\u7b97\uff1a$F[1,3]=2\\times(1+2\\times(2+2\\times4))$ \uff1d$1\\times2+2\\times2^2+4\\times2^3$\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u9006\u5411\u5c06\u6700\u5927\u503c\u6c42\u51fa\uff0c\u6700\u540e\u7684$F[1,m]$\u5c31\u662f\u6bcf\u884c\u7684\u6700\u5927\u503c\u4e86\u3002\n\n\u6211\u4eec\u8fd8\u8981\u6ce8\u610f\u6570\u7ec4\u7684\u5b9a\u4e49\u8303\u56f4\uff0c\u5fc5\u987b\u4ece$0$\u5f00\u59cb\uff0c\u5426\u5219\u5168$W$\u4e86\uff01\n\u5728\u52a0\u4e0a\u9ad8\u7cbe\u5ea6\uff0c\u90a3\u4e48$game$\u5c31$AC$\u4e86\uff01\n\n",
        "postTime": 1551961592,
        "uid": 119685,
        "name": "Kevin_Wa",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "[\u5e7f\u544a](http://www.cnblogs.com/wawcac-blog/p/7101196.html)\n\n\u4e0d\u7b97\u9ad8\u7cbe\u5ea6\uff0c\u5c31\u662f\u4e00\u9053\u7b80\u5355\u7684DP\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u4e00\u884c\u90fd\u53ef\u4ee5\u72ec\u7acb\u8ba1\u7b97\uff0c\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\u5bf9\u4e8e\u6bcf\u4e00\u884c\uff0c\u6211\u4eec\u7528$f[i][j]$\uff08LaTeX\u4e0a\u763e\u4e86\uff09\u8868\u793a\u8fd9\u884c\u8fd8\u5269\u4e0b$[i,j]$\u65f6\u80fd\u5f97\u5230\u7684\u6700\u9ad8\u5206\uff0c\u90a3\u4e48\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5c31\u663e\u7136\u4e86\u2014\u2014$f[i][j]=max( f[i-1][j]+2^{m-j+i}*a[i-1] , f[i][j+1]+2^{m-j+i}*a[j+1] )$//\u4e0a\u4e00\u6b65\u662f\u4ece\u5de6\u53d6\u8fd8\u662f\u4ece\u53f3\u53d6\u5462\uff1f\n\n\n\u8fb9\u754c\u662fj>=i\uff0c\u8fd9\u65f6f[i][i]\u8868\u793a\u7684\u53ea\u662fa[i]\u4e24\u8fb9\u90fd\u88ab\u53d6\u65f6\u7684\u6700\u5927\u5f97\u5206\uff0c\u8981\u5f97\u5230\u8fd9\u4e00\u884c\u53d6\u5b8c\u7684\u5f97\u5206\uff0c\u8fd8\u8981\u52a0\u4e0a$a[i]*2^{m}$\u3002\n\n\n\u6700\u540e\uff0c\\_\\_int128\u8f93\u51fa\u5b9e\u5728\u662f\u5751\uff0c\u8981\u5199\u201c\u5feb\u5199\u201d\uff0c\u8fd8\u8981\u7279\u52240\uff0c\u7b2c\u4e00\u4e2a\u70b9\u7b54\u6848\u662f0\uff0c\u7b2c\u4e00\u6b21\u6ca1\u7279\u522490\u5206\u3002\n\n[\u6e90\u4ee3\u7801](http://www.cnblogs.com/wawcac-blog/p/7101196.html)\n\n\n\n\n\n```cpp\n#include<bits/stdc++.h>\n#define lll __int128\nvoid print(lll x)\n{\n    if (x==0) return;\n    if (x) print(x/10);\n    putchar(x%10+'0');\n}\nint n,m;\nlll ans=0;\nint a[100]={0};\nlll f[100][100];\nlll p[100]={1};\nlll dp()\n{\n    memset(f,0,sizeof(f));\n    for(int i=1;i<=m;i++)\n    {\n        for(int j=m;j>=i;j--)\n        {\n            f[i][j]=std::max( f[i-1][j]+ p[m-j+i-1]*a[i-1]  , f[i][j+1]+ p[m-j+i-1]*a[j+1] );\n        }\n    }\n    lll maxn=-1;\n    for(int i=1;i<=m;i++) maxn=std::max(maxn,f[i][i]+a[i]*p[m]);\n    return maxn;\n}\nint main()\n{\n    for(int i=1;i<=90;i++) p[i]=p[i-1]<<1;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n            scanf(\"%d\",a+j);\n        ans+=dp();\n    }\n    if(ans==0) puts(\"0\");\n    else print(ans);\n    return 0;\n}\n```",
        "postTime": 1498846641,
        "uid": 15429,
        "name": "wawcac",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "\u51e0\u4e2a\u6708\u524d\u672c\u849f\u84bb\u4ee5\u4e3a\u8fd9\u9898\u662f\u4e2a\u8d2a\u5fc3\uff0c\u7ed3\u679c......\u53ef\u60f3\u800c\u77e5\n\n\u51e0\u4e2a\u6708\u540e\u672c\u849f\u84bb\u53d1\u73b0\u5b83\u662f\u4e2a **\u533a\u95f4dp**  \u8fd8\u60f3\u5230\u4e86\u6b63\u89e3\uff0c\u7ed3\u679c\u695e\u662f\u6570\u7ec4\u5f00\u5c0f\u4e86\u4e00\u4e2a\u5355\u5143\uff0c**RE** \u4e86......\n\n---\n\n**\u3010\u5206\u6790\u3011**\n--\n\n\u5176\u5b9e\u867d\u7136\u8fd9\u9898\u4e0d\u662f\u4e2a\u8d2a\u5fc3\uff0c\u4f46\u8fd8\u662f\u6709\u4e00\u70b9\u8d2a\u5fc3\u7684\u601d\u60f3\n\n\u5bf9\u4e8e\u9898\u76ee\u7684\u63cf\u8ff0\uff0c\u6211\u53ef\u4ee5\u770b\u6210\u6709 $n$ \u4e2a\u540c\u5b66\u5bf9\u6bcf\u4e00\u884c\u53d6\u6570\n\n\u4e14\u6bcf\u884c $m$ \u4e2a\u6570\u4e2d\uff0c\u5f97\u5206\u7684\u8ba1\u7b97\u89c4\u5219\u4e0d\u53d8\n\n\u90a3\u4e48\uff0c\u9898\u76ee\u5c31\u662f\u6c42\u8fd9 $n$ \u4e2a\u540c\u5b66\u5f97\u5206 $ans_i$ \u4e4b\u548c\u7684\u6700\u5927\u503c\n\n\u7531\u4e8e\u6bcf\u4e2a\u540c\u5b66\u7684\u5f97\u5206\u662f\u76f8\u4e92\u72ec\u7acb\u7684\n\n\u6240\u4ee5\uff0c\u60f3\u8981\u6c42\u5f97\u5206\u6700\u5927\u503c\uff0c\u5c31\u662f\u5bf9\u6bcf\u4e2a\u540c\u5b66\u7684\u5f97\u5206\u6700\u5927\u503c\u6c42\u548c\n\n\u5373\n$ans=\\sum_{i=1}^n ans_i$\n--\n\n---\n\n\u90a3\u4e48\uff0c\u63a5\u4e0b\u6765\n\n\u6211\u4eec\u8003\u8651\u5982\u4f55\u5c06\u6bcf\u4e2a\u540c\u5b66\u7684\u5f97\u5206\u6700\u5927\n\n\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4 $[i,j]$ \u7684\u5f97\u5206\u6700\u5927\u503c\uff0c\u6211\u4eec\u8bb0\u4e3a $dp_{i,j}$\n\n\u90a3\u4e48\uff0c\u7531\u9898\u76ee\u5f97\u6bcf\u6b21\u53d6\u6570\u90fd\u5fc5\u987b\u4ece\u533a\u95f4\u7684\u5f00\u5934\u6216\u8005\u7ed3\u5c3e\u53d6\u6570\n\n\u4e5f\u5c31\u662f\u8bf4 $dp_{i,j}$ \u4e0e $dp_{i,j-1}$ \u3001 $dp_{i+1,j}$ \u4e4b\u95f4\u6709\u7740\u5fc5\u7136\u7684\u8054\u7cfb\uff0c\u8f6c\u79fb\u65b9\u7a0b\u80af\u5b9a\u4ece\u8fd9\u91cc\u5165\u624b\n\n\u5047\u8bbe\u4e0e $dp_{i,j-1}$ \u6709\u5173\u7684\u72b6\u6001\u66f4\u4f18\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5148\u8003\u8651 $dp_{i,j}$ \u4e0e $dp_{i,j-1}$ \u7684\u5173\u7cfb\n\n\u6211\u4eec\u53ef\u4ee5\u5f88\u6e05\u695a\u7684\u77e5\u9053\uff0c$dp_{i,j}$ \u662f\u5728\u533a\u95f4 $[i,j]$ \u4e0a\u53d6\u6570\u7684\u6700\u5927\u503c\uff0c\u4e00\u5171\u662f $(j-i+1)$ \u4e2a\u6570\n\n\u800c $dp_{i,j-1}$ \u662f\u5728\u533a\u95f4 $[i,j-1]$ \u4e0a\u53d6\u6570\u7684\u6700\u5927\u503c\uff0c\u4e00\u5171\u662f $(j-1-i-1)=(j-i-2)$ \u4e2a\u6570\n\n\u6309\u7167\u6211\u4eec\u4e4b\u524d\u7684\u5047\u8bbe\uff0c\u4e0e $dp_{i,j-1}$ \u7684\u72b6\u6001\u66f4\u4f18\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u533a\u95f4 $[i,j]$ \u7684\u5f97\u5206\uff0c\u663e\u7136\u662f\u5148\u53d6\u7b2c $i$ \u4e2a\u6570\uff0c\u518d\u5bf9\u540e\u9762\u7684\u533a\u95f4 $[i,j-1]$ \u53d6\u6700\u5927\u5f97\u5206\n\n\u90a3\u4e48\uff0c\u53d6\u7b2c $i$ \u4e2a\u6570\u7684\u5f97\u5206\u4e3a $map_j \\times 2^1$\n\n\u53d6\u540e\u9762\u7684\u533a\u95f4 $[i,j-1]$ \u7684\u6700\u5927\u5f97\u5206\u4e3a $(\\sum_{k=1}^{j-i+2} map_{c_k}\\times 2^{k+1})_{max}$ \uff0c \u5176\u4e2d $c_k$ \u662f\u533a\u95f4$[i,j-1]$\u4e2d\u7684\u6570\uff0c\u4e14\u4e92\u4e0d\u76f8\u540c\n\n\u6839\u636e\u5b9a\u4e49\uff0c\u6211\u4eec\u53c8\u53ef\u4ee5\u77e5\u9053 $dp_{i,j-1}=(\\sum_{k=1}^{j-i+2} map_{c_k}\\times 2^k)_{max}$\n$={1\\over 2}(\\sum_{k=1}^{j-i+2} map_{c_k}\\times 2^{k+1})_{max}$\n\n\u56e0\u6b64\uff0c\u8054\u7acb\u4e0a\u9762\u5f0f\u5b50\uff0c\u5f97\u51fa\n\n\u5982\u679c $dp_{i,j-1}$ \u7684\u72b6\u6001\u66f4\u4f18\uff0c\u90a3\u4e48 $dp_{i,j}=dp_{i,j-1} \\times 2 +map_j \\times 2=2(dp_{i,j-1}+map_j)$\n\n\u540c\u7406\uff0c\u53ef\u4ee5\u5f97\u51fa\uff0c\u5982\u679c $dp_{i+1,j}$ \u7684\u72b6\u6001\u66f4\u4f18\uff0c\u90a3\u4e48\uff0c\u540c\u6837\u6709 $dp_{i,j}=2(dp_{i+1,j}+map_i)$\n\n\u56e0\u6b64\uff0c\u53ef\u4ee5\u5f52\u7eb3\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\n$dp_{i,j}=2 \\times max(dp_{i,j-1}+map_j,dp_{i+1,j}+map_i)$\n--\n\n---\n\n\u4f60\u4ee5\u4e3a\u8fd9\u5c31\u5b8c\u4e86\u5417......\n\n\u6211\u4eec\u7b97\u4e00\u4e0b\u7b54\u6848\u7684\u8303\u56f4\n\n$ans=n\\times a_{ij}\\sum_{i=1}^m 2^i \\leq 80 \\times 1000 \\times (2^{82}-2)$ (\u7b49\u6bd4\u6570\u5217\u6c42\u548c\u516c\u5f0f)\n\n**unsigned long long int** \u6839\u672c\u5b58\u4e0d\u4e0b......\n\n\u624b\u6253\u9ad8\u7cbe\u5427\uff0c\u53cd\u6b63\u53ea\u6709\u6b63\u6574\u6570\u52a0\u6cd5\uff0c\u5f88\u4ec1\u6148\u4e86\n\n\u8fd9\u8fb9\u672c\u849f\u84bb\u63a8\u8350\u7528\u91cd\u8f7d\u8fd0\u7b97\u7b26\n\n~~\u81ea\u6211\u8fd9\u6837\u6574\u4e2a\u4ee3\u7801\u770b\u8d77\u6765\u66f4\u52a0\u4f18\u96c5~~\n\n---\n\n**\u3010\u4ee3\u7801\u3011**\n--\n\n\u90a3\u672c\u849f\u84bb\u5c31\u653e\u4ee3\u7801\u4e86\n\n```cpp\n#include<cstdio>\nusing namespace std;\n#define maxn(a,b) ((a>b)?a:b)\ninline int read(){\n\tregister int ans=0;register char c=getchar();register bool neg=0;\n\twhile((c<'0')|(c>'9')) neg^=!(c^'-'),c=getchar();\n\twhile((c>='0')&(c<='9')) ans=(ans<<3)+(ans<<1)+c-'0',c=getchar();\n\treturn neg?-ans:ans;\n}//\u63ba\u4e86\u9ed1\u79d1\u6280\u7684\u8bfb\u5165\u4f18\u5316\nint n,m;\nstruct bignum{\n\tint len,num[10];\n\tbignum() { len=1; for(int i=0;i<10;i++) num[i]=0; }//\u6784\u9020\u51fd\u6570\n\tvoid equal(int x){\n\t\tif(!x) return ;\n\t\tlen=0;\n\t\twhile(x>0){\n\t\t\tnum[len++]=x%100000;\n\t\t\tx/=100000;\n\t\t}\n\t}//\u8d4b\u503c\u5fd8\u8bb0\u600e\u4e48\u6253\u4e86......\n\tbool operator > (const bignum &x){\n\t\tif(len^x.len) return len>x.len;\n\t\tfor(int i=len-1;i>=0;i--)\n\t\t\tif(num[i]^x.num[i]) return num[i]>x.num[i];\n\t\treturn 0;\n\t}//\u91cd\u8f7d\u5927\u4e8e\u53f7\n\tbignum operator + (const bignum &x){\n\t\tbignum y;\n\t\tfor(int i=0;(i<len)|(i<x.len);i++){\n\t\t\ty.num[i]+=num[i]+x.num[i];\n\t\t\tif(y.num[i]>=100000) y.num[i]-=100000,y.num[i+1]++;\n\t\t}\n\t\ty.len=(len>x.len)?len:x.len;\n\t\tif(y.num[y.len]) y.len++;\n\t\treturn y;\n\t}//\u91cd\u8f7d\u52a0\u53f7\n\tbignum operator + (const int &x){\n\t\tbignum y;\n\t\ty.equal(x);\n\t\treturn (*this)+y;\n\t}//\u91cd\u8f7d\u52a0\u6574\u6570\n\tvoid print(){\n\t\tprintf(\"%d\",num[len-1]);\n\t\tfor(int i=len-2;i>=0;i--){\n\t\t\tint tmp=num[i];\n\t\t\tfor(int j=10000;j;j/=10) putchar(tmp/j+'0'),tmp%=j;\n\t\t}\n\t}//\u8f93\u51fa\u51fd\u6570\n};\nbignum init(){\n\tint map[81];\n\tfor(int i=1;i<=m;i++) map[i]=read();\n\tbignum dp[82][82];\n\tfor(int l=1;l<=m;l++)\n\t\tfor(int s=1;s+l-1<=m;s++){\n\t\t\tint e=s+l-1;\n\t\t\tdp[s][e]=maxn(dp[s][e-1]+map[e],dp[s+1][e]+map[s]);\n\t\t\tdp[s][e]=dp[s][e]+dp[s][e];\n\t\t}\n\treturn dp[1][m];\n}//\u4e2a\u4eba\u5bf9\u4e8e\u7a7a\u95f4\u5c3d\u91cf\u5c0f\u7684\u871c\u6c41\u7656\u597d\nint main(){\n\tn=read(); m=read();\n\tbignum ans;\n\tfor(int i=0;i<n;i++) ans=ans+init();\n\tans.print();\n\treturn 0;\n}\n```",
        "postTime": 1534917879,
        "uid": 36031,
        "name": "JustinRochester",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "\u6e29\u99a8\u63d0\u9192:\u53ef\u4ee5\u5230[\u66f4\u53ef\u7231\u306e\u4e16\u754c](https://www.cnblogs.com/Garbage-Only-one/p/11436134.html)\u67e5\u770b,\u66f4\u62a4\u773c\u54e6!\n\n\u8fd9\u771f\u662f\u4e00\u9053\u6709\u8da3\u7684\u9898\u76ee\u3002  \u2014\u2014\u5783\u573e\u4e00\u4e2a\n\n>\u9996\u5148,\u6211\u4eec\u77e5\u9053,\u6709\u4e00\u4e2a`C++11`\u624d\u6709\u7684\u4e1c\u897f:`__int128`,\u5b83\u7684\u4e0a\u754c\u662f$2^{128}-1$\u3002\n\n>\u7136\u540e,\u6211\u4eec\u77e5\u9053,\u6709\u4e00\u4e2a\u53eb\u5b8f\u5b9a\u4e49\u7684\u4e1c\u897f,\u5b83\u53ef\u4ee5\u957f\u8fd9\u6837`#define int __int128`\u3002\n\n>\u6700\u540e,\u6709\u4e00\u4e2a\u7384\u5b66\u77e5\u8bc6,`main`\u51fd\u6570\u4e0d\u4ec5\u53ef\u4ee5\u662f`int`,\u4e5f\u53ef\u4ee5\u662f`signed`\u3002\n\n**~~\u57fa\u7840\u7384\u5b66\u77e5\u8bc6\u4ecb\u7ecd\u5b8c\u6bd5\u3002~~**\n\n\u63a5\u4e0b\u6765\u8bf4\u8bf4\u5982\u4f55$DP$\u3002\n\n\u9996\u5148\u6211\u4eec\u4ec5\u8003\u8651\u6bcf\u4e00\u884c\u5982\u4f55\u53d6(\u5177\u4f53\u539f\u56e0\u81ea\u884c\u770b\u9898)\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u884c,\u6211\u4eec\u4ec5\u8003\u8651\u53d6\u5934\u4e0e\u53d6\u5c3e\u7684$max$\u503c(\u5177\u4f53\u539f\u56e0\u540c\u4e0a)\u3002\n\n\u7136\u540e\u5b9a\u4e49$f_{i,j}$\u4e3a\u53d6\u533a\u95f4$[i,j]$\u7684\u6700\u5927\u503c,\u5b9a\u4e49$a_i$\u4e3a\u8be5\u884c\u7b2c$i$\u4e2a\u6570\u3002\n\n\u5219\u8f6c\u79fb\u65b9\u7a0b\u4e3a:  \n$f_{i,j}=\\max{f_{i+1,j}+a_i \\times x,f_{i,j-1}+a_j \\times x},x$\u4e3a\u9898\u76ee\u8bf4\u7684\u8981\u52a0\u7684\u6570\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u964d\u7ef4~~\u6253\u51fb~~\u3002\n\n\u4f60\u60f3,\u5982\u679c\u53d6\u7684\u65f6\u5019\u5148\u4e58\u4e0a\u4e00\u4e2a2,\u7136\u540e\u6bcf\u6b21\u9047\u5230\u4e00\u4e2a\u533a\u95f4\u65f6\u5728\u4e582,\u6700\u540e\u6548\u679c\u5176\u5b9e\u662f\u4e00\u6837\u7684\u3002\n\n\u6240\u4ee5$DP$\u5f0f\u53d8\u6210:    \n$f_{i,j}=\\max{2 \\times f_{i+1,j}+2 \\times a_i,2 \\times f_{i,j-1}+2 \\times a_j}$\n\n\u5316\u7b80\u4e3a:    \n$f_{i,j}=\\max{2 \\times (f_{i+1,j}+a_i),2 \\times (f_{i,j-1}+a_j)}$\n\n\u5373\u6838\u5fc3\u4ee3\u7801\u4e3a\n```cpp\nint dp(int sum[])\n{\n\tmemset(f,0,sizeof(f));\n\tint i,j;\n\tfor(i=0;i<=m;i++)\t\t\t//i\u679a\u4e3e\u957f\u5ea6,\u6ce8\u610f,\u957f\u5ea6\u53ef\u4ee5\u4e3a0\u3002\n\t\tfor(j=1;i+j<=m;j++)\t\t//j\u679a\u4e3e\u8d77\u70b9\u3002\n\t\t\tf[j][i+j]=max(2*(f[j+1][i+j]+sum[j]),2*(f[j][i+j-1]+sum[i+j]));\n\treturn f[1][m];\t\t\t\t//\u6700\u540e\u6240\u6c42\u533a\u95f4\u4e3af[1][m]\u3002\n}\n```\n\n\u7136\u540e\u4f7f\u7528\u6211\u4eec\u7684~~\u57fa\u7840\u7384\u5b66\u77e5\u8bc6~~\u3002\n\n\u679c\u65adCE,\u6ca1\u731c\u9519\u5427?\n\n**`__int128`\u4e0d\u81ea\u5e26\u8f93\u5165\u8f93\u51fa!!!**\n\n[\u8fd9\u91cc](https://www.cnblogs.com/Garbage-Only-one/p/10541980.html)\u63d0\u4f9b\u5feb\u8bfb\u5feb\u5199\u7684\u677f\u5b50\u3002\n\n\u6700\u540e\u653e\u4e2a\u603b\u4ee3\u7801\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int __int128\nint a[90][90];\nint f[90][90];\nint n,m;\ntemplate<typename T>void qin(T &x)\n{\n    x=0;\n    char ch;bool f=0;\n    ch=getchar();\n    while(!isdigit(ch)&&ch!='-') ch=getchar();\n    if(ch=='-') ch=getchar(),f=1;\n    while(isdigit(ch)) x=x*10+ch-'0',ch=getchar();\n    if(f==1) x=-x;\n}\nvoid qout(int x)\n{\n     if(x<0) putchar('-'),x=-x;\n     if(x>9) qout(x/10);\n     putchar(x%10+'0');\n}\nint dp(int sum[])\n{\n\tmemset(f,0,sizeof(f));\n\tint i,j;\n\tfor(i=1;i<=m;i++)\n\t\tfor(j=1;i+j<=m;j++)\n\t\t\tf[j][i+j]=max(2*(f[j+1][i+j]+sum[j]),2*(f[j][i+j-1]+sum[i+j]));\n\treturn f[1][m];\n}\nint main()\n{\n\tqin(n),qin(m);\n\tint i,j;\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=m;j++)\n\t\t\tqin(a[i][j]);\n\tint ans=0;\n\tfor(i=1;i<=n;i++)\n\t\tans+=dp(a[i]);\n\tqout(ans);\n\treturn 0;\n}\n```",
        "postTime": 1567157037,
        "uid": 104380,
        "name": "garbage2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "\u901b\u4e86\u901b\u53d1\u73b0\u548c\u5927\u5bb6\u7684\u505a\u6cd5\u4e0d\u592a\u4e00\u6837\u3002\u3002\n\n\u672c\u4eba\u7684\u601d\u8def\u6bd4\u8f83\u6734\u7d20\u3002\u3002\u53ef\u80fd\u8fb9\u754c\u4e5f\u5c11\u4e00\u70b9\u3002\u3002\n\n\u5c31\u662f\u4ee4$f[i][j]$\u8868\u793a\u53d6\u4e86$i$\u4e2a\u6570\uff0c\u5176\u4e2d\u5de6\u8fb9\u53d6\u4e86$j$\u4e2a\u6570\u6240\u80fd\u8fbe\u5230\u7684\u6700\u5927\u503c\n\n\u5176\u4ed6\u5c31\u5f88\u597d\u60f3\u4e86\u3002\u3002\n\n\u6ce8\u610f\u8981\u7528\u9ad8\u7cbe\u5ea6\uff0c\u672c\u83dc\u9e21\u9009\u62e9\u4e86int128.....\n\n```cpp\n#include <iostream>\n#include <cstdlib>\n#include <algorithm>\n\nusing namespace std;\n\n#define ll __int128\nconst int MAXN = 5e5 + 7;\nconst int INF = 2.1e9;\n\nint n, m;\nll a[100];\nll f[100][100];\nll ans[100];\n\ninline __int128 read(){\n    __int128 x=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){\n        if(ch=='-')\n            f=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9'){\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\n\ninline void print(__int128 x){\n    if(x<0){\n        putchar('-');\n        x=-x;\n    }\n    if(x>9)\n        print(x/10);\n    putchar(x%10+'0');\n}\n\nvoid fun(int x){\n    memset(f, 0, sizeof(f));\n    for(int i = 1; i <= m; i++) //\u5171\u53d6\u4e86i\u4e2a\u6570\n        for(int j = 0; j <= i; j++){ //\u5176\u4e2d\u53d6\u4e86j\u4e2a\u5de6\u8fb9\u7684\u6570\n            if(j > 0) f[i][j] = max(f[i][j], f[i-1][j-1] + (a[j] << i));\n            int right = i - j;\n            if(j < i){\n               // printf(\"right = %d, a[%d]=%d, f[%d][%d] = %d\\n\", right, m + 1 - right, a[m+1-right], i, j, f[i][j]);\n                f[i][j] = max(f[i][j], f[i-1][j] + (a[m + 1 - right] << i));\n            }\n            ans[x] = max(ans[x], f[i][j]);\n        }\n}\n\nint main(){\n    cin >> n >> m;\n    ll sum = 0;\n    for(int i = 1; i <= n; i++){\n        for(int j = 1; j <= m; j++)\n            a[j] = read();\n        fun(i);\n        sum += ans[i];\n    }\n    print(sum);\n}\n\n```\n",
        "postTime": 1567001985,
        "uid": 137010,
        "name": "Skyler1017",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011\u4e0d\u7528\u533a\u95f4DP"
    },
    {
        "content": "\u63a8\u8350\u5230[\u6211\u7684\u535a\u5ba2](https://ticmis.com)\u98df\u7528\n\n\u751f\u5e73\u7b2c\u4e00\u6b21\u72ec\u7acb\u505a\u51fa\u548c\u7701\u9009\u6cbe\u8fb9\u7684\u9898\uff0c\u53d1\u4e2a\u9898\u89e3\u8bb0\u5f55\u4e00\u4e0b\u266a(\uff3e\u2200\uff3e\u25cf)\uff89\n\n\u548c\u5927\u90e8\u5206\u9898\u89e3\u4e00\u6837\uff0c\u7528\u5230\u4e86dp\u601d\u60f3\uff1a\u533a\u95f4(l,r)\u53ef\u4ee5\u7531\u5de6\u9762\u53d6\u5f97\u4e00\u4e2a\u6570\u5b57{(l-1.r)}\uff0c\u6216\u8005\u662f\u53f3\u9762\u53d6\u4e00\u4e2a\u6570\u5b57{(l,r+1)}\u83b7\u5f97\uff0c\u53d6\u4e24\u8005\u4e4b\u95f4\u7684\u6700\u5927\u503c\u5373\u4e3a\u6700\u4f18\u89e3\u3002\n\n\u56e0\u6b64\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\t\u5982\u679c l\u4e0d\u662f\u533a\u95f4\u7684\u5de6\u8fb9\u754c\uff08 1 \uff09\n    \t\u90a3\u4e48\u5c31\u53ef\u4ee5\u7531\u5de6\u9762\u63a8\u8fc7\u6765\n        ans1=f[l-1][r]+num[l-1]*2(\u7684\u500d\u6570)\n        \n    \u5982\u679c r\u4e0d\u662f\u533a\u95f4\u7684\u53f3\u8fb9\u754c\uff08 m \uff09\n    \t\u90a3\u4e48\u5c31\u53ef\u4ee5\u7531\u53f3\u9762\u63a8\u8fc7\u6765\n        ans2=f[l][r+1]+num[r+1]*2(\u7684\u500d\u6570)\n        \n   \t f[l,r]=max(ans1,ans2);\n     \n     \n\u90a3\u4e48\u7a0b\u5e8f\u5c31\u53ef\u4ee5\u51fa\u7089\u4e86\u3002\n\n\u4f46\u662f\uff0c\u8fd9\u4e48\u505a\u53ea\u80fd\u5f97\u523060\u5206\uff0c\u56e0\u4e3a\u6570\u636e\u9650\u5236\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u9ad8\u7cbe\u5ea6\u624d\u80fdac\n\n\u6211\u770b\u5230\u5f88\u591a\u9898\u89e3\u63d0\u5230\u4e86int128\u8fd9\u4e48\u4e00\u4e2a\u73a9\u610f\u513f\uff0c\u4f46\u662f\u53d1\u73b0\u6211\u7684\u7f16\u8bd1\u5668(dev)\u5c45\u7136\u4e0d\u8ba4\uff0c\u800c\u4e14\u7f51\u4e0a\u67e5\u4e86\u67e5\u8d44\u6599\u611f\u89c9\u8fd9\u4e2a\u73a9\u610f\u513f\u5e76\u4e0d\u662f\u5584\u832c...\n\n\u4ed4\u7ec6\u89c2\u5bdf\u9898\u610f\uff0c\u53d1\u73b0\u6bcf\u4e00\u6b21\u7684\u5f97\u5206\u90fd\u5fc5\u5b9a\u662f2\u7684\u500d\u6570\u3002\u90a3\u4e48...\u5c31\u53ef\u4ee5\u6a21\u62df\u4e00\u4e0b\u4e8c\u8fdb\u5236\u3002\n\n\u5f00\u4e86201\u4e2a\u6570\u7ec4(\u9632\u6b62re\u561b,\u5177\u4f53\u591a\u5c11\u6211\u4e5f\u6ca1\u7b97),\u5229\u7528\u7c7b\u4f3c\u4e8e\u5feb\u901f\u5e42\u7684\u601d\u60f3,\u82e5\u5f53\u524d\u8981\u5047\u5982\u4e00\u4e2ax*2^m\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u4ece\u7b2cm+1\u7684\u4f4d\u7f6e\uff08\u56e0\u4e3a\u4e8c\u8fdb\u5236\u91cc\u7b2c\u4e00\u4f4d\u662f2^0)\u5f00\u59cb,\u5c06x\u6253\u6210\u4e8c\u8fdb\u5236,\u6bcf\u4e00\u6b21\u90fdx>>=1\u5411\u53f3\u6eda\u52a8\uff0c\u6eda\u52a8\u4e86n\u4f4d\u4e4b\u540e\uff0c\u5f53x&1==1\u4e86\uff0c\u90a3\u4e48\u5c31\u628a\u6570\u7ec4\u7684m+n+1\u4f4d++\u3002\n\n\u5982\u6b64\u4e00\u6765\uff0c\u53ea\u9700\u8981\u5728\u6700\u540e\u4e00\u6b21\u8f93\u51fa\u65f6\uff0c\u5c06\u5f97\u5230\u7684\u4e8c\u8fdb\u5236\u6570\u8f6c\u5316\u4e3a\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u5341\u8fdb\u5236\u6570\uff0c\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002\n\n\u8fd9\u91cc\uff0c\u6709\u51e0\u70b9\u6211\u505a\u9898\u65f6\u88ab\u5751\u4e86\uff0c\u6c47\u603b\u4e00\u4e0b\uff1a\n1. \u91c7\u7528\u8fd9\u79cd\u5904\u7406\u65b9\u6cd5\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e8c\u8fdb\u5236\u6570\u7ec4\u7684\u67d0\u4e00\u4f4d\u7f6e\u7684\u503c>=2,\u56e0\u6b64\u4e0d\u80fd\u8d2a\u7a7a\u95f4\u800c\u5f00bool\u578b\u6570\u7ec4\uff0c\u5e76\u4e14\u6bcf\u4e00\u6b21\u64cd\u4f5c\u540e\u90fd\u8981\u68c0\u67e5\u4e00\u904d\uff0c\u5c06>=2\u7684\u6570\u4f4d\u5411\u4e0a\u8fdb\u4f4d\n\n2. \u5728\u6700\u7ec8\u8f93\u51fa\u7b54\u6848\u7684\u65f6\u5019,\u8981\u7279\u5224\u4e00\u4e0b\u957f\u5ea6\u662f\u5426\u4e3a\u96f6\u3002\u5426\u5219\u53ef\u80fd\u56e0\u4e3a\u7b54\u6848\u5c31\u662f0\uff0c\u4f46\u957f\u5ea6\u8ba4\u4e3a0\u800c\u4e0d\u8f93\u51fa\u4efb\u4f55\u7ed3\u679c\u3002\uff08\u6211\u5c31\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\u5f97\u4e8690\u5206\uff0c\u7b2c\u4e00\u4e2a\u70b9wa\u4e86\uff09\n\n3. \u4e8c\u8fdb\u5236\u7684\u7b2c\u4e00\u4f4d\u662f2^0\u56e0\u6b64\u52a0\u4e00\u4e2a\u6570\u5b57\u7684\u65f6\u5019\uff0c\u4f8b\u5982x*2^m\uff0c\u4e00\u5b9a\u8981\u4ecem+1\u5f00\u59cb\uff01\n\n4. \u5404\u79cd\u6742\u4e03\u6742\u516b\u7684\u8fdb\u4f4d\u5904\u7406\u95ee\u9898,\u53ea\u80fd\u8bf4\u5904\u7406\u7684\u65f6\u5019\u8981\u5c0f\u5fc3.\u5343\u4e07\u5c0f\u5fc3!\u5f53\u4f60\u60c6\u6005\u4e86\u534a\u5929\u67e5\u4e0d\u51fabug,\u7ed3\u679c\u53d1\u73b0\u628a+=\u5199\u6210++\u4e86\uff0c\u90a3\u611f\u89c9......\n\n\n\u6700\u540e\u9644\u4e0a\u4ee3\u7801\uff0c\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u957f\u5ea6\u62ff\u634f\u4e0d\u597d                \n( # \u25bd # )\n\n```\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#include<cstring>\nusing namespace std;\n\nint n,m,num[81][81],ans[201],ansp[201],f[81][81][201];\n\nvoid work(int[]);\nvoid adjust(int[]);\nvoid intcpy(int[],int[]);\nint intcmp(int[],int[]);\nvoid intplus(int[],int[]);\nvoid print(int[]);\n\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;++i){\n        for(int j=1;j<=m;++j){\n            scanf(\"%d\",&num[i][j]);\n        }\n    }\n    for(int i=1;i<=n;++i){\n        work(num[i]);\n        intplus(ans,ansp);\n        adjust(ans);\n    }\n    print(ans);\n    return 0;\n}\n\nvoid work(int x[]){\n    memset(f,0,sizeof(f));\n    for(int i=1;i<=m;++i){\n        for(int j=m;j>=i;--j){\n            //\u6000\u7591\u662f\u4e0d\u662fcnt\u7684\u9b3cm-j+i\uff1b \n            int cnt=m-j+i,ans1[201]={0},ans2[201]={0};\n            //if(i>1) f[i][j]=max(f[i][j],f[i-1][j]+x[i-1]*cnt);\n            if(i>1){\n                intcpy(ans1,f[i-1][j]);\n                int tmpcnt=cnt,plust=x[i-1];\n                while(plust){\n                    if(plust&1){\n                        ans1[tmpcnt]++;\n                    }\n                    tmpcnt++;plust>>=1;\n                }\n                adjust(ans1);\n            }\n            //if(j<m) f[i][j]=max(f[i][j],f[i][j+1]+x[j+1]*cnt);\n            if(j<m){\n                intcpy(ans2,f[i][j+1]);\n                int tmpcnt=cnt,plust=x[j+1];\n                while(plust){\n                    if(plust&1){\n                        ans2[tmpcnt]++;\t\n                    }\n                    tmpcnt++;plust>>=1;\n                }\n                adjust(ans2);\n            }\n            if(intcmp(ans1,ans2)>=1){\n                intcpy(f[i][j],ans1);\n            }\n            else{\n                intcpy(f[i][j],ans2);\n            }\n        }\n    }\n    for(int i=1;i<=m;++i){\n        //f[i][i]+=(x[i]*cnt);\n        int plust=x[i],cnt=m+1;\n        while(plust){\n            if(plust&1){\n                f[i][i][cnt]+=1;\n            }\n            cnt++;plust>>=1;\n        }\n        adjust(f[i][i]);\n    }\n    int tmp[201]={0};\n    intcpy(tmp,f[1][1]);\n    for(int i=2;i<=m;++i){\n        if(intcmp(tmp,f[i][i])==-1){\n            intcpy(tmp,f[i][i]);\n        }\n    }\n    //wtf?\n    /*for(int i=tmp[0];i>=1;--i){\n        tmp[i+1]=tmp[i];\n    }\n    tmp[1]=0;tmp[0]=tmp[0]+1;*/\n    //\n    memset(ansp,0,sizeof(ansp));\n    intcpy(ansp,tmp);\n}\n\nvoid adjust(int a[]){\n    for(int i=1;i<=201;++i){\n        /*int cnt=i,tmp=a[i];a[i]=0;\n        while(tmp){\n            if(tmp&1) a[cnt]++;\n            cnt++;tmp>>=1;\n        }*/\n        a[i+1]+=a[i]/2;\n        a[i]%=2;\n    }\n    int len=200;\n    while(a[len]==0&&len>1){\n        len--;\n    }\n    a[0]=len;\n}\n\nvoid intcpy(int a[],int b[]){\n    for(int i=0;i<=b[0];++i){\n        a[i]=b[i];\n    }\n}\n\nint intcmp(int a[],int b[]){\n    if(a[0]>b[0]) return 1;\n    if(a[0]<b[0]) return -1;\n    for(int i=a[0];i>=1;--i){\n        if(a[i]>b[i]) return 1;\n        if(a[i]<b[i]) return -1;\n    }\n    return 0;\n}\n\nvoid intplus(int a[],int b[]){\n    int len=1;\n    while(len<=a[0]||len<=b[0]){\n        a[len]+=b[len];\n        len++;\n    }\n    len=200;\n    while(a[len]==0&&len>1) len--;\n    a[0]=len;\n}\n\nvoid print(int x[]){\n    int ans[200]={0},plust[200]={0};\n    plust[0]=1;plust[1]=1;\n    for(int i=1;i<=x[0];++i){\n        if(x[i]==1){\n            //plus model:\n            int len=1;\n            while(len<=plust[0]||len<=ans[0]){\n                ans[len]+=plust[len];\n                ans[len+1]+=ans[len]/10;\n                ans[len]%=10;\n                len++;\n            }\n            if(ans[len]==0) len--;\n            ans[0]=len;\n        }\n        //time model:\n        int k=0;\n        for(int i=1;i<=plust[0];++i){\n            plust[i]*=2;\n            plust[i]+=k;\n            k=plust[i]/10;\n            plust[i]%=10;\n        }\n        if(k!=0) plust[++plust[0]]=k;\n    }\n    if(ans[0]==0){\n    \tprintf(\"0\");\n    }\n    else{\n   \t\tfor(int i=ans[0];i>=1;--i){\n   \t\t    \tprintf(\"%d\",ans[i]);\n    \t\t}\n    \tprintf(\"\\n\");\n\t}\n}\n```",
        "postTime": 1534227108,
        "uid": 71902,
        "name": "ticmis",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "<\u697c\u4e0b\u4e94\u4f4d\u600e\u4e48\u90fd\u662f\u6c34\u8fc7\u7684\u5440\u3002>\n\n<\u6211\u89c9\u5f97\u7ec3\u4e60\u9ad8\u7cbe\uff0c\u8fd9\u9898\u53ef\u4ee5\u4f5c\u5927Boss\u4e86\uff0cFFT\u6bd5\u7adf\u666e\u53ca/\u63d0\u9ad8\u4e0d\u8003\u5440>\n\n\n\u9996\u5148\uff0cDp\u65b9\u7a0b\u697c\u4e0b\u8bb2\u7684\u975e\u5e38\u6e05\u695a\uff0c\u6211\u4e0d\u518d\u591a\u8bf4\uff1b\n\n\u6211\u4e3b\u8981\u63d0\u4f9b\u9ad8\u7cbe\u90e8\u5206\u7684\u53c2\u8003\u4ee3\u7801\u3002\n\n\n\u8be6\u89c1\u4ee3\u7801\u4e2d\uff1a\n\n\n```cpp\n Add(a,b,c)   c=a+b;\n Mul(a,b,c)   c=a*b;\n Cmp(a,b)     a>b\n Copy(a,b)    a=b\n```\n\u6211\u4f7f\u7528\u7684\u662f\u4f20\u5f15\u7528\uff1a\n void Add(bint &A,bint &B,bint &C)\n\n\u8fd9\u6837\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539\u539f\u6570\uff0c\u907f\u514d\u53d8\u91cf\u7684\u590d\u5236\uff08\u8017\u65f6\uff09\n\n\u80fd\u4e0d\u7528\u6307\u9488\uff0c\u5c3d\u91cf\u907f\u514d\uff01\n\n\n\u6211\u8fdb\u884c\u7684\u538b\u4f4d\u662f\u4e07\u8fdb\u5236-->\u8fd9\u6837\u9ad8\u7cbe\u4e58\u6cd5(\u672c\u9898\u6ca1\u6709)\u4e0d\u4f1a\u6ea2\u51fa\n\n\n\u53e6\u5916\u6ce8\u610f\u8f93\u51fa\u90e8\u5206\uff1a\n\n    printf(\"%d\",Ans[L]);\n\n    for(i=L-1;i;i--)\n\n     printf(\"%04d\",Ans[i]);\n\n\u8fd9\u6837\u5f88\u65b9\u4fbf\u3002\n\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <memory.h>\nusing namespace std;\nconst int M=10000,N=50;\nint n,m,a[100];\nstruct bint{\n    int x[N],l;\n}p[100],f[83][83],ans;\nvoid Add(bint &A,bint &B,bint &C){\n    int i,L=max(A.l,B.l),s[N]={0},*a=A.x,*b=B.x,*c=C.x;\n    for(i=1;i<=L;i++)s[i]=a[i]+b[i];\n    for(i=1;i<=L;i++)s[i+1]+=s[i]/M,s[i]%=M;\n    if(s[i])L=i; C.l=L;\n    memset(C.x,0,sizeof(C.x));\n    for(i=1;i<=L;i++)c[i]=s[i];\n}\nvoid Mul(bint &A,int B,bint &C){\n    int i,j,L=A.l,s[N]={0},*a=A.x,*c=C.x;\n    for(i=1;i<=L;i++)s[i]=a[i]*B;\n    for(i=1;i<=L;i++)\n        s[i+1]+=s[i]/M,s[i]%=M;\n    if(s[i])L=i; C.l=L;\n    memset(C.x,0,sizeof(C.x));\n    for(i=1;i<=L;i++)c[i]=s[i];\n}\nvoid Copy(bint &A,bint &B){\n    int *a=A.x,*b=B.x,i;\n    fill(a,a+N,0); A.l=B.l;\n    for(i=1;i<=A.l;i++)\n     a[i]=b[i];\n}\nbool Cmp(bint &A,bint &B){\n    int i,L=max(A.l,B.l);\n    if(L>B.l)return true;\n    if(L>A.l)return false;\n    int *a=A.x,*b=B.x;\n    for(i=L;i;i--){\n        if(a[i]>b[i])return true;\n        if(a[i]<b[i])return false;\n    }\n    return true;\n}\nvoid init(){\n    p[0].x[1]=1; p[0].l=1;\n    for(int i=1;i<=m;i++)\n        Mul(p[i-1],2,p[i]);\n    ans.l=1;\n} //\u9884\u5904\u74062^i (i<--1~m)\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    init();\n    for(int k=1;k<=n;k++){\n        memset(f,0,sizeof(f));\n        for(int i=1;i<=m;i++){\n            scanf(\"%d\",&a[i]),\n            Mul(p[m],a[i],f[i][i]);\n        }\n        //\u533a\u95f4\u52a8\u6001\u89c4\u5212\n        for(int l=2;l<=m;l++)\n         for(int i=1;i+l-1<=m;i++){\n             int j=i+l-1;\n             bint f1,f2;\n             Mul(p[m-l+1],a[i],f1);\n             Mul(p[m-l+1],a[j],f2);\n             Add(f1,f[i+1][j],f1);\n             Add(f2,f[i][j-1],f2);\n             if(Cmp(f1,f2))Copy(f[i][j],f1);\n             else Copy(f[i][j],f2);\n         }\n        Add(ans,f[1][m],ans);\n    }\n    int *Ans=ans.x,L=ans.l,i;\n    printf(\"%d\",Ans[L]);\n    for(i=L-1;i;i--)\n     printf(\"%04d\",Ans[i]);\n    return 0;\n}\n```",
        "postTime": 1510578415,
        "uid": 13052,
        "name": "iostream",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u771f\u7684\u628a\u6211\u505a\u75af\u4e86\n\n\n\u4f5c\u4e3a\u4e00\u4e2aPJ\u7684\u849f\u84bb\u505a\u6d77\u4e4b\u84dd\uff08\u9898\u76ee\u989c\u8272\uff09\u7684\u9898\u679c\u7136\u8fd8\u662f\u592a\u52c9\u5f3a\u4e86\u5417\u2026\u2026\n\n\n\u597d\u5427\u5e94\u8be5\u662f\u6211\u592a\u84bb\u4e86\n\n\n\u5982\u679c\u4f60\u548c\u6211\u4e00\u6837 \u662f\u4e2a\u849f\u84bb \u90a3\u8fd8\u662f\u7528\\_\\_int128\u5427\n\n\n\u7b2c\u4e00\u904d\u82b1\u4e86\u4e00\u4e2a\u591a\u5c0f\u65f6\u6253\u9ad8\u7cbe \u53c8\u8c03\u4e86\u534a\u4e2a\u591a\u5c0f\u65f6 \u7ed3\u679c\u662f 6WA 3TLE 1AC\n\n\n\u5f53\u573a\u75af\u6389\uff08\u597d\u5427\u662f\u6211\u592a\u84bb\u4e86\u4e0d\u4f1a\u5199\u538b\u4f4d\uff09\n\n\n\u8bc9\u82e6\u5230\u8fd9\u91cc\uff0c\u63a5\u4e0b\u6765\u8bb2\u601d\u8def\uff1a\n\n\n\u8fd9\u9898\u80af\u5b9a\u662fdp\u65e0\u8bef\uff0c\u4ed4\u7ec6\u770b\u4f1a\u53d1\u73b0\u8fd9\u662f\u4e00\u9053\u533a\u95f4dp\n\n\n\u6bd5\u7adf\u76f4\u63a5\u5728\u77e9\u5f62\u4e0a\u505adp\u4ec0\u4e48\u7684\u8fd8\u662f\u592a\u96be\u4e86\n\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u8bbe f[i][j] \u8868\u793a\u5de6\u4fa7\u4e3a i \u4e14 \u53f3\u4fa7\u4e3a j \u65f6\u80fd\u62ff\u5230\u7684\u6700\u5927\u5206\u6570\n\n\n\u4ee5\u53ca\u6bcf\u884c\u90fd\u8981\u505a\u4e00\u904d\n\n\n\u53ef\u4ee5\u5f97\u8f6c\u79fb\u65b9\u7a0b:\n\n\n$f[i][j]=max(f[i-1][j]+{2}^{n-j+i}*a[i-1] ,f[i][j+1]+{2}^{n-j+i}*a [j+1])$\n\n\n\u7136\u540e~~\u778e\u641e\u4e00\u901a~~\u5c31\u884c\u4e86\n\n\n\u4e5f\u5c31\u662f\u8981\u6c42\u51fa\u6574\u884c\u7684\u5206\u6570\n\n\n\u5f53\u7136\u6bcf\u884c\u90fd\u8981\u505a\u4e00\u904d\n\n\n\u5177\u4f53\u89c1\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,a[105];\n__int128 f[105][105],t[105],Ans;//__int128\u5927\u6cd5\u597d NOI\u7cfb\u5217\u8d5b\u4e8b\u4e0d\u63a8\u8350\u4f7f\u7528 \u5e94\u8be5\u4f1a\u72060 \ninline int read()\n{\n    int s=0,f=1;\n    char c=getchar();\n    while(c<'0' || c>'9')\n    {\n        if(c=='-') f=-1;\n        c=getchar();\n    }\n    while(c>='0' && c<='9')\n    {\n        s=s*10+c-48;\n        c=getchar();\n    }\n    return s*f;\n}//\u5feb\u8bfb \nvoid Print(__int128 x)\n{\n    if(x==0) return;\n    else if(x) Print(x/10);\n    putchar(x%10+'0');\n}//\u6bd4\u8f83\u7384\u5b66\u7684\u8f93\u51fa \u6211\u8bb0\u5f97\u672c\u84bb\u83dc\u5f88\u4e45\u4e4b\u524d\u7528\u8fc7\u8fd9\u79cd\u8f93\u51fa \u5fd8\u8bb0\u90a3\u9053\u9898\u76ee\u4e86 \nint main()\n{\n    n=read();\n    m=read();\n    t[0]=1;\n    for(int i=1;i<=m;i++) t[i]=t[i-1]*2;//\u521b\u5efa\u4e00\u4e2a2\u7684\u6b21\u65b9\u7684\u8868\uff0c\u4ee5\u4fbf\u4e8e\u8fd0\u7b97 \n    for(int X=1;X<=n;X++)\n    {\n        for(int Y=1;Y<=m;Y++) a[Y]=read();\n        memset(f,0,sizeof(f));\n        for(int i=1;i<=m;i++)\n        {\n            for(int j=m;j>=i;j--) f[i][j]=max(f[i-1][j]+t[m-j+i-1]*a[i-1],f[i][j+1]+t[m-j+i-1]*a[j+1]);\n        }//\u8f6c\u79fb\u65b9\u7a0b \n        __int128 MaxN=-1;\n        for(int i=1;i<=m;i++) MaxN=max(MaxN,f[i][i]+t[m]*a[i]);//\u6c42\u51fa\u6574\u884c\u7684\u6700\u5927\u5f97\u5206 \n        Ans+=MaxN;//\u518d\u52a0\u4e0a\u8fd9\u4e00\u884c\u7684\u5206\u6570 \n    }\n    if(Ans==0) printf(\"0\");//\u9632\u6b620\u7684\u76f4\u63a5return\u800c\u4e0d\u8f93\u51fa \n    else Print(Ans);//\u8f93\u51fa\uff0c\u7ed3\u675f \n    return 0;\n}\n```",
        "postTime": 1509684082,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "//\u672c\u9898\u4e2d\u662f\u6c42\u6bcf\u884c\u7684\u6700\u5927\u503c\u4e4b\u548c\uff0c\u6240\u4ee5\u884c\u4e0e\u884c\u4e4b\u95f4\u76f8\u5bf9\u72ec\u7acb\n\n//\u5bf9\u4e8e\u6c42\u6bcf\u4e00\u884c\u7684\u6700\u5927\u503c\uff0c\u4e0d\u80fd\u7528\u8d2a\u5fc3\uff0c\u5982 3 1 1 99 2 \u53d6\u6570\u987a\u5e8f\u5e94\u662f3-1-1-2-99 \u4f46\u8d2a\u5fc3\u987a\u5e8f\u662f2-3-1-1-99\n\n\n\n\n\n\n\n```cpp\n//\u7531\u4e8e100%\u6570\u636e\u8303\u56f4\u8d85\u51falong long \u6545\u91c7\u7528\u9ad8\u7cbe \n//\u7531\u9898\u610f\u53ef\u77e5\uff0c\u8d8a\u5f80\u540e\u53d6\u5f97\u6570\u5b57\uff0c\u4e58\u7684\u503c\u8d8a\u5927\n//\u53ef\u4ee5\u53cd\u5411\u6765\u770b\uff0c\u4ece\u4e2d\u95f4\u5f80\u4e24\u8fb9\u53d6\u6570\uff0c\u6bcf\u6b21\u90fd\u5728\u539f\u6765\u6570\u5b57\u4e4b\u548c*2+\u73b0\u53d6\u6570\uff0c\u5982\u6b64\u4fbf\u53ef\u4e0d\u9884\u5904\u74062\u7684n\u6b21\u65b9 \n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int maxn=80+10;\nstruct BIGNUM {\n    int num[maxn],len;\n    BIGNUM(){memset(num,0,sizeof(num));len=1;}\n    BIGNUM operator = (const char str[]) {\n        len=strlen(str);\n        for(int i=0;i<len;i++)\n            num[i]=str[len-i-1]-'0';\n        while(num[len-1]==0&&len>1) len--;\n        return *this;\n    }\n    BIGNUM operator = (const int n) {\n        int tmp=n;\n        len=1;\n        do {\n            num[len-1]=tmp%10;\n            tmp/=10;len++;\n        }while(tmp>0);\n        while(num[len-1]==0&&len>1) len--;\n        return *this;\n    }\n    BIGNUM operator + (const BIGNUM &rhs) const {\n        BIGNUM tmp;\n        tmp.len=max(len,rhs.len)+1;\n        for(int i=0;i<tmp.len;i++) {\n            tmp.num[i]+=num[i]+rhs.num[i];\n            tmp.num[i+1]=tmp.num[i]/10;\n            tmp.num[i]%=10;\n        }\n        while(tmp.num[tmp.len-1]==0&&tmp.len>1) tmp.len--;\n        return tmp;\n    }\n    BIGNUM operator * (const BIGNUM &rhs) const {\n        BIGNUM tmp;\n        tmp.len=len+rhs.len;\n        for(int i=0;i<len;i++)\n            for(int j=0;j<rhs.len;j++) {\n                tmp.num[i+j]+=num[i]*rhs.num[j];\n                tmp.num[i+j+1]+=tmp.num[i+j]/10;\n                tmp.num[i+j]%=10;\n            }\n        while(tmp.num[tmp.len-1]==0&&tmp.len>1) tmp.len--;\n        return tmp;\n    }\n    bool operator < (const BIGNUM &rhs) const {\n        if(len>rhs.len) return false;\n        if(len<rhs.len) return true;\n        for(int i=len-1;i>=0;i--)\n            if(num[i]!=rhs.num[i]) return num[i]<rhs.num[i];\n        return false;\n    }\n    void print() {\n        for(int i=len-1;i>=0;i--) printf(\"%d\",num[i]);\n    }\n}dp[maxn][maxn];\nBIGNUM ans;\nint a[maxn];\nint main()\n{\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    BIGNUM pow;\n    pow=2;\n    for(int i=1;i<=n;i++) {\n        memset(dp,0,sizeof(dp));\n        for(int j=1;j<=m;j++) {\n            scanf(\"%d\",&a[j]);\n            dp[j][j]=a[j]*2;\n        }\n        for(int x=2;x<=m;x++)\n            for(int l=1;l<=m;l++) {\n                int r=l+x-1;\n                if(r>m) continue;\n                dp[l][r]=max(dp[l+1][r]*pow+dp[l][l],dp[l][r-1]*pow+dp[r][r]);\n            }\n        ans=ans+dp[1][m];\n    }\n    ans.print();\n    return 0;\n}\n```",
        "postTime": 1472967895,
        "uid": 13239,
        "name": "Continue",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7684DP\u601d\u60f3\u8fd8\u662f\u5f88\u597d\u60f3\u7684\uff0c\u7531\u4e8e\u6bcf\u4e00\u884c\u7684\u53d6\u6570\u76f8\u4e92\u72ec\u7acb\uff0c\u56e0\u6b64\u5bf9\u6bcf\u4e00\u884c\u5206\u522b\u8fdb\u884cDP\u3002\u6211\u7684\u601d\u8def\u662f\u5b9a\u4e49\u72b6\u6001$dp[t][i][j]$\u4e3a\u4ecei\u5f00\u59cb\u5230j\u7ed3\u675f\u7684\u4e32\u4e2d\u53d6\u524d\u4e00\u4e2a\u6570(t==0)\u6216\u662f\u540e\u4e00\u4e2a\u6570(t==1)\u7684\u6700\u5927\u503c,\u8f6c\u79fb\u65b9\u7a0b\u4e3a\n\n$dp[t][i][j] = max(dp[0][i-1][j], dp[1][i][j+1])+a[k][f(t)]*2^{m-j+i}$\n\n\u5176\u4e2d\uff0c$f(0)=i, f(1)=j$\n\n\u56e0\u4e3a\u6253\u7684ICPC\u652f\u6301Java\u8bed\u8a00\uff0c\u6240\u4ee5\u6ca1\u6709\u6572\u9ad8\u7cbe\u5ea6\u76f4\u63a5\u4e0a\u4e86Java\u5927\u6574\u578b(\u7136\u800c\u56e0\u4e3a\u4f4d\u8fd0\u7b97\u5df2\u7ecf\u7206\u7cbe\u5ea6\u5374\u8fd8\u662f\u50bb\u50bb\u7684\u8f6c\u6362\u6210\u5927\u6574\u578b\u5bfc\u81f4Debug\u4e00\u4e2a\u4e0a\u5348)\uff0c\u770b\u4e86\u4e0b\u9898\u89e3\u6ca1\u6709\u4eba\u4ea4Java\u9898\u89e3\u5c31\u4ea4\u4e00\u53d1\uff0c\u7ed9\u4e2a\u53c2\u8003 ~~(\u5237\u4e2a\u5495\u503c)~~\n\n~~\u8bdd\u8bf4\u4e00\u822c\u8fd9\u79cd\u5927\u6574\u6570ICPC\u90fd\u662f\u76f4\u63a5\u53d6\u6a21\u4e0d\u8003\u9ad8\u7cbe\u7684\u5427...~~\n\n```java\nimport java.math.BigInteger;\nimport java.util.*;\n\npublic class Main {\n    static BigInteger[][][][] dp = new BigInteger[2][85][85][85];\n    static BigInteger[][] a = new BigInteger[85][85];\n    static BigInteger[] base = new BigInteger[85];\n    static public void main(String[] args){\n        Scanner IN = new Scanner(System.in);\n        int n,m;\n        n = IN.nextInt();\n        m = IN.nextInt();\n        for(int i = 1;i <= n;i++) {\n            for (int j = 1; j <= m; j++)\n                a[i][j] = IN.nextBigInteger();\n        }\n        base[0] = BigInteger.valueOf(1);\n        for(int i = 1;i <= m;i++)\n            base[i] = base[i-1].multiply(BigInteger.valueOf(2));\n        BigInteger ans = BigInteger.valueOf(0);\n        for(int k = 1;k <= n;k++){\n            BigInteger tans = BigInteger.valueOf(0);\n            for(int i = 1;i <= m;i++){\n                for(int j = m;j >= i;j--) {\n                    if (dp[0][k][i - 1][j] == null) dp[0][k][i - 1][j] = BigInteger.valueOf(0);\n                    if (dp[1][k][i][j + 1] == null) dp[1][k][i][j + 1] = BigInteger.valueOf(0);\n                    BigInteger ma = dp[0][k][i - 1][j].max(dp[1][k][i][j + 1]);\n                    BigInteger t = base[m - j + i];\n                    //BigInteger t = BigInteger.valueOf(1<<(m-j+i));\n                    //\u6ce8\u610f\u8fd9\u91cc(1<<(m-j+1))\u5df2\u7ecf\u7206\u51faint\u6574\u5f62\uff0c\u5bfc\u81f4\u8ba1\u7b97\u51fa\u9519\n                    dp[0][k][i][j] = a[k][i].multiply(t).add(ma);\n                    dp[1][k][i][j] = a[k][j].multiply(t).add(ma);\n                }\n                tans = tans.max(dp[0][k][i][i].max(dp[1][k][i][i]));\n            }\n            ans = ans.add(tans);\n        }\n        System.out.println(ans);\n    }\n}\n\n```\n",
        "postTime": 1563597188,
        "uid": 6397,
        "name": "\u6253\u5361\u81f4\u659c\u773c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "\u601d\u60f3\u5c31\u662fdp\u548c\u9ad8\u7cbe\uff1a\n\n\u53d1\u73b0\u6bcf\u4e00\u884c\u6bcf\u6b21\u53d6\u7684\u6570\u90fd\u4e0e\u5176\u4ed6\u884c\u7684\u7ed3\u679c\u65e0\u5173\uff1b\n\n\u6240\u4ee5\u4e00\u884c\u4e00\u884c\u5730\u533a\u95f4dp\uff0c\u8ba1\u7b97\u603b\u5408\u5373\u53ef\uff1b\n\n\u533a\u95f4dp\uff1a\u8bbef[i][k]\u8868\u793a\u5355\u884c\u5185\u8fd8\u5269\u4e0b\u4ee5i\u4e3a\u5de6\u7aef\u70b9\u7684k\u4e2a\u6570\u5b57\u672a\u53d6\u7684\u72b6\u51b5\u7684\u6700\u5927\u5f97\u5206\uff1b\n\n```cpp\nconst jin=100000000;\ntype\n c=array[1..4]of longint;\nfunction max(a,b:c):c; var k:integer;\nbegin\n for k:=4 downto 1 do if a[k]>b[k] then exit(a) else if a[k]<b[k] then exit(b);\n exit(a);\nend;\nfunction jia(a,b:c):c;var i,j,k:longint;\nbegin\n for i:=1 to 3 do\n begin a[i]:=a[i]+b[i];a[i+1]:=a[i+1]+a[i] div jin;a[i]:=a[i] mod jin;end;\n a[4]:=a[4]+b[4];exit(a);\nend;\nfunction jia2(a:c;b:longint):c;\nbegin a[1]:=a[1]+b;a[2]:=a[2]+a[1]div jin;a[1]:=a[1] mod jin;exit(a);end;\nvar\n f:array[0..81,0..81]of c;sum:c; b:array[0..81,0..81]of longint;\n i,j,k,l,n,m:longint;\nbegin\n read(n,m);\n for i:=1 to n do for j:=1 to m do read(b[i,j]);\n for k:=1 to n do begin fillchar(f,sizeof(f),0);\n for i:=m downto 1 do\n  for j:=i to m do\n   begin f[i,j]:=max(jia2(f[i+1,j],b[k,i]),jia2(f[i,j-1],b[k,j]));f[i,j]:=jia(f[i,j],f[i,j]);end;\n sum:=jia(sum,f[1,m]);\n end;\n for i:=4 downto 1 do if sum[i]>0 then begin write(sum[i]);break;end;\n dec(i);  if (i=0)and(sum[1]=0) then write('0');\n while i>0 do\n  begin if sum[i] div 10000000=0 then write('0')\n       else if sum[i] div 1000000=0 then write('00')\n       else if sum[i] div 100000=0 then write('000')\n       else if sum[i] div 10000=0 then write('0000')\n       else if sum[i] div 1000=0 then write('00000')\n       else if sum[i] div 100=0 then write('000000')\n       else if sum[i] div 10=0 then write('0000000');\n       write(sum[i]);\n       dec(i);\n   end;  writeln;\nend.\n```",
        "postTime": 1502186405,
        "uid": 36047,
        "name": "y_p_kongbai12138",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "\u601d\u60f3\u5c31\u662fdp\u548c\u9ad8\u7cbe\uff1a\n\n\u53d1\u73b0\u6bcf\u4e00\u884c\u6bcf\u6b21\u53d6\u7684\u6570\u90fd\u4e0e\u5176\u4ed6\u884c\u7684\u7ed3\u679c\u65e0\u5173\uff1b\n\n\u6240\u4ee5\u4e00\u884c\u4e00\u884c\u5730\u533a\u95f4dp\uff0c\u8ba1\u7b97\u603b\u5408\u5373\u53ef\uff1b\n\n\u533a\u95f4dp\uff1a\u8bbef[i][k]\u8868\u793a\u5355\u884c\u5185\u8fd8\u5269\u4e0b\u4ee5i\u4e3a\u5de6\u7aef\u70b9\u7684k\u4e2a\u6570\u5b57\u672a\u53d6\u7684\u72b6\u51b5\u7684\u6700\u5927\u5f97\u5206\uff1b\n\n\u5219\u53ef\u4ee5\u5f97\u5230\uff1af[i][k]=max\uff08f[i-1][k+1]+p[i-1]\\*2^(m-k)\uff0cf[i][k+1]+p[i+k]\\*2^(m-k)\uff09\uff1b\n\n\u53e6\u5916\u53ef\u4ee5\u628ak\u7684\u5faa\u73af\u653e\u5230\u5916\u9762\uff0c\u6bcf\u6b21\u5728k\u7684\u5faa\u73af\u5185\u5148\u5c06\u6240\u6709\u7684p\u503c\u90fd\\*2\uff0c\n\n\u7136\u540e\u518d\u5faa\u73afi\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528p[]\u4e86\uff1b~~\u8fd8\u4e0d\u662f\u5728\u5077\u61d2\u5c11\u7801\u5b57~~\n\n\u4e0d\u8fc7\u5c31\u8fd9\u6837\u5077\u61d2\u5230\u4e86370+ms\uff0c\u5927\u6982\u4e0d\u6162\uff1b\n\n\u4ee3\u7801\u5982\u4e0b~~\u597d\u957f\u554a~~\uff1a\uff08\u8fc7\u7a0b\u5199\u592a\u591a\u4e86\uff09\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\n    int n,m,z,p[88][88],f[88][88][88],ans[88];    //\u9ad8\u7cbe\u6211\u662f\u538b\u4e8610000\uff0c\u591a\u538b\u5e94\u8be5\u53ef\u4ee5\u66f4\u5feb\n\nvoid cmp_max(int a,int b){  //\u8f6c\u79fb\u8fc7\u7a0b\n    \n    int tmpa[88],tmpb[88];\n    memset(tmpa,0,sizeof(tmpa));\n    memset(tmpb,0,sizeof(tmpb));\n    tmpa[0]=max(f[a-1][b+1][0],p[a-1][0]);  //\u7528xx[0]\u5b58\u957f\u5ea6\uff0c\u4e0b\u540c\n    tmpb[0]=max(f[a][b+1][0],p[a+b][0]);\n    \n    for(int x=1;x<=tmpa[0];x++){\n        tmpa[x]+=f[a-1][b+1][x]+p[a-1][x];\n        tmpa[x+1]+=tmpa[x]/10000;\n        tmpa[x]%=10000;\n    }\n    if(tmpa[ tmpa[0]+1 ])tmpa[0]++;\n    \n    for(int x=1;x<=tmpb[0];x++){\n        tmpb[x]+=f[a][b+1][x]+p[a+b][x];\n        tmpb[x+1]+=tmpb[x]/10000;\n        tmpb[x]%=10000;\n    }\n    if(tmpb[ tmpb[0]+1 ])tmpb[0]++;\n    \n    bool flag=false;\n    for(int x=max(tmpa[0],tmpb[0]);x>0;x--){  //max\u90e8\u5206\n        if(tmpa[x]>tmpb[x])    {    flag=1;    break;    }\n        if(tmpb[x]>tmpa[x])    break;\n    }\n    \n    if(flag){  //\u6700\u503c\u8d4b\u503c\n        for(int x=0;x<=tmpa[0];x++)\n            f[a][b][x]=tmpa[x];\n    }else{\n        for(int x=0;x<=tmpb[0];x++)\n            f[a][b][x]=tmpb[x];\n    }\n    \n    return;\n}\n\nvoid add_mi(int a){  //\u52a0\u5e42\u8fc7\u7a0b\n    int divn=0;\n    \n    for(int x=1;x<=p[a][0];x++){\n        p[a][x]=p[a][x]*2+divn;\n        divn=p[a][x]/10000;\n        p[a][x]%=10000;\n    }\n    \n    if(divn){\n        p[a][0]++;\n        p[a][p[a][0]]=divn;\n    }\n    \n    return;\n}\n\nvoid add_lst(int a){  //\u52a0\u4e0a\u6700\u540e\u4e00\u4e2a\u6570\n    \n    f[a][0][0]=max(f[a][1][0],p[a][0]);\n    for(int x=1;x<=f[a][0][0];x++){\n        f[a][0][x]+=f[a][1][x]+p[a][x];\n        f[a][0][x+1]+=f[a][0][x]/10000;\n        f[a][0][x]%=10000;\n    }\n    \n    if(f[a][0][ f[a][0][0]+1 ])f[a][0][0]++;\n    \n    return;\n}\n\nbool cmp_ans(int a,int b){  //\u6bd4\u8f83\u5927\u5c0f\u627eans\n    \n    for(int x=max(f[a][0][0],f[b][0][0]);x>0;x--){\n        if(f[a][0][x]<f[b][0][x])return true;\n        else if(f[b][0][x]<f[a][0][x])return false;\n    }\n    \n    return false;\n}\n\nvoid add_ans(int a){  //\u7edf\u8ba1\u6700\u7ec8\u7684ans\n    ans[0]=max(ans[0],f[a][0][0]);\n    \n    for(int x=1;x<=ans[0];x++){\n        ans[x]+=f[a][0][x];\n        ans[x+1]+=ans[x]/10000;\n        ans[x]%=10000;\n    }\n    \n    if(ans[ ans[0]+1 ])ans[0]++;\n    \n    return;\n}\n\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    \n    while(n--){\n        memset(f,0,sizeof(f));\n        memset(p,0,sizeof(p));\n        \n        for(int i=1;i<=m;i++){\n            scanf(\"%d\",&p[i][1]);\n            p[i][0]=1;\n        }\n        \n        for(int k=m;k>0;k--){  //k\u5faa\u73af\u653e\u5916\u9762\uff0c\u65b9\u4fbf\u7b97\uff1b\n            for(int i=1;(i+k-1)<=m;i++){\n                cmp_max(i,k);  //\u72b6\u6001\u8f6c\u79fb\u90e8\u5206\n                //f[i][k]=max(f[i-1][k+1]+p[i-1],f[i][k+1]+p[i+k]);\n            }\n            for(int i=1;i<=m;i++)add_mi(i);        //\u5373p[i]*=2;    \n        }\n        \n        for(int i=1;i<=m;i++)add_lst(i);    //f[i][0]=f[i][1]+p[i]\uff0c\u52a0\u4e0a\u6700\u540e\u4e00\u4e2a\u6570\n        \n        z=1;\n        for(int i=2;i<=m;i++)\n            if(cmp_ans(z,i))z=i;    //f[z][0]=max(f[z][0],f[i][0])\uff0c\u6bd4\u8f83\u6700\u7ec8\u7ed3\u679c\uff0c\u6bd4\u8f83\u8fc7\u7a0b\u4e2d\u53ea\u9700\u5b58\u4e0b\u6807\n        \n        add_ans(z);  //\u52a0\u4e0a\u7b54\u6848\n    }\n\n    printf(\"%d\",ans[ans[0]]);  //\u538b\u4f4d\u9ad8\u7cbe\u8f93\u51faans\n    for(int i=(ans[0]-1);i>0;i--){\n        printf(\"%d\",ans[i]/1000);\n        printf(\"%d\",ans[i]/100%10);\n        printf(\"%d\",ans[i]/10%10);\n        printf(\"%d\",ans[i]%10);\n    }\n\n    return 0;\n}\n```\n\u65bd\u5de5\u5b8c\u6bd5\n",
        "postTime": 1502108287,
        "uid": 9315,
        "name": "zhyh",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u77e9\u9635\u4e0adp\u5f88\u56f0\u96be\uff0c\u6bcf\u4e00\u884c\u5206\u522b\u8fdb\u884c\u4e00\u6b21dp\n\n\u7528\u9ad8\u7cbe\u6574\u6570\u6765\u5b58\u50a8\uff0c\u9700\u8981\u63d0\u524d\u8bb0\u5f552^1 ~ 2^80\n\n\u9700\u8981\u7528\u5230\u7684\u9ad8\u7cbe\u8fd0\u7b97\u6709\u52a0\u6cd5\uff0c\u591a\u4f4d\u6570\u4e58\u4e00\u4f4d\u6570\uff0c\u538b\u4f4d\n\ndp[i][j]\u8868\u793a\u4ece\u524d\u9762\u53d6\u5230\u7b2ci\u4e2a\u6570\uff0c\u4ece\u540e\u9762\u53d6\u5230\u7b2cj\u4e2a\u6570\u7684\u6700\u5927\u503c\n\n\u5219\u521d\u59cbdp[0][m+1] = 0\uff0c\u4e0b\u6807\u7684\u8303\u56f4\u662f1~n\n\n\u8f6c\u79fbdp[i][j] = max( dp[i-1][j] + a[i]\\*2^calc(i,j) , dp[i][j+1] + a[j]\\*2^calc(i,j) )\n\n\u5176\u4e2dcalc(i,j)\u4e3a\u8ba1\u7b97\u5f53\u524d\u662f\u53d6\u5230\u4e86\u7b2c\u51e0\u4e2a\u6570 calc(i,j) = i+(m+1-j)\n\n\u8f6c\u79fb\u987a\u5e8f\u4e3a\u5916\u5c42i\u4ece\u5c0f\u5230\u5927\uff0c\u5185\u5c42j\u4ece\u5927\u5230\u5c0f\uff0c\u6ce8\u610f\u5185\u5c42\u5faa\u73af\u6761\u4ef6\u4e3aj>i\uff0c\u5426\u5219\u4f1aRE\u56db\u4e2a\u70b9\u3002\u3002\u3002\n\n\u6700\u7ec8\u7b54\u6848\u4e3amax{ dp[k][k+1] | 0<=k<=n }\n\ndp\u7684\u590d\u6742\u5ea6\u4e3aO(n^2)\uff0c\u8ba1\u7b97\u7b54\u6848\u7684\u590d\u6742\u5ea6\u4e3aO(n)\uff0c\u6bcf\u884c\u8fdb\u884c\u4e00\u6b21dp\uff0c\u603b\u590d\u6742\u5ea6\u4e3aO(n^3)\n\n\n\n\n    \n    \n    \n    \n    \n    \n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <cstring>\nusing namespace std;\ntypedef long long ll;\nstruct bigint\n{\n    static const int BASE = 10000;\n    int num[100]; int idx;\n    bigint(){ idx = 1; num[0] = 0; }\n    bigint( int val ){ idx = 1; num[0] = val; }\n    bigint( const bigint &rhs )\n    {\n        *this = rhs;\n    }\n    bigint operator+( const bigint &rhs ) const\n    {\n        bigint rst;\n        int carry = 0;\n        int i;\n        for( i = 0 ; i < min(idx,rhs.idx) ; ++i )\n        {\n            rst.num[i] = num[i] + rhs.num[i] + carry;\n            carry = rst.num[i] / BASE;\n            rst.num[i] %= BASE;\n        }\n        for( ; i < idx ; ++i )\n        {\n            rst.num[i] = num[i] + carry;\n            carry = rst.num[i] / BASE;\n            rst.num[i] %= BASE;\n        }\n        for( ; i < rhs.idx ; ++i )\n        {\n            rst.num[i] = rhs.num[i] + carry;\n            carry = rst.num[i] / BASE;\n            rst.num[i] %= BASE;\n        }\n        rst.idx = max( idx , rhs.idx );\n        if( carry == 1 )\n        {\n            rst.num[idx] = 1;\n            rst.idx++;\n        }\n        return rst;\n    }\n    bigint operator*( int rhs ) const\n    {\n        bigint rst = *this;\n        int carry = 0;\n        for( int i = 0 ; i < idx ; ++i )\n        {\n            rst.num[i] *= rhs;\n            rst.num[i] += carry;\n            carry = rst.num[i] / BASE;\n            rst.num[i] %= BASE;\n        }\n        if( carry )\n        {\n            rst.num[idx] = carry;\n            rst.idx++;\n        }\n        return rst;\n    }\n    bool operator>( const bigint &rhs ) const\n    {\n        if( idx > rhs.idx ) return true;\n        else if( idx < rhs.idx ) return false;\n        for( int i = idx-1 ; i >= 0 ; --i )\n        {\n            if( num[i] > rhs.num[i] ) return true;\n            else if( num[i] < rhs.num[i] ) return false;\n        }\n        return false;\n    }\n    bigint& operator=( const bigint &rhs )\n    {\n        if( &rhs == this ) return *this;\n        idx = rhs.idx;\n        copy( rhs.num , rhs.num+idx , num );\n        return *this;\n    }\n    void print()\n    {\n        printf( \"%d\" , num[idx-1] );\n        for( int i = idx-2 ; i >= 0 ; --i )\n        {\n            printf( \"%04d\" , num[i] );\n        }\n    }\n};\nint n,m;\nint a[81][81];\nbigint dp[82][82];\nbigint pow2[81];\nvoid calc_pow2()\n{\n    pow2[1] = 2;\n    for( int i = 2 ; i <= m ; ++i )\n        pow2[i] = pow2[i-1] * 2;\n}\ninline int calc( int i , int j )\n{\n    return i+(m+1-j);\n}\nvoid dpf( int row )\n{\n    for( int i = 0 ; i < m+1 ; ++i )\n    {\n        for( int j = m+1 ; j > i ; --j )\n        {\n            dp[i][j] = 0;\n            if( i != 0 ) dp[i][j] = dp[i-1][j] + pow2[ calc(i,j) ] * a[row][i]; // \u9009\u5de6\u8fb9\u7684\u6570 \n            if( j != m+1 )\n            {\n                bigint right = dp[i][j+1] + pow2[ calc(i,j) ] * a[row][j]; // \u9009\u53f3\u8fb9\u7684\u6570\n                if( right > dp[i][j] ) dp[i][j] = right;\n            }\n        }\n    }\n}\nbigint mx;\nvoid getmax()\n{\n    mx = 0;\n    for( int i = 0 ; i <= m ; ++i )\n        if( dp[i][i+1] > mx ) mx = dp[i][i+1];\n}\nbigint rst;\nint main()\n{\n    cin >> n >> m;\n    for( int i = 1 ; i <= n ; ++i )\n        for( int j = 1 ; j <= m ; ++j )\n            cin >> a[i][j];\n    calc_pow2();\n    for( int i = 1 ; i <= n ; ++i )\n    {\n        dpf(i);\n        getmax();\n        rst = rst + mx;\n    }\n    rst.print();\n    return 0;\n}\n```",
        "postTime": 1477486165,
        "uid": 8212,
        "name": "__stdcall",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "\u884c\u4e0e\u884c\u95f4\u53d6\u6570\u65b9\u6848\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u53ea\u8981\u6bcf\u884c\u8fdb\u884c\u4e00\u6b21dp\u518d\u5c06\u5404\u884c\u7ed3\u679c\u76f8\u52a0\u5373\u53ef\u3002\n\n\u5bf9\u4efb\u610f\u4e00\u884c\uff0c\u8bbea[i]\u4e3a\u8be5\u884c\u7b2ci\u4e2a\u5143\u7d20\u3002\n\nd[i][j]\u8868\u793a\u8be5\u884c\u5269\u4f59[i,j]\u5217\u65f6\u5df2\u5f97\u5230\u7684\u6700\u5927\u5f97\u5206\u3002\n\n\u65b9\u7a0b\u4e3a\uff1a\n\nd[i][j] = max{ d[i-1][j] + a[i-1]\\*2^(m-j+i-1),  \n\nd[i][j+1] + a[j+1]\\*2^(m-j+i-1)  }\n\n\u6700\u540e\u8be5\u884c\u7684\u6700\u5927\u5f97\u5206\u662f max{ d[i][i] + a[i]\\*2^m } ,\u5176\u4e2d 1<=i<=n\n\n\u4f46\u662f\u56e0\u4e3a\u6570\u636e\u91cf\u8fc7\u5927\u6b64\u9898\u9700\u8981\u9ad8\u7cbe\u5ea6\u8ba1\u7b97\n",
        "postTime": 1471495510,
        "uid": 21607,
        "name": "taojinjin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "dp\u5f0f\u5b50\u4e0e\u697c\u4e0b\u5dee\u4e0d\u591a\uff0cf[i][j] = max{f[i+1][j]+a[i]\\*2^x, f[i][j-1]+a[j]\\*2^x};\n\nf[i][j]\u8868\u793a\u6bcf\u884c\u7b2ci\u5230j\u4e2a\u6570\u53ef\u5f97\u5230\u7684\u6700\u5927\u503c\u3002\u4f46\u662f\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u8981\u8ba1\u7b972^x\u6b21\u65b9\u7684\u9ad8\u7cbe\u5ea6\u8ba1\u7b97\u6548\u7387\u4e0d\u9ad8\uff08TLE\u4e24\u4e2a\u70b9\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\uff0c\u867d\u71362^80\u6b21\u65b9\u6211\u4eec\u6ca1\u6cd5\u7b97\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u53d8\u62102^10\\*2^10\\*2^10\\*2^10\\*2^10\\*2^10\\*2^10\\*2^10\uff0c2^10\u4ec5\u4e3a1024\uff0c\u539f\u6765\u9700\u8981\u7b9780\u6b21\u53d8\u6210\u4e868\u6b21\uff0c\u6548\u7387\u5927\u5927\u63d0\u9ad8\u4e86\uff08\u7136\u800c\u6700\u5927\u7684\u90a3\u4e2a\u70b9\u8fd8\u662f\u6709\u4e03\u767e\u591ams\uff09\uff0c\u5982\u679c\u4e0d\u662f2^80\u6b21\u65b9\uff0c\u800c\u662f79\u6b21\u65b9\u621678\u621677\u3002\u3002\u3002\u3002\u3002\u3002\u6bd4\u598279\u5c31\u662f9\u4e2a2^10\u6b21\u65b9\u548c1\u4e2a2^9\u7b49\u7b49\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e86\n\n\u9644\u4e0a\u4ee3\u7801\n\n```cpp\n#include<cstdio> \n#include<algorithm> \n#include<cstring> \nusing namespace std; \nint n,m,s[82][82],ans[100],f[82][82][100],l[82][82]; \nvoid ccj(int jj,int i,int j){ \n    int y[100],yy[100],l1=0,g=s[jj][j],l2=l[j+1][j+i-1],l3=0; \n    memset(y,0,sizeof(y));memset(yy,0,sizeof(yy)); \n    for (int a1=0;a1<l[j+1][j+i-1];a1++) \n    y[a1]=f[j+1][j+i-1][a1]; \n    while(g) \n    {yy[l1++]=g%10;g/=10;} \n    int yyy=m-i+1,a[8]; \n    for (int a1=0;a1<8;a1++){if (yyy>10){yyy-=10;a[a1]=1<<10;}else {a[a1]=1<<yyy;yyy=0;}} \n    for (int a1=0;a1<8;a1++) \n    { \n        int k=0;if (a[a1]<2)break; \n        for (int a2=0;a2<l1||k;a2++,l1=max(a2,l1)) \n        { \n            yy[a2]=yy[a2]*a[a1]+k; \n            k=yy[a2]/10; \n            yy[a2]%=10; \n        } \n    } \n    int k=0; \n    for (int a1=0;a1<max(l1,l2)||k;a1++,l3=a1) \n    {y[a1]=y[a1]+yy[a1]+k;k=y[a1]/10;y[a1]%=10;} \n    int x[100],xx[100],ll1=0,gg=s[jj][j+i-1],ll2=l[j][j+i-2],ll3=0; \n    memset(x,0,sizeof(x));memset(xx,0,sizeof(xx)); \n    for (int a1=0;a1<l[j][j+i-2];a1++) \n    x[a1]=f[j][j+i-2][a1]; \n    while(gg) \n    {xx[ll1++]=gg%10;gg/=10;} \n    for (int a1=0;a1<8;a1++) \n    { \n        int k=0;if (a[a1]<2)break; \n        for (int a2=0;a2<ll1||k;a2++,ll1=max(ll1,a2)) \n        { \n            xx[a2]=xx[a2]*a[a1]+k; \n            k=xx[a2]/10; \n            xx[a2]%=10; \n        } \n    } \n    k=0; \n    for (int a1=0;a1<max(ll1,ll2)||k;a1++,ll3=a1) \n    {x[a1]=x[a1]+xx[a1]+k;k=x[a1]/10;x[a1]%=10;} \n    bool u=1; \n    if (l3!=ll3){if (l3>ll3)u=1;else u=0;} \n    else\n    { \n        for (int a1=l3-1;a1>=0;a1--) \n        {if (y[a1]>x[a1]){u=1;break;}if (y[a1]<x[a1]){u=0;break;}} \n    } \n    if (u) \n    { \n        l[j][j+i-1]=l3; \n        for (int a1=0;a1<l3;a1++) \n        f[j][j+i-1][a1]=y[a1]; \n    } \n    else\n    { \n        l[j][j+i-1]=ll3; \n        for (int a1=0;a1<ll3;a1++) \n        f[j][j+i-1][a1]=x[a1]; \n    } \n} \nint main() \n{ \n    scanf(\"%d%d\",&n,&m); \n    for (int i=1;i<=n;i++) \n    for (int j=1;j<=m;j++) \n    scanf(\"%d\",&s[i][j]); \n    for (int jj=1;jj<=n;jj++) \n    { \n        memset(l,0,sizeof(l));memset(f,0,sizeof(f)); \n        for (int i=1;i<=m;i++) \n        for (int j=1;j<=m&&j+i-1<=m;j++) \n        ccj(jj,i,j); \n        for (int i=0;i<100;i++) \n        {ans[i]+=f[1][m][i];ans[i+1]+=ans[i]/10;ans[i]%=10;} \n    } \n    bool u=0; \n    for (int i=99;i>=0;i--) \n    { \n        if (ans[i])u=1; \n        if (u)printf(\"%d\",ans[i]);\n    }\n    if (!u)printf(\"0\");\n    return 0;\n}\n```",
        "postTime": 1468835823,
        "uid": 14738,
        "name": "1124828077ccj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "\u4e00\u76f4\u6302\u7740\u7b2c\u4e00\u9875\u4e0d\u723d\uff0c\u7ec8\u4e8eA\u4e86\n\n\n\u5bf9\u4e8en\u884c\u8f93\u5165\uff0c\u5404\u884c\u4e4b\u95f4\u7684\u72ec\u7acb\u7684\uff0c\u53ea\u9700\u8981\u627e\u5230\u5404\u884c\u7684\u6700\u5927\u503c\u5373\u53ef\u3002\u5b83\u4eec\u7684\u548c\u5373\u4e3a\u6240\u6c42\u3002\n\n\n\u5bf9\u4e8e\u8f93\u5165\u7684\u4efb\u4e00\u884ca[m]\uff0c\u7b2cx\u6b21\u53d6\u6570\u7684\u72b6\u6001\u8f6c\u79fb\u4e3a\uff1a\n\n\n\ndp[i][j] = max{dp[i+1][j]+a[i]\\*2^x, dp[i][j-1]+a[j]\\*2^x};\n\ndp[i][j]\u8868\u793a\u6bcf\u884c\u7b2ci\u5230j\u4e2a\u6570\u53ef\u5f97\u5230\u7684\u6700\u5927\u503c\u3002\n\n\n\u5176\u4e2d\u7684\u9ad8\u7cbe\u5ea6\u4e58\u6cd5\u548c\u52a0\u6cd5\u90e8\u5206\uff0c\u91c7\u7528int\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6570\u6700\u5927100000-1\uff0c\u76f8\u5f53\u4e8e100000\u8fdb\u5236\uff0c\u8282\u7701\u7a7a\u95f4\u3002\n\n\n\uff08\u51cf\u5c11\u4ee3\u7801\u590d\u5236\uff0c\u521b\u5efa\u7f8e\u597d\u6d1b\u8c37\uff09\n\n\n```cpp\n#include<iostream>\n#include<memory.h>\n#include<stdio.h>\nusing namespace std;\nint n,m,a[81];\nint f[81][81][31];\nint ys[81][31];\nint ans[31];\nint c[31];\nvoid mul(int *x,int *y,int z){\n    memset(c,0,sizeof(c));\n    c[0]=y[0];\n    for(int i=1;i<=c[0];++i)\n        c[i]=y[i]*z;\n    for(int i=1;i<=c[0];++i){\n        c[i+1]+=c[i]/100000;\n        c[i]%=100000;\n    }\n    while(c[c[0]+1]){\n        c[0]++;\n        c[c[0]+1]+=c[c[0]]/100000;\n        c[c[0]]%=100000;\n    }\n    for(int i=0;i<=30;++i) x[i]=c[i];\n}\nvoid add(int *x,int *y,int *z){\n    memset(c,0,sizeof(c));\n    if(y[0]>z[0]) c[0]=y[0];\n    else c[0]=z[0];\n    for(int i=1;i<=c[0];++i)\n        c[i]=y[i]+z[i];\n    for(int i=1;i<=c[0];++i){\n        c[i+1]+=c[i]/100000;\n        c[i]%=100000;\n    }\n    if(c[c[0]+1]) c[0]++;\n    for(int i=0;i<=30;++i) x[i]=c[i];\n}\nbool MAX(int *x,int *y){\n    if(x[0]>y[0]) return 1;\n    else if(y[0]>x[0]) return 0;\n    else\n        for(int i=x[0];i>=1;--i)\n        if(x[i]>y[i]) return 1;\n        else if(y[i]>x[i]) return 0;\n    }\n    return 1;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    ys[0][0]=1; ys[0][1]=1;\n    for(int i=1;i<=m;++i)\n        mul(ys[i],ys[i-1],2);\n    ans[0]=1; ans[1]=0;\n    for(int i=1;i<=n;++i){\n        for(int j=1;j<=m;++j){\n            scanf(\"%d\",&a[j]);\n            mul(f[j][j],ys[m],a[j]);\n        }\n        for(int k=2;k<=m;++k)\n            for(int lx=1;lx<=m-k+1;++lx){\n                int ly=lx+k-1,ll;\n                int xm[31],ym[31],cm[31];\n                ll=ly;\n                mul(cm,ys[m-k+1],a[lx]);\n                ly=ll;//\u4e0d\u8bb0\u5f55\u4e00\u4e0bly\u4f1a\u83ab\u540d\u7684\u53d8\u62100\uff0cxm\u7684\u503c\u4e5f\u662f\u4e00\u6837\u3002\n                add(xm,cm,f[lx+1][ly]);\n                mul(ym,ys[m-k+1],a[ly]);\n                add(ym,ym,f[lx][ly-1]);\n                if(MAX(xm,ym))\n                    memcpy(f[lx][ly],xm,sizeof(int)*31);\n                else\n                    memcpy(f[lx][ly],ym,sizeof(int)*31);\n            }\n        add(ans,ans,f[1][m]);\n    }\n    printf(\"%d\",ans[ans[0]]);\n    for(int i=ans[0]-1;i>=1;--i) printf(\"%05d\",ans[i]);\n    printf(\"\\n\");\n    return 0;\n}\n```",
        "postTime": 1463662586,
        "uid": 17689,
        "name": "\u8fdc\u822a\u4e4b\u66f2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "TIPS\uff1a\u9ad8\u7cbe\u5ea6\u8ba1\u7b97\uff0c\u538b\u4f4d\uff0cDP\uff0c\u5206\u6cbb\n\nDP\uff1af[i,j]\u8868\u793a\u8fd9\u4e00\u884c\u5de6\u8fb9\u53d6\u5230\u7b2ci\u4f4d\uff0c\u53f3\u8fb9\u53d6\u5230\u7b2cj\u4f4d\u65f6\u7684\u6700\u5927\u5f97\u5206\uff0c\u8f6c\u79fb\u65b9\u7a0b\uff1af[i,j]:=max(f[i-1,j]+a[i-1]\\*(2\u7684n\u6b21\u65b9)\uff0cf[i,j+1]+a[j+1]\\*(2\u7684n\u6b21\u65b9)\uff09\uff1b\n\n\u600e\u4e48\u7406\u89e3\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n\u4e3e\u4f8b\u8bf4\u660e\uff0c\u6709\u77e9\u9635\uff1a\n\na1,a2,a3\u2026\u2026an\n\nb1,b2,b3\u2026\u2026bn \u6709N\u5217\uff0c\u4f46\u53ea\u67092\u884c\uff08\u8fd9\u91cc\u8003\u8651\u5230\u4e66\u5199\uff0c\u6240\u4ee5\u53ea\u5217\u4e3e\u4e862\u884c\uff0c\u5927\u4e8e2\u884c\u4e5f\u53ef\u4ee5\u8bc1\u660e\uff09\n\n\u5047\u8bbe\u4e0a\u9762\u77e9\u9635\u7684\u6700\u5927\u5f97\u5206\u53d6\u6cd5\u662f\uff1aa1\\*2+b1\\*2 + a2\\*22+b2\\*22\u2026\u2026+an\\*2n+bn\\*2n\uff0c\u628a\u8fd9\u4e2a\u7b97\u5f0f\u53d8\u6362\u4e00\u4e0b\uff0c\u5c06an\u548cbn\u7684\u5206\u5f00\u63d0\u53d6\uff0c\u7ed3\u679c\u53d8\u6362\u4e3aa1\\*2+a2\\*22\u2026\u2026+an\\*2n + b1\\*2+b2\\*22\u2026\u2026+bn\\*2n\u3002\u6211\u4eec\u53ef\u4ee5\u8003\u5bdf\u4e00\u4e0b\u8fd9\u4e2a\u7b97\u5f0f\u4f1a\u53d1\u73b0\uff1aa1\\*2+a2\\*22\u2026\u2026+an\\*2n \u5176\u5b9e\u5c31\u662f\u7b2c\u4e00\u884ca1,a2,a3\u2026\u2026an\u7684\u6700\u5927\u5f97\u5206\uff0c b1\\*2+b2\\*22\u2026\u2026+bn\\*2n\u4e5f\u662f\u7b2c\u4e8c\u884cb1,b2,b3\u2026\u2026bn \u7684\u6700\u5927\u5f97\u5206\u3002\u4e5f\u5c31\u662f\u8bf4\u77e9\u9635\u7684\u6700\u5927\u5f97\u5206\u5176\u5b9e\u662f\u6bcf\u4e00\u884c\u7684\u6700\u5927\u5f97\u5206\u4e4b\u548c\uff0c\u6bcf\u4e00\u884c\u7684\u53d6\u6570\u4e0d\u4f1a\u548c\u5176\u4ed6\u884c\u53d1\u751f\u8054\u7cfb\u6216\u51b2\u7a81\u7684\u3002\u4e8e\u662f\u77e9\u9635\u53d6\u6570\u6700\u5927\u5f97\u5206\u95ee\u9898\u5c31\u5206\u89e3\u4e3a\u884c\u53d6\u6570\u6700\u5927\u5f97\u5206\u95ee\u9898\uff0c\u53ea\u8981\u6c42\u51fa\u6bcf\u4e00\u884c\u7684\u6700\u5927\u5f97\u5206\uff0c\u7136\u540e\u6c42\u548c\uff0c\u4fbf\u53ef\u5f97\u51fa\u77e9\u9635\u7684\u6700\u5927\u5f97\u5206\u3002\n\n\u518d\u6765\u8003\u5bdf\u4e00\u4e0b\u5355\u884c\u53d6\u6570\u95ee\u9898\u7684\u6c42\u89e3\u3002\u9996\u5148\uff0c\u8bbe\u51fd\u6570Maxgame\uff08i,j\uff09(i<j)\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u6c42\u89e3\u4e00\u884c ai,a(i+1),a(i+2)\u2026\u2026aj \u7684\u6700\u5927\u5f97\u5206\u3002\u90a3\u4e48a1,a2,a3\u2026\u2026an\u7684\u6700\u5927\u5f97\u5206\u7528\u8fd9\u4e2a\u51fd\u6570\u6765\u8868\u793a\u5c31\u662f\uff1aMaxgame(1,n)\uff0c\u90a3\u4e48\u8fd9\u4e2aMaxgame(1,n)\u7684\u503c\u600e\u6837\u6c42\u5f97\u5462\uff1f\u6211\u4eec\u7ee7\u7eed\u7814\u7a76\u3002\u7531\u4e8e\u53d6\u6570\u7684\u65f6\u5019\u53ea\u80fd\u53d6\u884c\u9996\u6570\u6216\u662f\u884c\u5c3e\u6570\uff0c\u4e8e\u662f\u4fbf\u6709\uff1aMaxgame(1,n)=Max((a1\\*2+Maxgame(2,n)\\*2),(an\\*2+Maxgame(1,n-1)))\uff0c\u4ece1\u5230n\u7684\u884c\u6700\u5927\u5f97\u5206\u8981\u4e48\u7b49\u4e8e\u53d6\u884c\u9996\u5143\u7d20\\*2\uff0b\u4ece2\u5230n\u7684\u884c\u7684\u6700\u5927\u5f97\u5206\\*2\uff1b\u8981\u4e48\u7b49\u4e8e\u53d6\u884c\u5c3e\u5143\u7d20\\*2\uff0b\u4ece1\u5230n\uff0d1\u7684\u884c\u7684\u6700\u5927\u5f97\u5206\u3002\u6240\u4ee5\uff0c\u5f52\u7eb3\u8d77\u6765Maxgame(1,n)\u5c31\u53ea\u6709\u8fd92\u79cd\u53ef\u80fd\u6027\u3002\u518d\u770b\u770b\uff0c\u6b64\u65f6\u7684\u95ee\u9898\u5c31\u88ab\u5206\u89e3\u4e3a\u4e86\u4e00\u4e2a\u76f8\u540c\u7684\u95ee\u9898\uff0c\u53ea\u662f\u6570\u636e\u89c4\u6a21\u5c0f\u4e861\uff1a\u53bb\u6389\u4e86a1\u6216an\uff0c\u5269\u4e0b\u7684a2,a3,\u2026\u2026an\u6216a1,a2,\u2026\u2026a(n-1)\u6210\u4e3a\u65b0\u7684\u5f85\u6c42\u6700\u5927\u5f97\u5206\u7684\u884c\u3002\u5982\u6b64\u8fdb\u884c\u4e0b\u53d6\uff0c\u5f53\u8fd9\u4e00\u884c\u53ea\u5269\u4e0b2\u4e2a\u6570\u65f6\uff1aax,ay\uff08x\u5fc5\u7136\u7b49\u4e8ey-1\uff0cax\u548cay\u662f\u76f8\u90bb\u76842\u4e2a\u6570\uff09\uff0c\u5219\u53ea\u9700\u8981\u5148\u53d6min(ax,ay)\uff0c\u6700\u540e\u4e00\u6b65\u53d6max(ax,ay)\u3002\u8be5\u95ee\u9898\u8fce\u5203\u800c\u89e3\u3002\n\n\u8be6\u7ec6\u4ee3\u7801\uff1ahttp://www.cnblogs.com/yangqingli/p/4735607.html\n",
        "postTime": 1439772146,
        "uid": 6906,
        "name": "gryql",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "\u6211\u4eec\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u6bcf\u4e00\u884c\u90fd\u662f\u72ec\u7acb\u7684\uff0c\u5373\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e00\u884c\u90fd\u5206\u522b\u7b97\u5b8c\u540e\u6700\u540e\u5c06\u5404\u884c\u7ed3\u679c\u76f8\u52a0\uff0c\u6709\u6570\u636e\u89c4\u6a21\u770b\uff0c\u9700\u8981\u7528\u5230\u9ad8\u7cbe\u5ea6\u8fd0\u7b97\u3002\u00a0\n\n\n\u7531\u6837\u4f8b1\u7684\u89e3\u91ca\u770b\uff0c\u56fa\u5b88\u672c\u5206\u7684\u4e00\u8def\u4f5c\u4e0b\u53bb\uff0c\u6700\u5927\u4f1a\u51fa\u73b01000\\*2^80\uff0c\u9700\u8981\u7f16\u5199\u9ad8\u7cbe\u5ea6\u4e58\u6cd5\uff0c\u63d0\u9ad8\u4e86\u7a0b\u5e8f\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u5728\u6bcf\u4e00\u5c42\u8fd0\u7b97\u4e2d\u5148\u5c062\u4e58\u5165.\n\n\n\nF[i,j]:=max{2\\*(data[i]+F[i+1,j]),2\\*(data[j]+F[i,j-1])}\u3002\n\nF[i,j]\u8868\u793a\u4ecei\u5230j\u8fd9\u4e00\u6bb5\u6570\u636e\u7684\u6700\u5927\u503c\uff0c\u5176\u8ba1\u7b97\u65b9\u6cd5\u89e3\u91ca\u5982\u4e0b\uff1a\u00a0\n\n\n\u6211\u4eec\u9700\u8981\u7528L(\u4ece1\u5230m)\u6765\u63a7\u5236i-j\u6bb5\u7684\u957f\u5ea6\uff0c\u6bcf\u6b21i\u90fd\u4ece\u5934\u5230\u5c3e\u8d70\u4e00\u904d\uff0cj=i+l-1\u3002\n\n\u5f53L=1\uff0ci=1\u65f6\uff0cj=1\uff0cF[1,1]=max{2\\*\uff08data[1]+F[2,1]),2\\*(data[1]+F[1,0])}\uff0c\u7531\u4e8e\u6b64\u65f6F[2,1]\u3001F[1,0]\u503c\u4e3a0\uff0c\u6240\u4ee5L=1\u65f6\u6570\u636e\u6700\u5927\u503c\u5c31\u662f2\\*data[i]\u3002\n\n\n\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u7684data[i]\u5c06\u4f1a\u662f\u6700\u540e\u4e00\u4e2a\u53d6\u8d70\u7684\u5143\u7d20\u3002\n\n\u5f53L=2\uff0ci\uff1d1\u65f6\uff0cj\uff1d2\uff0cF[1,2]=max{2\\*\uff08data[1]+F[2,2]),2\\*(data[2]+F[1,1])}\uff0c\n\n\n\u6b64\u65f6L=1\u65f6\u8ba1\u7b97\u5f97\u7684\u5c31\u8981\u7528\u4e0a\u4e86\uff1b\u6211\u4eec\u5047\u8bbe\u6570\u636emax\u90fd\u662f\u524d\u8005\uff0c\u90a3\u4e48F[1,2]=2\\*(data[1]+F[2,2])=2\\*(data[1]+2\\*data[2])\u3002\n\n\n\u5728\u770b\u4e00\u4e2a\uff0cL=3\uff0ci\uff1d1\u65f6\uff0cj\uff1d3\uff0c\u540c\u6837\u5047\u8bbe\uff0cF[1,3]=2\\*(data[1]+2\\*(data[2]+2\\*data[3]))\u3002\n\n\n\u5982\u6837\u4f8b1\u7b2c\u4e00\u884c\u6570\u636e\u7684\u8ba1\u7b97\uff1aF[1,3]=2\\*(1+2\\*(2+2\\*4\uff09\uff09\uff1d1\\*2+2\\*2^2+4\\*2^3\u3002\n\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u9006\u5411\u5c06\u957f\u5ea6\u4e3a3\u7684i-j\u6bb5\u7684\u6700\u5927\u503c\u6c42\u51fa\uff0c\u6700\u540e\u7684F[1,m]\u5c31\u662f\u6bcf\u884c\u7684\u6700\u5927\u503c\u4e86\u3002\n",
        "postTime": 1375871289,
        "uid": 277,
        "name": "plane",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "### \u4e00.\u6709\u5173dp\u65b9\u7a0b\n\n\u7531\u4e8e\u6b64\u9898\u4e2d\u6bcf\u4e00\u884c\u7684\u53d6\u6570\u60c5\u51b5\u90fd\u4e0d\u5f71\u54cd\u53e6\u5916\u51e0\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e00\u884c\u90fd\u5206\u5f00\u8fdb\u884c\u52a8\u6001\u89c4\u5212\uff0c\u628a\u4e8c\u7ef4\u538b\u7f29\u4e3a\u4e00\u7ef4\u3002\n\n\u8bbe$dp[l][r]$\u4e3a\u533a\u95f4$[l,r]$\u7684\u6700\u5927\u5f97\u5206\n\n$dp[l][r]$=$max(dp[l+1][r]+2^{m-(r-l)}*a[l],dp[l][r-1]+2^{m-(r-l)}*a[r])$\n\n\u7531\u4e8e\u9898\u76ee\u4e2d\u8bf4\u6bcf\u6b21\u53ea\u80fd\u53d6\u884c\u9996\u6216\u884c\u5c3e\uff0c\u6240\u4ee5\u8f6c\u79fb\u65b9\u7a0b\u5c31\u201c\u679a\u4e3e\u201d\u53d6\u884c\u9996\u548c\u53d6\u884c\u5c3e\u65f6\u7684\u60c5\u51b5\uff0c\u5e76\u6bd4\u8f83\u54ea\u4e2a\u66f4\u5927\uff0c\u4f5c\u4e3a$dp[l][r]$\u7684\u6700\u4f18\u89e3\n\n$m-(r-l)$\u8868\u793a\u53d6\u884c\u9996\u6216\u884c\u5c3e\u65f6\u7684\u6b21\u6570\uff0c\u53ea\u8981\u7a0d\u5fae\u60f3\u60f3\u5c31\u80fd\u660e\u767d\u4e86\n\n\u53ef\u4ee5\u901a\u8fc7\u5faa\u73af\u6765\u8fdb\u884c\u52a8\u6001\u89c4\u5212\uff0c\u4f46\u7531\u4e8e\u53d8\u91cf\u63a7\u5236\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6240\u4ee5\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\nlong long solve(int l,int r)\n{\n    if(dp[l][r]) return dp[l][r];\n    if(l==r)\n    {\n        dp[l][r]=a[l]*pow(2,m-(r-l));\n        return dp[l][r];\n    }\n    dp[l][r]=max(solve(l+1,r)+pow(2,m-(r-l))*a[l],solve(l,r-1)+pow(2,m-(r-l))*a[r]);\n    return dp[l][r];\n}\n```\n\n\n\u7531\u4e8e\u8fd9\u9898\u7684$m<=80$\uff0c\u6240\u4ee5\u80af\u5b9a\u6709$x*2^{80}$\u7684\u60c5\u51b5\uff0c\u7528long long\u5fc5\u5b9a\u4e0d\u884c\u3002\u6240\u4ee5\u6211\u4eec\u7528\u9ad8\u7cbe\n\n### \u4e8c.\u6709\u5173\u9ad8\u7cbe\n\n\u7531\u4e8e\u6b64\u9898\u4e2d\u9700\u8981\u8fdb\u884c\u9ad8\u7cbe\u8fd0\u7b97\u7684\u6570\u4f17\u591a\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u7ed3\u6784\u4f53\u6765\uff0c\u8282\u7ea6\u4ee3\u7801\u3002\n\n\u5728\u672c\u9898\u4e2d\uff0c\u4f5c\u8005\u4f7f\u7528\u7684\u662f\u538b\u4f4d\u9ad8\u7cbe\u3002 \u4e00\u822c\u7684\u9ad8\u7cbe\u5ea6\u662f10\u8fdb\u5236\uff0c\u800c\u538b\u4f4d\u9ad8\u7cbe\u5219\u662f$10^b$\u8fdb\u5236\u3002\u538b\u4f4d\u9ad8\u7cbe\u66f4\u5feb\u3002\n\n\u6ce8\uff1a\u4f5c\u8005\u91c7\u7528\u7684$b=8$\n\n\u4e0d\u8fc7\u5728\u9ad8\u7cbe\u65f6\uff0c\u6211\u4eec\u8981\u6ce8\u610f\u521d\u59cb\u5316\n\n\u6211\u4eec\u7528$p[i]$\u6765\u4fdd\u5b58$2^i$\uff0c\u4ece\u800c\u53bb\u9664\u91cd\u590d\u7684\u8ba1\u7b97\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nlong long base=100000000;\nstruct BigInt\n{\n    long long w[85];\n    int len;\n};\nvoid write(BigInt ans)\n{\n    cout<<ans.w[ans.len];\n    for(int i=ans.len-1;i>=1;--i)\n    {\n        long long x=ans.w[i],lenc=0;\n        while(x)\n        {\n            lenc++;\n            x/=10;\n        }\n        for(int j=1;j<=8-lenc;++j)\n            cout<<0;\n        cout<<ans.w[i];\n    }\n}\nBigInt operator +(const BigInt &a,const BigInt &b)\n{\n    BigInt c;\n    c.len=max(a.len,b.len)+1;\n    for(int i=1;i<=c.len;++i)\n    \tc.w[i]=0;\n    for(int i=1;i<=c.len;++i)\n    {\n        c.w[i]+=a.w[i]+b.w[i];\n        c.w[i+1]+=c.w[i]/base;\n        c.w[i]%=base;\n    }\n    while(c.w[c.len]==0 && c.len>1)\n        c.len--;\n    return c;\n}\nBigInt operator *(const BigInt &a,const BigInt &b)\n{\n    BigInt c;\n    c.len=a.len+b.len;\n    for(int i=1;i<=c.len;++i)\n    \tc.w[i]=0;\n//\twrite(a); cout<<\" \"; write(b); cout<<endl; cout<<a.w[1]*b.w[1]<<endl;\n    for(int i=1;i<=a.len;++i)\n        for(int j=1;j<=b.len;++j)\n        {\n            c.w[i+j-1]+=a.w[i]*b.w[j];\n            c.w[i+j]+=c.w[i+j-1]/base;\n            c.w[i+j-1]%=base;\n        }\n    while(c.w[c.len]==0 && c.len>1)\n        c.len--;\n//\twrite(c); cout<<endl;\n    return c;\n}\nBigInt max(const BigInt &a,const BigInt &b)\n{\n    if(a.len>b.len) return a;\n    if(a.len<b.len) return b;\n    for(int i=a.len;i>=1;--i)\n        if(a.w[i]>b.w[i]) return a;\n        else if(a.w[i]<b.w[i]) return b;\n    return a;\n}\nBigInt pow(int n,int b)\n{\n    BigInt ans,x;\n    ans.w[1]=1; ans.len=1;\n    x.w[1]=n; x.len=1;\n    for(int i=1;i<=b;++i)\n    \tans=ans*x;\n    return ans;\n}\nBigInt ctime(BigInt a,int b)\n{\n    BigInt ans=a;\n    for(int i=ans.len+1;i<=ans.len+3;++i)\n    \tans.w[i]=0;\n    for(int i=1;i<=ans.len;++i)\n        ans.w[i]*=b;\n    for(int i=1;i<=ans.len;++i)\n    {\n        ans.w[i+1]+=ans.w[i]/base;\n        ans.w[i]%=base;\n    }\n    while(ans.w[ans.len+1]>0)\n    {\n        ans.len++;\n        ans.w[ans.len+1]+=ans.w[ans.len]/base;\n        ans.w[ans.len]%=base;\n    }\n //   write(a); cout<<\" \"<<b<<\" \"; write(ans); cout<<endl;\n    return ans;\n}\nBigInt dp[85][85],ans,p[85];\nint a[85];\nint m;\nBigInt solve(int l,int r)\n{\n    if(dp[l][r].len>=1) return dp[l][r];\n    if(l==r)\n    {\n        dp[l][r]=ctime(pow(2,m-(r-l)),a[l]);\n        return dp[l][r];\n    }\n//\tcout<<l<<\" \"<<r<<\" \"<<a[l]<<endl;\n//\twrite(ctime(pow(2,m-(r-l)),a[l])); cout<<endl;\n//\twrite(ctime(pow(2,m-(r-l)),a[r])); cout<<endl;\n//\tcout<<endl<<endl<<endl;\n    dp[l][r]=max(solve(l+1,r)+ctime(p[m-(r-l)],a[l]),solve(l,r-1)+ctime(p[m-(r-l)],a[r]));\n    return dp[l][r];\n}\nint main()\n{\n    int n;\n    cin>>n>>m;\n    ans.w[1]=0; ans.len=1; p[0].len=1; p[0].w[1]=1;\n    for(int i=1;i<=m;++i)\n    \tp[i]=ctime(p[i-1],2);\n //   write(p[30]);\n    for(int i=1;i<=n;++i)\n    {\n    \tfor(int j=1;j<=m;++j)\n            for(int k=1;k<=m;++k)\n                dp[j][k].len=0;\n        for(int j=1;j<=m;++j)\n            cin>>a[j];\n        ans=ans+solve(1,m);\n//\t\twrite(ans); cout<<endl;\n    }\n    write(ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1550905974,
        "uid": 90285,
        "name": "\u2468baka",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u5f88\u666e\u901a\u7684\uff24\uff30\uff0c\u786e\u8ba4\u884c\u4e0e\u884c\u65e0\u5173\u540e\u5c31\u80fd\u533a\u95f4\uff24\uff30\u641e\u4e86\u3002\n\n\u6ce8\u610f\u8981\u5199\u9ad8\u7cbe\u5ea6\uff0c\u8981\u4e48\u7528\\_\\_int128\u3002\n\n\u5f53\u7136\u8fd9\u4e2a\u4e1c\u897f\u4ec5\u5728\uff16\uff14\u4f4d\u7cfb\u7edf\u4e14\u7f16\u8bd1\u5668\u652f\u6301\uff23\uff0b\uff0b\uff11\uff11\u7684\u60c5\u51b5\u4e0b\u624d\u53ef\u4ee5\u7528\uff0c\uff2e\uff2f\uff29\uff30\u614e\u7528\u3002\n\n\u53e6\u5916\u9700\u8981\u624b\u5199\uff29\uff2f\uff0c\u6ce8\u610f\uff29\uff2f\u7ec6\u8282\u3002\u8bb0\u5f97\u5224\uff10\uff0c\u4e0d\u8981\u8f93\u51fa\u65e0\u7528\u5b57\u7b26\uff08\u90a3\u4e0d\u4e00\u5b9a\u662f\u4ec0\u4e48\uff09\u3002\n\n\u6211\u4e24\u6b21\u90fd\uff37\uff21\u5728\uff29\uff2f\u4e0a\u4e86\uff0e\uff0e\uff0e\uff0e\uff0e\uff0e\n\n\u6700\u540e\u4e0a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\nf[i][j]\u8868\u793a\u5bf9\u4e8e\u4e00\u884c\uff0c\u4ece\uff49\u5230\uff4a\u95ed\u533a\u95f4\u7684\u6700\u5927\u4ef7\u503c\u3002\n\nf[st][ed] = max( f[st][ed-1] + in[ed] \\* pw[n-len+1] , f[st+1][ed] + in[st] \\* pw[n-len+1] );\n\n\n\u4ee3\u7801::\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define i128 __int128\n#define debug cout\nusing namespace std;\nconst int maxn=85;\nint in[maxn],n,m;\ni128 pw[maxn],ans;\ni128 f[maxn][maxn];\ninline void pre()\n{\n    pw[0]=1;\n    for(int i=1;i<maxn;i++)\n        pw[i] = pw[i-1]*2;\n}\ninline void dp()\n{\n    for(int i=1;i<=n;i++) scanf(\"%d\",&in[i]);\n    memset(f,0,sizeof(f));\n    for(int i=1;i<=n;i++)\n        f[i][i] = in[i] * pw[n];\n    for(int len=2;len<=n;len++)\n        for(int st=1;st+len-1<=n;st++)\n        {\n            const int ed=st+len-1;\n            f[st][ed] = max( f[st][ed-1] + in[ed] * pw[n-len+1] , f[st+1][ed] + in[st] * pw[n-len+1] );\n        }\n}\ninline void putint(i128 arg)\n{\n    if(!arg)\n    {\n        puts(\"0\");\n        return;\n    }\n    static char str[50],*now;\n    now=str;\n    while(arg)\n    {\n        *now++ = arg%10+'0',\n        arg/=10;\n    }\n    now--;\n    while(now>=str)\n        putchar(*now--);\n    putchar('\\n');\n}\nint main()\n{\n    scanf(\"%d%d\",&m,&n);\n    pre();\n    for(int i=1;i<=m;i++)\n    {\n        dp();\n        ans += f[1][n];\n    }\n    putint(ans);\n    return 0;\n}\n```",
        "postTime": 1505784526,
        "uid": 31907,
        "name": "cmd2001",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    },
    {
        "content": "\u6d1b\u8c37\u7684\u8bc4\u6d4b\u673a\u771f\u795e\u5947\uff0c\u6211\u5728\u81ea\u5df1\u7535\u8111\u4e0a\u8dd1\u4e00\u4e2a\u968f\u673a80\\*80\u7684\u6570\u636e\u7528\u4e868s\uff0c\u6d1b\u8c37\u6700\u6162\u7684\u7adf\u71360.3s\u5c31\u8fc7\u4e86\uff0c\u662f\u4e0d\u662f\u6570\u636e\u592a\u6c34\u4e86\uff08\u624b\u52a8\u6ed1\u7a3d\uff09\n\n\u8fd9\u5e94\u8be5\u5c5e\u4e8e\u4e00\u4e2a\u6bd4\u8f83\u57fa\u7840\u7684dp\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u884c\u4e0e\u884c\u4e4b\u95f4\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u5f53\u6bcf\u4e2a\u884c\u53d6\u6700\u5927\u7684\u65f6\u5019\u548c\u5c31\u662f\u6700\u5927\u7684\uff08\u4e00\u4e2a\u5c0f\u5c0f\u7684\u8d2a\u5fc3\u601d\u60f3\uff09\uff0c\n\n\u7136\u540e\u6211\u4eec\u5c06\u6bcf\u4e2a\u884c\u5206\u5f00\u8003\u8651\uff0c\n\n\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u60f3\u5230\u8bbe\u7b54\u6848dp[i][j]\u8868\u793a\u5c06\u67d0\u4e00\u884c\u53d6\u5230\u5269\u4e0b[i,j]\u8fd9\u6bb5\u533a\u95f4\u7684\u6570\uff08\u5373\u53d6\u8d70\u4e86[1,i-1],[j+1,m]\u8fd9\u4e24\u7aef\u533a\u95f4\uff09\u65f6\u53ef\u4ee5\u5f97\u5230\u7684\u6700\u5927\u5206\u6570\u3002\n\n\u8003\u8651\u8f6c\u79fbdp[i][j]=max(dp[i-1][j]+b[i-1]\\*2^(m+i-j-1),dp[i][j+1]+b[i+1]\\*2^(m+i-j-1))\u8fd9\u4e2a\u8fd8\u662f\u5f88\u597d\u63a8\u7684\uff0c\u5373\u8fd9\u4e2a\u533a\u95f4\u662f\u7531[i-1,j]\u53d6\u8d70b[i-1]\u8f6c\u79fb\u6765\u7684\uff0c\u8fd8\u662f\u7531[i,j+1]\u53d6\u8d70b[j+1]\u8f6c\u79fb\u6765\u7684\u3002\u6700\u540e\u7684\u7b54\u6848\u5c31\u662fmax(dp[i][i]+b[i]\\*2^m)\uff08\u5373\u6700\u540e\u53d6\u8d70\u7684\u662fb[i]\uff09\n\n\u7136\u540e\u6570\u636e\u8303\u56f4\u91cc\u7ed9\u4e86\u63d0\u793a60%\u7684\u6570\u636e\u7b54\u6848\u4e0d\u4e0b\u4e8e10^16\uff0c\u5176\u5b9e\u60f3\u60f3\u4e5f\u77e5\u90532^80\u7edd\u5bf9\u7206\u4e86longlong\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u6253\u4e2a\u9ad8\u7cbe\u5ea6\u5c31\u597d\u4e86\u3002\n\n\u6211\u8fd8\u662f\u4e60\u60ef\u7684\u628a\u9ad8\u7cbe\u5ea6\u5c01\u88c5\u4e86\u4e00\u4e0b\uff08\u8003\u8bd5\u7684\u65f6\u5019\u8fd8\u662f\u4e0d\u8981\u8fd9\u6837\u7684\u597d\uff0c\u5e38\u6570\u6bd4\u8f83\u5927\uff09\u3002\u5728\u63d0\u4ea4\u4e4b\u524d\uff0c\u52a0\u4e86\u65e0\u6570\u7684\u4f18\u5316\u3002\u3002\u3002\n\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int N=1010;\nconst int bit=1e6;\nconst int M=101;\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while (ch<'0' || ch>'9'){if (ch=='-')f=-1;ch=getchar();}\n    while ('0'<=ch && ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*f;\n}\nstruct BigInt{\n    int len;\n    int a[N];\n    inline void reset(){\n        len=0;memset(a,0,sizeof(a));\n    }\n    inline BigInt operator * (const int &x)const{\n        BigInt t=(*this);\n        int len=t.len;\n        for (int i=1;i<=len;i++)t.a[i]*=x;\n        for (int i=1;i<=len;i++)\n            t.a[i+1]+=t.a[i]/bit,t.a[i]%=bit;\n        if (t.a[len+1]>0)t.len++;\n        return t;\n    }\n    inline BigInt operator + (const BigInt &x)const{\n        BigInt t=(*this);\n        int tl=max(t.len,x.len);\n        for (int i=1;i<=tl;i++){\n            t.a[i]+=x.a[i];\n            t.a[i+1]+=t.a[i]/bit;\n            t.a[i]%=bit;\n        }\n        if (t.a[tl+1]>0)tl++;t.len=tl;\n        return t;\n    }\n    inline BigInt operator = (const int &x){\n        len=1;a[1]=x;\n        return *this;\n    }\n    inline void write(){\n        BigInt t=(*this);\n        for (int i=t.len;i>0;i--){\n            int tmp=bit;\n            while (i<t.len && tmp>10*t.a[i])tmp/=10,putchar(48);\n            printf(\"%d\",t.a[i]);\n        }\n        puts(\"\");\n    }\n}f[M][M],p[M],res;\nint n,m,b[M];\ninline void ChkMax(BigInt &a,BigInt b){\n    if (a.len<b.len){a=b;return;}\n    else if (a.len!=b.len)return;\n    for (int i=a.len;i>0;i--){\n        if (a.a[i]<b.a[i]){a=b;return;}\n        else if (a.a[i]!=b.a[i])return;\n    }\n}\ninline void dp(){\n    for (int i=1;i<=m;i++)\n        for (int j=m;j>=i;j--){\n            f[i][j].len=0;\n            BigInt t1=f[i-1][j]+p[m-j+i-1]*b[i-1],t2=f[i][j+1]+p[m-j+i-1]*b[j+1];\n            ChkMax(t2,t1);\n            ChkMax(f[i][j],t2);\n        }\n    BigInt ans;ans=-1;\n    for (int i=1;i<=m;i++){\n        BigInt t=f[i][i]+p[m]*b[i];\n        ChkMax(ans,t);\n    }\n    res=res+ans;\n    return;\n}\nint main(){\n    p[0]=1;\n    for (int i=1;i<=90;i++)p[i]=p[i-1]*2;\n    n=read(),m=read();\n    for (int i=1;i<=n;i++){\n        for (int j=1;j<=m;j++)\n            b[j]=read();\n        dp();\n    }\n    res.write();\n    return 0;\n}\n```",
        "postTime": 1504269547,
        "uid": 54916,
        "name": "I_AM_HelloWord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1005 \u3010\u77e9\u9635\u53d6\u6570\u6e38\u620f\u3011"
    }
]