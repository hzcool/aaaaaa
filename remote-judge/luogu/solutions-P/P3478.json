[
    {
        "content": "\u9898\u610f\uff1a\n\n\u7ed9\u51fa\u4e00\u4e2aN\u4e2a\u70b9\u7684\u6811,\u627e\u51fa\u4e00\u4e2a\u70b9\u6765,\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\u7684\u6811\u65f6,\u6240\u6709\u70b9\u7684\u6df1\u5ea6\u4e4b\u548c\u6700\u5927\u3002\n\n\u89e3\u6790\uff1a\n\n\u9996\u5148\u66b4\u529b\u7684\u505a\u6cd5\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u90fd\u7528dfs\u6c42\u4e00\u904d,\u4e4b\u540e\u6bd4\u8f83\u5927\u5c0f\u3002\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u5b9e\u9645\u4e0a\u5bf9\u4e8ex\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u7684\u7236\u4eb2\u8282\u70b9\u63a8\u51fa\u5b83\u7684\u7b54\u6848\u3002\n\n\u5982\u56fe\uff1a\n\n\u4ee55\u4e3a\u6839\u65f6\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/60223.png)\n\n\u4ee54\u4e3a\u6839\u65f6\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/60225.png)\n\u89c2\u5bdf\u53d1\u73b0:4\u7684\u5b50\u6811(\u5305\u62ec\u81ea\u5df1)\u6df1\u5ea6\u90fd\u51cf\u5c11\u4e861,\u539f\u68395\u7684\u5b50\u6811\u7684\u6df1\u5ea6\u90fd\u589e\u52a0\u4e861\u3002\n\n\u4e5f\u5c31\u662f\u8bf4:\u5bf9\u4e8ex,\u5b83\u7684\u7236\u4eb2\u662fy\u3002\n\nf[x]=f[y]-size[x]+n-size[x].\n\n\u4e5f\u5c31\u662f\u8bf4\u53ea\u8981\u6c42\u51fa\u4e00\u4e2a\u70b9,\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5b83\u6c42\u51fa\u5176\u4ed6\u70b9\u7684ans\u3002\n\n\u8fd9\u4e2a\u65b9\u6cd5\u53eb\u4e8c\u6b21\u626b\u63cf\u4e0e\u6362\u6839\u6cd5\u3002\n\n\u6ce8:\u8bb0\u5f97\u5f00long long\n\ncode:\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1000010;\nstruct edge\n{\n\tint to,nxt;\n}e[maxn<<1];\nint n,cnt,id;\nint head[maxn];\nlong long ans;\nlong long f[maxn],dep[maxn],size[maxn];\ninline void add(int u,int v)\n{\n\te[++cnt].nxt=head[u];\n\thead[u]=cnt;\n\te[cnt].to=v;\n}\nvoid dfs1(int x,int fa)\n{\n\tsize[x]=1;dep[x]=dep[fa]+1;\n\tfor(int i=head[x];i;i=e[i].nxt)\n\t{\n\t\tint y=e[i].to;\n\t\tif(y==fa) continue;\n\t\tdfs1(y,x);\n\t\tsize[x]+=size[y];\n\t}\n}\nvoid dfs2(int x,int fa)\n{\n\tfor(int i=head[x];i;i=e[i].nxt)\n\t{\n\t\tint y=e[i].to;\n\t\tif(y==fa) continue;\n\t\tf[y]=f[x]+n-2*size[y];\n\t\tdfs2(y,x);\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u,v;scanf(\"%d%d\",&u,&v);\n\t\tadd(u,v),add(v,u);\n\t}\n\tdfs1(1,0);\n\tfor(int i=1;i<=n;i++) f[1]+=dep[i];\n\tdfs2(1,0);\n\tfor(int i=1;i<=n;i++) if(ans<f[i]) ans=f[i],id=i;\n\tprintf(\"%d\",id);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1559803049,
        "uid": 145441,
        "name": "nofind",
        "ccfLevel": 6,
        "title": "P3478 [POI2008]STA-Station(\u6362\u6839\u6cd5)"
    },
    {
        "content": "\u5982\u9898\uff0c\u8fd9\u662f\u4e00\u9898\u975e\u5e38\u660e\u663e\u7684\u6811\u5f62dp\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5f00\u59cb\u6839\u636e**\u6811\u5f62dp**\u7684\u601d\u60f3\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u9898\u610f\u662f\u627e\u5230\u8fd9\u68f5\u6811\u7684\u4e00\u4e2a\u70b9\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u70b9\u6210\u4e3a\u6839\u65f6\u8fd9\u68f5\u6811\u7684\u603b\u6df1\u5ea6\uff08\u5373\u6bcf\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u4e4b\u548c\uff09\u6700\u5927\u3002\u90a3\u4e48\u9996\u5148\u6211\u4eec\u5f88\u660e\u663e\u7684\u77e5\u9053\uff0c\u5bf9\u4e8e\u4e00\u68f5\u6811\uff0c\u4efb\u4f55\u7684\u8282\u70b9\u6211\u4eec\u90fd\u53ef\u4ee5\u628a\u5b83\u770b\u4f5c\u6839\uff0c\u90a3\u4e48\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5047\u8bbe\u7b2c\u4e00\u4e2a\u70b9\u4e3a\u6839\uff0c\u5e76\u4ee5\u6b64\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u4ee5\u53ca\u6240\u5904\u6df1\u5ea6\u3002\u8fd9\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u7c7b\u4f3c\u4e8e***\u6811\u94fe\u5256\u5206***\u7684\u7b2c\u4e00\u6b65dfs\u3002\n\n\u73b0\u5728\u6211\u4eec\u8003\u8651\uff0c\u5982\u679c\u6211\u4eec\u8f6c\u6362\u4e86\u8fd9\u68f5\u6811\u7684\u6839\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff1a\n\n\u5982\u679c\u6211\u4eec\u5427\u6839\u4ecex\u53d8\u6210y\uff0c\u4e14St.**x=fa[y]**\uff0c\u5373x\u662fy\u7684\u7236\u4eb2\u8282\u70b9\uff08\u5728\u7b2c\u4e00\u6b21dfs\u7684\u60c5\u51b5\u4e0b\uff09\uff0c\u90a3\u4e48\u5c31\u975e\u5e38\u663e\u7136\u4e86\uff0cb\u7684\u5b50\u6811\u8282\u70b9\u5168\u90fd-1\uff0c\u5176\u4f59\u7684\u90fd+1\uff0c\u8fd9\u5c31\u662f\u8fd9\u4e00\u6b21\u64cd\u4f5c\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u3002\n\n\u4f46\u662f\u6211\u4eec\u5927\u53ef\u4ee5\u6ca1\u6709\u5fc5\u8981\u6bcf\u6b21\u90fd\u5bf9\u5b50\u6811\u8fdb\u884cquery\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u7b2c\u4e00\u6b21dfs\u7684\u65f6\u5019\u6c42\u51fa\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u6743\u503c\u5c31\u597d\u4e86\uff0c\u8fd9\u662f\u975e\u5e38\u7b80\u5355\u7684\u3001\u3001\u3001\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define N 1000100\nusing namespace std;\ntypedef long long ll;\nstruct Edge{\n    int u,v,next;\n}G[2\\*N];\nint d[N];\nint tot=0,head[4\\*N];ll size[N],n,dw[N],up[N],fa[N];\nvoid addedge(int u,int v){\n    G[++tot].u=u;G[tot].v=v;G[tot].next=head[u];head[u]=tot;\n    G[++tot].u=v;G[tot].v=u;G[tot].next=head[v];head[v]=tot;\n}\nvoid dfs1(int u,int f){\n    size[u]=1;\n    for(int i=head[u];i;i=G[i].next){\n        int v=G[i].v;if(v==f)continue;\n        fa[v]=u;d[v]=d[u]+1;\n        dfs1(v,u);\n        size[u]+=size[v];\n        dw[u]+=dw[v]+size[v];\n    }\n}\nvoid dfs2(int u){\n    if(u>1)up[u]=up[fa[u]]+dw[fa[u]]-dw[u]-2\\*1LL\\*size[u]+n;\n    for(int i=head[u];i;i=G[i].next){\n        int v=G[i].v;if(v==fa[u])continue;\n        dfs2(v);\n    }\n}\ninline int read(){\n    int f=1,x=0;char ch;\n    do{ch=getchar();if(ch=='-')f=-1;}while(ch<'0'||ch>'9');\n    do{x=x\\*10+ch-'0';ch=getchar();}while(ch>='0'&&ch<='9');\n    return f\\*x;\n}\nint main(){\n    n=read();\n    for(int i=1;i<n;i++){\n        int u=read(),v=read();\n        addedge(u,v);\n    }\n    dfs1(1,0);dfs2(1);ll ans=0;\n    //for(int i=1;i<=n;i++)printf(\"%d \",up[i]);\n    int num;\n    for(int i=1;i<=n;i++){\n        if(up[i]+dw[i]>ans)ans=up[i]+dw[i],num=i;\n    }\n    printf(\"%d\\n\",num);\n    return 0;\n}\n```",
        "postTime": 1488462027,
        "uid": 2978,
        "name": "zcysky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3478 \u3010[POI2008]STA-Station\u3011"
    },
    {
        "content": "### \u5410\u69fd\n\n\u6211\u542c\u82f1\u6587\u9898\u9762\u8bf4\uff0c\u6709\u591a\u7ec4\u89e3\u7684\u65f6\u5019\uff0c\u4efb\u610f\u8f93\u51fa\u4e00\u4e2a\u5373\u53ef\u3002\n\n\u7ed3\u679c\u6570\u636e\u662f\u8981\u6c42\u8f93\u51fa\u7f16\u53f7\u6700\u5c0f\u7684\u90a3\u4e2a\u3002\n\n---\n\n\u5f88\u663e\u7136\u7684\u4e00\u4e2a\u6811\u5f62\u52a8\u89c4\u3002\n\n\u8bbe$size_k$\u4ee3\u8868$k$\u7684\u5b69\u5b50\u7684\u4e2a\u6570\u3002\n\n\u8bbe$f_k$\u4ee3\u8868$k$\u7684\u7ed3\u679c\u3002\n\n\u8003\u8651\u5148\u4ee4$1$\u4e3a\u6839\u7ed3\u70b9\uff0c\u66b4\u529b\u6c42\u51fa$f_1$\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u987a\u5e26\u6c42\u51fa\u6574\u4e2a$size$\u6570\u7ec4\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/26229.png)\n\n**\u4ee5\u6837\u4f8b\u4e3a\u4f8b**\n\n\u5982\u56fe\uff0c\u7ea2\u5708\u5185\u7684\u7ed3\u70b9\u4e2a\u6570\u4e3a$size_4$\uff0c\u5728\u6837\u4f8b\u4e2d$size_4=7$\uff0c\u7eff\u5708\u4e2d\u7684\u7ed3\u70b9\u4e2a\u6570\u4e3a$size_1$\uff0c\u5728\u6837\u4f8b\u4e2d$size_1=1$\uff0c$size$\u6570\u7ec4\u7684\u5b9a\u4e49\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u5f53\u6211\u4eec\u5047\u8bbe$1$\u53f7\u7ed3\u70b9\u6240\u8054\u901a\u7684\u70b9\u4e3a\u6839\u65f6\uff0c\u5728\u6837\u4f8b\u4e2d\uff0c\u53ea\u80fd\u4e3a$4$\u53f7\u7ed3\u70b9\uff0c\u6b64\u65f6\uff0c\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa$f_1=18$\u548c\u6574\u4e2a$size$\u6570\u7ec4\u3002\n\n\u4e3a\u4e86\u6587\u7ae0\u53ef\u8bfb\u6027\u8d77\u89c1\uff0c\u5728\u8fd9\u91cc\u5217\u51fa\u6709\u4f5c\u7528\u7684\uff1a$size_1=1$\uff0c$size_4=7$\n\n\u90a3\u4e48\u6211\u4eec\u7684\u95ee\u9898\u5c31\u662f\uff0c\u5982\u4f55\u4f7f\u7528\u5df2\u77e5\u7684$f_1$\u548c$size$\u6570\u7ec4\uff0c\u6c42\u51fa$f_4$\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5f53\u6839\u8f6c\u79fb\u5230$4$\u53f7\u7ed3\u70b9\u7684\u65f6\u5019\uff0c$size_4$\u6240\u5305\u542b\u7684\u5168\u90e8\u7ed3\u70b9\u7684\u6df1\u5ea6\u90fd\u51cf$1$\u4e86\uff0c\u56e0\u6b64\u6839\u8f6c\u79fb\u5230$4$\u53f7\u7ed3\u70b9\u9996\u5148\u8981\u4ed8\u51fa$size_4$\u7684\u4ee3\u4ef7\u3002\n\n\u5176\u6b21\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u4e0d\u88ab$size_4$\u6240\u5305\u542b\u7684\u5176\u4ed6\u6240\u6709\u7ed3\u70b9\u7684\u6df1\u5ea6\u90fd\u52a0$1$\u4e86\uff0c\u56e0\u6b64\u6839\u8f6c\u79fb\u5230$4$\u53f7\u7ed3\u70b9\u53ef\u4ee5\u83b7\u5f97$n-size_4$\u7684\u6536\u76ca\u3002\n\n\u6574\u7406\u4e00\u4e0b\uff1a$f_4=f_1+n-2\u00d7size_4$\n\n\u6240\u4ee5\u5728\u6837\u4f8b\u4e2d\uff0c$f_4=12$\uff0c\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u753b\u56fe\u68c0\u9a8c\u3002\n\n---\n\n\u63a8\u5e7f\u5230\u6240\u6709\u7684\u60c5\u51b5\u4e0b\uff0c\u5f53\u5f53\u524d\u6839\u8282\u70b9\u4e3a$x$\uff0c\u5c06\u5411$k$\u53f7\u7ed3\u70b9\u8f6c\u79fb\u65f6\uff0c\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa$f_k=f_x+n-2\u00d7size_k$\n\n\u6c42\u51fa\u6574\u4e2a$f$\u6570\u7ec4\u7684\u8fc7\u7a0b\u9700\u8981\u7531\u9012\u5f52\u5b8c\u6210\u3002\n\n---\n\n**\u6ce8\u610f**\n\n\u9700\u8981\u5f00``long long``\n\n\u5728\u6c42$f_1$\u7684\u8fc7\u7a0b\u4e2d\u53ea\u80fd\u4f20\u4e24\u4e2a\u53c2\u6570\uff0c\u6240\u4ee5$dep$\u9700\u8981\u7528\u6570\u7ec4\u8bb0\u5f55\u3002\n\n---\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n\nusing namespace std;\n#define maxn 2000007\n#define maxn1 1000007\nlong long int x,y,tot,n,Head[maxn],Next[maxn],u[maxn],v[maxn];\nlong long int size[maxn1],f[maxn1],ans,kkk,dep[maxn1];\nbool vis[maxn1],gfg[maxn1];\ninline int max(int a,int b)\n{\n    return a>b?a:b;\n}\ninline void read(long long &x)\n{\n    int fh;\n    char ch;\n    x=0;\n    while(ch!='-'&&(ch<'0'||ch>'9')) ch=getchar();\n    if(ch=='-'){\n        fh=-1;\n        ch=getchar();\n    }\n    else fh=1;\n    while(ch>='0'&&ch<='9')\n    {\n        x=(x<<1)+(x<<3)+ch-'0';\n        ch=getchar();\n    }\n}\ninline void add()\n{\n    u[++tot]=x,v[tot]=y;\n    Next[tot]=Head[x],Head[x]=tot;\n    u[++tot]=y,v[tot]=x;\n    Next[tot]=Head[y],Head[y]=tot;//\u5efa\u8fb9\n}\nlong long int dfs(int x,int root)//\u6c42f1\u548csize\n{\n    int sum=0;\n    vis[x]=1;\n    size[x]=1;\n    for(int i=Head[x];i;i=Next[i])\n    {\n        if(vis[v[i]]) continue;\n        dep[v[i]]=dep[x]+1;\n        sum+=dfs(v[i],x);\n    }\n    size[root]=size[root]+size[x];\n    return sum+dep[x];\n}\nvoid zy(int x,int root)//\u8f6c\u79fb\n{\n    gfg[x]=1;\n    for(int i=Head[x];i;i=Next[i])\n    {\n        if(gfg[v[i]]) continue;\n        f[v[i]]=f[x]+n-2*size[v[i]];\n        if(f[v[i]]>ans)\n        {\n            ans=f[v[i]];\n            kkk=v[i];\n        }\n        if(f[v[i]]==ans) kkk=min(kkk,v[i]); \n        zy(v[i],x);\n    }\n}\nint main()\n{\n    read(n);\n    for(register int i=1;i<n;i++)\n    {\n        read(x);\n        read(y);\n        add();\n    }\n    f[1]=dfs(1,0);\n    gfg[1]=1;\n    ans=f[1];\n    kkk=1;\n    zy(1,0);\n    printf(\"%d\\n\",kkk);\n}\n```",
        "postTime": 1533130016,
        "uid": 28910,
        "name": "\u89c8\u904d\u5343\u79cb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3478 \u3010[POI2008]STA-Station\u3011"
    },
    {
        "content": "#\u8fd9\u662f\u4e00\u9053\u6bd4\u8f83\u7b80\u5355\u7684\u6811\u5f62DP\u3002\n\n##\u6211\u4eec\u5b9a\u4e49f[i]\u8868\u793a\u4ee5i\u4e3a\u6839\u7684\u6811\u7684\u6df1\u5ea6\u548c\n\n\u9996\u5148\u4ee51\u4e3a\u6839DFS\u4e00\u904d\u6c42\u51fa\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u7ed3\u70b9\u6570\uff0c\u7528size[i]\u8868\u793a\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u7ed3\u70b9\u4e2a\u6570\u3002\n\n\u518ddfs\u904d\u5386\u6574\u68f5\u6811\uff0c\u8fd9\u91cc\u7528u\u8868\u793a\u5f53\u524d\u7ed3\u70b9\uff0c\u7528v\u8868\u793a\u6bcf\u4e2a\u513f\u5b50\u7ed3\u70b9\uff0c\n\n##\u5219\u6709 f[v] = f[u] + n - 2 \\* size[v]\n\n\u5b9e\u9645\u4e5f\u662f\u5f88\u5bb9\u6613\u60f3\u7684\uff0c\n\n\u672c\u6765\u662f\u4ee5u\u4e3a\u6839\u7684\u6811\uff0c\u53d8\u6210\u4ee5\u513f\u5b50v\u4e3a\u6839\u7684\u6811\uff0c\n\n\u90a3\u4e48v\u7684\u6240\u6709\u7ed3\u70b9\u7684\u6df1\u5ea6\u90fd\u4f1a\u51cf1\uff0c\u6df1\u5ea6\u548c\u5c31\u4f1a\u51cf\u5c11size[v]\uff0c\n\n\u540c\u6837\u5730\uff0c\u6240\u6709\u4e0d\u5728v\u7684\u5b50\u6811\u4e0a\u7684\u7ed3\u70b9\u7684\u6df1\u5ea6\u90fd\u4f1a+1\uff0c\u6df1\u5ea6\u548c\u5c31\u4f1a\u52a0\u4e0an - size[v]\uff0c\n\n\u53ef\u4ee5\u81ea\u884c\u753b\u56fe\u8bc1\u660e\u3002\n\n\u53e6\u5916\uff0c\u697c\u4e0b\u6ca1\u6709\u63d0\u5230\u4e00\u4e2a\u7ec6\u8282\uff0c\u5bf9\u4e8ef\uff0c\u8981\u5f00long long \u5b58\u50a8\uff0c\u5426\u5219\u4f1aWA\u63892\u4e2a\u70b9\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#include <set>\n#include <map>\n#include <vector>\n#include <stack>\n#include <list>\n#define rep(i,m,n) for(int i=m;i<=n;i++)\n#define dop(i,m,n) for(int i=m;i>=n;i--)\n#define lowbit(x) (x&(-x))\n#define ll long long\n#define INF 2147483647\n#define Open(s) freopen(s\".in\",\"r\",stdin);freopen(s\".out\",\"w\",stdout);\n#define Close fclose(stdin);fclose(stdout);\nusing namespace std;\n\ninline int read(){\n    int s=0,w=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n    return s*w;\n}\ninline void write(int x){\n    if(x<0) x=-x,putchar('-');\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\n\nconst int maxn=1000010;\n\nstruct Edge{\n    int next, to;\n}e[maxn<<1];\n\nint head[maxn], num, n, m, id;\nll f[maxn], dep[maxn], size[maxn], ans;\n\ninline void Add(int from,int to){\n    e[++num].to=to;\n    e[num].next=head[from];\n    head[from]=num;\n    swap(from, to);\n    e[++num].to=to;\n    e[num].next=head[from];\n    head[from]=num;\n}\n\ninline void dfs(int u,int fa){\n    size[u] = 1;\n    dep[u] = dep[fa] + 1;\n    for (int i=head[u];i;i=e[i].next) {\n        if (e[i].to != fa){\n            dfs (e[i].to, u);\n            size[u] += size[e[i].to];\n        }\n    }\n}\n\ninline void DFS(int u,int fa){\n    for (int i=head[u];i;i=e[i].next) {\n        if(e[i].to != fa){\n            f[e[i].to] = f[u] - (size[e[i].to]<<1) + n;\n            DFS (e[i].to, u);\n        }\n    }\n}\nint main(){\n    n=read();\n    rep(i,2,n) Add(read(), read());\n    dfs(1,1);\n    rep(i,1,n) f[1]+=dep[i];\n    DFS(1,1);\n    rep(i,1,n) if(f[i] > ans) ans=f[i], id=i;\n    write(id);\n    return 0;\n}\n```",
        "postTime": 1508852441,
        "uid": 61834,
        "name": "Huami360",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3478 \u3010[POI2008]STA-Station\u3011"
    },
    {
        "content": "\u90fd\u662f\u7528\u52a8\u89c4\u505a\u7684\u5927\u4f6cqwq\n\n\u8fd9\u9898\u5176\u5b9e\u8fd8\u6709\u4e00\u79cd\u6bd4\u8f83\u7b80\u5355\u7684\u505a\u6cd5\n\n\u5f88\u660e\u663e\u7b54\u6848\u53ea\u53ef\u80fd\u662f**\u6811\u7684\u76f4\u5f84**\u4e24\u7aef\u70b9\u7684\u5176\u4e2d\u4e00\u4e2a (\u2299v\u2299)\u55ef \u5c31\u662f\u9171\u7d2b!\n\nO(n) (~~\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u7b2c9\u4e2a\u70b9\u4e00\u76f4T?~~)\n\n```\n//BY ALways\n#pragma GCC optimize (2)\n#include<bits/stdc++.h>\n#define M 1000005\n#define il inline\n#define ll long long\n#define inf 0x7f7f7f7f\n#define rep(i , x , y) for(register ll i = x ; i <= y ; ++i)\n#define dor(i , x , y) for(register ll i = x ; i >= y ; --i)\nusing namespace std ;\nll n , x , y , k , rt , maxd , pos = 1 , d[M] , ans[M] , h[M] , nex[M << 1] , to[M << 1] ;\nbool vis[M] ;\nil ll re(){\n\tll f = 1 , r = 0 ; char ch = getchar() ;\n\twhile(ch < '0' || ch > '9'){if(ch == '-')f = -1 ; ch = getchar();}\n\twhile(ch >= '0' && ch <= '9'){r = r * 10 + ch - '0' ; ch = getchar();}\n\treturn (r *= f) ;\n}\nil void add(ll u , ll v){\n\tnex[++k] = h[u] ; to[k] = v ; h[u] = k ;\n} \nil void calc(){\n\tmemset(vis , 0 , sizeof vis) ;\n\tll A = 0 ;\n\trep(i , 1 , n)A += d[i] ;\n\tif(A > x)x = A , y = rt ;\n}\nil void dfs(ll u , ll fa , ll dep){\n\td[u] = dep ; if(dep > maxd)maxd = dep , pos = u ;\n\tfor(ll i = h[u] ; i ; i = nex[i]){\n\t\tll v = to[i] ;\n\t\tif(v == fa || vis[v])continue ; vis[v] = 1 ;\n\t\tdfs(v , u , dep + 1) ;\n\t}\n}\nint main(){\n\tn = re() ;\n\trep(i , 1 , n - 1){\n\t\tx = re() ; y = re() ;\n\t\tadd(x , y) ; add(y , x) ;\n\t}\n\tx = 0 ;\n\tmaxd = 0 ; rt = pos ; dfs(rt , rt , 0) ; calc() ;\n\tmaxd = 0 ; rt = pos ; dfs(rt , rt , 0) ; calc() ;\n\tmaxd = 0 ; rt = pos ; dfs(rt , rt , 0) ; calc() ; \n\tprintf(\"%d\\n\",y) ;\n\treturn 0 ;\n}\n```",
        "postTime": 1538271195,
        "uid": 61637,
        "name": "Always",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3478 \u3010[POI2008]STA-Station\u3011"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u51fa\u4e00\u4e2a$N$\u4e2a\u70b9\u7684\u6811,\u627e\u51fa\u4e00\u4e2a\u70b9\u6765,\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\u7684\u6811\u65f6,\u6240\u6709\u70b9\u7684\u6df1\u5ea6\u4e4b\u548c\u6700\u5927\n## \u5206\u6790\n\u770b\u5230\u6811\uff0c\u8fd8\u8ba9\u6c42\u6700\u5927\uff0c\u8fd9\u79cd\u53ef\u80fd\u4e0d\u662f\u8d2a\u5fc3\u5c31\u662f\u6811\u5f62$DP$\uff0c\u8d2a\u5fc3\u7684\u8bdd\u6811\u7684\u5f62\u72b6\u6ca1\u6cd5\u5224\u65ad\uff0c\u679c\u65ad\u653e\u5f03\uff0c\u90a3\u4e48\u5c31\u53ea\u80fd\u662f$DP$\u4e86\u3002\n\n\u65e2\u7136\u5b83\u8ba9\u6c42\u6df1\u5ea6\u4e4b\u548c\uff0c\u90a3\u4e48\u6211\u5c31\u76f4\u63a5\u5b9a\u4e49\u4ee5$i$\u4e3a\u6839\u65f6\u6df1\u5ea6\u548c\u4e3a$DP_i$\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u600e\u4e48\u8f6c\u79fb\u7684\u95ee\u9898\u4e86\u3002\u5982\u679c\u6211\u679a\u4e3e\u6bcf\u4e2a\u70b9\u6765\u8003\u8651\uff0c\u90a3\u4e48\u8fd8\u8981\u8ba1\u7b97\u5b83\u4e0b\u8fb9\u7684\u5b50\u6811\u548c\u5b83\u4e0a\u8fb9\u7684\u5b50\u6811\uff0c\u663e\u7136\u662f\u4e0d\u597d\u5f04\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u80fd\u5728$O(N^2)$\u5de6\u53f3\uff0c\u867d\u7136\u65f6\u95f4\u5341\u79d2\u4f46\u4e5f\u4e0d\u591f\u7528\u554a\uff0c\u7531\u4e8e$n$\u5927\u5230\u4e861000000\uff0c\u6240\u4ee5\u8fd9\u4e2a\u9898\u8fd8\u662f\u5f97\u7528$O(n)$\u7684\u6548\u7387\uff0c\u5982\u679c\u6211\u4ee5\u67d0\u79cd\u624b\u6bb5\u5f97\u5230\u4e86$DP_1$\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u7684\u8f6c\u79fb\u5c31\u597d\u8bf4\u4e86\uff0c\u6bcf\u6b21\u5f80\u4e0b\u627e\u4e00\u4e2a\u513f\u5b50$v$\uff0c\u6df1\u5ea6\u51cf\u5c0f\u4e86$siz_v$\uff0c\u589e\u52a0\u4e86$n-siz_v$\uff0c\u8fd9\u6837\u5c31\u80fd\u7528\u4e24\u4e2a$O(n)$\u6765\u5b8c\u6210\u8fd9\u4e2a\u9898\uff0c\u6700\u540e\u5728$O(n)$\u7684\u7edf\u8ba1\u4e00\u4e0b\u7b54\u6848\u5c31\u597d\u3002\n\n$DP$\u6570\u7ec4\u8981\u5f00$long long$\n```\n#include<cstdio>\nusing namespace std;\nconst int N=1e6+10;\nstruct Edge{\n    int to,nxt;\n}e[N<<1];\nint dep[N],Head[N],len;\nvoid Ins(int a,int b){\n    e[++len].to=b;e[len].nxt=Head[a];Head[a]=len;\n}\nint siz[N];\nlong long dp[N];\nvoid dfs(int u,int fa){\n    siz[u]=1;dp[u]=dep[u];\n    for(int i=Head[u];i;i=e[i].nxt){\n        int v=e[i].to;\n        if(v==fa)continue;\n        dep[v]=dep[u]+1;\n        dfs(v,u);\n        siz[u]+=siz[v];\n        dp[u]+=dp[v];\n    }\n}    \nint n;\nvoid calc(int u,int fa){\n    for(int i=Head[u];i;i=e[i].nxt){\n        int v=e[i].to;\n        if(v==fa)continue;\n        dp[v]=dp[u]-siz[v]+n-siz[v];\n        calc(v,u);\n    }\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<n;i++){\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        Ins(a,b);Ins(b,a);\n    }\n    dfs(1,0);\n    calc(1,0);\n    int ans=0;\n    for(int i=1;i<=n;i++)\n        if(dp[ans]<dp[i])ans=i;\n    printf(\"%d\\n\",ans);\n}\n```\n## \u603b\u7ed3\n\u8f6c\u79fb\u65b9\u7a0b\u9898\u76ee\u95ee\u4ec0\u4e48\u8bbe\u4ec0\u4e48\u5148\uff0c\u6c42\u4e0d\u51fa\u6765\u518d\u8003\u8651\u6362\u6216\u8005\u8f85\u52a9\u4e00\u4e0b$DP$.",
        "postTime": 1586906377,
        "uid": 305262,
        "name": "Su_Zipei",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3478"
    },
    {
        "content": "\u6700\u8fd1\u8003\u8bd5\u8003\u4e86\u8fd9\u9053\u9898\uff0c\u4f46\u662f\u5927\u5bb6\u90fd\u53ea\u670983\u5206\uff0c\u5176\u539f\u56e0\u5c31\u662f\u6709\u4e09\u4e2a\u6bd2\u7624\u6570\u636e\uff0cdfs\u4f1a\u76f4\u63a5\u70b8\u6808\uff0c\u6240\u4ee5\u5168\u662fRE\uff0c\u6240\u4ee5\u53ea\u6709\u6539\u975e\u9012\u5f52\u624d\u80fd\u8fc7\u6389\u90a3\u4e2a\u6bd2\u7624\u6570\u636e\u3002\u56e0\u6b64\u6211TLE\u4e86\uff0c\u7528\u4e86std::stack\u548cstd::queue\uff0c\u7f3a\u6c27\u2026\u2026\n\n\u4e0b\u9762\u662f\u6211\u7684\u8003\u573a\u4ee3\u7801\uff08\u56e0\u4e3a\u61d2\uff0c\u4e0d\u60f3\u91cd\u5199\uff09\n```\n#include<cstdio>\n#include<stack>\n#include<queue>\nusing std::stack;\nusing std::queue;\ntypedef long long ll;\ntypedef long double ld;\nconst int N=1000010;\nvoid file(const char *str){\n\tchar in[100],out[100];\n\tsprintf(in,\"%s.in\",str),sprintf(out,\"%s.out\",str);\n\tfreopen(in,\"r\",stdin),freopen(out,\"w\",stdout);\n}\nstruct L{\n\tint to,next;\n};\nL l[N<<1];\nint head[N];\nint lcount;\nvoid add(int from,int to){\n\tl[++lcount].to=to;\n\tl[lcount].next=head[from];\n\thead[from]=lcount;\n}\nint root=1;\nint size[N];\nint f[N];\nll dis[N];\nint n;\nll ans;\nvoid dfs(){\n\tstack<int>s_i,s_now;\n\ts_now.push(root);\n\ts_i.push(head[root]);\n\tsize[root]=1;\n\twhile(!s_now.empty()){\n\t\tint &now=s_now.top(),&i=s_i.top();\n\t\tif(i){\n\t\t\tif(l[i].to!=f[now]){\n\t\t\t\tsize[l[i].to]=1;\n\t\t\t\ts_i.push(head[l[i].to]);\n\t\t\t\ts_now.push(l[i].to);\n\t\t\t\tf[l[i].to]=now;\n\t\t\t}\n\t\t\ti=l[i].next;\n\t\t\tcontinue;\n\t\t}\n\t\tsize[f[now]]+=size[now];\n\t\tdis[f[now]]+=dis[now]+size[now];\n\t\ts_now.pop();\n\t\ts_i.pop();\n\t}\n}\nvoid bfs(){\n\tqueue<int>q;\n\tq.push(root);\n\tint now;\n\twhile(!q.empty()){\n\t\tnow=q.front();\n\t\tq.pop();\n\t\tif(ans<dis[now]){\n\t\t\tans=dis[now];\n\t\t}\n\t\tfor(int i=head[now];i;i=l[i].next){\n\t\t\tif(l[i].to!=f[now]){\n\t\t\t\tdis[l[i].to]=dis[now]+n-(size[l[i].to]<<1);\n\t\t\t\tq.push(l[i].to);\n\t\t\t}\n\t\t}\n\t}\n}\nvoid input(){\n\tscanf(\"%d\",&n);\n\tint p1,p2;\n\tfor(int i=1;i<n;i++){\n\t\tscanf(\"%d%d\",&p1,&p2);\n\t\tadd(p1,p2);\n\t\tadd(p2,p1);\n\t}\n}\nvoid begin(){\n}\nvoid solve(){\n\tdfs();\n\tbfs();\n}\nvoid output(){\n\tfor(int i=1;i<=n;i++){\n\t\tif(dis[i]==ans){\n\t\t\tprintf(\"%d\",i);\n\t\t\treturn;\n\t\t}\n\t}\n}\nvoid test(){\n\tinput();\n\tbegin();\n\tsolve();\n\toutput();\n}\nvoid all(){\n\tfile(\"sta\");\n\ttest();\n}\nint main(){\n\tall();\n\treturn 0;\n}\n\n```\n\u6d1b\u8c37\u4e0a\u65f6\u95f4\u662f\u5361\u7740\u8fc7\u7684(\u6700\u6162\u70b9800+ms)\uff0c\u65f6\u95f4\u5e76\u4e0d\u662f\u5f88\u4f18\uff0c\u4f46\u662f\u4e0d\u4f1a\u88ab1e6\u7684\u94fe\u5361\u6389\u3002",
        "postTime": 1539848929,
        "uid": 81705,
        "name": "\u5bc6\u671f\u671b",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3478 \u3010[POI2008]STA-Station\u3011"
    },
    {
        "content": "# P3478 [POI2008]STA-Station\u9898\u89e3\n\n## [\u539f\u9898\u9762](https://www.luogu.com.cn/problem/P3478)\n\n## \u77e5\u8bc6\u70b9\n- \u6362\u6839DP\n\n## \u5927\u81f4\u9898\u610f\n\u7ed9\u51fa\u4e00\u4e2a N \u4e2a\u70b9\u7684\u6811,\u627e\u51fa\u4e00\u4e2a\u70b9\u6765,\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\u7684\u6811\u65f6,\u6240\u6709\u70b9\u7684\u6df1\u5ea6\u4e4b\u548c\u6700\u5927\n\n## \u5206\u6790\n\n\u6362\u6839DP\u7684\u6a21\u677f\u9898\u3002\n\n\u5982\u679c\u60a8\u8fd8\u4e0d\u4f1a\u6362\u6839DP\u7684\u8bdd,\u53ef\u4ee5\u5148\u53bb\u770b\u770bUltiMadow\u5de8\u4f6c\u7684\u6587\u7ae0:\n\n[\u3010\u65e5\u62a5#278\u3011[\u5b66\u4e60\u7b14\u8bb0]\u6362\u6839dp](https://www.luogu.com.cn/discuss/show/47327),\u6211\u4e00\u5f00\u59cb\u4e5f\u662f\u4ece\u90a3\u91cc\u5b66\u7684qwq\n\n\u8fd9\u91cc\u6211\u4eec\u8bbe\n\n- **$size[i]$\u4e3a\u4ee5$1$\u4e3a\u6839\u8282\u70b9\u65f6\u8282\u70b9$i$\u7684\u5b50\u6811\u5927\u5c0f**\n\n- **$dep[i]$\u4e3a\u4ee5$1$\u4e3a\u6839\u8282\u70b9\u65f6\u8282\u70b9$i$\u7684\u6df1\u5ea6\u5927\u5c0f**\n\n- **$dp[i]$\u4e3a\u4ee5$i$\u4e3a\u6839\u8282\u70b9\u65f6\u6df1\u5ea6\u4e4b\u548c\u7684\u5927\u5c0f**\n\n\u5f88\u660e\u663e,\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u904dDFS\u6c42\u51fa\u4ee5$1$\u4e3a\u6839\u8282\u70b9\u65f6\u7684\u6df1\u5ea6\u4e4b\u548c\n\n\u5982\u679c\u4e00\u4e2a\u4e2a\u7684\u53bb\u7b97\u7684\u8bdd\n\n\u7167\u8fd9\u4e2a\u6570\u636e\u8303\u56f4,\u663e\u7136\u4f1aT\u98de\n\n\u8fd9\u4e2a\u65f6\u5019\u5c31\u8981\u7528\u5230\u6362\u6839DP\u4e86\n\n## \u6362\u6839$DP$\u4f18\u5316\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/o5nj1c7o.png)\n\n\u53ef\u4ee5\u770b\u51fa,\u5f53\u6211\u4eec\u628a\u6839\u8282\u70b9\u4ece1\u6362\u52303\u65f6\n\n\u5bf9\u5b50\u8282\u70b93\u7684\u8d21\u732e\u7531\u4e24\u90e8\u5206\u7ec4\u6210\n\n1.**\u81ea\u5df1\u5b50\u6811\u7684\u8d21\u732e(\u56fe\u4e2d\u7684k)**\n\n2.**\u7236\u4eb2\u8282\u70b9$1$\u7684\u8d21\u732e**\n\n\n\n------------\n\n## \u5982\u4f55\u8f6c\u79fb\n\n- \u9996\u5148\u662f$k$,\u4f5c\u4e3a\u81ea\u5df1\u5b50\u6811\u6240\u4ea7\u751f\u7684\u8d21\u732e\u80af\u5b9a\u8981\u52a0\u4e0a\n\n- $dp[u]$\u4e3a\u4ee5$u$\u4e3a\u6839\u8282\u70b9\u65f6\u7684\u6df1\u5ea6\u603b\u503c,\u5728\u8ba1\u7b97\u65f6,\u8981\u51cf\u53bb$v$\u7684\u5b50\u6811\u6240\u4ea7\u751f\u7684\u8d21\u732e,\u4e0d\u7136\u5c31\u91cd\u590d\u8ba1\u7b97\u4e86,\u540c\u65f6\n\n**\u5728\u4ee5 $u$\u4e3a\u6839\u65f6,v\u8282\u70b9\u53ca\u5176\u5b50\u6811\u5185\u7684\u6240\u6709\u8282\u70b9\u7684\u6df1\u5ea6\u90fd\u589e\u52a0\u4e86$1$**,\u9700\u8981\u51cf\u53bb\n\n**(\u56fe\u4e2d\u7ea2\u8272\u7684\u8282\u70b9)**\n\n\u5408\u8d77\u6765\u5c31\u662f$dp[u]-(size[v]+k)$\n\n- \u9664v\u5b50\u6811\u5916\u7684\u5176\u4ed6\u8282\u70b9\u4e5f\u4e00\u6837\n\n**\u5728\u4ee5$v$\u4e3a\u6839\u65f6\uff0c\u9664$v$\u8282\u70b9\u53ca\u5176\u5b50\u6811\u5916\u7684\u5176\u4ed6\u8282\u70b9\u7684\u6df1\u5ea6\u90fd\u589e\u52a0\u4e86$1$**\n\n**(\u56fe\u4e2d\u84dd\u8272\u7684\u8282\u70b9)**\n\n\u5408\u8d77\u6765\u5c31\u662f$(size[1]-size[v])$\n\n\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b\n\n- $dp[v] = k+(dp[u]-(k+size[v]))+(size[1]-size[v])$\n\n\n\n\n\n\u5316\u7b80\u4e00\u4e0b\n\n- $dp[v] = dp[u]-2size[v]+size[1]$\n\n\u8f6c\u79fb\u65b9\u7a0b\u63a8\u51fa\u6765\u4e86,\u4ee3\u7801\u90e8\u5206\u5c31\u4e0d\u96be\u5b9e\u73b0\u4e86,\u4e24\u904ddfs,\u4e00\u6b21dfs\u7edf\u8ba1\u5b50\u6811\u5185\u7684\u8282\u70b9\u5bf9\u5f53\u524d\u8282\u70b9\u7684\u8d21\u732e\n\u4e00\u6b21dfs\u6362\u6839\n\n\u8d34\u4e2a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN  = 100010;\nlong long dp[MAXN],dep[MAXN],size[MAXN];\nint vis[MAXN];\nvector <int> son[MAXN];\nint n;\n\nvoid dfs1(int x){\n\tsize[x] = 1;\n    vis[x] = 1;\n\tfor(int i=0;i<son[x].size();i++){\n\t\tint v = son[x][i];\n\t\tif(!vis[v]){\n\t\tdep[v] = dep[x] +1;\n\t\tdfs1(v);\n\t\tsize[x]+=size[v];\t\n\t\t}\n\t\t\t\n\t}\n}\nvoid dfs2(int x){\n    vis[x] = 1;\n\tfor(int i=0;i<son[x].size();i++){\n\t\tint v = son[x][i];\n\t\tif(!vis[v]){\n\t\tdp[v] = dp[x] +size[1] - 2*size[v];\n\t\tdfs2(v);\t\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;i++){\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tson[u].push_back(v);\n\t\tson[v].push_back(u);\n\t}\n\tdfs1(1);\n\t\n\tfor(int i=1;i<=n;i++) dp[1]+=dep[i];\n\t\n\tmemset(vis,0,sizeof(vis));\n\tdfs2(1);\n\tlong long ans = -0x3f;\n\tint jd =999;\n\tfor(int i=1;i<=n;i++){\n\t\tif(ans < dp[i]) ans = dp[i], jd = i;\n\t}\n\tcout<<jd;\n}\n```\n\n\n",
        "postTime": 1595475132,
        "uid": 244466,
        "name": "xcxc82",
        "ccfLevel": 0,
        "title": "P3478 [POI2008]STA-Station\u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u5f88\u5bb9\u6613\u53d1\u73b0\u8fd9\u9053\u9898\u662f\u6811\u5f62DP\uff0c\u6d89\u53ca\u5230\u6362\u6839\u64cd\u4f5c\u3002\u5c31\u6765 NaOH \u4e00\u53d1\u5427\u3002\n\n\u4e00\u4e2a\u6bd4\u8f83\u6d41\u884c\u7684\u505a\u6cd5\u662f\uff1a\n\n1. \u5148\u8fdb\u884c\u4e00\u6b21 DFS\uff0c\u6c42\u51fa\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\u548c\u5b50\u6811\u5927\u5c0f\uff1b\n2. \u8ba1\u7b97\u51fa $1$ \u53f7\u8282\u70b9\u7684\u7b54\u6848\uff1b\n3. \u518d\u8fdb\u884c\u4e00\u6b21DFS\uff0c\u9012\u63a8\u6c42\u51fa\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848\u3002\n\n\u4f46\u662f\uff0c\u4ed4\u7ec6\u5206\u6790\u5c31\u53ef\u4ee5\u53d1\u73b0\uff1a\u6211\u4eec\u6839\u672c\u4e0d\u9700\u8981\u6c42\u51fa\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\u3002\u539f\u56e0\u5982\u4e0b\uff1a\n\n\u901a\u8fc7\u7b80\u5355\u8bc1\u660e\u53ef\u4ee5\u53d1\u73b0\uff1a\u5982\u679c\u5b9a\u4e49\u6839\u8282\u70b9\u7684\u6df1\u5ea6\u4e3a $1$\uff0c\u5219\u6240\u6709\u70b9\u7684\u6df1\u5ea6\u4e4b\u548c\u7b49\u4e8e\u6240\u6709\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u4e4b\u548c\u3002\u6211\u4eec\u53ef\u4ee5\u4ece\u8d21\u732e\u7684\u89d2\u5ea6\u8003\u8651\uff1a\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6df1\u5ea6\u4e3a $k$ \u7684\u8282\u70b9\uff0c\u5b83\u4f1a\u7ed9\u4ece\u5b83\u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u5b50\u6811\u5927\u5c0f\u63d0\u4f9b $1$ \u7684\u8d21\u732e\uff0c\u800c\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u70b9\u6709 $k$ \u4e2a\uff0c\u8bc1\u6bd5\u3002\n\n\u53e6\u5916\uff0c\u672c\u9898\u5e76\u6ca1\u6709\u8981\u6c42\u6c42\u51fa\u6df1\u5ea6\u4e4b\u548c\u6700\u5927\u503c\u662f\u591a\u5c11\uff0c\u53ea\u9700\u8981\u6c42\u51fa\u5728\u54ea\u4e2a\u8282\u70b9\u4e3a\u6839\u65f6\u53d6\u5230\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u628a $1$ \u53f7\u70b9\u7684 DP \u503c\u8bbe\u4e3a $0$\uff0c\u518d\u8fdb\u884c\u7b2c\u4e8c\u6b21 DFS\uff08\u8fd9\u6761\u5728\u6211\u7684\u89e3\u9898\u65b9\u6cd5\u4e2d\u5e76\u672a\u4f7f\u7528\uff09\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53ea\u5b9a\u4e49\u8fd9\u4e9b\u53d8\u91cf\u548c\u6570\u7ec4\uff08\u540d\u79f0\u4e0e\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u76f8\u540c\uff09\uff1a\n\n- $n$\uff1a\u6574\u4e2a\u6811\u7684\u70b9\u6570\uff1b\n- $siz[x]$:\u8282\u70b9 $x$ \u7684\u5b50\u6811\u5927\u5c0f\uff1b\n- $dp[x]$\uff1a\u8282\u70b9 $x$ \u7684DP\u503c\u3002\n\n\u7b2c\u4e00\u6b21 DFS \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u3002\n\n\u7b2c\u4e8c\u6b21 DFS \u65f6\uff0c\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684 DP \u503c\u3002\u5047\u8bbe\u73b0\u5728\u8981\u628a\u6839\u4ece\u8282\u70b9 $x$ \u6362\u5230\u5b83\u7684\u5b50\u8282\u70b9 $t$\uff0c\u5219 $t$ \u7684\u5b50\u6811\u4e2d\u6240\u6709\u8282\u70b9\u6df1\u5ea6\u90fd\u4f1a\u51cf $1$\uff0c\u5176\u5b83\u8282\u70b9\u90fd\u4f1a\u52a0 $1$\u3002\u8fd9\u6837\uff0c\u9012\u63a8\u65b9\u6cd5\u4e3a\uff1a\n\n$dp[t]=dp[x]-siz[t]+(n-siz[t])$\uff1b\n\n\u5373 $dp[t]=dp[x]+n-2siz[t]$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff08C++11\uff09\uff1a\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define maxn 1024000\n#define ll long long\nchar str;\nint n;\nstruct edge\n{\n\tint to;\n\tint nxt;\n}nd[2*maxn];\nint head[maxn],cnt;\nll siz[maxn],dp[maxn];\ntemplate<class X> inline void read(X &x)\n{\n\tx=0;\n\tX f=1;\n\twhile(!isdigit(str))\n\t{\n\t\tif(str=='-')\n\t\t{\n\t\t\tf=-1;\n\t\t}\n\t\tstr=getchar();\n\t}\n\twhile(isdigit(str))\n\t{\n\t\tx*=10;\n\t\tx+=str-'0';\n\t\tstr=getchar();\n\t}\n\tx*=f;\n\treturn;\n}\nvoid init()\n{\n\tmemset(head,-1,sizeof(head));\n\tcnt=1;\n\treturn;\n}\nvoid add(int x,int y)\n{\n\tnd[cnt].to=y;\n\tnd[cnt].nxt=head[x];\n\thead[x]=cnt++;\n\treturn;\n}\nvoid dfs1(int x,int fa)\n{\n\tsiz[x]=1;\n\tfor(int i=head[x];i!=-1;i=nd[i].nxt)\n\t{\n\t\tint t=nd[i].to;\n\t\tif(t!=fa)\n\t\t{\n\t\t\tdfs1(t,x);\n\t\t\tsiz[x]+=siz[t];\n\t\t}\n\t}\n\treturn;\n}\nvoid dfs2(int x,int fa)\n{\n\tfor(int i=head[x];i!=-1;i=nd[i].nxt)\n\t{\n\t\tint t=nd[i].to;\n\t\tif(t!=fa)\n\t\t{\n\t\t\tdp[t]=dp[x]+(ll)n-2*siz[t];\n\t\t\tdfs2(t,x);\n\t\t}\n\t}\n\treturn;\n}\nint main()\n{\n\tinit();\n\tread(n);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint a,b;\n\t\tread(a),read(b);\n\t\tadd(a,b);\n\t\tadd(b,a);\n\t}\n\tdfs1(1,0);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdp[1]+=siz[i];\n\t}\n\tdfs2(1,0);\n\tint ans=1;\n\tll mx=dp[1];\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tif(dp[i]>mx)\n\t\t{\n\t\t\tmx=dp[i];\n\t\t\tans=i;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1587734888,
        "uid": 158849,
        "name": "renhr2002",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3478 \u3010[POI2008]STA-Station\u3011"
    },
    {
        "content": "\u7ecf\u5178\u7684\u6811\u5f62dp\uff0c\u8fd0\u7528\u5230\u4e86\u6362\u6839\u6cd5\uff0c\u6211\u8be6\u7ec6\u8bb2\u4e00\u4e0b\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7684\u63a8\u5bfc.\n\n\u9996\u5148\u8003\u8651\u66b4\u529b\uff0c\u8dd1n\u904d\u5806\u4f18\u5316dijkstra\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n^2*log(n)) \u80fd\u5f9750\u5206.\n\n\u6b63\u89e3\u662f\u6811\u5f62dp.\n\n\u6b64\u9898\u7528\u5230\u4e86\u6362\u6839\u6cd5,\u5148\u660e\u786e\u51e0\u4e2a\u4e1c\u897f.\n\n**n\u4e3a\u603b\u8282\u70b9\u4e2a\u6570**\n\n**size[x]\u8868\u793ax\u7684\u5b50\u6811\u7684\u8282\u70b9\u4e2a\u6570\uff08\u5305\u62ec\u81ea\u5df1\uff09**\n\n**f[x]\u8868\u793a\u4ee5x\u4e3a\u6839\u8282\u70b9\u65f6\u7684\u5176\u4ed6\u8282\u70b9\u5230\u6839\u8282\u70b9\u8ddd\u79bb\u548c**\n\n\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u975e\u6839\u8282\u70b9x\uff0c\u4ed6\u7684\u7236\u4eb2\u8282\u70b9\u4e3ay\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n\n**f[x] = f[y] + (n-size[x]) - size[x];**\n\n\u5982\u4f55\u7406\u89e3\u8fd9\u4e2a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5462?\n\n****1.\u5bf9\u4e8e\u4e0d\u5728x\u7684\u5b50\u6811\u4e2d\u7684\u8282\u70b9\uff0c\u4ed6\u4eec\u5230x\u7684\u8ddd\u79bb\u7b49\u4e8e\u4ed6\u4eec\u5230y\u7684\u8ddd\u79bb +\uff08n-size[x]\uff09****\n\n\u8fd9\u4e2a\u5e94\u8be5\u4e0d\u96be\u7406\u89e3\uff0c\u6bcf\u4e2a\u4e0d\u5728x\u7684\u5b50\u6811\u4e2d\u7684\u8282\u70b9\uff0c\u5230x\u7684\u8ddd\u79bb\u6bd4\u5230y\u7684\u8ddd\u79bb\u591a\u4e861\uff0c\u4e00\u5171\n\n\u6709(n-size[x])\u4e2a\u8282\u70b9\u4e0d\u5728x\u7684\u5b50\u6811\u4e2d.\n\n**2\u5bf9\u4e8e\u5728x\u7684\u5b50\u6811\u4e2d\u7684\u8282\u70b9\uff0c\u4ed6\u4eec\u5230x\u7684\u8ddd\u79bb\u7b49\u4e8e\u4ed6\u4eec\u5230y\u7684\u8ddd\u79bb-size[x]**\n\n\u8fd9\u4e2a\u4e5f\u5f88\u597d\u7406\u89e3\uff0c\u6bcf\u4e2a\u5728x\u7684\u5b50\u6811\u4e2d\u7684\u8282\u70b9\uff0c\u5230x\u7684\u8ddd\u79bb\u6bd4\u5230y\u7684\u8ddd\u79bb\u5c11\u4e861\uff0c\u4e00\u5171\u6709\n\nsize[x]\u4e2a\u8282\u70b9\u5728x\u7684\u5b50\u6811\u4e2d.\n\n\u5408\u5e76\uff0c\u53ef\u5f97\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b.\n\n\u6709\u4e86\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u4ee3\u7801\u5c31\u597d\u5199\u4e86.\n\n1.\u9996\u5148\u9009\u4efb\u610f\u4e00\u4e2a\u70b9\u5f53\u505a\u6839\u8282\u70b9\uff08\u6211\u4e00\u822c\u90091\uff09\u9012\u5f52\u6c42\u51fa\u6bcf\u4e2a\u5b50\u6811\u7684\u8282\u70b9\u4e2a\u6570\uff08\u5305\u62ec\n\n\u81ea\u5df1\uff09\u987a\u4fbf\u8ba1\u7b97\u51fa\u5176\u4ed6\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u548c.\n\n2.\u518d\u6765\u4e00\u904ddfs\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb.\n\n\u4e0d\u8fc7\u8fd8\u6709\u4e00\u4e2a\u7ec6\u8282\u8981\u6ce8\u610f\uff0c\u5728\u6211\u7684\u4ee3\u7801\u4e2d\uff0c\u6839\u8282\u70b9\u7684\u5230\u6839\u8282\u70b9\u8ddd\u79bb\u4e0d\u80fd\u8bbe\u4e3a0\uff0c\u56e0\u4e3a\u8fd9\n\n\u662f\u4e2a\u65e0\u5411\u56fe\uff0c\u6211\u5728\u5224\u65ad\u6709\u6ca1\u6709\u5f80\u56de\u8dd1\u7684\u65f6\u5019\u7528\u7684\u662f\u5224\u65adv\u6709\u6ca1\u6709\u88ab\u8d4b\u8fc7\u503c\uff0c\u5982\u679c\u8bbe\u6839\u8282\n\n\u70b9\u5230\u6839\u8282\u70b9\u8ddd\u79bb\u4e3a0\uff0c\u90a3\u4e48\u4f1a\u5bfc\u81f4\u8bef\u5224.\n\n\n\u6240\u4ee5\u6211\u8bbe\u6839\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u4e3a1\uff0c\u5176\u4ed6\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u76f8\u5e94\u4e5f\u591a\u4e861\uff0c\u6700\u540e\u51cf\n\n\u53bb\u8282\u70b9\u4e2a\u6570\u5c31\u884c\u4e86.\n\n~~****\u522b\u5fd8\u5f00long long\uff01\uff01\uff01****~~\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nlong long size[1000010],dis[1000010],f[1000010];//f\u6570\u7ec4\u8868\u793a\u4ee5i\u4e3a\u6839\u8282\u70b9\n\n\u7684\u8ddd\u79bb\u548c,dis\u6570\u7ec4\u53ea\u662f\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u70b9\u5230\u4e00\u5f00\u59cb\u5047\u8bbe\u7684\u6839\u7684\u8ddd\u79bb\uff0c\u4e4b\u540e\u6362\u6839\u7684\u65f6\u5019\u5c31\u6ca1\n\n\u7528\u4e86\nint head[1000010];\nint idx,n;\nlong long num;\nstruct node{\n\tint nxt,to;\n}edge[2000010];\nvoid add(int u,int v)\n{\n\tedge[++idx].nxt=head[u];\n\tedge[idx].to=v;\n\thead[u]=idx;\n}\nvoid dfs1(int now)//\u9012\u5f52\u6c42\u51fa\u6bcf\u4e2a\u5b50\u6811\u7684\u8282\u70b9\u4e2a\u6570\u987a\u4fbf\u8ba1\u7b97\u51fa\u5176\u4ed6\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u548c \n{\n\tsize[now]=1;\n\tfor(int i=head[now];i;i=edge[i].nxt)\n\t{\n\t\tint v=edge[i].to;\n\t\tif(dis[v]) continue;\n\t\tdis[v]=dis[now]+1;\n\t\tdfs1(v);\n\t\tsize[now]+=size[v];\n\t}\n}\nvoid dfs2(int now,int fath)\n{\n\tif(now!=1)//\u5982\u679c\u662f\u6839\u8282\u70b9\u7684\u8bdd\u4e0d\u80fd\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\n\tf[now]=f[fath]-size[now]+n-size[now];\n\tfor(int i=head[now];i;i=edge[i].nxt)\n\t{\n\t\tint v=edge[i].to;\n\t\tif(v==fath) continue;\n\t\tdfs2(v,now);\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t}\n\tdis[1]=1;\n\tdfs1(1);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tnum+=d[i];\n\t}\n\tnum-=n;\n\tf[1]=num;\n\tdfs2(1,0);\n\tlong long ans=0,temp;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(f[i]>ans)\n\t\t{\n\t\t\tans=f[i];\n\t\t\ttemp=i;\n\t\t}\n\t}\n\tprintf(\"%lld\",temp);\n\treturn 0;\n}",
        "postTime": 1596717876,
        "uid": 250699,
        "name": "Herkaii",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3478 \u3010[POI2008]STA-Station\u3011"
    },
    {
        "content": "\u601d\u8003\u6e05\u695a\u4e4b\u540e\u5c31\u4f1a\u7279\u522beasy,\u8003\u86511\u6321\u6839\u8282\u70b9\u65f6\uff0c\u8ba1\u7b97\u51fa\u6df1\u5ea6 $Dep[x]$ \u548c\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u6240\u5305\u542b\u7684\u8282\u70b9\u4e2a\u6570 $Num[x]$ \u3002\n\n\u63a5\u4e0b\u6765\u8ba1\u7b97\u51fa\u4ee5 $1$ \u4f4d\u6839\u65f6\u7684\u6240\u6709\u6df1\u5ea6\uff0c\u8003\u8651\u8ba9\u5b83\u7684\u513f\u5b50\u6321\u6839\u8282\u70b9\u7684\u53d8\u5316\uff0c\u6362\u53e5\u8bdd\u6765\u8bf4\u5c31\u662f\u5728\u4e0a\u4e00\u6b21\u8ba1\u7b97\u7684\u57fa\u7840\u4e4b\u4e0a\u6765\u8ba1\u7b97\u6240\u6709\u8282\u70b9\u7684\u6df1\u5ea6\u548c\n\u4ee5 $x$ \u4e3a\u5b50\u6811\u7684\u6240\u6709\u8282\u70b9 $Num[x]$ \u4e2a\u6df1\u5ea6 $-1$ ,$N-Num[x]$ \u8fd9\u4e9b\u8282\u70b9\u7684\u6df1\u5ea6\u90fd $+1$ \n\nCode:\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 1000005\n#define LL long long\nusing namespace std;\nint N,Ans,cnt,Num[maxn],lnk[maxn],nxt[2*maxn],son[2*maxn],Dep[maxn];\nLL F[maxn];\nint read(){\n    int ret=0,f=1;char ch=getchar();\n    while (ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();}\n    while (ch>='0'&&ch<='9') ret=ret*10+ch-'0',ch=getchar();\n    return ret*f;\n}\nvoid add_e(int x,int y){son[++cnt]=y;nxt[cnt]=lnk[x];lnk[x]=cnt;}\nvoid Dfs(int x,int fa){\n    Num[x]=1;Dep[x]=Dep[fa]+1;\n    for (int j=lnk[x];j;j=nxt[j])\n      if (son[j]!=fa) Dfs(son[j],x),Num[x]+=Num[son[j]];\n}\nvoid DFS(int x,int fa){\n    for (int j=lnk[x];j;j=nxt[j])\n      if(son[j]!=fa){\n      \tF[son[j]]=F[x] - Num[son[j]] + N-Num[son[j]];//\u6539\u4e3a\u5f53\u524d\u513f\u5b50\u8282\u70b9\u4e3a\u6839\uff0c\u90a3\u4e48\u513f\u5b50\u8fd9\u8bfe\u5b50\u6811\u6240\u6709\u8282\u70b9\u6df1\u5ea6-1\uff0c\u5176\u4f59\u8282\u70b9\u6df1\u5ea6+1 \n        DFS (son[j],x);\n    }\n}\nint main(){\n    N=read();\n    for (int i=2;i<=N;i++){\n    \tint x=read(),y=read();\n    \tadd_e(x,y),add_e(y,x);\n    }\n    Dfs(1,0);\n    for (int i=1;i<=N;i++) F[1]+=Dep[i];\n    DFS(1,0);\n    LL Max=0;\n    for (int i=1;i<=N;i++)\n      if (F[i]>Max) Max=F[Ans=i];\n    printf(\"%d\\n\",Ans);\n    return 0;\n}\n```\n",
        "postTime": 1596020298,
        "uid": 188879,
        "name": "VioletIsMyLove",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3478 \u3010[POI2008]STA-Station\u3011"
    },
    {
        "content": "\u5982\u679c\u60f3\u8981\u66f4\u597d\u7684\u4f53\u9a8c\uff0c\u53ef\u4ee5\u5230[\u6211\u7684\u535a\u5ba2](https://www.luogu.org/blog/I-AK-IOI/)\u53bb\u770b\n\n\n\u672c\u9898\u662f\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u6811\u5f62dp\n\n\u66b4\u529b\u5f88\u597d\u6253\uff0c\u590d\u6742\u5ea6$O(n^2)$,\u663e\u7136\u4f1a\u8d85\u65f6\n\n\u5148\u8bfb\u5165\u8fd9\u68f5\u6811\uff0c\u53ef\u4ee5\u7528$vector$\u5b58\u8fb9\uff0c\u6bd4\u8f83\u65b9\u4fbf\n\n\u9996\u5148\u6211\u4eec\u4ee5$1$\u4e3a\u6839\uff0c \u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\uff0c\u4ee5\u53ca\u5b50\u6811\u7684\u5927\u5c0f\u3002\n\n\u8bbe$f[i]$\u4e3a\u4ee5i\u4e3a\u6839\uff0c\u6700\u5927\u6df1\u5ea6\u4e4b\u548c\u3002\u6211\u4eec\u73b0\u5728\u7528\u6362\u6839\u6cd5\u6c42\u51fa\u6bcf\u4e2a$f[i]$\n\n\u5bb9\u6613\u5f97\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b$\\forall \\, \\,y \\in son(x) \\,\\,\\,\\,\\,f[y] = f[x] + n - 2 \\times size[x]$\n\n\u5176\u4e2d$size[x]$\u4e3a$x$\u7684\u5b50\u6811\u5927\u5c0f\uff0c$son(x)$\u4e3a$x$\u7684\u513f\u5b50\u96c6\u5408\n\n\u6211\u4eec\u7b80\u5355\u8bc1\u660e\u4e00\u4e0b\n\n\u5982\u56fe\uff0c\u5f53\u6839\u4ece$1$\u6362\u5230$2$\u65f6\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/u1pvf2zx.png?x-oss-process=image)\n\n\u6240\u4ee5\u5f53\u6839\u4ece$x$\u6362\u5230\u513f\u5b50$y$\u65f6\uff0c\u6df1\u5ea6\u51cf\u5c0f\u7684\u6709$size[y]$\u4e2a\uff0c\u589e\u52a0\u5f97\u6709$n-size[y]$\u4e2a\n\n$\\therefore f[y] = f[x] + (n - size[y]) - size[y] = f[x] + n - 2 \\times size[y]$\n\n\u63a5\u7740\u4e0a\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n;\nlong long f[1000010], d[1000010], size[1000010];\nbool v[1000010];\nvector<int> e[1000010];\nvoid dfs1(int x) {\n\tv[x] = 1;\n\tsize[x] = 1;\n\tfor (register int i = 0; i < e[x].size(); ++i) {\n\t\tint y = e[x][i];\n\t\tif (v[y]) continue;\n\t\tdfs1(y);\n\t\tv[y] = 1;\n\t\td[y] = d[x] + 1;\n\t\tsize[x] += size[y];\n\t}\n}\nvoid dfs2(int x) {\n\tv[x] = 1;\n\tfor (register int i = 0; i < e[x].size(); ++i) {\n\t\tint y = e[x][i];\n\t\tif (v[y]) continue;\n\t\tv[y] = 1;\n\t\tf[y] = f[x] + n - 2 * size[y];\n\t\tdfs2(y);\n\t}\n}\nint main() {\n\t//freopen(\"data.out\", \"r\", stdin);\n\tcin >> n;\n\tfor (register int i = 1; i < n; ++i) {\n\t\tint u, v;\n\t\tscanf(\"%d%d\", &u, &v);\n\t\te[u].push_back(v);\n\t\te[v].push_back(u);\n\t}\n\tdfs1(1);\n\t//cout <<  size[1] << ' ' << n << endl;\n\tmemset(v, 0, sizeof v);\n\tfor (register int i = 1; i <= n; ++i)\n\t\tf[1] += d[i];\n\t\n\tdfs2(1);\n\tlong long ans = -1e9, pos;\n\tfor (register int i = 1; i <= n; ++i)\n\t\tif (f[i] > ans) pos = i, ans = f[i];\n\tcout << pos;\n}  \n```\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n)$,\u4e00\u4e2a\u7ebf\u6027\u7b97\u6cd5\n\n\u8bf7\u6ce8\u610f\uff1a\u5fc5\u987b\u5f00long long\uff01",
        "postTime": 1595559030,
        "uid": 162196,
        "name": "\u4f1f\u5927\u7684\u738b\u592b\u5b50",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3478 \u3010[POI2008]STA-Station\u3011"
    },
    {
        "content": "\u8003\u8651\u4ece\u6bcf\u4e2a\u70b9\u8f6c\u79fb\u5230\u4ed6\u7684\u7236\u4eb2\u8282\u70b9$fa$\u4e0a\uff0c\u5219\u5f53\u524d\u7684\u8ddd\u79bb\u548c$sum$\u53d8\u5316\u53ef\u4ee5\u901a\u8fc7\u5bf9\u5f53\u524d\u6811\u79cd\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\u7edf\u8ba1,\u8003\u8651$u$\u7684\u513f\u5b50\u8282\u70b9,\u90a3\u4e48\n$u$\u7684\u5b50\u6811\u4e0e\u4ed6\u81ea\u5df1\u7684\u8d21\u732e$+1$,\u5bf9\u4e8e\u5b50\u6811\u7684\u8865\u96c6,\u4e5f\u5c31\u662f\u5269\u4f59\u7684\u8282\u70b9,\u8d21\u732e$-1$.\n\u8f6c\u79fb\u65b9\u7a0b:  \n$$\ndp[fa] = dp[u] +2siz[u] - n $$\n\n\u90a3\u4e48\u8003\u8651\u4ece\u4e0a\u5f80\u4e0b\u8f6c\u79fb\uff0c\u79fb\u9879\u5373\u53ef\u5f97\u5230\n$$\ndp[u] = dp[fa]+n-2siz[u]\n$$\n\u5f00\u59cb\u901a\u8fc7\u4e00\u6b21dfs\u9884\u5904\u7406\u5373\u53ef\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\ninline int read(){\n\tint res=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')res=res*10+ch-48,ch=getchar();\n\treturn res*f;\n}\nconst int maxn = 1000060;\nint n;\nint head[maxn];\nint siz[maxn],cnt;\nstruct edge{\n\tint to,nxt;\n}e[maxn<<1];\ninline void add(int from,int to){\n\te[++cnt].to=to;\n\te[cnt].nxt=head[from];\n\thead[from]=cnt;\n}\nint f[maxn],dep[maxn];\nvoid dfs(int u,int fa){\t\n\tsiz[u]=1;\n\tif(u!=1)dep[u]=dep[fa]+1;\n\tf[1]+=dep[u];\n\tfor(register int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==fa)continue;\n\t\tdfs(v,u);\t\n\t\tsiz[u] += siz[v];\n\t}\n}\nint minu;\nvoid dp(int u,int fa){\n\tif(f[minu]<=f[u])minu=u;\n\tfor(register int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==fa)continue;\n\t\tf[v]=f[u]+n-siz[v]*2;\n\t\tdp(v,u);\n\t}\n}\nsigned main(){\n\tn=read();\n\tf[0]=0;\n\tfor(register int i=1,x,y;i<n;i++)\n\t\tx=read(),y=read(),add(x,y),add(y,x);\n\tdfs(1,0);\n\tdp(1,0);\n\tcout<<minu;\n\treturn 0;\n}\n```\n",
        "postTime": 1592983042,
        "uid": 115003,
        "name": "te5555",
        "ccfLevel": 0,
        "title": "P3478 [POI2008]STA-Station\u9898\u89e3"
    },
    {
        "content": "### \u6362\u6839dp\n\n1.\u4e00\u822c\u90fd\u6ca1\u6709\u6307\u5b9a\u6839\uff0c\u521a\u5f00\u59cb\u968f\u4fbf\u9009\u4e00\u4e2a\u6839\uff081\u53f7\u70b9\u5de5\u5177\u4eba\uff09\u3002\n\n2.\u4e24\u6b21$dfs$\uff0c\u4e00\u6b21\u4ece\u5de5\u5177\u4eba\u5f00\u59cb\u9884\u5904\u7406\u4e00\u4e9b\u4e1c\u897f\uff0c\u7b2c\u4e8c\u6b21\uff08\u4e5f\u662f\u4ece\u5de5\u5177\u4eba\u5f00\u59cb\uff09\u6362\u6839\u3002\n\n3.\u591a\u7528\u4e8e\uff1a\u53ea\u8981\u786e\u5b9a\u67d0\u4e00\u4e2a\u70b9\u662f\u4ec0\u4e48\u4e1c\u897f\u7684\u65f6\u5019\uff0c\u7b54\u6848\u5c31\u57fa\u672c\u786e\u5b9a\u3002\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u590d\u6742\u5ea6\u4e0d\u80fd\u627f\u53d7\uff0c\u7236\u4eb2\u7684\u7b54\u6848\u53ef\u4ee5\u8ba9\u513f\u5b50\u52a0\u4ee5\u5229\u7528\u3002\n\n4.\u7b54\u6848\u7684\u7edf\u8ba1\u5408\u5e76\u53ef\u5206\u5b50\u6811\u5185\uff0c\u5b50\u6811\u5916\uff0c\u5b50\u6811\u5185\u7684\u4e00\u822c\u5728\u7b2c\u4e00\u6b21$dfs$\u7684\u8fc7\u7a0b\u4e2d\u5c31\u5f97\u51fa\u4e86\u7b54\u6848\uff0c\u5b50\u6811\u5916\u7684\u901a\u8fc7\u6362\u6839\uff0c\u627e\u7236\u4eb2\u7b54\u6848\u5173\u7cfb\u6765\u5f97\u5230\u3002\n\n#### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a$n$ \u4e2a\u70b9\u7684\u6811\uff0c\u8bf7\u6c42\u51fa\u4e00\u4e2a\u7ed3\u70b9\uff0c\u4f7f\u5f97\u4ee5\u8fd9\u4e2a\u7ed3\u70b9\u4e3a\u6839\u65f6\uff0c\u6240\u6709\u7ed3\u70b9\u7684\u6df1\u5ea6\u4e4b\u548c\u6700\u5927\u3002\n\n#### \u5206\u6790\n\n\u5047\u8bbe$v$\u662f$u$\u7684\u5b50\u8282\u70b9\uff0c\n\n\u5b9a\u4e49$dp[i]$\u8868\u793a\u4ee5$i$\u4e3a\u8282\u70b9\u4e3a\u6839\u7684\u6df1\u5ea6\u548c\uff0c\n\n$dp[v] = dp[u] + (n - sz[v]) - sz[v]$\u3002\n\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\n#define mem(a,b) memset(a,b,sizeof(a))\n#define pii pair<int,int>\n#define int long long\n#define ll __int128_t\nconst int inf = 0x3f3f3f3f;\nconst int maxn = 1001110;\nconst int M = 1e9+7;\nint n,m,k,ok;\n\nint sz[maxn],d[maxn];\n\nvector<int> v[maxn];\n\nvoid dfs1(int u,int pre)\t\t//\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\uff08\u7528\u6765\u6c421\u8282\u70b9\u7684\u6df1\u5ea6\u548c\uff09\uff0c\u5b50\u6811\u5927\u5c0f\n{\n    sz[u] = 1;\n    d[u] = d[pre]+1;\n    for(auto i : v[u])\n    {   \n        if(i == pre) continue;\n        dfs1(i,u);\n        sz[u] += sz[i];\n    }\n}\n\nint dp[maxn];\t\t\t//\u4ee5i\u4e3a\u6839\u7684\u6570\u7684\u8282\u70b9\u6df1\u5ea6\u548c\n\nvoid dfs2(int u,int pre)\n{\n    for(auto i : v[u])\n    {\n        if(i == pre) continue;\n        dp[i] = dp[u] + (n - sz[i]) - sz[i]; //\u5b83\u7684\u975e\u5b50\u6811\u8282\u70b9\u6240\u4ee5\u6df1\u5ea6+1\uff0c\u5b50\u6811\u8282\u70b9\u6df1\u5ea6-1\n        dfs2(i,u);\n    }\n}\n\nsigned main()\n{\n#ifdef ONLINE_JUDGE\n#else\n    freopen(\"data.in\", \"r\", stdin);\n#endif\n    cin>>n;\n    for(int i = 1,x,y; i < n; i++) \n    {\n        cin>>x>>y;\n        v[x].push_back(y);\n        v[y].push_back(x);\n    }\n    dfs1(1,0);\n    for(int i = 1; i <= n; i++) \t\t//\u6c42\u51fa\u4e00\u5f00\u59cb\u7684\u6df1\u5ea6\u548c\n    {\n        dp[1] += sz[i];\n    }\n    dfs2(1,0);\t\t\t\t//\u6362\u6839\u6c42\u89e3\n    int root = 1,mx = 0;\n    for(int i = 1; i <= n; i++) \n    {\n        if(mx < dp[i])\n        {\n            mx = dp[i];\n            root = i;\n        }\n    }\n    cout<<root<<endl;\n    return 0;\n}\n```\n\n",
        "postTime": 1592619848,
        "uid": 277692,
        "name": "horz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3478 \u3010[POI2008]STA-Station\u3011"
    },
    {
        "content": "\u4e00\u9053\u975e\u5e38\u7ecf\u5178\u7684**\u6811\u5f62DP**\uff0c\u9898\u610f\u7b80\u4ecb\u660e\u4e86,\u5927\u81f4\u4e3a\uff1a\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4e00\u9897\u5927\u5c0f\u4e3aN\u7684**\u65e0\u6839\u6811**\uff0c\u9009\u51fa\u4e00\u4e2a\u6839\uff0c\u4f7f**\u6240\u6709\u5b50\u8282\u70b9\u7684\u6df1\u5ea6\u548c**\u6700\u5927\u3002\n\n1. **\u66b4\u529b**\u7684\u60f3\u6cd5\u5f88\u7b80\u5355\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a**\u6839\u8282\u70b9**\uff0c\u4f9d\u6b21\u4fbf\u5229\u6240\u6709\u5b50\u8282\u70b9\uff0c\u6c42\u51fa**\u6df1\u5ea6\u548c**\u3002\n\n   \u65f6\u95f4\u590d\u6742\u5ea6\u4e3aN\u65b9\uff0c\u663e\u7136\u662f\u8fc7\u4e0d\u53bb\u7684\u3002\uff08\u9898\u76ee\u6ca1\u7ed9\u51faN\u7684\u5927\u5c0f\uff0c\u5b9e\u6d4b**N<=1000000**)\n\n2. \u66b4\u529b\u8fc7\u4e0d\u53bb\uff0c\u81ea\u7136\u5c31\u8981\u60f3\u4f18\u5316\u4e86\u3002\u6211\u4eec\u601d\u8003\u4e00\u4e0b\uff0c\u5404\u8282\u70b9\u4f5c\u4e3a\u6839\u65f6\u7684\u6df1\u5ea6\u548c\u662f\u5426\u5b58\u5728\u4ec0\u4e48\u5173\u8054\uff1f\n\n   \u8bbe\uff1a\u4ee5\u8282\u70b9x\u6700\u4e3a\u6839\u65f6\uff0c\u6df1\u5ea6\u548c\u4e3af[x]\u3002\n   \n   \u5f53\u6211\u4eec\u679a\u4e3e\u5230x\u8282\u70b9\u7684\u5b50\u8282\u70b9son[x]\u4f5c\u4e3a\u6839\u8282\u70b9\u65f6\uff0c\u4f1a\u53d1\u73b0\uff0c\u6240\u6709son[x]\u7684\u5b50\u8282\u70b9\u6df1\u5ea6\u8f83x\u6765\u8bf4\uff0c\u90fd-1\u4e86\u3002\u540c\u6837\uff0cx\u9664\u4e86son[x]\u4e4b\u5916\u6240\u6709\u7684\u5b50\u8282\u70b9\u6df1\u5ea6\u90fd+1\u4e86\u3002\n   \n   \u6211\u4eec\u53ea\u8981\u4e00\u904dDfs\u6c42\u51fa\u6240\u6709\u8282\u70b9\u7684\u6df1\u5ea6\u548c\u5b50\u6811\u5927\u5c0f\uff0c\u518d\u4ece\u4e0a\u5f80\u4e0b\u66f4\u65b0\u6240\u6709\u7684f[x]\uff0c\u6311\u5927\u7684\u5373\u53ef\u3002\n   \n   \u8f6c\u79fb\u65b9\u7a0b\u76f8\u4fe1\u5927\u5bb6\u90fd\u4f1a\u63a8\uff08\u5177\u4f53\u89c1\u4ee3\u7801\uff09\uff1a\n\n\nAC\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\n#define maxn 1000005\n#define ll long long\nusing namespace std;\nint fa[maxn],S[maxn],Dep[maxn],x,y,n,lnk[maxn],nxt[maxn*2],son[maxn*2],tot,cnt;\nll f[maxn],Ans;\ninline int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9'){if (ch=='-') f=-f;ch=getchar();}\n\twhile (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\ninline void add(int x,int y){nxt[++tot]=lnk[x];lnk[x]=tot;son[tot]=y;}\ninline void Dfs(int x,int FA){\n\tS[x]=1,f[x]=Dep[x]=Dep[FA]+1;\n\tfor (int i=lnk[x];i;i=nxt[i])\n\t  if (son[i]!=FA){\n\t  \tfa[son[i]]=x;Dfs(son[i],x);\n\t\tS[x]+=S[son[i]];f[x]+=f[son[i]];\n\t  }\n}\ninline void Dfs_Ans(int x){\n\tfor (int i=lnk[x];i;i=nxt[i])\n\t  if (son[i]!=fa[x]){\n\t  \tf[son[i]]=f[x]-2*S[son[i]]+n;\n\t  \tif (f[son[i]]>Ans) cnt=son[i],Ans=f[son[i]];\n\t  \tDfs_Ans(son[i]);\n\t  }\n}\nint main(){\n\tn=read();\n\tfor (int i=1;i<n;i++) x=read(),y=read(),add(x,y),add(y,x);\n\tDfs(1,0);Ans=f[1];cnt=1;\n\tmemset(f,0,sizeof f);\n\tf[1]=Ans;Dfs_Ans(1);\n\tprintf(\"%d\",cnt);\n\treturn 0;\n}\n```\n",
        "postTime": 1565529666,
        "uid": 108047,
        "name": "LlLlCc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3478 \u3010[POI2008]STA-Station\u3011"
    },
    {
        "content": "###\u8fd9\u662f\u4e00\u9053\u7ecf\u5178\u7684\u6811\u5f62DP\n\n\u9996\u5148\uff0c\u5982\u679c\u786e\u5b9a\u4e86\u67d0\u4e2a\u70b9\u4e3a\u6839\u8282\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u901a\u8fc7dfs\u6c42\u51fa$MAX_Sumdeep$\uff0c\u73b0\u5728\u6211\u4eec\u8003\u8651\u5982\u4f55\u4e0d\u901a\u8fc7n\u6b21dfs\uff0c\u5206\u522b\u6c42\u51fa\u5176\u4ed6\u70b9\u4e3a\u6839\u8282\u70b9\u7684 $MAX_Sumdeep$?\u753b\u753b\u56fe\u4f60\u5c31\u4f1a\u53d1\u73b0\uff0c\u4ece\u4e00\u4e2a\u70b9x\u5f80\u4ed6\u7684\u4e0b\u4e00\u7ea7\u5b50\u8282\u70b9v\u8f6c\u79fb\uff0c\u5c31\u53ef\u4ee5\u4f7f\u5f97v\u5b50\u6811\u4e0a\u7684\u6240\u6709\u70b9\u6df1\u5ea6-1\uff0c\u8ba9\u5176\u4ed6\u7684\u70b9\u6df1\u5ea6+1\uff0c\u56e0\u6b64\u6709$f[v]=f[x]+(n-nson[v])-nson[v]$==\u300b$f[v]=f[x]+n-2*nson[v]$\uff0c\u4e8e\u662f\u5728\u9884\u5904\u7406\u5b8cf[x]\u540e\uff0c\u76f4\u63a5\u53ef\u4ee5\u901a\u8fc7\u4e00\u904ddfs\u6c42\u5176\u4ed6\u7684$MAX_Sumdeep$\u5566\u3002\n\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int maxn=1e6+10;\nstruct point\n{\n    int to,nxt;\n}edge[maxn<<1];\nint n,head[maxn],tot=0,S[maxn],fath[maxn],deep[maxn];\nlong long f[maxn],ans;\ninline void add(int u,int v)\n{\n    tot++;\n    edge[tot].to=v;\n    edge[tot].nxt=head[u];\n    head[u]=tot;\n}\ninline void dfs(int x,int fa,int dep)\n{\n    deep[x]=dep;\n    S[x]=1;\n    for(int i=head[x];i;i=edge[i].nxt)\n    {\n        int v=edge[i].to;\n        if(v!=fa)\n        {\n            dfs(v,x,dep+1);\n            S[x]+=S[v];\n        }\n    }\n}\ninline void find(int x)\n{\n    for(int i=head[x];i;i=edge[i].nxt)\n    {\n        int v=edge[i].to;\n        if(deep[v]>deep[x])\n        {\n            f[v]=f[x]+n-2*S[v];\n            find(v);            \n        }\n    }\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n-1;i++)\n    {\n        int a,b;\n        cin>>a>>b;\n        add(a,b);\n        add(b,a);\n    }\n    dfs(1,0,1);\n    for(int i=1;i<=n;i++)    \n        f[1]+=deep[i];\n    find(1);\n    int mark=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(ans<f[i])\n        {\n            ans=f[i];\n            mark=i;\n        }\n    }    \n    cout<<mark;\n    return 0;\n}\n```",
        "postTime": 1508489840,
        "uid": 36294,
        "name": "feng_chengjie",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3478 \u3010[POI2008]STA-Station\u3011"
    },
    {
        "content": "\u6362\u6839dp\n\n\u8bbe $f[i]$ \u4e3a $i$ \u4e3a\u6839\uff0c\u6240\u6709\u7ed3\u70b9\u7684\u6df1\u5ea6\u4e4b\u548c\u3002\n\n\u8003\u8651\u5148\u6c42\u4e00\u904d $f[rt]$\uff0c$rt$ \u521d\u59cb\u503c\u4e3a $1$\uff0c\u8868\u793a \u4e00\u5f00\u59cb\u7684\u6839\u3002\n\n\u5e76\u4e14\u4ee4 $rt=1$ \u65f6\uff0c\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\u4e3a $siz[i]$\n\n\u6bd4\u5982\u8bf4\u5bf9\u4e8e\u6811\u4e0a\u4e24\u70b9 $u=4,v=2$\uff0c$rt=1$ \u65f6 $fa[u]=v$\uff0c\u90a3\u4e48\u6b64\u65f6\u5047\u8bbe\u5df2\u7ecf\u6c42\u51fa $f[v]$ \u8003\u8651\u5982\u4f55\u63a8\u51fa $f[u]$\n\n![image.png](https://i.loli.net/2020/08/02/ZGIibd1lweOYFv4.png)\n![image.png](https://i.loli.net/2020/08/02/zQcRaxiv3l74urZ.png)\n\n\u5de6\u8fb9\u6570\u5b57\u4e3a\u6df1\u5ea6\u3002\n\n\u89c2\u5bdf\u7ea2\u8272\u90e8\u5206\uff0c\u53ef\u4ee5\u53d1\u73b0 $rt$ \u7531 $v->u$\u65f6\uff0c\u6bcf\u4e2a\u8282\u70b9\u6df1\u5ea6 $-1$\uff0c\u603b\u7b54\u6848\u5c31\u662f\u51cf $siz[4]=siz[u]$\n\n\u89c2\u5bdf\u84dd\u8272\u90e8\u5206\uff0c\u53ef\u4ee5\u53d1\u73b0 $rt$ \u7531 $v->u$\u65f6\uff0c\u6bcf\u4e2a\u8282\u70b9\u6df1\u5ea6 $+1$\uff0c\u603b\u7b54\u6848\u4e5f\u5c31\u662f $siz[1]-siz[2]=n-siz[u]$\n\n\u6240\u4ee5\u5f53 $rt$ \u7531 $v->u$ \u65f6\uff0c$f[v]=f[u]+siz[u]+n-siz[u]=f[y]+n-siz[u]$\n\n\u65b9\u7a0b\u5c31\u641e\u51fa\u6765\u4e86\u3002\n\n$code$\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n#define int long long \ninline int read(){\n\tregister int x=0,f=0,ch=getchar();\n\twhile('0'>ch||ch>'9')f^=ch=='-',ch=getchar();\n\twhile('0'<=ch&&ch<='9')x=(x<<1)+(x<<3)+(ch^'0'),ch=getchar();\n\treturn f?-x:x;\n}\nconst int MAX=1000005;\nint n,u,v;\nstruct E{\n\tint e,next;\n}e[MAX<<1];\nint head[MAX],cnt=1,f[MAX],ans=-1;\ninline void add(int u,int v){\n\te[cnt]=(E){v,head[u]};head[u]=cnt++; \n}\nint siz[MAX],dep[MAX];\nvoid dfs(int x,int fa){\n\tsiz[x]=1;dep[x]=dep[fa]+1;\n\tf[1]+=dep[x];\n\tfor(register int i=head[x];i;i=e[i].next){\n\t\tif(e[i].e!=fa){\n\t\t\tdfs(e[i].e,x);\n\t\t\tsiz[x]+=siz[e[i].e];\n\t\t}\n\t}\n}\nvoid dfs1(int x,int fa){\n\tfor(register int i=head[x];i;i=e[i].next){\n\t\tif(e[i].e!=fa){\n\t\t\tf[e[i].e]=f[x]+n-2*siz[e[i].e];\n\t\t\tdfs1(e[i].e,x); \n\t\t}\n\t}\n}\nsigned main(){\n\tn=read();\n\tfor(register int i=1;i<n;++i){\n\t\tu=read(),v=read();\n\t\tadd(u,v);add(v,u);\n\t}\n\tdep[0]=-1;\n\tdfs(1,0);\n\tdfs1(1,0);\n\tfor(register int i=1;i<=n;++i){\n\t\tif(f[ans]<f[i])ans=i;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1596377567,
        "uid": 212833,
        "name": "EEchoyukii",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3478 \u3010[POI2008]STA-Station\u3011"
    },
    {
        "content": "### \u601d\u8def\n\n\u663e\u7136\u53ef\u4ee5\u7528\u4e8c\u6b21\u626b\u63cf\u4e0e\u6362\u6839\u6cd5\u89e3\u51b3\u3002\n\n\u5b9a\u4e49 $dp[root]$ \u8868\u793a\u4ee5 $root$ \u4e3a\u6839\u7684\u5b50\u6811\u4e0a\u7684\u6240\u6709\u70b9\u7684\u6df1\u5ea6\u4e4b\u548c\u3002\n\n\u5148\u4ee5\u8282\u70b9 $1$ \u4e3a\u6839\uff0c\u9884\u5904\u7406\u6bcf\u4e2a\u70b9 $i$ \u7684\u6df1\u5ea6 $depth[i]$ \u4ee5\u53ca \u4ee5\u70b9 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u7684\u8282\u70b9\u4e2a\u6570 $cnt[i]$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u6613\u5f97\n$$\ndp[root]=detph[root]+\\sum_{v\\in son(root)}dp[v]\n$$\n\u5b9a\u4e49 $df[root]$ \u8868\u793a\u4ee5 $root$ \u4e3a\u6839\u7684**\u6574\u4e2a\u6811**\u4e0a\u6240\u6709\u70b9\u7684\u6df1\u5ea6\u4e4b\u548c\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $root$ \u7684\u5b50\u8282\u70b9 $v$\uff0c\u53ef\u4ee5\u5c06\u8fd9\u6574\u4e2a\u6811\u62c6\u5206\u6210\u4e24\u90e8\u5206\u6765\u770b\uff1a\n\n1. \u8282\u70b9 $v$ \u4e0a\u9762\u7684\u90e8\u5206\u3002\n2. \u8282\u70b9 $v$ \u4ee5\u53ca\u8282\u70b9 $v$ \u4e0b\u9762\u7684\u90e8\u5206\u3002\n\n\u7b2c\u4e8c\u90e8\u5206\u5728\u4ee5 $v$ \u4e3a\u6839\u65f6\u7684\u6df1\u5ea6\u4e4b\u548c\u662f\u5f88\u597d\u6c42\u7684\uff0c\u663e\u7136\u4e3a\n$$\ndp[v]-cnt[v]\\times depth[v]\n$$\n\u7b2c\u4e00\u90e8\u5206\u5c31\u5f97\u601d\u8003\u601d\u8003\u4e86\u3002\u4e0d\u8fc7\u4ed4\u7ec6\u63a8\u63a8\u7684\u8bdd\uff0c\u53ef\u4ee5\u63a8\u51fa\u4e3a\n$$\ndf[root]-\\big(dp[v]-cnt[v]\\times detph[root]\\big)+n-cnt[v]\n$$\n\u601d\u8def\u53ef\u4ee5\u4ece\u4ee5 $root$ \u4e3a\u6839\u7684**\u6574\u4e2a\u6811**\uff0c\u51cf\u53bb\u4ee5 $v$ \u4e3a\u6839\u7684**\u5b50\u6811**\uff0c\u5269\u4f59\u7684\u90e8\u5206\u4e0a\u8fdb\u884c\u8003\u8651\u3002\n\n\u90a3\u4e48\n$$\ndf[v]= dp[v]-cnt[v]\\times depth[v]+df[root]-\\big(dp[v]-cnt[v]\\times depth[root]\\big)+n-cnt[v]\n$$\n$$\n= cnt[v]\\times\\big(depth[root]-depth[v]\\big)+df[root]+n-cnt[v]\n$$\n$$\n= df[root]+n-2\\times cnt[v]\n$$\n\n\u636e\u6b64\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u7b54\u6848 $ans$ \u5373\u4e3a\n$$\n\\max_{i=1}^N df[ans]\n$$\n\u4f46\u6ce8\u610f\u591a\u89e3\u65f6\u8f93\u51fa\u6700\u5c0f\u7684\u8282\u70b9\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define N 1000010\n#define ll long long \n\nusing namespace std;\n\nint n,tot=0,head[N];\nll depth[N],dp[N],cnt[N],df[N],maxn=0,ans;\nstruct graph{\n\tint v,next;\n}edge[N<<1];\n\nvoid add(int u,int v) {\n\tedge[++tot].v=v;\n\tedge[tot].next=head[u];\n\thead[u]=tot;\n}\n\nvoid dfs_first(int root,int f) {\n\tcnt[root]=1;\n\tdepth[root]=depth[f]+1;\n\tdp[root]=depth[root];\n\tfor(int i=head[root];i;i=edge[i].next) {\n\t\tint v=edge[i].v;\n\t\tif(v==f) continue;\n\t\tdfs_first(v,root);\n\t\tcnt[root]+=cnt[v];\n\t\tdp[root]+=dp[v];\n\t}\n}\n\nvoid dfs_second(int root,int f) {\n\tif(df[root]>maxn||(df[root]==maxn&&root<ans)) maxn=df[root],ans=root;\n\tfor(int i=head[root];i;i=edge[i].next) {\n\t\tint v=edge[i].v;\n\t\tif(v==f) continue;\n\t\tdf[v]=df[root]+n-2*cnt[v];\n\t\tdfs_second(v,root);\n\t}\n}\n\nint main() {\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;i++) {\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t}\n\t\n\tdfs_first(1,1);\n\tdf[1]=dp[1];\n\tdfs_second(1,1);\n\t\n\tprintf(\"%lld\\n\",ans);\n\t\n\treturn 0;\n}\n```\n\n",
        "postTime": 1590850497,
        "uid": 71936,
        "name": "HoshiuZ",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3478 \u3010[POI2008]STA-Station\u3011"
    },
    {
        "content": "\u8fd9\u662f\u9053\u86ee\u7b80\u5355\u7684\u6811\u578bdp\u5440\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u662f\u84dd\u9898\u554aorz\n~~\u4f46\u662f\u6211\u8fd9\u4e2awa\u4e86\u56db\u6b21\u7684\u4eba\u4e3a\u4ec0\u4e48\u6709\u8138\u8bf4\u8fd9\u4e2a~~\n\n\u9898\u76ee\u7ed9\u7684\u662f\u65e0\u6839\u6811\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u968f\u4fbf\u9009\u62e9\u4e00\u4e2a\u70b9\uff08\u6bd4\u59821\u53f7\uff09\u4f5c\u4e3a\u6839\n\n\u8fd9\u6837 \u6211\u4eec\u53ef\u4ee5\u5f97\u5230 \u4ee51\u4e3a\u6839\u7684\u5b50\u7ed3\u70b9\u4e2a\u6570son_size[1]\n\u4ee51\u4e3a\u6839\u7684\u5b50\u7ed3\u70b9\u7684\u6df1\u5ea6\u548cdep_sum[1]\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8003\u8651\u5982\u4f55\u4ece1\u53f7\u70b9\u8f6c\u79fb\u5176\u4ed6\u70b9\n\n\u8003\u8651i\u7684\u513f\u5b50j,\u5982\u679c\u6211\u4eec\u4ee5j\u4e3a\u6839\uff0c\u90a3\u4e48j\u7684\u6240\u6709\u5b50\u7ed3\u70b9\uff08\u663e\u7136\u5305\u62ecj\uff09\u7684\u6df1\u5ea6\u5e94\u8be5+1\uff0ci\u53f7\u70b9\u7684\u5176\u4ed6\u5b50\u7ed3\u70b9\uff08\u663e\u7136\u5305\u62eci\uff09\u7684\u6df1\u5ea6\u5e94\u8be5-1\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u8f6c\u79fb\uff1a\n\nj\u662fi\u7684\u513f\u5b50\uff0c\u90a3\u4e48\uff1a f[j]=f[i]+n-2*son_size[i]\n\n\u597d\uff0c\u90a3\u4e48\u8fd9\u9053\u9898\u7684\u5927\u81f4\u601d\u8def\u5c31ok\u4e86\uff0c\u7ec6\u8282\u4e0a\u7684\u8bdd\uff0c\u5c31\u662f\u6570\u7ec4\u8bb0\u5f97\u5f00long long\uff0c\u6700\u597d\u5199\u4e00\u4e2a\u5feb\u8bfb\uff0c\u4e0d\u7136\u6709\u51e0\u7387t\u6389\u7b2c\u4e5d\u4e2a\u70b9\uff0c\u7136\u540edfs\u548cdp\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6700\u597d\u901a\u8fc7\u4f20\u5165\u7236\u7ed3\u70b9\u4f5c\u4e3a\u53c2\u6570\u7684\u65b9\u5f0f\u641c\u7d22 \u5982\u679c\u7528vis\u6570\u7ec4\uff0c\u6709\u53ef\u80fd\u4f1a\u5fd8\u6389memset\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u8fd9\u6837\u5c31GG\u4e86\n\n\u4e0b\u9762\u662f\u4ee3\u7801quq\n```\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=1e6+10;\ntypedef long long ll;\ninline int read()\n{\n  int ans=0,op=0;\n  char ch=getchar();\n  while(ch<'0'||ch>'9')\n    {\n      if(ch=='-') op=-1;\n      ch=getchar();\n    }\n  while(ch>='0'&&ch<='9')\n    {\n      ans*=10;\n      ans+=ch-'0';\n      ch=getchar();\n    }\n  return ans*op;\n}\nint n;\nll dep[maxn];\nll dep_sum[maxn];\nll son_size[maxn];\nll f[maxn];\nstruct edge\n{\n    int to,next;\n}e[maxn*2];\nint fir[maxn],alloc;\nvoid adde(int u,int v)\n{\n    e[++alloc].next=fir[u];\n    fir[u]=alloc;\n    e[alloc].to=v;\n}\nvoid dfs1(int u,int fa)\n{\n    son_size[u]=1;\n    for(int i=fir[u];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(v==fa) continue;\n        vis[v]=1;\n        dep[v]=dep[u]+1;\n        dfs1(v,u);\n        son_size[u]+=son_size[v];\n    }\n    return;\n}\nvoid dfs2(int u,int fa)\n{\n    for(int i=fir[u];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(v==fa) continue;\n        vis[v]=1;\n        dfs2(v,u);\n        dep_sum[u]+=dep_sum[v];\n    }\n}\nvoid dp(int u,int fa)\n{\n    for(int i=fir[u];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(v==fa) continue;\n        vis[v]=1;\n        f[v]=max(f[v],f[u]+n-2*son_size[v]);\n        dp(v,u);\n    }\n}\nint main()\n{\n    n=read();\n    for(int i=1;i<n;i++)\n    {\n        int u=read(),v=read();\n        adde(u,v);\n        adde(v,u);\n    }\n    dep[1]=1;\n    dfs1(1,0);\n    for(int i=1;i<=n;i++) dep_sum[i]=dep[i];\n    dfs2(1,0);\n    f[1]=dep_sum[1];\n    dp(1,0);\n    ll ans=0;\n    ll maxm=0;\n     for(int i=1;i<=n;i++) \n        if(f[i]>maxm)\n            ans=i,maxm=f[i];\n    printf(\"%lld\",ans);\n}\n```",
        "postTime": 1539774961,
        "uid": 86721,
        "name": "L_M_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3478 \u3010[POI2008]STA-Station\u3011"
    }
]