[
    {
        "content": "\u603b\u590d\u6742\u5ea6 $O(n\\sqrt{n})$ \u7684\u7b97\u6cd5\uff0c\u8dd1\u5230\u843d\u8c37 $rk2$\u3002\n\n\u4e00\u9053\u9898\u8c03\u4e86\u4e00\u5e74\u7cfb\u5217\u3002\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P3992) \n\n# Description\n\n\u7ed9 $n$ \u4e2a\u8f66\u7684\u5750\u6807 $a_i$\uff0c$n$ \u4e2a\u52a0\u6cb9\u7ad9\u7684\u5750\u6807 $b_i$\uff0c$m$ \u6b21\u4fee\u6539\u64cd\u4f5c\u3002\n\n* \u6bcf\u6b21\u4fee\u6539\uff0c\u5c06\u7b2c $i$ \u8f86\u8f66\u7684\u4f4d\u7f6e\u4fee\u6539\u5230 $x$\n\n* \u5728\u521d\u59cb\u60c5\u51b5\u53ca\u6bcf\u6b21\u4fee\u6539\u540e\uff1a\u8981\u6c42\u4e0d\u91cd\u4e0d\u6f0f\u7ed9\u6bcf\u4e00\u4e2a\u8f66\u5339\u914d\u4e00\u4e2a\u505c\u8f66\u573a\uff08\u5373\u53ef\u4ee5\u5c06 $a$ \u6570\u7ec4\u6253\u4e71\u987a\u5e8f\uff09\uff0c\u6700\u5c0f\u5316 $\\sum_{i=1}^{n} |a_i - b_i|$\uff0c\u8f93\u51fa\u8fd9\u4e2a\u6700\u5c0f\u503c\u3002\n\n# Solution\n\n\u6bd4\u8f83\u663e\u7136\u7684\u662f\u8f66\u548c\u52a0\u6cb9\u7ad9\u5176\u5b9e\u5728\u8be2\u95ee\u7684\u65f6\u5019\u662f\u5bf9\u79f0\u7684\uff0c\u5177\u6709\u5bf9\u79f0\u7f8e\u3002\n\n## \u66b4\u529b\u601d\u60f3\n\n\u8fd9\u79cd\u6700\u5c0f\u5316\u66fc\u54c8\u987f\u8ddd\u79bb\u548c\u7684\u95ee\u9898\u6211\u4eec\u6bd4\u8f83\u719f\u6089\u7684\u505a\u6cd5\u662f\u628a $a, b$ \u90fd\u66b4\u529b $\\text{sort}$ \u4e00\u904d\uff0c\u5bf9\u4f4d\u76f8\u51cf\uff0c\u8fd9\u91cc\u7528\u90bb\u9879\u4ea4\u6362\u7684\u653e\u6cd5\u7ed9\u51fa\u4e00\u4e2a\u7406\u6027\u7684\u8bc1\u660e\uff1a\n\n\u8bbe $a, b\\ (a \\le b)$ \u4f5c\u4e3a\u4e24\u4e2a\u8f66\u5750\u6807 \uff0c$c, d\\ (c \\le d)$ \u4f5c\u4e3a\u4e24\u4e2a\u52a0\u6cb9\u7ad9\u7684\u5750\u6807\uff0c\u5373\u8bc1\u660e $a \\Rightarrow c, b \\Rightarrow d$ \u7b2c\u4e00\u79cd\u5339\u914d\u65b9\u5f0f\u7684\u7b54\u6848\u4e0d\u4f1a\u6bd4\u7b2c\u4e8c\u79cd\u5339\u914d\u65b9\u5f0f $a \\Rightarrow d, b \\Rightarrow c$ \u5dee\uff0c\u8fd9\u6837\u89c1\u5230\u4e00\u4e2a\u65e0\u5e8f\u6570\u7ec4\u6211\u4eec\u5c06\u5176\u6392\u5e8f\u7b54\u6848\u4e0d\u4f1a\u53d8\u5dee\uff0c\u5373\u5b8c\u6210\u8bc1\u660e\u3002\n\n1. \u5f53 $a \\le b \\le c \\le d$ \u65f6\uff1a\n   * \u7b2c\u4e00\u79cd\u65b9\u5f0f\u4ee3\u4ef7\uff1a$c - a + d - b = -a-b+c+d$\n   * \u7b2c\u4e8c\u79cd\u65b9\u5f0f\u4ee3\u4ef7\uff1a$d - a + c - b = -a-b+c+d$\n   * \u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e24\u8005\u4ee3\u4ef7\u76f8\u7b49\n2. \u5f53 $a \\le c \\le b \\le d$ \u65f6\uff1a\n   * \u7b2c\u4e00\u79cd\u65b9\u5f0f\u4ee3\u4ef7\uff1a$c - a + d - b = -a-b+c+d$\n   * \u7b2c\u4e8c\u79cd\u65b9\u5f0f\u4ee3\u4ef7\uff1a$d - a + b - c = -a+b-c+d$\n   * \u7531  $c \\le b$ \u53ef\u77e5 $-b+c \\le 0 \\le b - c$\uff0c\u6545\u524d\u8005\u4e00\u5b9a\u4e0d\u5dee\u4e8e\u540e\u8005\u3002\n3. \u5f53 $c \\le d \\le a \\le b$ \u65f6\uff1a\n   * \u7b2c\u4e00\u79cd\u65b9\u5f0f\u4ee3\u4ef7\uff1a$a - c + b - d = a + b - c - d$\n   * \u7b2c\u4e8c\u79cd\u65b9\u5f0f\u4ee3\u4ef7\uff1a$a - d + b - c = a + b - c - d$\n   * \u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e24\u8005\u4ee3\u4ef7\u76f8\u7b49\n   \n4. \u5f53 $c \\le a \\le d \\le  b$ \u65f6\uff1a\n   * \u7b2c\u4e00\u79cd\u65b9\u5f0f\u4ee3\u4ef7\uff1a$a - c + b - d = a + b - c - d$\n   * \u7b2c\u4e8c\u79cd\u65b9\u5f0f\u4ee3\u4ef7\uff1a$d - a + b - c = - a + b - c + d$\n   * \u7531  $a \\le d$ \u53ef\u77e5 $a - d \\le 0 \\le -a +d$\uff0c\u6545\u524d\u8005\u4e00\u5b9a\u4e0d\u5dee\u4e8e\u540e\u8005\u3002\n\n~~\u5df2\u7ecf\u4e0d\u662f\u7b80\u8981\u8bc1\u660e\u4e86\uff0c\u4ee5\u540e\u8fd8\u662f\u8bb0\u4f4f\u8fd9\u4e2a\u6027\u8d28\u5427~~\u3002\n\n\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u5f53\u8f66\u4e0e\u52a0\u6cb9\u7ad9\u6ca1\u6709\u4ea4\u53c9\u65f6\uff0c\u600e\u4e48\u641e\u90fd\u65e0\u6240\u8c13\uff0c\u56e0\u4e3a\u603b\u8981\u4ece\u4e00\u4e2a\u8f66\u51fa\u53d1\u6251\u901a\u6251\u901a\u8dd1\u5230\u4e00\u4e2a\u505c\u8f66\u573a\uff0c\u800c\u5750\u6807\u662f\u5b9a\u503c\u6240\u4ee5\u76f8\u7b49\u3002\u5f53\u6709\u4ea4\u53c9\u65f6\uff0c\u62bd\u8c61\u7684\u7406\u89e3\u4e3a\u4e00\u4e2a\u8f66\u5411\u53f3\u8d70\uff08\u6216\u8005\u8f66\u5e93\u5411\u53f3\u662f\u5bf9\u79f0\u95ee\u9898\uff09\uff0c\u9047\u5230\u7684\u7b2c\u4e00\u4e2a\u505c\u8f66\u573a\u5c31\u505c\u4e0b\u6765\uff0c\u5426\u5219\u5982\u679c\u7ee7\u7eed\u8dd1\uff0c\u4f46\u603b\u6709\u4e00\u4e2a\u8f66\u8981\u5339\u914d\u8fd9\u4e2a\u505c\u8f66\u573a\uff0c\u6240\u4ee5\u5982\u679c\u53f3\u8fb9\u7684\u8f66\u5339\u914d\u8fc7\u6765\u5c31\u4e0d\u662f\u6700\u4f18\u4e86\u3002\uff08\u611f\u89c9\u8fd8\u662f\u56fe\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u4f46\u662f\u6211\u61d2\u5f97\u753b\u4e86\uff09\u3002\n\n\u66b4\u529b\u6bcf\u6b21\u4fee\u6539\u8981 $\\text{sort}$ \u4e00\u6b21\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f $O(nq)$ \u7684\uff0c\u9700\u8981\u4f18\u5316\u3002\n\n## \u4f18\u5316\n\n\u8003\u8651\u5bf9\u4e8e\u4e00\u6b21\u4fee\u6539\uff0c\u539f\u6765\u4f4d\u7f6e\u548c\u73b0\u5728\u4f4d\u7f6e\u6240\u5f62\u6210\u7684\u533a\u95f4\u5185\u7684\u8f66\u90fd\u5faa\u73af\u79fb\u4f4d\u4e86\uff0c\u5982\u679c\u8981\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4 $|a[i] - b[i]|$\uff0c\u4f3c\u4e4e\u4e0d\u592a\u53ef\u80fd\uff0c\u56e0\u4e3a\u662f\u5bf9\u4f4d\u76f8\u51cf\u53d6\u7edd\u5bf9\u503c\uff0c\u4e0d\u7b26\u5408\u7ed3\u5408\u5f8b\uff0c\u4e5f\u6ca1\u6cd5\u7528\u5206\u5757\u4e4b\u7c7b\u7684\u6bd2\u7624\u6570\u636e\u641e\uff08\u5c31\u662f\u8bf4\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u6570\u636e\u90fd\u8981\u770b\u4ed6\u7684\u6b63\u8d1f\u6027\u7136\u540e\u53d6\u503c\uff0c\u4f46\u662f\u5462\u4e00\u4e00\u770b\u5c31\u662f\u66b4\u529b\u4e86\u3002\u3002\u3002\uff09\u3002\n\n## \u7b97\u8d21\u732e\uff01\n\n\u8003\u8651\u6362\u4e00\u79cd\u7edf\u8ba1\u7b54\u6848\u7684\u65b9\u5f0f\uff1a\u7b97\u8d21\u732e\u3002\u7528\u6bcf\u6761\u8fb9\u7684\u8d21\u732e\uff08\u7ecf\u8fc7\u8fd9\u6761\u8fb9\u7684\u8f66\u7684\u6570\u91cf\uff09\u6765\u8fdb\u884c\u8ba1\u7b97\u7b54\u6848\u3002\n\n\u5c06\u6570\u636e\u79bb\u6563\u5316\uff08\u8bbe\u8be5\u6570\u7ec4\u4e3a $d$\uff0c\u8bbe $W_i = d_{i + 1} - d_i$\uff0c\u53ef\u7406\u89e3\u4e3a\u4ece $i$ \u8d70\u5230 $i + 1$ \u7684\u5b9e\u9645\u8ddd\u79bb  \uff09\u540e\uff0c\u8003\u8651\u5148\u5904\u7406\u4e24\u4e2a\uff1a$SumA_i, SumB_i$\uff0c\u5206\u522b\u8868\u793a\u5728 $[1, i]$ \u4f4d\u7f6e\u7684\u533a\u95f4\u5185\u7528\u591a\u5c11\u4e2a\u8f66 $/$ \u505c\u8f66\u573a\uff08\u5373\u524d\u7f00\u548c\u6570\u7ec4\uff09\uff0c\u4ee4 $S_i = |SumA_i - SumB_i|$\uff0c\u7b54\u6848\u5c31\u662f $\\sum S_i W_i$\uff0c\u6216\u8005\u8bf4 $\\sum |(SumA_i - SumB_i) \\times W_i|$\u3002\n\n\u600e\u4e48\u7406\u89e3\u8fd9\u4e2a\u4e1c\u897f\u5462\uff1f$S_i$ \u7684\u5b9e\u9645\u610f\u4e49\u662f\u8d70 $i \\Rightarrow i + 1$ \u8fd9\u6761\u8fb9\u7684\u8f66\u7684\u6570\u91cf\u3002\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u6709 $\\min(SumA_i,SumB_i)$ \u5df2\u7ecf\u5728 $i$ \u4f4d\u7f6e\u4e4b\u524d\u5b8c\u6210\u4e86\u4e92\u76f8\u5339\u914d\uff0c\u4f46\u662f\u5b58\u5728 $|SumA_i - SumB_i|$ \u5728\u4e4b\u524d\u65e0\u8f66 / \u52a0\u6cb9\u7ad9\u5339\u914d\uff0c\u6240\u4ee5\u4e00\u5b9a\u8981\u7ecf\u8fc7\u8fd9\u6761\u8fb9\uff0c\u5230 $i$ \u4f4d\u7f6e\u4e4b\u540e\u5bfb\u627e\u5339\u914d\u3002\n\n\u7ecf\u8fc7\u8fd9\u90e8\u8f6c\u5316\uff0c\u8003\u8651\u4fee\u6539\u4e00\u6b21\u7684\u5f71\u54cd\uff08\u8bbe\u539f\u4f4d\u7f6e\u4e3a $x$ \uff0c\u65b0\u4f4d\u7f6e\u4e3a $y$\uff09\uff1a \n\n* \u82e5 $x < y$\uff0c\u5373\u7ed9 $SumA$ \u7684 $[x, y - 1]$  \u533a\u95f4\u5e26\u6765 $-1$ \u504f\u79fb\u91cf\n* \u82e5 $x > y$ \u5373\u7ed9 $SumA$ \u7684 $[y, x - 1]$ \u533a\u95f4\u5e26\u6765 $+1$ \u7684\u504f\u79fb\u91cf\n\n\u90a3\u4e48\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\uff1a\n\n* $A$ \u6570\u7ec4\u533a\u95f4\u52a0\u548c\u4fee\u6539\n* \u5bf9\u5e94\u4f4d\u7f6e\u8be2\u95ee $|A_i-B_i|$\n\n~~\u4e0d\u4f1a\u505a~~\u3002\u4e0d\u80fd\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u539f\u56e0\u5728\u4e8e\uff0c\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u6570\u65f6\uff0c\u4f60\u65e0\u6cd5\u533a\u5206\u6bcf\u4e2a\u6570\u7684\u6570\u503c $\\ge 0$ \u8fd8\u662f $< 0$\uff0c\u4f60\u53c8\u6ca1\u53d1\u628a\u6570\u7ec4\u6392\u5e8f\u505a\u5230\u6709\u5e8f\u7136\u540e\u53ef\u4ee5\u4e8c\u5206\u8fd9\u4e2a\u4e1c\u897f\u3002\uff08\u5373\u6ca1\u6709\u533a\u95f4\u96f6\u754c\u9650\u7684\u80fd\u529b\uff0c\u56e0\u4e3a\u6570\u503c\u662f\u4e0d\u65ad\u589e\u52a0\u7684\uff09\u3002\u3002\n\n\u7ecf\u8fc7\u4e0a\u9762\u7684\u601d\u8003\u52a0\u4e0a $n, q \\le 50000$ \u7684\u63d0\u793a\uff0c\u5e94\u8be5\u8fd9\u662f\u4e2a\u5206\u5757\u3002\u79c9\u627f\u5927\u5757\u6734\u7d20\uff0c\u5c0f\u5757\u66b4\u529b\u7684\u601d\u60f3\uff0c\u8003\u8651\u5728\u5b58\u5728 $\\text{tag}$ \u6807\u8bb0\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u4f55\u5feb\u901f\u627e\u5230 $0$ \u754c\u70b9\u5462\uff1f\u6211\u4eec\u6709\u4e24\u4e2a\u601d\u8def\uff1a\n\n* \u4fee\u6539\u7684\u65f6\u5019\uff0c\u5927\u5757\u6253 $\\text{tag}$\uff0c\u5c0f\u5757\u6309\u7167\u4e0b\u65b9\u8fdb\u884c\u66b4\u529b\u91cd\u6784\u3002\u6bcf\u4e2a\u5757\u91cc\u9762\u9884\u5904\u7406\u6309\u539f\u503c $A_i - B_i$\uff0c $\\text{sort}$ \u4e00\u4e0b\uff0c\u4e4b\u540e\u67e5\u8be2\u4e8c\u5206 $0$ \u7684\u4f4d\u7f6e\uff0c\u524d\u9762\u53d6\u53cd\uff0c\u540e\u9762\u4e0d\u53d8\uff0c\u76f8\u52a0\u5373\u53ef\u3002\u8fd9\u4e5f\u662f\u76ee\u524d\u5927\u591a\u9898\u89e3\u7684\u505a\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt{n} \\log n)$\n* \u4fee\u6539\u7684\u65f6\u5019\uff0c\u5927\u5757\u6253 $\\text{tag}$\uff0c\u5c0f\u5757\u6309\u7167\u4e0b\u65b9\u8fdb\u884c\u66b4\u529b\u91cd\u6784\u3002\u6bcf\u4e2a\u5757\u91cc\uff0c\u628a\u503c\u57df\u5f53\u4e0b\u6807\u641e\u4e00\u4e2a\u6876\n\n\u7531\u4e8e\u5927\u591a\u6570\u9898\u89e3\u90fd\u662f\u7b2c\u4e00\u79cd\u5199\u6cd5\u8fd9\u91cc\u4e5f\u5c31\u8bf4\u8bf4 & \u5199\u5199\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u3002\n\n\u628a $(SumA_i - SumB_i)$ \u5f53\u505a\u4e0b\u6807\uff0c\u503c $(SumA_i - SumB_i) \\times W_i$ \u6253\u8fdb\u6876\u91cc\uff0c\u628a\u6876\u518d\u641e\u4e2a\u524d\u7f00\u548c\uff0c\u5373 $cnt_i$ \u8868\u793a $\\le i$ \u7684\u6570\u7684\u548c \u3002\u540c\u7406\uff0c\u628a\u8fb9\u6743\u5355\u72ec\u641e\u51fa\u6765\u5f04\u524d\u7f00\u548c\u5f62\u6210 $g_i$\uff08\u8fd9\u4e2a\u4e1c\u897f\u4e3a\u4e86\u8ba1\u7b97 $\\text{tag}$ \u7684\u5e94\u5148\u89c4\u5b9a\uff09\u3002\u8be2\u95ee\u679a\u4e3e\u6bcf\u4e2a\u5757\uff0c\u8bbe\u5f53\u524d\u7684 $\\text{tag}$ \u6807\u8bb0\u4e3a $x$\uff0c\u7b54\u6848\u5373 $-cnt[-x] - x \\times g[-x] + (cnt[INF] - cnt[x]) + x \\times (g[INF] - G[-x])$\uff08$0$ \u524d\u9762\u53d6\u53cd\uff0c\u4e24\u90e8\u5206\u52a0\u548c\uff0c\u5728\u5404\u81ea\u8bb0\u5f55\u3002\n\n\u4f46\u662f\u7531\u4e8e\u8fd9\u9898\u5185\u5b58\u7d27\uff0c\u6240\u4ee5\u5f00\u4e0d\u4e0b $n\\sqrt{n}$ \u7684\u6570\u7ec4\u5927\u5c0f\uff0c\u4e0d\u59a8\u8003\u8651\u6bcf\u6b21\u91cd\u6784\u5757\u65f6\u7684\u6709\u503c\u57df\u7684\u533a\u95f4\u5e73\u79fb\u4e00\u4e0b\uff0c\u7528 $\\text{vector}$ \u641e\u5373\u53ef\uff0c\u6709\u4e00\u79cd\u611f\u6027\u7684\u7406\u89e3\uff0c\u8fd9\u6837\u641e\u603b\u7a7a\u95f4\u662f $O(n)$ \u7684\u3002\u56e0\u4e3a\u8003\u8651\u53ea\u6709\u4e00\u4e2a\u4f4d\u7f6e\u52a0\u5165\u8f66 / \u505c\u8f66\u573a\uff0c\u503c\u57df\u624d\u4f1a $+1/-1$\uff0c\u800c\u5168\u6570\u7ec4\u6700\u591a\u52a0\u51cf $n$ \u6b21\uff0c\u6240\u4ee5\u603b\u7a7a\u95f4 $O(n)$\u3002\n\n###  \u65f6\u7a7a\u590d\u6742\u5ea6\n\n $O(n\\sqrt{n})$ \u3002\n\n### Tips\n\n* \u8fd9\u9898\u4e2d\u95f4\u51fa\u73b0\u7684\u4f4d\u7f6e\u53ef\u80fd\u4e4b\u524d\u6ca1\u6709\u5bfc\u81f4\u79bb\u6563\u5316\u627e\u4e0d\u5230\uff0c\u6240\u4ee5\u53ef\u4ee5\u79bb\u7ebf\u5148\u8bfb\u8fdb\u6765\u79bb\u6563\u5316\uff0c\u518d\u641e\u641e\u3002\n\n* \u7531\u4e8e\u6709\u8d1f\u6570\u7684\u503c\uff0c\u641e\u6876\u7684\u65f6\u5019\u641e\u4e2a\u504f\u79fb\u91cf\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <vector>\n#include <algorithm>\n#define rint register int\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N = 50005, S = 390;\n\nint n, Q, t, a[N], b[N], d[N * 3], tot;\nint pos[N * 3], L[S], R[S], len[S], Min[S], Max[S], tag[S], sum[N * 3];\n\n// sum[i] = sumA[i] - sumB[i]\n\nvector<LL> cnt[S];\nvector<int> g[S];\n\nstruct Q{\n\tint i, x;\n} q[N];\n\nint inline get(int x) {\n\treturn lower_bound(d + 1, d + 1 + tot, x) - d;\n}\n\n// \u5efa\u7acb / \u91cd\u6784\u5757\u4e3a i \u7684 id\nvoid inline build(int id) {\n\tMin[id] = 2e9, Max[id] = 0;\n\tfor (rint i = L[id]; i <= R[id]; i++) Min[id] = min(Min[id], sum[i]), Max[id] = max(Max[id], sum[i]);\n\tlen[id] = Max[id] - Min[id] + 1;\n\tcnt[id].clear(); g[id].clear();\n\tcnt[id].resize(len[id], 0); g[id].resize(len[id], 0);\n\tfor (rint i = L[id]; i <= R[id]; i++) {\n\t\tint v = sum[i] - Min[id];\n\t\tcnt[id][v] += (LL)sum[i] * (d[i + 1] - d[i]);\n\t\tg[id][v] += d[i + 1] - d[i];\n\t}\n\tfor (rint i = 1; i < len[id]; i++) \n\t\tcnt[id][i] += cnt[id][i - 1], g[id][i] += g[id][i - 1];\n}\n\n// \u4fee\u6539\u64cd\u4f5c\nvoid inline change(int l, int r, int k) {\n\tif (pos[l] == pos[r]) {\n\t\tfor (rint i = l; i <= r; i++) sum[i] += k;\n\t\tbuild(pos[l]);\n\t\treturn;\n\t}\n\tint p = pos[l], q = pos[r];\n\tfor (rint i = p + 1; i < q; i++) tag[i] += k;\n\tfor (rint i = l; i <= R[p]; i++) sum[i] += k;\n\tfor (rint i = L[q]; i <= r; i++) sum[i] += k;\n\tbuild(p); build(q);\n}\n\n// \u67e5\u8be2\u64cd\u4f5c\nLL inline calc() {\n\tLL res = 0;\n\tfor (rint i = 1; i <= t; i++) {\n\t\tint x = min(len[i] - 1, max(-1, - Min[i] - tag[i]));\n\t\tif (x != -1) res += abs(cnt[i][x] + (LL)tag[i] * g[i][x]);\n\t\tif (x != -1) res += abs((cnt[i][len[i] - 1] - cnt[i][x]) + (LL)tag[i] * (g[i][len[i] - 1] - g[i][x]));\n\t\telse res += abs(cnt[i][len[i] - 1] + (LL)tag[i] * g[i][len[i] - 1]);\n\t}\n\treturn res;\n}\n\nint main() {\n\t// \u8bfb\u5165 + \u79bb\u6563\u5316\n\tscanf(\"%d\", &n);\n\tfor (rint i = 1; i <= n; i++) scanf(\"%d\", a + i), d[++tot] = a[i];\n\tfor (rint i = 1; i <= n; i++) scanf(\"%d\", b + i), d[++tot] = b[i];\n\tscanf(\"%d\", &Q);\n\tfor (rint i = 1; i <= Q; i++)\n\t\tscanf(\"%d%d\", &q[i].i, &q[i].x), d[++tot] = q[i].x;\n\tsort(d + 1, d + 1 + tot);\n\ttot = unique(d + 1, d + 1 + tot) - d - 1;\n\td[tot + 1] = d[tot];\n\tfor (rint i = 1; i <= n; i++) sum[a[i] = get(a[i])]++, sum[b[i] = get(b[i])]--;\n\tfor (rint i = 2; i <= tot; i++) sum[i] += sum[i - 1];\n\t// \u5206\u5757\n\tt = sqrt(tot);\n\tfor (rint i = 1; i <= t; i++) L[i] = (i - 1) * t + 1, R[i] = i * t;\n\tif (R[t] < tot) R[t] = tot;\n\tfor (rint i = 1; i <= t; i++) {\n\t\tfor (rint j = L[i]; j <= R[i]; j++) pos[j] = i;\n\t\tbuild(i);\n\t}\n\tprintf(\"%lld\\n\", calc());\n\tfor (rint i = 1; i <= Q; i++) {\n\t\tint id = q[i].i, x = a[id], y = get(q[i].x);\n\t\tif (x < y) change(x, y - 1, -1);\n\t\telse if (x > y) change(y, x - 1, 1);\n\t\ta[id] = y;\n\t\tprintf(\"%lld\\n\", calc());\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1585240973,
        "uid": 161687,
        "name": "Remake",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3992 \u3010[BJOI2017]\u5f00\u8f66\u3011"
    },
    {
        "content": "\u6d1b\u8c37 P3992 \u9898\u89e3\n\n\u7b80\u8981\u9898\u610f\uff1a\u7ed9\u5b9a\u4e24\u4e2a\u5e8f\u5217\uff0c\u8981\u6c42\u652f\u6301\u7b2c\u4e00\u4e2a\u5e8f\u5217\u7684\u5355\u70b9\u4fee\u6539\uff0c\u8be2\u95ee\u4e24\u4e2a\u5e8f\u5217\u6392\u5e8f\u540e\u5bf9\u4f4d\u76f8\u51cf\u7684\u7edd\u5bf9\u503c\u7684\u548c\uff0c\u4e0d\u5f3a\u5236\u5728\u7ebf.\n\n\u90a3\u4e48\u8fd9\u4e00\u770b\u5c31\u662f\u4e00\u9053\u6570\u636e\u7ed3\u6784\u9898\uff0c\u8003\u8651\u4ec0\u4e48\u6837\u7684\u6570\u636e\u7ed3\u6784\u80fd\u591f\u7ef4\u62a4\u8fd9\u6837\u7684\u4e00\u4e2a\u5e8f\u5217\uff0c\u5982\u6b64\u6211\u4eec\u73b0\u5728\u7684\u76ee\u6807\u5c31\u662f\u627e\u51fa\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u8fd9\u4e2a\u5e8f\u5217\uff0c\u6216\u8005\u8bf4\u8003\u8651**\u6211\u4eec\u638c\u63e1\u7684\u6570\u636e\u7ed3\u6784\u4e2d\u6709\u4ec0\u4e48\u80fd\u591f\u7ef4\u62a4\u8fd9\u4e2a\u5e8f\u5217**.\n\n\u9996\u5148\u7b2c\u4e00\u4e2a\u95ee\u9898\u5728\u4e8e\uff0c\u8fd9\u4e2a\u6240\u8c13\u7684\u628a\u8f66\u5339\u914d\u5230\u52a0\u6cb9\u7ad9\u7684\u8fc7\u7a0b\u7684\u6700\u77ed\u8ddd\u79bb\u7a76\u7adf\u662f\u4ec0\u4e48.\n\n\u4e00\u822c\u610f\u4e49\u4e0b\u7684\u8d2a\u5fc3\u5c31\u662f\u6392\u5e8f\u540e\u5bf9\u4f4d\u76f8\u51cf\uff0c\u8bc1\u660e\u7684\u8bdd\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c**\u7528\u4e34\u9879\u4ea4\u6362\u6cd5\u8bc1\u660e**\uff0c\u6211\u4eec\u77e5\u9053\u5192\u6ce1\u6392\u5e8f\u662f\u4e00\u79cd\u53ea\u4f9d\u8d56\u4e8e\u4e24\u4e2a\u76f8\u90bb\u5143\u7d20\u7684\u9006\u5e8f\u4ea4\u6362\u7684\u6392\u5e8f\uff0c\u56e0\u6b64\u5982\u679c\u4e24\u4e2a\u76f8\u90bb\u5143\u7d20\u4ea4\u6362\u5339\u914d\u5230\u5bf9\u4f4d\u7b54\u6848\u4e00\u5b9a\u4e0d\u4f1a\u53d8\u5dee\uff0c\u5c31\u53ef\u4ee5\u5f97\u51fa**\u65e0\u8bba\u4ec0\u4e48\u6837\u7684\u521d\u59cb\u6392\u5217\u5728\u7ecf\u8fc7\u5192\u6ce1\u6392\u5e8f\u540e\uff0c\u603b\u6bd4\u521d\u59cb\u6392\u5217\u66f4\u4f18\u6216\u7b49\u4f18**\u7684\u7ed3\u8bba\uff0c\u90a3\u4e48\u8fd9\u6837\u7684\u8bdd\u5176\u4ed6\u6392\u5e8f\u4e5f\u5c31\u662f\u53ef\u884c\u7684\u4e86.\n\n\u8003\u8651\u8f66\u548c\u52a0\u6cb9\u7ad9\u7684\u4f4d\u7f6e\uff0c\u4e0d\u59a8\u8bbe\u4e24\u8f86\u8f66\u7684\u4f4d\u7f6e\u4e3a $0,1$\uff0c\u4e24\u4e2a\u52a0\u6cb9\u7ad9\u7684\u4f4d\u7f6e\u4e3a $a,b$\uff0c\u7531\u5bf9\u79f0\u6027\uff0c\u53ea\u9700\u8981\u8003\u8651 $0<a<1<b$ \u548c $0<a<b<1$ \u7684\u4e24\u79cd\u60c5\u51b5\u5373\u53ef.\n\n$0<a<1<b$ \u4e0b\uff0c\u9006\u5e8f\u65b9\u6848\u7b54\u6848\u4e3a $(1-a)+(b-0)=b-a+1$\uff0c\u6b63\u5e8f\u65b9\u6848\u7b54\u6848\u4e3a $(a-0)+(b-1)=b+a-1$\uff0c\u663e\u7136\u6b63\u5e8f\u65b9\u6848\u66f4\u4f18\u6216\u7b49\u4f18.\n\n$0<a<b<1$ \u4e0b\uff0c\u9006\u5e8f\u65b9\u6848\u7b54\u6848\u4e3a $(b-0)+(1-a)=1-a+b$\uff0c\u6b63\u5e8f\u65b9\u6848\u7b54\u6848\u4e3a $(a-0)+(1-b)=1+a-b$\uff0c\u663e\u7136\u6b63\u5e8f\u65b9\u6848\u66f4\u4f18\u6216\u7b49\u4f18.\n\n\u5982\u679c\u5927\u5bb6\u4e0d\u76f8\u4fe1\u4ee3\u6570\u8bc1\u660e\u6216\u8005\u89c9\u5f97\u4ee3\u6570\u8bc1\u660e\u5473\u540c\u56bc\u8721\u3001\u6beb\u65e0\u610f\u4e49\uff0c\u90a3\u4e48\u611f\u6027\u8bc1\u660e\u5c31\u662f\u4f60\u5206\u7c7b\u7136\u540e\u753b\u4e2a\u56fe\uff0c\u53d1\u73b0**\u4e2d\u95f4\u4ea4\u53e0\u7684\u90e8\u5206\u88ab\u7b97\u4e86\u4e24\u6b21**\uff0c\u663e\u7136\u662f\u66f4\u52a3\u6216\u8005\u7b49\u52a3\u7684.\n\n\u5728\u77e5\u9053\u4e86\u8fd9\u4e2a\u7ed3\u8bba\u4e4b\u540e\uff0c\u5c31\u7acb\u523b\u5f97\u5230\u4e86\u4e00\u4e2a\u505a\u6cd5\uff1a\u5b9e\u65f6\u7ef4\u62a4\u6709\u5e8f\u7684\u8f66\u7684\u4f4d\u7f6e\uff0c\u6bcf\u6b21\u4fee\u6539\u4e4b\u540e\u4f5c\u4e00\u6b21\u7b80\u5355\u7684\u63d2\u5165\u6392\u5e8f\uff0c\u7136\u540e\u5bf9\u4f4d\u76f8\u51cf\u6c42\u7b54\u6848\u5373\u53ef.\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u83b7\u5f97 $40$ \u5206\u7684\u6210\u7ee9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(n\\times q)$\uff0c\u5e38\u6570\u5f88\u5c0f\uff0c\u74f6\u9888\u5728\u63d2\u5165\u6392\u5e8f.\n\n\u597d\u50cf\u73b0\u5728\u8fd8\u6ca1\u6709\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u7684\u5f71\u5b50\uff0c\u4f5c\u4e3a $n\\times q$ \u7684\u5178\u578b\u5f62\u5f0f\u7684\u9898\uff0c\u8fd8\u662f\u5e94\u8be5\u5f80\u6570\u636e\u7ed3\u6784\u7684\u65b9\u5411\u53bb\u60f3\uff0c\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u8981\u652f\u6301\u7684\u662f\u968f\u65f6\u7ef4\u62a4 $\\sum_{i=1}^{n}|a_i-b_i|$.\n\n\u8fd9\u663e\u7136\u4e0d\u662f\u7528\u7ebf\u6027\u3001\u6811\u5f62\u6570\u636e\u7ed3\u6784\u80fd\u591f\u7ef4\u62a4\u7684\uff0c\u6700\u4e3b\u8981\u7684\u95ee\u9898\u5728\u4e8e\u4fee\u6539\u4e00\u6b21\u4f1a\u7834\u574f\u6389\u6709\u5e8f\u7684\u5bf9\u5e94\u7ed3\u6784\uff0c\u56e0\u6b64\u4e0d\u80fd\u4f7f\u7528**\u7a33\u5b9a\u5728\u5e8f\u5217\u4e0a**\u7684\u6570\u636e\u7ed3\u6784\uff0c\u800c\u4e14\u533a\u95f4\u53ef\u5408\u5e76\u6027\u548c\u53ef\u52a0\u53ef\u51cf\u6027\u8d28\u90fd\u7279\u522b\u5dee\uff0c\u56e0\u6b64\u4e0d\u80fd\u4f7f\u7528**\u57fa\u4e8e\u533a\u95f4\u5408\u5e76**\u7684\u6570\u636e\u7ed3\u6784.\n\n\u5982\u679c**\u76f4\u63a5\u4f7f\u7528\u5757\u72b6\u94fe\u8868\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f**\uff0c\u53ef\u4ee5\u505a\u5230\u5e73\u5747\u590d\u6742\u5ea6 $\\Theta(n\\sqrt n)$\u3001\u6700\u574f\u590d\u6742\u5ea6 $O(n^2)$\uff0c\u7531\u4e8e\u6570\u636e\u6709\u4e00\u5b9a\u7684\u968f\u673a\u6027\uff0c\u4e5f\u8bb8\u662f\u53ef\u4ee5\u901a\u8fc7\u7684\uff0c\u4f46\u662f\u8be5\u505a\u6cd5\u6bd4\u8f83\u4e11\u964b\u800c\u4e14\u7ec6\u8282\u8f83\u591a\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0.\n\n\u8bb2\u4e2a\u6545\u4e8b\u5427\uff0c\u5efa\u8bae\u8010\u5fc3\u770b\u5b8c\u518d\u770b\u540e\u9762\u7684\u601d\u8def\uff1a\n\n\u5728\u6f2b\u957f\u7684\u65f6\u7a7a\u96a7\u9053\u4e2d\uff0c\u65f6\u7a7a\u88ab\u5272\u88c2\u4e3a\u4e86 $n$ \u4e2a\u5c0f\u533a\u95f4\uff0c\u6bcf\u4e2a\u5c0f\u533a\u95f4\u90fd\u662f\u4e00\u4e2a\u622a\u7136\u4e0d\u540c\u7684\u4e16\u754c\uff0c\u6bcf\u4e2a\u4e16\u754c\u5404\u81ea\u90fd\u6709\u4e00\u4e2a\u638c\u7ba1\u8fd9\u4e2a\u4e16\u754c\u7684\u547d\u8fd0\u4e4b\u795e\uff0c\u8fd9\u4e9b\u547d\u8fd0\u4e4b\u795e\u6302\u7740\u518d\u7b80\u5355\u4e0d\u8fc7\u5374\u4ee4\u4eba\u671b\u800c\u751f\u754f\u7684\u9ed1\u8272\u5e03\u7ef8\u5236\u6210\u7684\u888d\u5b50\uff0c\u65e5\u590d\u4e00\u65e5\u3001\u6beb\u4e0d\u51fa\u9519\u5730\u4f53\u5bdf\u7740\u5979\u4eec\u7684\u4e16\u754c\uff0c\u800c\u5979\u4eec\u53c8\u90fd\u5728\u67d0\u4e2a\u5979\u4eec\u81ea\u5df1\u4e5f\u65e0\u6cd5\u7406\u89e3\u7684\u6240\u8c13\u4e0a\u5e1d\u7684\u7ba1\u8f96\u4e0b\uff0c\u5979\u5f88\u6f02\u4eae\u3001\u8bf4\u8bdd\u8d77\u6765\u7ed9\u4eba\u4ee5\u6e29\u6696\u7684\u4f53\u611f\uff0c**\u5374\u4e0d\u5dee\u4e00\u5206\u4e00\u6beb\u5730\u7edf\u5408\u7740\u547d\u8fd0\u4e4b\u795e\u5730\u4fe1\u606f\uff0c\u5206\u914d\u7740\u65e0\u5fae\u4e0d\u81f3\u7684\u4efb\u52a1**.\n\n\u8fd9\u65f6\u95f4\uff0c\u6765\u81ea\u73b0\u4e16\u7684\u4ed6\u548c\u6765\u81ea\u672a\u6765\u7684\u5979\u8981\u7a7f\u8fc7\u65f6\u7a7a\u96a7\u9053\u800c\u76f8\u9047\uff0c\u4ed6\u5ea6\u8fc7\u7740\u5c06\u6765\uff0c\u5979\u7834\u574f\u7740\u5386\u53f2\uff0c\u4e24\u4eba\u4e00\u6b65\u4e00\u6b65\u5730\u9760\u8fd1\uff0c\u800c**\u4ed6/\u5979\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u65f6\u7a7a\uff0c\u90a3\u65f6\u7a7a\u4e2d\u7684\u547d\u8fd0\u4e4b\u795e\u4fbf\u4f1a\u5fe0\u8bda\u5730\u8bb0\u5f55\u4e0b\u8fd9\u4e2a\u4fe1\u606f**\uff0c\u800c\u8d77\u70b9\u7684\u547d\u8fd0\u4e4b\u795e\u548c\u7ec8\u70b9\u7684\u547d\u8fd0\u4e4b\u795e\u4e5f\u4e0d\u4f1a\u611f\u5230\u60cb\u60dc\u6216\u8005\u5e78\u8fd0\uff0c\u6bd5\u7adf\u8fd9\u4e00\u5207\u6700\u7ec8\u90fd\u53ea\u662f\u5979\u4eec\u7684\u7ba1\u8f96\u8005\uff0c\u90a3\u4e2a\u5979\u7684\u4e00\u523b\u7684\u773c\u4e2d\u4e4b\u7269.\n\n\u4ed6\u4eec\u65e0\u7a77\u65e0\u5c3d\u5730\u8d70\u7740\uff0c**\u53ea\u4ee4\u9014\u4e2d\u7684\u547d\u8fd0\u4e4b\u795e\u5728\u6c38\u4e0d\u51fa\u9519\u7684\u8bb0\u5f55\u4e2d\u6dfb\u4e0a\u4e86\u4e00\u7b14\uff0c\u800c\u8fd9\u4e00\u7b14\u53c8\u4e00\u7b14\uff0c\u878d\u5408\u6210\u4e86\u4ed6\u4eec\u7684\u547d\u8fd0**\uff0c\u878d\u5408\u6210\u4e86\u4ed6\u4eec\u5fc3\u4e2d\u61a7\u61ac\u8106\u5f31\u5230\u65e0\u6cd5\u8868\u8fbe\u3001\u800c\u53c8\u575a\u5b9a\u5f3a\u5927\u5230\u8de8\u8d8a\u65f6\u95f4\u7684\u60c5\u611f\uff0c**\u8fd9\u4e00\u7b14\u53c8\u4e00\u7b14\u7684\u603b\u548c\uff0c\u4fbf\u662f\u4ed6\u4eec\u7684\u603b\u548c**.\n\n\u7eb5\u6df1\u6f2b\u957f\u7684\u65f6\u7a7a\u3001\u4e0d\uff0c\u6c38\u4e0d\u505c\u6b47\u7684\u547d\u8fd0\uff0c\u50cf\u90a3\u8fdc\u53e4\u795e\u8bdd\u4e2d\u7684\u4e5d\u4f4d\u7f2a\u65af\u5973\u795e\uff0c**\u6570\u4e0d\u6e05\u3001\u7a00\u6709\u800c\u65e0\u5c3d\u7684\u4ed6\u548c\u5979\u884c\u8d70\u8fc7\u7684\u8def\u7a0b\u7684\u603b\u548c\uff0c\u6070\u597d\u7b49\u4e8e\u6574\u9f50\u3001\u5e73\u51e1\u800c\u51b7\u9177\u7684\u5979\u4eec\u8bb0\u5f55\u4e0b\u7684\u5386\u53f2\u7684\u603b\u548c**.\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6240\u6709\u7684 $|a_i-b_i|$ \u7684\u603b\u548c\uff0c**\u6052\u7b49\u4e8e\u7ecf\u8fc7\u6bcf\u4e00\u6761\u6570\u8f74\u4e0a\u957f\u5ea6\u4e3a $1$ \u7684\u8fb9\u7684\u8f66/\u52a0\u6cb9\u7ad9\u7684\u4e2a\u6570\u7684\u603b\u548c**\uff0c\u5982\u679c\u5047\u8bbe\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u8f74\u7ebf\u6bb5 $[i,i+1)$\uff0c\u6070\u6709 $A_i$ \u8f86\u8f66\u548c $B_i$ \u4e2a\u52a0\u6cb9\u7ad9\u5728\u5176\u5de6\u4fa7\uff0c\u90a3\u4e48\u8d21\u732e\u5c31\u662f $|A_i-B_i|$.\n\n\u628a\u95ee\u9898\u4ece $|a_i-b_i|$ \u89c4\u7ea6\u5230 $|A_i-B_i|$ \u7684\u597d\u5904\u5728\u4e8e\uff0c\u53ef\u4ee5\u628a $a_i$ \u7684\u5355\u70b9\u4fee\u6539\u8f6c\u5316\u4e3a $A_i$ \u7684\u533a\u95f4\u52a0 1 \u6216\u8005\u51cf 1\uff0c**\u8fdb\u800c\u6d88\u9664\u63d2\u5165/\u5220\u9664\u64cd\u4f5c\u5e26\u6765\u7684\u5e8f\u5217\u4e0d\u7a33\u5b9a\u6027**.\n\n\u7ee7\u7eed\u5206\u6790\uff0c\u53ef\u4ee5\u770b\u51fa\u53ef\u4ee5\u628a\u6240\u6709\u521d\u59cb\u7684 $a_i$ \u548c $b_i$\u3001\u6240\u6709\u4fee\u6539\u64cd\u4f5c\u4e2d\u6d89\u53ca\u7684 $x_i$ \u4e00\u8d77\u79bb\u6563\u5316\uff0c\u7136\u540e\u5206\u914d\u65b0\u7684 $\\text{idx}$\uff0c\u7136\u540e\u628a\u76f8\u90bb\u7684 $\\text{idx}$ \u5bf9\u5e94\u7684**\u4e24\u4e2a\u4f4d\u7f6e\u4e4b\u95f4\u7684\u6570\u8f74\u8ddd\u79bb**\u6807\u8bb0\u4e3a $w_i$\uff0c\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4 $A_i$ \u548c $B_i$ **\u8868\u793a\u5728\u4f4d\u7f6e $i$ \u4e4b\u524d\u8f66\u548c\u52a0\u6cb9\u7ad9\u7684\u6570\u91cf**\uff0c\u90a3\u4e48\u6bcf\u6b21\u64cd\u4f5c\u540e\u603b\u7684\u7b54\u6848\u5c31\u662f $S_i=\\sum_{i=1}^{2n+m}(|A_i-B_i|\\times w_i)$\uff0c\u8be2\u95ee\u64cd\u4f5c\u5373\u662f\u8be2\u95ee\u8fd9\u4e2a\u5f0f\u5b50\u7684\u503c\u4e86.\n\n\u90a3\u4e48\u628a\u4e00\u8f86\u539f\u672c\u5728 $p$ \u7684\u8f66\u79fb\u52a8\u5230 $q$ \u610f\u5473\u7740\u4ec0\u4e48\u5462\uff0c\u5982\u679c $p=q$ \u610f\u5473\u7740\u79fb\u4e86\u4e2a\u5bc2\u5bde\uff0c$p<q$ \u610f\u5473\u7740 $A_p,A_{p+1},...,A_{q-1}$ \u90fd\u51cf\u5c11\u4e86 1\uff0c$p>q$ \u610f\u5473\u7740 $A_q,A_{q+1},...,A_{p-1}$ \u90fd\u589e\u52a0\u4e86 1.\n\n\u5728\u521d\u59cb\u5316 $A,B$ \u548c $w$ \u4e4b\u540e\uff0c\u8003\u8651\u5bf9\u8fd9\u4e2a\u6570\u7ec4\u4f5c\u5757\u72b6\u6570\u7ec4\uff0c\u90a3\u4e48\u6bcf\u4e00\u5757\u5fc5\u987b\u8981\u505a\u5230\u521d\u59cb\u5316\u4e4b\u540e\u5feb\u901f\u67e5\u8be2\u7684\u4fe1\u606f\u5728\u4e8e\u5982\u679c\u8fd9\u5757\u7684 $A$ \u6574\u4f53\u504f\u79fb\u4e00\u5b9a\u91cf\u4e4b\u540e\u7684\u7b54\u6848\uff0c\u4e5f\u5373\u9700\u8981\u9884\u5904\u7406\u7684\u662f**\u5982\u679c\u8fd9\u4e00\u5757\u6574\u4f53\u7684 $A$ \u90fd\u6709\u4e00\u4e2a $\\Delta$ \u7684\u504f\u79fb\u91cf\u7684\u8bdd\u8fd9\u4e00\u5757\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f\u591a\u5c11**.\n\n\u8003\u8651\u5230\u6bcf\u6b21\u64cd\u4f5c\u57fa\u672c\u4e0a\u90fd\u4f1a\u5e26\u6765 2 \u4e2a\u9700\u8981\u91cd\u6784\u7684\u533a\u95f4\uff0c\u56e0\u6b64\u9884\u5904\u7406\u7684 $|\\Delta|$ \u7684\u6700\u5927\u503c\u5e94\u8be5\u662f $O(\\sqrt n)$ \u7ea7\u522b\u7684\uff0c\u5426\u5219\u590d\u6742\u5ea6\u5c31\u6709\u95ee\u9898\u4e86.\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u91cd\u6784\u533a\u95f4\u7684\u65f6\u5019\u6b63\u786e\u5730\u7ef4\u62a4\u4ee5\u4e0b\u7684\u503c\uff1a\u8fd9\u4e00\u6bb5\u6240\u7ba1\u8f96\u7684 $A,B$\u3001\u628a $\\Delta$ \u7f6e\u96f6\u3001$L_i$ \u548c $R_i$ \u6570\u7ec4\u8868\u793a $\\Delta=\\mp\\space i$ \u65f6\u8fd9\u4e00\u6bb5\u5bf9\u7b54\u6848\u7684\u8d21\u732e.\n\n\u6709\u4e09\u79cd\u60c5\u51b5\u9700\u8981\u91cd\u6784\u533a\u95f4\uff1a\n\n- \u8fd9\u4e00\u6bb5\u533a\u95f4\u53d1\u751f\u7684\u53d8\u5316**\u662f\u5c40\u90e8\u7684**\u800c\u4e0d\u662f\u6574\u4f53\u7684.\n- \u8fd9\u4e00\u6bb5\u533a\u95f4\u7684 $\\Delta$ \u8d8a\u8fc7\u4e86 $+\\sqrt n$ \u7684\u754c\u9650.\n- \u8fd9\u4e00\u6bb5\u533a\u95f4\u7684 $\\Delta$ \u8d8a\u8fc7\u4e86 $-\\sqrt n$ \u7684\u754c\u9650.\n\n\u7531\u4e8e\u6570\u636e\u6709\u4e00\u5b9a\u7684\u968f\u673a\u6027\uff0c\u6c34\u7206\u4e86\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a\u5e76\u4e0d\u5b58\u5728\u8d8a\u8fc7\u4e86 $\\pm\\sqrt n$ \u7684\u754c\u9650\u7684\u60c5\u51b5.\n\n\u5728\u91cd\u6784\u533a\u95f4\u7684\u65f6\u5019\uff0c\u7b97 $L$ \u548c $R$ \u6570\u7ec4\u53ef\u4ee5\u91c7\u7528**\u6570\u7ec4\u5dee\u5206\u7ef4\u62a4\u533a\u95f4\u52a0\u51cf\u7b49\u5dee\u6570\u5217**\u7684\u6280\u5de7\uff0c\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u7ec6\u8282\uff0c\u753b\u4e2a\u56fe\u5e2e\u52a9\u63a8\u5f0f\u5b50\uff0c\u4ee3\u7801\u4e2d\u4e5f\u6709\u76f8\u5e94\u7684\u6ce8\u91ca.\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u83b7\u5f97 $100$ \u5206\u7684\u6210\u7ee9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta((n+q)\\sqrt n)$\u3001\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(n+q)$\uff0c\u5e38\u6570\u4e00\u822c\uff0c\u6ca1\u6709\u660e\u663e\u74f6\u9888.\n\n**\u5199\u4ee3\u7801\u65f6\u6ce8\u610f\u533a\u5206\u539f $A_i$ \u7684\u4f4d\u7f6e\u548c\u5355\u4e2a\u5757\u4e2d $A_i$ \u7684\u4f4d\u7f6e**.\n\n\u53ef\u4ee5\u53c2\u8003\u672c\u4eba\u5199\u7684\u8fd9\u4efd~~\u4e11\u964b\u7684~~\u4ee3\u7801\uff0c\u5171 ```271``` \u884c\uff0c\u6700\u5927\u6d4b\u8bd5\u70b9\u7528\u65f6 ```388ms(C++)/358ms(O2)```\uff0c\u76ee\u524d\u662f\u6d1b\u8c37 ```Rank 11(C++)/Rank 8(O2)```.\n\n```\n#include<bits/stdc++.h>\n#define int long long\n#define rep(a,b,c) for(register int a=(b);a<=(c);++a)\n#define dow(a,b,c) for(register int a=(b);a>=(c);--a)\nusing namespace std;\nconst int MaxN=50000+5,MaxM=100000+5,MaxCnt=((MaxN<<1)+MaxM),MaxSqr=300+5,Null=0;\nstruct TemporaryPosition\n{\n\tint pos;\n\tint idx;\n\tchar typ;\n\tint src;\n\tinline bool operator < (const TemporaryPosition& tpx) const\n\t\t{return (pos<tpx.pos);}\n};\nTemporaryPosition temp[MaxCnt];\nstruct OriginalPosition_A\n{\n\tint pos;\n\tint idx;\n};\nOriginalPosition_A OrgA[MaxN];\nstruct OriginalPosition_B\n{\n\tint pos;\n\tint idx;\n};\nOriginalPosition_B OrgB[MaxN];\nstruct CalculationOperation\n{\n\tint src;\n\tint fix;\n\tint idx;\n};\nCalculationOperation Calc[MaxM];\nint dis[MaxCnt],IniA[MaxCnt],IniB[MaxCnt];\nstruct DifferenceArray\n{\n\tint Dif[MaxSqr],cit[MaxSqr],Rec[MaxSqr];\n\tinline void Initalize(const register int len)\n\t{\n\t\trep(i,0,len)\n\t\t\tDif[i]=cit[i]=0;\n\t\trep(i,0,len)\n\t\t\tRec[i]=0;\n\t}\n\tinline void Update(const register int lef,const register int rig,const register int org,const register int dif)\n\t{\n\t\tDif[lef]+=org;\n\t\tDif[rig+1]-=(org+(rig-lef+1)*dif);\n\t\tcit[lef]+=dif;\n\t\tcit[rig+1]-=dif;\n\t}\n\tinline void Calculate(const register int len)\n\t{\n\t\tregister int Cit=0;\n\t\trep(i,0,len)\n\t\t{\n\t\t\tRec[i]=((((i==0)?0:Rec[i-1])+Dif[i])+Cit);\n\t\t\tCit+=cit[i];\n\t\t}\n\t}\n};\nDifferenceArray dLef,dRig;\nstruct StructuralBlock\n{\n\tint beg,end;\n\tint SumA[MaxSqr];\n\tint SumB[MaxSqr];\n\tint Delta;\n\tint lef[MaxSqr];\n\tint rig[MaxSqr];\n\tinline void ReloadVersion(const register int sqr)\n\t{\n\t\trep(i,beg,end)\n\t\t\tSumA[i-beg+1]+=Delta;\n\t\tDelta=0;\n\t\tdLef.Initalize(sqr);\n\t\tdRig.Initalize(sqr);\n\t\tregister int dif,val;\n\t\trep(i,beg,end)\n\t\t{\n\t\t\tdif=(SumA[i-beg+1]-SumB[i-beg+1]),val=(dis[i]);\n\t\t\tif(dif>=1)\n\t\t\t{\n\t\t\t\t// \u5bf9\u4e8e\u4f4d\u7f6e i \u7ef4\u62a4 |dif+i|*val\n\t\t\t\tif(dif>=+sqr)\n\t\t\t\t{\n\t\t\t\t\tdLef.Update(0,sqr,+dif*val,-val);\n\t\t\t\t\tdRig.Update(0,sqr,+dif*val,+val);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdLef.Update(0,+dif,+dif*val,-val);\n\t\t\t\t\tdLef.Update(+dif+1,sqr,val,+val);\n\t\t\t\t\tdRig.Update(0,sqr,+dif*val,+val);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(dif==0)\n\t\t\t{\n\t\t\t\tdLef.Update(0,sqr,0,+val);\n\t\t\t\tdRig.Update(0,sqr,0,+val);\n\t\t\t}\n\t\t\telse //if(dif<=-1)\n\t\t\t{\n\t\t\t\t// \u5bf9\u4e8e\u4f4d\u7f6e i \u7ef4\u62a4 |dif+i|*val\n\t\t\t\tif(dif<=-sqr)\n\t\t\t\t{\n\t\t\t\t\tdLef.Update(0,sqr,-dif*val,+val);\n\t\t\t\t\tdRig.Update(0,sqr,-dif*val,-val);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdLef.Update(0,sqr,-dif*val,+val);\n\t\t\t\t\tdRig.Update(0,-dif,-dif*val,-val);\n\t\t\t\t\tdRig.Update(-dif+1,sqr,val,+val);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdLef.Calculate(sqr);\n\t\tdRig.Calculate(sqr);\n\t\trep(i,0,sqr) lef[i]=dLef.Rec[i];\n\t\trep(i,0,sqr) rig[i]=dRig.Rec[i];\n\t}\n\tinline void Insert(const register int sqr,const register bool flag,const register int lef,const register int rig)\n\t{\n\t\tif(flag)\n\t\t{\n\t\t\t++Delta;\n\t\t\tif(abs(Delta)>=sqr)\n\t\t\t\tprintf(\"Hello World!\\n\"),ReloadVersion(sqr);\n\t\t\treturn;\n\t\t}\n\t\trep(i,lef,rig) ++SumA[i-beg+1];\n\t\tReloadVersion(sqr);\n\t}\n\tinline void Delete(const register int sqr,const register bool flag,const register int lef,const register int rig)\n\t{\n\t\tif(flag)\n\t\t{\n\t\t\t--Delta;\n\t\t\tif(abs(Delta)>=sqr)\n\t\t\t\tprintf(\"Hello World!\\n\"),ReloadVersion(sqr);\n\t\t\treturn;\n\t\t}\n\t\trep(i,lef,rig) --SumA[i-beg+1];\n\t\tReloadVersion(sqr);\n\t}\n\tinline int Query(void)\n\t\t{return ((Delta>=0)?rig[Delta]:lef[-Delta]);}\n};\nStructuralBlock St[MaxSqr<<2];\nstruct StructuralChainList\n{\n\tint bel[MaxCnt];\n\tinline void Initalize(const register int len,const register int sqr)\n\t{\n\t\tregister int blo=(len+(sqr-1))/sqr;\n\t\trep(i,1,blo)\n\t\t{\n\t\t\tSt[i].beg=(St[i-1].end+1);\n\t\t\tSt[i].end=min(i*sqr,len);\n\t\t\trep(j,St[i].beg,St[i].end)\n\t\t\t{\n\t\t\t\tbel[j]=i;\n\t\t\t\tSt[i].SumA[j-St[i].beg+1]=IniA[j];\n\t\t\t\tSt[i].SumB[j-St[i].beg+1]=IniB[j];\n\t\t\t}\n\t\t}\n\t\trep(i,1,blo)\n\t\t\tSt[i].ReloadVersion(sqr);\n\t}\n\tinline void Insert(const register int len,const register int sqr,const register int lef,const register int rig)\n\t{\n\t\tif(bel[lef]==bel[rig])\n\t\t{\n\t\t\tSt[bel[lef]].Insert(sqr,false,lef,rig);\n\t\t\treturn;\n\t\t}\n\t\tSt[bel[lef]].Insert(sqr,false,lef,St[bel[lef]].end);\n\t\trep(i,bel[lef]+1,bel[rig]-1)\n\t\t\tSt[i].Insert(sqr,true,Null,Null);\n\t\tSt[bel[rig]].Insert(sqr,false,St[bel[rig]].beg,rig);\n\t}\n\tinline void Delete(const register int len,const register int sqr,const register int lef,const register int rig)\n\t{\n\t\tif(bel[lef]==bel[rig])\n\t\t{\n\t\t\tSt[bel[lef]].Delete(sqr,false,lef,rig);\n\t\t\treturn;\n\t\t}\n\t\tSt[bel[lef]].Delete(sqr,false,lef,St[bel[lef]].end);\n\t\trep(i,bel[lef]+1,bel[rig]-1)\n\t\t\tSt[i].Delete(sqr,true,Null,Null);\n\t\tSt[bel[rig]].Delete(sqr,false,St[bel[rig]].beg,rig);\n\t}\n\tinline void Update(const register int len,const register int sqr,const register int rnk,const register int idx)\n\t{\n\t\tif(OrgA[rnk].idx<idx)\n\t\t\tDelete(len,sqr,OrgA[rnk].idx,idx-1);\n\t\telse if(OrgA[rnk].idx==idx)\n\t\t\treturn;\n\t\telse //if(OrgA[rnk].idx>idx)\n\t\t\tInsert(len,sqr,idx,OrgA[rnk].idx-1);\n\t\tOrgA[rnk].idx=idx;\n\t}\n\tinline int Query(const register int len,const register int sqr)\n\t{\n\t\tregister int blo=(len+(sqr-1))/sqr,Sum=0;\n\t\trep(i,1,blo)\n\t\t\tSum+=St[i].Query();\n\t\treturn Sum;\n\t}\n};\nStructuralChainList Scl;\nsigned main()\n{\n\tregister int n,m,sqr,cnt=0,pos,src,fix;\n\tscanf(\"%lld\",&n);\n\tsqr=ceil(sqrt(n)+0.1);\n\trep(i,1,n)\n\t{\n\t\tscanf(\"%lld\",&pos);\n\t\tOrgA[i].pos=pos;\n\t\t++cnt;\n\t\ttemp[cnt].pos=pos;\n\t\ttemp[cnt].typ='A';\n\t\ttemp[cnt].src=i;\n\t}\n\trep(i,1,n)\n\t{\n\t\tscanf(\"%lld\",&pos);\n\t\tOrgB[i].pos=pos;\n\t\t++cnt;\n\t\ttemp[cnt].pos=pos;\n\t\ttemp[cnt].typ='B';\n\t\ttemp[cnt].src=i;\n\t}\n\tscanf(\"%lld\",&m);\n\trep(i,1,m)\n\t{\n\t\tscanf(\"%lld%lld\",&src,&fix);\n\t\tCalc[i].src=src;\n\t\tCalc[i].fix=fix;\n\t\t++cnt;\n\t\ttemp[cnt].pos=fix;\n\t\ttemp[cnt].typ='Q';\n\t\ttemp[cnt].src=i;\n\t}\n\tsort(temp+1,temp+cnt+1);\n\trep(i,1,cnt)\n\t{\n\t\tif(temp[i].typ=='A')\n\t\t\tOrgA[temp[i].src].idx=i;\n\t\telse if(temp[i].typ=='B')\n\t\t\tOrgB[temp[i].src].idx=i;\n\t\telse //if(temp[i].typ=='Q')\n\t\t\tCalc[temp[i].src].idx=i;\n\t\tdis[i]=((i==cnt)?0:(temp[i+1].pos-temp[i].pos));\n\t\tIniA[i]=IniA[i-1]+((temp[i].typ=='A')?1:0);\n\t\tIniB[i]=IniB[i-1]+((temp[i].typ=='B')?1:0);\n\t}\n\tScl.Initalize(cnt,sqr);\n\trep(i,1,m)\n\t{\n\t\tprintf(\"%lld\\n\",Scl.Query(cnt,sqr));\n\t\tScl.Update(cnt,sqr,Calc[i].src,Calc[i].idx);\n\t}\n\tprintf(\"%lld\\n\",Scl.Query(cnt,sqr));\n\treturn 0;\n}\n```",
        "postTime": 1612840379,
        "uid": 130897,
        "name": "\u7480\u74a8\u661f\u7a7a1",
        "ccfLevel": 9,
        "title": "\u3010\u521d\u4e8c\u3011\u6d1b\u8c37 P3992 \u9898\u89e3"
    },
    {
        "content": "\u559c\u95fb\u4e50\u89c1\u76845w\u5206\u5757\u2026\u2026\n\n\u9700\u8981\u7a0d\u5fae\u5361\u5361\u5e38\u6570\uff0c(\u5176\u5b9e\u662f\u6211\u4eba\u50bb\u5e38\u6570\u5927)\n_______________________\n\n## \u672c\u9898\u9898\u89e3\n\n\u6211\u4eec\u8ba4\u4e3a\u8f66\u548c\u52a0\u6cb9\u7ad9\u662f\u70b9\uff0c\u90a3\u4e48\u8fd9\u5c31\u6784\u6210\u4e86\u4e00\u6761\u94fe\n\n\u76f4\u63a5\u4e24\u4e24\u5339\u914d\u8fdb\u884c\u8ba1\u7b97\u4e0d\u662f\u5341\u5206\u5bb9\u6613\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4ea4\u6362\u03a3\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u8003\u8651\u8d21\u732e\n\n\u6211\u4eec\u8003\u8651\u5728\u6700\u540e\u7684\u65b9\u6848\u4e2d\u6bcf\u4e00\u6761\u8fb9\u7684\u8d21\u732e\uff0c\u90a3\u4e48\u6211\u4eec\u4f1a\u53d1\u73b0\u4e00\u6761\u8fb9\u7684\u8d21\u732e\u5e94\u8be5\u662f\n\n### \u8fd9\u6761\u8fb9\u7684\u957f\u5ea6\u00d7|\u8fd9\u6761\u8fb9\u4e4b\u524d\u7684\u8f66\u6570-\u8fd9\u6761\u8fb9\u4e4b\u524d\u7684\u52a0\u6cb9\u7ad9\u6570|\n\n\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u5c31\u662f\u8981\u4e48\u662f\u8f66\u4ece\u5de6\u5411\u53f3\u5f00\u8fc7\u53bb\uff0c\u8981\u4e48\u662f\u52a0\u6cb9\u7ad9\u8ba9\u8f66\u5f00\u8fc7\u6765\uff0c\u603b\u4e4b\u8fd9\u6761\u8fb9\u4e0a\u4e00\u5b9a\u4f1a\u901a\u8fc7\u4e8c\u8005\u4e4b\u5dee\u7684\u8f66\u6570\uff0c\u6240\u4ee5\u8d21\u732e\u5c31\u662f\u4e0a\u9762\u7684\u5f0f\u5b50\n\n\u90a3\u4e48\u6211\u4eec\u5982\u679c\u6211\u4eec\u76f4\u63a5\u6309\u7167\u4e0a\u9762\u7684\u5f0f\u5b50\u8fdb\u884c\u5bf9\u7b54\u6848\u8fdb\u884c\u8ba1\u7b97\u7684\u8bdd\u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u505a\u6cd5\u4e0d\u662f\u5341\u5206\u660e\u667a\n\n\u56e0\u4e3a\u6211\u4eec\u8981\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\n\n\u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u4e2a\u70b9\u4e0a\u6709\u4e24\u4e2a\u5c5e\u6027a\u548cb\n\n1.\u4fee\u6539\u67d0\u4e2a\u70b9\u7684\u70b9\u6743b\n\n2.\u533a\u95f4a\u52a01\u533a\u95f4a\u51cf1\n\n3.\u533a\u95f4\u5e73\u79fb\n\n3.\u6c42\u4e0a\u9762\u5e26\u7edd\u5bf9\u503c\u5f0f\u5b50\u7684\u548c\n\n\u6211\u4eec\u53d1\u73b0\u4f3c\u4e4e\u8fd9\u4e2a\u4e1c\u897f\u4e0d\u662f\u5341\u5206\u597d\u7528\u7ebf\u6bb5\u6811\u505a\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4f7f\u7528\u5757\u72b6\u94fe\u8868/\u5757\u72b6\u6570\u7ec4\u5f3a\u884c\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\u6211\u4eec\u53d1\u73b0\u5982\u679c\u4f60\u4f7f\u7528\u5757\u72b6\u94fe\u8868\u6765\u7ef4\u62a4\u7684\u8bdd\u4f60\u4f1a\u53d1\u73b0\u4f60\u8981\u652f\u6301\u63d2\u5165\u548c\u5220\u9664\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u6362\u53e5\u8bdd\u8bf4\u4f60\u9700\u8981\u652f\u6301\u5206\u88c2\u4e00\u4e2a\u8f83\u5927\u7684\u5757\u8fd9\u4e2a\u64cd\u4f5c\u2026\u2026\n\n\u6b64\u65f6\u4f60\u7684\u4ee3\u7801\u5c31\u4f1a\u6781\u5ea6\u6076\u5fc3\u5e76\u4e14\u4e0d\u80fd\u770b\u4e86\u2026\u2026\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u52a0\u70b9\u5e38\u6570\u7136\u540e\u6d88\u6389\u8fd9\u4e2a\u6076\u5fc3\u7684\u5206\u88c2\u64cd\u4f5c\n\n\u90a3\u4e48\u6211\u4eec\u5c06\u6240\u6709\u4fee\u6539\u5f3a\u884c\u79bb\u7ebf\u4e4b\u540e\u6211\u4eec\u5c06\u8fd915w\u4e2a\u70b9\u5f3a\u884c\u79bb\u6563\u5316\uff0c\u7136\u540e\u5bf9\u8fd915w\u4e2a\u8fb9\u8fdb\u884c\u5206\u5757\n\n\u6b64\u65f6\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u521a\u624d\u7684\u5f0f\u5b50\u4ecd\u7136\u6210\u7acb\uff0c\u56e0\u4e3a\u5982\u679c\u8fd9\u4e2a\u8fb9\u7684\u5de6\u7aef\u70b9\u6682\u65f6\u6ca1\u6709\u8f66\u7684\u8bdd\uff0c\u4f60\u76f8\u5f53\u4e8e\u5c06\u4e00\u6761\u957f\u8fb9\u62c6\u6210\u4e24\u6761\u77ed\u8fb9\u8ba1\u7b97\u8d21\u732e\uff0c\u5f53\u7136\u4e0a\u8fb9\u7684\u5f0f\u5b50\u8fd8\u662f\u6210\u7acb\u7684\n\n\u4f46\u662f\u6b64\u65f6\u5c31\u53d8\u6210\u4e86\u666e\u901a\u7684\u533a\u95f4\u52a0\u533a\u95f4\u51cf\u4e86\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u628a\u6240\u6709\u7684\u8be2\u95ee\u79bb\u7ebf\u585e\u5230\u6211\u4eec\u6570\u636e\u7ed3\u6784\u91cc\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u6ca1\u6709\u4e86\u6076\u5fc3\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\uff0c\u53ea\u5269\u4e0b\u52a0\u6cd5\u548c\u51cf\u6cd5\u4e86\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u4f1a\u7565\u5fae\u597d\u5199\u4e00\u70b9\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u53ea\u9700\u8981\u533a\u95f4\u52a0\u533a\u95f4\u51cf\u4e86\uff0c\u6076\u5fc3\u7684\u4fee\u6539\u70b9\u6743\u548c\u5206\u88c2\u5757\u5168\u90e8\u90fd\u6ca1\u6709\u4e86\n\n\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u8003\u8651\u600e\u4e48\u505a\u8fd9\u4e2a\u64cd\u4f5c\n\n\u6211\u4eec\u5c06\u6240\u6709\u8fb9\u5206\u6210$\\sqrt{N}$\u5757\n\n\u7136\u540e\u6bcf\u4e2a\u5757\u5185\u6309\u7167a(\u4e5f\u5c31\u662f\u524d\u9762\u8f66\u7684\u4e2a\u6570\u51cf\u52a0\u6cb9\u7ad9\u4e2a\u6570)\u8fdb\u884c\u6392\u5e8f\n\n\u73b0\u5728\u8003\u8651\u5982\u4f55\u7ef4\u62a4\u5757\u5185\u7b54\u6848(\u5c31\u662f\u90a3\u4e2a\u5f0f\u5b50\u7684\u548c)\n\n\u9996\u5148\u5982\u679c\u8fd9\u4e2a\u5757\u4e0d\u662f\u6574\u4f53\u7684\u88ab\u52a01\u6216\u8005\u51cf1\u7684\u8bdd\u53ef\u4ee5\u76f4\u63a5\u91cd\u6784\u4e86\n\n\u56e0\u4e3a\u6bcf\u6b21\u64cd\u4f5c\u6700\u591a\u91cd\u6784\u4e24\u4e2a\u5757\n\n\u5982\u679c\u662f\u6574\u4f53\u52a01\u6216\u8005\u51cf1\u7684\u8bdd\u6211\u4eec\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u7279\u6b8a\u6280\u5de7\n\n\u6ce8\u610f\u8fd9\u91cc\u5982\u679c\u662f\u6574\u4f53\u52a0a\u6574\u4f53\u51cfb\u7684\u8bdd\u4f1a\u66f4\u96be\u5199\u4e00\u70b9\n\n\u5148\u4ecb\u7ecd\u4e00\u4e0b\u4e00\u822c\u7684\u505a\u6cd5\n\n\u6211\u4eec\u5047\u8bbe$f(x)$\u4e3a\u8fd9\u4e2a\u5757\u5728\u6574\u4f53\u88ab\u52a0x\u7684\u65f6\u5019\u7684\u7b54\u6848\u503c\n\n\u4f60\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u82e5\u5e72\u5e26\u7edd\u5bf9\u503c\u5f0f\u5b50\u6c42\u548c\u7684\u5f62\u5f0f\n\n\u9ad8\u4e2d\u6570\u5b66\u77e5\u8bc6\u544a\u8bc9\u4f60\u8fd9\u662f\u4e00\u4e2a\u5206\u6bb5\u51fd\u6570\uff0c\u5e76\u4e14\u4f60\u53d1\u73b0\u8fd9\u4e2a\u51fd\u6570\u4ec5\u4ec5\u5206\u4e86$O(\\sqrt{n})$\u6bb5\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u7684\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u5206\u6bb5\u7684\u51fd\u6570\u6b64\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5lower_bound\n\u51fax\u6240\u5728\u7684\u5206\u6bb5\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u4e86\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u53ea\u662f\u52a0\u4e00\u548c\u51cf\u4e00\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5077\u70b9\u61d2\n\n\u5177\u4f53\u6765\u8bf4\u6211\u4eec\u7ef4\u62a4\u6309a\u6392\u5e8f\u7684\u5e8f\u5217\uff0c\u7136\u540e\u5904\u7406\u51fa\u8fd9\u4e2a\u6309a\u6392\u5e8f\u7684\u5e8f\u5217\u7684b\u7684\u524d\u7f00\u548c\n\n\u6bcf\u6b21\u52a01\u548c\u51cf1\u7684\u65f6\u5019\u66b4\u529b\u7684\u4e8c\u5206\u51fa\u6b64\u65f60\u7684\u4f4d\u7f6e\n\n\u5982\u679c\u662f\u52a01\uff0c\u90a3\u4e48\u7b54\u6848\u53d8\u5316\u91cf\u662f\u6240\u6709\u975e\u8d1f\u6570\u7684b\u503c\u548c-\u8d1f\u6570\u7684b\u503c\u548c\n\n\u5982\u679c\u662f\u51cf1\uff0c\u90a3\u4e48\u7b54\u6848\u53d8\u5316\u91cf\u662f\u6240\u6709\u975e\u6b63\u6570\u7684b\u503c\u548c-\u6b63\u6570\u7684b\u503c\u548c\n\n\u5f53\u6211\u4eec\u4e8c\u5206\u51fa0\u7684\u4f4d\u7f6e\u4e4b\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528\u524d\u7f00\u548c\u8868\u8fbe\u8fd9\u4e2a\u7b54\u6848\u7684\u53d8\u5316\u91cf\u4e86\n\n\u7136\u540e\u5206\u5757\u6253\u4e00\u4e0b\u6807\u8bb0\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u505a\u5b8c\u8fd9\u9053\u9898\u4e86\n\n\u5982\u679c\u53d1\u73b0\u5e38\u6570\u4e0d\u662f\u5341\u5206\u5bf9\u52b2\u7684\u8bdd\u53ef\u4ee5\u5c06\u91cd\u6784\u65f6\u7684\u5feb\u901f\u6392\u5e8f\u6362\u6210\u8ba1\u6570\u6392\u5e8f\n\n\u590d\u6742\u5ea6$O(N\\sqrt{N}logN)$\n\n\u4e0a\u4ee3\u7801~\n\n```C\n// luogu-judger-enable-o2\n#pragma GCC optimize(2)\n#include<cstdio>\n#include<algorithm>\n#include<map>\n#include<cmath>\n#include<ctime>\nusing namespace std;const int N=15*1e4+10;const int B=400;typedef long long ll;\nmap <int,int> mp1,mp2;int n;int m;int pos[N];int bs;int bt;int tot;int qu[N];int qv[N];\nll res=0;inline ll mabs(ll x){return x>0?x:-x;}int* AB;int st;int ed;\ninline bool cmp(const int& a,const int& b){return AB[a]<AB[b];}\nstruct b_arr\n{\n    int st[B];int tp;int ab[B];int w[B];ll pre[B];int miu;ll ans;\n    inline void app(){for(int i=1;i<=tp;i++)ab[i]-=miu;miu=0;}\n    inline void rebuild()\n    {\n        AB=ab;sort(st+1,st+tp+1,cmp);//\u66b4\u529b\u91cd\u6784\n        for(int i=1;i<=tp;i++)pre[i]=pre[i-1]+w[st[i]];ans=0;\n        for(int i=1;i<=tp;i++)ans+=mabs(ab[st[i]])*w[st[i]];\n    }\n    inline void rb_add(const int& lc,const int& p)\n    {for(int i=1;i<=tp;i++)st[i]=i;app();for(int i=lc;i<=tp;i++)ab[i]+=p;rebuild();}\n    inline void lb_miu()\n    {\n        int l=0;int r=tp;//\u6253\u6807\u8bb0\uff0c\u53ef\u80fd\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u4e8c\u5206\u7684\u5904\u7406\u53ef\u80fd\u9700\u8981\u6253\u51cf\u6cd5\u6807\u8bb0\n        while(l!=r){int mid=(l+r+1)/2;if(ab[st[mid]]<=miu)l=mid;else r=mid-1;}\n        ans+=2*pre[l]-pre[tp];miu++;\n    }\n    inline void lb_add()\n    {\n        --miu;int l=0;int r=tp;\n        while(l!=r){int mid=(l+r+1)/2;if(ab[st[mid]]<=miu)l=mid;else r=mid-1;}\n        ans+=pre[tp]-2*pre[l];\n    }\n    inline void ins(const int& Ab,const int& W){++tp;st[tp]=tp;ab[tp]=Ab;w[tp]=W;}\n}bl[B];int bu[N];int bv[N];//\u7ef4\u62a4\u7f16\u53f7\u5230\u5757\u7f16\u53f7\u7684\u6620\u5c04\nint main()\n{\n    scanf(\"%d\",&n);//\u5077\u61d2\u4f7f\u7528\u4e86map\u8fdb\u884c\u79bb\u6563\u5316\n    for(int i=1;i<=n;i++){scanf(\"%d\",&pos[i]);mp1[pos[i]]=1;mp2[pos[i]]++;}\n    for(int i=1,po;i<=n;i++){scanf(\"%d\",&po);mp1[po]=1;mp2[po]--;}\n    scanf(\"%d\",&m);\n    for(int i=1;i<=m;i++)\n    {scanf(\"%d%d\",&qu[i],&qv[i]);mp1[qv[i]]=1;if(mp2[qv[i]]==0)mp2[qv[i]]=0;}\n    tot=mp1.size()-1;bs=sqrt(tot);//\u6ce8\u610f\u6700\u540e\u4e00\u4e2a\u70b9\u6ca1\u6709\u8fb9\uff0c\u6240\u4ee5\u5220\u6389\n    for(int i=0;i*bs<=tot;i++)\n        for(int j=1;j<=bs&&i*bs+j<=tot;j++)bu[i*bs+j]=i+1,bv[i*bs+j]=j;\n    map <int,int> :: iterator it,it1;tot=0;\n    for(it=mp2.begin(),it1=it,++it1;it1!=mp2.end();++it,++it1)it1->second+=it->second;\n    for(it=mp1.begin(),it1=it,++it1;it1!=mp1.end();++it,++it1)\n    {it->second=++tot,bl[bu[tot]].ins(mp2[it->first],it1->first-it->first);}\n    mp1.erase(--mp1.end());mp2.erase(--mp2.end()); \n    bt=(tot-1)/bs+1;for(int i=1;i<=bt;i++)bl[i].rebuild();\n    for(int i=1;i<=bt;i++)res+=bl[i].ans;printf(\"%lld\\n\",res);\n    for(int t=1;t<=m;t++)\n    {\n        int ls=mp1[pos[qu[t]]];int rs=mp1[qv[t]];//\u8ba8\u8bba\u4e0b\u662f\u533a\u95f4\u52a0\u8fd8\u662f\u533a\u95f4\u51cf\n        if(ls==0){bl[bu[rs]].rb_add(bv[rs],1);for(int i=bu[rs]+1;i<=bt;i++)bl[i].lb_add();}\n        else if(rs==0){bl[bu[ls]].rb_add(bv[ls],-1);for(int i=bu[ls]+1;i<=bt;i++)bl[i].lb_miu();}\n        else if(ls<rs)\n        {\n            bl[bu[ls]].rb_add(bv[ls],-1);bl[bu[rs]].rb_add(bv[rs],1);\n            for(int i=bu[ls]+1;i<=bu[rs];i++)bl[i].lb_miu();\n        }\n        else if(ls>rs)\n        {\n            bl[bu[ls]].rb_add(bv[ls],-1);bl[bu[rs]].rb_add(bv[rs],1);\n            for(int i=bu[rs]+1;i<=bu[ls];i++)bl[i].lb_add();\n        }res=0;for(int i=1;i<=bt;i++)res+=bl[i].ans;\n        printf(\"%lld\\n\",res);pos[qu[t]]=qv[t];//\u66f4\u6539\u4f4d\u7f6e\n    }return 0;//\u62dc\u62dc\u7a0b\u5e8f~\n}\n```\n\n\n\n\n\n",
        "postTime": 1530425972,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3992 \u3010[BJOI2017]\u5f00\u8f66\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3992)\n# \u9898\u76ee\u5927\u610f\n\u6709$n$\u4e2a\u6c7d\u8f66\u548c$n$\u4e2a\u52a0\u6cb9\u7ad9\uff0c\u5750\u6807\u5206\u522b\u4e3a$a_{1,2,...,n}$\u548c$b_{1,2,...,n}$\u3002\u6bcf\u8f86\u6c7d\u8f66\u4f1a\u5230\u4e00\u4e2a\u52a0\u6cb9\u7ad9\uff0c\u6c42\u51fa\u6700\u5c0f\u79fb\u52a8\u8ddd\u79bb\u4e4b\u548c\u3002\u6709$m$\u6b21\u4fee\u6539\uff0c\u6bcf\u6b21\u5c06\u67d0\u8f86\u6c7d\u8f66\u7684\u5750\u6807\u8fdb\u884c\u4fee\u6539\uff0c\u6c42\u51fa\u4fee\u6539\u540e\u7684\u6700\u5c0f\u79fb\u52a8\u8ddd\u79bb\u4e4b\u548c\u3002\n\n$n,m\\le 5\\times 10^4$\n# \u601d\u8def\n\u770b\u5230\u9898\u89e3\u90fd\u5199\u5f97\u6bd4\u8f83\u7e41\u6742\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u4e0d\u662f\u90a3\u4e48\u7e41\u6742\u7684\u65b9\u6cd5\u3002\u501f\u9274\u4e86[Miracle\u7684\u535a\u5ba2](https://www.cnblogs.com/Miracevin/p/10691399.html)\u548c[shadowice1984\u7684\u9898\u89e3](https://www.luogu.com.cn/blog/ShadowassIIXVIIIIV/solution-p3992)\u3002\n\n\u9996\u5148\uff0c\u4e0d\u96be\u770b\u51fa\u5bf9\u4e8e\u67d0\u4e00\u6761\u8fb9\uff0c\u5b83\u7684\u8d21\u732e\u4e3a\u5b83\u7684\u957f\u5ea6\u4e58\u4e0a$|sum|$\uff0c\u5176\u4e2d\uff0c$sum$\u5c31\u662f\u5728\u5b83\u4e4b\u524d\u7684\u6c7d\u8f66-\u5728\u5b83\u4e4b\u524d\u7684\u52a0\u6cb9\u7ad9\u3002\u5b83\u7684\u610f\u4e49\u5c31\u662f\u56e0\u4e3a\u8981\u4e00\u4e00\u5bf9\u5e94\uff0c\u6240\u4ee5\u5dee\u7684\u6570\u91cf\u5c31\u9700\u8981\u901a\u8fc7\u79fb\u52a8\u586b\u8865\uff0c\u800c\u79fb\u52a8\u5c31\u9700\u8981\u7ecf\u8fc7\u8be5\u8fb9\u3002\n\n\u800c\u6211\u4eec\u7684\u4fee\u6539\u64cd\u4f5c\uff0c\u76f8\u5f53\u4e8e\u5220\u6389\u4e00\u4e2a\u70b9\u518d\u52a0\u5165\u4e00\u4e2a\u70b9\u3002\u8003\u8651\u52a0\u5165\u4e00\u4e2a\u70b9\uff0c\u90a3\u6211\u4eec\u5c31\u76f8\u5f53\u4e8e\u628a\u540e\u9762\u7684\u70b9\u7684$sum+1$\u3002\u4f46\u662f\u56e0\u4e3a\u8d21\u732e\u91cc\u9762\u5e26\u6709\u7edd\u5bf9\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u641e\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u95ee\u9898\u6211\u4eec\u4e00\u4e2a\u5e38\u7528\u7684\u89e3\u51b3\u65b9\u6cd5\u5c31\u662f\u76f4\u63a5\u5206\u5757\u3002\u5bf9\u4e8e\u67d0\u4e2a\u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u6309$sum$\u5927\u5c0f\u6392\u5e8f\uff0c\u4e8c\u5206\u627e\u5230\u5206\u754c\u70b9\uff0c\u7136\u540e\u5206\u522b\u8003\u8651$sum< 0$\u548c$sum\\ge0$\u7684\u60c5\u51b5\u5373\u53ef\u3002\u5220\u6389\u4e00\u4e2a\u70b9\u540c\u7406\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728$\\Theta(n\\sqrt n(\\log \\sqrt n))$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n# $\\texttt{Code}$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define Abs(x) ((x)>=0?(x):-(x))\n#define Int register int\n#define ll long long\n#define MAXN 200005\n#define MAXM 455\n\ntemplate <typename T> inline void read (T &t){t = 0;char c = getchar();int f = 1;while (c < '0' || c > '9'){if (c == '-') f = -f;c = getchar();}while (c >= '0' && c <= '9'){t = (t << 3) + (t << 1) + c - '0';c = getchar();} t *= f;}\ntemplate <typename T,typename ... Args> inline void read (T &t,Args&... args){read (t);read (args...);}\ntemplate <typename T> inline void write (T x){if (x < 0){x = -x;putchar ('-');}if (x > 9) write (x / 10);putchar (x % 10 + '0');}\n\nint n,m,un,a[MAXN],b[MAXN],tmp[MAXN];\n\nstruct Query{\n\tint x,y;\n}q[MAXN];\n\nll ans;\nint siz,val[MAXN],sum[MAXN],bel[MAXN],ord[MAXN],col[MAXM],cor[MAXM],tag[MAXN],sval[MAXN];\n\nbool cmp (int a,int b){return sum[a] < sum[b];}\n\nvoid rebuild (int x){\n\tsort (ord + col[x],ord + cor[x] + 1,cmp);\n\tsval[col[x]] = val[ord[col[x]]];for (Int i = col[x] + 1;i <= cor[x];++ i) sval[i] = sval[i - 1] + val[ord[i]];\n}\n\nvoid init (){\n\tfor (Int i = 1;i <= n;++ i) sum[a[i]] ++,sum[b[i]] --;\n\tfor (Int i = 1;i <= un;++ i){\n\t\tif (i < un) val[i] = tmp[i + 1] - tmp[i];\n\t\tsum[i] += sum[i - 1],ans += 1ll * Abs (sum[i]) * val[i];\n\t}\n\tsiz = ceil (sqrt (un));\n\tfor (Int i = 1;i <= un;++ i){\n\t\tbel[i] = (i - 1) / siz + 1,ord[i] = i;\n\t\tif (!col[bel[i]]) col[bel[i]] = i;\n\t\tcor[bel[i]] = i;\n\t}\n\tfor (Int i = 1;i <= bel[un];++ i) rebuild (i);\n}\n\nvoid ins (int x){\n\tfor (Int i = x;i <= cor[bel[x]];++ i){\n\t\tans += 1ll * val[i] * (sum[i] + tag[bel[x]] >= 0 ? 1 : -1);//\u6ce8\u610f\uff1a\u4e09\u76ee\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u6bd4\u52a0\u51cf\u4e58\u9664\u4f4e \n\t\tsum[i] ++;\n\t}\n\trebuild (bel[x]);\n\tfor (Int i = bel[x] + 1;i <= bel[un];++ i){\n\t\tint l = col[i],r = cor[i],res = -1;\n\t\twhile (l <= r){\n\t\t\tint mid = (l + r) >> 1;\n\t\t\tif (sum[ord[mid]] + tag[i] >= 0) res = mid,r = mid - 1;\n\t\t\telse l = mid + 1;\n\t\t}\n\t\tif (res == -1) ans -= sval[cor[i]];\n\t\telse if (res == col[i]) ans += sval[cor[i]];\n\t\telse{\n\t\t\tans -= sval[res - 1];\n\t\t\tans += sval[cor[i]] - sval[res - 1];\n\t\t}\n\t\ttag[i] ++;\n\t}\n}\n\nvoid del (int x){\n\tfor (Int i = x;i <= cor[bel[x]];++ i){\n\t\tans += 1ll * val[i] * (sum[i] + tag[bel[x]] <= 0 ? 1 : -1);//\u6ce8\u610f\uff1a\u4e09\u76ee\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u6bd4\u52a0\u51cf\u4e58\u9664\u4f4e \n\t\tsum[i] --;\n\t}\n\trebuild (bel[x]);\n\tfor (Int i = bel[x] + 1;i <= bel[un];++ i){\n\t\tint l = col[i],r = cor[i],res = -1;\n\t\twhile (l <= r){\n\t\t\tint mid = (l + r) >> 1;\n\t\t\tif (sum[ord[mid]] + tag[i] <= 0) res = mid,l = mid + 1;\n\t\t\telse r = mid - 1;\n\t\t}\n\t\tif (res == -1) ans -= sval[cor[i]];\n\t\telse if (res == cor[i]) ans += sval[cor[i]];\n\t\telse{\n\t\t\tans += sval[res];\n\t\t\tans -= sval[cor[i]] - sval[res];\n\t\t}\n\t\ttag[i] --;\n\t}\n}\n\nsigned main(){\n\tread (n);\n\tfor (Int i = 1;i <= n;++ i) read (a[i]),tmp[++ un] = a[i];\n\tfor (Int i = 1;i <= n;++ i) read (b[i]),tmp[++ un] = b[i];\n\tread (m);for (Int i = 1;i <= m;++ i) read (q[i].x,q[i].y),tmp[++ un] = q[i].y;\n\tsort (tmp + 1,tmp + un + 1),un = unique (tmp + 1,tmp + un + 1) - tmp - 1;\n\tfor (Int i = 1;i <= n;++ i) a[i] = lower_bound (tmp + 1,tmp + un + 1,a[i]) - tmp,b[i] = lower_bound (tmp + 1,tmp + un + 1,b[i]) - tmp;\n\tfor (Int i = 1;i <= m;++ i) q[i].y = lower_bound (tmp + 1,tmp + un + 1,q[i].y) - tmp;\n\tinit (),write (ans),putchar ('\\n');\n\tfor (Int i = 1,x,y;i <= m;++ i){\n\t\tx = q[i].x,y = q[i].y;\n\t\tdel (a[x]),ins (a[x] = y);\n\t\twrite (ans),putchar ('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1595571881,
        "uid": 124781,
        "name": "Walking_Dead",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3992 \u3010[BJOI2017]\u5f00\u8f66\u3011"
    },
    {
        "content": "# \u9898\u9762\n\n\u6709 $n$ \u8f86\u8f66\uff0c\u5206\u522b\u5728 $a_1, a_2, \\ldots , a_n$ \u4f4d\u7f6e\u548c $n$ \u4e2a\u52a0\u6cb9\u7ad9\uff0c\u5206\u522b\u5728 $b_1, b_2, \\ldots ,b_n$ \u4f4d\u7f6e\u3002\n\n\u6bcf\u4e2a\u52a0\u6cb9\u7ad9\u53ea\u80fd\u652f\u6301\u4e00\u8f86\u8f66\u7684\u52a0\u6cb9\uff0c\u6240\u4ee5\u4f60\u8981\u628a\u8fd9\u4e9b\u8f66\u5f00\u5230\u4e0d\u540c\u7684\u52a0\u6cb9\u7ad9\u52a0\u6cb9\u3002\u4e00\u4e2a\u8f66\u4ece $x$ \u4f4d\u7f6e\u5f00\u5230 $y$ \u4f4d\u7f6e\u7684\u4ee3\u4ef7\u4e3a $|x-y|$\uff0c\u95ee\u5982\u4f55\u5b89\u6392\u8f66\u8f86\uff0c\u4f7f\u5f97\u4ee3\u4ef7\u4e4b\u548c\u6700\u5c0f\u3002\n\n\u540c\u65f6\u4f60\u6709 $q$ \u4e2a\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4f1a\u4fee\u6539\u7b2c $i$ \u8f86\u8f66\u7684\u4f4d\u7f6e\u5230 $x$\uff0c\u4f60\u8981\u56de\u7b54\u6bcf\u6b21\u4fee\u6539\u64cd\u4f5c\u4e4b\u540e\u6700\u4f18\u5b89\u6392\u65b9\u6848\u7684\u603b\u4ee3\u4ef7\u3002\n\n\n\n\u6240\u6709\u7684\u8f66\u548c\u52a0\u6cb9\u7ad9\u7684\u8303\u56f4\u4e00\u76f4\u5728 $0$ \u5230 $10^9$ \u4e4b\u95f4\u3002\n\n$1\\leq n\\leq 5\\times 10^4$\uff0c$0\\leq q\\leq 5\\times 10^4$\u3002\n\n# Solution\n\u5148\u8003\u8651\u6734\u7d20\u7b97\u6cd5\uff0c\u5728\u8fdb\u884c\u64cd\u4f5c\u4e4b\u524d\uff0c\u8fdb\u884c\u7b80\u5355\u7684\u8d2a\u5fc3\u53ef\u77e5\uff0c\u5c06\u5e8f\u5217 $a,b$ \u5206\u522b\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u4e00\u4e00\u5bf9\u5e94\uff0c\u4f8b\u5982 $a_1$ \u5bf9\u5e94 $b_1$\uff0c$a_n$ \u5bf9\u5e94 $b_n$\u3002\u5728\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u64cd\u4f5c\u5b8c\u540e\u7684\u5e8f\u5217\u4e5f\u5e94\u8be5\u4e3a\u4e00\u4e00\u5bf9\u5e94\u7684\u6709\u5e8f\u5e8f\u5217\u3002\n\n\u7ed9\u51fa\u7b80\u5355\u8bc1\u660e\uff1a\u8bbe\u6709\u8f66 $a,b$ \u6709\u6cb9\u7ad9 $x,y$ \u4e8e\u6570\u8f74\u4e0a\uff0c\u82e5 $a$ \u5bf9\u5e94 $x$ \uff0c$b$ \u5bf9\u5e94 $y$\uff0c\u4ee4\u5176\u5bf9\u5e94\u5173\u7cfb\u4ea4\u6362\uff0c\u7b80\u5355\u679a\u4e3e\uff1a\n\n- $x,y$ \u5168\u5728 $a,b$ \u4e4b\u5185\u6216\u4e4b\u5916\uff0c\u603b\u82b1\u8d39\u589e\u52a0 $\\lvert x-y \\rvert$\n- $x,y$ \u4e00\u4e2a\u5728 $a,b$ \u4e4b\u5185\uff0c\u53e6\u4e00\u4e2a\u5219\u5426\uff0c\u5f62\u5982 $x\\le a\\le y\\le b$\uff0c\u82b1\u8d39\u589e\u52a0 $\\lvert a-y \\rvert$\n\n\u6545\u9898\u76ee\u521d\u6b65\u8f6c\u5316\u4e3a\u6709\u5e8f\u6570\u5217 $a,b$ \u4e2d\uff0c\u6c42 $\\sum_{i=1}^{n} \\lvert a[i]-b[i] \\rvert$\u3002\n\n\u8003\u8651\u6bcf\u4e00\u6b65\u64cd\u4f5c\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u8bbe\u64cd\u4f5c\u6570\u5b57\u5728\u6709\u5e8f\u6570\u5217\u7684\u4e0b\u6807\u4e3a $x$\uff0c\u76ee\u6807\u4e0b\u6807\u4e3a $y$\uff0c\u4ee4 $x<y$\uff0c\u5219\u533a\u95f4 $[x,y)$ \u5185\u7684\u5bf9\u5e94\u5173\u7cfb\u5168\u90e8\u53f3\u79fb\u4e00\u4f4d\uff0c$a_y$ \u5bf9\u5e94\u4e0a $b_x$\uff0c\u7531\u4e8e\u6b64\u5bf9\u5e94\u5173\u7cfb\u643a\u5e26\u7edd\u5bf9\u503c\uff0c\u6545\u65e0\u6cd5\u76f4\u63a5\u6c42\u51fa\uff0c\u8003\u8651\u8f6c\u5316\u3002\n\n\u8f6c\u5316\u4e3a\u6c42\u4e00\u6761\u8def\u5f84\u7ecf\u8fc7\u591a\u5c11\u6b21\u7684\u95ee\u9898\uff0c\u8bbe\u8f66\u4e0e\u6cb9\u7ad9\u6240\u6709\u7684\u4e0b\u6807\u5728\u6570\u8f74\u4e0a\u4e3a $d_1\\dots d_n$ \uff0c\u7b80\u5355\u79bb\u6563\u5316\u3002\u4e5f\u5c31\u662f\u8bf4\u8bbe\u5f53\u524d\u9053\u8def\u5de6\u8fb9\u7684\u8f66\u4e3a $C_i$\uff0c\u5f53\u524d\u9053\u8def\u5de6\u8fb9\u7684\u6cb9\u7ad9\u4e3a $P_i$\uff0c\u76f8\u5f53\u4e8e\u505a\u524d\u7f00\u548c\uff0c\u9053\u8def\u957f\u5ea6\u4e3a $L_i$ ,\u7b2c $i$ \u6bb5\u9053\u8def\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $L_i\\times \\lvert (C_i-P_i) \\rvert $\uff0c\u5373\u8fd8\u6709 $\\lvert (C_i-P_i) \\rvert$ \u8f86\u5f85\u5339\u914d\u8f66\u8981\u7ecf\u8fc7\u8fd9\u6761\u9053\u8def\u5bfb\u627e\u5339\u914d\u3002\n\n\u4ee4 $Sum_i=\\lvert (C_i-P_i) \\rvert$ \uff0c\u6bcf\u4e00\u6b21\u64cd\u4f5c\u4ee4$a_i=y$\uff0c\u7b49\u540c\u4e8e\u79bb\u6563\u5316\u4e4b\u540e $Sum$ \u533a\u95f4 $[l,r]$ \u52a0\u4e00\u6216\u51cf\u4e00\uff0c\u539f\u56e0\u6613\u5f97\u3002\n\n\u8bb0\u7b2c $i$ \u4e2a\u5757\u957f\u5ea6\u4e3a$len_i$\uff0c\u8bb0\u7b2c $i$ \u6761\u8def\u5f84\u65f6 $Cnt_i=Sum_i\\times (d_{i+1}-d_i)$\uff0c\u8003\u8651\u6ca1\u6709\u533a\u95f4\u61d2\u6807\u8bb0\u65f6\uff1a$ans=\\sum_{j=1}^{len_i}Cnt_{i,j}$\uff0c\u7ecf\u8fc7\u601d\u8003\uff0c\u539f\u56e0\u4e3a\uff1a\u8ddd\u79bb\u5e38\u6570 $d$ \u5728\u6b64\u4e3a\u6b63\u6570\uff0c$Sum_i$ \u643a\u5e26\u7edd\u5bf9\u503c\uff0c\u6545\u6240\u5f97\u503c\u4e00\u5b9a\u4e3a\u6b63\u3002\n\n\u82e5\u542b\u6709\u533a\u95f4\u64cd\u4f5c\u6807\u8bb0 $add_i$\uff0c\u5219\u76f8\u5f53\u4e8e\u6709\u4e00\u90e8\u5206\u7684 $Sum_i$ \u64cd\u4f5c\u540e\u975e\u6b63\uff0c\u4f46\u6ce8\u610f\uff1a**\u6b64\u65f6\u7684 $Sum_i$ \u975e\u6b63\u5e76\u4e0d\u610f\u5473\u7740\u5176\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a\u8d1f\u6570\uff0c\u800c\u662f\u610f\u5473\u7740\u5176\u7684\u5728\u6570\u8f74\u4e0a\u7684\u65b9\u5411\u4e3a\u8d1f\u65b9\u5411\uff0c\u8be2\u95ee\u65f6\u8981\u679a\u4e3e\u6b63\u8d1f\u5206\u754c\u70b9\uff0c\u5e76\u5206\u522b\u6c42\u5e26\u7edd\u5bf9\u503c\u540e\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u8fdb\u884c\u6c42\u548c\u3002**\n\n\u7531\u4e8e\u64cd\u4f5c\u540e\u7684 $Sum_i$ \u975e\u6b63\uff0c\u9700\u8981\u63d0\u524d\u52a0\u4e00\u4e2a\u504f\u79fb\u91cf\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u9632\u6b62\u8bbf\u95ee\u5230\u4ee5\u8d1f\u6570\u4e3a\u4e0b\u6807\u7684\u6570\u7ec4\u3002\n\n## \u65f6\u7a7a\u590d\u6742\u5ea6\n\u6bcf\u4e00\u4e2a\u5757\u4e2d\uff0c\u8bb0\u5f55\u7684 $Sum_i$ \u4e3a\u8f66\u4e0e\u505c\u8f66\u573a\u7684\u5dee\u7684\u7edd\u5bf9\u503c\uff0c\u4e00\u4e2a\u5757\u5185\u6700\u591a\u6709 $\\sqrt N$ \u7684\u8f66\u4e0e\u505c\u8f66\u573a\uff0c\u6240\u4ee5\u4e00\u4e2a\u5757\u5185\u7684\u6876\u7684\u7a7a\u95f4\u662f\u4e0d\u8d85\u8fc7 $\\sqrt N$ \u7684\uff0c\u6545\u603b\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(N)$\u3002\n\n\u5728\u4e00\u4e2a\u8be2\u95ee\u4e2d\uff0c\u6211\u4eec\u66b4\u529b\u5904\u7406\u6563\u5757\uff0c\u5bf9\u4e8e\u6574\u5757\u643a\u5e26\u6563\u5757\u901a\u8fc7\u61d2\u6807\u8bb0\u52a0\u66b4\u529b\u5904\u7406\uff0c\u5bf9\u4e8e\u4e00\u6b21\u8be2\u95ee\uff0c\u6700\u591a\u4fee\u6539\u4e24\u4e2a\u5757\u7684\u5185\u5bb9\uff0c\u53c8\u56e0\u4e3a\u9884\u5904\u7406\u7684\u590d\u6742\u5ea6\u76f8\u5f53\u4e8e\u904d\u5386\u6bcf\u4e2a\u5143\u7d20\uff0c\u6545\u800c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(N\\sqrt N)$\u3002\n\n## Code \n\u53ef\u53c2\u8003\u9898\u89e3\u533a\u4ee3\u7801\uff0c\u8fd9\u91cc\u65e0\u9700\u591a\u8a00\u3002\n\n",
        "postTime": 1684153573,
        "uid": 225515,
        "name": "\u5929\u661f\u4e36",
        "ccfLevel": 0,
        "title": "[BJOI2017]\u5f00\u8f66"
    }
]