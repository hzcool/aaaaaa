[
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u5173\u4e8e\u4e8c\u53c9\u6811\u7684\u5165\u95e8\u9898\u3002\n\n\u8fd9\u9898\u4e3b\u8981\u8003\u5bdf\u4e8c\u53c9\u6811\u7684\u5b58\u50a8\u4ee5\u53ca\u4e8c\u53c9\u6811\u7684\u904d\u5386\u3002\n\n\u90a3\u4e48\u6211\u5c31\u6765\u5206\u8fd9\u4e24\u90e8\u5206\u6765\u8bb2\u3002\n\n## $Part$ $1$ \u5b58\u50a8\n\n\u8003\u8651\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u5b58\u50a8\uff1a\n\n```cpp\nstruct node {\n    int left, right;\n};\nnode tree[MAXN];\n```\n\n\u5176\u4e2d\uff0c`left`\u548c`right`\u5206\u522b\u4ee3\u8868\u8282\u70b9\u7684\u5de6\u8282\u70b9\u7f16\u53f7\u548c\u53f3\u8282\u70b9\u7f16\u53f7\u3002\n\n\u5f53\u8bfb\u5165\u65f6\uff0c\u5c31\u975e\u5e38\u65b9\u4fbf\u4e86\uff0c\u76f4\u63a5\u8bfb\u5165\u5373\u53ef\uff1a\n\n```cpp\n_for (i, 1, n) cin >> tree[i].left >> tree[i].right;\n```\n\n## $Part$ $2$ \u904d\u5386\n\n\u8fd9\u9053\u9898\u8981\u6211\u4eec\u6c42\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\uff0c\u5c31\u4e00\u5b9a\u8981\u904d\u5386\u8fd9\u68f5\u6811\u3002\n\n\u9996\u5148\u660e\u786e\u4e00\u70b9\u9898\u76ee\u4e2d\u672a\u63d0\u5230\u7684\uff0c\u7f16\u53f7\u4e3a$1$\u7684\u8282\u70b9\u662f\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4ece\u6839\u8282\u70b9\u51fa\u53d1\uff0c\u5148\u9012\u5f52\u904d\u5386\u8be5\u8282\u70b9\u7684\u5de6\u8282\u70b9\uff0c\u518d\u9012\u5f52\u904d\u5386\u8be5\u8282\u70b9\u7684\u53f3\u8282\u70b9\u3002\n\n\u5176\u4e2d\u8fd8\u8981\u8bb0\u5f55\u8be5\u8282\u70b9\u7684\u6df1\u5ea6\uff0c\u51fa\u53d1\u65f6\u6df1\u5ea6\u4e3a$1$\n\n```cpp\ndfs(tree[id].left, deep+1);\ndfs(tree[id].right, deep+1);\n```\n\n\u6bcf\u5230\u4e00\u4e2a\u8282\u70b9\u65f6\u66f4\u65b0\u4e00\u4e0b\u6df1\u5ea6\uff1a\n\n```cpp\nans = max(ans, deep);\n```\n\n\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\u65f6\uff0c\u5c31`return`\n\n```cpp\nif (id == 0) return ;\n```\n\n\u603b\u4f53\u4e0a\u5c31\u8fd9\u4e48\u591a\u5427\u3002\n\n\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u904d\u5386\u4e00\u6b21\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n)$\n\n$AC$ $Code$\n\n```cpp\n#include <iostream>\n#define _for(i, a, b) for (int i=(a); i<=(b); i++)\nusing namespace std;\n\nconst int MAXN = 1e6 + 10;\n\nstruct node {\n    int left, right;\n};\nnode tree[MAXN];//\u5b58\u50a8\u7ed3\u6784\u5b9a\u4e49\n\nint n, ans;\n\nvoid dfs(int id, int deep) {\n    if (id == 0) return ;//\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\u65f6\u8fd4\u56de\n    ans = max(ans, deep);//\u66f4\u65b0\u7b54\u6848\n    dfs(tree[id].left, deep+1);//\u5411\u5de6\u904d\u5386\n    dfs(tree[id].right, deep+1);//\u5411\u53f3\u904d\u5386\n}\n\nint main() {\n    cin >> n;\n    _for (i, 1, n) cin >> tree[i].left >> tree[i].right;//\u8bfb\u5165+\u5efa\u6811\n    dfs(1, 1);//\u4ece1\u53f7\u8282\u70b9\u51fa\u53d1\uff0c\u5f53\u524d\u6df1\u5ea6\u4e3a1\n    cout << ans << endl;//\u8f93\u51fa\u7b54\u6848\n    return 0;//\u5b8c\u7ed3\u6492\u82b1\uff01\n}\n\n```",
        "postTime": 1580913787,
        "uid": 88213,
        "name": "zhangyuhan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4913 \u3010\u3010\u6df1\u57fa16.\u4f8b3\u3011\u4e8c\u53c9\u6811\u6df1\u5ea6\u3011"
    },
    {
        "content": "\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u5373\u53ef\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\nusing namespace std;\nstruct node{\n\tint l,r;\n}a[1001000];//\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u8282\u70b9\nint Max=-1,n;\nvoid dfs(int root,int step){\n\tif(root==0) return;//\u5982\u679c\u8be5\u8282\u70b9\u4e3a0\uff08\u5373\u4e0a\u5b83\u7684\u7238\u7238\u6ca1\u6709\u8fd9\u4e2a\u513f\u5b50\uff09\uff0c\u8fd4\u56de\n\tMax=max(Max,step);//\u8bb0\u5f55\u6700\u5927\u503c\n\tdfs(a[root].l,step+1);//\u641c\u7d22\u5b83\u7684\u5de6\u513f\u5b50\n\tdfs(a[root].r,step+1);//\u641c\u7d22\u5b83\u7684\u53f3\u513f\u5b50\n}\nint main(){\n\tcin>>n;//\u8f93\u5165n\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i].l>>a[i].r;//\u8f93\u5165\u8be5\u8282\u70b9\u7684\u5de6\u8282\u70b9\u548c\u53f3\u8282\u70b9\n\t}\n\tdfs(1,1);//\u4ece1\u53f7\u8282\u70b9\uff0c\u6df1\u5ea6\u4e3a1\u5f00\u59cb\u641c\u7d22 \n\tcout<<Max;//\u8f93\u51fa\u6700\u5927\u503c\n\treturn 0;\n}\n```",
        "postTime": 1580828222,
        "uid": 247658,
        "name": "HsKr",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4913 \u3010\u3010\u6df1\u57fa16.\u4f8b3\u3011\u4e8c\u53c9\u6811\u6df1\u5ea6\u3011"
    },
    {
        "content": "### _2020/02/08_  \n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4913)  \n\u5bf9\u4e8e\u4e00\u4e2a\u8fde\u6811\u90fd\u6ca1**\u7cfb\u7edf**\u5b66\u8fc7\u7684\u849f\u84bb\uff08\u666e\u53ca-\u7684\u6c34\u5e73\uff09\uff0c\u5148\u8003\u8651\u4e0b\u600e\u4e48\u5b58\u8fd9\u68f5\u6811\u3002  \n#### \u7236\u4eb2\u8868\u793a\u6cd5\n\u5bf9\u4e8e\u6bcf\u4e2a\u975e\u6839\u8282\u70b9\uff0c\u53ea\u6709\u4e00\u4e2a\u524d\u9a71\u8282\u70b9\u3002\u7528 `father[i]` \u8868\u793a\u8282\u70b9 $i$ \u7684\u524d\u9a71\u8282\u70b9\u3002  \n\u56e0\u4e3a\u662f\u6309\u7167\u8282\u70b9\u987a\u5e8f\u8bfb\u5165\uff0c\u6240\u4ee5\u5b50\u8282\u70b9\u7684\u7236\u4eb2\u5c31\u662f\u5f53\u524d\u5faa\u73af\u53d8\u91cf\u3002  \n\uff08\u4f3c\u4e4e\u4e0d\u7528\u5173\u5fc3\u6839\u8282\u70b9\u662f\u54ea\u4e2a\uff09  \n\u7136\u540e\u6c42\u6df1\u5ea6\u3002  \n#### \u9012\u5f52\n\u5bf9\u4e8e\u8282\u70b9 $i$\uff0c\u5982\u679c\u6ca1\u6709\u524d\u9a71\u8282\u70b9\uff0c\u5b83\u7684\u6df1\u5ea6\u4e3a $1$\uff0c\u5426\u5219\u6df1\u5ea6\u4e3a\u5b83\u524d\u9a71\u8282\u70b9\u7684\u6df1\u5ea6\u52a0 $1$\u3002  \n\u518d\u52a0\u4e00\u4e2a\u8bb0\u5fc6\u5316\uff0c`depth[i]` \u5b58\u8282\u70b9 $i$ \u7684\u6df1\u5ea6\u3002\n#### \u8d34\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n, maxd=1;\t\t//maxd \u5b58\u6700\u5927\u6df1\u5ea6\uff0c\u521d\u59cb\u5316\u4e3a 1 \nint fa[100010];\t\t//\u5b58\u524d\u9a71\u8282\u70b9\nint depth[100010];\t//\u8bb0\u5fc6\u5316\n\nint work(int x){\t//\u9012\u5f52\u51fd\u6570\uff0c\u6c42\u8282\u70b9 x \u7684\u6df1\u5ea6\n\tif(depth[x]!=0)\t//\u5982\u679c\u5df2\u7ecf\u6c42\u51fa\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de\u8be5\u6df1\u5ea6\n\t\treturn depth[x] ;\n\tif(fa[x]==0)\n\t\treturn depth[x] = 1;\n        \t\t\t//\u6839\u8282\u70b9\u76f4\u63a5\u8fd4\u56de 1\n\telse\n\t\treturn depth[x] = 1 + work(fa[x]);\n        \t\t\t//\u975e\u6839\u8282\u70b9\u8fd4\u56de\u5b83\u7684\u524d\u9a71\u8282\u70b9\u7684\u6df1\u5ea6\u52a0 1\n}\n\nint main(){\n\tcin >> n ;\n\tfor(int i=1; i<=n; i++){\n\t\tint t1, t2;\n\t\tcin >> t1 >> t2 ;\n\t\tfa[t1] = i ;\n\t\tfa[t2] = i ;\n        \t\t\t//\u7236\u4eb2\u8868\u793a\u6cd5\u5b58\u6811\n\t}\n\tfa[0] = 0;\t\t//\u4f3c\u4e4e\u6ca1\u7528\n\tfor(int i=1; i<=n; i++)\n\t\tmaxd = max(maxd,work(i));\n        \t\t\t//\u5bfb\u627e\u6700\u5927\u6df1\u5ea6\n\tcout << maxd << endl;\n\treturn 0;\n}\n```\n### _2020/02/12_  \n\u513f\u5b50\u8868\u793a\u6cd5\u540c\u7406\uff0c\u5c31\u662f\u53d8\u6210\u4ece\u6839\u8282\u70b9\u627e\u5230\u53f6\u8282\u70b9\u3002  \n\u56e0\u4e3a\u67d0\u4e2a\u5e16\u5b50\uff0c\u6211\u53c8\u60f3\u5230\u4e86\u8fd9\u4e2a\u65b9\u6cd5\u3002  \n#### BFS\n\u904d\u5386\u4e00\u68f5\u6811\u3002\u628a\u6839\u8282\u70b9\uff08\u9898\u76ee\u6ca1\u8bf4\u6e05\uff0c\u5e94\u8be5\u662f $1$ \u53f7\u8282\u70b9\uff09\u52a0\u8fdb\u961f\u5217\uff0c\u9010\u6b65\u6269\u5c55\u65b0\u8282\u70b9\uff0c\u540c\u65f6\u8bb0\u5f55\u6df1\u5ea6\uff08\u65b0\u8282\u70b9\u6df1\u5ea6\u662f\u7236\u4eb2\u8282\u70b9\u6df1\u5ea6\u52a0\u4e00\uff09\u3002\u904d\u5386\u7ed3\u675f\u7684\u540c\u65f6\uff0c\u5c31\u80fd\u5f97\u5230\u6700\u5927\u6df1\u5ea6\u3002\n#### \u8d34\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nstruct nod{\t\t\t//\u513f\u5b50\u8868\u793a\u6cd5\u5b58\u6811\n\tint id, lc, rc, deep;\n}tree[100010]; \nnod que[100010];\t//BFS \u7528\u5230\u7684\u961f\u5217\nint head, tail;\nint n, depth;\n\nvoid bfs(){\n\thead=1, tail=2;\n\tque[head] = tree[1];\n\tque[head].id = 1;\n\tque[head].deep = 1;\n\tdepth = 1;\n\twhile(head<tail){\n\t\tnod nownod = que[head];\n\t\thead++;\n\t\tdepth = max(depth, nownod.deep);\n\t\tif(nownod.lc != 0){\n\t\t\tnod newnod = tree[nownod.lc] ;\n\t\t\tnewnod.id = nownod.lc ;\n\t\t\tnewnod.deep = nownod.deep + 1; \n\t\t\tque[tail++] = newnod;\n\t\t}\n\t\tif(nownod.rc != 0){\n\t\t\tnod newnod = tree[nownod.rc] ;\n\t\t\tnewnod.id = nownod.rc ;\n\t\t\tnewnod.deep = nownod.deep + 1;\n\t\t\tque[tail++] = newnod;\n\t\t}\n\t}\n}\n\nint main(){\n\tcin >> n ;\n\tfor(int i=1; i<=n; i++)\n\t\tcin >> tree[i].lc >> tree[i].rc ;\n\tbfs();\n\tcout << depth << endl;\n\treturn 0;\n}\n```\n\n#### \u540e\u8bb0\n_2020/02/08_\t\u5199\u5b8c\u3002\u4e5f\u8bb8\u4e0d\u662f\u771f\u6b63\u7684\u6811\uff0c~~\u4f46\u5b83\u662f\u771f\u6b63\u7684 AC~~\u3002  \n_2020/02/12_\t\u8865\u5145\u4e00\u4e0b BFS\u3002",
        "postTime": 1581150824,
        "uid": 222223,
        "name": "Lylighter_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4913 \u3010\u3010\u6df1\u57fa16.\u4f8b3\u3011\u4e8c\u53c9\u6811\u6df1\u5ea6\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6b63\u89e3\u662f\u957f\u94fe\u5256\u5206...\u4e0d\u597d\u610f\u601d\u8d70\u9519\u7247\u573a\u4e86\n\n\n\u8fd9\u9898\u6211\u5199\u7684\u662f\u4e00\u4e2a\u5947\u602a\u7684\u6811\u5f62dp\uff0c\u8bbedp[x]\u4e3ax\u548cx\u5b50\u6811\u7684\u6700\u5927\u6df1\u5ea6\n\n\u90a3\u4e48\u663e\u7136$dp[x]=max\\{dp[y]\\} ,y \\in son[x]$\n\n\u521d\u503c\uff1a$dp[x]=dep[x]$\n\n\u7136\u540e\u5c31\u6109\u5feb\u5730\u4ee5O(n)\u963f\u6389\u4e86\u6b64\u9898\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nvector<int> e[100005];\nint dep[100005],f[100005];\nvoid dfs(int x){\n\tint len=e[x].size();\n\tf[x]=dep[x];\n\tfor(int i=0;i<len;++i){\n\t\tdep[e[x][i]]=dep[x]+1;\n\t\tdfs(e[x][i]);\n\t\tf[x]=max(f[x],f[e[x][i]]);\n\t}\n}\nint main(){\n\tint n,x,y;\n\tcin>>n;\n\tfor(int i=1;i<=n;++i){\n\t\tcin>>x>>y;\n\t\tif(x!=0) e[i].push_back(x);\n\t\tif(y!=0) e[i].push_back(y);\n\t}\n\tdfs(1);\n\tcout<<f[1]+1;\n\treturn 0;\n}\n```\n",
        "postTime": 1580825911,
        "uid": 141978,
        "name": "exzang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4913 \u3010\u3010\u6df1\u57fa16.\u4f8b3\u3011\u4e8c\u53c9\u6811\u6df1\u5ea6\u3011"
    },
    {
        "content": "\u786e\u5b9a\u601d\u8def\uff1a\u8bb0\u5fc6\u5316\u641c\u7d22\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint son[10000010][3];//son[i][1]\u8868\u793ai\u7684\u5de6\u8282\u70b9,son[i][2]\u8868\u793ai\u7684\u53f3\u8282\u70b9\nint f[10000010];\nint ans=1;\nint dfs(int dep,int now)//dep\u8868\u793a\u73b0\u5728\u641c\u4e86\u591a\u5c11\u5c42\uff0cnow\u8868\u793a\u73b0\u5728\u5728\u51e0\u53f7\u8282\u70b9\n{\n\tif(f[now]!=0)return f[now];//\u5982\u679c\u641c\u8fc7\u4e86\u5c31\u76f4\u63a5return\n\tif(now==0)return 0;//\u6ca1\u67090\u53f7\u8282\u70b9\n\tif(son[now][1]!=0||son[now][2]!=0)//\u5982\u679c\u6709\u5b69\u5b50\n\t{\n\t\tf[now]=max(dfs(dep+1,son[now][1]),dfs(dep+1,son[now][2]));\n      //\u73b0\u5728\u6df1\u5ea6=max(\u5de6\u5b69\u5b50\u6df1\u5ea6\uff0c\u53f3\u5b69\u5b50\u6df1\u5ea6\uff09\n\t}else{//\u6ca1\u5b69\u5b50\n\t\tans=max(ans,dep);//\u8bb0\u5f55\u6700\u6df1\u5c42\u6570\n\t\treturn dep;\n\t}\n}\nint main()\n{\n\t//freopen(\"\u672a\u547d\u540d1.in\",\"r\",stdin);\n\t//freopen(\"\u672a\u547d\u540d1.out\",\"w\",stdout);\n\tint n;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\t\tson[i][1]=a;\n\t\t\tson[i][2]=b;\n\t\n\t}\n\tfor(int i=1;i<=n;i++)dfs(1,i);\n\tcout<<ans;\n\treturn 0;//\u8003\u573a\u52ff\u5fd8\n}\n```",
        "postTime": 1580865451,
        "uid": 125212,
        "name": "Skies",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4913 \u3010\u3010\u6df1\u57fa16.\u4f8b3\u3011\u4e8c\u53c9\u6811\u6df1\u5ea6\u3011"
    }
]