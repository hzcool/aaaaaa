[
    {
        "content": "\u4e00\u9053\u7b80\u5355\u7684\u88f8BFS\u554a~\uff08\u8c8c\u4f3c\u6bd4I\u8981\u7b80\u5355\uff1f\u597d\u5427I\u6211\u8fd8\u6ca1\u505a\uff09\n\n\u5982\u679c\u6ca1\u6709\u836f\u6c34\u8fd9\u4e2a\u9650\u5236\u5c31\u662f\u88f8\u7684BFS\u8d70\u8ff7\u5bab\uff0c\u5f53\u7136\u5904\u7406\u836f\u6c34\u4e5f\u5f88\u7b80\u5355\u3002\n\n\u539f\u5148\u8d70\u8ff7\u5bab\u9700\u8981\u7528\u4e00\u4e2a\u6570\u7ec4step[x][y]\u6765\u8bb0\u5f55\u5230(x,y)\u7684\u6700\u5c11\u6b65\u6570\uff0c\u8fd9\u91cc\u53ea\u9700\u8981\u518d\u6dfb\u52a0\u4e00\u7ef4\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6211\u4eec\u7528step[x][y][0]\u8868\u793a\u8d70\u5230(x,y)\u4e14\u6ca1\u6709\u559d\u836f\u7684\u6700\u5c11\u6b65\u6570\uff0c\u7528step[x][y][1]\u8868\u793a\u8d70\u5230(x,y)\u4e14\u5df2\u7ecf\u559d\u836f\u7684\u6700\u5c0f\u6b65\u6570\u3002\n\n\u56e0\u4e3a\u6839\u636e\u9898\u76ee\u8981\u6c42\uff0c\u603b\u5171\u53ea\u80fd\u559d\u4e00\u6b21\u836f\uff0c\u6240\u4ee5\u7b80\u5355\u5904\u7406\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u5177\u4f53\u8fc7\u7a0b\u5982\u4e0b\uff1a\n\n\u904d\u5386\u5230\u4e00\u4e2a\u70b9\uff08\u7b80\u79f0\u904d\u5386\u70b9\uff09\uff0c\u679a\u4e3e\u4e0a\u4e0b\u5de6\u53f3\u7684\u70b9\uff08\u7b80\u79f0\u5230\u8fbe\u70b9\uff09\uff0c\u5982\u679c\u5230\u8fbe\u70b9\u53ef\u884c\uff0c\u5148\u628a\u5230\u8fbe\u70b9\u6309\u8d70\u8ff7\u5bab\u7684\u65b9\u5f0f\u5904\u7406\u4e86\uff0c\u7136\u540e\u770b\u904d\u5386\u70b9\u72b6\u6001\u662f\u5426\u5403\u836f\uff0c\u5982\u679c\u672a\u5403\u836f\u5219\u518d\u5904\u7406\u5230\u8fbe\u70b9\u5403\u836f\u53ef\u8f6c\u79fb\u7684\u70b9\uff0c\u5f53\u7136\u8981\u6ce8\u610f\u7b2c\u4e09\u7ef4\u7684\u53d8\u5316\u3002\n\n\u7531\u4e8e\u8fc7\u7a0b\u5df2\u7ecf\u53d9\u8ff0\u8fc7\u4e86\u6545\u7a0b\u5e8f\u5c31\u4e0d\u518d\u6ce8\u91ca\u3002\u5efa\u8bae\u5148\u6839\u636e\u4e0a\u8ff0\u601d\u8def\u81ea\u5df1\u5199\u5199\u4ee3\u7801\u54e6\uff01\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nconst int N=1005;\nint h,w,d,r,st[N][N][2];\nchar s[N][N];\nstruct Point\n{\n    int x,y,u;\n};\nqueue<Point> Q;\nint dx[4]={0,0,1,-1},dy[4]={1,-1,0,0};\nbool check(int x, int y)\n{\n    return x>=1&&y>=1&&x<=h&&y<=w&&s[x][y]=='.';\n}\nint main()\n{\n    scanf(\"%d%d%d%d\",&h,&w,&d,&r);\n    for(int i=1;i<=h;i++)\n        scanf(\"%s\",s[i]+1);\n    memset(st,-1,sizeof(st));\n    st[1][1][0]=0;\n    Q.push((Point){1,1,0});\n    while(!Q.empty()&&st[h][w][0]==-1&&st[h][w][1]==-1)\n    {\n        Point f=Q.front();\n        Q.pop();\n        for(int i=0;i<4;i++)\n        {\n            int x=dx[i]+f.x,y=dy[i]+f.y;\n            if(check(x,y)&&st[x][y][f.u]==-1)\n            {\n                Q.push((Point){x,y,f.u});\n                st[x][y][f.u]=st[f.x][f.y][f.u]+1;\n                if(f.u==0&&check(x+d,y+r)&&st[x+d][y+r][1]==-1)\n                {\n                    Q.push((Point){x+d,y+r,1});\n                    st[x+d][y+r][1]=st[x][y][0]+1;\n                }\n            }\n        }\n    }\n    if(st[h][w][0]==-1&&st[h][w][1]==-1) puts(\"-1\");\n    else \n    printf(\"%d\",min(st[h][w][0]==-1?1<<30:st[h][w][0],\n                    st[h][w][1]==-1?1<<30:st[h][w][1])); //\u5947\u8469\u7684\u5199\u6cd5\uff0c\u4e0d\u5efa\u8bae\u6548\u4effQWQ\n}\n```\nPS\u5f53\u65f6\u6bd4\u8d5b\u6ca1\u65f6\u95f4\u5199\u9898\u554a \u8981\u5199\u4f5c\u4e1aQAQ\n",
        "postTime": 1500391681,
        "uid": 9757,
        "name": "x_faraway_x",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3818 \u3010\u5c0fA\u548cuim\u4e4b\u5927\u9003\u79bb II\u3011"
    },
    {
        "content": "```cpp\n//\u9605\u8bfb\u9898\u76ee\u540e\uff0c\u9996\u5148\u660e\u786e\u836f\u7684\u4f5c\u7528\n//\u4e0d\u559d\u836f\u5c31\u80fd\u8d70\u5230\u7ec8\u70b9\uff0c\u836f\u7684\u4f5c\u7528\u5c31\u662f\u7f29\u77ed\u8ddd\u79bb\n//\u5982\u679c\u4e0d\u559d\u836f\u5230\u4e0d\u4e86\u7ec8\u70b9\uff0c\u90a3\u4e48\u8981\u5c31\u5fc5\u987b\u7528\u6765\u7a7f\u5899\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<cstdlib>\n#include<algorithm>\n#include<iomanip>\n#include<map>\n#include<queue>\n#include<set>\n#define LL long long\nint dx[]={0,0,1,0,-1};\nint dy[]={0,1,0,-1,0};\nbool ma[1010][1010],past0[1010][1010],past1[1010][1010];\nint n,m,sx,sy;\nchar s;\nusing namespace std;\nstruct node\n{\n    int x,y,step,f;\n}q[1000010],cur,nxt;\nvoid bfs1()//\u641c\u7d22\u51fa\u4e0d\u7528\u559d\u836f\u80fd\u5230\u8fbe\u7684\u5730\u65b9 \n{\n    q[0].x=1;q[0].y=1;\n    past0[1][1]=1;\n    int head=0,tail=1;\n    while(head<tail)\n    {\n        cur=q[head++];\n        for(int i=1;i<=4;i++)\n        {\n            nxt.x=cur.x+dx[i];\n            nxt.y=cur.y+dy[i];\n            if(nxt.x>=1&&nxt.x<=n&&nxt.y>=1&&nxt.y<=m&&!ma[nxt.x][nxt.y]&&!past0[nxt.x][nxt.y])\n            {\n                past0[nxt.x][nxt.y]=1;\n                q[tail++]=nxt;\n            }\n        }\n    }\n}\nvoid bfs()\n{\n    memset(q,0,sizeof(q));\n    q[0].x=1;q[0].y=1;q[0].step=0;q[0].f=0;\n    past1[1][1]=1;\n    int head=0,tail=1;\n    while(head<tail)\n    {\n        cur=q[head++];\n        if(cur.x==n&&cur.y==m)\n        {\n            cout<<cur.step;\n            return;\n        }\n        for(int i=0;i<=4;i++)\n        {\n            nxt.f=cur.f;\n            if(i==0)\n            {\n                if(!nxt.f)//\u6ca1\u559d\u8fc7\u836f\n                {\n                    nxt.x=cur.x+dx[0];\n                    nxt.y=cur.y+dy[0];\n                    if(!past0[n][m])//\u4e0d\u559d\u836f\u4e0d\u80fd\u8d70\u5230\u7ec8\u70b9\n                    {\n                        if(past0[nxt.x][nxt.y])\n                                       //\u559d\u836f\u4e4b\u540e,\u518d\u8d70\u5230\u4e0d\u559d\u836f\u80fd\u8d70\u5230\u7684\u5730\u65b9,\u559d\u836f\u5c31\u6ca1\u6709\u610f\u4e49\n                    continue;//\u7565\u8fc7\u8fd9\u79cd\u60c5\u51b5\n                    }\n                }\n                else continue;\n            }\n            else\n            {\n                nxt.x=cur.x+dx[i];\n                nxt.y=cur.y+dy[i];\n            }\n            if(nxt.x>=1&&nxt.x<=n&&nxt.y>=1&&nxt.y<=m&&!ma[nxt.x][nxt.y]&&!past1[nxt.x][nxt.y])\n            {\n                if(i==0)nxt.f=1;//\u672c\u6b21\u559d\u836f,\u6807\u8bb0\u4e3a\u4f7f\u7528\n                past1[nxt.x][nxt.y]=1;//\u6807\u8bb0\u4e3a\u8d70\u8fc7\n                nxt.step=cur.step+1;//\u6b65\u6570+1\n                q[tail++]=nxt;\n            }\n        }\n    }\n    cout<<-1;\n}\nint main()\n{\n    cin>>n>>m>>sx>>sy;\n    for(int i=1;i<=n;i++)\n    for(int j=0;j<=m;j++)\n    {\n        scanf(\"%c\",&s);\n        if(s=='.')ma[i][j]=0;\n        else ma[i][j]=1;\n    }\n    dx[0]=sx;dy[0]=sy;\n    bfs1();\n    bfs();\n    return 0;\n}\n\n```",
        "postTime": 1500862494,
        "uid": 18386,
        "name": "zpf_13516358919",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3818 \u3010\u5c0fA\u548cuim\u4e4b\u5927\u9003\u79bb II\u3011"
    },
    {
        "content": "\u6570\u636e\u8303\u56f4\u9898\u76ee\u4e2d\u662f<=1000\uff0c\u5f001010\u7b2c\u4e8c\u70b9\u4f1are\uff0c\u76f4\u63a5\u5f002010\uff0cAC\n\n\u4ee3\u7801\u5e76\u4e0d\u96be\uff0c\u5c31\u662f\u5224\u91cd\u5c31\u597d\uff0cvis\u524d\u4e24\u7ef4\u8bb0\u5f55\u5750\u6807\uff0c\u7b2c\u4e09\u7ef4\u8bb0\u5f55\u662f\u5426\u7528\u8fc7\u836f\u6c34\uff0c\u7136\u540ebfs\u5373\u53ef\uff0c\u6ce8\u610f\u5224\u91cd\u3002\n\n\u6ce8\u610f\u5982\u679c\u4e00\u4e2a\u70b9\u7528\u8fc7\u4e86\u836f\u6c34\uff0c\u5219\u4ed6\u6240\u6709\u53ef\u4ee5\u6269\u5c55\u7684\u70b9\u7684\u72b6\u6001\u90fd\u662f\u559d\u8fc7\u7684\uff0c\u5c31\u662fflag=1\uff0c\u4e0d\u80fd\u518d\u7528\u836f\u6c34\u4e86\uff0c\u4e0d\u7528\u518d\u641c\u3002\n\n\u8fd9\u4e2a\u70b9\u6ca1\u7528\u8fc7\u7684\u8bdd\uff0c\u5b83\u6269\u5c55\u7684\u70b9\u7684\u65e2\u6709\u4e0d\u7528\u7684\uff08\u4e0a\u4e0b\u5de6\u53f3\uff09\uff0c\u4e5f\u6709\u7528\u836f\u6c34\u7684\uff0c\u90fd\u8981\u5165\u961f\u3002\n\n\n\n\n    \n```cpp\n#include<cstdio>\n#include<queue>\n#include<iostream>\nusing namespace std;\nconst int MAXN = 2010;\nstruct node{\n    int x,y,step;\n    int flag;\n}cur,nxt;\nint dx[6] = {0,0,1,-1};\nint dy[6] = {1,-1,0,0};\nchar mp[MAXN][MAXN];\nbool v[MAXN][MAXN][2];\nint n,m,ax,ay,f;\nqueue<node>q;\nvoid bfs()\n{\n    cur.flag = 0;cur.step = 0;\n    cur.x = 1;cur.y = 1;\n    q.push(cur);\n    v[1][1][0] = true;\n    while (!q.empty())\n    {\n        cur = q.front();\n        q.pop();\n        if (cur.flag == 1) f = 1;\n        else f = 0;\n        for (int i=0; i<4; ++i)\n        {\n            int xx = dx[i]+cur.x;\n            int yy = dy[i]+cur.y;\n            if (xx>0&&xx<=n&&yy>0&&yy<=m&&mp[xx][yy]!='#'&&!v[xx][yy][f])    //\u662f\u5426\u51fa\u754c \n            {\n                if (xx==n&&yy==m)\n                {\n                    printf(\"%d\",cur.step+1);\n                    return ;\n                }\n                v[xx][yy][f] = true;\n                nxt.flag = f;nxt.step = cur.step+1;\n                nxt.x = xx;nxt.y = yy;\n                q.push(nxt);\n            }\n        }\n        int xx = cur.x+dx[4], yy = cur.y+dy[4];\n        if (f==0&&!v[xx][yy][1]&&xx>0&&xx<=n&&yy>0&&yy<=m&&mp[xx][yy]!='#')\n        {\n            if (xx==n&&yy==m)\n            {\n                printf(\"%d\",cur.step+1);\n                return ;\n            }\n            v[xx][yy][1] = true;\n            nxt.flag = 1;nxt.step = cur.step+1;\n            nxt.x = xx;nxt.y = yy;\n            q.push(nxt);\n        }\n    }\n    printf(\"-1\");    \n}\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&m,&dx[4],&dy[4]);\n    for (int i=1; i<=n; ++i)\n        for (int j=1; j<=m; ++j)\n            cin>>mp[i][j];\n    bfs();\n    return 0;\n}\n```",
        "postTime": 1498981471,
        "uid": 39828,
        "name": "amstar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3818 \u3010\u5c0fA\u548cuim\u4e4b\u5927\u9003\u79bb II\u3011"
    },
    {
        "content": " \u9898\u89e3 P3818 \u3010\u5c0fA\u548cuim\u4e4b\u5927\u9003\u79bb II\u3011\n \u4e0d\u8981\u5f80\u4e0b\u7ffb\u4e86 \u8fd9\u662f\u4f60\u7684\u9009\u62e9\n \u56de\u5f52\u6b63\u9898\uff0c\u8fd9\u663e\u7136\u662f\u4e00\u9053bfs~~\u88f8\u9898~~\uff0c\u53ef\u662f\u849f\u84bb\u6253\u4e863\u5929\n\u6211\u7684\u89e3\u6cd5\u53ef\u80fd\u548c\u5176\u4ed6dalao\u4e0d\u4e00\u6837\uff0c\u4e0d\u8981\u4f8b\u5916\u3002\u53ea\u6709~~120\u884c~~\uff08\u6ee1\u5206\u5416\u5416\u554a\uff09\n\n \u9996\u5148\u660e\u786e\u4e00\u70b9\uff1a\uff1aif\u55d1\u836f\u90a3\u4e48\u80fd\u5230\uff08n\uff0cm\uff09\u5c31\u52a0\u901f\uff0c\u5426\u5219\u7a7f\u5899\n------------------------------\u4e0d\u600e\u534e\u4e3d\u7684\u5206\u5272\u7ebf----------------------------\n\n\u6211\u4eec\u9700\u89813\u4e2abfs\uff08bfs\uff0cbfs1\uff0cbfs2\uff09\u5206\u522b\u8bb0\u5f55\uff081,1\uff09\u53ef\u4ee5\u6269\u5c55\u7684\u70b9\uff0c\u52a0\u901f\uff0c\u7a7f\u5899\u3002\n\n 1.\u7b2c\u4e00\u4e2abfs\u5c31\u662f\u4e00\u4e2abfs\u677f\u5b50\uff0c\u9047\u5230\u5899\u5c31\u9000\u56de\u5e76\u7528vis1\u8bb0\u5f55\uff0c\u6b65\u6570\u7528num1\u8bb0\u5f55\n\n \u8bb0\u5f55\u540e\u6211\u4eec\u518d\u5206\u60c5\u51b5\u8ba8\u8bba\u5982\u679cvis1[n][m]==1\u90a3\u4e48\u5c31\u52a0\u901f\uff0c\u5426\u5219\u7a7f\u5899\n\n 2.\u52a0\u901f\uff0c\u4ece\uff08n,m\uff09\u6269\u5c55\uff0c\u7528ans\u8bb0\u5f55\u6700\u5c0f\u503c\uff0c\u4e14ans\u7684\u521d\u503c\u4e3anum1[n][m]\uff08\u4e0d\u52a0\u901f\u7684\u6700\u5927\u503c\uff09\u53ef\u662f\u4e3a\u4ec0\u4e48\u4e0d\u662f0x7fffffff%\u2026\u2026* -----\u5047\u5982\u55d1\u836f\u503c\u4e3a-1\uff0c-1\uff0c\u90a3\u4e48\u55d1\u836f\u6bd4\u4e0d\u55d1\u836f\u8fd8\u6162\uff0cans\u5c31\u4e0d\u66f4\u65b0\u4e86\uff0c\u540c\u65f6\uff0c\u4e0d\u80fd\u8f93\u51fa-1\uff0c\u56e0\u4e3a\u51b3\u5b9a\u7531\u4e00\u4e2a\u89e3\n 3.\u540c\u7406\uff0c\u5c31\u662f\u6709\u51e0\u4e2a\u7ec6\u8282\uff0cans\u7684\u521d\u503c\u4e3a0x7fffffff\uff0c\u5982\u679cans\u7684\u503c\u6ca1\u6709\u6539\u53d8\uff0c\u5c31\u8f93\u51fa-1\n\n \u53ef\u662f\u95ee\u9898\u6765\u4e86\uff0c\u600e\u4e48\u66f4\u65b0ans\u7684\u503c\n \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5b9a\u4e49vis2\u548cnum2\uff0c\u55d1\u836f\u65f6\u5148\u5224\u65ad\u80fd\u4e0d\u80fd\u5230\uff081,1\uff09\u6269\u5c55\u7684\u70b9\uff0c\u82e5\u679c\u80fd\u66f4\u65b0\n \u90a3\u4e48vis2,num2\u6709\u4ec0\u4e48\u7528\u5462\uff1f\uff1f\uff1fqwq\u5148\u6765\u770b\u66f4\u65b0\u5f0f\nans=min(ans,num1[h.x-s1][h.y-s2]+1+num2[h.x][h.y]);(h.x,h.y\u4e3a\u73b0\u5728\u7684\u70b9\uff0c+1\u662f\u55d1\u836f\u4e5f\u8981\u6d88\u8017\u6b65\u6570\uff09\n \u518d\u6765\u89e3\u91ca\u4e00\u4e0b\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u4ece\uff08n\uff0cm\uff09\u5f00\u59cb\u6269\u5c55\u7684\u6240\u4ee5\u8981-s1\uff0c-s2.\u53c8\u56e0\u4e3a\u8fd9\u4e2a\u5f0f\u5b50\u662f\u5728vis1[h.x-s1][h.y-s2](1,1\u6269\u5c55\u7684\u70b9\uff09\u5efa\u7acb\u7684\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728num1\u7684\u503c\uff0cnum1[h.x-s1][h.y-s2]\u55d1\u836f\u540e\u7684\u70b9\u7684\u6b65\u6570\uff081,1\u5f00\u59cb\u7684\uff09\uff0c\u548c\u5230\u55d1\u836f\u7684\u8fd9\u4e2a\u70b9\u7684\u6b65\u6570\uff08n,m\u5f00\u59cb\u7684\uff09+1\n \u4e0a\u4ee3\u7801\n```\n#include<iostream>//\u7b2c\u4e00\u6b21\u5199\u7801\u98ce---wfz' \n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<string>\n#include<queue>\nusing namespace std;\nstruct node{\n\tint x;\n\tint y;\n};\nint dx[5]={0,1,-1,0,0};\nint dy[5]={0,0,0,1,-1};\nint n,m,s1,s2;\nint g[1010][1010],vis1[1010][1010],vis2[1010][1010],num1[1010][1010],num2[1010][1010];\nbool torf;\nvoid bfs()\n{\n\tqueue<node> q;\n\tnode h,o;\n\tvis1[1][1]=1;\n\th.x=1;\n\th.y=1;\n\tq.push(h);\n\twhile(!q.empty()){\n\t\th=q.front();\n\t\tq.pop();\n\t\tfor(int i=1;i<=4;i++){\n\t\t\tint u=h.x+dx[i];\n\t\t\tint v=h.y+dy[i];\n\t\t\tif(u<1||u>n||v<1||v>m||vis1[u][v]==1||g[u][v]==1) continue;\n\t\t\tvis1[u][v]=1;\n\t\t\to.x=u;\n\t\t\to.y=v;\n\t\t\tnum1[u][v]=num1[h.x][h.y]+1;\n\t\t\tq.push(o);\n\t\t}\n\t}\t\n}\nvoid bfs1(){\n\tqueue<node> q;\n\tnode h,o;\n\tvis2[n][m]=1;\n\th.x=n;\n\th.y=m;\n\tint ans=num1[n][m];\n\tq.push(h);\n\twhile(!q.empty()){\n\t\th=q.front();\n\t\tq.pop(); \n\t\tif(h.x-s1>=1&&h.x-s1<=n&&h.y-s2>=1&&h.y-s2<=m&&vis1[h.x-s1][h.y-s2]==1){\n\t\t\tans=min(ans,num1[h.x-s1][h.y-s2]+1+num2[h.x][h.y]);\n\t\t\t//cout<<h.x<<\" \"<<h.y<<endl;\n\t\t} \n\t\tfor(int i=1;i<=4;i++){\n\t\tint u=h.x+dx[i];\n\t\tint v=h.y+dy[i];\n\t\tif(u<1||u>n||v<1||v>m||vis2[u][v]==1||g[u][v]==1) continue;\n\t\t    vis2[u][v]=1;\n\t\t\to.x=u;\n\t\t\to.y=v;\n\t\t\tnum2[u][v]=num2[h.x][h.y]+1;\n\t\t\tq.push(o);\n\t}\n}\ncout<<ans;\n}\nvoid bfs2(){\n\tqueue<node> q;\n\tnode h,o;\n\tvis2[n][m]=1;\n\th.x=n;\n\th.y=m;\n\tint ans=0x7fffffff; \n\tq.push(h);\n\twhile(!q.empty()){\n\t\th=q.front();\n\t\tq.pop();\n\t\tif(h.x-s1>=1&&h.x-s1<=n&&h.y-s2>=1&&h.y-s2<=m&&vis1[h.x-s1][h.y-s2]==1)\n\t\t{\n\t\t\tans=min(ans,num1[h.x-s1][h.y-s2]+1+num2[h.x][h.y]);\n\t\t}\n\t\tfor(int i=1;i<=4;i++){\n\t\tint u=h.x+dx[i];\n\t\tint v=h.y+dy[i];\n\t\tif(u<1||u>n||v<1||v>m||vis2[u][v]==1||g[u][v]==1) continue;\n\t\t    vis2[u][v]=1;\n\t\t\to.x=u;\n\t\t\to.y=v;\n\t\t\tnum2[u][v]=num2[h.x][h.y]+1;\n\t\t\tq.push(o);\n\t}\n}\nif(ans!=0x7fffffff){\n\tcout<<ans;\n\treturn ;\n}\ncout<<-1;\n}\nint main()\n{\n\tcin>>n>>m>>s1>>s2;\n    //if(s1>=n||s2>=m) torf=1;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tchar c;\n\t\t\tcin>>c;\n\t\t\tif(c=='#') g[i][j]=1;\n\t\t}\n\t}\n\tif(g[n][m]==1){\n\t\tcout<<-1;\n\t\treturn 0;\n\t}\n\tbfs();\n\tif(vis1[n][m]==1) bfs1();\n\telse bfs2();\n\t//cout<<num1[n][m];\n}\n```\n",
        "postTime": 1575719438,
        "uid": 174878,
        "name": "hs_wfz_orz",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3818 \u3010\u5c0fA\u548cuim\u4e4b\u5927\u9003\u79bb II\u3011"
    },
    {
        "content": "~~\u8fd9\u4e48\u6c34\u7684\u5e7f\u641c\u6a21\u677f\u9898\uff0c\u770b\u4e00\u773c\u76f4\u63a5\u79d2\u6389~~\n\n\u9996\u5148\u5e7f\u641c\u662f\u6ca1\u8dd1\u4e86\n\n\u7136\u540e\u4e00\u5c40\u53ea\u80fd\u7528\u836f\u4e00\u6b21\uff0c\u5f00\u4e00\u4e2abo\u961f\u5217\u8bb0\u5f55\u6709\u6ca1\u6709\u7528\u8fc7\n\n\u518d\u5f00\u4e00\u4e2anum\u961f\u5217\u8bb0\u5f55\u6b65\u6570\n\n\u518d\u5f00\u4e24\u4e2a\u961f\u5217\u8bb0\u5f55\u4f4d\u7f6e\n\n\u7136\u540e\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u70b9\u7684\u904d\u5386\u3002\u7528\u8fc7\u836f\u904d\u5386\u8fd9\u4e2a\u70b9\u548c\u6ca1\u7528\u8fc7\u836f\u904d\u5386\u8fd9\u4e2a\u70b9\u72b6\u6001\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u5f00\u4e00\u4e2abo1\u8bb0\u5f55\u6ca1\u7528\u8fc7\u836f\u904d\u5386,bo2\u8bb0\u5f55\u7528\u8fc7\u836f\u904d\u5386\n\n\u7136\u540e\u5e7f\u641c\n\n\u4e0a\u4ee3\u7801\n\n```\n#include<iostream>\n#include<queue>\nusing namespace std;\nint p[4]={1,0,-1,0},q[4]={0,1,0,-1};\nchar map[1010][1010];\nint h,w,d,r;\nint x,y,z,n;\nbool bo1[1010][1010],bo2[1010][1010];\nqueue <int> qx;\nqueue <int> qy;\nqueue <int> num;\nqueue <bool> bo;\nint main()\n{\n\tcin>>h>>w>>d>>r;\n\tfor(int i=1;i<=h;i++)\n\t{\n\t\tfor(int j=1;j<=w;j++)\n\t\t{\n\t\t\tcin>>map[i][j];\n\t\t}\n\t}\n\tqx.push(1);\n\tqy.push(1);\n\tnum.push(0);\n\tbo.push(1);\n\tbo1[1][1]=1;\n\twhile(!qx.empty())\n\t{\n\t\tx=qx.front();qx.pop();\n\t\ty=qy.front();qy.pop();\n\t\tz=num.front();num.pop();\n\t\tn=bo.front();bo.pop();\n\t\tif(x==h&&y==w)\n\t\t{\n\t\t\tcout<<z;\n\t\t\treturn 0;\n\t\t}\n\t\tfor(int i=0;i<=3;i++)\n\t\t{\n\t\t\tif(x+p[i]>0&&y+q[i]>0&&map[x+p[i]][y+q[i]]=='.')\n\t\t\t{\n\t\t\t\tif(bo1[x+p[i]][y+q[i]])continue;\n\t\t\t\tif(!n&&bo2[x+p[i]][y+q[i]])continue;\n\t\t\t\tqx.push(x+p[i]);qy.push(y+q[i]);\n\t\t\t\tnum.push(z+1);bo.push(n);\n\t\t\t\tif(n)bo1[x+p[i]][y+q[i]]=1;\n\t\t\t\telse bo2[x+p[i]][y+q[i]]=1;\n\t\t\t}\n\t\t}\n\t\tif(n&&map[x+d][y+r]=='.'&&!bo1[x+d][y+r]&&!bo2[x+d][y+r])\n\t\t{\n\t\t\tqx.push(x+d);qy.push(y+r);\n\t\t\tnum.push(z+1);bo.push(0);\n\t\t\tbo2[x+d][y+r]=1;\n\t\t}\n\t}\n\tcout<<\"-1\";\n\treturn 0;\n}\n```\n",
        "postTime": 1549208757,
        "uid": 86830,
        "name": "\u4e2d\u4e8c\u75c5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3818 \u3010\u5c0fA\u548cuim\u4e4b\u5927\u9003\u79bb II\u3011"
    },
    {
        "content": "~~\u4e3a\u5565\u4f60\u4eec\u8981\u5224\u65ad\u662f\u5426\u7a7f\u5899\u5462\u2026\u2026~~\n\n\n\u770b\u4e86\u597d\u591a\u9898\u89e3\u548c\u6211\u7684\u89e3\u6cd5\u90fd\u4e0d\u4e00\u6837emmm\n\n\u6211\u7684\u60f3\u6cd5\u5f88\u7b80\u5355\n\n\u4ece\u8d77\u70b9\u8fdb\u884c\u4e00\u6b21bfs\uff08\u8bbe\u4e3aa\u6570\u7ec4\uff09\n\n\u540c\u65f6\u4ece\u7ec8\u70b9\u4e5f\u8fdb\u884c\u4e00\u6b21bfs\uff08\u8bbe\u4e3ab\u6570\u7ec4\uff09\n\n\u5219\u5728(x, y)\u70b9\u559d\u836f\u7684\u6700\u77ed\u8def\u53ef\u8868\u793a\u4e3a$a[x][y]+b[x+d][y+r]+1$\n\n\u4e4b\u540e\u66b4\u529b\u679a\u4e3e\u55d1\u836f\u70b9\u5c31\u597d\n\n\u81f3\u4e8e\u7a7f\u4e0d\u7a7f\u5899\u4ec0\u4e48\u7684\u5c31\u4e0d\u9700\u8981\u5224\u65ad\u4e86\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2)$\uff0c\u5b8c\u5168\u80fd\u8fc7\n```cpp\n#include <bits/stdc++.h>\n#define X x + movx[i]\n#define Y y + movy[i]\nusing namespace std;\nbool mapp[2001][2001];\nint movx[4] = {1, 0, -1, 0};\nint movy[4] = {0, 1, 0, -1};\nint n, m;\nint a[2001][2001], b[2001][2001];\nbool used[2001][2001];\nstruct hehe{\n    int x, y;\n};\nvoid bfs1()\n{\n    queue < hehe >q;\n    hehe now;\n    now.x = now.y = 1;\n    memset(a, 0x3f, sizeof a);\n    a[1][1] = 0;\n    q.push(now);\n    while(q.size())\n    {\n        now = q.front();\n        q.pop();\n        int x = now.x, y = now.y;\n        used[x][y] = 0;\n        for(int i = 0; i < 4; i++)\n        {\n            if(mapp[X][Y] && a[x][y] + 1 < a[X][Y])\n            {\n                a[X][Y] = a[x][y] + 1;\n                if(!used[X][Y])\n                {\n                    hehe neww;\n                    neww.x = X, neww.y = Y;\n                    q.push(neww);\n                    used[X][Y] = 1;\n                }\n            }\n        }\n    }\n}\nvoid bfs2()\n{\n    queue < hehe >q;\n    hehe now;\n    now.x = n;\n    now.y = m;\n    memset(b, 0x3f, sizeof b);\n    memset(used, 0, sizeof used);\n    b[n][m] = 0;\n    q.push(now);\n    while(q.size())\n    {\n        now = q.front();\n        q.pop();\n        int x = now.x, y = now.y;\n        used[x][y] = 0;\n        for(int i = 0; i < 4; i++)\n        {\n            if(mapp[X][Y] && b[x][y] + 1 < b[X][Y])\n            {\n                b[X][Y] = b[x][y] + 1;\n                if(!used[X][Y])\n                {\n                    hehe neww;\n                    neww.x = X, neww.y = Y;\n                    q.push(neww);\n                    used[X][Y] = 1;\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    int e, r;\n    cin >> n >> m >> e >> r;\n    for(int i = 1; i <= n; i++)\n    {\n        for(int j = 1; j <= m; j++)\n        {\n            char ch;\n            cin >> ch;\n            mapp[i][j] = (ch == '.');\n        }\n    }\n    bfs1();\n    bfs2();\n    int ans = a[n][m];\n    for(int i = 1; i <= n; i++)\n    {\n        for(int j = 1; j <= m; j++)\n        {\n            if(a[i][j] <= 1000000 && i + e >= 0 && j + r >= 0 && b[i + e][j + r] <= 1000000 && mapp[i + e][j + r])\n                ans = min(ans, a[i][j] + b[i + e][j + r] + 1);\n        }\n    }\n    if(ans > 1000000 || !mapp[n][m]) cout << -1;\n    else cout << ans;\n    return 0;\n}\n```\n\u540e\u8bb0\uff1a\n\n\u8bf4\u4e00\u4e0b\u8fd9\u9898\u7684\u51e0\u4e2a\u5751\u70b9\n\n- D\u548cR\u53ef\u80fd\u662f\u8d1f\u6570\uff0c\u6240\u4ee5\u55d1\u836f\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u7279\u5224\u5f53\u524d\u70b9\u78d5\u5b8c\u836f\u540e\u7684\u5750\u6807\u662f\u5426\u5c0f\u4e8e\u96f6\n\n- \u51fa\u53e3\u53ef\u80fd\u662f\u5899\uff01\uff01\uff01\n\n- \u6ce8\u610f\u6570\u7ec4\u4e0d\u80fd\u5927\u4e5f\u4e0d\u80fd\u5c0f\n\nupd:\u66f4\u6b63\u4e86\u4e00\u5904\u516c\u5f0f\u9519\u8bef\uff08\u624b\u6b8b\uff09",
        "postTime": 1583146702,
        "uid": 75954,
        "name": "AuCloud",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3818 \u3010\u5c0fA\u548cuim\u4e4b\u5927\u9003\u79bb II\u3011"
    },
    {
        "content": "###\u8fd9\u9053\u9898\u662f\u4e00\u9053bfs\u7684\u95ee\u9898\n\n\u5e94\u8be5\u5f88\u5bb9\u6613\u770b\u51fa\u8fd9\u4e2a\u662f\u9700\u8981\u904d\u5386\u5168\u56fe\u7684\n\n\u4e2a\u4eba\u4e60\u60ef\u5e7f\u641c\uff0c\u6df1\u641c\u5176\u5b9e\u4e5f\u53ef\u4ee5\n\n\u8fd9\u91cc\u8981\u8bf4\u4e00\u4e2a\u6211\u4e00\u76f4\u7b2c\u4e8c\u4e2a\u70b9re\u7136\u540e90\u5206\u7684\u95ee\u9898\n\n##\u6570\u7ec4\u8981\u5f001010\uff0c\u5343\u4e07\u4e0d\u8981\u5f00\u62101001\uff0c\u55ef\uff0c\u5c31\u662f\u8fd9\u6837\uff0c\u4e0b\u9762\u90fd\u6709\u6ce8\u91ca\u8be6\u89e3\uff0c\u82e5\u8bf8\u4f4ddalao\u6709\u4f55\u95ee\u9898\uff0c\u6b22\u8fce\u8bf7\u6559\n\n        \n        \n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int N = 1010;\nint h, w, d, r;\nbool graph[N][N];\nint q[N*N*2][3];\nint dx[] = {1, 0, -1, 0};\nint dy[] = {0, 1, 0, -1};\nint dis[2][N][N];        //0\u8868\u793a\u6ca1\u55d1\u836f\uff0c1\u8868\u793a\u55d1\u836f \nvoid input()\n{\n    char c;\n    scanf(\"%d%d%d%d\", &h, &w, &d, &r);\n    for(int i = 1; i <= h; i++)\n        for(int j = 1; j <= w; j++)\n        {\n            cin>>c;\n            if(c == '.')\n                graph[i][j] = 1;\n            else\n                graph[i][j] = 0;\n        }    \n    memset(dis, -1, sizeof(dis));     //\u8d70\u4e0d\u4e86\u8f93\u51fa-1\uff0c\u4e3a\u4e86\u65b9\u4fbf\u76f4\u63a5\u5b9a\u4e49 \n}\nvoid bfs()\n{\n    int head = 0, tail = 1;\n    q[0][0] = 0;        //\u7528k\u4ee3\u8868\u6ca1\u55d1\u836f\u7684\u72b6\u6001 \n    q[0][1] = 1;        //\u7528x\u4ee3\u8868\u6a2a\u5750\u6807 \n    q[0][2] = 1;        //\u7528y\u4ee3\u8868\u7eb5\u5750\u6807 \n    dis[0][1][1] = 0;    //\u521d\u59cb\u8ddd\u79bb\u4e3a0 \n    while(head < tail)\n    {\n        int k = q[head][0], x = q[head][1], y = q[head][2], z = dis[k][x][y];\n        for(int i = 0; i < 4; i++)\n        {\n            int xx = x + dx[i], yy = y + dy[i]; //bfs\u5168\u56fe \n            //cout<<xx<<\" \"<<yy<<endl;\n            if(dis[k][xx][yy] == -1 && xx >= 1 && xx <= h && yy >= 1 && yy <= w && graph[xx][yy])\n            {                                    //\u8868\u793a\u8fd9\u4e2a\u70b9\u80fd\u8d70\u7684\u65f6\u5019\u5f80\u4e0b\u7ee7\u7eed\u641c\u7d22\n                dis[k][xx][yy] = z + 1;\n                q[tail][0] = k;\n                q[tail][1] = xx;\n                q[tail][2] = yy;\n                tail++;\n            }\n        }\n        if(k == 0)    //\u82e5\u662f\u8d70\u4e0d\u4e86\uff0c\u8be5\u55d1\u836f\u4e86 \n        {\n            int xx = x + d, yy = y + r;\n            if(dis[k][xx][yy] == -1 && xx >= 1 && xx <=h && yy >= 1 && yy <= w && graph[xx][yy])    //\u80fd\u8d70 \n            {\n                dis[1][xx][yy] = z + 1;\n                q[tail][0] = 1;            //\u78d5\u8fc7\u836f\u6807\u8bb0\u62101 \n                q[tail][1] = xx;\n                q[tail][2] = yy;\n                tail++;\n            }\n        }\n        head++; //\u505a\u5b8c\u4e00\u6b21\u5934\u6307\u9488\u5f80\u540e\u79fb\uff0c\u51c6\u5907\u8ba9\u4e0b\u4e00\u4e2a\u70b9\u5165\u961f \n    }    \n    int ans1 = dis[0][h][w], ans2 = dis[1][h][w]; //\u56e0\u4e3abfs\u904d\u5386\u7279\u6027\u4e00\u822c\u7b2c\u4e00\u4e2a\u51fa\u6765\u7684\u5c31\u662f\u6700\u4f18\u89e3\n    if(ans1 == -1)            //\u6ca1\u55d1\u836f\u51fa\u4e0d\u6765\u5c31\u770b\u55d1\u836f\u7684 \n        printf(\"%d\\n\", ans2);\n    else if(ans2 == -1)        //\u82e5\u662f\u55d1\u836f\u8fd8\u51fa\u4e0d\u6765\u5c31\u6ca1\u529e\u6cd5\u4e86 \n        printf(\"%d\\n\", ans1);\n    else\n        printf(\"%d\\n\", min(ans1, ans2));    //\u80fd\u51fa\u6765\u7684\u5c31\u770b\u54ea\u4e2a\u5c0f\u54af,\u534a\u5929\u8f93\u51fa\u4e0d\u6765\u6c14\u6b7b\u4e86\u3002\u3002 \n}\nint main()\n{\n    input();\n    bfs();\n    return 0;\n}\n```",
        "postTime": 1500306207,
        "uid": 48717,
        "name": "gyf12138",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3818 \u3010\u5c0fA\u548cuim\u4e4b\u5927\u9003\u79bb II\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u7528dfs\u5fc5\u5b9a\u4f1a\u8d85\u65f6\uff0c\u5927\u6982\u662f40\u5206\u5427\uff08\u5f53\u7136\u662f\u6ca1\u6709\u526a\u679d\uff0c\u6211\u4e5f\u4e0d\u4f1a\u526a\u679d\uff09\uff0c\u6240\u4ee5\u5c31\u77e5\u53ef\u4ee5\u7528bfs\uff0c\u4f46\u662f\u4e00\u4e2a\u975e\u5e38\u5173\u952e\u7684\u95ee\u9898\u5c31\u662f\u8981\u8bb0\u5f55\u6709\u6ca1\u6709\u55d1\u836f\uff0c\u78d5\u4e86\u836f\u5c31\u4e0d\u53ef\u4ee5\u518d\u55d1\u836f\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u961f\u5217\u7684\u7ed3\u6784\u4f53\u4e2d\u5728\u8bbe\u7f6e\u6709\u6ca1\u6709\u78d5\u8fc7\u836f\uff0c\u5982\u679c\u8fd9\u4e2a\u7ed3\u70b9\u78d5\u8fc7\u836f\u4e86\uff0c\u90a3\u4e48\u5b83\u4ee5\u540e\u62d3\u5c55\u7684\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u4e5f\u90fd\u662f\u78d5\u8fc7\u836f\u7684\uff0c\u5f53\u7136\u540c\u4e00\u4e2a\u5750\u6807\u53ef\u80fd\u5b58\u5728\u55d1\u836f\u548c\u6ca1\u55d1\u836f\u4e24\u79cd\u60c5\u51b5\uff0c\u90fd\u662f\u53ef\u4ee5\u5165\u961f\u7684\uff0c\u5c31\u6bd4\u5982\u8bf4\u7b2c\u4e09\u4e2a\u6837\u4f8b\u4e2d\u7684\uff084\uff0c3\uff09\uff1b\u5f53\u7136\u628a\u7ed3\u70b9\u9001\u5165\u961f\u5217\u4e4b\u540e\uff0c\u6211\u4eec\u8fd8\u8981\u53bb\u91cd\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u4e0d\u53ef\u4ee5\u5355\u72ec\u5730\u8bb0\u5f55\u8fd9\u4e2a\u5750\u6807\u6709\u6ca1\u6709\u6765\u8fc7\u4e86\uff0c\u56e0\u4e3a\u5b58\u5728\u4e00\u79cd\u60c5\u51b5\u5c31\u662f\u5982\u679c\u77ac\u79fb\u5230\u4e86\u67d0\u4e2a\u70b9\u4e4b\u540e\uff0c\u5b9e\u9645\u4e0a\uff0c\u8d70\u5230\u8fd9\u4e2a\u70b9\u4e4b\u540e\u518d\u77ac\u79fb\u624d\u662f\u6b63\u89e3\u3002\u6240\u4ee5\u8981\u7528\u4e00\u4e2a\u4e09\u7ef4\u7684\u6570\u7ec4\u6765\u8bb0\u5f55\u67d0\u70b9\u67d0\u72b6\u6001\u7684\u60c5\u51b5\u3002\u9644\u4e0a\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath> \nusing namespace std;\nint h,w,d,r,p;\nchar a[1005][1005];\nbool s[1005][1005][2];\nint xx[10]={0,1,0,-1,0};\nint yy[10]={0,0,-1,0,1};\nint mins=2147483647;\nstruct tt\n{\n    int x;\n    int y;\n    int step;\n    bool flag;\n}t[1005*1005*2];\nvoid bfs()\n{\n    int head=0,tail=1;\n    t[1].x=1;t[1].y=1;\n    s[1][1][0]=1;//\u7b2c\u4e00\u4e2a\u70b9\u8981\u521d\u59cb\u5316\n    while(head<tail)\n    {\n        head++;\n        for(int i=1;i<=5;i++)\n        {\n            if(i==5&&t[head].flag==1)//\u5982\u679c\u7236\u4eb2\u7ed3\u70b9\u90fd\u662f\u78d5\u8fc7\u836f\u7684\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4e0d\u7528\u518d\u8d70\u4e86\uff1b\n            continue;\n            int x1=t[head].x+xx[i],y1=t[head].y+yy[i];\n            if(x1>=1&&x1<=h&&y1>=1&&y1<=w&&a[x1][y1]!='#')\n            {\n                if(t[head].flag==1&&s[x1][y1][1]==1)continue;//\u4e4b\u524d\u55d1\u836f\u6765\u8fc7\uff0c\u73b0\u5728\u53c8\u55d1\u836f\u6765\uff0c\u6240\u4ee5\u5c31\u4e0d\u884c\n                if(t[head].flag==0&&s[x1][y1][0]==1&&i!=5)continue;//\u4e4b\u524d\u8d70\u8def\u8fc7\u6765\u7684\uff0c\u73b0\u5728\u53c8\u8d70\u8fc7\u6765\uff0c\u5f53\u7136\u4e5f\u4e0d\u884c\n                tail++;\n                t[tail].x=x1;\n                t[tail].y=y1;\n                if(t[head].flag==1||i==5)\n                {\n                    t[tail].flag=1;\n                    s[x1][y1][1]=1;\n                }\n                else s[x1][y1][0]=1;\n                t[tail].step=t[head].step+1;\n                if(x1==h&&y1==w)\n                {\n                    p=tail;\n                    head=tail;\n                    break;\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d%d\",&h,&w,&d,&r);\n    getchar();\n    for(int i=1;i<=h;i++)\n    {\n        for(int j=1;j<=w;j++)\n        scanf(\"%c\",&a[i][j]);\n        getchar();\n    }\n    xx[5]=d;yy[5]=r;//\u8fd9\u662f\u7b2c\u4e94\u79cd\u79fb\u52a8\u7684\u65b9\u5f0f\n    bfs();\n    for(int i=1;i<=p;i++)\n    {\n        if(t[i].x==h&&t[i].y==w)//\u5982\u679c\u641c\u4e0d\u5230\u7684\u8bdd\u90a3\u5c31\u76f4\u63a5\u8f93\u51fa-1\u4e86\n        {\n            printf(\"%d\",t[i].step);\n            return 0;\n        }\n    }\n    printf(\"-1\");\n    return 0;\n}\n```",
        "postTime": 1499736676,
        "uid": 20059,
        "name": "ylsoi",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3818 \u3010\u5c0fA\u548cuim\u4e4b\u5927\u9003\u79bb II\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u5927\u53ef\u4e0d\u5fc5\u5efa\u8fb9\u8dd1\u6700\u77ed\u8def\u4ec0\u4e48\u7684\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2avis[i][j][0/1]\u6570\u7ec4\u6765\u8bb0\u5f55\u72b6\u6001\u3002\n\n0\u8868\u793a\u662f\u901a\u8fc7\u8d70\u8def\u7684\u65b9\u5f0f\u5230\u8fbe\u7684\u8fd9\u4e2a\u70b9\uff0c\n\n1\u8868\u793a\u901a\u8fc7\u9b54\u6cd5\u7684\u65b9\u5f0f\u8d70\u7684\u5230\u8fd9\u4e2a\u70b9\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u5f88\u5751\u7684\u5730\u65b9\u5c31\u662fvis\u5f00\u5c0f\u4e86\u4f1aRE\u7b2c2\u4e2a\u70b9\uff0c\u5f00\u5927\u4e86\u4f1aRE\u7b2c7\u4e2a\u70b9\uff0c\n\n\u83ab\u540d\u5176\u5999\n\n                \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<queue>\n#include<algorithm>\n#define lli long long int \nusing namespace std;\nvoid read(int &n)\n{\n    char c='+';int x=0;bool flag=0;\n    while(c<'0'||c>'9')\n    {c=getchar();if(c=='-')flag=1;}\n    while(c>='0'&&c<='9')\n    {x=x*10+(c-48);c=getchar();}\n    flag==1?n=-x:n=x;\n}\nint n,m;\nint mox,moy;\nint map[2501][2501];\nbool vis[2501][2101][3];\nint xx[5]={-1,+1,0,0};\nint yy[5]={0,0,-1,+1};\nstruct node\n{\n    int x,y,step;\n    bool flag;// \u662f\u5426\u559d\u4e86\u836f\u6c34\u3001 \n}now,nxt;\nvoid  BFS()\n{\n    queue<node>q;\n    vis[1][1][0]=1;\n    //vis[bgx][bgy][1]=1;\n    now.x=1;\n    now.y=1;\n    now.flag=0;\n    now.step=0;\n    q.push(now);\n    bool end=0;\n    while(q.size()!=0)\n    {\n        node p=q.front();\n        q.pop();\n        if(p.x<0||p.y<0||p.x>n||p.y>m)\n            continue;\n        for(int i=0;i<4;i++)\n        {\n            int wx=xx[i]+p.x;\n            int wy=yy[i]+p.y;\n            if(map[wx][wy]==1&&wx>0&&wy>0&&wx<=n&&wy<=m)\n            {\n                if(vis[wx][wy][p.flag]==0)\n                {\n                vis[wx][wy][p.flag]=1;\n                node w;\n                w.x=wx;\n                w.y=wy;\n                w.step=p.step+1;\n                w.flag=p.flag;\n                if(wx==n&&wy==m)\n                {\n                    printf(\"%d\",w.step);\n                    return ;\n                }\n                q.push(w);    \n                }\n            }\n        }\n        if(p.flag==0)\n        {\n            int wx=p.x+mox;\n            int wy=p.y+moy;    \n            if(map[wx][wy]==1&&wx>0&&wy>0&&wx<=n&&wy<=m)\n            {\n                if(vis[wx][wy][1]==0)\n                {\n                    vis[wx][wy][1]=1;\n                    node w;\n                    w.x=wx;\n                    w.y=wy;\n                    w.step=p.step+1;\n                    w.flag=1;\n                    if(wx==n&&wy==m)\n                    {\n                        printf(\"%d\",w.step);\n                        return ;\n                    }\n                    q.push(w);    \n                }\n            }\n        }\n    }\n        printf(\"-1\");\n}\nint main()\n{\n    //ios::sync_with_stdio(false);\n    cin>>n>>m>>mox>>moy;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            char p;\n            cin>>p;\n            if(p=='.') map[i][j]=1;// \u53ef\u4ee5\u901a\u8fc7\n            else \n            if(p=='#') map[i][j]=2;// \u4e0d\u80fd\u901a\u8fc7    \n        }\n    }\n    BFS();\n    return 0;\n}\n```",
        "postTime": 1498981068,
        "uid": 36984,
        "name": "attack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3818 \u3010\u5c0fA\u548cuim\u4e4b\u5927\u9003\u79bb II\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9898\u3002\u3002\u5f88\u5bb9\u6613\u77e5\u9053\u5c31\u662f\u641c\u7d22\u3002\u3002\n\n\u4f46\u6700\u8fd1\u6700\u77ed\u8def\u505a\u7684\u6709\u70b9\u591a  \u6211\u60f3\u60f3\u80fd\u4e0d\u80fd\u5efa\u4e00\u4e2a\u56fe \u7136\u540e\u8dd1\u4e00\u8fb9spfa\u6765\u7b97\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\n\n\u4e4b\u540e\u601d\u8003\u4e86\u4e0b\u5982\u4f55\u5efa\u56fe \u6700\u96be\u7684\u5c31\u662f\u666e\u901a\u7684\u4e0a\u4e0b\u5de6\u53f3\u79fb\u52a8 \u548c \u53ea\u80fd\u55d1\u4e00\u6b21\u836f\u5982\u4f55\u8fdb\u884c\u533a\u5206\n\n\u6211\u89c9\u5f97 \u53ef\u4ee5\u5c06\u53ea\u80fd\u8d70\u4e00\u6b21\u7684\u8fb9\u6743\uff08\u6216\u8005\u8bf4\u662f\u6807\u8bb0\uff09\u8bbe\u4e3a1  \u522b\u7684\u4e3a0\n\n\u6700\u540e \u5c06dis \u666e\u901a\u7684\u4e00\u7ef4\u6570\u7ec4 \u6269\u5c55\u6210\u4e8c\u7ef4\u7684  \u7b2c\u4e8c\u4e2a\u7ef4\u5ea6 \u4e5f\u662f 0 \u548c 1 \u533a\u5206  0\u4ee3\u8868\u5230\u8fd9\u4e2a\u70b9 \u4e0d\u8fdb\u884c\u55d1\u836f \u6240\u8d70\u7684\u6700\u77ed\u8def 1\u5c31\u662f\u55d1\u836f\u7684 \uff08\u597d\u50cf\u548c\u5927\u90e8\u5206\u7684bfs\u6807\u8bb0\u5dee\u4e0d\u591a\uff09\n\n\u4e0a\u7a0b\u5e8f:\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<algorithm>\n#include<cctype>\n#include<queue>\n#include<iostream>\n#define For(i, l, r) for(int i = (l); i <= (int)(r); ++i)\n#define Fordown(i, r, l) for(int i = (r); i >= (int)(l); --i)\n#define Set(a, v) memset(a, v, sizeof(a))\nusing namespace std;\n\ninline int read(){\n  int x = 0, fh = 1; char ch;\n  for(; !isdigit(ch); ch = getchar()) if (ch == '-') fh = -1;\n  for(; isdigit(ch); ch = getchar()) x = (x<<1) + (x<<3) + (ch^'0');\n  return x * fh;\n}\n\ninline bool read_char() {\n   char ch = getchar();\n   for(; ch != '.' && ch != '#'; ch = getchar());\n   return ch == '.' ? 1 : 0;\n}  //\u6253\u7684\u4e00\u4e2a\u8bfb\u53d6\u56fe\u7684\u4e1c\u897f\u3002\u3002\n\nconst int N = 1010, M = 1010*1010*(4+1), inf = 0x3f3f3f3f;\nint dis[N*N][2], fx[4][2] = { {0, 1}, {1, 0}, {0, -1}, {-1, 0} };\nbool MAP[N][N], inq[N*N];\nbool val[M];\nint to[M], Next[M], Head[M], e = 0;\nint h, w, fl1, fl2;\ninline void add_edge (int u, int v, bool pass) {\n    to[++e] = v;\n    Next[e] = Head[u];\n    val[e] = pass; //\u5982\u679c\u8fd9\u6761\u8fb9\u9700\u8981\u55d1\u836f \u5219\u6807\u8bb0\u4e00\u4e0b \n    Head[u] = e;\n} //\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u8fb9 \u51cf\u5c11\u7a7a\u95f4\u6d88\u8017 \n\ninline int bh (int x, int y) {return (x-1) * w + y; } //\u5bf9\u4e8c\u7ef4\u77e9\u9635\u7684\u6bcf\u4e2a\u70b9\u8fdb\u884c\u7f16\u53f7 \n\nint spfa () {\n    Set(dis, inf);\n    queue<int> Q;\n    Q.push(1); dis[1][0] = dis[1][1] = 0; //spfa\u521d\u59cb\u5316 \n    while (!Q.empty()) {\n        int now = Q.front(); Q.pop(); inq[now] = 0;\n        for (int i = Head[now]; i; i = Next[i]) {\n         int v = to[i];               \n         if (!val[i]) {  //\u4e0d\u55d1\u836f\u7684\u60c5\u51b5 \n             if (dis[v][1] > dis[now][1] + 1) { //\u5f53\u524d\u8d77\u59cb\u70b9\u55d1\u836f\u7684\u8ddd\u79bb+1 \u6bd4\u5230\u8fbe\u70b9\u55d1\u836f\u8ddd\u79bb\u8981\u77ed \n                 dis[v][1] = dis[now][1] + 1; //\u66f4\u65b0 \n                 if (!inq[v]) {inq[v] = 1; Q.push(v);}\n             } \n             if (dis[v][0] > dis[now][0] + 1) {  //\u540c\u4e0a\u4e0d\u55d1\u836f\u7684\u60c5\u51b5 \n                 dis[v][0] = dis[now][0] + 1;\n                 if (!inq[v]) {inq[v] = 1; Q.push(v);}\n             }\n        }\n        else {\n            if (dis[v][1] > dis[now][0] + 1) { //\u5f53\u524d\u8d77\u59cb\u70b9\u4e0d\u55d1\u836f\u7684\u8ddd\u79bb+1 \u6bd4\u5230\u8fbe\u70b9\u55d1\u836f\u8ddd\u79bb\u8981\u77ed \n                dis[v][1] = dis[now][0] + 1;\n                if (!inq[v]) {inq[v] = 1; Q.push(v);}\n                }\n             }\n        }\n    }\n    int t = bh(h, w), ans = min(dis[t][1], dis[t][0]); //\u53d6\u51fa\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def \n    return ans == inf ? -1 : ans; //\u5230\u4e0d\u4e86\u4e3a-1 \u5230\u5f97\u4e86\u4e3a\u55d1\u836f\u548c\u4e0d\u55d1\u836f\u8f83\u5c0f\u7684\u90a3\u4e2a \n}\n\nint main(){\n    h = read(); w = read(); fl1 = read(); fl2 = read(); //fl = flash \u95ea\u73b0\uff08\u6ed1\u7a3d\uff09 \n    For (i, 1, h) \n     For (j, 1, w) \n      MAP[i][j] = read_char();\n    \n    For (i, 1, h)\n     For (j, 1, w) \n      if (MAP[i][j]) { //\u5f53\u524d\u4f4d\u7f6e\u5408\u6cd5 \n        For (k, 0, 3) {\n            int x1 = i + fx[k][0], y1 = j + fx[k][1];\n            if (MAP[x1][y1]) {\n                int u = bh(i, j), v = bh(x1, y1); //\u53d6\u51fa\u8d77\u59cb\u70b9\u548c\u7ec8\u70b9\u7684\u7f16\u53f7 \n                add_edge(u, v, false); //\u52a0\u5165\u6b64\u8fb9\uff0c\u6807\u8bb0\u4e3a\u5047 \n            }\n        }\n        int x2 = i + fl1, y2 = j + fl2; //\u55d1\u836f\u540e\u7684\u5750\u6807 \n        if (x2 <= 0 || y2 <= 0 || x2 > h || y2 > w) continue; //\u4f4d\u7f6e\u4e0d\u5408\u6cd5 \n        if (MAP[x2][y2]) {\n            int u = bh(i, j), v = bh(x2, y2);\n            add_edge(u, v, true); //\u55d1\u836f\u6807\u8bb0\u4e3a\u771f \n        }\n      }\n          \n    printf (\"%d\\n\", spfa ());\n}\n```\nps:\u8fd9\u79cd\u601d\u8def \u5176\u5b9e\u672c\u8eab\u548c\u5404\u4f4d\u5927\u4f6c\u7684bfs\u5dee\u4e0d\u591a\u3002\u3002\u3002 \u53ea\u662f\u5f3a\u884c\u7528\u4e86\u56fe\u8bba\u5199\u3002\u3002  \u65f6\u95f4\u6548\u7387\u7565\u6162\u4e00\u4e9b\n",
        "postTime": 1498960050,
        "uid": 19128,
        "name": "zjp_shadow",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3818 \u3010\u5c0fA\u548cuim\u4e4b\u5927\u9003\u79bb II\u3011"
    },
    {
        "content": "\u5176\u5b9e\u4e5f\u53ef\u4ee5\u8fd9\u6837\u60f3\u3002\n\n\u5148BFS\u4e24\u904d\uff0c\u5206\u522b\u4fdd\u5b58\u6bcf\u4e2a\u70b9\u5230\u8d77\u70b9\u7684\u8ddd\u79bb\uff0c\u548c\u5230\u7ec8\u70b9\u7684\u8ddd\u79bb\uff08\u8fd9\u91cc\u7684\u8ddd\u79bb\u6307\u6b65\u6570\uff09\uff0c\u7136\u540e\u518dfor(i=1 to n)for(j=1 to m) \u4e00\u4e0b\uff0c\u67e5\u627e\u6bcf\u4e2a\u70b9\u7ecf\u8fc7\u8df3\u8dc3\u518d\u5230\u7ec8\u70b9\u7684\u8ddd\u79bb\u3002\u4e8e\u662f\u53ea\u4e0d\u8fc7\u67093\u7684\u5e38\u6570\u800c\u5df2\uff0c\u60f3\u8d77\u6765\u548c\u5b9e\u73b0\u8d77\u6765\u90fd\u5f88\u65b9\u4fbf\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n\n#define MX 2001\n\nusing namespace std;\n\nint mp[MX][MX],n,m,v1,v2,d1[MX][MX],d2[MX][MX];\nint nvec[5][3]={{0,0,0},{0,0,1},{0,1,0},{0,0,-1},{0,-1,0}};\ntypedef struct poit{int x,y;}point;\npoint q[MX*MX];\nchar vis[MX][MX];\npoint make_point(int x,int y){point p;p.x=x,p.y=y;return p;}\n\nvoid sch(point frm,int (*dis)[MX])\n{\n    int h=1,t=1;\n    for(int i=1;i<=n;i++)for(int j=1;j<=m;j++)dis[i][j]=-1,vis[i][j]=0;\n    q[h]=frm;\n    vis[frm.x][frm.y]=1;\n    dis[frm.x][frm.y]=0;\n    point now,nxt;\n    while(h>=t)\n    {\n        now=q[t++];\n        for(int i=1;i<=4;i++)\n        {\n            nxt.x=now.x+nvec[i][1];\n            nxt.y=now.y+nvec[i][2];\n            if(nxt.x>n||nxt.y>m||nxt.x<1||nxt.y<1||mp[nxt.x][nxt.y]==1||vis[nxt.x][nxt.y]==1)continue;\n            q[++h]=nxt;\n            vis[nxt.x][nxt.y]=1;\n            dis[nxt.x][nxt.y]=dis[now.x][now.y]+1;\n        }\n    }\n}\n\nint main()\n{\n    char ch='6';\n    scanf(\"%d%d%d%d\",&n,&m,&v1,&v2);\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            ch=getchar();\n            while(ch!='#'&&ch!='.')ch=getchar();\n            if(ch=='#')mp[i][j]=1;\n            else mp[i][j]=0;\n        }\n    }\n    if(mp[1][1]||mp[n][m]){cout<<\"-1\"<<endl;return 0;}\n    sch(make_point(1,1),d1);\n    sch(make_point(n,m),d2);\n    int mdis=99999999;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            if(i+v1<=n&&j+v2<=m&&i+v1>=1&&j+v2>=1)\n                if(d1[i][j]!=-1&&d2[i+v1][j+v2]!=-1)\n                    mdis=min(mdis,d1[i][j]+d2[i+v1][j+v2]+1);\n    if(d1[n][m]!=-1)mdis=min(mdis,d1[n][m]);\n    if(mdis<99999999)cout<<mdis<<endl;\n    else cout<<\"-1\"<<endl;\n    return 0;\n}\n```",
        "postTime": 1498955070,
        "uid": 41155,
        "name": "totorato",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3818 \u3010\u5c0fA\u548cuim\u4e4b\u5927\u9003\u79bb II\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u4e0d\u96be\uff0c\u4ed4\u7ec6\u60f3\u60f3\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e9b\u4e8b\u60c5\u3002\u3002\u3002\n\n\u8bbed[i][j][k]\u4e3a\u4ece1,1\u8d70\u5230i,j\u7684\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6\uff0ck\u8868\u793a\u662f\u5426\u559d\u8fc7\u836f\u6c34\n\n\u7136\u540e\u6bcf\u6b21\u5206\u522b\u8f6c\u79fb\uff0c\u8dd1\u4e00\u904dBFS\u5c31\u89e3\u51b3\u4e86\n\n\u770b\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cstdlib>\n#include<queue>\nusing namespace std;\nint n,m,d,r,ans[1002][1002][2];\nchar s[1002][1002];\nqueue<int>q1,q2,q3;\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&m,&d,&r);\n    for (int i=1;i<=n;i++)\n    scanf(\"%s\",s[i]+1);\n    memset(ans,-1,sizeof(ans));\n    ans[1][1][0]=0;q1.push(1);q2.push(1);q3.push(0);\n    while(!q1.empty())\n    {\n        int u1=q1.front(),u2=q2.front(),u3=q3.front();\n        q1.pop();q2.pop();q3.pop();\n        if (u1==n && u2==m){printf(\"%d\\n\",ans[u1][u2][u3]);return 0;}\n        if (u1+1<=n && ans[u1+1][u2][u3]==-1 && s[u1+1][u2]!='#')//\u5411\u4e0b\n        {\n            ans[u1+1][u2][u3]=ans[u1][u2][u3]+1;\n            q1.push(u1+1);q2.push(u2);q3.push(u3);\n        }\n        if (u1-1>0 && ans[u1-1][u2][u3]==-1 && s[u1-1][u2]!='#')//\u5411\u4e0a\n        {\n            ans[u1-1][u2][u3]=ans[u1][u2][u3]+1;\n            q1.push(u1-1);q2.push(u2);q3.push(u3);\n        }\n        if (u2+1<=m && ans[u1][u2+1][u3]==-1 && s[u1][u2+1]!='#')\u5411\u53f3\n        {\n            ans[u1][u2+1][u3]=ans[u1][u2][u3]+1;\n            q1.push(u1);q2.push(u2+1);q3.push(u3);\n        }\n        if (u2-1>0 && ans[u1][u2-1][u3]==-1 && s[u1][u2-1]!='#')//\u5411\u5de6\n        {\n            ans[u1][u2-1][u3]=ans[u1][u2][u3]+1;\n            q1.push(u1);q2.push(u2-1);q3.push(u3);\n        }\n        if (!u3 && u1+d>0 && u1+d<=n && u2+r<=m && u2+r>0 && ans[u1+d][u2+r][1]==-1 && s[u1+d][u2+r]!='#')//\u559d\u836f\u6c34\n        {\n            ans[u1+d][u2+r][1]=ans[u1][u2][u3]+1;\n            q1.push(u1+d);q2.push(u2+r);q3.push(1);\n        }\n    }\n    puts(\"-1\");//\u65e0\u65b9\u6848\n    return 0;\n}\n```",
        "postTime": 1498917152,
        "uid": 14738,
        "name": "1124828077ccj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3818 \u3010\u5c0fA\u548cuim\u4e4b\u5927\u9003\u79bb II\u3011"
    },
    {
        "content": "### P3818 \u3010\u5c0fA\u548cuim\u4e4b\u5927\u9003\u79bb II\u3011\n\u53c8\u4e00\u9053~~\u6c34~~\u7684\u641c\u7d22\u9898\uff0c\u88f8\u7684bfs\u3002\u5173\u952e\u5728\u4e8e\u8981\u7528\u4e09\u7ef4\u6570\u7ec4\u3002\u8bb0a[i][j][1]\u4e3a\u5230\u7b2ci\u884c\u7b2cj\u884c\u4e0d\u7528\u9b54\u836f\u7684\u6700\u5c11\u6b65\u6570\uff0c\u8bb0a[i][j][0]\u4e3a\u5230\u7b2ci\u884c\u7b2cj\u884c\u7528\u9b54\u836f\u7684\u6700\u5c11\u6b65\u6570\u3002\u4e0a\u7801:\n```cpp\n#include<bits/stdc++.h>\n#define flag(e,f,g) (e>0&&e<=h&&f>0&&f<=w&&a[e][f][g]=='.')\nusing namespace std;\nstruct run{int x,y,dep,magic;};//\u5148\u5b9a\u4e00\u4e2a\u7ed3\u6784\u4f53\nqueue<run>q;\nint h,w,d,r,b[5]={0,-1,1,0,0},c[5]={0,0,0,-1,1};//b\u3001c\u63a7\u5236\u65b9\u5411\nchar a[1010][1010][2];//\u7528\u4e8e\u6807\u8bb0\u72b6\u6001\nvoid bfs(run z)\n{\n\tint i;\n\trun l;\n\tq.push(z);\n\twhile (q.size())\n\t{\n\t\tl=q.front();\n\t\tq.pop();\n\t\tif (l.x==h&&l.y==w)//\u5230\u8fbe\u7ec8\u70b9\n\t\t{\n\t\t\tcout<<l.dep<<endl;//\u8f93\u51fa\u6b65\u6570\n\t\t\texit(0);\n\t\t}\n\t\tfor (i=1;i<=4;i++)\n\t\t{\n\t\t\tif (flag(l.x+b[i],l.y+c[i],l.magic))//\u4e0d\u7528\u9b54\u836f\n\t\t\t{\n\t\t\t\ta[l.x+b[i]][l.y+c[i]][l.magic]='#';//\u6807\u8bb0\n\t\t\t\tq.push({l.x+b[i],l.y+c[i],l.dep+1,l.magic});//\u5c06\u65b0\u72b6\u6001\u52a0\u5165\u961f\u5c3e\n\t\t\t}\n\t\t}\n\t\tif (flag(l.x+d,l.y+r,0)&&l.magic==1)//\u7528\u9b54\u836f\n\t\t{\n\t\t\ta[l.x+d][l.y+r][0]='#';//\u540c\u4e0a\n\t\t\tq.push({l.x+d,l.y+r,l.dep+1,0});//\u540c\u4e0a\t\t\t\n\t\t}\n\t}\n\tcout<<-1<<endl;//\u9003\u4e0d\u4e86\n}\nint main()//\u5de8\u77ed\u4e3b\u51fd\u6570\uff0c\u53ea\u8d1f\u8d23\u8f93\u5165\u548c\u8c03\u7528bfs\n{\n\tint i,j;\n\tcin>>h>>w>>d>>r;\n\tfor (i=1;i<=h;i++)\n\t\tfor (j=1;j<=w;j++)\n\t\t\tcin>>a[i][j][0],a[i][j][1]=a[i][j][0];\n\ta[1][1][0]=a[1][1][1]='#';//\u6807\u8bb0\u8d77\u59cb\u4f4d\u7f6e\n\tbfs({1,1,0,1});\n\treturn 0;\n}\n```\n",
        "postTime": 1554475911,
        "uid": 112550,
        "name": "a1_1",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3818 \u3010\u5c0fA\u548cuim\u4e4b\u5927\u9003\u79bb II\u3011"
    },
    {
        "content": "\u9996\u5148\u7ed9\u4f60\u4eec\u8bb2\u4e0b\u5751\u70b9\uff1a\u8d77\u70b9\u548c\u7ec8\u70b9\u662f\u53ef\u4ee5\u6709\u969c\u788d\u7269\u7684\u2026\u2026\n\n\u6240\u4ee5\u961f\u5217\u521d\u59cb\u5316\u7684\u65f6\u5019\u4e5f\u8981\u8bb0\u5f97\u5224\u65ad\u4e0b\u6709\u6ca1\u6709\u969c\u788d\u7269\u2026\u2026\n\n\u8fd9\u9053\u9898\u6211\u7684\u601d\u8def\u548c\u5176\u4ed6\u9898\u89e3\u90fd\u4e0d\u4e00\u6837\u3002\n\n\u6211\u4eec\u5047\u8bbe\u559d\u836f\u4e4b\u524d\u7684\u70b9\u4e3aA\uff0c\u559d\u836f\u4e4b\u540e\u7684\u70b9\u4e3aB\n\n\u90a3\u4e48A\u5fc5\u7136\u8981\u548c\u8d77\u70b9\u8054\u901a\uff0cB\u5fc5\u7136\u8981\u548c\u7ec8\u70b9\u8054\u901a\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u60f3\u8c61\u4e24\u5f20\u56fe\uff0c\u4e00\u5f20\u662f\u8d77\u70b9\u7684\u8054\u901a\u5757\uff0c\u4e00\u5f20\u662f\u7ec8\u70b9\u7684\u8054\u901a\u5757\u3002\n\n\u5bf9\u7b2c\u4e00\u5f20\u56fe\u6211\u4eec\u7528bfs\u6c42\u4e00\u4e0b\u8d77\u70b9\u51fa\u53d1\u80fd\u5230\u8fbe\u7684\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bbdis[i][j]\n\n\u5bf9\u7b2c\u4e8c\u5f20\u56fe\u6211\u4eec\u518d\u7528bfs\u6c42\u4e00\u4e0b\u7ec8\u70b9\u51fa\u53d1\u80fd\u5230\u8fbe\u7684\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bbdis2[i][j]\n\n\u6211\u4eec\u5148\u8003\u8651\u4e0d\u559d\u836f\u7684\u60c5\u51b5,\u7ec8\u70b9\u5750\u6807\u662f\uff08H\uff0cW\uff09\uff0c\u7531\u4e8e\u4e0d\u559d\u836f\uff0c\u5c31\u662f\u76f4\u63a5\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\uff0c\u90a3\u4e48\u53ef\u5f97\uff1aans=dis[H][W]\n\n\u7136\u540e\u518d\u8003\u8651\u559d\u836f\uff1a\n\n\u559d\u836f\u5c31\u662f\u5728\u8fd9\u4e24\u5f20\u56fe\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\uff08~~\u7a7a\u95f4\u8df3\u8dc3~~\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u679a\u4e3e\u56fe\u4e0a\u6240\u6709\u5408\u6cd5\u7684\u70b9\uff1a\n```cpp\n                ans=min(dis[i][j]+dis2[i+d][j+r]+1);\n```\n\u8fd8\u770b\u4e0d\u61c2\uff1f\u518d\u7ffb\u8bd1\u4e00\u4e0b\uff1a\u7b54\u6848\u5c31\u662f\uff1a\n\n**\u6700\u5c0f\u7684\uff08\u8d77\u70b9\u5230\u559d\u836f\u4f4d\u7f6e\u7684\u8ddd\u79bb+\u559d\u836f\u540e\u8df3\u5230\u7684\u4f4d\u7f6e\u5230\u7ec8\u70b9\u7684\u8ddd\u79bb+\u559d\u836f\u8d39\u7528\uff09**\n\n\u8fd9\u9053\u9898\u5c31\u88ab\u8f6c\u6362\u4e3a\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u9690\u5f0f\u56fe\u7684bfs\u6c42\u6700\u77ed\u8def\u3002\u4e0d\u7528\u8bf4\u4e86\u5427\uff1f\n\n\u7ec6\u8282\u770b\u4ee3\u7801\u5427\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<iostream>\n#define maxn 1005\n#define INF 0x3f\n#define INFF 0x3f3f3f3f\nusing namespace std;\nint h, w, d, r;\nchar map[maxn][maxn];\nint dis[maxn][maxn],dis2[maxn][maxn];\nqueue<pair<int,int>> que;\nbool legal(int x, int y);\nvoid fake_spfa(int x,int y,int dis[][maxn]);\nconst int dir[4][2] = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}};\nint main(void)\n{\n    int ans=INFF,i,j;\n    memset(dis, INF, sizeof(dis));\n    scanf(\"%d%d%d%d\", &h, &w, &d, &r);\n    for(i = 1; i <= h; i++)\n        scanf(\"%s\", (char *)map[i]+1);\n    fake_spfa(1, 1,dis);\n    ans = dis[h][w];\n    memset(dis2, INF, sizeof(dis2));\n    fake_spfa(h, w, dis2);\n    for(i = 1; i <= h; i++)\n        for(j = 1; j <= w; j++)\n            if (dis[i][j]!=INFF&&legal(i+d,j+r)&&dis2[i+d][j+r]!=INFF)\n                ans = min(ans, dis[i][j] + dis2[i + d][j + r] + 1);\n    if (ans==INFF)\n        ans = -1;\n    printf(\"%d\", ans);\n    return 0;\n}\nvoid fake_spfa(int x,int y,int dis[][maxn])\n{\n    int nx, ny,i;\n    if (map[x][y]!='#')\n    {\n        dis[x][y] = 0;\n        que.push(make_pair(x, y));\n    }\n    while (que.size())\n    {\n        x=que.front().first,y=que.front().second;\n        que.pop();\n        for(i = 0; i < 4; i++)\n        {\n            nx = x + dir[i][0], ny = y + dir[i][1];\n            if (legal(nx,ny)&&map[nx][ny]!='#'&&dis[nx][ny]==INFF)\n            {\n                dis[nx][ny] = dis[x][y] + 1;\n                que.push(make_pair(nx, ny));\n            }\n        }\n    }\n    return;\n}\ninline bool legal(int x,int y)\n{\n    return (x >= 1 && y >= 1 && x <= h && y <= w);\n}\n```",
        "postTime": 1548783645,
        "uid": 128307,
        "name": "saipubw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3818 \u3010\u5c0fA\u548cuim\u4e4b\u5927\u9003\u79bb II\u3011"
    },
    {
        "content": "\u6838\u5fc3\u7b97\u6cd5\uff1a**BFS**\n\nPS\uff1a\u8fd9\u91cc\u7528\u7684\u662f\u624b\u5199\u961f\u5217\uff0c\u4e0d\u7136\u5728\u6211\u4eec\u8001\u5e08\u7684\u6bd2\u7624OJ\u4e0a\u4f1a\u88ab\u5361\u6210TLE\u3002\n\n\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53Node\u6765\u4fdd\u5b58\u72b6\u6001\uff0cxy\u8868\u793a\u5750\u6807\uff0cfly\u8868\u793a\u8fd8\u80fd\u7528\u9b54\u6cd5\u7684\u6b21\u6570\uff08\u7531\u9898\u610f\u5e94\u521d\u59cb\u5316\u4e3a1\uff09\uff0cN\u5219\u662f\u8fbe\u5230\u8be5\u72b6\u6001\u7684\u6700\u5c0f\u6b65\u6570\u3002\n\n\u8fd9\u91ccvis\u6570\u7ec4\u7528\u6765\u5224\u91cd\uff0c\u9632\u6b62\u8d70\u8fc7\u591a\u4f59\u7684\u72b6\u6001\u3002\n\nflag\u4fdd\u5b58\u662f\u5426\u80fd\u5230\u8fbe\u7ec8\u70b9\u3002\n\n\u6bcf\u6b21\u679a\u4e3e\u56db\u4e2a\u65b9\u5411\uff0c\u5c06\u80fd\u8d70\u5230\u7684\u70b9\u5165\u961f\uff1b\u5982\u679c\u80fd\u591f\u4f7f\u7528\u9b54\u6db2\uff0c\u5219\u5c06\u4f7f\u7528\u4e86\u9b54\u6db2\u7684\u60c5\u51b5\u5165\u961f\u3002\u5e76\u4e0d\u9700\u8981\u50cf\u4e00\u4e9b\u7a0b\u5e8f\u4e00\u6837\u5f00\u4e09\u4e2a\u961f\u5217qwq\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define reg register\nconst int dx[4]={0,0,1,-1},dy[4]={1,-1,0,0};\nchar mp[1001][1001];\nstatic int vis[1001][1001][2],m,n,flag,val,d,r;\nstruct Node{\n    int x,y,fly,N;\n    Node(){}//\u8fd9\u91cc\u91c7\u7528\u4e86\u6784\u9020\u51fd\u6570\u7684\u5199\u6cd5\u3002\n    Node(int xx,int yy,int dd,int nn):x(xx),y(yy),fly(dd),N(nn){}\n};\ninline bool okay(int x,int y,int fly){//\u5224\u65ad\u8be5\u72b6\u6001\u662f\u5426\u5408\u7406\n\treturn x>=0&&x<m&&y>=0&&y<n&&mp[x][y]=='.'&&vis[x][y][fly]==0;\n}\nNode q[2000010];\nint main(){\n    scanf(\"%d%d%d%d\",&m,&n,&d,&r);\n    for(reg int i=0;i<m;++i)\n        scanf(\"%s\",mp+i);\n    int head=0,tail=0;\n    q[tail++]=Node(0,0,1,0);\n    vis[0][0][d]=1;\n    while(head<tail){\n        Node p=q[head++];\n        if(p.x==m-1&&p.y==n-1){\n            flag=1,val=p.N;//\u8fbe\u5230\u76ee\u6807\u72b6\u6001\n            break;\n        }\n        for(reg int i=0;i<4;++i)//\u4e0d\u4f7f\u7528\u9b54\u6db2\u7684\u60c5\u51b5\n            if(okay(p.x+dx[i],p.y+dy[i],p.fly))\n                q[tail++]=Node(p.x+dx[i],p.y+dy[i],p.fly,p.N+1),\n                vis[p.x+dx[i]][p.y+dy[i]][p.fly]=1;//\u65b0\u72b6\u6001\u5165\u961f\n        if(okay(p.x+d,p.y+r,p.fly-1)&&p.fly==1)//\u82e5\u8fd8\u80fd\u4f7f\u7528\u9b54\u6db2\uff0c\u5219\u8003\u8651\u4f7f\u7528\u9b54\u6db2\u7684\u60c5\u51b5\n                q[tail++]=Node(p.x+d,p.y+r,p.fly-1,p.N+1),\n                vis[p.x+d][p.y+r][p.fly-1]=1;//\u65b0\u72b6\u6001\u5165\u961f\n    }\n    if(flag)printf(\"%d\",val);//\u82e5\u80fd\u5230\u8fbe\u7ec8\u70b9\u8f93\u51fa\u6700\u5c0f\u6b65\u6570\n    else printf(\"-1\");\n    return 0;\n}\n```\n\u6700\u540e\u9644\u4e0a\u4e00\u9053\u7c7b\u4f3c\u7684\u9898\u76ee\uff1a[\u98de\u8d8a\u539f\u91ce](https://www.cppentry.com/bencandy.php?fid=49&id=101487)\n\n\u6211\u7684\u4ee3\u7801\uff08\u5927\u5bb6\u53ef\u4ee5\u770b\u5230\u548c\u8fd9\u9898\u662f\u60ca\u4eba\u7684\u76f8\u4f3c\uff09\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define reg register\nconst int dx[4]={0,0,1,-1},dy[4]={1,-1,0,0};\nchar mp[101][101];\nstatic int vis[101][101][101],m,n,flag,val,d;\nstruct Node{\n    int x,y,fly,N;\n    Node(){}\n    Node(int xx,int yy,int dd,int nn):x(xx),y(yy),fly(dd),N(nn){}\n};\ninline bool okay(int x,int y,int fly){\n    return x>=0&&x<m&&y>=0&&y<n&&mp[x][y]=='P'&&vis[x][y][fly]==0;\n}\nNode q[1000010];\nint main(){\n    scanf(\"%d%d%d\",&m,&n,&d);\n    for(reg int i=0;i<m;++i)\n        scanf(\"%s\",mp+i);\n    int head=0,tail=0;\n    q[tail++]=Node(0,0,d,0);\n    vis[0][0][d]=1;\n    while(head<tail){\n        Node p=q[head++];\n        if(p.x==m-1&&p.y==n-1){\n            flag=1,val=p.N;\n            break;\n        }\n        for(reg int i=0;i<4;++i)\n            if(okay(p.x+dx[i],p.y+dy[i],p.fly))\n                q[tail++]=Node(p.x+dx[i],p.y+dy[i],p.fly,p.N+1),\n                vis[p.x+dx[i]][p.y+dy[i]][p.fly]=1;\n        for(reg int i=0;i<4;++i)\n            for(reg int j=2;j<=p.fly;++j)\n                if(okay(p.x+dx[i]*j,p.y+dy[i]*j,p.fly-j))\n                    q[tail++]=Node(p.x+dx[i]*j,p.y+dy[i]*j,p.fly-j,p.N+1),\n                    vis[p.x+dx[i]*j][p.y+dy[i]*j][p.fly-j]=1;\n    }\n    if(flag)printf(\"%d\",val);\n    else printf(\"impossible\");\n    return 0;\n}\n```",
        "postTime": 1547288476,
        "uid": 75765,
        "name": "Starlight237",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3818 \u3010\u5c0fA\u548cuim\u4e4b\u5927\u9003\u79bb II\u3011"
    },
    {
        "content": "\u8fd9\u9898\u76ee\u5176\u5b9e\u662f\u4e00\u9053\u5178\u578b\u7684bfs\u89e3\u8ff7\u5bab\u95ee\u9898\uff0c\u552f\u4e00\u7684\u96be\u5ea6\u5728\u4e8e\u53ef\u4ee5\u4f7f\u7528\u9b54\u6cd5\uff0c\u800c\u4e14\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u591a\u5efa\u7acb\u4e00\u5f20\u8868\u5b58\u4f7f\u7528\u9b54\u6cd5\u540e\u7684\u60c5\u51b5\u3002\n\u4ee3\u7801\uff1a\n```pascal\nconst z:array[1..4,1..2]of -1..1=((1,0),(-1,0),(0,1),(0,-1));//\u56db\u4e2a\u65b9\u5411\nvar i,j,k:longint;\n    m,n:longint;\n    h,t:longint;          //\u7b2c\u4e8c\u5f20\u8868\u4e3a0\uff0c\u539f\u8868\u4e3a1\n    a:array[0..1001,0..1001,0..1]of boolean;\n    x,y,u,p:array[0..2000001]of longint;\n    d,r:longint;\n    ch:char;\nbegin\n  readln(m,n,d,r);\n  for i:=1 to m do\n  begin\n    for j:=1 to n do\n    begin\n      read(ch);\n      if ch='.' then\n      begin\n        a[i,j,0]:=true;\n        a[i,j,1]:=true;\n      end\n      else\n      begin\n        a[i,j,0]:=false;\n        a[i,j,1]:=false;\n      end;\n    end;\n    readln;\n  end;\n  p[1]:=1;\n  x[1]:=1;\n  y[1]:=1;\n  u[1]:=0;\n  h:=1;\n  t:=1;\n  repeat\n    if (x[t]=m) and (y[t]=n) then//\u5230\u7ec8\u70b9\u65f6\uff0c\u8f93\u51fa\n    begin\n      write(u[t]);\n      exit;\n    end;\n    for i:=1 to 4 do//\u6b63\u5e38\u641c\u7d22\uff0c\u6a21\u677f\n    if a[x[t]+z[i,1],y[t]+z[i,2],p[t]] then\n    begin\n      a[x[t]+z[i,1],y[t]+z[i,2],p[t]]:=false;\n      inc(h);\n      p[h]:=p[t];//\u4fdd\u7559\u4e4b\u524d\u662f\u5426\u4f7f\u7528\u9b54\u6cd5\n      x[h]:=x[t]+z[i,1];\n      y[h]:=y[t]+z[i,2];\n      u[h]:=u[t]+1;\n    end;\n    if p[t]=1 then//\u4e4b\u524d\u6ca1\u6709\u4f7f\u7528\u8fc7\u9b54\u6cd5\n    begin\n      if (x[t]+d>0) and (y[t]+r>0) and (x[t]+d<=m) and (y[t]+r<=n) then//\u56e0\u4e3a\u4f7f\u7528\u9b54\u6cd5\u53ef\u80fd\u4f1a\u8d85\u8fc7\u8fb9\u754c\uff0c\u6240\u4ee5\u8981\u7279\u5224\u4e00\u4e0b\n      if a[x[t]+d,y[t]+r,0] then//\u5904\u7406\u65b9\u6cd5\u4e0e\u6b63\u5e38\u76f8\u540c\n      begin\n        inc(h);\n        a[x[t]+d,y[t]+r,0]:=false;\n        x[h]:=x[t]+d;\n        y[h]:=y[t]+r;\n        u[h]:=u[t]+1;\n        p[h]:=0;//\u8bb0\u5f55\u4e3a\u7528\u8fc7\u9b54\u6cd5\n      end;\n    end;\n    inc(t);\n  until t>h;\n  write(-1);//\u65e0\u89e3\nend.\n```\n",
        "postTime": 1544883077,
        "uid": 86625,
        "name": "Limit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3818 \u3010\u5c0fA\u548cuim\u4e4b\u5927\u9003\u79bb II\u3011"
    },
    {
        "content": "#### \u4f5c\u4e3a\u4e00\u4e2a\u849f\u84bb\uff0c\u4e4b\u524d\u770b\u8fd9\u9053\u9898\u76ee\uff0c\u7b2c\u4e00\u611f\u89c9\u662f\uff1a\u8fd9\u4e0d\u662fDP\u5417\uff1f\u7136\u540e\u987a\u624b\u63a8\u4e86\u51e0\u4e2a\u6837\u4f8b\u90fd\u8fc7\u4e0d\u4e86\u7684\u65b9\u7a0b\u51fa\u6765\u3002\u3002\u3002\u540e\u6765\u60f3\u4e00\u4e0b\u624d\u53d1\u73b0\u56e0\u4e3aDP\u662f\u626b\u7684\u65b9\u5f0f\u6765\u8ba1\u7b97\u7684\uff0c\u6240\u4ee5\u626b\u5230\u67d0\u4e00\u884c\u7684\u65f6\u5019\u90a3\u91cc\u53ef\u80fd\u8fd8\u6ca1\u66f4\u65b0\uff0c\u5c31\u4f1a\u5bfc\u81f4\u4e00\u4e9bgg\u7684\u4e8b\u60c5\u53d1\u751f\u3002\u3002\u3002\n\n#### \u8fd9\u4e2a\u9898\u6b63\u89e3\u662fBFS\uff0c\u524d\u9762dalao\u4eec\u90fd\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u6211\u5c31\u53ea\u628a\u6211\u4e4b\u524d\u8fc7\u7a0b\u4e2d\u6ca1\u641e\u61c2\u7684\u5728\u8fd9\u91cc\u8d34\u4e00\u4e0b\uff0c(\u5982\u679c\u53d1\u51fa\u6765\u4e86)\u8bf7\u914d\u5408\u5176\u4ed6dalao\u4eec\u7684BFS\u4ee3\u7801\u98df\u7528\u3002\u3002\n\n#### \u56e0\u4e3a\u6211\u592a\u5f31\u4e86\u6240\u4ee5\u60f3\u8981\u628a\u8fd9\u4e9b\uff08\u53ef\u80fd\u5f88\u5e38\u8bc6\u7684\uff09\u4e1c\u897f\u8bb0\u4e00\u4e0b\uff0c\u6c42\u8f7b\u55b7\u3002\u3002\n\n### Q1:\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u7528DP\uff1f\n### A1:\u503c\u4f1a\u51fa\u73b0\u66f4\u65b0\u4e0d\u5230\u7684\u60c5\u51b5\uff0c\u6ca1\u6cd5\u8f6c\u79fb\u3002\n### Q2:\u4e3a\u4ec0\u4e48BFS\u8fc7\u7a0b\u4e2d\u4e0d\u9700\u8981\u52a0min\u6765\u66f4\u65b0\u6b65\u6570\u6700\u5c0f\u503c\uff1f\n### A2:\u56e0\u4e3aBFS\u672c\u6765\u5c31\u662f\u6309\u5c42\u904d\u5386\uff0c\u53ea\u8981\u641c\u5230\u4e00\u5b9a\u5c31\u662f\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u66f4\u65b0\u3002\n### Q3:\u4e3a\u5565\u8981\u901a\u8fc7\u5224\u65ad\u6709\u6ca1\u6709\u503c\u6765\u786e\u5b9a\u662f\u5426\u641c\u5b8c\uff1f\n### A3:\u540cQ2\uff0c\u53ea\u8981\u6709\u503c\u5c31\u4e00\u5b9a\u662f\u6700\u5c0f\u503c\uff0c\u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u505c\u6b62\u641c\u7d22\u4e86\u3002\n",
        "postTime": 1535676790,
        "uid": 58698,
        "name": "Nativ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3818 \u3010\u5c0fA\u548cuim\u4e4b\u5927\u9003\u79bb II\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1Pas\u9898\u89e3\n\n\n\u672c\u9898 **\u7eafBFS**\n\n\n\u552f\u4e00\u6709\u4e00\u70b9 ~~\u795e\u5947\u7684\u5730\u65b9~~ \u5c31\u662f\n\n\n> \u55d1\u836f\uff01\n\n\u81f3\u4e8e\u5982\u4f55\u89e3\u51b3\u55d1\u836f\u540e\u7684\u8def\u5f84\u4e0e\u55d1\u836f\u524d\u51b2\u7a81\n\n\n\u5f00\u4e24\u4e2a\u6570\u7ec4**\u5206\u522b\u8bb0\u5f55**\u5c31\u884c\u5566\n\n```cpp\ntype node=\n    record\n        x,y,step:longint;\n        f:boolean;//\u5230\u8fbe\u8fd9\u4e2a\u8282\u70b9\u65f6\u662f\u5426\u78d5\u8fc7\u836f\n    end;\nvar q:array[1..10000000] of node;\n    a,b:array[-2000..2000,-2000..2000] of boolean;//\u8bb0\u4f4f\u4e00\u5b9a\u8981\u4ece\u8d1f\u6570\u5f00\u542f\uff01\uff01\uff01\n    dx,dy:array[1..5] of longint;\n    ch:char;\n    i,j,n,m,h,w,l,r,x,y,nx,ny,s:longint;\nbegin\n    readln(n,m,h,w);\n    //\u7b2c\u4e94\u4e2a\u65b9\u5411\u5c31\u662f\u55d1\u836f\uff01\n    dx[1]:=1;dx[2]:=0;dx[3]:=-1;dx[4]:=0;dx[5]:=h;\n    dy[1]:=0;dy[2]:=1;dy[3]:=0;dy[4]:=-1;dy[5]:=w;\n    //\u8bfb\u5165\n    for i:=1 to n do \n    begin\n        for j:=1 to m do \n        begin    \n            read(ch);\n            if ch='#' then a[i][j]:=false else a[i][j]:=true;\n        end;\n        readln;\n    end;\n    l:=0;r:=1;\n    q[1].x:=1;q[1].y:=1;q[1].step:=0;\n    a[1][1]:=false;\n    b:=a;//\u53cc\u6570\u7ec4\u5224\u91cd\n    while l<=r do\n    begin\n        inc(l);x:=q[l].x;y:=q[l].y;s:=q[l].step;//\u521d\u59cb\u5316\n        if (x=n)and(y=m) then\n        begin\n            writeln(s);break;\n        end;\n        for i:=1 to 5 do \n        begin\n            if (i=5)and(q[l].f) then break;//\u836f\u53ea\u6709\u4e00\u74f6\uff0c\u55d1\u5b8c\u4e86\u5c31\u6ca1\u4e86\n            nx:=x+dx[i];ny:=y+dy[i];\n            //\u5982\u679c\u6ca1\u55d1\u836f\u5c31\u7528\u6ca1\u55d1\u836f\u7684\u5224\u91cd\uff0c\u5982\u679c\u55d1\u836f\u4e86\u5c31\u7528\u55d1\u836f\u540e\u7684\u5224\u91cd\n            if ((a[nx][ny])and(not(q[l].f)))or((b[nx][ny])and(q[l].f)) then \n            begin\n                if (q[l].f)or(i=5) then b[nx][ny]:=false\n                else begin\n                    //\u9632\u6b62\u55d1\u836f\u540e\u8fdb\u5165\u5230\u4e4b\u524d\u7684\u5730\u65b9\n                    a[nx][ny]:=false;\n                    b[nx][ny]:=false;\n                end;\n                inc(r);q[r].x:=nx;q[r].y:=ny;q[r].step:=s+1;q[r].f:=q[l].f;\n                if i=5 then q[r].f:=true;//\u78d5\u8fc7\u836f\u4e86\u3002\u3002\n            end;\n        end;\n    end;\n    if (x<>n)and(y<>m) then writeln(-1);//\u6ca1\u627e\u5230\u5c31\u6eda\n    \nend.\n```",
        "postTime": 1505484404,
        "uid": 16730,
        "name": "\u5fa1\u5742\u5fa1\u5742",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3818 \u3010\u5c0fA\u548cuim\u4e4b\u5927\u9003\u79bb II\u3011"
    }
]