[
    {
        "content": "# \u76ee\u5f55\uff1a\n\n1. \u524d\u7f6e\u77e5\u8bc6\n2. \u524d\u7f6e\u77e5\u8bc6\u8bb2\u89e3\n3. \u6700\u5c0f\u5706\u8986\u76d6\u7684\u6700\u201c\u7384\u5b66\u201d\u4e4b\u5904\n4. \u8bb2\u89e3\u672c\u9898\n5. \u65cb\u8f6c\u5750\u6807\u7cfb\n6. \u4f18\u5316\n7. \u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\n\n## \u524d\u7f6e\u77e5\u8bc6\n[\u6700\u5c0f\u5706\u8986\u76d6](https://www.luogu.com.cn/problem/P1742)\u3002\n\n## \u524d\u7f6e\u77e5\u8bc6\u8bb2\u89e3\n\n\u4f1a\u505a\u8fd9\u9898\u5176\u5b9e\u5bf9\u672c\u9898\u6709\u5e2e\u52a9\u3002\n\u8fd9\u9898\u5176\u5b9e\u53ef\u4ee5\u7528**\u51e0\u4f55\u7b97\u6cd5**\u4ee5\u53ca**\u6a21\u62df\u9000\u706b**\u6765\u505a\u3002\n\n\u4e0d\u8fc7\u6a21\u62df\u9000\u706b\u76f8\u5bf9\u6765\u8bb2\u4f1a\u5f88\u590d\u6742\uff0c\u9700\u8981\u8c03\u5f88\u591a\u53c2\u6570\u2026\u2026\u6bd4\u5982**\u521d\u59cb\u6e29\u5ea6\u3001\u964d\u6e29\u7cfb\u6570**\u7b49\uff0c\u5f88\u9ebb\u70e6\u3002\n\n\u56e0\u6b64\u6211\u4eec\u91c7\u7528 **\u51e0\u4f55\u7b97\u6cd5** \u89e3\u51b3\u8fd9\u9053\u9898\u76ee\uff01\uff01\uff01\n\n\u6765\u770b\u4e00\u4e0b\u6211\u89e3\u51b3\u201c\u6700\u5c0f\u5706\u8986\u76d6\u201d\u7684\u601d\u8def\uff1a\n\n------------\n\n\u5f53 $n=1$ \u7684\u65f6\u5019\uff0c\u6700\u5c0f\u5706\u8986\u76d6\u5f53\u7136\u5706\u5fc3\u662f\u7b2c\u4e00\u4e2a\u70b9 $p_1$\uff0c\u534a\u5f84\u4e3a $0$\u3002\n\n\u5f53 $n=2$ \u7684\u65f6\u5019\uff0c\u6700\u5c0f\u5706\u8986\u76d6\u5c31\u662f **\u201c\u4e24\u70b9\u5b9a\u5706\u201d** \uff0c\u5706\u5fc3\u662f $p_1p_2$ \u7ebf\u6bb5\u7684\u4e2d\u5fc3\uff0c\u534a\u5f84\u662f\u7ebf\u6bb5\u957f\u5ea6\u7684\u4e00\u534a\u3002\n\n\u5f53 $n=3$ \u7684\u65f6\u5019\uff0c\u6700\u5c0f\u5706\u8986\u76d6\u5c31\u590d\u6742\u70b9\u4e86\u3002\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\n\t\n1. $p_3$ \u5728\u4e0a\u4e00\u4e2a\u5706\u7684\u5706\u5468\u4e0a\u6216\u5706\u5185\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0d\u4f1a\u5f71\u54cd\u6700\u5c0f\u5706\u8986\u76d6\uff0c\u5ffd\u7565\u8fd9\u4e2a\u70b9\u3002\n\n2. $p_3$ \u5728\u4e0a\u4e00\u4e2a\u6700\u5c0f\u5706\u8986\u76d6\u5706\u4e4b\u5916\u3002\u8fd9\u4e2a\u65f6\u5019 $p_3$ **\u4e00\u5b9a\u5728\u524d\u4e09\u4e2a\u70b9\u7684\u6700\u5c0f\u5706\u8986\u76d6\u7684\u5706\u5468\u4e0a**\uff0c\u624d\u80fd\u6ee1\u8db3\u201c\u6700\u5c0f\u201d\u7684\u6027\u8d28\u3002\u90a3\u4e48\u73b0\u5728\u539f\u95ee\u9898\u8f6c\u5316\u4e3a\u5b50\u95ee\u9898\uff1a\u4ece $p_1p_2$ \u4e2d\u627e\u51fa\u4e00\u6216\u4e24\u4e2a\u70b9\uff0c\u4e0e\u70b9 $p_3$ **\u4e24\u70b9\u5b9a\u5706\u6216\u4e09\u70b9\u5b9a\u5706**\u3002\n\n\u5f53 $n=4$ \u7684\u65f6\u5019\uff0c\u4e0e $n=3$ \u7684\u65f6\u5019\u540c\u7406\uff0c\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff0c\u7b2c\u4e00\u79cd\u76f4\u63a5\u5ffd\u7565\u8fd9\u4e2a\u70b9\uff0c\u7b2c\u4e8c\u79cd\u5219\u662f\u4ece\u524d\u9762\u7684\u70b9\u4e2d\u6311\u51fa\u4e00\u6216\u4e24\u4e2a\u4e0e $p_4$ \u4e00\u8d77\u5b9a\u5706\u3002\n\n\u6700\u540e\u628a\u6240\u6709\u7684\u70b9\u90fd\u52a0\u5165\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5f97\u51fa\u6700\u5c0f\u5706\u8986\u76d6\u3002\n\n\n\u4f46\u662f\u6211\u4eec\u5206\u6790\u4e00\u4e0b\uff0c\u4f1a\u53d1\u73b0\uff1a\u9700\u8981\u4e00\u5c42\u5faa\u73af\u679a\u4e3e\u6240\u6709\u7684\u70b9\u8fdb\u884c\u52a0\u5165\uff0c\u4e00\u5c42\u5faa\u73af\u6765\u679a\u4e3e\u4e24\u70b9\u5b9a\u5706\uff0c\u8fd8\u9700\u8981\u4e00\u5c42\u5faa\u73af\u6765\u679a\u4e3e\u7b2c\u4e09\u4e2a\u70b9\u5b9a\u5706\u2026\u2026\u6240\u4ee5\u8fd9\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^3)$ \u7684\uff01\n\n\u56e0\u4e3a\u9898\u76ee\u4e2d\uff0c\u5bf9\u4e8e $100\\%$ \u7684\u6570\u636e\uff0c$1\\leq N\\leq 10^5$\uff0c$|x_i|,|y_i|\\leq 10^4$\u3002\n\n\u5728\u8fd9\u4e2a\u9898\u76ee\u7684\u6570\u636e\u8303\u56f4\u4e0b\uff0c\u663e\u7136\u662f\u8fc7\u4e0d\u4e86\u7684\uff01\n\n### \u6700\u5c0f\u5706\u8986\u76d6\u7684\u6700\u201c\u7384\u5b66\u201d\u4e4b\u5904\n\n\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u9700\u8981\u5728\u6c42\u89e3\u4e4b\u524d\uff0c\u7528 STL \u51fd\u6570 `random_shuffle()` \u6253\u4e71\u8fd9\u4e9b\u70b9\u3002\n\n\u8fd9\u9898\u7684\u7384\u5b66\u4e4b\u5904\u5c31\u662f\u5728\u4e8e\u6b64\uff0c\u5728**\u968f\u673a\u60c5\u51b5\u4e0b**\u5b83\u7684\u6548\u7387\u671f\u671b\u662f**\u7ebf\u6027\u7684**\u3002\n\n\u53ef\u4ee5\u7ed3\u5408\u4ee3\u7801\u7406\u89e3\u4e00\u4e0b\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define eps 1e-8\n\nconst int N = 500010;\n\nint sgn(double x) {\n    if (fabs(x) < eps) return 0;\n    if (x < 0) return -1;\n    return 1;\n}\n\nstruct Point {\n    double x, y;\n};\n\ndouble Distance(Point A, Point B) {\n    return hypot(A.x - B.x, A.y - B.y);\n}\n\nPoint circle_center(const Point a, const Point b, const Point c) {\n    Point center;\n    double a1 = b.x - a.x, b1 = b.y - a.y, c1 = (a1 * a1 + b1 * b1) / 2;\n    double a2 = c.x - a.x, b2 = c.y - a.y, c2 = (a2 * a2 + b2 * b2) / 2;\n    double d = a1 * b2 - a2 * b1;\n    center.x = a.x + (c1 * b2 - c2 * b1) / d;\n    center.y = a.y + (a1 * c2 - a2 * c1) / d;\n    return center;\n}\n\nvoid min_cover_circle(Point * p, int n, Point &c, double &r) {\n    random_shuffle(p + 1, p + 1 + n);\n    c = p[1]; r = 0;\n    for (int i = 2; i <= n; i++) {\n        if (sgn(Distance(p[i], c) - r) > 0) {\n            c = p[i]; r = 0;\n            for (int j = 1; j < i; j++)\n                if (sgn(Distance(p[j], c) - r) > 0) {\n                    c.x = (p[i].x + p[j].x) / 2;\n                    c.y = (p[i].y + p[j].y) / 2;\n                    r = Distance(p[j], c);\n                    for (int k = 1; k < j; k++)\n                        if (sgn(Distance(p[k], c) - r) > 0) {\n                            c = circle_center(p[i], p[j], p[k]);\n                            r = Distance(p[i], c);\n                        }\n                }\n        }\n    }\n}\n\nint main() {\n    int n; Point p[N], c; double r;\n    while (~scanf(\"%d\", &n) && n) {\n        for (int i = 1; i <= n; i++) scanf(\"%lf%lf\", &p[i].x, &p[i].y);\n        min_cover_circle(p, n, c, r);\n        printf(\"%.10lf\\n%.10lf %.10lf\", r, c.x, c.y);\n    }\n    return 0;\n}\n```\n\n\u4ee5\u4e0a\u7684\u8bb2\u89e3\u53ea\u662f\u4e3a\u4e86\u8ba9\u8bfb\u8005\u66f4\u6e05\u695a\u601d\u8def\uff0c\u63a5\u4e0b\u6765\u770b\u770b\u8fd9\u4e00\u9898\u8981\u600e\u4e48\u505a\u3002\n\n## \u8bb2\u89e3\u672c\u9898\n\n\u9898\u76ee\u7684\u610f\u601d\u5c31\u662f\u7528\u4e24\u4e2a\u76f8\u540c\u5927\u5c0f\u7684\u5706\u8986\u76d6\u5e73\u9762\u6240\u6709\u7684\u70b9\uff0c\u6c42\u5706\u7684\u6700\u5c0f\u534a\u5f84\uff0c\u56e0\u6b64\u5b83\u79f0\u4f5c\u6700\u5c0f\u8986\u76d6\u53cc\u5706\u95ee\u9898\u3002\n\n\u5f88\u663e\u7136\u7684\uff0c\u65e2\u7136\u8981\u5206\u6210\u4e24\u4e2a\u5706\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f\u7528\u4e00\u6761\u76f4\u7ebf\u5206\u5272\u6210\u4e24\u4e2a\u70b9\u96c6\uff0c\u7136\u540e\u5206\u522b\u6c42\u51fa\u4e24\u4e2a\u70b9\u96c6\u7684\u6700\u5c0f\u5706\u8986\u76d6\u7684\u534a\u5f84 $r_1r_2$\uff0c\u7b54\u6848\u5c31\u662f $\\max(r1,r2)$\u3002\n\n\u8981\u6c42\u51fa\u8fd9\u6761\u76f4\u7ebf\u7684\u4f4d\u7f6e\uff0c\u5176\u5b9e\u5f88\u5bb9\u6613\u5730\u53ef\u4ee5\u60f3\u5230\u7528**\u4e8c\u5206**\u3002\n\n## \u65cb\u8f6c\u5750\u6807\u7cfb\n\n\u8fd9\u91cc\u6240\u8bf4\u7684\u662f\uff1a\u7528**\u4e8c\u5206**\u6c42\u51fa\u4e00\u6761**\u4e0e $X$ \u8f74\u5782\u76f4\u7684**\u76f4\u7ebf\uff0c\u7136\u540e\u518d\u6c42\u89e3\u3002\n\n\u4f46\u662f\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\u672a\u8003\u8651\u2014\u2014\u5982\u679c\u6b63\u89e3\u662f\u659c\u7740\u753b\u4e00\u6761\u76f4\u7ebf\u5462\uff1f\n\n\u53ef\u4ee5\u5927\u80c6\u5730\u731c\u60f3\uff1a\u65e2\u7136\u6211\u4eec\u4e0d\u80fd\u63a7\u5236\u76f4\u7ebf\u7684\u89d2\u5ea6\uff0c\u90a3\u6211\u4eec\u5c31\u5e72\u8106**\u628a\u6574\u4e2a\u5750\u6807\u7cfb\u65cb\u8f6c**\uff01\u8fd9\u4e2a\u60f3\u6cd5\u867d\u7136\u6709\u4e9b\u75af\u72c2\uff0c\u4f46\u662f\u5b83\u5176\u5b9e\u662f\u6b63\u89e3\uff01\n\n\u6bcf\u6b21\u65cb\u8f6c\u4e4b\u540e\u90fd\u6c42\u4e00\u6b21\u6700\u5c0f\u53cc\u5706\u8986\u76d6\uff0c\u7136\u540e\u518d\u53d6\u6700\u4f18\u503c\u5373\u662f\u7b54\u6848\u3002\u95ee\u9898\u5c31\u5728\u4e8e\u5982\u4f55\u5bf9\u6bcf\u4e2a\u70b9\u8fdb\u884c\u201c\u65cb\u8f6c\u201d?\n\n\u4e3a\u4e86\u4fdd\u8bc1\u9898\u89e3\u7684\u4e25\u8c28\uff0c\u6211\u4e0a\u7f51\u641c\u4e86\u4e00\u5f20\u56fe\u7247\u8bf4\u660e\u3002\n\n![QQ\u622a\u56fe20220917182333.png](https://cdn.acwing.com/media/article/image/2022/09/17/86777_de03522a36-QQ\u622a\u56fe20220917182333.png) \n\n\u5bf9\u4e8e\u8fd9\u4e2a\u5750\u6807\u7cfb\uff0c\u53ea\u9700\u8981\u65cb\u8f6c $180$ \u5ea6\u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3a\u628a\u5750\u6807\u7cfb\u65cb\u8f6c $180$ \u5ea6\u540e\u5c31\u53c8\u56de\u5230\u4e86\u7b2c\u4e00\u6b21\u8ba1\u7b97\u7684\u95ee\u9898\u3002\n\n\u63a8\u5bfc\u4e86\u8fd9\u4e48\u591a\uff0c\u5bf9\u4e8e\u201c\u6700\u5c0f\u53cc\u5706\u8986\u76d6\u201d\u90e8\u5206\u5c31\u80fd\u76f4\u63a5\u5957\u4e0a\u4e00\u9898\u7684\u6a21\u677f\uff0c\u518d\u52a0\u4e0a\u4e00\u4e9b\u989d\u5916\u7684\u5750\u6807\u7cfb\u65cb\u8f6c\u3001\u4e8c\u5206\uff0c\u8fd9\u9898\u5c31\u53ef\u4ee5\u5f97\u5230\u89e3\u51b3\u4e86\u3002\n\n## \u4f18\u5316\n\n\u4f46\u662f\u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684**\u4f18\u5316**\uff1a\u5728\u4e8c\u5206\u7684\u65f6\u5019\uff0c\u5982\u679c\u5f53\u524d\u7684 $\\min(r1,r2)$ \u65e0\u6cd5\u66f4\u65b0\u7b54\u6848\uff0c\u5219**\u540e\u9762\u90fd\u65e0\u6cd5\u66f4\u65b0\u7b54\u6848\uff0c\u76f4\u63a5\u9000\u51fa\u4e8c\u5206\u3002**\n\n\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u4f18\u5316\u5219\u4e4b\u540e $60$ \u5206\u2026\u2026\u4eb2\u6d4b\u4e86\uff0c\u6bcf\u6b21\u5199\u4ee3\u7801\u90fd\u8981\u6ce8\u610f\u4f18\u5316\u3002\n\n## \u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\n\n\u5206\u6790\u7684\u540c\u65f6\u987a\u4fbf\u56de\u987e\u4e00\u4e0b\u601d\u8def\uff0c\u8fd9\u91cc\u4e0d\u4f1a\u8ba1\u7b97\u6570\u636e\u7ec4\u6570\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff08\u6709\u9519\u8bf7\u6307\u51fa\uff0c\u8c22\u8c22\uff09\uff1a\n\n1. \u6bcf\u6b21\u9700\u8981\u679a\u4e3e\u5750\u6807\u7cfb**\u65cb\u8f6c\u7684\u5ea6\u6570** $180$\uff08\u5e38\u6570\u5927\u4e86\u70b9\uff09\u3002\n\n2. \u5e76\u4e14\u9700\u8981 $O(N)$ \u5bf9\u6bcf\u4e2a\u70b9**\u6539\u53d8\u4f4d\u7f6e**\u3002\n\n3. \u4e4b\u540e\u8fdb\u884c**\u4e8c\u5206**\uff08$\\log N$ \u7684\u6548\u7387\uff09\uff0c\u6bcf\u6b21\u4e8c\u5206\u5185\u9700\u8981\u505a\u4e24\u6b21 $O(N)$ \u7684**\u6700\u5c0f\u5706\u8986\u76d6**\uff0c\u6240\u4ee5\u4e8c\u5206\u7684\u590d\u6742\u5ea6\u662f $O(N \\log N)$ \u7684\u3002\n\n\u56e0\u6b64\u6211\u5206\u6790\u51fa\u7684\u603b**\u65f6\u95f4\u590d\u6742\u5ea6**\u662f\uff1a$O(180 \\times N \\log N)$\u3002\u56e0\u4e3a\u5e38\u6570\u8fc7\u5927\uff0c\u6211\u5c31\u628a\u8fd9\u4e2a $180$ \u7ed9\u6254\u8fdb\u53bb\u4e86\u2026\u2026\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n\n#define eps 1e-8\nconst double _ = 1.0 / 180 * acos(-1);\nconst double Cos = cos(_), Sin = sin(_);\n\nusing namespace std;\n\nconst int N = 1010;\ndouble r;\nstruct Point {\n    double x, y;\n} c, a[N], p[N];\n\ninline Point rotate(const Point &b) {\n    Point t;\n    t.x = b.x * Cos + b.y * Sin;\n    t.y = b.y * Cos - b.x * Sin;\n    return t;\n}\n\ninline int sgn(double x) {\n    if (fabs(x) < eps) return 0;\n    if (x < 0) return -1;\n    return 1;\n}\n\ninline Point circle_center(const Point a, const Point b, const Point c) {\n    Point center;\n    double a1 = b.x - a.x, b1 = b.y - a.y, c1 = (a1 * a1 + b1 * b1) / 2;\n    double a2 = c.x - a.x, b2 = c.y - a.y, c2 = (a2 * a2 + b2 * b2) / 2;\n    double d = a1 * b2 - a2 * b1;\n    center.x = a.x + (c1 * b2 - c2 * b1) / d;\n    center.y = a.y + (a1 * c2 - a2 * c1) / d;\n    return center;\n}\ninline double Dis(Point A, Point B) {\n    return hypot(A.x - B.x, A.y - B.y);\n}\ninline double min_cover_circle(int L, int R) {\n    if (L > R) return 0;\n    for (int i = L; i <= R; i++) a[i] = p[i];\n\n    random_shuffle(a + L, a + 1 + R);\n    c = a[L]; r = 0;\n    for (int i = L; i <= R; i++)\n        if (sgn(Dis(a[i], c) - r) > 0) {\n            c = a[i]; r = 0;\n            for (int j = L; j < i; j++)\n                if (sgn(Dis(a[j], c) - r) > 0) {\n                    c.x = (a[i].x + a[j].x) / 2;\n                    c.y = (a[i].y + a[j].y) / 2;\n                    r = Dis(c, a[j]);\n                    for (int k = L; k < j; k++)\n                        if (sgn(Dis(a[k], c) - r) > 0) {\n                            c = circle_center(a[i], a[j], a[k]);\n                            r = Dis(a[k], c);\n                        }\n                }\n        }\n    return r;\n}\n\ninline int cmp(Point a, Point b) {\n    return a.x < b.x;\n}\n\nint main() {\n    int n;\n    while (scanf(\"%d\", &n), n) {\n        double R = 1e9;\n        for (int i = 1; i <= n; i++) scanf(\"%lf%lf\", &p[i].x, &p[i].y);\n        for (int i = 1; i <= 180; i++) {  //\u5750\u6807\u7cfb\u65cb\u8f6c\u679a\u4e3e\u6b21\u6570\n            for (int i = 1; i <= n; i++) p[i] = rotate(p[i]);\n            sort(p + 1, p + n + 1, cmp);\n            int l = 1, r = n;\n            while (l <= r) {\n                int mid = (l + r) / 2;\n                double R1 = min_cover_circle(1, mid), R2 = min_cover_circle(mid + 1, n);\n                if (min(R1, R2) > R) break; //\u526a\u679d\u4f18\u5316\uff0c\u4e0d\u7136\u4f1aTLE\n                if (R1 < R2) l = mid + 1;\n                else r = mid - 1;\n                R = min(R, max(R1, R2));\n            }\n        }\n        printf(\"%.2f\\n\", R);\n    }\n    return 0;\n}\n```",
        "postTime": 1663410395,
        "uid": 565040,
        "name": "AcWingfjyh",
        "ccfLevel": 6,
        "title": "P4586 [FJOI2015]\u6700\u5c0f\u8986\u76d6\u53cc\u5706\u95ee\u9898"
    },
    {
        "content": "## \u9898\u9762\n\n[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P4586)\n\n## \u524d\u7f6e\u829d\u58eb\n\n[\u6700\u5c0f\u5706\u8986\u76d6](https://www.cnblogs.com/bztMinamoto/p/10698920.html)\n\n## \u9898\u89e3\n\n\u6211\u4eec\u6309\u7167$x$\u5750\u6807\u6392\u5e8f\uff0c\u7136\u540e\u4e8c\u5206\u4e2d\u95f4\u70b9\uff0c\u628a\u70b9\u5206\u6210\u5de6\u53f3\u4e24\u8fb9\uff0c\u5bf9\u4e24\u8fb9\u90fd\u505a\u4e00\u4e2a\u6700\u5c0f\u5706\u8986\u76d6\uff0c\u90a3\u4e48\u534a\u5f84\u5927\u4e00\u70b9\u7684\u90a3\u4e2a\u5c31\u662f\u7b54\u6848\u4e86\u3002\u7136\u540e\u5bf9\u534a\u5f84\u5927\u7684\u90a3\u4e00\u8fb9\u7ee7\u7eed\u4e8c\u5206\u5c31\u884c\u4e86\n\n\u7136\u800c\u8fd9\u91cc\u663e\u7136\u4f1a\u6709\u4e00\u4e2a\u95ee\u9898\u2026\u2026\u5c31\u662f\u5982\u679c\u6700\u4f18\u89e3\u4e2d\u628a\u70b9\u5206\u6210\u4e24\u4e2a\u70b9\u96c6\u7684\u90a3\u6761\u76f4\u7ebf\u662f\u659c\u7684\u8be5\u600e\u4e48\u529e\u2026\u2026\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u6574\u4e2a\u5750\u6807\u7cfb\u8f6c\u4e00\u4e0b\u597d\u4e86\u2026\u2026\u679a\u4e3e\u4e00\u4e0b\u504f\u89d2\uff0c\u7136\u540e\u628a\u6240\u6709\u70b9\u9006\u65f6\u9488\u8f6c\u8fc7\u8fd9\u4e2a\u89d2\u5ea6\u2026\u2026\u5b9e\u6d4b\u5927\u6982\u6bcf\u6b21\u8f6c${2\\pi \\over 100}$\uff0c\u8f6c$100$\u6b21\u5dee\u4e0d\u591a\u5c31\u53ef\u4ee5\u4e86\n\n\u8fd8\u6709\u4e00\u4e2a\u6211\u5f88\u597d\u5947\u7684\u95ee\u9898\uff0c\u5982\u679c\u6709\u4e09\u70b9\u5171\u7ebf\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u6700\u5c0f\u5706\u8986\u76d6\u6c42\u4e24\u6761\u4e2d\u5782\u7ebf\u4ea4\u70b9\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e2d\u5782\u7ebf\u5e73\u884c\u7684\u60c5\u51b5\u663e\u7136\u662f\u4f1a$gg$\u7684\uff0c\u6240\u4ee5\u89e3\u51b3\u529e\u6cd5\u8981\u4e48\u662f\u7279\u5224\u5e73\u884c\u8981\u4e48\u662f\u52a0\u4e0a\u5fae\u5c0f\u6270\u52a8\u6765\u907f\u514d\u4e09\u70b9\u5171\u7ebf\uff0c\u7136\u800c\u6211\u770b\u4e86\u770b\u522b\u4eba\u7684\u4f3c\u4e4e\u90fd\u6ca1\u7ba1\u8fd9\u4e00\u70b9\u4e5f\u80fd$A$\u2026\u2026\n\n\u54ea\u4f4d\u9e3d\u9e3d\u80fd\u544a\u8bc9\u6211\u8fd9\u662f\u4e3a\u4ec0\u4e48\u4e48qwq\n\n```cpp\n//minamoto\n#include<bits/stdc++.h>\n#define R register\n#define inline __inline__ __attribute__((always_inline))\n#define fp(i,a,b) for(R int i=(a),I=(b)+1;i<I;++i)\n#define fd(i,a,b) for(R int i=(a),I=(b)-1;i>I;--i)\n#define go(u) for(int i=head[u],v=e[i].v;i;i=e[i].nx,v=e[i].v)\ntemplate<class T>inline bool cmin(T&a,const T&b){return a>b?a=b,1:0;}\nusing namespace std;\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline char getc(){return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;}\nint read(){\n    R int res,f=1;R char ch;\n    while((ch=getc())>'9'||ch<'0')(ch=='-')&&(f=-1);\n    for(res=ch-'0';(ch=getc())>='0'&&ch<='9';res=res*10+ch-'0');\n    return res*f;\n}\ndouble readdb()\n{\n    R double x=0,y=0.1,f=1;R char ch;\n    while((ch=getc())>'9'||ch<'0')(ch=='-')&&(f=-1);\n    for(x=ch-'0';(ch=getc())>='0'&&ch<='9';x=x*10+ch-'0');\n    for(ch=='.'&&(ch=getc());ch>='0'&&ch<='9';x+=(ch-'0')*y,y*=0.1,ch=getc());\n    return x*f;\n}\nconst int N=1005;const double an=1.0/100*acos(-1.0),eps=1e-9;\nconst double si=sin(an),co=cos(an);\ninline int sgn(R double x){return x<-eps?-1:x>eps;}\ninline double reps(){return (1.0*rand()/RAND_MAX-0.5)*eps;}\nstruct node{\n\tdouble x,y;\n\tinline node(){}\n\tinline node(R double xx,R double yy):x(xx),y(yy){}\n\tinline node operator +(const node &b)const{return node(x+b.x,y+b.y);}\n\tinline node operator -(const node &b)const{return node(x-b.x,y-b.y);}\n\tinline double operator *(const node &b)const{return x*b.y-y*b.x;}\n\tinline node operator *(const double &b)const{return node(x*b,y*b);}\n\tinline double operator ^(const node &b)const{return x*b.x+y*b.y;}\n\tinline double len2(){return x*x+y*y;}\n\tinline node rot(){return node(x*co-y*si,x*si+y*co);}\n\tinline node rot90(){return node(-y,x);}\n\tinline void shake(){x+=reps(),y+=reps();}\n}p[N],st[N],o;\ninline bool cmp(const node &a,const node &b){return a.x<b.x;}\nstruct Line{\n\tnode p,v;\n\tinline Line(){}\n\tinline Line(R node pp,R node vv):p(pp),v(vv){}\n\tfriend node cross(const Line &a,const Line &b){return a.p+a.v*(b.v*(b.p-a.p)/(b.v*a.v));}\n};\nnode circle(R node a,R node b,R node c){\n\treturn cross(Line((a+b)*0.5,(b-a).rot90()),Line((a+c)*0.5,(c-a).rot90()));\n}\ndouble query(int l1,int l2){\n\tif(l1>l2)return 0;\n\tint top=0;double r=0;o=node(0,0);\n\tfp(i,l1,l2)st[++top]=p[i];\n\trandom_shuffle(st+1,st+1+top);\n\tfp(i,1,top)if(sgn((st[i]-o).len2()-r)>0){\n\t\to=st[i],r=0;\n\t\tfp(j,1,i-1)if(sgn((st[j]-o).len2()-r)>0){\n\t\t\to=(st[i]+st[j])*0.5,r=(st[i]-o).len2();\n\t\t\tfp(k,1,j-1)if(sgn((st[k]-o).len2()-r)>0)\n\t\t\t\to=circle(st[i],st[j],st[k]),r=(st[i]-o).len2();\n\t\t}\n\t}\n\treturn r;\n}\nint n;double res;\nint main(){\n\tsrand(20030719);\n//\tfreopen(\"testdata.in\",\"r\",stdin);\n\twhile(n=read()){\n\t\tfp(i,1,n)p[i].x=readdb(),p[i].y=readdb(),p[i].shake();\n\t\tres=1e18;\n\t\tfp(d,1,160){\n\t\t\tfp(i,1,n)p[i]=p[i].rot();\n\t\t\tsort(p+1,p+1+n,cmp);\n\t\t\tint l=1,r=n;\n\t\t\twhile(l<=r){\n\t\t\t\tint mid=(l+r)>>1;\n\t\t\t\tdouble r1=query(1,mid),r2=query(mid+1,n);\n\t\t\t\tdouble ans=r1<r2?r2:r1;\n\t\t\t\tif(r1+r2-ans>res)break;\n\t\t\t\tcmin(res,ans);\n\t\t\t\tr1<r2?l=mid+1:r=mid-1;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%.2lf\\n\",sqrt(res));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1555114291,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4586 \u3010[FJOI2015]\u6700\u5c0f\u8986\u76d6\u53cc\u5706\u95ee\u9898\u3011"
    }
]