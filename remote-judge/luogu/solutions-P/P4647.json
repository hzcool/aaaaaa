[
    {
        "content": "\u5e06\u7684\u987a\u5e8f\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\uff0c\u5982\u679c\u4e00\u4e2a\u9ad8\u5ea6\u6709 $x$ \u4e2a\uff0c\u90a3\u4e48\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f $\\frac{x(x-1)}{2}$\n\n\u5e06\u7684\u9ad8\u5ea6\u6ca1\u6709\u4ec0\u4e48\u6027\u8d28\u4e0d\u597d\u64cd\u4f5c\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u628a\u5176\u9ad8\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n\u8fd9\u6837\u5c31\u597d\u8d2a\u5fc3\u4e86\uff0c\u76f8\u5f53\u4e8e\u6bcf\u6b21\u53ef\u4ee5\u4f7f\u5f97\u9ad8\u5ea6\u589e\u9ad8\uff0c\u8981\u9009\u51fa\u6700\u5c0f\u7684 $k$ \u4e2a\u9ad8\u5ea6\u4f7f\u5f97\u5176\u4e2a\u6570 $+1$\n\n\u6bcf\u6b21\u7ed9\u524d $k$ \u4e2a $+1$ \u53ea\u4f1a\u6539\u53d8\u524d $k$ \u4e2a\u7684\u6700\u5927\u503c\u548c $k$ \u4e2a\u4e4b\u5916\u7684\u5927\u5c0f\u5173\u7cfb\n\n\u76f4\u63a5\u5f04\u4e2a\u5e73\u8861\u6811\u5220\u9664\u518d\u63d2\u5165\u5c31\u597d\u4e86\uff0c$fhqtreap$ \u53ef\u80fd\u597d\u5199\u5f97\u591a\n\n```cpp\n# include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nnamespace IO {\n    const int maxn(1 << 21 | 1);\n\n    char ibuf[maxn], *iS, *iT, c;\n    int f;\n\n    inline char Getc() {\n        return iS == iT ? (iT = (iS = ibuf) + fread(ibuf, 1, maxn, stdin), (iS == iT ? EOF : *iS++)) : *iS++;\n    }\n\n    template <class Int> inline void In(Int &x) {\n        for (f = 1, c = Getc(); c < '0' || c > '9'; c = Getc()) f = c == '-' ? -1 : 1;\n        for (x = 0; c >= '0' && c <= '9'; c = Getc()) x = (x << 1) + (x << 3) + (c ^ 48);\n        x *= f;\n    }\n}\n\nusing IO :: In;\n\nconst int maxn(1e5 + 5);\n\nint n, tag[maxn], ls[maxn], rs[maxn], sz[maxn], val[maxn], fix[maxn], rt, tot;\nll ans;\n\nstruct Sail {\n\tint h, k;\n\n\tinline bool operator <(Sail b) const {\n\t\treturn h < b.h;\n\t}\n} sl[maxn];\n\ninline void Pushdown(int x) {\n\tif (!tag[x]) return;\n\tif (ls[x]) val[ls[x]] += tag[x], tag[ls[x]] += tag[x];\n\tif (rs[x]) val[rs[x]] += tag[x], tag[rs[x]] += tag[x];\n\ttag[x] = 0;\n}\n\ninline void Update(int x) {\n\tsz[x] = sz[ls[x]] + sz[rs[x]] + 1;\n}\n\nint Build(int l, int r) {\n\tif (l > r) return 0;\n\tint x = ++tot, mid = (l + r) >> 1;\n\tfix[x] = rand(), val[x] = 0;\n\tls[x] = Build(l, mid - 1), rs[x] = Build(mid + 1, r);\n\treturn Update(x), x;\n}\n\nvoid Split_sz(int x, int k, int &l, int &r) {\n\tif (!x) l = r = 0;\n\telse {\n\t\tPushdown(x);\n\t\tif (sz[ls[x]] + 1 <= k) l = x, Split_sz(rs[x], k - sz[ls[x]] - 1, rs[x], r), Update(l);\n\t\telse r = x, Split_sz(ls[x], k, l, ls[x]), Update(r);\n\t}\n}\n\nvoid Split_val(int x, int k, int &l, int &r) {\n\tif (!x) l = r = 0;\n\telse {\n\t\tPushdown(x);\n\t\tif (val[x] <= k) l = x, Split_val(rs[x], k, rs[x], r), Update(l);\n\t\telse r = x, Split_val(ls[x], k, l, ls[x]), Update(r);\n\t}\n}\n\ninline int Max(int x) {\n\twhile (rs[x]) Pushdown(x), x = rs[x];\n\treturn val[x];\n}\n\nint Merge(int x, int y) {\n\tif (!x || !y) return x | y;\n\tPushdown(x), Pushdown(y);\n\tif (fix[x] > fix[y]) {\n\t\trs[x] = Merge(rs[x], y);\n\t\treturn Update(x), x;\n\t}\n\telse {\n\t\tls[y] = Merge(x, ls[y]);\n\t\treturn Update(y), y;\n\t}\n}\n\nvoid Dfs(int x) {\n\tif (!x) return;\n\tPushdown(x);\n\tif (val[x]) ans += 1LL * val[x] * (val[x] - 1) >> 1;\n\tDfs(ls[x]), Dfs(rs[x]);\n}\n\nint main() {\n\tsrand(time(NULL)), In(n);\n\tfor (int i = 1; i <= n; ++i) In(sl[i].h), In(sl[i].k);\n\tsort(sl + 1, sl + n + 1), rt = Build(1, sl[1].h);\n\tfor (int i = 1, x, y, z; i <= n; ++i) {\n\t\twhile (tot < sl[i].h) fix[++tot] = rand(), sz[tot] = 1, rt = Merge(tot, rt);\n\t\tSplit_sz(rt, sl[i].k, x, y), ++val[x], ++tag[x];\n\t\tint mx = Max(x);\n\t\tSplit_val(x, mx - 1, x, z), x = Merge(x, y);\n\t\tSplit_val(x, mx, x, y), rt = Merge(Merge(x, z), y);\n\t}\n\tDfs(rt), printf(\"%lld\\n\", ans);\n    return 0;\n}\n\n```",
        "postTime": 1539784721,
        "uid": 47640,
        "name": "Cyhlnj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4647 \u3010[IOI2007] sails \u8239\u5e06\u3011"
    },
    {
        "content": "\u8bb2\u4e00\u4e2a\u8be6\u7ec6\u7684\u9009\u6bb5\u6811\u65b9\u6cd5\u3002\n\n\u6211\u4eec\u4ee4 $S_i$ \u8868\u793a\u9ad8\u5ea6 $i$ \u4e2d\u6709 $S_i$ \u4e2a\u8239\u5e06\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f $\\sum\\limits_{i=1}^n{\\dfrac {Si \\times (S_i - 1)}{2}}$\u3002\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u4e00\u4e2a\u6b63\u786e\u7684\u8d2a\u5fc3\uff1a\u6bcf\u6b21\u90fd\u7ed9 $S_i$ \u6700\u5c0f\u7684\u503c\u52a0\u4e0a\u8239\u5e06\uff0c\u5373\u8ba9 $S_i$ \u7684\u5206\u90e8\u5c3d\u91cf\u5747\u8861\u3002\n\n\u663e\u7136\u8fd9\u4e2a\u548c\u6746\u7684\u987a\u5e8f\u6ca1\u6709\u6392\u5e8f\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u628a\u6bcf\u4e2a\u6746\u5b50\u5bf9 $h_i$ \u6392\u5e8f\u3002\u6bcf\u6b21\u6211\u4eec\u90fd\u9700\u8981\u5728 $1 - h_i$ \u4e2d\u627e\u5230\u524d $k_i$ \u5c0f\u7684 $S_i$ \u5e76\u5bf9\u4ed6\u4eec $+1$\uff0c\u7136\u800c\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u8fc7\u4e0d\u53bb\u7684\u3002\n\n\u6bcf\u6b21\u627e\u6700\u5c0f\u662f\u5f88\u9ebb\u70e6\u7684\uff0c\u6211\u4eec\u8003\u8651\u76f4\u63a5\u8ba9 $S_i$ \u964d\u5e8f\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u5f53 $\\{ S \\} =\\{ 5,4,3,3,3,2,1 \\}$\uff0c$h_i = 7$\uff0c$k_i=3$ \u7684\u65f6\u5019\uff0c$\\{ S' \\} =\\{ 5,4,4,3,3,3,2 \\}$ \uff0c\u4e0e\u539f\u6765\u76f8\u6bd4\uff0c\u53ea\u6709\u4e24\u6bb5\u5185\u5bb9\u6539\u53d8\u4e86\u3002\n\n\u90a3\u4e48\u5177\u4f53\u7684\u64cd\u4f5c\u662f\u8fd9\u6837\u7684\uff1a\u5bf9\u4e8e\u6bcf\u4e2a $h$ \u4e0e $k$\uff0c\u5148\u627e\u51fa $S_{h-k+1}$ \u7684\u503c $p$\uff0c\u518d\u627e\u5230 $p$ \u51fa\u73b0\u7684\u8303\u56f4 $l,r$\uff08\u5373 $S_{l-1} \\ne S_l = S_{l + 1} = \u2026 = S_{r} \\ne S_{r+1}$\uff09\uff0c\u90a3\u4e48\u663e\u7136\uff0c\u53ea\u8981\u8ba9 $[r+1,h]$ \u4e0e $[l,l + k -h +r-1]$ \u8fd9\u4e24\u6bb5\u90fd $+1$ \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7136\u540e\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n[code](https://www.luogu.com.cn/paste/c7dkaxlw)\u3002",
        "postTime": 1606658527,
        "uid": 141179,
        "name": "pigstd",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4647 \u3010[IOI2007] sails \u8239\u5e06\u3011"
    },
    {
        "content": "[[IOI2007] sails \u8239\u5e06](https://www.luogu.com.cn/problem/P4647)\n\n>\u600e\u4e48\u5927\u5bb6\u5199\u7684\u90fd\u662f\u7ebf\u6bb5\u6811/\u5e73\u8861\u6811\uff0c\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u4e0d\u5c31\u53ef\u4ee5\u641e\u5b9a\u4e86\u4e48...\n\n\u63d0\u4f9b\u4e00\u4e2a $\\mathcal{O(n\\log n)}$ \u7684\u6811\u72b6\u6570\u7ec4\u505a\u6cd5\u3002\n\n\u9996\u5148\u5c06 $h_i$ \u6309\u7167\u5347\u5e8f\u6392\u5e8f\uff0c\u6309\u987a\u5e8f\u8003\u8651\u6bcf\u4e2a\u67f1\u5b50\uff0c\u5728\u9ad8\u5ea6 $1 \\sim h_i$ \u4e2d\u627e\u5230\u65d7\u5e1c\u6570\u91cf\u6700\u5c11\u7684 $k$ \u4e2a\u9ad8\u5ea6\u653e\u4e0a $k$ \u9762\u65d7\uff0c\u56e0\u4e3a $h_i$ \u8d8a\u5927\u53ef\u9009\u62e9\u7684\u4f4d\u7f6e\u5c31\u8d8a\u591a\uff0c\u6240\u4ee5\u5c06 $h_i$ \u8d8a\u5927\u7684\u653e\u5728\u540e\u9762\u8003\u8651\u624d\u80fd\u4fdd\u8bc1\u7b54\u6848\u6700\u5c0f\u3002\n\n\u8bbe $s_i$ \u8868\u793a\u9ad8\u5ea6 $i$ \u4e0a\u6709 $s_i$ \u9762\u65d7\u5e1c\uff0c\u7ef4\u62a4 $s_i$ \u5355\u8c03\u4e0d\u5347\uff0c\u8fd9\u6837\u6bcf\u6b21\u627e\u7684\u65d7\u5e1c\u6570\u91cf\u6700\u5c11\u7684 $k$ \u4e2a\u9ad8\u5ea6\u5c31\u5bf9\u5e94\u4e86 $s_i$ \u4e0a\u7684\u67d0\u6bb5\u533a\u95f4\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u6bb5\u533a\u95f4\u5c31\u662f $[h_i-k_i+1,h_i]$ \u3002\n\n\u4f46\u662f\u8fd9\u6837\u4f1a\u51fa\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u76f4\u63a5\u66f4\u65b0 $[h_i-k_i+1,h_i]$ \u4e0a\u7684\u503c\uff0c\u4f1a\u7834\u574f $s_i$ \u5e8f\u5217\u7684\u5355\u8c03\u6027\uff08 $\\exists \\varepsilon ,\\varepsilon < h_i-k_i+1,s_{\\varepsilon}=s_{h_i-k_i+1}$ \uff09\uff0c\u7531\u4e8e\u4e00\u4e2a\u9ad8\u5ea6\u53ea\u80fd\u653e\u4e00\u9762\u65d7\u5e1c\uff0c\u6240\u4ee5\u7834\u574f\u5355\u8c03\u6027\u7684\u53ea\u4f1a\u662f $[h_i-k_i+1,h_i]$ \u7684\u4e00\u6bb5\u524d\u7f00\uff0c\u8003\u8651\u5c06\u8fd9\u6bb5\u524d\u7f00\u524d\u79fb\u3002\n\n\u4ee4 $l,r$ \u8868\u793a $s_{h_i-k_i+1}$ \u51fa\u73b0\u8303\u56f4\u7684\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\uff0c\u8f6c\u5316\u4e3a\u4fee\u6539 $[l,l+r-(h-k+1)]$ \u548c $[r+1,h]$ \u4e24\u6bb5\u533a\u95f4\uff0c\u65e2\u7ef4\u62a4\u4e86\u5355\u8c03\u6027\uff0c\u53c8\u6ee1\u8db3\u4e86\u8d2a\u5fc3\u7684\u6761\u4ef6\u3002\n\n\u8003\u8651\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4 $s_i$ \uff0c\u533a\u95f4\u4fee\u6539\u8f6c\u5316\u4e3a\u5dee\u5206\u6570\u7ec4\u4e0a\u7684\u5355\u70b9\u4fee\u6539\uff0c\u5355\u70b9\u6c42\u503c\u8f6c\u5316\u4e3a\u524d\u7f00\u6c42\u548c\uff0c\u7531\u4e8e $s_i$ \u5355\u8c03\u4e0d\u964d\uff0c$l,r$ \u53ef\u4ee5\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u901a\u8fc7\u500d\u589e\u6c42\u51fa\u3002\n\n\u5177\u4f53\u5730\u8bf4\uff0c\u8bbe\u6811\u72b6\u6570\u7ec4\u4e3a $c$ \uff0c\u7ef4\u62a4\u7684\u5e8f\u5217\u662f $a$ \uff0c\u7531\u4e8e\u6811\u72b6\u6570\u7ec4\u7684\u6027\u8d28\uff0c$c[x]$ \u4fdd\u5b58\u7684\u4fe1\u606f\u662f $\\sum_{i=x-\\text{lowbit}(x)+1}^xa_i$ \uff0c\u533a\u95f4\u7684\u957f\u5ea6\u662f\u4e8c\u7684\u6574\u6570\u6b21\u5e42\uff0c\u800c\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u6c42\u548c\u7684\u8fc7\u7a0b\u5219\u7c7b\u4f3c\u4e8e\u5bf9\u67d0\u4e2a\u6570\u8fdb\u884c\u4e8c\u8fdb\u5236\u62c6\u5206\u3002\n\n\u8bbe $\\text{pos}$ \u8868\u793a\u6700\u540e\u4e00\u4e2a\u6ee1\u8db3 $s_{\\text{pos}}>s_{h_i-k_i+1}$ \u7684\u4f4d\u7f6e\uff0c\u4ee4 $\\text{sum}$ \u6a21\u62df\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u6c42\u548c\u3002\n\n\u4ee5 $l$ \u7684\u6c42\u503c\u4e3a\u4f8b\uff0c\u521d\u59cb\u65f6 $\\text{pos}=0,\\text{sum}=0$ \uff0c\u4ece $\\log h_i$ \u5230 $0$ \u5012\u5e8f\u8003\u8651\u6bcf\u4e00\u4e2a\u6570 $p$ \uff0c\u82e5\u6ee1\u8db3 $\\text{pos}+2^p \\leq h_i$ \u4e14 $\\text{sum}+c[\\text{pos}+2^p]>s_{h_i-k_i+1}$ \uff0c\u5219\u66f4\u65b0 $\\text{pos}$ \u548c $\\text{sum}$ \u7684\u503c\uff0c\u8ba9 $\\text{pos}$ \u524d\u8fdb $2^p$ \u6b65\uff0c\u6700\u540e $l$ \u5c31\u662f $\\text{pos}+1$ \u3002\n\n\u540c\u7406\uff0c $r$ \u4e5f\u53ef\u4ee5\u901a\u8fc7\u540c\u6837\u7684\u529e\u6cd5\u6c42\u51fa\uff0c\u76f8\u6bd4\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u4e8c\u5206\uff0c\u500d\u589e\u5c06\u590d\u6742\u5ea6\u964d\u81f3\u5355\u6b21 $\\mathcal{O(\\log n)}$ \u3002\n\n\u6700\u540e\u6c42\u51fa\u6bcf\u4e2a $s_i$ \uff0c\u8ba1\u7b97 $\\sum\\dfrac{1}{2}s_i(s_i-1)$ \u6c42\u5f97\u7b54\u6848\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O(n\\log n)}$ \uff0c\u7531\u4e8e\u6811\u72b6\u6570\u7ec4\u5e38\u6570\u8f83\u5c0f\uff0c\u5728\u6ca1\u6709\u7279\u610f\u5361\u5e38\u548c\u7cbe\u7ec6\u5b9e\u73b0\u7684\u60c5\u51b5\u4e0b\u90fd\u80fd\u8dd1\u5230\u6700\u4f18\u89e3\uff08261ms\uff09\uff0c\u540a\u6253\u4e00\u4f17\u7ebf\u6bb5\u6811/\u5e73\u8861\u6811\u5199\u6cd5\uff08\u7801\u91cf\u4e5f\u662f\u6700\u5c0f\u7684\uff09\u3002\n\n```Code:```\n```cpp\n#include<bits/stdc++.h>\ntypedef long long LL;\ntypedef long double LD;\nusing namespace std;\nconst LL N=100010,M=1000010,INF=0x3f3f3f3f;\ninline LL max(LL x,LL y){return x>y?x:y;}\ninline LL min(LL x,LL y){return x<y?x:y;}\ninline void swap(LL &x,LL &y){x^=y^=x^=y;}\nLL n,w,ans,c[N];\nstruct node{LL h,k;}a[N];\nbool cmp(node a,node b){return a.h<b.h;}\nvoid add(LL x,LL y){\n\tfor(;x<N;x+=x&-x)c[x]+=y;\n}\nLL ask(LL x){\n\tLL res=0;\n\tfor(;x;x-=x&-x)res+=c[x];\n\treturn res;\n}\nvoid upd(LL l,LL r,LL d){\n\tif(l>r)return;\n\tadd(l,d),add(r+1,-d);\n}\nint main(){\n\tscanf(\"%lld\",&n);\n\tfor(LL i=1;i<=n;i++)\n\t\tscanf(\"%lld%lld\",&a[i].h,&a[i].k);\n\tsort(a+1,a+n+1,cmp);\n\tfor(LL i=1;i<=n;i++){\n\t\tint h=a[i].h,k=a[i].k;\n\t\tLL val=ask(h-k+1),l=0,r=0;\n\t\tfor(LL j=17,sum=0;j>=0;j--)\n\t\t\tif(l+(1<<j)<=h&&sum+c[l+(1<<j)]>val)sum+=c[l+(1<<j)],l+=(1<<j);\n\t\tfor(LL j=17,sum=0;j>=0;j--)\n\t\t\tif(r+(1<<j)<=h&&sum+c[r+(1<<j)]>=val)sum+=c[r+(1<<j)],r+=(1<<j);\n\t\tl=max(l+1,1);r=min(r,h);w=max(w,h);\n\t\tupd(r+1,h,1),upd(l,l+r-(h-k+1),1);\n\t}\n\tfor(LL i=1;i<=w;i++){\n\t\tLL p=ask(i);\n\t\tans+=p*(p-1)>>1;\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1656570512,
        "uid": 137242,
        "name": "Dia\u043esi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4647 \u3010[IOI2007] sails \u8239\u5e06\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/nosta/p/10557737.html)\n\n\u663e\u7136\u7b54\u6848\u4e0e\u6746\u7684\u987a\u5e8f\u65e0\u5173\uff08\u6309\u6bcf\u4e2a\u9ad8\u5ea6\u8003\u8651\uff09\u3002\n\n\u4ece\u9ad8\u5230\u4f4e\u8003\u8651\u6746\uff0c\u8bbe\u6b64\u65f6\u7684\u72b6\u6001\u4e3a$S$\uff0c$S[i]$\u662f\u9ad8\u5ea6$i$\u7684\u5e06\u7684\u6570\u76ee\uff0c\u521d\u59cb\u5168\u4e3a$0$\uff0c\u5f53\u524d\u6746\u7684\u9ad8\u5ea6\u4e3a$h$\uff0c\u6746\u4e0a\u9700\u8981\u653e\u7f6e\u7684\u5e06\u7684\u6570\u76ee\u4e3a$k$\uff0c\u8d2a\u5fc3\u5730\uff0c\u5047\u8bbe\u4e24\u4e2a\u9ad8\u5ea6\u7684\u540c\u7b49\u5b9c\u9009\uff0c\u4f18\u5148\u9009\u62e9\u66f4\u9ad8\u7684\uff1b\u5e06\u5c3d\u91cf\u653e\u7f6e\u5728$S[i]=0(i\\le h)$\u7684\u9ad8\u5ea6\u4e0a\uff0c\u82e5\u8fd8\u6709\u5269\u4f59\uff0c\u8bbe\u5269\u4e0b$t(t\\le k)$\u4e2a\uff0c\u5219\u653e\u7f6e\u5728\u9664\u53bb\u4ee5\u9009\u62e9\u7684\u9ad8\u5ea6\u4ee5\u5916\uff0c$S[i](i\\le h)$\u524d$t$\u5c0f\u7684\u4f4d\u7f6e\u3002\n\n\u6574\u7406\u4e00\u4e0b\uff0c\u6bcf\u6b21\u9009\u51fa$S[1\\cdots h]$\u4e2d\u524d$k$\u5c0f\u7684\uff08\u76f8\u540c\u5927\u5c0f\u9009\u4e0b\u6807\u8f83\u5927\u7684\uff09\u9ad8\u5ea6\u653e\u7f6e\u5e06\u3002\n\n```xml\n{5,3} 0 0 1 1 1  +0\n{4,3} 1 1 2 1 1  +1\n{4,1} 1 2 2 1 1  +1\n{3,2} 2 2 3 1 1  +3\n{3,2} 3 3 3 1 1  +4\n{2,1} 3 4 3 1 1  +3\n```\n\n\u4f46\u662f\u6b64\u65f6$S$\u4f3c\u4e4e\u4e0d\u597d\u7ef4\u62a4\u3002\u3002\u8003\u8651\u5c06\u8fc7\u7a0b\u5012\u8fc7\u6765\uff0c\u4ece\u4f4e\u5230\u9ad8\u8003\u8651\u6746\uff0c\uff08$S$\u4e00\u5f00\u59cb\u4e3a\u7a7a\u96c6\uff0c\u5176\u4f59\u5b9a\u4e49\u76f8\u540c\uff09\uff0c\u5047\u8bbe\u4e24\u4e2a\u9ad8\u5ea6\u540c\u7b49\u5b9c\u9009\uff0c\u4f18\u5148\u9009\u62e9\u66f4\u4f4e\u7684\uff0c\u5176\u4f59\u5927\u81f4\u76f8\u540c\u3002\u5373\u6bcf\u6b21\u9009\u51fa$S[1\\cdots h]$\u4e2d\u524d$k$\u5c0f\u7684\uff08\u76f8\u540c\u5927\u5c0f\u9009\u4e0b\u6807\u8f83\u5c0f\u7684\uff09\u9ad8\u5ea6\u653e\u7f6e\u5e06\u3002\n\n```xml\n{2,1} 1 0        +0\n{3,2} 1 1 1      +0\n{3,2} 2 2 1      +2\n{4,1} 2 2 1 1    +0\n{4,3} 3 2 2 2    +4\n{5,3} 3 3 3 2 1  +4\n```\n\n\u8fd9\u6837\u7528\u5e73\u8861\u6811\u7ef4\u62a4$S$\uff08\u521d\u59cb\u5927\u5c0f\u4e3a0\uff0c\u6bcf\u6b21\u957f\u5ea6\u53d8\u5316\u65f6\u88650\u8282\u70b9\uff09\uff0c\u6bcf\u6b21\u67e5\u8be2\u5168\u5c40\u524d$k$\u5c0f\u7136\u540e\u6574\u4f53\u52a0\u4e00\u5373\u53ef\u3002\uff08\u7701\u53bb\u4e86\u4e0b\u6807\u8303\u56f4\u7684\u7ea6\u675f\uff09\u3002~~\u8fdb\u4e00\u6b65\u53ef\u53d1\u73b0\uff0c\u8fde\u4e0b\u6807\u90fd\u4e0d\u7528\u7ef4\u62a4\u4e86~~ \n\n---\n\n\u5de7\u5999\u7684\u5206\u5272\u7ebf\n\n\u89c2\u5bdf\u5404\u4e2a\u65f6\u6001\u7684$S$\uff0c\u53d1\u73b0\u5b83\u603b\u662f\u4e00\u4e2a\u5355\u8c03\u4e0d\u589e\u7684\u5e8f\u5217\uff0c\u628a\u67d0\u65f6\u6001\u7684$S$\u4e2d\u76f8\u540c\u4e14\u76f8\u90bb\u5206\u6210\u4e00\u5757\uff0c\u5982\u56fe\uff0c\u84dd\u8272\u65b9\u6846\u8868\u793a\u5c06\u9009\u51fa\u524d$k$\u5c0f\u7684\u4f4d\u7f6e\uff0c\u6ce8\u610f\u88ab\u5b8c\u5168\u8986\u76d6\u7684\u5757\u7684\u9ad8\u5ea6\u53ef\u4ee5\u76f4\u63a5\u533a\u95f4+1\uff0c\u800c\u5272\u5f00\u7684\u5757\u533a\u95f4+1\u7684\u8303\u56f4\u662f\u53cd\u8fc7\u6765\u7684\uff0c\u663e\u7136\u8fd9\u6837\u7684\u5757\u6700\u591a\u4e00\u5757\uff0c\u4e8e\u662f\u53ef\u4ee5\u4e0a\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u3002\n\n![pic](http://images.cnblogs.com/cnblogs_com/nosta/1423307/o_10557737.png)\n\n\u7b54\u6848\u4e5f\u4e0d\u7528\u6bcf\u6b65\u7d2f\u52a0\uff0c\u8bbe$S[i]$\u8868\u793a\u6700\u7ec8\u72b6\u6001\u4e0a\u9ad8\u5ea6\u4e3a$i$\u7684\u5e06\u7684\u6570\u76ee\uff0c\u663e\u7136\u603b\u7b54\u6848\u662f$\\sum_i\\frac{S[i](S[i]-1)}2$\uff0c\u8fd9\u4e0e\u56e0\u4e3a\u4ece\u672c\u6587\u7b2c\u4e00\u53e5\u7167\u5e94\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define LL long long \nconst int N=1e5+10;\n\nnamespace sgt {\n\tstruct sgtNode {\n\t\tint mx,mn,add;\n\t} t[N<<2];\n#define ls (x<<1)\n#define rs (x<<1|1)\n\tvoid update(int x) {\n\t\tt[x].mx=std::max(t[ls].mx,t[rs].mx);\n\t\tt[x].mn=std::min(t[ls].mn,t[rs].mn);\n\t}\n\tvoid pushr(int x,int add) {t[x].mn+=add,t[x].mx+=add,t[x].add+=add;}\n\tvoid pushdown(int x) {\n\t\tif(t[x].add) pushr(ls,t[x].add),pushr(rs,t[x].add),t[x].add=0;\n\t}\n\tLL calc(int x,int l,int r) {\n\t\tif(l==r) return 1LL*t[x].mx*(t[x].mx-1)/2;\n\t\tint mid=(l+r)>>1; pushdown(x);\n\t\treturn calc(ls,l,mid)+calc(rs,mid+1,r);\n\t}\n\tvoid build(int x,int l,int r) {\n\t\tt[x].mn=+1e9,t[x].mx=-1e9;\n\t\tif(l==r) return; int mid=(l+r)>>1;\n\t\tbuild(ls,l,mid); build(rs,mid+1,r);\n\t}\n\tvoid insert(int x,int l,int r,int p) {\n\t\tif(l==r) return void(t[x].mx=t[x].mn=0);\n\t\tint mid=(l+r)>>1; pushdown(x);\n\t\tif(p<=mid) insert(ls,l,mid,p);\n\t\telse insert(rs,mid+1,r,p);\n\t\tupdate(x);\n\t}\n\tvoid modify(int x,int l,int r,int L,int R) {\n\t\tif(L>R) return;\n\t\tif(L<=l&&r<=R) return pushr(x,1);\n\t\tint mid=(l+r)>>1; pushdown(x);\n\t\tif(L<=mid) modify(ls,l,mid,L,R);\n\t\tif(mid<R) modify(rs,mid+1,r,L,R);\n\t\tupdate(x);\n\t}\n\tint getVal(int x,int l,int r,int p) {\n\t\tif(t[x].mn==t[x].mx) return t[x].mn; \n\t\tint mid=(l+r)>>1; pushdown(x);\n\t\tif(p<=mid) return getVal(ls,l,mid,p);\n\t\telse return getVal(rs,mid+1,r,p); \n\t}\n\tint getRangeL(int x,int l,int r,int w) {\n\t\tif(l==r) return l;\n\t\tint mid=(l+r)>>1; pushdown(x);\n\t\tif(t[ls].mn<=w) return getRangeL(ls,l,mid,w);\n\t\telse return getRangeL(rs,mid+1,r,w);\n\t}\n\tint getRangeR(int x,int l,int r,int w) {\n\t\tif(l==r) return l;\n\t\tint mid=(l+r)>>1; pushdown(x);\n\t\tif(t[rs].mx>=w) return getRangeR(rs,mid+1,r,w);\n\t\telse return getRangeR(ls,l,mid,w);\n\t}\n}\n\nint n,m;\nstd::pair<int,int> a[N];\n\nint main() {\n\tscanf(\"%d\",&n);\n\tfor(int i=1; i<=n; ++i) {\n\t\tscanf(\"%d%d\",&a[i].first,&a[i].second);\n\t\tm=std::max(m,a[i].first);\n\t}\n\tstd::sort(a+1,a+n+1);\n\tsgt::build(1,1,m);\n\tfor(int i=1,R=0; i<=n; ++i) {\n\t\twhile(R<a[i].first) sgt::insert(1,1,m,++R);\n\t\tint pos=R-a[i].second+1; //\u88ab\u5272\u5f00\u7684\u4f4d\u7f6e \n\t\tint val=sgt::getVal(1,1,m,pos);\n\t\tint rgl=sgt::getRangeL(1,1,m,val);\n\t\tint rgr=sgt::getRangeR(1,1,m,val);\n\t\t\n//\t\tstd::cout<<val<<' '<<rgl<<' '<<rgr<<std::endl;\n\t\t\n\t\tsgt::modify(1,1,m,rgr+1,R);\n\t\tsgt::modify(1,1,m,rgl,rgl+a[i].second-(R-rgr)-1);\n\t}\n\tprintf(\"%lld\\n\",sgt::calc(1,1,m));\n\treturn 0; \n} \n```",
        "postTime": 1552984648,
        "uid": 125139,
        "name": "nosta",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4647 \u3010[IOI2007] sails \u8239\u5e06\u3011"
    },
    {
        "content": "https://www.luogu.org/problemnew/show/P4647\n\n\u9996\u5148\u53d1\u73b0\u7b54\u6848\u4e0e\u987a\u5e8f\u65e0\u5173\uff0c\u4ee4 $ x_i $ \u8868\u793a\u9ad8\u5ea6\u4e3a $ i $ \u7684\u90a3\u4e00\u884c\u5e06\u7684\u4e2a\u6570\uff0c\u7b2c $ i $ \u884c\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $ \\frac{x_i * (x_i - 1)}{2} $\n\n\u5148\u628a\u65d7\u6746\u6309\u7167\u9ad8\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6709\u4e00\u4e2a\u663e\u7136\u7684\u8d2a\u5fc3\u662f\u6bcf\u6b21\u9009\u62e9\u80fd\u653e\u7684\u5730\u65b9\u5e06\u6700\u5c11\u7684\u4e00\u884c\u653e\u4e00\u4e2a\u5e06\uff0c\u6700\u5c11\u7684\u4e00\u884c\u653e\u4e00\u4e2a\u5e06\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e00\u5b9a\u6700\u5c0f\uff0c\u800c\u540e\u9762\u7684\u65d7\u6746\u9ad8\u5ea6\u66f4\u9ad8\uff0c\u80fd\u9009\u62e9\u653e\u5e06\u7684\u5730\u65b9\u66f4\u591a\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u7b54\u6848\u6700\u5c0f\uff08\u53ef\u4ee5\u611f\u6027\u7406\u89e3\u4e00\u4e0b\n\n\u90a3\u4e48\u6211\u4eec\u7684\u505a\u6cd5\u5c31\u51fa\u6765\u4e86\uff0c\u5bf9\u4e8e\u65d7\u6746 $ i $ \u9009\u62e9\u5f53\u524d\u80fd\u653e\u5e06\u7684\u6700\u5c11\u7684 $ k_i $ \u884c\uff0c\u653e\u4e0a\u5e06\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u7528\u5e73\u8861\u6811\u5b9e\u73b0\uff0c\u5c06\u539f\u5e8f\u5217\u524d $ k $ \u5c0f\u62ff\u51fa\uff0c\u52a0\u4e0a $ 1 $ \u540e\u653e\u56de\u53bb\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ef\u80fd\u4f1a\u4f7f\u5e73\u8861\u6811\u7684\u6027\u8d28\u88ab\u6253\u7834\uff0c\u5982 $ 0 $ $ 0 $ \u5c06\u7b2c\u4e00\u4e2a\u6570\u52a0 $ 1 $ \u518d\u653e\u56de\u53bb\u5c31\u53d8\u6210\u4e86 $ 1 $ $ 0 $\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5206\u88c2\u51fa\u6765\u7684\u524d $ k $ \u5c0f\u4e2d\u7684\u6700\u5927\u503c\u8fd8\u8981\u518d\u6b21\u5206\u88c2\uff0c\u5982 $ 0 $ $ 1 $ $ 1 $ $ 1 $ $ 2 $ \u524d $ 3 $ \u5c0f\u8981\u52a0 $ 1 $\uff0c\u5148\u5206\u88c2\u6210 $ 0 $ $ 1 $ $ 1 $ \u548c $ 1 $ $ 2 $\uff0c\u7136\u540e\u5206\u88c2\u6210 $ 0 $ \uff0c$ 1 $ $ 1 $ \u548c $ 1 $ $ 2 $\uff0c\u533a\u95f4\u52a0\u540e\u653e\u56de\u539f\u5e8f\u5217\uff0c\u5148\u53d8\u6210 $ 1 $ {\u8fd9\u91cc\u653e\u539f\u6765\u7684 $ 1 $ $ 1 $ } $ 2 $\uff0c\u7136\u540e\u53d8\u6210 {\u8fd9\u91cc\u653e\u539f\u6765\u7684 $ 0 $} $ 1 $ {\u8fd9\u91cc\u653e\u539f\u6765\u7684 $ 1 $ $ 1 $ } $ 2 $\uff0c\u5373 $ 0 $ $ 1 $ $ 1 $ $ 1 $ $ 2 $\uff0c\u53ef\u4ee5\u4f7f\u7528 splay \u5b9e\u73b0\n\n```cpp\n#include <bits/stdc++.h>\n#define Fast_cin ios::sync_with_stdio(false), cin.tie(0);\n#define rep(i, a, b) for(register int i = a; i <= b; i++)\n#define per(i, a, b) for(register int i = a; i >= b; i--)\n#define DEBUG(x) cerr << \"DEBUG\" << x << \" >>> \" << endl;\nusing namespace std;\n\ntypedef unsigned long long ull;\ntypedef pair <int, int> pii;\ntypedef long long ll;\n\ntemplate <typename _T>\ninline void read(_T &f) {\n    f = 0; _T fu = 1; char c = getchar();\n    while(c < '0' || c > '9') { if(c == '-') fu = -1; c = getchar(); }\n    while(c >= '0' && c <= '9') { f = (f << 3) + (f << 1) + (c & 15); c = getchar(); }\n    f *= fu;\n}\n\ntemplate <typename T>\nvoid print(T x) {\n    if(x < 0) putchar('-'), x = -x;\n    if(x < 10) putchar(x + 48);\n    else print(x / 10), putchar(x % 10 + 48);\n}\n\ntemplate <typename T>\nvoid print(T x, char t) {\n    print(x); putchar(t);\n}\n\ntemplate <typename T>\nstruct hash_map_t {\n    vector <T> v, val, nxt;\n    vector <int> head;\n    int mod, tot, lastv;\n    T lastans;\n    bool have_ans;\n\n    hash_map_t (int md = 0) {\n        head.clear(); v.clear(); val.clear(); nxt.clear(); tot = 0; mod = md;\n        nxt.resize(1); v.resize(1); val.resize(1); head.resize(mod);\n        have_ans = 0;\n    }\n\n    bool count(int x) {\n        int u = x % mod;\n        for(register int i = head[u]; i; i = nxt[i]) {\n            if(v[i] == x) {\n                have_ans = 1;\n                lastv = x;\n                lastans = val[i];\n                return 1;\n            }\n        }\n        return 0;\n    }\n\n    void ins(int x, int y) {\n        int u = x % mod;\n        nxt.push_back(head[u]); head[u] = ++tot;\n        v.push_back(x); val.push_back(y);\n    }\n\n    int qry(int x) {\n        if(have_ans && lastv == x) return lastans;\n        count(x);\n        return lastans;\n    }\n};\n\nconst int N = 1e5 + 5;\n\nstruct ele {\n    int h, gs;\n    bool operator < (const ele A) const { return h < A.h; }\n} a[N];\n\nint ch[N][2], val[N], tag[N], siz[N], n, root;\n\ninline void update(int u) { siz[u] = siz[ch[u][0]] + siz[ch[u][1]] + 1; }\n\ninline void add_tag(int u, int x) { if(u <= 100000) val[u] += x; tag[u] += x; }\n\ninline void pushdown(int u) {\n    if(tag[u]) {\n        if(ch[u][0]) add_tag(ch[u][0], tag[u]);\n        if(ch[u][1]) add_tag(ch[u][1], tag[u]);\n        tag[u] = 0;\n    }\n}\n\ninline void rotate(int &u, int d) {\n    int tmp = ch[u][d];\n    ch[u][d] = ch[tmp][d ^ 1];\n    ch[tmp][d ^ 1] = u;\n    update(u); update(tmp);\n    u = tmp;\n}\n\nvoid splay(int &u, int k) {\n    pushdown(u);\n    int ltree = siz[ch[u][0]];\n    if(ltree + 1 == k) return;\n    int d = k > ltree;\n    pushdown(ch[u][d]);\n    int k2 = d ? k - ltree - 1 : k;\n    int ltree2 = siz[ch[ch[u][d]][0]];\n    if(ltree2 + 1 != k2) {\n        int d2 = k2 > ltree2;\n        splay(ch[ch[u][d]][d2], d2 ? k2 - ltree2 - 1 : k2);\n        if(d == d2) rotate(u, d); else rotate(ch[u][d], d2);\n    }\n    rotate(u, d);\n}\n\nint find(int u, int x) {\n    pushdown(u);\n    if(!u) return 0;\n    if(x > val[u]) return siz[ch[u][0]] + 1 + find(ch[u][1], x);\n    return find(ch[u][0], x);\n}\n\nvoid insert(int &u, int x, int y) {\n    splay(u, x + 1); splay(ch[u][0], x);\n    ch[ch[u][0]][1] = y; update(ch[u][0]); update(u);\n}\n\nll ans;\nvoid dfs(int u) {\n    if(!u) return;\n    pushdown(u);\n    dfs(ch[u][0]);\n    if(u <= 100000) ans += 1ll * val[u] * (val[u] - 1) / 2;\n    dfs(ch[u][1]);\n}\n\nint main() {\n    read(n);\n    for(register int i = 1; i <= n; i++) read(a[i].h), read(a[i].gs);\n    sort(a + 1, a + n + 1); int now = 1; root = 1;\n    ch[root][0] = 100001; ch[root][1] = 100002;\n    val[100001] = -1; val[100002] = 100002;\n    update(100001); update(100002); update(root);\n    for(register int i = 1; i <= n; i++) {\n        while(now < a[i].h) {\n            ++now; update(now);\n            insert(root, 1, now);\n        }\n        splay(root, a[i].gs + 2); splay(ch[root][0], a[i].gs + 1);\n        int left = find(ch[root][0], val[ch[root][0]]), v = val[ch[root][0]], l = ch[root][0];\n        ch[root][0] = 0; update(root);\n        int right = find(root, v + 1);\n        if(!right) {\n            add_tag(l, 1);\n            ch[root][0] = l;\n            update(root);\n        } else {\n            // fprintf(stderr, \"left = %d\\n\", left);\n            splay(l, left + 1);\n            int ll = ch[l][0]; ch[l][0] = 0; update(l);\n            add_tag(ll, 1); add_tag(l, 1);\n            insert(root, right, l);\n            splay(root, 1); ch[root][0] = ll; update(root);\n        }\n    }\n    dfs(root);\n    cout << ans << endl;\n    return 0;\n}\n```",
        "postTime": 1551530025,
        "uid": 51815,
        "name": "LJC00118",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4647 \u3010[IOI2007] sails \u8239\u5e06\u3011"
    },
    {
        "content": "\n\u9898\u610f\uff1a\n\n\u6709\u4e00\u8258\u8239\uff0c\u8239\u4e0a\u6709 $n$ \u4e2a\u65d7\u6746\uff0c\u6bcf\u4e2a\u65d7\u6746\u4e0a\u6709 $h_i$ \u4e2a\u5c0f\u8282\u3002\u6bcf\u6839\u65d7\u6746\u4e0a\u4f1a\u6302 $k_i$ \u5f20\u5e06\n\n\u6bcf\u4e2a\u5c0f\u8282\u6700\u591a\u6302\u4e00\u4e2a\u5e06\u3002\u5728\u98ce\u4e2d\uff0c\u5e06\u7684\u4e0d\u540c\u6392\u5e03\u65b9\u5f0f\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u63a8\u52a8\u529b\n\n\u5bf9\u4e8e\u4efb\u610f\u4e00\u5f20\u5e06\uff0c\u4ed6\u7684\u63a8\u52a8\u529b\u6298\u6263\u7b49\u4e8e\u518d\u5b83\u540e\u9762\u5e76\u4e14\u548c\u5b83\u5728\u540c\u4e00\u9ad8\u5ea6\u7684\u5e06\u7684\u6570\u76ee\n\n\u6240\u6709\u5e06\u7684\u4efb\u610f\u4e00\u79cd\u4f4d\u7f6e\u7ec4\u5408\u7684\u63a8\u52a8\u529b\u6298\u6263\u548c\u7b49\u4e8e\u5728\u8be5\u4f4d\u7f6e\u4e0b\u6240\u6709\u5e06\u7684\u63a8\u52a8\u529b\u6298\u6263\u7684\u548c\n\n\u6c42\u6240\u6709\u4f4d\u7f6e\u7ec4\u5408\u6700\u5c0f\u7684\u63a8\u52a8\u529b\u6298\u6263\u548c\n\n\u663e\u7136\u6709\u4e00\u79cd\u8d2a\u5fc3\u65b9\u6848\uff1a\n\n\u8bbe\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u65d7\u5b50\u6570\u91cf\u4e3a $s_i$\uff0c\u90a3\u4e48\u6309\u7167\u65d7\u6746\u957f\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n\u6bcf\u6b21\u8d2a\u5fc3\u7684\u627e\u5230\u53ef\u884c\u7684\u4f4d\u7f6e\u4e2d\uff0c\u65d7\u5b50\u6570\u91cf\u6700\u5c11\u7684 $k$ \u4e2a\u653e\u65d7\u5b50\u5373\u53ef\uff08\u5373 $s_i+1$)\n\n\u6700\u540e $\\sum\\limits_{i}\\frac{s_i(s_i-1)}{2}$ \u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\sum\\limits_{i=1}^nh_i)$\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u884c\uff0c\u5982\u4f55\u4f18\u5316\uff1f\n\n\u6309\u7167 $s_i$ \u7ef4\u62a4\u4e00\u4e2a\u6392\u5e8f\u540e\u7684\u6570\u5217\uff0c\u76f8\u5f53\u4e8e\u6bcf\u6b21\u7ed9\u533a\u95f4\u52a0 $1$\n\n\u533a\u95f4\u52a0 $1$ \u53ef\u80fd\u4f7f\u5f97\u533a\u95f4\u4e0d\u518d\u6709\u5e8f\uff01\n\n\u539f\u6765\u7684 $s_i:~[1,1,1,1,3]$\n\n$[1,3]$ \u52a0 $1$ \u540e\u7684\u6570\u5217\u5e94\u4e3a\uff1a $[1,2,2,2,3]$\n\n\u5b9e\u9645\u4e0a\u4e5f\u662f\u533a\u95f4\u52a0\u6cd5\uff01\u6211\u4eec\u53ea\u8981\u627e\u5230\u4e4b\u540e\u7b2c\u4e00\u4e2a\u6bd4\u4e4b\u524d\u8fd9\u4e2a\u6570\u5927\u7684\u5373\u53ef\n\n\u53ef\u4ee5\u5229\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n~log~n)$\n\n```cpp\n#include <map>\n#include <set>\n#include <ctime>\n#include <queue>\n#include <stack>\n#include <cmath>\n#include <vector>\n#include <bitset>\n#include <cstdio>\n#include <cctype>\n#include <string>\n#include <numeric>\n#include <cstring>\n#include <cassert>\n#include <climits>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <functional>\nusing namespace std ;\n#define int long long\n#define rep(i, a, b) for (int i = (a); i <= (b); i++)\n#define per(i, a, b) for (int i = (a); i >= (b); i--)\n#define loop(s, v, it) for (s::iterator it = v.begin(); it != v.end(); it++)\n#define cont(i, x) for (int i = head[x]; i; i = e[i].nxt)\n#define clr(a) memset(a, 0, sizeof(a))\n#define ass(a, sum) memset(a, sum, sizeof(a))\n#define lowbit(x) (x & -x)\n#define all(x) x.begin(), x.end()\n#define ub upper_bound\n#define lb lower_bound\n#define pq priority_queue\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define iv inline void\n#define enter cout << endl\n#define siz(x) ((int)x.size())\n#define file(x) freopen(#x\".in\", \"r\", stdin),freopen(#x\".out\", \"w\", stdout)\ntypedef long long ll ;\ntypedef unsigned long long ull ;\ntypedef pair <int, int> pii ;\ntypedef vector <int> vi ;\ntypedef vector <pii> vii ;\ntypedef queue <int> qi ;\ntypedef queue <pii> qii ;\ntypedef set <int> si ;\ntypedef map <int, int> mii ;\ntypedef map <string, int> msi ;\nconst int N = 100010 ;\nconst int INF = 0x3f3f3f3f ;\nconst int iinf = 1 << 30 ;\nconst ll linf = 2e18 ;\nconst int MOD = 1000000007 ;\nconst double eps = 1e-7 ;\nvoid print(int x) { cout << x << endl ; exit(0) ; }\nvoid PRINT(string x) { cout << x << endl ; exit(0) ; }\nvoid douout(double x){ printf(\"%lf\\n\", x + 0.0000000001) ; }\n\nint n, m ;\n\nstruct node {\n\tint h, s ;\n} a[N] ;\n\nbool cmp(node a, node b) {\n\treturn a.h < b.h ;\n}\n\nstruct Seg {\n\tint l, r, mn, mx, tag ;\n\t#define ls(x) x << 1\n\t#define rs(x) x << 1 | 1\n\t#define l(x) tr[x].l\n\t#define r(x) tr[x].r\n\t#define tag(x) tr[x].tag\n\t#define mn(x) tr[x].mn\n\t#define mx(x) tr[x].mx\n} tr[N << 2] ;\n\nvoid pushup(int x) {\n\tmn(x) = min(mn(ls(x)), mn(rs(x))) ;\n\tmx(x) = max(mx(ls(x)), mx(rs(x))) ;\n}\n\nvoid pushdown(int x) {\n\tif (tag(x)) {\n\t\ttag(ls(x)) += tag(x) ;\n\t\ttag(rs(x)) += tag(x) ;\n\t\tmn(ls(x)) += tag(x) ;\n\t\tmn(rs(x)) += tag(x) ;\n\t\tmx(ls(x)) += tag(x) ;\n\t\tmx(rs(x)) += tag(x) ;\n\t\ttag(x) = 0 ;\n\t}\n}\n\nvoid build(int x, int l, int r) {\n\tl(x) = l, r(x) = r ;\n\tif (l == r) return ;\n\tint mid = (l(x) + r(x)) >> 1 ;\n\tbuild(ls(x), l, mid) ;\n\tbuild(rs(x), mid + 1, r) ;\n\tpushup(x) ;\n}\n\nvoid modify(int x, int l, int r) {\n\tif (l <= l(x) && r(x) <= r) {\n\t\ttag(x)++ ; mx(x)++ ; mn(x)++ ;\n\t\treturn ;\n\t}\n\tpushdown(x) ;\n\tint mid = (l(x) + r(x)) >> 1 ;\n\tif (l <= mid) modify(ls(x), l, r) ;\n\tif (mid < r) modify(rs(x), l, r) ;\n\tpushup(x) ;\n}\n\nint qmid(int x, int c) {\n\tif (l(x) == r(x)) return mn(x) ;\n\tpushdown(x) ;\n\tint mid = (l(x) + r(x)) >> 1 ;\n\tif (c <= mid) return qmid(ls(x), c) ;\n\telse return qmid(rs(x), c) ;\n}\n\nint ql(int x, int c) {\n\tif (l(x) == r(x)) return l(x) ;\n\tpushdown(x) ;\n\tif (mn(ls(x)) <= c) return ql(ls(x), c) ;\n\telse return ql(rs(x), c) ;\n}\n\nint qr(int x, int c) {\n\tif (l(x) == r(x)) return l(x) ;\n\tpushdown(x) ;\n\tif (mx(rs(x)) >= c) return qr(rs(x), c) ;\n\telse return qr(ls(x), c) ;\n}\n\nint query(int x) {\n\tif (l(x) == r(x)) return mn(x) * (mn(x) - 1) / 2 ;\n\tpushdown(x) ;\n\treturn query(ls(x)) + query(rs(x)) ;\n}\n\nsigned main(){\n\tscanf(\"%lld\", &n) ;\n\trep(i, 1, n) {\n\t\tscanf(\"%lld%lld\", &a[i].h, &a[i].s) ;\n\t\tm = max(m, a[i].h) ;\n\t}\n\tsort(a + 1, a + n + 1, cmp) ;\n\tbuild(1, 1, m) ;\n\trep(i, 1, n) {\n\t\tint res = qmid(1, a[i].h - a[i].s + 1) ;\n\t\tint L = ql(1, res), R = qr(1, res) ;\n\t\tif (R < a[i].h) {\n\t\t\tint len = a[i].h - R ;\n\t\t\tmodify(1, R + 1, a[i].h) ;\n\t\t\tmodify(1, L, L + a[i].s - len - 1) ;\n\t\t} else {\n\t\t\tmodify(1, L, L + a[i].s - 1) ;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\", query(1)) ;\n\treturn 0 ;\n}\n\n/*\n\u5199\u4ee3\u7801\u65f6\u8bf7\u6ce8\u610f\uff1a\n\t1.ll\uff1f\u6570\u7ec4\u5927\u5c0f\uff0c\u8fb9\u754c\uff1f\u6570\u636e\u8303\u56f4\uff1f\n\t2.\u7cbe\u5ea6\uff1f\n\t3.\u7279\u5224\uff1f\n\t4.\u81f3\u5c11\u505a\u4e00\u4e9b\n\u601d\u8003\u63d0\u9192\uff1a\n\t1.\u6700\u5927\u503c\u6700\u5c0f->\u4e8c\u5206\uff1f\n\t2.\u53ef\u4ee5\u8d2a\u5fc3\u4e48\uff1f\u4e0d\u884cdp\u53ef\u4ee5\u4e48\n\t3.\u53ef\u4ee5\u4f18\u5316\u4e48\n\t4.\u7ef4\u62a4\u533a\u95f4\u7528\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\uff1f\n\t5.\u7edf\u8ba1\u65b9\u6848\u662f\u7528dp\uff1f\u6a21\u4e86\u4e48\uff1f\n\t6.\u9006\u5411\u601d\u7ef4\uff1f\n*/\n\n```\n\n",
        "postTime": 1551343495,
        "uid": 54900,
        "name": "__Hacheylight__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4647 \u3010[IOI2007] sails \u8239\u5e06\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u773c\u63d0\u4ea4\u8bb0\u5f55\uff0c\u597d\u591a\u795e\u7287\u7528\u7ebf\u6bb5\u6811\u548c\u5e73\u8861\u6811\u5199\u51fa\u6765\u51e0 KB \u7684\u4ee3\u7801\uff0c\u4f46\u662f\u672c\u849f\u84bb\u5199\u4e0d\u52a8\uff0c\u53ea\u597d\u5728\u8fd9\u91cc\u5206\u4eab\u4e00\u4e0b\u8fd9\u7bc7 1KB \u90fd\u6ca1\u6709\u7684\u4ee3\u7801\u3002\n## \u4f20\u9001\u95e8\n[\u8fd9\u91cc](https://www.luogu.com.cn/problem/P4647)\n\n## \u5206\u6790\n\u9996\u5148\uff0c\u7b2c\u4e00\u53cd\u5e94\u80af\u5b9a\u662f\u8d2a\u5fc3\uff0c ~~\u603b\u5f52\u4e0d\u80fd\u662f\u641c\u7d22\u5427~~\uff0c\u8d2a\u5fc3\u51b3\u7b56\u662f\u6bcf\u6b21\u6302\u5728\u65d7\u6570\u6700\u5c11\u7684\u4e00\u5c42\uff0c\u5c3d\u91cf\u5f80\u4e0a\u6302\u3002\u4f46\u4e00\u4e2a\u4e00\u4e2a\u8d2a\u5fc3\u80af\u5b9a\u4f1a\u8d85\u65f6\uff0c\u9700\u8981\u7528\u6570\u636e\u7ed3\u6784\u6765\u4f18\u5316\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u65d7\u6746\u7684\u5148\u540e\u987a\u5e8f\u662f\u6ca1\u6709\u5173\u7cfb\u7684\uff0c\u53ea\u8981\u6bcf\u4e00\u6839\u4e0a\u7684\u65d7\u7684\u6570\u91cf\u56fa\u5b9a\uff0c\u8c01\u5148\u8c01\u540e\u662f\u4e0d\u5f71\u54cd\u7ed3\u679c\u7684\u3002\n\n\u597d\uff0c\u90a3\u6211\u4eec\u73b0\u5728\u9700\u8981\u4e00\u4e2a\u4ec0\u4e48\u6837\u7684\u6570\u636e\u7ed3\u6784\uff1f\n\n\u5bf9\u4e8e\u6570\u7ec4 $t$ \u6bcf\u4e00\u6b21\u65b0\u8bfb\u5165\u4e00\u4e2a $h_i$ \u548c $k_i$ \u6211\u4eec\u5148\u8981\u627e\u5230\u5728\u9ad8\u5ea6 $1 \\sim h_i$ \u4e2d\u627e\u5230\u65d7\u5e1c\u6570\u91cf\u6700\u5c11\u7684 $k_i$ \u4e2a\u9ad8\u5ea6\u7136\u540e\u628a\u8fd9 $k_i$ \u4e2a\u503c\u90fd\u52a0 $1$.\n\n\u5f88\u591a\u4eba\u8bd5\u4e86\u8bd5\u4f1a\u89c9\u5f97\u8fd9\u4e2a\u5e8f\u5217\u6709\u53ef\u80fd\u662f\u5355\u8c03\u9012\u51cf\u7684\uff0c\u4f46\u5176\u5b9e\u6ca1\u6709\u90a3\u4e48\u7b80\u5355\uff0c\u770b\u4e2a\u4f8b\u5b50\uff1a\n\n$t_i$ \u8868\u793a\u7b2c $i$ \u5c42\u653e\u4e86\u591a\u5c11\u65d7\u5b50\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\n![1](https://cdn.luogu.com.cn/upload/image_hosting/yjsrs2xx.png)\n\n\u73b0\u5728\u5982\u679c\u8fdb\u6765\u4e86\u4e00\u4e2a $h_i=16\\ k_i=8$ \u5e8f\u5217\u5c31\u4f1a\u53d8\u6210\uff1a\n\n![2](https://cdn.luogu.com.cn/upload/image_hosting/t8jwvo1d.png)\n\n\n\u7ed3\u679c\u53d1\u73b0\u5355\u8c03\u6027\u88ab\u7834\u574f\u6389\u4e86\uff0c\u6240\u4ee5\u4e0d\u80fd\u8fd9\u6837\u53bb\u7ef4\u62a4\u3002\n\n\u6240\u4ee5\u73b0\u5728\u8fd9\u4e2a\u95ee\u9898\u5c31\u5728\u5982\u4f55\u7ef4\u62a4\u5355\u8c03\u6027\u3002\u518d\u770b\u521a\u521a\u90a3\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u60f3\u8981\u7684\u662f\uff1a\n\n![3](https://cdn.luogu.com.cn/upload/image_hosting/3n9a9pra.png)\n\n\u5c31\u662f\u540e\u9762 5 \u4e2a 6 \u5f71\u54cd\u4e86\u8fde\u7eed\u6027\u3002\u90a3\u6211\u4eec\u52a0\u7684\u65f6\u5019\u4e0d\u8981\u52a0\u540e 5 \u4e2a 5\uff0c\u6539\u6210\u52a0\u524d\u9762 5 \u4e2a 5 \u4e0d\u5c31\u53ef\u4ee5\u4e86\u5417\uff1f\n\n\u6240\u4ee5\u603b\u7ed3\u4e00\u4e0b\n\n![\u793a\u4f8b](https://cdn.luogu.com.cn/upload/image_hosting/1h80sm0d.png)\n\n\u5047\u5982\u8981\u4fee\u6539 $h_i-k_i+1 \\sim h_i$ \u8fd9\u4e2a\u533a\u95f4\uff08\u56fe\u4e2d\u7ea2\u8272\u6807\u51fa\u6765\u7684\uff09\uff1a\n\n\u6211\u4eec\u9700\u8981\u8f6c\u6362\u6210\uff1a\u627e\u5230\u7b2c\u4e00\u6b21\u51fa\u73b0 $t_{h_i-k_i+1}$ \u8fd9\u4e2a\u6570\u7684\u4f4d\u7f6e\u3002\u7136\u540e\u5f80\u540e\u957f\u5ea6\u4e3a $r-h_i+k_i$ \u7684\u533a\u95f4\uff08\u7b2c\u4e00\u6bb5\u84dd\u8272\u533a\u95f4\uff09\u628a\u5b83\u52a0 $1$\u3002\u7136\u540e\u518d\u5c06 $r+1 \\sim h_i$ \u8fd9\u4e2a\u533a\u95f4\uff08\u7b2c\u4e8c\u6bb5\u84dd\u8272\u533a\u95f4\uff09\u52a0 $1$\u3002\n\n\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u4fee\u6539\u64cd\u4f5c\uff0c\u53ef\u4ee5\u7528\u5dee\u5206\u6765\u4f18\u5316\uff0c\u7136\u540e\u518d\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u524d\u7f00\u548c\u3002\u95ee\u9898\u662f\u5982\u4f55\u627e\u51fa $l$ \u548c $r$\u3002\u8fd9\u8fb9\u5c31\u8981\u7528\u5230\u6811\u72b6\u6570\u7ec4\u7684\u4e00\u4e2a\u6280\u5de7\u3002\u56e0\u4e3a\u6811\u72b6\u6570\u7ec4\u6709\u4e00\u4e2a lowbit \u7684\u7279\u6027\uff0c\u6240\u4ee5\u53ef\u4ee5\u5929\u7136\u7684\u8fdb\u884c\u4e8c\u5206\u3002\n\n~~\u6240\u4ee5\u8bf4\uff1a07 \u5e74\u7684\u9898\u76ee\u5c31\u50cf 07 \u5e74\u7684\u623f\u4ef7\u4e00\u6837\u7b80\u5355\u3002~~\n\n## \u8d85\u77ed\u7684\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\t\nusing namespace std;\nint n,maxh=1<<17,t[(1<<17)+5];\nlong long ans;\nstruct node{\n    int h,k;\n}a[100005];\nvoid modify(int i,int delta){\n    for(;i<=maxh;i+=i&-i) t[i]+=delta;\n}\nint query(int i){\n    int sum=0;\n    for(;i;i-=i&-i) sum+=t[i];\n    return sum;\n}\nint find(int x){ //\u4e8c\u5206 \n    int pos=0;\n    for(int i=maxh;i;i>>=1){\n        int j=pos+i;\n        if(j<=maxh && t[j]>=x){\n            pos=j;\n            x-=t[j];\n        }\n    }\n    return pos;\n}\nint main(){\n    cin>>n;\n    for(int i=1;i<=n;i++) cin>>a[i].h>>a[i].k;\n    sort(a+1,a+n+1,[](node x,node y){return x.h<y.h;});\n    for(int i=1;i<=n;i++){\n        int pos=a[i].h-a[i].k+1;\n        int val=query(pos);\n        int l=find(val+1)+1;\n        int r=(val==0)?a[i].h:find(val);\n        modify(l,+1);   modify(l+r-pos+1,-1);\n        modify(r+1,+1); modify(a[i].h+1,-1);\n    }\n    for(int i=1;i<=a[n].h;i++){\n        long long s=query(i);\n        ans+=s*(s-1)/2;\n    }\n    cout<<ans<<endl;\n}\n```\n\n\n\n\n",
        "postTime": 1658477751,
        "uid": 422348,
        "name": "Yang818",
        "ccfLevel": 4,
        "title": "P4647\u9898\u89e3"
    },
    {
        "content": "# sails \u8239\u5e06\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4647)\n## \u601d\u8def\n\u5176\u5b9e\u5e76\u4e0d\u96be\uff0c\u4e5f\u4e0d\u77e5\u9053luogu\u600e\u4e48\u8bc4\u5230\u9ed1\u9898\u7684\uff0c\u6216\u8bb8\u662f\u6076\u610f\u8bc4\u5206\u5427\n\n\u9996\u5148\u5efa\u7acb\u6a21\u578b\u3002\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6845\u6746\u7684\u6392\u5217\u5e76\u4e0d\u5f71\u54cd\u7ed3\u679c\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u6bcf\u4e00\u5c42\u5982\u679c\u6709$x$\u4e2a\u65d7\u5b50\uff0c\u90a3\u4e48\u4ea7\u751f\u7684\u8d21\u732e\u5c31\u662f$\\frac{x\\times (x-1)}{2}$\n\n\u597d\uff0c\u65e2\u7136\u6ca1\u6709\u5f71\u54cd\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u5c31\u53ef\u4ee5\u6309\u6845\u6746\u7684\u9ad8\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u4e86\n\n\u6709\u4e00\u4e2a\u6bd4\u8f83$\\text {naive}$\u7684\u8d2a\u5fc3\u5c31\u662f\uff0c\u5bf9\u4e8e\u5f53\u524d\u7684\u6845\u6746\uff0c\u5047\u5982\u6211\u4eec\u53ef\u4ee5\u653e$k$\u4e2a\u65d7\u5b50\uff0c\u90a3\u4e48\uff0c\u4e00\u5b9a\u9009\u7684\u662f\u90a3\u4e9b\u653e\u7684\u65d7\u5b50\u6700\u5c11\u7684$k$\u5c42\uff08\u53ef\u4ee5\u770b\u770b\u4e0a\u9762\u90a3\u4e2a\u5f0f\u5b50\uff09\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u8f6c\u6362\u4e00\u4e0b\uff0c\u4f60\u60f3\u8c61\u6210\u6709$h$\u4e2a\u67f1\u5b50\uff0c\u4f60\u6bcf\u6b21\u53ef\u4ee5\u9009\u6700\u77ee\u7684$k$\u6839\u67f1\u5b50\u4f7f\u5f97\u5b83\u4eec\u7684\u9ad8\u5ea6\u52a01\n\n\u90a3\u6211\u4eec\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\u4e0d\u96be\u60f3\u5230\u7528\u5e73\u8861\u6811\uff0c\u7136\u540e\u5c31\u662f\u4e00\u4e2a\u6587\u827a\u5e73\u8861\u6811\u548c\u666e\u901a\u5e73\u8861\u6811\u7684\u677f\u5b50\u4e86\uff0c\u6211\u7528\u7684\u975e\u65cbTreap\u5b9e\u73b0\uff0c\u6bd4\u8f83\u597d\u5b9e\u73b0\n\n\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u770b\u770b\u4ee3\u7801\n## $\\text {Code}$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define Int register int\n#define ll long long\n#define MAXN 100005\n\nint n,rt,tot;\nint ls[MAXN],rs[MAXN],key[MAXN],val[MAXN],tag[MAXN],size[MAXN];\n\nvoid Pushup (int x)\n{\n\tsize[x] = size[ls[x]] + size[rs[x]] + 1;\n}\n\nvoid Pushdown (int x)\n{\n\tif (!tag[x]) return ;\n\tif (ls[x]) val[ls[x]] += tag[x],tag[ls[x]] += tag[x];\n\tif (rs[x]) val[rs[x]] += tag[x],tag[rs[x]] += tag[x];\n\ttag[x] = 0;\n}\n\nint build (int l,int r)\n{\n\tif (l > r) return 0;\n\tint k = ++ tot;\n\tval[k] = 0,key[k] = rand (),size[k] = 1;\n\tint mid = (l + r) >> 1;\n\tls[k] = build (l,mid - 1),rs[k] = build (mid + 1,r);\n\treturn Pushup (k),k;\n}\n\nvoid Split (int rt,int k,int &x,int &y)\n{\n\tif (!rt) return x = y = 0,void ();\n\tPushdown (rt);\n\tif (val[rt] <= k) x = rt,Split (rs[rt],k,rs[rt],y);\n\telse y = rt,Split (ls[rt],k,x,ls[rt]);\n\tPushup (rt);\n}\n\nvoid Split_sz (int rt,int k,int &x,int &y)\n{\n\tif (!rt) return x = y = 0,void ();\n\tPushdown (rt);\n\tif (size[ls[rt]] + 1 <= k) x = rt,Split_sz (rs[rt],k - size[ls[rt]] - 1,rs[rt],y);\n\telse y = rt,Split_sz (ls[rt],k,x,ls[rt]);\n\tPushup (rt);\n}\n\nint Merge (int x,int y)\n{\n\tif (!x || !y) return x + y;\n\tPushdown (x),Pushdown (y);\n\tif (key[x] < key[y]) return rs[x] = Merge (rs[x],y),Pushup (x),x;\n\telse return ls[y] = Merge (x,ls[y]),Pushup (y),y;\n}\n\nint Getmax (int x)\n{\n\twhile (rs[x]) Pushdown (x),x = rs[x];\n\treturn val[x];\n}\n\nstruct Node\n{\n\tint h,k;\n\tbool operator < (const Node &p)const\n\t{\n\t\treturn h < p.h;\n\t}\n}a[MAXN];\n\nll Ans;\n\nvoid dfs (int x)\n{\n\tif (!x) return ;\n\tif (val[x]) Ans += 1ll * val[x] * (val[x] - 1) >> 1;\n\tPushdown (x);\n\tdfs (ls[x]),dfs (rs[x]);\n}\n\ntemplate <typename T> inline void read (T &t){t = 0;char c = getchar();int f = 1;while (c < '0' || c > '9'){if (c == '-') f = -f;c = getchar();}while (c >= '0' && c <= '9'){t = (t << 3) + (t << 1) + c - '0';c = getchar();} t *= f;}\ntemplate <typename T,typename ... Args> inline void read (T &t,Args&... args){read (t);read (args...);}\ntemplate <typename T> inline void write (T x){if (x < 0){x = -x;putchar ('-');}if (x > 9) write (x / 10);putchar (x % 10 + '0');}\n\nsigned main()\n{\n\tread (n);\n\tsrand (time (0));\n\tfor (Int i = 1;i <= n;++ i) read (a[i].h,a[i].k);\n\tsort (a + 1,a + n + 1);\n\trt = build (1,a[1].h);\n\tfor (Int i = 1;i <= n;++ i)\n\t{\n\t\twhile (tot < a[i].h) key[++ tot] = rand (),size[tot] = 1,rt = Merge (tot,rt);\n\t\tint x,y,z;\n\t\tSplit_sz (rt,a[i].k,x,y);\n\t\t++ val[x],++ tag[x];\n\t\tint Max = Getmax (x);\n\t\tSplit (x,Max - 1,x,z),x = Merge (x,y);\n\t\tSplit (x,Max,x,y),rt = Merge (Merge (x,z),y);\n\t}\n\tdfs (rt);\n\twrite (Ans),putchar ('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1585985134,
        "uid": 124781,
        "name": "Walking_Dead",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4647 \u3010[IOI2007] sails \u8239\u5e06\u3011"
    }
]