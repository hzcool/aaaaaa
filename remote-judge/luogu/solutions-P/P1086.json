[
    {
        "content": "//\u8fd9\u9053\u9898\u770b\u8d77\u6765\u590d\u6742\u5176\u5b9e\u5f88\u6c34\u3002\u6ce8\u610f\u4e0d\u8981\u628a\u9898\u76ee\u770b\u9519\u4e86\uff0c\u662f\u8d2a\u5fc3\u4e0d\u662f\u8ba9\u4f60\u627e\u5230\u6700\u4f18\u89e3\uff08\u5373\u5e76\u4e0d\u662f\u8ba9\u4f60\u627e\u4e00\u6761\u8def\u5728\u89c4\u5b9a\u65f6\u95f4\u4f7f\u91c7\u6458\u82b1\u751f\u6570\u6700\u5927\uff09\n\n\u4ee3\u7801\u5f88\u7b80\u6d01\uff0c\u9898\u89e3\u6700\u6b63\u5e38\u3002\n\n       \n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\u3002\nusing namespace std;\nint m,n,i,j,k=1,t,u,ans;\nstruct peanuts{//\u7528\u7ed3\u6784\u4f53\u5b58\u5750\u6807\u548c\u6570\u91cf\u53ca\u65f6\u95f4\u3002\uff08x\uff0cy\u5750\u6807\uff0ctime\u65f6\u95f4\uff0cw\u6570\u91cf\uff09\n    int x,y,time,w;\n};  peanuts p[1000001];//\u7ed3\u6784\u4f53\u4e0b\u6807\u7528\u6765\u6392\u5e8f\u3002\nint a[1010][1010];//\u5f00\u4e2a2\u7ef4\u6570\u7ec4\u7528\u6765\u8f93\u5165\u6570\u636e\u3002\nint main(){\n    cin>>m>>n>>t;\n    for(i=1;i<=m;i++)\n       for(j=1;j<=n;j++){\n          cin>>a[i][j];//\u8f93\u5165\u5b8c\u6210\u3002\n             if(a[i][j]>0) {//\u5f53\u5b83\u4e0b\u9762\u6709\u82b1\u751f\u7684\u65f6\u5019\u5c31\u5b58\u5b83\u7684\u6570\u636e\u3002\n             p[k].w=a[i][j];\n             p[k].x=i;\n             p[k].y=j;\n             k++;\n         }\n      }\n    for(i=1;i<k;i++)\n       for(j=i+1;j<=k;j++)\n          if(p[i].w<p[j].w)  swap(p[i],p[j]);//\u9009\u62e9\u6392\u5e8f\uff08\u7528\u4e0b\u6807\u6765\u6392\u5e8f\uff0c\u6570\u91cf\u591a\u7684\u6309\u9898\u610f\u5148\u6458\uff09\u3002\n     for(i=1;i<=k;i++){//\u679a\u4e3e\u6bcf\u4e2a\u82b1\u751f\u3002\n         u=p[i].x;//\u7531\u4e8e\u6211\u4eec\u8981\u8003\u8651\u591a\u591a\u91c7\u82b1\u751f\u8fd4\u56de\uff0c\u800c\u8fd4\u56de\u7684\u8def\u7a0b\u5c31\u662f\u6df1\u5ea6\u5373x\uff0c\u5982\u679c\u52a0\u4e0a\u8fd9\u4e2ax\u53ef\u4ee5\u6309\u65f6\u8fd4\u56de\u7684\u8bdd\u5c31\u91c7\u8fd9\u4e2a\u82b1\u751f\u3002\n            if(i==1) p[i].time=p[i].x+1;  //\u7b2c\u4e00\u4e2a\u82b1\u751f\u662f\u4e0d\u540c\u7684\uff0c\u56e0\u4e3a\u591a\u591a\u4e00\u5f00\u59cb\u53ef\u4ee5\u8df3\u5230\u7b2c\u4e00\u4e2a\u6700\u591a\u82b1\u751f\u7684\u6240\u5728\u5217\u3002\n              else   p[i].time=p[i-1].time+abs(p[i].x-p[i-1].x)+abs(p[i].y-p[i-1].y)+1;//\u4e0d\u662f\u7b2c\u4e00\u4e2a\u7684\u8bdd\u5c31\u52a0\u4e0a\u4e0e\u524d\u4e00\u4e2a\u7684\u5750\u6807\u5dee\u518d\u52a0\u91c7\u6458\u65f6\u95f4\u3002\n                 if (p[i].time+u<=t) ans+=p[i].w;//\u5982\u679c\u6570\u636e\u5408\u6cd5\u90a3\u4e48\u5c31\u628a\u82b1\u751f\u6570\u52a0\u4e0a\u3002\n     }\n    cout<<ans;//\u8f93\u51fa\u6700\u591a\u82b1\u751f\u6570\u5373\u53ef\u3002\n    return 0;\n}\n```",
        "postTime": 1500955511,
        "uid": 47539,
        "name": "1553928774abc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u5176\u5b9e\u539f\u672c\u60f3\u7528BFS\u7684\uff0c\u7ed3\u679c\u5199\u5b8c\u4e86\uff0c\u624d\u770b\u5230\u82b1\u751f\u5730\u91cc\u9762\u6ca1\u6709\u969c\u788d\u7269\uff0c\u679c\u65ad\u6362\u4e0a\u66fc\u54c8\u987f\uff0c\uff08\u66fc\u54c8\u987f\u771f\u662f\u4e00\u4e2a\u597d\u4e1c\u897f\uff09\u3002\u6309\u7167\u9898\u76ee\u8981\u6c42\u4e00\u4e2a\u4e00\u4e2a\u5730\u679a\u4e3e\u5c31\u597d\u4e86\uff0c\u5982\u679c\u6709\u4e0d\u77e5\u9053\u66fc\u54c8\u987f\u7684\uff0c~~\u767e\u5ea6\u4e00\u4e0b\uff0c\u4f60\u5c31\u77e5\u9053\u3002~~\uff1aD\uff08i,j\uff09=abs($x_i$-$x_j$)+abs($y_i$-$y_j$)\n\n**\u8bdd\u4e0d\u591a\u8bf4\uff0c\u8d34\u4ee3\u7801\uff1a**\n\n**\u6ce8\u91ca\u7248\uff1a**\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\nusing namespace std;\nconst int N=30;\nint mp[N][N];\nint n,m,k;\nint tm;\nint fx,fy,ex,ey;//\u8d77\u70b9\uff0c\u7ec8\u70b9\nint pn;\nint ans;\nstruct dire//\u8bb0\u5fc6\u82b1\u751f\u5730\u5740 \n{\n    int x,y,sum;\n}stu[N*N];\nbool comp(struct dire a,struct dire b)//\u6bd4\u8f83\uff0c\u5927\u7684\u5728\u524d\uff0c\u5c0f\u7684\u5728\u540e \n{\n    return a.sum>b.sum;\n}\nint main()\n{\n    cin>>n>>m>>k;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            cin>>mp[i][j];\n            if(mp[i][j]>0)//\u6709\u82b1\u751f \uff0c\u591a\u591a\uff1a\u6211\u770b\u5230\u4f60\u4eec\u4e86 \n            {\n                stu[++pn].sum=mp[i][j];//\u83b7\u5f97\u4e00\u7cfb\u5217\u6709\u82b1\u751f\u7684\u5750\u6807\n                stu[pn].x=i;\n                stu[pn].y=j;//\u4fdd\u5b58\u5750\u6807\n            }\n        }\n    }\n    sort(stu+1,stu+pn+1,comp);//\u6309\u7167\u9898\u610f\u6765\uff0c\u5148\u5927\u540e\u5c0f \n\tfx=1;\n\tfy=stu[1].y;//\u8bbe\u7acb\u4f60\u7684\u521d\u59cb\u4f4d\u7f6e \n\tk--;//\u4ece\u4eba\u7fa4\u4e2d\u7a9c\u51fa\u4e00\u4e2a\u5149\u5934,\u591a\u591a\u7528\u4e86\u4e00\u4e2a\u5355\u4f4d\u4ece\u4eba\u7fa4\u4e2d\u8df3\u51fa \n    for(int i=1;i<=pn;i++)//\u679a\u4e3e\u6bcf\u4e00\u4e2a\u6709\u82b1\u751f\u7684\u70b9\n    {\n        tm=0;//\u8ba1\u65f6\u5668\u6e05\u96f6 \n        ex=stu[i].x;\n        ey=stu[i].y;//\u8bbe\u5b9a\u591a\u591a\u7684\u7ec8\u70b9\u5750\u6807\n        tm=abs(fx-ex)+abs(fy-ey);//\u6c42\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u8ba1\u7b97\u672c\u6b21\u5bfc\u822a\u8ddd\u79bb \n        k--;//\u91c7\u82b1\u751f \n        k-=tm;//\u5269\u4f59\u65f6\u95f4\u51cf\u53bb\u524d\u5f80\u65f6\u95f4 \n        if(k>=ex)//\u53ef\u4ee5\u8fd4\u56de,\u88c5\u4e0a\u82b1\u751f \n        {\n            ans+=mp[ex][ey];//\u52a0\u5165 \n            fx=ex;\n            fy=ey;//\u8def\u5f84\u89c4\u5212\u6210\u529f\uff0c\u524d\u5f80 fx,fy \n        }\n        else//\u591a\u591a\u5982\u679c\u53bb\u8fd9\u4e2a\u76ee\u6807\u5c31\u56de\u4e0d\u53bb\u4e86\uff0c\u5e26\u4e0a\u73b0\u5728\u7684\u82b1\u751f\u7c73\u56de\u53bb \n        {\n            cout<<ans<<endl;\n            return 0;\n        }\n    }\n    cout<<ans<<endl;//\u771f\u68d2\uff0c\u83b7\u5f97\u4e86\u5168\u90e8\u7684\u82b1\u751f\u7c73 \n    return 0;\n}\n\n```\n\n**\u65e0\u6ce8\u91ca\u7248\uff1a**\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\nusing namespace std;\nconst int N=30;\nint mp[N][N];\nint n,m,k;\nint tm;\nint fx,fy,ex,ey;\nint pn;\nint ans;\nstruct dire\n{\n    int x,y,sum;\n}stu[N*N];\nbool comp(struct dire a,struct dire b)\n{\n    return a.sum>b.sum;\n}\nint main()\n{\n    cin>>n>>m>>k;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            cin>>mp[i][j];\n            if(mp[i][j]>0)\n            {\n                stu[++pn].sum=mp[i][j];\n                stu[pn].x=i;\n                stu[pn].y=j;\n            }\n        }\n    }\n    sort(stu+1,stu+pn+1,comp);\n\tfx=1;\n\tfy=stu[1].y;\n\tk--;\n    for(int i=1;i<=pn;i++)\n    {\n        tm=0;\n        ex=stu[i].x;\n        ey=stu[i].y;\n        tm=abs(fx-ex)+abs(fy-ey);\n        k--;\n        k-=tm;\n        if(k>=ex)\n        {\n            ans+=mp[ex][ey];\n            fx=ex;\n            fy=ey;\n        }\n        else\n        {\n            cout<<ans<<endl;\n            return 0;\n        }\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1540129113,
        "uid": 103304,
        "name": "a2954898606",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u7528\u4e8c\u7ef4\u6570\u7ec4\u5b58\u653e\u82b1\u751f\u5730\u7684\u4fe1\u606f\u662f\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\u3002\u7136\u800c\uff0c\u7528aField[0][0]\u8fd8\u662faField[1][1] \u5bf9\u5e94\u82b1\u751f\u5730\u7684\u5de6\u4e0a\u89d2\uff0c\u662f\u503c\u5f97\u601d\u8003\u4e00\u4e0b\u7684\u3002\u56e0\u4e3a\u4ece\u5730\u91cc\u5230\u8def\u4e0a\u8fd8\u9700\u89811 \u4e2a\u5355\u4f4d\u65f6\u95f4\uff0c\u9898\u76ee\u4e2d\u7684\u5750\u6807\u53c8\u90fd\u662f\u4ece1 \u5f00\u59cb\uff0c\u6240\u4ee5\u82e5aField[1][1] \u5bf9\u5e94\u82b1\u751f\u5730\u7684\u5de6\u4e0a\u89d2\uff0c\u5219\u4eceaField[i][j] \u70b9\uff0c\u56de\u5230\u8def\u4e0a\u6240\u9700\u65f6\u95f4\u5c31\u662fi\uff0c\u8fd9\u6837\u66f4\u4e3a\u65b9\u4fbf\u548c\u81ea\u7136\uff0c\u4e0d\u6613\u51fa\u9519\u3002\u5e76\u4e0d\u662fC/C++ \u7684\u6570\u7ec4\u4e0b\u6807\u4ece0 \u5f00\u59cb\uff0c\u6211\u4eec\u4f7f\u7528\u6570\u7ec4\u7684\u65f6\u5019\uff0c\u5c31\u8981\u4ece\u4e0b\u6807\u4e3a0 \u7684\u5143\u7d20\u5f00\u59cb\u7528\u3002\n\n\n\u5e38\u89c1\u95ee\u9898\uff1a\n\n\n\u95ee\u9898\u4e00\uff1a\u8bfb\u9898\u65f6\u5e94\u8be5\u4ed4\u7ec6\u8bfb\u3002\u6709\u7684\u540c\u5b66\u6ca1\u6709\u770b\u5230\u6bcf\u6b21\u53ea\u80fd\u62ff\u5269\u4e0b\u82b1\u751f\u682a\u4e2d\u6700\u5927\u7684\uff0c\u800c\u662f\u5e0c\u671b\u627e\u5230\u4e00\u79cd\u5728\u89c4\u5b9a\u65f6\u95f4\u5185\u80fd\u591f\u62ff\u6700\u591a\u82b1\u751f\u7684\u7ec4\u5408\uff0c\u628a\u9898\u76ee\u53d8\u6210\u4e86\u53e6\u5916\u4e00\u9053\u9898\u3002\n\n\n\u95ee\u9898\u4e8c\uff1a\u6709\u7684\u540c\u5b66\u6ca1\u6709\u8bfb\u5230\u201c\u6ca1\u6709\u4e24\u682a\u82b1\u751f\u682a\u7684\u82b1\u751f\u6570\u76ee\u76f8\u540c\u201d\u7684\u6761\u4ef6\uff0c\u56e0\u6b64\u628a\u9898\u76ee\u590d\u6742\u5316\u4e86\u3002\n\n\n\u95ee\u9898\u4e09\uff1a\u8fd9\u4e2a\u9898\u76ee\u662f\u5047\u8bbe\u7334\u5b50\u5728\u53d6\u82b1\u751f\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u56de\u5230\u5927\u8def\u4e0a\u7684\uff0c\u6709\u4e9b\u540c\u5b66\u5728\u601d\u8003\u662f\u5426\u53ef\u80fd\u5728\u4e2d\u95f4\u56de\u5230\u5927\u8def\u4e0a\uff0c\u56e0\u4e3a\u9898\u76ee\u6ca1\u8bf4\u5728\u5927\u8def\u4e0a\u79fb\u52a8\u8981\u82b1\u65f6\u95f4\uff0c\u6240\u4ee5\u6709\u53ef\u80fd\u4e2d\u9014\u51fa\u6765\u518d\u8fdb\u53bb\u6458\u7684\u82b1\u751f\u66f4\u591a\u3002\n\n\n\u9644AC\u4ee3\u7801\uff1a\n\n\n```cpp\n#include <stdio.h>\n#include <stdlib.h>\n#include <memory.h>\n#include <math.h>\nint T,M,N,K;\n#define MAX_NUM 55\nint aField[MAX_NUM][MAX_NUM];\nint main()\n{\nint i,j,t,m,n;\nscanf(\"%d\",&T);\nfor(t=0;t<T;t++)\n{\nscanf(\"%d%d%d\",&M,&N,&K);\nfor(m=1;m<=M;m++)\nfor(n=1;n<=N;n++)\nscanf(\"%d\",&aField[m][n]);\nint nTotalPeanuts=0; //\u6458\u5f97\u7684\u82b1\u751f\u603b\u6570\nint nTotalTime=0; //\u5df2\u7ecf\u82b1\u53bb\u7684\u603b\u65f6\u95f4\nint nCuri=0,nCurj; //\u5f53\u524d\u4f4d\u7f6e\u5750\u6807\nwhile(nTotalTime<K)\n{\nint nMax=0,nMaxi,nMaxj; //\u6700\u5927\u7684\u82b1\u751f\u6570\u76ee\uff0c\u53ca\u5176\u6240\u5904\u7684\u4f4d\u7f6e\n//\u5bfb\u627e\u4e0b\u4e00\u4e2a\u6700\u5927\u82b1\u751f\u6570\u76ee\u53ca\u5176\u4f4d\u7f6e\nfor(i=1;i<=M;i++)\n{\nfor(j=1;j<=N;j++)\n{\nif(nMax<aField[i][j])\n{\nnMax=aField[i][j];\nnMaxi=i;\nnMaxj=j;\n}\n}\n}\nif(nMax==0) //\u5730\u91cc\u6ca1\u6709\u82b1\u751f\u4e86\nbreak;\nif(nCuri==0)\nnCurj=nMaxj; //\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u5728\u8def\u4e0a\uff0c\u90a3\u4e48\u5e94\u8d70\u5230\u6a2a\u5750\u6807nMaxj\u5904\uff0c\u518d\u8fdb\u5165\u82b1\u751f\u5730\n//\u4e0b\u9762\u68c0\u67e5\u5269\u4f59\u7684\u65f6\u95f4\u591f\u4e0d\u591f\u8d70\u5230nMaxi,nMaxj\u5904\uff0c\u6458\u53d6\u82b1\u751f\uff0c\u5e76\u56de\u5230\u8def\u4e0a if(nTotalTime+nMaxi+1+abs(nMaxi-nCuri)+abs(nMaxj-nCurj <=K)\n{\nnTotalTime+=1+abs(nMaxi-nCuri)+abs(nMaxj-nCurj);\nnCuri=nMaxi;\nnCurj=nMaxj;\nnTotalPeanuts+=aField[nMaxi][nMaxj];\naField[nMaxi][nMaxj]=0; //\u6458\u8d70\u82b1\u751f\u8d4b\u503c\u4e3a0\n}\nelse\nbreak;\n}\nprintf(\"%d\\n\",nTotalPeanuts);\n}\nreturn 0;\n}\n\n```",
        "postTime": 1488806621,
        "uid": 32973,
        "name": "\u6a31\u58a8\u6284",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u603b\u4f53\u6765\u8bf4\u4e0d\u662f\u5f88\u96be\uff0c\u8981\u6ce8\u610f\u7684\u5730\u65b9\u662f\u6bcf\u8d70\u4e00\u6b65\u8981\u5224\u65ad\u4e00\u4e0b\u8d70\u4e86\u4e4b\u540e\u662f\u5426\u53ef\u4ee5\u5728\u6307\u5b9a\u65f6\u95f4\u5185\u51fa\u53bb\uff0c\u5982\u679c\u51fa\u4e0d\u53bb\uff0c\u5c31\u4e0d\u8d70\u8fd9\u4e00\u6b65\u3002\u7b2c\u4e00\u6b21\u8d70\u8981\u7279\u522b\u5224\u65ad\uff0c\u56e0\u4e3a\u662f\u4ece\u8def\u8fb9\u8d70\u6700\u77ed\u7684\u8def\u7ebf\u5230\u8fbe\u7b2c\u4e00\u4e2a\u70b9\u3002\u8be6\u60c5\u89c1\u4ee3\u7801QuQ\n\n    #include<bits/stdc++.h> //\u4e07\u80fd\u5934 \n    using namespace std;\n    int m,n,k,a[25][25],maxn=0,p=0,ii,jj,pp,huasheng=0;\n    int main()\n    {\n        //freopen(\"data.in\",\"r\",stdin);\n        cin>>m>>n>>k;\n        for(int i=1;i<=m;i++)\n        {\n            for(int j=1;j<=n;j++)\n            {\n                cin>>a[i][j]; //\u8f93\u5165\u82b1\u751f\u7530 \n            }\n        } \n        //\u7b2c\u4e00\u6b21\n        for(int i=1;i<=m;i++)\n        {\n            for(int j=1;j<=n;j++)\n            {\n                if(a[i][j]!=0) //\u6709\u82b1\u751f\u690d\u682a \n                {\n                    if(a[i][j]>maxn)\n                    {\n                        maxn=a[i][j]; //maxn\u62ff\u5230\u82b1\u751f\u6700\u591a\u7684\u82b1\u751f\u690d\u682a\n                        //\u9898\u76ee\u8bf4\u7684\u662f\u5148\u627e\u82b1\u751f\u6700\u591a\u7684\u690d\u682a \n                    }\n                }\n            }\n        }\n        for(int i=1;i<=m;i++)\n        {\n            for(int j=1;j<=n;j++)\n            {\n                if(a[i][j]==maxn) //\u627e\u5230\u8fd9\u68f5\u82b1\u751f\u690d\u682a\u7684\u4f4d\u7f6e \n                {\n                    p+=i; //p\u8bb0\u5f55\u4e0b\u4ece\u8def\u8fb9\u5230\u8fd9\u68f5\u82b1\u751f\u690d\u682a\u6240\u8017\u7528\u7684\u65f6\u95f4 \n                    a[i][j]=0; //\u8fd9\u4e2a\u5730\u65b9\u5df2\u7ecf\u91c7\u6458\u5b8c\u6bd5\uff0c\u53d8\u4e3a0 \n                    ii=i;\n                    jj=j; //ii\u3001jj\u8bb0\u5f55\u4e0b\u5f53\u524d\u8fd9\u68f5\u82b1\u751f\u690d\u682a\u7684\u4f4d\u7f6e\uff0c\u4ee5\u540e\u6709\u7528\n                }\n            }\n        }\n        if(2*p+1>k) //\u5982\u679c\u6765\u56de\u6240\u7528\u7684\u65f6\u95f4\u52a0\u4e0a\u91c7\u6458\u9700\u8981\u7684\u65f6\u95f4\u5927\u4e8e\u6307\u5b9a\u7684\u65f6\u95f4 \n        {\n            cout<<\"0\"; //\u5c0f\u7334\u4e00\u4e2a\u82b1\u751f\u90fd\u6458\u4e0d\u5230\uff08\u53ef\u601cQwQ\uff09 \n            return 0; \n        }\n        else\n        if(2*p+1==k) //\u5982\u679c\u6765\u56de\u6240\u7528\u7684\u65f6\u95f4\u52a0\u4e0a\u91c7\u6458\u9700\u8981\u7684\u65f6\u95f4\u521a\u597d\u7b49\u4e8e\u6307\u5b9a\u7684\u65f6\u95f4 \n        {\n            cout<<maxn; //\u5c0f\u7334\u6458\u5230\u4e86maxn\u4e2a\u82b1\u751f\uff08\u592a\u597d\u4e86\u6709\u5403\u7684QwQ\uff09 \n            return 0;\n        }\n        else //\u8d70\u5230\u8fd9\u91cc\u8bf4\u660e\u6709\u53ef\u80fd\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u91c7\u6458 \n        {\n            p++; //p\u52a0\u4e0a\u5c0f\u7334\u91c7\u6458\u6240\u9700\u7684\u65f6\u95f41 \n            pp=p; //pp\u50a8\u5b58\u7b2c\u4e00\u6b21\u6458\u82b1\u751f\u6240\u9700\u7684\u65f6\u95f4 \n            huasheng+=maxn; //\u53d8\u91cf\u82b1\u751f\u7d2f\u52a0 \n        }\n        //\u7b2c\u4e00\u6b21\u7ed3\u675f \n        while(pp!=k) //\u4ece\u7b2c\u4e8c\u6b21\u5f00\u59cb\u5c31\u53ef\u4ee5\u5faa\u73af\u4e86\uff01 \n                     //\u76f4\u5230pp\uff08\u4e00\u5171\u6240\u7528\u65f6\u95f4\uff09\u7b49\u4e8e k\uff08\u6307\u5b9a\u65f6\u95f4\uff09\u4e0b \n        {\n            maxn=0; //\u4e00\u5b9a\u8981\u6e05\u96f6 \n            for(int i=1;i<=m;i++)\n            {\n                for(int j=1;j<=n;j++)\n                {\n                    if(a[i][j]!=0) \n                    {\n                        if(a[i][j]>maxn)\n                        {\n                            maxn=a[i][j]; //\u62ff\u5230\u5237\u65b0\u540e\u7684\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u7684\u6570\uff08\u521a\u624d\u6709\u4e00\u4e2a\u6700\u5927\u7684\u6570\u88ab\u5237\u65b0\u62100\u4e86\uff09 \n                        }\n                    }\n                }\n            }\n            for(int i=1;i<=m;i++)\n            {\n                for(int j=1;j<=n;j++)\n                {\n                    if(a[i][j]==maxn)\n                    {\n                        p+=abs(i-ii)+abs(j-jj); //\u5c0f\u7334\u4e0d\u80fd\u659c\u7740\u8d70\uff0c\u53ea\u80fd\u6a2a\u7740\u3001\u7ad6\u7740\u8d70\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5173\u7cfb\u5f0f\n                                                //\u5c31\u53ef\u4ee5\u7b97\u51fa\u5c0f\u7334\u4ece\u4e00\u4e2a\u82b1\u751f\u690d\u682a\u5230\u53e6\u4e00\u4e2a\u82b1\u751f\u690d\u682a\u6240\u7528\u7684\u65f6\u95f4\u4e86\uff01\n                                                //\u597d\u50cf\u53eb\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\uff1f \n                        a[i][j]=0; //\u5237\u65b0\uff0c\u8fd9\u4e2a\u5730\u65b9\u53d8\u62100 \n                        ii=i;\n                        jj=j; //ii\u3001jj\u8bb0\u5f55\u4e0b\u5f53\u524d\u8fd9\u68f5\u82b1\u751f\u690d\u682a\u7684\u4f4d\u7f6e\uff0c\u4ee5\u540e\u6709\u7528 \n                    }\n                }\n            }\n            if(ii+p+1>k) //\u8d70\u56de\u53bb\u7684\u65f6\u95f4\u52a0\u4e0a\u4e0a\u4e00\u6b21\u8017\u8d39\u7684\u65f6\u95f4\u548c\u8fd9\u4e00\u6b21\u91c7\u6458\u7684\u65f6\u95f4\u5927\u4e8e\u6307\u5b9a\u65f6\u95f4 \n            {\n                cout<<huasheng; //\u8fd9\u6b21\u4e0d\u6458\uff0c\u53ea\u8f93\u51fa\u4e0a\u4e00\u6b21\u6458\u7684\u4e2a\u6570 \n                return 0;\n            }\n            else\n            if(ii+p+1==k) //\u8d70\u56de\u53bb\u7684\u65f6\u95f4\u52a0\u4e0a\u4e0a\u4e00\u6b21\u8017\u8d39\u7684\u65f6\u95f4\u548c\u8fd9\u4e00\u6b21\u91c7\u6458\u7684\u65f6\u95f4\u521a\u597d\u7b49\u4e8e\u6307\u5b9a\u65f6\u95f4 \n            {\n                cout<<huasheng+maxn; //\u4e0a\u6b21\u7684\u548c\u8fd9\u6b21\u7684\u4e00\u8d77\u62ff\u8d70\u5403\uff01 \n                return 0;\n            }\n            else //\u8fd8\u6709\u53ef\u80fd\u53ef\u4ee5\u7ee7\u7eed\u6458 \n            {\n                p++; //\u52a0\u4e0a\u91c7\u6458\u8017\u8d39\u7684\u65f6\u95f41 \n                pp=p; //\u8bb0\u5f55\u4e00\u5171\u6240\u7528\u7684\u65f6\u95f4 \n                huasheng+=maxn; //\u53d8\u91cf\u82b1\u751f\u7d2f\u52a0 \n            }\n            //\u8fd9\u6837\u4e0d\u65ad\u5faa\u73af\u7684\u8bdd\u603b\u4f1a\u51fa\u73b0\u5927\u4e8e\u6216\u7b49\u4e8e\u6307\u5b9a\u65f6\u95f4\u7684\u60c5\u51b5\uff01 \n        }\n        return 0;\n    } \n    //\u4ee3\u7801\u6709\u70b9\u957f\uff0c\u4f46\u662f\u8f83\u6613\u61c2\uff0c\u5404\u4f4ddalao\u52ff\u55b7\uff01\uff01\uff01 ",
        "postTime": 1533459075,
        "uid": 80354,
        "name": "\ua9c1Lunnie\u306e\ua9c2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "```cpp\n#include <algorithm>\n#include <iostream>\nusing namespace std;\n//ifstream cin(\"peanuts.in\",ios :: in);\n//ofstream cout(\"peanuts.out\",ios :: out);\nint n,m,Time,map[21][21],ans = 0;\ninline void dfs(int nowtime,int x,int y) {\n  //nowtime\u8868\u793a\u73b0\u5728\u7684\u65f6\u95f4\n  //x\u548cy\u8868\u793a\u73b0\u5728\u7684\u5750\u6807\n  int Maxx,Maxy,Max = -99999;\n  for (int i = 1;i <= n;i++)\n    for (int j = 1;j <= m;j++)\n      if (map[i][j] > Max) {  //\u627e\u5230\u6700\u5927\u503c\n        Max = map[i][j];\n        Maxx = i;  //\u8bb0\u4e0b\u5750\u6807\n        Maxy = j;\n      }\n  if (!y) y = Maxy;  //\u5982\u4f55\u5728\u8def\u8fb9\uff0c\u8df3\u5230Maxy\n  if (nowtime < abs(x-Maxx)+abs(y-Maxy)+Maxx+1 || !map[Maxx][Maxy])\n  //\u82e5\u73b0\u5728\u7684\u65f6\u95f4<\u91c7(Maxx,Maxy)\u7684\u65f6\u95f4+\u56de\u5230\u8def\u8fb9\u7684\u65f6\u95f4\u6216\u662f(Maxx,Maxy)\u4e0a\u6ca1\u6709\u82b1\u751f\u5c31\u7ed3\u675f\n    return;\n  else {  //\u91c7\u6458\n    ans += map[Maxx][Maxy];\n    map[Maxx][Maxy] = 0;  //\u88ab\u6458\u5b8c\n    dfs(nowtime-abs(x-Maxx)-abs(y-Maxy)-1,Maxx,Maxy);  //\u7ee7\u7eed\n    //nowtime\u51cf\u53bb\u9700\u8981\u7684\u65f6\u95f4\n    //(x,y)\u79fb\u52a8\u5230(Maxx,Maxy)\n  }\n}\nint main() {\n  ios :: sync_with_stdio(false);\n  cin >> n >> m >> Time;\n  for (int i = 1;i <= n;i++)\n    for (int j = 1;j <= m;j++) cin >> map[i][j];\n  dfs(Time,0,0);  //\u641c\u7d22\n  cout << ans;\n  return 0;\n}\n\n```",
        "postTime": 1472533497,
        "uid": 17521,
        "name": "lrj124",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u4eca\u5929\u521a\u597d\u8001\u5e08\u8bb2\u7a00\u677e\u77e9\u9635\uff0c\u6211\u770b\u5230\u8fd9\u9053\u9898\uff0c\u7a81\u7136\u60f3\u53ef\u4ee5\u7528\u6765\u505a\u3002\u4e8e\u662f\u505a\u4e86\u4e00\u4e0b\u3002\n\n\u4ecb\u7ecd\u4e00\u4e0b\u7a00\u677e\u77e9\u9635\uff1a\n\n\u50cf\n\n0 0 0 1 0\n\n0 3 0 0 0\n\n0 0 2 0 0\n\n0 0 1 0 0\n\n\u53ef\u4ee5\u7528\u7a00\u677e\u77e9\u9635\u8868\u793a\u4e3a\n\n1 4 1\n\n2 2 3\n\n3 3 2\n\n4 3 1\n\n\u5176\u4e2d\uff0c\u7b2c\u4e00\u5217\u8868\u793a\u6570\u636e\u6240\u5728\u884c\uff0c\u7b2c\u4e8c\u5217\u8868\u793a\u6240\u5728\u5217\uff0c\u7b2c\u4e09\u5217\u662f\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u3002\n\n\u770b\u8f93\u5165\u6570\u636e\u4f1a\u53d1\u73b0\uff0c~~\u6ca1\u9519\uff01\u5f88\u7a00\u677e~~\u56e0\u4e3a\u6709\u592a\u591a\u65e0\u7528\u7684\u6570\u636e\uff0c\u6240\u4ee5\u5c31\u7528\u7a00\u677e\u77e9\u9635\u6765\u4fdd\u5b58\u3002\u800c\u4e14\u65b9\u4fbf\u4e0b\u9762\u7684\u6a21\u62df~~\u66b4\u529b~~\u3002\u3002\u3002\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\nint a[25][25];\nint b[405][5];\nint n, m, k;\nint q, ans;\nint main(){\n    cin >> m >> n >> k;\n    for (int i=1; i<=m; i++)\n      for (int j=1; j<=n; j++){\n      \t  cin >> a[i][j];\n      \t  if (a[i][j]!=0){\n      \t  \t q++;\n      \t  \t b[q][1]=i;\n      \t  \t b[q][2]=j;\n      \t  \t b[q][3]=a[i][j];\n          } \n      }\n\n```\n\u5b58\u597d\u4ee5\u540e\u5e72\u4ec0\u4e48\u5462\uff1f\n\n\u770b\u9898\uff01\u6bcf\u6b21\u91c7\u6700\u591a\u7684\uff0c\u6240\u4ee5\u8981\u6392\u5e8f\uff01\n\n```cpp\n\n    for(int i=1; i<=q; i++)\n      for(int j=i+1; j<=q; j++){\n      \tif (b[i][3]<b[j][3]){\n          swap(b[i][3], b[j][3]); \n          swap(b[i][1], b[j][1]); \n          swap(b[i][2], b[j][2]);\n        }\n      }\n\n```\n\u6392\u5e8f\u5b8c\u4e86\uff0c\u5c31\u5f00\u59cb\u6a21\u62df\uff0c\u5148\u521d\u59cb\u4e00\u4e0b\u3002\u5982\u679c\u4e00\u9897\u90fd\u91c7\u4e0d\u5230\uff0c\u5c31\u8f93\u51fa\u3002\u5426\u5219ans=\u6700\u5927\u7684\u3002\u65f6\u95f4\u51cf\u53bb\u6240\u7528\u65f6\u95f4\u3002\u7136\u540e\u5f00\u59cb\u6a21\u62df\u3002\u6c42\u51fa\u6765\u5230\u6b64\u82b1\u751f\u7684\u65f6\u95f4\uff0c\u52a0\u4e0a\u91c7\u6458\u4e0e\u8fd4\u56de\u7684\uff0c\u5982\u679ctime enough\u5c31\u52a0\u4e0a\u82b1\u751f\u6570\uff0c\u51cf\u53bb\n\n## \u6ce8\u610f\uff01\u662f\u51cf\u53bb\u5230\u8fbe\u6b64\u82b1\u751f\u7684\u548c\u91c7\u6458\u7684\uff0c\u4e0d\u7528\u51cf\u8fd4\u56de\uff01\n\n\u4e0d\u884c\u7684\u8bdd\u5c31\u8f93\u51fa\u5e76\u7ed3\u675f\u3002\n\n```cpp\n\n    if (k>=(b[1][1]*2+1)) ans=b[1][3];\n    else {cout << 0 << endl; return 0;}\n    k=k-b[1][1]-1;\n    for(int i=2; i<=q; i++){\n        if (abs(b[i-1][1]-b[i][1])+abs(b[i-1][2]-b[i][2])+1+b[i][1]>k) break;\n        else {\n           ans+=b[i][3]; \n           k=k-(abs(b[i-1][1]-b[i][1])+abs(b[i-1][2]-b[i][2])+1);\n        }\n    }    \n    cout << ans << endl;\n    return 0;\n}\n```\n\u5230\u8fbe\u65f6\u95f4\u5c31\u662f\u7528\u884c\u51cf\u884c\uff0c\u5217\u51cf\u5217\uff0c\u52a0\u8d77\u6765\uff0c\u8981\u6ce8\u610f\u4f7f\u7528\u7edd\u5bf9\u503c\uff0c\u5426\u5219\u4f60\u53ea\u80fd\u8fc7\u4e03\u4e2a\u70b9\uff01\n\n\u8fd9\u662f\u5b8c\u6574\u4ee3\u7801\uff1a\uff0842\u884c\uff09\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\nint a[25][25];\nint b[405][5];\nint n, m, k;\nint q, ans;\nint main(){\n    cin >> m >> n >> k;\n    for (int i=1; i<=m; i++)\n      for (int j=1; j<=n; j++){\n      \t  cin >> a[i][j];\n      \t  if (a[i][j]!=0){\n      \t  \t q++;\n      \t  \t b[q][1]=i;\n      \t  \t b[q][2]=j;\n      \t  \t b[q][3]=a[i][j];\n          } \n      }\n    for(int i=1; i<=q; i++)\n      for(int j=i+1; j<=q; j++){\n      \tif (b[i][3]<b[j][3]){\n          swap(b[i][3], b[j][3]); \n          swap(b[i][1], b[j][1]); \n          swap(b[i][2], b[j][2]);\n        }\n      }\n    if (k>=(b[1][1]*2+1)) ans=b[1][3];\n    else {cout << 0 << endl; return 0;}\n    k=k-b[1][1]-1;\n    for(int i=2; i<=q; i++){\n        if (abs(b[i-1][1]-b[i][1])+abs(b[i-1][2]-b[i][2])+1+b[i][1]>k) break;\n        else {\n           ans+=b[i][3]; \n           k=k-(abs(b[i-1][1]-b[i][1])+abs(b[i-1][2]-b[i][2])+1);\n        }\n    }    \n    cout << ans << endl;\n    return 0;\n}\n```\n\n\n",
        "postTime": 1562144043,
        "uid": 213284,
        "name": "MC_long_live",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u7ffb\u4e86\u8fd9\u9053\u9898\u7684\u524d\u4e24\u9875\u9898\u89e3\uff0c\u6ca1\u6709\u51e0\u4e2a\u548c\u6211\u7684\u601d\u8def\u76f8\u4eff\u7684\u3002~~\u552f\u4e00\u7684\u4e00\u4e2a\u6211\u770b\u4e0d\u61c2~~\n\n\u9996\u5148\u4e3a\u4e86\u8ba9\u5927\u5bb6\u5feb\u901f\u627e\u5230\u81ea\u5df1\u53ef\u80fd\u6709\u7684\u9519\u8bef\uff0c\u628a\u8fd9\u9053\u9898\u7684\u90e8\u5206\u5751\u70b9\u7ed9\u51fa\u6765\uff1a\n\n1. \u5173\u4e8e\u7b97\u6cd5\uff0c\u9898\u76ee\u5df2\u7ecf\u660e\u786e\u89c4\u5b9a\u4e86\u8d70\u6cd5\u662f\u6309\u7167\u82b1\u751f\u6570\u76ee\u7531\u5927\u5230\u5c0f\u6458\u82b1\u751f\uff1a\n\n\u9c81\u5bbe\u900a\u5148\u751f\u8bf4\uff1a\u201c\u4f60$\\color{red}\\text{\u5148\u627e\u51fa\u82b1\u751f\u6700\u591a}$\u7684\u690d\u682a\uff0c\u53bb\u91c7\u6458\u5b83\u7684\u82b1\u751f\uff1b\u7136\u540e$\\color{red}\\text{\u518d\u627e\u51fa\u5269\u4e0b\u7684\u690d\u682a\u91cc\u82b1\u751f\u6700\u591a\u7684}$\uff0c\u53bb\u91c7\u6458\u5b83\u7684\u82b1\u751f\uff1b$\\color{Blue}\\text{\u4f9d\u6b64\u7c7b\u63a8}$\uff0c\u4e0d\u8fc7\u4f60\u4e00\u5b9a\u8981\u5728\u6211\u9650\u5b9a\u7684\u65f6\u95f4\u5185\u56de\u5230\u8def\u8fb9\u3002\u201d\n\n2. \u5173\u4e8e\u6458\u82b1\u751f\uff0c\u5c06\u82b1\u751f\u91c7\u6458\u4e0b\u6765\u662f\u8981\u8017\u8d39\u65f6\u95f4\u7684\u3002\u6709\u540c\u5b66\u6ca1\u6709+1\uff0c\u5c31\u4f1a\u7206\u70b8\u3002\n\n3. \u5173\u4e8e\u6284\u8fd1\u9053\uff0c\u9898\u76ee\u867d\u7136\u6ca1\u6709\u8bf4\u6e05\u695a\uff0c\u4f46\u662f\u4e0d\u80fd\u901a\u8fc7\u5728\u5927\u8def\u4e0a\u6284\u8fd1\u9053\u7701\u65f6\u95f4\u3002\n\n\u6bd4\u5982\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u4e0d\u80fd\u8d70\u7ea2\u7ebf\uff0c\u53ea\u80fd\u8001\u8001\u5b9e\u5b9e\u8d70\u84dd\u8272\u8def\uff08\u66fc\u54c8\u987f\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/kyqotj7u.png)\n\n4. \u5173\u4e8e\u7b2c\u56db\u4e2a\u6570\u636e\u70b9\uff1a\n\n1 1 5\n\n15\n\n\u5982\u679c\u4f60\u7684\u7b54\u6848\u662f 45\uff0c\u8bf7\u68c0\u67e5\u4e00\u4e0b\u4f60\u662f\u5426\u91cd\u590d\u5728\u6458\u8fd9\u4e2a\u4ec5\u6709\u7684\u683c\u5b50\u3002\n\n5. \u5173\u4e8e\u6570\u7ec4\u5927\u5c0f\uff1a\u5f0025\\*25\u7edd\u5bf9\u4e0d\u4f1a\u9519\u3002\n\n6. \u5bf9\u4e8e\u6ca1\u8bfb\u597d\u9898\u76ee\uff1a\u4fdd\u8bc1\u6ca1\u6709\u82b1\u751f\u6570\u4e00\u6837\u7684\u683c\u5b50\uff0c\u5404\u4f4d\u4e0d\u8981\u60f3\u592a\u591a\u3002\n\n7. \u8003\u8651\u6700\u7ec8\u7b54\u6848\u662f0\u7684\u60c5\u51b5\uff0c\u4e0d\u8981\u4e00\u4e0a\u6765\u5c31\u6458\u4e86\u82b1\u751f\u56de\u4e0d\u53bb\u3002\n\n8. \u65e0\u8111\u6284\u88ad\u6211\u7684\u4ee3\u7801\u6216\u5176\u4ed6\u6709\u53cd\u4f5c\u5f0a\u63aa\u65bd\u7684\u4ee3\u7801\u7684\u4eba\u4f1a\u4f53\u9a8cCE\u7684\u5feb\u611f\u3002\n\n\u7136\u540e\u662f\u6211\u5bf9\u8fd9\u9053\u9898\u7684\u5206\u6790\uff1a\n\n\u505a\u6cd5\u6bd4\u8f83\u660e\u663e\uff0c\u5c31\u662f\u4e00\u6b65\u4e00\u6b65\u6458\uff0c\u5224\u65ad\u4f1a\u4e0d\u4f1a\u8d85\u65f6\uff0c\u7136\u540e\u7b97\u4e00\u4e2a\u66fc\u54c8\u987f\u8ddd\u79bb\u3002\n\n\uff08\u66fc\u54c8\u987f\u8ddd\u79bb\u516c\u5f0f\uff1a|$x_{1}$-$x_{2}$|+|$y_{1}$-$y_{2}$|\uff09\n\n\u5404\u4f4d\u7684\u7b97\u6cd5\u57fa\u672c\u90fd\u662f\u4f7f\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u5b58\u50a8\u683c\u5b50\u7684\u5750\u6807\u548c\u82b1\u751f\u6570\uff0c\u6709\u7684\u4eba\u8fd8\u5b58\u4e86\u65f6\u95f4\uff0c\u7136\u540e sort \u7ed3\u6784\u4f53\uff0c\u4f9d\u6b21\u8003\u8651\u6458\u4e0d\u6458\u3002\n\n\u6211\u7684\u65b9\u6cd5\u4e3b\u8981\u533a\u522b\u662f\u7701\u53bb\u4e86\u7ed3\u6784\u4f53\u548c\u6392\u5e8f\u8fd9\u4e24\u6b65\u3002\n\n\u6211\u4f7f\u7528\u4e86\u4e00\u4e2a map\uff08\u5957 pair\uff09 \u6765\u5b58\u50a8\u4e00\u4e2a\u683c\u5b50\u7684\u82b1\u751f\u6570\u76ee\u548c\u5750\u6807\uff0c\u8fd9\u6837\u5f53\u6211\u9009\u5b9a\u4e00\u4e2a\u82b1\u751f\u6570\u76ee\u7684\u65f6\u5019\u53ef\u4ee5 O(1) \u67e5\u8be2\u5750\u6807\u3002\n\n\u5bf9\u4e8e\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0cC++ \u7684STL\u7684 $\\color{RoyalBlue}\\text{priority queue}$ \u53ef\u4ee5 O(logn) \u63d2\u5165\u4e00\u4e2a\u6570\u3002\n\n\u4f7f\u7528 STL \u5c31\u53ef\u4ee5\u505a\u5230\u8f93\u5165\u5b8c\u6210\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u505a\u597d\u4e86\u82b1\u751f\u6570\u548c\u5750\u6807\u7684\u7ed1\u5b9a\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6392\u5e8f\u3002\n\n\u8fd9\u4e2a\u7b97\u6cd5\u5751\u5728\u4ee3\u7801\u5b9e\u73b0\uff0c\u6700\u96be\u7684\u5730\u65b9\u5c31\u662f\u600e\u4e48\u62fc\u5199 $\\color{RoyalBlue}\\text{priority queue}$\n\n~~\u89e3\u51b3\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u641c\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86~~\n\n$\\color{LimeGreen}\\text{\u8f93\u5165\u4ee3\u7801}$\n\n ```cpp\n    int n,m,k,a[23][23];\n\tmap<int,pair<int,int> >c;\n\tpriority_queue<int> q;\n   \n  \n\tn=read(),m=read(),k=read();\n\tfor(register int i=1;i<=n;++i) for(register int j=1;j<=m;++j){\n\t\ta[i][j]=read();\n\t\tc[a[i][j]]=make_pair(i,j);\n\t\tq.push(a[i][j]);\n\t}\n```\n\n\u5bf9\u4e8e\u600e\u4e48\u5904\u7406\uff1a\n\n\u6bcf\u6b21\u53d6\u51fa\u5927\u6839\u5806\u7684\u5806\u9876\uff0c\u4f9d\u9760 map \u9501\u5b9a\u5b83\u7684\u5750\u6807\uff0c\u5224\u65ad\u4e00\u4e0b\u53ef\u4e0d\u53ef\u4ee5\u53bb\u6458\u5c31\u884c\u3002\n\n\u4e3a\u4e86\u9632\u6b62$\\color{Red}\\text{WA}$\u58f0\u4e00\u7247\uff0c\u4f7f\u7528 $while(1)$\u5faa\u73af\u7684\u7ae5\u978b\u6700\u597d\u63d0\u524d\u5904\u7406\u7b2c\u4e00\u682a\u82b1\u751f\u3002\n\n ```cpp\n\tint j=q.top();q.pop();\n\tint x=c[j].first;\n\tint y=c[j].second;\n\tint w=x+1;\n```\n$j$\u8868\u793a\u82b1\u751f\u6570\u76ee\uff0c$x$\u548c$y$\u5206\u522b\u4e3a\u5750\u6807\uff0c$w$\u8868\u793a\u5df2\u7ecf\u6d88\u8017\u7684\u65f6\u95f4\u3002\u540e\u6587\u7684$s$\u8868\u793a\u5df2\u7ecf\u6458\u7684\u82b1\u751f\u6570\u76ee\u3002\n\n\u6bcf\u6b21+1\u7684\u539f\u56e0\u5df2\u7ecf\u5199\u5728\u5f00\u5934\u7684\u7b2c\u4e8c\u70b9\u4e86\u3002\n\n\u73b0\u5728\u6bcf\u6b21\u5904\u7406\u5c31\u7b80\u5355\u591a\u4e86\uff0c\u5982\u679c\u53ef\u4ee5\u6458\uff08\u6458\u5b8c\u4e86\u8fd8\u80fd\u56de\u5bb6\uff09\u5c31\u6458\uff0c\u7136\u540e\u518d\u5f39\u51fa\u4e0b\u4e00\u4e2a\u82b1\u751f\uff0c\u9501\u5b9a\u5750\u6807\uff08\u548c\u8ddd\u79bb\uff09\uff0c\u8ba1\u7b97\u65f6\u95f4\u3002\n\n ```cpp\n\twhile(w+x<=k){\n\t\ts+=j;\n\t\tif(q.empty()) break;\n\t\tj=q.top();q.pop();\n\t\tw+=abs(c[j].first-x)+abs(c[j].second-y)+1;\n\t\tx=c[j].first,y=c[j].second;\n\t}\n```\n\u6ce8\u610f\u8981\u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff0c\u5426\u5219\u4f1a$\\color{Orange}\\text{90}$\u5206\uff0c$\\color{Red}\\text{WA}$\u7b2c4\u4e2a\u6570\u636e\uff0c\u539f\u56e0\u662f\u8fd9\u7bc7\u6587\u7ae0\u5f00\u5934\u5199\u7684\u7b2c\u56db\u70b9\u3002\n\n\u6700\u7ec8\u662f\u5404\u4f4d\u671f\u5f85\u7684\u5b8c\u6574\u4ee3\u7801\uff08\u76f8\u4fe1\u5f88\u591a\u4eba\u76f4\u63a5\u8df3\u8fc7\uff0c\u7a7a\u964d\u5230\u8fd9\u91cc\u6765\u4e86\u5427\u2026\u2026\uff09\n\n ```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,m,k,a[23][23],w,s;\nmap<int,pair<int,int> >c; //\u7ed1\u5b9a\u6570\u91cf\u548c\u5750\u6807\npriority_queue<int> q;\t//\u5b58\u82b1\u751f\u6570\u91cf\u7684\u5927\u6839\u5806\n\nint main(){\n\tn=read(),m=read(),k=read();\n\tfor(register int i=1;i<=n;++i) for(register int j=1;j<=m;++j){\n\t\ta[i][j]=read();\n\t\tc[a[i][j]]=make_pair(i,j);// \u7ed1\u5b9a\n\t\tq.push(a[i][j]); // \u5165\u961f\uff08\u5806\uff09\n\t}\n\n//\u2191\u8f93\u5165\u548c\u9884\u5904\u7406\uff0c\u73b0\u5728\u6240\u6709\u82b1\u751f\u5927\u5c0f\u5750\u6807\u5df2\u7ed1\u5b9a\u4e14\u6392\u597d\u5e8f\n\n\tint j=q.top();q.pop();//\u522b\u50cf\u6211\u4e00\u6837\u628a top \u5199\u6210 front\n\tint x=c[j].first;\n\tint y=c[j].second;// pair \u4e0d\u4f1a\u7684\u6216 map \u4e0d\u4f1a\u7684\u53ef\u4ee5\u81ea\u884c\u767e\u5ea6\n\tw+=x+1;\n\n// \u2191\u5904\u7406\u4e00\u4e0b0\u7684\u60c5\u51b5\uff0c\u5373\u4e00\u4e2a\u82b1\u751f\u90fd\u6458\u4e0d\u4e86\n\n\twhile(w+x<=k){\n\t\ts+=j;\n\t\tif(q.empty()) break;//\u8fd9\u91cc\u4e0d\u5199\u5c31\u662f90\u5206\n\t\tj=q.top();q.pop();\n\t\tw+=abs(c[j].first-x)+abs(c[j].second-y)+1;//\u6ce8\u610f\u8fd9\u91cc\u4e5f\u8981+1\uff0c\u522b\u5fd8\u4e86\n\t\tx=c[j].first,y=c[j].second;//\u66f4\u65b0\u4f4d\u7f6e\n\t}\n\twrite(s);\n\treturn 0;\n}\n\n```\n\u7eaf\u51c0\u65e0\u6ce8\u91ca\u7248\u672c\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,m,k,a[23][23],w,s;\nmap<int,pair<int,int> >c;\npriority_queue<int> q;\n\nint main(){\n\tn=read(),m=read(),k=read();\n\tfor(register int i=1;i<=n;++i) for(register int j=1;j<=m;++j){\n\t\ta[i][j]=read();\n\t\tc[a[i][j]]=make_pair(i,j);\n\t\tq.push(a[i][j]);\n\t}\n\n\tint j=q.top();q.pop();\n\tint x=c[j].first;\n\tint y=c[j].second;\n\tw+=x+1;\n\n\twhile(w+x<=k){\n\t\ts+=j;\n\t\tif(q.empty()) break;\n\t\tj=q.top();q.pop();\n\t\tw+=abs(c[j].first-x)+abs(c[j].second-y)+1;\n\t\tx=c[j].first,y=c[j].second;\n\t}\n\twrite(s);\n\treturn 0;\n}\n\n```\n\u7ed3\u679c\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/gdz0wz4m.png)",
        "postTime": 1578724888,
        "uid": 181776,
        "name": "_Arahc_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u8fd0\u7528\u4e86\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u4f46\u6bcf\u8d70\u4e00\u6b65\u90fd\u5e94\u5148\u7b97\u51fa\u4e0b\u4e00\u6b65\u7684\u8def\u7a0b\uff08\u76f8\u8ddd\u8ddd\u79bb+\u4e0b\u4e00\u4e2a\u82b1\u751f\u7eb5\u5750\u6807+1\uff09\uff0c\u9632\u6b62\u8d70\u51fa\u540e\u65f6\u95f4\u4e0d\u591f\u7684\u60c5\u51b5\u3002\n\n\u6839\u636e\u9898\u610f\uff0c\u7b2c\u4e00\u6b21\u53ea\u8981\u5728\u8def\u8fb9\u5c31\u884c\uff08\u5148\u5224\u65ad\u7b2c\u4e00\u4e2a\uff0c\u518d\u8fdb\u884c\u5faa\u73af\uff09\uff0c\u53ef\u4ee5\u7528\u9009\u62e9\u6392\u5e8f\uff08\u6253\u64c2\u53f0\uff09o(\u2229\\_\u2229)o \u54c8\u54c8\u3002\n\n\n```cpp\nvar a:array[1..20,1..20]of integer;\ni,j,m,n:integer;f:boolean;\nt,k,max,d,l1,l2,r1,r2:longint;\nbegin\n readln(m,n,k);f:=true;\n d:=0;l1:=0;t:=0;\n for i:=1 to m do\n  for j:=1 to n do begin\n  read(a[i,j]);max:=max+a[i,j];end;\n while (k<>0)and(t<>max) do begin\n  for i:=1 to m do\n   for j:=1 to n do\n   if d<a[i,j] then begin\n    d:=a[i,j];\n    l2:=i;\n    r2:=j;end;\n  if f then begin r1:=r2;f:=false;end;\n  if abs(l1-l2)+abs(r1-r2)+l2+1<=k then begin//\u5982\u679c\u53ef\u4ee5\u8d70\u52a8\n   k:=k-(abs(l1-l2)+abs(r1-r2));\n   t:=t+a[l2,r2];\n   k:=k-1;//\u4e0d\u53ef\u7701\u7565\uff01\n   a[l2,r2]:=0;\n   l1:=l2;d:=0;//\u6d88\u9664\u5f71\u54cd\n   r1:=r2;end else break;end;\n write(t);\n readln;\nend.\n```",
        "postTime": 1475712630,
        "uid": 20094,
        "name": "\u68a6\u56de\u8fd8",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u4e2a\u4eba\u611f\u89c9\u9898\u76ee\u6709\u70b9\u95ee\u9898\n\nAC\u7684\u4ee3\u7801\u6ca1\u8003\u8651\u5982\u4e0b\u60c5\u51b5\uff1a\u5148\u8fd4\u56de\u8def\u8fb9\uff0c\u518d\u5230\u4e0b\u4e00\u4e2a\u91c7\u6458\u70b9\uff08\u6709\u53ef\u80fd\u8fd9\u6837\u7684\u8ddd\u79bb\u4f1a\u6bd4\u76f4\u63a5\u5230\u4e0b\u4e00\u4e2a\u91c7\u6458\u70b9\u8fd1\uff0c\u800c\u4e14\u9898\u76ee\u4e5f\u6ca1\u8bf4\u4e0d\u80fd\u4e2d\u9014\u8fd4\u56de\u8def\u8fb9\uff09\n\ndist=min(ss[step-1].x+ss[step].x,abs(ss[step-1].x-ss[step].x)+abs(ss[step-1].y-ss[step].y));\n\n\u53ef\u60dc\u7528\u4e86\u8fd9\u4e2a\u4ee3\u7801\uff0c70\u5206\n\n    \n\u8001\u8001\u5b9e\u5b9e\u7528\u5982\u4e0b\u4ee3\u7801\uff0c100\u5206AC\n\ndist=abs(ss[step-1].x-ss[step].x)+abs(ss[step-1].y-ss[step].y);\n\n\n\n\n        \n        \n    \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef struct{\n    int x;\n    int y;\n    int num;\n}node;\nint m,n,k,remain;\nint s[25][25];\nnode ss[500];\nint total;\nint id=1;\nbool cmp(node a, node b)\n{\n    return a.num>b.num; \n}\nvoid dfs(int step)\n{\n    int tmp,dist;\n    if(step>id)\n        return;\n    if(step==1)\n        dist=ss[1].x;\n    else\n        //dist=min(ss[step-1].x+ss[step].x,abs(ss[step-1].x-ss[step].x)+abs(ss[step-1].y-ss[step].y));\n        dist=abs(ss[step-1].x-ss[step].x)+abs(ss[step-1].y-ss[step].y);\n    tmp=remain-dist-1;\n    if(tmp>=ss[step].x)\n    {\n        total+=ss[step].num;\n        remain=remain-dist-1;\n        dfs(step+1);\n    }\n    return;\n}\nint main()\n{\n    scanf(\"%d%d%d\",&m,&n,&k);\n    remain=k;\n    for(int row=1;row<=m;row++)\n        for(int col=1;col<=n;col++)\n        {\n            scanf(\"%d\",&s[row][col]);\n            if(s[row][col])\n            {\n                ss[id].x=row;\n                ss[id].y=col;\n                ss[id].num=s[row][col];\n                id++;\n            }\n        }\n        id--;\n    sort(ss+1,ss+id+1,cmp);\n    dfs(1);\n    printf(\"%d\",total);\n}\n```",
        "postTime": 1509516720,
        "uid": 44767,
        "name": "jackyzhu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "## \u3010\u601d\u8def\u3011\n\u641c\u7d22 + \u6a21\u62df   \n\u6458\u82b1\u751f\u7684\u6545\u4e8b\u3002\u3002\u3002\u3002\u3002  \n\u505a\u5b8c\u8fd9\u9053\u9898\u4e4b\u540e\u8ba9\u6211\u660e\u767d\u4e86\u8bfb\u9898\u76ee\u7684\u91cd\u8981\u6027\uff01   \n\n\u5148\u8f93\u5165\u6570\u636e\uff0c\u5c06\u4e0d\u662f0\u7684\u82b1\u751f\u7684\u4f4d\u7f6e\u548c\u82b1\u751f\u6570\u91cf\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u5b58\u8d77\u6765  \n\u8f93\u5165\u5b8c\u4e4b\u540e\uff0c\u5c06\u7ed3\u6784\u4f53\u6309\u7167\u82b1\u751f\u6570\u91cf\u6765\u6392\u5e8f  \n\u62cd\u51fa\u6765\u7684\u5e8f\u5c31\u662f\u4efb\u52a1\u987a\u5e8f    \n\n\u7136\u540e\u6309\u7167\u8fd9\u4e2a\u987a\u5e8f\u6765\u6a21\u62df\u4e00\u4e0b\u8fc7\u7a0b\uff0c  \n\u6bcf\u4e00\u6b21\u8981\u5230\u8fbe\u679a\u4e3e\u5230\u7684\u4efb\u52a1\u76ee\u6807\u65f6 \uff0c   \n\u5148\u770b\u4e00\u4e0b\u5269\u4f59\u7684k\u591f\u4e0d\u591f\u5230\u8fbe \uff0c\u91c7\u6458\u548c\u56de\u53bb   \n\u5982\u679c\u65f6\u95f4\u4e0d\u591f\u90a3\u5c31\u4e0d\u53bb\u8fd9\u4e2a\u5730\u65b9  \n\u76f4\u63a5\u5e26\u7740\u5df2\u7ecf\u91c7\u597d\u7684\u82b1\u751f\u79bb\u5f00   \n\u56e0\u4e3a\u5230\u8fbe\u524d\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u5df2\u7ecf\u5224\u65ad\u8fc7\u80fd\u4e0d\u80fd\u56de\u53bb\u4e86   \n\u6240\u4ee5\u4e0d\u7528\u62c5\u5fc3\u524d\u4e00\u4e2a\u70b9\u7684\u65f6\u95f4\u591f\u4e0d\u591f\u7528   \n\u76f4\u63a5\u56de\u53bb\u5c31\u53ef\u4ee5\u7684   \n  \n\u5982\u679c\u5269\u4f59\u7684\u65f6\u95f4\u591f\u7684\u8bdd\uff0c    \n\u90a3\u5c31\u8fbe\u5230\u8fd9\u4e2a\u70b9\uff0cans\u52a0\u4e0a\u82b1\u751f\u7684\u6570\u91cf  \nk\u51cf\u53bb\u5230\u8fbe\u8fd9\u4e2a\u70b9\u9700\u8981\u7684\u65f6\u95f4\u548c\u91c7\u6458\u82b1\u751f\u9700\u8981\u7684\u65f6\u95f4   \n\u7136\u540e\u5728\u8fdb\u884c\u4e0b\u4e00\u4e2a\u70b9    \n  \n\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u70b9\u662f\u76f4\u63a5\u4ece\u7b2c\u4e00\u884c\u6700\u8fd1\u7684\u5730\u65b9\u8fdb\u5165   \n\u6240\u9700\u8981\u7684\u65f6\u95f4\u5c31\u662f\u8fd9\u4e2a\u70b9\u7684x   \n\u4f46\u662f\u522b\u7684\u70b9\u5230\u8fbe\u7684\u8ddd\u79bb\u662fx\u548cy\u4e0e\u524d\u4e00\u4e2a\u70b9\u7684x\u548cy\u7684\u5dee\u7684\u7edd\u5bf9\u503c   \n\u8fd9\u4e24\u79cd\u662f\u4e0d\u540c\u7684   \n\u6240\u4ee5\u8981\u5355\u72ec\u5904\u7406\u4e00\u4e0b\u7b2c\u4e00\u4e2a\u70b9\uff0c\u6216\u8005\u5728\u7ed3\u6784\u4f53\u4e0a\u505a\u70b9\u624b\u811a    \n\u8fd9\u4e2a\u5c0f\u624b\u811a\u5728\u4ee3\u7801\u91cc\u9762\u6ce8\u91ca\u51fa\u6765\u4e86   \n\n\n## \u3010\u5b8c\u6574\u4ee3\u7801\u3011\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n\nusing namespace std;\nconst int Max = 25;\n\nint f[Max][Max];\nstruct node\n{\n\tint x,y,z;\n}a[Max * Max];\nint sum = 0;\n\nbool cmp(const node x,const node y)\n{\n\treturn x.z > y.z;\n}\n\nint main()\n{\n\tint m,n,k;\n\tscanf(\"%d%d%d\",&m,&n,&k);\n\tfor(int i = 1;i <= m;++ i)\n\t\tfor(int j = 1;j <= n;++ j)\n\t\t{\n\t\t\tscanf(\"%d\",&f[i][j]);\n\t\t\tif(f[i][j] != 0)\n\t\t\t{\n\t\t\t\ta[++ sum].x = i;\n\t\t\t\ta[sum].y = j;\n\t\t\t\ta[sum].z = f[i][j];\n\t\t\t}\n\t\t}\n\tsort(a + 1,a + sum + 1,cmp);\n\tint ans = 0;\n\ta[0].y = a[1].y;//\u5c0f\u624b\u811a\n\t//\u5c061\u7684\u524d\u4e00\u4e2a0 \u7684y\u53d8\u4e3a\u548c1\u7684y\u4e00\u6837\uff0c\u90a3\u8fd9\u6837\u51cf\u53bb\u4e4b\u540e\u5c31\u4f1a\u7b49\u4e8e0\u4e86\uff0c\u5c31\u4e0d\u4f1a\u5f71\u54cd\u4e86 \n\tfor(int i = 1;i <= sum;++ i)\n\t{\n\t\tif( abs(a[i].x - a[i - 1].x) + abs(a[i].y - a[i - 1].y) + 1 + a[i].x <= k)\n\t\t{\n\t\t\tk -= abs(a[i].x - a[i - 1].x) + abs(a[i].y - a[i - 1].y) + 1;\n\t\t\tans += f[a[i].x][a[i].y];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcout << ans << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```",
        "postTime": 1569765143,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u5df2\u7ecf\u628a\u91c7\u6458\u7684\u7b56\u7565\u544a\u8bc9\u4f60\u4e86\uff08\u82b1\u751f\u4ece\u5927\u5230\u5c0f\uff09\uff0c\u6240\u4ee5\u5c31\u662f\u4e00\u9053\u6a21\u62df\u5427\n\n\u9996\u5148\u8bfb\u5165\uff0c\u5982\u679cp[i][j]>0\u90a3\u4e48\u628a\u5b83\u5b58\u5165a\u6570\u7ec4\uff0ca\u6570\u7ec4\u8981\u5b58i,j\uff08\u5750\u6807\uff09\u4ee5\u53cap[i][j]\u7684\u503c\u3002\n\n\u7136\u540e\u5199\u4e00\u4e2acmp\u6309\u7167a.sum\u4e3a\u5173\u952e\u5b57\u4ece\u5927\u5230\u5c0f\n\n\u7136\u540e\u5c31i:=1 to num \u6309\u7167\u82b1\u751f\u6570\u4ece\u5927\u5230\u5c0f\u8fdb\u884c\u679a\u4e3e\n\n\u53d8\u91cfntim\u8868\u793a\u5f53\u524d\u7684\u65f6\u95f4,need\u8868\u793a\u4ece**\u4e0a\u4e00\u4e2a\u70b9\u5230\u8fd9\u4e2a\u70b9\u5e76\u91c7\u6458**\u8981\u7684\u65f6\u95f4\u3002\n\n\u5982\u679c\u5f53\u524d\u662f\u7b2c\u4e00\u6b21\u91c7\u6458\uff0c\u90a3\u4e48need\u5c31\u662fa[i].x+1\n\n\u5426\u5219 need=\u6a2a\u7eb5\u5750\u6807\u4e4b\u5dee\n\n\u4f46\u662fneed\u8fd8\u8981\u5224\u65ad\u52a0\u4e0a\u4ece\u8fd9\u4e2a\u70b9\u56de\u53bb\u7684\u65f6\u95f4\u662f\u4e0d\u662f\u5c0f\u4e8e\u7b49\u4e8ek\uff0c\u5982\u679c\u4e0d\u662f\u90a3\u4e48\u5c31\u8bf4\u660e\u5c31\u7b97\u91c7\u4e86\u4e5f\u6ca1\u6709\u65f6\u95f4\u56de\u53bb\uff0c\u91c7\u4e0d\u4e86\uff0c\u7136\u540e\u51fa\u5faa\u73af\uff0c\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\n\n\n## code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint read() {\n\tint ret=0,f=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)) ch=='-'?f=-f,ch=getchar():ch=getchar();\n\twhile(isdigit(ch)) ret=(ret<<3)+(ret<<1)+(ch^48),ch=getchar();\n\treturn ret*f;\n}\nint num,m,n,k,p[505][505],ntim,ans;\nstruct pig {\n\tint x,y,sum;\n} a[100005];\nbool cmp(pig a,pig b) {\n\treturn a.sum>b.sum;\n}\nint main() {\n\tm=read(),n=read(),k=read();\n\tfor(int i=1; i<=m; i++)\n\t\tfor(int j=1; j<=n; j++) {\n\t\t\tp[i][j]=read();\n\t\t\tif(p[i][j]) a[++num].x=i,a[num].y=j,a[num].sum=p[i][j];\n\t\t}\n\tsort(a+1,a+num+1,cmp);\n\tint nowx=0,nowy=0;\n\tfor(int i=1; i<=num; i++) {\n\t\tint nxtx=a[i].x,nxty=a[i].y,need;\n\t\tif(nowx==0&&nowy==0) {\n\t\t\tneed=a[i].x;\n\t\t\tif(ntim+need+a[i].x+1<=k)// \u5224\u65ad\u4ece\u8fd9\u4e2a\u70b9\u56de\u53bb\u5e76\u91c7\u6458\uff08\u6240\u9700\u65f6\u95f4a[i].x+1\uff09\u6765\u5f97\u53ca\u5417\uff1f\n\t\t\t\tans+=a[i].sum,ntim+=need,++ntim;\n\t\t\telse break;\n\t\t} else {\n\t\t\tneed=abs(a[i].x-nowx)+abs(a[i].y-nowy);\n\t\t\tif(ntim+need+a[i].x+1<=k)// \u5224\u65ad\u4ece\u8fd9\u4e2a\u70b9\u56de\u53bb\u5e76\u91c7\u6458\uff08\u6240\u9700\u65f6\u95f4a[i].x\uff09\u6765\u5f97\u53ca\u5417\uff1f\n\t\t\t\tans+=a[i].sum,ntim+=need,++ntim/*\u52a0\u4e0a\u91c7\u6458\u7684\u65f6\u95f41*/;\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t\tnowx=a[i].x,nowy=a[i].y;//\u7136\u540e\u6eda\u52a8\u8d4b\u503c\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1566567194,
        "uid": 75064,
        "name": "prefer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "# P1086\u9898\u89e3\n\u6211\u770b\u6ca1\u4eba\u7528\u4e00\u7ef4\u6570\u7ec4\u7684\u601d\u8def\u505a\uff0c\u5c31\u53d1\u4e2a\u9898\u89e3\uff0c\u6c42\u5404\u4f4d\u5de8\u5de8\u8f7b\u55b7\n## \u601d\u8def\n\u56e0\u4e3a\u662f\u8d2a\u5fc3\u7684\u601d\u8def\uff0c\u6240\u4ee5\u7a0b\u5e8f\u8d70\u7684\u8def\u7ebf\u662f\u56fa\u5b9a\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u505a\u5224\u5b9a\u548c\u7d2f\u8ba1\u5c31\u53ef\u4ee5\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u5c06\u4e00\u682a\u82b1\u751f\u89c6\u4e3a\u4e00\u4e2a\u7c7b\uff08\u5750\u6807\u548c\u4ef7\u503c\uff09\u653e\u5165\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u6309\u7167\u4ef7\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u7136\u540e\u904d\u5386\u6570\u7ec4\u5224\u5b9a\u5c31ok\u4e86\n\n\u5224\u5b9a\uff1a\n \n\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u91c7\u4e86i-1\u682a\uff0c\u90a3\u4e48\u5982\u679c\u7b2ci\u682a\u91c7\u5b8c\u4e4b\u540e\u6211\u4eec\u4e0d\u80fd\u8fd4\u56de\u5230\u8def\u8fb9\uff0c\u90a3\u6211\u4eec\u5c31\u4e0d\u8981\u8fd9\u682a\u76f4\u63a5\u505c\u6b62\u91c7\u6458\u8fd4\u56de\u5230\u8def\u8fb9\uff08break\uff09\n## \u4ee3\u7801\n\n```cpp\n//#include\"myhead.h\"\n#include<bits/stdc++.h>\nusing namespace std;\n//\u82b1\u751f\u7c7b\uff0c\u8bb0\u5f55\u5750\u6807\u548c\u4ef7\u503c\nclass PEANUT\n{\npublic:\n\tint x, y;//\u5750\u6807\n\tint num;//\u4ef7\u503c\n\tPEANUT() : x(0) ,y(0) ,num(0){}\n\tPEANUT(int x, int y, int num):x(x), y(y), num(num) {}\n};\nbool Compare(PEANUT left, PEANUT right)\n{\n\treturn left.num > right.num;\n}\nint main()\n{\n\t//write down what you want\n\tint m,n,k;\t\t\t//\u9ad8\uff0c\u5bbd\uff0c\u4f53\u529b\u4e0a\u9650\n\tint strength = 0;\t//\u4f53\u529b\n\tint count = 0;\t\t//\u9897\u6570\n\tcin >> m >> n >> k;\n\tvector<PEANUT> peanuts;\n\tfor (int i = 0; i < m; i++)\n\t{\n\t\tfor (int j = 0; j < n; j++)\n\t\t{\n\t\t\tint  tempnum;\n\t\t\tcin >> tempnum;\n\t\t\tpeanuts.push_back({ i,j,tempnum });\n\t\t}\n\t}\n\n\t//\u6309\u4ef7\u503c\u6392\u5e8f\n\tsort(peanuts.begin(), peanuts.end(), Compare);\n\n\t//debug\n\t//for_each(peanuts.begin(), peanuts.end(), [](PEANUT pea) {\n\t//\tcout << \"(\" << pea.x << \",\" << pea.y << \")= \" << pea.num << endl;\n\t//\t});\n\t//end debug\n\n\t//\u7b2c\u4e00\u682a\n\tstrength += peanuts[0].x + 1;\n\tif (strength + peanuts[0].x + 2 <= k) //\u5df2\u6d88\u8017\u4f53\u529b+\u91c7\u6458\uff081\uff09+\u8fd4\u56de\uff08pea.x+1\uff09\n\t{\n\t\tstrength++;\n\t\tcount += peanuts[0].num;\n\t}\n\n\t//\u627e\u82b1\u751f\n\tfor (int i = 1; i < m*n; i++)\n\t{\n\t\tPEANUT& pea = peanuts[i]; //\u672c\u682a\n\t\tPEANUT& old = peanuts[i - 1];//\u4e0a\u4e00\u682a\n\t\tstrength += abs(pea.x-old.x) + abs(pea.y - old.y);//\u5230\u8fbe\u672c\u682a\u540e\u7684\u4f53\u529b\n\n\t\t//\u5982\u679c\u91c7\u5b8c\u8fd9\u9897\u4e0d\u80fd\u8fd4\u56de\uff0c\u5219\u7ed3\u675f\u91c7\u6458\n\t\tif (strength+pea.x+2>k) //\u5df2\u6d88\u8017\u4f53\u529b+\u91c7\u6458\uff081\uff09+\u8fd4\u56de\uff08pea.x+1\uff09\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstrength++;\n\t\t\tcount += pea.num;\n\t\t\t//cout << \"(\" << pea.x << \",\" << pea.y << \")= \" << pea.num << endl<<strength<<endl;\n\t\t}\n\t}\n\tcout << count;\n\treturn 0;\n}\n```\n\nPS\uff1a\u6211\u7b2c\u4e00\u6b21\u63d0\u4ea4\u7684\u65f6\u5019\u6709\u4e2a\u6d4b\u8bd5\u4fe1\u606f\u6ca1\u5220\u9664\uff0c\u5c45\u7136\u5224\u5b9a\u6211\u8fc7\u4e86\u4e00\u4e2a\u70b9\uff0c\u771f\u662f\u795e\u5947",
        "postTime": 1563178473,
        "uid": 196546,
        "name": "pitao_hc",
        "ccfLevel": 0,
        "title": "P1086\u82b1\u751f\u91c7\u6458\u4e00\u7ef4\u6570\u7ec4\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\uff0c\u6211\u4e0d\u60f3\u518d\u8bf4\u4ec0\u4e48\u4e86\uff0c\u88ab\u9898\u76ee\u8bef\u5bfc\u4e86\u3002\u4e00\u773c\u770b\u4e0a\u53bb\u8fd8\u662f\u4e2aDP\u3002\n\nIn fact,\u8fd9\u9053\u9898\u6392\u4e2a\u5e8f\uff0c\u6309\u9898\u610f\u6765\u5c31\u884c\u4e86\uff0c\u53ef\u60dc\u9898\u610f\u4f3c\u4e4e\u4e0d\u90a3\u4e48\u660e\u663e\uff08~~\u4e2a\u4eba\u89c2\u70b9~~\uff09\uff0c\u8bb2\u767d\u4e86\uff0c\u5c31\u50cf\u697c\u4e0b\u8bf4\u7684\u4e00\u6837\uff1a\n## \u201c\u6bcf\u6b21\u53ea\u80fd\u62ff\u5269\u4e0b\u82b1\u751f\u682a\u4e2d\u6700\u5927\u7684\u201d\n\n\u540c\u65f6\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4e0b\u4e00\u682a\u62ff\u4e0d\u4e86\uff0c\u76f4\u63a5return 0;\n\u8fd9\u9053\u9898\u505a\u6cd5\u4f3c\u4e4e\u5f88\uff08hin\uff09\u591a\uff0ctag\u91cc\u9762\u5c45\u7136\u6709\u641c\u7d22\uff0c\u50cf\u6211\u8fd9\u79cd\u849f\u84bb\u5dee\u70b9\u653e\u5f03\u4e86\u3002\u5176\u5b9e\u5c31\u662f\u6392\u4e2a\u5e8f+\u7ebf\u6027\u626b\u63cf\uff08\u679a\u4e3e\uff09+\u66fc\u54c8\u987f\u8ddd\u79bb\u7684\u7a0d\u590d\u6742\u6a21\u62df~~\uff08\u7eaf\u4e2a\u4eba\u505a\u6cd5\uff09~~\u3002\n\n\u5982\u679c\u4f60\u60f3\u66f4\u52a0\u81ea\u4e3b\u7684\u5b66\u4e60\uff0c\u8bf7\u79fb\u6b65\u81f3\u9898\u76ee\u7ee7\u7eed\u601d\u8003\uff0c\u4ee5\u4e0a\u662f\u5927\u81f4\u601d\u8def\u3002\u4ecd\u6709\u7591\u60d1\uff0c\u8bf7\u7ee7\u7eed\u9605\u8bfb\uff0c\u5efa\u8bae\u4e0d\u8981\u4e00\u8bfb\u5230\u5e95\uff0c\u4ee3\u7801\u6700\u597d\u4e0d\u8981\u770b\uff0c\u653e\u4ee3\u7801\u53ea\u662f\u4e3a\u4e86\u89e3\u91ca\uff0c\u4f46\u8bf7\u7406\u89e3\u4e4b\u540e\u81ea\u884c\u7f16\u7a0b\u3002\n\n###### First Step:\n\n\u5148\u8bfb\u5165\uff0c\u8bfb\u5165\u65f6\u76f4\u63a5\u8fc7\u6ee4\u6389\u65e0\u7528\u6570\u636e\uff0c\u7528\u7ed3\u6784\u4f53\u5b58\u50a8\u3002\n\n##### Second Step:\n\u5c06\u6570\u636e\u4ece\u5927\u5230\u5c0f\u8fdb\u884c\u6392\u5e8f\u3002\n\n##### Third Step:\n\u8fd9\u4e00\u6b65\u6211\u7684\u5904\u7406\u7a0d\u663e\u9ebb\u70e6\uff0c\u4f46\u7531\u4e8e\u53ea\u9700\u8981\u89e3\u51b3\u201c\u8fdb\u573a\u201d\u7684\u7b2c\u4e00\u682a\u82b1\u751f\uff0c\u5e94\u8be5\u53ef\u4ee5\u63a5\u53d7\u3002\u7b2c\u4e00\u682a\u7531\u4e8e\u53ef\u4ee5\u4ece\u8def\u4e0a\u76f4\u63a5\u8d70\u5165\uff0c\u4e0d\u540c\u4e8e\u4ee5\u540e\u7684\u7531\u4e0a\u4e00\u6b65\u7ee7\u7eed\uff0c\u6240\u4ee5\u7565\u663e\u7279\u6b8a\u3002\uff08\u5f53\u7136\u4e5f\u662f\u53ef\u4ee5\u901a\u8fc7\u521d\u59cb\u5316\u76f4\u63a5\u89e3\u51b3\u7684\uff09\n\u5047\u8bbe\u5f53\u524d\u7b2c\u4e00\u4e2a\u5750\u6807(x,y)\uff0c\u9650\u5236\u65f6\u95f4\u4e3atim\uff0c\u5230\u5b83\u8981\u662f\u80fd\u5728\u9650\u5b9a\u65f6\u95f4\u5185\u8fd4\u56de\uff0c\u4e00\u5b9a\u8981\u4fdd\u8bc1\n\n#### tim<=x+x+1\n\n\u7b2c\u4e00\u4e2ax\u662f\u4ece\u8def\u4e0a\u8d70\u5230\u82b1\u751f\u7684\u65f6\u95f4\uff0c\u7b2c\u4e8c\u4e2ax\u662f\u8fd4\u56de\u65f6\u6d88\u8017\u7684\u65f6\u95f4\uff0c\u90a3\u4e2a1\u662f\u91c7\u6458\u7684\u65f6\u95f4\u3002\u53ea\u9700\u8981\u59d1\u4e14\u5c31\u8981\u8fd9\u4e00\u68f5\u82b1\u751f\uff0c\u62ff\u4e86\u5c31\u56de\u6765\uff0c\u5982\u679c\u8fd9\u4e2a\u6700\u8d77\u7801\u7684\u8981\u6c42\u90fd\u65e0\u6cd5\u4fdd\u8bc1\uff0c\u66f4\u522b\u8bf4\u518d\u6458\u540e\u9762\u7684\u4e86\u3002\n\n##### Fourth Step:\n\u7ebf\u6027\u626b\u63cf\uff0c\u57fa\u672c\u539f\u7406\u540c\u4e0a\uff0c\u59d1\u4e14\u53ea\u987e\u5f53\u524d\u5229\u76ca\u3002\u8865\u5145\u4e00\u4e2a\u66fc\u54c8\u987f\u8ddd\u79bb\uff1a\n```cpp\n\u5047\u8bbe\u6709\u4e24\u4e2a\u70b9\uff0cA(x1,y2),B(x2,y2)\uff0c\u7531A\u5230B\n\u4e4b\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u4e3adis=abs(x1-x2)+abs(y1-y2)\n```\n\u5728\u672c\u9898\u4e2d\u4e5f\u5f88\u597d\u7406\u89e3\uff0c\u540c\u6837\u5982\u679c\u5230\u4e0b\u4e00\u68f5\u82b1\u751f\u4e4b\u540e\u76f4\u63a5\u8fd4\u56de\u5230\u8def\u4e0a\u65f6\u95f4\u90fd\u4e0d\u591f\uff0c\u90a3\u4e48\u53c8\u600e\u4e48\u53ef\u80fd\u7ee7\u7eed\u503a\u522b\u7684\u82b1\u751f\u5462???\n\u5373\u5fc5\u987b\u6ee1\u8db3 dis+1+x2<=tim\uff0c\u57fa\u672c\u7ed3\u675f\u3002\n\n\u4f46\u4e00\u4e2atip\u8fd8\u662f\u8981\u8bf4\u4e00\u4e0b\uff0c\u5c31\u662f\u6bd4\u8f83\u7684\u65f6\u5019\u548ctim\u6bd4\u8f83\u7684\u503c\u4e0d\u662ftim\u771f\u6b63\u8981\u51cf\u6389\u7684\u3002\u6bcf\u6b21\u91c7\u6458\u5230\u82b1\u751f\uff0ctim\u5176\u5b9e\u90fd\u7f29\u77ed\u4e86\uff0c\u4f46\u7f29\u77ed\u7684\u65f6\u95f4\uff0c\u4e00\u5b9a\u8981\u53bb\u6389\u539f\u6765\u7684\u8fd4\u56de\u65f6\u95f4\u3002\n\n\u5b9e\u5728\u4e0d\u7406\u89e3\u8bf7\u5bf9\u7167\u6837\u4f8b\u81ea\u5df1\u624b\u7b97\uff0c\u4e00\u5b9a\u80fd\u591f\u7406\u89e3\u7684\u3002\n\nMy Codes:\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int N=777;\nstruct Node{\n    int x,y,num;\n}a[N];\nint r,c,n,ans,tim,id;\ninline bool cmp(Node p,Node q){\n    return p.num>q.num;\n}\ninline int Abs(int x){\n    return x>0?x:-x;\n}\ninline int dis(int p,int q){//\u66fc\u54c8\u987f\u8ddd\u79bb\n    return Abs(a[p].x-a[q].x)+Abs(a[p].y-a[q].y);\n}\nint main(){\n    scanf(\"%d%d%d\",&r,&c,&tim);//\u539fr\u884cc\u5217\n    for(int i=1;i<=r;i++)\n        for(int j=1;j<=c;j++){\n            int k;\n            scanf(\"%d\",&k);\n            if(k>0){\n                n++;\n                a[n].x=i;\n                a[n].y=j;\n                a[n].num=k;\n            }\n        }\n    sort(a+1,a+1+n,cmp);\n    if(tim<2*a[1].x+1){\n        printf(\"0\\n\");\n        return 0;\n    }\n    ans=a[1].num;\n    tim=tim-a[1].x-1;\n    id=2;\n    while(tim>0&&id<=n)\n        if(dis(id,id-1)+1+a[id].x<=tim)\n            ans+=a[id].num,tim=tim-dis(id,id-1)-1,id++;\n        else\n            break;\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```\n\u5176\u5b9e\u8fd8\u53ef\u4ee5\u66f4\u7b80\u6d01\uff0c\u8bfb\u8005\u53ef\u81ea\u884c\u601d\u8003\u3002~~\uff08\u5176\u5b9e\u662f\u6211\u61d2\u5f97\u518d\u60f3\u4e86\uff09~~",
        "postTime": 1548085796,
        "uid": 18993,
        "name": "\u4ee5\u58a8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "## \u9898\u5f88\u597d\n\n# \u6211\u7684\u601d\u8def\u66f4\u597d...\n\n\u5148\u89e3\u91ca\u4e0b\u5404\u4e2a\u53d8\u91cf:l\u4e3a\u6709\u82b1\u751f\u690d\u682a\u6570\u91cf\uff0ct\u4e3a\u5df2\u6d88\u8017\u65f6\u95f4\uff0cans\u4e3a\u7ed3\u679c\uff0cm*n\u4e3a\u82b1\u751f\u7530\u7684\u5927\u5c0f\u3002\n\n\u7136\u540e\u6211\u53bb\u5904\u7406\u4e86\u5404\u4e2a\u70b9\u8f93\u5165\u7684\u95ee\u9898\uff0cq\u53ea\u662f\u7528\u4e8e\u7ed9\u6570\u7ec4\u8d4b\u503c\u7684\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf,\u8bfb\u5165\u540e\u6211\u8fd0\u7528\u7ed3\u6784\u4f53point\u5b58\u50a8\u6bcf\u4e00\u4e2a\u6709\u82b1\u751f\u690d\u682a\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5b58\u5728\u82b1\u751f\u690d\u682a\u7684\u70b9\uff0c\u6211\u90fd\u8981\u53bb\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u682a\u82b1\u751f\u7684\u690d\u682a\u4e0b\u7684\u82b1\u751f\u4e2a\u6570\u3002\n\n### \u6392\u5e8f\n\n\u679a\u4e3e\u6bcf\u4e2a\u82b1\u751f\u690d\u682a\uff0c\u5148\u8ba1\u7b97t\uff0c\u7136\u540e\u518d\u6bd4\u8f83\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u91cd\u590d\u8ba1\u7b97t\u4e86\uff0c\u5982\u679c\u6bd4\u8f83\u5931\u8d25\uff0ct\u4e5f\u5c31\u6ca1\u7528\u4e86\u3002\u6211\u4eec\u8fd8\u8981\u7279\u6b8a\u8003\u8651\u4e00\u4e0b\u7b2c\u4e00\u682a\u82b1\u751f\u662f\u4e0d\u540c\u7684\uff0c\u56e0\u4e3a\u591a\u591a\u4e00\u5f00\u59cb\u53ef\u4ee5\u8df3\u5230\u7b2c\u4e00\u4e2a\u6700\u591a\u82b1\u751f\u7684\u6240\u5728\u5217\u3002\n\n\u597d\u4e86\uff0c\u8fd9\u6709\u4f55\u96be???\n\n\u987a\u4fbf\u732e\u4e0a\u6211\u7684blog:https://www.luogu.org/blog/Root-std-admin/\n\n\u4ee3\u7801\u5728\u6b64(\u542c\u8bf4\u6709\u4eba\u8fd8\u5728\u82e6\u601d\u51a5\u60f32333...):\n\n```cpp\n//Written By:Jason_Root\n//Time Limit : 1000 MS\n//Memory Limit : 65536 KB\n#pragma GCC optimize(3)\n#include<bits/stdc++.h>\nusing namespace std;\nstruct point {\n\tint x,y,num;\n} p[405];\nint dis(point a,point b) {\n\treturn abs(a.x-b.x)+abs(a.y-b.y);\n}\ninline int read() {\n\tchar ch = getchar();\n\tint x = 0, f = 1;\n\twhile(ch < '0' || ch > '9') {\n\t\tif(ch == '-') f = -1;\n\t\tch = getchar();\n\t}\n\twhile('0' <= ch && ch <= '9') {\n\t\tx = x * 10 + ch - '0';\n\t\tch = getchar();\n\t}\n\treturn x * f;\n}\nvoid func() {\n\tios_base::sync_with_stdio(false);\n\tint m,n,k;\n\tint q;\n\tint l = 0,t = 0,ans = 0;\n\tm = read();\n\tn = read();\n\tk = read();\n\tfor(int i = 1; i <= m; i++) {\n\t\tfor(int j = 1; j <= n; j++) {\n\t\t\tif(scanf(\"%d\",&q) && q) {\n\t\t\t\tp[l].x = i;\n\t\t\t\tp[l].y = j;\n\t\t\t\tp[l++].num = q;\n\t\t\t}\n\t\t}\n\t}\n\tsort(p,p+l);\n\tfor(int i = 0; i < l; i++) {\n\t\tif(!i) {\n\t\t\tif((t+= p[0].x+1) <= k-p[0].x) {\n\t\t\t\tans+= p[0].num;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if((t+= dis(p[i],p[i-1])+1) <= k-p[i].x) {\n\t\t\tans+= p[i].num;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn;\n}\nint main() {\n\tfunc();\n\treturn 0;\n}\n```\n\u771f\u5fc3\u611f\u8c22\u5927\u5bb6\u89c2\u770b,\u8c22\u8c22!!!",
        "postTime": 1571719827,
        "uid": 182231,
        "name": "\u9f99\u884c\u9f98\u9f98",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "# \u6b63\u89e3\n### ~~\u5927\u4f6c\u52ff\u55b7~~\n### \u6ce8\u610f\uff1a\u9898\u76ee\u662f\u62ff\u5b8c\u4e00\u4e2a\u518d\u62ff\u6bd4\u8fd9\u4e2a\u5c0f\u7684\u6700\u5927\u7684\u4e00\u4e2a\uff01\uff01\uff01\u662f\u8d2a\u5fc3\u4e0d\u662f\u6700\u4f18\u89e3\uff01\uff01\uff01\n~~\u6211\u6700\u5f00\u59cb\u4ee5\u4e3a\u662f\u6c42\u82b1\u751f\u6570\u91cf\u6700\u591a\u7684\u4e00\u6761\u8def\u7ebf\u554a\u505a\u51fa\u6765\u540e\u6000\u7591\u4eba\u751f\u7136\u540e\u624d\u53d1\u73b0\u4e0d\u662f\u6700\u4f18\u89e3~~\n\n\n------------\n\u8ddd\u79bb\u8ba1\u7b97\u516c\u5f0f\uff1a\u6c42\u70b9\uff08x1,y1\uff09\u548c\u70b9\uff08x2,y2\uff09\u4e4b\u95f4\u7684\u8ddd\u79bb\uff08\u4e0d\u80fd\u659c\u8d70\uff09\n#### \u8ddd\u79bb = |x1 - x2| + |y1 - y2| \uff08\u6ce8\u610f\u7edd\u5bf9\u503c\uff01\uff01\uff01\uff09\n------------\n## \u5b8c\u6574\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint field[21][21];   //\u50a8\u5b58\u5750\u6807\nint m, n, ti, o = 0, u = 0;\nint ans = 0;\n\nstruct have {       //\u7ed3\u6784\u4f53\u82b1\u751f\n    int xy[2];        //\u6709\u82b1\u751f\u7684\u5730\u65b9\u7684\u5750\u6807\n\tint number;        //\u591a\u5c11\u82b1\u751f\n}t[400]; \n\nbool c (have a, have b) {     //\u4ece\u5927\u5230\u5c0f\u6392\u5217\u51fd\u6570\n    return a.number > b.number;\n} \n\nint main () {\n    cin >> m >> n >> ti;\n    for (int i = 1; i <= m; i++) {  \n    \tfor (int j = 1; j <= n; j++) {\n\t    \tcin >> field[i][j];    //\u8f93\u5165\u5750\u6807\n\t    \tif (field[i][j] != 0) {  //\u5982\u679c\u82b1\u751f\u6570\u4e0d\u4e3a\u96f6\n\t    \t\tt[o].number = field[i][j];  //\u5b58\u50a8\u82b1\u751f\u6570\n\t\t\t    t[o].xy[0] = j; \n\t\t\t    t[o].xy[1] = i;   //\u5b58\u6570\u5750\u6807\n\t\t\t\to++; \n\t\t\t}  \n\t\t} \n\t}\n\t\n\tsort (t, t + o, c);  //\u4ee5\u82b1\u751f\u6570\u91cf\u4ece\u5927\u5230\u5c0f\u6392\u5217\n\t\n\tint usetime;   //\u7528\u4e86\u591a\u5c11\u65f6\u95f4\n\tfor (int i = 0; i < o; i++) {\n\t    if (i == 0) {    //\u7b2c\u4e00\u4e2a\u8ba1\u7b97\u65b9\u5f0f\u7279\u6b8a\n\t\t    usetime = t[u].xy[1] - 0 + 1; //\u8017\u8d39\u65f6\u95f4\n\t\t    ti -= usetime;  \n\t\t    ans += t[u].number;\n\t\t    if (ti < (t[u].xy[1] - 0)) {  //\u5224\u65ad\u80fd\u5426\u56de\u6765\n\t\t        ans -= t[u].number; //\u4e0d\u80fd\u5219\u9000\u56de\u5e76\u7ed3\u675f\n\t\t        break;\n\t\t    }  \n\t\t    u++;\n\t\t} else {\n    \t\tusetime = abs(t[u].xy[1] - t[u - 1].xy[1]) + abs(t[u].xy[0] - t[u - 1].xy[0]) + 1; //\u8017\u8d39\u65f6\u95f4\u8ba1\u7b97\n\t    \tti -= usetime;\n\t    \tans += t[u].number; \n\t\t    if (ti < (t[u].xy[1] - 0)) {\n\t\t        ans -= t[u].number; //\u9000\u56de\n\t    \t\tbreak; \n\t\t    }\n\t\t\tu++; \n\t\t} \n\t\t\n\t} \n\t\n\tcout << ans;\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1571139024,
        "uid": 247672,
        "name": "LJLYROCK",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "#### \u672c\u849f\u84bb\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u4e0d\u597d\u591a\u591a\u5305\u6db5\uff01\n#### \u7ecf\u8fc7\u4e00\u6b21\u53c8\u4e00\u6b21\u7684\u6837\u4f8b\u901a\u4e0d\u8fc7...\uff08\u4e22\u4eba\uff09\uff0c\u672c\u849f\u84bb\u7ec8\u4e8e\u901a\u8fc7\u4e86\u6837\u4f8b\u5e76\u6210\u529fAC\uff01\n#### \u6211\u770b\u4e86\u4e00\u4e0b\u8bb8\u591a\u5927\u4f6c\u7684\u4ee3\u7801\uff0c\u89c9\u5f97\u8fd9\u9053\u9898\u4e0d\u7528\u8fd9\u4e48\u9ebb\u70e6\u5566\uff0c\u641c\u7d22\u90fd\u4e0d\u7528\u7684\n#### \u6211\u7684\u601d\u8def\u662f\uff1a\u8bfb\u5165\uff0c\u7136\u540e\u5199\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u5c06\u6709\u82b1\u751f\u7684\u690d\u682a\u7684\u82b1\u751f\u6570\u3001\u4e0e\u8def\u9762\u7684\u8ddd\u79bb\u3001xy\u5750\u6807\u5b58\u5728\u4e00\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4\u4e2d\uff0c\u6839\u636e\u82b1\u751f\u6570\u5927\u5c0f\u6392\u5e8f\uff0c\u56e0\u4e3a\n###  \u201c\u4f60\u5148\u627e\u51fa\u82b1\u751f\u6700\u591a\u7684\u690d\u682a\uff0c\u53bb\u91c7\u6458\u5b83\u7684\u82b1\u751f\uff1b\u7136\u540e\u518d\u627e\u51fa\u5269\u4e0b\u7684\u690d\u682a\u91cc\u82b1\u751f\u6700\u591a\u7684\uff0c\u53bb\u91c7\u6458\u5b83\u7684\u82b1\u751f\uff1b\u4f9d\u6b64\u7c7b\u63a8\u201d\n#### \u6240\u4ee5\u7528\u8d2a\u5fc3~\u7136\u540e\u5faa\u73af\u5224\u65ad\u65f6\u95f4\u503c\u662f\u5426\u8db3\u591f\u5230\u8fbe\u3001\u91c7\u6458\u3001\u8fd4\u56de\uff0c\u8db3\u591f\u5c31\u52a0\u4e0a\u82b1\u751f\u6570\uff0c\u4e0d\u591f\u5c31break\u561b\n#### \u9644AC\u4ee3\u7801~\n```cpp\n\n#include<cmath>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint a[21][21];//\u50a8\u5b58\u5730\u56fe \nstruct yue\n{\n\tint zhi,juli,x,y;//\u82b1\u751f\u6570\n    //\u8ddd\u8fb9\u7f18\u6700\u8fd1\u7684\u683c\u6570\n\t//\u6a2a\u7eb5\u5750\u6807 \n}b[411];\nbool com(struct yue a,struct yue b)\n{\n\treturn a.zhi>b.zhi;\n}\nint main()\n{\n\tint k,w=1,m,n,s=0;\n\tscanf(\"%d%d%d\",&m,&n,&k);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t  for(int j=1;j<=n;j++)\n\t  {\n\t\tscanf(\"%d\",&a[i][j]);\n\t\tif(a[i][j]!=0)//\u6709\u82b1\u751f\u5c31\u8d4b\u503c\n\t\t{\n\t\t\tb[w].zhi=a[i][j]; \n\t\t\tb[w].y=i;\n\t\t\tb[w].x=j;\n\t\t\tb[w].juli=i; \n\t\t\tw++;\n\t\t}\n\t  }\n\t}\n\tw=w-1;\n\tsort(b+1,b+1+w,com);\n\t//for(int i=1;i<=w;i++)\n\t//printf(\"%d \",b[i].juli);//\u8fd9\u91cc\u68c0\u67e5\u4e00\u4e0bsort\uff0c\n\t//\u987a\u4fbf\u53d1\u73b0\u4e86\u4e0e\u8def\u7684\u8ddd\u79bb\u6709\u95ee\u9898... \n\tif(k<b[1].juli*2+1+1)//\u8fd9\u91cc\u7279\u5224\u4e00\u4e0b\uff0c\u8981\u662f\u7b2c\u4e00\u682a\u90fd\u91c7\u4e0d\u5230\uff0cemmm \n\t{\n\tprintf(\"0\");\n\treturn 0;\n\t}\n\telse \n\t{\n\t\tk-=b[1].juli-1;\n\t\ts+=b[1].zhi;\n\t}\n\t\n\tfor(int i=2;i<=w;i++)\n\t{\n\t\t//printf(\"%d \\n\",abs(b[i-1].x-b[i].x)+abs(b[i-1].y-b[i].y)+b[i].juli+1+1);\n\t\t\n\t\tif(k<=abs(b[i-1].x-b[i].x)+abs(b[i-1].y-b[i].y)+b[i].juli+1+1)\n\t\t/*\u5206\u522b\u662f\uff1a\u8df3\u5230\u4e0b\u4e00\u682a\u7684\u4f4d\u7f6e\u6240\u9700\u65f6\u95f4\uff0c\n\t\t\u4e0b\u4e00\u682a\u56de\u5230\u8def\u8fb9\u7684\u65f6\u95f4\uff08\u56de\u4e0d\u53bb\u8fd8\u8df3\u4ec0\u4e48\u8df3\uff09\n\t\t\u548c\u91c7\u82b1\u751f\u7684\u65f6\u95f4\uff08\u7b2c\u4e00\u6b21\u6211\u5fd8\u4e86\uff09\n\t\t\u548c\u8df3\u56de\u8def\u8fb9\u7684\u65f6\u95f4\uff08\u7b2c\u4e8c\u6b21\u6211\u5fd8\u4e86\uff09 \n\t\t\u8981\u5728\u65f6\u95f4\u5185\u56de\u6765\uff08\u91cd\u70b9\uff09\uff01\u521a\u597d\u56de\u6765\u662f\u4e0d\u884c\u7684\uff01 \n\t\t*/ \n\t\tbreak;\n\t\tk-=abs(b[i-1].x-b[i].x)+abs(b[i-1].y-b[i].y)+1;\n\t\ts+=b[i].zhi;\n\t}\n\tprintf(\"%d\",s);\n\treturn 0;\n} \n//\u6d4b\u8bd5\u6837\u4f8b\u6ca1\u8fc7\uff0c\u5e94\u8be5\u662f\u8ddd\u8fb9\u7f18\u7684\u6700\u5c0f\u8ddd\u79bb\u53eb\u6211\u5f04\u6210\u4e86\u6700\u5927\u8ddd\u79bb...\n//\u4ec0\u4e48\u6700\u5c0f\u8ddd\u79bb..\u662f\u548c\u8def\u7684\u8ddd\u79bb... \n//\u53c8\u51fa\u95ee\u9898..\u539f\u56e0\u662f\u6211\u6ca1\u8003\u8651\u6458\u82b1\u751f\u7684\u65f6\u95f4 \n//emmm\u8df3\u56de\u8def\u8fb9\u9700\u8981\u65f6\u95f4... \n//emmm\u521a\u597d\u56de\u6765\u4e0d\u884c... \n\n\n```\n",
        "postTime": 1545483909,
        "uid": 117562,
        "name": "\u8bb8\u8086\u7396",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u8fd9\u662f\u672c\u849f\u84bb\u7b2c\u4e00\u6b21\u4e0d\u653e\u4ee3\u7801\u7684\u9898\u89e3\n\n### \u9898\u76ee\u5206\u6790\n\n\u7334\u5b50\u4ece\u4e61\u95f4\u5c0f\u8def\u51fa\u53d1\uff0c\u5728\u8def\u7684\u4e00\u4fa7\u53ef\u89c6\u533a\u57df\u5185\u6309\u82b1\u751f\u6570\u91cf\u4ece\u5927\u5230\u5c0f\u6458\u53d6\u5e76\u5728\u9650\u5b9aK\u79d2\u5185\u8fd4\u56de\u5c0f\u8def\u3002\u5982\u679c\u6ca1\u6709\u6458\u5b8c\u8fd4\u56de\u5c0f\u8def\uff0c\u6b64\u540e\u4e0d\u80fd\u518d\u5728\u672c\u533a\u57df\u5185\u91c7\u6458\u3002\u95ee\u7334\u5b50\u6700\u591a\u53ef\u4ee5\u91c7\u96c6\u591a\u5c11\u82b1\u751f\uff1f\n\n### \u5177\u4f53\u5b9e\u73b0\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u62bd\u8c61\u6210\u4e00\u4e2a~~\u4f2a~~\u6700\u77ed\u8def\u6a21\u578b\uff08\u5176\u5b9e\u662fDFS\uff09\n\n\u521b\u5efa\u4e00\u4e2a\u7ed3\u6784\u4f53\u5b58int x,y,peanut;\u5206\u522b\u8868\u793a\u6a2a\u7eb5\u5750\u6807\u548c\u4e0b\u9762\u7684\u82b1\u751f\u6570\u91cf\n\n\u7528\u7ed3\u6784\u4f53\uff0c\u8bfb\u5165\u6bcf\u4e00\u5757\u5730\u4e0b\u7684\u82b1\u751f\u6570\u91cf\uff0c\u7136\u540e\u6309\u82b1\u751f\u4e2a\u6570\u6392\u5e8f\u3002\n\n\u6837\u4f8b\u4e3a\u4f8b\n\n6 7 21\n0 0 0 0 0 0 0\n\n0 0 0 0 13 0 0\n\n0 0 0 0 0 0 7\n\n0 15 0 0 0 0 0\n\n0 0 0 9 0 0 0\n\n0 0 0 0 0 0 0\n\n\u6392\u5e8f\u540e\n\nh[i]    x    y    peanut\n\n0        0    0    0\n\n1        2    4    15\n\n2        5    2    13\n\n3        4    5    9\n\n4        7    3    7\n\n5        0    0    0\n\n6    ...    ...    ...\n\n### \u8fde\u8fb9\u64cd\u4f5c\n\n\u5728\u6b64\ni\u4ee3\u8868\u6240\u6709\u6709\u82b1\u751f\u7684\u70b9\n\naddedge(u,v,w)\u8868\u793au\u4e0ev\u8fde\u63a5\u4e00\u6761\u6743\u503c\u4e3aw\u7684\u6709\u5411\u8fb9\n\n#### \u5904\u7406\u8d77\u70b9\u7ec8\u70b9\n\n\u56e0\u4e3a\u8d77\u70b9\u662f\u4e00\u6761\u8fd1\u4f3c\u76f4\u7ebf\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8d77\u70b9\u770b\u6210\u70b91000\uff0c\u5219addedge(1000,i,h[i].y+1)\n\n+1\u662f\u56e0\u4e3a\u91c7\u6458\u82b1\u751f\u7684\u65f6\u95f4\u9700\u8981\u4e00\u79d2\n\n\u540c\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7ec8\u70b9\u770b\u6210\u70b91001\u5e76\u5c06\u6bcf\u4e00\u4e2a\u70b9\u90fd\u548c\u5b83\u8fde\u8fb9\n\naddedge(i,1001,h[i].y)\n\n\u6b64\u5904\u6ca1\u6709+1\u662f\u56e0\u4e3a\u7ec8\u70b9\u6ca1\u6709\u82b1\u751f\uff0c\u5e76\u4e0d\u9700\u8981\u82b1\u8d39\u989d\u5916\u7684\u4e00\u79d2\n\n#### \u5904\u7406\u5176\u4ed6\n\n\u5c06i\u548ci+1\u8fde\u8fb9 addedge(i,i+1,[\u4e24\u5750\u6807\u7684\u66fc\u54c8\u987f\u8ddd\u79bb])\n\nPS\uff1a\u66fc\u54c8\u987f\u8ddd\u79bb\u7528\u4ee5\u6807\u660e\u4e24\u4e2a\u70b9\u5728\u6807\u51c6\u5750\u6807\u7cfb\u4e0a\u7684\u7edd\u5bf9\u8f74\u8ddd\u603b\u548c\n\n\u4f8b\u5982\u5728\u5e73\u9762\u4e0a\uff0c\u5750\u6807\uff08x1, y1\uff09\u7684i\u70b9\u4e0e\u5750\u6807\uff08x2, y2\uff09\u7684j\u70b9\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u4e3a\uff1a\n\nd(i,j)=|X1-X2|+|Y1-Y2|\uff08\u8f6c\u81ea\u767e\u5ea6\u767e\u79d1\uff09\n\n\u81f3\u4e8e\u641c\u7d22\u7684\u5177\u4f53\u5b9e\u73b0\u5c31\u4e0d\u7528\u8bf4\u4e86\n",
        "postTime": 1514633124,
        "uid": 47863,
        "name": "Imakf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u7b80\u5355\u7684\u6a21\u62df\u9898\uff0c\u4f46\u662f\u6709\u5f88\u591a\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff0c\u4e0d\u7136\u5c31\u4f1awa,,tle\n\n\n\u6bcf\u6b21\u627e\u5230\u82b1\u751f\u7530\u91cc\u9762\u6700\u591a\u82b1\u751f\u7684\u5750\u6807\uff0c\u5224\u65ad\u53bb\u91c7\u82b1\u751f\u82b1\u7684\u65f6\u95f4\u52a0\u4e0a\u53bb\u91c7\u82b1\u751f\u7684\u8def\u4e0a\u82b1\u7684\u65f6\u95f4\u4f1a\u4e0d\u4f1a\u8d85\u65f6\n\n\u4e0d\u4f1a\u8d85\u65f6\u518d\u53bb\u91c7\u6458\u3002\n\n\n\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u516c\u5f0f\uff1a**|bx-x|+|by-y|**\n\nAC\u4ee3\u7801\uff1a\n\n\u3001\u3001\u3001\n\ncpp\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<climits>\nusing namespace std;\nint a[501][21],tot,time,x,y;//x y\u8868\u793a\u73b0\u5728\u591a\u591a\u6240\u5904\u7684\u4f4d\u7f6e,time\u8868\u793a\u82b1\u8d39\u7684\u603b\u65f6\u95f4,tot\u8868\u793a\u91c7\u5230\u7684\u82b1\u751f\u6570\nint abs(int a)//\u8d1f\u7684\u8def\u7a0b\u662f\u8981\u5012\u7740\u8d70\uff1f\n{\n    if(a<0) return -a;\n    return a;\n}\nint main()\n{\n    int m,n,k;\n    scanf(\"%d%d%d\",&m,&n,&k);\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=n;j++) scanf(\"%d\",&a[i][j]);\n    int maxn,bx,by;\n    while(time<=k)\n    {\n        bool pd=false;\n        maxn=INT_MIN,bx=0,by=0;\n        for(int i=1;i<=m;i++)\n            for(int j=1;j<=n;j++)\n            {\n                if(maxn<a[i][j])\n                {\n                    maxn=a[i][j];\n                    bx=i,by=j;\n                }\n            }\n        if(!x&&!y) y=by;//\u8fdb\u5165\u82b1\u751f\u7530\u7684\u65f6\u5019\uff0c\u8def\u8fb9\u77f3\u53ef\u4ee5\u968f\u4fbf\u7ad9\u7684\uff0c\u7ad9\u5bf9\u4f4d\u7f6e\u591a\u6458\u82b1\u751f\uff01\uff01\n        int t=abs(bx-x)+abs(by-y)+1;\n        if(time+t>k) break;\n        if(time+t+bx>k) break;\n        time+=t;\n        x=bx,y=by;\n        tot+=maxn;\n        a[x][y]=0;\n        for(int i=1;i<=n;i++)    //\u5224\u65ad\u82b1\u751f\u7530\u91cc\u9762\u8fd8\u6709\u6ca1\u6709\u82b1\u751f\uff0c\u6ca1\u6709\u82b1\u751f\u5c31\u9000\u51fa\n            for(int j=1;j<=m;j++)//\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\uff0c\u7ee7\u7eed\u6a21\u62df\u7684\u8bdd\u4f1a\u8d85\u65f6\n                if(a[i][j]) pd=true;\n        if(!pd) break;\n    }\n    printf(\"%d\",tot);\n}\n\u3001\u3001\u3001\n```",
        "postTime": 1510892723,
        "uid": 24922,
        "name": "DEVILK",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u542c\u8bf4Noip\u524d\u53d1\u9898\u89e3\u4f1arp++\n\n\n\u8fd9\u9053\u9898\u9898\u5e72\u5f88\u957f\uff0c\u8bfb\u61c2\u4e86\u5176\u5b9e\u5c31\u77e5\u9053\u662f\u7eaf\u6a21\u62df\uff0c\u4f46\u662f\u5199\u8d77\u6765\u5f88\u9ebb\u70e6\n\n\n\u9996\u5148\uff0c\u8fdb\u5165\u65f6\u8981\u5224\u65ad\u4e00\u4e0b\uff0c\u6211\u4eec\u5047\u8bbe\u5c0f\u8def\u662f\u57280\u884c\uff0c\u5171m\u5217\uff0c\u6700\u591a\u7684\u82b1\u751f\u54ea\u4e00\u5217\uff0c\u5c31\u4ece\u7b2c\u51e0\u5217\u8fdb\u5165\u82b1\u751f\u5730\u3002\n\n\n\u786e\u5b9a\u8d77\u59cb\u70b9\uff0c\u627e\u5230\u5269\u4f59\u6700\u5927\u7684\u70b9\uff0c\u8bb0\u5f55\u4e0b\u4f4d\u7f6e\u3002\u4e0d\u96be\u770b\u51fa\uff0c\u6700\u5feb\u5230\u8fbe\u76ee\u6807\u7684\u65f6\u95f4\u662f\uff1a\n\n|\uff08\u73b0\u5728\u6240\u5728\u7684\u884c\u6570-\u76ee\u6807\u884c\u6570\uff09|+|\uff08\u73b0\u5728\u5217\u6570-\u76ee\u6807\u5217\u6570\uff09|\uff08\u4e00\u5b9a\u662f\u7edd\u5bf9\u503c\uff0c\u8d1f\u8ddd\u79bb\u662f\u706d\u7edd\u4eba\u6027\u7684\uff09\n\u4f46\u662f\u9898\u76ee\u53c8\u8981\u6c42\u6709\u9650\u5b9a\u65f6\u95f4\uff0c\u4e14\u4e00\u5b9a\u8981\u56de\u5230\u8def\u4e0a\uff0c\u90a3\u4e48\u65f6\u95f4\u8fd8\u8981\u51cf\u53bb\u56de\u5230\u8def\u8fb9\u7684\u65f6\u95f4\uff0c\u4e5f\u5c31\u662f\u76ee\u6807\u884c\u6570\u3002\n\n\u522b\u5fd8\u4e86\uff0c\u8fd8\u8981\u51cf\u53bb\u4e00\u4e2a\u91c7\u6458\u7684\u65f6\u95f4\uff0c1\u4e2a\u5355\u4f4d\u65f6\u95f4\u3002\n\n\u5f97\u51fa\uff1a\u5982\u679c \u5269\u4f59\u65f6\u95f4-[|\uff08\u73b0\u5728\u884c\u6570-\u76ee\u6807\u884c\u6570\uff09|+|\uff08\u73b0\u5728\u5217\u6570-\u76ee\u6807\u5217\u6570\uff09|+\u76ee\u6807\u884c\u6570+1]>=0 \u90a3\u4e48\u53ef\u4ee5\u91c7\u6458\u90a3\u91cc\u7684\u82b1\u751f\uff0c\u7136\u540e\u8fdb\u884c\u4e00\u7cfb\u5217\u64cd\u4f5c\u3002\n\u5426\u5219 \u8df3\u51fa\u5faa\u73af\u3002\n\n\u6700\u540e\uff0c\u5224\u65ad\u5982\u679c\u5df2\u7ecf\u6ca1\u6709\u82b1\u751f\u53ef\u6458\u4e86\uff0c\u8df3\u51fa\u5faa\u73af\u3002\n\n\u4ee3\u7801\uff1a\n\n\n\n      \n            \n               \n```cpp\n#include<stdio.h>\nint a[51][51];\nint absn(int n)//\u7edd\u5bf9\u503c\u51fd\u6570\uff0c\u7b49\u4e8estdlib.h\u91cc\u7684abs\u51fd\u6570\n{\n    if(n>=0) return n; else return -n;\n}\nint main()\n{\n    int n,m,k;//\u8bfb\u5165\u7684\u884c\u3001\u5217\u3001\u9650\u5b9a\u65f6\u95f4\n    int time,max,sum;\n    int i,j;\n    int x1,y1,x2,y2;//x1\u3001y1\u4e3a\u73b0\u5728\u884c\u5217\u6570,x2\u3001y2\u4e3a\u76ee\u6807\u884c\u5217\u6570\n    int t;//t\u7528\u6765\u5224\u65ad\u82b1\u751f\u5730\u91cc\u662f\u5426\u8fd8\u6709\u82b1\u751f\n    scanf(\"%d%d%d\",&n,&m,&k);\n    for(i=1;i<=n;i++)\n     for(j=1;j<=m;j++)\n      scanf(\"%d\",&a[i][j]);\n      time=k;\n      x1=y1=0;//\u6211\u4eec\u5047\u5b9a\u521a\u5f00\u59cb\u5728a[0][0]\u4e0a\uff0c\u8fd8\u6ca1\u5f00\u59cb\u884c\u52a8\n      sum=0;//\u7d2f\u52a0\u5668\u6e05\u96f6\n      while(1)\n      {\n          max=t=0;//\u7528\u6765\u5224\u65ad\u7684\u6570\u6e05\u96f6\n          for(i=1;i<=n;i++)\n           for(j=1;j<=m;j++)\n            if(a[i][j]>max) {max=a[i][j]; x2=i; y2=j;}//\u627e\u5230\u82b1\u751f\u6700\u591a\u7684\u4f4d\u7f6e\uff0c\u8bb0\u5f55\u5750\u6807\n            if(x1==0&&y1==0) y1=y2;//\u884c\u52a8\u524d\u7684\u51c6\u5907\uff0c\u4ece\u6700\u591a\u82b1\u751f\u90a3\u4e00\u5217\u8fdb\u5165\u82b1\u751f\u5730\uff0c\u7f29\u77ed\u65f6\u95f4\n            if(time-(absn(x1-x2)+absn(y1-y2)+x2+1)>=0)//\u4e0a\u9762\u8bb2\u8fc7\u7684\uff0c\u518d\u6b21\u5f3a\u8c03\uff0c\u522b\u5fd8+1\n            {\n                sum+=a[x2][y2];//\u52a0\u4e0a\u91c7\u6458\u5230\u7684\u82b1\u751f\u6570\u91cf\n                time-=absn(x1-x2)+absn(y1-y2)+1;//\u7b97\u51fa\u5269\u4f59\u65f6\u95f4\n                a[x2][y2]=0;//\u6807\u8bb0\u6b64\u5904\u5df2\u65e0\u82b1\u751f\n                x1=x2; y1=y2;//\u73b0\u5728\u7684\u4f4d\u7f6e\u662f\u521a\u624d\u7684\u76ee\u6807\u4f4d\u7f6e\u3002\n               }\n               else break;//\u5426\u5219\u4e56\u4e56\u56de\u5230\u8def\u4e0a\n         for(i=1;i<=n;i++)\n          for(j=1;j<=m;j++)\n           {if(a[i][j]!=0) t++;}//\u8ba1\u4e0b\u5269\u4f59\u82b1\u751f\u7684\u4f4d\u7f6e\u7684\u6570\u91cf\n           if(t==0) break;//\u5982\u679c\u6ca1\u4e86\uff0c\u4e14\u8fd8\u5269\u4f59\u65f6\u95f4\uff0c\u5c31\u56de\u5230\u8def\u4e0a\uff0c\u6ca1\u6709\u8fd9\u4e2a\u5224\u65ad\u4f1a\u6d6a\u8d39\u8fd0\u884c\u65f6\u95f4\u3002\n      }\n      printf(\"%d\",sum);//\u8f93\u51fa\n      return 0;\n}\n\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u9053\u9898\u5c31\u662f\u8003\u6a21\u62df\uff0c\u5404\u4f4d\u5728\u7ec3\u4e60\u5404\u79cd\u7b97\u6cd5\u8fc7\u7a0b\u4e2d\uff0c\u4e5f\u522b\u5fd8\u4e86\u6a21\u62df\u8fd9\u4e2a\u57fa\u672c\u7684\u7b97\u6cd5\u3002\u9898\u89e3\u7f16\u8f91\u7528\u65f626\u5206\u949f\uff0c\u4ed4\u7ec6\u659f\u914c\u4e86\u8bed\u8a00\u548c\u987a\u5e8f\uff0c\u5404\u4f4d\u4ec5\u505a\u53c2\u8003\uff0c\u795d\u5927\u5bb6NOIp\u590d\u8d5b\u987a\u5229\n```",
        "postTime": 1508333000,
        "uid": 35584,
        "name": "KillerXu",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u7528\u7ed3\u6784\u4f53\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u82b1\u751f\u6570\u91cf\u548c\u4f4d\u7f6e\uff0c\u7136\u540e\u6309\u6570\u91cf\u964d\u5e8f\u6392\u5e8f\u3002\u5f97\u5230\u7684\u5e8f\u5217\u662f\u552f\u4e00\u7684\u91c7\u6458\u5e8f\u5217\u3002\n\n\u91c7\u4e00\u4e2a\u82b1\u751f\u65f6\u5224\u65ad\u80fd\u4e0d\u80fd\u56de\u53bb\u3002\u80fd\u56de\u53bb\u5c31\u63a5\u7740\u91c7\uff1b\u4e0d\u80fd\u56de\u53bb\u5c31\u76f4\u63a5\u8fd4\u56de\u91c7\u5b8c\u4e0a\u4e00\u4e2a\u82b1\u751f\u65f6\u7684\u503c\u3002\n\n\u5982\u679c\u5f53\u524d\u7b2ci\u4e2a\u690d\u682a\u4e0a\u7684\u82b1\u751f\u91cf\u4e3a0\uff0c\u4e5f\u76f4\u63a5\u8fd4\u56de\u3002\u4e0b\u9762\u8d34\u4ee3\u7801\uff08\u81ea\u4fe1\u8fd8\u662f\u633a\u7b80\u6d01\u7684\uff09\u3002\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint m,n,k,x,y,t=0,sum=0,a[22][22];\nstruct hs{\n    int z,v;\n}p[444];\nbool cmp(hs h1,hs h2){\n    return h1.v>h2.v;\n}\nint ff(int a,int b){\n    if(a>b) return a-b;\n    else return b-a;\n```\n}//\u522b\u95ee\u6211\u4e3a\u4ec0\u4e48\u4e0d\u7528abs\uff0c\u5934\u6587\u4ef6\u662f\u5565\u6211\u5fd8\u4e86\n```cpp\nint main(){\n    scanf(\"%d%d%d\",&m,&n,&k);\n    for(int i=0;i<m*n;i++) p[i].z=i;//\u5c06\u539f\u6765\u7684\u4f4d\u7f6e\u5b58\u50a8\u5728z\u4e2d\n//\u53ef\u4ee5\u7528\u6c42\u4f59\u9664\u6cd5\u5f97\u5230\u6a2a\u7eb5\u5750\u6807\n    for(int i=0;i<m;i++){\n        for(int j=0;j<n;j++){\n            scanf(\"%d\",&p[i*n+j].v);//v\u5b58\u50a8\u67d0\u4e2a\u4f4d\u7f6e\u7684\u82b1\u751f\u6570\u91cf            \n        }\n    }\n    sort(p,p+m*n,cmp);\n    x=p[0].z%n;y=-1;//\u56e0\u4e3a\u9760\u8fd1\u201c\u8def\u8fb9\u201d\u7684\u4f4d\u7f6ei=0\uff0c\u6240\u4ee5\u8bb0\u8d77\u70b9\u7684\u7eb5\u5750\u6807\u4e3a-1\n    for(int i=0;i<m*n;i++){\n        if(p[i].v==0) break;\n        t+=ff(p[i].z%n,x)+ff(p[i].z/n,y)+1;\n        if(t+p[i].z/n+1<=k) sum+=p[i].v;\n            else break;\n        x=p[i].z%n;y=p[i].z/n;    \n    }\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n\u65b0\u4eba\u5199\u9898\u89e3\uff0c\u5982\u679c\u6709\u4e0d\u6b63\u786e\u7684\u5730\u65b9\u8bf7\u591a\u591a\u6307\u6b63\n```",
        "postTime": 1504986021,
        "uid": 21963,
        "name": "liar_white",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u54b1\u53ef\u80fd\u662f\u7b2c\u4e00\u4e2a\u7528 **\u4f18\u5148\u961f\u5217** \u505a\u8fd9\u9053\u9898\u7684\u4eba  \n\u9996\u5148\u770b\u5230\u8fd9\u9053\u9898\u8bf4\u8981\u4ece\u5927\u5230\u5c0f\u7684\u6458\u82b1\u751f\uff0c  \n\u4e00\u4e2a\u63a5\u4e00\u4e2a\uff0c\u8fd9\u4e2a\u6316\u5b8c\u8981\u6316\u4e0b\u4e00\u4e2a\u600e\u4e48\u529e\uff1f  \n\u6240\u4ee5\u53ef\u4ee5\u60f3\u5230\u7528\u961f\u5217\uff0c\u5403\u4e00\u4e2apop\u4e00\u4e2a  \n\u600e\u4e48\u5b8c\u6210\u4ece\u5927\u5230\u5c0f\u7684\u6392\u5e8f\u5462\uff1f  \n\u4f18\u5148\u961f\u5217\u76f4\u63a5\u5e2e\u4f60\u6392\u597d\uff01  \n\u5269\u4e0b\u7684\u5c31\u662f\u4e00\u4e9b\u7b80\u5355\u7684\u6a21\u62df\uff0c**/\u5177\u4f53\u5185\u5bb9\u5728\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca/**  \n\n```cpp\n#include<iostream>\n#include<queue>\n#include<cmath>\n\nusing namespace std;\n\nstruct hs //\u6307\u82b1\u751f:)\n{\n    int x, y, v;\n    bool operator < (const hs & a) const\n    {\n        return v < a.v;\n    }//\u4f18\u5148\u961f\u5217\u9ed8\u8ba4\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u4f46\u662f\u9700\u8981\u7528\u5230\u5c0f\u4e8e\u53f7\uff0c\u6240\u4ee5\u8fd9\u91cc\u91cd\u8f7d\u8fd0\u7b97\u7b26 < (\u53ea\u91cd\u8f7d<\u5c31\u53ef\u4ee5\u4e86)\n};\n\npriority_queue <hs> q;\n\nint main()\n{\n    int m, n, k;\n    int sum = 0;\n    cin >> m >> n >> k;\n    int a;\n    hs t;\n    for(int i = 1; i <= m; i++)\n        for(int j = 1; j <= n; j++)\n        {\n            cin >> a;\n            t.v = a;\n            t.x = j;\n            t.y = i;\n            if(a != 0) //\u5982\u679c\u6709\u6570\u503c\uff0c\u5c31\u63a8\u8fdb\u961f\u5217\n                q.push(t);\n        }\n    k -= q.top().y; //\u8d70\u5230\u6700\u5927\u7684\u82b1\u751f\u690d\u682a\n    while(!q.empty() && k > q.top().y) //\u7b2c\u4e00\u4e2a\u662f\u68c0\u9a8c\u961f\u5217\u4e0d\u4e3a\u7a7a\uff0c\u5982\u679c\u7a7a\u4e86\u8bf4\u660e\u5168\u6458\u5b8c\u4e86\uff0c\u7b2c\u4e8c\u4e2a\u662f\u68c0\u9a8c\u5269\u4f59\u7684\u65f6\u95f4\u53ef\u4ee5\u8d70\u56de\u8def\u8fb9\n    {\n        k--; //\u53ea\u8981\u8fdb\u5165\u4e00\u6b21\u5faa\u73af\uff0c\u8bf4\u660e\u5230\u4e86\u4e00\u68f5\u690d\u682a\uff0c\u91c7\u6458\u8017\u8d391\u65f6\u95f4\n        sum += q.top().v;\n        int lx = q.top().x, ly = q.top().y;\n        q.pop();//\u6362\u4e0b\u4e00\u68f5\u6811\n        k -= abs(lx - q.top().x) + abs(ly - q.top().y);//\u5269\u4f59\u7684\u65f6\u95f4\u51cf\u53bb\u4ece\u4e0a\u4e00\u68f5\u690d\u682a\u5230\u8fd9\u68f5\u7684\u65f6\u95f4\n    }\n    cout << sum << endl;\n    return 0;\n}\n```\n",
        "postTime": 1565704142,
        "uid": 128032,
        "name": "\u706b\u82b1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "### \u7ed3\u6784\u4f53+\u6392\u5e8f+\u6a21\u62df\n\n## \u7ed3\u6784\u4f53\n```C++\nstruct T {\n    int i;//\u8bb0\u5f55\u884c\u4f4d\u7f6e\n    int j;//\u8bb0\u5f55\u5217\u4f4d\u7f6e\n    int num;//\u8be5\u4f4d\u7f6e\u82b1\u751f\u6570\u91cf\n} ;\n\n```\n\n## \u6392\u5e8f\uff0c\u6309\u7167\u82b1\u751f\u7684\u6570\u91cf\u7684\u5927\u5c0f\u9012\u51cf\n\n```\nbool cmp(T a, T b){\n    return a.num>b.num;\n}\n```\n\n## \u6a21\u62df\n\n* \u7528pre_i,pre_j \u8bb0\u5f55\u524d\u4e00\u6b21\u91c7\u6458\u4f4d\u7f6e\uff0c\u7528\u4e8e\u8ba1\u7b97\u4f4d\u79fb\n\n\n1. \u5148\u51cf\u53bb\u5230\u8def\u8fb9\u548c\u56de\u8def\u4e0a\u7684\u6d88\u8017 k -=2\n\n2. \u7b2c\u4e00\u68f5\u53ea\u8981\u51cf\u53bb\u6a2a\u5750\u6807\u5373\u53ef k -=\uff08\u4f4d\u79fbi - 1+\u91c7\u6458 1\uff09\n\n3. \u7b2ci\u68f5(i>=2)\u8981\u51cf\u53bb\u4f4d\u79fb\u548c\u91c7\u6458\u65f6\u95f4 k -=  (\u4f4d\u79fb)-\uff08\u91c7\u6458)\n\n\n\n```C++\n    \n   k -= abs(peanut[i].i - pre_i)+abs(peanut[i].j - pre_j)+1;\n   \n```\n4. \u5224\u65ad\u5982\u679c\u91c7\u6458\u4e86\u8be5\u68f5\u80fd\u5426\u56de\u5230\u8def\u8fb9 \uff08k>= peanut[i].i -1\uff09\n\n5. \u4f18\u5316\uff0c\u4e0d\u80fd\u56de\u5230\u8def\u8fb9\u6216\u8005\u82b1\u751f\u6570\u91cf\u4e3a0\u65f6\u8df3\u51fa\u5faa\u73af\n\n\n## \u4ee3\u7801\n\n\n```C++\n\t#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int N = 22;\nstruct T {\n    int i;//\u8bb0\u5f55\u884c\u4f4d\u7f6e\n    int j;//\u8bb0\u5f55\u5217\u4f4d\u7f6e\n    int num;//\u8be5\u4f4d\u7f6e\u82b1\u751f\u6570\u91cf\n} ;\nT peanut[N*N];\nbool cmp(T a, T b){\n    return a.num>b.num;\n}\nint main(){\n    int n,m,k;\n    cin >> n >> m >> k;\n    int index = 0;\n    for(int i=1;i<=n;i++){\n        for(int j = 1;j<=m;j++){\n            peanut[index ].i = i;\n            peanut[index ].j = j;\n            cin >> peanut[index].num;\n            index ++;\n        }\n    }\n    \n    k -= 2;\n    sort(peanut,peanut+index,cmp);// \u6309\u7167\u82b1\u751f\u6570\u91cf\u9012\u51cf\n    \n    int i =0,pre_i = 0,pre_j = 0,sum =0;//\u8bb0\u5f55\u524d\u4e00\u4e2a\u4f4d\u7f6e\n    while(k-peanut[i].i>=1&&peanut[i].num>0){\n        if(i ==0){\n            k -= peanut[i].i;\n        }else {\n            k -= abs(peanut[i].i - pre_i)+abs(peanut[i].j - pre_j)+1;\n           \n        }\n        if(k>=peanut[i].i-1){\n            pre_i = peanut[i].i;\n            pre_j = peanut[i].j;\n            sum += peanut[i].num;\n        }else break;\n        \n        i++;\n    }\n    \n    cout<<sum <<endl;\n}\n\n\n```\n",
        "postTime": 1561615994,
        "uid": 198913,
        "name": "RootNode",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u5c31\u662f\u4e00\u9053\u7b80\u5355\u7684\u6a21\u62df\u2026\u2026~~\u867d\u7136\u8bf4\u6211\u8c03\u4e86\u597d\u4e45~~\n\n#### \u9996\u5148\uff0c\u9898\u610f\u8981\u7406\u89e3\u597d\uff0c\u9898\u610f\u6ca1\u7406\u89e3\u597d\uff0c\u5c31\u5c34\u5c2c\u4e86\u2026\u2026\uff08\u6211\u8fd9\u9898\u5c31\u662f\u8fd9\u6837\u7684qwq\uff09\n\n\u7ed9\u4f60\u4e00\u4e2a$n \u00d7 m$\u7684\u957f\u65b9\u5f62\u82b1\u751f\u5730\uff0c\u8ba9\u4f60\u5728\u89c4\u5b9a\u65f6\u95f4\u5185\u91c7\u6458\u5230\u6700\u591a\u7684\u82b1\u751f\uff0c\u6bcf\u79fb\u52a8\u4e00\u683c\u3001\u91c7\u6458\u4e00\u682a\u82b1\u751f\u3001\u4ece\u8def\u8fb9\u51fa\u53d1\u548c\u56de\u5230\u8def\u8fb9\u90fd\u9700\u8981\u4e00\u4e2a\u5355\u4f4d\u65f6\u95f4\u3002\n\n#### \u63a5\u4e0b\u6765\u8981\u597d\u597d\u60f3\u4e00\u4e0b\u601d\u8def\uff01\uff01\uff01\n\n\u6211\u7684\u601d\u8def\u5c31\u662f\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff08$priorityqueue$\uff09\u6309\u7167\u82b1\u751f\u6570\u76ee\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u5b58\u50a8\uff0c\u7136\u540e\u6bcf\u6b21\u53d6\u51fa\u961f\u5934\uff0c\u5224\u65ad\u662f\u5426\u80fd\u56de\u5230\u8def\u8fb9\uff0c\u5982\u679c\u53ef\u4ee5\uff0c\u5219\u5224\u65ad\u662f\u5426\u80fd\u5230\u8fbe\u4e0b\u4e00\u682a\u82b1\u751f\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u80fd\u5230\u8fbe\uff0c\u5219\u91cd\u590d\u5faa\u73af\u5224\u65ad\u6bcf\u4e00\u6b21\uff0c\u5426\u5219\u8f93\u51fa\u7b54\u6848\u3002\n\n#### \u63a5\u4e0b\u6765\u5c31\u662f\u4ee3\u7801\u5566QAQ\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <queue>\n#include <cmath>\n\nusing namespace std;\n\n#define MAXN 25\n\nstruct node\n{\n\tint x,y,v;\n\tnode (int x1,int y1,int v1)\n\t{\n\t\tx = x1;y = y1;v = v1;\n\t}\n\tbool operator <(const node &ft)const\n\t{\n\t\treturn v < ft.v;\n\t}\n};\npriority_queue<node> que;\nint n,m,t,val,lx,ly,lv,nx,ny,nv,nt,sum,tt,lt;\nint v[MAXN][MAXN];\n\nint main()\n{\n\tscanf(\"%d%d%d\", &n, &m, &t);\n\tfor (int i = 1 ; i <= n ; ++ i)\n\t{\n\t\tfor (int j = 1 ; j <= m ; ++ j)\n\t\t{\n\t\t\tscanf(\"%d\", &val);\n\t\t\tif (val) que.push(node(i,j,val));\n\t\t}\n\t}\n\tly = que.top().y;\n\twhile (que.size())\n\t{\n\t\tnode temp = que.top();\n\t\tque.pop();\n\t\tnx = temp.x;ny = temp.y;nv = temp.v;\n\t\ttt = (abs(nx - lx) + abs(ny - ly)) + 1;\n\t\tif (nt + tt + nx > t)\n\t\t{\n\t\t\tprintf(\"%d\", sum);\n\t\t\treturn 0;\n\t\t}\n\t\tif (nt + tt >= t)\n\t\t{\n\t\t\tprintf(\"%d\", sum);\n\t\t\treturn 0;\n\t\t}\n\t\tnt += tt;\n\t\tlx = nx;ly = ny;lv = nv;\n\t\tsum += nv;\n\t}\n\tprintf(\"%d\", sum);\n\treturn 0;\n}\n```",
        "postTime": 1553413602,
        "uid": 126669,
        "name": "BCZSX",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "# \u5148\u8bf4\u51e0\u53e5\u8bdd\n\u7b2c\u4e00\u6b21\u770b\u5230\u8fd9\u9053\u9898\u7684\u65f6\u5019\u611f\u89c9\u505a\u4e0d\u6765  \n\u65f6\u9694\u51e0\u4e2a\u6708\u4e4b\u540e, \u518d\u770b\u8fd9\u9053\u9898  \n\u539f\u6765\u8fd9\u4e48\u7b80\u5355\u3002\u3002\u3002  \n\n# [\u9898\u89e3(C++)](https://github.com/HoshinoTented/LuoGu/blob/master/src/P1086.hpp)\n\u4f60\u95ee\u4e3a\u4ec0\u4e48\u7528 `C++`?  \n\u90a3\u662f\u56e0\u4e3a\u3002\u3002\u3002  \n\u56e0\u4e3a\u661f\u91ce\u83dc  \n\u661f\u91ce\u5199\u4e0d\u52a8 `Haskell`  \n\u53ef\u4ee5\u4e86\u5427 (~~\u6577\u884d~~  \n```cpp\n//\n// Created by hoshino on 18-12-18.\n//\n\n#ifndef LUOGU_P1086_HPP\n#define LUOGU_P1086_HPP\n\n#include <bits/stdc++.h>\n\n// \u5750\u6807\u7c7b, \u7ee7\u627f\u4e86 std::pair, \u53ea\u662f\u591a\u52a0\u4e86\u4e00\u4e2a value \u6765\u8868\u793a\u82b1\u751f\u7684\u6570\u91cf\u800c\u5df2\nstruct position : public std::pair<int, int> {\n\tint value;\n\n\tposition(const int &x, const int &y, const int &value) : pair(x, y), value(value) {}\n};\n\n// \u5224\u65ad \u4ecepos\u56de\u5230\u8def\u8fb9 \u662f\u5426\u4f1a\u8d85\u65f6\nauto checkTimedOut(const position &pos, const int &tl) -> bool {\n\treturn pos.first + 1 <= tl;\n}\n\n// \u4ece from \u79fb\u52a8\u5230 to, \u8fd4\u56de\u5269\u4f59\u65f6\u95f4\nauto moveTo(const position &from, const position &to, const int &tl) -> int {\n\treturn tl - (std::abs(from.first - to.first) + std::abs(from.second - to.second));\n}\n\n// \u6458\u82b1\u751f: plants::\u82b1\u751f\u7684\u964d\u5e8f\u5e8f\u5217, it::\u5f53\u524d\u88ab\u91c7\u6458\u7684\u82b1\u751f, tl::\u5269\u4f59\u65f6\u95f4 -> \u5728\u6709\u9650\u65f6\u95f4\u4e2d\u80fd\u591f\u91c7\u96c6\u7684\u6700\u5927\u6570\u91cf\nauto pick(const std::vector<position> &plants, const std::vector<position>::const_iterator &it, const int &tl) -> int {\n\t// \u5224\u65ad\u662f\u5426\u8d85\u65f6, \u8fd9\u91cc\u7684 -1 \u662f\u52a0\u5165\u4e86\u91c7\u6458\u7684\u65f6\u95f4, \u4e0d\u7136\u6837\u4f8b 2 \u4f1a\u6302\u6389\n\tif (checkTimedOut(*it, tl - 1)) {\n    \t// \u65b0\u7684\u76ee\u6807\n\t\tauto newIt = it + 1;\n        \n        // \u8fd4\u56de\u5f53\u524d\u91c7\u96c6\u5230\u7684\u82b1\u751f \u52a0\u4e0a \u4e4b\u540e\u91c7\u96c6\u5230\u7684\u82b1\u751f\n\t\treturn it->value + pick(plants, newIt, moveTo(*it, *newIt, tl) - 1);\n\t} else return 0;\t// \u5982\u679c\u8d85\u65f6\u4e86\u76f4\u63a5\u8fd4\u56de0\n}\n\nauto main(int, char **) -> int {\n\tint m, n, tl;\t\t// \u5341\u5206\u6734\u7d20\u7684\u5b9a\u4e49\u53d8\u91cf\n\tstd::cin >> m >> n >> tl;\t\t// \u5341\u5206\u6734\u7d20\u7684\u8bfb\u5165\u6570\u636e\n\n\tstd::vector<position> plants;\t// \u5341\u5206\u6734\u7d20\u7684\u5b9a\u4e49\u53d8\u91cf\n\n\t// \u5341\u5206\u6734\u7d20\u7684\u8bfb\u5165\n\tfor (int i = 0; i < m; ++ i) {\n\t\tfor (int j = 0; j < n; ++ j) {\n\t\t\tint v;\n\t\t\tstd::cin >> v;\n\t\t\tif (v != 0) {\n\t\t\t\tplants.push_back(position(i, j, v));\n\t\t\t}\n\t\t}\n\t}\n\n\t// \u5bf9\u8bb0\u5f55\u7684\u82b1\u751f\u4f4d\u7f6e\u8fdb\u884c\u6392\u5e8f\n\tstd::sort(plants.begin(), plants.end(), [](const position &a, const position &b) { return a.value > b.value; });\n\n\t// \u6a21\u62df\u5e76\u8f93\u51fa\n\tstd::cout << pick(plants, plants.begin(), tl - plants[0].first - 1) << std::endl;\n\n\treturn 0;\n}\n\n#endif //LUOGU_P1086_HPP\n```\n\n# [\u9898\u89e3(Haskell)](https://github.com/HoshinoTented/LuoGu/blob/master/src/P1086.hs)\n```haskell\nimport Data.List\t\t-- \u5bfc\u5165 \u5217\u8868, \u56e0\u4e3a\u8981\u7528\u5230 sortBy\n\n-- \u5b9a\u4e49 \u4f4d\u7f6e\ndata Pos = Pos {\n  posX :: Int,\n  posY :: Int,\n  posValue:: Int\n  } deriving (Show)\n\n-- \u89e3\u6790\u4e00\u884c, \u661f\u91ce\u53ea\u80fd\u60f3\u5230\u8fd9\u79cd\u65b9\u6cd5\u4e86\u3002\u3002\nparseLine :: Int -> Int -> Int -> [String] -> [Pos]\nparseLine _ _ _ [] = []\nparseLine x n m (s:ss) = if n == m then [] else\n  let v = read s in\n    if v == 0 then call else\n      Pos x n (read s) : call\n  where\n    call = parseLine x (n + 1) m ss\n\n-- \u89e3\u6790\u77e9\u9635\nreadLines :: Int -> Int -> Int -> IO [Pos]\nreadLines y n m = if n == m then return [] else\n  ((++) <$> ((parseLine n 0 y) . words <$> getLine)) <*> readLines y (n + 1) m\n\n-- \u5224\u65ad\u662f\u5426\u8d85\u65f6(\u5305\u542b\u91c7\u6458) :: \u76ee\u6807\u82b1\u751f -> \u5269\u4f59\u65f6\u95f4 -> \u662f\u5426\u8d85\u65f6\ntimedOut :: Pos -> Int -> Bool\ntimedOut p tl = posX p + 1 > tl - 1\n\n-- \u6458\u82b1\u751f :: \u5f53\u524d\u82b1\u751f -> \u5269\u4f59\u82b1\u751f -> \u5269\u4f59\u65f6\u95f4 -> \u7ed3\u679c\npick :: Pos -> [Pos] -> Int -> Int\npick p [] tl = if timedOut p tl then 0 else posValue p\t\t-- \u611f\u89c9\u8fd9\u4e2a\u53ef\u4ee5\u7b80\u5316\u7684\u3002\u3002\npick p (t:ps) tl = if timedOut p tl then 0 else\n  posValue p + (pick t ps (moveTo - 1))\n  where\n    moveTo = tl - ((abs (posX p - posX t)) + (abs (posY p - posY t)))\t\t-- \u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u82b1\u751f\n\n-- \u7a0b\u5e8f\u5165\u53e3\nmain :: IO ()\nmain = do\n  [m, n, tl] <- (map read . words) <$> getLine :: IO [Int]\t-- \u8bfb m n \u548c k\n  ls <- readLines n 0 m\t\t-- \u8bfb\u53d6\u82b1\u751f\u5730\u5730\u56fe\n\n\t-- \u6392\u5e8f\u5e76\u8f93\u51fa\u7ed3\u679c\n  let (p:ps) = sortBy (\\a b -> if posValue a > posValue b then LT else GT) ls in print $ pick p ps (tl - posX p - 1)\n\n  return ()\t\t-- \u8fd4\u56de IO ()\n```\n# \u6700\u540e\n\u5176\u5b9e\u8fd9\u9053\u9898\u662f\u4e00\u9053\u975e\u5e38\u7b80\u5355\u7684\u6a21\u62df...  \n~~(\u5bf9\u4e8e\u661f\u91ce\u6765\u8bf4\u975e\u5e38\u7b80\u5355~~  ",
        "postTime": 1545151188,
        "uid": 124166,
        "name": "HoshinoTented",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "## \u5148\u8bb2\u9898\u76ee\n\n\u8fd9\u4e00\u9053\u9898\u7684\u4e3b\u8981\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a\n\n1.\u9898\u76ee\u89c4\u5b9a\u7528\u8d2a\u5fc3\uff01\u4e0d\u662f\u6c42\u89c4\u5b9a\u65f6\u95f4\u5185\u6700\u5927\u91c7\u6458\u603b\u6570\uff01\n\n2.\u6ce8\u610f\u91c7\u6458\u4e00\u68f5\u82b1\u751f\u9700\u89811\u5355\u4f4d\u65f6\u95f4\uff01~~\uff08\u88ab\u5361\u4e86\u534a\u4e2a\u5c0f\u65f6\u7684\u6211\u7b11\u7b11\uff09~~\n\n\u8fd9\u8bf4\u660e\uff0c\u770b\u9898\u5728NOIP\u4e2d\u975e\u5e38\u91cd\u8981\u3002\n\n\u6a21\u62df\u561b\uff0c\u4e0d\u591a\u8bf4\u4e86\uff0c\u770b\u6ce8\u91ca\u3002\n\n```cpp\n#include<bits/stdc++.h>\t//\u4e07\u80fd\u5934\u771f\u7684\u5f88\u597d\u7528\uff01\nusing namespace std;\nint nowx,nowy,nowval;\t  //\u6a21\u62df\u7684\u65f6\u5019\u7684\u5750\u6807\uff0c\u6700\u540e\u4e00\u4e2a\u4e48\uff0c\uff0c\u597d\u5427\u6211\u61d2\uff0c\u4e0d\u60f3\u5f00\u4e00\u4e2a\u6570\u7ec4\u5b58\u56fe\u2026\u2026\nint length;\t\t\t\t//\u4fdd\u5b58\u6240\u6709\u6709\u82b1\u751f\u7684\u690d\u682a\u7684\u4e2a\u6570\nint m,n,k;\nint ans;\t\t\t\t   //\u7b54\u6848\nstruct node\t\t\t\t//\u7ed3\u6784\u4f53\u5b58\u82b1\u751f\n{\n\tint x,y,val;\t\t   //\u5750\u6807\u548c\u82b1\u751f\u6570\n} que[400];\nbool cmp(node x,node y)\t//\u6392\u5e8f\u51fd\u6570\uff0c\u82b1\u751f\u591a\u7684\u6392\u524d\u9762\n{\n\treturn x.val>y.val;\n}\nint main()\n{\n\tios::sync_with_stdio(0);\n\tcin>>m>>n>>k;\n\tfor(int i=1; i<=m; i++)\n\t\tfor(int j=1; j<=n; j++)\n\t\t{\n\t\t\tcin>>nowval;\n\t\t\tif(nowval)\t  //\u4e0d\u4e3a0\n\t\t\t{\n\t\t\t\tque[length].x=i;\n\t\t\t\tque[length].y=j;\n\t\t\t\tque[length++].val=nowval\uff1b\n\t\t\t}\n\t\t}\n\tsort(que,que+length,cmp);\n\tint i=0;\n\tnowy=que[0].y;\t\t  //\u53ef\u4ee5\u4ece\u8def\u8fb9\u6700\u9760\u8fd1\u7b2c\u4e00\u9897\u82b1\u751f\u7684\u5730\u65b9\u5230\u7530\u91cc\u53bb\n\twhile(k>abs(que[i].x-nowx)+abs(que[i].y-nowy)&&i<length)\n\t{\n\t\tif(k<nowx)\t\t  //\u6ca1\u65f6\u95f4\u51fa\u6765\u4e86\n\t\t\tbreak;\n\t\tk-=(abs(que[i].x-nowx)+abs(que[i].y-nowy)+1);\n\t\tnowx=que[i].x;\n\t\tnowy=que[i].y;\n\t\tans+=que[i].val;\n\t\ti++;\t\t\t\t//\u63a5\u7740\u91c7\u82b1\u751f\n\t}\n\tk-=nowx;\t\t\t\t//\u8dd1\u51fa\u6765\n\tif(k<0)\t\t\t \t//\u65f6\u95f4\u4e0d\u591f\n\t\tans-=que[i-1].val;  //\u5012\u9000\u56de\u4e0a\u4e00\u9897\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1544350479,
        "uid": 133720,
        "name": "MKMASA",
        "ccfLevel": 5,
        "title": "P1086"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u6211\u6700\u5f00\u59cb\u6ca1\u8bfb\u61c2\u9898\u76ee\uff1f\n\n~~\u4e00\u5b9a\u662f\u6211\u592a\u84bb\u4e86~~\n\n\u539f\u6765\u6bcf\u6b21\u53ea\u80fd\u8d70\u4e00\u683c\u554a\uff08\u604d\u7136\u5927\u609f\u8138\uff09\n\n\u4ee5\u6b64\u7ed9\u5927\u5bb6\u79d1\u666e\u67d0\u4e9b\u795e\u5947\u7684\u4e1c\u897f\uff0cdalao\u5c31\u4e0d\u9700\u8981\u770b\u4e86\n\n\u89c1\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\\\\\u795e\u5947\u7684\u4e07\u80fd\u5934\n#define for(i,a,b) for(i=a;i<b;i++)\\\\\u795e\u5947\u7684define\n```\n\u7ed9\u5927\u5bb6\u79d1\u666e\u4e00\u4e0bdefine\u7684\u7528\u6cd5\uff1a\n\n\u5728\u8fd9\u91ccfor(i,a,b)\u6307\u5728for\u4e2d\u586b\u5165\u4e00\u4e2a\u53d8\u91cf\u548c\u4e24\u4e2a\u5e38\u6570\u6216\u53d8\u91cf\uff0c\u4e0efor(i=a;i<b;i++)\u7b49\u4ef7\n\n\u901a\u4fd7\u5730\u8bf4\u5c31\u662f\u5b9a\u4e49for(i,a,b)\u4e3afor(i=a;i<b;i++)\n\ndefine\u7684\u7528\u6cd5\u4e3b\u8981\u5728\u4e8e\u5c06\u4e00\u4e9b\u4ee3\u7801\u91cc\u591a\u6b21\u51fa\u73b0\u7684\u8bed\u53e5\u7528\u53e6\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u7b80\u77ed\u8bed\u53e5\u4ee3\u66ff\uff0c\u4f7f\u5199\u4ee3\u7801\u7684\u65f6\u5019\u65b9\u4fbf\n\n\u67d0\u4e9bdalao\u559c\u6b22\u7528define\u6076\u641e\n\n\u5982#define + -\n\n\u8fd8\u6709\u89c1\u8fc7dalao\u7528define\u628a\u4ee3\u7801\u5199\u6210\u586b\u7a7a\u9898\u7684\u5f62\u5f0f\u8fd8\u80fdAC\n\n\u8a00\u5f52\u6b63\u4f20\n```cpp\nusing namespace std;\\\\\u795e\u5947\u7684\u547d\u540d\u7a7a\u95f4\nint m,n,k,i,j,l=0,s=0,a[25][25],f[405],x,y,p;\nbool q;\\\\\u795e\u5947\u7684\u5b9a\u4e49\u53d8\u91cf\nint main()\\\\\u795e\u5947\u7684\u4e3b\u51fd\u6570\n{\n    scanf(\"%d%d%d\",&m,&n,&k);\\\\\u795e\u5947\u7684\u8f93\u5165\n```\n\u636e\u8bf4scanf\u548cprintf\u6bd4cin\u548ccout\u5feb32\u500d\n```cpp\n    k-=2;\\\\\u51fa\u5165\u82b1\u751f\u7530\u7684\u6d88\u8017\n    for(i,0,m)\n    for(j,0,n)\\\\\u89c1\u4e0a\u6587\n    {\n        scanf(\"%d\",&a[i][j]);\\\\\u53c8\u662f\u795e\u5947\u7684\u8f93\u5165\n        if(a[i][j]>0)\n        f[l]=a[i][j],l++;\\\\\u7edf\u8ba1\u957f\u6709\u82b1\u751f\u7684\u690d\u682a\n    }\n    sort(f,f+l,greater<int>());\\\\\u795e\u5947\u7684\u6392\u5e8f\u51fd\u6570sort\n```\nsort\uff0cSTL\u51fd\u6570\u5e93\u4e2d\u7684\u6392\u5e8f\u51fd\u6570\n\n\u4e00\u822c\u7528\u6cd5\u4e3asort(a,a+n)\n\n\u5176\u4e2da\u4e3a\u9700\u8981\u6392\u5e8f\u7684\u6570\u7ec4\uff0cn\u4e3a\u9700\u8981\u6392\u5e8f\u7684\u4e2a\u6570\n\n\u5f53\u7136\u5982\u679c\u6709\u6548\u6570\u636e\u662f\u4ece1\u5f00\u59cb\u7684\uff0c\u90a3\u4e48\u8981sort(a+1,a+n+1)\n\n\u5728\u51fd\u6570\u540e\u65b9\u52a0\u5165greater<int>()\u53ef\u4ee5\u4ece\u9ed8\u8ba4\u7684\u5347\u5e8f\u6539\u4e3a\u964d\u5e8f\n  \n\u5f53\u7136\u81ea\u5df1\u5199\u7684\u51fd\u6570\u4e5f\u53ef\u4ee5\u63d2\u5165\uff0c\u5728\u8fd9\u65b9\u9762\u53ef\u4ee5\u6709\u8bb8\u591a\u62d3\u5c55\n```cpp\n    q=false;\\\\\u7528\u4e8e\u964d\u4f4e\u4e00\u4e1d\u5e76\u6ca1\u6709\u4ec0\u4e48\u5375\u7528\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n    for(i,0,m)\n    {\n        for(j,0,n)\n        {\n            if(f[0]==a[i][j])\n            {\n                q=true;\n                break;\n            }\n        }\n        if(q)\n        break;\n    }\n    if(2*i+2<=k)\\\\\u5982\u679c\u65f6\u95f4\u8db3\u591f\u6458\u8fd9\u682a\u82b1\u751f\u540e\u8fd4\u56de\n    {\n        k-=i+1;\n        s+=a[i][j];\n        x=i;\n        y=j;\n        p=1;\n    }\n    else\n    {\n        printf(\"0\");\n        return 0;\n    }\n    while(p<l)\n    {\n        q=false;\n        for(i,0,m)\n        {\n            for(j,0,n)\n            {\n                if(f[p]==a[i][j])\n                {\n                    q=true;\n                    break;\n                }\n            }\n            if(q)\n            break;\n        }\n        if(abs(x-i)+abs(y-j)+i+1<=k)\\\\\u5982\u679c\u65f6\u95f4\u8db3\u591f\u6458\u8fd9\u682a\u82b1\u751f\u540e\u8fd4\u56de\n        {\n            k-=abs(x-i)+abs(y-j)+1;\\\\\u7b97\u8ddd\u79bb\n            s+=a[i][j];\\\\\u52a0\u4e0a\u91c7\u7684\u82b1\u751f\n            x=i;\n            y=j;\n            p++;\n        }\n        else\n        {\n            printf(\"%d\",s);\\\\\u5982\u679c\u4e0d\u591f\u5c31\u8fd4\u56de\uff08\u8f93\u51fa\u4e4b\u524d\u6458\u5230\u7684\u82b1\u751f\uff09\n            return 0;\\\\\u7ed3\u675f\u7a0b\u5e8f\n        }\n    }\n    printf(\"%d\",s);\\\\\u6b64\u65f6\u4e00\u5b9a\u91c7\u5b8c\u4e86\n    return 0;\n}\n```\n\u8bf7\u8ba4\u51c6\u56fe\u7075\u51af\u8bfa\u4f9d\u66fc\u724c\u9632\u4f2a\u6807\u8bc6\\\\",
        "postTime": 1538899752,
        "uid": 111741,
        "name": "\u5854\u7f57\u5170",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u770b\u8d77\u6765\u5f88\u96be    \n\u6ce8\u610f\u770b\u8fd9\u53e5\u8bdd\uff1a\n**\u4f60\u5148\u627e\u51fa\u82b1\u751f\u6700\u591a\u7684\u690d\u682a\uff0c\u53bb\u91c7\u6458\u5b83\u7684\u82b1\u751f\uff1b\u7136\u540e\u518d\u627e\u51fa\u5269\u4e0b\u7684\u690d\u682a\u91cc\u82b1\u751f\u6700\u591a\u7684\uff0c\u53bb\u91c7\u6458\u5b83\u7684\u82b1\u751f**\n\n\u601d\u8def\uff1a\u8f93\u5165\u7684\u65f6\u5019\u5224\u65ad\u6bcf\u4e00\u4e2a\u70b9\u662f\u5426\u6709\u82b1\u751f\uff0c\u6709\u7684\u8bdd\u5c31\u8bb0\u4e0b\u6765   \n\u8bb0\u4e0b\u5750\u6807\u3001\u82b1\u751f\u6570   \n\u7136\u540e\u964d\u5e8f\u6392\u5e8f    \n\u4ece\u8def\u4e0a\u8df3\u5230\u7b2c\u4e00\u4e2a\u70b9\u6240\u9700\u65f6\u95f4\u5c31\u7b49\u4e8e\u5b83\u7684\u7eb5\u5750\u6807(\u4ece1\u5f00\u59cb)\n\u6700\u540e\u8df3\u56de\u8def\u4e0a\u4e5f\u4e00\u6837;    \n\u4ece\u67d0\u4e2a\u70b9\u5230\u4e0b\u4e00\u4e2a\u70b9\u5148\u8ba1\u7b97\u51fa\u8fd9\u4e2a\u70b9\u5230\u4e0b\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb\u9700\u8981\u591a\u4e45\n\u516c\u5f0f**abs(y2-y1)+abs(x2-x1)**   \n\u7136\u540e\u5224\u65ad\u6458\u4e0b\u8fd9\u4e2a\u70b9\u7684\u82b1\u751f\u540e\u8fd8\u80fd\u4e0d\u80fd\u8df3\u56de\u53bb,\u4e5f\u5c31\u662f\u5224\u65ad\u5f53\u524d\u6240\u7528\u65f6\u95f4+1+\u8df3\u56de\u53bb\u7684\u65f6\u95f4\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e\u89c4\u5b9a\u65f6\u95f4;\n```\nimport java.util.ArrayList;\nimport java.util.Comparator;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n    static Scanner sc = new Scanner(System.in);\n\n    public static void main(String[] args) {\n        List<int[]> list = new ArrayList<>();\n        //\u8f93\u5165\n        int m = sc.nextInt();\n        int n = sc.nextInt();\n        int tt = sc.nextInt();\n        //\u6ce8\u610f\u6211\u662f\u6839\u636e\u56fe\u4e2d\u6765\u5199\u7684\uff0c\u4ece1\u5f00\u59cb\n        for (int i = 1; i <= m; i++) {\n            for (int j = 1; j <= n; j++) {\n                int k = sc.nextInt();\n                if (k > 0) {\n                    int[] p = { i, j, k, 0 };//\u8bb0\u5f55\u5750\u6807\u3001\u82b1\u751f\u6570\n                    list.add(p);\n                }\n            }\n        }\n        \n        //\u6392\u5e8f\n        list.sort(new Comparator<int[]>() {\n            @Override\n            public int compare(int[] o1, int[] o2) {\n                if (o1[2] > o2[2]) {\n                    return -1;\n                } else if (o1[2] < o2[2]) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            }\n\n        });\n        \n        \n        int ans = 0;\n        //\u7b2c\u4e00\u4e2a\u6bd4\u8f83\u7279\u6b8a\u6240\u4ee5\u5355\u72ec\u7b97,\u56e0\u4e3a\u4ece\u8def\u8fb9\u5230\u7b2c\u4e00\u4e2a\u7684\u65f6\u95f4\u7b49\u4e8e\u7eb5\u5750\u6807\u7684\u503c\n        list.get(0)[3] = list.get(0)[0];\n        if (tt - list.get(0)[3] > list.get(0)[0]) {\n            ans += list.get(0)[2];\n            list.get(0)[3] += 1;\n        }\n        \n        for (int i = 1; i < list.size(); i++) {\n        \t//\u4ece\u4e0a\u4e00\u4e2a\u70b9\u83b7\u53d6\u5f53\u524d\u6240\u7528\u7684\u65f6\u95f4\n            int time = list.get(i - 1)[3];\n            int x1 = list.get(i - 1)[0];\n            int y1 = list.get(i - 1)[1];\n            int x2 = list.get(i)[0];\n            int y2 = list.get(i)[1];\n            int k = list.get(i)[2];\n            //\u53bb\u5f80\u4e0b\u4e00\u4e2a\u70b9\u9700\u8981\u7684\u65f6\u95f4\n            time += Math.abs(y2 - y1) + Math.abs(x2 - x1);\n            //\u8fd9\u91cc\u9700\u8981\u52a0\u4e0a\u91c7\u6458\u7684\u65f6\u95f4\n            if (time + x2 + 1 > tt) {\n                break;\n            }\n            ans += k;\n            time += 1;//\u91c7\u6458\u9700\u89811\u4e2a\u5355\u4f4d\u65f6\u95f4\n            list.get(i)[3] = time;//\u7ed9\u4e0b\u4e00\u4e2a\u70b9\u83b7\u53d6\n        }\n        \n        System.out.println(ans);\n    }\n}\n```",
        "postTime": 1526458460,
        "uid": 84041,
        "name": "XLwn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u6b64\u9898\u53ef\u4ee5\u7528dfs\u6765\u505a\u3002\n\n\u601d\u8def\uff1a\uff08\u5177\u4f53\u5b9e\u73b0\u89c1\u4ee3\u7801\uff09\n\n\u9996\u5148\u627e\u51fa\u6700\u5927\u7684\u82b1\u751f\u70b9\uff0c\u4ece\u8fd9\u4e2a\u5730\u65b9\u627e\u7b2c\u4e8c\u5927\u7684\u82b1\u751f\u70b9\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u8fb9\u754c\u6761\u4ef6\u662f\u8fd9\u513f\u6ca1\u6709\u82b1\u751f\u6216\u91c7\u8fd9\u4e00\u68f5\u65f6\u95f4\u4e0d\u591f\u7528\u3002\n\nAc\u4ee3\u7801\uff1a\n```cpp\n//writer\uff1aSakura\n//problem\uff1a\u82b1\u751f\u91c7\u6458\n//id\uff1aP1086\n//from\uff1a\u6d1b\u8c37 \n\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <set>\n#include <map>\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\n\nint m,n,k,ans=0;\nint a[25][25];\n\nvoid dfs(int x,int y,int time){\n\tint Max=-(1<<30),nx,ny;\n    //Max\u6700\u5927\u7684\u82b1\u751f\u70b9\n    //nx\u6700\u5927\u82b1\u751f\u70b9\u7684x\u5750\u6807\n    //ny\u6700\u5927\u82b1\u751f\u70b9\u7684y\u5750\u6807\n\tfor(int i=1;i<=m;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(a[i][j]>Max){\n\t\t\t\tMax=a[i][j];\n\t\t\t\tnx=i;\n\t\t\t\tny=j;\n                //\u66f4\u65b0\n\t\t\t}\n\t\t}\n\t}\n\tif(y==0)y=ny;//\u8fb9\u754c\n\tint nt=abs(nx-x)+abs(ny-y)+nx+1;\n    //\u5982\u679c\u91c7\u8fd9\u4e00\u68f5\u82b1\u8d39\u7684\u65f6\u95f4\n\t//printf(\"nt=%d\\n\",nt);\n\tif(time<nt || a[nx][ny]==0)return;\n    //\u8fb9\u754c\u8fd4\u56de\u6761\u4ef6\n\telse{\n\t\tans+=a[nx][ny];\n        //\u53ef\u4ee5\u9009\u62e9\uff0cans\u66f4\u65b0\n\t\ta[nx][ny]=0;\n\t\tdfs(nx,ny,time-abs(nx-x)-abs(ny-y)-1);\n\t}\n}\n\nint main(){\n\tfreopen(\".in\",\"r\",stdin);\n\tfreopen(\".out\",\"w\",stdout);\n\tscanf(\"%d %d %d\",&m,&n,&k);\n\tfor(int i=1;i<=m;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t}\n\t}\n\tdfs(0,0,k);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n```\n\u4ee3\u7801\u5982\u6709\u4e0d\u8be6\u7ec6\u5904\uff0c\u656c\u8bf7\u79c1\u4fe1\u8be2\u95ee\u3002\n\n~~\u8bb0\u5f97\u5220freopen\u54e6~~~\n",
        "postTime": 1519471322,
        "uid": 87520,
        "name": "\u685cSakura",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "    \n      \n```cpp\n    #include<bits/stdc++.h>  \n    using namespace std;  \n    const int Max_Size=20+5;//\u5b9a\u4e49\u5e38\u91cfMax_Size  \n    struct Node//\u7ed3\u6784\u4f53 \n    { int x,y,Peanuts;}//\u5b9a\u4e49\u82b1\u751f\u7684x\u5750\u6807\uff0cy\u5750\u6807\u548c\u6bcf\u682a\u82b1\u751f\u7684\u6570\u91cf \n    Farm[Max_Size*Max_Size];  \n    int Row,Column,Time,Max_Peanuts=0;   \n    bool Compare(const Node &A,const Node &B)//\u6bd4\u8f83\u7ed3\u6784\u4f53A\u548c\u7ed3\u6784\u4f53B \n    { return A.Peanuts>B.Peanuts;}//\u8fd4\u56deA\u7ed3\u6784\u4f53\u4e0a\u7684\u82b1\u751f\u6570\u91cf\u5927\u4e8eB\u7ed3\u6784\u4f53\u4e0a\u7684\u82b1\u751f\u6570\u91cf \n    int main()  \n    {  \n      int i,j,Count=0,Peanuts;\n      scanf(\"%d%d%d\",&Row,&Column,&Time);  \n      for (i=1;i<=Row;i++)\n       for (j=1;j<=Column;j++)\n        {  \n         scanf(\"%d\",&Peanuts);\n         Farm[++Count].x=i;Farm[Count].y=j;  \n         Farm[Count].Peanuts=Peanuts;  \n        }  \n      sort(Farm+1,Farm+Count+1,Compare);//\u6392\u5e8f  \n      if (Farm[1].x+Farm[1].x+1>=Time){ printf(\"0\\n\"); return 0;}//\u4e0d\u53ef\u80fd\u6210\u7acb\uff0c\u8f93\u51fa0\uff0c\u76f4\u63a5\u7ed3\u675f  \n      Time-=Farm[1].x; Time--;//\u4ece\u8def\u8fb9\u5230\u82b1\u751f\u5730\u7684\u65f6\u95f4  \n      int Now=1,Now_Time; Max_Peanuts=Farm[Now].Peanuts;//\u5b9a\u4e49\u7528\u53bb\u7684\u65f6\u95f4\u3002\u82b1\u751f\u7684\u6700\u5927\u503c=\u6458\u5230\u7684\u82b1\u751f\u6570\u91cf  \n      while (true)//\u6c38\u771f\u5faa\u73af \n       {  \n        if (Time==0) break;//\u5982\u679c\u65f6\u95f4\u5230\uff0c\u505c\u6b62\u91c7\u6458  \n        Now_Time=abs(Farm[++Now].x-Farm[Now-1].x)+abs(Farm[Now].y-Farm[Now-1].y);//\u6458\u4e00\u9897\u82b1\u751f\u7528\u53bb\u7684\u65f6\u95f4\u662f\u4e24\u4e2a\u7edd\u5bf9\u503c\u76f8\u52a0\u7684\u548c  \n        if (Time>=(Now_Time+1)+(Farm[Now].x))//\u5982\u679c\u65f6\u95f4\u8db3\u591f\u5c31\u53bb\u91c7\u6458\u90a3\u9897\u82b1\u751f \n          {Time-=Now_Time; Time--;//\u5269\u4f59\u65f6\u95f4\u51cf\u53bb\u5230\u8fd9\u9897\u82b1\u751f\u7684\u65f6\u95f4\u548c\u6458\u8fd9\u9897\u82b1\u751f\u7684\u65f6\u95f4  \n           Max_Peanuts+=Farm[Now].Peanuts;//\u7528\u73b0\u5728\u7684\u82b1\u751f\u52a0\u4e0a\u91c7\u5230\u7684\u82b1\u751f  \n          }  \n        else break;//\u65f6\u95f4\u4e0d\u591f\u5c31\u7ed3\u675f\u5faa\u73af  \n       }  \n      printf(\"%d\\n\",Max_Peanuts);  \n      return 0;  \n}\n```",
        "postTime": 1513992578,
        "uid": 52384,
        "name": "\u9648\u6893\u71a0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u8fd9\u9898\u601d\u8def\u6709\u5f88\u591a\uff0c\u6700\u5927\u4e00\u4e2a\u56f0\u96be\u662f\u6392\u5e8f\u3002\n\n\n\u57fa\u672c\u601d\u8def\uff1a\u5c06\u82b1\u751f\u7684\u5750\u6807\u8fde\u540c\u82b1\u751f\u6570\u91cf\u4e00\u8d77\u6392\u5e8f\uff0c\u7136\u540e\u6309\u4ece\u5927\u5230\u5c0f\u904d\u5386\u5e76\u5224\u65ad\u3002\n\n\n\u5e38\u7528\u7684`vector<int>`\u53ef\u4ee5\u7528`sort(a.begin(), a.end())`\u65b9\u4fbf\u6392\u5e8f\uff0c\u7136\u800c\u8fd9\u91cc\u6bd4\u8f83\u590d\u6742\uff0c\u662f`struct {int x, y, num;}`\uff0c\u6392\u5e8f\u7684\u8bdd\u8981\u7528\u4eff\u51fd\u6570\uff0c\u5c31\u6bd4\u8f83\u70e6\uff0c\u6709\u4ec0\u4e48\u529e\u6cd5\u53ef\u4ee5\u538b\u7f29\u5462\uff1f\n\n\n\u7b54\u6848\u5c31\u662f\u7528\u4f4d\u8fd0\u7b97\uff01\u53ef\u4ee5\u770b\u5230\uff0cx\u548cy\u662f\u4e0d\u8d85\u8fc720\uff0cnum\u4e0d\u8d85\u8fc7500\uff0c\u90a3\u4e09\u8005\u5b8c\u5168\u53ef\u4ee5\u5728\u4e00\u4e2aint\u7684\u8303\u56f4\u5185\u8868\u793a\u51fa\u6765\u3002\n\n\n\u5148\u5199\u51fa\u4f4d\u8fd0\u7b97\u7684\u5e38\u7528\u5b8f\uff08win32\u4e2d\u6709\uff09\uff1a\n\n\n```cpp\n#define MAKEWORD(a, b)      ((WORD)(((BYTE)(((DWORD_PTR)(a)) & 0xff)) | ((WORD)((BYTE)(((DWORD_PTR)(b)) & 0xff))) << 8))\n#define MAKELONG(a, b)      ((LONG)(((WORD)(((DWORD_PTR)(a)) & 0xffff)) | ((DWORD)((WORD)(((DWORD_PTR)(b)) & 0xffff))) << 16))\n#define LOWORD(l)           ((WORD)(((DWORD_PTR)(l)) & 0xffff))\n#define HIWORD(l)           ((WORD)((((DWORD_PTR)(l)) >> 16) & 0xffff))\n#define LOBYTE(w)           ((BYTE)(((DWORD_PTR)(w)) & 0xff))\n#define HIBYTE(w)           ((BYTE)((((DWORD_PTR)(w)) >> 8) & 0xff))\n```\n\n\u7136\u540e\u5728\u5904\u7406\u8f93\u5165\u65f6\uff1a\n\n\n```cpp\nif (n > 0)\n{\n    arr[i][j] = n;\n    seeds.push_back(MAKELONG(MAKEWORD(i, j), n));\n}\n```\n\n\u8fd9\u91cc\u4e00\u4e2along\u5c31\u5b58\u4e86\uff1a i(1B) | j(1B) | n(2B) -> \u9ad8\u4f4d\uff1b\n\n\u63a5\u4e0b\u6765\u53ea\u8981\u6392\u5e8f\uff1a`sort(seeds.rbegin(), seeds.rend());`\u975e\u5e38\u7b80\u5355\u3002\u6ce8\u610f\uff0c\u8fd9\u91cc\u8981\u601d\u8003i,j,n\u5728\u4e00\u4e2along\u4e2d\u7684\u6392\u653e\u987a\u5e8f\uff0c\u4e3a\u4ec0\u4e48n\u8981\u653e\u5728\u9ad8\u4f4d\uff0c\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u8981\u5bf9n\u6392\u5e8f\uff0c\u800ci\u548cj\u662f\u6b21\u8981\u7684\u3002\n\n\n\n\u600e\u4e48\u53bb\u53d6\u51fa\u5462\uff1f\n\n\n```cpp\n#define GET_X(x) (LOBYTE(LOWORD(x)))\n#define GET_Y(x) (HIBYTE(LOWORD(x)))\n#define GET_N(x) (HIWORD(x))\n```\n\n\u540e\u9762\u5c31\u5927\u540c\u5c0f\u5f02\u4e86\uff1a\n\n\n```cpp\nfor (/*\u5bf9seeds\u5faa\u73af*/)\n{\n    int x1 = GET_X(seeds[i]);//\u4e0b\u4e2a\u70b9\u5750\u6807\n    int y1 = GET_Y(seeds[i]);\n    int dist = DISTANCE(x, y, x1, y1);//\u6c42\u8ddd\u79bb\n    int goto_next_time = DISTANCE(x, y, x1, y1) + 2 + x1;//\u5224\u65ad\u80fd\u5426\u53d6\u5f97\u4e0b\u4e2a\u82b1\u751f\u5e76\u8fd4\u56de\n    if (goto_next_time > elapse)\n        break;//\u6765\u4e0d\u53ca\u5c31\u9000\u51fa\n    count += GET_N(seeds[i]);//\u52a0\u4e0a\u53d6\u5f97\u7684\u82b1\u751f\n    elapse -= dist + 1;//\u51cf\u6389\u7528\u53bb\u7684\u65f6\u95f4\n    x = x1;//\u66f4\u65b0\u5750\u6807\n    y = y1;\n}\n```",
        "postTime": 1512978462,
        "uid": 74413,
        "name": "bajdcc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u672c\u4eba\u7b2c\u4e00\u6b21\u9898\u89e3\u5199\u4e86\u597d\u4e45\uff0c\u5e94\u8be5\u633a\u5bb9\u6613\u770b\u61c2\u7684\uff0c\u6c42\u8fc7QAQ\n\n\u672c\u4eba\u4e60\u60ef\uff0c\u53d8\u91cf\u540d\u7528\u82f1\u8bed\u7ffb\u8bd1~~\n\n\u56e0\u4e3a\u4ee5\u524d\u7ecf\u5e38\u770b\u4e0d\u61c2\u53d8\u91cf\u4ee5\u81f3\u4e8e\u770b\u4e0d\u61c2dalao\u4eec\u7684\u871c\u6c41\u4ee3\u7801\u6240\u4ee5\u5c31\u6709\u4e86\u8fd9\u4e2a\u4e60\u60ef~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<deque>\n#include<algorithm>\n#include<cmath>//\u5934\u6587\u4ef6~~ \nusing namespace std;\nstruct field//field\u610f\u601d\u662f\u7530\uff0c\u50a8\u5b58\u6b64\u5730\u82b1\u751f\u4ee5\u53ca\u5750\u6807~~ \n{\n    int x;\n    int y;\n    int number;\n}storage;//storage\u610f\u601d\u662f\u50a8\u5b58\uff0c\u7528\u6765\u7f13\u5b58\u6570\u636e~ ~ \ndeque <field> que;//\u58f0\u660e\u961f\u5217 ~~ \nint line,hight,time,sumpi;//\u884c\u6570\u5217\u6570\u65f6\u95f4\u4ee5\u53casumpi\uff1a\u82b1\u751f\u603b\u6570~~ \nbool can_back(field a)//\u5224\u65ad\u80fd\u5426\u4ece\u8fd9\u4e2a\u82b1\u751f\u56de\u53bb~~~ \n{\n    return time>=(a.y-1);\n}\nint timm(field a,field b)//\u8ba1\u7b97\u4ece\u4e00\u4e2a\u70b9\u5230\u53e6\u5916\u4e00\u4e2a\u70b9\u7684\u65f6\u95f4~~ \n{\n    return abs(a.x-b.x)+abs(a.y-b.y);\n}\nint main()\n{\n    cin>>line>>hight>>time; \n    time-=2;//\u4ece\u8def\u8fb9\u56de\u53bb\u7684\u65f6\u95f4\u51cf\u53bb~~~~ \n    for(int i=1;i<=line;i++)\n        for(int j=1;j<=hight;j++)\n        {\n            cin>>storage.number;\n            storage.x=j;\n            storage.y=i;\n            que.push_back(storage);\n```\n}//\u8f93\u5165\uff0c\u8fdb\u961f\u5217~~~\n```cpp\n    for(int i=que.size()-1;i>=1;i--)\n    {\n        for(int j=0;j<i;j++)\n        {\n            if(que[j].number<que[j+1].number)\n                swap(que[j],que[j+1]);\n        }\n```\n}//\u672c\u6765\u7528sort\u7684\u4f46\u662fsort\u83ab\u540d\u70b8\u4e86\uff0c\u53ea\u80fd\u624b\u52a8\u5192\u6ce12333~~\n```cpp\n    time-=(que[0].y);//\u7b2c\u4e00\u4e2a\u82b1\u751f\u7684\u65f6\u95f4~~~ \n    sumpi+=que[0].number;//\u52a0\u4e0a\u82b1\u751f~~ \n    if(time>0&&can_back(que[0]))//\u65f6\u95f4\u5145\u88d5\u5e76\u4e14\u80fd\u4ece\u7b2c\u4e00\u4e2a\u70b9\u8fd4\u56de\uff0c\u5c31\u7ee7\u7eed \n    {\n        while(time>0)//\u6709\u65f6\u95f4\u7684\u8bdd~~ \n        {\n            time-=timm(que[0],que[1])+1;//\u5230\u4e0b\u4e00\u4e2a\u70b9\uff0c\u5e76\u4e14\u6458\u82b1\u751f~~~ \n            if(time>0&&can_back(que[1]))//\u80fd\u56de\u53bb\u7684\u8bdd\u82b1\u751f\u8fdb\u53e3\u888b~~~~ \n            {\n                sumpi+=que[1].number;\n                que.pop_front();//\u628a\u7b2c\u4e00\u4e2a\u70b9\u5f39\u51fa\u6765\uff0c\u53cd\u590d\u5904\u7406~~ \n            }\n            else break; \n        }\n    }\n    else sumpi=0;//\u7b2c\u4e00\u4e2a\u90fd\u6458\u4e0d\u4e86\u5c31\u53e3\u888b\u7a7a\u7a7a\u5982\u4e5f~~ \n    cout<<sumpi;//\u8f93\u51fa~~ \n}\n\n```",
        "postTime": 1512453701,
        "uid": 58510,
        "name": "AD_KOISHI",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u5148\u8bf4\u8bf4\u5bf9\u697c\u4e0b\u60f3\u6cd5\u7684\u7406\u89e3\n\n\u9898\u76ee\u5e94\u8be5\u662f\u6307\u4ece\u8df3\u4e0b\u53bb\u5f00\u59cb\u8ba1\u65f6\uff0c\u5e76\u6ca1\u6709\u8bf4\u5728\u4e0a\u9762\u8d70\u4e0d\u7528\u65f6\u95f4\uff0c\u8fd8\u662f\u8001\u8001\u5b9e\u5b9e\u505a\u5427\n\n\u601d\u8def\uff1a\u5148\u5c06\u70b9\u6309\u7167\u82b1\u751f\u4e2a\u6570\u6392\u5e8f\n\n\u5f53\u5230\u8fbe\u4e00\u4e2a\u70b9\u65f6\uff0c\u5224\u65ad\u53bb\u4e0b\u4e00\u4e2a\u70b9\u518d\u56de\u53bb\u4f1a\u4e0d\u4f1a\u8d85\u65f6\n\n\u5982\u679c\u8d85\u65f6\uff0c\u76f4\u63a5\u56de\u53bb\uff0c\u5426\u5219\u5c31\u53bb\u4e0b\u4e00\u4e2a\u70b9\n\n\u5f53\u4e0b\u4e00\u4e2a\u70b9\u7684\u82b1\u751f\u4e3a0\u53ef\u4ee5\u76f4\u63a5\u9000\u51fa\n\n\u7136\u540e\u76f4\u63a5\u66b4\u529b\u5c31\u597d\u4e86\n\n\u4e0d\u8fc7\u6ce8\u610f\u6458\u82b1\u751f\u4e5f\u9700\u8981\u65f6\u95f4\n\n\u8fd8\u6709\u5224\u65ad\u5f53\u524d\u5269\u4f59\u65f6\u95f4\u65f6\u8981\u51cf\u53bb\u4ec0\u4e48\n\n\u4e0a\u4ee3\u7801\n\nps\uff1a\u4ee3\u7801\u6539\u4e86\u4e00\u90e8\u5206\uff0c\u60f3\u6284\u7684\u8bdd\u6700\u591a50\u5206\n\n```cpp\n//minamoto\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing std::sort;\nstruct ab{\n    int x,y,h;\n};\nab a[405];\nint n,m,k;\nint ans=0;\nint t=1;\nint abs(int x)\n{\n    if(x>=0) return x;\n    return -x;\n}\nint read()\n{\n    int x=0;\n    int f=1;\n    char c=getchar();\n    while(c>'9'||c<'0') {if(c=='-') f=-1;c=getchar();}\n    while(c>='0'&&c<='9') x=x*10+c-'0',c=getchar();\n    return f*x;\n}\nbool cmp(ab a,ab b)\n{\n    return a.h>b.h;\n}\nbool check(ab x,ab y)\n{\n    int ans=abs(x.x-y.x);\n    ans+=abs(x.y-y.y);\n    ans++;\n    ans+=y.x;\n    if(ans>k) return 0;\n    k-=ans;\n    return 1;\n}\nint main()\n{\n    n=read(),m=read(),k=read();\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=m;j++)\n    a[t].x=i,a[t].y=j,a[t].h=read(),t++;\n    sort(a+1,a+t,cmp);\n    if(a[1].x*2+1>k)\n    {printf(\"0\");\n    return 0;\n        }\n    ans+=a[1].h;\n    k-=a[1].x+1;\n    for(int i=2;i<t;i++)\n    {if(a[i].h==0) break;\n    if(check(a[i-1],a[i]))\n    {ans+=a[i].h;\n        }\n    else\n    break;\n        }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1510806691,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "##\u672c\u9898\u662f\u4e00\u9053\u6bd4\u8f83\u7b80\u5355\u7684\u666e\u53ca\u7ec4\u6a21\u62df\u9898\n\n##\u96be\u70b9\u4e3b\u8981\u5728\u4e8e\u4ee3\u7801\u5b9e\u73b0\u548c\u7406\u89e3\u63d0\u8bae\n\n##\u6211\u7684\u601d\u8def\u662f \u5148\u6392\u5e8f\n\n###\u5224\u65ad\u5c06\u8fd9\u4e2a\u82b1\u751f\u6458\u6389\u540e\u8fd8\u80fd\u4e0d\u80fd\u56de\u5230\u5927\u8def\u5982\u679c\u53ef\u4ee5\u5c31\u6458\n\n###\u6838\u5fc3\u7a0b\u5e8f\u6bb5\n\n###time-abs(abs(e[i].x-dx)+abs(e[i].y-dy)+1)>=e[i].x\n\n##\u5982\u679c\u4e0d\u80fd\u7ed9\u4e00\u4e2a\u6807\u8bb0\u4e0b\u4e00\u6b21\u4e0d\u518d\u6a21\u62df\n\n\u9644\u4e0a\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cmath>\nusing namespace std;\nint t[25][25];\nstruct hs{\n    int g;\n    int x,y;\n}e[405];\nvoid qsort(int l,int r)\n{\n     int i,j,mid;\n     hs p;\n     i=l;\n     j=r;\n     mid=e[(i+j)/2].g;\n     do\n     {\n     while(e[i].g>mid) i++;\n     while(e[j].g<mid) j--;\n     if(i<=j)\n     {\n         p=e[i];\n         e[i]=e[j];\n         e[j]=p;\n         i++;\n         j--;\n     }\n   }while(i<=j);\n  if(i<r) qsort(i,r);\n  if(j>l) qsort(l,j);     \n}\nint main()\n{\n    int n,m,tot=0,time;\n    cin>>n>>m>>time;\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=m;j++)\n       {\n           int gs;\n           cin>>gs;\n           if(gs!=0)\n             {\n                 tot++;\n                 e[tot].g=gs;\n                 e[tot].x=i;\n                 e[tot].y=j;\n             }\n           }\n        qsort(1,tot);\n        int dx=0,dy=e[1].y;\n        int k=0;\n       int pan=0;\n       for(int i=1;i<=tot;i++)\n       {\n             if(time-abs(abs(e[i].x-dx)+abs(e[i].y-dy)+1)>=e[i].x&&pan==0)\n              {\n               k+=e[i].g;\n               time-=abs(abs(e[i].x-dx)+abs(e[i].y-dy)+1);\n               dx=e[i].x;\n               dy=e[i].y;\n             }\n           else\n           {\n               pan=1;\n           }\n       }\n       cout<<k;\n        return 0;\n}\n```",
        "postTime": 1509014050,
        "uid": 48113,
        "name": "yuanchenfei",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "### \u81ea\u8ba4\u4e3a\u8fd8\u7b97\u4e0d\u9519\u7684\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint jdz(int j)//\u81ea\u5df1\u5199\u7684\u7edd\u5bf9\u503c \n{\n    if(j>=0) return j;\n    return -j;\n}\nstruct peanuts//\u5b9a\u4e49\u4e00\u4e2a\u82b1\u751f\u690d\u682a\u7ed3\u6784\u4f53 \n{\n    int a,b,n;\n};\nbool road(peanuts a,peanuts b,int step/*\u5269\u4e0b\u7684\u6b65\u6570*/)//\u5373\u62ff\u5230\u63a5\u4e0b\u6765\u7684\u82b1\u751f\u540e\u80fd\u5426\u56de\u5230\u9053\u8def\u4e0a \n{\n    if(b.n/*\u5982\u679cb\u690d\u682a\u7684\u82b1\u751f\u6570\u4e3a0\u5219\u76f4\u63a5\u7ed3\u675f*/&&jdz(a.a-b.a)+jdz(a.b-b.b)/*\u4e24\u4e2a\u690d\u682a\u7684\u884c\u8d70\u8ddd\u79bb*/+1/*\u6458\u82b1\u751f*/+b.a/*\u56de\u9a6c\u8def\u7684\u8ddd\u79bb*/<=step) return true;//\u80fd\u56de\u9a6c\u8def \n    return false;//\u4e0d\u80fd\u56de\u9a6c\u8def\uff0c\u5728main\u51fd\u6570\u91cc\u8f93\u51fa\u4e0a\u6b21\u603b\u5171\u62ff\u5230\u7684\u82b1\u751f\u540e\u7ed3\u675f \n}\nint main()\n{\n    int m,n,k;\n    cin>>m>>n>>k;\n    peanuts p[m*n+2];//\u5b9a\u4e49\u4e00\u7ec4\u82b1\u751f\u690d\u682ap\uff0c\u8fd9\u91cc\u4e0d\u7528\u4e8c\u4f4d\u6570\u7ec4\u662f\u4e3a\u4e86\u65b9\u4fbfsort\uff08\u61d2\u5f97\u5199\u6392\u5e8f\u4e86\uff09 \n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=n;j++)\n        {\n            cin>>p[(i-1)*m+j].n;\n            p[(i-1)*m+j].a=i;\n            p[(i-1)*m+j].b=j;\n        }\n    sort(p+1,p+m*2+1,greater<int>()/*\u8bbe\u7f6e\u6210\u964d\u5e8f\u6392\u5e8f\uff0c\u8fd9\u4e2a\u53d8\u91cf\u4e8b\u5b9e\u4e0a\u662f\u53ef\u4ee5\u4e0d\u5199\u7684\uff0c\u4e0d\u5199\u7684\u8bdd\u4f1a\u4ee5\u5347\u5e8f\u6765\u6392*/);//\u7528STL\u5e93\u91cc\u9762\u7684\u6392\u5e8f\u51fd\u6570\uff0c\u6ce8\u610f\u8fd9\u4e4b\u540ep\u672c\u8eab\u7684\u4e0b\u6807\u5176\u5b9e\u5df2\u7ecf\u6ca1\u4ec0\u4e48\u5375\u7528\u4e86\uff0c\u7528\u7684\u662fp\u7684a,b\u4e24\u4e2a\u5750\u6807\u503c\n    if(2*p[1].a>k)//\u4e5f\u5c31\u662f\u4ec0\u4e48\u90fd\u4e0d\u80fd\u62ff \n    {\n        cout<<0;\n        return 0;\n    }\n    int ans=p[i].n;//\u7528\u4e8e\u8f93\u51fa\u7684\u7b54\u6848\n    for(int i=2;i<=m*n;i++)//\u8fd9\u4e4b\u540e\u7684\u82b1\u751f \n    {\n        if(!road(p[i-1],p[i],k))//\u6b65\u6570\u7528\u5b8c\u6216\u82b1\u751f\u6ca1\u4e86 \n        {\n            cout<<ans;\n            return 0;\n        }\n        ans+=p[i].n;//\u6458\u5230\u82b1\u751f \n    }\n    cout<<ans;\n    return 0;//\u6700\u540e\u8f93\u51fa\uff0c\u5927\u591a\u6570\u65f6\u5019\u90fd\u4e0d\u4f1a\u8fd0\u884c\u5230\u8fd9\u91cc\uff0c\u4f46\u662f\u5fc5\u987b\u8981\u8865 \n}\n```\n\u8fd9\u9053\u9898\u5982\u679c\u6ca1\u6709\u8ba9\u6709\u82b1\u751f\u7684\u690d\u682a\u82b1\u751f\u6570\u91cf\u5404\u4e0d\u76f8\u540c\u5c31\u4f1a\u96be\u5f88\u591a\uff0c\u8fd8\u4f1a\u6d89\u53ca\u5230\u66f4\u591a\u7684\u8ba1\u7b97\u3002\u672c\u849f\u84bb\u539f\u6765\u662f\u4e0d\u60f3\u7528struct\u7684\uff0c\u4f46\u662f\u540e\u6765\u53d1\u73b0\u5f88\u4e0d\u65b9\u4fbf\u5c31\u7528\u4e86\u3002\u3002\u3002\u6c42\u5404\u4f4d\u795e\u725b\u6307\u6559\n",
        "postTime": 1507121850,
        "uid": 57281,
        "name": "I_know_u",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u53ea\u9700\u8981\u7528\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u6765\u5b58\u50a8\u6709\u82b1\u751f\u7684\u70b9\u4fe1\u606f\uff08\u6ca1\u6709\u82b1\u751f\u7684\u70b9\u65e0\u9700\u8003\u8651\uff09\u3002\n\n\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cft\u7528\u4e8e\u5b58\u50a8\u82b1\u8d39\u65f6\u95f4\uff0c\u5e76\u4e14\u53ef\u4ee5\u5148\u8ba1\u7b97t\u518d\u4e0e\u9650\u5b9a\u65f6\u95f4\u6bd4\u8f83\uff0c\u53ef\u4ee5\u7701\u53bb\u4e00\u4e9b\u91cd\u590d\u8ba1\u7b97\u3002\n\n\nPS\uff1a~\u697c\u4e0b\u795e\u7287\u4eec\u90fd\u5199\u5f97\u597d\u957f\uff0c\u6211\u53ea\u5199\u4e8623\u884c\uff0c\u7adf\u7136\u4e5fAC\u4e86~\n\n\u9644AC\u4ee3\u7801\uff08\u7ec3\u4e60\u4e86\u4e00\u4e0b\u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d\uff0c0ms/11890kB\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nstruct point{int x,y,num;}p[405];\nint dis(point a,point b){return abs(a.x-b.x)+abs(a.y-b.y);}\nbool operator < (point a,point b){return a.num>b.num;}//\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff0c\u91cd\u8f7d<\uff0c\u7528\u4e8e\u5728\u4e4b\u540e\u6392\u5e8f\u65f6\u5c06\u5927\u7684\u653e\u5728\u524d\u9762\nint main(\n{\n    int m,n,maxt,q,l=0,t=0,ans=0,i,j;//m,n\u5373\u4e3a\u9898\u4e2d\u6240\u8ff0\uff0cmaxt\u4e3a\u6700\u957f\u65f6\u95f4\uff0cl\u4e3a\u6709\u82b1\u751f\u690d\u682a\u6570\u91cf\uff0ct\u4e3a\u5df2\u6d88\u8017\u65f6\u95f4\uff0cans\u4e3a\u7ed3\u679c\n    scanf(\"%d%d%d\",&m,&n,&maxt);\n    for(i=1;i<=m;i++)\n        for(j=1;j<=n;j++)\n            if(scanf(\"%d\",&q)&&q)//q\u53ea\u662f\u7528\u4e8e\u7ed9\u6570\u7ec4\u8d4b\u503c\u7684\u4e00\u4e2a\u53d8\u91cf\n                p[l].x=i,p[l].y=j,p[l++].num=q;//\u5728\u8d4b\u503c\u6700\u540e\u987a\u4fbf\u628al+1\n    sort(p,p+l);\n    for(i=0;i<l;i++)\n        if(!i)\n            if((t+=p[0].x+1)<=maxt-p[0].x) ans+=p[0].num;//\u5148\u8ba1\u7b97t\uff0c\u7136\u540e\u518d\u6bd4\u8f83\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u91cd\u590d\u8ba1\u7b97t\u4e86\u3002\n            else break;//\u5982\u679c\u6bd4\u8f83\u5931\u8d25\uff0ct\u4e5f\u5c31\u6ca1\u7528\u4e86\n        else\n            if((t+=dis(p[i],p[i-1])+1)<=maxt-p[i].x) ans+=p[i].num;\n            else break;\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1496723451,
        "uid": 30994,
        "name": "timsu1104",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u697c\u4e0b\u7684\u597d\u50cf\u633a\u9ad8\u7aef\u7684\u6837\u5b50QAQ\uff0c%%%\uff1b\n\n\u8fd9\u9898\u6709\u70b9\u602a\u602a\u7684\uff0c\u67d0\u4e2a\u82b1\u751f\u4e0d\u8981\u4e86\u540e\u9762\u6570\u91cf\u5c11\u4e00\u70b9\u7684\u4e5f\u4e0d\u8981\u4e86\n\n\u6240\u4ee5\u5982\u679c\u6211\u4eec\u627e\u5230\u4e00\u4e2a\u4f4d\u7f6e\u5728\u90a3\u91cc\u91c7\u4e86\u82b1\u751f\u56de\u4e0d\u53bb\uff0c\u5c31\u653e\u5f03\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u8df3\u51fa\u5faa\u73af\u8f93\u51fa\u7b54\u6848\u3002\n\n\u4e8c\u7ef4\u6570\u7ec4\u5730\u56fe\u76f4\u63a5\u653e\u5f03\u6389\uff0c\u7528\u4e0d\u5230\u7684\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint n,m,t,ans,p;\nbool f=0;\nstruct peanuts\n{\n    int x,y,num;\n}a[501];//a\u6570\u7ec4\u8bb0\u5f55\u6709\u82b1\u751f\u7684\u4f4d\u7f6e \uff0cx\uff0cy\u4e3a\u5750\u6807\uff0cnum\u82b1\u751f\u6570\u91cf\nbool cmp(peanuts a,peanuts b)\n{\n    return a.num>b.num;\n```\n}//\u7ed3\u6784\u4f53\u6bd4\u8f83\u51fd\u6570\uff0c\u7531\u5927\u5230\u5c0f\n```cpp\nint main()\n{\n    cin>>n>>m>>t;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            int x;\n            cin>>x;\n            if(x)//\u5982\u679c\u8fd9\u4e2a\u4f4d\u7f6e\u6709\u82b1\u751f\n            {\n                ++p;\n                a[p].x=i;\n                a[p].y=j;\n                a[p].num=x;\n```\n}//\u8bb0\u5f55\u4e0b\u6765\u82b1\u751f\u4f4d\u7f6e\u548c\u6570\u91cf\n```cpp\n        }\n    }\n    sort(a+1,a+p+1,cmp);\n    int tmp=0;//\u5f53\u524d\u6d88\u8017\u7684\u65f6\u95f4\n    for(int i=1;i<=p;i++)\n    {\n        if(i==1)//\u6570\u91cf\u6700\u5927\u7684\u4f4d\u7f6e\uff0c\u5904\u7406\u65b9\u6cd5\u7279\u6b8a\u4e00\u70b9\n        {\n            if(tmp+a[i].x+1<=t-a[i].x)//\u56e0\u4e3a\u6700\u540e\u8981\u6c42\u56de\u5230\u8def\u8fb9\uff0c\u6240\u9700\u65f6\u95f4\u4e5f\u5c31\u662f\u4f4d\u7f6e\u5750\u6807x\n            {\n                tmp=tmp+a[i].x+1;\n                ans+=a[i].num;\n            }\n            else\n            {\n                break;\n            }\n        }\n        else\n        {\n            int dx=abs(a[i].x-a[i-1].x);\n            int dy=abs(a[i].y-a[i-1].y);//\u5750\u6807\u7684\u5dee\u5c31\u662f\u8def\u7a0b\uff0c\u4e0e\u600e\u4e48\u8d70\u65e0\u5173\n            if(tmp+dx+dy+1<=t-a[i].x)\n            {\n                tmp=dx+dy+tmp+1;\n                ans+=a[i].num;\n            }\n            else\n            {\n                break;\n            }\n        }\n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1494501943,
        "uid": 15184,
        "name": "SDU_AnKh_Ezra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u770b\u5230\u8bb8\u591a\u5927\u795e\u7528\u7684\u641c\u7d22\uff0c\u672c\u849f\u84bb\u4e0d\u59a8\u6362\u4e86\u4e00\u4e2a\u601d\u8def\n\n\u56e0\u4e3a\u7a7a\u5730\u662f0\uff0c\u6240\u4ee5\u5728\u8f93\u5165\u65f6\u5982\u679c\u662f\u6b63\u6574\u6570\u5c31\u662f\u83dc\uff0c\u7528\u7ed3\u6784\u4f53\u50a8\u5b58\u83dc\u7684\u5750\u6807\u548c\u5927\u5c0f\uff1b\n\n\u7528cmp\u5bf9\u7ed3\u6784\u4f53\u4ece\u5927\u5230\u5c0f\u8fdb\u884c\u6392\u5e8f\uff08\u4ece\u5927\u5230\u5c0f\u6458\u83dc\uff09\n\n\u518d\u5bf9\u83dc\u7684\u5750\u6807\u8fdb\u884c\u5904\u7406\uff0c\u603b\u4e4b\u6ca1\u7528\u641c\u7d22\uff08\u4e8c\u7ef4\u6570\u7ec4\u5730\u56fe\u53ef\u8981\u53ef\u4e0d\u8981\uff09\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n\n>#include<iostream>\n```cpp\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nstruct MAX                 //\u50a8\u5b58\u83dc\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\n{\n    int power,x,y;\n}mark[400];\nint cmp(const void *a,const void *b)   //cmp\u4e8c\u7ea7\u6392\u5e8f\n{\n    struct MAX *c=(MAX *)a;\n    struct MAX *d=(MAX *)b;\n    return d->power-c->power;\n}\ninline int distance(int x1,int y1,int x2,int y2)  //\u8ba1\u7b97\u4e24\u4e2a\u83dc\u4e4b\u95f4\u9700\u8981\u7684\u65f6\u95f4\n{\n    return abs(x2-x1)+abs(y2-y1);\n}\nint main()\n{\n    int m,n,i,j,time,markmax=0,total=0,count,temp;\n    cin>>m>>n>>time;\n    int a[m][n];        //\u8fd9\u4e2a\u6ca1\u4ec0\u4e48\u5375\u7528\uff0c\u4e3a\u4e86\u540e\u671f\u68c0\u67e5\u5c31\u5e26\u4e0a\u4e86\n    for(i=0;i<m;i++) for(j=0;j<n;j++)\n    {\n        cin>>a[i][j];\n        if(a[i][j]!=0) //\u82e5\u662f\u83dc\u5c31\u8bb0\u5f55\n        {\n            mark[markmax].power=a[i][j]; // \u50a8\u5b58\u4fe1\u606f\n            mark[markmax].y=i;\n            mark[markmax].x=j;\n            markmax++;\n        }\n    }\n    qsort(mark,markmax,sizeof(mark[0]),cmp); //\u7ed3\u6784\u4f53\u6392\u5e8f\n    for(i=markmax-1;i>=0;i--) //\u7565\u66b4\u529b\uff0c\u4ece\u83dc\u5168\u90e8\u6458\u5b8c\u5f00\u59cb\u5c1d\u8bd5\uff0c\u8d85\u8fc7\u65f6\u95f4\u5c31\u5c11\u6458\u4e00\u4e2a\n    {\n        count=mark[0].y+2; //\u8bb0\u65f6\u95f4\uff08\u52a0\u4e0a\u6458\u7b2c\u4e00\u4e2a\u83dc\u7684\u65f6\u95f4\uff09\n        total=mark[0].power; //\u8bb0\u6458\u7684\u83dc\u603b\u548c\n        for(j=0;j<=i-1;j++)   //\u8ba1\u7b97\u4e24\u83dc\u4e4b\u95f4\u9700\u8981\u7684\u65f6\u95f4\uff08\u52a0\u4e0a\u6458\u83dc\u7684\u65f6\u95f4\uff09\n        {\n            temp=(1+distance(mark[j].x,mark[j].y,mark[j+1].x,mark[j+1].y));\n            if(count+temp<=time)\n            {\n                count+=temp;\n                if(j!=0) total+=mark[j].power;\n            }\n            else goto breakout; //\u8d85\u65f6\u91cd\u65b0\u5faa\u73af\n        }\n        count+=mark[i].y+1;\n        if(count>time) goto breakout; //\u8d85\u65f6\u91cd\u65b0\u5faa\u73af\n        if(i!=0) total+=mark[i].power; //\u52a0\u4e0a\u6700\u540e\u4e00\u4e2a\u83dc\n        goto output;   //\u7ed3\u675f\u5faa\u73af\n        breakout:total=0;  //\u8d85\u65f6\u91cd\u65b0\u5faa\u73af\u5e76\u5f52\u96f6\n    }\n    output:cout<<total;\n    return 0;\n}\n```",
        "postTime": 1493546691,
        "uid": 23810,
        "name": "\u5f90\u5927\u4ed9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "**\u4e3b\u8981\u662f\u505a\u9898\u524d\u5212\u8868**\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nstruct node\n{\n    int x,y,w;//x,y\u4e3a\u5750\u6807w\u4e3a\u6570\u503c\n}hua[510];//\u6709\u6570\u7684\u82b1\u751f\u7684\u5750\u6807\u53ca\u6570\u5b57\nint s[510],n,m,k,sum,time,t,num,tmp;\nint cmp(const node &a,const node &b)//\u6392\u5e8f\n{\n    if (a.w>b.w) return 1;\n    else return 0;\n}\nint main()\n{\n    int i,j;\n    cin>>n>>m>>k;\n    for (i=1;i<=n;i++)\n    {\n        for (j=1;j<=m;j++)\n        {\n            cin>>t;\n            if (t>0)//\u5982\u679c\u662f\u4e2a\u82b1\u751f\n            {\n                num++;//\u5c31\u8bb0\u4e0b\u6765\n                hua[num].x=i;\n                hua[num].y=j;\n                hua[num].w=t;            \n            }\n        }\n    }\n    sort(hua+1,hua+num+1,cmp);\nk-=hua[1].x+1;//\u5148\u6765\u5230\u7b2c\u4e00\u4e2a\u70b9\n    for (i=1;i<=num;i++)\n    {    \n        if (k-hua[i].x>=0)//\u5982\u679c\u7b26\u5408\u8981\u6c42\uff0c\u73b0\u6709\u7684\u65f6\u95f4\u51cf\u53bb\u56de\u6765\u7684\u65f6\u95f4\u5927\u4e8e\u7b49\u4e8e0\u5c31\u7b26\u5408\n        {\n            sum+=hua[i].w;//\u52a0\u4e0a\n            k-=abs(hua[i].x-hua[i+1].x)+abs(hua[i].y-hua[i+1].y)+1;//\u8ba1\u7b97\u5230\u4e0b\u4e00\u4e2a\u7684\u70b9\u7684\u65f6\u95f4---+1\u662f\u91c7\u6458\u65f6\u95f4\u987a\u4fbf\u7b97\u4e0a\n        }\n        else break;//\u4e0d\u884c\u5c31\u9000\u51fa\n    }\n    cout<<sum;\n    return 0;\n}\n//\u8bed\u6587\u4e0d\u597d\u5e94\u8be5\u80fd\u770b\u61c2\n```",
        "postTime": 1486043144,
        "uid": 20420,
        "name": "\u7761\u5728\u5899\u4e0a\u7684\u732b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1\u7b80\u5355\u6613\u61c2\u7684 : )\n\nvar b,c,d:array[1..10000] of longint;//b\u50a8\u5b58\u82b1\u751f\u6570\uff0cc\u50a8\u5b58\u7eb5\u5750\u6807\uff0cd\u50a8\u5b58\u6a2a\u5750\u6807\uff1b\n\n\n\n```cpp\n    a,m,n,k,i,j,ans,t:longint;\nprocedure qsort(l,r:longint);//\u5feb\u6392\uff0c\u628a\u82b1\u751f\u6570\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff1b\nvar p,q,x,mid:longint;\nbegin\n p:=l;\n q:=r;\n mid:=b[(l+r) div 2];\n  repeat\n   while b[p]>mid do inc(p);\n   while b[q]<mid do dec(q);\n    if p<=q then \n    begin\n     x:=b[p];b[p]:=b[q];b[q]:=x;//\u4ea4\u6362\u82b1\u751f\u6570\uff1b\n     x:=c[p];c[p]:=c[q];c[q]:=x;//\u4ea4\u6362\u7eb5\u5750\u6807\uff1b\n     x:=d[p];d[p]:=d[q];d[q]:=x;//\u4ea4\u6362\u6a2a\u5750\u6807\uff1b\n     inc(p);dec(q);\n    end;\n  until p>q;\n if p<r then qsort(p,r);\n if q>l then qsort(l,q);\nend;\nbegin   \n fillchar(b,sizeof(b),0);\n fillchar(c,sizeof(c),0);\n fillchar(d,sizeof(d),0);\n ans:=0;t:=0;\n readln(m,n,k);\n  for i:=1 to m do\n  begin\n   for j:=1 to n do\n    begin \n     read(a);//\u8bfb\u5165\u82b1\u751f\u6570\uff1b\n     if a<>0 then //\u5982\u679c\u4e0d\u662f0\u5c31\u653e\u5165\u6570\u7ec4\uff1b\n      begin\n       inc(t);\n        b[t]:=a;\n        c[t]:=i;\n        d[t]:=j;\n      end;\n    end;\n    readln;\n   end;\n   qsort(1,t);\n   k:=k-c[1]-1;\n    for i:=1 to t do //\u4f9d\u6b21\u5224\u65ad\u6bcf\u4e2a\u70b9\u662f\u5426\u7b26\u5408\u8981\u6c42\uff08\u5373\u9650\u5b9a\u65f6\u95f4\u5185\u80fd\u5426\u6458\u8be5\u70b9\u7684\u82b1\u751f\uff09\uff1b\n     if k-c[i]>=0 then//\u5982\u679c\u7b26\u5408\u8981\u6c42\uff1b\n      begin\n       ans:=ans+b[i];\n       k:=k-abs(d[i]-d[i+1])-abs(c[i]-c[i+1])-1;//\u5269\u4e0b\u7684\u65f6\u95f4\u53d8\u5c11\uff1b\n      end\n       else break;//\u5982\u679c\u4e0d\u7b26\u5408\uff0c\u9000\u51fa\u5faa\u73af\uff1b\n     writeln(ans);\nend.\n```",
        "postTime": 1485000512,
        "uid": 21202,
        "name": "DaftLord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u5148\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u8bb0\u5f55\u4e0b\u6bcf\u4e00\u4e2a\u4e0d\u4e3a0\u7684\u82b1\u751f\u70b9\u7684\u82b1\u751f\u4e2a\u6570\u3001\u884c\u548c\u5217\uff0c\u518d\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u518d\u4ece\u6700\u5927\u7684\u4e00\u4e2a\u9010\u4e2a\u679a\u4e3e\uff0c\u76f4\u5230\u8d85\u51fa\u65f6\u95f4\uff0c\u7136\u540e\u8f93\u51fa\u5373\u53ef\u3002\n\n\u53ef\u80fd\u4f1a\u6709\u8f83\u9ad8\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4f46\u4ecd\u80fd\u8fc7\uff0c\u800c\u4e14\u4ee3\u7801\u601d\u8def\u8fd8\u662f\u6bd4\u8f83\u6e05\u6670\u7684\u3002\n\n\u4e0b\u9762\uff0c\u5c31\u662f\u8fd9\u9898\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<cstdlib>\n#include<algorithm>\nusing namespace std;\nstruct XX//\u5efa\u7acb\u5b58\u50a8\u6bcf\u4e2a\u82b1\u751f\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\n{\n    int s;//\u5b58\u82b1\u751f\u6570\n    int h,l;//\u884c\u3001\u5217\n}hs[400]={0,0,0};//20*20=400\uff0c\u5373\u5f00400\u4e2a\u5373\u53ef\nbool cmp(const XX &a,const XX &b)//sort\u4e2d\u7684\u6bd4\u8f83\uff08\u6bd4\u8f83\u82b1\u751f\u5927\u5c0f\uff0c\u5927\u7684\u6392\u524d\uff09\n{\n    return a.s>b.s;\n}\nint main()\n{\n    int x,y;\n    int t;\n    scanf(\"%d%d%d\",&x,&y,&t);\n    int no=0;//\u4e0d\u4e3a0\u7684\u82b1\u751f\u7684\u603b\u6570\n    for(int i=1;i<=x;i++)\n    {\n        for(int j=1;j<=y;j++)\n        {\n            scanf(\"%d\",&hs[no].s);\n            {\n                if(hs[no].s!=0)\n                {\n                    hs[no].h=i;\n                    hs[no].l=j;\n                    no++;//\u6570\u91cf\u52a0\u4e00\n                }\n            }\n        }\n    }    \n    sort(hs+0,hs+no,cmp);//\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n    int need;//\u9700\u8981\u7684\u65f6\u95f4\n    for(int i=0;i<no;i++)//\u4ecehs[0]\u5f00\u59cb\u8ba1\u7b97\uff0c\u7b2c\u4e00\u4e2a\u5230\u8fbehs[0],\u6700\u540e\u4e00\u4e2a\u79bb\u5f00hs[i]\uff1b\n    {\n        need=hs[0].h+hs[i].h;//\u5230\u7b2c\u4e00\u4e2a\u4e0e\u79bb\u5f00\u6700\u540e\u4e00\u4e2a\u6240\u8017\u7684\u65f6\u95f4\n        for(int j=1;j<=i;j++)\n        {\n            need+=abs(hs[j].h-hs[j-1].h)+abs(hs[j].l-hs[j-1].l);//\u4e24\u4e2a\u82b1\u751f\u4e4b\u95f4\u9700\u8981\u7684\u65f6\u95f4\n        }\n        need+=i+1;//\u52a0\u4e0a\u6bcf\u4e2a\u82b1\u751f\u7684\u91c7\u6458\u65f6\u95f4\n        if(need>t||(need<=t&&i==no-1))//\u5982\u679c\u8d85\u8fc7\u65f6\u95f4\u6216\u4ecd\u5c0f\u4e8e\u4f46\u5df2\u662f\u6700\u540e\u4e00\u4e2a\n        {\n            if(need<=t&&i==no-1)i++;//\u5982\u679c\u4ecd\u5c0f\u4e8e\u4e14\u4e3a\u6700\u540e\u4e00\u4e2a\uff0c\u7edf\u8ba1\u6700\u5c3e\u4e00\u4e2a\n            int he=0;//\u53ef\u91c7\u6458\u82b1\u751f\u603b\u6570\n            for(int j=0;j<i;j++)\n            {\n                he+=hs[j].s;\n            }\n            printf(\"%d\",he);\n            return 0;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1482921502,
        "uid": 32275,
        "name": "KesdiaelKen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u611f\u89c9\u53ef\u4ee5\u7ec3\u7ec3\u5806\u6392\u5e8f\uff0c\u628a\u6709\u82b1\u751f\u7684\u70b9\u90fd\u5b58\u5230\u5806\u91cc\uff0c\u5e76\u4e14\u8bb0\u5f55\u4e0b\u5750\u6807\uff0c\u7136\u540e\u4e00\u4e2a\u4e00\u4e2a\u5f39\u51fa\u6765\u5c31\u884c\u4e86\u3002\n\n\u7b2c\u4e00\u6b21\u63d0\u4ea4\u7684\u65f6\u5019\u5fd8\u4e86\u4fee\u6539 cur\\_x \u548c cur\\_y \u4f9d\u7136\u8fc7\u4e866\u4e2a\u70b9\u2026\u2026\u6c57\u989c\u3002\u3001\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\uff0c\u56e0\u4e3a\u6570\u636e\u4e0d\u5927\uff0c\u76f4\u63a5\u5957\u5c31\u884c\u4e86\uff0c\u4e0d\u559c\u52ff\u55b7\uff1a\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#define father_(x) ((x)>>1)\n#define left_(x) ((x)<<1)\n#define right_(x) (((x)<<1)+1)\nusing namespace std;\nstruct point{\n    int x;\n    int y;\n    int p;\n};\npoint heap[1000];\nint size;\nvoid insert(point x);\npoint get_max();\nint main()\n{\n    heap[0].p = 10000;\n    int m,n,k;\n    cin >> m >> n >> k;\n    int p;\n    point tmp;\n    for (int i = 1; i <= m; i++)\n        for (int j = 1; j <= n; j++){\n            cin >> p;\n            if (p){\n                tmp.x = i;\n                tmp.y = j;\n                tmp.p = p;\n                insert(tmp);\n            }\n        }\n    int cur_x,cur_y;\n    int ans = 0;\n    tmp = get_max();\n    if ((tmp.x<<1) < k){\n        k -= (tmp.x+1);\n        cur_x = tmp.x;\n        cur_y = tmp.y;\n        ans += tmp.p;\n    }\n    else{\n        cout << 0;\n        return 0;\n    }\n    while (size){\n        tmp = get_max();\n        if (fabs(cur_x - tmp.x)+fabs(cur_y - tmp.y) + tmp.x + 1 <= k){   //\u8d70\u5230\uff0c\u91c7\u6458\uff0c\u8d70\u51fa\u7684\u65f6\u95f4\u8db3\u591f\n            k -= (fabs(cur_x - tmp.x) + fabs(cur_y - tmp.y) + 1);   //\u6263\u9664\u8d70\u5230\uff0c\u91c7\u6458\u7684\u65f6\u95f4\n            cur_x = tmp.x;\n            cur_y = tmp.y;\n            ans += tmp.p;\n            continue;\n        }\n        break;\n    }\n    cout << ans;\n    return 0;\n}\nvoid insert(point x){\n    if (!size){\n        heap[1] = x;\n        size++;\n        return;\n    }\n    int cur = ++size;\n    while (heap[father_(cur)].p < x.p){\n        heap[cur] = heap[father_(cur)];\n        cur = father_(cur);\n    }\n    heap[cur] = x;\n}\npoint get_max(){\n    point tmp = heap[1];\n    point last = heap[size--];\n    int empty = 1;\n    int child = left_(empty);\n    while (child <= size){\n        if (heap[child].p < heap[child+1].p && child < size)\n            child++;\n        if (heap[child].p > last.p){\n            heap[empty] = heap[child];\n            empty = child;\n            child = left_(empty);\n        }\n        else\n            break;\n    }\n    heap[empty] = last;\n    return tmp;\n}\n\n```",
        "postTime": 1478090298,
        "uid": 23634,
        "name": "\u66ae\u5149",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "readln(m,n,k);{\u8bfb\u82b1\u751f\u7530\u7684\u89c4\u6a21\u548c\u591a\u591a\u91c7\u82b1\u751f\u7684\u9650\u5b9a\u65f6\u95f4}\n\nk:=k-2; {\u8ba1\u7b97\u591a\u591a\u5728\u6570\u7ec4\u5185\u91c7\u96c6\u82b1\u751f\u7684\u6700\u591a\u65f6\u95f4}\n\nmax:=0;{\u8bfb\u82b1\u751f\u7530\u7684\u4fe1\u606f\u3002\u8ba1\u7b97\u82b1\u751f\u6570\u6700\u591a\u7684\u4f4d\u7f6e\uff08max1i\uff0cmax1j\uff09\u548c\u8be5\u4f4d\u7f6e\u7684\u82b1\u751f\u6570max}\n\n```cpp\nfor i:=1 to m do\n  for j:=1 to n do\n   begin\n    read(p[i,j]);\n    if p[i,j]>max then begin max:=p[i,j];max1i:=i;max1j:=j\uff1bend;{then}\n   end;{for}\nt:=max1i;total:=0;{ \u591a\u591a\u7684\u884c\u7a0b\u548c\u91c7\u96c6\u7684\u82b1\u751f\u6570\u521d\u59cb\u5316}\nwhile (t+max1i-1<=k)and(max>0) do{\u82e5\u5728\u9650\u5b9a\u65f6\u95f4\u5185\u56de\u5230\u8def\u8fb9\u4e14\u627e\u5230\u82b1\u751f\u6700\u591a\u7684\u690d\u682a\uff0c\u5219\u91c7\u6458\u5b83\u7684\u82b1\u751f\uff0c\u5e76\u7d2f\u8ba1\u91c7\u6458\u7684\u82b1\u751f\u603b\u6570}\n  begin\n   p[max1i,max1j]:=0;total:=total+max;\n   max:=0;{\u8ba1\u7b97\u5f53\u524d\u82b1\u751f\u6570\u6700\u591a\u7684\u4f4d\u7f6e\uff08maxi\uff0cmaxj\uff09\u548c\u8be5\u4f4d\u7f6e\u7684\u82b1\u751f\u6570max}\n   for i:=1 to m do\n     for j:=1 to n do if p[i,j]>max then begin max:=p[i,j];maxi:=i;maxj:=j\uff1bend;{then}\n   t:=t+1+abs(max1i-maxi)+abs(max1j-maxj);{\u7d2f\u8ba1\u884c\u7a0b}\n   max1i:=maxi;max1j:=maxj\uff1b{\u4ece\u8be5\u4f4d\u7f6e\u51fa\u53d1\uff0c\u7ee7\u7eed\u91c7\u6458\u82b1\u751f}\nend;{while}\n writeln(total);{\u8f93\u51fa\u9650\u5b9a\u65f6\u95f4\u5185\u591a\u591a\u91c7\u5230\u82b1\u751f\u6570\u7684\u6700\u5927\u503c} \n\n```",
        "postTime": 1477814966,
        "uid": 25539,
        "name": "\u5927fanchuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "//\u6613\u9519\u70b9 1\uff1a\u9884\u5b58\u56de\u5bb6\u7684\u8def   2\uff1a\u4e00\u65e6\u6316\u4e0d\u5230\u82b1\u751f\u4e0d\u518d\u7ee7\u7eed\u627e\u4e0b\u4e00\u4e2a\uff0c \u76f4\u63a5\u9000\u51fa\u5373\u53ef\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cmath>\nusing namespace std;\nint a[21][21], b[401], x_last = 0, y_last = 0, m, n, x_now = 0, y_now = 0;//a \u5b58\u653e\u8f93\u5165, \u6700\u591a\u670920 * 20 \u4e2a\u5730\u65b9\u6709\u82b1\u751f\nint Find_max()//\u627e\u51fa\u6700\u591a\u82b1\u751f\u7684\u5730\u65b9, \u5750\u6807\u5b58\u5728x_now, y_now\u4e2d\n{\n    int max = 0;\n    for(int i = 1; i <= m; ++i)\n        for(int j = 1; j <= n; ++j)\n            if(a[i][j] > max) \n            {\n                max = a[i][j];\n                x_now = i; y_now = j;\n            }\n}\nint main()\n{\n    int k, tot = 0, ans = 0;\n    cin >> m >> n >> k;\n    for(int i = 1; i <= m; ++i)\n        for(int j = 1; j <= n; ++j) \n        {\n            cin >> a[i][j];\n            if(a[i][j] != 0) ans++;//\u6bcf\u6709\u4e00\u4e2a\u5730\u65b9\u6709\u82b1\u751f\u5c31+1\n        }\n    for(int i = 1; i <= ans; ++i)//\u679a\u4e3e\u6bcf\u4e2a\u82b1\u751f\u5730\u7684\u53ef\u80fd\n    {\n        int x, y;\n        Find_max();\n        if(i == 1)//\u7b2c\u4e00\u6b21\u53ea\u7528\u8003\u8651\u8d70\u8fc7\u53bb, \u9884\u5b58\u51fa\u56de\u6765\u7684\u8def\n        {\n            if(k - x_now - 1 - x_now >= 0)\n            {\n                k = k - x_now - 1;\n                tot = tot + a[x_now][y_now];\n            }\n            else break;//\u5982\u679c\u6458\u4e0d\u5230\u82b1\u751f\u4e86\u76f4\u63a5\u9000\u51fa\n        }\n        else\n        {\n            x = abs(x_last - x_now); y = abs(y_last - y_now);//x_last, y_last\u5b58\u653e\u7684\u662f\u4e0a\u4e00\u6b21\u6316\u82b1\u751f\u7684\u5730\u65b9\uff0c \u5750\u6807\u7684\u5dee\u5c31\u662f\u8981\u8d70\u7684\u8def\u7a0b\n            if(k - x - y - 1 - x_now >= 0)//\u9884\u5b58\u51fa\u56de\u6765\u7684\u8def\n            {\n                k = k - x - y - 1;\n                tot = tot + a[x_now][y_now];\n            }\n            else break;\n        }\n        a[x_now][y_now] = 0;//\u8d70\u8fc7\u7f6e0\uff0c \u4e0d\u5f71\u54cd\u4e0b\u6b21Find_max\n        x_last = x_now; y_last = y_now;//\u66ff\u6362\n    }\n    cout << tot;\n    return 0;\n}\n// The End\n```",
        "postTime": 1472910240,
        "uid": 6781,
        "name": "\u4e03\u5341\u4e03",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "```cpp\n#include <iostream>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#define nmax 30\nusing namespace std;//\u5b57\u5934\u4e0d\u89e3\u91ca\uff1b\nint lqbz,mmqm;//\u5b9a\u4e49\u53d8\u91cf\uff1a\u4e71\u4e03\u516b\u7cdf\uff0c\u83ab\u540d\u5176\u5999\uff1b\nint main()\n{int m,n,hlxd;cin>>m>>n>>hlxd;//\u53d8\u91cf\u80e1\u4e71\u5199\u7684\u6765\u5b58\u89c4\u5b9a\u65f6\u95f4\uff1b\uff08\u6211\u8bcd\u7a77\u4e86TAT\uff09\uff1b\n int a[22][22],x[501],y[501];//a\u5b58\u7530\uff0cxy\u6a2a\u7eb5\u5750\u6807\uff1b\n bool flag[501];//\u5224\u65ad\u82b1\u751f\u6709\u65e0\uff1b\n memset(flag,0,sizeof(flag));\n memset(a,0,sizeof(a));\n memset(x,0,sizeof(x));\n memset(y,0,sizeof(y));//\u6e05\u96f6\uff1b\n for(int i=1;i<=m;i++)\n   for(int j=1;j<=n;j++)\n     {cin>>a[i][j];//\u8f93\u5165\uff1b\n      if(a[i][j]>0)//\u6709\u82b1\u751f\u65f6\uff1b\n        {lqbz=a[i][j];\n         x[lqbz]=i;\n         y[lqbz]=j;\n         flag[lqbz]=1;\n        }\n     }\n  for(int i=1;i<=m;i++)\n    for(int j=1;j<=n;j++)\n      if(a[i][j]>lqbz)\n        lqbz=a[i][j];//\u5224\u65ad\u82b1\u751f\u6700\u591a\u7684\uff1b\n int time=1+x[lqbz],hs=lqbz;//\u91c7\u82b1\u751f\uff1b\n if(hlxd-time<x[lqbz])\n   {cout<<\"0\";\n    return 0;\n```\n}//\u7ed3\u679c\u4e00\u4e2a\u90fd\u6ca1\u91c7\u5230TAT\uff1b\uff08\u7334\u5b50\uff1a\u4e3b\u4eba\u4f60\u73a9\u6211\uff09\n```cpp\n mmqm=lqbz;\n for(int k=(mmqm-1);k>0;k--)//\u5f00\u59cb\u7ee7\u7eed\u91c7\u82b1\u751f\uff1b\n   {if(flag[k]==0) \n      continue;//\u6ca1\u6709\u5c31\u4e0d\u7ba1\u4e86\uff1b\n    else//\u6709\u7684\u8bdd\uff1a\n      {time=time+abs(y[lqbz]-y[k])+abs(x[lqbz]-x[k])+1;//\u5148\u82b1\u4e0a\u4e00\u70b9\u65f6\u95f4\u91c7\u4e86\uff1b\n       if((hlxd-time)<(x[k]))//\u7ed3\u679c\u56de\u4e0d\u53bb\u4e86TAT\uff1b\n         {cout<<hs;\n          return 0;\n         }\n       else//\u80fd\u56de\u53bb\uff1b\n         {hs+=k;//\u4e8e\u662f\u7334\u5b50\u91c7\u5230\u4e86\u82b1\u751f\uff1b\n          lqbz=k;\n         }\n      }\n   }\n cout<<hs;\n return 0; \n}//\u4ee5\u4e0a\uff1b\n```",
        "postTime": 1470928397,
        "uid": 19551,
        "name": "NishikinoMaki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u4ed4\u7ec6\u8bfb\u9898\uff0c\u53d1\u73b0\u76f4\u63a5\u8bfb\u5165\u77e9\u9635\u6a21\u62df\u5373\u53ef\u3002\n\n\u4ee5\u4e0b\u662f\u5173\u952e\u8bc1\u660e\u51fa\u6765\u7684\u7ed3\u8bba\uff1a\n\nx\u521d=\uff08MAX\u82b1\u751f\uff09\n\ny\u521d=0\n\nt=\uff08\u91c7\u82b1\u751f\u7528\u4e00\u5355\u4f4d\u65f6\u95f4\uff091+|x\u5f53\u524d-x\u4e0b\u4e2a|+|y\u5f53\u524d-y\u4e0b\u4e2a|\n\u91c7\u4e0b\u4e00\u4e2a\u82b1\u751f\u7684\u6761\u4ef6\uff1at<=K\uff08\u53ef\u4ee5\u91c7\u5230\uff09\u4e14K-t<=y\u4e0b\u4e2a\uff08\u80fd\u56de\u53bb\uff09\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\uff1a\n\n```cpp\n\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<vector>\n#include<algorithm>\n#include<string.h>\n#include<math.h>\n#include <stdlib.h>\n#define maxn 22\nusing namespace std;\nstruct node{int x,y,v;}best;\nint N,M,K,map[maxn][maxn];\nint main(){\n    int p=0,dx,dy=0,t,found,tmp;\n    cin>>N>>M>>K;\n    for(int i=1;i<=N;i++)\n        for(int j=1;j<=M;j++)\n            cin>>map[i][j];\n    //\u8bfb\u6570\u636e\n    t=K;\n    best.v=0;\n    for(int i=1;i<=N;i++)\n        for(int j=1;j<=M;j++)\n            if(map[i][j]>best.v){\n                best.v=map[i][j];\n                best.x=j;\n                best.y=i;\n            }\n    dx=best.x;\n    //\u521d\u59cb\u5316\n    while(1){\n        tmp=abs(dx-best.x)+abs(dy-best.y)+1;\n        if(tmp<=t && t-tmp>=best.y){//\u80fd\u91c7\u5230\u4e14\u80fd\u56de\u53bb\n            map[best.y][best.x]=0;\n            t-=tmp;\n            p+=best.v;\n            dx=best.x;\n            dy=best.y;\n        }\n        else\n            break;\n        //\u627e\u4e0b\u4e00\u4e2a\u82b1\u751f\n        found=0;\n        best.v=0;\n        for(int i=1;i<=N;i++)\n            for(int j=1;j<=M;j++)\n                if(map[i][j]>best.v){\n                    best.v=map[i][j];\n                    best.x=j;\n                    best.y=i;\n                    found=1;\n                }\n        if(found==0)\n            break;\n    }\n    cout<<p<<\"\\n\";\n    return 0;\n}\n\n```\uff08c/c++\uff09\n",
        "postTime": 1459268638,
        "uid": 8296,
        "name": "March",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\n\n1.\u8bfb\u5165\u5730\u56fe\uff0c\u5b58\u50a83\u4e2a\u5143\u7d20\uff0c\u5206\u522b\u662f\uff1a\u82b1\u751f\u6570\u5927\u4e8e0\u7684\u5750\u6807\u548c\u82b1\u751f\u6811\n\n2.\u6392\u5e8f\u82b1\u751f\u6570\n\n3.\u8ba1\u7b97\u65f6\u95f4\uff0c\u601d\u8def\u5982\u4e0b\n\n\u9996\u5148\u7528a[0][1]\u548ca[0][2]\u505a\u597d\u521d\u59cb\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u5217\u4e00\u5f00\u59cb\u53ef\u4ee5\u5ffd\u7565\uff0c\u884c\u5219\u662f\u8def\u8fb9\uff0c\u53730\n\n\u7136\u540e\u9996\u5148\u7528\u6700\u5927\u80fd\u6458\u5230\u82b1\u751f\u7684\u4f4d\u7f6e\u6570\u91cf\u4f5c\u4e3a\u5faa\u73af\n\n\u6bcf\u6b21\u8ba1\u7b97\u4e0b\u4e00\u6b21\u884c\u52a8\u6240\u82b1\u65f6\u95f4\u662f\u5426\u8981\u8dd1\u56de\u53bb\uff0c\u5305\u62ec\uff1a\u56de\u8def\u8fb9\uff081+\u4e0b\u6b21\u7684\u5217\u5750\u6807\uff09+\u4e0b\u6b21\u79fb\u52a8time\n\n\u5982\u679c\u65f6\u95f4\u5141\u8bb8\uff0c\u5219\u51cf\u53bb\u884c\u52a8\u503c\uff0c\u5305\u62ec\u6458\u82b1\u751f\u7684\u65f6\u95f4\n\n```delphi\n\nvar\n  map:array[1..25,1..25]of longint;\n  a:array[0..10000,1..3]of longint;\n  i,m,n,k,j,c,s,w:longint;\nbegin\n  readln(m,n,s);\n  for i:=1 to m do\n    for j:=1 to n do begin\n      read(map[i][j]);\n      if(map[i][j]>0)then begin\n      inc(k);\n      a[k][3]:=map[i][j];\n      a[k][1]:=i;\n      a[k][2]:=j;\n      end;\n    end;\n  w:=k;\n  k:=0;\n  c:=0;\n\n  for i:=1 to w do begin\n   for j:=1 to w do\n     begin\n       if(a[i][3]>a[j][3])then\n       begin\n         c:=a[i][3];a[i][3]:=a[j][3];a[j][3]:=c;\n         c:=a[i][2];a[i][2]:=a[j][2];a[j][2]:=c;\n         c:=a[i][1];a[i][1]:=a[j][1];a[j][1]:=c;\n       end;\n     end;\n  end;\n\n  a[0][2]:=a[1][2];\n  c:=0;i:=0;\n\n  if(s<>0)then begin\n  for k:=0 to w do begin\n    if(s>=abs(a[k][1]-a[k+1][1])+abs(a[k][2]-a[k+1][2])+1+a[k+1][1])then begin\n    s:=s-abs(a[k][1]-a[k+1][1])-abs(a[k][2]-a[k+1][2])-1;\n    c:=c+a[k+1][3]\n    end else break;\n  end;\n  end;\n\n  writeln(c);\n  readln;readln;\nend.   \n\n```",
        "postTime": 1439044930,
        "uid": 7201,
        "name": "median_dxz",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u6309\u82b1\u751f\u6570\u6392\u5e8f\uff0c\u518d\u6a21\u62df\u80fd\u4e0d\u80fd\u91c7\u4e0b\u4e00\u68f5\u82b1\u751f\u5373\u53ef\u3002\u4e0b\u9762\u662f**C\u8bed\u8a00\u7248**\u3002\n\n```cpp\n#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint cmp(const void *a,const void *b)\n{\n    return  *(int *)b - *(int *)a;\n}\nint main(void)\n{\n    int map[500][3]={0},current[3]={0},kgo,kback,kmax,i,j,k=0,m,n,ans=0;\n    scanf(\"%d %d %d\",&m,&n,&kmax);\n    for(i=1;i<=m;i++)\n        for(j=1;j<=n;j++)\n        {\n            map[k][1]=i;map[k][2]=j;//\u884c\u5217 \n            scanf(\"%d\",&map[k++][0]);  //\u82b1\u751f\u6570 \n        }\n    qsort(map,n*m,sizeof(map[0]),cmp); //\u6309\u82b1\u751f\u6570\u6392\u5e8f \n    i=0;\n    while(1)\n    {\n        kgo=  abs(map[i][1]-current[1] ) + abs(map[i][2]-current[2]) +1 ; //\u53bb\u5230\u4e0b\u4e00\u4e2a\u5730\u70b9\u53ca\u91c7\u6458\u6240\u82b1\u65f6\u95f4 \n        if(current[2]==0) kgo-=abs(map[i][2]-current[2] );//\u51fa\u53d1\u70b9\u662f\u8def\u8fb9\u7684\u60c5\u51b5\u3002 \n        kback= map[i][1];//\u5728\u4e0b\u4e00\u4e2a\u5730\u70b9\u56de\u5230\u8def\u8fb9\u6240\u82b1\u65f6\u95f4 \n        if( kgo+kback+current[0] <= kmax) //\u5047\u8bbe\u91c7\u6458\u4e0b\u4e00\u4e2a\u82b1\u751f\uff0c\u8ba1\u7b97\u6240\u82b1\u603b\u65f6\u95f4\u662f\u5426\u8d85\u8fc7\u9884\u7b97\u3002 \n        {\n            current[0]+=kgo;\n            current[1]=map[i][1];\n            current[2]=map[i][2];\n            ans+=map[i++][0];\n        }\n        else            //\u8d85\u8fc7\u9884\u7b97 \n            break;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1437015122,
        "uid": 4693,
        "name": "CoolTeam",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u6392\u5e8f\u4e00\u4e0b\uff0c\u6a21\u62df\u4e00\u4e0b\u3002\n\n\u6570\u636e\u89c4\u6a21\u8f83\u5c0f\uff0c\u65e0\u9700\u91c7\u7528\u9ad8\u7ea7\u6392\u5e8f\u7b97\u6cd5\uff0c\u6700\u4f4e\u7ea7\u7684O(n^2)\u7684\u9009\u62e9\u6392\u5e8f\u5373\u53ef\u3002\n\n\u57fa\u672c\u601d\u60f3\u662f\u8d2a\u5fc3\uff0c\u80fd\u6458\u5c31\u6458\uff0c\u6ce8\u610f\u8981\u9884\u597d\u56de\u53bb\u7684\u65f6\u95f4\u3002\n\n```delphi\n\nvar m,n,k,i,j,p,t,total,time:longint;\n    a:array [1..20,1..20] of longint;\n    b:array [0..40,1..3] of longint;\nbegin\n readln(m,n,k);\n for i:=1 to m do\n begin\n  for j:=1 to n do\n  begin\n   read(a[i,j]);\n   if a[i,j]>0 then//\u6709\u82b1\u751f\u7684\u5730\u65b9\u4fdd\u5b58\u8d77\u6765\n    begin\n     inc(p);\n     b[p,1]:=i;\n     b[p,2]:=j;\n     b[p,3]:=a[i,j]\n    end\n  end;\n  readln\n end;\n for i:=1 to p-1 do//\u6309\u82b1\u751f\u6570\u91cf\u8fdb\u884c\u6392\u5e8f\n  for j:=i+1 to p do\n   if b[i,3]<b[j,3] then\n    begin\n     t:=b[i,1];b[i,1]:=b[j,1];b[j,1]:=t;\n     t:=b[i,2];b[i,2]:=b[j,2];b[j,2]:=t;\n     t:=b[i,3];b[i,3]:=b[j,3];b[j,3]:=t\n    end;\n b[0,2]:=b[1,2];//\u4e00\u5f00\u59cb\u8981\u5148\u8dd1\u8fc7\u53bb\uff0c\u56e0\u4e3a\u53ef\u4ee5\u4ece\u4efb\u610f\u5217\u51fa\u53d1\u6240\u4ee5\u4e0d\u7528\u8003\u8651\u5217\u8017\u8d39\u7684\u65f6\u95f4\n for i:=0 to p do\n begin\n  inc(total,b[i,3]);//\u6458\u5230\u7684\u82b1\u751f\u603b\u6570\n  time:=abs(b[i,1]-b[i+1,1])+abs(b[i,2]-b[i+1,2]);//\u6458\u4e0b\u4e00\u68f5\u9700\u8981\u7684\u65f6\u95f4\n  if time<=k then//\u591f\u65f6\u95f4\u5c31\u6458\n   begin\n    dec(k,time);//\u53ef\u7528\u65f6\u95f4\u7d2f\u51cf\n    if i<>0 then dec(k);//\u7b2c0\u68f5\u65f6\u662f\u4ece\u8def\u8fb9\u8df3\u8fc7\u53bb\u7b2c1\u68f5\uff0c\u4ee5\u540e\u7684\u90fd\u8981\u82b1\u8d391\u4e2a\u5355\u4f4d\u65f6\u95f4\u6765\u6458\u53d6\u82b1\u751f\n    if b[i+1,1]+1>k then break//\u6458\u4e0b\u4e00\u68f5\u7684\u65f6\u5019\u4e0d\u591f\u65f6\u95f4\u56de\u53bb\uff0c\u90a3\u4e0b\u4e00\u68f5\u5c31\u4e0d\u6458\u4e86\uff0c\u8dd1\u56de\u53bb\n   end\n  else break//\u4e0d\u591f\u65f6\u95f4\u5c31\u8dd1\n end;\n writeln(total)\nend.\n\n```",
        "postTime": 1428119750,
        "uid": 2699,
        "name": "Ufowoqqqo",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u9898\u76ee\u6761\u4ef6\u89c4\u5b9a\u4e86\u5fc5\u987b\u4ece\u6700\u5927\u7684\u82b1\u751f\u6570\u7684\u5750\u6807\u5f00\u59cb\uff0c\u56e0\u6b64\u5c31\u662f\u4e00\u4e2a\u5750\u6807\u8fd0\u7b97\uff01\u53ea\u8981\u80fd\u591f\u627e\u597d\u5faa\u73af\u7684\u9000\u51fa\u6761\u4ef6\u5c31\u884c\uff01\n\n------------\n~~\u8fd9\u91cc\u5c31\u4e0d\u8be6\u7ec6\u8bf4\u660e\u4e86\uff0c\u4ee3\u7801\u91cc\u6709\u8be6\u7ec6\u7684\u6ce8\u91ca~~ \n\n------------\n\u4ee3\u7801\u5982\u4e0b\n\n------------\n```cpp\n#include<iostream>\nusing namespace std;\n\nconst int inf = 21;\nint a[inf][inf];\n//\u7edd\u5bf9\u503c\u51fd\u6570\uff0c\u4fdd\u8bc1\u5750\u6807\u8fd0\u7b97\u4e3a\u6b63\nint Abs(int x){\n    if(x<0) return -x;\n    else return x;\n}\nint main(){\n    int n,m,t;\n    cin>>n>>m>>t;\n\n    //\u521d\u59cb\u5316\u6570\u636e\n    for(int i=1;i<=n;++i)\n        for(int j=1;j<=m;++j)\n            cin>>a[i][j];\n    \n    int ans=0,ans_sum=0;//ans\u7528\u6765\u5b58\u65f6\u95f4\uff0cans_sum\u7528\u6765\u5b58\u653e\u82b1\u751f\u7684\u6570\u91cf\n    int s=0,e=0;//\u7528\u6765\u8bb0\u5f55\u4e0a\u4e00\u6b21\u7684\u82b1\u751f\u4f4d\u7f6e\n    int flag=0;//\u6807\u8bb0\u53d8\u91cf\n    while(1){\n        int x=0,y=0; int mmax=-1;\n        //\u627e\u5230\u6700\u5927\u503c\u5bf9\u5e94\u7684\u4f4d\u7f6e\n        for(int i=1;i<=n;++i)\n            for(int j=1;j<=m;++j)\n                if(mmax<a[i][j]){\n                    mmax=a[i][j];\n                    x=i; y=j;\n                }\n        //\u8fdb\u884c\u65f6\u95f4\u548c\u82b1\u751f\u6570\u7684\u7edf\u8ba1\n        if(!flag){ans+=x+1; ans_sum+=a[x][y]; flag=1;}\n        else{\n            ans+=Abs(x-s)+Abs(y-e)+1; ans_sum+=a[x][y];\n        }\n        //\u5982\u679c\u5230\u4e86\u8fd9\u4e2a\u82b1\u751f\u5e76\u91c7\u6458\u4e86\uff0c\u5224\u65ad\u662f\u5426\u80fd\u591f\u56de\u53bb\n        if(x>t-ans){\n            ans_sum-=a[x][y];//\u5982\u679c\u4e0d\u80fd\u56de\u53bb\u5c31\u8981\u51cf\u53bb\u8fd9\u6b21\u7684\u82b1\u751f\u6570\n            break;\n        }\n        \n        s=x; e=y;\n        a[x][y]=0;\n    }\n    //\u8f93\u51fa\u7ed3\u679c\n    cout << ans_sum << endl;\n\n    //system(\"pause\");\n    return 0;\n}\n```\n  \n",
        "postTime": 1567700682,
        "uid": 172955,
        "name": "Lngstart",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "```C++\n/**\n * luogu 1086 \u82b1\u751f\u91c7\u6458\n * NOIP 2004 \u666e\u53ca\u7ec4 T2\n * \u8d2a\u5fc3\u6cd5\n * \u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u6309\u7167\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u6458\u82b1\u751f\n * \u6240\u4ee5\u53ef\u4ee5\u6309\u7167\u82b1\u751f\u6570\u91cf\u6392\u5e8f, \u7136\u540e\u5c3d\u53ef\u80fd\u591a\u5730\u91c7\u6458\n * \u5373\u53ea\u8981\u4ece\u5f53\u524d\u4f4d\u7f6e(\u521d\u59cb\u4e3aRoad)\u53ef\u4ee5\u8d70\u5230\u4e0b\u4e00\u682a\u82b1\u751f, \u91c7\u6458, \u8fd4\u56de, \n * \u90a3\u4e48\u5c31\u53bb\u91c7\u6458, \u53cd\u4e4b, \u5982\u679c\u65f6\u95f4\u4e0d\u591f\u8fd4\u56de\u4e86, \u90a3\u5c31\u5230\u6b64\u4e3a\u6b62, \u4e0d\u518d\u91c7\u6458\n */\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nstruct Point\n{\n    int x, y;\n    int peanut;\n\n    // \u66fc\u54c8\u987f\u8ddd\u79bb\n    int distanceTo(const Point &other) const\n    {\n        return abs(x - other.x) + abs(y - other.y);\n    }\n\n    int distanceToRoad() const\n    {\n        return x;\n    }\n};\n\nbool cmp(const Point &lhs, const Point &rhs)\n{\n    return lhs.peanut > rhs.peanut;\n}\n\nint M, N, K;\nint field[25][25];\nPoint peanuts[405];\n\nint main()\n{\n    cin >> M >> N >> K;\n    for (int i = 1; i <= M; i++)\n    {\n        for (int j = 1; j <= N; j++)\n        {\n            cin >> field[i][j];\n            peanuts[(i - 1) * N + j - 1] = (Point){i, j, field[i][j]};\n        }\n    }\n    sort(peanuts, peanuts + M * N, cmp);\n\n    if (peanuts[0].distanceToRoad() * 2 + 1 > K)\n    {\n        cout << 0 << endl;\n        return 0;\n    }\n\n    // \"+1\", \u4e0d\u8981\u5fd8\u4e86\u91c7\u6458\u7684\u65f6\u95f4\n    int length = peanuts[0].distanceToRoad() + 1;\n    int ans = peanuts[0].peanut; // \u7b2c\u4e00\u682a\u662f\u4ece\u8def\u8fb9\u8d70\u8fc7\u53bb\u7684\n    for (int i = 1; i < M * N; i++)\n    {\n        int sum = peanuts[i].distanceTo(peanuts[i - 1]) + 1 +\n                  peanuts[i].distanceToRoad();\n        if (length + sum > K) // \u53d1\u73b0\u6458\u4e86\u4e0b\u4e00\u682a\u82b1\u751f\u4e4b\u540e\u56de\u4e0d\u53bb\u4e86\n        {\n            break;\n        }\n        length += peanuts[i].distanceTo(peanuts[i - 1]) + 1;\n        ans += peanuts[i].peanut;\n    }\n    cout << ans << endl;\n\n    return 0;\n}\n```",
        "postTime": 1554069716,
        "uid": 6146,
        "name": "Skyo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "# Java\n\n\u8fd9\u9898\u601d\u8def\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u6211\u81ea\u5df1\u7ed9\u81ea\u5df1\u627e\u9ebb\u70e6\uff0c\u7b97\u662f\u63d0\u9ad8\u81ea\u5df1\u6c34\u5e73\u3002\u7279\u5730\u53bb\u5b66\u4e86\u5b66\u5185\u90e8\u7c7b\u548cHashMap\u548cTreeMap\uff0c\u4e00\u6b21\u5c31\u8fc7\u4e86\uff0c\u8212\u670d\u4e86~~\n~~(\u521a\u51fa\u65b0\u624b\u6751\u7684\u840c\u65b0)~~\n### \u601d\u8def\n\u60f3\u6cd5\u662f\u8f93\u5165\u7684\u65f6\u5019\u628a\u6709\u503c\u7684\u70b9\u4fdd\u5b58\u4e0b\u6765\uff0c\u5e76\u4e14\u628a\u5bf9\u5e94\u7684\u5750\u6807\u503c\u8bb0\u5f55\u4e0b\u6765\u3002\u8fd9\u662f\u4e3a\u4e86\u65b9\u4fbf\u63a5\u4e0b\u6765\u7b97\u4e24\u4e2a\u70b9\u4e4b\u524d\u7684\u4f4d\u79fb\u7b49\u7b49\u3002\u6211\u4e00\u4e0b\u5b50\u60f3\u5230\u6570\u636e\u7ed3\u6784\u4e66\u4e0a\u7684\u7ed3\u6784\u4f53\u3002\u4f46\u662fjava\u8001\u5e08\u597d\u50cf\u6ca1\u600e\u4e48\u63d0\u8fc7(\u53ef\u80fd\u662f\u6211\u5f00\u5c0f\u5dee)\uff0c\u4e8e\u662f\u6211\u7528**\u5185\u90e8\u7c7b**\u4eff\u7167\u7740\u5199\u4e00\u4e0b\u3002\n\n\u9898\u76ee\u5bf9\u503c\u6709\u660e\u786e\u7684\u5927\u5c0f\u9009\u62e9\u5173\u7cfb\uff0c\u4e8e\u662f\u6211\u9009\u62e9\u7684\u662f _TreeMap(\u4ece\u5c0f\u5230\u5927)_ ,\u952e\u503c\u5bf9\u91cc\u9762**key\u5b58\u5165\u7684\u662f\u82b1\u751f\u6570\u91cf**\uff0c**value\u5b58\u7684\u662f\u4e00\u4e2a\u5185\u90e8\u7c7b\u7684\u5f15\u7528**\u3002\u8fd9\u4e2a\u5185\u90e8\u7c7b\u5c31\u662fC\u8bed\u8a00\u91cc\u9762\u7684\u7ed3\u6784\u4f53\u3002\u5b58\u7684\u662f\u5750\u6807\u503cx,y\u3002\n\n1. \u5206\u7c7b\u8ba8\u8bba\u662f\u5426\u7b2c\u4e00\u6b65\uff0c\u7b2c\u4e00\u6b65\u4e0d\u7528\u5217\u5750\u6807\u76f8\u51cf\uff1b\n2. \u5728\u4e0a\u4e00\u6b65\u91cc\u9762\u7ee7\u7eed\u5206\u7c7b\u8ba8\u8bba\u662f\u5426\u53ef\u4ee5\u53bb\u5230\u4e0b\u4e00\u4e2a\u70b9(\u53bb\u4e86\u80fd\u56de\u5bb6\u5c31\u8868\u793a\u53ef\u4ee5\u53bb\u4e0b\u4e00\u4e2a\u70b9)\u3002\n\u80fd\uff0c\u5219\u9012\u5f52\u8fdb\u4e0b\u4e00\u4e2a\u70b9\uff1b\u4e0d\u80fd\uff0c\u5373\u4f53\u529b\u4e0d\u591f\uff0c\u56de\u5bb6return\uff1b\n3. \u9012\u5f52\u4ee5\u4e0a\uff0c\u4f53\u529b\u7528\u5b8c \u6216 \u5168\u90e8\u91c7\u96c6\u4e3a\u9012\u5f52\u51fa\u53e3return\u3002\n\n\u8be6\u7ec6\u7684\u6211\u4e0b\u9762\u7684\u4ee3\u7801 _\u6709\u6ce8\u91ca_ \uff0c\u50cf\u8001\u6bcd\u4eb2\u8bf4\u8bdd\u4e00\u6837\u8be6\u7ec6~~(\u5520\u53e8)~~\n\n### \u6ce8\u610f\n1.  \u7531\u4f8b\u4e8c\u53ef\u4ee5\u77e5\u9053** _\u4e0d\u6c42\u6700\u4f18\u89e3\uff0c\u4e0d\u9700\u8981\u8d2a\u5fc3_ **\u3002\u5373\u5982\u679c\u4e00\u4e2a\u8f83\u5927\u7684\u503c\u5224\u65ad\u540e\u4e0d\u53ef\u53d6\uff0c\u90a3\u4e48\u4e0d\u7528\u770b\u5269\u4e0b\u8f83\u5c0f\u7684\uff0c\u76f4\u63a5\u8f93\u51fa\u7ed3\u679c\u3002\n\n2.  \u8d70**\u7b2c\u4e00\u6b65**\u7684\u60c5\u51b5\u548c\u4e4b\u540e\u7684\u6b65\u9aa4\u662f**\u4e0d\u540c**\u7684\u54df\uff0c\u4e0d\u7528\u5224\u65ad\u662f\u7b2c\u51e0\u5217\u5f00\u59cb\n\n\n~~\u6709\u4eba\u54a9\uff1f\u8be6\u7ec6\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff08\u6709\u95ee\u9898\u6216\u5efa\u8bae\u53ef\u4ee5\u63d0\u54df(\uff3e\uff35\uff3e)\u30ce~\uff09~~\n\n------------\n```java\nimport java.io.BufferedInputStream;\nimport java.util.*;\nimport java.util.Map.*;\n\npublic class Main {\n\tstatic int m,n,k,sum; //\u51e0\u884c \u51e0\u5217 \u4f53\u529b\u503c \u91c7\u82b1\u751f\u6570\n\tstatic int[][] t;//\u8f93\u5165\u7528\u7684\u77e9\u9635\uff0c\u6211\u5728\u60f3\u662f\u4e0d\u662f\u53ef\u4ee5\u4e0d\u7528\u5199\u8fd9\u4e2a\u3002\u6ca1\u7528\n\tstatic TreeMap<Integer,XY> map;\t//\u952e\u503c\u5bf9  key\u662f\u82b1\u751f\u6570\u91cf\uff0cvalue\u662fXY\u7684\u5f15\u7528\n\tstatic int[] a; //\u8bb0\u5f55\u6709\u503c\u7684\u70b9 \n\t//\u5c06\u6709\u6709\u503c\u7684\u70b9\u7684(x,y)\u5750\u6807\u8bb0\u5f55\u4e0b\u6765\uff0c\u7b49\u4e0b\u8981\u7528  \n\tclass XY{\n\t\tpublic int x,y;\t\t//x\u884c\u6570   y\u5217\u6570\t  (\u522b\u548c\u6570\u5b66\u5750\u6807\u641e\u6df7\u4e86)\n\t\t\n\t\tpublic int getX() {\n\t\t\treturn x;\n\t\t}\n\t\tpublic int getY() {\n\t\t\treturn y;\n\t\t}\n\t\tpublic XY(int x, int y) {\n\t\t\tsuper();\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\t\n\t}\n\t\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(new BufferedInputStream(System.in));\n\t\twhile(sc.hasNext()){\n\t\t\tm = sc.nextInt(); n = sc.nextInt(); k = sc.nextInt();\n\t\t\tt = new int[m+1][n+1];\n\t\t\tmap  = new TreeMap<Integer, XY>();\t//\u521d\u59cb\u5316TreeMap\n\t\t\tMain test = new Main();\t//\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5916\u90e8\u7c7b,\u7528\u6765\u5b9e\u4f8b\u5316\u5185\u90e8\u7c7bXY\n\t\t\t\n\t\t\t//\u8f93\u5165  &  \u627e\u51fa\u6709\u503c\u7684\u70b9\n\t\t\tfor(int i=1;i<=m;i++)\n\t\t\t\tfor(int j=1;j<=n;j++){\n\t\t\t\t\tt[i][j] = sc.nextInt();\n\t\t\t\t\tif(t[i][j]!=0){\n\t\t\t\t\t\tXY zuobiao = test.new XY(i, j);\n\t\t\t\t\t\tmap.put(t[i][j],zuobiao);\t//\u5b58\u8fd9\u4e2a\u503c \u548c \u5750\u6807\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t//\u9898\u76ee\u662f\u4ece\u5927\u5230\u5c0f\u3002\u3002\u800cTreeMap\u7684\u4ece\u5c0f\u5230\u5927\u3002\u9ebb\u70e6\uff0c\u5b58\u5230\u6570\u7ec4\u7b97\u4e86\n\t\t\t//\u904d\u5386\u4e00\u4e0b\u3002\u3002\u628akey\u952e\u503c(\u82b1\u751f\u6570)\u5b58\u5230\u6570\u7ec4a\u91cc\u9762 \n\t\t\tint i=map.size()-1; \t\t//\u4e0b\u6807\u521d\u59cb\u5316\n\t\t\ta = new int[map.size()];\t\n\t\t\tIterator iter = map.entrySet().iterator();//\u8fed\u4ee3\u5668\u904d\u5386TreeMap\n\t\t\twhile(iter.hasNext()){\t//\u6570\u7ec4\u91cc\u9762\u662f\u4ece\u5927\u5230\u5c0f\n\t\t\t\tMap.Entry entry = (Entry)iter.next();\n\t\t\t\ta[i--] =  (Integer) entry.getKey();\n\t\t\t}\n\n\t\t\tsum = 0;\t//\u521d\u59cb\u5316\n\t\t\tpan(k, 0);\t//\u8c03\u7528\uff0c\u5224\u65ad\u7b2c\u4e00\u4e2a\u6700\u5927\u7684\u82b1\u751f\u6570\u53ef\u4ee5\u91c7\u6458\u5417\n\t\t\t\n\t\t\tSystem.out.println(sum);\t//\u7ec8\u4e8e\u5b8c\u4e86\uff0c\u8f93\u51fa\u54af\n\n\t\t}sc.close();\n\t}\n\t\n\n\t//\u9012\u5f52\u5224\u65ad\u4e2a\u70b9  \u901a\u8fc7\u4f8b2\u53ef\u77e5\u627e\u4e0d\u5230\u5c31\u56de\u5bb6\uff0c\u4e0d\u7528\u8d2a\u5fc3\uff01\uff01\uff01\n\tpublic static void pan(int k,int num){\t//\u5269\u4f59\u4f53\u529b\u503c \u7b2c\u51e0\u53f7\u70b9\n\t\tif(num==a.length||k==0){//\u9012\u5f52\u51fa\u53e3 \u5168\u90e8\u5224\u65ad\u5b8c\n\t\t\treturn;\n\t\t}else {\n\t\t\tif(num==0){//\u7b2c\u4e00\u4e2a\u60c5\u51b5\u7279\u522b\uff0c\u4e0d\u7528\u5224\u65ad\u5217\u8d70\u4e86\u591a\u5c11\n\t\t\t\t//\u53bb\u3001\u56de\u6765\u3001\u91c7\u6458\u7684\u4f53\u529b>\u5269\u4f59\u4f53\u529b \n\t\t\t\tif(map.get(a[num]).getX()+1+map.get(a[num]).getX()>k){\n\t\t\t\t\treturn;//\u51fa\u95e8\u5c31\u6ca1\u4f53\u529b\uff0c\u641e\u6bdb\u554a\n\t\t\t\t}else {\n\t\t\t\t\tsum+=a[num];\t//\u6536\u96c6\u82b1\u751f\n\t\t\t\t\t//\u51cf\u53bb  \u53bb\u3001\u91c7\u6458 \u7684\u4f53\u529b(\u56de\u5bb6\u7684\u4f53\u529b\u522b\u51cf\u4e86)\n\t\t\t\t\tk-=(map.get(a[num]).getX()+1);\n\t\t\t\t\tpan(k, num+1);\t//\u68c0\u9a8c\u4e0b\u4e00\u4e2a\u70b9\n\t\t\t\t}\n\t\t\t}else {//\u5176\u4ed6\u9700\u8981\u5224\u65ad\u5217\u548c\u6a2a\uff0c\u91c7\u6458\uff0c\u56de\u5bb6\u7684\u6d88\u8017\u4f53\u529b\u503c\n\t\t\t\t//\u53bb\u3001\u56de\u6765\u3001\u91c7\u6458\u7684\u4f53\u529b>\u5269\u4f59\u4f53\u529b  \uff08\u5224\u65ad\u53ef\u4ee5\u53bb \u4e0b\u4e2a\u70b9 \u5417\uff09\n\t\t\t\t// |xa - xb| + |ya - yb| + 1 + xa > k     (a\u5f53\u524d  b\u4e0a\u4e00\u4e2a)\n\t\t\t\tif(Math.abs(map.get(a[num]).getX()-map.get(a[num-1]).getX())\n\t\t\t\t\t\t+Math.abs(map.get(a[num]).getY()-map.get(a[num-1]).getY())\n\t\t\t\t\t\t+map.get(a[num]).getX()+1>k){ \n\t\t\t\t\treturn;\t//\u4f53\u529b\u503c\u4e0d\u591f\uff0c\u76f4\u63a5\u5f52\u5bb6\n\t\t\t\t}else {\t//\u8868\u793a\u53bb\u4e0b\u4e2a\u70b9\u540e\u53ef\u4ee5\u56de\u5bb6\uff0c\u90a3\u5c31\u53bb\u5457\u3002\n\t\t\t\t\tsum+=a[num];\n\t\t\t\t\t//\u51cf\u53bb  \u53bb\u3001\u91c7\u6458 \u7684\u4f53\u529b(\u56de\u5bb6\u7684\u4f53\u529b\u522b\u51cf\u4e86)\n\t\t\t\t\tk-=(Math.abs(map.get(a[num]).getX()-map.get(a[num-1]).getX())\n\t\t\t\t\t\t\t+Math.abs(map.get(a[num]).getY()-map.get(a[num-1]).getY())\n\t\t\t\t\t\t\t+1);\n\t\t\t\t\tpan(k, num+1);\t//\u68c0\u9a8c\u4e0b\u4e00\u4e2a\u70b9\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\t\n}\n\n```",
        "postTime": 1548762105,
        "uid": 105705,
        "name": "Forgetter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u4e00\u5b9a\u8981\u8ba4\u771f\u5ba1\u9898\uff0c\u5173\u952e\u70b9\uff1a\n   1\u3002\u6309\u7167\u82b1\u751f\u591a\u5c11\u6570\u91cf\u987a\u5e8f\u8d70\u3002\u4e0d\u662f\u627e\u6700\u4f18\u8def\u5f84\uff0c\u4e5f\u4e0d\u662f\u600e\u4e48\u6458\u5230\u603b\u6570\u6700\u591a\uff08\u5982\u679c\u662f\u8fd9\u6837\u8981\u6c42\uff0c\u9898\u76ee\u96be\u5ea6\u5c31\u4e0a\u5347\u4e86\u4e24\u4e2a\u53f0\u9636\u4e86\uff09\u3002\n   2\u3002\u8fdb\u51fa\u548c\u91c7\u6458\u82b1\u751f\u90fd\u8981\u7528\u5230\u65f6\u95f4\n\u628a\u6709\u82b1\u751f\u7684\u690d\u682a\u63d0\u53d6\u51fa\u6765\uff0c\u5e76\u4e14\u6309\u7167\u82b1\u751f\u6570\u91cf\u6392\u5e8f\uff0c\u591a\u7684\u5728\u524d\u9762\u3002\n\u5269\u4e0b\u7684\u7684\u95ee\u9898\u5c31\u662f\u52a8\u6001\u89c4\u5212\u7684\u95ee\u9898\u4e86\n\u8bb0\u5f55\u5f53\u524d\u7684\u4f4d\u7f6e\uff0c\u5df2\u7ecf\u5df2\u7ecf\u7528\u6389\u7684\u65f6\u95f4\uff0c\u7136\u540e\u52a8\u6001\u5224\u65ad\u53bb\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u91c7\u6458\u518d\u8d70\u51fa\u65f6\u95f4\u662f\u5426\u591f\u7528\u3002\n\u4ee3\u7801\u5982\u4e0b\n\n```\n#include <iostream>\n#include <algorithm> // sort()\n#include <cstring>  // memset\nusing namespace std;\n\n// \u82b1\u751f\u690d\u682a\nstruct Peanut {\n    int x, y;  // \u4f4d\u7f6e\uff0c\u5f55\u5165\u7684\u65f6\u5019\u628a\u884c\u6570\u52a01\uff0c\u65b9\u4fbf\u8ba1\u7b97\n    int n;     // \u82b1\u751f\u6570\u91cf\n};\n\n//\n// \u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u7528\u4e8e\u6839\u636e\u82b1\u751f\u6570\u91cf\u5bf9\u82b1\u751f\u690d\u682a\u6392\u5e8f\n//   \u9898\u76ee\u5df2\u7ecf\u786e\u5b9a\u4e0d\u540c\u7684\u690d\u682a\u4e0b\u9762\u7684\u82b1\u751f\u6570\u4e0d\u540c\u4e86\uff0c\u4e0d\u8003\u8651\u4f4d\u7f6e\u5173\u7cfb\nint compare(Peanut p1, Peanut p2) {\n    return p1.n > p2.n;\n};\n\nint main() {\n    int M, N, K;\n    cin >> M >> N >> K;\n    Peanut peanut[400];  // \u6700\u591a400\u4e2a\u6709\u82b1\u751f\u7684\u690d\u682a\n    memset(peanut, 0, 400*sizeof(Peanut));\n    int nCount=0;\n    \n    // \u6ce8\u610fi\u5faa\u73af\u4ece1\u5f00\u59cb\uff0c\u56e0\u4e3a\u8fdb\u5165\u82b1\u751f\u7530\u7b2c\u4e00\u884c\u5c31\u8981\u4e00\u6b65\uff0c\u6240\u4ee5\u4e0d\u662f0\n    for ( int i=1; i<=M; i++) {\n        for ( int j=0; j<N; j++) {\n            int t;\n            cin >> t;\n            if ( t !=0 ) {\n                peanut[nCount].x = i;\n                peanut[nCount].y = j;\n                peanut[nCount].n = t;\n                nCount++;\n            };\n        };\n    };\n    \n    // \u5bf9\u82b1\u751f\u6392\u5e8f\n    sort(peanut, peanut+nCount, compare);\n    \n    int nStep = 0;  // \u8bb0\u5f55\u5df2\u7ecf\u8d70\u4e86\u591a\u5c11\u6b65\uff0c\u63a7\u5236\u4e0d\u8d85\u8fc7K\n    int nPeanut=0;  // \u8bb0\u5f55\u5df2\u7ecf\u6536\u83b7\u5230\u7684\u82b1\u751f\u6570\u91cf\uff0c\u6700\u7ec8\u8f93\u51fa\u7ed3\u679c\n    int nCur=0;     // \u8bb0\u5f55\u5f53\u524d\u8d70\u5230\u4e86\u54ea\u4e00\u9897\u82b1\u751f\u690d\u682a\u4e0b\n    // \u5148\u5224\u5b9a\u6700\u591a\u7684\u82b1\u751f\u662f\u5426\u53ef\u4ee5\u62ff\u5230\uff1b \u8fdb\u5165 \u6458 \u51fa\u6765\n    if ( peanut[0].x*2 + 1> K) {\n        // \u62ff\u4e0d\u5230\uff0c\u53ea\u80fd\u7a7a\u624b\u800c\u56de\u4e86\n        cout << 0;\n        return 0;\n    } else {\n        nCur     = 0;               // \u5f53\u524d\u4f4d\u7f6e\n        nStep   += peanut[0].x+1;   // \u5df2\u7ecf\u7528\u7684\u65f6\u95f4\n        nPeanut += peanut[0].n;     // \u5df2\u7ecf\u91c7\u6458\u7684\u82b1\u751f\u6570\u91cf\n    };\n    while ( nStep < K ) {\n        // \u5224\u65ad\u5230\u4e0b\u4e2a\u82b1\u751f\u7684\u8ddd\u79bb\u52a0\u4e0a\u79bb\u5f00\u662f\u5426\u53ef\u4ee5\u6ee1\u8db3\n        if ( nCur >= nCount-1 ) {\n            // \u6240\u6709\u82b1\u751f\u90fd\u6458\u5b8c\u4e86\uff0c\u53ea\u80fd\u9000\u51fa\u4e86\n            break;\n        }\n        int d=abs(peanut[nCur].x-peanut[nCur+1].x) + abs(peanut[nCur].y-peanut[nCur+1].y);\n        if ( nStep + d + 1 + peanut[nCur+1].x > K) {\n            // \u5230\u4e0b\u4e00\u4e2a\u6700\u591a\u82b1\u751f\u4f4d\u7f6e + \u6458 + \u79bb\u5f00\u6240\u8981\u7684\u65f6\u95f4\u4e0d\u591f\u4e86\n            break;\n        };\n        // \u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u5e76\u4e14\u91c7\u6458\u82b1\u751f\n        nCur    ++;\n        nStep   += d + 1;  // \u8d70\u8def + \u6458\u82b1\u751f\n        nPeanut += peanut[nCur].n;\n    };\n    nStep += peanut[nCur].x; // \u6700\u540e\u4e00\u6b65\u8d70\u51fa\u82b1\u751f\u7530\n    cout << nPeanut;\n    return 0;\n}\n\n```",
        "postTime": 1548673349,
        "uid": 141918,
        "name": "fakefire",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7528\u964d\u7ef4\u5927\u6cd5\uff01\n\u2014\u2014\u2014\u2014\u7528\u7ed3\u6784\u4f53\u6765\u5b9e\u73b0\u4e8c\u7ef4\u6570\u7ec4\u7684\u964d\u7ef4\u6392\u5e8f\u3002\u53ea\u9700\u898133\u884c\u3002\n\n------------\n\n\u5efa\u4e8c\u7ef4\u6570\u7ec4\u518d\u53cd\u590d\u627e\u6700\u5927\u503c\u662f\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\uff0c\u4f46\u8fd9\u6837\u65e2\u6ca1\u5fc5\u8981\uff0c\u4e5f\u8d39\u65f6\u95f4\u3002\u6ce8\u610f\uff0c\u9898\u76ee\u8981\u6c42\u662f\u6309\u82b1\u751f\u6570\u4ece\u5927\u5230\u5c0f\u4f9d\u6b21\u5bfb\u627e\uff0c\u6240\u4ee5\u4e0d\u8981\u7528\u8d2a\u5fc3\u3001\u6df1\u641c\uff0c\u53ea\u8981\u80fd\u6392\u5e8f\u5c31\u80fd\u89e3\u51b3\u4e86\u3002\u8fd9\u6837\u53c8\u6709\u4e09\u4e2a\u95ee\u9898\u9700\u8981\u89e3\u51b3\u3002\n\n------------\n\n\u4e00\u662f\u4e8c\u7ef4\u6570\u7ec4\u5982\u4f55\u6392\u5e8f\uff1f\u5148\u4e00\u7ef4\u5316\uff0c\u518d\u6392\u5e8f\uff0c\u4f46\u9700\u8981\u8bb0\u5f55\u884c\u53f7\u5217\u53f7\uff0c\u56e0\u4e3a\u8981\u8ba1\u7b97\u4e0e\u690d\u682a\u3001\u4e0e\u8def\u8fb9\u7684\u8ddd\u79bb\u3002\u8fd9\u6837\u5c31\u8981\u7528\u5230\u7ed3\u6784\u4f53\u3002\n\n------------\n\n\u4e8c\u662f\u80fd\u4e0d\u80fd\u91c7\u6458\u5982\u4f55\u5224\u65ad\uff1f\u8981\u505a\u4e09\u4ef6\u4e8b\uff0c\u80fd\u53bb\u3001\u80fd\u91c7\u3001\u80fd\u56de\u8def\u8fb9\u3002\u80fd\u53bb\u5c31\u8981\u7528\u4e0e\u4e0b\u4e00\u4e2a\u690d\u682a\u7684\u8ddd\u79bb\uff0c\u4e5f\u5c31\u662f\u76f8\u5e94\u884c\u53f7\u3001\u5217\u53f7\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u4e4b\u548c\u5224\u65ad\uff0c\u6ce8\u610f\u4e0d\u662f\u5e73\u9762\u5750\u6807\u7cfb\u4e0a\u4e24\u70b9\u7684\u8ddd\u79bb\uff1b\u80fd\u91c7\u662f1\u5355\u4f4d\u65f6\u95f4\uff0c\u80fd\u56de\u8def\u8fb9\u662f\u884c\u53f7\u51cf0\u3002\n\n------------\n\n\u4e09\u662f\u6ce8\u610f\u51e0\u4e2a\u5751\u3002\u7b2c\u4e00\uff0c\u4f1a\u4e0d\u4f1a\u4e00\u682a\u4e5f\u91c7\u4e0d\u4e86\uff1f\u7b2c1\u6b21\u662f\u4ece\u8def\u8fb9\u76f4\u63a5\u8fdb\u53bb\uff0c\u4e0e\u5217\u53f7\u65e0\u5173\uff0c\u6ca1\u6709\u8ddd\u79bb\u7684\u8ba1\u7b97\uff0c\u6709\u7279\u6b8a\u6027\uff0c\u6240\u4ee5\u8981\u5bf9\u7b2c1\u6b21\u91c7\u6458\u7279\u5224\u3002\u7b2c\u4e8c\uff0c\u91c7\u6700\u540e\u4e00\u682a\u65f6\u4e0d\u9700\u8981\u8fdb\u884c\u80fd\u53bb\u4e0b\u4e00\u682a\u7684\u5224\u65ad\uff0c\u8fd9\u65f6\u600e\u4e48\u5904\u7406\uff1f\u76f4\u63a5\u80fd\u56de\u8def\u8fb9\u5c31\u53ef\u4ee5\uff0c\u8981\u9632\u6b62\u6570\u7ec4\u8fc7\u754c\u3002\u7b2c\u4e09\uff0c\u4f1a\u4e0d\u4f1a\u53bb\u4e86\u4f46\u4e0d\u591f\u91c7\uff0c\u6216\u8005\u4e0d\u80fd\u56de\uff1f\u6bcf\u6b21\u66f4\u65b0\u5269\u4f59\u65f6\u95f4\u65f6\uff0c\u80fd\u53bb\u4e0b\u4e00\u682a\u91c7\u6458\u7684\u524d\u63d0\u662f\u95ee\u98982\u7684\u4e09\u4ef6\u4e8b\uff0c\u56de\u8def\u8fb9\u5df2\u7ecf\u4f5c\u4e86\u5224\u65ad\uff0c\u6240\u4ee5\u65e2\u7136\u5230\u4e86\u4e0b\u4e00\u4e2a\u690d\u682a\uff0c\u5c31\u80fd\u591f\u4ece\u90a3\u91cc\u91c7\u4e86\u76f4\u63a5\u56de\u8def\u8fb9\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct pea{\n\tint a,b,s;//\u884c\u3001\u5217\u53f7\u53ca\u82b1\u751f\u6570,\u884c\u53f7a\u540c\u65f6\u662f\u56de\u8def\u8fb9\u6b65\u6570 \n}p[600];\nbool cmp(pea x,pea y){//\u6309\u82b1\u751f\u6570\u6392\u5e8f\u89c4\u5219 \n\treturn x.s>y.s;\n}\nint main()\n{\n    int m,n,k,i,j,r=0,t,ans=0;\n    scanf(\"%d%d%d\",&m,&n,&k);\n    for(i=1;i<=m;++i)\n    for(j=1;j<=n;++j)\n    {\n    \t++r;//\u7ed3\u6784\u4f53\u6570\u7ec4\u4e2a\u6570\u8ba1\u6570,\u6700\u7ec8r=m*n \n    \tscanf(\"%d\",&p[r].s);\n\t\tp[r].a=i,p[r].b=j;//\u8bb0\u5f55\u82b1\u751f\u6570\u53ca\u884c\u5217\u53f7 \n\t}\n\tsort(p+1,p+1+r,cmp);//\u5168\u90e8\u6309\u82b1\u751f\u6570\u4ece\u5927\u5230\u5c0f\u6392\u597d \n\tif(k>=1+2*p[1].a)//\u91c7\u6458\u9700\u89811\u5355\u4f4d\u65f6\u95f4\uff0c\u7b2c1\u6b21\u76f4\u63a5\u53bb\u5e76\u4e14\u80fd\u56de\uff0c\n\t\tk-=p[1].a+1,ans+=p[1].s;//\u53bb\u5e76\u4e14\u91c7\u6458\uff0c\u66f4\u65b0\u5269\u4f59\u65f6\u95f4\uff0c\u718a\u505c\u5728a1\n\telse {printf(\"0\");return 0;}//\u5426\u5219\u4e0d\u591f\u65f6\u95f4\u91c7\u6458\u548c\u56de\u6765\u5c31\u8f93\u51fa0\u4e2a \n\tfor(i=1;i<r;++i)//\u7ad9\u5728\u7b2c\u4e00\u682a\u82b1\u751f\u65c1\u5411\u4e0b\u4e00\u6b65\u770b\n\t{\n\t\tt=abs(p[i].a-p[i+1].a)+abs(p[i].b-p[i+1].b);//\u4e0e\u4e0b\u4e00\u70b9\u8ddd\u79bb \n\t\tif(k>=t+1+p[i+1].a)//\u80fd\u53bb\u3001\u91c7\u3001\u56de\u8def\u8fb9,\u6700\u540e\u4e00\u6b65\u4e5f\u662f\u5982\u6b64 \n\t\t\tk-=t+1,ans+=p[i+1].s;//\u5c31\u53bb\u91c7\uff0c\u66f4\u65b0\u5269\u4f59\u65f6\u95f4\u548c\u91c7\u6458\u6570 \n\t\telse break;//\u4e0d\u80fd\u91c7\u5c31\u9000\u51fa \n\t}\n\tprintf(\"%d\",ans);\n    return 0;\n}\n\n```\n- ",
        "postTime": 1545828583,
        "uid": 62715,
        "name": "buickboy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e3b\u8981\u5c31\u641e\u6e05\u695a\u4e00\u4ef6\u4e8b\u5c31\u53ef\u4ee5\u4e86\uff1a\n\n\u591a\u591a\u53bb\u91c7\u6458\u82b1\u751f\u7684\u65f6\u95f4=\u8d70\u4e86\u51e0\u884c+\u8d70\u4e86\u51e0\u5217+\u91c7\u6458\u65f6\u95f4\n#### \u534e\u4e3d\u7684\u4ee3\u7801\u65e0\u9700\u4efb\u4f55\u8bed\u8a00\u6765\u5f62\u5bb9\n###### ~~\u6211\u624d\u4e0d\u544a\u8bc9\u4f60\u6211\u82b1\u4e86\u4e24\u4e2a\u5c0f\u65f6\u624d\u505a\u51fa\u6765\u7684~~\n```\n#include<iostream>\n#include<cmath>\nusing namespace std;\nint n,m,a[1000][1000],sz;\nint ans=0;\nint mai=0,maj=0;//\u5b9a\u4e49\u4e00\u4e9b\u4e71\u4e03\u516b\u7cdf\u7684\u4e1c\u4e1c\nvoid chs(int xx,int yy)\n{  int i,j;\t\n   for(i=1;i<=n;i++)\n        for(j=1;j<=m;j++)\n            if(a[mai][maj]<a[i][j])//\u5bfb\u627e\u82b1\u751f\u6700\u591a\u7684\u90a3\u68f5\n            \t{ mai=i;  maj=j;}\n    if((abs(mai-xx)+abs(maj-yy)+1+mai<=sz)&&a[mai][maj]!=0)//\u5224\u65ad\u6b65\u6570\u662f\u5426\u8db3\u591f\u8ba9\u591a\u591a\u91c7\u6458\u5b8c\u5e76\u4e14\u56de\u5230\u8def\u4e0a\n    {\t\n        if(ans==0)\n        sz=sz-abs(mai-xx)-1;//\u7b2c\u4e00\u6b21\u91c7\u6458\u4e0d\u7528\u8003\u8651\u5217\u6570\n        else\n        sz=sz-abs(mai-xx)-abs(maj-yy)-1;//\u51cf\u53bb\u9700\u8981\u884c\u8d70\u7684\u6b65\u6570\n        ans+=a[mai][maj];//\u91c7\u6458\u82b1\u751f\n        a[mai][maj]=0;//\u91c7\u6458\u5b8c\u540e\u8fd9\u682a\u5c31\u6ca1\u6709\u82b1\u751f\u4e86\n        chs(mai,maj);\t}\n    else return ;//\u9000\u51fa\u9012\u5f52\n\n}\nint main()\n{\n    int i,j;\n    cin>>n>>m>>sz;//\u8f93\u5165\u884c\u3001\u5217\u3001\u9650\u5236\u65f6\u95f4\n    for(i=1;i<=n;i++)\n        for(j=1;j<=m;j++)\n            \tcin>>a[i][j];//\u8f93\u5165\u6bcf\u68f5\u82b1\u751f\u5e95\u4e0b\u6709\u591a\u5c11\u82b1\u751f\n    a[0][0]=0;\n    chs(0,0);\n    cout<<ans;//\u8f93\u51fa\u7ed3\u679c\n    return 0;//\u534e\u4e3d\u7ed3\u675f\n}\n```",
        "postTime": 1544869975,
        "uid": 83565,
        "name": "zhanghb",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e0d\u9700\u8981\u8bb0\u5f55\u6574\u4e2a\u56fe\u554aorz\uff0c\u9898\u5e72\u4e0a\u5199\u4e86\u6709\u4e9b\u5730\u65b9\u6ca1\u6709\u82b1\u751f\uff0c\u6240\u4ee5\u80fd\u8282\u7701\u5c31\u8282\u7701\u4e00\u70b9\u5457\u3002  \n\u6211\u628a\u8def\u4e0a\u89c6\u4f5cx = 0\uff0c\u800c\u82b1\u751f\u7530\u7684\u5750\u6807\u4ece1\u5f00\u59cb\u3002\u8bb0\u5f55\u6bcf\u4e2a\u82b1\u751f\u4e1b\u7684\u5750\u6807\u548c\u4ef7\u503c\u3002\u90a3\u4e48\u4ece\u5f53\u524d\u4f4d\u7f6e\u5230\u6536\u83b7\u4e0b\u4e00\u4e2a\u82b1\u751f\u6700\u5c0f\u82b1\u8d39\u5c31\u662f\n\n\n- (\u5f53\u524d\u70b9\u5230\u4e0b\u4e00\u4e2a\u82b1\u751f\u70b9\u7684\u8ddd\u79bb + \u91c7\u6458\u6d88\u8d391 + \u4e0b\u4e00\u4e2a\u82b1\u751f\u70b9\u7684x\u5750\u6807)\n\n\u90a3\u4e48\u5c31\u5f88\u5bb9\u6613\u505a\u4e86\uff0c\u518d\u4f7f\u7528\u4f18\u5148\u961f\u5217\uff0c\u5728\u8f93\u5165\u82b1\u751f\u65f6\u5c31\u53ef\u4ee5\u5f97\u5230\u91c7\u6458\u987a\u5e8f\uff0c\u53ea\u9700\u8981\u5728\uff08\u961f\u5217\u975e\u7a7a\uff09\u6216\u8005\uff08\u4e0b\u4e00\u4e2a\u82b1\u751f\u65e0\u6cd5\u91c7\u6458\uff09\u7684\u60c5\u51b5\u8df3\u51fa\u91c7\u6458\u5faa\u73af\u5373\u53ef\u3002  \n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n\n```cpp\n\n#include <bits/stdc++.h>//\u5934\u6587\u4ef6\nusing namespace std;//\u547d\u540d\u7a7a\u95f4\n\nclass Peanut//\u82b1\u751f\u7c7b\n{\npublic:\n\tPeanut(){}\n\tPeanut(int x, int y, int value)//\u6784\u9020\u51fd\u6570\n\t{\n\t\tthis->x = x;\n\t\tthis->y = y;\n\t\tthis->value = value;\n\t}\n\t\n\tint x, y, value;//\u5750\u6807\u548c\u4ef7\u503c\n\n\tbool operator<(const Peanut &other) const\n\t{\n    \t//\u91cd\u8f7d\u5c0f\u4e8e\u53f7\uff0c\u6309\u4ef7\u503c\u6392\u5e8f\n\t\treturn this->value < other.value;\n\t}\n};\n\n//\u4f18\u5148\u961f\u5217\u5b58\u50a8\u82b1\u751f\u4fe1\u606f\uff08STL\u5927\u53d1\u543c\u554a\uff09\npriority_queue<Peanut> peanuts;\n\nint main(int argc, char const *argv[])\n{\n\t//\u5e73\u51e1\u5730\u8f93\u5165\n\tint m, n, k; scanf(\"%d%d%d\", &m, &n, &k);\n\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tfor (int j = 1; j <= n; j++)\n\t\t{\n        \t//\u5f53\u5f53\u524d\u4f4d\u7f6e\u6709\u82b1\u751f\u65f6\uff0c\u5f55\u5165\u4fe1\u606f\n\t\t\tint tmp; scanf(\"%d\", &tmp);\n\t\t\tif (tmp != 0)\n\t\t\t{\n\t\t\t\tpeanuts.push(Peanut(i, j, tmp));\n\t\t\t}\n\t\t}\n\t}\n\n\t//\u521d\u59cb\u5316\u4f4d\u7f6e\u4fe1\u606f\uff0c\u7a0d\u5fae\u7279\u5224\u4e00\u4e0b\u6ca1\u6709\u82b1\u751f\u7684\u60c5\u51b5\n    //value_get\u662f\u5f53\u524d\u6536\u83b7\u7684\u82b1\u751f\u6570\n\tint x = 0, y = (!peanuts.empty())? peanuts.top().y: 0, value_get = 0;\n    //\u5f53\u961f\u5217\u975e\u7a7a\u65f6\n\twhile (!peanuts.empty())\n\t{\n    \t//\u4f18\u5148\u961f\u5217\u7684\u7b2c\u4e00\u4f4d\u5c31\u662f\u6700\u6709\u4ef7\u503c\u7684\u82b1\u751f\u690d\u682a\n\t\tPeanut max_now = peanuts.top();\n\n\t\t//\u8ba1\u7b97\u6700\u5c0f\u82b1\u8d39\n\t\tint mincost = abs(max_now.x - x) + abs(max_now.y - y) + max_now.x + 1;\n\t\t//\u5982\u679c\u6458\u4e86\u8fd9\u682a\u82b1\u751f\u5c31\u56de\u4e0d\u53bb\u4e86\u7684\u8bdd\n\t\tif (mincost > k)\n\t\t{\n        \t//\u5c31\u4e0d\u80fd\u518d\u6458\u4e86\uff0c\u56de\u53bb\n\t\t\tbreak;\n\t\t}\n\t\telse//\u5982\u679c\u8fd8\u80fd\u6458\n\t\t{\n        \t//\u8017\u6d88\u8017\u65f6\u95f4\uff0c\u83b7\u53d6\u82b1\u751f\uff0c\u4f4d\u7f6e\u79fb\u52a8\uff0c\u82b1\u751f\u6d88\u5931\n\t\t\tk -= mincost - max_now.x;\n\t\t\tvalue_get += max_now.value;\n\t\t\tx = max_now.x;\n\t\t\ty = max_now.y;\n\t\t\tpeanuts.pop();\n\t\t}\n\t}\n\n\t//\u91c7\u6458\u5b8c\u6210\uff0c\u8f93\u51fa\n\tprintf(\"%d\\n\", value_get);\n\n\treturn 0;\n}\n\n```\n\n\u5e0c\u671b\u80fd\u7ed9\u540e\u6765\u7684\u4eba\u5e26\u6765\u4e00\u70b9\u5e2e\u52a9orz\n",
        "postTime": 1533557190,
        "uid": 52961,
        "name": "\u51bb\u8471Tewi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u7528\u4e00\u4e2a\u7c7b\u6765\u5b58\u50a8\u82b1\u751f\u5143\u7d20\uff0c\u6210\u5458\u6709\u82b1\u751f\u4e2a\u6570\u548cx,y\u5750\u6807\n\n\u8bfb\u5165\u5bf9\u8c61\u6570\u7ec4\uff0c\u7136\u540e\u8fdb\u884c\u6392\u5e8f\n\n\u7136\u540e\u907f\u514d\u8d85\u8fc7\u65f6\u95f4\u9650\u5236\u5373\u53ef\n\n\n```cpp\n#include<iostream>\n#include<cmath>\nusing namespace std;\nint m, n, k;\nclass peanut{   //\u7528\u4e8e\u5b58\u50a8\u82b1\u751f\u7684\u4fe1\u606f\n    public:\n        int number;\n        int x;\n        int y;\n        peanut(int n, int xf, int yf){  //\u6784\u9020\u51fd\u6570\n            number = n;\n            x = xf;\n            y = yf;\n        }\n};\nint main(){\n    cin >> m >> n >> k;\n    int temp, size = 0;\n    typedef peanut *list;   //\u5f00\u8f9f\u4e00\u4e2a\u5bf9\u8c61\u6570\u7ec4\n    list l[400];\n    for(int i=1;i<=m;i++){\n        for(int j=1;j<=n;j++){\n            cin >> temp;\n            if(temp!=0){\n                l[size++] = new peanut(temp, i, j);  // \u5c06\u6709\u82b1\u751f\u7684\u65b0\u5efa\u4e00\u4e2a\u5bf9\u8c61\u5b58\u50a8\u5230\u6570\u7ec4\u4e2d\n            }\n        }\n    }\n    for(int i=0;i<size;i++){     //\u8fdb\u884c\u5192\u6ce1\u6392\u5e8f\n        for(int j=i+1;j<size;j++){\n            if(l[i]->number<l[j]->number){\n                peanut *p = l[i];\n                l[i] = l[j];\n                l[j] = p;\n            }\n        }\n    }\n    int lastx = 0, lasty = 0, times = 0, sum = 0, i;\n    if(times+2*(l[0]->x)+1<=k){   //\u5224\u65ad\u7b2c\u4e00\u4e2a\u82b1\u751f\u80fd\u4e0d\u80fd\u6458\u5230\uff0c\u6ce8\u610f\u5f97\u7b97\u4e0a\u6458\u548c\u56de\u6765\u7684\u65f6\u95f4\n        times += l[0]->x+1;\n        sum += l[0]->number;\n        lastx = l[0]->x;\n        lasty = l[0]->y;\n        for(i=1;i<size;i++){   //\u5224\u65ad\u5176\u4ed6\u82b1\u751f\n            int dx = abs(lastx-l[i]->x);   //\u7b97\u7edd\u5bf9\u8ddd\u79bb\n            int dy = abs(lasty-l[i]->y);\n            if(times+dx+dy+1+l[i]->x<=k){\n                times = times + dx + dy + 1;\n                sum += l[i]->number;\n                lastx = l[i]->x;\n                lasty = l[i]->y;\n            }\n            else break;\n        }\n    }\n    cout<<sum;\n    return 0;\n}\n```",
        "postTime": 1503497569,
        "uid": 52770,
        "name": "lolilukia",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ea\u9700\u8981\u8bb0\u5f55\u6709\u82b1\u751f\u7684\u70b9\uff0c\u6392\u5e8f\uff0c\u7136\u540e\u8d2a\u5fc3\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u5177\u4f53\u8bf4\u660e\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n    int x,y,num;\n};\nvector<node> a;                             //\u5b9a\u4e49\u7ed3\u6784\u4f53\u5411\u91cf\u5b58\u50a8\u82b1\u751f\u4fe1\u606f\nint len[500],s=0;\nint comp(node a,node b)\n{\n    return a.num>b.num;\n}                                         //\u6392\u5e8f\u6bd4\u8f83\u51fd\u6570\uff0c\u6392\u5e8f\u65f6\u9700\u8981\u7528\u5230\nint main()\n{\n    int m,n,k;\n    cin>>m>>n>>k;\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=n;j++)\n        {\n            int x;\n            cin>>x;\n            if(x)\n            {\n                node t;\n                t.x=i;\n                t.y=j;\n                t.num=x;\n                a.push_back(t);\n            }                                         //\u8bb0\u5f55\u82b1\u751f\u4fe1\u606f\n        }\n    sort(a.begin(),a.end(),comp);                                //\u8fd9\u91cc\u662f\u5bf9\u5411\u91cf\u7684\u6392\u5e8f\n    int l=a.size();\n    len[0]=a[0].x;\n    for(int i=1;i<l;i++)\n        len[i]=abs(a[i].x-a[i-1].x)+abs(a[i].y-a[i-1].y);                         //\u8ba1\u7b97\u5e76\u5b58\u50a8\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\n    for(int i=0;i<l;i++)                                   //\u8d2a\u5fc3\u6cd5\u5f00\u59cb\n    {\n        if(len[i]+1+a[i].x<=k)                      //\u5982\u679c\u53ef\u4ee5\u5c31\u91c7\u6458\n        {\n            s+=a[i].num;\n            k-=(len[i]+1);\n        }\n        else break;                                     //\u5982\u679c\u4e0d\u53ef\u4ee5\u5c31\u8981\u7acb\u523b\u9000\u51fa\n    }\n    cout<<s;                                               //s\u5c31\u662f\u6700\u7ec8\u7684\u7b54\u6848\n    return 0;\n}\n```",
        "postTime": 1499265174,
        "uid": 25279,
        "name": "\u5317\u6d77_Beihai",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1086 \u3010\u82b1\u751f\u91c7\u6458\u3011"
    }
]