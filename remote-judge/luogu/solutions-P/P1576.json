[
    {
        "content": "\u7b97\u6cd5\uff1aDijkstra+\u5806\u4f18\u5316\uff08\u9898\u89e3\u91cc\u4e3a\u4ec0\u4e48\u6ca1\u6709\u554a\u3002\u3002\u3002\uff0cspfa\u80fd\u4e0d\u7528\u5c31\u5343\u4e07\u522b\u7528\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u975e\u5e38\u5730\u5371\u9669\uff09\n\u601d\u8def\u5176\u4ed6\u9898\u89e3\u90fd\u5df2\u7ecf\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u6211\u4eec\u6765\u8bb2\u4e00\u4e0b\u5177\u4f53\u4ee3\u7801\u5982\u4f55\u5b9e\u73b0\uff1a\n```cpp\n#include<cstring>\n#include<cstdio>\n#include<vector>\n#include<queue>\nusing namespace std;\nint n,m,A,B;\ndouble dis[2010];\nbool mark[2010];\nstruct Node//\u56fa\u5b9a\u683c\u5f0f\uff1a\u56e0\u4e3a\u6700\u77ed\u8def\u91cc\u9762\u662f\u4ece\u5c0f\u5230\u5927\uff0c\u90a3\u4e48\u6700\u957f\u8def\u5c31\u8981\u53cd\u8fc7\u6765\uff0c\u4ece\u5927\u5230\u5c0f \n{\n\tint Num;\n\tdouble dis;\n\tbool operator<(const Node &a) const\n\t{\n\t\treturn a.dis>dis;//\u518d\u6b21\u63d0\u9192 \n\t}\n};\nstruct node\n{\n\tint Num;\n\tdouble dis;\n};\nvector<node> G[2010];\ninline void Dij()\n{\n\tpriority_queue<Node> q;//\u5efa\u7acb\u4f18\u5148\u961f\u5217 \n\tNode temp;\n\ttemp.Num=A;\n\ttemp.dis=1;\n\tq.push(temp);//\u521d\u59cb\u5316 \n\twhile(!q.empty())//Dij\u7b97\u6cd5\uff0c\u4e0d\u4f1a\u8bf7\u81ea\u884c\u767e\u5ea6\u4e86\u89e3\u57fa\u672c\u601d\u60f3 \n\t{\n\t\tint u=q.top().Num;//\u53d6\u51fa\u961f\u9996\u7684\u5143\u7d20 \n\t\tq.pop();\n\t\tif(mark[u]==1) continue;\n\t\tmark[u]=1;\n\t\tfor(int i=0;i<G[u].size();i++)//\u8ba8\u8bba\u4e0e\u961f\u9996\u5143\u7d20\u76f8\u5173\u7684\u70b9 \n\t\t{\n\t\t\tint v=G[u][i].Num;\n\t\t\tdouble l=G[u][i].dis;\n\t\t\tif(mark[v]==0&&dis[v]<dis[u]*l)//\u6700\u957f\u8def\u66f4\u65b0 \n\t\t\t{\n\t\t\t\tdis[v]=dis[u]*l;\n\t\t\t\ttemp.Num=v;\n\t\t\t\ttemp.dis=dis[v];\n\t\t\t\tq.push(temp);//\u5165\u961f \n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tnode temp;\n\tscanf(\"%d%d\",&n,&m);//\u8f93\u5165\u70b9\uff0c\u8fb9 \n\tmemset(dis,-0x3f,sizeof(dis));//\u56e0\u4e3a\u662f\u6c42\u6700\u957f\u8def\uff0c\u6240\u4ee5\u521d\u59cb\u5316\u4e3a\u8d1f\u65e0\u7a77 \n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y;\n\t\tdouble z;\n\t\tscanf(\"%d%d%lf\",&x,&y,&z);//\u8f93\u5165\u4e00\u6761\u7ebf\u7684\u4e24\u7aef\u4ee5\u53ca\u957f\u5ea6 \n\t\ttemp.Num=y;\n\t\ttemp.dis=1-z/100;\n\t\tG[x].push_back(temp);\n\t\ttemp.Num=x;\n\t\tG[y].push_back(temp);//\u53cc\u5411\u8fb9\uff0c\u7528\u7684vector\u5b58\u56fe\uff0c\u94fe\u5f0f\u524d\u5411\u661f\u540c\u7406 \n\t}\n\tscanf(\"%d%d\",&A,&B);//\u8f93\u5165\u8d77\u59cb\u70b9\uff0c\u7ec8\u6b62\u70b9 \n\tdis[A]=1;//\u8d77\u59cb\u70b9\u5230\u81ea\u5df1\u7684\u8ddd\u79bb\u8981\u521d\u59cb\u5316\u4e3a1\uff0c\u4e0d\u80fd\u662f0\uff0c\u5426\u5219\u7b49\u4e0b\u4e0e\u4e4b\u76f8\u4e58\u7684\u6570\u5c31\u4f1a\u662f0\u4e86 \n\tDij();//\u8dd1 \n\tprintf(\"%.8lf\",100/dis[B]);//\u8f93\u51fa\u7b54\u6848 \n\treturn 0;\n}\n```",
        "postTime": 1523274042,
        "uid": 65190,
        "name": "dingxingdi",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "\u5f88\u88f8\u7684\u4e00\u9053\u6700\u201c\u77ed\u201d\u8def\u95ee\u9898\uff0c\u56e0\u4e3a1<=n<=2000\u5e76\u4e14\u4e0d\u5b58\u5728\u8d1f\u8fb9\u6743\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u8fea\u6770\u65af\u7279\u62c9\u4e5f\u53ef\u4ee5\u505a\uff0c\u4e0b\u9762\u7ed9\u51faSPFA\u505a\u6cd5\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e24\u4e2a\u4eba\u4e4b\u95f4\u5b9e\u9645\u7684\u6c47\u7387\u662f 1-z% \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u4eba\u62bd\u8c61\u6210\u70b9\uff0c\u628a\u4e24\u4e2a\u4eba\u4e4b\u95f4\u7684\u6c47\u7387\u8bb0\u505a\u8fb9\u6743\n\n\u5982\u679cA\u5230B\u7684\u6c47\u7387\u662f x ,B\u5230C\u7684\u6c47\u7387\u662fy\u90a3\u4e48A\u5230C\u7684\u6c47\u7387\u5c31\u662fx\\*y,\u6240\u4ee5\u539f\u6765SPFA\u6a21\u677f\u4e2d\u66f4\u65b0\u6743\u503c\u5c31\u53ef\u4ee5\u6539\u6210\u4e58\u7684\u5f62\u5f0f\n\n\u56e0\u4e3a\u6700\u540e\u8981\u6c42\u51fa\u6700\u5c11\u7684\u6c47\u6b3e\uff0c\u6240\u4ee5\u5c31\u8981\u6c42A\u4e0eB\u4e4b\u95f4\u7684\u6c47\u7387\u6700\u5927\uff0c\u90a3\u4e48\u73b0\u5728\u5c31\u5f88\u663e\u7136\u4e86\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nint n,m,A,B,cnt;\ndouble dis[2005],head[2005];//dis\u6570\u7ec4\u5b58\u7684\u662f\u8d77\u70b9\u5230\u5176\u4f59\u6bcf\u4e2a\u70b9\u7684\u6c47\u7387 \nbool vis[2005];\nstruct node//\u7ed3\u6784\u4f53\u90bb\u63a5\u8868\u5b58\u56fe \n{\n    int to,next;\n    double val;\n}edge[1000005];//\u8fb9\u6570\u5177\u4f53\u7684\u5927\u5c0f\u6ca1\u8bf4\uff0c\u6240\u4ee5\u4e00\u5f00\u59cb\u5f00\u5c0f\u7ed3\u6784\u4f53\u6570\u7ec4Re\u4e86\u4e24\u6b21 TAT\uff0c\u8fd9\u91cc\u5f001000000\u80af\u5b9a\u80fd\u8fc7 \nvoid add(int x,int y,double z)\n{\n    cnt++;\n    edge[cnt].to=y;\n    edge[cnt].val=1-z;\n    edge[cnt].next=head[x];\n    head[x]=cnt;\n}\nvoid spfa()\n{\n    int u,v;\n    queue<int>q;\n    q.push(A);\n    dis[A]=1;//\u8d77\u70b9\u4e0e\u5b83\u672c\u8eab\u7684\u6c47\u7387\u662f1 \n    vis[A]=true;\n    while(!q.empty())\n    {\n        u=q.front();\n        q.pop();\n        vis[u]=false;\n        for(int i=head[u];i;i=edge[i].next)\n        {\n            v=edge[i].to;\n            if(dis[v]<dis[u]*edge[i].val)//\u4f9d\u6b21\u66f4\u65b0\u6700\u5927\u6c47\u7387 \n            {\n                dis[v]=dis[u]*edge[i].val;\n                if(!vis[v])\n                {\n                    q.push(v);\n                    vis[v]=true;\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    fill(dis+1,dis+n+1,0);//\u56e0\u4e3a\u5b58\u7684\u662f\u6700\u5927\u6c47\u7387\u6240\u4ee5\u5c06dis\u6570\u7ec4\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u5c0f\u7684\u6570\uff0c\u4f46\u662f\u6d89\u53ca\u5230\u4e86\u4e58\u6cd5\u6240\u4ee5\u4e0d\u80fd\u8bbe\u4e3a\u8d1f\u6570\uff0c\u521d\u59cb\u5316\u4e3a0\u5373\u53ef \n    for(int x,y,z,i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&z);\n        add(x,y,(double)z/100);//\u5c06z\u8f6c\u5316\u6210\u5c0f\u6570 \n        add(y,x,(double)z/100);\n    }\n    scanf(\"%d%d\",&A,&B);\n    spfa();\n    printf(\"%.8lf\",100/dis[B]);//\u7528100\u9664\u4ee5\u6700\u5927\u7684\u6c47\u7387\u5c31\u662f\u6700\u5c11\u9700\u8981\u6c47\u591a\u5c11\u94b1 \n    return 0;\n```\n}//\u5176\u5b9e\u8fd9\u9053\u9898\u53ea\u662f\u6a21\u677f\u7684\u4e00\u4e2a\u5c0f\u5c0f\u7684\u53d8\u901a\uff0c\u8fd8\u662f\u5f88\u7b80\u5355\u7684^-^\n//\u6700\u540e\u795d\u5404\u4f4d\u4ee5\u53ca\u81ea\u5df1 NOIP2017 RP++\n",
        "postTime": 1509937503,
        "uid": 17511,
        "name": "The_Key",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u9053\u6700\u77ed\u8def\u7684\u53d8\u79cd\uff0c\u8f6c\u8d26\u65f6\u5019\u6536\u53d61%\u624b\u7eed\u8d39\u53ef\u4ee5\u7406\u89e3\u4e3a\u8fd9\u6761\u8fb9\u8fb9\u6743\u4e3a0.99\uff0c\u800c\u4e14\u8fb9\u6743\u662f\u76f8\u4e58\u800c\u4e0d\u662f\u76f8\u52a0\n\n\u4e3a\u4e86\u66f4\u597d\u7406\u89e3\uff0c\u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b\u6837\u4f8b\uff1a\u8981\u6c42\u4ece1\u52303\uff0c\u5982\u679c\u4ece1\u52302\uff0c\u624b\u7eed\u8d391%\uff0c\u90a3\u4e48\u94b1\u6570\u5c31\u4e580.99\uff1b2\u52303\u518d\u4e580.98\uff0c\u8fd9\u6837\u603b\u500d\u6570\u662f0.9702\uff0c\u4f18\u4e8e\u76f4\u63a51\u7ed93\u76840.97\u500d\uff0c\u6240\u4ee5\u7b54\u6848\u662f**100/0.97**\u3002\n### p.s.\u6ce8\u610f\u4e0d\u662f\u8f6c\u5316\u7387\uff0c\u662f\u5230\u8d26100\u5143\u6700\u5c11\u9700\u8981\u7684\u603b\u8d39\u7528\uff01\uff01\uff01\n\n\u8fd9\u662f\u6211\u7528priority_queue\u4f18\u5316\u8fc7\u7684dijkstra\u5199\u7684\u4ee3\u7801\n\n\u5173\u4e8edijkstra\u7684\u8be6\u7ec6\u77e5\u8bc6\u53ef\u4ee5\u770b[P4779](https://www.luogu.org/problem/P4779)\u7684\u9898\u89e3\u6216\u8005[\u6700\u77ed\u8def - OI Wiki](https://oi-wiki.org/graph/shortest-path/)\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nstruct edge{\n\tint to,nxt;\n\tdouble dis;\n}e[100002];\ndouble head[2002],dis[2002];\nbool vis[100002];\nint n,m,s,cnt,a,b;\nvoid addedge(int u,int v,int d){\n\te[++cnt].dis=1.0-d/100.0;\n\te[cnt].to=v;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nstruct node{\n\tdouble dis;\n\tint pos;\n\tbool operator <(const node &x)const{\n\t\treturn x.dis<dis;\n\t}\n};\npriority_queue<node>q;\nvoid init(){\n\tfor(int i=1;i<=n;i++)\n\t\tdis[i]=0x7fffffff;\n}\nvoid dijkstra(){\n\tdis[a]=1.0;\n\tq.push((node){1.0,a});\n\twhile(!q.empty()){\n\t\tnode tmp=q.top();\n\t\tq.pop();\n\t\tint x=tmp.pos;\n\t\tif(vis[x])continue;\n\t\tvis[x]=1;\n\t\tfor(int i=head[x];i;i=e[i].nxt){\n\t\t\tint y=e[i].to;\n\t\t\tif(dis[y]>dis[x]*e[i].dis){\n\t\t\t\tdis[y]=dis[x]*e[i].dis;\n\t\t\t\tif(!vis[y])q.push((node){dis[y],y});\n\t\t\t}\n\t\t}\n\t}\n}\nint main() {\n\tint i;\n\tcin>>n>>m;\n\tinit();\n\tfor(i=0;i<m;i++){\n\t\tint u,v,d;\n\t\tscanf(\"%d%d%d\",&u,&v,&d);\n\t\taddedge(u,v,d);\n\t}\n\tcin>>a>>b;\n\tdijkstra();\n\tprintf(\"%.8lf\",100/dis[b]);\n\treturn 0;\n}\n\n```\n~~copy\u9898\u89e3\u7684\u540c\u5fd7\u4eec\u53d1\u73b0\u201c\u7956\u56fd\u6c5f\u5c71\u4e00\u7247\u7ea2\u201d\u2014\u2014\u800c\u4e14\u6837\u4f8b\u8fd8\u8fc7\u4e86\uff0c\u662f\u4e0d\u662f\u5f88\u795e\u5947\uff1f~~\n\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u8ba9\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u9898\u76ee\n\nbug1\uff1a\u8981\u6c42\u5bf9\u65b9\u5230\u8d26100\u5143\u4e14\u81ea\u5df1\u82b1\u8d39\u6700\u5c11\uff0c\u90a3\u4e48\u5c31\u662f\u8981\u6c42\u603b\u500d\u6570\u6700\u9ad8\uff0c\u4e5f\u5c31\u662f\u8bf4\n### \u6c42\u7684\u662f\u6700\u957f\u8def\u800c\u4e0d\u662f\u6700\u77ed\u8def\uff01\uff01\uff01\uff01\uff01\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u677e\u5f1b\u64cd\u4f5c\u65f6\u627e\u5c3d\u53ef\u80fd\u957f\u7684\u8fb9\uff0c\u540c\u65f6\u628a\u8fd0\u7b97\u7b26\u201c<\u201d\u91cd\u8f7d\u6210\u201c>\u201d\uff0c\u4fdd\u8bc1\u627e\u5230\u7684\u8def\u5f84\u6700\u957f\n\n~~\u4e8e\u662fcopy\u9898\u89e3\u7684\u540c\u5fd7\u4eec\u628a\u8fd9\u4e24\u5904\u6539\u4e86\u5374\u53d1\u73b0\u201c\u5927\u7ea2\u706f\u7b3c\u9ad8\u9ad8\u6302\u201d~~\n\u90fd\u5728bug\u540e\u9762\u6807\u5e8f\u53f71\u4e86\uff0c\u600e\u4e48\u53ef\u80fd\u6ca1\u6709bug2\u5462\uff1f\n\nbug2\uff1a\u7ee7\u7eed[\u8bfb\u9898](https://www.luogu.org/problem/P1576)\uff0c\u53ef\u4ee5\u53d1\u73b0\u9898\u76ee\u4e2d\u7684\u7b2c\u4e00\u884c\u63cf\u8ff0\u662f\uff1a\n### \u5728n\u4e2a\u4eba\u4e2d\uff0c\u67d0\u4e9b\u4eba\u7684\u94f6\u884c\u8d26\u53f7\u4e4b\u95f4\u53ef\u4ee5*\u4e92\u76f8*\u8f6c\u8d26\u3002\n## \u4e92\u76f8\uff01\uff01\uff01\n\u7531\u4e8e\u8fd9\u4efd\u4ee3\u7801\u7684\u6838\u5fc3\u90e8\u5206\u662fP4779\uff08**\u5355\u6e90**\u6700\u77ed\u8def\u5f84\uff09\u7684\u53d8\u4f53\uff0c\u6240\u4ee5\u4e4b\u524d\u5199\u7684\u65f6\u5019\u4e00\u76f4\u5f53\u8f6c\u8d26\u662f\u5355\u5411\u7684\u5728\u5904\u7406\uff0c\u5176\u5b9e\u8fd9\u9898\u7684\u56fe\u662f\u65e0\u5411\u56fe\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8981 _\u53cc\u5411\u5efa\u8fb9\uff01_ \n\n~~\u4e8e\u662fcopy\u9898\u89e3\u7684\u540c\u5fd7\u52a0\u4e86\u4e00\u4e2aaddedge\u540e\u53d1\u73b0\u201c\u4e07\u7d2b\u5343\u7ea2\u603b\u662f\u6625\u201d~~\n\u4e8b\u5b9e\u4e0a\u56e0\u4e3a\u5efa\u4e00\u6761\u53cc\u5411\u8fb9\u76f8\u5f53\u4e8e\u4e24\u6761\u5355\u5411\u8fb9\uff0c\u6240\u4ee5\u6211\u4eec\u6240\u6709\u5173\u4e8e\u8fb9\u7684\u6570\u7ec4\u7a7a\u95f4\u90fd\u8981\u5f002\u500d\n~~\uff08\u5176\u5b9e\u6211\u6240\u6709\u6570\u7ec4\u90fd\u5f00\u4e862\u500d\uff09~~\n\n\u732e\u4e0a\u7801\u98ce\u5947\u7279\u7684\u4ee3\u7801\uff08\u4fdd\u8bc1AC\uff09\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nstruct edge{\n\tint to,nxt;\n\tdouble dis;\n}e[200010];\ndouble head[4010],dis[4010];\nbool vis[200010];\nint n,m,s,cnt,a,b;\nvoid addedge(int u,int v,int d){ //\u5efa\u8fb9\n\te[++cnt].dis=1.0-d/100.0;\n\te[cnt].to=v;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nstruct node{\n\tdouble dis;\n\tint pos;\n\tbool operator <(const node &x)const{\n\t\treturn x.dis>dis;  //\u6ce8\u610f\u91cd\u8f7d\u6210\u5927\u4e8e\uff01\uff01\uff01\n\t}\n};\npriority_queue<node>q;\nvoid init(){  //\u521d\u59cb\u5316\n\tfor(int i=1;i<=n;i++)\n\t\tdis[i]=0;   //\u6ce8\u610f\u4e0d\u8981\u8bbe\u7f6e\u6210\u6b63\u65e0\u7a77\uff01\uff01\uff01\n}\nvoid dijkstra(){   //\u4f18\u5148\u961f\u5217\u4f18\u5316\u7684dijkstra\n\tdis[a]=1.0;\n\tq.push((node){1.0,a});\n\twhile(!q.empty()){\n\t\tnode tmp=q.top();\n\t\tq.pop();\n\t\tint x=tmp.pos;\n\t\tif(vis[x])continue;\n\t\tvis[x]=1;\n\t\tfor(int i=head[x];i;i=e[i].nxt){\n\t\t\tint y=e[i].to;\n\t\t\tif(dis[y]<dis[x]*e[i].dis){  //\u6ce8\u610f\u8fd9\u91cc\u662f\u53d1\u73b0\u66f4\u5927\u7684dis\u65f6\u66f4\u65b0\uff01\uff01\uff01\n\t\t\t\tdis[y]=dis[x]*e[i].dis;\n\t\t\t\tif(!vis[y])q.push((node){dis[y],y});\n\t\t\t}\n\t\t}\n\t}\n}\nint main() {\n\tint i;\n\tcin>>n>>m;\n\tinit();\n\tfor(i=0;i<m;i++){\n\t\tint u,v,d;\n\t\tscanf(\"%d%d%d\",&u,&v,&d);\n\t\taddedge(u,v,d);\n\t\taddedge(v,u,d);  //\u6ce8\u610f\u5efa\u8fb92\u6b21\uff01\uff01\uff01\n\t}\n\tcin>>a>>b;\n\tdijkstra();\n\tprintf(\"%.8lf\",100.0/dis[b]);  //\u6ce8\u610f\u662f100/dis[b]\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1567944793,
        "uid": 148121,
        "name": "zjy111",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "\u5176\u5b9e\u662f\u6700\u77ed\u8def.\n\n\u628a\u8d77\u70b9\u548c\u7ec8\u70b9\u53cd\u8fc7\u6765\u6c42\u6700\u77ed\u8def.\n\n\u5c31\u662f\u677e\u5f1b\u64cd\u4f5c\u6539\u4e00\u6539\u5c31\u597d.\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint read()\n{\n    char s;\n    int k=0,base=1;\n    while((s=getchar())!='-'&&s!=EOF&&!(s>='0'&&s<='9'));\n    if(s==EOF)exit(0);\n    if(s=='-')base=-1,s=getchar();\n    while(s>='0'&&s<='9')\n    {\n        k=k*10+(s-'0');\n        s=getchar();\n    }\n    return k*base;\n}\nvoid write(int x)\n{\n    if(x<0)\n    {\n        putchar('-');\n        write(-x);\n    }\n    else\n    {\n        if(x/10)write(x/10);\n        putchar(x%10+'0');\n    }\n}\nint n,m,X,Y,Z,id,s,t,u,v;\nint to[4000010];\nint wi[4000010];\nint ne[4000010];\nint po[4000010];\nint vis[4010];\ndouble dis[4000];\nqueue<int> q;\ninline void add(int x,int y,int z)\n{\n    id++;\n    to[id]=y;\n    wi[id]=z;\n    ne[id]=po[x];\n    po[x]=id;\n}\nint main()\n{\n    n=read();\n    m=read();\n    for (int i=1;i<=m;i++)\n    {\n        X=read();Y=read();Z=read();\n        add(X,Y,Z);//\u52a0\u53cc\u5411\u8fb9\n        add(Y,X,Z);\n    }\n    t=read();s=read();//\u8d77\u70b9\u548c\u7ec8\u70b9\u53cd\u4e00\u4e0b\n    for (int i=0;i<=n+1;i++) dis[i]=23333333.0;\n    q.push(s);\n    dis[s]=100.0;\n    vis[s]=1;\n    while (!q.empty())\n    {\n        u=q.front();q.pop();\n        vis[u]=0;\n        for (int i=po[u];i;i=ne[i])\n        {\n            v=to[i];\n            if (dis[v]>(double)(dis[u])/(1-0.01*wi[i]))//\u677e\u5f1b\u64cd\u4f5c\n            {\n                dis[v]=(double)(dis[u])/(1-0.01*wi[i]);\n                if (vis[v]==0)//\u5165\u961f\n                {\n                    vis[v]=1;\n                    q.push(v);\n                }\n            }\n        }\n    }\n    printf(\"%.8lf\",dis[t]);//\u8f93\u51fa\n    return 0;\n}\n\n```",
        "postTime": 1504761228,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "~~\u9274\u4e8espfa\u5df2\u7ecf\u6b7b\u4e86~~\n\n\u6211\u4eec\u4f7f\u7528 dij+\u5806+\u94fe\u5f0f\u524d\u5411\u661f \u6765\u5b9e\u73b0\u6700\u77ed\u8def\n~~~\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8981\u7528\u6700\u77ed\u8def\u3002\u3002\u3002\u8fd9\u4e2a\u5176\u5b9e\u5f88\u7b80\u5355\uff1a\n1.\u6700\u5c0f\u82b1\u8d39\u4e0d\u5c31\u662f\u628a\u6bcf\u4e2a\u4eba\u770b\u505a\u4e00\u4e2a\u70b9\uff1b\n2.\u6bcf\u6b21\u8f6c\u8d26\u770b\u505a\u4e00\u4e2a\u8fb9\uff1b\n3.\u628a\u82b1\u8d39\u770b\u505a\u8fb9\u6743\n4.\u6ce8\u610f\u4e00\u5b9a\u8981\u5efa\u53cc\u5411\u8fb9\uff08\u849f\u84bbwa\u4e86\u597d\u51e0\u6b21\uff09\n5.\u7ed3\u679c\u8981\u5904\u7406\u4e00\u4e0b\uff0c\u56e0\u4e3a\u4e0d\u662f\u8f93\u51fa\u6c47\u7387\uff0c\u800c\u662f\u6700\u5c0f\u82b1\u8d39\n~~~\n\n\u3001\u3001\u3001cpp\n\n~~~cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct xing{\n\tint next,to;double w;\n};//\u6ca1\u60f3\u5230\u9759\u6001\u4e34\u63a5\u8868\u8fd8\u6709\u524d\u5411\u661f\u8fd9\u4e48\u4e2a\u53ef\u7231\u7684\u540d\u5b57\u2764\nxing xx[200009];\ndouble dis[200009],vis[200009];int cnt;\nint hhh;\npriority_queue< pair<double,int> > q;//pair\u5b58\u50a8\u8fb9\u6743\u548c\u8fb9\u7684\u5e8f\u53f7\uff08\u4f18\u5148\u961f\u5217\u5b9e\u73b0\u5927\u6839\u5806\uff09\nint head[200009],n,m,g;//head\u6570\u7ec4\u662f\u63a5\u67d0\u4e2a\u70b9\u7684\u6700\u540e\u4e00\u6761\u8fb9\ninline void spfa()\n{\n\tq.push(make_pair(1,g));//\u8d77\u70b9\u5165\u961f\n\tdis[g]=1;\n\twhile(!q.empty())\n\t{\n\t    int now=q.top().second;//\u53d6\u51fa\u5bf9\u9996\uff08\u7f16\u53f7\uff09\n\t\tq.pop();\n\t\tif(vis[now]==1)continue;\n\t\tvis[now]=1;\n\t\tfor(int j=head[now];j;j=xx[j].next)//\u4e34\u754c\u8868\u904d\u5386\u63a5\u6b64\u70b9\u7684\u8fb9\n\t\t{\n\t\t\tint v=xx[j].to;\n\t\t\tif(dis[v]<dis[now]*xx[j].w)//\u677e\u5f1b\u64cd\u4f5c\n\t\t\t  {\n\t\t\t  \tdis[v]=dis[now]*xx[j].w;\n\t\t\t  \tq.push(make_pair(dis[v],v));\n\t\t\t  }\n\t\t}\n\t}\n}\nint main()\n{\n     cin>>n>>m;;\n     int a,b;double c;\n     memset(dis,-0x3fff,sizeof(dis));\n     for(int i=1;i<=m;i++)\n     {\n     \tcin>>a>>b>>c;\n     \txx[++cnt].to=b;\n     \txx[cnt].next=head[a];\n     \txx[cnt].w=1.0-(double)(c/100);\n     \thead[a]=cnt;\n     \txx[++cnt].to=a;\n     \txx[cnt].next=head[b];\n     \txx[cnt].w=1.0-(double)(c/100);\n     \thead[b]=cnt;\n     }\n     cin>>g>>hhh;\n     spfa();\n     printf(\"%.8f\",100/dis[hhh]);//\u7ed3\u679c\u8981\u5904\u7406\u4e00\u4e0b\uff0c\u56e0\u4e3a\u4e0d\u662f\u8f93\u51fa\u6c47\u7387\n}\n\n~~~",
        "postTime": 1540093850,
        "uid": 28190,
        "name": "\u4f1a\u6253\u6c99\u5305\u7684\u732b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "\u5f88\u660e\u663e\u53ef\u4ee5\u62bd\u8c61\u6210\u56fe\u3002\ni\uff0cj\u4e92\u76f8\u8f6c\u8d26\u5c31\u76f8\u5f53\u4e8e\u8282\u70b9i\u548cj\u4e4b\u95f4\u6709\u4e00\u6761\u6743\u503c\u4e3a\uff081-z%\uff09\u7684\u8fb9\uff0c\u6c42\u4e00\u6761\u8def\u5f84\u4f7f\u8def\u5f84\u4e0a\u5404\u8fb9\u6743\u503c\u4e58\u79ef\u6700\u5927\u3002\u7ed3\u679c\u5c31\u662f100/max\u3002\n\u6700\u5927\u6743\u503c\u79ef\u53ef\u4ee5\u7528Dijkstra\uff0c\u7701\u7684\u5199\u961f\u5217\u3002\n```\n#include<stdio.h>\n#include<stdlib.h>\ndouble map[2001][2001],dis[2001],book[2001];\nint main(){\n\tint n,m,i,j,x1,x2,x3,t,l,r;\n\tdouble q,max,ans;\n\tscanf(\"%d%d\",&n,&m);\n\t//\u5efa\u56fe \n\tfor(i=1;i<=n;i++)\n\t\tmap[i][i]=1;\n\tfor(i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&x1,&x2,&x3);\n\t\tq=(100-x3)/100.0;\n\t\tif(q>map[x1][x2]) map[x1][x2]=map[x2][x1]=q;\n\t}\n\tscanf(\"%d%d\",&l,&r);\n\tfor(i=1;i<=n;i++){\n\t\tdis[i]=map[l][i];\n\t}\n\tbook[l]=1;\n\t//Dijkstra \n\tfor(i=1;i<n;i++){\n\t\tmax=0;\n\t\t//\u627e\u4e0e\u6e90\u70b9\u8def\u5f84\u4e0a\u79ef\u6700\u5927\u7684\u70b9 \n\t\tfor(j=1;j<=n;j++){\n\t\t\tif(!book[j]&&dis[j]>max){\n\t\t\t\tmax=dis[j];\n\t\t\t\tt=j;\n\t\t\t}\n\t\t}\n\t\tbook[t]=1;\n\t\t//\u7528\u8fd9\u4e2a\u70b9\u7684\u51fa\u8fb9\u53bb\u66f4\u65b0\u5176\u4f59\u9876\u70b9 \n\t\tfor(j=1;j<=n;j++){\n\t\t\tif(!book[j]&&dis[t]*map[t][j]>dis[j]){\n\t\t\t\tdis[j]=dis[t]*map[t][j];\n\t\t\t}\n\t\t}\n\t}\n\tans=100/dis[r];\n\tprintf(\"%.8lf\",ans);//\u6ce8\u610f\u7cbe\u5ea6\u95ee\u9898 \n\treturn 0;\t\t\n}\n```",
        "postTime": 1519458021,
        "uid": 49118,
        "name": "\u6587\u827a\u5e73\u8861\u6811",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "\u901a\u8fc7\u52a8\u6001\u6570\u7ec4\u5b9e\u73b0\u7684SPFA\n\n\u5efa\u7acb\u4e24\u4e2a\u52a8\u6001\u6570\u7ec4\uff0c\u4e00\u4e2a\u4fdd\u5b58\u548c\u6bcf\u4e2a\u4eba\u76f8\u8fde\u7684\u4eba\uff0c\u53e6\u4e00\u4e2a\u4fdd\u5b58\u8be5\u8fb9\u7684\u6743\u503c\n\n\uff08\u849f\u84bb\u4e0d\u4f1a\u628a\u8fd9\u4e24\u4e1c\u897f\u5408\u5728\u4e00\u8d77\uff09\n\n\u4fdd\u5b58\u6743\u503c\u7684\u65f6\u5019\u8981\u6ce8\u610f\u6700\u540e\u7b97\u7684\u662f\u9664\u6cd5\uff0c\u6240\u4ee5\u76f4\u63a5\u6362\u7b97\u6210\u5c0f\u6570\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cstring>\nusing namespace std;\nint dui[200100];\ndouble minn[2010];\nvector<double> g[2010]; \nvector<int> man[2010];\nint main()\n{\n    //freopen(\"money.in\",\"r\",stdin);\n    //freopen(\"money.out\",\"w\",stdout);\n    int n,m,a,b,x,y,head=1,tail=1,now,i;\n    double z;\n    memset(minn,127,sizeof(minn));\n    cin>>n>>m;\n    for(i=1;i<=m;i++)\n    {\n        scanf(\"%d %d %lf\",&x,&y,&z);\n        z=z/100.0;\n        z=1.0-z;\n        g[x].push_back(z);\n        g[y].push_back(z);\n        man[x].push_back(y);\n        man[y].push_back(x);\n    }\n    cin>>a>>b;\n    dui[1]=a;\n    minn[a]=100.0;\n    while(head>=tail)\n    {\n        now=dui[tail];\n        for(i=0;i<man[now].size();i++)\n        {\n            if(minn[man[now][i]]>minn[now]/g[now][i])\n            {\n                minn[man[now][i]]=minn[now]/g[now][i];\n                head++;\n                dui[head]=man[now][i];\n            }\n        }\n        tail++;\n    }\n    printf(\"%.8lf\\n\",minn[b]);\n    return 0;\n}\n```",
        "postTime": 1507792727,
        "uid": 45281,
        "name": "\u732b\u7cae\u5bf8\u65ad",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "### \u7b2c\u4e8c\u7bc7\u9898\u89e3\u89e3\u8bf6~~~\n\n\n\n##### \u89e3\u6790\uff1a\n\n\u6784\u56fe\u662f\u5173\u952e\uff01\uff01\uff01\n\n\u672c\u9898\u5176\u5b9e\u662f\u6c42\u4eceA\u5230B\u7684\u6700\u77ed\u8def\u5f84\u95ee\u9898\uff0c\u89e3\u9898\u7684\u5173\u952e\u662f\u6784\u56fe\uff1a\u4ee5\u4eba\u5458\u7f16\u53f7\u4e3a\u9876\u70b9\uff0c\u82e5x\u53f7\u4eba\u548cy\u53f7\u4eba\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u8f6c\u8d26\u5219\u5728x\u548cy\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c\u8fb9\u7684\u6743\u4e3a100/\uff08100-z\uff09\u3002\n\n###### \u6837\u4f8b\uff1a\n\n\u56e0\u4e3aB\u5230\u5e10\u540e\u6536\u5230100\u5143\uff0c\u6240\u4ee5\uff0c\u539f\u9898\u7b49\u4ef7\u4e8e\u6c42\u4eceB\u5230A\u7684\u6700\u77ed\u8def\u5f84\uff08\u6743\u503c\u76f8\u4e58\uff09\uff0c\u7531\u4e8e\u4e58\u6cd5\u6ee1\u8db3\u4ea4\u6362\u5f8b\uff0c\u6545\u4e5f\u53ef\u6c42\u4eceA\u5230B\u7684\u6700\u77ed\u8def\u5f84\u3002\u5bf9\u4e8e\u6837\u4f8b\uff0c\u4eceA\u5230B\u7684\u6700\u77ed\u8def\u5f84\u4e3a\uff1a1\u21922\u21923\uff0c\u6743\u503c\u4e3a\uff1a[100/(100-1)]*[100/(100-2)]= 1.0307153164\uff0c\u6700\u540e\u7684\u7ed3\u679c\u4e3a\uff1a103. 07153164\uff08\u4fdd\u7559\u5c0f\u6570\u70b9\u540e8\u4f4d\uff09\n\n### AC\u4ee3\u7801\uff1a\n\t#include<iostream>\n\t#include<cstdio>\n\tusing namespace std;\n\tdouble a[2222][2222],dis[2222]={0},minn;\n\tint n,m,i,j,k,x,y;\n\tint f[2222]={0};//\u4e00\u5b9a\u8981\u8bb0\u5f97\u8d4b\u521d\u503c\u4e3a\u96f6\n\tvoid init()\n\t{\n\t\tcin>>n>>m;\u8f93\u5165\u603b\u4eba\u6570\u548c\u53ef\u4ee5\u4e92\u76f8\u8f6c\u8d26\u7684\u4eba\u7684\u5bf9\u6570\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tscanf(\"%d%d\",&j,&k);//\u5faa\u73af\u8f93\u5165\n\t\t\tscanf(\"%lf\",&a[j][k]);\n\t\t\ta[j][k]=(100-a[j][k])/100;\n\t\t\ta[k][j]=a[j][k];\n\t\t}\n\t\tcin>>x>>y;\n\t}\n\tvoid dijkstra(int x)\n\t{\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tdis[i]=a[x][i];//\u628a\u4eba\u6570\u5b58\u8fdbdis\u6570\u7ec4\u4e2d\n\t\tdis[x]=1;\n\t\tf[x]=1;\u628af\u6570\u7ec4\u4e2dx\u7684\u4f4d\u7f6e\u6807\u8bb0\u4e3a1\n\t\tfor(int i=1;i<=n-1;i++)\n\t\t{\n\t\t\tminn=0;\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tif(f[j]==0 && dis[j]>minn)//f\u6570\u7ec4\u4e2dj\u7684\u4f4d\u7f6e\u8fd8\u6ca1\u6709\u88ab\u6807\u8bb0\u4e14dis\u6570\u7ec4\u4e2dj\u5927\u4e8eminn\u7684\u503c\n\t\t\t\t{\n\t\t\t\t\tk=j;//\u5c31\u628aj\u7684\u503c\u7ed9k\n\t\t\t\t\tminn=dis[j];\u66f4\u65b0minn\u7684\u503c\n\t\t\t\t}\n\t\t\tf[k]=1;\u6807\u8bb0\n\t\t\tif(k==y)//\u5982\u679ck==y\uff0c\u5c31\u76f4\u63a5break\u6389\uff0c\u4e0b\u9762\u7684\u7a0b\u5e8f\u5c31\u6ca1\u6709\u505a\u7684\u5fc5\u8981\u6765\u4e86\n\t\t\t\tbreak;\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tif(f[j]==0 && dis[k]*a[k][j]>dis[j])//\u6700\u4e3a\u91cd\u8981\u7684\u4e00\u90e8\u5206\u7a0b\u5e8f\u5c31\u662f\u8fd9\u91cc\u4e86\n\t\t\t\tdis[j]=dis[k]*a[k][j];\n\t\t}\n\t}\n\tint main()\n\t{\n\t\tinit();\n\t\tdijkstra(x);\n\t\tprintf(\"%0.8lf\",100/dis[y]);//\u4fdd\u7559\u516b\u4f4d\u5c0f\u6570\u8f93\u51fa\n\t\treturn 0;\n\t}",
        "postTime": 1557663769,
        "uid": 188815,
        "name": "\u987d\u76ae",
        "ccfLevel": 0,
        "title": "second    \u9898\u89e3\u89e3"
    },
    {
        "content": "\u6b64\u9898\u6ca1\u6709\u7ed9\u51fam\u7684\u503c\uff0c\u6240\u4ee5\u6211\u611f\u89c9\u7528BMF\u8fd8\u662f\u6709\u70b9\u65b9\u7684\uff0c\u4e07\u4e00\u662f\u4e2a\u7a20\u5bc6\u56fe\u5c31GG\u4e86\uff0c\u4e0d\u8fc7\u770b\u6570\u636e\u5e94\u8be5\u8fd8\u662f\u7a00\u758f\u56fe\uff0c\u6240\u4ee5BMF\u8fd8\u662f\u5b8c\u5168\u53ef\u4ee5\u7684\uff0c\u8fd9\u5c31\u6210\u4e86\u4e00\u9053BMF\u6a21\u677f\u9898\uff0c\u601d\u8def\u662f\u4eceB\u70b9\u5012\u63a8A\u70b9\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,a,b,u[205000],v[200500];\ndouble dis[2050],w[200500],w2[200400];\nconst double inf=99999999;\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n    {\n        cin>>u[i]>>v[i]>>w[i];  //\u6309\u7167\u8fb9\u8f93\u5165\uff1b \n        w[i]=w[i]/100;  //w\u4e3a\u624b\u7eed\u8d39\u7387\uff1b \n        w2[i]=(1/(1-w[i]));  \n    }\n```\n/\\*w2\u662f\u4eceB\u5012\u63a8A\u6240\u7528\u7684\u7cfb\u6570\uff0c\u6bd4\u5982A\u6709Y\u5143\uff0c\u4f20\u7ed9B\uff0cB\u83b7\u5f97x\u5143\uff0c\n\u5219Y\\*\uff081-k\uff09=X\uff0c\u79fb\u9879\u5f97 Y=X/(1-k),w2\u5b58\u50a8\u7684\u5c31\u662f 1/(1-k)\\*/\n\n```cpp\n    for(int i=1;i<=n;i++)\n    {\n        dis[i]=inf; //bmf\u6807\u51c6\u6b65\u9aa4\uff0c\u8ddd\u79bb\u521d\u59cb\u5316\u4e3a\u65e0\u7a77\uff0c\u5b9e\u9645\u5b58\u50a8\u7684\u662f\u5404\u70b9\u81f3\u5c11\u8981\u6c47\u7ed9B\u591a\u5c11\u94b1 \n    }\n    cin>>a>>b;\n    dis[b]=100;   // B\u5230\u81ea\u5df1\u7684\u8ddd\u79bb\u8bbe\u4e3a100\u5373\u53ef\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3aB\u81f3\u5c11\u8981\u7ed9\u81ea\u5df1100\u5feb \n    for(int k=1;k<=n-1;k++)\n    {\n        int check=0;//BMF\u7684\u5c0f\u4f18\u5316 \n        for(int i=1;i<=m;i++)\n        {\n            if(dis[v[i]]>dis[u[i]]*w2[i])//\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u8981\u8fdb\u884c\u4e24\u4e2aif\u5224\u65ad \n            {\n                dis[v[i]]=dis[u[i]]*w2[i];\n                check++;\n            }\n            if(dis[u[i]]>dis[v[i]]*w2[i])\n            {\n                dis[u[i]]=dis[v[i]]*w2[i];\n                check++;\n            }\n        }\n        if(check==0)\n        {\n            break;\n        }\n    }\n    printf(\"%0.8lf\",dis[a]);//\u4fdd\u75598\u4f4d\u5c0f\u6570\u8f93\u51fa \n    return 0;\n} \n\u4e2a\u4eba\u611f\u89c9\u601d\u8def\u8fd8\u662f\u5f88\u597d\u7406\u89e3\u7684\uff0c\u5199\u6cd5\u4e5f\u5e94\u8be5\u5f88\u597d\u7406\u89e3\n```",
        "postTime": 1507996618,
        "uid": 33517,
        "name": "\u5bb8\u4e4b\u8fb0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "\n## \u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011\n\n\u56fe\u8bba\n\nDijkstra\u7684\u6a21\u677f\u9898\n\nDijkstra\u7684\u75d5\u8ff9\u5f88\u660e\u663e\uff0c\u8981\u6c42\u4e24\u4eba\u4e4b\u95f4\u7684\u8f6c\u8d26\u6700\u5c0f\u603b\u8d39\u7528\uff0c\u4e0e\u56fe\u8bba\u4e2d\u8981\u6c42\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u662f\u4e00\u4e2a\u610f\u601d\u3002\n\nA\u8981\u8f6c\u8d26\u7ed9B\uff0c\u5df2\u77e5B\u8981\u5f97\u5230100\u5143\u94b1\uff0c\u8981\u6c42A\u6240\u82b1\u8d39\u7684\u8d39\u7528\uff0c\u5373\u6c42B\u5230A\u7684\u201c\u6700\u77ed\u8def\u201d\u3002\n\n\u5c06\u6240\u6709\u7684\u70b9\u5206\u4e3a\u4e24\u4e2a\u96c6\u5408\uff0c\u4e00\u4e2a\u662fB\u76f4\u63a5\u80fd\u5230\u7684\u70b9\uff0c\u4e00\u4e2a\u662fB\u4e0d\u80fd\u76f4\u63a5\u5230\u7684\u70b9\u3002\n\n\u4eceB\u5f00\u59cb\u8d70\uff0c\u5230B\u6240\u6709\u80fd\u5230\u70b9\u5f00\u59cb\u904d\u5386\uff0c\u6bcf\u6b21\u5c06\u88ab\u904d\u5386\u7684\u70b9\u6240\u80fd\u5230\u7684\u70b9\uff0c\u5e76\u8bb0\u4e0b\u4ed6\u7684\u8d39\u7528\uff0c\u7136\u540e\u52a0\u5165\uff22\u80fd\u5230\u7684\u70b9\u3002\n\n\u4f46\u662f\u82e5\u53ea\u662f\u8fd9\u6837\uff0c\u4e0d\u52a0\u4efb\u4f55\u4f18\u5316\u7684Dijkstra\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f\uff2f\uff08\uff4e\uff0a\uff4e\uff09\u3002\n\n\u5982\u679c\u601d\u8003\u4e00\u4e0b\uff0c\u5728\u7b97\u6cd5\u4e2d\u591a\u4f59\u7684\u90e8\u5206\u662f\u5927\u90e8\u5206\u70b9\u4f1a\u88ab\u91cd\u590d\u904d\u5386\uff0c\u6c42\u8d39\u7528\u7684\u6700\u5c0f\u503c\uff0c\u5927\u80c6\u5047\u8bbe\u5982\u679c\u4e00\u5f00\u59cb\u904d\u5386\u6240\u5e26\u6765\u7684\u8d39\u7528\u5c31\u662f\u6700\u5c0f\u503c\uff0c\u7a0b\u5e8f\u80af\u5b9a\u4f1a\u8dd1\u5f97\u98de\u5feb\uff01\n\n\u5728\u96c6\u5408\u6309\u8d39\u7528\u5927\u5c0f\u4ece\u5c0f\u5230\u5927\u904d\u5386\uff01\n\n\u56e0\u4e3a\u5728\u8ba1\u7b97\u52a0\u5165\u70b9\u7684\u8d39\u7528\u65f6\uff0c\u662f\u7531\uff22\u5230\u88ab\u904d\u5386\u7684\u70b9\u7684\u8d39\u7528\u4e0e\u904d\u5386\u70b9\u548c\u52a0\u5165\u70b9\u7684\u8d39\u7528\u51b3\u5b9a\u7684\u3002\n\n\u53ef\u4ee5\u501f\u52a9\u6570\u636e\u7ed3\u6784\uff0c\u66f4\u52a0\u65b9\u4fbf\uff0c\u5982\u5806\uff0c\u4f18\u5148\u961f\u5217\uff0cmultiset\u3002\n\n\u8bb0\u4e0b\u8d39\u7528\u548c\u4e24\u70b9\u662f\u5426\u8054\u901a\u53ef\u4ee5\u7528\u7ed3\u6784\u4f53\u6216pair\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,a,b;//\u610f\u601d\u5982\u9898\u610f\nbool mark[2005];//\u8bb0\u4e0b\u8be5\u70b9\u6709\u65e0\u88ab\u904d\u5386\u8fc7\ndouble d[2005];//B\u70b9\u5230\u8be5\u70b9\u7684\u8d39\u7528\nvector < pair <int,int> > s[2005];//\u7528\u53ef\u53d8\u6570\u7ec4\u6765\u8bb0\u4e24\u70b9\u4e4b\u95f4\u80fd\u5426\u5230\u8fbe\u548c\u8d39\u7528\u5982\u4f55\uff0c\u76f8\u8f83\u4e8e\u666e\u901a\u6570\u7ec4\u66f4\u52a0\u65b9\u4fbf\nmultiset <pair <int,int> > f;//multiset\u91cc\u7528pair \u662f\u6309\u524d\u9762\u7684\u6570\u6392\u5e8f\nvoid dij() {\n\tfor(int i=1; i<=n; i++) d[i]=1e9;//\u82e5B\u5230\u8fbe\u4e0d\u4e86\uff0c\u5219\u8d39\u7528\u65e0\u9650\u5927\n\td[b]=100;//B\u5230B\uff0c100\u5143\n\tf.insert(make_pair(d[b],b));\n\tfor(int i=1; i<=n; i++) {\n\t\twhile(!f.empty()&&mark[(*f.begin()).second]) f.erase(f.begin());//\u5982\u679c\u8be5\u70b9\u88ab\u904d\u5386\u8fc7\u5219\u4e0d\u8981\n\t\tint p=(*f.begin()).second;//\u904d\u5386\u70b9\n\t\tmark[p]=1;\n\t\tfor(int j=0; j<s[p].size(); j++) {\n\t\t\tint h=s[p][j].second,z=s[p][j].first;//h\u4e3a\u52a0\u5165\u70b9\n\t\t\tdouble mon=d[p]/(100-z)*100;//\u8d39\u7528\n\t\t\tif(mon<d[h]) {\n\t\t\t\td[h]=mon;\n\t\t\t\tf.insert(make_pair(d[h],h));\n\t\t\t}//\u53d6\u6700\u5c0f\uff0c\u52a0\u5165\u3002\n\t\t}\n\t}\n}\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=0; i<m; i++) {\n\t\tint u,v,w;//u\u3001v\u4e3a\u70b9\uff0cw\u4e3a\u8d39\u7528\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\ts[u].push_back(make_pair(w,v));\n\t\ts[v].push_back(make_pair(w,u));\n\t}\n\tscanf(\"%d%d\",&a,&b);\n\tdij();\n\tprintf(\"%.8f\",d[a]);\n\treturn 0;\n}\n```\n",
        "postTime": 1571136539,
        "uid": 251894,
        "name": "QHhee004",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "### \u770b\u5404\u4f4d\u5927\u4f6c\u5404\u79cd\u65b9\u6cd5\u5c42\u51fa\u4e0d\u7a77\uff0c\u6211\u8fd9\u4e2a\u849f\u84bb\u4e0d\u624d\uff0c\u53ea\u80fd\u7528\u8fea\u6770\u65af\u7279\u62c9\u4e86\uff0c\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\u3002\n```cpp\n\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nint n, m, tx, ty; // tx\uff1a\u8d77\u70b9 ty\uff1a\u7ec8\u70b9\ndouble map[2010][2010], dis[2010]; // map\uff1a\u90bb\u63a5\u8868 dis\uff1a\u6700\u77ed\u8def\u5b58\u503c\nbool vis[2010]; // \u8bbf\u95ee\u6570\u7ec4\uff0c\u9632\u6b62\u5728\u6c42\u51fa\u5230\u6700\u77ed\u8def\u5f97\u70b9\uff0c\u91cd\u590d\u8bbf\u95ee\nint main() {\n\tint u,v,z;\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>u>>v>>z;\n\t\tmap[u][v]=map[v][u]=double(100 - z) /100;\n\t\t// \u90bb\u63a5\u8868\u5b58\u50a8\uff0c\u5e76\u628a\u503c\u8f6c\u5316\u4e3a 1 - 0.01 * z\n\t}\n\tcin>>tx>>ty;\n\tdis[tx]=1;// \u6700\u77ed\u8def\uff0c\u4ecetx\u5f00\u59cb\u7684\uff0c\u5e76\u8d4b\u503c\u4e3a1\uff08\u522b\u95ee\u4e3a\u4ec0\u4e48\u4e0d\u8d4b\u503c\u4e3a0\uff0c\u4f60\u628a\u4e00\u4e2a\u6570\u4e58\u4ee50\u7ed9\u6211\u770b\u770b\uff09\n\tfor(int i=1;i<=n;i++) { // dijkstra \u4e3b\u4f53\uff0c\u5f00\u59cb\u55bd\u3002\n\t\tint mark=0;\n\t\tdouble maxn=0; // mark \u5b58\u6700\u5927\u503c\u7684\u4e0b\u6807\uff0c maxn \u81ea\u5df1\u770b\u4e0b\u9762\uff0c\u6ce8\u610f\u8981double\u7c7b\u578b\n\t\tfor(int j= 1;j<=n;j++) if(!vis[j] && dis[j]>maxn)\n\t\t\t\tmaxn=dis[mark=j]; // \u8fd9\u91cc\u5c31\u662f\u66f4\u65b0manx\uff0c\u548c\u627e\u6700\u5927\u503c\u7684\u4e0b\u6807\uff0c\u522b\u770b\u5199\u7684\u77ed\n\t\tvis[mark]=true; // \u627e\u5230\u6700\u5927\u503c\u4e0b\u6807\uff0cvis\u8bbe\u8bbf\u95ee\u8fc7\u3002\n\t\tfor(int j=1;j<=n;j++) if(!vis[j]) // \u8fd9\u91cc\u5c31\u66f4\u65b0dis\u7684\u503c\u4e86\uff0cmax \u8981\u627edis\u6700\u5927\u561b\uff08\u76f8\u4e58\u54e6\uff0c\u7406\u89e3\u5f0f\u5b50\uff09 -_-||\n\t\t\t\tdis[j]=max(dis[j], dis[mark] * map[mark][j]);\n\t}\n\tprintf(\"%.8lf\",100/dis[ty]);// \u8fd9\u91cc\u518d\u6765\u4e00\u53e5\u5e9f\u8bdd\uff0c\u7cbe\u786e\u52308\u4f4d\u5c0f\u6570\n\treturn 0;\n}\n```\n\u5982\u679c\u5404\u4f4d\u5927\u4f6c\u6709\u4ec0\u4e48\u66f4\u597d\u7684\u65b9\u6cd5\uff0c\u8fd8\u8bf7\u5404\u4f4d\u5927\u4f6c\u6559\u6559\u6211\u3002",
        "postTime": 1570849086,
        "uid": 230323,
        "name": "\u10e6\ufe4f\ufeec\u5317\u2766\u6800",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "# \u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011\n\n\n** \u9898\u76ee\u4f20\u9001\u95e8\uff1a\uff1a\nhttps://www.luogu.org/problemnew/show/P1576 **\n\n======================================================================\u4e0b\u9762\u8bf7\u542c\u6211\u778e\u63b0=================\n\n\u672c\u9898\u5c5e\u4e8e**\u56fe\u8bba\u4e2d\u6700\u77ed\u8def**\u7684\u53d8\u5f0f\n\n\u65e2\u7136\u662f\u8981**\u627e\u6700\u5c0f\u8f6c\u8d26\u82b1\u8d39**\uff0c\u90a3\u4e48\u6211\u4eec\u6c42\u51fa**\u6700\u5927\u7684\u6c47\u7387**\u5c31\u884c\u5566\n\n**\uff08\u6700\u5927\u7684\u6c47\u7387\u662f\u6307\u8ba9\u6700\u540e\u80fd\u5269\u4e0b\u7684\u94b1\u6700\u591a\uff09**\n\n\u6240\u4ee5\u6211\u4eec\u76f4\u63a5**SPFA\u6c42\u51fa\"\u6700\u957f\u8def\"**\u5373\u53ef\n\n\uff08\u56e0\u4e3a\u672c\u4eba\u5f88\u5f31\uff0c\u4e0d\u4f1a\u7528 diji+heap \uff09\n\n\u6ce8\u610f\u8981\u7528double\u5b58dis\uff08\u6700\u5927\u6c47\u7387\uff09\u54e6\uff0c\n\n\u540c\u65f6**\u521d\u59cb\u5316**dis\u4e5f\u5f88\u91cd\u8981\uff0c\u672c\u4eba\u56e0\u4e3a\u8fd9\u4e2aWA\u4e86\u4e00\u6b21= =\n\n\u66f4\u8be6\u7ec6\u7684\u5728\u4ee3\u7801\u91cc\u54e6\n\n\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u4e0acode= =\n\n==================================================\n\n    #include<iostream>\n    #include<cstdio>\n    #include<cmath>\n    #include<algorithm>\n    #include<queue>\n    using namespace std;\n    typedef long long ll;\n    const int inf=1e9+7;\n    inline int read()\n    {\n        int p=0,f=1;char c=getchar();\n        while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n        while(c>='0'&&c<='9'){p=p*10+c-'0';c=getchar();}\n        return f*p;}\n    struct Edge\n    {\n\t    int from,to;\n\t    double w;\n    }p[200050];\n    int n,m,cnt,head[2050],vis[2050],Begin,End;\n    double dis[2050];//\u6ce8\u610f\u5b58\u7684\u662f\u6bcf\u4e2a\u4eba\u5bf9Begin\u7684\u6700\u5927\u6c47\u7387 \n    queue <int> q;\n    void add_edge(int x,int y,int W)//\u5b58\u8fb9\n    {\n\t    cnt++;\n\t    p[cnt].from=head[x];\n\t    head[x]=cnt;\n\t    p[cnt].to=y;\n\t    p[cnt].w=1.0-0.01*(double)W;\n\t    //\u6bcf\u6761\u8fb9\u5b58\u7684\u90fd\u662f\u4e24\u4e2a\u4eba\u7684\u6c47\u7387(\u4e0d\u662f\u635f\u5931\u7684\u624b\u7eed\u8d39)\n    }\n    void Init_()\n    { \n\t    n=read(),m=read();\n\t    for(int i=1;i<=m;i++)\n\t\t    {\n\t\t\t    int x=read(),y=read(),w=read();\n\t\t\t    add_edge(x,y,w);//\u65e0\u5411\u56fe\u8fb9\u6b63\u53cd\u5b58\u4e24\u904d \n\t\t\t    add_edge(y,x,w);\n\t\t    }\n    }\n    void prework()\n    {\n\t    Begin=read(),End=read();//\u8f93\u5165\u8d77\u70b9\u4e0e\u7ec8\u70b9\n\t    //\u8fd9\u91cc\u6ca1\u6709dis\u6570\u7ec4\u7684\u521d\u59cb\u5316,\u7531\u4e8e\u8981\u6c42\u6700\u957f\u8def,\u4e0d\u80fd\u9644\u6210inf\n\t    //\u9ed8\u8ba4\u4e3a0\u5373\u53ef(\u4e58\u6cd5\u7684\u8bdd\u4e5f\u4e0d\u80fd\u9644\u6210\u8d1f\u6570) \n\t    dis[Begin]=1.0;//\u521d\u59cb\u70b9\u5230\u81ea\u8eab\u6c47\u7387\u4e3a1 \n\t    vis[Begin]=1;\n\t    q.push(Begin);//\u8d77\u70b9\u5165\u961f\n    }\n    void SPFA()//\u6c42\u6700\u5927\u6c47\u7387(\u6700\u957f\u8def)\u5373\u53ef \n    {\n\t    prework();\n\t    while(!q.empty())\n\t\t      {\n\t\t  \t    int x=q.front();\n\t\t  \t    q.pop();\n\t\t  \t    vis[x]=0;\n\t\t  \t    for(int i=head[x];i;i=p[i].from)\n\t\t  \t\t    {\n\t\t  \t\t\t    double t1=dis[x]*p[i].w;\n\t\t\t\t\t      //\u6ce8\u610f\u8981\u4e58,\u6c47\u7387\u4e0d\u80fd\u52a0 \n\t\t  \t\t\t    if(dis[p[i].to]<t1)\n\t\t  \t\t\t       {\n\t\t  \t\t\t   \t   dis[p[i].to]=t1;\n\t\t  \t\t\t   \t   if(!vis[p[i].to])\n\t\t  \t\t\t   \t      {\n\t\t  \t\t\t   \t   \t  vis[p[i].to]=1;\n\t\t  \t\t\t   \t   \t  q.push(p[i].to);\n\t\t  \t\t\t   \t      }\n\t\t  \t\t\t       }\n\t\t  \t\t    }\n\t\t      }\n    }\n    int main()//\u7b80\u6d01\u7684\u4e3b\u51fd\u6570= =\n    {\n\t    Init_();//\u8f93\u5165\u4ee5\u53ca\u5b58\u8fb9\n\t    SPFA();//\u6c42\"\u6700\u957f\u8def\"\u5373\u53ef\n\t\t       //\u6700\u5c0f\u8d39\u7528*\u6700\u5927\u6c47\u7387==100.0\n\t    printf(\"%.8lf\",100.0/dis[End]);//\u53cd\u63a8\u521d\u59cb\u94b1\u6570\n\t    return 0;\n    }\n    \ncode\u5230\u6b64\u5c31\u7ed3\u675f\u5566~~\n\n===================\u5c0f\u4f19\u4f34\u7684\u8bc4\u8bba====================\n\n\u5c0f\u4f19\u4f34\uff1a\uff1a\n  \u6b6a\uff0c\u697c\u4e3b\u4f60\u7684\u4ee3\u7801\u771f\u4e11= =\n\n\u697c\u4e3b\uff1a\uff1a~~\uff08\u6211\u5c31\u662f\u4e11\u4f60\u6765\u54ac\u6211\u5440\uff09~~\n\n==================================================\n\n\u597d\u5566\uff0c\u6700\u540e\u63a8\u5e7f\u4e00\u4e0bmy blog::\n\nhttps://www.luogu.org/blog/new2zy/\n\n\n\u62dc\u62dc~~~ >=<",
        "postTime": 1525958150,
        "uid": 60359,
        "name": "___new2zy___",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3~~\u7adf\u7136\u662fDijkstra~~\n\n\u7ffb\u6765\u8986\u53bb\u603b\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u697c\u4e0b\u5927\u4f6c\u8981\u7528\u5806\u4f18\u5316---\n\n~~\u65e0\u8111~~\n\n\u5f88\u7b80\u5355\u7684\u4e00\u9053luo -D ijk str a- \u9898\u76ee\u554a\uff01\n\n\u8d34\u4ee3\u7801\u8d34\u4ee3\u7801\u2014\u2014\n\n\n------------\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<iomanip>\n#define maxn 0x7fffffff\nusing namespace std;\nint n,m,get[2001],p[2001],a1,a2;\ndouble bj[2001][2001],d[2001];\nvoid dijkstra()\n{\n\td[a1]=100;p[a1]=a1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint ma=-maxn,k;\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(!get[j]&&ma<d[j]) ma=d[j],k=j;\n\t\tget[k]=1;\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(bj[k][j]&&!get[j]&&d[k]*bj[k][j]>d[j]) d[j]=d[k]*bj[k][j],p[j]=k;\n\t}\n}\nint main()\n{\n\tint qw,er,ty;\n    cin>>n>>m;\n    for(int i=1;i<=m;i++) cin>>qw>>er>>ty,bj[er][qw]=bj[qw][er]=(100.0-ty)/100;\n    cin>>a2>>a1;\n    dijkstra();\n\tcout<<fixed<<setprecision(8)<<100.0/d[a2]*100<<endl;\n}\n```\n\n\n\u58f0\u660e\uff1ap[2001]\u6807\u8bb0father\u662f\u4e3a\u4e86\u65b9\u4fbf\u9700\u8981\u8f93\u51fa\u8def\u5f84\u7684-\u9898\u7528\uff0c\u6b64\u9898\u8bf7\u65e0\u89c6\n\n~~-DaLao\u8bf7\u65e0\u89c6-~~",
        "postTime": 1531053965,
        "uid": 106182,
        "name": "KaisuoShutong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "//\u770b\u5230\u5404\u4f4d\u5927\u4f6c\u5927\u90e8\u5206\u90fd\u7528\u90bb\u63a5\u8868\u505a\u7684\u8fd9\u9053\u9898\uff0c\u90a3\u672c\u849f\u84bb\u5c31\u53d1\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635\u7684\u9898\u89e3\u5427\u3002\u601d\u8defspfa\uff0c\u6570\u636e\u8303\u56f4\u4e0d\u5927\uff0c\u4e3b\u8981\u4fbf\u4e8e\u521d\u5b66\u56fe\u8bba\u7684\u670b\u53cb\u7406\u89e3...\n```cpp\n#include <iostream>\n#include <cstdio>\n\nusing namespace std;\n\nconst int maxm=100010;\nconst int maxn=2010;\n\nint e[maxn][maxn];  //\u90bb\u63a5\u77e9\u9635\ndouble dis[maxn];\nbool b[maxn];\nint team[maxn];\n\n\nint main(){\n\tint n,m;\n\tint s=0,t=0;\n\tscanf(\"%d%d\",&n,&m);\n\t\n\tfor(int i=1;i<=m;i++)\n\t{\t\n\t\tint x,y,z;\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\te[x][y]=z;\n\t\te[y][x]=z;\n\t}\n\tint p1,p2;\n\tscanf(\"%d%d\",&p1,&p2);\n\t//\u521d\u59cb\u5316 \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdis[i]=1e9;\n\t}\n\tdis[p2]=100;\t\t\t\t\n\t\n\t\n\tteam[t]=p2;\n\tt++;\n\tb[p2]=true;\n\t\n\t\n\twhile(s!=t)\n\t{\n\t\tint now=team[s];\n\t\ts++;\n\t\ts%=n;\n\t\tb[now]=false;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(e[now][i]!=0) //now\u5230i\u6709\u8fb9 \n\t\t\t{\n\t\t\t\tdouble tem=dis[now]/(100.0-e[now][i])*100;\n\t\t\t\tif(tem<dis[i])\n\t\t\t\t{\n\t\t\t\t\tdis[i]=tem;\n\t\t\t\t\tif(b[i]==false)\n\t\t\t\t\t{\n\t\t\t\t\t\tteam[t]=i;\n\t\t\t\t\t\tt++;\n\t\t\t\t\t\tt%=n;\n\t\t\t\t\t\tb[i]=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n\tprintf(\"%.8lf\",dis[p1]);\n\treturn 0;\n}\n\n```",
        "postTime": 1520083515,
        "uid": 49758,
        "name": "\u53cb\u5229\u5948\u7eea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "//\u5e08\u627f \u732b\u7cae\u5bf8\u65ad\n\n\u7b2c\u4e00\u6b21\u5728\u843d\u8c37\u5199\u9898\u89e3\uff0c\u4e5f\u662f\u7b2c\u4e00\u6b21\u7528spfa\u505a\u9898\uff1b\n\n\u89e3\u51b3\u4e86\u732b\u54e5\u5b58\u6570\u7684\u95ee\u9898\uff0c\u5176\u4ed6\u57fa\u672c\u4e00\u6837\uff0c\u591a\u4e86\u4e9b\u8bb2\u89e3\uff1b\n\n\u4e0a\u4ee3\u7801\uff1a\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cstring>\nusing namespace std;\ninline int read()\n{\n    int ee=0;\n    char ss=getchar();\n    while(ss<'0'||ss>'9')ss=getchar();\n    while(ss>='0'&&ss<='9')\n    {\n        ee=(ee<<1)+(ee<<3)+ss-'0';\n        ss=getchar();\n    }\n    return ee;\n} //\u62d9\u52a3\u7684\u8bfb\u6b63\u6574\u6570\u7684\u5feb\u8bfb\nstruct my_s\n{\n    int p;//people\uff0c\u5b58\u4eba\n    double r;//rate\uff0c\u5b58\u6c47\u7387\n};vector<my_s> a[2005];//\u52a8\u6001\u6570\u7ec4\u7ed3\u6784\u4f53\nint x,y,A,B,n,m,now,head=1,tail=1,que[50005];//\u961f\u5217\u8981\u5f00\u5927\u4e9b\ndouble z,minn[2005];//minn\u6570\u7ec4\u6765\u5b58\u6700\u77ed\u8def\nint main()\n{\n    memset(minn,127,sizeof(minn));\n    n=read();m=read();\n    for(int i=1;i<=m;i++)\n    {\n        x=read();y=read();z=read();\n        z/=100;z=1-z;\n        a[x].push_back((my_s){y,z});//\u6309\u7ed3\u6784\u4f53\u987a\u5e8f\u5b58\u50a8\n        a[y].push_back((my_s){x,z});//\u65e0\u5411\u56fe\n    }\n    A=read();B=read();\n    que[head]=A;minn[A]=100;\n    while(head<=tail)//spfa\u6a21\u677f\n    {\n        now=que[head];//\u7b97\u662f\u679a\u4e3e\u90bb\u63a5\u8868\n        for(int i=0;i<a[now].size();i++)\n        {\n            if(minn[a[now][i].p]>minn[now]/a[now][i].r)//\u66f4\u65b0\u6700\u77ed\u8def\n            {\n                minn[a[now][i].p]=minn[now]/a[now][i].r;\n                tail++;\n                que[tail]=a[now][i].p;\n            }\n        }\n        head++;\n    }\n    printf(\"%.8lf\",minn[B]);//\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1508853588,
        "uid": 50434,
        "name": "Kindness",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\ndouble a[2001][2001],dis[2001]={0},minn;\nint n,m,i,j,k,x,y,f[2001]={0}; \nvoid init () //\u5b9a\u4e49\u8be5\u51fd\u6570\u4ee5\u5904\u7406\u5f55\u5165\u6570\u636e\n{\n    cin>>n/*\u603b\u4eba\u6570*/>>m/*\u53ef\u4ee5\u76f8\u4e92\u8f6c\u8d26\u7684\u4eba\u7684\u5bf9\u6570*/;\n    for(i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&j,&k);/*\u5f55\u5165\u53ef\u4ee5\u76f8\u4e92\u8f6c\u8d26\u7684\u4e24\u4eba\u7684\u5e8f\u53f7*/\n        scanf(\"%lf\",&a[j][k]);/*\u5c06\u8fd9\u4e24\u4eba\u7684\u624b\u7eed\u8d39\u8f6c\u5b58\u5165\u8be5\u6570\u7ec4\u4e2d*/\n        a[j][k]=(100-a[j][k])/100;/*\u6539\u53d8\u624b\u7eed\u8d39\u7684\u5f62\u5f0f\uff08\u5373\uff0c\u5c06\u539f\u6765\u7684\u6263\u9664\u767e\u5206\u6bd4 \u8f6c\u6362 \u4e3a\u5269\u4f59\u767e\u5206\u6bd4\uff09*/\n        a[k][j]=a[j][k];/*a\u4f20\u7ed9b\u7684\u624b\u7eed\u8d39\u7b49\u4e8eb\u4f20\u7ed9a\u7684\u624b\u7eed\u8d39*/\n    }\n    cin>>x>>y;/*\u8f93\u5165\u8981\u6c42\u8ba1\u7b97\u7684\u4e24\u4eba*/\n}\nvoid dijkstra(int x)/*\u5b9a\u4e49\u8be5\u51fd\u6570\u4ee5\u786e\u5b9a\u6700\u5c0f\u7684\u624b\u7eed\u8d39*/\n{\n    for(i=1;i<=n;i++)/*\u8be5\u5faa\u73af\u7528\u4ee5\u5c06\u624b\u7eed\u8d39\u91cd\u65b0\u8d4b\u503c\u7ed9dis\u6570\u7ec4\uff0cf\u673a\u5236\u7528\u4e8e\u5224\u65ad\u662f\u5426\u4ee5\u786e\u5b9a\u51fa\u6700\u5c0f\u503c*/\n    {\n        dis[i]=a[x][i];/*\u8d4b\u503c*/\n        dis[x]=1;/*x\u8f6c\u8d26\u7ed9x\u7684\u624b\u7eed\u8d39\u4e3a1(\u5373\u6ca1\u6709\u624b\u7eed\u8d39)*/\n        f[x]=1;/*x\u4ee5\u88ab\u786e\u5b9a\u4e3a\u672c\u8f6e\u4e2d\u5fc5\u987b\u8981\u8d70\u7684\u6700\u5c0f\u4e2d\u8f6c\u70b9*/\n    }\n    for(i=1;i<=n-1;i++)/*\u8be5\u5faa\u73af\u7528\u4ee5\u91cd\u65b0\u5b9a\u4e49\u4ecea\u70b9\u8f6c\u8d26\u5230b\u70b9\u7684\u624b\u7eed\u8d39*/\n    {\n        minn=0;/*\u5269\u4f59\u6700\u5c11\u4e3a0*/\n        for(j=1;j<=n;j++)/*\u8be5\u5faa\u73af\u7528\u4ee5\u7a77\u4e3e*/\n        {\n            if(f[j]==0&&dis[j]>minn)/*\u5982\u679cj\u70b9\u5e76\u672a\u88ab\u786e\u5b9a\uff0c\u5e76\u4e14x\u8f6c\u8d26\u5230j\u70b9\u6240\u80fd\u4f59\u7559\u7684\u5b58\u6b3e\u6700\u591a*/\n            {\n                k=j;/*\u5c06j\u70b9\u8d4b\u503c\u7ed9k\u70b9*/\n                minn=dis[j];/*minn\u7528\u4ee5\u8bb0\u5f55x\u5230j\u70b9\u6240\u9700\u7684\"\u6700\u5c0f\u201c\u624b\u7eed\u8d39\uff0c\u7c7b\u4f3c\u4e8e\u5e7f\u641c*/\n            }\n        }\n        f[k]=1;/*\u58f0\u660ek\u70b9\u88ab\u786e\u5b9a*/\n        if(k==y)\n        {\n            break;\n        }\n        for(j=1;j<=n;j++)\n        {\n            if(f[j]==0&&dis[k]*a[k][j]>dis[j])/*\u5982\u679cj\u70b9\u6ca1\u88ab\u786e\u5b9a\u5e76\u4e14x\u5230k\u70b9\u518d\u5230j\u70b9\u7684\u6240\u80fd\u4f59\u7559\u4e0b\u7684\u5b58\u6b3e\u6bd4x\u76f4\u63a5\u8f6c\u7ed9j\u70b9\u8981\u591a*/\n            {\n                dis[j]=dis[k]*a[k][j];/*\u91cd\u65b0\u5b9a\u4e49x\u5230j\u70b9\u7684\u6700\u5c0f\u624b\u7eed\u8d39*/\n            }\n        }\n    }\n}\nint main()\n{\n    init();\n    dijkstra(x);\n    printf(\"%0.8lf\",100/dis[y]);\n    return 0;\n}\n/*\uff08TMD \u522b\u4eba\u7684\u4ee3\u7801\u771f\u6478\u4e0d\u7740\u5934\u8111\uff09*/\n```",
        "postTime": 1500601651,
        "uid": 49963,
        "name": "\u7075\u5ba5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "//\u4f7f\u7528\u7684\u662fDijkstra\u7b97\u6cd5\uff0c\u697c\u4e0a\u72060\u662f\u56e0\u4e3a\u90bb\u63a5\u77e9\u9635\u7684\u6700\u5927\u503c\u5728\u4ee5\u4e0b\u8fdb\u884c\u5904\u7406\u7684\u65f6\u5019\u4f1a\u53d8\u62100.\n\n//\u770b\u6210\u4eceB\u70b9\u8f6c\u94b1\u5230A\u70b9\u5373\u53ef\uff0c\u7b26\u5408Dijkstra\u5148\u5904\u7406\u7684\u786e\u5b9a\u503c\u5927\u4e8e\u540e\u7eed\u4f30\u8ba1\u503c\u7684\u524d\u63d0\n\n\n\n    \n        \n```cpp\n#include<iostream>\n#define MAXN 2001\n#define inf 99999\nusing namespace std;\nint N,M,A,B;\ndouble m[MAXN][MAXN];\nint main()\n{\n    int i,j;\n    cin>>N>>M;\n    cout.setf(ios::fixed);\n    for (i=0;i<N;i++)\n        for (j=0;j<N;j++)\n            m[i][j]=1/inf;\n    for (i=0;i<M;i++)\n    {\n        int x,y,t;\n        cin>>x>>y>>t;\n        x--; y--;\n        m[x][y]=m[y][x]=1-(t/100.0);        //exchange to weight\n    }\n    cin>>A>>B;\n    A--; B--;\n    //dijkstra\n    double dis[MAXN];                            //dis i:money needed to trans 100 to i\n    bool book[MAXN];\n    book[B]=true;\n    for (i=0;i<N;i++)\n    {\n        dis[i]=100/m[B][i];                    //init dis[]\n        book[i]=false;                            //init book[]\n    }\n    for (j=0;j<N;j++)\n    {\n        int nmin;\n        double min=inf;\n        for (i=0;i<N;i++)\n            if (dis[i]<min&&!book[i])\n            {\n                nmin=i;\n                min=dis[nmin];                    //find #min->nmin\n            }\n        book[nmin]=true;                        //record in book[]\n        for (i=0;i<N;i++)\n            if (min/m[nmin][i]<dis[i]&&!book[i])        //relax\n                dis[i]=min/m[nmin][i];\n    }\n    cout.precision(8);\n    cout<<dis[A];\n    return 0;\n}\n```",
        "postTime": 1480848256,
        "uid": 26767,
        "name": "cleverman",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u6ca1\u6709\u4eba\u6253pascal\u7684SPFA?\n\n\u6211\u6765\u653e\u4e00\u4e2a\u3002\n\n\u53ef\u4ee5\u628a\u5b83\u5f53\u505a\u6c42\u6700\u957f\u8def\u3002\n\n\u518d\u62ff\u4e00\u4e2a\u6570\u53bb\u9664\u3002\n\n\u4e3a\u4e86\u7cbe\u5ea6\u6211\u7528\u4e86extended\uff0c\u521d\u59cb\u503c\u4e3a100\u3002\n\n\u63a5\u4e0b\u6765\u662f\u4ee3\u7801\uff1a\n\n```cpp\nvar first,last:array [1..2000] of longint;\nnext,en,fee:array [1..2000000] of longint;\nf:array [1..2000] of extended;\ndl:array [1..8000] of longint;\nb:array [1..2000] of boolean;\nh,t,n,m,s,endd,i,top,x,y,z:longint;\nans:extended;\nprocedure add(x,y,z:longint);\nbegin\n  inc(top);\n  if first[x]=0 then first[x]:=top\n  else next[last[x]]:=top;\n  last[x]:=top;\n  en[top]:=y;\n  fee[top]:=z;\nend;//\u90bb\u63a5\u8868\nbegin\n  read(n,m);\n  for i:=1 to m do\n  begin\n    read(x,y,z);\n    add(x,y,z);\n    add(y,x,z);\n  end;\n  read(s,endd);\n  dl[1]:=s;\n  f[s]:=100;\n  fillchar(b,sizeof(b),true);\n  t:=1;\n  repeat\n    inc(h);\n    b[dl[h]]:=true;\n    i:=first[dl[h]];\n    while i>0 do\n    begin\n      if f[en[i]]<f[dl[h]]*(100-fee[i])/100 then//\u56e0\u4e3a\u662f\u6700\u957f\u8def\uff0c\u6240\u4ee5\u662f\u5c0f\u4e8e\u53f7\u3002\n      begin\n        f[en[i]]:=f[dl[h]]*(100-fee[i])/100;\n        if b[en[i]] then\n        begin\n          inc(t);\n          b[en[i]]:=false;\n          dl[t]:=en[i];\n        end;\n      end;\n      i:=next[i];\n    end;\n  until h=t;//SPFA\n  ans:=10000/f[endd];\n  write(ans:0:8);\nend.\n```",
        "postTime": 1470716448,
        "uid": 13940,
        "name": "pupuvovovovovo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u633a\u6c34\u7684\uff0c\u7528SPFA\u5373\u53ef\uff08~~\u867d\u7136\u5b83\u5df2\u7ecf\u6b7b\u4e86~~\uff09  \n\u7531\u4e8e\u6570\u636e\u5c0f\uff0c\u6240\u4ee5\u6ca1\u6709\u7528\u90bb\u63a5\u8868\uff0c\uff08~~\u6211\u624d\u4e0d\u544a\u8bc9\u4f60\u6211\u4e0d\u4f1a\u5462~~\uff09\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nint s,t;//s=A,t=B\nint a[2100][2100];//\u5b58\u624b\u7eed\u8d39\u7684\nint n,m;\nbool f[21010];\ndouble d[2100];\nint xa[100000];\nvoid spfa(int x)//SPFA\u5927\u5bb6\u5e94\u8be5\u90fd\u4f1a\u5427\n{\n\tint h=0,t=1;\n\txa[1]=s;\n\tint i;\n\tint y;\n\twhile (t!=h)\n\t{\n\t\th++;\n\t\ty=xa[h];\n\t\tf[y]=false;\n\t\tfor (i=1;i<=n;i++)\n\t\tif(a[i][y]!=0&&d[y]/(1-(a[i][y]/100.0))<d[i])//\u5343\u4e07\u4e0d\u80fd\u5199\u6210(1-(a[i][y]/100)\n\t\t{\n\t\t\td[i]=d[y]/(1-(a[i][y]/100.0));\n\t\t\tif (f[i]==false)\n\t\t\t{\n\t\t\t\tt++;f[i]=true;xa[t]=i;\n\t\t\t}\t\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>n>>m;\n\tint i;\n\tint x,y,z;\n\tfor (i=1;i<=m;i++)\n\t{\n\t\tcin>>x>>y>>z;\n\t\ta[x][y]=z;a[y][x]=z;//\u53ef\u4ee5\u4e92\u76f8\u8f6c\u8d26,\u76f8\u5f53\u4e8e\u65e0\u5411\u56fe\n\t}\n\tcin>>s>>t;\n\tfor (i=1;i<=n;i++)\n    d[i]=500000000;\n    d[s]=100;//\u8f6c\u8d26\u540eB\u8981\u6536\u5230100\u5143\n    f[s]=true;\n\tspfa(s);\n\tprintf(\"%.8lf\\n\",d[t]);\n\treturn 0;\n}\n```",
        "postTime": 1550303580,
        "uid": 156456,
        "name": "zcl1024",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "\u540c\u6837\u7528SPFA\uff0cdis[x]\u8bbe\u4e3a100\u5373\u53ef\uff0c\u56e0\u4e3a\u6b64\u9898\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u8981\u5c06\u8fb9\u6570\u4e58\u4ee52.\n\nc++\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n    int n,m,fir[1100],ne[1100000],u[1100000],v[1100000],w[1100000],a,b; double dis[1100]; bool f[1100];\n    queue<int> q;\nvoid spfa(int x){\n    for(int i=1;i<=n;i++)dis[i]=99999999999.0;\n    memset(f,false,sizeof(f));\n    dis[x]=100.0; q.push(x); f[x]=true;\n    while(!q.empty()){\n        int fj=q.front();\n        q.pop(); f[fj]=false;\n        for(int i=fir[fj];i!=-1;i=ne[i]){\n            double sum=dis[fj]*100/(100-w[i]); \n            if(sum<dis[v[i]]){\n                dis[v[i]]=sum;\n                if(!f[v[i]]){\n                    q.push(v[i]);\n                    f[v[i]]=true;\n                }\n            }\n        }\n    }\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    memset(fir,-1,sizeof(fir)); memset(ne,-1,sizeof(ne));\n    for(int i=1;i<=m;i++){\n        int x,y,z;\n        scanf(\"%d%d%d\",&x,&y,&z);\n        int j=i*2;\n        u[j]=x; u[j+1]=y; v[j]=y; v[j+1]=x; w[j]=z; w[j+1]=z;\n        ne[j]=fir[u[j]];\n        fir[u[j]]=j;\n        ne[j+1]=fir[v[j]];\n        fir[v[j]]=j+1;\n    }\n    scanf(\"%d%d\",&a,&b);\n    spfa(a);\n    printf(\"%.8lf\",dis[b]);\n}\n```",
        "postTime": 1505800335,
        "uid": 49298,
        "name": "stone123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "\u7b80\u5355\u7684\u4e00\u9053SPFA\u3002\u540c\u697c\u4e0b\u5927\u795e\uff0c\u8f6c\u5316\u4e3a\u6c42\u6700\u957f\u8def\uff0c\u9664\u4e00\u4e0b\u5c31\u53ef\u4ee5\u5566\u3002\uff08SPFA\u4e0d\u4f1a\u7684\u81ea\u884c\u767e\u5ea6\uff09\n\n\u91cd\u70b9\u63d0\u9192\uff1a\u6570\u7ec4\u5f00\u591f\uff01\u672c\u4eba\u88ab\u6b64\u5751\u6b7b\u4e86\uff0c\u4ea4\u4e86\u597d\u51e0\u904d\u2026\u2026\n\n\u4ee5\u4e0b\u8d34\u4ee3\u7801\uff1a\n\n\n\n```cpp\n    #include<cstdio>\n    #include<cstring>\n    #include<iostream>\n    using namespace std;\n    int n,m,cnt=0;\n    int head[400001],nxt[400001],to[400001];\n    int q[400001],f[400001];\n    double dis[400001],val[400001];\n    void addedge(int x,int y,double z)\n    {\n        cnt++;\n        nxt[cnt]=head[x];\n        head[x]=cnt;\n        to[cnt]=y;\n        val[cnt]=z;\n    }\n    void spfa(int a,int b)\n    {\n        int l=0,r=1,u;\n        q[1]=a;\n        f[a]=1;\n        dis[a]=1;\n        while(l<r)\n        {\n            u=q[++l];//\u624b\u6253\u961f\u5217~\n            f[u]=0;\n            for(int i=head[u];i!=0;i=nxt[i])\n            {\n                if(dis[to[i]]<dis[u]*val[i])//\u522b\u5fd8\u662f\u4e58\n                {\n                    dis[to[i]]=dis[u]*val[i];\n                    if(!f[to[i]])\n                    {\n                        q[++r]=to[i];\n                        f[to[i]]=1;\n                    }\n                }\n            }\n        }\n    }\n    int main()\n    {\n        memset(dis,0,sizeof(dis));\n        memset(f,0,sizeof(f));\n        scanf(\"%d%d\",&n,&m);\n        for(int i=1;i<=m;i++)\n        {\n            int x,y;\n            double z;\n            scanf(\"%d%d%lf\",&x,&y,&z);\n            addedge(x,y,double((100-z)/100));//\u90bb\u63a5\u8868\n            addedge(y,x,double((100-z)/100));\n        }\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        spfa(a,b);//\u6700\u77ed\u8def\uff0c\u5176\u5b9e\u6700\u957f\u8def(\uffe2_\uffe2)\n        printf(\"%.8lf\",100/double(dis[b]));\n        return 0;\n}\n```",
        "postTime": 1499756771,
        "uid": 21874,
        "name": "hicc0305",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "### [P1576](https://www.luogu.org/problem/P1576)\n\n   \u8fd9\u9053\u9898\u76ee\u770b\u5230\u6700\u5c0f\uff0c\u53c8\u6709\u591a\u4e2a\u4eba\uff0c\u5c31\u76f4\u63a5\u6700\u77ed\u8def\uff0c\u53ef\u662f\u53c8\u6709\u4e00\u4e9b~~\u4e0d\u540c~~\uff0c\u5982\u679c\u4e4b\u95f4\u53bb\u627e\u6263\u9664\u4e2d\u7684\u6700\u5c11\uff0c\u90a3\u4e48\u5c31\u4f1a\u66f4\u5927\uff0c\u6240\u4ee5\u6211\u5148\u628a\u4e24\u4e2a\u4eba\u4e4b\u95f4\u53ef\u4ee5\u6536\u5230\u767e\u5206\u4e4b\u591a\u5c11\u7b97\u51fa\u6765\uff0c\n```\nvertex[a][b]=(100-c)/100.0;\nvertex[b][a]=vertex[a][b];\n```\n   \u518d\u8dd1\u4e00\u8fb9\u6700\u77ed\u8def\uff0c\u603b\u4e4b\uff0c\u6211\u8ba4\u4e3a\u8fd9\u548c\u6a21\u677f\u6ca1\u6709\u592a\u5927\u7684\u533a\u522b\uff0c\u53ea\u662f\u591a\u4e86\u5728\u8f93\u5165\u65f6\uff0c\u591a\u8ba1\u7b97\u4e00\u8fb9\u3002\n   \n   \u6211\u60f3\uff0c\u5f88\u591a\u4eba\u90fd\u7528\u7684floyd\uff0c\u4f46\u6211\u7528\u7684\u662fdijkstra,\u56e0\u4e3a\u8fd9\u9053\u9898\u6c42\u7684\u662fA\u5230B\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u662f\u5355\u6e90\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u6ca1\u5fc5\u8981\u7528floyd\uff0c\u76f4\u63a5dijkstra\u5c31\u597d\u4e86\u3002\u5728\u6b64\uff0c\u6211\u4e5f\u4e0d\u518d\u8fc7\u591a\u7684\u8d58\u8ff0\uff0c_\u4ee3\u7801_\u5982\u4e0b\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\ndouble dis[2010],vertex[2010][2010];//dis\u7ef4\u62a4\u5355\u70b9\u95f4\u6700\u5c0f\u8ddd\u79bb \uff0cvertex[i][j]\u662f\u70b9i\u5230j\u7684\u76f4\u63a5\u8ddd\u79bb \nint n,m,s,e;\nstruct node{\n    int id;\n    double longs;\n    bool operator<(const node & next) const\t//\u91cd\u7f6e\u8fd0\u7b97\u7b26 \n    {\n        return longs < next.longs;\n    }\n};\nvoid dijkstra(int s){\t//dijkstra+\u4f18\u5148\u961f\u5217\uff08\u5806\u4f18\u5316\uff09 \n    priority_queue<node> pq;//\u5c0f->\u5927 \n    for(int i=1;i<=n;i++)\n        dis[i]=0;\n    dis[s]=1;\n    node cur;\n    cur.id=s,cur.longs=dis[s];\n    pq.push(cur);\n    while(!pq.empty()){\n        int u=pq.top().id;//\u961f\u9996\u5c31\u662f\u56fe\u4e2d\u521d\u59cb\u70b9\u5230\u6bcf\u4e2a\u70b9\u7684\u8ddd\u79bb\u6700\u5c0f\u7684\u70b9 \n        pq.pop();\n        for(int i=1;i<=n;i++){\n            if(dis[u]*vertex[u][i]>dis[i]){\n                dis[i]=dis[u]*vertex[u][i];\n                node next;\n                next.id=i;\n                next.longs=dis[i];\n                pq.push(next);\n            }\t\n        }\n    }\n} \nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tvertex[i][j]=(i==j)? 1 : 0; //\u521d\u59cb\u5316vertex \n\tfor(int i=1;i<=m;i++){\n\t\tint a,b,c;\n\t\tcin>>a>>b>>c;\n\t\tvertex[a][b]=(100-c)/100.0;//\u9898\u76ee\u662f\u6263\u9664c%\u7684\u624b\u7eed\u8d39 \n\t\tvertex[b][a]=vertex[a][b];//\u65e0\u5411\uff0c\u4e24\u4eba\u4e4b\u95f4 \n\t}\n\tcin>>s>>e;\n\tdijkstra(s);\n\tdouble ans=100.0/dis[e];//dis\u50a8\u5b58\u7684\u6700\u5c0f\u6263\u9664\u7684\u767e\u5206\u6bd4 \n\tprintf(\"%.8lf\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1573355023,
        "uid": 108540,
        "name": "\u4ece\u4e0d\u518d\u89c1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "\u6211\u4eec\u4e00\u5f00\u59cb\u770b\u5230\u9898\u76ee\u53ef\u80fd\u4f1a\u89c9\u5f97\u65e0\u4ece\u4e0b\u624b\n\n\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u770b\u4e00\u4e0b\u8f93\u5165\u7684\u6570\u636e\n\n\u6bcf\u4e24\u4e2a\u4eba\u4e4b\u95f4\u7684\u201c\u6c47\u7387\u201d\uff0c\n\n\u53c8\u8ba9\u6c42\u600e\u4e48\u6837\u53ef\u4ee5\u4f7f\u5f97A\u7528\u6700\u5c11\u94b1\u8f6c\u5230B\u624b\u4e2d\u4f7fB\u5f97\u5230\u6b63\u597d100RMB\uff08~~\u4e8b\u771f\u591a~~ \uff09\n\n\u6211\u4eec\u5982\u679c\u76f4\u63a5\u4eceA\u6765\u770b\u6700\u77ed\u8def\u662f\u80af\u5b9a\u5f88\u9ebb\u70e6\u7684\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8f93\u5165\u7684\u4e24\u4e2a\u4eba\u4e4b\u95f4\u7684\u201c\u6c47\u7387\u201d\u662f\u4e92\u76f8\u7684\n\n\u6309\u7167\u56fe\u7684\u601d\u60f3\u5c31\u662f\u8f93\u5165\u7684\u662f\u65e0\u5411\u8fb9\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u6c42\u51faB\u5230A\u7684\u6700\u77ed\u8def\n\n\u628a\u539f\u6765\u6c42\u5355\u6e90\u6700\u77ed\u8defdis\u6570\u7ec4\u610f\u4e49\u8bbe\u7f6e\u4e3adis[i]\u662f\u7b2ci\u4e2a\u4eba\u5230\u7b2cB\u4e2a\u4eba\u4f7f\u5f97B\u8f6c\u8d26\u5f97\u5230\u7684\u6b63\u597d\u4e3a100\u5143\u8fd9\u4e2a\u7b2ci\u4e2a\u4eba\u6700\u5c11\u521d\u59cb\u94b1\u6570\n\n\u6211\u4eec\u8bbedis[B]\u70b9\u7684\u6700\u77ed\u8def\u4e3a100\uff08RMB\uff09\n\n\u5219\u4f7f\u7528SPFA\u7b97\u6cd5\uff0c\u53ea\u9700\u8981\u628a\u677e\u5f1b\u64cd\u4f5c\u7a0d\u5fae\u6539\u53d8\u4e00\u4e0b\u5373\u53ef\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\nstruct CZP\n{\n\tint next,to;\n\tdouble dis;\n}a[200002];\ndouble dis[200002];\nint n,m,sx,ex,que[2000002],b[10001],h[10001],top;\nvoid cun(int from ,int to,double dis)\n{\n\ta[++top].next=h[from];\n\ta[top].to=to;\n\ta[top].dis=dis;\n\th[from]=top;\n}  //\u4f7f\u7528\u90bb\u63a5\u8868\u5b58\u50a8\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=n;i++)\n\th[i]=-1;\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint x,y,z;\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tcun(x,y,(double)z);\n\t\tcun(y,x,(double)z);  //\u6ce8\u610f\u5c06z\u8fdb\u884c\u5c0f\u6570\u5316\uff0c\u8981\u4e0d\u7136\u4f1a\u5361\uff0c\u5c31\u56e0\u4e3a\u8fd9\u4e2a\u5361\u4e86\u5f88\u957f\u65f6\u95f4\uff01\n\t}\n\tscanf(\"%d%d\",&sx,&ex);\n\tint head=0,tail=1;\n\tfor (int i=1;i<=n;i++)\n\tdis[i]=10000000000.0;  \n\tdis[ex]=100.0,b[ex]=1,que[1]=ex;\n\tdo\n\t{\n\t\thead=head%10001+1;\n\t\tint v=que[head];\n\t\tb[v]=0;\n\t\tint k=h[v];\n\t\twhile (k!=-1)\n\t\t{\n\t\t\tif (dis[a[k].to]>dis[v]/(1-a[k].dis/100))  //\u8fd9\u91cc\u7684\u677e\u5f1b\u8bed\u53e5\u7a0d\u52a0\u6539\u53d8\n\t\t\t{\n\t\t\tdis[a[k].to]=dis[v]/(1-a[k].dis/100);\n\t\t\tif (!b[a[k].to])\n\t\t\t{\n\t\t\t\ttail=tail%10001+1;\n\t\t\t\tb[a[k].to]=1;\n\t\t\t\tque[tail]=a[k].to;\n\t\t\t}\n\t\t}\n\t\tk=a[k].next;\n\t}\n}while (head<tail);  //\u5176\u4ed6\u90e8\u5206\u5747\u4e3aSPFA\u7684\u6a21\u677f\u6ca1\u6709\u6539\u53d8\n    printf(\"%.8lf\",dis[sx]);\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1565799094,
        "uid": 24812,
        "name": "Sakura_Peng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "\u6c42\u6700\u5c0f\u82b1\u8d39\uff0c\u6ca1\u6709\u8d1f\u8fb9\u6743\uff0c\u6ee1\u8db3Dijkstra\u7684\u6761\u4ef6\uff0c\u6240\u4ee5\u76f4\u63a5\u5806\u4f18\u5316Dijkstra\u3002Dijkstra\u672c\u6765\u7528\u4e8e\u6c42\u6700\u77ed\u8def\uff0c\u79fb\u690d\u5230\u672c\u9898\u6c42\u6700\u5c0f\u6bd4\u4f8b\uff0c\u663e\u7136\u6ca1\u6709\u95ee\u9898\u3002\u672c\u9898\u8981\u6ce8\u610fB\u624d\u662f\u5df2\u77e5\uff0cA\u662f\u672a\u77e5\uff0c\u6240\u4ee5\u662f\u4eceB\u5230A\u800c\u4e0d\u662f\u4eceA\u5230B\uff0c\u522b\u88ab\u60ef\u6027\u601d\u7ef4\u8bef\u5bfc\u4e86\u3002\n\uff08\u4e24\u79cd\u6c42\u6cd5\uff1a1\u3001\u70b9\u4e0a\u5b58\u6bd4\u4f8b\uff0c2\u3001\u70b9\u4e0a\u5b58\u5728\u8fd9\u4e2a\u70b9\u9700\u8981\u8f6c\u7684\u94b1\uff0c\u90fd\u6ca1\u6709\u95ee\u9898\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5199\u7684\u662f\u7b2c\u4e8c\u79cd\uff09\n\n\u5982\u4f55\u907f\u514d\u7cbe\u5ea6\u95ee\u9898\uff1f\u53ef\u4ee5\u65e0\u8111\u4e0along double\uff0c\u5bf9\u4e8e\u672c\u9898\u6570\u636e\u6765\u8bf4\u6ca1\u6709\u591a\u5927\u5f71\u54cd\uff08\u6ce8\u610f\u7528scanf\u548cprintf\u65f6\u9700\u8981Lf\u800c\u4e0d\u662flf\uff09\u3002\n\n```cpp\n#include<cstdio>\n#include<queue>\n#define mp 2048\n#define ml 262144\n#define ci const int\n#define ldb long double\nusing namespace std;\nint head[mp],ver[ml],nxt[ml],edge[ml],n,m,tot;\nldb d[mp];\nstruct pr{\n    ldb d;int p;\n    pr(ldb a=0,ci b=0){d=a;p=b;}//\u6784\u9020\u51fd\u6570\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u7ed3\u6784\u4f53\u7684\u503c\uff0c\u4e0d\u4f1a\u53ef\u81ea\u884c\u767e\u5ea6 \n    inline bool operator < (const pr a)const{return d<a.d;} \n};\npriority_queue<pr>q;\ninline void adds(ci a,ci b,ci c){\n    ver[++tot]=b;\n    nxt[tot]=head[a];\n    head[a]=tot;\n    edge[tot]=c;\n}\ninline int rd(){\n    int io=0;char in=getchar();\n    while(in<'0'||in>'9')in=getchar();\n    while(in>='0'&&in<='9')io=io*10+in-'0',in=getchar();\n    return io;\n}\nint main(){\n    n=rd(),m=rd();\n    for(int t=1;t<=n;++t)d[t]=2000000000;//long double\u4e0d\u80fdmemset \n    for(int t=1;t<=m;++t){\n        int x=rd(),y=rd(),z=rd();\n        adds(x,y,z);\n        adds(y,x,z);//\u767e\u5206\u6bd4\u4f5c\u4e3a\u8fb9\u6743 \n    }\n    int a=rd(),b=rd();\n    d[b]=100,q.push(pr(100,b));\n    while(!q.empty()){//dijkstra\n        int x=q.top().p;\n        q.pop();\n        for(int t=head[x];t;t=nxt[t]){\n            int y=ver[t];\n            ldb dist=d[x]/(1-(ldb)edge[t]/100);//\u8ba1\u7b97\uff1a\u628a\u8fb9\u6743\u5b58\u50a8\u7684\u767e\u5206\u6bd4\u590d\u539f\u4e3a\u8fd9\u4e2a\u70b9\u771f\u5b9e\u9700\u8981\u8f6c\u7684\u94b1  \n            if(dist<d[y]){\n                d[y]=dist;\n                q.push(pr(-dist,y));\n            }\n        } \n    }\n    printf(\"%.8Lf\",d[a]);\n    return 0;\n}\n```\n",
        "postTime": 1563713662,
        "uid": 117937,
        "name": "_WZT_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "# P1576 \u6700\u5c0f\u82b1\u8d39\n\n[\u539f\u9898\u5730\u5740](https://www.luogu.org/problemnew/show/P1576)\n\n[GitHub\u9898\u89e3](https://github.com/jerrykcode/luogu)\n\n\n## \u601d\u8def\n\n### \u95ee\u9898\uff1a\n\nb\u9700\u8981100\u5143\uff0ca\u81f3\u5c11\u9700\u8981\u8f6c\u51fa\u591a\u5c11?\n\n### \u8fb9\u6743\uff1a\n\n\u8bbex\u5230y\u7684\u8fb9\u6743\u4e3az\uff0c\u5219\uff1a\n\n* \u82e5x\u5411y\u8f6c\u8d26n\u5143\uff0c\u5219y\u6536\u5230`n*z`\u5143\uff0c(\u5373\u8f93\u5165 1 2 3\uff0c\u52191\u52302\u7684\u8fb9\u6743\u4e3a0.97)\n\n* \u82e5x\u5411y\u8f6c\u8d26\uff0c\u4e14y\u9700\u8981\u6536\u5230n\u5143\uff0c\u5219x\u9700\u8981\u8f6c\u51fa`n/z`\u5143\n\n### \u5bf9dijkstra\u6539\u9020\uff1a\n\n* \u7ec8\u70b9des\u5411\u8d77\u70b9src\u8f6c\u8d26\uff0csrc\u9700\u8981100\u5143\n\n* \u9876\u70b9\u7684dist\u503c\u8868\u793a\uff0c\u8be5\u9876\u70b9\u81f3\u5c11\u9700\u8981\u8f6c\u51fa\u591a\u5c11\uff0csrc\u624d\u80fd\u5f97\u5230100\u5143\n\n* src\u7684dist\u503c\u4e3a100\n\n* \u6536\u5f55dist\u503c\u6700\u5c0f\u7684\u9876\u70b9\uff0c\u8bbe\u8be5\u9876\u70b9\u4e3amin_vertex\uff0c\u5176dist\u503c\u4e3amin_dist\uff0c\u5bf9\u6240\u6709\u90bb\u63a5\u70b9\uff0c\u8bbe\u8fb9\u6743\u4e3aweight\uff0c\u82e5`min_dist/weight`\u5c0f\u4e8e\u90bb\u63a5\u70b9\u7684dist\u503c\u5219\u66f4\u65b0(\u5373\u5bf9\u4e8e\u8fd9\u4e00\u4e2a\u90bb\u63a5\u70b9\uff0c\u7ecf\u8fc7min_vertex\u8f6c\u8d26\u5230src\uff0c\u82b1\u8d39\u53ef\u4ee5\u66f4\u5c11)\n\n## C++\u4ee3\u7801\n\n* \u90bb\u63a5\u8868\u8868\u793a\u56fe(\u5bf9\u6bcf\u4e2a\u9876\u70b9\u7528\u4e00\u4e2avector\u5b58\u50a8\u5176\u6240\u6709\u7684\u90bb\u63a5\u70b9)\n\n* dijkstra\u7b97\u6cd5\u5b9e\u73b0\u5c01\u88c5\u5728MinCost\u7c7b\u4e2d\n\n* \u9876\u70b9\u6539\u4e3a\u4ece0\u5f00\u59cb\u7f16\u53f7\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <vector>\n#include <queue>\nusing namespace std;\n\n#define NO_VALUE -1\n\n//\u90bb\u63a5\u70b9\u7ed3\u6784\u4f53\nstruct AdjNode {\n\tint v; //\u90bb\u63a5\u9876\u70b9\n\tdouble weight; //\u90bb\u63a5\u8fb9\u6743\u91cd\n\tAdjNode(int v, double weight) : v(v), weight(weight) {}\n};\n\n//\u8ba1\u7b97\u6700\u5c0f\u82b1\u8d39\u7c7b\nclass MinCost {\npublic:\n\tMinCost() {}\n\t~MinCost() {}\n\n\t/* \u8fd4\u56desrc\u9700\u8981\u5f97\u5230num\uff0cdes\u81f3\u5c11\u9700\u8981\u591a\u5c11\u82b1\u8d39\u3002*/\n\tdouble minCost(vector<AdjNode> *graph, int nv, int src, int des, double num);\nprivate:\n\t//\u4f18\u5148\u961f\u5217\u4f7f\u7528\u7684\u7ed3\u6784\u4f53\n\tstruct Node {\n\t\tint v;\n\t\tdouble dist;\n\t\tNode(int v, double dist) : v(v), dist(dist) {}\n\t};\n\tstruct cmp {\n\t\tbool operator() (Node& a, Node& b) {\n\t\t\treturn a.dist > b.dist;\n\t\t}\n\t};\n\n\t//\u7c7b\u53d8\u91cf\n\tdouble *dist_;\n\tbool *collected_;\n};\n\ndouble MinCost::minCost(vector<AdjNode>* graph, int nv, int src, int des, double num) {\n\t//dijkstra\n\tdist_ = new double[nv];\n\tfill(dist_, dist_ + nv, NO_VALUE);\n\tcollected_ = new bool[nv];\n\tfill(collected_, collected_ + nv, false);\n\tdist_[src] = num;\n\tpriority_queue<Node, vector<Node>, cmp> q;\n\tq.push(Node(src, dist_[src]));\n\tint min_vertex, adj_vertex;\n\tdouble adj_weight, tmp_dist;\n\twhile (!q.empty()) {\n\t\tmin_vertex = q.top().v;\n\t\tq.pop();\n\t\tif (collected_[min_vertex]) continue;\n\t\tcollected_[min_vertex] = true;\n\t\tif (min_vertex == des) {\n\t\t\twhile (!q.empty()) q.pop();\n\t\t\tbreak;\n\t\t}\n\t\tfor (AdjNode adj_node : graph[min_vertex]) { //\u904d\u5386\u90bb\u63a5\u70b9\n\t\t\tadj_vertex = adj_node.v;\n\t\t\tadj_weight = adj_node.weight;\n\t\t\tif (!collected_[adj_vertex]) {\n\t\t\t\ttmp_dist = dist_[min_vertex] / adj_weight; //adj_vertex\u7ecf\u8fc7min_vertex\u5230\u8fbesrc\u7684\u82b1\u8d39\n\t\t\t\tif (tmp_dist < dist_[adj_vertex] || dist_[adj_vertex] == NO_VALUE) {\n\t\t\t\t\t//\u66f4\u65b0\n\t\t\t\t\tdist_[adj_vertex] = tmp_dist;\n\t\t\t\t\tq.push(Node(adj_vertex, dist_[adj_vertex]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} //while\n\tdouble result = dist_[des];\n\tfree(dist_);\n\tfree(collected_);\n\treturn result;\n}\n\nint main() {\n\tint n, m;\n\tscanf(\"%d %d\", &n, &m);\n\tvector<AdjNode> *graph = new vector<AdjNode>[n];\n\tint x, y, z, a, b;\n\tfor (int i = 0; i < m; i++) {\n\t\tscanf(\"%d %d %d\", &x, &y, &z);\n\t\t//\u6539\u4e3a\u4ece0\u5f00\u59cb\u7f16\u53f7\n\t\tx--; y--;\n\t\tgraph[x].push_back(AdjNode(y, ((double)(1.0) - (double)(0.01) * z)));\n\t\tgraph[y].push_back(AdjNode(x, ((double)(1.0) - (double)(0.01) * z)));\n\t}\n\tscanf(\"%d %d\", &a, &b);\n\ta--; b--;\n\tMinCost min_cost;\n\tprintf(\"%.8lf\", min_cost.minCost(graph, n, b, a, (double)(100.0)));\n\tfor (int i = 0; i < n; i++)\n\t\tvector<AdjNode>().swap(graph[i]);\n\treturn 0;\n}\n```",
        "postTime": 1554653336,
        "uid": 194439,
        "name": "rediserver",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "### \u53cc\u5411\u8fb9\u6570\u7ec4\u5f00\u4e24\u500d\n\n### \u53cc\u5411\u8fb9\u6570\u7ec4\u5f00\u4e24\u500d\n\n### \u53cc\u5411\u8fb9\u6570\u7ec4\u5f00\u4e24\u500d\n\n#### \u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d\n\n\u4e0d\u7136\u4f1a\u51fa\u73b0RE\u7684\u60c5\u51b5\n\n[\u5927\u578b\u7ffb\u8f66\u73b0\u573a\u2026](https://www.luogu.org/recordnew/show/17358584)\n\n\u6765\u770b\u4e00\u4e0b\u9898\u76ee\uff1a\n\n\u6bcf\u4e24\u4e2a\u8d26\u6237\u4e4b\u524d\u5728\u652f\u4ed8\u4e00\u5b9a\u624b\u7eed\u8d39\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u76f8\u4e92\u8f6c\u8d26\uff0cA\u4f7f\u5f97B\u5230\u8d26100\u5143\u6700\u5c11\u9700\u8981\u7684\u603b\u8d39\u7528\u3002\n\n\u5927\u5bb6\u5728\u5e73\u65f6\u7684\u6570\u5b66\u8bfe\u4e0a\u5e94\u8be5\u505a\u5230\u8fc7\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\n\n~~\u4e5f\u8bb8\u662f\u5c0f\u5b66\u6570\u5b66~~\n\nA\u6709100\u5143\uff0c\u4eceA\u5230B\u8981\u6263\u96645%\uff0c\u4eceB\u5230C\u8981\u6263\u96647%.\n\n\u6c42C\u6700\u540e\u83b7\u5f97\u7684\u94b1\u6570.\n\n\u76f8\u4fe1\u5f88\u5feb\u5c31\u80fd\u628a\u7b54\u6848\u7b97\u51fa\u6765 100 * 95% * 97%\n\n\u7c7b\u6bd4\u5230\u672c\u9898\u800c\u8a00 \u8981\u6c42\u7684\u5c31\u662f\u5df2\u77e5C\u6700\u540e\u83b7\u5f97100\u5143 \u6c42A\u6c47\u51fa\u7684\u94b1\u6570.\n\n\u5f88\u660e\u663e \u6700\u7ec8\u5f97\u5230\u7684\u94b1\u6570\u4e00\u5b9a\u7684\u60c5\u51b5\u4e0b \u5f53\u6bd4\u7387\u4e4b\u79ef\u6700\u5927\u65f6 \u6c47\u51fa\u7684\u94b1\u6570\u6700\u5c11\n\n\u628a\u6bcf\u4e2a\u8d26\u6237\u770b\u4f5c\u70b9\u6570 \u8fb9\u6743\u770b\u4f5c\u624b\u7eed\u8d39 \u8fd9\u6837\u5c31\u53ef\u4ee5\u5efa\u7acb\u8d77\u4e00\u4e2a\u56fe\u7684\u6a21\u578b\u4e86\n\n\u4eceA\u70b9\u51fa\u53d1 $d[a]=1$ \u5982\u679c\u677e\u5f1b\u64cd\u4f5c\u4e2d\u5f97\u5230\u7684\u7b54\u6848\u6bd4\u4ed6\u5927\u7684\u8bdd \u90a3\u4e48\u5c31\u66f4\u65b0\u5f53\u524d\u8282\u70b9\n\n\u8fd9\u91cc\u6c42\u7684\u5e94\u8be5\u662f\u5355\u6e90\u6700\u957f\u8def\n\n\u73b0\u6709\u9898\u89e3\u4e2d\u5f88\u591a\u4eba\u90fd\u8bf4 $spfa$ \u5df2\u6b7b\n\n\u4f46\u662f\u5c31\u672c\u4eba\u7684\u89c2\u70b9\u800c\u8a00 \u6700\u77ed\u8def\u7528 $dijkstra$  \u6700\u957f\u8def\u7528 $spfa$\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint head[200005],next[200005],ver[200005],edge[200005],v[200005],tot;\nint n,m,x,y,z,a,b;\ndouble d[2005];\nqueue <int> q;\ninline void add(int x,int y,int z){\n\tver[++tot]=y;\n\tedge[tot]=z;\n\tnext[tot]=head[x];\n\thead[x]=tot;\n}\ninline void spfa(){\n\tq.push(a);\n\td[a]=1;\n\twhile (!q.empty()){\n\t\tx=q.front();\n\t\tq.pop();\n\t\tv[x]=0;\n\t\tfor (int i=head[x];i;i=next[i]){\n\t\t\ty=ver[i];\n\t\t\tz=edge[i];\n\t\t\tif (d[y]<(d[x]*(100-z)/100)){\n\t\t\t\td[y]=d[x]*(100-z)/100;\n\t\t\t\tif(!v[y]) {v[y]=1;q.push(y);} \n\t\t\t}\n\t\t} \n\t} \n} \nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=m;i++) {\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd(x,y,z);\n\t\tadd(y,x,z);\n\t}\n\tscanf(\"%d%d\",&a,&b);\n\tspfa();\n\tprintf(\"%.8lf\\n\",100*1.0/d[b]);\n\treturn 0;\n} \n```\n",
        "postTime": 1552908538,
        "uid": 99460,
        "name": "Hiraeth",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "#### \u5206\u6790\uff1a\n>\u5728n\u4e2a\u4eba\u4e2d\uff0c\u67d0\u4e9b\u4eba\u7684\u94f6\u884c\u8d26\u53f7\u4e4b\u95f4\u53ef\u4ee5\u4e92\u76f8\u8f6c\u8d26\u3002\u8fd9\u4e9b\u4eba\u4e4b\u95f4\u8f6c\u8d26\u7684\u624b\u7eed\u8d39\u5404\u4e0d\u76f8\u540c\u3002\u7ed9\u5b9a\u8fd9\u4e9b\u4eba\u4e4b\u95f4\u8f6c\u8d26\u65f6\u9700\u8981\u4ece\u8f6c\u8d26\u91d1\u989d\u91cc\u6263\u9664\u767e\u5206\u4e4b\u51e0\u7684\u624b\u7eed\u8d39\uff0c\u8bf7\u95eeA\u6700\u5c11\u9700\u8981\u591a\u5c11\u94b1\u4f7f\u5f97\u8f6c\u8d26\u540eB\u6536\u5230100\u5143\u3002\n\n\u8bbe\u6263A\u6700\u5c11\u9700\u8981a\u5143\u94b1\uff0c\u7ecf\u8fc7p1,p2...pn\u6263\u9664\u624b\u7eed\u8d39w1%,w2%...wn%\uff0c\u90a3\u4e48\u5269\u4e0br=a(1-w1%)(1-w2%)...(1-wn%)\u5143,\u7531\u9898\u610fr=100\uff0c\u5373\n\n\n------------\n\n>>>`a=100/(1-w1%)(1-w2%)...(1-wn%)`\n\n\n------------\n\n\n\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4f7f\u5206\u5b50\u90e8\u5206\u5c3d\u53ef\u80fd\u5927\uff0c\u5373\u53ef\u53d6\u5f97a\u7684\u6700\u5c0f\u503c\u3002\u7ed3\u5408\u9898\u610f\uff0c\u53ef\u6c42\u51fa\u4ee51-w%\u4f5c\u4e3a\u6743\u503c\u7684\u56fe\u4e0a\u7684\u6700\u957f\u8def\u5f84\u3002\u56e0\u6b64\uff0c\u6211\u7684\u60f3\u6cd5\u662f\u53ef\u4ee5\u5bf9Dijkstra\u7b97\u6cd5\u6216\u8005Floyd\u7a0d\u4f5c\u6539\u52a8\u5b8c\u6210\u8fd9\u4e2a\u64cd\u4f5c\u3002\u7531\u4e8eFloyd\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8f83\u9ad8\uff0c\u7ecf\u8fc7\u5c1d\u8bd5\u65e0\u6cd5\u5b8c\u6210\uff0c\u6545\u91c7\u7528\u6539\u52a8\u540e\u7684\u5806\u4f18\u5316\u7684Dijkstra\u7b97\u6cd5\u3002\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <cstdint>\n#include <queue>\n#include <iomanip>\n#include <cstdio>\n#include <cstring>\n#include <array>\n\nusing std::cin;\nusing std::cout;\nusing std::endl;\nusing std::string;\nusing std::vector;\nusing std::sort;\nusing std::priority_queue;\nusing std::pair;\nusing std::array;\nusing std::make_pair;\nusing std::max;\n\n\n#define DIJSTRA\n//#define FLOYD\n\n#ifdef DIJSTRA\nstruct edge\n{\n\tint v;\n\tdouble w;\n\n\tedge(int _v, double _w)\n\t{\n\t\tv = _v;\n\t\tw = _w;\n\t}\n\n\tbool operator<(const edge &e)const\n\t{\n\t\treturn this->w < e.w;\n\t}\n};\n\nconst size_t data_size= 2010;\nvector<edge> graph[data_size];\ndouble costs[data_size];\nbool visited[data_size];\n\nvoid calc_largest(int s)\n{\n\tmemset(costs, -0x3f, sizeof(costs));\n\tmemset(visited, false, sizeof(visited));\n\tcosts[s] = 1;\n\n\tpriority_queue<edge> q;\n\tq.push(edge(s, 1));\n\twhile (!q.empty())\n\t{\n\t\tedge top = q.top(); q.pop();\n\t\tint u = top.v;\n\n\t\tif (visited[u])\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tvisited[u] = true;\n\t\tfor (int i = 0; i < graph[u].size(); i++)\n\t\t{\n\t\t\tint v = graph[u][i].v;\n\t\t\tdouble w = graph[u][i].w;\n\t\t\tif (!visited[v]&&costs[v] < costs[u] * w)\n\t\t\t{\n\t\t\t\tcosts[v] = costs[u] * w;\n\t\t\t\tq.push(edge(v, costs[v]));\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(void)\n{\n\tint n = 0, m = 0;\n\tcin >> n >> m;\n\n\tfor (int i = 0; i < m; i++)\n\t{\n\t\tint x = 0, y = 0;\n\t\tdouble w = 0;\n\t\tcin >> x >> y >> w;\n\t\tgraph[x].push_back(edge(y, 1-w/100.0));\n\t\tgraph[y].push_back(edge(x, 1-w/100.0));\n\t}\n\n\tint a = 0, b = 0;\n\tcin >> a >> b;\n\tcalc_largest(a);\n\n\tdouble largest_cost = costs[b];\n\n\tcout << std::fixed << std::setprecision(8) << (double(100) / double(largest_cost)) << endl;\n\n\treturn 0;\n}\n#endif\n\n#ifdef FLOYD\n\narray<array<double, 2010>, 2010> costs;\n\nint main()\n{\n\tint n = 0, m = 0;\n\tcin >> n >> m;\n\tfor (int i = 0; i <= n + 1; i++)\n\t{\n\t\tcosts[i].fill(1);\n\t}\n\n\tfor (int i = 0; i < m; i++)\n\t{\n\t\tint u = 0, v = 0;\n\t\tdouble w = 0;\n\t\tcin >> u >> v >> w;\n\t\tw = 1.0 - w / 100.0;\n\t\tcosts[u][v] = costs[v][u] = w;\n\t}\n\n\tfor (int k = 1; k <= n; k++)\n\t{\n\t\tfor (int i = 1; i <= n; i++)\n\t\t{\n\t\t\tfor (int j = 1; j <= n; j++)\n\t\t\t{\n\t\t\t\tcosts[i][j] = max(costs[i][j], costs[i][k] * costs[k][j]);\n\t\t\t}\n\t\t}\n\t}\n\n\tint a = 0, b = 0;\n\tcin >> a >> b;\n\tdouble lowest = costs[a][b];\n\tcout << std::fixed << std::setprecision(8) << double(100) / lowest << endl;\n\treturn 0;\n}\n\n#endif\n```",
        "postTime": 1534092897,
        "uid": 119654,
        "name": "xkzxkzxkz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u6ca1\u6709spfa\u7684\u9898\u89e3\uff1f\n\n1.\u5efa\u56fe\uff1a\u7167\u6837\u5efa\u5c31\u53ef\u4ee5\u4e86\n2.spfa\u66f4\u65b0\uff1a\u600e\u4e48\u505a\uff1f\uff1f\n```\n\u9996\u5148\u4f60\u77e5\u9053\u7ec8\u70b9\u7684\u4ef7\u503c\uff0c\u90a3\u4e48\u9898\u76ee\u6240\u8981\u6c42\u7684\u5c31\u662f\u8d77\u70b9\u7684\u4ef7\u503c\n\nt->s\u7ec8\u70b9->\u8d77\u70b9\n\nz\u8868\u793a\u6807\u53f7\u4e3ax\u7684\u4eba\u548c\u6807\u53f7\u4e3ay\u7684\u4eba\u4e4b\u95f4\u4e92\u76f8\u8f6c\u8d26\u9700\u8981\u6263\u9664z%\u7684\u624b\u7eed\u8d39\n\n\u663e\u7136\uff0cx->y w[y]=w[x]*(1-z%)\n\u90a3\u4e48\uff0cy->x w[x]=w[y]/(1-z%)\n```\n\n\u5949\u4e0a\u4ee3\u7801\n```\n#include<iostream>\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<stack>\n#include<vector>\n#define N 200000\n\nusing namespace std;\nvoid in(int &x){\n    register char c=getchar();x=0;int f=1;\n    while(!isdigit(c)){if(c=='-') f=-1;c=getchar();}\n    while(isdigit(c)){x=x*10+c-'0';c=getchar();}\n    x*=f;\n}\n\nint n,m,head[N],tot;\nstruct node{\n\tint to,next,w;\n}e[N];\n\nvoid add(int u,int v,int w){\n\te[++tot].to=v;e[tot].next=head[u];head[u]=tot;e[tot].w=w;\n}\n\nint s,t;\nbool vis[N];\ndouble d[N];\nqueue<int>Q; \nvoid spfa(){\n\tvis[t]=0;Q.push(t);\n\tfor(int i=1;i<=n;i++) d[i]=0x3fffffff;\n\td[t]=100;\n\twhile(!Q.empty()){\n\t\tint u=Q.front();Q.pop();vis[u]=0;\n\t\tfor(int i=head[u];i;i=e[i].next){\n\t\t\tint v=e[i].to;\n\t\t\tdouble p=d[u]/(1.0-e[i].w/100.0);\n\t\t\tif(d[v]>p){\n\t\t\t\td[v]=p;\n\t\t\t\tif(!vis[v]){\n\t\t\t\t\tQ.push(v);vis[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tin(n);in(m);\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v,w;\n\t\tin(u);in(v);in(w);\n\t\tadd(u,v,w);add(v,u,w);\n\t}in(s);in(t);\n\tspfa();\n\tprintf(\"%.8f\",d[s]);\n\treturn 0;\n}\n```",
        "postTime": 1533780972,
        "uid": 60939,
        "name": "\u6e05\u98ce\u6211\u5df2\u901d",
        "ccfLevel": 0,
        "title": "\u89e3\u9898\u62a5\u544a P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "\u679c\u65ad\u7684\u5355\u5143\u6700\u77ed\u8def\u5f84 \u8fea\u5409\u65af\u5361\u5c14\u7b97\u6cd5\u554a\n\n\u7136\u540e\u679c\u65ad\u7684copy\u4e86\u8001\u5e08\u7ed9\u6211\u4eec\u7684\u4e2d\u95f4\u7684\u4e00\u6bb5\u4ee3\u7801\n\n\u7136\u540e\u5927\u6982\u5c31\u662f\u4e0b\u9762\u8fd9\u6837\u4e86\n\n\n\n\u7136\u540e\u5c31\u662f\u8fd9\u6837\u4e86 \u4e5f\u5c31\u662f\u6bcf\u6b21\u90fd\u76f4\u63a5\u6309\u7167\u767e\u5206\u7387\u7b97 \u4e0d\u8fc7\u4f60\u8981\u8bb0\u5f97\u767e\u5206\u7387\u5c0f\u7684\u8981\u5927 \u7136\u540e\u4e0b\u9762\u7684\u5927\u4e8e\u53f7\u5c0f\u4e8e\u53f7\u8981\u8bb0\u5f97\u5f04\u6e05\u695a\n\nconst oo=200000000;     \u4f60\u4e0d\u89c9\u5f97\u8fd9\u4e2aoo\u5f88\u50cf\u65e0\u7a77\u5927\u5417\uff1f\n\n\n\n\n```cpp\nvar g:array[0..2001,0..2001] of real;     \u5f00\u6570\u7ec4\n    v:array[0..2001] of boolean;      \u5224\u65ad\u662f\u5426\u8bbf\u95ee\u8fc7\u8fd9\u4e2a\u8282\u70b9 \n    min:real;      \u4e0b\u9762\u7528\u5c31\u5bf9\u4e86\n    x,y,z,i,j,k,n,m,a,b:longint;   \u4e00\u5927\u5806\u4ec0\u4e48\u90fd\u4e0d\u77e5\u9053\u7684\u5783\u573e\u73a9\u610f\nbegin\n    readln(n,m);\n    for i:=1 to m do\n    begin\n      read(x,y,z);\n      g[x,y]:=1-z/100;\n      g[y,x]:=g[x,y];\n    end;\n    readln(a,b);\n    for i:=1 to n do\n     for j:=1 to n do\n     if g[i,j]=0 then g[i,j]:=0;     \u8bfb\u5165\u8f93\u51fa\u7b49\u5404\u79cd\u5904\u7406\u4e5f\u5c31\u4e0d\u8bb2\u4e86\n    v[a]:=true;   \u4ecea\u8282\u70b9\u5f00\u59cb\u904d\u5386\n    for i:=2 to n do     \u5176\u5b9e\u53ea\u8981n-1\u6b21\u5c31\u591f\u4e86\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u8282\u70b9\u90fd\u662f\u51fa\u53d1\u7684\u8282\u70b9\uff0c\u4f46\u662f\u597d\u50cf1\u5f00\u59cb\u4e5f\u6ca1\u5173\u7cfb\u554a\n    begin\n      min:=0;\n      for j:=1 to n do\n      if (not v[j]) and (g[a,j]>min) then      \u6ca1\u6709\u8bbf\u95ee\u7136\u540e\u53c8\u6bd4\u4ed6\u5c0f\u5c31ok \u8fd9\u91cc\u662f\u4e00\u90e8\u8d2a\u5fc3\u7684\u601d\u60f3\n      begin\n        min:=g[a,j];    \u66f4\u6362\n        k:=j;    \u8bb0\u5f55\u4f4d\u7f6e\n      end;\n      v[k]:=true;   \u904d\u5386get\n      for j:=1 to n do\n       if (not v[j]) and (g[a,k]*g[k,j]>g[a,j]) then   \u5927\u4e8e\u53f7 \u4e58\u53f7\u8bb0\u5f97\u8981\u5f04 \n        g[a,j]:=g[a,k]*g[k,j];    ok\n    end;\n    writeln(100/g[a,b]:0:8);     \u6700\u540e\u8f93\u51fa\u5012\u7740\u9664\u4e00\u4e0b \u8bb0\u5f97\u957f\u5bbd\u8bbe\u7f6e\u597d\nend.\n```\n\u7136\u540e\u5949\u732e\u4e0a\u8fd9\u4e2a\u7684\u6a21\u677f\n\n```cpp\nfor i:=1 to n do\n     for j:=1 to n do\n      if g[i,j]=0 then g[i,j]:=oo;\n    v[p]:=true;\n    for i:=2 to n do\n    begin\n      min:=oo;\n      for j:=1 to n do\n       if (not v[j]) and (g[p,j]<min) then\n       begin\n         min:=g[p,j];\n         k:=j;\n       end;\n       v[k]:=true;\n       for j:=1 to n do\n        if (not v[j]) and (g[p,k]+g[k,j]<g[p,j]) then\n          g[p,j]:=g[p,k]+g[k,j];\n    end;\n\n```",
        "postTime": 1489992424,
        "uid": 28595,
        "name": "Hydroxyl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5751\u4e86\u6211\u597d\u4e45\u554a\u3002\u4e00\u5f00\u59cb\u4f5c\u6b7b\u7528\u4e86\u5806\u4f18\u5316\u7684Dijkstra\u7b97\u6cd5\uff0c\u4f46\u662fWA\uff0c\u72060\u3002\u7edd\u671b\u7684\u6211\u8001\u8001\u5b9e\u5b9e\u5730\u6253\u4e86\u4e00\u904dSPFA\uff0c\u611f\u89c9\u597d\u6ca1\u610f\u601d\u3002\n\n\u8fd9\u9053\u9898\u5176\u5b9e\u5f88\u7b80\u5355\u3002\u6211\u4eec\u53ea\u8981\u6c42\u51fa\u4e24\u4e2a\u4eba\u4e4b\u95f4\u7684\u6700\u5927\u8def\u5f84s\uff0c100/s\u5c31\u662f\u7b54\u6848\u3002\u6240\u4ee5\u5173\u952e\u662f\u6700\u77ed\u8def\uff0c\u6700\u77ed\u8def\u7684\u677e\u5f1b\u64cd\u4f5c\u4e2d\u7684\u52a0\u6cd5\u6362\u6210\u4e58\u6cd5\u5c31\u53ef\u4ee5\u4e86\u3002\u4e8b\u5b9e\u4e0a\u8fd9\u5c31\u662f\u4e00\u9053\u6700\u77ed\u8def\u9898\u76ee\u3002\n\n```cpp\n\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n#include <queue>\n#include <vector>\nusing namespace std;\nconst int maxn=2005;\nstruct edge{int to;double cost;};\ndouble d[maxn],z;\nint n,m,s,t,x,y;\nvector<edge>Graph[maxn];//\u90bb\u63a5\u8868\uff0c\u4e0d\u4f1a\u7684\u53ef\u4ee5\u7528Graph[maxn][maxn]\u4ee3\u66ff\uff0c\u4f46\u662f\u6570\u636e\u5927\u4e86\u5c31\u8fc7\u4e0d\u4e86\uff0c\u8fd8\u662f\u8981\u5b66\u90bb\u63a5\u8868\u54e6\uff0c\u8fd9\u91cc\u4e0d\u8d58\u8ff0\u3002\n//spfa\u6a21\u677f\nvoid solve(){\n    bool f[maxn];memset(f,false,sizeof(f));\n    queue<int>que;\n    for(int i=1;i<=n;i++) d[i]=0;\n    d[s]=1; f[s]=true;\n    que.push(s);\n    while(!que.empty()){\n        int p=que.front();que.pop();\n        f[p]=false;\n        for(int i=0;i<Graph[p].size();++i){\n            edge e=Graph[p][i];\n            if(d[e.to]<d[p]*e.cost){\n                d[e.to]=d[p]*e.cost;\n                if(!f[e.to]){\n                    f[e.to]=true;\n                    que.push(e.to);\n                }\n            }        \n        }\n    }\n    double ans=100/d[t];\n    printf(\"%.8lf\",ans);\n    \n    return;\n}\nint main(){\n    //freopen(\"1.txt\",\"r\",stdin);\n    //freopen(\"2.txt\",\"w\",stdout);\n    std::ios::sync_with_stdio(false);\n\n    cin>>n>>m;\n    for(int i=1;i<=m;i++){//\u8fd9\u91cc\u662f\u53cc\u5411\u7684\u8def\uff0c\u4e00\u5f00\u59cb\u770b\u6210\u5355\u5411\u8def\u4e86\u3002\n        cin>>x>>y;cin>>z;\n        z=(100-z)/100;\n        edge e;\n        e.to=y;\n        e.cost=z;\n        Graph[x].push_back(e);\n        e.to=x;\n        Graph[y].push_back(e);\n    }\n    cin>>s>>t;\n    solve();\n\n    return 0;\n}\n\n```",
        "postTime": 1468402984,
        "uid": 8874,
        "name": "Kwork",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "PASCAL\u6700\u5c0f\u82b1\u8d39\u9898\u89e3\uff08\u8fea\u6770\u65af\u7279\u62c9\u7b97\u6cd5\uff09\n\n```delphi\n\nvar a,b,m,n,i,j,x,y,z,u:longint;s,min1:real;\n    dist:array[1..3000,1..3000] of real;//\u5b58\u50a8\u4e24\u70b9\u95f4\u8ddd\u79bb\n    min:array[1..3000] of real;//\u5b58\u50a8\u4eceA\u70b9\u5230\u4efb\u610f\u4e00\u70b9\u6240\u9700\u82b1\u8d39\n    visit:array[1..3000] of boolean;//\u67e5\u770b\u662f\u5426\u904d\u5386\nbegin\n    for i:=1 to 3000 do\n      for j:=1 to 3000 do\n      begin\n        dist[i,j]:=maxlongint;\n        min[j]:=maxlongint;\n      end;//\u521d\u59cb\u5316\n    readln(n,m);\n    for i:=1 to m do\n    begin\n        readln(x,y,z);\n        dist[x,y]:=z/100;\n        dist[y,x]:=z/100;\n    end;\n    readln(a,b);\n    min[a]:=100;//\u8d4b\u521d\u59cb\u503c\n    for i:=2 to n do//\u8fea\u6770\u65af\u7279\u62c9\u7b97\u6cd5\n    begin\n        min1:=maxlongint;\n        for j:=1 to n do\n          if (min[j]<min1)and(visit[j]=false) then\n          begin\n              min1:=min[j];\n              u:=j;\n          end;\n        visit[u]:=true;\n        for j:=1 to n do\n          if (min[u]/(1-dist[u,j])<min[j])and(visit[j]=false)and(min[u]<>maxlongint)and(dist[u,j]<>maxlongint) then min[j]:=min[u]/(1-dist[u,j]);\n    end;\n    writeln(min[b]:0:8);\nend.\n\n```",
        "postTime": 1455520247,
        "uid": 14130,
        "name": "The_Dark_Knight",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "\u5f88\u88f8\u7684spfa\u5427\n\n\u8bb0\u5f97\u7528\u6570\u5b66\u63a8\u4e00\u4e0b\u677e\u5f1b\u6761\u4ef6\u548c\u7b54\u6848\n\n\u8fd8\u6709\u8981\u7528double\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <vector>\n#include <queue>\nusing namespace std;\nint n , m;\nvector < int > linker[2000 + 2];\nvector < double > value[2000 + 2];\nqueue < int > q;\ndouble dist[2000 + 2];\nint a , b , z;\nbool use[2000 + 2];\ndouble spfa()\n{\n       int now , i , cur;\n       double v;\n       q.push( a );\n       for( i = 1 ; i <= n ; i++ )\n            dist[i] = 0;\n       dist[a] = 1;\n       while( !q.empty() )\n       {\n              now = q.front();\n              q.pop();\n              use[ now ] = 0;\n              for( i = 0 ; i < linker[ now ].size(); i++ )\n              {\n                   cur = linker[ now ][i];\n                   v = value[ now ][i];\n                   if( dist[ cur ] < dist[ now ] * v )\n                   {\n                       dist[ cur ] = dist[ now ] * v;\n                       if( !use[ cur ] )\n                       {\n                           use[ cur ] = 1;\n                           q.push( cur );\n                       }\n                   }\n              }\n       }\n       return dist[b];\n}\nint i;\nint main()\n{\n    scanf( \"%d %d\" , &n , &m );\n    for( i = 0 ; i < m ; i++ )\n    {\n         scanf( \"%d %d %d\" , &a , &b , &z );\n         linker[a].push_back( b );\n         linker[b].push_back( a );\n         value[a].push_back( 1 - 1.0 * z / 100 );\n         value[b].push_back( 1 - 1.0 * z / 100 );\n    }\n    scanf( \"%d %d\" , &a , &b );\n    printf( \"%.8lf\\n\" , 100 / spfa() );\n    return 0;\n}\n```",
        "postTime": 1439032408,
        "uid": 3296,
        "name": "noip",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9053\u9898\u4e3b\u8981\u662f\u9700\u8981\u9760\u7528y\u6765\u5012\u63a8\uff08\u8fd9\u70b9\u5f88\u5751\uff0c\u5361\u4e86\u5f88\u4e45\uff09\n\u4e0d\u8bf4\u4e86\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\uff08\u4e0d\u559c\u52ff\u55b7\uff09\n```c\n#include<bits/stdc++.h>\n#define Big 2005\nusing namespace std;\ndouble a[Big][Big],d[Big],maxn;\nint t[Big];\nint n,m,x,y,k;\nvoid Read();\nvoid Dijkstra(int x);\nint main()\n{\n\tRead();\n\tDijkstra(x);\n\treturn 0; \n}\nvoid Read()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint j,k;\n\t\tscanf(\"%d%d\",&j,&k);\n\t\tscanf(\"%lf\",&a[j][k]);//\u4ecek\u5230j\u6240\u9700\u7684\u8d39\u7528 \n\t\ta[j][k]=(100-a[j][k])/100;\n\t\ta[k][j]=a[j][k];//\u53cd\u5411\u50a8\u5b58 \n\t}\n\tscanf(\"%d%d\",&x,&y);\t\n}\nvoid Dijkstra(int x)\n{\n\tfor(int i=1;i<=n;i++) d[i]=a[x][i];\n\td[x]=1;//\u521d\u59cb\u5316d\u6570\u7ec4 \n\tt[x]=1;//\u5c06\u521d\u59cb\u4f4d\u7f6e\u7684\u6876\u6807\u8bb0\u5df2\u7528 \n\tfor(int i=1;i<n;i++)\n\t{\n\t\tmaxn=0;//\u627e\u6700\u5927 \n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(!t[j]&&maxn<d[j])//\u5982\u679c\u6ca1\u6709\u88ab\u8bbf\u95ee\u4e14\u5927\u4e8e\u6700\u5927\u503c\u5c31\u66f4\u6539 \n\t\t\t{\n\t\t\t\tk=j;//\u8bb0\u5f55\n\t\t\t\tmaxn=d[j];\n\t\t\t}\n\t\tt[k]=1;\n\t\tif(k==y) break;//\u5df2\u7ecf\u5230y\u4e86\uff0c\u76f4\u63a5\u8f93\u51fa\u7b54\u6848 \n\t\tfor(int j=1;j<=n;j++)//\u677e\u5f1b\u64cd\u4f5c\n\t\t\tif(!t[j]&&d[k]*a[k][j]>d[j]) d[j]=d[k]*a[k][j];\n\t}\n\tprintf(\"%.8lf\",100/d[y]);//\u7ecf\u5178\u7684printf()\u5077\u61d2\u8f93\u51fa\n}\n```",
        "postTime": 1531038987,
        "uid": 93763,
        "name": "\u68a6\u5343\u6a31",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011\u795e\u7287\u4fdd\u4f51\u4e00\u5b9a\u8981\u8fc7_(:\u0437\u309d\u2220)_"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e0d\u7528SPFA\uff0c\u53ea\u8981\u4f7f\u7528\u7c7b\u4f3c\u8fea\u6770\u65af\u7279\u62c9\u7b97\u6cd5\u5c31\u53ef\u4ee5\u4e86\uff08\u628a\u6c42\u8def\u5f84\u548c\u6539\u6210\u6c42100\u4f9d\u6b21\u9664\u4ee5\u8def\u5f84\u6743\u503c\u7684\u5546\u7684\u6700\u5c0f\u503c\uff09\uff0c\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u662f\u53ef\u4ee5\u8bc1\u660e\u7684\u3002\n\n\u7279\u522b\u8bf4\u4e00\u4e0b\uff1a\n\n\u6d4b\u8bd5\u70b9 #10\uff1a\u901a\u8fc7\u8be5\u6d4b\u8bd5\u70b9\u3002 \u5f97\u520610\uff0c\u8017\u65f6**998ms**\uff0c\u5185\u5b5834189kB\u3002\n",
        "postTime": 1445435128,
        "uid": 4865,
        "name": "Mr_Li",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1576 \u3010\u6700\u5c0f\u82b1\u8d39\u3011"
    }
]