[
    {
        "content": "\u73b0\u5728\u7814\u7a76\u8fd9\u4e2a\u7684\u4eba\u8fd8\u4e0d\u591a\uff0c\u6240\u4ee5\u5c31\u653e\u4e86\u4e2a\u6a21\u677f\u3002  \n\u8fd9\u7bc7\u9898\u89e3\u7b97\u662f\u5bf9 zzq IOI2019 \u5019\u9009\u961f\u8bba\u6587\u7684\u8865\u5145\u5427\u3002\n****\n\u73b0\u5728\u9012\u63a8\u7cfb\u6570\u53d8\u6210\u4e86\u5173\u4e8e $n$ \u7684\u591a\u9879\u5f0f\u3002\u867d\u7136\u4e0d\u80fd\u77e9\u9635\u5feb\u901f\u5e42\u4e86\uff0c\u4f46\u7ef4\u62a4\u8f6c\u79fb\u77e9\u9635\u4e58\u79ef\u8fd8\u662f\u53ef\u4ee5\u7684\u3002\n\n\u6839\u636e\u6574\u5f0f\u9012\u63a8\u7684\u5f62\u5f0f\n$$P_0(n)a_n=-\\sum_{k=1}^ma_{n-k}P_k(n)$$\n\u6211\u4eec\u53ef\u4ee5\u8bbe\u4e00\u4e2a\u5411\u91cf $u_i$\n\n$$u_i = \\left\\{ a_j\\prod_{t=0}^{i-1}P_0(m+t)\\right\\}_{j=i}^{i+m-1}$$\n\u90a3\u4e48\u53ea\u8981\u6c42\u51fa $u_{n-m+1}$\uff0c\u5c31\u80fd\u5f97\u5230 \n\n$$a_n\\prod_{t=m}^nP_0(t)$$\n\uff08\u4e3a\u4e86\u8868\u8ff0\u65b9\u4fbf\uff0c\u4e0b\u9762\u8bbe $n'=n-m+1$\uff09\n\n\u73b0\u5728\u9700\u8981\u4e00\u4e2a\u77e9\u9635 $M_i$\uff0c\u53ef\u4ee5\u4f7f\u5f97 $u_i\\times M_i=u_{i+1}$\u3002  \n\n$$M_i=\\begin{bmatrix} 0 & 0 & \\dots &0 &0 & -P_m(i+m) \\\\ P_0(i+m) & 0 &\\dots &0 &0 &-P_{m-1}(i+m) \\\\0 &P_0(i+m) & \\dots &0 & 0 &-P_{m-2}(i+m) \\\\ \\dots & \\dots & \\dots & \\dots & \\dots &\\dots \\\\ 0 & 0 &\\dots & P_0(i+m) &0 &-P_2(i+m) \\\\0 & 0 & \\dots & 0 &P_0(i+m) & -P_1(i+m)\\end{bmatrix}$$\n\u624b\u73a9\u4e00\u4e0b\u5c31\u80fd\u53d1\u73b0\u8fd9\u4e2a\u5c31\u662f\u8f6c\u79fb\u77e9\u9635\uff08  \n\n\u90a3\u4e48\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42 $M_0 \\sim M_{n'-1}$ \u7684\u4e58\u79ef\uff08\u662f\u4e2a\u77e9\u9635\uff09\u3002   \n\u53ef\u4ee5\u7528\u7c7b\u4f3c [P5282](https://www.luogu.com.cn/problem/P5282) \u7684\u505a\u6cd5\uff0c\u7ef4\u62a4\u8fd9\u6837\u4e00\u4e2a\u591a\u9879\u5f0f\u7684\u70b9\u503c\uff08\u8981\u65f6\u523b\u8bb0\u7740 $f_w(x)$ \u7684\u70b9\u503c\u4e5f\u662f\u77e9\u9635\uff09\n\n$$f_w(x)=\\prod_{i=0}^{w-1}M_{x+i}$$\n\u8fd9\u91cc\u8bbe\u4e00\u4e2a\u5206\u5757\u5927\u5c0f $s$\uff0c\u5b83\u5177\u4f53\u662f\u591a\u5c11\u5148\u4e0d\u7ba1\uff0c\u5230\u6700\u540e\u518d\u786e\u5b9a\u3002  \n\u53d6 $f_s(x)$ \u5728 $0,s,2s,\\dots,\\lfloor (n'-s)/s\\rfloor s$ \u5904\u7684\u503c\u4e58\u8d77\u6765\uff0c\u518d\u4e58\u4e00\u5c0f\u6bb5 $M_{s\\lfloor n'/s \\rfloor} \\sim M_{n'-1}$ \u5373\u53ef\u3002\n\n\n\u4e0e P5282 \u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u91cc $f_w(x)$ \u662f\u4e00\u4e2a $wd$ \u6b21\u591a\u9879\u5f0f\uff0c\u9700\u8981 $wd+1$ \u4e2a\u70b9\u503c\u6765\u786e\u5b9a\u5b83\u3002  \n\n\u6309\u7167\u90a3\u9898\u7684\u89e3\u6cd5\uff0c\u4f1a\u9047\u5230\u4e00\u4e2a\u77e9\u9635\u5e8f\u5217\u548c\u6574\u6570\u5e8f\u5217\u505a\u5377\u79ef\u7684\u60c5\u51b5\uff1b\u53ea\u9700\u8981\u679a\u4e3e\u4f4d\u7f6e $i,j$\uff0c\u628a\u6bcf\u4e2a\u77e9\u9635\u7684\u8fd9\u4e00\u4f4d\u7f6e\u53d6\u51fa\u6765\u6210\u4e00\u4e2a\u5e8f\u5217\uff0c\u7136\u540e\u505a\u6b63\u5e38\u7684\u5377\u79ef\u5c31\u597d\u4e86\u3002\n\n\u9664\u6b64\u4e4b\u5916\u5c31\u548c P5282 \u505a\u6cd5\u57fa\u672c\u4e00\u81f4\uff0c\u8be6\u7ec6\u7684\u505a\u6cd5\u5728\u6211\u7684 [\u8fd9\u7bc7blog](https://www.luogu.com.cn/blog/NaCly-Fish-blog/ji-yu-bei-zeng-wei-hu-duo-xiang-shi-dian-zhi-di-ji-suan) \u4e2d\u6709\u8bb2\uff08\u4e0d\u60f3\u642c\u8fc7\u6765\u518d\u5199\u4e00\u904d\u4e86\uff09\u3002\n\n\u522b\u5fd8\u4e86\u8fd8\u8981\u8ba1\u7b97 $P_0(m) \\sim P_0(n)$ \u7684\u4e58\u79ef\uff0c\u5728\u500d\u589e\u7ef4\u62a4\u77e9\u9635\u4e58\u79ef\u7684\u540c\u65f6\u641e\u4e00\u4e0b\u5c31\u597d\u3002\n\n\u54e6\u597d\u50cf\u5fd8\u4e86\u786e\u5b9a $s$ \u7684\u5927\u5c0f\uff0c\u6211\u4eec\u53d1\u73b0\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u8fd9\u4e48\u4e00\u4e2a\u5947\u602a\u7684\u5f0f\u5b50\n$$\\text O\\left(sd(m^3+m^2\\log(n/s))\\right)$$\n\u7a0d\u52a0\u601d\u7d22\u53ef\u4ee5\u53d1\u73b0 $s$ \u53d6 $\\text O(\\sqrt{n/d})$ \u65f6\u6700\u4f18\u3002  \n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $\\text O\\left(\\sqrt {nd}(m^3+m^2\\log(nd))\\right)$\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#define N 524292\n#define ll long long\n#define reg register\n#define p 998244353\nusing namespace std;\n\nstruct Z{\n    int v;\n    inline Z(const int _v=0):v(_v){}\n};\n\ninline Z operator + (const Z& lhs,const Z& rhs){ return lhs.v+rhs.v<p ? lhs.v+rhs.v : lhs.v+rhs.v-p; }\ninline Z operator - (const Z& lhs,const Z& rhs){ return lhs.v<rhs.v ? lhs.v-rhs.v+p : lhs.v-rhs.v; }\ninline Z operator - (const Z& x){ return x.v?p-x:0; }\ninline Z operator * (const Z& lhs,const Z& rhs){ return (ll)lhs.v*rhs.v%p; }\ninline Z& operator += (Z& lhs,const Z& rhs){ lhs.v = lhs.v+rhs.v<p ? lhs.v+rhs.v : lhs.v+rhs.v-p; return lhs; }\ninline Z& operator -= (Z& lhs,const Z& rhs){ lhs.v = lhs.v<rhs.v ? lhs.v-rhs.v+p : lhs.v-rhs.v; return lhs; }\ninline Z& operator *= (Z& lhs,const Z& rhs){ lhs.v = (ll)lhs.v*rhs.v%p; return lhs; }\n\ntemplate<typename T> inline void read(T& x){\n    x = 0;\n    char c = getchar();\n    while(c<'0'||c>'9') c = getchar();\n    while(c>='0'&&c<='9'){\n        x = x*10+(c^48);\n        c = getchar();\n    }\n}\n\ninline Z power(Z a,int t){\n    Z res = 1;\n    while(t){\n        if(t&1) res *= a;\n        a *= a;\n        t >>= 1;\n    }\n    return res;\n}\n\nint ms;\n\nstruct matrix{\n    Z a[8][8];\n    inline matrix(){ memset(a,0,sizeof(a)); }\n\n    inline matrix operator * (const matrix& b) const{\n        matrix res = matrix();\n        for(reg int i=0;i!=ms;++i)\n        for(reg int j=0;j!=ms;++j)\n        for(reg int k=0;k!=ms;++k)\n            res.a[i][j] += a[i][k]*b.a[k][j];\n        return res;    \n    }\n}I;\n\nstruct poly{\n    Z a[9];\n    int t;\n    inline Z operator [] (const int& x) const{ return a[x]; }\n    inline Z& operator [] (const int& x){ return a[x]; }\n\n    inline Z eval(const int& x){\n        Z res = a[t];\n        for(reg int i=t-1;~i;--i) res = a[i]+res*x;\n        return res;\n    }\n}P[9];\n\ninline matrix getmat(int x){\n    matrix res = matrix();\n    Z p0 = P[0].eval(x+ms);\n    for(reg int i=0;i!=ms-1;++i) res.a[i+1][i] = p0;\n    for(reg int i=0;i!=ms;++i) res.a[i][ms-1] = -P[ms-i].eval(x+ms);\n    return res;\n}\n\nZ fac[N],ifac[N],rt[N],facm[N],inv[N];\nint rev[N];\nint siz;\n\ninline int getlen(int n){ return 1<<(32-__builtin_clz(n)); }\n\nvoid init(int n){\n    int lim = 1;\n    while(lim<=n) lim <<= 1,++siz;\n    for(reg int i=1;i!=lim;++i) rev[i] = (rev[i>>1]>>1)|((i&1)<<(siz-1));\n    Z w = power(3,(p-1)>>siz);\n    inv[1] = fac[0] = fac[1] = ifac[0] = ifac[1] = rt[lim>>1] = 1;\n    for(reg int i=lim>>1|1;i!=lim;++i) rt[i] = rt[i-1]*w;\n    for(reg int i=(lim>>1)-1;i;--i) rt[i] = rt[i<<1];\n    for(reg int i=2;i<=n;++i) fac[i] = fac[i-1]*i;\n    ifac[n] = power(fac[n],p-2);\n    for(reg int i=n-1;i;--i) ifac[i] = ifac[i+1]*(i+1);\n    for(reg int i=2;i<=n;++i) inv[i] = (p-p/i)*inv[p%i];\n    for(reg int i=0;i!=ms;++i) I.a[i][i] = 1;\n}\n\ninline void dft(Z *f,int lim){\n    static unsigned long long a[N];\n    reg int x,shift = siz-__builtin_ctz(lim);\n    for(reg int i=0;i!=lim;++i) a[rev[i]>>shift] = f[i].v;\n    for(reg int mid=1;mid!=lim;mid<<=1)\n    for(reg int j=0;j!=lim;j+=(mid<<1))\n    for(reg int k=0;k!=mid;++k){\n        x = a[j|k|mid]*rt[mid|k].v%p;\n        a[j|k|mid] = a[j|k]+p-x;\n        a[j|k] += x;\n    }\n    for(reg int i=0;i!=lim;++i) f[i] = a[i]%p;\n}\n\ninline void idft(Z *f,int lim){\n    reverse(f+1,f+lim);\n    dft(f,lim);\n    reg int x = p-((p-1)>>__builtin_ctz(lim));\n    for(reg int i=0;i!=lim;++i) f[i] *= x;\n}\n\ninline void lagrange(const matrix* F1,const Z *F2,int n,Z m,matrix* R1,Z *R2,bool flag){\n    static Z pre[N],suf[N],f1[N],f2[N],g[N],inv_[N],ifcm[N],mul;\n    int k = n<<1|1,lim = getlen(n*3);\n    facm[0] = 1;\n    for(reg int i=0;i<=n;++i){\n        facm[0] *= m-n+i;\n        ifcm[i] = ifac[i]*ifac[n-i];\n    }\n    pre[0] = suf[k+1] = 1;\n    for(reg int i=1;i<=k;++i) pre[i] = pre[i-1]*(m-n+i-1);\n    for(reg int i=k;i;--i) suf[i] = suf[i+1]*(m-n+i-1);\n    mul = power(pre[k],p-2);\n    for(reg int i=1;i<=k;++i) inv_[i] = mul*pre[i-1]*suf[i+1];\n    for(reg int i=1;i<=n;++i) facm[i] = facm[i-1]*(m+i)*inv_[i];\n    for(reg int i=0;i!=k;++i) g[i] = inv_[i+1];\n    for(reg int i=k;i!=lim;++i) g[i] = 0;\n    dft(g,lim);\n    for(reg int i=0;i<=n;++i) f2[i] = ifcm[i]*((n-i)&1?-F2[i]:F2[i]);\n    for(reg int i=n+1;i!=lim;++i) f2[i] = 0;\n    dft(f2,lim);\n    for(reg int i=0;i!=lim;++i) f2[i] *= g[i];\n    idft(f2,lim);\n    for(reg int i=0;i<=n;++i) R2[i] = f2[i+n]*facm[i];\n    if(!flag) return;\n    for(reg int i=0;i!=ms;++i)\n    for(reg int j=0;j!=ms;++j){\n        for(reg int t=0;t<=n;++t) f1[t] = ifcm[t]*((n-t)&1?-F1[t].a[i][j]:F1[t].a[i][j]);\n        for(reg int t=n+1;t!=lim;++t) f1[t] = 0;\n        dft(f1,lim);\n        for(reg int t=0;t!=lim;++t) f1[t] *= g[t];\n        idft(f1,lim);\n        for(reg int t=0;t<=n;++t) R1[t].a[i][j] = f1[t+n]*facm[t];\n    }\n}\n\ninline matrix ff(int d,int x){\n    matrix res = getmat(x);\n    for(reg int i=1;i!=d;++i) res = res*getmat(x+i);\n    return res;\n}\n\ninline Z gg(int d,int x){\n    Z res = P[0].eval(x);\n    for(reg int i=1;i!=d;++i) res *= P[0].eval(x+i);\n    return res;\n}\n\nint k;\n\npair<matrix,Z> magic(int s,int t){ \n    static Z g[N],gd[N],invs = power(s,p-2);\n    static matrix f[N],fd[N];\n    static int st[30],top = 0,x = s,d = 1,kd;\n    while(x){\n        st[++top] = x;\n        x >>= 1;\n    }\n    for(reg int i=0;i<=k;++i){\n        x = i*s;\n        g[i] = P[0].eval(x);\n        f[i] = getmat(x);\n    }\n    --top;\n    while(top--){\n        kd = k*d;\n        lagrange(f,g,kd,kd+1,f+kd+1,g+kd+1,true);\n        g[kd<<1|1] = 0;\n        f[kd<<1|1] = matrix();\n        lagrange(f,g,kd<<1,d*invs,fd,gd,true);\n        for(reg int i=0;i<=(kd<<1);++i){\n            f[i] = f[i]*fd[i];\n            g[i] *= gd[i];\n        }\n        d <<= 1;\n        if(!(st[top+1]&1)) continue;\n        kd = k*(d+1);\n        for(reg int i=k*d+1;i<=kd;++i){\n            x = i*s;\n            f[i] = ff(d,x),g[i] = gg(d,x);\n        }\n        for(reg int i=0;i<=kd;++i){\n            x = i*s;\n            f[i] = f[i]*getmat(x+d);\n            g[i] *= P[0].eval(x+d);\n        }\n        ++d;\n    }\n    lagrange(f,g,k*s,ms*invs,f,g,false);\n    matrix r1 = I;\n    Z r2 = 1;\n    for(reg int i=0;i<=t;++i) r1 = r1*f[i],r2 *= g[i];\n    return make_pair(r1,r2);\n}\n\nZ solve(const Z *a,int n){\n    int tn = n-ms+1,s;\n    s = ceil(sqrt(tn*1.0/k));\n    pair<matrix,Z> tmp = magic(s,(tn-s)/s);\n    matrix mul = tmp.first;\n    Z div = tmp.second,res = 0;\n    for(reg int i=(tn/s)*s;i!=tn;++i){\n        mul = mul*getmat(i);\n        div *= P[0].eval(i+ms);\n    }\n    for(reg int i=0;i!=ms;++i) res += a[i]*mul.a[i][ms-1];\n    return res*power(div,p-2);\n}\n\nint n;\nZ a[9];\n\nint main(){\n    read(n),read(ms),read(k);\n    init(131073);\n    for(reg int i=0;i!=ms;++i) read(a[i]);\n    for(reg int i=0;i<=ms;++i){\n        P[i].t = k;\n        for(reg int j=0;j<=k;++j) read(P[i][j]);\n    }\n    Z ans = solve(a,n);\n    printf(\"%d\",ans.v);\n    return 0;   \n}\n```",
        "postTime": 1582203025,
        "uid": 115864,
        "name": "NaCly_Fish",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6129 \u3010\u3010\u6a21\u677f\u3011\u6574\u5f0f\u9012\u63a8\u3011"
    },
    {
        "content": "### \u5f15\u8a00\n\n\u8fd9\u9898\u6211\u4e4b\u524d\u4e00\u76f4\u53ea\u662f\u53e3\u80e1\u7740\uff0c\u6ca1\u6709\u6765\u5199\uff0c\u73b0\u5728\u6709\u7a7a\u4e86\u6765\u5199\u4e00\u4e0b\u3002\n\n\u505a\u8fd9\u9898\u4e4b\u524d\u5efa\u8bae\u5148\u53bb\u505a\u4e00\u4e0b[\u5feb\u901f\u9636\u4e58\u7b97\u6cd5](https://www.luogu.com.cn/problem/P5282)\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u5feb\u901f\u9636\u4e58\u7b97\u6cd5\u5176\u5b9e\u5c31\u662f\u6574\u5f0f\u9012\u63a8\u7684\u4e00\u4e2a\u7279\u4f8b\u800c\u5df2\u2026\u2026\n\n\u6240\u4ee5\u5982\u679c\u4f60\u5df2\u7ecf\u4f1a\u4e86\u5feb\u901f\u9636\u4e58\u7b97\u6cd5\uff0c\u8fd9\u9053\u9898\u76ee\u5c31\u5f88\u5bb9\u6613\u5b9e\u73b0\u4e86\u3002\n\n\u4ee5\u4e0b\u9ed8\u8ba4\u4f60\u5df2\u7ecf\u5b66\u4f1a\u4e86\u5feb\u901f\u9636\u4e58\u7b97\u6cd5\u3002\n\n---\n### \u601d\u8def\n\n\u597d\u4e86\uff0c\u4f60\u73b0\u5728\u5df2\u7ecf\u4f1a\u4e86\u5feb\u901f\u9636\u4e58\u7b97\u6cd5\u4e86\u3002\n\n\u5feb\u901f\u9636\u4e58\u7b97\u6cd5\u7684\u601d\u60f3\u5728\u4e8e**\u8ba9\u673a\u5668\u5e2e\u4f60\u5feb\u901f\u5b9e\u73b0\u5206\u6bb5\u6253\u8868**\u3002\n\n\u5177\u4f53\u7684\u5b9e\u73b0\u65b9\u6cd5\u4e0a\uff0c\u5176\u4f9d\u8d56\u4e8e**\u8fde\u7eed\u70b9\u503c\u5e73\u79fb**\u4e0e**\u503c\u57df\u500d\u589e**\u3002\n\n\u4e3a\u4e86\u5b9e\u73b0\u6574\u5f0f\u9012\u63a8\uff0c\u6211\u4eec\u5e94\u5f53\u6ce8\u610f\u5230\u5feb\u901f\u9636\u4e58\u7b97\u6cd5\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u7ef4\u62a4\u7684\u70b9\u503c\u5176\u5b9e\u5e76\u4e0d\u662f $n!$\uff0c\u800c\u662f $\\prod_{i=0}^{T-1}(aT+i)$\uff0c\u5373**\u4e00\u5bf9\u70b9\u503c\u4e4b\u95f4\u7684\u500d\u6570\u5173\u7cfb**\u3002\n\n\u7531\u4e8e\u6574\u5f0f\u9012\u63a8\u9636\u6570 $m$ \u4e0d\u6b62\u662f $1$ \u4e86\uff0c\u6211\u4eec\u5c31**\u4e0d\u80fd\u76f4\u63a5\u7ef4\u62a4\u4e00\u5bf9\u6570\u4e4b\u95f4\u7684\u500d\u6570\u5173\u7cfb\u4e86**\uff1b\u800c\u662f\u7ef4\u62a4\u51fa**\u4e00\u5bf9 $m$ \u7ef4\u5411\u91cf\u4e4b\u95f4\u7684\u7ebf\u6027\u53d8\u6362**\uff0c\u5373 $m\\times m$ \u7684\u4e00\u4e2a\u77e9\u9635\uff0c**\u77e9\u9635\u7684\u6bcf\u4e00\u9879\u5bf9\u5e94\u4e8e\u67d0\u4e2a\u591a\u9879\u5f0f\u7684\u4e00\u4e2a\u70b9\u503c**\u3002\n\n\uff08\u5b66\u8fc7\u9ad8\u7b49\u4ee3\u6570\u7684\u540c\u5b66\u5e94\u8be5\u77e5\u9053\uff0c\u7531\u4e8e\u4e00\u5143\u591a\u9879\u5f0f\u73af\u662f\u6574\u73af\uff0c\u6240\u4ee5\u5728\u591a\u9879\u5f0f\u73af\u4e0a\u7684\u77e9\u9635\u6709\u5b9a\u4e49\uff0c\u901a\u5e38\u79f0\u4e3a $\\lambda$-\u77e9\u9635\uff0c\u5176\u53ef\u4ee5\u628a $\\lambda$ \u63d0\u51fa\u6765\u5199\u6210\u591a\u9879\u5f0f\u7684\u5f62\u5f0f\u3002\u4e0d\u8fc7\u8fd9\u4e0d\u662f\u91cd\u70b9\u3002\uff09\n\n\u8fd9\u4e2a\u77e9\u9635\u7684\u5f62\u5f0f\u4e0d\u597d\u6784\u9020\u6210\u5b8c\u5168\u7684\u591a\u9879\u5f0f\u5f62\u5f0f\uff0c\u6211\u4eec\u4e0d\u59a8\u5148\u4ee4 $P_0(n)=-1$\uff0c\u90a3\u4e48\u76f8\u90bb\u7684\u5411\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\u53ef\u4ee5\u8bb0\u4e3a\uff1a\n\n$$\n\\begin{bmatrix}P_1(n)&P_2(n)&P_3(n)&\\cdots&P_{m-1}(n)&P_m(n)\\\\1\\\\&1\\\\&&1\\\\&&&\\ddots\\\\&&&&1\\\\\\end{bmatrix}\n\\begin{bmatrix}a_{n-1}\\\\a_{n-2}\\\\a_{n-3}\\\\\\vdots\\\\a_{n-m+1}\\\\a_{n-m}\\end{bmatrix}\n=\\begin{bmatrix}a_n\\\\a_{n-1}\\\\a_{n-2}\\\\\\vdots\\\\a_{n-m+2}\\\\a_{n-m+1}\\end{bmatrix}\n$$\n\n\u7136\u540e\u6211\u4eec\u73b0\u5728\u8981\u8003\u8651\u4e00\u822c\u7684 $P_0$\uff0c\u5219\u4e3a\n\n$$\n-{1\\over P_0(n)}\\begin{bmatrix}P_1(n)&P_2(n)&P_3(n)&\\cdots&P_{m-1}(n)&P_m(n)\\\\-P_0(n)\\\\&-P_0(n)\\\\&&-P_0(n)\\\\&&&\\ddots\\\\&&&&-P_0(n)\\\\\\end{bmatrix}\n\\begin{bmatrix}a_{n-1}\\\\a_{n-2}\\\\a_{n-3}\\\\\\vdots\\\\a_{n-m+1}\\\\a_{n-m}\\end{bmatrix}\n=\\begin{bmatrix}a_n\\\\a_{n-1}\\\\a_{n-2}\\\\\\vdots\\\\a_{n-m+2}\\\\a_{n-m+1}\\end{bmatrix}\n$$\n\n\u8bbe $B(\\lambda)=\\begin{bmatrix}P_1(\\lambda)&P_2(\\lambda)&P_3(\\lambda)&\\cdots&P_{m-1}(\\lambda)&P_m(\\lambda)\\\\-P_0(\\lambda)\\\\&-P_0(\\lambda)\\\\&&-P_0(\\lambda)\\\\&&&\\ddots\\\\&&&&-P_0(\\lambda)\\\\\\end{bmatrix}\n$\uff0c\u6211\u4eec\u5148\u6487\u5f00\u524d\u9762\u7684 $-\\frac1{P_0(n)}$ \u56e0\u5b50\u4e0d\u8bba\uff0c\u6211\u4eec\u73b0\u5728\u8981\u7ef4\u62a4 $\\prod_{i=0}^{T-1}B(aT+m+i)$ \u8fd9\u79cd\u5f62\u5f0f\u7684\u91cf\uff0c\u5176\u4e2d\u4e58\u6cd5\u81ea\u53f3\u5f80\u5de6\u3002\n\n\u5bb9\u6613\u53d1\u73b0 $B_T(\\lambda)=\\prod_{i=0}^{T-1}B(\\lambda+i)$ \u662f\u4e00\u4e2a\u5404\u9879\u6b21\u6570\u4e0d\u9ad8\u4e8e $dT$ \u7684 $\\lambda$-\u77e9\u9635\uff0c\u53ea\u7528 $dT+1$ \u4e2a\u503c\u5373\u53ef\u7ef4\u62a4\u3002\n\n\u4e8e\u662f\u6211\u4eec\u7ef4\u62a4\u51fa $B_T(m)$\uff0c$B_T(m+T)$\uff0c$B_T(m+2T)$\uff0c$\\dots$\uff0c$B_T(m+(dT-1)T)$\uff0c$B_T(m+dT^2)$ \u8fd9\u51e0\u4e2a $\\lambda$-\u77e9\u9635\u70b9\u503c\uff0c\u7136\u540e\u7528\u7c7b\u4f3c\u4e8e\u5feb\u901f\u9636\u4e58\u7b97\u6cd5\u7684\u65b9\u5f0f\u66b4\u529b\u8fdb\u884c\u591a\u9879\u5f0f\u70b9\u503c\u5e73\u79fb\u548c\u500d\u589e\u5c31\u597d\u4e86\u3002\n\n\u521d\u503c $T=1$\uff0c$B_1(\\lambda)=B(\\lambda)$\uff0c\u8981\u7ef4\u62a4 $d+1$ \u5904\u70b9\u503c\u3002\n\n\u6700\u540e\u628a\u539f\u5411\u91cf\u9010\u4e2a\u4e58\u8fc7\u53bb\u5373\u53ef\u3002\n\n\u5b8c\u4e86\uff1f\n\n\u522b\u5fd8\u8bb0\u8fd8\u6709 $-\\frac1{P_0(n)}$ \u56e0\u5b50\uff01\n\n\u73b0\u5728\u8981\u6c42 $\\prod_{i=m}^n-P_0(i)$\uff0c\u76f4\u63a5\u518d\u540c\u4e0a\u7684\u65b9\u5f0f\u505a\u4e00\u6b21\u5feb\u901f\u9636\u4e58\u7b97\u6cd5\u5f0f\u7684\u500d\u589e\u5373\u53ef\u3002\n\n---\n### Code\n\n\u5e38\u6570\u592a\u5927\uff0c\u6ca1\u8fc7\uff0c\u5c31\u4e0d\u8d34\u4e86\u3002\n\n---\nUpdate on 2022.10.10\uff1a\n\n\u7528\u5faa\u73af\u5377\u79ef\u5361\u5e38\u5361\u8fc7\u53bb\u4e86\u3002\n\n\u4e0b\u9762\u662f\u6838\u5fc3\u4ee3\u7801\u3002\n\n```cpp\nconst ullt Mod=998244353,g=3;\ntypedef ConstMod::mod_ullt<Mod>modint;\ntypedef std::vector<modint>modvec;\ntypedef NTT_POLY::poly_NTT<Mod,g>poly;\ntypedef NTT_POLY::poly_eval<Mod,g>eval;\ntypedef NTT_POLY::poly_inter<Mod,g>inter;\ntypedef NTT_POLY::poly_cpd<Mod,g>cpd;\ntypedef NTT_POLY::poly_nums<Mod,g>nums;\ntypedef FWT_MODINT::FWT_Mod<Mod>FWT;\nmodint P[2000005],Q[2000005];\npoly::DIFDIT s;\nmodvec shift2(modvec A,uint n,modint v){\n    static modint User[4000005],UserInv[4000005];\n    User[0]=1;\n    for(uint i=0;i<=n*2;i++)User[i+1]=User[i]*(v-n+i);\n    UserInv[n*2+1]=User[n*2+1].inv();\n    for(uint i=n*2;~i;i--)UserInv[i]=UserInv[i+1]*(v-n+i);\n    modvec G;for(uint i=0;i<=n*2;i++)G.push_back(UserInv[i+1]*User[i]);\n    s.dif(G);for(uint i=0;i<s.size();i++)G[i]*=A[i];\n    s.dit(G);\n    modvec ans(n+1);\n    for(uint i=0;i<=n;i++)ans[i]=G[i+n]*UserInv[i]*User[i+n+1];\n    return ans;\n}\nmodint A[10];poly W[10];\nmodvec B[10][10],B2;\nint main()\n{\n#ifdef MYEE\n    freopen(\"QAQ.in\",\"r\",stdin);\n    // freopen(\"QAQ.out\",\"w\",stdout);\n#endif\n    P[0]=1;for(uint i=1;i<=2000000;i++)P[i]=P[i-1]*i;\n    Q[2000000]=P[2000000].inv();for(uint i=2000000;i;i--)Q[i-1]=Q[i]*i;\n    uint n,m,d;scanf(\"%u%u%u\",&n,&m,&d);\n    uint T=2;while(m+T*T*d<=n)T<<=1; // T \\sim \\sqrt n/d\n    for(uint i=0;i<m;i++)A[i].read();\n    std::reverse(A,A+m);\n    for(uint i=0;i<=m;i++){W[i].chg_deg(d);for(uint j=0;j<=d;j++)W[i][j].read();}\n    for(uint i=0;i<m;i++)for(uint j=0;j<m;j++)B[i][j].resize(d+1);\n    B2.resize(d+1);\n    for(uint i=0;i<=d;i++)\n    {\n        for(uint j=0;j<m;j++)B[j][0][i]=cpd().point_eval(W[j+1],m+i);\n        modint v=B2[i]=-cpd().point_eval(W[0],m+i);\n        for(uint j=1;j<m;j++)B[j-1][j][i]=v;\n    }\n    for(uint t=2;t<=T;t<<=1){\n        static modvec X,Y,Z,W;s.bzr(d*t+1); // \u5faa\u73af\u5377\u79ef\u5361\u5e38\n        for(uint i=0;i<m;i++)for(uint j=0;j<m;j++){\n            W=B[i][j];\n            for(uint i=0;i<=d*(t/2);i++)W[i]*=Q[i]*Q[d*(t/2)-i]*((d*(t/2)-i)&1?-modint(1):1);\n            s.dif(W),X=shift2(W,d*(t/2),d*(t/2)+1),Y=shift2(W,d*(t/2),d*t+2),Z=shift2(W,d*(t/2),d*(t/2)*3+3);\n            for(auto v:X)B[i][j].push_back(v);\n            for(auto v:Y)B[i][j].push_back(v);\n            for(auto v:Z)B[i][j].push_back(v);\n        }\n        static modint QwQ[10][10];\n        for(uint i=0;i<m;i++)for(uint j=0;j<m;j++)QwQ[i][j]=0;\n        for(uint i=0;i<m;i++)for(uint j=0;j<m;j++)for(uint k=0;k<m;k++)QwQ[i][k]+=B[i][j][0]*B[j][k][1];\n        for(uint i=0;i<m;i++)for(uint j=0;j<m;j++)B[i][j][0]=QwQ[i][j];\n        for(uint dep=1;dep<=d*t;dep++){\n            for(uint i=0;i<m;i++)for(uint j=0;j<m;j++)B[i][j][dep]=0;\n            for(uint i=0;i<m;i++)for(uint j=0;j<m;j++)for(uint k=0;k<m;k++)\n                B[i][k][dep]+=B[i][j][dep<<1]*B[j][k][dep<<1|1];\n        }\n        for(uint i=0;i<m;i++)for(uint j=0;j<m;j++)B[i][j].resize(t*d+1);\n        W=B2;\n        for(uint i=0;i<=d*(t/2);i++)W[i]*=Q[i]*Q[d*(t/2)-i]*((d*(t/2)-i)&1?-modint(1):1);\n        s.dif(W),X=shift2(W,d*(t/2),d*(t/2)+1),Y=shift2(W,d*(t/2),d*t+2),Z=shift2(W,d*(t/2),d*(t/2)*3+3);\n        for(auto v:X)B2.push_back(v);\n        for(auto v:Y)B2.push_back(v);\n        for(auto v:Z)B2.push_back(v);\n        for(uint dep=0;dep<=d*t;dep++)B2[dep]=B2[dep<<1]*B2[dep<<1|1];\n        B2.resize(d*t+1);\n    }\n    modint ans(1);\n    for(uint i=0;i<(n-m)/T;i++){\n        modvec User(m);\n        for(uint j=0;j<m;j++)for(uint k=0;k<m;k++)User[k]+=B[j][k][i]*A[j];\n        for(uint j=0;j<m;j++)A[j]=User[j];\n        ans*=B2[i];\n    }\n    for(uint i=(n-m)/T*T+m;i<=n;i++){\n        modint user;\n        for(uint j=0;j<m;j++)user+=cpd().point_eval(W[j+1],i)*A[j];\n        modint v=-cpd().point_eval(W[0],i);\n        for(uint j=m-1;j;j--)A[j]=A[j-1]*v;\n        A[0]=user,ans*=v;\n    }\n    ans=A[0]/ans;\n    ans.println();\n    return 0;\n}\n```\n\n",
        "postTime": 1665315789,
        "uid": 105050,
        "name": "myee",
        "ccfLevel": 7,
        "title": "6115"
    }
]