[
    {
        "content": "\u6a21\u62df\u8d5b\u8003\u8fd9\u4e2a\u9898\u53d1\u73b0\u53ef\u4ee5\u5f88\u597d\u5efa\u56fe\u641e\u6b27\u62c9\u56de\u8def\u3002\u7136\u540e\u5c31\u53d1\u73b0\u4e0d\u5bf9\u5440\uff0c\u6b27\u62c9\u56de\u8def\u600e\u4e48\u505a\u8ba1\u6570\u95ee\u9898\u5462\uff1f\u7136\u540e\u5c31\u76f4\u63a5\u5f03\u4e86\uff0c\u7ed3\u679c\u771f\u662f\u6b27\u62c9\u56de\u8def\u8ba1\u6570\uff0c\u7528 BEST \u5b9a\u7406\uff08\u4eca\u5929\u624d\u4f1a\uff09\u5c31\u79d2\u4e86\uff0c\u8fd8\u662f\u592a\u5e74\u8f7b\u4e86\u3002\u3002\u3002\n\n\u8fd9\u7bc7\u9898\u89e3\u5c31\u4f1a\u8bb2\u5efa\u56fe\u8fc7\u7a0b\u53ca BEST \u5b9a\u7406\u7684\u7b80\u5355\u8bc1\u660e\u3002\n\n\u6211\u4eec\u5148\u4e0d\u8003\u8651\u8ba1\u6570\uff0c\u8003\u8651\u5224\u65ad\u662f\u5426\u5408\u6cd5\uff0c\u8003\u8651\u5efa\u4e00\u4e2a\u8d85\u7ea7\u70b9 $A$ \uff0c\u4ece $A$ \u5411\u6240\u6709 $S$ \u70b9\u8fde\u8fb9\uff0c\u4ece\u6240\u6709 $R$ \u70b9\u5411 $A$ \u8fde\u8fb9\u3002\u90a3\u4e48\u53ea\u9700\u5224\u65ad\u662f\u5426\u6709\u6b27\u62c9\u56de\u8def\u5373\u53ef\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e2a\u70b9\u7684\u51fa\u5ea6\u662f\u5426\u7b49\u4e8e\u5165\u5ea6\u3002\n\n\u56e0\u4e3a\u5728\u6b27\u62c9\u56de\u8def\u4e2d $A$ \u4f1a\u7ecf\u8fc7 $|S|+1$ \u6b21\uff08\u56de\u6765\u7b97\u4e00\u6b21\uff09\uff0c\u6bcf\u4e24\u6b21\u4e4b\u95f4\u5176\u5b9e\u5c31\u5bf9\u5e94\u4e86\u4e00\u6761\u4ece $S$ \u5230 $R$ \u7684\u8def\u5f84\uff0c\u6240\u4ee5\u8fd9\u6837\u6211\u4eec\u5c31\u53ea\u9700\u8981\u505a\u6b27\u62c9\u56de\u8def\u8ba1\u6570\u5373\u53ef\u3002\u8003\u573a\u4e0a\u6211\u4ee5\u4e3a\u8fd9\u662f\u4e2a\u4e0d\u53ef\u505a\u95ee\u9898\uff0c\u76f4\u5230\u53d1\u73b0\u4e86\u8fd9\u4e2a\uff1a\n\n## BEST \u5b9a\u7406\n\n\u5b9a\u7406\uff1a\u8bbe\u4e00\u4e2a\u6709\u5411\u56fe $G$ \u6b27\u62c9\u56de\u8def\u7684\u4e2a\u6570\u4e3a $F(G)$\uff0c\u4e00\u4e2a\u56fe $G$ \u4ee5 $root$ \u4e3a\u6839\u7684\u751f\u6210\u7684\u5185\u5411\u6811\u6570\u91cf\u4e3a $Tree(G,root)$ \u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u4e3a $deg_i$\uff0c\u5219\u6709\uff1a\n\n$$F(G)=Tree(G,root) \\prod\\limits_{i=1}^{n}(deg_i-1)!$$\n\n\u8003\u8651\u8bc1\u660e\u53cc\u5c04\u3002\n\n1.\u6bcf\u4e00\u4e2a\u5185\u5411\u6811\u90fd\u80fd\u5bf9\u5e94 $\\prod\\limits_{i=1}^{n}(deg_i-1) !$ \u6761\u6b27\u62c9\u56de\u8def\n\n\u8bc1\u660e\uff1a\n\u8003\u8651\u8ba9\u6bcf\u4e2a\u5185\u5411\u6811\u4e0a\u7684\u81ea\u5df1\u5230\u7236\u4eb2\u7684\u8fb9 $(x,fa)$ \u4f5c\u4e3a\u6bcf\u4e2a\u70b9\u5728\u6b27\u62c9\u56de\u8def\u4e0a\u7684\u6700\u540e\u4e00\u6761\u51fa\u8fb9\uff0c\u90a3\u4e48\u6bcf\u4e2a\u70b9\u5728\u7ecf\u8fc7\u65f6\u524d $deg_i-1$ \u6761\u8fb9\u65f6\u6709 $(deg_i-1)!$ \u79cd\u8d70\u6cd5\uff0c\u4e3a\u4e86\u786e\u5b9a\u8fd9\u4e2a\u56de\u8def\uff0c\u6839\u8282\u70b9\u5fc5\u987b\u8981\u786e\u5b9a\u7b2c\u4e00\u6b65\u8d70\u7684\u662f\u4ec0\u4e48\uff0c\u4e0d\u7136\u4e00\u6761\u56de\u8def\u4f1a\u7b97 $deg_{root}$ \u6b21\uff0c\u6240\u4ee5\u6839\u8282\u70b9\u4e5f\u662f\u53ea\u6709 $(deg_i-1)!$ \u79cd\u8d70\u6cd5\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u5185\u5411\u6811\u90fd\u80fd\u5bf9\u5e94 $\\prod\\limits_{i=1}^{n}(deg_i-1) !$ \u6761\u6b27\u62c9\u56de\u8def\u3002\n\n2.\u6bcf\u4e00\u6761\u6b27\u62c9\u56de\u8def\u90fd\u6070\u597d\u88ab\u4e00\u68f5\u5185\u5411\u6811\u5bf9\u5e94\n\n\u8003\u8651\u6bcf\u4e2a\u70b9\u7684\u6700\u540e\u4e00\u6761\u51fa\u8fb9\u6784\u6210\u7684\u56fe\uff0c\u82e5\u8fd9\u4e2a\u56fe\u4e0d\u8fde\u901a\uff08\u5373\u4e0d\u662f\u5185\u5411\u6811\uff09\uff0c\u5219\u4f1a\u5728\u4e0d\u8fde\u901a\u4e4b\u524d\u7ed3\u675f\u56de\u8def\uff0c\u6b64\u65f6\u6700\u540e\u4e00\u4e2a\u5230\u8fbe\u7684\u4e0d\u662f\u6839\u8282\u70b9\uff0c\u4e0e\u6b27\u62c9\u56de\u8def\u7684\u5b9a\u4e49\u77db\u76fe\uff0c\u6240\u4ee5\u6bcf\u4e00\u6761\u6b27\u62c9\u56de\u8def\u90fd\u6070\u597d\u88ab\u4e00\u68f5\u5185\u5411\u6811\u5bf9\u5e94\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u8bc1\u660e\u4e86 BEST \u5b9a\u7406\u3002\n\n\u81f3\u4e8e\u672c\u9898\uff0c\u76f4\u63a5\u6309\u7167\u4e0a\u9762\u5efa\u51fa\u7684\u56fe\u8dd1\u5185\u5411\u6811\u8ba1\u6570\uff08Matrix-tree \u5e94\u8be5\u90fd\u4f1a\u5427\uff09\uff0c\u5185\u5411\u6811\u968f\u4fbf\u9009\u8c01\u5f53\u6839\u7b54\u6848\u90fd\u4e00\u6837\uff0c\u7136\u540e\u5c31\u4e58\u4e0a $\\prod\\limits_{i=1}^{n}(deg_i-1) !$ \u5c31\u5b8c\u4e86\uff0c\u6ce8\u610f\u4e00\u4e0b\u56fe\u4e0a\u6709\u5b64\u7acb\u70b9\uff0c\u9700\u8981\u53bb\u6389\u8fd9\u4e9b\u70b9\u4e4b\u540e\u518d\u8dd1\u77e9\u9635\u6811\u624d\u5bf9\uff0c\u4e0d\u7136\u7b54\u6848\u4e00\u5b9a\u662f $0$\u3002\n\n\u5b8c\u7ed3\u6492\u82b1\uff5e\n```cpp\n#include<bits/stdc++.h>\n#define N 105\nusing namespace std;\nconst int mod=1e9+7;\nint T,n,m,num,a[N][N],ans;\nint b[N][N],dd[N],fac[N];\nchar s[N];\ninline int Mod(int x) {return x<mod?x:x-mod;}\ninline int Ksm(int a,int n,int ans=1) {for(; n; n>>=1,a=1ll*a*a%mod)if(n&1)ans=1ll*ans*a%mod;return ans;}\nint Do(int n,int ans=1,int opt=1) {\n\tfor(int i=1,now; i<=n; ++i) {\n\t\tnow=0;for(int j=i; j<=n&&!now; ++j)if(b[j][i])now=j;\n\t\tif(now) {\n\t\t\tif(now!=i)opt=-opt,swap(b[now],b[i]);\n\t\t\tfor(int j=i+1,tmp=Ksm(b[i][i],mod-2); j<=n; ++j)\n\t\t\t\tif(b[j][i])for(int tmpp=1ll*tmp*b[j][i]%mod,k=i; k<=n; ++k)b[j][k]=Mod(b[j][k]-1ll*b[i][k]*tmpp%mod+mod);\n\t\t}\n\t}\n\tfor(int i=1; i<=n; ++i)ans=1ll*ans*b[i][i]%mod;\n\treturn opt==1?ans:mod-ans;\n}\nint main() {\n\tscanf(\"%d\",&T);\n\tfor(int i=fac[0]=1; i<=100; ++i)fac[i]=1ll*fac[i-1]*i%mod;\n\twhile(T--) {\n\t\tscanf(\"%d%d%s\",&n,&m,s+1);\n\t\tfor(int i=1; i<=n; ++i)for(int j=1; j<=n; ++j)a[i][j]=0;\n\t\tfor(int i=1; i<=n; ++i)if(s[i]=='S')++a[i][i];\n\t\tfor(int i=1; i<=n; ++i) {\n\t\t\tscanf(\"%s\",s+1);\n\t\t\tfor(int j=1; j<=n; ++j)if(j!=i&&s[j]=='1')a[i][j]=mod-1,++a[j][j];\n\t\t}\n\t\tnum=0;for(int i=1; i<=n; ++i)if(a[i][i])dd[i]=++num;else dd[i]=0;\n\t\tfor(int i=1; i<=num; ++i)for(int j=1; j<=num; ++j)b[i][j]=0;\n\t\tfor(int i=1; i<=n; ++i)for(int j=1; j<=n; ++j)b[dd[i]][dd[j]]=a[i][j];ans=1;\n\t\tfor(int i=1; i<=num; ++i)ans=1ll*ans*fac[b[i][i]-1]%mod;ans=1ll*ans*Do(num)%mod;cout<<ans<<\"\\n\";\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1620048097,
        "uid": 112569,
        "name": "Time_tears",
        "ccfLevel": 9,
        "title": "[USACO21OPEN] Routing Schemes P\u9898\u89e3"
    },
    {
        "content": "\u7ed9\u5b9a\u4e00\u5f20\u6709\u5411\u56fe\uff0c\u548c\u82e5\u5e72\u4e2a\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u6c42\u8fd9\u7528\u82e5\u5e72\u6761\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u8def\u5f84\u5c06\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u4e0d\u91cd\u4e0d\u6f0f\u8986\u76d6\u7684\u65b9\u6848\u6570\u3002\u8d77\u70b9\u548c\u7ec8\u70b9\u53ef\u4ee5\u4efb\u610f\u5339\u914d\u3002\u56fe\u662f\u5728$\\rm DAG$ \u7684\u57fa\u7840\u4e0a\u589e\u52a0\u6700\u591a $k\\le 2$ \u6761\u4efb\u610f\u8fb9\u3002\n\n\u9996\u5148\u8fd9\u4e2a\u6a21\u578b\u770b\u8d77\u6765\u975e\u5e38\u7684\u7f51\u7edc\u6d41\u3002\n\n\u5982\u679c\u53ea\u662f\u5224\u65ad\u662f\u5426\u6709\u89e3\uff0c\u53ef\u4ee5\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9\u548c\u8d85\u7ea7\u6c47\u70b9\uff0c\u7136\u540e\u6e90\u70b9\u548c\u8d77\u70b9\u8fde\u8fb9\uff0c\u7ec8\u70b9\u548c\u6c47\u70b9\u8fde\u8fb9\uff0c\u8dd1\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u6761\u4ef6\u662f\u6bcf\u6761\u8fb9\u8981\u6070\u597d\u88ab\u8986\u76d6\u4e00\u6b21\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u518d\u4ece\u6c47\u70b9\u6d41\u5230\u6e90\u70b9\uff0c\u5219\u4e00\u6761\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u8def\u5f84\u5c06\u662f\u4e00\u6761\u56de\u8def\uff0c\u800c\u8fd9\u4e9b\u56de\u8def\u5c06\u6bcf\u6761\u8fb9\u90fd\u6070\u597d\u8986\u76d6\u4e00\u6b21\uff0c\u800c\u53c8\u5728\u6e90\u70b9\u548c\u6c47\u70b9\u5904\u76f8\u4ea4\u3002\n\n\u6240\u4ee5\u8fd9\u4e9b\u56de\u8def\u5408\u5e76\u8d77\u6765\u4e00\u5b9a\u662f\u539f\u56fe\u7684\u6b27\u62c9\u56de\u8def\uff01\n\n\u7136\u540e\u6b27\u62c9\u56de\u8def\u8ba1\u6570\u6709\u4e00\u4e2a\u795e\u5947\u7684\u5b9a\u7406 $\\rm BEST$ \u5b9a\u7406\uff0cOI wiki \u4e0a\u6709\u4ecb\u7ecd\uff0c\u6240\u4ee5\u8fd9\u5c31\u8f6c\u6362\u4e3a\u751f\u6210\u6811\u8ba1\u6570\uff0c\u76f4\u63a5\u77e9\u9635\u6811\u5b9a\u7406\u5373\u53ef\u3002\n\n\u8fd9\u4e2a$k\\le 2$\u975e\u5e38\u7684\u8ff7\u60d1\uff0c\u8c8c\u4f3c\u662f\u6709\u5947\u5947\u602a\u602a\u7684$\\rm DP$\u505a\u6cd5\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<=b;i++)\n#define pre(i,a,b) for(int i=a;i>=b;i--)\n#define N 155\n#define P 1000000007\n#define int long long \nusing namespace std;\nint n,k,a[N][N],b[N][N],fac[N],v[N];char s[N];\nvoid add(int x,int y){\n\ta[x][y]--;a[y][y]++;\n}\nint calc(){\n\tint ans=1;\n\trep(i,1,n)rep(j,i+1,n)while(a[j][i]){\n\t\tint cur = a[i][i] / a[j][i];\n\t\trep(k,i,n)(a[i][k] -= 1LL * cur * a[j][k] % P) %= P,swap(a[i][k],a[j][k]);\n\t\tans*=-1;\n\t}\n\trep(i,1,n)ans=1LL*ans*a[i][i]%P;\n\t//cout<<\"ss \"<<ans<<endl;\n\treturn (ans+P)%P;\n}\nvoid solve(){\n\tmemset(a,0,sizeof(a));\n\tmemset(b,0,sizeof(b));\n\tmemset(v,0,sizeof(v));\n\tscanf(\"%lld%lld\",&n,&k);\n\tscanf(\"%s\",s+1);\n\trep(i,1,n)if(s[i]=='S')add(n+1,i),v[n+1]=v[i]=1;else if(s[i]=='R')add(i,n+1),v[i]=v[n+1]=1;\n\trep(i,1,n){\n\t\tscanf(\"%s\",s+1);\n\t\trep(j,1,n)if(s[j]=='1')add(i,j),v[i]=v[j]=1;\n\t}\n\tint cur = 1 , T = 0;\n\trep(i,1,n)if(a[i][i])cur=1LL*cur*fac[a[i][i]-1]%P;\n\trep(i,1,n)if(v[i]){\n\t\t++T;int res=0;\n\t\trep(j,1,n)if(v[j]) b[T][++res]= a[i][j];\n\t}\n\tn=T;rep(i,1,n)rep(j,1,n)a[i][j]=b[i][j];\n\t//cout<<cur<<\" \"<<calc()<<endl;\n\tprintf(\"%lld\\n\",1LL*cur*calc()%P);\n}\nsigned main(){\n\t//freopen(\"6.in\",\"r\",stdin);\n\tfac[0]=1;rep(i,1,N-5)fac[i]=1LL*i*fac[i-1]%P;\n\tint T;scanf(\"%lld\",&T);\n\twhile(T--)solve();\n\treturn 0;\n} \n```",
        "postTime": 1619660026,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P7531 [USACO21OPEN] Routing Schemes P"
    },
    {
        "content": "~~\u5c31\u8fd9\uff1f\u4e5f\u80fd\u653e\u5230 USACO Pt T2\uff1f~~\n\n\u9996\u5148\u8003\u8651\u600e\u6837\u5224\u65ad\u6709\u65e0\u89e3\uff0c\u8fd9\u663e\u7136\u662f\u4e2a\u7f51\u7edc\u6d41\u95ee\u9898\uff0c\u5bf9\u4e8e\u6bcf\u4e2a Sender \u8fde\u4e00\u6761\u6e90\u70b9\u5230\u8be5\u70b9\uff0c\u5bb9\u91cf\u4e3a 1 \u7684\u8fb9\uff0c\u5bf9\u4e8e\u6bcf\u4e2a Receiver \u8fde\u4e00\u6761\u8be5\u70b9\u5230\u6c47\u70b9\uff0c\u5bb9\u91cf\u4e3a 1 \u7684\u8fb9\uff0c\u5bf9\u4e8e\u539f\u56fe\u4e2d\u6bcf\u6761\u8fb9\u8fde\u4e0a\u4e0b\u754c\u5747\u4e3a 1 \u7684\u8fb9\uff0c\u7136\u540e\u8dd1\u7f51\u7edc\u6d41\u5373\u53ef\u3002\n\n\u4e0d\u8fc7\u6211\u4eec\u7ec6\u60f3\u5176\u5b9e\u4e0d\u9700\u8981\u7f51\u7edc\u6d41\uff0c\u6ce8\u610f\u5230\u9898\u76ee\u4e2d\u6709\u4e00\u4e2a\u6761\u4ef6\u53eb\u201c\u6bcf\u6761\u8fb9\u7ecf\u8fc7\u6070\u597d\u4e00\u6b21\u201d\uff0c\u770b\u5230\u8fd9\u4e2a\u6761\u4ef6\u6211\u4eec\u5f88\u81ea\u7136\u5730\u60f3\u5230\u6b27\u62c9\u56de\u8def\uff0c\u800c\u53c8\u7531\u4e8e\u6bcf\u4e2a Sender \u90fd\u8981\u53d1\u51fa\u6d88\u606f\uff0c\u56e0\u6b64\u6240\u6709\u6e90\u70b9\u8fde\u51fa\u7684\u3001\u4e0e\u6c47\u70b9\u76f8\u8fde\u7684\u8fb9\u90fd\u8981\u88ab\u7ecf\u8fc7\u6070\u597d\u4e00\u6b21\uff0c\u4f46\u663e\u7136\u8fd9\u4e2a\u56fe\u4e0d\u5b58\u5728\u6b27\u62c9\u56de\u8def\uff0c\u56e0\u4e3a\u6e90\u70b9\u7684\u5165\u5ea6\u4e3a $0$\uff0c\u56e0\u6b64\u8003\u8651\u518d\u4ece\u6c47\u70b9\u5411\u6e90\u70b9\u8fde $s$ \u6761\u8fb9\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u5b58\u5728\u6b27\u62c9\u56de\u8def\u5373\u53ef\uff0c\u5176\u4e2d $s$ \u4e3a Sender \u7684\u4e2a\u6570\uff0c\u6b63\u786e\u6027\u663e\u7136\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u600e\u6837\u7edf\u8ba1\u65b9\u6848\u6570\uff0c\u8fd9\u663e\u7136\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e00\u4e2a\u6b27\u62c9\u56de\u8def\u8ba1\u6570\u95ee\u9898\uff0c\u8003\u8651 BEST \u5b9a\u7406\uff08\u5982\u679c\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f BEST \u5b9a\u7406\u53ef\u4ee5\u70b9[\u8fd9\u513f](https://www.cnblogs.com/ET2006/p/matrix-tree-best-theroem.html)\uff09\uff0c\u6211\u4eec\u5b9a\u6839\u4e3a\u6e90\u70b9 $S$ \u7528\u77e9\u9635\u6811\u5b9a\u7406\u6c42\u51fa\u6839\u5411\u751f\u6210\u6811\u7684\u4e2a\u6570 $C$\uff0c\u90a3\u4e48\u6574\u5f20\u56fe\u6b27\u62c9\u56de\u8def\u7684\u4e2a\u6570\u5c31\u662f $deg_S\\times C\\times\\prod(deg_i-1)!$\uff0c\u4f46\u663e\u7136\u8fd9\u5e76\u4e0d\u662f\u5408\u6cd5\u7684\u65b9\u6848\u6570\u4e2a\u6570\uff0c\u56e0\u4e3a\u6240\u6709\u4e0e $S$ \u76f8\u8fde\u7684\u8fb9\u7684\u8bbf\u95ee\u987a\u5e8f\u662f\u4e0d\u91cd\u8981\u7684\uff0c\u6240\u6709\u4e0e $T$ \u76f8\u8fde\u7684\u8fb9\u7684\u8bbf\u95ee\u987a\u5e8f\u4e5f\u662f\u4e0d\u91cd\u8981\u7684\uff0c\u56e0\u6b64\u9700\u9664\u4ee5 $(s!)^2$\uff0c\u800c $deg_S=deg_T=s$\uff0c$S$ \u7684\u8d21\u732e\u4e3a $(s-1)!\\times s=s!$\uff0c$T$ \u7684\u8d21\u732e\u4e3a $(s-1)!$\uff0c\u9664\u6389\u4e24\u4e2a $s!$ \u5c31\u7b49\u4ef7\u4e8e\u5c06 $S,T$ \u7684\u8d21\u732e\u90fd\u62b5\u6d88\u6389\u518d\u9664\u4ee5 $s$\u3002\n\n\u56e0\u6b64\u65b9\u6848\u6570\u5c31\u662f $C\\times\\dfrac{1}{s}\\prod\\limits_{i=1}^n(deg_i-1)!$\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $Tn^3$\n\n\u6ce8\u610f\u7279\u5224\u5b64\u7acb\u70b9\uff01\n\n~~\u6240\u4ee5\u8fd9\u4e2a $k\\le 2$ \u662f\u6765\u5e72\u561b\u7684\u2026\u2026~~\n\n```cpp\nconst int MAXN=100;\nconst int MOD=1e9+7;\nint qpow(int x,int e){\n\tint ret=1;\n\tfor(;e;e>>=1,x=1ll*x*x%MOD) if(e&1) ret=1ll*ret*x%MOD;\n\treturn ret;\n}\nint n,AAA,a[MAXN+5][MAXN+5],fac[MAXN+5];\nchar buf[MAXN+5],s[MAXN+5][MAXN+5];\nint in[MAXN+5],out[MAXN+5],id[MAXN+5],idn;\nvoid add1(int u,int v){in[v]++;out[u]++;}\nvoid add2(int u,int v){\n\tu=id[u];v=id[v];\n\ta[u][v]=(a[u][v]+MOD-1)%MOD;\n\ta[u][u]=(a[u][u]+1)%MOD;\n}\nvoid clear(){\n\tmemset(a,0,sizeof(a));\n\tmemset(in,0,sizeof(in));\n\tmemset(out,0,sizeof(out));\n\tmemset(id,0,sizeof(id));\n\tidn=0;\n}\nvoid solve(){\n\tscanf(\"%d%d%s\",&n,&AAA,buf+1);clear();int cnt=0;\n\tfor(int i=1;i<=n;i++){\n\t\tif(buf[i]=='S') add1(n+1,i),add1(n+2,n+1),cnt++;\n\t\tif(buf[i]=='R') add1(i,n+2);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s\",s[i]+1);\n\t\tfor(int j=1;j<=n;j++) if(s[i][j]=='1')\n\t\t\tadd1(i,j);\n\t}\n\tfor(int i=1;i<=n+2;i++) if(in[i]^out[i])\n\t\treturn printf(\"0\\n\"),void();\n\tfor(int i=1;i<=n+2;i++){\n\t\tif(i==n+1) continue;\n\t\tif(!in[i]) continue;\n\t\tid[i]=++idn;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(buf[i]=='S') add2(n+1,i),add2(n+2,n+1);\n\t\tif(buf[i]=='R') add2(i,n+2);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++) if(s[i][j]=='1')\n\t\t\tadd2(i,j);\n\t} int sgn=1;\n\tfor(int i=1;i<=idn;i++){\n\t\tint t=i;\n\t\tfor(int j=i+1;j<=idn;j++) if(a[j][i]) t=j;\n\t\tif(t^i) sgn=-sgn;\n\t\tfor(int j=i;j<=idn;j++) swap(a[i][j],a[t][j]);\n\t\tint iv=qpow(a[i][i],MOD-2);\n\t\tfor(int j=i+1;j<=idn;j++){\n\t\t\tint mul=1ll*(MOD-a[j][i])*iv%MOD;\n\t\t\tfor(int k=i;k<=idn;k++) a[j][k]=(a[j][k]+1ll*a[i][k]*mul)%MOD;\n\t\t}\n\t} int res=(sgn+MOD)%MOD;\n\tfor(int i=1;i<=idn;i++) res=1ll*res*a[i][i]%MOD;//printf(\"%d\\n\",res);\n\tfor(int i=1;i<=n;i++) if(out[i]) res=1ll*res*fac[out[i]-1]%MOD;\n\tres=1ll*res*qpow(cnt,MOD-2)%MOD;printf(\"%d\\n\",res);\n}\nint main(){\n\tfac[0]=1;for(int i=1;i<=MAXN;i++) fac[i]=1ll*fac[i-1]*i%MOD;\n\tint qu;scanf(\"%d\",&qu);while(qu--) solve();\n\treturn 0;\n}\n```",
        "postTime": 1620525099,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P7531 [USACO21OPEN] Routing Schemes P"
    }
]