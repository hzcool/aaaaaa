[
    {
        "content": "\u7a81\u7136\u53d1\u73b0\u8fd9\u9053\u9898\u5c45\u7136\u6ca1\u4eba\u5199\u9898\u89e3\uff0c\u65e2\u7136\u8fd9\u6837\u90a3\u6211\u5c31~~\u6c34~~\u8d21\u732e\u4e00\u7bc7\u9898\u89e3\u5427\u3002  \n\u987a\u4fbf\u4e00\u63d0\uff0c\u611f\u89c9\u8fd9\u9053\u9898\u7684\u9898\u9762\u6709\u70b9\u6a21\u7cca\u4e14\u4e0d\u6807\u51c6\u3002\n### \u9898\u76ee\u6982\u8981\n\u7ed9\u5b9a\u4e00\u4e2a\u7535\u8def\uff0c\u5176\u4e2d\u6709$n$\u4e2a\u63a5\u7ebf\u67f1\u548c$m$\u4e2a\u7535\u963b\uff0c\u5176\u4e2d\u963b\u503c\u53ea\u6709$0$\u548c$1\\Omega$\u4e24\u79cd\u60c5\u51b5\u3002\u6211\u4eec\u9700\u8981\u6c42\u51fa\u6574\u4e2a\u7535\u8def\u4ece\u63a5\u7ebf\u67f1$1$\u5230\u63a5\u7ebf\u67f1$n$\u7684**\u7b49\u6548\u7535\u963b\u503c**\u3002  \n### \u9898\u76ee\u5206\u6790\n\u89c2\u5bdf\u9898\u76ee\u63cf\u8ff0\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u56db\u4e2a\u89c4\u5219\uff1a\n 1. \u7535\u8def\u53ea\u7531\u5bfc\u7ebf\u548c\u963b\u503c\u4e3a1\u7684\u7535\u963b\u7ec4\u6210\u3002\n 2. \u4fdd\u8bc1\u7535\u8def**\u4ece\u5de6\u5230\u53f3\u8fde\u63a5**\uff0c\u4fdd\u8bc1\u7ed9\u51fa\u7684\u4e24\u4e2a\u63a5\u70b9x\u548cy\u7b26\u5408x<y\u3002\n 3. \u4fdd\u8bc1\u63a5\u7ebf\u67f1$1$\u4e3a**\u7535\u6e90\u6b63\u6781**\uff0c\u63a5\u7ebf\u67f1$n$\u4e3a**\u7535\u6e90\u8d1f\u6781**\u3002\n 4. \u4fdd\u8bc1\u6bcf\u4e2a\u63a5\u7ebf\u67f1\u53ea\u4f1a**\u88ab\u4e32\u8054**\u6216\u8005**\u5e76\u8054\u4e24\u4e2a\u5206\u652f\u7535\u8def**\u6216\u8005\u4e0d\u63a5\u4efb\u4f55\u7535\u7ebf\u6216\u7535\u963b\u3002  \n    \n\u770b\u5230\u4ee5\u4e0a\u6761\u4ef6\u4e0d\u96be\u5f97\u5230\uff0c**\u4efb\u610f\u4e00\u4e2a\u7535\u963b\u6216\u5bfc\u7ebf\u4e0a\u7684\u7535\u6d41\u4e00\u5b9a\u662f\u4ece\u63a5\u7ebf\u67f1x\u6d41\u5411\u63a5\u7ebf\u67f1y\u7684**\u3002\u518d\u89c2\u5bdf\u9898\u76ee\u80cc\u666f\u4e2d\u7684\u4fe1\u606f\uff0c\u753b\u51fa\u56fe\u6765\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u4efb\u4f55\u4e00\u4e2a\u63a5\u7ebf\u67f1\u7684\u51fa\u5ea6\u90fd\u4e0d\u5927\u4e8e2\u3002\u90a3\u4e48\u4ee5\u7535\u6d41\u65b9\u5411\u4e3a\u6709\u5411\u56fe\u7684\u65b9\u5411\uff0c\u4ee5\u63a5\u7ebf\u67f1\u4e3a\u8282\u70b9\uff0c\u4ee5\u8fb9\u4e3a\u7535\u963b\u6216\u5bfc\u7ebf\u5efa\u7acb\u51fa\u4e00\u4e2a\u6709\u5411\u56fe\uff08\u6839\u636e\u9898\u76ee\u63cf\u8ff0\uff0c\u56fe\u4e2d\u4e00\u5b9a\u6ca1\u6709\u73af\uff09\u3002 \n\n------------\n\n### \u9898\u89e3\u90e8\u5206\n\u6211\u4eec\u8003\u8651\u4f7f\u7528\u9012\u5f52\u65b9\u5f0f\u5408\u5e76**\u5f53\u524d\u63a5\u7ebf\u67f1\u8fde\u63a5\u7684\u5b50\u7535\u8def**\u4e3a\u4e00\u4e2a\u7b49\u6548\u7535\u963b\uff0c\u7136\u540e\u5c06\u4e24\u4e2a\u7535\u963b\u5408\u5e76\u4e3a\u4e00\u4e2a\u7535\u963b\u3002\n## \u5efa\u56fe\n\u9996\u5148\u8fd8\u662f\u7ed9\u51fa\u7ed3\u6784\u4f53\u7684\u4ee3\u7801\u5427\uff1a\n```cpp\nstruct Link { // \u4e00\u4e2a\u7535\u963b\u8fde\u63a5\n    int to; // \u8fde\u63a5\u5230\u7684\u63a5\u7ebf\u67f1\u7f16\u53f7\n    double r; // \u963b\u503c\n};\nstruct Node { // \u4e00\u4e2a\u63a5\u7ebf\u67f1\n    int linkCount = 0;\n    Link links[2];\n} node[100005];\n```\n\u5efa\u56fe\u90e8\u5206\u4ee3\u7801\u5c06\u5728\u6700\u540e\u7ed9\u51fa\u3002\n## \u5408\u5e76\u7535\u963b\n\u8fd9\u91cc\u662f\u6700\u96be\u4e5f\u6700\u6838\u5fc3\u7684\u90e8\u5206\u4e86\uff0c\u6211\u4eec\u5148\u8bbe\u8ba1\u51fa\u4e00\u4e2a\u53ef\u80fd\u7684\u51fd\u6570\u539f\u578b\uff1a\n```cpp\nvoid mergeSubcricut(int p, int e)\n```\n\u5176\u4e2d\u201c\u63a5\u7ebf\u67f1p\u201d\u4e3a\u6211\u4eec\u8981\u5408\u5e76\u7684**\u7535\u8def\u7684\u6b63\u6781**\uff0c\u201c\u63a5\u7ebf\u67f1e\u201d\u4e3a**\u7535\u8def\u7684\u8d1f\u6781**\u3002\u6211\u4eec\u5c31\u5148\u5047\u8bbe\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u628a\u201c\u63a5\u7ebf\u67f1p\u201d\u5230\u201c\u63a5\u7ebf\u67f1e\u201d\u4e2d\u95f4\u7684\u7535\u8def\u5408\u5e76\u6210\u4e00\u4e2a\u7b49\u6548\u7535\u963b\u3002  \n### \u4e32\u8054\n![\u4e32\u8054\u7535\u8def\u793a\u610f\u56fe](https://cdn.luogu.com.cn/upload/image_hosting/v9do1go3.png)  \n\u5728\u8fd9\u91cc\u201c\u5b50\u7535\u8defa\u201d\uff08\u8fd9\u91cc\u786e\u5b9a\u662f\u4e00\u4e2a\u7535\u963b\u6216\u5bfc\u7ebf\uff09\u4e0e\u201c\u5b50\u7535\u8defb\u201d\uff08\u53ef\u80fd\u662f\u590d\u5408\u7535\u8def\uff09\u4e32\u8054\u3002\u201c\u5b50\u7535\u8defa\u201d\u7684\u963b\u503c\u5df2\u77e5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u518d**\u5408\u5e76\u201c\u5b50\u7535\u8defb\u201d** \u4e3a\u4e00\u4e2a\u7b49\u6548\u7535\u963b\u5373\u53ef\u3002  \n```cpp\nif(node[p].linkCount == 1) {\n        // \u5982\u679c\u4e0b\u4e00\u4e2a\u662fe\uff08\u7ec8\u70b9\uff09\uff0c\u6211\u4eec\u5c31\u8fd4\u56de\n        if(node[p].links[0].to == e) return;\n        // \u9012\u5f52\u5408\u5e76\u4e0b\u4e00\u4e2a\u63a5\u7ebf\u67f1\u7684\u5b50\u7535\u8def\n        mergeSubcricut(node[p].links[0].to, e);\n        // \u4e0b\u4e00\u4e2a\u63a5\u7ebf\u67f1\u7684\u5b50\u7535\u8def\u5df2\u7ecf\u88ab\u5408\u5e76\u6210\u4e86\u4e00\u4e2a\u7535\u963b\n        // \u8ba1\u7b97\u4e24\u6bb5\u7684\u7535\u963b\uff0c\u5e76\u5408\u5e76\u4e24\u4e2a\u7535\u963b\n        node[p].links[0].r += node[node[p].links[0].to].links[0].r;\n        node[p].links[0].to = node[node[p].links[0].to].links[0].to;\n    }\n```\n\u5408\u5e76\u5b8c\u6210\u540e\uff0c\u5c06\u4e24\u4e2a\u7535\u8def\u7684\u7535\u963b\u76f8\u52a0\uff0c\u5373\u4e3a\u201c\u63a5\u7ebf\u67f1p\u201d\u5230\u201c\u63a5\u7ebf\u67f1e\u201d\u7684**\u7b49\u6548\u7535\u963b\u963b\u503c**\u3002  \n\n\u5982\u679c\u201c\u63a5\u7ebf\u67f1p\u201d\u7684\u4e0b\u4e00\u4e2a\u63a5\u7ebf\u67f1\u5c31\u662f\u201c\u63a5\u7ebf\u67f1e\u201d\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e2d\u95f4\u4e00\u6bb5\u7684\u7535\u8def\u5df2\u7ecf\u88ab\u5408\u5e76\u6210\u4e86\u4e00\u4e2a\u7b49\u6548\u7535\u963b\u4e86\uff0c\u4e0d\u9700\u8981\u5408\u5e76\u4e86\uff0c\u6b64\u65f6\u5e94\u76f4\u63a5\u8fd4\u56de\u3002\n\n### \u5e76\u8054\n![\u5e76\u8054](https://cdn.luogu.com.cn/upload/image_hosting/72lxuhyp.png)  \n\n\u8fd9\u79cd\u60c5\u51b5\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6211\u4eec\u9700\u8981\u5206\u522b\u5408\u5e76\u201c\u5b50\u7535\u8defa2\u201d\u548c\u201c\u5b50\u7535\u8defb2\u201d\uff0c\u4f46\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u4e24\u8005\u7684**\u6c47\u805a\u70b9\u5e76\u4e0d\u5728\u201c\u63a5\u7ebf\u67f1e\u201d\u4e0a**\u3002\n\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c31\u9700\u8981**\u83b7\u53d6\u5230\u83b7\u53d6\u5230\u5e76\u8054\u7535\u8def\u7684\u6c47\u70b9**\uff08\u5047\u5b9a\u4e3a\u201c\u63a5\u7ebf\u67f1ep\u201d\uff09\uff0c\u7136\u540e\u5355\u72ec\u628a\u201c\u5b50\u7535\u8defa2\u201d\u5230\u201c\u63a5\u7ebf\u67f1ep\u201d\u7684\u90e8\u5206\u548c\u201c\u5b50\u7535\u8defb2\u201d\u5230\u201c\u63a5\u7ebf\u67f1ep\u201d\u7684\u90e8\u5206\u8dd1\u4e00\u904d\u5408\u5e76\u3002\u56e0\u4e3a\u7f16\u53f7\u5927\u7684\u4e00\u5b9a\u5728\u7f16\u53f7\u5c0f\u7684\u63a5\u7ebf\u67f1\u7684\u524d\u9762\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83\u6df1\u5ea6\u6765\u6bd4\u8f83\u4e24\u4e2a\u70b9\u7684\u201c\u6df1\u5ea6\u201d\u3002\n```cpp\nint endPoint(int a, int b) {\n    // printf(\"Finding End Point of %d %d\\n\", a, b);\n    // \u7531\u4e8e\u7f16\u53f7\u5927\u7684\u4e00\u5b9a\u5728\u53f3\u8fb9\uff0c\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83\u7f16\u53f7\u627e\u5230\u4e24\u4e2a\u70b9\u5f80\u540e\u8d70\u7684\u7ec8\u7ed3\u70b9\n    while (a != b) {\n        if(a > b) {\n            b = node[b].links[0].to;\n        } else {\n            a = node[a].links[0].to;\n        }\n    }\n    return a;\n}\n```\n\n\u5408\u5e76\u540e\u7684\u60c5\u51b5\u5982\u4e0b\uff1a\n\n![\u7b2c\u4e00\u6b21\u5408\u5e76\u540e](https://cdn.luogu.com.cn/upload/image_hosting/99c19rdt.png)  \n\n\u8fd9\u91cc\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u628a\u201c\u5b50\u7535\u8defa1,a2\u201d\u548c\u201c\u5b50\u7535\u8defb1,b2\u201d**\u5206\u522b\u5408\u5e76\u6210\u4e24\u4e2a\u7b49\u6548\u7535\u963b**\u4e86\uff0c\u5408\u5e76\u540e\u6839\u636e\u521d\u4e2d\u7684\u5e76\u8054\u7535\u8def\u8ba1\u7b97\u516c\u5f0f\u8ba1\u7b97\u5373\u53ef\uff1a\n$$\nR=\\frac{R_1R_2}{R_1+R_2}\n$$\n\u5408\u5e76\u540e\u7684\u56fe\u50cf\u5982\u4e0b\uff1a\n\n![\u7b2c\u4e8c\u6b21\u5408\u5e76\u540e](https://cdn.luogu.com.cn/upload/image_hosting/jn8kzyqx.png)  \n\u8fd9\u91cc\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c**\u6574\u4e2a\u7535\u8def\u53d8\u6210\u548c\u4e32\u8054\u4e00\u6837\u7684\u60c5\u51b5\u4e86\uff01**  \n\n\u65e2\u7136\u8fd9\u6837\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u6267\u884c\u5b8c\u4ee5\u4e0a\u5408\u5e76\u6d41\u7a0b\u540e\uff0c\u91cd\u65b0\u8dd1\u4e00\u904d\u4ece\u201c\u63a5\u7ebf\u67f1p\u201d\u5230\u201c\u63a5\u7ebf\u67f1e\u201d\u7684\u5408\u5e76\u5373\u53ef\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e00\u90e8\u5206\u7535\u8def\u5408\u5e76\u6210\u4e00\u4e2a\u7b49\u6548\u7535\u963b\u4e86\u3002  \n\n\u81f3\u6b64\uff0c\u6240\u6709\u7684\u51fd\u6570\u6267\u884c\u5de5\u4f5c\u5c31\u7ed3\u675f\u4e86\uff0c\u5728\u6784\u5efa\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7528\u8fd9\u4e2a\u51fd\u6570\u5c06\u6574\u4e2a\u7535\u8def\u5408\u5e76\u6210\u4e00\u4e2a\u7535\u963b\uff1a\n```cppn\nmergeSubcricut(1, n);\n```\n\u6700\u540e\u8f93\u51fa\u8fd9\u4e2a\u7b49\u6548\u7535\u963b\u7684\u963b\u503c\u5373\u53ef\u3002\n\n\u6240\u6709\u7684\u5185\u5bb9\u7684\u5177\u4f53\u7684\u5b9e\u73b0\u4ee3\u7801\u5728\u8fd9\u91cc\u7ed9\u51fa\uff1a\n## AC\u4ee3\u7801\n```cpp\n/* Headers */\n#include <cstdio>\n#include <iostream>\n#include <vector>\n#include <list>\nusing namespace std;\n/* Type and variables */\nint n, m;\nstruct Link { // \u4e00\u4e2a\u7535\u963b\u8fde\u63a5\n    int to;\n    double r; // \u7535\u963b\n};\nstruct Node { // \u4e00\u4e2a\u63a5\u7ebf\u67f1\n    int linkCount = 0;\n    Link links[2];\n} node[100005];\n/* Functions */\n\nint endPoint(int a, int b) {\n    // printf(\"Finding End Point of %d %d\\n\", a, b);\n    // \u7531\u4e8e\u7f16\u53f7\u5927\u7684\u4e00\u5b9a\u5728\u53f3\u8fb9\uff0c\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83\u7f16\u53f7\u627e\u5230\u4e24\u4e2a\u70b9\u5f80\u540e\u8d70\u7684\u7ec8\u7ed3\u70b9\n    while (a != b) {\n        if(a > b) {\n            b = node[b].links[0].to;\n        } else {\n            a = node[a].links[0].to;\n        }\n    }\n    return a;\n}\n// \u5408\u5e76\u4ecep\u5230e\u7684\u5b50\u7535\u8def\nvoid mergeSubcricut(int p, int e) {\n    if(p == e) return; // \u540c\u4e00\u4e2a\u63a5\u7ebf\u67f1\u5c31\u4e0d\u9700\u8981\u5408\u5e76\u4e86\n    if(node[p].linkCount == 1) {\n        // \u5982\u679c\u4e0b\u4e00\u4e2a\u662fe\uff08\u7ec8\u70b9\uff09\uff0c\u6211\u4eec\u5c31\u8fd4\u56de\n        if(node[p].links[0].to == e) return;\n        // \u9012\u5f52\u5408\u5e76\u4e0b\u4e00\u4e2a\u63a5\u7ebf\u67f1\u7684\u5b50\u7535\u8def\n        mergeSubcricut(node[p].links[0].to, e);\n        // \u4e0b\u4e00\u4e2a\u63a5\u7ebf\u67f1\u7684\u5b50\u7535\u8def\u5df2\u7ecf\u88ab\u5408\u5e76\u6210\u4e86\u4e00\u4e2a\u7535\u963b\n        // \u8ba1\u7b97\u4e24\u6bb5\u7684\u7535\u963b\uff0c\u5e76\u5408\u5e76\u4e24\u4e2a\u7535\u963b\n        node[p].links[0].r += node[node[p].links[0].to].links[0].r;\n        node[p].links[0].to = node[node[p].links[0].to].links[0].to;\n    } else if(node[p].linkCount == 2) {\n        int subEnd = endPoint(node[p].links[0].to, node[p].links[1].to);\n        // \u5206\u522b\u9012\u5f52\u5408\u5e76\u4e0b\u9762\u4e24\u4e2a\u63a5\u7ebf\u67f1\u7684\u5b50\u7535\u8def\n        mergeSubcricut(node[p].links[0].to, subEnd);\n        mergeSubcricut(node[p].links[1].to, subEnd);\n        // \u4e0b\u4e24\u4e2a\u63a5\u7ebf\u67f1\u7684\u5b50\u7535\u8def\u5df2\u7ecf\u88ab\u5408\u5e76\u6210\u4e86\u4e24\u4e2a\u7535\u963b\n        node[p].links[0].r += node[node[p].links[0].to].links[0].r;\n        node[p].links[0].to = node[node[p].links[0].to].links[0].to;\n        node[p].links[1].r += node[node[p].links[1].to].links[0].r;\n        node[p].links[1].to = node[node[p].links[1].to].links[0].to;\n        node[p].linkCount = 1;\n        // \u8ba1\u7b97\u7535\u963b\n        node[p].links[0].r = (node[p].links[0].r * node[p].links[1].r) / (node[p].links[0].r + node[p].links[1].r);\n        // \u8003\u8651\u4e24\u4e2a\u7535\u963b\u963b\u503c\u90fd\u4e3a0\u7684\u60c5\u51b5\n        if(node[p].links[0].r + node[p].links[1].r < 0.0000001)\n            node[p].links[0].r = 0.0;\n        mergeSubcricut(p, e);\n    }\n}\n/* Main */\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    for(int i = 1; i <= m; i++) {\n        int u, v; double r;\n        scanf(\"%d%d%lf\", &u, &v, &r);\n        node[u].links[node[u].linkCount++] = {v, r};\n    }\n    mergeSubcricut(1, n); // \u5408\u5e76\u4ece1\u5230n\u7684\u7535\u8def\n    printf(\"%.3f\", node[1].links[0].r);\n    return 0;\n}\n```\n",
        "postTime": 1606283336,
        "uid": 227947,
        "name": "\u4e03\u78b3\u70f7\u70c3",
        "ccfLevel": 4,
        "title": "P3617 \u7535\u963b\u7f51\u7edc"
    },
    {
        "content": "```cpp\n//\u539f\u9898\u89e3\u5b9e\u5728\u770b\u4e0d\u4e0b\u53bb\u4e86\uff0c\u6253\u4e86\u5f88\u4e45\u7684\u7a0b\u5e8f\u4e86\uff0c\u5f88\u591a\u90fd\u5fd8\u4e86\uff0c\u4e5f\u61d2\u5f97\u518d\u770b\u4e86\uff0c\u6c42\u539f\u8c05\u2026\u2026\n//AC\u4ee3\u7801\u5982\u4e0b\n//\u6ca1\u6709\u4efb\u4f55\u4f18\u5316\uff0c\u5927\u4f6c\u52ff\u55b7\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n,m;\nint count;\nint p[120001][3][2];\nint pc[120001];\nint r[120001];\ndouble ans[120001];\nint same(int a,int b)//\u627e\u5e76\u8054\u7684\u7ed3\u675f\u70b9\n{\n\tdo\n\t{\n\t\tif(a<b) \n\t\t\tb=p[b][1][1];\n\t\telse a=p[a][1][1];\n\t}while(a!=b);\n\treturn a;\n}\ndouble cal(int num)//\u8001\u5e08\u5427\u8fd9\u9053\u9898\u653e\u5728\u9012\u5f52\u8bad\u7ec3\u91cc\u8ba9\u6211\u4eec\u505a\u7684 \u6240\u4ee5\u2026\u2026\n{\n\tif(ans[num]) return ans[num];\n\tif(pc[num]>1)\n\t{\n\t\tint samep=same(p[num][1][1],p[num][2][1]);\n\t\tans[num]=1.0/(1.0/(cal(p[num][1][1])-cal(samep)+p[num][1][0])+1.0/(cal(p[num][2][1])-cal(samep)+p[num][2][0]))+cal(samep);\n\t\treturn ans[num];\n\t}\n\telse if(pc[num])\n\t{\n\t\tans[num]=cal(p[num][1][1])+p[num][1][0];\n\t\treturn ans[num];\n\t}\n\telse return ans[num]=0;\n}\n\nint main()\n{\n\t//freopen(\"testdata.in\",\"r\",stdin);\n\tint temp1,temp2,tempr;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&temp1,&temp2,&tempr);\n\t\tp[temp2][++pc[temp2]][0]=tempr;\n\t\tp[temp2][pc[temp2]][1]=temp1;\n\t}\n\tprintf(\"%.3lf\",cal(n));\n\t//for(int i=1;i<=n;i++)cout<<ans[i]<<' '<<pc[i]<<endl;\n}\n```",
        "postTime": 1553413735,
        "uid": 131735,
        "name": "Jade_Lover",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3617 \u3010\u7535\u963b\u7f51\u7edc\u3011"
    },
    {
        "content": "\u8bb0 $work(s,t)$ \u8868\u793a\u4ece $s$ \u5230 $t$ \u7684\u7535\u963b\u3002\n\n\u9996\u5148\u5c06\u539f\u56fe\u4e2d\u65e0\u6cd5\u5230\u8fbe $n$ \u7684\u70b9\u548c\u4e0e\u5176\u5173\u8054\u7684\u8fb9\u5220\u6389\u3002\n\n\u6839\u636e\u9898\u76ee\u6027\u8d28\uff0c\u6bcf\u4e2a\u70b9\u81f3\u591a\u4e24\u6761\u51fa\u8fb9\u3002\n\n\u5982\u679c $s$ \u53ea\u6709\u4e00\u6761\u51fa\u8fb9 $s\\to l$\uff0c\u6743\u503c\u4e3a $u$\uff0c\u90a3\u4e48 $work(s,t)=u+work(l,t)$\u3002\n\n\u5426\u5219\u82e5\u8fd8\u6709\u4e00\u6761\u51fa\u8fb9 $s\\to r$\uff0c\u6743\u503c\u4e3a $v$\uff0c\u90a3\u4e48\u6c42\u51fa $s\\to l$ \u548c $s\\to r$ \u76f8\u4ea4\u7684\u4f4d\u7f6e\u8bb0\u4e3a $o$\uff1a\n\n$$work(s,t)=\\dfrac{1}{\\dfrac{1}{work(l,o)+u}+\\dfrac{1}{work(r,o)+v}}+work(o,t)$$\n\n\u73b0\u5728\u74f6\u9888\u662f\u5982\u4f55\u5feb\u901f\u6c42 $o$\u3002\n\n\u56e0\u4e3a\u8fd9\u9898\u6570\u636e\u968f\u673a\uff0c\u53ef\u4ee5\u66b4\u529b\u6c42\u3002\n\n\u6570\u636e\u4e0d\u968f\u673a\u600e\u4e48\u529e\uff1f\u500d\u589e\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+3;\nint l[N],r[N],u[N],v[N],d[N],f[N][19];\nint lca(int x,int y){\n\tint i;\n\tif(d[x]<d[y])swap(x,y);\n\tfor(i=18;~i;--i)if(d[f[x][i]]>=d[y])x=f[x][i];\n\tif(x==y)return x;\n\tfor(i=18;~i;--i)if(f[x][i]!=f[y][i])x=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\ndouble work(int s,int t){\n\tif(s==t||!d[s])return 0;\n\tif(!d[r[s]])return u[s]+work(l[s],t);\n\tint o=lca(l[s],r[s]);\n\treturn 1/(1/(work(l[s],o)+u[s])+1/(work(r[s],o)+v[s]))+work(o,t);\n}\nint main(){\n\tint n,m,i,j,k;\n\tscanf(\"%d%d\",&n,&m),d[n]=1;\n\twhile(m--)if(scanf(\"%d%d%d\",&i,&j,&k),!l[i])l[i]=j,u[i]=k;else r[i]=j,v[i]=k;\n\tfor(i=n-1;i;--i){\n\t\tif(!d[l[i]])l[i]=r[i],r[i]=0,u[i]=v[i];\n\t\tif(d[l[i]]){\n\t\t\td[i]=d[l[i]]+1,f[i][0]=l[i];\n\t\t\tfor(j=0;f[i][j];++j)f[i][j+1]=f[f[i][j]][j];\n\t\t}\n\t}\n\tprintf(\"%.3lf\",work(1,n));\n\treturn 0;\n}\n```\n",
        "postTime": 1619080351,
        "uid": 221955,
        "name": "panyf",
        "ccfLevel": 10,
        "title": "P3617 \u7535\u963b\u7f51\u7edc\uff08\u7b80\u5355\u9012\u5f52 + \u500d\u589e\uff09"
    },
    {
        "content": "# \u9898\u89e3  \n\u5728\u9898\u76ee\u5217\u8868\u91cc\u641c\u7f51\u7edc\u6d41\u7684\u65f6\u5019\u770b\u5230\u8fd9\u9053\u9898\uff0c\u987a\u4fbf\u5c31\u5199\u4e86\u3002\u3002\u3002  \n~~\u7ed3\u679c\u4e0d\u662f\u7f51\u7edc\u6d41~~  \n\n\n\u9898\u610f\u633a\u7b80\u5355\u7684\uff0c\u5c31\u662f\u4e00\u4e2a\u7535\u963b\u7535\u8def\uff0c\u6c42\u89e3\u7535\u963b\u3002  \n\n\u5176\u5b9e\u9898\u76ee\u5df2\u7ecf\u7ed9\u4e86\u5f88\u591a\u7b80\u5316\u6761\u4ef6\u4e86~~\u6570\u636e\u4e5f\u6bd4\u8f83\u6c34~~\uff0c\u770b\u4e86\u4e00\u4f1a\u513f\u4e5f\u80fd\u60f3\u5230\u89e3\u6cd5\u3002  \n\n\u9996\u5148\u9898\u76ee\u4e2d\u9650\u5236\u4e86\u53ea\u6709\u4e00\u5c42\u5e76\u8054\uff0c\u4e8e\u662f\u53ef\u4ee5\u5206\u522b\u8ba1\u7b97\u4e24\u4e2a\u5b50\u7535\u8def\u7684\u963b\u503c\uff0c\u7136\u540e\u603b\u963b\u503c\u5c31\u662f$\\frac{R_1R_2}{R_1+R_2}$\u3002  \n\n\u53ef\u4ee5\u7528$get(x, y)$\u8ba1\u7b97$x$\u70b9\u5230$y$\u70b9\u7684\u963b\u503c\uff0c\u9012\u5f52\u6d41\u7a0b\u5c31\u662f\u6cbf\u7740\u7535\u8def\u5f80\u540e\u8d70\uff0c\u5982\u679c\u662f\u4e32\u8054\uff08\u51fa\u5ea6\u4e3a1\uff09\uff0c\u5c31\u52a0\u4e0a\u8fd9\u6761\u5bfc\u7ebf\uff08\u7535\u963b\uff09\u7684\u963b\u503c\uff0c\u7136\u540e\u5f80\u540e\u8d70\u4e00\u683c\u3002  \n\n\u5982\u679c\u9047\u5230\u5e76\u8054\u7535\u8def\uff0c\u5c31\u9884\u5148\u627e\u51fa\u5e76\u8054\u7535\u8def\u7684\u6c47\u5408\u70b9$k$\uff0c\u7136\u540e\u5206\u522b\u6cbf\u7740\u4e24\u6761\u5bfc\u7ebf\u8d70\u4e00\u6b65\u5230\u8fbe$x_1,y_1$\u7136\u540e$R_1 = get(x_1, k), R_2 = get(x_2, k)$\u3002\u7136\u540e\u518d\u76f4\u63a5\u8df3\u5230\u6c47\u5408\u70b9\u5c31\u884c\u4e86\u3002  \n\n\u5982\u4f55\u627e\u51fa\u6c47\u5408\u70b9\u5462\uff0c\u6211\u662f\u91c7\u7528\u4e86\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff0c\u6bcf\u6b21\u53d6\u51fa\u7f16\u53f7\u5c0f\u7684\u70b9\u8fdb\u884c\u62d3\u5c55\uff0c\u91cd\u590d\u70b9\u4e0d\u62d3\u5c55\uff0c\u5982\u679c\u53ea\u5269\u4e00\u4e2a\u70b9\u8bf4\u660e\u662f\u6c47\u5408\u70b9\u3002\n\n\u6309\u7406\u8bf4\u6211\u8fd9\u4e2a\u590d\u6742\u5ea6\u6700\u574f\u5e94\u8be5\u6709$O(n^2logn)$\uff0c\u4f46\u662f\u53ef\u80fd\u6570\u636e\u6c34\u4e86\u6216\u8005\u6709\u67d0\u79cd\u6570\u5b66\u5173\u7cfb\u5bfc\u81f4\u8fbe\u4e0d\u5230\u8fd9\u4e2a\u590d\u6742\u5ea6\uff0c\u53cd\u6b63\u7b97\u6cd5\u590d\u6742\u5ea6\u5c31\u662f$O(\u80fd\u8fc7)$\u3002  \n# \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n#define int int\n#define Mid ((l + r) >> 1)\n#define lson (rt << 1)\n#define rson (rt << 1 | 1)\nusing namespace std;\nint read(){\n\tchar c; int num, f = 1;\n\twhile(c = getchar(),!isdigit(c)) if(c == '-') f = -1; num = c - '0';\n\twhile(c = getchar(), isdigit(c)) num = num * 10 + c - '0';;\n\treturn f * num;\n}\nconst int N = 2e5 + 1009;\nint in[N], out[N], n, m;\nint head[N], nxt[N], ver[N], edge[N], tot = 1;\nvoid add(int x, int y, int w){\n\tin[y]++; out[x]++;\n\tver[++tot] = y; nxt[tot] = head[x]; head[x] = tot; edge[tot] = w;\n}\nint vis[N];\npriority_queue<int>q;\nint getend(int qwq){\n\tfor(int i = head[qwq]; i; i = nxt[i])if(!vis[ver[i]]){\n\t\tq.push(-ver[i]);\n\t\tvis[ver[i]] = 1;\n\t}\n\twhile(q.size() != 1){\n\t\tint x = -q.top(); q.pop(); vis[x] = 0;\n\t\tfor(int i = head[x]; i; i = nxt[i]){\n\t\t\tif(!vis[ver[i]]){\n\t\t\t\tvis[ver[i]] = 1;\n\t\t\t\tq.push(-ver[i]);\n\t\t\t}\n\t\t}\n\t}\n\tint x = -q.top(); q.pop();\n\tvis[x] = 0;\n\treturn x;\n}\ndouble get(int s, int t){\n\tdouble sum = 0, t1, t2;\n\tint j, i;\n\ti = s;\n\twhile(i != t){\n\t\tif(out[i] == 1){\n\t\t\tsum += edge[head[i]];\n\t\t\ti = ver[head[i]];\n\t\t}else if(out[i] == 2){\n\t\t\tj = getend(i);\n\t\t\tt1 = get(ver[head[i]], j) + edge[head[i]];\n\t\t\tt2 = get(ver[nxt[head[i]]], j) + edge[nxt[head[i]]];\n\t\t\tsum += t1 * t2 / (t1 + t2);\n\t\t\ti = j;\n\t\t}\n\t}\n\treturn sum;\n}\nmain()\n{\n\tn = read(); m = read();\n\tfor(int i = 1; i <= m; i++){\n\t\tint x = read(), y = read(), w = read();\n\t\tadd(x, y, w);\n\t}\n\tprintf(\"%.3f\\n\", get(1, n));\n\treturn 0;\n}\n```",
        "postTime": 1608831859,
        "uid": 66548,
        "name": "onglu",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3617 \u3010\u7535\u963b\u7f51\u7edc\u3011"
    },
    {
        "content": "\u5206\u6cbb+\u6a21\u62df\n\n\n\u6a21\u62df\u4e00\u4e0b\u603b\u7535\u963b\u7684\u8ba1\u7b97\u65b9\u5f0f\u5c31\u884c\uff0c\u9047\u5230\u5e76\u8054\u7684\u5c31\u8fdb\u5165\u4e0b\u4e00\u5c42\u9012\u5f52\uff0c\u7535\u8def\u53ef\u80fd\u77ed\u8def\uff0c\u5373\u51fa\u73b0\u7535\u963b\u4e3a0\n",
        "postTime": 1488139787,
        "uid": 681,
        "name": "worcher",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3617 \u3010\u7535\u963b\u7f51\u7edc\u3011"
    }
]