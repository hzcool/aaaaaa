[
    {
        "content": "#### (\u6211\u4e0d\u77e5\u9053\u6211\u524d\u9762\u90a3\u4f4d\u54e5\u4eec\u600e\u4e48\u8dd1\u5230\u5982\u6b64\u5feb\u7684 \u6211\u731c\u4ed6\u662f\u6253\u8868\u8fc7\u7684\uff0c\u56e0\u4e3a\u4ec5\u6709\u7684\u4e00\u7bc7\u9898\u89e3\u6559\u5506\u4f60\u53bb\u6253\u8868\u3002\u3002\uff09\n\n\u8003\u8651\u4e8c\u5206\u56fe\u5339\u914d\u3002\u975e\u5e38\u8ff7\u7684\u4e00\u70b9\u662fDinic\u8dd1\u4e0d\u8fc7\u4f46\u662f\u5308\u7259\u5229\u53ef\u4ee5\u3002\n\n\u9996\u5148\u56e0\u4e3a\u659c\u884c\u4e0d\u597d\u505a\uff0c\u6240\u4ee5\u5904\u7406\u7684\u65f6\u5019\u628a\u68cb\u76d8\u8f6c45\u00b0\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/24174.png)\n\n\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u5355\u4f4d\uff0c\u5728\u539f\u6709\u7684\u653b\u51fb\u8303\u56f4\u5185\u6dfb\u52a0\u4e0a\u4e00\u4e2a`Bishop`\u7684\u653b\u51fb\u8303\u56f4\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u5f97\u6bcf\u4e2a\u5355\u4f4d\u90fd\u4e0d\u88ab\u5b83\u653b\u51fb\u3002\n\n\u7136\u540e\u5224\u5b9a\u54ea\u4e9b\u683c\u5b50\u4e0d\u4f1a\u88ab\u653b\u51fb\u5230\uff0c\u53ef\u4ee5\u4e8c\u5206\u56fe\u5339\u914d\u4e86\u3002\n\n\u5efa\u4e8c\u5206\u56fe\u7684\u65f6\u5019\u628a\u5750\u6807\u8f6c\u6362\u4e3a\u8f6c45\u00b0\u4e4b\u540e\u7684\u56fe\u518d\u5efa\u56fe\u3002\u884c\u5217\u5339\u914d\u3002\n\n\u4ee3\u7801\u5199\u7684\u5f88\u597d\u61c2\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<iterator>\n#include<queue>\n#include<cmath>\n#include<vector>\n#include<cstdlib>\nusing namespace std;\n\nstruct ed\n{\n    int pre,to;\n}edge[1000010]={0,0};\nint at=1,ptr[10010]={0},matchs[10010],vis[10010],ansf;\n\nint n,m,mapsiz;\nchar mapx[2200][2200]={0};\nbool av[2200][2200]={0},l[2200]={0},h[2200]={0};\nint pau[2200][2]={0};\n\nint wx[8]={0,-1,-1,-1,0,1,1,1},wy[8]={-1,-1,0,1,1,1,0,-1};\nint KX[8]={-1,-2,-2,-1,1,2,2,1},KY[8]={-2,-1,1,2,2,1,-1,-2};\n\ninline void Insert(int fx,int tx)\n{\n    at++;\n\tedge[at].pre=ptr[fx];\n\tedge[at].to=tx;\n\tptr[fx]=at;\n}\n\ninline bool Find(int x,int src)\n{\n\tfor (int prex=ptr[x];prex;prex=edge[prex].pre) if (vis[edge[prex].to]!=src)\n\t{\n\t\tvis[edge[prex].to]=src;\n\t\tif (!matchs[edge[prex].to] || Find(matchs[edge[prex].to],src)) { matchs[edge[prex].to]=x; return true; }\n\t}\n\treturn false;\n}\n\ninline void BuildG()\n{\n\tint _x,_y;\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=m;j++) if (!av[i][j])\n\t\t{\n\t\t\t_x=pau[i][0]+j-1; _y=pau[i][1]+j-1;\n\t\t\tif ((!h[_x]) && (!l[_y])) Insert(_x,_y+mapsiz);\n\t\t}\n}\n\ninline void GoB(int _x,int _y)\n{\n\tav[_x][_y]=true;\n\tint i=pau[_x][0]+_y-1,j=pau[_x][1]+_y-1;\n\th[i]=true; l[j]=true;\n}\ninline void GoK(int _x,int _y)\n{\n\tGoB(_x,_y);\n\tfor (int w=0;w<=7;w++) av[_x+wx[w]][_y+wy[w]]=true;\n}\ninline void GoQ(int _x,int _y)\n{\n\tint wayx[4]={0,-1,0,1},wayy[4]={-1,0,1,0};\n\tGoB(_x,_y);\n\tfor (int w=0;w<=3;w++) for (int i=1;;i++)\n\t{\n\t\tif (mapx[_x+wayx[w]*i][_y+wayy[w]*i]!='.') break;\n\t\tav[_x+wayx[w]*i][_y+wayy[w]*i]=true;\n\t}\n}\ninline void GoN(int _x,int _y)\n{\n\tGoB(_x,_y);\n\tfor (int w=0;w<=7;w++) if (_x+KX[w]>0 && _y+KY[w]>0) av[_x+KX[w]][_y+KY[w]]=true;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);mapsiz=2*max(n,m)-1;\n\tfor (int i=1;i<=n;i++) scanf(\"%s\",mapx[i]+1);\n\t\n\tpau[1][0]=1; pau[1][1]=m;\n\tfor (int i=2;i<=n;i++) { pau[i][0]=pau[i-1][0]+1; pau[i][1]=pau[i-1][1]-1; }\n\t\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=m;j++)\n\t\t{\n\t\t\tif (mapx[i][j]=='.') continue;\n\t\t\tswitch (mapx[i][j])\n\t\t\t{\n\t\t\t\tcase 'K':\n\t\t\t\t\tGoK(i,j);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Q':\n\t\t\t\t\tGoQ(i,j);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'R':\n\t\t\t\t\tGoQ(i,j);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tGoB(i,j);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'P':\n\t\t\t\t\tGoB(i,j);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'N':\n\t\t\t\t\tGoN(i,j);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\n\tBuildG();\n\tfor (int i=1;i<=mapsiz;i++) ansf+=Find(i,i);\n\tprintf(\"%d\\n\",ansf);\n\treturn 0;\n}\n```",
        "postTime": 1531916848,
        "uid": 21512,
        "name": "GNAQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3882 \u3010[JLOI2008]\u5c06\u519b\u3011"
    },
    {
        "content": "[2022-08-29] \u66f4\u6b63[frankly6](https://www.luogu.com.cn/user/223058)\u63d0\u51fa\u7684\u9519\u8bef\uff0c\u5728\u6b64\u8868\u8fbe\u611f\u8c22\u3002\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P3882)\n# \u524d\u7f6e\u77e5\u8bc6\t\n[P2825 [HEOI2016/TJOI2016]\u6e38\u620f](https://www.luogu.com.cn/problem/P2825)\n\u6ce8\uff1a\u672c\u9898\u505a\u6cd5\u4e0e\u4e0a\u9898\u505a\u6cd5**\u7c7b\u4f3c**\u3002\n\u7528\u5230\u7684\u7b97\u6cd5\uff1a\n- \u56fe\u8bba\u2014\u2014\u4e8c\u5206\u56fe\u2014\u2014\u5308\u7259\u5229\u7b97\u6cd5\uff08\u6700\u5927\u5339\u914d\uff09\n- \u5efa\u8fb9\u2014\u2014\u94fe\u5f0f\u524d\u5411\u661f\u3002\n# \u89e3\u9898\u601d\u8def\n\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u5728\u9898\u76ee\u7ed9\u5b9a\u7684\u68cb\u76d8\u4e0a\u80fd\u653e\u6700\u591a\u7684bishop\uff08\u8c61\uff09\u3002\n\u56e0\u4e3a\u8c61\u7684\u884c\u8d70\u8def\u7ebf\u4e3a\u5bf9\u89d2\u7ebf\uff08\u659c\u7ebf\uff09\uff0c\u4e0d\u597d\u5199\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u6574\u4e2a\u68cb\u76d8\u987a\u65f6\u9488\u65cb\u8f6c **45\u00b0** \uff08\u5982\u56fe\uff09\u3002\n![](https://img-blog.csdnimg.cn/d154d46febbd4f4082d1c3493b59e0d1.jpeg#pic_center)\n\u7531\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u539f\u5148\u68cb\u76d8\u7684\u5bf9\u89d2\u7ebf\u5728\u987a\u65f6\u9488\u65cb\u8f6c45\u00b0\u540e\u53d8\u6210\u4e86\u884c\u548c\u5217\u3002\n\u7531\u6b64\uff0c\u6211\u4eec\u8003\u8651**\u884c\u5217\u5339\u914d**\u3002\n### \u4e00\u3001\u8f93\u5165\n**\u8fd9\u91cc\u6709\u4e00\u4e2a\u5de8\u5751\u70b9\uff08\u4f5c\u8005\u8fd9\u4e2a\u849f\u84bb\u88ab\u8fd9\u4e2a\u4e1c\u897f\u5751\u4e86\u4e00\u5468\uff09\u3002**\n\u8f93\u5165\u539f\u68cb\u76d8\u65f6\uff0c**\u5efa\u8bae**\u4e00\u884c\u4e00\u884c\u7684\u8f93\u5165\u5e76\u4e14\u8f93\u5165\u6574\u4e2a\u68cb\u76d8\u540e\u518d\u8fdb\u884c\u64cd\u4f5c\uff0c\u5426\u5219**\u6709\u53ef\u80fd**\u201c\u542c\u53d6WA\u58f0\u4e00\u7247\u201d\u3002\n\n### \u4e8c\u3001\u5b58\u50a8\u65cb\u8f6c\u540e\u7684\u68cb\u76d8\n\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u7ed3\u6784\u4f53 $node$ \u3002\n\n```cpp\nstruct node{\n\tint xx,yy;\n\tint can; \n}a[2200][2200];\n```\n $a[i][j].xx$ \u8868\u793a\u5728\u539f\u68cb\u76d8\u4e2d $i$ \u884c $j$ \u5217\u7684\u683c\u5b50\u5728\u65cb\u8f6c\u540e\u4f4d\u4e8e $xx$ \u884c\u3002     \n $a[i][j].yy$ \u8868\u793a\u65cb\u8f6c\u540e\u4f4d\u4e8e $yy$ \u5217\u3002\n \n $can$ \u7684\u503c\u5206\u4e09\u79cd\uff1a\n -  $can$ = 0\n \t\u8be5\u70b9\u53ef\u4ee5\u653e\u7f6e\u8c61\uff0c\u4e14\u4e0d\u4f1a\u653b\u51fb\u5230\u68cb\u76d8\u4e0a\u539f\u6709\u68cb\u5b50\u3002\n -   $can$ = 1\n \t\u8be5\u70b9\u5df2\u6709\u68cb\u5b50\uff0c\u4e0d\u53ef\u653e\u7f6e\u8c61\uff0c\u4f1a\u963b\u6321**\u9664\u9a6c\u4ee5\u5916**\u7684\u653b\u51fb\u8303\u56f4\u3002\n -   $can$ = 2\n \t\u8be5\u70b9\u672a\u6709\u68cb\u5b50\uff0c\u4f46\u4e0d\u53ef\u653e\u7f6e\u8c61\uff0c\u5426\u5219\u4f1a\u653b\u51fb\u539f\u6709\u68cb\u5b50\u6216\u88ab\u539f\u6709\u68cb\u5b50\u653b\u51fb\uff0c\u4f46**\u4e0d\u963b\u6321\u4efb\u4f55\u68cb\u5b50\u7684\u653b\u51fb\u8303\u56f4**\u3002\n---\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u770b\u5177\u4f53\u5982\u4f55\u64cd\u4f5c\u3002\n ###### 1. \u65cb\u8f6c\u540e\u7684\u683c\u5b50\u4f4d\u7f6e\n\u6211\u4eec\u5047\u8bbe $n$ = 4 , $m$ = 5\u3002\n\u5148\u89c2\u5bdf\u539f\u68cb\u76d8\u683c\u5b50\u7684\u4f4d\u7f6e\u3002\n![](https://img-blog.csdnimg.cn/98ed7f06adc24664aeb107df0d5f3727.jpeg#pic_center)\n\u518d\u770b\u65cb\u8f6c\u540e\u683c\u5b50\u7684\u4f4d\u7f6e\u3002\n![](https://img-blog.csdnimg.cn/edf793f782a5448cb289ea3cb321837b.jpeg#pic_center)\n\u4e0d\u96be\u53d1\u73b0\uff0c\u68cb\u76d8\u65cb\u8f6c45\u00b0\u540e\uff0c\u539f\u4f4d\u7f6e\u4e3a $(i,j)$ \u7684\u683c\u65cb\u8f6c\u5230\u4e86 $(i+j-1,j+n-i)$  \u7684\u4f4d\u7f6e\u3002\n***\n\n###### 2.\u6807\u8bb0\u653b\u51fb\u8303\u56f4\n\u56fd\u9645\u8c61\u68cb\u4e2d\u4e00\u5171\u6709 6 \u79cd\u68cb\u5b50\uff1a\n`K` \u2013 king\uff08\u56fd\u738b\uff09\uff0c`Q` \u2013 queen\uff08\u7687\u540e\uff09\uff0c`B` \u2013 bishop\uff08\u8c61\uff0c\u6559\u4e3b\uff09\uff0c`N` \u2013 knight\uff08\u9a6c\u3001\u9a91\u58eb\uff09\uff0c`R` \u2013 rook\uff08\u8f66\uff09\uff0c`P` \u2013 pawn\uff08\u5175\uff09\u3002\n\n\u5728\u539f\u68cb\u76d8\u4e0a\uff0c\u68cb\u5b50\u7684\u653b\u51fb\u8303\u56f4\u5206\u522b\u5982\u4e0b\uff1a\n![\u653b\u51fb\u8303\u56f4](https://img-blog.csdnimg.cn/0ba139e25d704c509b44e87c1874d1a3.jpeg#pic_center)\n\u6211\u4eec\u5c06\u68cb\u5b50\u6240\u5728\u683c\u5b50\u7684 $can$ \u6807\u8bb0\u4e3a $1$ , \u5c06\u653b\u51fb\u8303\u56f4\u6807\u8bb0\u4e3a $2$ \u3002\n**\u6ce8\u610f\uff1a\u9664\u9a6c\uff08 knight \uff09\u4ee5\u5916\uff0c\u5176\u4ed6\u68cb\u5b50\u7684\u653b\u51fb\u8303\u56f4\u5747\u4f1a\u88ab\u68cb\u5b50\u963b\u6321**\u3002\n![\u653b\u51fb\u8303\u56f4\u88ab\u963b\u6321\u7684\u4f8b\u5b50](https://img-blog.csdnimg.cn/6d91d68cd1c24be9aafa924611316a80.jpeg#pic_center)\n\u5982\u4e0a\u56fe\uff0c\u8f66\uff08R\uff09\u7684\u653b\u51fb\u8303\u56f4\u88ab \u5175\uff08P\uff09 \u963b\u6321\uff0c\u65e0\u6cd5\u653b\u51fb\u5230\u7eff\u8272\u683c\u5b50\u3002\n\n~~\u4f60\u4ee5\u4e3a\u8fd9\u9053\u9898\u7684\u601d\u8def\u5230\u6b64\u5c31\u7ed3\u675f\u4e86\uff1f\u4e0d\uff0c\u8fd8\u6ca1\u6709\u3002~~ \n\u518d\u7ec6\u8bfb\u9898\u76ee\uff0c\u53d1\u73b0\u9898\u76ee\u6709\u8fd9\u6837\u4e00\u53e5\u8bdd\uff1a\n>\u4f60\u9700\u8981\u907f\u514d\u7684\u6709 2 \u79cd\u60c5\u51b5\uff1a \u4f60\u6446\u653e\u7684 bishop \u4e4b\u95f4\u7684\u4e92\u76f8\u653b\u51fb\u4ee5\u53ca**\u4f60\u6446\u653e\u7684 bishop \u4e0e\u9884\u5148\u6446\u653e\u597d\u7684\u68cb\u5b50\u4e4b\u95f4\u7684\u4e92\u76f8\u653b\u51fb**\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4e0d\u4ec5\u8981\u6807\u8bb0\u68cb\u5b50\u539f\u6709\u7684\u653b\u51fb\u8303\u56f4\uff0c\u8fd8\u8981\u518d\u52a0\u4e0a\u4e00\u4e2a\u8c61\u7684\u653b\u51fb\u8303\u56f4\u3002\n\n### \u4e09\u3001\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\n\u5728\u3010\u4e00\u3011\u91cc\u8bb2\u8fc7\uff0c\u65cb\u8f6c45\u00b0\u540e\uff0c\u8c61\u7684\u653b\u51fb\u8303\u56f4\u7531\u5bf9\u89d2\u7ebf\u53d8\u4e3a\u884c\u548c\u5217\u3002\u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u884c\u5217\u5339\u914d\u3002\n\u6211\u4eec\u5f00\u4e24\u4e2a\u6570\u7ec4 $r$ \u548c $c$ \u3002\n\n $r$ \u6570\u7ec4\u5b58\u50a8\u8c61\u5728\u65b0\u68cb\u76d8\u7684**\u6c34\u5e73\u65b9\u5411**\u4e0a\u7684\u6bcf\u4e00\u4e2a\u4e0d\u540c\u7684\u653b\u51fb\u8303\u56f4\uff0c\n $c$ \u6570\u7ec4\u5b58\u50a8\u8c61\u5728\u65b0\u68cb\u76d8\u7684**\u7ad6\u76f4\u65b9\u5411**\u4e0a\u7684\u6bcf\u4e00\u4e2a\u4e0d\u540c\u7684\u653b\u51fb\u8303\u56f4\n\n\u4e0b\u9762\u4e3e\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8fdb\u4e00\u6b65\u7406\u89e3\u3002\n\u7ea2\u8272\u70b9\u4e3a $N$ \u7684\u653b\u51fb\u8303\u56f4\n\u6211\u4eec\u8bbe\u65b0\u68cb\u76d8\u7684\u6c34\u5e73\u65b9\u5411\u4e0a\u4e0d\u540c\u7684\u653b\u51fb\u8303\u56f4\u7684\u6807\u8bb0\u4e3a $lenr$ \u3002\n1.  $lenr$ \u6bcf\u8fc7\u4e00\u884c\u9700\u8981\u52a01,\u56e0\u4e3a\u8c61\u5728\u65b0\u68cb\u76d8\u4e0a\u6c34\u5e73\u65b9\u5411\u53ea\u80fd\u653b\u51fb\u5230\u4e00\u884c\u3002\n2. \u5982\u679c\u9047\u5230\u68cb\u5b50\uff0c $lenr$ \u4e5f\u9700\u8981\u52a01\uff0c\u56e0\u4e3a\u68cb\u5b50\u80fd\u963b\u6321\u8c61\u7684\u653b\u51fb\u8303\u56f4\u3002\n\n\u5219\u5b8c\u6210\u6807\u8bb0\u540e\u7684 $r$ \u6570\u7ec4\u5982\u4e0b\uff1a\n![r](https://img-blog.csdnimg.cn/2de716f7101a4d4bab7badd8446e8e7f.jpeg#pic_center)\n\u6807\u8bb0 $c$ \u6570\u7ec4\u65f6\u540c\u7406\uff0c\u4e0d\u4f5c\u8d58\u8ff0\u3002\n\u4e0b\u56fe\u4e3a\u6807\u8bb0\u5b8c\u6210\u7684 $c$ \u6570\u7ec4\u3002\n![c](https://img-blog.csdnimg.cn/690e8b6ef6404973ae934e4380448205.jpeg#pic_center)\n\u6807\u8bb0\u5b8c\u6210\u540e\uff0c\u904d\u5386\u65b0\u68cb\u76d8\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u82e5\u8be5\u70b9 $(i,j)$ \u53ef\u4ee5\u653e\u7f6e\u8c61\uff0c\u5219\u5efa\u7acb\u8fb9\u8fde\u63a5 $r_{i,j}$  \u4e0e $c_{i,j}$ (\u8fde\u63a5\u5728\u8be5\u4f4d\u7f6e\u7684\u8c61\u6240\u80fd\u653b\u51fb\u5230\u7684\u4e24\u4e2a\u65b9\u5411\u7684\u653b\u51fb\u8303\u56f4\u7f16\u53f7)\u3002\n\n\u6700\u540e\u7528\u5308\u7259\u5229\u7b97\u6cd5\u6c42\u6700\u5927\u5339\u914d\uff0c\u5c31\u987a\u5229\u5207\u4e0b\u8fd9\u9053\u9898\u5566 \uff01\n***\n\u4e0b\u9762\u7ed3\u5408\u4ee3\u7801\u6765\u7406\u89e3\u5427\uff01\n# \u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\nusing namespace std;\nint head[1050000],to[1050000],ne[1050000],id;\nint vis[20200],d[20200],n,m,maxx,ans;\nint mp[2200][2200],r[2200][2200],c[2200][2200];\nchar s[1050][1050];\nstruct node{\n\tint xx,yy;\n\tint can; \n}a[2200][2200];\n\nvoid B(int x,int y){\n\tfor(int i=x-1,j=y-1;i>=1&&y>=1;i--,j--){\n\t\tif(s[i][j]!='.') break;\n\t\ta[i][j].can = 2;\n\t}\n\tfor(int i=x+1,j=y+1;i<=n&&j<=m;i++,j++){\n\t\tif(s[i][j]!='.') break;\n\t\ta[i][j].can = 2;\n\t}\n\tfor(int i=x+1,j=y-1;i<=n&&j>=1;i++,j--){\n\t\tif(s[i][j]!='.') break;\n\t\ta[i][j].can = 2;\n\t}\n\tfor(int i=x-1,j=y+1;i>=1&&j<=m;i--,j++){\n\t\tif(s[i][j]!='.') break;\n\t\ta[i][j].can = 2;\n\t}\n}\nvoid K(int x,int y){\n\tint kx[8] = {-1,-1,-1,0,1,1,1,0};\n\tint ky[8] = {-1,0,1,1,1,0,-1,-1};\n\tfor(int i=0;i<8;i++){\n\t\tif(a[x+kx[i]][y+ky[i]].can==0) a[x+kx[i]][y+ky[i]].can = 2;\n\t}\n}\nvoid R(int x,int y){\n\tfor(int i=y+1;i<=m;i++){\n\t\tif(s[x][i]!='.') break;\n\t\ta[x][i].can = 2;\n\t}\n\tfor(int i=y-1;i>=1;i--){\n\t\tif(s[x][i]!='.') break;\n\t\ta[x][i].can = 2;\n\t}\n\tfor(int i=x+1;i<=n;i++){\n\t\tif(s[i][y]!='.') break;\n\t\ta[i][y].can = 2;\n\t}\n\tfor(int i=x-1;i>=1;i--){\n\t\tif(s[i][y]!='.') break;\n\t\ta[i][y].can = 2;\n\t}\n}\nvoid P(int x,int y){\n\tif(a[x-1][y-1].can==0&&s[x-1][y-1]=='.') a[x-1][y-1].can = 2;\n\tif(a[x-1][y+1].can==0&&s[x-1][y+1]=='.') a[x-1][y+1].can = 2;\n}\nvoid Q(int x,int y){\n\tR(x , y);\n\tB(x , y);\n}\nvoid N(int x,int y){\n\tint nx[8] = {-1,-2,-2,-1,1,2,2,1};\n\tint ny[8] = {-2,-1,1,2,2,1,-1,-2};\n\tfor(int i=0;i<8;i++){\n\t\tif(x+nx[i]<1||x+nx[i]>n||y+ny[i]<1||y+ny[i]>m) continue;\n\t\tif(s[x+nx[i]][y+ny[i]]!='.') continue;\n\t\ta[x+nx[i]][y+ny[i]].can = 2;\n\t}\n}\n\nvoid add(int x,int y){//\u94fe\u5f0f\u524d\u5411\u661f\u5efa\u8fb9\n\tto[++id] = y;\n\tne[id] = head[x];\n\thead[x] = id;\n}\nvoid init(){//\u6807\u8bb0r,c\u6570\u7ec4\n\tint lenr=1;\n\tfor(int i=1;i<=n+m-1;i++){\n\t\tfor(int j=1;j<=n+m-1;j++){\n\t\t\tif(mp[i][j]==-1) continue;\n\t\t\tif(!mp[i][j]) r[i][j] = lenr;\n\t\t\telse if(mp[i][j]==1) lenr++;\n\t\t}\n\t\tlenr++;\n\t}\n\tmaxx = lenr;\n\t\n\tint lenc=1;\n\tfor(int i=1;i<=n+m-1;i++){\n\t\tfor(int j=1;j<=n+m-1;j++){\n\t\t\tif(mp[j][i]==-1) continue;\n\t\t\tif(!mp[j][i]) c[j][i] = lenc;\n\t\t\telse if(mp[j][i]==1) lenc++;\n\t\t}\n\t\tlenc++;\n\t}\n\t\n\tfor(int i=1;i<=n+m-1;i++){\n\t\tfor(int j=1;j<=n+m-1;j++){\n\t\t\tif(!mp[i][j]) add(r[i][j],c[i][j]);\n\t\t}\n\t}\n}\n\nbool dfs(int u){//\u5308\u7259\u5229\u7b97\u6cd5\n\tfor(int i=head[u];i;i=ne[i]){\n\t\tint v = to[i];\n\t\tif(vis[v]) continue;\n\t\tvis[v] = 1;\n\t\tif(!d[v] || dfs(d[v])){\n\t\t\td[v] = u;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nint main(){\n\tscanf(\"%d %d\",&n,&m);\n\tfor (int i=1;i<=n;i++){\n\t\tscanf(\"%s\",s[i]+1);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tnode f = {i+j-1 , j+n-i , a[i][j].can};\n\t\t\tif(s[i][j]=='.'){\n\t\t\t\ta[i][j] = f;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tf.can = 1;\n\t\t\ta[i][j] = f;\n\t\t\t\n\t\t\tif(s[i][j]=='B'){\n\t\t\t\tB(i , j);\n\t\t\t}\n\t\t\telse if(s[i][j]=='K'){\n\t\t\t\tK(i , j);\n\t\t\t\tB(i , j);\n\t\t\t}\n\t\t\telse if(s[i][j]=='R'){\n\t\t\t\tR(i , j);\n\t\t\t\tB(i , j);\n\t\t\t}\n\t\t\telse if(s[i][j]=='P'){\n\t\t\t\tP(i , j);\n\t\t\t\tB(i , j);\n\t\t\t}\n\t\t\telse if(s[i][j]=='Q'){\n\t\t\t\tQ(i , j);\n\t\t\t}\n\t\t\telse if(s[i][j]=='N'){\n\t\t\t\tN(i , j);\n\t\t\t\tB(i , j);\n\t\t\t}\n\t\t}\n\t}\n\tmemset(mp,-1,sizeof(mp));\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tmp[a[i][j].xx][a[i][j].yy] = a[i][j].can; \n\t\t}\n\t}\n\t\t\n\tinit();\n\t\t\n\tfor(int i=1;i<maxx;i++){\n\t\tmemset(vis,0,sizeof(vis));\n\t\tif(dfs(i)) ans++;\n\t}\n\tprintf(\"%d\\n\",ans);\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1655555600,
        "uid": 365472,
        "name": "caizehua",
        "ccfLevel": 0,
        "title": "P3882 [JLOI2008]\u5c06\u519b \u9898\u89e3"
    },
    {
        "content": "### Description\n\u5218\u5148\u751f\u6700\u8fd1\u5728\u5b66\u4e60\u56fd\u9645\u8c61\u68cb\uff0c\u4f7f\u7528\u4e00\u4e2a\u53eb\u201djloi-08\u201d\u7684\u6e38\u620f\u8f6f\u4ef6\u3002\u5728\u8fd9\u4e2a\u6e38\u620f\u91cc\uff0c\u4e0d\u4f46\u53ef\u4ee5\u548c\u7535\u8111\u666e\u901a\u5730\u5bf9\u5f08\uff0c\u8fd8\u53ef\u4ee5\u5b66\u4e60\u8457\u540d\u7684\u68cb\u5c40\uff0c\u8fd8\u6709\u9488\u5bf9\u521d\u5b66\u8005\u7684\u89c4\u5219\u6307\u5bfc\u7b49\u4e30\u5bcc\u529f\u80fd\u3002\u4f46\u662f\u2026\u5927\u5c0f\u5374\u89811.4G T_T\u3002\n\n\u8a00\u5f52\u6b63\u4f20\uff0c\u5728\u8fd9\u4e2a\u8f6f\u4ef6\u91cc\uff0c\u4e3a\u4e86\u8ba9\u73a9\u5bb6\u66f4\u597d\u5730\u7406\u89e3\u548c\u8fd0\u7528\u5404\u4e2a\u68cb\u5b50\uff0c\u6709\u5f88\u591a\u8da3\u5473\u7684\u6e38\u620f\uff0c\u6bd4\u5982\u4ee5\u4e0b\u5c31\u662f\u4e00\u4e2a\uff1a\n\n\u7ed9\u51fa\u4e00\u4e2a\u68cb\u76d8\u548c\u4e00\u4e9b\u68cb\u5b50\uff0c\u8ba9\u4f60\u628a\u8fd9\u4e9b\u68cb\u5b50\u6446\u653e\u5728\u68cb\u76d8\u4e0a\uff0c\u4f7f\u5f97\u4e24\u4e24\u4e0d\u4e92\u76f8\u653b\u51fb\u3002\u4f60\u7684\u5f97\u5206\u7531\u4f60\u6446\u653e\u4e0a\u53bb\u7684\u68cb\u5b50\u7684\u4e2a\u6570\u4e0e\u79cd\u7c7b\u6709\u5173\u3002\n\n\u8fd9\u4e2a\u6e38\u620f\u5f88\u590d\u6742\uff0c\u5218\u5148\u751f\u8001\u662f\u73a9\u4e0d\u5230\u9ad8\u5206\u3002\u4e8e\u662f\u7535\u8111\u4fbf\u964d\u4f4e\u4e86\u96be\u5ea6\uff0c\u66ff\u5218\u5148\u751f\u6446\u4e0a\u4e86\u4e00\u4e9b\u68cb\u5b50\uff0c\u6700\u540e\u53ea\u7ed9\u4f60\u4efb\u610f\u591a\u4e2abishop(\u6559\u4e3b)\u3002\n\n\u73b0\u5728\u5218\u5148\u751f\u4fbf\u8981\u8003\u4e00\u8003\u4f60\uff0c\u5728\u7535\u8111\u7ed9\u51fa\u7684\u8fd9\u5f20\u68cb\u76d8\u4e0a\uff0c\u6700\u591a\u80fd\u653e\u51e0\u4e2a$bishop$\u3002\n\n\u56fd\u9645\u8c61\u68cb\u4e2d\u4e00\u5171\u67096\u79cd\u68cb\u5b50\uff1a\n```\nking     (\u56fd\u738b)\nqueen   (\u7687\u540e)\nbishop  (\u6559\u4e3b)\nknight  (\u9a91\u58eb)\nrook    (\u8f66)\npawn   (\u6b65\u5175)\n```\n$queen$\u548c$knight$\u4e0d\u7528\u8bf4\u4e86\uff1b$rook$\u653b\u51fb\u6c34\u5e73\u548c\u5782\u76f4\u4e24\u6761\u7ebf\u4e0a\u7684\u6240\u6709\u683c\u5b50\uff1b$pawn$\u653b\u51fb\u524d\u65b9\u4e24\u6761\u659c\u7ebf\u65b9\u5411\u5404\u4e00\u683c\uff1b$king$\u653b\u51fb\u5468\u56f48\u4e2a\u65b9\u5411\u54041\u683c\uff1b$bishop$\u653b\u51fb\u4e24\u6761\u5bf9\u89d2\u7ebf\u4e0a\u7684\u6240\u6709\u683c\u5b50\u3002\n\n\u9664$knight$\u4ee5\u5916\uff0c\u6240\u6709\u68cb\u5b50\u7684\u653b\u51fb\u8303\u56f4\u5747\u4f1a\u88ab\u522b\u7684\u68cb\u5b50\u6240\u963b\u6321\u3002(\u201c\u524d\u65b9\u201d\u6307$x$\u9012\u589e\u7684\u65b9\u5411\uff0c$x$\u884c$y$\u5217)\n\n\u53ef\u60dc\u7684\u662f\u8fd9\u4e2a\u8f6f\u4ef6\u4e5f\u4e0d\u662f\u9876\u4f18\u79c0\uff0c\u7ed9\u51fa\u7684\u68cb\u76d8\u4e0a\u7684\u68cb\u5b50\u53ef\u80fd\u4e92\u76f8\u4f1a\u653b\u51fb\uff0c\u4e0d\u8fc7\u4f60\u4e0d\u7528\u7406\u4f1a\u8fd9\u4e9b\uff0c\u4f60\u53ea\u8981\u4fdd\u8bc1\u4f60\u6446\u653e\u7684$bishop$\u4e0d\u4e0e\u5b83\u4eec\u4ee5\u53ca\u4e0d\u4e92\u76f8\u653b\u51fb\u5c31\u53ef\u4ee5\u4e86\u3002\n\n#### Input\n\u7b2c\u4e00\u884c\u662f2\u4e2a\u6574\u6570$x$,$ y$(1$\\leqslant$x,y$\\leqslant$1024)\uff0c\n\n\u4e0b\u9762\u7684x\u884c\u6bcf\u884cy\u4e2a\u5b57\u7b26\u8868\u793a\u68cb\u76d8\uff0c\n\n\u5176\u4e2d\uff1a```K \u2013 king```, ```Q \u2013 queen```,``` B \u2013 bishop```, ```N \u2013 knight```, ```R \u2013 rook```, ```P \u2013 pawn```, ```\u201c.\u201d \u2013 blank```.\n\n#### Output\n\u4ec5\u4e00\u884c\u4e00\u4e2a\u6570\uff0c\u8868\u793a\u6700\u591a\u80fd\u591f\u6446\u653e\u7684bishop\u7684\u4e2a\u6570\u3002\n\n#### Sample Input\n```\n3 3\n..N\n...\n...\n```\n#### Sample Output\n```2```\n\n~~(\u6076\u5fc3\u7684\u5927\u6a21\u62df\u2026\u2026~~\u8fd8\u597d\u73a9\u8fc7\u56fd\u9645\u8c61\u68cb~~qwq)~~\n\n\n\n\u9884\u5904\u7406\u51fa\u539f\u672c\u7684\u68cb\u5b50\u80fd\u653b\u51fb\u7684\u6240\u6709\u7684\u70b9\uff0c\u7136\u540e\u7531\u4e8ebishop\u7684\u653b\u51fb\u7684\u659c\u7ebf\u653b\u51fb\uff0c\u4e8e\u662f\u6211\u4eec\u5c06\u68cb\u76d8\u65cb\u8f6c45\u00b0\uff0c\u518d\u6a2a\u7ad6\u5212\u5206\uff0c\u8fde\u8fb9\u8dd1\u6700\u5927\u5339\u914d\u5373\u53ef\n\n### CODE:\n\n```\n/*program from Wolfycz*/\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define inf 0x7f7f7f7f\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int ui;\ntypedef unsigned long long ull;\ninline char gc(){\n\tstatic char buf[1000000],*p1=buf,*p2=buf;\n\treturn p1==p2&&(p2=(p1=buf)+fread(buf,1,1000000,stdin),p1==p2)?EOF:*p1++;\n}\ninline int frd(){\n\tint x=0,f=1; char ch=gc();\n\tfor (;ch<'0'||ch>'9';ch=gc())\tif (ch=='-')\tf=-1;\n\tfor (;ch>='0'&&ch<='9';ch=gc())\tx=(x<<3)+(x<<1)+ch-'0';\n\treturn x*f;\n}\ninline int read(){\n\tint x=0,f=1; char ch=getchar();\n\tfor (;ch<'0'||ch>'9';ch=getchar())\tif (ch=='-')\tf=-1;\n\tfor (;ch>='0'&&ch<='9';ch=getchar())\tx=(x<<3)+(x<<1)+ch-'0';\n\treturn x*f;\n}\ninline void print(int x){\n\tif (x<0)\tputchar('-'),x=-x;\n\tif (x>9)\tprint(x/10);\n\tputchar(x%10+'0');\n}\nconst int N=1<<10,M=1<<20;\nbool l[(N<<1)+10],r[(N<<1)+10];//l:\\ r:/\nbool can[N+10][N+10];\nchar map[N+10][N+10];\nint pre[M+10],now[(N<<1)+10],child[M+10];\nint path[(N<<1)+10],vis[(N<<1)+10];\nint tot,Time,n,m,Ans;\nbool in_map(int x,int y){return x>0&&x<=n&&y>0&&y<=m;}\nvoid join(int x,int y){pre[++tot]=now[x],now[x]=tot,child[tot]=y;}\nbool Extra(int x){\n\tfor (int p=now[x],son=child[p];p;p=pre[p],son=child[p]){\n\t\tif (vis[son]==Time)\tcontinue;\n\t\tvis[son]=Time;\n\t\tif (!~path[son]||Extra(path[son])){\n\t\t\tpath[son]=x;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\nvoid solve_King(int x,int y){\n\tfor (int i=-1;i<=1;i++){\n\t\tfor (int j=-1;j<=1;j++){\n\t\t\tint tx=x+i,ty=y+j;\n\t\t\tif (!in_map(tx,ty))\tcontinue;\n\t\t\tcan[tx][ty]=1;\n\t\t}\n\t}\n}\nvoid solve_Pawn(int x,int y){\n\tfor (int i=-1;i<=1;i++){\n\t\tfor (int j=-1;j<=1;j++){\n\t\t\tif (!i||!j)\tcontinue;\n\t\t\tint tx=x+i,ty=y+j;\n\t\t\tif (!in_map(tx,ty))\tcontinue;\n\t\t\tcan[tx][ty]=1;\n\t\t}\n\t}\n}\nvoid solve_Rook(int x,int y){\n\tfor (int i=x-1;i>=1;i--){\n\t\tif (map[i][y]!='.')\tbreak;\n\t\tcan[i][y]=1;\n\t}\n\tfor (int i=x+1;i<=n;i++){\n\t\tif (map[i][y]!='.')\tbreak;\n\t\tcan[i][y]=1;\n\t}\n\tfor (int j=y-1;j>=1;j--){\n\t\tif (map[x][j]!='.')\tbreak;\n\t\tcan[x][j]=1;\n\t}\n\tfor (int j=y+1;j<=n;j++){\n\t\tif (map[x][j]!='.')\tbreak;\n\t\tcan[x][j]=1;\n\t}\n}\nvoid solve_Queen(int x,int y){solve_Rook(x,y);}\nconst int dx[8]={-2,-2,-1,-1,1,1,2,2};\nconst int dy[8]={-1,1,-2,2,-2,2,-1,1};\nvoid solve_Knight(int x,int y){\n\tfor (int k=0;k<8;k++){\n\t\tint tx=x+dx[k],ty=y+dy[k];\n\t\tif (!in_map(tx,ty))\tcontinue;\n\t\tcan[tx][ty]=1;\n\t}\n}\nint main(){\n\tmemset(path,255,sizeof(path));\n\tn=read(),m=read();\n\tfor (int i=1;i<=n;i++){\n\t\tscanf(\"%s\",map[i]+1);\n\t\tfor (int j=1;j<=m;j++)\n\t\t\tif (map[i][j]!='.')\n\t\t\t\tl[i-j+m]=1,r[i+j-1]=1;\n\t}\n\tfor (int i=1;i<=n;i++){\n\t\tfor (int j=1;j<=m;j++){\n\t\t\tif (map[i][j]=='K')\tsolve_King(i,j);\n\t\t\tif (map[i][j]=='P')\tsolve_Pawn(i,j);\n\t\t\tif (map[i][j]=='R')\tsolve_Rook(i,j);\n\t\t\tif (map[i][j]=='Q')\tsolve_Queen(i,j);\n//\t\t\tif (map[i][j]=='B')\tsolve_Bishop(i,j);\n\t\t\tif (map[i][j]=='N')\tsolve_Knight(i,j);\n\t\t}\n\t}\n\tfor (int i=1;i<=n;i++){\n\t\tfor (int j=1;j<=m;j++){\n\t\t\tif (can[i][j]|l[i-j+m]||r[i+j-1])\tcontinue;\n\t\t\tjoin(i-j+m,i+j-1);\n\t\t}\n\t}\n\tfor (int i=1;i<n+m;i++){\n\t\t++Time;\n\t\tif (Extra(i))\tAns++;\n\t}\n\tprintf(\"%d\\n\",Ans);\n\treturn 0;\n}\n```",
        "postTime": 1607820573,
        "uid": 227049,
        "name": "\u9f9a\u7956\u8c6a\u66fe\u7528\u53f7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3882 \u3010[JLOI2008]\u5c06\u519b\u3011"
    }
]