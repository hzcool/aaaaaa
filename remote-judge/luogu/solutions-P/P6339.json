[
    {
        "content": "\u8fd9\u9898\u76ee\u7684\u8bdd\uff0c\u5176\u5b9e\u53ef\u4ee5\u5148\u8003\u8651\u4e00\u4e0b\u64cd\u4f5c\u7684\u6027\u8d28\u3002\n\n\u8003\u8651\u5f53\u524d\u5982\u679c\u8bf4\u662f $1$ \u8981\u88ab\u6362\u5230\u6700\u524d\u9762\uff0c\u90a3\u4e48\u5fc5\u7136\u5f53\u524d $1$ \u6240\u5728\u7684\u4f4d\u7f6e\u4e4b\u524d\u7684\u5730\u65b9\u90fd\u8981 $+1$\uff0c\u540c\u7406\uff0c\u5982\u679c\u8bf4\u662f $n$ \u8981\u88ab\u6362\u5230\u6700\u540e\u9762\uff0c\u90a3\u4e48 $n$ \u540e\u9762\u7684\u6240\u6709\u4f4d\u7f6e\u5730\u65b9\u90fd\u8981 $-1$\uff0c\u90a3\u4e48\u8003\u8651\u5c06\u8fd9\u4e24\u4e2a\u6392\u597d\u4e4b\u540e\uff0c\u6240\u6709\u4e4b\u540e\u7684\u64cd\u4f5c\u663e\u7136\u662f\u4e0d\u4f1a\u5f71\u54cd\u4ed6\u4eec\u4e24\u4e2a\u4e86\uff0c\u8fd9\u65f6\u5019\u5c31\u628a\u4ed6\u4eec\u4e24\u4e2a\u5ffd\u7565\u6389\u3002\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u518d\u8003\u8651 $2$ \u548c $n-1$ \u4e5f\u662f\u8fdb\u884c\u540c\u6837\u7684\u64cd\u4f5c\u3002\n\n\u7136\u540e\u662f $3$ \u548c $n-2$\u3002\n\n\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u90a3\u4e48\u77e5\u9053\u4e86\u8fd9\u4e2a\u5c31\u6bd4\u8f83\u597d\u60f3\u4e86\uff0c\u7ef4\u62a4\u5f53\u524d\u5e8f\u5217\u6240\u51fa\u73b0\u8fc7\u7684\u4f4d\u7f6e\u6240\u5bf9\u5e94\u7684\u52a0\u51cf\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6216\u8005\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\uff0c\u5e94\u8be5\u662f\u533a\u95f4\u52a0\uff0c\u5355\u70b9\u67e5\u8be2\u3002\n\n\u6ce8\u610f\u8fd9\u91cc\u7684\u7ebf\u6bb5\u6811\u4e0d\u7528\u7ef4\u62a4\u9664\u53f6\u5b50\u8282\u70b9\u7684\u533a\u95f4\u548c\uff0c\u56e0\u4e3a\u5b83\u5e76\u6ca1\u6709\u8981\u6c42\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u5199\u6570\u636e\u7ed3\u6784\u4e86\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#define ls(x) x<<1\n#define rs(x) x<<1|1\nusing namespace std;\nconst int INF=1e5+5;\nint n,a[INF],b[INF],ans;\nstruct _node_tree {\n        int l,r,sum,lazy;\n} tree[INF<<4];\nvoid build(int l,int r,int id) {\n        tree[id].l=l; tree[id].r=r;\n        if (l==r) {tree[id].sum=0; return;}\n        int Mid=(l+r)>>1;\n        if (l<=Mid) build(l,Mid,ls(id));\n        if (Mid<r) build(Mid+1,r,rs(id));\n        return;\n}\nvoid push_down(int id) {\n        if (tree[id].lazy==0) return;\n        int idd=ls(id); tree[idd].lazy+=tree[id].lazy; tree[idd].sum+=tree[id].lazy;\n        idd=rs(id); tree[idd].lazy+=tree[id].lazy; tree[idd].sum+=tree[id].lazy;\n        tree[id].lazy=0;\n        return;\n}\nint query(int x,int id) {\n        int ll=tree[id].l,rr=tree[id].r;\n        if (ll==rr) return tree[id].sum;\n        push_down(id);\n        int Mid=(ll+rr)>>1,res=0;\n        if (x<=Mid) res=query(x,ls(id));\n        else res=query(x,rs(id));\n        return res;\n}\nvoid updata(int l,int r,int id,int x) {\n        int ll=tree[id].l,rr=tree[id].r;\n        if (l<=ll && rr<=r) {\n                tree[id].sum+=x;\n                tree[id].lazy+=x;\n                return;\n        }\n        push_down(id);\n        int Mid=(ll+rr)>>1;\n        if (l<=Mid) updata(l,r,ls(id),x);\n        if (Mid<r) updata(l,r,rs(id),x);\n        return;\n}\nsigned main()\n{\n        scanf(\"%d\",&n);\n        for (int i=1; i<=n; i++)\n                scanf(\"%d\",&a[i]);\n        for (int i=1; i<=n; i++)\n                b[a[i]]=i;\n        build(1,n,1);\n        for (int i=1,j=n,k=1; i<=j; k++) {\n                if (k&1) {\n                        // 1~b[i]\n                        int xx=query(b[i],1)+b[i];\n                        // cout<<xx<<\" over\\n\";\n                        updata(1,b[i]-1,1,1);\n                        ans+=abs(xx-i);\n                        i++;\n                }\n                else {\n                        int xx=query(b[j],1)+b[j];\n                        updata(b[j]+1,n,1,-1);\n                        ans+=abs(xx-j);\n                        j--;\n                }\n                cout<<ans<<\"\\n\";\n                ans=0;\n        }\n        return 0;\n}\n\n```\n\n~~\u7ebf\u6bb5\u6811\u5176\u5b9e\u8fd8\u53ef\u4ee5\u7528\u6807\u8bb0\u6c38\u4e45\u5316\uff0c\u4f46\u662f\u6211\u4e0d\u4f1a\u3002~~\n\n\u5982\u679c\u6709\u95ee\u9898\u8fd8\u8bf7\u6307\u6b63\u3002",
        "postTime": 1628753577,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6339"
    },
    {
        "content": "\u6211\u4eec\u53ef\u4ee5\u5148\u8ddf\u7740\u6837\u4f8b\u6a21\u62df\u4e00\u4e0b\u3002\n\n\u8fd9\u91cc\u53d6\u6837\u4f8b\u4e09\u6765\u6a21\u62df\uff1a\n\n```php\n7\n5\n4\n3\n7\n1\n2\n6\n```\n\n\u7b2c\u4e00\u6b21\u64cd\u4f5c\u540e\uff0c\u539f\u6570\u5217\u53d8\u4e3a `1 5 4 3 7 2 6` \u3002\n\n\u7b2c\u4e8c\u6b21\u64cd\u4f5c\u540e\uff0c\u539f\u6570\u5217\u53d8\u4e3a `1 5 4 3 2 6 7` \u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6bcf\u6b21\u64cd\u4f5c\u8fc7\u540e\uff0c\u90fd\u4f1a\u6709\u4e00\u4e2a\u6570\u5b57\u88ab\u8e22\u51fa\u961f\u5217\uff0c\u4e0d\u518d\u5bf9\u5176\u4f59\u6570\u7684\u4ea4\u6362\u4ea7\u751f\u5f71\u54cd\uff0c\u82e5\u5c06\u8fd9\u4e9b\u6570\u5220\u53bb\uff0c\u6211\u4eec\u7684\u89c4\u5f8b\u4f1a\u66f4\u52a0\u660e\u663e\u3002\n\n\u4e00\u6b21\u64cd\u4f5c\uff0c `5 4 3 7 2 6` \u3002\n\n\u4e8c\u6b21\u64cd\u4f5c\uff0c `5 4 3 2 6` \u3002\n\n\u8bbe\u88ab\u64cd\u4f5c\u7684\u6570\u4e3a $x$ \uff0c\u5373\u6bcf\u6b21\u64cd\u4f5c\u6240\u6c42\u7684\u7b54\u6848\u5c31\u662f\u6570\u5b57 $x$ \u6240\u5728\u7684\u4f4d\u7f6e\u4e0e\u961f\u5934\uff08\u6216\u961f\u5c3e\uff09\u7684\u8ddd\u79bb\u3002\n\n\u8fd9\u6837\u8bf4\u53ef\u80fd\u8fd8\u4e0d\u592a\u76f4\u89c2\uff0c\u6211\u4eec\u5c06\u95ee\u9898\u62bd\u8c61\u4e00\u4e0b\uff0c\u5373\u539f\u95ee\u9898\u7b49\u4ef7\u4e8e\uff1a\n\n**\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5217\uff0c\u957f\u5ea6\u4e3a $n$ \uff0c\u4e00\u5171\u8fdb\u884c $n$ \u6b21\u64cd\u4f5c\uff0c\u8bbe\u5f53\u524d\u6240\u64cd\u4f5c\u7684\u6b21\u6570\u4e3a $x$ \u3002**\n\n**\u82e5 $x$ \u4e3a\u5947\u6570\uff0c\u5219\u8f93\u51fa\u6570\u5b57 $x/2+1$ \u524d\u6709\u591a\u5c11\u4e2a\u6709\u6548\u5143\u7d20\uff0c\u7136\u540e\u5c06\u6570\u5b57 $x/2+1$ \u6807\u4e3a\u65e0\u6548\u5143\u7d20\u3002**\n\n**\u82e5 $x$ \u4e3a\u5076\u6570\uff0c\u5219\u8f93\u51fa\u6570\u5b57 $n-x/2+1$ \u540e\u6709\u591a\u5c11\u4e2a\u6709\u6548\u5143\u7d20\uff0c\u7136\u540e\u5c06\u6570\u5b57 $n-x/2+1$ \u6807\u8bb0\u4e3a\u65e0\u6548\u5143\u7d20\u3002**\n\n\u8fd9\u6837\u95ee\u9898\u5c31\u5f88\u6e05\u6670\u4e86\uff0c\u53ea\u8981\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u4fbf\u53ef\u7ef4\u62a4\u4e0a\u8ff0\u7b54\u6848\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint c[100005];\nint n;\nint ask(int x)\n{\n\tint ans=0;\n\tfor(;x;x-=x&-x)ans+=c[x];\n\treturn ans;\n}\nvoid add(int x,int y)\n{\n\tfor(;x<=n;x+=x&-x)c[x]+=y;\n}\nint a[100005];\nint cnt[100005];\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]),cnt[a[i]]=i,add(i,1);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x;\n\t\tif(i%2==1)\n\t\t{\n\t\t\tx=i/2+1;\n\t\t\tprintf(\"%d\\n\",ask(cnt[x])-1);\n\t\t}\n\t\telse{\n\t\t\tx=n-i/2+1;\n\t\t\tprintf(\"%d\\n\",ask(n)-ask(cnt[x])); \n\t\t}\n\t\tadd(cnt[x],-1);\n\t}\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1597728494,
        "uid": 240405,
        "name": "wkjwkj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6339 \u3010[COCI2007-2008#2] TURBO\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P6339)\n\n\u9996\u5148\u5206\u6790\u9898\u76ee\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0**\u5982\u679c\u4e00\u4e2a\u6570\u5b57\u6240\u5728\u7684\u9636\u6bb5\u5df2\u7ecf\u8fc7\u53bb\u4e86\uff0c\u5b83\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u4f1a\u5bf9\u540e\u9762\u7684\u6570\u5b57\u9020\u6210\u5f71\u54cd**\u3002\n\n\u66f4\u5177\u4f53\u7684\uff0c\u8bb0\u6570\u5b57$i$\u88ab\u64cd\u4f5c\u7684\u9636\u6bb5\u662f$time_i$\uff0c\u6570\u5b57$i$\u6240\u5728\u4f4d\u7f6e\u4e3a$pos_i$\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u5b57$i$\u4f1a\u5bf9\u6570\u5b57$j$\u9020\u6210\u5f71\u54cd\uff08\u5373\u8ba9\u6570\u5b57$j$\u6240\u5728\u9636\u6bb5\u7684\u64cd\u4f5c\u6b21\u6570\u52a0\u4e00\uff09\u5f53\u4e14\u4ec5\u5f53\uff1a\n\n$$time_i>time_j\\&\\&\\begin{cases}pos_i<pos_j(j\\le\\lfloor\\frac{n}{2}\\rfloor)\\\\pos_i>pos_j(j>\\lfloor\\frac{n}{2}\\rfloor)\\end{cases}$$\n\n\u4e8e\u662f\u628a\u5c0f\u4e8e\u7b49\u4e8e$\\lfloor\\frac{n}{2}\\rfloor$\u548c\u5927\u4e8e$\\lfloor\\frac{n}{2}\\rfloor$\u7684\u5206\u5f00\u8003\u8651\u3002\n\n\u8003\u8651$j\\le\\lfloor\\frac{n}{2}\\rfloor$\u7684\u60c5\u51b5\uff0c\u5148\u6309$time$\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5c0f\u5230\u5927\u626b\u4e00\u904d\uff0c\u6570\u5b57$i$\u6240\u5728\u9636\u6bb5\u64cd\u4f5c\u6b21\u6570\u662f$1$\u5230$i-1$\u8fd9\u4e2a\u8303\u56f4\u5185\u5df2\u7ecf\u88ab\u626b\u8fc7\u7684\u6570\u91cf\uff0c\u76f8\u5f53\u4e8e\u662f\u5355\u70b9\u52a0\uff0c\u533a\u95f4\u6c42\u548c\uff0c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n$j>\\lfloor\\frac{n}{2}\\rfloor$\u7684\u60c5\u51b5\u7c7b\u4f3c\uff0c\u8bf7\u8bfb\u8005\u81ea\u5df1\u601d\u8003\u3002\n\n\u4ee3\u7801\u5c31\u4e0d\u653e\u4e86\uff08~~\u5199\u5f97\u592a\u4e11\u4e86~~\uff09\u3002",
        "postTime": 1588947671,
        "uid": 230249,
        "name": "xiaolilsq",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 [COCI2007-2008#2] TURBO"
    }
]