[
    {
        "content": "~~\u8fd9\u663e\u7136\u662f\u4e00\u9053\u5173\u4e8e\u4e2d\u4f4d\u6570\u7684\u6c34\u9898\u3002~~\n# \u90a3\u4e48\u7b80\u5316\u95ee\u9898\u53ca\u4e3a\uff1a\n\u8981\u6c42\u9009\u51fa\u7684N\u5934\u725b\u7684\u6210\u7ee9\u7684\u4e2d\u4f4d\u6570\u5c3d\u53ef\u80fd\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f9d\u6b21\u8ba8\u8bba\u6bcf\u5934\u5976\u725b\u7684\u6210\u7ee9\u662f\u5426\u9002\u5408\u4f5c\u4e3a\u4e2d\u4f4d\u6570\u3002\n\n## 1.\u5148\u628a\u725b\u4eec\u7684\u5206\u6570\u7531\u5c0f\u5230\u5927\u6392\u5e8f\n\u90a3\u4e48\u8fd9\u4e2a\u4e2d\u4f4d\u6570\u663e\u7136\u5728[n/2+1.....c-n/2]\u4e2d\u3002\n\n## 2.\u82e5k\u4f4d\u4e8e\u8fd9\u4e2a\u8303\u56f4[n/2+1...c-n/2]\uff0c\u90a3\u4e48Score[k]\u662f\u5426\u662f\u4e00\u4e2a\u5408\u7406\u7684\u4e2d\u4f4d\u6570\u5462\uff1f\n\n\u5728[1...k-1]\u95f4\u5b9a\u8981\u9009\u51fan/2\u5934\u725b\uff0c\u6211\u4eec\u5e0c\u671b\u9009\u603b\u5b66\u8d39\u5c3d\u91cf\u5c11n/2\u5934\u5976\u725b\uff0c\u8bbe\u8be5\u5b66\u8d39\u603b\u989d\u4e3aLeft[k]\uff08left[k]\u8868\u793a\u5728k\u8fd9\u5934\u725b\u5de6\u8fb9\u6ee1\u8db3n/2\u5934\u725b\u7684\u94b1\u7684\u6700\u5c0f\u7684\u603b\u548c\uff0cright\u540c\u7406)\n\n\u5728[k+1...c]\u95f4\u5b9a\u4e5f\u8981\u9009\u51fan/2\u5934\u725b\uff0c\u6211\u4eec\u4e5f\u5e0c\u671b\u9009\u603b\u5b66\u8d39\u5c3d\u91cf\u5c11n/2\u5934\u5976\u725b\uff0c\u8bbe\u8be5\u5b66\u8d39\u603b\u989d\u4e3aRight[k]\n\n\u5982\u679c\u6ee1\u8db3**left[k]+right[k]+money[k]<=F**\n\n\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u79cd\u5408\u7406\u7684\u60c5\u51b5\n\n\u6700\u7ec8\u627e\u51fa\u6ee1\u8db3\u6761\u4ef6 **Left[k]+Right[k]+Money[k]<=F \u7684\u6700\u5927\u7684\u4e00\u4e2ak\uff0c\u5b83\u5bf9\u5e94\u7684Score[k]\u5373\u4e3a\u7b54\u6848\u3002**\n## 3.\u6c42[n/2+1...c-n/2]\u4e2d\u6bcf\u4e2a\u6570\u5bf9\u5e94\u7684left[ ]\u548cright[ ]\n\n\u5efa\u7acb\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u628a\u6700\u5de6\u8fb9\u7684n/2\u5934\u725b\u6240\u8981\u7684\u8d39\u7528\u5b58\u5230\u5806\u91cc\u9762\uff0c\u7528sum\u8bb0\u4e0b\u603b\u548c\u3002\n\t\u8bbe\u5f53\u524d\u8ba8\u8bba\u5230\u4e86\u7b2ck\u5934\u725b\n\nif(money[k]<\u5806\u9876\u5143\u7d20)\u5c31\u7528money[k]\u628a\u5806\u9876\u5143\u7d20\u6362\u6389\n\n\u7ee7\u7eed\u8ba8\u8bba\u4e0b\u4e00\u5934\u725b\n\n\n------------\n\n## right[ ]\u7684\u6c42\u6cd5\u540cleft[ ]!\n\n# AC\u4ee3\u7801\n------------\n\n```\n#include<stdio.h>\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{int fen,money,left,right;}cow[100005];\nint C,N,F;\npriority_queue<int>q;\nbool cmp(node a,node b){return a.fen==b.fen?a.money<b.money:a.fen<b.fen;}\nvoid init(){\n\tscanf(\"%d%d%d\",&N,&C,&F);\n\tfor(int i=1;i<=C;i++)scanf(\"%d%d\",&cow[i].fen,&cow[i].money);\n\tsort(cow+1,cow+1+C,cmp); //\u5148\u8981\u6392\u5e8f\n}\nvoid LEFT(){//\u5de6\u8fb9\n\tint sum=0;\n\tfor(int i=1;i<=N/2;i++){\n\t\tq.push(cow[i].money);\n\t\tsum+=cow[i].money;\n\t}//\u6700\u5de6\u8fb9\u7684\n\tfor(int i=N/2+1;i<=C-N/2;i++){\n\t\tint t=q.top();\n\t\tcow[i].left=sum;\n\t\tif(cow[i].money<t){\n\t\t\tq.pop();\n\t\t\tsum=sum-t+cow[i].money;\n\t\t\tq.push(cow[i].money);\n\t\t}\n\t}\n\twhile(!q.empty())q.pop();\n}\nvoid RIGHT(){//\u53f3\u8fb9\n\tint sum=0;\n\tfor(int i=C;i>=C-N/2+1;i--){\n\t\tq.push(cow[i].money);\n\t\tsum+=cow[i].money;\n\t}//\u6700\u53f3\u8fb9\u7684\n\tfor(int i=C-N/2;i>=N/2+1;i--){\n\t\tint t=q.top();\n\t\tcow[i].right=sum;\n\t\tif(cow[i].money<t){\n\t\t\tq.pop();\n\t\t\tsum=sum-t+cow[i].money;\n\t\t\tq.push(cow[i].money);\n\t\t}//\u4e92\u6362\n\t}\n}\nint main(){\n\tint ans=-1;//\u8d4b\u503c\u4e3a-1\n\tinit();\n\tLEFT();\n\tRIGHT();\n\tfor(int i=C-N/2;i>=N/2+1;i--){\n\t\tif(cow[i].left+cow[i].right+cow[i].money<=F){\n\t\t\tans=cow[i].fen;\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n}\n\n```\n\n\n------------\n\n",
        "postTime": 1542818821,
        "uid": 76315,
        "name": "go_bananas",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4952 \u3010[USACO 2004 Mar]Financial Aid \u8d5e\u52a9\u5b66\u8d39\u3011"
    },
    {
        "content": "## \u9898\u89e3\r\n\r\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\uff0c\u5bb9\u6613\u5b9e\u73b0\u7684**\u4e8c\u5206**\u505a\u6cd5\u3002\r\n\r\n\u7531\u4e8e\u6211\u4eec\u5e0c\u671b\u5728\u82b1\u8d39\u7684\u91d1\u989d\u6700\u5c11\u7684\u60c5\u51b5\u4e0b\uff0c\u8ba9\u4e2d\u4f4d\u6570\u6700\u5927\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5**\u76f4\u63a5\u4e8c\u5206**\u8fd9\u4e2a\u4e2d\u4f4d\u6570\uff0c\u7136\u540e\u60f3\u529e\u6cd5\u8ba1\u7b97\u51fa\u8fd9\u4e2a\u4e2d\u4f4d\u6570\u4e0b\u6700\u5c11\u7684\u94b1\u3002\u4e00\u4e2a\u5bb9\u6613\u60f3\u5230\u7684\u505a\u6cd5\u662f\uff0c\u5bf9\u4e8e\u4e8c\u5206\u7684\u4e2d\u4f4d\u6570 $x$\uff0c\u5c06\u8d85\u8fc7\u5b83\u7684\u6240\u6709\u6570\u6392\u4e2a\u5e8f\uff0c\u4e0d\u8d85\u8fc7\u5b83\u7684\u6240\u6709\u6570\u518d\u6392\u4e00\u4e2a\u5e8f\uff0c\u4e24\u8fb9\u5206\u522b\u53d6 $\\frac{1}{2}n$ \u4e2a\u6700\u5c0f\u503c\u3002\u4f46\u4ed4\u7ec6\u60f3\u60f3\uff0c\u8fd9\u6837\u5bf9\u5417\uff1f\r\n\r\n\u4f46\u6b63\u5982 @Kewth \u795e\u4ed9\u6240\u8bf4\uff0c\u53ef\u80fd\u5b58\u5728\u67d0\u4e24\u4e2a\u65b9\u6848\uff0c\u5176\u4e2d\u4e00\u4e2a**\u4e2d\u4f4d\u6570\u66f4\u5927\u4f46\u82b1\u8d39\u66f4\u5c0f**\uff08\u4e5f\u5c31\u4e0d\u6ee1\u8db3\u5355\u8c03\u6027\u4e86\uff09\u3002\u56e0\u4e3a\u53ef\u80fd\u5b58\u5728\u8fd9\u6837\u4e00\u79cd\u60c5\u51b5\uff1a\u67d0\u4e2a $\\verb!CSAT!$ \u503c**\u4e0d\u4f4e\u4e8e** $x$ \u7684\u5976\u725b\uff08\u4e0d\u59a8\u79f0\u4e3a\u4f18\u7b49\u751f\uff09\uff0c\u6240\u9700\u7684\u5956\u5b66\u91d1**\u4f4e\u4e8e**\u53e6\u5916\u4e00\u4e2a $\\verb!CSAT!$ \u503c\u4f4e\u4e8e $x$ \u7684\u5976\u725b\uff08\u4e0d\u59a8\u79f0\u4e3a\u52a3\u7b49\u751f\uff09\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9009\u62e9\u4e86\u52a3\u7b49\u751f\uff0c\u53cd\u800c\u82b1\u8d39\u4e86\u66f4\u591a\u94b1\u3002\r\n\r\n\u5177\u4f53\u89e3\u51b3\u529e\u6cd5\u5f88\u7b80\u5355\uff1a\u628a\u591a\u4f59\u7684\u4f18\u7b49\u751f\u201c\u6ee5\u7afd\u5145\u6570\u201d\u586b\u8865\u5230\u52a3\u7b49\u751f\u91cc\uff0c\u91cd\u65b0\u6392\u5e8f\u3002\r\n\r\n\u53ef\u80fd\u4f60\u4f1a\u6709\u7591\u95ee\uff1a\u8fd9\u6837\u9009\u51fa\u6765\u7684\u65b9\u6848\uff0c\u5b83\u7684\u4e2d\u4f4d\u6570\u4e0d\u5c31\u5927\u4e8e $x$ \u4e86\u5417\uff1f\u4e8b\u5b9e\u786e\u5b9e\u5982\u6b64\u3002\u4f46\u662f\u5f53 $x$ \u53d6\u5f97\u6700\u5927\u503c\u65f6\uff0c**\u5fc5\u7136\u5b58\u5728\u8fd9\u6837\u7684\u5408\u6cd5\u65b9\u6848**\uff08\u5426\u5219\uff0c\u6211\u4eec\u603b\u80fd\u53d6\u4e00\u4e2a\u66f4\u5927\u7684 $x$\uff09\u3002\u56e0\u4e3a\u8fd9\u79cd\u4e8c\u5206\u65b9\u6cd5\u662f\u6ee1\u8db3\u5355\u8c03\u6027\u7684\u3002\u968f\u7740 $x$ \u7684\u4e0d\u65ad\u589e\u5927\uff0c\u4f18\u7b49\u751f\u7684\u6761\u4ef6\u53d8\u5f97\u66f4\u52a0\u82db\u523b\uff0c\u4e8e\u662f\u4f18\u7b49\u751f\u7684\u4ef7\u683c\u8d8a\u6765\u8d8a\u8d35\uff1b\u800c\u52a3\u7b49\u751f\u672c\u6765\u5c31\u662f\u7528\u6765\u586b\u8865\u4ef7\u683c\u7a7a\u4f4d\u7684\u3002\u4f18\u7b49\u751f\u4ef7\u683c\u4e0a\u6da8\uff0c\u8868\u73b0\u5728\u51b3\u7b56\u4e0a\u5c31\u662f\u672c\u6765\u6700\u8d35\u7684\u52a3\u7b49\u751f\uff08\u6216\u8005\u62c9\u6765\u66ff\u8865\u7684\u4f18\u7b49\u751f\uff09\u88ab\u6362\u6210\u4e86\u6700\u8d35\u7684\u4f18\u7b49\u751f\u3002\r\n\r\n\u5f53\u7136\uff0c\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u3002\u5982\u679c\u6211\u4eec\u80fd\u9009\u51fa\u7684\u4f18\u7b49\u751f\u8fd8\u6ca1\u6709 $\\frac{n}{2}+1$ \u4e2a\uff0c\u90a3\u4e48\u663e\u7136\u9009\u4e0d\u51fa\u8fd9\u4e48\u591a\u4eba\uff1b\u6211\u4eec\u5148\u628a\u6240\u6709\u725b\u6309\u7167\u8d39\u7528\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\uff0c\u5c31\u4e0d\u9700\u8981\u4e8c\u5206\u540e\u518d\u8fdb\u884c\u6392\u5e8f\u4e86\u3002\u6b64\u5916\uff0c\u4e0b\u65b9\u4ee3\u7801\u76f4\u63a5\u4e8c\u5206\u4e86\u4e2d\u4f4d\u6570\u7684\u503c\u800c\u975e\u6309\u7167  $\\verb!CSAT!$ \u503c\u6392\u5e8f\u540e\uff0c\u53d6\u5f97\u4e2d\u4f4d\u6570\u7684\u725b\u7684\u7f16\u53f7\uff0c\u4f46\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u6ca1\u6709\u95ee\u9898\u3002\r\n\r\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log w)$\uff0c\u5e38\u6570\u5e94\u8be5\u5c0f\u4e8e\u5e73\u8861\u6811\u548c\u5806\u3002\r\n\r\n\u6b64\u5916\uff0c\u7531\u4e8e\u4f5c\u8005\u7684\u4e2a\u4eba\u539f\u56e0\uff08\u6307\u5230\u4eca\u5929\u8fd8\u4e0d\u4f1a\u5199\u7eaf\u6b63\u7684\u4e8c\u5206\u2026\u2026\uff09\u6240\u4ee5\u4e0b\u9762\u7684\u4ee3\u7801\u5176\u5b9e\u662f\u500d\u589e\u5199\u6cd5\uff08\u6216\u8005\u8bf4\u662f\u500d\u51cf\uff1f\uff09\u4f46\u662f $\\verb!check!$ \u51fd\u6570\u4e0e\u4e00\u822c\u7684\u4e8c\u5206\u76f8\u540c\u3002\r\n\r\n## \u53c2\u8003\u4ee3\u7801\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\n#define up(l,r,i) for(int i=l,END##i=r;i<=END##i;++i)\r\n#define dn(r,l,i) for(int i=r,END##i=l;i>=END##i;--i)\r\nusing namespace std;\r\nconst int MAXN=2e5+3;\r\nint n,c,f,p,C[MAXN],Q[MAXN],I[MAXN]; bool T[MAXN];\r\nbool chk(int x){\r\n    int w=0,t=0; memset(T,0,sizeof(T));\r\n    up(1,c,i) if(C[I[i]]>=x &&t<n/2+1) T[i]=1,w+=Q[I[i]],++t;\r\n    if(t<n/2+1) return false; t=0;\r\n    up(1,c,i) if(T[i]==false&&t<n/2  )        w+=Q[I[i]],++t;\r\n    return w<=f;\r\n}\r\nint qread(){\r\n    int w=1,c,ret;\r\n    while((c=getchar())> '9'||c< '0') w=(c=='-'?-1:1); ret=c-'0';\r\n    while((c=getchar())>='0'&&c<='9') ret=ret*10+c-'0';\r\n    return ret*w;\r\n}\r\nbool cmp(int a,int b){return Q[a]<Q[b];}\r\nint main(){\r\n    n=qread(),c=qread(),f=qread();\r\n    up(1,c,i) C[i]=qread()+1,Q[i]=qread(),I[i]=i;\r\n    sort(I+1,I+1+c,cmp);\r\n    dn(30,0,i) if(chk(p|(1<<i))) p|=1<<i;\r\n    printf(\"%d\\n\",p==0?-1:p-1);\r\n    return 0;\r\n}\r\n```\r\n",
        "postTime": 1624634957,
        "uid": 68344,
        "name": "\u79bb\u6563\u5c0f\u6ce2\u53d8\u6362\u00b0",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4952 \u3010[USACO04MAR]Financial Aid\u3011"
    },
    {
        "content": "\u641e\u4e86 $1$ \u5c0f\u65f6\uff0c\u7ec8\u4e8e\u505a\u51fa\u6765\u4e86\uff01\u7ec6\u8282\u597d\u70e6\u554a\uff01\n\n\u9898\u610f\uff1a\u7ed9\u6211\u4eec $C$ \u5934\u725b\u7684\u6210\u7ee9\u4ee5\u53ca\u82b1\u8d39\uff0c\u6211\u4eec\u53ea\u80fd\u6311\u9009 $N$ \u5934\u725b\u53bb\u4e0a\u5b66\uff0c\u5e76\u4e14\u8fd9 $N$ \u5934\u725b\u7684\u82b1\u8d39\u4e0d\u80fd\u8d85\u8fc7 $F$\uff0c\u95ee\u6211\u4eec\u5982\u4f55\u4f7f\u9009\u7684 $N$ \u5934\u725b\u4e2d\u7684\u6210\u7ee9\u7684\u4e2d\u4f4d\u6570\u6700\u5927\u3002\n\n\u60f3\u6cd5\uff1a\u6211\u4eec\u5148\u5c06\u6240\u6709\u5976\u725b\u7684\u6570\u636e\u7528\u7ed3\u6784\u4f53\u5b58\u4e0b\u6765\uff0c\u7136\u540e\u6309\u7167\u6210\u7ee9\u6392\u4e00\u8d9f\u5e8f\uff0c\u7136\u540e\u5b9a\u4e49 $i$ \u8868\u793a\u4ee5\u5f53\u524d\u8fd9\u4e2a\u6570\u4f5c\u4e3a\u4e2d\u4f4d\u6570\uff0c$l[i]$ \u662f\u4ece $1$ \u81f3 $i-1$ \u4e4b\u95f4\u6700\u5c0f\u7684 $N/2$ \u5934\u725b\u7684\u82b1\u8d39\u7684\u603b\u548c\uff0c $r[i]$ \u662f\u4ece $i+1$ \u81f3 $n$ \u4e4b\u95f4\u6240\u6709\u6700\u5c0f\u7684 $N/2$ \u5934\u725b\u7684\u82b1\u8d39\u7684\u603b\u548c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u501f\u52a9\u4e0a\u4e00\u6b21\u7684 $l[i-1]$ \u548c $r[i+1]$ \u62ff\u6765\u7b97\u8fd9\u4e00\u6b21\u7684 $l[i]$ \u548c $r[i]$ \u554a\u3002\u9996\u5148\u6211\u4eec\u9700\u8981\u5148\u5224\u65ad\u4e00\u4e0b\uff0c\u5982\u679c\u6211\u5f53\u524d\u7684\u82b1\u8d39\u6bd4\u4e4b\u524d\u9009\u4e2d\u7684 $N/2$ \u5934\u5976\u725b\u4e2d\u82b1\u8d39\u6700\u9ad8\u7684\u8fd8\u9ad8\uff0c\u90a3\u6211\u4eec\u80af\u5b9a\u4e0d\u8981\u554a\uff0c\u90a3\u8fd9\u4e00\u6b21\u7684\u7ed3\u679c\u5c31\u7b49\u4e8e\u4e0a\u4e00\u6b21\u7684\u7ed3\u679c\u3002\u5426\u5219\u5c31\u66f4\u65b0\u7b54\u6848\u554a\u3002\u6ce8\u610f\uff1a $l[i]$ \u662f\u62ff\u6765\u6b63\u5237\u7684\uff0c\u800c $r[i]$ \u662f\u62ff\u6765\u53cd\u5237\u7684\u3002 \u5982\u4f55\u4ece\u4e4b\u524d\u9009\u4e2d\u7684\u5976\u725b\u4e2d\u6311\u51fa\u82b1\u8d39\u6700\u9ad8\u7684\u90a3\u4e00\u5c0f\u5b50\u5462\uff1f\u5f88\u663e\u7136\uff0c\u6211\u4eec\u7528\u5927\u6839\u5806\u5c31\u597d\u4e86\u3002\n\n$code $ :\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100005;\nstruct yxy{\n\tint x,w;bool operator<(const yxy b)const{return x<b.x;}//\u91cd\u8f7d\u5c0f\u4e8e\u53f7 \n}a[maxn];//x\u8868\u793a\u6210\u7ee9\uff0cw\u8868\u793a\u82b1\u8d39 \nlong long m,n,size,hep[maxn];//m\u8868\u793a\u8981\u53d6m\u5934\u5976\u725b\u4e0a\u5b66\uff0cn\u8868\u793a\u5976\u725b\u603b\u4e2a\u6570 \nlong long f,l[maxn],r[maxn];//l[i] \u662f\u4ece 1 \u81f3 i-1 \u4e4b\u95f4\u6700\u5c0f\u7684 N/2 \u5934\u725b\u7684\u82b1\u8d39\u7684\u603b\u548c\uff0cr[i] \u662f\u4ece i+1 \u81f3 n \u4e4b\u95f4\u6240\u6709\u6700\u5c0f\u7684 N/2 \u5934\u725b\u7684\u82b1\u8d39\u7684\u603b\u548c\nvoid put(int x){\n\thep[++size]=x;int son=size;\n\twhile(son>1&&hep[son]>hep[son/2])swap(hep[son],hep[son/2]),son/=2; \n}//\u628a\u8fd9\u4e2a\u5c0f\u5b50\u585e\u8fdb\u53bb \nint get(){\n\tint x=hep[1],fa=1,son;hep[1]=hep[size--];\n\twhile(fa*2<=size){\n\t\tif(fa*2+1>size||hep[fa*2]>hep[fa*2+1])son=2*fa;else son=fa*2+1;\n\t\tif(hep[fa]<hep[son])swap(hep[fa],hep[son]),fa=son;else break;\n\t}\n\treturn x;\n}//\u53d6\u6700\u5927\u90a3\u4e00\u5c0f\u5b50 \uff0c\u5e76\u91cd\u65b0\u6392\u4e00\u904d \ninline int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-f;ch=getchar();}\n\twhile(isdigit(ch))ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}//\u5feb\u8bfb \nint main(){\n\tm=read();n=read();scanf(\"%lld\",&f);//\u6ce8\u610f,f\u53ef\u80fd\u8d85\u8fc7int\u7c7b\u578b \n\tfor(int i=1;i<=n;i++)a[i].x=read(),a[i].w=read();\n\tsort(a+1,a+1+n);//\u6309\u7167\u6210\u7ee9\u6392\u5e8f \n\tfor(int i=1;i<=m/2;i++)l[m/2+1]+=a[i].w,put(a[i].w);//\u56e0\u4e3al[m/1+1]\u6ca1\u5f97\u9009\u62e9\uff0c\u6240\u6709\u5148\u7edf\u7edf\u585e\u8fdb\u5806\u91cc \n\tfor(int i=m/2+2;i<=n-m/2;i++){\n\t\tint x=get();if(x<=a[i-1].w)put(x),l[i]=l[i-1];//\u5982\u679c\u8fd9\u6b21\u7684\u82b1\u8d39\u8fd8\u6ca1\u6709\u4e4b\u524d\u6700\u5927\u4e2a\u7684\u5c0f\u5b50\u6bd4\u8f83\uff0c\u5c31\u4e0d\u53d8\u7ed3\u679c \n\t\telse l[i]=l[i-1]-x+a[i-1].w,put(a[i-1].w);//\u5426\u5219\u7684\u8bdd\u5c31\u8ddf\u65b0\u7ed3\u679c\uff0c\u628a\u8fd9\u4e2a\u4f7f\u7528\u7684\u5c0f\u5b50\u4e22\u8fdb\u5806\u91cc \n\t}\n\tmemset(hep,0,sizeof hep);size=0;//\u91cd\u65b0\u505a\u4e00\u904d\uff0c\u5237r[i] \n\tfor(int i=n,j=1;j<=m/2;j++,i--)r[n-m/2]+=a[i].w,put(a[i].w);//\u56e0\u4e3al[n-m/1]\u6ca1\u5f97\u9009\u62e9\uff0c\u6240\u6709\u5148\u7edf\u7edf\u585e\u8fdb\u5806\u91cc \n\tfor(int i=n-m/2-1;i>m/2;i--){\n\t\tint x=get();if(x<=a[i+1].w)put(x),r[i]=r[i+1];//\u5982\u679c\u8fd9\u6b21\u7684\u82b1\u8d39\u8fd8\u6ca1\u6709\u4e4b\u524d\u6700\u5927\u4e2a\u7684\u5c0f\u5b50\u6bd4\u8f83\uff0c\u5c31\u4e0d\u53d8\u7ed3\u679c \n\t\telse r[i]=r[i+1]-x+a[i+1].w,put(a[i+1].w);//\u5426\u5219\u7684\u8bdd\u5c31\u8ddf\u65b0\u7ed3\u679c\uff0c\u628a\u8fd9\u4e2a\u4f7f\u7528\u7684\u5c0f\u5b50\u4e22\u8fdb\u5806\u91cc\n\t} \n\tfor(int i=n-m/2;i>m/2;i--){\n\t\tif(a[i].w+l[i]+r[i]<=f){\n\t\t\tprintf(\"%lld\\n\",a[i].x);\n\t\t\treturn 0;\n\t\t}//\u56e0\u4e3a\u6211\u6309\u7167\u6210\u7ee9\u6392\u8fc7\u4e86\uff0c\u4ece\u540e\u9762\u5f80\u524d\u770b\uff0c\u5982\u679c\u53ef\u4ee5\u5c31\u76f4\u63a5\u8f93\u51fa\uff0c\u7ed3\u675f\u7a0b\u5e8f \n\t}\n\tprintf(\"-1\\n\");//\u5426\u5219\u7684\u8bdd\u5c31\u662f\u4e00\u79cd\u53ef\u884c\u65b9\u6848\u90fd\u6ca1\u6709 \n\treturn 0;\n}\n```\n",
        "postTime": 1603975370,
        "uid": 370354,
        "name": "yxy666",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4952 \u3010[USACO04MAR]Financial Aid\u3011"
    },
    {
        "content": "\u4e00\u5f00\u59cb\u4ee5\u4e3a\u662f\u4e8c\u5206\uff0c  \n\u540e\u6765\u53d1\u73b0\u4e0d\u6ee1\u8db3\u5355\u8c03\u6027\uff08\u53ef\u80fd\u6709\u65b9\u6848\u4e2d\u4f4d\u6570\u66f4\u5927\u800c\u4e14\u4ee3\u4ef7\u66f4\u5c0f\uff09\uff0c\u53c8\u4ee5\u4e3a\u662f\u7ebf\u6bb5\u6811\uff0c  \n\u53c8\u53d1\u73b0\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e0d\u4e86\uff0c\u624d\u53d1\u89c9\u662f Splay \u3002\n\n\u5148\u6309\u5206\u6570\u6392\u4e00\u904d\u5e8f\uff0c\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u4e2d\u95f4\u7684\u5976\u725b\uff0c  \n\u5bf9\u4e8e\u8be5\u5976\u725b\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5b83\u662f\u4e2d\u4f4d\u6570\uff0c\u8981\u5728\u5b83\u5de6\u8fb9\u9009\u4e00\u534a\uff0c\u5728\u53f3\u8fb9\u9009\u4e00\u534a\uff0c\n\u7136\u540e\u5e0c\u671b\u4ee3\u4ef7\u6700\u5c0f\uff08\u5e8f\u5217\u4e2d\u6700\u5c0f\u7684 n / 2 \u4e2a\u6570\u7684\u548c\uff09\uff0c  \n\u7528 2 \u9897 Splay \u7ef4\u62a4\u5176\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u6240\u6709\u5976\u725b\u7684\u6700\u5c0f\u4ee3\u4ef7\u5373\u53ef\u3002\n\n\u505a\u5b8c\u4e4b\u540e\u770b\u9898\u89e3\uff0cwoc \u7528\u4f18\u5148\u961f\u5217\u7206\u641e\u4e5f\u53ef\u4ee5\u3002\n\nCODE for splay:\n\n```cpp\n#define NDEBUG\n#include <bits/stdc++.h>\n\nint input() { int x; scanf(\"%d\", &x); return x; }\n\nclass Splay {\nprivate:\n\tint val, sum;\n\tint times, size;\n\tSplay *son[2], *fa;\n\tvoid update();\n\tvoid rotate();\n\tSplay *Kth(int);\npublic:\n\tSplay *splay(Splay *);\n\tSplay *insert(int);\n\tSplay *range(int, int);\n\tSplay *find(int);\n\tSplay *erase();\n\tint get_sum();\n\tSplay(int, Splay*);\n};\n\nvoid Splay::update() {\n\tsize = times;\n\tsum = val * times;\n\tif(son[0]) {\n\t\tsize += son[0] -> size;\n\t\tsum += son[0] -> sum;\n\t}\n\tif(son[1]) {\n\t\tsize += son[1] -> size;\n\t\tsum += son[1] -> sum;\n\t}\n}\n\nvoid Splay::rotate() {\n\tassert(fa);\n\tbool id = fa -> son[0] == this;\n\tSplay *const p = fa -> fa, *const f = fa, *const s = son[id];\n\tif(p) p -> son[p -> son[1] == f] = this;\n\tf -> son[! id] = s;\n\tthis -> son[id] = f;\n\tif(s) s -> fa = f;\n\tthis -> fa = p;\n\tf -> fa = this;\n\tf -> update();\n\tthis -> update();\n}\n\nSplay *Splay::Kth(int k) {\n\tint lsize = son[0] ? son[0] -> size : 0;\n\tassert(k > 0);\n\tif(k <= lsize) return son[0] -> Kth(k);\n\tif(k <= lsize + times) return this;\n\tif(k <= size) return son[1] -> Kth(k - lsize - times);\n\texit(13);\n}\n\nSplay *Splay::splay(Splay *top) {\n\twhile(fa != top) {\n\t\tassert(fa);\n\t\tif(fa -> fa == top)\n\t\t\trotate();\n\t\telse if((fa -> fa -> son[0] == fa) == (fa -> son[0] == this)) {\n\t\t\tfa -> rotate();\n\t\t\trotate();\n\t\t} else {\n\t\t\trotate();\n\t\t\trotate();\n\t\t}\n\t}\n\treturn this;\n}\n\nSplay *Splay::insert(int v) {\n\tSplay *res;\n\tbool id = v > val;\n\tres = son[id] ? son[id] -> insert(v) : son[id] = new Splay(v, this);\n\tupdate();\n\tassert(res);\n\treturn res;\n}\n\nSplay *Splay::range(int l, int r) {\n\tsplay(nullptr);\n\tSplay *L = Kth(l - 1) -> splay(nullptr);\n\tassert(L);\n\tSplay *R = L -> Kth(r + 1) -> splay(L);\n\tassert(R);\n\treturn R -> son[0];\n}\n\nSplay *Splay::find(int v) {\n\tif(v == val) return this;\n\tbool id = v > val;\n\tassert(son[id]);\n\treturn son[id] -> find(v);\n}\n\nSplay *Splay::erase() {\n\tassert(times);\n\ttimes --;\n\tupdate();\n\treturn this;\n}\n\nint Splay::get_sum() {\n\treturn sum;\n}\n\nSplay::Splay(int val, Splay *fa):\n\tval(val), sum(val), times(1), size(1), fa(fa) {\n\t\tson[0] = son[1] = nullptr;\n\t}\n\nconst int maxn = 100050;\ntypedef std::pair<int, int> par;\npar cow[maxn], tmp[maxn];\n\nint main() {\n\tusing std::clog;\n\tusing std::endl;\n\tint n = input() >> 1, m = input(), mon = input();\n\tfor(int i=0; i<m; i++) {\n\t\tcow[i].first = input();\n\t\tcow[i].second = input();\n\t}\n\tstd::sort(cow, cow + m);\n\tSplay *left = (new Splay(INT_MIN >> 2, nullptr)) ->\n\t\tinsert(INT_MAX >> 2) -> splay(nullptr);\n\tSplay *right = (new Splay(INT_MIN >> 2, nullptr)) ->\n\t\tinsert(INT_MAX >> 2) -> splay(nullptr);\n\tfor(int i=0; i<m-n; i++)\n\t\tleft = left -> insert(cow[i].second) -> splay(nullptr);\n\tfor(int i=m-n+1; i<m; i++)\n\t\tright = right -> insert(cow[i].second) -> splay(nullptr);\n\tfor(int i=m-n-1; i>=n; i--) {\n\t\tassert(left);\n\t\tassert(right);\n\t\tright = right -> insert(cow[i + 1].second) -> splay(nullptr);\n\t\tleft = left -> find(cow[i].second) -> splay(nullptr) -> erase();\n\t\tassert(left);\n\t\tassert(right);\n\t\tleft = left -> range(2, n + 1);\n\t\tright = right -> range(2, n + 1);\n\t\tassert(left);\n\t\tassert(right);\n\t\tint now = left -> get_sum() + right -> get_sum() + cow[i].second;\n\t\t/* clog << left -> get_sum() << ' ' */\n\t\t/* \t<< cow[i].second << ' ' */\n\t\t/* \t<< right -> get_sum() << endl; */\n\t\tif(now <= mon) {\n\t\t\tprintf(\"%d\\n\", cow[i].first);\n\t\t\treturn 0;\n\t\t}\n\t\tleft = left -> splay(nullptr);\n\t\tright = right -> splay(nullptr);\n\t}\n\tputs(\"-1\");\n}\n```",
        "postTime": 1551704462,
        "uid": 52232,
        "name": "Kewth",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4952 \u3010[USACO 2004 Mar]Financial Aid \u8d5e\u52a9\u5b66\u8d39\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u4eec\u5bf9\u4e8e\u5c0f\u6570\u636e\u76f4\u63a5\u679a\u4e3e\u4e2d\u4f4d\u6570\n\n\u4f46\u662f\u6570\u636e\u8f83\u5927\n\n\u6211\u4eec\u8003\u8651\u4e8c\u5206\n\n%%%%%%%%% dtkjd\n\ntql\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u4e8c\u5206\u4e2d\u4f4d\u6570\n\n\u7136\u540e\u5c31\u6709\u4e00\u4e2acheck\u51fd\u6570\n\n\u4f46\u662fcheck\u51fd\u6570\u4e2d\u6709\u8bb8\u591a\u7ec6\u8282\n\n\u8981\u6ce8\u610f\u4e00\u4e0b\n\n\u5269\u4e0b\u7684\u662f\u5c31\u662fsort\u4e00\u8fb9\uff0c\u6c42\u7b2ck\u5927\u5373\u53ef\n\n\u7136\u540e\u4e3b\u610f\u4e2d\u4f4d\u6570\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\n\n\u5f53\u524d\u4ed6\u5de6\u53f3\u6709k/2-1\u4e2a\u6570\uff0c\u5426\u5219\u4e00\u5b9areturn false\nqwq \u66fe\u7ecf\u8c03\u4e86\u597d\u957f\u65f6\u95f4\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u907f\u514d\u7ec6\u8282a\u9898\u4e86\n\n\u5949\u4e0a\u4e24\u5e74\u524d\u5199\u7684\u4ee3\u7801\uff1a\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100001;\nint n,c,f;\nstruct Node{\n\tint result,mon;\n\tinline friend bool operator<(Node a,Node b){\n\t\treturn a.result<b.result;\n\t}\n}a[maxn];\nNode b[maxn],t[maxn];\nbool mycmp(Node a,Node b){\n\treturn a.mon<b.mon;\n}\nbool chec(){\n\tint s=0;\n\tsort(a+1,a+c+1,mycmp);\n\tfor(int i=1;i<=n;++i)s+=a[i].mon;\n\treturn s>f?0:1;\n}\nbool ok(int mid){\n\tint s=a[mid].mon,cnt=0;\n\tfor(int i=1;i<=c;++i)b[i].result=a[i].result,b[i].mon=a[i].mon;\n\tsort(b+1,b+mid,mycmp);\n\tfor(int i=1;i<=n/2;++i)if(b[i].result==b[mid].result)return 0;else s+=b[i].mon;\n\tfor(int i=mid+1;i<=c;++i)cnt++,t[cnt].result=a[i].result,t[cnt].mon=a[i].mon;\n\tsort(t+1,t+cnt+1,mycmp);\n\tfor(int i=1;i<=n/2;++i)if(t[i].result==a[mid].result)return 0;else s+=t[i].mon;\n\treturn s>f?0:1;\n}\nint main(){\n\tios::sync_with_stdio(0);\n\tcin>>n>>c>>f;\n\tfor(int i=1;i<=c;++i)cin>>a[i].result>>a[i].mon;\n\tif(!chec()){puts(\"-1\");return 0;}\n\tsort(a+1,a+c+1);\n\tint l=n/2,r=c-n/2+1;\n\twhile(l+1<r){\n\t\tint mid=(l+r)>>1;\n\t\tif(ok(mid))l=mid;\n\t\t  else r=mid;\n\t}\n\tprintf(\"%d\\n\",a[l]);\n\treturn 0;\n}\n\n```",
        "postTime": 1550390676,
        "uid": 30817,
        "name": "muller",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4952 \u3010[USACO 2004 Mar]Financial Aid \u8d5e\u52a9\u5b66\u8d39\u3011"
    },
    {
        "content": "## \u5206\u6790\n\n\u6570\u636e\u8303\u56f4\u8fd9\u4e48\u5927\uff0c\u76f4\u63a5\u679a\u4e3e\u533a\u95f4\u5f53\u7136\u662f\u4e0d\u53ef\u884c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u4e00\u4e2a\u5f88\u5de7\u5999\u7684\u4f18\u5316:\u5927\u6839\u5806\u3002\u4e2d\u4f4d\u6570ai\n\u5fc5\u987b\u6ee1\u8db3  $\\frac {n} {2} +1 \\le i \\le c-\\frac {n} {2}$\n\n\n$i={n\\over2}+1$\u65f6\uff0c\u80af\u5b9a\u8981\u9009\u524d$n\\over2$\u4e2a\u5206\u6570\u4f4e\u4e14\u94b1\u5c11\u7684\u732a\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4e2d\u4f4d\u6570\uff0c\u7528\u4e00\u4e2a\u7ef4\u62a4\u5956\u91d1\u7684\u5927\u6839\u5806\uff0c\u6bcf\u679a\u4e3e\u5b8c\u4e00\u4e2a\u4e2d\u4f4d\u6570\uff0c\u5982\u679c\u5f53\u524d\u7684\u5956\u91d1\u6bd4\u5806\u9876\u7684\u5c0f\uff0c\u5219\u4ea4\u6362\uff0c\u7ef4\u6301\u5806\u91cc\u6709n2\u4e2a\u6570\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4 f[i] \u7ef4\u62a4\u5982\u679c\u9009 $a_i$ \u4e3a\u4e2d\u4f4d\u6570\uff0c\u524d $n\\over2$\u4e2a\u6570\u7684\u6700\u5c0f\u5956\u91d1\u3002\n\n\n\u540c\u4e0a\uff0c\u5012\u5e8f\u7ef4\u62a4\uff0c\u6c42\u51fa $g[i]$ \u8868\u793a\uff0c\u5982\u679c\u9009 $a_i$ \u4e3a\u4e2d\u4f4d\u6570\uff0c\u5219\u540e $n\\over2$ \u4e2a\u6570\u6700\u5c0f\u5956\u91d1\u3002\n\u6240\u4ee5\u7b54\u6848\u4e3a\u6ee1\u8db3 $f[i]+g[i]+a[i].money\u2264F$ \u7684\u6700\u5927\u7684 $a[i].fenshu$\n\n\n\u5177\u4f53\u7ec6\u8282\u89c1\u4ee3\u7801\u6ce8\u91ca\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2e5+210;\npriority_queue<int>q;//\u5927\u6839\u5806\nstruct Node{\n    int lev,moy;\n}a[maxn];//lev\u4e3a\u5206\u6570\uff0cmoy\u4e3a\u94b1\u6570\u3002\nint n,c,F;\nint sum = 0;\nbool cmp(const Node &a,const Node &b){//sort\u7684\u6392\u5e8f\u51fd\u6570\n    return a.lev < b.lev;\n}\nint f[maxn],g[maxn];\nint main(){\n    cin>>n>>c>>F;\n    for(int i=1;i<=c;++i){\n        cin>>a[i].lev>>a[i].moy;\n    }\n    sort(a+1,a+c+1,cmp);\n    for(int i=1;i<=n/2;++i){//\u6210\u7ee9\u524dn/2\u7684\u4eba\u5165\u961f\n        sum += a[i].moy;//sum\u8bb0\u5f55\u524d\u4e8c\u5206\u4e4bi\u4e2a\u91cc\u7684\u5956\u91d1\u6570\u3002\u5927\u6839\u5806\u653e\u5165\u3002\n        q.push(a[i].moy);\n    }\n    for(int i=n/2+1;i<=c;++i){//f[i]:\u8868\u793a\u4ee5i\u4e3a\u4e2d\u4f4d\u6570\u524dn/2\u4eba\u7684\u6700\u5c0f\u5956\u91d1\n        f[i] = sum;\n        int top = q.top();\n        if(top>a[i].moy){//\u5956\u91d1\u5c0f\u4e8e\u5806\u9876\u5219\u6362\u6389\uff0c\u56e0\u4e3a\u8d8a\u5c0f\u8d8a\u597d\u3002\n            q.pop();\n            sum -= top;\n            sum += a[i].moy;\n            q.push(a[i].moy);\n        }\n    }\n    sum = 0;\n    for(int i=c;i>=c-n/2+1;--i){//\u6210\u7ee9\u540en/2\u5165\u961f\n        sum += a[i].moy;\n        q.push(a[i].moy);\n    }\n    for(int i=c-n/2;i>=1;--i){//g[i]\u662fi\u4e3a\u4e2d\u4f4d\u6570\u662f\u540en/2\u4eba\u6700\u5c0f\u5956\u91d1\n        g[i] = sum;\n        int top = q.top();\n        if(top>a[i].moy){//\u540c\u4e0a\uff0c\u5982\u679c\u5c0f\uff0c\u5c31\u6362\n            q.pop();\n            sum -= top;\n            sum += a[i].moy;\n            q.push(a[i].moy);\n        }\n    }\n    for(int i=c-n/2;i>=n/2+1;--i){//\u679a\u4e3e\u6bcf\u4e00\u79cd\u4e2d\u4f4d\u6570\u7684\u53ef\u80fd\n        if(g[i]+f[i]+a[i].moy <= F){//\u56e0\u4e3a\u662f\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u7684\uff0c\u6240\u4ee5\u6ee1\u8db3\u60c5\u51b5\u5c31\u76f4\u63a5\u8f93\u51fa\u7ed3\u675f\u3002\n            cout<<a[i].lev<<endl;\n            return 0;\n        }\n    }\n    printf(\"-1\\n\");//\u6ca1\u6709\u5408\u6cd5\u60c5\u51b5\u5c31\u8f93\u51fa-1\n}\n\n```",
        "postTime": 1593381814,
        "uid": 340084,
        "name": "Vocanda",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4952 \u3010[USACO04MAR]Financial Aid\u3011"
    },
    {
        "content": "\n[$ \\large{}\\color {#6495ED} \\mathcal{MyBlog} $](https://xjx885.coding-pages.com/)\n\n---\n\n$\n$\n\n### \u524d\u8a00\uff1a\n\n\n$\\quad \\quad$ \u95f2\u7740\u6ca1\u4e8b\u505a\u968f\u673a\u8df3\u9898\u7cfb\u5217\u3002\n\n---\n\n$\n$\n\n### \u9898\u76ee\u5927\u610f\uff1a\n\n$\\quad \\quad$ \u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a $C$ \u7684\u5e8f\u5217\uff0c\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u6570\u90fd\u6709\u4e00\u4e2a\u6743\u503c $d$ \u548c\u4e00\u4e2a\u4ee3\u4ef7 $q$\uff0c\u8981\u6c42\u62ff\u51fa $n$ \u4e2a\u6570\uff0c\u4f7f\u5f97\u5728\u5b83\u4eec\u7684\u4ee3\u4ef7\u548c\u4e0d\u5927\u4e8e $F$ \u7684\u524d\u63d0\u4e0b\uff0c\u5b83\u4eec\u7684\u6743\u503c\u7684\u4e2d\u4f4d\u6570\u6700\u5927\u3002\n\n$\\quad \\quad$ \u6570\u636e\u8303\u56f4\uff1a $n\\le C\\le 1e5\\  ,\\ n\\le 19999\\ ,\\ n\\bmod 2 =1\\ ,\\ q\\le1e5\\ ,\\ F\\le2e9$ \u3002\n\n---\n\n\n$\n$\n### \u601d\u8def\u5206\u6790:\n\n$\\quad \\quad$ \u9898\u76ee\u601d\u8def\u5f88\u663e\u7136\uff1a\u6211\u4eec\u6ca1\u529e\u6cd5\u76f4\u63a5\u7ef4\u62a4\u4e2d\u4f4d\u6570\uff0c\u6240\u4ee5\u8003\u8651\u6309\u6743\u503c\u6392\u5e8f\u540e\u679a\u4e3e\u4e2d\u4f4d\u6570\u3002\n\n$\\quad \\quad$ \u5047\u5982\u6211\u4eec\u4ee5\u6392\u5e8f\u540e $k$ \u4f4d\u7f6e\u7684\u5143\u7d20\u7684\u6743\u503c\u4e3a\u4e2d\u4f4d\u6570\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u6240\u82b1\u8d39\u7684\u6700\u5c0f\u4ee3\u4ef7\u4e3a\uff1a $\\text{mincost}(1,k-1,(n-1)/2)+\\text{mincost}(k+1,C,(n-1)/2) + cost(k)$ \u3002\n\n$\\quad \\quad$ \u5176\u4e2d $\\text{mincost}(a,b,c) $ \u8868\u793a\uff1a \u5728 $[a,b]$ \u533a\u95f4\u5185\uff0c\u524d $c$ \u5c0f\u7684\u4ee3\u4ef7\u7684\u548c\u662f\u591a\u5c11\u3002\n\n$\\quad \\quad$ \u5982\u679c\u6211\u4eec\u53ef\u4ee5\u5728 $logn$ \u7684\u65f6\u95f4\u5185\u6c42\u51fa $\\text{mincost}$ \uff0c\u6211\u4eec\u5c31\u53ef\u4ee5 $O(nlogn)$ \u901a\u8fc7\u672c\u9898\u3002\n\n$\\quad \\quad$ \u663e\u7136\uff0c\u6c42 $\\text{mincost}$ \u7684\u65b9\u6cd5\u5f88\u591a\u3002\n\n$\\quad \\quad$ \u6bd4\u5982\u8bf4\u5806\uff0c\u6bd4\u5982\u8bf4\u5e73\u8861\u6811\u3002\n\n$\\quad \\quad$ \u4e0d\u8fc7\u5b83\u4eec\u90fd\u628a $\\text{mincost}$ \u7684\u7ef4\u62a4\u8f6c\u5316\u4e3a\u63d2\u5165+\u7ef4\u62a4\u4e24\u90e8\u5206\uff0c\u5176\u5b9e\u4e0d\u9700\u8981\u4e00\u4e2a\u6570\u4e00\u4e2a\u6570\u7684\u63d2\u5165\uff0c\u4e3b\u5e2d\u6811\u53ef\u4ee5\u505a\u5230\u76f4\u63a5\u7ef4\u62a4\u3002\n\n$\\quad \\quad$ $\\text{mincost}$ \u7684\u6c42\u6cd5\u663e\u7136\u662f\u4e3b\u5e2d\u6811\u7684\u57fa\u7840\u64cd\u4f5c\u4e86\uff0c\u8fd9\u91cc\u4e0d\u4ed4\u7ec6\u8bb2\u4e86\u3002\n\n---\n\n$\n$\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ninline int read();\n\nconst int N = 2e5 + 10;\nconst int M = 2e5 + 10;\n\nint n, C, F, tot;\nint rt[M], size[M << 5], son[M << 5][2];\nlong long sum[M << 5];\n\npair <int , int > stu[N];\n\n#define mid ((l+r)>>1)\n#define lc (son[root][0])\n#define rc (son[root][1])\n\ninline int read();\n\nvoid Build(int & root, int l, int r)\n{\n\troot = ++tot;\n\tif(l == r) return ;\n\tBuild(lc, l, mid);\n\tBuild(rc, mid + 1, r);\n}\n\nint Update(int Root, int x, int l, int r)\n{\n\tint root = ++tot;\n\tsum[root] = sum[Root] + x;\n\tsize[root] = size[Root] + 1;\n\tlc = son[Root][0], rc = son[Root][1];\n\n\tif(l == r) return root;\n\n\tif(x <= mid) lc = Update(lc, x, l, mid);\n\telse rc = Update(rc, x, mid + 1, r);\n\treturn root;\n}\n\ntypedef long long ll;\n\nll Query(int root, int Root, int l, int r, int x)\n{\n\tif(x == 0) return 0;\n\tif(l == r) return 1ll * l * x;\n\n\tint l_size = size[son[Root][0]] - size[lc];\n\tif(l_size <= x)\n\t\treturn sum[son[Root][0]] - sum[lc] + Query(rc, son[Root][1], mid + 1, r, x - l_size);\n\treturn Query(lc, son[Root][0], l, mid, x);\n}\n\nsigned main()\n{\n\tBuild(rt[0], 0, 1e5);\n\tn = read(), C = read(), F = read();\n\tfor(register int k = 1; k <= C; k++)\n\t{\n\t\tint d = read(), Q = read();\n\t\tstu[k] = make_pair(d, Q);\n\t}\n\tsort(stu + 1, stu + 1 + C);\n\tfor(register int k = 1; k <= C; k++)\n\t\trt[k] = Update(rt[k - 1], stu[k].second, 0, 1e5);\n\n\tint ans = -1;\n\tfor(register int k = C - (n - 1) / 2; k >= (n + 1) / 2; k--)\n\t{\n\t\tll Sum = Query(rt[0], rt[k - 1], 0, 1e5, n / 2) + Query(rt[k], rt[C], 0, 1e5, n / 2) + stu[k].second;\n\t\tif(Sum <= F)\n\t\t{\n\t\t\tans = max(ans, stu[k].first);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tprintf(\"%d\", ans);\n\n\treturn 0;\n}\n\ninline int read()\n{\n\tint fh = 1, x = 0, ch = '~';\n\n\twhile(!(ch >= '0' && ch <= '9')) fh = ch == '-' ? -1 : 1, ch = getchar();\n\twhile(ch >= '0' && ch <= '9') x = (x << 3) + (x << 1), x += ch - '0', ch = getchar();\n\n\treturn x * fh;\n}\n\n\n```\n\n\n---\n\n$\n$\n\n### \u7ed3\u8bed\uff1a\n\n$\\quad \\quad$ \u53cc\u500d\u7ecf\u9a8c\u5165\u53e3\uff1a [P3963 [TJOI2013]\u5956\u5b66\u91d1](https://www.luogu.com.cn/problem/P3963)\u3002\n\n---\n\n$$ \\large{END}$$",
        "postTime": 1587774864,
        "uid": 118274,
        "name": "Sata_moto",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4952 \u3010[USACO04MAR]Financial Aid\u3011"
    }
]