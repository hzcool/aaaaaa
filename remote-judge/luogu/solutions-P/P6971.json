[
    {
        "content": "**\u9898\u610f&\u601d\u8def\u7b80\u8ff0**\n\n\u957f\u5bbd\u9ad8\u5206\u522b\u4e3a $w$\uff0c$nw$\uff0c$1$ \u7684\u957f\u65b9\u4f53\uff0c\u6bcf\u5c42\u6446\u653e $n$ \u4e2a\u5f62\u6210 $nw\u00d7nw\u00d71$ \u7684\u5e95\u9762\u4e3a\u6b63\u65b9\u5f62\u7684\u51e0\u4f55\u4f53\u3002\n\n\u6bcf\u4e24\u5c42\u4ea4\u66ff\u6446\u653e\uff0c\u5373\u5448\u201c\u4e95\u201d\u5b57\u5f62\u52a0\u9ad8\uff0c\u5171 $h$ \u5c42\u3002\n\n\u9762\u5bf9\u51e0\u4f55\u4f53\u7684\u4e00\u4e2a\u68f1\u8fb9\uff0c\u6309\u4ece\u8fd1\u5230\u8fdc\u4ee4\u6bcf\u6b21\u7684 $n$ \u4e2a\u957f\u65b9\u4f53\u7f16\u53f7\u4e3a $1$\uff0c$2$\uff0c$3$\u2026\n\n\u73b0\u5728\u4f9d\u6b21\u7ed9\u51fa $m$ \u4e2a $l$ $k$\uff0c\u8868\u793a\u7b2c $idx$ \u6b21\uff0c\u5c06\u7b2c $l$ \u5c42\u7b2c $k$ \u4e2a\u957f\u65b9\u4f53\u53bb\u9664\u3002\n\n\u6c42\u5728\u7b2c\u51e0\u6b21\u64cd\u4f5c\u65f6\u4f1a\u4f7f\u5f97\u51e0\u4f55\u4f53\u5012\u584c?\n\n\u7531\u6b64\u53ef\u89c1\uff0c\u672c\u9898\u64cd\u4f5c\u5e76\u4e0d\u590d\u6742\uff0c\u4e14\u6709\u987a\u5e8f\u6027\u3002\n\n\u76f4\u63a5\u5f00\u59cb**\u5927\u6a21\u62df**\u3002\n\n**\u89e3\u9898\u601d\u8def**\n\n\u5bf9\u6bcf\u6b21\u64cd\u4f5c\u5224\u65ad\u6700\u9876\u4e0a $top$ \u5c42\u7684\u91cd\u5fc3\u4f4d\u7f6e\u662f\u5426\u843d\u5728 $h-top-1$ \u5c42\u7684\u53ef\u7a33\u5b9a\u8303\u56f4\u5185\u3002\n\n\u91cd\u5fc3\u53ef\u7b80\u5355\u7684\u89c6\u4f5c\u662f\u524d $top$ \u5c42\u7684\u5269\u4f59\u5757\u7684\u7f16\u53f7\u548c (\u7b49\u540c\u4e8e\u5750\u6807\u548c)\u9664\u4ee5\u524d $top$ \u5c42\u7684\u5269\u4f59\u603b\u5757\u6570\u3002\n\n\u5176\u4e2d\uff0c\u7531\u4e8e\u5c42\u6b21\u7684\u6446\u653e\u4e00\u6b21\u4ea4\u66ff\u5448\u4e95\u5b57\u5f62 \u3002\u6545\u5982\u679c\u5bf9\u5947\u6570\u5c42\u79fb\u9664\u4e00\u5757\u957f\u65b9\u4f53\uff0c\u5076\u6570\u5c42\u5e94\u7279\u6b8a\u5904\u7406\u3002\n\n**AC\u4ee3\u7801**\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint n, w, h, m;\nbool flr[2][2501][10001];\nint lft[2][2501], rgt[2][2501];\nint cet[2][2501], num[2][2501];\nint cmp(double x) {\n    if(abs(x) < 1e-8)    return 0;\n    return x > 0 ? 1 : -1;\n}\nbool jug(double center, double left, double right) {\n    if(cmp(center - left) <= 0 || cmp(center - right) >= 0)\n        return false;\n    return true;\n}\nint main(){\n    scanf(\"%d %d %d %d\", &n, &w, &h, &m);\n    memset(flr, true, sizeof(flr));\n    long long lmt = (1+n) * n / 2;\n    for(int i=1;i<=h;i++){\n        cet[i%2][(i+1)/2] = lmt;\n        num[i%2][(i+1)/2] = n;\n        lft[i%2][(i+1)/2] = 1;\n        rgt[i%2][(i+1)/2] = n;\n    }\n    for(int idx=1, l, k;idx<=m;idx++){\n        scanf(\"%d %d\", &l, &k);\n        bool flg = l % 2;\n        l = (l+1)/2;\n        flr[flg][l][k] = 0;\n        cet[flg][l] -= k;\n        num[flg][l]--;\n        for(int i=1;i<=n;i++)\n            if(flr[flg][l][i] == true) {\n                lft[flg][l] = i;\n                break;\n            }\n        for(int i=n;i;i--)\n            if(flr[flg][l][i] == true) {\n                rgt[flg][l] = i;\n                break;\n            }\n        double tCet = 0, tNum = 0;\n        for(int i=h;i;i--){\n            if(cmp(tNum) == 1 && flg == i%2) {\n                double center = tCet * 1.0 / tNum;\n                if(jug(center, lft[flg][(i+1)/2] - 0.5, rgt[flg][(i+1)/2] + 0.5) == false) {\n                    printf(\"yes\\n%d\\n\", idx);\n                    return 0;\n                }\n            }\n            if(i%2 == flg)\n                tCet += cet[flg][(i+1)/2],\n                tNum += num[flg][(i+1)/2];\n            else\n                tCet += num[!flg][(i+1)/2] * (1.0+n)/2.0,\n                tNum += num[!flg][(i+1)/2];\n        }\n    }\n    printf(\"no\\n\");\n}\n```\n",
        "postTime": 1660573748,
        "uid": 540201,
        "name": "Daben1",
        "ccfLevel": 0,
        "title": "P6971"
    }
]