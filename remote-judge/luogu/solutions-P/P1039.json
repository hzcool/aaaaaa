[
    {
        "content": "```\n\n//\u8bb0\u5f55\u6bcf\u4e00\u53e5\u8bdd\u662f\u8c01\u8bf4\u7684\u4ee5\u53ca\u8fd9\u53e5\u8bdd\u7684\u5185\u5bb9\n//\u53ef\u4ee5\u7528map\u5b58\u4eba\u540d\u5bf9\u5e94\u7684\u4e0b\u6807 \n\n//\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4ebai\uff0c\u5047\u8bbei\u662f\u7f6a\u72af\n//\u7136\u540e\u679a\u4e3e\u4eca\u5929\u662f\u661f\u671f\u51e0\uff0c\u7528day\u8868\u793a \n//\u7136\u540e\u5224\u65ad\u6709\u6ca1\u6709\u77db\u76fe\n\n//\u5982\u4f55\u5224\u65ad\uff1f\n//\u8fdb\u884c\u6bcf\u4e00\u6b21\u5224\u65ad\u7684\u65f6\u5019\uff0c\u5148\u4f7f\u6240\u6709\u4eba\u7684\u72b6\u6001\u4e0d\u786e\u5b9a\uff0c\u4e5f\u5c31\u662f\u4e0d\u77e5\u9053\u4ed6\u4eec\u4f1a\u8bf4\u771f\u8bdd\u5047\u8bdd\n//TF[a]==-1\u662f\u4e0d\u786e\u5b9a\uff0cTF[a]=1\u662f\u8bf4\u771f\u8bdd\uff0cTF[a]=0\u662f\u8bf4\u5047\u8bdd\n//T\u662f\u8bf4\u771f\u8bdd\u7684\u4eba\u6570\uff0cF\u662f\u8bf4\u5047\u8bdd\u7684\u4eba\u6570 \n//\u8bbe\u7f6a\u72af\u4e3a i \n//\u8bbeflag\u4e3a\u8fd9\u53e5\u8bdd\u662f\u771f\u8bdd\u8fd8\u662f\u5047\u8bdd\uff0cflag=1\u662f\u771f\u8bdd\uff0cflag=0\u662f\u5047\u8bdd \n//id\u662f\u8bf4\u8fd9\u53e5\u8bdd\u7684\u4eba \n//\u679a\u4e3e\u6bcf\u4e00\u53e5\u8bdd\n//\t\u770b\u4e00\u4e0bid\u4ee5\u524d\u7684\u72b6\u6001\uff0c\u5982\u679c\u72b6\u6001\u4e0d\u786e\u5b9a\uff08TF==-1\uff09\uff0c\u5c31TF[id]=flag\n//\t\u5426\u5219\uff0c\u5982\u679c\u548c\u4ee5\u524d\u72b6\u6001\u4e00\u6837(TF[id]==flag)\uff0c\u5c31\u6ca1\u6709\u77db\u76fe\uff0c\n//\tTF[id]!=flag\u5c31\u662f\u51fa\u73b0\u4e86\u77db\u76fe(\u56e0\u4e3a\u4e00\u4e2a\u4eba\u59cb\u7ec8\u76f4\u8bf4\u4e00\u79cd\u8bdd)\uff0c\u5224\u65ad\u4e0d\u51fa\u6765\u4e86\uff0c\u76f4\u63a5return\u53bb\u679a\u4e3e\u4e0b\u4e00\u4e2a\u4eba\u662f\u7f6a\u72af \n//\u5982\u679cF>n\u6216\u8005T>m-n\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u5047\u8bdd\u7684\u4eba\u6570\u8d85\u8fc7\u4e86\u9898\u76ee\u4e2d\u7ed9\u7684\u4eba\u6570\uff0c\u77db\u76fe\uff0creturn\n//\u5982\u679c\u627e\u5230\u4e86\u4e0d\u6b62\u4e00\u4e2a\u7f6a\u72af\uff0c\u8f93\u51fa\"Cannot Determine\"\uff0c\u76f4\u63a5exit(0) \n\n//\u600e\u4e48\u77e5\u9053\u8fd9\u53e5\u8bdd\u662f\u771f\u8bdd\u5047\u8bdd\uff1f \n//\u2460\u5982\u679c\u8bdd\u91cc\u6709 \"I am guilty.\"\n//\t\u90a3\u4e48\u770b\u4e00\u4e0bid\u662f\u4e0d\u662fi\uff0c\u4e0d\u662f\u7684\u8bdd\uff0c\u5c31\u662f\u5728\u8bf4\u5047\u8bdd\n//\u2461\u8bdd\u91cc\u6709\"I am not guilty\"\n//\t\u770b\u4e00\u4e0bid\u662f\u4e0d\u662fi\uff0c\u4e0d\u662f\u7684\u8bdd\uff0c\u5c31\u662f\u5728\u8bf4\u771f\u8bdd\uff0c\u5426\u5219\u5c31\u662f\u5047\u8bdd \n//\u2462\u8bdd\u91cc\u6709\"xxx is guilty\"\n//\t\u5982\u679cxxx\u662fi\u7684\u8bdd\uff0c\u5c31\u662f\u771f\u8bdd\uff0c\u5426\u5219\u662f\u5047\u8bdd\n//\u2463\u8bdd\u91cc\u6709\"xxx is not guilty\"\n//\t\u5982\u679cxxx\u4e0d\u662fi\u7684\u8bdd\uff0c\u5c31\u662f\u771f\u8bdd\uff0c\u5426\u5219\u662f\u5047\u8bdd\n//\u2464\u8bdd\u91cc\u6709\"Today is XXX\"\n//\t\u5982\u679cxxx\u4e0eday\u4e00\u6837\uff0c\u5c31\u662f\u771f\u8bdd\uff0c\u5426\u5219\u662f\u5047\u8bdd\n \n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<map>\n#include<algorithm>\nusing namespace std;\n\nstring S[10]=\n{\n\t\"Today is Sunday.\",\n\t\"Today is Monday.\",\n\t\"Today is Tuesday.\",\n\t\"Today is Wednesday.\",\n\t\"Today is Thursday.\",\n\t\"Today is Friday.\",\n\t\"Today is Saturday.\",\n};\n\nint m,n,p;\nint T,F,ans;\nint TF[25];\nstruct Sen\n{\n\tint id;\n\tstring s;\n}sen[105];\nmap<string,int> ma;\n\nbool judgeTF(int id,bool flag)\t//\u770b\u4e00\u4e0b\u6709\u6ca1\u6709\u51b2\u7a81\uff0creturn 1 \u8868\u793a\u6709\u51b2\u7a81 \n{\n\tif(TF[id]==-1)\t\t//\u72b6\u6001\u4e0d\u786e\u5b9a \n\t{\n\t\tTF[id]=flag;\t//\u8d4b\u72b6\u6001 \n\t\tif(flag)\t//\u8bf4\u771f\u8bdd\u7684\u4eba\u6570++ \n\t\t\t++T;\n\t\telse\t//\u8bf4\u5047\u8bdd\u7684\u4eba\u6570++ \n\t\t\t++F;\n\t}\n\telse\n\t\treturn TF[id]!=flag;\t//\u548c\u4e4b\u524d\u7684\u4e00\u4e0d\u4e00\u6837\uff0c\u4e00\u6837\u8fd4\u56de0\uff0c\u4e0d\u4e00\u6837\u8fd4\u56de1 \n\tif(F>n||T>m-n)\t//\u8bf4\u5047\u8bdd\u7684\u4eba\u6bd4n\u591a\u6216\u8005\u662f\u8bf4\u771f\u8bdd\u7684\u4eba\u6bd4m-n\u591a \n\t\treturn 1;\n\treturn 0;\n}\n\nvoid judge(int id,string day)\n{\n\tmemset(TF,-1,sizeof(TF));\t//\u6240\u6709\u4eba\u90fd\u4e0d\u77e5\u9053\u8bf4\u7684\u662f\u771f\u8bdd\u5047\u8bdd \n\tT=F=0;\t\t//\u8bf4\u771f\u8bdd\u3001\u5047\u8bdd\u4eba\u6570\u7f6e0 \n\tstring tmp;\n\tfor(int i=1;i<=p;++i)\n\t{\n\t\tint pos=sen[i].s.find(\"I am guilty.\");\t//pos\u4e3a-1\u5219\u6ca1\u8bf4\u8fd9\u53e5\u8bdd \n\t\tif(~pos)\n\t\t{\n\t\t\tif(judgeTF(sen[i].id,sen[i].id==id))\t//\u56e0\u4e3a\u6211\u4eec\u5047\u8bbe\u4e86id\u662f\u7f6a\u72af\uff0c\u6240\u4ee5\u4e0d\u662fid\u7684\u4eba\u5c31\u4e0d\u662f\u7f6a\u72af\uff0c\u5c31\u662f\u5728\u8bf4\u5047\u8bdd\n\t\t\t\treturn;\n\t\t}\n\t\tpos=sen[i].s.find(\"I am not guilty\");\n\t\tif(~pos)\n\t\t{\n\t\t\tif(judgeTF(sen[i].id,sen[i].id!=id))\n\t\t\t\treturn;\n\t\t}\n\t\tpos=sen[i].s.find(\" is guilty.\");\n\t\tif(~pos)\n\t\t{\n\t\t\ttmp=sen[i].s;\n\t\t\ttmp.erase(pos,11);\n\t\t\tif(judgeTF(sen[i].id,ma[tmp]==id))\n\t\t\t\treturn;\n\t\t}\n\t\tpos=sen[i].s.find(\" is not guilty.\");\n\t\tif(~pos)\n\t\t{\n\t\t\ttmp=sen[i].s;\n\t\t\ttmp.erase(pos,15);\n\t\t\tif(judgeTF(sen[i].id,ma[tmp]!=id))\n\t\t\t\treturn;\n\t\t}\n\t\tpos=sen[i].s.find(\"Today is \");\n\t\tif(~pos)\n\t\t{\n\t\t\tif(judgeTF(sen[i].id,sen[i].s==day))\n\t\t\t\treturn;\n\t\t}\n\t}\n\tif(ans&&ans!=id)\t//\u627e\u5230\u4e86\u4e0d\u6b62\u4e00\u4e2a\u7f6a\u72af \n\t{\n\t\tputs(\"Cannot Determine\");\t//\u4e0d\u80fd\u786e\u5b9a \n\t\texit(0);\n\t}\n\tans=id;\t\t//id\u662f\u7f6a\u72af \n}\n\nstring s[25],name,a;\nint main()\n{\n\tscanf(\"%d%d%d\",&m,&n,&p);\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tcin>>s[i];\n\t\tma[s[i]]=i;\t\t//\u5b58\u540d\u5b57\u6807\u53f7 \n\t}\n\tfor(int i=1;i<=p;++i)\n\t{\n\t\tcin>>name;\t\t//\u8f93\u5165\u8bf4\u8bdd\u8005 \n\t\tname.erase(name.length()-1,1);\t\t//\u628a\u540e\u8fb9\u7684\u5192\u53f7\u641e\u6389 \n\t\tgetline(cin,a);\n\t\ta.erase(0,1);\t//\u628a\u524d\u8fb9\u7684\u7a7a\u683c\u641e\u6389 \n\t\tif(a[a.length()-1]=='\\n'||a[a.length()-1]=='\\r')\t//\u628a\u5751\u7239\u7684\u6362\u884c\u7b26\u641e\u6389 \n\t\t\ta.erase(a.length()-1,1);\n\t\tsen[i].id=ma[name];\t\t//\u5b58\u8bf4\u8bdd\u8005 \n\t\tsen[i].s=a;\t\t//\u5b58\u8bf4\u8bdd\u5185\u5bb9 \n\t}\n\tfor(int i=1;i<=m;++i)\t//\u5047\u8bbe\u7b2ci\u4e2a\u4eba\u662f\u7f6a\u72af \n\t\tfor(int j=0;j<7;++j)\t//\u5047\u8bbe\u4eca\u5929\u662fS[j]\u5929 \n\t\t\tjudge(i,S[j]);\n\tif(!ans)\t//\u627e\u4e0d\u5230\u7f6a\u72af \n\t\tputs(\"Impossible\");\n\telse\n\t\tcout<<s[ans];\t//\u7f6a\u72af\u540d\u5b57 \n\treturn 0;\n}\n```",
        "postTime": 1522237544,
        "uid": 39886,
        "name": "Drifterming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1039 \u3010\u4fa6\u63a2\u63a8\u7406\u3011"
    },
    {
        "content": "\u6ce8\u610f\u6362\u884c\u7b26\uff01\uff01\uff01\n\n\n\u6ce8\u610f\u6362\u884c\u7b26\uff01\uff01\uff01\n\n\n\u6ce8\u610f\u6362\u884c\u7b26\uff01\uff01\uff01\n\n\n\u5982\u679c\u4f60\u4f7f\u7528getchar()\u7cfb\u5217\u51fd\u6570\u8bfb\u5165\uff0c\u5e76\u4e14\u7528\u6362\u884c\u7b26\u5224\u5b9a\u662f\u5426\u7ed3\u675f\uff0c\u5219\u6362\u884c\u7b26\u4f1a\u5bfc\u81f4\u4f60WA\u6389\uff01\n\n\nlinux\u4e0b\u6362\u884c\u7b26\u4e3a'\\n'\uff0cwindows\u4e0b\u6362\u884c\u7b26\u4e3a'\\r\\n'\uff0c\u5982\u679c\u6570\u636e\u662fwindows\u4e0b\u9020\u7684\uff0c\u4f60\u5c31\u628a'\\r'\u4e5f\u7ed9\u5f53\u6210\u5b57\u7b26\u4e32\u5185\u5bb9\u4e86\uff0c\u4e0dwa\u624d\u602a\u3002\n\n\n\u6240\u4ee5\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u5efa\u7acb\u4e00\u4e2a\u7f13\u5b58\u533a\uff0c\u628a\u6240\u6709\u7684'\\r'\u66ff\u6362\u6210'\\n'\uff0c\u8fdb\u884c\u8ba1\u7b97\u3002\n\n\n\u8bfb\u53d6\u4e00\u6574\u884c\u7684\u65b9\u6cd5\uff1a\n\n```cpp\nfgets(char* dst,size_t buf_size,File* file) \n```\n\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4f20stdin\u5373\u53ef\u3002\u4e0d\u8981\u7528scanf(\"%[^\\n]\",str)\uff0c\u56e0\u4e3a\u4f60\u4e0d\u77e5\u9053\u6700\u540e\u7684\u6362\u884c\u7b26\u662f\u5565\uff01\n\n\n\u53e6\u5916\u4e3a\u4e86\u9884\u9632\u6587\u672b\u6ca1\u6362\u884c\u7684\u60c5\u51b5\uff0c\u624b\u52a8\u5728\u7f13\u5b58\u533a\u672b\u8865\u4e0a\u4e00\u4e2a'\\n'\u3002\n\n\n\u5177\u4f53\u7b97\u6cd5\u4e0d\u591a\u8bf4\u4e86\uff0c\u5148\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u4eba\u8868\u793a\u7684\u610f\u601d\uff0c\u7136\u540e\u4e8c\u8fdb\u5236\u72b6\u538b\u679a\u4e3e\u6492\u8c0e\u7684\u4eba\uff0c\u5982\u679c\u8fd9\u4e2a\u72b6\u6001\u7684\u5927\u5c0f\u4e0e\u6240\u7ed9\u4eba\u6570\u76f8\u540c\uff0c\u5219\u8fdb\u884c\u8ba1\u7b97\u3002\u8bb0\u5f97\u5224\u5b9a\u77db\u76fe\u3002\u53ef\u80fd\u8fd9\u4e2a\u72b6\u6001\u662f\u4e92\u76f8\u77db\u76fe\u7684\uff0c\u5219\u4e0d\u5e94\u66f4\u65b0\u7b54\u6848\u3002\n\n\n\u5982\u679c\u8f93\u5165\u5b58\u5728\u77db\u76fe\uff0c\u76f4\u63a5\u8f93\u51faimpossible\u3002\n\n\n\u5982\u679c\u4e00\u4e2a\u72b6\u6001\u6709\u591a\u4e2a\u4eba\u672a\u77e5\uff0c\u4e14\u6ca1\u6709\u4eba\u5fc5\u5b9a\u4e3a\u7f6a\u72af\u5219\u591a\u89e3\u3002\n\n\n\u5982\u679c\u591a\u4e2a\u72b6\u6001\u63a8\u51fa\u4e0d\u540c\u7684\u7f6a\u72af\uff0c\u5219\u591a\u89e3\u3002\n\n\n\u5982\u679c\u4e00\u4e2a\u72b6\u6001\u53ea\u6709\u4e00\u4e2a\u4eba\u672a\u77e5\uff0c\u5176\u4f59\u7684\u4eba\u90fd\u4e00\u5b9a\u4e0d\u662f\u7f6a\u72af\uff0c\u5219\u7528\u8fd9\u4e2a\u4e0d\u786e\u5b9a\u7684\u4eba\u662f\u7f6a\u72af\u53bb\u66f4\u65b0\u7b54\u6848\u3002\n\n\n\u6700\u540e\u6570\u4e00\u4e0b\u6709\u591a\u5c11\u4e2a\u4eba\u53ef\u80fd\u662f\u7f6a\u72af\uff0c\u7edf\u8ba1size\uff0c\u5982\u679csize\u4e3a0\u5219\u8f93\u51faimpossible\uff0c\u4e3a1\u5219\u8f93\u51fa\u4eba\u540d\uff0c\u5176\u4f59\u60c5\u51b5\u8f93\u51fa\u591a\u89e3\u3002\n\n\n\u2014\u2014Cmd2001 @ 2017.10.19\n\n\n\u6700\u540e\u4e0a\u4ee3\u7801\uff1a\n\n\n```cpp\n#include<bits/stdc++.h>\n#define debug cout\nusing namespace std;\nconst int maxn=30;\nstring name[maxn];\nint ptr[maxn][maxn]; // 1 means is , -1 means not;\nint day[maxn]; // means says day.\nint day_can_be[maxn]; // can be that day ? 1 means is , -1 means is not.\nint gul_can_be[maxn]; // persob i can be guilty or not , 1 means is , -1 means is not;\nint may_be_ans[maxn]; // 0,1 means can be answer or not\nstring buf[1<<10];\nmap<string,int> person;\nint n,m,p,mx,cnt,ans;\ninline int getdate(string x)\n{\n    if(x==\"monday.\") return 1;\n    if(x==\"tuesday.\") return 2;\n    if(x==\"wednesday.\") return 3;\n    if(x==\"thursday.\") return 4;\n    if(x==\"friday.\") return 5;\n    if(x==\"saturday.\") return 6;\n    if(x==\"sunday.\") return 7;\n    return puts(\"Wrong spelling ! Fuck you!\"),-1;\n}\ninline char convchar(char x)\n{\n    if( x>='A' && x<='Z' )\n        return x-'A'+'a';\n    else return x;\n}\ninline void convstring(string &x)\n{\n    for(unsigned i=0;i<x.length();i++)\n        x[i] = convchar(x[i]);\n}\ninline char nextchar(int arg=0)\n{\n    static char buf[1<<10],*st;\n    if(arg)\n    {\n        fgets(buf,1<<10,stdin),st=buf;\n        int i;\n        for(i=0;i<1<<10&&buf[i];i++)\n            if( buf[i]=='\\r' )\n                buf[i] = '\\n';\n        buf[i] = '\\n';\n    }\n    return *st++;\n}\ninline void getline()\n{\n    cnt = 0;\n    char c=nextchar(1);\n    cnt = 1;\n    while( c != '\\n' )\n    {\n        if(c==' ')\n        {\n            if( person.find(buf[cnt]) == person.end() )\n                convstring(buf[cnt]);\n            cnt++;\n        }\n        else\n            buf[cnt] = buf[cnt] + c;\n        c = nextchar();\n    }\n    while( buf[cnt]==\"\" ) cnt--;\n    convstring(buf[cnt]);\n}\ninline void resbuf()\n{\n    for(int i=1;i<=cnt;i++)\n        buf[i].clear(),\n        buf[i].resize(0);\n}\ninline void explain()\n{\n    if( buf[2]!=\"i\" && buf[2]!=\"today\" && person.find(buf[2])==person.end() ) return;\n    const int id = person[buf[1]];\n    if( buf[2]==\"today\" )\n    {\n        int dd = getdate(buf[4]);\n        if( day[id] && day[id]!=dd )\n        {\n            ans = -2;\n            return;\n        }\n        day[id] = dd;\n    }\n    else if( buf[4]==\"guilty.\" )\n    {\n        int tar = buf[2]==\"i\" ? id : person[buf[2]];\n        if( ptr[id][tar] && ptr[id][tar]!=1 )\n        {\n            ans = -2;\n            return;\n        }\n        ptr[id][tar] = 1;\n    }\n    else if( buf[5]==\"guilty.\" )\n    {\n        int tar = buf[2]==\"i\" ? id : person[buf[2]];\n        if( ptr[id][tar] && ptr[id][tar]!=-1 )\n        {\n            ans = -2;\n            return;\n        }\n        ptr[id][tar] = -1;\n    }\n}\ninline void reslogic()\n{\n    memset(day_can_be,0,sizeof(day_can_be));\n    memset(gul_can_be,0,sizeof(gul_can_be));\n}\ninline void logic(int x,int mul,int& flag)\n{\n    if(day[x])\n    {\n        if( day_can_be[day[x]] && day_can_be[day[x]]!=mul )\n        {\n            flag=0;\n            return;\n        }\n        day_can_be[day[x]] = mul;\n    }\n    for(int i=1;i<=n;i++)\n        if(ptr[x][i])\n        {\n            const int pp = ptr[x][i]*mul;\n            if( gul_can_be[i] && gul_can_be[i]!=pp )\n            {\n                flag = 0;\n                return;\n            }\n            gul_can_be[i] = pp;\n        }\n}\ninline bool judgedate()\n{\n    int ret=0;\n    for(int i=1;i<=7;i++)\n        if( ~day_can_be[i] )\n            ret += day_can_be[i];\n    return ret<2;\n}\ninline void judgegul()\n{\n    int pos = -1,siz=n;\n    for(int i=1;i<=n;i++)\n    {\n        if( !~gul_can_be[i] ) --siz;\n        else if( gul_can_be[i] == 1 )\n        {\n            pos = i;\n            break;\n        }\n    }\n    if( siz>1 && !~pos ) // can not determine , maybe multi guilty .\n    {\n        ans = -1;\n        return;\n    }\n    if( siz==1 && !~pos )\n        for(int i=1;i<=n;i++)\n            if( !gul_can_be[i] )\n            {\n                may_be_ans[i] = 1;\n                return;\n            }\n    for(int i=1;i<=n;i++)\n        if( i!=pos && gul_can_be[i] == 1 ) // must be multi guilty in this statement\n            return;\n    may_be_ans[pos] = 1;\n}\ninline int count(int x)\n{\n    int ret=0;\n    while(x)\n        ret++,\n        x -= (x&-x);\n    return ret;\n}\ninline int getans()\n{\n    int ret = 0;\n    for(int i=1;i<=n;i++)\n        if( may_be_ans[i] )\n        ret++,\n        ans = i;\n    return ret;\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&p);\n    mx = (1<<n);\n    for(int i=1;i<=n;i++)\n    {\n        cin>>name[i];\n        person[name[i]] = person[name[i]+\":\"] = i;\n    }\n    char c = nextchar(1);\n    while(c!='\\n') c=nextchar();\n    for(int i=1;i<=p;i++)\n    {\n        resbuf();\n        getline();\n        explain();\n    }\n    if( ans == -2 )\n        return puts(\"Impossible\"),0;\n    for(int s=0;s<mx;s++)\n    {\n        if( count(s) != m ) continue;\n        reslogic();\n        int flag =1;\n        for(int i=1;i<=n&&flag;i++)\n            if( s & (1<<(i-1)) )\n                logic(i,-1,flag);\n            else logic(i,1,flag);\n        if( flag && judgedate() )\n            judgegul();\n    }\n    if( !~ans )\n        return puts(\"Cannot Determine\"),0;\n    if( !getans() )\n        return puts(\"Impossible\"),0;\n    if( getans() > 1 )\n        return puts(\"Cannot Determine\"),0;\n    cout<<name[ans]<<endl;\n    return 0;\n}\n```",
        "postTime": 1508585098,
        "uid": 31907,
        "name": "cmd2001",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1039 \u3010\u4fa6\u63a2\u63a8\u7406\u3011"
    },
    {
        "content": "1\u3001\u6839\u636e\u9898\u610f\u53ef\u77e5\u53ef\u4ee5\u5229\u7528\u679a\u4e3e\u6cd5\u5b8c\u6210\u3002\u679a\u4e3e\u7f6a\u72af\u548c\u4eca\u5929\u662f\u661f\u671f\u51e0\u3002\u6ee1\u8db3N\u4e2a\u4eba\u59cb\u7ec8\u8bf4\u8c0e\u8bdd\u548cM-N\u4e2a\u4eba\u59cb\u7ec8\u8bf4\u771f\u8bdd\u7684\u6761\u4ef6\uff0c\u5c31\u53ef\u4ee5\u786e\u5b9a\u7f6a\u72af\u3002\n\n2\u3001\u9996\u5148\u5229\u7528\u5b57\u7b26\u4e32\u64cd\u4f5c\u5c06\u8bc1\u8a00\u8f6c\u5316\u6210\u8ba1\u7b97\u673a\u53ef\u8868\u793a\u7684\u4fe1\u606f\u3002\n\n1\uff09\u5b9a\u4e49\n\nGuilty:Array[1..MM,1..MM] Of Integer;{-1..1} \n\nFillChar(Guilty,SizeOf(Guilty),0) \n\n\u521d\u503c\u4e3a0 \n\n Guilty[i,j]=-1\uff1a\u8868\u793a\u7b2ci\u4e2a\u4eba\u8bf4\u7b2cj\u4e2a\u4eba\u4e0d\u662f\u7f6a\u72af\n\nGuilty[i,j]= 1\uff1a\u8868\u793a\u7b2ci\u4e2a\u4eba\u8bf4\u7b2cj\u4e2a\u4eba\u662f\u7f6a\u72af\n\n\u5176\u4e2d\u5305\u542bGuilty[i,i]\u5373\u7b2ci\u4e2a\u4eba\u8bf4\u81ea\u5df1\u662f\u4e0d\u662f\u7f6a\u72af \n\n\u6ce8\u610f\uff1aGuilty\u4e0d\u53ef\u4ee5\u81ea\u76f8\u77db\u76fe\u3002\n\n2\uff09\u5b9a\u4e49\n\nWhatDay:Array[1..MM,1..7] Of Boolean; \n\nFillChar(WhatDay,SizeOf(WhatDay),False) \n\nWhatDay[i,j]:=True  :\u8868\u793a\u7b2ci\u4e2a\u4eba\u8bf4\u8fc7j\u662f\u661f\u671f\u51e0 \n\n3\u3001\u679a\u4e3e\u7f6a\u72af\u548c\u661f\u671f\u51e0\uff0c\u5224\u65ad\u6bcf\u53e5\u8bc1\u8a00\u662f\u771f\u662f\u5047\uff0c\u7edf\u8ba1\u8bf4\u771f\u5047\u8bc1\u8a00\u7684\u4eba\u6570\u3002\n\n\u6ce8\u610f\uff1a\u6709\u53ef\u80fd\u67d0\u4eba\u53c8\u8bf4\u8fc7\u771f\u8bdd\uff0c\u53c8\u8bf4\u8fc7\u5047\u8bdd\u3002\n\n4\u3001\u6839\u636e\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u7f6a\u72af\u7f16\u53f7\u6216Cannot Determine\u6216Impossible\u3002\n\n",
        "postTime": 1555372613,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1039 \u3010\u4fa6\u63a2\u63a8\u7406\u3011"
    },
    {
        "content": "**\u6211\u7684\u535a\u5ba2\uff1a[\u4f20\u9001\u95e8](https://www.wjyyy.top/2305.html)**\n\n## \u9898\u89e3\uff1a\n\n\u8fd9\u4e2a\u9898\u6570\u636e\u8303\u56f4\u6bd4\u8f83\u5c0f\uff0c\u8003\u8651\u679a\u4e3e\uff0c\u4f46\u662f\u679a\u4e3e\u8c01\u8bf4\u771f\u8bdd\u8c01\u8bf4\u5047\u8bdd\u4e5f\u6bd4\u8f83\u8017\u65f6\uff0c\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u65e5\u671f\u53ea\u6709\u4e00\u5929\uff0c\u7f6a\u72af\u4e5f\u53ea\u6709\u4e00\u4e2a\uff0c\u8003\u8651\u679a\u4e3e\u7f6a\u72af\u662f\u8c01\uff0c\u548c\u4eca\u5929\u662f\u661f\u671f\u51e0\u3002\n\n\u5728\u8bfb\u5165\u6bcf\u4e00\u53e5\u8bdd\u65f6\uff0c\u628a\u8fd9\u4e00\u53e5\u7684\u4e3b\u4eba\uff08\u5373\u5192\u53f7\u524d\u7684\u4eba\uff09\u5bf9\u5e94\u5230\u5b83\u7684\u7f16\u53f7\uff0c\u8fd9\u91cc\u63a8\u8350\u4f7f\u7528`std::map`\uff0c\u7136\u540e\u5224\u65ad\u79cd\u7c7b\uff0c\u5982\u679c\u8bed\u53e5\u4e0d\u5408\u6cd5\u5c31\u4e0d\u8bfb\u8fd9\u53e5\u8bdd\uff0c\u5e76\u7528`gets()`\u628a\u8fd9\u4e00\u884c\u8bfb\u5b8c\u8fdb\u5165\u4e0b\u4e00\u53e5\u3002\u5982\u679c\u53d1\u73b0\u7b2c\u4e00\u4e2a\u5355\u8bcd\u662f\u4eba\u540d\uff0c\u5219\u7528`std::map`\u627e\u5230\u5b83\u7684\u7f16\u53f7\uff0c\u7136\u540e\u770b\u5b83\u662f**\u80af\u5b9a\u53e5**\u8fd8\u662f**\u5426\u5b9a\u53e5**\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u5f00\u4e00\u4e2a`vector`\u7528\u6765\u5b58\u5b83\u8bf4\u8fc7\u7684**\u5408\u6cd5**\u7684\u8bdd\uff0c\u533a\u5206\u4e00\u4e0b\u8fd9\u53e5\u8bdd\u662f\u8bf4\u4eba\u7684\u4fe1\u606f\u8fd8\u662f\u65e5\u671f\uff0c\u5982\u679c\u8bf4\u4eba\u7684\u4fe1\u606f\u8fd8\u9700\u8981\u5bf9\u5e94\u5230\u5bf9\u8c61\uff0c\u8fd9\u91cc\u6700\u597d\u628a`I`\u8f6c\u5316\u4e3a\u81ea\u5df1\u7684\u540d\u5b57\u3002\n\n\u63a5\u7740\u5c31\u53ef\u4ee5\u679a\u4e3e\u7f6a\u72af\u548c\u65e5\u671f\u4e86\uff0c\u56e0\u4e3a\u6709\u7684\u4eba\u81ea\u59cb\u81f3\u7ec8\u90fd\u6ca1\u6709\u8bf4\u8fc7\u4e00\u53e5\u5408\u6cd5\u7684\u8bdd\uff0c\u8fd9\u6837\u7684\u4eba\u65e2\u53ef\u80fd\u8bf4\u771f\u8bdd\u4e5f\u53ef\u80fd\u8bf4\u5047\u8bdd\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u53d8\u91cf$ran$\u6765\u5b58\u6709\u591a\u5c11\u4e2a\u8fd9\u6837\u7684\u4eba\uff0c\u5269\u4e0b\u7684\u4eba\u6839\u636e\u5b83\u7b2c\u4e00\u53e5\u8bdd\u6765\u786e\u5b9a\u5b83\u662f\u8bf4\u771f\u8bdd\u8fd8\u662f\u8bf4\u5047\u8bdd\u3002\u5982\u679c\u4e00\u4e2a\u4eba\u524d\u540e\u77db\u76fe\uff0c\u5373\u524d\u9762\u8bf4\u771f\u8bdd\u540e\u9762\u8bf4\u5047\u8bdd\uff0c\u90a3\u4e48\u8fd9\u6b21\u679a\u4e3e\u5c31\u4e0d\u5408\u6cd5\uff0c\u53ef\u4ee5\u76f4\u63a5\u8df3\u5230\u4e0b\u6b21\u679a\u4e3e\u53bb\u3002\n\n\u5728\u4e00\u6b21\u6210\u529f\u7684\u679a\u4e3e\u4e2d\uff0c\u6211\u4eec\u5f97\u77e5\u4e86\u6709\u591a\u5c11\u4eba\u8bf4\u5047\u8bdd\uff0c\u6709\u591a\u5c11\u4eba\u4e0d\u786e\u5b9a\uff0c\u5047\u8bbe\u8bf4\u5047\u8bdd\u7684\u4eba\u6709$cnt$\u4e2a\uff0c\u5e76\u6709$ran$\u4e2a\u4eba\u4e0d\u786e\u5b9a\uff0c\u90a3\u4e48\u5f53\u8981\u6c42\u8bf4\u5047\u8bdd\u7684\u4eba\u6570\u5728$[cnt,cnt+ran]$\u8303\u56f4\u5185\u5c31\u5408\u6cd5\u3002\n\n\u5982\u679c\u4e00\u4e2a\u7f6a\u72af\u88ab\u591a\u6b21\u786e\u5b9a\uff0c\u662f\u4e0d\u4f1a\u5bf9\u7b54\u6848\u9020\u6210\u989d\u5916\u5f71\u54cd\u7684\uff0c\u4f46\u662f\u5f53\u786e\u5b9a\u4e00\u4e2a\u7f6a\u72af\u65f6\u53d1\u73b0\u524d\u9762\u5df2\u7ecf\u786e\u5b9a\u4e00\u4e2a\u4eba\u4e86\uff0c\u6b64\u65f6\u5c31\u8981\u8f93\u51fa`Cannot Determine`\u4e86\u3002\u5f53\u7a0b\u5e8f\u7ed3\u675f\u65f6\u8fd8\u6ca1\u6709\u627e\u5230\u4e00\u4e2a\u7f6a\u72af\uff0c\u5219\u8f93\u51fa`Impossible`\u3002\u627e\u5230\u7f6a\u72af\u4e86\u8f93\u51fa\u540d\u5b57\u5373\u53ef\u3002\n\n`stl`\u8fd8\u662f\u975e\u5e38\u65b9\u4fbf\u7684\uff0c`std::string`\u7528\u6765\u5b58\u540d\u5b57\u5e76\u8fdb\u884c\u5b57\u7b26\u4e32\u5904\u7406\uff1b`std::map`\u7528\u6765\u6620\u5c04\u4eba\u540d\uff1b`std::vector`\u7528\u6765\u5b58\u6bcf\u4e2a\u4eba\u8bf4\u7684\u8bdd\u3002\u4e0d\u8fc7\u8fd9\u4e2a\u9898\u6709\u4e00\u4e2a\u6bd4\u8f83\u5751\u7684\u5730\u65b9\uff0c\u5fc5\u987b\u8981\u786e\u5b9a\u4e00\u4e2a\u4eba\u8bf4\u7684\u4e00\u53e5\u8bdd**\u6bcf\u4e2a\u5355\u8bcd**\u90fd\u5408\u6cd5\u540e\uff0c\u624d\u80fd\u628a\u8fd9\u6574\u53e5\u8bdd\u5f53\u4f5c\u5408\u6cd5\u7684\u3002`&&`\u4e00\u5b9a\u8981\u6ce8\u610f\u5355\u8bcd\u540e\u9762\u7684\u5192\u53f7\u548c\u53e5\u53f7\uff01\n\n## Code\uff1a\n\u4ee5\u524d\u4ee5\u4e3a\u7801\u91cf\u5f88\u5927\uff0c\u4f46\u662f\u53ea\u8981\u6ce8\u610f\u7ec6\u8282\uff0c\u6761\u7406\u6e05\u6670\uff0c$\\sout{130}$~~\u884c~~\u662f\u5f88\u5bb9\u6613\u5199\u51fa\u6765\u7684\u3002\n\n```cpp\n#include<iostream>\n#include<map>\n#include<vector>\n#include<cstdio>\nusing namespace std;\nmap<string,int> per;//\u5b58\u4eba\u540d\nstring nm[25];\nmap<string,int> day;//\u6620\u5c04\u65e5\u671f\nstruct sta\n{\n    int u;//u\u8868\u793a\u4e3b\u8bed\n    bool to;//0\u8868\u793a\u7f6a\u72af\uff0c1\u8868\u793a\u65e5\u671f\n    bool is;//\u8868\u793a\u80af\u5b9a\u6216\u5426\u5b9a\n    sta(int u,bool to,bool is)\n    {\n        this->u=u;\n        this->to=to;\n        this->is=is;\n    }\n    sta(){}\n};\nvector<sta> v[25];\nchar asdfghjkl[1000];//\u7528\u6765\u8bfb\u5e9f\u6389\u7684\u8bed\u53e5\nint main()\n{\n    int n,m,p;\n    cin>>n>>m>>p;\n    string s;\n    for(int i=1;i<=n;++i)\n    {\n        cin>>s;\n        per[s]=i;\n        nm[i]=s;\n    }\n    per[\"Today\"]=n+1;\n    day[\"Monday.\"]=1;//\u53e5\u53f7\u662f\u56e0\u4e3a\u7b54\u6848\n    day[\"Tuesday.\"]=2;\n    day[\"Wednesday.\"]=3;\n    day[\"Thursday.\"]=4;\n    day[\"Friday.\"]=5;\n    day[\"Saturday.\"]=6;\n    day[\"Sunday.\"]=7;\n    for(int i=1;i<=p;++i)\n    {\n        cin>>s;\n        s=s.substr(0,s.size()-1);//\u81ea\u52a8\u53bb\u6389\n        int t=per[s];\n        cin>>s;\n        int u=per[s];\n        if(u<=n)//\u8868\u793a\u4eba\u540d\n        {\n            cin>>s;\n            if((u&&s!=\"is\")||(!u&&s!=\"am\"))\n            {\n                gets(asdfghjkl);\n                continue;\n            }\n            if(!u)\n                u=t;\n            cin>>s;\n            if(s==\"not\")\n            {\n                cin>>s;\n                if(s==\"guilty.\")\n                    v[t].push_back(sta(u,0,0));\n            }\n            else if(s==\"guilty.\")\n                v[t].push_back(sta(u,0,1));\n        }\n        else if(u==n+1)//\u8868\u793a\u65e5\u671f\n        {\n            cin>>s;\n            if(s!=\"is\")\n                continue;\n            cin>>s;\n            if(day[s])\n                v[t].push_back(sta(day[s],1,1));\n        }\n        else\n            gets(asdfghjkl);\n    }\n    string ans=\"\";\n    //\u679a\u4e3e\u8c01\u662f\u7f6a\u72af\n    for(int i=1;i<=n;++i)\n    {\n        //\u679a\u4e3e\u4eca\u5929\u661f\u671f\u51e0\n        for(int j=1;j<=7;++j)\n        {\n            int flag=0,cnt=n,ran=0;//ran\u8868\u793a\u6ce2\u52a8\u8303\u56f4\n            for(int k=1;!flag&&k<=n;++k)\n            {\n                vector<sta>::iterator it=v[k].begin();\n                if(!v[k].size())\n                {\n                    ++ran;\n                    continue;\n                }\n                sta tmp=*it;\n                bool rea;\n                if(tmp.to)\n                    rea=(tmp.u==j);\n                else\n                    rea=((tmp.u==i)^(!tmp.is));\n                ++it;\n                for(;!flag&&it!=v[k].end();++it)\n                {\n                    if(it->to)\n                    {\n                        if(rea!=(it->u==j))\n                            flag=1;\n                    }\n                    else\n                    {\n                        if(rea==((it->u==i)^it->is))\n                            flag=1;\n                    }\n                }\n                cnt-=rea;\n            }\n            if(!flag&&cnt>=m&&cnt-ran<=m)\n            {\n                if(ans==\"\")\n                    ans=nm[i];\n                else if(ans!=nm[i])\n                {\n                    cout<<\"Cannot Determine\"<<endl;\n                    return 0;\n                }\n            }\n        }\n    }\n    if(ans==\"\")\n        cout<<\"Impossible\"<<endl;\n    else\n        cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1546426205,
        "uid": 63539,
        "name": "wjyyy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1039 \u3010\u4fa6\u63a2\u63a8\u7406\u3011"
    },
    {
        "content": "#\u5927\u5bb6\u4e0d\u8981\u88ab\u4f53\u9762\u5413\u5230\uff0c\u5176\u5b9e\u8fd9\u9898\u4e0d\u7b97\u5f88\u96be\n\n##\u603b\u4f53\u601d\u8def\n\n\u9996\u5148\u662f\u8bfb\u5165\uff0c\u6211\u91c7\u7528\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u6765\u4fdd\u5b58\u8bc1\u8a00\uff0c\u7b2c\u4e00\u7ef4\u662f\u4eba\u540d\uff0c\u7b2c\u4e8c\u7ef4\u8868\u793a\u6b64\u4eba\u8bf4\u7684\u7b2c\u51e0\u53e5\u8bdd\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u8fdb\u884c\u679a\u4e3e\uff0c\u7b2c\u4e00\u91cd\u5faa\u73af\u679a\u4e3e\u4eba\u540d\uff081~m\uff09\uff0c\u7b2c\u4e8c\u91cd\u5faa\u73af\u679a\u4e3e\u661f\u671f\u51e0\uff081~7\uff09\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u679a\u4e3e\uff0c\u6211\u4eec\u8fdb\u884c\u4e24\u6b21\u5224\u65ad\uff1a\u7b2c\u4e00\u4e2a\u5224\u65ad\u662f\u5224\u65ad\u662f\u5426\u6709\u4eba\u65e2\u8bf4\u4e86\u771f\u8bdd\u53c8\u8bf4\u4e86\u5047\u8bdd\uff08\u9898\u76ee\u4e2d\u6709\u8c08\u5230\u8bf4\u4e00\u4e2a\u4eba\u8981\u4e48\u5168\u90e8\u8bf4\u771f\u8bdd\uff0c\u8981\u4e48\u5168\u90e8\u8bf4\u5047\u8bdd\uff09\uff0c\u51fa\u73b0\u4e86\u8fd9\u79cd\u60c5\u51b5\u53ef\u4ee5\u76f4\u63a5\u8bf4\u660e\u679a\u4e3e\u6761\u4ef6\u4e0d\u6210\u7acb\uff1b\u7b2c\u4e8c\u4e2a\u5224\u65ad\u662f\u5224\u65ad\u8bf4\u5047\u8bdd\u7684\u4eba\u6570\u662f\u5426\u4e3an\u4e2a\u3002\u5982\u679c\u4ee5\u4e0a\u4e24\u4e2a\u5224\u65ad\u90fd\u6210\u7acb\uff0c\u5219\u53ef\u4ee5\u8ba4\u5b9a\u8fd9\u4e2a\u679a\u4e3e\u6761\u4ef6\u662f\u4e00\u4e2a\u89e3\u3002\n\n##\u7ec6\u8282\n\n- \u8bfb\u5165\n\n\u6211\u5728\u8fd9\u91cc\u88ab\u5751\u6b7b\u4e86\uff0c\u4e5f\u8bb8\u662f\u6211\u83dc\u5427\uff0cgetline\u3001gets\u3001getchar\u5c45\u7136\u5168\u90e8\u51fa\u4e86\u83ab\u540d\u9519\u8bef\u3002\u597d\u5427\uff0c\u6211\u6700\u540e\u9009\u62e9\u4e86cin\uff0c\u5c06\u8bc1\u8a00\u4e00\u4e2a\u4e00\u4e2a\u5355\u8bcd\u8bfb\u5165\uff0c\u9047\u5230\u6807\u70b9\u7b26\u53f7\u5219\u9000\u51fa\u3002\u5177\u4f53\u53c2\u89c1gl\u51fd\u6570\u3002\n\n- \u5e9f\u8bdd\u7684\u5904\u7406\n\n\u56e0\u4e3a\u6709\u4e9b\u4eba\u4f1a\u8bf4\u5e9f\u8bdd\uff0c\u800c\u8fd9\u4e9b\u5e9f\u8bdd\u6ca1\u6709\u4efb\u4f55\u5b9e\u9645\u610f\u4e49\uff0c\u6545\u6211\u4eec\u5e94\u8be5\u820d\u5f03\u5e9f\u8bdd\u3002\u6211\u5199\u4e86\u4e00\u4e2acrap\u51fd\u6570\uff0c\u5224\u65ad\u662f\u5426\u4e3a\u5e9f\u8bdd\uff0c\u8fd9\u4e2a\u51fd\u6570\u4ee3\u7801\u6e05\u6670\u660e\u4e86\uff0c\u8bf7\u81ea\u884c\u9605\u8bfb\u3002\u5982\u679c\u662f\u5e9f\u8bdd\u5219\u76f4\u63a5\u6452\u5f03\u3002\n\n- \u5224\u65ad\u4e00\n\n\u6211\u4e0a\u9762\u8bf4\u5230\u7684\u5224\u65ad\u4e00\u4f53\u73b0\u5728\u6211\u4ee3\u7801\u91cc\u7684judge\u51fd\u6570\u4e2d\u3002\u679a\u4e3e\u4eba\u540d\uff0c\u6bcf\u9047\u5230\u4e00\u53e5\u5047\u8bdd\uff0cans++\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff0cans==0\u8868\u793a\u6b64\u4eba\u5168\u8bf4\u771f\u8bdd\uff0cans==\u6b64\u4eba\u603b\u5171\u8bf4\u7684\u8bdd\u8868\u793a\u6b64\u4eba\u5168\u90e8\u8bf4\u5047\u8bdd\u3002\u5047\u5982ans==\u5176\u5b83\u6570\uff0c\u5219\u76f4\u63a5\u8ba4\u4e3a\u4e0e\u9898\u8bbe\u51b2\u7a81\uff0c\u679a\u4e3e\u6761\u4ef6\u4e0d\u6210\u7acb\u3002\n\n- \u5224\u65ad\u4e8c\n\n\u6211\u4e0a\u9762\u8bf4\u5230\u7684\u5224\u65ad\u4e8c\u4f53\u73b0\u5728\u6211\u4ee3\u7801\u91cc\u7684check\u51fd\u6570\u4e2d\u3002\u679a\u4e3e\u4eba\u540d\uff0c\u9047\u5230\u5047\u8bdd\uff0c\u5219\u8bf4\u5047\u8bdd\u7684\u4eba\u6570++\uff0c\u7136\u540e\u76f4\u63a5break\u51fa\u53bb\u5224\u65ad\u4e0b\u4e00\u4e2a\u4eba\u3002\u5982\u679c\u8bf4\u5047\u8bdd\u7684\u4eba\u6570==n,\u5219\u679a\u4e3e\u6761\u4ef6\u6210\u7acb\u3002\u8fd9\u91cc\u6709\u4e2a\u7ec6\u8282\uff0c\u5c31\u662f\u8981\u8003\u8651\u6ca1\u8bf4\u8bdd\u7684\u4eba\uff0c\u8fd9\u4e2a\u7ec6\u8282\u7684\u5904\u7406\u65b9\u6cd5\u53ef\u4ee5\u770b\u4e00\u4e0b\u6211\u7684\u4ee3\u7801\u3002\n\n\n##\u5949\u4e0aC++\u4ee3\u7801\uff1a\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<map>\nusing namespace std;\nmap<string,int> name;\nstring s,ss;\nstring names[25];\nstring testimony[25][105];\nint num[25];\nint n,m,p;\nbool crap(string tmp)\n{\n    if(tmp==\" I am guilty.\") return 0;\n    if(tmp==\" I am not guilty.\") return 0;\n    if(tmp==\" Today is Monday.\") return 0;\n    if(tmp==\" Today is Tuesday.\") return 0;\n    if(tmp==\" Today is Wednesday.\") return 0;\n    if(tmp==\" Today is Thursday.\") return 0;\n    if(tmp==\" Today is Friday.\") return 0;\n    if(tmp==\" Today is Saturday.\") return 0;\n    if(tmp==\" Today is Sunday.\") return 0;\n    for(int i=1;i<=m;i++)\n        if(tmp==\" \"+names[i]+\" is guilty.\"||tmp==\" \"+names[i]+\" is not guilty.\") return 0;\n    return 1;\n}\nbool judge(int guilty,int day)\n{\n    int ans;\n    for(int i=1;i<=m;i++)\n    {\n        ans=0;\n        for(int j=1;j<=num[i];j++)\n        {\n            if(testimony[i][j]==\" I am guilty.\"&&guilty!=i) {ans++;}\n            if(testimony[i][j]==\" I am not guilty.\"&&guilty==i) {ans++;}\n            if(testimony[i][j]==\" Today is Monday.\"&&day!=1) {ans++;}\n            if(testimony[i][j]==\" Today is Tuesday.\"&&day!=2) {ans++;}\n            if(testimony[i][j]==\" Today is Wednesday.\"&&day!=3) {ans++;}\n            if(testimony[i][j]==\" Today is Thursday.\"&&day!=4) {ans++;}\n            if(testimony[i][j]==\" Today is Friday.\"&&day!=5) {ans++;}\n            if(testimony[i][j]==\" Today is Saturday.\"&&day!=6) {ans++;}\n            if(testimony[i][j]==\" Today is Sunday.\"&&day!=7) {ans++;}\n            for(int k=1;k<=m;k++)\n            {\n                if(testimony[i][j]==\" \"+names[k]+\" is guilty.\"&&guilty!=k) {ans++;}\n                if(testimony[i][j]==\" \"+names[k]+\" is not guilty.\"&&guilty==k) {ans++;}\n            }\n        }\n        if(ans!=num[i]&&ans!=0) return 0;\n    }\n    return 1;\n}\nint check(int guilty,int day)\n{\n    int ans=0;\n    bool twice;\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=num[i];j++)\n        {\n            twice=0;\n            if(testimony[i][j]==\" I am guilty.\"&&guilty!=i) {ans++;break;}\n            if(testimony[i][j]==\" I am not guilty.\"&&guilty==i) {ans++;break;}\n            if(testimony[i][j]==\" Today is Monday.\"&&day!=1) {ans++;break;}\n            if(testimony[i][j]==\" Today is Tuesday.\"&&day!=2) {ans++;break;}\n            if(testimony[i][j]==\" Today is Wednesday.\"&&day!=3) {ans++;break;}\n            if(testimony[i][j]==\" Today is Thursday.\"&&day!=4) {ans++;break;}\n            if(testimony[i][j]==\" Today is Friday.\"&&day!=5) {ans++;break;}\n            if(testimony[i][j]==\" Today is Saturday.\"&&day!=6) {ans++;break;}\n            if(testimony[i][j]==\" Today is Sunday.\"&&day!=7) {ans++;break;}\n            for(int k=1;k<=m;k++)\n            {\n                if(testimony[i][j]==\" \"+names[k]+\" is guilty.\"&&guilty!=k) {ans++;twice=1;break;}\n                if(testimony[i][j]==\" \"+names[k]+\" is not guilty.\"&&guilty==k) {ans++;twice=1;break;}\n            }\n            if(twice==1) break;\n        }\n    if(ans!=n)\n        for(int i=1;i<=m;i++)\n        {\n            if(num[i]==0) ans++;\n            if(ans==n) break;\n        }\n    return ans;\n}\nint read()\n{\n    char c=getchar();\n    int ans=0;\n    while(c<'0'||c>'9') c=getchar();\n    while(c>='0'&&c<='9')\n    {\n        ans=ans*10+c-48;\n        c=getchar();\n    }\n    return ans;\n}\nstring gl()\n{\n    string sss,c;\n    do\n    {\n        cin>>c;\n        sss=sss+\" \"+c;\n    }\n    while(c[c.size()-1]!='.'&&c[c.size()-1]!='?'&&c[c.size()-1]!='!'&&c[c.size()-1]!=',');\n    return sss;\n}\nint main()\n{\n    m=read();n=read();p=read();\n    for(int i=1;i<=m;i++)\n    {\n        cin>>s;\n        name[s]=i;\n        names[i]=s;\n    }\n    for(int i=1;i<=p;i++)\n    {\n        cin>>s;\n        s=s.substr(0,s.size()-1);\n        ss=gl();\n        if(crap(ss)) continue;\n        num[name[s]]++;\n        testimony[name[s]][num[name[s]]]=ss;\n    }\n    int flag=0;\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=7;j++)\n            if(check(i,j)==n&&judge(i,j))\n            {\n                if(flag!=0)\n                {\n                    cout<<\"Cannot Determine\"<<endl;\n                    return 0;\n                }\n                else\n                {\n                    flag=i;\n                    break;\n                }\n            }\n    if(flag==0) cout<<\"Impossible\"<<endl; else cout<<names[flag]<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1509965199,
        "uid": 20158,
        "name": "Ebola",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1039 \u3010\u4fa6\u63a2\u63a8\u7406\u3011"
    },
    {
        "content": "### \u6ce8\u610f\u6d1b\u8c37\u548ccodevs\u662fLinux\u7684\uff0cVijos\u662fWindows\u7684\uff0c\u6240\u4ee5\u6d1b\u8c37\u7684\u6362\u884c\u7b26\u662f'/r'\uff0c\u6240\u4ee5getline(),gets(),getchar(),\u90fd\u53ef\u80fd\u6709\u4e00\u5b9a\u95ee\u9898\n\n\u4e8e\u662f\u8fd9\u4e2a\u53ef\u4ee5\u89e3\u51b3\u4e00\u5207\n```\n    char ch=getchar();\n    while(ch==10)ch=getchar();getchar();\n```\n\u89e3\u51b3'\\r'\uff0c\u591a\u4f59\u7a7a\u683c\uff0c\u6362\u884c\u7b26\u4e00\u7cfb\u5217\u95ee\u9898\n\n\u6765\u81ea[jvlao](https://www.luogu.org/space/show?uid=42857)\n\n\u5f88\u68d2\u68d2\uff01\uff01\uff01\u7684\u64cd\u4f5c  \u5988\u5988\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u6211\u5361\u8bfb\u5165\u4e86\uff01\uff01\n\n\u5faa\u73af\u5f88\u591a\u6ce8\u610f\n## \u601d\u8def\n### 1. \u8bfb\u5165\u5904\u7406\n     \n          \u9996\u5148\u4e00\u770b\u5c31\u77e5\u9053\u662f\u5927\u6a21\u62df\uff0c\u6240\u4ee5\u840c\u65b0\u745f\u745f\u53d1\u6296\u60f3\u4e86\u5f88\u4e45\u8981\u4e0d\u8981\u5199\n          \u4ed4\u7ec6\u4e00\u60f3\u597d\u50cf\u7565\u6709\u601d\u8def\n          \u9996\u5148\u89e3\u51b3\u8bfb\u5165\u5904\u7406\uff0c\u6211\u9009\u62e9\u7684\u662f\u7528\u4e8c\u7ef4\u6570\u7ec4\u5b58\u50a8\u6bcf\u4eba\u8bf4\u4e86\u4e9b\u4ec0\u4e48\uff0c\u8fd9\u6837\u8bb0\u5b8c\u4e4b\u540e\u5c31\u5f88\u65b9\u4fbf\u4e86\uff0c\u8fd9\u5927\u6982\u662f\u6838\u5fc3\u64cd\u4f5c\uff0c\u5177\u4f53\u770b\u4ee3\u7801\uff0c\u6211\u7528\u7684\u662f\u6253\u8868strcmp\uff0c\u622a\u53d6\u90e8\u5206\u4e32\u6765\u5224\u5b9a\n          \n### 2. \u7136\u540e\u5982\u4f55\u627e\u51fa\u72af\u4eba\n\n          \u6211\u662f\u5148\u679a\u4e3e\u72af\u4eba\u548c\u661f\u671f\u51e0\uff0c\u8fd9\u6837\u5224\u5b9a\u8bf4\u5047\u8bf4\u771f\u8bdd\u4f1a\u65b9\u4fbf\u5f88\u591a\uff0c\u4f9d\u636e\u72af\u4eba\u6765\u770b\u662f\u5426\u8bf4\u771f\u8bdd\uff0c\u5982\u6211\u7684guilty\u6570\u7ec4\uff1b\u518d\u770b\u662f\u5426\u4e0e\u4eca\u5929\u661f\u671f\u51e0\u76f8\u7b26\uff0c\u5982\u6211\u7684day\u6570\u7ec4\u3002\n          \u7136\u540e\u76f4\u63a5\u7edf\u8ba1\u662f\u5426\u7b26\u5408\u9898\u76ee\u5c31\u884c\n          \n## \u5751\u70b9\n\n          \u8fd9\u4e48\u770b\u6765\u8fd9\u9898\u6ca1\u5565\u96be\u5ea6\u5417\uff01\n          \u7136\u800c\u770b\u770b\u8ba8\u8bba\uff0c\u53d1\u73b0\u4e8b\u60c5\u5e76\u6ca1\u6709\u90a3\u4e48\u7b80\u5355\n          \u9996\u5148\u6709\u4e00\u4e2a\u4eba\u53c8\u8bf4\u81ea\u5df1\u6709\u7f6a\u53c8\u8bf4\u81ea\u5df1\u6ca1\u7f6a\u3002\u3002\u3002\u3002\n          \u6211\u597d\u50cf\u76f4\u63a5\u5224\u5b9aimpossible\u4e86\n          \u8fd8\u6709\u4e00\u4f4d\u53ebGUILTY\u7684\u540c\u5fd7\u4ee5\u53ca\u4e00\u4f4d\u53ebI\u7684\u540c\u5fd7\n          \u8fd8\u6709\u53ebMONDAY-SUNDAY\u7684\u540c\u5fd7\n          \u4ee5\u53ca\u5f88\u591a\u5f88\u591a\u6709\u610f\u601d\u7684\u4e1c\u897f\uff0c\u5927\u5bb6\u53ef\u4ee5\u770b\u770b\u8ba8\u8bba\n          \u518d\u5c31\u662f\u6709\u4e00\u53e5\u8bdd\u6ca1\u8bf4\u7684\uff0c\u53ef\u4ee5\u770b\u505a\u8bf4\u5047\u8bdd\u6216\u8005\u8bf4\u771f\u8bdd\uff0c\u968f\u610f\u5904\u7406 \u8fd9\u662f\u5c31\u662f\u6211\u7684zero\uff0c\u5728\u7edf\u8ba1\u65f6\u9700\u8981\u679a\u4e3e\u4e00\u4e0b\u53ef\u80fd\u6027\n          \u8fd8\u6709\u4e92\u76f8\u77db\u76fe\u7684\uff0c\u5982\u5728Monday B\u662f\u72af\u4eba\u7684\u5047\u8bbe\u4e0b\uff1a\n          A\uff1aToday is Tuesday.\n          A: C is not guilty.\n          \u867d\u5728\u661f\u671f\u6761\u4ef6\u4e0bA\u662f\u5047\uff0c\u4f46\u7b2c\u4e8c\u53e5\u53c8\u662f\u771f\u8bdd\uff0c\u6545\u53c8\u5047\u53c8\u771f\n          \u77db\u76fe\uff0c\u4e0d\u6210\u7acb\u3002\n          \u8840\u7684\u6559\u8bad\uff0c\u5982Test3 Test8\n \n## \u4ee3\u7801 \n\n- 1. \u8bfb\u5165\u5904\u7406\uff08\u6700\u6838\u5fc3\u6700\u957f\u7684\u90e8\u5206\uff09\n\n```\nvoid update()\n{\n    int len=strlen(s),cnt=0,cnt2=0;\n    int lena;//\u7b2c\u51e0\u4f4d\u540d\u5b57\u7ed3\u675f\n    int ren=0,ren2=0;//\n    char t[30],name2[300];//\u56e0\u4e3a\u6211\u7528\u7684\u90fd\u662fstrcmp\u5224\u5b9a\u9700\u8981\u63d0\u53d6\u90e8\u5206\u5b50\u4e32\u6765\u76f4\u63a5\u5224\u65ad\n    memset(t,0,sizeof(t));//\u8bbamemset\u7684\u91cd\u8981\u6027emmmm\n    memset(name2,0,sizeof(name2));\n    for(int i=0;i<len;i++)\n    {\n        if(s[i]==':'){lena=i-1;break;}\n        else name2[cnt2++]=s[i];//\u5b50\u4e32\u622a\u53d6\u4e00\n    }\n    for(int i=1;i<=m;i++)//\u5224\u65ad\u662f\u8c01\u8bf4\u7684\n    {\n        int lenb=strlen(name[i]),flag=0;\n        if(lenb!=lena+1)continue;\n        else\n        {\n           if(!strcmp(name2,name[i]))\n              {ren=i;break;}\n        }\n    }\n    if(!ren)return;//\u82e5\u6ca1\u5224\u5b9a\u5230\uff0c\u76f4\u63a5\u9000\u51fa\uff08\u65e0\u7528\u4fe1\u606f\n    for(int i=lena+3;i<len;i++)\n        if(s[i]!='\\r')t[cnt++]=s[i];//\u622a\u53d6\u4e8c\uff0c\u6ce8\u610f\u662f'\\r'\u4e0d\u662f'\\n'\n    int ff=0;\n    for(int i=0;i<=8;i++)\n    {\n        if(!strcmp(t,ch[i]))\n           {\n               ff=1;\n               if(i==0)guilty[ren][ren]=1;//\u8bb0\u5f55\u6b64\u4eba\u8bf4\u8c01\u6709\u65e0\u7f6a\uff0c\u8fd9\u91cc\u6211\u76841\u8868\u793a\u6709\u7f6a\uff0c2\u4e3a\u65e0\u7f6a\n               else if(i==1)guilty[ren][ren]=2;\n               else day[ren][i-1]=1;//\u8bb0\u5f55\u6b64\u4eba\u8bf4\u51e0\u5929\u661f\u671f\u51e0\n               break;\n           }\n\n    }\n    if(!ff)//\u7ee7\u7eed\u8fdb\u4e00\u6b65\u5224\u5b9a\n    {\n        int lenx;\n        char t2[300],coc=0,t3[20],tot=0;\n        memset(t2,0,sizeof(t2));\n        memset(t3,0,sizeof(t3));\n        for(int i=0;i<strlen(t);i++)\n        {\n            if(t[i]==' '){lenx=i-1;break;}\n            else t2[coc++]=t[i];//\u622a\u53d6\u4e09\n        }\n        for(int i=1;i<=m;i++)\n        {\n            if(lenx+1!=strlen(name[i]))continue;\n            else if(!strcmp(t2,name[i])){ren2=i;break;}\n        }\n        if(!ren2)return;//\u82e5\u6ca1\u5224\u5b9a\u5230\uff0c\u76f4\u63a5\u9000\u51fa\uff08\u65e0\u7528\u4fe1\u606f\n        for(int i=lenx+2;i<strlen(t);i++)\n            if(t[i]!='\\r')t3[tot++]=t[i];//\u622a\u53d6\u56db \u6ce8\u610f\u662f'\\r'\u4e0d\u662f'\\n'\n        for(int i=0;i<2;i++)\n        {\n            if(!strcmp(t3,ch2[i]))\n            {\n                if(i==0)guilty[ren][ren2]=1;\n                else guilty[ren][ren2]=2;\n                break;\n            }\n        }\n        memset(t2,0,sizeof(t2));\n        memset(t3,0,sizeof(t3));\n\n    }\n\n}\n```\n\n- \u627e\u51fa\u72af\u4eba\uff08\u5751\u70b9\u6700\u591a\uff09\n\n```\nint check(int peo,int today)//\u679a\u4e3e\u7f6a\u72af \u661f\u671f\u51e0\n{\n    memset(jia,0,sizeof(jia));\n    int fake=0;//\u4e00\u5b9a\u8bf4\u5047\u8bdd\u7684\u4eba\n    int zero=0;//\u6ca1\u8bf4\u8fc7\u4e00\u53e5\u8bdd\u7684\u4eba\uff0c\u53ef\u4ee5\u662f\u771f\u662f\u5047\uff0c\u968f\u610f\u6b3a\u8d1f\n    for(int i=1;i<=m;i++)\n    {\n       int g=0,gg=0;//\u5224\u5b9a\u662f\u5426\u6ca1\u8bf4\u8bdd\n       if(guilty[i][peo]==2)jia[i]=1;//\u627f\u8ba4\u7f6a\u72af\u65e0\u7f6a\uff0c\u8bf4\u5047\u8bdd\n       if(guilty[i][peo]==1)zhen[i]=1;//\u6709\u7f6a\uff0c\u771f\u8bdd\n       //\u597d\u50cf\u6709\u53c8\u8bf4\u81ea\u5df1\u6709\u7f6a\u53c8\u8bf4\u81ea\u5df1\u65e0\u7f6a\u7684\u4eba\u3002\u3002\u3002\u3002\u3002\u3002\n       if(jia[i])continue;\n       for(int j=1;j<=m;j++)\n           if(guilty[i][j]==1&&j!=peo){jia[i]=1;break;}//\u82e5\u6709\u6307\u8bc1\u522b\u4eba\u662f\u72af\u4eba\u7684\uff0c\u5047\n        for(int j=1;j<=m;j++)\n           if(guilty[i][j]==2&&j!=peo){zhen[i]=1;break;}//\u82e5\u6709\u6307\u8bc1\u522b\u4eba\u4e0d\u662f\u72af\u4eba\u7684\uff0c\u771f\n        //\u5173\u4e8e\u95ee\u5565\u5224\u4e24\u904d\uff0c\n       if(jia[i])continue;\n       for(int j=1;j<=7;j++)\n           if(day[i][j]==1&&j!=today){jia[i]=1;break;}//\u4e0d\u7b26\u5408\u4eca\u5929\u661f\u671f\u51e0\u7684\uff0c\u5047\n       for(int j=1;j<=m;j++)\n       if(guilty[i][j]==1||guilty[i][j]==2){g=1;break;}//\u5224\u5b9a\u662f\u5426\u6ca1\u8bf4\u8bdd\n       for(int j=1;j<=7;j++)\n       if(day[i][j]==1){gg=1;break;}//\u5224\u5b9a\u662f\u5426\u6ca1\u8bf4\u8bdd\n       if(zhen[i]==1&&jia[i]==1)return 0;\n       if(!gg&&!g)zero++;//\u6ca1\u8bf4\u8bdd\uff0czero++\n\n    }\n\n    for(int i=1;i<=m;i++)\n        if(jia[i])fake++;\n    for(int i=0;i<=zero;i++)\n    {\n        if(fake+i==n)return 1;//\u6ca1\u8bf4\u8fc7\u4e00\u53e5\u8bdd\u7684\u4eba\uff0c\u53ef\u4ee5\u662f\u771f\u662f\u5047\uff0c\n    }\n   return 0;\n}\n```\n- \u4e3b\u51fd\u6570\n\n```\nint main()\n{\n    scanf(\"%d%d%d\",&m,&n,&p);\n    for(int i=1;i<=m;i++)\n        scanf(\"%s\",name[i]);\n     char ch=getchar();//\u56e0\u4e3aluogu\u8bfb\u5165\u5f88\u5751\uff0c\u6240\u4ee5\u8fd9\u4e24\u53e5\u5f88\u6709\u5fc5\u8981\uff0c\u89e3\u51b3'\\r'\uff0c\u591a\u4f59\u7a7a\u683c\uff0c\u6362\u884c\u7b26\u4e00\u7cfb\u5217\u95ee\u9898\n    while(ch==10)ch=getchar();getchar();\n    for(int i=1;i<=p;i++)\n    {\n       gets(s);\n        update(i);\n    }\n    //\u4ee5\u4e0a\u64cd\u4f5c\u540e\uff0c\u6211\u4eec\u5df2\u7ecf\u8bb0\u5f55\u4e86\u8c01\u8bf4\u4eca\u5929\u661f\u671f\u51e0\uff0c\u8c01\u8bf4\u8c01\u6709\u7f6a\u4ee5\u53ca\u7b5b\u6389\u65e0\u7528\u4fe1\u606f\n    for(int i=1;i<=m;i++)//\u679a\u4e3e\u8c01\u662f\u7f6a\u72af\n    {\n        for(int j=1;j<=7;j++)//\u679a\u4e3e\u4eca\u5929\u661f\u671f\u51e0\n        {\n            if(check(i,j))\n            {\n\n                if(tot1>1&&i!=ans2[cocc]){printf(\"Cannot Determine\");return 0;}//\u82e5\u6709\u591a\u4e2a\uff0c\u8f93\u51fa\n                if(i!=ans2[cocc])//\u7b2c\u4e00\u6b21\u8bb0\u5f55\u7b54\u6848\n                {\n                     tot1++;\n                    strcpy(ans,name[i]);\n                    cocc++;\n                    ans2[cocc]=i;\n                }\n            }\n        }\n    }\n    if(!tot1)printf(\"Impossible\");//\u6ca1\u67e5\u5230\u7b54\u6848\n    else printf(\"%s\",ans);\n\n     return 0;\n}\n\n```\n- \u603b\u4ee3\u5417\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nchar ch[20][20]=\n      {\n          \"I am guilty.\",//0\n          \"I am not guilty.\",//1\n          \"Today is Monday.\",//2\n          \"Today is Tuesday.\",//3\n          \"Today is Wednesday.\",//4\n          \"Today is Thursday.\",//5\n          \"Today is Friday.\",//6\n          \"Today is Saturday.\",//7\n          \"Today is Sunday.\",//8\n      };//\u8868\u4e00\nchar ch2[10][20]=\n     {\n         \"is guilty.\",\n         \"is not guilty.\",\n\n     };//\u8868\u4e8c\nint sum,guilty[30][30];//\u8bb0\u5f55\u8c01\u8bf4\u8c01\u6709\uff0c\u65e0\u7f6a\nint day[30][9];//\u8bb0\u5f55\u8c01\u8bf4\u4eca\u5929\u661f\u671f\u51e0\nint n,m,p;\nchar name[30][500],s[10001],ans[300];//\u540d\u5b57\uff0c\u8f93\u5165\u7684\u4e32\uff0c\u7b54\u6848\u8bb0\u5f55\nint jia[40],zhen[40];//\u771f\u5047\u6570\u7ec4\uff0c\u540e\u9762\u4e00\u4e2a\u7528\u5904\u4e0d\u662f\u5f88\u5927\nvoid update()\n{\n    int len=strlen(s),cnt=0,cnt2=0;\n    int lena;//\u7b2c\u51e0\u4f4d\u540d\u5b57\u7ed3\u675f\n    int ren=0,ren2=0;//\n    char t[30],name2[300];//\u56e0\u4e3a\u6211\u7528\u7684\u90fd\u662fstrcmp\u5224\u5b9a\u9700\u8981\u63d0\u53d6\u90e8\u5206\u5b50\u4e32\u6765\u76f4\u63a5\u5224\u65ad\n    memset(t,0,sizeof(t));//\u8bbamemset\u7684\u91cd\u8981\u6027emmmm\n    memset(name2,0,sizeof(name2));\n    for(int i=0;i<len;i++)\n    {\n        if(s[i]==':'){lena=i-1;break;}\n        else name2[cnt2++]=s[i];//\u5b50\u4e32\u622a\u53d6\u4e00\n    }\n    for(int i=1;i<=m;i++)//\u5224\u65ad\u662f\u8c01\u8bf4\u7684\n    {\n        int lenb=strlen(name[i]),flag=0;\n        if(lenb!=lena+1)continue;\n        else\n        {\n           if(!strcmp(name2,name[i]))\n              {ren=i;break;}\n        }\n    }\n    if(!ren)return;//\u82e5\u6ca1\u5224\u5b9a\u5230\uff0c\u76f4\u63a5\u9000\u51fa\uff08\u65e0\u7528\u4fe1\u606f\n    for(int i=lena+3;i<len;i++)\n        if(s[i]!='\\r')t[cnt++]=s[i];//\u622a\u53d6\u4e8c\uff0c\u6ce8\u610f\u662f'\\r'\u4e0d\u662f'\\n'\n    int ff=0;\n    for(int i=0;i<=8;i++)\n    {\n        if(!strcmp(t,ch[i]))\n           {\n               ff=1;\n               if(i==0)guilty[ren][ren]=1;//\u8bb0\u5f55\u6b64\u4eba\u8bf4\u8c01\u6709\u65e0\u7f6a\uff0c\u8fd9\u91cc\u6211\u76841\u8868\u793a\u6709\u7f6a\uff0c2\u4e3a\u65e0\u7f6a\n               else if(i==1)guilty[ren][ren]=2;\n               else day[ren][i-1]=1;//\u8bb0\u5f55\u6b64\u4eba\u8bf4\u51e0\u5929\u661f\u671f\u51e0\n               break;\n           }\n\n    }\n    if(!ff)//\u7ee7\u7eed\u8fdb\u4e00\u6b65\u5224\u5b9a\n    {\n        int lenx;\n        char t2[300],coc=0,t3[20],tot=0;\n        memset(t2,0,sizeof(t2));\n        memset(t3,0,sizeof(t3));\n        for(int i=0;i<strlen(t);i++)\n        {\n            if(t[i]==' '){lenx=i-1;break;}\n            else t2[coc++]=t[i];//\u622a\u53d6\u4e09\n        }\n        for(int i=1;i<=m;i++)\n        {\n            if(lenx+1!=strlen(name[i]))continue;\n            else if(!strcmp(t2,name[i])){ren2=i;break;}\n        }\n        if(!ren2)return;//\u82e5\u6ca1\u5224\u5b9a\u5230\uff0c\u76f4\u63a5\u9000\u51fa\uff08\u65e0\u7528\u4fe1\u606f\n        for(int i=lenx+2;i<strlen(t);i++)\n            if(t[i]!='\\r')t3[tot++]=t[i];//\u622a\u53d6\u56db \u6ce8\u610f\u662f'\\r'\u4e0d\u662f'\\n'\n        for(int i=0;i<2;i++)\n        {\n            if(!strcmp(t3,ch2[i]))\n            {\n                if(i==0)guilty[ren][ren2]=1;\n                else guilty[ren][ren2]=2;\n                break;\n            }\n        }\n        memset(t2,0,sizeof(t2));\n        memset(t3,0,sizeof(t3));\n\n    }\n}\nint check(int peo,int today)//\u679a\u4e3e\u7f6a\u72af \u661f\u671f\u51e0\n{\n    memset(jia,0,sizeof(jia));\n    int fake=0;//\u4e00\u5b9a\u8bf4\u5047\u8bdd\u7684\u4eba\n    int zero=0;//\u6ca1\u8bf4\u8fc7\u4e00\u53e5\u8bdd\u7684\u4eba\uff0c\u53ef\u4ee5\u662f\u771f\u662f\u5047\uff0c\u968f\u610f\u6b3a\u8d1f\n    for(int i=1;i<=m;i++)\n    {\n       int g=0,gg=0;//\u5224\u5b9a\u662f\u5426\u6ca1\u8bf4\u8bdd\n       if(guilty[i][peo]==2)jia[i]=1;//\u627f\u8ba4\u7f6a\u72af\u65e0\u7f6a\uff0c\u8bf4\u5047\u8bdd\n       if(guilty[i][peo]==1)zhen[i]=1;//\u6709\u7f6a\uff0c\u771f\u8bdd\n       //\u597d\u50cf\u6709\u53c8\u8bf4\u81ea\u5df1\u6709\u7f6a\u53c8\u8bf4\u81ea\u5df1\u65e0\u7f6a\u7684\u4eba\u3002\u3002\u3002\u3002\u3002\u3002\n       if(jia[i])continue;\n       for(int j=1;j<=m;j++)\n           if(guilty[i][j]==1&&j!=peo){jia[i]=1;break;}//\u82e5\u6709\u6307\u8bc1\u522b\u4eba\u662f\u72af\u4eba\u7684\uff0c\u5047\n        for(int j=1;j<=m;j++)\n           if(guilty[i][j]==2&&j!=peo){zhen[i]=1;break;}//\u82e5\u6709\u6307\u8bc1\u522b\u4eba\u4e0d\u662f\u72af\u4eba\u7684\uff0c\u771f\n        //\u5173\u4e8e\u95ee\u5565\u5224\u4e24\u904d\uff0c\n       if(jia[i])continue;\n       for(int j=1;j<=7;j++)\n           if(day[i][j]==1&&j!=today){jia[i]=1;break;}//\u4e0d\u7b26\u5408\u4eca\u5929\u661f\u671f\u51e0\u7684\uff0c\u5047\n       for(int j=1;j<=m;j++)\n       if(guilty[i][j]==1||guilty[i][j]==2){g=1;break;}//\u5224\u5b9a\u662f\u5426\u6ca1\u8bf4\u8bdd\n       for(int j=1;j<=7;j++)\n       if(day[i][j]==1){gg=1;break;}//\u5224\u5b9a\u662f\u5426\u6ca1\u8bf4\u8bdd\n       if(zhen[i]==1&&jia[i]==1)return 0;\n       if(!gg&&!g)zero++;//\u6ca1\u8bf4\u8bdd\uff0czero++\n\n    }\n\n    for(int i=1;i<=m;i++)\n        if(jia[i])fake++;\n    for(int i=0;i<=zero;i++)\n    {\n        if(fake+i==n)return 1;//\u6ca1\u8bf4\u8fc7\u4e00\u53e5\u8bdd\u7684\u4eba\uff0c\u53ef\u4ee5\u662f\u771f\u662f\u5047\uff0c\n    }\n   return 0;\n}\nint tot1=0,cocc=0;\nint ans2[40];\nint main()\n{\n    scanf(\"%d%d%d\",&m,&n,&p);\n    for(int i=1;i<=m;i++)\n        scanf(\"%s\",name[i]);\n     char ch=getchar();//\u56e0\u4e3aluogu\u8bfb\u5165\u5f88\u5751\uff0c\u6240\u4ee5\u8fd9\u4e24\u53e5\u5f88\u6709\u5fc5\u8981\uff0c\u89e3\u51b3'\\r'\uff0c\u591a\u4f59\u7a7a\u683c\uff0c\u6362\u884c\u7b26\u4e00\u7cfb\u5217\u95ee\u9898\n    while(ch==10)ch=getchar();getchar();\n    for(int i=1;i<=p;i++)\n    {\n       gets(s);\n        update();\n    }\n    //\u4ee5\u4e0a\u64cd\u4f5c\u540e\uff0c\u6211\u4eec\u5df2\u7ecf\u8bb0\u5f55\u4e86\u8c01\u8bf4\u4eca\u5929\u661f\u671f\u51e0\uff0c\u8c01\u8bf4\u8c01\u6709\u7f6a\u4ee5\u53ca\u7b5b\u6389\u65e0\u7528\u4fe1\u606f\n    for(int i=1;i<=m;i++)//\u679a\u4e3e\u8c01\u662f\u7f6a\u72af\n    {\n        for(int j=1;j<=7;j++)//\u679a\u4e3e\u4eca\u5929\u661f\u671f\u51e0\n        {\n            if(check(i,j))\n            {\n\n                if(tot1>1&&i!=ans2[cocc]){printf(\"Cannot Determine\");return 0;}//\u82e5\u6709\u591a\u4e2a\uff0c\u8f93\u51fa\n                if(i!=ans2[cocc])//\u7b2c\u4e00\u6b21\u8bb0\u5f55\u7b54\u6848\n                {\n                     tot1++;\n                    strcpy(ans,name[i]);\n                    cocc++;\n                    ans2[cocc]=i;\n                }\n            }\n        }\n    }\n    if(!tot1)printf(\"Impossible\");//\u6ca1\u67e5\u5230\u7b54\u6848\n    else printf(\"%s\",ans);\n\n     return 0;\n}\n\n```\n\n\u603b\u5171172\u884c\uff0c\u51fd\u6570\u6709\u5927\u698215\u4e2a\u5faa\u73af\n\n\u5386\u7ecf\u5343\u8f9b\u4e07\u82e6\u7ec8\u4e8eAC\n\n\u603b\u4e4b\u8fd8\u662f\u6bd4\u8f83\u8003\u9a8c\u7801\u529b\u548c\u7ec6\u5fc3\u7a0b\u5ea6\u7684\u9898\n\n\u53ef\u4ee5\u7801\u7801\u7ec3\u7ec3\u624b\n\n\u611f\u8c22",
        "postTime": 1526715704,
        "uid": 55501,
        "name": "Aoki_\u704f",
        "ccfLevel": 0,
        "title": "\u5927\u6a21\u62df\u2014\u2014\u4fa6\u63a2\u63a8\u7406"
    },
    {
        "content": "\n\n\u5bf9\u5e94\u9898\u76ee\uff1anoip2003\u63d0\u9ad8\u7ec4\\_\u4fa6\u63a2\u63a8\u7406\n\n\n\u4f7f\u7528\u8bed\u8a00\uff1ac++\n\n\n\u4f7f\u7528\u7f16\u8bd1\u5668\uff1adev c++\n\n\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u7a77\u4e3e\u6a21\u62df\n\n\n\u7b97\u6cd5\u8fd0\u884c\u65f6\u95f4\uff1aO(p\\*C(m,n)) + O(m\\*C(m,n)) [\u5176\u4e2dC(m,n)\u662f\u4ecem\u4e2a\u6570\u4e2d\u53d6n\u4e2a\u6570\u7684\u7ec4\u5408\u6570]\n\n\n\u8054\u7cfbQQ\uff1a44561907\n\n\nE-Mail\uff1a44561907@qq.com\n\n\n\u83b7\u5f97\u66f4\u591a\u6587\u7ae0\u8bf7\u8bbf\u95ee\u6211\u7684\u535a\u5ba2\uff1awww.cnblogs.com/sdjl\n\n\n\u5982\u679c\u53d1\u73b0BUG\u6216\u6709\u5199\u5f97\u4e0d\u597d\u7684\u5730\u65b9\u8bf7\u53d1\u90ae\u4ef6\u544a\u8bc9\u6211:)\n\n\n\n =========\u9898\u76ee\u89e3\u6790========\n\n\u5728\u505a\u6b64\u9898\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u641e\u6e05\u695a\u51e0\u70b9\uff0c\u8fd9\u662f\u6211\u4ece\u6d4b\u8bd5\u6570\u636e\u4e2d\u770b\u51fa\u800c\u4ece\u9898\u76ee\u4e0a\u4e0d\u5bb9\u6613\u770b\u51fa\u6765\u7684\uff1a\n\n\n\u9898\u76ee\u8865\u5145\u70b9\u4e00\uff1a\u5982\u679c\u67094\u4e2a\u4ebaa\u3001b\u3001c\u3001d\uff0c\u5f53a\u3001b\u8bf4\u8c0e\u8bdd\u65f6\u6211\u4eec\u63a8\u51fa\u4e86c\u662f\u7f6a\u72af\uff0c\u7136\u540e\u5f53a\u3001c\u8bf4\u8c0e\u8bdd\u65f6\u6211\u4eec\u53c8\u63a8\u51fa\u4e86c\u662f\u7f6a\u72af\uff0c\u6b64\u65f6\u6211\u4eec\u4ec5\u63a8\u51fa\u4e00\u4e2a\u7f6a\u72af\uff0c\u800c\u4e0d\u662f\u4e24\u4e2a\uff0c\u56e0\u6b64\u8f93\u51fa\u4e3ac\uff0c\u800c\u4e0d\u662f\u8f93\u51faCannot Determine\uff0c\u6ce8\u610f\u4e0d\u8981\u91cd\u590d\u8ba1\u6570\u3002\n\n\n\u9898\u76ee\u8865\u5145\u70b9\u4e8c\uff1a\u5982\u679c\u67094\u4e2a\u4ebaa\u3001b\u3001c\u3001d\uff0c\u5f53\u6211\u4eec\u63a8\u51faa\u3001b\u3001c\u4e09\u4eba\u90fd\u4e0d\u662f\u7f6a\u72af\u800cd\u672a\u77e5\u65f6\uff0c\u90a3\u4e48d\u5c31\u662f\u7f6a\u72af\uff0c\u8fd9\u662f\u4ece\u67d0\u4e9b\u6d4b\u8bd5\u6570\u636e\u4e2d\u53d1\u73b0\u7684\u89c4\u5219\uff0c\u9898\u76ee\u6ca1\u6709\u660e\u8bf4\u3002\n\n\n\u9898\u76ee\u8865\u5145\u70b9\u4e09\uff1a\u4e0d\u4f1a\u51fa\u73b0\u91cd\u540d\u60c5\u51b5\u3002\n\n\n\u9898\u76ee\u8865\u5145\u70b9\u56db\uff1a\u6ce8\u610f\u201cI am guilty.\u201d\u3001\u201cToday is Monday.\u201d\u7b49\u8bed\u53e5\u7684\u540e\u9762\u5747\u6709\u4e00\u4e2a\u201c.\u201d\u53f7\u3002\n\n\n\u5728\u786e\u5b9a\u4e0a\u9762\u51e0\u70b9\u540e\u6211\u4eec\u6765\u601d\u8003\u6b64\u9898\u5982\u4f55\u505a\uff0c\u9996\u5148\u6211\u60f3\u5230\u7684\u662f\u7528\u6a21\u62df\u65b9\u6cd5\uff0c\u5e76\u4e14\u6b64\u7a0b\u5e8f\u4f7f\u7528\u7684\u5c31\u662f\u6a21\u62df\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u7528\u7ec4\u5408\u7684\u65b9\u5f0f\u4ecem\u4e2a\u4eba\u4e2d\u53d6\u51fan\u4e2a\u4eba\u5047\u8bbe\u8fd9n\u4e2a\u4eba\u8bf4\u8c0e\u8bdd\uff0c\u7136\u540e\u5206\u522b\u5bf9\u8fd9m\u4e2a\u4eba\u6240\u8bf4\u7684\u5171p\u53e5\u8bdd\u8fdb\u884c\u5224\u65ad\uff0c\u5982\u679cp\u53e5\u8bdd\u5747\u4e24\u4e24\u4e0d\u77db\u76fe\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u770b\u770b\u80fd\u4e0d\u80fd\u6b63\u597d\u627e\u51fa\u4e00\u4e2a\u7f6a\u72af\uff0c\u6216\u8005\u6b63\u597d\u627e\u51fam-1\u4e2a\u201c\u597d\u4eba\u201d\u7684\u8bdd\uff08\u201c\u597d\u4eba\u201d\u6307\u4e0d\u662f\u7f6a\u72af\u7684\u4eba\uff0c\u4e0b\u540c\uff09\uff0c\u53e6\u4e00\u4e2a\u4fbf\u8ba4\u4e3a\u662f\u7f6a\u72af\u3002\n\n\n\u540c\u65f6\u6ce8\u610f\u5206\u6790\uff0c\u672c\u8d28\u4e0a\u6709\u6548\u7684\u8bc1\u8a00\u4ec5\u67094\u79cd\u7c7b\u578b\uff0c\u7b2c\u4e00\u79cd\u662f\u201c\u8c01\u662f\u7f6a\u72af\u201d\uff0c\u7b2c\u4e8c\u79cd\u662f\u201c\u8c01\u4e0d\u662f\u7f6a\u72af\u201d\uff0c\u7b2c\u4e09\u79cd\u662f\u201c\u4eca\u5929\u662f\u661f\u671f\u51e0\u201d\uff0c\u7b2c\u56db\u79cd\u662f\u201c\u4eca\u5929\u4e0d\u662f\u661f\u671f\u51e0\u201d\uff0c\u5e76\u4e14\u5982\u679c\u67d0\u4e2a\u8bf4\u8c0e\u8005\u7684\u8bc1\u8a00\u7c7b\u578b\u4e3a\u201c\u8c01\u662f\u7f6a\u72af\u201d\uff0c\u90a3\u4e48\u4ed6\u7684\u53cd\u8bc1\u8a00\u201c\u8c01\u4e0d\u662f\u7f6a\u72af\u201d\u4e00\u5b9a\u6210\u7acb\u3002\n\n\n\u65e0\u8bba\u5728\u8fd9n\u4e2a\u4eba\u8bf4\u8c0e\u7684\u60c5\u51b5\u4e0b\u80fd\u4e0d\u80fd\u627e\u51fa\u7f6a\u72af\uff0c\u90fd\u8981\u4ecem\u4e2a\u4eba\u4e2d\u91cd\u65b0\u627e\u51fa\u4e00\u7ec4n\u4e2a\u4eba\u7684\u7ec4\u5408\uff0c\u518d\u6b21\u8fdb\u884c\u5224\u65ad\uff08\u5373\u5bfb\u627e\u7f6a\u72af\uff09\u3002\n\n\n\u76f4\u5230\u6240\u6709\u8bf4\u8c0e\u4eba\u7684\u7ec4\u5408\u60c5\u51b5\u90fd\u8003\u8651\u540e\u518d\u6765\u770b\u54ea\u4e9b\u4eba\u6709\u53ef\u80fd\u662f\u7f6a\u72af\uff0c\u5982\u679c\u8d85\u8fc7\u4e24\u4e2a\uff0c\u5219\u8f93\u51faCannot Determine\uff0c\u5982\u679c\u6b63\u597d\u6709\u4e00\u4e2a\uff0c\u5219\u8f93\u51fa\u6b64\u4eba\u7684\u540d\u5b57\uff0c\u5982\u679c\u4e00\u4e2a\u90fd\u6ca1\u6709\uff0c\u5219\u8f93\u51faImpossible\u3002\n\n\n\\*/\n\n\n\n\n\n\n\n\n\n```cpp\n #include <cstdlib>\n #include <iostream>\n #include <fstream>\n using namespace std;\n const int maxn=20;//\u6700\u591a\u53c2\u4e0e\u4eba\u6570\n const int maxTestimony=100;//\u6700\u591a\u8bc1\u8bcd\u6570\n //\u8bc1\u8bcd\u679a\u4e3e\u7c7b\u578b\uff0c\u5206\u522b\u5bf9\u5e94\u201cI am guilty.\u201d\u3001\u201cI am not guilty\u201d\u3001\u201cToday is XXX\u201d\u3001\u201cToday not is XXX\u201d\u53ca\u5176\u5b83\u5e9f\u8bdd\u3002\n enum TestimonyWordsType\n {\n```\nIsGuilty,NotIsGuilty,TodayIs,TodayNotIs,NullWords\n\n\n\n\n```cpp\n };\n //\u661f\u671f\u679a\u4e3e\u7c7b\u578b\uff0c\u5206\u522b\u4ece\u201c\u661f\u671f\u4e00\u201d\u5bf9\u5e94\u5230\u201c\u661f\u671f\u65e5\u201d\uff0c\u6700\u540e\u4e00\u4e2a\u662f\u201c\u672a\u77e5\u201d\uff0c\u6ce8\u610f\uff0c\u679a\u4e3e\u4e8b\u5b9e\u4e0a\u662f\u4e00\u4e2a\u4ece0\u5f00\u59cb\u8ba1\u6570\u7684\u6574\u6570\uff0cMonday\u4e8b\u5b9e\u4e0a\u7b49\u4e8e0\uff0cTuesday\u7b49\u4e8e1\uff0cUnknown\u7b49\u4e8e7\uff0c\u56e0\u6b64\u540e\u9762\u4ee3\u7801\u51fa\u73b0\u8bf8\u5982\u201cisToday[Monday]=1\u201d\u7684\u4ee3\u7801\u65f6\u8bf7\u4e0d\u8981\u60ca\u8bb6\uff0c\u8fd9\u8868\u793a\u4eca\u5929\u662f\u661f\u671f\u4e00\n enum WeekType\n {\n```\nMonday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday,Unknown\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n   \n           \n\n\n\n\n   \n       \n   \n   \n\n\n\n\n\n\n\n\n\n\n```cpp\n };\n //\u8bc1\u8a00\u7ed3\u6784\u4f53\n struct TestimonyStruct\n {\n   TestimonyWordsType Words;//\u8bc1\u8a00\u7684\u7c7b\u578b\uff0cIsGuilty\u3001NotIsGuilty\u3001TodayIs\u3001TodayNotIs\u3001NullWords\u4e94\u4e2a\u4e4b\u4e00\n   TestimonyWordsType Reverse;//\u8bc1\u8a00\u7684\u53cd\u7c7b\u578b\uff0cIsGuilty\u3001NotIsGuilty\u4e92\u53cd\uff0cTodayIs\u3001TodayNotIs\u4e92\u53cd\uff0cNullWords\u7684\u53cd\u7c7b\u578b\u8fd8\u662fNullWords\n   int PeopleNum;//\u8bf4\u8bdd\u5185\u5bb9\u91cc\u9762\u6240\u6d89\u53ca\u5230\u7684\u4eba\u7684\u7f16\u53f7\uff0c\u6bd4\u5982\u8bf4\u201cSDJL is guilty.\u201d\u90a3\u4e48\u5c31\u662fSDJL\u6b64\u4eba\u7684\u7f16\u53f7\uff0c\u6b64\u5b57\u6bb5\u4ec5\u5728Words\u5c5e\u4e8eIsGuilty\u3001NotIsGuilty\u4e4b\u4e00\u65f6\u6709\u7528\n   WeekType Week;//\u8bf4\u8bdd\u5185\u5bb9\u91cc\u9762\u6240\u6d89\u53ca\u5230\u7684\u661f\u671f\uff0c\u6bd4\u5982\u8bf4\u201cToday is Monday.\u201d\u90a3\u4e48Week\u5c31\u7b49\u4e8eMonday\uff0c\u6b64\u5b57\u6bb5\u4ec5\u5728Words\u5c5e\u4e8eTodayIs\u3001TodayNotIs\u4e4b\u4e00\u65f6\u6709\u7528\n   int SpeakerNum;//\u8bf4\u8bdd\u8005\u7f16\u53f7\n };\n //\u4eba\u7ed3\u6784\u4f53\n struct PeopleStruct\n {\n   string Name;//\u4eba\u540d\n   int Num;//\u7f16\u53f7\n };\n PeopleStruct people[maxn];//\u4eba\n int n;//\u8bf4\u8c0e\u8005\u4eba\u6570\n int m;//\u603b\u4eba\u6570\n int p;//\u8bc1\u8a00\u6570\uff0c\u6ce8\u610f\u4e00\u4e2a\u4eba\u53ef\u80fd\u6709\u591a\u53e5\u8bc1\u8a00\uff0c\u6216\u6ca1\u6709\u8bc1\u8a00\n int StoryPeople[maxn];//StoryPeople[3]=5\u8868\u793a\u7b2c3\u4e2a\u8bf4\u8c0e\u8005\u662fpeople[5]\uff08\u4ece\u7b2c0\u4e2a\u5f00\u59cb\u8ba1\u6570\uff09\uff0c\u6b64\u5168\u5c40\u53d8\u91cf\u4ec5\u7528\u4e8e\u4fdd\u5b58\u7ec4\u5408\u7b97\u6cd5\u7684\u72b6\u6001\uff0c\u5176\u5b83\u5730\u65b9\u4e0d\u4f1a\u7528\u5230\n bool isStoryPeople[maxn];//isStoryPople[5]=true\u8868\u793a\u7b2c5\u4e2a\u4eba\u8bf4\u7684\u662f\u8c0e\u8bdd\uff0c\u6b64\u5168\u5c40\u53d8\u91cf\u5728\u7ec4\u5408\u7b97\u6cd5\u4e2d\u5f97\u5230\u5b83\u7684\u503c\uff0c\u800c\u5728\u9a8c\u8bc1\u673a\u4e2d\u7528\u6765\u5224\u65ad\u67d0\u4eba\u662f\u5426\u8bf4\u8c0e\u8bdd\n TestimonyStruct testimony[maxTestimony];//\u8bc1\u8a00\n int guilty[maxn];//guilty[3]=2\u8868\u793a\u4e24\u6b21\u63a8\u51fa\u7b2c3\u4e2a\u4eba\u662f\u7f6a\u72af\uff0c\u7b49\u4e8e0\u8868\u793a\u4e0d\u80fd\u63a8\u51fa\u6b64\u4eba\u662f\u7f6a\u72af\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u80fd\u7b80\u5355\u7684\u7528\u4e00\u4e2a\u6574\u6570\u6765\u8bb0\u5f55\u627e\u51fa\u7684\u7f6a\u72af\u6570\u4ee5\u53ca\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32\u6765\u8bb0\u5f55\u7f6a\u72af\u7684\u540d\u5b57\uff0c\u8fd9\u662f\u56e0\u4e3a\u8981\u907f\u514d\u524d\u9762\u6240\u63d0\u5230\u7684\u201c\u9898\u76ee\u8865\u5145\u70b9\u4e00\u201d\u60c5\u51b5\u3002\n //\u8fd9\u4e24\u4e2a\u5168\u5c40\u53d8\u91cf\u7528\u4e8e\u9a8c\u8bc1\u673a \n int peopleIsGuilty[maxn];//peopleIsGuilty[7]=1\u8868\u793a\u7b2c7\u4e2a\u4eba\u662f\u7f6a\u72af\uff0c=-1\u8868\u793a\u4e0d\u662f\u7f6a\u72af\uff0c=0\u8868\u793a\u672a\u77e5 \n int isToday[7];//isToday[3]=1 \u8868\u793a\u4eca\u5929\u662f\u661f\u671f\u56db\uff0c isToday[6]=-1 \u8868\u793a\u4eca\u5929\u4e0d\u662f\u661f\u671f\u65e5\uff0c\u522b\u5fd8\u4e86\u662f\u4ece0\u5f00\u59cb\u8ba1\u6570\uff0c\u7b49\u4e8e0\u65f6\u8868\u793a\u672a\u77e5,isToday\u6570\u7ec4\u4e2d\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a\u4e3a1\n //\u6839\u636e\u4eba\u540d\u5f97\u5230\u6b64\u4eba\u7684\u7f16\u53f7\n int GetPeopleNum(string name)//\u8fd0\u884c\u65f6\u95f4\uff1aO(m) \n {\n   for(int i=0; i<m; i++)    \n   {\n       if(people[i].Name == name)\n           return i;    \n   }\n   //\u8fd9\u91cc\u5e94\u8be5\u629b\u51fa\u5f02\u5e38\uff0c\u8868\u793a\u7ed9\u51fa\u7684\u4eba\u540d\u9519\u8bef     \n }\n //\u6839\u636e\u661f\u671f\u540d\u79f0\u5b57\u7b26\u4e32\u5f97\u5230\u661f\u671f\u679a\u4e3e\u7c7b\u578b\n WeekType GetWeekType(string weekString)//\u8fd0\u884c\u65f6\u95f4\uff1aO(1)\n {\n   //\u5b57\u7b26\u4e32\u5c45\u7136\u4e0d\u80fd\u7528\u4e8eswitch\u8bed\u53e5\uff1f\u8fd9\u662f\u6211\u6ca1\u6709\u9884\u6599\u5230\u7684\n   WeekType returnWeekType;\n   if(weekString == \"Monday.\")\n   {\n       returnWeekType = Monday;\n   }\n   else if(weekString == \"Tuesday.\")        \n   {\n       returnWeekType = Tuesday;\n   }\n   else if(weekString == \"Wednesday.\")\n   {\n       returnWeekType = Wednesday;    \n   }\n   else if(weekString == \"Thursday.\")\n   {\n       returnWeekType = Thursday;    \n   }\n   else if(weekString == \"Friday.\")\n   {\n       returnWeekType = Friday;    \n   }\n   else if(weekString == \"Saturday.\")\n   {\n       returnWeekType = Saturday;    \n   }\n   else if(weekString == \"Sunday.\")\n   {\n       returnWeekType = Sunday;    \n   }\n   else \n   {\n       returnWeekType = Unknown;\n   }\n   return returnWeekType;\n}\n//\u8bbe\u7f6e\u8bc1\u8a00\uff0cspeakerNum\u662f\u8bf4\u8bdd\u8005\u7f16\u53f7\uff0ctestimonyWords\u662f\u8bc1\u8bcd\uff0ctestimony\u662f\u5bf9\u5e94\u7684\u8bc1\u8a00\u7ed3\u6784\u4f53\uff08\u5168\u5c40\uff09\n//\u5728\u51fd\u6570\u6267\u884c\u524dtestimony\u662f\u672a\u77e5\u7684\uff08\u5373\u5404\u4e2a\u5b57\u6bb5\u6ca1\u6709\u521d\u59cb\u5316\uff09\uff0c\u800c\u5728\u51fd\u6570\u6267\u884c\u540etestimony\u662f\u5df2\u77e5\u7684\nvoid SetTestimony(int speakerNum, string testimonyWords, TestimonyStruct &testimony)//\u8fd0\u884c\u65f6\u95f4\uff1aO(m) [\u56e0\u4e3a\u8c03\u7528GetPeopleNum]\n{\n   //\u8bc1\u8bcd\u7684\u524d\u56db\u4e2a\u5355\u8bcd\uff0c\u6ce8\u610f\u8bc1\u8bcd\u4e0d\u5305\u62ec\u8bf4\u8bdd\u8005\u59d3\u540d\u548c\u59d3\u540d\u540e\u9762\u7684\u201c\uff1a\u201d\u7b26\u53f7\n   string word1,word2,word3,word4;\n   word1 = strtok(&(testimonyWords[0]),\" \");\n   word2 = strtok(NULL,\" \");\n   word3 = strtok(NULL,\" \");\n   //\u5982\u679c\u7b2c3\u4e2a\u5355\u8bcd\u662fnot\u7684\u8bdd\u624d\u8bfb\u53d6\u7b2c4\u4e2a\u5355\u8bcd\uff0c\u8fd9\u662f\u4e3a\u4e86\u907f\u514d\u4e00\u884c\u4ec5\u67093\u4e2a\u5355\u8bcd\u65f6\u8bfb\u53d6\u7b2c4\u4e2a\u5355\u8bcd\u5f15\u8d77\u7684\u9519\u8bef\n   if(word3 == \"not\")\n       word4 = strtok(NULL,\" \");\n   else\n       word4 = \"\";\n   //\u8bbe\u7f6e\u8bf4\u8bdd\u8005    \n   testimony.SpeakerNum = speakerNum;\n   //\u5982\u679c\u8bc1\u8a00\u662f\uff1a\u201cI am guilty.\u201d \n   if((word1 == \"I\") && (word2 == \"am\") && (word3 == \"guilty.\"))\n   {\n       testimony.Words = IsGuilty;//\u8bbe\u7f6e\u8bc1\u8bcd\u7c7b\u578b\uff0c\u4e0b\u540c\n       testimony.Reverse = NotIsGuilty;//\u8bbe\u7f6e\u8bc1\u8bcd\u53cd\u7c7b\u578b\uff0c\u4e0b\u540c\n       testimony.PeopleNum = speakerNum;//\u8bbe\u7f6e\u8bc1\u8bcd\u4e2d\u51fa\u73b0\u7684\u4eba\u7269\u7f16\u53f7\uff0c\u4e0b\u540c\n       testimony.Week = Unknown;//\u8bbe\u7f6e\u8bc1\u8bcd\u4e2d\u51fa\u73b0\u7684\u661f\u671f\uff0c\u4e0b\u540c\n   }\n   //\u5426\u5219\u5982\u679c\u8bc1\u8a00\u662f\uff1a\u201cI am not guilty.\u201d \n   else if((word1 == \"I\") && (word2 == \"am\") && (word3 == \"not\") && (word4 == \"guilty.\"))\n   {\n       testimony.Words = NotIsGuilty;\n       testimony.Reverse = IsGuilty;\n       testimony.PeopleNum = speakerNum;\n       testimony.Week = Unknown;    \n   }\n   //\u5426\u5219\u5982\u679c\u8bc1\u8a00\u662f\uff1a\u201cXXX \u662f\u7f6a\u72af\u201d\n   else if((word2 == \"is\") && (word3 == \"guilty.\")) \n   {\n       int guiltyNum = GetPeopleNum(word1);//\u83b7\u5f97\u8bc1\u8bcd\u4e2d\u51fa\u73b0\u7684\u4eba\u7269\u7f16\u53f7\uff0c\u4e0b\u540c\n       testimony.Words = IsGuilty;\n       testimony.Reverse = NotIsGuilty;\n       testimony.PeopleNum = guiltyNum;\n       testimony.Week = Unknown;    \n   }\n   //\u5426\u5219\u5982\u679c\u8bc1\u8a00\u662f\uff1a\u201cXXX \u4e0d\u662f\u7f6a\u72af\u201d\n   else if((word2 == \"is\") && (word3 == \"not\") && (word4 == \"guilty.\"))\n   {\n       int guiltyNum = GetPeopleNum(word1);\n       testimony.Words = NotIsGuilty;\n       testimony.Reverse = IsGuilty;\n       testimony.PeopleNum = guiltyNum;\n       testimony.Week = Unknown;    \n   }\n   //\u5426\u5219\u5982\u679c\u8bc1\u8a00\u662f\uff1a\u201c\u4eca\u5929\u662f\u661f\u671fX\u201d\n   else if((word1 == \"Today\") && (word2 == \"is\")) \n   {\n       WeekType week = GetWeekType(word3);//\u83b7\u5f97\u8bc1\u8bcd\u4e2d\u51fa\u73b0\u7684\u661f\u671f\uff0c\u6709\u53ef\u80fd\u8fd4\u56de\u7684\u662fUnknown\n       if(week != Unknown)//\u589e\u52a0\u8fd9\u53e5\u8bdd\u662f\u4e3a\u4e86\u9632\u6b62\u8bf8\u5982\u201cToday is Good Day.\u201d\u7684\u5e9f\u8bdd \n       {\n           testimony.Words = TodayIs;\n           testimony.Reverse = TodayNotIs;\n           testimony.PeopleNum = -1;//\u56e0\u4e3a\u6b64\u65f6\u6211\u4eec\u4e0d\u5e94\u8be5\u4f7f\u7528\u5230\u6b64\u503c\uff0c\u6240\u4ee5\u8bbe\u7f6e\u4e3a-1\uff0c\u8fd9\u6837\u5982\u679c\u4e0d\u5c0f\u5fc3\u4f7f\u7528\u5230\u8fd9\u4e2a\u5b57\u6bb5\u7684\u8bdd\u4f1a\u56e0\u4e3a\u5f15\u7528\u6570\u7ec4\u4e0b\u6807\u51fa\u754c\u800c\u629b\u51fa\u5f02\u5e38\u8fdb\u800c\u63d0\u793a\u6211\u4eec\u7a0b\u5e8f\u6709\u9519\u8bef\n           testimony.Week =  week;\n       }\n       else\n           testimony.Words = NullWords;\n   }\n   else//\u5426\u5219\u8bc1\u8a00\u6ca1\u6709\u610f\u4e49\n       testimony.Words = NullWords;\n} \n//\u521d\u59cb\u5316\u5168\u5c40\u53d8\u91cf\uff0c\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\nvoid init()//\u8fd0\u884c\u65f6\u95f4\uff1aO(pm)\n{\n   ifstream inputFile(\"logic.in\");\n   //\u8bfb\u53d6\u7b2c\u4e00\u884c\u7684m,n,p \n   inputFile>>m>>n>>p;\n   //\u8bfb\u53d6\u540d\u5b57\uff0c\u5e76\u521d\u59cb\u5316people \n   for(int i=0; i<m; i++)//\u6bcf\u6b21\u8fd0\u884c\u65f6\u95f4\uff1aO(m)\n   {\n       string name;\n       inputFile>>name;\n       people[i].Name = name;        \n       people[i].Num = i;        \n   }\n   //\u7533\u660e\u4e00\u4e2a\u6ca1\u7528\u7684\u5b57\u7b26\u4e32\u7136\u540e\u4f7f\u7528\u51fd\u6570getline(inputFile,temp,'\\n')\uff0c\u8fd9\u662f\u4e3a\u4e86\u8ba9\u6587\u4ef6\u8bfb\u53d6\u6307\u9488\u6307\u5411\u4e0b\u4e00\u884c\u7684\u5f00\u5934\n   string temp;\n   getline(inputFile,temp,'\\n');\n   //\u8bfb\u53d6p\u53e5\u8bc1\u8bcd \n   for(int i=0; i<p; i++)//\u6bcf\u6b21\u8fd0\u884c\u65f6\u95f4\uff1aO(pm)\n   {\n       //\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u8bf4\u8bdd\u8005\u59d3\u540d\n       string speakerName;\n       getline(inputFile,speakerName,':');\n       //\u7531\u59d3\u540d\u5f97\u5230\u8bf4\u8bdd\u8005\u7f16\u53f7\n       int speakerNum = GetPeopleNum(speakerName);//\u6bcf\u6b21\u8fd0\u884c\u65f6\u95f4\uff1aO(m)\n       //\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u8bc1\u8bcd\n       string testimonyWords;\n       getline(inputFile,testimonyWords,'\\n');\n       //\u7ed9\u7b2ci\u53e5\u8bc1\u8bcd\u8d4b\u503c\uff0c\u6ce8\u610f\u51fd\u6570\u6267\u884c\u524dtestimony[i]\u7684\u5404\u4e2a\u5b57\u6bb5\u662f\u672a\u77e5\u7684\n       SetTestimony(speakerNum,testimonyWords,testimony[i]);//\u6bcf\u6b21\u8fd0\u884c\u65f6\u95f4\uff1aO(m)\n   } \n   inputFile.close();\n   //\u6211\u4eec\u5047\u8bbe\u7f16\u53f7\u4ece0\u5230n-1\u7684\u8fd9n\u4e2a\u4eba\u8bf4\u8c0e\n   for(int i=0; i<n; i++)//\u6bcf\u6b21\u8fd0\u884c\u65f6\u95f4\uff1aO(n)\n       StoryPeople[i] = i;\n   for(int i=0; i<m; i++)//\u6bcf\u6b21\u8fd0\u884c\u65f6\u95f4\uff1aO(m)\n   {\n       isStoryPeople[i] = false;    \n   }\n   for(int i=0; i<n; i++)//\u6bcf\u6b21\u8fd0\u884c\u65f6\u95f4\uff1aO(n)\n   {\n          isStoryPeople[StoryPeople[i]] = true;\n   }\n   //\u521d\u59cb\u5316\u5168\u5c40\u53d8\u91cfguilty\n   for(int i=0; i<n; i++)//\u6bcf\u6b21\u8fd0\u884c\u65f6\u95f4\uff1aO(n)\n       guilty[i] = 0;\n}\n//\u521d\u59cb\u5316\u8bc1\u8a00\u9a8c\u8bc1\u673a\u5668\uff0c\u521d\u59cb\u5316\u540e\u9a8c\u8bc1\u673a\u8ba4\u4e3a\u6240\u6709\u7684\u4eba\u90fd\u662f\u672a\u77e5\u7684\uff0c\u5e76\u4e14\u4e5f\u4e0d\u77e5\u9053\u4eca\u5929\u662f\u661f\u671f\u51e0\nvoid ResetCheckupMachine()//\u8fd0\u884c\u65f6\u95f4\uff1aO(m)\n{\n   for(int i=0; i<m; i++)\n       peopleIsGuilty[i] = 0;//\u522b\u5fd8\u4e86\u7b49\u4e8e0\u8868\u793a\u672a\u77e5\uff0c\u7b49\u4e8e1\u8868\u793a\u662f\u7f6a\u72af\uff0c\u7b49\u4e8e-1\u8868\u793a\u4e0d\u662f\u7f6a\u72af\n   for(int i=0; i<7; i++)\n       isToday[i] = 0;//\u7c7b\u4f3cpeopleIsGuilty\n}\n//\u9a8c\u8bc1\u4e00\u53e5\u8bc1\u8a00\uff0c\u4f7f\u7528\u524d\u8981\u8c03\u7528\u201c\u521d\u59cb\u5316\u8bc1\u8a00\u9a8c\u8bc1\u673a\u201d\u51fd\u6570\nbool Checkup(TestimonyStruct &testimony)//\u8fd0\u884c\u65f6\u95f4\uff1aO(1)\n{\n   //\u7533\u660e\u7528\u4e8e\u68c0\u9a8c\u7684\u8bc1\u8bcd\u7c7b\u578b\n   TestimonyWordsType testimonyWordsType;\n   //\u83b7\u5f97\u8bf4\u8bdd\u8005\u7f16\u53f7\n   int speakerNum = testimony.SpeakerNum;\n   //\u5982\u679c\u4ed6\u8bf4\u5047\u8bdd\n   if(isStoryPeople[speakerNum])\n       testimonyWordsType = testimony.Reverse;//\u7528\u4e8e\u68c0\u9a8c\u7684\u8bc1\u8bcd\u4e3a\u53cd\u8bc1\u8bcd\n   else//\u5426\u5219\u8bf4\u771f\u8bdd \n       testimonyWordsType = testimony.Words;\n   bool consistent;//consistent=false\u8868\u793a\u8bc1\u8a00\u4e0d\u4e00\u81f4\uff08\u77db\u76fe\uff09 \n   //\u83b7\u5f97\u8bc1\u8bcd\u4e2d\u6240\u6d89\u53ca\u7684\u661f\u671f\n   int weekNum = testimony.Week;\n   //\u5206\u522b\u8003\u8651\u8bc1\u8bcd\u7684\u6bcf\u79cd\u60c5\u51b5\uff0c\u6ce8\u610f\u8bc1\u8a00\u9a8c\u8bc1\u673a\u628atestimonyWordsType\u770b\u4e3a\u6b63\u786e\u7684\uff0c\u54ea\u6015\u5b83\u662f\u7531\u8bf4\u8c0e\u8005\u8bf4\u51fa\u6765\u7684\n   switch(testimonyWordsType)\n   {\n       //\u5982\u679c\u8bc1\u8bcd\u662f\u201cI am guilty.\u201d\u7c7b\u578b\n       case IsGuilty:\n           //\u5047\u5982\u8bc1\u8a00\u9a8c\u8bc1\u673a\u5df2\u7ecf\u786e\u5b9a\u6b64\u4eba\u4e0d\u662f\u7f6a\u72af\n           if(peopleIsGuilty[testimony.PeopleNum] == -1)\n               consistent = false;//\u8bc1\u8a00\u77db\u76fe\n           else\n           {\n               //\u5426\u5219\u8bc1\u8a00\u4e0d\u77db\u76fe\n               consistent = true;\n               //\u8bb0\u4e0b\u66fe\u7ecf\u6709\u4eba\u8bf4\u8fc7\u8fd9\u4e2a\u4eba\u662f\u7f6a\u72af\n               peopleIsGuilty[testimony.PeopleNum] = 1;\n           }\n           break;\n       //\u5982\u679c\u8bc1\u8bcd\u662f\u201cI am not guilty.\u201d\u7c7b\u578b\n       case NotIsGuilty:\n           //\u5047\u5982\u8bc1\u8a00\u9a8c\u8bc1\u673a\u5df2\u7ecf\u786e\u5b9a\u6b64\u4eba\u5c31\u662f\u7f6a\u72af\n           if(peopleIsGuilty[testimony.PeopleNum] == 1)\n               consistent = false;//\u8bc1\u8a00\u77db\u76fe\n           else\n           {\n               //\u5426\u5219\u8bc1\u8a00\u4e0d\u77db\u76fe\n               consistent = true;\n               //\u8bb0\u4e0b\u66fe\u7ecf\u6709\u4eba\u8bf4\u8fc7\u8fd9\u4e2a\u4eba\u4e0d\u662f\u7f6a\u72af\n               peopleIsGuilty[testimony.PeopleNum] = -1;    \n           }            \n           break;\n       //\u5982\u679c\u8bc1\u8a00\u662f\u201cToday is XXX\u201d\u7c7b\u578b\uff0c\u4e0d\u5931\u4e00\u822c\u6027\uff0c\u4e0b\u9762\u6211\u4eec\u5047\u8bbeXXX\u4ee3\u8868\u661f\u671f\u4e09\n       case TodayIs:\n           //\u5982\u679c\u8bc1\u8a00\u9a8c\u8bc1\u673a\u5df2\u7ecf\u786e\u5b9a\u4eca\u5929\u4e0d\u662f\u661f\u671f\u4e09\n           if(isToday[weekNum] == -1)\n               consistent = false;//\u8bc1\u8a00\u77db\u76fe\n           else\n           {\n               //\u8bb0\u4e0b\u4eca\u5929\u662f\u661f\u671f\u4e09\n               isToday[weekNum] = 1;\n               //count\u7528\u4e8e\u8bb0\u7b97\u4e00\u5171\u786e\u5b9a\u4e86\u51e0\u6b21\u661f\u671f\uff0c\u6bd4\u5982\u8bf4\u4e0a\u4e00\u6b21\u786e\u5b9a\u662f\u661f\u671f\u4e8c\uff0c\u800c\u8fd9\u4e00\u6b21\u53c8\u786e\u5b9a\u662f\u661f\u671f\u4e09\uff0c\u90a3\u4e48count\u5c31\u4f1a\u5728isToday[Tuesday]==1\u65f6\u589e\u52a01\uff0c\u548c\u5728isToday[Wednesday]==1\u65f6\u589e\u52a01\n               int count=0;\n               for(int i=0; i<7; i++)\n                   if(isToday[i] == 1)\n                       count++;\n               //\u5982\u679c\u4ec5\u786e\u5b9a\u4e86\u4e00\u6b21\n               if(count ==1)\n                   consistent = true;//\u8bc1\u8a00\u4e0d\u77db\u76fe\n               else//\u5426\u5219\u786e\u5b9a\u8fc7\u591a\u6b21\n                   consistent = false;//\u8bc1\u8a00\u77db\u76fe\n               /**//*\n```\nQ\uff1a\u4e3a\u4ec0\u4e48\u4e0d\u7528\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u6765\u8bb0\u5f55\u4eca\u5929\u662f\u661f\u671f\u51e0\u5462\uff1f\nA\uff1a\u56e0\u4e3a\u5f53\u9047\u5230\u8bc1\u8a00\u4e3a\u201cToday is not XXX\u201d\u65f6\u8bc1\u8a00\u9a8c\u8bc1\u673a\u9700\u8981\u8bb0\u4e0b\u4eca\u5929\u4e0d\u662f\u661f\u671f\u51e0\uff08\u53ca\u8bbe\u7f6eisToday[XXX]=-1\uff09\uff0c\u800c\u8fd9\u662f\u7528\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u505a\u4e0d\u5230\u7684\n\n\\*/\n```cpp\n           }        \n           break;\n       //\u5982\u679c\u8bc1\u8a00\u662f\uff1a\u201cToday is not XXX\u201d\u7c7b\u578b\uff0c\u540c\u6837\uff0c\u4e0b\u9762\u6211\u4eec\u5047\u8bbeXXX\u4ee3\u8868\u661f\u671f\u4e09\n       case TodayNotIs:\n           //\u5982\u679c\u8bc1\u8a00\u9a8c\u8bc1\u673a\u5df2\u7ecf\u786e\u5b9a\u4eca\u5929\u5c31\u662f\u661f\u671f\u4e09\n           if(isToday[weekNum] == 1)\n               consistent = false;//\u8bc1\u8a00\u77db\u76fe\n           else\n           {\n               //\u8bb0\u4e0b\u4eca\u5929\u4e0d\u662f\u661f\u671f\u4e09\n               isToday[weekNum] = -1;\n               //\u8bc1\u8a00\u4e0d\u77db\u76fe\n               consistent = true;\n           }            \n           break;\n```\ndefault:\n//\u5bf9\u4e8e\u5176\u5b83\u5e9f\u8bdd\u6211\u4eec\u8ba4\u4e3a\u5b83\u4e0e\u6240\u6709\u8bc1\u8a00\u90fd\u4e0d\u77db\u76fe\n\n\n\n\n\n   \n\n\n\n\n   \n       \n       \n```cpp\n           consistent = true;\n           break;        \n   }\n   //\u8fd4\u56de\u6b64\u53e5\u8bc1\u8a00\u662f\u5426\u77db\u76fe\n   return consistent;\n}\n//\u8ba1\u7b97\u4e0b\u4e00\u7ec4\u8bf4\u8c0e\u8bdd\u7684\u4eba\uff0c\u5f53\u6240\u6709\u7ec4\u5408\u5747\u4f9d\u6b21\u51fa\u73b0\u540e\u51fd\u6570\u8fd4\u56defalse\uff0c\u5173\u4e8e\u7ec4\u5408\u7b97\u6cd5\u8bf7\u53c2\u8003\u6211\u7684\u53e6\u4e00\u7bc7\u6587\u7ae0 \nbool NextGroupStoryPeople()//\u8fd0\u884c\u65f6\u95f4\uff1aO(m) [\u6ce8\u610fm>n]\n{\n   bool hasNext;\n   int k = n - 1;\n   while ((k >= 0) && (StoryPeople[k] + (n - k) == m))\n   {\n       k--;\n   }\n   if (k>=0)\n   {\n      if (k==n-1)\n      {\n          StoryPeople[k]++;\n      }\n      else\n      {\n           StoryPeople[k]++;\n           k++;\n           while (k<n)\n           {\n               StoryPeople[k] = StoryPeople[k - 1] + 1;\n               k++;\n           }\n      }\n      hasNext = true;\n      //\u8ba1\u7b97\u8bf4\u8c0e\u7684\u4eba\uff0c\u522b\u5fd8\u4e86StoryPeople\u7528\u6765\u4fdd\u5b58\u7ec4\u5408\u7684\u72b6\u6001\uff0c\u4fbf\u4e8e\u751f\u6210\u4e0b\u4e00\u4e2a\u7ec4\u5408\uff0c\u5e76\u4e0d\u7528\u4e8e\u5176\u5b83\u51fd\u6570\uff0c\u800cisStoryPeople\u5728\u9a8c\u8bc1\u8bc1\u8a00\u65f6\u4f1a\u7528\u5230\n      for(int i=0; i<m; i++)//\u6bcf\u6b21\u8fd0\u884c\u65f6\u95f4\uff1aO(m)\n      {\n           isStoryPeople[i] = false;    \n      }\n      for(int i=0; i<n; i++)\n      {\n           isStoryPeople[StoryPeople[i]] = true;\n      }\n   }\n   else\n   {\n       hasNext = false;\n   }\n   return hasNext;    \n}\n//\u8fd0\u884c\u6574\u4e2a\u6a21\u62df\u67e5\u627e\u8fc7\u7a0b\nvoid run()//\u8fd0\u884c\u65f6\u95f4\uff1aO(p*C(m,n))+O(m*C(m,n)) [\u662f\u5426\u7b49\u4e8eO((m+p)*C(m,n))???]\n{\n   do//\u8fd0\u884c\u65f6\u95f4\uff1aC(m,n)*(O(p)+O(m))\n   {        \n       //\u91cd\u7f6e\u8bc1\u8a00\u9a8c\u8bc1\u673a\uff0c\u4ee5\u4fbf\u5f00\u59cb\u9a8c\u8bc1\u63a5\u4e0b\u6765\u7684\u8bc1\u8a00\n       ResetCheckupMachine();     //\u6bcf\u6b21\u8fd0\u884c\u65f6\u95f4\uff1aO(m)\n       bool consistent = true;//consistent=false\u8868\u793a\u8bc1\u8a00\u51fa\u73b0\u77db\u76fe \n       //\u4f9d\u6b21\u9a8c\u8bc1p\u53e5\u8bc1\u8a00\n       for(int i=0; i<p; i++)//\u6bcf\u6b21\u8fd0\u884c\u65f6\u95f4\uff1aO(p)\n       {\n           consistent = Checkup(testimony[i]);//\u6bcf\u6b21\u8fd0\u884c\u65f6\u95f4\uff1aO(1)\n           //\u5982\u679c\u8bc1\u8a00\u51fa\u73b0\u77db\u76fe\n           if(!consistent)\n               break;//\u8df3\u51fa\u9a8c\u8bc1\u5faa\u73af\n       } \n       //\u5982\u679c\u8bc1\u8a00\u4e0d\u77db\u76fe \n       if(consistent)\n       {\n           //\u7edf\u8ba1\u7f6a\u72af\u6570\n           int guiltyCount=0;\n           for(int i=0; i<m; i++)//\u6bcf\u6b21\u8fd0\u884c\u65f6\u95f4\uff1aO(m)\n           {\n               //\u5982\u679c\u7b2ci\u4e2a\u4eba\u662f\u7f6a\u72af\uff0c\u6ce8\u610fpeopleIsGuilty\u5728\u6bcf\u6b21\u91cd\u7f6e\u8bc1\u8a00\u9a8c\u8bc1\u673a\u65f6\u88ab\u521d\u59cb\u5316\n               if(peopleIsGuilty[i] == 1)\n               {\n                   //\u7f6a\u72af\u6570\u589e\u52a01\n                   guiltyCount++;    \n               }\n           }    \n           //\u5982\u679c\u6839\u636e\u8bc1\u8a00\u80fd\u591f\u6070\u597d\u6709\u4e00\u4e2a\u7f6a\u72af\uff08\u8868\u793a\u5728\u8fd9\u6b21\u7531n\u4e2a\u4eba\u7ec4\u6210\u8bf4\u8c0e\u8005\u7684\u60c5\u51b5\u4e0b\u6b63\u597d\u627e\u5230\u4e86\u4e00\u4e2a\u7f6a\u72af\uff09\n           if(guiltyCount == 1)\n           {\n               //\u5bfb\u627e\u5230\u90a3\u4e2a\u7f6a\u72af\n               for(int i=0; i<m; i++)//\u6bcf\u6b21\u8fd0\u884c\u65f6\u95f4\uff1aO(m)\n               {\n                   if(peopleIsGuilty[i] == 1)\n                   {\n                       guilty[i]++;//\u6b64\u6b65\u4e0d\u61c2\u7684\u8bdd\u5230\u7533\u660e\u5904\u770b\u770bguilty\u7684\u6ce8\u91ca\n                       break;\n                   }\n               }    \n           }    \n           else//\u5426\u5219\u4e0d\u80fd\u6070\u597d\u627e\u5230\u4e00\u4e2a\u7f6a\u72af\uff08\u6839\u636e\u9898\u76ee\u8865\u5145\u70b9\u56db\uff0c\u6211\u4eec\u5224\u65ad\u662f\u5426\u6070\u597d\u6709m-1\u4e2a\u4eba\u4e0d\u662f\u7f6a\u72af\uff09\n           {\n               //\u7edf\u8ba1\u4e0d\u662f\u7f6a\u72af\u7684\u4eba\u6570\n               int notGuiltyCount = 0;\n               for(int i=0; i<m; i++)//\u6bcf\u6b21\u8fd0\u884c\u65f6\u95f4\uff1aO(m)\n               {\n                   if(peopleIsGuilty[i] == -1)\n                   {\n                       notGuiltyCount++;    \n                   }\n               }    \n               //\u5982\u679c\u6839\u636e\u8bc1\u8a00\u80fd\u591f\u6070\u597d\u6709m-1\u4e2a\u4eba\u4e0d\u662f\u7f6a\u72af\n               if(notGuiltyCount == m-1)\n               {\n                   //\u627e\u51fa\u90a3\u4e2a\u4e0d\u80fd\u63a8\u51fa\u662f\u4e0d\u662f\u7f6a\u72af\u7684\u4eba\n                   for(int i=0; i<m; i++)//\u6bcf\u6b21\u8fd0\u884c\u65f6\u95f4\uff1aO(m)\n                   {                        \n                       if(peopleIsGuilty[i] != -1)\n                       {\n                           //\u90a3\u4e48\u6211\u4eec\u8ba4\u4e3a\u4ed6\u662f\u7f6a\u72af\n                           guilty[i]++;\n                           break;\n                       }\n                   }    \n               }            \n           }\n       }\n   }while(NextGroupStoryPeople());//\u76f4\u5230\u6240\u6709\u8bf4\u8c0e\u7ec4\u5408\u5747\u8003\u8651\u8fc7\u540e\u3002\u8fd0\u884c\u6b21\u6570C(m,n),NextGroupStoryPeople\u8fd0\u884c\u65f6\u95f4\u4e3a\uff1aO(m) \n   /**//*\n```\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u627e\u5230\u4e24\u4e2a\u7f6a\u72af\u65f6\u9000\u51fa\u6a21\u62df\u5bfb\u627e\u8fc7\u7a0b\u4ee5\u4fbf\u63d0\u9ad8\u7a0b\u5e8f\u6548\u7387\uff0c\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u5f53\u80fd\u627e\u5230\u591a\u4e8e1\u4e2a\u7f6a\u72af\u65f6\u4ec5\u8f93\u51fa\u201cCannot Determine\u201d\n\\*/\n\n\n\n\n\n```cpp\n}\n//\u8f93\u51fa\u7ed3\u679c\uff0c\u6b64\u51fd\u6570\u8bf4\u660e\u7565\nvoid show()//\u8fd0\u884c\u65f6\u95f4\uff1aO(m)\n{\n   int guiltyCount = 0;\n   string guiltyName;\n   for(int i=0; i<m; i++)\n   {\n       if(guilty[i]>0)\n       {\n           guiltyCount++;\n           guiltyName = people[i].Name;\n       }\n   }\n   switch(guiltyCount)\n   {\n       case 0:\n           cout<<\"Impossible\"<<endl;\n           break;    \n       case 1:\n           cout<<guiltyName<<endl;\n           break;\n```\ndefault:\n   \n\n\n\n```cpp\n           cout<<\"Cannot Determine\"<<endl;\n           break;\n   }\n503}\n505int main(int argc, char *argv[])//\u8fd0\u884c\u65f6\u95f4\uff1aO(p*C(m,n))+O(m*C(m,n))\n506{\n   init();//\u521d\u59cb\u5316\u5168\u5c40\u53d8\u91cf\uff0c\u4ece\u8f93\u5165\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\n   run();//\u8fd0\u884c\u6a21\u62df\u67e5\u627e\u8fc7\u7a0b\n   show();//\u8f93\u51fa\u7ed3\u679c\n   system(\"PAUSE\");\n   return EXIT_SUCCESS;\n```\n}\u6ce8\u660e\u51fa\u5904\nhttp://www.cnblogs.com/SDJL/archive/2008/08/20/1272047.html\n",
        "postTime": 1506581081,
        "uid": 9181,
        "name": "\u5305\u5b50\u5165\u4fb5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1039 \u3010\u4fa6\u63a2\u63a8\u7406\u3011"
    },
    {
        "content": "\u770b\u8d77\u6765\u597d\u50cf\u6ca1\u4eba\u8bf42-sat(\u4f2a)....\u6211\u6765\u63d0\u4f9b\u4e00\u4e2a\u601d\u8def\u3002\n\n\u6211\u4eec\u53d1\u73b0\u6bcf\u4e2a\u4eba\u662f\u771f\u8bdd\u8fd8\u662f\u5047\u8bdd\u53ef\u80fd\u6709\u4e00\u4e9b\u4f9d\u8d56\u5173\u7cfb,\u4f8b\u5982\u8fd9\u6837:\n\nA:\u6211\u6709\u7f6a\n\nB:A\u6ca1\u7f6a\n\nC:A\u6709\u7f6a\n\nD:\u4eca\u5929\u5468\u4e00\n\nE:\u4eca\u5929\u5468\u4e8c\n\n\u4e0b\u9762\u5f53\u6211\u8bf4\u9009\u4e00\u4e2a\u70b9\u7684\u610f\u601d\u662f\u6307\u4e00\u4e2a\u70b9\u4e3a\u771f\n\n\u53d1\u73b0\u5982\u679c\u9009A,\u90a3\u4e48\u5c31\u8981\u9009C\u3002\u5982\u679c\u4e0d\u9009A,\u5c31\u8981\u9009B\u3002\u5982\u679c\u9009D,\u5c31\u4e0d\u80fd\u9009E\u3002\n\n\u4ee5\u6b64\u7c7b\u63a8....\n\n\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4eba\u62c6\u6210\u4e24\u4e2a\u70b9,\u4ee3\u8868\u8fd9\u4e2a\u4eba\u8bf4\u7684\u8bdd\u662f\u771f\u548c\u662f\u5047,\u4f8b\u5982\u9009A\u5c31\u8981\u9009B\u7684\u8bdd\u8fde\u8fb9A->B\u3002\u7136\u540e\u6211\u4eectarjan\u7f29\u4e2a\u70b9,\u7f29\u5b8c\u70b9\u7684\u56fe\u662f\u4e2a\u68ee\u6797\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u53bb\u679a\u4e3e\u65e0\u5165\u5ea6\u7684\u70b9\u662f\u771f\u662f\u5047\u5c31\u53ef\u4ee5\u4e86,\u6309\u7167\u62d3\u6251\u5e8f\u8fdb\u884c\u66f4\u65b0\u3002\n\n\u7136\u540e\u5224\u65ad\u6700\u540e\u771f\u5047\u7684\u4eba\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\u5bf9\u4e8e\u53ef\u884c\u7684\u65b9\u6848\u6211\u4eec\u66b4\u529b\u5224\u65ad\u5c31\u53ef\u4ee5\u4e86....\n\n(\u867d\u7136\u611f\u89c9\u8fd9\u79cd\u65b9\u6cd5\u5e76\u6ca1\u6709\u597d\u5199\u591a\u5c11....)\n",
        "postTime": 1501311218,
        "uid": 16749,
        "name": "shadyqwq",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1039 \u3010\u4fa6\u63a2\u63a8\u7406\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u7684\u601d\u8def\uff0c\u697c\u4e0b\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u4f46\u662f\u697c\u4e0b\u7684c++\u4ee3\u7801\u4e0d\u80fdAC\uff0c\u56e0\u4e3aLinux\u548cWindows\u7684\u6362\u884c\u7b26\u4e0d\u4e00\u6837\u7684\u95ee\u9898\u5bfc\u81f4\u5f88\u591a\u4eba\u53ea\u670930\u5206\u3002\u6211\u4eec\u4e0d\u80fd\u7528\u6574\u884c\u8bfb\u5165\u90a3\u8be5\u600e\u4e48\u529e\u5462\uff1f\u65b9\u6cd5\u5f88\u7b80\u5355\u4f46\u662f\u6709\u7684\u5947\u8469\uff0c\u7531\u4e8e\u6bcf\u4e2a\u4eba\u8bf4\u7684\u662f\u4e00\u4e2a\u53e5\u5b50\uff0c\u6240\u4ee5\u7ed3\u5c3e\u4e00\u5b9a\u4f1a\u6709\u4e00\u4e2a\u7ed3\u675f\u7b26\u53f7\uff08\u3002\u6216\uff1f\u6216\u8005\uff01\uff09\u7136\u540e\u53ea\u8981\u5224\u65ad\u662f\u5426\u8bfb\u5230\u90a3\u4e2a\u7b26\u53f7\u5c31\u884c\u4e86\u3002\n\n\u9644\u4e0a\u4ee3\u7801\uff08\u601d\u8def\u8ddf\u697c\u4e0b\u7c7b\u4f3c\uff09\n\n```cpp\n#include<cstdio>\n#include<map>\n#include<iostream>\n#include<string>\nusing namespace std;\nint n,m,p,s[22][102],l[22],d[22][102],day[22][102],gu[22];\nmap<string,int>t;\nmap<int,string>h;\nstring u,v[102],g[102],q[102],bb;\nint main()\n{\n    scanf(\"%d%d%d\",&m,&n,&p);\n    for (int i=0;i<m;i++)\n    {cin>>u;t[u]=i+1;h[i+1]=u;}\n    for (int i=0;i<p;i++)\n    {\n        int y,ll=1;u=\"\";while(u[ll-1]!='.' && u[ll-1]!='?' && u[ll-1]!='!')\n        {cin>>bb;if (ll>1)u+=' ';u+=bb;ll=u.length();}\n        for (int j=0;j<ll&&u[j]!=':';j++)\n        {v[i]+=u[j];y=j;}\n        int jj=t[v[i]],b=-1,nn=0,uu=0;\n        for (int j=y+3;j<ll;j++)\n        {\n            if (!uu)g[i]+=u[j];else q[i]+=u[j];\n            if (!nn && !uu && u[j+1]==' ')for (int k=1;k<=m;k++)if (h[k]==g[i]){b=k;break;}\n            if (b!=-1 && !nn && !uu){g[i]=u[j+2];j+=2;nn=1;}\n            if (g[i]==\"Today is \")uu=1;\n        }\n        if (g[i]==\"I am guilty.\")s[jj][l[jj]++]=1;\n        if (g[i]==\"I am not guilty.\")s[jj][l[jj]++]=2;\n        if (g[i]==\"is guilty.\"){s[jj][l[jj]]=3;d[jj][l[jj]++]=b;}\n        if (g[i]==\"is not guilty.\"){s[jj][l[jj]]=4;d[jj][l[jj]++]=b;}\n        if (g[i]==\"Today is \")\n        {\n            s[jj][l[jj]]=5;\n            if (q[i]==\"Monday.\")day[jj][l[jj]++]=1;\n            if (q[i]==\"Tuesday.\")day[jj][l[jj]++]=2;\n            if (q[i]==\"Wednesday.\")day[jj][l[jj]++]=3;\n            if (q[i]==\"Thursday.\")day[jj][l[jj]++]=4;\n            if (q[i]==\"Friday.\")day[jj][l[jj]++]=5;\n            if (q[i]==\"Saturday.\")day[jj][l[jj]++]=6;\n            if (q[i]==\"Sunday.\")day[jj][l[jj]++]=7;\n        }\n    }\n    for (int i=1;i<=m;i++)\n    for (int j=1;j<=7;j++)\n    {\n        int fa=0,T,F,abc=0;\n        for (int k=1;k<=m;k++)\n        {\n            T=F=0;\n            for (int kk=0;kk<l[k];kk++)\n            {\n                if (s[k][kk]==1)\n                {\n                    if (i==k)T=1;else F=1;\n                }\n                if (s[k][kk]==2)\n                {\n                    if (i!=k)T=1;else F=1;\n                }\n                if (s[k][kk]==3)\n                {\n                    if (i==d[k][kk])T=1;else F=1;\n                }\n                if (s[k][kk]==4)\n                {\n                    if (i!=d[k][kk])T=1;else F=1;\n                }\n                if (s[k][kk]==5)\n                {\n                    if (j==day[k][kk])T=1;else F=1;\n                }\n            }\n            if (T && F)break;\n            if (F)fa++;\n            if (!T && !F)abc++;\n        }\n        if (T && F)continue;\n        if (fa==n || fa<=n && fa+abc>=n)gu[i]=1;\n    }\n    int ans=0;\n    for (int i=1;i<=m;i++)\n    if (gu[i])ans++;\n    if (!ans)printf(\"Impossible\");\n    else if (ans>1)printf(\"Cannot Determine\");\n    else for (int i=1;i<=m;i++)if (gu[i]){cout<<h[i];break;}\n    return 0;\n}\n```",
        "postTime": 1470144820,
        "uid": 14738,
        "name": "1124828077ccj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1039 \u3010\u4fa6\u63a2\u63a8\u7406\u3011"
    },
    {
        "content": "#\u8fd9\u4e2a\u4e1c\u897f\u6211\u5965\u6570\u73ed\u5b66\u8fc7\uff08**\u6ca1\u9519\uff01\u6211\u7684\u5965\u6570\u73ed\u6709\u6559\u63a8\u7406**\uff09\n\n\u601d\u8def\u5982\u4e0b:\n\na\u6570\u7ec4\u8bb0\u5f55\u4eba\u540d\uff0cb\u6570\u7ec4\u8bb0\u5f55\u662f\u5426\u8bf4\u771f\u8bdd\uff081\u4ee3\u8868\u771f\u8bdd\uff0c0\u4ee3\u8868\u5047\u8bdd\uff09\uff0cc\u8bb0\u5f55\u8bf4\u5047\u8bdd\u7684\u4eba\u6570\uff0cd\u8bb0\u5f55\u7f6a\u72af\u4e2a\u6570\uff0ce\u8bb0\u5f55\u7f6a\u72af\u540d\u5b57\u3002\n\n\u5047\u8bbea[i]\u662f\u7f6a\u72af\uff0c\n\n\u90a3\u4e48\u9664\u4e86\u201c\u4eca\u5929\u662f\u661f\u671f\u51e0\u201d\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u8c01\u8bf4\u771f\u8bdd\uff0c\u8c01\u8bf4\u5047\u8bdd\uff0c\u8bf4\u771f\u8bdd\u628a\u4ed6\u8d4b\u503c\u62101\uff0c\u8bf4\u5047\u8bdd\u628a\u4ed6\u8d4b\u503c\u62100\u5e76\u4e14c++\uff0c\u5982\u679c\u6709\u4eba\u65e2\u8bf4\u771f\u8bdd\u4e5f\u8bf4\u5047\u8bdd\uff0c\u90a3\u4e48\u5047\u8bbe\u9519\u8bef\uff0c\u6362\u4e0b\u4e00\u4e2a\u4eba\u5224\u65ad\u3002\u8bf4\u771f\u8bdd\u7684\u4eba\u6211\u4eec\u628a\u4ed6\u8bf4\u7684\u8bdd\u7167\u642c\uff0c\u8bf4\u5047\u8bdd\u7684\u4eba\u6211\u4eec\u628a\u4ed6\u7684\u8bdd\u7684\u524d\u9762\u52a0\u4e00\u4e2a\u201c\u4e0d\u201d\u5b57\uff0c\uff08\u81f3\u4e8e\u600e\u4e48\u7528\u4ee3\u7801\u5b9e\u73b0\u6211\u4e0d\u8bf4\uff09\u3002\u5982\u679cc>n\uff08n\u4e3a\u8bf4\u5047\u8bdd\u7684\u4eba\u6570\uff09\uff0c\u90a3\u4e48\u5047\u8bbe\u9519\u8bef,\u6362\u4e0b\u4e00\u4e2a\u4eba\u5224\u65ad\u3002\u5982\u679cc<=n\uff0c\u4f9d\u6b21\u5047\u8bbe\u201c\u4eca\u5929\u662f\u661f\u671f\u51e0\u201d\uff0c\u518d\u6309\u4e0a\u9762\u7684\u505a\uff0c\u5982\u679c\u505a\u5b8c\u4e86\u53d1\u73b0c=n\uff0c\u90a3\u4e48\u606d\u559c\u4f60\u627e\u5230\u4e86\u7f6a\u72af\uff0cd++\uff08d\u8bb0\u5f55\u7f6a\u72af\u4e2a\u6570\uff09\uff0c\u7528e\u8bb0\u5f55\u7f6a\u72af\u540d\u5b57\uff0c\u6362\u4e0b\u4e00\u4e2a\u4eba\u5224\u65ad\u3002\uff08\u5176\u5b9e\u4e5f\u53ef\u4ee5\u5728\u5047\u8bbea[i]\u662f\u7f6a\u72af\u65f6\u4e00\u8d77\u5047\u8bbe\uff0c\u4f46\u5148\u5047\u8bbea[i]\u662f\u7f6a\u72af\u5e76\u6267\u884c\u4ee5\u4e0a\u8bed\u53e5\u5c31\u76f8\u5f53\u4e8e\u780d\u679d\u4e86\uff0c\u51cf\u5c11\u65f6\u95f4\u6d88\u8017\uff09\n\n\u5f53\u4f60\u6240\u6709\u4eba\u90fd\u5047\u8bbe\u8fc7\u4e86\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u5e84\u91cd\u5730\u8f93\u51fa\u4e86\uff01\uff01\uff01\u5982\u679cd=1\uff08\u5c31\u662f\u7f6a\u72af\u4eba\u6570\u7b49\u4e8e1\uff09\uff0c\u5c31\u8f93\u51fa\u4ed6\u7684\u540d\u5b57\uff0c\u4e5f\u5c31\u662fe\uff1b\u5982\u679cd>1(\u5c31\u662f\u65ad\u51fa\u4e0d\u6b62\u4e00\u4e2a\u4eba\u662f\u7f6a\u72af)\uff0c\u5c31\u8f93\u51fa Cannot Determine\uff1b\u5982\u679cd=0\uff08\u5c31\u662f\u5224\u65ad\u51fa\u6ca1\u6709\u4eba\u662f\u7f6a\u72af\uff09\uff0c\u5c31\u8f93\u51fa Impossible\u3002\uff08\u4f9d\u9898\u610f\uff09\n\n\n\n\u81f3\u4e8e\u4ee3\u7801\u6211\u5c31\u4e0d\u8d34\u4e86\uff0c\u5927\u5bb6\u81ea\u5df1\u8ddf\u7740\u601d\u8def\uff0c\u628a\u601d\u8def\u8f6c\u6362\u6210\u4ee3\u7801\u5427\uff01\u52a0\u6cb9\uff01\uff01\uff01\n",
        "postTime": 1503036131,
        "uid": 34654,
        "name": "\u9648\u9633\u849f\u84bb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1039 \u3010\u4fa6\u63a2\u63a8\u7406\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u8ba4\u4e3a\u53ea\u662f\u8003\u4e86\u679a\u4e3e\u548c\u5b57\u7b26\u4e32\u5904\u7406\u3002\u3002\u3002\n\n\u5f31\u5f31\u8ba4\u4e3a\u5199Pascal\u6bd4\u8f83\u6709\u4f18\u52bf\u3002\u3002\u3002\n\n```delphi\nvar\n  kk:array[1..20] of longint;\n  xiong,bu,butime:set of 1..20;\n  time:longint;\n  m,n,i,j,ge,p,pp,k,e:longint;\n  a:array[1..1000,1..5] of longint;{a\u6570\u7ec4\u91cc1\u8868\u793a\u662f\u5426\u8bf4\u8fc7\u2018\u6211\u662f\u51f6\u624b\u20192\u8868\u793a\u662f\u5426\u8bf4\u8fc7\u2018\u6211\u4e0d\u662f\u51f6\u624b\u2019\uff0c5\u8868\u793a\u8bf4\u4e86\u4eca\u5929\u662f\u661f\u671f\u51e0}\n  a3,a4:array[1..1000,0..100] of longint;{a3\u8868\u793a\u8bf4\u4e86\u54ea\u4e9b\u4eba\u662f\u51f6\u624b\uff0ca4\u8868\u793a\u54ea\u4e9b\u4eba\u4e0d\u662f\u51f6\u624b}\n  xiongge,dang,ans:longint;\n  nam:array[1..1000] of string;\n  day:array[1..7] of string[10];\n  s:string;\nprocedure dfs(x:longint);\nvar\n  i,j:longint;\n  ff:boolean;\nbegin\n  if x>m then\n    begin\n    if ge=n then\n      begin\n      ff:=true;\n      xiong:=[];\n      bu:=[];\n      time:=0;\n      butime:=[];\n      for i:=1 to m do\n        begin\n        if kk[i]=0 then\n          begin\n          if a[i,1]=1 then\n            begin\n            if (i in bu) then begin ff:=false; break; end;\n            xiong:=xiong+[i];\n            end;\n          if a[i,2]=1 then\n            begin\n            if (i in xiong) then begin ff:=false; break; end;\n            bu:=bu+[i];\n            end;\n          for j:=1 to a3[i,0] do\n            begin\n            if a3[i,j] in bu then begin ff:=false; break; end;\n            xiong:=xiong+[a3[i,j]];\n            end;\n          if ff=false then break;\n          for j:=1 to a4[i,0] do\n            begin\n            if a4[i,j] in xiong then begin ff:=false; break; end;\n            bu:=bu+[a4[i,j]];\n            end;\n          if ff=false then break;\n          if a[i,5]<>0 then\n            begin\n            if a[i,5] in butime then begin ff:=false; break; end;\n            if time=0 then time:=a[i,5]\n                      else if time<>a[i,5] then begin ff:=false; break; end;\n            end;\n          end;\n        if kk[i]=1 then\n          begin\n          if a[i,1]=1 then\n            begin\n            if (i in xiong) then begin ff:=false; break; end;\n            bu:=bu+[i];\n            end;\n          if a[i,2]=1 then\n            begin\n            if (i in bu) then begin ff:=false; break; end;\n            xiong:=xiong+[i];\n            end;\n          for j:=1 to a3[i,0] do\n            begin\n            if a3[i,j] in xiong then begin ff:=false; break; end;\n            bu:=bu+[a3[i,j]];\n            end;\n          if ff=false then break;\n          for j:=1 to a4[i,0] do\n            begin\n            if a4[i,j] in bu then begin ff:=false; break; end;\n            xiong:=xiong+[a4[i,j]];\n            end;\n          if ff=false then break;\n          if a[i,5]<>0 then\n            begin\n            butime:=butime+[a[i,5]];\n            if time=a[i,5] then begin ff:=false; break; end;\n            end;\n          end;\n        end;\n      if ff then\n        begin\n        if ans=-1 then ans:=0;\n        xiongge:=0;\n        for i:=1 to m do\n          if i in xiong then\n            begin\n            inc(xiongge);\n            dang:=i;\n            end;\n        if xiongge=1 then\n          if ans=0 then ans:=dang\n                   else if dang<>ans then\n                          begin\n                          writeln('Cannot Determine');\n                          halt;\n                          end;\n        if xiongge=0 then\n          begin\n          for i:=1 to m do\n            if not(i in bu) then\n              begin\n              inc(xiongge);\n              dang:=i;\n              end;\n          if xiongge=1 then\n            if ans=0 then ans:=dang\n                     else if dang<>ans then\n                            begin\n                            writeln('Cannot Determine');\n                            halt;\n                            end;\n          end;\n        end;\n      end;\n    exit;\n    end;\n  if ge<n then\n    begin\n    inc(ge);\n    kk[x]:=1;\n    dfs(x+1);\n    kk[x]:=0;\n    dec(ge);\n    end;\n  dfs(x+1);\nend;\nbegin\n  readln(m,n,p);\n  for i:=1 to m do\n    readln(nam[i]);\n  day[1]:='Monday';\n  day[2]:='Tuesday';\n  day[3]:='Wednesday';\n  day[4]:='Thursday';\n  day[5]:='Friday';\n  day[6]:='Saturday';\n  day[7]:='Sunday';{\u76f4\u63a5\u628a\u65e5\u671f\u5b58\u8fdb\u6570\u7ec4\u91cc\u518d\u6328\u4e2a\u6bd4\u8f83\u6bd4\u8f83\u65b9\u4fbf\u3002\u3002}\n  for i:=1 to p do\n    begin\n    readln(s);\n    pp:=pos(': ',s);\n    for j:=1 to m do\n      if copy(s,1,pp-1)=nam[j] then\n        begin\n        delete(s,1,pp+1);\n        pp:=pos('I am guilty.',s);{\u6574\u53e5\u8bdd\u5bfb\u627e\u4e0d\u5bb9\u6613\u627e\u9519\uff0c\u6bd5\u7adfI'm a pig\u7684\u8bdd\u4e5f\u6709\u7684}\n        delete(s,pp,12);\n        if pp<>0 then a[j,1]:=1;\n        pp:=pos('I am not guilty.',s);\n        delete(s,pp,16);\n        if pp<>0 then a[j,2]:=1;\n        pp:=pos(' is guilty.',s);\n        while pp<>0 do\n          begin\n          inc(a3[j,0]);\n          k:=pp;\n          while (k>1) and (s[k-1]<>' ') do dec(k);\n          for e:=1 to m do\n            if copy(s,k,pp-k)=nam[e] then\n              begin\n              a3[j,a3[j,0]]:=e;\n              break;\n              end;\n          delete(s,k,pp-k+11);\n          pp:=pos(' is guilty.',s);\n          end;\n        pp:=pos(' is not guilty.',s);\n        while pp<>0 do\n          begin\n          inc(a4[j,0]);\n          k:=pp;\n          while (k>1) and (s[k-1]<>' ') do dec(k);\n          for e:=1 to m do\n            if copy(s,k,pp-k)=nam[e] then\n              begin\n              a4[j,a4[j,0]]:=e;\n              break;\n              end;\n          delete(s,k,pp-k+15);\n          pp:=pos(' is not guilty.',s);\n          end;\n        pp:=pos('Today is ',s);\n        if pp<>0 then\n          begin\n          k:=pp+8;\n          while (k<length(s)) and (s[k+1]<>'.') do inc(k);\n          for e:=1 to 7 do\n            if copy(s,pp+9,k-pp-9+1)=day[e] then\n              begin\n              a[j,5]:=e;\n              break;\n              end;\n          delete(s,pp,k-pp+2);\n          end;\n        break;\n        end;\n    end;\n  ge:=0;\n  ans:=-1;\n  dfs(1);\n  if ans>0 then writeln(nam[ans])\n             else if ans=-1 then writeln('Impossible')\n                            else writeln('Cannot Determine');\nend.\n```\n\u5176\u5b9e\u53ea\u8981\u5904\u7406\u597d\u6bcf\u4e2a\u4eba\u8bf4\u4e86\u54ea\u4e9b\u8bdd\uff0c\u518d\u679a\u4e3e\u54ea\u4e9b\u4eba\u662f\u8bf4\u771f\u8bdd\uff0c\u5224\u65ad\u662f\u5426\u7b26\u5408\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n[color=red]\u6ce8\u610f\u5224\u65adImpossible\u548cCannot Determine\u7684\u60c5\u51b5\uff0c\u5982\u679c\u80fd\u4ea7\u751f\u4e0d\u53d1\u751f\u51b2\u7a81\u7684\u60c5\u51b5\uff0c\u4f46\u5f97\u4e0d\u51fa\u51f6\u624b\uff0c\u90a3\u5c31\u5224\u65ad\u4e3aCannot Determine\u3002[/color]\n",
        "postTime": 1387266048,
        "uid": 1790,
        "name": "Belongbb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1039 \u3010\u4fa6\u63a2\u63a8\u7406\u3011"
    },
    {
        "content": "\u6211\u4eec\u679a\u4e3e\u72af\u4eba\u548c\u661f\u671f\uff0c\u4e00\u4e2a\u4e00\u4e2a\u8fdb\u884c\u5224\u65ad\u3002\u5982\u679c\u6210\u529f\u5219\u8bb0\u5f55\u7b54\u6848\uff0c\u5982\u679c\u6210\u529f\u4e14\u4ee5\u524d\u5df2\u7ecf\u8bb0\u5f55\u4e86\u7b54\u6848\uff0c\u5219\u8bf4\u660e\u6709\u591a\u4e2a\u51f6\u624b\uff0c\u8f93\u51fa\u201cCannot Determine\u201d\uff0c\u5982\u679c\u6700\u540e\u6ca1\u6709\u7b54\u6848\uff0c\u5219\u8f93\u51fa\u201cImpossible\u201d\u3002\u4e3b\u8981\u662f\u5b57\u7b26\u4e32\u7684\u5904\u7406\u3002\u5176\u4ed6\u7ec6\u8282\u89c1\u4ee3\u7801\u6ce8\u91ca\u3002\n\n\u7136\u800c\u6211\u7684\u4ee3\u7801\u7528\u4e86getline\uff0c\u5728Linux\u4e0b\u6700\u540e\u4f1a\u8bfb\u5165Windows\u7684\u6362\u884c\u7b26\uff01\uff01\u8fd9\u4e2a\u95ee\u9898\u6211\u627e\u4e86\u534a\u5929\uff01\uff01\u540e\u6765\u6211\u628a\u4ee3\u7801\u7a0d\u5fae\u6539\u4e86\u4e00\u4e0b\uff08\u4ee3\u7801\u7b2c85~87\u884c\u7684\u5904\u7406\uff09\uff0c\u4f7f\u5176\u517c\u5bb9Linux\u548cWindows\uff08\u6d1b\u8c37\u548ccodevs\u662fLinux\u7684\uff0cVijos\u662fWindows\u7684\uff09\u3002\n```\ninclude<iostream>\n#include<cstring>\n#include<string>\n#include<map>\n#include<cstdlib>\nusing namespace std;\nconst string days[]={\n    \"Today is Monday.\",\n    \"Today is Tuesday.\",\n    \"Today is Wednesday.\",\n    \"Today is Thursday.\",\n    \"Today is Friday.\",\n    \"Today is Saturday.\",\n    \"Today is Sunday.\"\n};\nmap<string,int>num;//\u8bb0\u5f55\u7f16\u53f7\nstring name[22];//\u540d\u5b57\nint n,m,p,cnt,ans,TF[102],T,F;//T\u8868\u793a\u5f53\u524d\u8bf4\u771f\u8bdd\u7684\u4eba\u6570\uff0cF\u8868\u793a\u5f53\u524d\u8bf4\u5047\u8bdd\u7684\u4eba\u6570\uff0cTF[i]\u8868\u793ai\u8bf4\u771f\u8bdd\u8fd8\u662f\u5047\u8bdd\nstruct word{//id\u662f\u8bf4\u8fd9\u53e5\u8bdd\u7684\u4eba\u7684\u7f16\u53f7\uff0cst\u662f\u8bf4\u7684\u8bdd\n    int id;\n    string st;\n}f[102];\nstring s;\nbool pdTF(int id,bool b){//\u5224\u65ad\u662f\u5426\u6709\u51b2\u7a81\uff0c\u8fd4\u56de1\u8868\u793a\u6709\u51b2\u7a81\n    if(TF[id]==-1){\n        TF[id]=b;\n        if(b)++T;else ++F;\n    }else{\n        if(TF[id]==b)return 0;else return 1;\n    }\n    if(F>m||T>n-m)return 1;\n    return 0;\n}\nvoid Judge(int Xs,string day){//\u6d4b\u8bd5\uff0c\u82e5\u6709\u51b2\u7a81\u5219\u76f4\u63a5\u8df3\u51fa\u6765\n    memset(TF,-1,sizeof(TF));\n    T=F=0;\n    for(int i=1;i<=p;++i){\n        int pos;\n        pos=f[i].st.find(\"I am guilty.\");\n        if(~pos){\n            if(pdTF(f[i].id,f[i].id==Xs))return;\n        }\n        pos=f[i].st.find(\"I am not guilty.\");\n        if(~pos){\n            if(pdTF(f[i].id,f[i].id!=Xs))return;\n        }\n        pos=f[i].st.find(\" is guilty.\");\n        if(~pos){\n            string now=f[i].st;\n            now.erase(pos,11);\n            int id=num[now];\n            if(pdTF(f[i].id,id==Xs))return;\n        }\n        pos=f[i].st.find(\" is not guilty.\");\n        if(~pos){\n            string now=f[i].st;\n            now.erase(pos,15);\n            int id=num[now];\n            if(pdTF(f[i].id,id!=Xs))return;\n        }\n        pos=f[i].st.find(\"Today is \");\n        if(~pos){\n            if(pdTF(f[i].id,f[i].st==day))return;\n        }\n    }\n    /*\u5168\u90e8\u8bed\u53e5\u68c0\u6d4b\u5b8c\u6bd5\uff0c\u6ca1\u6709\u51b2\u7a81*/\n    if(ans&&ans!=Xs){//\u5df2\u6709\u7b54\u6848\u4f46\u4e0d\u662f\u5f53\u524d\u51f6\u624b\uff0c\u8bf4\u660e\u6709\u591a\u4e2a\u51f6\u624b\n        cout<<\"Cannot Determine\"<<endl;\n        exit(0);//\u76f4\u63a5\u7ed3\u675f\u7a0b\u5e8f\n    }\n    ans=Xs;\n}\nint main(){\n    cin>>n>>m>>p;\n    for(int i=1;i<=n;++i){\n        cin>>name[i];\n        num[name[i]]=i;\n    }\n    for(int i=1;i<=p;++i){\n        cin>>s;\n        s.erase(s.length()-1,1);\n        f[i].id=num[s];\n        getline(cin,f[i].st);\n        f[i].st.erase(0,1);\n        char ch=f[i].st[f[i].st.length()-1];\n        if(ch=='\\n'||ch=='\\r'||ch==' ')\n        f[i].st.erase(f[i].st.length()-1,1);\n    }\n    ans=0;\n    for(int i=1;i<=n;++i)\n    for(int j=0;j<7;++j)\n    Judge(i,days[j]);\n    if(!ans)//\u6ca1\u6709\u641c\u5230\u51f6\u624b\n    cout<<\"Impossible\"<<endl;else\n    cout<<name[ans]<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1541593238,
        "uid": 124407,
        "name": "stevewen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1039 \u3010\u4fa6\u63a2\u63a8\u7406\u3011"
    },
    {
        "content": "\n------------\n- ## \u5206\u6790\u9898\u610f\n\n\u3000\u9605\u8bfb\u4e00\u904d\u9898\u76ee\uff0c\u9996\u5148\uff0c\u6211\u4eec\u53d1\u73b0\u9898\u76ee\u4e2d $n$ , $m$ , $q$ \u7684\u53d6\u503c\u90fd\u975e\u5e38\u7684\u5c0f\u3002\u53c8\u53d1\u73b0\u8fd9\u9053\u9898\u662f\u5f53\u5e74\u7684 $T2$ \u3002\u4e8e\u662f\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u8fd9\u9898\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u9053\u5927\u6a21\u62df\u9898\uff0c\u8003\u9a8c\u7684\u662f\u9009\u624b\u7684\u7ec6\u5fc3\u3001\u8010\u5fc3\u3001\u4ee5\u53ca\u7801\u529b\u3002\u63d0\u53d6\u4e3b\u8981\u4fe1\u606f\u540e\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u8fd9\u4e00\u9053\u9898\u6765\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4eba\u8bf4\u7684\u8bdd\uff0c\u6709\u7528\u7684\u53ea\u6709 $5$ \u79cd\u53e5\u5b50\uff0c\u800c\u7f6a\u72af\u53c8\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5730\u5c31\u80fd\u60f3\u5230\u5982\u4e0b\u7684\u4f2a\u4ee3\u7801\u6765\u5b9e\u73b0\u8fd9\u9053\u9898\u3002\n\n```cpp\nfor(int i=1;i<=n;i++){ //\u679a\u4e3e\u8c01\u662f\u7f6a\u72af\n\tfor(int j=1;j<=7;j++){ //\u679a\u4e3e\u4eca\u5929\u662f\u661f\u671f\u51e0\n    \tinit();\n        for(int k=1;k<=p;k++){ //\u679a\u4e3e\u6bcf\u4e00\u53e5\u8bdd\n        \t... //\u8bc1\u8a00\u5904\u7406\n        }\n        ... //\u4eba\u7269\u72b6\u6001\u5904\u7406\n        if(pd()){ //\u5982\u679c\u8be5\u4eba\u662f\u7f6a\u72af\u7b26\u5408\u9898\u610f\n        \t...//\u8fdb\u884c\u5904\u7406\n        }\n    }\n}\n```\n\u3000\u540c\u6837\u5730\uff0c\u5728\u6709\u4e86\u8fd9\u4e2a\u601d\u8def\u540e\uff0c\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u8fd9\u9053\u9898\u7684\u4e3b\u8981\u96be\u70b9\u5728\u4e8e\u8bc1\u8a00\u7684\u9884\u5904\u7406\u3002\u800c\u5728\u9884\u5904\u7406\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u5f97\u60f3\u597d\u5982\u4f55\u53bb\u5b9a\u4e49\u4eba\u7269\u7684\u72b6\u6001\u548c\u8bc1\u8a00\u7684\u72b6\u6001\u3002\n\n------------\n- ## \u72b6\u6001\u5b9a\u4e49\n\n\u3000\u6211\u4eec\u9996\u5148\u601d\u8003\u4eba\u7269\u7684\u72b6\u6001\uff0c\u5bf9\u4e8e\u8fd9\u9053\u9898\u6765\u8bf4\uff0c\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u6709\u81ea\u5df1\u7684\u540d\u5b57\uff0c\u90fd\u4f1a\u8bf4\u8c0e\u548c\u8bf4\u771f\u8bdd\u3002\u8fd9\u662f\u4e0d\u662f\u610f\u5473\u7740\u6211\u4eec\u53ea\u8981\u50a8\u5b58\u8fd9\u4e2a\u4eba\u7684\u540d\u5b57\uff0c\u8fd9\u4e2a\u4eba\u6709\u6ca1\u6709\u8bf4\u8c0e\u5c31\u884c\u5462\uff1f\u7b54\u6848\u663e\u7136\u662f\u5426\u5b9a\u7684\u3002\u6211\u4eec\u6765\u601d\u8003\u4e0b\u9762\u4e00\u4e2a\u72b6\u6001\uff1a\n \n\u3000\u6709 $4$ \u4e2a\u4eba\uff0c\u4ed6\u4eec\u5206\u522b\u53eb\u505a XRZ \uff0c BigGYC  \uff0c SmallGYC \uff0cORZ\u3002\n\n\u3000\u5176\u4e2d\uff0c\u6709 $3$ \u4e2a\u4eba\u59cb\u7ec8\u8bf4\u5047\u8bdd\uff0c\u5b83\u4eec\u4e00\u5171\u8bf4\u4e86\u56db\u53e5\u8bdd\u3002\n \n\u3000XRZ\uff1aI am so vegetable.\n\n\u3000BigGYC\uff1a I am so vegetable too.\n \n\u3000SmallGYC\uff1a I am the most vegetable OIer.\n \n\u3000ORZ\uff1a I am guilty.\n \n\u3000\u663e\u7136\uff0c\u6211\u4eec\u53d1\u73b0ORZ\u662f\u7f6a\u72af\uff0c\u5176\u4ed6\u4e09\u4e2a\u4eba\u53ea\u662f\u5728\u88c5\u5f31\u800c\u5df2\u3002\u4f46\u5982\u679c\u6211\u4eec\u6309\u4e0a\u8ff0\u7684\u601d\u8def\u53bb\u8bb0\u5f55\u6bcf\u4e2a\u4eba\u7684\u72b6\u6001\u7684\u8bdd\u3002\u6211\u4eec\u65e0\u6cd5\u5f97\u51fa\u8c01\u662f\u7f6a\u72af\uff0c\u56e0\u4e3a\u5176\u4ed6\u4e09\u4e2a\u4eba\u90fd\u5728\u8bf4\u95f2\u8bdd\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u4ed6\u4eec\u662f\u4e0d\u662f\u59cb\u7ec8\u8bf4\u8c0e\u7684\u4eba\uff0c\u540c\u6837\u5730\uff0c\u6211\u4eec\u518d\u6765\u601d\u8003\u4e0b\u9762\u4e00\u4e2a\u72b6\u6001\uff1a\n \n\u3000\u6709 $4$ \u4e2a\u4eba\uff0c\u4ed6\u4eec\u5206\u522b\u53eb\u505a XRZ \uff0c BigGYC  \uff0c SmallGYC \uff0cORZ\u3002\n\n\u3000\u5176\u4e2d\uff0c\u6709 $3$ \u4e2a\u4eba\u59cb\u7ec8\u8bf4\u5047\u8bdd\uff0c\u5b83\u4eec\u4e00\u5171\u8bf4\u4e86\u56db\u53e5\u8bdd\u3002\n \n\u3000BigGYC\uff1aToday is Monday.\n\n\u3000XRZ\uff1a Oh I think it is a good day to gay you.\n \n\u3000BigGYC\uff1aToday is Sunday.\n \n\u3000ORZ\uff1a I am guilty.\n \n\u3000\u663e\u7136\uff0c\u6211\u4eec\u53d1\u73b0ORZ\u662f\u7f6a\u72af\uff0c\u4f46\u5982\u679c\u6211\u4eec\u6309\u4ee5\u4e0a\u7684\u601d\u8def\u53bb\u8bb0\u5f55\u6bcf\u4e2a\u4eba\u7684\u72b6\u6001\u7684\u8bdd\uff0c\u5f53\u6211\u4eec\u679a\u4e3e\u5230\u4eca\u5929\u662f\u5468\u4e00\u6216\u4eca\u5929\u662f\u5468\u65e5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0BigGYC\u65e2\u8bf4\u4e86\u5047\u8bdd\u53c8\u8bf4\u4e86\u771f\u8bdd\u3002\u5f53\u6211\u4eec\u78b0\u5230\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0c\u663e\u7136\u4e0e\u9898\u610f\u662f\u77db\u76fe\u7684\uff0c\u6211\u4eec\u9700\u8981\u8df3\u8fc7\u8fd9\u4e2a\u72b6\u6001\uff0c\u679a\u4e3e\u4e0b\u4e00\u4e2a\u53ef\u80fd\u7684\u65e5\u671f\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4eba\uff0c\u6211\u4eec\u4e0d\u4ec5\u8981\u8bb0\u5f55\u4ed6\u662f\u5426\u8bf4\u8c0e\uff0c\u8fd8\u8981\u8bb0\u5f55\u4ed6\u6709\u6ca1\u6709\u8bf4\u8fc7\u771f\u8bdd\u3002\n```cpp\nstruct people{\n\tstring name;\n\tbool saidtrue;\n\tbool saidfalse;\n\tbool isg;\n};\npeople a[MAXN];\n```\n\n\u3000\u5bf9\u4e8e\u8bc1\u8a00\uff0c\u663e\u7136\u6ca1\u6709\u8fd9\u4e48\u591a\u7ec6\u8282\u8981\u53bb\u601d\u8003\uff0c\u53ea\u662f\u5b57\u7b26\u4e32\u5904\u7406\u6bd4\u8f83\u9ebb\u70e6\uff0c\u9700\u8981\u719f\u7ec3\u5730\u638c\u63e1 $String$ \u4ee5\u53ca\u5b83\u7684\u51fd\u6570\u7684\u7528\u6cd5\u3002\u5bf9\u8fd9\u4e9b\u4e1c\u897f\u4e0d\u662f\u5f88\u4e86\u89e3\u7684\u540c\u5b66\u5efa\u8bae\u53f3\u8f6c\u767e\u5ea6 $STL String$\u3002\n \n```\nstruct sentence{\n\tint whosaid;\n\tint lx;//1 \u8868\u793a\u6211\u6709\u7f6a 2 \u8868\u793a\u6211\u6ca1\u6709\u7f6a 3 \u8868\u793aXXX\u6709\u7f6a 4 \u8868\u793aXXX\u6ca1\u6709\u7f6a 5 \u8868\u793a\u8ba8\u8bba\u65e5\u671f 6 \u95f2\u8bdd\n\tint date;\n\tint XXX;\n};\nsentence b[MAXP];\n```\n\n------------\n- ## \u9884\u5904\u7406\n\n\u3000\u6211\u4eec\u601d\u8003\u5982\u4f55\u6765\u505a\u9884\u5904\u7406\uff0c\u663e\u7136\u5730\uff0c\u4eba\u7269\u7684\u9884\u5904\u7406\u662f\u975e\u5e38\u597d\u505a\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8f93\u5165\u540d\u5b57\u4ee5\u53ca\u521d\u59cb\u5316\u5224\u65ad\u51fd\u6570\u5373\u53ef\u3002\n```cpp\nfor(int i=1;i<=n;i++){\n\tcin>>a[i].name;\n\ta[i].isg=false;\n}\n```\n\n\u3000\u6211\u4eec\u6765\u60f3\u8c61\u4e00\u4e2a\u8bc1\u8a00\u7684\u8f93\u5165\u8fc7\u7a0b\uff0c\u9996\u5148\uff0c\u6211\u4eec\u8f93\u5165\u8bf4\u8bdd\u7684\u4eba\u7684\u540d\u5b57\uff0c\u53bb\u6389\u5192\u53f7\uff0c\u904d\u5386\u4e00\u904d\u6bcf\u4e2a\u4eba\u7684\u540d\u5b57\u6765\u627e\u5230\u662f\u7b2c\u51e0\u4e2a\u4eba\u8bf4\u7684\u3002\u7136\u540e\uff0c\u6211\u4eec\u7528 $Getline$ \u8bfb\u5165\u4ed6\u8bf4\u7684\u8bdd\uff0c\u5224\u65ad\u662f\u54ea\u4e00\u79cd\u7c7b\u578b\u3002\u5982\u679c\u662f\u65e5\u671f\uff0c\u8bb0\u5f55\u4e0b\u661f\u671f\u51e0\u3002\u5982\u679c\u662f\u8bf4\u522b\u4eba\u6709\u7f6a\u6216\u65e0\u7f6a\uff0c\u8bb0\u5f55\u4e0b\u4ed6\u8bf4\u7684\u662f\u54ea\u4e00\u4e2a\u4eba\u3002\u8fd9\u4e2a\u90e8\u5206\u5982\u679c\u80fd\u719f\u7ec3\u638c\u63e1\u5404\u79cd\u5b57\u7b26\u4e32\u51fd\u6570\u7684\u8bdd\u5199\u8d77\u6765\u662f\u5f88\u5bb9\u6613\u7684\uff0c\u8bb0\u5f97\u6ce8\u610f\u597d\u7ec6\u8282\u3002\n\n```cpp\nstring pdyong[10]={\n\t\"ass we can\",\n\t\"Today is Monday.\",\n\t\"Today is Tuesday.\",\n\t\"Today is Wednesday.\",\n\t\"Today is Thursday.\",\n\t\"Today is Friday.\",\n\t\"Today is Saturday.\",\n\t\"Today is Sunday.\",\n};\n\nfor(int i=1;i<=p;i++){\n\tb[i].lx=6;\n\tstring sr;\n\tcin>>sr; //\u8f93\u5165\u540d\u5b57 \n\tsr.erase(sr.end()-1); //\u53bb\u6389\u5192\u53f7 \n\tfor(int j=1; j<=n; j++){ //\u5bfb\u627e\u662f\u7b2c\u51e0\u4e2a\u4eba\u8bf4\u7684 \n\t\tif(a[j].name==sr){\n\t\t\tb[i].whosaid=j;\n\t\t\tbreak;\n\t\t}\n\t}\n\tgetline(cin,sr,'\\r'); //\u8f93\u5165\u8bc1\u8a00 \n\tsr.erase(sr.begin()); //\u53bb\u6389\u884c\u9996\u7a7a\u683c \n\tif(sr==\"I am guilty.\") b[i].lx=1; \n\telse if(sr==\"I am not guilty.\") b[i].lx=2; //\u5224\u65ad\u8bc1\u8a00\u7c7b\u578b \n\telse{\n\t\tfor(int j=1;j<=7;j++){\n\t\t\tif(sr==pdyong[j]){\n\t\t\t\tb[i].lx=5;\n\t\t\t\tb[i].date=j;\n\t\t\t}\n\t\t}\n\t\tif(b[i].lx!=5){\n\t\t\tint pos;\n\t\t\tfor(pos=0; sr[pos]!=' '; pos++);\n\t\t\tstring ccname=sr.substr(0,pos);//\u627e\u5230\u8bf4\u7684\u662f\u7b2c\u51e0\u4e2a\u4eba\u6709\u6ca1\u6709\u7f6a \n\t\t\tsr.erase(0,pos);\n\t\t\tbool isnameyy=false;\n\t\t\tfor(int j=1; j<=n; j++){\n\t\t\t\tif(a[j].name==ccname){\n\t\t\t\t\tb[i].XXX=j;\n\t\t\t\t\tisnameyy=true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(isnameyy==true){\n\t\t\t\tif(sr==\" is guilty.\") b[i].lx=3;\n\t\t\t\telse if(sr==\" is not guilty.\") b[i].lx=4;\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\u3000\u800c\u5f53\u6211\u4eec\u5b8c\u6210\u9884\u5904\u7406\u4e4b\u540e\uff0c\u5b8c\u6574\u4ee3\u7801\u5c31\u5f88\u5bb9\u6613\u5199\u51fa\u6765\u4e86\uff0c\u6ce8\u610f\u7ec6\u8282\uff0c\u5199\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u8010\u5fc3\u3002\n\n------------\n- ## \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN=30;\nconst int MAXP=110;\nint n,m,p;\n\nstruct people{\n\tstring name;\n\tbool saidtrue;\n\tbool saidfalse;\n\tbool isg;\n};\npeople a[MAXN];\n\nstruct sentence{\n\tint whosaid;\n\tint lx;//1 \u8868\u793a\u6211\u6709\u7f6a 2 \u8868\u793a\u6211\u6ca1\u6709\u7f6a 3 \u8868\u793aXXX\u6709\u7f6a 4 \u8868\u793aXXX\u6ca1\u6709\u7f6a 5 \u8868\u793a\u8ba8\u8bba\u65e5\u671f 6 \u95f2\u8bdd\n\tint date;\n\tint XXX;\n};\nsentence b[MAXP];\n\nstring pdyong[10]={\n\t\"ass we can\",\n\t\"Today is Monday.\",\n\t\"Today is Tuesday.\",\n\t\"Today is Wednesday.\",\n\t\"Today is Thursday.\",\n\t\"Today is Friday.\",\n\t\"Today is Saturday.\",\n\t\"Today is Sunday.\",\n};\n\ninline void init(){\n\tfor(int i=1;i<=n;i++){\n\t\ta[i].saidtrue=false;\n\t\ta[i].saidfalse=false;\n\t}\n}\n\nint main(){\n\tscanf(\"%d %d %d\",&n,&m,&p);\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i].name;\n\t\ta[i].isg=false;\n\t}\n\tfor(int i=1;i<=p;i++){\n\t\tb[i].lx=6;\n\t\tstring sr;\n\t\tcin>>sr; //\u8f93\u5165\u540d\u5b57 \n\t\tsr.erase(sr.end()-1); //\u53bb\u6389\u5192\u53f7 \n\t\tfor(int j=1; j<=n; j++){ //\u5bfb\u627e\u662f\u7b2c\u51e0\u4e2a\u4eba\u8bf4\u7684 \n\t\t\tif(a[j].name==sr){\n\t\t\t\tb[i].whosaid=j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tgetline(cin,sr,'\\r'); //\u8f93\u5165\u8bc1\u8a00 \n\t\tsr.erase(sr.begin()); //\u53bb\u6389\u884c\u9996\u7a7a\u683c \n\t\tif(sr==\"I am guilty.\") b[i].lx=1; \n\t\telse if(sr==\"I am not guilty.\") b[i].lx=2; //\u5224\u65ad\u8bc1\u8a00\u7c7b\u578b \n\t\telse{\n\t\t\tfor(int j=1;j<=7;j++){\n\t\t\t\tif(sr==pdyong[j]){\n\t\t\t\t\tb[i].lx=5;\n\t\t\t\t\tb[i].date=j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(b[i].lx!=5){\n\t\t\t\tint pos;\n\t\t\t\tfor(pos=0; sr[pos]!=' '; pos++);\n\t\t\t\tstring ccname=sr.substr(0,pos); //\u627e\u5230\u8bf4\u7684\u662f\u7b2c\u51e0\u4e2a\u4eba\u6709\u6ca1\u6709\u7f6a \n\t\t\t\tsr.erase(0,pos);\n\t\t\t\tbool isnameyy=false;\n\t\t\t\tfor(int j=1; j<=n; j++){\n\t\t\t\t\tif(a[j].name==ccname){\n\t\t\t\t\t\tb[i].XXX=j;\n\t\t\t\t\t\tisnameyy=true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(isnameyy==true){\n\t\t\t\t\tif(sr==\" is guilty.\") b[i].lx=3;\n\t\t\t\t\telse if(sr==\" is not guilty.\") b[i].lx=4;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint ans1,ans2; //ans1\u8868\u793a\u8bf4\u8c0e\u7684\u4eba\u6570 ans2\u8868\u793a\u4e0d\u786e\u5b9a\u7684\u4eba\u6570 \n\tfor(int i=1;i<=n;i++){ //\u679a\u4e3e\u7f6a\u72af \n\t\tfor(int j=1;j<=7;j++){ //\u679a\u4e3e\u65e5\u671f \n\t\t\tans1=0; //\u521d\u59cb\u5316 \n\t\t\tans2=0;\n\t\t\tinit();\n\t\t\tfor(int k=1;k<=p;k++){ //\u679a\u4e3e\u8bc1\u8a00 \n\t\t\t\tif(b[k].lx==1) (b[k].whosaid==i) ? a[b[k].whosaid].saidtrue=true:a[b[k].whosaid].saidfalse=true;\n\t\t\t\telse if(b[k].lx==2) (b[k].whosaid!=i) ? a[b[k].whosaid].saidtrue=true:a[b[k].whosaid].saidfalse=true;\n\t\t\t\telse if(b[k].lx==3) (b[k].XXX==i) ? a[b[k].whosaid].saidtrue=true:a[b[k].whosaid].saidfalse=true;\n\t\t\t\telse if(b[k].lx==4) (b[k].XXX!=i) ? a[b[k].whosaid].saidtrue=true:a[b[k].whosaid].saidfalse=true;\n\t\t\t\telse if(b[k].lx==5) (b[k].date==j) ? a[b[k].whosaid].saidtrue=true:a[b[k].whosaid].saidfalse=true;\n\t\t\t\telse continue;\n\t\t\t}\n\t\t\tbool ERR=false;\n\t\t\tfor(int k=1;k<=n;k++){ //\u68c0\u67e5\u662f\u5426\u7b26\u5408\u9898\u610f \n\t\t\t\tif(a[k].saidtrue==true&&a[k].saidfalse==true) ERR=true;\n\t\t\t\telse if(a[k].saidfalse==true) ans1++;\n\t\t\t\telse if(a[k].saidfalse==false&&a[k].saidtrue==false) ans2++;\n\t\t\t}\n\t\t\tif(ERR==true) continue;\n\t\t\tif(ans1<=m&&ans2+ans1>=m&&ans1+ans2<=n) a[i].isg=true;\n\t\t}\n\t}\n\tint posans=0;\n\tint whoisg;\n\tfor(int i=1;i<=n;i++){ //\u8f93\u51fa\u5904\u7406 \n\t\tif(a[i].isg==true){\n\t\t\tposans++;\n\t\t\twhoisg=i;\n\t\t}\n\t}\n\tif(posans>1) cout<<\"Cannot Determine\"<<endl;\n\telse if(posans==0) cout<<\"Impossible\"<<endl;\n\telse cout<<a[whoisg].name<<endl;\n}\n```",
        "postTime": 1540775557,
        "uid": 102473,
        "name": "Setsugesuka",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1039 \u3010\u4fa6\u63a2\u63a8\u7406\u3011"
    },
    {
        "content": "\u4e00\u9053\u5de8\u5927\u7684\u6a21\u62df\u9898\n\n\u5728\u6b64\u4e4b\u524d \u4e0d\u61c2 \u5b57\u7b26\u4e32 string:: substr() , find() .\u7684\u540c\u5b66\u4eec\u81ea\u884c\u4e0a\u7f51\u5b66\u4e60\u4e00\u4e0b\n\n\u4e3b\u8981\u601d\u8def\u90fd\u8d34\u5728\u4ee3\u7801\u4e0a\u4e86\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstring pp[5]={\"am guilty\",\"am not guilty\",\"is guilty.\",\"is not guilty.\"}; // \u8bb0\u5f55\u524d4\u79cd\u8bc1\u8bcd\u7684\u4e3b\u4f53\u90e8\u5206\nstring week[8]={\" \",\"is Monday\",\"is Tuesday\",\"is Wednesday\",\"is Thursday\",\"is Friday\",\"is Saturday\",\"is Sunday\"};// \u8bb0\u5f55\u65e5\u671f\nstring name[1000],s[1000];// \u540d\u5b57\uff0c\u8bc1\u8bcd\u7684\u53d1\u8a00\u4eba\nmap<string,int>id;// \u540d\u5b57\u4e3astring \u7684\u4eba \u7684\u7f16\u53f7\nint n,m,p;\nint v[1000];// \u8bb0\u5f55\u7f16\u53f7\u4e3ai\u7684\u4eba\u6709\u6ca1\u6709\u5df2\u7ecf\u88ab\u786e\u5b9a(\u4e3a\u7f6a\u72af)\u4e86\nstruct node\n{\n\tint x,week,per[100];\n\t// x -->1\u4e3a\u786e\u5b9a\u8bf4\u8c0e\u4e86\n\t// week --> \u4ed6\u8ba4\u4e3a\u7684\u65e5\u671f \uff0c\uff0c\u82e5\u4e3a0\u5219\u4e3a\u6ca1\u6709\u8bf4\u660e\n\t//per --> \u4ed6\u8ba4\u4e3a\u7f16\u53f7\u4e3ai\u7684\u4eba\u7684\u60c5\u51b5\uff0c\uff0c-1\uff08\u4e0d\u662f\u7f6a\u72af\uff09\uff0c0\uff08\u4e0d\u6e05\u695a\uff09\uff0c1\uff08\u662f\u7f6a\u72af\uff09\n\tvector<int>th_1,th_2;\n\t//th_1 --> \u4ed6\u8ba4\u4e3a\u662f\u7f6a\u72af\u7684\u4eba\u7684\u96c6\u5408\n \t//th_2 --> \u4ed6\u8ba4\u4e3a\u4e0d\u662f\u7f6a\u72af\u7684\u4eba\u7684\u96c6\u5408\n}a[100];//\u6bcf\u4e2a\u4eba\u7684\u60c5\u51b5\uff08\u6839\u636e\u8bc1\u8bcd\u63a8\u51fa\uff09\nint work(int day,int g)//\u6b63\u786e\u65e5\u671f\uff0c\uff0cg\u4e3a\u7f6a\u72af\n{\n\tint x=0,y=0,i,f1,f2,j; \n\t/*\n\t\tx --> \u786e\u8ba4 \u8bf4\u8c0e\u7684\u4eba\n\t\ty --> \u4e0d\u786e\u8ba4\u6709\u6ca1\u6709\u8bf4\u8c0e\n\t\tf1 --> 1\u8bf4\u8fc7\u771f\u8bdd   0\u6ca1\u8bf4\u8fc7\u771f\u8bdd\n\t\tf2 --> 1\u8bf4\u8fc7\u8c0e\u8bdd   0\u6ca1\u8bf4\u8fc7\u8c0e\u8bdd\t\n\t*/\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tf1=0;\n\t\tf2=0;\n\t\tif(a[i].x||(a[i].week&&a[i].week!=day)) f2=1;//\u5929\u6c14\u8bf4\u9519 \t\n\t\tif(a[i].week==day) f1=1;//\u5929\u6c14\u8bf4\u5bf9\n\t\tif(a[i].per[g]==-1) f2=1;//\u8bf4\u7f6a\u72af\u4e0d\u662f\u7f6a\u72af\n\t\tif(a[i].per[g]==1) f1=1;//\u8bf4\u7f6a\u72af\u662f\u7f6a\u72af\n\t\tif(i!=g&&a[i].per[i]==1) f2=1;//\u4e0d\u662f\u7f6a\u72af\u8bf4\u81ea\u5df1\u662f\u7f6a\u72af \n\t\tif(i==g&&a[i].per[i]==1) f1=1;//\u7f6a\u72af\u8bf4\u81ea\u5df1\u662f\u7f6a\u72af \n\t\tif(i!=g&&a[i].per[i]==-1) f1=1;//\u4e0d\u662f\u7f6a\u72af\u8bf4\u81ea\u5df1\u4e0d\u662f\u7f6a\u72af \n\t\tfor(j=0;j<a[i].th_1.size();j++)//\u8bf4\u4e0d\u662f\u7f6a\u72af\u7684\u4eba\u662f\u7f6a\u72af \n\t\t\tif(a[i].th_1[j]!=g) f2=1;\n\t\tfor(j=0;j<a[i].th_2.size();j++)//\u8bf4\u4e0d\u662f\u7f6a\u72af\u7684\u4eba\u4e0d\u662f\u7f6a\u72af \n\t\t\tif(a[i].th_2[j]!=g) f1=1;\n\n\t\tif(f1&&f2) return 0; // \u6709\u4e00\u4e2a\u4eba\u771f\u8bdd\u5047\u8bdd\u90fd\u8bf4\u8fc7 --> \u8be5\u5047\u8bbe\u4e0d\u6b63\u786e \u8fd4\u56de 0\n\t\tif(f2) x++; // \u59cb\u7ec8\u8bf4\u8c0e\u7684\u4eba\n\t\tif(!f1&&!f2) y++;// \u4e0d\u786e\u5b9a\u7684\u4eba \u6ca1\u8bf4\u8fc7\u771f\u8bdd\u4e5f\u6ca1\u8bf4\u8fc7\u5047\u8bdd\n\t}\n\tif(x>m) return 0; // \u8bf4\u8c0e\u7684\u4eba\u5927\u4e8e\u89c4\u5b9a\u503c  --> \u8be5\u5047\u8bbe\u4e0d\u6b63\u786e \u8fd4\u56de 0\n\tif(x+y<m) return 0; // \u786e\u5b9a\u8bf4\u8c0e\u7684\u4eba+\u4e0d\u786e\u5b9a\u7684\u4eba==\u5f53\u524d\u8bf4\u8c0e\u8bdd\u7684\u4eba\u7684\u6700\u5927\u503c < m  --> \u8be5\u5047\u8bbe\u4e0d\u6b63\u786e \u8fd4\u56de 0\n\treturn 1; // \u5047\u8bbe\u6210\u7acb\n}\nint main()\n{\n\tint i,x,j,y;\n\tscanf(\"%d%d%d\",&n,&m,&p);//\u603b\u4eba\u6570\uff0c\u8bf4\u8c0e\u7684\u4eba\uff0c\u8bc1\u8bcd\u6570\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tcin>>name[i]; // \u540d\u5b57\n\t\tid[name[i]]=i; // \u8be5\u540d\u5b57\u7684\u7f16\u53f7\n\t}\n\tfor(i=1;i<=p;i++)\n\t{\n\t\tcin>>s[i];   // \u8bc1\u8bcd\u524d\u7684\u540d\u5b57+':'\n\t\ts[i]=s[i].substr(0,s[i].find(':'));// \u628as[i]\u7684':'\u53bb\u6389 \uff0c\uff0c\u53d6':'\u524d\u7684\u4e00\u6bb5\n\t\tx=id[s[i]];//\u7528x\u8bb0\u5f55\u53d1\u8a00\u4eba\u7684\u7f16\u53f7\n\t\tgetchar();\n\t\tgetline(cin,s[i]);//\u8f93\u5165\u8bc1\u8bcd\n\t\tif(s[i][0]=='I'&&s[i][1]==' '&&s[i][2]=='a'&&s[i][3]=='m')\n\t\t// \u5982\u679c\u8bc1\u8bcd\u5c5e\u4e8e\u524d2\u79cd \u5e94\u4e3a'I' \u5f00\u5934\u7684  \uff0c\uff0c\uff0c \u4f46\u662f\u5e94\u8be5\u9632\u8303\u4e00\u4e0b \u6709\u4eba\u540d\u5b57\u4ee5'I'\u5f00\u5934\u7684\u6216\u8005 \u53eb 'I'\u7684\u4eba\uff08\u6211\u4e00\u5f00\u59cb\u6ca1\u52a0\u540e\u9762\u7684\u4e00\u5768\uff0c\u7136\u800c\u4e5f\u8fc7\u4e86\uff09\n\t\t{\n\t\t\tif(s[i].find(pp[0])!=-1)// \u53e5\u5b50\u4e2d\u5b58\u5728   am guilty   -->  \u4ed6\u8ba4\u4e3a\u81ea\u5df1\u662f\u7f6a\u72af\n\t\t\t\ta[x].per[x]=1; \n\t\t\telse if(s[i].find(pp[1])!=-1) a[x].per[x]=-1;// \u53e5\u5b50\u4e2d\u5b58\u5728   am not guilty   -->  \u4ed6\u8ba4\u4e3a\u81ea\u5df1\u4e0d\u662f\u7f6a\u72af\n\t\t\tcontinue;\n\t\t}\n\t\ty=s[i].find(pp[2]); \n\t\tif(y!=-1) // \u8bf4\u660e \u8be5\u8bc1\u8bcd\u5c5e\u4e8e\u7b2c\u4e09\u79cd XXX is guilty.  \n\t\t{\n\t\t\ts[i]=s[i].substr(0,y-1);  // \u5c06 \u8bc1\u8bcd \u7f29\u77ed\u5230\u524d\u9762\u7684\u4eba\u540d\n\t\t\ta[x].per[id[s[i]]]=1;   // \u8bb0\u5f55 \u7f16\u53f7\u4e3ax\uff08\u4e4b\u524d\u5df2\u7ecf\u8bb0\u5f55\u8fc7\u7684\u53d1\u8a00\u4eba\u7f16\u53f7\uff09\u7684\u4eba \u8ba4\u4e3a \u6b64\u4eba \u662f\u7f6a\u72af\n\t\t\ta[x].th_1.push_back(id[s[i]]);  // \u5c06s[i]\u7684\u7f16\u53f7\u63a8\u5165\u5230  \"\u662f\u7f6a\u72af\" \u7684\u96c6\u5408\u4e2d\n\t\t\tcontinue;\n\t\t}\n\t\ty=s[i].find(pp[3]);\n\t\tif(y!=-1) // \u8bf4\u660e \u8be5\u8bc1\u8bcd\u5c5e\u4e8e\u7b2c\u56db\u79cd XXX is not guilty. \n\t\t{\n\t\t\ts[i]=s[i].substr(0,y-1); // \u5c06 \u8bc1\u8bcd \u7f29\u77ed\u5230\u524d\u9762\u7684\u4eba\u540d\n\t\t\ta[x].per[id[s[i]]]=-1;  // \u8bb0\u5f55 \u7f16\u53f7\u4e3ax\u7684\u4eba \u8ba4\u4e3a \u6b64\u4eba \u4e0d\u662f\u7f6a\u72af\n\t\t\ta[x].th_2.push_back(id[s[i]]);  // \u5c06s[i]\u7684\u7f16\u53f7\u63a8\u5165\u5230  \"\u4e0d\u662f\u7f6a\u72af\" \u7684\u96c6\u5408\u4e2d\n\t\t\tcontinue;\n\t\t}\n\t\tfor(j=1;j<=7;j++)  // \u679a\u4e3e\u65e5\u671f\n\t\t{\n\t\t\ty=s[i].find(week[j]); //\u5982\u679c\u67e5\u627e\u5230\u8be5\u65e5\u671f \u5219\u5c5e\u4e8e\u7b2c5\u7c7b\u8bc1\u8bcd\n\t\t\tif(y==-1) continue;  \n\t\t\tif(!a[x].week) a[x].week=j; // \u4e4b\u524d\u6ca1\u6709\u8bb0\u5f55\u8fc7\uff0c\u5c31\u76f4\u63a5\u8bb0\u4e0a\n\t\t\telse if(a[x].week!=j) a[x].x=1; // \u4e4b\u524d\u8bb0\u5f55\u8fc7\uff0c\u5e76\u4e14\u8fd8\u4e0e\u4e0a\u6b21\u8bf4\u7684\u4e0d\u540c\uff0c\u8bf4\u660e\u6b64\u4eba\u8bf4\u8c0e\u4e86\n\t\t\tbreak;\n\t\t}\n\t\t// \u5176\u4ed6\u8bc1\u8bcd\u4e0d\u4e88\u8003\u8651\n\t}\n\tx=0;// \u7f6a\u72af\u7684\u4eba\u6570\n\ty=0;// \u5f53\u524d\u7684\u7f6a\u72af\n\tmemset(v,0,sizeof(v));\n\tfor(i=1;i<=7;i++)  // \u679a\u4e3e\u771f\u5b9e\u65e5\u671f\n\t{\n\t\tfor(j=1;j<=n;j++) // \u679a\u4e3e\u771f\u5b9e\u7f6a\u72af\n\t\t{\n\t\t\tif(v[j]) continue; // \u4e4b\u524d\u5df2\u7ecf\u786e\u8ba4\u8fc7\u4e3a\u7f6a\u72af\u7684\u4eba\u4e0d\u4e88\u8003\u8651\n\t\t\tif(work(i,j))\n\t\t\t{\n\t\t\t\t++x;  // \u7f6a\u72af\u603b\u4eba\u6570+1\n\t\t\t\tv[j]=1; // \u786e\u8ba4 j \u4e3a\u7f6a\u72af\n\t\t\t\tif(x>=2) // \u7f6a\u72af\u4eba\u6570\u5927\u4e8e1\uff0c\uff0c\u8f93\u51fa\u4e0d\u6b62\u4e00\u4e2a\u4eba\u53ef\u80fd\u662f\u7f6a\u72af\n\t\t\t\t{\n\t\t\t\t\t printf(\"Cannot Determine\");\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\ty=j; // \u8bb0\u5f55\u5f53\u524d\u7f6a\u72af\n\t\t\t}\n\t\t}\n\t}\n\tif(y==0) printf(\"Impossible\"); // \u6ca1\u6709\u4eba\u88ab\u8bb0\u5f55 --> \u6ca1\u6709\u4eba\u662f\u7f6a\u72af\n\telse cout<<name[y];\n    return 0;\n}\n```",
        "postTime": 1533008524,
        "uid": 55521,
        "name": "WLHW",
        "ccfLevel": 0,
        "title": "P1039 \u4fa6\u63a2\u63a8\u7406 \u9898\u89e3"
    },
    {
        "content": "\u3010\u9898\u76ee\u63cf\u8ff0\u3011\n\n\u660e\u660e\u540c\u5b66\u6700\u8fd1\u8ff7\u4e0a\u4e86\u4fa6\u63a2\u6f2b\u753b\u300a\u67ef\u5357\u300b\u5e76\u6c89\u9189\u4e8e\u63a8\u7406\u6e38\u620f\u4e4b\u4e2d\uff0c\u4e8e\u662f\u4ed6\u53ec\u96c6\u4e86\u4e00\u7fa4\u540c\u5b66\u73a9\u63a8\u7406\u6e38\u620f\u3002\u6e38\u620f\u7684\u5185\u5bb9\u662f\u8fd9\u6837\u7684\uff0c\u660e\u660e\u7684\u540c\u5b66\u4eec\u5148\u5546\u91cf\u597d\u7531\u5176\u4e2d\u7684\u4e00\u4e2a\u4eba\u5145\u5f53\u7f6a\u72af\uff08\u5728\u660e\u660e\u4e0d\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\uff09\uff0c\u660e\u660e\u7684\u4efb\u52a1\u5c31\u662f\u627e\u51fa\u8fd9\u4e2a\u7f6a\u72af\u3002\u63a5\u7740\uff0c\u660e\u660e\u9010\u4e2a\u8be2\u95ee\u6bcf\u4e00\u4e2a\u540c\u5b66\uff0c\u88ab\u8be2\u95ee\u8005\u53ef\u80fd\u4f1a\u8bf4\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/16.png)\n\n\u8bc1\u8bcd\u4e2d\u51fa\u73b0\u7684\u5176\u4ed6\u8bdd\uff0c\u90fd\u4e0d\u5217\u5165\u903b\u8f91\u63a8\u7406\u7684\u5185\u5bb9\u3002\n\n\u660e\u660e\u6240\u77e5\u9053\u7684\u662f\uff0c\u4ed6\u7684\u540c\u5b66\u4e2d\u6709N\u4e2a\u4eba\u59cb\u7ec8\u8bf4\u5047\u8bdd\uff0c\u5176\u4f59\u7684\u4eba\u59cb\u7ec8\u8bf4\u771f\u3002\n\n\u73b0\u5728\uff0c\u660e\u660e\u9700\u8981\u4f60\u5e2e\u52a9\u4ed6\u4ece\u4ed6\u540c\u5b66\u7684\u8bdd\u4e2d\u63a8\u65ad\u51fa\u8c01\u662f\u771f\u6b63\u7684\u51f6\u624b\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u51f6\u624b\u53ea\u6709\u4e00\u4e2a\uff01\n\n\u3010\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\u3011\n\n- \u8f93\u5165\u683c\u5f0f\n\n\u8f93\u5165\u7531\u82e5\u5e72\u884c\u7ec4\u6210\uff0c\u7b2c\u4e00\u884c\u6709\u4e09\u4e2a\u6574\u6570\uff0cM\uff081\u2264M\u226420\uff09\u3001N\uff081\u2264N\u2264M\uff09\u548cP\uff081\u2264P\u2264100\uff09\uff1bM\u662f\u53c2\u52a0\u6e38\u620f\u7684\u660e\u660e\u7684\u540c\u5b66\u6570\uff0cN\u662f\u5176\u4e2d\u59cb\u7ec8\u8bf4\u8c0e\u7684\u4eba\u6570\uff0cP\u662f\u8bc1\u8a00\u7684\u603b\u6570\u3002\u63a5\u4e0b\u6765M\u884c\uff0c\n\n\u6bcf\u884c\u662f\u660e\u660e\u7684\u4e00\u4e2a\u540c\u5b66\u7684\u540d\u5b57\uff08\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\uff0c\u6ca1\u6709\u4e3b\u683c\uff0c\u5168\u90e8\u5927\u5199\uff09\u3002\n\n\u5f80\u540e\u6709P\u884c\uff0c\u6bcf\u884c\u5f00\u59cb\u662f\u67d0\u4e2a\u540c\u5b66\u7684\u540d\u5b87\uff0c\u7d27\u8ddf\u7740\u4e00\u4e2a\u5192\u53f7\u548c\u4e00\u4e2a\u7a7a\u683c\uff0c\u540e\u9762\u662f\u4e00\u53e5\u8bc1\u8bcd\uff0c\u7b26\u5408\u524d\u8868\u4e2d\u6240\u5217\u683c\u5f0f\u3002\u8bc1\u8bcd\u6bcf\u884c\u4e0d\u4f1a\u8d85\u8fc7250\u4e2a\u5b57\u7b26\u3002\n\n\u8f93\u5165\u4e2d\u4e0d\u4f1a\u51fa\u73b0\u8fde\u7eed\u7684\u4e24\u4e2a\u7a7a\u683c\uff0c\u800c\u4e14\u6bcf\u884c\u5f00\u5934\u548c\u7ed3\u5c3e\u4e5f\u6ca1\u6709\u7a7a\u683c\u3002\n\n- \u8f93\u51fa\u683c\u5f0f\n\n\u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u80fd\u786e\u5b9a\u8c01\u662f\u7f6a\u72af\uff0c\u5219\u8f93\u51fa\u4ed6\u7684\u540d\u5b57\uff1b\u5982\u679c\u7a0b\u5e8f\u5224\u65ad\u51fa\u4e0d\u6b62\u4e00\u4e2a\u4eba\u53ef\u80fd\u662f\u7f6a\u72af\uff0c\u5219\u8f93\u51fa Cannot Determine\uff1b\u5982\u679c\u7a0b\u5e8f\u5224\u65ad\u51fa\u6ca1\u6709\u4eba\u53ef\u80fd\u6210\u4e3a\u7f6a\u72af\uff0c\u5219\u8f93\u51fa Impossible\u3002\n\n\u3010\u8f93\u5165\u8f93\u51fa\u6837\u4f8b\u3011\n\n- \u8f93\u5165\u6837\u4f8b\n\n```\n3 1 5\nMIKE\nCHARLES\nKATE\nMIKE: I am guilty.\nMIKE: Today is Sunday.\nCHARLES: MIKE is guilty.\nKATE: I am guilty.\nKATE: How are you??\n```\n\n- \u8f93\u51fa\u6837\u4f8b\n\n```\nMIKE\n```\n\n$100$\u5206\uff08\u6ee1\u5206\uff09\u601d\u8def\uff1a\n\n- \u5b57\u7b26\u4e32\u600e\u4e48\u5904\u7406\uff1f\n\n\u8fd9\u9898\u7684\u5b57\u7b26\u4e32\u5904\u7406\u6bd4\u8f83\u96be\u3002\u6211\u7528\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4$lx[][]$\u6765\u5b58\u50a8\u8bc1\u8a00\u5c5e\u4e8e\u54ea\u4e00\u79cd\u7c7b\u578b\u3002\u6211\u7528$lx[i][0]$\u6765\u8868\u793a\u7b2c$i$\u53e5\u8bdd\u8bf4\u7684\u90a3\u4e2a\u4eba\u7684\u7f16\u53f7\u3002\u4f8b\u5982\u5728\u6837\u4f8b\u4e2d\uff0cMIKE\u7684\u7f16\u53f7\u5c31\u662f$1$\uff0cCHARLES\u7684\u7f16\u53f7\u5c31\u662f$2$\uff0cKATE\u7684\u7f16\u53f7\u5219\u662f$3$\u3002$lx[i][1]$\u8868\u793a\u7684\u662f\u7b2c$i$\u53e5\u8bdd\u7684\u7c7b\u578b\uff0c\u5982\u4e0b\u3002\n\n|$lx[i][1]$|\u7c7b\u578b|\n| :----------: | :----------: |\n|$1$|Today is XXX.|\n|$2$|I am not guilty.|\n|$3$|I am guilty.|\n|$4$|XXX is guilty.|\n|$5$|XXX is not guilty.|\n\n\u5f53$lx[i][1]=4$\u6216$lx[i][1]=5$\u65f6\u6211\u5c31\u7528$lx[i][2]$\u6765\u8868\u793a\u53d1\u8a00\u8005\u6240\u8ba4\u4e3a\u7684\u7f6a\u72af/\u975e\u7f6a\u72af\u7684\u7f16\u53f7\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53$lx[i][1]=0$\u65f6\u5c31\u8868\u793a\u7b2c$i$\u53e5\u8bdd\u662f\u6ca1\u6709\u7528\u7684\u3002\u5728\u8fd9\u91cc\u6211\u7528\u4e86\u4e00\u4e2a\u51fd\u6570$getlx()$\u6765\u5f97\u5230$lx[][]$\uff0c\u51fd\u6570\u5982\u4e0b~~\uff0c\u6211\u5c45\u7136\u5199\u4e86\u8fd9\u4e48\u591a~~\uff1a\n\n```\nvoid getlx(int x)\n{\n    int lena=strlen(sa[x]+1);\n    int now=lena;\n    for(int i=1;i<=lena;i++)\n    {\n        if(sa[x][i]==':')\n        {\n            lena=i-1;\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        int lenb=strlen(name[i]+1);\n        if(lena!=lenb)\n        {\n            continue;\n        }\n        bool flag=true;\n        for(int j=1;j<=lena;j++)\n        {\n            if(name[i][j]!=sa[x][j])\n            {\n                flag=false;\n                break;\n            }\n        }\n        if(flag==true)\n        {\n            lx[x][0]=i;\n            break;\n        }\n    }\n    int st=lena+2,ed=now,dq=0;\n    while(sa[x][st]==' ')\n    {\n        st++;\n    }\n    for(int i=st;i<=ed;i++)\n    {\n        if(sa[x][i]==' ')\n        {\n            dq=i-1;\n            break;\n        }\n    }\n    if(sa[x][st]=='T' && sa[x][st+1]=='o' && sa[x][st+2]=='d' && sa[x][st+3]=='a' && sa[x][st+4]=='y')\n    {\n        for(int i=st+4;i<=ed;i++)\n        {\n            if(sa[x][i]=='M' && sa[x][i+1]=='o' && sa[x][i+2]=='n' && sa[x][i+3]=='d' && sa[x][i+4]=='a' && sa[x][i+5]=='y')\n            {\n                lx[x][1]=1;\n                lx[x][2]=1;\n                return ;\n            }\n            if(sa[x][i]=='T' && sa[x][i+1]=='u' && sa[x][i+2]=='e' && sa[x][i+3]=='s' && sa[x][i+4]=='d' && sa[x][i+5]=='a' && sa[x][i+6]=='y')\n            {\n                lx[x][1]=1;\n                lx[x][2]=2;\n                return ;\n            }\n            if(sa[x][i]=='W' && sa[x][i+1]=='e' && sa[x][i+2]=='d' && sa[x][i+3]=='n' && sa[x][i+4]=='e' && sa[x][i+5]=='s' && sa[x][i+6]=='d' && sa[x][i+7]=='a' && sa[x][i+8]=='y')\n            {\n                lx[x][1]=1;\n                lx[x][2]=3;\n                return ;\n            }\n            if(sa[x][i]=='T' && sa[x][i+1]=='h' && sa[x][i+2]=='u' && sa[x][i+3]=='r' && sa[x][i+4]=='s' && sa[x][i+5]=='d' && sa[x][i+6]=='a' && sa[x][i+7]=='y')\n            {\n                lx[x][1]=1;\n                lx[x][2]=4;\n                return ;\n            }\n            if(sa[x][i]=='F' && sa[x][i+1]=='r' && sa[x][i+2]=='i' && sa[x][i+3]=='d' && sa[x][i+4]=='a' && sa[x][i+5]=='y')\n            {\n                lx[x][1]=1;\n                lx[x][2]=5;\n                return ;\n            }\n            if(sa[x][i]=='S' && sa[x][i+1]=='a' && sa[x][i+2]=='t' && sa[x][i+3]=='u' && sa[x][i+4]=='r' && sa[x][i+5]=='d' && sa[x][i+6]=='a' && sa[x][i+7]=='y')\n            {\n                lx[x][1]=1;\n                lx[x][2]=6;\n                return ;\n            }\n            if(sa[x][i]=='S' && sa[x][i+1]=='u' && sa[x][i+2]=='n' && sa[x][i+3]=='d' && sa[x][i+4]=='a' && sa[x][i+5]=='y')\n            {\n                lx[x][1]=1;\n                lx[x][2]=7;\n                return ;\n            }\n        }\n    }\n    else if(sa[x][st]=='I' && sa[x][st+2]=='a' && sa[x][st+3]=='m')\n    {\n        st=st+5;\n        if(sa[x][st]=='n' && sa[x][st+1]=='o' && sa[x][st+2]=='t')\n        {\n            st=st+4;\n            if(sa[x][st]=='g' && sa[x][st+1]=='u' && sa[x][st+2]=='i' && sa[x][st+3]=='l' && sa[x][st+4]=='t' && sa[x][st+5]=='y')\n            {\n                lx[x][1]=2;\n                return ;\n            }\n        }\n        else if(sa[x][st]=='g' && sa[x][st+1]=='u' && sa[x][st+2]=='i' && sa[x][st+3]=='l' && sa[x][st+4]=='t' && sa[x][st+5]=='y')\n        {\n            lx[x][1]=3;\n            return ;\n        }\n        else\n        {\n            return ;\n        }\n    }\n    else\n    {\n    \tint t=0;\n    \tint lenst=0;\n    \tchar tst[10001];\n    \tfor(int i=st;i<=dq;i++)\n    \t{\n    \t\ttst[++lenst]=sa[x][i];\n        }\n    \tfor(int i=1;i<=n;i++)\n    \t{\n    \t\tint lenm=strlen(name[i]+1);\n    \t\tif(lenm!=lenst)\n    \t\t{\n    \t\t\tcontinue;\n            }\n            bool flag=true;\n            for(int j=1;j<=lenst;j++)\n            {\n                if(tst[j]!=name[i][j])\n                {\n                    flag=false;\n                    break;\n                }\n            }\n            if(flag==true)\n            {\n                t=i;\n                break;\n            }\n        }\n        if(t==0)\n        {\n            return ;\n        }\n        if(sa[x][dq+1]==' ' && sa[x][dq+2]=='i' && sa[x][dq+3]=='s' && sa[x][dq+4]==' ' && sa[x][dq+5]=='g' && sa[x][dq+6]=='u' && sa[x][dq+7]=='i' && sa[x][dq+8]=='l' && sa[x][dq+9]=='t' && sa[x][dq+10]=='y' && sa[x][dq+11]=='.')\n        {\n            lx[x][1]=4;\n            lx[x][2]=t;\n        }\n        else if(sa[x][dq+1]==' ' && sa[x][dq+2]=='i' && sa[x][dq+3]=='s' && sa[x][dq+4]==' ' && sa[x][dq+5]=='n' && sa[x][dq+6]=='o' && sa[x][dq+7]=='t' && sa[x][dq+8]==' ' && sa[x][dq+9]=='g' && sa[x][dq+10]=='u' && sa[x][dq+11]=='i' && sa[x][dq+12]=='l' && sa[x][dq+13]=='t' && sa[x][dq+14]=='y' && sa[x][dq+15]=='.')\n        {\n            lx[x][1]=5;\n            lx[x][2]=t;\n        }\n    }\n}\n```\n\n- \u600e\u4e48\u627e\u51fa\u7f6a\u72af\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u7684\u662f\u7f6a\u72af\u662f\u8c01\u8fd8\u6709\u4eca\u5929\u662f\u661f\u671f\u51e0\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u7f6a\u72af\u662f\u8c01\u4ee5\u53ca\u4eca\u5929\u662f\u661f\u671f\u51e0\u5373\u53ef\u3002\u6240\u4ee5\u6211\u7528\u4e86\u4e00\u4e2a\u51fd\u6570$check()$\u6765\u5b8c\u6210\u8fd9\u4ef6\u4e8b\u60c5\uff0c\u5728\u8fd9\u91cc\u6211\u7528$check(i,j)$\u6765\u8868\u793a\u7f6a\u72af\u662f\u7b2c$i$\u4e2a\u4eba\uff0c\u4e14\u4eca\u5929\u662f\u661f\u671f\u51e0\uff0c\u7136\u540e\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u7b26\u5408\u8981\u6c42\u5373\u53ef\u3002\u5728\u540e\u9762\u4f1a\u7ee7\u7eed\u8bb2\u3002\n\n- \u4e00\u4e9b\u5751\u70b9\n\n1. \u6709$N$\u4e2a\u4eba\u59cb\u7ec8\u8bf4\u5047\u8bdd\uff0c\u5176\u4f59\u7684\u4eba\u59cb\u7ec8\u8bf4\u771f\u8bdd\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u4e00\u53e5\u5728\u6d4b\u6837\u4f8b\u65f6\u5c31\u53ef\u80fd\u4f1a\u628aKATE\u5224\u4e3a\u7f6a\u72af\u3002\n\n2. \u8fd9$M$\u4e2a\u4eba\u8bf4\u7684$P$\u53e5\u8bdd\u4e0d\u80fd\u591f\u8f6c\u6362\u5927\u5c0f\u5199\u3002\u5728\u6d4b\u8bd5\u6570\u636e\u91cc\u5c31\u6709\u8fd9\u6837\u7684\u4e00\u53e5\u8bdd\uff1a\n\n```\nGUILTY: I am GUILTY.\n```\n\n\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u4e0d\u662f\u8bf4\u4ed6\u662f\u7f6a\u72af\uff0c\u800c\u662f\u8bf4\u4ed6\u7684\u540d\u5b57\u53eb\u505aGUILTY\u54e6~\n\n3. \u8fd8\u6709\uff0c\u4ed6\u4eec\u8bf4\u7684\u8bdd\u7684\u5185\u5bb9\u8981\u5224\u65ad\u5b8c\u5168\u54e6\uff0c\u4e0d\u7136\u5c31\u4f1a\u88ab\u5751\u5230(1)\u3002\u8fd8\u6709\u8981\u6ce8\u610f\u6709\u7684\u4eba\u53ef\u80fd\u4f1a\u53eb``Monday``\u6216\u8fd9``Today``\u4e4b\u7c7b\u7684(2)\uff08\u867d\u7136``Today``\u5728\u6570\u636e\u4e2d\u6ca1\u6709\u6d89\u53ca\u5230\uff0c\u4f46\u8fd8\u662f\u8981\u6ce8\u610f\u4e00\u4e0b\uff09\u3002\n\n```\n(1)guilt: I am guilt.\n(2)Monday: I am not guilty.\n   Today: Today is Monday.\n```\n\n4. \u5982\u679c\u4e00\u4e2a\u4eba\u6ca1\u6709\u8bf4\u8fc7\u8bdd\u6216\u8005\u8bf4\u8fc7\u7684\u8bdd\u90fd\u662f\u4e00\u4e9b\u6ca1\u6709\u7528\u7684\u8bdd\u7684\u8bdd\uff0c\u90a3\u4e48\u4ed6\u53ef\u80fd\u8bf4\u7684\u5168\u662f\u771f\u8bdd\u6216\u8005\u8bf4\u7684\u5168\u662f\u5047\u8bdd\u3002\u5728\u8fd9\u91cc\u6211\u7528\u4e86\u4e00\u4e2a$jh$\u6570\u7ec4\uff0c\u6211\u7528$jh[i]$\u6765\u8868\u793a\u7b2c$i$\u4e2a\u4eba\u8bf4\u7684\u6709\u7528\u7684\u8bdd\u4e2d\u7684\u5047\u8bdd\u7684\u53e5\u6570\uff0c\u4e14\u7528\u4e86\u4e00\u4e2a$sh$\u6570\u7ec4\uff0c\u6211\u7528$sh[i]$\u6765\u8868\u793a\u7b2c$i$\u4e2a\u4eba\u8bf4\u7684\u6709\u7528\u7684\u8bdd\u7684\u53e5\u6570\u3002\u5982\u679c\u6ca1\u6709\u8bf4\u8fc7\u8bdd\u7684\u4eba\u6709$t1$\u4e2a\uff0c\u8bf4\u8fc7\u8bdd\u4e14\u8bf4\u7684\u5168\u662f\u8c0e\u8bdd\u7684\u4eba\u6709$t2$\u4e2a\uff08\u5373$sh[]$\u7b49\u4e8e$0$\u7684\u4e2a\u6570\u7b49\u4e8e$t1$\uff0c$jh[]=sh[] \\bigwedge sh[] \\not= 0$\u7684\u4e2a\u6570\u4e3a$t2$\u4e2a\uff09\uff0c\u90a3\u4e48\u5982\u679c\u5f53$n$\uff08\u5373\u59cb\u7ec8\u8bf4\u8c0e\u7684\u4eba\u6570\uff09\u5728\u95ed\u533a\u95f4$[t1,t1+t2]$\u5185\u7684\u8bdd\u5c31\u7b26\u5408\u8981\u6c42\uff0c\u53cd\u4e4b\u5c31\u8868\u660e\u4e0d\u7b26\u5408\u8981\u6c42\u3002\u4e0b\u9762\u662f\u6211\u7684\u4ee3\u7801\uff0c\uff08\u6211\u7528$n$\u6765\u8868\u793a\u9898\u76ee\u4e2d\u7684$M$\uff0c\u4e14\u7528$m$\u6765\u8868\u793a\u9898\u76ee\u91cc\u7684$N$\uff09\uff0c\u5176\u4e2d\u8fd4\u56de$true$\u8868\u793a\u53ef\u884c\uff0c\u8fd4\u56de$false$\u8868\u793a\u4e0d\u53ef\u884c\uff1a\n\n```\nfor(int i=1;i<=n;i++)\n{\n    if(jh[i]==sh[i] && sh[i]!=0)//\u5148\u8ba1\u7b97\u51fat1\n    {\n        js++;\n    }\n    else if(jh[i]!=sh[i] && jh[i]!=0)//\u5982\u679c\u6709\u4eba\u65e2\u8bf4\u4e86\u771f\u8bdd\uff0c\u53c8\u8bf4\u4e86\u5047\u8bdd\u90a3\u4e48\u5c31\u80af\u5b9a\u4e0d\u53ef\u884c\uff0c\u8fd4\u56defalse\u3002\n    {\n    \treturn false;\n    }\n}\nif(js!=m)//\u82e5t1\u4e0d\u7b49\u4e8em,\u5c31\u8ba1\u7b97t2\u3002\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(sh[i]==0)//\u66f4\u65b0\u5f53\u524d\u7684t1+t2\u3002\n\t\t{\n\t\t\tjs++;\n        }\n        if(js==m)//\u82e5m\u5728\u95ed\u533a\u95f4[t1,t1+t2]\u5185\u5c31\u8868\u793a\u53ef\u884c\uff0c\u8df3\u51fa\u5faa\u73af\u5e76\u8fd4\u56detrue\u3002\n        {\n            break;\n        }\n    }\n}\nif(js==m)//\u82e5\u6ee1\u8db3\u8981\u6c42\u5c31\u8fd4\u56detrue\uff08\u53ef\u884c\uff09\uff0c\u53cd\u4e4b\u5c31\u8fd4\u56defalse\uff08\u4e0d\u53ef\u884c\uff09\u3002\n{\n    return true;\n}\nreturn false;\n```\n\n\u4e0b\u9762\u4e0a$100$\u5206\u4ee3\u7801~\n\n```cpp\n#include <cstdio>\n#include <cstring>\nchar name[101][10001],sa[101][10001];\nint lx[101][3],sh[10001];\nint n=0,m=0,p=0;\nvoid getlx(int x)\n{\n    int lena=strlen(sa[x]+1);\n    int now=lena;\n    for(int i=1;i<=lena;i++)\n    {\n        if(sa[x][i]==':')\n        {\n            lena=i-1;\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        int lenb=strlen(name[i]+1);\n        if(lena!=lenb)\n        {\n            continue;\n        }\n        bool flag=true;\n        for(int j=1;j<=lena;j++)\n        {\n            if(name[i][j]!=sa[x][j])\n            {\n                flag=false;\n                break;\n            }\n        }\n        if(flag==true)\n        {\n            lx[x][0]=i;\n            break;\n        }\n    }\n    int st=lena+2,ed=now,dq=0;\n    while(sa[x][st]==' ')\n    {\n        st++;\n    }\n    for(int i=st;i<=ed;i++)\n    {\n        if(sa[x][i]==' ')\n        {\n            dq=i-1;\n            break;\n        }\n    }\n    if(sa[x][st]=='T' && sa[x][st+1]=='o' && sa[x][st+2]=='d' && sa[x][st+3]=='a' && sa[x][st+4]=='y')\n    {\n        for(int i=st+4;i<=ed;i++)\n        {\n            if(sa[x][i]=='M' && sa[x][i+1]=='o' && sa[x][i+2]=='n' && sa[x][i+3]=='d' && sa[x][i+4]=='a' && sa[x][i+5]=='y')\n            {\n                lx[x][1]=1;\n                lx[x][2]=1;\n                return ;\n            }\n            if(sa[x][i]=='T' && sa[x][i+1]=='u' && sa[x][i+2]=='e' && sa[x][i+3]=='s' && sa[x][i+4]=='d' && sa[x][i+5]=='a' && sa[x][i+6]=='y')\n            {\n                lx[x][1]=1;\n                lx[x][2]=2;\n                return ;\n            }\n            if(sa[x][i]=='W' && sa[x][i+1]=='e' && sa[x][i+2]=='d' && sa[x][i+3]=='n' && sa[x][i+4]=='e' && sa[x][i+5]=='s' && sa[x][i+6]=='d' && sa[x][i+7]=='a' && sa[x][i+8]=='y')\n            {\n                lx[x][1]=1;\n                lx[x][2]=3;\n                return ;\n            }\n            if(sa[x][i]=='T' && sa[x][i+1]=='h' && sa[x][i+2]=='u' && sa[x][i+3]=='r' && sa[x][i+4]=='s' && sa[x][i+5]=='d' && sa[x][i+6]=='a' && sa[x][i+7]=='y')\n            {\n                lx[x][1]=1;\n                lx[x][2]=4;\n                return ;\n            }\n            if(sa[x][i]=='F' && sa[x][i+1]=='r' && sa[x][i+2]=='i' && sa[x][i+3]=='d' && sa[x][i+4]=='a' && sa[x][i+5]=='y')\n            {\n                lx[x][1]=1;\n                lx[x][2]=5;\n                return ;\n            }\n            if(sa[x][i]=='S' && sa[x][i+1]=='a' && sa[x][i+2]=='t' && sa[x][i+3]=='u' && sa[x][i+4]=='r' && sa[x][i+5]=='d' && sa[x][i+6]=='a' && sa[x][i+7]=='y')\n            {\n                lx[x][1]=1;\n                lx[x][2]=6;\n                return ;\n            }\n            if(sa[x][i]=='S' && sa[x][i+1]=='u' && sa[x][i+2]=='n' && sa[x][i+3]=='d' && sa[x][i+4]=='a' && sa[x][i+5]=='y')\n            {\n                lx[x][1]=1;\n                lx[x][2]=7;\n                return ;\n            }\n        }\n    }\n    else if(sa[x][st]=='I' && sa[x][st+2]=='a' && sa[x][st+3]=='m')\n    {\n        st=st+5;\n        if(sa[x][st]=='n' && sa[x][st+1]=='o' && sa[x][st+2]=='t')\n        {\n            st=st+4;\n            if(sa[x][st]=='g' && sa[x][st+1]=='u' && sa[x][st+2]=='i' && sa[x][st+3]=='l' && sa[x][st+4]=='t' && sa[x][st+5]=='y')\n            {\n                lx[x][1]=2;\n                return ;\n            }\n        }\n        else if(sa[x][st]=='g' && sa[x][st+1]=='u' && sa[x][st+2]=='i' && sa[x][st+3]=='l' && sa[x][st+4]=='t' && sa[x][st+5]=='y')\n        {\n            lx[x][1]=3;\n            return ;\n        }\n        else\n        {\n            return ;\n        }\n    }\n    else\n    {\n    \tint t=0;\n    \tint lenst=0;\n    \tchar tst[10001];\n    \tfor(int i=st;i<=dq;i++)\n    \t{\n    \t\ttst[++lenst]=sa[x][i];\n        }\n    \tfor(int i=1;i<=n;i++)\n    \t{\n    \t\tint lenm=strlen(name[i]+1);\n    \t\tif(lenm!=lenst)\n    \t\t{\n    \t\t\tcontinue;\n            }\n            bool flag=true;\n            for(int j=1;j<=lenst;j++)\n            {\n                if(tst[j]!=name[i][j])\n                {\n                    flag=false;\n                    break;\n                }\n            }\n            if(flag==true)\n            {\n                t=i;\n                break;\n            }\n        }\n        if(t==0)\n        {\n            return ;\n        }\n        if(sa[x][dq+1]==' ' && sa[x][dq+2]=='i' && sa[x][dq+3]=='s' && sa[x][dq+4]==' ' && sa[x][dq+5]=='g' && sa[x][dq+6]=='u' && sa[x][dq+7]=='i' && sa[x][dq+8]=='l' && sa[x][dq+9]=='t' && sa[x][dq+10]=='y' && sa[x][dq+11]=='.')\n        {\n            lx[x][1]=4;\n            lx[x][2]=t;\n        }\n        else if(sa[x][dq+1]==' ' && sa[x][dq+2]=='i' && sa[x][dq+3]=='s' && sa[x][dq+4]==' ' && sa[x][dq+5]=='n' && sa[x][dq+6]=='o' && sa[x][dq+7]=='t' && sa[x][dq+8]==' ' && sa[x][dq+9]=='g' && sa[x][dq+10]=='u' && sa[x][dq+11]=='i' && sa[x][dq+12]=='l' && sa[x][dq+13]=='t' && sa[x][dq+14]=='y' && sa[x][dq+15]=='.')\n        {\n            lx[x][1]=5;\n            lx[x][2]=t;\n        }\n    }\n}\nbool check(int guilty,int day)\n{\n    int jh[10001];\n    int js=0;\n    for(int i=1;i<=n;i++)\n    {\n        jh[i]=0;\n    }\n    for(int i=1;i<=p;i++)\n    {\n        if(lx[i][1]==0)\n        {\n            continue;\n        }\n        if(lx[i][1]==1)\n        {\n            if(lx[i][2]!=day)\n            {\n                jh[lx[i][0]]++;\n            }\n        }\n        else if(lx[i][1]==2)\n        {\n            if(lx[i][0]==guilty)\n            {\n                jh[lx[i][0]]++;\n            }\n        }\n        else if(lx[i][1]==3)\n        {\n            if(lx[i][0]!=guilty)\n            {\n                jh[lx[i][0]]++;\n            }\n        }\n        else if(lx[i][1]==4)\n        {\n            if(lx[i][2]!=guilty)\n            {\n                jh[lx[i][0]]++;\n            }\n        }\n        else if(lx[i][1]==5)\n        {\n            if(lx[i][2]==guilty)\n            {\n                jh[lx[i][0]]++;\n            }\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(jh[i]==sh[i] && sh[i]!=0)\n        {\n            js++;\n        }\n        else if(jh[i]!=sh[i] && jh[i]!=0)\n        {\n        \treturn false;\n        }\n    }\n    if(js!=m)\n    {\n    \tfor(int i=1;i<=n;i++)\n    \t{\n    \t\tif(sh[i]==0)\n    \t\t{\n    \t\t\tjs++;\n            }\n            if(js==m)\n            {\n                break;\n            }\n        }\n    }\n    if(js==m)\n    {\n        return true;\n    }\n    return false;\n}\nint main()\n{\n    scanf(\"%d %d %d\",&n,&m,&p);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%s\",name[i]+1);\n    }\n    scanf(\"\\n\");\n    for(int i=1;i<=p;i++)\n    {\n        gets(sa[i]+1);\n        getlx(i);\n    }\n    for(int i=1;i<=p;i++)\n    {\n    \tif(lx[i][1]!=0)\n    \t{\n    \t\tsh[lx[i][0]]++;\n    \t}\n    }\n    char ans[10001];\n    bool zd=false;\n    for(int i=1;i<=n;i++)\n    {\n    \tfor(int j=1;j<=7;j++)\n    \t{\n    \t\tif(check(i,j)==true)\n    \t\t{\n    \t\t\tif(zd==false)\n    \t\t\t{\n                    int lendq=strlen(name[i]+1);\n        \t\t\tfor(int k=1;k<=lendq;k++)\n        \t\t\t{\n        \t\t\t\tans[k]=name[i][k];\n                    }\n                    zd=true;\n                    break;\n                }\n                else\n                {\n                    printf(\"Cannot Determine\");\n                    return 0;\n                }\n            }\n        }\n    }\n    if(zd==true)\n    {\n        int lenda=strlen(ans+1);\n        for(int i=1;i<=lenda;i++)\n        {\n            printf(\"%c\",ans[i]);\n        }\n    }\n    else\n    {\n        printf(\"Impossible\");\n    }\n    return 0;\n}\n```",
        "postTime": 1520580868,
        "uid": 48269,
        "name": "Drinkkk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1039 \u3010[NOIP2003]\u4fa6\u63a2\u63a8\u7406\u3011"
    },
    {
        "content": "  \n\n------------\n\n  **\u5475\u5475\uff0c\u6211\u8fd9\u4e2a[\u849f\u84bb](https://www.luogu.org/blog/xinyueaaaa/)\u53c8\u88ab\u8fd9\u5751\u9898\u5361\u4f4f\u4e86\uff01**\n\n  **\u8fd9\u9898\u76f4\u63a5\u4f7f\u7528**~~\u66b4\u529b~~**\u5e94\u8be5\u53ef\u4ee5**\n  \n\n------------\n\n  \n**\u679a\u4e3e**\n------------\n****\n 1. **\u7f6a\u72af**\uff1f\n \n 2. **\u661f\u671f\u51e0**\uff1f\n \n 3. **\u7b54\u6848\u552f\u4e00\u65f6:(~~\u771f\u76f8\u53ea\u6709\u4e00\u4e2a~~)\u5c31\u662f\u90a3\u4e2a\u4eba**\n \n 4. **\u7b54\u6848\u4e3a\u96f6\u65f6:Impossible**\n \n 5. **\u7b54\u6848\u4e3a\u591a\u4e2a\u65f6:Cannot Determine**\n \n**\u5224\u65ad**\n------------\n\n\n------------\n 1. **\u8bf4\u6211\u4e0d\u662f\u7f6a\u72af\u786e\u662f\u4f60\u679a\u4e3e\u7684\u7f6a\u72af;**\n 2. **\u8bf4\u6211\u662f\u7f6a\u72af\u786e\u4e0d\u662f\u4f60\u679a\u4e3e\u7684\u7f6a\u72af;**\n 3. **\u661f\u671f\u51e0\u4e0d\u5bf9;**\n 4. **\u8bf4\u9519\u4e86\u7f6a\u72af;**\n\n------------\n\n\n\n** \u6ce8\u610f**\n------------\n\n\n------------\n\n 1. **\u6709\u4eba\u53ebGUILTY**\n \n 2. **\u6ce8\u610f\u62fc\u5199 \uff08\u6bd4\u5982\uff1aI am not guity.) **\n \n\n ** \u8bfb\u5165**\n------------\n\n\n------------\n\n```\nstring Read()//\u7384\u5b66\u8bfb\u5165\n\t{\n\t\tchar c=' ';string k=\"\";\n\t\twhile(c!='\\n')scanf(\"%c\",&c);//\u53e5\u8bdd\u7684\u5f71\u54cd\n\t\twhile(1)\n\t\t{\t\n\t\t\tscanf(\"%c\",&c);k=k+c;\n\t\t\tif(c!=':'&&c!=' '&&(c>'z'||c<'A')){return k;}\n\t\t}\n\t}\n```\n\n \u4e3b\u8981\u662f\u6709\u4eba\u5c45\u7136\u662f**\u8fd9\u4e48\u8bf4**\u7684\uff1axx: I am not **guity**.** Am I???**\n \n------------\n\n \n \n **\u4ee3\u7801**\n------------\n\n```\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint m,n,p;\nstring name[30];\nint v[21];\nstruct In{int x;string w;}a[205];\nstring weather[10]={\" Today is Monday.\",\" Today is Tuesday.\",\" Today is Wednesday.\",\" Today is Thursday.\",\" Today is Friday.\",\" Today is Saturday.\",\" Today is Sunday.\"};\nint Belong(string x)\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(x==name[i])return i;\n\t}\n\treturn -1;\n}\nvoid Find(int k,string x)\n{\n\tstring o=\"\",p=\"\";int q;\n\tfor(int i=0;i<=x.length()-1;i++)\n\t{\n\t\tif(x[i]==':'){q=i;break;}\n\t}\n\tfor(int i=0;i<=q-1;i++)\n\t{\n\t\to=o+x[i];\n\t}\n\tfor(int i=q+1;i<=x.length()-1;i++)\n\t{\n\t\tp=p+x[i];\n\t}\n\ta[k].x=Belong(o);\n\ta[k].w=p;\n}\nstring Read()//\u8bfb\u5165\n{\n\tchar c=' ';string k=\"\";\n\twhile(c!='\\n')scanf(\"%c\",&c);\n\twhile(1)\n\t{\t\n\t\tscanf(\"%c\",&c);k=k+c;\n\t\tif(c!=':'&&c!=' '&&(c>'z'||c<'A')){return k;}\n\t}\n}\nint TP(int pd,string x)//\u5224\u65adxxx is guilty \u7684\u60c5\u51b5 \n{\n\tstring a=\"\",b=\"\";int sj;\n\tfor(int i=1;i<=x.length()-1;i++)//\u6ce8\u610f\u6392\u9664\u7a7a\u683c\n\t{\n\t\tif(x[i]=='i'&&x[i+1]=='s'&&x[i+2]==' '&&x[i-1]==' ')\n\t\t{\n\t\t\tfor(int j=1;j<=i-2;j++)a=a+x[j];\n\t\t\tfor(int j=i;j<=x.length()-1;j++)b=b+x[j];\n\t\t}\n\t}\n\tif(a==\"\")return -1;\n\tsj=Belong(a);\n\tif(sj==-1||(b!=\"is not guilty.\"&&b!=\"is guilty.\"))return -1;\n\tif(sj==pd&&b==\"is not guilty.\")return 1;\n\tif(sj!=pd&&b==\"is guilty.\")return 1;\n\treturn 0;\n}\nint main()\n{\n\tstring k;\n\tint num1=0,num2=0,ans=0,o,f;\n\tscanf(\"%d%d%d\",&n,&m,&p);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>name[i];\n\t}\n\tfor(int i=1;i<=p;i++)\n\t{\n\t\tk=Read();\n\t\tFind(i,k);\n\t}\n\tfor(int i=1;i<=n;i++)//\u679a\u4e3e\u7f6a\u72af\n\t{\n\t\tint bj=0;\n\t\tfor(int j=0;j<=6;j++)\n\t\t{\n\t\t\tmemset(v,-1,sizeof(v));\n\t\t\tnum1=0,num2=0,f=0;\n\t\t\tfor(int x=1;x<=p;x++)\n\t\t\t{\n\t\t\t\tint pd1=-1,pd2=-1,pd3=-1,pd4=-1,l,s=0,b=0;\n\t\t\t\tif(a[x].w==\" I am not guilty.\"&&a[x].x==i)pd1=1;\n\t\t\t\tif(a[x].w==\" I am not guilty.\"&&a[x].x!=i)pd1=0;\n\t\t\t\tif(a[x].w==\" I am guilty.\"&&a[x].x!=i)pd2=1;\n\t\t\t\tif(a[x].w==\" I am guilty.\"&&a[x].x==i)pd2=0;\n\t\t\t\tfor(int y=0;y<=6;y++)//\u679a\u4e3e\u661f\u671f\u51e0\n\t\t\t\t{\n\t\t\t\t\tif(a[x].w==weather[y]&&y!=j)pd3=1;\n\t\t\t\t\tif(a[x].w==weather[y]&&y==j)pd3=0;\n\t\t\t\t}\n\t\t\t\tif(TP(i,a[x].w)==1)pd4=1;\n\t\t\t\tif(TP(i,a[x].w)==0)pd4=0;\n\t\t\t\tif(pd1==1||pd2==1||pd3==1||pd4==1)s=1;\n\t\t\t\tif(pd1==0||pd2==0||pd3==0||pd4==0)b=1;\n\t\t\t\tif(s==1&&b==1){f=1;break;}//\u81ea\u76f8\u77db\u76fe\n\t\t\t\tif(s==1&&v[a[x].x]==-1)v[a[x].x]=1,num1+=1;\n\t\t\t\tif(b==1&&v[a[x].x]==-1)v[a[x].x]=0,num2+=1;\n\t\t\t\tif((v[a[x].x]==0&&s==1)||(v[a[x].x]==1&&b==1))f=1;//\u81ea\u76f8\u77db\u76fe\n\t\t\t}\n\t\t\tif(f==1)continue;//\u81ea\u76f8\u77db\u76fe,\u5047\u8bbe\u9519\u8bef\n\t\t\tif(n-num2>=m&&m>=num1)bj=1;\n\t\t}\n\t\tif(bj==1)o=i,ans++;\n\t}\n\tif(ans==1)cout<<name[o]<<'\\n';\n\tif(ans==0)printf(\"Impossible\\n\");\n\tif(ans>=2)printf(\"Cannot Determine\\n\");\n\treturn 0;\n}\n```\n\n**\u8c03\u8bd5**\n------------\n\n**\uff08\u53ef\u8c03\u8bd5\u89c2\u5bdf\uff09**\n\n------------\n```\n//\t\t\tcout<<endl;\n//\t\t\tfor(int x=1;x<=n;x++)\n//\t\t\t{\n//\t\t\t\tif(v[x]==1)cout<<name[x]<<' '<<\"\u5047\"<<endl;\n//\t\t\t\tif(v[x]==0)cout<<name[x]<<' '<<\"\u771f\"<<endl;\n//\t\t\t} \n//\t\t\tcout<<endl;\n```\n\n\n------------\n",
        "postTime": 1548664310,
        "uid": 122599,
        "name": "\u3010\u5929\u671d\u3011MILK",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1039 \u3010\u4fa6\u63a2\u63a8\u7406\u3011"
    },
    {
        "content": "\u5927\u4f6c\u4eec\u5c06\u5c31\u770b\u5427\uff0c\u800c\u4e14\u7528Pascal\u7684\u4e5f\u4e0d\u591a\u3002\u3002\u3002\n\n------------\n    \u8fd9\u9053\u9898\u4e00\u770b\u5c31\u662f\u641c\u7d22\u4e0e\u56de\u6eaf\uff0c\u96be\u5ea6\u4e3b\u8981\u5728\u5982\u4f55\u5b58\u50a8\u4e0a\n    \u6ce8\u610f\uff1a\u6211\u7a0b\u5e8f\u4e2d\u91c7\u7528\u7684\u662f\u6587\u672c\u8bfb\u5165\u548c\u8f93\u51fa\uff0c\u5207\u4e0d\u53ef\u4ee5\u76f4\u63a5\u63d0\u4ea4\n    \n    \u7b2c\u4e00\u4e2a\uff0c\u6211\u4eec\u80af\u5b9a\u662f\u5b57\u7b26\u4e32\u6570\u7ec4\u8bb0\u5f55\u4eba\u540d\uff0c\u8fd9\u6837\u6bcf\u4e2a\u4eba\u540d\u5bf9\u5e94\u4e00\u4e2a\u76f8\u5e94\u7684\u5e8f\u53f7\n    \u4f46\u662f\uff0c\u5728\u8bfb\u5165\u8bc1\u8bcd\u65f6\u5982\u4f55\u5224\u65ad\u5e76\u8bb0\u5f55\u662f\u8c01\u5462\uff1f\n    \u6700\u7b80\u5355\u7684\u5c31\u662f\u4e00\u4e2a\u4e2a\u641c\u7d22\uff0c\u627e\u5230\u76f8\u540c\u7684\u5c31\u53d6\u51fa\u5e8f\u53f7\uff0c\u81f3\u591a\u7684\u81f3\u591a\uff0c\u4e5f\u5c312000\u6b21\u5427\n    \u8fd9\u91cc\u6211\u8bb2\u4e00\u4e0b\u6211\u7684\u8bb0\u5f55\u65b9\u6cd5\uff08\u52ff\u55b7\uff09\uff1a\n    \u6211\u4eec\u6309 \u5e8f\u53f7+\u4eba\u540d \u7684\u683c\u5f0f\u8bb0\u5f55\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32names\u4e0a\uff0c\n    \u5e8f\u53f7\u63a8\u8350\u4f7f\u7528chr\u51fd\u6570\uff0c\u5c06\u5176\u628a\u5e8f\u53f7\u8f6c\u6362\u4e3a\u4e00\u4e2a\u5b57\u7b26\uff0c\u641c\u7d22\u65f6\u7528pos\u51fd\u6570\u641c\u7d22\u4eba\u540d\uff0c\u8fd4\u56de\u503c\u51cf\u53bb1\uff0c\u8fd9\u65f6\u5bf9\u5e94names\u4e2d\u7684\u5c31\u662f\u5e8f\u53f7\u8f6c\u6362\u4e3a\u7684\u5b57\u7b26\uff0c\u518d\u7528ord\u5c31\u53ef\u4ee5\u53d6\u51fa\u5e8f\u53f7\uff0c\u5177\u4f53\u5b9e\u73b0\u89c1\u4e0b\n    for i:=1 to M do\n    begin\n    readln(w,a[i].name);\n    names:=names+chr(i)+a[i].name;\n    end;\n    \n    function searchname(q:string):longint;\n    begin\n    searchname:=ord(names[pos(q,names)-1]);\n    end;\n    \n    \u63a5\u4e0b\u6765\uff0c\u8bb0\u5f55\u8bc1\u8bcd\uff08\u8fd9\u91cc\u6211\u662f\u641c\u7d22\u7f6a\u72af\u548c\u65f6\u95f4\uff0c\u5982\u679c\u662f\u76f4\u63a5\u641c\u7d22\u8bf4\u8c0e\u8005\u5c31\u4e0d\u7528\u770b\u4e86\uff09\n    \u5206\u4e3a\u4e24\u5757\uff0c\u4e00\u4e2a\u662f\u5173\u4e8e\u7f6a\u72af\u7684\u8bc1\u8bcd\uff0c\u53e6\u4e00\u4e2a\u662f\u5173\u4e8e\u65f6\u95f4\u7684\n    \n    type\n    data=record\n           name:string;\n           sum:longint;\n           sayer:array[1..100] of longint;\n           said:array[1..100] of boolean;\n           end;\n    weather=record\n              sum:longint;\n              sayer:array[1..100] of longint;\n              said:array[1..100] of longint;\n              end;\n              \n    sum\u8868\u793a\u6709\u591a\u5c11\u4eba\u8bc1\u8bcd\u6d89\u53ca\uff0csayer\u8868\u793a\u8bc1\u8bcd\u6765\u6e90\uff0csaid\u8868\u793a\u8bc1\u8bcd\u5185\u5bb9\uff0c\n    \u5728\u7f6a\u72af\u4e2dtrue\u4ee3\u8868\u88ab\u8bf4\u4e3a\u7f6a\u72af\uff0c\u53cd\u4e4b\uff0c\u5219\u4e0d\u662f\uff0c\u65f6\u95f4\u4e2d1~7 \u4ee3\u8868\u661f\u671f\u51e0\n    \n    \u7b2c\u4e09\u4e2a\u8bb0\u5f55\u8fd9\u4e2a\u4eba\u662f\u5426\u8bf4\u8c0e\n    \u7528c,d,e\u4e09\u4e2a\u6570\u7ec4\uff0c0\u4ee3\u8868\u672a\u786e\u8ba4\uff08\u8b6c\u5982\u6ca1\u8bf4\u8fc7\u8bc1\u8bcd\uff0c\u6216\u8005\u8bf4\u7684\u5168\u662f\u9a9a\u8bdd\uff09\n    1\u4ee3\u8868\u8bf4\u771f\u8bdd\uff0c2\u4ee3\u8868\u8bf4\u5047\u8bdd\n------------\n\n    \u597d\u7684\uff0c\u4e0b\u9762\u7528\u7a0b\u5e8f\u53ca\u6ce8\u91ca\u89e3\u91ca\uff0c\u6709\u70b9\u957f\uff0c\u6807\u8bc6\u7b26\u6709\u70b9\u6df7\u4e71\uff0c\u5fcd\u4e00\u624b\u5427\n    \n   ```pascal\ntype\n  data=record\n         name:string;\n         sum:longint;\n         sayer:array[1..100] of longint;\n         said:array[1..100] of boolean;\n         end;\n  weather=record\n            sum:longint;\n            sayer:array[1..100] of longint;\n            said:array[1..100] of longint;\n            end;\nvar\n  a:array[1..20] of data;\n  b:weather;\n  c,d:array[1..20] of longint;\n  names:string;//\u7406\u8bba\u4e0a\u8be5\u7528ansistring\u7684\uff0c\n              //\u4f46\u4e3a\u4e86\u8c03\u8bd5\u65b9\u4fbf\uff0c\n              //\u5148\u7528\u7684\u8fd9\u4e2a\uff08ansistring\u7528\u4e0d\u4e86\u53d8\u91cf\u76d1\u89c6\uff09\uff0c\n              //\u540e\u9762\u5fd8\u8bb0\u6539\u4e86\u3002\u4f46\u5c45\u7136\u4e5f\u53ef\u4ee5\u8fc7\uff0c\u4e0d\u8fc7\u522b\u5b66\u6211\n  M,N,P,i,s:longint;\n  r:boolean;\n  w:text;\n\nfunction searchname(q:string):longint;\nbegin\n  searchname:=ord(names[pos(q,names)-1]);\nend;\n\nprocedure add;//\u7528\u4e8e\u8bfb\u5165\u8bc1\u8bcd\uff0c\u5177\u4f53\u4e3a\u4ec0\u4e48\u52a0\u4e0a\u4e00\u4e2a\u6570\u6216\u8005\u51cf\u53bb\u4e00\u4e2a\u6570\uff0c\n              //\u8bf7\u81ea\u5df1\u5217\u51fa\u6765\u63a8\u5427\uff0c\u5f88\u7b80\u5355\u7684\nvar\n  x:string;\n  q,p,t1,t2,o:longint;\n\nbegin\n  readln(w,x);\n  q:=pos(':',x)-1;\n  p:=searchname(copy(x,1,q));\n  o:=0;\n  t1:=pos('I am guilty',x);\n  t2:=pos('I am not guilty',x);\n  if (t1>0) or (t2>0) then\n    begin\n    inc(a[p].sum);\n    a[p].sayer[a[p].sum]:=p;\n    a[p].said[a[p].sum]:=t1>0;\n    exit;\n    end;\n  t1:=pos(' is guilty',x);\n  t2:=pos(' is not guilty',x);\n  if (t1>0) or (t2>0) then\n    begin\n    q:=q+3;\n    if t1>0 then o:=t1 else o:=t2;\n    o:=searchname(copy(x,q,o-q));\n    inc(a[o].sum);\n    a[o].sayer[a[o].sum]:=p;\n    a[o].said[a[o].sum]:=t1>0;\n    exit;\n    end;\n  t1:=pos('Today is',x)+9;//\u65f6\u95f4\n  if t1>9 then\n    begin\n    t2:=0;\n    while (t1+t2<=length(x)) and (x[t1+t2]<>' ') do inc(t2);\n    dec(t2);\n    case copy(x,t1,t2) of\n      'Monday':o:=1;\n      'Tuesday':o:=2;\n      'Wednesday':o:=3;\n      'Thursday':o:=4;\n      'Friday':o:=5;\n      'Saturday':o:=6;\n      'Sunday':o:=7;\n      end;\n    inc(b.sum);\n    b.sayer[b.sum]:=p;\n    b.said[b.sum]:=o;\n    exit;\n    end;\nend;\n\nfunction check:boolean;//\u6700\u540e\u7528\u7684\uff0c\u53ef\u4ee5\u5148\u770b\u4e0b\u9762\u7684\nvar\n  i,t,f:longint;\nbegin\n  t:=0;//\u8bb0\u5f55\u4e0d\u77e5\u9053\u771f\u5047\u7684\u4eba\n  f:=0;//\u8bb0\u5f55\u8bf4\u8c0e\u7684\u4eba\n  for i:=1 to M do\n    if c[i]=2 then inc(f)\n    else if c[i]=0 then inc(t);\n  if (f<=N) and (f+t>=N) then exit(true) else exit(false);\n  //\u6ce8\u610f\uff0c\u4e0d\u77e5\u9053\u771f\u5047\u7684\u5e94\u8be5\u4e5f\u53ef\u4ee5\u7b97\u4f5c\u8bf4\u5047\u8bdd\u7684\nend;\n\nfunction sort1(p:longint;u:boolean):boolean;//\u641c\u7d22\u7f6a\u72af\nvar\n  i,q:longint;\nbegin\n  sort1:=true;\n  for i:=1 to a[p].sum do\n    begin\n    q:=a[p].sayer[i];\n    if a[p].said[i]=u then\n      if c[q]<>2 then c[q]:=1\n      else exit(false)\n    else\n      if c[q]<>1 then c[q]:=2\n      else exit(false);\n  end;//\u5982\u679c\u51b2\u7a81\u5c31\u9000\u5427\n  if u then//\u5077\u61d2\uff0c\u8f93\u5165u=true\u5b9e\u9645\u4e0a\u662f\u5047\u8bbe\u8fd9\u4e2a\u4eba\u662f\u7f6a\u72af\uff0c\n           //\u4ee5\u6b64\u641c\u7d22\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u5c31\u4e0d\u662f\u7f6a\u72af\uff0c\u68c0\u7d22\u5269\u4e0b\u4eba\u7684\u8bdd\uff0c\n           //\u8fd9\u91cc\u628a\u4e24\u4e2a\u7a0b\u5e8f\u5408\u5e76\u4e86\n    begin\n    for i:=1 to p-1 do if not(sort1(i,false)) then exit(false);\n    for i:=p+1 to M do if not(sort1(i,false)) then exit(false);\n    end;\nend;\n\nfunction sort3(p:longint):boolean;//\u5148\u770b\u4e0b\u9762\u7684sort2\nvar\n  i,q:longint;\nbegin\n  for i:=1 to b.sum do//\u641c\u7d22\u65f6\u95f4\n    begin\n    q:=b.sayer[i];\n    if b.said[i]=p then\n      if c[q]<>2 then c[q]:=1\n      else exit(false)\n    else\n      if c[q]<>1 then c[q]:=2\n        else exit(false);\u51b2\u7a81\u5c31\u9000\u5457\n    end;\n  exit(true);\nend;\n\nfunction sort2:boolean;\nvar\n  e:array[1..20] of longint;\n  i:longint;\nbegin\n  sort2:=false;\n  e:=c;\u8bb0\u5f55c\u7684\u503c\uff0c\u65f6\u95f4\u641c\u7d22\u65f6\u4f1a\u53cd\u590d\u66f4\u6539\uff0c\u907f\u514d\u4e92\u76f8\u5f71\u54cd\n  for i:=1 to 7 do\n    if sort3(i) then exit(true) else c:=e;//\u4f9d\u6b21\u679a\u4e3e\uff0c\u5047\u8bbe\u4eca\u5929\u662f\u5468i\n    //\u6765\u641c\u7d22\u65f6\u95f4\uff0c\u6ce8\u610f\uff0c\u8fd9\u662f\u5b58\u5728\u6027\u95ee\u9898\uff0c\u53ea\u8981\u6709\u89e3\u5373\u53ef\uff0c\n    //\u6709\u89e3\u5c31\u9000\uff0c\u53cd\u4e4b\u91cd\u7f6ec\nend;\n\nbegin\n  assign(w,'in.in');\n  reset(w);\n  readln(w,M,N,P);\n  for i:=1 to M do\n    begin\n    readln(w,a[i].name);\n    names:=names+chr(i)+a[i].name;\n    end;\n  for i:=1 to P do add;\n  close(w);\n  assign(w,'out.out');\n  rewrite(w);\n  fillchar(c,sizeof(c),0);\n  r:=false;d:=c;s:=0;//\u521d\u59cb\u5316\u5e76\u8bb0\u5f55\n  for i:=1 to M do//\u4f9d\u6b21\u679a\u4e3e\u7f6a\u72af\n    begin\n    if sort1(i,true) and sort2 and check then//\u4e0d\u7528\u62c5\u5fc3\u591a\u6267\u884c\u7684\uff0c\n            //\u4f9d\u6b21\u8c03\u7528\u51fd\u6570\uff0c\u5982\u679c\u4e3afalse\u5c31\u76f4\u63a5\u8fc7\u4e86\uff0c\u4e0d\u4f1a\u518d\u6389\u7528\u5269\u4e0b\u7684\n      if r=true then//r\u4ee3\u8868\u662f\u5426\u5df2\u7ecf\u627e\u51fa\u4e86\u4e00\u4e2a\u7f6a\u72af\uff0c\n                   //\u5982\u679c\u627e\u51fa\u4e86\u7b2c\u4e8c\u4e2a...\u4f60\u61c2\u5f97\n        begin\n        write(w,'Cannot Determine');\n        close(w);\n        halt;\n        end\n      else\n        begin\n        r:=true;\n        s:=i;//\u8bb0\u5f55\u7f6a\u72af\u662f\u8c01\n        end;\n    c:=d;//\u56de\u5f52c\n    end;\n  if s>0 then write(w,a[s].name) else write(w,'Impossible');\n  close(w);\nend.\n\n```\n  \u6240\u4ee5\u8bf4\uff0c\u8fd9\u4e48\u957f\u7684\u7a0b\u5e8f\uff0c\u7d2f\u554a",
        "postTime": 1540531748,
        "uid": 131676,
        "name": "\u5c71\u6cb3\u5f71",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1039 \u3010\u4fa6\u63a2\u63a8\u7406\u3011"
    },
    {
        "content": "\u601d\u8def\u5462\uff1f\n\n\u6211\u7684\u601d\u8def\u6bd4\u8f83\u590d\u6742\u3002\u3002\u3002\n\n\n\u9996\u5148\u8bfb\u5165\u4eba\u540d\n\n\u8bfb\u5165\u8bf4\u7684\u8bdd\uff0c  \u611f\u89c9\u4f3c\u4e4e\u4e0d\u7528\u533a\u5206\u5927\u5c0f\u5199\uff0c\u6240\u4ee5\u7528\u4e86UPCASE\n\ncutname\u627e\u5230sayer\uff0c\u7528adder\u52a0\u5165\u547d\u4ee4\n\n\u5c06\u65e0\u804a\u7684\u8bdd\u6392\u9664\uff0c\u8bb0\u5f55\u6709\u7528\u7684\u8bdd\n\n.  \u7528command[i].say\u8868\u793a\u8bf4\u8bdd\u7684\u4eba\uff0c\n\n.   command[i].ter[0]\u8868\u793a\u8bf4\u7684\u8bdd\u5c5e\u4e8e\u54ea\u4e9b\u7c7b\u578b\uff0c\u5982\u4e0b\n\n.       1  \u6211\u662f\u7f6a\u72af\n\n.       2  \u6211\u4e0d\u662f\u7f6a\u72af\n\n.       3  xxx\u662f\u7f6a\u72af\n\n.       4  xxx\u4e0d\u662f\u7f6a\u72af\n\n.       5  \u4eca\u5929\u661f\u671f\u51e0\n\n.   command[i].ter[j](0<j<=5) \u8868\u793a\u8bf4\u7684\u5bf9\u8c61\n\n\u7136\u540e\u679a\u4e3e\u72af\u4eba\u548c\u661f\u671f\u51e0\uff0c\u6784\u9020\u60c5\u51b5\uff0c\u5982\u679c\u60c5\u51b5\u6ee1\u8db3\u5c31\u7ed9answer\u7684\u79cd\u6570\u52a0\u4e00\uff0c\n\n.       \u4e0d\u8fc7\u8981\u6ce8\u610f\u627e\u5230\u4e00\u4e2a\u72af\u4eba\u65f6\uff0c\u5c31\u4e0d\u7528\u679a\u4e3e\u540e\u9762\u7684\u661f\u671f\u51e0\uff0c\u56e0\u4e3a\u540e\u9762\u5c31\u7b97\u8fd8\u6709\u4e5f\u662f\u540c\u4e00\u4e2a\u72af\u4eba\n\n\u5728\u6784\u9020\u60c5\u51b5\u65f6\u5982\u4f55\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u5462\uff1f\n\n.      \u5982\u679c\u8bf4\u7684\u662f\u201c\u6211\u662f\u201d\u6216\u8005\u201cxxx\u662f\u201d\u6216\u8005\u201c\u4eca\u5929\u662f\u201d\u5c31\u5224\u65ad\u8bf4\u7684\u5bf9\u8c61command[i].ter[j]\u5982\u679c\u548c\u679a\u4e3e\u7684\u60c5\u51b5\u76f8\u53cd\u5c31\u6492\u8c0e\u4eba\u6570\u52a0\u4e00\n\n.      \u76f8\u53cd\u5982\u679c\u662f\u201c\u6211\u4e0d\u662f\u201d\u6216\u8005\u201cxxx\u4e0d\u662f\u201d\u5c31\u5224\u65ad\u8bf4\u7684\u5bf9\u8c61command[i].ter[j]\u5982\u679c\u548c\u679a\u4e3e\u7684\u60c5\u51b5\u76f8\u540c\u5c31\u6492\u8c0e\u4eba\u6570\u52a0\u4e00\n\n.  \u4f46\u662f\uff0c\u5982\u679c\u4ee5\u524d\u5904\u7406\u8fc7\u7684\u8bed\u53e5\u4e2d\u7684sayer\u800c\u4e14\u540e\u9762\u53c8\u8bb2\u4e86\u8bdd\uff0c\u90a3\u4e48\u53cd\u8fc7\u6765\u5904\u7406,\u4ed6\u73b0\u5728\u7684\u8bdd\u7684\u53cd\u8bdd\u5982\u679c\u548c\u679a\u4e3e\u7684\u60c5\u51b5\u51b2\u7a81\u5c31\u9000\u51fa\n\n\u5982\u4f55\u5904\u7406\u65e0\u804a\u7684\u8bdd\uff1f\n\n.   \u6211\u4eec\u5728\u5904\u7406\u7b2ci\u6761\u8bed\u53e5\u65f6,\u53ef\u4ee5\u987a\u4fbf\u628a\u7b2cI\u6761\u8bed\u53e5\u7684\u8bf4\u8bdd\u4ebacommand[i].say\u7684yo\u8d4b\u4e3atrue\uff0c\u8868\u793a\u8fd9\u4eba\u8bf4\u8fc7\u6709\u7528\u7684\u8bdd\n\n.   \u7136\u540e\u5982\u679c\u6784\u9020\u5904\u7406\u7684\u60c5\u51b5\u8bf4\u5b9e\u8bdd\u7684\u4eba\u6570\u3010\u5c31\u662fm-sum\u3011 \u5927\u4e0e \u9898\u76ee\u8981\u6c42\u8bf4\u5b9e\u8bdd\u7684\u4eba\u6570\u3010m-n\u3011\u5c31\u628a\u8bf4\u65e0\u804a\u8bdd\u7684\u4eba\u5224\u65ad\u4e3a\u5047\u8bdd\uff0c\u4f7f\u5f97\u6ee1\u8db3\u9898\u76ee\u60c5\u51b5\n\n\n\n\n\n\n```pascal\nprogram logic;\nconst\n  inf='logic.in';\n  outf='logic.out';\n  day:array[1..7]of string=('MONDAY','TUESDAY','WEDNESDAY',\n'THURSDAY','FRIDAY','SATURDAY','SUNDAY');\ntype\n  node=record\n         say:longint;\n         ter:array[0..5] of longint;\n       end;\nvar\n  m,i,p,n,tot,totc,sayer,dayy,guilty,answer,j,toty:longint;\n  bobo:boolean;\n  name:array[1..100] of string;\n  command:array[1..100] of node;\n  yo:array[1..100] of boolean;\n  st,nono,crimin:string;\n\nfunction findday(oppo:string):longint;\nvar\n  xh:longint;\nbegin\n  for xh:= 1 to 7 do\n    if day[xh]=oppo then exit(xh);\nend;\n\nfunction findpeople(oppo:string):longint;\nvar\n   xh:longint;\nbegin\n  for xh:= 1 to m do\n     if name[xh]=oppo then exit(xh);\nend;\n\nprocedure cutname;\nvar\n  tmp:longint;\n  t:string;\nbegin\n   tmp:=pos(' ',st);\n   t:=copy(st,1,tmp-2);\n   sayer:=findpeople(t);\nend;\n\nprocedure adder;\nvar\n   choose,start,cutlen:longint;\nbegin\n\n   if pos('I AM GUILTY',ST)<>0 then begin\n                                      inc(totc);\n                                      command[totc].say:=sayer;\n                                      command[totc].ter[1]:=sayer;\n                                      command[totc].ter[0]:=1;\n                                      exit;\n                                    end;\n   if pos('I AM NOT GUILTY',ST)<>0 then begin\n                                      inc(totc);\n                                      command[totc].say:=sayer;\n                                      command[totc].ter[2]:=sayer;\n                                      command[totc].ter[0]:=2;\n                                      exit;\n                                    end;\n   choose:=pos('IS GUILTY',ST);\n   if choose<>0 then begin\n                      inc(totc);\n                      command[totc].say:=sayer;\n                      start:=pos(' ',st)+1;\n                      cutlen:=choose-start-1;\n                      nono:=copy(st,start,cutlen);\n                      command[totc].ter[3]:=findpeople(nono);\n                      command[totc].ter[0]:=3;\n                      exit;\n                     end;\n   choose:=pos('IS NOT GUILTY',ST);\n   if choose<>0 then begin\n                      inc(totc);\n                      command[totc].say:=sayer;\n                      start:=pos(' ',st)+1;\n                      cutlen:=choose-start-1;\n                      nono:=copy(st,start,cutlen);\n                      command[totc].ter[4]:=findpeople(nono);\n                      command[totc].ter[0]:=4;\n                      exit;\n                     end;\n   choose:=pos('TODAY IS ',ST);\n   if choose<>0 then begin\n                      inc(totc);\n                      command[totc].say:=sayer;\n                      start:=choose+9;\n                      cutlen:=length(st)-start;\n                      nono:=copy(st,start,cutlen);\n                      command[totc].ter[5]:=findday(nono);\n                      command[totc].ter[0]:=5;\n                      bobo:=false;\n                      exit;\n                     end;\nend;\n\nprocedure outgo;\nbegin\n  close(input);    close(output);\n  halt;\nend;\n\nprocedure bruteforce;\nvar\n  lie,oker:array[1..100] of boolean;\n  sum:longint;\nbegin\n  fillchar(lie,sizeof(lie),true);\n  fillchar(oker,sizeof(oker),true);\n\n  sum:=0;\n   for i:= 1 to totc do\n     if oker[i] then\n     begin\n       yo[command[i].say]:=true;\n     if lie[command[i].say] then\n     begin\n\n       if (command[i].ter[0]=1) or (command[i].ter[0]=3) then\n       begin\n          if command[i].ter[command[i].ter[0]]<>guilty then\n              if lie[command[i].say] then begin\n                                            inc(sum);\n                                            lie[command[i].say]:=false;\n                                          end;\n          continue\n       end;\n       if (command[i].ter[0]=2) or (command[i].ter[0]=4) then\n       begin\n          if command[i].ter[command[i].ter[0]]=guilty then\n              if lie[command[i].say] then begin\n                                             inc(sum);\n                                            lie[command[i].say]:=false;\n                                          end ;\n\n          continue\n       end;\n       if command[i].ter[command[i].ter[0]]<>dayy then\n                   if lie[command[i].say] then begin\n                                                 inc(sum);\n                                                lie[command[i].say]:=false;\n                                               end;\n     end\n     else\n     begin\n       if (command[i].ter[0]=1) or (command[i].ter[0]=3) then\n          if command[i].ter[command[i].ter[0]]=guilty then exit;\n       if (command[i].ter[0]=2) or (command[i].ter[0]=4) then\n          if command[i].ter[command[i].ter[0]]<>guilty then exit;\n       if command[i].ter[command[i].ter[0]]<>dayy then\n          if lie[command[i].say] then exit;\n     end;\n     end;\n\n   if m-n<m-sum then\n     for i:= 1 to m do\n       if yo[i]=false then begin inc(sum); if sum=n then break end;\n   if sum=n then begin  inc(answer); crimin:=name[guilty];   end;\nend;\n\nbegin\n\n  //assign(input,inf);\n  //assign(output,outf);\n //reset(input);\n // rewrite(output);\n  fillchar(yo,sizeof(yo),false);\n\n  readln(m,n,p);\n  for i:= 1 to m do\n    begin\n      inc(tot);\n      readln(name[tot]);\n    end;\n  bobo:=true;\n\n  for i:= 1 to p do\n  begin\n    readln(st);\n    st:=upcase(st);\n    cutname;\n    adder;\n  end;\n\n  for guilty:= 1 to m do\n    for dayy:= 1 to 7 do\n    begin\n       bruteforce;\n       if crimin=name[guilty] then break;\n    end;\n\n  if answer=1 then writeln(crimin)\n  else\n    if answer=0 then writeln('Impossible')\n       else if answer>=2 then writeln('Cannot Determine');\n\n  outgo;\nend.\n\n```",
        "postTime": 1488374600,
        "uid": 19015,
        "name": "bobble",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1039 \u3010\u4fa6\u63a2\u63a8\u7406\u3011"
    },
    {
        "content": "=========\u9898\u76ee\u89e3\u6790========\n\n16\u5728\u505a\u6b64\u9898\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u641e\u6e05\u695a\u51e0\u70b9\uff0c\u8fd9\u662f\u6211\u4ece\u6d4b\u8bd5\u6570\u636e\u4e2d\u770b\u51fa\u800c\u4ece\u9898\u76ee\u4e0a\u4e0d\u5bb9\u6613\u770b\u51fa\u6765\u7684\uff1a\n\n17\u9898\u76ee\u8865\u5145\u70b9\u4e00\uff1a\u5982\u679c\u67094\u4e2a\u4ebaa\u3001b\u3001c\u3001d\uff0c\u5f53a\u3001b\u8bf4\u8c0e\u8bdd\u65f6\u6211\u4eec\u63a8\u51fa\u4e86c\u662f\u7f6a\u72af\uff0c\u7136\u540e\u5f53a\u3001c\u8bf4\u8c0e\u8bdd\u65f6\u6211\u4eec\u53c8\u63a8\u51fa\u4e86c\u662f\u7f6a\u72af\uff0c\u6b64\u65f6\u6211\u4eec\u4ec5\u63a8\u51fa\u4e00\u4e2a\u7f6a\u72af\uff0c\u800c\u4e0d\u662f\u4e24\u4e2a\uff0c\u56e0\u6b64\u8f93\u51fa\u4e3ac\uff0c\u800c\u4e0d\u662f\u8f93\u51faCannot Determine\uff0c\u6ce8\u610f\u4e0d\u8981\u91cd\u590d\u8ba1\u6570\u3002\n\n18\u9898\u76ee\u8865\u5145\u70b9\u4e8c\uff1a\u5982\u679c\u67094\u4e2a\u4ebaa\u3001b\u3001c\u3001d\uff0c\u5f53\u6211\u4eec\u63a8\u51faa\u3001b\u3001c\u4e09\u4eba\u90fd\u4e0d\u662f\u7f6a\u72af\u800cd\u672a\u77e5\u65f6\uff0c\u90a3\u4e48d\u5c31\u662f\u7f6a\u72af\uff0c\u8fd9\u662f\u4ece\u67d0\u4e9b\u6d4b\u8bd5\u6570\u636e\u4e2d\u53d1\u73b0\u7684\u89c4\u5219\uff0c\u9898\u76ee\u6ca1\u6709\u660e\u8bf4\u3002\n\n19\u9898\u76ee\u8865\u5145\u70b9\u4e09\uff1a\u4e0d\u4f1a\u51fa\u73b0\u91cd\u540d\u60c5\u51b5\u3002\n\n20\u9898\u76ee\u8865\u5145\u70b9\u56db\uff1a\u6ce8\u610f\u201cI am guilty.\u201d\u3001\u201cToday is Monday.\u201d\u7b49\u8bed\u53e5\u7684\u540e\u9762\u5747\u6709\u4e00\u4e2a\u201c.\u201d\u53f7\u3002\n\n21\n22\u5728\u786e\u5b9a\u4e0a\u9762\u51e0\u70b9\u540e\u6211\u4eec\u6765\u601d\u8003\u6b64\u9898\u5982\u4f55\u505a\uff0c\u9996\u5148\u6211\u60f3\u5230\u7684\u662f\u7528\u6a21\u62df\u65b9\u6cd5\uff0c\u5e76\u4e14\u6b64\u7a0b\u5e8f\u4f7f\u7528\u7684\u5c31\u662f\u6a21\u62df\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u7528\u7ec4\u5408\u7684\u65b9\u5f0f\u4ecem\u4e2a\u4eba\u4e2d\u53d6\u51fan\u4e2a\u4eba\u5047\u8bbe\u8fd9n\u4e2a\u4eba\u8bf4\u8c0e\u8bdd\uff0c\u7136\u540e\u5206\u522b\u5bf9\u8fd9m\u4e2a\u4eba\u6240\u8bf4\u7684\u5171p\u53e5\u8bdd\u8fdb\u884c\u5224\u65ad\uff0c\u5982\u679cp\u53e5\u8bdd\u5747\u4e24\u4e24\u4e0d\u77db\u76fe\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u770b\u770b\u80fd\u4e0d\u80fd\u6b63\u597d\u627e\u51fa\u4e00\u4e2a\u7f6a\u72af\uff0c\u6216\u8005\u6b63\u597d\u627e\u51fam-1\u4e2a\u201c\u597d\u4eba\u201d\u7684\u8bdd\uff08\u201c\u597d\u4eba\u201d\u6307\u4e0d\u662f\u7f6a\u72af\u7684\u4eba\uff0c\u4e0b\u540c\uff09\uff0c\u53e6\u4e00\u4e2a\u4fbf\u8ba4\u4e3a\u662f\u7f6a\u72af\u3002\n\n23\u540c\u65f6\u6ce8\u610f\u5206\u6790\uff0c\u672c\u8d28\u4e0a\u6709\u6548\u7684\u8bc1\u8a00\u4ec5\u67094\u79cd\u7c7b\u578b\uff0c\u7b2c\u4e00\u79cd\u662f\u201c\u8c01\u662f\u7f6a\u72af\u201d\uff0c\u7b2c\u4e8c\u79cd\u662f\u201c\u8c01\u4e0d\u662f\u7f6a\u72af\u201d\uff0c\u7b2c\u4e09\u79cd\u662f\u201c\u4eca\u5929\u662f\u661f\u671f\u51e0\u201d\uff0c\u7b2c\u56db\u79cd\u662f\u201c\u4eca\u5929\u4e0d\u662f\u661f\u671f\u51e0\u201d\uff0c\u5e76\u4e14\u5982\u679c\u67d0\u4e2a\u8bf4\u8c0e\u8005\u7684\u8bc1\u8a00\u7c7b\u578b\u4e3a\u201c\u8c01\u662f\u7f6a\u72af\u201d\uff0c\u90a3\u4e48\u4ed6\u7684\u53cd\u8bc1\u8a00\u201c\u8c01\u4e0d\u662f\u7f6a\u72af\u201d\u4e00\u5b9a\u6210\u7acb\u3002\n\n24\u65e0\u8bba\u5728\u8fd9n\u4e2a\u4eba\u8bf4\u8c0e\u7684\u60c5\u51b5\u4e0b\u80fd\u4e0d\u80fd\u627e\u51fa\u7f6a\u72af\uff0c\u90fd\u8981\u4ecem\u4e2a\u4eba\u4e2d\u91cd\u65b0\u627e\u51fa\u4e00\u7ec4n\u4e2a\u4eba\u7684\u7ec4\u5408\uff0c\u518d\u6b21\u8fdb\u884c\u5224\u65ad\uff08\u5373\u5bfb\u627e\u7f6a\u72af\uff09\u3002\n\n25\u76f4\u5230\u6240\u6709\u8bf4\u8c0e\u4eba\u7684\u7ec4\u5408\u60c5\u51b5\u90fd\u8003\u8651\u540e\u518d\u6765\u770b\u54ea\u4e9b\u4eba\u6709\u53ef\u80fd\u662f\u7f6a\u72af\uff0c\u5982\u679c\u8d85\u8fc7\u4e24\u4e2a\uff0c\u5219\u8f93\u51faCannot Determine\uff0c\u5982\u679c\u6b63\u597d\u6709\u4e00\u4e2a\uff0c\u5219\u8f93\u51fa\u6b64\u4eba\u7684\u540d\u5b57\uff0c\u5982\u679c\u4e00\u4e2a\u90fd\u6ca1\u6709\uff0c\u5219\u8f93\u51faImpossible\u3002\n\n\u6ce8\u660e\u51fa\u5904\uff1ahttp://www.cnblogs.com/SDJL/archive/2008/08/20/1272047.html\n",
        "postTime": 1477670413,
        "uid": 9538,
        "name": "\u5434\u56fd\u94e8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1039 \u3010\u4fa6\u63a2\u63a8\u7406\u3011"
    }
]