[
    {
        "content": "# \u5206\u5c42\u56fe\u677f\u5b50\u9898\n\n### 1.\u95f2\u804a&\u5199\u4f5c\u76ee\u7684\n\u672c\u849f\u84bb\u7684\u7b2c\u4e8c\u7bc7\u9898\u89e3\n\n\u5f88\u4e45\u4ee5\u524d\u5c31\u60f3\u5b66\u5206\u5c42\u56fe\u4e86\uff0c\u4f46\u4e00\u76f4\u627e\u4e0d\u5230\u6613\u4e8e\u7406\u89e3\u7684\u6559\u7a0b\uff08\u6211\u592a\u5f31\u4e86\uff09\n\n\u672c\u6587\u65e8\u5728\u4e3a\u548c\u6211\u4e00\u6837\u5f31\u7684\u849f\u84bb\u4eec\u63d0\u4f9b\u826f\u597d\u7684\u4f53\u9a8c\n\n\u4e0e\u5b50\u5171\u98df\n\n### 2.\u4ec0\u4e48\u662f\u5206\u5c42\u56fe\uff1f\n\n\u561b\uff0c\u5c31\u662f\u5f62\u5982![](https://cdn.luogu.com.cn/upload/pic/10006.png)\n\n\u7684\u4e00\u4e2a\u4e1c\u897f\u3002\uff08\u56fe\u81eaP1073@fy1234567ok\u7684\u9898\u89e3\uff0c\u4fb5\u5220\uff09\n\n##### \u554a\uff01\u597d\u73c2\u6015\uff01\n\n\u7136\u800c\u5b83\u4e0e\u666e\u901a\u56fe\u4e5f\u5e76\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u4e0a\u56fe\u7684\u4e09\u5c42\u56fe\uff0c\u5176\u5f62\u6001\u7ed3\u6784\u51e0\u4e4e\u4e00\u6837\uff0c\u6240\u4e0d\u540c\u7684\u53ea\u662f\u56fe\u4e4b\u95f4\u7684\u8054\u7cfb\u7f62\u4e86\u3002\u53ef\u4ee5\u7406\u89e3\u4e3a\u628a\u6bcf\u4e00\u4e2a\u70b9\u62c6\u6210\u591a\u4e2a\u70b9\u53d8\u6210\u7684\u591a\u5c42\u7684\u56fe\u3002\n\n##### \u597d\uff01\u90a3\u4e48\u5206\u5c42\u56fe\u4e2d\u7684\u8fb9\u6709\u4ec0\u4e48\u610f\u4e49\u5417\uff1f\n\n### 3.\u5206\u5c42\u56fe\u7684\u610f\u4e49\uff1f\n\n\u5206\u5c42\u56fe\u4e2d\u7684\u8fb9\u6743\u53ef\u4ee5\u968f\u7740\u9898\u76ee\u7684\u6539\u53d8\u800c\u5177\u5907\u4e0d\u540c\u7684\u610f\u4e49\u3002\u5728\u672c\u9898\u4e2d\uff0c\u8fb9\u6743\u7684\u5b9a\u4e49\u662f\uff1a\n\n**1.\u5f53\u8fb9 <u,v,w> \u4f4d\u4e8e\u7b2ci\u5c42\u4e0a\u65f6\uff0c\u8868\u793a\u5df2\u6539\u5efa\u4e86i\u6761\u9053\u8def\uff0c\u4e14\u4e0d\u6539\u5efa\u5f53\u524d\u9053\u8def\uff0c\u7531u\u5411v\u8017\u8d39w**\n\n**2. \u5f53\u8fb9 <u,v,w> \u4f4d\u4e8e\u7b2ci\u5c42\u4e0ei+1\u5c42\u65f6\uff0c\u8868\u793a\u5df2\u6539\u5efa\u4e86i\u6761\u9053\u8def\uff0c\u4e14\u6539\u5efa\u5f53\u524d\u9053\u8def\uff0c\u7531u\u5411v\u8017\u8d39w**\n\n\u5728\u672c\u9898\u4e2d\uff0c1\u4e2d\u7684\u8fb9\u4e0e\u539f\u56fe\u7684\u8fb9\u6ca1\u6709\u533a\u522b\uff0c\u800c2\u4e2d\u7684\u8fb9\u6743\u663e\u7136\u4e3a0.\n\n##### \u597d\u50cf\u5f88\u6709\u9053\u7406\uff0c\u4f46\u5b83\u662f\u600e\u4e48\u89e3\u51b3\u672c\u9898\u7684\u5462\uff1f\n\n\u7531\u4e8e\u672c\u9898\u6c42\u7684\u662f1\u5230n\u7684\u6700\u77ed\u8def\uff0c\u7531\u4e8e1\u5230n\u80fd\u6539\u5efa0\u5230k\u4e2d\u7684\u4efb\u610f\u6b21\u9053\u8def\uff0c\u518d\u8054\u7cfb\u5b9a\u4e49\uff0c\u5f97\n\nans=min\uff08ans\uff0cdist[i]\uff09\uff0c\u5176\u4e2di\u4e3a1\u5230n\n\ndist\u6570\u7ec4\u8bb0\u5f97\u5f00maxk* maxn\uff08\u56e0\u4e3a\u6709k\u5c42\u56fe\u9e2d\uff09\n\n##### \u90a3\u4e48\u5206\u5c42\u56fe\u80fd\u591f\u89e3\u51b3\u4ec0\u4e48\u7c7b\u578b\u7684\u95ee\u9898\u5462\uff1f\n\n### 4.\u5206\u5c42\u56fe\u7684\u5e94\u7528\u8303\u56f4\n\n~~\u5e76\u6ca1\u6709~~\n\n\u5927\u6982\u662f\u628a\u4e00\u5f20\u56fe\u8fdb\u884ck\u6b21\u4fee\u6539\uff08\u672c\u9898\uff09\uff0c\u6216\u8005\u662f\u6539\u53d8\u56fe\u7684\u5b9a\u4e49\u4f7f\u5176\u6ee1\u8db3\u672c\u7279\u70b9\u7684\u95ee\u9898\uff08P1073\uff09\n\n### 5.\u4ee3\u7801\u5b9e\u73b0\n\n~~\u636e\u8bf4~~\u672c\u9898\u5361spfa\n\n\u6570\u7ec4\u5f00\u5927\u70b9\u4e0d\u7136\u7d2b\u4e00\u534a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int maxn=100100;\nconst int maxm=500500;\n\nint nextt[maxm*42],w[maxm*42],to[maxm*42],head[maxn*42],cnt=0;\n\nvoid add(int u,int v,int cost)\n{\n\tcnt++;\n\tnextt[cnt]=head[u];\n\thead[u]=cnt;\n\tto[cnt]=v;\n\tw[cnt]=cost;\n}\n\nstruct node\n{\n\tint u,dis;\n\tbool operator<(const node x) const\n\t{\n\t\treturn dis>x.dis;\n\t}\n};\n\npriority_queue<node> q;\nint dist[maxn*21];\n\nvoid dij(int s)\n{\n\tmemset(dist,0x3f,sizeof(dist));\n\tdist[s]=0;\n\tq.push((node){s,0});\n\twhile (!q.empty())\n\t{\n\t\tnode fr=q.top();q.pop();\n\t\tint u=fr.u,dis=fr.dis;\n\t\tif (dis!=dist[u]) continue;\n\t\tfor (int v=head[u];v;v=nextt[v])\n\t\t\tif (dist[to[v]]>dist[u]+w[v])\n\t\t\t{\n\t\t\t\tdist[to[v]]=dist[u]+w[v];\n\t\t\t\tq.push((node){to[v],dist[to[v]]});\n\t\t\t}\n\t}\n}\n\nint n,m,k;\n\nint main()\n{\n\tcin>>n>>m>>k;\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint u,v,cost;\n\t\tcin>>u>>v>>cost;\n\t\tadd(u,v,cost);add(v,u,cost);\n\t\tfor (int j=1;j<=k;j++)\n\t\t{\n\t\t\tadd(n*j+u,n*j+v,cost);add(n*j+v,n*j+u,cost);\n\t\t\tadd(n*(j-1)+u,n*j+v,0);add(n*(j-1)+v,n*j+u,0);\n\t\t}\n\t}\n\tdij(1);\n\tint ans=dist[n];\n\tfor (int i=1;i<=k;i++)\n\t{\n//\t\tcout<<\"### dist[\"<<i*n+n<<\"]: \"<<dist[i*n+n]<<endl;\n\t\tans=min(ans,dist[i*n+n]);\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n\n### 6. \u9a97\u8d5e\n\n\u770b\u6211\u5996\u7cbe\u519b\u5e08\u8fd9\u4e48\u53ef\u7231\u5c31\u7ed9\u70b9\u8d5e\u5457\n\n![](https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=672061410,767203769&fm=58&bpow=730&bpoh=1095)\n\n\n",
        "postTime": 1549542839,
        "uid": 87005,
        "name": "QQQfy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2939 \u3010[USACO09FEB]\u6539\u9020\u8defRevamping Trails\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u5df2\u7ecf\u5199\u4e86\u591a\u6b21\u9898\u89e3\uff0c\u4f46\u5f88\u591a\u90fd\u6ca1\u6709\u8fc7......\n\n~~\u5199\u7684\u4e0d\u597d\u4e0d\u8981\u55b7\uff08\u73bb\u7483\u7684\u5fc3\uff09~~\n\n### \u6709\u9519\u8bef\u5e0c\u671bdalao\u6307\u6b63\n\n~~\u5206\u5c42\u56fe\u6700\u77ed\u8def\u4e5f\u662f\u6700\u8fd1\u624d\u5b66\u4f1a\u7684~~\n\n\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0k\u7684\u53d6\u503c\u8303\u56f4\u6bd4\u8f83\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528\u5206\u5c42\u56fe\n\n\u628a\u4e00\u4e2a\u70b9\u5f3a\u884c\u62c6\u5206\u4e3ak\u4e2a\uff0c\u539f\u56fe\u5c42\u4ee3\u8868\u4f7f\u75280\u6b21\u5347\u7ea7\u8def\u7684\u673a\u4f1a\uff0c\u5176\u4ed6\u7684\u56fe\u5206\u522b\u8868\u793a\u4f7f\u7528\u4e861\u6b21\u30012\u6b21...k\u6b21\u5347\u7ea7\u8def\u7684\u673a\u4f1a\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8fde\u8fb9\u4e86\u3002\u8003\u8651\u6bcf\u5c42\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u7b2ci\u5c42\u4e0e\u7b2ci+1\u5c42\u7684\u8fb9\u7684\u6743\u503c\u4e3a0\uff0c\u7b49\u4e8e\u7528\u6389\u4e86\u4e00\u6b21\u5347\u7ea7\u8def\u7684\u673a\u4f1a\u3002\n\n\u6700\u7ec8\u8dd1\u4e00\u8fb9dijktra\uff0c\u7136\u540e\u6c42\u51fa\u6700\u5c0f\u7684\u8ddd\u79bb\uff0c\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#define N 220010//\u56e0\u4e3ak\u7684\u8303\u56f4\u5230\u4e8620\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u5efa\u7acb20+\u7684\u56fe\u5c42\uff0c\u6240\u4ee5\u8981\u5f00\u7684\u5927\u4e00\u70b9\nusing namespace std;\nstruct Edge\n{\n\tint to,nexty,w;\n}edge[4200010];//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u8fb9\n/*struct node\n{\n\tint code,dis;\n\tbool operator < (const node& rhs) const {return dis>rhs.dis;}\n};*/  //\u8fd9\u662f\u672c\u849f\u84bb\u4e00\u5f00\u59cb\u505a\u9898\u65f6\u5f001\u7ef4\u7684\u5806\u8dd1dij\uff0c\u7ed3\u679c\u6700\u540e\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u603b\u662f\u505a\u4e0d\u51fa\u6765...\u6240\u4ee5\u6700\u7ec8\u6539\u6210\u4e86\u4e8c\u7ef4\nbool vis[N];\nint n,m,u,v,k,t,tmp;//n\u4e2a\u7267\u573a\uff0cm\u6761\u9053\u8def\uff0ck\u6b21\u673a\u4f1a\uff0cu\u662f\u4e00\u6761\u8def\u7684\u8d77\u70b9\uff0cv\u662f\u7ec8\u70b9\uff0ct\u662f\u6d88\u8017\u7684\u65f6\u95f4\uff0ctmp\u7528\u4e8e\u540e\u671f\u8fd0\u7b97\nint dis[N],head[N],cnt;//\u5b58\u8fb9\u65f6\u6240\u9700\n//\u4ee5\u4e0b\u662f\u5feb\u8bfb\u7684\u677f\u5b50\ntemplate<typename int_t>//\u636e\u8bf4\u53ef\u4ee5\u81ea\u52a8\u5224\u65ad\u8f93\u5165\u7684\u7c7b\u578b\nvoid readx(int_t& x)\n{\n\tx=0; int_t k=1; char ch=0;\n\twhile(ch<'0'||ch>'9') {ch=getchar();if(ch=='-') k=-1;}\n\twhile(ch>='0'&&ch<='9') {x=x*10+ch-'0';ch=getchar();}\n\tx*=k;\n}\n//\u5b58\u8fb9\nvoid add(int x,int y,int w)\n{\n\tcnt++;\n\tedge[cnt].to=y;\n\tedge[cnt].nexty=head[x];\n\tedge[cnt].w=w;\n\thead[x]=cnt;\n}\npriority_queue< pair<int,int> > q;\n//\u5927\u6839\u5806 \u4f18\u5148\u961f\u5217 pair\u7b2c\u4e00\u7ef4\u4e3adist\u76f8\u53cd\u6570\uff08\u53d8\u6210\u5c0f\u6839\u5806\uff09 \u7b2c\u4e8c\u7ef4\u4e3a\u8282\u70b9\u7f16\u53f7 \nvoid dij()//dijkstral \u8dd1\u6700\u77ed\u8def \uff08\u677f\u5b50\uff09\n{\n    memset(dis,0x3f,sizeof(dis));\n    dis[1]=0;//dis\u521d\u59cb\u5316 \u8d77\u70b9\u4e3a0\uff0c\u5176\u4f59\u4e3a\u6b63\u65e0\u7a77\n    memset(vis,0,sizeof(vis));//\u8282\u70b9\u6807\u8bb0\u6e05\u9664\n    q.push(make_pair(0,1));\n    while(q.size()){\n        int x=q.top().second;\n        q.pop();//\u53d6\u5806\u9876\n        if(vis[x]) continue;\n        vis[x]=1;//\u6807\u8bb0\u8282\u70b9\n        for(int i=head[x];i;i=edge[i].nexty)\n        {//\u626b\u63cf\u6240\u6709\u51fa\u8fb9\n            int y=edge[i].to,z=edge[i].w;\n            if(dis[y]>dis[x]+z)\n            {\n                dis[y]=dis[x]+z;\n                q.push(make_pair(-dis[y],y));\n            }\n        } \n    } \n}\nint main()\n{\n\treadx(n);readx(m);readx(k);//\u8bfb\u5165\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\treadx(u);readx(v);readx(t);//\u8bfb\u5165\n\t\tadd(u,v,t);add(v,u,t);//\u5148\u5b58\u5165\u539f\u59cb\u56fe\n\t\tfor(int j=1;j<=k;j++)//\u6839\u636ek\u7684\u4e2a\u6570\u590d\u5236\u539f\u59cb\u56fe\n\t\t{\n\t\t\tadd(j*n+u,j*n+v,t);\n\t\t\tadd(j*n+v,j*n+u,t);\n\t\t\tadd((j-1)*n+u,j*n+v,0);//\u6bcf\u5c42\u95f4\u7684\u8fb9\u7684\u6743\u503c\u4e3a0\n\t\t\tadd((j-1)*n+v,j*n+u,0);\n\t\t}\n\t}\n\ttmp=n;//\u8bb0\u5f55n\n\tdij();//\u6700\u77ed\u8def\n\tint ans=dis[tmp];//\u8bb0\u5f55\u539f\u56fe\u5c42\u4e0a\u7684\u6700\u5c0f\u503c\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tans=min(ans,dis[i*n+tmp]);//\u4e0e\u6bcf\u4e00\u5c42\u4e0a\u7684\u6700\u5c0f\u503c\u8fdb\u884c\u6bd4\u8f83\uff0c\u5e76\u66f4\u65b0\u7b54\u6848\n\t}\n\tprintf(\"%d\",ans);//\u8f93\u51fa\n\treturn 0;\n}\n```\n~~\u849f\u84bb\u7684\u535a\u5ba2\u91cc\u6709\u5173\u4e8e\u5206\u5c42\u56fe\u7684\u77e5\u8bc6\u54e6~~~ \n\n### [\u4e0d\u8981\u8138](https://xiaohou.blog.luogu.org/)",
        "postTime": 1540556852,
        "uid": 84119,
        "name": "\u9f50\u5929\u306e\u5c0f\u7334",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2939 \u3010[USACO09FEB]\u6539\u9020\u8defRevamping Trails\u3011"
    },
    {
        "content": "\u7531\u4e8e\u672c\u4eba\u662f\u849f\u84bb\uff0c\u4e0d\u4f1a\u8bb2\u9ad8\u6df1\u7684\u8bed\u8a00\uff0c\u6240\u4ee5\u5c3d\u53ef\u80fd\u7684\u4ee5\u901a\u4fd7\u6613\u61c2\u7684\u8bb2\u6cd5\u6765\u8ba9\u670b\u53cb\u4eec\u660e\u767d\uff0c\u81ea\u8ba4\u4e3a\u7b97\u6bd4\u8f83\u8be6\u7ec6\u7684\u4e86\n## \u6838\u5fc3\u7b97\u6cd5\uff1a\u5206\u5c42\u56fe\u6700\u77ed\u8def\n\n### \u4ec0\u4e48\u662f\u5206\u5c42\u56fe\uff1f\n\u987e\u540d\u601d\u4e49\uff0c\u4f60\u5efa\u7684\u56fe\u6709\u597d\u51e0\u5c42\n### \u6709\u4ec0\u4e48\u7528\uff1f\n\u89e3\u51b3\u53ef\u4ee5\u4f7f\u67d0\u4e9b\u8fb9\u7684\u8fb9\u6743\u6539\u53d8\u7684\u60c5\u51b5\n### \u5177\u4f53\u5730\uff1f\n\u6bcf\u5c42\u56fe\u4e4b\u95f4\u5404\u81ea\u8fde\u8fb9\uff0c\u4e0e\u539f\u56fe\u4e00\u6837\uff0c\u5728\u76f8\u90bb\u7684\u4e24\u5c42\u56fe\u4e4b\u95f4\u6839\u636e\u539f\u6765\u7684\u5173\u7cfb\u8fde\u8fb9\n\n\u6211\u4eec\u5728\u5efa\u56fe\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u5e76\u4e0d\u9700\u8981\u5efa\u591a\u7ef4\uff0c\u6211\u4eec\u53ea\u8981\u8fd8\u5728\u4e00\u7ef4\u6839\u636e\u6570\u91cf\u5173\u7cfb\u63a8\u7b97\u5c31\u597d\u4e86\n\n\u4e3e\u4e2a\u6817\u5b50\n\n\u5f53\u67093\u4e2a\u70b9\uff0c3\u5c42\u56fe\u65f6\n\n1\u5bf9\u5e94\u7684\u5c31\u662f`1+n`\u548c`1+2*n`\n\n2\u5bf9\u5e94\u7684\u5c31\u662f`2+n`\u548c`2+2*n`\n\n......\n\n\u5f53\u6709n\u4e2a\u70b9\uff0ck\u5c42\u56fe\u65f6\uff0c\u4e0d\u96be\u53d1\u73b0\n\n1\u5bf9\u5e94\u7684\uff08\u5305\u62ec\u81ea\u5df1\uff09\u5c31\u662f\n\n$1+n*0$\uff0c$1+n*1$\uff0c$1+n*2$\u2026\u2026$1+n*(k-1)$\n\n\u5176\u4ed6\u70b9\u4e5f\u540c\u7406\n\n\u6211\u4eec\u6bcf\u5411\u4e0b\u4e00\u5c42\uff0c\u5c31\u4ee3\u8868\u6211\u4eec\u4f7f\u7528\u4e00\u6b21\u514d\u8d39\u6743\uff0c\u6216\u8005\u8bf4\u6539\u9020\u8fd9\u6761\u9053\u8def\uff0c\u4f7f\u5176\u65f6\u95f4\u4e3a0\n\n**\u6ce8\u610f\uff0c\u53ea\u80fd\u4ece\u4e0a\u9762\u7684\u56fe\u5230\u4e0b\u4e00\u5c42\uff0c\u4e0b\u4e00\u5c42\u4e0d\u80fd\u56de\u5230\u4e0a\u4e00\u5c42**\n\n\u4e3a\u4ec0\u4e48\uff1f\n\n\u56e0\u4e3a\u6211\u4eec\u5411\u4e0b\u4e00\u5c42\u4ee3\u8868\u6539\u9020\u4e00\u6761\u9053\u8def\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u6539\u9020\u9053\u8def\u540e\u518d\u628a\u5b83\u4fee\u56de\u539f\u6765\u7684\u6837\u5b50\n\n\u6bd4\u5982\u6709\u4e94\u4e2a\u70b9\u7684\u56fe\uff0c\u6709\u4e24\u5c42\n\n\u90a3\u4e481~5\u5206\u522b\u5bf9\u5e94\u7b2c\u4e8c\u5c42\u76846~10\n\n\u539f\u56fe\u4e2d1\u4e0e2\u6709\u8fde\u8fb9\uff0c\u90a3\u4e486\u4e0e7\u4e4b\u95f4\u4e5f\u6709\u8fde\u8fb9\n\n1\u8fde\u63a52\uff0c\u6240\u4ee51\u4e5f\u8fde\u63a57\uff0c\u8fb9\u6743\u4e3a0\n\n\u5982\u679c\u662f\u53cc\u5411\u8fb9\uff0c\u90a3\u4e48**\u4e0d\u662f7\u8fde\u77401**\uff0c\u800c\u662f**2\u8fde\u63a5\u77406**\n\n\n\u90a3\u4e48\u6700\u540e\u6211\u4eec\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff0c\u7edf\u8ba1\u6240\u6709\u5230n\u70b9\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\uff0c\u5c31OK\u4e86\n\n### \u4e3a\u4ec0\u4e48\u662f\u6b63\u786e\u7684\uff1f\n\u56e0\u4e3a\u6211\u4eec\u4ece\u4e0a\u4e00\u5c42\u4e0b\u6765\u4e4b\u540e\uff0c\u8fd9\u6761\u8fde\u63a5\u4e24\u5c42\u56fe\u7684\u8fb9\u8fb9\u6743\u4e3a0\uff0c\u6211\u4eec\u6ca1\u6709\u82b1\u8d39\uff0c\u63a5\u7740\u6211\u4eec\u8fd8\u53ef\u4ee5\u5411\u4e0b\u3002\n\n\u5982\u679c\u5df2\u7ecf\u6ca1\u6709\u673a\u4f1a\u4e86\uff0c\u6211\u4eec\u5c31\u4f1a\u8fd8\u6309\u7167\u539f\u6765\u7684\u8def\u5f84\u8d70\u5b8c\n\n\u5355\u6e90\u6700\u77ed\u8def\u7684\u7279\u70b9\u5c31\u662f\uff0c\u4f1a\u628a\u6240\u6709\u8054\u901a\u7684\u70b9\u8d70\u5b8c\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230**\u5728\u4f55\u65f6\u4f7f\u7528\u514d\u8d39\u673a\u4f1a\uff0c\u4ee5\u53ca\u4f7f\u7528\u591a\u5c11\u6b21\u7684\u6240\u6709\u60c5\u51b5**\uff0c\u5f97\u5230\u6b63\u786e\u7b54\u6848\n\n\u5206\u5c42\u56fe\u5176\u5b9e\u5c31\u662f\u66b4\u529b\u4e0eDP\u7684\u5408\u4f53\uff08\u4e2a\u4eba\u89c1\u89e3\uff09\n\n### \u7ec6\u8282\u95ee\u9898\n#### \u6211\u4eec\u8981\u5efa\u591a\u5c11\u5c42\uff1f\n\u6709k\u6b21\u673a\u4f1a\uff0c\u4e0d\u96be\u60f3\u51fa\uff0c\u6211\u4eec\u8981\u5efak+1\u5c42\n#### \u6570\u7ec4\u5f00\u591a\u5927\uff1f\n\u8fd9\u662f\u4e00\u4e2a\u5751\u70b9\uff0c\u53ef\u80fd\u6709\u7684\u4eba\u76f4\u63a5\u5c31\u5f00`maxn*(maxk+1)`\u548c`maxm*(maxk+1)`\u4e86\n\n\u6211\u4eec\u4ed4\u7ec6\u60f3\u4e00\u60f3\uff0c\u70b9\u6570\u786e\u5b9e\u5c31\u662fk+1\u5c42\uff0c\u6bcf\u5c42n\u4e2a\u70b9\uff0c\u6ca1\u95ee\u9898\n\n\u4f46\u8fb9\u6ca1\u6709\u8fd9\u4e48\u7b80\u5355\n\nk+1\u5c42\u56fe\uff0c\u6bcf\u5c42\u90fd\u6709m\u6761\u8fb9\uff0c\u662f`m*(k+1)`\n\n\u4f46\u662f\uff0c\u76f8\u90bb\u7684\u4e24\u5c42\u4e4b\u95f4\u8fd8\u6709\u8fde\u8fb9\uff0c\u6211\u4eec\u8fd8\u8981\u52a0\u8fb9\u6570\n\n\u901a\u5e38\uff0c\u6211\u4eec\u9009\u62e9 `m*(k+1)*4`\n\n#### \u6700\u77ed\u8def\uff1f\n\n\u5efa\u8baeDijkstra+\u5806\u4f18\u5316\n\n\u6e29\u99a8\u63d0\u793a\uff1a\u6b64\u9898\u5361SPFA\uff0c\u522b\u95ee\u6211\u600e\u4e48\u77e5\u9053\u7684\n\n### \u4ee3\u7801\u5b9e\u73b0\uff08\u8be6\u89c1\u6ce8\u91ca\u89e3\u91ca\uff09\n```cpp\n#include<cstdio>\n#include<queue>\n#define read(x) scanf(\"%d\",&x)//\u5b8f\u5b9a\u4e49\uff0c\u4e2a\u4eba\u4e60\u60ef\n#define INF 0x3f3f3f3f//\u4f2a\u6781\u5927\u503c\nusing namespace std;\ntypedef pair<int,int> pii;//\u4e2a\u4eba\u4e60\u60ef\nstruct Node\n{\n\tint head,dis;\n}node[210100];//\u6570\u7ec4\u5927\u5c0f\u6ce8\u610f\nstruct Edge\n{\n\tint to,len,next;\n}edge[4200100];//\u6570\u7ec4\u5927\u5c0f\u6ce8\u610f\nint n,m,k,u,v,w,cnt,ans=INF<<1;\nvoid addEdge(int u,int v,int w)\n{\n\tedge[++cnt]={v,w,node[u].head};\n\tnode[u].head=cnt;\n}\n//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\nvoid Dijkstra()\n{\n\tfor(int i=1;i<=n*(k+1);i++)\n\t{\n\t\tnode[i].dis=INF;\n\t}\n\t//\u521d\u59cb\u5316\u65f6\uff0c\u8981\u6ce8\u610f\u6211\u4eec\u7684\u70b9\u6570\u5df2\u7ecf\u4e0d\u662fn\u4e86\uff0c\u800c\u662fn*\uff08k+1\uff09\n\tnode[1].dis=0;\n\tpriority_queue<pii,vector<pii>,greater<pii> >q;\n\t//\u5c0f\u6839\u5806\n\tq.push({0,1});\n\twhile(q.size())\n\t{\n\t\tpii tmp=q.top();\n\t\tq.pop();\n\t\tint d=tmp.first,u=tmp.second;\n\t\tif(d!=node[u].dis)continue;\n\t\tfor(int e=node[u].head;e;e=edge[e].next)\n\t\t{\n\t\t\tint v=edge[e].to;\n\t\t\tif(node[v].dis>edge[e].len+d)\n\t\t\t{\n\t\t\t\tnode[v].dis=edge[e].len+d;\n\t\t\t\tq.push({node[v].dis,v});\n\t\t\t}\n\t\t}\n\t}\n}\n//\u6700\u77ed\u8def\u677f\u5b50\u4e0d\u89e3\u91ca\nint main()\n{\n\tread(n),read(m),read(k);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tread(u),read(v),read(w);\n\t\tfor(int j=0;j<=k;j++)\n\t\t{\n\t\t\t/*\n\t\t\t\u5f53j\u4e3a0\u65f6\uff0c\u6211\u4eec\u5efa\u7acb\u7684\u662f\u539f\u56fe\u7684\u8fb9\n\t\t\t\u5f53j\u4e0d\u4e3a0\u65f6\uff0c\u6211\u4eec\u5efa\u7acb\u7684\u662f\u5206\u8eab\u7684\u8fb9\n\t\t\t */\n\t\t\taddEdge(u+j*n,v+j*n,w);\n\t\t\taddEdge(v+j*n,u+j*n,w);\n\t\t\t//\u4e0a\u9762\u4e24\u884c\u662f\u6bcf\u5c42\u56fe\u4e4b\u95f4\uff0c\u81ea\u8eab\u7684\u70b9\u7684\u8fde\u7ebf\uff0c\u8fb9\u6743\u4e0d\u53d8\n\t\t\tif(j==k)break;\n\t\t\t/*\n\t\t\t\u4e3a\u4ec0\u4e48\u5f53j==k\u65f6\uff0c\u8981\u9000\u51fa\u5faa\u73af\u5462\uff1f\n\t\t\t\u56e0\u4e3a\u5982\u679cj==k\u65f6\uff0c\u8fd8\u5efa\u4e0b\u9762\u7684\u8fb9\uff0c\u90a3\u4e48\u5c31\u8d85\u51fa\u8303\u56f4\u4e86\n\t\t\t\u53ef\u4ee5\u81ea\u884c\u611f\u6027\u7406\u89e3\u4e00\u4e0b\n\t\t\t */\n\t\t\taddEdge(u+j*n,v+(j+1)*n,0);\n\t\t\taddEdge(v+j*n,u+(j+1)*n,0);\n\t\t\t//\u8fd9\u4e24\u884c\u5efa\u7acb\u7684\u662f\u5c42\u4e0e\u5c42\u4e4b\u95f4\u7684\u8fb9\uff0c\u8fb9\u6743\u4e3a0\n\t\t}\n\t}\n\tDijkstra();\n\t//\u8dd1\u6700\u77ed\u8def\n\tfor(int i=0;i<=k;i++)\n\t{\n\t\tans=min(ans,node[n+i*n].dis);\n\t\t//\u7edf\u8ba1\u6bcf\u4e00\u5c42\u5230n\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\n\t}\n\tprintf(\"%d\\n\",ans);\n\t//\u8f93\u51fa\u7b54\u6848\n\treturn 0;\n}\n```\n\u554a\uff0c\u5199\u9898\u89e3\u4e0d\u6613\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u8fd8\u7b97\u6bd4\u8f83\u8be6\u7ec6\u7684\uff0c\u5e0c\u671b\u80fd\u8fc7\u5ba1\n\n\u670b\u53cb\u4eec\u5982\u679c\u6709\u7591\u95ee\u4e5f\u53ef\u4ee5\u79c1\u804a\u6211\u6216\u8005at\u6211\uff0c\u6211\u4f1a\u5c3d\u4e00\u81c2\u4e4b\u529b",
        "postTime": 1584943682,
        "uid": 203102,
        "name": "Diamiko",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2939 \u3010[USACO09FEB]Revamping Trails G\u3011"
    },
    {
        "content": "\u5206\u5c42\u56fe\u6700\u77ed\u8def\u6a21\u677f\u9898\u3002\n\n\u8bb0dis[i][j]\u4e3a\u7528\u4e86j\u6b21\u514d\u8d39\u673a\u4f1a\u5230\u7f16\u53f7\u4e3ai\u7684\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\uff0cvis[i][j]\u76f8\u5e94\u7684\u5c31\u662f\uff08i,j\uff09\u8fd9\u4e2a\u4e24\u5143\u7ec4\u662f\u5426\u5728\u961f\u5217\u4e2d\u3002\n\n\u7b80\u5355\u7684\u8dd1\u4e00\u4e0bspfa\u5c31\u884c\u3002spfa\u7684\u65f6\u5019\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\uff0c\u8981\u4e48\u7528\u514d\u8d39\u8981\u4e48\u4e0d\u7528\u3002\u7136\u540e\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u4e00\u70b9\uff0c\u5fc5\u987b\u5f00**\u4f18\u5148\u961f\u5217**\uff0c\u4e0d\u5f00\u5c31\u4f1a\u8d85\u65f6\u3002\uff08\u5e78\u4e8f\u6211\u4ea4\u5b8c\u540e\u4e00\u79d2\u5c31\u53d1\u73b0\u4e86\u3002\uff09\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register int\n#define LL long long\n#define inf 0x3f3f3f3f\ninline int read(){\n    int s=0,w=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return s*w;\n}\nconst int M=5*1e4+10,N=1e4+10,S=50;\nint n,m,k,s,t;\nstruct mdzz1{\n    int next,to,val;\n}edge[M<<1];\nint head[N],cnt;\ninline void addedge(res u,res v,res w){\n    edge[++cnt].to=v;\n    edge[cnt].next=head[u];\n    edge[cnt].val=w;\n    head[u]=cnt;\n}\nint dis[N][S],vis[N][S];\nstruct mdzz{\n\tint sign,num;\n}q[N];\nint top;\n//\u7528sort\u7684\u4f18\u5148\u961f\u5217\u7684\u5e38\u6570\u4f1a\u5c0f\u4e00\u70b9...\ninline bool cmp(mdzz p,mdzz q) {\n    return dis[p.sign][p.num]>dis[q.sign][q.num];\n}\n#define push(x,y) q[top++]=(mdzz){x,y};push_heap(q,q+top,cmp)\n#define pop() pop_heap(q,q+top--,cmp)\n#define top() *q\n#define empty() (!top)\ninline void spfa(){\n\tmemset(dis,inf,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tdis[s][0]=0;\n    vis[s][0]=1;\n    push(s,0);\n    while(!empty()){\n    \tmdzz u=top();\n    \tpop();\n    \tvis[u.sign][u.num]=0;\n    \tfor(res i=head[u.sign];i!=-1;i=edge[i].next){\n    \t\tres tox=edge[i].to;\n            //\u4e0d\u7528\u514d\u8d39\u7684\u60c5\u51b5\n    \t\tif(dis[tox][u.num]>dis[u.sign][u.num]+edge[i].val){\n    \t\t\tdis[tox][u.num]=dis[u.sign][u.num]+edge[i].val;\n    \t\t\tif(!vis[tox][u.num])push(tox,u.num),vis[tox][u.num]=1;\n\t\t\t}\n            //\u7528\u514d\u8d39\u7684\u60c5\u51b5\n\t\t\tif(u.num+1<=k&&dis[tox][u.num+1]>dis[u.sign][u.num]){\n\t\t\t\tdis[tox][u.num+1]=dis[u.sign][u.num];\n\t\t\t\tif(!vis[tox][u.num+1])push(tox,u.num+1),vis[tox][u.num+1]=1;\n\t\t\t}\t    \n\t\t}\n\t}\n}\nint main(){\n\tmemset(head,-1,sizeof(head));\n    n=read(),m=read(),k=read();\n    for(res i=1;i<=m;i++){\n    \tint x=read(),y=read(),z=read();\n    \taddedge(x,y,z);\n    \taddedge(y,x,z);\n\t}\n    s=1,t=n;\n    spfa();\n    printf(\"%d\",dis[t][k]);\n    return 0;\n}\n```\n\n~~\u6da8\u4e86\u4e2a\u6559\u8bad\uff0c\u4ee5\u540e\u6240\u6709\u6700\u77ed\u8def\u90fd\u7528\u4f18\u5148\u961f\u5217\u3002~~",
        "postTime": 1527929222,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010USACO09FEB\u3011\u6539\u9020\u8def"
    },
    {
        "content": "1. \n\u9898\u76ee\uff1a\u4e00\u5171\u6709M\u6761\u53cc\u5411\u8def\u5f84\uff0c\u82b1\u8d39\u65f6\u95f4\u662fTi\uff0c\u6709k\u6b21\u5c06\u67d0\u4e00\u8def\u5f84\u82b1\u8d39\u7684\u65f6\u95f4\u6539\u4e3a0\u7684\u6743\u5229\uff0c\u95ee1\u5230n\u82b1\u8d39\u7684\u6700\u77ed\u65f6\u95f4\uff1b\n2. \n\u60f3\u6cd5\uff1a\u76f4\u63a5\u770b\u7684\u7f51\u4e0a\u5927\u4f6c\u4eec\u7684\u9898\u89e3\u3002\u7528\u5206\u5c42\u56fe\u8dd1dijkstra\u3002\u5176\u4e2ddist[i][j]\u8868\u793a\u5df2\u7ecf\u7ffb\u65b0\u4e86j\u6b21\n\u9053\u8def\u540e\u5230i\u70b9\u7684\u6700\u77ed\u8def\uff0c\u8dd1j\u6b21dijkstra\u3002OK\u3002\n\uff08\u5176\u5b9e\u521a\u5f00\u59cb\u60f3\u5230\u5982\u6b64\u8dd1k\u6b21SPFA\uff0c\u7136\u540e\u8001\u677f\u8981\u7528dijkstra\uff0c\u518d\u7136\u540e\u6ca1\u4ed4\u7ec6\u60f3\u5c31\u770b\u4e86\u9898\u89e3\uff0c\u518d\u7136\u540e\u9898\u89e3\u8bf4\u5361SPFA\uff0c\u5c31\u6709\u4e86\u4e0b\u9762\u8fd9\u4e2a\u62d9\u52a3\u7684\u4e1c\u897f\u3002\uff09\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<queue>\n#define maxn 100010\nusing namespace std;\nstruct node\n{\n\tint val,v,next;\n}edge[100010];\nint vis[maxn][25],dist[maxn][25],head[maxn];\nint tot=0,n,m,t,k; \nvoid add(int x,int y,int val)\n{\n\ttot++;\n\tedge[tot].v=y;\n\tedge[tot].val=val;\n\tedge[tot].next=head[x];\n\thead[x]=tot;\n\ttot++;\n\tedge[tot].v=x;\n\tedge[tot].val=val;\n\tedge[tot].next=head[y];\n\thead[y]=tot;\n}\nvoid dijkstra()\n{\n\tpriority_queue <pair<int,int>,\n    vector< pair<int,int> >,\n\tgreater < pair<int,int> > >q;\n\tmemset(dist,0x3F,sizeof(dist));\n\tdist[1][0]=0;\n\tq.push(make_pair(0,1));\n\twhile(!q.empty())\n\t{\n\t\tint temp=q.top().second;\n\t\tq.pop();\n\t\tint level=temp/(n+1);temp=temp%(n+1);\n\t\tif(vis[temp][level]) continue;\n\t\tvis[temp][level]=1;\n\t\tfor(int i=head[temp];i;i=edge[i].next)\n\t\t{\n\t\t\tint cnt=edge[i].v;\n\t\t\tif(dist[temp][level]+edge[i].val<dist[cnt][level])\n\t\t\t{\n\t\t\t\tdist[cnt][level]=dist[temp][level]+edge[i].val;\n\t\t\t\tq.push(make_pair(dist[cnt][level],level*(n+1)+cnt));\n\t\t\t}\n\t\t\tif(level==k) continue;\n\t\t\tif(dist[cnt][level+1]>dist[temp][level])\n\t\t\t{\n\t\t\t\tdist[cnt][level+1]=dist[temp][level];\n\t\t\t\tq.push(make_pair(dist[cnt][level+1],(level+1)*(n+1)+cnt));\n\t\t\t}\n\t\t}\n\t } \n}\nint main()\n{\n\tcin>>n>>m>>k;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y,z;\n\t\tcin>>x>>y>>z;\n\t\tadd(x,y,z);\n\t}\n\tdijkstra();\n\tcout<<dist[n][k]<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1526216720,
        "uid": 50495,
        "name": "\u56db\u7cf8\u4e43",
        "ccfLevel": 0,
        "title": "p2939 \u6539\u9020\u8def \uff08\u5206\u5c42\u56fe+dijkstra\uff09"
    },
    {
        "content": "# \u4e00\u9053\u795e\u5947\u7684\u9898\n\u4e00\u770b\u7ecf\u8fc7\u4fee\u6539k\u6b21\uff0c\u5178\u578b\u5206\u5c42\u56fe\u3002\n\n------------\n## \u5206\u5c42\u56fe\u5e94\u7528\n\u628a\u56fe\u4e0a\u4e00\u4e2a\u70b9\u7684\u51e0\u4e2a\u72b6\u6001\u5206\u6210\u591a\u5c42\uff0c\u6839\u636e\u6b64\u9898\uff0c\u6bcf\u4fee\u6539\u4e00\u6b21\u53ef\u4ee5\u4f7f\u56fe\u5f80\u4e0b\u8dd1\u4e00\u5c42\uff0c\u6bcf\u5c42\u5185\u90e8\u6839\u636e\u8f93\u5165\u6570\u636e\u8fde\u63a5\u4e0d\u4fee\u6539\uff0c\u6700\u540e\u7528\u8fea\u6770\u65af\u7279\u62c9\u8dd1\u6700\u77ed\u8def\u3002\n\n------------\n## \u5efa\u56fe\n\uff08\u501f\u7528 @EternalAlexander \u8fd9\u4f4ddalao\u7684OI Painter\u7ed8\u5236\uff09\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/19106.png)\n\u7528\u4e24\u5c42for\u5efa\u56fe\uff0c\u540c\u5c42\u76f4\u63a5\u8fde\uff0c\u4e0d\u540c\u5c42\u4ea4\u53c9\u8fde\u3002\n```cpp\nfor(int i=1;i<=m;i++) \n\t{\n\t\tcin>>a>>b>>c;\n\t\tif(a==b) continue;\n\t\tadd(a,b,c);\n\t\tadd(b,a,c);\n\t\tfor(int j=1;j<=k;j++)\n\t\t{\n\t\t\tadd(a+n*(j-1),b+n*j,0);//\u5c06\u4e0a\u4e00\u5c42a\u4e0e\u4e0b\u4e00\u5c42b\u76f8\u8fde\u3002\n\t\t\tadd(b+n*(j-1),a+n*j,0);//\u5c06\u4e0a\u4e00\u5c42b\u4e0e\u4e0b\u4e00\u5c42a\u76f8\u8fde\u3002\t\n\t\t\tadd(a+n*j,b+n*j,c);\n\t\t\tadd(b+n*j,a+n*j,c);\n\t\t}\n\t}\n```\n------------\n## \u9644\u4e0aAC\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nint n,m,k,a,b,c,dis[2000001],head[2000001],cnt,u[2000001];\nstruct cyf\n{\n\tint to,next,v;\n} pre[50000001];\nvoid add(int x,int y,int z)//\u5b58\u56fe\u3002\n{\n\tcnt++;\n\tpre[cnt].to=y;\n\tpre[cnt].next=head[x];\n\tpre[cnt].v=z;\n\thead[x]=cnt;\n}\npriority_queue< pair<int,int> > q;\nint main()\n{\n\tcin>>n>>m>>k;\n\tfor(int i=1;i<=m;i++) \n\t{\n\t\tcin>>a>>b>>c;\n\t\tif(a==b) continue;\n\t\tadd(a,b,c);\n\t\tadd(b,a,c);\n\t\tfor(int j=1;j<=k;j++)\n\t\t{\n\t\t\tadd(a+n*(j-1),b+n*j,0);\n\t\t\tadd(b+n*(j-1),a+n*j,0);\t\n\t\t\tadd(a+n*j,b+n*j,c);\n\t\t\tadd(b+n*j,a+n*j,c);\n\t\t}\n\t}\n\tfor(int i=1;i<=k;i++)\n    {\n        add(n+(i-1)*n,n+i*n,0);\n    }\n\tfor(int i=0;i<=n+n*k;i++) dis[i]=999999999;\n\tdis[1]=0;\n\tq.push(make_pair(0,1));\n\t\twhile(q.empty()==0)\n    {\n        int k1=q.top().second;\n        q.pop();\n        if(u[k1]==1) continue;\n        u[k1]=true;\n        for(int i=head[k1];i;i=pre[i].next)\n        {\n            int ii=pre[i].to;\n            if(u[ii]==0&&dis[ii]>dis[k1]+pre[i].v)\n            {   \n                dis[ii]=dis[k1]+pre[i].v;\n                q.push(make_pair(-dis[ii],ii));\n            }\n        }\n    }//\u8fea\u6770\u65af\u7279\u62c9\u5806\u4f18\u5316\u3002\n\tcout<<dis[n+n*k];\n}\n```\n------------\n## \u5b8c\u7ed3\u6492\u82b1\n~~\u5199\u7684\u4e0d\u597d\u52ff\u55b7\u3002~~\n",
        "postTime": 1585886481,
        "uid": 180411,
        "name": "AFO_07",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2939 \u3010[USACO09FEB]Revamping Trails G\u3011"
    },
    {
        "content": ">\u5982\u679c\u4f60\u77e5\u9053\u4ec0\u4e48\u53eb\u505a\u5206\u5c42\u56fe\u7684\u8bdd\u90a3\u5c31\u662f\u4e2a\u88f8\u9898\n,\u5426\u5219\u5c31\u662f\u4e2a\u795e\u9898\n\n\u9996\u5148\u5728\u539f\u56fe\u4e0a\u5904\u7406\u80af\u5b9a\u662f\u4e0d\u597d\u505a\n\n\u90a3\u4e48\u6211\u4eec\u628a\u56fe\u5206\u5c42\uff0c\u5177\u4f53\u6765\u8bf4\u5efaK+1\u5f20\u539f\u56fe\uff0c\u56fe\u4e0e\u56fe\u4e4b\u95f4\u7684\u8fb9\u6743\u4e3a0\uff0c\n\n\u5177\u4f53\u6765\u8bf4\uff1a\n\t\n    k\u975e\u5e38\u5c0f\u554a\uff0c\u4e8e\u662f\u53ef\u4ee5\u62c6\u70b9\uff0c\u628a\u4e00\u4e2a\u70b9\u5f3a\u884c\u62fd\u6210k\u4e2a\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8fde\u8fb9\u4e86\u3002\u600e\u4e48\u8fde\u5462\uff1f\u9996\u5148\u539f\u6765\u5c31\u6709\u7684\u8fb9\u662f\u4e0d\u80fd\u4e0d\u8fde\u7684\uff0c\u800c\u4e14\u8fd8\u8981\u5728\u6bcf\u4e00\u5c42\u56fe\u4e0a\u90fd\u8fde\u3002\u63a5\u4e0b\u6765\u5c31\u8981\u786e\u5b9a\u6bcf\u5c42\u56fe\u4e4b\u95f4\u7684\u5173\u7cfb\u4e86\uff0c\u4ece\u7b2ci\u5c42\u5230\u7b2ci+1\u5c42\u7684\u8fb9\u8fb9\u6743\u5168\u4e3a0\uff0c\u7b49\u4e8e\u8bf4\u662f\u7528\u6389\u4e86\u4e00\u6b21\u514d\u8d39\u5361\uff0c\u4e8e\u662f\u6109\u5feb\u7684\u8fde\u4e00\u8fde\uff0c\u8dd1\u4e00\u8dd1\u5806\u4f18\u5316dijktra\uff0c\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u5566\u3002\n\n\n\u672c\u9898\u6b63\u89e3\uff1a\uff1a\n\t\n    \u5206\u5c42\u56fe\u6700\u77ed\u8def\uff0c\u628a\u539f\u56fe\u591a\u5efak\u5c42\uff0c\u82e5\u539f\u56fe\u4e2d\u5b58\u5728edge(u,v)\uff0c\u90a3\u4e48\u628a\u6bcf\u5c42\u7684u\u90fd\u5f80\u4e0b\u4e00\u5c42\u7684v\u8fde\u4e00\u6761\u957f\u5ea6\u4e3a0\u7684\u6709\u5411\u8fb9\uff0c\u7136\u540e\u8dd1\u6700\u77ed\u8def\u5373\u53ef\u3002\u7b54\u6848\u4e3a\u6bcf\u4e00\u5c42\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u7684\u6700\u5c0f\u503c\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662fO((N+M)log(K*(N+M)))\u3002\u7ed9\u51fa\u5206\u5c42\u56fe\u6700\u77ed\u8def\u7684\u4ee3\u7801\uff1a\n\ncode:\n```cpp\n/*\n\tName: \u6539\u9020\u8defluogu P2939\n\tCopyright: ccsc;\n\tAuthor: ccsc;\n\tDate: 14-10-19 19:14\n\tDescription: \n*/\n\n# include <bits/stdc++.h>\n# define R register int\n\nusing namespace std;\n\nint h,n,m,k,s,t,a,b,c,head[220009];\nstruct edge\n{\n    int vv,too,nxt;\n}g[4200009];\nint d[220009];\nbool vis[220009];\ntypedef pair <int,int> pii;\npriority_queue <pii,vector<pii>,greater<pii> > q;\n\nvoid add(int x,int y,int vv)\n{\n    g[++h].too=y;\n    g[h].vv=vv;\n    g[h].nxt=head[x];\n    head[x]=h;\n}\n\nvoid dis()\n{\n    memset(d,127,sizeof(d));\n    d[s]=0;\n    q.push(make_pair(d[s],s));\n    int beg,j;\n    while (q.size())\n    {\n        beg=q.top().second;\n        q.pop();\n        if(vis[beg]) continue;\n        vis[beg]=true;\n        for (R i=head[beg];i;i=g[i].nxt)\n        {\n            j=g[i].too;\n            if(d[beg]+g[i].vv>=d[j]) continue;\n            d[j]=d[beg]+g[i].vv;\n            q.push(make_pair(d[j],j));\n        }\n    }\n}\n\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&k);\n    for (R i=1;i<=m;++i)\n    {\n        scanf(\"%d%d%d\",&a,&b,&c);\n        add(a,b,c);\n        add(b,a,c);\n        for (R j=1;j<=k;++j)\n        {\n            add(j*n+a,j*n+b,c);\n            add(j*n+b,j*n+a,c);\n            add((j-1)*n+a,j*n+b,0);\n            add((j-1)*n+b,j*n+a,0);\n        }\n    }\n    s=1,t=n;\n    dis();\n    int ans=d[t];\n    for (R i=0;i<=k;++i)\n        ans=min(ans,d[i*n+t]);\n    cout<<ans;\n    return 0;\n}\n```\n",
        "postTime": 1571052616,
        "uid": 211665,
        "name": "ccsc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2939 \u3010[USACO09FEB]\u6539\u9020\u8defRevamping Trails\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6709\u6bd2\uff01\uff01\uff01\uff01\uff01\uff01\uff01\u849f\u84bb\u88ab\u8fd9\u9053~~\u7834~~\u9898\u5361\u4e862\u5c0f\u65f640\u5206\u949f\uff01\uff01\uff01\n\n\u539f\u56e0\u5982\u4e0b\uff1a~~dij\u7684\u5806\u5199\u9519\u4e86~~\uff0c\u8fd9\u9053\u9898\u662f\u65e0\u5411\u56fe\u3002\uff0c\u3002\uff0c\u3002\u3002\uff0c\u3002\n\n\u8a00\u5f52\u6b63\u4f20\uff0c\u849f\u84bb\u4e0d\u4f1a\u4ec0\u4e48\u5206\u5c42\u56fe\uff0c\u4e00\u773c\u770b\u4e0a\u53bb\uff0c\u8fd9\u4e0d\u662fdp\u5417\n```\ndp[i][j] \u8868\u793a \u7ecf\u8fc7\u4e0d\u8d85\u8fc7j\u6761\u9ad8\u901f\u516c\u8def\uff0c\u4ece1\u53f7\u70b9\u5230\u7b2ci\u53f7\u70b9\u7684\u6700\u77ed\u8def\u7a0b\n```\n\u7136\u540e\u8003\u8651\u5230dp\u7684\u540e\u6548\u6027\uff0c\u672c\u849f\u84bb\u4e0d\u77e5\u600e\u4e48\u8111\u62bd\u5199\u4e86\u4e2atopo\u6392\u5e8f\uff0c\u7136\u540e\u6570\u636e\u4e2d\u679c\u7136\u6709\u73af\u3002\uff0c\u3002\uff0c\n\n\u63a5\u7740\u60f3\uff1a\u90a3\u6211\u6309\u4ec0\u4e48\u987a\u5e8f\u8dd1dp\uff1f\u8fd9dp\u4e0d\u5c31\u50cfdij\u4e2d\u7684dis\u6570\u7ec4\u5417\uff01\n\n\u4e8e\u662f\u6211\u4eec\u8dd1k\u904ddij\n```\nj\u662f\u6b63\u5728\u8dd1\u7b2c\u51e0\u6b21dij\ndis[i][j] \u8868\u793a\u7684\u542b\u4e49\u5c31\u662fdp[i][j]\n\n\uff08\u4ee3\u7801\u4e2d\u7528\u7684\u662fdis[i][K]\uff09\nif(!vis[v][K]&&dis[v][K]>min(dis[u][K]+w,dis[u][K-1]))\n\tdis[v][K]=min(dis[u][K]+w,dis[u][K-1]),Q.push(make_pair(dis[v][K],v));\n\u8fd9\u4e2a\u8f6c\u79fb\u5176\u5b9e\u4e5f\u5f88\u660e\u663e\u4e86\uff0cdis[v][j]\u4ecedis[u][j]+w\u6216dis[u][j-1]+0(\u7701\u7565\u4e86+0) \u8f6c\u79fb\u800c\u6765\n```\n\n\u6700\u540e~~\u6ca1\u53d1\u73b0\u662f\u65e0\u5411\u56fe\uff0c\u4e0b\u4e86\u8d85\u5927\u7684\u6570\u636e\u8c03\u8bd5~~\u8f93\u51fadis[n][k]\u5373\u53ef\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u81ea\u8ba4\u4e3a\u7801\u98ce\u8fd8\u4e0d\u9519\uff09\uff1a\n\n\uff08\u5176\u5b9e\u4e0d\u7528\u5f00longlong \u8c03\u8bd5\u7684\u65f6\u5019\u5f00\u7684\uff09\n```cpp\n#include<iostream>\n#include<vector>\n#include<queue>\n#include<cstring>\nusing namespace std;\nvector<long long> G[10001],W[10001];\nlong long vis[10001][21],dis[10001][21];\npriority_queue<pair<long long,long long>,vector<pair<long long,long long> >,greater<pair<long long,long long> > > Q;\nint main()\n{\n\tint n,m,k;cin>>n>>m>>k;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v,w;cin>>u>>v>>w;\n\t\tG[u].push_back(v);W[u].push_back(w);\n\t\tG[v].push_back(u);W[v].push_back(w);\n\t}\n\tmemset(dis,0x3f3f,sizeof(dis));dis[1][0]=0;\n\tfor(int K=0;K<=k;K++)\n\t{\n\t\tQ.push(make_pair(0,1));\n\t\twhile(!Q.empty())\n\t\t{\n\t\t\tpair<int,int> cur=Q.top();Q.pop();\n\t\t\tint u=cur.second;\n\t\t\tif(vis[u][K])continue;\n\t\t\tvis[u][K]=true;\n\t\t\tif(K>0)dis[u][K]=min(dis[u][K],dis[u][K-1]);\n\t\t\tfor(int i=0;i<G[u].size();i++)\n\t\t\t{\n\t\t\t\tint v=G[u][i],w=W[u][i];\n\t\t\t\tif(K==0)\n\t\t\t\t{\n\t\t\t\t\tif(!vis[v][K]&&dis[v][K]>dis[u][K]+w)\n\t\t\t\t\t\tdis[v][K]=dis[u][K]+w,Q.push(make_pair(dis[v][K],v));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tif(!vis[v][K]&&dis[v][K]>min(dis[u][K]+w,dis[u][K-1]))\n\t\t\t\t\t\tdis[v][K]=min(dis[u][K]+w,dis[u][K-1]),Q.push(make_pair(dis[v][K],v));\n\t\t\t}\n\t\t}\n\t}\n\tcout<<dis[n][k];\n\treturn 0;\n}\n```\n",
        "postTime": 1572790468,
        "uid": 90140,
        "name": "4biu",
        "ccfLevel": 0,
        "title": "2939"
    },
    {
        "content": "# P2939\u9898\u89e3\n### \u9898\u76ee\u4f20\u9001\u95e8\uff1a[P2939 \u6539\u9020\u8def](https://www.luogu.org/problemnew/solution/P2939)\n\n\u8fd9\u9053\u9898\u7b2c\u4e00\u773c\u770b\u8d77\u6765\u5176\u5b9e\u89c9\u5f97\u6709\u70b9\u96be\uff0c\u4f46\u662f\u4ed4\u7ec6\u4e00\u770b\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u5206\u5c42\u56fe\u7684~~\u5047~~\u7d2b\u9898\u3002\u8fd9\u9053\u9898\u7684\u601d\u8def\u5c31\u662f\u5206\u5c42\u6700\u77ed\u8def\uff0c\u5c31\u662f\u8bf4\u591a\u5f00\u4e00\u7ef4\u8bb0\u5f55\u673a\u4f1a\u4fe1\u606f\uff08\u90bb\u63a5\u8868\uff09\uff0c\u5efa\u56fe\u65f6\u76f4\u63a5\u7b80\u79f0 $k + 1$\u5c42\uff0c\u7136\u540e\u518d\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5c31\u53ef\u4ee5A\u4e86\u3002\n\n\u6240\u4ee5\u8bf4\u8fd9\u9053\u9898\u73b0\u5728\u552f\u4e00\u6709\u70b9\u96be\u505a\u7684\u5730\u65b9\u5c31\u662f\u5efa $k+1$\u5c42\u56fe\u4e86\u3002\n\n\u522b\u6025\uff0c\u6211\u6765\u6559\u4f60\u4eec\n\n\u5148\u770b\u8fd9\u4e2a\u56fe\uff1a![](https://cdn.luogu.com.cn/upload/image_hosting/bxwy7o68.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u8fd9\u5c31\u662f\u4e00\u4e2a$k$\u5c42\u56fe\u5566~  \n\u6bcf\u4e00\u5c42\u4e0e\u4e0b\u4e00\u5c42\u7684\u6743\u503c\u90fd\u662f $0$ \uff0c\u8fd9\u6837\u505a\u53ef\u4ee5\u5728\u8dd1\u6700\u77ed\u8def\u7684\u65f6\u5019\u76f4\u63a5\u8d70\u6539\u9020\u7684\u8def\uff08\u4e5f\u5c31\u662f\u8fb9\u6743\u4e3a $0$ \uff09\u3002\n\n\u5efa $k+1$\u5c42\u56fe\u7684\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\u65b9\u5f0f\ninline void Add ( register int u, register int v, register int w )\n{\n    Edge[++tot].next = head[u], head[u] = tot, Edge[tot].to = v, Edge[tot].len = w;\n}\n```\n\n```cpp\n//\u7cbe\u9ad3\u5728\u8fd9\u91cc\uff01\uff01\uff01\nfor ( register int i = 1 ; i <= m ; i ++ )\n{\n    int u = read(), v = read(), w = read();\n    Add ( u, v, w ), Add ( v, u, w );\n    for ( register int j = 1 ; j <= k ; j ++ )\n    {\n    \t//\u6bcf\u4e00\u5c42\u5185\uff0c\u590d\u5236\u521d\u59cb\u7684\u56fe\n        Add ( j * n + u, j * n + v, w ), Add ( j * n + v, j * n + u, w );\n        //\u6bcf\u4e00\u5c42\u4e4b\u95f4\u7684\u70b9\u8fb9\u6743\u8d4b\u4e3a0\uff0c\u65b9\u4fbf\u76f4\u63a5\u8dd1\u6700\u77ed\u8def\u6765\u8d70\u6539\u9020\u8def\n        Add ( ( j - 1 ) * n + u, j * n + v, 0 ), Add ( ( j - 1 ) * n + v, j * n + u, 0 );\n    }\n}\n```\n\u8fd9\u91cc\u7684\u5185\u5bb9\u5176\u5b9e\u4ed4\u7ec6\u770b\u8d77\u6765\u8fd8\u662f\u6bd4\u8f83\u6d45\u663e\u6613\u61c2\u7684\uff0c\u800c\u4e14\u8fd9\u4e2a\u5b58\u591a\u5c42\u56fe\u7684\u65b9\u5f0f\u5728\u4ee5\u540e\u7684\u9898\u76ee\u4e2d\u4e5f\u53ef\u4ee5\u5de7\u5999\u5730\u7528\n\n\u65e2\u7136\u8981\u5b58\u591a\u5c42\u56fe\uff0c\u76f8\u5e94\u7684\u6570\u7ec4\u7684\u5927\u5c0f\u4e5f\u8981\u6709\u6240\u6269\u5f20\n```cpp\nint head[N*K], dis[N*K];\nbool vis[N*K];\nstruct edge\n{\n    int next, to, len;\n}Edge[M*K<<1];\n```\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u8dd1\u6700\u77ed\u8def\u7684\u8fc7\u7a0b\u4e86\u3002\u7528SPFA\u7684\u540c\u5b66\uff0c\u5f88\u9057\u61be\uff0c\u8fd9\u9898\u4f1a\u5361SPFA\uff08NOI2018\u4ee5\u540e\uff0c\u611f\u89c9\u5168\u4e16\u754c\u90fd\u5728\u5361SPFA\uff09  \n\u6709\u961f\u5217\u4f18\u5316\u7684$Bellman-Ford$\u7b97\u6cd5\u5176\u5b9e\u5f88\u4f18\u79c0\uff0c\u4f46\u662f\u5b83\u7981\u4e0d\u8d77\u5361\n\n\n---\n### [SPFA\u8bc4\u6d4b 54](https://www.luogu.org/record/24379741)\uff08\u8fd9\u4e2a\u5f00\u4e0d\u5f00O2\u90fd\u53ea\u670954\u5206\uff09\n```cpp\n//SPFA\ninline void SPFA ( register int s )\n{\n    memset ( dis, 0x7f, sizeof(dis) );\n    vis[s] = true;\n    queue < int > q;\n    q.push ( s );\n    dis[s] = 0;\n    while ( !q.empty() )\n    {\n        register int x = q.front();\n        q.pop();\n        vis[x] = false;\n        for ( register int i = head[x] ; i ; i = Edge[i].next )\n        {\n            register int v = Edge[i].to;\n            if ( dis[v] > dis[x] + Edge[i].len )\n            {\n                dis[v] = dis[x] + Edge[i].len;\n                if ( vis[v] == false )\n                    q.push ( v );\n                vis[v] = true;\n            }\n        }\n    }\n}\n```\n\n---\n### [\u4f18\u5316\u7684SPFA\u8bc4\u6d4b\uff08\u53cc\u7aef\u961f\u5217\u4f18\u5316deque\uff09 54](https://www.luogu.org/record/24380054)\uff08\u8fd9\u4e2a\u5f00\u4e0d\u5f00O2\u4e5f\u90fd\u53ea\u670954\u5206\uff09\n```cpp\n//deque\u4f18\u5316\u7684SPFA\ninline void SPFA ( register int s )\n{\n    memset ( dis, 0x7f, sizeof(dis) );\n    deque < int > q;\n    vis[s] = true;\n    q.push_front ( s );\n    dis[s] = 0;\n    while ( !q.empty() )\n    {\n        register int x = q.front();\n        q.pop_front();\n        vis[x] = false;\n        for ( register int i = head[x] ; i ; i = Edge[i].next )\n        {\n            register int v = Edge[i].to;\n            if ( dis[v] > dis[x] + Edge[i].len )\n            {\n                dis[v] = dis[x] + Edge[i].len;\n                //\u91cd\u70b9\u770b\u8fd9\u91cc\uff01\uff01\uff01\u53cc\u7aef\u961f\u5217\u4f18\u5316\u7684SPFA\u4e3b\u8981\u5b9e\u5728\u8fd9\u4e2a\u5730\u65b9\u6709\u4f18\u5316\n                if ( vis[v] == false )\n                    if ( dis[q.front()] > dis[v] )  q.push_front ( v );\n                    else q.push_back ( v );\n                vis[v] = true;\n            }\n        }\n    }\n}\n```\n---\n\u7136\u800c\u4f18\u79c0\u7684\u5806\u4f18\u5316\u7684Dijkstra\u53ef\u4ee5\u5b8c\u7f8e\u5730\u8dd1\u8fc7\u53bb\uff0c\u5e76\u4e14\u8bf4\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u975e\u5e38\u7684\u7a33\u5b9a\uff0c\u5b83\u4e0d\u6015\u88ab\u5361\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u5f88\u4f18\u79c0\uff08NlogN\uff09\u3002Dijkstra\u4e0d\u80fd\u5904\u7406\u8d1f\u8fb9\u6743\uff0c\u6240\u5e78\u8fd9\u9898\u5e76\u6ca1\u6709\u7ed9\u5230\u8d1f\u8fb9\u6743\n\n### [\u5806\u4f18\u5316Dijkstra\u8bc4\u6d4b 100](https://www.luogu.org/record/24381332)\uff08\u8fd9\u4e2a\u4e0d\u4e00\u6837\u4e86\uff0c\u4e0d\u5f00O2\u53ea\u670954\u5206\uff0c\u5f00\u4e86O2\u53ef\u4ee5A\u6389\uff09\n```cpp\n//\u5806\u4f18\u5316\u7684DIjkstra\ninline void Dijkstra ( register int s )\n{\n    memset ( dis, 0x7f, sizeof(dis) );\n    priority_queue < pair < int, int >, vector < pair < int, int > >, greater < pair < int, int > > > q;\n    dis[s] = 0;\n    q.push ( make_pair ( 0, s ) );\n    while ( !q.empty() )\n    {\n        register int x = q.top().second;\n        q.pop();\n        if ( vis[x] == true )  continue ;\n        vis[x] = true;\n        for ( register int i = head[x] ; i ; i = Edge[i].next )\n        {\n            register int v = Edge[i].to;\n            dis[v] = min ( dis[v], dis[x] + Edge[i].len );\n            q.push ( make_pair ( dis[v], v ) );\n        }\n    }\n}\n```\n\n### \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1e4 + 5, M = 5e5 + 5, K = 25, INF = 2147483647;\n\ninline long long read()\n{\n    long long f = 1, sum = 0;  char ch = getchar();\n    while ( !isdigit(ch) ) { if ( ch == '-' ) f = -1; ch = getchar(); }\n    while ( isdigit(ch) ) { sum = (sum<<1) + (sum<<3) + (ch^48); ch = getchar(); }\n    return f * sum;\n}\n\nint n, m, k, tot, ans = INF;\nint head[N*K], dis[N*K];\nbool vis[N*K];\nstruct edge\n{\n    int next, to, len;\n}Edge[M*K<<1];\npriority_queue < pair < int, int >, vector < pair < int, int > >, greater < pair < int, int > > > q;\n\ninline void Add ( register int u, register int v, register int w )\n{\n    Edge[++tot].next = head[u], head[u] = tot, Edge[tot].to = v, Edge[tot].len = w;\n}\n\ninline void Dijkstra ( register int s )\n{\n    memset ( dis, 0x7f, sizeof(dis) );\n    dis[s] = 0;\n    q.push ( make_pair ( 0, s ) );\n    while ( !q.empty() )\n    {\n        register int x = q.top().second;\n        q.pop();\n        if ( vis[x] == true )  continue ;\n        vis[x] = true;\n        for ( register int i = head[x] ; i ; i = Edge[i].next )\n        {\n            register int v = Edge[i].to;\n            dis[v] = min ( dis[v], dis[x] + Edge[i].len );\n            q.push ( make_pair ( dis[v], v ) );\n        }\n    }\n}\n\nint main()\n{\n    n = read(), m = read(), k = read();//\u8f93\u5165\n    for ( register int i = 1 ; i <= m ; i ++ )\n    {\n        int u = read(), v = read(), w = read();//\u8fd8\u662f\u8f93\u5165\n        Add ( u, v, w ), Add ( v, u, w );//\u5efa\u5355\u5c42\u56fe\n        for ( register int j = 1 ; j <= k ; j ++ )\n        {\n            Add ( j * n + u, j * n + v, w ), Add ( j * n + v, j * n + u, w );//\u5efa\u591a\u5c42\u56fe\n            Add ( ( j - 1 ) * n + u, j * n + v, 0 ), Add ( ( j - 1 ) * n + v, j * n + u, 0 );//\u5c42\u4e0e\u5c42\u4e4b\u95f4\u7684\u5904\u7406\n        }\n    }\n    Dijkstra ( 1 );//\u4ee51\u4e3a\u8d77\u70b9\u8dd1\u6700\u77ed\u8def\n    for ( register int i = 1 ; i <= k + 1 ; i ++ )\n        ans = min ( ans, dis[i*n] );//\u6ce8\u610f\uff01\u8fd9\u4e2a\u6700\u77ed\u8def\u4e0d\u662f1-n\u7684\u6700\u77ed\u8def\uff0c\u800c\u662f\u8981\u7edf\u8ba11\u5230\u6bcf\u4e00\u5c42\u7684n\u7684\u6700\u77ed\u8def\u7684\u6700\u5c0f\u503c\uff0c\u5373\u4e3a\u7b54\u6848\n    printf ( \"%d\", ans );\n    return 0;\n}\n```\n\n\u672c\u849f\u84bb\u592a\u84bb\u4e86\uff0c\u53ea\u80fd\u5199\u51fa\u8fd9\u6837\u7684\u9898\u89e3\u4e86\uff0c\u5bf9\u6bd4\u524d\u65b9dalao\u7684\u9898\u89e3\uff0c\u5fc3\u4e2d\u81ea\u6127\u4e0d\u5982~~~",
        "postTime": 1569561727,
        "uid": 143835,
        "name": "\u4ea4\u8b66",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2939 \u3010[USACO09FEB]\u6539\u9020\u8defRevamping Trails\u3011"
    },
    {
        "content": "\u4eca\u5929\u673a\u623f\u6a21\u62df\u8d5b\u7684\u9898\u76ee\uff0c\u5148\u7528\u7206\u641c\u505a\u7684\uff0c\u540e\u9762\u53bb\u5199\u4e86dijkstra\uff08~~\u6ca1\u60f3\u5230\u8fc7\u6389\u4e86~~\uff09\n\n\u672c\u83dc\u9e21\u4e4b\u524d\u5e76\u6ca1\u6709\u5b66\u8fc7\u5206\u5c42\u56fe\uff0c\u6240\u4ee5\u6211\u611f\u89c9\u7528\u7684\u662fdijkstra\u52a0\u52a8\u6001\u89c4\u5212\u7684\u601d\u60f3\n\n\u6211\u4eec\u7528$dis[i][j]$\u6765\u8868\u793a\u5230\u4ece1\u53f7\u7267\u573a\u5230\u7b2c$i$\u53f7\u7267\u573a\u5347\u7ea7$j$\u6761\u8def\u6240\u82b1\u7684\u6700\u77ed\u65f6\u95f4\uff0c\u8bbe\u7b2c$x$\u53f7\u7267\u573a\u4e0e\u7b2c$i$\u53f7\u7267\u573a\u76f8\u8fde\u901a\uff0c$road(i,x)$\u8868\u793a$i$\u5230$x$\u7684\u8def\u5f84\u957f\u5ea6\uff0c\u4ece$i$\u5230$x$\uff0c\u8981\u4e48\u5347\u7ea7\u8def\u5f84\uff0c\u8981\u4e48\u5c31\u4e0d\u5347\u7ea7\uff0c\u90a3\u4e48\u4e0d\u96be\u53d1\u73b0\n\n$dis[x][j]=min(dis[i][j]+road(i,x),dis[x][j])$\n\n$dis[x][j+1]=min(dis[i][j],dis[x][j+1])$\n\n\u63a5\u4e0b\u6765\u8bb2\u8bb2\u6211\u7684dijkstra\uff0c\u7528$k$\u4e2a\u5806\u6765\u5b58\u6700\u5c0f\u7684$dis[i]$\uff0c\u4ece\u4e0d\u5347\u7ea7\u8def\u5f84\u679a\u4e3e\u5230\u5347\u7ea7k\u6761\u8def\u5f84\uff0c\u4e0b\u9762\u662f\u8fd9\u4e00\u90e8\u5206\u7684\u4ee3\u7801\n```\n\tfor(int j=0; j<=k; j++)  //\u679a\u4e3e\u5347\u7ea7\u8def\u5f84\u7684\u6761\u6570\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\twhile(!q[j].empty())\n\t\t{\n\t\t\tp=q[j].top();\n\t\t\tq[j].pop();\n\t\t\tif(vis[p.a]==0) //\u672a\u8bbf\u95ee\u8fc7\n\t\t\t{\n\t\t\t\tvis[p.a]=1;\n\t\t\t\tfor(int i=0; i<l[p.a].size(); i++)\n\t\t\t\t\tif(vis[l[p.a][i]]==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tson=l[p.a][i]; //\u4e0ei\u76f8\u8fde\u7684\u8282\u70b9\n\t\t\t\t\t\tif(p.sum+l1[p.a][i]<dis[son][j]) //\u4e0d\u5347\u7ea7\u8def\u5f84\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdis[son][j]=p.sum+l1[p.a][i];\n\t\t\t\t\t\t\tnode txt;\n\t\t\t\t\t\t\ttxt.a=l[p.a][i],txt.sum=dis[son][j];\n\t\t\t\t\t\t\tq[j].push(txt);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(j!=k&&p.sum<dis[son][j+1]) //\u5347\u7ea7\u8def\u5f84\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdis[son][j+1]=p.sum;\n\t\t\t\t\t\t\tnode txt;\n\t\t\t\t\t\t\ttxt.a=l[p.a][i],txt.sum=dis[son][j+1];\n\t\t\t\t\t\t\tq[j+1].push(txt);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n```\n\n\u4e5f\u6ca1\u4ec0\u4e48\u5176\u4ed6\u8981\u8bb2\u7684\u5566\uff0c\u63a5\u4e0b\u6765\u662f\u5168\u90e8\u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long //\u6ce8\u610f\u8981long long\uff01\uff01\uff01 \nstruct node\n{\n\tint a,sum;\n\tbool operator<(const node&aaa)const\n\t{\n\t\treturn aaa.sum<sum;\n\t}\n} p;\nint n,m,k,dis[10003][23],x,y,w,ans=1e9,vis[10003],son;\nvector<int>l[10003],l1[10003]; //vector\u5b58\u56fe\npriority_queue<node>q[23]; //\u7528\u5806\u4f18\u5316dijkstra \nsigned main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1; i<=m; i++)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&w);\n\t\tl[x].push_back(y),l[y].push_back(x),l1[x].push_back(w),l1[y].push_back(w); //\u5b58\u56fe\n\t}\n\tfor(int i=1; i<=n; i++)\n\t\tfor(int j=0; j<=k; j++)\n\t\t\tdis[i][j]=1e9; //\u8bb0\u5f97\u8d4b\u521d\u503c\n\tdis[1][0]=0,p.a=1,p.sum=0;\n\tq[0].push(p);\n\tfor(int j=0; j<=k; j++)  //\u679a\u4e3e\u5347\u7ea7\u8def\u5f84\u7684\u6761\u6570\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\twhile(!q[j].empty())\n\t\t{\n\t\t\tp=q[j].top();\n\t\t\tq[j].pop();\n\t\t\tif(vis[p.a]==0) //\u672a\u8bbf\u95ee\u8fc7\n\t\t\t{\n\t\t\t\tvis[p.a]=1;\n\t\t\t\tfor(int i=0; i<l[p.a].size(); i++)\n\t\t\t\t\tif(vis[l[p.a][i]]==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tson=l[p.a][i]; //\u4e0ei\u76f8\u8fde\u7684\u8282\u70b9\n\t\t\t\t\t\tif(p.sum+l1[p.a][i]<dis[son][j]) //\u4e0d\u5347\u7ea7\u8def\u5f84\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdis[son][j]=p.sum+l1[p.a][i];\n\t\t\t\t\t\t\tnode txt;\n\t\t\t\t\t\t\ttxt.a=l[p.a][i],txt.sum=dis[son][j];\n\t\t\t\t\t\t\tq[j].push(txt);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(j!=k&&p.sum<dis[son][j+1]) //\u5347\u7ea7\u8def\u5f84\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdis[son][j+1]=p.sum;\n\t\t\t\t\t\t\tnode txt;\n\t\t\t\t\t\t\ttxt.a=l[p.a][i],txt.sum=dis[son][j+1];\n\t\t\t\t\t\t\tq[j+1].push(txt);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<dis[n][min(m,k)];\n\treturn 0;\n}\n```\n\n",
        "postTime": 1567154662,
        "uid": 78001,
        "name": "dz_ice",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2939 \u3010[USACO09FEB]\u6539\u9020\u8defRevamping Trails\u3011"
    },
    {
        "content": "\u6765\u89e3\u91ca\u4e00\u4e0b\u5206\u5c42\u56fe\u662f\u4e2a\u5565\u5427\uff08~~\u5176\u5b9e\u4e5f\u53ea\u662f\u672c\u849f\u84bb\u778e\u60f3\u7684qwq~~\uff09\n\n\u5c31\u662f\u628a\u539f\u56fe\u590d\u5236k\u4efd\uff0c\u5f62\u6210\u4e00\u4e2a\u4e09\u7ef4\u7684\u56fe\u5f62\uff0c**\u540c\u4e00\u5c42**\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\u5c31\u662f\u539f\u56fe\u4e2d\u7684\u8fb9\u6743\uff0c**\u76f8\u90bb\u4e24\u5c42**\u7684\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\u90fd\u662f\u96f6\u3002\u7136\u540edis[i][j]\u5c31\u8868\u793a\u5728\u7b2cj\u5c42\u30011~i\u7684\u6700\u77ed\u8def\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u548c\u5176\u6240\u5728\u5c42\u6570\uff0c\u6709\u4e24\u79cd\u8f6c\u79fb\uff1a1.\u8f6c\u79fb\u5230\u540c\u5c42\u76f8\u90bb\u7684\u70b9 2.\u8f6c\u79fb\u5230\u4e0b\u4e00\u5c42\u76f8\u90bb\u7684\u70b9\u3002\u8dd1\u4e00\u4e2a\u4e8c\u7ef4dijkstra\uff08\u52a0\u5806\u4f18\u5316\uff09\u5c31\u597d\u4e86\u3002\n\n\u8d34\u4e0b\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cctype>\n#include<queue>\n#define Pair pair<int, int>\n#define F first\n#define S second\n#define mp make_pair\nusing namespace std;\n\nconst int N = 10010, M = 50010, K = 25;\nint n, m, k, cnt;\nint head[N], dis[N][K];\nbool vis[N][K];\n\nstruct Edge{\n    int to, nex, v;\n}e[M<<1];\n\ninline int read()\n{\n    char ch = getchar(); int x = 0, flag = 0;\n    while (!isdigit(ch)){ if (ch == '-') flag = 1; ch = getchar(); }\n    while (isdigit(ch)){ x = x * 10 + ch - '0'; ch = getchar(); }\n    return flag ? -x : x;\n}\n\ninline void add(int x, int y, int z)\n{ e[++ cnt].to = y; e[cnt].v = z; e[cnt].nex = head[x]; head[x] = cnt; }\n\nint main()\n{\n    n = read(), m = read(), k = read();\n    for (int i = 1; i <= m; i ++){\n        int x = read(), y = read(), z = read();\n        add(x, y, z); add(y, x, z);\n    }\n    memset(dis, 0x3f, sizeof dis);\n    memset(vis, 0, sizeof vis);\n    priority_queue<pair<int, Pair> > q;\n    q.push(mp(0, mp(1, 0)));\n    dis[1][0] = 0;\n    while (!q.empty()){\n        Pair u = (q.top()).S; q.pop();\n        if (vis[u.F][u.S]) continue; vis[u.F][u.S] = 1;\n        for (int i = head[u.F]; i; i = e[i].nex){\n            int v = e[i].to;\n            if (dis[v][u.S] > dis[u.F][u.S]+e[i].v){\n                dis[v][u.S] = dis[u.F][u.S]+e[i].v;\n                q.push(mp(-dis[v][u.S], mp(v, u.S)));\n            }\n            if (u.S < k && dis[v][u.S+1] > dis[u.F][u.S]){\n                dis[v][u.S+1] = dis[u.F][u.S];\n                q.push(mp(-dis[v][u.S+1], mp(v, u.S+1)));\n            }\n        }\n    }\n    printf(\"%d\\n\", dis[n][k]);\n    return 0;\n}\n```",
        "postTime": 1507623873,
        "uid": 19722,
        "name": "fy0123",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2939 \u3010[USACO09FEB]\u6539\u9020\u8defRevamping Trails\u3011"
    },
    {
        "content": "\u672c\u9053\u9898\u662f\u5206\u5c42\u56fe\u6700\u77ed\u8def\u7684\u6a21\u677f\u9898\u3002\n\n\u90a3\u4e48\u6240\u8c13\u7684\u5206\u5c42\u56fe\u6700\u77ed\u8def\u5462\uff0c\u5b83\u7684\u7279\u5b9a\u7684\u5f62\u5f0f\u5c31\u662f\u5728dis\u7684\u6570\u7ec4\u4e0a\u591a\u52a0\u4e0a\u4e86\u4e00\u7ef4\u3002\n\n\u4ece\u800c\u5b9e\u73b0\u4e86\u4e8c\u7ef4\u7684\u6700\u77ed\u8def\u3002\n\ndis[i][j]\u6307\u7684\u5c31\u662f\u5728\u7b2cj\u5c42\uff0c\u5230\u8fbe\u7b2ci\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8def\u3002\ndis[i][j]\u4ece\u800c\u53ef\u4ee5\u4ecedis[i][j-1]\u548cdis[i][j]\u8f6c\u79fb\u8fc7\u6765\u3002\n\n\u5f53\u7136dp[i][j-1]\u7684\u8f6c\u79fb\u662f\u6709\u6761\u4ef6\u7684\uff0c\u5fc5\u987b\u6ee1\u8db3\u5728k\u7684\u9650\u5236\u4e4b\u5185\u3002k\u5728\u8fd9\u91cc\u6307\u7684\u5c31\u662f\u5206\u5c42\u56fe\u4e2d\u7684\u5c42\u6570\u3002\n\n\u6ce8\u610f\uff1a\u672c\u4f53\u7528spfa\u4f1a\u8d85\u65f6\u4e24\u4e2a\u70b9\uff0c\u5efa\u8bae\u7528\u5806\u4f18\u5316dij\u3002\u5728\u5206\u5c42\u56fe\u4e0b\uff0c\u5806\u4f18\u5316\u7684dij\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u3002\u5373\u6309dis\u7684\u5927\u5c0f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u5177\u4f53\u7684\u8fc7\u7a0b\u53ef\u4ee5\u89c1\u4ee3\u7801\uff1a\n```cpp\n\n//\u672c\u9053\u9898\u76ee\u662f\u5206\u5c42\u56fe\u6700\u77ed\u8def\u7684\u6a21\u677f\u9898\u3002\n//\u662f\u4e00\u9053\u5f88\u597d\u7684\u7ec3\u4e60\u9898\u3002 \n\n#include<cmath>\n#include<cstring>\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<queue>\n#include<map>\n#include<vector>\n#define int long long\nusing namespace std;\nstruct vode\n{\n\tint to;\n\tint next;\n\tint dis;\n}edge[200005];\nint wugui=0;\nint head[200005];\nint dp[50005][25];\nvoid add(int x,int y,int d)\n{\n\twugui++;\n\tedge[wugui].to=y;\n\tedge[wugui].next=head[x];\n\tedge[wugui].dis=d;\n\thead[x]=wugui;\n}\nint n,m,k;\nint vis[200005][35];\n\nstruct node{\n\tint dis;\n\tint times;\n\tint num;\n};\n\npriority_queue<node> q;\n\nbool operator<(node x,node y)\n{\n\treturn x.dis>y.dis;\n}\n\nvoid spfa()\n{\n\tdp[1][0]=0;\n\tnode p;\n\tp.num=1;\n\tp.dis=0;\n\tp.times=0;\n\tq.push(p);\n\twhile(!q.empty())\n\t{\n\t\tnode point=q.top();\n\t\tq.pop();\n\t\tif(vis[point.num][point.times]==1)\n\t\tcontinue;\n\t\tvis[point.num][point.times]=1;\n\t\tfor(int i=head[point.num];i;i=edge[i].next)\n\t\t{\n\t\t\tint t=edge[i].to;\n\t\t\tif(dp[t][point.times+1]>dp[point.num][point.times] && point.times<k)\n\t\t\t{\n\t\t\t\tdp[t][point.times+1]=dp[point.num][point.times];\n\t\t\t\tnode p1;\n\t\t\t\tp1.num=t;\n\t\t\t\tp1.dis=dp[t][point.times+1];\n\t\t\t\tp1.times=point.times+1;\n\t\t\t\tq.push(p1);\n\t\t\t}\n\t\t\tif(dp[t][point.times]>dp[point.num][point.times]+edge[i].dis)\n\t    \t{\n\t\t\t    dp[t][point.times]=dp[point.num][point.times]+edge[i].dis;\n\t\t\t    node p2;\n\t\t\t    p2.num=t;\n\t\t\t    p2.dis=dp[t][point.times];\n\t\t\t    p2.times=point.times;\n\t\t\t    q.push(p2);\n\t\t    }\n\t\t}\n\t}\n}\nsigned main()\n{\n\tscanf(\"%lld%lld%lld\",&n,&m,&k);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y,z;\n\t\tscanf(\"%lld%lld%lld\",&x,&y,&z);\n\t\tadd(x,y,z);\n\t\tadd(y,x,z);\n\t}\n\tint ans=0x3f3f3f3f;\n\tmemset(dp,0x3f3f3f3f,sizeof(dp));\n\tspfa();\n\tfor(int i=0;i<=k;i++)\n\t{\n\t\tans=min(ans,dp[n][i]);\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1572439921,
        "uid": 114514,
        "name": "zzr8178541919",
        "ccfLevel": 7,
        "title": "\u6539\u9020\u8def"
    },
    {
        "content": "## \u3010\u601d\u8def\u3011\n\u5206\u5c42\u56fe + dijkstra     \n\u4e00\u9053\u5206\u5c42\u56fe\u7684\u88f8\u9898     \n\u5982\u679c\u60f3\u4e86\u89e3\u5206\u5c42\u56fe\u8bf7\u770b\u8fd9\u91cc   \n[\u4e86\u89e3\u5206\u5c42\u56fe](https://www.cnblogs.com/acioi/p/11716483.html) \n \n## \u3010\u9898\u76ee\u5927\u610f\u3011 \n\u4ece1\u5230n\u8dd1    \n\u5176\u4e2d\u53ef\u4ee5\u8ba9k\u6761\u8def\u7684\u8017\u65f6\u53d8\u4e3a0   \n\u6c42\u6700\u5c0f\u8017\u65f6    \n\n###\u3010\u9898\u76ee\u5206\u6790\u3011\n\u53ef\u4ee5\u514d\u53bbk\u6761\u8def    \n\u5982\u679c\u4f60\u662f\u56e0\u4e3a\u770b\u5230\u4e86\u7535\u8bdd\u7ebf\u90a3\u9053\u9898\u91cc\u9762\u56db\u500d\u7ecf\u9a8c\u7684\u5e16\u5b50   \n\u6240\u4ee5\u624d\u6765\u505a\u7684\u8fd9\u4e2a\u9898    \n\u90a3\u4f60\u6709\u53ef\u80fd\u5931\u671b\u800c\u5f52\u4e86   \n\u56e0\u4e3a\u505a\u7535\u8bdd\u7ebf\u7684\u5927\u90e8\u5206\u90fd\u662f\u7528\u7684\u4e8c\u5206\u7b54\u6848+SPFA   \n\u90a3\u91cc\u9762\u7684\u4e09\u9053\u9898\u7684\u786e\u90fd\u662f\u548c\u7535\u8bdd\u7ebf\u4e00\u4e2a\u77e5\u8bc6\u70b9   \n\u4e0d\u8fc7\u8fd9\u4e2a\u77e5\u8bc6\u70b9\u4e0d\u662f\u4e8c\u5206\u7b54\u6848+SPFA\u800c\u662f\u5206\u5c42\u56fe   \n\u5206\u5c42\u56fe\u5c31\u662f\u4e13\u95e8\u9488\u5bf9\u8fd9\u79cd\u53ef\u4ee5\u514d\u53bbk\u6761\u8def\u95ee\u9898\u7684   \n\u4e0d\u8fc7\u9700\u8981\u5f00\u5f88\u5927\u7684\u5185\u5b58   \n\u60f3\u4e86\u89e3\u5206\u5c42\u56fe\u7684\u8bdd\u8bf7\u770b\u4e0a\u9762\u90a3\u4e2a\u94fe\u63a5\u6216\u8005\u53bb\u770b\u5176\u4ed6\u5927\u4f6c\u7684\u535a\u5ba2   \n\n### \u3010\u6838\u5fc3\u601d\u8def\u3011\n\u5c06\u9898\u76ee\u7ed9\u51fa\u7684\u56fe\u5efa\u7acbk\u4e2a    \n\u7136\u540e\u4e24\u4e2a\u56fe\u4e4b\u95f4\u8fde\u63a5\u7684\u8def\u90fd\u6807\u4e3a0   \n\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u56fe\u4e4b\u95f4\u7684\u8def\u5c31\u662f\u90a3\u9ad8\u901f\u8def   \n\u7b2ci\u4e2a\u56fe\u5c31\u662f\u5efa\u7acbi\u6761\u9ad8\u901f\u8def\u7684\u60c5\u51b5   \n\u7136\u540e\u5c31\u662f\u88f8\u7740\u8dd1dijkstra\u5c31\u597d\u4e86   \n\u6700\u540e\u6bd4\u8f83\u7528\u4e861-k\u6761\u9ad8\u901f\u516c\u8def\u5230\u8fben\u6389\u91cc\u9762\u82b1\u8d39\u6700\u5c11\u7684\u8f93\u51fa\u5c31\u5b8c\u7ed3\u6492\u82b1\uff01\uff01\uff01     \n## \u3010\u5b8c\u6574\u4ee3\u7801\u3011\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n\nusing namespace std;\nconst int Max = 4200005;\nconst int M = 420005;\nstruct point\n{\n\tint w;//\u8def\u5f84\u7684\u957f\u5ea6 \n\tint x;//\u70b9\u7684\u6807\u53f7 \n\tbool operator < (const point & xx)const\n\t{\n\t\treturn xx.w < w;\n\t}\n};\nstruct node\n{\n\tint y,ne,z;\n}a[Max];\nint sum = 0,head[M];\nvoid add(int x,int y,int z)\n{\n\ta[++ sum].y = y;\n\ta[sum].ne = head[x];\n\ta[sum].z = z;\n\thead[x] = sum;\n}\npriority_queue<point>q;\nint d[M];\nbool use[M];\nvoid dj()\n{\n\tmemset(d,0x3f,sizeof(d));\n\td[1] = 0;\n\tq.push((point){0,1});\n\twhile(!q.empty())\n\t{\n\t\tpoint qwq = q.top();\n\t\tq.pop();\n\t\tint x = qwq.x,w = qwq.w;\n\t\tif(use[x] == true)\n\t\t\tcontinue;\n\t\telse\n\t\t\tuse[x] = true;\n\t\tfor(register int i = head[x];i != 0;i = a[i].ne)\n\t\t{\n\t\t\tint awa = a[i].y;\n\t\t\tif(d[awa] > d[x] + a[i].z)\n\t\t\t{\n\t\t\t\td[awa] = d[x] + a[i].z;\n\t\t\t\tif(use[awa] == false)\n\t\t\t\t\tq.push((point){d[awa],awa});\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tfreopen(\"walk.in\",\"r\",stdin);\n\tint n,m,k;\n\tcin >> n >> m >> k;\n\tfor(register int i = 1;i <= m;++ i)\n\t{\n\t\tint x,y,z;\n\t\tcin >> x >> y >> z;\n\t\tadd(x,y,z),add(y,x,z);\n\t\tfor(register int j = 1;j <= k;++ j)\n\t\t{\n\t\t\tadd(j * n + x,j * n + y,z);\n\t\t\tadd(j * n + y,j * n + x,z);\n\t\t\tadd((j - 1) * n + x,j * n + y,0);\n\t\t\tadd((j - 1) * n + y,j * n + x,0);\n\t\t}\n\t}\n\tdj();\n\tint M = 0x7fffffff;\n\tfor(register int i = 0;i <= k;++ i)\n\t\tM = min(M,d[i * n + n]);\n\tcout << M << endl;\n\treturn 0;\n}\n```",
        "postTime": 1571666386,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2939 \u3010[USACO09FEB]\u6539\u9020\u8defRevamping Trails\u3011"
    },
    {
        "content": "### \u88f8\u7684\u5206\u5c42\u56fe\u2026\u2026\n\n\u4f46\u662f\u6bd2\u7624\u6bd2\u7624\u6bd2\u7624\u2026\u2026\u2026\u2026\u2026\u2026\uff01\uff01\uff01\n\n![](https://www.z4a.net/images/2019/10/20/image.md.png)\n\n## \u60e8\u6b7b\u5728\u6570\u7ec4\u5927\u5c0f\u4e0a\uff01\n\n###### \u4e5f\u8bb8\u53ea\u6709\u6211\u4f1a\u5728\u8fd9\u4e2a\u5730\u65b9\u9519\u4e86\u2026\u2026\n\n------------\n\n[P4822](https://www.luogu.org/problem/P4822)\n\n[P4568](https://www.luogu.org/problem/P4568) <-\u4e00\u6bdb\u4e00\u6837\u8bf6\uff01\uff01\uff01\n\n[P1948](https://www.luogu.org/problem/P1948)\n\n[P2939](https://www.luogu.org/problem/P2939) <--\u6bd2\u7624\uff0c\u5361\u6570\u7ec4\u5927\u5c0f\n\n### 4\u500d\u7ecf\u9a8c\uff01\n\n\n------------\n\n\u5c06\u4e0a\u4e0b\u4e24\u5c42\u4e4b\u95f4\u8fde\u4e0a\u6743\u503c\u4e3a0\u7684\u8fb9\u5c31\u53ef\u4ee5\u4e86\uff01\n\n\u7136\u540e\u5c31\u662f\u5206\u5c42\u56fe\u5e38\u89c4\u64cd\u4f5c\u4e86\n\n\u6ce8\u610f\u7ec6\u8282\uff01\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=3e6+1;\nstruct st{\n    int dis,x;\n    st (const int a,const int b){\n        dis=a;\n        x=b;\n    }\n    bool operator < (const st a)const {\n        return dis>a.dis;\n    }\n};\npriority_queue <st> q;\nint n,m,cnt,s,t,k;\nint nxt[2*N],last[2*N],a[2*N],w[2*N];\nint dis[N];\nbool l[N];\nvoid add(int x,int y,int z){\n    nxt[++k]=last[x];\n    last[x]=k;\n    a[k]=y;\n    w[k]=z;\n}\nvoid dijkstra(int s){\n    memset(dis,0x3f,sizeof(dis));\n    dis[s]=0;\n    q.push(st(0,s));\n    while (!q.empty()){\n        while (!q.empty()&&l[q.top().x]) q.pop();\n        if (q.empty()) break;\n        int x=q.top().x;q.pop();\n        l[x]=1;\n        for (int i=last[x];i;i=nxt[i]){\n            int y=a[i];\n            if (dis[y]>dis[x]+w[i]){\n                dis[y]=dis[x]+w[i];\n                q.push(st(dis[y],y));\n            }\n        }\n    }\n}\nsigned main(){\n    scanf(\"%lld%lld%lld\",&n,&m,&cnt);s=1;t=n;\n    // for (int i=0;i<n;i++) last[i]=-1;\n    for (int x,y,z,i=1;i<=m;i++){\n        scanf(\"%lld%lld%lld\",&x,&y,&z);\n        add(x,y,z);add(y,x,z);\n        for (int j=1;j<=cnt;j++){\n            add(x+(j-1)*n,y+j*n,0);\n            add(y+(j-1)*n,x+j*n,0);\n            add(x+j*n,y+j*n,z);\n            add(y+j*n,x+j*n,z);\n        }\n    }\n    for (int i=1;i<=cnt;i++) add(t+(i-1)*n,t+i*n,0);\n    dijkstra(s);\n    printf(\"%lld\",dis[t+cnt*n]);\n    return 0;\n}\n```\n",
        "postTime": 1571576506,
        "uid": 23170,
        "name": "\u56de\u9752\u7edd\u5f71",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2939 \u3010[USACO09FEB]\u6539\u9020\u8defRevamping Trails\u3011"
    },
    {
        "content": "## \u5206\u5c42\u56fe+\u5806\u4f18\u5316\u7684\u9898\n\n\u5206\u5c42\u56fe\uff0c\u987e\u540d\u601d\u4e49\u5c31\u662f\u5c06\u56fe\u5206\u5c42\uff0c\u6bcf\u4e00\u5c42\u4ee3\u8868\u4e00\u4e2a\u4e0d\u540c\u72b6\u6001\u3002\u5982\u672c\u9898\u4e2d\u7684\u4e00\u5c42\u5c31\u4ee3\u8868\u4fee\u5efa\u4e00\u6b21\u9ad8\u901f\u516c\u8def\uff08\u6216\u8bf4\u5c06\u4e00\u6761\u8def\u514d\u8d39\uff09\uff0c\u8fde\u63a5\u6bcf\u4e00\u5c42\u56fe\u7684\u5219\u662f\u8fb9\u6743\u4e3a0\u7684\u5355\u5411\u8fb9\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u5c06\u4fee\u5efa\u9ad8\u901f\u516c\u8def\u7684\u673a\u4f1a\u4f7f\u7528\u5b8c\uff0c\u6240\u4ee5\u6700\u7ec8\u7b54\u6848\u5e94\u4ece\u6bcf\u4e00\u5c42\u7684\u8282\u70b9N\u4e2d\u627e\u3002\n\n\u4e3a\u4e86\u4e0dT\u6389\uff0c\u6211\u4eec\u8981\u7528\u5806\u4f18\u5316\u964d\u4f4e\u590d\u6742\u5ea6\u3002\n\n\u56e0\u6b64\u601d\u8def\u5982\u4e0b\uff1a\n\n- \u6839\u636e\u9898\u610f\u5efa\u7acbk+1\u5c42\uff0c\u6bcf\u5c42n\u4e2a\u8282\u70b9\u7684\u5206\u5c42\u56fe\uff1b\n- \u5806\u4f18\u5316DIJ\u904d\u5386\uff1b\n- \u5728\u6bcf\u4e00\u5c42\u7684\u8282\u70b9n\u4e2d\u53d6\u6700\u5c0f\u503c\u4f5c\u4e3a\u7b54\u6848\u8f93\u51fa\u3002\n\ncode\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,k,s,t,w[100100],fst[100100],nex[100100],v[100100],dis[32][10100],a,b,c,tot,vis[32][10100];\nstruct item\n{\n    int lev,d,x;\n    bool operator< (const item &x) const\n    {\n        return d>x.d;\n    }\n};\npriority_queue<item>q;\nvoid add(int a,int b,int c)\n{\n    nex[++tot]=fst[a];\n    w[tot]=c;\n    v[tot]=b;\n    fst[a]=tot;\n    return ;\n}\nvoid dij()\n{\n    dis[0][s]=0;\n    q.push((item){0,0,s});\n    while(!q.empty())\n    {\n        int x=q.top().x,d=q.top().d,lev=q.top().lev;\n        //cout<<lev<<\" \"<<x<<\" \"<<d<<\" \"<<vis[lev][x]<<endl;\n        //system(\"pause\");\n        q.pop();\n        if(vis[lev][x])\n        continue;\n        vis[lev][x]=1;\n        for(int i=fst[x];i!=-1;i=nex[i])\n        {\n            if(!vis[lev][v[i]]&&d+w[i]<dis[lev][v[i]])\n            {\n                dis[lev][v[i]]=d+w[i];\n                q.push((item){lev,d+w[i],v[i]});\n            }\n            if(!vis[lev+1][v[i]]&&d<dis[lev+1][v[i]]&&lev+1<=k)\n            {\n                dis[lev+1][v[i]]=d;\n                q.push((item){lev+1,d,v[i]});\n            }\n        }\n    }\n    return ;\n}\nint main()\n{\n    memset(fst,-1,sizeof(fst));\n    memset(dis,0x7f/3,sizeof(dis));\n    cin>>n>>m>>k;\n    s=1;t=n;\n    for(int i=1;i<=m;i++)\n    {\n    \tscanf(\"%d%d%d\",&a,&b,&c);\n    \tadd(a,b,c);\n    \tadd(b,a,c);\n    }\n    dij();\n    int ans=1e8;\n    for(int i=0;i<=k;i++)\n    {\n    \tans=min(ans,dis[i][t]);\n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1555499892,
        "uid": 116368,
        "name": "BinDir0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2939 \u3010[USACO09FEB]\u6539\u9020\u8defRevamping Trails\u3011"
    },
    {
        "content": "\u5206\u5c42\u56fe\uff0c\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u5206\u5c42\u56fe\u53ef\u4ee5\u770b\u4e00\u4e0b[\u8fd9\u9898](https://www.luogu.org/problemnew/show/P1073)\u548c\u6211\u7684[\u8fd9\u7bc7\u9898\u89e3](https://www.luogu.org/blog/73142/solution-p1073)\n\n\u7b80\u5355\u7684\u8bf4\uff0c\u5c31\u662f\u5c06\u539f\u56fe\u590d\u5236k\u5206\uff0c\u7b2ck\u4e2a\u56fe\u8868\u793a\u7ecf\u8fc7k\u6b21\u8f6c\u79fb\u540e\u7684\u72b6\u6001\uff08\u6b64\u9898\u4e2d\u8f6c\u79fb\u5373\u4e3a\u8d70\u8fc7\u7684\u9ad8\u901f\u516c\u8def\u6761\u6570\uff09\uff0c\u518d\u628a\u8fd9\u4e9b\u56fe\u7528\u67d0\u4e9b\u65b9\u6cd5\u8fde\u63a5\uff0c\u6700\u540e\u770b\u6210\u6574\u4f53\u8dd1\u4e00\u4e9b\u7b97\u6cd5\n\n\u56de\u5230\u6b64\u9898\uff1a  \n1.\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9$(u,v,w)$\uff0c\u5728k+1\u4e2a\u56fe\u4e0a\u5206\u522b\u5b58\u50a8\uff08\u5373\u8d70\u5c0f\u8def\uff09\uff0c\u4e4b\u540e\u8de8\u4e00\u5c42\u56fe\u5b58\u50a8\uff08\u8fd9\u6761\u8fb9\u8fb9\u6743\u4e3a0\uff0c\u5373\u8d70\u9ad8\u901f\u516c\u8def\uff09  \n2.\u4ee51\u4e3a\u8d77\u70b9\u8dd1\u6700\u77ed\u8def\uff0c\u8f93\u51fa\u5230\u7ec8\u70b9(n*(k+1))\u7684\u6700\u77ed\u8ddd\u79bb\n\n\u65f6\u95f4\uff1a$O(mklogn)$,\u7a7a\u95f4$O(mk)$\uff0c\u4e0d\u662f\u975e\u5e38\u4f18\n\n**\u6ce8\uff1a\u65e0\u5411\u56fe\uff01\u5b58\u4e24\u904d\uff01**\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\ntypedef int ll;//\u672c\u6765\u60f3\u7528long long\uff0c\u4f46\u6015\u7206\u7a7a\u95f4\n#define maxn 404020//\u6211\u7528\u90bb\u63a5\u8868\uff0c\u6240\u4ee5\u8981\u591a\u5f00\u51e0\u500d\u7a7a\u95f4\n#define maxm 5050040\nll n,m,k;\nstruct Edge\n{\n\tll v,w,nxt;\n}e[maxm];\nll cnt,last[maxn];\nvoid adde(ll u,ll v,ll w)\n{\n\tfor(ll i=0;i<=k;++i)\n\t{\n\t\t++cnt;//\u6bcf\u4e2a\u56fe\u4e2d\u5b58\u8fb9\n\t\te[cnt].v=v+i*n;\n\t\te[cnt].w=w;\n\t\te[cnt].nxt=last[u+i*n];\n\t\tlast[u+i*n]=cnt;\n\t\tif(i==0)continue;\n\t\t++cnt;//\u8de8\u56fe\u5b58\u8fb9\n\t\te[cnt].v=v+i*n;\n\t\te[cnt].w=0;\n\t\te[cnt].nxt=last[u+(i-1)*n];\n\t\tlast[u+(i-1)*n]=cnt;\n\t}\n}\n\nstruct node//\u63a5\u4e0b\u6765\u662fDij\u6a21\u677f\u4e86\n{\n\tll u,dis;\n\tbool operator <(const node& v)const\n\t{\n\t\treturn dis>v.dis;\n\t}\n};\nstd::priority_queue<node>q;\nll dis[maxn];\nvoid Dij()\n{\n\tfor(ll i=1;i<=n*(k+1);++i)dis[i]=1<<30;\n\tdis[1]=0;\n\tq.push(node{1,0});\n\tll u,v,w;\n\tnode t;\n\twhile(!q.empty())\n\t{\n\t\tt=q.top();q.pop();\n\t\tu=t.u;\n\t\tif(dis[u]<t.dis)continue;\n\t\tfor(ll i=last[u];i;i=e[i].nxt)\n\t\t{\n\t\t\tv=e[i].v,w=e[i].w;\n\t\t\tif(dis[v]>dis[u]+w)\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+w;\n\t\t\t\tq.push(node{v,dis[v]});\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tll u,v,w;\n\tfor(ll i=1;i<=m;++i)\n\t{\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tadde(u,v,w);\n\t\tadde(v,u,w);//\u5b58\u4e24\u904d\n\t}\n\tDij();\n\tprintf(\"%d\",dis[n*(k+1)]);//\u590d\u5236k\u6b21\uff0c\u6240\u4ee5\u6709k+1\u4e2a\u56fe\n\treturn 0;\n}\n```",
        "postTime": 1548861985,
        "uid": 73142,
        "name": "\u4e07\u5f18",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2939 \u3010[USACO09FEB]\u6539\u9020\u8defRevamping Trails\u3011"
    },
    {
        "content": "\u770b\u4e86\u770b\u9898\u89e3\uff0c\u5168\u662f\u5206\u5c42\u56fe ~~dp\u7684\u53c8\u6ca1\u6709\u8bb2\u5230DP\u7684\u6838\u5fc3\u72b6\u6001&\u8f6c\u79fb~~\n\n\u6211\u5374\u611f\u89c9\u8fd9\u9053\u9898\u7684\u89c6\u4e3a\u5206\u5c42\u56fe\u4e0d\u591f\u5408\u7406\uff08P3319\u7684\u5206\u5c42\u56fe\u505a\u6cd5\u66f4\u52a0\u5178\u578b\uff09\uff0c\u4e0d\u5982\u6362\u4e00\u79cd\u7406\u89e3\u65b9\u6cd5\n\n\u8bbe\u6709d\u6570\u7ec4\uff0c\u7528d[z][x]\u8868\u793a\u5728\u5df2\u7ecf\u514d\u8d39\u4e86z\u6761\u8fb9\u65f6\uff0c\u5230x\u8282\u70b9\u7684\u6700\u5c0f\u65f6\u95f4\n\n### \u8fd9\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u628a<z,x>\u4e8c\u5143\u7ec4\u89c6\u4e3a\u4e00\u4e2a\u72b6\u6001\uff0c\u5c06\n```\nif(z!=k&&!v[z+1][y]&&d[z+1][y]>d[z][x]) \n\td[z+1][y]=d[z][x];\nif(!v[z][y]&&d[z][y]>d[z][x]+f[i].val) \n\td[z][y]=d[z][x]+f[i].val;\n```\n### \u89c6\u4e3a\u72b6\u6001\u8f6c\u79fb\n\n\u73b0\u5728\uff0c\u5bf9DP\u6bd4\u8f83\u719f\u6089\u7684\u540c\u5b66\u53ef\u80fd\u5df2\u7ecf\u60f3\u5230\u660e\u767d\u4e86\n\n\u5bf9DP\u4e0d\u592a\u719f\u7684\u8bdd\uff0c\u53ef\u4ee5\u5148\u601d\u8003\u56fe\u662f\u5355\u94fe\u65f6 \u5176\u4f5c\u4e3a\u80cc\u5305\u95ee\u9898\uff08\u76f4\u63a5for\u4e00\u904d\uff0c\u8003\u8651\u514d\u4e0d\u514d\u8d39\u6389\u6bcf\u4e00\u6761\u8fb9\uff09\n\n\u518d\u601d\u8003\u56fe\u4f5c\u4e3a\u6811\u65f6\uff0c\u5176\u4f5c\u4e3a\u6811\u5f62DP\uff08\u7528dfs\u4ee3\u66fffor\uff09\n\n\u6700\u540e\u8003\u8651\u5230\u65e0\u5411\u56fe\u65f6\uff0c\u7528dijkstra\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\n\n\n```\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int N=10005,M=50005;\nint n,m,t,k,h[N],x,y,z,v[25][N],d[25][N],flag;\nstruct node{int num,dis,use;}p;\nstruct edge{int ver,val,next;}f[M*2];\npriority_queue<node> q;\npriority_queue<int> ans;\nbool operator<(node a,node b){return a.dis>b.dis;}\nvoid add(int x,int y,int z){f[++t].ver=y,f[t].val=z,f[t].next=h[x],h[x]=t;}\nvoid dijkstra(int x){\n\tmemset(d,0x3f,sizeof(d));d[0][x]=0;\n\tp.num=x;p.dis=d[0][x],p.use=0;q.push(p);\n\twhile(q.size()){\n\t\tx=q.top().num;int z=q.top().use;q.pop();\n\t\tif(v[z][x]) continue;\n\t\tv[z][x]=1;\n\t\tfor(int i=h[x];i;i=f[i].next){\n\t\t\tint y=f[i].ver;\n\t\t\tif(!v[z][y]&&d[z][y]>d[z][x]+f[i].val){\n\t\t\t\td[z][y]=d[z][x]+f[i].val;\n\t\t\t\tp.num=y,p.dis=d[z][y],p.use=z,q.push(p);\t\n\t\t\t}\n\t\t\tif(z!=k&&!v[z+1][y]&&d[z+1][y]>d[z][x]){\n\t\t\t\td[z+1][y]=d[z][x];\n\t\t\t\tp.num=y,p.dis=d[z+1][y],p.use=z+1,q.push(p);\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1;i<=m;++i){\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd(x,y,z),add(y,x,z);\n\t}\n\tdijkstra(1);\n\tprintf(\"%d\",d[k][n]);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1543931287,
        "uid": 86657,
        "name": "TheOldDriver",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2939 \u3010[USACO09FEB]\u6539\u9020\u8defRevamping Trails\u3011"
    },
    {
        "content": "$$\\color{cornflowerblue}{\\mathcal{Treaker}}$$\n# \u5206\u5c42\u56fe\u6700\u77ed\u8def\n\n\u8fd9\u4e0d\u5c31\u662f\u4e2a\u5206\u5c42\u56fe\u88f8\u9898\u561b\u3002\u3002\n\n$k$\u5f88\u5c0f\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u5206\u7740\u5c42\u8fde\u8fb9\u6743\u4e3a$0$\u7684\u8fb9\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u8dd1$dij$\uff0c$spfa$\u561b\u4e0d\u77e5\u9053\u4f1a\u600e\u4e48\u6837\uff0c\u53cd\u6b63\u5173\u4e8e$spfa$\uff0c\u4ed6\u5df2\u7ecf\u6b7b\u4e86\u3002\n\n\u63a8\u8350\u4e00\u9053\u6bd4\u8f83\u7c7b\u4f3c\u7684\u9898[P4568 [JLOI2011]\u98de\u884c\u8def\u7ebf](https://www.luogu.org/problem/P4568)\n\n\u4e24\u9053\u9898\u57fa\u672c\u76f8\u540c\u3002\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#define pa pair<int,int>\n#define mp make_pair\nusing namespace std;\nconst int N = 210005;\ninline int read()\n{\n    int x = 0 , f = 1;  char ch = getchar();\n    while(ch < '0' || ch > '9') {if(ch == '-')  f = -1; ch = getchar();}\n    while(ch >= '0' && ch <= '9') {x = (x << 3) + (x << 1) + (ch ^ 48); ch = getchar();}\n    return x * f;\n}\nint n , m , K , cnt;\nint dis[N] , head[N];\nbool vis[N];\nstruct Edge\n{\n\tint to , dis , nxt;\n}e[50002 * 2 * 21 * 2];\ninline void add(int u,int v,int w) {e[++cnt] = (Edge){v,w,head[u]}; head[u] = cnt;}\ninline void build(int u,int v,int w)\n{\n\tfor(int i = 0;i <= K;i ++)\n\t{\n\t\tadd(n * i + u,n * i + v,w); add(n * i + v,n * i + u,w);\n\t\tif(i != K) add(n * i + u,n * (i + 1) + v,0) , add(n * i + v,n * (i + 1) + u,0);\n\t}\n}\ninline void dij()\n{\n\tpriority_queue<pa,vector<pa>,greater<pa> > q; memset(dis,0x7f,sizeof dis); dis[1] = 0;\n\tq.push(mp(dis[1],1));\n\twhile(q.size())\n\t{\n\t\tint now = q.top().second; q.pop();\n\t\tif(vis[now]) continue;\n\t\tvis[now] = 1;\n\t\tfor(int i = head[now];i;i = e[i].nxt)\n\t\t{\n\t\t\tint to = e[i].to;\n\t\t\tif(dis[to] > dis[now] + e[i].dis)\n\t\t\t{\n\t\t\t\tdis[to] = dis[now] + e[i].dis;\n\t\t\t\tq.push(mp(dis[to],to));\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tn = read(); m = read(); K = read();\n\tfor(int i = 1 , u , v , w;i <= m;i ++)\n\t{\n\t\tu = read(); v = read(); w = read();\n\t\tbuild(u,v,w);\n\t}\n\tdij();\n\tprintf(\"%d\\n\",dis[n*(K + 1)]);\n\treturn 0;\n}\n```\n",
        "postTime": 1570229806,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2939 \u3010[USACO09FEB]\u6539\u9020\u8defRevamping Trails\u3011"
    },
    {
        "content": "~~\u849f\u84bb\u6839\u672c\u4e0d\u77e5\u9053\u5206\u5c42\u56fe\u662f\u4ec0\u4e48qwq~~\n\n\u4e00\u5f00\u59cb\u770b\u9898\uff0c\u611f\u89c9\u6709\u70b9\u50cfA journey to Greece\uff0c\u60f3\u5230\u4e86\u4e00\u4e2a\u72b6\u6001\uff0cdp[i][k]\u8868\u793a\u5230\u7b2ci\u4e2a\u7267\u573a\u7528\u4e86k\u6b64\u4fee\u6539\u7684\u6700\u77ed\u8def\u957f\u5ea6\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\n```\ndp[i][k]=min(dp[j][k]+dis[i][j],dp[j][k-1]);\n\n```\n\n\u4f46\u56e0\u4e3a\u6b64\u9898\u662f\u4e2a\u65e0\u5411\u56fe\uff08\u597d\u50cf\u6ca1\u6709\u73af\u5427\uff09\uff0c\u60f3\u7406\u4e2a\u62d3\u6251\u5e8f\u4e0adp\uff0c~~\uff08\u53ef\u80fd\u662f\u6211\u592a\u5f31\u4e86\uff09~~ \u7528dp\u641e\u4e0d\u8d77\u6765\n\n\u7136\u540e\u60f3\u5230\u6700\u77ed\u8def\u5f84\u7684dijkstra\u7b97\u6cd5\uff0c\u611f\u89c9\u672c\u8d28\u4e0a\u548c\u8fd9\u4e2a\u5dee\u4e0d\u591a\uff0c\u6bcf\u6b21\u677e\u5f1b\u8282\u70b9\u7684\u65f6\u5019\u7c7b\u4f3c\u4e0a\u9762\u7684dp\u65b9\u7a0b\u8f6c\u79fb\u6700\u77ed\u8def\uff0c\u5c31AC\u4e86\n\n~~\u6240\u4ee5\u8fd9\u9898\u662f\u4e2adp\u601d\u60f3\u7684dijkstra~~\n\nPS\uff1a\u6709\u540c\u5b66\u8bf4\u6211yy\u51fa\u4e86\u5206\u5c42\u56fe\uff0c\u6211\u3002\u3002\u3002\u3002\u3002\n\n\u4e0b\u9762\u662fcode:\n\n```\n#include<map>\n#include<cmath>\n#include<stack>\n#include<queue>\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\ntemplate<class Read>void in(Read &x){\n    x=0;\n    int f=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){\n        f|=(ch=='-');\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9'){\n        x=(x<<1)+(x<<3)+(ch^48);\n        ch=getchar();\n    }\n    x=f?-x:x;\n    return;\n}\nstruct Node{//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\n    int to;\n    int next;\n    int sum;\n}a[100005];\nstruct Queue{//dijkstra\u4f18\u5148\u961f\u5217\n    int x;//\u7267\u573a\u7f16\u53f7\n    int k;//\u6539\u7684\u8def\u5f84\u4e2a\u6570\n    ll c;//\u76ee\u524d\u6700\u77ed\u8def\n    bool operator < (Queue node) const{\n        return c>node.c;\n    }\n}l,r;\npriority_queue<Queue>q;\nint n,m,k,top,head[10005];\nll f[10005][25];\nvoid add(int x,int y,int c){\n    a[++top].next=head[x];\n    a[top].to=y;\n    a[top].sum=c;\n    head[x]=top;\n}\nint main(){\n    in(n);in(m);in(k);\n    for(int i=1;i<=n;i++){//\u521d\u59cb\u5316\n        for(int j=0;j<=k;j++){\n            f[i][j]=1ll<<62;\n        }\n    }\n    for(int i=1;i<=m;i++){\n        int x,y,c;\n        in(x);in(y);in(c);\n        add(x,y,c);\n        add(y,x,c);\n    }\n    f[1][0]=0;\n    l.x=1;\n    l.c=0;\n    l.k=0;\n    q.push(l);\n    while(!q.empty()){//\u5f00\u59cbdijkstra\n        l=q.top();\n        q.pop();\n        if(f[l.x][l.k]!=l.c)continue;\n        for(int i=head[l.x];i;i=a[i].next){\n            int y=a[i].to;\n            if(f[y][l.k]>f[l.x][l.k]+a[i].sum){//\u8fd9\u6761\u8def\u4e0d\u6539\n                f[y][l.k]=f[l.x][l.k]+a[i].sum;\n                r.x=y;\n                r.k=l.k;\n                r.c=f[y][l.k];\n                q.push(r);\n            }\n            if(l.k==k)continue;//\u6539\u6ee1k\u6761\u5c31\u4e0d\u80fd\u518d\u6539\u4e86\n            if(f[y][l.k+1]>f[l.x][l.k]){//\u8fd9\u6761\u8def\u6539\n                f[y][l.k+1]=f[l.x][l.k];\n                r.x=y;\n                r.k=l.k+1;\n                r.c=f[y][l.k+1];\n                q.push(r);\n            }\n        }\n    }\n    ll ans=1ll<<62;\n    for(int i=0;i<=k;i++)ans=min(ans,f[n][i]);//\u6c42\u6700\u77ed\u8ddd\u79bb\n    printf(\"%lld\\n\",ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1566916446,
        "uid": 119120,
        "name": "Waddles",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2939 \u3010[USACO09FEB]\u6539\u9020\u8defRevamping Trails\u3011"
    },
    {
        "content": "\u5206\u5c42\u56fe\u662f\u4ec0\u4e48\uff1f\u6211\u8fd9\u4e2a~~\u8fdeNOIP2018D2T3\u66b4\u529b\u90fd\u4f1a\u7206\u96f6\uff0c\u7ed3\u679c\u53ea\u6709360\u7684~~\u849f\u84bb\u5b8c\u5168\u4e0d\u77e5\u9053\u3002\n\n\u4e0b\u9762\u8bb2\u8bb2DP\uff1a\n\n\u7528$f[i][j]$\u8868\u793a\u4ece$1$\u53f7\u70b9\u51fa\u53d1\uff0c\u6070\u597d\u7ecf\u8fc7$j$\u6761\u9ad8\u901f\u516c\u8def\uff0c\u5230\u8fbe$i$\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u3002\u73b0\u5728\u8981\u6c42\u7684\u5c31\u662f$f[n][k]$\u3002\n\n\u8f6c\u79fb\uff1a\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1.\u5148\u7ecf\u8fc7$j-1$\u6761\u9ad8\u901f\u516c\u8def\uff0c\u5230\u8fbe$i$\u65c1\u8fb9\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u7528\u4e00\u6b21\u9ad8\u901f\u516c\u8def\u3002\n\n2.\u5148\u7ecf\u8fc7$j$\u6761\u9ad8\u901f\u516c\u8def\uff0c\u5230\u8fbe$i$\u65c1\u8fb9\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u76f4\u63a5\u8d70\u5230$i$\u3002\n\n$f[i][j]=\\displaystyle\\min_{(u,i)\\subseteq E}(\\min(f[u][j-1],f[u][j]+w[u][i]))$\n\n\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u6837\u4f8b\u4e2d$f[2][2]$\uff08\u5148\u4e0d\u7ba1\u662f\u5426\u6709\u7528)\u662f\u957f\u4ec0\u4e48\u6837\u5b50\u7684\uff1f\n\n\u7b49\u5f85\u63ed\u6653\u7b54\u6848\uff1a\n\n\u6ca1\u6709\u610f\u4e49\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u4ece$1$\u5230$2$\u53ea\u9700\u8981\u4e00\u6761\u9ad8\u901f\u516c\u8def\u5c31\u53ef\u4ee5\u77ac\u65f6\u5230\u8fbe\uff0c\u5f3a\u5236\u7ecf\u8fc7\u6070\u597d\u4e24\u6761\uff0c\u5f53\u7136\u6ca1\u6709\u610f\u4e49\uff08\u5c31\u5f53\u6ca1\u6709\u5b83\uff09\u3002\n\n\u5b9a\u4e49$len[i]$\u4e3a\u4ece$1$\u5230$i$\u9700\u7ecf\u8fc7\u7684\u81f3\u5c11\u8fb9\u6570\uff08\u4e0e\u6743\u503c\u65e0\u5173\uff09\uff0c\u5f53$k>len[i]$\u65f6\uff0c$f[i][k]$\u5f53\u7136\u6ca1\u6709\u610f\u4e49\u3002$len[i]$\u53ef\u4ee5\u7528\u4e00\u6b21BFS\u6c42\u51fa\uff0c\u7136\u540e\u5c31\u6709\u4e0b\u9762\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nvector<pair<int, int> > edge[10001];\nint len[10001], dis[10001][21];\nbool visit[10001];\nvoid bfs() {\n\tmemset(len, 0x3f, sizeof(len));\n\tmemset(visit, 0, sizeof(visit));\n\tlen[1] = 0;\n\tqueue<int> q;\n\tq.push(1);\n\twhile (!q.empty()) {\n\t\tint u = q.front();\n\t\tq.pop();\n\t\tvisit[u] = 1;\n\t\tfor (int i = 0; i < edge[u].size(); i++) {\n\t\t\tint v = edge[u][i].first;\n\t\t\tif (len[u] + 1 < len[v]) {\n\t\t\t\tlen[v] = len[u] + 1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n}\nint main() {\n\tint m, k;\n\tcin >> n >> m >> k;\n\tfor (int i = 1; i <= m; i++) {\n\t\tint p1, p2, t;\n\t\tcin >> p1 >> p2 >> t;\n\t\tedge[p1].push_back(make_pair(p2, t));\n\t\tedge[p2].push_back(make_pair(p1, t));\n\t}\n\tbfs();\n\tif (len[n] <= k) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}\n\tmemset(dis, 0x3f, sizeof(dis));\n\tdis[0][0] = 0;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 0; j < edge[i].size(); j++)\n\t\t\tdis[i][0] = min(dis[i][0], dis[edge[i][j].first][0] + edge[i][j].second); \n\tfor (int l = 1; l <= k; l++)\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tfor (int j = 0; j < edge[i].size(); j++)\n\t\t\t\tdis[i][l] = min(dis[i][l], min(dis[edge[i][j].first][l-1], dis[edge[i][j].first][l] + edge[i][j].second)); \n\tcout << dis[n][k] << endl;\n} \n```\n\n\u7136\u540e\uff0c\u628a\u8fd9\u6bb5\u4ee3\u7801\u4ea4\u4e0a\u53bb\uff0c\u4f60\u5c31\u62ff\u5230\u4e86[9\u5206\u7684\u597d\u6210\u7ee9](https://www.luogu.org/recordnew/show/14319443)\u3002\n\n\u4e0d\u5bf9\u5440\uff0c\u8f6c\u79fb\u6ca1\u9519\u5440\uff0c\u4e5f\u6ca1\u6253\u9519\u5440\uff1f\n\n\u90a3\u662f~~\u4f60\u6ca1\u5f00long long~~\u8f6c\u79fb\u6709\u540e\u6548\u6027\u3002\n\n\u6240\u4ee5\u767d\u8bb2\u4e86\uff1f\n\n\u5f53\u7136\u4e0d\u4f1a\u3002\u5148\u5bf9\u6bcf\u4e2a\u70b9\u5904\u7406\u51fa\u8f6c\u79fb\u7684\u7b2c\u4e00\u79cd\u60c5\u51b5\u3002\u7136\u540e\u8003\u8651$len[i]=k$\u7684\u90e8\u5206\uff0c\u6beb\u65e0\u7591\u95ee\uff0c$f[i][k]$\u90fd\u7b49\u4e8e$0$\u3002\u8fd9\u4e9b\u70b9\u5f53\u7136\u90fd\u80fd\u8f6c\u79fb\u3002\u8f6c\u79fb\u5230\u7684\u70b9\u4e2d\uff0c\u6700\u5c0f\u7684\u5f53\u7136\u4e5f\u662f\u5bf9\u7684\uff08\u8fd8\u80fd\u53d8\u5f97\u66f4\u5c0f\u5417\uff09\uff0c\u7136\u540e\u7528\u8fd9\u4e2a\u70b9\u8f6c\u79fb\uff0c\u518d\u53d6\u4e0b\u4e00\u6b21\u6700\u5c0f\u7684\uff0c\u7136\u540e\u4f1a\u53d1\u73b0\u8fd9\u5c31\u662fDijkstra\u3002$n$\u904dDijkstra\u5c31\u80fd\u89e3\u51b3\u95ee\u9898\u3002\n\n\u5751\u70b9\uff1a\u6709\u4e9b\u70b9\u7684\u6700\u4f18\u89e3\u5728\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u5728\u9996\u6b21\u8fdb\u5165\u65f6\u522b\u5fd8\u4e86\u52a0\u5165\u4f18\u5148\u961f\u5217\u3002\n\n\u6b63\u786e\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nvector<pair<int, int> > edge[10001];\nint len[10001], dis[10001][21];\nbool visit[10001];\nvoid bfs() {\n    memset(len, 0x3f, sizeof(len));\n    memset(visit, 0, sizeof(visit));\n    len[1] = 0;\n    queue<int> q;\n    q.push(1);\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        visit[u] = 1;\n        for (int i = 0; i < edge[u].size(); i++) {\n            int v = edge[u][i].first;\n            if (len[u] + 1 < len[v]) {\n                len[v] = len[u] + 1;\n                q.push(v);\n            }\n        }\n    }\n}\nvoid dijkstra(int k) {\n    memset(visit, 0, sizeof(visit));\n    priority_queue<pair<int, int> > q;\n    for (int i = 1; i <= n; i++)\n        if (len[i] == k)\n            q.push(make_pair(0, i));\n    while (!q.empty()) {\n        int u = q.top().second; q.pop();\n        if (visit[u]) continue;\n        visit[u] = 1;\n        for (int i = 0; i < edge[u].size(); i++) {\n            int v = edge[u][i].first;\n            if (edge[u][i].second + dis[u][k] < dis[v][k]) {\n                dis[v][k] = edge[u][i].second + dis[u][k];\n                q.push(make_pair(-dis[v][k], v));\n            }\n            else if (!visit[v]) q.push(make_pair(-dis[v][k], v));\n        }\n    }\n}\nint main() {\n    int m, k;\n    cin >> n >> m >> k;\n    for (int i = 1; i <= m; i++) {\n        int p1, p2, t;\n        cin >> p1 >> p2 >> t;\n        edge[p1].push_back(make_pair(p2, t));\n        edge[p2].push_back(make_pair(p1, t));\n    }\n    bfs();\n    if (len[n] <= k) {\n        cout << 0 << endl;\n        return 0;\n    }\n    memset(dis, 0x3f, sizeof(dis));\n    dis[1][0] = 0;\n    dijkstra(0);\n    for (int i = 1; i <= k; i++) {\n        for (int u = 1; u <= n; u++) {\n            if (len[u] <= i) {\n                dis[u][i] = 0;\n                continue;\n            }\n            for (int j = 0; j < edge[u].size(); j++) dis[u][i] = min(dis[u][i], dis[edge[u][j].first][i-1]);\n        }\n        dijkstra(i);\n    }\n    cout << dis[n][k] << endl;\n} \n```",
        "postTime": 1543674584,
        "uid": 61068,
        "name": "01190220csl",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2939 \u3010[USACO09FEB]\u6539\u9020\u8defRevamping Trails\u3011"
    },
    {
        "content": "\u8d34\u4e00\u4efd\u4f7f\u7528STL\u4f18\u5148\u961f\u5217\u4ee5\u53caDijkstra\u8dd1\u62c6\u70b9\u5206\u5c42\u56fe\u7684\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\n#include <cstdlib>\n#include <cstring>\n#include <queue>\n#include <functional>\nusing namespace std;\n#define pb push_back\n#define fi first\n#define sc second\n#define ll long long\n#define elif else if\ntypedef pair<int,int> P;\n#define FR(i,o,n) for(register int i=(o);i<(n);++i)\n#define FE(i,o,n) for(register int i=(o);i<=(n);++i)\n#define DR(i,o,n) for(register int i=(o);i>(n);--i)\n#define DE(i,o,n) for(register int i=(o);i>=(n);--i)\n#define RG register\ninline int GetInt()\n{\n\tchar ch=getchar();int f=1,ret=0;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){ret=ret*10+ch-'0';ch=getchar();}\n\treturn f*ret;\n}\n#define In GetInt()\nconst int MAXN = (10000+10)*(20+1), INF = 0x3f3f3f3f;\nint n,m,x,dis[MAXN];bool vis[MAXN];\nvector<P> g[MAXN];\nvoid Dijkstra(vector<P> *G,int *DIS,int S)\n{\n\tpriority_queue<P,vector<P>,greater<P> > q;\n\tmemset(dis,0x3f,sizeof(dis));\n\tdis[S]=0;q.push(P(0,S));\n\twhile(!q.empty())\n\t{\n\t\tP p=q.top();q.pop();\n\t\tint u=p.sc,siz=G[u].size();\n\t\tif(vis[u])continue;\n\t\tvis[u]=1;\n\t\tFR(i,0,siz)\n\t\t{\n\t\t\tP e=G[u][i];\n\t\t\tif(!vis[e.fi]&&DIS[u]+e.sc<DIS[e.fi])\n\t\t\tq.push(P(DIS[e.fi]=DIS[u]+e.sc,e.fi));\n\t\t}\n\t}\n}\nint main()\n{\n\tint n=In,m=In,k=In;\n\tFE(i,1,m)\n\t{\n\t\tint u=In,v=In,w=In;\n\t\tg[u].pb(P(v,w)),g[v].pb(P(u,w));\n\t\tFE(j,1,k)\n\t\t{\n\t\t\tg[j*n+u].pb(P(j*n+v,w));\n\t\t\tg[j*n+v].pb(P(j*n+u,w));\n\t\t\tg[(j-1)*n+u].pb(P(j*n+v,0));\n\t\t\tg[(j-1)*n+v].pb(P(j*n+u,0));\n\t\t}\n\t}\n\tDijkstra(g,dis,1);\n\tint ans=dis[n];\n\tFE(i,1,k)ans=min(ans,dis[(i+1)*n]);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1540988374,
        "uid": 18861,
        "name": "joseph_cheung",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2939 \u3010[USACO09FEB]\u6539\u9020\u8defRevamping Trails\u3011"
    },
    {
        "content": "## \u9898\u89e3P2939[USACO09FEB]\u6539\u9020\u8defRevamping Trai\n\n[\u914d\u5408Blog\u98df\u7528\u66f4\u4f73](https://www.luogu.org/blog/149815/solution-p2939)\n\n[\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.org/problem/P2939)\n\n**\u5206\u5c42\u56fe\u6a21\u677f\u9898**\n\n\u9898\u610f\u7b80\u5316\uff1a\u6709n\u4e2a\u70b9\uff0cm\u6761\u8fb9\uff0c\u6c42s\u5230t\u7684\u6700\u77ed\u8def\n\n\n\u539f\u672c\u662f\u8fd9\u6837\u7684\uff08\u56fe\u5f88\u4e11\uff0c\u8bf7\u89c1\u8c05\uff09\n\n![](https://cdn.luogu.com.cn/upload/pic/72236.png)\n\n\u4f46\u9898\u76ee\u4e2d\u591a\u4e86\u4e00\u4e2a\u6761\u4ef6\uff1a\u6211\u4eec\u81f3\u591a\u53ef\u4ee5\u8ba9k\u6761\u8fb9\u7684\u6743\u503c\u53d8\u4e3a0\uff08\u4e0d\u4e00\u5b9a\u8981\u6709k\u6761\u8fb9\u6743\u503c\u53d8\u62100\uff09\n\n\u8fd9\u4e0d\u5c31\u662f\u5206\u5c42\u56fe\u88f8\u9898\u5417\uff0c\u5efak\u5c42\u56fe\uff08\u56e0\u4e3ak\u226410\uff0c\u6240\u4ee5\u5e76\u4e0d\u4f1a\u5360\u7528\u592a\u5927\u7684\u7a7a\u95f4\uff09\uff0c\u4e3e\u4e2a\u6817\u5b50\uff1ax\u548cy\u4e4b\u95f4\u6709\u4e00\u6761\u6743\u503c\u4e3az\u7684\u8fb9\uff0c\u5219\u7b2c0\u5230k\u5c42\u7684x,y\u4e4b\u95f4\u90fd\u8981\u8fde\u6743\u503c\u4e3az\u7684\u8fb9,\u7b2c0\u5230k-1\u5c42\u7684x\u6216y\u8fde\u5230\u7b2ci+1\u5c42\u7684y\u6216x\u7684\u6743\u503c\u6539\u4e3a0\uff08\u4ee3\u8868\u4e00\u6b21\u514d\u8d39\u4e58\u5750\u98de\u673a\uff09\n\n\u56fe\u5c31\u53d8\u6210\u4e86\u4e0b\u9762\u8fd9\u4e2a\u6837\u5b50\u2193\n\n![](https://cdn.luogu.com.cn/upload/pic/72243.png)\n\n~~\u4e71\u4e03\u516b\u7cdf\uff0c\u770b\u90fd\u770b\u4e0d\u6e05~~\n\np.s.\u56fe\u4e2d8\u548c9\u7684\u7f16\u53f7\u753b\u53cd\u4e86 ~~\uff0c\u51d1\u5408\u7740\u770b\u5427~~\n\n\u597d\u5427\u7b49\u6709\u65f6\u95f4\u4e86\u6211\u4f1a\u6539\n\n\u6240\u4ee5\u6700\u7ec8\u7b54\u6848\u53ea\u9700\u8981\u8dd1\u4e00\u8fb9Dijkstra\u518d\u627e\u51fadis[i*(n+1)+t]\u7684\u6700\u5c0f\u503c\u5373\u4e3a\u7b54\u6848\n\nCode\n```cpp\n#include<cstdio>\n#include<queue>\n#define ri register int\n#define MAXN 10001\n#define MAXM 50001\n#define INF 2147483647\nusing namespace std;\nint n,m,k,edge_sum;\nint head[MAXM*201],dis[MAXN*201];\nbool vis[MAXN*201];\nstruct Edge{\n\tint next,to,dis;\n}edge[MAXM*201];//\u524d\u5411\u661f\u5b58\u56fe\ninline void addedge(int from,int to,int dis){\n\tedge[++edge_sum].next=head[from];\n\tedge[edge_sum].dis=dis;\n\tedge[edge_sum].to=to;\n\thead[from]=edge_sum;\n}\nstruct Node{\n\tint u,dis;\n\tbool operator <(const Node& rhs) const {\n        return dis>rhs.dis;\n    }\n};\ninline void dijkstra(){//\u5806\u4f18\u5316Dij\n\tpriority_queue<Node> q;//STL\u4f18\u5148\u961f\u5217\uff0c\u7528\u6765\u4f18\u5316Dij\n\tq.push((Node){1,0});\n\twhile(!q.empty()) {\n\t\tint u=q.top().u;\n\t\tq.pop();\n\t\tvis[u]=1;\n\t\tfor(ri i=head[u];i;i=edge[i].next)\n\t\t\tif(!vis[edge[i].to]&&dis[edge[i].to]>dis[u]+edge[i].dis){\n\t\t\t\tdis[edge[i].to]=dis[u]+edge[i].dis;\t\t\n\t\t\t\tq.push((Node){edge[i].to,dis[edge[i].to]});\n\t\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d %d %d\",&n,&m,&k);\n    for(ri i=1;i<=m;i++)\n    {\n    \tint x,y,z;\n        scanf(\"%d%d%d\",&x,&y,&z);\n        for(ri j=0;j<=k;j++) addedge(j*n+x,j*n+y,z),addedge(j*n+y,j*n+x,z);//\u56e0\u4e3a\u662f\u65e0\u5411\u56fe\u6240\u4ee5\u5b58\u4e24\u6b21\n        for(ri j=0;j<k;j++) addedge(j*n+x,(j+1)*n+y,0),addedge(j*n+y,(j+1)*n+x,0);//\u5b58\u7b2ci\u5c42\u7684x(y)\u548c\u7b2ci+1\u5c42\u7684y(x)\u4e4b\u95f4\u7684\u8fb9\n    }\n    for(ri i=1;i<=n*k+n;i++) dis[i]=INF;//\u521d\u59cb\u503c\u8d4b\u4e3aINF\n    dis[1]=0;\n    dijkstra();//Dij\u6c42\u6700\u77ed\u8def\n    int min=INF;\n    for(ri i=0;i<=k;i++) if(min>dis[i*n+n]) min=dis[i*n+n];//\u5bfb\u627e\u6700\u4f18\u89e3\n    printf(\"%d\\n\",min);\n    return 0;\n}\n\n```\n# \u73cd\u7231\u751f\u547d\uff0c\u8fdc\u79bb\u6284\u88ad\n\n# \u8bf4\u53e5\u95f2\u8bdd\uff1a\u7814\u7a76\u5206\u5c42\u56fe\u7684\u6700\u597d\u65b9\u6cd5\u662f\n### A\u4e862939,\u518dA\u4e864568\uff0c\u8fd8\u8981A\u4e864822\n**\u795d\u4f60\u4eec\u6210\u529f (\u6ed1\u7a3d**\n\nAC\u7d2b\u9898+=3;\n\n\u6211\u90fd\u544a\u8bc9\u4f60\u8fd9\u4e48\u591a\u4e86\uff0c\u4e0d\u70b9\u4e2a\u8d5e\uff1f",
        "postTime": 1565856816,
        "uid": 149815,
        "name": "Isprime",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2939 \u3010[USACO09FEB]\u6539\u9020\u8defRevamping Trails\u3011"
    },
    {
        "content": "\u4e2a\u4eba\u535a\u5ba2\uff1a[\u70b9\u4e00\u4e0b\u73a9\u4e00\u5e74](https://www.luogu.org/blog/142373/)\n\n\u8fd9\u9898\u5927\u6982\u770b\u4e86\u770b\u6570\u636e\u8303\u56f4\uff08k\uff09\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u770b\u8d77\u6765\u4e5f\u662f\u4e00\u4e2a\u666e\u901a\u7684\u6700\u77ed\u8def\u95ee\u9898\n\n\u4f46\u662f\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u9898\u76ee\n\n\u6211\u4eec\u6709k\u4e2a\u64cd\u4f5c\n\n\u662f\u53ef\u4ee5\u514d\u8d39\n\n\u90a3\u4e48\u6211\u4eec\u7b2c\u4e00\u79cd\u601d\u8def\u5c31\u662f\u7b80\u5355\u7684\u66b4\u529b\u679a\u4e3e\n\n\u679a\u4e3e\u54ea\u4e00\u79cd\u4e0d\u9009\n\n\u7136\u540e\u6700\u540e\u53d6\u4e00\u4e2a\u6700\u5c0f\u503c\n\n\u8fd9\u79cd\u7b97\u6cd5\u5341\u5206\u66b4\u529b \u53ea\u80fd\u5f97\u5230\u5c40\u90e8\u5206\u6570\n\n\u90a3\u6211\u4eec\u6765\u8003\u8651\u6b63\u89e3\n\n\u6b63\u89e3\u5c31\u662f\u5206\u5c42\u56fe\u7b97\u6cd5\n\n\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u5206\u5c42\u56fe\u4e00\u5171\u6709k\u5c42\n\n\u7b2ci\u5c42\u8868\u793a\u9009\u62e9i\u6b21\u514d\u8d39\u822a\u7ebf\n\n\u90a3\u4e48\u6211\u4eec\u5728\u6267\u884c\u6700\u77ed\u8def\u7684\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u4e00\u6b21\u6289\u62e9\uff08\u7c7b\u4f3c\u4e8e\u52a8\u6001\u89c4\u5212\uff09\n\n\u5230\u5f53\u524d\u8fd9\u4e00\u9636\u6bb5\u65f6\u6211\u4eec\u662f\u5426\u8981\u8fdb\u884c\u4f7f\u7528\u514d\u8d39\u822a\u884c\n\n\u7136\u540e\u6700\u540e\u9009\u62e9\u4e00\u4e2a\u5230\u7ec8\u70b9\u7684\u6700\u4f18\u89e3\u5c31\u53ef\u4ee5\u4e86\n\n\u5efa\u56fe\u8fc7\u7a0b\u5c31\u662f\u5148\u6b63\u5e38\u5efa\u56fe\n\n\u7136\u540e\u5728\u4e0d\u540c\u7684\u5c42\u4e4b\u95f4\u5efa\u7acb\u4e00\u6761\u514d\u8d39\u822a\u7ebf \u4ee3\u8868\u9009\u62e9\u514d\u8d39\u822a\u884c\n\n\u90a3\u4e48\u7684\u8bdd\u6211\u4eec\u5efa\u56fe\u8dd1\u4e00\u4e2a\u6700\u77ed\u8def\n\n\u9274\u4e8eSPFA\u8fd9\u4e2a\u534a\u6b7b\u4e0d\u6d3b\u7684\u7b97\u6cd5 \u6211\u4eec\u8003\u8651\u7528dij+\u5806\u4f18\u5316\n\n\u8fd9\u6837\u7684\u8bdd\u5c31\u53ef\u4ee5\u5341\u5206\u4f18\u79c0\u7684\u901a\u8fc7\u8fd9\u4e2a\n\n\u5e0c\u671b\u5927\u5bb6\u6253\u4ee3\u7801\u7684\u65f6\u5019\u53ef\u4ee5\u7ec6\u5fc3\u70b9\uff01\uff01\uff01\n\n\u8fd9\u6837\u7684\u8bdd\u5c31\u4e0d\u4f1a\u5e73\u767d\u7684\u51fa\u73b0\u4e00\u5806\u8be1\u5f02\u7684\u9519\u8bef\uff08\u6bd4\u5982\u50cf\u6211\u4e00\u6837 \u6ca1\u8f93\u5165m,k\u7ed3\u679c\u5927\u80c6\u63d0\u4ea4\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=1e7;\nconst int INF =0X3F3F3F3F;\ninline int Min(int x,int y){\n\treturn x<y?x;y;\n}\nstruct edge{\n\tint next,to,w;\n}e[N<<1];\nint head[N],cnt,dis[N],n,m,k;\nbool vis[N];\ninline void add(int x,int y,int w){\n\te[++cnt].next=head[x];\n\te[cnt].to=y;\n\te[cnt].w=w;\n\thead[x]=cnt;\n}\npriority_queue<pair<int ,int >,vector<pair<int ,int > >,greater<pair<int,int > > >q;//\u5c0f\u6839\u5806 \ninline void dij(){//dij+\u5806\u4f18\u5316 \n\tmemset(dis,INF,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tdis[1]=0;\n\tq.push(make_pair(dis[1],1));\n\twhile(!q.empty()){\n\t\tint u=q.top().second;\n\t\tq.pop();\n\t\tif(vis[u]) continue;\n\t\tvis[u]=true;\n\t\tfor(int i=head[u];i;i=e[i].next){\n\t\t\t\tint v=e[i].to;\n\t\t\t\tint w=e[i].w;\n\t\t\t\tif(dis[v]>dis[u]+w){\n\t\t\t\t\tdis[v]=dis[u]+w;\n\t\t\t\t\tq.push(make_pair(dis[v],v));\n\t\t\t}\n\t\t}\n\t} \n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v,w;\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tadd(u,v,w);\n\t\tadd(v,u,w);\n\t\tfor(int j=1;j<=k;j++){\n\t\t\tadd(u+(j-1)*n,v+j*n,0);//\u5206\u5c42\u56fe\u5efa\u56fe \u4ece\u5f53\u524d\u5c42\u5230\u4e0b\u4e00\u5c42\u514d\u8d39 \n\t\t\tadd(v+(j-1)*n,u+j*n,0);\n\t\t\tadd(u+j*n,v+j*n,w);\n\t\t\tadd(v+j*n,u+j*n,w); \n\t\t}\n\t}\n\tdij();\n\tint ans=0x7f7f7f7f;\n\tfor(int i=0;i<=k;i++){\n\t\tans=Min(ans,dis[i*n+n]);//\u679a\u4e3e\u6700\u5c0f\u503c \n\t} \n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n\u5927\u6982\u90fd\u5728\u4ee3\u7801\u91cc \u4e2a\u4eba\u8ba4\u4e3a\u7801\u98ce\u8fd8\u662f\u4e0d\u9519\u7684....\n\n**\u5199\u5728\u540e\u9762\uff1a**\n\n\u5206\u5c42\u56fe\u5176\u5b9e\u6bd4\u8f83\u597d\u7406\u89e3\n\n\u5173\u952e\u662f\u548c\u5176\u4ed6\u56fe\u8bba\u7b97\u6cd5\u7684\u7ed3\u5408\n\n\u80fd\u5426\u6210\u529f\u7684\u5efa\u7acb\u6a21\u578b \u7136\u540e\u5c31\u53ef\u4ee5\u8fdb\u884c\u6700\u77ed\u8def \u7f51\u7edc\u6d41\u7b49\u7b97\u6cd5\n\n\u540c\u65f6\u5982\u679c\u5f00\u4e00\u7ef4\u6570\u7ec4dis\n\n\u8bb0\u5f97\u63a7\u5236\u597d\u7a7a\u95f4\uff01\uff01\uff01\n\n\u4e0d\u8981MLE\u4e5f\u4e0d\u8981RE!!!!\n\n",
        "postTime": 1561297920,
        "uid": 142373,
        "name": "Kendrick_Z",
        "ccfLevel": 0,
        "title": "[USACO09FEB]\u6539\u9020\u8defRevamping Trails"
    },
    {
        "content": "\u5b66\u6821\u7684OJ\u8fd9\u9898\u4e0d\u4e0actime\u5361\u65f6\u4f1a\u8d85\u65f6=\u3002=\u4e0d\u8fc7\u6d1b\u8c37\u5012\u662f\u4e0d\u7528\u5361\u3002\u7b80\u5355\u7684\u601d\u8def\u5c31\u662f\u5206\u5c42\u56fe\u4e8c\u7ef4dijkstra\uff0c\u7b2c\u4e8c\u7ef4\u8868\u793a\u5f53\u524d\u4fee\u4e86\u591a\u5c11\u4f20\u9001\u95e8\uff08\u5e76\u4e0d\uff09\uff0c\u5b9e\u73b0\u8d77\u6765\u5e94\u8be5\u5927\u90e8\u5206\u4eba\u90fd\u4f1a\u5199\u5c31\u4e0d\u8bb2\u89e3\u4e86\u3002\u5b66\u6821\u7684\u6570\u636e\u4f3c\u4e4e\u628aSPFA\u5361\u4e86\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<algorithm>\n#include<vector>\n#include<iostream>\n#include<cstring>\n#include<ctime>\n#define mp make_pair\nusing namespace std;\ntypedef pair<int,int> pp;\nvector<pp>G[10010];\npriority_queue<pair<int,pair<int,int> > >Q;\nconst int inf=0x3c3c3c3c;\nint n,m,k;\nint dis[10010][21],ans;\ninline void Read(int& x,bool mark=0){  \n    char tt=getchar();  \n    for(;tt<'0'||'9'<tt;tt=getchar()) if(tt=='-') mark=1;  \n    for(x=0;'0'<=tt&&tt<='9';x=(x<<1)+(x<<3)+tt-'0',tt=getchar());  \n    x=mark?-x:x;  \n}\ninline int mmin(int a,int b){\n    return a<b?a:b;\n}\nvoid dijkstra_heap(){\n    vector<pp>::iterator it;\n    int i,j,x,y,mindis,len,num;\n    memset(dis,0x3c,sizeof(dis));\n    dis[1][0]=0;\n    Q.push(mp(-dis[1][0],mp(1,0)));\n    while(!Q.empty()){\n        if(clock()>1100) return;\n        x=Q.top().second.first;\n        num=Q.top().second.second;\n        mindis=-Q.top().first;\n        Q.pop();\n        if(mindis!=dis[x][num]) continue;\n        for(it=G[x].begin();it!=G[x].end();it++){\n            y=it->second,len=it->first;\n            if(num<k&&mindis<dis[y][num+1]){  \n                dis[y][num+1]=mindis;\n                Q.push(mp(-dis[y][num+1],mp(y,num+1)));\n            }\n            if(dis[y][num]>dis[x][num]+len){\n                dis[y][num]=dis[x][num]+len;\n                Q.push(mp(-dis[y][num],mp(y,num)));\n            }\n        }\n    }\n}\nint main(){\n    int x,y,i,z;\n    Read(n);\n    Read(m);\n    Read(k);\n    for(i=1;i<=m;i++){\n        Read(x);\n        Read(y);\n        Read(z);\n        G[x].push_back(mp(z,y));\n        G[y].push_back(mp(z,x));\n    }    \n    dijkstra_heap();\n    ans=inf;\n    for(i=1;i<=k;i++)  \n        ans=mmin(ans,dis[n][i]);\n    printf(\"%d\\n\",ans);\n}\n\n```",
        "postTime": 1473247672,
        "uid": 22584,
        "name": "\u5c0f\u6cc9\u82b1\u9633",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2939 \u3010[USACO09FEB]\u6539\u9020\u8defRevamping Trails\u3011"
    }
]