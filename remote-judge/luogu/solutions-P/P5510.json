[
    {
        "content": "\u51fa\u9898\u4eba\u7a81\u7136\u60f3\u5361\u6389$O(n\\log n)$\u7684\u505a\u6cd5\uff0c\u4e8e\u662f\u52a0\u5f3a\u4e86\u6700\u540e\u4e00\u4e2a\u70b9\u7684\u6570\u636e\u8303\u56f4\uff08$1\\times 10^6 $\u6539\u4e3a$2.5\\times 10^6$\uff09\uff0c\u7136\u540e\u4f18\u5316\u4e86\u4e00\u4e0b\u4ea4\u4e92\u5e93\u548cstd\uff0c\u4f46\u65f6\u9650\u6ca1\u6539\n\n\u7ed3\u679c\u5c31\u662f\u6709\u70b9\u5361\u5e38\uff08\u4e0d\u8fc7\u6211\u7684std\u597d\u50cf\u4f18\u5316\u5f97\u4e0d\u5f88\u597d\uff09\n\n\u6700\u540e\u4e00\u4e2a\u70b9std\u7528\u65f62.4\u79d2\uff08\u597d\u50cf\u548c\u4e4b\u524d\u4e00\u6837QWQ\uff09\uff0c$O(n\\log n)$\u7684\u7b97\u6cd5\u7ea63.2\u79d2\n\n\uff08\u501f\u7528\u7684\u5c0f\u7c89\u5154\u7684\u4ee3\u7801\uff09\n\n\u5b9e\u5728\u4e5f\u6ca1\u5565\u597d\u529e\u6cd5\u4e86QWQ\n\n\u9898\u89e3\u9664\u4e86\u4ee3\u7801\uff0c\u522b\u7684\u90fd\u6ca1\u53d8\n\n\u5982\u679c\u7ba1\u7406\u5458\u8ba4\u4e3a\u4e0d\u5408\u9002\uff0c\u8bf7\u79c1\u4fe1\uff0c\u6211\u53ef\u4ee5\u628a\u6570\u636e\u6539\u56de\u53bb\n\n----------\n\n\u9898\u610f\uff1a\u7ed9\u51fa\u4e24\u4e2a\u957f\u4e3a$n$\u7684\u5e8f\u5217$(a_i,na_i),(b_i,nb_i)$\n\n\u4f60\u9700\u8981\u6c42\uff1a\n\n1.$\\sum_{i=1}^n\\sum_{j=1}^n na_i\\cdot nb_j \\cdot [b_j>a_i]$\n\n\u4e5f\u5c31\u662f\u6240\u6709\u6ee1\u8db3$b_j>a_i$\u7684$na_i\\cdot nb_j$\u4e4b\u548c\n\n2.\u7ed9\u51fa$x,y,z,w$\uff0c\u5982\u679c\u5e8f\u5217$(a_i,na_i)$\u53ea\u4fdd\u7559\u6ee1\u8db3$a_i$\u5927\u5c0f\u5728$a_x$\u548c$a_y$\u4e4b\u95f4\u7684\u90e8\u5206\uff0c\u5e8f\u5217$(b_i,nb_i)$\u53ea\u4fdd\u7559\u6ee1\u8db3$b_i$\u5927\u5c0f\u5728$b_z$\u548c$b_w$\u4e4b\u95f4\u7684\u90e8\u5206\uff0c\u90a3\u4e48\u7b2c\u4e00\u95ee\u7684\u7b54\u6848\n\n## \u7b97\u6cd51\n\n\u66b4\u529b\u679a\u4e3e$i,j$\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2q)$\n\n\u671f\u671b\u5f97\u52064\u5206\n\n## \u7b97\u6cd52\n\n\u5148\u5bf9\u4e24\u4e2a\u5e8f\u5217\u5206\u522b\u6309\u7167$a_i,b_i$\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n\u8fd9\u65f6\u5019\u53d1\u73b0\uff0c\u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a$b_i$\uff0c\u67d0\u4e2a$a_j$\u80fd\u4ea7\u751f\u8d21\u732e$(j>1)$\uff0c\u90a3\u4e48$a_{j-1}$\u4e5f\u80fd\u4ea7\u751f\u8d21\u732e\n\n\u800c\u5f53$i$\u53d8\u5927\u65f6\uff0c\u6700\u5927\u7684\u80fd\u4ea7\u751f\u8d21\u732e\u7684$a_j$\u7684\u4f4d\u7f6e\u4e0d\u4f1a\u5411\u5de6\u79fb\u52a8\n\n\u6240\u4ee5\uff0c\u7528\u53cc\u6307\u9488\u6c42\u503c\n\n\u4ece\u5de6\u5411\u53f3\u679a\u4e3e$i$\u7684\u4f4d\u7f6e\uff0c\u5e76\u8bb0\u5f55\u6ee1\u8db3\u6761\u4ef6\u7684$a_j$\u5bf9\u5e94$na_j$\u7684\u548c\uff0c\u6bcf\u6b21\u79fb\u52a8$i$\u540e\uff0c\u518d\u79fb\u52a8$j$\uff0c\u628a\u626b\u8fc7\u7684\u90e8\u5206\u52a0\u4e0a\uff0c\u968f\u540e\u66f4\u65b0\u7b54\u6848\uff0c\u52a0\u4e0a\u8fd9\u4e2a$i$\u4ea7\u751f\u7684\u8d21\u732e\n\n\u5bf9\u4e8e\u4e4b\u540e\u7684\u8be2\u95ee\uff0c\u53d1\u73b0\u5bf9\u5e94$a_i$\u548c$b_i$\u5728\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\u91cc\uff0c\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u5c31\u80fd\u6c42\u51fa\u7b54\u6848\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5904\u7406\u8be2\u95ee\u524d\uff0c\u6839\u636e$a_x$\u548c$a_y$\u7684\u5927\u5c0f\u5173\u7cfb\u4ea4\u6362$x,y$\uff0c\u6839\u636e$b_z$\u548c$b_w$\u7684\u5927\u5c0f\u5173\u7cfb\u4ea4\u6362$z,w$\n\n\u5173\u4e8e\u5982\u4f55\u627e\u8be2\u95ee\u5728\u6392\u5e8f\u540e\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\uff1a\u8fd9\u90e8\u5206\u5b8c\u5168\u53ef\u4ee5\u66b4\u529b\u627e\u4f4d\u7f6e\uff0c\u4e0d\u5f71\u54cd\u590d\u6742\u5ea6\n\n\u540e\u9762\u7684\u90e8\u5206\u53ef\u4ee5\u628a\u5e8f\u5217\u6392\u5e8f\u524d\u7684\u503c\u8bb0\u5f55\u4e0b\u6765\uff0c\u6839\u636e\u503c\u8fdb\u884c\u4e8c\u5206\n\n\u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5$O(1)$\u627e\u4f4d\u7f6e\uff0c\u5728\u6700\u540e\u9762\u8bb2\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(nq)$\n\n\u671f\u671b\u5f97\u520618\u5206\n\n## \u7b97\u6cd53\n\n\u9488\u5bf9#3\n\n\u53d1\u73b0$a_i,b_i$\u90fd\u5f88\u5c0f\n\n\u6240\u4ee5\uff0c\u7edf\u8ba1\u6bcf\u4e2a$a_i,b_i$\u5bf9\u5e94$na_i,nb_i$\u7684\u548c\n\n\u5904\u7406\u8be2\u95ee\u65f6\u6709\u591a\u79cd\u65b9\u6cd5\uff0c\u5176\u4e2d\u4e00\u79cd\u662f\uff1a\u4e0e\u7b97\u6cd52\u7c7b\u4f3c\uff0c\u5728\u5bf9\u5e94\u533a\u95f4\u5185\u7528\u53cc\u6307\u9488\u6cd5\u5904\u7406\n\n\u53e6\u4e00\u4e2a\u65b9\u6cd5\u5728\u7b97\u6cd55\u4e2d\u8bb2\u89e3\n\n\u66b4\u529b\u627e\u4f4d\u7f6e\u518d\u6c42\u503c\u5373\u53ef\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n+q\\cdot a_i)$\n\n\u671f\u671b\u5f97\u520611\u5206\uff0c\u7ed3\u5408\u7b97\u6cd52\u671f\u671b\u5f97\u520629\u5206\n\n## \u7b97\u6cd54\n\n\u9488\u5bf9#4\n\n\u53d1\u73b0$q$\u5f88\u5927\uff0c$n$\u5f88\u5c0f\n\n\u8bf4\u660e\u8be2\u95ee\u7684\u603b\u60c5\u51b5\u6570\u5f88\u5c0f\n\n\u6240\u4ee5\u679a\u4e3e\u6240\u6709\u8be2\u95ee\uff0c\u7136\u540e\u5206\u522b\u6c42\u51fa\u7b54\u6848\uff0c\u5728\u8be2\u95ee\u65f6\u5c31\u80fd\u505a\u5230$O(1)$\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n^6+q)$\u6216$O(n^5+q)$\n\n\u671f\u671b\u5f97\u520610\u5206\uff0c\u7ed3\u5408\u7b97\u6cd52\u671f\u671b\u5f97\u520628\u5206\n\n## \u7b97\u6cd55\n\n\u9488\u5bf9#5\n\n\u8fd9\u65f6\u5019\u53d1\u73b0$n$\u53d8\u5927\u4e86\n\n\u9700\u8981\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\u624d\u80fd\u7ee7\u7eed\u4f18\u5316\n\n\u4ee5\u6837\u4f8b2\u4e3a\u4f8b\n\n```\n2 0\n1 1\n2 2\n2 2\n3 3\n9\n1 1 1 1\n1 1 1 2\n1 1 2 2\n1 2 1 1\n1 2 1 2\n1 2 2 2\n2 2 1 1\n2 2 1 2\n2 2 2 2\n```\n\n\n![](https://cdn.luogu.com.cn/upload/pic/72027.png)\n\n\u628a\u56fe\u753b\u51fa\u6765\uff0c\u5176\u4e2d\u9ec4\u8272\u683c\u5b50\u4ee3\u8868\u53ef\u4ee5\u4ea7\u751f\u8d21\u732e\n\n\u8003\u8651\u8be2\u95ee``2 2 2 2``\n\n\u7b54\u6848\u5f88\u660e\u663e\u662f6\n\n\u8fd9\u6837\u5c31\u80fd\u770b\u51fa\uff0c\u5b9e\u9645\u662f\u4e00\u4e2a\u524d\u7f00\u548c\n\n\u6240\u4ee5\uff0c\u6309\u7167\u56fe\u4e2d\u7684\u505a\u6cd5\u5f04\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7136\u540e\u6c42\u4e8c\u7ef4\u524d\u7f00\u548c\n\n\u5904\u7406\u8be2\u95ee\u65f6\uff0c\u627e\u5230\u4f4d\u7f6e\u540e\uff0c\u5dee\u5206\u4e00\u4e0b\uff0c\u5c31\u80fd$O(1)$\u6c42\u51fa\u7b54\u6848\uff08\u627e\u4f4d\u7f6e\u53ef\u80fd\u662f$O(\\log n)$\uff09\n\n\u7a7a\u95f4\u5927\u6982100MB\uff0c\u80fd\u5f00\u5f97\u4e0b\n\n\u4e5f\u53ef\u4ee5\u7528\u7c7b\u4f3c\u7684\u601d\u8def\u8fc7#3\uff1a\u628a\u8fde\u7eed\u7684\u4e00\u6bb5\u538b\u6210\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u5c31\u80fd\u7528\u7c7b\u4f3c\u7684\u601d\u8def\u505a\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(a_i^2+q)$\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2+q\\log n)$\u6216$O(n^2+q)$\n\n\u671f\u671b\u5f97\u520636\u5206\uff0c\u7ed3\u5408\u5176\u5b83\u7b97\u6cd5\u80fd\u5f97\u5230\u66f4\u9ad8\u7684\u5206\u6570\n\n## \u7b97\u6cd56\n\n\u5bf9\u4e8e\u6700\u540e\u4e24\u7ec4\u6570\u636e\uff0c$n$\u592a\u5927\u4e86\uff0c\u4e0d\u80fd\u76f4\u63a5\u7528\u524d\u7f00\u548c\n\n\u8fd9\u65f6\u5019\uff0c\u4f7f\u7528\u4e00\u79cd\u7c7b\u4f3c\u7684\u601d\u8def\n\n\u5982\u679c$n$\u5f88\u5927\uff0c\u90a3\u4e48\u6309\u7167\u4e0a\u9762\u753b\u51fa\u6765\u7684\u56fe\u53ef\u80fd\u662f\u8fd9\u6837\u7684\n\n![](https://cdn.luogu.com.cn/upload/pic/72030.png)\n\n\u90a3\u4e48\uff0c\u6c42\u524d\u7f00\u548c\u9700\u8981\u7684\u90e8\u5206\u53ef\u80fd\u6709\u8fd9\u4e24\u79cd\u60c5\u51b5\n\n![](https://cdn.luogu.com.cn/upload/pic/72034.png)\n\n![](https://cdn.luogu.com.cn/upload/pic/72036.png)\n\n\uff08\u6070\u597d\u5728\u8fb9\u754c\u5f52\u4e3a\u4efb\u4f55\u4e00\u79cd\u90fd\u53ef\u4ee5\uff09\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a$a_i\\ge b_j$\n\n\u8fd9\u65f6\u5019\uff0c\u9700\u8981\u6c42\u7684\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6240\u6709\u6ee1\u8db3$k\\le j$\u7684$b_k$\u4ea7\u751f\u7684\u8d21\u732e\n\n\u8fd9\u90e8\u5206\u53ef\u4ee5\u7528\u7b97\u6cd52\u7684\u601d\u8def\u6c42\uff0c\u4e0d\u540c\u4e4b\u5904\u662f\u8bb0\u5f55\u6bcf\u4e2a$b_j$\u7684\u503c\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a$a_i<b_j$\n\n\u8fd9\u65f6\u5019\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u77e9\u5f62\u51cf\u53bb\u4e00\u5757\n\n\u77e9\u5f62\u90e8\u5206\u5f88\u5bb9\u6613\u8ba1\u7b97\uff0c\u7528$na_i$\u548c$nb+j$\u7684\u524d\u7f00\u548c\u5c31\u80fd\u7b97\u51fa\u6765\n\n\u800c\u51cf\u53bb\u7684\u4e00\u5757\u770b\u8d77\u6765\u5f88\u50cf\u4e0a\u9762\u4e00\u79cd\u60c5\u51b5\n\n\u4e0d\u540c\u4e4b\u5904\u662f\uff0c\u8fd9\u90e8\u5206\u662f$a_k$\u7684\u503c\uff0c\u800c\u4e14\u662f\u4e0d\u80fd\u4ea7\u751f\u8d21\u732e\u7684\u90e8\u5206\n\n\u8fd9\u6837\u5c31\u548c\u4e0a\u9762\u7c7b\u4f3c\u4e86\n\n\u5f53\u7136\uff0c\u8fd8\u6709\u53e6\u59163\u79cd\u601d\u8def\uff0c\u4e0d\u8fc7\u57fa\u672c\u662f\u7c7b\u4f3c\u7684\uff0c\u53ea\u662f\u6c42\u524d\u7f00\u548c\u7684\u65b9\u5411\u4e0d\u540c\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n+q\\log n)$\u6216$O(n+q)$\n\n\u867d\u7136std\u7684\u5185\u5b58\u4f7f\u7528\u7ea6160MB\uff0c\u4f46\u8fd8\u662f\u8bf7\u6ce8\u610f\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff0c\u6709\u4e9b\u5199\u6cd5\u53ef\u80fd\u5c31\u4f1a\u6d88\u8017\u66f4\u591a\u7684\u7a7a\u95f4\n\n\u671f\u671b\u5f97\u5206100\u5206\n\n## \u5173\u4e8e$O(1)$\u627e\u4f4d\u7f6e\n\n\u5728\u6392\u5e8f\u7684\u65f6\u5019\uff0c\u5148\u8bb0\u5f55\u6bcf\u4e2a\u6570\u539f\u6765\u7684\u4f4d\u7f6e\n\n\u6392\u5b8c\u5e8f\u540e\uff0c\u628a\u6570\u5b57\u76f8\u540c\u7684\u90e8\u5206\u5408\u5e76\uff0c\u7136\u540e\u6839\u636e\u539f\u4f4d\u7f6e\u7684\u4fe1\u606f\u628a\u4f4d\u7f6e\u6620\u5c04\u5230\u65b0\u7684\u4f4d\u7f6e\n\n\u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5$O(1)$\u627e\u5230\u4f4d\u7f6e\u4e86\n\n\u6ce8\u610f\uff1a\u6392\u5e8f\u8981\u7528\u57fa\u6570\u6392\u5e8f\uff0c\u5426\u5219\u590d\u6742\u5ea6\u4f1a\u5e26log\n\n~~\u5176\u5b9e\u51fa\u9898\u4eba\u672c\u6765\u60f3\u5361\u5e26$\\log$\u7684\u7b97\u6cd5\u7684\uff0c\u4f46\u662f\u51fa\u9898\u4eba\u7684std\u5e38\u6570\u6709\u70b9\u5927\uff0c\u4e0d\u592a\u597d\u5361\uff0c\u4e8e\u662f\u5c31\u653e\u8fc7\u53bb\u4e86~~\n\n\u4e0a\u9762\u4e00\u884c\u4f5c\u5e9f\uff0c\u73b0\u5728$O(n\\log n)$\u7b97\u6cd5\u4e0d\u5bb9\u6613\u5361\u8fc7\u53bb\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\nusing namespace std;\n#define u32 unsigned int\n#define u64 unsigned long long\nint cl;\nconst int N=2500007;\nconst long long M=998244353LL;\nint n,q,k;\nint a[N],na[N],b[N],nb[N];\nint x,y,z,u;\nnamespace lib{\n    u64 read(){\n        u64 n=0;\n        char c=getchar();\n        while(c<'0'||c>'9')c=getchar();\n        while(c>='0'&&c<='9'){\n            n=n*10+c-'0';\n            c=getchar();\n        }\n        return n;\n    }\n    char r[30];\n    void write(u64 num){\n        if(num==0){\n            putchar('0');\n            return;\n        }\n        int t=0;\n        while(num){\n            r[t++]=num%10+'0';\n            num/=10;\n        }\n        while(t)putchar(r[--t]);\n    }\n    u64 s;\n    u64 rand(u64 l,u64 r){\n        s=s*19260817+1;\n        return ((s>>8)%(r-l+1)+l);\n    }\n    int ra,t;\n    void init(){\n        n=read();k=read();\n        if(k<2){\n            for(int i=1;i<=n;i++){\n                a[i]=read();na[i]=read();\n            }\n            for(int i=1;i<=n;i++){\n                b[i]=read();nb[i]=read();\n            }\n        }else{\n            s=read();ra=read();\n            u64 bacs=s;\n            for(int i=1;i<=n;i++){\n            \ts=s*19260817+1;\n        \t\ta[i]=((s>>8)%ra+1);\n                //a[i]=rand(1,ra);\n                s=s*19260817+1;\n        \t\t//na[i]=((s>>8)%(M-1)+1);\n                //na[i]=rand(1,M-1);\n            }\n            s=bacs;\n            for(int i=1;i<=n;i++){\n            \ts=s*19260817+1;\n        \t\t//a[i]=((s>>8)%ra+1);\n                //a[i]=rand(1,ra);\n                s=s*19260817+1;\n        \t\tna[i]=((s>>8)%(M-1)+1);\n                //na[i]=rand(1,M-1);\n            }\n            bacs=s;\n            for(int i=1;i<=n;i++){\n                s=s*19260817+1;\n        \t\tb[i]=((s>>8)%ra+1);\n                //a[i]=rand(1,ra);\n                s=s*19260817+1;\n        \t\t//nb[i]=((s>>8)%(M-1)+1);\n            }\n            s=bacs;\n            for(int i=1;i<=n;i++){\n                s=s*19260817+1;\n        \t\t//b[i]=((s>>8)%ra+1);\n                //a[i]=rand(1,ra);\n                s=s*19260817+1;\n        \t\tnb[i]=((s>>8)%(M-1)+1);\n            }\n        }\n        q=read();\n    }\n    u64 lastans;\n    u64 res;\n    void reply(u64 num){\n        if(k<2){\n            write(num);putchar('\\n');\n        }else{\n            res=res*233+num;\n        }\n        lastans^=num;\n    }\n    void query(){\n        if(k<2){\n            x=read();y=read();z=read();u=read();\n        }else{\n        \ts=s*19260817+1;\n        \tx=((s>>8)%n+1);\n        \ts=s*19260817+1;\n        \ty=((s>>8)%n+1);\n        \ts=s*19260817+1;\n        \tz=((s>>8)%n+1);\n        \ts=s*19260817+1;\n        \tu=((s>>8)%n+1);\n            //x=rand(1,n);y=rand(1,n);z=rand(1,n);u=rand(1,n);\n        }\n        if(k&1){\n        \tint t=lastans%n+1;\n        \tif((x+=t)>n)x-=n;\n        \tif((y+=t)>n)y-=n;\n        \tif((z+=t)>n)z-=n;\n        \tif((u+=t)>n)u-=n;\n            /*x=(x+lastans)%n+1;\n            y=(y+lastans)%n+1;\n            z=(z+lastans)%n+1;\n            u=(u+lastans)%n+1;*/\n        }\n    }\n    void stop(){\n        if(k>=2){write(res);putchar('\\n');}\n    }\n}\nlong long ans;\nint aid[N],bid[N];\nint swp[N],sid[N],cnt[65536];\nvoid sort(){\n    //\u8fd9\u91cc\u628abase\u6539\u6210\u4e86256\uff0c\u4e0d\u8fc7\u597d\u50cf\u533a\u522b\u4e0d\u5927\n    cnt[0]=1;\n    for(int i=1;i<256;i++)cnt[i]=0;\n    for(int i=1;i<=n;i++)++cnt[a[i]&0xff];\n    for(int i=1;i<256;i++)cnt[i]+=cnt[i-1];\n    for(int i=n;i>=1;i--){\n        swp[--cnt[a[i]&0xff]]=a[i];\n        sid[cnt[a[i]&0xff]]=i;\n    }\n\n    cnt[0]=1;\n    for(int i=1;i<256;i++)cnt[i]=0;\n    for(int i=1;i<=n;i++)++cnt[(swp[i]>>8)&0xff];\n    for(int i=1;i<256;i++)cnt[i]+=cnt[i-1];\n    for(int i=n;i>=1;i--){\n        a[--cnt[(swp[i]>>8)&0xff]]=swp[i];\n        aid[cnt[(swp[i]>>8)&0xff]]=sid[i];\n    }\n\n\tcnt[0]=1;\n    for(int i=1;i<256;i++)cnt[i]=0;\n    for(int i=1;i<=n;i++)++cnt[(a[i]>>16)&0xff];\n    for(int i=1;i<256;i++)cnt[i]+=cnt[i-1];\n    for(int i=n;i>=1;i--){\n        swp[--cnt[(a[i]>>16)&0xff]]=a[i];\n        sid[cnt[(a[i]>>16)&0xff]]=aid[i];\n    }\n    \n    cnt[0]=1;\n    for(int i=1;i<256;i++)cnt[i]=0;\n    for(int i=1;i<=n;i++)++cnt[(swp[i]>>24)&0xff];\n    for(int i=1;i<256;i++)cnt[i]+=cnt[i-1];\n    for(int i=n;i>=1;i--){\n        a[--cnt[(swp[i]>>24)&0xff]]=swp[i];\n        aid[cnt[(swp[i]>>24)&0xff]]=sid[i];\n    }\n    \n    cnt[0]=1;\n    for(int i=1;i<256;i++)cnt[i]=0;\n    for(int i=1;i<=n;i++)++cnt[b[i]&0xff];\n    for(int i=1;i<256;i++)cnt[i]+=cnt[i-1];\n    for(int i=n;i>=1;i--){\n        swp[--cnt[b[i]&0xff]]=b[i];\n        sid[cnt[b[i]&0xff]]=i;\n    }\n\n    cnt[0]=1;\n    for(int i=1;i<256;i++)cnt[i]=0;\n    for(int i=1;i<=n;i++)++cnt[(swp[i]>>8)&0xff];\n    for(int i=1;i<256;i++)cnt[i]+=cnt[i-1];\n    for(int i=n;i>=1;i--){\n        b[--cnt[(swp[i]>>8)&0xff]]=swp[i];\n        bid[cnt[(swp[i]>>8)&0xff]]=sid[i];\n    }\n\n\tcnt[0]=1;\n    for(int i=1;i<256;i++)cnt[i]=0;\n    for(int i=1;i<=n;i++)++cnt[(b[i]>>16)&0xff];\n    for(int i=1;i<256;i++)cnt[i]+=cnt[i-1];\n    for(int i=n;i>=1;i--){\n        swp[--cnt[(b[i]>>16)&0xff]]=b[i];\n        sid[cnt[(b[i]>>16)&0xff]]=bid[i];\n    }\n    \n    cnt[0]=1;\n    for(int i=1;i<256;i++)cnt[i]=0;\n    for(int i=1;i<=n;i++)++cnt[(swp[i]>>24)&0xff];\n    for(int i=1;i<256;i++)cnt[i]+=cnt[i-1];\n    for(int i=n;i>=1;i--){\n        b[--cnt[(swp[i]>>24)&0xff]]=swp[i];\n        bid[cnt[(swp[i]>>24)&0xff]]=sid[i];\n    }\n\n}\nlong long sum;\nint cuta[N],cutb[N];\nint prea[N],preb[N];\nint pa[N],pb[N];\ninline long long sol(int i,int j){\n    if(a[i]>=b[j]){\n        return cutb[j];\n    }else{\n        return ((cuta[i]-1LL*prea[i]*(preb[n]-preb[j]))%M+M)%M;\n    }\n}\nint main(){\n\t//freopen(\"data.in\",\"r\",stdin);\n\t//freopen(\"data.out\",\"w\",stdout);\n    lib::init();\n\n    sort();\n    for(int i=1;i<=n;i++){\n        swp[i]=na[aid[i]];\n    }\n    for(int i=1;i<=n;i++){\n        na[i]=swp[i];\n    }\n    sid[aid[1]]=1;\n    for(int i=2;i<=n;i++){\n        if(a[i]==a[i-1]){\n            sid[aid[i]]=sid[aid[i-1]];\n        }else{\n            sid[aid[i]]=i;\n        }\n    }\n    for(int i=1;i<=n;i++){\n        aid[i]=sid[i];\n    }\n    for(int i=n-1;i>=1;i--){\n        if(a[i]==a[i+1]){\n            na[i]+=na[i+1];\n            na[i]%=M;\n            na[i+1]=0;\n        }\n    }\n    for(int i=1;i<=n;i++)prea[i]=(prea[i-1]+na[i])%M;\n\n    for(int i=1;i<=n;i++){\n        swp[i]=nb[bid[i]];\n    }\n    for(int i=1;i<=n;i++){\n        nb[i]=swp[i];\n    }\n    sid[bid[1]]=1;\n    for(int i=2;i<=n;i++){\n        if(b[i]==b[i-1]){\n            sid[bid[i]]=sid[bid[i-1]];\n        }else{\n            sid[bid[i]]=i;\n        }\n    }\n    for(int i=1;i<=n;i++){\n        bid[i]=sid[i];\n    }\n    for(int i=n-1;i>=1;i--){\n        if(b[i]==b[i+1]){\n            nb[i]+=nb[i+1];\n            nb[i]%=M;\n            nb[i+1]=0;\n        }\n    }\n    for(int i=1;i<=n;i++)preb[i]=(preb[i-1]+nb[i])%M;\n\n    sum=0;\n    for(int i=1;i<=n;i++){\n        sum+=nb[i];\n        sum%=M;\n    }\n    int j=1;\n    for(int i=1;i<=n;i++){\n        while(j<=n&&a[i]>=b[j]){\n            sum-=nb[j];\n            sum%=M;\n            sum+=M;\n            sum%=M;\n            j++;\n        }\n        ans+=1LL*sum*na[i];\n        ans%=M;\n        pa[i]=j;\n        cuta[i]=ans;\n    }\n\n    sum=0;\n    ans=0;\n    j=1;\n    for(int i=1;i<=n;i++){\n        while(j<=n&&b[i]>a[j]){\n            sum+=na[j];\n            sum%=M;\n            j++;\n        }\n        ans+=1LL*sum*nb[i];\n        ans%=M;\n        pb[i]=j;\n        cutb[i]=ans;\n    }\n\n    lib::reply(ans);\n\n    for(int i=1;i<=q;i++){\n        lib::query();\n\n        x=aid[x];y=aid[y];\n        if(a[x]>a[y]){u32 t=x;x=y;y=t;}\n        z=bid[z];u=bid[u];\n        if(b[z]>b[u]){u32 t=z;z=u;u=t;}\n        x--;z--;\n\n        ans=0;\n        ans+=sol(y,u);\n        ans-=sol(x,u);\n        ans-=sol(y,z);\n        ans+=sol(x,z);\n        ans=(ans%M+M)%M;\n\n        lib::reply(ans);\n    }\n    lib::stop();\n}\n```\n~~\u8fd9\u9898\u522b\u5fd8\u4e86IO\u6a21\u677f\u7684100\u591a\u884c~~",
        "postTime": 1565776883,
        "uid": 86649,
        "name": "Hope2075",
        "ccfLevel": 8,
        "title": "\u6c34\u6676-\u9898\u89e3"
    }
]