[
    {
        "content": "\u8865\u5145\u4e00\u4e0b\u8fd9\u9053\u9898\u7684 $O(n\\log n\\log\\max w)$ \u7684\u505a\u6cd5\uff0c\u6211\u4eec\u4ee5 $1$ \u4e3a\u6839\uff0c\u5b9a\u4e49 $a_x$ \u4e3a\u4ece $x$ \u5230 $1$ \u8fb9\u6743\u7684\u5f02\u6216\u503c\uff0c$in_x$ \u548c $out_x$ \u4e3a $x$ \u5b50\u6811\u5185\u90e8\u548c\u5916\u90e8\u9009\u62e9 $u$ \u548c $v$ \u4e2d $a_u\\oplus a_v$ \u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u6700\u540e\u7b54\u6848\u663e\u7136\u4e3a $\\max_{x\\ne1}\\{in_x+out_x\\}$\u3002\n\n\u5bf9\u4e8e\u6c42 $in_x$ \u6211\u4eec\u6709\u5f88\u591a\u505a\u6cd5\uff0c\u4f8b\u5982\u542f\u53d1\u5f0f\u5408\u5e76\uff0cdsu on tree\uff0c\u6216\u8005\u53ef\u6301\u4e45\u5316 trie\uff0c\u9700\u8981 $O(n\\log n\\log\\max w)$ \u7684\u65f6\u95f4\u3002\n\n\u5bf9\u4e8e\u6c42 $out_x$\uff0c\u6211\u4eec\u4e0d\u59a8\u5148\u627e\u5230\u4efb\u610f\u4e24\u4e2a\u70b9 $p$ \u548c $q$\uff0c\u4f7f\u5f97 $a_p\\oplus a_q$ \u6700\u5927\uff0c\u8fd9\u65f6\u4e0d\u4ee5\u8fd9\u4e2a\u70b9\u5bf9\u4e3a\u6700\u5927\u503c\u7684\u53ea\u6709 $p$ \u5230\u6839\u4e0a\u7684\u6240\u6709\u70b9\uff0c\u548c $q$ \u5230\u6839\u4e0a\u7684\u6240\u6709\u70b9\u3002\u8003\u8651\u6211\u4eec\u53ea\u6c42\u6811\u4e0a\u4e00\u6761\u94fe $out_x$\uff0c\u52a0\u5165\u6211\u4eec\u6309\u7167\u987a\u5e8f\u904d\u5386 \u5230 $x$\uff0c\u53ea\u9700\u8981\u5c06 $x$ \u7236\u4eb2\u7684\u5b50\u6811\u5185\u9664\u53bb $x$ \u5b50\u6811\u90e8\u5206\u52a0\u5165 trie \u5373\u53ef\u3002\u8fd9\u4e00\u90e8\u5206\u590d\u6742\u5ea6 $O(n\\log \\max w)$\u3002\n\n\u901a\u8fc7\u4ee3\u7801\n\n```cpp\nconst int N = 3e4+5, L = 128, S = 1<<7; int SZ;\nint n, maxl, p, q, ch[N*L][2], t[N*L], fa[N], tot, tg[N], bel[N], out[N], in[N], a[N], A, B, o[N], rk[N], ans; vector<int> v[N]; vector<pii> e[N]; \nint l2(int x) { return x == 0?-1:l2(x>>1)+1; }\nvoid ins(int &o, int v)\n{\n    if(!o) o = ++tot; ++t[o];\n\tfor(int i = maxl, x = o; ~i; --i)\n\t{\n\t\tbool d = v>>i&1; if(!ch[x][d]) ch[x][d] = ++tot;\n\t\tx = ch[x][d], ++t[x];\n\t}\n}\nvoid cls() { memset(t+1, 0, sizeof(int)*tot); }\nint ask(int o, int v)\n{\n\tint ret = 0; \n\tfor(int i = maxl, x = o; ~i; --i)\n\t{\n\t\tbool d = ~v>>i&1;\n\t\tif(t[ch[x][d]]) x = ch[x][d], ret |= 1ll<<i;\n\t\telse x = ch[x][d^1];\n\t}\t\n\treturn ret;\n}\nvoid mg(int x, int p, int z, int i, int &v)\n{\n    if(!x) return; if(!~i) return v = max(v, ask(o[p], z)), ins(o[p], z);\n    mg(ch[x][0], p, z, i-1, v), mg(ch[x][1], p, z|1<<i, i-1, v);\n}\nvoid dfs(int x)\n{\n    static int _t; rk[++_t] = x, in[x] = 0; ins(o[x], a[x]);\n    for(pii u:e[x]) \n    {\n        int y = u.fi; if(y == fa[x]) continue;\n        fa[y] = x, a[y] = a[x]^u.se, dfs(y); if(t[o[x]] < t[o[y]]) swap(o[x], o[y]);;\n        mg(o[y], x, 0, maxl, in[x]), in[x] = max(in[x], in[y]);\n    }\n}\nvoid sol(int p)\n{\n\tcls(); for(int x = p; x; x = fa[x]) tg[x] = 1; int now = 0;\n\tfor(int k = 1, i; k <= n; v[i].clear(), v[bel[i]].pb(a[i]), ++k) \n\t\tif(tg[i = rk[k]]) bel[i] = i; else bel[i] = bel[fa[i]];\n\tfor(int k = 1, i; k <= n; ++k) if(tg[i = rk[k]])\n\t{\n\t\tfor(int w:v[fa[i]]) now = max(now, ask(o[0], w)), ins(o[0], w);\n\t\tout[i] = max(out[i], now), tg[i] = 0;\n\t}\n}\nint main()\n{\n\trd(n); for(int i = 1, x, y, z; i < n; ++i) \n        rd(x), rd(y), rd(z), maxl = max(maxl, l2(z)), e[x].pb(pii(y, z)), e[y].pb(pii(x, z));\n    dfs(1), cls();\n\tfor(int i = 1; i <= n; ++i) \n\t{\n\t\tint v = ask(o[0], a[i]); ins(o[0], a[i]), out[i] = -1;\n\t\tif((A^B) < v) A = a[i], B = v^A, p = i;\n\t}\n\tfor(int i = 1; i <= n; ++i) if(a[i] == B) q = i;\n\tsol(p), sol(q); for(int i = 1; i <= n; ++i) if(!~out[i]) out[i] = A^B;\n    for(int i = 2; i <= n; ++i) ans = max(ans, in[i]+out[i]);\n    print(ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1596614592,
        "uid": 123514,
        "name": "CTime_Pup_314",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P6072 \u3010\u300eMdOI R1\u300fPath\u3011"
    },
    {
        "content": "## $\\mathrm{[MdOI2020]\\ T5\\ Path}\\ $ \u9898\u89e3\n\nupd. \u6709 poly log \u7684\u505a\u6cd5\uff0c\u5e0c\u671b\u4f1a\u7684\u795e\u4ed9\u5199\u4e00\u5199...\n\n---\n\n[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/T115029)\n\n------\n\n#### \u7b97\u6cd5 $1$\uff1a\uff08$Subtask\\ 1$\uff0c\u679a\u4e3e\uff09\n\n\u9996\u5148\u4e00\u6b21 DFS \u8ba1\u7b97\u51fa $dist[i]$ \u8868\u793a $i$ \u5230 $1$ \u7684\u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u7684\u6743\u503c\u5f02\u6216\u548c\u3002\u5219\u5982\u679c\u9009\u62e9\u4e86 $a\\to b,\\ \\ c\\to d$ \u4e24\u6761\u8def\u5f84\uff0c\u5219\u8981\u6c42\u7684\u7b54\u6848\u4e3a $\\max (dist[a]\\oplus dist[b]+dist[c]\\oplus dist[d])$\u3002\n\n\u8ba1\u7b97\u7b54\u6848\u65f6\uff0c\u76f4\u63a5\u679a\u4e3e\u9009\u62e9\u7684\u4e24\u6761\u8def\u5f84\u7684\u56db\u4e2a\u7aef\u70b9 $a,b,c,d$\uff0c\u9996\u5148\u5224\u65ad\u662f\u5426\u76f8\u4ea4\uff0c\u82e5\u4e0d\u76f8\u4ea4\u518d\u66f4\u65b0\u7b54\u6848\uff0c\u5224\u65ad\u76f8\u4ea4\u7684\u65f6\u5019\u53ef\u4ee5\u66b4\u529b\u8df3\uff0c\u4e5f\u53ef\u4ee5\u7528\u7ed3\u8bba\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^5)$\uff0c\u53ef\u4ee5\u89e3\u51b3 $n\\leq 50$ \u7684\u90e8\u5206\u5206\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN=100010;\nint n,ans,x,y,z,eg,hd[MAXN],ver[2*MAXN],nx[2*MAXN],edge[2*MAXN],vis[2][MAXN],dis[MAXN],f[MAXN];\nvoid add_edge (int x,int y,int z) {\n\tver[++eg]=y;\n\tnx[eg]=hd[x],edge[eg]=z;\n\thd[x]=eg;\n\treturn;\n}\nvoid dfs (int x,int fa) {\n\tfor (int i=hd[x];i;i=nx[i]) {\n\t\tif (ver[i]==fa) {continue;}\n\t\tdis[ver[i]]=dis[x]^edge[i],f[ver[i]]=x;\n\t\tdfs(ver[i],x);\n\t}\n\treturn;\n}\nbool chk (int a,int b,int c,int d) {\n\tfor (int i=1;i<=n;i++) {vis[0][i]=vis[1][i]=0;}\n\tint x=a,flg=0;\n\twhile (x) {vis[0][x]=1;x=f[x];}\n\tx=b;\n\twhile (x) {\n\t\tif (flg) {vis[0][x]=0;}\n\t\tif (vis[0][x]) {flg=1;}\n\t\tif (!flg) {vis[0][x]=1;}\n\t\tx=f[x];\n\t}\n\tx=c,flg=0;\n\twhile (x) {vis[1][x]=1;x=f[x];}\n\tx=d;\n\twhile (x) {\n\t\tif (flg) {vis[1][x]=0;}\n\t\tif (vis[1][x]) {flg=1;}\n\t\tif (!flg) {vis[1][x]=1;}\n\t\tx=f[x];\n\t}\n\tfor (int i=1;i<=n;i++) {if (vis[0][i]&&vis[1][i]) {return 0;}}\n\treturn 1;\n}\nint main () {\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n-1;i++) {\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd_edge(x,y,z),add_edge(y,x,z);\n\t}\n\tdfs(1,0);\n\tfor (int i=1;i<=n;i++) {\n\t\tfor (int j=i;j<=n;j++) {\n\t\t\tfor (int k=1;k<=n;k++) {\n\t\t\t\tfor (int l=k;l<=n;l++) {\n\t\t\t\t\tif ((dis[i]^dis[j])+(dis[k]^dis[l])<ans) {continue;}\n\t\t\t\t\tif (chk(i,j,k,l)) {\n\t\t\t\t\t\tans=max(ans,(dis[i]^dis[j])+(dis[k]^dis[l]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n------\n\n#### \u7b97\u6cd5 $2$\uff1a\uff08$Subtask\\ 1,2$\uff0c\u7ed3\u8bba+\u679a\u4e3e\uff09\n\n\u8bbe $l=lca(a,b)$\uff0c\u90a3\u4e48\u5982\u679c $c$ \u5728 $l$ \u5b50\u6811\u5185\uff0c\u800c $d$ \u5728 $l$ \u5b50\u6811\u5916\uff0c\u90a3\u4e48\u8def\u5f84 $c\\to d$ \u4e00\u5b9a\u7ecf\u8fc7\u70b9 $l$\uff0c\u6240\u4ee5\u4e00\u5b9a\u4e0e $a\\to b$\u76f8\u4ea4\uff1b\u5982\u679c $c,d$ \u90fd\u5728 $l$ \u5b50\u6811\u5916\uff0c\u90a3\u4e48\u8def\u5f84 $c\\to d$ \u4e00\u5b9a\u4e0e $a\\to b$ \u4e0d\u76f8\u4ea4\uff1b\u6700\u9ebb\u70e6\u7684\u662f $c,d$ \u90fd\u5728 $l$ \u5b50\u6811\u5185\uff0c\u65e0\u6cd5\u76f4\u63a5\u5224\u65ad\uff0c\u4f46\u662f\u8fd9\u65f6\u6362\u4e2a\u89d2\u5ea6\u4e5f\u53ef\u4ee5\u89e3\u51b3\uff1a\n\n\u65e2\u7136 $c,d$ \u90fd\u5728 $a\\to b$ \u7684 $lca$ \u5b50\u6811\u5185\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u53cd\u8fc7\u6765\u770b $a,b$ \u4e0e $c\\to d$ \u7684 $lca$ \u7684\u5173\u7cfb\uff0c\u8bbe $q=lca(c,d)$\uff0c\u5224\u65ad $a,b,q$ \u7684\u5173\u7cfb\u5c31\u53ef\u4ee5\u5224\u5b9a\u76f8\u4ea4\u5173\u7cfb\u4e86\uff08\u6b64\u65f6\u5982\u679c\u518d\u6b21\u51fa\u73b0 $a,b$ \u90fd\u5728 $q$ \u5b50\u6811\u5185\uff0c\u90a3\u4e48\u663e\u7136\u662f $a\\to b$\uff0c$c\\to d$ \u4e24\u6761\u8def\u5f84\u4ea4\u4e8e\u4e00\u70b9 $q$\uff0c$q$ \u540c\u65f6\u662f\u4e24\u5bf9\u70b9\u7684 LCA\uff09\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u679a\u4e3e $l=lca(a,b)$\uff0c\u5728 $l$ \u5b50\u6811\u5185\u4efb\u53d6\u4e24\u70b9\u4f5c\u4e3a $a,b$\uff0c\u5728 $l$ \u5b50\u6811\u5916\u4efb\u53d6\u4e24\u70b9\u4f5c\u4e3a $c,d$\uff0c\u90a3\u4e48 $a,b,c,d$ \u5c31\u662f\u4e00\u5bf9\u5408\u6cd5\u8def\u5f84\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u51cf\u5c0f\u679a\u4e3e\u91cf\uff0c\u679a\u4e3e $l$ \u540e\u53ea\u8981\u5206\u522b\u679a\u4e3e\u4e24\u5bf9\u70b9\uff0c\u663e\u7136\u4ee4 $dist[a]\\oplus dist[b]$ \u548c $dist[c]\\oplus dist[d]$ \u5206\u522b\u53d6\u5230\u6700\u5927\u503c\uff0c\u76f8\u52a0\u4ee5\u540e\u5373\u53ef\u53d6\u6700\u5927\u503c\u3002\n\n\u76f4\u63a5\u679a\u4e3e\u662f $O(n^3)$ \u7684\uff0c\u53ef\u4ee5\u7528 0-1 Trie \u59cb\u7ec8\u7ef4\u62a4\u5f53\u524d\u8003\u8651\u8fc7\u7684\u6240\u6709\u6570\uff0c\u6bcf\u4e2a\u6570\u53ef\u4ee5 $O(\\log W)$ \u5b8c\u6210\u63d2\u5165\u548c\u67e5\u8be2\uff0c\u4e8e\u662f\u4f18\u5316\u4e86\u590d\u6742\u5ea6\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2\\log W)$\uff0c\u5176\u4e2d $W=\\max(w_i)$\uff0c\u53ef\u4ee5\u89e3\u51b3 $n\\leq 2\\times 10^3$ \u7684\u90e8\u5206\u5206\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int MAXN=60010,B=60;\nint n,x,y,z,eg,cnt,tot=1,hd[MAXN],ver[2*MAXN],nx[2*MAXN],edge[2*MAXN];\nint dfn[MAXN],ed[MAXN],siz[MAXN<<5],ch[MAXN<<5][2];\nll dist[MAXN],val[MAXN],ans;\nvoid add_edge (int x,int y,int z) {\n\tver[++eg]=y;\n\tnx[eg]=hd[x],edge[eg]=z;\n\thd[x]=eg;\n\treturn;\n}\nvoid ins (ll x) {\n\tint p=1;\n\tsiz[1]++;\n\tfor (int i=B;i>=0;i--) {\n\t\tint b=((x>>i)&1);\n\t\tif (!ch[p][b]) {ch[p][b]=++tot;}\n\t\tp=ch[p][b];\n\t\tsiz[p]++;\n\t}\n\treturn;\n}\nll query (ll x) {\n\tint p=1;\n\tll res=0;\n\tfor (int i=B;i>=0;i--) {\n\t\tint b=((x>>i)&1);\n\t\tif (siz[ch[p][b^1]]) {\n\t\t\tp=ch[p][b^1],res|=(1ll<<i);\n\t\t} else {\n\t\t\tp=ch[p][b];\n\t\t}\n\t}\n\treturn res;\n}\nvoid dfs (int x,int fa) {\n\tdfn[x]=ed[x]=++cnt;\n\tfor (int i=hd[x];i;i=nx[i]) {\n\t\tif (ver[i]==fa) {continue;}\n\t\tdist[ver[i]]=dist[x]^edge[i];\n\t\tdfs(ver[i],x);\n\t\ted[x]=ed[ver[i]];\n\t}\n\treturn;\n}\nint main () {\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n-1;i++) {\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd_edge(x,y,z),add_edge(y,x,z);\n\t}\n\tdfs(n,0);\n\tfor (int i=1;i<=n;i++) {\n\t\tval[dfn[i]]=val[dfn[i]+n]=dist[i];\n\t}\n\tfor (int i=2;i<=n;i++) {\n\t\tll tmp1=0,tmp2=0;\n\t\tfor (int j=1;j<=tot;j++) {ch[j][0]=ch[j][1]=siz[j]=0;}\n\t\ttot=1;\n\t\tfor (int j=dfn[i];j<=ed[i];j++) {\n\t\t\tins(val[j]);\n\t\t\ttmp1=max(tmp1,query(val[j]));\n\t\t}\n\t\tfor (int j=1;j<=tot;j++) {ch[j][0]=ch[j][1]=siz[j]=0;}\n\t\ttot=1;\n\t\tfor (int j=ed[i]+1;j<=dfn[i]+n-1;j++) {\n\t\t\tins(val[j]);\n\t\t\ttmp2=max(tmp2,query(val[j]));\n\t\t}\n\t\tans=max(ans,tmp1+tmp2);\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\n------\n\n#### \u7b97\u6cd5 $3$\uff1a\uff08$Subtask\\ 3$\uff0c0-1 Trie\uff0c\u94fe\u5f0f\u6570\u636e\uff09\n\n\u5bf9\u4e8e\u9000\u5316\u6210\u94fe\u7684\u6811\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u5e8f\u5217\uff0c\u6211\u4eec\u9700\u8981\u4ece\u5e8f\u5217\u4e2d\u9009\u51fa\u4e24\u4e2a\u4e0d\u76f8\u90bb\u533a\u95f4\uff08\u6ce8\u610f\u4ec5\u4ec5\u4e0d\u76f8\u4ea4\u662f\u4e0d\u591f\u7684\uff0c\u90a3\u6837\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7aef\u70b9\u91cd\u5408\uff09\uff0c\u4f7f\u5f97\u5f02\u6216\u548c\u4e4b\u548c\u6700\u5927\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u95ee\u9898\uff0c\u8bb0 $s_i$ \u4e3a $w_i$ \u7684\u524d\u7f00\u5f02\u6216\u548c\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u987a\u5e8f\u5c06\u6240\u6709 $s_i$ \u52a0\u5165\u4e00\u4e2a 0-1 Trie\uff0c\u6c42\u51fa\u6240\u6709 $pre_i$ \u8868\u793a $[1,i]$ \u4e2d\u9009\u62e9\u4e24\u4e2a $s_i$ \u7684\u6700\u5927\u5f02\u6216\u548c\u3002\u540c\u7406\u5012\u5e8f\u63d2\u5165 0-1 Trie \u53ef\u4ee5\u6c42\u51fa $suc_i$ \u8868\u793a $[i,n]$ \u4e2d\u9009\u62e9\u4e24\u4e2a $s_i$ \u7684\u6700\u5927\u5f02\u6216\u548c\u3002\u7136\u540e\u679a\u4e3e\u5206\u754c\u70b9 $i$\uff0c\u6c42 $\\max(pre_{i-1}+suc_{i+1})$ \u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log W)$\uff0c\u5176\u4e2d $W=\\max(w_i)$\uff0c\u53ef\u4ee5\u89e3\u51b3\u94fe\u5f0f\u6570\u636e\uff0c\u7ed3\u5408\u7b97\u6cd5 $2$ \u53ef\u83b7\u5f97 $50\\%$ \u7684\u5206\u6570\u3002 \n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN=30010,B=30;\nint n,tot=1,x,y,z,ans,s[MAXN],pre[MAXN],suf[MAXN],sz[MAXN<<5],ch[MAXN<<5][2];\nvoid ins (int x,int v) {\n\tint p=1;\n\tsz[1]+=v;\n\tfor (int i=B;i>=0;i--) {\n\t\tint tmp=((x>>i)&1);\n\t\tif (!ch[p][tmp]) {ch[p][tmp]=++tot;}\n\t\tp=ch[p][tmp];\n\t\tsz[p]+=v;\n\t}\n\treturn;\n}\nint query (int x) {\n\tint p=1,res=0;\n\tfor (int i=B;i>=0;i--) {\n\t\tint tmp=((x>>i)&1);\n\t\tif (sz[ch[p][tmp^1]]) {p=ch[p][tmp^1],res+=(1<<i);}\n\t\telse {p=ch[p][tmp];}\n\t}\n\treturn res;\n}\nint main () {\n\tscanf(\"%d\",&n);\n\tins(0,1);\n\tfor (int i=1;i<=n-1;i++) {\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\ts[i]=s[i-1]^z;\n\t\tpre[i]=max(pre[i-1],query(s[i]));\n\t\tins(s[i],1);\n\t}\n\tmemset(sz,0,sizeof(sz));\n\tmemset(ch,0,sizeof(ch));\n\ttot=1;\n\tins(0,1);\n\tfor (int i=n-1;i>=1;i--) {\n\t\ts[i]=s[i+1]^(s[i]^s[i-1]);\n\t\tsuf[i]=max(suf[i+1],query(s[i]));\n\t\tins(s[i],1);\n\t}\n\tfor (int i=1;i<=n-1;i++) {ans=max(ans,pre[i-1]+suf[i+1]);}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n------\n\n#### \u7b97\u6cd5 $4$\uff1a\uff08$100\\%$\uff0c\u56de\u6eda\u83ab\u961f+0-1 Trie\uff09\n\n~~\u89c2\u5bdf\u6570\u636e\u8303\u56f4\u4e3a $n\\leq 2\\times 10^4$\uff0c\u731c\u6d4b\u51fa\u9898\u4eba\u7684\u5185\u5fc3\uff0c\u53ef\u80fd\u9700\u8981\u4e00\u4e2a\u5e26\u6839\u53f7\u590d\u6742\u5ea6\u7684\u7b97\u6cd5\u3002~~\n\n\u6811\u4e0a\u95ee\u9898\u76f4\u63a5\u89e3\u51b3\u662f\u4e0d\u65b9\u4fbf\u7684\uff0c\u53ef\u4ee5\u653e\u5230\u5e8f\u5217\u4e0a\u8003\u8651\uff1a\n\n\u6211\u4eec\u8981\u4ece\u679a\u4e3e\u7684 $l$ \u7684\u5b50\u6811\u5185\u5916\u5404\u9009\u51fa\u4e00\u5bf9\u70b9\uff0c\u5206\u522b\u7684\u5f02\u6216\u548c\u6700\u5927\u3002\u5982\u679c\u6211\u4eec\u5c06\u70b9\u6309\u7167 DFN \u6392\u6210\u4e00\u4e2a\u5e8f\u5217\uff0c\u90a3\u4e48 $l$ \u7684\u5b50\u6811\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u8bbe\u4e3a $[x_l,y_l]$\uff0c\u4e8e\u662f\u6211\u4eec\u95ee\u9898\u5c31\u53d8\u6210\u4e86\uff1a\n\n1. \u4ece $[x_l,y_l]$ \u4e2d\u9009\u51fa\u4e00\u5bf9\u6570\uff0c\u5f02\u6216\u548c\u6700\u5927\uff1b\n2. \u4ece $[1,x_l-1]\\cup [y_l+1,n]$ \u4e2d\u9009\u4e00\u5bf9\u6570\uff0c\u5f02\u6216\u548c\u6700\u5927\u3002\n\n\u4e24\u8005\u4e92\u4e0d\u5e72\u6270\uff0c\u53ef\u4ee5\u770b\u6210\u4e24\u4e2a\u4efb\u52a1\u6765\u505a\u3002\n\n\u8fd9\u4e24\u4e2a\u95ee\u9898\u90fd\u6709\u4e00\u4e2a\u663e\u8457\u7684\u7279\u70b9\uff0c\u5982\u679c\u8981\u52a0\u4e00\u4e2a\u6570\uff0c\u5bb9\u6613\u66f4\u65b0\u7b54\u6848\uff1b\u4f46\u5982\u679c\u8981\u5220\u4e00\u4e2a\u6570\uff0c\u4e0d\u5bb9\u6613\u66f4\u65b0\u7b54\u6848\u3002\u4e5f\u5c31\u662f\u8bf4\uff1a\u4ee5\u7b2c\u4e00\u95ee\u4e3a\u4f8b\uff0c\u4ece $[x,y]$ \u7684\u7b54\u6848\u6269\u5c55 $[x,y+1]$ \u662f\u7b80\u5355\u7684\uff0c\u53ea\u9700\u8981\u6c42 $y+1$ \u4e0e\u6240\u6709 $[x,y]$ \u5185\u7684\u6570\u7684\u5f02\u6216\u6700\u5927\u503c\u5373\u53ef\uff0c\u53ef\u4ee5\u7528 0-1 Trie \u89e3\u51b3\uff1b\u4f46\u662f\u8981\u4ece $[x,y]$ \u6269\u5c55\u5230 $[x,y-1]$ \u5c31\u5f88\u56f0\u96be\uff0c\u4e0d\u5bb9\u6613\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u8fd9\u7c7b\u95ee\u9898\u53ef\u4ee5\u7528\u56de\u6eda\u83ab\u961f\u6765\u89e3\u51b3\uff0c\u8fd8\u662f\u4ee5\u7b2c\u4e00\u95ee\u4e3a\u4f8b\uff1a\u5c06\u6240\u6709\u8be2\u95ee $[x_i,y_i]$ \u6309\u7167 $x_i$ \u7684\u4f4d\u7f6e\u5206\u5757\uff0c\u6bcf\u4e00\u5757\u5206\u522b\u8ba1\u7b97\u7b54\u6848\uff1a\n\n\u7531\u4e8e\u6211\u4eec\u53ea\u4f1a\u5904\u7406\u52a0\u6570\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u5728\u83ab\u961f\u7684\u6269\u5c55\u8fc7\u7a0b\u4e2d\u5e0c\u671b\u53ea\u589e\u4e0d\u51cf\uff0c\u6240\u4ee5\u5757\u5185\u6309\u7167 $y_i$ \u5347\u5e8f\u6392\u5e8f\u3002\u7528\u4e00\u4e2a Trie \u7ef4\u62a4\u5f53\u524d\u5757\u53f3\u7aef\u70b9 $R$ \u5230\u5f53\u524d\u5904\u7406\u5230\u7684 $y_i$ \u8fd9\u4e00\u6bb5\u7684\u7b54\u6848\u3002\u9047\u5230\u4e00\u4e2a\u8be2\u95ee $[x_i,y_i]$ \u65f6\uff0c\u5148\u5c06\u53f3\u7aef\u70b9\u63a8\u5230 $y_i$\uff0c\u5c06\u9047\u5230\u7684\u6570\u52a0\u5230 Trie \u4e2d\uff0c\u7136\u540e\u5148\u8bb0\u5f55\u4e00\u4e2a\u5f53\u524d\u7684\u7b54\u6848 $ans$\uff08\u5373\u533a\u95f4 $[R,y_i]$ \u7684\u6700\u5927\u5f02\u6216\u548c\uff09\uff0c\u7136\u540e\u5c06\u5de6\u7aef\u70b9\u4ece $R$ \u4e0d\u65ad\u5411\u5de6\u63a8\u5230 $x_i$\uff0c\u540c\u6837\u5c06\u9047\u5230\u7684\u6570\u52a0\u5165 Trie\uff0c\u7136\u540e\u7edf\u8ba1\u7b54\u6848\uff0c\u8fd9\u6837\u4e00\u4e2a\u8be2\u95ee\u5c31\u89e3\u51b3\u4e86\uff0c\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u5220\u9664\u4e00\u4e2a\u6570\uff0c\u6240\u4ee5\u6bcf\u505a\u5b8c\u4e00\u4e2a\u8be2\u95ee\uff0c\u5c31\u8981\u5c06\u5de6\u7aef\u70b9\u91cd\u65b0\u63a8\u56de $R$ \u6765\u5b9e\u73b0\u64a4\u9500\uff0c\u8fd9\u6837\u5f53\u524d\u533a\u95f4\u7b54\u6848\u4f9d\u7136\u662f $ans$\uff0c\u63a5\u4e0b\u6765\u53ef\u4ee5\u66f4\u65b0\u3002\n\n\u7b2c\u4e8c\u95ee\u5904\u7406\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u53ea\u662f\u8fd9\u6b21\u6211\u4eec\u5bb9\u6613\u4ece $[x,y]$ \u7684\u7b54\u6848\u63a8\u5f97 $[x,y-1]$ \u7684\u7b54\u6848\u4f46\u5f88\u96be\u63a8\u5f97 $[x,y+1]$ \u7684\u7b54\u6848\uff0c\u6240\u4ee5\u540c\u4e00\u5757\u5185\u6309 $y_i$ \u964d\u5e8f\u6392\u5e8f\uff0cTrie \u7ef4\u62a4\u5f53\u524d\u5757\u5de6\u7aef\u70b9 $L$ \u81f3\u5f53\u524d\u7684 $y_i$ \u7684\u6700\u5927\u5f02\u6216\u548c\uff0c\u5176\u4ed6\u6b65\u9aa4\u7c7b\u4f3c\u3002\n\n\u8bbe\u5757\u957f\u4e3a $S$\uff0c\u5219\u603b\u5171\u6709 $\\frac{n}{S}$ \u5757\uff0c\u6bcf\u4e00\u5757\u5185\u53f3\u7aef\u70b9\u6709\u5e8f\uff0c\u6240\u4ee5\u79fb\u52a8\u662f $O(n)$ \u7684\uff1b\u5de6\u7aef\u70b9\u53ea\u5728\u540c\u4e00\u5757\u5185\u79fb\u52a8\uff0c\u6240\u4ee5\u662f$O(q\\times S)$\uff0c\u5176\u4e2d $q$ \u4e3a\u8be2\u95ee\u4e2a\u6570\uff0c\u5728\u8fd9\u91cc\u6bcf\u4e2a\u5b50\u6811\u90fd\u95ee\u4e00\u6b21\uff0c\u6240\u4ee5\u6709 $\\sum q=n$\u3002\u53c8\u56e0\u4e3a\u6bcf\u6b21\u79fb\u52a8\u9700\u8981\u52a0\u4e00\u4e2a\u6570\u5230 Trie \u4e2d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(\\log n)$\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n\\frac{n}{S}+nS)\\log n)$\uff0c\u53d6 $S=\\sqrt n$ \u65f6\u53d6\u5230\u6700\u4f18\u590d\u6742\u5ea6\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u628a DFS \u5e8f\u590d\u5236\u4e24\u500d\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u95ee\u9898\u4e5f\u53d8\u6210\u4e86\u4e00\u4e2a\u8fde\u7eed\u533a\u95f4\uff0c\u4f46\u662f\u8fd9\u6837\u505a\u4f1a\u964d\u4f4e\u6548\u7387\uff0c\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u3002\n\n\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\sqrt n\\log W)$\uff0c\u5176\u4e2d $W=\\max(w_i)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN=30010,B=30;\nstruct Query {\n\tint l,r,id,bl;\n}q[MAXN];\nint n,x,y,z,eg,cnt,res,sq,tot=1,w,l,r,mxor,fr,to,ans[MAXN],hd[MAXN],ver[2*MAXN],nx[2*MAXN],edge[2*MAXN];\nint dfn[MAXN],ed[MAXN],ps[MAXN],dep[MAXN],val[MAXN],pref[MAXN],sz[MAXN<<5],edn[MAXN<<5],ch[MAXN<<5][2];\nbool cmp1 (Query a,Query b) {return (a.bl==b.bl?a.r<b.r:a.bl<b.bl);}\nbool cmp2 (Query a,Query b) {return (a.bl==b.bl?a.r>b.r:a.bl<b.bl);}\nvoid add_edge (int x,int y,int z) {\n\tver[++eg]=y;\n\tnx[eg]=hd[x],edge[eg]=z;\n\thd[x]=eg;\n\treturn;\n}\nvoid dfs (int x,int fa) {\n\tdfn[x]=ed[x]=++cnt;\n\tps[cnt]=x,val[cnt]=dep[x];\n\tfor (int i=hd[x];i;i=nx[i]) {\n\t\tif (ver[i]==fa) {continue;}\n\t\tdep[ver[i]]=dep[x]^edge[i];\n\t\tdfs(ver[i],x);\n\t\ted[x]=ed[ver[i]];\n\t}\n\treturn;\n}\nvoid ins_pos (int x,int v,int pos) {\n\tint p=1;\n\tsz[1]+=v;\n\tfor (int i=B;i>=0;i--) {\n\t\tint tmp=((x>>i)&1);\n\t\tif (!ch[p][tmp]) {ch[p][tmp]=++tot;}\n\t\tp=ch[p][tmp];\n\t\tsz[p]+=v;\n\t}\n\tedn[p]=pos;\n\treturn;\n}\nint query_pos (int x) {\n\tint p=1,res=0;\n\tfor (int i=B;i>=0;i--) {\n\t\tint tmp=((x>>i)&1);\n\t\tif (sz[ch[p][tmp^1]]) {p=ch[p][tmp^1];}\n\t\telse {p=ch[p][tmp];}\n\t}\n\treturn edn[p];\n}\nvoid ins (int x,int v) {\n\tint p=1;\n\tsz[1]+=v;\n\tfor (int i=B;i>=0;i--) {\n\t\tint tmp=((x>>i)&1);\n\t\tif (!ch[p][tmp]) {ch[p][tmp]=++tot;}\n\t\tp=ch[p][tmp];\n\t\tsz[p]+=v;\n\t}\n\treturn;\n}\nint query (int x) {\n\tint p=1,res=0;\n\tfor (int i=B;i>=0;i--) {\n\t\tint tmp=((x>>i)&1);\n\t\tif (sz[ch[p][tmp^1]]) {p=ch[p][tmp^1],res+=(1<<i);}\n\t\telse {p=ch[p][tmp];}\n\t}\n\treturn res;\n}\nint main () {\n\tscanf(\"%d\",&n);\n\tsq=pow(n,0.5);\n\tfor (int i=1;i<=n-1;i++) {\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd_edge(x,y,z),add_edge(y,x,z);\n\t}\n\tdfs(1,0);\n\tfor (int i=1;i<=n;i++) {\n\t\tins_pos(val[i],1,i);\n\t\tint tpos=query_pos(val[i]);\n\t\tint tmp=val[i]^val[tpos];\n\t\tpref[i]=max(pref[i-1],tmp);\n\t\tif (tmp>mxor) {mxor=tmp,l=tpos,r=i;}\n\t}\n\tfor (int i=1;i<=n;i++) {q[i].l=dfn[i],q[i].r=ed[i],q[i].id=i,q[i].bl=(dfn[i]-1)/sq+1;}\n\tsort(q+1,q+n+1,cmp1);\n\tmemset(sz,0,sizeof(sz));\n\tmemset(ch,0,sizeof(ch));\n\ttot=1;\n\tw=r=0,l=1;\n\tfor (int i=1;i<=n;i++) {\n\t\tif (q[i].bl!=q[i-1].bl) {\n\t\t\twhile (l<q[i].bl*sq+1) {\n\t\t\t\tif (l<=r) {ins(val[l],-1);}\n\t\t\t\tl++;\n\t\t\t}\n\t\t\twhile (r>q[i-1].bl*sq) {\n\t\t\t\tif (l<=r) {ins(val[r],-1);}\n\t\t\t\tr--;\n\t\t\t}\n\t\t\tw=0;\n\t\t}\n\t\twhile (r<q[i].r) {\n\t\t\tr++;\n\t\t\tif (l<=r) {ins(val[r],1);w=max(w,query(val[r]));}\n\t\t}\n\t\tint tmp=w;\n\t\twhile (l>q[i].l) {\n\t\t\tl--;\n\t\t\tif (l<=r) {ins(val[l],1);w=max(w,query(val[l]));}\n\t\t}\n\t\tans[q[i].id]+=w;\n\t\twhile (l<q[i].bl*sq+1) {\n\t\t\tif (l<=r) {ins(val[l],-1);}\n\t\t\tl++;\n\t\t}\n\t\tw=tmp;\n\t}\n\tsort(q+1,q+n+1,cmp2);\n\tmemset(sz,0,sizeof(sz));\n\tmemset(ch,0,sizeof(ch));\n\ttot=1;\n\tw=0,l=1,r=n;\n\tfor (int i=1;i<=n;i++) {\n\t\tif (q[i].bl!=q[i-1].bl) {\n\t\t\twhile (r<n) {\n\t\t\t\tr++;\n\t\t\t\tif (l<=r) {ins(val[r],-1);}\n\t\t\t}\n\t\t\twhile (l<(q[i].bl-1)*sq+1) {\n\t\t\t\tif (l<=r) {ins(val[l],1);}\n\t\t\t\tl++;\n\t\t\t}\n\t\t\tw=pref[q[i-1].bl*sq];\n\t\t}\n\t\tif (l>fr&&r<to) {ans[q[i].id]+=mxor;continue;}\n\t\twhile (r>q[i].r) {\n\t\t\tif (l<=r) {ins(val[r],1);w=max(w,query(val[r]));}\n\t\t\tr--;\n\t\t}\n\t\tint tmp=w;\n\t\twhile (l<q[i].l) {\n\t\t\tif (l<=r) {ins(val[l],1);w=max(w,query(val[l]));}\n\t\t\tl++;\n\t\t}\n\t\tans[q[i].id]+=w;\n\t\twhile (l>(q[i].bl-1)*sq+1) {\n\t\t\tl--;\n\t\t\tif (l<=r) {ins(val[l],-1);}\n\t\t}\n\t\tw=tmp;\n\t}\n\tfor (int i=2;i<=n;i++) {res=max(res,ans[i]);}\n\tprintf(\"%d\\n\",res);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1580611127,
        "uid": 113546,
        "name": "ix35",
        "ccfLevel": 10,
        "title": "[MdOI2020] T5 Path \u5b98\u65b9\u9898\u89e3"
    },
    {
        "content": "## P6072 \u300eMdOI R1\u300fPath\n\n#### \u601d\u8def\n\n\u8fd9\u91cc\u5199\u4e00\u4e2a\u5355 log \u7684\u505a\u6cd5\u3002\n\n\u8fd9\u91cc\u53d7Ynoi\u7684\u542f\u53d1\uff08\u522b\u95ee\u54ea\u9053\uff09\uff0c\u6211\u4eec\u8003\u8651\u627e\u5230\u4e00\u4e2a\u5206\u5272\u8fb9\u4f7f\u5f97\u5206\u6210\u7684\u4e24\u68f5\u6811\u7684\u8def\u5f84\u8fb9\u6743\u5f02\u6216\u548c\u7684\u548c\u6700\u5927\uff0c\u56e0\u4e3a\u5f02\u6216\u7684\u7279\u6b8a\u6027\u8d28\uff08\u4e24\u4e2a\u5f02\u6216\u7b49\u4e8e0\uff09\uff0c\u6211\u4eec\u5bf9\u4e00\u6761\u7b80\u5355\u8def\u5f84\u5dee\u5206\uff0c\u5e76\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u5230\u5f02\u6216\u548c\uff0c\u8fd9\u6837\u5373\u628a\u8fb9\u6743\u95ee\u9898\u53d8\u6210\u70b9\u6743\u95ee\u9898\uff0c\u800c\u8be2\u95ee\u4e00\u6761\u8def\u5f84\u5c31\u662f  $\\mathcal O(1)$ \u7684\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u6210  $\\mathcal O (n^5)$\u3002\n\n\u7136\u540e\u6211\u4eec\u627e\u5230\u4efb\u610f\u4e00\u5bf9\u5168\u5c40\u7684\u5f02\u6216\u548c\u6700\u5927\u7684\u70b9\u5bf9 $(X,Y)$\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5\u75280-1Trie\u89e3\u51b3\uff0c\u90a3\u4e48\u53ea\u8981\u5206\u5272\u8fb9\u4e0d\u5728\u8fd9\u6761\u5168\u5c40\u5f02\u6216\u548c\u6700\u5927\u7684\u8def\u5f84\u4e0a\uff0c\u90a3\u4e48\u5c31\u4e00\u5b9a\u6709\u4e00\u68f5\u5b50\u6811\u5b8c\u5168\u5305\u62ec\u8fd9\u6761\u8def\u5f84\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u53e6\u4e00\u68f5\u5b50\u6811\u5373\u53ef\uff0c\u8fd9\u90e8\u5206\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^3)$\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5f31\u5316\u4e00\u4e0b\u95ee\u9898\uff0c\u6211\u4eec\u5728\u65ad\u8fb9\u4e4b\u540e\u7684\u56fe\u5b9e\u9645\u4e0a\u662f\u6c42\u4e00\u68f5\u5b50\u6811\u5185\u7684\u5f02\u6216\u6700\u5927\u503c\u52a0\u4e00\u68f5\u5b50\u6811\u5916\u7684\u5f02\u6216\u6700\u5927\u503c\uff0c\u6211\u4eec\u5148\u8003\u8651\u5b50\u6811\u5916\u7684\u5f02\u6216\u6700\u5927\u503c\u3002\n\n\u6211\u4eec\u8003\u8651\u6700\u5f00\u59cb\u627e\u5230\u7684\u70b9\u5bf9 $(X,Y)$ \uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5bf9\u4e0d\u5728\u5b50\u6811\u5916\u5f53\u4e14\u4ec5\u5f53\u679a\u4e3e\u7684\u5206\u5272\u8fb9\u5728 $X \\rightarrow RT$  \u7684\u8def\u5f84\u4e0a\u6216\u5728 $Y \\rightarrow RT$  \u7684\u8def\u5f84\u4e0a \uff08$RT$ \u5373\u4ee3\u8868\u6839\uff09\uff0c\u5982\u679c\u6211\u4eec\u4ece\u6839\u8282\u70b9\u9010\u6e10\u5f80\u4e0b\u8df3\uff0c\u90a3\u5b9e\u9645\u4e0a\u5728\u5b50\u6811\u5916\u7684\u70b9\u662f\u5728**\u9010\u6e10\u589e\u52a0\u7684**\uff0c\u4e5f\u5c31\u662f\u8bf4\u539f\u6765\u5728\u5b50\u6811\u5916\u7684\u8282\u70b9**\u4e00\u5b9a\u4e00\u76f4\u5728**\u5b50\u6811\u5916\uff0c\u539f\u5148\u52a0\u51650-1Trie\u7684\u8282\u70b9\u5e76\u4e0d\u7528\u5220\u9664\uff0c\u8fd9\u6837\u6211\u4eec\u5373\u53ef $O(n \\log w)$ \u6c42\u51fa\u6bcf\u6761\u8fb9\u5b50\u6811\u5916\u7684\u6700\u5927\u5f02\u6216\u548c\u4e86\u3002\n\n\u81f3\u4e8e\u5b50\u6811\u5185\u7684\u5f02\u6216\u6700\u5927\u503c\u53ef\u4ee5\u7528\u5e26\u6709\u53cc $\\log$ \u7684\u542f\u53d1\u5f0f\u5408\u5e76\uff08~~\u90a3\u6211\u4eec\u4e0a\u9762\u5199\u4e86\u534a\u5929\u7684\u5355log\u4e0d\u5c31\u6ca1\u7528\u4e86\uff1f~~\uff09,\u5176\u5b9e\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u6c42\u51fa\u6bcf\u6761\u8fb9\u5bf9\u5e94\u7684\u5b50\u6811\u5185\u7684\u503c\uff0c\u56e0\u4e3a\u5b50\u6811\u5916\u7684\u6700\u5927\u503c\u5df2\u7ecf\u56fa\u5b9a\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6700\u5927\u5316\u5b50\u6811\u5185\u7684\u503c\u5373\u53ef\uff0c\u90a3\u5982\u679c\u6211\u4eec\u4e00\u68f5\u5b50\u6811\u5185\u7684\u8282\u70b9\u8d8a\u591a\u4e5f\u5c31\u610f\u5473\u7740\u7b54\u6848\u53ef\u80fd\u66f4\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u627e\u5230\u4e0e\u94fe $X\\rightarrow Y$ \u548c\u94fe $Lca(X,Y)\\rightarrow RT$ \u7684\u6240\u6709\u76f8\u90bb\u7684\u5b50\u6811\u7684\u5f02\u6216\u6700\u5927\u503c\u5373\u53ef\uff0c\u8fd9\u4e9b\u5b50\u6811\u7684\u4ea4\u96c6\u4e00\u5b9a\u4e3a\u7a7a\uff0c\u6211\u4eec\u5c31\u628a\u539f\u5148\u6bcf\u4e2a\u70b9\u90fd\u9700\u8981\u52a0\u5165 $\\log$ \u6b210-1Trie\u4f18\u5316\u6210\u53ea\u52a0\u5165\u4e00\u6b21\uff0c\u5904\u7406\u5b50\u6811\u5185\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u4e3a $O(n \\log w)$ \uff08\u5e38\u6570\u5c31\u770b\u4f60\u5199\u7684\u4e11\u4e0d\u4e11\u4e86\uff09\u3002\n\n\u6700\u540e\u4e00\u79cd\u60c5\u51b5\uff0c\u5373\u5206\u5272\u8fb9\u5728\u8def\u5f84 $X\\rightarrow Y$ \u4e0a\uff0c\u5176\u4e2d\u5b50\u6811\u5916\u7684\u60c5\u51b5\u6211\u4eec\u5df2\u7ecf\u8003\u8651\u5b8c\u4e86\uff0c\u800c\u5b50\u6811\u5185\u7684\u5219\u53ef\u4ee5\u4ece\u4e0b\u5f80\u4e0a\u8df3\uff0c\u90a3\u4e0d\u96be\u53d1\u73b0\uff0c\u5b50\u6811\u5185\u7684\u8282\u70b9\u4e2a\u6811\u4ecd\u7136**\u5355\u8c03\u9012\u589e**\uff0c\u6211\u4eec\u5206\u522b\u4ece $X$\uff0c$Y$ \u5404\u5f80\u4e0a\u8df3\u4e00\u6b21\uff0c\u5373\u53ef\u6c42\u51fa\u6574\u4e2a\u56fe\u7684\u5b50\u6811\u5916\u4ee5\u53ca\u5b50\u6811\u5185\u7684\u5f02\u6216\u548c\u7684\u6700\u5927\u503c\u4e86\u3002\n\n\u6211\u4eec\u6700\u540e\u5206\u6790\u4e00\u6ce2\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n \\log w)$\uff0c\u800c\u6570\u636e\u51fa\u5230\u4e86 $3\\times10^4$ \u6240\u4ee5 $\\log n$ \u6240\u5e26\u6765\u7684\u5e38\u6570\u4e0d\u660e\u663e\uff08\u5927\u698214\u591a\u4e00\u70b9\u6837\u5b50\uff0c\u5b9e\u9645\u4e0a\u4f1a\u5c0f\u4e00\u4e9b\uff09\uff0c\u800c\u8fd9\u79cd\u65b9\u6cd5\u4e00\u4e2a\u70b9\u8fdb0-1Trie\u7684\u6b21\u6570\u4ecd\u7136\u5e26\u6765\u4e00\u4e2a\u5de8\u5927\u7684\u5e38\u6570\uff0c\u4e0d\u8fc7\u4ecd\u7136\u8dd1\u7684\u98de\u5feb\uff5e\n\n------\n\n#### code\n\n~~\u6211\u8ba4\u4e3a\u8fd9\u7801\u98ce\u8fd8\u662f\u5f88\u53ef\u8bfb\u7684~~\n\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 3e4 + 10;\nconst int M = 1e6 + 10;\nconst int mods = 1e9 + 7;\nconst int INF = 0x3f3f3f3f;\ninline int read ( )\n{\n    int x = 0, f = 1;\n    char ch = getchar ( );\n    while (ch < '0' || ch > '9') {if (ch == '-') f = - 1; ch = getchar ( );}\n    while (ch >= '0' && ch <='9') {x = (x << 1) + (x << 3) + (ch ^ 48); ch = getchar ( );}\n    return x * f;\n}\nint n, root = 1;\nstruct edge {\n    int ver, nxt, val;\n}e[N << 1];\nint head[N], tot;\nvoid add_edge (int u, int v, int w) { e[++tot] = (edge) {v, head[u], w}; head[u] = tot;}\nint mx, x1, x2;\nstruct Trie {\n    int ch[M][2], val[M], pos[M], cnt;\n    void init ()\n    {\n        for (int i = 1; i <= cnt; i++) ch[i][0] = ch[i][1] = 0; // \u6ce8\u610f\u8fd9\u91cc\u4e0d\u8981\u76f4\u63a5memset\n        cnt = 1;\n    }\n    void find (int x, int Pos)\n    {\n        int p = 1, res = 0;\n        for (int i = 31; i >= 0; i--) { bool d = (x >> i) & 1; if (ch[p][d ^ 1]) p = ch[p][d ^ 1], res += (1 << i); else p = ch[p][d]; }\n        if (mx < res) mx = res, x1 = pos[p], x2 = Pos;\n    }\n    void insert(int x, int Pos)\n    {\n        int p = 1;\n        for(int i = 31; i >= 0; i--) { bool d = (x >> i) & 1; if(!ch[p][d]) ch[p][d] = ++cnt; p = ch[p][d]; }\n        pos[p] = Pos, val[p] = x;\n    }\n}tree1, tree2;\nint val[N], fa[N], son[N];\nint f1[N], lca; // f1 \u6570\u7ec4\u5373\u8868\u793a\u5b50\u6811\u5916\u7684\u6700\u5927\u5f02\u6216\u503c\nint ans, ans1;\nvoid dfs1 (int u, int f, int x)\n{\n    fa[u] = f; val[u] = x;\n    for (int i = head[u]; i; i = e[i].nxt)\n        if (e[i].ver != f)\n            dfs1 (e[i].ver, u, x ^ e[i].val);\n}\nvoid dfs2 (int u, int f)\n{\n    tree2.insert (val[u], u); tree2.find (val[u], u);\n    for (int i = head[u]; i; i = e[i].nxt)\n        if (e[i].ver != f)\n            dfs2 (e[i].ver, u);\n}\nbool vis[N];\nint getlca (int x, int y) // \u5c31\u627e\u4e00\u6b21\u6240\u4ee5\u6ca1\u5199\u500d\u589e\n{\n    while (x) vis[x] = true, x = fa[x];\n    while (!vis[y]) vis[y] = true, y = fa[y];\n    return y;\n}\nvoid solve (int x) // \u5148\u5904\u7406\u5b50\u6811\u5916\u7684\u6700\u5927\u5f02\u6216\u503c\n{\n    int now = x;\n    while (now != root) son[fa[now]] = now, now = fa[now];\n    now = root; mx = 0;\n    while (now)\n    {\n        f1[now] = mx; tree2.insert (val[now], now); tree2.find (val[now], now);\n        for (int i = head[now]; i; i = e[i].nxt)\n            if (e[i].ver != son[now] && e[i].ver != fa[now]) dfs2 (e[i].ver, now);\n        now = son[now];\n    }\n}\nvoid solve2 (int x) // \u8def\u5f84 x -> y \u5728\u5b50\u6811\u5916\n{\n    int now = x;\n    while (now)\n    {\n        for (int i = head[now]; i; i = e[i].nxt)\n            if (!vis[e[i].ver] && e[i].ver != fa[now])\n            {\n                tree2.init (); mx = 0; // \u6ce8\u610f\u8fd9\u91cc\u6e05\u7a7a\u7684\u5747\u644a\u590d\u6742\u5ea6\u662f O(n) \u7684\n                dfs2 (e[i].ver, now);\n                ans = max (ans, mx + ans1);\n            }\n        now = fa[now];\n    }\n}\nvoid solve3 (int x) // \u5206\u5272\u8fb9\u5728\u8def\u5f84\u4e0a\n{\n    int now = x; mx = 0;\n    tree2.init ();\n    while (now != lca)\n    {\n        tree2.insert (val[now], now); tree2.find (val[now], now);\n        for (int i = head[now]; i; i = e[i].nxt)\n            if (!vis[e[i].ver] && e[i].ver != fa[now]) dfs2 (e[i].ver, now);\n        ans = max (ans, f1[now] + mx);\n        now = fa[now];\n    }\n}\nsigned main()\n{\n    n = read ( );\n    for (int i = 1, u, v, w; i < n; i++)\n    {\n        u = read ( ), v = read ( ), w = read ( );\n        add_edge (u, v, w); add_edge (v, u, w);\n    }\n    dfs1 (1, 0, 0); mx = 0;\n    tree1.cnt = 1;\n    for (int i = 1; i <= n; i++) tree1.insert (val[i], i), tree1.find (val[i], i);\n    for (int i = 1; i <= n; i++) f1[i] = mx;\n    int x = x1, y = x2; ans1 = mx; lca = getlca (x, y);\n    tree2.cnt = 1; solve (x); tree2.init (); solve (y);\n    ans = max (ans, f1[lca] + (lca == root ? 0 : ans1));\n  \t// \u8def\u5f84 x -> y \u5728\u5b50\u6811\u5185\uff0c\u6839\u636e\u8d2a\u5fc3\u76f4\u63a5\u627elca\u5373\u53ef\n  \t// \u6ce8\u610f\u9700\u8981\u628a lca \u4e3a\u6839\u7684\u60c5\u51b5\u7279\u5224\u6389\n    solve2 (x); solve2 (y);\n    solve3 (x); solve3 (y);\n    printf (\"%d\\n\", ans);\n    return 0;\n} // The Dark Emperor\n```",
        "postTime": 1635421815,
        "uid": 177837,
        "name": "violin_wyl",
        "ccfLevel": 6,
        "title": "P6072 \u300eMdOI R1\u300fPath"
    },
    {
        "content": "QwQ \u539f\u5b9a\u9a8c\u9898\u4eba\u6765\u53d1\u4e2a\u9898\u89e3\u3002~~\u56e0\u4e3a\u6211\u592a\u83dc\u8dd1\u8def\u4e86\u6240\u4ee5\u9a8c\u9898\u4eba\u5c31\u53d8\u6210Kubic\u4e86\u3002~~   \n\u4e00\u53e5\u8bdd\u9898\u610f\uff1a\u9009\u4e24\u6761\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84\uff0c\u4f7f\u5176\u8fb9\u6743\u7684\u5f02\u6216\u548c\u7684\u548c\u6700\u5927\u3002   \n\u9996\u5148\u5206\u6790\u4e00\u4e0b\u4e24\u6761\u8def\u5f84\u4e0d\u76f8\u4ea4\u7684\u6027\u8d28\u3002   \n\u8bbe\u8def\u5f841\u7684\u4e24\u4e2a\u7aef\u70b9\u662f$a,b$\uff0c\u5b83\u4eec\u7684$\\text{lca}$\u662f$p$\u3002\u8def\u5f842\u7684\u4e24\u4e2a\u7aef\u70b9\u662f$c,d$\uff0c\u5b83\u4eec\u7684$\\text{lca}$\u662f$q$\u3002  \n\u60c5\u51b51\uff1a\u5f53$c$\u5728\u5b50\u6811$p$\u5185\u90e8\u800c$d$\u5728\u5b50\u6811$p$\u5916\u90e8\u65f6\uff0c$c \\rightarrow d$\u4e00\u5b9a\u4e0e$a \\rightarrow b$\u76f8\u4ea4\u3002  \n\u60c5\u51b52\uff1a\u5f53$c$\u548c$d$\u90fd\u5728\u5b50\u6811$p$\u5916\u90e8\u65f6\uff0c$c \\rightarrow d$\u4e00\u5b9a\u4e0d\u4e0e$a \\rightarrow b$\u76f8\u4ea4\u3002  \n\u5f53$c,d$\u90fd\u5728\u5b50\u6811$p$\u5185\u90e8\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u53cd\u8fc7\u6765\u8ba8\u8bba$a \\rightarrow b$\u4e0e$q$\u7684\u5173\u7cfb\u3002    \n\u60c5\u51b53\uff1a\u5f53$a$\u5728\u5b50\u6811$q$\u5185\u90e8\u800c$b$\u5728\u5b50\u6811$q$\u5916\u90e8\u65f6\uff0c\u540c\u60c5\u51b51\u3002  \n\u60c5\u51b54\uff1a\u5f53$a$\u548c$b$\u90fd\u5728\u5b50\u6811$q$\u5916\u90e8\u65f6\uff0c\u540c\u60c5\u51b52\u3002  \n\u60c5\u51b55\uff1a\u5f53$a$\u548c$b$\u90fd\u5728\u5b50\u6811$q$\u5185\u90e8\u65f6\uff0c$p$\u4e0e$q$\u5fc5\u4ea4\u4e0e\u4e00\u70b9\uff0c\u6545\u8fd92\u6761\u8def\u5f84\u4e00\u5b9a\u76f8\u4ea4\u3002   \n\u6240\u4ee5\u5982\u679c2\u6761\u8def\u5f84\u4e0d\u76f8\u4ea4\u5219**\u8def\u5f841\u4e00\u5b9a\u5728\u67d0\u4e00\u5b50\u6811\u5185\uff0c\u8def\u5f842\u4e00\u5b9a\u5728\u8fd9\u4e2a\u5b50\u6811\u5916**\u3002   \n\u63a5\u774040\u5206\u505a\u6cd5\u5c31\u4e00\u76ee\u4e86\u7136\u4e86\uff1a\u679a\u4e3e\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u679a\u4e3e\u5728\u8fd9\u4e2a\u5b50\u6811\u5185\u7684\u70b9\u548c\u8fd9\u4e2a\u5b50\u6811\u5916\u7684\u70b9\uff0c\u4f7f\u8fd9\u4e24\u90e8\u5206\u7684\u5f02\u6216\u548c\u6700\u5927\u3002\u53ef\u4ee5\u7528$01\\text{trie}$\u505a\u5230$\\mathcal{O}(n^2\\log \\{ \\max w_i\\})$\u3002  \n\u7ed3\u5408\u4e00\u4e0b\u94fe\u7684\u90e8\u5206\u5206\u53ef\u4ee5\u83b7\u5f97$60$\u5206\u7684\u597d\u6210\u7ee9\u3002   \n**\u63a5\u4e0b\u6765\u624d\u662f\u8fd9\u9898\u7684\u6838\u5fc3\uff0c\u4ece$60$\u5206\u5230\u6b63\u89e3\u7684\u8fc7\u5ea6\u3002**  \n\u8003\u8651\u628a\u95ee\u9898\u653e\u5728\u5e8f\u5217\u4e0a\uff0c\u8bbe$L(u)$\u8868\u793a\u5b50\u6811$u$\u7684\u5f00\u59cb$\\text{dfs}$\u5e8f\uff0c$R(u)$\u8868\u793a\u5b50\u6811$u$\u7684\u7ed3\u675f$\\text{dfs}$\u5e8f\u3002  \n\u5219\u5b50\u6811$u$\u5bf9\u5e94\u7684\u8be2\u95ee\u5c31\u662f\u5728$[L(u),R(u)]$\u9009\u51fa2\u4e2a\u5f02\u6216\u548c\u6700\u5927\u7684\u6570\uff0c\u5728$[1,L(u)-1] \\cup [R(u)+1,n]$\u4e2d\u9009\u51fa2\u4e2a\u5f02\u6216\u548c\u6700\u5927\u7684\u6570\u3002  \n\u53d1\u73b0\u8fd92\u4e2a\u533a\u95f4\u5e76\u4e0d\u8fde\u7eed\uff0c\u6bd4\u8f83\u9ebb\u70e6\u3002**\u4f46\u662f\u56e0\u4e3a\u8fd92\u4e2a\u533a\u95f4\u7684\u5e76\u76f8\u5f53\u4e8e\u4ece\u6574\u4e2a\u5e8f\u5217\u4e2d\u6316\u8d70\u4e86\u4e00\u6bb5\u51fa\u6765\uff0c\u6240\u4ee5\u628a\u8fd9\u4e2a\u5e8f\u5217\u590d\u5236\u4e00\u904d\u52a0\u5230\u672b\u5c3e\u4e00\u5b9a\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5b8c\u6574\u7684\u8fde\u7eed\u7684\u8986\u76d6\u6240\u6709\u4fe1\u606f\u7684\u533a\u95f4\u3002**  \n\u5230\u4e86\u8fd9\u91cc\u5176\u5b9e\u8fd9\u9053\u9898\u5c31\u7ed3\u675f\u4e86\uff0c\u6211\u4eec\u76f8\u5f53\u4e8e\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u521b\u9020\u51fa2\u4e2a\u8be2\u95ee\uff0c\u8fd9\u4e2a\u70b9\u7684\u7b54\u6848\u5c31\u662f\u8fd92\u4e2a\u8be2\u95ee\u5bf9\u5e94\u7684\u533a\u95f4\u7684\u6700\u5927\u5f02\u6216\u548c\u4e4b\u548c\u3002   \n\u53ef\u4ee5\u7528\u56de\u6eda\u83ab\u961f+$\\text{01trie}$\u505a\u5230$\\mathcal{O}(n\\sqrt{n}log \\{ \\max w_i \\})$\u3002    \n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n\nconst int N = 6e4 + 10;\nint n, m, i, j, k, tot, totq, p = 1, trie_tot = 1, SZ, Ans;\nint dfn[N], siz[N], bel[N], dis[N];\nint fir[N], we[N << 1], to[N << 1], nxt[N << 1]; \nint ch[N * 26][2], tag[N * 26], ans[N];\nstruct ques {\n  int l, r, id;\n  ques() { l = r = id = 0; }\n  ques(int _l, int _r, int i) {\n    l = _l, r = _r, id = i; \n  }\n  inline friend bool operator < (ques a, ques b) {\n    if (bel[a.l] == bel[b.l]) return a.r < b.r;\n    else return bel[a.l] < bel[b.l];\n  }\n} q[N << 1];  \ninline void adde(int u, int v, int w) {\n  static int ce = 0;\n  to[++ce] = v, we[ce] = w, nxt[ce] = fir[u], fir[u] = ce;\n}\ninline void insert(int a) {\n  int u = 1;\n  for (int i = 30; i >= 0; i--) {\n    bool v = (a >> i) & 1;\n    if (!ch[u][v]) ch[u][v] = ++trie_tot;\n    u = ch[u][v];\n    tag[u]++;\n  }\n}\ninline int query(int a) {\n  int u = 1, res = 0;\n  for (int i = 30; i >= 0; i--) {\n    bool v = (a >> i) & 1;\n    if (tag[ch[u][v ^ 1]]) res |= 1 << i, u = ch[u][v ^ 1];\n    else u = ch[u][v]; \n  }\n  return res;\n}\ninline void del(int a) {\n  int u = 1;\n  for (int i = 30; i >= 0; i--) {\n    bool v = (a >> i) & 1;\n    u = ch[u][v];\n    tag[u]--;\n  }\n}\nvoid dfs(int u, int par, int w) {\n  siz[u] = 1, dfn[u] = ++tot, dis[dfn[u]] = dis[dfn[par]] ^ w;\n  for (int i = fir[u], v; i; i = nxt[i]) \n    if ((v = to[i]) != par) {\n      int w = we[i];\n      dfs(v, u, w);\n      siz[u] += siz[v];\n    }\n}\ninline int calc(int l, int r) {\n  int res = 0;\n  for (int i = l; i <= r; i++) res = std::max(res, query(dis[i])), insert(dis[i]); \n  for (int i = l; i <= r; i++) del(dis[i]);\n  return res;\n}\ninline void solve(int x) {\n  int br = std::min(x * SZ, n), l = br + 1, r = br;\n  int _ans = 0;\n  for (; bel[q[p].l] == x; p++) {\n    int ql = q[p].l, qr = q[p].r;  \n    if (bel[qr] == x) { ans[q[p].id] += calc(ql, qr); continue; } \n    while (r < qr) _ans = std::max(_ans, query(dis[++r])), insert(dis[r]);\n    int rev = _ans;\n    while (l > ql) _ans = std::max(_ans, query(dis[--l])), insert(dis[l]);  \n    ans[q[p].id] += _ans;\n    while (l <= br) del(dis[l++]); _ans = rev;\n  }\n  while (r > br) del(dis[r--]);\n}\n\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1, u, v, w; i < n; i++) scanf(\"%d %d %d\",&u, &v, &w), adde(u, v, w), adde(v, u, w); \n  dfs(1, 0, 0); \n  for (int i = 2; i <= n; i++) q[++totq] = ques(dfn[i], dfn[i] + siz[i] - 1, i), q[++totq] = ques(dfn[i] + siz[i], dfn[i] + n - 1, i);\n  for (int i = 1; i <= n; i++) dis[i + n] = dis[i];\n  n <<= 1; SZ = sqrt(n);\n  for (int i = 1; i <= n; i++) bel[i] = (i - 1) / SZ + 1;\n  std::sort(q + 1, q + totq + 1);\n  for (int i = 1; i <= bel[n]; i++) solve(i);\n  for (int i = 1; i <= n; i++) Ans = std::max(Ans, ans[i]);\n  printf(\"%d\\n\", Ans);\n  return 0;\n}\n```",
        "postTime": 1581354485,
        "uid": 114320,
        "name": "\u843d\u6c50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6072 \u3010[MdOI2020] Path\u3011"
    },
    {
        "content": "\u5355 $\\log $ \u697c\u4e0a\u5df2\u7ecf\u6709\u4eba\u5199\u4e86 \u4f46\u4f3c\u4e4e\u8dd1\u7684\u5f88\u6162 \u4e0d\u592a\u7406\u89e3 \u6211\u7684\u5355 $\\log $ \u8dd1\u7684\u633a\u5feb \u73b0\u5728 ( 2022.2.11 ) \u662f\u6700\u4f18\u89e3\u7b2c\u4e00 \u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b qwq\n\n\u9996\u5148\u4efb\u9009\u4e00\u4e2a\u6839\u8def\u5f84\u5dee\u5206 \u70b9\u6743\u4e3a\u70b9\u5230\u6839\u8def\u5f84\u8fb9\u6743\u5f02\u6216\u548c\n\n\u95ee\u9898\u8f6c\u5316\u4e3a\u5206\u5272\u4e00\u9897\u6811\u53d8\u6210\u4e00\u4e2a\u5b50\u6811\u548c\u5269\u4f59\u90e8\u5206 \u4f7f\u8fd9\u4e24\u90e8\u5206\u5404\u9009\u6700\u5927\u5f02\u6216\u70b9\u5bf9 \u4e24\u90e8\u5206\u6700\u5927\u5f02\u6216\u70b9\u5bf9\u4e4b\u548c\u4e3a\u8fd9\u79cd\u5206\u5272\u65b9\u6848\u7684\u7b54\u6848\n\n\u5206\u5272\u95ee\u9898 \u5f88\u76f4\u89c2\u7684\u4e00\u4e2a\u60f3\u6cd5\u662f\u679a\u4e3e\u5206\u5272\u70b9 \u4e5f\u5c31\u76f8\u5f53\u4e8e\u6c42\u5168\u90e8\u5b50\u6811\u548c rest \u7684\u6700\u5927\u5f02\u6216\u70b9\u5bf9 \u7528 dsu \u6709\u53cc $\\log$ \u89e3\u6cd5\n\n\u4f46\u662f\u6211\u4eec\u8981\u6c42\u5f97\u662f\u5168\u5c40\u7b54\u6848 \u8fd9\u79cd\u65b9\u6848\u9700\u8981\u6c42\u51fa\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848 \u662f\u5c06\u95ee\u9898\u52a0\u5f3a\u4e86\u7684\n\n\u8003\u8651\u89e3\u51b3\u8fd9\u7c7b\u5168\u5c40\u652f\u914d\u95ee\u9898\u7684\u65b9\u6cd5 \u5148\u627e\u5230\u5168\u5c40\u6700\u5927\u70b9\u5bf9 \u8fd9\u4e24\u4e2a\u70b9\u7684\u8def\u5f84\u5916\u7684\u70b9\u4e3a\u5206\u5272\u70b9\u65f6\u663e\u7136\u6709\u4e00\u90e8\u5206\u6700\u5927\u503c\u5fc5\u4e3a\u5168\u5c40\u5f02\u6216\u6700\u5927\u70b9\u5bf9 \u800c\u53e6\u4e00\u90e8\u5206\u5b50\u6811\u5185\u7684\u70b9\u662f\u663e\u7136\u6bd4\u4e0d\u4e0a\u5b50\u6811\u7684\u6839\u7684 \u7ed9\u5f20\u56fe\u6bd4\u8f83\u597d\u7406\u89e3\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/tz3nxe78.png)\n\n\u7ea2\u8272\u70b9\u5bf9\u4e3a\u5f02\u6216\u6700\u5927\u70b9\u5bf9 \u6ce8\u610f \u73b0\u5728\u7684\u70b9\u6743\u662f\u7ecf\u8fc7\u95ee\u9898\u8f6c\u5316\u540e\u7684 \n\n\u90a3\u4e48\u4e0d\u96be\u770b\u51fa\u9ec4\u8272\u7684\u70b9\u4e3a\u5206\u5272\u70b9\u663e\u7136\u662f\u8981\u52a3\u4e8e\u7eff\u8272\u7684\u70b9\u4e3a\u5206\u5272\u70b9\n\n\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u5904\u7406\u7ea2\u8272\u8def\u5f84\u56db\u5468\u7684\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u548c\u7ea2\u8272\u8def\u5f84\u4e0a\u70b9\u4e3a\u5206\u5272\u70b9\n\n\u6211\u4eec\u53ef\u4ee5\u5f62\u8c61\u5730\u79f0\u7ea2\u8272\u8def\u5f84\u4e3a\u6811\u5e72\n\n\u6211\u4eec\u53d1\u73b0\u6811\u5e72\u56db\u5468\u7684\u70b9\u7684\u5b50\u6811\u662f\u4e92\u4e0d\u5305\u542b\u7684 \u56e0\u6b64\u8fd9\u91cc\u7684\u70b9\u53ea\u9700\u8981 $O(1)$ \u6b21\u64cd\u4f5c 01trie \u66b4\u529b\u63d2\u66b4\u529b\u6e05\u7a7a\u5373\u53ef\n\n\u518d\u8003\u8651\u6811\u5e72\u4e0a\u7684\u70b9\n\n\u6811\u5e72\u662f\u5f2f\u7684\u8fd8\u6709\u4e00\u4e2a\u5173\u952e\u70b9\u4e3a lca \u4e0d\u592a\u597d\u5904\u7406 \u6211\u4eec\u8003\u8651\u6362\u6839 \u800c\u6362\u6839\u6ca1\u6709\u6539\u53d8\u6811\u7684\u8def\u5f84 \u56e0\u6b64\u6211\u4eec\u6811\u4e0a\u5dee\u5206\u8fb9\u6743\u8f6c\u70b9\u6743\u7684\u95ee\u9898\u8f6c\u5316\u8fd8\u662f\u6210\u7acb\u7684\n\n\u6211\u4eec\u8003\u8651\u4ee5\u6811\u5e72\u4e0a\u4e00\u4e2a\u70b9\u4e3a\u6839\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/j6zlpa8t.png)\n\n\u4ed4\u7ec6\u770b\u8fd9\u4e24\u5f20\u56fe\u5176\u5b9e\u662f\u4e00\u6837\u7684\u6811\n\n\u95ee\u9898\u8f6c\u5316\u4e3a\u4e00\u6761\u4ece\u4e0a\u5230\u4e0b\u7684\u94fe\u4e0a\u6c42\u5b50\u6811\u5185\u5f02\u6216\u6700\u5927\u70b9\u5bf9\u52a0\u5b50\u6811\u5916\u5f02\u6216\u6700\u5927\u70b9\u5bf9\u7684\u503c\n\n01trie \u66b4\u529b\u63d2 \u6bcf\u4e2a\u70b9\u63d2 $O(1)$ \u6b21\n\n\u56e0\u6b64\u603b\u5171\u63d2 $O(n)$ \u6b21 \u5355\u6b21 $O(\\log V)$\n\n\u603b\u590d\u6742\u5ea6\u65f6\u95f4\u7a7a\u95f4\u90fd\u662f $O(n\\log V)$\n\n\u5751\u70b9\u662f 01trie \u7a7a\u95f4\u8981\u5f00\u591f \u6211\u5199\u7684\u8fd9\u4e2a\u6700\u540e\u4f1a\u591a\u51fa\u4e00\u500d\u7684\u70b9 01trie \u538b\u7f29\u53ef\u4ee5\u7a7a\u95f4\u7ebf\u6027 \u6211\u4e0d\u4f1a\uff08\n\n\u7136\u540e\u5c31\u6ca1\u5565\u5751\u4e86 \u4e24\u53d1\u5c31\u8fc7\u4e86 \u5361\u4e86\u51e0\u53d1\u5e38 \n\n\u8fd9\u9898\u4e0d\u5f00 O2 \u6bd4\u5f00\u8981\u5feb\uff08\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n;\nconst int N=3e4+3;\ninline int read()\n{\n\tint x=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile(c<='9'&&c>='0')\n\t{\n\t\tx=(x<<1)+(x<<3)+c-'0';\n\t\tc=getchar();\n\t}\n\treturn x;\n}\nstruct node\n{\n\tint to;\n\tint nxt;\n\tint w;\n}e[N<<1];\nint etot,h[N],w[N];\ninline void e_add(int x,int y,int w)\n{\n\te[++etot].to=y;\n\te[etot].nxt=h[x];\n\te[etot].w=w;\n\th[x]=etot;\n}\nvoid get_w(int x,int fa)\n{\n\tfor(int i=h[x];i;i=e[i].nxt)\n\t{\n\t\tif(e[i].to!=fa)\n\t\t{\n\t\t\tw[e[i].to]=w[x]^e[i].w;\n\t\t\tget_w(e[i].to,x);\n\t\t}\n\t}\n}\nint trie[N*60+1][2],id[N*60+1];\nint maxv,maxn[2];\nint tot;\ninline void ins(int x,int idx)\n{\n\tbool f[32];\n\tint p=0;\n\tfor(int i=30;i>=0;i--)\n\t{\n\t\tif(x>=(1<<i))\n\t\t{\n\t\t\tx-=(1<<i);\n\t\t\tf[i]=1;\n\t\t}\n\t\telse\n\t\tf[i]=0;\n\t\tif(!trie[p][f[i]])trie[p][f[i]]=++tot;\n\t\tp=trie[p][f[i]];\n\t}\n\tid[p]=idx;\n\tp=0;\n\tint res=0;\n\tfor(int i=30;i>=0;i--)\n\t{\n\t\tif(!trie[p][f[i]^1])p=trie[p][f[i]];\n\t\telse\n\t\t{\n\t\t\tp=trie[p][f[i]^1];\n\t\t\tres+=(1<<i);\n\t\t}\n\t}\n\tif(res>maxv)\n\t{\n\t\tmaxv=res;\n\t\tmaxn[0]=id[p];\n\t\tmaxn[1]=idx;\n\t}\n}\ninline void get_max()\n{\n\tfor(int i=1;i<=n;i++)ins(w[i],i);\n}\nint fa[N];\nvoid rebuild(int x)\n{\n\tfor(int i=h[x];i;i=e[i].nxt)\n\t{\n\t\tif(e[i].to!=fa[x])\n\t\t{\n\t\t\tfa[e[i].to]=x;\n\t\t\trebuild(e[i].to);\n\t\t}\n\t}\n}\ninline void clear(int p)\n{\n\tif(trie[p][0])\n\t{\n\t\tclear(trie[p][0]);\n\t\ttrie[p][0]=0;\n\t}\n\tif(trie[p][1])\n\t{\n\t\tclear(trie[p][1]);\n\t\ttrie[p][1]=0;\n\t}\n}\nint son[N];\nint all_max,ans;\nvoid dfs(int x)\n{\n\tins(w[x],x);\n\tfor(int i=h[x];i;i=e[i].nxt)\n\tif(e[i].to!=fa[x])dfs(e[i].to);\n}\nint ans_t[N];\ninline void lxl(int rt,int l_end)\n{\n\tint x=l_end;\n\twhile(x!=rt)\n\t{\n\t\tson[fa[x]]=x;\n\t\tx=fa[x];\n\t}\n\twhile(x)\n\t{\n\t\tfor(int i=h[x];i;i=e[i].nxt)\n\t\t{\n\t\t\tif(e[i].to!=fa[x]&&e[i].to!=son[x])\n\t\t\t{\n\t\t\t\tclear(0);\n\t\t\t\tmaxv=-1;\n\t\t\t\tdfs(e[i].to);\n\t\t\t\tans=max(ans,all_max+maxv);\n\t\t\t}\n\t\t}\n\t\tx=son[x];\n\t}\n\tclear(0);\n\tmaxv=-1;\n\tx=rt;\n\twhile(x)\n\t{\n\t\tans_t[x]=maxv;\n\t\tfor(int i=h[x];i;i=e[i].nxt)\n\t\t{\n\t\t\tif(e[i].to!=fa[x]&&e[i].to!=son[x])\n\t\t\t{\n\t\t\t\tdfs(e[i].to);\n\t\t\t}\n\t\t}\n\t\tins(w[x],x);\n\t\tx=son[x];\n\t}\n\tclear(0);\n\tmaxv=-1;\n\tx=l_end;\n\twhile(x)\n\t{\n\t\tfor(int i=h[x];i;i=e[i].nxt)\n\t\t{\n\t\t\tif(e[i].to!=fa[x]&&e[i].to!=son[x])\n\t\t\t{\n\t\t\t\tdfs(e[i].to);\n\t\t\t}\n\t\t}\n\t\tins(w[x],x);\n\t\tans_t[x]+=maxv;\n\t\tans=max(ans,ans_t[x]);\n\t\tx=fa[x];\n\t}\n}\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x=read(),y=read(),w=read();\n\t\te_add(x,y,w);\n\t\te_add(y,x,w);\n\t}\n\tmaxv=-1;\n\tans=-1;\n\tget_w(1,0);\n\tget_max();\n\tint uu1=maxn[0],uu2=maxn[1];\n\tall_max=maxv;\n\trebuild(maxn[0]);\n\tlxl(uu1,uu2);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1644567009,
        "uid": 223560,
        "name": "_HL_",
        "ccfLevel": 0,
        "title": "P6072 \u300eMdOI R1\u300fPath"
    },
    {
        "content": "[My Blog](https://yzxoi.top/archives/1913)\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u65e0\u6839\u6811\uff0c\u4ece\u4e2d\u9009\u62e9\u4e24\u4e2a\u4e0d\u4ea4\u8def\u5f84\uff0c\u6c42\u8fb9\u6743\u5f02\u6216\u548c\u4e4b\u548c\u6700\u5927\u503c\u3002\n\n$n\\leq 3\\times 10^4$\u3002\n\n## Sol\n\n\u8fd9\u91cc\u5177\u4f53\u8bb2\u8bb2\u4e00\u53ea $\\log$ \u7684\u505a\u6cd5\uff08\u5728\u6b64\u611f\u8c22 [\u795e\u4ed9lwy](https://www.luogu.com.cn/discuss/show/347250)\uff09\u3002\n\n\u8003\u8651\u8fd9\u79cd\u9898\u9996\u5148\u5957\u8def\u5730\u679a\u4e3e\u5206\u754c\u70b9 $x$\uff0c\u4f7f\u4e24\u6761\u8def\u5f84\u4e00\u6761\u5728\u8282\u70b9 $x$ \u7684\u5b50\u6811\u5185\uff0c\u53e6\u4e00\u6761\u5728\u5b50\u6811\u5916\u3002\n\n\u7136\u540e\u5c31\u5f88\u81ea\u7136\u5730\u60f3\u5230\u4e86 $\\mathcal O(n\\log n\\log w)$ \u7684 DSU+Trie \u7684\u505a\u6cd5\u5904\u7406\u5b50\u6811\u5185\u7684\u90e8\u5206\uff0c\u5b50\u6811\u5916\u7684\u90e8\u5206\u53ef\u4ee5\u5148\u5229\u7528 Trie \u6c42\u51fa\u4efb\u610f\u4e00\u5bf9\u5168\u5c40\u7684\u5f02\u6216\u548c\u6700\u5927\u7684\u70b9\u5bf9 $(X,Y)$\uff0c\u90a3\u4e48\u663e\u7136\u6240\u6709\u4e0d\u5728 $X$ \u5230\u6839\u548c $Y$ \u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u5b50\u6811\u5916\u7684\u7b54\u6848\u90fd\u662f $(X,Y)$ \u95f4\u7684\u5f02\u6216\u548c\u3002\u8003\u8651 $X$ \u5230\u6839\u4ee5\u53ca $Y$ \u5230\u6839\u7684\u8def\u5f84\u5c31\u76f4\u63a5\u4ece\u6839\u8282\u70b9\u51fa\u53d1\uff0c\u6bcf\u6b21\u5c06\u70b9\u63d2\u5165 Trie \u4e2d\uff0c\u7ef4\u62a4\u51fa\u5f02\u6216\u503c\u6700\u5927\u5373\u53ef\uff0c\u7531\u4e8e\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u88ab\u63d2\u4e00\u6b21\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n\\log w)$\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u505a\u5230\u5b8c\u5168\u7684\u4e00\u53ea $\\log$\u3002\u8fd8\u662f\u5148\u6c42\u51fa\u5168\u5c40\u7684\u5f02\u6216\u548c\u6700\u5927\u7684 $(X,Y)$\uff0c\u7136\u540e\u628a\u8fd9\u6761 $X$ \u5230 $Y$ \u7684\u94fe\u63d0\u53d6\u51fa\u6765\u3002\n\n- \u5982\u679c\u5206\u754c\u70b9\u4e0d\u5728\u8fd9\u6761\u94fe\u4e0a\uff0c\u663e\u7136\u5b50\u6811\u5916\u7684\u7b54\u6848\u53d6\u8fd9\u4e2a\u94fe\u7684\u7b54\u6848\u6700\u4f18\uff0c\u5b50\u6811\u5185\u7684\u7b54\u6848\u76f4\u63a5\u6c42\u89e3\u4e0e\u8fd9\u6761\u94fe\u76f8\u90bb\u7684\u5b50\u6811\u5185\u7684\u7b54\u6848\u5373\u53ef\uff0c\u663e\u7136\u5982\u679c\u5b50\u6811\u5185\u7684\u6700\u4f18\u7b54\u6848\u5fc5\u7136\u5305\u542b\u5728\u4e0e\u8fd9\u6761\u94fe\u76f8\u90bb\u7684\u5b50\u6811\u5185\uff0c\u8fd9\u6837\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u88ab\u63d2\u4e00\u6b21\u3002\n- \u5982\u679c\u5206\u754c\u70b9\u5728\u8fd9\u6761\u94fe\u4e0a\uff0c\u8003\u8651\u5148\u94a6\u5b9a $X$ \u4e3a\u6839\uff0c\u4ece $Y$ \u5411\u4e0a\u626b\u4e00\u904d\uff0c\u4e0d\u65ad\u63d2\u5165\u70b9\uff0c\u6c42\u51fa\u5176\u5f02\u6216\u548c\u6700\u5927\u503c\u5373\u4e3a\u5f53\u524d\u70b9\u7684\u5b50\u6811\u5185\u7b54\u6848\u3002\u7c7b\u4f3c\u7684\uff0c\u94a6\u5b9a $Y$ \u4e3a\u6839\uff0c\u4ece $X$ \u5411\u4e0a\u626b\u4e00\u904d\uff0c\u4e0d\u65ad\u63d2\u70b9\uff0c\u540c\u6837\u4e5f\u80fd\u6c42\u51fa\u5176\u5b50\u6811\u5916\u7684\u7b54\u6848\u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u88ab\u63d2\u4e00\u6b21\uff0c\u6240\u4ee5\u8fd9\u6837\u7684\u8bdd\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n\\log w)$\u3002\n\n\u6709\u4e00\u70b9\u70b9\u5c0f\u7ec6\u8282\uff0c\u5199\u7684\u65f6\u5019\u6ce8\u610f\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\u7136\u540e\u5c31\u8dd1\u7684\u6bd4\u4e24\u53ea $\\log$ \u8fd8\u6162\u3002\u3002\u3002\n\n```c++\n#include<bits/stdc++.h>\n#define Tp template<typename Ty>\n#define Ts template<typename Ty,typename... Ar>\n#define W while\n#define I inline\n#define RI register int\n#define LL long long\n#define Cn const\n#define CI Cn int&\n#define gc getchar\n#define D isdigit(c=gc())\n#define pc(c) putchar((c))\nusing namespace std;\nnamespace Debug{\n\tTp I void _debug(Cn char* f,Ty t){cerr<<f<<'='<<t<<endl;}\n\tTs I void _debug(Cn char* f,Ty x,Ar... y){W(*f!=',') cerr<<*f++;cerr<<'='<<x<<\",\";_debug(f+1,y...);}\n\tTp ostream& operator<<(ostream& os,Cn vector<Ty>& V){os<<\"[\";for(Cn auto& vv:V) os<<vv<<\",\";os<<\"]\";return os;}\n\t#define gdb(...) _debug(#__VA_ARGS__,__VA_ARGS__)\n}using namespace Debug;\nnamespace FastIO{\n\tTp I void read(Ty& x){char c;int f=1;x=0;W(!D) f=c^'-'?1:-1;W(x=(x<<3)+(x<<1)+(c&15),D);x*=f;}\n\tTs I void read(Ty& x,Ar&... y){read(x),read(y...);}\n\tTp I void write(Ty x){x<0&&(pc('-'),x=-x,0),x<10?(pc(x+'0'),0):(write(x/10),pc(x%10+'0'),0);}\n\tTp I void writeln(Cn Ty& x){write(x),pc('\\n');}\n}using namespace FastIO;\nCn int N=3e4+10;\nint n,fir[N],nxt[N<<1],son[N<<1],w[N<<1],tot,F[N],Mx=-1,idx,idy,vis[N],G[N],P[N],dfn[N],bk[N],cnt,sz[N],Ans,in[N],out[N];\nI void Add(CI x,CI y,CI z){nxt[++tot]=fir[x],fir[x]=tot,son[tot]=y,w[tot]=z;}\n#define to son[i]\nI void DFS(CI x,CI fa){RI i;for(i=fir[x];i;i=nxt[i]) to^fa&&(F[to]=F[x]^w[i],DFS(to,x),0);}\n#define PA pair<int,int>\n#define MP make_pair\nclass Trie{\n\tprivate:\n\t\tint ch[N*31][2],id[N*31],cnt;\n\tpublic:\n\t\tI void C(){RI i;for(i=0;i<=cnt;i++) ch[i][0]=ch[i][1]=id[i]=0;cnt=0;}\n\t\tI void U(CI x,CI dd){RI i,u=0;for(i=30;~i;i--) ch[u][x>>i&1]?u=ch[u][x>>i&1]:u=ch[u][x>>i&1]=++cnt;id[u]=dd;}\n\t\tI PA Q(CI x){RI i,u=0,X=0;for(i=30;~i;i--) ch[u][x>>i&1^1]?u=ch[u][x>>i&1^1],X|=1<<i:u=ch[u][x>>i&1];return MP(X,id[u]);}\n}T;//Trie \u6811\u7ef4\u62a4\u5f02\u6216\u548c\u6700\u5927\u503c\nI void dfs(CI x,CI fa){RI i;for(P[x]=fa,bk[dfn[x]=++cnt]=x,sz[x]=1,i=fir[x];i;i=nxt[i]) to^fa&&(F[to]=F[x]^w[i],dfs(to,x),sz[x]+=sz[to],0);}\nI void GT(CI x){RI i,j;PA t;for(i=fir[x];i;i=nxt[i]) if(!vis[to]){for(j=dfn[to];j<=dfn[to]+sz[to]-1;j++) t=T.Q(F[bk[j]]),Ans=max(Ans,Mx+t.first),T.U(F[bk[j]],bk[j]);T.C();}}//\u5206\u754c\u70b9\u4e0d\u5728\u94fe\u4e0a\uff0c\u6c42\u4e0e\u94fe\u76f8\u90bb\u5b50\u6811\u7b54\u6848\nI void FG(CI x){RI i,j;PA t;for(t=T.Q(F[x]),in[x]=max(in[x],t.first),T.U(F[x],x),i=fir[x];i;i=nxt[i]) if(!vis[to]) for(j=dfn[to];j<=dfn[to]+sz[to]-1;j++) t=T.Q(F[bk[j]]),in[x]=max(in[x],t.first),T.U(F[bk[j]],bk[j]);}//\u5206\u754c\u70b9\u5728\u94fe\u4e0a\uff0c\u6c42\u5b50\u6811\u5185\u7b54\u6848\nI void FO(CI x){RI i,j;PA t;for(t=T.Q(F[x]),out[x]=max(out[x],t.first),T.U(F[x],x),i=fir[x];i;i=nxt[i]) if(!vis[to]) for(j=dfn[to];j<=dfn[to]+sz[to]-1;j++) t=T.Q(F[bk[j]]),out[x]=max(out[x],t.first),T.U(F[bk[j]],bk[j]);}//\u5206\u754c\u70b9\u5728\u94fe\u4e0a\uff0c\u6c42\u5b50\u6811\u5916\u7b54\u6848\nint main(){\n\tRI i,x,y,z,lst;PA t;for(read(n),i=1;i<n;i++) read(x,y,z),Add(x,y,z),Add(y,x,z);for(DFS(1,0),i=1;i<=n;i++) t=T.Q(F[i]),Mx<t.first&&(Mx=t.first,idx=t.second,idy=i),T.U(F[i],i);//\u5148\u6c42\u51fa\u5168\u5c40\u5f02\u6216\u548c\u6700\u5927\u70b9\u5bf9\n\tfor(F[idx]=0,dfs(idx,0),vis[idx]=1,i=idy;i!=idx;i=P[i]) vis[i]=1;for(T.C(),GT(idx),i=idy;i!=idx;i=P[i]) GT(i);for(i=idy;i!=idx;i=P[i]) FG(i);FG(idx),T.C();//\u5206\u754c\u70b9\u4e0d\u5728\u94fe\u4e0a\n\tfor(F[idy]=cnt=0,dfs(idy,0),i=idx;i!=idy;i=P[i]) FO(i);FO(idy);for(lst=0,i=P[idx];i!=idy;i=P[i]) Ans=max(Ans,in[i]+lst),lst=max(lst,out[i]);//\u5206\u754c\u70b9\u5728\u94fe\u4e0a\u5408\u5e76\u5b50\u6811\u5185\u5b50\u6811\u5916\n\treturn Ans=max(Ans,in[idy]+lst),writeln(Ans),0;\n}\n```",
        "postTime": 1630136800,
        "uid": 37103,
        "name": "yzxoi",
        "ccfLevel": 7,
        "title": "P6072 \u300eMdOI R1\u300fPath"
    },
    {
        "content": "# P6072\n\n\u7efc\u5408\u597d\u9898\u3002\u8003\u5bdf\u4e86\u95ee\u9898\u8f6c\u5316+01trie+\u6811\u4e0a\u56de\u6eda\u83ab\u961f\u3002\n\n### \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\uff0c\u6211\u4eec\u63d0\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5bf9\u4e8e\u4e24\u6761\u5408\u6cd5\u7684\u8def\u7ebf\uff0c\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u70b9 $u$\uff0c\u4f7f\u5f97\u4e00\u6761\u8def\u5f84\u5728\u4ee5\u70b9 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u5185\uff0c\u53e6\u4e00\u6761\u5728\u5176\u5b50\u6811\u5916\u3002\n\n\u81ea\u5df1\u753b\u56fe\u7406\u89e3\u4e00\u4e0b\uff0c\u4e0a\u8ff0\u7ed3\u8bba\u4e0d\u96be\u8bc1\u660e\u3002\n\n\u4e8e\u662f\uff0c\u82e5\u6211\u4eec\u5c06\u6811\u7528 dfs \u5e8f\u8f6c\u4e3a\u4e00\u4e2a\u5e8f\u5217\uff0c\u8bbe\u4ee5\u70b9 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u5bf9\u5e94\u7684\u5e8f\u5217\u533a\u95f4\u4e3a $[st_i,ed_i]$\uff0c\u5219\u5bf9\u4e8e\u4e00\u4e2a\u786e\u5b9a\u7684\u70b9 $u$\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u4e24\u6761\u8def\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\u5206\u522b\u5728 $[st_u,ed_u]$ \u548c $[1,st_u)\\cup(ed_u,n]$\u3002\n\n\u8def\u5f84\u4e0a\u7684\u5f02\u6216\u548c\u663e\u7136\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6839\u5230\u4e24\u8282\u70b9\u8def\u5f84\u7684\u5f02\u6216\u548c\u4e92\u76f8\u5f02\u6216\u7684\u503c\u3002\u8bbe\u6839\u5230\u70b9 $u$ \u8def\u5f84\u4e0a\u7684\u5f02\u6216\u548c\u4e3a $f_u$\u3002\n\n\u663e\u7136\uff0c\u5b50\u6811\u5185\u548c\u5b50\u6811\u5916\u7684\u95ee\u9898\u662f\u4e92\u4e0d\u5173\u8054\u7684\u3002\u5373\u6211\u4eec\u53ea\u9700\u8981\u5728\u5b50\u6811\u5185\u548c\u5b50\u6811\u5916\u5206\u522b\u627e\u5230\u4e24\u4e2a\u70b9 $u,v$\uff0c\u4f7f\u5f97 $f_u \\oplus f_v$ \u6700\u5927\u5373\u53ef\u3002\n\n\u53d1\u73b0\u4e0a\u9762\u7684 $[1,st_u)\\cup(ed_u,n]$ \u5176\u5b9e\u53ef\u4ee5\u8f6c\u5316\u3002\u53ea\u8981\u6211\u4eec\u5c06\u5e8f\u5217\u590d\u5236\u4e00\u904d\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u533a\u95f4\u3002\n\n\u4e8e\u662f\uff0c\u73b0\u5728\u7684\u95ee\u9898\u5c31\u53d8\u4e3a\u4e86\uff1a\u6709 $n$ \u4e2a\u6570 $f_1,f_2,\\dots,f_n$\uff0c$2\\times n$ \u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u6bb5\u533a\u95f4 $[l,r]$ \u5185\u7684\u6570\u4e2d\u7684 $\\displaystyle\\max_{x,y\\in[l,r]}f_x\\oplus f_y$\u3002\n\n\u8003\u8651\u7528\u83ab\u961f\u6765\u7ef4\u62a4\u533a\u95f4\uff0c01trie \u6765\u5bfb\u627e\u6700\u5927\u5f02\u6216\u503c\u3002\u53d1\u73b0\u8fd9\u6837\u7ef4\u62a4\u5bb9\u6613\u8fdb\u884c\u589e\u52a0\u64cd\u4f5c\uff0c\u800c\u5220\u9664\u64cd\u4f5c\u96be\u4ee5\u5feb\u901f\u5b8c\u6210\u3002\u4e8e\u662f\u7528\u53ea\u589e\u4e0d\u5220\u7684\u56de\u6eda\u83ab\u961f+01trie \u5373\u53ef\u89e3\u51b3\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt{n}\\log n)$\u3002\n\nCode\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3e4+10;\nint n,m,unit,tot,h[N],ans[N<<1];\nstruct edge\n{\n\tint v,w,nxt;\n}e[N<<1];\nvoid add(int u,int v,int w)\n{\n\te[++tot]=(edge){v,w,h[u]};\n\th[u]=tot;\n}\nint val[N],st[N],ed[N],id[N<<1],cnt;\nvoid dfs(int u,int fa)\n{\n\tid[st[u]=++cnt]=u;\n\tfor(int i=h[u];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].v;\n\t\tif(v==fa)continue;\n\t\tval[v]=val[u]^e[i].w;\n\t\tdfs(v,u);\n\t}\n\ted[u]=cnt;\n}\nstruct zero_one_trie\n{\n\tint son[N<<5][2],siz[N<<5],sz;\n\tvoid insert(int a)\n\t{\n\t\tint cur=0;\n\t\tfor(int i=30;i>=0;i--)\n\t\t{\n\t\t\tint u=a>>i&1;\n\t\t\tif(!son[cur][u])son[cur][u]=++sz;\n\t\t\tsiz[cur=son[cur][u]]++;\n\t\t} \n\t}\n\tvoid erase(int a)\n\t{\n\t\tint cur=0;\n\t\tfor(int i=30;i>=0;i--)\n\t\t{\n\t\t\tint u=a>>i&1;\n\t\t\tsiz[cur=son[cur][u]]--;\n\t\t} \n\t}\n\tint query(int a)\n\t{\n\t\tint cur=0,res=0;\n\t\tfor(int i=30;i>=0;i--)\n\t\t{\n\t\t\tint u=a>>i&1;\n\t\t\tif(son[cur][!u]&&siz[son[cur][!u]])cur=son[cur][!u],res=(res<<1)+!u;\n\t\t\telse cur=son[cur][u],res=(res<<1)+u;\n\t\t}\n\t\treturn res^a;\n\t}\n}trie,spe;\nint L[N<<1],R[N<<1],pos[N<<1];\nint res,Ans;\nstruct query\n{\n\tint l,r,id;\n\tbool operator < (query b) const\n\t{\n\t\tif(pos[l]!=pos[b.l])return l<b.l;\n\t\treturn r<b.r;\n\t} \n}q[N<<1];\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1,x,y,w;i<n;i++)\n\t\tscanf(\"%d%d%d\",&x,&y,&w),add(x,y,w),add(y,x,w);\n\tdfs(1,0);\n\tfor(int i=2;i<=n;i++)\n\t\tq[++m]=(query){st[i],ed[i],m},q[++m]=(query){ed[i]+1,n+st[i]-1,m};\n\tfor(int i=1;i<=n;i++)id[i+n]=id[i];\n\tn<<=1;\n\tint sz=n/(unit=max(1,(int)(n/sqrt(m))));\n\tfor(int i=1;i<=sz;i++)L[i]=R[i-1]+1,R[i]=L[i]+unit-1;\n\tif(R[sz]<n)sz++,L[sz]=R[sz-1]+1,R[sz]=n;\n\tfor(int i=1;i<=n;i++)pos[i]=(i-1)/unit+1;\n\tsort(q+1,q+m+1);\n\tfor(int i=1,now=1,l,r;i<=sz;i++)\n\t{\n\t\tmemset(trie.son,0,sizeof(trie.son));\n\t\tmemset(trie.siz,0,sizeof(trie.siz));\n\t\ttrie.sz=res=0,r=R[i];\n\t\twhile(pos[q[now].l]==i)\n\t\t{\n\t\t\tif(q[now].r-q[now].l<=unit)\n\t\t\t{\n\t\t\t\tfor(int i=q[now].l;i<=q[now].r;i++)\n\t\t\t\t{\n\t\t\t\t\tans[q[now].id]=max(ans[q[now].id],spe.query(val[id[i]]));\n\t\t\t\t\tspe.insert(val[id[i]]);\n\t\t\t\t}\n\t\t\t\tfor(int i=q[now].l;i<=q[now].r;i++)spe.erase(val[id[i]]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tl=R[i]+1;\n\t\t\t\twhile(r<q[now].r)\n\t\t\t\t\tr++,res=max(res,trie.query(val[id[r]])),trie.insert(val[id[r]]);\n\t\t\t\tint tmp=res;\n\t\t\t\twhile(l>q[now].l)\n\t\t\t\t\tl--,res=max(res,trie.query(val[id[l]])),trie.insert(val[id[l]]);\n\t\t\t\tans[q[now].id]=res;\n\t\t\t\tres=tmp;\n\t\t\t\twhile(l<R[i]+1)trie.erase(val[id[l]]),l++;\n\t\t\t}\n\t\t\tnow++;\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i+=2)Ans=max(Ans,ans[i]+ans[i+1]);\n\tprintf(\"%d\",Ans);\n\treturn 0;\n}\n```",
        "postTime": 1641126515,
        "uid": 333574,
        "name": "Tyyyyyy",
        "ccfLevel": 7,
        "title": "P6072\u9898\u89e3"
    },
    {
        "content": "[\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P6072)\n\n\u53c8\u662f ix35 \u795e\u4ed9\u51fa\u7684\u9898\uff0c\u5148\u4ee5 mol \u4e3a\u656c %%%\n\n\u9996\u5148\u9884\u5904\u7406\u51fa\u6839\u8282\u70b9\u5230\u6bcf\u4e2a\u70b9\u8def\u5f84\u4e0a\u6743\u503c\u7684\u5f02\u6216\u548c $dis_i$\uff0c\u90a3\u4e48\u4e24\u70b9 $a,b$ \u8def\u5f84\u4e0a\u6743\u503c\u7684\u5f02\u6216\u548c\u663e\u7136\u4e3a $dis_a\\oplus dis_b$\u3002\n\n\u6211\u4eec\u8003\u8651\u63a2\u7a76 $a,b$ \u4e0e $c,d$ \u95f4\u7684\u8def\u5f84\u4e0d\u76f8\u4ea4\u610f\u5473\u7740\u4ec0\u4e48\u3002\u8bb0 $l=lca(a,b)$\uff0c\u663e\u7136 $c,d$ \u4e0d\u80fd\u4e00\u4e2a\u5728 $l$ \u5b50\u6811\u5185\uff0c\u4e00\u4e2a\u5728 $l$ \u5b50\u6811\u5916\uff0c\u5426\u5219\u5b83\u4eec\u95f4\u7684\u8def\u5f84\u5c31\u4f1a\u7ecf\u8fc7 $l$ \u4e86\u3002\u90a3\u4e48\u5206\u4e24\u79cd\u60c5\u51b5\uff0c$c,d$ \u5168\u5728 $l$ \u5b50\u6811\u5916\uff0c\u548c $c,d$ \u5168\u5728 $l$ \u5b50\u6811\u5185\u3002$c,d$ \u5168\u5728\u5b50\u6811\u5916\u7684\u60c5\u51b5\u663e\u7136\u597d\u641e\u5b9a\uff0c\u53ea\u8981 $c,d$ \u90fd\u5728 $l$ \u7684\u5b50\u6811\u5916\uff0c\u90a3\u4e48 $a,b$ \u4e0e $c,d$ \u4e4b\u95f4\u7684\u8def\u5f84\u5c31\u80af\u5b9a\u4e0d\u4f1a\u76f8\u4ea4\u3002\u6bd4\u8f83\u9ebb\u70e6\u7684\u662f $c,d$ \u5168\u5728 $l$ \u5b50\u6811\u5185\u7684\u60c5\u51b5\uff0c\u8bb0 $l'=lca(c,d)$\uff0c\u663e\u7136 $l'\\neq l$\uff0c\u800c $c,d$ \u90fd\u5728 $l$ \u5b50\u6811\u5185\uff0c\u6545 $l'$ \u4e5f\u5728 $l$ \u5b50\u6811\u5185\uff0c\u5982\u679c\u6211\u4eec\u4ea4\u6362 $(a,b)$ \u548c $(c,d)$\uff0c\u90a3\u4e48\u53ef\u5f97 $c,d$ \u7684 lca \u5728 $a,b$ \u7684 lca $l'$ \u7684\u5b50\u6811\u5916\uff0c\u6545\u7b2c\u4e8c\u79cd\u60c5\u51b5\u53ef\u4ee5\u89c4\u7ea6\u5230\u7b2c\u4e00\u79cd\u60c5\u51b5\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u7528\u8003\u8651\u7b2c\u4e00\u79cd\u60c5\u51b5\u5c31\u884c\u4e86\u3002\n\n\u8003\u8651\u679a\u4e3e $a,b$ \u7684 lca $l$\uff0c\u5982\u679c\u6211\u4eec\u6309\u7167 DFS \u5e8f\u5c06\u539f\u6811\u5c55\u5f00\u6210\u4e00\u4e2a\u5e8f\u5217\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u5728 $[dfn_l,dfn_l+sz_l-1]$ \u548c $[1,dfn_l-1]\\cup[dfn_l+sz_l,n]$ \u4e2d\u5206\u522b\u9009\u62e9\u4e24\u4e2a\u6570 $a,b$ \u548c $c,d$ \u4f7f\u5f97 $dis_a\\oplus dis_b+dis_c\\oplus dis_d$ \u6700\u5927\u3002\u90a3\u4e48\u6211\u4eec\u53ea\u7528\u8ba9\u5b83\u4eec\u5206\u522b\u6700\u5927\u5373\u53ef\u3002\u800c\u5982\u679c\u6211\u4eec\u4ee4 $dfn_i=dfn_{i-n}(i>n)$\uff0c\u90a3\u4e48\u540e\u9762\u90a3\u4e2a\u533a\u95f4\u5e76\u53c8\u53ef\u5199\u6210 $[dfn_l+sz_l,dfn_l+n-1]$\u3002\u4e8e\u662f\u73b0\u5728\u9898\u76ee\u8f6c\u5316\u4e3a\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217 $a$\uff0c\u8981\u6c42\u5728 $[l,r]$ \u4e2d\u9009\u62e9\u4e24\u4e2a\u6570 $a_i,a_j$\uff0c$a_i\\oplus a_j$ \u7684\u6700\u5927\u503c\u3002\u9996\u5148\u53ef\u4ee5\u80af\u5b9a\u7684\u662f\u8fd9\u4e1c\u897f\u6ca1\u6cd5\u7528 DS \u76f4\u63a5\u7ef4\u62a4\uff0c\u800c\u672c\u9898 3e4 \u7684\u6570\u636e\u8303\u56f4\u4e5f\u5728\u75af\u72c2\u6697\u793a\u672c\u9898\u7684\u6839\u53f7\u7b97\u6cd5\u3002\u6545\u8003\u8651\u83ab\u961f\uff0c\u5efa\u7acb\u4e00\u4e2a 01-trie\uff0c\u63d2\u5165\u67d0\u4e2a\u6570 $x$ \u7684\u65f6\u5019\u5c31\u6309\u7167\u5957\u8def\u5c06\u5176\u63d2\u5165 01-trie\uff0c\u800c\u672c\u9898\u7684\u7b54\u6848\u4ee5\u53d6 $\\max$ \u51fa\u73b0\u7684\uff0c\u4e0d\u652f\u6301\u5220\u9664\u3002\u6545\u4f7f\u7528\u56de\u6eda\u83ab\u961f\uff0c\u626b\u5230\u53f3\u7aef\u70b9\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e2a $tmp$ \u4fdd\u5b58\u7b54\u6848\uff0c\u89e3\u51b3\u4e00\u4e2a\u8be2\u95ee\u4e4b\u540e\u5c31\u7528\u4e34\u65f6\u4fdd\u5b58\u7684\u503c\u8fd8\u539f\u7b54\u6848\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $n\\sqrt{n}\\log w$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fz(i,a,b) for(int i=a;i<=b;i++)\n#define fd(i,a,b) for(int i=a;i>=b;i--)\n#define ffe(it,v) for(__typeof(v.begin()) it=v.begin();it!=v.end();it++)\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntemplate<typename T> void read(T &x){\n\tx=0;char c=getchar();T neg=1;\n\twhile(!isdigit(c)){if(c=='-') neg=-1;c=getchar();}\n\twhile(isdigit(c)) x=x*10+c-'0',c=getchar();\n\tx*=neg;\n}\nconst int MAXN=3e4;\nconst int SQRT=245;\nconst int LOG_N=30;\nconst int MAXP=1e6;\nint n,hd[MAXN+5],to[MAXN*2+5],nxt[MAXN*2+5],cst[MAXN*2+5],ec=0;\nvoid adde(int u,int v,int w){to[++ec]=v;cst[ec]=w;nxt[ec]=hd[u];hd[u]=ec;}\nint dis[MAXN+5],dfn[MAXN+5],ed[MAXN+5],id[MAXN+5],tim=0;\nvoid dfs(int x,int f){\n\tdfn[x]=++tim;id[tim]=x;\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e],z=cst[e];if(y==f) continue;\n\t\tdis[y]=dis[x]^z;dfs(y,x);\n\t} ed[x]=tim;\n}\nint blk_sz,blk_cnt,L[SQRT+5],R[SQRT+5],bel[MAXN*2+5];\nint w[MAXN*2+5];\nstruct query{\n\tint l,r,id;\n\tbool operator <(const query &rhs){\n\t\tif(bel[l]!=bel[rhs.l]) return l<rhs.l;\n\t\treturn r<rhs.r;\n\t}\n} q[MAXN*2+5];\nint ch[MAXP+5][2],siz[MAXP+5],ncnt=0;\nvoid insert(int x,int v){\n\tint cur=0;\n\tfor(int i=LOG_N;~i;i--){\n\t\tint d=x>>i&1;\n\t\tif(!ch[cur][d]) ch[cur][d]=++ncnt;\n\t\tcur=ch[cur][d];siz[cur]+=v;\n\t}\n}\nint query(int v){\n\tint x=0,cur=0;\n\tfor(int i=LOG_N;~i;i--){\n\t\tint d=v>>i&1;\n\t\tif(siz[ch[cur][d^1]]) x|=1<<i,cur=ch[cur][d^1];\n\t\telse cur=ch[cur][d];\n\t} return x;\n}\nint ans=0,res[MAXN+5];\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;i++){\n\t\tint u,v,w;scanf(\"%d%d%d\",&u,&v,&w);\n\t\tadde(u,v,w);adde(v,u,w);\n\t} dfs(1,0);\n\tfor(int i=1;i<=n;i++) w[i]=dis[id[i]];\n\tfor(int i=n+1;i<=n*2;i++) w[i]=w[i-n];\n//\tfor(int i=1;i<=n*2;i++) printf(\"%d\\n\",w[i]);\n\tblk_sz=(int)sqrt(2*n);blk_cnt=(2*n-1)/blk_sz+1;\n\tfor(int i=1;i<=blk_cnt;i++){\n\t\tL[i]=(i-1)*blk_sz+1;\n\t\tR[i]=min(i*blk_sz,2*n);\n\t\tfor(int j=L[i];j<=R[i];j++) bel[j]=i;\n\t}\n\tfor(int i=2;i<=n;i++){\n\t\tq[i-1].l=dfn[i];q[i-1].r=ed[i];q[i-1].id=i;\n\t\tq[i+n-2].l=ed[i]+1;q[i+n-2].r=dfn[i]+n-1;q[i+n-2].id=i;\n//\t\tprintf(\"%d %d %d\\n\",dfn[i],ed[i],i);\n//\t\tprintf(\"%d %d %d\\n\",ed[i]+1,dfn[i]+n-1,i); \n\t} sort(q+1,q+(n<<1)-1);int cl=1,cr=0;\n//\tfor(int i=1;i<=(n<<1)-2;i++) printf(\"%d %d %d\\n\",q[i].l,q[i].r,q[i].id);\n\tfor(int i=1;i<=(n<<1)-2;i++){\n\t\tif(i==1||bel[q[i].l]!=bel[q[i-1].l]){\n\t\t\tcl=R[bel[q[i].l]]+1;cr=cl-1;\n\t\t\tmemset(siz,0,sizeof(siz));memset(ch,0,sizeof(ch));\n\t\t\tncnt=0;ans=0;\n\t\t}\n\t\tif(bel[q[i].l]==bel[q[i].r]){\n\t\t\tint mx=-0x3f3f3f3f;\n\t\t\tfor(int j=q[i].l;j<=q[i].r;j++) insert(w[j],1);\n\t\t\tfor(int j=q[i].l;j<=q[i].r;j++) mx=max(mx,query(w[j]));\n\t\t\tfor(int j=q[i].l;j<=q[i].r;j++) insert(w[j],-1);\n\t\t\tres[q[i].id]+=mx;continue;\n\t\t}\n\t\twhile(cr<q[i].r) insert(w[++cr],1),ans=max(ans,query(w[cr]));\n\t\tint tmp=ans;\n\t\twhile(cl>q[i].l) insert(w[--cl],1),ans=max(ans,query(w[cl]));\n\t\tres[q[i].id]+=ans;\n\t\twhile(cl<R[bel[q[i].l]]+1) insert(w[cl++],-1);\n\t\tans=tmp;\n\t} int mx=0;\n\tfor(int i=1;i<=n;i++) chkmax(mx,res[i]);\n\tprintf(\"%d\\n\",mx);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1612575950,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6072 \u3010\u300eMdOI R1\u300fPath\u3011"
    },
    {
        "content": "\u770b\u6765 P8511 \u7684\u5957\u8def\u8fd8\u4e0d\u600e\u4e48\u63a8\u5e7f\u3002\u6765\u70b9\u5355 $\\log$ \u505a\u6cd5\u3002\n\n\u4ee4 $a_i=f(E(1,i))$\uff0c\u5219 $E(x,y)=a_x\\oplus a_y$\u3002\n\n\u4ee4 $s_i$ \u4e3a $i$ \u5b50\u6811\u5916 $a$ \u7684\u6700\u5927\u5f02\u6216\u5bf9\uff0c$t_i$ \u4e3a $i$ \u5b50\u6811\u5185 $a$ \u7684\u6700\u5927\u5f02\u6216\u5bf9\u3002\n\n\u8f6c\u5316\u4e00\u4e0b\u95ee\u9898\uff0c\u6c42 $\\max\\{s_i+t_i\\}$\u3002\n\n\u6c42 $s_i$ \u5c31\u662f [P8511](https://www.luogu.com.cn/problem/P8511)\uff0c[\u8fd9\u91cc\u4ec5\u7ed9\u51fa\u9898\u89e3](https://www.luogu.com.cn/blog/388651/solution-p8511)\u3002\n\n\u8003\u8651\u7528\u76f8\u4f3c\u7684\u5957\u8def\u6c42 $t_i$\uff0c\u5206\u7c7b\u8ba8\u8bba $i$ \u7684\u4f4d\u7f6e\u3002\n\n1. $i$ \u4e3a $x$ \u6216 $y$ \u7684\u7956\u5148\u3002\u4ece $x,y$ \u722c\u5230\u6839\uff0c01 Trie \u7ef4\u62a4\u5b50\u6811\u5185\u70b9\u96c6\uff0c\u9014\u4e2d\u7edf\u8ba1\u7b54\u6848\u3002\n2. $\\text{otherwise}$\u3002\u6b64\u65f6 $x,y$ \u90fd\u5728 $i$ \u5b50\u6811\u5916\uff0c\u5373 $s_i$ \u4e3a\u5b9a\u503c $a_x\\oplus a_y$\uff0c\u4e14\u4efb\u610f\u5b50\u6811\u7684 $t_i$ \u4e0d\u52a3\u4e8e\u5176\u5185\u90e8\u5b50\u6811\uff0c\u6240\u4ee5\u53ea\u9700\u7edf\u8ba1\u6ee1\u8db3\u6761\u4ef6\u7684\u6781\u5927\u5b50\u6811\u5373\u53ef\u3002\n\n\u663e\u7136\u6bcf\u4e2a\u8fc7\u7a0b\u4e2d\u6bcf\u4e2a\u70b9\u90fd\u53ea\u4f1a\u88ab\u52a0\u4e00\u6b21\uff0c\u6240\u4ee5\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nstruct E\n{\n    int v, w, t;\n} e[60050];\nstruct T\n{\n    int c[2] = {0, 0}, k = 0, v;\n} R[2000050];\nint n, c, x, y, z, p, q, r = 1, P = 1, a[30050], s[30050], t[30050], f[30050], g[30050], h[30050];\nvoid A(int u, int v, int w)\n{\n    e[++c] = {v, w, h[u]};\n    h[u] = c;\n}\nvoid I(int i, int x)\n{\n    int p = r;\n    ++R[r].k;\n    for (int i = 30, o; i >= 0; --i)\n        p = R[p].c[o = x >> i & 1] ? R[p].c[o] : R[p].c[o] = ++P, ++R[p].k;\n    R[p].v = i;\n}\nint Q(int &i, int x)\n{\n    int p = r;\n    for (int i = 30, o; i >= 0; --i)\n        p = R[p].c[R[R[p].c[o = !(x >> i & 1)]].k ? o : !o];\n    return x ^ a[i = R[p].v];\n}\nvoid D(int u, int k)\n{\n    for (int i = h[u], v; i; i = e[i].t)\n        if ((v = e[i].v) != k)\n            f[v] = u, a[v] = a[u] ^ e[i].w, D(v, u);\n}\nvoid F1(int u, int k)\n{\n    I(u, a[u]);\n    q = max(q, Q(z, a[u]));\n    for (int i = h[u], v; i; i = e[i].t)\n        if ((v = e[i].v) != k && v != g[u])\n            F1(v, u);\n}\nvoid F2(int u, int k)\n{\n    g[u] = 1;\n    I(u, a[u]);\n    q = max(q, Q(z, a[u]));\n    for (int i = h[u], v; i; i = e[i].t)\n        if ((v = e[i].v) != k && !g[v])\n            F2(v, u);\n}\nvoid G1(int x)\n{\n    q = 0;\n    for (int i = 1; i <= n; ++i)\n        g[i] = 0;\n    for (int i = x; i != 1; i = f[i])\n        g[f[i]] = i;\n    for (int i = r = 1; i <= P; ++i)\n        R[i].c[0] = R[i].c[1] = R[i].k = 0;\n    for (int i = P = 1; i != x; i = g[i])\n        s[i] = q, F1(i, f[i]);\n    s[x] = q;\n}\nvoid G2(int x)\n{\n    q = 0;\n    for (int i = 1; i <= n; ++i)\n        g[i] = 0;\n    for (int i = r = 1; i <= P; ++i)\n        R[i].c[0] = R[i].c[1] = R[i].k = 0;\n    for (int i = x; i; i = f[i])\n        F2(i, f[i]), t[i] = q;\n}\nvoid S(int u, int k)\n{\n    for (int i = h[u], v; i; i = e[i].t)\n        if ((v = e[i].v) != k)\n            if (g[v])\n                S(v, u);\n            else\n            {\n                q = 0;\n                for (int i = r = 1; i <= P; ++i)\n                    R[i].c[0] = R[i].c[1] = R[i].k = 0;\n                P = 1;\n                F1(v, u);\n                t[v] = q;\n            }\n}\nint main()\n{\n    scanf(\"%d\", &n);\n    for (int i = 1, u, v, w; i < n; ++i)\n        scanf(\"%d%d%d\", &u, &v, &w), A(u, v, w), A(v, u, w);\n    D(1, 0);\n    for (int i = 1; i <= n; ++i)\n        I(i, a[i]);\n    for (int i = 1; i <= n; ++i)\n        if (q < (p = Q(z, a[i])))\n            q = p, x = i, y = z;\n    for (int i = 1; i <= n; ++i)\n        s[i] = q;\n    G1(x);\n    G1(y);\n    G2(x);\n    G2(y);\n    for (int i = 1; i <= n; ++i)\n        g[i] = 0;\n    for (int i = x; i; i = f[i])\n        g[i] = 1;\n    for (int i = y; i; i = f[i])\n        g[i] = 1;\n    S(1, 0);\n    q = 0;\n    for (int i = 2; i <= n; ++i)\n        q = max(q, s[i] + t[i]);\n    printf(\"%d\", q);\n    return 0;\n}\n```\n",
        "postTime": 1677461921,
        "uid": 388651,
        "name": "5k_sync_closer",
        "ccfLevel": 7,
        "title": "P6072 \u300eMdOI R1\u300fPath \u9898\u89e3"
    },
    {
        "content": "\u9898\u76ee\u8981\u6c42\u6211\u4eec\u4ece\u4e00\u68f5\u6811\u4e2d\u9009\u51fa\u4e24\u6761\u4e92\u4e0d\u76f8\u4ea4\u7684\u7b80\u5355\u8def\u5f84\uff0c\u4f7f\u5f97\u5176\u8fb9\u6743\u5f02\u6216\u548c\u4e4b\u548c\u6700\u5927\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0d\u597d\u7ef4\u62a4\u7684\u8fb9\u6743\u5f02\u6216\u548c\u8f6c\u5316\u4e3a\u8def\u5f84\u4e24\u7aef\u70b9\u5230\u6839\u7684\u8fd9\u4e24\u6761\u8def\u5f84\u4e0a\u7684\u8fb9\u6743\u5f02\u6216\u548c\u3002\n\n\u7136\u540e\u5c31\u662f\u8003\u8651\u5982\u4f55\u4e0d\u91cd\u4e0d\u6f0f\u5730\u627e\u5230\u8fd9\u4e24\u6761\u8def\u5f84\u3002  \n\u53ef\u4ee5\u60f3\u5230\u8fb9\u5206\u6cbb\uff0c\u7528\u5f53\u524d\u7684\u5206\u6cbb\u4e2d\u5fc3\u6765\u5206\u5f00\u4e24\u6761\u8def\u5f84\u3002\u4f46\u662f\u4e24\u6761\u8def\u5f84\u7684\u5176\u4e2d\u4e00\u6761\u53ef\u80fd\u4f1a\u7a7f\u8fc7\u4e0a\u5c42\u7684\u5206\u6cbb\u4e2d\u5fc3\uff0c\u5bfc\u81f4\u7ef4\u62a4\u56f0\u96be\uff0c\u53ef\u4ee5pass\u6389\u3002\n\n\u53ef\u4ee5\u60f3\u5230\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5206\u522b\u6c42\u51fa\u5b50\u6811\u5185\u7684\u6700\u5927\u8def\u5f84\u548c\u5b50\u6811\u5916\u7684\u6700\u5927\u8def\u5f84\uff0c\u53d1\u73b0\u53ef\u884c\u3002\n\n\u7ef4\u62a4\u5b50\u6811\u5916\u7684\u6700\u5927\u8def\u5f84\u53ef\u4ee5\u53c2\u8003[P8511](https://www.luogu.com.cn/problem/P8511)\u8fd9\u9053Ynoi\uff0c\u63d0\u4f9b\u4e86\u4e00\u79cd $O(n \\log v)$ \u7684\u3001\u5229\u7528\u652f\u914d\u6027\u8d28\u7684\u505a\u6cd5\uff0c\u5176\u4e2d $v$ \u662f\u503c\u57df\u3002\n\n\u5bf9\u4e8e\u5b50\u6811\u5185\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5229\u7528\u652f\u914d\u7684\u6027\u8d28\u3002  \n\u6211\u4eec\u9996\u5148\u627e\u5230\u5f02\u6216\u548c\u6700\u5927\u7684\u4e24\u4e2a\u70b9 $x$ \u548c $y$\uff0c\u8003\u8651 $a_x \\oplus a_y$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n- \u5bf9\u4e8e $x$ \u548c $y$ \u90fd\u5728\u5b50\u6811\u5185\u7684\uff0c\u5b50\u6811\u5185\u7b54\u6848\u5c31\u662f $a_x \\oplus a_y$\u3002\u8fd9\u4e00\u6761\u9002\u7528\u4e8e\u4ece $\\operatorname{lca}(x,y)$ \u5411\u4e0a\u5230\u6839\u7684\u8fd9\u4e00\u6761\u8def\u5f84\u4e0a\u7684\u70b9\u3002\n- \u5bf9\u4e8e $x$ \u548c $y$ \u90fd\u4e0d\u5728\u5b50\u6811\u5185\u7684\uff0c\u5b50\u6811\u5916\u7b54\u6848\u5c31\u662f $a_x \\oplus a_y$\uff0c\u5b50\u6811\u5185\u7b54\u6848\u5c31\u9700\u8981\u5355\u72ec\u8ba1\u7b97\u5e76\u53d6\u8f83\u5927\u503c\u5373\u53ef\u3002\u5176\u4e2d\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8d2a\u5fc3\u7b56\u7565\uff0c\u5bf9\u4e8e\u4e00\u68f5\u5b50\u6811\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\u5176\u6839\u7684\u5b50\u6811\u5185\u7b54\u6848\u5373\u53ef\u3002\u8fd9\u4e00\u6761\u9002\u7528\u4e8e\u6240\u6709\u4e0d\u5728 $x$ \u5230\u6839\u6216 $y$ \u5230\u6839\u8def\u5f84\u4e0a\u7684\u5b50\u6811\u3002\n- \u5bf9\u4e8e $x$ \u548c $y$ \u4e24\u8005\u4e2d\u53ea\u6709\u4e00\u4e2a\u5728\u5b50\u6811\u4e2d\u7684\uff0c\u6211\u4eec\u4e5f\u9700\u8981\u5355\u72ec\u8ba1\u7b97\u5176\u5b50\u6811\u5185\u7b54\u6848\u3002\u8fd9\u4e00\u6761\u9002\u7528\u4e8e $x$ \u5230 $\\operatorname{lca}(x,y)$ \u518d\u5230 $y$ \u8fd9\u4e24\u6761\u8def\u5f84\u4e0a\u7684\u70b9\u3002\n\n\u5206\u6790\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\n\u9996\u5148\u5b50\u6811\u5916\u7684\u7b54\u6848\u662f $O(n \\log v)$ \u7684\u3002  \n\u5176\u6b21\uff0c\u5b50\u6811\u5185\u7684\u7b54\u6848\u7684\u4e09\u90e8\u5206\u6211\u4eec\u5206\u522b\u5206\u6790\uff1a\n- \u7b2c\u4e00\u90e8\u5206\u76f4\u63a5\u7edf\u8ba1 $O(n)$\uff1b\n- \u7b2c\u4e8c\u90e8\u5206\uff0c\u6211\u4eec\u53ea\u5bf9\u4e8e\u6bcf\u4e00\u68f5\u6781\u5927\u5b50\u6811\u7684\u6839\u8282\u70b9\u7edf\u8ba1\u7b54\u6848\uff0c\u90a3\u4e48\u8fd9\u68f5\u5b50\u6811\u5185\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u53ea\u4f1a\u88ab\u63d2\u5165\u4e00\u6b21\uff0c\u603b\u5171\u5c31\u53ea\u4f1a\u63d2\u5165 $O(n)$ \u7ea7\u522b\u7684\u8282\u70b9\uff0c\u590d\u6742\u5ea6 $O(n \\log v)$\uff1b\n- \u7b2c\u4e09\u90e8\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u4e24\u6761\u8def\u5f84\u5206\u522b\u4ece\u4e0b\u5f80\u4e0a\u7edf\u8ba1\u7b54\u6848\uff0c\u6b64\u65f6\u6211\u4eec\u53ea\u9700\u8981\u63d2\u5165\u64cd\u4f5c\u5373\u53ef\u7edf\u8ba1\uff0c\u603b\u5171\u4e5f\u53ea\u4f1a\u63d2\u5165 $O(n)$ \u7ea7\u522b\u7684\u8282\u70b9\uff0c\u590d\u6742\u5ea6 $O(n \\log v)$\u3002\n\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u662f $O(n \\log v)$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n``` cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N = 30010, M = N << 1;\nstruct Trie\n{\n    struct Node\n    {\n        int s[2];\n        int end;\n    };\n    Node tr[N * 30];\n    int idx;\n    void clear()\n    {\n        for(int i = 0; i <= idx; i++)\n            tr[i].s[0] = tr[i].s[1] = tr[i].end = 0;\n        idx = 0;\n    }\n    void insert(int x, int id)\n    {\n        int p = 0;\n        for(int i = 29; i >= 0; i--)\n        {\n            int c = (x >> i) & 1;\n            if(!tr[p].s[c])tr[p].s[c] = ++idx;\n            p = tr[p].s[c];\n        }\n        tr[p].end = id;\n    }\n    int query(int x)\n    {\n        int p = 0;\n        for(int i = 29; i >= 0; i--)\n        {\n            int c = (x >> i) & 1;\n            if(tr[p].s[c ^ 1])p = tr[p].s[c ^ 1];\n            else if(tr[p].s[c])p = tr[p].s[c];\n            else return 0;\n        }\n        return tr[p].end;\n    }\n};\n\nint n;\nint h[N], e[M], ne[M], w[M], idx;\nvoid add(int a, int b, int c)\n{\n    e[idx] = b, ne[idx] = h[a], w[idx] = c, h[a] = idx++;\n}\nint a[N], ans[N];\nTrie tr;\nint l1, l2; int maxn;\nint dep[N], fa[N], deg[N];\nbool tag[N];\nvoid dfs1(int p, int fa, int v)\n{\n    dep[p] = dep[fa] + 1, ::fa[p] = fa, a[p] = v;\n    for(int i = h[p]; ~i; i = ne[i])\n    {\n        if(e[i] == fa)continue;\n        dfs1(e[i], p, v ^ w[i]);\n    }\n}\nint lca(int p, int q)\n{\n    if(dep[p] < dep[q])swap(p, q);\n    tag[p] = tag[q] = true;\n    while(dep[p] > dep[q])p = fa[p], tag[p] = true;\n    if(p == q)return p;\n    while(p != q)p = fa[p], q = fa[q], tag[p] = tag[q] = true;\n    return p;\n}\nint sta[N], tt;\nbool vis[N];\nvoid dfs2(int p, int fa)\n{\n    tr.insert(a[p], p);\n    int q = tr.query(a[p]);\n    if((a[p] ^ a[q]) > maxn)maxn = a[p] ^ a[q];\n    for(int i = h[p]; ~i; i = ne[i])\n    {\n        if(e[i] == fa || vis[e[i]])continue;\n        dfs2(e[i], p);\n    }\n}\nvoid solve(int p, int q)\n{\n    if(p == q)return;\n    if(dep[p] < dep[q])swap(p, q);\n    tt = 0;\n    while(p != q)sta[++tt] = p, vis[p] = true, p = fa[p];\n    tr.clear(), maxn = 0;\n    dfs2(1, 0);\n    for(int i = tt; i; i--)\n    {\n        ans[sta[i]] = maxn;\n        dfs2(sta[i], fa[sta[i]]);\n        vis[sta[i]] = false;\n    }\n}\nint res = 0;\nint main()\n{\n    memset(h, -1, sizeof(h));\n    scanf(\"%d\", &n);\n    bool flag = true;\n    for(int i = 1; i < n; i++)\n    {\n        int u, v, w;\n        scanf(\"%d%d%d\", &u, &v, &w);\n        add(u, v, w), add(v, u, w);\n        deg[u]++, deg[v]++;\n        if(deg[u] > 2 || deg[v] > 2)flag = false;\n    }\n    dfs1(1, 0, 0);\n    tr.clear(), maxn = 0;\n    for(int i = 1; i <= n; i++)\n    {\n        tr.insert(a[i], i);\n        int j = tr.query(a[i]);\n        if((a[i] ^ a[j]) > maxn)l1 = j, l2 = i, maxn = a[i] ^ a[j];\n    }\n    //\u6c42\u5b50\u6811\u5916\u7684\u7b54\u6848\n    int g = lca(l1, l2);\n    for(int i = g; i >= 1; i = fa[i])tag[i] = true;\n    for(int i = 2; i <= n; i++)\n        if(!tag[i])ans[i] = maxn;\n    solve(1, l1), solve(g, l2);\n    //\u4e00\u6761\u94fe\u4e14x\u5230y\u662f\u6574\u6761\u94fe\u7684\u7279\u6b8a\u60c5\u51b5\n    if(flag && deg[l1] == 1 && deg[l2] == 1)\n    {\n        tr.clear(), maxn = 0;\n        if(deg[l2] < deg[l1])swap(l1, l2);\n        for(int i = l2; i != l1; i = fa[i])\n        {\n            tr.insert(a[i], i);\n            int j = tr.query(a[i]);\n            if((a[i] ^ a[j]) > maxn)maxn = a[i] ^ a[j];\n            res = max(res, ans[i] + maxn);\n        }\n        printf(\"%d\\n\", res);\n        return 0;\n    }\n    //x\u4e0ey\u5747\u5728\u5b50\u6811\u5185\u7684\u70b9\n    for(int i = g; i >= 1; i = fa[i])\n        res = max(res, ans[i] + (a[l1] ^ a[l2]));\n    //x\u4e0ey\u5747\u5728\u5b50\u6811\u5916\u7684\u70b9\n    queue<int>q;\n    for(int i = l1; i != g; i = fa[i])\n    {\n        for(int j = h[i]; ~j; j = ne[j])\n            if(!tag[e[j]])q.push(e[j]);\n    }\n    for(int i = l2; i != g; i = fa[i])\n    {\n        for(int j = h[i]; ~j; j = ne[j])\n            if(!tag[e[j]])q.push(e[j]);\n    }\n    for(int i = h[g]; ~i; i = ne[i])\n        if(!tag[e[i]])q.push(e[i]);\n    for(int i = 1; i <= n; i++)vis[i] = false;\n    while(!q.empty())\n    {\n        tr.clear(), maxn = 0;\n        dfs2(q.front(), fa[q.front()]);\n        res = max(res, maxn + (a[l1] ^ a[l2]));\n        q.pop();\n    }\n    res = max(res, maxn + (a[l1] ^ a[l2]));\n    //x\u5230y\u8def\u5f84\u4e0a\u7684\u70b9\n    tr.clear(), maxn = 0;\n    for(int i = 1; i <= n; i++)vis[i] = false;\n    for(int i = l1; i != fa[g]; i = fa[i])\n    {\n        dfs2(i, fa[i]);\n        vis[i] = true;\n        res = max(res, maxn + ans[i]);\n    }\n    tr.clear(), maxn = 0;\n    for(int i = 1; i <= n; i++)vis[i] = false;\n    for(int i = l2; i != fa[g]; i = fa[i])\n    {\n        dfs2(i, fa[i]);\n        vis[i] = true;\n        res = max(res, maxn + ans[i]);\n    }\n\n    printf(\"%d\\n\", res);\n    return 0;\n}\n```",
        "postTime": 1675602172,
        "uid": 196903,
        "name": "\u5357\u9633\u5218\u5b50\u9aa5",
        "ccfLevel": 6,
        "title": "P6072 \u300eMdOI R1\u300f Path \u9898\u89e3"
    },
    {
        "content": "\u901a\u4fd7\u7684\u8bb2\uff0c\u4f60\u8981\u9009\u62e9\u4e24\u6761\u7b80\u5355\u8def\u5f84\uff0c\u6ee1\u8db3\u6ca1\u6709\u91cd\u5408\u7684\u70b9\uff0c\u4e14\u8fb9\u6743\u5f02\u6216\u548c\u4e4b\u548c\u6700\u5927\u3002 \n\n\u5982\u679c\u53ea\u67091\u6761\uff0c01Trie\u677f\u5b50\u3002  \n\n\u73b0\u5728\u6709\u4e24\u6761\uff0c\u53ef\u4ee5\u4ee5\u8282\u70b9 $x$ \u4e3a\u5206\u754c\u7ebf\uff0c\u6c42 $x$ \u7684\u5b50\u6811\u5916\u7684\u6700\u5927\u8def\u5f84\u7684\u6743\u503c $in_x$ \u548c $x$ \u7684\u5b50\u6811\u5185\u7684\u6700\u5927\u8def\u5f84\u7684\u6743\u503c $out_x$ \uff0c\u76f8\u52a0\u5373\u53ef\u3002   \n\n\u601d\u8def\u5c31\u5f88\u6e05\u6670\u4e86\u3002\n\n\u5148\u5904\u7406\u5b50\u6811\u5185\u3002\u66b4\u529b\u626b\u4e00\u904d $O(n^2 \\log { \\max{W}})$ \u3002  \n\u8003\u8651~~\u7384\u5b66~~\u7b97\u6cd5\uff0c\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u8fbe\u5230 $O(n\\log{n} \\log{ \\max{W}})$ \u3002  \n\u5177\u4f53\u5b9e\u73b0\u5c31\u662f\u5efa $n$ \u68f501Trie\uff0c\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u8282\u70b9\u6709\u591a\u5c11\u4e2a\u6570\u63d2\u5165\u4e86\u3002\u5408\u5e76\u65f6\uff0c\u679a\u4e3e\u5c0f\u7684\u7684\u6bcf\u4e00\u79cd\u60c5\u51b5\uff0c\u5c06\u5c0f\u7684\u5411\u5927\u7684\u5408\u5e76\u3002  \n\n\u518d\u5904\u7406\u5b50\u6811\u5916\u7684\u60c5\u51b5\u3002  \n\u9009\u51fa\u4e24\u4e2a\u70b9 $A$ \u548c $B$ ,\u4f7f\u5f97 $A$ \u5230 $B$ \u7684\u8def\u5f84\u7684\u6743\u503c $mx$ \u6700\u5927\u3002  \n\u6b64\u65f6\uff0c\u53ea\u6709\u4e0d\u5728 $A$ \u548c $B$ \u5230\u6839\u8282\u70b9\u7684\u94fe\u4e0a\u7684\u70b9 $x$ \u7684 $out_x=mx$\u3002  \n\u518d\u89c2\u5bdf\uff0c\u53d1\u73b0\u4ece\u6839\u8282\u70b9\u5230 $A$ \u548c $B$ \u7684\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u5b50\u6811\u7684\u5927\u5c0f\u662f\u9012\u51cf\u7684\uff0c\u5373\u5b50\u6811\u5916\u7684\u5927\u5c0f\u662f\u9012\u589e\u7684\u3002  \n\u8fd9\u65f6\uff0c\u53ef\u4ee5\u4ece\u6839\u8282\u70b9\u5411\u4e0b\u904d\u5386\u5230 $A$ \u6216 $B$ \uff0c\u8bbe\u5f53\u524d\u7684\u70b9\u4e3a $x$  \uff0c $son_x$ \u4e3a $x$ \u5728\u94fe\u4e0a\u7684\u513f\u5b50,\u5bf9\u6240\u6709\u4e0d\u5728\u94fe\u4e0a\u7684\u513f\u5b50\u8fdb\u884cDFS\uff0c\u5c06\u5230\u6839\u7684\u8def\u5f84\u6743\u503c\u63d2\u516501Trie\uff0c\u7b97\u51fa\u5f53\u524d\u7684 $mx=out_{son_x}$\u3002\n\n\n\n```cpp\n#include<cstdio>\n#define Re register int \n#define _for(i,a,b) for(register int i=(a);i<=(b);++i)\n#define __for(i,a,b) for(register int i=(a);i>=(b);--i)\n#define il inline\n#define pc putchar\nusing namespace std;\ntypedef long long ll;\nconst int N=3e4+10,M=1e6+10,inf=2147483647;\nil int re(){\n    int x=0;\n    bool f=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9')\n        f|=ch=='-',ch=getchar();\n    while(ch>='0'&&ch<='9')\n        x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    return f?-x:x;\n}\nvoid pr(ll x){\n\tif(x<0) pc('-'),x=-x;\n\tif(x>9) pr(x/10);\n\tpc(x%10|48);\n}\nint n,r[N],cnt;\nstruct Edge{\n\tint t,n,w;\n}edge[N<<1];\nil void add_edge(int u,int v,int w){\n\tedge[++cnt]={v,r[u],w};r[u]=cnt;\n\tedge[++cnt]={u,r[v],w};r[v]=cnt;\n}\nint fa[N],in[N],out[N];\nint ch[N*128][2];\nint t[N];\nvoid insert(int &p,int v){\n\tif(!p) p=++cnt;\n\tint pp=p;\n\t__for(i,30,0){\n\t\tint q=v>>i&1;\n\t\tif(!ch[pp][q]) ch[pp][q]=++cnt;\n\t\tpp=ch[pp][q];\n\t}\n}\nint ask(int p,int v){\n\tint ans=0;\n\t__for(i,30,0){\n\t\tint q=v>>i&1;\n\t\tif(ch[p][!q]) p=ch[p][!q],ans|=1<<i;\n\t\telse p=ch[p][q];\n\t}\n\treturn ans;\n}\nint root[N];\nil int max(int a,int b){\n\treturn a>b?a:b;\n}\nvoid merge(int x,int y,int z,int i,int &v){\n\tif(!x) return ;\n\tif(!(~i)){\n\t\tv=max(v,ask(root[y],z));\n\t\t++t[y];\n\t\tinsert(root[y],z);\n\t\treturn ;\n\t}\n\tmerge(ch[x][0],y,z,i-1,v);\n\tmerge(ch[x][1],y,z|1<<i,i-1,v);\n}\nint d[N];\nil void swap(int &x,int &y){\n\tx^=y^=x^=y;\n}\nvoid dfs1(int x){\n\t++t[x];\n\tinsert(root[x],d[x]);\n\tfor(Re i=r[x],y;i&&(y=edge[i].t);i=edge[i].n)\n\t\tif(y!=fa[x]){\n\t\t\td[y]=d[x]^edge[i].w;\n\t\t\tfa[y]=x;\n\t\t\tdfs1(y);\n\t\t\tif(t[x]<t[y]) swap(root[x],root[y]),swap(t[x],t[y]);\n\t\t\tmerge(root[y],x,0,30,in[x]);\n\t\t\tif(in[x]<in[y]) in[x]=in[y];\n\t\t}\n}\nint mx,A,B;\nstruct Trie{\n\tint ch[M][2],pos[M];\n\tvoid clear(){\n\t\t_for(i,1,cnt) ch[i][0]=ch[i][1]=0;\n\t\tcnt=1;\n\t}\n\tvoid find(int x,int y){\n\t\tint p=1,ans=0;\n\t\t__for(i,30,0){\n\t\t\tint q=x>>i&1;\n\t\t\tif(ch[p][!q]) p=ch[p][!q],ans|=1<<i;\n\t\t\telse p=ch[p][q];\n\t\t}\n\t\tif(ans>mx) mx=ans,A=pos[p],B=y;\n\t}\n\tvoid insert(int x,int y){\n\t\tint p=1;\n\t\t__for(i,30,0){\n\t\t\tint q=x>>i&1;\n\t\t\tif(!ch[p][q]) ch[p][q]=++cnt;\n\t\t\tp=ch[p][q];\n\t\t}\n\t\tpos[p]=y;\n\t}\n}tr;\nint son[N];\nvoid dfs2(int x){\n\ttr.insert(d[x],x);\n\ttr.find(d[x],x);\n\tfor(Re i=r[x],y;i&&(y=edge[i].t);i=edge[i].n)\n\t\tif(y!=fa[x])\n\t\t\tdfs2(y);\n}\nvoid solve(int x){\n\twhile(x!=1)\n\t\tson[fa[x]]=x,x=fa[x];\n\tmx=0;\n\ttr.clear();\n\twhile(x){\n\t\tout[x]=mx;\n\t\ttr.insert(d[x],x);\n\t\ttr.find(d[x],x);\n\t\tfor(Re i=r[x],y;i&&(y=edge[i].t);i=edge[i].n)\n\t\t\tif(y!=fa[x]&&y!=son[x])\n\t\t\t\tdfs2(y);\n\t\tx=son[x];\n\t}\n}\nbool vis[N];\nint lca(int x,int y){\n\twhile(x!=1) vis[x]=1,x=fa[x];\n\twhile(y!=1)\n\t\tif(vis[y])\n\t\t\treturn y;\n\t\telse y=fa[y];\n\treturn 1;\n}\nsigned main(){\n\tn=re();\n\t_for(i,2,n){\n\t\tint x=re(),y=re(),z=re();\n\t\tadd_edge(x,y,z);\n\t}\n\tcnt=0;\n\tdfs1(1);\n\tcnt=1;\n\t_for(i,1,n)\n\t\ttr.insert(d[i],i),tr.find(d[i],i);\n\t_for(i,1,n) out[i]=mx;\n\tint aa=A,bb=B;\n\tsolve(aa);\n\tsolve(bb);\n\tll ans=0;\n\tif(lca(aa,bb)!=1) ans=in[1];\n\t\n\t_for(i,2,n)\n\t\tif(ans<in[i]+out[i])\n\t\t\tans=in[i]+out[i];\n\tpr(ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1662779859,
        "uid": 609626,
        "name": "St_john",
        "ccfLevel": 0,
        "title": "P6072 \u300eMdOI R1\u300fPath"
    }
]