[
    {
        "content": "\u8fd1\u5b66\u4e86\u5355\u8c03\u961f\u5217\uff0c\u6240\u4ee5\u5c31\u7528\u5355\u8c03~~\u4e22\u96f7~~\u961f\u5217\u6765\u505a\u4e86  \n\u5148\u5206\u6790\u4e00\u4e0b\u9898\u610f  \n\u7ed9\u51fa\u4e00\u4e2an\u4e2a\u6570\u7684\u6570\u5217\uff0c\u8981\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c  \n\u6709\u70b9\u5751\u7684\u5c31\u662f\u7b2c0\u4e2a\u4e5f\u8981\u8bb0\u5f55  \n\u6240\u4ee5~~\u5f88\u81ea\u7136\u800c\u7136\u5730~~\u60f3\u5230\u4e86\u5355\u8c03\u961f\u5217  \n\u6709\u4eba\u8bf4\u7ebf\u6bb5\u6811\u725b\u903c\uff0c\u4e3a\u5565\u4e0d\u7528\u7ebf\u6bb5\u6811\u5462\uff1f  \n## \u9996\u5148\u7b2c\u4e00\u70b9\uff1a\u65f6\u95f4  \n\u5bf9\u4e8e\u5355\u8c03\u961f\u5217\u6765\u8bf4\uff0c\u4ec5\u4ec5\u9700\u8981O\uff08n\uff09\u7684\u65f6\u95f4\u626b\u4e00\u904d\u8fc7\u53bb\u5c31\u53ef\u4ee5\u4e86  \n\u4f46\u662f\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u6765\u8bf4\u5efa\u6811\u5c31\u9700\u8981nlogn\u7684\u65f6\u95f4\u4e86  \n\u518d\u52a0\u4e0a\u4e00\u6bb5\u4e00\u6bb5\u7684\u67e5\u8be2 \u65f6\u95f4\u5f00\u9500\u4e00\u4e0b\u5b50\u5c31\u5927\u4e86\u8d77\u6765  \n## \u518d\u770b\u7a7a\u95f4  \n\u7ebf\u6bb5\u6811\u9700\u8981\u7528\u52304*n\u7684\u7a7a\u95f4\u5927\u5c0f \u633a\u5927\u7684  \n\u800c\u5355\u8c03\u961f\u5217\u4ec5\u4ec5\u53ea\u9700\u8981n\u7684\u7a7a\u95f4\u5927\u5c0f\u5c31\u53ef\u4ee5\u4e86  \n## \u6700\u540e\u4ee3\u7801\u957f\u5ea6  \n\u7ebf\u6bb5\u6811\u9700\u8981\u7684\u5efa\u6811\u548c\u67e5\u8be2\u9700\u8981\u591a\u5c11\u548c\u5355\u8c03\u961f\u5217\u77ed\u77ed\u7684\u4e94\u516d\u884c  \n\u4e00\u4e0b\u5b50\u5c31\u53ef\u4ee5\u770b\u51fa\u6765\u4e86\n\n\u6240\u4ee5\u8fd9\u9053\u9898\u6211\u5c31\u662f\u9009\u7528\u5355\u8c03\u961f\u5217\uff08dalao\u522b\u5632\u8bbd\u6211\uff0c\u5c0f\u849f\u84bb\u4e00\u679a\uff09  \n  \n\u73b0\u5728\u6211\u4eec\u5c31\u5f00\u59cb\u8bb2\u8bb2\u5355\u8c03\u961f\u5217\u5230\u5e95\u662f\u4e2a\u4ec0\u4e48\u4e1c\u897f\u5427  \n# \u6982\u5ff5\uff1a\n\u5355\u8c03\u961f\u5217\u561b\uff0c\u5c31\u662f\u5355\u8c03\u7684\u961f\u5217  \n\u5355\u8c03\u9012\u589e\u6216\u8005\u5355\u8c03\u9012\u51cf  \n\u6240\u4ee5\u8bf4\u7b54\u6848\uff08\u4e5f\u5c31\u662f\u6700\u4f18\u89e3\uff09\u5c31\u5b58\u5728\u961f\u9996\uff0c\u800c\u961f\u5c3e\u5219\u662f\u6700\u540e\u8fdb\u961f\u7684\u5143\u7d20  \n\u90a3\u4e48\u600e\u4e48\u5224\u65ad\u8fd9\u4e2a\u6570\u662f\u5426\u8fd8\u5728\u8fd9\u4e2a\u533a\u95f4\u4e4b\u5185\u5462\uff1f  \n\u8fd9\u65f6\u5019\u5c31\u8981\u7528\u5230\u4e00\u4e2a\u7ed3\u6784\u4f53\u4e86 \n```cpp\nstruct node\n{\n    int val;\n    int pos;\n};\n```\nval\u5b58\u50a8\u8be5\u70b9\u7684\u503c\uff0cpos\u5b58\u50a8\u8be5\u70b9\u7684\u4f4d\u7f6e\uff0c\u5c31\u662f\u4e3a\u4e86\u80fd\u591f\u5728\u5faa\u73af\u4e2d\u5224\u65ad\u80fd\u5426\u628a\u8fd9\u4e2a\u70b9\u8e22\u6389  \n\u6839\u636e\u5355\u8c03\u961f\u5217\u7684\u6027\u8d28\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u5c06\u4e00\u4e2a\u65b0\u7684\u70b9\u63d2\u5165  \n\uff08\u4f60\u6bd4\u5982\uff09  \n\u5148\u770b\u6837\u4f8b\n\u5f53\u6211\u4eec\u8981\u5728\u961f\u5217\u4e2d\u63d2\u5165\u7b2cm + 1\u4e2a\u5143\u7d20\u7684\u65f6\u5019  \n\u4e5f\u5c31\u662f1  \n\u73b0\u5728\u961f\u5217\u4e2d\u662f   7 8  \n\u4ed6\u4eec\u5206\u522b\u5bf9\u5e94\u7684\u4f4d\u7f6e   1 2  \n\u56e0\u4e3a\u8981\u4ece\u961f\u5c3e\u63d2\u5165\u561b  \n\u4f60\u60f3\u60f3\u4f60\u6392\u961f \n\u5982\u679c\u6709\u4eba\u4e00\u4e0b\u5b50\u76f4\u63a5\u5230\u961f\u9996\uff0c\u4f60\u662f\u4e0d\u662f\u4f1a\u5f88\u4e0d\u723d\uff0c\u8ba4\u4e3a\u4ed6\u6ca1\u6709\u8d44\u683c  \n\u4f46\u662f\u5982\u679c\u4ed6\u4e00\u4e2a\u4e00\u4e2a\u63d2\u961f\uff0c\u4ece\u961f\u5c3e\u6328\u4e2a\u4e0a\u6765\uff0c\u4f60\u4e0d\u723d\u4e5f\u6ca1\u7528\u7684  \n\u6240\u4ee5\u5355\u8c03\u961f\u5217\u4e5f\u662f\u961f\u5217\uff0c\u4e5f\u662f\u5982\u6b64\uff0c\u6ca1\u6709\u5143\u7d20\u6709\u8d44\u683c\u76f4\u63a5\u5230\u5934  \n\u4f60\u8981\u6162\u6162\u6765  \n\u8fd9\u65f6\u5019\u4ee3\u7801\u5c31\u5f88\u660e\u663e\u4e86\n```cpp\n while((head <= tail)&&(v[tail].val >= a[i - 1]))\n            tail--;\n        v[++tail].val = a[i - 1];\n   //\u8fd9\u91cci - 1\u8981\u89e3\u91ca\u4e00\u4e0b\uff0c\u56e0\u4e3a\u8be5\u98980\u4e5f\u8981\u8ba1\u7b97\u8fdb\u53bb\n```\n\u90a3\u4e48\u5bf9\u4e8e\u5df2\u7ecf\u8fc7\u671f\u7684\u5143\u7d20\u600e\u4e48\u529e\u5462\uff1f  \n\u5982\u679c\u4e00\u4e2a\u5143\u7d20\u4ece\u961f\u9996\u5f00\u59cbt\u4eba  \n\u5982\u679c\u961f\u9996\u6ca1\u6709\u8fc7\u671f \u5176\u4ed6\u7684\u5143\u7d20\u4f60\u7ba1\u4ed6\u5e72\u561b\uff1f\u53c8\u4e0d\u662f\u7b54\u6848\uff0c\u73b0\u5728\u53c8\u7528\u4e0d\u5230  \n\u5982\u679c\u961f\u9996\u8fc7\u671f\uff0c\u90a3\u5c31t\u6389\u4ed6\u7ee7\u7eedt\u4e0b\u4e00\u4e2a  \u76f4\u5230\u627e\u5230\u4e00\u4e2a\u6ca1\u6709\u8fc7\u671f\u7684\uff0c\u7136\u540e\u53c2\u8003\u4e0a\u4e00\u6b65\u5c31OK\u4e86  \n```cpp\n while((head <= tail)&&(v[head].pos < i - m))\n            head++;\n```\n\u63a5\u4e0b\u91cc\u8d34\u4ee3\u7801\n# \u624b\u5199\u7248\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\nusing namespace std;\nint n,m;\ninline int rd()\n{\n    int data = 0;\n    int f = 1;\n    char ch = getchar();\n    while(ch < '0'||ch > '9')\n    {\n        if(ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while(ch >= '0'&&ch <= '9')\n    {\n        data = (data<<3) + (data<<1) + ch - '0';\n        ch = getchar();\n    }\n    return f * data; \n}\nint a[2000010];\nint min_que[2000010];\nstruct node\n{\n    int val;\n    int pos;\n}v[2000010];\nvoid write(int x)\n{\n    if(x > 10)\n        write(x/10);\n    putchar(x%10 + '0');\t\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i = 0;i < n;i++)\n        a[i] = rd();\n    int head = 1,tail = 0;\n    min_que[0] = 0;\n    for(int i = 1;i < n;i++)\n    {\n        while((head <= tail)&&(v[tail].val >= a[i - 1]))\n            tail--;\n        v[++tail].val = a[i - 1];\n        v[tail].pos = i - 1;\n        while((head <= tail)&&(v[head].pos < i - m))\n            head++;\n        min_que[i] = v[head].val;\n    }\n    for(int i = 0;i < n;i++)\n        printf(\"%d\\n\",min_que[i]);\n}\n```\n## STL\u7248\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<deque>\nusing namespace std;\nconst int maxsize = 2000010;\nint n,m;\nstruct node\n{\n    int val;\n    int pos;\n}A[maxsize];\ndeque<node> min_Q;\ninline int rd()\n{\n    int data = 0;\n    int f = 1;\n    char ch = getchar();\n    while(ch < '0'||ch > '9')\n    {\n        if(ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while(ch >= '0'&&ch <= '9')\n    {\n        data = (data<<3) + (data<<1) + ch - '0';\n        ch = getchar();\n    }\n    return f * data; \n}\nint min_que[maxsize]; \nint main()\n{\n    n = rd(),m = rd();\n    for(int i = 1;i <= n;i++)\n    {\n        A[i].val = rd();\n        A[i].pos = i - 1;\n    }\n    min_que[0] = 0;\n    for(int i = 1;i < n;i++)\n    {\n        while(!min_Q.empty()&&min_Q.back().val >= A[i].val)\n            min_Q.pop_back();\n        min_Q.push_back(A[i]);\n        while(!min_Q.empty()&&min_Q.front().pos < i - m)\n            min_Q.pop_front();\n        min_que[i] = min_Q.front().val;\n    }\n    for(int i = 0;i < n;i++)\n        printf(\"%d\\n\",min_que[i]);\t\n            \n}\n```\n\u5c0f\u5c0f\u7528\u4e86\u4e00\u4e0b\u5feb\u8bfb\uff0c\u4e0d\u61c2\u7684\u540c\u5b66\u53ef\u4ee5\u76f4\u63a5\u7528scanf\u4ee3\u66ff  \n\u4e0d\u8981\u7528cin\u4f1a\u8d85\u65f6\uff08\u9664\u975e\u4f60\u628astd\u540c\u6b65\u5173\u6389\uff09  \n\u5982\u679c\u8fd9\u9053\u9898\u4f60\u8fc7\u4e86\uff0c\u5c31\u53ef\u4ee5\u770b\u4e00\u4e0b\u4ee5\u4e0b\u4e24\u9898\uff0c\u90fd\u5dee\u4e0d\u591a\uff0c\u96be\u5ea6\u4e0d\u4f1a\u592a\u5927\uff0c\u6ce8\u610f\u8fb9\u754c\u6761\u4ef6\u5c31\u53ef\u4ee5\u8fc7\u4e86  \n\u4f20\u9001\u95e8\uff1a\n[P1886\u6ed1\u52a8\u7a97\u53e3](https://www.luogu.org/problemnew/show/P1886)\u3001[P2032\u626b\u63cf](https://www.luogu.org/problemnew/show/P2032)  \n\n\u6700\u540e\u518d\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u4e2a\u4f18\u5148\u961f\u5217\u7684\u4f5c\u7528\uff0c\u4e00\u822c\u662f\u7528\u6765\u4f18\u5316DP\uff0cOI\u4e2d\u8f83\u5c11\u76f4\u63a5\u4ec5\u4ec5\u8003\u5bdf\u8be5\u7b97\u6cd5\uff0c\u540c\u5e38\u90fd\u662f\u548cDP\u7ed3\u5408\u8d77\u6765\u3002  \n### \u5f53\u4f60\u5728\u51dd\u89c6\u7b97\u6cd5\u7684\u65f6\u5019\uff0c\u7b97\u6cd5\u4e5f\u5728\u51dd\u89c6\u4f60",
        "postTime": 1563123428,
        "uid": 181870,
        "name": "\u70b3\u6e90",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u6b64\u9898\u4e0d\u59a8\u53ef\u7528\u7ebf\u6bb5\u6811\u505a\u505a\uff1a\n\n\u5355\u8c03\u961f\u5217\u548c$RMQ$\uff0c\u9898\u89e3\u4e0a\u6f2b\u5929\u90fd\u662f\uff0c\u8fd8\u6709\u4e00\u4e9b\u8f83\u4e3a\u6577\u884d\u7684\u7ebf\u6bb5\u6811\uff0c\u6240\u4ee5\u6765\u4e00\u53d1\u8be6\u7ec6\u7684\u8bb2\u89e3\uff1a\n\n\u5148\u8bf4\u8bf4\u7ebf\u6bb5\u6811\uff1a\n\n\n\u73b0\u5728\u6211\u7ed9\u4f60\u4e00\u9053\u9898\u3002\n\n1\u3001\u4e00\u5171\u6709$n$\u4e2a\u6570\uff0c\u7ed9\u4f60$m$\u4e2a\u8303\u56f4\uff0c\u8ba9\u4f60\u6c42\u8303\u56f4\u5185\u7684\u6570\u548c\u3002\uff08$n \\leq 10^6$\uff09\n\n\u8fd9\u4e0d\u662f\u5f88\u7b80\u5355\uff0c\u4e0d\u662f\u5c0f\u5b66\u751f\u7684$OI$\u9898\u5417\uff1f\u524d\u7f00\u548c\uff0c\u641e\u5b9a\u3002\n\n\u518d\u52a0\u5f3a\uff1a\n\n2\u3001\u4e00\u5171\u6709$n$\u4e2a\u6570\uff0c\u7ed9\u4f60$k$\u4e2a\u64cd\u4f5c\uff0c\u8ba9\u4f60\u5728$l$\u548c$r$\u533a\u95f4\u5185\u52a0\u4e00\u4e2a\u6570\uff0c\u6216\u8ba9\u4f60\u6c42\u533a\u95f4\u5185\u7684\u548c\u3002\uff08$n \\leq 10^4$\uff09\n\nemm\u524d\u7f00\u548c\u65e0\u529b\u7ef4\u6301\u4e86\u3002\n\n\u518d\u52a0\u5f3a\uff1a\n\n2\u3001\u4e00\u5171\u6709$n$\u4e2a\u6570\uff0c\u7ed9\u4f60$k$\u4e2a\u64cd\u4f5c\uff0c\u8ba9\u4f60\u5728$l$\u548c$r$\u533a\u95f4\u5185\u52a0\u4e00\u4e2a\u6570\uff0c\u6216\u8ba9\u4f60\u6c42\u533a\u95f4\u5185\u7684\u548c\u3002\uff08$n \\leq 10^6$\uff09\n\n\u8fd9\u9700\u8981\u4e00\u79cd\u5f3a\u5927\u7684\u6570\u636e\u7ed3\u6784\u7ebf\u6bb5\u6811\n\n\n\n\u7ebf\u6bb5\u6811\uff0c\u7c7b\u4f3c\u533a\u95f4\u6811\uff0c\u5b83\u5728\u5404\u4e2a\u8282\u70b9\u4fdd\u5b58\u4e00\u6761\u7ebf\u6bb5\uff08\u6570\u7ec4\u4e2d\u7684\u4e00\u6bb5\u5b50\u6570\u7ec4\uff09\uff0c\u4e3b\u8981\u7528\u4e8e\u9ad8\u6548\u89e3\u51b3\u8fde\u7eed\u533a\u95f4\u7684\u52a8\u6001\u67e5\u8be2\u95ee\u9898\uff0c\n\n\u7531\u4e8e\u4e8c\u53c9\u7ed3\u6784\u7684\u7279\u6027\uff0c\u5b83\u57fa\u672c\u80fd\u4fdd\u6301\u6bcf\u4e2a\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u4e3a$O$($log$ $n$)\u3002\n\n\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u4e00\u4e2a\u533a\u95f4\uff0c\n\n\u5b50\u8282\u70b9\u5219\u5206\u522b\u8868\u793a\u7236\u8282\u70b9\u7684\u5de6\u53f3\u534a\u533a\u95f4\uff0c\u4f8b\u5982\u7236\u4eb2\u7684\u533a\u95f4\u662f[$a$,$b$]\uff0c\u90a3\u4e48($c$=($a$+$b$)/$2$)\u5de6\u513f\u5b50\u7684\u533a\u95f4\u662f[$a$,$c$]\uff0c\u53f3\u513f\u5b50\u7684\u533a\u95f4\u662f[$c$+$1$,$b$]\u3002\n\n\u7531\u4e0a\u56fe\u53ef\u5f97\uff0c\n\n1\u3001\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u5b69\u5b50\u533a\u95f4\u8303\u56f4\u4e3a[$l$\uff0c$mid$]\uff0c\u53f3\u5b69\u5b50\u4e3a[$mid$+$1$,$r$]\n\n2\u3001\u5bf9\u4e8e\u7ed3\u70b9$k$\uff0c\u5de6\u5b69\u5b50\u7ed3\u70b9\u4e3a$2$*$k$\uff0c\u53f3\u5b69\u5b50\u4e3a$2$*$k$+$1$\uff0c\u8fd9\u7b26\u5408\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6027\u8d28\u3002\n\n\u7ebf\u6bb5\u6811\u652f\u6301\u4e94\u79cd\u79cd\u64cd\u4f5c\uff1a\u5efa\u6811\u3001\u5355\u70b9\u67e5\u8be2\u3001\u5355\u70b9\u4fee\u6539\u3001\u533a\u95f4\u67e5\u8be2\u3001\u533a\u95f4\u4fee\u6539\u3002\n\n\u5728\u5176\u4ed6\u5ef6\u7533\u91cc\u8fd8\u652f\u6301\u5982\u533a\u95f4\u6c42\u6700\u503c\u3002\n\n## 1\u3001\u5efa\u6811\n\n#### a\u3001\u5bf9\u4e8e\u4e8c\u5206\u5230\u7684\u6bcf\u4e00\u4e2a\u7ed3\u70b9\uff0c\u7ed9\u5b83\u7684\u5de6\u53f3\u7aef\u70b9\u786e\u5b9a\u8303\u56f4\u3002\n\n#### b\u3001\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5b58\u50a8\u8981\u7ef4\u62a4\u7684\u4fe1\u606f\uff0c\u518d\u56de\u5230\u7236\u8282\u70b9\u65f6\u7d2f\u8ba1\u5230\u7236\u8282\u70b9\u53bb\u3002\n\n#### c\u3001\u5408\u5e76\n\n### \u4ee3\u7801\n\n```\nvoid build(int k,int t,int w)\n{ int mid;\n\tif (t>w) return;\n\tif (t==w)\n\t  {\n\t  \ttree[k].l=t;tree[k].r=w;\n\t  \ttree[k].w=a[t];\n\t  \treturn;\n\t  }\n\tmid=(t+w)/2;\n\tbuild(k*2,t,mid);\n\tbuild(k*2+1,mid+1,w);\n\ttree[k].l=t;tree[k].r=w;\n\ttree[k].w=tree[k*2].w+tree[k*2+1].w;\n}\n```\n## \u5355\u70b9\u67e5\u8be2\n#### \u67e5\u8be2\u4e00\u4e2a\u70b9\u7684\u72b6\u6001\uff0c\u8bbe\u5f85\u67e5\u8be2\u70b9\u4e3ax\n#### a\u3001\u5982\u679c\u5f53\u524d\u679a\u4e3e\u7684\u70b9\u5de6\u53f3\u7aef\u70b9\u76f8\u7b49\uff0c\u5373\u53f6\u5b50\u8282\u70b9\uff0c\u5c31\u662f\u76ee\u6807\u8282\u70b9\u3002\n#### b\u3001\u5982\u679c\u4e0d\u662f\uff0c\u6240\u4ee5\u8bbe\u67e5\u8be2\u4f4d\u7f6e\u4e3ax\uff0c\u5f53\u524d\u7ed3\u70b9\u533a\u95f4\u8303\u56f4\u4e3a\u4e86l\uff0cr\uff0c\u4e2d\u70b9\u4e3amid\u3002\n#### c\u3001\u5982\u679cx<=mid\uff0c\u5219\u9012\u5f52\u5b83\u7684\u5de6\u5b69\u5b50\uff0c\u5426\u5219\u9012\u5f52\u5b83\u7684\u53f3\u5b69\u5b50\n### \u4ee3\u7801\n```\nvoid ask(int k)\n{\n    if(tree[k].l==tree[k].r) //\u5f53\u524d\u7ed3\u70b9\u7684\u5de6\u53f3\u7aef\u70b9\u76f8\u7b49\uff0c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u662f\u6700\u7ec8\u7b54\u6848 \n    {\n        ans=tree[k].w;\n        return ;\n    }\n    int m=(tree[k].l+tree[k].r)/2;\n    if(x<=m) ask(k*2);//\u76ee\u6807\u4f4d\u7f6e\u6bd4\u4e2d\u70b9\u9760\u5de6\uff0c\u5c31\u9012\u5f52\u5de6\u5b69\u5b50 \n    else ask(k*2+1);//\u53cd\u4e4b\uff0c\u9012\u5f52\u53f3\u5b69\u5b50 \n}\n```\n\n## \u5355\u70b9\u4fee\u6539\n#### \u5373\u66f4\u6539\u67d0\u4e00\u4e2a\u70b9\u7684\u72b6\u6001\u3002\n#### \u7ed3\u5408\u5355\u70b9\u67e5\u8be2\u7684\u539f\u7406\uff0c\u627e\u5230x\u7684\u4f4d\u7f6e\uff1b\u6839\u636e\u5efa\u6811\u72b6\u6001\u5408\u5e76\u7684\u539f\u7406\uff0c\u4fee\u6539\u6bcf\u4e2a\u7ed3\u70b9\u7684\u72b6\u6001\u3002\n\n```\nvoid add(int k)\n{\n    if(tree[k].l==tree[k].r)//\u627e\u5230\u76ee\u6807\u4f4d\u7f6e \n    {\n        tree[k].w+=y;\n        return;\n    }\n    int m=(tree[k].l+tree[k].r)/2;\n    if(x<=m) add(k*2);\n    else add(k*2+1);\n    tree[k].w=tree[k*2].w+tree[k*2+1].w;//\u6240\u6709\u5305\u542b\u7ed3\u70b9k\u7684\u7ed3\u70b9\u72b6\u6001\u66f4\u65b0 \n}\n```\n\n## \u533a\u95f4\u67e5\u8be2\n\n\n\n\n\u4ee3\u7801\n\n```\nvoid sum(int k)\n{\n    if(tree[k].l>=x&&tree[k].r<=y) \n    {\n        ans+=tree[k].w;\n        return;\n    }\n    int m=(tree[k].l+tree[k].r)/2;\n    if(x<=m) sum(k*2);\n    if(y>m) sum(k*2+1);\n}\n```\n## \u533a\u95f4\u4fee\u6539\n\n\u540c\u7406\n\n#### \u6211\u4eec\u4e0d\u8981\u9012\u5f52\u5230\u6bcf\u4e2a\u8282\u70b9\u3002\u6240\u4ee5\u8981\u6709\u4e00\u4e2a\u65b0\u7684\u6982\u5ff5\uff1a\u61d2\u6807\u8bb0\u3002\n\n\u5c31\u50cf\u65b0\u5e74\u7684\u65f6\u5019\u7684\u538b\u5c81\u94b1\uff0c\u53ea\u6709\u8981\u7528\u7684\u65f6\u5019\u624d\u7528\uff0c\u4e0d\u8981\u7684\u76f4\u63a5\u7ed9\u7236\u6bcd\u4fdd\u7ba1\u3002\n\n\u6240\u4ee5\uff0c\u4f20\u4e0b\u6765\u7684\u66f4\u6539\u503c\u82e5\u5728\u4e00\u4e2a\u533a\u95f4\u91cc\uff0c\u5c31\u4e0d\u518d\u4e0b\u4f20\uff0c\u4fee\u6539\u5b8c\u8be5\u8282\u70b9\u4fe1\u606f\u540e\uff0c\u5728\u6b64\u8282\u7684\u61d2\u6807\u8bb0\u4e0a\u6253\u4e00\u4e2a\u66f4\u6539\u503c\u3002\n\n\u5f53\u9700\u8981\u9012\u5f52\u8fd9\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\u65f6\uff0c\u6807\u8bb0\u4e0b\u4f20\u7ed9\u5b50\u8282\u70b9\u3002\u8fd9\u91cc\u4e0d\u5fc5\u7ba1\u7528\u54ea\u4e2a\u5b50\u8282\u70b9\uff0c\u4e24\u4e2a\u90fd\u4f20\u4e0b\u53bb\u3002\n\n\u2460\u5f53\u524d\u8282\u70b9\u7684\u61d2\u6807\u8bb0\u7d2f\u79ef\u5230\u5b50\u8282\u70b9\u7684\u61d2\u6807\u8bb0\u4e2d\u3002\n\n\u2461\u4fee\u6539\u5b50\u8282\u70b9\u72b6\u6001\u3002\u5728\u5f15\u4f8b\u4e2d\uff0c\u5c31\u662f\u539f\u72b6\u6001+\u5b50\u8282\u70b9\u533a\u95f4\u70b9\u7684\u4e2a\u6570\u7236\u8282\u70b9\u4f20\u4e0b\u6765\u7684\u61d2\u6807\u8bb0\u3002\n\n\u2462\u7236\u8282\u70b9\u61d2\u6807\u8bb0\u6e050\u3002\u8fd9\u4e2a\u61d2\u6807\u8bb0\u5df2\u7ecf\u4f20\u4e0b\u53bb\u4e86\uff0c\u6b20\u503a\u8fd8\u6e05\uff0c\u4e0d\u7528\u518d\u8fd8\u4e86\u3002\n\n### \u4e0b\u4f20\u4ee3\u7801\n\n```\nvoid pushdown(int k)\n{\n\ttree[k*2].w+=((tree[k*2].r-tree[k*2].l+1)*tree[k].f);\n\ttree[k*2+1].w+=((tree[k*2+1].r-tree[k*2+1].l+1)*tree[k].f);\n\ttree[k*2].f+=tree[k].f;\n\ttree[k*2+1].f+=tree[k].f;\n\ttree[k].f=0;\n}\n```\n### \u533a\u95f4\u4fee\u6539\u4ee3\u7801\n\n```\nvoid add(int k,int t,int w)\n{ int mid;\nif (t>w) return;\n\tif (x<=t&&w<=y) \n\t  {\n\t  \ttree[k].w+=((w-t+1)*z);\n\t  \ttree[k].f+=z;\n\t  \treturn ;\n\t  }\n\tmid=(t+w)/2;\n\tif (tree[k].f) pushdown(k); \n\tif (x<=mid) add(k*2,t,mid);\n\tif (y>mid) add(k*2+1,mid+1,w);\n\ttree[k].w=tree[k*2].w+tree[k*2+1].w;\n}\n```\n\n### \u5355\u70b9\u67e5\u8be2\u4ee3\u7801\n\n```\n void ask(int k)//\u5355\u70b9\u67e5\u8be2\n{\n    if(tree[k].l==tree[k].r)\n    {\n        ans=tree[k].w;\n        return ;\n    }\n    if(tree[k].f) pushdown(k);//\u61d2\u6807\u8bb0\u4e0b\u4f20\uff0c\u552f\u4e00\u9700\u8981\u66f4\u6539\u7684\u5730\u65b9\n    int m=(tree[k].l+tree[k].r)/2;\n    if(x<=m) ask(k*2);\n    else ask(k*2+1);\n}\n```\n### \u533a\u95f4\u67e5\u8be2\u4ee3\u7801\n```\nint ask(int k,int t,int w)\n{ int mid;\nif (t>w) return 0;\n\tif (x<=t&&w<=y)\n\t  {\n\t  \treturn tree[k].w;\n\t  }\n\tmid=(t+w)/2;\n\tif (tree[k].f) pushdown(k); \n\tint sum=0;\n\tif (x<=mid)sum+=ask(k*2,t,mid);\n\tif (y>mid)sum+=ask(k*2+1,mid+1,w);\n\ttree[k].w=tree[k*2].w+tree[k*2+1].w;\n\treturn sum;\n}\n```\n\n[\u66f4\u5177\u4f53\u7684\u63cf\u8ff0](https://www.luogu.org/blog/2005-00-88-wyk/qian-tan-xian-duan-shu)\n\u65e0\u803b\u5730\u63a8\u8350\u4e00\u4e0b\u6211\u7684\u535a\u5ba2\n\n\u6240\u4ee5\u8bf4\u6b64\u9898\u4e3a\u7ebf\u6bb5\u6811\u7684\u62d3\u5c55\uff1a\u628a\u6c42\u533a\u95f4\u548c\u6539\u4e3a\u4e86\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5c06\u61d2\u6807\u8bb0\u5b58\u50a8\u7684\u5185\u5bb9\u6539\u4e3a\u6700\u5c0f\u503c\uff0c\u533a\u95f4\u4fee\u6539\u518d\u52a0\u5de5\u4e00\u4e0b\u3002\n\n\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\nvoid build(int k,int t,int w)\n{ int mid;\n\tif (t>w) return;\n\tif (t==w)\n\t  {\n\t  \ttree[k].l=t;tree[k].r=w;\n\t  \ttree[k].w=a[t];\n\t  \treturn;\n\t  }\n\tmid=(t+w)/2;\n\tbuild(k*2,t,mid);\n\tbuild(k*2+1,mid+1,w);\n\ttree[k].l=t;tree[k].r=w;\n\ttree[k].w=min(tree[k*2].w,tree[k*2+1].w);\n}\nint ask(int k,int t,int w)\n{ int mid;\nif (t>w) return 0;\n\tif (x<=t&&w<=y)\n\t  {\n\t  \treturn tree[k].w;\n\t  }\n\tmid=(t+w)/2;\n\tint sum=INT_MAX;\n\tif (x<=mid)sum=min(sum,ask(k*2,t,mid));\n\tif (y>mid)sum=min(sum,ask(k*2+1,mid+1,w));\n\treturn sum;\n}\nint read(int &x)\n{\n\tchar c=getchar();int f=1;\n\tx=0;\n\twhile (c<'0'||c>'9')\n\t  {\n\t  if (c=='-') f=-1;\n\t  c=getchar();\n      }\n\twhile (c>='0'&&c<='9')\n      {\n      \tx=x*10+(int)c-48;\n      \tc=getchar();\n\t  }\n\treturn x*f;\n}\n\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n log n)$\n\n\u53ea\u8981\u4e0d\u5361\u5e38\uff0c\u901f\u5ea6\u548c\u5355\u8c03\u961f\u5217\u548c$RMQ$\u76f8\u5dee\u65e0\u51e0\uff0c\u4e5f\u662f\u4e00\u79cd\u6c42\u6700\u503c\u7684\u65b9\u6848\uff0c\u53ef\u4ee5\u4e86\u89e3\u4e00\u4e0b\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n\n```\n#include<bits/stdc++.h>\n#define N 2000010\nusing namespace std;\nstruct node{\n\tint l,r,w,f;\n}tree[N*2+1];\nint x,y,z,i,a[N],n,m;\nvoid build(int k,int t,int w)\n{ int mid;\n\tif (t>w) return;\n\tif (t==w)\n\t  {\n\t  \ttree[k].l=t;tree[k].r=w;\n\t  \ttree[k].w=a[t];\n\t  \treturn;\n\t  }\n\tmid=(t+w)/2;\n\tbuild(k*2,t,mid);\n\tbuild(k*2+1,mid+1,w);\n\ttree[k].l=t;tree[k].r=w;\n\ttree[k].w=min(tree[k*2].w,tree[k*2+1].w);\n}\nint ask(int k,int t,int w)\n{ int mid;\nif (t>w) return 0;\n\tif (x<=t&&w<=y)\n\t  {\n\t  \treturn tree[k].w;\n\t  }\n\tmid=(t+w)/2;\n\tint sum=INT_MAX;\n\tif (x<=mid)sum=min(sum,ask(k*2,t,mid));\n\tif (y>mid)sum=min(sum,ask(k*2+1,mid+1,w));\n\treturn sum;\n}\nint read(int &x)\n{\n\tchar c=getchar();int f=1;\n\tx=0;\n\twhile (c<'0'||c>'9')\n\t  {\n\t  if (c=='-') f=-1;\n\t  c=getchar();\n      }\n\twhile (c>='0'&&c<='9')\n      {\n      \tx=x*10+(int)c-48;\n      \tc=getchar();\n\t  }\n\treturn x*f;\n}\nsigned main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tn=read(n);m=read(m);\n\tmemset(a,INT_MAX,sizeof(a));\n\tfor (int i=1;i<=n;i++) a[i]=read(a[i]);\n\tbuild(1,1,n);\n\tfor (int i=1;i<=n;i++)\n\t  { int c;\n\t  \tx=i-m;y=i-1;\n\t  \tif (x<=0) x=1;\n\t  \tif (x>y) \n\t  \t  {\n\t  \t  \tprintf(\"0\\n\");\n\t  \t  \tcontinue;\n\t\t\t}\n\t  \tprintf(\"%d\\n\",ask(1,1,n));\n\t  }\n\t\n}\n```\n",
        "postTime": 1547265559,
        "uid": 119685,
        "name": "Kevin_Wa",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u5199\u4e86\u4e24\u79cd\uff0c\u5355\u8c03\u961f\u5217\u548cST\u90fd\u5199\u4e86\n\n\u4f46\u662f\nST\u52a0\u8bfb\u4f18\u8f93\u4f18\u8fd8\u662fT\u4e86\u4e24\u4e2a\u70b9\uff0c\u53ef\u662f\u6309\u65f6\u95f4\u590d\u6742\u5ea6nlogn\u8c8c\u4f3c\u80fd\u8fc7= =\u6b22\u8fce\u5927\u795e\u5410\u69fd\n\n\n\u5148\u6765\u5355\u8c03\u961f\u5217\uff1a\n\n\n\n```cpp\n#include<cstdio>\nint n,m,a[2000000],q[2000000],l=1,r=0;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n    for(int i=1;i<=n;i++)\n    {\n        printf(\"%d\\n\",a[q[l]]);//\u8f93\u51fa\u961f\u9996\n        if(i-q[l]+1>m && l<=r) l++;//\u67e5\u770b\u961f\u9996\u662f\u5426\u5728\u533a\u95f4\u5185\uff0c\u4e0d\u5728\u7684\u8bdd\u51fa\u961f\u5217\n        while(a[i]<a[q[r]] && l<=r) r--;//\u8fdb\u961f\u6bd4\u8f83\uff0c\u628a\u6bd4\u5b83\u5927\u7684\u90fd\u8e22\u51fa\u53bb\n        q[++r]=i;\n    }\n}\n```\nST\u500d\u589e\uff0c\u6b22\u8fce\u5927\u795e\u89e3\u7b54\u5982\u4f55AC\uff0c\u522b\u60f3\u590d\u5236\u9ecf\u8d34\uff0c\u8d34\u4e86\u4e5f\u4f1aT\u4e24\u4e2a\u70b9\uff0c\u81ea\u5df1\u5199\u5427\uff1a\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<iostream>\nusing namespace std;\nint n,m,a[2000010],f[25][2000010];\nint read()\n{\n    int x=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9')x*=10,x+=ch-'0',ch=getchar();\n    return x;\n}\nint write(int x)\n{\n    if(x>=10)write(x/10);\n    putchar(x%10+'0'); \n```\n}//\u8bfb\u4f18\u8f93\u4f18\u52a0\u4e0d\u52a0\u968f\u4fbf\uff0c\u52a0\u4e86\u4e5f\u662fT = =\n\n```cpp\nint main()\n{\n    n=read(),m=read();\n    for(int i=1;i<=n;i++) a[i]=read();\n    for(int i=1;i<=n;i++)\n        f[0][i]=a[i];//\u521d\u59cb\u5316\n    for(int i=1;i<=log(n)/log(2);i++)\n        for(int j=0;j<=n-(1<<i)+1;j++)//\u522b\u5fd8\u4e86\u4ece0\u5f00\u59cb\n        {\n            if(f[i-1][j]==0) f[i][j]=f[i-1][j+(1<<(i-1))];\n            else if(f[i-1][j+(1<<(i-1))]==0) f[i][j]=f[i-1][j];//\u6ce8\u610f\u9664\u975e\u4e24\u4e2a\u90fd\u662f0\uff0c\u4e0d\u8981\u53d60\uff0c\u4e0d\u7136\u7b2c\u4e00\u4e2a\u4f1a\u6302\n            else f[i][j]=min(f[i-1][j],f[i-1][j+(1<<(i-1))]);//\u500d\u589e\u8f6c\u79fb\n        }\n    for(int i=1;i<=n;i++)\n    {\n        int l=max(0,i-m),r=i-1;//max\u8bb0\u5f97\u52a0\uff0c\u4e0d\u7136RE\n        int k=log(r-l+1)/log(2);\n        int ans=min(f[k][l],f[k][r-(1<<k)+1]);\n        write(ans);\n        putchar('\\n');\n    }\n    return 0;\n}\n\u518d\u6b21\u6c42\u52a9\u4e00\u4e0b\u5404\u8def\u5927\u795e\uff0c\u6709\u6ca1\u6709ST\u8fc7\u7684\uff1f\n```",
        "postTime": 1502420133,
        "uid": 21874,
        "name": "hicc0305",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "## RMQ+\u6eda\u52a8\u6570\u7ec4\n\n------------\n\n\u770b\u89c1\u5927\u4f6c\u4eec\u90fd\u7528\u5355\u8c03\u961f\u5217,\u4e5f\u6709\u7528RMQ\u4f46\u6ca1\u6709\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u7684\u65b9\u6cd5\n\u672c\u849f\u84bb\u5c31\u6765\u53d1\u4e00\u4efdRMQ+\u6eda\u52a8\u6570\u7ec4\u7684\u9898\u89e3\n\n------------\n\n\u7a97\u53e3\u6bcf\u6b21\u5f80\u540e\u79fb\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5c31\u8fdb\u6765\u4e00\u4e2a\u6570\uff0c\u51fa\u53bb\u4e00\u4e2a\u6570\u3002\u6bcf\u4e00\u6b21\u9009\u6700\u5c0f\u7684\u5c31\u884c\u4e86\u3002\u5177\u4f53\u5730\u770b\u4ee3\u7801\u5427\uff01RMQ\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u4e3b\u8981\u5728\u8fd9\u91cc\u4ecb\u7ecd\u6eda\u52a8\u6570\u7ec4\u3002\n\n------------\n\n### \u6eda\u52a8\u6570\u7ec4\n  _\u201c\u6eda\u52a8\u6570\u7ec4\u7684\u4f5c\u7528\u5728\u4e8e\u4f18\u5316\u7a7a\u95f4\uff0c\u4e3b\u8981\u5e94\u7528\u5728\u9012\u63a8\u6216\u52a8\u6001\u89c4\u5212\u4e2d\uff08\u598201\u80cc\u5305\u95ee\u9898\uff09\u3002\u56e0\u4e3aDP\u9898\u76ee\u662f\u4e00\u4e2a\u81ea\u5e95\u5411\u4e0a\u7684\u6269\u5c55\u8fc7\u7a0b\uff0c\u6211\u4eec\u5e38\u5e38\u9700\u8981\u7528\u5230\u7684\u662f\u8fde\u7eed\u7684\u89e3\uff0c\u524d\u9762\u7684\u89e3\u5f80\u5f80\u53ef\u4ee5\u820d\u53bb\u3002\u6240\u4ee5\u7528\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u662f\u5f88\u6709\u6548\u7684\u3002\u5229\u7528\u6eda\u52a8\u6570\u7ec4\u7684\u8bdd\u5728N\u5f88\u5927\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8fbe\u5230\u538b\u7f29\u5b58\u50a8\u7684\u4f5c\u7528\u3002\u201d_ \n\n#### \u5173\u4e8e\u6eda\u52a8\u6570\u7ec4\u7684\u597d\u6587\u7ae0\u5728\u8fd9\u91cc\u63a8\u8350\u4e00\u4e0b\n[\u6eda\u52a8\u6570\u7ec4](https://www.cnblogs.com/GNLin0820/p/6434693.html)\n\n------------\n\n### \u7c98\u4ee3\u7801\n- **\u6ca1\u7528\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u7eafRMQ** \u2014\u2014\u2014*8\u4e2a\u70b9*\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn = 2000005;\nint a[maxn],bp,n;\nint f[maxn][20]; //[i,i+2^j)\u6700\u5927\u503c\nint g[maxn]; \n\nint main()\n{\n    scanf(\"%d %d\", &n,&bp);\n    for (int i = 1; i <= n; ++i) scanf(\"%d\", &a[i]);\n    //init\n    int now=0;\n    for (int i=1;i<=n;i++)\n    {\n    \tif ((1 << (now+1))<=i) ++now;\n    \tg[i]=now;\n    }\n    for (int i = 1; i <= n; ++i) f[i][0] = a[i];\n    for (int j = 1; (1 << j) <= bp; ++j) \n\t{\n        for (int i = 1; i <= n - (1 << j) + 1; ++i) \n\t\t{\n            f[i][j] = min(f[i][j - 1], f[i + (1 << (j - 1))][j - 1]);\n        }\n    }\n    int q=n;\n    int l,r;\n    for (int i=1;i<=q;i++)\n    {\n        if (i==1) \n        {\n            printf(\"0\\n\");\n            continue;\n        }\n        if (i==2) \n        {\n            printf(\"%d\\n\",a[1]);\n            continue;\n        }\n        l=i-bp;\n        if (l<=0) l=1;\n        r=i-1;\n        int x = g[r-l+1];\n//        while ((1 << x) <= r - l + 1) ++x;\n//        --x;             //\u8868\u793a\u6700\u5927\u7684x\u4f7f\u5f972^x\u5c0f\u4e8e\u7b49\u4e8er-l \n        int ans = min(f[l][x], f[r - (1 << x) + 1][x]);\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```\n- **\u4f7f\u7528\u4e86\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u7684** \u2014\u2014\u2014*\u5168AC*\n\n```cpp\n#include <bits/stdc++.h>\n\t\nusing namespace std;\n\nconst int maxn = 2000005;\nint a[maxn],bp,n;\nint f[maxn][2]; //[i,i+2^j)\u6700\u5927\u503c\nint g[maxn];\n\nint main() \n{\n    scanf(\"%d %d\", &n,&bp);\n    for (int i = 1; i <= n; ++i) scanf(\"%d\", &a[i]);\n    //init\n    int now=0;\n    for (int i=1;i<=n;i++)\n    {\n    \tif ((1 << (now+1))<=i) ++now;\n    \tg[i]=now;\n\t}\n\tint t = 0;\n    printf(\"0\\n\");\n    now = 2;\n    for (int j = 0; (1 << j) <= bp; ++j) \n\t{\n    \tt = 1 - t;\n    \tif (j == 0) \n\t\t{\n    \t\tfor (int i = 1; i <= n; ++i) f[i][t] = a[i];\n    \t}\n    \telse \n\t\t{\n\t        for (int i = 1; i <= n - (1 << j) + 1; ++i) \n\t\t\t{\n\t            f[i][t] = min(f[i][1 - t], f[i + (1 << (j - 1))][1 - t]);\n\t        }\n\t    }\n        while (now <= n && min(now - 1, bp) < (1 << (j + 1))) \n\t\t{\n        \tint l=now-bp;\n        \tif (l<=0) l=1;\n        \tint r=now-1;\n        \tint x = g[r - l + 1];\n        \tint ans = min(f[l][t], f[r - (1 << x) + 1][t]);\n        \tprintf(\"%d\\n\",ans);\n        \t++now;\n        }\n    }\n    return 0;\n}\n```\n\n\u597d\u4e86\uff0c\u6700\u540e\u5e0c\u671b\u80fd\u5e2e\u5230\u5927\u5bb6AC\u8fd9\u9898QwQ!",
        "postTime": 1519439204,
        "uid": 32573,
        "name": "Aurora__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "# [\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c](https://www.luogu.org/problem/P1440)\n\n**\u9898\u76ee\u63cf\u8ff0**\uff1a\n\n\u4e00\u4e2a\u542b\u6709n\u9879\u7684\u6570\u5217(n<=2000000)\uff0c\u6c42\u51fa\u6bcf\u4e00\u9879\u524d\u7684m\u4e2a\u6570\u5230\u5b83\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3002\u82e5\u524d\u9762\u7684\u6570\u4e0d\u8db3m\u9879\u5219\u4ece\u7b2c1\u4e2a\u6570\u5f00\u59cb\uff0c\u82e5\u524d\u9762\u6ca1\u6709\u6570\u5219\u8f93\u51fa0\u3002\n\n\u8bfb\u9898\u4e4b\u540e\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u9053\u9898\u5c31\u662f\u5728\u6c42\uff1a\n\n> \u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u5e8f\u5217A\uff0c\u6c42A\u4e2d\u6240\u6709\u957f\u5ea6\u4e3am\u7684\u8fde\u7eed\u5b50\u5e8f\u5217\u4e2d\u7684\u6700\u5c0f\u503c\n\n\u800c\u9488\u5bf9\u8fd9\u79cd\u95ee\u9898\uff0c**[\u5355\u8c03\u961f\u5217](https://www.luogu.org/blog/Sweetlemon/dan-diao-dui-lie)**\u4f3c\u4e4e\u662f\u6211\u4eec\u6700\u597d\u7684\u9009\u62e9\u3002\n\n\u5355\u8c03\u961f\u5217\uff0c\u8bf4\u662f\u961f\u5217\uff0c\u5374\u4e0d\u7b26\u5408\u961f\u5217\u201c\u5148\u8fdb\u5148\u51fa\u201d\u7684\u539f\u5219\uff0c\u5b83\u53ea\u662f\u6cbf\u7528\u4e86\u961f\u5217\u7684\u601d\u60f3\uff0c\u5e76\u5177\u6709\u4e00\u5b9a\u7684**\u5355\u8c03\u6027**\uff0c\u62e5\u6709\u4e00\u4e2a\u961f\u5217\u5934**head**\u548c\u4e00\u4e2a\u961f\u5217\u5c3e**tail**\uff0c\u7528**head**\u548c**tail**\u6765\u63a7\u5236\u961f\u5217\u7684\u957f\u5ea6\uff0c\u7b5b\u9009\u961f\u5217\u4e2d\u7684\u5143\u7d20\u4ee5\u53ca\u4fdd\u6301\u961f\u5217\u7684**\u5355\u8c03\u6027**\u3002\n\n\u4f46\u600e\u6837\u63a7\u5236\u961f\u5217\u7684\u957f\u5ea6\uff0c\u7b5b\u9009\u961f\u5217\u4e2d\u7684\u5143\u7d20\u4ee5\u53ca\u4fdd\u6301\u961f\u5217\u7684**\u5355\u8c03\u6027**\u5462\uff1f\n\n\u8fd9\u5c31\u662f\u5355\u8c03\u961f\u5217\u7684\u5b9e\u73b0\u4e86\u3002\n\n\u7528\u6837\u4f8b\u6765\u5206\u6790\u4e00\u4e0b\uff1a\n\n```\n6 2\n7 8 1 4 3 2\n```\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u62e5\u6709\u4e86\u4e00\u4e2a\u521d\u59cb\u961f\u5217\uff1a7 8 1 4 3 2\n\n\u62e5\u6709\u4e0a\u5e1d\u89c6\u89d2\u7684\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u7b54\u6848\u662f\uff1a\n\n```\n0\n7\n7\n1\n1\n3 \n```\n\n\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u4e0d\u8bba\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u591a\u5c11\uff0c\u5b83\u4e4b\u524dm\u4e2a\u5143\u7d20\u7684\u6700\u5c0f\u503c\u6c38\u8fdc\u4e3a**0**~~\uff08\u56e0\u4e3a\u5b83\u4e4b\u524d\u5e76\u6ca1\u6709\u5143\u7d20\uff09\u200b~~\uff0c\u800c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u662f\u591a\u5c11\u4e5f**\u6ca1\u6709\u5173\u7cfb**~~\uff08\u56e0\u4e3a\u5b83\u4e4b\u540e\u5e76\u6ca1\u6709\u5143\u7d20\uff09~~\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u7528\u627e\u5230\u7b2c2\u4e2a\u5230\u7b2cn\u4e2a\u5143\u7d20\u4e2d\u6bcf\u4e2a\u524dm\u4e2a\u5143\u7d20\u7684\u6700\u5c0f\u503c\u5c31\u53ef\u4ee5\u4e86\uff0c\u90a3\u4e48\u5355\u8c03\u961f\u5217\u7684**\u5355\u8c03\u6027**\u4e5f\u5e94\u8be5\u662f**\u9012\u589e**\u7684\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u961f\u5217\u91cc\u6bcf\u4e2a\u5143\u7d20\u7684\u5e8f\u53f7\u653e\u5165\u5355\u8c03\u961f\u5217\u64cd\u4f5c\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u4e86\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u6a21\u62df\u4e86\uff1a\n\n\u8003\u8651\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0ci=1\uff0chead=1\uff0ctail=0\uff0cq[tail]=0\uff0ca[1]=7\uff0ca[1]>a[ q[tail] ]\uff0c\u628aa[1]\u653e\u5165\u4e0d\u4f1a\u7834\u574f\u5355\u8c03\u6027\uff0cq[head]=0\uff0c\u8fd9\u4e2a\u5143\u7d20\u8ddd\u961f\u9996\u5143\u7d20\u7684\u8ddd\u79bb\u4e3a0\uff0c\u5219\u961f\u5217\u4e3a\uff1a1\n\n\u8003\u8651\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff0ci=2\uff0chead=1\uff0ctail=1\uff0cq[tail]=1\uff0ca[2]=8\uff0ca[2]>a[ q[tail] ]\uff0c\u628aa[2]\u653e\u5165\u4e0d\u4f1a\u7834\u574f\u5355\u8c03\u6027\uff0cq[head]=1\uff0c\u8fd9\u4e2a\u5143\u7d20\u8ddd\u961f\u9996\u5143\u7d20\u7684\u8ddd\u79bb\u4e3a1\uff0c\u5219\u961f\u5217\u4e3a\uff1a1 2\n\n\u8003\u8651\u7b2c\u4e09\u4e2a\u5143\u7d20\uff0ci=3\uff0chead=1\uff0ctail=2\uff0cq[tail]=2\uff0ca[3]=1\uff0c\u4f46a[3]<a[ q[tail] ]\uff0c\u628aa[3]\u653e\u5165\u4f1a\u7834\u574f\u5355\u8c03\u6027\uff0c\u800ca[3]<a[ q[tail] ]\uff0c\u7531\u4e8e\u6c42\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u53ea\u80fd\u5c06a[ q[tail=2] ]\u5f39\u51fa\u961f\u5217\u6765\u4fdd\u8bc1\u5355\u8c03\u6027\u4e86\uff0c\u800ca[3]>a[ q[tail=1] ]\uff0c\u8fd9\u65f6\u518d\u5c06a[3]\u653e\u5165\u5c31\u4e0d\u4f1a\u7834\u574f\u5355\u8c03\u6027\u4e86\uff0cq[head]=1\uff0c\u8fd9\u4e2a\u5143\u7d20\u8ddd\u961f\u9996\u5143\u7d20\u7684\u8ddd\u79bb\u4e3a2\uff0c\u8fbe\u5230\u957f\u5ea6m=2\u4e86\uff0c\u8fd9\u961f\u5217\u5934**head**\u5c31\u5411\u540e\u79fb\uff0c\u5219\u961f\u5217\u4e3a\uff1a3\u3002\n\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u7b2cn-1\u4e2a\uff0c\u56e0\u4e3a\u7b2cn\u4e2a\u540e\u9762\u6ca1\u6709\u5143\u7d20\uff0c\u6240\u4ee5\u7b2cn\u4e2a\u4e0d\u4f1a\u8fdb\u5165\u961f\u5217\uff0c\u6bcf\u6b21\u90fd\u8f93\u51fa\u961f\u5217\u5934\u5bf9\u5e94\u7684\u5143\u7d20\u503c\uff0c\u5c31\u5f97\u5230\u4e86\u7b54\u6848\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#define maxn 2000005\nusing namespace std;\nint n,m;\nint a[maxn];\nint q[maxn];\nint head,tail;\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n    head=1;\n    tail=0;\n    printf(\"0\\n\");//\u7b2c\u4e00\u4e2a\u5143\u7d20\u5b83\u4e4b\u524d\u5e76\u6ca1\u6709\u5143\u7d20\n    for(int i=1;i<n;i++)//\u4ece1~n-1\u4e2a\uff0c\u7b2cn\u4e2a\u4e0d\u8fdb\u961f\u5217\n    {\n        while((head<=tail)&&((i-q[head])>=m)) head++;//\u63a7\u5236\u961f\u5217\u7684\u957f\u5ea6\n        while((head<=tail)&&(a[q[tail]]>=a[i])) tail--;//\u7b5b\u9009\u961f\u5217\u4e2d\u7684\u5143\u7d20\n        tail++;\n        q[tail]=i;//\u4fdd\u6301\u961f\u5217\u7684\u5355\u8c03\u6027\n        printf(\"%d\\n\",a[q[head]]);//\u8f93\u51fa\u7b54\u6848\n    }\n    return 0;\n}\n```",
        "postTime": 1573047189,
        "uid": 135458,
        "name": "\u677e\u98ce\u4e4b\u72d0",
        "ccfLevel": 4,
        "title": "\u3010\u9898\u89e3\u3011P1440 \u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c"
    },
    {
        "content": "# \u5410\u69fd\n\u611f\u89c9\u5176\u4ed6\u9898\u89e3\u6ca1\u6709\u5199\u6e05\u695a\uff0c\u672c\u849f\u84bb\u6123\u662f\u641e\u4e86\u4e00\u4e0b\u5348\u7684\u5355\u8c03\u961f\u5217\uff0c\u4e00\u8138\u61f5\u903c\u3002\n\n\u4e8e\u662f\u6253\u7b97\u5199\u4e00\u4e2a\u8be6\u7ec6\u4e00\u70b9\u7684\u9898\u89e3\uff0c\u4e5f\u53ef\u4ee5\u52a0\u6df1\u4e00\u4e0b\u81ea\u5df1\u7684\u5370\u8c61\u3002ps\uff1a\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u5199\u5f97\u4e0d\u597d\u4e0d\u8981\u4ecb\u610f\u3002\n# \u601d\u8def\n\n\u5176\u5b9e\u9898\u76ee\u610f\u601d\u53ef\u770b\u6210\u6c421\u2014n-1\u7684\u6bcf\u4e00\u9879\u7684\u524dm\u9879\u4e2d\u7684\u6700\u5c0f\u503c\n\n\n\u9996\u5148\u6784\u9020\u4e00\u4e2a\u5355\u8c03\u589e\u7684\u961f\u5217\uff0c\u6bcf\u6b21\u8fdb\u6765\u4e00\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e0e\u961f\u5c3e\u7684\u6570\u6bd4\u8f83\uff1b\u5982\u679c\u6bd4\u961f\u5c3e\u7684\u6570\u5c0f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u76f4\u63a5\u5165\u961f\uff0c\u5982\u679c\u6bd4\u961f\u5c3e\u6570\u5927\uff0cr--\uff0c\u5f39\u51fa\u961f\u5c3e\uff0c\u7136\u540e\u7ee7\u7eed\u6bd4\u4e0b\u53bb\u76f4\u5230\u6bd4\u961f\u5c3e\u6570\u5927\u6216\u961f\u5217\u4e3a\u7a7a\u4e3a\u6b62\u3002\u5f53\u957f\u5ea6\u8d85\u8fc7m\u65f6\uff0cl++\uff0c\u628a\u961f\u9996\u5f39\u6389\u3002\u8fd9\u6837\uff0c\u53ea\u9700\u6bcf\u6b21\u8f93\u51fa\u961f\u9996\uff0c\u5c31\u662f\u5f53\u524d\u7684\u6700\u5c0f\u503c\u3002\n\n\u90a3\u4e48\u600e\u4e48\u5224\u65ad\u5f53\u524d\u7684\u957f\u5ea6\u5462\uff1f\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u7531\u4e8e\u65b0\u7684\u6570\u603b\u662f\u4ece\u540e\u5f80\u524d\u63d2\u5165\uff0c\u4e8e\u662f\u961f\u5217\u4e2d\u5404\u4e2a\u6570\u7684\u5e8f\u53f7\u4e5f\u662f\u5355\u8c03\u589e\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u961f\u9996\u4e00\u5b9a\u662f\u6700\u5148\u8fdb\u6765\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u7528\u961f\u9996\u7684\u5e8f\u53f7\u51cf\u53bb\u5f53\u524d\u7684\u6570\u7684\u5e8f\u53f7\u518d+1\u5c31\u884c\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\n\n2 4 6 8 3 5 4 2\uff08m=4\uff09\n\uff08\u5148\u8f93\u51fa\u4e00\u4e2a0\uff09\n\n|    \u64cd\u4f5c     |\u961f\u5217|\u5f53\u524d\u533a\u57df|\u8f93\u51fa|\n| --------: | -----------: | -----------: | -----------: | -----------: |\n|2\u5165\u961f          |2      |2      |2|\n|4\u5165\u961f          |2 4    |2 4    |2|\n|6\u5165\u961f          |2 4 6  |2 4 6  |2|\n|8\u5165\u961f          |2 4 6 8|2 4 6 8|2|\n|6\u30014\u30012\u51fa\u961f\uff0c3\u5165\u961f|3      |4 6 8 3|3|\n|5\u5165\u961f|3 5|6 8 3 5|3|\n|5\u51fa\u961f\uff0c4\u5165\u961f|3 4| 8 3 5 4|3|\n\u53ea\u9700\u7b97\u5230n-1\n\n# \u4ee3\u7801\n\u7531\u4e8e\u5404\u5143\u7d20\u5e8f\u53f7\u4e5f\u5fc5\u987b\u5b58\u50a8\uff0c\u624d\u80fd\u5224\u65ad\u957f\u5ea6\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u7684\u961f\u5217\u91cc\u9762\u5b58\u7684\u662f\u5143\u7d20\u5e8f\u53f7\n```cpp\n#include<cstdio>\nint q[2000001],n,m,l=1,r=1,x,a[2000001];\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tprintf(\"0\\n\");\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\twhile(a[q[r-1]]>=a[i]&&l<r)r--;\n\t\t//r\u662f\u961f\u5c3e\uff0c\u662f\u7a7a\u8282\u70b9\uff0cr-1\u624d\u662f\u961f\u5217\u6700\u540e\u4e00\u4e2a\u6570 \n\t\tq[r++]=i;\n\t\tif(i-q[l]+1>m)l++;//\u5982\u679c\u957f\u5ea6\u5927\u4e8em \n\t\tprintf(\"%d\",a[q[l]]);\n\t\tif(i!=n-1)printf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1564723060,
        "uid": 213560,
        "name": "lcglcg",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u8fd9\u9053\u9898\u6709\u4e09\u79cd\u89e3\u6cd5\uff1a\n\n1. \u66b4\u529b\n2. \u7ebf\u6bb5\u6811\n3. \u5355\u8c03\u961f\u5217\n- - -\n\u65b9\u6cd51\uff1a\u66b4\u529b $O(nm)$ \u4e0d\u7528\u8bf4\u4e86\uff0c\u8d85\u65f6\u59a5\u59a5\u7684\u3002\n- - -\n\u65b9\u6cd52\uff1a\u7ebf\u6bb5\u6811 $O(n\\log n)$ \u3002\n\n\u8fd9\u9053\u9898\u663e\u7136\u662f\u4e00\u9053\u6c42\u533a\u95f4\u6700\u5c0f\u503c\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u8003\u8651\u5230\u7ebf\u6bb5\u6811\u3002\n\n\u867d\u7136\u8bf4\u8fd9\u4e2a\u6570\u636e\u89c4\u6a21\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\uff0c\u4f46\u662f\uff0c\u8003\u8651\u5230\u7801\u91cf\u4ee5\u53ca\u5176\u4ed6\u5404\u79cd\u56e0\u7d20\uff0c\u6211\u4eec\u8fd8\u662f\u9009\u62e9\u66f4\u5feb\u7684\u65b9\u6cd5\u6bd4\u8f83\u597d\u3002\uff08~~\u4e0d\u4f1a\u7ebf\u6bb5\u6811\u5c31\u76f4\u8bf4\u561b~~\uff09\n- - -\n\u65b9\u6cd53\uff1a\u5355\u8c03\u961f\u5217$O(n)$\u3002\n\n\u5148\u770b\u4e00\u5f20\u56fe\uff1a![image.png](https://i.loli.net/2020/02/24/bTR9ZFEP7wtOWaQ.png)\n\n\u770b\u5230\u4e86\u5417\uff0c\u5176\u4e2d\u5b50\u5e8f\u5217`7 8 1`\u7684\u6700\u5c0f\u503c\u4e3a1\uff0c\u4e0d\u7ba1\u8fd9\u4e2a\u7a97\u53e3\u600e\u4e48\u79fb\u52a8\uff0c7\u548c8\u4e00\u5b9a\u4e0d\u53ef\u80fd\u518d\u6b21\u6210\u4e3a\u8be5\u5e8f\u5217\u7684\u6700\u5c0f\u503c\uff0c\u6240\u4ee57\u548c8\u6211\u4eec\u5c31\u6839\u672c\u4e0d\u7528\u7ba1\uff0c\u76f4\u63a5\u5f39\u51fa\u5373\u53ef\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a**\u5355\u8c03\u9012\u589e**\u7684\u961f\u5217\u6765\u7ef4\u62a4\u7a97\u53e3\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint a[2000009],i,j,n,m;\nint q[2000009],t=0,w=0;//\u5355\u8c03\u961f\u5217\uff0c\u961f\u5217\u4e2d\u5b58\u50a8\u7684\u662f\u4e0b\u6807\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tscanf(\"%d\",&a[1]);//\u9996\u5148\u8f93\u5165\u7b2c\u4e00\u4e2a\u6570\u3002\n\tprintf(\"0\\n\");//\u7b2c\u4e00\u4e2a\u6570\u4e4b\u524d\u6ca1\u6709\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f88\u6109\u5feb\u5730\u8f93\u51fa0\u3002\n\tq[w]=1;//\u5f80\u961f\u5217\u91cc\u63d2\u5165\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\n\tfor(i=2;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\twhile(t<=w&&i-q[t]>m) t++;//\u5982\u679c\u961f\u9996\u7684\u6570\u5df2\u7ecf\u4e0d\u518d\u8303\u56f4\u91cc\u4e86\uff0c\u51fa\u961f\u3002\n\t\tprintf(\"%d\\n\",a[q[t]]);\n\t\twhile(t<=w&&a[q[w]]>a[i]) w--;//\u7ef4\u62a4\u961f\u5217\u3002\n\t\tq[++w]=i;//\u63d2\u5165\u5143\u7d20\u3002\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1582552585,
        "uid": 192044,
        "name": "tobie",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u975e\u5e38\u795e\u5947\uff0c\u7528zkw\u7ebf\u6bb5\u6811\u5c45\u7136\u4e0d\u4f1aT\uff1b\n\n\u4ee5\u4e0b\u662fzkw\u7ebf\u6bb5\u6811\u6c42\u533a\u95f4\u6700\u5c0f\u503c\u7684\u6a21\u677f\u3002\n\n```cpp\n    #include<cstdio>\n    #include<algorithm>\n    using namespace std;\n    int n,m,tree[4000001];\n    int main()\n    {\n        scanf(\"%d%d\",&n,&m);\n        for(int i=1;i<=n;++i)\n            scanf(\"%d\",&tree[n+i]);\n        tree[2*n+1]=2e9;\n        for(int i=n;i;--i)\n            tree[i]=min(tree[i<<1],tree[i<<1|1]);//\u5efa\u6811\n        puts(\"0\");\n        for(int i=2;i<=n;++i)\n        {\n            int l=max(n,i-m-1+n),r=i+n;//zkw\u9002\u5408\u5f00\u533a\u95f4\u67e5\u8be2\n            int ans=2e9;\n            while(l^r^1)//zkw\u7ebf\u6bb5\u6811\u7684\u67e5\u8be2\n            {\n                if(~l&1) ans=min(tree[l^1],ans);\n                if(r&1) ans=min(tree[r^1],ans);\n                l>>=1,r>>=1;\n            }\n            printf(\"%d\\n\",ans);\n        }\n        return 0;\n}\n```",
        "postTime": 1514462604,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "## \u4e8c\u5143\u7ec4\u5c0f\u6839\u5806\n  \u5148\u6765\u770b\u4e00\u4e0b\u9898\u76ee\u3002~~\u55ef\uff0c\u9898\u76ee\u8fd9\u4e48\u77ed\u4e00\u5b9a\u5f88\u6c34~~10\u5206\u949f\u540e\u6253\u4e86\u4e00\u904d\u9012\u63a8\uff0c\u6837\u4f8b\u6ca1\u8fc7\uff0c\u624d\u53d1\u73b0\u6211\u6c42\u7684\u662f\u4ece\u7b2c\u4e00\u4e2a\u5230\u73b0\u5728\u7684\u6700\u5c0f\u503c\u3002\n  \n  \u7136\u540e\u53c8\u60f3\u7528\u4e00\u4e2a\u961f\u5217\u53bb\u505a\uff0c\u5220\u9664\u662f\u65b9\u4fbf\u4e86\uff0c\u4f46\u600e\u4e48\u67e5\u8be2\u6700\u5c0f\u503c\u5462\uff1f\u5728\u60f3\u4e8610\u5206\u949f\u540e\u53c8\u653e\u5f03\u4e86\u8fd9\u4e2a\u65b9\u6848\u3002\n  \n  \u63a5\u7740\u53c8\u60f3\u5230\u4e86\u67e5\u8be2\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u662f\u4e0d\u662f\u53ef\u4ee5\u7528\u4e00\u4e2a\u5c0f\u6839\u5806\u7ef4\u62a4\uff1b\u90a3\u4e48\u600e\u4e48\u66f4\u65b0\u5462\uff1f\n  \u7ecf\u8fc7\u601d\u8003\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5806\u9876\u88ab\u66f4\u6539\u53ea\u6709\u4e24\u79cd\u53ef\u80fd\n  \n  1. \u6709\u4e00\u4e2a\u66f4\u5c0f\u7684\u503c\u52a0\u5165\uff0c\u5806\u9876\u88ab\u66f4\u6362\n  1. \u5806\u9876\u5728\u5f53\u524d\u4f4d\u7f6ei\u7684m\u4e2a\u4e4b\u524d\uff0c\u4e0d\u80fd\u518d\u7528\uff0c\u9700\u5220\u53bb\n  \n  \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e8c\u5143\u7ec4\u7684\u5c0f\u6839\u5806\uff0c\n  \u7b2c\u4e00\u5143\u50a8\u5b58\u8be5\u70b9\u5927\u5c0f\uff0c\u7b2c\u4e8c\u5143\u5b58\u5b83\u5728\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\u3002\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u53ea\u8981\u770b\u5806\u9876\u7684\u7b2c\u4e8c\u5143x\u662f\u5426\u5728\u5f53\u524d\u4f4d\u7f6ei\u7684m\u4e2a\u4e4b\u524d\uff0c\u5373 if(i-m>x) \u90a3\u4e48\u5220\u53bb\u5806\u9876\n  ```cpp\npriority_queue< pair< int , int > > q;\n```\n\u2191\u4e8c\u5143\u7ec4\u5927\u6839\u5806\u5b9a\u4e49\uff0c\u5269\u4e0b\u7684\u7ec6\u8282\u5728\u4ee3\u7801\u6ce8\u91ca\u4e2d\n\n  ~~\u53c8\u77ed\u53c8\u5feb\u2642~~\u7684AC\u4ee3\u7801\n  ```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,a[2000002];\npriority_queue< pair< int , int > > q;//\u4e8c\u5143\u7ec4\u4e8c\u53c9\u5806 \nint main()\n{\n    cin>>n>>m>>a[1];//\u5148\u628aa[1]\u8bfb\u5165\u5e76\u653e\u5165\u5806\u4e2d \n    q.push(make_pair(-a[1],1));//\u6bcf\u6b21\u653e\u5165\u76f8\u53cd\u6570\uff08\u53d6\u51fa\u5f53\u7136\u4e5f\u8981\u53cd\u4e00\u4e0b\uff09\uff0c\u8ba9\u5176\u53d8\u6210\u5c0f\u6839\u5806 \n    printf(\"%d\\n\",0);//\u7b2c\u4e00\u4e2a\u6c38\u8fdc\u8f93\u51fa0 \n    for(int i=2;i<=n;i++){\\\n    \tcin>>a[i];//\u8bfb\u5165 \n    \tint x=q.top().second;//\u53bb\u9664\u5806\u4e2d\u8fc7\u65f6\u7684\u5806\u9876 \n    \twhile(i-m>x){\n    \t\tq.pop();\n    \t\tx=q.top().second;\n\t\t} \n\t\tprintf(\"%d\\n\",-q.top().first);//\u53bb\u76f8\u53cd\u6570\u8f93\u51fa\u73b0\u5728\u7684\u5806\u9876 \n\t\tq.push(make_pair(-a[i],i));//\u6700\u540e\u518d\u5c06\u5f53\u524d\u503c\u653e\u5165\u5806\u4e2d\uff08\u56e0\u4e3a\u524dm\u4e2a\u503c\u4e2d\u662f\u4e0d\u5305\u62ec\u5f53\u524d\u503c\u7684\uff09 \n\t}\n\treturn 0;\n}\n\t\n\n```\n",
        "postTime": 1575614663,
        "uid": 235658,
        "name": "llzzxx712",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "/\\*\n\u6211\u770b\u9898\u89e3\u91cc\u90fd\u662f\u7ebf\u6bb5\u6811\u548c\u5355\u8c03\u961f\u5217\uff0c\u4ee5\u53ca\u8bf4ST\u8868\u4f1aT\u7684\uff0c\u4f46\u6211\u8fd8\u662f\u5148\u7801\u4e86\u4e2aST\u8868\uff0c\u679c\u7136T\u4e86\u4e24\u7ec4\n\n\u6240\u4ee5\u6211\u8981\u53e6\u5bfb\u5b83\u6cd5\uff0c\u6700\u540e\u7528\u66b4\u529b\u89e3\u51b3\u4e86\uff0c\u55ef\uff0c\u66b4\u529b\u2026\u2026\n\n\u81f3\u5c11\u6211\u89c9\u5f97\u6bd4\u8f83\u66b4\u529b\uff0c\u5199\u5b8c\u540e\u611f\u89c9\u6709\u70b9\u50cf\u5355\u8c03\u961f\u5217\uff0c\u4f46\u80af\u5b9a\u4e0d\u662f\u5566\n\n\u6211\u89c9\u5f97\u8fd9\u9898\u548cP1886\u6ed1\u52a8\u7a97\u53e3\u6709\u70b9\u50cf\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u9898\u6570\u636e\u8303\u56f4\u66f4\u5927\uff0c\u4e5f\u53ea\u7528\u7edf\u8ba1\u6700\u5c0f\u503c\uff0c\n\n\u6211\u4fbf\u7528\u6211\u505aP1886\u7684\u65b9\u6cd5\u66b4\u529b\u7ef4\u62a4\u4e86\u4e00\u4e2a\u5927\u5c0f\u4e3am\u7684\u6ed1\u52a8\u7a97\u53e3\uff08P1886\u6b63\u89e3\u4e5f\u662f\u5355\u8c03\u961f\u5217\u6765\u7740\uff09\uff0c\u7edf\u8ba1\u6700\u5c0f\u503c\n\n\u7ed3\u679c\u7adf\u7136A\u4e86\uff0c\u5e94\u8be5\u662fm\u4e0d\u591f\u5927\uff0c\u6ca1\u6709\u5361\u8fd9\u4e2a\uff0c\u800c\u4e14\u6211\u628a\u66b4\u529b\u7ef4\u62a4\u6700\u5c0f\u503c\u65f6\u7684j\u6253\u6210\u4e86i\u8fd8\u5f97\u4e8660\u5206\uff0c\u771f\u662f\u4e0d\u77e5\u8be5\u8bf4\u4ec0\u4e48\u597d\n\n\u4e3b\u8981\u601d\u60f3\u8ddf\u6211\u5728P1886\u9898\u89e3\u4e0a\u5199\u7684\u4e00\u6837\uff1a\n\n\u7a97\u53e3\u6bcf\u6b21\u5f80\u540e\u79fb\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5c31\u8fdb\u6765\u4e00\u4e2a\u6570\uff0c\u51fa\u53bb\u4e00\u4e2a\u6570\u3002\n\n\u8fdb\u6765\u7684\u6570\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\u4e00\u662f\u5b83\u80fd\u505a\u65b0\u7684\u6700\u5c0f\u503c\uff0c\u90a3\u5c31\u66f4\u65b0\uff1b\u4e8c\u662f\u90fd\u4e0d\u662f\uff0c\u6ca1\u5565\u7528\u5c31\u6401\u7740\u3002\n\n\u51fa\u53bb\u7684\u6570\u4e5f\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\u4e00\u662f\u5b83\u662f\u539f\u6765\u7684\u6700\u5c0f\u503c\uff0c\u8fd9\u65f6\u5c31\u4ece\u65b0\u626b\u4e00\u4e0b\u6574\u4e2a\u7a97\u53e3\u91cc\u7684\u6570\uff0c\u66f4\u65b0\u4e00\u4e0b\u6700\u5927\u503c\uff08\u6216\u6700\u5c0f\u503c\uff09\uff1b\u4e8c\u4e5f\u662f\u90fd\u4e0d\u662f\uff0c\u5c31\u4e0d\u7ba1\u5b83\u3002\n\n\u4e00\u5f00\u59cb\u7684\u65f6\u5019\u7a97\u53e3\u5927\u5c0f\u4e0d\u8db3k\u65f6\u4e0d\u7528\u5220\u6570\uff0c\u52a0\u6570\u4e4b\u524d\u8f93\u51fa\u4e00\u4e0b\u5f53\u524d\u8bb0\u7684\u6700\u5c0f\u503c\uff0c\u5c31\u597d\u4e86\u3002\n\n\u5177\u4f53\u8be6\u60c5\u8bf7\u770b\u4ee3\u7801\u6ce8\u91ca\u5427\n\n\\*/\n\n\n\n\n\n    \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<cstdlib>\n#include<string>\n#include<queue>\n#include<map>\n#include<vector>\n#define ll long long\n#define R register\n#define Rf(a,b,c) for(R int (a)=(b);(a)<=(c);++(a))\n#define Tf(a,b,c) for(R int (a)=(b);(a)>=(c);--(a))\nusing namespace std;\nconst int N=2000005,inf=1e9+7;//inf\u7528\u6765\u521d\u59cb\u5316ans\u4e3a\u6781\u5927\u503c \nint n,m,a[N],l=1,r,ans=inf;\n//ans\u4e3a\u5f53\u524d\u7a97\u53e3\u7684\u6700\u5c0f\u503c\uff0c\u4e5f\u5c31\u662f\u7b54\u6848\uff0cl\u4e3a\u7a97\u53e3\u533a\u95f4\u7684\u5de6\u7aef\u70b9\uff0cr\u4e3a\u53f3\u7aef\u70b9 \ninline int read() {//\u8bfb\u5165\u53ca\u8f93\u51fa\u4f18\u5316 \n    int x=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x*=10;x+=(ch-'0');ch=getchar();}\n    return x*f;\n}\ninline void write(int x)\n{\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\nint main()\n{\n    n=read();m=read();//m\u5c31\u662f\u7a97\u53e3\u5927\u5c0f\u5566 \n    Rf(i,1,n) {\n        a[i]=read();//\u6bcf\u6b21\u8bfb\u5165\u4e00\u4e2a\u6570\uff0c\u7136\u540e\u5148\u8f93\u51fa\u4e0a\u4e00\u6b21\u7a97\u53e3\u4f4d\u7f6e\u7684\u7b54\u6848\uff0c\u9898\u76ee\u8981\u6c42 \n        if(ans==inf) write(0);//\u5982\u679cans\u662f\u6781\u5927\u503c\uff0c\u90a3\u4e48\u73b0\u5728\u662f\u7b2c\u4e00\u6b21\uff0c\u9700\u8981\u8f93\u51fa0 \n        else write(ans);//\u4e0d\u7136\u5c31\u8f93\u51faans \n        putchar('\\n');\n        if(a[i]<ans) ans=a[i];//\u5982\u679c\u65b0\u6765\u7684\u6570\u90fd\u5c0f\u4e8e\u5f53\u524d\u6700\u5c0f\u503c\u4e86\uff0c\u5c31\u8ba9\u5b83\u505a\u6700\u5c0f\u503c\n        //\u8fd9\u91cc\u6bd4\u8f83\u7684\u6700\u5c0f\u503c\u542b\u8981\u51fa\u53bb\u7684\u6570\uff0c\u5982\u679c\u8fd9\u6837\u90fd\u66f4\u65b0\u4e86\uff0c\u51fa\u53bb\u7684\u6570\u5c31\u4e0d\u5f71\u54cd\u6700\u5c0f\u503c\u4e86  \n        else if(r-l+1>=m&&ans==a[l]) {//\u5426\u5219\uff0c\u5982\u679c\u7a97\u53e3\u5927\u5c0f\u5df2\u7ecf\u591fm\u4e86\uff0c\u5e76\u4e14\u51fa\u53bb\u7684\u6570\u662f\u4e4b\u524d\u7684\u6700\u5c0f\u503c \n            ans=inf;//\u628a\u6700\u5c0f\u503c\u8d4b\u6210\u6781\u5927\u503c \n            Rf(j,l+1,r+1) ans=min(ans,a[j]);//\u5728\u65b0\u7a97\u53e3\u4e2d\u66b4\u529b\u626b\u4e00\u904d\uff0c\u627e\u65b0\u7684\u6700\u5c0f\u503c \n        }\n        if(r-l+1>=m) l++;//\u5982\u679c\u7a97\u53e3\u5927\u5c0f\u5df2\u7ecf\u591fm\u4e86\uff0c\u5de6\u7aef\u70b9\u5f80\u524d\u79fb\u4e00\u4f4d\uff0c\u76f8\u5f53\u4e8e\u6700\u5de6\u8fb9\u7684\u6570\u51fa\u7a97\u53e3 \n        r++;//\u53f3\u7aef\u70b9\u5f80\u524d\u79fb\u4e00\u4f4d\uff0c\u76f8\u5f53\u4e8e\u6700\u53f3\u8fb9\u7684\u6570\u8fdb\u7a97\u53e3 \n    }\n    return 0;\n}\n\n```",
        "postTime": 1507714282,
        "uid": 35700,
        "name": "Khassar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u521a\u597d\u4eca\u5929\u5b66\u4e86RMQ\uff0c\u7136\u540e\u6765\u6d1b\u8c37\u5207\u9898\uff0c\u5c31\u627e\u5230\u4e86\u8fd9\u9053\u9898\uff0c\u7ed3\u679c\u4e00\u6d4b\uff0cMLE+TLE\uff0c\u54c8\u54c8\u54c8\n\n\u6b63\u89e3\u662f\u5355\u8c03\u961f\u5217\uff0c\u8fd9\u79cd\u533a\u95f4\u6700\u503c\u800c\u4e14\u533a\u95f4\u4e0d\u4fee\u6539\uff0c\u5927\u5c0f\u4e0d\u53d8\uff0c\u53ea\u662f\u79fb\u52a8\uff0c\u5927\u90fd\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\uff0c\u5355\u8c03\u961f\u5217\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5f88\u4f18\uff0c\u4f46\u662f\u4e0d\u80fd\u4fee\u6539\u800c\u4e14\u4e8e\u5806\u76f8\u6bd4\u5e94\u7528\u9762\u5c31\u6bd4\u8f83\u7684\u5c0f\uff0c\u4e3b\u8981\u8fd8\u662f\u5e94\u7528\u4e8edp\u4f18\u5316\u4e2d\uff0c\u4e00\u4e0b\u9644\u4e0aac\u4ee3\u7801\uff0crmq\u6709\u9700\u8981\u53ef\u4ee5\u79c1\u804a\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,m,a[2000000+10],q[2000000+10],h,t;//\u6ce8\u610fq\u5b58\u7684\u662f\u7f16\u53f7\uff0c\u65b9\u4fbf\u51fa\u961f\u6bd4\u8f83\uff0c\u4f46\u6ce8\u610f\u6bd4\u8f83\u5927\u5c0f\u7684\u65f6\u5019\u8981\u7528a[q[h]]\uff1b\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1;i<=n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    printf(\"0\\n\");//\u4ee5\u4e0a\u5e38\u89c4\u90e8\u5206\n    h=1; t=1;\n    q[1]=1; //0\u5148\u8f93\u51fa\u4e86\uff0c\u7136\u540e\u628aa[1]\u538b\u5165\u961f\n    for (int i=2;i<=n;i++){\n        while (q[h]<i-m) h++;//\u6bcf\u5f53\u4f60\u8fdb\u4e00\u4e2a\u6570\uff0c\u8981\u5224\u65ad\u8d85\u51fa\u8fb9\u754c\u7684\uff0c\u51fa\u961f\uff0c\u5199if\u5e94\u8be5\u4e5f\u53ef\u4ee5\uff0c\u4e0d\u8fc7while\u4fdd\u9669\u3002\n        printf(\"%d\\n\",a[q[h]]);//\u7531\u4e8e\u5355\u8c03\u961f\u5217\u7684\u5355\u8c03\u6027\uff0c\u961f\u9996\u5373\u4e3a\u533a\u95f4\u6700\u5c0f\u503c\u3002\n        while (a[i]<a[q[t]]&&t>=h) t--;//\u7ef4\u62a4\u5355\u8c03\u6027\uff0c\u6ce8\u610f\u662ft>=h\u800c\u4e0d\u662ft>h\uff0c\u56e0\u4e3a\u4f60\u6709\u53ef\u80fd\u628a\u961f\u624b\u4e5f\u6253\u6389\u4e86\u3002\u7406\u8bba\u4e0aa[i]<=a[q[t]]\u66f4\u4f18\uff0c\u56e0\u4e3a\u5982\u679c\u6570\u503c\u76f8\u7b49\uff0c\u8d8a\u9760\u540e\u7684\u8d8a\u6709\u7528\uff0c\u5e38\u6570\u4f18\u5316\u5427\u3002\n        q[++t]=i;//\u628a\u8fd9\u4e2a\u6570\u538b\u8fdb\u53bb\uff0c\u7531\u4e8e\u67e5\u8be2\u7684\u533a\u95f4\u4e0d\u5305\u62ec\u5b83\uff0c\u6240\u4ee5\u67e5\u8be2\u5b8c\u6bd5\u540e\u538b\u961f\u3002\n    }\n    return 0;\n}\n//\u6240\u4ee5\u53ef\u89c1\u5355\u8c03\u961f\u5217\u7684\u4ee3\u7801\u5f88\u7b80\u77ed\uff0c\u4f46\u662f\u7406\u89e3\u8d77\u6765\u4e5f\u8fd8\u662f\u6709\u4e00\u5b9a\u7684\u96be\u5ea6\uff0c\u5e0c\u671b\u8fd9\u4e2a\u5c0f\u9898\u76ee\u8ba9\u5927\u5bb6\u5165\u4e2a\u95e8\uff0cdp\u7684\u5355\u8c03\u961f\u5217\u4f18\u5316\u5728\u8fd9\u513f\u4e0d\u5c55\u5f00\u8bb2\uff0c\u4e3b\u8981\u4f5c\u8005\u4e5f\u4e0d\u4f1a\uff0c\u767e\u5ea6\u4e00\u4e0b\uff0c\u4f60\u5c31\u77e5\u9053\n```",
        "postTime": 1502195837,
        "uid": 15232,
        "name": "Michael_Li",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u65b0\u5b66\u4e86\u5355\u8c03\u961f\u5217\uff0c\u5c31\u6765\u505a\u4e00\u4e0b\u3002\u8fd9\u9898\u662f\u4e00\u9053\u5355\u8c03\u961f\u5217\u7684\u5165\u95e8\u9898\u5427\uff0c\u4e00\u822c\u8bb2\u5355\u8c03\u961f\u5217\u90fd\u662f\u4ee5\u8fd9\u9898\u5f15\u5165\u7684\u5427\u2026\u2026\n\n\u5148\u8bb2\u4e00\u4e0b\u4ec0\u4e48\u662f\u5355\u8c03\u961f\u5217\u3002\u9996\u5148\uff0c\u5b83\u5f97\u662f\u4e2a\u961f\u5217(~~\u5e9f\u8bdd~~)\uff0c\u7136\u540e\uff0c\u5b83\u8981\u6ee1\u8db3\u5355\u8c03\u6027\u3002\u4ec0\u4e48\u662f\u5355\u8c03\u6027\u5462\uff1f\u5c31\u662f\u8fd9\u4e2a\u961f\u5217\u91cc\u7684\u5143\u7d20\uff0c\u5fc5\u987b\u662f\u5355\u8c03\u9012\u589e\u6216\u5355\u8c03\u9012\u51cf\u7684\uff0c\u800c\u6b64\u65f6\uff0c\u961f\u5934\u7684\u5143\u7d20\u5c31\u662f\u7b54\u6848\u3002\u8bf4\u9053\u8fd9\u91cc\uff0c\u76f8\u4fe1\u6709\u5f88\u591a\u4eba\u90fd\u77e5\u9053\u8be5\u600e\u4e48\u505a\u4e86\u3002\u5982\u679c\u8fd8\u4e0d\u77e5\u9053\uff0c\u90a3\u4e48\u7ee7\u7eed\u5f80\u4e0b\u770b\u3002\u6211\u4eec\u5728\u6bcf\u6b21\u64cd\u4f5c\u91cc\uff0c\u52a0\u5165\u4e00\u4e2a\u5143\u7d20\u3002\u4f46\u662f\u52a0\u5165\u4e4b\u540e\u5b83\u6709\u53ef\u80fd\u4f1a\u7834\u574f\u5355\u8c03\u6027\u3002\u90a3\u6211\u4eec\u8981\u7ef4\u62a4\u8fd9\u4e2a\u5355\u8c03\u961f\u5217\uff0c\u5c31\u5f97\u628a\u524d\u9762\u90a3\u4e9b\u6bd4\u4ed6\u5927\uff08\u8fd9\u9898\u662f\u8981\u627e\u5927\u7684\uff0c\u5176\u4ed6\u7684\u9898\u76ee\u6839\u636e\u9898\u610f\u6539\u53d8\uff09\u90fd\u5f39\u51fa\u961f\u5217\u3002\u8fd9\u6837\uff0c\u5c31\u7ef4\u62a4\u4e86\u8fd9\u4e2a\u5355\u8c03\u961f\u5217\uff0c\u800c\u65e0\u5f62\u4e4b\u4e2d\u5c31\u627e\u5230\u4e86\u7b54\u6848\u3002\u4f46\u662f\u6211\u4eec\u8981\u6ce8\u610f\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u4e0d\u5728\u8303\u56f4\u5185\uff08\u56e0\u4e3a\u5b83\u7684\u8303\u56f4\u53ea\u6709\u4e00\u4e2a\u6570\u524d\u7684m\u4e2a\u6570\uff0c\u5982\u679c\u518d\u5f80\u524d\uff0c\u90a3\u4e48\u5c31\u8d85\u4e86\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u8fd8\u8981\u628a\u4ed6\u53bb\u6389\u3002\u4f46\u662f\u6211\u4eec\u4ee5\u4ec0\u4e48\u4e3a\u6807\u51c6\u5462\uff1f\u8fd9\u65f6\uff0c\u6211\u4eec\u5c31\u8981\u9644\u5e26\u4e00\u4e2a\u5143\u7d20\u3002\u8fd9\u4e2a\u5143\u7d20\u5c31\u662f\u5b83\u538b\u5165\u961f\u5217\u7684\u65f6\u95f4\u3002\u5982\u679c\u5b83\u7684\u65f6\u95f4\u548c\u5f53\u524d\u8fd9\u4e2a\u6570\u7684\u65f6\u95f4\u4e4b\u5dee\u5927\u4e8em\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5c31\u4e0d\u5728\u8303\u56f4\u5185\uff0c\u5c31\u8981\u5f39\u51fa\u3002\n\n\u5982\u679c\u4f60\u8bb0\u4e0d\u4f4f\u7684\u8bdd\uff0c\u4f60\u5c31\u8bb0\u4e00\u53e5\u8bdd\uff1a**\u5982\u679c\u4e00\u4e2a\u4eba\u6bd4\u4f60\u5c0f\uff0c\u8fd8\u6bd4\u4f60\u5f3a\uff0c\u90a3\u4e48\u4f60\u5c31\u6253\u4e0d\u8fc7\u4ed6\u4e86\u2026\u2026** \u9996\u5148\u7533\u660e\uff0c\u548cCZ\u6ca1\u6709\u534a\u6bdb\u94b1\u5173\u7cfb\u3002\u8fd9\u53e5\u8bdd\u5c31\u50cf\u5355\u8c03\u961f\u5217\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u5728\u53e6\u4e00\u4e2a\u6570\u4e4b\u540e\u52a0\u5165\uff08\u6bd4\u4f60\u5c0f\uff09\uff0c\u5b83\u7684\u503c\u8fd8\u6bd4\u4f60\u5c0f\uff08\u6bd4\u4f60\u5f3a\uff09\uff0c\u90a3\u4e48\u4ed6\u5728\u7684\u65f6\u5019\u4ed6\u6bd4\u4f60\u5f3a\uff0c\u4ed6\u4e0d\u5728\u7684\u65f6\u5019\u4f60\u65e9\u5c31\u9000\u5f79\u4e86\uff0c\u6240\u4ee5\u4f60\u6c38\u8fdc\u90fd\u6ca1\u6709\u51fa\u5934\u4e4b\u65e5\u4e86\uff08\u574f\u7b11\uff09\uff0c\u8bb0\u4f4f\u8fd9\u4e2a\uff0c\u4e5f\u80fd\u628a\u5355\u8c03\u961f\u5217\u63a8\u51fa\u6765\u4e86\u3002\n\n\u4e0a\u4ee3\u7801\u5427\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint x,k,n,m;\ndeque<pair<int,int> >q;\ninline int r()\n{\n    int x=0;int f=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=(x<<3)+(x<<1)+(c^48);c=getchar();}\n    return x*f;\n}\nint main()\n{\n\tn=r(),m=r();\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tx=r();\n\t\twhile(!q.empty()&&q.back().second>k) q.pop_back();\n\t\tif(!q.empty()&&i-q.front().first>m) q.pop_front();\n\t\tif(i!=1) q.push_back(make_pair(i-1,k));\n\t\tif(!q.empty()) printf(\"%d\\n\",q.front().second);\n\t\telse printf(\"0\\n\");\n\t\tk=x;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1566895838,
        "uid": 195331,
        "name": "Mine_King",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u672c\u6765\u662f\u505a\u7ebf\u6bb5\u6811\u7684\u65f6\u5019\u5237\u5230\u8fd9\u9053\u9898\u7684\uff0c\u4f46\u662f\u4ed4\u7ec6\u770b\u4e86\u770b\u9898\uff0c\u53d1\u73b0\u5c0f\u6839\u5806\u5b9e\u73b0\u5f88\u7b80\u5355\u554a\uff0c\u4f46\u662f\u9898\u89e3\u91cc\u9762\u53c8\u6ca1\u6709\u7528\u8fd9\u4e2a\u65b9\u6cd5\u7684\uff0c\u6240\u4ee5\u6211\u51b3\u5b9a\u4ea4\u4e00\u4e2a\u9898\u89e3\n#### \u522b\u4eba\u90fd\u6ca1\u60f3\u5230\u7684\uff01\n## STL\u5c0f\u6839\u5806AC\n------------\n- \u9996\u5148STL\u81ea\u5e26\u5c0f\u6839\u5806\uff0c\u4f7f\u7528\u7b80\u6d01\uff0c\u6bd4\u67d0\u7ebf\u6bb5\u6811\u7684\u4ee3\u7801\u957f\u5ea6\u77ed\u4e86\u4e0d\u77e5\u9053\u591a\u5c11\u500d\n\n**STL\u5806\u7684\u4ee3\u7801\u5b9e\u73b0**\n```\n\u666e\u901a\u7684STL\u5806\u662f\u57fa\u4e8evector\u6570\u7ec4\u7684\n1\u3001\u5c0f\u6839\u5806\npriority_queue<int,vector<int>,less<int> >h;\n\u8fd9\u91cch\u662f\u4e00\u4e2avector\uff0c\u76f4\u63a5\u5728\u8fd9\u91cc\u5b9a\u4e49\u597d\u4e86\uff0c\u540e\u9762\u62ff\u6765\u7528\u5c31\u884c\n2\u3001\u5927\u6839\u5806\npriority_queue<int,vector<int>,greater<int> >h;\n3\u3001\u81ea\u5b9a\u4e49\u7684\u5806\n\u7ed3\u6784\u4f53\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5806\nstruct node{//\u666e\u901a\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53 \n    int num,...;\n};\nbool operator < (node a,node b){//\u6309\u7167\u65b9\u5f0f\u5b9a\u4e49\n    return a.num>b.num;//\u5c0f\u6839\u5806\u5b9a\u4e49 (\u7b26\u53f7\uff1a>)\n    return a.num<b.num;//\u5927\u6839\u5806\u5b9a\u4e49 (\u7b26\u53f7\uff1a<)\n} \npriority_queue<node>h;//\u76f4\u63a5\u6253\u4e0a\u7ed3\u6784\u4f53\u540d\u79f0\u5c31\u597d \n\n\n\n\u64cd\u4f5c\uff1a\n1.\u8fdb\u5806 h.back(a)//h\u662f\u5806\u7684\u6570\u7ec4\u540d\uff0ca\u662f\u8981\u8fdb\u5806\u7684\u503c\n2.\u51fa\u5806 a=h.top()//\u628a\u5806\u7684\u6700\u4e0a\u9762\u503c\u8d4b\u7ed9a\uff0c\u4f46\u662f\u4e0d\u6e05\u9664\n3.\u6e05\u9664\u5806\u7684\u6700\u9876\u90e8\u5143\u7d20 h.pop()//\u6e05\u9664\u5806\u6700\u4e0a\u9762\u7684\u5143\u7d20\n4.\u5806\u5185\u5143\u7d20\u4e2a\u6570 h.size()\n5.\u5224\u65ad\u975e\u7a7a h.empty//\u5982\u679c\u7a7a\u8fd4\u56de0\uff0c\u975e\u7a7a\u8fd4\u56de1\n```\n### \u601d\u8def\n1. \u5148\u662f\u8f93\u5165\n2. \u56e0\u4e3a\u7b2c\u4e00\u4e2a\u7684\u65f6\u5019\u5806\u662f\u7a7a\u7684\uff0c\u4e0d\u80fd\u8f93\u51fa\uff0c\u6240\u4ee5\u76f4\u63a5\u8f93\u51fa0\n3. \u4ece\u7b2c2\u4e2a\u5f00\u59cb\uff0c\u5148\u51fa\u5806\uff0c\u518d\u5165\u5806(\u56e0\u4e3a\u4e0d\u80fd\u8f93\u51fa\u8f93\u5165\u7684\u8fd9\u4e00\u9879)\n**\u6ce8\uff1a\u5224\u65ad\u51fa\u5806\u7684\u65f6\u5019\u8981\u5224\u65ad\u8f93\u8fdb\u53bb\u7684\u65f6\u95f4\uff0c\u5982\u679c\u8d85\u8fc7\u4e86m\u7684\u8303\u56f4\u5c31\u8981\u5220\u9664\u5e76\u4e14\u518d\u51fa\u4e00\u4e2a**\n### \u4ee3\u7801\u5b9e\u73b0(\u9644AC\u4ee3\u7801)\n[AC\u8be6\u60c5](https://www.luogu.org/recordnew/show/17956104)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct point{//\u5b9a\u4e49\u7ed3\u6784\u4f53 \n\tint a,b;//a\u662f\u7b2c\u51e0\u53f7\u8f93\u5165\u7684\uff0cb\u662f\u8f93\u5165\u7684\u5927\u5c0f \n};\npriority_queue<point>h;//\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u5806 \nbool operator < (point x,point y){//\u8fd9\u91cc\u89c4\u5b9a\u5c0f\u6839\u5806 \n\treturn x.b>y.b;\n}\nint n,m,q;\npoint z;\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&q);//\u8f93\u5165mn\u4ee5\u53ca\u7b2c\u4e00\u6b21\u7684\u503c \n\th.push((point){1,q});//\u5148\u8fdb\u961f\uff0c\u4fdd\u8bc1\u5806\u98de\u7a7a\u5e76\u4e14\u5148\u8f93\u51fa0\uff0c \n\tprintf(\"0\\n\");\n\tfor(int i=2;i<=n;i++){//\u4ece\u7b2c\u4e8c\u6b21\u5f00\u59cb\u5faa\u73af \n\t\tscanf(\"%d\",&q);\n\t\tz=h.top();//\u5148\u8f93\u51fa\u4e00\u4e2a\u6700\u5c0f\u503c \n\t\twhile(z.a<i-m){//\u5982\u679c\u8fd9\u4e2a\u503c\u5df2\u7ecf\u8d85\u51fa\u4e86\u8981\u6c42\u8303\u56f4\u5c31\u5220\u6389\u5e76\u4e14\u91cd\u65b0\u8f93\u51fa\u4e00\u4e2a\u6700\u5c0f\u503c \n\t\t\th.pop();\n\t\t\tz=h.top();\n\t\t}\n\t\th.push((point){i,q});//\u4e3a\u4e86\u907f\u514d\u6700\u540e\u8fdb\u7684\u76f4\u63a5\u51fa\u6765\u6240\u4ee5\u6700\u540e\u8fdb\u5806 \n\t\tprintf(\"%d\\n\",z.b);//\u8f93\u51fa\u8fd9\u4e00\u6b21\u7684\u6700\u5c0f\u503c\u5e76\u6362\u884c \n\t}\n\treturn 0;\n}\n```\n\uff01\uff01\uff01",
        "postTime": 1554477605,
        "uid": 125071,
        "name": "Blue_wonders",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u3010\u601d\u8def\u3011\n\n\n\u5355\u8c03\u961f\u5217\u3002\n\n\n\u9898\u76ee\u6bd4\u8f83\u88f8\uff0c\u76f4\u63a5\u7528\u4e00\u4e2a\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u5373\u53ef\u3002\u5355\u8c03\u961f\u5217\u7b2c\u4e00\u6b21\u5199\uff0c\u603b\u7ed3\u6709\u5982\u4e0b\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a\n\n\n1\u3001   \u6ce8\u610f\u7ef4\u62a4\u7684\u662f\u4ec0\u4e48\uff0c\u672c\u9898\u4e2d\u7ef4\u62a4\u7684\u662f\u4e00\u4e2a\u6ee1\u8db3\u5e8f\u53f7 >=i-m+1 \u7684\u5e8f\u5217\uff0c\u5176\u4e2d\u5e8f\u5217\u6ee1\u8db3a\u503c\u5355\u8c03\u9012\u589e\u3002\n\n\n2\u3001   \u6ce8\u610f\u8fb9\u754c\uff0c\u7279\u522b\u662f\u521d\u59cb\u60c5\u51b5\u4e0b\u662f\u5426\u5e73\u51e1\u3002\n\n\n3\u3001   \u6ce8\u610f\u5355\u8c03\u961f\u5217\u7684\u7ef4\u62a4\u6dfb\u52a0 \u4e0e\u53d6\u503c\u4e4b\u95f4\u7684\u987a\u5e8f\uff0c\u53d6\u51b3\u4e8e\u4f7f\u7528\u5355\u8c03\u961f\u5217\u7684\u76ee\u7684\u3002\n\n\n \n\n\u8fd8\u6709\u9700\u8981\u6ce8\u610f\u7684\u662f\u9898\u76ee\u4e2d\u8981\u6c42i\u4e4b\u524dm\u4e2a\uff0c\u6bcf\u6b21\u53d6\u503c\u662f\u7b97\u4e0a\u5f53\u524da\u7684\u6240\u4ee5\u9700\u8981\u9519\u5f00\u4e00\u4e2a\u3002\n\n\n \n\n\u3010\u4ee3\u7801\u3011\n\n\n \n\n\u590d\u5236\u4ee3\u7801\n\n 1 #include<iostream>\n\n 2 #include<cstdio>\n\n 3 using namespace std;\n\n4\n 5 const int maxn = 2000000+10;\n\n6\n 7 int a[maxn],que[maxn],d[maxn];\n\n 8 int n,m,front,rear;\n\n9\n10 inline int read\\_int() {\n\n11     char c; c=getchar();\n\n12     while(!isdigit(c)) c=getchar();\n\n13\n```cpp\n14     int x=0;\n15     while(isdigit(c)) {\n16         x=x*10+c-'0';\n17         c=getchar();\n18     }\n19     return x;\n20 }\n```\n21\n```cpp\n22 int main() {\n23     n=read_int(); m=read_int();\n24     a[0]=1<<30;               //\u8fb9\u754c\u4e0d\u53d6 \n25     front=rear=1;\n26     for(int i=1;i<=n;i++)\n27     {\n28         a[i]=read_int();\n```\n29\n30         //\u6ce8\u610f\u987a\u5e8f \n\n31         while(front<=rear && (que[front]<(i-m+1))) front++;\n\n32\n33         while(front<=rear && a[i]<=a[que[rear]]) rear--;  //\u6ce8\u610f\u7ef4\u62a4a\u503c\u6700\u5c0f\u7684\n\n34\n35         que[++rear]=i;\n\n36\n37         d[i]=a[que[front]];\n\n38\n```cpp\n39     }\n40     cout<<0<<\"\\n\";\n41     for(int i=1;i<n;i++) cout<<d[i]<<\"\\n\";\n42     return 0;\n43 }\n\u590d\u5236\u4ee3\u7801\n```",
        "postTime": 1454757995,
        "uid": 3911,
        "name": "Skywalker_David",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u6211\u770b\u6ca1\u4eba\u7528pascal\u505a\uff0c\u6211\u5c31\u53d1\u7bc7pascal\u9898\u89e3\u5427\uff08\u672c\u4ebaPC\u515a\uff09\n\n\u8fd9\u9898\u91c7\u7528\u5355\u8c03\u961f\u5217\uff0c\u5148\u89e3\u91ca\u4e00\u4e0b\u6837\u4f8b\uff1a7 8 1 4 3 2\n\n1.\u7b2c 1 \u4e2a\u4f4d\u7f6e\u4e4b\u524d\u6ca1\u6709\u503c\u6240\u4ee5\u662f 0\uff0c\u73b0\u5728\u6709\u4e86\u4e00\u4e2a\u6570 7\uff1b\n\n2.\u7b2c 2 \u4e2a\u4f4d\u7f6e\u4e4b\u524d\u53ea\u6709\u4e00\u4e2a\u6570 7\uff0c\u6545\u6700\u5c0f\u503c\u4e3a 7\uff0c\u73b0\u5728\u6709\u4e00\u4e24\u4e2a\u6570 7 8\uff1b\n\n3.\u7b2c 3 \u4e2a\u4f4d\u7f6e\u4e4b\u524d\u4e24\u4e2a\u6570\u4e3a 7 8\uff0c\u6700\u5c0f\u503c\u4e3a 7\uff1b\u73b0\u5728\u6709\u4e09\u4e2a\u6570 7 8 1\uff0c\u5f53\u7136\u7531\u4e8e\u53ea\u8981\u524d\u9762\u4e24\u4e2a\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a 7 \u53bb\u6389\uff0c\u5269\u4e0b 8 1\uff0c\u800c\u7531\u4e8e\u6c42\u7684\u662f\u6700\u5c0f\u503c\uff0c\u663e\u7136\u53ea\u9700\u8981\u4fdd\u7559 1\uff0c 8 \u4e0d\u53ef\u80fd\u662f\u6700\u5c0f\u503c\u4e86\uff1b\n\n4.\u7b2c 4 \u4e2a\u4f4d\u7f6e\u4e4b\u524d\u7684\u6700\u5c0f\u503c\u4e3a 1\uff0c\u73b0\u5728\u53c8\u52a0\u8fdb\u6765\u4e00\u4e2a\u6570 4\uff0c\u6240\u4ee5\u53c8\u6709\u4e24\u4e2a\u6570 1\u548c4\uff1b\n\n5.\u7b2c 5 \u4e2a\u4f4d\u7f6e\u4e4b\u524d\u4e24\u4e2a\u6570 1 4\uff0c\u6700\u5c0f\u503c\u4e3a 7\uff0c\u73b0\u5728\u53c8\u52a0\u8fdb\u6765\u4e00\u4e2a\u6570 3\uff0c\u5f53\u524d\u7531\u4e8e 1 \u5df2\u7ecf\u4e0d\u5728\u8303\u56f4\u5185\uff0c\u6240\u4ee5\u53bb\u6389\uff0c\u5904\u7406 4 3\uff0c\u7531\u4e8e 3 \u6bd4 4 \u5c0f\uff0c\u5219\u53ea\u4fdd\u7559\u6700\u5c0f\u503c 3\uff1b\n\n6.\u7b2c 6 \u4e2a\u4f4d\u7f6e\u4e4b\u524d\u6700\u5c0f\u503c\u4e3a 3\uff0c\u53c8\u52a0\u8fdb\u6765 2\uff0c\u5373\u4e3a 3 2\uff0c\u7531\u4e8e 2 \u6bd4 3 \u5c0f\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u4fdd\u7559 2 \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u89e3\u91ca\u5b8c\u6837\u4f8b\uff0c\u4e0a\u4ee3\u7801\uff1a\n\n```pascal\nvar n,m,i,t,w,x:longint;//t\u662f\u5934\u6307\u9488\uff0cw\u662f\u5c3e\u6307\u9488\na:array[0..2000001,0..1] of longint;//a[x,0]\u4ee3\u8868\u503c\uff0ca[x,1]\u4ee3\u8868\u4f4d\u7f6e\nbegin\nreadln(n,m);\nread(a[w,0]);inc(w);//\u7b2c\u4e00\u4e2a\u6570\u8fdb\u961f\u5217\nwriteln(0);//\u7b2c\u4e00\u4e2a\u6570\u4e00\u5b9a\u662f\u8f93\u51fa0\u7684\nfor i:=1 to n-1 do\n  begin\n  if i-a[t,1]>m then inc(t);\n  writeln(a[t,0]);//\u8f93\u51fa\u6700\u5c0f\u6570\n  read(x);//\u7ee7\u7eed\u8bfb\u5165\n  while (t<w) and (x<a[w-1,0]) do dec(w);//\u5c3e\u6307\u9488\u5411\u524d\u79fb\n  a[w,0]:=x;a[w,1]:=i;inc(w);//\u7b2c\uff08i+1\uff09\u4e2a\u6570\u8fdb\u961f\u5217\n  end;\nend.\n\n```\n",
        "postTime": 1576154125,
        "uid": 219423,
        "name": "HyperLuXury",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "# P1440 \u9898\u89e3\n\n### \u601d\u8def\uff1a\u4f18\u5148\u961f\u5217+\u5361\u5e38\n\n\u8bb8\u591a\u5de8\u4f6c\u90fd\u6ca1\u7528\u4f18\u5148\u961f\u5217\uff0c\u81ea\u5df1\u5c31\u5c1d\u8bd5\u4e86\u4e00\u4e0b\uff0c\u7ed3\u679c\u5c31\u5361\u8fc7\u53bb\u4e86\n\n\u6bcf\u6b21\u4e8e\u7b2c $i$ \u4e2a\u8f93\u51fa\uff0c\u5148\u5c06\u4e0b\u6807\u4e3ai-1\u4e2a\u6570\u5165\uff0c\u4f18\u5148\u4ee5\u5404\u4e2a\u6570\u7684\u6570\u503c\u5927\u5c0f\u6392\u5e8f\uff0c\u5f53\u8981\u8f93\u51fa\u65f6\uff0c\u5c06\u90a3\u4e9b\u5728\u961f\u5934\u4e14\u4e0d\u7b26\u5408\u6761\u4ef6\uff08\u4e5f\u5c31\u662f\u8fd9\u4e2a\u6570\u7684\u4e0b\u6807\u4e0d\u5728\u8f93\u51fa\u8303\u56f4\u4e4b\u5185\uff09\u7684\u6570\u5168\u90fd\u5f39\u51fa\uff0c\u76f4\u63a5\u8f93\u51fa\u961f\u5934\uff08\u5e76\u4e0d\u9700\u5f39\u51fa\uff09\n\n### code\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a,b;\nint s[10000001];\nstruct node{\n\tint dis,now;\n\tbool operator<(const node& t)const{//\u6392\u5e8f\u89c4\u5219 \uff08\u4f7f\u7528\u91cd\u8f7d\u8fd0\u7b97\u7b26\u8f83\u65b9\u4fbf\uff09 \n\t\treturn t.dis<dis;\n\t}\n}k;\npriority_queue<node> st;//\u4f18\u5148\u961f\u5217 \nint main(){\n\tscanf(\"%d%d\",&a,&b);\n\tfor(int i=1;i<=a;i++)\n\tscanf(\"%d\",&s[i]);\n\tprintf(\"0\");//\u7b2c\u4e00\u4e2a\u8f93\u51fa\u6570\u80af\u5b9a\u662f0 \n\tfor(int i=2;i<=a;i++){\n\t\tk.dis=s[i-1];\n\t\tk.now=i-1;\n\t\tst.push(k);\n\t\tk=st.top();//\u5bfb\u627e\u90a3\u4e9b\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u5e76\u628a\u5b83\u4eec\u5f39\u51fa\u53bb \n\t\twhile(k.now<i-b){\n\t\t\tst.pop();\n\t\t\tk=st.top();\n\t\t}\n\t\tprintf(\"\\n%d\",k.dis);\n\t}\n\treturn 0;//\u7ed3\u675fAC \n}\n```\n\u5fc3\u5f97\uff1a\u7531\u4e8e\u6570\u636e\u592a\u6c34\uff0c\u8fd9\u79cd\u65b9\u6cd5\u624d\u80fd\u901a\u8fc7\uff0c\u5176\u5b9e\u53ef\u4ee5\u4e0d\u7528\u4f18\u5148\u961f\u5217\uff0c\u66f4\u52a0\u5feb",
        "postTime": 1571358000,
        "uid": 184549,
        "name": "RedreamMer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "%%%Aehnuwx dalao\u8f7b\u6613\u638c\u63e1\u5355\u8c03\u961f\u5217\n## \u6811\u72b6\u6570\u7ec4\u5927\u6cd5\u597d\uff01\n\u7ecf\u5178\u7684RMQ\u95ee\u9898\uff0c\u4f46\u662f\u7ebf\u6bb5\u6811\u5e38\u6570\u5de8\u5927\uff0c\u800cST\u886880\u5206\uff0c\u600e\u4e48\u529e\u5462\uff1f\n\n\u53ef\u4ee5\u8003\u8651\u6539\u9020\u6811\u72b6\u6570\u7ec4\uff08a\u662f\u539f\u6570\u7ec4\uff0ctr\u662f\u6811\u72b6\u6570\u7ec4\uff09\u3002\n\n\u8003\u8651\u521d\u59cb\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u6811\u72b6\u6570\u7ec4\u7684\u89c4\u5f8b\uff0c\u4f9d\u6b21\u5411\u524d\u679a\u4e3e\u88ab\u5305\u542b\u7684\u533a\u95f4\uff0c\u7136\u540e\u4e00\u4e2a\u4e00\u4e2a\u533a\u95f4\u5730\u53d6\u6700\u503c\u4e0e\u5f53\u524d\u4f4d\u7f6e\u6bd4\u8f83\uff0c\u6700\u540e\u66f4\u65b0\u51fa$tr_i$\u3002\n\n\u8003\u8651\u67e5\u8be2\u4ecei\u5230j\u4e4b\u95f4\u7684\u6700\u503c\uff0c\u663e\u7136\u4e0d\u53ef\u4ee5\u76f4\u63a5\u7528$tr[j]$\u4f5c\u4e3a\u7b54\u6848\uff0c\u56e0\u4e3a\u5bf9\u5e94\u7684\u5de6\u7aef\u70b9\u4e0d\u4e00\u5b9a\u4f1a\u7b49\u4e8ei\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5206\u7c7b\u6c42\u89e3\uff0c\u5f53\u5728\u533a\u95f4\u5916\u65f6\uff08\u4e0d\u5728$tr[i]->[i-lowbit(i)+1,i]$\u5185\u65f6\uff09\u76f4\u63a5\u7528\u539f\u6570\u7ec4\u66f4\u65b0\uff0c\u5426\u5219\u7528\u6811\u72b6\u6570\u7ec4\u66f4\u65b0\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff08l,r\u7684\u66f4\u65b0\u89c1code\uff09\uff1a\n- \u5f53$l<i$\u65f6\uff0c\u53d6$a[j]$\u66f4\u65b0\u7b54\u6848\u3002\n- \u5f53$l>=i$\uff0c\u53d6$tr[j]$\u6765\u66f4\u65b0\u7b54\u6848\u3002\n- \u5f53$l==i$\u65f6\uff0c\u8fd4\u56de\u7b54\u6848\u3002\n\ncode:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define reg register\nextern \"C\"{\nnamespace io{\n\t#define IOSIZE 100000\n\tstatic char in[IOSIZE],*p=in,*pp=in,out[10000000],*q=out,ch[20],*t=ch;\n\tinline char gc(){return p==pp&&(pp=(p=in)+fread(in,1,IOSIZE,stdin),p==pp)?EOF:*p++;}\n\tinline int read(){\n\t\treg int x=0;reg char ch;\n\t\twhile(!isdigit(ch=gc()));\n\t\twhile(isdigit(ch))x=(x<<1)+(x<<3)+(ch^48),ch=gc();\n\t\treturn x;\n\t}\n\tinline void write(long long x){\n\t\t!x&&(*q++='0'),x<0&&(*q++='-',x=-x);\n\t\twhile(x)*t++=x%10+48,x/=10;\n\t\twhile(t!=ch)*q++=*--t;\n\t\t*q++='\\n';\n\t}\n\tinline void flush(){fwrite(out,1,q-out,stdout);}\n}}\n#define rd io::read\n#define wt io::write\nstatic int n,m,a[2000001],tr[4000001];\ninline void init(){\n\tn=rd(),m=rd();\n\tmemset(tr,0x3f,sizeof tr);\n\tfor(reg int i=1,x;i<=n;++i){\n\t\tx=rd(),a[i]=tr[i]=x;\n\t\tfor(reg int j=1;j<(i&-i);j<<=1)\n\t\t\ttr[i]=min(tr[i],tr[i-j]);\n\t}\n}\ninline int query(int l,int r){\n\treg int ans=0x3f3f3f3f;\n\tfor(;;){\n\t\tans=min(ans,a[r]);\n\t\tif(l==r)return ans;\n\t\tfor(r-=1;r-l>=(r&-r);r-=(r&-r))\n\t\t\tans=min(ans,tr[r]);\n\t}\n}\nint main(){\n\tinit();\n\twt(0);\n\tfor(reg int i=2;i<=n;++i)\n\t\twt(query(max(i-m,1),i-1));\n\tio::flush();\n\treturn 0;\n}\n```",
        "postTime": 1565928843,
        "uid": 75765,
        "name": "Starlight237",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "### hello\uff0c\u8fd9\u662f\u849f\u84bb\u7684\u7b2c\u4e09\u7bc7\u9898\u89e3\n\n### \u672c\u9898\u4f5c\u4e3aRMQ\u7b97\u6cd5\u7684\u7b2c\u4e00\u9898\uff0c\u53ea\u8981\u7406\u89e3\u4e86\u7b97\u6cd5\u5c31\u6ca1\u6709\u96be\u5ea6\u4e86\uff08\u5f53\u7136\u9664\u4e86\u6211\u8fd9\u6837\u7684\u849f\u84bb\uff09\n## \u4e0b\u9762\u6765\u4ecb\u7ecd\u4e00\u4e0b\u7b97\u6cd5:\n```c\n    RMQ\uff08Range Minimum/Maximum Query\uff09\uff0c\u5373\u533a\u95f4\u6700\u503c\u67e5\u8be2\uff0c\u662f\u6307 \u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\u5bf9\u4e8e\u957f\u5ea6\u4e3an\u7684 \u6570\u5217A\uff0c\u56de\u7b54\u82e5\u5e72\u8be2\u95eeRMQ(A,i,j)\uff0c \u8fd4\u56de\u6570\u5217A\u4e2d\u4e0b\u6807\u5728i\uff0cj\u4e4b\u95f4\u7684\u6700\u5c0f/\u5927\u503c\u3002\n                                                           \u2014\u2014\u2014\u2014\u5ea6\u5a18\n* \u53ef\u80fd\u4f1a\u60f3\u5230\uff1a\u5f00\u4e00\u4e2a\u7684\u4e8c\u7ef4\u6570\u7ec4Ans,\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u5bf9(i,j),\u9884\u5904\u7406\u7b54\u6848\u5b58\u5230Ans\u91cc\u9762\n------------\n (dalao\u4eec\u4f1a\u5acc\u5f03\uff0c\u592a\u6162\u5566\u3002\u90a3\u4e48\u5982\u4f55\u80fd\u7528\u8f83\u77ed\u7684\u65f6\u95f4\u9884\u5904\u7406\uff0c\u53c8\u80fd\u7528\u8f83\u5feb\u7684\u65f6\u95f4\u67e5\u8be2\u5462\uff1f)\n \n    \u7528a[i]\u5b58\u8981\u6c42\u6700\u503c\u7684\u6570\u5217\uff0c F[i][j]\u8868\u793a\u4ece\u7b2ci\u4e2a\u4f4d\u7f6e\u5f00\u59cb\uff0c\u5f80\u540e\u76842\u7684n\u6b21\u65b9\u4e2a\u6570\u5b57\u4e2d\u6700\u5927\u7684\u6570\u5b57\u662f\u4ec0\u4e48\n    \u2022\u5982\u4f55\u9884\u5904\u7406\u51faF\u6570\u7ec4\uff1f\n    \u2022\u6211\u4eec\u5bf9j\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u3002\u6bcf\u6b21\u5904\u7406\u7684\u65f6\u5019\uff0c0~1 \u90fd\u5df2\u7ecf\u5904\u7406\u597d\u4e86 \n    \u2022f[i][j]=max(f[i][j-1],f[i+2^(j-1)][j-1])\n```\n\n    \n\u518d\u770b\u770b\u8fd9\u4e00\u6bb5\u4ee3\u7801\n```cpp\nvoid init(int a)\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tf[i][0]=a[i];\n\t}\n\tfor(int j=1;j<=20;j++)\n\t{\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(i+(1<<j)-1<=n)\n\t\t\t{\n\t\t\t\tf[i][j]=max(f[i][j-1],f[i+(1<<(j-1))][j-1]);\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n\n\u2022 RMQ\u76f8\u6bd4\u5176\u4ed6\u6570\u636e\u7ed3\u6784\u7684\u597d\u5904\u662f\u80fd\u591f\u5728\u7684\u9884\u5904\u7406\u540e\uff0c\u5b9e\u73b0o1\u7684\u67e5\u8be2\n  \n    \u5f53\u7136\uff0cRMQ\u4e5f\u6709\u5176\u5c40\u9650\u6027\u3002 RMQ\u4e0d\u652f\u6301\u4fee\u6539\uff0c\u53ea\u80fd\u7ef4\u62a4\u4e0d\u4f1a\u56e0\u4e3a\u91cd\u590d\u8ba1\u7b97\u800c\u5f71\u54cd\u7b54\u6848\u7684\u4e1c\u897f\uff0c \u6bd4\u5982RMQ\u4e0d\u80fd\u7ef4\u62a4\u533a\u95f4\u548c \n    \n    \n    \n\n------------\n\u597d\u4e86\uff0c\u4ee5\u4e0a\u662f\u5bf9RMQ\u7684\u4ecb\u7ecd\uff0c\u5e0c\u671b\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9\uff1b\n\n# \u53e6\u5916\uff0c\u611f\u8c22\u6211\u8c37\u7684dalao\u4eec\u63d0\u4f9b\u7684\u89e3\u7b54\n\n\u4e0b\u9762\u662f\u8fd9\u4e00\u9898\u7684\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[2000010][2];\nint n,m;\nint rig=0,lef=0;\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tscanf(\"%d\",&a[rig][0]);\n\tprintf(\"0\\n\");\n\trig++;\n\tfor(int i=1; i<n; i++)\n\t{\n\t\tif(i-a[lef][1]>m)\n\t\t{\n\t\t\tlef++;\n\t\t}\n\t\tprintf(\"%d\\n\",a[lef][0]);\n\t\tint t;\n\t\tscanf(\"%d\", &t);\n\t\twhile(1)\n\t\t{\n\t\t\tif(rig<=lef||t>=a[rig-1][0])\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\trig--;\n\t\t}\n\t\ta[rig][0]=t;\n\t\ta[rig][1]=i;\n\t\trig++;\n\t}\n\treturn 0;\n}\n```\n\n### \u6ce8\u610f\uff0c\u6b64\u5904\u4e00\u5b9a\u8981\u52a0\u5feb\u8bfb\u53d6\u901f\u5ea6\uff0c\u672c\u849f\u84bb\u7528\u4e86\u6700\u666e\u901a\u7684scanf\uff0c\u5404\u4f4d\u5927\u4f6c\u4eec\u5404\u663e\u795e\u901a\u5427\n\n\u5728\u7406\u89e3RMQ\u4e4b\u540e\uff0c\u7d27\u968f\u5176\u540e\u7684\u300a\u5fe0\u8bda\u300b\u4e5f\u5c31\u5f88\u5bb9\u6613\u89e3\u4e86\uff0c\u5404\u4f4d\u6709\u8010\u5fc3\u770b\u5230\u8fd9\u91cc\uff0corz\n\n## bye",
        "postTime": 1565429851,
        "uid": 128295,
        "name": "assassinRay",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\n8\u670828\u53f7\u6211\u7528\u8001\u5e08\u8bb2\u7684\u65b9\u6cd5\u505a\u8fd9\u9053$RMQ$\uff0c\u6837\u4f8b\u4e00\u6b21\u5c31\u8fc7\u54ce\uff01\u5174\u594b\u5730\u4ea4\u4e0a\u53bb\uff0c\u7ed3\u679c$50$\u5206\u2026\u2026\uff08$5\u00d7TLE+5\u00d7AC$\uff09\u6211\u8fd9\u624d\u91cd\u89c6\u9898\u76ee\u91cc\u7684$m\u2264n\u22642000000$\uff0c\u6211\u6ca1\u60f3\u5230\u4f1a$TLE$\u2026\u2026$QAQ$\uff0c\u7136\u540e\u6211\u60f3\u60f3\u60f3\u2026\u2026\uff08\u7701\u7565$\u221e$\u4e2a\u60f3\uff09\u60f3\u4e0d\u51fa\u5e94\u8be5\u5982\u4f55\u4f18\u5316\u2026\u2026\u2026\u2026\u2026\u4e8e\u662f\u7ffb\u9898\u89e3\uff0c\u770b\u5230@\u4e00\u6276\u82cf\u4e00 \u5199\u7684\u9898\u89e3\uff0c\u604d\u7136\u5927\u609f\uff01\uff01\uff01~~\u7136\u540e\u6211$get$\u5230\u4e86\u65b0\u7684\u5957\u8def~~\n\n\n------------\n## \u6b63\u9898\n## \u8fd9\u9053\u9898\u7528\u4e8c\u5206\u5373\u53ef\u5b8c\u7f8eAC!\n**\u6211\u6700\u521d\u505a\u8fd9\u9053\u9898\u5c31\u662f\u7528\u7684\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u8001\u5e08\u8bb2\u7684\u90a3\u4e2a\u65b9\u6cd5\u3002\u81ea\u8ba4\u4e3a\u90a3\u5929\u8ba4\u771f\u542c\u4e86\u8bfe**\n\n\n### \u600e\u4e48\u201c\u4e8c\u5206\u201d?\n\u5047\u8bbe\u8981\u627e$[1,6]$\u533a\u95f4\u7684\u6700**\u5c0f**\u503c\n\u8fd9\u4e9b\u6570\u662f$7,8,1,4,3,2$\n\n- \u628a$[1,6]$\u5206\u6210\u4e24\u534a\uff0c\u5206\u6210$[1,3]$\u548c$[4,6]$\n\n- $[1,3]$\u53c8\u53ef\u4ee5\u5206\u6210$[1,2]$\u548c$[3,3]$ \u6b64\u65f6$[1,2]$\u91cc\u7684\u6570\u6709\u4e24\u4e2a\u6570$7$\u548c$8$\uff0c\u6700\u5c0f\u7684\u6570\u662f$7$\uff0c$[3,3]$\u91cc\u7684\u6570\u53ea\u6709$1$\uff0c\u6700\u5c0f\u7684\u662f$1$\n\n- \u8fd9\u65f6\u5408\u5e76$[1,2]$\u548c$[3,3]$\uff0c\u628a$7$\u548c$1$\u6bd4\u8f83\uff0c**\u53ef\u4ee5\u5f97\u5230$[1,3]$\u91cc\u6700\u5c0f\u7684\u6570\u662f$1$**\n\n- \u540c\u6837\u7684\uff0c$[4,6]$\u53ef\u4ee5\u5206\u6210$[4,5]$\u548c$[6,6]$ \u6b64\u65f6$[4,5]$\u91cc\u7684\u6570\u6709$4$\u548c$3$\uff0c\u6700\u5c0f\u7684\u662f$3$\uff0c$[6,6]$\u91cc\u7684\u6570\u53ea\u6709$2$\uff0c\u6700\u5c0f\u7684\u662f$2$\n\n- \u5408\u5e76$[4,5]$\u548c$[6,6]$\uff0c\u628a$3$\u548c$2$\u6bd4\u8f83\uff0c**\u53ef\u4ee5\u5f97\u5230$[4,6]$\u91cc\u6700\u5c0f\u7684\u6570\u662f$2$**\n\n- \u5408\u5e76$[1,3]$\u548c$[4,6]$\uff0c\u628a$1$\u548c$2$\u6bd4\u8f83\uff0c\u6700\u5c0f\u7684\u662f$1$\uff0c**\u53ef\u4ee5\u5f97\u5230$[1,6]$\u533a\u95f4\u7684\u6700\u5c0f\u503c\u662f$1$\uff0c\u7ed3\u675f\u3002**\n\n**\u201c\u4e8c\u5206\u201d\u662f\u4e0d\u662f\u5f88\u7b80\u5355\u5462\uff1f**\n\n```cpp\nint search(int l,int r)\n{\n    int mid=(l+r)/2;\n    if(l>r)\n        return 0;\n    if(l==r)\n        return s[l];\n    if(r-l==1)\n        return min(s[l],s[r]);\n    return min(search(l,mid),search(mid+1,r));\n}\n```\n~~\u81f3\u4e8e$min$\u662f\u4ec0\u4e48\u90fd\u77e5\u9053\u5427\u2026\u2026\u5c31\u662f\u4e00\u4e2a\u53d6\u4e24\u4e2a\u6570\u4e4b\u95f4\u6bd4\u8f83\u5c0f\u7684\u6570\u7684\u51fd\u6570~~\n\n------------\n\n## \u73b0\u5728\u95ee\u9898\u6765\u4e86\n### \u6ca1\u9519\u5c31\u662f$5\u00d7TLE+5\u00d7AC$\n\u600e\u4e48\u4f18\u5316\u5462\uff1f\u8fd9\u91cc\u6211\u53c2\u8003\u4e86@\u4e00\u6276\u82cf\u4e00 \u7684\u4f18\u5316\u65b9\u6848\uff08\u6211\u6ca1\u60f3\u51fa\u6765\u5982\u4f55\u4f18\u5316$QAQ$\uff0c\u501f\u9274\u522b\u4eba\u7684\u65b9\u6cd5\u4e5f\u4e0d\u662f\u574f\u4e8b\uff09\n\n~~\u5176\u5b9e\u6211\u89c9\u5f97@\u4e00\u6276\u82cf\u4e00 \u5199\u7684\u4e0d\u662f\u5f88\u5230\u4f4d\u2026\u2026\uff08\u6211\u662f\u8fd9\u4e48\u89c9\u5f97\u3002\u4f60\u53ef\u4ee5\u8bf4\u6211\u662f\u5728\u505a\u8865\u5145\u8bf4\u660e\uff09\u7136\u540e~~\u6211\u8ba4\u771f\u7814\u7a76\u4e86\u8fd9\u4f4d$dalao$\u7684\u4ee3\u7801\uff0c\u660e\u767d\u4e86\uff01\uff01\uff01\n\n------------\n## \u6211\u7684\u7406\u89e3\n**\u6211\u90a3$50$\u5206\u7684\u4ee3\u7801\u6bcf\u6b21\u5faa\u73af\u90fd\u4f1a\u7528\u201c\u4e8c\u5206\u201d\u8ba1\u7b97\uff0c\u8fd9\u6837\u8ba1\u7b97\u91cf\u5927\uff0c\u6781\u7aef\u4e00\u70b9\u7684\u6570\u636e\u4f1a\u4e0d\u901a\u8fc7\uff0c\u5c31\u662f$TLE$\u3002**\u5176\u5b9e\u5728\u524d\u9762\u7684\u6570\u8fbe\u5230$m$\u9879\u4e4b\u524d\u4e00\u4e2a\u4e2a**\u6bd4\u8f83**\u5c31\u597d\u4e86\uff0c\u5b8c\u5168\u4e0d\u9700\u8981\u4e8c\u5206\u3002\u8fbe\u5230\u6216\u8005\u8d85\u8fc7$m$\u9879\u65f6\uff0c\u770b\u4e0a\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u7b2c\u4e00\u4e2a\u6570\u662f\u4e0d\u662f\u90a3\u533a\u95f4\u5185\u6700\u5c0f\u7684\u6570\uff0c\u5982\u679c\u4e0d\u662f\u5c31\u53ef\u4ee5\u76f4\u63a5\u770b\u4e0b\u4e00\u4e2a\u533a\u95f4\uff0c\u5927\u5927\u7684\u51cf\u5c11\u4e86\u8ba1\u7b97\u91cf\uff01\uff01\uff01\u5f53\u7136\uff0c\u4e0d\u7ba1\u600e\u6837\uff0c**\u6bcf\u6b21\u5faa\u73af\u90fd\u8981\u5b58\u50a8\u533a\u95f4\u91cc\u6700\u5c0f\u7684\u6570**\u3002\n\n------------\n\n```\n6 2\n7 8 1 4 3 2\n```\n- \u5728\u4e0a\u9762\u7684\u6570\u636e\u4e2d\uff0c$n=6,m=2$\n\n- \u4e00\u5f00\u59cb$i=1$\uff0c\u5c31\u662f$s[1]$\uff0c\u524d\u9762\u6ca1\u6709\u6570\uff0c\u8f93\u51fa$0$\n- \u73b0\u5728$i=2$\uff0c\u5c31\u662f$s[2]$\uff0c\u524d\u9762\u6709\u4e00\u4e2a\u6570\u3002\u90a3\u4e48$a[1]$\u548c$s[1]$\u6bd4\u8f83\uff0c$s[1]$\u66f4\u5c0f\uff0c\u90a3\u4e48$a[2]$\u5c31\u66f4\u65b0\u6210$s[1]$\uff0c\u8f93\u51fa$a[2]$\n**\uff08$a[1]$\u8981\u8bbe\u6210\u4e00\u4e2a\u5f88\u5927\u7684\u6570\uff0c\u5426\u5219\u4f1a\u51fa\u9519\uff09**\n\n- \u73b0\u5728$i=3$\uff0c\u5c31\u662f$s[3]$\uff0c\u524d\u9762\u6709\u4e24\u4e2a\u6570\uff0c\u5df2\u7ecf\u8fbe\u5230$m$\u9879\uff0c\u90a3\u4e48\u770b$a[2]$\u662f\u5426\u7b49\u4e8e$s[i-m-1]$\u3002\u6761\u4ef6\u4e0d\u6210\u7acb\uff08$s[i-m-1]=s[0]=0,a[2]=7$\uff09\uff0c\u90a3\u4e48$a[2]$\u548c$s[2]$\u6bd4\u8f83\uff08$a[2]=7,s[2]=8$\uff09\uff0c$a[2]$\u66f4\u5c0f\uff0c\u90a3\u4e48$a[3]$\u66f4\u65b0\u6210$a[2]$\u3002\u8fd9\u65f6$a[3]$\u8868\u793a\u533a\u95f4$[1,2]$\u6700\u5c0f\u6570\u662f$7$\u3002\u8f93\u51fa$a[3]$\n\n- \u73b0\u5728$i=4$\uff0c\u5c31\u662f$s[4]$\uff0c\u524d\u9762\u6709\u4e09\u4e2a\u6570\uff0c\u5df2\u7ecf\u8d85\u8fc7$m$\u9879\uff0c\u90a3\u4e48\u770b$a[3]$\u662f\u5426\u7b49\u4e8e$s[i-m-1]$\u3002\u6761\u4ef6\u6210\u7acb\uff08$s[i-m-1]=s[1]=7,a[3]=7$\uff09\uff0c\u90a3\u4e48\u8c03\u7528\u4e0a\u6587\u7684$search$\u51fd\u6570\uff0c\u5bfb\u627e\u533a\u95f4$[i-m,i-1]$\u7684\u6700\u5c0f\u503c\uff0c\u628a\u7ed3\u679c\u5b58\u5165$a[4]$\uff0c\u8f93\u51fa$a[4]$\n\n- \u2026\u2026\n\n\u8f93\u5165\uff1a\n```\n6 2\n7 8 1 4 3 2\n```\n\u7b54\u6848\uff1a$0$ $7$ $7$ $1$ $1$ $3$\n\n\n------------\n~~\u534e\u4e3d\u7684~~$AC$\u4ee3\u7801\n```cpp\n#include<cstdio>\nconst int maxn=2e6+1;\nint s[maxn],ans[maxn],n,m;\nint min(int x,int y)\n{\n    if(x<y)\n        return x;\n    return y;\n}\nint search(int l,int r)\n{\n    int mid=(l+r)/2;\n    if(l>r)\n        return 0;\n    if(l==r)\n        return s[l];\n    if(r-l==1)\n        return min(s[l],s[r]);\n    return min(search(l,mid),search(mid+1,r));\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&s[i]);\n    printf(\"0\\n\");\n    ans[1]=1e9;\n    for(int i=2;i<=n;i++)\n    {\n        int a=i-m,b=i-1;\n        if(a<1)\n            ans[i]=min(ans[i-1],s[i-1]);\n        else if(ans[i-1]!=s[a-1])\n            ans[i]=min(ans[i-1],s[i-1]);\n        else\n            ans[i]=search(a,b);\n        printf(\"%d\",ans[i]);\n        if(i!=n)\n            printf(\"\\n\");\n    }\n    return 0;\n}\n```\n$2e6=2\u00d710^6$",
        "postTime": 1535549159,
        "uid": 39541,
        "name": "wangbw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u770b\u697c\u4e0b\u90fd\u662f\u4ec0\u4e48\u7ebf\u6bb5\u6811\uff08~~\u9898\u89e3\u7684\u7ebf\u6bb5\u6811\u73b0\u5728\u597d\u50cf\u90fdA\u4e0d\u4e86~~\uff09\u5355\u8c03\u961f\u5217 \u90a3\u6211\u5c31\u6765\u6c34\u4e00\u53d1zkw\u7ebf\u6bb5\u6811\uff08~~\u91cd\u53e3\u5473~~\uff09\n\n\u6709\u4e24\u4e2a\u70b9900ms\u6c34\u8fc7\uff08\u5168\u9760\u8bfb\u5165\u548c\u8f93\u51fa\u4f18\u5316\uff09\n\n\u4e0d\u592a\u61c2zkw\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5\u53bb\u770b\u770b\u8fd9\u4e24\u4e2a\u535a\u5ba2\n\nhttp://blog.csdn.net/keshuqi/article/details/52205884 \n\nhttp://www.cnblogs.com/SinGuLaRiTy2001/p/6591718.html \n\n\u00b7\u00b7\u00b7cpp\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define N 2000010\nusing namespace std;\nint n,dep=1,tree[4*N],m;\ninline int query_min(int l,int r){\n    int L=0,R=0,res=0;\n    l+=dep-1;r+=dep-1;\n    if(l==r){\n        while(l){\n            res+=tree[l];\n            l>>=1;\n        }\n        return res;\n    }\n    for(;l^r^1;l>>=1,r>>=1){\n        L+=tree[l],R+=tree[r];\n        if(~l&1) L=min(L,tree[l^1]);\n        if(r&1) R=min(R,tree[r^1]);\n    }\n    L+=tree[l],R+=tree[r];\n    res=min(L,R);\n    while(l>1){\n        l>>=1;\n        res+=tree[l];\n    }\n    return res;\n}\n```\n/\\*\n    if(~l&1) ->  if(l%2==0)\n\n    if(r&1) ->   if(r%2!=0)\n\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u5462\n\n\u5f88\u7b80\u5355\n\n\u82e5\u7f16\u53f7\u4e3a\u5947\u6570 \u5219\u80af\u5b9a\u662f\u5de6\u513f\u5b50 \u53cd\u4e4b \u5219\u80af\u5b9a\u662f\u53f3\u513f\u5b50\n\n\u5047\u8bbe\u6709\u4e24\u4e2a\u5144\u5f1f\u8282\u70b9 A B\n\n\u5982\u679cA\u4e3a\u5de6\u513f\u5b50  \u90a3\u4e48\u4ed6\u7684\u5144\u5f1f\u4e00\u5b9a\u4e3a\u53f3\u513f\u5b50\n\n\u5e76\u4e14\u5982\u679c\u4ed6\u662f\u5de6\u513f\u5b50 \u90a3\u4e48\u4ed6\u7684\u5144\u5f1f\u4e00\u5b9a\u5728\u533a\u95f4\u5185\n\n\u5982\u679c\u4ed6\u662f\u53f3\u513f\u5b50 \u90a3\u4e48\u4ed6\u7684\u718a\u7b2c\u4e5f\u4e00\u5b9a\u5728\u533a\u95f4\u5185\n\n\u8fd9\u6837\u8ba1\u7b97\u53ef\u80fd\u4f1a\u91cd\u590d\n\n\u4e5f\u5c31\u662f \u8fd9\u4e24\u4e2a\u8282\u70b9\u4e92\u4e3a\u5144\u5f1f\n\n\u5c31\u662fl^r^1 == 0 \u65f6 \u8fd9\u65f6\u5faa\u73af\u4e5f\u5c31\u7ed3\u675f\u4e86\n\n\\*/\n```cpp\ninline void read(int &x){\n    x=0;\n    int flag=1;\n    char c=getchar();\n    while(c<'0' || c>'9'){\n        if(c=='-')flag=-1;\n        c=getchar();\n    }\n    while(c>='0' && c<='9'){\n        x=x*10+c-'0';\n        c=getchar();\n    }\n    x*=flag;\n}\ninline void build(){\n    while(dep<n)dep<<=1;//\u627e\u5230\u4e0d\u5c0f\u4e8en\u76842\u7684\u6b21\u5e42 \n    for(int i=dep;i<dep+n;i++)\n        read(tree[i]);//\u76f4\u63a5\u8f93\u5165\u53f6\u5b50\u8282\u70b9  \n    for(int i=dep-1;i;i--){ // \u5dee\u5206\u601d\u60f3 \n        tree[i]=min(tree[i<<1],tree[i<<1|1]);\n        tree[i<<1]-=tree[i];\n        tree[i<<1|1]-=tree[i];\n    }\n}\ninline void write(int x){\n    if(x==0)putchar('0');\n    int ts=0,Out[23]={0};\n    while(x){\n        Out[++ts]=x%10;\n        x/=10;\n    }\n    while(ts>0)putchar(Out[ts--]+'0');\n    putchar('\\n');\n}\nint main(){\n    read(n);\n    read(m);\n    build();\n    write(0);\n    for(int i=2;i<=n;i++)\n        write(query_min(max(1,i-m),i-1));\n    return 0;\n}\n\u00b7\u00b7\u00b7\n```",
        "postTime": 1495269282,
        "uid": 34531,
        "name": "DDOSvoid",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u5355\u8c03\u961f\u5217\u88f8\u9898\u4ee3\u7801\uff0c\u5343\u4e07\u6ce8\u610fPE\u548cTLE\uff0c\u6bcf\u884c\u56de\u8f66\u4e0d\u662f\u7a7a\u683c\uff0ccincoutTLE\uff0c\u5fc5\u987bscanf,printf\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nint n,m,a[2000005];\nint q[2000005],head = 1, tail = 1;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i = 1; i <= n; i++)\n        scanf(\"%d\",a+i);\n    printf(\"0\\n\"),q[1] = 1;\n    for(int i = 2; i <= n; i++)\n    {\n        printf(\"%d\\n\",a[q[head]]);\n        if(q[head] <= i-m)\n            head++;\n        while(a[i] <= a[q[tail]] && tail >= head)\n            tail--;\n        q[++tail] = i;\n    }\n    return 0;\n}\n```",
        "postTime": 1471230476,
        "uid": 16528,
        "name": "magolor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e00\u770b\u5c31\u5148\u60f3\u7528ST\u8868\u554a\uff08\u849f\u84bb\u884c\u4e3a\uff09\n\n\n\u6253\u51fa\u6765~~\u5b8c\u7f8e\u5730~~\u5168\u90e8MLE\n\n\u8fd9\u65f6~~\u6211\u4eec\u4f1f\u5927\u7684\u91d1\u724c\u9009\u624bzsx~~\u60f3\u5230\uff0c\u53ef\u4ee5\u7528\u6eda\u52a8\u6570\u7ec4\u554a\uff01\n\n\u4f46\u662f\u95ee\u9898\u6765\u4e86\uff0c\u9884\u5904\u7406\u4e4b\u540e\u5c31\u7b2c\u4e8c\u4f4d\u5c31\u53ea\u6709\u6700\u540e\u4e24\u6392\u4e86\u554a\uff1f\u600e\u4e48\u8f93\u51fa\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u672c\u9898\u5177\u6709\u5355\u8c03\u6027\uff0c\u6240\u4ee5\u8f93\u51fa\u7684\u987a\u5e8f\u548c\u9884\u5904\u7406\u7684\u987a\u5e8f\u76f8\u540c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8fb9\u9884\u5904\u7406\u8fb9\u8f93\u51fa\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#define min(a,b) (a<b?a:b)\n#define MAXN (2000000+10)\nusing namespace std;\ninline void read(int &x) {\n\tint k=1;char c=getchar();x=0;\n\twhile(c<'0'||c>'9') {if(c=='-') k=-1; c=getchar();}\n\twhile(c>='0'&&c<='9') {x=x*10+c-'0'; c=getchar();}\n\tx*=k;\n}\nint n,m,a[MAXN];\nint fi[MAXN][2];\nint k=2,q;\nvoid deal() {\n\tmemset(fi,0x3f,sizeof(fi));\n\tfor(int i=1;i<=n;i++)\n\t\tfi[i][0]=a[i];\n\tif(q==0) {\n\t\tfor(int e=m+1;e<=n;e++)\n\t\t\tprintf(\"%d\\n\",min(fi[e-m][q%2],fi[e-1-(1<<q)+1][q%2]));\n\t\treturn;\n\t}\t\n\tint o=log(k-1)/log(2);\n\tprintf(\"%d\\n\",min(fi[1][o%2],fi[k-(1<<o)][o%2])),k++,o=log(k-1)/log(2);\n\tfor(int j=1;j<22;j++) {\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(i+(1<<j)-1<=n)\n\t\t\t\tfi[i][j%2]=min(fi[i][(j-1)%2],fi[i+(1<<(j-1))][(j-1)%2]);\n\t\tfor(;j==o&&k<=m;k++) {\n\t\t\tprintf(\"%d\\n\",min(fi[1][o%2],fi[k-(1<<o)][o%2]));\n\t\t\to=log(k-1)/log(2);\n\t\t}\n\t\tif(j==q) {\n\t\t\tfor(int e=m+1;e<=n;e++)\n\t\t\t\tprintf(\"%d\\n\",min(fi[e-m][q%2],fi[e-1-(1<<q)+1][q%2]));\n\t\t\treturn;\n\t\t}\n\t}\n}\nint formin(int l,int r) {\n\tint m=log(r-l+1)/log(2);\n\treturn min(fi[l][m],fi[r-(1<<m)+1][m]);\n}\nint main() {\n\tread(n),read(m);\n\tq=log(m)/log(2);\n\tfor(int i=1;i<=n;i++)\n\t\tread(a[i]);\n\tputs(\"0\");\n\tdeal();\n\treturn 0;\n}",
        "postTime": 1574499518,
        "uid": 226485,
        "name": "\u67f3\u82cf\u660e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u7a9d\u662f\u771f\u7684\u6ca1\u60f3\u5230\u672c\u9898\u7684\u6b63\u89e3\u662f\u5355\u8c03\u961f\u5217\u3002\u3002\u3002\u800c\u4e14#10\u8fd8\u90a3\u4e48\u5361\u5e38\u3002\u3002\u3002\n\n[~~\u7136\u540e\u559c\u63d0TLE#10~~](https://www.luogu.org/record/24122061)\n\n---\n\n### \u524d\u7f6e\u829d\u58eb\n- [\u7ebf\u6bb5\u6811](https://www.luogu.org/blog/NullCatsBlog/solution-p3372)\n\n\u597d\u7684\u8bdd\u4e0d\u591a\u8bf4\u5207\u5165\u6b63\u9898\u3002\u3002\u3002\u73b0\u5728\u6bd2\u7624\u9898\u505a\u591a\u4e86\u770b\u5230\u7ef4\u62a4\u533a\u95f4\u7b2c\u4e00\u53cd\u5e94\u5c31\u662f\u5206\u5757/\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u4e00\u770b\u6570\u636e\u8303\u56f4\u679c\u65ad\u653e\u5f03\u5206\u5757\u3002\u3002\u3002\uff08\u4f46\u662f\u8bf4\u8d77\u6765$2e6$\u7528$O(\\sqrt{n})$\u8fd8\u771f\u7684\u786e\u5b9e\u80fd\u8fc7\uff0c\u4f46\u662f\u7a9d\u4e5f\u6ca1\u8bd5\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u5c1d\u8bd5\u5206\u5757A\u4e00\u4e0b\uff0c\u4f46\u662f$2e6$\u7684\u8bdd\u8fd8\u662f\u4f18\u5148\u8003\u8651$O(n \\log n)$\u53ed\uff09\n\n\u90a3\u4e48\u5f88\u663e\u7136\uff0c\u8fd9\u9053\u9898\u5c31\u53d8\u6210\u4e86\u8ba9\u6ce5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c.\n\n\u5018\u82e5\u505a\u8fc7[P1816\u5fe0\u8bda](https://www.luogu.org/problem/P1816)\u7684\u540c\u5b66\u5e94\u8be5\u5bf9\u8fd9\u4e2a\u9898\u975e\u5e38\u6709\u601d\u8def[~~\u751a\u81f3\u8fd9\u9898\u8fd8\u8ba9\u7a9d\u5199\u9519\u4e86\u5feb\u8bfb~~](https://www.luogu.org/discuss/show/142322)\n\n\u8fd9\u4e2a\u5730\u65b9\u4e0e\u5fe0\u8bda\u4e00\u9898\u4e0d\u662f\u5f88\u4e00\u6837\u7684\u5730\u65b9\u662f\uff0c\u6b64\u5904\u7684\u533a\u95f4\u662f\u4ece$i - m\\to i - 1$\uff0c\u5f53\u7136\u524d\u63d0\u4fdd\u8bc1$i - m >= 0$\n\n~~\u53e6\u5916\u8fd9\u9053\u9898\u8fd8\u6709\u4e00\u4e2a\u53ef\u4ee5\u7384\u5b66\u4f18\u5316\u7684\u70b9\uff0c\u56e0\u4e3a\u4efb\u4f55\u4e00\u4e2a\u5e8f\u5217\u7684\u7b2c\u4e00\u9879\u524d\u9762\u90fd\u6ca1\u518d\u6709\u5176\u4ed6\u9879\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u7b2c\u4e00\u6b21\u76f4\u63a5\u8f93\u51fa\u4e00\u4e2a0~~\n\n\u8fd9\u9053\u9898\u8bf4\u8d77\u6765\u771f\u7684\u7565\u5fae\u6709\u70b9\u6c34\uff08\u5f53\u7136\u662f\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u505a\u6cd5\u800c\u8a00\uff09\u3002\u3002\u3002\u56e0\u4e3a\u6839\u672c\u4e0d\u9700\u8981```lazy_tag```\u5c31\u5b8c\u5168\u53ef\u4ee5\u7ef4\u62a4\uff0c\u56e0\u6b64\u7801\u91cf+\u601d\u7ef4\u96be\u5ea6\u5c31\u4e0b\u964d\u4e86\u4e00\u5927\u622a\n\n\u6240\u4ee5\u5c31\u53ef\u4ee5\u5f97\u5230\u4ee3\u7801\u5982\u4e0b\uff08\u5efa\u8bae\u5148\u5b66\u4f1a+\u5b66\u597d\u7ebf\u6bb5\u6811\u518d\u98df\u7528\uff09\uff1a\n\n```cpp\n//\u6bd2\u7624\u6570\u636e\u5361\u7a9d\u8f93\u5165QAQ\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nvoid yggAKIOI(int, int, int);\n\ninline void Gugugu(int);\n\nint wtcl_wzbl(int, int, int, int, int);\n\ninline int NCisBaolinger();\t//\u4e2a\u4eba\u4e60\u60ef\u628a\u51fd\u6570\u5199\u5728\u524d\u9762qwq\u5b9a\u4e49\u653e\u5230\u4e3b\u51fd\u6570\u540eqwq\n\nint n, m;\n\nint qwq[11451400], qaq[191981000];\t//\u4e0d\u8981\u7ba1\u5f00\u7684\u6570\u7ec4\u5927\u5c0f\u7684\u6570\u5b572333\u592a\u81ed\u4e86\n\nint main(int argc, char* argv[])\n{\n\tn = NCisBaolinger(), m = NCisBaolinger();\n\tfor(register int i = 1; i <= n; i++)\n\t{\n\t\tqwq[i] = NCisBaolinger();\n\t}\n\tyggAKIOI(1, n, 1);\n\tprintf(\"%d\\n\", 0);\n\tfor(register int i = 2; i <= n; i++)\n\t{\n\t\tif(i - m <= 0)\n\t\t{\n\t\t\tprintf(\"%d\\n\", wtcl_wzbl(1, n, 1, i - 1, 1));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%d\\n\", wtcl_wzbl(1, n, i - m, i - 1, 1));\n\t\t}\n\t}\n\treturn 0;\n}\n\nvoid yggAKIOI(int left, int right, int root)\n{\n\tif(left == right)\n\t{\n\t\tqaq[root] = qwq[left];\n\t\treturn;\n\t}\n\telse\n\t{\n\t\tint mid = (left + right) >> 1;\n\t\tyggAKIOI(left, mid, root << 1);\n\t\tyggAKIOI(mid + 1, right, root << 1 | 1);\t//\u4e0d\u7528\u4f4d\u8fd0\u7b97\u6015\u662f\u5feb\u8bfb\u4e5f\u6551\u4e0d\u4e86\u7a9d\u558fqwq\n\t\tGugugu(root);\n\t}\n}\n\ninline void Gugugu(int root)\n{\n\tqaq[root] = min(qaq[root << 1], qaq[root << 1 | 1]);\n\treturn;\n}\n\nint wtcl_wzbl(int left, int right, int from, int to, int root)\n{\n\tif(left >= from && right <= to)\n\t{\n\t\treturn qaq[root];\n\t}\n\telse\n\t{\n\t\tint mid = (left + right) >> 1;\n\t\tint ans = 0x7f7f7f7f;\n\t\tif(mid >= from) ans = min(ans, wtcl_wzbl(left, mid, from, to, root << 1));\n\t\tif(mid < to) ans = min(ans, wtcl_wzbl(mid + 1, right, from, to, root << 1 | 1));\n\t\treturn ans;\n\t}\n}\n\ninline int NCisBaolinger()\t//\u6bd2\u7624\u51fa\u9898\u4eba\u6240\u8feb\uff0c\u4e3a\u4e86\u7384\u5b66A\u53ea\u597d\u5feb\u8bfbqwq\n{\n    int d = 0, o = 1;\n    char ch = getchar();\n    while(ch < '0' || ch > '9')\n    {\n        if(ch == '-') o = 0;\n        ch = getchar();\n    }\n    while(ch >= '0' && ch <= '9')\n    {\n        d = (d << 1) + (d << 3) + (ch ^ 48);\n        ch = getchar();\n    }\n    return (o ? d : ~d + 1);\n}\n```\n\n~~\u6700\u540e\u60f3\u5410\u69fd\u4e00\u53e5\uff0c\u8fd9\u4e48\u5361\u7ebf\u6bb5\u6811\u771f\u7684\u597d\u561b~~",
        "postTime": 1569079611,
        "uid": 213346,
        "name": "Null_Cat",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "emm \u849f\u84bb\u6700\u8fd1\u521a\u5b66\u5355\u8c03\u961f\u5217\uff0c\u8fd9\u662f\u4e00\u9053\u5355\u8c03\u961f\u5217\u7684\u5165\u95e8\u9898\uff0c\u7136\u540e\u5df2\u7ecf\u6709\u7684\u9898\u89e3\u90fd\u662f\u76f4\u63a5\u8bb2\u4ee3\u7801\uff0c\u849f\u84bb\u81ea\u5df1\u6765\u8bb2\u4e00\u8bb2~~\u901a\u4fd7\u6613\u61c2~~\u7684\u601d\u8def\u5427\u3002\uff08\u5176\u5b9e\u4ee3\u7801\u5f88\u77ed\uff0c\u6838\u5fc3\u53ea\u67095\u884c\uff0c\u5404\u4f4d\u4e0d\u5fc5\u6050\u614c\uff09\n\n## \u66b4\u529b\u51fa\u5947\u8ff9\n\n\u8fd9\u9898\u6240\u6709\u4eba\u770b\u5230\u9898\u9762\u7684\u7b2c\u4e00\u4e2a\u53cd\u5e94\uff0c\u80af\u5b9a\u662f\u66b4\u529b\u3002\u6bcf\u6b21\u67e5\u627e\u524d$m$\u4e2a\u6570\u4e0d\u5c31\u884c\u4e86\uff1f\u4e00\u770b\u6570\u636e\u8303\u56f4\uff0c\u987f\u65f6\u65e0\u8bed\u3002$O(n*m)$\u66b4\u529b\u5b8c\u7f8e$TLE$\u3002\n\n## \u627e\u5230\u4f18\u5316\u7684\u5951\u673a\n\n\u6211\u4eec\u89c2\u5bdf\u6837\u4f8b\uff0c\u4ece\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e9b\u89c4\u5f8b\u2014\u2014\u5728\u5bfb\u627e $i$ \u7684\u524d $m$ \u4e2a\u6570\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u4e86\u91cd\u590d\u3002**\u6211\u4eec\u5728\u5bfb\u627e $i-1$ \u7684\u524d $m$ \u4e2a\u6570\u7684\u65f6\u5019\uff0c\u679a\u4e3e\u4e86\u533a\u95f4 $[i-m, i-1]$\u3002\u800c\u6211\u4eec\u5728\u5bfb\u627e $i$ \u7684\u524d $m$ \u4e2a\u6570\u7684\u65f6\u5019\uff0c\u53c8\u679a\u4e3e\u4e86\u533a\u95f4 $[i-m+1, i]$\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u91cd\u590d\u679a\u4e3e\u4e86 $m-1$ \u4e2a\u6570\uff0c\u8fd9\u4e9b\u6570\u5bfc\u81f4\u4e86\u5982\u6b64\u9ad8\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002**\n\n\u5982\u56fe\uff08\u7eaf\u9f20\u6807\u7ed8\u753b\uff0c\u6ca1\u6709\u89e6\u5c4f\u7684\u60b2\u5267\uff09\u3002\n\n![](https://ae01.alicdn.com/kf/H90a9a90e794d494389d8859f69fc737cB.jpg)\n\n## \u5355\u8c03\u961f\u5217\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u6c42`min`\u503c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u91cd\u590d\u904d\u5386\u4e86\u8fd9\u4e2a\u6570\u7ec4\uff0c\u5bfc\u81f4\u6548\u7387\u4f4e\u4e0b\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u80fd\u4e0d\u80fd\u8bb0\u5f55\u4e0b`min`\u503c\u5462\uff1f\u6211\u4eec\u53d1\u73b0\uff0c\u5176\u5b9e\u6211\u4eec**\u8981\u6c42\u7684\u533a\u95f4\u662f\u56fa\u5b9a\u7684**\u3002\u90a3\u4e48\u6211\u4eec\u601d\u8003\u4e00\u4e0b\uff0c\n\n**\u5982\u679c\uff0c $j$ \u5728\u67d0\u4e00\u4e2a\u533a\u95f4\u91cc\u9762\u662f\u6700\u5c0f\u503c\uff0c\u5728\u8fd9\u65f6\uff0c\u6765\u4e86\u4e00\u4e2a $i$ \u3002$i$ \u6bd4 $j$ \u6765\u7684\u5c0f\uff0c\u4e5f\u6bd4 $j$ \u540e\u6765\uff08\u6362\u53e5\u8bdd\u8bf4\uff0c$i$ \u6bd4 $j$ \u5e74\u8f7b\uff0c\u53c8\u6bd4 $j$ \u4f18\u79c0\uff09\uff0c\u90a3\u4e48 $j$ \u6c38\u8fdc\u4e0d\u53ef\u80fd\u6210\u4e3a\u4e4b\u540e\u533a\u95f4\u91cc\u9762\u7684 $min$ \u503c\u4e86\uff01\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u8003\u8651 $j$\uff0c\u628a $j$ \u5f39\u51fa\u3002**\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u662f\u4e00\u4e2a **\u5148\u8fdb\u5148\u51fa** \u7684\u6570\u636e\u7ed3\u6784\uff0c\u5f88\u663e\u7136\uff0c\u6211\u4eec\u4f7f\u7528 **\u961f\u5217** \u6765\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u4f46\u662f\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u8003\u8651\u4e00\u70b9\uff1a**\u961f\u5217\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u8981\u6bd4\u524d\u9762\u6765\u7684\u4f18\u79c0\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u7ef4\u62a4\u961f\u5217\u7684\u5355\u8c03\u6027\u3002**\n\n\u6211\u4eec\u5c31\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u7ed3\u6784\uff1a**\u5355\u8c03\u961f\u5217 $Monotone-Queue$**\n\n\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u5e38\u4e0e **\u52a8\u6001\u89c4\u5212** \u7b97\u6cd5\u8fde\u7528\uff0c\u4f5c\u7528\u4e8e **\u72b6\u60011D/\u8f6c\u79fb1D \u7b49** \u52a8\u6001\u89c4\u5212\u4e2d\u3002\u5728\u6b64\u9898\u4e2d\uff0c**\u6211\u4eec\u5728\u4e00\u7aef\u7ef4\u62a4\u5355\u8c03\u6027\uff0c\u53e6\u4e00\u7aef\u7ef4\u62a4\u65f6\u6548\u6027**\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nint a[2000005], que[2000005];\n// que\u6570\u7ec4\u6a21\u62df\u5355\u8c03\u961f\u5217\u7684\u64cd\u4f5c\n\nint main() {\n    int n, m;\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= n; i++)\n        scanf(\"%d\", &a[i]);\n    int head = 1, tail = 0;\n    printf(\"0\\n\");\n    // \u4e00\u5f00\u59cb\uff0c\u5148\u8f93\u51fa\u4e00\u4e2a0\n    for (int i = 1; i <= n-1; i++) {\n    while (head <= tail && a[que[tail]] >= a[i]) tail--;\n    // \u7ef4\u62a4\u5355\u8c03\u6027\n    que[++tail] = i;\n    // \u5165\u961f\n    while (head <= tail && que[head] <= i-m) head++;\n    // \u7ef4\u62a4\u65f6\u6548\u6027\n    printf(\"%d\\n\", a[que[head]]);\n    // \u6700\u540e\u8f93\u51fa\u961f\u5217\u7684head\u5c31\u53ef\u4ee5\u4e86\n    } \n    return 0;\n} \n```\n\n## \u5c0f\u7ed3\n\n\u603b\u800c\u8a00\u4e4b\uff0c\u5355\u8c03\u961f\u5217\u5728OI\u4e2d\u7684\u5e94\u7528\u5f88\u5c11\u3002\u4f46\u662f\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u677f\u5b50\u3002\u5982\u679c\u4f60\u7406\u89e3\u900f\u5f7b\u4e86\uff0c\u5c31\u628a\u5b83\u8bb0\u5fc6\u4e0b\u6765\u3002\u5f88\u591a\u7c7b\u578b\u52a8\u6001\u89c4\u5212\u7684\u4f18\u5316\u5c31\u662f\u57fa\u4e8e\u8fd9\u4e2a\u6a21\u677f\u7684\u3002\u53e6\u5916\uff0c\u849f\u84bb\u521a\u5b66OI\uff0c\u83dc\u5230\u4e0d\u884c\u3002\u6240\u4ee5\uff0c\u8fd8\u8bf7\u5927\u4f6c\u591a\u591a\u6307\u6559\u3002\n\n## \u849f\u84bb\u306e\u535a\u5ba2\n\n\u849f\u84bb\u7684\u535a\u5ba2\u6700\u8fd1\u5f88\u4e0d\u53cb\u597d\u7684\u6e05\u6863\u4e86\u4e00\u6b21\uff08\u56e0\u4e3a\u6362\u4e86\u5730\u5740\u540d\uff09\u3002\u6700\u8fd1\u5728\u4fee\u5462\uff0c\u6b22\u8fce\u5404\u4f4d\u5927\u4f6c\u6765\u6211\u7684\u535a\u5ba2\u73a9\u9e2d~\n\n\n**\u672c\u9898\u535a\u5ba2\u94fe\u63a5**\uff1a[**\u70b9\u6211\u8fdb\u5165**](https://www.cnblogs.com/ByhBlog/p/11416332.html)\n\n**\u535a\u5ba2\u94fe\u63a5&\u5730\u5740**\uff1a[**https://www.cnblogs.com/ByhBlog**](https://www.cnblogs.com/ByhBlog)",
        "postTime": 1566828309,
        "uid": 101855,
        "name": "WOWHandsome",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u4e00\u770b\u5230\u8fd9\u9053\u9898\u76ee\uff0c\u6211\u5c31\u60f3\u5230\u4e86\u7ebf\u6bb5\u6811\n###### ~~\u6bd5\u7adf\u6211\u53ea\u4f1a\u7ebf\u6bb5\u6811~~\n\n------------\n# \u7b80\u4ecb\u7ebf\u6bb5\u6811\n\n\u7ebf\u6bb5\u6811\u662f\u4e00\u79cd\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u4e0e\u533a\u95f4\u6811\u76f8\u4f3c\uff0c\u5b83\u5c06\u4e00\u4e2a\u533a\u95f4\u5212\u5206\u6210\u4e00\u4e9b\u5355\u5143\u533a\u95f4\uff0c\u6bcf\u4e2a\u5355\u5143\u533a\u95f4\u5bf9\u5e94\u7ebf\u6bb5\u6811\u4e2d\u7684\u4e00\u4e2a\u53f6\u7ed3\u70b9\u3002\n\u4f7f\u7528\u7ebf\u6bb5\u6811\u53ef\u4ee5\u5feb\u901f\u7684\u67e5\u627e\u67d0\u4e00\u4e2a\u8282\u70b9\u5728\u82e5\u5e72\u6761\u7ebf\u6bb5\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(logN)\u3002\u800c\u672a\u4f18\u5316\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a2N\uff0c\u5b9e\u9645\u5e94\u7528\u65f6\u4e00\u822c\u8fd8\u8981\u5f004N\u7684\u6570\u7ec4\u4ee5\u514d\u8d8a\u754c\uff0c\u56e0\u6b64\u6709\u65f6\u9700\u8981\u79bb\u6563\u5316\u8ba9\u7a7a\u95f4\u538b\u7f29\u3002\n- \u6b64\u6bb5\u6587\u5b57\u6765\u6e90\u4e8e\u767e\u5ea6\u767e\u79d1\n\n------------\n\u73b0\u5728\u6211\u4eec\u628a\u76ee\u5149\u770b\u5411\u8fd9\u9053\u9898\u76ee\uff0c\u8fd9\u9053\u9898\u76ee\u4e0d\u4f1a\u4fee\u6539\u533a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u5c31\u5c11\u4e86\u533a\u95f4\u4fee\u6539\u548c\u61d2\u6807\u8bb0\u7684\u8fc7\u7a0b\u3002\n## \u4e00\u3001\u5efa\u6811\u4e0e\u7ef4\u62a4\n\u6211\u4eec\u5148\u6765\u5206\u6790\u4e0b\u7ebf\u6bb5\u6811\u7684\u4e00\u4e9b\u6027\u8d28  \n\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u513f\u5b50\u5c31\u662f\u8fd9\u4e2a\u8282\u70b9\u7684\u7f16\u53f7\u4e58\u4ee5\u4e8c   \n\u53f3\u513f\u5b50\u4e5f\u662f\u8fd9\u4e2a\u70b9\u7684\u7f16\u53f7\u4e58\u4ee5\u4e8c\u518d\u52a0\u4e00    \n\u76f8\u53cd\uff0c\u5982\u679c\u6211\u4eec\u8981\u5bfb\u627e\u4e00\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u53ea\u9700\u8981\u5c06\u8282\u70b9\u6807\u53f7\u6574\u9664\u4ee5\u4e8c\u5373\u53ef!\n![](https://cdn.luogu.com.cn/upload/pic/57778.png)\n\n\n\n$\\ \\ \\ \\ \\ \\ \\ $\u5bf9\u4e8e$A[1:4] = \\{1,2,3,4\\}$\u6765\u8bf4\uff0c\u7ebf\u6bb5\u6811\u5982\u4e0a\u6240\u793a\uff0c\u84dd\u8272\u4ee3\u8868\u6bcf\u4e2a\u7ed3\u70b9\u7684\u7f16\u53f7\uff0c\u7ea2\u8272\u4ee3\u8868\u6bcf\u4e2a\u8282\u70b9\u5b58\u50a8\u7684\u533a\u95f4\uff0c\u7eff\u8272\u4ee3\u8868\u8be5\u533a\u95f4\u6700\u5c0f\u503c\u3002     \n$\\ \\ \\ \\ \\ \\ \\ $\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e2a\u53f6\u5b50\u7ed3\u70b9\u7684\u503c\u5c31\u662f\u6570\u7ec4\u7684\u503c\uff0c\u6bcf\u4e2a\u975e\u53f6\u5b50\u7ed3\u70b9\u7684\u5ea6\u90fd\u4e3a\u4e8c\uff0c\u4e14\u5de6\u53f3\u4e24\u4e2a\u5b69\u5b50\u5206\u522b\u5b58\u50a8\u7236\u4eb2\u4e00\u534a\u7684\u533a\u95f4\u3002\u6bcf\u4e2a\u7236\u4eb2\u7684\u5b58\u50a8\u7684\u503c\u4e5f\u5c31\u662f\u4e24\u4e2a\u5b69\u5b50\u5b58\u50a8\u7684\u503c\u7684\u6700\u5c0f\u503c\u3002    \n$\\ \\ \\ \\ \\ \\ \\ $\u6574\u7406\u4e00\u4e0b\u601d\u7eea\uff0c\u73b0\u5728\u5df2\u7ecf\u660e\u767d\u4e86\u6570\u7ec4\u5982\u4f55\u5b58\u5728\u7ebf\u6bb5\u6811\uff0c\u7ed3\u70b9\u95f4\u7684\u5173\u7cfb\uff0c\u4ee5\u53ca\u4f7f\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u5efa\u7acb\u7ebf\u6bb5\u6811\uff0c\u90a3\u4e48\u5177\u4f53\u5982\u4f55\u5efa\u7acb\u7ebf\u6bb5\u6811\uff0c\u6211\u4eec\u6765\u770b\u4ee3\u7801\uff0c\u4ee3\u7801\u4e2d\u4e0d\u6e05\u695a\u7684\u5730\u65b9\u90fd\u6709\u8be6\u7ec6\u7684\u6ce8\u91ca\u8bf4\u660e\u3002\n```cpp\nint n,a[N+1];//n\u8868\u793a\u6570\u7684\u4e2a\u6570\uff0ca\u4e3a\u6570\u7ec4 \nstruct node\n{\n    int minn,l,r;\n}tree[4*N+1];//\u6811\u7684\u5b9a\u4e49 minn\u8868\u793a\u533a\u95f4\u6700\u5c0f\u503c\uff0cl\u8868\u793a\u533a\u95f4\u5de6\u4e0b\u6807\uff0cr\u8868\u793a\u533a\u95f4\u53f3\u4e0b\u6807 \nvoid push_up(int x)//\u6811\u7684\u7ef4\u62a4 \n{\n\t//x<<1\u7b49\u540c\u4e8ex*2,x<<1|1\u7b49\u540c\u4e8ex*2+1\n\tif(tree[x<<1].minn<tree[x<<1|1].minn)\n    \ttree[x].minn=tree[x<<1].minn;\n    else\n    \ttree[x].minn=tree[x<<1|1].minn;\n    //\u7b49\u540c\u4e8etree[x].minn=min(tree[x<<1].minn,tree[x<<1|1].minn) \u7236\u4eb2\u6700\u5c0f\u503c\u4e3a\u5de6\u53f3\u513f\u5b50\u6700\u5c0f\u503c \n}\nvoid build(int x,int l,int r)//x\u8868\u793a\u5f53\u524d\u6811\u7684\u7f16\u53f7 \n{\n    tree[x].l=l; tree[x].r=r;//\u5148\u5c06\u5de6\u53f3\u533a\u95f4\u5b58\u8d77\u6765 \n    if(l==r)//\u5982\u679c\u5de6\u4e0b\u6807\u7b49\u4e8e\u53f3\u4e0b\u6807\uff0c\u90a3\u4e48\u6700\u5c0f\u503c\u5c31\u4e3a\u8fd9\u4e2a\u6570 \n    {\n        tree[x].minn=a[l];\n        return;\n    }\n    int mid=(l+r)>>1;\n    build(x<<1,l,mid);\n    build(x<<1|1,mid+1,r);\n    push_up(x);//\u5efa\u597d\u5de6\u53f3\u4e24\u68f5\u5b50\u6811\uff0c\u8fdb\u884c\u6811\u7684\u7ef4\u62a4 \n}\n```\n## \u4e8c\u3001\u533a\u95f4\u67e5\u8be2\n\u67e5\u8be2 l ~ r \u533a\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u6211\u4eec\u8fd8\u662f\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u5f80\u4e0b\u9012\u5f52\uff0c\u5982\u679c\u5f53\u524d\u7ed3\u70b9\u5728 l ~ r \u7684\u533a\u95f4\u5185\uff0c\u5219\u8fd4\u56de\u8fd9\u4e2a\u7ed3\u70b9\u7684\u4fe1\u606f\u4e14\u4e0d\u9700\u8981\u518d\u5f80\u4e0b\u9012\u5f52\u4e86\uff0c\u8fd9\u6837\u4ece\u6839\u8282\u70b9\u5f80\u4e0b\u9012\u5f52\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662fO(logN)\u3002\n![](https://cdn.luogu.com.cn/upload/pic/54813.png)\n\u518d\u7528\u4e0a\u9762\u8fd9\u5e45\u56fe\u6765\u770b     \n\u5982\u679c\u6211\u4eec\u8981\u67e5\u8be22~3\u7684\u6700\u5c0f\u503c\uff0c    \n\u5148\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c1~4\uff0c\u4e0d\u5728\u533a\u95f4\u5185\uff0c\u5411\u4e0b\u9012\u5f52    \n\u5148\u627e1~2\uff0c\u4e5f\u4e0d\u5728\uff0c\n1~1\u5f88\u660e\u663e\u4e0d\u7b26\u5408\u6761\u4ef6\uff0c\u5219\u8fd4\u56de2~2\u6700\u5c0f\u503c    \n\u56de\u9988\u52301~2,\u52191~2\u76842\u52303\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u4e3a2    \n\u540c\u7406\uff0c3~4\u76842\u52303\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u4e3a3   \n2\u66f4\u5c0f\uff0c\u65452~3\u7684\u6700\u5c0f\u503c\u4e3a2     \n\u600e\u4e48\u6837\uff0c\u662f\u4e0d\u662f\u5f88\u7b80\u5355?\n\u4e0b\u9762\u662f\u533a\u95f4\u67e5\u8be2\u4ee3\u7801\n```cpp\nint query(int x,int l,int r)// x\u8868\u793a\u5f53\u524d\u6811\u7684\u7f16\u53f7 ,l~r\u4e3a\u67e5\u8be2\u533a\u95f4 \n{\n    if(l<=tree[x].l&&tree[x].r<=r)//\u5982\u679c\u5f53\u524d\u7ed3\u70b9\u5728 l ~ r \u7684\u533a\u95f4\u5185\uff0c\u5219\u8fd4\u56de\u8fd9\u4e2a\u7ed3\u70b9\u7684\u6700\u5c0f\u503c \n        return tree[x].minn;\n    int mid=(tree[x].l+tree[x].r)>>1;\n    int a=2147483647,b=2147483647;\n    if(l<=mid)//\u5982\u679c\u5728\u5de6\u5b50\u6811\u533a\u95f4 \n        a=query(x<<1,l,r);\n    if(r>=mid+1)//\u5982\u679c\u5728\u53f3\u5b50\u6811\u533a\u95f4\n        b=query(x<<1|1,l,r);\n    if(a>b)//\u53d6\u6700\u5c0f \n    \ta=b;\n    return a;//\u8fd4\u56de\u6700\u5c0f\u503c \n}\n```\n\u4e0b\u9762\u5c31\u662f\u5b8c\u6574\u4ee3\u7801\u5566\n```cpp\n#include<cstdio>\n#define N 2000000\nusing namespace std;\nint n,a[N+1];\nstruct node\n{\n    int minn,l,r;\n}tree[4*N+1];\nvoid push_up(int x)\n{\n\tif(tree[x<<1].minn<tree[x<<1|1].minn)\n    \ttree[x].minn=tree[x<<1].minn;\n    else\n    \ttree[x].minn=tree[x<<1|1].minn;\n}\nvoid build(int x,int l,int r) \n{\n    tree[x].l=l; tree[x].r=r; \n    if(l==r)\n    {\n        tree[x].minn=a[l];\n        return;\n    }\n    int mid=(l+r)>>1;\n    build(x<<1,l,mid);\n    build(x<<1|1,mid+1,r);\n    push_up(x);\n}\nint query(int x,int l,int r) \n{\n    if(l<=tree[x].l&&tree[x].r<=r) \n        return tree[x].minn;\n    int mid=(tree[x].l+tree[x].r)>>1;\n    int a=2147483647,b=2147483647;\n    if(l<=mid)\n        a=query(x<<1,l,r);\n    if(r>=mid+1)\n        b=query(x<<1|1,l,r);\n    if(a>b)\n    \ta=b;\n    return a;\n}\nint read()\n{\n\tint ans=0,x=1;\n    char c=getchar();\n\twhile (c<'0'||c>'9'){if (c=='-') x=-x;c=getchar();}\n    while (c>='0'&&c<='9'){ans=(ans<<1)+(ans<<3)+(c^48);c=getchar();}\n    return ans*x;\n}\nint main()\n{\n    int m;\n    n=read(); m=read();\n    for(register int i=1;i<=n;i++)\n        a[i]=read();\n    build(1,1,n);\n    for(register int i=1;i<=n;i++)\n    \tif(i!=1)\n    \t{\n    \t\tif(i-m>1)\n    \t\t\tprintf(\"%d\\n\",query(1,i-m,i-1));\n    \t\telse\n    \t\t\tprintf(\"%d\\n\",query(1,1,i-1));\n\t\t}\n    \telse\n    \t\tprintf(\"0\\n\");\n    return 0;\n}\n```\n\n\n",
        "postTime": 1553329530,
        "uid": 111475,
        "name": "doctorZ_",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u672c\u9898\u5355\u8c03\u961f\u5217\uff0c\u6211\u7528deque\u5199\u7684\u5355\u8c03\u961f\u5217\uff0c\u8fd9\u9898\u7adf\u7136\u5361\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u7528ios::sync_with_stdio(false)\u6765\u4f18\u5316 cin\u548ccout \u7adf\u7136TLE\uff0c\u6700\u540e\u679c\u65adscanf\u548cprintf\u624d\u6c34\u8fc7\u3002\n\u5178\u578b\u7684\u5355\u8c03\u961f\u5217\u7684\u677f\u5b50\u9898\uff0c\u89c1\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <deque>\n#include <stdio.h>\nusing namespace std;\nstruct sa\n{\n    int val;\n    int num;\n};\nint a[2000001];\ndeque<sa> v;\nint main()\n{  //ios::sync_with_stdio(false);\n    struct sa tmp;\n    int n,m;\n    cin>>n>>m;\n    //for(int i=1;i<=n;i++)\n        //cin>>a[i];\n    cout<<0<<endl;\n    for(int i=1;i<n;i++)\n    {   //cin>>a[i];\n        scanf(\"%d\",&a[i]);\n        tmp.val=a[i];\n        tmp.num=i;\n        while(!v.empty()&&tmp.val<v.back().val)\n            {//cout<<\"====\"<<v.back().val<<endl;\n                v.pop_back();\n                }\n        v.push_back(tmp);\n        if (i-v.front().num>=m) v.pop_front();\n        printf(\"%d\\n\",v.front().val);\n        //cout<<v.front().val<<endl;\n\n\n    }\n\n    //cout << \"Hello world!\" << endl;\n    return 0;\n}\n\n```",
        "postTime": 1529331927,
        "uid": 65643,
        "name": "\u5174\u5b89\u9ed1\u718a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u4e0d\u4f1a\u7528\n\n```cpp\n#include<queue>\n```\n\u6240\u4ee5\u7528\u4e86\u6a21\u62df\u4f18\u5316\uff0c\u8fc7\u4e86\n\n\n\u8bb0\u4e0b\u5f53\u524d\u6700\u5c0f\u503c\u4e0e\u5b83\u7684\u4f4d\u7f6e\uff0c\n\n\u5f53\u5b83\u5728\u533a\u95f4\u5185\u65f6\u5c06\u540e\u9762\u7684\u503c\u4e0e\u5b83\u6bd4\u8f83\n\n\u5982\u679c\u540e\u9762\u7684\u503c\u4e0d\u6bd4\u5b83\u5927\uff0c\u90a3\u4e48\u8fdb\u884c\u66f4\u65b0\n\n\u5f53\u5b83\u5728\u533a\u95f4\u5916\u65f6\uff0c\u5728\u540e\u9762\u5728\u533a\u95f4\u5185\u7684\u6570\u4e2d\u67e5\u627e\u6700\u5c0f\u503c\uff0c\u8bb0\u4e0b\u5f53\u524d\u6700\u5c0f\u503c\u4e0e\u5b83\u7684\u4f4d\u7f6e\uff0c\u91cd\u590d\u6267\u884c\u76f4\u5230\u6240\u6709\u6570\u5747\u88ab\u5904\u7406\n\n\u8bc4\u6d4b\u8bb0\u5f55\uff1ahttps://www.luogu.org/recordnew/show/5209307\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,i,j,a[2000010],minn/*\u6700\u5c0f\u503c*/,mins/*\u6700\u5c0f\u503c\u6240\u5728\u7684\u4f4d\u7f6e*/;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(i=1; i<=n; i++)\n      scanf(\"%d\",&a[i]);\n    printf(\"0\\n\");//\u5bf9\u7b2c\u4e00\u4e2a\u6570\u7684\u7279\u6b8a\u5904\u7406\n    \n    minn=a[1]; mins=1;\n    for(i=2; i<=n; i++)//\u4ece\u7b2c\u4e8c\u4e2a\u6570\u5230\u7ed3\u675f\n    {\n        if(a[i-1]<=minn)//\u5b83\u4e4b\u524d\u7684\u4f4d\u7f6e\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u7684\u6700\u5c0f\u503c\n        {\n            minn=a[i-1];//\u66f4\u65b0\u6700\u5c0f\u503c\n            mins=i-1;//\u66f4\u65b0\u6700\u5c0f\u503c\u6240\u5728\u7684\u4f4d\u7f6e\n        }\n        if(mins<i-m)//\u5f53\u5b83\u5728\u533a\u95f4\u5916\u65f6\n        {\n            minn=a[i-m]; mins=i-m;//\u9632\u6b62\u8bbe\u5b9a\u7684\u6700\u5c0f\u503c\u4e0d\u591f\u5927\uff0c\u628a\u7b2c\u4e00\u4e2a\u503c\u5148\u9884\u8bbe\u6210\u6700\u5c0f\u503c\n            for(j=i-m+1; j<=i-1; j++)\n              if(a[j]<=minn)//\u627e\u5230\u4e00\u4e2a\u66f4\u5c0f\u7684\u503c\n              {\n                  minn=a[j];\n                  mins=j;\n              }//\u540c\u7406\uff0c\u66f4\u65b0\u6700\u5c0f\u503c\u548c\u4ed6\u6240\u5728\u7684\u4f4d\u7f6e\n        }//\u53d6\u5176\u4e2d\u7684\u6700\u5c0f\u503c\n        printf(\"%d\\n\",minn);//\u8f93\u51fa\u627e\u5230\u7684\u6700\u5c0f\u503c\n    }\n    return 0;\n}\n```",
        "postTime": 1514806833,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1\u7b80\u660e\u7684\u9898\u89e3\n\n```cpp\n#include<cstdio>\nint n,m,l=0,r=1;//r\u4e3a\u961f\u9996\uff0cl\u4e3a\u961f\u5c3e \nint a[2000009];\nint f[2000009];//\u5355\u8c03\u961f\u5217 \ninline void init(int x)//x\u662f\u6307\u7b2cx\u4e2a\u6570\u54e6 \n{\n    while(x-m>=f[r] && r<=l) r++;//\u5982\u679cf[r]\u5df2\u4e0d\u5728\u533a\u95f4\u5219\u51fa\u961f\uff0c\u6ce8\u610f\u201cr<=l\u201d \u5426\u5219\u4f1are \n    while(l>=r && a[x]<=a[f[l]]) l--;//f[l]\u4e00\u5b9a\u5927\u4e8ex\uff0c\u5982\u679c a[x]<=a[f[l]]\uff0c\u5219a[f[l]]\u4e0d\u4f1a\u518d\u662f\u7b54\u6848 \n    f[++l]=x;//\u5165\u961f \n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n    for(int i=1;i<=n;i++)\n    {\n        printf(\"%d\\n\",a[f[r]]);//\u6ce8\u610f\u8981\u5148\u8f93\u51fa \n        init(i);//\u5165\u961f \n    }\n    return 0;\n}//\u54c8\u54c8\u7b80\u660e\u768421\u884c\n```",
        "postTime": 1502197323,
        "uid": 24337,
        "name": "zhangchengkai",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u7b97\u662f\u4e00\u9053\u88f8\u7684\u5355\u8c03\u961f\u5217\u5427   \u867d\u7136STL\u5bb9\u5668\u8f83\u6162  \u4f46\u662f\u597d\u60f3\u597d\u5199\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u961f\u5217   \u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u4e8c\u5143\u7ec4    \u5206\u522b\u662f\u5f53\u524d\u5750\u6807\uff08a\uff09\u548c\u5f53\u524d\u503c\uff08b\uff09   \u4ee5b\u4e3a\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n\u6bcf\u6b21\u6253\u5370\u53ea\u7528\u53d6\u961f\u5217\u7684\u5934\u90e8\u5c31\u53ef\u4ee5\u4e86 \u5982\u679c\u53d1\u73b0\u5934\u90e8\u7684\u5750\u6807\u503c\u5728\u5f53\u524d\u5bfb\u627e\u533a\u95f4\u4e4b\u5916 \u5c31\u628a\u8be5\u5143\u7d20\u5220\u53bb\n\n\u8fd9\u6837\u4e0d\u65ad\u7684\u6dfb\u52a0 \u4fee\u6539 \u5c31\u53ef\u4ee5\u4e86\n\n\u4ee3\u7801\u4e5f\u6bd4\u8f83\u7b80\u6d01\u660e\u4e86\n\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nint n,m,A[2000005];\nstruct hahaa{\n    int a,b;\n    bool operator < (const hahaa & z) const {         // \u91cd\u8f7d\u8fd0\u7b97\u7b26 \uff1a\u4ee5 \u5143\u7d20\u503c\u4e3a\u5173\u952e\u5b57 \u6392\u5e8f\n        return b>z.b;\n    }\n};\npriority_queue<hahaa>Q;\nint main()\n{\n   scanf(\"%d%d\",&n,&m);int tt=1;\n   for(int i=1;i<=n;i++)scanf(\"%d\",&A[i]);\n   while(tt<=n)\n   {\n       if(tt==1)printf(\"0\\n\");                //\u7b2c\u4e00\u4e2a\u70b9\u7279\u5224\u4e00\u4e0b\n       else\n       {\n    while(Q.top().a<tt-m)Q.pop(); // \u5224\u65ad\u5934\u90e8\u662f\u5426\u5728\u5408\u6cd5\u533a\u95f4\u5185\n       printf(\"%d\\n\",Q.top().b);\n        }\n       hahaa t ; t.a=tt ; t.b=A[tt]; \n        Q.push(t);                               //\u5c06\u6539\u70b9\u4e22\u8fdb\u961f\u5217\n       tt++;\n   }\n   return 0;\n}\n```",
        "postTime": 1478134325,
        "uid": 14500,
        "name": "zhaolala",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u770b\u5230\u6ca1\u6709Pascal\u9898\u89e3\u5475\u2026\u2026\n\n\u672c\u9898\u9002\u5408\u5355\u8c03\u961f\u5217\uff0c\u7136\u800c\u5355\u8c03\u961f\u5217\u5199\u7684\u4eba\u592a\u591a\uff0c\u6765\u4e00\u53d1\u7ebf\u6bb5\u6811\u3002\n\n#\u7ef4\u62a4\u4e00\u4e2a\u5b58\u50a8\u6700\u5c0f\u503c\u7684\u7ebf\u6bb5\u6811\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6570\uff0c\u8c03\u7528\u51fd\u6570\uff0c\u6c42\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n log n)\uff0c\u60ca\u9669\u901a\u8fc7\u2026\u2026\n\n\u4e0d\u77e5\u9053\u7ebf\u6bb5\u6811\u7684\uff0c\u53c2\u89c1[\u5b9d\u5178](http://blog.csdn.net/john\\_pascal/article/details/52059495)\u3002\n\n\u6807\u7a0b\uff1a\n\n```cpp\nuses math;\nvar f,a:array[1..5000005] of longint;\n    n,m,i,x,y,ans:longint; \nprocedure buildtree(l,r,k:longint);\nvar mid:longint;\nbegin\n if l=r then\n  begin\n   f[k]:=a[l];\n   exit;\n  end;\n mid:=(l+r) shr 1;\n buildtree(l,mid,k shl 1);\n buildtree(mid+1,r,k shl 1+1);\n f[k]:=min(f[k shl 1],f[k shl 1+1]);\nend;\nprocedure find(l1,r1,l2,r2,k:longint);//\u4e8c\u5206\nvar mid:longint;\nbegin\n if (l1=l2)and(r1=r2) then\n  begin\n   ans:=min(f[k],ans);\n   exit;\n  end;\n mid:=(l2+r2) shr 1;\n if r1<=mid then \n  begin \n   find(l1,r1,l2,mid,k shl 1);\n   exit;\n  end;\n if l1>mid then\n  begin\n   find(l1,r1,mid+1,r2,k shl 1+1);\n   exit;\n  end;\n find(l1,mid,l2,mid,k shl 1);\n find(mid+1,r1,mid+1,r2,k shl 1+1);\nend;\nbegin\n read(n,m);\n for i:=1 to n do read(a[i]);\n buildtree(1,n,1);//\u5efa\u6811\n if n=0 then halt;\n writeln(0);\n for i:=2 to n do\n  begin\n   ans:=a[i-1];\n   find(max(1,i-m),i-1,1,n,1);//\u67e5\u627e\u533a\u95f4\u6700\u5c0f\u503c\n   writeln(ans);\n  end;\nend .\n```",
        "postTime": 1472990175,
        "uid": 10291,
        "name": "fighter_OI",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\n\n\n\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#define rep(i,a,b) for(int i=a; i<=b; ++i)\n#define read(A) scanf(\"%d\",&A)\n#define M 2000000+1000\n//O(n)\nusing namespace std;\nint n,k;\nint p[M];\nint q[M];\nint a[M];\nint Min[M];\nvoid init()\n{\n  read(n);\n  read(k);\n  rep(i,1,n) read(a[i]);\n}\nvoid dull_queue()\n{\n  int h=1 ,t=0;\n  rep(i,1,k-1)\n  {\n      while(t>=h && a[i]<=q[t]) --t;\n      ++t , q[t] = a[i] , p[t] = i; //\u4fdd\u8bc1\u5355\u8c03\u6027 \n  }\n  rep(i,k,n)\n  {\n    while(t>=h && a[i]<=q[t]) --t;\n    ++t , q[t] = a[i] , p[t] = i; //\u4fdd\u8bc1\u5355\u8c03\u6027 \n    while(p[h] < i-k+1) ++h;  //\u53bb\u9664\u5728\u7a97\u53e3\u5916\u9762\u7684\u4e1c\u897f \n    Min[i-k+1] = q[h];  //\u533a\u95f4\u5355\u8c03\u503c \n  }\n}\nvoid out_Min()\n{\n  int mint = 0;\n  printf(\"0\\n\"); //\u9898\u76ee\u8981\u6c42 , \u524d\u9762\u503c\u4e0d\u662f0, \u800c\u662f\u4ece1-i \u7684 \u6700\u5c0f\u503c \n  rep(i,2,k) mint = !mint ? a[i-1] : min(mint,a[i-1]), printf(\"%d\\n\",mint);  //\u5c0f\u5c0f\u9012\u63a8 \n  rep(i,k+1,n) printf(\"%d\\n\" ,Min[i-k]); //\u8f93\u51fa\u5355\u8c03\u961f\u5217\u7684\u503c \n}\nvoid file()\n{\n  freopen(\"in.txt\",\"r\",stdin);\n  freopen(\"out.txt\",\"w\",stdout);\n}\nint main()\n{\n  //file();\n  init(); \n  dull_queue();\n  out_Min();\n}\n```",
        "postTime": 1470876911,
        "uid": 7268,
        "name": "_bestknife",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u601d\u8def\uff1aST\u8868+\u6eda\u52a8\u6570\u7ec4\n\n\u521a\u5f00\u59cb\u5199\u4e86\u4e00\u4e2aST\u8868\uff0c\u5982\u4e0b\uff1a\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nconst int maxn = 2e6 + 100;\nint f[maxn][22];\nint N, M;\n\ninline int pow2(int x){\n\tif(x == 0) return 1;\n\treturn 2 << (x - 1);\n}\ninline int fast_read(){\n\tchar ch = getchar();\n\tint f = 1, x = 0;\n\twhile(ch < '0' || ch > '9'){\n\t\tif(ch == '-') f = -1;\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9'){\n\t\tx = x * 10 + (ch - '0');\n\t\tch = getchar();\n\t}\n\treturn f * x;\n}\n\nint query(int l, int r){\n\tint p = (int)(log(r - l + 1) / log(2));\n\treturn min(f[l][p], f[r - pow2(p) + 1][p]);\n\t\n}\nint main(){\n\tscanf(\"%d%d\", &N, &M);\n\tfor(int i = 1 ; i <= N ; i++) f[i][0] = fast_read();\n\tfor(int i = 1 ; pow2(i) <= N ; i++){\n\t\tfor(int j = 1 ; j <= N - pow2(i) + 1 ; j++){\n\t\t\tf[j][i] = min(f[j][i - 1], f[j + pow2(i - 1)][i - 1]);\n\t\t}\n\t}\n\tprintf(\"0\\n\");\n\tfor(int i = 2 ; i <= N ; i++){\n\t\tif(i - M <= 1){\n\t\t\tprintf(\"%d\\n\", query(1, i - 1));\n\t\t}\n\t\telse printf(\"%d\\n\", query(i - M, i - 1));\n\t}\n}\n```\n\u7ed3\u679c\u88ab\u5361\u6210\u4e8680\u5206\uff08[\u63d0\u4ea4\u8bb0\u5f55](https://www.luogu.org/record/22889570)\uff09\uff0c\u4e24\u4e2a\u70b9$MLE$\uff0c\u53d1\u73b0\u662f$f$\u6570\u7ec4\u592a\u5927\u4e86\n\n\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\uff0c\u4f1a\u53d1\u73b0\uff0c\u6700\u7ec8\u67e5\u8be2\u65f6\u5e76\u4e0d\u9700\u8981\u5168\u90e8\u7684$f$\u6570\u7ec4\n\n\n\u4e0d\u59a8\u5148\u4e0d\u8003\u8651\u524d\u9762\u7684\u6570\u4e0d\u8db3$m$\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u53ea\u9700\u8981$f[i][\\lfloor \\log_2{m}\\rfloor]$\u7684\u503c\uff08\u8fd9\u91cc\u7684$f[i][j]$\u7684\u610f\u4e49\u548c\u4e00\u822c\u7684$st$\u8868\u4e00\u6837\uff0c\u8868\u793a$[i,i+2^j)$\u4e2d\u7684\u5143\u7d20\u7684\u6700\u5c0f\u503c\uff09\n\n\u5bf9\u4e8e\u524d\u9762\u7684\u6570\u4e0d\u8db3$m$\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684$dp$\u6765\u89e3\u51b3\n\n\u7528$dp[i]$\u8868\u793a$[1,i)$\uff08\u6570\u7ec4\u4e0b\u6807\u75311\u5f00\u59cb\uff09\u5185\u7684\u6700\u5c0f\u503c\n\n\u90a3\u4e48$dp[i] = min(dp[i - 1], a[i-1])$\uff08$a$\u662f\u8f93\u5165\u7684\u6570\u636e\uff0c\u5b9e\u9645\u5199\u65f6\u7528$f[i][0]$\u5b58\u50a8\uff09\n\n\u4e8e\u662f\u6709\u4e86\u4e0b\u9762\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nconst int maxn = 2e6 + 10;\nint f[maxn][3];\nint dp[maxn];\nint N, M;\n\ninline int pow2(int x){\n\tif(x == 0) return 1;\n\treturn 2 << (x - 1);\n}\ninline int fast_read(){\n\tchar ch = getchar();\n\tint f = 1, x = 0;\n\twhile(ch < '0' || ch > '9'){\n\t\tif(ch == '-') f = -1;\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9'){\n\t\tx = x * 10 + (ch - '0');\n\t\tch = getchar();\n\t}\n\treturn f * x;\n}\nint main(){\n\tscanf(\"%d%d\", &N, &M);\n\tfor(int i = 1 ; i <= N ; i++) f[i][0] = fast_read();\n   //\u4f7f\u7528f[i][0]\u6765\u4fdd\u5b58\u8f93\u5165\u7684\u6570\u636e\n\tint ind = 0;\n\tint p = 0;\n   //\u7528ind\u6765\u4fdd\u5b58\u6700\u7ec8\u9700\u8981\u7684\u6570\u7ec4\u4e0b\u6807\n\tfor(int i = 1 ; pow2(i) < M ; i++){\n\t\tfor(int j = 1 ; j <= N - pow2(i) + 1 ; j++){\n\t\t\tind = (i - 1) % 2 + 1; p = i;\n        //st\u8868\u9884\u5904\u7406\n\t\t\tf[j][ind] = min(f[j][(i - 2) % 2 + 1], f[j + pow2(i - 1)][(i - 2) % 2 + 1]);\n\t\t}\n\t}\n   //\u7b2c\u4e00\u4e2a\u5143\u7d20\u80af\u5b9a\u8f93\u51fa0\n\tprintf(\"0\\n\");\n   //\u5904\u7406\u524d\u9762\u7684\u5143\u7d20\u4e2a\u6570\u5c0f\u4e8e\u7b49\u4e8em\u7684\u5143\u7d20\n\tdp[2] = f[1][0];\n\tprintf(\"%d\\n\", dp[2]);\n\tfor(int i = 3 ; i <= M + 1 ; i++){\n\t\tdp[i] = min(dp[i - 1], f[i - 1][0]);\n\t\tprintf(\"%d\\n\", dp[i]);\n\t}\n   //\u5904\u7406\u524d\u9762\u7684\u5143\u7d20\u4e2a\u6570\u5927\u4e8em\u7684\u5143\u7d20\n\tfor(int i = M + 2 ; i <= N ; i++){\n\t\tint l = i - M;\n\t\tprintf(\"%d\\n\", min(f[l][ind], f[i - pow2(p)][ind]));\n\t}\n}\n```\n\u8fd9\u6837\u5c31\u53ef\u4ee5$AC$\u4e86\uff08[\u8bc4\u6d4b\u8bb0\u5f55](https://www.luogu.org/problem/P1440)\uff09\n",
        "postTime": 1566009020,
        "uid": 68573,
        "name": "usercjh123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u88f8\u7684\u8003\u67e5\u5355\u8c03\u961f\u5217\uff0c\u901a\u5e38\u7528\u624b\u5199\u6216`deque`\u5b9e\u73b0\u3002\u8fd9\u91cc\u5374\u7ed9\u51fa\u65f6\u95f4\u4e0a\u5f31\u5316\u7248\u7684\u5355\u8c03\u961f\u5217\uff0c\u91c7\u7528\u4f18\u5148\u961f\u5217`priority_queue`\u5b9e\u73b0\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\log n)\\approx  4\\times 10^8(n=2\\times 10^6)$\n\n\u5373\uff0c$O(\\text{\u52c9\u5f3a\u80fd\u8fc7})$\n\n\n------------\n\n\u539f\u7406\u662f\u4ec0\u4e48\u5462\uff1f\u7c7b\u4f3c\u4e8e\u666e\u901a\u7684\u5355\u8c03\u961f\u5217\uff0c\u4f9d\u7136\u9700\u8981\u5b58\u5165\u4e00\u4e2a\u503c\u53ca\u5176\u4f4d\u7f6e\u3002\n\n\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff08$i$\u4e3a\u8bfb\u5165\u7684\u6570\u91cf\uff09\uff1a\n\n- \u5f53$i\\le m$\u65f6\uff0c\u76f4\u63a5\u8f93\u51fa\u5373\u53ef\uff0c\u65e0\u9700\u53d8\u52a8\u3002\n\n- \u5f53$i>m$\u65f6\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5f39\u51fa\u3002\u663e\u7136\uff0c\u5982\u679c\u961f\u5217\u91cc\u7684\u6700\u5c0f\u503c\u8981\u4e48\u5728\u533a\u95f4\u5185\uff0c\u8981\u4e48\u5728\u533a\u95f4\u5916\u3002\u4e8e\u662f\u6211\u4eec\u5bf9\u8fd9\u4e2a\u6700\u5c0f\u503c\u7684\u4f4d\u7f6e\u8fdb\u884c\u5224\u65ad\u3002\u4e0d\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u5c31\u5f39\u51fa\u3002**\u53ef\u80fd\u6709\u8fde\u7eed\u51e0\u4e2a\u6700\u5c0f\u503c\u4e0d\u5728\u533a\u95f4\u5185\uff0c\u56e0\u6b64\u8981\u8fdb\u884c`while`\u5faa\u73af**\u3002\n\n### \u6ce8\u610f\uff1a\n\n- \u533a\u95f4\u662f$[i-m,i)$\uff0c\u5de6\u95ed\u53f3\u5f00\u3002\u56e0\u6b64\u5728\u5c06\u521a\u8bfb\u5165\u7684\u503c\u5b58\u5165\u961f\u5217\u65f6\uff0c\u5148\u8f93\u51fa\u518d\u8fdb\u961f\u3002\n\n- $i=1$\u65f6\u7279\u5224\u8f93\u51fa$0$\u3002\u56e0\u4e3a\u961f\u5217\u4e3a\u7a7a\uff0c\u65e0\u6cd5\u8f93\u51fa\u3002\u7279\u5224\u5b8c\u4e86\u4e4b\u540e\u522b\u5fd8\u4e86\u628a\u7b2c\u4e00\u4e2a\u503c\u5165\u961f\u3002\n\n- **\u4e00\u5b9a\u8981\u4f18\u5316\u5e38\u6570\u6216\u5f00O2**\uff0c\u5426\u5219\u4f1a$\\color{purple}\\texttt{TLE}\\ 3$\u4e2a\u70b9\u3002\uff08\u8fd9\u5c31\u66b4\u9732\u5f31\u5316\u7248\u7684\u5f31\u70b9\uff09\u3002\n\n\u7ecf\u6d4b\u8bd5\uff0c\u4f18\u5316\u5e38\u6570\u6700\u6162\u7684\u70b9\u8dd1$700ms$\uff0c\u4f18\u5316\u5e38\u6570+02\u6700\u6162\u7684\u8dd1$400ms$\u3002\n\n\n\n------------\n\n\u732e\u4e0a\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <queue>\nusing namespace std;\n\n#define pii pair<int,int>\n#define val first//\u5143\u7d20\u7684\u503c\n#define pos second//\u5143\u7d20\u7684\u4f4d\u7f6e\nint n,m;\npriority_queue<pii,vector<pii>,greater<pii> > q;//\u9ed8\u8ba4\u4ee5pair\u7684first\u4f5c\u4e3a\u6392\u5e8f\u5173\u952e\u5b57\n\nvoid input(void)\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(register int i=1,a;i<=n;++i)//\u5361\u5e38\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tif(i==1)//\u7279\u5224\n\t\t{\n\t\t\tputs(\"0\");\n\t\t\tq.push(pii(a,i));//\u522b\u5fd8\u4e86\u5b58\u5165\u7b2c\u4e00\u4e2a\n\t\t\tcontinue;\n\t\t}\n\t\twhile(i>m && !q.empty() && q.top().pos<i-m)//i>m\u624d\u8fdb\u5165\uff0c\u5e76\u4e14\u4e3a\u4e86\u4fdd\u9669\uff0c\u8981\u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff0c\u63a5\u7740\u624d\u5224\u65ad\u662f\u5426\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u3002\n\t\t q.pop();\n\t\tprintf(\"%d\\n\",q.top().val);\n\t\tq.push(pii(a,i));//\u533a\u95f4\u5de6\u95ed\u53f3\u5f00\uff0c\u5219\u5148\u8f93\u51fa\u518d\u5165\u961f\n\t}\n}\n\nint main()\n{\n\tinput();\n\treturn 0;\n}\n```\n",
        "postTime": 1564278158,
        "uid": 80049,
        "name": "Hexarhy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "# \u5355\u8c03\u961f\u5217\n\n\u5f88\u660e\u663e\uff0c\u8fd9\u9053\u9898\u8ddf\u6ed1\u52a8\u7a97\u53e3\u5dee\u4e0d\u591a\uff0c\u533a\u522b\u4e3b\u8981\u5728\u4e8e\uff1a\n\n1.\u6ed1\u52a8\u7a97\u53e3\u8981\u6c42\u4e24\u4e2a\u64cd\u4f5c\uff0c\u4f46\u6b64\u9898\u53ea\u8981\u6c42\u4e00\u4e2a\uff08\u5373\u6c42\u6700\u5c0f\u503c\uff09\u3002\uff08\u8fd9\u4f7f\u9898\u76ee\u53d8\u7b80\u5355\u4e86\uff09\n\n2.\u6570\u7684\u8303\u56f4\u53d8\u4e86\u3002\n\n\uff08~~\u56e0\u4e3a\u592a\u61d2\uff0c\u4e0d\u613f\u610f\u624b\u6253~~\uff09\n\n\u6211\u4eec\u51b3\u5b9a\u4f7f\u7528STL\u7684\u4f18\u5148\u961f\u5217\u3002\n\n```\n\n#include<bits/stdc++.h>\nusing namespace std;\n```\n\n\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u80fd\u8bb0\u5f55\u4e24\u4e2a\u503c\uff08\u5373\uff1a\u4e00\u4e2a\u662f\u6570\u7ec4\u4fe1\u606f\uff0c\u4e00\u4e2a\u662f\u6570\u7ec4\u5e8f\u53f7\uff09\u7684\u4e1c\u897f\u3002\n\n\u800c\u8fd9\u4e0d\u5c31\u662fSTL\u7684pair\u5417\uff1f\n\n```\npriority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > >p;\n\n```\n\u2191\u2191\u2191\u8fd9\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u2191\u2191\u2191\n```\nint n,k;\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n```\n\u9996\u5148\uff0c\u7b2c\u4e00\u4e2a\u6570\u4e4b\u524d\u6ca1\u6709\u6570\uff0c\u8f93\u51fa0\u3002\n```\n    puts(\"0\");\n```\n\u5176\u6b21\uff0c\u6700\u540e\u4e00\u4e2a\u6570\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u5904\u7406,\uff08\u56e0\u4e3a\u53ea\u5904\u7406\u8fd9\u4e2a\u6570\u524d\u7684\u6570\uff09\u56e0\u6b64\u4e0d\u8bfb\u5165\u3002\uff08\u7136\u540emake_pair\uff09\n```\n    for(int i=0;i<n-1;i++){\n\tint a;scanf(\"%d\",&a);\n        p.push(make_pair(a,i));\n```\n\uff08\u56e0\u4e3a\u4f18\u5148\u961f\u5217\u7684\u6027\u8d28\uff0c\u4e00\u8fdb\u884cpush\u5c31\u4f1a\u81ea\u52a8\u6392\u5e8f\uff0c\u8fd9\u6b63\u597d\u6ee1\u8db3\u6211\u4eec\u7684\u8981\u6c42\uff09\n\n\u53c8\uff0c\u63a8\u51fa\u7a97\u53e3\u540e\u5c31\u5e94\u8be5\u5220\u9664\uff0c\u4e8e\u662f\uff1a```while(p.top().second<=i-k)p.pop()```\n\n\u6700\u540e\u8f93\u51fa\uff1a```printf(\"%d\\n\",p.top().first);```\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\npriority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > >p;\nint n,k;\nint main(){\n    scanf(\"%d%d\",&n,&k);\n    puts(\"0\");\n    for(int i=0;i<n-1;i++){\n        int a;scanf(\"%d\",&a);\n        p.push(make_pair(a,i));\n        while(p.top().second<=i-k)p.pop();\n        printf(\"%d\\n\",p.top().first);\n    }\n}\n```",
        "postTime": 1561685810,
        "uid": 159686,
        "name": "Loser_King",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\n>[$problem$](https://www.luogu.org/problemnew/show/P1440)\n\n>\u7ebf\u6bb5\u6811 \u6c42 $RMQ$\u95ee\u9898 $orz$ \u539f\u56e0\u662f\u56e0\u4e3a\u6211\u7684$ST$\u8868\u70b8\u4e86\n~~\uff08\u6211\u592a\u5f31\u4e86\uff09~~\n\n>$RMQ$\u95ee\u9898\u901a\u5e38\u662f\u6c42\u533a\u95f4\u6700\u503c\u3002 \u6bd4\u5982\u8bf4 :$X - Y$\u7684\u6700\u5927\u503c\uff1f\n\n>\u8fd9\u6837\u7684\u95ee\u9898\u5f80\u5f80\u65e0\u4ece\u4e0b\u624b \u6211\u4eec\u9700\u8981\u4e00\u4e2a\u89e3\u51b3$RMQ$\u95ee\u9898\u7684\u7b97\u6cd5\u3002\n\u6bd4\u5982\u8bf4\u662f:$ST$\u8868 \uff0c \u7ebf\u6bb5\u6811\u3002\n\n>\u5176\u5b9e\u8fd8\u6709\u5355\u8c03\u961f\u5217\u7684\u65b9\u6cd5\u3002 \u5176\u4ed6\u9898\u89e3\u4e5f\u8bf4\u5230\u4e86\u3002\uff08\u4ee3\u7801\u7b80\u77ed\uff09\n\n>\u53ef\u6211\u8fd8\u662f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6211\u9009\u4e86 $ST$\u8868 && \u7ebf\u6bb5\u6811\u3002\n\n>\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u6bd4\u8f83\u7b28\u5427\uff08\u5927\u96fe\n\n>\u5148\u8bb2\u8bb2$ST$\u8868\u5427 \u867d\u7136\u8bf4\u4e0d\u80fd$AC$ \u4f46\u662f\u6211\u770b\u89c1\u6709\u4eba \u7528\u8fd9\u4e2a\u65b9\u6cd5$AC$ \u4e86\n\n>$ST$\u8868\u7684\u601d\u8def\u4e3b\u8981\u662f \u9884\u5904\u7406 \u7136\u540e $O(1)$\u590d\u6742\u5ea6\u7684\u67e5\u8be2 \u9002\u5408\u8fd9\u79cd\u95ee\u9898\n\n>\u7528\u4e00\u4e2a$f[i][j]$ \u6765 \u8868\u793a $i$ ~ $ i + 2^j$\u7684\u6700\u5927\u503c \u4ece\u800c\u5230\u8fd9\u6837\n\n>\u8fd9\u6837\u5b50\u65f6\u95f4\u662f\u5b8c\u5168$ojbk$\u7684 \u4f46\u662f\u53cd\u89c2 \u5185\u5b58 $n\\ log \\ n$\u7684\u4e00\u4e2a\u5185\u5b58 $N<=200w$ \u6240\u4ee5\u663e\u7136\u4e0d\u884c\n(\u5982\u679c\u6709\u54ea\u4f4d\u795e\u4ed9\u7528$ST$\u8868AC\u4e86\u9ebb\u70e6\u70b9\u8bc4\u6d4b\u8bb0\u5f55\u544a\u8bc9\u6211\u5982\u4f55\u4e0d$MLE$)\n\n>\u8bc4\u6d4b\u8bb0\u5f55:[$Here$](https://www.luogu.org/recordnew/show/18138448)\n\n\n>\u6240\u4ee5\u53bb\u60f3\u7ebf\u6bb5\u6811 \u7ebf\u6bb5\u6811\u7684\u67e5\u8be2\u5927\u6982\u662f$log\\ n$ \n\n>$n \\ log \\ n$ \u4e5f\u52c9\u5f3a\u8fc7\u5f97\u53bb\u5427\u3002\n~~\u4f46\u662f\u8c8c\u4f3c\u6ca1\u6709\u5355\u8c03\u961f\u5217\u5feb\uff08\u8fd8\u4e0d\u662f\u6211\u5f31\uff09~~\n\n\n> \u56de\u5f52\u6b63\u9898 \u7ebf\u6bb5\u6811 (\u5206\u6cbb\u7684\u65b9\u6cd5\n\n>\u9996\u5148\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u6570\u7ec4  \u4ee5\u53ca \u5efa\u6811\n\n```cpp\nconst int N = 2e6 + 10 ;\nstruct node {\n    int l , r , w ;\n#define lt k << 1\n#define rt k << 1 | 1\n}tree[N << 2] ;\n```\n\n>\u4e0d\u8981\u95ee\u6211\u4e3a\u5565$<<2$ ~~\u56e0\u4e3a\u6211\u4e5f\u4e0d\u77e5\u9053~~ \u7ebf\u6bb5\u6811\u7684\u6570\u7ec4\u5927\u5c0f\u901a\u5e38\u662f$N$\u7684$4$\u500d\n\n```cpp\ninline void build(int k,int l,int r) {\n    if(l > r) return ;\n    if(l == r) {\n        tree[k].l = l , tree[k].r = r , tree[k].w = a[l] ;\n        return ;\n    }\n    int mid = (l + r) >> 1 ;//\u5206\u6cbbHere\n    build(lt , l , mid) ;\n    build(rt , mid + 1 , r) ;\n    tree[k].l = l , tree[k].r = r ;\n    tree[k].w = min(tree[lt].w , tree[rt].w) ;\n}\n```\n>\u5efa\u5b8c\u6811\u4e4b\u540e\u6211\u4eec\u9700\u8981\u505a\u4e00\u4e2a\u64cd\u4f5c : $query$\uff08\u5f53\u7136\u53ea\u662f\u51fd\u6570\u540d\u6211\u4e2a\u4eba\u559c\u6b22\u8fd9\u79cd\u51fd\u6570\u540d\uff09\n\n\n```cpp\ninline int query(int k,int l,int r,int x,int y) {\n    if(l > r) return 0 ;\n    if(l >= x and r <= y) return tree[k].w ;\n    int mid = (l + r) >> 1 ;\n    int sum = inf ;\n    if(x <= mid) sum = min(sum , query(lt , l , mid , x , y)) ;//\u5206\u6cbb\n    if(y > mid) sum = min(sum , query(rt , mid + 1 , r , x , y)) ;\n    return sum ;\n}\n```\n\n>\u6240\u4ee5\u6613\u8bc1\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log\\ n) $ \n\n>\u7a7a\u95f4\u590d\u6742\u5ea6 $O(N*4)$\n\n>\u81f3\u4e8e\u5b8c\u6574\u4ee3\u7801 [$Here$](https://www.cnblogs.com/qf-breeze/p/10738659.html)\n",
        "postTime": 1555679200,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u521a\u5b66\u7ebf\u6bb5\u6811\uff0c\u53d1\u7247\u9898\u89e3\u5de9\u56fa\u4e00\u4e0b\n```\n#pragma GCC optimize(3)\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=2000001;\nint n,a[maxn],m;\nstruct node {\n    int minn,lazy;//minn \u7ef4\u62a4\u7684\u6700\u5c0f\u503c\uff0clazy \u61d2\u60f0\u6807\u8bb0\n} t[maxn<<2];\nint read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9')\n    {\n        if(ch=='-')\n        f=-1;\n        ch=getchar();\n    }\n    while(ch<='9'&&ch>='0')\n    {\n        x=x*10+ch-48;\n        ch=getchar();\n    }\n    return x*f;\n}\ninline int lc(int p) {//\u5de6\u5b69\u5b50 l=2*p;\n    return p<<1;\n}\ninline int rc(int p) {//\u53f3\u5b69\u5b50 l=2*p+1;\n    return p<<1|1;\n}\ninline void push_up(int p) {\n    t[p].minn=min(t[lc(p)].minn,t[rc(p)].minn);//\u7ef4\u62a4\u7236\u4eb2\u8282\u70b9\n}\ninline void build(int p,int l,int r) {//\u5efa\u6811\n    t[p].lazy=0;\n    if(l==r) {// \u5de6\u5b69\u5b50\u548c\u53f3\u5b69\u5b50\u76f8\u7b49\uff0c\u5230\u8fbe\u6700\u4f4e\u7aef\uff0c\u533a\u95f4\u6700\u5c0f\u503c\u5c31\u662fa[l]\n        t[p].minn=a[l];\n        return ;\n    }\n    int mid=(l+r)>>1;\n    build(lc(p),l,mid);//\u5de6\u5b69\u5b50\n    build(rc(p),mid+1,r);//\u53f3\u5b69\u5b50\n    push_up(p);//\u5411\u4e0a\u7ef4\u62a4\u7236\u4eb2\u8282\u70b9\n}\ninline void mark(int p,int k) {//\u8bb0\u5f55\u5f53\u524d\u8282\u70b9\u6240\u4ee3\u8868\u7684\u533a\u95f4\n    t[p].lazy+=k;\n    t[p].minn+=k;\n}\ninline void push_down(int p) {//\u61d2\u60f0\u6807\u8bb0\u4e0b\u653e\n    mark(lc(p),t[p].lazy);\n    mark(rc(p),t[p].lazy);\n    t[p].lazy=0;\n}\ninline void update(int x,int y,int l,int r,int p) {//\u533a\u95f4\u4fee\u6539\n    if(x<=l&&r<=y) {\n        mark(p,t[p].lazy);\n    }\n    push_down(p);\n    int mid=(l+r)>>1;\n    if(x<=mid) update(x,y,l,mid,p);\n    if(y>mid) update(x,y,mid+1,r,p);\n\tpush_up(p);\n}\ninline int query(int x,int y,int l,int r,int p) {//\u533a\u95f4\u67e5\u8be2\n    if(x<=l&&y>=r) {\n        return t[p].minn;\n    }\n    push_down(p);\n    int mid=(l+r)>>1;\n    if(y<=mid) return query(x,y,l,mid,lc(p));\n    else if(x>mid) return query(x,y,mid+1,r,rc(p));\n    else return min(query(x,y,l,mid,lc(p)),query(x,y,mid+1,r,rc(p)));\n}\nint main() {\n    scanf(\"%d%d\",&n,&m);\n    for(register int i=1; i<=n; i++)\n        scanf(\"%d\",&a[i]);\n    build(1,1,n);\n    printf(\"0\\n\");//\u7b2c\u4e00\u4e2a\u70b9\u8f93\u51fa0\n    for(register int i=2; i<=n; i++) {\n         printf(\"%d\\n\",query(i-m>0?i-m:1,i-1,1,n,1));//\u5de6\u533a\u95f4\u5206\u4e24\u79cd\u60c5\u51b5,i-m<0 \u5de6\u533a\u95f4\u4e3a1 i-m>0 \u5de6\u533a\u95f4\u4e3ai-m\n    }\n    return 0;\n}\n```\n\u5e0c\u671b\u5bf9\u5404\u4f4d\u65b0\u5b66\u7ebf\u6bb5\u6811\u7684\u840c\u65b0\u6709\u5e2e\u52a9",
        "postTime": 1547096132,
        "uid": 113773,
        "name": "\u516c\u4e3b\u6bbf\u4e0bMIKU",
        "ccfLevel": 0,
        "title": "\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c"
    },
    {
        "content": "\u6211\u7684\u60f3\u6cd5\u5341\u5206\u7b80\u5355\uff0c\u5148\u8ba9\u6570\u7ec4\u6700\u5927\uff0c\u4f7f\u5f97\u66f4\u65b0\u6700\u5c0f\u503c\u65b9\u4fbf\uff0c\u7136\u540e\u6bcf\u6b21\u8f93\u5165\u6570\u5b57\u65f6\u66f4\u65b0\u6700\u5c0f\u503c\u53ca\u6700\u5c0f\u503c\u6240\u5728\u5750\u6807\uff0c\u5e76\u6bcf\u6b21\u8f93\u51fa\uff08i-m\uff09~m\u4f4d\u7f6e\u7684\u6700\u5c0f\u503c\uff0c\u82e5\u8d8a\u754c\uff08\u6700\u5c0f\u503c\u5750\u6807\u4e0d\u5728i-m\u81f3m\u4e4b\u95f4\uff09\uff0c\u5219\u4ecei-m\u5904\u8fdb\u884c\u5224\u65ad\uff0c\u8fd9\u662f\u4e2a\u5f88\u6709\u8da3\u7684DP\uff0c\u4f46\u662f\u8981\u5bf91\u53f7\u4f4d\u8fdb\u884c\u7279\u6b8a\u5904\u7406\uff0c\u4ece2\u53f7\u5f00\u59cb\u8d70\u5faa\u73af\u3002\n\n\u60f3\u6cd5\u5f88\u7b80\u5355\uff0c\u671b\u5404\u4f4d\u5927\u4f6c\u53ef\u4ee5\u63d0\u51fa\u610f\u89c1\uff01QWQ\n\n```cpp\n#include <bits/stdc++.h>\nconst int maxn=2000010;\nint n,m;\nint a[maxn];\ninline int read(){//\u5feb\u8bfb\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<='0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nint main (){\n\tmemset(a,0x3f3f3f3f,sizeof(a));\n\tn=read();m=read();\n\tfor (int i=1;i<=n;i++)\n\ta[i]=read();\n\tint minx=a[1];\n\tint minplace=1;\n\tprintf(\"0\\n\");//\u7531\u4e8e0\u53f7\u4f4d\u7f6e\u524d\u6ca1\u6709\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u6309\u7167\u6837\u4f8b\u8f93\u51fa0\n\tfor (int i=2;i<=n;i++)\n\t{\n\t\tif (a[i-1]<=minx)//\u82e5\u6700\u5c0f\u503c\u5927\u4e8e\u5f53\u524d\u503c\uff0c\u5219\u66f4\u65b0\u6700\u5c0f\u503c\u53ca\u6700\u5c0f\u503c\u5750\u6807\n\t\tminplace=i-1,minx=a[i-1];\n\t\t\n\t\tif (minplace<i-m)//\u8d8a\u754c\u5224\u65ad\uff0c\u4ece\u8d8a\u754c\u5904\u8fdb\u884c\u91cd\u65b0\u5faa\u73af\n\t\t{\n\t\tminx=a[i-m];\n\t\tminplace=i-m;\n\t\t\n\t\tfor (int j=i-m+1;j<=i-1;j++)\n\t\t\tif(a[j]<=minx)\n\t\t\tminx=a[j],minplace=j;\n\t\t}\n\t\t\n\t\tprintf(\"%d\\n\",minx);\n\t}\n}\n```",
        "postTime": 1538628699,
        "uid": 89545,
        "name": "world_romantic_xebec",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011DP"
    },
    {
        "content": "# \u8fd9\u9898\u53ef\u4ee5\u7528RMQ\uff08ST\u8868\uff09\u505a\uff01\n\n\u7531\u4e8e\u672c\u9898\u6570\u636e\u7684\u7279\u6b8a\u6027\uff0c\u9700\u8981\u67e5\u627e\u7684\u533a\u95f4\u7684\u5143\u7d20\u4e2a\u6570\u5927\u90e8\u5206\u662f\u4e00\u6837\u7684\uff08\u9664\u4e86\u8f93\u51fa\u7684\u524d$m$\u884c\u5143\u7d20\u4e2a\u6570\u4e0d\u8db3$m$\u4e2a\u7684\u60c5\u51b5\uff09\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628aST\u8868\uff08\u4ee3\u7801\u4e2d$a$\u6570\u7ec4\uff09\u8fdb\u884c**\u964d\u7ef4**\u653b\u51fb\uff08\u96fe\uff09\uff01\u8fd9\u6837\u4e00\u6765\u4f7f\u7528RMQ\uff08ST\u8868\uff09\u5c31\u4e0d\u4f1aMLE\u4e86\uff01\n\n\u5728\u65f6\u95f4\u65b9\u9762\uff0c\u6211\u4eec\u53ef\u4ee5\u62ff\u4e2a\u53d8\u91cf\uff08\u4ee3\u7801\u4e2d$power$\uff09\u5b58\u50a8$2$\u7684$j$\u6b21\u65b9\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u6bcf\u4e00\u6b65\u90fd\u8fdb\u884c\u4f4d\u8fd0\u7b97\u4e86\uff0c\u8fd9\u6837\u505a\u7adf\u628a\u8d85\u65f6\u7684\u4e00\u4e2a\u70b9\u5361\u8fc7\u53bb\u4e86\u2026\u2026\n\n\u65f6\u7a7a\u95ee\u9898\u90fd\u89e3\u51b3\u4e86\uff0c\u63a5\u4e0b\u6765\u53ea\u8981\u548c\u4e00\u822c\u7684RMQ\uff08ST\u8868\uff09\u8fdb\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n---\n\n**\u4f46\u6211\u4eec\u4f3c\u4e4e\u5ffd\u7565\u4e86\u4e00\u4e2a\u95ee\u9898\u2026\u2026**\n\n\u5c31\u662f\u8f93\u51fa\u7684\u524d$m$\u884c\u5143\u7d20\u4e2a\u6570\u4e0d\u8db3$m$\u4e2a\u65f6\uff0c\u6211\u4eec\u8981\u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u627e\uff0c\u5143\u7d20\u4e2a\u6570\u80af\u5b9a\u4e0d\u5230$m$\u4e2a\u3002\u4f46\u6700\u540e\u56e0\u964d\u8fc7\u7ef4\uff0c\u6211\u4eec\u53ea\u80fd\u8f93\u51fa\u5143\u7d20\u4e2a\u6570\u4e3a$m$\u7684\u533a\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u8fd9\u4e0b\u5e94\u8be5\u600e\u4e48\u529e\u5462\uff1f\n\n\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u533a\u95f4\u5143\u7d20\u4e2a\u6570\u5c0f\u4e8e$m$\u65f6\u662f\u5728\u500d\u589e\u9884\u5904\u7406\u7684\u65f6\u5019\uff0c\u8fd9\u65f6\u7684ST\u8868\u8fd8\u672a\u5b9a\u578b\uff0c\u5728\u4e2d\u9014\u8fc7\u7a0b\u4e2d\u4f1a\u51fa\u73b0\u6211\u4eec\u9700\u8981\u7684\u7b54\u6848\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u7684\u7b54\u6848\u8981\u5728\u6211\u4eec\u500d\u589e\u7684\u8fc7\u7a0b\u4e2d\u8f93\u51fa\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u500d\u589e\u8fc7\u7a0b\u4e2d\u7684\u6bcf\u4e00\u5c42\u8981\u8f93\u51fa\u7684\u7b54\u6848\u4e2a\u6570\u662f\u4e0d\u540c\u7684\uff1a\n\n1. \u7b2c\u4e00\u4e2a\u8f93\u51fa\u80af\u5b9a\u4e3a$0$\uff0c\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u6570\u524d\u662f\u6ca1\u6709\u6570\u7684\uff1b\n\n2. \u5982\u679c$m>1$\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u8f93\u51fa\u80af\u5b9a\u662f\u7b2c\u4e00\u4e2a\u6570\uff0c\u56e0\u4e3a\u7b2c\u4e8c\u4e2a\u6570\u524d\u9762\u53ea\u6709\u4e00\u4e2a\u6570\uff1b\n\n3. \u6211\u4eec\u624b\u63a8\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u5efaST\u8868\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7f16\u53f7\u5c0f\u4e8e\u7b49\u4e8e$2 \\times power$\u7684\u7b54\u6848\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\uff08\u5f53\u7136\u4ec5\u9650\u4e8e\u7f16\u53f7\u5c0f\u4e8e$m$\u7684\u6570\uff0c\u5373\u5143\u7d20\u4e2a\u6570\u4e0d\u8db3$m$\u4e2a\uff09\uff1b\n\n4. \u5269\u4e0b\u7684\u6570\u5c31\u76f4\u63a5\u5728ST\u8868\u5efa\u597d\u540e\u6309\u6b63\u5e38RMQ\u65b9\u6cd5\u8f93\u51fa\u6700\u5c0f\u503c\u5c31\u53ef\u4ee5\u5566~\n\n---\n\npascal\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\nuses math;//log2\u8981\u7528math\u5e93qwq\nvar n,m,i,j,k,l,power:longint;\na:array[0..2000000]of longint;\nbegin\n  readln(n,m);\n  for i:=1 to n do\n  read(a[i]);\n  writeln(0);//\u60c5\u51b51\n  if m>1 then//\u60c5\u51b52\n  writeln(a[1]);\n  k:=trunc(log2(m));\n  l:=2;//l\u4e3a\u5f53\u524d\u5e94\u8f93\u51fa\u7b2cl\u4e2a\u7b54\u6848\n  power:=1;\n  for j:=1 to k do//\u5efaST\u8868\n  begin\n    power:=power*2;\n    for i:=1 to n-power+1 do\n    a[i]:=min(a[i],a[i+power div 2]);\n    while (l<=power*2)and(l<m) do//\u60c5\u51b53\n    begin\n      writeln(min(a[1],a[l-power+1]));\n      inc(l);\n    end;\n  end;\n  for i:=1 to n-m do//\u60c5\u51b54\n  writeln(min(a[i],a[i+m-power]),' ');\nend.\n```",
        "postTime": 1517983244,
        "uid": 7535,
        "name": "beng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "#\u8bbaRMQ\n\n\u63a8\u83502\u7bc7\u8d85\u597d\u7684\u6587\u7ae0\u7ed9\u5927\u5bb6!\n\n1.http://blog.csdn.net/qq\\_39809664/article/details/78300994\n\n2.http://blog.csdn.net/qq\\_39809664/article/details/78362534\n\n**\u8fd9\u91cc\u5176\u5b9e\u4e0d\u9700\u8981\u6253ST \u8868,\u53ea\u662f\u9700\u8981\u6bcf\u4e00\u6b21\u6c42\u4e00\u4e2a\u6ed1\u52a8\u7a97\u53e3\u7684\u6700\u503c\u5c31\u597d\u4e86!**\n\n##RMQ\n\u8868\u793a\u8fd9\u4e2a\u5c31\u662f\u4e00\u4e2a\u500d\u589e\u7c7bDP\u7684\u4f5c\u6cd5,\u6bd4\u5982dp[i][j] \u8868\u793a \u4ece i \u5f00\u59cb \u5411\u540e\u8fb9 \u62d3\u5c55 2^j \u6b21\u7684\u7ed3\u679c ,\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u503c\u7684\u8bb0\u5f55,\u7528\u4e00\u4e2a pair \u7c7b\u578b\u6765\u8bb0\u5f55 \u503c \u548c \u4f4d\u7f6e!\n\n![RMQ\u56fe\u7247](http://blog.csdn.net/qq\\_39809664/article/details/78300994#no3-rmq\u7684\u60f3\u6cd5)\n\n\u4e8e\u662f\u4ee3\u7801:\n\n\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nenum number { N=30005,INF=0x3f3f3f3f};\nint n,T,a[N],len[N];\nint ans=-INF;\nstruct f\n{\n    int val,loc;\n} come[N][50],back[N][50];\nvoid init()\n{\n    for(int i=1; i<=n; i++) come[i][0].val=a[i],come[i][0].loc=i;\n    for(int j=1; (1<<j) <=n; j++)\n        for(int i=1; i+(1<<j)-1<=n; i++)\n        {\n            int dis=i+(1<<(j-1));\n            come[i][j].val=min( come [i] [j-1].val , come [dis] [j-1] .val);\n            if(come[i][j-1].val < come[dis][j-1].val) come[i][j].loc=come[i][j-1].loc;\n            else come[i][j].loc = come[dis][j-1].loc;\n        }\n}\nf solve(int l,int r)\n{\n    int le=len[r-l+1];\n    if(come[l][le].val < come[r-(1<<le)+1] [le].val ) return come[l][le];\n    else return come[r-(1<<le)+1][le];\n}\nvoid Find(int left,int right)\n{\n    if(left>right) return;\n    f now=solve(left,right);\n    ans=max(ans, now.val*(right-left+1));\n    Find(left,now.loc-1);\n    Find(now.loc+1,right);\n}\nint main()\n{\n    int l=0;\n    for(int i=1; i<=N; i++)\n    {\n        if((1<<(l+1))<=i) l++;\n        len[i]=l;\n    }\n    scanf(\"%d\",&T);\n    for(int loc=1; loc<=T; loc++)\n    {\n        memset(come,INF,sizeof(come));\n        ans=-INF;\n        scanf(\"%d\",&n);\n        for(int i=1; i<=n; i++)\n            scanf(\"%d\",&a[i]);\n        init();\n        Find(1,n);\n        printf(\"Case %d: %d\\n\",loc,ans);\n    }\n    return 0;\n}\n```\n#\u5355\u8c03\u961f\u5217:\n\u4ee3\u7801:\n\n        \n```cpp\n#pragma GCC optimize(2)\n#include <bits/stdc++.h>\n#define N 2005000\nusing namespace std;\nstruct node\n{\n    int data,id;\n//    node(int data,int id): data(data),id(id){ }\n} change;\nnode que[N];\nint head,tail;\nint n,k,a[N];\nint main()\n{\n    //freopen(\"cha.txt\",\"r\",stdin);\n    scanf(\"%d%d\",&n,&k);\n    for(int i=1; i<=n; i++)\n        scanf(\"%d\",&a[i]);\n    puts(\"0\");\n    change.data=a[1],change.id=1;\n    que[tail++]=change;\n    for(int i=2; i<=n; i++)\n    {\n        if(que[head].id<i-k) head++;\n        printf(\"%d\\n\",que[head].data);\n        while(head<tail&&a[i]<=que[tail-1].data) tail--;\n        change.id=i,change.data=a[i];\n        que[tail++]=change;\n    }\n    return 0;\n}\n```\n\u5176\u5b9e\u6ca1\u6709\u591a\u5c11\u7684\u96be,\u5c31\u662f\u8bb0\u4f4f\u65b0\u6765\u7684\u70b9,\u65f6\u6700\u4f18\u7684\n\u56e0\u4e3a\u4ed6\u4eec\u7684\u4e0b\u6807\u9760\u540e,\u800c\u4e14\u503c\u4e5f\u4f1a\u76f8\u5bf9\u5c0f,\u6240\u4ee5\u5c31\u4f1a\u6709deque\u8fd9\u79cd\u4e1c\u897f\u4e86!\n\n\u5e0c\u671b\u4f60\u4eec\u559c\u6b22!\n",
        "postTime": 1509088060,
        "uid": 50047,
        "name": "Bartholomew",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\uff08\u4f2a\uff09\u5355\u8c03\u961f\u5217\uff08\u5176\u5b9e\u6211\u81ea\u5df1\u90fd\u4e0d\u77e5\u9053\u662f\u600e\u4e48\u8fc7\u7684\u2026\u2026\uff09\n\n\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u5f53\u53d6\u4e00\u6bb5\u65b0\u7684\u533a\u95f4\u65f6\uff0c\u53ea\u8981\u4fdd\u8bc1\u5355\u8c03\u961f\u5217\u6700\u524d\u9762\u7684\u5143\u7d20\uff0c\u4e00\u5b9a\u662f\u5f53\u524d\u533a\u95f4\u7684\u6700\u5c0f\u503c\u3002\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<queue>\nusing namespace std;\ninline int getint()\n{\n    int s=0,w=1;\n    char ch=getchar();\n    while (ch!='-'&&(ch<'0'||ch>'9'))ch=getchar();\n    if (ch=='-')w=-w,ch=getchar();\n    while (ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return s*w;\n}\nint n,k,c[2000005],lenx,lenn,temp,headn,mins[2000005],pt;\nqueue <int> a;\n//\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u51fd\u6570\nvoid mmin(int x)\n{\n    if (lenn==0)c[++lenn]=x,headn=1;\n    else\n    {\n        while (lenn>=headn&&c[lenn]>x)--lenn;\n        c[++lenn]=x;\n    }\n}\n//i\u5c0f\u4e8em\u65f6\nvoid preq()\n{\n    for (int i=1;i<=k;i++)\n    {\n        temp=getint();\n        a.push(temp);\n        mmin(temp);\n        mins[++pt]=c[headn];\n    }\n}\n//\u5927\u4e8em\nvoid q()\n{\n    for (int i=k+1;i<=n;i++)\n    {\n        temp=a.front();\n        a.pop();\n        if (c[headn]==temp)headn++;\n        temp=getint();\n        a.push(temp);\n        mmin(temp);\n        mins[++pt]=c[headn];\n    }\n}\n\nint main()\n{\n    n=getint();\n    k=getint();\n    preq();\n    q();\n    for (int i=0;i<pt;i++)\n    printf(\"%d \",mins[i]);\n}\n```",
        "postTime": 1500687456,
        "uid": 33930,
        "name": "vani_prcups",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u65e0\u804a\u7528\u4e86\u4e24\u79cd\u65b9\u6cd5\u5199\u8fd9\u9053\u9898\uff1a\u4e00\u662f\u7ebf\u6bb5\u6811\uff0c\u4e8c\u662f\u5355\u8c03\u961f\u5217\uff08\u624b\u5199\uff09\n\n\u7ebf\u6bb5\u6811\u7684\u8bdd\u5f88\u597d\u5199\uff0c\u8bb0\u5f97\u628a\u6570\u7ec4\u5f00\u5927\u70b9\u5c31\u597d\uff08\u4e5f\u4e0d\u4f1a\u7206\u7a7a\u95f4\uff09\n\n\u7ebf\u6bb5\u6811C++\u4ee3\u7801\u5982\u4e0b\uff1a\n\n/*************************************************************************\n\n    > Author: wzw-cnyali\n    > Created Time: 2017/3/2 18:27:58\n************************************************************************/\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define REP(i, a, b) for(register int i = (a), i##_end_ = (b); i <= i##_end_; ++ i)\n#define DREP(i, a, b) for(register int i = (a), i##_end_ = (b); i >= i##_end_; -- i)\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define mem(a, b) memset((a), b, sizeof(a))\ntemplate<typename T> inline bool chkmin(T &a, const T &b) { return a > b ? a = b, 1 : 0; }\ntemplate<typename T> inline bool chkmax(T &a, const T &b) { return a < b ? a = b, 1 : 0; }\ntypedef long long LL;\nconst int Size = 2000010;\nconst int inf = 0x3f3f3f3f;\nint read()\n{\n    int sum = 0, fg = 1; char c = getchar();\n    while(c < '0' || c > '9') { if (c == '-') fg = -1; c = getchar(); }\n    while(c >= '0' && c <= '9') { sum = sum * 10 + c - '0'; c = getchar(); }\n    return sum * fg;\n}\nint a[Size];\nstruct segment_tree{\n    int tree[Size << 2];\n    void build_tree(int h, int l, int r)\n    {\n        if(l == r)\n        {\n            tree[h] = a[l];\n            return;\n        }\n        int mid = l + r >> 1;\n        build_tree(h << 1, l, mid);\n        build_tree(h << 1 | 1, mid + 1, r);\n        tree[h] = min(tree[h << 1], tree[h << 1 | 1]);\n    }\n    int query(int h, int l, int r, int x, int y)\n    {\n        if(l == x && r == y)\n        {\n            return tree[h];\n        }\n        int mid = l + r >> 1;\n        if(y <= mid) return query(h << 1, l, mid, x, y);\n        else if(x > mid) return query(h << 1 | 1, mid + 1, r, x, y);\n        else return min(query(h << 1, l, mid, x, mid), query(h << 1 | 1, mid + 1, r, mid + 1, y));\n    }\n}tree;\nint main()\n{\n    int n = read(), m = read();\n    REP(i, 1, n)\n    {\n        a[i] = read();\n    }\n    tree.build_tree(1, 1, n);\n    REP(i, 1, n)\n    {\n        if(i == 1)\n        {\n            printf(\"0\\n\");\n            continue;\n        }\n        else printf(\"%d\\n\", tree.query(1, 1, n, i - m > 0 ? i - m : 1, i - 1));\n    }\n    return 0;\n}\n```\n\u63a5\u4e0b\u6765\u662f\u5355\u8c03\u961f\u5217C++\u4ee3\u7801\uff1a\n/*************************************************************************\n\n    > Author: wzw-cnyali\n    > Created Time: 2017/3/2 20:51:56\n************************************************************************/\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define REP(i, a, b) for(register int i = (a), i##_end_ = (b); i <= i##_end_; ++ i)\n#define DREP(i, a, b) for(register int i = (a), i##_end_ = (b); i >= i##_end_; -- i)\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define mem(a, b) memset((a), b, sizeof(a))\ntemplate<typename T> inline bool chkmin(T &a, const T &b) { return a > b ? a = b, 1 : 0; }\ntemplate<typename T> inline bool chkmax(T &a, const T &b) { return a < b ? a = b, 1 : 0; }\ntypedef long long LL;\nconst int Size = 4000000;\nconst int inf = 0x3f3f3f3f;\nint read()\n{\n    int sum = 0, fg = 1; char c = getchar();\n    while(c < '0' || c > '9') { if (c == '-') fg = -1; c = getchar(); }\n    while(c >= '0' && c <= '9') { sum = sum * 10 + c - '0'; c = getchar(); }\n    return sum * fg;\n}\nint a[Size];\nstruct T{\n    int val, pos;\n};\nstruct node{\n    int l, r;\n    T stack[Size];\n    void clear()\n    {\n        l = 1; r = 0;\n    }\n    void putin(T A)\n    {\n        while(r >= l && stack[r].val > A.val) r--;\n        stack[++r] = A;\n    }\n    void pop(int pos)\n    {\n        while(r >= l && stack[l].pos < pos) l++;\n    }\n    int top()\n    {\n        return stack[l].val;\n    }\n}ddd;\nint main()\n{\n    int n = read(), m = read();\n    REP(i, 1, n)\n    {\n        a[i] = read();\n    }\n    ddd.clear();\n    puts(\"0\");\n    ddd.putin((T){a[1], 1});\n    REP(i, 2, n)\n    {\n        if(i - m >= 0) ddd.pop(i - m);\n        printf(\"%d\\n\", ddd.top());\n        ddd.putin((T){a[i], i});\n    }\n    return 0;\n}\n\n```",
        "postTime": 1488462349,
        "uid": 19623,
        "name": "Jason_Yvan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u5927\u5bb6\u90fd\u7528\u5355\u8c03\u961f\u5217\uff0c\u6765\u4e00\u53d1\u7ebf\u6bb5\u6811\u7684\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\uff08C++\uff0c\u6bd5\u7adf\u697c\u4e0b\u6709P\u515a\u4e86\uff09\n\n\u3010\u9644\u52a0\u5feb\u901f\u8bfb\u5165+\u5feb\u901f\u8f93\u51fa\u3011\uff0c\u4e0d\u77e5\u6709\u6ca1\u6709\u4eba\u53ef\u7528\u500d\u589e\u7684\u601d\u60f3\u6765\u505aRMQ\u3002\u3002\u3002\n\n\u826f\u5fc3\u63d0\u793a\uff1afreopen\u61d2\u5f97\u5220\u4e86\n\n\n\n\n\n\n\n    \n        \n\n        \n    \n    \n        \n\n\n    \n    \n        \n        \n        \n        \n\n    \n    \n    \n    \n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int S=1,U=23,N=2000005,M=5000055;\nstruct Node\n{\n    int v,i,j;\n    int left,right;\n}Tree[M];\nint n,m,s[N];\ninline void Read(int &x)\n{\n    x=0;\n    int flag=1;\n    char c='\\0';\n    for(;c<'0'||c>'9';c=getchar())if(c=='-')flag=-1;\n    for(;c>='0'&&c<='9';c=getchar())x=x*10+c-'0';\n    x*=flag;\n}\ninline void Writeln(int x)\n{\n    if(x==0)putchar('0');\n    int ts=0,Out[U]={0};\n    while(x){\n        Out[++ts]=x%10;\n        x/=10;\n    }\n    while(ts>0)putchar(Out[ts--]+'0');\n    putchar('\\n');\n}\nint Count(int now,int a,int b);\nvoid BuildTree(int now,int a,int b);\nint main(void)\n{\n    freopen(\"P1440.in\",\"r\",stdin);\n    freopen(\"P1440.out\",\"w\",stdout);\n    Read(n);\n    Read(m);\n    for(int i=1;i<=n;++i)\n        Read(s[i]);\n    BuildTree(S,1,n);\n    printf(\"0\\n\");\n    for(int i=2;i<=n;++i)\n        Writeln(Count(S,max(1,i-m),i-1));\n    return 0;\n}\nvoid BuildTree(int now,int a,int b)\n{\n    Tree[now].i=a;\n    Tree[now].j=b;\n    if(a==b){\n        Tree[now].v=s[a];\n        return;\n    }\n    int mid=(a+b)/2;\n    BuildTree(2*now,a,mid);\n    BuildTree(2*now+1,mid+1,b);\n    Tree[now].v=min(Tree[2*now].v,Tree[2*now+1].v);\n}\nint Count(int now,int a,int b)\n{\n    if(b<Tree[now].i||a>Tree[now].j)return 0x7fffffff;//\u66fe\u56e0\u5e74\u5c11\u8f7b\u72c2return 2333333\u7ed3\u679c80\uff0c\u8d8a\u5927\u8d8a\u597d\n```\n/\\*return the biggist!!\\*/\n        \n    \n```cpp\n    if(a<=Tree[now].i&&b>=Tree[now].j)\n        return Tree[now].v;\n    return min(Count(2*now,a,b),Count(2*now+1,a,b));\n}\n\n```",
        "postTime": 1485010663,
        "uid": 15302,
        "name": "PolyLoger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    },
    {
        "content": "\u81ea\u5b66\u7684\u5355\u8c03\u961f\u5217\uff0c\u7b2c\u4e00\u6b21\u5199\u5bf9\uff0c\u5728\u8fd9\u91cc\u9996\u5148\u611f\u8c22\u7f51\u4e0a\u7684\u5404\u4f4d\u5927\u795e\u53d1\u7684\u5e16\u5b50\u3002\u5e0c\u671b\u81ea\u5df1\u53d1\u7684\u9898\u89e3\u4e5f\u80fd\u5e2e\u5230\u522b\u4eba\n\n\u89e3\u9898\u601d\u8def\uff1a\n\n\u5229\u7528\u9012\u589e\u7684\u961f\u5217\uff0c\u961f\u9996\u8bb0\u5f55\u6700\u5c0f\u503c\uff0c\u6bcf\u6b21\u8f93\u51fa \u961f\u9996\n\n\u4ece\u524d\u5411\u540e\u641c,\u5982\u679c\u53d1\u73b0\u8fd9\u4e2a\u6570\u6bd4\u524d\u9762\uff0c\u5355\u8c03\u961f\u5217\u7684\u961f\u5c3e\u5c0f\uff0c\u90a3\u4e48\u5220\u53bb\u961f\u5c3e(dec(tail))\uff0c\u4e00\u76f4\u5220\u5230\u961f\u5217\u4e2d\u7684\u6570\u5c0f\u4e8e\u6216\u8005\u961f\u5217\u4e2d\u6ca1\u6709\u6570\uff0c\u518d\u628a\u5b83\u653e\u5165\u961f\u4e2d\uff0c\n\n\u539f\u56e0\uff1a\u5982\u679c\u8fd9\u4e2a\u6570a\u6bd4\u524d\u8fb9\u7684\u6570b\u5c0f\uff0c\u90a3\u4e48\u5bf9\u4e8e\u540e\u8fb9\u7684\u6570\u6765\u8bf4\uff0c\u5b83\u7684\u524dm\u4e2a\u6570\u4e2d\u7684\u6700\u5c0f\u503c\u4e00\u5b9a\u4e0d\u662fb,\u6240\u4ee5b\u76f4\u63a5\u5220\u53bb\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u7528\u5355\u8c03\u961f\u5217\uff1a\u9632\u6b62\u91cd\u590d\u8ba1\u7b97\uff0c\u4fdd\u7559\u4e4b\u524d\u6bd4\u8f83\u7684\u7ed3\u679c\uff0c\u800c\u4e14\u53ea\u4fdd\u7559\u8fd8\u4f1a\u7528\u5230\u7684\u6570\u636e,\u7701\u65f6\u95f4\uff0c\n\n\u8fd8\u6709\u4e00\u70b9\u8981\u6ce8\u610f\uff0c\u5982\u679c\u961f\u9996\u7684\u6570\u5df2\u7ecf\u8d85\u51fa\u4e86i\u524dm\u4e2a\u6570\u7684\u8303\u56f4\uff0c\u90a3\u4e48\u5220\u53bb\u961f\u9996\uff0c\u5373inc(head),\n\n    \n    \n```cpp\nvar n,h1,t1,m,i,j:longint; \nh,a:array[0..2000000]of longint; //h\u6570\u7ec4\u8bb0\u5f55\u5355\u8c03\u961f\u5217\u4e2d\u6570\u7684\u4e0b\u6807\uff1ba \u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u6570\u7684\u5927\u5c0f\nbegin \nreadln(n,m);\nfor i:=1 to n do read(a[i]);\nwriteln('0');  //\u6839\u636e\u9898\u610f\u5f97\uff0c\u7b2c\u4e00\u4e2a\u6570\u4e4b\u524d\u6ca1\u6709\u6570\uff0c\u5148\u8f93\u51fa\u20180\u2019\nh[1]:=1;h1:=1;t1:=1;//\u5148\u628a\u7b2c\u4e00\u4e2a\u6570\u653e\u5230\u961f\u91cc\nfor i:=2 to n do //\u4ece2\u5f00\u59cb\nbegin \n    writeln(a[h[h1]]);//\u6bcf\u6b21\u8f93\u51fa\u6240\u6c42\u5f97\u5355\u8c03\u961f\u5217\u7684\u961f\u9996\n    while ((a[i]<a[h[t1]])and(t1>=h1)) do dec(t1); //\u5220\u9664\u961f\u5217\u4e2d\u5927\u4e8e\u8fd9\u4e2a\u6570\u7684\u6570\uff08\u901a\u8fc7\u6307\u9488\u7684\u6539\u53d8\u5373\u53ef\u5220\u9664\uff0c\u5373\u4ece\u961f\u5217\u4e2d\u5220\u53bb)\n    inc(t1);h[t1]:=i; //\u5f53\u524d\u7684\u6570\u8fdb\u961f\uff0c\uff0c\u867d\u7136\u5b83\u5f53\u524d\u53ef\u80fd\u4e0d\u662f\u961f\u5217\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u4f46\u961f\u9996\u53ef\u80fd\u4f1a\u88ab\u5220\u53bb\uff0c\u5b83\u6709\u53ef\u80fd\u662f\u540e\u8fb9\u67d0\u4e2a\u533a\u95f4\u7684\u7b54\u6848\n    while i-h[h1]+1>m do  inc(h1);//\u5220\u53bb\u8d85\u51fa\u533a\u95f4\u7684\u961f\u9996\nend;\nend.\n\n```",
        "postTime": 1479212088,
        "uid": 25199,
        "name": "A\u5929\u5929t",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1440 \u3010\u6c42m\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3011"
    }
]