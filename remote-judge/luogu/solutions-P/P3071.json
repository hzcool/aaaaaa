[
    {
        "content": "# P3071 [USACO13JAN]Seating G\n\n## \u524d\u8a00 ~~\u95f2\u8bdd~~\n\n\u54ce\uff0cP2894 \u73c2\u6735\u8389\u88ab\u5361\u4e86\n\n\u63a8\u8350\u9898\u76ee\u2026\u2026\n\n\uff01\u6709\u4e00\u4e2a\u6ca1\u505a\u8fc7\n\n\u4e8e\u662f![](https://s1.ax1x.com/2022/07/24/jjDXKP.jpg)\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3071)\n\n## \u601d\u8def\n\n\u90a3\u5f53\u7136\u73c2\u6735\u8389\u4e86\n\n\u5bf9\u4e8e\u201c\u79bb\u5f00\u201d\u64cd\u4f5c\uff0c\u76f4\u63a5\u533a\u95f4\u63a8\u5e73\u4e3a 0\u3002\n\n\u800c\u5bf9\u4e8e\u201c\u5b89\u7f6e\u201d\u64cd\u4f5c\uff0c\u76f4\u63a5\u66b4\u529b\u626b\u4e00\u904d\u73c2\u6811\uff0c\u627e\u5230\u8db3\u591f\u5927\u7684\u7a7a\u533a\u95f4\u5c31\u5c06\u5ba2\u4eba\u5b89\u7f6e\u5230\u90a3\u91cc\uff0c\u5373\u533a\u95f4\u63a8\u5e73\u4e3a 1\u3002\n\n\u627e\u7a7a\u4f4d\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u51fa\u73b0\u4e24\u4e2a\u76f8\u90bb\u7684\u533a\u95f4\u90fd\u4e3a 0 \u7684\u60c5\u51b5\uff08\u5bf9\u73c2\u6811\u8db3\u591f\u4e86\u89e3\u7684\u4eba\u5e94\u8be5\u80fd\u770b\u61c2\u8fd9\u53e5\u8bdd\uff09\uff0c\u6240\u4ee5\u7edf\u8ba1\u7b54\u6848\u65f6\u4e0d\u80fd\u53ea\u770b\u5f53\u524d\u533a\u95f4\uff0c\u4e5f\u8981\u6ce8\u610f\u548c\u4e4b\u524d\u7684\u533a\u95f4\u7684\u5173\u7cfb\uff1a\n\n* \u5f53\u524d\u533a\u95f4\u4e3a\u7a7a\uff1a\n\n\t* \u82e5\u524d\u4e00\u4e2a\u533a\u95f4\u4e3a\u7a7a\uff0c\u5219\u76f4\u63a5\u5c06\u533a\u95f4\u957f\u5ea6\u7d2f\u52a0\u5230\u5f85\u9009\u7a7a\u533a\u95f4\u957f\u5ea6 $sum$ \u4e2d\uff1b\n\n\t* \u82e5\u524d\u4e00\u4e2a\u533a\u95f4\u4e0d\u7a7a\uff0c\u5219\u5c06\u5f53\u524d\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u8bb0\u5f55\u4e3a\u6574\u4e2a\u5f85\u9009\u7a7a\u533a\u95f4\u7684\u5de6\u7aef\u70b9 $L$\u3002\n\n* \u5f53\u524d\u533a\u95f4\u4e0d\u7a7a\uff1a\n\n\t\u6e05\u7a7a $sum$ \u548c $L$\u3002\n\n* \u627e\u5230\u5408\u9002\u7684\u7a7a\u533a\u95f4\uff1a\n\n\t\u8fd4\u56de\u7a7a\u533a\u95f4\u5de6\u7aef\u70b9\u3002\u82e5\u904d\u5386\u6574\u4e2a\u73c2\u6811\u90fd\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684 $sum$\uff0c\u8fd4\u56de -1\uff08\u5373\u65e0\u89e3\uff09\n\n## \u8d34\u4e00\u4e0b\u4ee3\u7801\n\n```cpp\nint n,m,l,r,ans;\nstruct C_Tree{\n\tint le,ri,val;\n\tC_Tree(int le,int ri=0,int val=0):\n\t\tle(le),ri(ri),val(val){}\n\tbool operator <(const C_Tree &b)const\n\t{\n\t\treturn le<b.le;\n\t}\n};\nset<C_Tree>T;\n#define IT set<C_Tree>::iterator\nIT split(int now)\n{\n\tIT i=T.lower_bound(C_Tree(now));\n\tif(i!=T.end()&&i->le==now)return i;\n\ti--;int l=i->le,r=i->ri,v=i->val;\n\tT.erase(i);\n\tT.insert(C_Tree(l,now-1,v));\n\treturn T.insert(C_Tree(now,r,v)).first;\n}\nvoid assign(int l,int r,int k)\n{\n\tIT ir=split(r+1),il=split(l);\n\tT.erase(il,ir);\n\tT.insert(C_Tree(l,r,k));\n}\nint ask(int siz)\n{\n\tint sum=0,pos=0;\n\tfor(IT i=T.begin();i!=T.end();i++)\n\t{\n\t\tif(i->val==0)\n\t\t{\n\t\t\tif(pos==0)pos=i->le;\n\t\t\tsum+=i->ri-i->le+1;\n\t\t\tif(sum>=siz)return pos;\n\t\t}\n\t\telse sum=pos=0;\n\t}\n\treturn -1;\n}\nsigned main()\n{\n\tn=re();m=re();\n\tT.insert(C_Tree(1,n,0));\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tchar op[10]=\"\";scanf(\"%s\",op);\n\t\tif(op[0]=='A')\n\t\t{\n\t\t\tl=re(),r=ask(l);\n\t\t\tif(r!=-1)assign(r,r+l-1,1);\n\t\t\telse ans++;\n\t\t}\n\t\telse l=re(),r=re(),assign(l,r,0);\n\t}\n\twr(ans);\n\treturn 0;\n}\n```\n\n## \u4e00\u70b9\u5c0f\u5751\n\n$sum$ \u662f\u5426\u6ee1\u8db3\u7684\u6761\u4ef6\u5e94\u8be5\u662f $\\ge siz$ \u800c\u4e0d\u662f $>siz$\uff0c\u4e0d\u7136\u5c31\u4f1a\u53d6\u5f97 50 \u5206\u7684\u597d\u6210\u7ee9\u3002\n\n~~\u5e94\u8be5\u6ca1\u4eba\u4f1a\u548c\u6211\u4e00\u6837\u72af\u8fd9\u4e48\u50bb\u7684\u9519\u8bef~~\n\n## \u540e\u8bb0\n\n\u8bdd\u8bf4\u8fd9\u9898\u7684\u6807\u7b7e\u2026\u2026\n\n\u4e3a\u4ec0\u4e48\u662f `\u961f\u5217`\u3001`\u5355\u8c03\u961f\u5217`\u3001`\u79bb\u6563\u5316`\uff1f\n\n## \u5e7f\u544a\n\n[\u73c2\u6735\u8389\u6811\u6559\u7a0b](https://www.cnblogs.com/adm-1223/p/15875088.html)\n\n[\u6211\u7684 Blog](https://www.cnblogs.com/adm-1223/)\n",
        "postTime": 1660478317,
        "uid": 413020,
        "name": "Zvelig1205",
        "ccfLevel": 4,
        "title": "P3071 [USACO13JAN]Seating G"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u6ca1\u6709\u9898\u89e3\uff1f\u4f3c\u4e4e\u8ba8\u8bba\u7248\u91cc\u7684\u4e5f\u662f\u9519\u7684=_= ......\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u5c31\u6765\u5199\u4e00\u7bc7\u5427lalal(\uff40\u30fb\u03c9\u30fb\u00b4)\n\n\u6211\u6709\u70b9\u6000\u7591\u6807\u7b7e\uff0c\u6bd5\u7adf\u8c01\u80fd\u60f3\u51fa\u8fd9\u4e2a\u600e\u4e48\u7528\uff08\u5355\u8c03\uff09\u961f\u5217\u5199\uff1f\uff1f\uff1f\n\n\u61f5\u903c\n\n[blog\u98df\u7528\u66f4\u4f73](https://www.cnblogs.com/mimiorz/p/9294546.html)\n\n\u5176\u5b9e\u6211\u662f\u7528\u7ebf\u6bb5\u6811\u5199\u7684\u3002\n\n\u6bcf\u4e2a\u8282\u70b9\uff08\u533a\u95f4\uff09\u8bb0\u5f55\u4e09\u4e2a\u53d8\u91cf:\n\nsl[i]:\u4ece\u5de6\u5f80\u53f3\u6709\u8fde\u7eed\u591a\u5c11\u4e2a\u7a7a\u4f4d\n\nsr[i]:\u4ece\u53f3\u5f80\u5de6\u6709\u8fde\u7eed\u591a\u5c11\u4e2a\u7a7a\u4f4d\n\ns[i]:\u8fd9\u4e2a\u533a\u95f4\u4e2d\u6700\u957f\u8fde\u7eed\u591a\u5c11\u4e2a\u7a7a\u4f4d\n\n\n```cpp\n//ln\u6307\u5de6\u5b69\u5b50\u7684\u533a\u95f4\u5305\u542b\u591a\u5c11\u5ea7\u4f4d\n//rn\u6307\u53f3\u5b69\u5b50\u7684\u533a\u95f4\u5305\u542b\u591a\u5c11\u5ea7\u4f4d\n//rt\u6307\u5f53\u524d\u8282\u70b9\n\n\u5411\u4e0a\u66f4\u65b0\uff1a\n\ninline void pu(int rt,int ln,int rn){\n\ts[rt]=max(max(s[ls],s[rs]),sr[ls]+sl[rs]);\n\tsl[rt]=sl[ls]+(sl[ls]==ln)*sl[rs];\n\tsr[rt]=sr[rs]+(sr[rs]==rn)*sr[ls];\n}\n\n\u5411\u4e0b\u66f4\u65b0\uff1a\n//add\u6307\u61d2\u60f0\u6807\u8bb0\ninline void pd(int rt,int ln,int rn){\n\tif(!add[rt]||(!ln&&!rn))return;\n\ts[ls]=sl[ls]=sr[ls]=(add[rt]>0)*ln;\n\ts[rs]=sl[rs]=sr[rs]=(add[rt]>0)*rn;\n\tadd[ls]=add[rs]=add[rt];add[rt]=0;\n}\n```\n\n\u76f8\u4fe1\u5927\u5bb6\u770b\u4ee3\u7801\u5e94\u8be5\u662f\u80fd\u770b\u5f97\u61c2\u7684>_<\n\n\u90a3\u4e48\u6211\u5c31\u6765\u7ed9\u5b8c\u6574\u4ee3\u7801\u4e86\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nnamespace ZDY{\n#define ll long long\n#define Fur(i,x,y) for(int i=x;i<=y;i++)\n#define in2(x,y) in(x);in(y)\n}using namespace ZDY;using namespace std;\n#define N 5000011\n#define ls rt<<1\n#define rs ls|1\n#define Z int m=(l+r)>>1\n#define lson l,m,ls\n#define rson m+1,r,rs\nll s[N<<2],sl[N<<2],sr[N<<2];\nint n,q;\nshort add[N];\ninline void pu(int rt,int ln,int rn){\n\ts[rt]=max(max(s[ls],s[rs]),sr[ls]+sl[rs]);\n\tsl[rt]=sl[ls]+(sl[ls]==ln)*sl[rs];\n\tsr[rt]=sr[rs]+(sr[rs]==rn)*sr[ls];\n}\ninline void pd(int rt,int ln,int rn){\n\tif(!add[rt]||(!ln&&!rn))return;\n\ts[ls]=sl[ls]=sr[ls]=(add[rt]>0)*ln;\n\ts[rs]=sl[rs]=sr[rs]=(add[rt]>0)*rn;\n\tadd[ls]=add[rs]=add[rt];add[rt]=0;\n}\ninline void build(int l,int r,int rt){\n\ts[rt]=sl[rt]=sr[rt]=r-l+1;if(l==r)return;\n\tZ;build(lson);build(rson);\n}\ninline void upd(int L,int R,int l,int r,int rt,int v){\n\tif(L<=l&&r<=R){s[rt]=sl[rt]=sr[rt]=(v>0)*(r-l+1),add[rt]=v;return;}\n\tZ;pd(rt,m-l+1,r-m);\n\tif(L<=m)upd(L,R,lson,v);\n\tif(R>m)upd(L,R,rson,v);\n\tpu(rt,m-l+1,r-m);\n}\ninline int ask(int c,int l,int r,int rt){\n\tZ;pd(rt,m-l+1,r-m);\n\tif(s[ls]>=c)return ask(c,lson);\n\telse if(sr[ls]+sl[rs]>=c)return m-sr[ls]+1;\n\telse return ask(c,rson);\n}\nint main(){\n\t scanf(\"%d%d\",&n,&q);build(1,n,1);\n\t int x,y,ans=0,pos;\n\t while(q--)\n\t \tif(sc()=='A'){\n\t\t \tscanf(\"%d\",&x);\n\t\t\t if(s[1]<x)ans++;\n\t\t\t else{\n\t\t\t \tpos=ask(x,1,n,1);\n\t\t\t \tupd(pos,pos+x-1,1,n,1,-1);\n\t\t\t }\n\t\t}\n\t \telse{scanf(\"%d%d\",&x,&y);upd(x,y,1,n,1,1);}\n\tcout<<ans<<endl;\n}\n```\n\n\u597d\u50cf\u8fd9\u9898\u548cP2894 [USACO08FEB]\u9152\u5e97Hotel \u91cd\u590d\u4e86...",
        "postTime": 1531292406,
        "uid": 36532,
        "name": "localhost",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3071 \u3010[USACO13JAN]\u5ea7\u4f4dSeating\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u8be6\u89c1\u9898\u76ee\u7ffb\u8bd1\u3002\n\n## \u89e3\u9898\u601d\u8def\n\nL\u64cd\u4f5c\u4e5f\u5c31\u662f\u533a\u95f4\u63a8\u5e73\u64cd\u4f5c\uff0c\u610f\u5473\u7740\u8fd9\u9898\u53ef\u4ee5\u7528\u73c2\u6735\u8389\u6811\u505a\u3002\n\n\u5f53\u524d\u5757\u7684\u503c\u4e3a $0$\uff0c\u4ee3\u8868\u5f53\u524d\u533a\u95f4\u6ca1\u6709\u4eba\u5750\u3002\u5426\u5219\uff0c\u5f53\u524d\u533a\u95f4\u6709\u4eba\u5750\u3002\n\nA\u64cd\u4f5c\u5c31\u66b4\u529b\u904d\u5386\u6574\u4e2a\u96c6\u5408\uff0c\u5bfb\u627e\u4e00\u4e2a\u957f\u5ea6\u5927\u4e8e $l$ \u7684\u5757\uff0c\u7528 $r$\uff0c$sum$ \u5206\u522b\u8868\u793a\u5757\u7684\u6700\u5de6\u8fb9\u548c\u5f53\u524d\u7684\u5757\u957f\u3002\n\n\u5982\u679c $sum\\geq l$\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de $r$.\n\n\u5982\u679c\u5f53\u524d\u5757\u7684\u503c\u4e3a $0$\uff0c$sum$ \u52a0\u4e0a\u5f53\u524d\u5757\u957f\uff0c\u5982\u679c $r=0$\uff0c\u5c31\u5c06\u5f53\u524d\u5757\u7684\u5de6\u8fb9\u8d4b\u503c\u7ed9 $r$.\n\n\u5982\u679c\u5f53\u524d\u5757\u7684\u503c\u4e3a $1$\uff0c\u5c31\u5c06 $r$ \u548c $sum$ \u91cd\u7f6e\u4e3a $0$.\n\nL\u64cd\u4f5c\u5c31\u662f\u73c2\u6735\u8389\u6811\u57fa\u672c\u64cd\u4f5c--\u533a\u95f4\u63a8\u5e73\u3002\n\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,ans=0;\nchar s[10+10];\nstruct node\n{\n    int l,r;\n    mutable int v;\n    node(int L,int R=-1,int V=0)\n    {\n        l=L,r=R,v=V;\n    }\n    bool operator <(const node &a) const\n    {\n        return l<a.l;\n    }\n};\nset<node> a;\n#define at set<node>::iterator\nat split(int pos)\n{\n    at it=a.lower_bound(pos);\n    if(it!=a.end()&&it->l==pos)\n        return it;\n    it--;\n    int l=it->l;\n    int r=it->r;\n    int v=it->v;\n    a.erase(it);\n    a.insert(node(l,pos-1,v));\n    return a.insert(node(pos,r,v)).first;\n}\nvoid emerge(int l,int r,int v)\n{\n    at itr=split(r+1);\n    at itl=split(l);\n    a.erase(itl,itr);\n    a.insert(node(l,r,v));\n    return ;\n}\nint ask(int l)\n{\n    int r=0,sum=0;\n    for(at it=a.begin();it!=a.end();++it)\n    {\n        if(sum>=l)\n            return r;\n        if(it->v==0)\n        {\n            if(r==0)\n                r=it->l;\n            sum+=it->r-it->l+1;\n        }\n        else    \n            r=0,sum=0;\n    }\n    return -1;\n}\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    a.insert(node(1,n,0));\n    a.insert(node(n+1,n+10,1));\n    for(int i=1;i<=m;++i)\n    {\n        int l,r;\n        scanf(\"%s\",s);\n        if(s[0]=='A')\n        {\n            scanf(\"%d\",&l);\n            if(l==5)\n                l=5; \n            int r=ask(l);  \n            if(r!=-1)\n                emerge(r,r+l-1,1);\n            else    \n                ans++;   \n        }\n        else\n        {\n            scanf(\"%d %d\",&l,&r);\n            emerge(l,r,0);\n        }      \n    }\n    cout<<ans;\n    return 0;\n}\n\n```",
        "postTime": 1673353700,
        "uid": 342244,
        "name": "jamesharden666",
        "ccfLevel": 4,
        "title": "luogu P3071 [USACO13JAN]Seating G \u9898\u89e3"
    },
    {
        "content": "WA\u4e2a\u4e0d\u505c\u4e4b\u540e\u8270\u96be\u5730A\u6389\u4e86\u2026\u2026\n\n\u7b2c\u4e00\u7bc7\u9898\u89e3\u548c\u8ba8\u8bba\u91cc\u7684\u505a\u6cd5\u90fd\u662f\u628aA\u64cd\u4f5c\u62c6\u6210\u4e86 find_pos \u548c add \u4e24\u4e2a\u64cd\u4f5c\uff0c\u800c\u6211\u9009\u62e9\n\u628a\u4ed6\u4eec\u5408\u4e3a insert\uff08\u8be6\u89c1\u4ee3\u7801\uff09\uff0c\u7136\u540e\u5c31\u5728\u4e8c\u4e09\u5341\u5206\u6323\u624e\u4e86\u534a\u5929\u2026\u2026\n\n\u95ee\u9898\u5728\u4e8e\uff0c\u5982\u679c\u987e\u5ba2\u8981\u8fdb\u5165\u7684\u533a\u95f4\u8de8\u5728\u4e86 mid \u7684\u4e24\u7aef\uff0c\u90a3\u4e0b\u4e00\u5c42\u5b50\u6811\u5904\u7406\u7684\u662f\u4e24\u4e2a\u5bf9\u79f0\u7684\u5b50\u95ee\u9898\uff08\u800c\u975e\u76f8\u540c\uff09\uff0c\u56e0\u6b64\u8981\u628a insert \u5199\u4e24\u4e2a\u7248\u672c\uff0c\u5206\u522b\u5904\u7406\u5411\u6700\u5de6/\u53f3\u7aef\u63d2\u5165\u7684\u60c5\u51b5\u3002\n\n\u8fd8\u6709\u4e00\u4ef6\u5c0f\u4e8b\uff0cinsert\u5206\u4e3a\u4e24\u534a\u65f6\u53ef\u4ee5\u53cd\u8fc7\u6765\u5199\uff0c\u5982\u5411\u5de6\u7aef\u63d2\u5165\u65f6\u8981\u5148  insert (2*k+1) \u518d insert(2*k)\uff0c\u907f\u514d\u6570\u7ec4\u88ab\u66f4\u65b0\u4e4b\u540e\u7a00\u91cc\u7cca\u6d82\u7684\u51fa\u9519\u3002\n```cpp\n#include<cstdio>\nint s[2000005],flag[2000005],ll[2000005],rr[2000005];\ninline int max(int x,int y) {return x>y?x:y;}\nvoid update(int k,int l,int r) \n{\n    s[k]=max(max(s[2*k],s[2*k+1]),rr[2*k]+ll[2*k+1]);\n    int mid=(l+r)>>1;\n    if(s[2*k]==mid-l+1) ll[k]=ll[2*k+1]+s[2*k];else ll[k]=ll[2*k];\n    if(s[2*k+1]==r-mid) rr[k]=rr[2*k]+s[2*k+1];else rr[k]=rr[2*k+1];\n}\nvoid build(int k,int l,int r)\n{\n    if(l==r) {s[k]=ll[k]=rr[k]=1;return;}\n    int mid=(l+r)>>1;\n    build(2*k,l,mid);build(2*k+1,mid+1,r);\n    update(k,l,r);\n}\nvoid pushdown(int k,int l,int r)\n{\n    if(!flag[k]) return;\n    if(flag[k]>0)\n    {\n        s[2*k]=ll[2*k]=rr[2*k]=0;\n        s[2*k+1]=rr[2*k+1]=ll[2*k+1]=0;\n        flag[2*k]=flag[2*k+1]=1;\n    }\n    else \n    {\n        int mid=(l+r)>>1;\n        s[2*k]=ll[2*k]=rr[2*k]=mid-l+1;\n        s[2*k+1]=ll[2*k+1]=rr[2*k+1]=r-mid;\n        flag[2*k]=flag[2*k+1]=-1;\n    }\n    flag[k]=0;\n}\nvoid insert(int k,int l,int r,int len,int op)\n{\n    if(!len) return;\n    if(r-l+1==len) {s[k]=ll[k]=rr[k]=0;flag[k]=1;return;}\n    int mid=(l+r)>>1;pushdown(k,l,r);\n    if(op)\n    {\n        if(s[2*k]>=len) insert(2*k,l,mid,len,1);\n        else if(rr[2*k]+ll[2*k+1]>=len) {insert(2*k+1,mid+1,r,len-rr[2*k],1);insert(2*k,l,mid,rr[2*k],0);}\n        else insert(2*k+1,mid+1,r,len,1);\n    }\n    else\n    {\n        if(s[2*k+1]>=len) insert(2*k+1,mid+1,r,len,0);\n        else if(rr[2*k]+ll[2*k+1]>=len) {insert(2*k,l,mid,len-ll[2*k+1],0);insert(2*k+1,mid+1,r,ll[2*k+1],1);}\n        else insert(2*k,l,mid,len,0);\n    }\n    update(k,l,r);\n}\nvoid del(int k,int l,int r,int L,int R)\n{\n    if(R<l||r<L) return;\n    if(L<=l&&r<=R) {s[k]=ll[k]=rr[k]=r-l+1;flag[k]=-1;return;}\n    int mid=(l+r)>>1;pushdown(k,l,r);\n    del(2*k,l,mid,L,R);del(2*k+1,mid+1,r,L,R);\n    update(k,l,r);\n}\nint main()\n{\n    int n,m,ans=0;scanf(\"%d%d\",&n,&m);\n    build(1,1,n);\n    while(m--)\n    {\n        char c=' ';while(c<'A'||c>'Z') c=getchar();\n        if(c=='A')\n        {\n            int x;scanf(\"%d\",&x);\n            if(s[1]<x) ans++;else insert(1,1,n,x,1);\n        }\n        else\n        {\n            int x,y;scanf(\"%d%d\",&x,&y);\n            del(1,1,n,x,y);\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1540011802,
        "uid": 33426,
        "name": "D10s",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3071 \u3010[USACO13JAN]\u5ea7\u4f4dSeating\u3011"
    },
    {
        "content": "\u8fd9\u9898\u8ddf[[USACO08FEB]\u9152\u5e97Hotel](https://www.luogu.org/problemnew/show/P2894)\u771f\u7684\u597d\u50cf\u554a\uff0c\u53ea\u662f\u4e3b\u51fd\u6570\u6539\u4e00\u6539\u2026\u2026\n\n\u6ca1\u4e8b\uff0c\u8fd9\u4e0d\u5f71\u54cd\u6211\u9898\u6c34\u4e2a\u53cc\u500d\u7ecf\u9a8c\uff0c\u9898\u89e3\u4e5f\u6c34\u4e2a\u53cc\u500d\u7ecf\u9a8c\u3010\u6ed1\u7a3d.jpg\u3011\n\n\u6211\u6765\u8865\u5145\u4e00\u4e0b\u524d\u4e24\u7bc7\u9898\u89e3\u7684\uff0c\u7c7b\u4f3c\u6700\u5927\u5b50\u6bb5\u548c\u7684\u505a\u6cd5\uff0c\u5229\u7528$sum$\u8981\u4e48\u5728\u5de6\u533a\u95f4\uff0c\u8981\u4e48\u5728\u53f3\u533a\u95f4\uff0c\u8981\u4e48\u6a2a\u8de8\u4e24\u4e2a\u533a\u95f4\n\n\u4e3a\u4e86\u65b9\u4fbf\u67e5\u770b\uff0c\u6211\u628a\u4e00\u4e2a\u53d8\u91cf\u4e00\u884c\n\n\u8fd9\u662f\u4e00\u4e2a\u7ed3\u70b9\u7684\u4fe1\u606f\n```cpp\nstruct node{\n\tint sum;//\u533a\u95f4\u6700\u957f\u8fde\u7eed\u7a7a\u623f\u7684\u957f\u5ea6\n\tint lmax;//\u4ecel\u7aef\u70b9\u5f00\u59cb\u6700\u957f\u8fde\u7eed\u7a7a\u623f\u7684\u957f\u5ea6\n\tint rmax;//\u4ecer\u7aef\u70b9\u5f00\u59cb\u6700\u957f\u8fde\u7eed\u7a7a\u623f\u7684\u957f\u5ea6\n\tint lazy;//lazy\u4e3a1\u8868\u793a\u9000\u623f\uff0c\u4e3a2\u8868\u793a\u5f00\u623f\n\tint len;//\u533a\u95f4\u957f\u5ea6\uff0c\u8bb0\u5f55\u540e\u65b9\u4fbf\u8ba1\u7b97\n\t#define mid (l+r>>1)\n\t#define lson (rt<<1)\n\t#define rson (rt<<1|1)\n\t#define sum(rt) tree[rt].sum\n\t#define lmax(rt) tree[rt].lmax\n\t#define rmax(rt) tree[rt].rmax\n\t#define lazy(rt) tree[rt].lazy\n\t#define len(rt) tree[rt].len\n}tree[maxn<<2];\n```\n\n\u5f00\u59cb\u5efa\u6811\n```cpp\nvoid build(int l,int r,int rt){\n\tsum(rt)=lmax(rt)=rmax(rt)=len(rt)=r-l+1;\n    //\u521d\u59cb\u90fd\u662f\u7a7a\u623f\n\tif(l == r) return ;\n\tbuild(l,mid,lson);\n\tbuild(mid+1,r,rson);\n}\n```\n\u66f4\u65b0\u7ed3\u70b9\u4fe1\u606f\n```cpp\nvoid pushup(int rt){\n\tlmax(rt)=(lmax(lson)==len(lson))?len(lson)+lmax(rson):lmax(lson);\n    //\u82e5\u5de6\u513f\u5b50\u533a\u95f4\u5168\u7a7a\u90a3\u4e48lmax\u53ef\u4ee5\u6a2a\u8de8\u5de6\u53f3\u513f\u5b50\uff0c\u5426\u5219\u4e0d\u80fd\n\trmax(rt)=(rmax(rson)==len(rson))?len(rson)+rmax(lson):rmax(rson);\n    //\u82e5\u53f3\u513f\u5b50\u533a\u95f4\u5168\u7a7a\u90a3\u4e48rmax\u53ef\u4ee5\u6a2a\u8de8\u5de6\u53f3\u513f\u5b50\uff0c\u5426\u5219\u4e0d\u80fd\n\tsum(rt)=max(rmax(lson)+lmax(rson),max(sum(lson),sum(rson)));\n    //\u6709\u4e09\u79cd\u60c5\u51b5\uff0csum\u5168\u5728\u5de6\u513f\u5b50\uff0c\u5168\u5728\u53f3\u513f\u5b50\uff0c\u6a2a\u8de8\u5de6\u53f3\u513f\u5b50\n}\n```\n\u4e0b\u4f20\u6807\u8bb0\n```cpp\nvoid pushdown(int rt){\n\tif(!lazy(rt)) return ;\n\tlazy(lson)=lazy(rson)=lazy(rt);\n    //\u4e0b\u4f20lazy\u6807\u8bb0\n\tsum(lson)=lmax(lson)=rmax(lson)=(lazy(rt)==1)?len(lson):0;\n\tsum(rson)=lmax(rson)=rmax(rson)=(lazy(rt)==1)?len(rson):0;\n    //lazy\u4e3a1\u8868\u793a\u9000\u623f\uff0c\u4e3a2\u8868\u793a\u5f00\u623f\n\tlazy(rt)=0;\n    //\u6e05\u7a7alazy\u6807\u8bb0\n}\n```\n\u8fdb\u884c\u9000\u623f\u6216\u5f00\u623f\n```cpp\nvoid update(int L,int R,int tag,int l,int r,int rt){\n\tif(L <= l && r <= R){\n\t\tsum(rt)=lmax(rt)=rmax(rt)=(tag==1)?len(rt):0;\n\t\tlazy(rt)=tag;\n        //\u76f4\u63a5\u66f4\u65b0\u6389\uff0c\u6253\u4e0alazy\u6807\u8bb0\n\t\treturn ;\n\t}\n\tpushdown(rt);\n\tif(L <= mid) update(L,R,tag,l,mid,lson);\n\tif(R > mid) update(L,R,tag,mid+1,r,rson);\n\tpushup(rt);\n    //\u8bb0\u5f97\u4e0b\u4f20\u5e76\u66f4\u65b0\n}\n```\n\u5728$[1,n]$\u627e\u5230\u4e00\u4e2a$\\geq x$\u7684\u533a\u95f4\u5e76\u8fd4\u56de\u5de6\u7aef\u70b9\n```cpp\nint query(int len,int l,int r,int rt){\n\tif(l == r) return l;\n\tpushdown(rt);\n    //\u4e0b\u4f20\u6807\u8bb0\n\tif(sum(lson)>=len) return query(len,l,mid,lson);\n    //\u9012\u5f52\u5230\u5de6\u513f\u5b50\n\tif(rmax(lson)+lmax(rson)>=len) return mid-rmax(lson)+1;\n    //\u5de6\u53f3\u513f\u5b50\u5408\u5e76\u540e\u6ee1\u8db3\u5c31\u7528\u4e2d\u95f4\n\treturn query(len,mid+1,r,rson);\n    //\u9012\u5f52\u5230\u53f3\u513f\u5b50\n}\n```\n\u5b8c\u6574\u4ee3\u7801$\u2193$\n\n$Code\\ Below:$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=500000+10;\nint n,m,ans;\n\nstruct node{\n    int sum,lmax,rmax,lazy,len;\n    #define mid (l+r>>1)\n    #define lson (rt<<1)\n    #define rson (rt<<1|1)\n    #define sum(rt) tree[rt].sum\n    #define lmax(rt) tree[rt].lmax\n    #define rmax(rt) tree[rt].rmax\n    #define lazy(rt) tree[rt].lazy\n    #define len(rt) tree[rt].len\n}tree[maxn<<2];\n\nvoid pushup(int rt){\n    lmax(rt)=(lmax(lson)==len(lson))?len(lson)+lmax(rson):lmax(lson);\n    rmax(rt)=(rmax(rson)==len(rson))?len(rson)+rmax(lson):rmax(rson);\n    sum(rt)=max(rmax(lson)+lmax(rson),max(sum(lson),sum(rson)));\n}\n\nvoid pushdown(int rt){\n    if(!lazy(rt)) return ;\n    lazy(lson)=lazy(rson)=lazy(rt);\n    sum(lson)=lmax(lson)=rmax(lson)=(lazy(rt)==1)?len(lson):0;\n    sum(rson)=lmax(rson)=rmax(rson)=(lazy(rt)==1)?len(rson):0;\n    lazy(rt)=0;\n}\n\nvoid build(int l,int r,int rt){\n    sum(rt)=lmax(rt)=rmax(rt)=len(rt)=r-l+1;\n    if(l == r) return ;\n    build(l,mid,lson);\n    build(mid+1,r,rson);\n}\n\nvoid update(int L,int R,int tag,int l,int r,int rt){\n    if(L <= l && r <= R){\n        sum(rt)=lmax(rt)=rmax(rt)=(tag==1)?len(rt):0;\n        lazy(rt)=tag;\n        return ;\n    }\n    pushdown(rt);\n    if(L <= mid) update(L,R,tag,l,mid,lson);\n    if(R > mid) update(L,R,tag,mid+1,r,rson);\n    pushup(rt);\n}\n\nint query(int len,int l,int r,int rt){\n    if(l == r) return l;\n    pushdown(rt);\n    if(sum(lson)>=len) return query(len,l,mid,lson);\n    if(rmax(lson)+lmax(rson)>=len) return mid-rmax(lson)+1;\n    return query(len,mid+1,r,rson);\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    build(1,n,1);\n    char opt;int l,r,x;\n    while(m--){\n        opt=getchar();\n        while(opt!='A'&&opt!='L') opt=getchar();\n        if(opt=='A'){\n            scanf(\"%d\",&x);\n            if(sum(1)>=x){\n                l=query(x,1,n,1);\n                update(l,l+x-1,2,1,n,1);\n            }\n            else ans++;\n        }\n        else {\n            scanf(\"%d%d\",&l,&r);\n            update(l,r,1,1,n,1);\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1540549596,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3071 \u3010[USACO13JAN]\u5ea7\u4f4dSeating\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Coros-Trusds/p/15859766.html)\n\n# \u9898\u76ee\u5927\u610f\n\n\u6709 $n$ \u4e2a\u5ea7\u4f4d\uff0c$m$ \u6b21\u64cd\u4f5c\u3002\n\n$\\rm A$ \u64cd\u4f5c\uff1a\u5c06 $a$ \u540d\u5ba2\u4eba\u5b89\u7f6e\u5230\u6700\u5de6\u7684\u8fde\u7eed $a$ \u4e2a\u7a7a\u4f4d\u4e2d\uff0c\u6ca1\u6709\u5219\u4e0d\u64cd\u4f5c\u3002\n\n$\\rm L$ \u64cd\u4f5c\uff1a$[a,b]$ \u7684\u5ba2\u4eba\u79bb\u5f00\u3002\n\n\u6c42 $\\rm A$ \u64cd\u4f5c\u4e2d\u6240\u6709\u4e0d\u64cd\u4f5c\u7684\u6b21\u6570\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n\u548c $\\verb!P2894!$ \u5f88\u50cf\u3002\u6ce8\u610f\u8fd9\u9053\u9898 $\\rm L$ \u64cd\u4f5c\u662f\u9488\u5bf9\u533a\u95f4 $[l,r]$\uff0c$\\verb!P2894!$ \u662f\u9488\u5bf9\u533a\u95f4 $[l,l+x-1]$\u3002\u8fd9\u91cc\u5751\u4e86\u6211\u4e24\u5929\u3002\n\n\u5b9a\u4e49 $lmax$ \u8868\u793a\u4ece\u5de6\u5f00\u59cb\u7684\u6700\u5927\u8fde\u7eed\u7a7a\u4f4d\u6570\uff0c\u4ece\u53f3\u5f00\u59cb\u7684\u8fde\u7eed\u6700\u5927\u7a7a\u4f4d\u6570\uff0c\u4ee5\u53ca\u8be5\u533a\u95f4\u7684\u6700\u5927\u8fde\u7eed\u7a7a\u4f4d\u6570 $max$\u3002\n\n\u4e4b\u6240\u4ee5\u5b9a\u4e49 $lmax,rmax$\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u4ece\u8be5\u533a\u95f4\u6269\u5c55\u7684\u65f6\u5019\u4e0d\u80fd\u53ea\u9760 $max$\uff0c\u4e5f\u5c31\u662f\u8bf4\u8be5\u533a\u95f4\u7684 $max$ \u4e0d\u7b49\u4e8e\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u7684 $max$ \u4e4b\u548c\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\n\u533a\u95f4 $[1,8]$\uff08$0$ \u8868\u793a\u7a7a\u4f4d\uff0c$1$ \u8868\u793a\u975e\u7a7a\u4f4d\uff09\uff1a`0 0 0 1 0 0 0 1`\u3002$max[1,8]\\neq max[1,4]+max[5,8]$\u3002\u4f46\u662f\u7528 $lmax,rmax$ \u5c31\u53ef\u4ee5\u89e3\u51b3\u4e86\uff1a\n\n```cpp\ninline void pushup(int p)\n{\n\tnode[p].Max=max(node[ls(p)].Max,max(node[rs(p)].Max,node[ls(p)].rmax+node[rs(p)].lmax));\n\n\tnode[p].lmax=node[ls(p)].Max==(node[ls(p)].r-node[ls(p)].l+1)?node[ls(p)].Max+node[rs(p)].lmax:node[ls(p)].lmax;\n\n\tnode[p].rmax=node[rs(p)].Max==(node[rs(p)].r-node[rs(p)].l+1)?node[rs(p)].Max+node[ls(p)].rmax:node[rs(p)].rmax;\n}\n```\n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u4eec\u4ecd\u7136\u4f7f\u7528\u61d2\u6807\u8bb0\u3002$tag=1$ \u8868\u793a\u975e\u7a7a\u4f4d\uff0c$tag=0$ \u8868\u793a\u7a7a\u4f4d\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u8fd9\u6837\uff1a\n\n```cpp\ninline void pushdown(int p)\n{\n\tif(node[p].tag==0)\n\t{\n\t\tnode[ls(p)].tag=node[rs(p)].tag=0;\n\n\t\tnode[ls(p)].Max=node[ls(p)].lmax=node[ls(p)].rmax=node[ls(p)].r-node[ls(p)].l+1;\n\n\t\tnode[rs(p)].Max=node[rs(p)].lmax=node[rs(p)].rmax=node[rs(p)].r-node[rs(p)].l+1;\n\t}\n\n\telse if(node[p].tag==1)\n\t{\n\t\tnode[ls(p)].tag=node[rs(p)].tag=1;\n\n\t\tnode[ls(p)].Max=node[ls(p)].lmax=node[ls(p)].rmax=0;\n\n\t\tnode[rs(p)].Max=node[rs(p)].lmax=node[rs(p)].rmax=0;\n\t}\n\n\tnode[p].tag=-1;\n}\n```\n\n\u4fee\u6539\u64cd\u4f5c\u6ca1\u5565\u597d\u8bb2\u7684\uff0c\u91cd\u70b9\u8bb2\u8bb2\u67e5\u8be2\u64cd\u4f5c\u3002\n\n\u6211\u4eec\u67e5\u8be2\u64cd\u4f5c\u662f\u4e3a\u4e86\u8fd4\u56de\u5de6\u7aef\u70b9\u503c\uff0c\u5982\u679c\u5de6\u513f\u5b50\u88c5\u5f97\u4e0b $x$ \u4e2a\u5ea7\u4f4d\uff0c\u90a3\u4e48\u9012\u5f52\u5230\u5de6\u513f\u5b50\u53bb\uff1b\u5982\u679c\u8de8\u8d8a\u5de6\u53f3\u513f\u5b50\u7684\u7a7a\u4f4d\u6570\u88c5\u5f97\u4e0b $x$ \u4e2a\u5ea7\u4f4d\uff0c\u90a3\u4e48\u8fd4\u56de\u5de6\u7aef\u70b9\u4f4d\u7f6e\uff1b\u5426\u5219\u9012\u5f52\u5230\u53f3\u513f\u5b50\u53bb\u3002\n\n```cpp\ninline int query(int p,int k)\n{\n\tif(node[p].l==node[p].r)\n\t{\n\t\treturn node[p].l;\n\t}\n\n\tSegment_Tree::pushdown(p);\n\n\tint mid=node[p].l+node[p].r>>1;\n\n\tif(node[ls(p)].Max>=k)\n\t{\n\t\treturn Segment_Tree::query(ls(p),k);\n\t}\n\n\tif(node[ls(p)].rmax+node[rs(p)].lmax>=k)\n\t{\n\t\treturn node[ls(p)].r-node[ls(p)].rmax+1;\n\t}\n\n\telse\n\t{\n\t\treturn Segment_Tree::query(rs(p),k);\n\t}\n}\n```\n\n# \u4ee3\u7801\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n//2022/1/31\n\n//2022/2/1\n\n#define _CRT_SECURE_NO_WARNINGS\n\n#include <iostream>\n\n#include <cstdio>\n\n#include <climits>//need \"INT_MAX\",\"INT_MIN\"\n\n#include <cstring>//need \"memset\"\n\n#include <algorithm>\n\n#define enter() putchar(10)\n\n#define debug(c,que) cerr<<#c<<\" = \"<<c<<que\n\n#define cek(c) puts(c)\n\n#define blow(arr,st,ed,w) for(register int i=(st);i<=(ed);i++)cout<<arr[i]<<w;\n\n#define speed_up() cin.tie(0),cout.tie(0)\n\n#define endl \"\\n\"\n\n#define Input_Int(n,a) for(register int i=1;i<=n;i++)scanf(\"%d\",a+i);\n\n#define Input_Long(n,a) for(register long long i=1;i<=n;i++)scanf(\"%lld\",a+i);\n\n#define mst(a,k) memset(a,k,sizeof(a))\n\nnamespace Newstd\n{\n\tinline int read()\n\t{\n\t\tint x=0,k=1;\n\t\tchar ch=getchar();\n\t\twhile(ch<'0' || ch>'9')\n\t\t{\n\t\t\tif(ch=='-')\n\t\t\t{\n\t\t\t\tk=-1;\n\t\t\t}\n\t\t\tch=getchar();\n\t\t}\n\t\twhile(ch>='0' && ch<='9')\n\t\t{\n\t\t\tx=(x<<1)+(x<<3)+ch-'0';\n\t\t\tch=getchar();\n\t\t}\n\t\treturn x*k;\n\t}\n\tinline void write(int x)\n\t{\n\t\tif(x<0)\n\t\t{\n\t\t\tputchar('-');\n\t\t\tx=-x;\n\t\t}\n\t\tif(x>9)\n\t\t{\n\t\t\twrite(x/10);\n\t\t}\n\t\tputchar(x%10+'0');\n\t}\n}\n\nusing namespace Newstd;\n\nusing namespace std;\n\nconst int ma=5e5+5;\n\nstruct Node\n{\n\tint l,r;\n\n\tint lmax,rmax;//from left,from right\n\n\tint tag,Max;\n\n\t//if tag = 0: get out\n\t//if tag = 1: come in\n};\n\nNode node[ma<<2];\n\nint n,m;\n\nnamespace Segment_Tree\n{\n\t#define ls(p) (p<<1)\n\n\t#define rs(p) (p<<1|1)\n\n\tinline void pushup(int p)\n\t{\n\t\tnode[p].Max=max(node[ls(p)].Max,max(node[rs(p)].Max,node[ls(p)].rmax+node[rs(p)].lmax));\n\n\t\tnode[p].lmax=node[ls(p)].Max==(node[ls(p)].r-node[ls(p)].l+1)?node[ls(p)].Max+node[rs(p)].lmax:node[ls(p)].lmax;\n\n\t\tnode[p].rmax=node[rs(p)].Max==(node[rs(p)].r-node[rs(p)].l+1)?node[rs(p)].Max+node[ls(p)].rmax:node[rs(p)].rmax;\n\t}\n\n\tinline void build(int p,int l,int r)\n\t{\n\t\tnode[p].l=l,node[p].r=r;\n\n\t\tif(node[p].l==node[p].r)\n\t\t{\n\t\t\tnode[p].lmax=node[p].rmax=node[p].Max=1;\n\n\t\t\treturn;\n\t\t}\n\n\t\tint mid=node[p].l+node[p].r>>1;\n\n\t\tSegment_Tree::build(ls(p),l,mid);\n\n\t\tSegment_Tree::build(rs(p),mid+1,r);\n\n\t\tSegment_Tree::pushup(p);\n\t}\n\n\tinline void pushdown(int p)\n\t{\n\t\tif(node[p].tag==0)\n\t\t{\n\t\t\tnode[ls(p)].tag=node[rs(p)].tag=0;\n\n\t\t\tnode[ls(p)].Max=node[ls(p)].lmax=node[ls(p)].rmax=node[ls(p)].r-node[ls(p)].l+1;\n\n\t\t\tnode[rs(p)].Max=node[rs(p)].lmax=node[rs(p)].rmax=node[rs(p)].r-node[rs(p)].l+1;\n\t\t}\n\n\t\telse if(node[p].tag==1)\n\t\t{\n\t\t\tnode[ls(p)].tag=node[rs(p)].tag=1;\n\n\t\t\tnode[ls(p)].Max=node[ls(p)].lmax=node[ls(p)].rmax=0;\n\n\t\t\tnode[rs(p)].Max=node[rs(p)].lmax=node[rs(p)].rmax=0;\n\t\t}\n\n\t\tnode[p].tag=-1;\n\t}\n\n\tinline void update(int x,int y,int p,int k)\n\t{\n\t\tif(x<=node[p].l && node[p].r<=y)\n\t\t{\n\t\t\tif(k==0)\n\t\t\t{\n\t\t\t\tnode[p].Max=node[p].lmax=node[p].rmax=node[p].r-node[p].l+1;\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\t\tnode[p].Max=node[p].lmax=node[p].rmax=0;\n\t\t\t}\n\n\t\t\tnode[p].tag=k;\n\n\t\t\treturn;\n\t\t}\n\n\t\tSegment_Tree::pushdown(p);\n\n\t\tint mid=node[p].l+node[p].r>>1;\n\n\t\tif(x<=mid)\n\t\t{\n\t\t\tSegment_Tree::update(x,y,ls(p),k);\n\t\t}\n\n\t\tif(y>mid)\n\t\t{\n\t\t\tSegment_Tree::update(x,y,rs(p),k);\n\t\t}\n\n\t\tSegment_Tree::pushup(p);\n\t}\n\n\tinline int query(int p,int k)\n\t{\n\t\tif(node[p].l==node[p].r)\n\t\t{\n\t\t\treturn node[p].l;\n\t\t}\n\n\t\tSegment_Tree::pushdown(p);\n\n\t\tint mid=node[p].l+node[p].r>>1;\n\n\t\tif(node[ls(p)].Max>=k)\n\t\t{\n\t\t\treturn Segment_Tree::query(ls(p),k);\n\t\t}\n\n\t\tif(node[ls(p)].rmax+node[rs(p)].lmax>=k)\n\t\t{\n\t\t\treturn node[ls(p)].r-node[ls(p)].rmax+1;\n\t\t}\n\n\t\telse\n\t\t{\n\t\t\treturn Segment_Tree::query(rs(p),k);\n\t\t}\n\t}\n\n\t#undef ls\n\n\t#undef rs\n}\n\nint main(void)\n{\n#ifndef ONLINE_JUDGE\n\tfreopen(\"in.txt\",\"r\",stdin);\n\tfreopen(\"out.txt\",\"w\",stdout);\n#endif\n\n\tn=read(),m=read();\n\n\tSegment_Tree::build(1,1,n);\n\n\tint ans=0;\n\n\tfor(register int i=1;i<=m;i++)\n\t{\n\t\tchar ch[3];\n\n\t\tscanf(\"%s\",ch);\n\n\t\tint x=read();\n\n\t\tif(ch[0]=='A')\n\t\t{\n\t\t\tif(node[1].Max>=x)\n\t\t\t{\n\t\t\t\tint l=Segment_Tree::query(1,x);\n\n\t\t\t\tSegment_Tree::update(l,l+x-1,1,1);\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\n\t\telse\t\n\t\t{\n\t\t\tint y=read();\n\n\t\t\tSegment_Tree::update(x,y,1,0);\n\t\t}\n\t}\n\n\tprintf(\"%d\\n\",ans);\n\n\treturn 0;\n}\n```",
        "postTime": 1643723336,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "P3071 [USACO13JAN]Seating G"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fde\u7eed0\u7684\u533a\u95f4\u5373\u53ef\u3002\n\n\u53cc\u500d\u7ecf\u9a8c\u9898\uff1a[P2894 \u9152\u5e97](https://www.luogu.com.cn/problem/P2894)\u9700\u8981\u7a0d\u5fae\u6539\u4e00\u70b9\uff0c\u5904\u7406\u662f\u4e00\u6a21\u4e00\u6837\u7684\u3002\n\n\u9898\u76ee\u610f\u601d\u5c31\u662f\u7ed9\u4f60\u4e00\u4e2a\u533a\u95f4\uff0c\u6700\u521d\u65f6\u90fd\u4e3a0\uff0c\u6709\u4e24\u79cd\u64cd\u4f5c\uff0c\u7b2c\u4e00\u79cd\u64cd\u4f5c\u662f\u5c06\u6700\u5de6\u8fb9\u7684\u8fde\u7eeda\u4e2a0\u53d8\u4e3a1\uff0c\u7b2c\u4e8c\u79cd\u64cd\u4f5c\u662f\u5c06\u533a\u95f4 $[a,b]$ \u53d8\u4e3a0\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e09\u4e2a\u53d8\u91cf:\u5de6\u7aef\u8fde\u7eed0\u7684\u4e2a\u6570\uff0c\u53f3\u7aef\u8fde\u7eed0\u7684\u4e2a\u6570\u548c\u6574\u4e2a\u533a\u95f4\u5185\u8fde\u7eed0\u7684\u4e2a\u6570\u7684\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u5bf9\u4e8e1\u64cd\u4f5c\uff0c\u5728\u67e5\u8be2\u65f6\u5bfb\u627e\u6700\u5de6\u8fb9\u8fde\u7eeda\u4e2a0\u7684\u5de6\u7aef\u70b9\u7684\u4f4d\u7f6e\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N = 3e6 + 5;\nstruct Node{\n\tint lef;\n\tint rig;\n\tint maxn;\n\tint lmax;\n\tint rmax;\n\tint aim;\n} Tree[N];\nvoid pushup(int now)\n{\n\tTree[now].maxn = max(max(Tree[now << 1].maxn, Tree[now << 1 | 1].maxn), Tree[now << 1].rmax + Tree[now << 1 | 1].lmax);\n\tTree[now].lmax = Tree[now << 1].lmax;\n\tif(Tree[now<<1].lmax==Tree[now<<1].rig-Tree[now<<1].lef+1)\n\t\tTree[now].lmax += Tree[now << 1 | 1].lmax;\n\tTree[now].rmax = Tree[now << 1 | 1].rmax;\n\tif(Tree[now<<1|1].rmax==Tree[now<<1|1].rig-Tree[now<<1|1].lef+1)\n\t\tTree[now].rmax += Tree[now << 1].rmax;\n}\nvoid build(int now,int l,int r)\n{\n\tTree[now].lef = l;\n\tTree[now].rig = r;\n\tTree[now].aim = -1;\n\tif(l==r)\n\t{\n\t\tTree[now].maxn = Tree[now].lmax = Tree[now].rmax = 1;\n\t\treturn;\n\t}\n\tint mid = l + r >> 1;\n\tbuild(now << 1, l, mid);\n\tbuild(now << 1 | 1, mid + 1, r);\n\tpushup(now);\n}\nvoid pushdown(int now)\n{\n\tif(Tree[now].aim!=-1)\n\t{\n\t\tif(Tree[now].aim==0)\n\t\t{\n\t\t\tTree[now << 1].maxn = Tree[now << 1].lmax = Tree[now << 1].rmax = Tree[now << 1].rig - Tree[now << 1].lef + 1;\n\t\t\tTree[now << 1 | 1].maxn = Tree[now << 1 | 1].lmax = Tree[now << 1 | 1].rmax = Tree[now << 1 | 1].rig - Tree[now << 1 | 1].lef + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tTree[now << 1].maxn = Tree[now << 1].lmax = Tree[now << 1].rmax = 0;\n\t\t\tTree[now << 1 | 1].maxn = Tree[now << 1 | 1].lmax = Tree[now << 1 | 1].rmax = 0;\n\t\t}\n\t\tTree[now << 1].aim = Tree[now << 1 | 1].aim = Tree[now].aim;\n\t\tTree[now].aim = -1;\n\t}\n}\nvoid modify(int now,int l,int r,int x)\n{\n\tif(l<=Tree[now].lef&&Tree[now].rig<=r)\n\t{\n\t\tTree[now].aim = x;\n\t\tif(x==1)\n\t\t\tTree[now].maxn = Tree[now].lmax = Tree[now].rmax = 0;\n\t\telse\n\t\t\tTree[now].maxn = Tree[now].lmax = Tree[now].rmax = Tree[now].rig - Tree[now].lef + 1;\n\t\treturn;\n\t}\n\tpushdown(now);\n\tint mid = Tree[now].lef + Tree[now].rig >> 1;\n\tif(l<=mid)\n\t\tmodify(now << 1, l, r, x);\n\tif(r>mid)\n\t\tmodify(now << 1 | 1, l, r, x);\n\tpushup(now);\n}\nint query(int now,int x)\n{\n\tpushdown(now);\n\tif(Tree[now].maxn<x)\n\t\treturn Tree[now].rig - Tree[now].rmax + 1;\n\tif(Tree[now<<1].maxn>=x)\n\t\treturn query(now << 1, x);\n\telse if(Tree[now<<1].rmax+Tree[now<<1|1].lmax>=x)\n\t\treturn query(now << 1, x);\n\telse if(Tree[now<<1|1].maxn>=x)\n\t\treturn query(now << 1 | 1, x);\n}\nint main()\n{\n\tint n, m;\n\tscanf(\"%d%d\", &n, &m);\n\tbuild(1, 1, n);\n    int cnt = 0;\n    for (int i = 1; i <= m;i++)\n\t{\n\t\tchar op[2];\n\t\tscanf(\"%s\", op);\n\t\tif(*op=='A')\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\", &x);\n\t\t\tif(Tree[1].maxn>=x)\n\t\t\t{\n\t\t\t\tint left = query(1, x);\n\t\t\t\tmodify(1, left, left + x - 1, 1);\n\t\t\t}\n\t\t\telse\n                cnt++;\n        }\n\t\telse \n\t\t{\n\t\t\tint left;\n\t\t\tint len;\n\t\t\tscanf(\"%d%d\", &left, &len);\n\t\t\tmodify(1, left, len, 0);\n\t\t}\n\t}\n    printf(\"%d\\n\", cnt);\n}\n```\n",
        "postTime": 1622465600,
        "uid": 278481,
        "name": "Link_Space",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 OF P3071"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u6c34\u9898\u3002\n\n\u7ef4\u62a4\u533a\u95f4\u6700\u957f\u8fde\u7eed\u548c\u5373\u53ef\uff0c\u7b80\u5355\u8bf4\u4e0b\u533a\u95f4\u5982\u4f55\u7531\u4e24\u4e2a\u5b50\u533a\u95f4\u8f6c\u79fb\uff0c\u8003\u8651\u4e09\u79cd\u60c5\u51b5\uff1a\n\n\u5de6\u513f\u5b50\u5de6\u7aef\u6700\u957f\uff0c\u53f3\u513f\u5b50\u53f3\u6bb5\u6700\u957f\uff0c\u6216\u8005\u5de6\u513f\u5b50\u53f3\u6bb5\u52a0\u53f3\u513f\u5b50\u5de6\u7aef\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n\n\u67e5\u627e\u7684\u65f6\u5019\uff0c\u7c7b\u4f3c\u4e8e\u4e8c\u5206\u601d\u60f3\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1000005;\nstruct nod{\n\tint lmax,rmax,len,sum,lazy;\n}tree[N*4];\nint n,m,ans;\nvoid spread(int p){//\u5411\u4e0b\u4f20\u6807\u8bb0 \n\tif(tree[p].lazy==0)return ;\n\telse if(tree[p].lazy==1){\n\t\ttree[p].lazy=0;\n\t\ttree[p*2].lazy=tree[p*2+1].lazy=1;\n\t\ttree[p*2].sum=tree[p*2].lmax=tree[p*2].rmax=0;\n\t\ttree[p*2+1].sum=tree[p*2+1].lmax=tree[p*2+1].rmax=0;\n\t}\n\telse {\n\t\ttree[p].lazy=0;\n\t\ttree[p*2].lazy=tree[p*2+1].lazy=2;\n\t\ttree[p*2].sum=tree[p*2].lmax=tree[p*2].rmax=tree[p*2].len;\n\t\ttree[p*2+1].sum=tree[p*2+1].lmax=tree[p*2+1].rmax=tree[p*2+1].len;\n\t}\n}\nvoid build(int l,int r,int p){\n\ttree[p].lazy=0;\n\ttree[p].sum=tree[p].len=tree[p].lmax=tree[p].rmax=r-l+1;\n\tif(l==r)return ;\n\tint mid=(l+r)/2;\n\tbuild(l,mid,p*2);\n\tbuild(mid+1,r,p*2+1);\n}\nvoid rew(int p){//\u5411\u4e0a\u5408\u5e76 \n\tif(tree[p*2].sum==tree[p*2].len){\n\t\ttree[p].lmax=tree[p*2].sum+tree[p*2+1].lmax;\n\t}\n\telse tree[p].lmax=tree[p*2].lmax;\n\tif(tree[p*2+1].sum==tree[p*2+1].len){\n\t\ttree[p].rmax=tree[p*2+1].sum+tree[p*2].rmax;\n\t}\n\telse tree[p].rmax=tree[p*2+1].rmax;\n\ttree[p].sum=max(tree[p*2].sum,max(tree[p*2+1].sum,tree[p*2].rmax+tree[p*2+1].lmax));\t\n}\nvoid chang(int p,int l,int r,int flag,int L,int R){//\u52a0\u4eba\uff0c\u51cf\u4eba\u4e24\u79cd\u4fee\u6539 \n\tspread(p);\n\tif(l>=L&&r<=R){\n\t\tif(flag==1)\n\t\t\ttree[p].lmax=tree[p].rmax=tree[p].sum=0; \n\t\telse \n\t\t\ttree[p].lmax=tree[p].rmax=tree[p].sum=tree[p].len;\n\t\ttree[p].lazy=flag;\n\t\treturn ;\n\t}\n\tint mid=(l+r)/2;\n\tif(L<=mid)chang(p*2,l,mid,flag,L,R);\n\tif(R>mid)chang(p*2+1,mid+1,r,flag,L,R);\n\trew(p);\n}\nint find(int p,int l,int r,int lenth){//\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u67e5\u627e \n\tspread(p);\n\tif(l==r)return l;\n\tint mid=(l+r)/2;\n\tif(tree[p*2].sum>=lenth)return find(p*2,l,mid,lenth);//\u627e\u5de6\u8fb9 \n\telse if(tree[p*2].rmax+tree[p*2+1].lmax>=lenth)return mid-tree[p*2].rmax+1;//\u5728\u4e2d\u95f4 \n\telse return find(p*2+1,mid+1,r,lenth);//\u627e\u53f3\u8fb9 \n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tbuild(1,n,1);\n\tfor(int i=1;i<=m;i++){\n\t\tchar op;\n\t\tint a,b;\n\t\tcin>>op;\n\t\tif(op=='A'){\n\t\t\tscanf(\"%d\",&a);\n\t\t\tif(tree[1].sum>=a){\n\t\t\t\tint left=find(1,1,n,a);//\u627e\u6700\u5de6\u7aef\u7b26\u5408\u7684 \n\t\t\t\tchang(1,1,n,1,left,left+a-1);//\u4e0d\u8981\u5fd8\u8bb0\u4fee\u6539 \n\t\t\t}\n\t\t\telse ans++;//\u65e0\u6cd5\u64cd\u4f5c\uff0c\u7d2f\u8ba1\u7b54\u6848 \n\t\t}\n\t\telse {\n\t\t\tscanf(\"%d%d\",&a,&b);\n\t\t\tchang(1,1,n,2,a,b);\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n} \n```\n",
        "postTime": 1622378105,
        "uid": 277664,
        "name": "\u968f\u4fbfAK",
        "ccfLevel": 6,
        "title": "P3071 [USACO13JAN]Seating G \u9898\u89e3"
    },
    {
        "content": "### Solution\n\n\u5728\u8fd9\u9898\u4e2d\u6211\u4eec\u9700\u8981\u505a\u4e24\u4ef6\u4e8b\uff1a\n\n1. \u5728\u8fd9 $n$ \u4e2a\u5ea7\u4f4d\u4e2d\u5bfb\u627e\u8fde\u7eed $a$ \u4e2a\u7a7a\u5ea7\u4f4d\uff0c\u5982\u679c\u80fd\u627e\u5230\uff0c\u5c31\u628a\u8fd9 $a$ \u4e2a\u5ea7\u4f4d\u7f6e\u4e3a\u975e\u7a7a\u7684\u3002\n\n2. \u628a\u533a\u95f4 $[a,b]$ \u7684\u5ea7\u4f4d\u7f6e\u4e3a\u7a7a\u5ea7\u4f4d\u3002\n\n\u628a\u8fd9 $n$ \u4e2a\u5ea7\u4f4d\u62bd\u8c61\u6210\u4e00\u4e2a 01 \u4e32\uff0c\u7a7a\u7684\u5ea7\u4f4d\u4e3a 1\uff0c\u975e\u7a7a\u7684\u5ea7\u4f4d\u4e3a 0\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u533a\u95f4\u6700\u957f\u8fde\u7eed\u975e\u96f6\u5b50\u4e32\uff0c\u5e76\u8bb0\u5f55\u4e0b\u5b83\u7684\u5de6\u7aef\u70b9\u3002\u5982\u679c\u6709\u76f8\u540c\u957f\u5ea6\u7684\uff0c\u53d6\u5de6\u7aef\u70b9\u66f4\u9760\u5de6\u7684\u90a3\u4e00\u4e2a\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c 1\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u8be2\u533a\u95f4 $[1,n]$ \u7684\u6700\u957f\u8fde\u7eed\u975e\u96f6\u5b50\u4e32\uff0c\u7136\u540e\u5224\u65ad\u4e00\u4e0b\u5176\u957f\u5ea6\u662f\u5426\u5927\u4e8e\u7b49\u4e8e $a$\u3002\u8bbe\u8fd9\u4e2a\u5b50\u4e32\u7684\u5de6\u7aef\u70b9\u4e3a $l$\uff0c\u82e5\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e $a$\uff0c\u5c31\u628a\u533a\u95f4 $[l,l+a-1]$ \u5168\u90e8\u7f6e\u4e3a 0\uff1b\u5426\u5219\uff0c\u5931\u8d25\u6b21\u6570\u52a0 1\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c 2\uff0c\u76f4\u63a5\u628a\u533a\u95f4 $[a,b]$ \u7f6e\u4e3a 0 \u5373\u53ef\u3002\n\n### code\n\n```cpp\n#include<bits/stdc++.h>\n#define N 500005\n#define ls k<<1\n#define rs k<<1|1\n#define int long long\nusing namespace std;\nstruct tree{\n\tint l,r,v,len,ll,rl,add;\n}tr[N<<2];\n//v \u662f\u8fd9\u6bb5\u533a\u95f4\u6700\u957f\u8fde\u7eed\u975e\u96f6\u5b50\u4e32\u7684\u957f\u5ea6\n//len \u662f\u8fd9\u6bb5\u533a\u95f4\u7684\u957f\u5ea6\n//ll \u662f\u4ece\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u5f00\u59cb\uff0c\u6700\u957f\u8fde\u7eed\u975e\u96f6\u5b50\u4e32\u7684\u957f\u5ea6\n//rl \u662f\u4ece\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u5f00\u59cb\uff0c\u6700\u957f\u8fde\u7eed\u975e\u96f6\u5b50\u4e32\u7684\u957f\u5ea6\n//add \u662f\u61d2\u6807\u8bb0\nint n,m;\nvoid push_up(int k){//\u4ee5\u4e0b\u7684\u7ebf\u6bb5\u6811\u662f\u7ef4\u62a4\u533a\u95f4\u6700\u957f\u8fde\u7eed\u975e\u96f6\u5b50\u4e32\u7684\u7248\u672c\uff0c\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7406\u89e3\u4e00\u4e0b\u3002\n\tif(tr[ls].ll==tr[ls].len) tr[k].ll=tr[ls].len+tr[rs].ll;\n\telse tr[k].ll=tr[ls].ll;\n\tif(tr[rs].rl==tr[rs].len) tr[k].rl=tr[ls].rl+tr[rs].len;\n\telse tr[k].rl=tr[rs].rl;\n\ttr[k].v=max(max(tr[rs].v,tr[ls].v),tr[rs].ll+tr[ls].rl);\n}\nvoid push_down(int k){\n\tif(!tr[k].add) return;\n\ttr[ls].add=tr[rs].add=tr[k].add;\n\tif(tr[k].add==1){\n\t\ttr[ls].v=tr[ls].ll=tr[ls].rl=tr[ls].len;\n\t\ttr[rs].v=tr[rs].ll=tr[rs].rl=tr[rs].len;\n\t}else{\n\t\ttr[ls].v=tr[ls].ll=tr[ls].rl=0;\n\t\ttr[rs].v=tr[rs].ll=tr[rs].rl=0;\n\t}\n\ttr[k].add=0;\n}\nvoid build(int k,int l,int r){\n\ttr[k].l=l,tr[k].r=r;\n\ttr[k].v=tr[k].len=tr[k].ll=tr[k].rl=r-l+1;\n\tif(l==r) return;\n\tint mid=l+r>>1;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n}\nvoid update(int k,int l,int r,int tg){\n\tif(tr[k].l>=l && tr[k].r<=r){\n\t\tif(tg==1) tr[k].v=tr[k].ll=tr[k].rl=tr[k].len;\n\t\telse tr[k].v=tr[k].ll=tr[k].rl=0;\n\t\ttr[k].add=tg;\n\t\treturn;\n\t}\n\tpush_down(k);\n\tint mid=tr[k].l+tr[k].r>>1;\n\tif(l<=mid) update(ls,l,r,tg);\n\tif(r>mid) update(rs,l,r,tg);\n\tpush_up(k);\n}\nint query(int k,int l,int r,int ln){\n\tif(l==r) return l;\n\tpush_down(k);\n\tint mid=tr[k].l+tr[k].r>>1;\n\tif(tr[ls].v>=ln) return query(ls,l,mid,ln);\n\telse if(tr[ls].rl+tr[rs].ll>=ln) return mid-tr[ls].rl+1;\n\treturn query(rs,mid+1,r,ln);\n}\nsigned main(){\n    int ans=0;\n\tscanf(\"%lld%lld\",&n,&m);\n\tbuild(1,1,n);\n\tfor(int i=1,st,sum;i<=m;++i){\n\t\tchar ch[10];\n\t\tcin>>ch+1;\n\t\tif(ch[1]=='A'){\n\t\t\tscanf(\"%lld\",&sum);\n\t\t\tif(tr[1].v>=sum){\n\t\t\t\tst=query(1,1,n,sum);\n\t\t\t\tupdate(1,st,st+sum-1,2);\n\t\t\t}else ans++;\n\t\t}else{\n\t\t\tscanf(\"%lld%lld\",&st,&sum);\n\t\t\tupdate(1,st,sum,1);\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1679800779,
        "uid": 491321,
        "name": "Erotate",
        "ccfLevel": 0,
        "title": "[USACO13JAN]Seating G \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u91cc\u6211\u7528\u4e86\u4e00\u4e2a\u5947\u5999\u7684\u6570\u636e\u7ed3\u6784 \u2014\u2014\u73c2\u6735\u8389\u6811\uff01\n\n\u524d\u7f6e\u829d\u58eb\uff1a\u5bf9\u662f ```std::set``` \u7684\u719f\u7ec3\u4f7f\u7528\u3002\n\n### \u6838\u5fc3\u601d\u60f3\n\n\u628a\u503c\u76f8\u540c\u7684\u533a\u95f4\u653e\u5728\u4e00\u4e2a ```set``` \u91cc\uff0c\u4f7f\u5176\u5b8c\u6210\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u7684\u529f\u80fd\u3002\n\n### \u4e3b\u8981\u64cd\u4f5c\n\n\u64cd\u4f5c1\uff1a```spilt```\n\n\u4f5c\u7528\uff1a\u628a ```set``` \u4e2d\u7684\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u4ece $x$ \u5904\u5206\u88c2\u4e3a\u533a\u95f4 $[l,x)$ \u548c $[x,r]$ \u5e76\u8fd4\u56de\u540e\u8005\u7684\u8fed\u4ee3\u5668\u3002\n\n\u5b9e\u73b0\u8fc7\u7a0b\uff1a\u7528 ```set``` \u4e2d\u7684 ```upper_bound``` \u51fd\u6570\u67e5\u627e\u4f4d\u7f6e $x$\u3002\n\n\u7528\u6cd5\uff1a\u5bf9\u533a\u95f4 $[l,r]$ \u8fdb\u884c\u64cd\u4f5c\u65f6\u8f6c\u6362\u4e3a ```set``` \u4e0a $[spilt(l),spilt(r+1) )$ \u7684\u64cd\u4f5c\u3002\n\n**Code:**\n```cpp\nauto spirt(int u) {\n\tif (u > sz) return cht.end();\n\tauto it = --cht.upper_bound({ u,0,0 });\n\tif (it->l == u) return it;\n\tint nl = it->l, nr = it->r, nv = it->v;\n\tcht.erase(it); cht.insert({ nl, u - 1, nv });\n\treturn cht.insert({ u, nr, nv }).first;\n}\n```\n\n\u64cd\u4f5c2\uff1a```assign```\n\n\u4f5c\u7528\uff1a\u5c06\u533a\u95f4 $[l,r]$ \u8d4b\u503c\u4e3a $v$ \u3002\n\n\u5b9e\u73b0\u8fc7\u7a0b\uff1a\u4f7f\u7528 ```spilt(l)``` \u548c ```spilt(r+1)``` \u540e\u5220\u9664\u4ece ```spilt(l)``` \u81f3 ```spilt(r+1)``` \u95f4\u7684\u6240\u6709\u5143\u7d20\uff0c\u5e76\u52a0\u5165\u503c\u4e3a $v$ \u7684\u533a\u95f4 $[l,r] $\u3002\n\n**Code:**\n```cpp\nvoid assign(int l, int r, int v) {\n\tauto ir = spirt(r + 1), il = spirt(l);\n\tcht.erase(il, ir);\n\tcht.insert({ l,r,v });\n}\n```\n\n\u64cd\u4f5c3\uff1a```findseat```\n\n\u4f5c\u7528\uff1a\u5224\u65ad\u6709\u6ca1\u6709\u957f\u5ea6 $\\ge n$ \u7684\u503c\u4e3a $0$ \u7684\u533a\u95f4\uff0c\u5982\u6ca1\u6709\uff0c\u8fd4\u56de $1$\u3002\n\n\u5b9e\u73b0\u8fc7\u7a0b\uff1a\u5bf9 ```set```\u5b9e\u65bd\u904d\u5386\u5373\u53ef\u3002\n\n**Code:**\n```cpp\nint findseat(int n) {\n\tint sl = 1;\n\tfor (auto it = cht.begin(); it != cht.end(); ++it) {\n\t\tif (it->v == 1) sl = it->r + 1;\n\t\tif (it->r - sl + 1 >= n) {\n\t\t\tassign(sl, sl + n - 1, 1);\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\n```\n\n\u5176\u4f59\u64cd\u4f5c\u5747\u53ef\u8f6c\u6362\u4e3a ```set``` \u4e0a\u7684\u533a\u95f4\u64cd\u4f5c\n\n----\n\n### \u5b8c\u6574\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct chtree {\n\tint sz;\n\tstruct Node {\n\t\tint l, r, v;\n\t\tbool operator<(const Node& nd) const { return l < nd.l; }\n\t};\n\tset<Node> cht;\n\tauto spirt(int u) {\n\t\tif (u > sz) return cht.end();\n\t\tauto it = --cht.upper_bound({ u,0,0 });\n\t\tif (it->l == u) return it;\n\t\tint nl = it->l, nr = it->r, nv = it->v;\n\t\tcht.erase(it); cht.insert({ nl, u - 1, nv });\n\t\treturn cht.insert({ u, nr, nv }).first;\n\t}\n\tchtree(int _sz) { sz = _sz; cht.insert({ 0,sz,0 }); }\n\tvoid assign(int l, int r, int v) {\n\t\tauto ir = spirt(r + 1), il = spirt(l);\n\t\tcht.erase(il, ir);\n\t\tcht.insert({ l,r,v });\n\t}\n\tint findseat(int n) {\n\t\tint sl = 1;\n\t\tfor (auto it = cht.begin(); it != cht.end(); ++it) {\n\t\t\tif (it->v == 1) sl = it->r + 1;\n\t\t\tif (it->r - sl + 1 >= n) {\n\t\t\t\tassign(sl, sl + n - 1, 1);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\treturn 1;\n\t}\n};\nint main() {\n\tios::sync_with_stdio(false), cin.tie(0);\n\tint n, m, ans = 0; cin >> n >> m; chtree ct(n);\n\tfor (int i = 0, l, r; i < m; ++i) {\n\t\tchar opt;\n\t\tcin >> opt;\n\t\tif (opt == 'L') {\n\t\t\tcin >> l >> r;\n\t\t\tct.assign(l, r, 0);\n\t\t} else {\n\t\t\tcin >> l;\n\t\t\tans += ct.findseat(l);\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```\n\n#### \u8fd0\u884c\u65f6\u95f4 (o2)\uff1a\n\n\u63d0\u4ea4 $2$ \u6b21\uff0c\u5927\u53f7\u8fd0\u884c\u65f6\u95f4 $1.03s$ , \u5c0f\u53f7 $1.04s$ \u3002\n\n\u8fd0\u884c\u65f6\u95f4\u6392\u540d\u76ee\u524d\u4e3a\u7b2c $6$\u3002",
        "postTime": 1659518022,
        "uid": 581358,
        "name": "cyc001",
        "ccfLevel": 0,
        "title": "P3071"
    },
    {
        "content": "\u672c\u9898\u663e\u7136\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u6211\u4eec\u7528 $1$ \u4ee3\u8868\u7a7a\u623f\uff0c$0$ \u4ee3\u8868\u6709\u4eba\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u7ebf\u6bb5\u6811\uff0c\u9700\u8981\u8bb0\u5f55\u4e00\u4e0b\u4fe1\u606f\uff1a\n\n```cpp\nstruct SgT{\n\tint l,r;\n\tint lmax,rmax;//\u5de6\u7aef1\u7684\u4e2a\u6570\u548c\u53f3\u7aef1\u7684\u4e2a\u6570\n\tint ans;//\u533a\u95f4\u4e2d\u6700\u591a\u8fde\u7eed1\u7684\u4e2a\u6570\n\tint add;//\u61d2\u60f0\u6807\u8bb0\n\t#define l(p) tree[p].l\n\t#define r(p) tree[p].r\n\t#define rx(p) tree[p].rmax\n\t#define lx(p) tree[p].lmax\n\t#define add(p) tree[p].add\n\t#define ans(p) tree[p].ans\n}tree[M*4];\n```\n\n\u5bf9\u4e8e\u672c\u9898\uff0c\u7ef4\u62a4 `lmax` \u4e0e `rmax` \u548c `ans` \u8f83\u4e3a\u5bb9\u6613\uff0c\u8fd9\u91cc\u505a\u51fa\u8f83\u4e3a\u7b80\u5355\u7684\u89e3\u91ca\u3002\n\n\u5bf9\u4e8e\u8282\u70b9 `p`\uff0c\u5176 `lmax` \u5e94\u4e3a\u8282\u70b9 `p*2` \u7684 `lmax` \uff0c\u5176\u82e5\u9700\u6269\u5c55\u5219\u5fc5\u987b\u6ee1\u8db3 `lx(p*2)=r(p*2)-l(p*2)+1`\uff0c\u5373\u5de6\u8fb9\u5b50\u6811\u7684\u533a\u95f4\u662f\u5168 $1$\uff0c\u90a3\u4e48\u624d\u53ef\u4ee5\u4e0e\u53f3\u5b50\u6811\u7684 `lmax` \u5408\u5e76\u3002\n\n\u7ef4\u62a4\u5176 `rmax` \u540c\u7406\u3002\n\n\u7ef4\u62a4\u8282\u70b9 `p` \u7684 `ans` \u9700\u8981\u5728\u4e09\u4e2a\u503c\u4e2d\u53d6\u6700\u5927\u3002\u8fd9\u5176\u5b9e\u5f88\u597d\u7406\u89e3\uff0c`p` \u8282\u70b9\u7684 `ans` \u53ea\u53ef\u80fd\u4e3a `p*2` \u8282\u70b9\u7684 `ans` \u6216 `p*2+1` \u8282\u70b9\u7684 `ans` \u6216 `p*2` \u8282\u70b9\u7684 `rmax` \u4e0e `p*2+1` \u8282\u70b9\u7684 `lmax` \u8fdb\u884c\u5408\u6210\u3002\n\n\u6bd4\u8f83\u91cd\u8981\u7684\u662f\u672c\u9898 `ask` \u51fd\u6570\u7684\u8bbe\u8ba1\u3002\n\n\u672c\u9898 `ask` \u51fd\u6570\u5e94\u8fd4\u56de\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5de6\u7aef\u70b9\uff0c\u8fd9\u65f6\u6211\u4eec\u91c7\u7528\u533a\u95f4\u8986\u76d6\u7684\u5199\u6cd5\u5c31\u4e0d\u884c\u4e86\uff0c\u6211\u4eec\u9700\u8981\u91c7\u7528\u7cbe\u51c6\u8986\u76d6\u7684\u65b9\u6cd5\u3002\n\n```cpp\nint ask(int p,int l,int r,int x)\n{\n\tif(l==r)return l;//\u5982\u679c\u627e\u5230\u7b54\u6848\n\tspread(p);//\u4f18\u5148\u4f20\u9012\u6807\u8bb0\n\tint mid=(l+r)>>1;\n\tif(ans(p*2)>=x)return ask(p*2,l,mid,x);//\u4f18\u5148\u5728\u5de6\u5b50\u6811\u627e\uff0c\u5982\u679c\u5de6\u5b50\u6811\u7b54\u6848\u6bd4x\u5927\u5c31\u8fdb\u5de6\u5b50\u6811\n\tif(rx(p*2)+lx(p*2+1)>=x)return mid-rx(p*2)+1;//\u5de6\u5b50\u6811\u7b54\u6848\u4e0d\u591f\u5927\uff0c\u5c1d\u8bd5\u5de6\u53f3\u5b50\u6811\u62fc\u63a5\n\treturn ask(p*2+1,mid+1,r,x);//\u4ee5\u4e0a\u90fd\u4e0d\u884c\uff0c\u53ea\u80fd\u627e\u53f3\u5b50\u6811\n}\n```\n\n\u81f3\u6b64\uff0c\u89e3\u51b3\u672c\u9898\u5e94\u8be5\u5df2\u7ecf\u6ca1\u6709\u592a\u5927\u95ee\u9898\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nconst int M=500005;\nstruct SgT{\n\tint l,r;\n\tint lmax,rmax;\n\tint ans;\n\tint add;\n\t#define l(p) tree[p].l\n\t#define r(p) tree[p].r\n\t#define rx(p) tree[p].rmax\n\t#define lx(p) tree[p].lmax\n\t#define add(p) tree[p].add\n\t#define ans(p) tree[p].ans\n}tree[M*4];\nvoid build(int p,int l,int r)\n{\n\tl(p)=l,r(p)=r;\n\tif(l==r){\n\t\tlx(p)=1,rx(p)=1;\n\t    ans(p)=1;\n\t    add(p)=0;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tlx(p)=r-l+1,rx(p)=r-l+1;\n\tans(p)=r-l+1;\n\tadd(p)=0;\n\tbuild(p*2,l,mid);\n\tbuild(p*2+1,mid+1,r);\n}\nvoid spread(int p)\n{\n\tif(add(p)){\n\t\tif(add(p)==1){\n\t\t\tlx(p*2)=lx(p*2+1)=0;\n\t\t\trx(p*2)=rx(p*2+1)=0;\n\t\t\tans(p*2)=ans(p*2+1)=0;\n\t\t\tadd(p*2)=add(p*2+1)=1;\n\t\t}\n\t\telse{\n\t\t\tlx(p*2)=r(p*2)-l(p*2)+1;\n\t\t\trx(p*2)=r(p*2)-l(p*2)+1;\n\t\t\tans(p*2)=r(p*2)-l(p*2)+1;\n\t\t\tlx(p*2+1)=r(p*2+1)-l(p*2+1)+1;\n\t\t\trx(p*2+1)=r(p*2+1)-l(p*2+1)+1;\n\t\t\tans(p*2+1)=r(p*2+1)-l(p*2+1)+1;\n\t\t\tadd(p*2)=add(p*2+1)=-1;\n\t\t}\n\t\tadd(p)=0;\n\t}\n}\nvoid change(int p,int l,int r,int x)\n{\n\tif(l<=l(p)&&r>=r(p)){\n\t\tadd(p)=x;\n\t\tif(x==1){\n\t\t\tlx(p)=0;\n\t\t\trx(p)=0;\n\t\t\tans(p)=0;\n\t\t}\n\t\telse{\n\t\t\tlx(p)=r(p)-l(p)+1;\n\t\t\trx(p)=r(p)-l(p)+1;\n\t\t\tans(p)=r(p)-l(p)+1;\n\t\t}\n\t\t//puts(\"uioifoasd\");\n\t\treturn;\n\t}\n\tspread(p);\n\tint mid=(l(p)+r(p))>>1;\n\tif(l<=mid)change(p*2,l,r,x);\n\tif(r>mid)change(p*2+1,l,r,x);\n\tlx(p)=lx(p*2),rx(p)=rx(p*2+1);\n\tif(ans(p*2+1)==r(p*2+1)-l(p*2+1)+1)rx(p)+=rx(p*2);\n\tif(ans(p*2)==r(p*2)-l(p*2)+1)lx(p)+=lx(p*2+1);\n\tans(p)=max(ans(p*2),max(ans(p*2+1),rx(p*2)+lx(p*2+1)));\n}\nint ask(int p,int l,int r,int x)\n{\n\tif(l==r)return l;\n\tspread(p);\n\tint mid=(l+r)>>1;\n\tif(ans(p*2)>=x)return ask(p*2,l,mid,x);\n\t//printf(\"%d %d\\n\",rx(p*2),lx(p*2+1));\n\tif(rx(p*2)+lx(p*2+1)>=x)return mid-rx(p*2)+1;\n\treturn ask(p*2+1,mid+1,r,x);\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tbuild(1,1,n);\n\tint cnt=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tchar op[5];\n\t\tscanf(\"%s\",op+1);\n\t\tif(op[1]=='A'){\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(ans(1)<x){\n\t\t\t\tcnt++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint u=ask(1,1,n,x);\n\t\t\t//printf(\"%d\\n\",u);\n\t\t\t//puts(\"oooo\");\n\t\t\tchange(1,u,u+x-1,1);\n\t\t}\n\t\telse{\n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tchange(1,x,y,-1);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",cnt);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1627824701,
        "uid": 240405,
        "name": "wkjwkj",
        "ccfLevel": 0,
        "title": "[USACO13JAN]Seating G"
    },
    {
        "content": "\u663e\u7136\u8fd9\u662f\u4e00\u9053\u7ebf\u6bb5\u6811\uff0c\u4e00\u4e2a\u4e0d\u9519\u7684\u7ebf\u6bb5\u6811\u3002  \n\u95f2\u8bdd\u5c11\u8bf4\uff0c\u5207\u5165\u6b63\u9898\u2014\u2014   \n\n---\n\u7b80\u5355\u6765\u8bf4\uff0c\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u662f\u8ba9\u6211\u4eec\u8fdb\u884c\u4e24\u4e2a\u64cd\u4f5c\uff0c\u4e00\u662f\u533a\u95f4\u8d4b\u503c\uff08$1$ \u4e3a\u8fdb\u53bb\uff0c$2$ \u4e3a\u79bb\u5f00\uff09\uff0c\u4e8c\u662f\u627e\u4e00\u4e2a\u6700\u9760\u5de6\u7684\u8fde\u7eed\u533a\u95f4\u5143\u7d20\u90fd\u662f $2$ \u4e14\u957f\u5ea6 $\\ge a$ \u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u3002  \n\n\u4e00\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u5f00\u4e00\u4e2a $lazy$ \u8868\u793a\u5f53\u524d\u8282\u70b9\u7684\u503c\uff0c\u4e8c\u7684\u64cd\u4f5c\u5219\u662f\u8be5\u9898\u7684\u91cd\u70b9\u4e86\u3002  \n\n\u663e\u7136\uff0c\u7ebf\u6bb5\u6811\u8282\u70b9 $[l,r]$ \u7684\u6700\u957f\u8fde\u7eed\u5143\u7d20\u90fd\u4e3a $2$ \u7684\u5c0f\u533a\u95f4 $[l',r']$ \u8981\u4e0d\u7136\u90fd\u5728 $[l,mid]$\uff0c\u8981\u4e0d\u7136\u90fd\u5728 $[mid + 1,r]$\uff0c\u8981\u4e0d\u7136\u6a2a\u8de8\u8fd9\u4e24\u4e2a\u533a\u95f4\uff08$mid = (l + r) \\div 2 $ \u5411\u4e0b\u53d6\u6574\uff09\u3002  \n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u518d\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e09\u4e2a\u503c $ll,rr,len$\uff0c$ll$ \u8868\u793a\u4ece\u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u957f\u8fde\u7eed\u5143\u7d20\u90fd\u4e3a $2$ \u7684\u533a\u95f4\u957f\u5ea6\uff0c$rl$ \u8868\u793a\u4ece\u53f3\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u957f\u8fde\u7eed\u5143\u7d20\u90fd\u4e3a $2$ \u7684\u533a\u95f4\u957f\u5ea6\uff0c$len$ \u4e3a\u8fd9\u4e2a\u533a\u95f4\u6700\u957f\u8fde\u7eed\u5143\u7d20\u90fd\u4e3a $2$ \u7684\u533a\u95f4\u603b\u957f\u3002  \n\n---\n\n\u6bd5\u7adf\u662f\u7ebf\u6bb5\u6811\uff0c\u8003\u8651 push\\_up \u548c push\\_down\u3002\u5bf9\u4e8e push\\_up\uff0c\u66f4\u65b0 $ll_{now}$ \u5219\u662f\u770b $ll_{ls_{now}}$ \u662f\u4e0d\u662f\u5168\u7a7a\uff0c\u5982\u679c\u5168\u7a7a\uff0c\u8fd9\u8bf4\u660e $ll_{ls_{now}}$ \u80fd\u63a5\u4e0a $ll_{rs_{now}}$\uff0c\u90a3\u4e48 $ll_{now} = ll_{ls_{now}} + ll{rs_{now}}$\uff0c\u53cd\u4e4b\u5c31\u662f $ll_{ls_{now}}$\u3002\u81f3\u4e8e $rl$ \u540c\u7406\u3002$len$ \u7684\u8bdd\u8981\u4e48\u7136\u90fd\u5728\u5de6\u513f\u5b50\uff0c\u5c31\u662f $len_{ls_{now}}$\uff0c\u8981\u4e48\u7136\u90fd\u5728\u53f3\u513f\u5b50\uff0c\u5c31\u662f $len_{rs_{now}}$\uff0c\u8981\u4e48\u7136\u5c31\u662f\u6a2a\u8de8\u4e24\u4e2a\u533a\u95f4\uff0c\u5c31\u662f $rl_{ls_{now}} + ll_{rs_{now}}$\uff0c\u53d6 $\\max$ \u5c31\u597d\u4e86\u3002  \n\n\u7136\u540e\u6211\u4eec\u5c31\u8981\u8003\u8651 push\\_down \u4e86\u3002\u6211\u4eec\u8981\u8003\u8651 $now$ \u7684\u5de6\u53f3\u513f\u5b50\u7684 $len,ll,rl$\u3002\u5f53 $lazy = 2$\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u8282\u70b9\u5168\u7a7a\uff0c\u90a3\u4e48\u4e09\u8005\u90fd\u662f\u8fd9\u4e2a\u533a\u95f4\u7684\u957f\u5ea6\uff0c\u53cd\u4e4b\u4e3a $0$\u3002\u7136\u540e\u4e0b\u653e\u4e00\u4e0b\u5de6\u53f3\u513f\u5b50\u7684 $lazy$ \u5c31\u597d\u4e86\u3002  \n\n---\n\n\u8fd8\u6709\u4e00\u4e2a\u8981\u8003\u8651\uff0c\u5c31\u662f\u7ebf\u6bb5\u6811\u7684\u4e24\u4e2a\u64cd\u4f5c\uff0c\u4e00\u4e2a\u662f\u83b7\u53d6\u5927\u533a\u95f4\u6700\u9760\u5de6\u7684\u8fde\u7eed\u5143\u7d20\u90fd\u4e3a $2$ \u4e14\u957f\u5ea6 $\\ge a$ \u7684\u8fd9\u6837\u4e00\u4e2a\u5b50\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u3002\u6211\u4eec\u6765\u5206\u7c7b\u8ba8\u8bba\uff1a  \n1. \u5de6\u513f\u5b50\u591f\u7528\uff0c\u9012\u5f52\u5de6\u5b50\u6811\uff0c\u4f18\u5148\u9012\u5f52\u5de6\u5b50\u6811\u662f\u56e0\u4e3a\u8981\u83b7\u5f97\u6700\u9760\u5de6\u533a\u95f4\u3002  \n2. \u4e24\u4e2a\u533a\u95f4\u5408\u8d77\u6765\u5c31\u591f\u7528\u4e86\uff0c\u8ba1\u7b97\u540e\u8fd4\u56de\u3002\n3. 1 \u548c 2 \u90fd\u4e0d\u6210\u7acb\uff0c\u9012\u5f52\u53f3\u5b50\u6811\u3002\n\n$updata$ \u5219\u662f\u533a\u95f4\u8d4b\u503c\uff0c\u8fd9\u5c31\u4e0d\u7528\u591a\u8bf4\u4e86\uff0c\u7ef4\u62a4\u4e00\u4e0b $len,ll,rl$ \u548c $lazy$ \u5c31\u597d\u4e86\u3002$len,ll,rl$ \u5728\u8d4b\u7684\u503c\u4e3a $2$ \u65f6\u5c31\u662f\u533a\u95f4\u957f\u5ea6\u3002\n \n---\n\u603b\u4e4b\u8fd9\u9053\u9898\u7a0d\u5fae\u96be\u4e00\u70b9\u7684\u5730\u65b9\u5c31\u662f push_up \u548c push_down \u7684\u7ef4\u62a4\u3002\u5176\u5b9e\u8fd9\u4e2a\u60f3\u6cd5\u5f88\u7ecf\u5178\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u6211\u8fd9\u6837\u7b2c\u4e00\u6b21\u63a5\u89e6\u7684\u849f\u84bb\u6765\u8bf4\u8fd8\u662f\u6709\u70b9\u96be\u7684\uff08\u83dc\u662f\u539f\u7f6a\n\n\u4e0a\u6734\u5b9e\u65e0\u534e\u7684\u4ee3\u7801~  \n```cpp\n#include <iostream>\n#define MAXN 500010\n#define QWQ cout << \"qwq\" << endl;\nusing namespace std;\nint lazy[MAXN * 4 + 10], ll[MAXN * 4 + 10], rl[MAXN * 4 + 10], len[MAXN * 4 + 10];\n//1 h 2 n \nint ls(int x) {return (x << 1);}\nint rs(int x) {return (x << 1 | 1);}\nint max(int x, int y) {return ((x > y) ? (x) : (y));}\nvoid push_up(int now, int L, int R) {//\u66f4\u65b0\n\tll[now] = ((ll[ls(now)] == L) ? (L + ll[rs(now)]) : (ll[ls(now)]));\n\trl[now] = ((rl[rs(now)] == R) ? (R + rl[ls(now)]) : (rl[rs(now)]));\n\tlen[now] = max(max(len[ls(now)],len[rs(now)]), ll[rs(now)] + rl[ls(now)]);\n}\nvoid push_down(int now, int L, int R) {//\u4e0b\u653e\n\tif((lazy[now] > 0) && (L && R)) {\n\t\tlen[ls(now)] = ll[ls(now)] = rl[ls(now)] = ((lazy[now] == 2) ? (L) : (0));\n\t\tlen[rs(now)] = ll[rs(now)] = rl[rs(now)] = ((lazy[now] == 2) ? (R) : (0));\n\t\tlazy[ls(now)] = lazy[rs(now)] = lazy[now], lazy[now] = 0;\n\t}\n}\nint get_pos(int q, int s, int t, int now) {\n\tint mid = (s + t) >> 1;\n\t//cout << s << ' ' << t << ' ' << now << endl;\n\tpush_down(now, mid - s + 1, t - mid); \n\tif(len[ls(now)] >= q) return get_pos(q, s, mid, ls(now));\n\telse if(ll[rs(now)] + rl[ls(now)] >= q) return mid - rl[ls(now)] + 1;\n\treturn get_pos(q, mid + 1, t, rs(now));\n}\nvoid updata(int l, int r, int s, int t, int now, int val) {\n\tint mid = (s + t) >> 1;\n\tif(l <= s && r >= t) {\n\t\tlen[now] =  ll[now] = rl[now] = ((val == 2) ? (t - s + 1) : (0)); \n\t\tlazy[now] = val;\n\t\treturn ;\n\t}\n\tpush_down(now, mid - s + 1, t - mid);\n\tif(l <= mid) updata(l, r,    s, mid , ls(now), val);\n\tif(r >  mid) updata(l, r, mid + 1, t, rs(now), val);\n\tpush_up(now, mid - s + 1, t - mid);\n}\nvoid build(int l, int r, int now){\n\tlen[now] = ll[now] = rl[now] = r - l + 1;\n\tif(l == r) return;\n\tint mid = (l + r) >> 1;\n\tbuild(l  ,   mid, ls(now));\n\tbuild(mid + 1, r, rs(now));\n}\nint main() {\n\tint n, m, a, b, ans = 0;\n\tchar opt;\n\tcin >> n >> m;\n\tbuild(1, n, 1);\n\twhile(m--) {\n\t\tcin >> opt >> a;\n\t\tif(opt == 'A') {\n\t\t\tif(len[1] < a) ans ++;\n\t\t\telse {\n\t\t\t\tint pos = get_pos(a, 1, n, 1);\n\t\t\t\tupdata(pos, pos + a - 1, 1, n, 1, 1);\n\t\t\t}\n\t\t}\n\t\telse cin >> b, updata(a, b, 1, n, 1, 2);\n\t}\n\tcout << ans << endl;\n}\n```",
        "postTime": 1615625347,
        "uid": 298549,
        "name": "SIXIANG32",
        "ccfLevel": 5,
        "title": "\u3010P3071 [USACO13JAN]Seating G\u3011\u9898\u89e3"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u4e00\u9053ODT\u7684\u88f8\u9898\u8981\u7528\u7ebf\u6bb5\u6811\u505a\uff0c\u96be\u5ea6\u8fd8\u88ab\u6076\u8bc4\u5230\u4e86\u7701\u9009\u5462\uff1f\n\n\u4e0eP2894\u4e00\u6837\uff0c\u6211\u4eec\u7528ODT\u7ef4\u62a4\u5404\u4e2a\u64cd\u4f5c\uff0c\u7531\u4e8e\u503c\u57df\u5f88\u5c0f\uff0c\u6bcf\u6b21\u64cd\u4f5c\u6709\u5f88\u5927\u51e0\u7387\u4f1a\u628a\u4e00\u4e2a\u672c\u5c31\u5168\u662f\u76f8\u540c\u6570\u7684\u533a\u95f4\u5206\u6210\u4e09\u4e2a\u533a\u95f4\uff0c\u6216\u8005\u628a\u4e00\u4e2a\u4e0e\u4e24\u8fb9\u4e0d\u76f8\u7b49\u7684\u533a\u95f4\u6539\u4e3a\u548c\u4e24\u8fb9\u90fd\u76f8\u7b49\u7684\u533a\u95f4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u6bcf\u6b21\u64cd\u4f5c\u540e\u9762\u90fd\u5c1d\u8bd5\u8fdb\u884c\u533a\u95f4\u5408\u5e76\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e0eP2894\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u9053\u9898\u6570\u636e\u6bd4\u8f83\u5f31\uff0c\u4e0d\u5f00O2\uff0c\u4e0d\u5361\u5e38\u7684ODT\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u9053\u9898\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntemplate <class T>\ninline bool read(T &ret)\n{\n    char c;\n    int sgn;\n    if (c = getchar(), c == EOF)\n    {\n        return 0;\n    }\n    while (c != '-' && (c < '0' || c > '9'))\n    {\n        c = getchar();\n    }\n    sgn = (c == '-') ? -1 : 1;\n    ret = (c == '-') ? 0 : (c - '0');\n    while (c = getchar(), c >= '0' && c <= '9')\n    {\n        ret = ret * 10 + (c - '0');\n    }\n    ret *= sgn;\n    return 1;\n}\n\ntemplate <class T>\ninline void write(T x)\n{\n    if (x > 9)\n    {\n        write(x / 10);\n    }\n    putchar(x % 10 + '0');\n}\n\nconst int MAXN=50010;\n\nstruct node\n{\n    mutable int l,r,v;\n    node(int L,int R=-1,int V=0):l(L),r(R),v(V) {}\n    bool operator<(const node &o) const\n    {\n        return l<o.l;\n    }\n};\n\nset<node> s;\nlong long ans=0;\n\ninline void check()\n{\n    for(set<node>::iterator it=s.begin();it!=s.end();++it)\n    {\n        for(int j=1;j<=(it->r-it->l+1);++j)\n        {\n            cout<<it->v<<\" \";\n        }\n    }\n    cout<<endl;\n}\n\ninline void merge(int l)\n{\n    set<node>::iterator it1,it2,it3;\n    it2=s.lower_bound(l);\n    if(it1==s.begin())\n        return;\n    it1=it2,it3=it2;\n    it1--,++it3;\n    bool pd3=(it3!=s.end());\n    if(pd3&&it1->v==it2->v&&it2->v==it3->v&&it1->v==it3->v)\n    {\n        int l=it1->l,r=it3->r,v=it2->v;\n        s.erase(it1,++it3);\n        s.insert(node(l,r,v));\n    }\n    else if(it1->v==it2->v)\n    {\n        int l=it1->l,r=it2->r,v=it2->v;\n        s.erase(it1,++it2);\n        s.insert(node(l,r,v));\n    }\n    else if(pd3&&it2->v==it3->v)\n    {\n        int l=it2->l,r=it3->r,v=it2->v;\n        s.erase(it2,++it3);\n        s.insert(node(l,r,v));\n    }\n}\n\ninline set<node>::iterator split(int pos)\n{\n    set<node>::iterator it=s.lower_bound(node(pos));\n    if(it!=s.end()&&it->l==pos) return it;\n    --it;\n    int L=it->l,R=it->r,V=it->v;\n    s.erase(it);\n    s.insert(node(L,pos-1,V));\n    return s.insert(node(pos,R,V)).first;\n}\n\ninline void assignval(int l,int r,int v=0)\n{\n    set<node>::iterator itr=split(r+1),itl=split(l);\n    s.erase(itl,itr);\n    s.insert(node(l,r,v));\n}\n\ninline void add(int sum)\n{\n    set<node>::iterator itl,itr;\n    itl=s.begin();\n    bool pd=false;\n    while(itl!=s.end())\n    {\n        if(itl->v==1)\n        {\n            ++itl;\n            continue;\n        }\n        itr=itl;\n        while(itr!=s.end()&&itr->v==0)\n        {\n            ++itr;\n        }\n        bool ccpd=false;\n        if(itr==s.end())\n            ccpd=true;\n        --itr;\n        if(itr->r-itl->l+1>=sum)\n        {\n            pd=true;\n            break;\n        }\n        if(ccpd)\n        {\n            break;\n        }\n        itl=itr;\n        ++itl;\n    }\n    if(pd==false)\n        ans++;\n    else\n    {\n        int l=itl->l,r=itr->r;\n        s.erase(itl,++itr);\n        s.insert(node(l,l+sum-1,1));\n        if(r-l+1!=sum)\n        {\n            s.insert(node(l+sum,r,0));\n        }\n        merge(l);\n    }\n}\n\nint n,m;\n\nint main()\n{\n    read(n),read(m);\n    s.insert(node(1,n,0));\n    while(m--)\n    {\n    \tchar op;\n    \tcin>>op;\n        int x,y;\n        if(op=='A')\n        {\n            read(x);\n            add(x);\n        }\n        else\n        {\n            read(x),read(y);\n            assignval(x,y,0);\n        }\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1568632005,
        "uid": 102473,
        "name": "Setsugesuka",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3071 \u3010[USACO13JAN]\u5ea7\u4f4dSeating\u3011"
    }
]