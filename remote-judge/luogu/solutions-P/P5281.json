[
    {
        "content": "\u8003\u8651\u6c42\u7a33\u5b9a\u5ea6\u6070\u597d\u662fk\u7684\u5e76\u4e0d\u65b9\u4fbf,\u4e8e\u662f\u8f6c\u800c\u6c42\u7a33\u5b9a\u5ea6\u5c0f\u4e8e\u7b49\u4e8ek\u7684\u505a\u5dee\u5206\u5373\u53ef   \n\u9996\u5148\u8003\u8651\u66b4\u529b   \n\u8003\u8651\u5982\u4f55$O(n)$\u6c42\u7a33\u5b9a\u5ea6\u5c0f\u4e8e\u7b49\u4e8ek\u7684\u65b9\u6848\u6570   \n\u56e0\u4e3a\u6bcf\u4e2a\u53f6\u5b50\u7ed3\u70b9\u7684\u6743\u503c\u90fd\u4e0d\u540c,\u6240\u4ee5\u6700\u7ec8\u8f6c\u79fb\u5230\u6839\u7684\u4e00\u5b9a\u662f\u552f\u4e00\u7684\u4e00\u6761\u94fe,\u79f0\u4e3a\u7b54\u6848\u94fe   \n\u800c\u53ea\u8981\u901a\u8fc7\u4fee\u6539\u7b54\u6848\u94fe\u4e0a\u67d0\u4e2a\u70b9\u5b50\u6811\u4e2d\u5176\u4ed6\u53f6\u8282\u70b9\u4f7f\u94fe\u4e0a\u8fd9\u4e2a\u70b9\u6743\u503c\u6539\u53d8,\u5c31\u4f1a\u4f7f\u6839\u8282\u70b9\u6743\u503c\u6539\u53d8   \n\u6211\u4eec\u8981\u6c42\u6709\u591a\u5c11\u4e2a\u96c6\u5408\u5728\u7a33\u5b9a\u5ea6\u5c0f\u4e8e\u7b49\u4e8ek\u65f6\u53ef\u4ee5\u8ba9\u94fe\u4e0a\u7684\u70b9\u6743\u503c\u6539\u53d8,\u53ef\u4ee5\u901a\u8fc7\u6c42\u6709\u591a\u5c11\u4e2a\u96c6\u5408\u4e0d\u53ef\u4ee5\u8ba9\u94fe\u4e0a\u70b9\u6743\u503c\u6539\u53d8,\u7528\u603b\u6570\u51cf\u6389\u5373\u53ef   \n\u7531\u4e8e\u94fe\u4e0a\u7684\u70b9\u6709\u5947\u6df1\u5ea6\u4e5f\u6709\u5076\u6df1\u5ea6,\u6240\u4ee5\u5206\u5f00\u8003\u8651   \n\u5148\u8003\u8651\u5947\u6570\u6df1\u5ea6\u7684,\u5076\u6570\u540c\u7406   \n\u8bbe$val$\u4e3a\u5f53\u524d\u6839\u8282\u70b9\u6743\u503c,$delt$\u4e3a\u5f53\u524d\u8003\u8651\u7684\u7a33\u5b9a\u5ea6,$cnt[i]$\u4e3ai\u5b50\u6811\u4e2d2^{\u53f6\u5b50\u8282\u70b9\u4e2a\u6570}   \n\u8bbe$dp[i]$\u8868\u793a\u8003\u8651i\u7684\u5b50\u6811,\u6709\u591a\u5c11\u79cd\u96c6\u5408\u6ee1\u8db3\u4f7fi\u7684\u6743\u503c$<=val$(\u5373\u4e0d\u4f1a\u6539\u53d8\u94fe\u6743\u503c)   \n\u5f53i\u4e3a\u53f6\u5b50\u65f6,$dp[i]=(i<=val)+(i+delt<=val)$   \n\u5f53i\u6df1\u5ea6\u4e3a\u5947\u6570\u65f6,i\u7684\u6240\u6709\u513f\u5b50\u90fd\u8981\u6ee1\u8db3\u6761\u4ef6,\u6240\u4ee5$dp[i]=\\prod_{j\\in son[i]}dp[j]$  \n\u5f53i\u6df1\u5ea6\u4e3a\u5076\u6570\u65f6,\u53ea\u8981\u4e00\u4e2a\u513f\u5b50\u6ee1\u8db3\u5c31\u53ef\u4ee5,\u6240\u4ee5\u7528\u603b\u7684\u51cf\u6389\u4e0d\u5408\u6cd5\u7684$dp[i]=cnt[i]-\\prod_{j\\in son[i]}(cnt[j]-dp[j])$   \n\u6700\u7ec8\u7684\u7b54\u6848\u5c31\u662f\u6240\u6709\u94fe\u4e0a\u70b9\u5b50\u6811dp\u503c\u7684\u4e58\u79ef   \n\n\u8003\u8651\u5bf9\u8fd9\u4e2a$dp$\u8fdb\u884c\u4f18\u5316   \n\u53d1\u73b0\u6539\u53d8$delt$\u65f6,\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684$dp$\u503c\u53ea\u4f1a\u6539\u53d8\u4e00\u6b21,\u800c\u6539\u53d8\u540e\u5c31\u4f1a\u76f8\u5e94\u5f71\u54cd\u5176\u4e0a\u65b9\u7684\u70b9\u7684$dp$\u503c,\u975e\u5e38\u50cf\u52a8\u6001dp   \n\u4e3a\u4e86\u65b9\u4fbf\u52a8\u6001dp\u7684\u8f6c\u79fb,\u6211\u4eec\u5b9a\u4e49$dp'$   \n\u540c\u6837\u7684\u5148\u8003\u8651\u5947\u6570\u6df1\u5ea6\u7684\u94fe\u4e0a\u7684\u70b9   \n\u7531\u4e8e\u6700\u7ec8\u7b54\u6848\u662f\u94fe\u4e0a\u8fd9\u4e2a\u70b9\u513f\u5b50dp\u503c\u7684\u4e58\u79ef,\u6240\u4ee5\u8fd9\u4e2a\u70b9\u513f\u5b50\u7684$dp'$\u5c31\u7b49\u4e8e$dp$   \n\u800c\u4e0e\u8fd9\u4e2a\u70b9\u513f\u5b50\u8282\u70b9\u6df1\u5ea6\u5947\u5076\u6027\u76f8\u540c\u7684\u70b9$dp'=dp$,\u4e0d\u540c\u7684\u70b9$dp'=cnt-dp$   \n\u4e8e\u662f\u8f6c\u79fb\u5c31\u53d8\u5f97\u76f8\u540c$dp'[i]=cnt[i]-\\prod_{j\\in son[i]}dp'[j]$,\u65b9\u4fbf\u7ef4\u62a4   \n\u7531\u4e8e\u7a33\u5b9a\u5ea6\u4e3a0\u65f6\u8bb8\u591a\u53f6\u5b50\u70b9\u7684$dp$\u4e3a0,\u800c\u5728\u6539\u53d8\u5176\u6743\u503c\u65f6\u9700\u8981\u9664\u6389\u539f\u6765\u7684dp\u503c,\u4e0d\u65b9\u4fbf   \n\u6240\u4ee5\u7a33\u5b9a\u5ea6\u4ece\u5927\u5f80\u5c0f\u8003\u8651   \n\u52a8\u6001$dp$\u7684\u7ec6\u8282:   \n\u70b9i\u548c\u4ed6\u91cd\u513f\u5b50zson[i]$dp'$\u503c\u7684\u5173\u7cfb\u53ef\u4ee5\u770b\u505a$dp'[i]=k*dp'[zson[i]]+b$,\u5176\u4e2d$k=-\\prod_{j\\in son[x],j!=zson[x]}dp'[j],b=cnt[i]$   \n\u8fd9\u4e2a\u4e1c\u897f\u672c\u8d28\u4e0a\u662f\u77e9\u9635\u4e58\u6cd5,\u4f46\u662f{k1,b1} * {k2,b2}={k1 * k2,k1*b2+b1}\u53ef\u4ee5\u51cf\u5c0f\u5e38\u6570   \n\u53e6\u5916\u8981\u6ce8\u610f,\u5224\u53f6\u5b50\u8282\u70b9\u4e0d\u80fd\u53ea\u5224\u51fa\u8fb9\u4e2a\u6570\u4e3a1,\u8fd8\u8981\u5224\u4e0d\u662f\u6839\u8282\u70b9   \n\u4ee3\u7801:   \n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst int mod=998244353;\nint kpow(int a,int b)\n{\n    int s=1;\n    while(b)\n    {\n        if(b&1)s=1ll*s*a%mod;\n        b>>=1;\n        a=1ll*a*a%mod;\n    }\n    return s;\n}\nint mdf[200020][3];\nstruct bian\n{\n    int to,nxt;\n}bi[400040];\nint n,head[200020],num,l,r,depth[200020],va[200020],cnt[200020],ans[200020];\nint siz[200020],zson[200020],tp[200020],f[200020],id[200020],dy[200020],idnum,ed[200020],rt[200020];\nint dp[200020],Ans=1;\nbool type[200020],flag;\nstruct data\n{\n    int k,b;\n    data(int kk=0,int bb=0){k=kk,b=bb;}\n    friend data operator * (data a,data b){return data(1ll*a.k*b.k%mod,(1ll*a.k*b.b+a.b)%mod);}\n}tr[800080],p[200020];\nvoid add(int from,int to)\n{\n    bi[++num].nxt=head[from];\n    head[from]=num;\n    bi[num].to=to;\n}\nvoid predfs(int v,int fa)\n{\n    depth[v]=depth[fa]+1;f[v]=fa;siz[v]=1;\n    if(!bi[head[v]].nxt&&v!=1)\n    {\n        va[v]=v,cnt[v]=2;\n        return ;\n    }\n    int u;va[v]=depth[v]&1?1:n;cnt[v]=1;\n    for(int i=head[v];i;i=bi[i].nxt)\n    {\n        u=bi[i].to;\n        if(u==fa)continue;\n        predfs(u,v);\n        siz[v]+=siz[u];\n        if(siz[u]>siz[zson[v]])zson[v]=u;\n        cnt[v]=1ll*cnt[v]*cnt[u]%mod;\n        if(depth[v]&1)va[v]=max(va[v],va[u]);\n        else va[v]=min(va[v],va[u]);\n    }\n}\nint getdp(int v,int fa,int topp,int RT)\n{\n    rt[v]=RT,id[v]=++idnum,dy[idnum]=v,tp[v]=topp;\n    if(!bi[head[v]].nxt&&v!=1)\n    {\n        if(type[RT])\n        {\n            dp[v]=p[v].k=(depth[v]&1)?2-(v<=va[1]):(v<=va[1]);\n            if(v<=va[1])mdf[va[1]-v][++mdf[va[1]-v][0]]=v;\n        }\n        else\n        {\n            dp[v]=p[v].k=(depth[v]&1)?(v>=va[1]):2-(v>=va[1]);\n            if(v>=va[1])mdf[v-va[1]][++mdf[v-va[1]][0]]=v;\n        }\n        ed[topp]=idnum;\n        return dp[v];\n    }\n    int u,ret=mod-1;\n    dp[v]=getdp(zson[v],v,topp,RT);\n    for(int i=head[v];i;i=bi[i].nxt)\n    {\n        u=bi[i].to;\n        if(u==fa||u==zson[v])continue;\n        ret=1ll*ret*getdp(u,v,u,RT)%mod;\n    }\n    p[v]=data(ret,cnt[v]),(dp[v]=cnt[v]+1ll*dp[v]*ret%mod)>=mod?dp[v]-=mod:0;\n    return dp[v];\n}\nvoid dfs(int v,int fa)\n{\n    int ret=1,u;\n    for(int i=head[v];i;i=bi[i].nxt)\n    {\n        u=bi[i].to;\n        if(u==fa)continue;\n        if(va[u]==va[v])dfs(u,v);\n        else f[u]=0,type[u]=depth[v]&1,Ans=1ll*Ans*getdp(u,v,u,u)%mod;\n    }\n//\tprintf(\"%d %d\\n\",v,ret);\n}\nvoid build(int k,int l,int r)\n{\n    if(l==r)\n    {\n        tr[k]=p[dy[l]];\n        return ;\n    }\n    build(k<<1,l,l+r>>1),build(k<<1|1,(l+r>>1)+1,r);\n    tr[k]=tr[k<<1]*tr[k<<1|1];\n}\nvoid upd(int k,int l,int r,int pos)\n{\n    if(l==r)\n    {\n        tr[k]=p[dy[l]];\n        return ;\n    }\n    if(pos<=l+r>>1)upd(k<<1,l,l+r>>1,pos);\n    else upd(k<<1|1,(l+r>>1)+1,r,pos);\n    tr[k]=tr[k<<1]*tr[k<<1|1];\n}\ndata query(int k,int l,int r,int ll,int rr)\n{\n    if(l>=ll&&r<=rr)return tr[k];\n    if(rr<=(l+r>>1))return query(k<<1,l,l+r>>1,ll,rr);\n    if(ll>(l+r>>1))return query(k<<1|1,(l+r>>1)+1,r,ll,rr);\n    return query(k<<1,l,l+r>>1,ll,rr)*query(k<<1|1,(l+r>>1)+1,r,ll,rr);\n}\nvoid modify(int x)\n{\n//\tif(flag)printf(\"%d\\n\",x);\n    int RT=rt[x];\n    Ans=1ll*Ans*kpow(dp[RT],mod-2)%mod;\n    p[x].k=(type[RT]^(depth[x]&1))?2:0;\n    upd(1,1,idnum,id[x]);\n    while(f[tp[x]])\n    {\n    //\tif(flag)printf(\"%d\\n\",x);\n        int fa=f[tp[x]];\n        p[fa].k=1ll*p[fa].k*kpow(dp[tp[x]],mod-2)%mod;\n        data s=query(1,1,idnum,id[tp[x]],ed[tp[x]]);\n        (dp[tp[x]]=s.k+s.b)>=mod?dp[tp[x]]-=mod:0;\n        p[fa].k=1ll*p[fa].k*dp[tp[x]]%mod;\n        upd(1,1,idnum,id[fa]);\n        x=fa;\n    }\n    data s=query(1,1,idnum,id[RT],ed[RT]);\n    (dp[RT]=s.k+s.b)>=mod?dp[RT]-=mod:0;\n    Ans=1ll*Ans*dp[RT]%mod;\n}\nint main()\n{\n    scanf(\"%d %d %d\",&n,&l,&r);\n    int x,y;\n    for(int i=1;i<n;++i)\n    {\n        scanf(\"%d %d\",&x,&y);\n        add(x,y),add(y,x);\n    }\n    predfs(1,0);\n    dfs(1,0);\n//    printf(\"%d\\n\",mdf[1][1],mdf[1][2]);\n    build(1,1,idnum);\n //   printf(\"%d \",mdf[1][0]);\n    for(int i=n-1;i;--i)\n    {\n    \tif(i==1)flag=1;\n    \tfor(int u=1;u<=mdf[i][0];++u)modify(mdf[i][u]);\n    \t(ans[i]=cnt[1]+mod-Ans)>=mod?ans[i]-=mod:0;\n    //\tprintf(\"%d\\n\",i);\n    }\n    ans[n]=cnt[1]-1;\n    for(int i=l;i<=r;++i)\n        printf(\"%d \",ans[i]-ans[i-1]<0?ans[i]-ans[i-1]+mod:ans[i]-ans[i-1]);\n    return 0;\n}\n```\n",
        "postTime": 1555334557,
        "uid": 91247,
        "name": "cjy2003",
        "ccfLevel": 10,
        "title": "P5281 zjoi2019minimax\u641c\u7d22"
    },
    {
        "content": "\u76f4\u63a5\u6c42 $w(S)=k$ \u7684\u65b9\u6848\u6570\u5f88\u56f0\u96be\uff0c\u8003\u8651\u653e\u5bbd\u6761\u4ef6\u6c42 $w(S)\\leq k$ \u7684\u65b9\u6848\u6570\uff0c\u5373\u8ba1\u7b97\u4fee\u6539\u4ee3\u4ef7\u4e0d\u5927\u4e8e $k$ \u7684\u65b9\u6848\u6570\u3002\n\n\u8bbe $u$ \u7684\u6743\u503c\u4e3a $dp_u$\uff0c\u6839\u7684\u6743\u503c\u4e3a $dp_1=W$\u3002\u5982\u679c\u6709 $W\\in S$\uff0c\u5219\u53ea\u9700\u8981\u82b1\u8d39 $1$ \u7684\u4ee3\u4ef7\u5c06 $W$ \u6743\u503c\u4fee\u6539\u6389\u3002\u8fd9\u79cd\u60c5\u51b5\u662f\u5e73\u51e1\u7684\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u9ed8\u8ba4 $w\\notin S$\u3002\n\n\u5728\u6574\u68f5\u6811\u4e0a\uff0c\u6ee1\u8db3 $dp_u=W$ \u7684\u6240\u6709\u8282\u70b9 $u$ \u6784\u6210\u4e86\u4e00\u6761\u4ece\u53f6\u5b50\u5230\u6839\u7684\u94fe\u3002\u5982\u679c\u8fd9\u6839\u94fe\u4e0a\u6709\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u7684\u6743\u503c\u53d1\u751f\u6539\u53d8\uff0c\u90a3\u4e48\u6839\u7684\u6743\u503c\u4e5f\u4f1a\u53d1\u751f\u6539\u53d8\u3002\n\n\u8003\u8651\u6bcf\u4e2a\u53f6\u5b50 $x$ \u548c $W$ \u7684 $lca$\uff0c\u5982\u679c $lca$ \u7684\u6df1\u5ea6\u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u53ea\u6709\u5f53 $x>W$ \u7684\u65f6\u5019\uff0c$W$ \u7684\u6743\u503c\u624d\u53ef\u80fd\u56e0\u4e3a $x$ \u53d1\u751f\u6539\u53d8\u3002\u6362\u8a00\u4e4b\uff0c\u5982\u679c $x\\in S$\uff0c\u5219\u6b64\u65f6\u5c06 $x$ \u4fee\u6539\u4e3a $x>W$ \u4e00\u5b9a\u6bd4 $x<W$ \u66f4\u4f18\u3002\n\n\u56e0\u6b64\uff0c\u5982\u679c\u5f53\u524d\u4ee3\u4ef7\u4e3a $k$\uff0c\u5219\u6839\u636e\u4e0e $W$ \u7684 $lca$ \u7684\u6df1\u5ea6\uff0c\u53ef\u4ee5\u8d2a\u5fc3\u5730\u76f4\u63a5\u786e\u5b9a\u6bcf\u4e2a\u8282\u70b9\u7684\u6743\u503c\u3002\n\n\u5c06\u94fe\u4e0a\u7684\u8fb9\u65ad\u6389\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u8054\u901a\u5757\u6c42\u89e3\u6709\u591a\u5c11\u79cd\u65b9\u6848\u4f1a\u4f7f\u5f97\u5b50\u6811\u4e2d\u5b58\u5728\u7684\u6743\u503c $W$ \u5728\u5f53\u524d\u4f4d\u7f6e\u88ab\u66ff\u6362\u6389\u3002\u8bbe $f_u$ \u8868\u793a\u4f7f\u5f97 $dp_u<W$ \u7684\u65b9\u6848\u6570\uff0c$cnt_u$  \u8868\u793a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u8054\u901a\u5757\u5185\u7684\u603b\u65b9\u6848\u6570\uff08\u5373 $2$ \u7684\u53f6\u5b50\u4e2a\u6570\u6b21\u65b9\uff09\u3002\u94fe\u4e0a\u53ea\u8981\u6709\u4e00\u4e2a\u8282\u70b9\u80fd\u66ff\u6362\u6389 $W$ \u5c31\u662f\u5408\u6cd5\u7684\uff0c\u56e0\u6b64\u5408\u6cd5\u7684\u65b9\u6848\u6570\u4e3a\u603b\u65b9\u6848\u6570\u51cf\u53bb\u6240\u6709\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\u6570\u4e4b\u79ef\uff1a\n$$\nans=sum-\\prod_{dp_u=W}([dep_u\\operatorname{mod} 2\\equiv 1]f_u+[dep_u\\operatorname{mod} 2\\equiv 0](cnt_u-f_u))\n$$\n\u8ba1\u7b97 $f_u$ \u7684\u65f6\u5019\uff0c\u6ce8\u610f\u5230\u4e0d\u5b58\u5728\u6743\u503c\u4e3a $W$ \u7684\u53f6\u5b50\uff0c\u56e0\u6b64\u4f7f\u5f97 $dp_u>W$ \u7684\u65b9\u6848\u6570\u53ef\u4ee5\u7b80\u5355\u8868\u793a\u4e3a $cnt_u-f_u$ \u3002\u8f6c\u79fb\u4e5f\u53ef\u4ee5\u5199\u51fa\u6765\u4e86\uff1a\n$$\nf_u=\\begin{cases}\\prod_{v\\in son_u} f_v&dep_u\\equiv 1\\pmod{2}\\\\\ncnt_u-\\prod_{v\\in son_u} (cnt_v-f_v)&dep_u\\equiv 0\\pmod{2}\n\\end{cases}\n$$\n\u8bbe $g_u=cnt-f_u$ \u5f53 $dep_u\\equiv 1\\pmod{2}$\uff0c$g_u=f_u$ \u5f53 $dep_u\\equiv 0\\pmod{2}$\uff0c\u90a3\u4e48\u5c31\u6709\uff1a\n\n$$ans=sum-\\prod_{dp_u=W}(cnt_u-g_u)$$\n\n$$g_u=cnt_u-\\prod_{v\\in son_u}g_v$$\n\u81f3\u6b64\uff0c\u679a\u4e3e\u6700\u5927\u4ee3\u4ef7\u7684\u9650\u5236 $k$\uff0c\u53ef\u4ee5 $O(n)$ \u5730\u8ba1\u7b97\u7b54\u6848\u7684\u6570\u91cf\u3002\n\n\u6ce8\u610f\u5230\u5c06 $k$ \u5728 $1\\sim n$ \u4e2d\u679a\u4e3e\u7684\u65f6\u5019\uff0c\u6bcf\u4e2a\u53f6\u5b50\u7684 $f$ \u6700\u591a\u53d1\u751f $1$ \u6b21\u6539\u53d8\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u52a8\u6001\u7ef4\u62a4 $dp$ \u7684\u8fc7\u7a0b\u3002\n\n\u91cd\u94fe\u5256\u5206\u4e4b\u540e\uff0c\u6709\uff1a\n$$\ng_u=cnt_u+(-\\prod_{v\\in light_u}g_v)g_{weight_u}\n$$\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a $a_i=b+ca_{i+1}$ \u7684\u5f62\u5f0f\uff0c\u5e76\u4e14\u6ee1\u8db3\u7ed3\u5408\u5f8b\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7167\u642c\u52a8\u6001 $dp$ \u7684\u505a\u6cd5\u3002\n\n\u5728\u6bcf\u6b21\u8df3\u8f7b\u8fb9\u7684\u65f6\u5019\uff0c\u90fd\u9700\u8981\u4e00\u6b21\u6c42\u9006\uff0c\u56e0\u6b64\u54ea\u6015\u4f60\u5199\u4e86\u5168\u5c40\u5e73\u8861\u4e8c\u53c9\u6811\uff0c\u590d\u6742\u5ea6\u4f9d\u65e7\u4f1a\u8fbe\u5230 $O(nlog^2n)$\u3002\n\n\u7ef4\u62a4\u8f7b\u513f\u5b50\u7684\u79ef\u65f6\uff0c\u56e0\u4e3a\u53ef\u80fd\u51fa\u73b0\u4e58 $0$\uff0c\u9664 $0$ \u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u6570\u7ec4\u6765\u7edf\u8ba1 $0$ \u7684\u4e2a\u6570\u3002\n\n~~~~\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define lc ls[p]\n#define rc rs[p]\n#define I inline int\n#define V inline void\n#define ll long long int\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\n#define ROF(i,a,b) for(int i=a;i>=b;i--)\n#define REP(u) for(int i=h[u],v;v=e[i].t;i=e[i].n)if(v!=pre[u])\nconst int N=2e5+1,mod=998244353,INF=0x3f3f3f3f,sgn[2]={-1,1};\nV cmin(int&x,int y){if(y-x>>31)x=y;}\nV cmax(int&x,int y){if(x-y>>31)x=y;}\nV check(int&x){x-=mod,x+=x>>31&mod;}\nint sum[N],zero[N];\nint n,m,L,R,W,tot,qwq,bas=1;\nint h[N],dep[N],dp[N],ans[N],co[N];\nint siz[N],wes[N],tmp[N],pre[N],cnt[N];\nint ls[N],rs[N],fa[N],id[N],top[N],d[N];\nstruct node{\n\tint b,c;\n\tnode(int x=0,int y=1){b=x,c=y;}\n\tnode operator+(const node&u)const{\n\t\treturn(node){int((1ll*c*u.b+b)%mod),int(1ll*c*u.c%mod)};\n\t}\n}a[N],t[N];\nstruct edge{int t,n;}e[N<<1];\nV add_edge(int x,int y){\n\te[++tot]=(edge){y,h[x]},h[x]=tot,d[x]++;\n\te[++tot]=(edge){x,h[y]},h[y]=tot,d[y]++;\n}\nI Pow(ll t,int x,ll s=1){for(;x;x>>=1,t=t*t%mod)if(x&1)s=s*t%mod;return s;}\nV input(){\n\tscanf(\"%d%d%d\",&n,&L,&R);int x,y;\n\tFOR(i,2,n)scanf(\"%d%d\",&x,&y),add_edge(x,y);\n}\nI leaf(int u){return u>1&&d[u]==1;}\nV dfs0(int u){\n\tdp[u]=(~dep[u]&1)*INF;\n\tREP(u)dep[v]=dep[u]+1,pre[v]=u,dfs0(v),(dep[u]&1?cmax:cmin)(dp[u],dp[v]);\n\tif(leaf(u))dp[u]=u;\n}\nV dfs1(int u){\n\tsiz[u]=1,cnt[u]=1+leaf(u),check(bas<<=leaf(u));\n\tREP(u)if(dp[v]!=W){\n\t\tdep[v]=dep[u]+1,pre[v]=u,dfs1(v),siz[u]+=siz[v];\n\t\tif(cnt[u]=1ll*cnt[u]*cnt[v]%mod,siz[v]>siz[wes[u]])wes[u]=v;\n\t}\n\tREP(u)if(dp[v]==W)dfs1(v);\n}\nV upd(int p){t[p]=t[lc]+a[p]+t[rc];}\nV add(int x,int w){\n\tif(w)sum[x]=1ll*sum[x]*w%mod,a[x].c=1ll*a[x].c*w%mod;\n\telse if(!zero[x]++)a[x].c=0;\n}\nV del(int x,int w){\n\tif(w=Pow(w,mod-2))sum[x]=1ll*sum[x]*w%mod,a[x].c=1ll*a[x].c*w%mod;\n\telse if(!--zero[x])a[x].c=sum[x];\n}\nV build(int&p,int L,int R){\n\tif(L>R)return;\n\tint sum=0,now=0,x;\n\tFOR(i,L,R)sum+=siz[tmp[i]];\n\tfor(x=L,sum>>=1;(now+=siz[tmp[x]])<sum;x++);\n\tp=tmp[x],build(lc,L,x-1),build(rc,x+1,R),fa[lc]=fa[rc]=p;\n}\nV init(int p){if(p)init(lc),init(rc),upd(p);}\nV dfs2(int u,int p){\n\tid[tmp[++tot]=u]=m,siz[u]-=siz[wes[u]],sum[u]=1,co[u]=p;\n\tif(wes[u])a[u]={cnt[u],sum[u]=mod-1},dfs2(wes[u],p),top[u]=top[wes[u]];\n\telse{\n\t\tif(leaf(u)&&(a[u]={(u<=W)+(u<W),0},dep[u]&1))a[u].b=cnt[u]-a[u].b;\n\t\tbuild(top[u],1,tot),tot=0;\n\t}\n\tREP(u)if(v!=wes[u]&&dp[v]!=W)dfs2(v,p),fa[top[v]]=u,init(top[v]),add(u,t[top[v]].b);\n}\nV build(int u){\n\tdfs2(m=u,sgn[dep[u]&1]),init(top[u]),add(0,(cnt[u]+mod-t[top[u]].b)%mod);\n\tREP(u)if(dp[v]==W)build(v);\n}\nV init(){dfs0(dep[1]=1),W=dp[1],dfs1(sum[0]=1),tot=0,build(m=1);}\nV modify(int p){\n\tint x=id[p];\n\tdel(0,cnt[x]+mod-t[top[x]].b);\n\tfor(a[p]={1,0};p;p=fa[p]){\n\t\tif(p==top[p]&&fa[p])del(fa[p],t[p].b);\n\t\tupd(p);\n\t\tif(p==top[p]&&fa[p])add(fa[p],t[p].b);\n\t}\n\tadd(0,cnt[x]+mod-t[top[x]].b);\n}\nV work(){\n\tFOR(i,1,n){\n\t\tcheck(ans[i]=bas+mod-a[0].c);\n\t\tif(W+i<=n&&leaf(W+i)&&co[W+i]<0)modify(W+i);\n\t\tif(W-i>=2&&leaf(W-i)&&co[W-i]>0)modify(W-i);\n\t}\n\tans[0]=0,ans[n]=bas-1;\n\tROF(i,n,1)check(ans[i]+=mod-ans[i-1]);\n\tFOR(i,L,R)cout<<ans[i]<<' ';\n}\nint main(){\n\tinput();\n\tinit();\n\twork();\n\treturn 0;\n}\n```\n~~~~\n\n~~\u8d77\u7801 10 \u4e2a\u6708\u6ca1\u5199\u52a8\u6001 dp \u4e86\uff0c\u5199\u4e86\u597d\u4e45~~",
        "postTime": 1593588643,
        "uid": 109236,
        "name": "Fuyuki",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5281 \u3010[ZJOI2019]Minimax\u641c\u7d22\u3011"
    },
    {
        "content": "## \u53d1\u4e00\u7bc7\u4e0d\u5199\u52a8\u6001dp\u7684\u9898\u89e3\n\n\u52a8\u6001dp\u592a\u5957\u8def\uff0c\u6211\u624d\u4e0d\u53bb\u5199 ~~(\u5176\u5b9e\u662f\u6211\u4e0d\u4f1a~~\n\n\u57fa\u672c\u7684\u601d\u8def\u8fd8\u662f\u5bf9\u6bcf\u4e2a\u70b9\u8003\u8651\u5b83\u4f1a\u53d7\u5230\u90a3\u4e9b\u513f\u5b50\u7684\u5f71\u54cd\uff0c\u7136\u540edp\u51fa\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u8bbef[i][j]\u8868\u793a\uff0c\u82e5\u8981\u6539\u53d8i\u7684\u6743\u503c\uff0ci\u5b50\u6811\u5185\u6240\u6709\u53f6\u5b50\u8282\u70b9\u96c6\u5408S\u4e2d\uff0c\u6ee1\u8db3w(S)=j\u7684S\u7684\u6570\u91cf\u3002\u8003\u8651\u5982\u4f55\u8f6c\u79fb:\n\n\u5982\u679c\u4e00\u4e2a\u70b9\u4e3a\u5947\u70b9(\u5373\u6df1\u5ea6\u4e3a\u5947\u6570)\uff0c\u82e5\u8981\u4f7f\u5b83\u7684\u6743\u503c\u6539\u53d8\uff0c\u90a3\u4e48\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\n1.\u5b83\u7684\u6700\u5927\u513f\u5b50\u6539\u53d8\u4e86;\n\n2.\u5b83\u7684\u4e00\u4e2a\u5176\u5b83\u513f\u5b50\u7684\u6743\u503c\u8d85\u8fc7\u4e86\u6700\u5927\u7684\u513f\u5b50;\n\n\u8bbei\u7684\u6700\u5927\u513f\u5b50\u4e3au\uff0c\u5982\u679c\u662f\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u76f4\u63a5\u4ecef[u][j]\u8f6c\u79fb\u8fc7\u6765\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u8bbe\u53e6\u4e00\u4e2a\u513f\u5b50\u4e3av\uff0c\u6ce8\u610f\u5230\u8981\u4f7fw[v]>w[u]\uff0c\u5219w[v]\u5fc5\u987b\u52a0\u4e0aw[u]-w[v]+1\uff0c\u610f\u5473\u7740w[v]\u4e0d\u4ec5\u9700\u8981\u6539\u53d8\uff0c\u8fd8\u81f3\u5c11\u8981\u6539\u53d8\u4e00\u4e2a\u56fa\u5b9a\u7684\u503c\uff0c\u96be\u9053\u6211\u4eec\u8981\u591a\u8bbe\u4e00\u7ef4\u72b6\u6001\u6765\u8868\u793a\u8981\u6539\u53d8\u7684\u503c\u5417\uff1f\n\n\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\u5c31\u4f1a\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2ai\uff0cw[i]\u9700\u8981\u6539\u53d8\u7684\u503c\u90fd\u662f\u552f\u4e00\u786e\u5b9a\u7684\uff0c\u5177\u4f53\u5730\uff0c\u8bbe\u70b9i\u9700\u8981\u6539\u53d8\u7684\u503c\u4e3ad(\u8fd9\u91cc\u5047\u8bbei\u4e3a\u5947\u70b9\uff0c\u5076\u6570\u7c7b\u4f3c\uff09\uff0c\u5b83\u7684\u6700\u5927\u513f\u5b50\u4e3au\uff0c\u5219\u5206\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a\n\n1. d<0\uff0c\u5219i\u7684**\u6240\u6709**\u5b69\u5b50\u90fd\u8981\u6539\u53d8\u5230w[u]-d\u4ee5\u4e0b(\u5df2\u7ecf\u5728w[u]-d\u4ee5\u4e0b\u5219\u4e0d\u6539\u53d8)\n\n2. d>0, \u5219\u9700\u8981\u5b58\u5728\u4e00\u4e2a\u513f\u5b50(\u5305\u62ecu)\u6539\u53d8\u5230w[u]+d\u4ee5\u4e0a\n\n3. \u7279\u6b8a\u5730\uff0c\u82e5\u4e00\u4e2a\u70b9\u53ea\u8981\u6c42\u6539\u53d8\uff0c\u6211\u4eec\u4ee4\u5b83\u7684d\u503c\u4e3a0(\u5c31\u662f\u4e0a\u9762\u8ba8\u8bba\u7684\u90a3\u79cd)\n\n\u521d\u59cb\u65f6\uff0c\u70b91\u7684d\u503c\u4e3a0\uff0c\u4e00\u904ddfs\u5373\u53ef\u6c42\u5f97\u6240\u6709\u70b9\u7684d\u503c\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u6309\u7167d\u503c\u6765\u5bf9\u6bcf\u4e2a\u70b9\u8fdb\u884cdp\u4e86\u3002(\u53ef\u4ee5\u53c2\u8003\u6211\u7684\u4ee3\u7801\uff09\n\n\u90a3\u4e48\u5982\u4f55\u5408\u5e76\u4e24\u4e2a\u513f\u5b50\u7684\u7b54\u6848\u5462\uff1ff[u][j]\u4e2d\u53ea\u5305\u542b\u4e86u\u5b50\u6811\u5185\u6240\u6709\u53f6\u5b50\u96c6\u5408\u7684\u6570\u91cf\uff0c\u90a3\u4e48\u8de8\u5b50\u6811\u7684\u5462\uff1f\n\n\u8bbe\u6211\u4eec\u8981\u5408\u5e76\u7684\u4e24\u4e2a\u513f\u5b50\u4e3au,v\uff0c\u82e5\u5b58\u5728u\u5b50\u6811\u4e2d\u7684\u4e00\u4e2a\u96c6\u5408Su\u6ee1\u8db3w(Su)=j\uff0cv\u5b50\u6811\u4e2d\u7684\u4e00\u4e2a\u96c6\u5408Sv\u6ee1\u8db3w(Sv)=k\uff0c\u5219\u4e24\u4e2a\u96c6\u5408\u7684\u5e76Suv\u6ee1\u8db3w(Suv)=min(j,k)\uff0c\u4e5f\u5c31\u662f\u7531f[u][j]*f[v][k]\u53ef\u4ee5\u8f6c\u79fb\u5230f[i][min(j,k)] \uff08\u8fd9\u662f\u4e0a\u8ff0\u60c5\u51b5\uff12\u6216\uff13\uff0c\u60c5\u51b5\uff11\u8fd8\u9700\u53e6\u5916\u8ba8\u8bba\uff09\n\n\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u679a\u4e3e\u6bcf\u4e00\u4e2aj,k\uff0c\u524d\u7f00\u548c\u4f18\u5316\u4e00\u4e0b\u5c31\u597d\u4e86\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2aO(n^2)\u7684dp\u7b97\u6cd5 ~~\uff08\u5bf9\u5c31\u662f50\u5206\u66b4\u529b~~\n\n\u5148\u8d34\u4e00\u4e0b50\u5206\u66b4\u529b\u4ee3\u7801\uff1a\n\n```cpp\n\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int N=5007;\nconst int M=10007;\nconst ll mod=998244353;\nll f[N][N],tmp[N],s[N];\nint hd[N],pre[M],to[M],num,dep[N],son[N],w[N],n;\nvoid adde(int x,int y)\n{\n    num++;pre[num]=hd[x];hd[x]=num;to[num]=y;\n}\nvoid dfs(int v,int fa)//\u9884\u5904\u7406w\u4e0e\u6700\u5927(\u5c0f)\u7684\u513f\u5b50\n{\n    int i,u;\n    dep[v]=dep[fa]+1;s[v]=1;\n    for(i=hd[v];i;i=pre[i])\n    {\n        u=to[i];\n        if(u==fa)continue;\n        dfs(u,v);s[v]=s[v]*s[u]%mod;\n        if(dep[v]&1){\n            if(w[u]>w[son[v]])son[v]=u;\n        }else if(!son[v]||w[u]<w[son[v]])son[v]=u;\n    }\n    if(!son[v])w[v]=v,s[v]=2;\n    else w[v]=w[son[v]];\n}\n//\u4ee5\u4e0b\u662fdp\u503c\u5408\u5e76\nvoid orun(ll (&a)[N],ll (&b)[N])//\u60c5\u51b52,3\n{\n    memset(tmp,0,sizeof(tmp));\n    ll s1=a[n],s2=0;\n    for(int i=n;i>=1;i--)\n    {\n        tmp[i]=(tmp[i]+s1*b[i]+s2*a[i])%mod;\n        s1=(s1+a[i-1])%mod,s2=(s2+b[i])%mod;\n    }\n    for(int i=1;i<=n;i++)\n        tmp[i]=(tmp[i]+a[i]+b[i])%mod;\n    memcpy(a,tmp,sizeof(tmp));\n}\nvoid andun(ll (&a)[N],ll (&b)[N])//\u60c5\u51b51\n{\n    memset(tmp,0,sizeof(tmp));\n    ll s1=a[1],s2=0;\n    for(int i=1;i<=n;i++)\n    {\n        tmp[i]=(tmp[i]+s1*b[i]+s2*a[i])%mod;\n        s1=(s1+a[i+1])%mod,s2=(s2+b[i])%mod;\n    }\n    for(int i=1;i<=n;i++)\n        tmp[n]=(tmp[n]+a[i]+b[i])%mod;\n    memcpy(a,tmp,sizeof(tmp));\n}\nvoid dp(int v,int fa,int d)//\u8fd9\u91ccd\u503c\u76f4\u63a5\u4f20\u53c2\n{\n    int i,u;\n    if(!son[v])f[v][max(1,abs(d))]=1;\n    else if(!d||d>0&&(dep[v]&1)||d<0&&!(dep[v]&1))//\u590d\u6742\u7684\u8ba8\u8bba\u3002\u3002\u3002\n    {\n        int tar;\n        if(d)tar=w[son[v]]+d;\n        else tar=dep[v]&1?w[son[v]]+1:w[son[v]]-1;\n        for(i=hd[v];i;i=pre[i])\n        {\n            u=to[i];\n            if(u==fa)continue;\n            if(u==son[v])dp(u,v,d);\n            else dp(u,v,tar-w[u]);\n            orun(f[v],f[u]);\n        }\n    }\n    else\n    {\n        int tar=w[son[v]]+d,first=1;\n        ll mul=1;\n        for(i=hd[v];i;i=pre[i])\n        {\n            u=to[i];\n            if(u==fa)continue;//\u8fd9\u91cc\u6709\u4e00\u4e2a\u7ec6\u8282\u6bd4\u8f83\u91cd\u8981\uff0c\u5c31\u662f\u5f53w[u]\u7684\u503c\u4e0d\u9700\u8981\u6539\u53d8\u65f6\u4e0ddp\uff0c\u76f4\u63a5\u8bb0\u5f55\u7b54\u6848\n            if(d<0&&w[u]<=tar||d>0&&w[u]>=tar)\n                mul=mul*s[u]%mod;\n            else\n            {\n                dp(u,v,tar-w[u]);\n                if(first)memcpy(f[v],f[u],sizeof(f[u])),first=0;\n                else andun(f[v],f[u]);\n            }\n        }\n        for(i=1;i<=n;i++)\n            f[v][i]=f[v][i]*mul%mod;\n        f[v][n]=(f[v][n]+mul-1)%mod;\n    }\n}\nint main()\n{\n    int i,x,y,l,r;\n    scanf(\"%d%d%d\",&n,&l,&r);\n    for(i=1;i<n;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        adde(x,y),adde(y,x);\n    }\n    dfs(1,0);\n    dp(1,0,0);\n    for(i=l;i<=r;i++)\n        printf(\"%lld \",f[1][i]);\n    return 0;\n}\n\n```\n\n\u7136\u540e\u600e\u6837\u4f18\u5316\u8fd9\u4e2a\u7b97\u6cd5\u5462\uff1f\u6211\u5728\u8c03\u8bd5\u65f6\u53d1\u73b0f\u6570\u7ec4\u4e2d\u6709\u5f88\u591a0\u503c\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679cf[i]\u4e2d\u4e00\u4e2a\u4f4d\u7f6e\u975e\u96f6\uff0c\u5219\u5b83\u4e00\u5b9a\u6709\u4e00\u4e2a\u5b69\u5b50\u7684\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u4e5f\u975e\u96f6\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u4e2a\u70b9\u7684\u975e\u96f6\u72b6\u6001\u6570\u4e0d\u8d85\u8fc7\u5b83\u6240\u6709\u5b69\u5b50\u7684\u975e\u96f6\u72b6\u6001\u6570\u4e4b\u548c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u79bb\u6563\u7684\u5b58\u4e0b\u8fd9\u4e9b\u72b6\u6001\uff0c\u7136\u540e\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u8fd9\u6837\u53ef\u4ee5\u505a\u5230O(nlogn)\uff0c\u4f46\u662f\u5982\u679c\u50cf\u4e0a\u9762\u90a3\u6837\u66b4\u529b\u5408\u5e76\u7684\u8bdd\uff0c\u590d\u6742\u5ea6\u663e\u7136\u662f\u4e0d\u5bf9\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u7ef4\u62a4\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n log^2 n)\u3002\n\n\u600e\u4e48\u505a\u5462\uff1f\u5047\u8bbe\u6211\u4eec\u8981\u628af[u]\u5408\u5e76\u5230f[v]\u4e0a\uff0c\u90a3\u4e48\u663e\u7136\u53ef\u4ee5\u679a\u4e3ef[u]\u4e2d\u7684\u6bcf\u4e00\u4e2a\u503c\uff0c\u7136\u540e\u66b4\u529b\u5728f[v]\u7684\u7ebf\u6bb5\u6811\u4e2d\u67e5\u524d\u7f00\u548c\uff0c\u800c\u5bf9\u4e8ef[v]\u4e2d\u7684\u6bcf\u4e00\u4e2a\u503c\uff0c\u5b83\u9700\u8981\u4e58\u4ee5f[u]\u4e2d\u7684\u4e00\u6bb5\u524d\u7f00\u548c\uff0c\u800c\u8fd9\u4e2a\u524d\u7f00\u548c\u53ea\u6709f[u]\u7684\u72b6\u6001\u6570\u79cd\u53d6\u503c\uff0c\u76f4\u63a5\u679a\u4e3ef[u]\u7684\u4e00\u4e2a\u524d\u7f00\uff0c\u5728f[v]\u7684\u7ebf\u6bb5\u6811\u4e2d\u533a\u95f4\u4e58\u6cd5\u5373\u53ef\u3002\n\n\u5177\u4f53\u7684\u7ec6\u8282\u53ef\u4ee5\u53c2\u8003\u6211\u7684\u4ee3\u7801\uff1a(\u5982\u679c\u6211\u6709\u6ca1\u8bb2\u6e05\u695a\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u5728\u8bc4\u8bba\u533a\u4e2d\u63d0\u51fa\u6216\u79c1\u4fe1\u6211\uff09\n\n```\n\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int N=400007;\nconst int M=20000007;\nconst ll mod=998244353;\nstruct str\n{\n    int x;\n    int y;\n    int d;\n}p[N];\nll s[N];\nint hd[N],pre[N],to[N],num,dep[N],son[N],w[N],n,cnt;\nint sum[M],lc[M],rc[M],mul[M],tot,rt[N],sn[N],sz[N];\nvoid adde(int x,int y)\n{\n    num++;pre[num]=hd[x];hd[x]=num;to[num]=y;\n}\n\nvoid Mul(int k,int d)\n{\n    mul[k]=1ll*mul[k]*d%mod;\n    sum[k]=1ll*sum[k]*d%mod;\n}\nvoid pushdown(int k)\n{\n    if(lc[k])Mul(lc[k],mul[k]);\n    if(rc[k])Mul(rc[k],mul[k]);\n    mul[k]=1;\n}\nvoid add(int &k,int l,int r,int x,int d)\n{\n    if(!k)k=++tot;\n    if(l==r){sum[k]=(sum[k]+d)%mod;return;}\n    int mid=l+r>>1;\n    if(mul[k]!=1)pushdown(k);\n    if(x<=mid)add(lc[k],l,mid,x,d);\n    else add(rc[k],mid+1,r,x,d);\n    sum[k]=(sum[lc[k]]+sum[rc[k]])%mod;\n}\nvoid modify(int k,int l,int r,int x,int y,int d)\n{\n    if(!k)return;\n    if(l>=x&&r<=y)return Mul(k,d);\n    int mid=l+r>>1;\n    if(mul[k]!=1)pushdown(k);\n    if(x<=mid)modify(lc[k],l,mid,x,y,d);\n    if(y>mid)modify(rc[k],mid+1,r,x,y,d);\n    sum[k]=(sum[lc[k]]+sum[rc[k]])%mod;\n}\nint query(int k,int l,int r,int x,int y)\n{\n    if(!k)return 0;\n    if(l>=x&&r<=y)return sum[k];\n    int mid=l+r>>1,ans=0;\n    if(mul[k]!=1)pushdown(k);\n    if(x<=mid)ans=(ans+query(lc[k],l,mid,x,y))%mod;\n    if(y>mid)ans=(ans+query(rc[k],mid+1,r,x,y))%mod;\n    return ans;\n}\nvoid visit(int k,int l,int r)\n{\n    if(!k)return ;\n    if(l==r){p[++cnt]={sum[k],0,l};return ;}\n    int mid=l+r>>1;\n    if(mul[k]!=1)pushdown(k);\n    visit(lc[k],l,mid);\n    visit(rc[k],mid+1,r);\n}\n\nvoid dfs(int v,int fa)\n{\n    int i,u;\n    dep[v]=dep[fa]+1;s[v]=1;\n    sz[v]=0;\n    for(i=hd[v];i;i=pre[i])\n    {\n        u=to[i];\n        if(u==fa)continue;\n        dfs(u,v);s[v]=s[v]*s[u]%mod;\n        if(dep[v]&1){\n            if(w[u]>w[son[v]])son[v]=u;\n        }else if(!son[v]||w[u]<w[son[v]])son[v]=u;\n        if(sz[u]>sz[sn[v]])sn[v]=u;\n        sz[v]+=sz[u];\n    }\n    if(!son[v])w[v]=v,s[v]=2,sz[v]=1;\n    else w[v]=w[son[v]];\n}\nvoid orun(int a,int b)\n{\n    cnt=0;\n    visit(rt[b],1,n);\n    for(int i=1;i<=cnt;i++)\n        if(p[i].d<n)p[i].y=query(rt[a],1,n,p[i].d+1,n);\n    int sm=0;\n    p[0].d=0;\n    for(int i=cnt;i>=1;i--)\n    {\n        sm=(sm+p[i].x)%mod;\n        modify(rt[a],1,n,p[i-1].d+1,p[i].d,sm+1);\n    }\n    for(int i=1;i<=cnt;i++)\n        add(rt[a],1,n,p[i].d,1ll*p[i].x*(p[i].y+1)%mod);\n}\nvoid andun(int a,int b)\n{\n    cnt=0;\n    int tmp=(sum[rt[a]]+sum[rt[b]])%mod;\n    visit(rt[b],1,n);\n    for(int i=1;i<=cnt;i++)\n        if(p[i].d>1)p[i].y=query(rt[a],1,n,1,p[i].d-1);\n    int sm=0;\n    p[cnt+1].d=n+1;\n    if(p[1].d>1)modify(rt[a],1,n,1,p[1].d-1,0);\n    for(int i=1;i<=cnt;i++)\n    {\n        sm=(sm+p[i].x)%mod;\n        modify(rt[a],1,n,p[i].d,p[i+1].d-1,sm);\n    }\n    for(int i=1;i<=cnt;i++)\n        add(rt[a],1,n,p[i].d,1ll*p[i].x*p[i].y%mod);\n    add(rt[a],1,n,n,tmp);\n}\nvoid dp(int v,int fa,int d)\n{\n    int i,u;\n    if(!son[v])add(rt[v],1,n,max(1,abs(d)),1);\n    else if(!d||d>0&&(dep[v]&1)||d<0&&!(dep[v]&1))\n    {\n        int tar;\n        if(d)tar=w[son[v]]+d;\n        else tar=dep[v]&1?w[son[v]]+1:w[son[v]]-1;\n        u=sn[v];\n        if(u==son[v])dp(u,v,d);\n        else dp(u,v,tar-w[u]);\n        rt[v]=rt[u];\n        for(i=hd[v];i;i=pre[i])\n        {\n            u=to[i];\n            if(u==fa||u==sn[v])continue;\n            if(u==son[v])dp(u,v,d);\n            else dp(u,v,tar-w[u]);\n            orun(v,u);\n        }\n    }\n    else\n    {\n        int tar=w[son[v]]+d;\n        ll ml=1;\n        u=sn[v];\n        if(d<0&&w[u]<=tar||d>0&&w[u]>=tar)\n            ml=ml*s[u]%mod;\n        else\n        {\n            dp(u,v,tar-w[u]);\n            rt[v]=rt[u];\n        }\n        for(i=hd[v];i;i=pre[i])\n        {\n            u=to[i];\n            if(u==fa||u==sn[v])continue;\n            if(d<0&&w[u]<=tar||d>0&&w[u]>=tar)\n                ml=ml*s[u]%mod;\n            else\n            {\n                dp(u,v,tar-w[u]);\n                if(!rt[v])rt[v]=rt[u];\n                else andun(v,u);\n            }\n        }\n        modify(rt[v],1,n,1,n,ml);\n        add(rt[v],1,n,n,ml-1);\n    }\n}\nint main()\n{\n    int i,x,y,l,r;\n    scanf(\"%d%d%d\",&n,&l,&r);\n    for(i=1;i<n;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        adde(x,y),adde(y,x);\n    }\n    dfs(1,0);\n    dp(1,0,0);\n    for(i=l;i<=r;i++)\n        printf(\"%d \",query(rt[1],1,n,i,i));\n    return 0;\n}\n\n```\n\u5509\uff0c\u5199200\u591a\u884c\u8fd8\u60f3\u4e86\u6211\u597d\u4e45\uff0c\u770b\u4f60\u4eec\u968f\u4fbf\u5199\u4e2a\u4e00\u767e\u884c\u7684\u52a8\u6001dp\u8fd8\u8dd1\u5f97\u6bd4\u6211\u5feb\uff0c\u771f\u7684\u5fc3\u597d\u7d2f\u3002\u3002\u3002",
        "postTime": 1555509943,
        "uid": 100806,
        "name": "lyyi2003",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5281 \u3010[ZJOI2019]Minimax\u641c\u7d22\u3011"
    },
    {
        "content": "\u8bf4\u4e2a\u53ea\u4f1a\u5e73\u8861\u6811\u5c31\u80fd\u505a\u7684\u65b9\u6cd5\u3002$\\color{white}\\text{\u662f\u6211\u8fd9\u4e2a\u849f\u84bb\u81ea\u5df1\u60f3\u51fa\u6765\u7684}$\n\n\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u7ed3\u8bba\u662f\uff0c\u53ea\u8981\u5bf9\u7f16\u53f7\u4e3a$W$\u7684\u8282\u70b9\u6539\u52a81\uff0c\u6839\u8282\u70b9\u7684\u6743\u503c\u5c31\u4f1a\u53d1\u751f\u53d8\u5316\u3002\uff08\u663e\u7136\u6ca1\u6709\u6743\u503c\u4e3a$W$\u7684\u8282\u70b9\u4e86\uff0c\u6839\u8282\u70b9\u4e0d\u53ef\u80fd\u53d6\u5230$W$\u3002\uff09\u6240\u4ee5\u53ea\u8981$W\\in S$\uff0c\u5219$w(S)=1$\uff0c\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f$2^{m-1}$\uff0c\u5176\u4e2d$m$\u4e3a\u53f6\u8282\u70b9\u7684\u4e2a\u6570\u3002\n\n\u4e0b\u9762\u8ba8\u8bba\u4e0d\u9009$W$\u7684\u60c5\u51b5\u3002\uff08\u4e0b\u9762\u662f\u53ef\u4ee5\u53c2\u8003\u7684\u601d\u7ef4\u8fc7\u7a0b\uff0c\u89c9\u5f97\u6211\u6ca1\u8bb2\u6e05\u695a\uff0c\u6216\u89c9\u5f97\u4e0d\u5c51\u4e8e\u770b\u7684\u53ef\u4ee5\u8df3\u3002\uff09\u5148\u8003\u8651\u4e00\u4e2a\u5341\u5206naive\u7684dp\u3002\u8bb0$f[u][l][r][k]$\u8868\u793a\u8981\u4f7f$u$\u8282\u70b9\uff0c\u6ee1\u8db3\u64cd\u4f5c\u540e\u7684\u6839\u8282\u70b9\u7684\u6743\u503c$\\in [l,r]$\u4e14$w(S)\\leqslant k$\u3002~~\u4f3c\u4e4e\u590d\u6742\u5ea6\u8981\u7206\u70b8\u2026\u2026\u4e0d\u8003\u8651\u53ef\u884c\u6027\u2026\u2026~~\u6211\u4eec\u8981\u7684\u662f$l<W$\u6216$r>W$\u65f6$f[1][l][r][k]$\u7684\u503c\u3002\n\n\u8003\u8651\u600e\u4e48\u4f18\u5316\u8fd9\u4e2a~~\u4e0d\u53ef\u884c\u7684~~dp\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u8003\u8651\u8f6c\u79fb\uff0c$u$\u7684$l$\u4f1a\u662f\u5b50\u8282\u70b9\u91cc\u6240\u6709\u7684$l$\u6ee1\u8db3\u6761\u4ef6\u65f6\u8f6c\u79fb\u8fc7\u6765\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u4e00\u4e2a\u8282\u70b9\u51cf\u66f4\u591a\u7684\u6743\u503c\u65f6\uff0c$l$\u53d8\u5c0f\uff0c\u7236\u4eb2\u7684$l$\u4e5f\u53ef\u80fd\u4f1a\u5c0f\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u52a0\u66f4\u591a\u7684\u6743\u503c\u540c\u7406\u3002\u6240\u4ee5\uff0c**\u6211\u4eec\u6bcf\u6b21\u5c3d\u91cf\u591a\u7684\u51cf\u5c11\u6216\u589e\u52a0\u5c31\u6709\u53ef\u80fd\u6539\u53d8\u6839\u8282\u70b9\u7684\u6743\u503c\uff0c\u51cf\u6216\u52a0\u591a\u4e86\u6743\u503c\u4e0d\u4f1a\u53d8\u56de\u53bb\u3002**\n\n\u4f46\u6211\u4eec\u8981\u6c42\u7684\u662f$l<W$\u6216$r>W$\u65f6$f[1][l][r][k]$\u7684\u503c\u3002\u5982\u679c\u628a\u6240\u6709$<W$\u7684\u6570\u770b\u6210$-1$\uff0c$=W$\u7684\u6570\u770b\u6210$0$\uff0c$>W$\u7684\u6570\u770b\u6210$1$\uff0c\u82e5\u628a\u8fd9\u79cd\u6620\u5c04\u770b\u6210$f(x)$\uff0c\u5219$\\min(f(a),f(b))=f(\\min(a,b))$\uff0c\u5bf9\u4e8e$\\max$\u4e5f\u6210\u7acb\u3002\u6240\u4ee5\uff0c\u8981\u628a\u6839\u8282\u70b9\u6539\u6210$-1$\u6216$1$\uff0c\u5f97\u628a\u53f6\u8282\u70b9\u7684\u4e00\u4e9b\u90fd\u4ece$-1$\u6539\u6210$1$\uff0c\u6216\u90fd\u4ece$1$\u6539\u6210$-1$\uff0c\u524d\u8005\u5bf9\u5e94\u4e86\u628a\u6839\u8282\u70b9\u7684\u6743\u503c\u53d8\u5c0f\uff0c\u540e\u8005\u5bf9\u5e94\u4e86\u53d8\u5927\u3002\u800c\u5f53\u7136\u662f\u6539\u6210$W\\pm1$\uff0c\u8fd9\u6837$w$\u5c0f\u3002\n\n\u518d\u8003\u8651\u53e6\u4e00\u4e2a\u65b9\u6cd5\u3002\u8bb0$f[u][k]$\u8868\u793a\u6ee1\u8db3$S\\subseteq \\{x|x\\text{\u5728}u\\text{\u7684\u5b50\u6811\u5185}\\land x\\ne W\\}$\u7684\u6240\u6709S\u4e2d\uff0c\u628a$S$\u4e2d\u82e5\u5e72$<W$\u7684\u6743\u503c\u6539\u5927\u6210$W+1$\uff0c\u80fd\u4f7f\u5f97\u6839\u8282\u70b9\u7684\u6743\u503c\u53d8\u5927\u7684\u4e2a\u6570\u3002\u540c\u7406\u8bb0$g[u][k]$\u8868\u793a\u6ee1\u8db3$S\\subseteq \\{x|x\\text{\u5728}u\\text{\u7684\u5b50\u6811\u5185}\\land x\\ne W\\}$\u7684\u6240\u6709S\u4e2d\uff0c\u628a$S$\u4e2d\u82e5\u5e72$>W$\u7684\u6743\u503c\u6539\u5c0f\u6210$W-1$\uff0c\u80fd\u4f7f\u5f97\u6839\u8282\u70b9\u7684\u6743\u503c\u53d8\u5c0f\u7684\u4e2a\u6570\u3002\n\n\u662f\u4e0d\u662f\u611f\u89c9\u4e00\u4e0b\u5b50\u597d\u505a\u4e86\u5f88\u591a\uff1f~~\u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f\u4e0d\u5bf9\u2026\u2026\u8fd8\u662f\u4e0d\u53ef\u505a\u554a\u2026\u2026~~\n\n\u6211\u4eec\u628a\u8f6c\u79fb\u7684\u5f0f\u5b50\u5217\u51fa\u6765\uff08\u4e3a\u4e86\u65b9\u4fbf\u53ea\u5217$f$\u7684\uff0c$g$\u7684\u540c\u7406\uff09\uff1a\n\n1. \u5f53$u$\u4e3a\u53f6\u8282\u70b9\u65f6\uff0c\u82e5$u=W$\uff0c\u5219$f[u]$\u5168\u4e3a0\uff08\u89c4\u5b9a\u4e0d\u80fd\u9009$W$\uff0c\u4e0d\u53ef\u80fd\u628a\u5b83\u53d8\u5927\uff09\uff1b\u82e5$u<W$\uff0c\u5219$f[u][W+1-u]=1$\uff08\u8981\u7528$W+1-u$\u7684\u4ee3\u4ef7\uff0c\u800c\u4e14\u5fc5\u987b\u6709$S=\\{u\\}$\uff1b\u82e5$u>W$\uff0c\u5219$f[u][0]=2$\uff08\u4e0d\u7528\u4ee3\u4ef7\uff0c\u800c\u4e14$S=\\varnothing$\u6216$S=\\{u\\}$\uff09\u3002\n2. \u82e5$u$\u7684\u6743\u503c$>W$\uff0c\u5219$S\\subseteq \\{x|x\\text{\u5728}u\\text{\u7684\u5b50\u6811\u5185}\\land x\\ne W\\}$\uff0c\u6240\u4ee5$f[u][0]=2^{\\{x|x\\text{\u5728}u\\text{\u7684\u5b50\u6811\u5185}\\land x\\ne W\\}}$\n3. \u5f53$u$\u7684\u6743\u503c\u662f\u5b83\u6240\u6709\u5b50\u8282\u70b9\u7684\u6743\u503c\u6700\u5927\u503c\u65f6\uff0c\u8981\u6ee1\u8db3\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u6743\u503c$>S$\uff0c$f[u][k]=\\sum\\limits_{a_{1\\dots cnt[u]}\\land \\max\\{a_i\\}=k}\\prod f[son[u][i]][a[i]]$\uff0c\u5176\u4e2d$cnt[u]$\u8868\u793a$u$\u7684\u5b50\u8282\u70b9\u4e2a\u6570\uff0c$son[u][i]$\u8868\u793a$u$\u7684\u7b2c$i$\u4e2a\u5b50\u8282\u70b9\u3002\n4. \u5f53$u$\u7684\u6743\u503c\u662f\u5b83\u6240\u6709\u5b50\u8282\u70b9\u7684\u6743\u503c\u6700\u5c0f\u503c\u65f6\uff0c\u8981\u6ee1\u8db3\u6240\u6709\u5b50\u8282\u70b9\u7684\u6743\u503c$>S$\uff0c$f[u][k]=\\sum\\limits_{a_{1\\dots cnt[u]}\\land \\min\\{a_i\\}=k}\\prod f[son[u][i]][a[i]]$\uff0c\u5176\u4e2d$cnt[u]$\u8868\u793a$u$\u7684\u5b50\u8282\u70b9\u4e2a\u6570\uff0c$son[u][i]$\u8868\u793a$u$\u7684\u7b2c$i$\u4e2a\u5b50\u8282\u70b9\u3002\n\n\u8fd9\u6837\u8bf4\u4f3c\u4e4e\u592a\u62bd\u8c61\u4e86\u2026\u2026~~\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u4e0d\u5bf9\u2026\u2026~~\n\n\u600e\u4e48\u5904\u7406\u7b2c3\u30014\u4e2a\u8f6c\u79fb\u5f0f\uff1f\u53d1\u73b0\u4f3c\u4e4e\u53ef\u4ee5\u6bcf\u6b21\u5408\u5e76\u524d\u4e24\u4e2a$f$\u3001$g$\u7684\u503c\uff0c\u518d\u548c\u7b2c3\u4e2a\u5408\u5e76\u2026\u2026\uff08\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u2026\u2026\uff09\u90a3\u4e48\u5c31\u53ef\u4ee5\u5199\u6210\u4e0b\u9762\u8fd9\u4e2a\u5f0f\u5b50\uff08\u8bb0\u5f53\u524d\u8981\u52a0\u5165\u7684\u5b50\u8282\u70b9\u662f$v$\uff09\uff1a\n\n3. \u5f53$u$\u7684\u6743\u503c\u662f\u5b83\u6240\u6709\u5b50\u8282\u70b9\u7684\u6743\u503c\u6700\u5927\u503c\u65f6\uff0c$f_{new}[u][k]=f[u][k]\\sum\\limits_{j\\leqslant k}f[v][j]+f[v][k]\\sum\\limits_{j<k}f[u][j]$\uff0c\u524d\u8005\u662f\u6700\u5927\u503c\u53d6\u524d\u9762\u4e00\u4e9b\u8282\u70b9\u7684\u60c5\u51b5\uff0c\u540e\u8005\u662f\u53d6$v$\u7684\u60c5\u51b5\u3002\n4. \u5f53$u$\u7684\u6743\u503c\u662f\u5b83\u6240\u6709\u5b50\u8282\u70b9\u7684\u6743\u503c\u6700\u5c0f\u503c\u65f6\uff0c$f_{new}[u][k]=f[u][k]\\sum\\limits_{j\\geqslant k}f[v][j]+f[v][k]\\sum\\limits_{j>k}f[u][j]$\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c$f[u][k]\\ne 0$\u7684\u6570\u91cf\u4e0d\u8d85\u8fc7\u5b50\u6811\u4e2d\u4e0d\u7b49\u4e8e$0$\u7684\u6570\u91cf\uff0c\u5176\u5b9e\u662f\u4e0d\u8d85\u8fc7\u5b50\u6811\u4e2d\u53f6\u8282\u70b9\u7684\u6570\u91cf\u3002\u53ef\u4ee5\u5e73\u8861\u6811\u542f\u53d1\u5f0f\u5408\u5e76\uff01\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5f53\u4e24\u4e2a\u5e8f\u5217$f[u]$\u3001$f[v]$\u5408\u5e76\u65f6\uff0c\u4e0d\u59a8\u4ee4$f[u]$\u4e2d\u4e0d\u7b49\u4e8e$0$\u7684\u6570\u91cf\u5c0f\u4e8e$f[v]$\u4e2d\u7684\uff08\u5426\u5219\u6362\u4e24\u4e2a\u5e73\u8861\u6811\u7684\u6839\uff09\u3002\u5219\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u4f7f$f[v][k]\\ne 0$\u7684$k$\uff0c\u628a$f[u]$\u5206\u6210\u82e5\u5e72\u6bb5\uff0c\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e00\u6bb5\u4e2d\u90fd\u4e58\u540c\u4e00\u4e2a$f[v]$\u7684\u524d\u7f00\u6216\u540e\u7f00\u7684\u548c\uff0c\u518d\u5408\u5e76\u5230$f_{new}[u]$\uff1b\u6bcf\u4e00\u4e2a$f[v]$\u4e5f\u662f\u4e58\u4e0a\u4e00\u4e2a$f[u]$\u7684\u524d\u7f00\u6216\u540e\u7f00\u7684\u548c\uff0c\u518d\u5408\u5e76\u5230$f_{new}[u]$\u3002\uff08\u8bb2\u7684\u6709\u70b9\u62bd\u8c61\uff0c\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\uff09\n\n\u7136\u540e\u5c31\u80fd\u7b97\u51fa$f[1]$\u548c$g[1]$\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u600e\u4e48\u7edf\u8ba1\u7b54\u6848\u3002~~\u521a\u5f00\u59cb\u6211\u8fd9\u91cc\u60f3\u9519\u4e86\u2026\u2026~~\n\n\u6211\u4eec\u8981\u5148\u628a$f[1]$\u4e2d\u7684\u6240\u6709\u6570\u9664\u4ee5$2^{\\text{\u7f16\u53f7}>W\\text{\u7684\u53f6\u8282\u70b9\u4e2a\u6570}}$\uff0c\u56e0\u4e3a\u6211\u628a$>W$\u7684\u6570\u770b\u4f5c\u80fd\u9009\u548c\u4e0d\u80fd\u9009\uff0c\u9009\u4e0d\u9009\u5bf9\u5bf9\u4e8e$f$\u6765\u8bf4\u7684\u6743\u503c\u6ca1\u6709\u5f71\u54cd\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u5f3a\u5236\u4e0d\u9009\uff0c\u90a3\u7b2c\u4e00\u4e2a\u8f6c\u79fb\u4e2d$u>W$\u65f6$f[u][0]=1$\uff0c\u7b2c\u4e8c\u4e2a\u8f6c\u79fb\u4e2d$f[u][0]=2^{\\{x|x\\text{\u5728}u\\text{\u7684\u5b50\u6811\u5185}\\land x<W\\}}$\uff0c\u4f46\u6211\u6bd4\u8f83\u61d2\uff0c\u5c31\u7528\u4e86\u524d\u4e00\u79cd\u65b9\u6cd5\u3002\n\n\u5148\u8bf4\u4e00\u4e0b\uff0c\u4e3a\u4ec0\u4e48\u628a\u4e0d\u80fd\u4f7f\u6839\u7ed3\u70b9\u503c\u6539\u53d8\u7684\u96c6\u5408\u7684\u7a33\u5b9a\u5ea6\u5f53\u6210$n$\uff0c\u5176\u5b9e\u662f\u56e0\u4e3a\u53f6\u7ed3\u70b9\u7684\u7f16\u53f7\u4e00\u5b9a\u5728$[2,n]$\u5185\uff0c\u6539\u52a8$n-1$\u5c31\u80fd\u4fdd\u8bc1\u6bd4\u4efb\u610f\u6570\u5927\u3002$w(S)=n$\u7684\u7b54\u6848\u53ef\u4ee5\u901a\u8fc7\u628a\u6240\u6709\u65b9\u6cd5\u6570$2^n-1$\u51cf\u53bb\u524d\u9762\u7684\u6240\u6709\u7b54\u6848\u3002\n\n\u800c\u6211\u4eec\u77e5\u9053\uff0c\u6839\u636e\u5f00\u5934\u7684\u7ed3\u8bba\uff0c\u53ea\u8981$W\\in S$\uff0c\u5219$w(S)=1$\uff0c\u800c\u4e14\u5176\u4ed6\u60c5\u51b5\u81f3\u5c11\u8981\u65392\u7684\u6743\u503c\uff0c\u6240\u4ee5\u5bf9\u4e8e$W\\notin S$\uff0c$w(S)\\geqslant2$\u3002\u6240\u4ee5\u6211\u4eec\u77e5\u9053\uff0c$w(S)=1$\u7684\u7b54\u6848\u4e3a$2^{n-1}$\u3002\n\n\u5176\u6b21\uff0c\u5bf9\u4e8e$W\\notin S$\uff0c\u6211\u4eec\u53ef\u4ee5\u628a$S$\u770b\u6210$>W$\u548c$<W$\u4e24\u90e8\u5206\uff0c$w(S)$\u662f\u4e24\u90e8\u5206\u7684$\\min$\u3002\u4e0b\u9762\u7684\u7edf\u8ba1\u5c31\u5f88\u7c7b\u4f3c\u4e86\u3002\u8bb0$cnt_1$\u4e3a\u53f6\u8282\u70b9\u4e2d\u7f16\u53f7$>W$\u7684\u6570\u91cf\uff0c$cnt_2$\u4e3a\u53f6\u8282\u70b9\u4e2d\u7f16\u53f7$<W$\u7684\u6570\u91cf\u3002\u7b54\u6848\u5c31\u662f$ans_i=f[1][i]\\left(2^{cnt_1}-\\sum\\limits_{j=i}^ng[1][j]\\right)+g[1][i]\\left(2^{cnt_2}-\\sum\\limits_{j=i+1}^nf[1][j]\\right)$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log^2n)$\uff0c\u5e38\u6570\u5f88\u5c0f\u3002\n\n\u7ec6\u8282\u53c2\u8003\u4ee3\u7801\uff08\u611f\u89c9\u6ca1\u5565\u7ec6\u8282\uff0c\u4f46\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u8c03\u4e86\u4e24\u4e09\u5c0f\u65f6\uff09\uff08\u6709\u4e9b\u5927\u4e8e\u548c\u5927\u4e8e\u7b49\u4e8e\u53ef\u4ee5\u4ea4\u6362\u7684\uff0c\u53ef\u80fd\u4f1a\u548c\u4e0a\u9762\u7684\u63cf\u8ff0\u4e0d\u592a\u4e00\u6837\uff09\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=3000005;\nconst int maxnode=maxn;\nconst int kcz=998244353;\nconst int inv2=499122177;\nstruct node { int pri,sz,val,lc,rc; ll x,s,lazy; } p[maxnode];\nint n,l,r,m,a[maxn],he[maxn],to[maxn<<1],ne[maxn<<1],tot,fa[maxn];\nint w[maxn],cnt[maxn],rt[maxn],out[maxn],sz;\nll pow2[maxn],ans[maxn],ans1[maxn],ans2[maxn];\ninline int read()\n{\n    int res=0,ch;\n    bool f=0;\n    for(ch=getchar();ch<'0' || ch>'9';ch=getchar()) f=(ch=='-');\n    for(;'0'<=ch && ch<='9';ch=getchar()) res=res*10+(ch-'0');\n    return f?-res:res;\n}\nint sta[30],top;\ninline void write(long long x)\n{\n    if(!x) { putchar('0'); return; }\n    if(x<0) putchar('-'),x=-x;\n    top=-1;\n    while(x) sta[++top]=x%10,x/=10;\n    while(~top) putchar(sta[top--]^'0');\n}\ninline void add_edge(int u,int v) { to[tot]=v,ne[tot]=he[u],he[u]=tot++; }\ninline int newnode(int x,ll s)\n{\n    ++tot;\n    p[tot].val=x,p[tot].sz=1,p[tot].pri=rand();\n    p[tot].x=p[tot].s=s,p[tot].lazy=1,p[tot].lc=p[tot].rc=0;\n    return tot;\n}\ninline void pushup(int rt) { if(rt) p[rt].s=(p[p[rt].lc].s+p[p[rt].rc].s+p[rt].x)%kcz,p[rt].sz=p[p[rt].lc].sz+p[p[rt].rc].sz+1; }\ninline void push(int rt,ll x) { if(rt) (p[rt].x*=x)%=kcz,(p[rt].s*=x)%=kcz,(p[rt].lazy*=x)%=kcz; }\ninline void pushdown(int rt) { if(p[rt].lazy!=1) push(p[rt].lc,p[rt].lazy),push(p[rt].rc,p[rt].lazy),p[rt].lazy=1; }\nvoid split(int rt,int &l,int &r,int x)\n{\n    if(!rt) { l=r=0; return; }\n    pushdown(rt);\n    if(p[rt].val<=x) l=rt,split(p[rt].rc,p[l].rc,r,x),pushup(l);\n    else r=rt,split(p[rt].lc,l,p[r].lc,x),pushup(r);\n}\nvoid merge(int &rt,int l,int r)\n{\n    if(!l || !r) { rt=l|r; return; }\n    if(p[l].pri>p[r].pri) pushdown(l),rt=l,merge(p[rt].rc,p[l].rc,r);\n    else pushdown(r),rt=r,merge(p[rt].lc,l,p[r].lc);\n    pushup(rt);\n}\nvoid dfs(int u,bool ismax)\n{\n    int i;\n    w[u]=ismax?0x80000000:0x7fffffff,cnt[u]=0;\n    for(i=he[u];~i;i=ne[i])\n        if(to[i]!=fa[u])\n        {\n            fa[to[i]]=u;\n            dfs(to[i],!ismax);\n            cnt[u]+=cnt[to[i]];\n            w[u]=ismax?max(w[u],w[to[i]]):min(w[u],w[to[i]]);\n        }\n    if(w[u]==(ismax?0x80000000:0x7fffffff)) w[u]=u,m++,cnt[u]++;\n}\nvoid print(int u)\n{\n    if(!u) return;\n    pushdown(u);\n    print(p[u].lc);\n    out[sz++]=u;\n    print(p[u].rc);\n}\nvoid solve(int u,bool ismax,bool isg)\n{\n    if(w[u]==u)\n        if(w[u]==w[1]) rt[u]=0;\n        else if((w[u]>w[1])^(!isg)) rt[u]=newnode(0,2);\n        else rt[u]=newnode(abs(w[1]-w[u])+1,1);\n    else if((w[u]>w[1])^(!isg) && w[u]!=w[1]) rt[u]=newnode(0,pow2[cnt[u]]);\n    else\n    {\n        int i,sz1=0,sz2,j,t,a;\n        ll sum1,sum2;\n        bool flag=true;\n        rt[u]=0;\n        for(i=he[u];~i;i=ne[i])\n            if(to[i]!=fa[u])\n            {\n                solve(to[i],!ismax,isg);\n                sz2=cnt[to[i]];\n                if(flag) { rt[u]=rt[to[i]]; sz1+=sz2; flag=false; continue; }\n                if(p[rt[u]].sz<p[rt[to[i]]].sz)\n                    swap(rt[u],rt[to[i]]),swap(sz1,sz2);\n                sum1=0,sum2=0;\n                sz=0,print(rt[to[i]]);\n                for(j=0;j<sz;j++) p[out[j]].lc=p[out[j]].rc=0,p[out[j]].lazy=1,pushup(out[j]);\n                t=0;\n                for(j=0;j<sz;j++)\n                {\n                    split(rt[u],a,rt[u],p[out[j]].val);\n                    (sum1+=p[a].s)%=kcz;\n                    if(ismax^(!isg)) push(a,(pow2[sz2]+kcz-sum2)%kcz),(sum2+=p[out[j]].x)%=kcz,push(out[j],(pow2[sz1]+kcz-sum1)%kcz);\n                    else push(a,sum2),(sum2+=p[out[j]].x)%=kcz,push(out[j],sum1);\n                    if(p[a].s) merge(t,t,a);\n                    if(p[out[j]].s)\n                    { // \u8fd9\u91cc\u53ef\u4ee5\u76f4\u63a5merge\n                        if(t && !p[t].val && !p[out[j]].val) (p[t].x+=p[out[j]].x)%=kcz,pushup(t);\n                        else merge(t,t,out[j]);\n                    }\n                }\n                if(ismax^(!isg)) push(rt[u],(pow2[sz2]+kcz-sum2)%kcz);\n                else push(rt[u],sum2);\n                if(p[rt[u]].s) merge(rt[u],t,rt[u]); else rt[u]=t;\n                sz1+=sz2;\n            }\n    }\n}\nint main()\n{\n    int i,u,v,cnt1,cnt2;\n    ll t,s1,s2;\n    n=read(),l=read(),r=read();\n    for(tot=0,i=1;i<=n;i++) he[i]=-1;\n    for(i=1;i<n;i++) u=read(),v=read(),add_edge(u,v),add_edge(v,u);\n    m=0,fa[1]=0,dfs(1,1);\n    for(i=w[1];i;i=fa[i]) cnt[i]--;\n    for(i=1,pow2[0]=1;i<=m;i++) pow2[i]=pow2[i-1]*2%kcz;\n    for(i=2;i<=n;i++) ans[i]=ans1[i]=ans2[i]=0;\n    p[0].s=0,p[0].sz=0;\n    tot=0,solve(1,1,1),sz=0,print(rt[1]);\n    for(i=w[1]+1,cnt1=0,t=1;i<=n;i++) if(w[i]==i) cnt1++,(t*=inv2)%=kcz;\n    for(i=0;i<sz;i++) ans1[p[out[i]].val]=p[out[i]].x*t%kcz;\n\n    tot=0,solve(1,1,0),sz=0,print(rt[1]);\n    for(i=1,cnt2=0,t=1;i<w[1];i++) if(w[i]==i) cnt2++,(t*=inv2)%=kcz;\n    for(i=0;i<sz;i++) ans2[p[out[i]].val]=p[out[i]].x*t%kcz;\n    \n    ans[1]=pow2[m-1];\n    s1=pow2[cnt2],s2=pow2[cnt1];\n    for(i=2;i<n;i++)\n    {\n        s1=(s1+kcz-ans1[i])%kcz;\n        ans[i]=(s1*ans2[i]+s2*ans1[i])%kcz;\n        s2=(s2+kcz-ans2[i])%kcz;\n    }\n    for(i=1;i<n;i++) (ans[n]+=ans[i])%=kcz;\n    ans[n]=(pow2[m]-1-ans[n]+kcz)%kcz;\n    for(i=l;i<=r;i++) write(ans[i]),putchar(' ');\n    putchar('\\n');\n    return 0;\n}\n```",
        "postTime": 1554716201,
        "uid": 36998,
        "name": "ljc1301",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5281 \u3010[ZJOI2019]Minimax\u641c\u7d22\u3011"
    },
    {
        "content": "- [\u9898\u76ee\u4f20\u9001\u95e8](https://loj.ac/problem/3044)\n\n- \u5bb9\u6613\u60f3\u5230\u4e00\u79cd\u66b4\u529b DP\uff1a\u5148\u8f6c\u5316\u6210\u5bf9\u4e8e\u6bcf\u4e2a $k$ \u6c42\u51fa $\\max_{i\\in S}|i-w_i|\\le k$ \u7684\u65b9\u6848\u6570\uff0c\u6700\u540e\u5dee\u5206\n\n- \u7136\u540e\u95ee\u9898\u8f6c\u5316\u6210\u6bcf\u4e2a\u53f6\u5b50\u7684\u6743\u503c\u6709\u4e2a\u53d6\u503c\u533a\u95f4\uff0c\u6ce8\u610f\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u5206\u6210 $<W,=W,>W$\uff08\u770b\u4f5c $0,1,2$ \uff09\u4e09\u7c7b\u5904\u7406\uff0c\u7136\u540e DP $f[u][0/1/2]$\n\n- \u7136\u540e\u4f60\u4f1a\u5f88\u5feb\u53d1\u73b0\u8fd9\u4e48\u505a\u4e0d\u884c\uff0c\u56e0\u4e3a\u9009\u53d6\u67d0\u4e9b\u53f6\u5b50\u96c6\u5408\u65f6\uff0c\u6839\u8282\u70b9\u7684\u6743\u503c\u53ef\u4ee5\u5c0f\u4e8e $W$ \u4e5f\u53ef\u4ee5\u5927\u4e8e $W$ \uff0c\u76f4\u63a5\u7528 $2^m-1$ \u51cf\u6389 $f[u][0]+f[u][2]$ \u65e0\u6cd5\u5f97\u5230\u6b63\u786e\u7ed3\u679c\n\n- \u4e8e\u662f\u6211\u4eec\u5c1d\u8bd5\u8003\u8651\u600e\u6837\u624d\u80fd\u5728 $<W$ \u548c $>W$ \u8fd9\u4e24\u4e2a\u6761\u4ef6\u4e2d\u53bb\u6389\u4e00\u4e2a\n\n- \u8003\u8651\u6743\u503c\u4e3a $W$ \u7684\u53f6\u5b50\u5230\u6839\u7684\u4e00\u6761\u94fe\n\n- \u5bb9\u6613\u53d1\u73b0\u6839\u8282\u70b9\u7684\u6743\u503c\u4f1a\u88ab\u6539\u53d8\uff0c\u5f53\u4e14\u4ec5\u5f53\u8fd9\u6761\u94fe\u4e0a\u5b58\u5728\u4e00\u4e2a\u70b9\u4f1a\u88ab\u6539\u53d8\n\n- \u8bbe\u8fd9\u6761\u94fe\u4e0a\u6709\u4e00\u4e2a\u6df1\u5ea6\u4e3a\u5947\u6570\u7684\u70b9 $u$ \uff08\u5076\u6570\u540c\u7406\uff09\uff0c\u8003\u8651\u628a\u94fe\u4e0a\u6240\u6709\u7684\u8fb9\u90fd\u5220\u6389\u4e4b\u540e $u$ \u6240\u5728\u7684\u8fde\u901a\u5757\n\n- \u6613\u5f97\u5728\u539f\u6811\u4e0a $u$ \u7684\u6743\u503c\u4f1a\u88ab\u6539\uff0c\u5f53\u4e14\u4ec5\u5f53\u5220\u8fb9\u4e4b\u540e**\u5c31 $u$ \u6240\u5728\u7684\u8fde\u901a\u5757**\uff0c\u80fd\u8ba9 $u$ \u7684\u6743\u503c\u5927\u4e8e $W$\n\n- \u7279\u6b8a\u5730\uff0c\u5982\u679c $u$ \u662f\u53f6\u5b50\u90a3\u4e48 $u$ \u7684\u6743\u503c\u4f1a\u88ab\u6539\u5f53\u4e14\u4ec5\u5f53 $u$ \u5728\u9009\u5b9a\u96c6\u5408\u5185\u4e14 $k>0$\n\n- \u8fd9\u6837\u6211\u4eec\u5c31\u5b9e\u73b0\u4e86\u5728 $<W$ \u548c $>W$ \u8fd9\u4e24\u4e2a\u6761\u4ef6\u4e2d\u53bb\u6389\u4e00\u4e2a\n\n- \u6211\u4eec\u6709\u4e86\u4e00\u4e2a DP\uff1a$f[u]$ \u8868\u793a $u$ \u7684\u5b50\u6811\u5185\u7684\u53f6\u5b50\u8282\u70b9\u6709\u591a\u5c11\u4e2a\u5b50\u96c6\u80fd\u8ba9 $u$ \u7684\u6743\u503c\u5927\u4e8e $W$\n\n- \u5982\u679c $u$ \u7684\u6df1\u5ea6\u4e3a\u5947\u6570\uff08$cnt_u$ \u4e3a $u$ \u7684\u5b50\u6811\u5185\u53f6\u5b50\u4e2a\u6570\uff09\uff1a\n\n- $$f[u]=2^{cnt_u}-\\prod_{v\\in son[u]}(2^{cnt_v}-f[v])$$\n\n- \u5426\u5219\uff1a\n\n- $$f[u]=\\prod_{v\\in son[u]}f[v]$$\n\n- \u628a\u6240\u6709\u8fde\u901a\u5757\u7684 DP \u7ed3\u679c\u7528 $2^{cnt}$ \u51cf\u6389\u540e\u4e58\u8d77\u6765\uff0c\u5373\u4e3a\u6839\u8282\u70b9\u6743\u503c**\u4e0d\u4f1a\u88ab\u6539\u53d8**\u7684\u65b9\u6848\u6570\n\n- \u5bf9\u6bcf\u4e2a $k$ \u8fdb\u884c DP \u7684\u590d\u6742\u5ea6\u4e3a $O(n^2)$\n\n- \u8003\u8651\u5982\u4f55\u4f18\u5316\u3002\u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u4e2a DP \u7684\u8f6c\u79fb\u548c $k$ \u65e0\u5173\uff0c\u53ea\u6709\u521d\u59cb\u503c\uff08\u53f6\u5b50\uff09\u548c $k$ \u6709\u5173\n\n- \u800c\u5982\u679c\u4e00\u4e2a\u70b9 $u$ \u6240\u5728\u7684\u8fde\u901a\u5757\u6839\u5728\u539f\u6811\u4e2d\u7684\u6df1\u5ea6\u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u70b9 $u$ \u7684\u521d\u503c\u5e94\u8be5\u4e3a\uff1a\n\n- $$f[u]=[u>W]+[u+k>W]$$\n\n- \u6ce8\u610f\u5230\u5f53 $k$ \u4e0d\u65ad\u52a0\u4e00\u7684\u65f6\u5019\uff0c $[u+k>W]$ \u53ea\u4f1a\u6539\u53d8\u4e00\u6b21\n\n- \u4e8e\u662f\u4ece\u5c0f\u5230\u5927\u679a\u4e3e $k$ \u540e\u52a8\u6001 DP \u5373\u53ef\n\n- \u6ce8\u610f\u7531\u4e8e $f[u]$ \u53ef\u4ee5\u4e3a $0$ \uff0c\u6240\u4ee5\u5f80\u4e0a\u66f4\u65b0 DP \u503c\u65f6\u4e0d\u80fd\u628a $f[fa[u]]$ \u76f4\u63a5\u9664\u4ee5 $f[u]$ \uff0c\u800c\u9700\u8981\u5bf9\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u4e00\u4e2a\u53d8\u91cf\u8868\u793a\u5b50\u8282\u70b9\u7684 DP \u503c\u4e2d\u6709\u591a\u5c11\u4e2a $0$ \uff0c\u53e6\u4e00\u4e2a\u53d8\u91cf\u8868\u793a\u5b50\u8282\u70b9\u4e0d\u4e3a $0$ \u7684 DP \u503c\u4e4b\u79ef\n\n- $O(n\\log^2n)$\n\n## Code\n```cpp\n#include <bits/stdc++.h>\n#define p2 p << 1\n#define p3 p << 1 | 1\n\ntemplate <class T>\ninline void read(T &res)\n{\n\tres = 0; bool bo = 0; char c;\n\twhile (((c = getchar()) < '0' || c > '9') && c != '-');\n\tif (c == '-') bo = 1; else res = c - 48;\n\twhile ((c = getchar()) >= '0' && c <= '9')\n\t\tres = (res << 3) + (res << 1) + (c - 48);\n\tif (bo) res = ~res + 1;\n}\n\ntemplate <class T>\ninline T Min(const T &a, const T &b) {return a < b ? a : b;}\n\ntemplate <class T>\ninline T Max(const T &a, const T &b) {return a > b ? a : b;}\n\nconst int N = 2e5 + 5, M = N << 1, L = M << 1, rqy = 998244353;\n\nint n, l, r, dep[N], ecnt, nxt[M], adj[N], go[M], val[N], ans[N], f[N], cnt[N],\nfa[N], sze[N], son[N], top[N], pos[N], idx[N], bot[N], QAQ, pw[N], re[N], c0[N],\nrea = 1, cnt0;\nbool lea[N], bel[N];\n\nint qpow(int a, int b)\n{\n\tint res = 1;\n\twhile (b)\n\t{\n\t\tif (b & 1) res = 1ll * res * a % rqy;\n\t\ta = 1ll * a * a % rqy;\n\t\tb >>= 1;\n\t}\n\treturn res;\n}\n\nstruct modi\n{\n\tint a, b;\n\t\n\tfriend inline modi operator * (modi x, modi y)\n\t{\n\t\treturn (modi) {(int) (1ll * x.a * y.a % rqy),\n\t\t\t(int) ((1ll * x.a * y.b + x.b) % rqy)};\n\t}\n\t\n\tfriend inline int operator * (modi x, int y)\n\t{\n\t\treturn (1ll * x.a * y + x.b) % rqy;\n\t}\n} g[N], gp[L];\n\nvoid add_edge(int u, int v)\n{\n\tnxt[++ecnt] = adj[u]; adj[u] = ecnt; go[ecnt] = v;\n\tnxt[++ecnt] = adj[v]; adj[v] = ecnt; go[ecnt] = u;\n}\n\nvoid dfs(int u, int fu)\n{\n\tdep[u] = dep[fu] + 1;\n\tval[u] = dep[u] & 1 ? 1 : n;\n\tbool is = 1;\n\tfor (int e = adj[u], v; e; e = nxt[e])\n\t\tif ((v = go[e]) != fu)\n\t\t{\n\t\t\tdfs(v, u); is = 0;\n\t\t\tif (dep[u] & 1) val[u] = Max(val[u], val[v]);\n\t\t\telse val[u] = Min(val[u], val[v]);\n\t\t}\n\tif (is) lea[val[u] = u] = 1, ans[0] = (ans[0] + ans[0]) % rqy;\n}\n\nvoid dfs1(int u, int fu, bool op)\n{\n\tfa[u] = fu; sze[u] = 1; bel[u] = op; cnt[u] = lea[u];\n\tfor (int e = adj[u], v; e; e = nxt[e])\n\t\tif ((v = go[e]) != fu && val[v] != val[1])\n\t\t{\n\t\t\tdfs1(v, u, op);\n\t\t\tsze[u] += sze[v]; cnt[u] += cnt[v];\n\t\t\tif (sze[v] > sze[son[u]]) son[u] = v;\n\t\t}\n\tf[u] = (op ? val[u] > val[1] : val[u] < val[1]) ? pw[cnt[u]] : 0;\n\tg[u].a = re[u] = 1;\n\tif ((dep[u] & 1) ^ op)\n\t{\n\t\tfor (int e = adj[u], v; e; e = nxt[e])\n\t\t\tif ((v = go[e]) != fu && val[v] != val[1] && v != son[u])\n\t\t\t{\n\t\t\t\tg[u].a = 1ll * g[u].a * f[v] % rqy;\n\t\t\t\tif (f[v]) re[u] = 1ll * re[u] * f[v] % rqy; else c0[u]++;\n\t\t\t}\n\t}\n\telse\n\t{\n\t\tfor (int e = adj[u], v; e; e = nxt[e])\n\t\t\tif ((v = go[e]) != fu && val[v] != val[1] && v != son[u])\n\t\t\t{\n\t\t\t\tint tmp = (pw[cnt[v]] - f[v] + rqy) % rqy;\n\t\t\t\tg[u].a = 1ll * g[u].a * tmp % rqy;\n\t\t\t\tif (tmp) re[u] = 1ll * re[u] * tmp % rqy; else c0[u]++;\n\t\t\t}\n\t\tg[u].b = (pw[cnt[u]] - 1ll * g[u].a * pw[cnt[son[u]]] % rqy + rqy) % rqy;\n\t}\n\tbot[u] = son[u] ? bot[son[u]] : u;\n}\n\nvoid dfs2(int u, int fu)\n{\n\tif (son[u])\n\t{\n\t\ttop[son[u]] = top[u];\n\t\tidx[pos[son[u]] = ++QAQ] = son[u];\n\t\tdfs2(son[u], u);\n\t}\n\tfor (int e = adj[u], v; e; e = nxt[e])\n\t\tif ((v = go[e]) != fu && v != son[u] && val[v] != val[1])\n\t\t\ttop[v] = v, idx[pos[v] = ++QAQ] = v, dfs2(v, u);\n}\n\nvoid build(int l, int r, int p)\n{\n\tif (l == r) return (void) (gp[p] = g[idx[l]]);\n\tint mid = l + r >> 1;\n\tbuild(l, mid, p2); build(mid + 1, r, p3);\n\tgp[p] = gp[p2] * gp[p3];\n}\n\nvoid change(int l, int r, int pos, modi v, int p)\n{\n\tif (l == r) return (void) (gp[p] = v);\n\tint mid = l + r >> 1;\n\tif (pos <= mid) change(l, mid, pos, v, p2);\n\telse change(mid + 1, r, pos, v, p3);\n\tgp[p] = gp[p2] * gp[p3];\n}\n\nmodi ask(int l, int r, int s, int e, int p)\n{\n\tif (e < l || s > r) return (modi) {1, 0};\n\tif (s <= l && r <= e) return gp[p];\n\tint mid = l + r >> 1;\n\treturn ask(l, mid, s, e, p2) * ask(mid + 1, r, s, e, p3);\n}\n\nvoid modify(int u, int x)\n{\n\tbool fi = 1; int of;\n\twhile (1)\n\t{\n\t\tint v = top[u], w = fa[v], rf = f[v], nf;\n\t\tif (fi) fi = 0, f[u] = x; nf = f[v];\n\t\tif (v != bot[u]) nf = f[v] =\n\t\t\task(1, n, pos[v], pos[bot[u]] - 1, 1) * f[bot[u]] % rqy;\n\t\tif (!w) {of = rf; u = v; break;}\n\t\tif ((dep[v] & 1) ^ bel[v]) rf = (pw[cnt[v]] - rf + rqy) % rqy,\n\t\t\tnf = (pw[cnt[v]] - nf + rqy) % rqy;\n\t\tif (!rf) c0[w]--; else re[w] = 1ll * re[w] * qpow(rf, rqy - 2) % rqy;\n\t\tif (!nf) c0[w]++; else re[w] = 1ll * re[w] * nf % rqy;\n\t\tg[w].a = c0[w] ? 0 : re[w];\n\t\tg[w].b = (dep[w] & 1) ^ bel[w] ? 0 : (pw[cnt[w]] -\n\t\t\t1ll * g[w].a * pw[cnt[son[w]]] % rqy + rqy) % rqy;\n\t\tchange(1, n, pos[w], g[w], 1);\n\t\tu = w;\n\t}\n\tif (of == pw[cnt[u]]) cnt0--; else rea = 1ll * rea *\n\t\tqpow(pw[cnt[u]] - of + rqy, rqy - 2) % rqy;\n\tif (f[u] == pw[cnt[u]]) cnt0++;\n\t\telse rea = 1ll * rea * (pw[cnt[u]] - f[u] + rqy) % rqy;\n}\n\nint main()\n{\n\tint x, y;\n\tread(n); read(l); read(r);\n\tfor (int i = 1; i < n; i++)\n\t\tread(x), read(y), add_edge(x, y);\n\tans[0] = pw[0] = ans[n] = 1; dfs(1, 0);\n\tfor (int i = 1; i <= n; i++) pw[i] = (pw[i - 1] + pw[i - 1]) % rqy;\n\trea = 499122177ll * ans[0] % rqy;\n\tfor (int u = 1; u <= n; u++)\n\t{\n\t\tif (val[u] != val[1] || u == val[1]) continue;\n\t\tdfs1(u, 0, dep[u] & 1);\n\t\tif (!cnt[u] || lea[u]) continue;\n\t\tidx[pos[u] = ++QAQ] = top[u] = u;\n\t\tdfs2(u, 0);\n\t}\n\tbuild(1, n, 1);\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tif (i > 1 && val[1] >= i && lea[val[1] - i + 1] && bel[val[1] - i + 1])\n\t\t\tmodify(val[1] - i + 1, 1);\n\t\tif (i > 1 && val[1] <= n - i + 1 && lea[val[1] + i - 1]\n\t\t\t&& !bel[val[1] + i - 1]) modify(val[1] + i - 1, 1);\n\t\tans[i] = cnt0 ? 0 : rea;\n\t}\n\tfor (int i = l; i <= r; i++) printf(\"%d \", (ans[i - 1] - ans[i] + rqy) % rqy);\n\treturn puts(\"\"), 0;\n}\n```",
        "postTime": 1577165621,
        "uid": 29936,
        "name": "xyz32768",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5281 \u3010[ZJOI2019]Minimax\u641c\u7d22\u3011"
    },
    {
        "content": "$\\%\\%\\% lyx$ \u8003\u573a\u5207 $T_3$\n\n\u6211\u6765\u53e3\u80e1\u4e00\u4e2a\u5047\u7684 $O(n\\log n)$ \u89e3\u6cd5\u3002\n\n\u4e00\u4e9b\u5e9f\u8bdd\uff1a\u6211\u8003\u524d\u5976 $noip$ \u6709\u52a8\u6001 $dp$ \u90a3\u4e48 $ZJOI$ \u4e5f\u6709\u4e00\u9053\u52a8\u6001 $dp$\uff0c\u7ed3\u679c\u5976\u4e2d\u4e86\u3002\n\n### \u524d\u7f6e\u77e5\u8bc6\uff1a\u52a8\u6001 $dp$\n\n\u6700\u597d\u662f\u7528\u5168\u5c40\u5e73\u8861\u4e8c\u53c9\u6811\uff0c\u7528\u5176\u4ed6\u7684\u4e5f\u53ef\u4ee5\uff0c\u65f6\u9650\u4e0d\u5361\u3002\n\n\u73b0\u5728\u6211\u4eec\u8981\u6316\u6398\u6839\u7ed3\u70b9\u7684\u503c\u6539\u53d8\u548c\u51fd\u6570 $w(S)$ \u6709\u4ec0\u4e48\u7279\u6b8a\u7684\u6027\u8d28\u3002\n\n### 1\u3001$W$ \u5728\u53d8\u5316\u6210 $W\\pm k$ \u7684\u5f62\u5f0f\u65f6\u4e00\u5b9a\u80fd\u53d8\u5316\u6210 $W\\pm 1$\n\n\u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 $O(n)$ \u65f6\u95f4\u5185\u6c42\u51fa\u5f53\u524d\u7684 $W$\n\n\u6211\u4eec\u53d1\u73b0\u9012\u63a8\u5f0f\uff1a\n\n$$\\begin{cases}w_i=\\text{min}_{fa_j=i}\\ w_j&dep_i\\ \\text{mod}\\ 2=0,i\\notin leaf\\\\w_i=\\text{max}_{fa_j=i}\\ w_j&dep_i\\ \\text{mod}\\ 2=1,i\\notin leaf\\\\w_i=i&i\\in leaf\\end{cases}$$\n\n\u53ef\u77e5 $w_i$ \u4e00\u5b9a\u53d6\u81ea\u53f6\u5b50\u7ed3\u70b9\u7684\u7f16\u53f7\u3002\u5bf9\u4e8e\u4e00\u4e2a\u96c6\u5408 $S$\uff0c\u6211\u4eec\u9a8c\u8bc1\u662f\u5426\u5b58\u5728 $w(S)=k$ \u7b49\u4ef7\u4e8e\u628a\u5f53\u524d\u6240\u6709 $|T|=k$ \u5b50\u96c6\u7684\u5143\u7d20\u6539\u6210 $W\\pm1$ \u8dd1\u4e00\u904d $O(n)$ \u7684\u6811\u5f62 $dp$\n\n### 2\u3001$w(S)\\leq k$ \u7b49\u4ef7\u4e8e $w({x|x\\in S,x<W})\\leq k$ \u6216 $w({x|x\\in S,x>W})\\leq k$\n\n\u5176\u5b9e\u5c31\u662f\u628a $x>W$ \u7684\u53f6\u5b50\u7ed3\u70b9\u6539\u6210 $W-1$\uff0c$x<W$ \u7684\u53f6\u5b50\u7ed3\u70b9\u6539\u6210 $W+1$ \u7136\u540e\u5224\u5408\u6cd5\u3002\n\n### 3\u3001\u8f6c\u5316\u8be2\u95ee\u5f62\u5f0f\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u7b54\u6848\u5dee\u5206\u4e00\u4e0b\uff0c\u6c42 $w(S)\\leq k$ \u7684\u65b9\u6848\u6570\u3002\u65b9\u6848\u6570\u5982\u679c\u4e0d\u597d\u5408\u5e76\uff0c\u90a3\u4e48\u8f6c\u5316\u6210\u6982\u7387\u3002$[L,R]$ \u8fd9\u4e2a\u533a\u95f4\u53ea\u662f\u4e3a\u4e86\u7ed9\u90e8\u5206\u5206\u7528\u7684\u3002\n\n### 4\u3001\u5f00\u59cb $dp$\n\n$x<W$ \u548c $x>W$ \u7684 $dp$ \u662f\u7c7b\u4f3c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u8ba8\u8bba\u4e00\u79cd\u60c5\u51b5\u3002\n\n$f_i$ \u8868\u793a\u5728 $i$ \u7684\u6743\u503c $<W$ \u7684\u6982\u7387\u3002\n\n$$f'_i=\\prod_{fa_j=i}(1-f'_j)$$\n\n$$f'_i=[i\\ \\text{mod}\\ 2=0]f_i+[i\\ \\text{mod}\\ 2=1](1-f_i)$$\n\n\u8fd9\u4e24\u6761\u5f0f\u5b50\u53ef\u4ee5\u53bb\u6389\u6df1\u5ea6\u5947\u5076\u6027\u7684\u5206\u7c7b\uff0c\u5177\u4f53\u63a8\u5bfc\u53ef\u4ee5\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u5e76\u4fee\u6539\u6bcf\u4e2a\u53f6\u5b50\u7ed3\u70b9\u7684\u6982\u7387\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5\u7528\u52a8\u6001 $dp$ \u5b9e\u73b0\u3002\n\n\u4f46\u662f\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u6bcf\u4e00\u6b21\u6211\u4eec\u8981\u91cd\u65b0\u9664\u4ee5 $1-f'_j$\uff0c\u5c31\u65e0\u6cd5\u907f\u514d $1-f'_j$ \u4e3a $0$ \u7684\u60c5\u51b5\u3002\u90a3\u4e48\u6211\u4eec\u8fd8\u8981\u518d\u5199\u4e00\u4e2a $data$ \u7ed3\u6784\u4f53\uff0c\u4eba\u5de5\u6392\u9664\u8fd9\u79cd\u60c5\u51b5\u3002\n\n\u7531\u4e8e\u6bcf\u6b21\u6211\u4eec\u90fd\u8981\u6c42 $1-f'_j$ \u7684\u9006\u5143\uff0c\u6240\u4ee5\u7406\u8bba\u4e0a\u8fd8\u6709\u4e00\u4e2a $\\log$ \u7684\u3002\u6211\u95ee\u4e86\u4e00\u4e0b $kczno1$\uff0c\u8fd9\u4e2a\u89e3\u6cd5\u53ef\u4ee5\u88ab\u5b8c\u5168\u53ef\u4ee5\u88ab\u5b8c\u5168\u4e8c\u53c9\u6811\u5361\u5230 $O(n\\log^2 n)$\n\n$Code\\ Below:$\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int maxn=200000+10;\nconst int mod=998244353;\nint n,L,R,head[maxn],to[maxn<<1],nxt[maxn<<1],tot;\nint m,W,w[maxn],top[maxn],dep[maxn],siz[maxn],son[maxn],fa[maxn];ll ans[maxn];\n\ninline int read()\n{\n\tregister int x=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n\twhile(isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n\treturn (f==1)?x:-x;\n}\n\nvoid print(ll x)\n{\n\tif(x<0){putchar('-');x=-x;}\n\tif(x>9) print(x/10);\n\tputchar(x%10+'0');\n}\n\ninline ll fpow(ll a,ll b)\n{\n\tll ret=1;\n\tfor(;b;b>>=1,a=a*a%mod)\n\t\tif(b&1) ret=ret*a%mod;\n\treturn ret;\n}\n\ninline void addedge(int x,int y)\n{\n\tto[++tot]=y;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n}\n\nvoid dfs(int x,int f)\n{\n\tsiz[x]=1;fa[x]=f;dep[x]=dep[f]+1;\n\tint maxson=-1;\n\tfor(int i=head[x],y;i;i=nxt[i])\n\t{\n\t\ty=to[i];\n\t\tif(y==f) continue;\n\t\tdfs(y,x);siz[x]+=siz[y];\n\t\tif(siz[y]>maxson) son[x]=y,maxson=siz[y];\n\t}\n\tif(!son[x]) w[x]=x;\n\telse\n\t{\n\t\tw[x]=w[son[x]];\n\t\tfor(int i=head[x],y;i;i=nxt[i])\n\t\t{\n\t\t\ty=to[i];\n\t\t\tif(y==f||y==son[x]) continue;\n\t\t\tif(dep[x]&1) w[x]=max(w[x],w[y]);\n\t\t\telse w[x]=min(w[x],w[y]);\n\t\t}\n\t}\n}\n\nstruct data\n{\n\tll x;int now;\n\tinline void operator *= (const ll &b)\n\t{\n\t\tif(!b) now++;\n\t\telse x=x*b%mod;\n\t}\n\tinline void operator /= (const ll &b)\n\t{\n\t\tif(!b) now--;\n\t\telse x=x*fpow(b,mod-2)%mod;\n\t}\n\tinline operator ll()\n\t{\n\t\treturn now?0:x;\n\t}\n};\n\nstruct node\n{\n\tll x,y;\n\tinline operator ll()\n\t{\n\t\treturn y;\n\t}\n};\ninline node operator + (const node &a,const node &b)\n{\n\treturn (node){a.x*b.x%mod,(a.y+a.x*b.y)%mod};\n}\n\nstruct Global_bst\n{\n\tint rt,ch[maxn][2],fa[maxn],sta[maxn],top;bool nrt[maxn],d;\n\tnode sum[maxn];data dp[maxn];\n\tinline void pushup(int x)\n\t{\n\t\tsum[x]=(node){-dp[x],dp[x]};\n\t\tif(ch[x][0]) sum[x]=sum[ch[x][0]]+sum[x];\n\t\tif(ch[x][1]) sum[x]=sum[x]+sum[ch[x][1]];\n\t}\n\tint build(int l,int r)\n\t{\n\t\tif(l>r) return 0;\n\t\tint sum=0,now=0,x;\n\t\tfor(int i=l;i<=r;i++) sum+=siz[sta[i]]-siz[son[sta[i]]];\n\t\tfor(int i=l;i<=r;i++)\n\t\t{\n\t\t\tnow+=siz[sta[i]]-siz[son[sta[i]]];\n\t\t\tif((now<<1)>=sum)\n\t\t\t{\n\t\t\t\tx=sta[i];\n\t\t\t\tif(!son[x])\n\t\t\t\t{\n\t\t\t\t\tif(d==0) dp[x].x=(x<W);\n\t\t\t\t\telse dp[x].x=1-(x>W);\n\t\t\t\t\tif(!(dep[x]&1)) dp[x].x=1-dp[x].x;\n\t\t\t\t}\n\t\t\t\tfa[ch[x][0]=build(l,i-1)]=x;\n\t\t\t\tfa[ch[x][1]=build(i+1,r)]=x;\n\t\t\t\tpushup(x);return x;\n\t\t\t}\n\t\t}\n\t}\n\tint dfs(int topf,int f)\n\t{\n\t\tfor(int x=topf;x;f=x,x=son[x])\n\t\t{\n\t\t\tdp[x].x=1;\n\t\t\tfor(int i=head[x],y,z;i;i=nxt[i])\n\t\t\t{\n\t\t\t\ty=to[i];\n\t\t\t\tif(y==f||y==son[x]) continue;\n\t\t\t\tz=dfs(y,x);fa[z]=x;dp[x]*=1-sum[z];\n\t\t\t}\n\t\t}\n\t\ttop=0;\n\t\tfor(int x=topf;x;x=son[x]) sta[++top]=x;\n\t\treturn build(1,top);\n\t}\n\tinline void init()\n\t{\n\t\trt=dfs(1,0);\n\t\tfor(int x=1;x<=n;x++)\n\t\t{\n\t\t\tif(ch[fa[x]][0]==x||ch[fa[x]][1]==x) nrt[x]=1;\n\t\t\telse nrt[x]=0;\n\t\t}\n\t}\n\tinline void modify(int x,ll y)\n\t{\n\t\tif(!(dep[x]&1)) y=1-y;\n\t\tdp[x].x=y;dp[x].now=0;\n\t\twhile(x)\n\t\t{\n\t\t\tif(!nrt[x])\n\t\t\t{\n\t\t\t\tdp[fa[x]]/=1-sum[x];\n\t\t\t\tpushup(x);\n\t\t\t\tdp[fa[x]]*=1-sum[x];\n\t\t\t}\n\t\t\telse pushup(x);\n\t\t\tx=fa[x];\n\t\t}\n\t}\n\tinline ll get()\n\t{\n\t\treturn sum[rt];\n\t}\n}T[2];\n\nint main()\n{\n\tn=read(),L=read(),R=read();\n\tint x,y;\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tx=read(),y=read();\n\t\taddedge(x,y),addedge(y,x);\n\t}\n\tdfs(1,0);W=w[1];\n\tfor(int x=1;x<=n;x++)\n\t\tif(x!=son[fa[x]])\n\t\t\tfor(int y=x;y;y=son[y]) top[y]=x;\n\tfor(int x=1;x<=n;x++) m+=!son[x];\n\tll now=fpow(2,m-1),inv2=(mod+1)>>1;\n\tT[0].d=0;T[1].d=1;T[0].init();T[1].init();\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tx=W+i-1;\n\t\tif(x>W&&x<=n&&!son[x]) T[0].modify(x,inv2);\n\t\tx=W-i+1;\n\t\tif(x>0&&x<W&&!son[x]) T[1].modify(x,inv2);\n\t\tans[i]=now*(2-(1-T[0].get())*T[1].get()%mod)%mod;\n\t}\n\tans[n]=now*2-1;\n\tfor(int i=L;i<=R;i++) print(((ans[i]-ans[i-1])%mod+mod)%mod),putchar(' ');\n\tputchar('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1554276895,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5281 \u3010[ZJOI2019]Minimax\u641c\u7d22\u3011"
    },
    {
        "content": "## Solution\n\u8003\u8651\u5bf9 $k\\in [l-1,r]$ \u5206\u522b\u6c42\u51fa\u6709\u591a\u5c11\u4e2a\u96c6\u5408 $S$ \u6ee1\u8db3 $w(S)\\le k$\uff0c\u8bb0\u4f5c $ans_k$\u3002\n\n\u5148\u6c42\u51fa $1$ \u7684\u521d\u59cb\u6743\u503c $W$\u3002\n\n\u8bb0 $val(x)$ \u8868\u793a $x$ \u7684\u6743\u503c\u3002\u679a\u4e3e $k$\uff0c\u73b0\u5728\u5bf9\u4e8e\u6bcf\u4e2a\u53f6\u5b50 $u$\uff0c\u5982\u679c $u\\in S$\uff0c\u90a3\u4e48 $val(u)\\in [u-W,u+W]$\uff0c\u5426\u5219 $val(u)=W$\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u628a\u53f6\u5b50\u8282\u70b9\u7684\u6743\u503c\u6539\u6210 $W$ \u80af\u5b9a\u662f\u4e0d\u4f18\u7684\u3002\u6240\u4ee5\u6539\u52a8\u4e00\u4e9b\u53f6\u5b50\u540e\uff0c\u5982\u679c $val(1)$ \u8fd8\u662f $W$\uff0c\u90a3\u4e48\u80af\u5b9a\u8def\u5f84 $1\u2192W$ \u4e0a\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u90fd\u662f $W$\uff0c\u4e14\u5176\u5b83\u7684\u70b9\u7684\u6743\u503c\u90fd\u4e0d\u662f $W$\u3002\n\n\u56e0\u6b64\uff0c\u5982\u679c\u60f3\u8981 $val(1)$ \u6539\u53d8\uff0c\u90a3\u4e48\u8def\u5f84 $1\u2192W$ \u4e0a\u80af\u5b9a\u5b58\u5728\u4e00\u4e2a\u70b9 $x$\uff0c$val(x)\\ne W$\u3002\u8bb0 $x$ \u5728\u8def\u5f84 $1\u2192W$ \u4e0a\u7684\u5b50\u8282\u70b9\u4e3a $y$\u3002\u5982\u679c $x$ \u6df1\u5ea6\u662f\u5947\u6570\uff0c  \u90a3\u4e48\u80af\u5b9a\u5b58\u5728\u4e00\u4e2a $x$ \u7684\u5b50\u8282\u70b9 $z(z\\ne y)$\uff0c$val(z)>W$\u3002$x$ \u6df1\u5ea6\u662f\u5076\u6570\u65f6\u540c\u7406\u3002\n\n\u6211\u4eec\u628a $1\u2192W$ \u4e0a\u7684\u8fb9\u5168\u90e8\u65ad\u6389\uff0c\u518d\u6c42\u4e00\u904d\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u3002\u5982\u679c\u539f\u8def\u5f84 $1\u2192W$ \u4e0a\u5b58\u5728\u67d0\u4e2a\u6df1\u5ea6\u4e3a\u5947\u6570\u7684\u70b9\u7684\u6743\u503c $>W$\uff0c\u6216\u8005\u67d0\u4e2a\u6df1\u5ea6\u4e3a\u5076\u6570\u7684\u70b9\u7684\u6743\u503c $<W$\uff0c\u90a3\u4e48 $val(1)$ \u80af\u5b9a\u6539\u53d8\uff0c\u5426\u5219\u80af\u5b9a\u4e0d\u53d8\u3002\n\n\u8bb0 $f(u)$ \u8868\u793a $u$ \u5b50\u6811\u4e2d\uff0c\u4f7f $val(u)>w$ \u7684\u5408\u6cd5\u53f6\u5b50\u8282\u70b9\u96c6\u5408\u6709\u51e0\u4e2a\u3002$g(u)$ \u8868\u793a $u$ \u5b50\u6811\u4e2d\uff0c\u4f7f $val(u)<w$ \u7684\u5408\u6cd5\u53f6\u5b50\u8282\u70b9\u96c6\u5408\u6709\u51e0\u4e2a\u3002\n\n\u5982\u679c $u$ \u662f\u53f6\u5b50\u8282\u70b9\uff1a$f(u)=[u>W]+[u+k>W],g(u)=[u<W]+[u-k<W]$\u3002\u5176\u4e2d $[u>W],[u<W]$ \u8868\u793a $u$ \u4e0d\u5728\u53f6\u5b50\u8282\u70b9\u96c6\u5408\u5185\uff0c$[u+k>W],[u-k<W]$ \u8868\u793a\u5728\u96c6\u5408\u5185\u3002\n\n\u5982\u679c $u$ \u662f\u6df1\u5ea6\u4e3a\u5947\u6570\u7684\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c $val(u)>W$\uff0c\u90a3\u4e48 $u$ \u7684\u5b50\u8282\u70b9\u6700\u5927\u6743\u503c\u5fc5\u987b $>W$\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u80fd\u5168\u90e8 $\\le W$\u3002\u56e0\u6b64 $f(u)=2^{cnt_u}\\prod_{v\\in son_u}(2^{cnt_v}-f(v))$\u3002\u5176\u4e2d $cnt_u$ \u8868\u793a $u$ \u7684\u5b50\u6811\u5185\u6709\u51e0\u4e2a\u53f6\u5b50\u8282\u70b9\u3002\n\n\u5982\u679c $u$ \u662f\u6df1\u5ea6\u4e3a\u5076\u6570\u7684\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c $val(u)>W$\uff0c\u90a3\u4e48 $u$ \u7684\u5b50\u8282\u70b9\u5168\u90e8 $<W$\u3002\u56e0\u6b64 $f(u)=\\prod_{v\\in son_u}f(v)$\u3002\n\n$g$ \u7684\u8f6c\u79fb\u548c $f$ \u7c7b\u4f3c\u3002\n\n\u63a5\u4e0b\u6765\u6c42 $ans_k$\u3002\u8003\u8651\u8865\u96c6\u8f6c\u5316\uff0c\u5373\u7528 $2^{cnt_1}$ \u51cf\u53bb\u4e0d\u4f1a\u8ba9 $val(1)$ \u6539\u53d8\u7684\u96c6\u5408\u6570\u3002\u4e0d\u4f1a\u8ba9 $val(1)$ \u6539\u53d8\uff0c\u5c31\u662f\u8981\u8ba9\u539f\u8def\u5f84 $1\u2192W$ \u4e0a\u7684\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u90fd\u4e0d\u53d8\u3002\u90a3\u4e48\u628a\u6df1\u5ea6\u4e3a\u5947\u6570\u7684 $2^{cnt_x}-f_x$ \u548c\u6df1\u5ea6\u4e3a\u5076\u6570\u7684 $2^{cnt_x}-g_x$ \u5168\u90e8\u76f8\u4e58\u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a $O(n(R-L))$ \u7684\u505a\u6cd5\u3002\n\n\u8003\u8651\u4f18\u5316\uff0c\u6211\u4eec\u53d1\u73b0\u8f6c\u79fb\u4e0e $k$ \u65e0\u5173\uff0c\u53ea\u6709\u53f6\u5b50\u8282\u70b9\u7684 $f,g$ \u548c $k$ \u6709\u5173\u3002\u8fdb\u4e00\u6b65\u5730\uff0c\u6211\u4eec\u53d1\u73b0\u968f\u7740 $k$ \u53d8\u5927\uff0c\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684 $f,g$ \u6700\u591a\u6539\u53d8\u4e00\u6b21\u3002\u56e0\u6b64\u53ef\u4ee5\u770b\u4f5c\u662f $O(n)$ \u6b21\u4fee\u6539\u7684\u52a8\u6001 $dp$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2 n)$\u3002\n\n## Code\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define ll long long\n#define p2 p << 1\n#define p3 p << 1 | 1\n\ntemplate <class t>\ninline void read(t & res)\n{\n    char ch;\n    while (ch = getchar(), !isdigit(ch));\n    res = ch ^ 48;\n    while (ch = getchar(), isdigit(ch))\n    res = res * 10 + (ch ^ 48);\n}\n\ntemplate <class t>\ninline void print(t x)\n{\n    if (x > 9) print(x / 10);\n    putchar(x % 10 + 48);\n}\n\nconst int e = 2e5 + 5, mod = 998244353;\n\nstruct point\n{\n    int x, y;\n}b[e], que[e];\nstruct matrix\n{\n    int a, b;\n    \n    matrix(){}\n    matrix(int _a, int _b) :\n        a(_a), b(_b) {}\n}tr[e << 2];\nvector<int>g[e], c[e], d[e];\nint f[e], dep[e], L, R, w, n, fa[e], a[e], m, nxt[e], go[e], adj[e], val[e], K, cnt[e], f2[e];\nint q[e], h[e], num, all, sum[e << 2], son[e], sze[e], dfnA[e], dfnB[e], timA, timB, idA[e], idB[e];\nint st[e], ed[e], bot[e], top[e], ans[e], rt[e], now_rt;\nbool is[e], op, bo[e];\n\ninline void add(int &x, int y)\n{\n    (x += y) >= mod && (x -= mod);\n}\n\ninline void del(int &x, int y)\n{\n    (x -= y) < 0 && (x += mod);\n}\n\ninline int plu(int x, int y)\n{\n    add(x, y);\n    return x;\n}\n\ninline int sub(int x, int y)\n{\n    del(x, y);\n    return x;\n}\n\ninline int mul(int x, int y)\n{\n    return (ll)x * y % mod;\n}\n\ninline int ksm(int x, int y)\n{\n    int res = 1;\n    while (y)\n    {\n        if (y & 1) res = mul(res, x);\n        y >>= 1;\n        x = mul(x, x);\n    }\n    return res;\n}\n\ninline matrix operator + (matrix u, matrix v)\n{\n    return matrix(mul(u.a, v.a), plu(mul(u.b, v.a), v.b));\n}\n\ninline void link1(int x, int y)\n{\n    g[x].push_back(y);\n    g[y].push_back(x);\n}\n\ninline void link2(int x, int y)\n{\n    nxt[++num] = adj[x]; adj[x] = num; go[num] = y;\n}\n\ninline void dfs1(int u, int pa)\n{\n    dep[u] = dep[pa] + 1;\n    fa[u] = pa;\n    if (dep[u] & 1) val[u] = 0;\n    else val[u] = n + 1;\n    int len = g[u].size(), i;\n    bool pd = 0;\n    for (i = 0; i < len; i++)\n    {\n        int v = g[u][i];\n        if (v == pa) continue;\n        pd = 1;\n        dfs1(v, u);\n        if (dep[u] & 1) val[u] = max(val[u], val[v]);\n        else val[u] = min(val[u], val[v]);\n    }\n    if (!pd) val[u] = u, all++;   \n}\n\ninline void dfs2(int u)\n{\n    if (val[u] == u)\n    {\n        if (op) \n        {\n            f[u] = (u > w) + (u + K > w);\n            if (L <= w + 1 - u && w + 1 - u <= R) c[w + 1 - u].push_back(u);\n        }\n        else \n        {\n            f[u] = (u < w) + (u - K < w);\n            if (L <= u + 1 - w && u + 1 - w <= R) d[u + 1 - w].push_back(u);\n        }\n        return;\n    }\n    f[u] = f2[u] = 1;\n    bool fl = ((dep[u] & 1) && op) || ((~dep[u] & 1) && !op);\n    bo[u] = fl;\n    for (int i = adj[u]; i; i = nxt[i])\n    {\n        int v = go[i];\n        dfs2(v);\n        if (fl) f[u] = mul(f[u], sub(q[v], f[v]));\n        else f[u] = mul(f[u], f[v]);\n        if (v != son[u])\n        {\n            if (fl) f2[u] = mul(f2[u], sub(q[v], f[v]));\n            else f2[u] = mul(f2[u], f[v]);\n        }\n    }\n    if (fl) f[u] = sub(q[u], f[u]);\n}\n\ninline void dfs3(int u)\n{\n    if (val[u] == u) cnt[u] = 1;\n    sze[u] = 1;\n    rt[u] = now_rt;\n    for (int i = adj[u]; i; i = nxt[i])\n    {\n        int v = go[i];\n        dfs3(v);\n        cnt[u] += cnt[v];\n        sze[u] += sze[v];\n        if (sze[v] > sze[son[u]]) son[u] = v;\n    }\n}\n\ninline void dfs4(int u, int fi)\n{\n    top[u] = fi;\n    dfnA[u] = ++timA;\n    idA[timA] = u;\n    if (son[u]) \n    {\n        dfs4(son[u], fi);\n        st[u] = timB + 1;\n        for (int i = adj[u]; i; i = nxt[i])\n        {\n            int v = go[i];\n            if (v == son[u]) continue;\n            dfnB[v] = ++timB;\n            idB[timB] = v;\n        }\n        ed[u] = timB;\n    }\n    for (int i = adj[u]; i; i = nxt[i])\n    {\n        int v = go[i];\n        if (v == son[u]) continue;\n        dfs4(v, v);\n    }\n    if (son[u]) bot[u] = bot[son[u]];\n    else bot[u] = u;\n}\n\ninline void build(int l, int r, int p)\n{\n    if (l == r)\n    {\n        int u = idA[l], v = idB[l];\n        if (son[u])\n        {\n            if (bo[u])\n            {\n                int v = son[u];\n                tr[p] = matrix(f2[u], sub(q[u], mul(f2[u], q[v])));\n            }\n            else tr[p] = matrix(f2[u], 0);\n        }\n        if (v)\n        {\n            int pa = fa[v];\n            if (bo[pa]) sum[p] = sub(q[v], f[v]);\n            else sum[p] = f[v];\n        }\n        return;\n    }\n    int mid = l + r >> 1;\n    build(l, mid, p2);\n    build(mid + 1, r, p3);\n    tr[p] = tr[p3] + tr[p2];\n    sum[p] = mul(sum[p2], sum[p3]);\n}\n\ninline void upt_tr(int l, int r, int s, matrix u, int p)\n{\n    if (l == r)\n    {\n        tr[p] = u;\n        return;\n    }\n    int mid = l + r >> 1;\n    if (s <= mid) upt_tr(l, mid, s, u, p2);\n    else upt_tr(mid + 1, r, s, u, p3);\n    tr[p] = tr[p3] + tr[p2];\n}\n\ninline void upt_sum(int l, int r, int s, int v, int p)\n{\n    if (l == r)\n    {\n        sum[p] = v;\n        return;\n    }\n    int mid = l + r >> 1;\n    if (s <= mid) upt_sum(l, mid, s, v, p2);\n    else upt_sum(mid + 1, r, s, v, p3);\n    sum[p] = mul(sum[p2], sum[p3]);\n}\n\ninline matrix ask_tr(int l, int r, int s, int t, int p)\n{\n    if (l == s && r == t) return tr[p];\n    int mid = l + r >> 1;\n    if (t <= mid) return ask_tr(l, mid, s, t, p2);\n    else if (s > mid) return ask_tr(mid + 1, r, s, t, p3);\n    else return ask_tr(mid + 1, r, mid + 1, t, p3) + ask_tr(l, mid, s, mid, p2);\n}\n\ninline int ask_sum(int l, int r, int s, int t, int p)\n{\n    if (l == s && r == t) return sum[p];\n    int mid = l + r >> 1;\n    if (t <= mid) return ask_sum(l, mid, s, t, p2);\n    else if (s > mid) return ask_sum(mid + 1, r, s, t, p3);\n    else return mul(ask_sum(l, mid, s, mid, p2), ask_sum(mid + 1, r, mid + 1, t, p3));\n}\n\ninline void pair_mul(point &u, int x)\n{\n    if (!x) u.y++;\n    else u.x = mul(u.x, x);\n}\n\ninline void pair_div(point &u, int x)\n{\n    if (!x) u.y--;\n    else u.x = mul(u.x, ksm(x, mod - 2));\n}\n\ninline void cover(int &x, point u)\n{\n    int res = u.x;\n    if (u.y) res = 0;\n    x = sub(all, res);\n}\n\ninline int calc(int x, matrix c)\n{\n    return plu(mul(x, c.a), c.b);\n}\n\ninline int ask(int x)\n{\n    if (x == bot[x]) return f[x];\n    int l = dfnA[x], r = dfnA[bot[x]] - 1;\n    return calc(f[bot[x]], ask_tr(1, n, l, r, 1));\n}\n\ninline void change(int x)\n{\n    pair_div(que[K], sub(q[rt[x]], f[rt[x]]));\n    x = top[x];\n    while (x)\n    {\n        f[x] = ask(x);\n        if (!fa[x]) break;\n        int y = fa[x];\n        if (bo[y]) upt_sum(1, n, dfnB[x], sub(q[x], f[x]), 1);\n        else upt_sum(1, n, dfnB[x], f[x], 1);\n        f2[y] = ask_sum(1, n, st[y], ed[y], 1);\n        \n        matrix tmp;\n        if (bo[y])\n        {\n            int v = son[y];\n            tmp = matrix(f2[y], sub(q[y], mul(f2[y], q[v])));\n        }\n        else tmp = matrix(f2[y], 0);\n        upt_tr(1, n, dfnA[y], tmp, 1);\n        \n        x = top[y];\n    }\n    pair_mul(que[K], sub(q[x], f[x]));\n}\n\nint main()\n{\n    freopen(\"minimax.in\", \"r\", stdin);\n    freopen(\"minimax.out\", \"w\", stdout);\n    read(n); read(L); read(R);\n    int i, x, y, j;\n    for (i = 1; i < n; i++) read(x), read(y), link1(x, y), b[i].x = x, b[i].y = y;\n    dfs1(1, 0);\n    x = w = val[1];\n    h[0] = 1;\n    for (i = 1; i <= n; i++) h[i] = plu(h[i - 1], h[i - 1]);\n    while (x != 1)\n    {\n        a[++m] = x;\n        x = fa[x];\n    }\n    a[++m] = 1;\n    reverse(a + 1, a + m + 1);\n    for (i = 1; i <= m; i++) is[a[i]] = 1;\n    for (i = 1; i < n; i++)\n    {\n        x = b[i].x; y = b[i].y;\n        if (!is[x] || !is[y])\n        {\n            if (fa[x] == y) link2(y, x);\n            else link2(x, y);\n        }\n    }\n    for (i = 1; i <= m; i++) now_rt = a[i], dfs3(a[i]);\n    all = h[all];\n    for (i = 1; i <= n; i++) q[i] = h[cnt[i]];\n    for (i = 1; i <= m; i++) dfs4(a[i], a[i]), fa[a[i]] = 0;\n    \n    bool flag = 0;\n    if (L == 1) K = L, flag = 1, L++;\n    else K = L - 1;\n    que[K].x = 1;\n    for (j = 1; j <= m; j++) \n    {\n        int u = a[j];\n        op = j & 1; dfs2(u);\n        pair_mul(que[K], sub(q[u], f[u]));\n    }\n    cover(ans[K], que[K]);\n    build(1, n, 1);\n    for (i = L; i <= R; i++)\n    {\n        que[i] = que[i - 1];\n        K = i;\n        int lenc = c[i].size(), lend = d[i].size();\n        for (j = 0; j < lenc; j++)\n        {\n            int u = c[i][j];\n            f[u] = (u > w) + (u + K > w);\n            change(u);\n        }\n        for (j = 0; j < lend; j++)\n        {\n            int u = d[i][j];\n            f[u] = (u < w) + (u - K < w);\n            change(u);\n        }\n        if (i == n)\n        {\n            ans[i] = sub(all, 1);\n            continue;\n        }\n        cover(ans[i], que[i]);\n    }\n    if (flag) L--;\n    for (i = L; i <= R; i++) \n    print(sub(ans[i], ans[i - 1])), putchar(i == R ? '\\n' : ' ');\n    return 0;\n}\n```",
        "postTime": 1589858554,
        "uid": 15268,
        "name": "\u82b1\u6dc7\u6dcb",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5281 \u3010[ZJOI2019]Minimax\u641c\u7d22\u3011"
    },
    {
        "content": "# Solution\n\n\u8003\u8651\u5dee\u5206\uff0c\u6c42\u51fa$w(S)\\leq k$\u7684\u96c6\u5408\u6570\u3002\n\n - \u663e\u7136\uff0c$w$\u7684\u503c\u57df\u662f\u8fde\u7eed\u7684\u3002\u6240\u4ee5$w$\u53ea\u4f1a\u53d8\u6210$w+1$\u6216$w-1$\u3002\n - \u663e\u7136\uff0c$w(S)\\leq 1$\u7684\u96c6\u5408\u6570\u4e3a$2^{m-1}$\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u8ba8\u8bba\u7684\u65f6\u5019\u9ed8\u8ba4$w$\u8282\u70b9\u4e0d\u4f1a\u4fee\u6539\u3002\n - \u53ef\u4ee5\u53d1\u73b0$w(s)\\leq k$\u7b49\u4ef7\u4e8e\u628a$S$\u4e2d\u6240\u6709$< w$\u7684\u53f6\u5b50\u7684\u6743\u503c\u6539\u4e3a$w+1$\u6216\u628a\u6240\u6709$> w$\u7684\u6743\u503c\u6539\u4e3a$w+1$\uff08\u5982\u679c\u80fd\u6539\u7684\u8bdd\uff09\u540e\uff0c\u6839\u8282\u70b9\u7684\u6743\u503c\u6539\u53d8\u3002\n\n\u8003\u8651\u65b9\u6848\u6570\u4e0d\u597d\u5408\u5e76\uff0c\u7528\u6982\u7387\u66ff\u4ee3\u3002\n\n\u8bbe$f_i$\u8868\u793a$i$\u8282\u70b9\u7684\u5143\u7d20$< w$\u7684\u6982\u7387\uff0c$g_i$\u8868\u793a$i$\u8282\u70b9\u7684\u5143\u7d20$>w$\u7684\u6982\u7387\u3002\n\n\u6700\u7ec8\u7b54\u6848\u4e3a$2^{m-1}(1-f_1)(1-g_1)$\n\n\u8f6c\u79fb\u5982\u4e0b\n\n$$\\begin{cases} f_u'=\\prod_{v \\in son_u}(1-f_v') \\\\f_u'=[dep_u \\ mod \\ 2 =0](1-f_u)[dep_u \\ mod \\ 2 =1]f_u\\end{cases}$$\n\n$$\\begin{cases} g_u'=\\prod_{v \\in son_u}(1-g_v') \\\\g_u'=[dep_u \\ mod \\ 2 =1](1-g_u)[dep_u \\ mod \\ 2 =0]g_u\\end{cases}$$\n\n\u8fd9\u6837\u9664\u4e86\u521d\u503c\u53ef\u4ee5\u907f\u514d\u5947\u5076\u6027\u7684\u8ba8\u8bba\uff0c\u6b63\u786e\u6027\u611f\u6027\u7406\u89e3\u5c31\u597d\u4e86\u3002\n\n\u8fd9\u6837\u53ef\u4ee5\u5199[$70$\u5206](https://loj.ac/submission/416702)\uff08\u4e0d\u662f\u6211\u7684\uff09\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u968f\u7740$R$\u7684\u589e\u5927\uff0c\u6bcf\u6b21\u6700\u591a\u53ea\u4f1a\u6709\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9\u53d1\u751f\u6539\u53d8\u3002\u6240\u4ee5\u7ef4\u62a4$f_i'$\u4e4b\u79ef\uff0c\u52a8\u6001$DP$\u5373\u53ef\u3002\n\n**tips**:\u7531\u4e8e\u4f1a\u51fa\u73b0\u9664$0$\u4e58$0$\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u7528\u6570\u5bf9$(x,y)$\u8868\u793a\u539f$DP$\u503c$x\\cdot 0^y$\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ninline int gi()\n{\n    char c = getchar();\n    while(c < '0' || c > '9') c = getchar();\n    int sum = 0;\n    while('0' <= c && c <= '9') sum = sum * 10 + c - 48, c = getchar();\n    return sum;\n}\n\ntypedef long long ll;\nconst int maxn = 200005, mod = 998244353, inv = (mod + 1) >> 1;\n\nint n, m, L, LL, R, val[maxn];\n\nstruct edge\n{\n    int to, next;\n} e[maxn * 2];\nint h[maxn], Tot;\n\ninline void add(int u, int v)\n{\n    e[++Tot] = (edge) {v, h[u]}; h[u] = Tot;\n    e[++Tot] = (edge) {u, h[v]}; h[v] = Tot;\n}\n\ninline int fpow(int x, int k)\n{\n    int res = 1;\n    while (k) {\n        if (k & 1) res = (ll)res * x % mod;\n        x = (ll)x * x % mod; k >>= 1;\n    }\n    return res;\n}\n\nint leaf[maxn], dfn[maxn], low[maxn], ord[maxn], fa[maxn], top[maxn], son[maxn], f[maxn][2], dep[maxn], siz[maxn], Time;\n\nstruct node\n{\n    int x, y;\n    \n    node() {x = y = 0;}\n    node(int _x, int _y) {x = _x; y = _y;}\n    \n    inline node operator* (const node &a) const {\n        return node((ll)x * a.x % mod, y + a.y);\n    }\n    inline node operator/ (const node &a) const {\n        return node((ll)x * fpow(a.x, mod - 2) % mod, y - a.y);\n    }\n    inline int val() {return y ? 0 : x;}\n} g[maxn][2];\n\ninline node init(int a)\n{\n    if (a >= mod) a -= mod;\n    return a ? node(a, 0) : node(1, 1);\n}\n\nvoid dfs1(int u)\n{\n    dep[u] = dep[fa[u]] + 1; siz[u] = 1; leaf[u] = 1;\n    if (dep[u] & 1) val[u] = -1;\n    else val[u] = n + 1;\n    \n    for (int i = h[u], v; v = e[i].to, i; i = e[i].next)\n        if (v != fa[u]) {\n            fa[v] = u; leaf[u] = 0; dfs1(v);\n\n            siz[u] += siz[v];\n            if (siz[son[u]] < siz[v]) son[u] = v;\n            if (dep[u] & 1) val[u] = max(val[u], val[v]);\n            else val[u] = min(val[u], val[v]);\n        }\n    if (leaf[u]) val[u] = u, ++m;\n}\n\nvoid dfs2(int u)\n{\n    ord[dfn[u] = ++Time] = u;\n    if (son[u]) top[son[u]] = top[u], dfs2(son[u]);\n    else low[top[u]] = Time;\n    for (int i = h[u], v; v = e[i].to, i; i = e[i].next)\n        if (v != fa[u] && v != son[u]) top[v] = v, dfs2(v);\n    if (!leaf[u]) {\n        f[u][0] = f[u][1] = 1; g[u][0] = g[u][1] = init(1);\n        for (int i = h[u], v; v = e[i].to, i; i = e[i].next)\n            if (v != fa[u] && v != son[u]) {\n                f[u][0] = (ll)f[u][0] * (mod + 1 - f[v][0]) % mod;\n                f[u][1] = (ll)f[u][1] * (mod + 1 - f[v][1]) % mod;\n                g[u][0] = g[u][0] * init(mod + 1 - f[v][0]);\n                g[u][1] = g[u][1] * init(mod + 1 - f[v][1]);\n            }\n    } else {\n        if (val[u] != val[1]) {\n            if (val[u] < val[1]) f[u][0] = dep[u] & 1; \n            else if (val[u] - L < val[1]) f[u][0] = inv;\n            else f[u][0] = (dep[u] & 1) ^ 1;\n            if (val[u] > val[1]) f[u][1] = (dep[u] & 1) ^ 1;\n            else if (val[u] + L > val[1]) f[u][1] = inv;\n            else f[u][1] = dep[u] & 1;\n        } else f[u][0] = (dep[u] & 1) ^ 1, f[u][1] = dep[u] & 1;\n        g[u][0] = init(f[u][0]);\n        g[u][1] = init(f[u][1]);\n    }\n    if (son[u]) {\n        f[u][0] = (ll)f[u][0] * (mod + 1 - f[son[u]][0]) % mod;\n        f[u][1] = (ll)f[u][1] * (mod + 1 - f[son[u]][1]) % mod;\n    }\n}\n\nint tot, rt[maxn], sum[maxn << 2][2], pre[maxn << 2][2], lch[maxn << 2], rch[maxn << 2];\n\n#define mid ((l + r) >> 1)\n\ninline void merge(int &s, int len)\n{\n    sum[s][0] = (sum[lch[s]][0] + (ll)((len & 1) ? mod - pre[lch[s]][0] : pre[lch[s]][0]) * sum[rch[s]][0]) % mod;\n    pre[s][0] = (ll)pre[lch[s]][0] * pre[rch[s]][0] % mod;\n    sum[s][1] = (sum[lch[s]][1] + (ll)((len & 1) ? mod - pre[lch[s]][1] : pre[lch[s]][1]) * sum[rch[s]][1]) % mod;\n    pre[s][1] = (ll)pre[lch[s]][1] * pre[rch[s]][1] % mod;\n}\n\nvoid build(int &s, int l, int r)\n{\n    s = ++tot;\n    if (l == r) {\n        sum[s][0] = pre[s][0] = g[ord[l]][0].val();\n        sum[s][1] = pre[s][1] = g[ord[l]][1].val();\n        return ;\n    }\n    build(lch[s], l, mid);\n    build(rch[s], mid + 1, r);\n    merge(s, mid - l + 1);\n}\n\nvoid modify(int &s, int l, int r, int p)\n{\n    if (l == r) {\n        sum[s][0] = pre[s][0] = g[ord[l]][0].val();\n        sum[s][1] = pre[s][1] = g[ord[l]][1].val();\n        return ;\n    }\n    if (p <= mid) modify(lch[s], l, mid, p);\n    else modify(rch[s], mid + 1, r, p);\n    merge(s, mid - l + 1);\n}\n\nvoid modify(int u, int x)\n{\n    int v = top[u];\n    if (fa[v]) g[fa[v]][x] = g[fa[v]][x] / init(mod + 1 - sum[rt[v]][x]);\n    modify(rt[v], dfn[v], low[v], dfn[u]);\n    if (fa[v]) g[fa[v]][x] = g[fa[v]][x] * init(mod + 1 - sum[rt[v]][x]), modify(fa[v], x);\n}\n\nint main()\n{\n    n = gi(); LL = L = gi(); R = gi();\n    for (int i = 1; i < n; ++i) add(gi(), gi());\n\n    dfs1(1);\n    if (L == 1) printf(\"%d \", fpow(2, m - 1)), ++L, ++LL;\n    else if (L > 2) --L;\n    top[1] = 1; dfs2(1);\n\n    for (int i = 1; i <= n; ++i)\n        if (top[ord[i]] == ord[i])\n            build(rt[ord[i]], dfn[ord[i]], low[ord[i]]);\n    \n    int pw = fpow(2, m - 1), lstans = 0, ans;\n    lstans = (mod + 1 - (ll)(mod + 1 - sum[rt[1]][0]) * sum[rt[1]][1] % mod) * pw % mod;\n    if (LL <= L && L <= R) printf(\"%d \", lstans);\n    for (int i = L + 1; i <= R && i < n; ++i) {\n        if (val[1] + i - 1 <= n && leaf[val[1] + i - 1]) {\n            g[val[1] + i - 1][0] = init((mod + 1) >> 1);\n            modify(val[1] + i - 1, 0);\n        }\n        if (val[1] - i + 1 >= 1 && leaf[val[1] - i + 1]) {\n            g[val[1] - i + 1][1] = init((mod + 1) >> 1);\n            modify(val[1] - i + 1, 1);\n        }\n        ans = (mod + 1 - (ll)(mod + 1 - sum[rt[1]][0]) * sum[rt[1]][1] % mod) * pw % mod;\n        printf(\"%d \", (ans - lstans + mod) % mod);\n        lstans = ans;\n    }\n    if (R == n) printf(\"%d \", (pw - lstans - 1 + mod) % mod);\n    \n    return 0;\n}\n```",
        "postTime": 1555504160,
        "uid": 119899,
        "name": "dsidsi",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5281 \u3010[ZJOI2019]Minimax\u641c\u7d22\u3011"
    },
    {
        "content": "[\u63a8\u9500\u535a\u5ba2](https://foreverlasting1202.github.io/)\n\n\u52a8\u6001$DP$\u3002\n\n\u8003\u573a\u4e0a\u5b8c\u5168\u6ca1\u53bb\u60f3\u8fd9\u9053\u9898\u3002\u51fa\u6765\u540e\u542c\u8bf4\u8fd9\u9898\u9001\u4e86$70$\u5206\uff0c\u7136\u540e\u6211\u8fd8\u662f\u53ea\u4f1a$10$\u5206\u3002\u662f\u6211\u592a\u83dc\u4e86\u5bf9\u5417\u3002\n\n\u9996\u5148\u8981\u8003\u8651\u5230\u6839\u8282\u70b9\u7684\u7b54\u6848\u4e00\u5b9a\u662f\u4e00\u4e2a\u53f6\u5b50\u6240\u4f20\u9012\u4e0a\u6765\u7684\uff0c\u6240\u4ee5\u8003\u8651\u679a\u4e3e\u662f\u54ea\u4e2a\u53f6\u5b50\u4f20\u9012\u7684\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u7684\u662f\uff0c\u82e5\u662f\u53f6\u5b50$x$\u6240\u4f20\u9012\u7684\uff0c\u90a3\u4e48\u4ece\u6839\u8282\u70b9\u4e3a$x$\u7684\u94fe\u4e0a\u7684\u6240\u6709\u70b9\u7684\u6743\u503c\u90fd\u548c$x$\u76f8\u540c\u3002\u800c\u8fd9\u4e2a\u72b6\u6001\u4e0b\u82e5\u8981\u66f4\u6539\u6839\u7684\u6743\u503c\uff0c\u8981\u4e48\u66f4\u6539\u8fd9\u6761\u94fe\u4e0a\u4efb\u610f\u4e00\u4e2a\u70b9\u7684\u6743\u503c\uff0c\u8981\u4e48\u628a\u5176\u4ed6\u70b9\u7684\u6743\u503c\u53d8\u4e3a\u548c$x$\u4e00\u6837\u3002\u663e\u7136\u66f4\u6539\u94fe\u4e0a\u7684\u662f\u6700\u4f18\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u8981\u8ba1\u7b97\u8fd9\u6761\u94fe\u4f5c\u4e3a\u7b54\u6848\u94fe\u65f6\uff0c\u6b64\u65f6\u7684\u7a33\u5b9a\u5ea6\u4e00\u5b9a\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u7b54\u6848\u53f6\u5b50\u4e0e\u6839\u8282\u70b9\u7684\u5dee\u7684\u7edd\u5bf9\u503c\uff0c\u56e0\u6b64\u53ea\u8981\u6c42\u51fa\u8fd9\u6761\u94fe\u4e0a\u6743\u503c\u4e0d\u53d8\u7684\u65b9\u6848\u6570\uff0c\u518d\u7528\u603b\u65b9\u6848\u6570\u51cf\u53bb\u8fd9\u4e2a\u65b9\u6848\u6570\u5c31\u662f\u8fd9\u6761\u7b54\u6848\u94fe\u7684\u65b9\u6848\u6570\u3002\n\n\u4e00\u6761\u94fe\u6743\u503c\u4e0d\u53d8\u7684\u65b9\u6848\u6570\u663e\u7136\u53ef\u4ee5$DP$\u3002\u7136\u540e\u7531\u4e8e\u6211\u4eec\u6bcf\u6b21\u53ea\u7528\u66f4\u6539\u4e00\u4e2a\u53f6\u5b50\u3002\u4e8e\u662f\u6211\u4eec\u8003\u8651\u52a8\u6001$DP$\u7684\u8fc7\u7a0b\uff0c\u6bcf\u4e00\u6b21\u628a\u8981\u66f4\u6539\u7684\u53f6\u5b50\u7ed3\u70b9\u66b4\u529b\u4fee\u6539\u503c\uff0c\u7136\u540e\u50cf\u52a8\u6001$DP$\u90a3\u6837\u5b50\u6cbf\u7740\u91cd\u94fe\u5f80\u4e0a\u8df3\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b$DP$\u503c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(log^2n\\ast (R-L))$\u3002\n\ncode:\n```cpp\n//2019.4.4 by ljz\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register int\n#define LL long long\n#define inf 0x3f3f3f3f\n#define eps 1e-5\n#define RG register\ninline int read(){\n    res s=0;\n    bool w=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=1;ch=getchar();}\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return w?-s:s;\n}\ninline void swap(res &x,res &y){\n    x^=y^=x^=y;\n}\nconst int N=2e5+10;\nconst int kcz=998244353;\nnamespace MAIN{\n    int pw[N];\n    inline void add(res &x,const res &y){\n        x+=y,x>=kcz?x-=kcz:(x<0?x+=kcz:1);\n    }\n    inline int Add(const res &x,const res &y){\n        return x+y>=kcz?x+y-kcz:(x+y<0?x+y+kcz:x+y);\n    }\n    inline int mul(const res &x,const res &y){\n        return int(1LL*x*y%kcz);\n    }\n    int n,L,R;\n    struct E{\n        int next,to;\n        E() {}\n        E(res next,res to):next(next),to(to) {}\n    }edge[N<<1];\n    int head[N],cnt;\n    inline void addedge(const res &u,const res &v){\n        edge[++cnt]=E(head[u],v),head[u]=cnt;\n        edge[++cnt]=E(head[v],u),head[v]=cnt;\n    }\n    struct Matrix{\n        int a,b;\n        Matrix() {}\n        Matrix(res a,res b):a(a),b(b) {}\n    }A[N],tr[N<<2];\n    inline Matrix operator * (const Matrix &x,const Matrix &y){\n        return Matrix(mul(x.a,y.a),Add(mul(x.a,y.b),x.b));\n    }\n    int sz[N],val[N],dep[N],son[N],fa[N],top[N],dfn[N],low[N],idx,C[N],pos[N];\n    void dfs(res x,res fax,res depx){\n        dep[x]=depx,fa[x]=fax,sz[x]=1,val[x]=(dep[x]&1?1:n),C[x]=1;\n        RG bool leaf=0;\n        for(res i=head[x];~i;i=edge[i].next){\n            res tox=edge[i].to;\n            if(tox==fax)continue;\n            leaf=1,dfs(tox,x,depx+1),sz[x]+=sz[tox],C[x]=mul(C[x],C[tox]);\n            val[x]=(dep[x]&1?max(val[x],val[tox]):min(val[x],val[tox]));\n            if(sz[son[x]]<sz[tox])son[x]=tox;\n        }\n        if(!leaf)val[x]=x,C[x]=2;\n        else A[x].b=C[x];\n    }\n    void dfs(res x,res topx){\n        top[x]=topx,dfn[x]=++idx,pos[idx]=x;\n        if(son[x])dfs(son[x],topx);\n        else low[topx]=idx;\n        for(res i=head[x];~i;i=edge[i].next){\n            res tox=edge[i].to;\n            if(tox==son[x]||tox==fa[x])continue;\n            dfs(tox,tox);\n        }\n    }\n    inline int qpow(res x,res y){\n        res ret=1;\n        while(y){\n            if(y&1)ret=mul(ret,x);\n            x=mul(x,x),y>>=1;\n        }\n        return ret;\n    }\n    int dp[N],rt[N];\n    int Ans=1;\n    int Q[N][3];\n    bool flag[N];\n    void DP(res x,const res &RT){\n        rt[x]=RT;\n        RG bool leaf=0;\n        res ret=kcz-1;\n        for(res i=head[x];~i;i=edge[i].next){\n            res tox=edge[i].to;\n            if(tox==fa[x])continue;\n            leaf=1,DP(tox,RT);\n            if(son[x]!=tox)ret=mul(ret,dp[tox]);\n        }\n        if(!leaf){\n            if(flag[RT]){\n                dp[x]=A[x].a=(dep[x]&1)?2-(x<=val[1]):(x<=val[1]);\n                if(x<=val[1])Q[val[1]-x][++Q[val[1]-x][0]]=x;\n            }\n            else {\n                dp[x]=A[x].a=(dep[x]&1)?(x>=val[1]):2-(x>=val[1]);\n                if(x>=val[1])Q[x-val[1]][++Q[x-val[1]][0]]=x;\n            }\n            return;\n        }\n        A[x].a=ret,dp[x]=Add(mul(ret,dp[son[x]]),C[x]);\n    }\n    void dfs(res x){\n        for(res i=head[x];~i;i=edge[i].next){\n            res tox=edge[i].to;\n            if(tox==fa[x])continue;\n            if(val[x]==val[tox])dfs(tox);\n            else dfs(tox,tox),flag[tox]=bool(dep[x]&1),DP(tox,tox),Ans=mul(Ans,dp[tox]);\n        }\n    }\n    void build(res rt,res l,res r){\n        if(l==r){tr[rt]=A[pos[l]];return;}\n        res mid=(l+r)>>1;\n        build(rt<<1,l,mid),build(rt<<1|1,mid+1,r);\n        tr[rt]=tr[rt<<1]*tr[rt<<1|1];\n    }\n    void modify(res rt,res l,res r,res p,res va){\n        if(l==r){tr[rt].a=va;return;}\n        res mid=(l+r)>>1;\n        if(p<=mid)modify(rt<<1,l,mid,p,va);\n        else modify(rt<<1|1,mid+1,r,p,va);\n        tr[rt]=tr[rt<<1]*tr[rt<<1|1];\n    }\n    Matrix query(res rt,res l,res r,const res &L,const res &R){\n        if(L<=l&&r<=R)return tr[rt];\n        res mid=(l+r)>>1;\n        if(L<=mid&&R>mid)return query(rt<<1,l,mid,L,R)*query(rt<<1|1,mid+1,r,L,R);\n        if(L<=mid)return query(rt<<1,l,mid,L,R);\n        if(R>mid)return query(rt<<1|1,mid+1,r,L,R);\n    }\n    inline void modify(res x){\n        res RT=rt[x];\n        Ans=mul(Ans,qpow(dp[RT],kcz-2)),modify(1,1,idx,dfn[x],(flag[RT]^(dep[x]&1))?2:0);\n        while(top[x]!=RT){\n            RG Matrix p=query(1,1,idx,dfn[top[x]],low[top[x]]);\n            res od=dp[top[x]],nw=Add(p.a,p.b);\n            dp[top[x]]=nw,x=fa[top[x]],A[x].a=mul(mul(A[x].a,qpow(od,kcz-2)),nw);\n            modify(1,1,idx,dfn[x],A[x].a);\n        }\n        RG Matrix p=query(1,1,idx,dfn[RT],low[RT]);\n        dp[RT]=Add(p.a,p.b),Ans=mul(Ans,dp[RT]);\n    }\n    int ans[N];\n    inline void MAIN(){\n        n=read(),L=read(),R=read(),pw[0]=1;\n        for(res i=1;i<=n;i++)head[i]=-1,pw[i]=mul(pw[i-1],2);\n        for(res i=1;i<n;i++){\n            res u=read(),v=read();\n            addedge(u,v);\n        }\n        dfs(1,0,1),dfs(1),build(1,1,idx),ans[n]=C[1]-1;\n        for(res i=n-1;i;i--){\n            for(res j=1;j<=Q[i][0];j++)modify(Q[i][j]);\n            ans[i]=Add(C[1],-Ans);\n        }\n        for(res k=L;k<=R;k++)printf(\"%d \",Add(ans[k],-ans[k-1]));\n    }\n}\nint main(){\n    MAIN::MAIN();\n    return 0;\n}\n```",
        "postTime": 1554276787,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010ZJOI2019\u3011Minimax\u641c\u7d22"
    }
]