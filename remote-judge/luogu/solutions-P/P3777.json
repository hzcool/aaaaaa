[
    {
        "content": "\u597dvan\u7684\u4ea4\u4e92\u9898\u3002\u3002\n\n---\n\n## Subtask 1\n\n\u8be2\u95ee\u4e00\u6b21\u5373\u53ef\u3002\n\n\u76f4\u63a5\u8be2\u95ee $[1,0,0,\\cdots,0]$\uff0c\u8f93\u51fa\u5f97\u5230\u7684\u6570\u7ec4\u4e2d\u4e3a $0$ \u7684\u4f4d\u7f6e\u3002\n\n\u7406\u7531\u5f88\u7b80\u5355\uff0cKoala \u81f3\u5c11\u5f97\u4e0d\u5230\u4e00\u4e2a\u7269\u54c1\uff0c\u90a3\u4e48\u4e0d\u8981\u7684\u7269\u54c1\u4e00\u5b9a\u662f\u4ef7\u503c\u6700\u5c0f\u7684\u7269\u54c1\u3002\n\n***code:***\n\n```cpp\nint minValue(int n, int W) {\n\tstatic int a[N],b[N];\n\tmemset(a,0,sizeof(a));\n\tmemset(b,0,sizeof(b));\n\ta[0]=1;\n\tplayRound(a,b);\n\tfor(int i=0;i<n;++i){\n\t\tif(b[i]<=a[i])return i;\n\t}\n\treturn 114514; //\u771f\u9999\n}\n```\n\n---\n\n## Subtask 2\n\n\u8fd9\u4e2a Subtask \u4e0d\u662f\u5f88\u597d\u60f3\u3002\n\n\u9996\u5148\u53d1\u73b0\u8fd9\u4e2a Subtask \u7684\u5957\u8def\u4e00\u5b9a\u662f\u9010\u6b65\u7f29\u5c0f\u524d\u82e5\u5e72\u5927\u503c\u4f4d\u7f6e\u7684\u96c6\u5408\u5927\u5c0f\uff0c\u76f4\u5230\u96c6\u5408\u5927\u5c0f\u4e3a $1$\u3002\n\n\u4e0b\u9762\u5c31\u662f\u62ff\u4ea4\u4e92\u5e93\u4e71\u8bd5\u4e86\uff01\n\n\u9996\u5148\u6bcf\u4e2a\u4f4d\u7f6e\u653e\u4e00\u4e2a $1$\uff0c\u53ef\u4ee5\u786e\u5b9a\u6743\u503c\u5728\u533a\u95f4 $[51,100]$ \u7684\u4f4d\u7f6e\u96c6\u5408\u3002\n\n\u7136\u540e\u518d\u628a\u8fd9\u4e2a\u96c6\u5408\u4e2d\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u653e $2$\uff0c\u5176\u4ed6\u4f4d\u7f6e\u653e $0$\uff0c\u5c31\u53ef\u4ee5\u786e\u5b9a $[76,100]$ \u4e86\u3002\n\n\u6309\u7167\u8fd9\u4e2a\u5957\u8def\uff0c\u4e4b\u540e\u5206\u522b\u653e $4$ \u4e2a\uff0c\u6700\u540e\u5206\u522b\u653e $11$ \u4e2a\uff0c\u5c31\u80fd\u786e\u5b9a\u533a\u95f4 $[92,100]$ \u7136\u540e\u786e\u5b9a $[100,100]$\uff0c\u6210\u529f\u627e\u5230\u6700\u5927\u503c\u3002\n\n\u521a\u597d\u8be2\u95ee $4$ \u6b21\u3002\n\n***code:***\n\n```cpp\nint maxValue(int n, int W) {\n    static int a[N],b[N];\n    memset(a,0,sizeof(a));\n    for(int i=0;i<n;++i){\n    \ta[i]=1;\n\t}\n\tplayRound(a,b);\n\tmemset(a,0,sizeof(a));\n\tfor(int i=0;i<n;++i){\n\t\tif(b[i]>1)a[i]=2;\n\t}\n\tplayRound(a,b);\n\tmemset(a,0,sizeof(a));\n\tfor(int i=0;i<n;++i){\n\t\tif(b[i]>2)a[i]=4;\n\t}\n\tplayRound(a,b);\n\tmemset(a,0,sizeof(a));\n\tfor(int i=0;i<n;++i){\n\t\tif(b[i]>4)a[i]=11;\n\t}\n\tplayRound(a,b);\n\tfor(int i=0;i<n;++i){\n\t\tif(b[i]>11)return i;\n\t}\n\treturn 1919810;   //\u8d8a\u6765\u8d8a\u9999\n}\n```\n\n---\n\n## Subtask 3\n\n\u6709\u4e86 Subtask 2 \u7684\u7ecf\u9a8c\uff0c\u4e0d\u96be\u60f3\u5230\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u6570 $x$\uff0c\u8be2\u95ee $[x,x,0,\\cdots,0]$ \u4f7f\u5f97 Koala \u9009\u62e9\u4f4d\u7f6e $0$ \u7684\u7269\u54c1\u548c\u4f4d\u7f6e $1$ \u7684\u7269\u54c1\u4e2d\u7684\u4e00\u4e2a\u3002\n\n\u663e\u7136 $1\\leq x\\leq 14$\uff0c\u56e0\u4e3a $\\sum_{i=1}^{15}i>100$\uff0c\u65e0\u8bba\u524d\u4e24\u4e2a\u7269\u54c1\u7684\u4ef7\u503c\u6709\u591a\u5927 Koala \u90fd\u4e0d\u4f1a\u9009\u62e9\u3002\n\n\u628a $x$ \u4e8c\u5206\u51fa\u6765\u5373\u53ef\u3002\n\n\u4f46\u73b0\u5728\u6700\u591a\u8fd8\u662f\u8981\u8be2\u95ee $4$ \u6b21\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u4eba\u5de5\u7ec6\u5316\u4e8c\u5206\u7684\u8fc7\u7a0b\uff08\u5c31\u662f\u628a\u5faa\u73af\u62c6\u5f00\uff09\u3002\n\n\u7ecf\u8fc7\u5c1d\u8bd5\uff0c\u6211\u4e0b\u9762\u8fd9\u79cd\u4e8c\u5206\u65b9\u6cd5\u4e5f\u53ef\u4ee5 AC\u3002\uff08\u5f53\u7136\uff0c\u624b\u5de5\u4e8c\u5206\u6700\u4fdd\u9669\uff09\n\n***code:***\n\n```cpp\nbool Comp(int i,int j){      //\u6bd4\u8f83i\u7684\u4ef7\u503c\u548cj\u7684\u4ef7\u503c\n\tint l=1,r=14;\n\tstatic int a[N],b[N];\n\twhile(l<r){\n\t\tint mid=(l+r)>>1;\n\t\tmemset(a,0,sizeof(a));\n\t\ta[i]=a[j]=mid;\n\t\tplayRound(a,b);\n\t\tif(b[i]>mid&&b[j]<=mid)return false;\n\t\tif(b[i]<=mid&&b[j]>mid)return true;\n\t\tif(b[i]<mid&&b[j]<mid){\n\t\t\tr=mid-1;\n\t\t}\n\t\telse{\n\t\t\tl=mid+1;\n\t\t}\n\t}\n\treturn false;\n}\nint greaterValue(int n, int W) {\n    return Comp(0,1);\n}\n```\n\n---\n\n## Subtask 4\n\n\u6700\u591a\u8be2\u95ee $700$ \u6b21\uff0c\u770b\u8fd9\u4e2a\u6570\u5b57\u53ef\u4ee5\u731c\u8981\u8be2\u95ee $\\mathcal{O}(n\\log n)$ \u6b21\u3002\n\n\u8fd9\u4e2a $W=200$ \u7684\u6027\u8d28\u975e\u5e38\u597d,\u53ef\u4ee5\u627e\u5230\u4e00\u79cd $1$ \u6b21\u5c31\u5b8c\u6210\u6bd4\u8f83\u4e24\u4e2a\u7269\u54c1\u4ef7\u503c\u7684\u65b9\u6cd5\uff1a\n\n\u8bbe\u6bd4\u8f83\u7684\u7269\u54c1\u5206\u522b\u4e3a $i$ \u548c $j$\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5728\u4f4d\u7f6e $i$ \u548c $j$ \u5206\u522b\u653e\u4e0a $100$ \u4e2a\uff0c\u5176\u4ed6\u4f4d\u7f6e\u653e $0$ \u4e2a\u5373\u53ef\u3002\u56e0\u4e3a\u8fd9\u6837 Koala \u4e00\u5b9a\u4f1a\u9009\u62e9 $i$ \u548c $j$ \u5176\u4e2d\u7684\u4e00\u4e2a\u7269\u54c1\u3002\u88ab\u9009\u62e9\u7684\u7269\u54c1\u4ef7\u503c\u8f83\u5927\u3002\n\n\u6709\u4e86\u6bd4\u8f83\u65b9\u6cd5\u4e0b\u9762\u53ea\u9700\u8981\u627e\u4e2a\u4e1c\u897f\u6392\u4e2a\u5e8f\u5566\uff01\n\n`stable_sort` \u53ef\u4ee5\u80dc\u4efb\u3002\uff08\u7528\u6cd5\u4e0e `sort` \u4e00\u6478\u4e00\u6837\uff09\n\n\u6ce8\uff1a\u505a\u4ea4\u4e92\u9898\u6bd4\u8f83\u591a\u7684\u540c\u5b66\u4e00\u5b9a\u660e\u767d `sort` \u8fd9\u4e2a\u73a9\u610f\u5343\u4e07\u4e0d\u8981\u7528\u3002\u7531\u4e8e\u5b83\u8fc7\u4e8e\u8ffd\u6c42\u901f\u5ea6\u6240\u4ee5\u5f53\u9012\u5f52\u5230\u8f83\u5c0f\u7684\u533a\u95f4\u540e\u5c31\u4f1a\u6539\u6210\u63d2\u5165\u6392\u5e8f\u4e4b\u7c7b\u7684\uff0c\u8fd9\u6837\u5c31\u6d6a\u8d39\u4e86\u5f88\u591a\u8be2\u95ee\u3002\n\n***code:***\n\n```cpp\nbool cmp(int i,int j){\n\tint tmp[N]={},gugu[N];\n\ttmp[i]=tmp[j]=100;\n\tplayRound(tmp,gugu);\n\treturn gugu[i]<=100;\n}\nvoid allValues(int n, int W, int *p) {\n    if(W==(n<<1)){\n    \tstatic int a[N];\n    \tmemset(a,0,sizeof(a));\n        for(int i=0;i<n;++i){\n        \ta[i]=i;\n\t\t} \n\t\tstable_sort(a,a+n,cmp);    //\u597d\u4e1c\u897f\uff0c\u5176\u5b9e\u5c31\u662f\u5f52\u5e76\u6392\u5e8f\n\t\tfor(int i=0;i<n;++i){\n\t\t\tp[a[i]]=i+1;\n\t\t}\n    }\n}\n```\n\n---\n\n## Subtask 5\n\n\u91cd\u5934\u620f\u3002\uff08\u5426\u5219\u600e\u4e48\u53ef\u80fd\u5360\u4e00\u534a\u4e00\u4e0a\u7684\u5206\u6570\u5462\uff1f\uff09\n\n\u9996\u5148\u6709\u4e2a\u5f88\u663e\u7136\u7684\u505a\u6cd5\u5c31\u662f\u7ed3\u5408 Subtask 3 \u548c Subtask 4\uff0c\u7528 `stable_sort` \u6392\u4e2a\u5e8f\uff0c\u8fd9\u6837\u5927\u7ea6\u8be2\u95ee $700$ \u591a\u6b21\uff0c\u5b9e\u6d4b\u80fd\u5f97 $29$ \u5206\u3002\n\n\u7136\u9e45\u53ea\u80fd\u8be2\u95ee $n$ \u6b21\uff0c\u8003\u8651\u5206\u6cbb\u3002\n\n\u7c7b\u4f3c\u4e8e Subtask 2 \u7684\u505a\u6cd5\uff0c\u7ef4\u62a4\u6743\u503c\u5728 $[l,r]$ \u7684\u4f4d\u7f6e\u96c6\u5408\uff0c\u7136\u540e\u901a\u8fc7\u5206\u6cbb\u9010\u6e10\u7f29\u5c0f\u533a\u95f4\u3002\n\n\u6bcf\u6b21\u90fd\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u6743\u503c $w$\uff0c\u7136\u540e\u628a\u5f53\u524d\u5206\u6cbb\u7684\u4f4d\u7f6e\u96c6\u5408\u4e2d\u7684\u4f4d\u7f6e\u653e $w$ \u4e2a\uff0c\u5176\u4ed6\u4f4d\u7f6e\u653e $0$ \u4e2a\uff0c\u4f7f\u5f97\u5f97\u5230\u7684\u6570\u7ec4 $b$ \u4e2d\u5b58\u5728\u96c6\u5408\u4e2d\u7684\u67d0\u4e9b\u4f4d\u7f6e\u4e3a $0$\u3002\u5047\u8bbe\u8fd9\u4e9b\u4f4d\u7f6e\u6709 $k(0< k<r-l+1)$ \u4e2a\uff0c\u90a3\u4e48\u53ef\u4ee5\u5206\u6210 $[l,l+k-1]$ \u548c $[l+k,r]$ \u4e24\u4e2a\u533a\u95f4\u3002\n\n\u8fb9\u754c\u5373 $l=r$ \u7684\u65f6\u5019\u76f4\u63a5\u5b58\u4e0b\u6765\u7136\u540e\u8df3\u51fa\uff0c\u5c31\u4e0d\u9700\u8981\u518d\u8be2\u95ee\u4e86\u3002\n\n\u8fd9\u6837\u53ea\u9700\u8981\u8be2\u95ee $99$ \u6b21\u5c31\u53ef\u4ee5\u4e86\u3002\uff08\u81ea\u884c\u601d\u8003\u4e3a\u4ec0\u4e48\u662f $99$ \u6b21\uff09\n\n\u73b0\u5728\u7684\u95ee\u9898\u5c31\u5728\u4e8e\u5982\u4f55\u627e\u5230\u4e00\u4e2a $w$ \u4e86\u3002\n\n\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\uff0c\u7136\u540e\u8fdb\u884c\u5224\u65ad\u3002\u7531\u4e8e\u6211\u4eec\u53ea\u60f3\u53bb\u77e5\u9053\u80fd\u5426\u628a\u96c6\u5408\u5206\u6210\u4e24\u534a\uff0c\u6240\u4ee5\u5e76\u4e0d\u9700\u8981\u901a\u8fc7\u8be2\u95ee\u4ea4\u4e92\u5e93\u6765\u5224\u65ad\u3002\u6784\u9020\u4e00\u4e2a\u4ef7\u503c\u4f9d\u6b21\u4e3a $[1,2,\\cdots,100]$ \u7684\u6743\u503c\u5e8f\u5217\uff0c\u7136\u540e\u6c42\u51fa Koala \u7ed9\u7684\u5e8f\u5217\u5c31\u80fd\u8f7b\u677e\u5224\u65ad\u4e86\u3002\n\n\u4f60\u95ee\u6211\u600e\u4e48\u6c42\uff1f\u50cf\u6211\u8fd9\u79cd\u61d2\u4eba\u5c31\u76f4\u63a5\u590d\u5236\u4ea4\u4e92\u5e93\u7684\u4ee3\u7801\u7136\u540e\u778e\u9b54\u6539\u4e00\u4e0b\u4e86\u3002\u3002\uff08\u6ca1\u8bf4\u8fc7\u4e0d\u8ba9\u590d\u5236\u4ea4\u4e92\u5e93\u5416^_^) \u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u80cc\u5305\u3002\n\n\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u5199\u5230\u6ce8\u91ca\u91cc\u4e86\u3002\n\n***code:***\n\n```cpp\n//\u522b\u770b\u633a\u957f\u7684\uff0ccheck\u51fd\u6570\u90fd\u662f\u590d\u5236\u4ea4\u4e92\u5e93\u7684qwq\u3002\nbool check(int x,int l,int r){           //\u5224\u65ad\u662f\u5426\u80fd\u628a [l,r] \u5207\u6210\u4e24\u90e8\u5206 \n\tint cache[2][205];\n    int num[2][205];\n    char taken[N][205];\n    \n    memset(cache[1],0,sizeof(cache[1]));\n    memset(num[1],0,sizeof(num[1]));\n    \n    const int W=100;\n    for(int i=0;i<N;++i) {\n        int v=(i>=l&&i<=r)?x+1:1;\n        int ii=i&1;\n        int o=ii^1;\n        for(int j=0;j<=W;++j) {\n            cache[ii][j]=cache[o][j];\n            num[ii][j]=num[o][j];\n            taken[i][j]=0;\n        }\n        for(int j=W;j>=v;--j) {\n            int h=cache[o][j-v]+i+1;\n            int hn=num[o][j-v]+1;\n            if(h>cache[ii][j]||(h==cache[ii][j]&&hn>num[ii][j])){\n                cache[ii][j]=h;\n                num[ii][j]=hn;\n                taken[i][j]=1;\n            }\n\t\t\telse{\n                taken[i][j]=0;\n            }\n        }\n    }\n    int cur=W;\n\n    static int qwq[N];\n    \n    for(int i=N-1;i>=0;--i) {\n        int tmp=taken[i][cur]?((i>=l&&i<=r)?x+1:1):0;\n        qwq[i]=tmp;\n        cur-=tmp;\n    }\n    int jb=qwq[l];\n    for(int i=l+1;i<=r;++i)if(qwq[i]^jb)return true;  //\u5bf9\u4e8e\u96c6\u5408\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5b58\u5728\u4e24\u4e2a\u4f4d\u7f6e\u653e\u4e2a\u7ea2\u8272\u77f3\u5b50\u6570\u91cf\u4e0d\u540c\u5c31\u8bf4\u660e\u53ef\u4ee5\u628a\u96c6\u5408\u5206\u5f00\u3002\n    return false;\n}\nint get_val(int l,int r){\n\tfor(int i=1;i<=100/(r-l+1);++i){  //\u66b4\u529b\u679a\u4e3e\u662f\u5426\u5408\u6cd5\n\t\tif(check(i,l,r))return i;\n\t}\n\texit(-1);\n}\nvoid Solve(int l,int r,vector<int> &vec,int *ans){\n\tif(l==r){\n\t\tans[vec[0]]=l+1;\n\t\treturn;\n\t}\n\tstatic int a[N],b[N];\n\tmemset(a,0,sizeof(a));\n\t\n\tint w=get_val(l,r);\n\tfor(int i=0;i<(int)vec.size();++i){\n\t\ta[vec[i]]=w;\n\t}\n\tplayRound(a,b);\n\tvector<int> L,R; \n\tfor(int i=0;i<(int)vec.size();++i){\n\t\tif(b[vec[i]]<=w)L.push_back(vec[i]);\n\t\telse R.push_back(vec[i]); \n\t}\n\tSolve(l,l+L.size()-1,L,ans);\n\tSolve(l+L.size(),r,R,ans);\n}\nvoid allValues(int n, int W, int *p) {\n    if(W==n){\n    \tvector<int> myh;   //\u5b9e\u5728\u4e0d\u77e5\u9053\u7528\u4ec0\u4e48\u53d8\u91cf\u540d\u4e86\u5c31\u7528\u6211npy\u7684\u540d\u5b57\u3002\n        for(int i=0;i<n;++i){\n        \tmyh.push_back(i);\n\t\t}\n\t\tSolve(0,n-1,myh,p);  //\u5f00\u5fc3\u5206\u6cbb\n    }\n}\n```\n\n---\n\n\u6700\u540e\u63d0\u9192\u4e00\u53e5\uff1a**\u591a\u6d4b\u4e0d\u6e05\u7a7a\uff0c\u7206\u86cb\u4e24\u884c\u6cea\u3002**\n\n\u6700\u7ec8\u5168\u90e8\u4ee3\u7801\uff1a\n\n```cpp\n#include \"koala.h\"\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#include<vector>\n\nusing namespace std;\n\nvoid playRound(int*,int*);\n#define N 100\n\n\nint minValue(int n, int W) {\n\tstatic int a[N],b[N];\n\tmemset(a,0,sizeof(a));\n\tmemset(b,0,sizeof(b));\n\ta[0]=1;\n\tplayRound(a,b);\n\tfor(int i=0;i<n;++i){\n\t\tif(b[i]<=a[i])return i;\n\t}\n\treturn 114514;\n}\n\nint maxValue(int n, int W) {\n    static int a[N],b[N];\n    memset(a,0,sizeof(a));\n    for(int i=0;i<n;++i){\n    \ta[i]=1;\n\t}\n\tplayRound(a,b);\n\tmemset(a,0,sizeof(a));\n\tfor(int i=0;i<n;++i){\n\t\tif(b[i]>1)a[i]=2;\n\t}\n\tplayRound(a,b);\n\tmemset(a,0,sizeof(a));\n\tfor(int i=0;i<n;++i){\n\t\tif(b[i]>2)a[i]=4;\n\t}\n\tplayRound(a,b);\n\tmemset(a,0,sizeof(a));\n\tfor(int i=0;i<n;++i){\n\t\tif(b[i]>4)a[i]=11;\n\t}\n\tplayRound(a,b);\n\tfor(int i=0;i<n;++i){\n\t\tif(b[i]>11)return i;\n\t}\n\treturn 1919810;\n}\n\nbool Comp(int i,int j){\n\tint l=1,r=14;\n\tstatic int a[N],b[N];\n\twhile(l<r){\n\t\tint mid=(l+r)>>1;\n\t\tmemset(a,0,sizeof(a));\n\t\ta[i]=a[j]=mid;\n\t\tplayRound(a,b);\n\t\tif(b[i]>mid&&b[j]<=mid)return false;\n\t\tif(b[i]<=mid&&b[j]>mid)return true;\n\t\tif(b[i]<mid&&b[j]<mid){\n\t\t\tr=mid-1;\n\t\t}\n\t\telse{\n\t\t\tl=mid+1;\n\t\t}\n\t}\n\treturn false;\n}\nint greaterValue(int n, int W) {\n    return Comp(0,1);\n}\n\nbool cmp(int i,int j){\n\tint tmp[N]={},gugu[N];\n\ttmp[i]=tmp[j]=100;\n\tplayRound(tmp,gugu);\n\treturn gugu[i]<=100;\n}\nbool check(int x,int l,int r){ \n\tint cache[2][205];\n    int num[2][205];\n    char taken[N][205];\n    \n    memset(cache[1],0,sizeof(cache[1]));\n    memset(num[1],0,sizeof(num[1]));\n    \n    const int W=100;\n    for(int i=0;i<N;++i) {\n        int v=(i>=l&&i<=r)?x+1:1;\n        int ii=i&1;\n        int o=ii^1;\n        for(int j=0;j<=W;++j) {\n            cache[ii][j]=cache[o][j];\n            num[ii][j]=num[o][j];\n            taken[i][j]=0;\n        }\n        for(int j=W;j>=v;--j) {\n            int h=cache[o][j-v]+i+1;\n            int hn=num[o][j-v]+1;\n            if(h>cache[ii][j]||(h==cache[ii][j]&&hn>num[ii][j])){\n                cache[ii][j]=h;\n                num[ii][j]=hn;\n                taken[i][j]=1;\n            }\n\t\t\telse{\n                taken[i][j]=0;\n            }\n        }\n    }\n    int cur=W;\n\n    static int qwq[N];\n    \n    for(int i=N-1;i>=0;--i) {\n        int tmp=taken[i][cur]?((i>=l&&i<=r)?x+1:1):0;\n        qwq[i]=tmp;\n        cur-=tmp;\n    }\n    int jb=qwq[l];\n    for(int i=l+1;i<=r;++i)if(qwq[i]^jb)return true;\n    return false;\n}\nint get_val(int l,int r){\n\tfor(int i=1;i<=100/(r-l+1);++i){\n\t\tif(check(i,l,r))return i;\n\t}\n\texit(-1);\n}\nvoid Solve(int l,int r,vector<int> &vec,int *ans){\n\tif(l==r){\n\t\tans[vec[0]]=l+1;\n\t\treturn;\n\t}\n\tstatic int a[N],b[N];\n\tmemset(a,0,sizeof(a));\n\t\n\tint w=get_val(l,r);\n\tfor(int i=0;i<(int)vec.size();++i){\n\t\ta[vec[i]]=w;\n\t}\n\tplayRound(a,b);\n\tvector<int> L,R; \n\tfor(int i=0;i<(int)vec.size();++i){\n\t\tif(b[vec[i]]<=w)L.push_back(vec[i]);\n\t\telse R.push_back(vec[i]); \n\t}\n\tSolve(l,l+L.size()-1,L,ans);\n\tSolve(l+L.size(),r,R,ans);\n}\nvoid allValues(int n, int W, int *p) {\n    if(W==(n<<1)){\n    \tstatic int a[N];\n    \tmemset(a,0,sizeof(a));\n        for(int i=0;i<n;++i){\n        \ta[i]=i;\n\t\t} \n\t\tstable_sort(a,a+n,cmp);\n\t\tfor(int i=0;i<n;++i){\n\t\t\tp[a[i]]=i+1;\n\t\t}\n    }\n\telse{\n        vector<int> myh;\n        for(int i=0;i<n;++i){\n        \tmyh.push_back(i);\n\t\t}\n\t\tSolve(0,n-1,myh,p);\n    }\n}\n```\n\n[*Froggy's blog*](https://www.luogu.org/blog/1445353309froggy/)\n\n#### \u5471!!\n",
        "postTime": 1590415509,
        "uid": 100285,
        "name": "Froggy",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P6558 \u3010[APIO2017] \u8003\u62c9\u7684\u6e38\u620f\u3011"
    },
    {
        "content": "\u4e3a\u4e86\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff0c\u4f60\u53ef\u4ee5\u524d\u5f80[\u6211\u7684\u535a\u5ba2](http://zhylj.cc/index.php/archives/12/)\u3002\n\n### \u5b50\u4efb\u52a1 1\n\n\u8003\u8651\u4efb\u53d6\u4e00\u4e2a\u4f4d\u7f6e\u653e\u4e00\u4e2a\u77f3\u5b50\uff0c\u8fdb\u884c\u4e00\u8f6e\u6e38\u620f\uff0c\u90a3\u4e48 Koala \u53ea\u80fd\u4e14\u53ea\u4f1a\u53d6\u6070\u597d $N - 1$ \u4e2a $P_i$\uff0c\u552f\u4e00\u5269\u4e0b\u7684\u4e00\u4e2a\u5c31\u662f\u6700\u5c0f\u503c\u3002\n\n### \u5b50\u4efb\u52a1 2\n\n\u8003\u8651\u9010\u8f6e\u5206\u6790\uff0c\u6bcf\u4e00\u8f6e\u5c3d\u53ef\u80fd\u5730\u7f29\u5c0f\u8303\u56f4\u3002\n\n\u6ce8\u610f\u5230\u5bf9\u4e8e\u4e00\u4e9b\u4f60\u653e\u4e86\u76f8\u540c\u6570\u91cf\u7684\u77f3\u5b50\u7684\u4f4d\u7f6e\uff0cKoala \u53d6\u7684\u90a3\u90e8\u5206\u4e00\u5b9a\u662f\u6700\u5927\u7684\u82e5\u5e72\u4e2a\u6570\u3002\n\n**\u7b2c\u4e00\u8f6e\u6e38\u620f**\uff1a\u8003\u8651\u786e\u8ba4 $[51,100]$\uff1a\u6240\u6709\u4f4d\u7f6e\u5747\u653e\u4e00\u4e2a\u77f3\u5b50\uff0c\u90a3\u4e48 Koala \u5c06\u4f1a\u53ea\u5728\u6240\u6709\u524d $50$ \u5927\u7684\u4f4d\u7f6e\u653e\u6070\u597d\u4e24\u4e2a\u77f3\u5b50\u3002\n\n**\u7b2c\u4e8c\u8f6e\u6e38\u620f**\uff1a\u8003\u8651\u786e\u8ba4 $[76,100]$\uff1a\u5728 $[51,100]$ \u7684\u4f4d\u7f6e\u653e $2$ \u4e2a\u77f3\u5b50\uff0c\u5176\u4f59\u4f4d\u7f6e\u4e0d\u653e\u77f3\u5b50\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u6837\u76f8\u5f53\u4e8e\u4e24\u4e2a\u4ee3\u4ef7\u5206\u522b\u4e3a $1$ \u548c $3$ \u7684\u80cc\u5305\uff0c\u4e5f\u5c31\u662f\u540e\u9762\u4e09\u4e2a\u53ef\u4ee5\u6362\u524d\u9762\u4e00\u4e2a\uff0c\u6211\u4eec\u8bbe\u53d6\u4e86 $x$ \u4e2a\u5728 $[76,100]$ \u7684\u6570\uff0c\u5219\u53ef\u4ee5\u5927\u81f4\u5217\u5f97\u65b9\u7a0b $3(50 - (100 - 3x)) = 100 - x$\uff0c\u89e3\u5f97 $x = 25$\uff0c\u5b9e\u9645\u8dd1\u4e00\u8fb9\u80cc\u5305\u53d1\u73b0\u786e\u5b9e\u5982\u6b64\u3002\n\n\u6240\u4ee5\uff0cKoala \u5c06\u6070\u597d\u53d6\u6389 $[76,100]$ \u548c $[26,50]$ \u7684\u90e8\u5206\uff0c\u6211\u4eec\u5c31\u5f97\u4ee5\u786e\u5b9a $[76,100]$.\n\n**\u7b2c\u4e09\u8f6e\u6e38\u620f**\uff1a\u5728 $[76,100]$ \u653e $3$ \u4e2a\u77f3\u5b50\uff0c\u5728 $[51,75]$ \u653e $1$ \u4e2a\u77f3\u5b50\uff0c\u5176\u4f59\u4f4d\u7f6e\u4e0d\u653e\uff0c\u6ce8\u610f\u5230\u8fd9\u6837\u80cc\u5305\u7684\u4ee3\u4ef7\u5747\u4e3a\u500d\u6570\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u8ba1\u7b97\u51fa Koala \u53ea\u4f1a\u53d6 $[95, 100]$ \u4e2d\u7684\u6570\u3002\n\n**\u7b2c\u56db\u8f6e\u6e38\u620f**\uff1a\u6211\u4eec\u5728\u6700\u5927\u7684\u90a3\u516d\u4e2a\u6570\u4e2d\u90fd\u653e\u4e0a $11$ \u4e2a\u77f3\u5b50\uff0c\u663e\u7136 Koala \u4f1a\u4e14\u53ea\u4f1a\u53d6 $1$ \u4e2a\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u505a\u5b8c\u4e86\u3002\n\n### \u5b50\u4efb\u52a1 3\n\n\u4e0a\u9762\u5728\u7b2c\u56db\u8f6e\u6e38\u620f\u4e2d\u7684\u505a\u6cd5\u542f\u53d1\u6211\u4eec\u53bb\u8003\u8651\u7ed9\u8fd9\u4e24\u4e2a\u6570\u5e26\u4e0a\u4ee3\u4ef7 $k$\uff0c\u800c\u5176\u4f59\u7684\u6570\u4e0d\u5e26\u4e0a\u4efb\u4f55\u4ee3\u4ef7\uff0c\u5982\u679c\u6709\u67d0\u4e2a $k$ \u8fd9\u4e24\u4e2a\u6570\u88ab\u53d6\u7684\u72b6\u6001\u4e0d\u540c\uff0c\u90a3\u4e48\u88ab\u53d6\u7684\u90a3\u4e2a\u8f83\u5927\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u8003\u8651\u5f53\u7ed9\u67d0\u4e2a\u6570\u5e26\u4e0a\u4ee3\u4ef7 $k$ \u7684\u65f6\u5019\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff08\u6211\u4eec\u6682\u65f6\u5148\u5047\u8bbe $P_0+P_1 > 2k$\uff0c\u5176\u4f59\u60c5\u51b5\u7a0d\u540e\u518d\u505a\u8ba8\u8bba\uff09\u3002\n\n- \u8fd9\u4e24\u4e2a\u6570\u5168\u90e8\u88ab\u9009\uff0c\u90a3\u4e48 Koala \u5fc5\u7136\u4e0d\u53d6\u4e00\u6bb5\u4ece $1$ \u5f00\u59cb\u7684 $2k$ \u4e2a\u8fde\u7eed\u81ea\u7136\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u6709\uff1a\n\n$$k(2k + 1) < P_0 + P_1$$\n\n- \u8fd9\u4e24\u4e2a\u6570\u5168\u90e8\u4e0d\u9009\uff0c\u90a3\u4e48\u610f\u5473\u7740 $P_0,P_1$ \u4e2d\u4efb\u4f55\u4e00\u4e2a\u5747\u4e0d\u8d85\u8fc7\u4ece $1$ \u5f00\u59cb\u7684 $k$ \u4e2a\u8fde\u7eed\u81ea\u7136\u6570\u3002\n\n$$\\frac{k(k + 1)}2 \\ge \\max \\{P_0,P_1\\}$$\n\n\u6ce8\u610f\u5230\u8fd9\u4e24\u4e2a\u4e0d\u7b49\u5f0f\u6211\u4eec\u4e0d\u5bb9\u6613\u64cd\u4f5c\uff0c\u6240\u4ee5\u8003\u8651\u5bf9\u7b2c\u4e8c\u4e2a\u4e0d\u7b49\u5f0f\u8fdb\u884c\u653e\u7f29\uff1a\n\n$$\\frac{k(k + 1)}2 \\ge P_0 + P_1 - 2$$\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5f97\u5230\u4e00\u4e2a\u8303\u56f4\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u6570\u4e00\u5b9a\u80fd\u88ab $k$ \u533a\u5206\u51fa\u6765\uff1a\n\n$$\\frac{k(k + 1)}2 + 2 < P_0 + P_1\\le k(2k + 1)$$\n\n\u6211\u4eec\u628a\u8fd9\u4e9b\u533a\u95f4\u641e\u51fa\u6765\u5bf9 $[3,200)$ \u505a\u4e2a\u6700\u5c0f\u533a\u95f4\u8986\u76d6\uff0c\u53d1\u73b0\u6211\u4eec\u9700\u8981\u67e5 $5$ \u4e2a $k$ \u624d\u80fd\u627e\u5230\u7b54\u6848\uff08\u505a\u6700\u5c0f\u533a\u95f4\u8986\u76d6\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u53d1\u73b0\u53ea\u6709 $k = 2$ \u7684\u65f6\u5019\u8981\u8003\u8651\u8fb9\u754c\uff0c\u5bb9\u6613\u53d1\u73b0\u8fd9\u6837\u662f\u53ef\u4ee5\u5224\u65ad $P_0+P_1 \\in[3, 5]$ \u7684\u60c5\u51b5\u7684\uff09\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u82e5\u67d0\u4e2a $k$ \u4f7f\u5f97 $P_0,P_1$ \u5168\u90fd\u53d6\u4e86\uff0c\u5219 $k'\\le k$ \u7684\u4e00\u5b9a\u5168\u90fd\u53d6\u4e86\uff0c\u82e5\u67d0\u4e2a $k$ \u4f7f\u5f97 $P_0,P_1$ \u5168\u90fd\u4e0d\u53d6\uff0c\u5219 $k'\\ge k$ \u7684\u4e00\u5b9a\u5168\u90fd\u4e0d\u53d6\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u4e8c\u5206\uff0c\u4e8e\u662f\u505a\u5230\u4e86 $3$ \u6b21\uff0c\u53ef\u4ee5\u901a\u8fc7\u8be5\u5b50\u4efb\u52a1\u3002\n\n### \u5b50\u4efb\u52a1 4\n\n\u8fd9\u4e2a\u5b50\u4efb\u52a1\u6bd4\u8f83\u7b80\u5355\u3002\n\n\u6ce8\u610f\u5230 $700 = 100\\times \\lceil \\log_2 100\\rceil$\uff0c\u4e8e\u662f\u8003\u8651\u7528\u6392\u5e8f\u505a\uff0c\u4f46\u662f\u6211\u4eec\u6ce8\u610f\u5230\u6211\u4eec\u539f\u5148\u7684\u6bd4\u8f83\u65b9\u6cd5\u8981\u5e26\u4e0a\u4e00\u4e2a\u5e38\u6570\uff0c\u6240\u4ee5\u8003\u8651\u5229\u7528 $W=200$ \u7684\u6761\u4ef6\u628a\u6bd4\u8f83\u4e24\u4e2a\u6570\u7684\u64cd\u4f5c\u4f18\u5316\u5230\u6070\u597d\u4e00\u6b21\u6e38\u620f\u3002\n\n\u8003\u8651\u53ea\u5bf9 $x,y$ \u4e24\u4e2a\u4f4d\u7f6e\u653e $100$ \u4e2a\u77f3\u5b50\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b8c\u6210 $P_x$ \u548c $P_y$ \u7684\u6bd4\u8f83\u4e86\u3002\n\n### \u5b50\u4efb\u52a1 5\n\n\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651 $\\forall i,B_i=1$ \u7684\u4e00\u4e2a\u72b6\u6001\uff0c\u8fd9\u6837\u6240\u6709 $P_i\\in [51,100]$ \u5185\u7684\u4f4d\u7f6e $i$ \u90fd\u88ab\u653e\u4e86\u4e24\u4e2a\u77f3\u5b50\u3002\n\n\u63a5\u4e0b\u6765\u7684\u6bcf\u4e00\u6b65\uff0c\u6211\u4eec\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a\u4f4d\u7f6e\u96c6\u5408 $S=\\{i\\mid R_i\\ge 2\\}$\uff0c\u6bcf\u6b21\u4ece $S$ \u4e2d\u53d6\u51fa\u4e24\u4e2a\u5143\u7d20 $i_0,i_1$\uff0c\u5c06 $B_{i_0},B_{i_1}$ \u8bbe\u4e3a $0$\uff0c\u5219\u5728\u65b0\u7684\u4e00\u8f6e\u6e38\u620f\u4e2d\uff0c\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u7684 $R_i$ \u5fc5\u7136\u4e3a $1$\uff08\u56e0\u4e3a\u5b83\u4eec\u5728\u5148\u524d\u7684\u6e38\u620f\u4e2d\u88ab Koala \u4e0d\u60dc\u82b1\u8d39 $2$ \u7684\u4ee3\u4ef7\u4e5f\u8981\u53d6\u5230\uff0c\u6240\u4ee5\u5f53\u5b83\u4ee3\u4ef7\u51cf\u5c11\u65f6 Koala \u5fc5\u7136\u4e5f\u4f1a\u53d6\u5b83\uff09\uff0c\u90a3\u4e48 Koala \u4f1a\u591a\u51fa\u6765\u4e24\u4e2a\u65b0\u7684\u77f3\u5b50\uff0c\u90a3\u4e48 Koala \u5fc5\u7136\u4f1a\u7528\u5b83\u4eec\u53d6\u5b83\u8fd8\u6ca1\u53d6\u7684\u6700\u5927\u7684\u6570\uff08\u56e0\u4e3a\u6240\u6709\u5b83\u8fd8\u6ca1\u53d6\u7684\u6570\u4ee3\u4ef7\u90fd\u76f8\u7b49\uff09\uff0c\u8fd9\u4e2a\u6570\u7b2c\u4e00\u6b21\u662f $50$\uff0c\u7b2c\u4e8c\u6b21\u662f $49$...\n\n\u6ce8\u610f\u5230\u6211\u4eec\u6bcf\u6b21\u5bf9 $S$ \u5148\u5220\u9664\u4e24\u4e2a\u6570\uff0c\u518d\u52a0\u5165\u4e00\u4e2a\u6570\uff0c\u6240\u4ee5\u6bcf\u6b21 $|S|$ \u51cf\u5c11 $1$\uff0c\u800c\u6700\u5f00\u59cb $|S| = 50$\uff0c\u6545\u6211\u4eec\u4e00\u5171\u53ef\u4ee5\u505a $49$ \u6b21\u3002\n\n\u6ce8\u610f\u5230\u6839\u636e\u6211\u4eec\u5728\u7b2c\u4e00\u6b21\u6e38\u620f\u4e2d\u5f97\u5230\u7684\u4fe1\u606f\uff0c$1$ \u6240\u5728\u7684\u4f4d\u7f6e\u662f\u53ef\u4ee5\u88ab\u786e\u5b9a\u7684\uff0c\u5e76\u4e0d\u9700\u8981\u989d\u5916\u518d\u505a\u6e38\u620f\u3002\n\n\u8fd9\u6837\u6211\u4eec\u6210\u529f\u786e\u8ba4\u4e86 $[1,50]$\uff0c\u8003\u8651\u5bf9\u5269\u4e0b\u7684\u6570\u5206\u6cbb\u5904\u7406\uff0c\u5047\u8bbe\u6211\u4eec\u9700\u8981\u786e\u5b9a $[l,r](51\\le l\\le r\\le 100)$ \u4e2d\u7684\u6570\u7684\u4f4d\u7f6e\uff0c\u8003\u8651\u4f7f\u7528\u5b50\u4efb\u52a1 3 \u7684\u65b9\u6cd5\uff0c\u5c06\u4e00\u90e8\u5206 $B_i$ \u8bbe\u4e3a\u76f8\u540c\u7684\u503c\uff0c\u5176\u4f59\u90e8\u5206\u8bbe\u4e3a $0$\uff1a\n\n- \u82e5 $r - l + 1 \\le 10$\uff0c\u5219\u6839\u636e\u6211\u4eec\u5728\u5b50\u4efb\u52a1 3 \u4e2d\u8bc1\u8fc7\u7684\u7ed3\u8bba\uff08\u6ce8\u610f\u5230\u8fd9\u4e9b\u6570\u4efb\u53d6\u4e24\u4e2a\u7684\u548c\u5747\u5927\u4e8e $100$ \u4e14\u5c0f\u4e8e $200$\uff09\uff0c\u6211\u4eec\u5c06\u8fd9\u4e9b\u4f4d\u7f6e\u7684 $B_i$ \u5168\u90e8\u8bbe\u4e3a $10$ \u5373\u53ef\u4fdd\u8bc1\u8fd9\u4e2a\u533a\u95f4\u4e00\u5b9a\u88ab\u5206\u6210\u4e86\u4e24\u90e8\u5206\u3002\n\n- \u5426\u5219\uff0c\u663e\u7136 $(r,100]$ \u7684\u6570 Koala \u4e00\u5b9a\u4f1a\u9009\uff0c\u5219\u7559\u7ed9 $[1,r]$ \u7684\u5171\u6709 $r$ \u4e2a\u77f3\u5b50\uff0c\u6211\u4eec\u5c06 $i\\in[l,r]$ \u7684 $B_i$ \u5168\u8bbe\u4e3a $\\left\\lceil\\dfrac {r}{r-l+1}\\right\\rceil - 1$\uff0c\u6211\u4eec\u53d1\u73b0\u663e\u7136\u8fd9\u4e2a\u533a\u95f4\u4e0d\u80fd\u88ab\u5168\u90e8\u9009\u53d6\uff08\u56e0\u4e3a\u8fd9\u6837\u5c31\u82b1\u8d39\u4e86\u8d85\u8fc7 $r$ \u4e2a\u77f3\u5b50\u4e86\uff09\uff0c\u4e5f\u663e\u7136\u4f1a\u81f3\u5c11\u518d\u9009\u53d6\u4e00\u4e2a\uff08\u56e0\u4e3a\u5373\u4f7f\u5269\u4e0b\u7684\u90e8\u5206\u5168\u90e8\u9009\u53d6\u4e5f\u6709\u5269\uff09\u3002\n\n\u4e8e\u662f\u6211\u4eec\u6bcf\u6b21\u90fd\u80fd\u7f29\u5c0f\u533a\u95f4\uff0c\u5c31\u80fd\u6070\u597d\u5728 $99$ \u6b21\u5185\u641e\u51fa\u6765\u6574\u4e2a\u6392\u5217\u4e86\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\nvoid playRound(int*, int*);\n\nconst int kN = 1e2 + 5;\n\nint B[kN], R[kN], typ[kN];\n\nint minValue(int N, int W) {\n\tmemset(B, 0, sizeof(B));\n\tB[0] = 1;\n\tplayRound(B, R);\n\tfor(int i = 0; i < N; ++i)\n\t\tif(R[i] <= B[i]) return i;\n}\n\nint maxValue(int N, int W) {\n\tfor(int i = 0; i < N; ++i) B[i] = 1;\n\tplayRound(B, R);\n\tfor(int i = 0; i < N; ++i) {\n\t\ttyp[i] = (R[i] >= 2);\n\t\tB[i] = typ[i] * 2;\n\t}\n\tplayRound(B, R);\n\tfor(int i = 0; i < N; ++i) {\n\t\tif(R[i] >= 3) typ[i] = 2;\n\t\tif(typ[i] != 2) B[i] = typ[i];\n\t\telse B[i] = 3;\n\t}\n\tplayRound(B, R);\n\tfor(int i = 0; i < N; ++i) {\n\t\tif(R[i] >= 3) typ[i] = 3, B[i] = 11;\n\t\telse B[i] = 0;\n\t}\n\tplayRound(B, R);\n\tfor(int i = 0; i < N; ++i)\n\t\tif(R[i] >= 12) return i;\n}\n\nint greaterValue(int N, int W) {\n\tmemset(B, 0, sizeof(B));\n\tB[0] = B[1] = 4;\n\tplayRound(B, R);\n\tif((B[0] < R[0]) && (B[1] < R[1])) {\n\t\tB[0] = B[1] = 8;\n\t\tplayRound(B, R);\n\t\tif((B[0] < R[0]) != (B[1] < R[1]))\n\t\t\treturn (B[0] < R[0]) < (B[1] < R[1]);\n\t\tB[0] = B[1] = 10;\n\t\tplayRound(B, R);\n\t\treturn (B[0] < R[0]) < (B[1] < R[1]);\n\t} else if((B[0] >= R[0]) && (B[1] >= R[1])) {\n\t\tB[0] = B[1] = 1;\n\t\tplayRound(B, R);\n\t\tif((B[0] < R[0]) != (B[1] < R[1]))\n\t\t\treturn (B[0] < R[0]) < (B[1] < R[1]);\n\t\tB[0] = B[1] = 2;\n\t\tplayRound(B, R);\n\t\treturn (B[0] < R[0]) < (B[1] < R[1]);\n\t} else return (B[0] < R[0]) < (B[1] < R[1]);\n}\n\nbool Check(int N, int W, int x, int y) {\n\tmemset(B, 0, sizeof(B));\n\tB[x] = B[y] = W / 2;\n\tplayRound(B, R);\n\treturn R[x] >= W / 2 + 1;\n}\n\nint idx[kN], pos[kN], cnt;\nbool vis[kN];\n\nvoid Div(int l, int r, std::vector <int> &p, int *P) {\n\tif(l == r) P[p[0]] = l;\n\telse {\n\t\tmemset(B, 0, sizeof(B));\n\t\tstd::vector <int> p_l, p_r;\n\t\tint x = (r - 1) / (r - l + 1);\n\t\tif(r - l + 1 <= 10) x = 10;\n\t\tfor(auto i : p)\n\t\t\tB[i] = x;\n\t\tplayRound(B, R);\n\t\tfor(auto i : p) {\n\t\t\tif(R[i] > B[i])\n\t\t\t\tp_r.push_back(i);\n\t\t\telse p_l.push_back(i);\n\t\t}\n\t\tDiv(l, l + p_l.size() - 1, p_l, P);\n\t\tDiv(l + p_l.size(), r, p_r, P);\n\t}\n}\n\nvoid allValues(int N, int W, int *P) {\n\tif (W == 2 * N) {\n\t\tfor(int i = 0; i < N; ++i) {\n\t\t\tint l = 0, r = cnt;\n\t\t\twhile(l < r) {\n\t\t\t\tint mid = (l + r) >> 1;\n\t\t\t\tif(Check(N, W, idx[mid], i)) r = mid;\n\t\t\t\telse l = mid + 1;\n\t\t\t}\n\t\t\tfor(int j = cnt; j > l; --j)\n\t\t\t\tidx[j] = idx[j - 1];\n\t\t\t++cnt; idx[l] = i;\n\t\t}\n\t\tfor(int i = 0; i < N; ++i)\n\t\t\tP[idx[i]] = i + 1;\n\t} else {\n\t\tmemset(vis, false, sizeof(vis));\n\t\tfor(int i = 0; i < N; ++i) B[i] = 1;\n\t\tplayRound(B, R);\n\t\tfor(int i = 0; i < N; ++i) {\n\t\t\ttyp[i] = (R[i] >= 2);\n\t\t}\n\t\tfor(int i = 0; i < N; ++i) {\n\t\t\tB[i] = 1;\n\t\t\tif(typ[i] == 1 || typ[i] == 2)\n\t\t\t\tR[i] = 2;\n\t\t}\n\t\tfor(int i = 0; i < 49; ++i) {\n\t\t\tint x = -1, y = -1;\n\t\t\tfor(int j = 0; j < N; ++j) {\n\t\t\t\tif(x == -1 && R[j] > B[j] && B[j]) x = j;\n\t\t\t\telse if(x != -1 && R[j] > B[j] && B[j]) {\n\t\t\t\t\ty = j; break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tB[x] = B[y] = 0;\n\t\t\tplayRound(B, R);\n\t\t\tfor(int j = 0; j < N; ++j)\n\t\t\t\tif(typ[j] != 1 && R[j] > B[j] && !vis[j]) {\n\t\t\t\t\tvis[j] = true; P[j] = 50 - i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < N; ++i)\n\t\t\tif(typ[i] == 0 && !vis[i]) {\n\t\t\t\tvis[i] = true; P[i] = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tfor(int i = 0; i < N; ++i) B[i] = 1;\n\t\tstd::vector <int> p;\n\t\tfor(int i = 0; i < N; ++i)\n\t\t\tif(!vis[i]) p.push_back(i);\n\t\tDiv(51, 100, p, P);\n\t}\n}\n```",
        "postTime": 1612320292,
        "uid": 34238,
        "name": "zhylj",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3777 \u3010[APIO2017]\u8003\u62c9\u7684\u6e38\u620f\u3011"
    },
    {
        "content": "## \u6b63\u9898\n\u8fd9\u9898\u8fd8\u633a\u597d\u73a9\u7684\uff0c\u82b1\u4e866h\u5de6\u53f3\u5427\u3002ztO emofunc Orz\n\u53ea\u6709\u7b2c\u4e09\u4e2asubtask\u6bd4\u5176\u4ed6\u4eba\u7684\u66f4\u4e25\u683c\uff0c\u5176\u4ed6\u7684\u5927\u81f4\u76f8\u540c\uff0c\u6700\u540e\u4e00\u4e2asubtask\u53ef\u4ee5\u505a\u5230$O(n^2log_2 w)$\u3002\n### Subtask1\n\u5341\u5206\u7684\u7b80\u5355\uff0c\u53ea\u9700\u8981\u968f\u4fbf\u7ed9\u4e00\u4e2a\u70b9\u653e\u4e00\u4e2a\u5c31\u884c\uff0c\u4e0d\u9009\u7684\u90a3\u4e2a\u5c31\u662f\u6700\u5c0f\u7684\u3002\n### Subtask2\n\u9996\u5148\u8003\u8651\u7b2c\u4e00\u6b21\u7ed9\u6bcf\u4e00\u4e2a\u70b9\u90fd\u653e\u4e00\u4e2a\uff0c\u8fd9\u6837\u53ef\u4ee5\u9009\u51fa\u6765$[51,100]$\u3002\n\u7136\u540e\u518d\u7ed9\u8fd950\u4e2a\u653e\u4e24\u4e2a\uff0c\u8003\u8651\u4ec0\u4e48\u6837\u7684\u70b9\u4f1a\u88ab\u9009\u5230\uff0c\u5047\u8bbe\u5148\u9009\u4e86$[1,50]$\uff0c\u5269\u4e0b50\u4e2a\u7403\u9009$[85,100]$\uff0c\u7136\u540e\u5f00\u59cb\u8c03\u6574\u51b3\u7b56\uff0c\u6bd4\u8f83$1$\u548c$84$\uff08\u8fd8\u5269\u4e0b\u4e24\u4e2a\u7403\uff0c\u53ea\u9700\u8981\u591a\u589e\u6dfb\u4e00\u4e2a\uff09\uff0c\u7136\u540e\u6bd4\u8f83$2+3+4$\u548c$83$\uff0c...\uff0c\u53ef\u4ee5\u5199\u4e00\u4e2a\u7a0b\u5e8f\u5e2e\u52a9\u81ea\u5df1\u5b9e\u73b0\u3002\u5c31\u4f1a\u53d1\u73b0\u7b2c\u4e8c\u6b21\u4f1a\u9009\u51fa\u6765$[76,100]$\uff0c\u7b2c\u4e09\u6b21\u7ed9\u8fd9$25$\u4e2a\u7403\u653e$4$\u4e2a\uff0c\u9009\u51fa\u6765$[92,100]$\uff0c\u7b2c\u56db\u6b21\u7ed9\u8fd9$9$\u4e2a\u7403\u653e$11$\u4e2a\uff0c\u9009\u51fa\u6765$[100,100]$\n### Subtask3\n\u6211\u8ba4\u4e3a\u7684\u91cd\u5934\u620f\u6765\u4e86\u3002\n\u8fd9\u4e2a$Subtask$\u56e0\u4e3a\u4e0d\u4e25\u8c28\u6240\u4ee5\u88ab\u597d\u591a\u4eba\u8bf4\u9519\u4e86\u4e8c\u5206\u754c\u9650\uff0c\u867d\u7136\u53ef\u4ee5\u7528\u6b63\u786e\u7684\u6b21\u6570\u5f97\u5230\u6b63\u786e\u7684\u7b54\u6848\uff0c\u4f46\u662f\u6ca1\u6709\u6df1\u7a76\u5176\u4e2d\u7684\u9053\u7406\u3002\n\u53ef\u4ee5\u60f3\u5230\uff0c\u5982\u679c\u8981\u6bd4\u8f83\u4e24\u4e2a\u4f4d\u7f6e\u7684\u503c\uff0c\u5c31\u5206\u522b\u7ed9\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u90fd\u653e\u4e0a$w$\u4e2a\u7403\uff0c\u5f53\u6709\u4e00\u65b9\u9009\u800c\u53e6\u4e00\u65b9\u4e0d\u9009\u7684\u65f6\u5019\uff0c\u7b54\u6848\u5c31\u51fa\u6765\u4e86\u3002\n\u6211\u4eec\u5148\u6765\u786e\u5b9a\u5f53\u6709$w$\u4e2a\u7403\u65f6\uff0c\u4e24\u4e2a\u4f4d\u7f6e\u90fd\u9009\u7684\u8bdd\uff0c\u503c\u6ee1\u8db3\u4ec0\u4e48\u6837\u7684\u6761\u4ef6\uff0c\u8bbe\u4e24\u4e2a\u503c\u5206\u522b\u4e3a$a,b,a<b$\u3002\n\u5f53$w=1$\u65f6\uff0c\u7531\u4e8e\u5f53\u524d\u624b\u4e2d\u8fd8\u6709\u4e24\u4e2a\u7403\uff0c\u53ef\u4ee5\u5148\u9009\u4e00\u4e2a$b$\uff0c$a$\u81f3\u5c11\u8981\u6ee1\u8db3$\\gt 1+2=3$\u65f6\uff0c$a$\u624d\u4f1a\u88ab\u9009\u3002\uff08\u6b64\u5904\u867d\u7136\u8bf4\u7684\u4e0d\u4e25\u8c28\uff0c\u4ec5\u4ec5\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u5f0f\u53bb\u731c$a$\u7684\u4e0b\u754c\uff0c\u4f46\u53ef\u4ee5\u53d1\u73b0\uff0c\u5b9e\u9645\u4e0a\u53ea\u7528\u5206\u4e24\u79cd\u60c5\u51b5\u6765\u8ba8\u8bba\uff0c\u5373$a<=3$\u6216\u8005$a>3$\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728$a<=3$\u65f6\uff0c\u65e0\u8bba\u600e\u4e48\u53d6\uff0c\u53d6\u5230\u7684\u4e24\u4e2a\u7403\u90fd$\\geq a$\uff0c\u5728$a>3$\u65f6\uff0c\u6362\u6389\u7684\u6700\u5c0f\u7684\u4e24\u4e2a\u7403\u6070\u597d\u662f$1+2=3$\uff0c\u6240\u4ee5$a>3$\u8fd9\u4e2a\u6761\u4ef6\u662f\u5145\u5206\u5fc5\u8981\u7684\uff0c\u4e0b\u9762\u540c\u7406\u3002\uff09\n\u5f53$w=2$\u65f6\uff0c\u7531\u4e8e\u5f53\u524d\u624b\u4e2d\u8fd8\u6709\u4e24\u4e2a\u7403\uff0c\u53ef\u4ee5\u5148\u7528$1$\u9009\u4e00\u4e2a$b$\uff0c$a$\u81f3\u5c11\u8981\u6ee1\u8db3$\\gt 2+3+4=9$\u65f6\uff0c$a$\u624d\u4f1a\u88ab\u9009\u3002\n\u5f53$w=3$\u65f6\uff0c\u7531\u4e8e\u5f53\u524d\u624b\u4e2d\u8fd8\u6709\u4e24\u4e2a\u7403\uff0c\u53ef\u4ee5\u5148\u7528$1,2$\u9009\u4e00\u4e2a$b$\uff0c$a$\u81f3\u5c11\u8981\u6ee1\u8db3$\\gt 3+4+5+6=18$\u65f6\uff0c$a$\u624d\u4f1a\u88ab\u9009\u3002\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u8f7b\u6613\u7b97\u51fa\u5982\u679c\u4e24\u4e2a\u7403\u90fd\u53d6\u7684\u8bdd\u6ee1\u8db3\u7684\u4e0b\u754c\u6761\u4ef6\u3002\n|  \u7403\u6570| \u4e0b\u754c$x$(\u5373$a,b>x$) |\n|--|--|\n| 1 | 3 |\n| 2 | 9 |\n| 3 | 18 |\n| 4 | 30 |\n| 5 | 45 |\n| 6 | 63 |\n| 7 | 84 |\n| 8 | 108 |\n\n\u6211\u4eec\u518d\u6765\u8ba8\u8bba\u4e00\u4e0b\u5982\u679c\u4e24\u8005\u90fd\u4e0d\u9009\u7684\u60c5\u51b5\u4e0b\uff0c$a,b$\u6ee1\u8db3\u7684\u4e0a\u754c\u5927\u5c0f\u3002\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u8ba1\u7b97\u4e0a\u754c\u7684\u65b9\u6cd5\uff0c\u5373\u53ea\u7528\u8003\u8651$a=1,b=x$\u7684\u60c5\u51b5\uff0c\u82e5$a\\neq 1,b=x$\uff0c\u8fd9\u6837\u4f1a\u4f7f\u5f97\u66ff\u6362\u6570\u7684\u548c\u53d8\u5c0f\uff0c\u66f4\u53ef\u80fd\u66ff\u6362$b$\uff0c\u800c\u6211\u4eec\u9700\u8981\u627e\u5230\u7684\u662f\u4e00\u4e2a**\u4fdd\u8bc1**\u7684\u4e0a\u754c\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u7528\u8003\u8651\u4e0a\u754c\u6700\u677e\u7684\u9650\u5236\uff0c\u5373\u5f53$a=1,b=x$\u65f6\u3002\n\u5f53$w=1$\u65f6\uff0c\u56e0\u4e3a\u624b\u4e2d\u6709\u4e24\u4e2a\u7403\uff0c\u6240\u4ee5\u5fc5\u9009\u4e00\u4e2a\uff0c\u5373$b<=0$\u3002\n\u5f53$w=2$\u65f6\uff0c\u56e0\u4e3a\u624b\u4e2d\u6709\u4e24\u4e2a\u7403\uff0c\u53ea\u9700\u8981\u53e6\u5916\u66ff\u6362\u51fa\u4e00\u4e2a\u5c31\u53ef\u4ee5\u9009\uff0c\u5373$b<=2$\n\u5f53$w=3$\u65f6\uff0c\u56e0\u4e3a\u624b\u4e2d\u6709\u4e24\u4e2a\u7403\uff0c\u53e6\u5916\u66ff\u6362\u51fa\u4e24\u4e2a\u5c31\u53ef\u4ee5\u9009\uff0c\u5373$b<=2+3=5$\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u8f7b\u6613\u7b97\u51fa\u5982\u679c\u4e24\u4e2a\u7403\u90fd\u53d6\u7684\u8bdd\u6ee1\u8db3\u7684\u4e0a\u754c\u6761\u4ef6\u3002\n|  \u7403\u6570| \u4e0a\u754c$x_1$(\u5373$a,b<=x_1$) |\u4e0b\u754cx_2(\u5373$a,b>x_2$)|\n|--|--|--|\n| 1 | 0 |3|\n| 2 | 2 |9|\n| 3 | 5 |18|\n| 4 | 9 |30|\n| 5 | 14 |45|\n| 6 | 20 |63|\n| 7 | 27 |84|\n| 8 | 35 |108|\n\u5bf9\u4e8e\u8fd9\u4e2a\u8868\u683c\u6211\u4eec\u5f88\u8f7b\u6613\u5c31\u53ef\u4ee5\u770b\u51fa\uff0c\u5728$w=i$\u65f6\u4e24\u4e2a\u90fd\u9009\uff0c\u90a3\u4e48\u5728$w=i+1$\u65f6\u5c31\u4e0d\u53ef\u80fd\u4e24\u4e2a\u90fd\u4e0d\u9009\uff0c\u800c\u5f53$w=8$\u65f6\u53ea\u53ef\u80fd\u4e0d\u9009\u6216\u8005\u4e00\u4e2a\u9009\u4e00\u4e2a\u4e0d\u9009\uff0c\u5728$w=1$\u65f6\uff0c\u53ea\u53ef\u80fd\u90fd\u9009\u6216\u8005\u4e00\u4e2a\u9009\u4e00\u4e2a\u4e0d\u9009\uff0c\u6240\u4ee5\u5c31\u4e00\u5b9a\u53ef\u4ee5\u5728$w=[1,8]$\u4e2d\u4e8c\u5206\u51fa\u4e00\u4e2a\u7b54\u6848\u3002\u8fd9\u6837\u9700\u8981\u4e8c\u5206$4$\u6b21\uff0c\u5e76\u4e0d\u80fd\u6ee1\u8db3\u6761\u4ef6\u3002\n\u4e00\u4e2a\u7b80\u5355\u7684\u7f29\u51cf\u4e8c\u5206\u8303\u56f4\u7684\u65b9\u6cd5\u5c31\u662f\u76f4\u63a5\u628a$7$\u53bb\u6389\uff0c\u56e0\u4e3a\u5f53$w=6$\u65f6\u4e24\u4e2a\u90fd\u9009\u7684\u8bdd\uff0c\u5728$w=8$\u65f6\u5c31\u4e0d\u53ef\u80fd\u4e24\u4e2a\u90fd\u4e0d\u9009\uff0c\u56e0\u4e3a$63>35$\uff0c\u90a3\u4e48\u5c31\u505a\u5b8c\u4e86\u3002\n\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06$w=x$\u53ef\u4ee5\u533a\u5206\u7684\u7b54\u6848\u5199\u6210$x_1<(a\\ or\\ b)<=x_2$\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u627e\u51fa\u82e5\u5e72\u4e2a\u7403\u4f7f\u4ed6\u4eec\u7684\u5e76\u96c6\u5305\u62ec$[1,100]$\u5c31\u53ef\u4ee5\u4e86\u3002\n\u4f46\u8fd9\u8fd8\u6ca1\u5b8c\uff0c\u56e0\u4e3a\u53ef\u4ee5\u901a\u8fc7\u5c1d\u8bd5\u53d1\u73b0$w\\in [1,3,5,8]$\u65f6\uff0c\u4f1a\u901a\u8fc7\u6b64\u9898\uff0c\u4e5f\u8bb8\u4f60\u4f1a\u95ee\u5230$a=4,b=5$\u7684\u60c5\u51b5\u600e\u4e48\u529e\uff1f\uff0c\u90a3\u662f\u56e0\u4e3a\u4e0b\u754c\u5728$a\\neq 1,b=x$\u65f6\uff0c\u662f\u4f1a\u53d8\u7a84\u7684\uff0c\u4e00\u4e2a\u7403\u6570\u7ba1\u7406\u7684\u7b54\u6848\u4e5f\u5c31\u53d8\u591a\u4e86\uff0c\u60f3\u8981\u627e\u51fa\u6240\u6709\u7684\u65b9\u6848\u5417\uff1f\u81ea\u884c\u63d0\u4ea4$2^8$\u6b21\u5c31\u53ef\u4ee5\u627e\u51fa\u6765\u4e86\uff0c\u4e5f\u8bb8\u4e0b\u4e00\u4e2a\u6700\u4f18\u89e3\u5c31\u662f\u4f60\u3002\n### Subtask4\n\u5341\u5206\u7b80\u5355\uff0c\u8003\u8651\u600e\u4e48\u7528$1$\u6b21\u6bd4\u8f83\u4e24\u4e2a\u4f4d\u7f6e\uff0c\u5728\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u653e\u4e0a$100$\u4e2a\u7403\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6837\u4ed6\u4e00\u5b9a\u4f1a\u9009\u4e00\u4e2a\u3002\n### Subtask5\n\u7531\u4e8e\u53ea\u7ed9\u4e86$100$\u6b21\uff0c\u8003\u8651\u5206\u6cbb\uff0c\u6bcf\u6b21\u60f3\u529e\u6cd5\u5c06\u4e00\u4e2a\u503c\u57df\u533a\u95f4\u7528$1$\u6b21\u7684\u4ee3\u4ef7$[l,r]$\u5206\u6210\u4e24\u90e8\u5206\u3002\n\u6211\u4eec\u8003\u8651\u5728\u503c\u4e3a$[l,r]$\u7684\u4f4d\u7f6e\u4e0a\u653e\u4e0a$k$\u4e2a\u7403\uff0c\u770b\u4e00\u4e0b\u662f\u5426\u9009\u4e00\u90e8\u5206\u4e0d\u9009\u4e00\u90e8\u5206\u5373\u53ef\u3002\n\u600e\u4e48\u8ba1\u7b97$k$\uff1f\n\u663e\u7136\u6ee1\u8db3\u4e8c\u5206\u6027\u8d28\uff0c\u5f53$k$\u8d8a\u5c0f\u7684\u65f6\u5019\uff0c\u8d8a\u6709\u53ef\u80fd\u53d6\uff0c$k$\u8d8a\u5927\u7684\u65f6\u5019\uff0c\u8d8a\u4e0d\u53ef\u80fd\u53d6\u3002\n\u5f53$k$\u53ef\u4ee5\u4f7f\u5f97\u533a\u95f4\u5168\u90e8\u88ab\u9009\u65f6\uff0c\u589e\u52a0\u7b54\u6848\uff0c\u5168\u90e8\u4e0d\u88ab\u9009\u65f6\u51cf\u5c0f\u7b54\u6848\uff0c\u5426\u5219\u627e\u5230\u5408\u6cd5\u7684$k$\u3002\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u7528$n \\log_2 w$\u6b21\u627e\u51fa\u7b54\u6848\uff0c\u8fd8\u662f\u4e0d\u884c\u3002\n\u53d1\u73b0\u533a\u95f4$[l,r]$\u5185\u653e$k$\u4e2a\u7403\uff0c\u5176\u4ed6\u4e0d\u653e\uff0c\u53d6\u6700\u5927\u4ee3\u4ef7\u8fd9\u79cd\u4e8b\u60c5\u53ef\u4ee5\u81ea\u5df1\u5e72\uff0c\u53ea\u9700\u8981\u679a\u4e3e\u533a\u95f4\u5185\u9009\u51e0\u4e2a\uff0c\u5176\u4ed6\u7684\u8d2a\u5fc3\u9009\u5c31\u53ef\u4ee5\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\n\u6240\u4ee5\u603b\u7684\u5c1d\u8bd5\u6b21\u6570\u5c31\u53d8\u6210$n-1$\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53d8\u6210$O(n^2\\log_2 w)$\u4e86\u3002\n\u7531\u4e8e$n$\u624d$100$\uff0c\u6240\u4ee5\u535a\u4e3b\u76f4\u63a5\u5199\u4e86\u66b4\u529b\u679a\u4e3e\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nvoid playRound(int*,int*);\n\nconst int N=110;\nint a[N],b[N],n,w;\n\nint minValue(int n,int w){\n\ta[0]=1;\n\tplayRound(a,b);\n\tfor(int i=0;i<n;i++) if(!b[i]) return i;\n}\n\nint maxValue(int n,int w){\n\tfor(int i=0;i<n;i++) a[i]=1;\n\tfor(int t=1;t<=4;t++){\n\t\tplayRound(a,b);\n\t\tint tot=0;\n\t\tfor(int i=0;i<n;i++) if(b[i]>a[i] && a[i])\n\t\t\ttot++;\n\t\tfor(int i=0;i<n;i++) \n\t\t\tif(b[i]>a[i] && a[i]) a[i]=w/tot;\n\t\t\telse a[i]=0;\n        if(tot==1) break;\n\t}\n\tfor(int i=0;i<n;i++) if(a[i]) return i;\n}\n\nint greaterValue(int n,int w){\n    int l=1,r=4;\n    int op[10]={0,1,3,5,8};\n\twhile(l<=r){\n\t\tint mid=(l+r)/2;\n\t\ta[0]=a[1]=op[mid];\n\t\tplayRound(a,b);\n\t\tif((b[0]>a[0]) ^ (b[1]>a[1])) return (b[0]>a[0])?0:1;\n\t\telse if(b[0]>a[0]) l=mid+1;\n\t\telse r=mid-1;\n\t}\n}\n\nbool check(int x,int l,int r){\n\tint mmax=l*(l-1)/2,pos=0,tot=w-(n-r)-x-1,ans=0;\n\tfor(int t=r;t>=l && tot>=0;t--,tot-=x+1){\n\t\tans+=t;\n\t\tif(mmax<ans+(l-1+l-tot)*tot/2) mmax=ans+(l-1+l-tot)*tot/2,pos=t;\n\t}\n\treturn pos!=0 && pos!=l;\n}\n\nint get_value(int l,int r){\n\tfor(int i=1;i<=w/(r-l+1);i++)\n\t\tif(check(i,l,r)) return i;\n}\n\nvoid solve(int l,int r,vector<int>&op,int*num){\n\tif(l==r){\n\t\tnum[op[0]]=l;\n\t\treturn ;\n\t}\n\tint k=get_value(l,r);\n\tvector<int> L,R;\n\tmemset(a,0,sizeof(a));\n\tfor(int i=0;i<op.size();i++) a[op[i]]=k;\n\tplayRound(a,b);\n\tfor(int i=0;i<op.size();i++){\n\t\tif(b[op[i]]>k) R.push_back(op[i]);\n\t\telse L.push_back(op[i]);\n\t}\n\tsolve(l,l+L.size()-1,L,num);\n\tsolve(l+L.size(),r,R,num);\n}\n\nvoid allValues(int N,int W,int*c){\n\tvector<int> V;n=N;w=W;\n\tfor(int i=0;i<n;i++) V.push_back(i);\n\tsolve(1,n,V,c);\n}\n```",
        "postTime": 1614213419,
        "uid": 29093,
        "name": "Deep_Kevin",
        "ccfLevel": 9,
        "title": "[APIO2017]\u8003\u62c9\u7684\u6e38\u620f\uff0c\u6784\u9020\u4e0e\u601d\u7ef4\u9898"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u597d\u73a9\u7684\u4ea4\u4e92\u9898\u3002\n\n### subtask 1\uff1a\n\n\u627e\u6700\u5c0f\u503c\u3002\n\n\u53ef\u4ee5\u4efb\u610f\u5728\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u653e\u4e00\u4e2a\u77f3\u5934\uff0c\u8fd9\u6837\u5bf9\u624b\u5fc5\u5b9a\u4f1a\u9009 $N-1$ \u4e2a\u4f4d\u7f6e\u3002\u76f4\u63a5\u627e\u5230\u5bf9\u624b\u6ca1\u9009\u7684\u4f4d\u7f6e\u5373\u53ef\u3002\n\n### subtask 2\uff1a\n\n\u627e\u6700\u5927\u503c\u3002\n\n\u5047\u8bbe\u6700\u5927\u503c\u5728\u96c6\u5408 $S$ \u4e2d\uff08\u4e00\u5f00\u59cb\u4e3a\u5168\u96c6\uff09\uff0c\u7136\u540e\u4f60\u5728\u96c6\u5408 $S$ \u4e2d\u7b49\u91cf\u52a0\u5165\u4e00\u4e9b\u77f3\u5b50\uff0c\u90a3\u4e48\u5fc5\u5b9a\u4f1a\u6709\u4e00\u90e8\u5206\u88ab\u9009\uff0c\u6709\u4e00\u90e8\u5206\u6ca1\u6709\u88ab\u9009\u3002\n\n\u663e\u7136\u53ef\u4ee5\u77e5\u9053\uff0c\u88ab\u9009\u7684\u96c6\u5408\u7684\u5143\u7d20\u6bd4\u6ca1\u6709\u88ab\u9009\u7684\u96c6\u5408\u7684\u5143\u7d20\u90fd\u8981\u5927\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u5c06 $S$ \u66f4\u65b0\u7ee7\u7eed\u6c42\u89e3\u3002\n\n\u663e\u7136\u5982\u679c\u6211\u4eec\u6bcf\u6b21\u7b49\u91cf\u6dfb\u52a0\u7684\u77f3\u5b50\u5c3d\u53ef\u80fd\u591a\uff0c$S$ \u7684\u5927\u5c0f\u51cf\u5c0f\u7684\u8d8a\u5feb\uff0c\u7ecf\u8fc7\u624b\u5de5\u9a8c\u8bc1\u53ef\u4ee5\u4fdd\u8bc1\u6b21\u6570\u5728 $4$ \u6b21\u4ee5\u5185\u3002\n\n### subtask 3\uff1a\n\n\u6bd4\u8f83\u4e24\u4e2a\u6570\u7684\u5927\u5c0f\u3002\n\n\u8003\u8651\u5728\u8fd9\u4e24\u4e2a\u6570\u4e0a\u52a0\u4e0a\u82e5\u5e72\u76f8\u540c\u7684\u77f3\u5b50\uff0c\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u5f97\u77e5\uff0c\u5728\u77f3\u5b50\u6570\u4e0d\u8d85\u8fc7 $11$ \u65f6\u5fc5\u7136\u5b58\u5728\u4e00\u7ec4\u89e3\u4f7f\u5f97\u5176\u4e2d\u4e00\u4e2a\u6570\u88ab\u9009\u53e6\u4e00\u4e2a\u4e0d\u88ab\u9009\u3002\u56e0\u4e3a\u95ee\u9898\u76f8\u5f53\u4e8e\u4e24\u51fd\u6570\u6c42\u4ea4\u70b9\u7684\u95ee\u9898\uff0c\u4e8e\u662f\u53ef\u4ee5\u4e8c\u5206\uff0c\u56e0\u4e3a\u6709\u51e0\u4e2a\u70b9\u7684\u53d6\u503c\u6761\u4ef6\u5177\u6709\u5305\u542b\u5173\u7cfb\uff0c\u6240\u4ee5\u5728 $3$ \u6b21\u4ee5\u5185\u53ef\u4ee5\u6c42\u5f97\u7b54\u6848\u3002\n\n### subtask 4\uff1a\n\n\u786e\u5b9a\u6574\u4e2a\u6392\u5217 \\# 1\u3002\n\n\u8003\u8651\u5728 $N=200\uff0cW=200$ \u65f6\u53ef\u4ee5\u5f88\u7b80\u5355\u5730\u6bd4\u8f83\u4e24\u4e2a\u6570\u7684\u5927\u5c0f\uff1a\u5728\u4e24\u4e2a\u6570\u7684\u6240\u5728\u4f4d\u7f6e\u5404\u653e $100$ \u77f3\u5b50\uff0c\u770b\u54ea\u4e2a\u88ab\u9009\u5373\u53ef\u3002\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\u4f7f\u5f97\u6bd4\u8f83\u6b21\u6570\u5728 $n\\log_2n$ \u7ea7\u522b\uff0c\u6b64\u65f6\u6700\u5927\u6b21\u6570\u4e0d\u4f1a\u8d85\u8fc7 $700$\u3002\n\n### subtask 5\uff1a\n\n\n\u786e\u5b9a\u6574\u4e2a\u6392\u5217 \\# 2\u3002\n\n\u8bd5\u5206\u6790 subtask 2 \u7684\u505a\u6cd5\uff0c\u53d1\u73b0\u8fd9\u4e2a\u529e\u6cd5\u53ef\u4ee5\u5728\u4e00\u6b21\u8be2\u95ee\u5185\u5c06\u5f53\u524d\u96c6\u5408\u62c6\u6210\u4e24\u4efd\u3002\n\n\u5982\u679c\u80fd\u591f\u4fdd\u8bc1\u6bcf\u6b21\u62c6\u6210\u7684\u96c6\u5408\u5747\u4e0d\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728 $N-1$ \u6b21\u8be2\u95ee\u5185\u786e\u5b9a\u7b54\u6848\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u679a\u4e3e\u5728\u5f53\u524d\u96c6\u5408\u653e\u76f8\u7b49\u7684\u77f3\u5b50\u7684\u4e2a\u6570\uff0c\u627e\u5230\u4e00\u4e2a\u4e0d\u4e3a\u7a7a\u7684\u62c6\u5206\u65b9\u6848\u3002\u53ef\u4ee5\u8bc1\u660e\uff0c\u8fd9\u6837\u7684\u62c6\u5206\u603b\u662f\u6210\u7acb\u7684\u3002\n\n\u7136\u540e\u8fdb\u884c\u8be2\u95ee\u5e76\u9012\u5f52\u6c42\u89e3\u3002\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\uff1a\n```\n//#include \"koala.h\"\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nint B[105],R1[105],R2[105];\nvoid playRound(int*,int*);\nint judge2(int i,int j)\n{\n\tif(B[i]<R2[i]&&B[j]>=R2[j])\n\t\treturn 0;\n\tif(B[i]>=R2[i]&&B[j]<R2[j])\n\t\treturn 1;\n\treturn -1;\n}\n\nint minValue(int N, int W) {\n    // TODO: Implement Subtask 1 solution here.\n    // You may leave this function unmodified if you are not attempting this\n    // subtask.\n    //playRound(B,R1);\n    int s=0;\n\t//for(int i=1;i<=n;i++)\n\t\t\n    B[0]=1;\n    playRound(B,R2);\n    for(int i=0;i<N;i++)\n    \tif(R2[i]<=B[i])s=i;\n    return s;\n}\n\nint maxValue(int N, int W) {\n    // TODO: Implement Subtask 2 solution here.\n    // You may leave this function unmodified if you are not attempting this\n    // subtask.\n    set<int> s;\n    for(int i=0;i<N;i++)\n    \ts.insert(i);\n    while(s.size()!=1)\n    {\n    \tset<int>::iterator it;\n    \tmemset(B,0,sizeof(B));\n    \tit=s.begin();\n    \twhile(it!=s.end())\n    \t{\n    \t\tB[*it]=W/s.size();\n    \t\tit++;\n    \t}\n    \tplayRound(B,R2);\n    \tfor(int i=0;i<N;i++)\n    \t\tif(!s.count(i))continue;\n    \t\telse if(R2[i]<=B[i])s.erase(i);\n    }\n    return *s.begin();\n}\n\nint greaterValue(int N, int W) {\n    // TODO: Implement Subtask 3 solution here.\n    // You may leave this function unmodified if you are not attempting this\n    // subtask.\n    int l=1,r=(N>10)?11:4;\n    while(l<=r)\n    {\n    \tint mid=(l+r)>>1;\n    \tB[0]=B[1]=mid;\n    \tplayRound(B,R2);\n    \tint now=judge2(0,1);\n    \tif(now!=-1)return now;\n    \tif(B[0]<R2[0])l=mid+1;\n    \telse r=mid-1;\n    }\n}\nint T;\nbool cmp(const int i,const int j)\n{\n\tmemset(B,0,sizeof(B));\n//\tmemset(R2,0,sizeof(R2));\n\tB[i]=B[j]=T;\n    playRound(B,R2);\n    return R2[i]<=T;\n}\nbool cmp2(const int i,const int j)\n{\n\tmemset(B,0,sizeof(B));\n//\tmemset(R2,0,sizeof(R2));\n    int l=1,r=(T>10)?8:4;\n    while(l<=r)\n    {\n    \tint mid=(l+r)>>1;\n\t//\tcerr<<mid<<endl;\n    \tB[i]=B[j]=mid;\n    \tplayRound(B,R2);\n\t//\tcerr<<mid<<\" \"<<R2[i]<<\" \"<<B[i]<<\" \"<<R2[j]<<\" \"<<B[j]<<\" \"<<i<<\" \"<<j<<endl;\n    \tint now=judge2(i,j);\n\t//\tcerr<<mid<<\" \"<<i<<\" \"<<j<<\" \"<<now<<endl;\n    \tif(now!=-1)return 1^now;\n    \tif(B[i]<R2[i])l=mid+1;\n    \telse r=mid-1;\n    }\n}\n\nbool pd(int x,int l,int r)\n{\n    int cache[2][205];\n    int num[2][205],i,j;\n    char taken[105][205];\n\n    for (i=0;i<205;++i) {\n        cache[1][i] = 0;\n        num[1][i] = 0;\n    }\n\n    for (i=0;i<T;++i) {\n        int v = (i>=l&&i<=r)?x+1:1;\n        int ii = i&1;\n        int o = ii^1;\n        for (j=0;j<=T;++j) {\n            cache[ii][j] = cache[o][j];\n            num[ii][j] = num[o][j];\n            taken[i][j] = 0;\n        }\n        for (j=T;j>=v;--j) {\n            int h = cache[o][j-v] + i+1;\n            int hn = num[o][j-v] + 1;\n            if (h > cache[ii][j] || (h == cache[ii][j] && hn > num[ii][j])) {\n                cache[ii][j] = h;\n                num[ii][j] = hn;\n                taken[i][j] = 1;\n            } else {\n                taken[i][j] = 0;\n            }\n        }\n    }\n\n    int cur = T;\n    int a[T];\n    for (i=T-1;i>=0;--i) {\n        int tmp=taken[i][cur]?((i>=l&&i<=r)?x+1:1):0;\n        a[i]=tmp;\n        cur -= tmp;\n    }\n    int now=a[l];\n    for(int i=l+1;i<=r;i++)\n    \tif(now!=a[i])return 1;\n    return 0;\n}\n\nint getval(int l,int r)\n{\n\tfor(int i=1;i<=T;i++)\n\t\tif(pd(i,l,r))return i;\n}\nint b[105],ans[105];\nvoid sol(int l,int r,vector<int> &a)\n{\n\tif(l==r)return ans[a[0]]=l,void();\n\tint w=getval(l,r);\n\tmemset(B,0,sizeof(B));\n\tfor(int i=0;i<a.size();i++)\n\t\tB[a[i]]=w;\n\tplayRound(B,R2);\n\tvector<int> a1,a2;\n\tfor(int i=0;i<a.size();i++)\n\t{\n\t\tif(R2[a[i]]>B[a[i]])a2.push_back(a[i]);\n\t\telse a1.push_back(a[i]);\n\t}\n\tsol(l,l+a1.size()-1,a1);\n\tsol(l+a1.size(),r,a2);\n}\n\nvoid allValues(int N, int W, int *P) {\n    if (W == 2*N) {\n        // TODO: Implement Subtask 4 solution here.\n        // You may leave this block unmodified if you are not attempting this\n        // subtask.\n\t\tT=N;\n        for(int i=0;i<N;i++)\n        \tR1[i]=i;\n        stable_sort(R1,R1+N,cmp);\n\t\tfor(int i=0;i<N;i++)\n\t\t\tP[R1[i]]=i+1;\n    } else {\n        // TODO: Implement Subtask 5 solution here.\n        // You may leave this block unmodified if you are not attempting this\n        // subtask.\n\t\tT=N;\n\t\tvector<int> a;\n\t\tfor(int i=0;i<N;i++)\n\t\t\ta.push_back(i); \n\t\tsol(0,N-1,a);\n\t\tfor(int i=0;i<N;i++)\n\t\t\tP[i]=ans[i]+1;\n    }\n}\n```",
        "postTime": 1597377821,
        "uid": 55201,
        "name": "clamee",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6558 \u3010[APIO2017]\u8003\u62c9\u7684\u6e38\u620f\u3011"
    }
]