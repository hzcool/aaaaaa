[
    {
        "content": "\u5148\u8003\u8651\u6811\u7684\u60c5\u51b5\u5982\u4f55\u6784\u9020\uff1a\n\n\u6211\u4eec\u8003\u8651\u4ece\u53f6\u5b50\u5f00\u59cb\u7531\u6df1\u81f3\u6d45\u5408\u5e76\u5b50\u6811\uff0c\u6211\u4eec\u8ba9\u4e09\u79cd\u989c\u8272\u5206\u522b\u4ee3\u8868\u4e09\u4e2a\u610f\u4e49\uff1a\n\n- \u989c\u8272 $1$\uff1a\u4e0e\u8fd9\u4e2a\u70b9\u76f8\u90bb\u7684\u8fb9\u5747\u5df2\u5efa\u597d\u3002\n- \u989c\u8272 $2$\uff1a\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\u7684\u6574\u4e2a\u5b50\u6811\u90fd\u5df2\u5efa\u597d\uff0c\u4f46\u5b83\u548c\u5b83\u7684\u7236\u4eb2\u8fd8\u672a\u8fde\u8fb9\u3002\n- \u989c\u8272 $3$\uff1a\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\u7684\u6574\u4e2a\u5b50\u6811\u8fd8\u6ca1\u5efa\u597d\u3002\n\n\u663e\u7136\uff0c\u4e00\u5f00\u59cb\u6240\u6709\u70b9\u7684\u989c\u8272\u90fd\u8981\u8bbe\u4e3a $3$\uff0c\u7136\u540e\u6211\u4eec\u6309\u6df1\u5ea6\u4ece\u5927\u5230\u5c0f\u8003\u8651\u6bcf\u4e2a\u70b9 $u$\uff0c\u5c06\u5176\u548c\u5176\u6240\u6709\u5b69\u5b50 $v$ \u8fde\u8fb9\uff0c\u5b8c\u6210\u8fd9\u68f5\u5b50\u6811\u7684\u6784\u9020\uff0c\u7531\u4e8e\u6211\u4eec\u8003\u8651\u7684\u987a\u5e8f\uff0c\u6240\u4ee5\u6b64\u65f6\u5176\u6240\u6709\u5b69\u5b50\u7684\u989c\u8272\u5747\u4e3a $2$\u3002\u6545\u53ef\u4ee5\u4f9d\u6b21\u8fdb\u884c\u4ee5\u4e0b\u7684\u6b65\u9aa4\uff1a\n\n- \u5c06 $u,v$ \u5408\u5e76\u3002\n- \u8fde\u63a5\u6240\u6709\u989c\u8272 $3$ \u548c\u989c\u8272 $2$ \u7684\u70b9\u3002\n- \u5c06\u989c\u8272 $2$ \u6539\u4e3a\u989c\u8272 $1$\u3002\n\n\u5728\u8003\u8651\u5b8c\u6240\u6709\u5b69\u5b50\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06 $u$ \u7684\u989c\u8272 $3$ \u6539\u4e3a\u989c\u8272 $2$ \u4e86\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u4ed9\u4eba\u638c\u7684\u6784\u9020\uff1a\u627e\u51fa\u4e00\u68f5 DFS \u6811\uff0c\u90a3\u4e48\u5c31\u6709\uff1a\u6bcf\u6761\u8fb9\u53ea\u88ab\u81f3\u591a\u4e00\u4e2a\u975e\u6811\u8fb9\u8986\u76d6\u3001\u6bcf\u6761\u975e\u6811\u8fb9\u5747\u4e3a\u8fd4\u7956\u8fb9\u3002\u4e8e\u662f\u8003\u8651\u5229\u7528\u989c\u8272 $4$ \u8868\u793a\u8fd8\u672a\u8fde\u8fd4\u7956\u8fb9\u7684\u70b9\u3002\n\n\u90a3\u4e48\u5728\u8003\u8651\u70b9 $u$ \u65f6\uff0c\u5176\u6240\u6709\u5b69\u5b50 $v$ \u4e00\u5171\u6709\u4e09\u79cd\u60c5\u51b5\uff08\u6ce8\u610f\u5728\u6bcf\u6b21\u62fc\u63a5\u5f00\u59cb\u65f6\uff0c$u,v$ \u5206\u522b\u90fd\u4e3a\u8fde\u901a\u5757\u4e2d\u552f\u4e00\u7684\u989c\u8272\u4e3a $3,2$ \u7684\u70b9\uff09\uff1a\n\n- $v$ \u4e0d\u5728\u73af\u4e2d\u6216 $v$ \u6240\u5728\u7684\u73af\u7684\u9876\u7aef\u6df1\u5ea6\u5927\u4e8e $u$\uff1a\u8be5\u60c5\u51b5\u5b50\u6811\u4e2d\u5fc5\u7136\u4e0d\u5b58\u5728\u989c\u8272 $4$ \u7684\u70b9\uff0c\u53ef\u4ee5\u548c\u6811\u7684\u60c5\u51b5\u4e00\u6837\u505a\u3002\n- $v$ \u5728\u73af\u4e2d\uff0c\u4e14 $v$ \u6240\u5728\u73af\u7684\u9876\u7aef\u6df1\u5ea6\u7b49\u4e8e $u$\uff1a\u5728\u505a\u5b8c\u6811\u7684\u60c5\u51b5\u540e\uff0c\u628a $u$ \u8fde\u5411\u6240\u6709\u989c\u8272\u4e3a $4$ \u7684\u70b9\uff0c\u518d\u628a\u6240\u6709\u989c\u8272\u4e3a $4$ \u7684\u70b9\u53d8\u4e3a $1$\u3002\n- $v$ \u5728\u73af\u4e2d\uff0c\u4e14 $v$ \u6240\u5728\u73af\u7684\u9876\u7aef\u6df1\u5ea6\u5c0f\u4e8e $u$\uff1a\u6b64\u60c5\u51b5 $v$ \u7684\u989c\u8272\u5e94\u8be5\u88ab\u8bbe\u4e3a $4$\uff0c\u4f46\u4e3a\u4e86\u9632\u6b62\u5e72\u6270\u524d\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5e94\u8be5\u628a\u8fd9\u79cd\u60c5\u51b5\u7559\u5230\u6700\u540e\u53bb\u5904\u7406\uff08\u663e\u7136\u6b64\u65f6\u4e0d\u5b58\u5728\u4efb\u4f55\u989c\u8272\u4e3a $4$ \u7684\u70b9\uff09\u3002\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\uff0c\u64cd\u4f5c\u6570\u662f $\\mathcal O(n)$ \u7684\uff0c\u8f83\u4e3a\u5bbd\u88d5\u3002\n\n```cpp\nconst int N = 1e6 + 5;\n \nint n, o_cnt;\nchar opt[N][20];\n \nstd::vector <int> E[N];\nvoid Add(int u, int v) {\n\tE[u].push_back(v);\n\tE[v].push_back(u);\n}\n \nint dep[N], fa[N], low[N];\nbool is_bg[N];\nstd::vector <int> ch[N], dfa;\nvoid Dfs(int u) {\n\tdep[u] = dep[fa[u]] + 1;\n\tlow[u] = dep[u];\n\tfor(int v : E[u])\n\t\tif(v != fa[u]) {\n\t\t\tif(!dep[v]) {\n\t\t\t\tch[u].push_back(v);\n\t\t\t\tfa[v] = u; Dfs(v);\n\t\t\t\tlow[u] = std::min(low[u], low[v]);\n\t\t\t} else if(dep[v] < dep[u]) {\n\t\t\t\tlow[u] = std::min(low[u], dep[v]);\n\t\t\t\tis_bg[u] = true;\n\t\t\t}\n\t\t}\n\tdfa.push_back(u);\n}\nvoid Solve() {\n\tfor(int u : dfa) {\n\t\tsprintf(opt[++o_cnt], \"r %d 1 3\", u);\n\t\tstd::sort(ch[u].begin(), ch[u].end(), [&](const int &x, const int &y) {\n\t\t\treturn low[x] > low[y];\n\t\t});\n\t\tfor(int v : ch[u]) {\n\t\t\tsprintf(opt[++o_cnt], \"j %d %d\", u, v);\n\t\t\tsprintf(opt[++o_cnt], \"c %d 2 3\", u);\n\t\t\tif(low[v] < dep[u] && is_bg[v]) {\n\t\t\t\tsprintf(opt[++o_cnt], \"r %d 2 4\", v);\n\t\t\t} else {\n\t\t\t\tif(low[v] == dep[u]) {\n\t\t\t\t\tsprintf(opt[++o_cnt], \"c %d 3 4\", u);\n\t\t\t\t\tsprintf(opt[++o_cnt], \"r %d 4 1\", u);\n\t\t\t\t}\n\t\t\t\tsprintf(opt[++o_cnt], \"r %d 2 1\", v);\n\t\t\t}\n\t\t}\n\t\tsprintf(opt[++o_cnt], \"r %d 3 2\", u);\n\t}\n}\n \nint main() {\n\tint m; scanf(\"%d%d\", &n, &m);\n\tfor(int i = 1; i <= m; ++i) {\n\t\tint k; scanf(\"%d\", &k);\n\t\tstd::vector <int> p;\n\t\twhile(k--) { int x; scanf(\"%d\", &x); p.push_back(x); }\n\t\tfor(int j = 0; j < (int)p.size() - 1; ++j)\n\t\t\tAdd(p[j], p[j + 1]);\n\t}\n\tDfs(1);\n\tSolve();\n\tprintf(\"%d\\n\", o_cnt);\n\tfor(int i = 1; i <= o_cnt; ++i)\n\t\tprintf(\"%s\\n\", opt[i]);\n\treturn 0;\n}\n```",
        "postTime": 1635420577,
        "uid": 34238,
        "name": "zhylj",
        "ccfLevel": 9,
        "title": "P6966 [NEERC2016]Cactus Construction"
    },
    {
        "content": "\u4e00\u9053\u6bd4\u8f83\u5de7\u5999\u4e14\u6709\u610f\u601d\u7684\u6784\u9020\u9898\u3002\n\n\u9996\u5148\u64cd\u4f5c\u6b21\u6570\u7684\u9650\u5236\u975e\u5e38\u5bbd\u677e\uff0c\u6240\u4ee5\u6211\u4eec\u4e3b\u8981\u8003\u8651\u53ea\u6709\u56db\u79cd\u989c\u8272\u7684\u9650\u5236\u3002\n\n\u6bcf\u79cd\u989c\u8272\u90fd\u5e94\u8be5\u6709\u4e00\u4e2a\u7528\u9014\uff1a\n\n- \u989c\u8272 1\uff1a\u5f53\u524d\u8fde\u901a\u5757\u7684 LCA\uff0c\u4e0e\u5176\u5b83\u7ed3\u70b9\u8fde\u8fb9\n- \u989c\u8272 2,3\uff1a\u8fde\u8fb9\u8fc7\u7a0b\u4e2d\u7684\u4e2d\u95f4\u7ed3\u70b9\n- \u989c\u8272 4\uff1a\u5783\u573e\u6876\uff0c\u6240\u6709\u6ca1\u7528\u7684\u70b9\u90fd\u6254\u8fdb\u53bb\n\n\u4ed9\u4eba\u638c\u56fe\u5fc5\u7136\u8981\u5148\u5efa\u51fa\u6765\u5706\u65b9\u6811\u3002\u7528 Tarjan \u5efa\u51fa\u6765\u7684\u5706\u65b9\u6811\u6709\u4e00\u4e2a\u597d\u6027\u8d28\uff1a\u539f\u56fe\u4e2d\u76f8\u90bb\u7684\u70b9\u5728\u904d\u5386\u987a\u5e8f\u4e2d\u4e5f\u662f\u76f8\u90bb\u7684\u3002\n\n\u5bf9\u5706\u65b9\u6811\u8fdb\u884c dfs\uff0c\u6bcf\u6b21\u904d\u5386\u4e00\u4e2a\u65b9\u70b9\u65f6\uff0c\u90fd\u5408\u5e76\u5bf9\u5e94\u7684\u73af\uff0c\u7136\u540e\u8ba9\u7236\u4eb2\u7ed3\u70b9\u989c\u8272\u53d8\u4e3a 1\uff0c\u5176\u5b83\u7ed3\u70b9\u989c\u8272\u53d8\u4e3a 4\u3002\n\n\u5bf9\u4e8e\u5272\u8fb9\uff0c\u6211\u4eec\u53ea\u8981 $\\{1\\},\\{1\\}\\to \\{1\\},\\{2\\}\\to\\{1,2\\}\\to \\{1,4\\}$ \u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u975e\u5272\u8fb9\uff0c\u6211\u4eec\u5c06\u7236\u4eb2\u7ed3\u70b9\u53d6\u51fa\u6765\uff0c\u5176\u5b83\u7ed3\u70b9\u6392\u6210\u4e00\u4e2a\u5e8f\u5217\u3002\u6211\u4eec\u5e0c\u671b\uff0c\u8fd9\u4e2a\u5e8f\u5217\u6700\u540e\u5e94\u8be5\u662f $3\\to 4\\to 4\\to\\cdots\\to 2$ \u8fd9\u6837\u7684\uff0c\u8fd9\u6837\u53ea\u8981\u8fde\u63a5\u7236\u4eb2\u7ed3\u70b9\u4e0e\u9996\u5c3e\u7ed3\u70b9\uff0c\u518d\u5c06\u9996\u5c3e\u6254\u6389\u5373\u53ef\u3002\n\n\u6784\u9020\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n- \u7b2c\u4e00\u6b65\uff1a\u9996\u7ed3\u70b9\u989c\u8272\u53d8\u4e3a 2\n- \u7b2c\u4e8c\u6b65\uff1a\u4f9d\u6b21\u5411\u53f3\u679a\u4e3e\u7ed3\u70b9\uff0c\u901a\u8fc7\u8ddf\u5272\u8fb9\u7c7b\u4f3c\u7684\u65b9\u6cd5\u5c06 $\\{2\\},\\{1\\}$ \u8f6c\u53d8\u6210 $\\{4,2\\}$\u3002\u6ce8\u610f\u9996\u7ed3\u70b9\u548c\u6b21\u7ed3\u70b9\u8f83\u4e3a\u7279\u6b8a\uff0c\u5e94\u53d8\u6210 $\\{3,2\\}$\u3002\n\n\u8fd9\u6837\u64cd\u4f5c\u603b\u6b21\u6570\u4e3a $O(n+m)$ \u7ea7\u522b\uff0c\u8fdc\u5c0f\u4e8e\u9650\u5236\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define For(i,a,b) for(int i=(a);i<=(b);++i)\n#define Rof(i,a,b) for(int i=(a);i>=(b);--i)\nusing namespace std;\nconst int Maxn=2e5;\n\ninline int read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch<'0' || ch>'9')\n    {\n        if(ch=='-') f=-1;\n        ch=getchar();\n    }\n    while(ch>='0' && ch<='9')\n    {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\n\nstruct Node{int to,nxt;} Edge[Maxn*2+5];\nint tot,Head[Maxn+5];\ninline void Addedge(int x,int y)\n{\n    Edge[++tot]=(Node){y,Head[x]};\n    Head[x]=tot;\n}\n\nint n,m,cnt,dfn[Maxn+5],low[Maxn+5];\nint st[Maxn+5],top,cur;\nvector<int> v[Maxn+5];\n\ninline void Tarjan(int x)\n{\n    dfn[x]=low[x]=++cur,st[++top]=x;\n    for(int i=Head[x];i;i=Edge[i].nxt)\n    {\n        int y=Edge[i].to;\n        if(!dfn[y])\n        {\n            Tarjan(y),low[x]=min(low[x],low[y]);\n            if(low[y]==dfn[x])\n            {\n                v[++cnt].push_back(x),v[x].push_back(cnt);\n                while(1)\n                {\n                    int k=st[top--]; v[cnt].push_back(k),v[k].push_back(cnt);\n                    if(y==k) break;\n                }\n            }\n        }\n        else low[x]=min(low[x],dfn[y]);\n    }\n}\nvector<int> w; int id;\nvector<array<int,4>> ans;\ninline void Merge(int a,int b) {ans.push_back({0,a,b,0});}\ninline void Change(int a,int c1,int c2) {ans.push_back({1,a,c1,c2});}\ninline void Link(int a,int c1,int c2) {ans.push_back({2,a,c1,c2});}\ninline void Solve()\n{\n    if(w.size()==1) Change(w[0],1,2),Merge(id,w[0]),Link(id,1,2),Change(id,2,4);\n    else\n    {\n        Change(w[0],1,2);\n        for(int i=1;i<w.size();++i)\n        {\n            Merge(w[i-1],w[i]),Link(w[i],1,2);\n            if(i==1) Change(w[i],2,3); else Change(w[i],2,4);\n            Change(w[i],1,2);\n        }\n        Merge(id,w[0]),Link(id,1,2),Link(id,1,3),Change(id,2,4),Change(id,3,4);\n    }\n    \n}\ninline void dfs(int x,int fa)\n{\n    for(auto y:v[x]) if(y!=fa) dfs(y,x);\n    if(x>n)\n    {\n        w.clear();\n        for(auto y:v[x]) if(y!=fa) w.push_back(y);\n        id=fa,Solve();\n    }\n}\n\nint main()\n{\n    n=read(),m=read(),cnt=n;\n    For(i,1,m)\n    {\n        int a=read()-1,b=read(),c;\n        while(a--) c=read(),Addedge(b,c),Addedge(c,b),b=c;\n    }\n    For(i,1,n) if(!dfn[i]) Tarjan(i);\n    dfs(1,0);\n    cout<<ans.size()<<endl;\n    for(auto i:ans)\n    {\n        int op=i[0],a=i[1],b=i[2],c=i[3];\n        if(op==0) printf(\"j %d %d\\n\",a,b);\n        if(op==1) printf(\"r %d %d %d\\n\",a,b,c);\n        if(op==2) printf(\"c %d %d %d\\n\",a,b,c);\n    }\n    return 0;\n}\n```",
        "postTime": 1676969211,
        "uid": 148913,
        "name": "Graphcity",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P6966 [NEERC2016]Cactus Construction"
    },
    {
        "content": "*tag:\u6784\u9020\uff0c\u4ed9\u4eba\u638c*\n\n*\u4e00\u9053\u5f88\u6709\u610f\u601d\u7684\u6784\u9020\u9898*\n\n---\n\u9996\u5148\u8003\u8651\u6811\u600e\u4e48\u505a\uff1a\n\n- \u53f6\u5b50\u8282\u70b9\u628a\u989c\u8272\u6539\u4e3a $2$\u3002\n- \u975e\u53f6\u5b50\u8282\u70b9\u628a\u989c\u8272\u6539\u4e3a $3$\u3002\u7136\u540e\u5148\u5904\u7406\u5b8c\u6240\u6709\u513f\u5b50\uff0c\u518d\u5c06\u6240\u6709\u513f\u5b50\u96c6\u5408\u4e0e\u5f53\u524d\u70b9\u5408\u8d77\u6765\u3002\u7136\u540e\u8fde $2,3$\uff0c\u5373\u628a\u6240\u6709\u513f\u5b50\u548c\u5f53\u524d\u70b9\u8fde\u8d77\u6765\u3002\u518d\u6539 $2$ \u4e3a $1$\uff0c\u6539 $3$ \u4e3a $2$\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a\u8282\u70b9\u5904\u7406\u5b8c\u540e\uff0c\u90fd\u6ee1\u8db3\uff1a\n\n- \u5f53\u524d\u70b9\u989c\u8272\u4e3a $2$\n- \u5b50\u6811\u5185\u6240\u6709\u5176\u4ed6\u70b9\u989c\u8272\u4e3a $1$\n- \u5b50\u6811\u5185\u6240\u6709\u8fb9\u90fd\u5df2\u7ecf\u8fde\u597d\u4e86\n\n\u6240\u4ee5\u5982\u679c\u662f\u6811\u7684\u8bdd\uff0c\u53ea\u9700\u8981 $3$ \u79cd\u989c\u8272\u5c31\u591f\u4e86\n\n---\n\u63a8\u5e7f\u5230\u4ed9\u4eba\u638c\u4e0a\uff0c\u5efa\u51fa\u5706\u65b9\u6811\uff0c\u5bf9\u4e8e\u5706\u70b9\u7684\u64cd\u4f5c\u548c\u6811\u4e00\u6837\uff0c\u8003\u8651\u65b9\u70b9(\u73af)\u600e\u4e48\u5904\u7406\u3002\n\n\u8bbe\u5f53\u524d\u65b9\u70b9 $x$\uff0c\u7236\u4eb2\u4e3a $y$\u3002\u90a3\u4e48\u627e\u5230 $x$ \u5bf9\u5e94\u7684\u73af\uff0c\u987a\u6b21\u5904\u7406\u8fd9\u4e2a\u73af\u3002\u6cbf\u7528\u4e4b\u524d\u7684\u601d\u8def\uff0c\u6211\u4eec\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u70b9\u5904\u7406\u5b8c\u540e\u989c\u8272\u90fd\u4e3a $2$\uff0c\u4e14\u96c6\u5408\u5185\u5176\u4ed6\u70b9\u989c\u8272\u90fd\u4e3a $1$\u3002\u4e8e\u662f\u6211\u4eec\u4f9d\u6b21\u5408\u5e76\u4e24\u4e2a\u76f8\u90bb\u7684\u513f\u5b50\uff0c\u8bbe\u4e3a $a,b$\u3002\n\n- $r\\ a\\ 2\\ 3$\n- $j\\ a\\ b$\n- $c\\ a\\ 2\\ 3$\n- $r\\ a\\ 3\\ 1$\n\n\u8fd9\u6837\u64cd\u4f5c\u540e\uff0c\u5c31\u8fde\u4e86\u4e00\u6761 $(a,b)$ \u7684\u8fb9\uff0c\u800c\u4e14\u8ba9 $a$ \u7684\u989c\u8272\u6539\u4e3a\u4e86 $1$\u3002\n\n\u4f46\u662f\u95ee\u9898\u6765\u4e86\uff0c\u5230\u4e86\u6700\u540e\u4e00\u6b65\u6211\u4eec\u9700\u8981\u628a\u8fd9\u6761\u94fe\u7684\u5934\u5c3e\u8fde\u8d77\u6765\uff0c\u600e\u4e48\u529e\u5462\uff1f\n\n\u8fd9\u4e2a\u65f6\u5019\u5c31\u7528\u4e0a\u7b2c $4$ \u79cd\u989c\u8272\u4e86\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u5904\u7406\u7684\u8282\u70b9\uff0c\u5408\u5e76\u540e\u6211\u4eec\u4e0d\u628a\u5b83\u7684\u989c\u8272\u6539\u4e3a $1$\uff0c\u800c\u662f\u6539\u4e3a $4$\u3002\u8fd9\u6837\u7684\u8bdd\u662f\u4e0d\u4f1a\u5f71\u54cd\u8fde\u8fd9\u6761\u94fe\u7684\u8fc7\u7a0b\u7684\uff0c\u800c\u4e14\u6700\u540e\u505a\u4e00\u6b21\u8fde $2,4$ \u64cd\u4f5c\u5c31\u53ef\u4ee5\u628a\u5934\u5c3e\u8fde\u8d77\u6765\uff0c\u7136\u540e\u518d\u505a\u4e00\u6b21\u6539 $4$ \u4e3a $1$ \u4fdd\u8bc1\u6027\u8d28\u3002\n\n---\n\u5173\u4e8e\u64cd\u4f5c\u6b21\u6570\uff0c\u6b64\u9898 $10^6=20n$\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u70b9\u80fd\u591f\u8fdb\u884c $20$ \u6b21\u64cd\u4f5c\uff0c\u663e\u7136\u6211\u4eec\u7684\u64cd\u4f5c\u6570\u8fdc\u8fbe\u4e0d\u5230\u8fd9\u4e2a\u4e0a\u9650\u3002\n\n---\n\u4e0a\u8ff0\u5c31\u662f\u5927\u4f53\u601d\u8def\uff0c\u4e0d\u8fc7\u8fd9\u9898\u7ec6\u8282**\u5341\u5206\u591a**\u3002\n### \u7ec6\u82821\n\u5728\u8fde\u94fe\u7684\u65f6\u5019\uff0c\u8981**\u5206\u4e09\u7c7b**\uff1a\n\n- \u7b2c\u4e00\u4e2a\u70b9\n\t- $r\\ x\\ 2\\ 4$\n- \u7b2c\u4e8c\u4e2a\u70b9\n\t- $j\\ x\\ prv$\n    - $c\\ x\\ 2\\ 4$\n- \u5176\u4ed6\u70b9\n\t- $r\\ prv\\ 2\\ 3$\n    - $j\\ x\\ prv$\n    - $c\\ x\\ 2\\ 3$\n    - $r\\ x\\ 3\\ 1$\n\n### \u7ec6\u82822\n\u5728\u5177\u4f53\u5b9e\u73b0\u65b9\u70b9\u7684\u65f6\u5019\uff0c\u5047\u8bbe\u65b9\u70b9 $x$\uff0c\u7236\u4eb2 $y$\u3002\u90a3\u4e48\u53ef\u4ee5\u628a\u8fd9\u4e2a\u73af**\u9664\u4e86 $y$** \u4e4b\u5916\u7684\u70b9\u5148\u8fde\u6210\u4e00\u6761\u94fe\u3002\u6839\u636e\u6784\u5efa\u8fc7\u7a0b\uff0c\u8fd9\u6839\u94fe\u6ee1\u8db3\u5934\u4e3a $4$\uff0c\u5c3e\u4e3a $2$\uff0c\u5176\u4f59\u70b9\u4e3a $1$\u3002\u6240\u4ee5\u53ef\u4ee5\u505a\uff1a\n\n- $r\\ \\text{\u94fe}\\ 2\\ 4$\n- $j\\ \\text{\u94fe}\\ y$\n- $c\\ y\\ 2\\ 4$\n- $r\\ y\\ 4\\ 1$\n\n\u8fd9\u6837\u5c31\u4e00\u4e0b\u8fde\u4e86\u4e24\u6761\u8fb9\u3002(\u5982\u679c\u5f53\u524d $y$ \u7684\u989c\u8272\u4e3a $1$\uff0c\u5219\u8fd8\u9700\u8981\u4e00\u6b21\u64cd\u4f5c\u628a $y$ \u7684\u989c\u8272\u6539\u4e3a $2$)\n\n### \u7ec6\u82823\n\u7531\u4e8e\u5728\u5b9e\u73b0\u65b9\u70b9\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u4fee\u6539 $y$ \u7684\u989c\u8272\u3002\u6240\u4ee5\u5728\u5904\u7406\u5706\u70b9 $x$ \u7684\u65f6\u5019\uff0c**\u5982\u679c\u6709\u81f3\u5c11\u4e00\u4e2a\u513f\u5b50\u662f\u65b9\u70b9\uff0c\u5c31\u4e0d\u6267\u884c\u6539\u989c\u8272\u7684\u64cd\u4f5c\uff01** \u56e0\u4e3a\u8fd9\u6837\u4f1a\u628a $y$ \u96c6\u5408\u4e2d\u5176\u4ed6 $1$ \u6539\u4e3a $2$(`WA on 34`)\u3002\u5f53\u7136\u4e5f\u8981\u7279\u5224\u6ca1\u6709\u65b9\u513f\u5b50\u7684\u65f6\u5019\uff0c\u505a\u4e00\u6b21\u6539\u989c\u8272 $1$ \u4e3a $2$ \u7684\u64cd\u4f5c\u3002\n\n[\u4ee3\u7801](https://www.luogu.com.cn/paste/wus3nfxy)",
        "postTime": 1616571447,
        "uid": 56825,
        "name": "oisdoaiu",
        "ccfLevel": 9,
        "title": "[NEERC2016]Cactus Construction"
    },
    {
        "content": "\u6211\u4eec\u5148\u6765\u8003\u8651\u6811\u7684\u60c5\u51b5\u600e\u4e48\u505a\uff1a\n- \u5728\u6811\u4e0a dfs\uff0c\u4e0d\u65ad**\u5408\u5e76\u5b50\u6811**\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u628a\u6df1\u5ea6**\u6700\u6d45**\u7684\u70b9\u67d3\u6210\u989c\u8272\u67d3\u6210\u989c\u8272 $2$\uff0c\u5176\u4ed6\u67d3\u6210\u989c\u8272 $1$\uff0c\u7136\u540e\u5728\u4e00\u4e2a\u70b9\u5408\u5e76\u5b50\u6811\u65f6\uff0c\u5b83\u7684\u989c\u8272\u662f $3$\uff0c\u5408\u5e76\u5b8c\u4e4b\u540e\u53ef\u4ee5\u628a\u5b83\u7684\u989c\u8272\u6539\u6210 $2$\u3002\u4e5f\u5c31\u662f\u5728\u6811\u4e0a\u6211\u4eec**\u53ea\u9700\u8981** $3$ \u79cd\u989c\u8272\u3002\n\n$\\color{red}\\text{\u5728\u4ed9\u4eba\u638c\u4e0a\uff0c\u9700\u8981\u7279\u6b8a\u8003\u8651\u7684\u4e5f\u53ea\u6709\u73af\u672b\u4e86\u3002}$\n\n\u56e0\u4e3a\u65ad\u73af\u4e3a\u94fe\u540e\uff0c\u73af\u672b\u662f\u94fe\u4e0a\u6df1\u5ea6\u6700\u5927\u7684\uff0c\u4f46\u662f\u6211\u4eec\u53c8\u9700\u8981\u5b83\u8fde\u8fb9\uff0c\u6240\u4ee5\u53ea\u8981\u7ed9\u5b83\u67d3\u989c\u8272 $4$\uff0c\u7136\u540e\u5728\u5404\u79cd\u60c5\u51b5\u4e0b\u7279\u5224\u5373\u53ef\u3002\n\n\u5728\u4e00\u4e2a\u73af\u6df1\u5ea6**\u6700\u6d45**\u7684\u5730\u65b9\uff0c\u628a\u989c\u8272 $4$ \u7684\u8fb9\u4e5f\u8fde\u4e0a\u53bb\uff0c\u540c\u65f6\u628a\u5b83\u67d3\u6210 $1$\u3002\n\n\u5728\u73af\u7684\u94fe\u4f20\u9012\u65f6\uff0c\u5224\u65ad\u4e00\u4e0b\u540e\u7ee7\u662f\u5426\u662f\u73af\u672b\u3002\u5176\u4f59\u7684\u5c31\u662f**\u7c7b\u4f3c\u6811\u7684**\u65b9\u6cd5\u4e86\u3002\n\n\u5269\u4e0b\u5c31\u53ea\u9700\u8981\u6ce8\u610f\u7ec6\u8282\u5373\u53ef\u3002\u7ec6\u8282\u6bd4\u8f83\u7e41\u7410\uff0c\u9700\u8981\u7ec6\u5fc3\u5904\u7406\u3002\u4ee3\u7801\u9b3c\u755c\uff0c\u7ec6\u8282\u7e41\u591a\uff0c\u65e0\u6cd5\u7a81\u51fa\u91cd\u70b9\uff0c\u5c31~~\u4e0d\u653e~~\u4e86\u3002",
        "postTime": 1614852242,
        "uid": 132168,
        "name": "_Clown_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6966 \u3010[NEERC2016]Cactus Construction\u3011"
    }
]