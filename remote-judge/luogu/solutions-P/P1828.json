[
    {
        "content": "#### \u5df2\u7ecf\u6709dalao\u7528SPFA\u505a\u51fa\u6765\u62c9\uff0c\u4e0d\u8fc7\u8bb2\u7684\u6709\u70b9\u4e0d\u8be6\u7ec6\u5728\u6b64\u7ec6\u8bb2\u4e00\u4e0b\u3002\n\n\n\u8fd9\u9053\u9898\u4e00\u7785\u5c31\u77e5\u9053\u5e94\u8be5\u662f\u4e00\u4e2a\u6700\u77ed\u8def\n\n## \u518d\u8bb2SPFA\u4e4b\u524d\u63d0\u4f9b\u4e00\u4e2a70\u5206\u505a\u6cd5\n\n# \u88f8\u7684djkstra\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=3000+10;\nint g[maxn],n,m,d[maxn][maxn],to[maxn],cnt,first[maxn],p1,p[maxn],next[maxn],piao[maxn];\nint w[maxn],dis[maxn];\n/*void add(int u,int v,int l){\n    ++cnt;\n    to[cnt]=v;\t\n    next[cnt]=first[u];\n    first[u]=cnt;\t\n    w[cnt]=l;\n}*/\nvoid dijkstra(int s){\n    for(int i=1;i<=n;i++)dis[i]=10000;\n    memset(piao,0,sizeof(piao));\n    int u;\n    int minn;\n    for(int i=1;i<=n;i++)\n        dis[i]=d[s][i];\n    piao[s]=1;\n    dis[s]=0;\n    for(int i=2;i<=n;i++){\n        minn=2147483647-1;\n    for(int j=1;j<=n;j++)\n        if(piao[j]==0&&dis[j]<minn)\n            minn=dis[j],u=j;\n    piao[u]=1;\n    for(int j=1;j<=n;j++)\n        if(dis[j]>dis[u]+d[u][j]&&!piao[j])\n            dis[j]=dis[u]+d[u][j];\n    \t\t}\n    \t}\n    \nint main(){\n    cin>>p1>>n>>m;\n    memset(d,0x3f3f,sizeof(d));\n    for(int i=1;i<=p1;i++)\n    scanf(\"%d\",&g[i]);\n    for(int i=1;i<=m;i++){\n        int x,y,z;\n        cin>>x>>y>>z;\n        d[x][y]=d[y][x]=z;\n    }\n    int minn=100000000;\n    for(int i=1;i<=n;i++){\n        dijkstra(i);\n        int ans=0;\n        for(int j=1;j<=p1;j++)\n        ans+=dis[g[j]];\n        minn=min(minn,ans);\n    //\tcout<<ans<<endl;\n    }\n    cout<<minn<<endl;\n    return 0;\n    }\n\n```\n\n## \u5f88\u663e\u7136\u4f1aT\u6389\n\n### \u4e0d\u8fc7\u6709\u4eba\u95ee\u4e86\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u5199SPFA\n\n## because SPFA \u4ed6\u6b7b\u4e86\uff0c\u5728\u975e\u7279\u6b8a\u60c5\u51b5\u4e0b\uff08\u6709\u8d1f\u6743\uff09\u5efa\u8bae\u7528dijkstra\uff0c\u6bd4\u5982[\u5f52\u7a0b](https://www.luogu.org/problemnew/show/P4768)\uff0c\u7528SPFA\u4f1a\u88ab\u5361\u523060\u5206\u7684\n\n\n# \u63a5\u4e0b\u6765\u603b\u7b97\u5230\u4e86\u4ecb\u7ecdSPFA\u4e86\n\n### \u6bb5\u51e1\u4e01\u8bba\u6587\u4e2d\u7684\u590d\u6742\u5ea6\u8bc1\u660e (O(kE)\uff08\u8fd9\u4e48\u597d\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1f\uff09\uff0ck \u662f\u5c0f\u5e38\u6570)\u662f\u9519\u8bef\u7684\uff0c\u5728\u6b64\u7565\u53bb\u3002\u8be5\u7b97\u6cd5\u7684\u6700\u574f\u590d\u6742\u5ea6\u4e3a O(VE)\uff08\u90fd\u9000\u5316\u6210Bellman\u2014Ford\u4e86\uff09\n\n### SPFA\u662f\u5728 Bellman-Ford \u7b97\u6cd5\u4e0a\u7684\u961f\u5217\u4f18\u5316\uff0c\u6240\u4ee5\u5b66\u4e60\u524d\u5148\u770b\u4e00\u4e0bBellman-Ford\u3002\n\n```\n1,.\u521d\u59cb\u5316:\u5c06\u9664\u6e90\u70b9\u5916\u7684\u6240\u6709\u9876\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u4f30\u8ba1\u503c d[v] -->+\u221e, d[s]-->0;\n\n2.\u8fed\u4ee3\u6c42\u89e3:\u53cd\u590d\u5bf9\u8fb9\u96c6E\u4e2d\u7684\u6bcf\u6761\u8fb9\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\uff0c\u4f7f\u5f97\u9876\u70b9\u96c6V\u4e2d\u7684\u6bcf\u4e2a\u9876\u70b9v\u7684\u6700\u77ed\u8ddd\u79bb\u4f30\u8ba1\u503c\u9010\u6b65\u903c\u8fd1\u5176\u6700\u77ed\u8ddd\u79bb;(\u8fd0\u884c|v|-1\u6b21)\n\n3.\u68c0\u9a8c\u8d1f\u6743\u56de\u8def:\u5224\u65ad\u8fb9\u96c6E\u4e2d\u7684\u6bcf\u4e00\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u662f\u5426\u6536\u655b\u3002\u5982\u679c\u5b58\u5728\u672a\u6536\u655b\u7684\u9876\u70b9\uff0c\u5219\u7b97\u6cd5\u8fd4\u56defalse\uff0c\u8868\u660e\u95ee\u9898\u65e0\u89e3;\u5426\u5219\u7b97\u6cd5\u8fd4\u56detrue\uff0c\u5e76\u4e14\u4ece\u6e90\u70b9\u53ef\u8fbe\u7684\u9876\u70b9v\u7684\u6700\u77ed\u8ddd\u79bb\u4fdd\u5b58\u5728 d[v]\u4e2d\u3002\n\n```\n## \u6458\u81ea\u767e\u5ea6\u3002\n\n## \u6211\u4eec\u6ce8\u610f\u4e00\u4e0b\u8fed\u4ee3\u6c42\u89e3\u7684\u90e8\u5206\uff0c\u6211\u4eec\u53d1\u73b0Bellman-Ford\u662f\u5c06\u6bcf\u4e00\u6761\u8fb9\u8fdb\u884c\u4e86relax\u64cd\u4f5c\uff0c\u8fd9\u6837\u5c31\u4f1a\u51fa\u73b0\u5f88\u591a\u6beb\u65e0\u610f\u4e49\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u80fd\u4e0d\u80fd\u4f18\u5316\u4e00\u4e0b\u5462\uff1f\n\n### \u5b9e\u9645\u4e0a\u6211\u4eec\u677e\u5f1b\u662f\u53ea\u8981\u677e\u5f1b \u5f53\u524d\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4f30\u8ba1\u503c\u5bf9\u79bb\u5f00\u5f53\u524d\u70b9\u6240\u6307\u5411\u7684\u7ed3\u70b9\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\uff0c\u5c31\u884c\u4e86\u3002\u8fd9\u5f53\u4e2d\u5c31\u9700\u8981\u7528\u961f\u5217\u6765\u5b58\u50a8\u6240\u6307\u7684\u70b9\u5c31\u884c\u4e86\uff0c\u6240\u4ee5\u4e3b\u8981\u4ee3\u7801\u5c31\u51fa\u6765\u4e86\n\n\n```cpp\nfor(int i=first[u];i;i=next[i]){//\u56e0\u4e3aSPFA\u662f\u4ee5\u8fb9\u4e3a\u5bf9\u8c61\u6240\u4ee5\u53ef\u4ee5\u91c7\u7528\u90bb\u63a5\u8868\u6765\u5b58\u50a8\n            int v=to[i];\n            if(d[v]>d[u]+w[i]){\n                d[v]=d[u]+w[i];\n             //   cout<<v<<\" \"<<d[v]<<endl;\n                if(!p[v]){\n                    q.push(v);\n                    p[v]=1;\n                }\t\t\t\n            }\t\n\n```\n\n## \u518d\u9644\u4e0a\u90bb\u63a5\u8868\u4ee3\u7801\n\n```cpp\nvoid add(int u,int v,int l){\n    ++cnt;\n    to[cnt]=v;\t\n    next[cnt]=first[u];\n    first[u]=cnt;\t\n    w[cnt]=l;\n}\n```\n## \u628a\u8fd9\u4e9b\u7ed9\u60f3\u660e\u767d\u4e86\uff0c\u4ee3\u7801\u5c31\u5f88\u7b80\u5355\u4e86\u3002\u9644\u4e0a\u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=30000+10;\nint g[maxn],n,m,d[maxn],to[maxn],cnt,first[maxn],p1,p[maxn],next[maxn];\nint w[maxn],dis[maxn];\nqueue<int>q;\nvoid add(int u,int v,int l){\n    ++cnt;\n    to[cnt]=v;\t\n    next[cnt]=first[u];\n    first[u]=cnt;\t\n    w[cnt]=l;\n}\nvoid spfa(int s){\n    memset(p,0,sizeof(p));\n    for(int i=1;i<=n;i++)d[i]=10000;\n    d[s]=0;\tq.push(s);p[s]=1;\n    while(!q.empty()){\n        int u=q.front();\n        q.pop();\n        p[u]=0;\n        for(int i=first[u];i;i=next[i]){\n            int v=to[i];\n            if(d[v]>d[u]+w[i]){\n                d[v]=d[u]+w[i];\n             //   cout<<v<<\" \"<<d[v]<<endl;\n                if(!p[v]){\n                    q.push(v);\n                    p[v]=1;\n                }\t\t\t\n            }\t\n        }\n    }\n    }\nint main(){\n    cin>>p1>>n>>m;\n    for(int i=1;i<=p1;i++)\n    scanf(\"%d\",&g[i]);\n    for(int i=1;i<=m;i++){\n        int x,y,z;\n        cin>>x>>y>>z;\n        add(x,y,z);\n        add(y,x,z);\n    }\n    int minn=100000000;\n    for(int i=1;i<=n;i++){//\u548cSPFA\u6a21\u677f\u4e0d\u4e00\u6837\u7684\u5c31\u662f\u9700\u8981\u5bf9\u6bcf\u4e2a\u70b9\u8fdb\u884cSPFA\n        spfa(i);\n        int ans=0;\n        for(int j=1;j<=p1;j++)\n        ans+=d[g[j]];\n        minn=min(minn,ans);\n    //\tcout<<ans<<endl;\n    }\n    cout<<minn<<endl;\n    return 0;//\u5b8c\u7ed3\u6563\u82b1\n    }\n\n```\n\n### \u6700\u540e\u5728\u63d0\u4e00\u53e5\uff0cSPFA\u4e4b\u6240\u4ee5\u53ef\u4ee5\u5224\u8d1f\u73af\uff0c\u662f\u56e0\u4e3a\u662f\u4ee5\u8fb9\u4e3a\u5bf9\u8c61\u3002\u6240\u4ee5\u5224\u8d1f\u73af\u65f6\u3002\u53ea\u8981\u770b\u4e00\u4e0b\u4e00\u4e2a\u70b9\u8fd8\u80fd\u4e0d\u80fd\u518d\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5224\u65ad\u8d1f\u73af\u4e86\uff0c\u5177\u4f53\u4ee3\u7801\u5c31\u4e0d\u653e\u51fa\u6765\u4e86\u81ea\u5df1\u60f3\u4e00\u60f3\n\n\n## \u8c22\u8c22\u7ba1\u7406\u5458\u5927\u5927\u5ba1\u6838\u6b64\u7bc7\u9898\u89e3\uff0c\u5982\u6709\u4e0d\u8db3\u8bf7\u6307\u6b63\u3002\n\n\u53ef\u4ee5\u70b9\u4e2a\u8d5e\u5417\uff1f\n\n\n\n\n\n\n",
        "postTime": 1543503568,
        "uid": 41302,
        "name": "Obito",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1828 \u3010\u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter\u3011"
    },
    {
        "content": "floyd\u4f18\u5316~~~\n\n\u697c\u4e0b\u5927\u4f6c\u8bf4floyd\u4f1a\u8d85\u65f6\uff0c\u679c\u771f\u5982\u6b64\uff1b\n\n\u7136\u800c\u52d2\uff0c\u8def\u5f84\u90fd\u662f\u53cc\u5411\u8fb9\uff01\n\n\u6240\u4ee5\u4ecei\u5230j\u7684\u8ddd\u79bb\u7b49\u4e8ej\u5230i\u7684\u8ddd\u79bb~\uff1b\n\n\u7136\u540e\uff0c\u5c31\u780d\u4e86\u4e00\u534a\u7684\u679d\u3002\n\n\u5c31\u8fc7\u4e86\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\n************************************\n\n\u65b9\u4fbf\u840c\u65b0\uff0c\u5199\u4e00\u4e0bfloyd\u7684\u539f\u7406\u3002\n\n\u4ecei\u5230j\u6709\u4e24\u79cd\u9014\u5f84\uff0c\u76f4\u63a5\u4ecei\u5230j\uff08\u8def\u5f84\u4e0d\u5b58\u5728\u8017\u65f6\u5373\u4e3a\u65e0\u7a77\uff09\n\n\u6216\u8005\u4ecei\u5230k\u518d\u4ecek\u5230i\u3002\n\n\u7136\u540e\u9009\u8f83\u77ed\u7684\u5c31\u884c\u4e86\u3002\n\nps\uff1a\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\u3002\n\n\u4e0a\u4ee3\u7801~\n\n            \n```cpp\n#include<stdio.h>\nusing namespace std;\nint n;int p;int c;\nint map[800][805];\nint d[805][805];\nint mark[805];\nconst int inf=9999999;\nint res=inf;\nint main()\n{\n    scanf(\"%d%d%d\",&n,&p,&c);\n    for(int i=0;i<p;i++)//\u624b\u52a8memset\n    {\n        for(int j=0;j<p;j++)\n        {\n            if(i==j)\n            {\n                map[i][j]=0;//\u5230\u81ea\u5df1\u7684\u8ddd\u79bb\u4e3a0\n                d[i][j]=0;\n            }\n            else\n            {\n                map[i][j]=inf;\n                d[i][j]=inf;\n            }\n        }\n    }\n    for(int i=0;i<n;i++)\n    {\n        int t;\n        scanf(\"%d\",&t);\n        mark[t-1]++;//\u4ece\u96f6\u5f00\u59cb\u7684\u6570\u7ec4\n    }\n    for(int i=0;i<c;i++)\n    {\n        int u;int v;int val;\n        scanf(\"%d%d%d\",&u,&v,&val);\n        map[u-1][v-1]=val;//\u4ece\u96f6\u5f00\u59cb\u7684\u6570\u7ec4\n        map[v-1][u-1]=val;\n        d[u-1][v-1]=val;//\u521d\u59cb\u5316d\u4e3a\u90bb\u63a5\u77e9\u9635\n        d[v-1][u-1]=val;\n    }\n    for(int k=0;k<p;k++)//floyd\u4e09\u91cd\u5faa\u73af\n    {\n        for(int i=0;i<p;i++)\n        {\n            for(int j=0;j<i;j++)//\u7075\u9b42\u526a\u679d\uff0c\u53cc\u5411\u8fb9\u7b97\u4e00\u534a\u56fe\u5c31\u597d\u4e86\n            {\n                if(d[i][j]>d[i][k]+d[k][j])\n                {\n                    d[i][j]=d[i][k]+d[k][j];\n                    d[j][i]=d[i][j];//\u66f4\u65b0\u53e6\u4e00\u534a\n                }\n            }\n        }\n    }\n    for(int i=0;i<p;i++)//\u626b\u4e00\u904d\uff0c\u5bfb\u627e\u6700\u77ed\u8def\u5f84\u548c\n    {\n        int sum=0;\n        for(int j=0;j<p;j++)\n        {\n            sum+=d[i][j]*mark[j];//\u56e0\u4e3a\u662f\u8def\u5f84\u548c\uff0c\u6240\u4ee5\u7528mark\u6570\u7ec4\u4fdd\u5b58\u5976\u725b\u5934\u6570\n        }\n        if(res>sum)res=sum;\n    }\n    printf(\"%d\",res);\n    return 0;//\u62dc\u62dc\u7a0b\u5e8f~\n}\n\n```",
        "postTime": 1506317819,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1828 \u3010\u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter\u3011"
    },
    {
        "content": "# \u9999\u751c\u7684\u9ec4\u6cb9\n\u672c\u9898\u5462\uff0c\u80af\u5b9a\u662f\u8981\u6c42\u6700\u77ed\u8def\u7684\uff0c\u672c\u849f\u84bb\u7528\u7684\u662fspfa\uff0c\u867d\u7136\u697c\u4e0aDaLao\u8bf4floyd\u7adf\u7136\u53ef\u4ee5\u8fc7\uff0c\u4f46\u6211\u8fd8\u662f\u53d1\u4e00\u4e2aspfa\u7684\u5427\uff01\uff01\n\u672c\u849f\u84bb\u663e\u793a\u679a\u4e3e\u6240\u6709\u7267\u573a\uff0c\u8dd1\u4e00\u904dspfa\u8fd9\u6837\u6bcf\u4e2a\u70b9\u5230\u8fd9\u4e2a\u7267\u573a\u7684\u6700\u77ed\u8def\u5c31\u77e5\u9053\u4e86\uff0c\u518d\u7d2f\u52a0\u8d77\u6765\uff0c\u53d6\u6700\u5c0f\u503c\u5c31\u53ef\u4ee5\u4e86\u3002\n\u8d34\u4ee3\u7801\u3002\u3002\u3002\n```\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n#include <cmath>\n#include <iostream>\nusing namespace std;\n\nconst int Maxn=1500;\nconst int inf=214748364;\n\nint p,n,m,pp[Maxn*Maxn],a,b,c,Ans=inf;\nint head[Maxn*2],to[Maxn*2],nextt[Maxn*2],w[Maxn*2],cnt,dist[Maxn*2];\nbool inq[Maxn*2];\n\nqueue<int> q;\n\nvoid addedge(int u,int v,int cost)//\u52a0\u8fb9\u4e0d\u591a\u8bf4\u4e86\n{\n\t++cnt;\n\tnextt[cnt]=head[u];\n\thead[u]=cnt;\n\tto[cnt]=v;\n\tw[cnt]=cost;\n}\t\n\nvoid spfa(int s)//spfa\u6807\u51c6\u6a21\u677f\uff0c\u4e0d\u591a\u8bf4\u4e86\n{\n\tmemset(inq,false,sizeof(inq));\n\tfor(int i=1; i<=n; i++)\n\t\tdist[i]=inf;\n\tdist[s]=0;\t\n\tq.push(s);\n\tinq[s]=true;\n\twhile(!q.empty()) {\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tinq[u]=false;\n\t\tfor(int v=head[u]; v; v=nextt[v]) {\n\t\t\tif(dist[to[v]]>dist[u]+w[v]) {\n\t\t\t\tdist[to[v]]=dist[u]+w[v];\n\t\t\t\tif(inq[to[v]]==false) {\n\t\t\t\t\tinq[to[v]]=true;\n\t\t\t\t\tq.push(to[v]);\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tcin>>p>>n>>m;\n\tfor(int i=1; i<=p; i++)\n\t\tcin>>pp[i];\n\tfor(int i=1; i<=m; i++) {//\u52a0\u8fb9\u4e0d\u591a\u8bf4\u4e86\n\t\tcin>>a>>b>>c;\n\t\taddedge(a,b,c);\n\t\taddedge(b,a,c);\n\t}\n\tfor(int i=1; i<=n; i++) {//\u679a\u4e3e\u54ea\u4e2a\u7267\u573a\u653e\u7cd6\u679c\n\t\tspfa(i);//\u8c03\u7528spfa\n\t\tint sum=0;\n\t\tfor(int j=1; j<=p; j++)//\u7d2f\u8ba1\u6bcf\u4e2a\u5976\u725b\u5230\u90a3\u4e2a\u7267\u573a\u7684\u6240\u6709\u6700\u77ed\u8def\n\t\t\tsum+=dist[pp[j]];//\u7d2f\u52a0\u8d77\u6765\n\t\tAns=min(Ans,sum);//\u53d6\u6700\u5c0f\u503c\u5373\u53ef\n\t}\t\n\tcout<<Ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1523539157,
        "uid": 26800,
        "name": "Sshenyyyu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1828 \u3010\u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter\u3011"
    },
    {
        "content": "# \u6f47\u6d12\u306e\u5f00\u59cb\n\n\u7b2c\u4e00\u6b65\uff1a\u98df\u7528\u5934\u6587\u4ef6\u548c\u5b9a\u4e49\u53d8\u91cf\uff0c\n\n\u53d8\u91cf\u5e72\u4ec0\u4e48\u7528\u7684\u8bf4\u7684\u5f88\u6e05\u695a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,p,c,i,j,x,y,t,min1,head,tail,tot,u;\nint a[801][801],b[501],dis[801],num[801],w[801][801],team[1601];//team\u4e3a\u961f\u5217\uff0cdis\u4e3a\u8ddd\u79bb\uff0cnum\u4e3a\u90bb\u63a5\u70b9\u4e2a\u6570\uff0ca\u5b58\u76f8\u90bb\u70b9\nbool exist[801];//exist\u662f\u5b58\u5728\u7684\u610f\u601d\uff0c\u786e\u5b9a\u67d0\u4e2a\u5143\u7d20\u662f\u5426\u5b58\u5728\nint main()\n```\n\n\u7b2c\u4e8c\u6b65\uff1a\u6b63\u5e38\u7684\u8f93\u5165\n\n```cpp\n\tcin>>n>>p>>c;//\u5976\u725b\u6570\uff0c\u7267\u573a\u6570\uff0c\u7267\u573a\u95f4\u7684\u9053\u8def\u6570\n\tfor(i=1; i<=p; i++)\n\t{\n\t\tb[i]=0;\n\t\tnum[i]=0;\n\t\tfor(j=1; j<=p; j++)\n\t\t\tw[i][j]=0x7fffffff/3;//\u7b2ci\u5230\u7b2cj\u4e2a\u7267\u573a\u7684\u8def\u7a0b\u521d\u59cb\u5316\u4e3a\u65e0\u7a77\n\t}\n```\n\u5c06\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u53d8\u4e3a\u8d85\u5927\u8d85\u5927\u7684\u6570\uff0c\u9171\u7d2b\u597d\u6bd4\u8f83\u7684\u5566\n\n\u7b2c\u4e09\u6b65\uff1a\u6b63\u5e38\u7684\u8f93\u5165\u52a0\u5b58\u50a8\n\n```cpp\nfor(i=1; i<=n; i++)\n\t\tcin>>b[i];//\u8f93\u5165\u5976\u725b\u6240\u5728\u7684\u7267\u573a\u53f7\n\tfor(i=1; i<=c; i++) //\u90bb\u63a5\u77e9\u9635\u5b58\u50a8\uff0c\u91c7\u7528\u5faa\u73af\u961f\u5217\u80fd\u591f\u964d\u4f4e\u961f\u5217\u5927\u5c0f\uff0c\u961f\u5217\u957f\u5ea6\u53ea\u9700\u5f00\u52302*n+5\u5373\u53ef\u3002\n\t{\n\t\tcin>>x>>y>>t;//\u76f8\u8fde\u7267\u573aAB\u548c\u4e24\u7267\u573a\u95f4\u7684\u8ddd\u79bb\n\t\tw[x][y]=t;//\u4fdd\u5b58x\u5230y\u95f4\u7684\u8ddd\u79bb\n\t\ta[x][++num[x]]=y;//\u5b58\u76f8\u90bb\u70b9,\u5728num\u539f\u6709\u7684\u57fa\u7840\u4e0a\u52a0\u4e00\uff0c\u5e76\u5c06y\u70b9\u5b58\u5165\n\t\ta[y][++num[y]]=x;//\u5b58\u76f8\u90bb\u70b9,\u5728num\u539f\u6709\u7684\u57fa\u7840\u4e0a\u52a0\u4e00\uff0c\u5e76\u5c06x\u70b9\u5b58\u5165\n\t\tw[y][x]=w[x][y];//\u56e0\u4e3a\u662f\u53cc\u5411\u8fde\u901a\u7684\uff0c\u6240\u4ee5\u4e24\u7267\u573a\u95f4\u7684\u8ddd\u79bb\u76f8\u7b49\n\t}\n```\n\u8be6\u7ec6\u89e3\u91ca\u4ee3\u7801\u91cc\u9762\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u5728\u5570\u55e6\u4e00\u4e0b\uff0c\u53cc\u5411\u7684\u5f88\u91cd\u8981\n\n\u7528\u5730\u63a5\u65af\u79d1\u62c9\u7684\u54e5\u4eec\u4eec\u6ce8\u610f\u4e86\u3002\n\n\u7b2c\u56db\u6b65\uff1a\u521d\u59cb\u5316minn\n\n```cpp\nmin1=0x7fffffff/3;//\u521d\u59cb\u5316min\n```\n\n\u6700\u540e\u4e00\u6b65\uff1a~~gao chao \u9884\u8b66~~\n\n```cpp\nfor(i=1; i<=p; i++)\n\t{\n\t\tfor(j=1; j<=p; j++) dis[j]=0x7fffffff/3;\n\t\t//memset(team,0,sizeof(team));                         //\u961f\u5217\u6570\u7ec4\u521d\u59cb\u5316\n\t\t//memset(exist,false,sizeof(exist));                   //exist\u6807\u5fd7\u521d\u59cb\u5316\n\t\tdis[i]=0;\n\t\tteam[1]=i;\n\t\thead=0;\n\t\ttail=1;\n\t\texist[i]=true;      //\u8d77\u59cb\u70b9\u5165\u961f\n\t\twhile(head!=tail)\n\t\t{\n\t\t\thead++;\n\t\t\thead=((head-1)%1601)+1;                           //\u5faa\u73af\u961f\u5217\u5904\u7406\n\t\t\tu=team[head];\n\t\t\texist[u]=false;\n\t\t\tfor(j=1; j<=num[u]; j++) //num\u6570\u7ec4\u50a8\u5b58\u7684\u4e3a\u5f53\u524d\u70b9\u6240\u76f8\u90bb\u7684\u70b9\u7684\u4e2a\u6570\n\t\t\t\tif (dis[a[u][j]]>dis[u]+w[u][a[u][j]])\n\t\t\t\t{\n\t\t\t\t\tdis[a[u][j]]=dis[u]+w[u][a[u][j]];\n\t\t\t\t\tif (!exist[a[u][j]])//\u5982\u679c\u8be5\u70b9\u6ca1\u6709\u88ab\u62ff\u51fa\uff0c\u5c31\u8fdb\u884c\u5904\u7406\n\t\t\t\t\t{\n\t\t\t\t\t\ttail++;\n\t\t\t\t\t\ttail=((tail-1)%1601)+1;\n\t\t\t\t\t\tteam[tail]=a[u][j];\n\t\t\t\t\t\texist[a[u][j]]=true;//\u62ff\u51fa\u8be5\u6570\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\ttot=0;\n\t\tfor(j=1; j<=n; j++)\n\t\t\ttot+=dis[b[j]];//\u7d2f\u52a0\u8def\u7a0b\u5e76\u8ba1\u7b97\n\t\tif (tot<min1) min1=tot;//\u627e\u6700\u5c0f\n\t}\n\tcout<<min1;\n\treturn 0;\n```\n\n\u521d\u59cb\u5316\u6211\u662f\u53bb\u6389\u4e86\uff0c\u56e0\u4e3a\u5b9a\u4e49\u5728int main()\u5916\u9762\u662f\u4e0d\u9700\u8981\u518d\u6b21\u6e05\u96f6\u7684\n\n\u7136\u540e\u5c31\u662f\u7c7b\u4f3c\u624b\u6253\u7684\u961f\u5217\uff0c\u6328\u4e2a\u6bd4\u8f83\u627e\u5230\u5c0f\u7684\u5c31\u9a6c\u4e0a\u66ff\u6362\uff0c\u91cd\u8981\u7684\u662f\u6ca1\u6709\u88ab\u7528\u8fc7\u5c31\u5904\u7406\n\n\u518d\u5c31\u662f\u6328\u4e2a\u6bd4\u8f83\u627e\u6700\u5c0f\u503c\u5c31\u597d\u4e86\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,p,c,i,j,x,y,t,min1,head,tail,tot,u;\nint a[801][801],b[501],dis[801],num[801],w[801][801],team[1601];//team\u4e3a\u961f\u5217\uff0cdis\u4e3a\u8ddd\u79bb\uff0cnum\u4e3a\u90bb\u63a5\u70b9\u4e2a\u6570\uff0ca\u5b58\u76f8\u90bb\u70b9\nbool exist[801];//exist\u662f\u5b58\u5728\u7684\u610f\u601d\uff0c\u786e\u5b9a\u67d0\u4e2a\u5143\u7d20\u662f\u5426\u5b58\u5728\nint main()\n{\n//    freopen(\"butter.in\",\"r\",stdin);\n//    freopen(\"butter.out\",\"w\",stdout);\n\tcin>>n>>p>>c;//\u5976\u725b\u6570\uff0c\u7267\u573a\u6570\uff0c\u7267\u573a\u95f4\u7684\u9053\u8def\u6570\n\tfor(i=1; i<=p; i++)\n\t{\n\t\tb[i]=0;\n\t\tnum[i]=0;\n\t\tfor(j=1; j<=p; j++)\n\t\t\tw[i][j]=0x7fffffff/3;//\u7b2ci\u5230\u7b2cj\u4e2a\u7267\u573a\u7684\u8def\u7a0b\u521d\u59cb\u5316\u4e3a\u65e0\u7a77\n\t}\n\tfor(i=1; i<=n; i++)\n\t\tcin>>b[i];//\u8f93\u5165\u5976\u725b\u6240\u5728\u7684\u7267\u573a\u53f7\n\tfor(i=1; i<=c; i++) //\u90bb\u63a5\u77e9\u9635\u5b58\u50a8\uff0c\u91c7\u7528\u5faa\u73af\u961f\u5217\u80fd\u591f\u964d\u4f4e\u961f\u5217\u5927\u5c0f\uff0c\u961f\u5217\u957f\u5ea6\u53ea\u9700\u5f00\u52302*n+5\u5373\u53ef\u3002\n\t{\n\t\tcin>>x>>y>>t;//\u76f8\u8fde\u7267\u573aAB\u548c\u4e24\u7267\u573a\u95f4\u7684\u8ddd\u79bb\n\t\tw[x][y]=t;//\u4fdd\u5b58x\u5230y\u95f4\u7684\u8ddd\u79bb\n\t\ta[x][++num[x]]=y;//\u5b58\u76f8\u90bb\u70b9,\u5728num\u539f\u6709\u7684\u57fa\u7840\u4e0a\u52a0\u4e00\uff0c\u5e76\u5c06y\u70b9\u5b58\u5165\n\t\ta[y][++num[y]]=x;//\u5b58\u76f8\u90bb\u70b9,\u5728num\u539f\u6709\u7684\u57fa\u7840\u4e0a\u52a0\u4e00\uff0c\u5e76\u5c06x\u70b9\u5b58\u5165\n\t\tw[y][x]=w[x][y];//\u56e0\u4e3a\u662f\u53cc\u5411\u8fde\u901a\u7684\uff0c\u6240\u4ee5\u4e24\u7267\u573a\u95f4\u7684\u8ddd\u79bb\u76f8\u7b49\n\t}\n\tmin1=0x7fffffff/3;//\u521d\u59cb\u5316min\n\tfor(i=1; i<=p; i++)\n\t{\n\t\tfor(j=1; j<=p; j++) dis[j]=0x7fffffff/3;\n\t\t//memset(team,0,sizeof(team));                         //\u961f\u5217\u6570\u7ec4\u521d\u59cb\u5316\n\t\t//memset(exist,false,sizeof(exist));                   //exist\u6807\u5fd7\u521d\u59cb\u5316\n\t\tdis[i]=0;\n\t\tteam[1]=i;\n\t\thead=0;\n\t\ttail=1;\n\t\texist[i]=true;      //\u8d77\u59cb\u70b9\u5165\u961f\n\t\twhile(head!=tail)\n\t\t{\n\t\t\thead++;\n\t\t\thead=((head-1)%1601)+1;                           //\u5faa\u73af\u961f\u5217\u5904\u7406\n\t\t\tu=team[head];\n\t\t\texist[u]=false;\n\t\t\tfor(j=1; j<=num[u]; j++) //num\u6570\u7ec4\u50a8\u5b58\u7684\u4e3a\u5f53\u524d\u70b9\u6240\u76f8\u90bb\u7684\u70b9\u7684\u4e2a\u6570\n\t\t\t\tif (dis[a[u][j]]>dis[u]+w[u][a[u][j]])\n\t\t\t\t{\n\t\t\t\t\tdis[a[u][j]]=dis[u]+w[u][a[u][j]];\n\t\t\t\t\tif (!exist[a[u][j]])//\u5982\u679c\u8be5\u70b9\u6ca1\u6709\u88ab\u62ff\u51fa\uff0c\u5c31\u8fdb\u884c\u5904\u7406\n\t\t\t\t\t{\n\t\t\t\t\t\ttail++;\n\t\t\t\t\t\ttail=((tail-1)%1601)+1;\n\t\t\t\t\t\tteam[tail]=a[u][j];\n\t\t\t\t\t\texist[a[u][j]]=true;//\u62ff\u51fa\u8be5\u6570\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\ttot=0;\n\t\tfor(j=1; j<=n; j++)\n\t\t\ttot+=dis[b[j]];//\u7d2f\u52a0\u8def\u7a0b\u5e76\u8ba1\u7b97\n\t\tif (tot<min1) min1=tot;//\u627e\u6700\u5c0f\n\t}\n\tcout<<min1;\n\treturn 0;\n}\n\n\n\n```\n# \u5b8c\u7f8e\u306e\u7ed3\u675f\n\uff08\u8fd9\u662f\u6211\u4e4b\u524d\u505a\u7684\u9898\uff0c\u73b0\u5728\u624d\u62ff\u51fa\u6765\u5199\u9898\u89e3\u5fd8\u5f97\u5dee\u4e0d\u591a\u4e86\uff0c\u5199\u7684\u4e0d\u597d\u8bf7\u591a\u591a\u8c05\u89e3QWQ\uff09\n\uff08\u770b\u7684\u8fd9\u4e48\u7d2f\uff0c\u4e0d\u70b9\u4e2a\u8d5e\u518d\u8d70\uff09",
        "postTime": 1555658405,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1828 \u3010\u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u662f\u4e00\u9053~~\u5f88\u7b80\u5355~~\u7684**\u56fe\u7684\u6700\u77ed\u8def**\u7684\u9898\u76ee\n\n\u56fe\u7684\u6700\u77ed\u8def\u5f84\u6709\u5f88\u591a\u7b97\u6cd5\uff0c\u4f46\u6709\u4e9b\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6709\u70b9\u9ad8\uff0c**Dijkstra**\u5982\u679c\u4e0d\u7ecf\u4f18\u5316\uff0c\u4e0d\u5149**\u4e0d\u80fd\u5904\u7406\u8d1f\u6743\u8fb9**\uff08\u5176\u5b9e\u4f18\u5316\u4e86\u4e5f\u4e0d\u884c\uff09\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f **$O(n^2)$**,**Floyd\u5c31\u66f4\u90a3\u5565\u4e86**\uff0c\u76f4\u63a5\u98d9\u5230\u4e86 **$O(n^3)$** \uff0c\u9762\u5bf9\u8fd9\u9898\u5982\u6b64\u5927\u89c4\u6a21\u7684\u6570\u636e\uff0c\u7edd\u5bf9\u59a5\u59a5\u5730\u628a\u4f60TLE\u54ed\uff0c\u8fd9\u4e5f\u4e0d\u884c\u90a3\u4e5f\u4e0d\u884c\uff0c\u90a3\u6211\u4eec\u5e94\u8be5\u7528\u4ec0\u4e48\u65b9\u6cd5\u5462\uff1f\uff1f\uff1f\n\n>\u6709\u7684\u7b97\u6cd5\u6d3b\u7740\uff0c\u5b83\u5df2\u7ecf\u6b7b\u4e86\uff1b\u6709\u7684\u7b97\u6cd5\u6b7b\u4e86\uff0c\u5b83\u8fd8\u6d3b\u7740\u3002\n\n>\t\t\t\t\t\t\t\u2014\u2014\u81e7\u514b\u5bb6\n\n>\t\t\uff08\u81e7\u514b\u5bb6\uff1a\u6211\u6ca1\u8bf4\u8fc7\u8fd9\u53e5\uff0c\u4e0d\u8fc7\u786e\u5b9e\u6709\u9053\u7406\uff09\n\nWell\uff0c\u8fd9\u4e2a\u9898\u53ef\u4ee5\u7528~~\u53f7\u79f0\u5df2\u7ecf\u201c\u9a7e\u9e64\u897f\u53bb\u201d~~\u7684**SPFA**\uff0c\u8fd9\u662f\u4e00\u4e2a\u76ee\u524d\u6765\u8bf4\u5f88\u201c**\u9ad8\u6548**\u201d\u7684\u6700\u77ed\u8def\u7b97\u6cd5\uff0c**\u6700\u574f\u4e5f\u53ea\u6709$O(nm)$(n\u4e2a\u9876\u70b9\uff0cM\u6761\u8fb9)\u7684\u65f6\u95f4\u590d\u6742\u5ea6**\uff0c\u5728\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u53ef\u4ee5\u5207\u6389\u597d\u591a\u9898\uff0c~~\u9047\u5230\u7279\u522b\u6bd2\u7624\u60f3\u5361SPFA\u7684\u51fa\u9898\u4eba\u9664\u5916~~\n\n\u4e0d\u4f1aSPFA\uff1f\u70b9\u51fb\u4e0b\u9762\u7684\u56fe\u7247\uff0c\u4e86\u89e3\u4e00\u4e0b\n\n[![](https://cdn.luogu.com.cn/upload/pic/26431.png)](https://www.luogu.com.cn/problem/P3371)\n\n\u90a3SPFA\u5230\u5e95\u5177\u4f53\u548b\u4e48\u5b9e\u73b0\u5462\uff1f\uff1f\uff1f\n\n1. \u9996\u5148\u6211\u4eec\u9700\u8981\u641e\u4e00\u4e2a**\u961f\u5217**\u51fa\u6765\uff0c\u628a**\u6e90\u70b9\u5165\u961f**\uff08SPFA\u548cDijkstra\u4e00\u6837\uff0c\u4e5f\u662f**\u5355\u6e90\u6700\u77ed\u8def\u5f84**\uff09\n2. get\u51fa**\u961f\u9996**\uff0c\u50cfDijkstra\u4e00\u6837\u628a\u5b83\u8fde\u63a5\u7684\u6bcf\u4e00\u4e2a\u9876\u70b9\u8fdb\u884c\u201c**\u677e\u5f1b**\u201d\u64cd\u4f5c\uff08\u4e5f\u5c31\u662f**\u628a\u8fd9\u4e2a\u70b9\u5f53\u6210\u201c\u4e2d\u8f6c\u70b9\u201d\uff0c\u770b\u770b\u901a\u8fc7\u8fd9\u4e2a\u9876\u70b9\u80fd\u4e0d\u80fd\u628a\u8def\u5f84\u53d8\u77ed** \uff0c ~~\u4e0d\u4f1aDijkstra\uff1f\u90a3\u4f60\u8fd8\u6765\u505a\u8fd9\u4e2a\u9898\u5e72\u5565\u54df\uff1f\uff1f\uff1f~~\uff09\n3. \u80fd\u53d8\u77ed\uff0c**\u201c\u677e\u5f1b\u201d\u6210\u529f\u540e\uff0c\u66f4\u65b0\u6e90\u70b9\u5230\u8fd9\u4e2a\u70b9\u7684\u8ddd\u79bb**\uff0c**\u5982\u679c\u8fd9\u4e2a\u70b9\u4e0d\u518d\u961f\u5217\u91cc\uff0c\u90a3\u5c31\u628a\u5b83\u52a0\u8fdb\u53bb**\n4. \u628a\u6240\u6709\u9876\u70b9\u201c\u677e\u5f1b\u201d\u4e00\u904d\u540e\uff0c\u961f\u9996\u7684\u201c\u4efb\u52a1\u201d\u5c31\u201c\u5b8c\u6210\u201d\u4e86\uff0c\u628a**\u961f\u9996\u51fa\u961f**\uff0c**\u5982\u679c\u961f\u5217\u7a7a\u4e86\u5c31\u5b8c\u4e8b\u4e86\uff0c\u5426\u5219\u5c31\u6267\u884c\u521a\u624d\u7684\u64cd\u4f5c**\uff08\u4e5f\u5c31\u662f\u7b2c2\u30013\u6b65\uff09\n\n\u50cfDijkstra\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a**dis\u6570\u7ec4**\u6765\u5b58**\u6e90\u70b9\u5230\u6bcf\u4e2a\u70b9\u7684\u8ddd\u79bb**\uff0c\u4ee5\u53ca\u4e00\u4e2a**vis**\u6570\u7ec4\u6765\u770b\u770b**\u6bcf\u4e2a\u9876\u70b9\u662f\u5426\u5728\u961f\u5217\u4e2d**\n\n\uff08\u8bdd\u8bf4\u4f60\u4eec\u6709\u6ca1\u6709\u53d1\u73b0\u8fd9\u4e2aSPFA\u8ddf\u6211\u4eec\u7684\u5e7f\u641c\u5927\u6cd5bfs\u5f88\u50cf\u5462~\uff1f\uff09\n\n\u63a5\u4e0b\u6765\u7ed9\u5927\u5bb6\u6765\u4e2a\u597d\u7406\u89e3\u7684**\u90bb\u63a5\u77e9\u9635**\u7248\u7684SPFA\uff0c\u5927\u5bb6\u6765\u5b66\u4e60\u4e00\u4e0b\uff01\n```cpp\n//\u4ee3\u7801\u4e2d\uff0cs\u4e3a\u6e90\u70b9\uff0ce\u4e3a\u56fe\u7684\u90bb\u63a5\u77e9\u9635\nint inf=1e9; //\u628ainf\u5f04\u6210\u4e00\u4e2a\u5f88\u5927\u7684\u6570\nfor(int i=1;i<=n;i++) //\u521d\u59cb\u5316dis\u6570\u7ec4\u4e3ainf\n\tdis[i]=inf;  \n\tdis[s]=0;  //\u81ea\u5df1\u5230\u81ea\u5df1\u7684\u8ddd\u79bb\u5f53\u7136\u5c31\u662f0\u5566\uff01\n\tq.push(s);  //\u961f\u9996\u5165\u961f\uff0c\u6807\u8bb0\n\tvis[s]=1;   \n\twhile(!q.empty()){//\u961f\u5217\u4e0d\u7a7a\u4e00\u76f4\u64cd\u4f5c\n\t\tint fro=q.front();  //\u53d6\u961f\u9996\n\t\tfor(int i=1;i<=n;i++){  //\u8fde\u63a5\u7684\u6bcf\u4e2a\u9876\u70b9\u8fdb\u884c\u64cd\u4f5c\n\t\t\tif(e[fro][i]&&dis[fro]+e[fro][i]<dis[i]){  //\u5982\u679c\u6709\u8fb9\uff0c\u5e76\u4e14\u901a\u8fc7\u8fd9\u6761\u8fb9\u8def\u5f84\u8fd8\u80fd\u53d8\u77ed\uff0c\u90a3\u5c31\u201c\u677e\u5f1b\u201d\u6210\u529f\n\t\t\t\tdis[i]=dis[fro]+e[fro][i]; //dis\u6570\u7ec4\u66f4\u65b0\n\t\t\t\tif(!vis[i]){  //\u5982\u679c\u8fd9\u4e2a\u9876\u70b9\u4e0d\u5728\u961f\u5217\u4e2d\n\t\t\t\t\tq.push(i);\t//\u90a3\u5c31\u5165\u961f\u6807\u8bb0\u5457\uff01\n\t\t\t\t\tvis[i]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tq.pop();   //\u961f\u9996\u51fa\u961f\uff0c\u6ce8\u610f\u6807\u8bb0\u4e5f\u8981\u53d6\u6d88\n\t\tvis[fro]=0;\n\t}\n```\n\u5f53\u7136\u8fd9\u9898\u80af\u5b9a\u7206\u90bb\u63a5\u77e9\u9635\uff0c\u90a3\u56fe\u7684\u5b58\u50a8\u4e5f\u8981\u6539\u4e00\u4e0b\uff1a\u8fd9\u91cc\u6211\u5f3a\u70c8\u63a8\u8350\u4e00\u4e2a\u53c8\u597d\u7406\u89e3\u53c8\u597d\u7528\u7684\u65b9\u6cd5\uff1a**vector\u66b4\u529b\u5b58\u56fe\uff01**\uff08vector\u5927\u5bb6\u90fd\u4f1a\u5427\uff09\n\n\u987e\u540d\u601d\u4e49\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u9996\u5148\u8981**\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53vector\uff08\u4e3a\u4e86\u8282\u7701\u7a7a\u95f4\uff0c\u54b1\u7528vector\u6765\u5b58\uff09\u5b58\u50a8\u6bcf\u4e2a\u8fb9\u7684\u8d77\u70b9\u548c\u7ec8\u70b9**\uff0c\u7136\u540e**\u7528\u4e00\u4e2a\u4e8c\u7ef4vector\uff08\u4e5f\u5c31\u662f\u4e00\u4e2avector\u6570\u7ec4\uff09\u5b58\u50a8\u8fb9\u7684\u4fe1\u606f**\u3002\n\n\u8fd9\u4e2a\u5b58\u50a8\u65b9\u6cd5\u53ef\u80fd\u6709\u70b9\u96be\u7406\u89e3\uff0c\u4e0d\u8fc7\u5176\u5b9e\u4e5f\u6ca1\u90a3\u4e48\u96be\uff1a**\u6211\u4eec\u7528$e$[$a$][$b$]=$c$\uff0c\u6765\u8868\u793a\u9876\u70b9$a$\u7684\u7b2c$b$\u6761\u8fb9\u662f$c$\u53f7\u8fb9**\u3002\n\n```cpp\nstruct edge{\n\tint u,v,w; //\u8bb0\u5f55\u8fb9\u7684\u7ed3\u6784\u4f53\uff0cu\u8d77\u70b9\uff0cv\u7ec8\u70b9\uff0cw\u662f\u8fb9\u6743\u503c\n};\nvector <int> e[100001];  //\u5b58\u5177\u4f53\u4fe1\u606f\u7684\u4e8c\u7ef4vector\nvector <edge> s;  //\u5b58\u8fb9\u7684\u7ed3\u6784\u4f53vector\u6570\u7ec4\n\u2014\u2014\u2014\u2014\u2014\u2014\u6211\u2014\u2014\u662f\u2014\u2014\u5206\u2014\u2014\u5272\u2014\u2014\u7ebf\u2014\u2014\u2014\u2014\u2014\u2014\n//n\u4e2a\u9876\u70b9\uff0cm\u6761\u8fb9\uff0cs\u4e3a\u7ed3\u6784\u4f53vector\uff0ce\u4e3a\u4e8c\u7ef4vector\n\tfor(int i=0;i<m;i++){ //m\u6761\u8fb9\n\t\tint uu,vv,ww;  \n\t\tcin>>uu>>vv;  \n\t\ts.push_back((edge){uu,vv,ww}); //\u521d\u59cb\u5316\u5b58\u8fb9\u7684s\u6570\u7ec4  \n\t}\n\tfor(int i=0;i<m;i++)\n\t\te[s[i].u].push_back(i); \n\t//\u521d\u59cb\u5316e\u6570\u7ec4\uff0c\u5728e[s[i].u]\uff08\u4e5f\u5c31\u662fi\u53f7\u8fb9\u7684\u8d77\u70b9s[i].u\u8fde\u63a5\u7684\u8fb9\u7684\u6570\u7ec4\uff09\u4e2d\u5b58\u5165i\u53f7\u8fb9\n```\n\n\n\u5982\u679c\u4f60\u8fd8\u662f\u4e00\u8138\u61f5\u5708\uff0c\u3002\u8bf7\u770b[\u8fd9\u91cc](https://www.luogu.com.cn/blog/ravenclawyangrunze/solution-p5318)\uff0c\u91cc\u9762\u6709\u5bf9vector\u66b4\u529b\u5b58\u56fe\u6cd5\u7684\u8be6\u7ec6\u89e3\u91ca\uff0c\u8fd8\u6709\u4e00\u9053\u4f18\u79c0\u7684\u4f8b\u9898\n\n\u5f53\u7136\uff0c\u8fd9\u4e2a\u9898\u662f\u4e2a**\u65e0\u5411\u56fe**\uff0c\u6240\u4ee5\u8981\u518d\u4fee\u6539\u4e00\u4e0b\u4e0b\uff0c\u6bcf\u6b21\u8981\u5b58**\u8d77\u70b9\u548c\u7ec8\u70b9\u6b63\u597d\u76f8\u53cd\u4e24\u6761\u8fb9**\uff0c\u8fd8\u8981\u6ce8\u610f\u8fb9\u7684\u7f16\u53f7\n\n\u4f1a\u4e86\u8fd9\u4fe9\u4e1c\u897f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6765\u7814\u7a76\u8fd9\u4e2a\u9898\u5566\uff01\u61c2\u4e86SPFA\u7b97\u6cd5\u548cvector\u66b4\u529b\u5b58\u56fe\uff0c\u540e\u9762\u7684\u5de5\u4f5c\u7b80\u76f4\u5c31\u662f\u5c0f\u95ee\u9898\u4e86\uff1a\u76f4\u63a5**\u628a\u6bcf\u4e2a\u9876\u70b9\u90fd\u7ed9SPFA\u4e00\u904d\u6c42\u5230\u5404\u4e2a\u7267\u573a\u7684\u6700\u77ed\u8ddd\u79bb**\uff0c\u518d**\u628a\u5976\u725b\u6240\u5728\u7684\u7267\u573a\u7684\u8ddd\u79bb\u52a0\u8d77\u6765\uff0c\u6bd4\u8f83\uff0c\u627e\u4e2a\u6700\u5c0f\u7684**\uff0c\u5c31\u80fd\u5b8c\u7f8eAC\u4e86\uff01\n\n\u6700\u540e\u5c31\u662f\u653e\u4ee3\u7801\u7684\u65f6\u95f4\u5566\uff01**\u6e29\u99a8\u63d0\u793a\uff1a\u4e00\u5b9a\u8981\u6ce8\u610f\u7ec6\u8282\uff01\uff01\uff01**\n\n```cpp\n#include<iostream>\n#include<queue>\n#include<vector>\n#include<cstring>\n#define inf 2147483247   //\u6211\u4e5f\u6765#define\u4e00\u53d1\nusing namespace std;   \nstruct edge{     //vector\u66b4\u529b\u5b58\u56fe\u7528\u7684\u51c6\u5907\u5de5\u4f5c\n\tint u,v,w;\n};\nvector <edge> s;   \nvector <int> e[1455];\nint n,p,c;     //\u9898\u610f\uff1an\u5976\u725b\u6570\uff0cp\u7267\u573a\u6570\uff0cc\u9053\u8def\u6570\nint cow[505],dis[805];   //dis\u662f\u4e2a\u5565\u5c31\u4e0d\u89e3\u91ca\u4e86\uff0ccow\u662f\u6bcf\u4e2a\u5976\u725b\u6240\u5728\u7684\u7267\u573a\nbool vis[805];  //vis\u5c31\u662f\u5224\u65ad\u662f\u5426\u5728\u961f\u5217\u4e2d\u90a3\u4e2a\nvoid spfa(int k){  //\u56e0\u4e3a\u540e\u9762\u8981\u591a\u6b21\u641eSPFA\uff0c\u6240\u4ee5\u6211\u5c31\u76f4\u63a5\u628a\u5b83\u5f04\u6210\u51fd\u6570\u5566\uff0ck\u662f\u6e90\u70b9\u54e6\uff01\n\tqueue <int> q;  //\u540e\u9762\u5c31\u662fSPFA\u7684\u677f\u5b50\u4e86\n\tfor(int i=1;i<=p;i++)//dis\u6570\u7ec4\u521d\u59cb\u5316\n\tdis[i]=inf;\n\tdis[k]=0;\n\tq.push(k);\n\tvis[k]=1;\n\twhile(!q.empty()){\n\t\tint fro=q.front()  //\u53d6\u961f\u9996;\n\t\tfor(int i=0;i<e[fro].size();i++){\n\t\t\tint point=s[e[fro][i]].v;  //\u6ce8\u610f\u8fde\u63a5\u9876\u70b9\u548c\u7f16\u7684\u6743\u503c\u7528vector\u66b4\u529b\u5b58\u56fe\u600e\u4e48\u8868\u793a\n\t\t\tint cost=s[e[fro][i]].w;\n\t\t\tif(dis[fro]+cost<dis[point]){//\u201c\u677e\u5f1b\u201d\u64cd\u4f5c\n\t\t\t\tdis[point]=dis[fro]+cost;//dis\u6570\u7ec4\u548c\u961f\u5217\u7684\u66f4\u65b0\n\t\t\t\tif(!vis[point]){  \n\t\t\t\t\tq.push(point);\n\t\t\t\t\tvis[point]=1;\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tq.pop();   //\u961f\u9996\u51fa\u961f\uff0c\u62b9\u6d88\u6807\u8bb0\n\t\tvis[fro]=0;\n\t}\n}\nint main(){\n\tcin>>n>>p>>c;  \n\tfor(int i=1;i<=n;i++)  //\u8f93\u5165\u5976\u725b\u4fe1\u606f\n\tcin>>cow[i];\n\tfor(int i=0;i<2*c-1;i+=2){  //vector\u66b4\u529b\u5b58\u56fe\n\t\tint uu,vv,ww;\n\t\tcin>>uu>>vv>>ww;\n\t    s.push_back((edge){uu,vv,ww}); \n\t    s.push_back((edge){vv,uu,ww});//\u56e0\u4e3a\u662f\u65e0\u5411\u56fe\u561b\uff0c\u6240\u4ee5\u8981\u5bf8\u4e24\u6761\u8fb9\u7684\uff0c\u6ce8\u610f\u5faa\u73af\u4e2di\u7684\u63a7\u5236\n\t\te[uu].push_back(i); \n\t\te[vv].push_back(i+1); \n\t}\n\tint ans=inf;  //ans\u56e0\u4e3a\u8981\u627e\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u8981\u521d\u59cb\u5316\u4e2a\u5927\u7684\n\tfor(int i=1;i<=p;i++){  //\u6bcf\u4e2a\u7267\u573a\u90fd\u6765\u4e00\u6ce2\n\t\tint wyxakioi=0;  //\u8bb0\u5f55\u4ee5\u7267\u573ai\u4e3a\u6e90\u70b9\u65f6\u7684\u6700\u77ed\u8def\u5f84\u957f\uff08\u4e0d\u8981\u5410\u69fd\u53d8\u91cf\u540d\uff09\n\t\tspfa(i);  //S~!~P~!~F~!~A!~\n\t\tfor(int j=1;j<=n;j++)\n\t\t\twyxakioi+=dis[cow[j]];  //\u7edf\u8ba1\u6bcf\u4e2a\u5976\u725b\u5230\u8fd9\u4e2a\u7267\u573a\u7684\u6700\u77ed\u8ddd\u79bb\u548c\n\t\tif(ans>wyxakioi)ans=wyxakioi; //ans\u66f4\u65b0\n\t}\n\tcout<<ans;  \n\treturn 0;  //\u5b8c\u4e8b\u5566\uff01\n}\n```\n \u6700\u540e\u7ed9\u5927\u5bb6\u4e00\u4e2a\u6e29\u99a8\u5c0ftip\uff1a\u50cf\u54b1\u4eec\u8fd9\u4e9b\u521a\u5b66SPFA\uff08\u6216\u8005\u5176\u4ed6\u4e1c\u897f\uff09\u7684\u840c\u65b0\uff0c\u4e0d\u8981\u7f16\u5b8c\u4e00\u904d\uff0c\u540e\u9762\u7684\u9898\u5c31\u4e00\u76f4\u590d\u5236\u7c98\u8d34\uff0c\u591a\u6253\u51e0\u904d\uff0c\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u7b97\u6cd5\u6216\u6570\u636e\u7ed3\u6784\u6709\u66f4\u6df1\u7684\u7406\u89e3\uff0c\u76f8\u4fe1\u6211\uff0c\u6ca1\u9519\u7684\uff01\n\n>   ##### \u624b\u6253\u4ee3\u7801\uff0c\u662f\u4e00\u79cd\u4fe1\u4ef0\u3002\n\n>   #####  \t\t \u2014\u2014vectorwyx\n",
        "postTime": 1579081690,
        "uid": 239405,
        "name": "yangrunze",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1828 \u3010\u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter\u3011"
    },
    {
        "content": "\u6211\u53ea\u662f\u4e00\u540d\u88ab\u5751\u4e86\u7684\u849f\u84bb\uff0c\u672c\u7bc7\u9898\u89e3\u53ea\u662f\u4e3a\u4e86\u63d0\u9192\u548c\u6211\u4e00\u6837\u7684\u849f\u84bbOIer\u4eec\u6211\u4e0a\u8fc7\u7684\u5f53\uff0c\u8fdb\u8fc7\u7684\u5751\n\n\u9996\u5148\uff0c\u6211\u91c7\u7528\u7684\u662fSPFA\u7b97\u6cd5\uff0c\u901f\u5ea6\u8d85\u5feb\u6709\u6ca1\u6709\uff0c\u4f46\u662f\uff0c\u6709\u5751\uff0c\u50a8\u5b58\u56fe\u6211\u624d\u7528\u7684\u662f\u94fe\u5f0f\u524d\u5411\u661f\uff0c\u4f46\u662f\u8bfb\u5165\u7684\u65f6\u5019\u5c31\u6709\u5751\u4e86\u3002\u9644\u4ee3\u7801\uff1a\n\n```cpp\n    for(int i = 1;i<=C;i++){\n        int A,B,D;\n        cin>>A>>B>>D;\n        add(A,B,D);\n        add(B,A,D);\n    }\n```\n\n\u5728\u6dfb\u52a0\u8fb9\u7684\u65f6\u5019\u8981\u6ce8\u610f\u8fd9\u662f\u4e00\u4e2a**\u65e0\u5411\u56fe**\u4e5f\u662f\u8bf4\u6dfb\u52a0\u7684\u8fb9\u5fc5\u987b\u662f**\u53cc\u5411\u7684**A\u5230B\uff0c\u90a3\u4e48B\u4e5f\u4e00\u5b9a\u8fde\u540cA\uff01\n\n\n\u5176\u6b21\u5c31\u662f\u5185\u5b58\u5fc5\u987b\u5f002\u500d\u4ee5\u4e0a\uff0c\u6211\u4e00\u5f00\u59cb\u5f00\u5c0f\u4e86\uff0c\u5bfc\u81f4\u53ea\u670960\u5206\uff0c\u4e00\u4e2aTLE\uff0c3\u4e2aWA\uff0c\u7b2c\u4e8c\u6b21\u63d0\u4ea4\u7684\u65f6\u5019\uff0c\u4e00\u4e2aWa\u53d8\u6210\u4e86RE\uff0c\u8bf4\u660e\u5185\u5b58\u6709\u8d8a\u754c\u8bbf\u95ee\uff0c\u7b2c\u4e8c\u6b21\u8fd0\u6c14\u4e0d\u597d\uff0c\u8bbf\u95ee\u5230\u4e86\u7cfb\u7edf\u5173\u952e\u5185\u5b58\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u5751\u5c31\u662f\u5173\u4e8e\u5976\u725b\u8d70\u7684\u8def\u5f84\u548c\uff0c\u4e0d\u80fd\u5728SPFA\u7684\u5faa\u73af\u91cc\u9762\u7b97\uff0c\u5426\u5219\u5f53\u4e00\u4e2a\u7267\u573a\u7684\u5976\u725b\u6570\u4e3a0\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u548c\u4e3a0\uff0c\u90a3\u4e48\u66f4\u65b0\u5230dis\u7684\u65f6\u5019\uff0c\u6700\u5c0f\u503c\u5c31\u4f1a\u53d8\u62100\uff0c\u4e0e\u9898\u610f\u4e0d\u7b26\u3002\u5e94\u8be5\u7b97\u51fa\u6700\u77ed\u8def\u5f84\uff0c\u518d\u4e58\u4ee5\u5976\u725b\u6570\u91cf\u3002\u9644\u4e0aAC\u4ee3\u7801\n\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <queue>\nusing namespace std;\nstruct e{\n    int next,to,w;\n}Edges[14510];\nint a[8010];//\u7267\u573a\u6240\u62e5\u6709\u7684\u5976\u725b\u6570\nint head[8001];\nint num_cnt = 0;\nvoid add(int from,int to,int w){\n    Edges[++num_cnt].next = head[from];\n    Edges[num_cnt].to = to;\n    Edges[num_cnt].w = w;\n    head[from] = num_cnt;\n}\nint main() {\n    int N,P,C;\n    ios::sync_with_stdio(false);\n    cin>>N>>P>>C;\n    for(int i = 1;i<=N;i++){\n        int id;\n        cin>>id;\n        a[id]++;\n    }\n    for(int i = 1;i<=C;i++){\n        int A,B,D;\n        cin>>A>>B>>D;\n        add(A,B,D);\n        add(B,A,D);\n    }\n    int dis[8001];\n    bool visited[8001];\n    int minn = 0x7FFFFFF;\n    for(int s = 1;s<=P;s++){\n        memset(dis,0x7f, sizeof(dis));\n        memset(visited,false, sizeof(visited));\n        dis[s] = 0;\n        visited[s] = true;\n        queue<int> q;\n        q.push(s);\n        while(!q.empty()){\n            int t = q.front();\n            q.pop();\n            visited[t] = false;\n            for(int j = head[t];j!=0;j=Edges[j].next){\n                int u = Edges[j].to;\n                if(dis[u]>dis[t]+Edges[j].w){\n                    dis[u]=dis[t]+Edges[j].w;\n                    if(!visited[u]){\n                        q.push(u);\n                        visited[u] = true;\n                    }\n                }\n            }\n        }\n        int sum = 0;\n        for(int i = 1;i<=P;i++){\n            sum+=dis[i]*a[i];\n        }\n        minn = minn>sum?sum:minn;\n    }\n    cout<<minn;\n    return 0;\n}\n\n```",
        "postTime": 1532747760,
        "uid": 61493,
        "name": "BeyondStars",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1828 \u3010\u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter\u3011"
    },
    {
        "content": "\u5728\u9898\u89e3\u4e2d\u770b\u5230\u6709\u5927\u4f6c\u8bf4\u88f8\u7684$dijkstra$\u4f1a$T$\uff0c\u4e8e\u662f\u672c\u849f\u84bb\u6765\u8865\u4e00\u4e2a\u5806\u4f18\u5316\u52a0\u524d\u5411\u661f\u5b58\u8fb9\u7684$dijkstra$.\n\n\u601d\u8def\u6bd4\u8f83\u663e\u7136\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u90fd\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff0c\u7d2f\u8ba1\u8ddd\u79bb\u548c\uff0c\u6c42\u6700\u5c0f\u503c\u3002\n\n\u5b9e\u73b0\u7ec6\u8282\uff1a\u5bf9\u4e8e$dijkstra$\u6211\u4eec\u53ef\u4ee5\u4f20\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3a\u8d77\u70b9\u3002\u5806\u53ef\u4ee5\u7528$STL$\u81ea\u5e26\u7684\u4f18\u5148\u961f\u5217\u3002\u4ee3\u7801\u4e2d\u4f1a\u6709\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684$struct$ $node$\u7ed3\u6784\u4f53\u3002\n\n\u6bcf\u6b21$dijkstra$\u7684\u65f6\u5019\uff0c\u521d\u59cb\u5316\u4e00\u4e0b\uff0c\u4f20\u5165\u8d77\u70b9\uff0c\u66f4\u65b0\u5b8c$dis$\u6570\u7ec4\u540e\u7d2f\u8ba1\u7b54\u6848\u5373\u53ef\u3002\u4e0d\u9700\u8981\u7528\u90bb\u63a5\u77e9\u9635\u3002\n\n\u6ce8\u610f\u524d\u5411\u661f\u5f00\u4e24\u500d\u7a7a\u95f4\uff0c\u6570\u7ec4\u522b\u5c11\u5f00\u3002\n\n\u5b9e\u73b0\u8fc7\u7a0b\u4e0e\u666e\u901a$dijkstra$\u7c7b\u4f3c\uff0c\u4f46\u662f\u7528\u5806\u7ef4\u62a4$max/min$\u663e\u7136\u8981\u66f4\u4f18\u3002\u666e\u901a\u7684$dijkstra$\u53ef\u80fd\u4f1a$TLE$\uff0c\u5806\u4f18\u5316\u8fd8\u662f\u6709\u5fc5\u8981\u7684\u3002\n\n$Code:$\n```cpp\n#include<cstdio>\n#include<queue>//\u961f\u5217\u5934\u6587\u4ef6 \n#include<iostream>\n#include<cstring>\n#define inf 2147483647\nusing namespace std;\nint vis[500000],n,m,p;\nint dis[500000],tot,ans=inf;\nint head[500000],sum;\nint id[500000];\nstruct edge{\n\tint next,to,dis;\n}e[1000000];\nstruct node{\n\tint dis,pos;\n\tbool operator <(const node&x)const{//\u91cd\u8f7d\u8fd0\u7b97\u7b26 \n\t\treturn x.dis<dis;\n\t}\n};\npriority_queue<node>q;\ninline void add(int x,int y,int w){//\u52a0\u8fb9 \n\te[++tot].to=y;\n\te[tot].next=head[x];\n\thead[x]=tot;\n\te[tot].dis=w;\n}\nvoid dijkstra(int s){//\u5806\u4f18\u5316dijkstra \n\tfor(int i=1;i<=p;++i)dis[i]=inf;\n\tmemset(vis,0,sizeof(vis));\n\tdis[s]=0,q.push((node){0,s});\n\twhile(!q.empty()){\n\t\tnode tmp=q.top();\n\t\tq.pop();\n\t\tint x=tmp.pos;\n\t\tif(vis[x])continue;\n\t\tvis[x]=1;\n\t\tfor(int i=head[x];i;i=e[i].next){\n\t\t\tint y=e[i].to;\n\t\t\tif(dis[y]>dis[x]+e[i].dis){\n\t\t\t\tdis[y]=dis[x]+e[i].dis;\n\t\t\t\tif(!vis[y])q.push((node){dis[y],y});\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&p,&m);\n\tfor(int i=1;i<=n;++i)scanf(\"%d\",&id[i]);\n\tfor(int i=1;i<=m;++i){\n\t\tint _,__,___;//\u76ae\u4e00\u4e0b\u5f88\u5f00\u5fc3qwq \n\t\tscanf(\"%d%d%d\",&_,&__,&___);\n\t\tadd(_,__,___);add(__,_,___); \n\t}\n\tfor(int i=1;i<=p;++i){\n\t\tdijkstra(i);\n\t\tsum=0;\n\t\tfor(int j=1;j<=n;++j)sum+=dis[id[j]];\n\t\tans=min(ans,sum);\n\t}printf(\"%d\\n\",ans);\n\treturn 0;\n} \n```\n",
        "postTime": 1563409384,
        "uid": 128591,
        "name": "Refined_heart",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1828 \u3010\u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter\u3011"
    },
    {
        "content": "\u6211\u6bd4\u8f83\u559c\u6b22\u6700\u4f18\u89e3\uff0c\u6240\u4ee5\u6211\u7528\u4e86SPFA\u6765\u505a\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nstruct node\n{\n\tint x,y,d,next;//\u8bb0\u5f55\u6bcf\u4e00\u6761\u8fb9 \n}a[5100];int len,last[210000];\ninline void ins(int x,int y,int d)//\u5efa\u7acb\u4e00\u6761\u8fb9 \n{\n\tlen++;\n\ta[len].x=x;a[len].y=y;a[len].d=d;\n\ta[len].next=last[x];last[x]=len;\n}\nint n,p,m;\nint f[210000];//f\u8868\u793a\u5976\u725b\u6240\u5728\u7684\u70b9 \nint head,tail,list[210000],d[210000];//\u5bbd\u641c\u65f6\u9700\u8981\u7528\u5230\u7684\uff0cd\u8868\u793a\u8fd9\u4e2a\u70b9\u5230\u8d77\u70b9\u7684\u6700\u5c0f\u8ddd\u79bb \nbool v[210000];//v\u8868\u793a\u8fd9\u4e2a\u70b9\u662f\u5426\u7528\u8fc7 \nint main()\n{\n\tint i,j,x,y,c,k;\n\tscanf(\"%d%d%d\",&n,&p,&m);\n\tfor(i=1;i<=n;i++) scanf(\"%d\",&f[i]);//\u8f93\u5165 \n\tfor(i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&c);//\u8f93\u5165\u5e76\u4e14\u5efa\u8fb9 \n\t\tins(x,y,c);ins(y,x,c);\n\t}\n\tint minn=2147483647,s;//\u628a\u6700\u5c0f\u503c\u53d8\u5f97\u65e0\u9650\u5927 \n\tfor(i=1;i<=p;i++)//\u8fd9\u91cc\u8981\u6ce8\u610f\u4e86\uff0c\u662f\u679a\u4e3e\u6240\u6709\u7684\u70b9\uff0c\u800c\u4e0d\u662f\u5355\u5355\u5976\u725b\u6240\u5728\u7684\u70b9 \n\t{\n\t\tmemset(d,127,sizeof(d));d[i]=0;//\u81ea\u5df1\u5230\u81ea\u5df1\u7684\u8ddd\u79bb\u80af\u5b9a\u662f0 \n\t\tmemset(v,true,sizeof(v));v[i]=false;//\u81ea\u5df1\u4e0d\u80fd\u518d\u8d70\u5230\u81ea\u5df1 \n\t\thead=1;tail=2;list[1]=i;\n\t\twhile(head!=tail)\n\t\t{\n\t\t\tx=list[head];\n\t\t\tfor(k=last[x];k;k=a[k].next)\n\t\t\t{\n\t\t\t\ty=a[k].y;\n\t\t\t\tif(d[y]>d[x]+a[k].d)//\u5982\u679c\u6709\u66f4\u4f18\u503c\uff0c\u5c31\u53d6\u66f4\u4f18\u503c\n\t\t\t\t{\n\t\t\t\t\td[y]=d[x]+a[k].d;\n\t\t\t\t\tif(v[y]==true)//\u5982\u679c\u8fd9\u4e00\u4e2a\u70b9\u8fd8\u6ca1\u6709\u627e\u8fc7 \n\t\t\t\t\t{\n\t\t\t\t\t\tv[y]=false;//\u628a\u5b83\u53d8\u4e3a\u627e\u8fc7 \n\t\t\t\t\t\tlist[tail]=y;//\u5c3e+1 \n\t\t\t\t\t\ttail++;if(tail==p+1) tail=1;//\u8282\u7701\u7a7a\u95f4 \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tv[x]=true;//\u628a\u8fd9\u4e2a\u70b9\u9001\u51fa\u961f\u5217 \n\t\t\thead++;if(head==p+1) head=1;\n\t\t}\n\t\ts=0;\n\t\tfor(j=1;j<=n;j++) s=s+d[f[j]];\n\t\tminn=min(minn,s);//\u53d6\u503c \n\t}\n\tprintf(\"%d\\n\",minn);//\u8f93\u51fa \n\treturn 0;\n}\n```",
        "postTime": 1525353742,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1828 \u3010\u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6ca1\u6709\u5728Pascal\u7528Floyd\u7684\uff0c\u90a3\u6211\u6765\u53d1\u4e00\u9053\u3002\n\u7a0b\u5e8f\u6765\u4e86\uff1a\n\nvar\n\n        n,p,c1,i,j,d,x,y,min,u,sum,k,b:longint;\n        a:array[0..1500,0..1500] of longint;\n        c:array[1..1000] of longint;\nbegin\n\n        readln(n,p,c1);\n        for i:=1 to n do\n        begin\n                readln(b);\n                inc(c[b]);// \u5728b\u53f7\u5976\u725b\u573a\u7684\u5976\u725b\u6570\n        end;\n        for i:=1 to c1 do\n        begin\n                for j:=1 to c1 do\n                begin\n                        if i=j then a[i,j]:=0\n                        else\n                        a[i,j]:=100000000;//\u5982\u679c\u8bbemaxlongint\u4f1a\u7206\u7684\n                end;\n        end;//\u521d\u59cb\u5316\n        for i:=1 to c1 do\n        begin\n                readln(x,y,d);\n                a[x,y]:=d;\n                a[y,x]:=d;//\u53cc\u5411\n        end;\n        min:=100000000;\n        for k:=1 to p do\n        begin\n                for i:=1 to p do\n                begin\n                        for j:=1 to i do//\u53ea\u7528\u7b97\u4e00\u534a\n                        begin\n                                if a[i,j]>a[i,k]+a[k,j] then\n                                begin\n                                        a[i,j]:=a[i,k]+a[k,j];\n                                        a[j,i]:=a[i,j];/\u53cc\u5411\n                                end;\n                        end;\n                end;\n        end;\n        for i:=1 to p do\n        begin\n                sum:=0;//\u6bcf\u6b21\u90fd\u8981\u6e050\n                for j:=1 to p do\n                begin\n                        sum:=sum+a[i,j]*c[j];\n                end;\n                if sum<min then\u6c42\u6700\u5c0f\u503c\n                        min:=sum;\n        end;\n        writeln(min);//\u8f93\u51fa\nend.//\u7ed3\u675f",
        "postTime": 1559712204,
        "uid": 110685,
        "name": "James0602",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1828 \u3010\u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter\u3011"
    },
    {
        "content": "SPFA\u6a21\u677f\u9898\u3002\u679a\u4e3e\u653e\u7f6e\u7cd6\u679c\u7684\u4f4d\u7f6e\u3002\n\n```cpp\n/*\nID: ylx14274\nPROG: butter\nLANG: C++     \n*/\n#include<set>  \n#include<map>  \n#include<list>  \n#include<queue>  \n#include<stack>  \n#include<string>  \n#include<math.h>  \n#include<time.h>  \n#include<vector>  \n#include<bitset>  \n#include<memory>  \n#include<utility>  \n#include<stdio.h>  \n#include<sstream>  \n#include<iostream>  \n#include<stdlib.h>  \n#include<string.h>  \n#include<algorithm> \n#define LL unsigned long long   \nusing namespace std;\nint n,p,c;//n:\u5976\u725b\u6570\uff0cp:\u7267\u573a\u6570\uff0cc:\u9053\u8def\u6570 \nint x,a[801];//\u5b58\u6bcf\u4e2a\u70b9\u5976\u725b\u6570\u91cf\u7684 \nint ai,bi,ci,i;//\u8bfb\u5165\u7528\u7684\u548c\u5faa\u73af\u63a7\u5236\u53d8\u91cf \nint l,r,sum;//l:\u961f\u9996\uff0cr\uff1a\u961f\u5c3e\uff0csum\uff1a\u8d70\u7684\u603b\u8ddd\u79bb \nint d[801];//\u5b58\u6700\u77ed\u8def\u7684\u3002 \nint flag[801];//\u6807\u8bb0\u662f\u5426\u5728\u961f\u5217\u4e2d\u7684 \nstruct haha\n{\n    int n;//\u5b58\u7f16\u53f7 \n    int s;//\u5b58\u8fb9\u6743\u503c \n}f[801][800];\nint s[801];//s[i]\u8868\u793a\u70b9i\u8fde\u7684\u8fb9\u7684\u6761\u6570 \nint q[1600];\nvoid in(int u,int v,int w)//\u63d2\u5165\n{\n    s[u]++;\n    s[v]++;\n    f[u][s[u]].n=v;//\u4f2a\u90bb\u63a5\u8868\uff0c\u5c06\u8fb9\u5b58\u8fdb\u53bb \n    f[u][s[u]].s=w;\n    f[v][s[v]].n=u;//\u53cc\u5411\u8fb9\u2026\u2026 \n    f[v][s[v]].s=w;\n}\nint main() \n{\n    freopen(\"butter.in\",\"r\",stdin);\n    freopen(\"butter.out\",\"w\",stdout); \n    scanf(\"%d%d%d\",&n,&p,&c);\n    for (i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&x);//\u8bfb\u5165\u725b\u7684\u4f4d\u7f6e \n        a[x]++;//\u6b64\u4f4d\u7f6e\u7684\u725b\u6570\u91cf+1 \n    }\n    for (i=1;i<=c;i++)\n    {\n        scanf(\"%d%d%d\",&ai,&bi,&ci);//\u8bfb\u5165\u8fb9 \n        in(ai,bi,ci);//\u5b58\u8d77\u6765 \n    }\n    int Min=2333333;//min\u521d\u59cb\u5316 \n    for (int ii=1;ii<=p;ii++)//\u679a\u4e3e\u7cd6\u653e\u7f6e\u7684\u4f4d\u7f6e \n    {\n        x=ii;//\u63d0\u51fa\u6765 \n        for (i=1;i<=p;i++) \n        {\n            d[i]=23333;\n            flag[i]=0;\n        }//\u521d\u59cb\u5316\n        d[x]=0;\n        l=0;//\u961f\u5217\u521d\u59cb\u5316 \n        r=1;\n        q[r]=x;//x\u5165\u961f \n        flag[x]=1;//\u6807\u8bb0 \n        while (l!=r)\n        {\n            l++;//\u51fa\u961f\n            int xx=q[l];//\u6316\u51fa\u6765 \n            flag[xx]=0;//\u53bb\u6807\u8bb0 \n            for (i=1;i<=s[xx];i++)//\u4e00\u4e2a\u4e2a\u70b9\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c \n                if (d[xx]+f[xx][i].s<d[f[xx][i].n])\n                { \n                    d[f[xx][i].n]=d[xx]+f[xx][i].s;//\u66f4\u65b0 \n                    if (flag[f[xx][i].n]==0)//\u6ca1\u5728\u961f\u5217\u4e2d \n                    {\n                        r++;//\u5165\u961f \n                        q[r]=f[xx][i].n;\n                        flag[f[xx][i].n]=1;//\u6807\u8bb0 \n                    } \n                }\n        }\n        sum=0;\n        for (i=1;i<=p;i++) sum=sum+a[i]*d[i];//\u6c42\u548c \n        if (sum<Min) Min=sum;//\u6bd4\u8f83 \n    }\n    printf(\"%d\\n\",Min);//\u8f93\u51fa \n    return 0;\n}\n```",
        "postTime": 1470734486,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1828 \u3010\u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter\u3011"
    },
    {
        "content": "\u53c8\u662f\u4e00\u9053\u8086\u8650\u7684john\u548c\u5976\u725b\u7684\u9898\u76ee\uff0c\u5728oi\u4e16\u754c\u4e2d\u5976\u725b\u662f\u4e07\u80fd\u7684\uff01\u8fd9\u5df2\u7ecf\u662f\u6570\u4e0d\u6e05\u7684\u7b2cn\u9053\u5976\u725b\u9898\u4e86[\u597d\u50cf\u626f\u8fdc\u4e86]\n\n\u663e\u7136\uff0c\u6570\u636e\u53ea\u6709800\uff0c\u7528\u5f17\u6d1b\u4f0a\u5fb7\u90fd\u53ef\u4ee5\u8dd1\u523080\uff0c\u5e38\u89c4\u7684spfa\n\n\u53ea\u6709\u4e24\u4e2a\u6ce8\u610f\u70b9\uff1a1\u3001\u53cc\u5411\u9053\u8def[\u5076\u5c14\u4f1a\u6709\u4eba\u4f8b\u5982\u6211\u53ea\u8bbe\u5355\u5411\uff08\u6b32\u54ed\u65e0\u6cea\uff09\uff0c\u8bf7\u770b\u6e05\u9898\u76ee]\n\n2\u3001\u9700\u8981\u7d2f\u52a0\n\n```delphi\nvar n,k,i,num,l,r,z,p,c,max:longint;  \n   son,data,next,ed,a,ans:array[0..5000] of longint;  \nprocedure  spfa(xx,Nn:longint);  \nvar  \n  i,s,t,h,t1,p:longint;  \n  dis,q:array[1..5000] of longint;  \n  v:array[1..5000] of boolean;  \nbegin  \nfillchar(v,sizeof(v),false);  \n  for i:=1 to nn do  \n    dis[i]:=maxlongint;  \n  dis[xx]:=0;  \n  h:=0;  \n  t1:=1;  \n  q[1]:=xx;  \n  v[xx]:=true;  \n  while h<>t1 do  \n    begin  \n      h:=h mod Nn+1;  \n      p:=son[q[h]];  \n      v[q[h]]:=false;  \n      while p<>0 do  \n        begin  \n          if dis[q[h]]+data[p]<dis[ed[p]] then  \n             begin  \n               dis[ed[p]]:=dis[q[h]]+data[p];  \n               if not v[ed[p]] then  \n                 begin  \n                   t1:=t1 mod nn+1;  \n                   q[t1]:=ed[p];  \n                   v[ed[p]]:=true;  \n                 end;  \n             end;  \n          p:=next[p];  \n        end;  \n    end;  \nfor  i:=1  to  n  do  \nans[xx]:=ans[xx]+dis[a[i]];  \nend;  \n  \nprocedure  insert(a,b,z:longint);  \nbegin  \ninc(num);  \nnext[num]:=son[a];  \nson[a]:=num;  \ned[num]:=b;  \ndata[num]:=z;  \nend;  \n  \nbegin  \nreadln(n,p,c);  \n  \nfor i:=1  to  n do  \nreadln(a[i]);  \n  \nfor i:=1  to  c  do  \nbegin  \nreadln(l,r,z);  \ninsert(l,r,z);  \ninsert(r,l,z);  \nend;  \n  \nfor  i:=1 to  p  do  \nspfa(i,P);  \n  \nmax:=maxlongint;  \nfor  i:=1  to  p  do  \nif ans[i]<max  then max:=ans[i];  \n  \nwriteln(max);  \nend.  \n```",
        "postTime": 1390110842,
        "uid": 1708,
        "name": "sxyzhml",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1828 \u3010\u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter\u3011"
    },
    {
        "content": "# [\u539f\u9898](https://www.luogu.org/problemnew/show/P1828)\n## \u9898\u76ee\u63cf\u8ff0\n\n\u519c\u592bJohn\u53d1\u73b0\u505a\u51fa\u5168\u5a01\u65af\u5eb7\u8f9b\u5dde\u6700\u751c\u7684\u9ec4\u6cb9\u7684\u65b9\u6cd5\uff1a\u7cd6\u3002\u628a\u7cd6\u653e\u5728\u4e00\u7247\u7267\u573a\u4e0a\uff0c\u4ed6\u77e5\u9053N\uff081<=N<=500\uff09\u53ea\u5976\u725b\u4f1a\u8fc7\u6765\u8214\u5b83\uff0c\u8fd9\u6837\u5c31\u80fd\u505a\u51fa\u80fd\u5356\u597d\u4ef7\u94b1\u7684\u8d85\u751c\u9ec4\u6cb9\u3002\u5f53\u7136\uff0c\u4ed6\u5c06\u4ed8\u51fa\u989d\u5916\u7684\u8d39\u7528\u5728\u5976\u725b\u4e0a\u3002\n\n\u519c\u592bJohn\u5f88\u72e1\u733e\u3002\u50cf\u4ee5\u524d\u7684Pavlov\uff0c\u4ed6\u77e5\u9053\u4ed6\u53ef\u4ee5\u8bad\u7ec3\u8fd9\u4e9b\u5976\u725b\uff0c\u8ba9\u5b83\u4eec\u5728\u542c\u5230\u94c3\u58f0\u65f6\u53bb\u4e00\u4e2a\u7279\u5b9a\u7684\u7267\u573a\u3002\u4ed6\u6253\u7b97\u5c06\u7cd6\u653e\u5728\u90a3\u91cc\u7136\u540e\u4e0b\u5348\u53d1\u51fa\u94c3\u58f0\uff0c\u4ee5\u81f3\u4ed6\u53ef\u4ee5\u5728\u665a\u4e0a\u6324\u5976\u3002\n\n\u519c\u592bJohn\u77e5\u9053\u6bcf\u53ea\u5976\u725b\u90fd\u5728\u5404\u81ea\u559c\u6b22\u7684\u7267\u573a\uff08\u4e00\u4e2a\u7267\u573a\u4e0d\u4e00\u5b9a\u53ea\u6709\u4e00\u5934\u725b\uff09\u3002\u7ed9\u51fa\u5404\u5934\u725b\u5728\u7684\u7267\u573a\u548c\u7267\u573a\u95f4\u7684\u8def\u7ebf\uff0c\u627e\u51fa\u4f7f\u6240\u6709\u725b\u5230\u8fbe\u7684\u8def\u7a0b\u548c\u6700\u77ed\u7684\u7267\u573a\uff08\u4ed6\u5c06\u628a\u7cd6\u653e\u5728\u90a3\uff09\n\n## \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\n### \u8f93\u5165\u683c\u5f0f\uff1a\n\u7b2c\u4e00\u884c: \u4e09\u4e2a\u6570\uff1a\u5976\u725b\u6570N\uff0c\u7267\u573a\u6570\uff082<=P<=800\uff09\uff0c\u7267\u573a\u95f4\u9053\u8def\u6570C(1<=C<=1450)\n\n\u7b2c\u4e8c\u884c\u5230\u7b2cN+1\u884c: 1\u5230N\u5934\u5976\u725b\u6240\u5728\u7684\u7267\u573a\u53f7\n\n\u7b2cN+2\u884c\u5230\u7b2cN+C+1\u884c\uff1a \u6bcf\u884c\u6709\u4e09\u4e2a\u6570\uff1a\u76f8\u8fde\u7684\u7267\u573aA\u3001B\uff0c\u4e24\u7267\u573a\u95f4\u8ddd\u79bbD\uff081<=D<=255\uff09\uff0c\u5f53\u7136,\u8fde\u63a5\u662f\u53cc\u5411\u7684\n\n### \u8f93\u51fa\u683c\u5f0f\uff1a\n\u4e00\u884c \u8f93\u51fa\u5976\u725b\u5fc5\u987b\u884c\u8d70\u7684\u6700\u5c0f\u7684\u8ddd\u79bb\u548c\n\n------------\n\n# \u9898\u89e3\n\u9996\u5148~~\u70b9\u5f00\u6807\u7b7e~~\u5ba1\u6e05\u9898\u76ee\uff0c\u77e5\u9053\u4e00\u4e2a\u5927\u6982\u9898\u610f\u3002\u53ef\u4ee5\u770b\u51fa\u662f\u56fe\u8bba\u4e2d\u7684\u6700\u77ed\u8def\uff0c\u518d\u770b\u4e00\u4e0b\u6570\u636e\uff0c\u7528Floyed\u6709\u53ef\u80fd\u4f1a\u8d85\u65f6\uff0c\u6240\u4ee5\u7528SPFA\u6765\u505a\u3002\n \n\n### \u601d\u8def\uff1a\n\u66b4\u529b\u4e00\u904d\u6240\u6709\u7267\u573a\uff0c\u518d\u8dd1\u4e00\u904dSPFA\u5f97\u5230\u6700\u77ed\u8def\uff0c\u7136\u540e\u518d\u7d2f\u52a0\u4e00\u904d\uff0c\u53bb\u6700\u5c0f\u503c\uff0c\u5f97\u5230\u7b54\u6848\u3002\n\n### \u6ce8\u610f\u4e8b\u9879\uff1a\n1. \u770b\u6e05\u6837\u4f8b\uff0c\u5206\u6790\u597d\u9898\u76ee\u548c\u6837\u4f8b\n1. \u907f\u5f00**TLE**\uff0c\u4e0d\u8981\u4e71\u4f18\u5316\uff01\uff01\uff01\n1. \u6ce8\u610fSPFA\u7684\u5b9e\u73b0\u8fc7\u7a0b\n1. \u5176\u4ed6\u8be6\u89c1\u6807\u7a0b\u6ce8\u91ca \n## \u6807\u7a0b\n```cpp\n#include<bits/stdc++.h>\n#define NUM 801\n#define fk 0x2aaaaaaa\nusing namespace std;\nint i,j;\nint n,p,c,x,y,t,minn,head,tail,tot,u;\nint a[NUM][NUM],b[501],dis[NUM],num[NUM],w[NUM][NUM],team[2*NUM-1]={0};//\u961f\u5217\u6570\u7ec4\u521d\u59cb\u5316 \nbool exist[NUM];\nint main(){\n\tcin>>n>>p>>c;\n\tfor(i=1;i<=p;i++){\n\t\tb[i]=0;\n\t\tnum[i]=0;\n\t\tfor(j=1;j<=p;j++) w[i][j]=fk;\n\t}\n\tfor(i=1;i<=n;i++) cin>>b[i];\n\tfor(i=1;i<=c;i++){//\u90bb\u63a5\u77e9\u9635\u50a8\u5b58 \n\t\tcin>>x>>y>>t;\n\t\tw[x][y]=w[y][x]=t;\n\t\ta[x][++num[x]]=y;\n\t\ta[y][++num[y]]=x;\n\t}\n\tminn=fk;\n\tfor(i=1;i<=p;i++){\n\t\tfor(j=1;j<=p;j++) dis[j]=fk;\n\t\tmemset(exist,false,sizeof(exist));//exist\u6807\u5fd7\u521d\u59cb\u5316 \n\t\tdis[i]=0;\n\t\tteam[1]=i;\n\t\thead=0;\n\t\ttail=1;\n\t\texist[i]=true;//\u8d77\u59cb\u70b9\u5165\u961f\n\t\tdo{\n\t\t\thead++;\n\t\t\thead=((head-1)%(2*NUM-1))+1;//\u5faa\u73af\u961f\u5217\u5904\u7406\n\t\t\tu=team[head];\n\t\t\texist[u]=false;\n\t\t\tfor(j=1;j<=num[u];j++) if(dis[a[u][j]]>dis[u]+w[u][a[u][j]]){\n\t\t\t\tdis[a[u][j]]=dis[u]+w[u][a[u][j]];\n\t\t\t\tif(exist[a[u][j]]==false){\n\t\t\t\t\ttail++;\n\t\t\t\t\ttail=((tail-1)%(2*NUM-1))+1;\n\t\t\t\t\tteam[tail]=a[u][j];\n\t\t\t\t\texist[a[u][j]]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}while(head!=tail);\n\t\ttot=0;\n\t\tfor(j=1;j<=n;j++) tot+=dis[b[j]];\n\t\tif(tot<minn) minn=tot;\n\t}\n\tcout<<minn;\n\treturn 0;\n}\n```",
        "postTime": 1531969802,
        "uid": 75504,
        "name": "\u0422\u0443\u043f\u043e\u043b\u0435\u0432",
        "ccfLevel": 0,
        "title": "LuoguOJ P1828 \u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u867d\u7136\u8bf4N=800\uff0c\u4f46\u662fFloyd\u8fd8\u662f\u53ef\u4ee5\u89e3\u51b3\u7684\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u5c0f\u4f18\u5316\uff1a\u7531\u4e8e\u8fb9\u90fd\u662f\u53cc\u5411\u8fb9\uff0c\u53ef\u4ee5\u53ea\u8003\u8651\u4e00\u534a\u7684\u56fe\u3002\u867d\u7136\u8fd9\u6837\u53ea\u7528\u6539\u52a8\u4ee3\u7801\u7684\u4e00\u4e2a\u5b57\u7b26\uff0c\u4f46\u4f18\u5316\u6548\u679c\u975e\u5e38\u663e\u8457\u3002\n\n\u540c\u65f6\uff0c\u4f7f\u7528stl\u7684\u7b97\u6cd5\u6a21\u677f\u53ef\u4ee5\u7b80\u5316\u4ee3\u7801\u3002\n\n\u4ee5\u4e0b\u4ee3\u7801\u4e0d\u9700\u8981\u5438\u6c27\u5c31\u53ef\u4ee5AC\uff1a\n```\n#include<iostream>\n#include<numeric>\n#include<algorithm>\n#define rep(i, n) for (int i = 1; i <= n; ++i) //\u5faa\u73af\nusing namespace std;\n\n//mul[i]: \u5728\u7b2ci\u4e2a\u7267\u573a\u7684\u725b\u6570\nint d[810][810], mul[810];\nlong long acc[810];\n\nint main() {\n\tios::sync_with_stdio(false);\n\tint n, c, m, u, v, w; cin >> c >> n >> m;\n\trep(i, c) cin >> w, ++mul[w]; //\u8bfb\u5165\n    //floyd\u521d\u59cb\u5316\n\trep(i, n) rep(j, n) if (i != j) d[i][j] = 1073741823;\n\trep(i, m) cin >> u >> v >> w, d[u][v] = d[v][u] = w;\n    //floyd\u6838\u5fc3\uff0c\u6ce8\u610f\u662frep(j, i)\uff0c\u53ea\u9700\u8003\u8651\u4e00\u534a\u5373\u53ef\n\trep(k, n) rep(i, n) rep(j, i)\n\t\tif (d[i][j] > d[i][k] + d[k][j])\n\t\t\td[i][j] = d[j][i] = d[i][k] + d[k][j];\n\trep(i, n) acc[i] = inner_product(d[i] + 1, d[i] + n + 1, mul + 1, 0ll); //\u5185\u79ef\u7684\u6982\u5ff5\u76f8\u4fe1\u5927\u5bb6\u90fd\u77e5\u9053\u5427\uff0c\u8fd9\u4e2a\u662f\u5728<numeric>\u91cc\u7684\n    //min_element\u624d\u662f\u5728<algorithm>\u91cc\uff0c\u5b83\u8fd4\u56de\u7684\u662f\u6307\u9488\uff0c\u8bb0\u5f97\u89e3\u5f15\u7528\n\tcout << *min_element(acc + 1, acc + n + 1) << endl;\n\treturn 0;\n}\n```",
        "postTime": 1525355829,
        "uid": 64757,
        "name": "huang_yue",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1828 \u3010\u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7528SPFA\n\nSPFA\u662f\u4e00\u79cdBellman_Ford\u7684\u961f\u5217\u4f18\u5316\uff0c\u662f\u6bb5\u51e1\u4e01dalao\u63d0\u51fa\u6765\u7684\uff0c\u4f46\u662f\u56e0\u4e3a\u8fd9\u4e2a\u4eba\u7684\u8bba\u6587\u5728\u56fd\u9645\u53d1\u8868\u65f6\u6709\u70b9\u667a\u969c\uff0c\u628a\u65f6\u95f4\u590d\u6742\u5ea6\u7b97\u6210\u4e86O(m)\u8d62\u5f97\u4e86\u56fd\u9645\u4e0a\u7684\u4e00\u81f4\u5632\u7b11\u3002\n\n\u4e0d\u4f1aBellman\u7684\u770b\u4e00\u4e0b\u8fd9\u91cc\n\n[Bellman_Ford](https://www.luogu.org/blog/TJor/solution-p1339)\n\n\u5f53Bellman\u662f\u5c06\u6240\u6709\u7684\u8fb9\u904d\u5386\u66f4\u65b0n\u904d\uff0c\u4f46\u662f\u5f88\u591a\u65f6\u5019\u5f80\u5f80\u904d\u5386\u4e0d\u5230n\u904d\u65f6\uff0c\u5f97\u5230\u7684\u7b54\u6848\u5c31\u662f\u6700\u4f18\u7684\u4e86\uff0c\u8fd9\u6837\u4f1a\u6d6a\u8d39\u5f88\u591a\u65f6\u95f4\uff0c\u6211\u4eec\u91c7\u53d6\u7684\u662f\u961f\u5217\u4f18\u5316\u3002\u5c31\u662f\u6bcf\u5f53\u7ecf\u8fc7\u4e00\u6761\u8fb9\u53ef\u4ee5\u4f7f\u6700\u77ed\u8def\u5f84\u53d8\u5c0f\u65f6\uff0c\u5c31\u5c06\u8fd9\u4e2a\u70b9\u7684\u7ec8\u70b9\u52a0\u5165\u961f\u5217\uff0c\u6bcf\u6b21\u4ece\u4ee5\u961f\u9996\u7684\u70b9\u4e3a\u8d77\u70b9\u7684\u8fb9\u8fdb\u884c\u904d\u5386\uff0c\u8fd9\u6837\u80fd\u8282\u7701\u5f88\u957f\u7684\u65f6\u95f4\n\n\u5448\u4e0a\u4ee3\u7801\uff0cdalao\u65e0\u5410\u69fd\n\n```\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <queue>\n#include <cstring>\nusing namespace std;\nint p,n,m;\nint input[810];\nint book[100010];\nint head[100010],next[100010],to[100010],value[100010];\nint total=0;\nint dis[810][810];\nint read(int x)//\u4f18\u5316\u8bfb\u5165\n{\n\tx=0;\n\tchar ch=getchar();\n\tfor(;!isdigit(ch);ch=getchar());\n\tfor(;isdigit(ch);ch=getchar())\n\t    x=x*10+ch-'0';\n\treturn x;\n}\nvoid adl(int a,int b,int c)//\u90bb\u63a5\u8868\n{\n\ttotal++;\n\tto[total]=b;\n\tvalue[total]=c;\n\tnext[total]=head[a];\n\thead[a]=total;\n\treturn ;\n}\nvoid SPFA(int u)//SPFA\u4e3b\u51fd\u6570\n{\n\tqueue <int> Q;\n\tmemset(book,0,sizeof(book));\n\tfor(int i=1;i<=p;i++)\n\t    dis[u][i]=9999999;\n\tdis[u][u]=0;\n\tbook[u]=1;\n\tQ.push(u);//\u5c06\u8d77\u70b9\u5165\u961f\n\twhile(!Q.empty())\n\t{\n\t\tint k=Q.front();//\u53d6\u961f\u9996\u5143\u7d20\n\t\tQ.pop();\n\t\tbook[k]=0;\n\t\tfor(int e=head[k];e;e=next[e])\n\t\t    if(!book[to[e]] && dis[u][to[e]]>=dis[u][k]+value[e])//\u5f53\u53ef\u4ee5\u66f4\u65b0\u65f6\n\t\t    {\n\t\t    \tdis[u][to[e]]=dis[u][k]+value[e];//\u66f4\u65b0\u6700\u5c0f\u503c\n\t\t    \tQ.push(to[e]);//\u6b64\u8fb9\u7ec8\u70b9\u5165\u961f\n\t\t    }\n\t}\n\treturn;\n}\nint main()\n{\n\tint ans=9999999;\n\tcin>>n>>p>>m;\n\tfor(int i=1;i<=n;i++)\n\t    cin>>input[i];\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint a,b,c;\n\t\tcin>>a>>b>>c;\n\t\tadl(a,b,c);\n\t\tadl(b,a,c);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tSPFA(input[i]);\n\tfor(int i=1;i<=p;i++)//\u679a\u4e3e\u6240\u6709\u7684\u519c\u573a\n\t{\n\t\tint sum=0;\n\t    for(int j=1;j<=n;j++)//\u5c06\u6240\u6709\u5976\u725b\u5230\u6b64\u519c\u573a\u7684\u503c\u52a0\u4e0a\n\t       sum+=dis[input[j]][i];\n\t    ans=min(ans,sum);//\u66f4\u65b0\u7b54\u6848\n\t}\n\tcout<<ans;\n}\n\n```\n",
        "postTime": 1520649865,
        "uid": 39942,
        "name": "TJor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1828 \u3010\u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter\u3011"
    },
    {
        "content": "            \n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\nstruct e        //\u5efa\u7acb\u90bb\u63a5\u8868 \n{\n    int next,to,cost;\n}e[100001];\nint cow[100001],head[100001],team[100001],vis[100001],minn[10001];\nint n,p,c,u,sum,ans=0x7fffff,num;\nvoid add(int from,int to,int dis)          //\u90bb\u63a5\u8868\u8bfb\u5165 \uff0c\u52a0\u5165\u4e00\u6761\u4ecefrom\u5230to\u8ddd\u79bb\u4e3adis\u7684\u5355\u5411\u8fb9 \n{\n    e[++num].next=head[from];             //\u8fb9\u6307\u5411\u4e0a\u4e00\u6761\u8fb9 \n    e[num].to=to;                          //\u70b9\u66f4\u65b0 \n    e[num].cost=dis;                        //\u8fb9\u6743\u66f4\u65b0 \n    head[from]=num;                                //\u4e0a\u4e00\u6761\u8fb9\u65ad\u5f00\uff0c\u8fde\u5230\u8fd9\u4e00\u6761\u8fb9 \n}\nvoid spfa(int s)\n{\n    memset(team,0,sizeof(team));      //\u521d\u59cb\u5316 \n    memset(vis,0,sizeof(vis));\n    memset(minn,0x7f,sizeof(minn));\n    int h=0,t=1;\n    minn[s]=0;\n    vis[s]=1;\n    team[1]=s;         //\u961f\u9996\u5165\u961f \n    while(h<t)            //SPFA\n    {\n        h++;          \n        u=team[h];       //\u51fa\u961f \n        vis[u]=0;\n        for(int j=head[u];j!=0;j=e[j].next)\n        {\n            int to=e[j].to;        //\u679a\u4e3e\u4e0eu\u76f8\u8fde\u7684\u6240\u6709\u70b9 \n            if(minn[u]+e[j].cost<minn[to])       //\u66f4\u65b0 \n            {\n                minn[to]=minn[u]+e[j].cost;\n                if(vis[to]==0)          //\u961f\u5217\u4e2d\u4e0d\u5b58\u5728to\u70b9 \n                {\n                    t++;              //\u6307\u9488\u4e0b\u79fb\uff0c\u5165\u961f \n                    vis[to]=1;\n                    team[t]=to;\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    cin>>n>>p>>c;\n    for(int i=1;i<=n;i++)\n    {\n        int num;\n        cin>>cow[i];      //\u8f93\u5165\u725b\u7684\u4f4d\u7f6e \n    }\n    for(int i=1;i<=c;i++)\n    {\n        int x,y,z;\n        cin>>x>>y>>z;\n        add(x,y,z);     //\u53cc\u5411\u8fb9\uff0c\u8bfb\u5165\u4e24\u904d \n        add(y,x,z);\n    }\n    for(int i=1;i<=p;i++)       //\u679a\u4e3e\u7cd6\u6240\u653e\u7684\u7267\u573a \n    {\n        spfa(i);\n        sum=0;\n        for(int j=1;j<=n;j++)\n        {\n            sum=sum+minn[cow[j]];      //\u6c42\u51fa\u6bcf\u4e2a\u725b\u5230\u653e\u7cd6\u7267\u573a\u7684\u8def\u5f84\u603b\u548c \n        }\n        if(sum<ans) ans=sum;       //\u66f4\u65b0 \n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1479171902,
        "uid": 28329,
        "name": "hututu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1828 \u3010\u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter\u3011"
    },
    {
        "content": ">###**\\_\u8fd9\u662f\u4e00\u9053\u5f88\u6df3\u6734\u7684\u6700\u77ed\u8def\u5f84\u95ee\u9898\\_**\n>\u4e8b\u5b9e\u4e0a\uff0c\u7528 SPFA\u7b97\u6cd5\u5b8c\u5168\u5c31\u53ef\u4ee5\u8fc7\u7684\n>\u6570\u636e\u4e0d\u5927\uff0c\u8282\u7701\u7a7a\u95f4\n>\u661f\u661f\u4e4b\u706b\uff0c\u53ef\u4ee5\u71ce\u539f\n>\uff08\u2026\u2026\uff09\n>\u4e0b\u9762\u9644\u4e0a\u4ee3\u7801\uff0c\u6ce8\u91ca\u662f\u62fc\u97f3\u54e6\n\n\n\n```cpp\nprogram Sweet_Butter;\nvar\n  n,p,c,m:longint;\n  a,w:array[0..802,0..802] of longint;\n  dis,b:array[1..800] of longint;   //b=muchang\n  used:array[1..800] of boolean;\n  t:array[1..20000] of longint;  //t=dui lie\nprocedure init;\n  var\n    i,j,x,y:longint;\n  begin\n    readln(n,p,c);\n    for i:= 1 to n do\n      readln(b[i]);   //read nai niu mu chang\n    for i:= 1 to p do\n      for j:= 1 to p do\n        w[i,j]:=maxlongint div 3; //csh shu zhu\n    for i:= 1 to c do\n      begin\n        readln(x,y,w[x,y]); //xiu gai\n        inc(a[x,0]);\n        inc(a[y,0]);\n        a[x,a[x,0]]:=y;\n        a[y,a[y,0]]:=x;\n        w[y,x]:=w[x,y];  //dui chen\n      end;\n    //du ru\n  end;\nprocedure team(h,f:longint);\n  var j,u:longint;\n  begin\n    if h=f then exit;\n    inc(h);\n    h:=((h-1) mod 1601)+1;\n    u:=t[h];\n    used[u]:=false;\n    for j:= 1 to a[u,0] do\n      if dis[a[u,j]]>dis[u]+w[u,a[u,j]] then //song chi\n        begin\n          dis[a[u,j]]:=dis[u]+w[u,a[u,j]]; //copy and paste\n          if (used[a[u,j]]=false) then\n            begin\n              inc(f);\n              f:=((f-1) mod 1601)+1;\n              t[f]:=a[u,j];\n              used[a[u,j]]:=true;\n            end;\n        end;\n    team(h,f);\n  end;\nprocedure csh;\n  var\n    i,j,h,f,ans,u:longint;\n  begin\n    ans:=0;\n    m:=maxlongint;\n    for i:= 1 to p do\n      begin\n        for j:= 1 to p do\n          dis[j]:=maxlongint div 3;  //ju li zui da\n        fillchar(used,sizeof(used),false);\n        fillchar(t,sizeof(t),0);  //shu zhu csh\n        dis[i]:=0; t[1]:=i;\n        h:=0; f:=1; used[i]:=true;  //readly go to team\n        team(h,f);\n        ans:=0;\n        for j:= 1 to n do\n          //if (ans{+dis[b[j]]})<maxlongint then\n          ans:=ans+dis[b[j]]; //!!!\n        if ans<m then m:=ans;\n      end;\n  end;\nprocedure last;\n  begin\n    {if m=3024 then m:=1990;\n    if m=218 then m:=180;\n    if m=10 then m:=8;\n    if m=5462 then m:=4024;\n    if m=93213 then m:=68148; }\n    writeln(m);\n    readln;\n  end;\nbegin\n  init;\n  csh;\n  last;\nend.\n\n```",
        "postTime": 1475823645,
        "uid": 22841,
        "name": "Right",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1828 \u3010\u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter\u3011"
    },
    {
        "content": "\u6ca1\u6709\u4ec0\u4e48\u6280\u672f\u542b\u91cf\u7684SPFA\uff0c\u90bb\u63a5\u8868\u5efa\u56fe\uff0c\u867d\u7136\u6570\u636e\u5f88\u6c34\u3002\u3002\n\n\u7528\u5faa\u73af\u961f\u5217\u4f18\u5316\u5176\u5b9e\u961f\u5217\u662f\u5f00\u5927\u4e86\u7684\u3002\u3002\n\n\u601d\u8def\uff1a\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u5976\u725b\u7684\u4f4d\u7f6e\u3002\u3002\u7136\u540e\u679a\u4e3e\u8d77\u70b9\u7b97\u51fa\u5976\u725b\u5230\u8fbe\u7684\u6700\u77ed\u8def\u3002\u3002\u6bd4\u8f83\u7136\u540e\u8f93\u51fa\u3002\u3002\n\n\u6700\u540e\u8d34\u4e0ap\u7684\u4ee3\u7801\u3002\u3002\u770b\u4f3c\u8fd8\u4e0d\u9519\u5176\u5b9e\u5f88\u4e11\u964b\u3002\u3002\n\n\n\n\n\n\n```cpp\nprogram butter;\nvar i,j,n,p,c,min,tot,t,x,y,z:longint;\n    v,next,head,cost,dis,b:array[0..3000]of longint;\n    team:array[0..10100]of longint;\n    pd:array[0..3000]of boolean;\nprocedure add(x,y,z:longint);\nbegin\n inc(t);\n  v[t]:=y;\n  next[t]:=head[x];\n  head[x]:=t;\n  cost[t]:=z;\nend;\nprocedure SPFA(x:longint);\nvar i,j,l,r,u,v1,e:longint;\nbegin\n  for i:=1 to p do\n    dis[i]:=maxlongint div 3;\n     l:=0;\n     r:=1;\n     team[1]:=x;\n     pd[x]:=true;\n     dis[x]:=0;\n      while l<>r do\n        begin\n          l:=l mod 1600+1;\n          u:=team[l];\n          pd[u]:=false;\n          e:=head[u];\n           while e<>0 do\n             begin\n               v1:=v[e];\n                if dis[v1]>dis[u]+cost[e] then\n                    begin\n                     dis[v1]:=dis[u]+cost[e];\n                       if pd[v1]=false then begin\n                                              r:=r mod 1600+1;\n                                              team[r]:=v1;\n                                              pd[v1]:=true;\n                                             end;\n                    end;\n                 e:=next[e];\n             end;\n        end;\nend;\nbegin\nreadln(n,p,c);\nmin:=maxlongint;\n for i:=1 to n do\n   readln(b[i]);\n    for i:=1 to c do\n      begin\n       readln(x,y,z);\n       add(x,y,z);\n       add(y,x,z);\n      end;\n    for i:=1 to p do\n      begin\n       tot:=0;\n       SPFA(i);\n       for j:=1 to n do\n         tot:=tot+dis[b[j]];\n         if tot<min then min:=tot;\n      end;\n   writeln(min);\nend.\n```",
        "postTime": 1464701496,
        "uid": 10455,
        "name": "wwanymore",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1828 \u3010\u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u4f7f\u7528Heap\u4f18\u5316\u7684Dijkstra\u7b97\u6cd5\n\n\u5728C++\u4e2d\uff0c\u53ef\u4ee5\u5229\u7528priority\\_queue\u6765\u5b9e\u73b0Heap\u7684\u529f\u80fd\n\n```cpp\n\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#define maxn 805\n#define INF 0x7fffffff\nusing namespace std;\nstruct Edge{\n    int from,to,dist;\n};\nvector<Edge> G[maxn];\nint a[maxn],d[maxn];\nbool vis[maxn];\ntypedef pair<int,int> pii;\npriority_queue<pii,vector<pii>,greater<pii> > Q;//\u4f18\u5148\u961f\u5217\nint main()\n{\n    int n,p,c,i,x,y,z,u,j,sum=0,ans=INF;\n    pii w;\n    scanf(\"%d%d%d\",&n,&p,&c);\n    memset(a,0,sizeof(a));\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&x);\n        a[x]++;\n    }\n    for(i=1;i<=n;i++)\n        G[i].clear();\n    for(i=0;i<c;i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&z);\n        G[x].push_back((Edge){x,y,z});\n        G[y].push_back((Edge){y,x,z});//\u6ce8\u610f\u5230\u8fb9\u662f\u53cc\u5411\u7684\n    }\n    for(i=1;i<=p;i++)\n    {\n        memset(d,0x3f,sizeof(d));\n        memset(vis,0,sizeof(vis));\n        d[i]=0;\n        Q.push(make_pair(0,i));\n        while(!Q.empty())\n        {\n            u=Q.top().second;\n            Q.pop();\n            if(vis[u])continue;\n            vis[u]=1;\n            for(j=0;j<G[u].size();j++)\n            {\n                Edge &e=G[u][j];\n                if(d[e.to]>d[u]+e.dist)\n                {\n                    d[e.to]=d[u]+e.dist;\n                    Q.push(make_pair(d[e.to],e.to));//\u63d2\u5165\n                }\n            }\n        }\n        sum=0;\n        for(j=1;j<=p;j++)\n            sum+=d[j]*a[j];\n        ans=min(ans,sum);\n    }\n    printf(\"%d\",ans);//\u8f93\u51fa\u7b54\u6848\n    return 0;\n}\n\n```",
        "postTime": 1446098911,
        "uid": 977,
        "name": "sfd158",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1828 \u3010\u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter\u3011"
    },
    {
        "content": "\u7528floyd\u76ee\u6d4b\u8d85\u65f6\n\n\u800c\u8fb9\u53c8\u90a3\u4e48\u5c11\u6240\u4ee5\u591a\u6b21spfa\u5c31\u53ef\u4ee5\u4e86\n\n\u8dd1\u5f97\u98de\u8d77\u603b\u517161ms\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <vector>\n#include <string.h>\n#include <queue>\nusing namespace std;\nint n , p , c;\nint a[500 + 2];\nint i , j;\nint x , y , v;\nvector < int > linker[800 + 2];\nvector < int > di[800 + 2];\nint dist[800 + 2][800 + 2];\nbool use[800 + 2];\nqueue < int > q;\nvoid spfa( int s )\n{\n     int now , i , cur , v;\n     for( i = 1 ; i <= p ; i++ )\n          dist[s][i] = 100000000;\n     dist[s][s] = 0;\n     q.push( s );\n     while( !q.empty() )\n     {\n            now = q.front();\n            q.pop();\n            use[now] = 0;\n            for( i = 0 ; i < linker[ now ].size() ; i++ )\n            {\n                 cur = linker[ now ][i];\n                 v = di[ now ][i];\n                 if( dist[s][cur] > dist[s][now] + v )\n                 {\n                     dist[s][cur] = dist[s][now] + v;\n                     if( !use[cur] )\n                     {\n                         use[cur] = 1;\n                         q.push( cur );\n                     }\n                 }\n            }\n     }\n     return;\n}\nint sum , ans;\nint main()\n{\n    scanf( \"%d %d %d\" , &n , &p , &c );\n    for( i = 1 ; i <= n ; i++ )\n         scanf( \"%d\" , &a[i] );\n    for( i = 0 ; i < c ; i++ )\n    {\n         scanf( \"%d %d %d\" , &x , &y , &v );\n         linker[x].push_back( y );\n         linker[y].push_back( x );\n         di[x].push_back( v );\n         di[y].push_back( v );\n    }\n    for( i = 1 ; i <= n ; i++ )\n         spfa( a[i] );\n    ans = 100000000;\n    for( i = 1 ; i <= p ; i++ )\n    {\n         sum = 0;\n         for( j = 1 ; j <= n ; j++ )\n              sum += dist[ a[j] ][i];\n         if( sum < ans )\n             ans = sum;\n    }\n    cout << ans << endl;\n    return 0;\n}\n```",
        "postTime": 1439023956,
        "uid": 3296,
        "name": "noip",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1828 \u3010\u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter\u3011"
    },
    {
        "content": "##  \u9999\u751c\u7684\u9ec4\u6cb9\n### \u840c\u65b0\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\u4e0d\u597d\u8bef\u55b7\u3002\n#### \u4e0b\u9762\u8fdb\u5165\u6b63\u9898\n\n\u5bf9\u4e8e\u8fd9\u4e00\u9053\u9898\uff0c\u6211\u770b\u5230\u7684\u7b2c\u4e00\u773c\u5c31\u662f\u89c9\u5f97\u5e94\u8be5\u5148\u786e\u5b9a\u8d77\u70b9\u4e3a\u4ec0\u4e48\u3002\n\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u9053\u9999\u751c\u7684\u9ec4\u6cb9\uff0c\u4ed6\u662f\u6ca1\u6709\u7ed9\u4f60\u8d77\u70b9\u7684\uff0c\u8981\u4f60\u627e\u5230\u4e00\u4e2a\u4f7f\u6240\u6709\u725b\u5230\u8fbe\u7684\u8def\u7a0b\u548c\u4e3a\u6700\u77ed\u3002\u90a3\u4e48\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u5c31\u8981\u679a\u4e3e\u6240\u6709\u7684\u7267\u573a\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u7267\u573a\u90fd\u53ef\u80fd\u4f5c\u4e3a\u8d77\u70b9\u3002\n\n\u786e\u5b9a\u5b8c\u8d77\u70b9\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528spfa\u6765\u6c42\u6bcf\u4e00\u5934\u5976\u725b\u5230\u8fd9\u4e2a\u7267\u573a\u7684\u6700\u77ed\u8def\n### spfa\u4ee3\u7801\u5982\u4e0b\n```cpp\n\tfor(int i=1;i<=p;i++)\n\t{\n\t\tfor(int j=1;j<=p;j++)\n\t\tdis[j]=INF;\n\t\tdis[i]=0;team[1]=i;tab[i]=1;head=0;tail=1;\n\t\tdo//spfa\u6700\u77ed\u8def\u5f84\u7b97\u6cd5\uff08\u8fd9\u6211\u5c31\u4e0d\u7528\u8bb2\u4e86\u5427\uff09 \n\t\t{\n\t\t\thead++;\n\t\t\tnow=team[head];\n\t\t\ttab[now]=0;\n\t\t\tfor(int j=1;j<=num[now];j++)\n\t\t\t{\n\t\t\t\tif(dis[a[now][j]]>dis[now]+w[now][a[now][j]])\n\t\t\t\t{\n\t\t\t\t\tdis[a[now][j]]=dis[now]+w[now][a[now][j]];\n\t\t\t\t\tif(tab[a[now][j]]==0)\n\t\t\t\t\t{\n\t\t\t\t\t\ttail++;\n\t\t\t\t\t\tteam[tail]=a[now][j];\n\t\t\t\t\t\ttab[a[now][j]]=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\n\t\t}while(head<=tail); \n```\n\u4f46\u662f\u6211\u4eec\u662f\u679a\u4e3e\u6bcf\u4e00\u4e2a\u7267\u573a\u90fd\u5f53\u8d77\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u6bd4\u8f83\u4ed6\u4eec\u8def\u5f84\u7684\u5927\u5c0f\uff0c\n\u627e\u51fa\u5176\u4e2d\u6700\u77ed\u7684\u8def\u5f84\n### \u4ee3\u7801\u5982\u4e0b\n```cpp\n\tfor(int j=1;j<=n;j++)\n\t\t\ttot+=dis[b[j]];//\u679a\u4e3e\u6bcf\u4e2a\u70b9\u5230\u7267\u573a\u7684\u6700\u77ed\u8def\u5f84\u4e2d\u7684\u6700\u77ed\u8def\u5f84\uff1b \n\t\t\tif(tot<=mn)\n\t\t\tmn=tot;\n```\n## $\\color{green}\\texttt{\u4e0b\u9762\u662fAC code}$\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nint tab[1001],/*\u6807\u5fd7\u662f\u5426\u4f7f\u7528\u8fc7*/a[1001][1001];/*\u50a8\u5b58\u7267\u573a\u95f4\u5173\u7cfb*/\nint dis[1001],team[1001],w[1001][1001],/*\u50a8\u5b58\u6743\u503c*/num[1001];\nint b[1001];//\u50a8\u5b58\u7267\u573a\u53f7 ;\nconst int INF=999999;\nint head,tail ,n,p,c,x,y,t,mn,now,tot;\nusing namespace std;\nint main()\n{\n//\tfreopen(\"butter.in\",\"r\",stdin);\n//\tfreopen(\"butter.out\",\"w\",stdout);\n\tscanf(\"%d%d%d\",&n,&p,&c);\n\tfor(int i=1;i<=p;i++)//\u8d4b\u521d\u503c \n\t{\n\t\tb[i]=0;\n\t\tnum[i]=0;\n\t\tfor(int j=1;j<=p;j++)\n\t\tw[i][j]=INF;\n\t}\n\tfor(int i=1;i<=n;i++) \n\t\tcin>>b[i];\n\tfor(int i=1;i<=c;i++)// \u7528\u90bb\u63a5\u77e9\u9635\u50a8\u5b58\uff1b\n\t{\n\t\tcin>>x>>y>>t;\n\t\tw[x][y]=w[y][x]=t;\n\t\ta[x][++num[x]]=y;\n\t\ta[y][++num[y]]=x;\n\t}\t\n\tmn=INF;//\u50a8\u5b58\u6700\u77ed\u8def\u5f84(\u521d\u59cb\u5316\u4e3a\u6700\u5927\u503c\uff09\n\tfor(int i=1;i<=p;i++)\n\t{\n\t\tfor(int j=1;j<=p;j++)\n\t\tdis[j]=INF;\n\t\tdis[i]=0;team[1]=i;tab[i]=1;head=0;tail=1;\n\t\tdo//spfa\u6700\u77ed\u8def\u5f84\u7b97\u6cd5\uff08\u8fd9\u6211\u5c31\u4e0d\u7528\u8bb2\u4e86\u5427\uff09 \n\t\t{\n\t\t\thead++;\n\t\t\tnow=team[head];\n\t\t\ttab[now]=0;\n\t\t\tfor(int j=1;j<=num[now];j++)\n\t\t\t{\n\t\t\t\tif(dis[a[now][j]]>dis[now]+w[now][a[now][j]])\n\t\t\t\t{\n\t\t\t\t\tdis[a[now][j]]=dis[now]+w[now][a[now][j]];\n\t\t\t\t\tif(tab[a[now][j]]==0)\n\t\t\t\t\t{\n\t\t\t\t\t\ttail++;\n\t\t\t\t\t\tteam[tail]=a[now][j];\n\t\t\t\t\t\ttab[a[now][j]]=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\n\t\t}while(head<=tail); \n\t\ttot=0;\n\t\tfor(int j=1;j<=n;j++)\n\t\t\ttot+=dis[b[j]];//\u679a\u4e3e\u6bcf\u4e2a\u70b9\u5230\u7267\u573a\u7684\u6700\u77ed\u8def\u5f84\u4e2d\u7684\u6700\u77ed\u8def\u5f84\uff1b \n\t\t\tif(tot<=mn)\n\t\t\tmn=tot;\n\t\t \n\t} \n\t\tprintf(\"%d\",mn);//\u8f93\u51fa\u6700\u77ed\u8def\u5f84 \n\t\treturn 0;//^_^\u5b8c\u7f8e\u843d\u5e55\n} \n```\n\n",
        "postTime": 1548854212,
        "uid": 130542,
        "name": "gaoxiaoqing",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1828 \u3010\u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter\u3011"
    },
    {
        "content": "\u501f\u4e86P1339\u91cc\u7684\u4e00\u4e2aSPFA\u2026\u2026\n\n\u7ed3\u679c\u8dd1\u5f97\u6162\u7684\u8981\u6b7b\u2026\u2026\u4f46\u662f\u8fd8\u662fAC\u4e8623333333\u2026\u2026\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u7267\u573a\u90fd\u8dd1\u4e00\u904dSPFA\uff0c\u6c42\u6700\u5c0f\u7684\u603b\u8def\u7a0b\u548c\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,p,c,cow[509],x,y,z,op,head[200009],next[200009],dis[200009],len[200009],v[200009],l,r,team[200009],pd[100009],u,v1,e,ans=23333333,sum,out,fh;\nchar cc;\nint read()//\u8bfb\u5165\u4f18\u5316\uff0c\u4f46\u5176\u5b9e\u52a0\u4e0d\u52a0\u90fd\u5f88\u6162\u2026\u2026\n{\n    out=0,fh=1,cc=getchar();\n    if(cc=='-'){fh=-1;}\n    while(cc>'9'||cc<'0'){cc=getchar();}\n    while(cc>='0'&&cc<='9')\n    {\n        out=out*10+cc-'0',\n        cc=getchar();\n    }\n    return out*fh;\n}\nint minn(int a,int b)//\u624b\u6253min\n{\n    if(a<b){return a;}\n    else{return b;}\n}\nvoid lt(int x,int y,int z)//\u8054\u901a\u4e00\u6761\u5355\u5411\u8def\n{\n    op++,v[op]=y;\n    next[op]=head[x],head[x]=op,len[op]=z;\n}\nvoid SPFA(int s)//SPFA\u677f\u5b50\u2026\u2026\n{\n    for(int i=1;i<=200009;i++){dis[i]=23333333;}//\u521d\u59cb\u5316\n    memset(team,0,sizeof(team));\n    memset(pd,0,sizeof(pd));\n    l=0,r=1,team[1]=s,pd[s]=1,dis[s]=0;\n    while(l!=r)\n    {\n        l=(l+1)%90000,u=team[l],pd[u]=0,e=head[u];\n        while(e!=0)\n        {\n            v1=v[e];\n            if(dis[v1]>dis[u]+len[e])\n            {\n                dis[v1]=dis[u]+len[e];\n                if(!pd[v1])\n                {\n                    r=(r+1)%90000,\n                    team[r]=v1,\n                    pd[v1]=1;\n                }\n            }\n            e=next[e];\n        } \n    }\n    return;\n}\nint main()\n{\n    n=read(),p=read(),c=read();\n    for(int i=1;i<=n;i++){cow[i]=read();}\n    for(int i=1;i<=c;i++)\n    {\n        x=read(),y=read(),z=read();\n        lt(x,y,z);lt(y,x,z);//\u53cc\u5411\u7684\u8fb9\uff0c\u8fde\u4e24\u6b21\n    }\n    for(int i=1;i<=p;i++)\n    {\n        SPFA(i);//\u628a\u7cd6\u5f53\u524d\u7267\u573a\u8dd1SPFA\n        sum=0;\n        for(int j=1;j<=n;j++){sum=sum+dis[cow[j]];}//\u6240\u6709\u5976\u725b\u8def\u7a0b\u603b\u548c\n        ans=minn(ans,sum);//\u627e\u6700\u5c0f\u7684\u8def\u7a0b\u4e4b\u548c\n    }\n    printf(\"%d\",ans);//\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1483714676,
        "uid": 14378,
        "name": "doby",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1828 \u3010\u9999\u751c\u7684\u9ec4\u6cb9 Sweet Butter\u3011"
    }
]