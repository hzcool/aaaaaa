[
    {
        "content": "$[IOI2011]crocodile$\n\n\u8fd9\u9898\u6ca1\u6709\u9898\u89e3\uff0c\u6211\u5c31\u6765\u53d1\u4e00\u7bc7\u3002\n\n\u94fe\u63a5\uff1ahttps://www.luogu.com.cn/problem/P5845\n\n\u9898\u76ee\u63cf\u8ff0:\u7ed9\u5b9a\u51fa\u53d1\u70b9$s$\u4e0e$k$\u4e2a\u7ec8\u70b9\uff0c\u6709\u4e00\u4e2a\u9cc4\u9c7c\u95e8\u536b\u53ef\u4ee5\u5728\u6bcf\u4e00\u8f6e\u5835\u4f4f\u4e00\u6761\u8fb9\uff0c\u6c42\u6700\u574f\u60c5\u51b5\u4e0b\u8d70\u5230\u7ec8\u70b9\u8981\u591a\u957f\u65f6\u95f4\u3002\n\n\u9898\u89e3:\u4ece\u51fa\u53d1\u70b9\u50cf\u7ec8\u70b9\u8003\u8651\u5341\u5206\u590d\u6742\uff0c\u4e0d\u59a8\u4ece\u7ec8\u70b9\u5411\u51fa\u53d1\u70b9\u8003\u8651\uff0c\u7531\u4e8e\u9cc4\u9c7c\u95e8\u536b\u4f1a\u6321\u4f4f\u4e00\u6761\u8fb9\uff0c\u6240\u4ee5\u4ece\u4e00\u4e2a\u4e0e\u7ec8\u70b9\u76f8\u90bb\u7684\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4e00\u5b9a\u4f1a\u88ab\u6321\u4f4f\uff0c\u53ea\u80fd\u8d70\u6b21\u77ed\u8def\u3002\u7531\u4e8e\u5230\u8be5\u70b9\u7684\u8def\u662f\u6b21\u77ed\u8def\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u7528\u6b21\u77ed\u8def\u66f4\u65b0\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6bcf\u4e2a\u70b9\u6bcf\u4e00\u6b21\u7528\u5230\u81ea\u5df1\u7684\u6b21\u77ed\u8def\u53bb\u6269\u5c55\u5373\u53ef\u3002\n\n```\n#include<iostream>\n#include<queue>\nusing namespace std;\nstruct node\n{\n\tint v,data,nxt;\n};\nnode edge[10000001];\nstruct reads\n{\n\tint num,data;\n\tbool operator < (const reads &a)const\n\t{\n\t\treturn data>a.data;\n\t}\n};\nreads tmp;\nint head[10000001],len;\nint n,m,dis[10000001],dis2[10000001];\nbool used[10000001];\npriority_queue<reads>q;\nvoid add(int x,int y,int z)\n{\n\tedge[++len].v=y;\n\tedge[len].data=z;\n\tedge[len].nxt=head[x];\n\thead[x]=len;\n\treturn;\n}\nreads make_reads(int x,int y)\n{\n\ttmp.num=x;\n\ttmp.data=y;\n\treturn tmp;\n}\nvoid dijkstra()\n{\n\tint top;\n\twhile (!q.empty())\n\t{\n\t\ttop=q.top().num;\n\t\tq.pop();\n\t\tif (used[top])\n\t\t\tcontinue;\n\t\tused[top]=1;\n\t\tfor (int i=head[top];i>0;i=edge[i].nxt)\n\t\t{\n\t\t\tif (dis[edge[i].v]>dis2[top]+edge[i].data)\n\t\t\t{\n\t\t\t\tdis2[edge[i].v]=dis[edge[i].v];\n\t\t\t\tdis[edge[i].v]=dis2[top]+edge[i].data;\n\t\t\t\tq.push(make_reads(edge[i].v,dis2[edge[i].v]));\n\t\t\t}\n\t\t\telse if (dis2[edge[i].v]>dis2[top]+edge[i].data)\n\t\t\t{\n\t\t\t\tdis2[edge[i].v]=dis2[top]+edge[i].data;\n\t\t\t\tq.push(make_reads(edge[i].v,dis2[edge[i].v]));\n\t\t\t}\n\t\t}\n\t}\n\tcout<<dis2[0]<<endl;\n\treturn;\n}\nint main()\n{\n\tint k,x,y,z;\n\tcin>>n>>m>>k;\n\tfor (int i=0;i<=n-1;++i)\n\t\tdis[i]=dis2[i]=1e9;\n\tfor (int i=1;i<=m;++i)\n\t{\n\t\tcin>>x>>y>>z;\n\t\tadd(x,y,z);\n\t\tadd(y,x,z);\n\t}\n\tfor (int i=1;i<=k;++i)\n\t{\n\t\tcin>>x;\n\t\tdis[x]=dis2[x]=0;\n\t\tq.push(make_reads(x,0));\n\t}\n\tdijkstra();\n\treturn 0;\n}",
        "postTime": 1579589742,
        "uid": 148025,
        "name": "zhouhuanyi",
        "ccfLevel": 9,
        "title": "[IOI2011]crocodile"
    },
    {
        "content": "\u5148\u8003\u8651\u4ec0\u4e48\u662f\u6700\u574f\u60c5\u51b5\uff0c\u73b0\u5728\u5047\u8bbe\u4f60\u662f\u8fd9\u53ea\u9cc4\u9c7c\uff0c\u4f60\u4f1a\u600e\u4e48\u5835\uff1f\n\n\u663e\u7136\uff0c\u4f60\u4f1a\u5835\u5728\u6700\u77ed\u8def\u4e0a\uff0c\u6216\u8005\u8bf4\uff0c\u662f\u5835\u5728\u4ee5\u8003\u53e4\u5b66\u5bb6\u6240\u5728\u7684\u70b9\u4e3a\u8d77\u70b9\u7684\u6700\u77ed\u8def\u4e0a\u3002\n\n\u90a3\u4e48\uff0c\u4f5c\u4e3a\u8fd9\u4e2a\u8003\u53e4\u5b66\u5bb6\uff0c\u4ed6\u7684\u6700\u4f73\u9009\u9879\u662f\u6bcf\u6b21\u8d70\u9664\u53bb\u88ab\u5360\u7528\u7684\u9053\u8def\u7684\u6700\u5c0f\u7684\u6b21\u77ed\u8def\uff08\u56e0\u4e3a\u65e0\u8bba\u5728\u54ea\u4e2a\u70b9\u6700\u77ed\u8def\u90fd\u4f1a\u88ab\u5835\uff09\u3002\n\n\u6211\u4eec\u5148\u6765\u770b\u7279\u6b8a\u60c5\u51b5\uff0c\u5373\u7ed9\u7684\u56fe\u662f\u4e00\u68f5\u6811\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6811\u5f62 DP\uff0c\u6211\u4eec\u8bb0 $dis[x][0/1]$ \u5206\u522b\u8868\u793a\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u53ef\u5230\u8fbe\u7684\u6700\u77ed\u8def\u548c\u6b21\u77ed\u8def\u7684\u957f\u5ea6\u3002\u90a3\u4e48\u5bf9\u4e8e\u51fa\u53e3\u6d1e\u7a74 $k$\uff0c\u6709 $dis[k][0] = dis[k][1] = 0$\uff0c\u5bf9\u4e8e\u5176\u5b83\u8282\u70b9\uff0c\u8bbe $len_{x,y}$ \u4e3a $x$ \u5230 $y$ \u7684\u8fb9\u7684\u957f\u5ea6\uff0c\u6709 \n$$ dis[x][0] = \\min_{y \\in son(x)}(dis[y][1] + len_{x,y}) $$\n$ dis[x][1] $ \u540c\u7406\uff0c\u53ea\u4e0d\u8fc7\u662f\u6b21\u5c0f\u503c\u3002\n\n\u5bf9\u4e8e\u4e00\u822c\u60c5\u51b5\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u5ef6\u7eed\u8fd9\u79cd\u601d\u8def\uff0c\u4f46\u662f\u56e0\u4e3a\u4e0a\u9762\u7684\u65b9\u7a0b\u662f\u4ece\u4e0b\u5f80\u4e0a\u8f6c\u79fb\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ece\u51fa\u53e3\u5411\u8d77\u70b9\u8f6c\u79fb\u7684\u65b9\u6cd5\uff0c\u7528\u7c7b\u4f3c Dijkstra \u7684\u8fc7\u7a0b\u6765\u8fdb\u884c\u8f6c\u79fb\uff0c\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f $dp[0][1]$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1e5 + 10;\ntypedef pair<int, int> PII;\nvector<PII> node[MAXN];\nint n, m, k;\nint dis[MAXN];\nint dis_s[MAXN];\nbool vis[MAXN];\npriority_queue<PII, vector<PII>, greater<PII> > q;\nvoid dij()\n{\n    while (!q.empty())\n    {\n        int t = q.top().second;\n        q.pop();\n        if (vis[t])  continue;\n        vis[t] = true;\n        for (auto i : node[t])\n        {\n            if (dis[i.first] > dis_s[t] + i.second)\n            {\n                dis_s[i.first] = dis[i.first];\n                dis[i.first] = dis_s[t] + i.second;\n                q.push(make_pair(dis_s[i.first], i.first));\n            }\n            else if (dis_s[i.first] > dis_s[t] + i.second)\n            {\n                dis_s[i.first] = dis_s[t] + i.second;\n                q.push(make_pair(dis_s[i.first], i.first));\n            }\n        }\n    }\n}\nint main()\n{\n    memset(dis, 0x3f, sizeof(dis));\n    memset(dis_s, 0x3f, sizeof(dis_s));\n    cin >> n >> m >> k;\n    for (; m; m--)\n    {\n        int u, v, w;\n        cin >> u >> v >> w;\n        node[u].push_back(make_pair(v, w));\n        node[v].push_back(make_pair(u, w));\n    }\n    int tmp;\n    for (; k; k--)\n    {\n        cin >> tmp;\n        q.push(make_pair(0, tmp));\n        dis[tmp] = dis_s[tmp] = 0;\n    }\n    dij();\n    cout << dis_s[0] << endl;\n    return 0;\n}\n```",
        "postTime": 1665403283,
        "uid": 176335,
        "name": "\u677e\u9f20\u7684\u661f\u661f",
        "ccfLevel": 6,
        "title": "crocodile \u9898\u89e3"
    }
]