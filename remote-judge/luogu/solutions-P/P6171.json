[
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\u7ed9\u4e00\u4e2a\u5927\u77e9\u5f62\uff0c\u4e2d\u95f4\u6709\u4e00\u4e9b\u6a2a\u7ebf\u548c\u7ad6\u7ebf\uff0c\u8fd9\u4e9b\u7ebf\u53c8\u5c06\u6574\u4e2a\u5927\u77e9\u5f62\u5206\u6210    $(n+1)\\cdot(m+1)$ \u4e2a\u5c0f\u77e9\u5f62\uff0c\u95ee\u6700\u5c11\u5220\u6389\u591a\u957f\u7684\u7ebf\u6bb5\u53ef\u4ee5\u8ba9\u8fd9\u4e9b\u5c0f\u77e9\u5f62\u8fde\u901a\u3002\n\n# \u9898\u76ee\u601d\u8def\n\u5f88\u660e\u663e\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u9053\u9898\u62bd\u8c61\u6210\u4e00\u9053\u6700\u5c0f\u751f\u6210\u6811\u95ee\u9898\uff0c\u5c06\u4e00\u4e2a\u5c0f\u77e9\u5f62\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u5c0f\u77e9\u5f62\u548c\u56db\u4e2a\u65b9\u5411\u4e0a\u7684\u5176\u4ed6\u77e9\u5f62\u8fde\u8fb9\uff0c\u7531\u4e8e\u5c0f\u77e9\u5f62\u7684\u4e2a\u6570\u6700\u591a\u4e3a   $2001\\times 2001=4004001$\uff0c\u90a3\u4e48\u603b\u8fb9\u6570\u5373\u4e3a $4004001\\times 4=16016004$\uff0c\u7531\u4e8e\u8fd9\u9053\u9898\u4e2d\u7684\u8fb9\u662f\u65e0\u5411\u8fb9\uff0c\u6240\u4ee5\u6211\u4eec\u4e00\u6761\u8fb9\u4f1a\u88ab\u8fde\u4e24\u6b21\uff0c\u5220\u6389\u91cd\u590d\u7684\u90a3\u4e48\u603b\u8fb9\u6570\u5373\u4e3a $16016004\\div 2=8008002$ \u3002\u8fd9\u91cc\u6211\u4eec\u91c7\u7528\u7684\u662f kruskal   \u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u9700\u8981\u5e26\u4e0a\u4e00\u4e2a\u5e76\u67e5\u96c6\u7684\uff0c\u4ee3\u7801\u4e2d\u6211\u4f7f\u7528\u4e86\u542f\u53d1\u5f0f\u5408\u5e76\u548c\u8def\u5f84\u538b\u7f29\u4e24\u79cd\u4f18\u5316\u65b9\u5f0f\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nm\\alpha(nm))$ \uff0c$\\alpha(nm)$ \u53ef\u4ee5\u770b\u505a\u4e00\u4e2a\u5c0f\u4e8e 5 \u7684\u5e38\u6570\uff0c\u6240\u4ee5\u603b\u8fd0\u884c\u6b21\u6570\u5373\u4e3a $10^8$ \u5de6\u53f3\u3002\u5728\u672c\u673a\u4e0a\u4e0d\u5438\u6c27\u6700\u540e\u4e00\u4e2a\u6d4b\u8bd5\u70b9\u7528\u65f6 1.7s \u5de6\u53f3\uff0c\u4f46\u6d1b\u8c37\u4f1a\u8d85\u65f6\uff0c\u4e0d\u8fc7\u5438\u53e3\u6c27\u8fd8\u662f\u80fd\u591f\u8f7b\u677e\u8fc7\u7684\uff0c\u6700\u540e\u4e00\u4e2a\u6d4b\u8bd5\u70b9\u53ea\u7528\u4e86 0.7s\u3002\n\n# AC\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint cnt=0,n,m,a,b,x[2005],y[2005],f[4010005],rt[4010005],q1,q2,p;\nlong long ans1=0;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-') f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nstruct ok{\n\tint ans,w1,w2;\n}q[8020005];\ninline bool cmp(ok x,ok y){\n\treturn x.ans<y.ans;\n}\ninline int find(int k){\n\treturn k==f[k]?k:f[k]=find(f[k]);\n}\ninline int js(int x,int y){\n\treturn x*(m+1)+y+1;\n}\nsigned main(){ \n\ta=read(),b=read(),n=read(),m=read();\n\tfor(register int i=1;i<=n;i++) x[i]=read();\n\tfor(register int i=1;i<=m;i++) y[i]=read();\n\tsort(x+1,x+1+n);sort(y+1,y+1+m);\n\tx[n+1]=a;y[m+1]=b;\n\tfor(register int i=0;i<=n;i++){\n\t\tfor(register int j=0;j<=m;j++){\n\t\t\tp=js(i,j);\n\t\t\tf[p]=p;rt[p]=1;\n\t\t\tif(j!=m) q[++cnt].ans=x[i+1]-x[i],q[cnt].w1=p,q[cnt].w2=p+1;\n\t\t\tif(i!=n) q[++cnt].ans=y[j+1]-y[j],q[cnt].w1=p,q[cnt].w2=p+m+1;\n\t\t}\n\t}\n\tsort(q+1,q+1+cnt,cmp);\n\tfor(register int i=1;i<=cnt;i++){\n\t\tq1=find(q[i].w1),q2=find(q[i].w2);\n\t\tif(q1!=q2){\n\t\t\trt[q1]>rt[q2]?(f[q2]=f[q1],rt[q1]+=rt[q2]):(f[q1]=f[q2],rt[q2]+=rt[q1]);\n\t\t\tans1+=q[i].ans;\n\t\t}\t\n\t}\n\tprintf(\"%lld\",ans1); \n\treturn 0;\n}\n```\n",
        "postTime": 1642996071,
        "uid": 399606,
        "name": "Mu_tr",
        "ccfLevel": 7,
        "title": "P6171 \u9898\u89e3"
    },
    {
        "content": "\u76f8\u4fe1\u5927\u5bb6\u770b\u5230\u8fd9\u91cc\u7684\u65f6\u5019\uff0c\u5bf9\u9898\u76ee\u610f\u601d\u5df2\u7ecf\u6709\u4e86\u6df1\u5165\u7684\u4e86\u89e3\n\n\u9898\u76ee\u610f\u601d\u662f\u8bf4\u5c06\u56fe\u5f62\u5206\u5272\u6210$n*(n+1)$\u4e2a\u533a\u57df\n\n\u90a3\u4e48\u5c31\u662f\u5220\u9664$n*(n+1)-1$\u6761\u8fb9\n\n\u800c\u4e14\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u8fd9\u4e9b\u5220\u9664\u7684\u8fb9\u90fd\u6ca1\u6709\u7279\u6b8a\u7684\u6761\u4ef6\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u6bcf\u6b21\u5220\u8fb9\u7684\u65f6\u5019\u53ef\u4ee5\u8003\u8651\u8d2a\u5fc3\n\n\u5982\u679c\u8fd9\u6761\u8fb9\u5e73\u884c\u4e8e$x$\u8f74\u5c31\u5220\u53bb$m\u2212j+1$\u6761\u8be5\u8fb9\uff0c\u5982\u679c\u8fd9\u6761\u8fb9\u5e73\n\u884c\u4e8e$y$\u8f74\u5c31\u5220\u53bb$n\u2212i+1$\u6761\u8be5\u8fb9\n\n\u8fd9\u6837\u5b50\u64cd\u4f5c\u4e0b\u6765\uff0c\u6211\u4eec\u5c31\u4f1a\u53d1\u73b0\uff0c\u6211\u4eec\u6bcf\u4e00\u6b65\u5220\u8fb9\u90fd\u662f\u5220\u7684\u6700\n\u503c\uff0c\u6240\u4ee5\u8fd9\u6837\u5b50\u5220\u8fb9\u5220\u5b8c\u4e4b\u540e\uff0c\u6c42\u5230\u6700\u540e\u4e00\u4e2a\uff0c\u6211\u4eec\u627e\u5230\u7684\u4e00\n\u5b9a\u662f\u6700\u503c\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\ninline int read()\n{\n\tint x=0;\n\tbool f=0;\n\tchar c=getchar();\n\twhile (!isdigit(c))\n\t\t  f|=(c=='-'),c=getchar();\n\twhile (isdigit(c))\n\t\t  x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn f?-x:x;\n}\nvoid write(int x) {\n    if(x<0) {\n        putchar('-');\n        x=-x;\n    }\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\nint n,m;\nint a[50010];\nint b[50010];\nint x[50010];\nint y[50010];\nint A,B;\nint ans;\nint l,r;\nsigned main(){\n\tA=read();\n\tB=read();\n\tn=read();\n\tm=read();\n\tfor(register int i=1;i<=n;++i)\n\t\ta[i]=read();\n\tfor(register int i=1;i<=m;++i)\n\t\tb[i]=read();\n\tsort(a+1,a+n+1);\n\tsort(b+1,b+m+1);\n\tfor(register int i=1;i<=n;++i)\n\t\tx[i]=a[i]-a[i-1];\n\tx[n+1]=A-a[n];\n\tn++;\n\tfor(register int i=1;i<=m;++i)\n\t\ty[i]=b[i]-b[i-1];\n\ty[m+1]=B-b[m];\n\tm++;\n\tsort(x+1,x+n+1);\n\tsort(y+1,y+m+1);\n\tl=2;\n\tr=2;\n\tans=x[1]*(m-1)+y[1]*(n-1);\n\twhile(l<=n && r<=m)\n\t\t{\n\t\t\tif(x[l]<y[r])\n\t\t\t\t{\n\t\t\t\t\tans=ans+x[l]*(m-r+1);\n\t\t\t\t\tl++;\n\t\t\t\t}\n\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tans=ans+y[r]*(n-l+1);\n\t\t\t\t\tr++;\n\t\t\t\t}\n\t\t}\n\twrite(ans);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1611759190,
        "uid": 193541,
        "name": "\u7f9a\u7f8aWANG",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6171 \u3010[USACO16FEB]Fenced In G\u3011"
    },
    {
        "content": "\u6700\u5c0f\u751f\u6210\u6811\u7b97\u6cd5\n\n\n------------\n\u628a\u6bcf\u4e00\u4e2a\u683c\u5b50\u770b\u4f5c\u4e00\u4e2a\u70b9\uff0c\u4e24\u4e2a\u76f8\u90bb\u7684\u70b9\u4e4b\u95f4\u6805\u680f\u7684\u957f\u5ea6\u770b\u4f5c\u8fb9\u7684\u6743\u91cd\n\n\u7136\u540e\u5efa\u56fe\u8dd1Kruskal \n\n\n------------\n\u4e0a\u4ee3\u7801\uff08JAVA\uff09\uff1a\n```java\nimport java.util.*;\nimport java.io.*;\n\npublic class fencedin {\n\t\n\tstatic int[] parent;\n\n\tpublic static void main(String[] args) throws IOException {\n\t\t\n\t\tBufferedReader br = new BufferedReader(new FileReader(\"fencedin.in\"));\n\t\tPrintWriter pw = new PrintWriter(new File(\"fencedin.out\"));\n\t\t\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\t\n\t\tint A = Integer.parseInt(st.nextToken());   // [0, A] horizontal range\n\t\tint B = Integer.parseInt(st.nextToken());   // [0, B] vertical range\n\t\tint n = Integer.parseInt(st.nextToken());   // x=X[1], ..., X[n]\n\t\tint m = Integer.parseInt(st.nextToken());   // y=Y[1], ..., Y[m]\n\n\t\tint[] X = new int[n+2];  // vertical lines\n\t\tint[] Y = new int[m+2];  // horizontal lines\n\t\t\n\t\tfor(int j=1; j<=n; j++)\n\t\t\tX[j] = Integer.parseInt(br.readLine());\n\t\tX[n+1] = A;\n\t\t\n\t\tfor(int k=1; k<=m; k++)\n\t\t\tY[k] = Integer.parseInt(br.readLine());\n\t\tY[m+1] = B;\n\t\t\n\t\tArrays.sort(X);\n\t\tArrays.sort(Y);\n\t\t\n\t\tint[] deltaX = new int[n+1];  // vertical gaps\n\t\tint[] deltaY = new int[m+1];  // horizontal gaps\n\t\t\n\t\tfor(int j=0; j<=n; j++)\n\t\t\tdeltaX[j] = X[j+1] - X[j];\n\t\t\n\t\tfor(int k=0; k<=m; k++)\n\t\t\tdeltaY[k] = Y[k+1] - Y[k];\n\n\t\tArrays.sort(deltaX);\n\t\tArrays.sort(deltaY);\n\t\t\n\t\tint N1 = n+1;\n\t\tint M1 = m+1;\n\n\t\t// apply union-find on disjoint sets\n\t\t// Each set is represented by indices (j, k)\n\t\t// Fix j, and when k increases, the rectangles go up.\n\t\tparent = new int[N1*M1];\n\t\tfor(int u=0; u<N1*M1; u++)\n\t\t\tparent[u] = u;\n\t\t\n\t\tlong result = 0;   // sum of lengths of edges removed (connect nodes)\n\n\t\t// double indexing to visit each of deltaX and deltaY\n\t\tfor (int j = 0, k = 0; j < N1 || k < M1; ) {\n\t\t\tif (k == M1 || (j < N1 && deltaX[j] < deltaY[k])) {\n\t\t\t\tfor (int p = 0; p + 1 < M1; p++) {\n\t\t\t\t\tif (union(j*M1 + p, j*M1 + p + 1)) {  // one rectangle and above\n\t\t\t\t\t\tresult += deltaX[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t} \n\t\t\telse {\n\t\t\t\tfor (int q = 0; q + 1 < N1; q++) {\n\t\t\t\t\tif (union(q*M1 + k, (q+1)*M1 + k)) {  // one rectangle and to the right\n\t\t\t\t\t\tresult += deltaY[k];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpw.println(result);\n\t\tbr.close();\n\t\tpw.close();\n\t}\n\n\n\t// find the parent (or representative) of item k\n\tpublic static int find(int k) {\n\t    if( parent[k]==k ) { // k is the root (or representative)\n\t       return k;\n\t    }\n\t    else {\n\t       int krep = find( parent[k] );\n\t       parent[k] = krep;\n\t       return krep;\n\t    }\n\t}\n\n\t// merge two sets containing \"x\" and \"y\"\n\tpublic static boolean union(int x, int y) {\n\t    int xrep = find(x);\n\t    int yrep = find(y);\n\t    if( xrep==yrep )\n\t    \treturn false;\n\t    \n\t    parent[x]    = yrep;\n\t    parent[y]    = yrep;\n\t    parent[xrep] = yrep;\n\t    parent[yrep] = yrep;\n\t    return true;\n\t}\t\n}\n```\n",
        "postTime": 1588299969,
        "uid": 313656,
        "name": "OreoTheGreat",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6171 \u3010[USACO16FEB]Fenced In G\u3011"
    }
]