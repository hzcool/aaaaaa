[
    {
        "content": "\u5e0c\u671b\u5199\u7684\u80fd\u6bd4\u522b\u7684\u9898\u89e3\u66f4\u52a0\u8be6\u7ec6\n\n## \u5206\u6790\n\n\u8d1d\u897f\u9700\u8981\u8dd1\u5230\u6811\u7684\u53f6\u8282\u70b9\u624d\u884c\u3002\u6211\u4eec\u4e0d\u59a8\u73b0\u8bbe\u8d1d\u897f\u7684\u51fa\u53d1\u70b9\u4e3a\u6839\u3002\n\n\u6211\u4eec\u8981\u505a\u7684\u662f\u201c\u5c01\u9501\u70b9\u201d\uff0c\u5c31\u662f\u5728\u7ad9\u5728\u4e00\u4e2a\u70b9\u4e0a\u963b\u6b62\u8d1d\u897f\u901a\u884c\u3002\u4e00\u65e6\u51c6\u65f6\u7ad9\u5728\u70b9 $u$ \u4e0a\uff0c\u5c31\u7b49\u4e8e\u5c01\u9501\u4e86\u6574\u4e2a\u5b50\u6811\u5185\u7684\u70b9\uff0c\u56e0\u4e3a\u8d1d\u897f\u5c06\u65e0\u6cd5\u8fdb\u5165\u8fd9\u68f5\u5b50\u6811\u5185\u90e8\u3002\u76ee\u6807\u662f\u5c01\u9501\u6240\u6709\u53f6\u8282\u70b9\u3002\n\n\u6211\u4eec\u79f0\u4e00\u4e2a\u519c\u6c11\u8981\u7ad9\u7740\u5c01\u9501\u5b50\u6811\u7684\u70b9 $u$ \u4e3a\u5c01\u9501\u70b9\uff08\u81ea\u5df1\u778e\u626f\u7684\u540d\u5b57\uff09\u3002\n\n\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u8981\u5408\u7406\u5730\u5b89\u6392\u5c01\u9501\u70b9\u3002\u7531\u8d2a\u5fc3\u7684\u60f3\u6cd5\u53ef\u77e5\uff0c\u6211\u4eec\u505a\u5230\u6bcf\u4e2a\u53f6\u8282\u70b9\u53ea\u88ab\u4e00\u4e2a\u5c01\u9501\u70b9\u5c01\u9501\u3002\n\n### \u5c01\u9501\u70b9\u7684\u89c4\u5219\n\n![image.png](https://i.loli.net/2020/03/24/n9IiDjz1s3kAoMu.png)\n\n\u6211\u4eec\u5148\u770b\u8fd9\u5f20\u56fe\u3002\u6211\u4eec\u5e0c\u671b\u786e\u5b9a\u6a59\u70b9\u80fd\u4e0d\u80fd\u6210\u4e3a\u4e00\u4e2a\u5c01\u9501\u70b9\u3002\u5c01\u9501\u70b9\u8981\u6c42\u80fd**\u6210\u529f\u51c6\u65f6**\u5730\u5c01\u9501\u4f4f\u8d1d\u897f\uff0c\u6240\u4ee5\u4e00\u5b9a\u9700\u8981\u5b58\u5728\u4e00\u4e2a\u51fa\u53e3\uff0c\u4f7f\u5f97\u519c\u592b\u80fd**\u5728\u8d1d\u897f\u62b5\u8fbe\u5e76\u7a7f\u8fc7\u5c01\u9501\u70b9\u8fdb\u5165\u5b50\u6811\u524d\u5230\u8fbe\u5c01\u9501\u70b9**\u3002\n\n\u56e0\u4e3a\u53ef\u4ee5\u8bf4\u51c6\u65f6\u5230\u8fbe\u5c01\u9501\u70b9\u662f\u8ba9\u8d1d\u897f\u4e0d\u8fdb\u5165\u5b50\u6811\u5185\u5730\u53f6\u8282\u70b9\u7684**\u552f\u4e00\u673a\u4f1a**\u3002\u4e00\u65e6\u6bd4\u8d1d\u897f\u665a\u5230\u8fbe\uff0c\u4f60\u5c31\u6c38\u8fdc\u4e5f\u8ffd\u4e0d\u4e0a\u5b83\u4e86\uff0c\u5b83\u4f1a\u957f\u9a71\u76f4\u5165\u9003\u8d70\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5236\u5b9a\u8fd9\u4e2a\u89c4\u5219\u3002\n\n![image.png](https://i.loli.net/2020/03/24/l7pCNsIQ8v3xqYn.png)\n\n\u9ec4\u8272\u5c0f\u70b9\u662f\u6700\u63a5\u8fd1\u5c01\u9501\u70b9\u7684\u51fa\u53e3\uff0c\u7d2b\u8272\u8def\u5f84\u662f\u519c\u592b\u5230\u8fbe\u5c01\u9501\u70b9\u7684\u8def\u5f84\uff0c\u9ed1\u8272\u8def\u5f84\u662f\u8d1d\u897f\u8bd5\u56fe\u5230\u8fbe\u5c01\u9501\u70b9\u7136\u540e\u957f\u9a71\u76f4\u5165\u9003\u8dd1\u7684\u8def\u5f84\u3002\n\n\u663e\u7136\uff0c\u6211\u4eec\u9700\u8981\u7d2b\u8272\u8def\u5f84\u957f\u5ea6$\\le$\u9ed1\u8272\u8def\u5f84\u957f\u5ea6\u3002\n\n\u8fd8\u6709\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u662f\u6700\u4f18\u89e3\uff0c\u4e00\u65e6\u7236\u4eb2\u53ef\u4ee5\u505a\u5c01\u9501\u70b9\uff0c\u90a3\u4e48\u513f\u5b50\u5c31\u4e0d\u7528\u518d\u505a\u5c01\u9501\u70b9\u4e86\u3002\n\n![image.png](https://i.loli.net/2020/03/25/tiDeMZXbhK28naL.png)\n\n\u6211\u4eec\u5047\u8bbe\u6a59\u70b9\u662f\u4e00\u4e2a\u5c01\u9501\u70b9\u3002\u56e0\u4e3a\u7236\u4eb2\u5df2\u7ecf\u5c01\u9501\u4e86\u6574\u4e2a\u5b50\u6811\uff0c\u6240\u4ee5\u513f\u5b50\u5c31\u4e0d\u7528\uff08\u6a59\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\uff09\u5c31\u4e0d\u7528\u518d\u4f5c\u4e3a\u5c01\u9501\u70b9\u6d6a\u8d39\u519c\u6c11\u8d44\u6e90\u4e86\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u70b9 $u$ \u5e94\u4e0d\u5e94\u8be5\u662f\u5c01\u9501\u70b9\u7684\u6761\u4ef6\uff1a  \n$d_{u,root}\\le d_{u,p_u}$ \u4e14 $d_{fa_u,root}\\le d_{u,p_{fa_u}}$\n\n\u5176\u4e2d $p_u$ \u4ee3\u8868\u79bb $u$ \u6700\u8fd1\u7684\u53f6\u8282\u70b9\uff0c$d$ \u4ee3\u8868\u4e24\u70b9\u8ddd\u79bb\u3002\n\n### \u7b97\u6cd5\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6839\u8282\u70b9\uff08\u5c31\u662f\u51fa\u53d1\u70b9\uff09\uff1a  \n\u5148\u66b4\u529b dfs \u6c42\u51fa $p_u$ \u548c $fa_u$ \u548c $d_{u,root}$ \u548c $d_{u,p_u}$\uff0c\u7136\u540e\u5224\u65ad\u662f\u4e0d\u662f\u4e00\u4e2a\u5c01\u9501\u70b9\u3002\u5982\u679c\u662f\u7684\uff0c```ans++```\u3002\n\n## \u4f18\u5316\n\u4e0a\u8ff0\u7b97\u6cd5\u662f $O(n^2)$ \u7684\uff0c\u672c\u8d28\u95ee\u9898\u662f\u6bcf\u6b21\u8981\u786e\u5b9a\u4e00\u4e2a\u6839\u3002\n\n\u4f46\u662f\uff0c\u6211\u4eec\u53d1\u73b0\u5176\u5b9e $d, p$ \u90fd\u662f\u548c\u6839\u65e0\u5173\u7684\uff0c\u5728\u65e0\u6839\u60c5\u51b5\u4e0b\u53ef\u4ee5\u505a\u51fa\u6765\u3002\u90a3\u4e48\u7f6a\u9b41\u7978\u9996\u5c31\u662f $fa$ \u6570\u7ec4\u3002\u6240\u4ee5\u6211\u4eec\u8981\u6362\u4e00\u79cd\u7edf\u8ba1\u786e\u5b9a\u5c01\u9501\u70b9\u7684\u65b9\u5f0f\u3002\n\n\u6211\u4eec\u8bd5\u56fe\u8981\u53bb\u6389$fa$\u7684\u5f71\u54cd\u3002\n\n\u8bd5\u60f3\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u8ba1\u7b97 $fa$\uff0c$ans$ \u4f1a\u662f\u4ec0\u4e48\uff1f\n\n\u4e0b\u56fe\u4e2d\u84dd\u8272\u7684\u70b9\u662f\u5c01\u9501\u70b9\uff0c\u7eff\u8272\u4e09\u89d2\u4ee3\u8868\u4e86\u8fd9\u68f5\u6811\uff08\u770b\u8d77\u6765\u66f4\u50cf\u4e00\u4e2a\u5c71\u2026\u2026\u4e0d\u7ba1\u4e86\uff09\n\n![image.png](https://i.loli.net/2020/03/25/eyEYxkX7TGzg29o.png)\n\n\u90a3\u4e48\u88ab\u6de1\u84dd\u8272\u8986\u76d6\u5230\u7684\u90e8\u5206\u90fd\u4f1a\u88ab\u7edf\u8ba1\u5230\u3002\u90a3\u4e48\u6211\u4eec\u4fdd\u6301\u8fd9\u4e9b\u70b9\u90fd\u88ab\u7edf\u8ba1\u7684\u72b6\u6001\uff0c\u9700\u8981\u6539\u53d8\u8fd9\u4e9b\u70b9\u7684\u6743\u503c\uff0c\u8ba9**\u8fd9\u4e9b\u88ab\u8986\u76d6\u5230\u7684\u70b9\u7684\u6743\u503c\u4e4b\u548c=\u5c01\u9501\u70b9\u7684\u6570\u91cf**\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u770b\u4e0a\u53bb\u5f88\u68d8\u624b\u554a\u3002\u4e0d\u8fc7\u6211\u4eec\u5bf9\u5176\u8fdb\u884c\u5206\u5b50\u6811\u8003\u8651\u3002\n\n\uff08\u6211\u4eec\u5148\u4e0d\u8003\u8651\u5c01\u9501\u70b9\u662f\u6839\u8282\u70b9\u7684\u60c5\u51b5\uff09\n\n![image.png](https://i.loli.net/2020/03/25/NW2gZweRkXO5AKu.png)\n\n\u6211\u4eec\u9700\u8981\u5b50\u6811\u6743\u503c\u548c\u662f $1$\uff0c\u800c\u4e14\u6743\u503c\u53ea\u4e0e\u81ea\u5df1\u6709\u5173\u3002\n\n\u518d\u5177\u4f53\u4e00\u70b9\uff0c\u80af\u5b9a\u5b58\u5728\u4e00\u4e9b\u64cd\u4f5c\uff0c\u4f7f\u5f97\u4e00\u4e9b\u70b9\u7684\u6743\u503c\u548c\u4e3a $0$ (\u5426\u5219\u6ca1\u6cd5\u505a)\u3002\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u6811\u4e0a\u5dee\u5206\uff0c\u56e0\u4e3a\u4e24\u4e2a\u8282\u70b9\u6743\u503c $+1$, LCA \u6743\u503c $-2$\uff0c\u6784\u6210\u4e86\u5929\u7136\u7684\u62b5\u6d88\u64cd\u4f5c\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b50\u6811\u4e2d\u7684\u53f6\u8282\u70b9\u7684\u6743\u503c\u4e3a $1$\uff0c\u5176\u4ed6\u8282\u70b9\u7684\u6743\u503c\u4e3a $1-$\u513f\u5b50\u6570\u91cf\uff0c\u4e5f\u5c31\u662f $2-$\u8fd9\u4e2a\u8282\u70b9\u7684\u5ea6\u6570\u3002\n\n\u6240\u4ee5\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u6743\u503c\u662f$2-$\u8fd9\u4e2a\u8282\u70b9\u7684\u5ea6\u6570\uff08$deg_u$\uff09\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6839\u8282\u70b9\uff0c\u6211\u4eec\u8981\u6c42 $\\sum_{u|d_{root,u}\\ge d{p_u,u}} 2-deg_u$\n\n\u5176\u4e2d\u91cc\u9762\u7684\u4e1c\u897f\u9664\u4e86 $d_{root,u} $\u90fd\u548c $root$ \u65e0\u5173\uff0c\u800c $d_{root,u}$ \u662f $root,u$ \u7684\u8def\u5f84\u957f\u5ea6\uff0c\u6240\u4ee5\u5c31\u662f\u7edf\u8ba1\u6709\u591a\u5c11\u70b9\u5bf9 $(u,v)$ \u6ee1\u8db3 $\\sum_{u|d_{v,u}\\ge d{p_u,u}} 2-deg_u$\u3002\n\n\u5176\u5b9e\uff0c\u4e0a\u9762\u7684\u4e1c\u897f\uff0c\u5c31\u662f\u6811\u5f62\u5dee\u5206\u7684\u4e00\u4e9b\u57fa\u7840\u7684\u516c\u5f0f\u7684\u4e1c\u897f\u3002\n\n\u4e0a\u8ff0\u53ef\u4ee5\u7528\u70b9\u5206\u6cbb\u5b9e\u73b0\uff0c\u590d\u6742\u5ea6\u662f $O(nlogn)$\n\n\u8fd9\u79cd\u4e0d\u7b49\u5f0f\u70b9\u5bf9\u7684\u70b9\u6743\u7edf\u8ba1\u53ef\u4ee5\u7528\u8fd9\u79cd\u70b9\u5206\u6cbb\u6a21\u677f\u5b9e\u73b0\uff1a[\u6211\u7684\u535a\u5ba2\u91cc\u9762\u7684\u6a21\u677f\u9898](https://www.luogu.com.cn/blog/forever-captain/dian-fen-zhi)\n\n\u5bf9\u4e8e ```cal``` \u51fd\u6570\u7684\u5b9e\u73b0\uff1a\n\n(\u4e0b\u9762\u8bf7\u4f60\u5fd8\u6389 $d$ \u539f\u6765\u7684\u542b\u4e49\uff0c\u8bb0\u4f4f\u4ed6\u7684\u65b0\u7684\u542b\u4e49)\n\n\u6211\u4eec\u5047\u8bbe$d$\u4e3a$u$\u5728\u4ee5 $r$ \u4e3a\u6839\u7684\u6df1\u5ea6\uff0c\u4e8e\u662f\u9898\u76ee\u7684\u6761\u4ef6\u53d8\u6210\u4e86 $d_v\\ge -d_u + d_{p_u}$\n\n\u5148\u5728 update \u7684\u65f6\u5019\u66f4\u65b0\u6570\u7ec4 $ca_i=d_{p_v}$, $cb_i=-d_u+d_{p_u}$\uff0c\u7136\u540e\u7528\u7ed3\u6784\u4f53\u987a\u4fbf\u628a $\u8fd9\u4e2a\u8282\u70b9\u7684\u6807\u53f7\u548c\u6743\u503c\u7ed9\u5e26\u4e0a$\n\n\u5728 cal \u4e2d\u5148\u6392\u4e2a\u5e8f\uff0c\u7136\u540e\u4ece\u5de6\u5230\u53f3\u904d\u5386 $ca$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a$ca$\uff0c\u6ee1\u8db3\u6761\u4ef6\u7684 $cb$ \u662f\u4e2a\u524d\u7f00\uff0c\u4e8e\u662f\u52a8\u6001\u7ef4\u62a4\u524d\u7f00\u548c\u5c31\u884c\u4e86\u3002\n\n\u4ee3\u7801\u4e2d\u7528 $dp_u$ \u4ee3\u8868 $d_{p_u}$\n\n**\u91cd\u8981\u7684\u4e8b\u60c5** dfz \u51fd\u6570\u7684 find_root \u91cc\u9762\u548c\u522b\u7684\u4e00\u4e9b\u9898\u89e3\u4e0d\u4e00\u6837\uff0c\u8fd9\u4e9b\u533a\u522b\u5f71\u54cd\u5230\u4e86\u4ee3\u7801\u7684\u8fd0\u884c\u901f\u5ea6\u3002\u5177\u4f53\u6ce8\u610f\u4e8b\u9879\u53c2\u8003[\u8fd9\u4e2a\u8ba8\u8bba\u7684\u7b2c2\uff0c3\u9875\u67d0\u91d1\u94a9\u5927\u4f6c\u7684\u8bdd\uff0c\u987a\u4fbf%\u4ed6](https://www.luogu.com.cn/discuss/show/207604?page=2)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=7*1e5;\nstruct edge{int to,nxt,w;}e[N*2]; int hd[N],tot;\nvoid add(int u,int v,int w){e[++tot]=(edge){v,hd[u],w};hd[u]=tot;}\nint n,ans[N];\n\nint d[N],deg[N],p[N],dp[N],sz[N];\nvoid dfs_down(int u,int fa){\n\tsz[u]=1;\n\tfor(int i=hd[u],v;i;i=e[i].nxt)\n\t\tif((v=e[i].to)!=fa){\n\t\t\td[v]=d[u]+e[i].w,deg[v]++,deg[u]++;\n\t\t\tdfs_down(v,u); sz[u]+=sz[v];\n\t\t\tif(dp[v]+e[i].w<=dp[u]) p[u]=p[v],dp[u]=dp[v]+e[i].w;\n\t\t}\n\tif(deg[u]==1) p[u]=u,dp[u]=0;\n}\nvoid dfs_up(int u,int fa){\n\tfor(int i=hd[u],v;i;i=e[i].nxt)\n\t\tif((v=e[i].to)!=fa){\n\t\t\tif(dp[u]+e[i].w<=dp[v]) p[v]=p[u],dp[v]=dp[u]+e[i].w;\n\t\t\tdfs_up(v,u);\n\t\t}\n}\n\nint mx[N]; bool vst[N];\nint find_root(int u,int fa,int cnt,int root){\n\tsz[u]=1,mx[u]=0;\n\tfor(int i=hd[u],v;i;i=e[i].nxt)\n\t\tif((v=e[i].to)!=fa&&!vst[v]){\n\t\t\troot=find_root(v,u,cnt,root);\n\t\t\tsz[u]+=sz[v]; mx[u]=max(mx[u],sz[v]);\n\t\t}\n\tmx[u]=max(mx[u],cnt-sz[u]); if(mx[u]<=mx[root]) root=u;\n\treturn root;\n}\n\nstruct as{int id,dis;}ca[N];\nstruct bs{int val,dis;}cb[N];\nbool cmpa(const as&a,const as&b){return a.dis<b.dis;}\nbool cmpb(const bs&a,const bs&b){return a.dis<b.dis;}\nint cnt;\n\nvoid update(int u,int fa){\n\tca[++cnt]=(as){u,d[u]},cb[cnt]=(bs){2-deg[u],dp[u]-d[u]};\n\tfor(int i=hd[u],v;i;i=e[i].nxt)\n\t\tif((v=e[i].to)!=fa&&!vst[v]){\n\t\t\td[v]=d[u]+e[i].w; \n\t\t\tupdate(v,u);\n\t\t}\n}\n\nvoid cal(int u,int base,int sig,int ret=0){\n\td[u]=base; cnt=0; update(u,0);\n\tsort(ca+1,ca+cnt+1,cmpa),sort(cb+1,cb+cnt+1,cmpb);\n\tint j=0,sum=0;\n\tfor(int i=1;i<=cnt;i++){\n\t\twhile(j<cnt&&cb[j+1].dis<=ca[i].dis) j++,sum+=cb[j].val;\n\t\tans[ca[i].id]+=sig*sum;\n\t}\n}\n\nint dfz(int u,int wtcl){\n\tvst[u]=1;\n\tcal(u,0,1);\n\tfor(int i=hd[u],v,tmp;i;i=e[i].nxt)\n\t\tif(!vst[(v=e[i].to)]){\n\t\t\tcal(v,e[i].w,-1);\n\t\t\tint root=find_root(v,u,tmp=(sz[v]>sz[u]?wtcl-sz[u]:sz[v]),0);\n\t\t\tdfz(root,tmp);\n\t\t}\n} \n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1,u,v,w;i<n;i++)\n\t\tscanf(\"%d%d\",&u,&v),add(u,v,1),add(v,u,1);\n\tmemset(dp,0x3f,sizeof(dp)),memset(mx,0x3f,sizeof(mx));\n\tdfs_down(1,0); dfs_up(1,0);\n\tint root=find_root(1,0,n,0); dfz(root,n);\n\tfor(int i=1;i<=n;i++) printf(\"%d\\n\",deg[i]==1?1:ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1585200420,
        "uid": 180652,
        "name": "_lgswdn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4183 \u3010[USACO18JAN]Cow at Large P\u3011"
    },
    {
        "content": "~~\u611f\u89c9\u697c\u4e0b\u5199\u7684\u6709\u70b9\u4e0d\u6e05\u695a\uff0c\u53cd\u6b63\u6211\u770b\u4e0d\u61c2\uff0c\u8fd9\u4e48\u8bf4dalao\u662f\u4e0d\u662f\u6709\u70b9\u4e0d\u597d~~\n\n\u663e\u7136\uff0c$g_i$\u4e3a$i$\u5230\u6700\u8fd1\u53f6\u5b50\u8282\u70b9\u7684\u8ddd\u79bb\uff0c$d_i$\u4e3a$i$\u7684\u5ea6\u6570\n\n\u5047\u8bbe\u6211\u4eec\u8981\u6c42\u7684\u662f$ans_u$\uff0c\u5982\u679c\u628a$u$\u4f5c\u4e3a\u6839\uff0c$dep_i\u2265g_i$\u5219$i$\u8fd9\u68f5\u5b50\u6811\u8d21\u732e\u4e3a$1$\u5c31\u80fd\u62e6\u622a$u$\uff0c\u4f46\u4e3a\u4e86\u4fdd\u8bc1\u552f\u4e00\u6027\uff0c$dep_i\u2265g_i \\&\\& dep_{fa_{i}}<g_{fa_{i}}$\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2)$\n\n\u70b9\u5bf9\u8d21\u732e\uff0c\u8003\u8651\u7528\u70b9\u5206\u6cbb\u4f18\u5316\n\n\u5bf9\u4e8e\u4e00\u68f5**\u5b50\u6811**\uff0c$\\sum\\limits^m d_i=2m-1,\\therefore 1=\\sum\\limits^m (2-d_i)$\uff0c\u6839\u636e\u5b50\u6811\u8d21\u732e\u5355\u8c03\u6027\uff0c$ans_u=\\sum\\limits_{i=1}^n [dis(u,i)\u2265g_i](2-d_i)$\n\n\u81f3\u6b64\uff0c\u8be5\u9898\u8f6c\u6362\u6210\u70b9\u5206\u6cbb\u6a21\u677f\u9898\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(nlog^2n)$\n\n\u4e71\u4e03\u516b\u7cdf\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int LL;\nconst LL maxn=1e5,inf=0x3f3f3f3f;\nstruct node{\n    LL to,nxt;\n}dis[maxn<<1];\nLL n,root,num,up,N,mi,tim;\nLL ans[maxn],head[maxn],d[maxn],g[maxn],tree[maxn],visit[maxn],size[maxn],V[maxn];\ninline void Add(LL u,LL v){\n    dis[++num]=(node){v,head[u]}, head[u]=num;\n    ++d[v];\n}\nvoid Dfs1(LL u,LL f){\n    if(d[u]==1) g[u]=0;\n    for(LL i=head[u];i;i=dis[i].nxt){\n        LL v(dis[i].to);\n        if(v==f) continue;\n        Dfs1(v,u);\n        g[u]=min(g[u],g[v]+1);\n    }\n}\nvoid Dfs2(LL u,LL f){\n    for(LL i=head[u];i;i=dis[i].nxt){\n        LL v(dis[i].to);\n        if(v==f) continue;\n        g[v]=min(g[v],g[u]+1);\n        Dfs2(v,u);\n    }\n}\n\ninline LL Lowbit(LL x){ return x&-x; }\ninline LL Query(LL x){ LL ret(0); x+=up; for(;x;x-=Lowbit(x)) ret+=tree[x]; return ret; }\ninline void Modify(LL x,LL val){ x+=up; for(;x<=100000;x+=Lowbit(x)) tree[x]+=val; }\nvoid Dfs(LL u){\n    LL mx(0); visit[u]=true; size[u]=1;\n    for(LL i=head[u];i;i=dis[i].nxt){\n        LL v(dis[i].to);\n        if(visit[v]) continue;\n        Dfs(v); size[u]+=size[v];\n        mx=max(mx,size[v]);\n    }mx=max(mx,N-size[u]);\n    if(mi>mx) mi=mx,root=u;\n    visit[u]=false;\n}\nvoid Get(LL u,LL dt){\n    ans[u]+=Query(dt);\n    visit[u]=true;\n    for(LL i=head[u];i;i=dis[i].nxt){\n        LL v(dis[i].to);\n        if(visit[v]) continue;\n        Get(v,dt+1);\n    }visit[u]=false;\n}\nvoid Up(LL u,LL dt){\n    Modify(g[u]-dt,2-d[u]);\n    visit[u]=true;\n    for(LL i=head[u];i;i=dis[i].nxt){\n        LL v(dis[i].to);\n        if(visit[v]) continue;\n        Up(v,dt+1);\n    }visit[u]=false;\n}\nvoid Clear(LL u,LL dt){\n    Modify(g[u]-dt,-(2-d[u]));\n    visit[u]=true;\n    for(LL i=head[u];i;i=dis[i].nxt){\n        LL v(dis[i].to);\n        if(visit[v]) continue;\n        Clear(v,dt+1);\n    }visit[u]=false;\n}\nvoid Div(LL u){\n    mi=inf, Dfs(u); \n    u=root;\n    visit[u]=true;\n    LL top(0);\n    for(LL i=head[u];i;i=dis[i].nxt){\n        LL v(dis[i].to);\n        if(visit[v]) continue;\n        V[++top]=v;\n        Get(v,1);\n        Up(v,1);\n    }\n    for(LL i=head[u];i;i=dis[i].nxt){\n        LL v(dis[i].to);\n        if(visit[v]) continue;\n        Clear(v,1);\n    }\n    Modify(g[u],2-d[u]);\n    for(LL i=top;i>=1;--i){\n        LL v(V[i]);\n        Get(v,1);\n        Up(v,1);\n    }ans[u]+=Query(0);\n    Modify(g[u],-(2-d[u]));\n    for(LL i=head[u];i;i=dis[i].nxt){\n        LL v(dis[i].to);\n        if(visit[v]) continue;\n        Clear(v,1);\n    }\n    for(LL i=head[u],sum=N;i;i=dis[i].nxt){\n        LL v(dis[i].to);\n        if(visit[v]) continue;\n        N=(size[v]>size[u]?sum-size[u]:size[v]);\n        Div(v);\n    }\n}\nint main(){\n    cin>>n; up=n;\n    for(LL i=1;i<n;++i){\n        LL u,v; cin>>u>>v;\n        Add(u,v), Add(v,u);\n    }\n    memset(g,inf,sizeof(g));\n    Dfs1(1,0), Dfs2(1,0);\n    N=n; Div(1);\n    for(LL i=1;i<=n;++i) if(d[i]==1) cout<<1<<endl;else cout<<ans[i]<<endl;\n    return 0;\n}\n```",
        "postTime": 1551412576,
        "uid": 88804,
        "name": "y2823774827y",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4183 \u3010[USACO18JAN]Cow at Large P\u3011"
    },
    {
        "content": "## Solution\n\n### \u7ed3\u8bba\n\n\u5982\u679c\u6211\u4eec\u628a\u73b0\u5728Bessie\u7684\u4f4d\u7f6e\u4f5c\u4e3a\u6839\uff0c\u90a3\u4e48\u5982\u679c\u4e2a\u4e00\u70b9\u5230\u8fbe\u6700\u8fd1\u7684\u53f6\u5b50\u8282\u70b9\u5c0f\u4e8e\u5b83\u7684\u6df1\u5ea6\uff0c\u90a3\u4e48\u4e00\u4e2a\u519c\u592b\u5c31\u591f\uff0c\u53cd\u4e4b\u4e3a\u6240\u6709\u5b50\u6811\u6240\u9700\u519c\u592b\u4e4b\u548c\u3002\n\n#### \u8bc1\u660e\n\n\u5982\u679c\u73b0\u5728\u4e00\u70b9\u5230\u8fbe\u6700\u8fd1\u7684\u53f6\u5b50\u8282\u70b9\u5c0f\u4e8e\u5b83\u7684\u6df1\u5ea6\uff0c\u90a3\u4e48\u6211\u5728\u6700\u8fd1\u53f6\u5b50\u8282\u70b9\u5b89\u6392\u4e00\u4e2a\u519c\u592b\uff0c\u4e00\u5b9a\u6bd4Bessie\u5148\u5230\u8fd9\u4e2a\u70b9\uff0c\u53ef\u4ee5\u76f4\u63a5\u5835\u4f4f\u6574\u4e2a\u5b50\u6811\uff0c\u6240\u4ee5\u4e00\u4e2a\u4eba\u5c31\u591f\u3002\n\n\u53cd\u4e4b\uff0c\u5982\u679c\u6240\u6709\u519c\u592b\u5230\u8fbe\u90fd\u6bd4Bessie\u665a\uff0c\u90a3\u4e48\u9700\u8981\u6bcf\u4e2a\u5b50\u6811\u90fd\u5e03\u63a7\u5230\uff0c\u56e0\u4e3a\u4e0d\u77e5\u9053Bessie\u4f1a\u5f80\u54ea\u8d70\u3002\u6240\u4ee5\u662f\u6240\u6709\u5b50\u6811\u6240\u9700\u519c\u592b\u4e4b\u548c\u3002\n\n### \u6027\u8d28\n\n\u6839\u636e\u4e0a\u8ff0\u7ed3\u8bba\uff0c\u6211\u4eec\u5c3d\u91cf\u627e\u5230\u6240\u6709\u53ea\u9700\u8981\u4e00\u4e2a\u519c\u592b\u4e14\u4e0d\u80fd\u518d\u5927\u7684\u5b50\u6811\u4e2a\u6570\uff0c\u7136\u540e\u8fd9\u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e0a\u8ff0\u5b50\u6811\u9700\u8981\u6ee1\u8db3\u7684\u6027\u8d28\u5982\u4e0b\uff1a$dep[i]>g[i],dep[fa[i]]<g[i] $  \uff08 $g[i]$ \u4e3a\u8ddd\u79bb $i$ \u6700\u8fd1\u7684\u53f6\u5b50\u8282\u70b9\u8ddd\u79bb\uff09\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u6837\u7684\u8282\u70b9\u5728\u4e00\u4e2a\u6ee1\u8db3\u4ec5\u9700\u4e00\u4e2a\u519c\u592b\u5c31\u80fd\u63a7\u5236\u7684\u8fde\u901a\u5757\u91cc\u53ea\u6709\u4e00\u4e2a\u3002\n\n### \u6784\u9020\n\n\u5bf9\u4e8e\u4efb\u610f\u5b50\u6811\uff0c\u90fd\u6ee1\u8db3\u4e0b\u9762\u8fd9\u4e2a\u7ed3\u8bba\uff1a\n\n$\\sum deg[i] = 2m-1$ ( $deg[i]$ \u662f\u70b9\u7684\u5ea6\u6570 \uff0c$m$ \u4e3a\u70b9\u7684\u4e2a\u6570 )\n\n\u53d8\u5f62\u53ef\u5f97\uff1a$\\sum (2-deg[i])=1$ \u6240\u4ee5\u53ef\u4ee5\u5f97\u5230\u5bf9\u4e8e\u4e00\u68f5\u5b50\u6811\u6ee1\u8db3\u8fd9\u6837\u4e00\u4e2a\u6761\u4ef6\u3002\n\n### \u70b9\u5206\u6cbb\n\n\u8fd9\u4e2a\u6761\u4ef6\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u6211\u4eec\u8981\u6c42\u7684\u662f\u6ee1\u8db3\u53ea\u9700\u4e00\u4e2a\u519c\u592b\u7684\u70b9\u7684\u8fde\u901a\u5757\uff0c\u8fd9\u4e2a\u8fde\u901a\u5757\u5fc5\u5b9a\u662f\u4e00\u4e2a\u5b50\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u4e00\u4e2a\u8fde\u901a\u5b50\u6811\u53ea\u8d21\u732e1\u3002\u8fd9\u548c\u4e0a\u9762\u7684\u6784\u9020\u6b63\u597d\u543b\u5408\uff0c\u56e0\u4e3a\u4e0a\u9762\u7684\u6784\u9020\u4e5f\u662f\u8ba9\u4e00\u4e2a\u5b50\u6811\u5185\u53ea\u8d21\u732e\u4e00\u4e2a\u3002\n\n\u4f46\u522b\u5fd8\u4e86\u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u5224\u65ad\u6761\u4ef6 $dis(u,i)>g[i]$ \uff0c\u6240\u4ee5\u7b54\u6848\u8868\u8fbe\u5f0f\u4e3a $ans[u]=\\sum_{1}^n [dis(u,i)>g[i]](2-deg[i])$ \u3002\n\n### \u590d\u6742\u5ea6\uff1a $O(nlog_{2}n)$\n\n## Code\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#include <iostream>\n#include <vector>\n#define MAXN 70005 \n#define int long long\nusing namespace std;\n\nvector<int>G[MAXN];\nint n,sum,root,siz[MAXN],son[MAXN];\nbool vis[MAXN];\n\nvoid getroot(int u,int fa)\n{\n    siz[u]=1;son[u]=0;\n    for(int i=0;i<G[u].size();i++)\n    {\n        int v=G[u][i];\n        if(v==fa || vis[v])continue;\n        getroot(v,u);\n        siz[u]+=siz[v];\n        son[u]=max(son[u],siz[v]);\n    }\n    son[u]=max(son[u],sum-siz[u]);\n    if(son[u]<son[root])root=u;\n}\n\nint g[MAXN],dep[MAXN],du[MAXN];\nvoid dfs1(int u,int father,int depth)\n{\n    dep[u]=depth;\n    g[u]=2147483647;\n    if(du[u]==1)g[u]=0;\n    for(int i=0;i<G[u].size();i++)\n    {\n        int v=G[u][i];\n        if(v==father)continue;\n        dfs1(v,u,depth+1);\n        g[u]=min(g[u],g[v]+1);\n    }\n}\n\nvoid dfs2(int u,int father)\n{\n    for(int i=0;i<G[u].size();i++)\n    {\n        int v=G[u][i];\n        if(v==father)continue;\n        g[v]=min(g[v],g[u]+1);\n        dfs2(v,u);\n    }\n}\n\nint d[MAXN];\n\nvoid getdis(int u,int father,int cur)\n{\n    d[u]=cur;\n    for(int i=0;i<G[u].size();i++)\n    {\n        int v=G[u][i];\n        if(v==father || vis[v])continue;\n        getdis(v,u,cur+1);\n    }\n}\n\nstruct node{\n    int dg,deg;\n    bool operator<(const node a)const\n    {\n        return dg<a.dg;\n    }\n}q[MAXN];\n\nstruct bond{\n    int id,dis;\n    bool operator<(const bond a)const\n    {\n        return dis<a.dis;\n    }\n}p[MAXN];\n\nint ans[MAXN];\n\nint tot=0;\nvoid addin(int u,int father)\n{\n    p[++tot]=(bond){u,d[u]};\n    q[tot]=(node){g[u]-d[u],2-du[u]};\n    for(int i=0;i<G[u].size();i++)\n    {\n        int v=G[u][i];\n        if(v==father || vis[v])continue;\n        addin(v,u);\n    }\n}\n\nvoid calc(int u,int father,int type)\n{\n    tot=0;\n    addin(u,father);\n    sort(p+1,p+tot+1);\n    sort(q+1,q+tot+1);\n    int Sum=0,cursor=0;\n    for(int i=1;i<=tot;i++)\n    {\n        while(cursor<tot && p[i].dis>=q[cursor+1].dg)\n        {\n            cursor++;\n            Sum+=q[cursor].deg;\n        }\n        ans[p[i].id]+=type*Sum;\n    }\n}\n\nvoid solve(int u)\n{\n    vis[u]=1;\n    getdis(u,0,0);\n    calc(u,0,1);\n    for(int i=0;i<G[u].size();i++)\n    {\n        int v=G[u][i];\n        if(vis[v])continue;\n        calc(v,u,-1);\n        sum=siz[v];\n        root=0;\n        getroot(v,u);\n        solve(root);\n    }\n}\n\nsigned main()\n{\n    cin>>n;\n    for(int i=1;i<n;i++)\n    {\n        int x,y;\n        cin>>x>>y;\n        G[x].push_back(y);\n        G[y].push_back(x);\n        du[x]++;du[y]++;\n    }\n    dfs1(1,0,1);dfs2(1,0);\n    root=0;sum=son[0]=n;getroot(1,0);\n    solve(root);\n    for(int i=1;i<=n;i++)\n        if(du[i]==1)ans[i]=1;\n    for(int i=1;i<=n;i++)\n        cout<<ans[i]<<endl;\n    return 0;\n}\n```\n\n",
        "postTime": 1554050017,
        "uid": 63925,
        "name": "joe19025",
        "ccfLevel": 0,
        "title": "\u70b9\u5206\u6cbb\u2014\u2014P4183 [USACO18JAN]Cow at Large P"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u5199\u535a\u5ba2\uff0c\u5e0c\u671b\u4e0d\u4f1a\u88ab\u9a82QAQ\n\n\u4ece\u66b4\u529b\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u5982\u679c\u6211\u4eec$O(n)$\u679a\u4e3e\u6839\u8282\u70b9\uff0c\u6709\u6ca1\u6709\u529e\u6cd5\u5728$O(n)$\u7684\u65f6\u95f4\u5185\u627e\u5230\u7b54\u6848\u5462\uff1f\n\n\u6b64\u65f6\u5982\u679c\u7528\u6811\u5f62$dp$\u7684\u60f3\u6cd5\uff0c\u53d1\u73b0\u662f\u53ef\u505a\u7684\uff0c\u56e0\u4e3a\u53ef\u4ee5\u63a8\u5f97\u4ee5\u4e0b\u7684\u7ed3\u8bba\uff1a\n\n\u8bbe$x$\u4e3a\u6839\u8282\u70b9\uff0c$d[i]$\u4e3a$i$\u8282\u70b9\u5230$x$\u7684\u8ddd\u79bb(\u5373\u6df1\u5ea6)\uff0c$g[i]$\u4e3a$i$\u8282\u70b9\u5230\u6700\u8fd1\u7684\u51fa\u5165\u53e3(\u5373\u53f6\u5b50\u8282\u70b9)\u7684\u8ddd\u79bb\uff0c$ans_{x}$\u4e3a\u4ee5$x$\u4e3a\u6839\u8282\u70b9\u65f6\u7684\u7b54\u6848\u3002\n\n\u5982\u679c$d[i] \\geq g[i]$\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\uff0c\u4ee5$i$\u4e3a\u5b50\u6811\uff0c\u5bf9\u4e8e$x$\u4e3a\u6839\u65f6\u7684\u7b54\u6848\u8d21\u732e\u4e3a$1$\u3002\u5982\u4e0b\u56fe\uff1a\n\n![](https://img2018.cnblogs.com/blog/1597439/201909/1597439-20190924164920962-209274545.png)\n\n\n\u5728\u5bf9\u4e8e\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u4f1a\u5bf9$ans_{x}$\u4ea7\u751f$1$\u7684\u8d21\u732e\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u4eba\u4ece$i$\u4e3a\u6839\u7684\u5b50\u6811\u7684\u4efb\u610f\u53f6\u5b50\u8282\u70b9\u51fa\u53d1\uff0c\u53ef\u4ee5\u6bd4\u8d1d\u831c\u66f4\u5148\u5230\u8fbe$i$\n\n\u800c\u8fd9\u79cd\u89e3\u6cd5\u53ea\u9700\u8981\u5148$dfs$\u4e24\u6b21\u5f97\u5230$g[i]$\u548c$d[i]$\uff0c\u7136\u540e\u4e00\u6b21$dfs$\u5f97\u5230\u7b54\u6848\uff0c\u590d\u6742\u5ea6\u4e3a$O(n^{2})$\u3002\n\n\u4f46\u662f\u8fd9\u79cd\u505a\u6cd5\u4e0d\u591f\u7406\u60f3\uff0c\u6211\u4eec\u8fd8\u60f3\u66f4\u5feb\u7684\u5b9e\u73b0\u3002\n\n\u5982\u679c\u6211\u4eec\u5bf9\u6811\u7684\u6027\u8d28\u8f83\u4e3a\u719f\u6089\uff0c\u6211\u4eec\u77e5\u9053\uff1a\n\n$1$.\u5bf9\u4e8e\u6811\u7684\u67d0\u68f5\u5b50\u6811\uff0c\u5b50\u6811\u6709m\u4e2a\u8282\u70b9\uff0c\u6709\uff1a$\\sum du[i]=2*m-1$\n\n$2$.\u5bf9\u4e8e\u67d0\u68f5\u6811\uff0c\u6811\u6709n\u4e2a\u8282\u70b9\uff0c\u6709\uff1a$\\sum du[i]=2*n-2$\n\n$PS$\uff1a$du[i]$\u4e3a$i$\u8282\u70b9\u7684\u5ea6\u3002\n\n\u5c06\u6027\u8d28$1$\u53d8\u5f62\u4e3a\uff1a$1=\\sum (2-du[i])$\n\n\u5728\u672c\u9898\u4e2d\uff0c\u8d21\u732e\u4e3a1\u7684\u5b50\u6811\u6709\u4e00\u4e2a\u6027\u8d28\uff0c\u5373\uff1a$d[i] \\geq g[i]\\& \\&d[fa[i]]<g[fa[i]]$\u3002\u53ef\u4ee5\u7406\u89e3\u4e3a\u4ed6\u7684\u7236\u4eb2\u8d21\u732e\u4e3a\u5b50\u8282\u70b9\u4e2a\u6570\uff0c\u5373\u4e0a\u56fe\u4e2d\u7684$i$\u7684\u7236\u4eb2\u3002\n\n\u6240\u4ee5$ans_{x}$=\u8d21\u732e\u4e3a1\u7684\u5b50\u6811\u6570\u91cf\u4e4b\u548c\u3002~~\u8fd9\u4e0d\u662f\u5e9f\u8bdd\u5417......~~\n\n\u6240\u4ee5\u6839\u636e\u6027\u8d28$1$\uff0c\u6709\uff1a$ans_{x}=\\sum_{i=1}^{n}[d[i] \\geq g[i]](2-du[i])$\uff0c\u7a0d\u5fae\u89e3\u91ca\u4e00\u4e0b\u5f0f\u5b50\u7684\u6765\u7531\uff1a\n\n\u56e0\u4e3a\u5b50\u6811\u7684$\\sum (2-du[i])=1$\uff0c\u800c$1$\u521a\u597d\u662f\u4e00\u9897\u5b50\u6811\u7684\u8d21\u732e\uff0c\u6240\u4ee5\u6ee1\u8db3$d[i] \\geq g[i]$\u7684\u70b9\u96c6\uff0c\u53ef\u4ee5\u7ec4\u6210$ans_{x}$\u90a3\u4e48\u591a\u68f5\u8d21\u732e\u4e3a1\u7684\u5b50\u6811\u3002\u5982\u4e0b\u56fe\uff1a\n\n![](https://img2018.cnblogs.com/blog/1597439/201909/1597439-20190924170131333-93886634.png)\n\n\u6240\u4ee5\u6ee1\u8db3$g[i] \\geq d[i]$\u7684\u70b9\u96c6\u4e3a\u4e0a\u56fe\u5708\u51fa\u6765\u7684\u70b9\uff0c\u800c\u7b54\u6848\u4e3a\u8d21\u732e\u4e3a1\u7684\u5b50\u6811\u6570\u91cf\uff1a$3$\u3002\n\n\n------------\n\n\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u7528\u70b9\u5206\u6cbb\u7684\u60f3\u6cd5\uff0c\u5c06\uff1a\n\n$ans_{x}=\\sum_{i=1}^{n}[d[i] \\geq g[i]](2-du[i])$\n\n\u6c42\u89e3\u95ee\u9898\u53d8\u5316\u6210\u6c42\u89e3\u70b9\u5bf9\u95ee\u9898\uff1a\n\n$ans_{x}=\\sum_{i=1}^{n}[dis(x,i) \\geq g[i]](2-du[i])$\uff0c$dis(x,i)$\u4e3a$x$\u5230$i$\u7684\u8ddd\u79bb\u3002\n\n\u6240\u4ee5\u8bbe$w$\u4e3a\u5f53\u524d\u5b50\u6811\u7684\u91cd\u5fc3\uff0c$p[i]$\u4e3a$i$\u5230\u91cd\u5fc3\u7684\u8ddd\u79bb\u3002\n\u5219$dis(x,i) \\geq g[i]\\rightarrow p[x]+p[i] \\geq g[i]\\rightarrow p[x] \\geq g[i]-p[i]$\n\n\u800c\u5728\u6bcf\u6b21\u6c42\u51fa$p[i]$\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4$g[i]-p[i]$\uff0c\u4e0d\u8fc7\u6ce8\u610f$g[i]-p[i]$\u4f1a\u5c0f\u4e8e0\uff0c\u6240\u4ee5\u7ef4\u62a4\u65f6\u5411\u53f3\u79fb$n$\u7684\u6570\u91cf\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int maxn = 1e5 + 5e4;\nconst int inf = 2e9 + 10;\nstruct node {\n\tint s, e, w, next;\n}edge[maxn];\nint head[maxn], len;\nvoid init() {\n\tmemset(head, -1, sizeof(head));\n\tlen = 0;\n}\nvoid add(int s, int e) {\n\tedge[len].s = s;\n\tedge[len].e = e;\n\tedge[len].next = head[s];\n\thead[s] = len++;\n}\nint root, lens, sum;\nint d[maxn], du[maxn], o[maxn], vis[maxn], g[maxn], son[maxn], siz[maxn], ans[maxn];\nint rt[maxn], n;\nint lowbit(int x) {\n\treturn x & -x;\n}\nvoid Add(int x, int val) {\n\tfor (int i = x; i <= 2 * n; i += lowbit(i))\n\t\trt[i] += val;\n}\nint query(int x) {\n\tint ans = 0;\n\tfor (int i = x; i > 0; i -= lowbit(i))\n\t\tans += rt[i];\n\treturn ans;\n}\nvoid getroot(int x, int fa) {\n\tsiz[x] = 1, son[x] = 0;\n\tfor (int i = head[x]; i != -1; i = edge[i].next) {\n\t\tint y = edge[i].e;\n\t\tif (y == fa || vis[y])continue;\n\t\tgetroot(y, x);\n\t\tsiz[x] += siz[y];\n\t\tson[x] = max(son[x], siz[y]);\n\t}\n\tson[x] = max(son[x], sum - siz[x]);\n\tif (son[x] < son[root])root = x;\n}\nvoid getd(int x, int fa) {\n\to[++lens] = x;\n\tfor (int i = head[x]; i != -1; i = edge[i].next) {\n\t\tint y = edge[i].e;\n\t\tif (y == fa || vis[y])continue;\n\t\td[y] = d[x] + 1;\n\t\tgetd(y, x);\n\t}\n}\nvoid cal(int x, int val, int add) {\n\tlens = 0, d[x] = val;\n\tgetd(x, 0);\n\tfor (int i = 1; i <= lens; i++)\n\t\tAdd(g[o[i]] - d[o[i]] + n, 2 - du[o[i]]);\n\tfor (int i = 1; i <= lens; i++)\n\t\tans[o[i]] += add * query(d[o[i]] + n);\n\tfor (int i = 1; i <= lens; i++)\n\t\tAdd(g[o[i]] - d[o[i]] + n, du[o[i]] - 2);\n}\nvoid solve(int x) {\n\tcal(x, 0, 1);\n\tvis[x] = 1;\n\tfor (int i = head[x]; i != -1; i = edge[i].next) {\n\t\tint y = edge[i].e;\n\t\tif (vis[y])continue;\n\t\tcal(y, 1, -1);\n\t\tsum = siz[y];\n\t\troot = 0;\n\t\tgetroot(y, 0);\n\t\tsolve(root);\n\t}\n}\nvoid dfs1(int x, int fa, int dep) {\n\tg[x] = inf;\n\tif (du[x] == 1)g[x] = 0;\n\tfor (int i = head[x]; i != -1; i = edge[i].next) {\n\t\tint y = edge[i].e;\n\t\tif (y == fa)continue;\n\t\tdfs1(y, x, dep + 1);\n\t\tg[x] = min(g[x], g[y] + 1);\n\t}\n}\nvoid dfs2(int x, int fa) {\n\tfor (int i = head[x]; i != -1; i = edge[i].next) {\n\t\tint y = edge[i].e;\n\t\tif (y == fa)continue;\n\t\tg[y] = min(g[y], g[x] + 1);\n\t\tdfs2(y, x);\n\t}\n}\nint main() {\n\tscanf(\"%d\", &n);\n\tinit();\n\tfor (int i = 1, x, y; i < n; i++) {\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tadd(x, y);\n\t\tadd(y, x);\n\t\tdu[x]++, du[y]++;\n\t}\n\tdfs1(1, 0, 1);\n\tdfs2(1, 0);\n\tson[0] = n, root = 0, sum = n, getroot(1, 0);\n\tsolve(root);\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (du[i] == 1)printf(\"1\\n\");\n\t\telse printf(\"%d\\n\", ans[i]);\n\t}\n}\n```\n",
        "postTime": 1569317511,
        "uid": 116548,
        "name": "sainsist",
        "ccfLevel": 0,
        "title": "[P4183]\u6700\u6700\u6700\u901a\u4fd7\u7684\u70b9\u5206\u6cbb\u9898\u89e3"
    },
    {
        "content": "\u4ee4 $g_i$ \u8868\u793a $i$ \u4e0e\u6700\u8fd1\u7684\u53f6\u5b50\u8282\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u8003\u8651\u82e5\u5976\u725b\u5728 $u$\uff0c\u65e0\u6cd5\u8d70\u5230\u5b50\u6811 $i$ \u5185\uff0c\u5f53\u4e14\u4ec5\u5f53\u6ee1\u8db3 $g_i\\le dist(u, i)$\u3002\u8fd9\u4e9b\u6ee1\u8db3\u6761\u4ef6\u7684 $i$ \u70b9\u53ef\u4ee5\u5bf9 ${ans}_u$ \u4ea7\u751f\u8d21\u732e\u3002\u800c\u7531\u4e8e\u8981\u4f7f\u7b54\u6848\u6700\u4f18\uff0c\u6240\u4ee5 $i$ \u8981\u5c3d\u53ef\u80fd\u80fd\u7ba1\u5230\u5c3d\u53ef\u80fd\u591a\u7684\u51fa\u53e3\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53 $i$ \u7684\u7236\u4eb2\u6ca1\u6cd5\u7ba1\u5230 $i$ \u7684\u5b50\u6811\uff0c\u4f46 $i$ \u53ef\u4ee5\u65f6\uff0c\u4f1a\u5bf9 ${ans}_u$ \u4ea7\u751f $1$ \u7684\u8d21\u732e\u3002\u7528\u5f0f\u5b50\u8868\u793a\u5c31\u662f\uff1a $g_i\\le dist(u,i)$ \u4e14 $g_{{fa}_i}>dist(u, {fa}_i)$ \u3002\u4e8e\u662f\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\uff0c\u5bf9\u4e8e\u4e00\u4e2a $u$\uff0c\u6c42\u6709\u591a\u5c11\u4e2a $i$ \u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\uff0c\u6c42\u89e3\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n^2)$\u3002\n\n\u8003\u8651\u5982\u4f55\u4f18\u5316\uff1a\n\n\u4ee4 ${deg}_i$ \u8868\u793a $i$ \u7684\u5ea6\u6570\uff0c${siz}_i$ \u8868\u793a\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u7684\u5927\u5c0f\uff0c\u6211\u4eec\u53d1\u73b0 $\\sum_{v\\in sub(u)}{{deg}_v}=2\\times {siz}_u-1$\uff0c\u53ef\u4ee5\u63a8\u51fa $1=\\sum_{v\\in sub(u)}(2-{deg}_v)$\uff0c\u800c\u4e00\u4e2a\u5b50\u6811\u7684\u8d21\u732e\u53ea\u6709 $1$\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u5f0f\u5b50\u8f6c\u5316\u4e3a ${ans}_u=\\sum_{i=1}^n [g_i\\le dist(u, i)](2-{deg}_i)$\uff0c\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u6c42\u6709\u591a\u5c11\u70b9\u5bf9\u6ee1\u8db3\u8981\u6c42\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528\u70b9\u5206\u6cbb\u3002\n\n\u8003\u8651\u5982\u4f55\u70b9\u5206\u6cbb\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $divide$ \u5230\u7684\u6839 $rt$\uff0c\u6211\u4eec\u9884\u5904\u7406\u51fa\u5176\u5b50\u6811\u5185\u6240\u6709\u70b9\u5230\u4ed6\u7684\u8ddd\u79bb\uff0c\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u6211\u4eec\u8981\u6c42\u6709\u591a\u5c11\u4e2a $i$ \u6ee1\u8db3 $g_i\\le d_u+d_i$\uff0c\u5373\u6c42\u6709\u591a\u5c11\u4e2a $i$ \u6ee1\u8db3 $d_u\\ge g_i - d_i$\uff0c\u8fd9\u4e2a\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u5bf9\u4e8e\u4e24\u6761\u94fe\u76f8\u4ea4\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ea\u8981\u5728\u6c42\u6839\u7684\u5b69\u5b50\u65f6\u628a\u591a\u7b97\u7684\u4e0d\u5408\u6cd5\u7684\u7b54\u6848\u51cf\u53bb\u5c31\u597d\u4e86\uff0c\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n\\log^2n)$\u3002\n\n$\\mathcal{View\\ Code}$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define pb push_back\nconst int N = 2e5 + 5;\nint n, siz[N], rt, S, mx[N], ans[N], d[N], deg[N], cnt, g[N], o[N];\nbool vis[N];\nvector <int> e[N];\nint c[N];\nvoid add(int x, int z) {for(; x <= 2 * n; x += x & -x) c[x] += z;}\nint ask(int x) {int res = 0; for(; x; x -= x & -x) res += c[x]; return res;}\nvoid dfs1(int u, int fa) {\n\tfor(auto v : e[u]) if(v != fa) {\n\t\tdfs1(v, u);\n\t\tg[u] = min(g[u], g[v] + 1);\n\t}\n}\nvoid dfs2(int u, int fa) {\n\tfor(auto v : e[u]) if(v != fa) {\n\t\tg[v] = min(g[v], g[u] + 1);\n\t\tdfs2(v, u);\n\t}\n}\nvoid getroot(int u, int fa) {\n\tsiz[u] = 1, mx[u] = 0;\n\tfor(auto v : e[u]) if(!vis[v] && v != fa) {\n\t\tgetroot(v, u);\n\t\tsiz[u] += siz[v];\n\t\tmx[u] = max(mx[u], siz[v]);\n\t}\n\tmx[u] = max(mx[u], S - siz[u]);\n\tif(!rt || mx[u] < mx[rt]) rt = u;\n}\nvoid getdis(int u, int fa) {\n\to[++cnt] = u;\n\tfor(auto v : e[u]) if(v != fa && !vis[v]) \n\t\td[v] = d[u] + 1, getdis(v, u);\n}\nvoid solve(int u, int len1, int mul) {\n\td[u] = len1; cnt = 0; getdis(u, 0);\n\tfor(int i = 1; i <= cnt; i++) \n\t\tadd(g[o[i]] - d[o[i]] + n, 2 - deg[o[i]]);\n\tfor(int i = 1; i <= cnt; i++) {\n\t\tadd(g[o[i]] - d[o[i]] + n, deg[o[i]] - 2);\n\t\tans[o[i]] += ask(d[o[i]] + n) * mul;\n\t\tadd(g[o[i]] - d[o[i]] + n, 2 - deg[o[i]]);\n\t}\n\tfor(int i = 1; i <= cnt; i++)\n\t\tadd(g[o[i]] - d[o[i]] + n, deg[o[i]] - 2);\n}\nvoid divide(int u) {\n\tsolve(u, 0, 1); vis[u] = 1; \n\tfor(auto v : e[u]) if(!vis[v]) {\n\t\tsolve(v, 1, -1);\n\t\tS = siz[v], rt = 0;\n\t\tgetroot(v, 0);\n\t\tdivide(rt); \n\t}\n}\n\nint main() {\n\tmemset(g, 0x3f, sizeof(g));\n\tscanf(\"%d\", &n);\n\tfor(int i = 1, x, y; i < n; i++) {\n\t\tscanf(\"%d%d\", &x, &y);\n\t\te[x].pb(y), e[y].pb(x);\n\t\tdeg[x]++, deg[y]++;\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t\tif(deg[i] == 1) g[i] = 0;\n\tdfs1(1, 0), dfs2(1, 0);\n\tS = n, rt = 0; getroot(1, 0); divide(rt);\n\tfor(int i = 1; i <= n; i++)\n\t\tprintf(\"%d\\n\", deg[i] == 1 ? 1 : ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1626619068,
        "uid": 108610,
        "name": "Dzhao",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4183 [USACO18JAN]Cow at Large P"
    },
    {
        "content": "\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48$lg$\u9898\u89e3\u91cc\u6e05\u4e00\u8272\u53ea\u4f1a\u7528\n$\\sum d=2m-1\\rightarrow 1=2m-\\sum d$\u5bb9\u65a5\u505a\u6cd5\n\n\u8bbe$\\mathit{mnleaf_u}$\u8868\u793a\u8ddd\u70b9$u$\u6700\u8fd1\u7684\u53f6\u5b50\u8282\u70b9\u7684\u8ddd\u79bb\n\n\u8fd9\u4e2a\u53ef\u4ee5\u7528\u811a$dfs$\u968f\u4fbf$O(n/nlogn)$\u505a\n\u5bf9\u4e8e\u4e00\u4e2a\u6839\u7684\u60c5\u51b5\u5c31\u662f\u7edf\u8ba1\n\n$\\sum_{u}[\\mathit{mnleaf_u}\\le dep_u\\ \\&\\&\\ \\mathit{mnleaf_{fa[u]}}\\geq dep_u]$\n\n\u5bf9\u4e8e\u6240\u6709\u70b9\u8be2\u95ee\uff0c\u8003\u8651\u70b9\u5206\u6cbb\n\n\u90a3\u4e48\u4e00\u4e2a\u5b50\u6811\u4e2d$u$\u5bf9\u53e6\u4e00\u4e2a\u5b50\u6811\u4e2d\u7684$v$\u7684\u8d21\u732e\u5c31\u662f\n$[\\mathit{mnleaf_u}\\le dep_u+dep_v\\ \\&\\&\\ \\mathit{mnleaf_{fa[u]}}\\geq dep_u+dep_v]$\n\n\u79fb\u4e00\u4e0b\u9879\u5c31\u662f$u$\u533a\u95f4\u52a0\uff0c$v$\u5355\u70b9\u6c42\u503c\n\n\u4e8e\u662f\u70b9\u5206\u5373\u53ef\n\n\u5148\u628a\u6574\u4e2a$dfs$\u7136\u540e\u679a\u4e3e\u6c42\u503c\u7684\u5b50\u6811\u51cf\u53bb\u8fd9\u4e2a\u5b50\u6811\u81ea\u5df1\u7684\u8d21\u732e\u7136\u540e\u968f\u4fbf\u7b97\u7b97\u5373\u53ef\n\n\u6ce8\u610f\u8bb0\u5f97\u628a\u5f53\u524d\u5206\u6cbb\u4e2d\u5fc3\u7684\u8d21\u732e\u52a0\u8fdb\u53bb\n\n\u5c31\u662f\u5f80\u54ea\u4e2a\u5b50\u6811\u6c42\u503c\u5c31\u628a\u4e2d\u5fc3\u7684\u7236\u4eb2\u8bbe\u4e3a\u54ea\u4e2a\n\n\n### Code\n\n```cpp\n\n#include<bits/stdc++.h>\nusing namespace std;\n#define cs const\n#define pb push_back\n#define ll long long\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define bg begin\ncs int RLEN=1<<20|1;\ninline char gc(){\n\tstatic char ibuf[RLEN],*ib,*ob;\n\t(ib==ob)&&(ob=(ib=ibuf)+fread(ibuf,1,RLEN,stdin));\n\treturn (ib==ob)?EOF:*ib++;\n}\ninline int read(){\n\tchar ch=gc();\n\tint res=0;bool f=1;\n\twhile(!isdigit(ch))f^=ch=='-',ch=gc();\n\twhile(isdigit(ch))res=(res*10)+(ch^48),ch=gc();\n\treturn f?res:-res;\n}\ntemplate<typename tp>inline void chemx(tp &a,tp b){a=max(a,b);}\ntemplate<typename tp>inline void chemn(tp &a,tp b){a=min(a,b);}\ncs int N=70005;\nint n,mnleaf[N],isleaf[N];\nvector<int> e[N];\nvoid dfs(int u,int fa){mnleaf[u]=1e9;int fg=0;\n\tfor(int &v:e[u])if(v!=fa){\n\t\tfg=1;dfs(v,u);\n\t\tchemn(mnleaf[u],mnleaf[v]+1);\n\t}\n\tif(!fg||(u==1&&e[u].size()==1))mnleaf[u]=0,isleaf[u]=1;\n}\nvoid dfs1(int u,int tp,int fa){\n\tchemn(mnleaf[u],tp);\n\tmultiset<int>st;st.insert(mnleaf[u]);\n\tfor(int &v:e[u])if(v!=fa){\n\t\tst.insert(mnleaf[v]+1);\n\t}\n\tfor(int &v:e[u])if(v!=fa){\n\t\tst.erase(st.find(mnleaf[v]+1));\n\t\tint vl=mnleaf[v]+1;\n\t\tdfs1(v,min(tp,*st.bg())+1,u);\n\t\tst.insert(vl);\n\t}\n}\nnamespace bit{\n\tint tr[2*N],stk[N*6],top;\n\t#define lb(x) (x&(-x))\n\tvoid write(){\n\t\tfor(int i=1;i<=n+n;i++)cout<<tr[i]<<\" \";puts(\"\");\n\t}\n\tvoid upd(int p,int k){stk[++top]=p;\n\t\tfor(;p<=n+n;p+=lb(p))tr[p]+=k;\n\t}\n\tvoid delet(int p){\n\t\tfor(;p<=n+n;p+=lb(p))tr[p]=0;\n\t}\n\tvoid clear(){\n\t\twhile(top)delet(stk[top--]);\n\t}\n\tvoid update(int l,int r,int k){\n\t\tif(l>r)return;l+=n,r+=n;\n\t\tupd(l,k),upd(r+1,-k);\n\t}\n\tint query(int p,int res=0){p+=n;\n\t\tfor(;p>0;p-=lb(p))res+=tr[p];return res;\n\t}\n\t#undef lb\n};\nint maxn,mxsiz,rt;\nint siz[N],vis[N],fa[N],dep[N],ans[N];\nvoid getrt(int u,int fa){\n\tsiz[u]=1;int son=0;\n\tfor(int v:e[u])if(!vis[v]&&v!=fa){\n\t\tgetrt(v,u),siz[u]+=siz[v];\n\t\tchemx(son,siz[v]);\n\t}chemx(son,maxn-siz[u]);\n\tif(son<mxsiz)mxsiz=son,rt=u;\n}\nvector<int>nd[N];\nvoid dfs2(int u,int root){\n\tnd[root].pb(u),bit::update(mnleaf[u]-dep[u],mnleaf[fa[u]]-dep[u],1);\n\tfor(int v:e[u])if(!vis[v]&&v!=fa[u])fa[v]=u,dep[v]=dep[u]+1,dfs2(v,root);\n}\nvoid delet(int u){\n\tfor(int &v:nd[u])\n\tbit::update(mnleaf[v]-dep[v],mnleaf[fa[v]]-dep[v],-1);\n}\nvoid insert(int u){\n\tfor(int &v:nd[u])\n\tbit::update(mnleaf[v]-dep[v],mnleaf[fa[v]]-dep[v],1);\t\n\tnd[u].resize(0);\n}\nvoid getans(int u){\n\tans[u]+=bit::query(dep[u]);\n\tfor(int v:e[u])if(!vis[v]&&v!=fa[u])getans(v);\n}\nvoid solve(int u){\n\tvis[u]=1;\n\tfor(cs int &v:e[u])if(!vis[v]){\n\t\tfa[v]=u,dep[v]=1,dfs2(v,v);\n\t}\n\tans[u]+=bit::query(0);\n\tfor(cs int &v:e[u])if(!vis[v]){\n\t\tdelet(v);\n\t\tbit::update(mnleaf[u],mnleaf[v],1);\n\t\tgetans(v);\n\t\tbit::update(mnleaf[u],mnleaf[v],-1);\n\t\tinsert(v);\n\t}\n\tbit::clear();\n\tfor(cs int &v:e[u])if(!vis[v]){\n\t\tmaxn=siz[v],mxsiz=1e9,getrt(v,u);\n\t\tsolve(rt);\n\t}\n}\nint main(){\n\t#ifdef Stargazer\n\tfreopen(\"lx.in\",\"r\",stdin);\n\t#endif\n\tn=read();maxn=n;mxsiz=1e9;\n\tfor(int i=1;i<n;i++){\n\t\tint u=read(),v=read();\n\t\te[u].pb(v),e[v].pb(u);\n\t}dfs(1,0);\n\tdfs1(1,1e9,0);\n\tgetrt(1,0);\n\tsolve(rt);\n\tfor(int i=1;i<=n;i++)if(!isleaf[i])cout<<ans[i]<<'\\n';else cout<<1<<'\\n';\n\treturn 0;\n}\n```\n\n",
        "postTime": 1587910174,
        "uid": 94511,
        "name": "\u4e59\u6d25\u68a6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4183 \u3010[USACO18JAN]Cow at Large P\u3011"
    },
    {
        "content": "\u6765\u8bb2\u4e00\u4e2a\u975e\u5e38\u5947\u602a\u7684\u4e71\u641e\n\n\u9996\u5148\u628a\u6240\u6709\u53f6\u5b50\u8282\u70b9\u4e22\u8fdb\u961f\u5217BFS\u3002\u5f97\u5230\u6bcf\u4e2a\u8282\u70b9\u8ddd\u79bb\u6700\u8fd1\u53f6\u5b50\u8282\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u8bbe\u5976\u725b\u5728$a$\u70b9\uff0c\u7136\u540e\u8003\u8651\u4e00\u4e2a\u8282\u70b9$b$\u88ab\u5b50\u6811\u91cc\u7684\u53f6\u5b50\u4fdd\u62a4(\u5373\u5976\u725b\u4e00\u65e6\u8d70\u5230\u8fd9\u4e2a\u8282\u70b9\u5c31\u4f1a\u88ab\u6355\u6349)\u7684\u6761\u4ef6\u662f\n\n$$dep_b-dep_u\\le dep_u-dep_a$$\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u5199\u4e00\u4e2a$O(n^2)$\u7684\u8d2a\u5fc3\u4e86\uff0c\u53ea\u8981\u5f53\u524d\u70b9\u80fd\u88ab\u5b50\u6811\u7684\u8282\u70b9\u4fdd\u62a4\uff0c\u5219$++ans$\u3002\u56e0\u4e3a\u4e00\u68f5\u5b50\u6811\u80af\u5b9a\u8d8a\u65e9\u88ab\u4fdd\u62a4\u8d8a\u597d\u3002\n\n\u663e\u7136\u662f\u65e0\u6cd5\u901a\u8fc7\u6b64\u9898\u7684\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u6761\u94fe\uff0c\u5728\u94fe\u7684\u9876\u7aef\u88ab\u4fdd\u62a4\u548c\u5728\u94fe\u7684\u5e95\u7aef\u4fdd\u62a4\u7684\u7b54\u6848\u4e0d\u53d8\u3002\u6240\u4ee5\u53ea\u9700\u8981\u628a\u4e00\u6761\u94fe\u7f29\u6210\u4e00\u6761\u8fb9\uff0c\u7136\u540e\u8d2a\u5fc3\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O($\u7384\u5b66$)$\uff0c\u5b9e\u9645\u8fd0\u884c\u901f\u5ea6\u76ee\u524d$Rank1$\u3002~~\u540a\u6253\u70b9\u5206\u6cbb~~\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 70005;\n\nint n, ans;\n\nstruct edge\n{\n    int to, next;\n    int To, fa, w;\n} e[maxn * 2];\nint h[maxn], d[maxn], tot;\n\nqueue<int> q;\nint f[maxn], eu, ev, ew;\n\ninline int gi()\n{\n    char c = getchar();\n    while (c < '0' || c > '9') c = getchar();\n    int sum = 0;\n    while ('0' <= c && c <= '9') sum = sum * 10 + c - 48, c = getchar();\n    return sum;\n}\n\ninline void add(int u, int v)\n{\n    e[++tot] = (edge) {v, h[u]}; h[u] = tot; ++d[v];\n    e[++tot] = (edge) {u, h[v]}; h[v] = tot; ++d[u];\n}\n\nvoid bfs()\n{\n    for (int i = 1; i <= n; ++i)\n        if (d[i] == 1) f[i] = 0, q.push(i);\n        else f[i] = -1;\n    int u;\n    while (!q.empty()) {\n        u = q.front(); q.pop();\n        for (int i = h[u], v; v = e[i].to, i; i = e[i].next)\n            if (f[v] == -1) {\n                f[v] = f[u] + 1;\n                q.push(v);\n            }\n    }\n}\n\nvoid dfs1(int u, int fa, int dep)\n{\n    if (fa && d[u] != 2) return eu = u, ev = fa, ew = dep, void();\n    for (int i = h[u], v; v = e[i].to, i; i = e[i].next)\n        if (v != fa) {\n            dfs1(v, u, dep + 1);\n            e[i].To = eu; e[i].fa = ev; e[i].w = ew - dep;\n        }\n}\n\nvoid dfs2(int u, int fa, int dep)\n{\n    if (f[u] <= dep) return ++ans, void();\n    for (int i = h[u]; i; i = e[i].next)\n        if (e[i].to != fa) dfs2(e[i].To, e[i].fa, dep + e[i].w);\n}\n\nint main()\n{\n    n = gi();\n    for (int i = 1; i < n; ++i) add(gi(), gi());\n\n    bfs();\n\n    tot = 0;\n    for (int i = 1; i <= n; ++i)\n        if (d[i] != 2) dfs1(i, 0, 0);\n    \n    for (int i = 1; i <= n; ++i) {\n        ans = 0; dfs2(i, 0, 0);\n        printf(\"%d\\n\", ans);\n    }\n    \n    return 0;\n}\n\n```",
        "postTime": 1546584265,
        "uid": 119899,
        "name": "dsidsi",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4183 \u3010[USACO18JAN]Cow at Large P\u3011"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.org/problemnew/show/P4183)\n\n\u70b9\u5206\u6cbb\u3002\n\n\u9996\u5148\u6709\u4e00\u4e2a\u660e\u663e\u7684\u7ed3\u8bba\uff1a\u53f6\u5b50\u8282\u70b9\u5230\u70b9$x$\u7684\u8ddd\u79bb\u5982\u679c\u5c0f\u4e8e\u6839\u5230\u70b9$x$\u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u70b9$x$\u7684\u5b50\u6811\u53ea\u7528\u4e00\u4e2a\u4ee3\u4ef7\u5c31\u53ef\u4ee5\u4fdd\u62a4\u4e86\u3002\u6240\u4ee5\u9996\u5148\u7ef4\u62a4\u51fa\u6bcf\u4e2a\u70b9$x$\u5230\u53f6\u5b50\u7ed3\u70b9\u7684\u6700\u8fd1\u8ddd\u79bb$mndis[x]$\u3002\u8003\u8651\u5982\u4f55\u6362\u6839\u66f4\u65b0\u7b54\u6848\u3002\u6211\u4eec\u8003\u8651\u603b\u7b54\u6848\u51cf\u53bb\u4e0d\u5408\u6cd5\u7684\u65b9\u6cd5\u3002\u603b\u7b54\u6848\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6761\u516c\u5f0f$\\sum _ {v}Dg[v]=2(k-1)+1$\u2014\u2014>$\\sum _ {v}(2-Dg[v])=1$\u63a8\u51fa\u6765\u662f$2$\u3002\u4e0d\u5408\u6cd5\u7684\u7b54\u6848\u6211\u4eec\u901a\u8fc7\u91cd\u5fc3\u6765\u7edf\u8ba1\u3002\u8bbe\u70b9\u5206\u6cbb\u91cd\u5fc3\u4e3a$x$\uff0c\u8003\u8651\u6240\u6709\u7ecf\u8fc7$x$\u7684\u8fb9\u662f\u5426\u5408\u6cd5\u3002\u8bbe$dis[u]$\u4e3a$u$\u5230$x$\u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u4e24\u4e2a\u5728\u5b50\u6811\u4e2d\u7684\u70b9$u$\u548c$v$\u4e0d\u5408\u6cd5\u5f53\u4e14\u4ec5\u5f53$dis[u]+dis[v]<mndis[u]$\u2014\u2014>$dis[v]<mndis[u]-dis[u]$\uff0c\u8fd9\u53ef\u4ee5\u7528\u7c7b\u4f3c\u5929\u5929\u7231\u8dd1\u6b65\u90a3\u9053\u9898\u7684\u601d\u8def\uff0c\u5f00\u4e2a\u6876\u7edf\u8ba1\u4e00\u4e0b\uff0c\u7ef4\u62a4\u4e00\u4e2a\u540e\u7f00\u548c\u5c31\u597d\u3002\n\ncode:\n```\n#pragma GCC optimize(\"Ofast,no-stack-protector\")\n//2018.9.27 by ljz\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register int\n#define LL long long\n#define inf 0x3f3f3f3f\n#define eps 1e-15\ninline int read(){\n    res s=0;\n    bool w=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=1;ch=getchar();}\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return w?-s:s;\n}\ninline void _swap(res &x,res &y){\n    x^=y^=x^=y;\n}\ninline int _abs(const res &x){\n    return x>0?x:-x;\n}\ninline int _max(const res &x,const res &y){\n    return x>y?x:y;\n}\ninline int _min(const res &x,const res &y){\n    return x<y?x:y;\n}\nconst int N=1e5+10;\nnamespace MAIN{\n    struct E{\n        int next,to;\n        E() {}\n        E(res next,res to):next(next),to(to) {}\n    }edge[N<<1];\n    int head[N],cnt;\n    int du[N];\n    inline void addedge(const res &u,const res &v){\n        edge[++cnt]=E(head[u],v),head[u]=cnt;\n        edge[++cnt]=E(head[v],u),head[v]=cnt;\n        du[u]++,du[v]++;\n    }\n    int mndis[N];\n    void dfs1(const res &x,const res &fax){\n        mndis[x]=inf;\n        if(du[x]==1)mndis[x]=0;\n        for(res i=head[x];~i;i=edge[i].next){\n            res tox=edge[i].to;\n            if(tox==fax)continue;\n            dfs1(tox,x);\n            mndis[x]=_min(mndis[tox]+1,mndis[x]);\n        }\n    }\n    void dfs2(const res &x,const res &fax){\n        for(res i=head[x];~i;i=edge[i].next){\n            res tox=edge[i].to;\n            if(tox==fax)continue;\n            mndis[tox]=_min(mndis[tox],mndis[x]+1);\n            dfs2(tox,x);\n        }\n    }\n    int siz[N],w[N],rt,sum,vis[N];\n    void getroot(const res &x,const res &fax){\n        siz[x]=1,w[x]=0;\n        for(res i=head[x];~i;i=edge[i].next){\n            res tox=edge[i].to;\n            if(tox==fax||vis[tox])continue;\n            getroot(tox,x);\n            siz[x]+=siz[tox],w[x]=_max(w[x],siz[tox]);\n        }\n        w[x]=_max(w[x],sum-siz[x]);\n        if(w[x]<w[rt])rt=x;\n    }\n    int n;\n    int tot[N][2],len[2],ans[N],dis[N];\n    void getdis(const res &x,const res &fax,const res &d){\n        dis[x]=d;\n        for(res i=head[x];~i;i=edge[i].next){\n            res tox=edge[i].to;\n            if(tox==fax||vis[tox])continue;\n            getdis(tox,x,d+1);\n        }\n    }\n    void in_ex(const res &x,const res &fax,const res &S){\n        res p=mndis[x]-dis[x];\n        if(p>0)tot[p][S]+=2-du[x],len[S]=_max(len[S],p);\n        for(res i=head[x];~i;i=edge[i].next){\n            res tox=edge[i].to;\n            if(tox==fax||vis[tox])continue;\n            in_ex(tox,x,S);\n        }\n    }\n    void calc(const res &x,const res &fax){\n        ans[x]+=tot[dis[x]+1][0]-tot[dis[x]+1][1];\n        for(res i=head[x];~i;i=edge[i].next){\n            res tox=edge[i].to;\n            if(tox==fax||vis[tox])continue;\n            calc(tox,x);\n        }\n    }\n    void solve(const res &x){\n        vis[x]=1,getdis(x,0,0);\n        len[0]=0,in_ex(x,0,0);\n        for(res i=len[0]-1;i>=1;i--)tot[i][0]+=tot[i+1][0];\n        for(res i=head[x];~i;i=edge[i].next){\n            res tox=edge[i].to;\n            if(vis[tox])continue;\n            len[1]=0,in_ex(tox,x,1);\n            for(res j=len[1]-1;j>=1;j--)tot[j][1]+=tot[j+1][1];\n            calc(tox,x);\n            for(res j=len[1];j>=1;j--)tot[j][1]=0;\n        }\n        ans[x]+=tot[1][0];\n        for(res i=len[0];i>=0;i--)tot[i][0]=0;\n        for(res i=head[x];~i;i=edge[i].next){\n            res tox=edge[i].to;\n            if(vis[tox])continue;\n            rt=0,sum=siz[tox],getroot(tox,0),solve(rt);\n        }\n    }\n    inline void MAIN(){\n        memset(head,-1,sizeof(head));\n        n=read();\n        for(res i=1;i<n;i++){\n            res u=read(),v=read();\n            addedge(u,v);\n        }\n        dfs1(1,0),dfs2(1,0);\n        rt=0,sum=w[0]=n,getroot(1,0);\n        solve(rt);\n        for(res i=1;i<=n;i++)\n            if(du[i]==1)puts(\"1\");\n            else printf(\"%d\\n\",2-ans[i]);\n    }\n}\nint main(){\n    MAIN::MAIN();\n    return 0;\n}\n```",
        "postTime": 1538016365,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010USACO18JAN\u3011Cow at Large P"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/P4183)\n\n\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u4e00\u4e2a\u519c\u592b\u60f3\u6293\u5230 Bessie \u90a3\u4e48\u53ea\u80fd\u53bb\u201c\u76f8\u9047\u201d\u800c\u4e0d\u80fd\u53bb\u201c\u8ffd\u53ca\u201d\uff0c\u4e00\u4e2a\u519c\u592b\u5e94\u8be5\u5c3d\u53ef\u80fd\u5f80\u4e0a\u8d70\u4ee5\u201c\u5360\u9886\u201d\u66f4\u5927\u7684\u5b50\u6811\u53ca\u66f4\u591a\u7684\u53f6\u5b50\u8282\u70b9\u3002\n\n\u5047\u8bbe\u5f53\u524d Bessie \u6240\u5728\u7684\u8282\u70b9\u4e3a $u$\uff0c\u540c\u65f6\u6211\u4eec\u5c06 $u$ \u770b\u505a\u6811\u7684\u6839\u8282\u70b9\u3002\n\n\u8bbe $p_i$ \u8868\u793a $i$ \u53f7\u70b9\u5230\u6700\u8fd1\u7684\u53f6\u5b50\u8282\u70b9\u7684\u8ddd\u79bb\uff0c$dep_i$\u8868\u793a $i$ \u53f7\u70b9\u7684\u6df1\u5ea6\uff0c$fa_i$ \u8868\u793a $i$ \u53f7\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u3002\n\n\u90a3\u4e48\u5f88\u663e\u7136\uff0c\u6ee1\u8db3 $dep_x \\ge p_x$ \u4e14 $dep_{fa_x} \\le p_{fa_x}$ \u7684\u70b9\u90fd\u9700\u8981\u4e14\u4ec5\u9700\u8981\u5728\u5b50\u6811\u4e2d\u8bbe\u7f6e\u4e00\u4e2a\u519c\u592b\u3002\uff08$fa_x$ \u7684\u90a3\u4e2a\u6761\u4ef6\u662f\u4e3a\u4e86\u53bb\u91cd\uff09\n\n\u6709\u591a\u5c11\u4e2a\u8fd9\u6837\u7684\u70b9\u5c31\u662f\u7b54\u6848\u3002\n\n\u590d\u6742\u5ea6 $O(N^2)$\u3002\n\n\u770b\u89c1\u4e0d\u7b49\u5173\u7cfb\u5f88\u5bb9\u6613\u60f3\u5230\u70b9\u5206\u6cbb\uff0c\u4f46\u5982\u679c $u$ \u4e0d\u662f\u6839\u7684\u8bdd $dep_i$ \u548c $fa_i$ \u7684\u7ef4\u62a4\u90fd\u6781\u4e3a\u56f0\u96be\u3002\n\n\u53d1\u73b0\u5f15\u5165 $fa_i$ \u662f\u4e3a\u4e86\u53bb\u91cd\uff0c\u90a3\u6709\u6ca1\u6709\u65b9\u6cd5\u8fd0\u7528\u5bb9\u65a5\u7684\u65b9\u6cd5\u53bb\u91cd\uff1f\n\n\u8bbe $dis_{a,b}$ \u4e3a\u4ece $a$ \u5230 $b$ \u7684\u8def\u5f84\u957f\u5ea6\uff0c\u90a3\u4e48\u4e00\u4e2a\u70b9\u88ab\u201c\u5c01\u9501\u201d\u7684\u6761\u4ef6\u4e3a $dis{x,i} \\ge p_i$\uff0c\u5982\u679c\u4e00\u4e2a\u70b9 $i$ \u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\uff0c\u90a3\u4e48\u5b83\u5b50\u6811\u4e2d\u7684\u6240\u6709\u70b9\u4e5f\u90fd\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u3002\uff08\u6b64\u5904\u5b50\u6811\u7684\u6982\u5ff5\u662f\u4ee5 $u$ \u4e3a\u6839\uff09\u3002\n\n\u800c\u5bf9\u4e8e\u4e00\u68f5\u6709 $M$ \u4e2a\u70b9\u7684\u5b50\u6811\uff0c\u8bbe $deg_i$ \u8868\u793a $i$ \u53f7\u70b9\u7684\u5ea6\u6570\uff0c\u90a3\u4e48\u6709 $\\sum deg_i =2M-1 \\to \\sum 2-deg_i =1 $\n\n\u5982\u679c\u6211\u4eec\u628a\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u90fd\u8bbe\u4e3a $2-deg_i$\uff0c\u90a3\u4e48\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\u53bb\u91cd\u7684\u95ee\u9898\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $u$\uff0c\u6211\u4eec\u8981\u6c42\u6240\u6709\u6ee1\u8db3 $dis_{u,i} \\ge p_i$ \u7684\u6743\u503c\u548c\u3002\n\n\u5982\u679c\u5f53\u524d\u7684\u6839\u662f $x$ \uff0c\u90a3\u4e48\u9650\u5236\u6761\u4ef6\u53d8\u4e3a $dep_u+dep_i \\ge p_i \\to dep_u \\ge p_i - dep_i$\u3002\n\n\u70b9\u5206\u6cbb\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O(N \\log N)$\u3002\n\ntips:\u6c42\u89e3 $p_i$ \u65f6\u8981\u6ce8\u610f\u8ddd\u79bb $i$ \u53f7\u70b9\u6700\u8fd1\u7684\u53f6\u5b50\u8282\u70b9\u5e76\u4e0d\u4e00\u5b9a\u5728\u4ee5 $1$ \u4e3a\u6839\u610f\u4e49\u4e0b\u7684\u5b50\u6811\u4e2d\uff0c\u6240\u4ee5\u521d\u59cb\u6c42 $p_i$ \u65f6\u8981\u540c\u65f6\u8ba1\u7b97\u6765\u81ea\u7236\u4eb2\u548c\u6765\u81ea\u513f\u5b50\u7684\u8d21\u732e\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int MAXN = 1e5 + 50;\nconst int INF = 0x3f3f3f3f;\nint p[MAXN], dep[MAXN], ans[MAXN], deg[MAXN], siz[MAXN], mx[MAXN], tag[MAXN];\nstruct edge\n{\n    int nxt, to;\n} e[MAXN * 2];\nint head[MAXN], edgetot;\nint N, tot, rt, cnt1, cnt2;\nstruct nodea\n{\n    int id, key;\n    bool operator<(const nodea &tmp) const\n    {\n        return key < tmp.key;\n    }\n    nodea(){}\n    nodea(int a, int b)\n    {\n        id = a;\n        key = b;\n    }\n} ta[MAXN];\nstruct nodeb\n{\n    int key, val;\n    bool operator<(const nodeb &tmp) const\n    {\n        return key < tmp.key;\n    }\n    nodeb(){}\n    nodeb(int a, int b)\n    {\n        key = a;\n        val = b;\n    }\n} tb[MAXN];\nvoid add(int x, int y)\n{\n    e[++edgetot].to = y;\n    e[edgetot].nxt = head[x];\n    head[x] = edgetot;\n}\nvoid getp1(int x, int f) \n{\n    if (deg[x] == 1)\n        p[x] = 0;\n    else\n        p[x] = INF;\n    for (int i = head[x]; i; i = e[i].nxt)\n    {\n        int v = e[i].to;\n        if (v == f)\n            continue;\n        getp1(v, x);\n        p[x] = min(p[x], p[v] + 1);\n    }\n}\nvoid getp2(int x, int f)\n{\n    for (int i = head[x]; i; i = e[i].nxt)\n    {\n        int v = e[i].to;\n        if (v == f)\n            continue;\n        p[v] = min(p[v], p[x] + 1);\n        getp2(v, x);\n    }\n}\nvoid findrt(int x, int f)\n{\n    siz[x] = 1;\n    dep[x] = dep[f] + 1;\n    mx[x] = 0;\n    for (int i = head[x]; i; i = e[i].nxt)\n    {\n        int v = e[i].to;\n        if (v == f || tag[v])\n            continue;\n        findrt(v, x);\n        siz[x] += siz[v];\n        mx[x] = max(mx[x], siz[v]);\n    }\n    mx[x] = max(mx[x], tot - siz[x]);\n    if (mx[x] < mx[rt] || !rt)\n        rt = x;\n}\nvoid dfs(int x, int f)\n{\n    dep[x] = dep[f] + 1;\n    ta[++cnt1] = nodea(x, dep[x]);\n    tb[++cnt2] = nodeb(p[x] - dep[x], 2 - deg[x]);\n    siz[x] = 1;\n    for (int i = head[x]; i; i = e[i].nxt)\n    {\n        int v = e[i].to;\n        if (v == f || tag[v])\n            continue;\n        dfs(v, x);\n        siz[x] += siz[v];\n    }\n}\nvoid calc(int x, int base, int typ)\n{\n    cnt1 = cnt2 = 0;\n    dep[0] += base;\n    dfs(x, 0);\n    dep[0] -= base;\n    sort(ta + 1, ta + cnt1 + 1);\n    sort(tb + 1, tb + cnt2 + 1);\n    int sum = 0;\n    int j = 0;\n    for (int i = 1; i <= cnt1; ++i)\n    {\n        while (tb[j + 1].key <= ta[i].key && j < cnt1)\n        {\n            j++;\n            sum += tb[j].val;\n        }\n        ans[ta[i].id] += typ * sum;\n    }\n}\nvoid solve(int x)\n{\n    calc(x, 0, 1);\n    tag[x] = 1;\n    for (int i = head[x]; i; i = e[i].nxt)\n    {\n        int v = e[i].to;\n        if (tag[v])\n            continue;\n        calc(v, 1, -1);\n        tot = siz[v];\n        rt = 0;\n        findrt(v, 0);\n        // cout << x << \":\" << v << \" \" << rt << endl;\n        solve(rt);\n    }\n}\nint main()\n{\n    scanf(\"%d\", &N);\n    for (int i = 1; i <= N - 1; ++i)\n    {\n        int u, v;\n        scanf(\"%d%d\",&u,&v);\n        add(u, v);\n        add(v, u);\n        deg[u]++;\n        deg[v]++;\n    }\n    dep[0] = -1;\n    tot = N;\n    getp1(1, 0);\n    getp2(1, 0);\n    findrt(1, 0);\n    solve(rt);\n    for (int i = 1; i <= N; ++i)\n        printf(\"%d\\n\", deg[i] == 1 ? 1 : ans[i]);\n    return 0;\n}\n```\n",
        "postTime": 1616487664,
        "uid": 63743,
        "name": "DrBit",
        "ccfLevel": 6,
        "title": "P4183 [USACO18JAN]Cow at Large P \uff08\u70b9\u5206\u6cbb\uff09"
    },
    {
        "content": "\u9898\u9762\u81ea\u884c\u770b\u5427\u3002\u3002\u3002\n\n#### std\n\n\u9996\u5148\u628a\u5f53\u524d\u5976\u725b\u7684\u4f4d\u7f6e\u4f5c\u4e3a\u6839\u3002\n\n\u4ee4 $g_u$ \u8868\u793a $u$ \u4e0e\u6700\u8fd1\u7684\u53f6\u5b50\u7684\u8ddd\u79bb\u3002\n\n\u90a3\u4e48\u82e5\u5976\u725b\u5728 $u$\uff0c\u65e0\u6cd5\u8d70\u5230 $i$ \u7684\u5b50\u6811\u5185\uff0c\u5f53\u4e14\u4ec5\u5f53 $\\operatorname{dis}(u, i) \\ge g_i$\u3002\n\n\u7531\u4e8e\u8981\u4f7f\u7b54\u6848\u6700\u4f18\uff0c\u5373\u8ba9 $i$ \u7ba1\u8f96\u7684\u8282\u70b9\u5c3d\u53ef\u80fd\u591a\uff0c\u82e5 $i$ \u6ee1\u8db3\u4e0a\u9762\u6761\u4ef6\uff0c$fa_i$ \u4e5f\u6ee1\u8db3\u4e0a\u9762\u6761\u4ef6\uff0c\u90a3\u4e48\u4f18\u5148\u9009 $fa_i$\u3002\n\n\u90a3\u4e48\u4e0a\u9762\u6761\u4ef6\u53ef\u8f6c\u5316\u4e3a\uff1a$\\operatorname{dis}(u,i) \\ge g_i$ \u4e14 $\\operatorname{dis}(u, fa_i) \\le g_{fa_i}$\u3002\n\n\u4e8e\u662f\uff0c\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\uff1a\u5bf9\u4e8e\u4e00\u4e2a $u$\uff0c\u6c42\u6709\u591a\u5c11\u4e2a $i$ \u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\uff0c\u6c42\u89e3\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n^2)$\u3002\n\n\u8003\u8651\u4f18\u5316\u3002\n\n\u4ee4 $deg_i$ \u8868\u793a $i$ \u7684\u5ea6\u6570\uff0c$siz_i$ \u8868\u793a $i$ \u7684\u5b50\u6811\u5927\u5c0f\u3002\n\n\u6211\u4eec\u53d1\u73b0 $\\sum\\limits_{v\\in sub(u)}deg_v=2 \\times siz_u - 1$\uff0c\u5373 $1 = \\sum\\limits_{v \\in sub(u)}(2 - deg_v)$\u3002\n\n\u800c\u4e00\u4e2a\u5b50\u6811\u7684\u8d21\u732e\u53ea\u6709 $1$\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u5f0f\u5b50\u8f6c\u5316\u4e3a\uff1a$ans_u=\\sum\\limits_{i=1}^{n} [\\operatorname{dis}(u,i)\\ge g_i](2-deg_i)$\uff0c\u6b64\u65f6\u5c31\u5df2\u7ecf\u81ea\u52a8\u9009\u6ee1\u8db3\u7684\u4e14\u6df1\u5ea6\u6700\u5c0f\u7684\u4e86\u3002\n\n\u8003\u8651\u518d\u6b21\u4f18\u5316\uff1a\n\n\u5bf9\u4e8e\u8fd9\u79cd\u65e0\u6839\u6811\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7528\u70b9\u5206\u6cbb\uff0c\u4ee5\u5f53\u524d\u5206\u6cbb\u4e2d\u5fc3\u4e3a\u6839\uff0c\u7ef4\u62a4\u6709\u591a\u5c11\u4e2a $i$ \u6ee1\u8db3 $g_i \\leq dep_u+dep_i$\uff0c\u5373 $dep_u \\geq g_i-dep_i$\uff0c\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\uff0c\u6ce8\u610f\u94fe\u91cd\u5408\u7684\u60c5\u51b5\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n \\log^2 n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int _ = 2e5 + 10;\n\ninline int read()\n{\n\tint x = 0, f = 1;\n\tchar c = getchar();\n\twhile (c < '0' || c > '9')\n\t{\n\t\tif (c == '-')\n\t\t\tf = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9')\n\t\tx = x * 10 + (c - '0'), c = getchar();\n\treturn x * f;\n}\n\nint n;\n\nint tot, head[_], to[_ << 1], nxt[_ << 1];\n\nbool vis[_];\n\nint g[_], siz[_], mx[_], deg[_], d[_], p[_], ans[_], rt, sum;\n\nint cnt, o[_];\n\nint c[_];\n\nvoid update(int x, int val)\n{\n\tfor(; x <= 2 * n; x += x & -x)\n\t\tc[x] += val;\n}\n\nint query(int x)\n{\n\tint res = 0;\n\tfor(; x; x -= x & -x)\n\t\tres += c[x];\n\treturn res;\n}\n\nvoid add(int u, int v)\n{\n\tto[++tot] = v;\n\tnxt[tot] = head[u];\n\thead[u] = tot;\n}\n\nvoid dfs1(int u, int fa)\n{\n\tsiz[u] = 1;\n\tfor(int i = head[u]; i; i = nxt[i])\n\t{\n\t\tint v = to[i];\n\t\tif(v == fa)\n\t\t\tcontinue;\n\t\tdfs1(v, u);\n\t\tg[u] = min(g[u], g[v] + 1);\n\t}\n}\n\nvoid dfs2(int u, int fa)\n{\n\tfor(int i = head[u]; i; i = nxt[i])\n\t{\n\t\tint v = to[i];\n\t\tif(v == fa)\n\t\t\tcontinue;\n\t\tg[v] = min(g[v], g[u] + 1);\n\t\tdfs2(v, u);\n\t}\n}\n\nvoid get_rt(int u, int fa)\n{\n\tsiz[u] = 1, mx[u] = 0;\n\tfor(int i = head[u]; i; i = nxt[i])\n\t{\n\t\tint v = to[i];\n\t\tif(vis[v] || v == fa)\n\t\t\tcontinue;\n\t\tget_rt(v, u);\n\t\tsiz[u] += siz[v];\n\t\tmx[u] = max(mx[u], siz[v]);\n\t}\n\tmx[u] = max(mx[u], sum - siz[u]);\n\tif(mx[u] < mx[rt])\n\t\trt = u;\n}\n\n\nvoid get_dis(int u, int fa)\n{\n\to[++cnt] = u;\n\tfor(int i = head[u]; i; i = nxt[i])\n\t{\n\t\tint v = to[i];\n\t\tif(v == fa || vis[v])\n\t\t\tcontinue;\n\t\td[v] = d[u] + 1;\n\t\tget_dis(v, u);\n\t}\n}\n\nvoid calc(int u, int len, int mul)\n{\n\td[u] = len, cnt = 0;\n\tget_dis(u, 0);\n\tfor(int i = 1; i <= cnt; ++i)\n\t\tupdate(g[o[i]] - d[o[i]] + n, 2 - deg[o[i]]);\n\tfor(int i = 1; i <= cnt; ++i)\n\t{\n\t\tupdate(g[o[i]] - d[o[i]] + n, -(2 - deg[o[i]]));\n\t\tans[o[i]] += query(d[o[i]] + n) * mul;\n\t\tupdate(g[o[i]] - d[o[i]] + n, 2 - deg[o[i]]);\n\t}\n\tfor(int i = 1; i <= cnt; ++i)\n\t\tupdate(g[o[i]] - d[o[i]] + n, -(2 - deg[o[i]]));\n}\n\nvoid dfz(int u)\n{\n\tvis[u] = 1;\n\tcalc(u, 0, 1);\n\tfor(int i = head[u]; i; i = nxt[i])\n\t{\n\t\tint v = to[i];\n\t\tif(vis[v])\n\t\t\tcontinue;\n\t\tcalc(v, 1, -1);\n\t\trt = 0, sum = siz[v];\n\t\tget_rt(v, u), dfz(rt);\n\t}\n}\n\nsigned main()\n{\n\tmemset(g, 0x3f, sizeof g);\n\tn = read();\n\tint a, b;\n\tfor(int i = 1; i < n; ++i)\n\t{\n\t\ta = read(), b = read();\n\t\tadd(a, b), add(b, a);\n\t\tdeg[a]++, deg[b]++;\n\t}\n\tfor(int i = 1; i <= n; ++i)\n\t\tif(deg[i] == 1) g[i] = 0;\n\tdfs1(1, 0), dfs2(1, 0);\n\trt = 0, sum = n, mx[0] = 2e9;\n\tget_rt(1, 0), dfz(rt);\n\tfor(int i = 1; i <= n; ++i)\n\t\tprintf(\"%d\\n\", deg[i] == 1 ? 1 : ans[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1647660521,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "P4183 [USACO18JAN]Cow at Large P"
    },
    {
        "content": "\u601d\u8def\u5176\u4ed6\u51e0\u4f4d\u5927\u4f6c\u90fd\u8bf4\u4e86\uff0c\u6211\u8bb2\u4e00\u8bb2\u70b9\u5206\u6cbb\u7684\u5177\u4f53\u5b9e\u73b0\u548c\u51e0\u4e2a\u7ec6\u8282\uff0c\u65b9\u4fbf\u5927\u5bb6\u8c03\u8bd5\u3002\n\n\u8bbe$h[x]$\u4e3a\u70b9$x$\u5230\u6700\u8fd1\u53f6\u8282\u70b9\u8ddd\u79bb\uff0c\u9996\u5148\u6709$ans[x]=\\sum\\limits_{i=1}^n[dis(x,i)\\ge h[i]](2-deg[i])$\n\n\u8bbe\u5f53\u524d\u5206\u6cbb\u4e2d\u5fc3\u4e3a$rt$\uff0c$dep[x]$\u4e3a\u70b9$x$\u5230$rt$\u8ddd\u79bb\uff0c\u5219$dis(x,i)\\ge h[i]\\Leftrightarrow dep[x]+dep[i]\\ge h[i]\\Leftrightarrow h[i]-dep[i]\\le dep[x]$\n\n\u56e0\u6b64\u52a0\u5165\u8d21\u732e\u65f6\u5c06\u6bcf\u4e2a$x$\u7684$2-deg[x]$\u52a0\u5165\u5230$h[i]-dep[i]$\u4f4d\u7f6e\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7edf\u8ba1$\\le dep[x]$\u7684\u548c\n\n\u8fd9\u91cc\u7ed9\u51fa\u8f83\u4e3a\u6e05\u6670\u7684\u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\u3002\n\n\u5b9e\u73b0\u65b9\u6cd51\n>1.\u627e\u6839\n\n>2.\u5c06\u6bcf\u4e2a\u5b50\u6811\u8282\u70b9\u7684\u8d21\u732e\u52a0\u5165\u6811\u72b6\u6570\u7ec4\n\n>3.\u52a0\u5206\u6cbb\u4e2d\u5fc3\u7684\u7b54\u6848\n\n>4.\u5c06\u5206\u6cbb\u4e2d\u5fc3\u8d21\u732e\u52a0\u5165\u6811\u72b6\u6570\u7ec4\n\n>5.\u5bf9\u4e8e\u5206\u6cbb\u4e2d\u5fc3\u7684\u6bcf\u68f5\u5b50\u6811\uff0c\u5c06\u5176\u6240\u6709\u8282\u70b9\u7684\u8d21\u732e\u4ece\u6811\u72b6\u6570\u7ec4\u5220\u9664\uff0c\u5728\u7ed9\u8fd9\u68f5\u5b50\u6811\u7684\u8282\u70b9\u52a0\u7b54\u6848\uff0c\u7136\u540e\u5c06\u5176\u6240\u6709\u8282\u70b9\u7684\u8d21\u732e\u52a0\u5165\u6811\u72b6\u6570\u7ec4\n\n>6.\u5c06\u5f53\u524d\u5206\u6cbb\u5757\u6240\u6709\u8282\u70b9\u8d21\u732e\u4ece\u6811\u72b6\u6570\u7ec4\u5220\u9664\n\n>7.\u5206\u6cbb\n\n\u5b9e\u73b0\u65b9\u6cd52\n>1.\u627e\u6839\n\n>2.\u5c06\u5f53\u524d\u5206\u6cbb\u5757\u6240\u6709\u8282\u70b9\u8d21\u732e\u52a0\u5165\u6811\u72b6\u6570\u7ec4\n\n>3.\u7ed9\u5f53\u524d\u5206\u6cbb\u5757\u6240\u6709\u8282\u70b9\u52a0\u7b54\u6848\n\n>4.\u5c06\u5f53\u524d\u5206\u6cbb\u5757\u6240\u6709\u8282\u70b9\u8d21\u732e\u4ece\u6811\u72b6\u6570\u7ec4\u5220\u9664\n\n>5.\u5bf9\u4e8e\u5f53\u524d\u5206\u6cbb\u4e2d\u5fc3\u7684\u6bcf\u68f5\u5b50\u6811\uff0c\u5c06\u5176\u6240\u6709\u8282\u70b9\u8d21\u732e\u52a0\u5165\u6811\u72b6\u6570\u7ec4\uff0c\u518d\u7ed9\u8fd9\u4e9b\u8282\u70b9\u51cf\u53bb\u591a\u4f59\u7684\u7b54\u6848\uff08\u56e0\u4e3a\u5728\u7b2c2\u6b65\u4e2d\u52a0\u4e86\u540c\u4e00\u5b50\u6811\u7684\u8282\u70b9\u6784\u6210\u8def\u5f84\u7684\u60c5\u51b5\uff09\uff0c\u518d\u5c06\u5176\u8d21\u732e\u4ece\u6811\u72b6\u6570\u7ec4\u5220\u9664\n\n>6.\u5206\u6cbb\n\n\u51e0\u4e2a\u7ec6\u8282\uff1a\n>1.\u867d\u7136\u6811\u72b6\u6570\u7ec4\u5728\u4e2d\u95f4\u8fc7\u7a0b\u53ef\u80fd\u7206int\uff0c\u4f46\u7531\u4e8e\u6700\u7ec8\u7b54\u6848$\\in[1,n]$\uff0c\u5373\u4f7f\u4e2d\u9014\u4ece\u6b63\u7684\u52a0\u7206\u6210\u8d1f\u7684\uff0c\u4e5f\u4e00\u5b9a\u4f1a\u518d\u628a\u5b83\u51cf\u6210\u6b63\u7684\uff0c\u56e0\u6b64long long\u5e76\u4e0d\u9700\u8981\uff08\u5f53\u7136\u5f00\u4e86\u6709\u5907\u65e0\u60a3\uff01\uff09\n\n>2.\u6811\u72b6\u6570\u7ec4\u8981\u5904\u7406\u4e0b\u6807\u4e3a\u8d1f\u6570\uff0c\u8981\u4e48\u5168\u90e8\u52a0\u4e0a$n$\uff0c\u8981\u4e48\u50cf\u4e0b\u6587\u6211\u7684\u4ee3\u7801\u4e2d\u90a3\u4e48\u5904\u7406\n\n>3.\u6811\u5f62DP\u6c42$h[x]$\u65f6\u6ce8\u610f\u4e00\u5f00\u59cb\u968f\u4fbf\u5b9a\u7684\u6811\u6839\u5c31\u662f\u53f6\u5b50\u7684\u60c5\u51b5\uff0c\u8fd9\u91cc\u8981\u52a0\u4e2a\u7279\u5224\n\n>4.\u53f6\u5b50\u8282\u70b9\u7b54\u6848\u5fc5\u4e3a1\n\n\u5e0c\u671b\u8fd9\u4e9b\u80fd\u5e2e\u52a9\u5927\u5bb6\u8c03\u8bd5\uff01\u6211\u5c31\u56e0\u4e3a\u8fd9\u4e9b\u5947\u602a\u7684\u4e1c\u897f\u8017\u4e86\u4e24\u4e2a\u591a\u5c0f\u65f6\u3002\u3002\n\n\u63a5\u4e0b\u6765\u4e0a\u4ee3\u7801\uff0c\u6211\u8fd9\u91cc\u7528\u7684\u662f\u6211\u8bb2\u7684\u5b9e\u73b0\u65b9\u6cd51\u3002\n```\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define ri register int\nconst int INF=987654321;\nint n,x,y,rt,tsiz,hei[100005],siz[100005],f[100005],c[100005],ans[100005];\nint head[100005],to[200005],nxt[200005],ecnt,deg[200005];\nbool vis[100005];\ninline void add(int x,int y)\n{\n\tecnt++;\n\tto[ecnt]=y;\n\tnxt[ecnt]=head[x];\n\thead[x]=ecnt;\n\tdeg[y]++;\n}\ninline void ddxg(int x,int y)\n{\n\tif(x<=0)c[0]+=y;\n\telse for(ri i=x;i<n;i+=i&-i)c[i]+=y;\n}\ninline int qjcx(int x)\n{\n\tint res=c[0];\n\tfor(ri i=x;i;i-=i&-i)res+=c[i];\n\treturn res;\n}\nvoid gethei1(int x,int fa)\n{\n\tif(deg[x]==1&&x>1)return;\n\tif(deg[x]>1)hei[x]=INF;\n\tfor(int i=head[x];i;i=nxt[i])\n\t\tif(to[i]!=fa)\n\t\t{\n\t\t\tgethei1(to[i],x);\n\t\t\thei[x]=min(hei[x],hei[to[i]]+1);\n\t\t}\n}\nvoid gethei2(int x,int fa)\n{\n\tfor(int i=head[x];i;i=nxt[i])\n\t\tif(to[i]!=fa&&deg[to[i]]!=1)\n\t\t{\n\t\t\thei[to[i]]=min(hei[to[i]],hei[x]+1);\n\t\t\tgethei2(to[i],x);\n\t\t}\n}\nvoid getrt(int x,int fa)\n{\n\tsiz[x]=1; f[x]=0;\n\tfor(int i=head[x];i;i=nxt[i])\n\t\tif(!vis[to[i]]&&to[i]!=fa)\n\t\t{\n\t\t\tgetrt(to[i],x);\n\t\t\tsiz[x]+=siz[to[i]];\n\t\t\tf[x]=max(f[x],siz[to[i]]);\n\t\t}\n\tf[x]=max(f[x],tsiz-siz[x]);\n\tif(f[x]<f[rt])rt=x;\n}\nvoid addcon(int x,int fa,int dep)\n{\n\tddxg(hei[x]-dep,2-deg[x]);\n\tfor(int i=head[x];i;i=nxt[i])\n\t\tif(to[i]!=fa&&!vis[to[i]])addcon(to[i],x,dep+1);\n}\nvoid addans(int x,int fa,int dep)\n{\n\tans[x]+=qjcx(dep);\n\tfor(int i=head[x];i;i=nxt[i])\n\t\tif(to[i]!=fa&&!vis[to[i]])addans(to[i],x,dep+1);\n}\nvoid delcon(int x,int fa,int dep)\n{\n\tddxg(hei[x]-dep,deg[x]-2);\n\tfor(int i=head[x];i;i=nxt[i])\n\t\tif(to[i]!=fa&&!vis[to[i]])delcon(to[i],x,dep+1);\n}\nvoid dfz(int x)\n{\n\trt=0;\n\tgetrt(x,x);\n\tvis[rt]=1;\n\tfor(int i=head[rt];i;i=nxt[i])\n\t\tif(!vis[to[i]])addcon(to[i],to[i],1);\n\tans[rt]+=qjcx(0);\n\tddxg(hei[rt],2-deg[rt]);\n\tfor(int i=head[rt];i;i=nxt[i])\n\t\tif(!vis[to[i]])\n\t\t{\n\t\t\tdelcon(to[i],to[i],1);\n\t\t\taddans(to[i],to[i],1);\n\t\t\taddcon(to[i],to[i],1);\n\t\t}\n\tdelcon(rt,rt,0);\n\tfor(int i=head[rt];i;i=nxt[i])\n\t\tif(!vis[to[i]])\n\t\t{\n\t\t\ttsiz=siz[to[i]]>siz[rt]?siz[x]-siz[rt]:siz[to[i]];\n\t\t\tdfz(to[i]);\n\t\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(ri i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tgethei1(1,1);\n\tgethei2(1,1);\n\tf[0]=INF;\n\ttsiz=n;\n\tdfz(1);\n\tfor(ri i=1;i<=n;i++)\n\t{\n\t\tif(deg[i]==1)printf(\"1\\n\");\n\t\telse printf(\"%lld\\n\",ans[i]);\n\t}\n}",
        "postTime": 1568547987,
        "uid": 31381,
        "name": "C3H5ClO",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4183 \u3010[USACO18JAN]Cow at Large P\u3011"
    },
    {
        "content": "\u5e26\u6709\u5c0f trick \u7684\u70b9\u5206\u6cbb\u3002\n\n\u5efa\u8bae\u5148\u505a\u5b8c [\u5f31\u5316\u7248](https://www.luogu.com.cn/problem/P4186) \u518d\u770b\u3002\n\n\u5047\u5982\u5976\u725b\u5728 $u$\uff0c\u90a3\u4e48\u6240\u9700\u7684\u6700\u5c11\u519c\u592b\u6570\u4e3a $\\sum\\limits_{v\\in son(u)}[dis(u,v)\\ge g_v][dis(u,fa_v)<g_{fa_v}]$\u3002\n\n\u5176\u4e2d $dis(u,v)$ \u4e3a $u,v$ \u5728\u6811\u4e0a\u7684\u8ddd\u79bb\uff0c$g_u$ \u4e3a $u$ \u5230\u79bb\u5b83\u6700\u8fd1\u7684\u51fa\u5165\u53e3\u7684\u8ddd\u79bb\uff08BFS \u9884\u5904\u7406\uff09\uff0c$fa_u$ \u4e3a $u$ \u7684\u7236\u4eb2\u3002\n\n\u590d\u6742\u5ea6 $O(n^2)$\u3002\n\n\u7531\u4e8e $dis(u,fa_v)<g_{fa_v}$ \u9650\u5236\u7684\u5b58\u5728\uff0c\u4e0d\u597d\u4f18\u5316\u3002\n\n\u4f46\u901a\u8fc7\u4eba\u7c7b\u667a\u6167\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e $u$ \u8fd9\u68f5\u5b50\u6811\uff0c$\\sum\\limits_{v\\in son(u)}in_v=2n-1$\u3002\u5176\u4e2d $in_u$ \u4e3a $u$ \u7684\u5ea6\u6570\uff0c$n$ \u4e3a\u5b50\u6811\u5927\u5c0f\uff0c$v$ \u53ef\u4ee5\u4e3a $u$\u3002\n\n\u5c06\u5f0f\u5b50\u53d8\u6362\u4e00\u4e0b\u5f97\uff1a$1=\\sum\\limits_{v\\in son(u)}(2-in_v)$\u3002\n\n\u8fd9\u6837\u539f\u5f0f\u5c31\u53ef\u4ee5\u53bb\u6389\u540e\u9762\u7684\u9650\u5236\uff0c\u53d8\u4e3a $\\sum\\limits_{v\\in son(u)}[dis(u,v)\\le g_v](2-in_v)$\u3002\n\n\u63a5\u4e0b\u6765\u70b9\u5206\u6cbb\u7684\u64cd\u4f5c\u548c [\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/P4178) \u5f88\u50cf\uff0c\u53ef\u4ee5\u770b\u4e00\u773c\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e\u5206\u6cbb\u91cd\u5fc3 $rt$ \u4e2d\u7684\u4e24\u4e2a\u70b9 $u,v$\uff0c\u5f53\u524d\u4ec5\u5f53 $g_u\\le d_u+d_v$ \u65f6\uff0c$v$ \u4f1a\u5bf9 $u$ \u4ea7\u751f\u8d21\u732e\u3002\u5176\u4e2d $d_u$ \u4e3a $dis(u,rt)$\u3002\u8fd9\u5176\u5b9e\u5c31\u662f\u4e2a\u70b9\u5bf9\u95ee\u9898\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ee5 $g_u-d_u$ \u4e3a\u4e0b\u6807\u5efa\u4e00\u68f5\u6811\u72b6\u6570\u7ec4\uff0c\u6bcf\u6b21\u8bbf\u95ee\u524d\u7f00\u548c\u5373\u53ef\u3002\u7531\u4e8e\u4e0b\u6807\u53ef\u80fd\u4e3a\u8d1f\uff0c\u6240\u4ee5\u9700\u8981\u6574\u4f53\u5e73\u79fb\u4e00\u4e0b\u3002\n\n\u590d\u6742\u5ea6 $O(n\\log^2 n)$\u3002\n\ncode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=7e4+5;\nint n,g[N],vis[N],f[N],siz[N],d[N],c[N*2],in[N],tot,ans[N],t[N],cnt,rt;\nqueue<int>q;\nvector<int>adj[N];\nint lbt(int x){return x&(-x);}\nvoid update(int i,int k){for(;i<=2*n;i+=lbt(i))c[i]+=k;}\nint getsum(int i){int res=0;for(;i;i-=lbt(i))res+=c[i];return res;}\nvoid dfs(int u,int lst){\n  siz[u]=1;f[u]=0;\n  for(int i=0;i<adj[u].size();++i){\n    int v=adj[u][i];if(v==lst||vis[v])continue;\n    dfs(v,u);siz[u]+=siz[v];f[u]=max(f[u],siz[v]);\n  }\n  f[u]=max(f[u],tot-siz[u]);\n  if(f[u]<f[rt])rt=u;\n}\nvoid getdis(int u,int lst){\n  t[++cnt]=u;\n  for(int i=0;i<adj[u].size();++i){\n    int v=adj[u][i];if(v==lst||vis[v])continue;\n    d[v]=d[u]+1;getdis(v,u);\n  }\n}\nvoid getans(int u,int len,int op){\n  d[u]=len;cnt=0;getdis(u,0);\n  for(int i=1;i<=cnt;++i)update(g[t[i]]-d[t[i]]+n,2-in[t[i]]);\n  for(int i=1;i<=cnt;++i){\n    update(g[t[i]]-d[t[i]]+n,in[t[i]]-2);\n    ans[t[i]]+=op*getsum(d[t[i]]+n);\n    update(g[t[i]]-d[t[i]]+n,2-in[t[i]]);\n  }\n  for(int i=1;i<=cnt;++i)update(g[t[i]]-d[t[i]]+n,in[t[i]]-2);\n}\nvoid solve(int u){\n  getans(u,0,1);vis[u]=1;\n  for(int i=0;i<adj[u].size();++i){\n    int v=adj[u][i];if(vis[v])continue;\n    getans(v,1,-1);\n    rt=0;tot=siz[v];dfs(v,u);solve(rt);\n  }\n}\nint main(){\n  ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n  cin>>n;\n  for(int i=1;i<n;++i){\n    int u,v;cin>>u>>v;\n    adj[u].push_back(v);adj[v].push_back(u);++in[u];++in[v];\n  }\n  for(int i=1;i<=n;++i)if(in[i]==1)q.push(i),vis[i]=1;\n  while(!q.empty()){\n    int u=q.front();q.pop();\n    for(int i=0;i<adj[u].size();++i){\n      int v=adj[u][i];if(vis[v])continue;\n      vis[v]=1;g[v]=g[u]+1;q.push(v);\n    }\n  }\n  for(int i=1;i<=n;++i)vis[i]=0;\n  f[0]=1e9;tot=n;dfs(1,0);solve(rt);\n  for(int i=1;i<=n;++i)cout<<ans[i]<<endl;\n  return 0;\n}\n\n```\n",
        "postTime": 1684922824,
        "uid": 173864,
        "name": "EstasTonne",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4183"
    }
]