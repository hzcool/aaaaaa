[
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5138)\n# \u9898\u76ee\u5927\u610f\n\u7ed9\u51fa\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u6709 $m$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4e3a\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\u4e4b\u4e00\uff1a\n\n- \u7ed9\u51fa $x,k$\uff0c\u5c06 $x$ \u5b50\u6811\u5185\u7684\u8282\u70b9 $u$ \u6743\u503c\u589e\u52a0 $f_{\\text{dist}(x,u)+k}$\n\n- \u7ed9\u51fa $u,v$\uff0c\u67e5\u8be2 $u\\to v$ \u8fd9\u6761\u94fe\u4e0a\u6240\u6709\u70b9\u7684\u6743\u503c\u4e4b\u548c\u3002\n\n\u7b54\u6848\u5bf9 $10^9+7$ \u53d6\u6a21\u3002$f_{n}$ \u8868\u793a\u6590\u6ce2\u62c9\u5951\u6570\u5217\u7b2c $n$ \u9879\u3002\n\n$n,m\\le 10^5$\n# \u601d\u8def\n\u8001\u5b9e\u8bf4\u8fd9\u4e2a\u9898\u76ee\u4e0d\u7ba1\u662f\u4ece\u601d\u7ef4\u96be\u5ea6\u8fd8\u662f\u4ee3\u7801\u5b9e\u73b0\u96be\u5ea6\u6765\u8bf4\u90fd\u4e0d\u7b97\u5f88\u96be\u5427?\n\n\u9996\u5148\u6709\u4e00\u4e2a\u4f17\u6240\u5468\u77e5\u7684\u5f0f\u5b50\uff1a\n\n$$f_{n+m}=f_{n-1}\\times f_m+f_n\\times f_{m+1}$$\n\n\u5177\u4f53\u8bc1\u660e\u76f4\u63a5\u66b4\u529b\u628a $f_{n+m}$ \u7528 $f_{n}=f_{n-1}+f_{n-2}$ \u5c55\u5f00\u5373\u53ef\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u70b9 $u$ \u800c\u8a00\u589e\u52a0\u7684\u503c\u5c31\u53ef\u4ee5\u5199\u6210\uff1a\n\n$$f_{\\text{dep}(u)-1}\\times f_{k-\\text{dep}(x)}+f_{\\text{dep}(u)}\\times f_{k-\\text{dep}+1}$$\n\n\u7136\u540e\u4f60\u53d1\u73b0\u540e\u9762\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u64cd\u4f5c\u6765\u8bf4\u662f\u4e2a\u5b9a\u503c\uff0c\u524d\u9762\u4e00\u4e2a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u6765\u8bf4\u662f\u4e2a\u5b9a\u503c\u3002\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u6811\u94fe\u5256\u5206\u4e0a\u5c31\u597d\u4e86\uff0c\u7ef4\u62a4 $\\sum f_{\\text{dep}(u)}$ \u4ee5\u53ca $\\sum_{\\text{dep}(u)-1}$ \u3001\u7b54\u6848\u4ee5\u53ca\u8fd9\u4e24\u4e2a\u7cfb\u6570\u7684\u61d2\u6807\u8bb0\u3002\n\n\u5728\u6c42 $f_{n}$ \u7684\u65f6\u5019\u4e0d\u9700\u8981\u77e9\u9635\u5feb\u901f\u5e42\uff0c\u76f4\u63a5\u6269\u57df\u5373\u53ef\uff0c\u53ef\u4ee5\u8bc1\u660e $\\sqrt 5$ \u7684\u7cfb\u6570\u6700\u540e\u4e00\u5b9a\u4e3a $0$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n\\log^2n)$\u3002\n# $\\texttt{Code}$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define Int register int\n#define mod 1000000007\n#define inv2 (mod+1)/2\n#define inv5 400000003\n#define ll long long\n#define MAXN 100005\n\ntemplate <typename T> inline void read (T &t){t = 0;char c = getchar();int f = 1;while (c < '0' || c > '9'){if (c == '-') f = -f;c = getchar();}while (c >= '0' && c <= '9'){t = (t << 3) + (t << 1) + c - '0';c = getchar();} t *= f;}\ntemplate <typename T,typename ... Args> inline void read (T &t,Args&... args){read (t);read (args...);}\ntemplate <typename T> inline void write (T x){if (x < 0){x = -x;putchar ('-');}if (x > 9) write (x / 10);putchar (x % 10 + '0');}\n\nint mul (int a,int b){return 1ll * a * b % mod;}\nint dec (int a,int b){return a >= b ? a - b : a + mod - b;}\nint add (int a,int b){return a + b >= mod ? a + b - mod : a + b;}\nint qkpow (int a,int b){\n\tint res = 1;for (;b;b >>= 1,a = mul (a,a)) if (b & 1) res = mul (res,a);\n\treturn res;\n}\n\nstruct Sqrx{//\u8868\u793aasqrt{5}+b \n\tint a,b;\n\tSqrx(){}\n\tSqrx(int _a,int _b){a = _a,b = _b;}\n\tSqrx operator + (const int &p)const{return Sqrx(a,add (b,p));}\n\tSqrx operator * (const int &p)const{return Sqrx(mul (a,p),mul (b,p));}\n\tSqrx operator - (const Sqrx &p)const{return Sqrx(dec (a,p.a),dec (b,p.b));}\n\tSqrx operator * (const Sqrx &p)const{return Sqrx(add (mul (a,p.b),mul (p.a,b)),add (mul (5,mul (a,p.a)),mul (b,p.b)));}\n\ttemplate <typename T> Sqrx operator ^ (T b){\n\t\tSqrx res (0,1),a = *this;\n\t\tfor (;b;b >>= 1,a = a * a) if (b & 1) res = res * a;\n\t\treturn res; \n\t}\n};\n\ntemplate <typename T> int Fib (T n){\n\tif (n < 0) return (-n) & 1 ? Fib (-n) : mod - Fib(-n);\n\tSqrx res = (Sqrx(inv2,inv2) ^ n) - (Sqrx(mod - inv2,inv2) ^ n);\n\treturn (res * Sqrx(1,0) * inv5).b;\n}\n\nint n,m,ind;\nint dfn[MAXN],tur[MAXN],siz[MAXN],son[MAXN],dep[MAXN],par[MAXN],top[MAXN]; \n\nvector <int> G[MAXN];\n\nvoid dfs (int u,int fa){\n\tpar[u] = fa,dep[u] = dep[fa] + 1,siz[u] = 1;\n\tfor (Int v : G[u]) if (v ^ fa){\n\t\tdfs (v,u);\n\t\tsiz[u] += siz[v];\n\t\tif (siz[v] > siz[son[u]]) son[u] = v;\n\t}\n}\n\nvoid dfs1 (int u,int Top){\n\ttur[dfn[u] = ++ ind] = u,top[u] = Top;\n\tif (son[u]) dfs1 (son[u],Top);\n\tfor (Int v : G[u]) if (v != par[u] && v != son[u]) dfs1 (v,v);\n}\n\nstruct Segment{\n#define PSS pair<int,int>\n#define fi first\n#define sc second\n\tint sum[MAXN << 2];\n\tPSS Firs[MAXN << 2],laz[MAXN << 2];\n\tvoid Pushadd (int x,int l,int r,PSS v){\n\t\tsum[x] = add (sum[x],add (mul (v.fi,Firs[x].fi),mul (v.sc,Firs[x].sc)));\n\t\tlaz[x].fi = add (laz[x].fi,v.fi),laz[x].sc = add (laz[x].sc,v.sc); \n\t}\n\tvoid Pushdown (int x,int l,int r){\n\t\tint mid = (l + r) >> 1;\n\t\tPushadd (x << 1,l,mid,laz[x]);\n\t\tPushadd (x << 1 | 1,mid + 1,r,laz[x]);\n\t\tlaz[x] = make_pair (0,0);\n\t}\n\tvoid Pushup (int x){\n\t\tsum[x] = add (sum[x << 1],sum[x << 1 | 1]); \n\t}\n\tvoid build (int x,int l,int r){\n\t\tif (l == r){\n\t\t\tFirs[x] = make_pair (Fib (dep[tur[l]] - 1),Fib (dep[tur[l]]));\n\t\t\treturn ;\n\t\t}\n\t\tint mid = (l + r) >> 1;\n\t\tbuild (x << 1,l,mid),build (x << 1 | 1,mid + 1,r);\n\t\tPushup (x),\n\t\tFirs[x].fi = add (Firs[x << 1].fi,Firs[x << 1 | 1].fi),\n\t\tFirs[x].sc = add (Firs[x << 1].sc,Firs[x << 1 | 1].sc);\n\t}\n\tvoid modify (int x,int l,int r,int ql,int qr,PSS v){\n\t\tif (l >= ql && r <= qr){\n\t\t\tPushadd (x,l,r,v);\t\n\t\t\treturn ;\n\t\t}\n\t\tPushdown (x,l,r);int mid = (l + r) >> 1;\n\t\tif (ql <= mid) modify (x << 1,l,mid,ql,qr,v);\n\t\tif (qr > mid) modify (x << 1 | 1,mid + 1,r,ql,qr,v);\n\t\tPushup (x);\n\t}\n\tint query (int x,int l,int r,int ql,int qr){\n\t\tif (l >= ql && r <= qr) return sum[x];\n\t\tPushdown (x,l,r);int mid = (l + r) >> 1,res = 0;\n\t\tif (ql <= mid) res = add (res,query (x << 1,l,mid,ql,qr));\n\t\tif (qr > mid) res = add (res,query (x << 1 | 1,mid + 1,r,ql,qr));\n\t\treturn res; \n\t}\n}Tree;\n\nint Tree_Query (int u,int v){\n\tint res = 0;\n\twhile (top[u] ^ top[v]){\n\t\tif (dep[top[u]] < dep[top[v]]) swap (u,v);\n\t\tres = add (res,Tree.query (1,1,n,dfn[top[u]],dfn[u])),u = par[top[u]];  \n\t}\n\tif (dfn[u] > dfn[v]) swap (u,v);\n\tres = add (res,Tree.query(1,1,n,dfn[u],dfn[v])); \n\treturn res;\n}\n\nvoid Tree_Update (int x,ll k){\n\tTree.modify (1,1,n,dfn[x],dfn[x] + siz[x] - 1,make_pair (Fib (k - dep[x]),Fib (k - dep[x] + 1))); \t\n}\n\nsigned main(){\n\tread (n,m);\n\tfor (Int i = 2,u,v;i <= n;++ i) read (u,v),G[u].push_back (v),G[v].push_back (u);\n\tdfs (1,0),dfs1 (1,1),Tree.build(1,1,n);\n\tfor (Int i = 1;i <= m;++ i){\n\t\tchar s[5] = {};scanf (\"%s\",s);\n\t\tif (s[0] == 'U'){\n\t\t\tint x;ll k;read (x,k);\n\t\t\tTree_Update (x,k);\n\t\t}\n\t\telse{\n\t\t\tint x,y;read (x,y);\n\t\t\twrite (Tree_Query (x,y)),putchar ('\\n');\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1604151544,
        "uid": 124781,
        "name": "Walking_Dead",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5138 \u3010fibonacci\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u8fd9\u9053\u9898\u611f\u89e6\u597d\u6df1\u554a\uff0c\u8c03\u4e863\u5929\u7684\u6811\u5256\n\n---\n\n\u9898\u76ee\u8981\u6c42\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n1.\u67e5\u8be2\u4e66\u4e0a\u4e00\u6761\u94fe\u7684\u6743\u503c\u548c\n\n2.\u7ed9\u5b9a\u4e00\u4e2a$k$,\u5c06$x$\u53ca\u5176\u5b50\u6811\u7684\u6240\u6709\u70b9\u52a0\u4e0a$f[D+k]$\uff0c\u5176\u4e2d$D$\u8868\u793a\u8be5\u8282\u70b9\u5728\u5b50\u6811\u5185\u7684\u6df1\u5ea6,$f$\u8868\u793a\u6590\u6ce2\u90a3\u5951\u6570\u5217\n\n\u8003\u8651\u5230\u5b50\u6811\u5185\u7684\u6df1\u5ea6\u4e0d\u592a\u597d\u505a\uff0c\u6211\u4eec\u628a\u5b83\u8f6c\u5316\u6210\u6bcf\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u6df1\u5ea6$dep[i]$\n\n\u5728\u4fee\u6539\u7684\u65f6\u5019\uff0c$k-=dep[x]$\n\n\u5c06\u6df1\u5ea6\u8f6c\u5316\u6210\u4e86\u5728\u6574\u68f5\u6811\u4e0a\u7684\u6df1\u5ea6\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6811\u94fe\u5256\u5206\u7ef4\u62a4\u8fd9\u4e24\u4e2a\u64cd\u4f5c\n\n\u8003\u8651\u5230\u6590\u6ce2\u90a3\u5951\u6570\u5217\u6709\u8fd9\u6837\u4e00\u4e2a\u6027\u8d28:\n\n$f[n+m]=f[m-1]*f[n]+f[m]*f[n+1]$\n\n\u8bc1\u660e\uff1a\n\n\u901a\u8fc7\u6570\u5b66\u5f52\u7eb3\u6cd5\n\n\u8bbe$1$\u81f3$x-1$\u90fd\u4e24\u4e24\u6ee1\u8db3$f[n+m]=f[m-1]*f[n]+f[m]*f[n+1]$\n\n\u4e0b\u8bc1\n\n$f[1+x]=f[x-1]*f[1]+f[x]*f[2]$\n\n$f[2+x]=f[x-1]*f[2]+f[x]*f[3]$\n\n$\u2026\u2026$\n\n$f[x-1+x]=f[x-1]*f[x-1]+f[x]*f[x]$\n\n\u5bf9\u4e8e\u4efb\u610f\u7684$f[p+x]$\n\n\u90fd\u6709$f[p+x]=f[(p-1)+x]+f[(p-2)+x]$\n\n$=f[p+(x-1)]+f[(p-1)+(x-1)]$\n\n$=f[x-2]*f[p]+f[x-1]*f[p+1]+f[x-2]*f[p-1]+f[x-1]*f[p]$\n\n$=f[x-2]*f[p+1]+f[x-1]*f[p+2]$\n\n$=f[x]*f[p+1]-f[x-1]*f[p+1]+f[x-1]*f[p]+f[x-1]*f[p+1]$\n\n$=f[x]*f[p+1]+f[x-1]*f[p]$\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u7684\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u8981\u7ef4\u62a4$f[dep[x]+K]$\uff0c\u5176\u4e2d$K=D+k-dep[x]$\n\u662f\u4e2a\u5b9a\u503c\n\n$f[dep[x]+K]=f[K-1]*f[dep[x]]+f[K]*f[dep[x]+1]$\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a\u4e8c\u5143\u7ec4$(f[dep[i]-1],f[dep[i]])$,\u5c31\u53ef\u4ee5\u5728$O(nlogn)$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u7ef4\u62a4\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\n\n\u628a\u8fd9\u4e2a\u95ee\u9898\u4e22\u5230\u6811\u4e0a\uff0c\u6811\u5256\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\n\n\u56e0\u4e3a$K$\u6709\u53ef\u80fd\u4e3a\u8d1f\u6570\uff0c\u8fd9\u91cc\u6c42$f[i]$\u5229\u7528\u4e86$f[-n]=(-1)^{n-1}f[n]$\uff0c\u914d\u5408\u77e9\u9635\u4e58\u6cd5\u5373\u53ef\u3002\n\n\u51e0\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff1a\n\n1.\u6811\u5256\u6bcf\u4e2a\u8282\u70b9\u7684\u521d\u59cb\u503c\u8981\u8bbe\u4e3a$f[dep[i]]$\n\n2.\u77e9\u9635\u4e58\u6cd5\u7684\u4e2d\u95f4\u77e9\u9635\u8bb0\u5f97\u8981\u521d\u59cb\u5316\n\n3.\u7ebf\u6bb5\u6811\u8981\u8bbe\u5b9a\u4e00\u4e2a\u4e8c\u5143\u7ec4\u914d\u5408\u7ef4\u62a4\u7b54\u6848\n\n4.\u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282\u95ee\u9898\uff0c\u6bd4\u5982\u8bf4\u4e8c\u5143\u7ec4\u7684\u52a0\u6cd5\u548c\u4e58\u6cd5qwq\n\n**Code:**\n\n```\n#include<bits/stdc++.h>\n\n#define rd(x) x=read()\n\n#define N 100005\n\n#define int long long\n\nusing namespace std;\n\nint n,m;\nconst int p=1e9+7;\n\nstruct node{\n    int x,y;\n    node(int _x=0,int _y=0){x=_x,y=_y;}\n    node operator + (const node & r)const{return node((x+r.x)%p,(y+r.y)%p);}\n    int operator * (const node & r)const{return (x*r.x+y*r.y)%p;}\n};//\u4e8c\u5143\u7ec4\u57fa\u672c\u8fd0\u7b97\n\nstruct matrix{\n\tint a[2][2];\n\tmatrix(){memset(a,0,sizeof(a));}\n\tinline void init(){a[0][0]=a[1][1]=1;}\n\tmatrix operator * (const matrix &x) const {\n\t\tmatrix ans;\n\t\tfor(int i=0;i<2;i++)\n\t\t\tfor(int j=0;j<2;j++)\n\t\t\t\tfor(int k=0;k<2;k++)\n\t\t\t\t\tans.a[i][k]=(ans.a[i][k]+a[i][j]*x.a[j][k])%p;\n\t\treturn ans;\n\t}\n}tr;//\u77e9\u9635\n\nmatrix fastPow(matrix a,int b)\n{\n\tmatrix ans;ans.init();\n\tfor(;b;b>>=1,a=a*a)if(b&1)ans=ans*a;\n\treturn ans;\n}//\u5feb\u901f\u5e42\n\nnode fib(int x)\n{\n    matrix ans;ans.a[0][1]=1;ans=ans*fastPow(tr,x<0?-x-1:x);\n    if(x>=0)return node(ans.a[0][0],ans.a[0][1]);\n    ans.a[0][(x+1)&1]=-ans.a[0][(x+1)&1];return node(ans.a[0][1],ans.a[0][0]);\n}//\u6c42\u6590\u6ce2\u90a3\u5951\u6570\u5217\n\nnamespace HLD{\n\t#define ls (rt<<1)\n\t#define rs (rt<<1|1)\n\tstruct E{\n\t\tint nxt,to;\n\t}e[N<<2];\n\tstruct T{\n\t\tint l,r;\n\t\tnode v,tag;\n\t\tint sum;\n\t\tvoid print(){printf(\"%d %d\\n%d %d\\n%d %d\\n%d\\n\",l,r,v.x,v.y,tag.x,tag.y,sum);}//DEBUG\n\t}t[N<<2];\n\tint v[N],head[N],s[N],d[N],f[N],sn[N],tp[N],rk[N],id[N],cnt;\n\tinline void addEdge(int u,int v){e[++cnt].nxt=head[u],e[cnt].to=v,head[u]=cnt;}\n\n\tvoid dfs1(int x)\n\t{\n\t\ts[x]=1,d[x]=d[f[x]]+1,v[x]=d[x];\n\t\tfor(int i=head[x];i;i=e[i].nxt)\n\t\t{\n\t\t\tint y=e[i].to;\n\t\t\tif(y!=f[x])\n\t\t\t{\n\t\t\t\tf[y]=x,dfs1(y),s[x]+=s[y];\n\t\t\t\tif(s[sn[x]]<s[y])sn[x]=y;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvoid dfs2(int x,int top)\n\t{\n\t\ttp[x]=top,id[x]=++cnt,rk[cnt]=x;\n\t\tif(sn[x])dfs2(sn[x],top);\n\t\tfor(int i=head[x];i;i=e[i].nxt)\n\t\t{\n\t\t\tint y=e[i].to;\n\t\t\tif(y!=f[x]&&y!=sn[x])dfs2(y,y);\n\t\t}\n\t}\n\t\n\tinline void pushup(int rt){t[rt].v=t[ls].v+t[rs].v,t[rt].sum=(t[ls].sum+t[rs].sum)%p;}\n\t\n\tvoid build(int rt,int l,int r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tt[rt].l=l,t[rt].r=r;\n\t    if(l==r)\n\t    {\n\t        t[rt].v=fib(v[rk[l]]);\n\t        return;\n\t    }\n\t    build(ls,l,mid),build(rs,mid+1,r);\n\t    pushup(rt);\n\t}\n\t\n\tinline void pushdown(int rt)\n\t{\n\t    if(t[rt].tag.x||t[rt].tag.y)\n\t    {\n\t        t[ls].tag=t[ls].tag+t[rt].tag,t[rs].tag=t[rs].tag+t[rt].tag;\n\t        t[ls].sum=(t[ls].sum+t[ls].v*t[rt].tag)%p,t[rs].sum=(t[rs].sum+t[rs].v*t[rt].tag)%p;\n\t        t[rt].tag=node();\n\t    }\n\t}\n\t\n\tvoid update(int rt,int l,int r,node c)\n\t{\n\t    if(t[rt].l>=l&&t[rt].r<=r)\n\t    {\n\t    \tt[rt].tag=t[rt].tag+c,t[rt].sum=(t[rt].sum+t[rt].v*c)%p;\n\t        return;\n\t    }\n\t    pushdown(rt);\n\t    int mid=(t[rt].l+t[rt].r)>>1;\n\t    if(mid>=l)update(ls,l,r,c);\n\t    if(mid<r)update(rs,l,r,c);\n\t    pushup(rt);\n\t}//\u7ebf\u6bb5\u6811\n\t\n\tint query(int rt,int l,int r)\n\t{\n\t    if(t[rt].l>=l&&t[rt].r<=r)return t[rt].sum;\n\t    pushdown(rt);\n\t    int mid=(t[rt].l+t[rt].r)>>1,ans=0;\n\t    if(mid>=l)ans=(ans+query(ls,l,r))%p;\n\t    if(mid<r)ans=(ans+query(rs,l,r))%p;\n\t    return ans;\n\t}\n\t\n\tinline int sum(int rt,int y)\n\t{\n\t    int ret=0;\n\t    while(tp[rt]!=tp[y])\n\t    {\n\t        if(d[tp[rt]]<d[tp[y]])swap(rt,y);\n\t        ret=(ret+query(1,id[tp[rt]],id[rt]))%p;\t\n\t        rt=f[tp[rt]];\n\t    }\n\t    if(d[rt]>d[y])swap(rt,y);\n\t    return (ret+query(1,id[rt],id[y]))%p;\n\t}\n\t\n\tvoid dfs(int rt,int l,int r)\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\tprintf(\"--------------------\\n%d\\n\",rt),t[rt].print();\n\t\t\tprintf(\"--------------------\\n\");\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tdfs(ls,l,mid),dfs(rs,mid+1,r);\n\t}//DEBUG\n}//\u6811\u5256\n\ninline int read()\n{\n    int f=1,x=0;char s=getchar();\n    while(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();}\n    while(s>='0'&&s<='9'){x=x*10+s-'0';s=getchar();}\n    return x*f;\n}\n\nsigned main()\n{\n\trd(n),rd(m),tr.a[0][1]=tr.a[1][0]=tr.a[1][1]=1;int u,v;\n\tfor(int i=1;i<n;i++)rd(u),rd(v),HLD::addEdge(u,v),HLD::addEdge(v,u);\n   HLD::cnt=0,HLD::dfs1(1),HLD::dfs2(1,1),HLD::cnt=0,HLD::build(1,1,n);\n   #ifdef DEBUG\n   for(int i=1;i<=n;i++)cout<<HLD::d[i]<<' '<<HLD::tp[i]<<' '<<HLD::s[i]<<' '<<HLD::f[i]<<endl;\n   #endif\n\twhile(m--)\t\t\t\n\t{\t\t\n\t\tchar opt[5];int x,k;scanf(\"%s\",opt);rd(x),rd(k);\n        if(opt[0]=='U')k-=HLD::d[x]+1,HLD::update(1,HLD::id[x],HLD::id[x]+HLD::s[x]-1,fib(k));\n        else printf(\"%d\\n\",HLD::sum(x,k));\n        #ifdef DEBUG\n        HLD::dfs(1,1,n);\n        #endif\n\t}\n    \n    \n    \n   return 0;\n}\n```\n\u60a8\u770b\u770b\u8fd9\u7bc7\u4ee3\u7801\u91cc\uff0c\u6ee1\u6ee1\u662fDEBUG\u7684\u75d5\u8ff9\uff0c\u8fd8\u6709\u4e00\u4e9b\u75d5\u8ff9\u90fd\u88ab\u5220\u9664\u4e86\uff0c\n\n\u601d\u7ef4\u96be\u5ea6\u8fd8\u884c\uff0c\u4ee3\u7801\u96be\u5ea6\u8f83\u5927qwq\n",
        "postTime": 1572608411,
        "uid": 53807,
        "name": "Erusel",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5138 \u3010fibonacci\u3011"
    },
    {
        "content": "\u8fd9\u9898\u9996\u5148\u60f3\u5230\u6811\u5256\uff0c\u4f46\u662f\u76f4\u63a5\u6811\u5256\u5b8c\u5168\u65e0\u6cd5\u7ef4\u62a4\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u77e5\u9053Fibonacci\u6570\u5217\u7684\u4e00\u4e2a\u6027\u8d28\uff1a$Fib_{n+m}=Fib_{m-1}*Fib_{n}+Fib_{m}*Fib_{n+1}$(\u8bc1\u660e\u8bf7\u81ea\u884c\u767e\u5ea6)\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u52a0\u7684\u503c$Fib_{D+k}$\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u6539\u4e3a$Fib_d+k'$($d$\u4e3a\u8be5\u70b9\u5728\u6811\u4e0a\u7684\u6df1\u5ea6\uff0c\u4e14$D+k=d+k'$)\uff0c\u90a3\u4e48\u6bcf\u4e2a\u70b9\u52a0\u7684\u503c\u4e3a$Fib_{d-1}*Fib_{k'}+Fib_d*Fid_{k'+1}$(\u6216\u8005\u5176\u4ed6\u65b9\u5f0f)\uff0c\u56e0\u4e3a$k'=D-d+k$\uff0c\u4e14$D-d$\u662f\u4e2a\u5b9a\u503c\uff0c\u6240\u4ee5$k'$\u662f\u4e2a\u5b9a\u503c\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u597d$Fib_{d-1},Fib_{d}$\uff0c\u5c31\u53ef\u4ee5\u7528\u6811\u5256+\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5176\u7cfb\u6570\uff0c\u7ec6\u8282\u53ef\u4ee5\u770b\u4e0b\u4ee3\u7801\n\n\u5c31\u7b97$k'$\u662f\u8d1f\u6570\u4e5f\u6ca1\u5173\u7cfb\uff0c\u4f60\u53ef\u4ee5\u7528\u8d1f\u6570\u53bb\u5c1d\u8bd5\uff0c\u4f9d\u7136\u6ee1\u8db3\u8be5\u6027\u8d28\uff0c$Fib_{k'}$\u4f7f\u7528$Fib_{k'+2}=Fib_{k'}+Fib_{k'+1}$\u5012\u5e8f\u6c42\u5373\u53ef\uff08\u6216\u8005\u53ef\u4ee5\u7528$Fib_{-n}=(-1)^{n-1}Fib_{n}$\u6c42\u5f97\uff0c\u6211\u4f7f\u7528\u540e\u8005\uff09\n\n\u7531\u4e8e$k'$\u8fbe\u5230\u4e86$10^{18}$\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7528\u77e9\u4e58\u6c42$Fib_{k'}$\n\n```cpp\n/*program from Wolfycz*/\n#include<cmath>\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define inf 0x7f7f7f7f\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int ui;\ntypedef unsigned long long ull;\ninline char gc(){\n\tstatic char buf[1000000],*p1=buf,*p2=buf;\n\treturn p1==p2&&(p2=(p1=buf)+fread(buf,1,1000000,stdin),p1==p2)?EOF:*p1++;\n}\ninline int frd(){\n\tint x=0,f=1; char ch=gc();\n\tfor (;ch<'0'||ch>'9';ch=gc())\tif (ch=='-')\tf=-1;\n\tfor (;ch>='0'&&ch<='9';ch=gc())\tx=(x<<3)+(x<<1)+ch-'0';\n\treturn x*f;\n}\ninline int read(){\n\tint x=0,f=1; char ch=getchar();\n\tfor (;ch<'0'||ch>'9';ch=getchar())\tif (ch=='-')\tf=-1;\n\tfor (;ch>='0'&&ch<='9';ch=getchar())\tx=(x<<3)+(x<<1)+ch-'0';\n\treturn x*f;\n}\ninline void print(int x){\n\tif (x<0)\tputchar('-'),x=-x;\n\tif (x>9)\tprint(x/10);\n\tputchar(x%10+'0');\n}\nconst int N=1e5,Mod=1e9+7;\nint n,m;\nstruct Node{\n\tint x,y;\n\tNode(){x=y=0;}\n\tNode(int _x,int _y){x=_x,y=_y;}\n\tNode operator +(const Node &tis)const{return Node((x+tis.x)%Mod,(y+tis.y)%Mod);}\n\tint operator *(const Node &tis)const{return (1ll*x*tis.x+1ll*y*tis.y)%Mod;}\n};\nstruct Matrix{\n\tint v[2][2];\n\tMatrix(){memset(v,0,sizeof(v));}\n\tvoid init(){for (int i=0;i<2;i++)\tv[i][i]=1;}\n}trans;\nMatrix operator *(const Matrix &x,const Matrix &y){\n\tMatrix z;\n\tfor (int i=0;i<2;i++)\n\t\tfor (int j=0;j<2;j++)\n\t\t\tfor (int k=0;k<2;k++)\n\t\t\t\tz.v[i][k]=(z.v[i][k]+1ll*x.v[i][j]*y.v[j][k])%Mod;\n\treturn z;\n}\nMatrix mlt(Matrix a,ll b){\n\tMatrix res; res.init();\n\tfor (;b;b>>=1,a=a*a)\tif (b&1)\tres=res*a;\n\treturn res;\n}\nNode Fib(ll x){\n\tMatrix res; res.v[0][1]=1;\n\tres=res*mlt(trans,x<0?-x-1:x);\n\tif (x>=0)\treturn Node(res.v[0][0],res.v[0][1]);\n\tres.v[0][(-x-1)&1]=-res.v[0][(-x-1)&1];\n\treturn Node(res.v[0][1],res.v[0][0]);\n}\nvoid init(){trans.v[0][1]=trans.v[1][0]=trans.v[1][1]=1;}\nint v[N+10],dfn[N+10],ID[N+10];\nstruct S1{\n\t#define ls (p<<1)\n\t#define rs (p<<1|1)\n\tstruct node{\n\t\tint sum;\n\t\tNode val,tag;\n\t}tree[(N<<2)+10];\n\tvoid updata(int p){\n\t\ttree[p].val=tree[ls].val+tree[rs].val;\n\t\ttree[p].sum=(tree[ls].sum+tree[rs].sum)%Mod;\n\t}\n\tvoid Add_tag(int p,Node v){\n\t\ttree[p].sum=(tree[p].sum+tree[p].val*v)%Mod;\n\t\ttree[p].tag=tree[p].tag+v;\n\t}\n\tvoid pushdown(int p){\n\t\tif (!tree[p].tag.x&&!tree[p].tag.y)\treturn;\n\t\tAdd_tag(ls,tree[p].tag);\n\t\tAdd_tag(rs,tree[p].tag);\n\t\ttree[p].tag=Node(0,0);\n\t}\n\tvoid build(int p,int l,int r){\n\t\tif (l==r){\n\t\t\ttree[p].val=Fib(v[dfn[l]]);\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(ls,l,mid),build(rs,mid+1,r);\n\t\tupdata(p);\n\t}\n\tvoid Modify(int p,int l,int r,int x,int y,Node v){\n\t\tif (x<=l&&r<=y){\n\t\t\tAdd_tag(p,v);\n\t\t\treturn;\n\t\t}\n\t\tpushdown(p);\n\t\tint mid=(l+r)>>1;\n\t\tif (x<=mid)\tModify(ls,l,mid,x,y,v);\n\t\tif (y>mid)\tModify(rs,mid+1,r,x,y,v);\n\t\tupdata(p);\n\t}\n\tint Query(int p,int l,int r,int x,int y){\n\t\tif (x<=l&&r<=y)\treturn tree[p].sum;\n\t\tint mid=(l+r)>>1,res=0;\n\t\tpushdown(p);\n\t\tif (x<=mid)\tres=(res+Query(ls,l,mid,x,y))%Mod;\n\t\tif (y>mid)\tres=(res+Query(rs,mid+1,r,x,y))%Mod;\n\t\treturn res;\n\t}\n\t#undef ls\n\t#undef rs\n}ST;//Segment Tree\nstruct S2{\n\tint pre[(N<<1)+10],now[N+10],child[(N<<1)+10],tot,Time;\n\tint deep[N+10],fa[N+10],size[N+10],top[N+10],Rem[N+10];\n\tvoid join(int x,int y){pre[++tot]=now[x],now[x]=tot,child[tot]=y;}\n\tvoid insert(int x,int y){join(x,y),join(y,x);}\n\tvoid dfs(int x){\n\t\tdeep[x]=deep[fa[x]]+1,size[x]=1,v[x]=deep[x];\n\t\tfor (int p=now[x],son=child[p];p;p=pre[p],son=child[p]){\n\t\t\tif (son==fa[x])\tcontinue;\n\t\t\tfa[son]=x,dfs(son);\n\t\t\tsize[x]+=size[son];\n\t\t\tif (size[Rem[x]]<size[son])\tRem[x]=son;\n\t\t}\n\t}\n\tvoid build(int x){\n\t\tif (!x)\treturn;\n\t\tdfn[ID[x]=++Time]=x;\n\t\ttop[x]=Rem[fa[x]]==x?top[fa[x]]:x;\n\t\tbuild(Rem[x]);\n\t\tfor (int p=now[x],son=child[p];p;p=pre[p],son=child[p]){\n\t\t\tif (son==Rem[x]||son==fa[x])\tcontinue;\n\t\t\tbuild(son);\n\t\t}\n\t}\n\tint work(int x,int y){\n\t\tint res=0;\n\t\twhile (top[x]!=top[y]){\n\t\t\tif (deep[top[x]]<deep[top[y]])\tswap(x,y);\n\t\t\tres=(res+ST.Query(1,1,n,ID[top[x]],ID[x]))%Mod;;\n\t\t\tx=fa[top[x]];\n\t\t}\n\t\tif (deep[x]>deep[y])\tswap(x,y);\n\t\tres=(res+ST.Query(1,1,n,ID[x],ID[y]))%Mod;;\n\t\treturn res;\n\t}\n}HLD;//Heavy Light Decomposition\nint main(){\n\tinit(); char s[5];\n\tn=read(),m=read();\n\tfor (int i=1;i<n;i++){\n\t\tint x=read(),y=read();\n\t\tHLD.insert(x,y);\n\t}\n\tHLD.dfs(1),HLD.build(1),ST.build(1,1,n);\n\tfor (int i=1;i<=m;i++){\n\t\tscanf(\"%s\",s);\n\t\tif (s[0]=='U'){\n\t\t\tint x=read(); ll k;\n\t\t\tscanf(\"%lld\",&k);\n\t\t\tk-=v[x]+1;\n\t\t\tST.Modify(1,1,n,ID[x],ID[x]+HLD.size[x]-1,Fib(k));\n\t\t}\n\t\tif (s[0]=='Q'){\n\t\t\tint x=read(),y=read();\n\t\t\tprintf(\"%d\\n\",HLD.work(x,y));\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1545696700,
        "uid": 21633,
        "name": "Wolfycz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5138 \u3010fibonacci\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problem/P5138)\n\n---\n# \u5206\u6790\n\u9996\u5148\u6b64\u9898\u4e00\u773c\u7b97\u6cd5\u6811\u94fe\u5256\u5206+\u7ebf\u6bb5\u6811\n~~\u7136\u800c\u53ea\u662f\u77e5\u9053\u800c\u4e0d\u4f1a\u505a(\u800c\u4e14\u6bd4\u8d5b\u7684\u65f6\u5019\u8fde\u6811\u94fe\u5256\u5206\u90fd\u4e0d\u4f1a)~~\n\n\u8fd9\u4e2a$Fib_{D+k}=Fib_{D-1}*Fib_{k}+Fib_{D}*Fib_{k+1}$\n\n\u53ef\u4ee5\u5728\u7ebf\u6bb5\u6811\u4e2d\u7ef4\u62a4$Fib_{n-1},Fib_{n}$\u6c42\u89e3\uff0c\n\n\u76f8\u5f53\u4e8e\u533a\u95f4\u6bcf\u6b21\u7d2f\u52a0\u6253\u4e00\u4e2a\u6807\u8bb0\uff0c\u518d\u6c42\u548c\uff0c\n\n\u5982\u679c\u662f\u8d1f\u6570\uff0c\u90a3\u4e48$Fib_{-n}=(-1)^{n-1}Fib_n$\n\n\u7136\u800c\u6df1\u5ea6\u600e\u4e48\u529e\uff0c\u53ef\u4ee5\u9884\u5148\u5efa\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6df1\u5ea6\u7684\u6590\u6ce2\u90a3\u5951\u503c\u4f7f\u5176\u6210\u4e3a\u4e00\u4e2a\u5b9a\u503c\n\n\u7136\u800c\u6211~~\u4f5c\u6b7b~~\u627e\u5230\u4e86\u6590\u6ce2\u90a3\u5951\u5faa\u73af\u8282\uff08From[\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff08\u52a0\u5f3a\u7248\uff09](https://www.luogu.org/problem/P4000)\uff09\uff0c\u5c31\u53ef\u4ee5\u77e9\u9635\u5206\u5757\u4e86\uff0c\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(89444*4+(4n+m)log_2n)$(\u5faa\u73af\u5c55\u5f00)\n\n\u7136\u800c\u53d1\u73b0\u51fa\u9898\u4eba\u7684\u6807\u7a0b\u7ef4\u62a4$Fib_{n+1},Fib_n$\uff0cWA\u4e86\u7167\u7740\u6807\u7a0b\u6539\u7ed3\u679cWA\u4e86\u4e24\u5929\n\n---\n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cctype>\n#define rr register\nusing namespace std;\ntypedef long long ll;\nconst int N=100101,mod=1e9+7,he=44721;\ninline signed mo(int x,int y){return x+y>=mod?x+y-mod:x+y;}\nstruct node{int y,next;}e[N<<1]; struct maix{int p[2][2];}A[he|15],B[he|15];\nint n,k=1,m,ls[N],big[N],son[N],a[N],w[N<<2],dfn[N],tot,top[N],dep[N],fat[N];\nstruct rec{\n    int fir,sec;\n    rec operator +(const rec &t)const{return (rec){mo(fir,t.fir),mo(sec,t.sec)};}//\u7d2f\u52a0\u9879\u6570\n    signed operator *(const rec &t)const{return mo(1ll*fir*t.fir%mod,1ll*sec*t.sec%mod);}//\u7edf\u8ba1\u7b54\u6848\n}wt[N<<2],lazy[N<<2];\ninline signed iut(){\n\trr int ans=0; rr char c=getchar();\n\twhile (!isdigit(c)) c=getchar();\n\twhile (isdigit(c)) ans=(ans<<3)+(ans<<1)+(c^48),c=getchar();\n\treturn ans;\n}\ninline void print(int ans){\n    if (ans<0) putchar('-'),ans=-ans;\n\tif (ans>9) print(ans/10);\n\tputchar(ans%10+48);\n}\ninline maix mul(maix A,maix B){\n    rr maix C;\n    C.p[0][0]=mo(1ll*A.p[0][0]*B.p[0][0]%mod,1ll*A.p[0][1]*B.p[1][0]%mod);\n    C.p[0][1]=mo(1ll*A.p[0][0]*B.p[0][1]%mod,1ll*A.p[0][1]*B.p[1][1]%mod);\n    C.p[1][0]=mo(1ll*A.p[1][0]*B.p[0][0]%mod,1ll*A.p[1][1]*B.p[1][0]%mod);\n    C.p[1][1]=mo(1ll*A.p[1][0]*B.p[0][1]%mod,1ll*A.p[1][1]*B.p[1][1]%mod);\n    return C;\n}\ninline rec fib(ll nn){\n    rr ll n=nn>=0?nn:-nn+1;\n    rr maix C=mul(B[n/he],A[n%he]);\n    if (nn>=0) return (rec){C.p[0][0],C.p[0][1]};\n    C.p[0][n&1^1]=mod-C.p[0][n&1^1];\n    return (rec){C.p[0][1],C.p[0][0]};\n}\ninline void build(int k,int l,int r){\n\tif (l==r){wt[k]=fib(a[l]); return;}\n\trr int mid=(l+r)>>1;\n\tbuild(k<<1,l,mid);\n\tbuild(k<<1|1,mid+1,r);\n    wt[k]=wt[k<<1]+wt[k<<1|1];\n}\ninline void pup(int k,rec z){\n    w[k]=mo(w[k],wt[k]*z);\n    lazy[k]=lazy[k]+z;\n}\ninline void pdown(int k){\n    if (!lazy[k].fir&&!lazy[k].sec) return;\n    pup(k<<1,lazy[k]),pup(k<<1|1,lazy[k]);\n    lazy[k]=(rec){0,0};\n}\ninline signed query(int k,int l,int r,int x,int y){\n\tif (l==x&&r==y) return w[k];\n    pdown(k); rr int mid=(l+r)>>1;\n\tif (y<=mid) return query(k<<1,l,mid,x,y);\n\telse if (x>mid) return query(k<<1|1,mid+1,r,x,y);\n\telse return mo(query(k<<1,l,mid,x,mid),query(k<<1|1,mid+1,r,mid+1,y));\n}\ninline void update(int k,int l,int r,int x,int y,rec z){\n\tif (l==x&&r==y) {pup(k,z); return;}\n\tpdown(k); rr int mid=(l+r)>>1;\n\tif (y<=mid) update(k<<1,l,mid,x,y,z);\n\telse if (x>mid) update(k<<1|1,mid+1,r,x,y,z);\n\telse update(k<<1,l,mid,x,mid,z),update(k<<1|1,mid+1,r,mid+1,y,z);\n\tw[k]=mo(w[k<<1],w[k<<1|1]);\n}\ninline signed Query(int x,int y){\n\trr int ans=0;\n\twhile (top[x]!=top[y]){\n\t\tif (dep[top[x]]<dep[top[y]]) x^=y,y^=x,x^=y;\n\t\tans=mo(ans,query(1,1,n,dfn[top[x]],dfn[x]));\n\t\tx=fat[top[x]];\n\t}\n\tif (dep[x]>dep[y]) x^=y,y^=x,x^=y;\n\treturn ans=mo(ans,query(1,1,n,dfn[x],dfn[y]));\n}\ninline void dfs1(int x,int fa){\n\tdep[x]=dep[fa]+1,fat[x]=fa,son[x]=1;\n\tfor (rr int i=ls[x],mson=-1;i;i=e[i].next)\n\tif (e[i].y!=fa){\n\t\tdfs1(e[i].y,x);\n\t\tson[x]+=son[e[i].y];\n\t\tif (son[e[i].y]>mson) big[x]=e[i].y,mson=son[e[i].y];\n\t}\n}\ninline void dfs2(int x,int linp){\n\tdfn[x]=++tot,top[x]=linp,a[tot]=dep[x];\n\tif (!big[x]) return; dfs2(big[x],linp);\n\tfor (rr int i=ls[x];i;i=e[i].next)\n\tif (e[i].y!=fat[x]&&e[i].y!=big[x]) dfs2(e[i].y,e[i].y);\n}\nsigned main(){\n    A[1].p[0][1]=A[1].p[1][0]=A[1].p[1][1]=A[0].p[1][1]=A[0].p[0][0]=1;\n    for (rr int i=2;i<=he;++i) A[i]=mul(A[i-1],A[1]);\n    B[0]=A[0],B[1]=A[he];\n    for (rr int i=2;i<=he;++i) B[i]=mul(B[i-1],B[1]);\n    n=iut(); m=iut();\n    for (rr int i=1;i<n;++i){\n        rr int x=iut(),y=iut();\n        e[++k]=(node){y,ls[x]},ls[x]=k,\n        e[++k]=(node){x,ls[y]},ls[y]=k;\n    }\n    dfs1(1,0),dfs2(1,1),build(1,1,n);\n    while (m--){\n        rr char c=getchar();\n        while (c!='U'&&c!='Q') c=getchar();\n        if (c=='U'){\n            rr int x=iut(); rr ll y; scanf(\"%lld\",&y);\n            y=(y-dep[x]+1)%((mod+1)<<1);\n            update(1,1,n,dfn[x],dfn[x]+son[x]-1,fib(y));\n        }else print(Query(iut(),iut())),putchar(10);\n    }\n    return 0;\n}\n```",
        "postTime": 1567591592,
        "uid": 37782,
        "name": "lemondinosaur",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5138 \u3010fibonacci\u3011"
    }
]