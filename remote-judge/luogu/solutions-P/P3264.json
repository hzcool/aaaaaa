[
    {
        "content": "**\u3010\u89e3\u9898\u601d\u8def\u3011**\n\n\u8003\u8651\u628a\u95ee\u9898\u62c6\u5f00\uff0c\u5148\u5f97\u5230\u5728\u4efb\u610f\u591a\u4e2a\u9891\u9053\u95f4\u5efa\u8bbe\u7ba1\u9053\u7684\u8d39\u7528\u65b9\u6848\uff08\u56e0\u4e3a\u4e0d\u540c\u9891\u9053\u7684\u91cd\u8981\u60c5\u62a5\u7ad9\u7684\u7ba1\u9053\u5efa\u8bbe\u82e5\u6709\u4ea4\u96c6\u5c31\u53ef\u4ee5\u8282\u7701\u8d39\u7528\uff09\uff0c\u6700\u540e\u679a\u4e3e\u6240\u6709\u60c5\u51b5\uff0c\u5408\u5e76\u5f97\u5230\u603b\u5171  $p$ \u4e2a\u9891\u9053\u7684\u6700\u5c0f\u8d39\u7528\u3002\n\n\u8fd9\u65f6\uff0c\u5bf9\u4e8e\u4efb\u610f\u591a\u4e2a\u9891\u9053\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7528**\u65af\u5766\u7eb3\u6811**\uff0c\u5c31\u662f\u6784\u9020\u5305\u542b\u8fd9\u4e9b\u5173\u952e\u70b9\uff08\u91cd\u8981\u60c5\u62a5\u7ad9\uff09\u7684\u751f\u6210\u6811\u7684\u6700\u5c0f\u8d39\u7528\uff08\u56e0\u4e3a\u662f\u65e0\u5411\u8fb9\uff0c\u91cd\u8981\u60c5\u62a5\u7ad9\u4e4b\u95f4\u4e92\u76f8\u8fde\u901a\uff09\u3002\n\n\u5047\u8bbe\u7b2c $l$~$r$ \u4e2a\u9891\u9053\u4e00\u5171\u6709 $\\sum \\limits^r_{i=l}P_i$ \u4e2a\u5173\u952e\u70b9\uff0c\u6211\u4eec\u7528 $\\sum \\limits^r_{i=l}P_i$ \u4f4d\u4e8c\u8fdb\u5236\u6570\u8868\u793a\u5173\u952e\u70b9\u662f\u5426\u5728\u751f\u6210\u6811\u4e0a\u7684\u72b6\u6001\u3002\n\n\u5bf9\u4e8e\u65af\u5766\u7eb3\u6811\uff0c\u4ee4  $f[i][sta]$ \u4e3a\u4e00\u5b9a\u5305\u542b\u70b9 $i$ \uff0c\u5173\u952e\u70b9\u72b6\u6001\u4e3a $sta$ \u7684\u6700\u5c0f\u8d39\u7528\u3002\n\n\u5219 $f[i][sta]$ \u6709\u4e24\u79cd\u8f6c\u79fb\uff1a\n\n$[1]. f[i][sta] = Min(f[i][s] + f[i][sta - s])$\uff08$s$ \u4e3a $sta$ \u7684\u5b50\u96c6\uff09\n\n\u5373\u8f6c\u79fb\u524d\u7684\u4e24\u79cd\u72b6\u6001\u90fd\u5305\u542b\u70b9 $i$\uff0c\u5b83\u4eec\u7684\u72b6\u6001\u53ef\u4ee5\u5408\u5e76\u4e3a $sta$\uff0c\u540c\u65f6\u4fdd\u6301\u521d\u59cb\u65f6\u8d39\u7528\u6700\u5c0f\u3002\n\n$[2]. f[i][sta] = Min(f[j][sta] + cst[i][j])$\uff08\u5176\u4e2d $i$ \u53f7\u70b9\u548c $j$ \u53f7\u70b9\u6709\u8fb9\u76f8\u8fde\uff0c\u8d39\u7528\u4e3a $cst[i][j]$\uff09\n\n\u5373\u5305\u542b\u70b9 $i$ \u7684\u5f53\u524d\u6700\u5c0f\u8d39\u7528\u53ef\u4ee5\u901a\u8fc7\u4e0e\u4e4b\u76f8\u8fde\u7684\u4e2d\u95f4\u70b9 $j$ \u66f4\u65b0\u4e3a\u66f4\u4f18\u7684\u65b9\u6848\u3002\u4f46\u8fd9\u6837\u5c31\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u6211\u4eec\u679a\u4e3e $i,j$ \uff0c\u5219 $i$ \u53ef\u7531 $j$ \u8f6c\u79fb\u8fc7\u6765\uff0c\u800c $j$ \u4e5f\u53ef\u7531 $i$ \u8f6c\u79fb\u8fc7\u6765\uff0c\u8fd9\u660e\u663e\u4e0e\u5b9e\u9645\u77db\u76fe\u3002\u56e0\u6b64\u6211\u4eec\u8981\u5bf9\u6240\u6709\u5b58\u5728\u65b9\u6848\u7684\u70b9 $j$ \u8dd1 $SPFA$\uff0c\u4ee5\u6b64\u5bfb\u627e\u53ef\u4ee5\u66f4\u65b0\u7684\u70b9 $i$\uff0c\u8dd1 $SPFA$ \u7684\u540c\u65f6\u4e5f\u5c31\u907f\u514d\u4e86\u4e0a\u8ff0\u7684\u95ee\u9898\u3002\n\n\u4e4b\u540e\u6211\u4eec\u8bb0 $g[sta'] = Min(f[i][(1 << \\sum \\limits^r_{i=l}P_i) - 1])$  \uff0c$sta\u2019$ \u662f\u7528 $p$ \u4f4d\u4e8c\u8fdb\u5236\u6570\u8868\u793a\u9891\u9053\u662f\u5426\u8fde\u901a\u7684\u72b6\u6001(**\u4e0e $f[i][sta]$ \u4e2d\u7684\u72b6\u6001 $sta$ \u8868\u793a\u610f\u4e49\u4e0d\u540c**)\uff0c\u5219 $g[sta']$ \u8868\u793a\u9891\u9053\u72b6\u6001\u4e3a $sta\u2019$ \u65f6\u7684\u6700\u4f18\u65b9\u6848\u3002\n\n$g[sta']$ \u7684\u8f6c\u79fb\u4e0e $f[i][sta]$ \u7684\u8f6c\u79fb $[1].$ \u76f8\u540c\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u6700\u4e0a\u9762\u6240\u8bf4\u7684\u5408\u5e76\u3002\u5373 $g[sta'] = Min(g[s'], g[sta' - s'])$\uff08$s'$ \u4e3a $sta'$ \u7684\u5b50\u96c6\uff09\u3002\n\n\u6700\u540e\u7684\u7b54\u6848\u4e3a $g[(1 << p) - 1]$\uff0c\u5f97\u5230\u7684\u65b9\u6848\u4e5f\u5c31\u662f**\u65af\u5766\u7eb3\u6811\u68ee\u6797**\u3002\n\n**\u3010AC\u4ee3\u7801\u3011**\n\n```cpp\n#include <iostream>  \n#include <cstdio>  \n#include <cstring>  \n#include <algorithm>  \n#include <queue>  \n  \nusing namespace std;  \nconst int Maxn = 0x3f3f3f3f;  \nconst int N = 1005, M = 6005, L = 1 << 10;  \nint lst[N], f[N][L], nxt[M], to[M], cst[M], g[L], c[12];   \nint n, m, k, T, Cn; bool vis[N];  \nqueue<int> Q;  \n  \ntemplate <class T> inline T Min(const T a, const T b) {return a < b? a : b;}  \ntemplate <class T> inline void CkMin(T &a, const T b) {if (a > b) a = b;}  \n  \nstruct point  \n{  \n    int col, id;  \n    #define col(x) a[x].col  \n    #define id(x) a[x].id  \n}a[12];  \n  \ninline bool cmp(const point x, const point y) {return x.col < y.col;}  \n  \ninline int get()  \n{  \n    char ch; bool f = false; int res = 0;  \n    while (((ch = getchar()) < '0' || ch > '9') && ch != '-');  \n    if (ch == '-') f = true;  \n     else res = ch - '0';  \n    while ((ch = getchar()) >='0' && ch <= '9')  \n        res = (res << 3) + (res << 1) + ch - '0';  \n    return f? ~res + 1 : res;  \n}  \n  \ninline void put(int x)  \n{  \n    if (x < 0)  \n      x = ~x + 1, putchar('-');  \n    if (x > 9) put(x / 10);  \n    putchar(x % 10 + 48);  \n}  \n  \ninline void add(const int x, const int y, const int z)  \n{  \n    nxt[++T] = lst[x]; lst[x] = T; to[T] = y; cst[T] = z;  \n    nxt[++T] = lst[y]; lst[y] = T; to[T] = x; cst[T] = z;  \n}  \n  \ninline void SPFA(const int I)  \n{  \n    int x, y;  \n    while (!Q.empty())  \n    {  \n        x = Q.front(); vis[x] = false; Q.pop();  \n        for (int i = lst[x]; i; i = nxt[i])  \n         if (f[y = to[i]][I] > f[x][I] + cst[i])  \n         {  \n            f[y][I] = f[x][I] + cst[i];  \n            if (!vis[y]) vis[y] = true, Q.push(y);  \n         }  \n    }  \n}  \n  \ninline int solve(const int cnt)  \n{  \n    int Cm = 1 << cnt;  \n    for (int i = 1; i < Cm; ++i)  \n    {  \n        for (int j = 1; j <= n; ++j)  \n        {  \n            for (int k = (i - 1) & i; k; k = (k - 1) & i)  \n            // \u8868\u793a\u679a\u4e3e\u5b50\u96c6\uff1ak\u4e0d\u65ad\u51cf\u4e00\u5c31\u4e0d\u4f1a\u9057\u6f0f  \n            // (k - 1) & i \u8868\u793a\u72b6\u6001 k \u4e2d\u5305\u542b\u7684\u5173\u952e\u70b9\u603b\u72b6\u6001 i \u4e2d\u4e00\u5b9a\u5305\u542b    \n             CkMin(f[j][i], f[j][k] + f[j][i - k]);  \n            if (f[j][i] != Maxn) vis[j] = true, Q.push(j);  \n        }  \n        SPFA(i);  \n    }  \n    int res = Maxn;  \n    for (int i = 1; i <= n; ++i) CkMin(res, f[i][Cm - 1]);  \n    return res;  \n}  \n  \nint main()  \n{   \n    n = get(); m = get(); k = get(); int x, y;  \n    for (int i = 1; i <= m; ++i)  \n    {  \n        x = get(); y = get();   \n        add(x, y, get());  \n    }  \n    for (int i = 1; i <= k; ++i)   \n        col(i) = get(), id(i) = get();  \n    sort(a + 1, a + k + 1, cmp);  \n    for (int i = 1; i <= k; ++i)  \n    {  \n        if (col(i) != col(i - 1)) Cn++; c[i] = Cn;  \n    }  \n    for (int i = 1; i <= k; ++i) col(i) = c[i]; //\u79bb\u6563\u5316 \n    Cn = (1 << Cn);  \n    memset(g, Maxn, sizeof(g));  \n    for (int i = 1; i < Cn; ++i)  \n    {  \n        memset(f, Maxn, sizeof(f));  \n        int cnt = 0;   \n        for (int j = 1; j <= k; ++j)   \n         if ((1 << col(j) - 1) & i) f[id(j)][1 << cnt++] = 0;  \n        g[i] = solve(cnt);  \n     }   \n    for (int i = 1; i < Cn; ++i)  \n     for (int j = (i - 1) & i; j; j = (j - 1) & i)  \n      CkMin(g[i], g[j] + g[i - j]);  \n    return put(g[Cn - 1]), 0;  \n}  \n```",
        "postTime": 1499592222,
        "uid": 17952,
        "name": "Log_x",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3264 \u3010[JLOI2015]\u7ba1\u9053\u8fde\u63a5\u3011"
    },
    {
        "content": "\uff08\u4e0d\u597d\u610f\u601d\u9ebb\u70e6\u7ba1\u7406\u5458\u5566\uff0c\u4ee5\u524d\u6ca1\u7528\u8fc7\u56fe\u5e8a\uff0c\u7ed3\u679c\u8fd9\u56de\u5199\u5b8c\u5c31\u628a\u56fe\u5220\u6389\u4e86/\u7b11\u54ed\uff09\n\n**\u7b97\u6cd5\uff1a\u65af\u5766\u7eb3\u6811+\u72b6\u538bDP**\n\n\u6b64\u9898\u9898\u610f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u8981\u5728\u56fe\u4e2d\u9009\u51fa\u4e00\u4e9b\u8fb9\u628a\u7ed9\u51fa\u7684\u51e0\u4e2a\u70b9\u96c6\u5404\u5b50\u5185\u90e8\u7684\u70b9\u8fde\u901a\u8d77\u6765\uff0c\u95ee\u6700\u5c0f\u8fb9\u6743\u548c\u3002\n\n\u770b\u9053\u9898\u76ee\u5c31\u5f88\u5bb9\u6613\u60f3\u5230\u65af\u5766\u7eb3\u6811\uff0c\u4f46\u662f\u6ce8\u610f\uff1a**\u65af\u5766\u7eb3\u6811\u662f\u8981\u6c42\u6240\u6709\u5173\u952e\u70b9\u8054\u901a\uff0c\u800c\u6b64\u9898\u53ea\u9700\u8981\u540c\u4e00\u4e2a\u7c7b\u7684\u5173\u952e\u70b9\u8054\u901a\uff0c\u4e0d\u540c\u7c7b\u5173\u952e\u70b9\u8fde\u4e0d\u8fde\u901a\u90fd\u53ef\u4ee5**\u3002\u90a3\u4e48\u5c31\u4e0d\u80fd\u76f4\u63a5\u65af\u5766\u7eb3\u6811\u4e86\uff0c\u8be5\u600e\u4e48\u505a\u5462\uff1f\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u65af\u5766\u7eb3\u6811\u7684\u72b6\u6001\u8bbe\u8ba1\uff0c$f_{s, i}$ \u8868\u793a $s$ \u96c6\u5408\u5185\u90e8\u7684\u70b9\u90fd\u8054\u901a\u4e14\u6839\u4e3a i \u65f6\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u662f\u4e0d\u662f\u6709\u542f\u53d1\u5462\uff1f\u8fd9\u9053\u9898\u68d8\u624b\u4e4b\u5904\u5c31\u5728\u4e8e\u4f60\u4e0d\u77e5\u9053\u54ea\u4e9b\u7c7b\u4f1a\u8fde\u5728\u4e00\u68f5\u6811\u91cc\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4e00\u6837\u72b6\u538b DP \u554a\uff01\n\n\u6211\u4eec\u628a\u70b9\u7684\u7c7b\u522b\uff08\u9891\u9053\uff09\u53eb\u505a\u201d\u989c\u8272\u201c\uff0c\u8bbe $g_s$ \u8868\u793a\u628a $s$ \u96c6\u5408\u5185\u90e8\u7684\u70b9\u6784\u6210**\u65af\u5766\u7eb3\u6811\u68ee\u6797**\uff0c\u4e14\u4fdd\u8bc1\n\n- \u82e5\u67d0\u4e00\u4e2a\u70b9\u5728 $s$ \u4e2d\uff0c\u5219\u6240\u6709\u4e0e\u5b83\u76f8\u540c\u989c\u8272\u5747\u5728 $s$ \u4e2d\uff1b\n\n- \u6240\u6709\u540c\u989c\u8272\u7684\u70b9\u5728\u540c\u4e00\u68f5**\u65af\u5766\u7eb3\u6811**\u4e2d\uff1b\n\n\u5f88\u663e\u7136\u6709\u8f6c\u79fb\uff1a\n\n$g_s=\\min\\limits_{s' \\subseteq s}{\\ g_{s'}+g_{s-s'}}$\n\n\u8bbe\u6240\u6709\u5173\u5efa\u70b9\u6784\u6210\u7684\u96c6\u5408\u4e3a $all$ \uff0c\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f $g_{all}$\n\n**\u4e5f\u8bb8\u4f60\u53ef\u80fd\u6709\u7591\u60d1\uff1a\u8fd9\u6837\u5408\u5e76\u4e0d\u4f1a\u91cd\u590d\u7b97\u8fb9\u5417\uff1f**\n\n\u7684\u786e\u4e0d\u9519\uff0c\u662f\u4f1a\u91cd\u590d\u7b97\u8fb9\uff0c\u4f46\u662f\u4e0d\u5f71\u54cd\u3002\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u628a\u6240\u6709\u7684\u60c5\u51b5\u8003\u8651\u5230\u4e86\uff0c**\u7531\u4e8e\u8fb9\u6743\u975e\u8d1f\uff0c\u6700\u540e\u5f97\u5230\u7684\u6700\u4f18\u7b54\u6848\u4e00\u5b9a\u65f6\u6ca1\u6709\u91cd\u590d\u7b97\u8fb9\u6743\u7684**\u3002\n\n\u4f46\u662f\u6211\u8ba4\u4e3a\u6b64\u9898\u96be\u70b9\u4e0d\u5728\u8fd9\u91cc\uff0c\u800c\u662f\u5728 $g$ \u6570\u7ec4\u7684\u521d\u59cb\u5316\uff08\u4e5f\u53ef\u80fd\u662f\u6211\u592a\u83dc\u4e86\uff09\uff0c\u56e0\u6b64\u5728\u8fd9\u91cc\u628a\u6211\u5199\u7684\u8fc7\u7a0b\u72af\u7684\u51e0\u4e2a\u9519\u8bef\u8bf4\u4e00\u4e0b\uff0c\u5e0c\u671b\u80fd\u5e2e\u5230\u4e00\u4e9b\u670b\u53cb QAQ\u3002\n\n\u5148\u8d4b inf\uff1a\n\n```\n\tmemset(g, 0x3f, sizeof(g));\n```\n\n\u7136\u540e\u89e3\u51b3\u521d\u503c\u95ee\u9898\u3002\n\n\u6700\u5f00\u59cb\uff0c\u6211\u662f\u8fd9\u4e48\u5199\u7684\uff08\u6c42\u5927\u4f6c\u4e0d\u8981\u5632\u7b11\u554a\uff09\uff1a\n\n```cpp\n\tfor(int i=1; i<=K; ++i) if(p[i]){\n\t\tint S=p[i];\n\t\tfor(int j=1; j<=n; ++j)\n\t\t\tg[S]=min(g[S], f[S][j]);\n//\t\tprint(S),cout<<g[S]<<endl;\n\t}\n```\n\n$p_i$ \u8868\u793a\u989c\u8272\u4e3a $i$ \u7684\u70b9\u6784\u6210\u7684\u96c6\u5408\u3002\n\n\u76f4\u63a5\u628a\u6bcf\u4e2a\u7c7b\u7684\u70b9\u641e\u4e00\u68f5\u65af\u5766\u7eb3\u6811\u561b\uff0c\u4e4b\u540e\u4e0d\u5c31\u53ef\u4ee5\u5408\u5e76\u4e86\uff1f\n\n\u7136\u800c\u9519\u7684\u5f88\u79bb\u8c31\uff08\u8bdd\u8bf4\u8fd9\u9898\u6570\u636e\u662f\u771f\u7684\u6c34\uff0c\u5230\u540e\u9762\u4f60\u5c31\u77e5\u9053\u4e86\uff09\u2026\u2026\n\n![WA 70\u5206](https://cdn.luogu.com.cn/upload/image_hosting/z9vitp7h.png)\n\n\u4e3a\u4ec0\u4e48\uff1f**\u56e0\u4e3a\u5b8c\u5168\u53ef\u4ee5\u628a\u51e0\u7c7b\u70b9\u653e\u5230\u4e00\u68f5\u6811\u91cc\u5934\u554a\uff01\u5426\u5219\u53ef\u80fd\u540e\u9762 DP \u6700\u5c0f\u503c\u5c31\u53ef\u80fd\u4f1a\u5f97\u5230\u91cd\u590d\u7b97\u8fb9\u4ee3\u4ef7\u7684\u7b54\u6848\uff0c\u5bfc\u81f4\u7b54\u6848\u504f\u5927\u3002**\n\n\u90a3\u4e48\uff0c\u6539\u4e00\u4e0b\u5c31\u597d\u4e86\u561b\uff1a\n\n```\nfor(int S=1; S<(1<<K); ++S){\n\twork(S);\n\tfor(int i=1; i<=K; ++i) if(S&p[i]==p[i]){\n\t\tfor(int j=1; j<=n; ++j)\n\t\t\tg[S]=min(g[S], f[S][j]);\n\t\tbreak;\n\t}\n}\n```\n\n\u7136\u800c\u9519\u7684\u66f4\u79bb\u8c31\uff01\u8981\u6ce8\u610f\u5230\uff0c**&\u7684\u4f18\u5148\u7ea7\u662f\u4f4e\u4e8e==\u7684\uff01** \u6240\u4ee5\u8fd9\u6837\u6839\u672c\u4e0d\u662f\u5728\u5224\u65ad\u662f\u5426\u4e3a\u5b50\u96c6\uff01\n\n\u7136\u800c\u5c45\u7136~\n\n![WA 80](https://cdn.luogu.com.cn/upload/image_hosting/juxrvv91.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u597d\u7684\u8d76\u5feb\u628a\u8fd9\u91cc\u6539\u8fc7\u6765\uff0c\u4ee5\u540e\u8981\u8bb0\u5f97\u52a0\u62ec\u53f7\uff0c\u9632\u6b62\u4f18\u5148\u7ea7\u95ee\u9898\u3002\n\n\u6539\u6210\u4e86\u8fd9\u6837\uff1a\n\n```cpp\n\tfor(int S=1; S<(1<<K); ++S){\n\t\twork(S);\n\t\tfor(int i=1; i<=K; ++i) if(p[i]&&(S&p[i])==p[i]){\n\t\t\tfor(int j=1; j<=n; ++j)\n\t\t\t\tg[S]=min(g[S], f[S][j]);\n\t\t\tbreak;\n\t\t}\n\t}\n```\n\n\u7ed3\u679c~\n\n![WA 85](https://cdn.luogu.com.cn/upload/image_hosting/tr322wb5.png)\n\n\u566b\uff0c\u600e\u4e48\u8fd8\u662fWA\uff0c\u6709\u6bd2\u554aQAQ~\n\n\u518d\u4ed4\u7ec6\u60f3\u4e00\u60f3\uff0c\u80af\u5b9a\u8fd8\u662f\u72b6\u538bDP\u90e8\u5206\u7684\u95ee\u9898\uff08\u65af\u5766\u7eb3\u6811\u6211\u662f\u5148\u8fc7\u4e86\u6a21\u677f\u7684\uff09\u3002\n\n\u89c2\u5bdf\u8bc4\u6d4b\u7ed3\u679c\uff0c\u53d1\u73b0\u8fd9\u6b21\u7ed3\u679c\u4f3c\u4e4e\u504f\u5c0f\u4e86\uff01\u90a3\u4e48\u4e00\u5b9a\u662f\u4e0d\u5408\u6cd5\u7684\u72b6\u6001\u66f4\u65b0\u4e86\u7b54\u6848\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0e\u4e0a\u9762\u72b6\u6001\u9650\u5236\u4e2d\u7684\u4e24\u6761\u53d1\u751f\u4e86\u8fdd\u80cc\u3002\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462\uff1f\n\n\u4ed4\u7ec6\u8003\u8651\u8fd9\u4e2a\u5224\u65ad\uff0c\u6211\u4eec\u7684\u601d\u8def\u662f\uff1a**\u53ea\u8981\u8fd9\u4e2a\u96c6\u5408\u5305\u542b\u4e86\u67d0\u4e00\u7c7b\u70b9\u7684\u5168\u90e8\uff0c\u5c31\u53ef\u4ee5\u5efa\u6210\u4e00\u68f5\u65af\u5766\u7eb3\u6811\u3002** \u6f0f\u6d1e\u5728\u54ea\u91cc\uff1f\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u8fd9\u4e2a\u96c6\u5408\u867d\u7136\u5305\u542b\u4e86\u6240\u6709\u201d\u7ea2\u8272\u70b9\u201c\uff0c\u4f46\u662f\u5305\u542b\u4e86**\u4e00\u90e8\u5206**\u201d\u9ec4\u8272\u70b9\u201c\u7684\u8bdd\uff0c\u5176\u5b9e\u662f\u4e0d\u6ee1\u8db3\u6211\u4eec\u5217\u51fa\u7684\u4e24\u4e2a\u6761\u4ef6\u7684\uff0c\u56e0\u4e3a**\u6709\u9ec4\u8272\u70b9\u5728\u8fd9\u4e2a\u96c6\u5408\u4e2d\uff0c\u7136\u800c\u5e76\u975e\u6240\u6709\u9ec4\u8272\u70b9\u90fd\u5728\u8fd9\u4e2a\u96c6\u5408\u4e2d\uff0c\u4e5f\u5e76\u975e\u6240\u6709\u9ec4\u8272\u70b9\u90fd\u5728\u4e00\u68f5\u65af\u5766\u7eb3\u6811\u4e2d**\u3002\n\n\u5f62\u5f0f\u5316\u5730\u8bb2\uff0c\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\uff08\u628a\u521d\u59cb\u5316\u96c6\u5408\u7684\u70b9\u5168\u90e8\u5efa\u5230\u4e00\u68f5\u6811\u91cc\u5934\u53bb\uff09\uff0c\u4e00\u4e2a\u96c6\u5408 $s$ \u5408\u6cd5\uff0c\u5f53\u4e14\u4ec5\u5f53\uff1a\n\n**\u5bf9\u4e8e\u4efb\u4f55\u4e00\u79cd\u989c\u8272\uff0c\u6240\u6709\u4e3a\u6b64\u989c\u8272\u7684\u70b9\u8981\u4e48\u5168\u90e8\u5728 $s$ \u4e2d\uff0c\u8981\u4e48\u5168\u90e8\u4e0d\u5728 $s$ \u4e2d**\u3002\n\n\u5f04\u660e\u767d\u4e86\u8fd9\u4e2a\uff0c\u603b\u7b97\u53ef\u4ee5\u5199\u51fa\u6b63\u786e\u7a0b\u5e8f\u4e86\uff1a\n\n```cpp\n\tfor(int S=1; S<(1<<K); ++S){\n\t\twork(S);\n\t\tbool flag=true;\n\t\tfor(int i=1; i<=K; ++i) if(p[i])\n\t\t\tif((S&p[i])!=p[i]&&(S&p[i])!=0) flag=false;\n\t\tif(flag) for(int i=1; i<=n; ++i)\n\t\t\tg[S]=min(g[S], f[S][i]);\n\t}\n```\n\n\u4e0b\u9762\u7ed9\u51fa\u5b8c\u6574 AC \u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ninline void read(int &x){\n\tchar c=getchar();x=0;\n\twhile(!isdigit(c))c=getchar();\n\twhile(isdigit(c))x=x*10+c-'0',c=getchar();\n}\nconst int N=1005, M=3005, V=N, E=M<<1, NUM=15, SZ=1<<10|5, inf=0x3f3f3f3f;\nint n, m, K, key[NUM], col[NUM], p[NUM], f[SZ][N], ans, g[SZ];\nint e, head[V], to[E], val[E], nxt[E];\ninline void add(int u, int v, int w){\n\tto[++e]=v, val[e]=w;\n\tnxt[e]=head[u], head[u]=e;\n}\ninline void spfa(int *f){\n\tstatic bool inq[N];\n\tstatic queue<int> q;\n\tfor(int i=1; i<=n; ++i) if(f[i]<inf)\n\t\tq.push(i), inq[i]=true;\n\twhile(!q.empty()){\n\t\tint u=q.front(); q.pop(), inq[u]=false;\n\t\tfor(int i=head[u]; i; i=nxt[i]){\n\t\t\tint v=to[i], w=val[i];\n\t\t\tif(f[v]>f[u]+w){\n\t\t\t\tf[v]=f[u]+w;\n\t\t\t\tif(!inq[v]) q.push(v), inq[v]=true;\n\t\t\t}\n\t\t}\n\t}\n}\ninline void work(int S){\n\tfor(int s=(S-1)&S; s; s=(s-1)&S)\n\t\tfor(int i=1; i<=n; ++i)\n\t\t\tf[S][i]=min(f[S][i], f[s][i]+f[S^s][i]);\n\tspfa(f[S]);\n}\nint main(){\n\tread(n);read(m);read(K);\n\tfor(int i=1, u, v, w; i<=m; ++i){\n\t\tread(u);read(v);read(w);\n\t\tadd(u, v, w), add(v, u, w);\n\t}\n\tmemset(f, 0x3f, sizeof(f));\n\tmemset(g, 0x3f, sizeof(g));\n\tfor(int i=1; i<=K; ++i){\n\t\tread(col[i]);read(key[i]);\n\t\tf[1<<(i-1)][key[i]]=0;\n\t\tp[col[i]]|=(1<<(i-1));\n\t}\n\tfor(int S=1; S<(1<<K); ++S){\n\t\twork(S);\n\t\tbool flag=true;\n\t\tfor(int i=1; i<=K; ++i) if(p[i])\n\t\t\tif((S&p[i])!=p[i]&&(S&p[i])!=0) flag=false;\n\t\tif(flag) for(int i=1; i<=n; ++i)\n\t\t\tg[S]=min(g[S], f[S][i]);\n\t}\n\tfor(int S=1; S<(1<<K); ++S)\n\t\tfor(int s=(S-1)&S; s; s=(s-1)&S)\n\t\t\tg[S]=min(g[S], g[s]+g[S^s]);\n\tprintf(\"%d\\n\", g[(1<<K)-1]);\n\treturn 0;\n}\n```\n\n\n\u8fd9\u9053\u9898\u4e0d\u80fd\u7b97\u662f\u96be\u9898\uff0c\u4f46\u662f\u5199\u7684\u65f6\u5019\u8fd8\u662f\u8981\u5f88\u6ce8\u610f\u7ec6\u8282\uff0c\u6211\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2a\u521d\u59cb\u5316\u88ab\u5751\u4e86\u597d\u4e45\u3002\u6240\u4ee5\u5efa\u8bae\u5927\u5bb6\u5728\u5199 DP \u7684\u65f6\u5019\uff0c\u8981\u628a\u72b6\u6001\u7684\u5b9a\u4e49\u548c\u8f6c\u79fb\u6761\u4ef6\u7b49\u6e05\u6670\u5730\u5217\u51fa\u6765\uff0c\u5e76\u6839\u636e\u8fd9\u4e2a\u8003\u5bdf\u4ee3\u7801\u7684\u903b\u8f91\u662f\u5426\u6b63\u786e\u3002\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u80fd\u5e2e\u5230\u5927\u5bb6\uff01\uff08\u4e5f\u5e0c\u671b\u7ba1\u7406\u5458\u653e\u901a\u8fc7\u4e00\u4e0b\uff0c\u8c22\u8c22\u5566\uff01\uff09",
        "postTime": 1593660828,
        "uid": 68203,
        "name": "wyt2357",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3264 \u3010[JLOI2015]\u7ba1\u9053\u8fde\u63a5\u3011"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3264)\n\n## \u9898\u610f\n\n- \u7ed9\u51fa\u4e00\u5f20 $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\u5e26\u6709 $p$ \u7684\u7279\u6b8a\u70b9\u7684\u56fe\uff0c\u6bcf\u4e2a\u7279\u6b8a\u70b9\u6709\u4e00\u4e2a\u989c\u8272\u3002\n\n- \u8981\u6c42\u9009\u51fa\u82e5\u5e72\u6761\u8fb9\uff0c\u4f7f\u5f97\u989c\u8272\u76f8\u540c\u7684\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u5185\u3002\n\n- \u8f93\u51fa\u6700\u5c0f\u8fb9\u6743\u548c\u3002\n\n----------------\n\n\u5148\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e2a\u95ee\u9898\u7c7b\u578b\u3002\n\n**\u6700\u5c0f\u65af\u5766\u7eb3\u6811**\uff1a\u5728\u4e00\u5f20\u7ed9\u5b9a\u7684\u5e26\u6743\u65e0\u5411\u56fe\u4e2d\uff0c\u5c06\u5176\u4e2d $k$ \u4e2a\u70b9\u53d8\u6210\u8fde\u901a\u5757\u6700\u5c11\u9700\u8981\u82b1\u8d39\u7684\u4ee3\u4ef7\u3002\n\n\u56e0\u4e3a\u6700\u540e\u8fde\u8d77\u6765\u4f1a\u662f\u4e00\u68f5\u6811\uff0c\u6240\u4ee5\u5c31\u53eb\u6700\u5c0f\u65af\u5766\u7eb3\u6811\u3002\n\n\u4ee4 $f_{i,S}$ \u8868\u793a\u5f53\u524d $i$ \u5728\u7684\u8fde\u901a\u5757\u4e2d\uff0c\u70b9\u96c6\u72b6\u6001\u4e3a $S$ \u9700\u8981\u82b1\u8d39\u7684\u6700\u5c0f\u8d39\u7528\u3002\n\n## \u8f6c\u79fb\u65b9\u6cd5\n\n### \u5728\u4e00\u4e2a\u70b9\u4e0a\u6c47\u5408\n\n\u6211\u4eec\u9700\u8981\u5408\u5e76\u4e0d\u540c\u7684\u82e5\u5e72\u5b50\u96c6\u3002\n\n$f_{i,S1|S2}=min(f_{i,S1|S2})$\n\n### \u5f80\u4e00\u4e2a\u65b9\u5411\u8d70\n\n\u9700\u8981\u4e00\u4e2aSPFA\u5b9e\u73b0\u3002\n\n$f_{j,S|w_j}=min(f_{i,S}+w_{i,j}$\n\n\u56de\u5f52\u672c\u9898\u3002\n\n### \u6700\u4f18\u89e3->\u65af\u5766\u7eb3\u68ee\u6797\u3002\n\n\u4e0d\u59a8\u5148\u7528\u4e0a\u8ff0\u65b9\u6cd5\u6c42\u51fa\u6bcf\u4e2a\u5b50\u96c6\u6c47\u5408\u9700\u8981\u7684\u4ee3\u4ef7\u3002\n\n\u6700\u540e\u7684\u89e3\u662f\u82e5\u5e72\u4e2a\u5b50\u96c6\u7684\u5e76\u3002\n\n\u6bcf\u4e2a\u5b50\u96c6\u90fd\u662f\u82e5\u5e72\u79cd**\u5b8c\u6574\u7684\u989c\u8272**\u3002\n\n\u5229\u7528\u4e00\u4e2a\u5b50\u96c6dp\u5b8c\u6210\u3002\n\n```cpp\n/*\n***\n\u8fd8\u8981\u7ee7\u7eed\u52aa\u529b\n\u6210\u4e3a\u4e00\u540d\u70e4\u5495\u5b66\u5bb6\u54e6\n***\n*/\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll N=11,M=1005;\nll m,n,p,f[M][1<<N],g[1<<N],w[1<<N],k1,hd[M],ID[M],num[N],Q[M*M],vis[M];\nstruct Node{ll t,nxt,val;}s[M*10];\ntemplate <typename T> void rd(T &x){\n\tll fl=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') fl=-fl;\n\tfor(;isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n\tx*=fl;\n}\nvoid wr(ll x){\n\tif(x<0) x=-x,putchar('-');\n\tif(x<10) putchar(x+'0');\n\tif(x>9) wr(x/10),putchar(x%10+'0');\n}\nvoid add(ll x,ll y,ll w){s[++k1].t=y; s[k1].nxt=hd[x]; s[k1].val=w; hd[x]=k1;}\nvoid spfa(ll ID){\n\tQ[0]=0;\n\tfor(ll i=1;i<=n;++i) if(f[i][ID]<(ll)1e9) Q[++Q[0]]=i,vis[i]=1;\n\tfor(ll l=1;l<=Q[0];++l){\n\t\tll p=Q[l];\n\t\tfor(ll i=hd[p];i;i=s[i].nxt){\n\t\t\tll k=s[i].t;\n\t\t\tif(f[k][ID]>f[p][ID]+s[i].val){\n\t\t\t\tf[k][ID]=f[p][ID]+s[i].val;\n\t\t\t\tif(!vis[k]){\n\t\t\t\t\tvis[k]=1;\n\t\t\t\t\tQ[++Q[0]]=k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvis[p]=0;\n\t}\n}\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\trd(n);rd(m);rd(p);\n\tfor(ll i=1,u,v,val;i<=m;i++){\n\t\trd(u);rd(v);rd(val);\n\t\tadd(u,v,val);add(v,u,val); \n\t}\n\tmemset(ID,-1,sizeof(ID));\n\tfor(ll i=1,x,y;i<=p;++i){\n\t\trd(x);rd(y);\n\t\tID[y]=i-1;num[x]|=(1<<(i-1));\n\t}\n\tmemset(f,60,sizeof(f));\n\tfor(ll i=1;i<=n;++i)\n\t\tif(ID[i]==-1) f[i][0]=0;\n\t\telse f[i][1<<ID[i]]=0;\n\tfor(ll i=0;i<(1<<p);++i){\n\t\tif(i)\n\t\t\tfor(ll k=1;k<=n;++k)\n\t\t\t\tfor(ll j=(i-1)&i;j;j=(j-1)&i)\n\t\t\t\t\tf[k][i]=min(f[k][i],f[k][j]+f[k][i^j]);\n\t\tspfa(i);\n\t}\n\tmemset(w,60,sizeof(w));\n\tfor(ll i=0;i<(1<<p);++i)\n\t\tfor(ll j=1;j<=n;++j) w[i]=min(w[i],f[j][i]);\n\tmemset(g,60,sizeof(g));\n\tg[0]=0;\n\tfor(ll i=1;i<(1<<p);++i)\n\t\tfor(ll j=i;j;j=(j-1)&i){\n\t\t\tll Num=0;\n\t\t\tfor(ll k=0;k<p;++k) if(j&(1<<k)) Num|=num[k];\n\t\t\tg[i]=min(g[i],g[i^j]+w[Num]);\n\t\t}\n\twr(g[(1<<p)-1]);puts(\"\");\n\treturn 0;\n}\n```",
        "postTime": 1585784271,
        "uid": 83999,
        "name": "Demoe",
        "ccfLevel": 7,
        "title": "[JLOI2015]\u7ba1\u9053\u8fde\u63a5\u9898\u89e3 \u6700\u5c0f\u65af\u5766\u7eb3\u68ee\u6797"
    },
    {
        "content": "\u524d\u8a00\uff1a\n\n\n\u5982\u679c\u8fd8\u4e0d\u77e5\u9053\u65af\u5766\u7eb3\u6811\u7684\u7ae5\u978b\u53ef\u4ee5\u770b\u8fd9\u4e24\u7bc7\u535a\u5ba2\uff1a\n\n\u6211\u7684\uff1aMine\n\u6211\u4e00\u5f00\u59cb\u5b66\u4e60\u7684\uff1aWhich I Have Studied\n\n\u8fd9\u9053\u9898\uff0c\u5728\u6211\u5b66\u4e60\u65af\u5766\u7eb3\u6811\u4e4b\u524d\u5c31\u7ffb\u5230\u4e86\uff0c\u662f\u5728\u6d1b\u8c37\u4e0a\u641c\u72b6\u538b\u7684\u65f6\u5019\u770b\u5230\u7684\u3002\u90a3\u4e2a\u65f6\u5019\u8fd8\u4e0d\u77e5\u9053\u65af\u5766\u7eb3\u6811\u662f\u4e2a\u4ec0\u4e48\u73a9\u610f\uff0c\u4e0d\u8fc7\u9a6c\u4e0a\u8fdb\u884c\u4e86\u5b66\u4e60\u3002\n\n\u7136\u800c\u5b66\u4e60\u4e86\u4e4b\u540e\u4e5f\u6ca1\u6709\u4ec0\u4e48\u5375\u7528\uff0c\u53d1\u73b0\u5e76\u4e0d\u53ea\u662f\u65af\u5766\u7eb3\u6811\u8fd9\u4e48\u7b80\u5355\u5450\uff01\n\n\n\u9898\u89e3\uff1a\n\n\n\u7531\u4e8e\u5b58\u5728\u76f8\u540c\u9891\u7387\u4e4b\u95f4\u7684\u8fde\u901a\uff0c\u6240\u4ee5\u548c\u4e00\u822c\u7684\u65af\u5766\u7eb3\u6811\u662f\u4e0d\u540c\u7684\uff08\u53d1\u73b0\u65af\u5766\u7eb3\u6811\u6240\u6307\u5b9a\u7684\u7ed3\u70b9\u9891\u7387\u662f\u76f8\u540c\u7684\uff09\uff0c\u9700\u8981\u4e8c\u6b21DP\u3002\n\n\u9996\u5148\u8dd1\u4e00\u904d\u65af\u5766\u7eb3\u6811\u7684\u677f\u5b50\uff0c\u8fd9\u5c31\u6c42\u51fa\u4e86 \u4ee5\u67d0\u4e00\u4e2a\u7ed3\u70b9\u4e3a\u6811\u6839\u5e76\u52a0\u5165\u4e00\u4e9b\u8fb9\u4f7f\u67d0\u51e0\u4e2a\u70b9\u8fde\u901a\u7684\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u4e2a\u53bb\u66f4\u65b0\u53e6\u4e00\u4e2a DP \u6570\u7ec4\uff1aAns\uff08S\uff09\u3002\n\n\u65b9\u7a0b\uff1aAns\uff08S\uff09= minx\uff08Ans\uff08S\uff09\uff0cdp\uff08i\uff0cS\uff09\uff09\uff1b\n\n\n\u5b9a\u4e49 DP \u6570\u7ec4 Ans \uff08S\uff09\uff0c\u8868\u793a\u4f7f\u72b6\u6001 S \u4e2d\u6240\u6709\u70b9\u8fde\u901a\u7684\u6700\u5c0f\u8d39\u7528\uff0c\u6ce8\u610f\uff0c\u8fd9\u4e2a DP \u7684\u8fc7\u7a0b\u662f\u6709\u6761\u4ef6\u7684\uff1a\n\n\u9996\u5148\u679a\u4e3e S \u96c6\u5408\uff08\u6307\u5b9a\u70b9\u96c6\u5408\uff09\uff0c\u8fd9\u4e2a\u5c06\u8fd9\u4e2a\u72b6\u6001 S \u8fdb\u884c\u66f4\u65b0\u7684\u6761\u4ef6\u662f S \u5fc5\u987b\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u9891\u7387\uff0c\u8981\u4e48\u5305\u542b\u8be5\u9891\u7387\u4e2d\u7684\u6240\u6709\u6307\u5b9a\u70b9\uff0c\u8981\u4e48\u4e0d\u5305\u542b\u4e8e\u8fd9\u4e2a\u9891\u7387\u7684\u4efb\u610f\u7ed3\u70b9\uff01\n\n\u63a5\u7740\u679a\u4e3e S \u7684\u5b50\u96c6\uff0c\u8fd9\u4e2a\u5b50\u96c6 S1 \u4e5f\u662f\u8981\u6709\u6761\u4ef6\u7684\uff0c\u4e5f\u662f \u5fc5\u987b\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u9891\u7387\uff0c\u8981\u4e48\u5305\u542b\u8be5\u9891\u7387\u4e2d\u7684\u6240\u6709\u6307\u5b9a\u70b9\uff0c\u8981\u4e48\u4e0d\u5305\u542b\u4e8e\u8fd9\u4e2a\u9891\u7387\u7684\u4efb\u610f\u7ed3\u70b9\uff01\n\n\u5f97\u5230DP\u65b9\u7a0b\uff1aAns\uff08S\uff09 = min\uff08Ans\uff08S\uff09\uff0cAns\uff08S1\uff09+Ans\uff08S^S1\uff09\uff09\uff1b\n\n\u8fd9\u6837\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f Ans\uff081<<\uff08p\uff09-1\uff09\uff1b\n\n\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\u5462\uff1f\u8fd9\u6837\u505a\u4e0d\u662f\u548c\u65af\u5766\u7eb3\u6811\u4e2d\u7684 dp\uff08i\uff0cS\uff09\u6570\u7ec4\u91cd\u590d\u4e86\u5417\uff1f\n\n\u7136\u800c\u5374\u6709\u5f88\u5927\u7684\u533a\u522b\uff0c\u8fd9\u6837\u7684 Ans\uff08S\uff09\u662f\u4f7f\u5f97 S \u4e2d\u76f8\u540c\u7684\u9891\u7387\u8fde\u901a\uff0c\u800c\u4e0d\u662f S \u4e2d\u7684\u6240\u6709\u70b9\u90fd\u8fde\u901a\uff01\u56e0\u4e3a\u7528\u4e8e\u66f4\u65b0 S \u7684\u5b50\u96c6\u4e5f\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\uff0c\u800c \u5b50\u96c6 \u548c \u5b50\u96c6\u5bf9\u4e8e S \u7684\u8865\u96c6\u6ca1\u6709\u8054\u7cfb\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e24\u4e2a\u5b50\u96c6\u5185\u7ed3\u70b9\u7684\u8fde\u901a\u4e92\u8865\u5e72\u6d89\u3002\n\n\u800c\u52a0\u4e0a\u9891\u7387\u7684\u9650\u5236\uff1a\n\n\n\u53ef\u4ee5\u770b\u51fa\u6211\u4eec\u5b8c\u5168\u4e0d\u7528\u8fde\u8fb9 2-5\uff0c\u56e0\u4e3a\u8fd9\u6761\u8fb9\u4e0d\u6539\u53d8\u76f8\u540c\u9891\u7387\u7684\u8fde\u901a\u6027\uff01\n\n\n\u6240\u4ee5\u5e26\u6761\u4ef6 Ans\uff08S\uff09\u7ecf\u8fc7DP\u66f4\u65b0\u540e\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\uff0c\u5e76\u4e14\u4fdd\u8bc1\u6ca1\u6709\u989d\u5916\u8fb9\u3002\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n\nstd :: queue < int >  q ;\n\nconst  int  N = 2000 + 5 ;\n\nstruct  node {\n    int  id , clr ;\n}\ndot [ 20 ] ;\n\nint  head [ N << 3 ] , nxt [ N << 3 ] , dis [ N << 3 ] , to [ N << 3 ] , cn ;\nint  dp [ N ] [ 1 << 11 ] , ans [ 1 << 11 ] , cnt [ 30 ] , sum [ 30 ] , n , m , p , S , x , y , w , inf ;\nbool  vis [ N ] , ck [ 1 << 11 ] ;\n\nint  minx ( int  a , int  b ) {\n    return  a > b ? b : a ;\n}\n\nvoid  create ( int  u , int  v , int  d ) {\n    cn ++ ;\n    to [ cn ] = v ;\n    dis [ cn ] = d ;\n    nxt [ cn ] = head [ u ] ;\n    head [ u ] = cn ;\n}\n\nvoid  spfa ( int  S ) {\n    for ( int  i = 1 ; i <= n ; i ++ )\n        if ( dp [ i ] [ S ] < inf )\n            vis [ i ] = true , q . push ( i ) ;\n    while ( ! q . empty ( ) ) {\n        int  v , tmp = q . front ( ) ;\n        q . pop ( ) ; vis [ tmp ] = false ;\n        for ( int  i = head [ tmp ] ; i ; i = nxt [ i ] ) {\n            v = to [ i ] ;\n            if ( dp [ v ] [ S ] > dp [ tmp ] [ S ] + dis [ i ] ) {\n                dp [ v ] [ S ] = dp [ tmp ] [ S ] + dis [ i ] ;\n                if ( ! vis [ v ] ) {\n                    vis [ v ] = true ;\n                    q . push ( v ) ;\n                }\n            }\n        }\n  \t}\n}\n\nbool  check ( int  S ) {\n    memset ( cnt , 0 , sizeof ( cnt ) ) ;\n    for ( int  i = 1 ; i <= p ; i ++ )\n        if ( S & ( 1 << ( i - 1 ) ) )\n            cnt [ dot [ i ] . clr ] ++ ;\n    for ( int  i = 1 ; i <= 10 ; i ++ )\n        if ( cnt [ i ]  &&  cnt [ i ]  !=  sum [ i ] )\n            return  0 ;\n    return  1 ;\n}\n \nint  main ( ) {\n    \n    scanf ( \"%d%d%d\" , & n , & m , & p ) ;\n    memset ( dp , 127 / 3 , sizeof ( dp ) ) ;\n    inf = dp [ 0 ] [ 0 ] ;\n    S = ( 1 << p ) - 1 ;\n    for ( int  i = 1 ; i <= m ; i ++ ) {\n        scanf ( \"%d%d%d\" , & x , & y , & w ) ;\n        create ( x , y , w ) ;\n        create ( y , x , w ) ;\n    }\n    for ( int  i = 1 ; i <= p ; i ++ ) {\n        scanf ( \"%d%d\" , & dot [ i ] . clr , & dot [ i ] . id ) ;\n        sum [ dot [ i ] . clr ] ++ ;\n    }\n    for ( int  i = 1 ; i <= p ; i ++ )\n        dp [ dot [ i ] . id ] [ 1 << ( i - 1 ) ] = 0 ; \n    for ( int  s = 0 ; s <= S ; s ++ ) {\n    \tfor ( int  i = 1 ; i <= n ; i ++ )\n        \tfor ( int  s1 = s ; s1 ; s1 = ( s1 - 1 ) & s )\n                dp [ i ] [ s ] = minx ( dp [ i ] [ s ] , dp [ i ] [ s1 ] + dp [ i ] [ s ^ s1 ] ) ;\n        spfa ( s ) ;\n    }\n    memset ( ans , 127 / 3 , sizeof ( ans ) ) ;\n    for ( int  s = 0 ; s <= S ; s ++ )\n        for ( int  i = 1 ; i <= n ; i ++ )\n            ans [ s ] = minx ( ans [ s ] , dp [ i ] [ s ] ) ;\n    for ( int  s1 = 0 ; s1 <= S ; s1 ++ )\n        if ( check ( s1 ) )\n            ck [ s1 ] = true ;\n    for ( int  s = 0 ; s <= S ; s ++ )\n        if ( ck [ s ] ) \n            for ( int  s1 = s ; s1 ; s1 = ( s1 - 1 ) & s )\n                if ( ck [ s1 ] )\n                    ans [ s ] = minx ( ans [ s ] , ans [ s1 ] + ans [ s ^ s1 ] ) ;\n    printf ( \"%d\" , ans [ S ] ) ;\n    return  0 ;\n}\n```\n\nFor Fun\nCode for A+B Problem :\n\n```cpp\n#include <bits/stdc++.h>\n\nvoid  init ( ) ;\n\nint  head [ 1000 ] , nxt [ 1000 ] , dis [ 1000 ] , to [ 1000 ] , cn ;\nint   dp [ 1000 ] [ 1000 ] ;\nint  n , ans , a , b ;\nbool  vis [ 1000 ] ;\n\nstd :: queue < int > q ;\n\nvoid  create ( int  u , int  v , int d ) {\n\tcn ++ ;\n\tto [ cn ] = v ;\n\tdis [ cn ] = d ;\n\tnxt [ cn ] = head [ u ] ;\n\thead [ u ] = cn ;\n}\n\nvoid  Spfa ( int  S ) {\n    for ( int  i = 1 ; i <= n ; i ++ )\n        vis [ i ] = true , q . push ( i ) ;\n    while ( ! q . empty ( ) ) {\n        int  v , tmp = q . front ( ) ;\n        q . pop ( ) ; vis [ tmp ] = false ;\n        for ( int  i = head [ tmp ] ; i ; i = nxt [ i ] ) {\n            v = to [ i ] ;\n            if ( dp [ v ] [ S ] > dp [ tmp ] [ S ] + dis [ i ] ) {\n                dp [ v ] [ S ] = dp [ tmp ] [ S ] + dis [ i ] ;\n                if ( ! vis [ v ] ) {\n                    vis [ v ] = true ;\n                    q . push ( v ) ;\n                }\n            }\n        }\n  \t}\n}\n\nint  main ( ) {\n\tscanf ( \"%d%d\" , & a , & b ) ;\n\tn = 5 ;\n\tcreate ( 1 , 2 , a + b ) ;\n\tcreate ( 2 , 1 , a + b ) ;\n\tcreate ( 1 , 3 , 192608170 ) ;\n\tcreate ( 3 , 1 , 192608170 ) ;\n\tcreate ( 2 , 3 , 192608170 ) ;\n\tcreate ( 3 , 2 , 192608170 ) ;\n\tcreate ( 4 , 3 , 192608170 ) ;\n\tcreate ( 3 , 4 , 192608170 ) ;\n\tcreate ( 5 , 4 , 192608170 ) ;\n\tcreate ( 4 , 5 , 192608170 ) ;\n\tmemset ( dp , 0x3f , sizeof ( dp ) ) ;\n\tfor ( int  i = 1 ; i <= 2 ; i ++ )\n\t\tdp [ 1 << ( i - 1 ) ] [ i ] = 0 ;\n\tfor ( int  s = 0 ; s <= 3 ; s ++ ) {\n    \tfor ( int  i = 1 ; i <= n ; i ++ )\n        \tfor ( int  s1 = s ; s1 ; s1 = ( s1 - 1 ) & s )\n                dp [ i ] [ s ] = std :: min ( dp [ i ] [ s ] , dp [ i ] [ s1 ] + dp [ i ] [ s ^ s1 ] ) ;\n        Spfa ( s ) ;\n    }\n\tprintf ( \"%d\" , dp [ 1 ] [ 3 ] ) ;\n\treturn  0 ;\n} \n```",
        "postTime": 1529066466,
        "uid": 78348,
        "name": "jerry119",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3264 \u3010[JLOI2015]\u7ba1\u9053\u8fde\u63a5\u3011"
    },
    {
        "content": "[$\\text{Link}$](https://www.luogu.com.cn/problem/P3264)\n## \u9898\u610f\n\u7ed9\u51fa\u4e00\u5f20 $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u6709\u6743\u8fb9\u7684\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u5176\u4e2d\u6709 $k$ \u4e2a\u70b9\u662f\u5173\u952e\u70b9\uff0c\u6bcf\u4e2a\u5173\u952e\u70b9\u90fd\u6709\u4e00\u4e2a\u989c\u8272 $c_i$\u3002\u6c42\u56fe\u7684\u4e00\u4e2a\u5b50\u56fe\uff0c\u6ee1\u8db3\u6240\u6709\u989c\u8272\u76f8\u540c\u7684\u5173\u952e\u70b9\u8fde\u901a\uff0c\u4f7f\u5f97\u6240\u5305\u542b\u7684\u8fb9\u96c6\u7684\u6743\u503c\u548c\u6700\u5c0f\uff0c\u6c42\u8fd9\u4e2a\u6700\u5c0f\u503c\u3002\n\n$n\\le 1000$\uff0c$m\\le3000$\uff0c$c_i\\le k\\le10$\n## \u601d\u8def\n\u9996\u5148\u8003\u8651\u5982\u679c\u6240\u6709\u70b9\u90fd\u662f\u4e00\u4e2a\u989c\u8272\uff0c\u5c31\u662f [$\\text{P6192}$](https://www.luogu.com.cn/problem/P6192) \u4e86\uff0c\u53ef\u4ee5\u4f7f\u7528\u72b6\u538b $\\text{dp}$ \u6c42\u51fa\u6700\u5c0f\u65af\u5766\u7eb3\u6811\uff0c\u5982\u679c\u8fd8\u4e0d\u4f1a\u53ef\u4ee5\u770b\u770b[\u6211\u7684\u9898\u89e3](https://www.luogu.com.cn/blog/cyffff/solution-p6192)\u3002\n\n\u8bbe $f_S$ \u8868\u793a\u96c6\u5408 $S$ \u5185\u7684\u989c\u8272\u90fd\u5df2\u8fde\u901a\u7684\u7b54\u6848\u3002\n\n\u8003\u8651\u7528 $dp_{i,S}$ \u4e3a $f$ \u521d\u59cb\u5316\uff0c\u518d\u679a\u4e3e\u5b50\u96c6\u8f6c\u79fb\u5f97\u5230\u7b54\u6848\u3002\u521d\u59cb\u5316\u65f6\u4e0d\u80fd\u53ea\u521d\u59cb\u5316 $f_{\\{i\\}}$\uff0c\u800c\u662f\u8981\u628a\u6240\u6709 $f$ \u521d\u59cb\u5316\uff0c\u5426\u5219\u53ef\u80fd\u51fa\u73b0\u91cd\u8fb9\u7684\u60c5\u51b5\u3002\n\n\u8003\u8651\u4f7f\u7528 $\\text{dfs}(x,stu_p,stu_c)$ \u8868\u793a\u641c\u5230\u7b2c $x$ \u79cd\u989c\u8272\uff0c\u524d $x$ \u79cd\u989c\u8272\u4e2d\u5173\u952e\u70b9\u96c6\u5408\u4e3a $stu_p$\uff0c\u9009\u4e2d\u989c\u8272\u96c6\u5408\u4e3a $stu_c$\uff0c\u641c\u5230\u7ec8\u6b62\u72b6\u6001\u5373 $x=k+1$ \u65f6\uff0c\u6211\u4eec\u4ee4 $f_{stu_c}=\\min_{i=1}^n dp_{i,stu_p}$ \u5373\u53ef\u3002\n\n\u6700\u540e\u76f4\u63a5\u679a\u4e3e\u5b50\u96c6\u8f6c\u79fb\u6c42\u51fa\u7b54\u6848\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nm\\times 2^k+n\\times 3^k)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nnamespace IO{//by cyffff\n\t\n}\nconst int N=1000+10,K=10;\nint n,m,k,p[N],up,c[N];\nint cnt,head[N];\nint dp[N][1<<K],sub[N];\nint dp2[1<<K],up2;\nstruct Edge{\n\tint to,nxt,w;\n}a[N*6];\ninline void add(int u,int v,int w){\n\tcnt++;\n\ta[cnt].to=v;\n\ta[cnt].w=w;\n\ta[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nqueue<int>q;\nbool vis[N];\ninline void SPFA(int s){\n\twhile(!q.empty()){\n\t\tint rt=q.front();\n\t\tq.pop();\n\t\tvis[rt]=0;\n\t\tfor(int i=head[rt];i;i=a[i].nxt){\n\t\t\tint t=a[i].to;\n\t\t\tif(dp[t][s]>dp[rt][s]+a[i].w){\n\t\t\t\tdp[t][s]=dp[rt][s]+a[i].w;\n\t\t\t\tif(!vis[t])\n\t\t\t\t\tq.push(t),vis[t]=1;\n\t\t\t}\n\t\t}\n\t}\n}\ninline void dfs(int x,int stup,int stuc){\n\tif(x==k+1){\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tdp2[stuc]=min(dp2[stuc],dp[i][stup]);\n\t\treturn ;\n\t}\n\tdfs(x+1,stup|sub[x],stuc|(1<<x-1));\n\tdfs(x+1,stup,stuc);\n}\nint main(){\n\tmemset(dp,127/3,sizeof(dp));\n\tmemset(dp2,127/3,sizeof(dp2));\n\tn=read(),m=read(),k=read();\n\tfor(int i=1;i<=m;i++){\n\t\tint u=read(),v=read(),w=read();\n\t\tadd(u,v,w),add(v,u,w); \n\t}\n\tfor(int i=1;i<=k;i++){\n\t\tc[i]=read(),p[i]=read();\n\t\tdp[p[i]][1<<i-1]=0;\n\t\tsub[c[i]]|=1<<i-1;\n\t\tup2|=1<<c[i]-1;\n\t}\n\tup=(1<<k)-1;\n\tfor(int s1=0;s1<=up;s1++){\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int s2=s1&s1-1;s2;s2=s2-1&s1)\n\t\t\t\tdp[i][s1]=min(dp[i][s1],dp[i][s2]+dp[i][s1^s2]);\n\t\t\tif(dp[i][s1]<1e9)\n\t\t\t\tq.push(i),vis[i]=1;\n\t\t}\n\t\tSPFA(s1);\n\t} \n\tdfs(1,0,0);\n\tfor(int s1=1;s1<=up2;s1++)\n\t\tfor(int s2=s1;s2;s2=s2-1&s1)\n\t\t\tdp2[s1]=min(dp2[s1],dp2[s2]+dp2[s1^s2]);\n\twrite(dp2[up2]);\n\tflush();\n}\n```\n\u518d\u89c1 qwq~",
        "postTime": 1629429093,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3264\u3010[JLOI2015]\u7ba1\u9053\u8fde\u63a5\u3011"
    },
    {
        "content": "\u770b\u5230\u9898\u9762\u5bb9\u6613\u60f3\u5230\u8ddf\u65af\u5766\u7eb3\u6811\u6709\u5173\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4e0d\u59a8\u8bbe $f(i,sta)$ \u8868\u793a\u6839\u4e3a $i$\uff0c\u5173\u952e\u70b9\u7684\u72b6\u538b\u72b6\u6001\u4e3a $sta$ \u65f6\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u90a3\u4e48\u6240\u6709\u7684 $f(i,sta)$ \u6211\u4eec\u90fd\u53ef\u4ee5\u7528\u65af\u5766\u7eb3\u6811\u7684\u6a21\u677f\u6c42\u51fa\u6765\u3002\n\n\u73b0\u5728\u8003\u8651\u5982\u4f55\u8fbe\u5230\u9898\u76ee\u7684\u8981\u6c42\u3002\n\n\u56e0\u4e3a\u8003\u8651\u5230\u9891\u9053\u7684\u6570\u91cf\u4e5f\u5c0f\u4e8e $10$\uff0c\u6240\u4ee5\u8003\u8651\u4e00\u4e0b\u80fd\u4e0d\u80fd\u4e5f\u7528\u72b6\u538b\u89e3\u51b3\u3002\n\n\u8bbe $g(sta')$ \u8868\u793a\u9891\u9053\u7684\u72b6\u538b\u72b6\u6001\u4e3a $sta'$ \u65f6\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\uff08\u5982\u679c $sta'$ \u4e8c\u8fdb\u5236\u4e0b\u7684\u7b2c $k$ \u4f4d\u662f $1$ \u5c31\u8bf4\u660e\u7b2c $k$ \u4e2a\u9891\u9053\u7684\u5173\u952e\u70b9\u90fd\u5df2\u7ecf\u8054\u901a\u4e86\uff0c\u5426\u5219\u4e0d\u8fde\u901a\uff09\u3002\n\n\u7136\u540e\u8bbe $stap(i)$ \u8868\u793a\u7b2c $i$ \u4e2a\u9891\u9053\u7684\u6240\u6709\u5173\u952e\u70b9\u7684\u72b6\u538b\u72b6\u6001\uff08\u7c7b\u4f3c\u4e8e $f(i,sta)$ \u4e2d\u7684 $sta$\uff09\u3002\n\n\u663e\u7136\uff0c\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u5728\u8bfb\u5165\u7684\u65f6\u5019\u9884\u5904\u7406\u3002\n\n\u7136\u540e\u8bf4\u4e00\u4e0b\u6211\u4e00\u5f00\u59cb\u7684\u60f3\u6cd5\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u9891\u9053 $i$\uff0c\u628a $g(1<<i)$ \u7684\u503c\u8bbe\u4e3a $\\min(f(j,stap_i))$\u3002\u7136\u540e\u5176\u4ed6\u7684 $g()$ \u90fd\u8bbe\u4e3a $\\inf$\u3002\n\n\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u4e2a $sta'$ \u7684\u72b6\u6001\uff0c\u66f4\u65b0\uff1a$g(sta')=\\min(g(s)+g(sta'-s))$\u3002\uff08\u5176\u4e2d $s$ \u662f $sta'$ \u7684\u5b50\u96c6\uff09\n\n\u4f46\u662f\u6211\u53d1\u73b0\u4e86\u4e00\u4e2a\u91cd\u8981\u7684\u95ee\u9898\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/iwlkeikp.png)\n\n\u6bd4\u5982\u8bf4\u8fd9\u4e2a\u56fe\u4e2d\uff0c\u6240\u6709\u8282\u70b9\u90fd\u662f\u5173\u952e\u8282\u70b9\uff0c\u70b9 $1$\u3001$4$ \u662f\u9891\u9053 $1$ \u7684\u5173\u952e\u8282\u70b9\uff0c\u70b9 $2$\u3001$3$ \u662f\u9891\u9053 $2$ \u7684\u5173\u952e\u8282\u70b9\u3002\uff08\u70b9\u4e0a\u7684\u9ed1\u8272\u6570\u5b57\u4ee3\u8868\u70b9\u7684\u7f16\u53f7\uff0c\u7ea2\u8272\u6570\u5b57\u4ee3\u8868\u8fd9\u4e2a\u70b9\u6240\u5c5e\u7684\u9891\u9053\uff0c \u8fb9\u4e0a\u7684\u6570\u5b57\u4ee3\u8868\u8fd9\u6761\u8fb9\u7684\u6743\u503c\uff09\u3002\n\n\u663e\u7136\u6709 $g((1)_2)=\\min f(i,(1001)_2)=w_1+w_2+w_3$\uff0c$g((10)_2)=\\min f(i,(0110)_2)=w_2$\u3002\n\n\u90a3\u4e48\u4f1a\u5f97\u51fa\u6765\uff1a$g((11)_2)=w_1+2w_2+w_3$\u3002\n\n\u4f46\u663e\u7136 $g((11)_2)$ \u5e94\u8be5\u7b49\u4e8e $w_1+w_2+w_3$\u3002\n\n\u8fd9\u65f6\u5019\u5c31\u4f1a\u53d1\u73b0\u8fd9\u6837 dp \u4f1a\u7b97\u91cd\u8fb9\u3002\n\n\u5982\u4f55\u89e3\u51b3\uff1f\n\n\u6211\u60f3\u5230\u7684\u89e3\u51b3\u529e\u6cd5\uff1a\n\n\u6211\u4eec\u4e00\u5f00\u59cb\u521d\u59cb\u5316 $g()$ \u7684\u65f6\u5019\uff0c\u672c\u6765\u662f\u53ea\u521d\u59cb\u5316\u6240\u6709\u7684 $g(1<<i)$\uff0c\u800c\u6211\u4eec\u73b0\u5728\u628a $g()$ \u7684\u6bcf\u4e00\u4e2a\u72b6\u6001\u90fd\u521d\u59cb\u5316\u3002\n\n\u610f\u601d\u662f\u8bf4\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $sta'$\uff0c\u6211\u4eec\u90fd\u7528 $f()$ \u5bf9 $g(sta')$ \u8fdb\u884c\u521d\u59cb\u5316\u3002\n\n\u5177\u4f53\u8fc7\u7a0b\u53ef\u4ee5\u770b\u4ee3\u7801\uff0c\u7528 dfs \u5b9e\u73b0\u3002\n\n\u6700\u540e\u518d\u6309\u539f\u6765\u7684\u65b9\u6cd5\uff0c\u66f4\u65b0\uff1a$g(sta')=\\min(g(s)+g(sta'-s))$\u3002\uff08\u5176\u4e2d $s$ \u662f $sta'$ \u7684\u5b50\u96c6\uff09\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n\n#define N 1010\n#define M 3010\n\nusing namespace std;\n\nint n,m,p,anssta,id[15],num[15],stap[15];\nint cnt,head[N],w[M<<1],to[M<<1],nxt[M<<1];\nint f[N][1025],g[1025];\nbool inq[N];\n\n//anssta\u662f\u7b54\u6848\u7684\u72b6\u538b\u72b6\u6001\uff08\u5f62\u5982sta'\uff09\n//stap\u662f\u6bcf\u4e00\u4e2a\u9891\u9053\u5bf9\u5e94\u7684\u72b6\u538b\u72b6\u6001\uff08\u5f62\u5982sta\uff09\n\nqueue<int>q;\n\nvoid adde(int u,int v,int wi)\n{\n\tto[++cnt]=v;\n\tw[cnt]=wi;\n\tnxt[cnt]=head[u];\n\thead[u]=cnt;\n}\n\nvoid spfa(int sta)\n{\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tinq[u]=false;\n\t\tfor(int i=head[u];i;i=nxt[i])\n\t\t{\n\t\t\tint v=to[i];\n\t\t\tif(f[u][sta]+w[i]<f[v][sta])\n\t\t\t{\n\t\t\t\tf[v][sta]=f[u][sta]+w[i];\n\t\t\t\tif(!inq[v])\n\t\t\t\t{\n\t\t\t\t\tinq[v]=true;\n\t\t\t\t\tq.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid dfs(int k,int sum,int sump)\n{\n\tif(k==p+1)\n\t{\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tg[sump]=min(g[sump],f[i][sum]);\n\t\treturn;\n\t}\n\tdfs(k+1,sum|stap[k],sump|(1<<(k-1)));//\u679a\u4e3e\u9009\u8fd9\u4e2a\u9891\u9053\uff08sta'\u7684\u7b2ck\u4f4d\u662f1\uff09\n\tdfs(k+1,sum,sump);//\u4e0d\u9009\u8fd9\u4e2a\u9891\u9053\uff08sta'\u7684\u7b2ck\u4f4d\u662f0\uff09\n}\n\nint main()\n{\n\tmemset(f,0x3f,sizeof(f));\n\tmemset(g,0x3f,sizeof(g));\n\tscanf(\"%d%d%d\",&n,&m,&p);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v,w;\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tadde(u,v,w),adde(v,u,w);\n\t}\n\tfor(int i=1;i<=p;i++)\n\t{\n\t\tscanf(\"%d%d\",&id[i],&num[i]);\n\t\tf[num[i]][1<<(i-1)]=0;\n\t\tstap[id[i]]|=(1<<(i-1));\n\t\tanssta|=(1<<(id[i]-1));\n\t}\n\tint maxn=(1<<p)-1;\n\tfor(int sta=1;sta<=maxn;sta++)\n\t{\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tfor(int now=sta;now;now=sta&(now-1))\n\t\t\t\tf[i][sta]=min(f[i][sta],f[i][now]+f[i][sta-now]);\n\t\t\tif(f[i][sta]!=0x3f3f3f3f)\n\t\t\t{\n\t\t\t\tq.push(i);\n\t\t\t\tinq[i]=true;\n\t\t\t}\n\t\t}\n\t\tspfa(sta);\n\t}\n   //\u4ee5\u4e0a\u662f\u6a21\u677f\u65af\u5766\u7eb3\u6811\n\tdfs(1,0,0);\n\tfor(int sta=1;sta<=anssta;sta++)\n\t\tfor(int now=sta;now;now=sta&(now-1))\n\t\t\tg[sta]=min(g[sta],g[now]+g[sta-now]);\n\tprintf(\"%d\\n\",g[anssta]);\n\treturn 0;\n}\n```",
        "postTime": 1592390716,
        "uid": 118318,
        "name": "ez_lcw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3264 \u3010[JLOI2015]\u7ba1\u9053\u8fde\u63a5\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u6709\u82e5\u5e72\u4e0d\u540c\u7c7b\u578b\u7684\u5fc5\u9009\u70b9\u548c\u9009\u9009\u70b9\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7c7b\u578b\u7684\u5fc5\u9009\u70b9\u8981\u6c42\u8054\u901a\uff0c\u6c42\u6700\u540e\u7684\u6700\u5c0f\u751f\u6210\u6811\u68ee\u6797\u6743\u503c\u603b\u548c\u3002  \n\u5bf9\u4e8e\u6709\u82e5\u5e72\u7684\u5fc5\u9009\u70b9\u548c\u9009\u9009\u70b9\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u95ee\u9898\u6211\u4eec\u79f0\u4e3a\u65af\u5766\u7eb3\u6811\u95ee\u9898\uff0c\u8fd9\u79cd\u95ee\u9898\u7684\u5fc5\u9009\u70b9\u6570\u91cf\u4f1a\u5f88\u5c11\uff0c\u53ef\u4ee5\u4f7f\u7528\u72b6\u6001\u538b\u7f29\u6765\u6c42\u89e3\uff0c\u4e0d\u540c\u4e8e\u666e\u901a\u7684\u6700\u5c0f\u751f\u6210\u6811\u7b97\u6cd5\uff0c\u5982 kruskal \u548c prim \u7b80\u5355\u597d\u5199\uff0c\u57fa\u4e8e\u8fb9\u3002\u65af\u5766\u7eb3\u6811\u7684\u6c42\u89e3\u4f9d\u8d56\u4e8e\u91cd\u8981\u70b9\u7684\u72b6\u6001\u538b\u7f29\u3002  \ndp \u5b9a\u4e49\uff1a$dp i,j$ \u4ee5 $i$ \u70b9\u4e3a\u6839\uff0c\u91cd\u8981\u70b9\u96c6\u72b6\u6001\u4e3a j \u7684\u6700\u5c0f\u751f\u6210\u6811\u8fb9\u6743\u548c\u3002  \n\u5f88\u663e\u7136\uff0c\u5bf9\u4e8e\u8fd9\u4e2a dp \u6709\u4e24\u4e2a\u8f6c\u79fb\u65b9\u7a0b\uff1a  \n$ f[j][i]=\\min(f[j][i],f[j][i-k]+f[j][k]);$  \n\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u5bf9\u4e8e $f[j][i]$ \uff0c\u5373\u8986\u76d6\u72b6\u6001\u4e3a $i$ \u7684\u6700\u5c0f\u751f\u6210\u6811\u4e00\u5b9a\u80fd\u591f\u88ab\u5206\u4e3a\u5f62\u5982\u8fd9\u4e2a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7684\u5f62\u5f0f\u3002  \n$f[j][i]=\\min(f[j][i],f[k][i]+disk(j,k));$  \n$k$ \u4e3a $j$ \u7684\u90bb\u5c45\u8282\u70b9\uff0c $disk$ \u662f\u8fb9\u6743\u3002  \n\u5bf9\u4e8e\u5355\u4e2a\u65af\u5766\u7eb3\u6811\u7684\u6c42\u89e3\u8fc7\u7a0b\uff1a  \n1.\u627e\u5230\u6240\u6709\u91cd\u8981\u70b9\uff0c\u5c06 dp \u5f53\u524d\u91cd\u8981\u70b9 \u53ea\u6709\u5f53\u524d\u91cd\u8981\u70b9\u7684\u70b9\u96c6\u8bbe\u4e3a0\uff0c\u5176\u5b83\u8bbe\u4e3a$inf$\u3002  \n2.\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u70b9\u96c6\uff0c\u5728\u5185\u90e8\u5faa\u73af i \uff08\u5f53\u524d\u70b9\uff09\uff0c\u5728 $i$ \u5faa\u73af\u5185\u90e8\u5faa\u73af $k$ \uff08$k$\u5fc5\u987b\u4e3a\u5f53\u524d\u70b9\u96c6\u7684\u5b50\u96c6\uff09\uff0c\u7136\u540e\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\uff0c\u65b9\u7a0b\uff1a  \n$f[j][i]=\\min(f[j][i],f[j][i-k]+f[j][k]);$\uff08\u7b2c\u4e00\u6b21\u72b6\u6001\u8f6c\u79fb\uff09  \n\u5982\u679c\u8fd9\u4e00\u901a\u64cd\u4f5c\u4e0b\u6765 $f j,i$ \u4e0d\u662f $inf$ \u4e86\uff08\u6709\u89e3\u4e86\uff09\uff0c\u4f60\u5c06\u5176\u52a0\u5165 SPFA \u961f\u5217\u4e2d\u3002  \n3.\u5728 i \u5faa\u73af\u9000\u51fa\u540e\uff0c\u8fdb\u884c\u5f53\u524d\u70b9\u96c6\u4e0b\u7684\u4e00\u6b21 SPFA\u3002 \uff08\u7b2c\u4e8c\u6b21\u72b6\u6001\u8f6c\u79fb\uff09  \n\u5bb3\uff0c\u8bf4\u4e86\u8fd9\u4e48\u591a\u8fd8\u662f\u8bf4\u4e0d\u660e\u767d\uff0c\u4e0a\u4ee3\u7801\uff1a  \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m,p;\nint x,y,z;\nstruct sta{\n\tint id;\n\tint com;\n}station[15];\nstruct node{\n\tint x,y;\n};\nnode tmp;\nvector <node> edge[20010];\nbool cmp(sta a,sta b){\n\tif(a.com<b.com)return true;\n\telse return false;\n} \nint tot=1;\nint f[5010][1<<11];\nint g[1<<11];\nint cnt;\nvoid init(){\n\tfor(int i=0;i<=n;i++){\n\t\tfor(int j=0;j<=(1<<p)-1;j++){\n\t\t\tf[i][j]=1e9;\n\t\t}\n\t}\n}\nqueue <int> Q;\nbool vis[5010];\nvoid primary_spfa(int I){\n\tint x,y;\n\twhile(!Q.empty()){\n\t\tx=Q.front();\n\t\tQ.pop();\n\t\tvis[x]=false;\n\t\tfor(int i=0;i<edge[x].size();i++){\n\t\t\ty=edge[x][i].x;\n\t\t\tif(f[y][I]>f[x][I]+edge[x][i].y){\n\t\t\t\tf[y][I]=f[x][I]+edge[x][i].y;\n\t\t\t\tif(!vis[y]){\n\t\t\t\t\tvis[y]=true;\n\t\t\t\t\tQ.push(y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint solve(int cnt){\n\tfor(int i=1;i<=(1<<cnt)-1;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tfor (int k=(i-1)&i;k;k=(k-1)&i){\n\t\t\t\tf[j][i]=min(f[j][i],f[j][i-k]+f[j][k]);\n\t\t\t}\n\t\t\tif(f[j][i]!=1e9){\n\t\t\t\tvis[j]=true;\n\t\t\t\tQ.push(j);\n\t\t\t}\n\t\t}\n\t\tprimary_spfa(i);\n\t}\n\tint ans=1e9;\n\tfor(int i=1;i<=n;i++){\n\t\tans=min(ans,f[i][(1<<cnt)-1]);\n\t}\n\treturn ans;\n}\nint main(){\n\tcin>>n>>m>>p;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>x>>y>>z;\n\t\ttmp.x=y;\n\t\ttmp.y=z;\n\t\tedge[x].push_back(tmp);\n\t\ttmp.x=x;\n\t\tedge[y].push_back(tmp);\n\t}\n\tfor(int i=1;i<=p;i++){\n\t\tcin>>station[i].com>>station[i].id;\n\t}\n\tsort(station+1,station+1+p,cmp);\n\tfor(int i=1;i<=p;i++){\n\t\tif(i!=1&&station[i].com!=station[i-1].com){\n\t\t\t++tot;\n\t\t}\n\t\tstation[i].com=tot;\n\t}\n\tfor(int i=1;i<=(1<<tot)-1;i++)g[i]=1e9;\n\tfor(int i=1;i<=(1<<tot)-1;i++){\n\t\tcnt=0;\n\t\tinit();\n\t\tfor(int j=1;j<=p;j++){\n\t\t\tif((1<<(station[j].com-1))&i){\n\t\t\t\t++cnt;\n\t\t\t\tf[station[j].id][1<<(cnt-1)]=0;\n\t\t\t}\n\t\t}\n\t\tg[i]=solve(cnt);\n\t}\n\tfor(int i=1;i<=(1<<tot)-1;i++){\n\t\tfor (int j=(i-1)&i;j;j=(j-1)&i){\n\t\t\tg[i]=min(g[i],g[j]+g[i-j]);\n\t\t}\n\t} \n\tcout<<g[(1<<tot)-1];\n\treturn 0;\n}\n```\n",
        "postTime": 1640483702,
        "uid": 213173,
        "name": "\u5c0f\u6728\u866b",
        "ccfLevel": 4,
        "title": "the solution of P3264"
    },
    {
        "content": "## \u9898\u76ee\u63cf\u8ff0\uff1a\n\u7ed9\u51fa\u4e00\u5f20\u56fe\n\u7ed9\u51fa\u82e5\u5e72\u4e2a\u70b9\u548c\u5176\u9891\u7387\uff0c\u8981\u6c42\u76f8\u540c\u9891\u7387\u7684\u70b9\u53ef\u4ee5\u8fde\u901a\uff0c\u6c42\u6700\u5c0f\u4ee3\u4ef7\u3002\n## \u9898\u76ee\u5206\u6790\uff1a\n\u89c2\u5bdf\u5230\u5e26\u9891\u7387\u7684\u70b9\u6570\u5f88\u5c11\uff0c\u53ea\u670910\u4e2a\u5de6\u53f3\n\n\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u505a\u65af\u5766\u7eb3\u6811\n\n\u8fd9\u4e9b\u76f8\u540c\u9891\u7387\u7684\u70b9\u5f62\u6210\u4e00\u4e2a\u65af\u5766\u7eb3\u6811\uff0c\u5176\u5b9e\u6700\u540e\u5f62\u6210\u7684\u662f\u4e2a\u65af\u5766\u7eb3\u6811\u68ee\u6797\uff0c\u6240\u4ee5\u6700\u540e\u8981\u641e\u4e00\u4e0b\u5b50\u96c6DP\uff08\u96fe\n## \u9898\u76ee\u94fe\u63a5\uff1a\n[Luogu 3264](https://www.luogu.org/problemnew/show/P3264)\n\n[BZOJ 4006](http://www.lydsy.com/JudgeOnline/problem.php?id=4006)\n## Ac \u4ee3\u7801\uff1a\n\n```\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <cstring>\n#include <vector>\nconst int maxm=6000; \nstd::vector <int> p[20];\nstd::queue <int> dl;\nint inf;\nint f[maxm][1<<10],g[1<<10],n,m,num;\nint head[maxm],to[maxm<<1],net[maxm<<1],cost[maxm<<1],cnt;\nbool vis[maxm];\nint pos[20],w[2000];\nint point[20];\nvoid addedge(int u,int v,int c)\n{\n\tcnt++;\n\tto[cnt]=v,cost[cnt]=c,net[cnt]=head[u],head[u]=cnt;\n}\nvoid spfa(int sta)\n{\n\twhile(!dl.empty()) dl.pop();\n\tfor(int i=1;i<=n;i++) \n     if(f[i][sta]<inf) dl.push(i),vis[i]=1;\n    while(!dl.empty())\n    {\n    \tint x=dl.front();\n    \tdl.pop();\n    \tvis[x]=0;\n    \tfor(int i=head[x];i;i=net[i])\n    \tif(f[to[i]][sta]>f[x][sta]+cost[i])\n    \t{\n    \t\tf[to[i]][sta]=f[x][sta]+cost[i];\n    \t\tif(!vis[to[i]]) vis[to[i]]=1,dl.push(to[i]);\n    \t}\n    }\n}\nbool check(int sta)\n{\n\tfor(int i=0;i<num;i++)\n\tif((sta>>i)&1)\n\t{\n\t\tint poi=pos[i+1];\n\t\tfor(int j=0;j<p[poi].size();j++)\n\t\t if(!((1<<(p[poi][j]-1))&sta)) return 0;\n\t}\n\treturn 1;\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&num);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v,c;\n\t\tscanf(\"%d%d%d\",&u,&v,&c);\n\t\taddedge(u,v,c),addedge(v,u,c);\n\t}\n\tfor(int i=1;i<=num;i++)\n\t{\n\t\tint dx,id;\n\t\tscanf(\"%d%d\",&dx,&id);\n\t\tw[id]=i;\n\t\tp[dx].push_back(i);\n\t\tpos[i]=dx;\n\t\tpoint[i]=id;\n\t}\n\tmemset(f,127/3,sizeof(f)),memset(g,127/3,sizeof(g));\n\tinf=f[0][0];\n\tfor(int i=1;i<=num;i++)\n\t{\n\t\tint nowd=point[i];\n\t\tf[nowd][1<<(w[nowd]-1)]=0;\n\t}\n\tfor(int s=0;s<(1<<num);s++)\n\t{\n\t\tfor(int i=1;i<=n;i++)\n\t\t for(int j=s&(s-1);j;j=(j-1)&s)\n\t\t  f[i][s]=std::min(f[i][s],f[i][j]+f[i][s-j]);\n\t\tspfa(s);\n\t\tfor(int i=1;i<=n;i++) g[s]=std::min(g[s],f[i][s]);\n\t}\n\tfor(int s=0;s<(1<<num);s++)\n\t for(int i=s&(s-1);i;i=(i-1)&s)\n\t  if(check(i)&&check(s-i))\n\t   g[s]=std::min(g[s],g[i]+g[s-i]);\n\tprintf(\"%d\\n\",g[(1<<num)-1]);\n\treturn 0;\n}\n```\n",
        "postTime": 1521718440,
        "uid": 19842,
        "name": "\u534a\u4ed9\u80e1\u5c0f\u6843",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3264 \u3010[JLOI2015]\u7ba1\u9053\u8fde\u63a5\u3011"
    }
]