[
    {
        "content": "\n## \u5feb\u901f\u5e42\n### \u65f6\u9694\u4e00\u5e74\uff0c\u91cd\u65b0\u6765\u770b\u6211\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u7b80\u76f4\u60e8\u4e0d\u5fcd\u7779\uff0c\u5f53\u65f6\u8fde\u81ea\u5df1\u90fd\u6ca1\u6709\u5b8c\u5168\u7406\u89e3\u5c31\u5728\u5199\u9898\u89e3\uff0c\u73b0\u5728\u91cd\u65b0\u6c34\u4e00\u53d1\u9898\u89e3\u3002\n\n\n\n\u9996\u5148\uff0c\u8003\u8651\u6700\u7b80\u5355\u7684dp\uff0c\u7528dp[k][i][j]\u8868\u793a\u5f53\u524d\u679a\u4e3e\u5230\u7b2ci\u4f4d\uff0c\u5f53\u524d\u6570\u4e4b\u548c\u4e3aj\uff0ck\u8868\u793a\u662f\u5426\u9009\u62e9\u4e86\u8d28\u6570\uff0c\u6eda\u52a8\u6570\u7ec4\u6eda\u6389i\u4f4d\uff0c\u4f46\u662f\u5b9e\u9645\u7684\u590d\u6742\u5ea6\u4e3aO(nm),\u80fd\u8fc7\u591a\u5c11\u5206\u9898\u9762\u7ed9\u7684\u4e0d\u6e05\u6670\uff0c\u53cd\u6b63\u81f3\u5c11\u80fd\u5f97\u523020\u5206\u7684\u597d\u5206\u6570\u3002\n\n\u663e\u7136\uff0c\u8fd9\u79cd\u662f\u5b8c\u5168\u8fc7\u4e0d\u4e86\u7684\u3002\u4f46\u662f\u5f53\u6211\u4eec\u6df1\u5165\u5206\u6790\u8fd9\u4e2a\u8f6c\u79fb\u7684\u5b9e\u8d28\uff0c\u5c31\u4f1a\u53d1\u73b0\u5728\u6bcf\u6b21\u5f80\u540e\u4e00\u4f4d\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u8f6c\u79fb\u662f\u56fa\u5b9a\u7684\uff0c\u800c\u6211\u4eec\u7528dp\u8f6c\u79fb\u7684\u65f6\u5019\u4f1a\u6709\u5927\u90e8\u5206\u7684\u91cd\u590d\uff0c\u5c31\u663e\u5f97\u5f88\u52a3\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6765\u91cd\u65b0\u8003\u8651\u4e00\u4e0b\u8fd9\u4e2a\u8f6c\u79fb\u3002(\u5148\u4e0d\u8003\u8651\u8d28\u6570\u7684\u95ee\u9898)\n\u6211\u4eec\u7528f[i][j]\u8868\u793a\u5728\u7b2ci\u4f4d\u9009\u6570\u548c\u4e3aj(\u5728%p\u610f\u4e49\u4e0b\u7684)\uff0c\u4f60\u4f1a\u53d1\u73b0\u6211\u8fd9\u4e2a\u548cdp\u5b9a\u4e49\u7684\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\u3002~~\u6ca1\u9519\uff0c\u6211\u5c31\u662f\u5728\u5e9f\u8bdd\u3002~~ \u5bf9\u4e8e\u6700\u57fa\u7840\u7684\u8f6c\u79fb\uff0c\u5c31\u662f\uff0c$f[i+1][j]= \\sum_{(k+l)\\%p==j} f[k]+1 $ ,\u63a8\u5e7f\u4e00\u4e0b\u5c31\u662f$f[i1+i2][j]+= \\sum_{(k+l)\\%p==j}f[i1][k]* f[i2][l]$ (\u5b9a\u4e49\u4e3a$ f[i1]*f[i2] $)\u3002\uff08\u8bb0\u5f97mod 20170408\uff09\n\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u5f0f\u5b50\uff0c\u6211\u4eec\u76f8\u5f53\u4e8e$f[i1]$,$f[i2]$\uff0c\u6211\u4eec\u76f8\u5f53\u4e8e\u91cd\u65b0\u5b9a\u4e49\u4e86\u4ed6\u4eec\u7684\u4e58\u6cd5\u6cd5\u5219\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u4ed6\u8fdb\u884c\u5feb\u901f\u5e42\u3002\n\u73b0\u5728\u6211\u4eec\u552f\u4e00\u7684\u95ee\u9898\u5c31\u662f\u5728\u4e8e\u51fa\u73b0\u8d28\u6570\u600e\u4e48\u529e\uff0c\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u5b9a\u4e49$f$\u4e3a\u53d6\u5168\u90e8\u6570\u7684\u60c5\u51b5\uff0c$g$\u4e3a\u53ea\u51fa\u73b0\u975e\u8d28\u6570\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6700\u540e\u7684\u7b54\u6848\u6211\u4eec\u662f\u4e0d\u662f\u7528$f-g$\u5c31\u662f\u7684\u7b54\u6848\u4e86\u3002(\u56e0\u4e3a\u6700\u7ec8\u548c\u4e3a$p$\uff0c\u90a3\u4e48\u7b54\u6848\u8bb0\u5f55\u5728$f[0]-g[0]$\u4e2d)\u3002\u65f6\u95f4\u590d\u6742\u5ea6$ O(p^2logn)$\uff0c\u5b8c\u5168\u80fd\u901a\u8fc7\u6b64\u9898\u3002\n\n\n```cpp\n#pragma GCC optimize(3)\n#include<bits/stdc++.h>\n#define inf 999999999\n#define dl double\n#define ll long long\n#define re register\n#define V inline void\n#define LL inline ll\n#define I inline int\n#define B inline bool\n#define FOR(i,a,b) for(re int i=(a) ,i##i=(b) ; i<=i##i ; ++i)\n#define AFOR(i,a,b) for(re int i=(a) , i##i=(b) ; i>=i##i ; --i)\n#define REP(i,u) for(re int i=head[u],v=edge[i].to;i!=-1;i=edge[i].nxt,v=edge[i].to)\n#define gc (fs==ft&&(ft=(fs=buf)+fread(buf,1,1<<18,stdin),fs==ft))?0:*fs++\n// #define gc getchar()\nusing namespace std;\nconst int N=2e7+10,mo=20170408;\nchar buf[1<<18],*fs,*ft;\ninline ll read() {\n\tll w=0,p=0;\n\tchar ch=gc;\n\twhile(!isdigit(ch)) w=ch=='-'?1:0,ch=gc;\n\twhile(isdigit(ch)) p=p*10+ch-'0',ch=gc;\n\treturn w?-p:p;\n}\ninline void write(ll x) {\n\tif(x<0) putchar('-'),x=-x;\n\tif(x>9) write(x/10);\n\tputchar(x%10+'0');\n\treturn ;\n}\nint p,cnt,vis[N],pre[N];\nll n,m,f[300],g[300],F[300],G[300],c[300];\nV mul(ll *a,ll *b){\n\tFOR(i,0,p-1) FOR(j,0,p-1) c[i+j]=(c[i+j]+a[i]*b[j])%mo;\n\tFOR(i,0,p-1) a[i]=(c[i]+c[i+p])%mo,c[i]=c[i+p]=0;\n\treturn ;\n}\nint main(){\n\tn=read(),m=read(),p=read();\n\tf[1]=g[1]=F[0]=G[0]=1;\n\tFOR(i,2,m){\n\t\t++f[i%p];\n\t\tif(!vis[i]) pre[++cnt]=i;\n\t\telse ++g[i%p];\n\t\tFOR(j,1,cnt){\n\t\t\tif(i*pre[j]>m) break;\n\t\t\tvis[i*pre[j]]=1;\n\t\t\tif(i%pre[j]==0) break;\n\t\t}\n\t}\n\twhile(n){\n\t\tif(n&1) mul(F,f),mul(G,g);\n\t\tmul(f,f),mul(g,g),n>>=1;\n\t}\n\twrite((F[0]-G[0]+mo)%mo);\n\treturn 0;\n}\n```\n",
        "postTime": 1570094046,
        "uid": 242478,
        "name": "xin_chen",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3702 \u3010[SDOI2017]\u5e8f\u5217\u8ba1\u6570\u3011"
    },
    {
        "content": "\u6211\u89c9\u5f97\u8fd9\u7bc7\u9898\u89e3\u4e0b\u5f88\u591a\u77e9\u9635\u89e3\u6cd5\u6ca1\u6709\u5199\u6e05\u695a\u77e9\u9635\u600e\u4e48\u6784\u9020...\u6240\u4ee5\u6211\u6765\u8be6\u7ec6\u5730\u5199\u4e00\u4e0b\n\n\u540c\u6b65\u66f4\u65b0\u4e8e\u6211\u7684\u535a\u5ba2\uff1a[\u300cLUOGU P3702\u300d[SDOI2017]\u5e8f\u5217\u8ba1\u6570](https://www.skyofwar.net/2019/04/19/128.html)\n\n\u9996\u5148\u8fd9\u4e2a\u5f62\u5f0f\u663e\u7136\u975e\u5e38\u4e0d\u597d\u8ba1\u7b97\uff0c\u5bb9\u65a5\u4e00\u6ce2\uff1a$\\text{ans}=\\text{\u6ee1\u8db3\u548c\u4e3a}p\\text{\u7684\u500d\u6570\u7684\u65b9\u6848\u6570}-\\text{\u6ee1\u8db3\u548c\u4e3a}p\\text{\u7684\u500d\u6570\u4e14\u4e0d\u542b\u8d28\u6570\u7684\u65b9\u6848\u6570}$\n\n\u6211\u4eec\u5f88\u5bb9\u6613\u5f97\u5230$20\\rm pts$\u7684\u4f18\u79c0\u505a\u6cd5\uff1a\u4ee4$f_{i,j}$\u8868\u793a$i$\u4e2a\u6570$\\mod p$\u7b49\u4e8e$j$\u7684\u65b9\u6848\u6570\uff0c\u5219\u8f6c\u79fb\u4e3a$f_{i,j} = \\sum_{k} f_{i-1,k} \\times \\text{cnt}_{(j - k + p)\\bmod \\; p}$\uff0c\u5176\u4e2d$\\text{cnt}_i$\u8868\u793a$1\\sim m$\u4e2d$\\bmod P$\u4e3a$i$\u7684\u4e2a\u6570\u3002\u4ee4$g_{i,j}$\u8868\u793a$i$\u4e2a**\u5408\u6570**$\\mod p$\u7b49\u4e8e$j$\u7684\u65b9\u6848\u6570\uff0c\u5219\u8f6c\u79fb\u4e3a$g_{i,j} = \\sum_{k} g_{i-1,k} \\times \\text{compo}_{(j - k + p)\\bmod \\; p}$\uff0c\u5176\u4e2d$\\text{compo}_i$\u8868\u793a$1\\sim m$\u4e2d\u7684**\u5408\u6570**$\\bmod P$\u4e3a$i$\u7684\u4e2a\u6570\u3002\n\u8003\u8651\u7528\u77e9\u9635\u4e58\u6cd5\u4f18\u5316\u3002\u5bf9\u4e8e$f$\uff0c\u77e9\u9635\u5982\u4e0b\u6240\u793a\uff1a\n$$\\mathbf P = \\begin{bmatrix} \\text{cnt}_0 & \\text{cnt}_{p-1} & \\text{cnt}_{p-2} & \\text{cnt}_{p-3} & \\text{cnt}_{p-4} & ... & \\text{cnt}_1 \\\\ \\text{cnt}_1 & \\text{cnt}_0 & \\text{cnt}_{p-1} & \\text{cnt}_{p-2} & \\text{cnt}_{p-3} & ... & \\text{cnt}_2 \\\\ \\text{cnt}_2 & \\text{cnt}_1 & \\text{cnt}_0 & \\text{cnt}_{p-1} & \\text{cnt}_{p-2} & ... & \\text{cnt}_3 \\\\ \\text{cnt}_3 & \\text{cnt}_2 & \\text{cnt}_1 & \\text{cnt}_0 & \\text{cnt}_{p-1} & ... & \\text{cnt}_4 \\\\ ... & ... & ... & ... & ... & ... & ...\\\\ \\text{cnt}_{p-1} & \\text{cnt}_{p-2} & \\text{cnt}_{p-3} & \\text{cnt}_{p-4} & \\text{cnt}_{p-5} & ... & \\text{cnt}_0 \\end{bmatrix}$$\n\u5411\u91cf\u957f\u8fd9\u6837\uff1a\n$$\\mathbf V = \\begin{bmatrix} \\text{cnt}_0 \\\\ \\text{cnt}_1 \\\\ \\text{cnt}_2 \\\\ ... \\\\ \\text{cnt}_{p-1} \\end{bmatrix}$$\n\u6700\u540e\u7b54\u6848\u77e9\u9635\u4e3a$\\mathbf F = \\mathbf P ^ {n-1}\\times \\mathbf V$\u3002\n\u5bf9\u4e8e$g$\uff0c\u77e9\u9635\u5982\u4e0b\u6240\u793a\uff1a\n$$\\mathbf Q = \\begin{bmatrix} \\text{compo}_0 & \\text{compo}_{p-1} & \\text{compo}_{p-2} & \\text{compo}_{p-3} & \\text{compo}_{p-4} & ... & \\text{compo}_1 \\\\ \\text{compo}_1 & \\text{compo}_0 & \\text{compo}_{p-1} & \\text{compo}_{p-2} & \\text{compo}_{p-3} & ... & \\text{compo}_2 \\\\ \\text{compo}_2 & \\text{compo}_1 & \\text{compo}_0 & \\text{compo}_{p-1} & \\text{compo}_{p-2} & ... & \\text{compo}_3 \\\\ \\text{compo}_3 & \\text{compo}_2 & \\text{compo}_1 & \\text{compo}_0 & \\text{compo}_{p-1} & ... & \\text{compo}_4 \\\\ ... & ... & ... & ... & ... & ... & ...\\\\ \\text{compo}_{p-1} & \\text{compo}_{p-2} & \\text{compo}_{p-3} & \\text{compo}_{p-4} & \\text{compo}_{p-5} & ... & \\text{compo}_0 \\end{bmatrix}$$\n\u5411\u91cf\u957f\u8fd9\u6837\uff1a\n$$\\mathbf W = \\begin{bmatrix} \\text{compo}_0 \\\\ \\text{compo}_1 \\\\ \\text{compo}_2 \\\\ ... \\\\ \\text{compo}_{p-1} \\end{bmatrix}$$\n\u6700\u540e\u7b54\u6848\u77e9\u9635\u4e3a$\\mathbf G = \\mathbf Q ^ {n-1}\\times \\mathbf W$\u3002\n\u6700\u7ec8\u7b54\u6848\u4e3a$\\mathbf F_{1,1} - \\mathbf G_{1,1}$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1e2 + 10, mo = 20170408, MAXM = 2e7 + 10;\nstruct mat\n{\n\tint m, n, ma[MAXN][MAXN];\n\tmat() {}\n\tmat(int _m, int _n) :\n\t\tm(_m), n(_n)\n\t{\n\t\tmemset(ma, 0, sizeof(ma));\n\t}\n\tfriend inline mat operator * (mat a, mat b)\n\t{\n\t\tmat res = mat(a.m, b.n);\n\t\tfor(int i = 1; i <= res.m; i++)\n\t\t\tfor(int j = 1; j <= res.n; j++)\n\t\t\t\tfor(int k = 1; k <= a.n; k++)\n\t\t\t\t\tres.ma[i][j] = (res.ma[i][j] + 1ll * a.ma[i][k]\n\t\t\t\t\t\t\t\t\t* b.ma[k][j] % mo) % mo;\n\t\treturn res;\n\t}\n\tfriend inline mat operator ^ (mat a, int b)\n\t{\n\t\tmat c = a, res = mat(a.m, a.n);\n\t\tfor(int i = 1; i <= res.m; i++)\n\t\t\tres.ma[i][i] = 1;\n\t\twhile(b)\n\t\t{\n\t\t\tif(b & 1) res = res * c;\n\t\t\tc = c * c;\n\t\t\tb >>= 1;\n\t\t}\n\t\treturn res;\n\t}\n} P, Q, V, W;\nint n, m, p, cnt[MAXN], compo[MAXN];\nbool prime[MAXM];\nint pr[MAXM];\ntemplate <class T>\ninline void _read(T &x)\n{\n\tx = 0;\n\tchar t = getchar();\n\twhile(!isdigit(t) && t != '-') t = getchar();\n\tif(t == '-')\n\t{\n\t\t_read(x);\n\t\tx *= -1;\n\t\treturn ;\n\t}\n\twhile(isdigit(t))\n\t{\n\t\tx = x * 10 + t - '0';\n\t\tt = getchar();\n\t}\n}\nint ptot = 0;\nint main()\n{\n\t_read(n), _read(m), _read(p);\n\tfor(int i = 0; i < p; i++) cnt[i] = m / p;\n\tfor(int i = 1; i <= m % p; i++) cnt[i]++;\n\tP = mat(p, p);\n\tP.ma[1][1] = cnt[0];\n\tfor(int i = 2; i <= p; i++) P.ma[1][i] = cnt[p - i + 1];\n\tfor(int i = 2; i <= p; i++)\n\t{\n\t\tfor(int j = 2; j <= p; j++)\n\t\t\tP.ma[i][j] = P.ma[i - 1][j - 1];\n\t\tP.ma[i][1] = P.ma[i - 1][p];\n\t}\n\tmemset(prime, 1, sizeof prime);\n\tprime[1] = false;\n\tfor(int i = 2; i <= m; i++)\n\t{\n\t\tif(prime[i] == true)\n\t\t\tpr[++ptot] = i;\n\t\tfor(int j = 1; i * pr[j] <= m && j <= ptot; ++j)\n\t\t{\n\t\t\tprime[i * pr[j]] = false;\n\t\t\tif(i % pr[j] == 0)\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i = 1; i <= m; i++)\n\t\tif(!prime[i]) compo[i % p]++;\n\tQ = mat(p, p);\n\tQ.ma[1][1] = compo[0];\n\tfor(int i = 2; i <= p; i++) Q.ma[1][i] = compo[p - i + 1];\n\tfor(int i = 2; i <= p; i++)\n\t{\n\t\tfor(int j = 2; j <= p; j++)\n\t\t\tQ.ma[i][j] = Q.ma[i - 1][j - 1];\n\t\tQ.ma[i][1] = Q.ma[i - 1][p];\n\t}\n\tfor(int i = 1; i <= p; i++)\n\t\tfor(int j = 1; j <= p; j++)\n\t\t\tP.ma[i][j] %= mo, Q.ma[i][j] %= mo;\n\tV = mat(p, 1);\n\tW = mat(p, 1);\n\tfor(int i = 1; i <= p; i++) V.ma[i][1] = cnt[i - 1] % mo;\n\tfor(int i = 1; i <= p; i++) W.ma[i][1] = compo[i - 1] % mo;\n\tP = (P ^ n - 1) * V;\n\tQ = (Q ^ n - 1) * W;\n\tprintf(\"%d\\n\", (P.ma[1][1] - Q.ma[1][1] + mo) % mo);\n\treturn 0;\n}\n```",
        "postTime": 1555679807,
        "uid": 13290,
        "name": "sky_of_war",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3702 \u3010[SDOI2017]\u5e8f\u5217\u8ba1\u6570\u3011"
    },
    {
        "content": "[\u539f\u6587](https://www.cnblogs.com/LJC00118/p/9904982.html)\u98df\u7528\u6548\u679c\u66f4\u4f73qwq\n\nhttps://www.luogu.org/problemnew/show/P3702\n\n\u9898\u76ee\u8ba9\u6211\u4eec\u5728 $ [1, m] $ \u4ece\u4e2d\u9009\u51fa $ n $ \u4e2a\u6570\uff0c\u5f53\u4e2d\u8981\u6709 > $ 0 $ \u4e2a\u8d28\u6570\uff0c\u548c\u662f $ p $ \u7684\u500d\u6570\uff0c\u76f4\u63a5\u6c42\u662f\u5f88\u96be\u6c42\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6240\u6709\u65b9\u6848\u51cf\u53bb\u4e0d\u542b\u7d20\u6570\u7684\u65b9\u6848\uff0c\u8fd9\u6837\u6c42\u51fa\u6765\u7684\u4e1c\u897f\u5c31\u662f\u7b54\u6848\n\n\u73b0\u5728\u6211\u4eec\u8003\u8651\u5982\u4f55\u8ba1\u7b97\u51fa\u548c\u662f $ p $ \u7684\u500d\u6570\u7684\u65b9\u6848\n\n\u6211\u4eec\u4ee4 $ f (x) $ \u8868\u793a\u5f53\u524d\u9009\u51fa\u7684\u6570\u7684\u548c\u6a21 $ p $ \u662f $ x $ \u7684\u65b9\u6848\u6570\uff0c\u628a\u4e24\u4e2a\u8fd9\u6837\u7684\u591a\u9879\u5f0f\u8fdb\u884c\u5377\u79ef\n\n\u8bbe\u4e24\u4e2a\u591a\u9879\u5f0f\u5206\u522b\u4e3a $ f1 $ \u548c $ f2 $\n\n$ Ans[i + j - 1] $ \u8fd9\u4e00\u9879\u7684\u503c\u5305\u542b $ f1[i] * f2[j] $ \u7684\u503c\uff0c\u800c\u5176\u4ed6\u9879\u4e0d\u5305\u542b\n\n\u6211\u4eec\u628a\u4e0b\u6807 $ -1 $ \u540e\n\n$ Ans[i + j - 2] $ \u8fd9\u4e00\u9879\u7684\u503c\u5305\u542b $ f1[i - 1] * f2[j - 1] $ \u7684\u503c\uff0c\u800c\u5176\u4ed6\u9879\u4e0d\u5305\u542b\n\n\u518d\u56de\u5230\u591a\u9879\u5f0f\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u53d1\u73b0\uff0c$ Ans[i + j - 2] += f1[i - 1] * f2[j - 1] $ \u7684\u610f\u4e49\u5c31\u662f\u9009\u51fa\u7684\u548c\u6a21 $ p $ \u662f $ i - 1 $ \u7684\u60c5\u51b5\u548c\u9009\u51fa\u7684\u548c\u6a21 $ p $ \u662f $ j - 1 $ \u5408\u5728\u4e00\u8d77\uff0c\u5373\u9009\u51fa\u6765\u7684\u6570\u7684\u548c\u6a21 $ p $ \u662f $ i + j - 2 $ \u7684\u65b9\u6848\u6570\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u6784\u9020\u51fa\u521d\u59cb\u7684\u591a\u9879\u5f0f $ f $\uff0c\u6c42\u51fa $ f^n(p) $  \u7684\u503c\uff0c\u5373\u4e3a\u65b9\u6848\u6570\n\n\u7136\u540e\u7b54\u6848\u5c31\u662f\u6240\u6709\u65b9\u6848\u51cf\u53bb\u4e0d\u542b\u7d20\u6570\u7684\u65b9\u6848\n\n\u5377\u79ef\u53ef\u4ee5\u5199\u4e00\u4e2a\u4e09\u6a21 NTT\uff0c\u5f53\u7136\u8fd9\u9898\u6570\u636e\u8303\u56f4\u5c0f\uff0c\u76f4\u63a5\u66b4\u529b\u5377\u79ef\u4e5f\u53ef\u4ee5\uff08\u8dd1\u7684\u6bd4 NTT \u8fd8\u5feb\uff09\uff0c\u4f46\u662f FFT \u4f1a\u7206\u7cbe\u5ea6\uff08\u81f3\u5c11\u6211\u7206\u4e86\u7cbe\u5ea6\uff09\uff0c\u5efa\u8bae\u66b4\u529b\u5377\u79ef\n\n\u6211\u7684\u4ee3\u7801\u4e2d\u6709\u4e09\u79cd\u5377\u79ef\u65b9\u6cd5\u7684\u5b9e\u73b0\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u8003\n\n1. NTT\n\n```cpp\n#include <bits/stdc++.h>\n#define double long double\n#define CIOS ios::sync_with_stdio(false);\n#define For(i, a, b) for(register int i = a; i <= b; i++)\n#define Rof(i, a, b) for(register int i = a; i >= b; i--)\n#define DEBUG(x) cerr << \"DEBUG\" << x << \" >>> \";\nusing namespace std;\n\ntypedef unsigned long long ull;\ntypedef long long ll;\n\ntemplate <typename T>\ninline void read(T &f) {\n    f = 0; T fu = 1; char c = getchar();\n    while(c < '0' || c > '9') {if(c == '-') fu = -1; c = getchar();}\n    while(c >= '0' && c <= '9') {f = (f << 3) + (f << 1) + (c & 15); c = getchar();}\n    f *= fu;\n}\n\ntemplate <typename T>\nvoid print(T x) {\n    if(x < 0) putchar('-'), x = -x;\n    if(x < 10) putchar(x + 48);\n    else print(x / 10), putchar(x % 10 + 48);\n}\n\ntemplate <typename T>\nvoid print(T x, char t) {\n    print(x); putchar(t);\n}\n\nconst int N = 405, mod = 20170408;\ninline int mul(int x, int y) { return (int)(1ll * x * y % (ll)mod); }\n\nint r[N], n, m, p, len = 1, tot = 0;\nll A[N], B[N], C[N], ans[N], a[N], b[N], c[N], d[N];\n\nconst int P[3] = {469762049, 998244353, 167772161}, G = 3, Gi[3] = {P[0] / G + 1, P[1] / G + 1, P[2] / G + 1};\n\nll fpow(ll x, ll y, ll p) {\n    ll ans = 1;\n    while(y) {\n        if(y & 1) ans = ans * x % p;\n        y >>= 1; x = x * x % p;\n    }\n    return ans;\n}\n\nvoid NTT(ll *a, int tp, int t) {\n    for(register int i = 1; i < len; i++) if(i < r[i]) swap(a[i], a[r[i]]);\n    for(register int mid = 1; mid < len; mid <<= 1) {\n        ll wn = fpow(tp == 1 ? G : Gi[t], (P[t] - 1) / (mid << 1), P[t]);\n        for(register int i = 0; i < len; i += (mid << 1)) {\n            ll w = 1;\n            for(register int j = 0; j < mid; j++, w = w * wn % P[t]) {\n                ll x = a[i + j], y = a[i + j + mid] * w % P[t];\n                a[i + j] = (x + y) % P[t]; a[i + j + mid] = (x - y + P[t]) % P[t];\n            }\n        }\n    }\n    if(tp == -1) {\n        ll inv = fpow(len, P[t] - 2, P[t]);\n        for(register int i = 0; i < len; i++) a[i] = a[i] * inv % P[t];\n    }\n}\n\nll inv(ll x, ll y) { return fpow(x, y - 2, y); }\n\nll times(ll x, ll y, ll p) {\n    ll ans = 0;\n    while(y) {\n        if(y & 1) ans = (ans + x) % p;\n        y >>= 1; x = (x + x) % p;\n    }\n    return ans;\n}\n\nvoid mul(ll *A, ll *B, ll *ans) {\n    for(register int i = 1; i <= p; i++) A[i - 1] = A[i], B[i - 1] = B[i]; A[p] = B[p] = 0;\n    len = 1; tot = 0;\n    while(len <= (p << 1)) len <<= 1, tot++;\n    for(register int i = 1; i < len; i++) r[i] = (r[i >> 1] >> 1) | ((i & 1) << (tot - 1));\n    memcpy(a, A, sizeof(a)); memcpy(b, A, sizeof(b)); memcpy(c, A, sizeof(c));\n    memcpy(d, B, sizeof(d)); NTT(a, 1, 0); NTT(d, 1, 0); for(register int i = 0; i < len; i++) a[i] = a[i] * d[i] % P[0]; NTT(a, -1, 0);\n    memcpy(d, B, sizeof(d)); NTT(b, 1, 1); NTT(d, 1, 1); for(register int i = 0; i < len; i++) b[i] = b[i] * d[i] % P[1]; NTT(b, -1, 1);\n    memcpy(d, B, sizeof(d)); NTT(c, 1, 2); NTT(d, 1, 2); for(register int i = 0; i < len; i++) c[i] = c[i] * d[i] % P[2]; NTT(c, -1, 2);\n    for(register int i = 0; i <= (p << 1); i++) {\n        ll p = 1ll * P[0] * P[1];\n        ll s = times(a[i], times(P[1], inv(P[1], P[0]), p), p) + times(b[i], times(P[0], inv(P[0], P[1]), p), p); s %= p;\n        ll k = (c[i] % P[2] - s % P[2] + P[2]) % P[2] * inv(p % P[2], P[2]) % P[2];\n        ll Ans = (s + (k * P[0] % mod * P[1] % mod)) % mod;\n        ans[i + 1] = Ans;\n    }\n    for(register int i = 1; i <= p; i++) ans[i] = (ans[i] + ans[i + p]) % mod, ans[i + p] = 0;\n    for(register int i = p; i >= 1; i--) A[i] = A[i - 1], B[i] = B[i - 1]; A[0] = B[0] = 0;\n}\n\nint fpow(int x, int y) {\n    int ans = 1;\n    while(y) {\n        if(y & 1) ans = mul(ans, x);\n        y >>= 1; x = mul(x, x);\n    }\n    return ans;\n}\n\nint pri[5000000], plen;\nbool isp[20000005];\n\nvoid init_pri(int n, ll *a) {\n    isp[1] = 1;\n    for(register int i = 2; i <= n; i++) {\n        if(!isp[i]) { pri[++plen] = i; }\n        for(register int j = 1; j <= plen && i * pri[j] <= n; j++) {\n            isp[i * pri[j]] = 1;\n            if(i % pri[j] == 0) break;\n        }\n    }\n    for(register int i = 1; i <= p; i++) a[i] = 0;\n    for(register int i = 1; i <= n; i++) if(isp[i]) ++a[i % p + 1];\n}\n\nint main() {\n    read(n); read(m); read(p); init_pri(m, A); int t = n;\n    ans[1] = 1;\n    while(n) {\n        if(n & 1) {\n            memcpy(B, ans, sizeof(B));\n            mul(A, B, ans);\n        }\n        n >>= 1;\n        memcpy(B, A, sizeof(B));\n        memcpy(C, A, sizeof(C));\n        mul(B, C, A);\n    }\n    int fir = ans[1];\n    memset(ans, 0, sizeof(ans));\n    memset(A, 0, sizeof(A));\n    for(register int i = 1; i <= m; i++) ++A[i % p + 1];\n    ans[1] = 1; n = t;\n    while(n) {\n        if(n & 1) {\n            memcpy(B, ans, sizeof(B));\n            mul(A, B, ans);\n        }\n        n >>= 1;\n        memcpy(B, A, sizeof(B));\n        memcpy(C, A, sizeof(C));\n        mul(B, C, A);\n    }\n    cout << (ans[1] - fir + mod) % mod << endl;\n    return 0;\n}\n```\n\n2.FFT & \u66b4\u529b\u5377\u79ef\uff08\u5f53\u7136 FFT \u662f\u9519\u8bef\u7684\uff09\n\n```cpp\n#include <bits/stdc++.h>\n#define CIOS ios::sync_with_stdio(false);\n#define For(i, a, b) for(register int i = a; i <= b; i++)\n#define Rof(i, a, b) for(register int i = a; i >= b; i--)\n#define DEBUG(x) cerr << \"DEBUG\" << x << \" >>> \";\nusing namespace std;\n\ntypedef unsigned long long ull;\ntypedef long long ll;\n\ntemplate <typename T>\ninline void read(T &f) {\n    f = 0; T fu = 1; char c = getchar();\n    while(c < '0' || c > '9') {if(c == '-') fu = -1; c = getchar();}\n    while(c >= '0' && c <= '9') {f = (f << 3) + (f << 1) + (c & 15); c = getchar();}\n    f *= fu;\n}\n\ntemplate <typename T>\nvoid print(T x) {\n    if(x < 0) putchar('-'), x = -x;\n    if(x < 10) putchar(x + 48);\n    else print(x / 10), putchar(x % 10 + 48);\n}\n\ntemplate <typename T>\nvoid print(T x, char t) {\n    print(x); putchar(t);\n}\n\nconst int N = 405, P = 20170408;\ninline int mul(int x, int y) { return (int)(1ll * x * y % (ll)P); }\n\n/*const double PI = acos(-1.0);\n\nstruct cp {\n    double x, y;\n    cp (double xx = 0, double yy = 0) {\n        x = xx; y = yy;\n    }\n}a[N], b[N];\n\ncp operator + (const cp a, const cp b) { return cp(a.x + b.x, a.y + b.y); }\ncp operator - (const cp a, const cp b) { return cp(a.x - b.x, a.y - b.y); }\ncp operator * (const cp a, const cp b) { return cp(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x); }*/\n\nint r[N], n, m, p, len = 1, tot = 0;\nint A[N], B[N], C[N], ans[N];\n\n/*void FFT(cp *a, int d) {\n    for(register int i = 1; i < len; i++) if(i < r[i]) swap(a[i], a[r[i]]);\n    for(register int mid = 1; mid < len; mid <<= 1) {\n        cp wn = cp(cos(PI / mid), sin(PI / mid) * d);\n        for(register int i = 0; i < len; i += (mid << 1)) {\n            cp w = cp(1.0, 0.0);\n            for(register int j = 0; j < mid; j++, w = w * wn) {\n                cp x = a[i + j], y = a[i + j + mid] * w;\n                a[i + j] = x + y; a[i + j + mid] = x - y;\n            }\n        }\n    }\n}*/\n\n/*void mul(int *A, int *B, int *ans) {\n    len = 1, tot = 0;\n    while(len <= (p << 1)) len <<= 1, tot++;\n    for(register int i = 1; i <= len; i++) r[i] = (r[i >> 1] >> 1) | ((i & 1) << (tot - 1));\n    for(register int i = 1; i <= len; i++) a[i - 1] = cp(A[i], 0), b[i - 1] = cp(B[i], 0);\n    FFT(a, 1); FFT(b, 1);\n    for(register int i = 0; i < len; i++) a[i] = a[i] * b[i];\n    FFT(a, -1);\n    for(register int i = 1; i <= len; i++) ans[i] = (int)((ll)(a[i - 1].x / (double)len + 0.5) % (ll)P);\n    for(register int i = 1; i <= p; i++) ans[i] = (ans[i] + ans[i + p]) % P, ans[i + p] = 0;\n}*/\n\n/*void mul(int *A, int *B, int *ans) {\n    for(register int i = 1; i <= p << 1; i++) A[i - 1] = A[i], B[i - 1] = B[i], ans[i] = 0; ans[0] = 0;\n    for(register int i = 0; i < p; i++) {\n        for(register int j = 0; j < p; j++) {\n            ans[i + j] += mul(A[i], B[j]);\n            if(ans[i + j] >= P) ans[i + j] -= P;\n        }\n    }\n    for(register int i = p << 1; i >= 1; i--) ans[i] = ans[i - 1], A[i] = A[i - 1], B[i] = B[i - 1]; A[0] = B[0] = 0;\n    for(register int i = 1; i <= p; i++) ans[i] = (ans[i] + ans[i + p]) % P, ans[i + p] = 0;\n}*/\n\nvoid mul(int *A, int *B, int *ans) {\n    memset(ans, 0, (N + 1) * 4);\n    for(register int i = 1; i <= p; i++) {\n        for(register int j = 1; j <= p; j++) {\n            ans[i + j - 1] += mul(A[i], B[j]);\n            ans[i + j - 1] %= P;\n        }\n    }\n    for(register int i = 1; i <= p; i++) ans[i] = (ans[i] + ans[i + p]) % P, ans[i + p] = 0;\n}\n\nint fpow(int x, int y) {\n    int ans = 1;\n    while(y) {\n        if(y & 1) ans = mul(ans, x);\n        y >>= 1; x = mul(x, x);\n    }\n    return ans;\n}\n\nint pri[5000000], plen;\nbool isp[20000005];\n\nvoid init_pri(int n, int *a) {\n    isp[1] = 1;\n    for(register int i = 2; i <= n; i++) {\n        if(!isp[i]) { pri[++plen] = i; }\n        for(register int j = 1; j <= plen && i * pri[j] <= n; j++) {\n            isp[i * pri[j]] = 1;\n            if(i % pri[j] == 0) break;\n        }\n    }\n    for(register int i = 1; i <= p; i++) a[i] = 0;\n    for(register int i = 1; i <= n; i++) if(isp[i]) ++a[i % p + 1];\n}\n\nint main() {\n    read(n); read(m); read(p); init_pri(m, A); int t = n;\n    ans[1] = 1;\n    while(n) {\n        if(n & 1) {\n            memcpy(B, ans, sizeof(B));\n            mul(A, B, ans);\n        }\n        n >>= 1;\n        memcpy(B, A, sizeof(B));\n        memcpy(C, A, sizeof(C));\n        mul(B, C, A);\n    }\n    int fir = ans[1];\n    memset(ans, 0, sizeof(ans));\n    memset(A, 0, sizeof(A));\n    for(register int i = 1; i <= m; i++) ++A[i % p + 1];\n    ans[1] = 1; n = t;\n    while(n) {\n        if(n & 1) {\n            memcpy(B, ans, sizeof(B));\n            mul(A, B, ans);\n        }\n        n >>= 1;\n        memcpy(B, A, sizeof(B));\n        memcpy(C, A, sizeof(C));\n        mul(B, C, A);\n    }\n    cout << (ans[1] - fir + P) % P << endl;\n    return 0;\n}\n```",
        "postTime": 1541325804,
        "uid": 51815,
        "name": "LJC00118",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3702 \u3010[SDOI2017]\u5e8f\u5217\u8ba1\u6570\u3011"
    },
    {
        "content": "\u751f\u6210\u51fd\u6570 \u5feb\u901f\u5e42\n\n\u9996\u5148\u8fd9\u9898\u663e\u7136\u8865\u96c6\u8f6c\u5316\uff0c\u5c31\u662f\u7528\u5168\u90e8\u65b9\u6848\u51cf\u53bb\u4e0d\u542b\u4efb\u4f55\u8d28\u6570\u7684\u65b9\u6848\u3002\n\n\u7136\u540e\u600e\u4e48\u505a\u5462?\n\n\u8003\u8651m\u6bd4\u8f83\u5c0f\uff0c\u6211\u4eec\u80fd\u5927\u529b\u628a<=m\u7684\u8d28\u6570\u5168\u90fd\u7b5b\u51fa\u6765\u3002\n\n\u53d1\u73b0n\u5f88\u5927\uff0c\u8981\u4e48\u500d\u589e\u8981\u4e48\u5feb\u901f\u5e42......\n\n\u53d1\u73b0p\u76f8\u5f53\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u80fd\u5728mod p\u7684\u540c\u4f59\u7cfb\u4e0b\u505a\u554a\u3002\n\n\n\u4e00\u770b\u5230\u540c\u4f59\u7cfb\u4e0b\u6c42\u65b9\u6848\u6570\u7acb\u523b\u60f3\u5230\u5377\u79ef\u548c\u751f\u6210\u51fd\u6570......\n\n\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u591a\u9879\u5f0ff(x)\uff0c\u5176\u4e2dx^i\u7684\u7cfb\u6570\u4e3aa\u4e2a\u6570\u7684\u5e8f\u5217mod p\u4e3ai\u7684\u65b9\u6848\u6570(a\u4e3a\u6211\u4eec\u5f15\u5165\u7684\u53d8\u91cf)\u3002\n\n\u540c\u65f6\u6211\u4eec\u6709\u53e6\u4e00\u4e2a\u591a\u9879\u5f0fg(x),\u5176\u4e2dx^i\u7684\u7cfb\u6570\u4e3ab\u4e2a\u6570\u7684\u5e8f\u5217mod p\u4e3ai\u7684\u65b9\u6848\u6570(b\u4e3a\u6211\u4eec\u5f15\u5165\u7684\u53d8\u91cf)\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5982\u679c\u8ba9f(x)\u548cg(x)\u505a\u5377\u79ef\u7684\u8bdd\uff0c\u65b0\u7684\u591a\u9879\u5f0fx^i\u7684\u7cfb\u6570\u5c31\u662f(a+b)\u4e2a\u6570\u7684\u5e8f\u5217mod p\u4e3ai\u7684\u65b9\u6848\u6570\u7684\u8bf4\u3002\n\n\u8fd9\u5c31\u662f\u751f\u6210\u51fd\u6570\u4e86\u3002\n\n\u56de\u5230\u8fd9\u4e2a\u9898\uff0c\u6211\u4eec\u5148\u521d\u59cb\u5316\u591a\u9879\u5f0ff(x)\uff0c\u4ee4x^i\u7684\u7cfb\u6570\u4e3a\u4e3a1\u4e2a\u6570mod p\u4e3ai\u7684\u65b9\u6848\u6570\u3002\n\n\u7136\u540e\u6211\u4eec\u6c42\u51fa\u8fd9\u4e2a\u591a\u9879\u5f0f\u7684n\u6b21\u65b9\uff0c\u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\u7b54\u6848\u4e86\u3002\n\n\u53d1\u73b0\u8fd9\u9053\u9898\u7684p\u5f88\u5c0f\uff0c\u6211\u4eec\u8fdeFFT\u90fd\u4e0d\u7528\uff0c\u76f4\u63a5\u7528\u4e00\u4e2a\u591a\u9879\u5f0f\u7c7b\u66b4\u529b\u5feb\u901f\u5e42\u5c31\u884c\u4e86\u3002\u590d\u6742\u5ea6O(m+p^2logn)\uff0c\u8dd1\u7684\u98de\u8d77\u3002\n\n\u8bdd\u8bf4\u4e3a\u4ec0\u4e48p\u624d100\u554a\uff0c\u5982\u679c\u4fee\u6539\u4e00\u4e0b\u6a21\u6570\u7136\u540eNTT\u7684\u8bdd\uff0c\u53ef\u4ee5\u505a\u5230p\u4e3a1e5\u7ea7\u522b\uff0cn\u4e3a1e18\u7ea7\u522b\u7684\u3002\n\n\u4ee3\u7801:\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define debug cout\ntypedef long long int lli;\nusing namespace std;\nconst int maxn=1e2+1e1,maxl=2e7+1e2,lim=2e7;\nconst int mod=20170408;\n\nbool vis[maxl];\nint p,m;\n\nstruct Poly {\n    lli dat[maxn];\n    Poly() {\n        memset(dat,0,sizeof(dat));\n    }\n    lli& operator [] (const int &x) {\n        return dat[x];\n    }\n    const lli& operator [] (const int &x) const {\n        return dat[x];\n    }\n    friend Poly operator * (const Poly &a,const Poly &b) {\n        Poly ret;\n        for(int i=0;i<p;i++) for(int j=0;j<p;j++) {\n            ( ret[(i+j)%p] += a[i] * b[j] % mod ) %= mod;\n        }\n        return ret;\n    }\n}full,oly;\n\ninline void sieve() {\n    static int prime[maxl],cnt;\n    vis[1] = 1;\n    for(int i=2;i<=m;i++) {\n        if( !vis[i] ) prime[++cnt] = i;\n        for(int j=1;j<=cnt&&(lli)i*prime[j]<=m;j++) {\n            vis[i*prime[j]] = 1;\n            if( ! ( i % prime[j] ) ) break;\n        }\n    }\n}\n\ninline void init() {\n    for(int i=1;i<=m;i++) {\n        full[i%p]++;\n        if( vis[i] ) oly[i%p]++;\n    }\n}\n\ninline Poly fastpow(Poly base,int tim) {\n    Poly ret = base; --tim;\n    while( tim ) {\n        if( tim & 1 ) ret = ret * base;\n        if( tim >>= 1 ) base = base * base;\n    }\n    return ret;\n}\n\nint main() {\n    static int n;\n    static lli ans;\n    scanf(\"%d%d%d\",&n,&m,&p) , sieve();\n    init();\n    full = fastpow(full,n) , oly = fastpow(oly,n);\n    ans = ( full[0] - oly[0] + mod ) % mod;\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n\n```\n\n\n\n",
        "postTime": 1520844163,
        "uid": 31907,
        "name": "cmd2001",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3702 \u3010[SDOI2017]\u5e8f\u5217\u8ba1\u6570\u3011"
    },
    {
        "content": "\u4e3a\u5565\u4f60\u4eec\u90fd\u5199\u5f97\u90a3\u4e48\u590d\u6742\uff1f\u5176\u5b9e\u53d1\u73b0\u5bb9\u65a5+DP\u5c31\u53ef\u4ee5\u6bd4\u8f83\u8f7b\u677e\u7684\u505a\u51fa\u6765\u4e86\u3002\u6211\u4eec\u53d1\u73b0\u5148\u7b97\u548c\u4e3a$p$\u7684\u500d\u6570\u7684\u4efb\u610f\u65b9\u6848\u6570\uff0c\u7136\u540e\u518d\u51cf\u53bb\u53ea\u7528\u8d28\u6570\u7684\u65b9\u6848\u6570\u5c31\u662f\u7b54\u6848\u3002\n\n### \u7b2c\u4e00\u90e8\u5206\n\n\u7b2c\u4e00\u90e8\u5206\u7684\u5f0f\u5b50\u5e76\u4e0d\u96be\uff0c\u8bbe\u7f6e$dp[i][j]$\u4e3a\u524d$i$\u4e2a\u6570\u7684\u548c\u5728\u6a21\u610f\u4e49\u4e0b\u4e3a$j$\u7684\u65b9\u6848\u6570\uff0c\u90a3\u4e48\u8f6c\u79fb\u5982\u4e0b\uff1a\n$$\ndp[i][j] = \\sum_{k = 0}^{p - 1} dp[i - 1][(j - k) \\bmod p] \\times c_k\n$$\n\u5176\u4e2d$c_k$\u5c31\u662f\u5728$m$\u7684\u503c\u57df\u5185\u9009\u6a21\u610f\u4e49\u4e0b\u4e3a$k$\u7684\u65b9\u6848\u6570\u3002\u6839\u636e\u9898\u610f\uff0c$c_k$\u4e5f\u6bd4\u8f83\u663e\u7136\uff1a\n$$\nc_k = \\begin{cases} \\lfloor \\frac{m}{p} \\rfloor, k = 0 \\\\ \\lfloor \\frac{m - k}{p} \\rfloor + 1, k < m \\\\ 1, k = m \\\\ 0, k > m \\end{cases}\n$$\n\u56e0\u4e3a\u5e8f\u5217\u957f\u5ea6\u5f88\u957f\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6784\u5efa\u77e9\u9635\u6765\u4f18\u5316\u4e4b\uff1a\n$$ \\begin{aligned} dp'[0][j] &= \\sum_{k = 0}^{p - 1} dp[0][j - k \\bmod p] \\times c_k \\\\ &= \\sum_{k = 0}^{p - 1} dp[0][k] \\times c_{(j - k \\bmod p)} \\end{aligned}\n$$\n\u518d\u53c2\u8003\u77e9\u9635\u4e58\u6cd5\u7684\u610f\u4e49\uff1a\n$$\nA[i][j] = \\sum_{k = 0}^{p - 1} B[i][k] \\times C[k][j]\n$$\n\u90a3\u4e48\u6211\u4eec\u7684\u77e9\u9635\u5176\u5b9e\u5c31\u5f88\u597d\u6784\u9020\uff1a\n$$\ntrans[k][j] = c_{(j - k \\bmod p)}\n$$\n\n### \u7b2c\u4e8c\u90e8\u5206\n\n\u7b2c\u4e8c\u90e8\u5206\u5dee\u4e0d\u591a\uff0c\u6211\u4eec\u9700\u8981\u7ebf\u6027\u7b5b\u628a$m$\u5185\u7684\u8d28\u6570\u7b5b\u51fa\u6765\uff0c\u7136\u540e\u5728\u6876\u91cc\u8ba1\u6570\uff1a$bucket[i \\bmod p]++$\u3002\u4e4b\u540e\u5728$trans$\u77e9\u9635\u5185\u51cf\u53bb\u8fd9\u4e9b\u8d28\u6570\u7684\u65b9\u6848\u6570\uff0c\u505a\u4e00\u904d\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n```cpp\n// P3702.cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int MAX_N = 110, MAX_M = 2e7 + 200, mod = 20170408;\n\nint primes[MAX_M], tot, n, m, p, table[MAX_N];\nbool vis[MAX_M];\n\nstruct matrix\n{\n    int mat[MAX_N][MAX_N];\n\n    matrix() { memset(mat, 0, sizeof(mat)); }\n\n    int *operator[](const int &rhs) { return mat[rhs]; }\n\n    matrix operator*(const matrix &rhs)\n    {\n        matrix ret;\n        for (int i = 0; i < p; i++)\n            for (int j = 0; j < p; j++)\n                for (int k = 0; k < p; k++)\n                    ret[i][j] = (1LL * ret[i][j] + 1LL * mat[i][k] * rhs.mat[k][j] % mod) % mod;\n        return ret;\n    }\n\n    matrix operator^(const int &rhs)\n    {\n        int tim = rhs;\n        matrix ret, bas = *this;\n        for (int i = 0; i < p; i++)\n            ret[i][i] = 1;\n        while (tim)\n        {\n            if (tim & 1)\n                ret = ret * bas;\n            bas = bas * bas;\n            tim >>= 1;\n        }\n        return ret;\n    }\n} dp, trans;\n\nvoid sieve()\n{\n    for (int i = 2; i <= m; i++)\n    {\n        if (!vis[i])\n            primes[++tot] = i;\n        for (int j = 1; j <= tot && 1LL * i * primes[j] <= m; j++)\n        {\n            vis[i * primes[j]] = true;\n            if (i % primes[j] == 0)\n                break;\n        }\n    }\n    for (int i = 1; i <= tot; i++)\n        table[primes[i] % p]++;\n}\n\nint main()\n{\n    scanf(\"%d%d%d\", &n, &m, &p);\n    sieve();\n    for (int c = 0; c < p; c++)\n        for (int b = 0; b < p; b++)\n        {\n            int delta = (c - b + p) % p;\n            if (delta == 0)\n                trans[b][c] = m / p;\n            else if (delta < m)\n                trans[b][c] = int((m - delta) / p) + 1;\n            else if (delta == m)\n                trans[b][c] = 1;\n            else\n                trans[b][c] = 0;\n            trans[b][c] %= mod;\n        }\n    dp[0][0] = 1, dp = dp * (trans ^ n);\n    int ans = dp[0][0];\n    memset(dp.mat, 0, sizeof(dp.mat));\n    memset(trans.mat, 0, sizeof(trans.mat));\n    for (int c = 0; c < p; c++)\n        for (int b = 0; b < p; b++)\n        {\n            int delta = (c - b + p) % p;\n            if (delta == 0)\n                trans[b][c] = m / p;\n            else if (delta < m)\n                trans[b][c] = int((m - delta) / p) + 1;\n            else if (delta == m)\n                trans[b][c] = 1;\n            else\n                trans[b][c] = 0;\n            trans[b][c] = (trans[b][c] + mod - table[delta]) % mod;\n        }\n    dp[0][0] = 1, dp = dp * (trans ^ n);\n    ans = (ans + mod - dp[0][0]) % mod;\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1577274468,
        "uid": 68733,
        "name": "kal0rona",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3702 \u3010[SDOI2017]\u5e8f\u5217\u8ba1\u6570\u3011"
    },
    {
        "content": "\u8bbe\u57281~m\u7684\u6570\u4e2d\uff0c\u6a21p\u4e3a0,1,2,...,p-1\u7684\u6570\u5206\u522b\u6709cnt[0],cnt[1],cnt[2],...,cnt[p-1]\uff0c\u6a21p\u4e3a0,1,2,...,p-1\u7684\u975e\u7d20\u6570\u5206\u522b\u6709cnt0[0],cnt0[1],cnt0[2],...,cnt0[p-1]\u4e2a\uff08\u53ef\u7528\u7b5b\u6cd5\u6c42\u51fa\uff09\uff0cdp[i][j]\u8868\u793a\u5230\u5e8f\u5217\u7684\u7b2ci\u4e2a\u6570\uff0c\u548c\u6a21p\u4e3aj\u7684\u65b9\u6848\u6570\n\ndp0[i][j]\u8868\u793a\u5230\u5e8f\u5217\u7684\u7b2ci\u4e2a\u6570\uff0c\u548c\u6a21p\u4e3aj\u5e76\u4e14\u6ca1\u6709\u7d20\u6570\u7684\u65b9\u6848\u6570\uff0c\u4fbf\u5bb9\u6613\u5f97\u5230\n\ndp[i][j]=sigma(dp[i-1][(j-k+p)%p]\\*cnt[k]) dp0[i][j]=sigma(dp0[i-1][(j-k+p)%p]\\*cnt0[k])\u3002\n\n\u8fb9\u754c\u6761\u4ef6dp[1][j]=cnt[j] dp0[1][j]=cnt0[j]\uff0c\u6b64\u65f6\u7b54\u6848\u4e3adp[n][0]-dp0[n][0]\u3002\n\n\u8003\u8651\u5230n\u7684\u8303\u56f4\uff0c\u6839\u636e\u9012\u63a8\u5f0f\uff0c\u6784\u9020\u56db\u4e2a\u77e9\u9635\uff08P\u548cQ\u4e3ap\\*p\u77e9\u9635\uff0cV\u548cW\u4e3ap\\*1\u77e9\u9635\uff09\uff1a\n\n[  cnt[0] cnt[p-1] cnt[p-2] cnt[p-3] cnt[p-4] ... cnt[1]  ]\n\n[  cnt[1] cnt[0]    cnt[p-1] cnt[p-2] cnt[p-3] ... cnt[2]  ]\n\nP = [  cnt[2] cnt[1]    cnt[0]     cnt[p-1] cnt[p-2] ... cnt[3]  ]\n\n[ cnt[3] cnt[2]     cnt[1]    cnt[0]     cnt[p-1] ... cnt[4]  ]\n\n[ .............................                                                       ]\n\n[ cnt0[p-1] cnt0[p-2] cnt0[p-3] cnt0[p-4] cnt0[p-5] ... cnt0[0] ]\n\n\n\n[  cnt0[0] cnt0[p-1] cnt0[p-2] cnt0[p-3] cnt0[p-4] ... cnt0[1]  ]\n\n[  cnt0[1] cnt0[0]    cnt0[p-1] cnt0[p-2] cnt0[p-3] ... cnt0[2]  ]\n\nQ = [  cnt0[2] cnt0[1]    cnt0[0]     cnt0[p-1] cnt0[p-2] ... cnt0[3]  ]\n\n[ cnt0[3] cnt0[2]     cnt0[1]    cnt0[0]     cnt0[p-1] ... cnt0[4]  ]\n\n[ .............................                                                       ]\n\n[ cnt0[p-1] cnt0[p-2] cnt0[p-3] cnt0[p-4] cnt0[p-5] ... cnt0[0] ]\n\n\n\n[ cnt[0]   ]               [ cnt0[0]   ]\n\n[ cnt[1]   ]               [ cnt0[1]   ]\n\nV = [ cnt[2]   ]       W = [ cnt0[2]   ]\n\n[ ...          ]               [ ...            ]\n\n[ cnt[p-1] ]              [ cnt0[p-1] ]\n\n\u5219\u4ee4\u77e9\u9635F=P^(n-1)\\*V     G=Q^(n-1)\\*W\n\n\u6700\u540e\u7b54\u6848\u4e3aF[1][1]-G[1][1]\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int N = 105, CYX = 20170408, M = 2e7 + 5;\nstruct cyx {\n    int m, n, v[N][N];\n    cyx() {}\n    cyx(int _m, int _n) :\n        m(_m), n(_n) {memset(v, 0, sizeof(v));}\n    friend inline cyx operator * (cyx a, cyx b) {\n        cyx res = cyx(a.m, b.n);\n        int i, j, k;\n        for (i = 1; i <= res.m; i++)\n            for (j = 1; j <= res.n; j++)\n                for (k = 1; k <= a.n; k++)\n                    res.v[i][j] = (res.v[i][j] + 1ll * a.v[i][k]\n                        * b.v[k][j] % CYX) % CYX;\n        return res;\n    }\n    friend inline cyx operator ^ (cyx a, int b) {\n        cyx c = a, res = cyx(a.m, a.n);\n        int i, j; for (i = 1; i <= res.m; i++)\n            res.v[i][i] = 1;\n        while (b) {\n            if (b & 1) res = res * c;\n            c = c * c;\n            b >>= 1;\n        }\n        return res;\n    }\n} P, Q, V, W;\nint n0, m0, p0, cnt[N], cnt0[N];\nbool prime[M];\ninline int read() {\n    int res = 0; bool bo = 0; char c;\n    while (((c = getchar()) < '0' || c > '9') && c != '-');\n    if (c == '-') bo = 1; else res = c - 48;\n    while ((c = getchar()) >= '0' && c <= '9')\n        res = (res << 3) + (res << 1) + (c - 48);\n    return bo ? ~res + 1 : res;\n}\nint main() {\n    int i, j; n0 = read(); m0 = read(); p0 = read();\n    for (i = 0; i < p0; i++) cnt[i] = m0 / p0;\n    for (i = 1; i <= m0 % p0; i++) cnt[i]++;\n    P = cyx(p0, p0); P.v[1][1] = cnt[0];\n    for (i = 2; i <= p0; i++) P.v[1][i] = cnt[p0 - i + 1];\n    for (i = 2; i <= p0; i++) {\n        for (j = 2; j <= p0; j++)\n            P.v[i][j] = P.v[i - 1][j - 1];\n        P.v[i][1] = P.v[i - 1][p0];\n    }\n    memset(prime, true, sizeof(prime));\n    prime[0] = prime[1] = 0;\n    for (i = 2; i <= m0; i++) {\n        if (!prime[i]) continue;\n        if (i * i > m0) break;\n        for (j = i * i; j <= m0; j += i)\n            prime[j] = 0;\n    }\n    for (i = 1; i <= m0; i++)\n        if (!prime[i]) cnt0[i % p0]++;\n    Q = cyx(p0, p0); Q.v[1][1] = cnt0[0];\n    for (i = 2; i <= p0; i++) Q.v[1][i] = cnt0[p0 - i + 1];\n    for (i = 2; i <= p0; i++) {\n        for (j = 2; j <= p0; j++)\n            Q.v[i][j] = Q.v[i - 1][j - 1];\n        Q.v[i][1] = Q.v[i - 1][p0];\n    }\n    for (i = 1; i <= p0; i++) for (j = 1; j <= p0; j++)\n        P.v[i][j] %= CYX, Q.v[i][j] %= CYX;\n    V = cyx(p0, 1); W = cyx(p0, 1);\n    for (i = 1; i <= p0; i++) V.v[i][1] = cnt[i - 1] % CYX;\n    for (i = 1; i <= p0; i++) W.v[i][1] = cnt0[i - 1] % CYX;\n    P = (P ^ n0 - 1) * V; Q = (Q ^ n0 - 1) * W;\n    printf(\"%d\\n\", (P.v[1][1] - Q.v[1][1] + CYX) % CYX);\n    return 0;\n}\n```",
        "postTime": 1499782895,
        "uid": 29936,
        "name": "xyz32768",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3702 \u3010[SDOI2017]\u5e8f\u5217\u8ba1\u6570\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e0b\u77e9\u9635\u5feb\u901f\u5e42\u7684\u8fdb\u9636\u6280\u5de7\u2014\u2014\u53cc\u77e9\u9635\u5feb\u901f\u5e42\n\n\u77e9\u9635\u5feb\u901f\u5e42\u4f18\u5316dp\u8f6c\u79fb\u662f\u4e00\u4e2a\u975e\u5e38\u66b4\u529b\u7684\u624b\u6bb5\uff0c\u901a\u8fc7\u77e9\u9635\u5feb\u901f\u5e42\u6211\u4eec\u53ef\u4ee5\u5c06\u539f\u6765$O(NM)$\u7684\u590d\u6742\u5ea6\u504f\u79fb\u81f3$O(M^{3}logN)$\u5728M\u548cN\u5dee\u8ddd\u751a\u5927\u7684\u60c5\u51b5\u4e0b\u771f\u7684\u662f\u518d\u597d\u4e0d\u8fc7\u4e86\n\n## \u524d\u7f6e\u829d\u58eb\uff1a\u77e9\u9635\u5feb\u901f\u5e42\u4f18\u5316dp\n\n\u8fd9\u91cc\u4e3a\u4e86\u907f\u514d\u840c\u65b0\u4e0d\u61c2\u77e9\u9635\u5feb\u901f\u5e42\u6240\u4ee5\u5148\u8bb2\u4e0b\u4f18\u5316\u539f\u7406\u548c\u6784\u9020\u6ce8\u610f\u4e8b\u9879\n\n~~(\u719f\u7ec3\u7684\u8bf8\u4f4d\u53ef\u4ee5\u81ea\u884c\u8df3\u8fc7)~~\n\n(\u5728\u6b64\u4e4b\u524d\u5148\u767e\u5ea6\u4e0b\u77e9\u9635\u548c\u77e9\u9635\u4e58\u6cd5\u7684\u5b9a\u4e49)\n\n\u9996\u5148\u6709\u4e9b\u65f6\u5019\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u4e8c\u7ef4\u7684\u8ba1\u6570dp\uff0c\u800c\u4e14\u53ef\u4ee5\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\n\n\u90a3\u4e48\u6211\u4eec\u7684dp\u65b9\u7a0b\u5982\u679c\u6070\u597d\u957f\u8fd9\u6837\uff0c\u5176\u4e2d$Tr_{i,j}$\u8868\u793ai\u72b6\u6001\u662f\u5426\u53ef\u4ee5\u8f6c\u79fb\u5230j\u7684\u8bdd\u3002\n\n## $Dp_{i,j}=\\sum_{k=0}^{n}Dp_{i-1,k}Tr_{k,j}$\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u548c\u77e9\u9635\u4e58\u6cd5(\u5047\u8bbe$a\u00d7b=c$)\u7684\u5f0f\u5b50\u975e\u5e38\u50cf\n\n## $C_{i,j}=\\sum_{k=0}^{n}A_{i,k}B_{k,j}$\n\n\u975e\u5e38\u50cf\uff0c\u66f4\u51c6\u786e\u7684\u8bf4\uff0c\u5982\u679c\u628adp\u6570\u7ec4\u7684\u67d0\u4e00\u884c\u770b\u505a\u65b9\u9635\u7684\u7b2c\u4e00\u884c(\u6bd5\u7adf\u6ca1\u5565\u4eba\u4f1a\u8ba4\u771f\u7684\u5199\u975e\u65b9\u9635\u4e58\u6cd5)\u7684\u8bdd\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5217\u51fa\u8fd9\u6837\u7684\u77e9\u9635\u4e58\u6cd5\u5f0f\u5b50$Dp=Dp\u00d7Tr$\u5c31\u53ef\u4ee5\u5b8c\u6210\u4e00\u6b21\u8f6c\u79fb\n\n\u90a3\u4e48\u5982\u679c\u6211\u4eec\u8fdb\u884c\u4e86n\u6b21\u8f6c\u79fb\u7684\u8bdd\uff0c\u5c31\u76f8\u5f53\u4e8e$Dp=Dp\u00d7Tr^{n}$\n\n\u7136\u540e\u6839\u636e\u77e9\u9635\u4e58\u6cd5\u7684\u7ed3\u5408\u5f8b\uff0c$Tr^{n}$\u53ef\u4ee5\u5feb\u901f\u5e42\u8ba1\u7b97\n\n\u8fd9\u4e2a\u5c31\u662f\u77e9\u9635\u5feb\u901f\u5e42\u7684\u539f\u7406\n\n\u901a\u8fc7\u4e0a\u8ff0\u7684\u63a8\u5bfc\u4e0d\u96be\u53d1\u73b0\uff0c**\u5728\u4e00\u6b21\u8f6c\u79fb\u4e2d**:\u5982\u679c\u72b6\u6001i\u6709k\u79cd\u65b9\u5f0f\u8f6c\u79fb\u5230\u72b6\u6001j\u7684\u8bdd\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0$Tr_{i,j}=k$\u56e0\u4e3atr\u6570\u7ec4\u6b64\u65f6\u66ff\u4ee3\u4e86\u4e00\u822cdp\u8f6c\u79fb\u8fc7\u7a0b\u7684\u5224\u5b9a\u662f\u4e0d\u662f\u5408\u6cd5\u8f6c\u79fb\u7684\u5224\u65ad\u8bed\u53e5\u7684\u4f5c\u7528\n\n\u5f53\u7136\u5728\u8ba1\u6570dp\u4e2d\u56e0\u4e3a\u4e58\u6cd5\u539f\u7406\u7684\u5173\u7cfb\uff0c\u6709\u4e9b\u65f6\u5019\u8f6c\u79fb\u9700\u8981\u4e58\u4e0a\u4e00\u5b9a\u7684\u7cfb\u6570\uff0c\u800c\u8fd9\u4e2a\u4f5c\u7528\u4e5f\u88abTr\u6570\u7ec4\u5305\u4e86\n\n\u521a\u624d\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u5c31\u662f\u5e0c\u671b\u5927\u5bb6\u610f\u8bc6\u5230\uff0c\u6211\u4eec\u7684\u8f6c\u79fb\u77e9\u9635\u662f**\u5355\u5411\u7684\u8f6c\u79fb\u5173\u7cfb**\uff0c\u5e76\u4e14\u6bcf\u6b21\u8f6c\u79fb\u4e25\u683c\u7684\u7531**\u884c\u72b6\u6001\u8f6c\u79fb\u5230\u5217\u72b6\u6001**\uff0c\u6784\u9020\u7684\u65f6\u5019\u8bf7\u52a1\u5fc5\u6ce8\u610f\n\n____________________\n\n# \u672c\u9898\u9898\u89e3\n\n\u8fd9\u9053\u9898\u5982\u679c\u662f\u53bb\u6389\u5fc5\u987b\u6709\u8d28\u6570\u7684\u9650\u5236\u7684\u8bdd\u662f\u975e\u5e38\u7b80\u5355\u7684\n\n\u76f4\u63a5$DP_{i,j}$\u8868\u793a\u957f\u5ea6\u4e3ai\u7684\u5e8f\u5217\uff0c\u4e14\u5e8f\u5217\u5404\u5143\u7d20\u548c%p\u4e3aj\u7684\u65b9\u6848\u6570\n\n\u7136\u540e\u663e\u7136\u5982\u679c\u72b6\u6001p1\u9700\u8981\u8f6c\u79fb\u5230p2\u7684\u8bdd\uff0c\u6709($m/p+(p2-p1)$\u662f\u5426\u5927\u4e8e$m\\%p$)\u79cd\u65b9\u6cd5\u6b64\u65f6\u76f4\u63a5\u77e9\u9635\u5feb\u901f\u5e42\u786c\u83bd\u8fc7\u53bb\u5c31\u53ef\u4ee5\u4e86,\u6700\u540e\u7684\u7b54\u6848\u5f53\u7136\u662f$Dp_{n,0}$\u4e86\n\n\u4f46\u662f\u95ee\u9898\u662f\u6211\u4eec\u6709\u8d28\u6570\u7684\u9650\u5236\u554a\u2026\u2026\uff0c\u6b64\u65f6\u7684\u60c5\u51b5\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u8fa3\u624b\n\n\u89c2\u5bdf\u5230m<=2\\*1e7\uff0c\u8fd9\u662f\u4ec0\u4e48\uff1f\u8fd9\u662f\u5361\u6389\u57c3\u5f0f\u7b5b\u653e\u6b27\u62c9\u7b5b\u8fc7\u7684\u6570\u636e\uff01(\u5c3d\u7ba1\u8fd9\u6837\u7684\u8bddO(NloglogN)\u548cO(N)\u4e5f\u4e0d\u662f\u7279\u522b\u597d\u5361)\n\n\u6240\u4ee5\u5148\u4e0a\u4e00\u4e2a\u6b27\u62c9\u7b5b\u7b5b\u51fa\u8d28\u6570\u518d\u8bf4\n\n\u7136\u540e\u6211\u4eec\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u8bbe$zhimo_{i}$\u8868\u793a%p\u4e3ai\uff0c\u4e14\u5c0f\u4e8e\u7b49\u4e8em\u7684\u8d28\u6570\u6709\u591a\u5c11\u4e2a\n\n\u6b64\u65f6\u6211\u4eec\u53d1\u73b0\uff0c\u5176\u5b9e\u53ea\u9700\u8981\u5728\u521a\u624d\u7684dp\u4e2d\u52a0\u4e00\u7ef4k\uff0c($k\u2208\\{0,1\\}$)\u8868\u793a\u6709\u65e0\u8d28\u6570\u5c31\u53ef\u4ee5\u8f6c\u79fb\u4e86\n\n\u600e\u4e48\u8f6c\u79fb\u5462\uff1f\u5982\u679c0\u72b6\u6001\u8981\u8f6c\u79fb\u52300\u72b6\u6001\u7684\u8bdd\uff0c\u90a3\u4e48\u5fc5\u987b\u653e\u975e\u8d28\u6570\uff0c\u5982\u679c1\u72b6\u6001\u9700\u8981\u8f6c\u79fb\u52301\u72b6\u6001\u7684\u8bdd\uff0c\u5f53\u7136\u662f\u968f\u4fbf\u653e\u4e86\uff0c\u5982\u679c\u662f0\u72b6\u6001\u8981\u8f6c\u79fb\u52301\u72b6\u6001\u7684\u8bdd\u662f\u53ea\u53ef\u4ee5\u653e\u8d28\u6570\u7684\uff0c\u5982\u679c\u662f1\u72b6\u6001\u8f6c\u79fb\u52300\u72b6\u6001\u7684\u8bdd\uff0c\u5f53\u7136\u662f\u4e0d\u53ef\u4ee5\u8f6c\u79fb\u7684\n\n\u6240\u4ee5\u5982\u679c(0\uff0cp1)\u8fd9\u4e2a\u72b6\u6001\u9700\u8981\u8f6c\u79fb\u5230(0,p2)\u7684\u8bdd\uff0c\u8f6c\u79fb\u7cfb\u6570\u5f53\u7136\u662f(%p=p2-p1\u7684\u6570-$zhimo_{p2-p1}$)\u5566\n\n\u540c\u7406\u8f6c\u79fb(0,p1)\u5230(1,p2)\u7684\u8bdd\uff0c\u8f6c\u79fb\u7cfb\u6570\u5c31\u662f$zhimo_{p2-p1}$\u4e86\n\n\u8f6c\u79fb(1,p1)\u5230(1,p2)\u7684\u8bdd\uff0c\u8f6c\u79fb\u7cfb\u6570\u548c\u6ca1\u6709\u8d28\u6570\u9650\u5236\u7684\u65f6\u5019\u4e00\u6837\n\n\u6b64\u65f6\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a200\u00d7200\u7684\u8f6c\u79fb\u77e9\u9635\n\n\u524d\u4e00\u534a\u662f$Dp_{0,j}$\u540e\u4e00\u534a\u662f$Dp_{1,j}$\u7136\u540e\u6309\u7167\u4e0a\u8ff0\u7684\u7b97\u6cd5\u8f6c\u79fb\u5c31\u53ef\u4ee5\u4e86\n\n\u5bf9\u4e86\u7531\u4e8e\u662f\u6b63\u6574\u6570\uff0c\u6240\u4ee5\u9700\u8981\u628a0\u51cf\u6389\n\n\u5c31\u9171\u2026\u2026\n\n\u4e0a\u4ee3\u7801~\n\n```C\n#include<cstdio>\n#include<algorithm>\nusing namespace std;const int M=2*1e7+10;const int N=210;typedef long long ll;const ll mod=20170408;\nint n;int m;int p;int zhi[M];int book[M];int ct;int t[N][N];int siz;\nint mo[N];int zmo[N];int nzmo[N];int del[N][N];\nstruct martix//\u77e9\u9635\u7c7b\n{\n\tll mp[N][N];\n\tvoid operator *=(const martix& b)\n\t{\n\t\tfor(int i=0;i<siz;i++){for(int j=0;j<siz;j++){t[i][j]=0;}}\n\t\tfor(int i=0;i<siz;i++)\n\t\t\tfor(int j=0;j<siz;j++)\n\t\t\t\tfor(int k=0;k<siz;k++)\n\t\t\t\t{t[i][j]=(t[i][j]+mp[i][k]*b.mp[k][j])%mod;}\n\t\tfor(int i=0;i<siz;i++){for(int j=0;j<siz;j++){mp[i][j]=t[i][j];}}\n\t}\n}st,tr,res;\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&p);siz=2*p;\n\tfor(int i=2;i<=m;i++)//\u7ebf\u6027\u7b5b\u7d20\u6570\n\t{\n\t\tif(!book[i]){zhi[++ct]=i;}\n\t\tfor(int j=1;j<=ct&&zhi[j]*i<=m;j++)\n\t\t{book[zhi[j]*i]=true;if(i%zhi[j]==0){break;}}\n\t}\n\tfor(int i=1;i<=ct;i++){zmo[zhi[i]%p]++;}//\u5904\u7406\u51fa\u6765\u7d20\u6570%p\u4e3ai\u7684\u65b9\u6848\u6570\n\tfor(int i=0;i<=m%p;i++){mo[i]=m/p+1;}//\u7136\u540e\u5904\u7406%p\u4e3ai\u7684\u65b9\u6848\u6570\n\tfor(int i=m%p+1;i<p;i++){mo[i]=m/p;}\n\tmo[0]--;//\u6b63\u6574\u6570\uff0c\u53bb\u63890\n\tfor(int i=0;i<p;i++){nzmo[i]=mo[i]-zmo[i];}//%p\u4e3ai\u4e14\u975e\u8d28\u6570\n\tfor(int p1=0;p1<p;p1++)\n\t{for(int p2=0;p2<p;p2++){del[p1][p2]=(p2+p-p1)%p;}}\n\tfor(int p1=0;p1<p;p1++)//0->0\n \t{\n\t\tfor(int p2=0;p2<p;p2++)\n\t\t{tr.mp[p1][p2]=nzmo[del[p1][p2]];}\n \t}\n \tfor(int p1=0;p1<p;p1++)//1->1\n \t{\n \t\tfor(int p2=0;p2<p;p2++)\n \t\t{tr.mp[p+p1][p+p2]=mo[del[p1][p2]];}\n\t}\n\tfor(int p1=0;p1<p;p1++)//0->1\n\t{\n\t\tfor(int p2=0;p2<p;p2++)\n\t\t{tr.mp[p1][p+p2]=zmo[del[p1][p2]];}\n\t}\n\tfor(int i=0;i<siz;i++){res.mp[i][i]=1;}//\u77e9\u9635\u5feb\u901f\u5e42\u4e0d\u89e3\u91ca\n\tfor(int i=n;i;i>>=1,tr*=tr){if(i&1){res*=tr;}}\n\tst.mp[0][0]=1;st*=res;printf(\"%lld\",st.mp[0][p]);return 0;//\u62dc\u62dc\u7a0b\u5e8f~\n}\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1523791525,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3702 \u3010[SDOI2017]\u5e8f\u5217\u8ba1\u6570\u3011"
    },
    {
        "content": "\u8003\u8651\u6ca1\u6709\u7b2c\u4e8c\u6761\u9650\u5236\u600e\u4e48\u505a.\n\n\u8bbe$f_{i,j}$\u4e3a$i$\u4e2a\u6570\uff08\u5728$1$\u5230$m$\u4e4b\u95f4\uff09\uff0c\u548c\u5bf9$p$\u53d6\u6a21\u4e3a$j$\u7684\u5e8f\u5217\u4e2a\u6570.\n\n\u663e\u7136\u6709\u8f6c\u79fb\u65b9\u7a0b$f_{i,j}=\\sum_{k}f_{i-1,k}v_{j-k}$\uff0c\u5176\u4e2d$v_{i}$\u4e3a$1$\u5230$m$\u4e4b\u95f4\uff0c$i$\u7684\u540c\u4f59\u7b49\u4ef7\u7c7b\u7684\u5927\u5c0f\uff0c\u53ef\u4ee5\u9884\u5904\u7406\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6$O(nm)$.\n\n\u63a5\u4e0b\u6765\u8003\u8651\u77e9\u4e58\u4f18\u5316\uff0c\u7531\u9012\u63a8\u5f0f\u6613\u77e5\n$$\\begin{bmatrix}v_0&v_{p-1}&\\cdots&v_1\\\\v_1&v_0&\\cdots&v_2\\\\\\vdots&\\vdots&\\ddots&\\vdots\\\\v_{p-1}&v_{p-2}&\\cdots&v_0\\end{bmatrix}\\begin{bmatrix}f_{i-1,0}\\\\f_{i-1,1}\\\\\\vdots\\\\f_{i-1,p-1}\\end{bmatrix}=\\begin{bmatrix}f_{i,0}\\\\f_{i,1}\\\\\\vdots\\\\f_{i,p-1}\\end{bmatrix}$$\n\u53c8\u6613\u77e5$(f_{1,0},f_{1,1},\\cdots,f_{1,p-1})'=(v_0,v_1,\\cdots,v_{p-1})'$\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u77e9\u9635\u5feb\u901f\u5e42\u5728$O(p^3\\log n)$\u7684\u65f6\u95f4\u89e3\u51b3.\n\n\u8003\u8651\u4e0a\u7b2c\u4e8c\u6761\u9650\u5236\uff0c\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u5c06\u5408\u6570\u53d6\u51fa\u6765\u505a\u4e2a\u7c7b\u4f3c\u7684dp\uff0c\u5bb9\u65a5\u5373\u53ef.\n\n\u505a\u5230\u8fd9\u91cc\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u4e86\uff0c\u4f46\u662f\u8fd8\u6709\u8fdb\u4e00\u6b65\u7684\u4f18\u5316\u7a7a\u95f4\n\n\u4e0a\u5f0f\u5de6\u8fb9\u90a3\u4e2a\u77e9\u9635\u6ee1\u8db3\u4e0b\u4e00\u884c\u90fd\u662f\u7531\u4e0a\u4e00\u884c\u53f3\u79fb\u4e00\u4f4d\u5f97\u6765\u7684\uff0c\u5728\u7ebf\u6027\u4ee3\u6570\u4e2d\uff0c\u6211\u4eec\u79f0\u5b83\u4e3a**\u5faa\u73af\u77e9\u9635**.\n\n\u5faa\u73af\u77e9\u9635\u6709\u4e00\u4e2a\u6027\u8d28\uff0c\u4e24\u4e2a\u540c\u7ea7\u7684\u5faa\u73af\u77e9\u9635\u7684\u548c\u4e0e\u79ef\u90fd\u4e3a\u5faa\u73af\u77e9\u9635\uff0c\u6240\u4ee5\u6b32\u6c42\u4e00\u4e2a\u5faa\u73af\u77e9\u9635\u7684$n$\u6b21\u5e42\uff0c\u6211\u4eec\u4ec5\u9700\u77e5\u9053\u5b83\u7684$n$\u6b21\u5e42\u7684**\u7b2c\u4e00\u884c**\u5373\u53ef.\n\n\u8bbe$f_i$\u548c$g_i$\u5206\u522b\u4e3a\u4e24\u4e2a$n$\u7ea7\u5faa\u73af\u77e9\u9635\u7b2c\u4e00\u884c\u7b2c$i$\u5217\u7684\u5143\u7d20\uff0c\u7531\u77e9\u9635\u4e58\u6cd5\u7684\u5b9a\u4e49\uff0c\u5b83\u4eec\u7684\u4e58\u79ef\u7684\u7b2c\u4e00\u884c\u7b2c$i$\u5217\u4e3a\n$$h_i=\\sum_{j+k\\equiv i\\pmod{n}}f_j g_k$$\n\u8fd9\u662f\u4e00\u4e2a\u5faa\u73af\u5377\u79ef\uff0c\u4e8e\u662f\u53ef\u4ee5\u5c06\u4e0a\u8ff0\u65b9\u6cd5\u4f18\u5316\u5230$O(p^2\\log n)$\uff0c\u7528MTT\u505a\u8fd9\u4e2a\u5faa\u73af\u5377\u79ef\u53ef\u4ee5\u4f18\u5316\u5230$O(p\\log p\\log n)$.\n\n\u7ed9\u51fa\u4e24\u4efd\u6211\u5199\u7684\u4ee3\u7801\n\n\u76f4\u63a5\u77e9\u4e58\u7684\u505a\u6cd5\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n\nusing namespace std;\nconst int N = 1e9;\nconst int M = 2e7;\nconst int mod = 20170408;\nint n, m, p, tot, cnt[100 + 1], compo[100 + 1], prime[M + 1];\nbool check[M + 1];\nstruct Matrix\n{\n\tint a[100 + 1][100 + 1];\n\tMatrix()\n\t{\n\t\tmemset(a, 0, sizeof a);\n\t}\n\tMatrix operator * (const Matrix& o) const\n\t{\n\t\tMatrix ret;\n\t\tfor(int i = 0; i < p; i++)\n\t\t{\n\t\t\tfor(int j = 0; j < p; j++)\n\t\t\t{\n\t\t\t\tfor(int k = 0; k < p; k++)\n\t\t\t\t{\n\t\t\t\t\tret.a[i][j] = (1ll * ret.a[i][j] + 1ll * a[i][k] * 1ll * o.a[k][j]) % mod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n}F, G, P, Q, V, W, I;\n\nMatrix pow(Matrix a, int b)\n{\n\tMatrix ret = I;\n\tfor(; b; b >>= 1, a = a * a)\n\t\tif(b & 1) ret = ret * a;\n\treturn ret;\n}\nvoid sieve()\n{\n\tfor(int i = 2; i <= M; i++)\n\t{\n\t\tif(!check[i]) prime[++tot] = i;\n\t\tfor(int j = 1; j <= tot && i * prime[j] <= M; j++)\n\t\t{\n\t\t\tcheck[i * prime[j]] = 1;\n\t\t\tif(i % prime[j] == 0)\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\nvoid init()\n{\n\tfor(int i = 0; i < p; i++)\n\t\tcnt[i] = m / p;\n\tfor(int i = 1; i <= m % p; i++)\n\t\tcnt[i]++;\n\tcheck[1] = 1;\n\tfor(int i = 1; i <= m; i++)\n\t\tif(check[i]) compo[i % p]++;\n\tfor(int i = 0; i < p; i++)\n\t{\n\t\tP.a[0][i] = cnt[(p - i) % p];\n\t\tQ.a[0][i] = compo[(p - i) % p];\n\t\tV.a[i][0] = cnt[i];\n\t\tW.a[i][0] = compo[i];\n\t\tI.a[i][i] = 1;\n\t}\n\tfor(int i = 1; i < p; i++)\n\t{\n\t\tfor(int j = 0; j < p; j++)\n\t\t{\n\t\t\tP.a[i][j] = P.a[i - 1][(j - 1 + p) % p];\n\t\t\tQ.a[i][j] = Q.a[i - 1][(j - 1 + p) % p];\n\t\t}\n\t}\n}\nint main()\n{\n\tsieve();\n\tscanf(\"%d %d %d\", &n, &m, &p);\n\tinit();\n\tF = pow(P, n - 1) * V, G = pow(Q, n - 1) * W;\n\tprintf(\"%d\\n\", (F.a[0][0] - G.a[0][0] + mod) % mod);\n\treturn 0;\n}\n```\n\nMTT\u7684\u505a\u6cd5\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\nconst int m1 = 469762049;\nconst int m2 = 998244353;\nconst int m3 = 1004535809;\nconst int N = 1e9;\nconst int M = 2e7;\nconst int mod = 20170408;\nint n, m, p, tot, rev[400 + 1], cnt[100 + 1], compo[100 + 1], prime[M + 1];\nbool check[M + 1];\nstruct Matrix\n{\n\tint a[100 + 1][100 + 1];\n\tMatrix()\n\t{\n\t\tmemset(a, 0, sizeof a);\n\t}\n\tMatrix operator * (const Matrix& o) const\n\t{\n\t\tMatrix ret;\n\t\tfor(int i = 0; i < p; i++)\n\t\t{\n\t\t\tfor(int j = 0; j < p; j++)\n\t\t\t{\n\t\t\t\tfor(int k = 0; k < p; k++)\n\t\t\t\t{\n\t\t\t\t\tret.a[i][j] = (1ll * ret.a[i][j] + 1ll * a[i][k] * 1ll * o.a[k][j]) % mod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n}F, G, V, W;\nlong long mul(long long a, long long b, long long mod)\n{\n\tlong long ret = 0;\n\tfor(; b; b >>= 1, a = (a + a) % mod)\n\t\tif(b & 1) ret = (ret + a) % mod;\n\treturn ret;\n}\nint pow(int a, int b, int mod)\n{\n\tint ret = 1;\n\tfor(; b; b >>= 1, a = 1ll * a * 1ll * a % mod)\n\t\tif(b & 1) ret = 1ll * ret * 1ll * a % mod;\n\treturn ret;\n}\nstruct poly\n{\n\tvector<int> a;\n\tint mod;\n\tpoly(int x = 0)\n\t{\n\t\tif(x) a.push_back(x);\n\t}\n\tint size()\n\t{\n\t\treturn a.size();\n\t}\n\tvoid resize(int x)\n\t{\n\t\ta.resize(x); \n\t}\n\tvoid shrink()\n\t{\n\t\tfor(; !a.empty() && !a.back(); a.pop_back());\n\t}\n\tint operator[](const int& x) const\n\t{\n\t\tif(x < 0 || x >= a.size())\n\t\t\treturn 0;\n\t\treturn a[x];\n\t}\n\tvoid NTT(int type = 1)\n\t{\n\t\tstatic const int g = 3;\n\t\tint n = size();\n\t\tfor(int i = 0; i < n; i++)\n\t\t\tif(i < rev[i]) swap(a[i], a[rev[i]]);\n\t\tfor(int mid = 1; mid < n; mid <<= 1)\n\t\t{\n\t\t\tint step = pow(g, (mod - 1) / (mid << 1), mod);\n\t\t\tfor(int i = 0; i < n; i += (mid << 1))\n\t\t\t{\n\t\t\t\tfor(int j = 0, omega = 1; j < mid; j++, omega = 1ll * omega * 1ll * step % mod)\n\t\t\t\t{\n\t\t\t\t\tint x = a[i + j], y = 1ll * a[i + j + mid] * 1ll * omega % mod;\n\t\t\t\t\ta[i + j] = (1ll * x + 1ll * y) % mod;\n\t\t\t\t\ta[i + j + mid] = (1ll * x - 1ll * y + 1ll * mod) % mod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(type == -1)\n\t\t{\n\t\t\treverse(a.begin() + 1, a.end());\n\t\t\tint inv = pow(n, mod - 2, mod);\n\t\t\tfor(int i = 0; i < n; i++)\n\t\t\t\ta[i] = 1ll * a[i] * 1ll * inv % mod;\n\t\t}\n\t}\n\tfriend inline poly operator * (poly f, poly g)\n\t{\n\t\tint lim = 1, mod = f.mod;\n\t\tfor(; lim < f.size() + g.size() - 1; lim <<= 1);\n\t\tfor(int i = 0; i < lim; i++)\n\t\t{\n\t\t\trev[i] = rev[i >> 1] >> 1;\n\t\t\tif(i & 1)\n\t\t\t\trev[i] |= lim >> 1;\n\t\t}\n\t\tf.resize(lim), g.resize(lim);\n\t\tf.NTT(), g.NTT();\n\t\tfor(int i = 0; i < lim; i++)\n\t\t\tf.a[i] = 1ll * f[i] * 1ll * g[i] % mod;\n\t\tf.NTT(-1);\n\t\tfor(int i = p; i < lim; i++)\n\t\t\tf.a[i % p] = (1ll * f.a[i % p] + 1ll * f.a[i]) % mod, f.a[i] = 0;\n\t\tf.shrink();\n\t\treturn f;\n\t}\n};\npoly MTT(poly f, poly g)\n{\n\tpoly p[3], q[3], ans;\n\tp[0].resize(f.size()), p[1].resize(f.size()), p[2].resize(f.size());\n\tq[0].resize(g.size()), q[1].resize(g.size()), q[2].resize(g.size());\n\tp[0].mod = q[0].mod = m1;\n\tp[1].mod = q[1].mod = m2;\n\tp[2].mod = q[2].mod = m3;\n\tfor(int i = 0; i < f.size(); i++)\n\t{\n\t\tp[0].a[i] = p[1].a[i] = p[2].a[i] = f[i];\n\t\tp[0].a[i] %= m1, p[1].a[i] %= m2, p[2].a[i] %= m3;\n\t}\n\tfor(int i = 0; i < g.size(); i++)\n\t{\n\t\tq[0].a[i] = q[1].a[i] = q[2].a[i] = g[i];\n\t\tq[0].a[i] %= m1, q[1].a[i] %= m2, q[2].a[i] %= m3;\n\t}\n\tp[0] = p[0] * q[0], p[1] = p[1] * q[1], p[2] = p[2] * q[2];\n\tans.resize(p[0].size());\n\tlong long M = 1ll * m1 * 1ll * m2;\n\tfor(int i = 0; i < ans.size(); i++)\n\t{\n\t\tlong long A, k;\n\t\tA = (mul(1ll * p[0][i] * 1ll * m2, pow(m2 % m1, m1 - 2, m1), M)\n\t\t   + mul(1ll * p[1][i] * 1ll * m1, pow(m1 % m2, m2 - 2, m2), M)) % M;\n\t\tk = ((1ll * p[2][i] - A) % m3 + m3) % m3 * pow(M % m3, m3 - 2, m3) % m3;\n\t\tans.a[i] = (A % mod + (k % mod) * (M % mod) % mod) % mod;\n\t}\n\treturn ans;\n}\npoly pow(poly f, int b)\n{\n\tpoly ret(1);\n\tfor(; b; b >>= 1, f = MTT(f, f))\n\t\tif(b & 1) ret = MTT(ret, f);\n\treturn ret;\n}\nvoid sieve()\n{\n\tcheck[1] = 1;\n\tfor(int i = 2; i <= M; i++)\n\t{\n\t\tif(!check[i]) prime[++tot] = i;\n\t\tfor(int j = 1; j <= tot && i * prime[j] <= M; j++)\n\t\t{\n\t\t\tcheck[i * prime[j]] = 1;\n\t\t\tif(i % prime[j] == 0)\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\npoly f, g;\nvoid init()\n{\n\tfor(int i = 0; i < p; i++)\n\t\tcnt[i] = m / p;\n\tfor(int i = 1; i <= m % p; i++)\n\t\tcnt[i]++;\n\tfor(int i = 1; i <= m; i++)\n\t\tif(check[i]) compo[i % p]++;\n\tf.resize(p), g.resize(p);\n\tfor(int i = 0; i < p; i++)\n\t\tf.a[i] = cnt[(p - i) % p], g.a[i] = compo[(p - i) % p];\n}\nint main()\n{\n\tsieve();\n\tscanf(\"%d %d %d\", &n, &m, &p);\n\tinit();\n\tf = pow(f, n - 1), g = pow(g, n - 1);\n\tfor(int i = 0; i < p; i++)\n\t{\n\t\tF.a[0][i] = f[i], G.a[0][i] = g[i];\n\t\tV.a[i][0] = cnt[i], W.a[i][0] = compo[i];\n\t}\n\tfor(int i = 1; i < p; i++)\n\t{\n\t\tfor(int j = 1; j < p; j++)\n\t\t{\n\t\t\tF.a[i][j] = F.a[i - 1][(j - 1 + p) % p];\n\t\t\tG.a[i][j] = G.a[i - 1][(j - 1 + p) % p];\n\t\t}\n\t}\n\tF = F * V, G = G * W;\n\tprintf(\"%d\\n\", (1ll * F.a[0][0] - 1ll * G.a[0][0] + 1ll * mod) % mod);\n\treturn 0;\n}\n```\n\n\u5728\u6b64\u611f\u8c22\u4e00\u4f4d\u535a\u4e3b\uff08\u6559\u4f1a\u4e86\u6211\u5faa\u73af\u77e9\u9635\u5feb\u901f\u5e42\uff09\n\n[\u6d45\u8c08\u5faa\u73af\u77e9\u9635\u53ca\u5176\u5feb\u901f\u5e42](https://www.luogu.com.cn/blog/water-mi/2333333-233333)\n\n\u5176\u5b9e\u5faa\u73af\u77e9\u9635\u6709\u5f88\u591a\u4f18\u7f8e\u7684\u6027\u8d28\uff0c\u6bd4\u5982\u8bf4\n\n[\u77e5\u4e4e\u56de\u7b54\uff1a\u5982\u4f55\u6c42n\u7ea7\u5faa\u73af\u77e9\u9635\u7684\u884c\u5217\u5f0f\uff1f](https://www.zhihu.com/question/22013474/answer/1770995621)\n\n",
        "postTime": 1616408244,
        "uid": 139340,
        "name": "Gauss0320",
        "ccfLevel": 0,
        "title": "Solution [SDOI2017] \u5e8f\u5217\u8ba1\u6570"
    },
    {
        "content": "\u8fd9\u9053\u9898\u975e\u5e38\u7684\u8ff7\u5e7b\n\n\u9996\u5148\u6211\u4eec\u8981\u5bb9\u65a5\n\n\u8003\u8651\u8bb0$dp[i][j]$\u8868\u793a\u524d$i$\u4f4d$\\%p=j$\u7684\u65b9\u6848\u6570\n\n$g[i][j]$\u8868\u793a\u524d$i$\u4f4d\u53ea\u7528\u5408\u6570$\\%p=j$\u7684\u65b9\u6848\u6570\n\n\u4e8e\u662f\u53ef\u4ee5\u8003\u8651\u6700\u66b4\u529b\u7684$dp$\u662f$O(nm^*p)$\u7684\n\n\u4f46\u662f\u5e76\u6ca1\u5fc5\u8981\n\n\u6211\u4eec\u53ef\u4ee5\u63d0\u524d\u5904\u7406$1-m$\u8fd9\u4e9b\u6570$\\%p$\u7684\u503c\uff0c\u7528\u8fd9\u4e9b\u503c\u6765\u8f6c\u79fb\u5c31\u597d\u4e86\n\n\u4e5f\u5c31\u662f\u989d\u5916\u8bb0\u4e00\u4e2a$cnt[i]$\u8868\u793a$\\%p$\u4e3a$i$\u7684\u6570\u91cf\u548c$comp[i]$\u8868\u793a$\\%p$\u4e3a$i$\u7684\u5408\u6570\u7684\u6570\u91cf\n\n\u4e8e\u662f\u5c31\u6ca1\u5fc5\u8981\u679a\u4e3e$1-m$\u8f6c\u79fb\u4e86\n\n\u590d\u6742\u5ea6\u53d8\u6210$O(np^2)$\n\n\u5b9e\u9645\u4e0a\u8fd9\u4e2a\u5e8f\u5217\u7684\u751f\u6210\u4e0e\u4f4d\u7f6e\u65e0\u5173\n\n\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u500d\u589e\u7684\u5904\u7406\n\n$dp[n][j]$\u53ef\u4ee5\u7531$dp[n/2][j]$\u6765\u76f4\u63a5\u8f6c\u79fb\n\n\u4e8e\u662f\u9012\u5f52\u505a\u5c31\u597d\u4e86\n\n\u590d\u6742\u5ea6$O(p^2\\log n)$\n\n\u7136\u800c\u56e0\u4e3a\u8f6c\u79fb\u7684\u5f62\u5f0f\u662f\u4e00\u4e2a\u5377\u79ef\u7684\u6a21\u6837\n\n\u6240\u4ee5\u662f\u53ef\u4ee5\u505a\u5230$O(p\\log p\\log n)$\u7684\n\n\u4f46\u662f\u51fa\u9898\u4eba\u53c8\u4e0d\u5361\uff0c\u5c31\u6ca1\u5199...\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define rep( i, s, t ) for( register int i = s; i <= t; ++ i )\n#define re register\n#define int long long\nint read() {\n\tchar cc = getchar(); int cn = 0, flus = 1;\n\twhile(cc < '0' || cc > '9') {  if( cc == '-' ) flus = -flus;  cc = getchar();  }\n\twhile(cc >= '0' && cc <= '9')  cn = cn * 10 + cc - '0', cc = getchar();\n\treturn cn * flus;\n}\nconst int P = 20170408 ; \nconst int N = 2000000 + 5 ;\nconst int M = 100 + 5 ; \nconst int R = 2 * 1e7 + 5 ; \nint n, m, p, dp[2][M], g[2][M], cnt[M], comp[M], Ed ; \nint pr[N], top;\nbool isp[R];\nvoid Init() {\n\tisp[1] = 1 ; \n\tfor( int i = 2; i <= m; ++ i ) {\n\t\tif( !isp[i] ) pr[++ top] = i, isp[i] = 0 ;\n\t\tfor(int j = 1; j <= top; ++ j ) {\n\t\t\tif ( pr[j] * i > m ) break ;\n\t\t\tisp[pr[j] * i] = 1 ;\n\t\t\tif( i % pr[j] == 0 )  break;\n\t\t}\n\t}\n}\nvoid F( int x,  int w ) {\n\tif( x == 1 ) {\n\t\trep( i, 0, ( p - 1 ) ) dp[w][i] = cnt[i], g[w][i] = comp[i] ; \n\t\treturn ; \n\t}\n\tF( x / 2, w ^ 1 ) ;\n\trep( j, 0, Ed ) dp[w][j] = 0, g[w][j] = 0 ;  \n\trep( j, 0, Ed ) rep( k, 0, Ed ) \n\tdp[w][j] = ( dp[w ^ 1][k] * dp[w ^ 1][(p + j - k) % p] % P + dp[w][j] ) % P ;\n\trep( j, 0, Ed ) rep( k, 0, Ed ) \n\tg[w][j] = ( g[w ^ 1][k] * g[w ^ 1][(p + j - k) % p] % P + g[w][j] ) % P ;\n\tif( x & 1 ) {\n\t\trep( j, 0, Ed ) dp[w ^ 1][j] = dp[w][j], g[w ^ 1][j] = g[w][j] ;\n\t\trep( j, 0, Ed ) dp[w][j] = 0, g[w][j] = 0 ;  \n\t\trep( j, 0, Ed ) rep( k, 0, Ed )\n\t\tdp[w][j] = ( dp[w ^ 1][k] * cnt[(p + j - k) % p] % P + dp[w][j] ) % P ;\n\t\trep( j, 0, Ed ) rep( k, 0, Ed ) \n\t\tg[w][j] = ( g[w ^ 1][k] * comp[(p + j - k) % p] % P + g[w][j] ) % P ;\n\t}\n}\nsigned main()\n{\n\tn = read(), m = read(), p = read() ; isp[1] = 1, Init() ; \n\trep( i, 1, m ) cnt[i % p] ++, comp[i % p] += isp[i] ;\n\t Ed = p - 1 ; F( n, 0 ) ;\n\tprintf(\"%d\\n\", ( dp[0][0] - g[0][0] + P ) % P ) ; \n\treturn 0;\n}\n\n```",
        "postTime": 1567404035,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3702 \u3010[SDOI2017]\u5e8f\u5217\u8ba1\u6570\u3011"
    },
    {
        "content": "/\\*\u672c\u9898\u76ee\u7684\u539f\u59cb\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3af[i][j]+=f[i-1][(j-k+p)%p],\u53c8\u56e0\u4e3an\uff0cm\u975e\u5e38\u5927\u800c\n\np\u5f88\u5c0f\uff0c\u6240\u4ee5\u8003\u8651\u6709\u77e9\u9635\u4e58\u6cd5\u8fdb\u884c\u4f18\u5316\u3002\u77e9\u9635\u4e2d\u7684ans[i][j]\u8868\u793ai-1\u4f59i\u7684\u72b6\u6001\u53ef\u4ee5\u901a\u8fc7\u52a0\n\n\u591a\u5c11\u4e2a\u6570\u8f6c\u79fb\u5230i\u4f59j\u7684\u72b6\u6001\uff0c\u7136\u540e\u8fdb\u884c\u77e9\u9635\u5feb\u901f\u5e42\uff0c\u518d\u52a0\u5165\u4e00\u4e9b\u5bb9\u65a5\u5c31\u53ef\u4ee5\u4e86\u3002\\*/\n\n\n   \n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<cstdlib>\n#define LL long long \nusing namespace std;\nconst int MAXN=200;\nconst int mod=20170408;\nstruct node{\n    LL ans[MAXN][MAXN];\n};\nnode mul,ans;\nLL N,M,P,jieguo1,jieguo2;\nint prime[20000007];\nbool vis[20000007];\nLL rest[MAXN];\ninline node cheng(node a,node b)\n{\n     node p;\n     for(int i=0;i<105;++i)\n      for(int j=0;j<105;++j) \n        p.ans[i][j]=0;\n     for(int i=0;i<P;++i)\n      for(int j=0;j<P;++j)\n       for(int k=0;k<P;++k)\n        p.ans[i][j]=(p.ans[i][j]+a.ans[i][k]*b.ans[k][j])%mod;\n     return p;\n}\nvoid quickmatrix(LL b)\n{\n     while(b)\n     {\n          if(b%2)\n           ans=cheng(ans,mul);\n          b=b/2;\n          mul=cheng(mul,mul);\n     }\n}\nvoid pre()\n{\n     //\u6ce8\u610f1\u65e2\u4e0d\u662f\u5408\u6570\u4e5f\u4e0d\u662f\u8d28\u6570 \n     for(int i=2;i<=M;++i)\n      {\n           if(vis[i]==0)\n            rest[i%P]++,prime[++prime[0]]=i;\n         for(int j=1;prime[j]*i<=M&&j<=prime[0];++j)\n          {\n               vis[i*prime[j]]=1;\n               if(i%prime[j]==0) break;\n          }\n      }\n}\nint main()\n{\n   cin>>N>>M>>P;\n   for(int i=0;i<P;++i)\n    for(int j=0;j<P;++j)\n     {\n        if(i==j)\n         {\n             mul.ans[i][j]=(mul.ans[i][j]+M/P)%mod;\n         }\n        else \n         {\n             if(M%P>=(j-i+P)%P) mul.ans[i][j]++;\n            mul.ans[i][j]=(mul.ans[i][j]+M/P)%mod;\n         }\n     }\n   pre();\n//for(int i=0;i<P;++i)\n//{\n// for(int j=0;j<P;++j)\n//  printf(\"%lld \",mul.ans[i][j]);\n// cout<<endl;\n//}\n  ans.ans[0][0]=1;   //\u6ce8\u610fdp\u7684\u8fb9\u754c\u9700\u8981\u7528\u77e9\u4e58\u7684\u521d\u59cb\u503c\u6765\u63a7\u5236 \n   quickmatrix(N);\n   for(int i=0;i<P;++i)\n    jieguo1=(jieguo1+ans.ans[i][0])%mod;//\u63a5\u4e0b\u6765\u5bb9\u65a5 \n //  printf(\"%lld\\n\",jieguo1); \n   for(int i=0;i<P;++i)\n    for(int j=0;j<P;++j)\n     {\n         ans.ans[i][j]=0;\n         mul.ans[i][j]=0;\n     }\n   ans.ans[0][0]=1;\n   for(int i=0;i<P;++i)     //\u63a5\u4e0b\u6765\u522b\u5fd8\u8bb0\u7b5b\u7d20\u6570\u8868\u7136\u540e\u5224\u65ad\u77e9\u9635\u8f6c\u79fb\u65f6\u4e0d\u542b\u7d20\u6570\u7684\u6761\u4ef6 \n    for(int j=0;j<P;++j)\n     {\n        if(i==j)\n         {\n             mul.ans[i][j]=(mul.ans[i][j]+M/P-rest[0]+2*mod)%mod; \n          }\n        else \n         {\n             if(M%P>=(j-i+P)%P) mul.ans[i][j]++;\n            mul.ans[i][j]=(mul.ans[i][j]+M/P-rest[(j-i+P)%P]+2*mod)%mod;\n         }\n     }\n//for(int i=0;i<P;++i)\n//{\n// for(int j=0;j<P;++j)\n//  printf(\"%lld \",mul.ans[i][j]);\n// cout<<endl;\n//}\n quickmatrix(N);\n for(int i=0;i<P;++i)\n   jieguo2=(jieguo2+ans.ans[i][0])%mod;\n jieguo1=(jieguo1-jieguo2+2*mod)%mod;  //\u5bb9\u65a5\uff1a\u6240\u6709\u60c5\u51b5-\u4e00\u4e2a\u8d28\u6570\u4e5f\u4e0d\u542b\u7684\u60c5\u51b5=\u81f3\u5c11\u542b\u4e00\u4e2a\u8d28\u6570\u7684\u60c5\u51b5\n cout<<jieguo1<<endl;\n   return 0;     \n}\n```",
        "postTime": 1492600428,
        "uid": 19387,
        "name": "nixi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3702 \u3010[SDOI2017]\u5e8f\u5217\u8ba1\u6570\u3011"
    },
    {
        "content": "## \u9898\u610f\nAlice \u60f3\u8981\u5f97\u5230\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6b63\u6574\u6570\u5e8f\u5217 $\\{a_i\\}$\uff0c\u6ee1\u8db3\uff1a\n- $a_i\\le m$\n- $p|\\sum a_i$\n- $\\exists i\\in[1,n]$\uff0c\u4f7f $a_i$ \u662f\u8d28\u6570\n\nAlice \u60f3\u77e5\u9053\uff0c\u6709\u591a\u5c11\u4e2a\u5e8f\u5217\u6ee1\u8db3\u5979\u7684\u8981\u6c42\u3002\n\n## \u6734\u7d20\n\u7531\u4e8e\u9898\u76ee\u6709\u3010$n$ \u4e2a\u6570\u3011\u3010\u548c\u3011\u3010\u6709\u5426\u8d28\u6570\u3011\u8fd9\u4e09\u4e2a\u4e3b\u8981\u9650\u5236\uff0c\u56e0\u6b64\uff1a\n\u8bbe $F(i,j,1/0)$ \u8868\u793a\u524d $i$ \u4e2a\u6570\uff0c\u548c\u4e3a $j$\uff0c\u662f\u5426\u6709\u4e86\u4e00\u4e2a\u8d28\u6570\u3002\n\u5217\u51fa\u6734\u7d20 dp \u65b9\u7a0b\uff1a\n\n$$\nF(i,j,0)=\\sum_{1\\le k\\le m}F(i-1,j-k,0)\\times [k \\text{ isn't prime}]\\\\\nF(i,j,1)=\\sum_{1\\le k\\le m}F(i-1,j-k,1)+F(i-1,j-k,0)\\times [k\\text{ is prime}]\n$$\n\n\u6240\u6c42\u5373\u4e3a $\\sum_{p|i,i\\le nm}F(n,i,1)$\u3002\n\n\u53d1\u73b0\u5177\u4f53\u7684\u3010\u548c\u3011\u4e0d\u91cd\u8981\uff0c\u56e0\u4e3a\u53ea\u5173\u5fc3\u3010\u548c $\\bmod p$\u3011\uff0c\u6240\u4ee5 $j,k$ \u5747\u53ef\u5728 $\\pmod p$ \u610f\u4e49\u4e0b\u679a\u4e3e\u3002\n\u8bbe $A_k,B_k,C_k$ \u5206\u522b\u8868\u793a $\\mod p=k$ \u7684\u8d28\u6570\u3001\u975e\u8d28\u6570\u3001\u6570\u7684\u4e2a\u6570\u3002\n\n$$\nF(i,j,0)=\\sum_{1\\le k\\le m}F(i-1,j-k,0)\\times B_k\\\\\nF(i,j,1)=\\sum_{1\\le k\\le m}F(i-1,j-k,1)\\times C_k+F(i-1,j-k,0)\\times A_k\n$$\n\n\u6240\u6c42\u5373\u4e3a $F(n,0,1)$\u3002\n\n## \u77e9\u9635\u52a0\u901f\n\n\u6bcf\u6b21\u8f6c\u79fb\u5728\u505a\u4e00\u6837\u7684\u4e8b\u60c5\uff0c\u6240\u4ee5\u77e9\u9635\u5feb\u901f\u5e42\u53ef\u4ee5\u7528\u6765\u52a0\u901f\u8f6c\u79fb\u3002\n\ndp \u77e9\u9635\uff1a\n\n$$\n\\left[\n\\begin{matrix}\nF_{0,0}\\ F_{1,0}\\ F_{2,0}\\ \\cdots\\ F_{p-1,0}\\ F_{0,1}\\ \\cdots \\ F_{p-1,1}\n\\end{matrix}\n\\right]\\\\\n$$\n\n\u8f6c\u79fb\u77e9\u9635\uff1a\n\n| \u7f16\u53f7   | 1    | 2    | p    | 1    | 2    | p    |\n| ---- | ---- | ---- | ---- | ---- | ---- | ---- |\n| 1    | A0   | A1   | \u2026    | B0   | B1   | \u2026    |\n| 2    | Ap-1 | A0   | \u2026    | Bp-1 | B0   | \u2026    |\n|      | \u2026    | Ap-1 | \u2026    | \u2026    | Bp-1 | \u2026    |\n|      | \u2026    | \u2026    | \u2026    | \u2026    | \u2026    | \u2026    |\n|      | A3   | \u2026    | \u2026    | \u2026    | \u2026    | \u2026    |\n|      | A2   | A3   | \u2026    | \u2026    | \u2026    | \u2026    |\n| p    | A1   | A2   | \u2026    | B1   | B2   | \u2026    |\n| p+1  | C0   | C1   | \u2026    | 0    | \u2026    | \u2026    |\n|      | Cp-1 | C0   | \u2026    | 0    | \u2026    | \u2026    |\n|      | \u2026    | Cp-1 | \u2026    | \u2026    | \u2026    | \u2026    |\n|      | \u2026    | \u2026    | \u2026    | \u2026    | \u2026    | \u2026    |\n|      | \u2026    | \u2026    | \u2026    | \u2026    | \u2026    | \u2026    |\n|      | \u2026    | \u2026    | \u2026    | 0    | \u2026    | \u2026    |\n| 2p   | C1   | C2   | \u2026    | 0    | \u2026    | \u2026    |\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5229\u7528 $O(p^3\\log n)$ \u65f6\u95f4\u5f97\u5230\uff0c\u5176\u4e2d $\\log n$ \u4e3a\u5feb\u901f\u5e42\uff0c$p^3$ \u4e3a\u4e24\u4e2a $(2p)^2$ \u7684\u77e9\u9635\u7684\u4e58\u6cd5\u3002[\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002](https://www.luogu.com.cn/record/68998129)\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=205,M=2e7+5,mod=20170408;\nint n,m,p,tot,a[N][N],f[N],prime[M],A[N],B[N],C[N];\nbool v[M];\nvoid mul(int f[N],int a[N][N]){\n\tint c[N];memset(c,0,sizeof(c));\n\tfor(int i=1;i<=2*p;i++)\n\t\tfor(int j=1;j<=2*p;j++)\n\t\t\tc[i]+=1ll*f[j]*a[j][i]%mod,c[i]%=mod;\n\tmemcpy(f,c,sizeof(c));\n}\nvoid mul2(int a[N][N],int b[N][N]){\n\tint c[N][N];memset(c,0,sizeof(c));\n\tfor(int i=1;i<=2*p;i++)\n\t\tfor(int j=1;j<=2*p;j++)\n\t\t\tfor(int k=1;k<=2*p;k++)\n\t\t\t\tc[i][j]+=1ll*a[i][k]*b[k][j]%mod,c[i][j]%=mod;\n\tmemcpy(a,c,sizeof(c));\n}\nvoid qp(int a[N][N],int b){\n\tint c[N][N];memset(c,0,sizeof(c));\n\tfor(int i=1;i<=2*p;i++)c[i][i]=1;\n\twhile(b){\n\t\tif(b&1)mul2(c,a);\n\t\tb>>=1,mul2(a,a);\n\t}\n\tmemcpy(a,c,sizeof(c));\n}\nint main(){\n\tcin>>n>>m>>p;\n\tv[1]=1;\n\tfor(int i=2;i<=m;i++){\n\t\tif(!v[i])prime[++tot]=i;\n\t\tfor(int j=1;j<=m&&prime[j]*i<=m;j++){\n\t\t\tv[prime[j]*i]=1;\n\t\t\tif(i%prime[j]==0)break;\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++)A[i%p]+=!v[i],B[i%p]+=v[i],C[i%p]++;\n\tfor(int i=1;i<=p;i++)for(int j=1;j<=p;j++)a[i][j]=B[(p-i+j)%p];\n\tfor(int i=1;i<=p;i++)for(int j=1;j<=p;j++)a[i][j+p]=A[(p-i+j)%p];\n\tfor(int i=1;i<=p;i++)for(int j=1;j<=p;j++)a[i+p][j+p]=C[(p-i+j)%p];\n\tf[1]=1;\n\tqp(a,n);\n\tmul(f,a);\n\tcout<<f[p+1];\n}\n```\n\n### \u8fdb\u4e00\u6b65\u4f18\u5316\n\n$p$ \u518d\u5927\u4e00\u70b9\u5c31\u8fc7\u4e0d\u4e86\u4e86\uff0c\u4f46\u5176\u5b9e\u5b8c\u5168\u53ef\u4ee5\u518d\u4f18\u5316\u3002\n\n\u89c2\u5bdf\u8f6c\u79fb\u77e9\u9635\uff0c\u5176\u5b9e\u6211\u4eec\u662f\u77e5\u9053\u7684\uff0c\u7b2c $a_{1,2}...a_{p,2}$ \u5176\u5b9e\u5c31\u662f $a_{1,1}...a_{p,1}$ \u5411\u4e0b\u5e73\u79fb\u4e00\u683c\uff08\u73af\u72b6\u5e73\u79fb\uff09\u5f97\u5230\u7684\u3002\u5176\u5b83\u4e09\u4e2a\u77e9\u5f62\u533a\u57df\u4e5f\u662f\u7c7b\u4f3c\u3002**\u5373\u4fbf\u5728\u505a\u4e86\u5feb\u901f\u5e42\u4e4b\u540e\uff0c\u8fd9\u79cd\u683c\u5c40\u4e5f\u662f\u4e0d\u4f1a\u6539\u53d8\u7684**\u3002\u8003\u8651\u5c06\u8fd9\u4e9b\u5f88\u7c7b\u4f3c\u7684\u5217\u4e2d\u53ea\u53d6\u4e00\u4e2a $p\\times 1$ \u7684\u5217\u4f5c\u4e3a\u4ee3\u8868\u8fdb\u884c\u8ba1\u7b97\u8fd9\u6837\u53ea\u7528 $O(p^2)$\uff0c\u5e76\u518d\u7528 $O(p^2)$ \u8fdb\u884c\u590d\u5236\u3001\u5e73\u79fb\u3002\u5177\u4f53\u5730\uff0c\u6309\u539f\u6765\u77e9\u4e58\u65b9\u5f0f\u8ba1\u7b97\u7ed3\u679c\u77e9\u9635\u4e2d $(1,1)...(p,1);(p+1,1)...(2p,1);(1,p+1)...(p,p+1);(p+1,p+1)...(2p,p+1)$ \u8fd9\u4e9b\u5143\u7d20\u7684\u503c\uff0c\u7136\u540e\u6309\u7167\u89c4\u5219\u586b\u5145\u7a7a\u767d\u90e8\u5206\u3002\u590d\u6742\u5ea6 $O(p^2\\log n)$\u3002[\u66f4\u52a0\u53ef\u4ee5\u901a\u8fc7\u3002](https://www.luogu.com.cn/record/69001317)\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=205,M=2e7+5,mod=20170408;\nint n,m,p,tot,a[N][N],f[N],prime[M],A[N],B[N],C[N];\nbool v[M];\nvoid mul(int f[N],int a[N][N]){\n\tint c[N];memset(c,0,sizeof(c));\n\tfor(int i=1;i<=2*p;i++)\n\t\tfor(int j=1;j<=2*p;j++)\n\t\t\tc[i]+=1ll*f[j]*a[j][i]%mod,c[i]%=mod;\n\tmemcpy(f,c,sizeof(c));\n}\nvoid mul2(int a[N][N],int b[N][N]){\n\tint c[N][N];memset(c,0,sizeof(c));\n\tfor(int i=1;i<=2*p;i++)\n\t\tfor(int j=1;j<=2*p;j++)\n\t\t\tc[i][1]+=1ll*a[i][j]*b[j][1]%mod,c[i][1]%=mod;\n\tfor(int i=1;i<=2*p;i++)\n\t\tfor(int j=1;j<=2*p;j++)\n\t\t\tc[i][p+1]+=1ll*a[i][j]*b[j][p+1]%mod,c[i][p+1]%=mod;\n\tfor(int j=2;j<=p;j++){\n\t\tfor(int i=1;i<=p;i++)c[i][j]=c[(i-2+p)%p+1][j-1];\n\t\tfor(int i=1;i<=p;i++)c[i+p][j]=c[(i-2+p)%p+1+p][j-1];\n\t}\n\tfor(int j=p+2;j<=2*p;j++){\n\t\tfor(int i=1;i<=p;i++)c[i][j]=c[(i-2+p)%p+1][j-1];\n\t\tfor(int i=1;i<=p;i++)c[i+p][j]=c[(i-2+p)%p+1+p][j-1];\n\t}\n\tmemcpy(a,c,sizeof(c));\n}\nvoid qp(int a[N][N],int b){\n\tint c[N][N];memset(c,0,sizeof(c));\n\tfor(int i=1;i<=2*p;i++)c[i][i]=1;\n\twhile(b){\n\t\tif(b&1)mul2(c,a);\n\t\tb>>=1,mul2(a,a);\n\t}\n\tmemcpy(a,c,sizeof(c));\n}\nint main(){\n\tcin>>n>>m>>p;\n\tv[1]=1;\n\tfor(int i=2;i<=m;i++){\n\t\tif(!v[i])prime[++tot]=i;\n\t\tfor(int j=1;j<=m&&prime[j]*i<=m;j++){\n\t\t\tv[prime[j]*i]=1;\n\t\t\tif(i%prime[j]==0)break;\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++)A[i%p]+=!v[i],B[i%p]+=v[i],C[i%p]++;\n\tfor(int i=1;i<=p;i++)for(int j=1;j<=p;j++)a[i][j]=B[(p-i+j)%p];\n\tfor(int i=1;i<=p;i++)for(int j=1;j<=p;j++)a[i][j+p]=A[(p-i+j)%p];\n\tfor(int i=1;i<=p;i++)for(int j=1;j<=p;j++)a[i+p][j+p]=C[(p-i+j)%p];\n\tf[1]=1;\n\tqp(a,n);\n\tmul(f,a);\n\tcout<<f[p+1];\n}\n```",
        "postTime": 1644498651,
        "uid": 300078,
        "name": "pengyule",
        "ccfLevel": 7,
        "title": "[SDOI2017]\u5e8f\u5217\u8ba1\u6570"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3702)\n\n\u9996\u5148\u5bb9\u6613\u60f3\u5230\u5bb9\u65a5\n\n\u5148\u7b97\u7528\u4efb\u610f\u6570\u6ee1\u8db3\u6761\u4ef6,\u518d\u7b97\u53ea\u7528\u548c\u6570\u6ee1\u8db3\u6761\u4ef6\n\n\u76f8\u51cf\u5c31\u662f\u7b54\u6848.\n\n\u4ee4$f[i][j]$\u8868\u793a\u524d$i$\u4e2a\u6570\u6a21$p$\u4e3a$j$\u7684\u65b9\u6848\u6570\n\n\u9884\u5904\u7406\u4e00\u4e2a\u6570\u7ec4$v[i]$\u8868\u793a\u5c0f\u4e8e$m$\u7684\u6570\u4e2d\u5bf9$p$\u6c42\u4f59\u4e3a$i$\u7684\u4e2a\u6570\n\n\u90a3\u4e48$f[i][j]=\\sum\\limits_kf[i-1][k]*v[(j+p-k)\\%p]$\n\n\u90a3\u4e48\u53d1\u73b0\u6bcf\u4e2a\u8f6c\u79fb\u90fd\u4e00\u6837,\u53ef\u4ee5\u7528\u77e9\u9635\u5feb\u901f\u5e42\u6765\u4f18\u5316\n\n\u521d\u59cb\u77e9\u9635\u662f$chu1=[1,0,0,0,0,0,0...]$\n\n\u6784\u9020\u77e9\u9635$all$\u662f\n\n$$\n\\begin{bmatrix}\nover_0&over_1&over_2...&over_{p-1}\\\\\nover_{p-1}&over_0&over_1...&over_{p-2}\\\\\n.....&.......&........&.......\\\\\nover_1&over_{2}&over_3...&over_{0}\n\\end{bmatrix}\n$$\n\n\u5176\u4e2d$over_i$\u8868\u793a\u5c0f\u4e8e\u7b49\u4e8e$m$\u7684\u6570\u6a21$p$\u4f59$i$\u7684\u6709\u51e0\u4e2a\n\n\u7136\u540e\u7b97\u53ea\u7528\u5408\u6570\u7684\u5408\u6cd5\u65b9\u6848\u4e5f\u662f\u4e00\u6837\u7684,\u5c31\u628a$over_i$\u6362\u4e00\u4e0b\u5373\u53ef\n\n\u8fd9\u6837,\u77e9\u9635\u5feb\u901f\u5e42$chu_1*all^n$\n\n\u6700\u5de6\u4fa7\u7684\u5143\u7d20\u5c31\u662f\u7b54\u6848\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int maxm = 2e7+10;\nconst int maxn = 2e6+10;\nconst int mod = 20170408;\nint n,m,p,prime[maxn],top,over[109],even[109];\nbool vis[maxm];\nvoid make_prime()\n{\n\tfor(int i=2;i<=maxm;i++)\n\t{\n\t\tif( !vis[i] )\tprime[++top] = i;\n\t\tfor(int j=1;j<=top&&prime[j]*i<=maxm;j++)\n\t\t{\n\t\t\tvis[prime[j]*i] = 1;\n\t\t\tif( i%prime[j]==0 )\tbreak;\n\t\t}\n\t}\n\tvis[1] = 1;\n\tfor(int i=1;i<=m;i++)\n\t\tover[i%p]++, even[i%p]+=vis[i];\n}\nstruct rce{\n\tll m[109][109];\n\trce(){ memset( m,0,sizeof m); }\n};\nrce init()\n{\n\trce ans;\n\tfor(int i=0;i<=p-1;i++)\tans.m[i][i]=1;\n\treturn ans;\n}\nrce operator * (rce a,rce b)\n{\n\trce ans;\n\tfor(int i=0;i<=p-1;i++)\n\tfor(int j=0;j<=p-1;j++)\n\t{\n\t\tfor(int k=0;k<=p-1;k++)\n\t\t\tans.m[i][j] = ( ans.m[i][j]+a.m[i][k]*b.m[k][j]%mod )%mod;\t\t\n\t}\n\treturn ans;\n}\nrce quick(rce x,int n)\n{\n\trce ans = init();\n\tfor( ; n ; n>>=1,x=x*x )\n\t\tif( n&1 )\tans = ans*x;\n\treturn ans;\n}\nint main()\n{\n\tcin >> n >> m >> p;\n\tmake_prime();\n\trce all,he;\n\tfor(int i=0,start=0;i<=p-1;i++,start--)//\u679a\u4e3e\u6bcf\u4e00\u884c \n\t{\n\t\tif( start<0 )\tstart+=p;\n\t\tfor(int j=0,now=start;j<=p-1;j++,now=(now+1)%p)\n\t\t{\n\t\t\tall.m[i][j] = over[now];//\u6240\u6709\u7684\u6570\u5b57\n\t\t\the.m[i][j] = even[now];\n\t\t}\n\t}\n\trce chu1,chu2;\n\tchu1.m[0][0]=1,chu2.m[0][0]=1;\n\tchu1 = chu1*quick(all,n), chu2 = chu2*quick(he,n);\n\tcout << ((chu1.m[0][0]-chu2.m[0][0])%mod+mod)%mod;\n}\n```",
        "postTime": 1606970731,
        "uid": 299810,
        "name": "issue_is_fw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3702 \u3010[SDOI2017]\u5e8f\u5217\u8ba1\u6570\u3011"
    },
    {
        "content": "\u7528f[i][j]\u8868\u793a\u957f\u5ea6\u4e3ai\u7684\u5e8f\u5217\uff0c\u8fd9\u4e2a\u5e8f\u5217\u7684\u548c%p\u4e3aj\u3002\u7136\u540e\u7acb\u9a6c\u5f97\u5230\u8f6c\u79fb\uff1a\n\n**f[i][j]=sum(x,0,j){f[i>>1][x]*f[i>>1][y]}**\n\n\u4e00\u770b\u662f\u4e2a\u6807\u51c6\u7684\u5377\u79ef\u3002\n\u7136\u540e\u5c31\u53ef\u4ee5\u8dd1\u591a\u9879\u5f0f\u76f8\u4e58\u4e86\u3002\n\n\u63d0\u524d\u9884\u5904\u7406\uff1a\n\u56e0\u4e3a\u8fd8\u8981\u8003\u8651\u5230\u5fc5\u987b\u8981\u6709\u8d28\u6570\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u5bb9\u65a5\uff1a\n**\u5168\u90e8\u7684**\u51cf\u53bb**\u6ca1\u6709\u8d28\u6570\u7684**\n\n\u5168\u90e8\u7684\uff1a\u679a\u4e3em\u91cc\u6bcf\u4e00\u4e2a\u6570\uff0c\u7136\u540e\u8bb0\u5f55\uff1af[1][j%p].\n\u6ca1\u6709\u8d28\u6570\u7684\u540c\u7406\u3002\n\n\u7136\u540e\u591a\u9879\u5f0f\u5feb\u901f\u5e42\u76f8\u4e58\u3002\n\u591a\u9879\u5f0f\u76f8\u4e58\u7684\u8bdd\uff1ap\u5f88\u5c0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u76f8\u4e58\u3002\n\u8fd9\u662f\u4e00\u4efd\u66b4\u529b\u76f8\u4e58\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<stack>\n#include<algorithm>\n#include<cstring>\n#include<vector>\n#include<ctime>\n#include<map>\n#include<cstdlib>\n#include<cmath>\n#define r(i,a,b) for(int i=a;i<=b;i++)\n#define rr(i,a,b) for(int i=a;i>=b;i--)\n#define inf 0x3f3f3f3f\n#define mem(a) memset(a,0x3f,sizeof(a))\n#define re(a) a=read()\n#define pr(a) printf(\"%d\\n\",a)\n#define me(a) memset(a,0,sizeof(a))\n#define in inline\n#define ll long long\n#define db double\nusing namespace std;\nconst int N=507;\nconst int md=20170408;\nconst int M=sqrt(md);\nconst int NN=2e7+7;\nconst db pi=acos(-1.0);\ninline int read(){\n\tchar ch=getchar();\n\tint w=1,x=0;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0',ch=getchar();}\n\treturn x*w;\n}\nbool vis[NN];\nint n,m,p,tot=0,nop[N],all[N],pri[NN];\nin void init(){\n\tme(vis),me(nop),me(all);\n\tvis[1]=1;\n\tr(i,2,m){\n\t\tpri[++tot]=i;\n\t\tfor(int j=1;j<=tot&&pri[j]*i<=m;j++){\n\t\t\tvis[pri[j]*i]=1;\n\t\t\tif(i%pri[j]==0)break;\n\t\t}\n\t}\n\tr(i,1,m){\n\t\tall[i%p]++;\n\t\tif(vis[i])nop[i%p]++;\n\t}\n}\nin void deal(int *a,int *b,int *res){\n\tstatic int tmp[N];\n\tme(tmp);\n\tr(i,0,p-1){\n\t\tr(j,0,p-1){\n\t\t\ttmp[(i+j)%p]=(tmp[(i+j)%p]+1ll*a[i]*b[j]%md)%md;\n\t\t}\n\t}\n\tr(i,0,p-1)res[i]=tmp[i];\n}\nin void mul(int *a,int b){\n\tb--;\n\tstatic int res[N];\n\tr(i,0,p-1)res[i]=a[i];\n\tfor(;b;b>>=1,deal(a,a,a))if(b&1)deal(res,a,res);\n\tr(i,0,p-1)a[i]=res[i];\n}\nint main(){\n\tre(n),re(m),re(p);\n\tinit();\n\tmul(nop,n),mul(all,n);\n\tprintf(\"%d\\n\",(all[0]-nop[0]+md)%md);\n\treturn 0;\n}\n\n\n\n```\n\u5f53\u7136\u7528FFT\u4e5f\u53ef\u4ee5\u3002\n\n\u8bbeh[i]\u8868\u793a\u4e24\u4e2a\u591a\u9879\u5f0f\u76f8\u4e58\u540e\uff0c\u7684\u7ed3\u679c\u591a\u9879\u5f0f\uff0c\u7684\u7b2ci\u9879\u7684\u7cfb\u6570\uff08\u5e2e\u8bed\u6587\u4e0d\u597d\u7684\u65ad\u4e00\u4e0b\u53e5\uff09\n\u6b64\u65f6\u522b\u5fd8\u4e86\u5c06h[i+p]\u52a0\u5230h[i]\u4e0a\uff1a\nh[i]+=h[i+p].\n\n\u8fd9\u6837\u505a\u540e\u4f9d\u7136\u80fd\u5f97\u5230\u6b63\u786e\u7ed3\u679c\u7684\u539f\u56e0\u662f\uff1a\ni\u7684\u8303\u56f4\u5df2\u77e5\u662f\u5c0f\u4e8ep\u7684\uff0c\n\u6b64\u65f6i=(i+p)%p\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u5199FFT\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<stack>\n#include<algorithm>\n#include<cstring>\n#include<vector>\n#include<ctime>\n#include<map>\n#include<cstdlib>\n#include<cmath>\n#define r(i,a,b) for(int i=a;i<=b;i++)\n#define rr(i,a,b) for(int i=a;i>=b;i--)\n#define inf 0x3f3f3f3f\n#define mem(a) memset(a,0x3f,sizeof(a))\n#define re(a) a=read()\n#define pr(a) printf(\"%d\\n\",a)\n#define me(a) memset(a,0,sizeof(a))\n#define in inline\n#define ll long long\n#define db double\nusing namespace std;\nconst int N=507;\nconst int md=20170408;\nconst int M=sqrt(md);\nconst int NN=2e7+7;\nconst db pi=acos(-1.0);\ninline int read(){\n\tchar ch=getchar();\n\tint w=1,x=0;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0',ch=getchar();}\n\treturn x*w;\n}\nbool vis[NN];\nint n,m,p,tot=0,nop[N],all[N],pri[NN],limit=1,cnt=0,inv[N];\nstruct node{db x,y;}w[N],a1[N],a2[N],b1[N],b2[N];\nnode operator*(node a,node b){return (node){a.x*b.x-a.y*b.y,a.x*b.y+a.y*b.x};}\nnode operator+(node a,node b){return (node){a.x+b.x,a.y+b.y};}\nnode operator-(node a,node b){return (node){a.x-b.x,a.y-b.y};}\nin void init(){\n\tme(vis),me(nop),me(all);\n\tvis[1]=1;\n\tr(i,2,m){\n\t\tpri[++tot]=i;\n\t\tfor(int j=1;j<=tot&&pri[j]*i<=m;j++){\n\t\t\tvis[pri[j]*i]=1;\n\t\t\tif(i%pri[j]==0)break;\n\t\t}\n\t}\n\tr(i,1,m){\n\t\tall[i%p]++;\n\t\tif(vis[i])nop[i%p]++;\n\t}\n}\nin void ftt(node *t,int type){\n\tr(i,0,limit-1){\n\t\tif(i<inv[i])swap(t[i],t[inv[i]]);\n\t}\n\tfor(int mid=1;mid<limit;mid<<=1){\n\t\tfor(int R=mid<<1,j=0;j<limit;j+=R){\n\t\t\tr(k,0,mid-1){\n\t\t\t\tnode wn=(node){w[limit/mid*k].x,w[limit/mid*k].y*type};\n\t\t\t\tnode x=t[j+k],y=wn*t[j+k+mid];\n\t\t\t\tt[j+k]=x+y,t[j+k+mid]=x-y;\n\t\t\t}\n\t\t}\n\t}\n\tif(type==1)return;\n\tr(i,0,limit-1)t[i].x/=1.0*limit;\n}\nin void deal(int *a,int *b,int *res){\n\tr(i,0,limit)a1[i]=a2[i]=b1[i]=b2[i]=(node){0,0};\n\tr(i,0,p-1){\n\t\ta[i]%=md,b[i]%=md;\n\t\ta1[i].x=1.0*(a[i]/M);\n\t\tb1[i].x=1.0*(a[i]%M);\n\t\ta2[i].x=1.0*(b[i]/M);\n\t\tb2[i].x=1.0*(b[i]%M);\n\t}\n\tftt(a1,1),ftt(a2,1),ftt(b1,1),ftt(b2,1);\n\tr(i,0,limit-1){\n\t\tnode tmp1=a1[i]*a2[i],tmp2=b1[i]*b2[i];\n\t\ta1[i]=a1[i]*b2[i],a2[i]=a2[i]*b1[i];\n\t\ta2[i]=a1[i]+a2[i];\n\t\ta1[i]=tmp1,b1[i]=tmp2;\n\t}\n\tftt(a1,-1),ftt(a2,-1),ftt(b1,-1);\n\tstatic int tmp[N];\n\tr(i,0,(p-1)<<1){\n\t\ttmp[i]=0;\n\t\ttmp[i]=(tmp[i]+1ll*(ll)(a1[i].x+0.5)%md*M%md*M%md)%md;\n\t\ttmp[i]=(tmp[i]+1ll*(ll)(a2[i].x+0.5)%md*M%md)%md;\n\t\ttmp[i]=(tmp[i]+1ll*(ll)(b1[i].x+0.5)%md)%md;\n\t\ttmp[i]=(tmp[i]+md)%md;\n\t}\n\tr(i,0,p-1)res[i]=(tmp[i]+tmp[i+p])%md;\n}\nin void mul(int *a,int b){\n\tb--;\n\tstatic int res[N];\n\tr(i,0,p-1)res[i]=a[i];\n\tfor(;b;b>>=1,deal(a,a,a))if(b&1)deal(res,a,res);\n\tr(i,0,p-1)a[i]=res[i];\n}\nint main(){\n\tre(n),re(m),re(p);\n\tinit();\n\twhile(limit<=(p<<1))limit<<=1,cnt++;\n\tr(i,0,limit-1)inv[i]=(inv[i>>1]>>1)|((i&1)<<(cnt-1));\n\tfor(int i=1;i<=limit;i<<=1){\n\t\tr(k,0,i-1)w[limit/i*k]=(node){cos(pi*k/i),sin(pi*k/i)};\n\t}\n\tmul(nop,n),mul(all,n);\n\tprintf(\"%d\\n\",(all[0]-nop[0]+md)%md);\n\treturn 0;\n}\n\n\n\n```\n~~\u53ea\u4e0d\u8fc7\u8fd9FFT\u8dd1\u7684\u6bd4\u66b4\u529b\u8981\u6162~~\n~~\u8c01\u8ba9\u865a\u6570\u7684\u8fd0\u7b97\u6162\u7684~~\n\n\u4e0d\u8fc7\u5982\u679c\u672c\u9898\u6570\u636e\u8303\u56f4\u53d8\u62101<p<=1e5\n\u90a3\u7ed3\u679c\u5c31\u4e0d\u4e00\u6837\u4e86\uff0c~~\u66b4\u529b\u76f4\u63a5\u53bb\u6b7b\u628a~~\n\u4f46\u8003\u573a\u4e0a\u8fd8\u662f\u80fd\u6253\u66b4\u529b\u6253\u66b4\u529b\uff0c~~\u5c3d\u91cf\u5c11\u7528\u9ad8\u7ea7\u7b97\u6cd5~~\n\n\u53e6\u8bf4\u4e00\u53e5:\u5982\u679c\u6a21\u6570\u662f\u8d28\u6570\uff0c\u90a3\u6700\u597d\u7528NTT\uff0c\u8fd9\u4e2a\u53ef\u4e0d\u662f\u4e00\u822c\u7684\u5feb\uff0cp<=1e5\u7684\u8bdd......",
        "postTime": 1564039869,
        "uid": 112856,
        "name": "yangshurong",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3702 \u3010[SDOI2017]\u5e8f\u5217\u8ba1\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6709\u90a3\u4e48\u96be\uff1f\uff1f\uff1f\uff1f\n\n~~\u63d0\u4f9b\u4e00\u4e2a\u540a\u6253std\u7684\u505a\u6cd5~~\n\n\u76f4\u63a5\u4ee4$dp[i][j][0/1]$\u8868\u793a\u524d$i$\u4e2a\u6570\u7684\u548c\u6a21$p$\u4e3a$j$\uff0c\u4e14\u8fd9$i$\u4e2a\u6570\u4e2d\u6ca1\u6709/\u6709\u8d28\u6570\u7684\u65b9\u6848\u6570\u3002\n\u5148\u60f3\u4e00\u4e0b\u66b4\u529b\uff0c\u679a\u4e3e\u7b2c$i$\u4e2a\u6570\u662f\u54ea\u4e00\u4e2a\uff0c\u7136\u540e\u6839\u636e\u8fd9\u4e2a\u6570\u662f\u5426\u662f\u8d28\u6570\u8f6c\u79fb\u5373\u53ef\u3002\u590d\u6742\u5ea6$O(nmp)$\u3002\n\n\u4f18\u5316\uff1a\n\u53d1\u73b0$n \\leqslant 10 ^ 9$\uff0c\u5c31\u80fd\u60f3\u5230\u591a\u9879\u5f0f\u5feb\u901f\u5e42\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u5206\u56db\u79cd\u60c5\u51b5\u8ba8\u8bba\u3002\u56e0\u4e3a$p$\u5f88\u5c0f\uff0c\u66b4\u529b\u4e58\u5c31\u80fd\u8fc7\uff0c\u590d\u6742\u5ea6$O(m +  p^ 2 logn)$\uff08$O(m)$\u662f\u7b5b\u8d28\u6570\u590d\u6742\u5ea6\uff09\u3002\n\n\u8fd9&emsp;\u9898&emsp;\u5c31&emsp;\u6ca1&emsp;\u4e86\u3002\n\n\uff08\u771f\u7684\u5e0c\u671b\u6709\u66f4\u591a\u7684\u4eba\u80fd\u770b\u5230\u8fd9\u4e2a\u7b80\u5355\u7684\u505a\u6cd5\uff09\n```c++\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<cstdlib>\n#include<cctype>\n#include<queue>\n#include<vector>\n#include<ctime>\n#include<assert.h>\nusing namespace std;\n#define enter puts(\"\")\n#define space putchar(' ')\n#define Mem(a, x) memset(a, x, sizeof(a))\n#define In inline\n#define forE(i, x, y) for(int i = head[x], y; (y = e[i].to) && ~i; i = e[i].nxt)\ntypedef long long ll;\ntypedef double db;\nconst int INF = 0x3f3f3f3f;\nconst db eps = 1e-8;\nconst int maxs = 105;\nconst int maxm = 2e7 + 5;\nconst int maxp = 105;\nconst ll mod = 20170408; \nIn ll read()\n{\n\tll ans = 0;\n\tchar ch = getchar(), las = ' ';\n\twhile(!isdigit(ch)) las = ch, ch = getchar();\n\twhile(isdigit(ch)) ans = (ans << 1) + (ans << 3) + ch - '0', ch = getchar();\n\tif(las == '-') ans = -ans;\n\treturn ans;\n}\nIn void write(ll x)\n{\n\tif(x < 0) putchar('-'), x = -x;\n\tif(x >= 10) write(x / 10);\n\tputchar(x % 10 + '0');\n}\nIn void MYFILE()\n{\n#ifndef mrclr\n\tfreopen(\"ha.in\", \"r\", stdin);\n\tfreopen(\"ha.out\", \"w\", stdout);\n#endif\n}\n\nint n, m, p;\n\nIn ll inc(ll a, ll b) {return a + b < mod ? a + b : a + b - mod;}\n\nint prm[maxm], v[maxm];\nIn void init()\n{\n\tfor(int i = 2; i < maxm; ++i)\n\t{\n\t\tif(!v[i]) v[i] = i, prm[++prm[0]] = i;\n\t\tfor(int j = 1; j <= prm[0] && i * prm[j] < maxm; ++j)\n\t\t{\n\t\t\tv[i * prm[j]] = prm[j];\n\t\t\tif(i % prm[j] == 0) break;\n\t\t}\n\t}\n}\n\nll f[maxp][2], g[maxp][2], c[maxp][2];\nIn void mul(ll a[][2], ll b[][2], bool flg)\n{\n\tMem(c, 0);\n\tfor(int i = 0; i < p; ++i)\n\t\tfor(int j = 0; j < p; ++j)\n\t\t{\n\t\t\tint t = i + j < p ? i + j : i + j - p;\n\t\t\tc[t][0] = inc(c[t][0], a[i][0] * b[j][0] % mod);\n\t\t\tc[t][1] = inc(c[t][1], a[i][1] * b[j][0] % mod);\n\t\t\tc[t][1] = inc(c[t][1], a[i][0] * b[j][1] % mod);\n\t\t\tc[t][1] = inc(c[t][1], a[i][1] * b[j][1] % mod);\n\t\t}\n\tmemcpy(a, c, sizeof(c));\n}\nIn ll Quickpow(int n)\n{\n\tf[0][0] = 1;\n\tfor(int i = 1; i <= m; ++i) ++g[i % p][v[i] == i];\n\tfor(; n; n >>= 1, mul(g, g, 0))\n\t\tif(n & 1) mul(f, g, 1);\n\treturn f[0][1];\n}\n\nint main()\n{\n//\tMYFILE();\n\tinit();\n\tn = read(), m = read(), p = read();\n\twrite(Quickpow(n)), enter;\n\treturn 0;\n}\n```",
        "postTime": 1562159289,
        "uid": 55965,
        "name": "mrclr",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3702 \u3010[SDOI2017]\u5e8f\u5217\u8ba1\u6570\u3011"
    },
    {
        "content": "\n~~\u4e0d\u662f\u5f88\u4f1a\u7528Markdown,\u8bf7\u5927\u5bb6\u89c1\u8c05~~\n\n\u975emarkdown\u6392\u7248\u5730\u5740:[\u6233\u6211\u4f20\u9001](http://www.cnblogs.com/GoldenPotato/p/8810695.html)\n\n------------\n\n\n\u770b\u5230\u8fd9\u9053\u9898,\u6211\u4eec\u4e0d\u59a8\u5148\u8003\u8651\u4e00\u4e0b20\u5206\u600e\u4e48\u641e\n\n\u60f3\u5230\u66b4\u529b,\u672c\u849f\u84bb\u7b2c\u4e00\u53cd\u5e94\u5c31\u662fdfs,\u60f3\u6cd5\u4e5f\u5f88\u7b80\u5355:\n\n\u679a\u4e3en\u4e2a\u6570\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570,\u679a\u4e3e\u5b8c\u6bcf\u4e00\u79cd\u60c5\u51b5\u90fd\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u6ee1\u8db3\u8981\u6c42\n\n\u590d\u6742\u5ea6**O\uff08n^m\uff09**\n\n\n\u663e\u7136,\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u4e00\u5206\u90fd\u5f97\u4e0d\u5230,\u4f46\u662f\u53ef\u4ee5\u4f5c\u4e3a\u5bf9\u62cd\u7528\u7684\u66b4\u529b\u7a0b\u5e8f\n\n \n \n\n------------\n\n\n\u65e2\u7136dfs\u884c\u4e0d\u901a\u4e86,\u90a3\u6211\u4eec\u6362\u4e2a\u60f3\u6cd5\u5427,\u8003\u8651\u4e00\u4e0b\u7528dp\u6765\u641e\u8fd9\u4e2a\u95ee\u9898\n\n\u8bbe f[i][j] \u8868\u793a\u9009\u5230\u7b2ci\u4e2a\u6570,\u524di\u4e2a\u6570\u7684\u603b\u548c%p\u4e3aj\n\n\u8f6c\u79fb\u4e5f\u5f88\u597d\u5199\n\n\u6211\u4eec\u679a\u4e3e\u4e00\u4e0b\u4e0a\u4e00\u4e2a\u6570\u5b57\u662f\u5565\u5c31\u597d\n\n\n#### f[i][j]= sigma f[i-1][((j-k)%p+p)%p]   k:[1,m] i:[1,n] j:[0,p-1] \n\n\u6ce8\u610f\u4e00\u4e0b: j-k\u6709\u53ef\u80fd\u662f\u8d1f\u6570,\u6240\u4ee5\u8981\u7528\u8d1f\u6570\u53d6\u6a21\u7684\u65b9\u6cd5\n\n\u521d\u59cb\u5316 **f[0][0]=1** (\u6ca1\u6709\u6570\u5b57\u65f6,\u4ec5\u6709\u603b\u548c\u4e3a0\u7684\u60c5\u51b5\u6709\u4e00\u79cd\u53ef\u884c\u65b9\u6cd5)\n\n\u9898\u76ee\u8981\u6c42\u7684\u6709\u8d28\u6570\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u5bb9\u65a5\u5c31\u53ef\u4ee5\u4e86\n\n\u6211\u4eec\u518d\u505a\u4e00\u4e2a\u6ca1\u6709\u8d28\u6570\u7684dp,\u8f6c\u79fb\u65b9\u7a0b\u8ddf\u4e0a\u9762\u4e00\u6837,\u4ec5\u9700\u8981\u4fdd\u8bc1 k \u4e0d\u4e3a\u8d28\u6570\u5c31\u884c\n\n\u6700\u540e\u5c06\u4e24\u8005\u7684i\u4e3an,j\u4e3a0\u7684\u72b6\u6001\u76f8\u51cf\u5c31\u662f\u6700\u540e\u7b54\u6848\u4e86.\n\n\u65f6\u95f4\u590d\u6742\u5ea6 **O(n*p*m)**,20\u5206\n\n \n\n------------\n\n\n\u63a5\u4e0b\u6765,\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e2a\u5f88\u5999\u7684\u4f18\u5316\n\n\u6211\u4eec\u53d1\u73b0\u4e0a\u9762\u7684\u8f6c\u79fb\u65b9\u7a0b\n\nf[i][j]= sigma f[i][((j-k)%p+p)%p]   k:[1,m]\n\ni:[1,n] j:[0,p-1] \n\n**j\u662f\u4ece0~p-1\u7684,\u800ck\u662f\u4ece1~m\u7684**\n\n\u8fd9\u8bf4\u660e\u4e86,f[i-1][j]\u4e2d\u7684\u67d0\u4e9b\u9879\u662f\u4f1a**\u91cd\u590d\u8ba1\u7b97**\u5230\u4e0b\u4e00\u4e2a\u72b6\u6001\u7684\n\n\u8fd9\u6837\u5b50,\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u505a\u4e00\u4e2a\u9884\u5904\u7406,\u51cf\u5c11\u91cd\u590d\u8ba1\u7b97\u9020\u6210\u7684\u65f6\u95f4\u7684\u6d6a\u8d39\n\n\u8003\u8651\u8fd9\u6837\u505a:\n\n\u6211\u4eec\u901a\u8fc7\u4e00\u4e2aO(m)\u7684\u9884\u5904\u7406,\u8ba1\u7b97\u51fa\u6bcf\u4e00\u4e2a\u4ece0~p-1\u7684\u6570\u53ef\u80fd\u4ece\u591a\u5c11\u4e2a1~m\u4e2d\u7684\u6570%p\u8ba1\u7b97\u800c\u5f97\n\n\u7528\u4e00\u4e2atot[k]\u5b58\u50a8\u4e0b\u6765,tot[k]\u7684\u610f\u4e49\u4e3a:1~m\u7684\u6570%p\u4e3ak\u7684\u6709\u591a\u5c11\u4e2a\n\n\u90a3\u4e48\u8fd9\u6837\u5b50,\u6211\u4eec\u7684\u8f6c\u79fb\u65b9\u7a0b\u53ef\u4f18\u5316\u6210\u8fd9\u6837\u5b50\n\n#### f[i][j]= sigma f[i][((j-k)%p+p)%p]*tot[k]   k:[0,p-1]\n\n#### i:[1,n] j:[0,p-1] \n\n\u56e0\u4e3a (j-k)%p = j%p - k%p;\n\n\u6240\u4ee5\u8bf4,\u6bcf\u4e00\u4e2af[i-1][j%p - k%p]\u88ab\u7b97\u7684\u6b21\u6570\u4ec5\u4e0e\u6709\u591a\u5c11\u4e2a K1%p=K2%p=K3%p=....\u6709\u5173\n\n\u6211\u4eec\u53ef\u4ee5\u8bbeK1%p=K2%p=K3%p=...=y\n\n\u539f\u5f0f\u5c31\u53ef\u4ee5\u53d8\u4e3af[i][j]=sigma f[i][j%p-y]*tot[y] \n\n\u800ctot[y]\u5df2\u5728\u524d\u9762\u7684\u9884\u5904\u7406\u89e3\u51b3\u4e86\n\n\u8fd9\u6837,\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u6210\u529f\u7684\u964d\u4e3a\u4e86:**O(np^2)\n**\n\n~~\u7136\u800c\u5e76\u6ca1\u6709\u4ec0\u4e48\u5375\u7528,\u56e0\u4e3a\u51fa\u9898\u8005\u5e76\u6ca1\u6709\u8bbe\u8ba1\u8fd9\u4e00\u6863\u7684\u5206~~\n \n\n\u6211\u4eec\u518d\u8003\u8651\u4e00\u4e2a\u4f18\u5316\n\nf[i][j]= sigma f[i][((j-k)%p+p)%p]*tot[k]   k:[0,p-1]\n\ni:[1,n] j:[0,p-1] \n\n\u539f\u8f6c\u79fb\u5f0f\u662f\u4e0d\u662f\u6709\u4e00\u4e2a\u7279\u5f81?\u5bf9,\u90a3\u5c31\u662f\u5f0f\u5b50\u662f\u56fa\u5b9a\u6b7b\u7684,\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u7528\u77e9\u9635\u4f18\u5316\u81f3**O(p^3log n)**\n\n\u8fd9\u79cd\u7c7b\u578b\u7684\u8f6c\u79fb\u77e9\u9635\u6211\u79f0\u4e3a\"\u4e00\u5c42\u5c42\"\u7684\u8f6c\u79fb,\u53ef\u4ee5\u8003\u8651\u8fd9\u6837\u5217\u8f6c\u79fb\u77e9\u9635\n\n![\u8f6c\u79fb\u77e9\u9635](https://cdn.luogu.com.cn/upload/pic/17319.png)\n\n\n\n\u7136\u540e\u5c31OK\u5566\n\n\n------------\n#### \u4ee5\u53ca\u5199\u5f97\u5f88\u4e11\u7684Code\n```cpp\n//Luogu P3702 [SDOI2017]\u5e8f\u5217\u8ba1\u6570\n//Apr,11th,2018\n//\u77e9\u9635\u52a0\u901fDP\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nlong long read()\n{\n\tlong long x=0,f=1; char c=getchar();\n\twhile(!isdigit(c)){if(c=='-') f=-1;c=getchar();}\n\twhile(isdigit(c)){x=x*10+c-'0';c=getchar();}\n\treturn x*f;\n}\nconst int P=100+10;\nconst int M=20000000+100;\nconst int poi=20170408;\nstruct MAT\n{\n\tint x,y;\n\tlong long a[P][P];\n\tMAT (int tx,int ty)\n\t{\n\t\tx=tx,y=ty;\n\t\tmemset(a,0,sizeof a);\n\t}\n\tfriend MAT operator * (MAT A,MAT B)\n\t{\n\t\tMAT ans=MAT(B.x,A.y);\n\t\tfor(int i=1;i<=ans.y;i++)\n\t\t\tfor(int j=1;j<=ans.x;j++)\n\t\t\t\tfor(int k=1;k<=A.x;k++)\n\t\t\t\t{\n\t\t\t\t\tans.a[i][j]+=A.a[i][k]*B.a[k][j];\n\t\t\t\t\tif(ans.a[i][j]>=poi) ans.a[i][j]%=poi;\n\t\t\t\t}\n\t\treturn ans;\n\t}\n};\nMAT FastPow(MAT a,int b)\n{\n\tif(b==1) return a;\n\tMAT ans=FastPow(a,b/2);\n\tans=ans*ans;\n\tif(b%2==1) ans=ans*a;\n\treturn ans;\n}\nint n,m,p,tot[P];\nbool IsPrime[M];\nint prime[M],p_tot;\nvoid GetPrime()\n{\n\tmemset(IsPrime,1,sizeof IsPrime);\n\tIsPrime[0]=IsPrime[1]=0;\n\tfor(int i=2;i<=m;i++)\n\t{\n\t\tif(IsPrime[i]==true) prime[++p_tot]=i;\n\t\tfor(int j=1;j<=p_tot and prime[j]*i<=m;j++)\n\t\t{\n\t\t\tIsPrime[prime[j]*i]=false;\n\t\t\tif(i%prime[j]==0) break;\n\t\t}\n\t}\n}\nint main()\n{\n\tn=read(),m=read(),p=read();\n\t\n\tfor(int i=1;i<=m;i++)\n\t\ttot[i%p]++;\n\tGetPrime();\n\tMAT A=MAT(p,p);\n\tfor(int i=1;i<=p;i++)\n\t\tfor(int j=1;j<=p;j++)\n\t\t\tA.a[i][j]=tot[((i-j)%p+p)%p];\n\tMAT B=MAT(1,p);\n\tfor(int i=1;i<=p;i++)\n\t\tB.a[i][1]=tot[i-1];\n\tlong long ans=(FastPow(A,n-1)*B).a[1][1];\n\t\n\tmemset(tot,0,sizeof tot);\n\tfor(int i=1;i<=m;i++)\n\t\tif(IsPrime[i]==false)\n\t\t\ttot[i%p]++;\n\tfor(int i=1;i<=p;i++)\n\t\tfor(int j=1;j<=p;j++)\n\t\t\tA.a[i][j]=tot[((i-j)%p+p)%p];\n\tfor(int i=1;i<=p;i++)\n\t\tB.a[i][1]=tot[i-1];\n\tans-=(FastPow(A,n-1)*B).a[1][1];\n\t\n\tprintf(\"%lld\",(ans%poi+poi)%poi);\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1523542959,
        "uid": 52563,
        "name": "GoldenPotato137",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3702 \u3010[SDOI2017]\u5e8f\u5217\u8ba1\u6570\u3011"
    },
    {
        "content": "### Description\n\nAlice \u60f3\u8981\u5f97\u5230\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\uff0c\u5e8f\u5217\u4e2d\u7684\u6570\u90fd\u662f\u4e0d\u8d85\u8fc7 $m$ \u7684\u6b63\u6574\u6570\uff0c\u800c\u4e14\u8fd9 $n$ \u4e2a\u6570\u7684\u548c\u662f $p$ \u7684\u500d\u6570\u3002\n\n\nAlice \u8fd8\u5e0c\u671b\uff0c\u8fd9 $n$ \u4e2a\u6570\u4e2d\uff0c\u81f3\u5c11\u6709\u4e00\u4e2a\u6570\u662f\u8d28\u6570\u3002\n\n\nAlice \u60f3\u77e5\u9053\uff0c\u6709\u591a\u5c11\u4e2a\u5e8f\u5217\u6ee1\u8db3\u5979\u7684\u8981\u6c42\u3002\n\n### Analysis\n\n\u4e00\u4e2a\u590d\u6742\u5ea6 $O(p^{2}\\log_{2}n+m)$ \u7684 rubbish \u505a\u6cd5\u3002\n\n\u9996\u5148\u80af\u5b9a\u628a\u7b54\u6848\u5e8f\u5217\u653e\u5728\u6a21 $p$ \u610f\u4e49\u4e0b\u3002\n\n\u7136\u540e\u7ed9\u51fa\u539f\u95ee\u9898\u7684\u751f\u6210\u51fd\u6570\uff1a$G(x)$ \u7684 $x^{i}$ \u7cfb\u6570\u4e3a $n=1$ \u65f6 $\\bmod p=i$ \u7684\u7b54\u6848\uff0c\u7136\u540e $G^{n}(x)$ \u5c31\u4e3a\u7b54\u6848\u7684\u751f\u6210\u51fd\u6570\u4e86\u3002\n\n\u7531\u4e8e\u8fd9\u9898\u7684 $p$ \u5c0f\u98de\u4e86\u6240\u4ee5\u76f4\u63a5\u66b4\u529b\u4e58\u6cd5\u5373\u53ef\u8fde NTT \u90fd\u4e0d\u7528\u2026\u2026\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#define mod ( 20170408 )\n\ntypedef long long LL;\n\nconst int MAXM = 2e7 + 5, MAXP = 100 + 5;\n\nint add ( const int a, const int b, const int p ) { return a + b < p ? a + b : a + b - p; }\nint sub ( const int a, const int b, const int p ) { return a - b < 0 ? a - b + p : a - b; }\nint mul ( const LL a, const LL b, const int p ) { return a * b % p; }\n\nstruct Poly { int as[MAXP]; Poly () { memset ( as, 0, sizeof ( as ) ); } } ar, ia;\n\nint n, m, p;\nbool tag[MAXM];\n\nPoly times ( const Poly a, const Poly b ) {\n\tPoly ret;\n\tfor ( int i = 0; i < p; ++ i ) {\n\t\tfor ( int j = 0; j < p; ++ j )\tret.as[(i + j) % p] = add ( ret.as[(i + j) % p], mul ( a.as[i], b.as[j], mod ), mod );\n\t}\n\treturn ret;\n}\n\nvoid sieve ( const int L ) {\n\tstatic int pSet[MAXM], psc;\n\ttag[1] = 1;\n\tfor ( int i = 2; i <= L; ++ i ) {\n\t\tif ( ! tag[i] )\tpSet[++ psc] = i;\n\t\tfor ( int j = 1; j <= psc && ( LL )i * pSet[j] <= L; ++ j ) {\n\t\t\ttag[i * pSet[j]] = 1;\n\t\t\tif ( i % pSet[j] == 0 )\tbreak;\n\t\t}\n\t}\n}\n\nPoly cpow ( Poly bas, int idx ) {\n\tPoly res = bas;\n\twhile ( idx ) {\n\t\tif ( idx & 1 )\tres = times ( res, bas );\n\t\tif ( idx >>= 1 )\tbas = times ( bas, bas );\n\t}\n\treturn res;\n}\n\nint main () {\n\tscanf ( \"%d%d%d\", &n, &m, &p ), sieve ( m );\n\tfor ( int i = 1; i <= m; ++ i ) {\n\t\tar.as[i % p] ++;\n\t\tif ( tag[i] )\tia.as[i % p] ++;\n\t}\n\tprintf ( \"%d\\n\", sub ( cpow ( ar, n - 1 ).as[0], cpow ( ia, n - 1 ).as[0], mod ) );\n\treturn 0;\n}\n```",
        "postTime": 1609135741,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3702 \u3010[SDOI2017]\u5e8f\u5217\u8ba1\u6570\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.com.cn/problem/P3702)\u770b\u9898\u76ee\u3002  \n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u76f4\u63a5\u8ba1\u7b97\u7b54\u6848\u7684\u8bdd\u5f88\u96be\uff0c\u6240\u4ee5\u8003\u8651\u8ba1\u7b97\u5168\u90e8\u65b9\u6848\u4e4b\u540e\u51cf\u53bb\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\uff0c\u4e5f\u5c31\u662f\u53ea\u6709\u5408\u6570\u7684\u65b9\u6848\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u663e\u7136\u53ef\u4ee5\u4f7f\u7528$DP$\u89e3\u51b3\u8fd9\u6837\u7684\u95ee\u9898\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$f(i,j)$\uff1a\u957f\u5ea6\u4e3a$i$\u7684\u6570\u5217\u4e2d\u6ee1\u8db3\u548c\u6a21$p$\u4e3a$j$\u7684**\u603b\u6570\u91cf**\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$g(i,j)$\uff1a\u957f\u5ea6\u4e3a$i$\u7684\u6570\u5217\u4e2d\u6ee1\u8db3\u548c\u6a21$p$\u4e3a$j$\u4e14**\u6570\u5b57\u5168\u4e3a\u5408\u6570\u603b\u6570\u91cf**\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8bbe$P$\u4e3a\u8d28\u6570\u96c6\u3002\u9884\u5904\u7406\u51fa$h(i)=\\sum_{j=1}^m[j\\equiv i\\mod p],q(i)=\\sum_{j=1}^m[j\\equiv i\\mod p\\land j\\not\\in P]$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8f6c\u79fb\u5373\u4e3a\uff1a  \n$$f(i,j)=\\sum_{k=0}^ph((j-k)\\mod p)f(i-1,k)$$  \n$$g(i,j)=\\sum_{k=0}^pq((j-k)\\mod p)g(i-1,k)$$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u66b4\u529b\u505a\u662f$O(np^2)$\u7684\uff0c\u94c1\u5b9a\u8d85\u65f6\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651$DP$\u4f18\u5316\u3002\u4ee5\u4e0b\u6709\u4e09\u79cd\u65b9\u6cd5\uff1a  \n### \u77e9\u9635\u52a0\u901f  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u770b\u5230$p$\u5f88\u5c0f\u800c$n$\u5f88\u5927\uff0c\u6211\u4eec\u4fbf\u60f3\u5230\u4e86\u77e9\u9635\u52a0\u901f\u7684\u505a\u6cd5\u3002\u4ee5$f$\u7684\u8f6c\u79fb\u4e3a\u4f8b\uff0c\u6784\u9020\u521d\u59cb\u77e9\u9635\u4e3a\uff1a  \n$$\\begin{bmatrix}f(0)\\\\f(1)\\\\f(2)\\\\\\vdots\\\\f(p-1)\\end{bmatrix}$$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8f6c\u79fb\u77e9\u9635\u4e3a\uff1a  \n$$\\begin{bmatrix}h(0)&h(1)&h(2)&\\dots&h(p-1)\\\\h(p-1)&h(0)&h(1)&\\dots&h(p-2)\\\\h(p-2)&h(p-1)&h(0)&\\dots&h(p-3)\\\\\\vdots&\\vdots&\\vdots&\\ddots&\\vdots\\\\h(1)&h(2)&h(3)&\\dots&h(0)\\end{bmatrix}$$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$g$\u7684\u521d\u59cb\u77e9\u9635\u548c\u8f6c\u79fb\u77e9\u9635\u7c7b\u4f3c\u3002\u65f6\u95f4\u662f$O(p^3\\log_2n)$\u3002  \n\n### \u66b4\u529b\u5377\u79ef  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u53d1\u73b0\u8f6c\u79fb\u548c\u5377\u79ef\u6bd4\u8f83\u7c7b\u4f3c\u3002\u4f46\u662f\u5b83\u4eec\u7684\u533a\u522b\u5728\u4e8e\u5faa\u73af\u7684\u4e0a\u754c\u4e0d\u540c\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651\u628a$f$\u548c$h$\u5377\u8d77\u6765\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a$2\\times p-1$\u9879\u7684\u5411\u91cf\u3002\u7136\u800c\uff0c\u5b9e\u9645\u4e0a$[p,2\\times p-1]$\u7684\u90e8\u5206\u7684\u7ed3\u679c\u5728\u771f\u6b63\u7684\u8f6c\u79fb\u4e2d\u5e94\u8be5\u88ab\u7d2f\u52a0\u56de$[0,p)$\u8fd9\u4e2a\u8303\u56f4\u53bb\u3002\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u81ea\u5df1\u52a8\u624b\u628a\u8d85\u51fa\u8303\u56f4\u7684\u9879\u7d2f\u52a0\u56de\u53bb\u5373\u53ef\u3002\u5916\u9762\u5957\u4e0a\u53bb\u4e00\u4e2a\u5feb\u901f\u5e42\uff0c\u65f6\u95f4\u5c31\u662f$O(p^2\\log_2n)$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~~\u6240\u4ee5\u77e9\u9635\u52a0\u901f\u610f\u4e49\u4e0d\u660e\u5440......~~  \n\n### $FFT/NTT$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u770b\u5230\u4e86\u5411\u91cf\u7684\u5377\u79ef\u4e4b\u540e\uff0c\u6211\u4eec\u628a\u66b4\u529b\u7684\u90e8\u5206\u6362\u6210$FFT/NTT$\u3002$FFT$\u662f\u4e00\u6b21\u8fd0\u7b97\u5b8c\u4e4b\u540e\u8fdb\u884c\u53d6\u6a21\uff0c$NTT$\u5199\u4efb\u610f\u6a21\u6570\u3002\u4e00\u6b21\u5377\u79ef\u5b8c\u4e86\u4e4b\u540e\u540c\u6837\u8981\u628a\u8d85\u51fa\u8303\u56f4\u7684\u9879\u7d2f\u52a0\u56de\u53bb\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5916\u9762\u5957\u4e00\u4e2a\u5feb\u901f\u5e42\uff0c\u65f6\u95f4\u662f$O(p\\log_2p\\log_2n)$\u3002  \n# \u4ee3\u7801\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u53ea\u6709\u77e9\u9635\u52a0\u901f\u7684......\n```cpp\n#include <cstdio>\n#include <cstring>\n\nconst int mod = 20170408;\nconst int MAXP = 105, MAXM = 2e7 + 5;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n    x = 0;char s = getchar();int f = 1;\n    while( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n    while( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n    x *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n    if( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n    if( 9 < x ){ write( x / 10 ); }\n    putchar( x % 10 + '0' );\n}\n\nstruct matrix\n{\n\tint mat[MAXP][MAXP], n, m;\n\tmatrix() { n = m = 0, memset( mat, 0, sizeof mat ); }\n\tmatrix( const int N, const int M ) { n = N, m = M, memset( mat, 0, sizeof mat ); }\n\tint * operator [] ( const int indx ) { return mat[indx]; }\n\tmatrix operator * ( matrix b ) const\n\t{\n\t\tmatrix ret( n, b.m );\n\t\tfor( int i = 1 ; i <= ret.n ; i ++ )\n\t\t\tfor( int j = 1 ; j <= ret.m ; j ++ )\n\t\t\t\tfor( int k = 1 ; k <= m ; k ++ )\n\t\t\t\t\tret[i][k] = ( ret[i][k] + 1ll * mat[i][j] * b[j][k] % mod ) % mod;\n\t\treturn ret;\n\t}\n}A, B, C;\n\nint buk[MAXP], comb[MAXP];\nint prime[MAXM], pn;\nint N, M, P;\nbool isPrime[MAXM];\n\nint fix( const int x, const int m ) { return ( x % m + m ) % m; }\nmatrix I( const int n ) { matrix ret = matrix( n, n ); for( int i = 1 ; i <= n ; i ++ ) ret[i][i] = 1; return ret; }\n\nvoid EulerSieve( const int siz )\n{\n\tisPrime[1] = true;\n\tfor( int i = 2 ; i <= siz ; i ++ )\n\t{\n\t\tif( ! isPrime[i] ) prime[++ pn] = i;\n\t\tfor( int j = 1 ; j <= pn && 1ll * i * prime[j] <= siz ; j ++ )\n\t\t{\n\t\t\tisPrime[i * prime[j]] = true;\n\t\t\tif( ! ( i % prime[j] ) ) break;\n\t\t}\n\t}\n}\n\nmatrix qkpow( matrix base, int indx )\n{\n\tmatrix ret = I( base.n );\n\twhile( indx )\n\t{\n\t\tif( indx & 1 ) ret = ret * base;\n\t\tbase = base * base, indx >>= 1;\n\t}\n\treturn ret;\n}\n\nsigned main()\n{\n\tread( N ), read( M ), read( P );\n\tEulerSieve( M );\n\tA = matrix( 1, P );\n\tA[1][1] = 1;\n\tB = C = matrix( P, P );\n\tfor( int i = 1 ; i <= M ; i ++ ) \n\t\tbuk[i % P] = ( buk[i % P] + 1 ) % mod, comb[i % P] = ( comb[i % P] + isPrime[i] ) % mod;\n\tfor( int i = 1 ; i <= P ; i ++ ) \n\t\tfor( int j = 1 ; j <= P ; j ++ )\n\t\t\tB[i][j] = buk[fix( j - i, P )],\n\t\t\tC[i][j] = comb[fix( j - i, P )];\n\tmatrix partB = qkpow( B, N ), partC = qkpow( C, N );\n\tint a = ( A * partB )[1][1], b = ( A * partC )[1][1];\n\twrite( fix( a - b, mod ) ), putchar( '\\n' );\n\treturn 0;\n}\n```",
        "postTime": 1576733034,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[SDOI2017]\u5e8f\u5217\u8ba1\u6570"
    },
    {
        "content": "\u77e9\u4e58\u53ef\u4ee5\u5199\u6210\u5faa\u73af\u77e9\u9635 \u8fd9\u6837\u77e9\u4e58\u5c11\u4e00\u4e2a\u7ef4\u5ea6\no(p^2*logn+m)\u8fd9\u5e94\u5f53\u8bf4\u662fdp\u77e9\u9635\u4f18\u5316\u7684\u6700\u4f18\u505a\u6cd5\uff08\u6ca1\u627e\u5230\u66f4\u4f18\u7684\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define maxn 105\n#define N 20000005 \n#define ll long long\n#define mod 20170408\nstruct matrix{ll a[maxn][maxn],n,m;};\nll n,m,prime[10000000],cnt[maxn],cnt0[maxn],sum=0,cx[maxn],p;bool isprime[N];\nmatrix jc(matrix u,matrix v){\n    matrix c;c.n=u.n,c.m=v.m;memset(c.a,0,sizeof(c.a));\n    for(int i=1;i<=u.m;i++)for(int k=1;k<=u.n;k++)c.a[1][i]+=u.a[k][i]*v.a[1][k],c.a[1][i]%=mod;\n    for(int i=2;i<=c.n;i++){for(int j=2;j<=c.m;j++)c.a[i][j]=c.a[i-1][j-1];c.a[i][1]=c.a[i-1][p];}\n    return c;\n}\nmatrix ksm(matrix a,ll x){\n    matrix ans;ans.n=a.n,ans.m=a.m;memset(ans.a,0,sizeof(ans.a));for(int i=1;i<=a.n;i++)ans.a[i][i]=1;\n    for(;x;x>>=1){\n        if(x&1)ans=jc(ans,a);\n        a=jc(a,a);\n    }return ans;\n}\nvoid shai(){\n    for(int i=2;i<N;i++){\n        if(!isprime[i])prime[++sum]=i;\n        for(int j=1;j<=sum&&i*prime[j]<N;j++){\n            isprime[i*prime[j]]=1;\n            if(i%prime[j]==0)break;\n        }\n    }\n}\nint main(){shai();isprime[1]=1;\n    cin>>n>>m>>p;\n    for(int i=1;i<=m;i++){\n        cnt[i%p]++;if(isprime[i])cnt0[i%p]++;\n    }matrix x,y,u,v;x.n=p,y.n=p,y.m=1,x.m=1;memset(u.a,0,sizeof(u.a));memset(y.a,0,sizeof(y.a));memset(x.a,0,sizeof(x.a));memset(v.a,0,sizeof(v.a));\n    u.n=u.m=v.n=v.m=p;\n    for(int i=1;i<=p;i++)x.a[i][1]=cnt[i-1];\n    for(int i=1;i<=p;i++)y.a[i][1]=cnt0[i-1];\n    for(int i=2;i<=p;i++)u.a[1][p-i+2]=cnt[i-1];u.a[1][1]=cnt[0];\n    for(int i=2;i<=p;i++){for(int j=2;j<=p;j++)u.a[i][j]=u.a[i-1][j-1];u.a[i][1]=u.a[i-1][p];}\n    for(int i=2;i<=p;i++)v.a[1][p-i+2]=cnt0[i-1];v.a[1][1]=cnt0[0];\n    for(int i=2;i<=p;i++){for(int j=2;j<=p;j++)v.a[i][j]=v.a[i-1][j-1];v.a[i][1]=v.a[i-1][p];}\n    v=ksm(v,n-1);u=ksm(u,n-1);\n    x=jc(x,u),y=jc(y,v);\n    cout<<(x.a[1][1]-y.a[1][1]+mod)%mod<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1554213815,
        "uid": 61523,
        "name": "zhengzhi726",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3702 \u3010[SDOI2017]\u5e8f\u5217\u8ba1\u6570\u3011"
    },
    {
        "content": "# \u4e00\u4e2a\u4f18\u5316\n\n\u6b64\u9898p<=100,\u7528O(m+p^3logn) \u7684\u7b97\u6cd5\u662f\u80fd\u8fc7\u7684\n\n\u4f46\u662f\u5982\u679cp<=1000\u5462\uff1f\n\n\u6ce8\u610f\u5230\uff0c\u7528\u6765\u505a\u5feb\u901f\u5e42\u7684\u77e9\u9635\u6709\u4e00\u4e2a\u7279\u70b9\uff1a\n\n\u7b2ci\u884c\u7684\u6570\u662f\u7531\u7b2ci-1\u884c\u5411\u53f3\u79fb\u52a8\u4e00\u683c\u5f97\u5230\u7684\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528p^2\u7684\u65f6\u95f4\u7b97\u51fa\u7b2c\u4e00\u884c\uff0c\u7136\u540e\u518d\u7528p^2\u65f6\u95f4\u628a\u7b2c\u4e00\u884c\u79fb\u5230\u6574\u4e2a\u77e9\u9635\u3002\n\u8fd9\u6837\uff0c\u5355\u6b21\u4e58\u6cd5\u65f6\u95f4\u662fp^2,\u603b\u65f6\u95f4O(m+p^2logn)\u3002\n\n\n\u8be6\u60c5\u89c1\u4ee3\u7801\uff1a\n\n\n\n\n```\nstruct matrix\n{\n  int n, m;\n  long long s[105][105];\n}\nmatrix kmatmul(matrix a, matrix b)\n{\n  int i, j, k, n = a.n;\n  matrix ans;\n  ans.n = ans.m = n;\n  for(i = 1; i <= n; i++)\n    for(j = 1; j <= n; j++)\n      ans.s[i][j] = 0;\n  for(i = 1; i <= n; i++)\n    for(k = 1; k <= n; k++)\n      ans.s[1][i]  = (ans.s[1][i] + a.s[1][k] * b.s[k][i]) % 20170408;\n  for(i = 2; i <= n; i++)\n    for(j = 1; j <= n; j++)\n      ans.s[i][j] = ans.s[i - 1][(j - 2 + n) % n + 1];\n  return ans;\n}\n```\n\n\u6ce8\u610f\uff1a\n\uff081\uff09\u6b64\u65b9\u6cd5\u53ea\u5bf9\u4e8e\u6709\u4e0a\u8ff0\u6027\u8d28\u7684\u77e9\u9635\u4f7f\u7528\n\n\uff082\uff09p=1000\u65f6\uff0c\u4e00\u4e2amatrix\u7684\u6570\u636e\u91cf\u8fbe\u5230\u4e861e6,\u65e0\u6cd5\u653e\u5728\u51fd\u6570\u5185\uff0c\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u7b49\u3002\uff08\u8fd9\u548c\u9012\u5f52\u7206\u6808\u662f\u4e00\u4e2a\u539f\u7406\uff09\u3002\u6240\u4ee5\u8981\u628akmatmul\u51fd\u6570\u5b9a\u4e49\u4e3a\n```\nvoid kmatmul()\n```\n\u7136\u540e\u518d\u5916\u9762\u7528\u5168\u5c40\u53d8\u91cf\u505a\u4fee\u6539\u3002",
        "postTime": 1533992240,
        "uid": 47140,
        "name": "\u65af\u8302",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3702 \u3010[SDOI2017]\u5e8f\u5217\u8ba1\u6570\u3011"
    }
]