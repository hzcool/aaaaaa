[
    {
        "content": "\u60a8\u4eec\u8fd9\u4e2a\u83ab\u961f\u2026\u2026\u6bcf\u6b21\u79fb\u52a8\u5de6\u53f3\u7aef\u70b9\u65f6\u627e\u65b0\u7684\u7b54\u6848\u90a3\u90e8\u5206\u2026\u2026\u4e00\u4f1a$O(1)$\u4e00\u4f1a$O(n)$\u2026\u2026\u590d\u6742\u5ea6\u6211\u4e0d\u4f1a\u8bc1\u554a\u2026\u2026\n\n\u4e8e\u662f\u2026\u2026\n\n## \u4e00\u4e2a\u4e0d\u7528\u83ab\u961f\u7684\u9898\u89e3\uff01\n\n\u4ece\u5de6\u5f80\u53f3\u626b\u4e00\u904d\uff0c\u5728\u6743\u503c\u7ebf\u6bb5\u6811\uff08\u8981\u53ef\u6301\u4e45\u5316\u4e00\u4e0b\uff09\u4e0a\u4fee\u6539\u5f53\u524d\u6743\u503c\u5bf9\u5e94\u7684\u201c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u201d\u4e3a\u5f53\u524d\u4f4d\u7f6e\u3002\n\n\u67e5\u8be2\u533a\u95f4$[l, r]$\u65f6\uff0c\u7b54\u6848\u5c31\u662f\u7b2c$r$\u68f5\u7ebf\u6bb5\u6811\u4e0a\uff0c\u7b2c\u4e00\u4e2a\u201c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u201d\u5c0f\u4e8e$l$\u7684\u6743\u503c\u3002\n\n\u5176\u5b9e\u4e0d\u53ef\u6301\u4e45\u5316\u4e5f\u662f\u53ef\u4ee5\u7684\u2014\u2014\u53ea\u8981\u628a\u8be2\u95ee\u79bb\u7ebf\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\uff08\u53ef\u662f\u6211\u89c9\u5f97\u5728\u7ebf\u7b97\u6cd5\u66f4\u53ef\u7231 =v=\uff09\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <iostream>\n#include <vector>\n#define space putchar(' ')\n#define enter putchar('\\n')\ntypedef long long ll;\nusing namespace std;\ntemplate <class T>\nvoid read(T &x){\n    char c;\n    bool op = 0;\n    while(c = getchar(), c < '0' || c > '9')\n\tif(c == '-') op = 1;\n    x = c - '0';\n    while(c = getchar(), c >= '0' && c <= '9')\n\tx = x * 10 + c - '0';\n    if(op) x = -x;\n}\ntemplate <class T>\nvoid write(T x){\n    if(x < 0) putchar('-'), x = -x;\n    if(x >= 10) write(x / 10);\n    putchar('0' + x % 10);\n}\n\nconst int N = 400005, M = 5000005;\nint n, m, a[N], lst[N], idx;\nint tot, root[N], ls[M], rs[M], data[M];\n\nvoid change(int old, int &k, int l, int r, int p, int x){\n    k = ++tot;\n    ls[k] = ls[old], rs[k] = rs[old];\n    if(l == r) return (void)(data[k] = x);\n    int mid = (l + r) >> 1;\n    if(p <= mid) change(ls[old], ls[k], l, mid, p, x);\n    else change(rs[old], rs[k], mid + 1, r, p, x);\n    data[k] = min(data[ls[k]], data[rs[k]]);\n}\nint query(int k, int l, int r, int x){\n    if(!k || l == r) return lst[l];\n    int mid = (l + r) >> 1;\n    if(data[ls[k]] >= x) return query(rs[k], mid + 1, r, x);\n    return query(ls[k], l, mid, x);\n}\n\nint main(){\n\n    read(n), read(m);\n    lst[++idx] = 0;\n    for(int i = 1; i <= n; i++)\n\tread(a[i]), lst[++idx] = a[i], lst[++idx] = a[i] + 1;\n    sort(lst + 1, lst + idx + 1);\n    idx = unique(lst + 1, lst + idx + 1) - lst - 1;\n    for(int i = 1; i <= n; i++){\n        a[i] = lower_bound(lst + 1, lst + idx + 1, a[i]) - lst;\n        change(root[i - 1], root[i], 1, idx, a[i], i);\n    }\n    while(m--){\n        int l, r;\n        read(l), read(r);\n        write(query(root[r], 1, idx, l)), enter;\n    }\n\n    return 0;\n}\n```\n",
        "postTime": 1519549170,
        "uid": 8947,
        "name": "RabbitHu",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4137 \u3010Rmq Problem / mex\u3011"
    },
    {
        "content": "###\u5148\u5410\u5608\u4e00\u4e0b\n\n\u697c\u4e0b\u5927\u4f6c\u7684\u65b9\u6cd5\u8c8c\u4f3c\u6bd4\u8f83\u96be\u554a\uff0c\u53ef\u60dc\u6211\u592acai\u4e86\u770b\u4e0d\u61c2\uff0c\u5c31\u53ea\u597d\u7528\u4e86\u4e2a\u5206\u5757\uff0c\u7b97\u662f\u6bd4\u8f83~~\u6613\u61c2\u7684\u66b4\u529b~~\u5427\n###\u9898\u89e3\n\n\u60f3\u5fc5\u540c\u5b66\u4eec\u90fd\u662f\u5237\u83ab\u961f\u7684\u65f6\u5019\u4e0d\u5c0f\u5fc3\u5237\u5230\u8fd9\u9898\u7684\n\u4e3b\u8981\u8003\u8651\u600e\u4e48**\u4fee\u6539\u548c\u67e5\u8be2**\n\u7c7b\u4f3c\u503c\u57df\u7ebf\u6bb5\u6811\u7684\u601d\u60f3\uff0c\u5c06\u503c\u57df$O(0,K)$ \u8fdb\u884c\u5206\u5757\uff0c\u67e5\u8be2\u65f6\u5148\u904d\u5386\u6240\u6709\u7684\u5757\uff0c\u5982\u679c\u67d0\u4e2a\u5757\u975e\u7a7a\u90a3\u4e48\u67e5\u8be2\u8be5\u5757\uff0c\u5f53\u67e5\u8be2\u5230\u4e00\u4e2a\u6570\u5b57\u4e3a\u7a7a\u65f6\uff0c\u5373\u53efbreak\u8f93\u51fa\u7b54\u6848\uff0c\u590d\u6742\u5ea6\u4e3aO($\\sqrt k$+$\\sqrt k$)\uff0c\u4fee\u6539\u65f6\u8981\u6ce8\u610f\u5224\u65ad\u5757\u7684\u4fe1\u606f\n\n1.\u589e\u52a0\u4e00\u4e2a\u6570\u65f6\uff0c\u5982\u679c\u8be5\u6570\u4e3a\u7a7a\uff0c\u5219\u8981\u5c06\u8be5\u6570\u6240\u5728\u5757\u7684\u5143\u7d20\u4e2a\u6570\u548c\u8be5\u6570\u7684\u4e2a\u6570\u90fd+1\uff0c\u5426\u5219\u53ea\u5c06\u8be5\u6570\u7684\u4e2a\u6570+1\n\n2.\u5220\u9664\u4e00\u4e2a\u6570\u65f6\uff0c\u5982\u679c\u8be5\u6570\u5220\u9664\u540e\u4e3a\u7a7a\uff0c\u5219\u8981\u5c06\u8be5\u6570\u6240\u5728\u5757\u7684\u5143\u7d20\u4e2a\u6570\u548c\u8be5\u6570\u7684\u4e2a\u6570\u90fd-1\uff0c\u5426\u5219\u53ea\u5c06\u8be5\u6570\u7684\u4e2a\u6570-1\n\n\u7ec6\u8282\uff1a\n\u8003\u8651\u5230\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u533a\u95f4\u662f$(0,1,2,3,......N-1)$ \u56e0\u6b64\u6700\u5927\u7b54\u6848\u4e5f\u662fN\uff0c\u6240\u4ee5A_i>=1e9\u662f\u7528\u6765\u641e\u7b11\u7684\uff0c\u5c06\u6240\u6709\u5927\u4e8e\u7b49\u4e8eN+1\u7684\u6570\u4fee\u6539\u4e3aN+1\u5c31\u53ef\u4ee5\u4e86\n###\u4ee3\u7801\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int _=200005;\nconst int K=448;\ninline int read()\n{\n    char ch='!';int z=1,num=0;\n    while(ch!='-'&&(ch<'0'||ch>'9'))ch=getchar();\n    if(ch=='-')z=-1,ch=getchar();\n    while(ch<='9'&&ch>='0')num=(num<<3)+(num<<1)+ch-'0',ch=getchar();\n    return z*num;\n}\nint n,m,kuai[_],a[_];\nstruct hand{int l,r,id;}ask[_];\nbool cmp(hand A,hand B)\n{\n    if(kuai[A.l]==kuai[B.l])return A.r<B.r;\n    return kuai[A.l]<kuai[B.l];\n}\nint num[500],cnt[_],ans[_];\nvoid add(int x)\n{\n    if(!cnt[x])num[x/K]++;\n    cnt[x]++;\n}\nvoid del(int x)\n{\n    if(cnt[x]==1)num[x/K]--;\n    cnt[x]--;\n}\nvoid Query(int x)\n{\n    for(int i=1;i<=K;i++)\n    {\n        if(num[i-1]!=K)\n        {\n            for(int j=(i-1)*K;j<i*K;j++)\n            {\n                if(!cnt[j])\n                {\n                    ans[ask[x].id]=j;return;\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    n=read();m=read();\n    int len=sqrt(n);\n    for(int i=1;i<=n;i++)\n    {\n        a[i]=min(read(),n+1);\n        kuai[i]=(i-1)/len+1;\n    }\n    for(int i=1;i<=m;i++)\n        ask[i].l=read(),ask[i].r=read(),ask[i].id=i;\n    sort(ask+1,ask+1+m,cmp);\n    int l=ask[1].l,r=ask[1].r;\n    for(int i=l;i<=r;i++)\n        add(a[i]);\n    Query(1);\n    for(int i=2;i<=m;i++)\n    {\n        while(l<ask[i].l)del(a[l++]);\n        while(l>ask[i].l)add(a[--l]);\n        while(r<ask[i].r)add(a[++r]);\n        while(r>ask[i].r)del(a[r--]);\n        Query(i);\n    }\n    for(int i=1;i<=m;i++)\n        printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n\n```\n",
        "postTime": 1521244409,
        "uid": 47901,
        "name": "\u9f99\u795e\u54c8\u8fea\u65af",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4137 \u3010Rmq Problem / mex\u3011"
    },
    {
        "content": "\u8003\u8651\u5efa\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u6743\u503c\u5728\u539f\u6570\u7ec4\u4e2d\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4e0b\u6807\u3002\u5bf9\u4e8e\u67e5\u8be2\u64cd\u4f5c $[l,r]$ \uff0c\u53ef\u4ee5\u53d6\u51fa\u53f3\u7aef\u70b9\u6240\u5bf9\u5e94\u7684\u4e3b\u5e2d\u6811\uff0c\u5e76\u5728\u6811\u4e0a\u4e8c\u5206\u67e5\u627e\u4e0b\u6807\u5c0f\u4e8e $l$ \u7684\u6700\u5c0f\u6743\u503c\u5373\u4e3a\u7b54\u6848\u3002\n\n\u6743\u503c\u7684\u503c\u57df\u5f88\u5927\uff0c\u9700\u8981\u8fdb\u884c\u79bb\u6563\u5316\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u53ea\u5bf9 $\\lbrace a_n \\rbrace$ \u6570\u7ec4\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u800c\u8f93\u51fa\u7684\u7b54\u6848\uff08\u672a\u51fa\u73b0\u7684\u81ea\u7136\u6570\uff09\u4e0d\u4e00\u5b9a\u662f $\\lbrace a_n \\rbrace$ \u6570\u7ec4\u4e2d\u7684\u503c\u3002\u7136\u800c\u4e0d\u96be\u53d1\u73b0\uff0c\u672a\u51fa\u73b0\u7684\u6700\u5c0f\u81ea\u7136\u6570\u53ea\u6709\u53ef\u80fd\u662f $0$ \u6216\u662f $a_i+1$\uff0c\u56e0\u6b64\u53ea\u9700\u5bf9\u5143\u7d20 $0$ \u3001 $a_i$ \u3001 $a_i+1$ \u8fdb\u884c\u79bb\u6563\u5316\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define id(x) (lower_bound(b + 1, b + L + 1, x) - b)\n#define rid(x) (b[x])\nusing namespace std;\nconst int MAXN = 200005 * 2;\n\nstruct Node {\n\tint l, r, val;\n}node[MAXN * 22];\nint cnt, head[MAXN];\n\nint N, M, L;\nint a[MAXN];\nint b[MAXN];\n\ninline void build(Node& u, int l, int r) {\n\tu.val = 0;\n\tif (l == r) return;\n\tint mid = (l + r) >> 1;\n\tbuild(node[u.l = ++cnt], l, mid);\n\tbuild(node[u.r = ++cnt], mid + 1, r);\n}\n\ninline void insert(Node& u, Node c, int l, int r, int p, int val) {\n\tif (l == r) {\n\t\tu.val = val;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tif (p <= mid) {\n\t\tinsert(node[u.l = ++cnt], node[c.l], l, mid, p, val);\n\t\tu.r = c.r;\n\t}\n\telse {\n\t\tinsert(node[u.r = ++cnt], node[c.r], mid + 1, r, p, val);\n\t\tu.l = c.l;\n\t}\n\tu.val = min(node[u.l].val, node[u.r].val);\n}\n\ninline int query(Node u, int l, int r, int val) {\n\tif (l == r) return l;\n\tint mid = (l + r) >> 1;\n\tif (node[u.l].val < val) return query(node[u.l], l, mid, val);\n\treturn query(node[u.r], mid + 1, r, val);\n}\n\nint main() {\n\tscanf(\"%d%d\", &N, &M);\n\tfor (register int i = 1; i <= N; ++i)\n\t\tscanf(\"%d\", &a[i]), b[++L] = a[i], b[++L] = a[i] + 1;\n\tb[++L] = 0;\n\tsort(b + 1, b + L + 1);\n\tL = unique(b + 1, b + L + 1) - b - 1;\n\tbuild(node[head[0] = ++cnt], 1, L);\n\tfor (register int i = 1; i <= N; ++i) {\n\t\tinsert(node[head[i] = ++cnt], node[head[i - 1]], 1, L, id(a[i]), i);\n\t}\n\tfor (register int i = 1; i <= M; ++i) {\n\t\tint l, r;\n\t\tscanf(\"%d%d\", &l, &r);\n\t\tprintf(\"%d\\n\", rid(query(node[head[r]], 1, L, l)));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1563502971,
        "uid": 116851,
        "name": "_\u98ce\u4f11\u4f4f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4137 \u3010Rmq Problem / mex\u3011"
    },
    {
        "content": "\u6211\u89c9\u5f97\u5728\u7ebf\u7b97\u6cd5\u4e0d\u53ef\u7231\uff0c\u6240\u4ee5\u5199\u4e86\u79bb\u7ebf\u7b97\u6cd5\u3002\n\n\u5047\u5982\u6211\u4eec\u8981\u6c42\u7684\u533a\u95f4\u5de6\u7aef\u70b9\u57281\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u8f6c\u6362\u95ee\u9898:\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5b57\uff0c\u7ed9\u5b83\u9644\u4e0a\u5b83\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u7684\u6743\u503c\u3002\n\n\u90a3\u4e48\uff0c\u7b54\u6848\u5c31\u662f:\n\n\u6c42\u6700\u5927\u7684\u6570$t$\uff0c\u4f7f\u5f97$\\max\\limits_{i=0}^{t-1} p[i]\\le r$\n\n$p[i]$\u5c31\u662f$i$\u8fd9\u4e2a\u6570\u7684\u6743\u503c\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u7528\u4e8c\u5206\u7b80\u5355\u6c42\u51fa\u3002\n\n\u7136\u540e\u5c31\u662f\u5de6\u7aef\u70b9\u4e0d\u56fa\u5b9a\u7684\u60c5\u51b5\u3002\u52a0\u5165\u6211\u4eec\u8981\u5c06\u505a\u77ed\u70b9\u53f3\u79fb\u4e00\u4f4d\uff0c\u5982\u679c\u6211\u4eec\u6c42\u51fa\u4e86\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u4e0b\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u6570\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u6539\u5230\u4e0b\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ea\u9700\u8981\u9884\u5904\u7406\u6bcf\u4e2a\u6570\u521d\u6b21\u51fa\u73b0\u4f4d\u7f6e\u548c\u4e0b\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\uff0c\u7136\u540e\u652f\u6301\u5355\u70b9\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\u6700\u5927\u503c\u5c31\u53ef\u4ee5\u4e86\u3002\u6211\u4eec\u9009\u62e9\u4e86\u7ebf\u6bb5\u6811\u3002\n\n\u5982\u679c\u6bcf\u6b21\u4e8c\u5206\u540e\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u4e0a\u67e5\u8be2\uff0c\u5219\u8be5\u7b97\u6cd5\u662f$O(n+qlog^2n)$\u7684\u3002\u7136\u800c\u53ef\u4ee5\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u4e3a$O(n+qlogn)$\u3002(\u6240\u4ee5\u4e5f\u53ef\u4ee5\u5f53\u4f5c\u7ebf\u6bb5\u6811\u4e8c\u5206\u7684\u6a21\u677f\u9898)\n\n\u4ee3\u7801:\n\n```cpp\n#include<bits/stdc++.h>\n#define For(i,a,b) for(i=(a),i##end=(b);i<=i##end;++i)\n#define Forward(i,a,b) for(i=(a),i##end=(b);i>=i##end;--i)\n#define Rep(i,a,b) for(register uint32 i=(a),i##end=(b);i<=i##end;++i)\n#define Repe(i,a,b) for(register uint32 i=(a),i##end=(b);i>=i##end;--i)\n#define Chkmax(a,b) a=a>b?a:b\n#define Chkmin(a,b) a=a<b?a:b\n#define pb push_back\nusing uint32=unsigned int;\nusing uint64=unsigned long long;\nusing namespace std;\ntemplate<typename T>inline void read(T &x){\n    T s=0,f=1;char k=getchar();\n    while(!isdigit(k)&&k^'-')k=getchar();\n    if(!isdigit(k)){f=-1;k=getchar();}\n    while(isdigit(k)){s=s*10+(k^48);k=getchar();}\n    x=s*f;\n}\n\ntemplate<typename T>inline void write(T x,char ed='\\n')\n{\n    static int sta[111],tp;\n    if(!x){putchar('0'),putchar(ed);return;}\n    for(tp=0;x;x/=10)sta[++tp]=x%10;\n    for(;tp;putchar(sta[tp--]^48));\n    putchar(ed);\n}\n\nvoid file(void){\n    #ifndef ONLINE_JUDGE\n    freopen(\"water.in\",\"r\",stdin);\n    freopen(\"water.out\",\"w\",stdout);\n    #endif\n}\nconst uint32 MAXN=2e5+7;\n\nstatic uint32 n,m,w[MAXN];\n\nstatic uint32 fp[MAXN],nxt[MAXN];\n\nnamespace Segment_Tree\n{\n\tstatic uint32 p[MAXN<<2];\n\n\tvoid modif(uint32 h,uint32 l,uint32 r,uint32 x,uint32 z)\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\tp[h]=z;\n\t\t\treturn;\n\t\t}\n\t\tstatic uint32 mid;mid=(l+r)>>1;\n\t\tx<=mid?modif(h<<1,l,mid,x,z):modif(h<<1|1,mid+1,r,x,z);\n\t\tp[h]=max(p[h<<1],p[h<<1|1]);\n\t}\n\n\tinline uint32 query(int x,int y)\n\t{\n\t\tstatic uint32 h,l,r,mid,mx;mx=0;h=l=1;r=n;\n\t\twhile(l<r)\n\t\t{\n\t\t\tmid=(l+r)>>1;\n\t\t\tif(y-x+1>=mid && max(p[h<<1],mx)<=y)\n\t\t\t\tChkmax(mx,p[h<<1]),h=h<<1|1,l=mid+1;\n\t\t\telse h<<=1,r=mid;\n\t\t}\n\t\treturn l-1;\n\t}\n}\nusing namespace Segment_Tree;\n\nstatic struct quer\n{\n\tint l,r,id;\n\tfriend bool operator<(quer a,quer b){return a.l<b.l;}\n}q[MAXN];\n\ninline void init()\n{\n\tread(n);read(m);\n\tmemset(p,0x3f,sizeof p);\n\tRep(i,1,n)\n\t{\n\t\tread(w[i]);++w[i];\n\t\tif(w[i]<=n)\n\t\t{\n\t\t\tif(fp[w[i]])nxt[fp[w[i]]]=i;\n\t\t\telse modif(1,1,n,w[i],i);\n\t\t\tfp[w[i]]=i;\n\t\t}\n\t}\n\tRep(i,1,m)read(q[i].l),read(q[i].r),q[i].id=i;\n}\n\nstatic uint32 ans[MAXN];\n\ninline void solve()\n{\n\tsort(q+1,q+m+1);\n\tstatic uint32 ps=0;\n\tw[0]=1e9;\n\tRep(i,1,m)\n\t{\n\t\tfor(;ps<q[i].l;++ps)if(w[ps]<=n)\n\t\t\tmodif(1,1,n,w[ps],nxt[ps]?nxt[ps]:p[0]);\n\t\tans[q[i].id]=query(q[i].l,q[i].r);\n\t}\n\tRep(i,1,m)printf(\"%u\\n\",ans[i]);\n}\n\nint main(void)\n{\n    file();\n    init();\n    solve();\n    return 0;\n}\n```",
        "postTime": 1529582867,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4137 \u3010Rmq Problem / mex\u3011"
    },
    {
        "content": "### CDQ!!!\n\n\u8fd9\u9053\u9898\u663e\u7136\u6709\u4e00\u4e2a\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u6211\u4eec\u610f\u8bc6\u5230\u8fd9\u4e2a\u6781\u5e7f\u7684\u503c\u57df\u6ca1\u6709\u4ec0\u4e48\u7528\u5904\u3002\n\n\u6211\u4eec\u9996\u5148\u60f3\u5230\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a$\\ x$\u4f7f\u7b54\u6848\u4e3a$\\ x$\u6216\u8005$\\ [1,x-1]$\u4e2d\u7684\u6700\u5c0f\u7684\u4e0d\u5b58\u5728\u7684\u6570\u5b57\u3002\n\n\u6240\u4ee5\u9996\u5148\u6211\u4eec\u60f3\u5230\u627e\u5230\u8fd9\u4e2a$\\ x$\u7136\u540e\u628a\u6ca1\u6709\u5fc5\u8981\u7684\u6570\u5b57\u5168\u90e8\u5220\u6389\uff0c\u8fd9\u6837\u5269\u4e0b\u7684\u6570\u5b57\u5fc5\u7136\u518d$\\ [1,n]$\u4e2d\u3002\n\n\u4e4b\u540e\u6211\u4eec\u60f3\u5230\u5c06$\\ a_{i}$\u5728$\\ i$\u70b9\u5b58\u5728\u8f6c\u6362\u4e3a$\\ a_{i}$\u5728$\\ [1,i-1],[i+1,n]$\u4e2d\u4e0d\u5b58\u5728\uff0c\u8bbe$\\ i$\u7684\u4e24\u4e2a\u503c\u4e3a$\\ q=i-1,w=i+1$\uff0c\u8fd9\u6837\u4efb\u610f\u8be2\u95ee$\\ [l,r]$\u5c31\u662f$\\ q \\ge r$\u6216\u8005$\\ w \\le l$\u7684\u6570\u5b57\u4e2d\u7684\u6700\u5c0f\u503c\u3002\u8fd9\u663e\u7136\u662f\u4e00\u4e2a\u4e00\u7ef4\u504f\u5e8f\u95ee\u9898\uff0c\u90a3\u4e48\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u8be2\u95ee\u770b\u505a\u4e24\u4e2a\uff0c\u76f4\u63a5\u6876\u6392\u5e8f\u5373\u53ef\u3002\u590d\u6742\u5ea6$\\ O(n)$\n\n\u5b9e\u9645\u4e0a\u8fd9\u79cd\u65b9\u6cd5\u4ec5\u9650\u4e8e\u503c\u7684\u4e24\u4e24\u4e0d\u540c\u3002\n\n\u5982\u679c\u76f8\u540c\u7684\u503c\u662f\u5b58\u5728\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u5c06\u95ee\u9898\u6539\u53d8\u3002\u663e\u7136\u5982\u679c\u540c\u65f6\u5b58\u5728\u4e24\u4e2a\u503c\u76f8\u540c$\\ a_{i}=a_{j},i<j$\uff0c\u90a3\u4e48\u663e\u7136\u4e3a$\\ a_{i}$\u5728$\\ [1,i-1],[i+1,j-1],[j+1,n]$\u4e0d\u5b58\u5728\uff0c\u6211\u4eec\u5c06\u5176\u62c6\u4e3a\u4e09\u4e2a\u64cd\u4f5c\uff0c$\\ q_{1}=1\uff0cw_{1}=i-1,q_{2}=i+1,w_{2}=j-1,q_{3}=j+1,w_{3}=n$\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee$\\ [l,r]$\uff0c\u5373$\\ q \\le l$\u4e14$\\ w \\ge r$\u7684\u6700\u5c0f\u503c\u3002\u90a3\u4e48\u6211\u4eec\u5148\u6309\u7167$\\ q$\u6216\u8005$\\ l$\u6392\u5e8f\uff0ccdq\u4e2d\u6309\u7167$\\ r$\u6216\u8005$\\ w$\uff0c\u7136\u540e\u6c42\u89e3\u5373\u53ef\u3002$\\ O(n \\log_{2}{n})$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n    char ch = getchar(); int x = 0;\n    while (!isdigit(ch)) ch = getchar();\n    while (isdigit(ch)){ x = x*10+ch-'0'; ch = getchar(); }\n    return x;\n}\nint n,a[300300],b[300300],m,xxx,tot=0,head,tail,ans[200200];\nstruct nobe\n{\n\tint op,l,r,w,id;\n}q[600600],tmp[600600];\ninline bool cmp(nobe a,nobe b)\n{\n\treturn (a.l^b.l) ? (a.l<b.l) : (a.op<b.op);\n}\ninline void cdq(int l,int r)\n{\n\tif(l==r) return ;\n\tint mid=(l+r)>>1;\n\tcdq(l,mid);\n\tcdq(mid+1,r);\n\tint i=l,j=mid+1,ccnt=0,sum=999999999;\n\twhile(j<=r)\n\t{\n\t\twhile((q[i].r>=q[j].r)&&(i<=mid))\n\t\t{\n\t\t\ttmp[++ccnt]=q[i];\n\t\t\tif(q[i].op&1)\n\t\t\t{\n\t\t\t\tsum=min(sum,q[i].w);\n\t\t\t}\n\t\t\t++i;\n\t\t}\n\t\ttmp[++ccnt]=q[j];\n\t\tif(q[j].op^1)\n\t\t{\n\t\t\tans[q[j].id]=min(ans[q[j].id],sum);\n\t\t}\n\t\t++j;\n\t}\n\twhile(i<=mid)\n\t{\n\t\ttmp[++ccnt]=q[i];\n\t\t++i;\n\t}\n\ti=1;\n\twhile(i<=ccnt)\n\t{\n\t\tq[l+i-1]=tmp[i];\n\t\t++i;\n\t}\n}\nint main()\n{\n\tmemset(b,0,sizeof(b));\n\tn=read();\n\tm=read();\n\tint i=1;\n\twhile(i<=n)\n\t{\n\t\ta[i]=read();\n\t\tif(a[i]<=n) ++b[a[i]];\n\t\t++i;\n\t}\n\ti=-1;\n\twhile(i<=n)\n\t{\n\t\tif(b[i+1]) ++i;\n\t\telse break;\n\t}\n\txxx=i+1;\n\ti=0;\n\twhile(i<xxx)\n\t{\n\t\tb[i]=0;\n\t\t++i;\n\t}\n\ti=1;\n\twhile(i<=n)\n\t{\n\t\tif(a[i]<xxx)\n\t\t{\n\t\t\tif((i^1)&&(b[a[i]]^i-1))\n\t\t\t{\n\t\t\t\tq[++tot]=(nobe){1,b[a[i]]+1,i-1,a[i],0};\n\t\t\t}\n\t\t\tb[a[i]]=i;\n\t\t}\n\t\t++i;\n\t}\n\ti=0;\n\twhile(i<xxx)\n\t{\n\t\tif(b[i]^n) q[++tot]=(nobe){1,b[i]+1,n,i,0};\n\t\t++i;\n\t}\n\ti=1;\n\twhile(i<=m)\n\t{\n\t\tint l,r;\n\t\tl=read();\n\t\tr=read();\n\t\tans[i]=xxx;\n\t\tq[++tot]=(nobe){2,l,r,0,i};\n\t\t++i; \n\t}\n\tsort(q+1,q+tot+1,cmp);\n\tcdq(1,tot);\n\ti=1;\n\twhile(i<=m)\n\t{\n\t\tprintf(\"%d\\n\",ans[i]);\n\t\t++i;\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1570096174,
        "uid": 138391,
        "name": "orecic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4137 \u3010Rmq Problem / mex\u3011"
    },
    {
        "content": "## \u7b80\u8981\u5206\u6790\r\n\r\n\u8003\u8651\u83ab\u961f\r\n\r\n\u53ef\u4ee5\u53d1\u73b0\u5220\u9664\u64cd\u4f5c\u5341\u5206\u7b80\u5355\uff0c\u4f46\u662f\u6dfb\u52a0\u64cd\u4f5c\u96be\u4ee5\u5728 $O(1)$ \u590d\u6742\u5ea6\u505a\u5230\r\n\r\n\u8003\u8651\u53ea\u51cf\u4e0d\u52a0\u7684\u56de\u6eda\u83ab\u961f\r\n\r\n\u5148\u904d\u5386\u6574\u4e00\u4e2a\u5e8f\u5217\uff0c\u7b97\u51fa\u6574\u4e2a\u5e8f\u5217\u7684mex\r\n\r\n\u4e0e\u53ea\u52a0\u4e0d\u51cf\u7684\u56de\u6eda\u83ab\u961f\u76f8\u4f3c\uff0c\u5c06\u8be2\u95ee\u7684\u5de6\u7aef\u70b9\u6240\u5728\u7684\u5757\u4ece\u5c0f\u5230\u5927\uff0c\u53f3\u7aef\u70b9**\u4ece\u5927\u5230\u5c0f**\u6392\u5e8f\r\n\r\n\u8fd9\u6837\u7684\u8bdd\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e0d\u540c\u7684\u5757\uff0c\u53f3\u6307\u9488\u4f1a\u4ece\u6574\u4e2a\u5e8f\u5217\u7684\u672b\u5c3e\u4e0d\u65ad\u5411\u5de6\u5220\u9664\uff0c\u540c\u65f6\u5de6\u6307\u9488\u4e0d\u65ad\u5730\u56de\u6eda\u5230\u5757\u7684\u5de6\u7aef\u70b9\r\n\r\n\u5904\u7406\u5b8c\u4e00\u4e2a\u5757\u7684\u8be2\u95ee\u4e4b\u540e\uff0c\u5de6\u6307\u9488\u5fc5\u7136\u4f1a\u56de\u6eda\u5230\u5757\u7684\u5de6\u7aef\u70b9\r\n\r\n\u8fd9\u65f6\uff0c\u7c7b\u4f3c\u53ea\u52a0\u4e0d\u51cf\u7684\u56de\u6eda\u83ab\u961f\uff0c\u5148\u66b4\u529b\u5730\u628a\u53f3\u6307\u9488\u904d\u5386\u5230\u6574\u4e2a\u5e8f\u5217\u7684\u6700\u53f3\u7aef\uff0c\u7136\u540e\u5de6\u6307\u9488\u5411\u53f3\u5220\u9664\u5230\u4e0b\u4e00\u4e2a\u5757\u7684\u5de6\u7aef\u70b9\r\n\r\n\u590d\u6742\u5ea6\u662f $O(n \\sqrt n)$\uff0c\u4e0d\u660e\u767d\u7684\u8bfb\u8005\u53ef\u4ee5\u7528\u4e0a\u8ff0\u8fc7\u7a0b\u624b\u73a9\u4e00\u4e0b\u6837\u4f8b\r\n\r\n## \u5b8c\u6574\u4ee3\u7801\r\n\r\n\u968f\u624b\u5361\u4e86\u4e2a\u5e38\uff0c\u53ef\u80fd\u6bd4\u8f83\u4e11\u964b\r\n\r\n```cpp\r\n#include <bits/stdc++.h>\r\n#define ri register int\r\n#define getchar() (p1 == p2) && (p2 = (p1 = buf) + fread(buf, 1, 1 << 21, stdin), p1 == p2) ? EOF : *p1++\r\n#define N 200005\r\n#define B 448\r\nusing namespace std;\r\nchar ou[1 << 22], buf[1 << 22], *p1 = buf, *p2 = buf;\r\nint n, m, s, a[N], bel[N], cnt[N], tmp[N], ans[N], L[N / B + 5], R[N / B + 5], p3 = -1;\r\nstruct query\r\n{\r\n\tint l, r, id;\r\n\tinline bool operator<(const query &x) const\r\n\t{\r\n\t\treturn bel[l] ^ bel[x.l] ? bel[l] < bel[x.l] : r > x.r;\r\n\t}\r\n} q[N];\r\ntemplate <typename T>\r\ninline void read(T &x)\r\n{\r\n\tregister T c = getchar();\r\n\tfor (; c < 48 || 57 < c;)\r\n\t\tc = getchar();\r\n\tfor (; 48 <= c && c <= 57; c = getchar())\r\n\t\tx = (x << 3) + (x << 1) + (c ^ 48);\r\n}\r\ntemplate <typename T>\r\ninline void print(const T x)\r\n{\r\n\tif (x > 9)\r\n\t\tprint(x / 10);\r\n\tou[++p3] = x % 10 | 48;\r\n\tif (p3 > (1 << 21))\r\n\t\tfwrite(ou, 1, p3 + 1, stdout), p3 = -1;\r\n}\r\ninline int mnn(const int a, const int b)\r\n{\r\n\treturn a < b ? a : b;\r\n}\r\nsigned main()\r\n{\r\n\tread(n), read(m);\r\n\tfor (ri i = 1; i <= n; ++i)\r\n\t{\r\n\t\tread(a[i]), bel[i] = (i - 1) / B + 1;\r\n\t\tif (a[i] <= n + 1)\r\n\t\t\t++cnt[a[i]];\r\n\t}\r\n\twhile (cnt[s])\r\n\t\t++s;\r\n\tfor (ri i = 1; i <= m; ++i)\r\n\t\tread(q[i].l), read(q[i].r), q[i].id = i;\r\n\tfor (ri i = 1; i < bel[n]; ++i)\r\n\t\tL[i] = R[i - 1] + 1, R[i] = i * B;\r\n\tL[bel[n]] = R[bel[n] - 1] + 1, R[bel[n]] = n, sort(q + 1, q + 1 + m);\r\n\tfor (ri k = 1, i = 1, l, r, p; k <= bel[n]; ++k)\r\n\t{\r\n\t\tl = L[k], r = n, p = s;\r\n\t\tfor (ri t; bel[q[i].l] == k; ++i)\r\n\t\t{\r\n\t\t\tif (bel[q[i].r] == k)\r\n\t\t\t{\r\n\t\t\t\tri t = 0;\r\n\t\t\t\tfor (ri j = q[i].l; j <= q[i].r; ++j)\r\n\t\t\t\t\tif (a[j] <= n + 1)\r\n\t\t\t\t\t\t++tmp[a[j]];\r\n\t\t\t\twhile (tmp[t])\r\n\t\t\t\t\t++t;\r\n\t\t\t\tans[q[i].id] = t;\r\n\t\t\t\tfor (ri j = q[i].l; j <= q[i].r; ++j)\r\n\t\t\t\t\tif (a[j] <= n + 1)\r\n\t\t\t\t\t\t--tmp[a[j]];\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tfor (; r > q[i].r; --r)\r\n\t\t\t\tif (a[r] <= n + 1 && !--cnt[a[r]])\r\n\t\t\t\t\tp = mnn(p, a[r]);\r\n\t\t\tt = p;\r\n\t\t\tfor (; l < q[i].l; ++l)\r\n\t\t\t\tif (a[l] <= n + 1 && !--cnt[a[l]])\r\n\t\t\t\t\tt = mnn(t, a[l]);\r\n\t\t\tans[q[i].id] = t;\r\n\t\t\twhile (l > L[k])\r\n\t\t\t{\r\n\t\t\t\t--l;\r\n\t\t\t\tif (a[l] <= n + 1)\r\n\t\t\t\t\t++cnt[a[l]];\r\n\t\t\t}\r\n\t\t}\r\n\t\twhile (r < n)\r\n\t\t{\r\n\t\t\t++r;\r\n\t\t\tif (a[r] <= n + 1)\r\n\t\t\t\t++cnt[a[r]];\r\n\t\t}\r\n\t\tfor (; l < L[k + 1]; ++l)\r\n\t\t\tif (a[l] <= n + 1 && !--cnt[a[l]])\r\n\t\t\t\ts = mnn(s, a[l]);\r\n\t}\r\n\tfor (ri i = 1; i <= m; ++i)\r\n\t\tprint(ans[i]), ou[++p3] = '\\n';\r\n\tfwrite(ou, 1, p3 + 1, stdout);\r\n\treturn 0;\r\n}\r\n```\r\n",
        "postTime": 1606386564,
        "uid": 51692,
        "name": "\u706b\u8f66\u53f8\u673a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3-P4137"
    },
    {
        "content": "\u53ef\u6301\u4e45\u5316\u6743\u503c\u7ebf\u6bb5\u6811\u3002\n\n\u5bf9\u4e8e\u8bfb\u5165\u7684\u6bcf\u4e2a\u6570\uff0c\u6211\u4eec\u8bb0\u5f55\u8fd9\u4e2a\u6570\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff08\u8981\u53ef\u6301\u4e45\u5316\uff09\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5728\u7b2c $r$ \u68f5\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff0c\u627e\u5230\u6700\u5c0f\u7684\u3001\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u5728 $l$ \u5de6\u4fa7\u7684\u6570\uff0c\u8fd9\u4e2a\u6570\u5c31\u662f\u6240\u6c42\u7684\u7b54\u6848\u3002\n\n\u6ce8\u610f\u4ee3\u7801\u4e2d`minn`\u7ef4\u62a4\u7684\u662f\u8fd9\u4e2a\u533a\u95f4\u5185\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u7684\u6700\u5c0f\u503c\uff0c\u800c\u4e0d\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u3002\n\n\u5176\u4ed6\u9898\u89e3\u5c06\u503c\u57df\u8bbe\u4e3a $10^9$\u6216\u8005\u8fdb\u884c\u4e86\u79bb\u6563\u5316\uff0c\u8fd9\u6837\u662f\u6ca1\u6709\u5fc5\u8981\u7684\u3002\u5bf9\u4e8e\u5e8f\u5217\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u6570\uff08\u8bfb\u5165\u6570\u636e\u52a0\u4e00\u540e\uff09\uff0c\u5982\u679c\u5b83\u6bd4 $n$ \u8981\u5927\uff0c\u5b83\u4e00\u5b9a\u5bf9\u7b54\u6848\u65e0\u8d21\u732e\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u5ffd\u7565\u6389\u5b83\u5373\u53ef\u3002\n\n\u53e6\u5916\uff0c\u7531\u4e8e\u6211\u5728\u8bfb\u5165\u7684\u65f6\u5019\u5c06\u5e8f\u5217\u4e2d\u7684\u6570\u52a0\u4e00\uff0c\u5f53\u67e5\u8be2\u5230\u7684\u6570\u5b57\u5e94\u8be5\u662f $n+1$ \u65f6\uff08\u5373\u8be2\u95ee\u533a\u95f4\u8986\u76d6\u4e86 $1$ \u5230 $n$ \u6240\u6709\u6570\u5b57\u65f6\uff09,\u5982\u679c\u5c06\u503c\u57df\u533a\u95f4\u5b9a\u4e3a $1$ \u5230 $n$ \u4f1a\u51fa\u9519\uff0c\u5e94\u8be5\u5b9a\u4e3a $1$ \u5230 $n+1$\u3002\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<algorithm>\n#define pprint(x) ::print(x),putchar(' ')\n#define fprint(x) ::print(x),putchar('\\n')\nusing namespace std;\ninline long long read()\n{\n\tlong long x = 0;int f = 1;\n\tchar ch = getchar();\n\tfor(;!isdigit(ch);ch = getchar())\n\t\tif(ch == '-')\n\t\t\tf = -1;\n\tfor(;isdigit(ch);ch = getchar())\n\t\tx = x * 10 + (ch ^ 48);\n\treturn x * f;\n}\nvoid print(long long x)\n{\n\tif(x < 0)\n\t\tx = -x,putchar('-');\n\tif(x > 9)\n\t\tprint(x / 10);\n\tputchar(x % 10 + '0');\n}\n\nconst int N = 200010;\n\nstruct tree\n{\n\tint ls,rs;\n\tint minn;\n}t[N << 5];\nint cnt,root[N];\nvoid update(int &now,int pre,int l,int r,int pos,int val)\n{\n\tnow = ++cnt;\n\tt[now] = t[pre];\n\tif(l == r)\n\t{\n\t\tt[now].minn = val;\n\t\treturn;\n\t}\n\tint mid = l + r >> 1;\n\tif(pos <= mid)\n\t\tupdate(t[now].ls,t[pre].ls,l,mid,pos,val);\n\telse\n\t\tupdate(t[now].rs,t[pre].rs,mid + 1,r,pos,val);\n\tt[now].minn = min(t[t[now].ls].minn,t[t[now].rs].minn);\n}\nint query(int now,int l,int r,int val)\n{\n\tif(l == r)\n\t\treturn l;\n\tint mid = l + r >> 1;\n\tif(t[t[now].ls].minn < val)\n\t\treturn query(t[now].ls,l,mid,val);\n\telse\n\t\treturn query(t[now].rs,mid + 1,r,val);\n}\n\nint n,m;\n\nint main()\n{\n\tn = read(),m = read();\n \tfor(int i = 1;i <= n;i++)\n\t{\n\t\tint a = read() + 1;\n\t\tif(a > n)\n\t\t{\n\t\t\troot[i] = root[i - 1];\n\t\t\tcontinue;\n\t\t}\n\t\tupdate(root[i],root[i - 1],1,n + 1,a,i);\n\t}\n\twhile(m--)\n\t{\n\t\tint l = read(),r = read();\n\t\tfprint(query(root[r],1,n + 1,l) - 1);\n\t}\n}\n```",
        "postTime": 1583218282,
        "uid": 53994,
        "name": "81179332_",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4137 \u3010Rmq Problem / mex\u3011"
    },
    {
        "content": "\u672c\u9898\u96be\u662f\u4e0d\u96be\uff0c\u53ea\u662f~~\u6709\u70b9~~\u975e\u5e38\u5361\u5e38\u6570\u554a\u554a\u554a\n\n\u4e00\u4e0d\u5c0f\u5fc3\u5c31\u4e00\u4e24\u7248qwq\uff08\u4eba\u4e11\u5e38\u6570\u5927\u4e5f\u6709\u53ef\u80fd\uff09\n\n\u56de\u6eda\u83ab\u961f\uff1f\u4e0d\u5b58\u5728\u7684\uff0c\u76f4\u63a5\u83ab\u961f+\u503c\u57df\u5206\u5757\u5373\u53ef\n\n\u5feb\u8bfb\u5199\u5f3a\u70b9\uff0c\u5757\u5927\u5c0f\u522b\u7528sqrt\uff0c\u7528pow\u8c8c\u4f3c\u5feb\u4e00\u4e9b\n\n\u8fd8\u6709\u5757\u5927\u5c0f\u5f00\u6210$n^{0.55}+1$\u8c8c\u4f3c\u4f1a\u5feb\u4e00\u4e9b\uff0c~~\u4e0d\u8981\u95ee\u6211\u600e\u4e48\u77e5\u9053\u7684~~\n\n\u79bb\u6563\u5316\u5f53\u7136\u4e0d\u7528\u4e86\uff0c\u7b54\u6848\u6700\u5927\u5c31$n+1$\uff0c\u8bfb\u8005\u81ea\u8bc1\u4e0d\u96be\n\n\u8d34\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<cctype>\n#include<algorithm>\n\nusing namespace std;\n\n#define maxn 200022\n\ninline int read(){\n    int r=0;\n    char c=getchar();\n    while(!isdigit(c))c=getchar();\n    while(isdigit(c))r=(r<<1)+(r<<3)+(c^48),c=getchar();\n    return r;\n}\n\ninline int min(int a,int b){\n    return a<b?a:b;\n}\n\nint n,m,l,r,size,a[maxn],lb[maxn],rb[maxn],pos[maxn],cnt[maxn],tot[maxn],ans[maxn];\n\nstruct Q{\n    int l,r,num;\n    bool operator <(const Q &q) const{\n        return pos[l]^pos[q.l]?pos[l]<pos[q.l]:r<q.r;\n    }\n}q[maxn];\n\ninline void add(int x){\n    if(!cnt[a[x]])tot[pos[a[x]]]++;\n    cnt[a[x]]++;\n}\n\ninline void del(int x){\n    cnt[a[x]]--;\n    if(!cnt[a[x]])tot[pos[a[x]]]--;\n}\n\ninline int query(){\n    for(int i=1;i<=pos[n];i++){\n        if(tot[i]==rb[i]-lb[i]+1)continue;\n        for(int j=lb[i];j<=rb[i];j++)\n            if(!cnt[j])return j;\n    }\n    return n;\n}\n\nint main(){\n    n=read(),m=read();\n    size=pow(n+2,0.5);\n    for(int i=1;i<=n;i++){\n        pos[i]=(i-1)/size+1;//\u503c\u57df\u53cd\u6b63\u662f0~n+1\uff0c\u540c\u65f6+1\uff0c\u7528\u540c\u4e00\u4e2a\u5757\u5927\u5c0f\n        a[i]=min(read()+1,n+2);\n    }\n    pos[n+1]=n/size+1;\n    pos[n+2]=(n+1)/size+1;\n    n+=2;\n    for(int i=1;i<=pos[n];i++){\n        lb[i]=(i-1)*size+1;\n        rb[i]=min(lb[i]+size-1,n);\n    }\n    for(int i=1;i<=m;i++){\n        q[i].l=read(),q[i].r=read();\n        q[i].num=i;\n    }\n    sort(q+1,q+m+1);\n    l=q[1].l,r=q[1].l-1;\n    for(int i=1;i<=m;i++){\n        while(l>q[i].l)add(--l);\n        while(r<q[i].r)add(++r);\n        while(l<q[i].l)del(l++);\n        while(r>q[i].r)del(r--);\n        ans[q[i].num]=query()-1;\n    }\n    for(int i=1;i<=m;i++)\n        printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1580975119,
        "uid": 71403,
        "name": "\u4e00\u53f6\u77e5\u79cb\u3002",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4137 \u3010Rmq Problem / mex\u3011"
    },
    {
        "content": "\u4e00\u79cd\u4e0d\u592a\u96be\u60f3\u7684\u505a\u6cd5\uff1f\u4f46\u53ef\u80fd\u7801\u91cf\u5927\u4e00\u4e9b\uff1f\uff1f\uff1f\n\n\u5148\u628a\u6240\u6709\u7684\u8be2\u95ee\u6309\u7167 $l$ \u6392\u5e8f\u3002\n\n\u73b0\u5728\u8003\u8651\u5904\u7406\u51fa\u4e00\u9897\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\uff0c\u5176\u4e2d\u67d0\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u8868\u793a\u7684\u542b\u4e49\uff0c\u4e3a\uff1a\u5f53\u524d $l$ \u5230 $(l \\quad-\\quad n )$\u8fd9\u4e00\u533a\u95f4\u5185\u672a\u51fa\u73b0\u7684\u81ea\u7136\u6570\u662f\u8c01\u3002\n\n\u90a3\u4e48\u6700\u521d\u662f\u7684 $l$ \u662f $1$\uff0c\u5373\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u90fd\u8868\u793a\u4ece $1$ \u53f7\u70b9\u5230 $x$ \u70b9\u8fd9\u4e00\u6bb5\u533a\u95f4\u5185\u672a\u51fa\u73b0\u7684\u6700\u5c0f\u81ea\u7136\u6570\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8981\u5148\u5904\u7406\u51fa\u6bcf\u4e2a\u4f4d\u7f6e\u5230 $1$ \u53f7\u4f4d\u7f6e\u8fd9\u4e00\u533a\u95f4\u7684\u6700\u5c0f\u672a\u51fa\u73b0\u7684\u81ea\u7136\u6570\u3002\n\n\u8fd9\u4e2a\u5904\u7406\u53ef\u4ee5\u901a\u8fc7\u7ef4\u62a4\u6700\u5c0f\u51fa\u73b0\u6b21\u6570\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u6765\u505a\u3002\n\n\u7136\u540e\u5c06\u5904\u7406\u51fa\u6765\u7684\u7ed3\u679c\u5b58\u5165\u4e00\u4e2a\u7ebf\u6bb5\u6811\u5185\u3002\n\n\u8003\u8651\u5bf9\u4e8e $l = 1 $ \u7684\u70b9\uff0c\u5176\u7b54\u6848\u76f4\u63a5\u901a\u8fc7\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u6765\u4f5c\u67e5\u8be2\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u6309\u7167 $l$ \u6392\u5e8f\u4e86\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u7684\u6211\u4eec\u9700\u8981\u53bb\u66f4\u65b0\u7ebf\u6bb5\u6811\u7684\u5176\u4ed6\u8282\u70b9\u3002\n\n\u7136\u540e\u8003\u8651\u8ba9 $l$ \u5411\u5de6\u79fb\u52a8\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5220\u53bb\u4e00\u4e2a\u6570 $a[l]$ \u5176\u5b9e\u5c31\u662f\u8ba9\u540e\u9762\u7684\u70b9\u5bf9\u5176\u53d6 $min$\u3002\u6240\u4ee5\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u53d6 $min$ \u6807\u8bb0\u3002\n\n\u4f46\u662f\u8003\u8651\u5230\u67d0\u4e2a\u5143\u7d20\u53ef\u80fd\u91cd\u590d\u51fa\u73b0\uff0c\u6240\u4ee5\u53ef\u4ee5\u518d\u5f00\u4e00\u4e2a $vector$ \u7ef4\u62a4\u6bcf\u4e2a\u70b9\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u53d6 $min$ \u64cd\u4f5c\u5c31\u662f\u5bf9\u6b64\u70b9\u4ece\u5f53\u524d\u4f4d\u7f6e\u5230\u5176\u4e0b\u4e00\u4e2a\u51fa\u73b0\u7684\u4f4d\u7f6e\u8fd9\u4e00\u6bb5\u533a\u95f4\u5bf9 $x$ \u53d6 $min$\n\n\u5177\u4f53\u5b9e\u73b0\u4e0a\u56e0\u4e3a\u5728 $vector$ \u4e0a\u4e8c\u5206\u627e\u4f4d\u7f6e\u4e0d\u592a\u73b0\u5b9e\uff0c\u7136\u800c\u6211\u4eec\u5df2\u7ecf\u6309\u7167 $l$\u6392\u5e8f\uff0c\u6bcf\u4e2a $vector$ \u5185\u5b58\u7684\u4f4d\u7f6e\u5355\u8c03\u9012\u589e\uff0c\u6240\u4ee5\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a $fir[x]$ \u8868\u793a\u5f53\u524d\u7684\u8fd9\u4e2a\u6743\u503c\u6240\u5bf9\u5e94\u7684 $vector$ \u5230\u4e86\u90a3\u4e2a\u70b9\uff0c\u6bcf\u6b21\u66f4\u65b0\u5b8c\u540e$++ fir$\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint read() {\n\tchar cc = getchar(); int cn = 0, flus = 1;\n\twhile(cc < '0' || cc > '9') {  if( cc == '-' ) flus = -flus;  cc = getchar();  }\n\twhile(cc >= '0' && cc <= '9')  cn = cn * 10 + cc - '0', cc = getchar();\n\treturn cn * flus;\n}\nconst int N = 2e5 + 5;\n#define rep( i, s, t ) for( register int i = s; i <= t; ++ i )\n#define ls(x) ( x * 2 )\n#define rs(x) ( x * 2 + 1 )\n#define Size \n#define inf 123456789\nstruct Tree { int l, r, mi, mark; }tr[N * 4], t[N * 4];\nstruct Q { int l, r, id, ans; }q[N];\nvector< int> vec[N];\nint a[N], n, m, fir[N], cnt;\nbool cmp( Q x, Q y ) {\n\treturn ( x.l == y.l ) ? x.r < y.r : x.l < y.l ;\n} \nbool cmp2( Q x, Q y ) {\n\treturn x.id < y.id;\n}\n// \u6743\u503c\u7ebf\u6bb5\u6811 \nvoid insert1( int x, int l, int r, int wh ) {\n\tif( l == r ) { ++ tr[x].mi; return ; }; \n\tint mid = ( l + r ) >> 1;\n\tif( mid >= wh ) insert1( ls(x), l, mid, wh );\n\telse insert1( rs(x), mid + 1, r, wh );\n\ttr[x].mi = min( tr[ls(x)].mi, tr[rs(x)].mi ); //\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u51fa\u73b0\u6b21\u6570 \n}\nint Query1( int x, int l, int r ) {\n\tif( l == r ) return l;\n\tint mid = ( l + r ) >> 1;\n\tif( !tr[ls(x)].mi ) return Query1( ls(x), l, mid ); // \u5982\u679c\u5de6\u513f\u5b50\u5185\u6700\u5c0f\u51fa\u73b0\u6b21\u6570\u4e3a0\uff0c\u5f80\u5de6\u513f\u5b50\u8d70 \n\telse return Query1( rs(x), mid + 1, r ); // \u5426\u5219\u5f80\u53f3\u513f\u5b50\u8d70 \n}\n// \u7ebf\u6bb5\u6811 \nvoid pushmark( int x ) { //\u533a\u95f4\u53d6min\u7684\u4e0b\u4f20 \n\tif( t[x].mark != inf ) {\n\t\tt[ls(x)].mark = min( t[ls(x)].mark, t[x].mark );\n\t\tt[ls(x)].mi = min( t[ls(x)].mi, t[ls(x)].mark );\n\t\tt[rs(x)].mark = min( t[rs(x)].mark, t[x].mark );\n\t\tt[rs(x)].mi = min( t[rs(x)].mi, t[rs(x)].mark ); \n\t}\n}\nvoid Ins( int x, int l, int r, int wh, int val ) {\n\tt[x].mark = inf ; //\u6ce8\u610fmark\u521d\u59cb\u5316\u4e3ainf  \n\tif( l == r ) { t[x].mi = val; return ;}\n\tint mid = ( l + r ) >> 1 ;\n\tif( mid >= wh ) Ins( ls(x), l, mid, wh, val );\n\telse Ins( rs(x), mid + 1, r, wh, val );\n\tt[x].mi = min( t[ls(x)].mi, t[rs(x)].mi ); // \u7ebf\u6bb5\u6811\u540c\u6837\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u65b9\u4fbf\u53d6min\u64cd\u4f5c \n}\n\nvoid Cover( int x, int l, int r, int ll, int rr, int val ) {\n\tif( ll <= l && r <= rr ) { \n\t\tt[x].mark = min( t[x].mark, val ) ; //\u53d6min \n\t\tt[x].mi = min( t[x].mi, t[x].mark ) ;\n\t\treturn ; \n\t}\n\tif( l > rr || r < ll ) return ; //\u533a\u95f4\u8d8a\u754c \n\tpushmark(x) ; int mid = ( l + r ) >> 1 ; \n\tCover( ls(x), l, mid, ll, rr, val ) ;\n\tCover( rs(x), mid + 1, r, ll, rr, val ) ;\n\treturn ;\n}\n\nint Query2( int x, int l, int r, int wh ) { // \u8be2\u95ee\u4f4d\u7f6e\u4e3awh\u7684\u70b9\u7684\u7b54\u6848 \n\tif( l == r ) return t[x].mi; \n\tpushmark(x); int mid = ( l + r ) >> 1;\n\tif( mid >= wh ) return Query2( ls(x), l, mid, wh ); \n\telse return Query2( rs(x), mid + 1, r, wh );\n}\n\nvoid input() {\n\tn = read(), m = read();\n\trep( i, 1, n ) {\n\t\ta[i] = read() + 1;  //\u52a01\uff0c\u65b9\u4fbf\u7ebf\u6bb5\u6811\u5904\u7406 \n\t\tif( a[i] > n ) continue; // \u5982\u679ca[i] \u5927\u4e8e n \u5c31\u6ca1\u6709\u5fc5\u8981\u52a0\u5165  \n\t\tvec[a[i]].push_back(i);\n\t}\n\trep( i, 1, n ) vec[i].push_back(n + 1); //\u6743\u503c\u81f3\u591a\u6709n\u79cd\uff0c\u5728\u6bcf\u4e2a\u70b9\u7684vector\u6700\u540e\u9762\u63d2\u5165\u4e00\u4e2a\u5143\u7d20(n + 1)\u3002 \n}\nvoid solve() {\n\tint x, ll = 1;\n\trep( i, 1, n ) {\n\t\tif( a[i] <= n ) insert1( 1, 1, n, a[i] ); //\u5982\u679c\u6bd4n\u5c0f\u624d\u63d2\u5165\u6743\u503c\u7ebf\u6bb5\u6811 \n\t\tx = Query1( 1, 1, n ), Ins( 1, 1, n, i, x );\n\t\t// x\u4e3a\u8be2\u95ee 1-n \u4e2d\u672a\u51fa\u73b0\u7684\u6743\u503c\uff0c\u7136\u540e\u5c06\u4f5c\u4e3a\u4f4d\u7f6ei\u7684\u7b54\u6848\u63d2\u5165\u7ebf\u6bb5\u6811\u3002 \n\t}\n\trep( i, 1, m ) q[i].l = read(), q[i].r = read(), q[i].id = i;\n\tsort( q + 1, q + m + 1, cmp );\n\trep( i, 1, m ) {\n\t\twhile( ll < q[i].l ) {\n\t\t\tx = a[ll];\n\t\t\tif( x <= n ) Cover( 1, 1, n, ll + 1, vec[x][fir[x] + 1] - 1, x ), ++ fir[x]; \n\t\t\t++ ll;\n\t\t}\n\t\tq[i].ans = Query2( 1, 1, n, q[i].r ) - 1;\n\t} \n} \nsigned main()\n{\n\tinput() , solve() ;\n\tsort( q + 1, q + m + 1, cmp2 ); \n\trep( i, 1, m ) printf(\"%d\\n\", q[i].ans );\n\treturn 0;\n}\n```",
        "postTime": 1554112804,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4137 \u3010Rmq Problem / mex\u3011"
    },
    {
        "content": "## \u7b80\u8ff0\n\n[\u539f\u9898\u9762](https://www.luogu.org/problem/P4137)\n\n>\u7ed9\u5b9a\u4e00\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$ ,    \n>\u7ed9\u5b9a $m$ \u6b21\u8be2\u95ee ,  \u6bcf\u6b21\u8be2\u95ee \u7ed9\u5b9a\u533a\u95f4\uff0c\u8be2\u95ee \"**\u533a\u95f4\u5185\u6700\u5c0f\u7684 \u672a\u51fa\u73b0\u7684 \u81ea\u7136\u6570**\"  \n>$1\\le n,m,a_i\\le 2\\times 10^5$\u3002\n\n## \u5206\u6790 \n\n\u7ebf\u6bb5\u6811, \u79bb\u7ebf\u64cd\u4f5c\u3002\n\n\u83ab\u961f\u592a\u4e0d\u4f18\u7f8e , \u6709\u4e00\u79cd $O((n + m)\\log n)$ \u7684\u4f18\u7f8e\u505a\u6cd5   \n\n- \u5bf9\u4e8e\u533a\u95f4 $[l, l] \\sim [l, n]$ \u4e2d\u7684\u7b54\u6848 ,     \n  \u5de6\u7aef\u70b9\u56fa\u5b9a ,  \u968f\u7740\u53f3\u7aef\u70b9 \u53f3\u79fb , \u4f1a\u6709\u66f4\u591a\u7684\u6570\u52a0\u5165\u5230 \u533a\u95f4\u4e2d    \n  \u663e\u7136 , \u533a\u95f4 $[l, l] \\sim [l, n]$ \u4e2d \u7b54\u6848\u5355\u8c03\u4e0d\u9012\u51cf     \n\t\n- \u5047\u8bbe\u5df2\u77e5 \u533a\u95f4 $[l, r]$ \u5185\u7684\u7b54\u6848, \u6b32\u63a8\u5f97 $[l + 1, r]$ \u533a\u95f4\u5185\u7684\u7b54\u6848 :   \n  - \u82e5 \u533a\u95f4 $[l + 1, r]$ \u5185\u4e0d\u5b58\u5728 \u6570 $a[l]$ ,  \u4e14\u539f\u7b54\u6848 $> a[l]$   \n    \u5219 \u533a\u95f4 $[l + 1, r]$ \u5185\u7b54\u6848\u53ef\u66f4\u65b0\u4e3a $a[l]$   \n    \n  - \u7531\u4e0a\u53ef\u5f97  ,    \n     \u5c06 \u5de6\u7aef\u70b9\u53f3\u79fb $1$ \u540e, \u4f1a\u88ab\u5f71\u54cd\u7684\u533a\u95f4\u4e2d \u5fc5\u7136\u4e0d\u5b58\u5728 \u6570 $a[l]$    \n     \u663e\u7136, \u88ab\u5f71\u54cd\u7684\u533a\u95f4\u4e3a : $[l + 1, l + 1] \\sim [l + 1, l + next[l] - 1]$   \n\t  - \u5176\u4e2d, $next[l]$ \u4ee3\u8868 $a[l]$ \u5728$[l + 1, n]$ \u4e2d\u7b2c\u4e00\u4e2a \u51fa\u73b0\u7684\u4f4d\u7f6e    \n    \n  - \u82e5\u5df2\u77e5 \u533a\u95f4 $[l, l] \\sim [l, n]$ \u4e2d\u7684\u7b54\u6848,    \n    \u4e14\u9884\u5904\u7406\u51fa \u4e0a\u8ff0\u7684 $next$ \u6570\u7ec4,   \n\t\u5373\u53ef \u901a\u8fc7\u53d6\u6700\u5c0f\u503c\u7684\u65b9\u5f0f , \u6765\u83b7\u5f97 \u533a\u95f4  $[l + 1, l + 1] \\sim [l + 1, l + next[l] - 1]$ \u4e2d\u7684\u7b54\u6848    \n\n- \u82e5\u6309\u7167\u4e0a\u8ff0\u65b9\u6cd5 , \u901a\u8fc7\u5de6\u7aef\u70b9\u53f3\u79fb, \u6765\u6c42\u5f97 \u4e0d\u540c\u533a\u95f4\u7b54\u6848\u7684\u65b9\u6cd5   \n  \u9700\u8981\u6ee1\u8db3 \u8be2\u95ee\u5de6\u7aef\u70b9\u5355\u8c03\u4e0d\u964d .   \n  \u5219\u53ef \u79bb\u7ebf\u5904\u7406\u8be2\u95ee ,  \u8bb0\u5f55\u5e76\u6392\u5e8f\u540e , \u518d\u56de\u7b54\u8be2\u95ee   \n \n## \u5b9e\u73b0\n \n\u7531\u4e0a,\u9700\u8981\u4e00\u79cd\u652f\u6301\u67e5\u8be2 \u52a8\u6001\u533a\u95f4\u6700\u5c0f\u503c, \u533a\u95f4\u4fee\u6539\u7684\u6570\u636e\u7ed3\u6784   \n\u53ef\u4f7f\u7528 \u7ebf\u6bb5\u6811\u8fdb\u884c\u7ef4\u62a4\u3002   \n  \n - \u6309\u7167\u4e0a\u8ff0\u8981\u6c42 ,  \u5219\u7ebf\u6bb5\u6811\u7684\u53f6\u8282\u70b9 \u5b58\u50a8\u7684\u7b54\u6848 ,  \u8868\u793a\u4ee5\u5bf9\u5e94\u70b9\u4f5c\u4e3a\u53f3\u7aef\u70b9\u7684\u7b54\u6848.    \n    \u5373: [\u5f53\u524d\u5de6\u7aef\u70b9 $\\sim$ \u53f6\u8282\u70b9\u7ef4\u62a4\u70b9] \u7684\u7b54\u6848 ,   \n  \n  - \u5bf9\u4e8e\u5168\u5c40\u5de6\u7aef\u70b9 \u5de6\u79fb, \u83b7\u5f97 \u533a\u95f4  $[l + 1, l + 1] \\sim [l + 1, l + next[l] - 1]$ \u4e2d\u7684\u7b54\u6848    \n    \u6709\u4e24\u79cd\u5904\u7406\u65b9\u6cd5 :   \n\t1.\u7531\u4e8e \u533a\u95f4 $[l + 1, l] \\sim [l + 1, n]$ \u4e2d \u7b54\u6848\u5355\u8c03\u4e0d\u9012\u51cf    \n\t  \u5219\u53ef\u4ee5\u8fdb\u884c\u7ebf\u6bb5\u6811\u4e8c\u5206 , \u6c42\u5f97\u7b2c\u4e00\u4e2a\u7b54\u6848 $> a[l]$ \u7684\u4f4d\u7f6e   \n\t  \u5e76\u5c06\u4e4b\u540e\u7684\u4f4d\u7f6e\u8fdb\u884c\u4fee\u6539    \n      \n\t2.\u4e2a\u4eba\u7684 $sb$ \u505a\u6cd5:   \n\t  \u5bf9\u6bcf\u4e00\u4e2a\u533a\u95f4, \u7ef4\u62a4\u5176\u4e2d \u6700\u5927\u7684\u7b54\u6848 \u53ca \u6700\u5c0f\u7684\u7b54\u6848   \n\t  1. \u82e5\u66f4\u65b0\u503c $<$ \u6700\u5c0f\u7b54\u6848\u65f6, \u5c06\u6574\u4e2a\u533a\u95f4\u8fdb\u884c\u66f4\u65b0    \n\t  2. \u82e5\u4e0d\u6ee1\u8db3$1$ , \u82e5\u66f4\u65b0\u503c $>$ \u6700\u5927\u503c , \u5219\u6574\u4e2a\u533a\u95f4\u90fd\u4e0d\u9700\u8981\u66f4\u65b0 , \u76f4\u63a5 `return;`   \n\t  3. \u82e5\u4e0d\u6ee1\u8db3 $1,2$  , \u7ee7\u7eed\u5411\u4e0b\u6df1\u5165    \n   \n  - \u6bcf\u6b21\u67e5\u8be2\u65f6 , \u5148\u5c06\u5f53\u524d\u5168\u5c40 \u5de6\u7aef\u70b9\u53f3\u79fb\u81f3\u67e5\u8be2\u5de6\u7aef\u70b9 ,   \n    \u518d\u76f4\u63a5\u67e5\u8be2 \u5bf9\u5e94\u53f3\u7aef\u70b9\u50a8\u5b58\u7684\u7b54\u6848\u5373\u53ef   \n\t \n\u5355\u6b21\u5de6\u7aef\u70b9\u53f3\u79fb \u4e0e\u67e5\u8be2 \u590d\u6742\u5ea6\u90fd\u4e3a $O(\\log n)$, \u5219\u603b\u590d\u6742\u5ea6\u4e3a $O((n + m)\\log n)$    \n\n\n---\n\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <map>\n#include <ctype.h>\n#define max(a,b) (a > b ? a : b)\n#define min(a,b) (a < b ? a : b)\n#define ls (now << 1)\n#define rs (now << 1 | 1)\nconst int MARX = 2e5 + 10;\n//=============================================================\nstruct node\n{\n\tint L, R;\n\tint ans;//\u8bb0\u5f55\u533a\u95f4\u7b54\u6848(\u82e5\u533a\u95f4\u7b54\u6848\u4e0d\u4e00\u81f4\u5219\u4e3a-1 \n\tint minn, maxx;//\u8bb0\u5f55\u533a\u95f4\u5185 \u6700\u5c0f / \u6700\u5927 \u7684\u7b54\u6848 \n}tree[MARX << 2];\nstruct Query\n{\n\tint l, r, data;//\u8be2\u95ee\u7684\u5de6\u53f3\u7aef\u70b9, \u53ca\u8be2\u95ee\u7f16\u53f7 \n}q[MARX];\nint N, M, original[MARX], next[MARX], ans[MARX];\nstd :: map <int, int> last;//\u9884\u5904\u7406\u4f7f\u7528, \u8bb0\u5f55\u67d0\u4e00\u4e2a\u6570 \u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e \nstd:: map <int,bool> vis; //\u9884\u5904\u7406\u4f7f\u7528 , \u8bb0\u5f55\u4e00\u4e2a\u6570\u662f\u5426\u51fa\u73b0\u8fc7 \n//=============================================================\ninline int read()\n{\n    int s = 1, w = 0; char ch = getchar();\n    for(; !isdigit(ch); ch = getchar()) if(ch == '-') s = -1;\n    for(; isdigit(ch); ch = getchar()) w = (w << 1) + (w << 3) + (ch ^ '0');\n    return s * w;\n}\nbool cmp(Query fir, Query sec)//\u5bf9\u67e5\u8be2\u6392\u5e8f\u7684 \u6bd4\u8f83\u51fd\u6570 \n{\n\tif(fir.l == sec.l) return fir.r < sec.r;\n\treturn fir.l < sec.l;\n}\nvoid Pushdown(int now)//\u4e0b\u4f20 \u61d2\u6807\u8bb0\n{\n\ttree[ls].ans = tree[rs].ans = tree[now].ans;\n\ttree[ls].minn = tree[rs].minn = tree[now].ans;\n\ttree[ls].maxx = tree[rs].maxx = tree[now].ans;\n\ttree[now].ans = -1;\n}\nvoid Pushup(int now)//\u66f4\u65b0 now\u70b9\u7684\u4fe1\u606f \n{\n\ttree[now].minn = min(tree[ls].minn, tree[rs].minn);\n\ttree[now].maxx = max(tree[ls].maxx, tree[rs].maxx);\n\ttree[now].ans = tree[ls].ans == tree[rs].ans ? tree[ls].ans : -1;//\u66f4\u65b0\u61d2\u6807\u8bb0 \n}\nvoid Build(int now, int L, int R)//\u5efa\u6811 \n{\n\ttree[now].L = L, tree[now].R = R, tree[now].ans = -1;//\u8d4b\u521d\u503c \n\tif(L == R) //\u9012\u5f52\u5230\u53f6\u8282\u70b9 \n\t{\n\t  tree[now].ans = tree[now].minn = tree[now].maxx = ans[L]; \n\t  return ;\n\t}\n\tint mid = (L + R) >> 1;\n\tBuild(ls, L, mid), Build(rs, mid + 1, R);\n\tPushup(now);\n}\nvoid Change(int now, int L, int R, int key)//\u5c06 [L,R]\u5185 \u7b54\u6848 > key\u7684\u533a\u95f4 \u66f4\u65b0\u4e3akey \n{\n\tif(L <= tree[now].L && tree[now].R <= R)//\u533a\u95f4\u88ab\u5b8c\u5168\u5305\u62ec \n\t  if(tree[now].minn >= key)//\u6700\u5c0f\u503c\u5927\u4e8ekey, \u5219\u533a\u95f4\u9700\u8981\u5168\u90e8\u88ab\u66f4\u65b0 \n\t  {\n\t  \ttree[now].ans = tree[now].minn = tree[now].maxx = key; \n\t\treturn ;\n\t  }\n\t  else if(tree[now].maxx <= key) return ;//\u6700\u5927\u503c \u5c0f\u4e8e\u7b49\u4e8ekey, \u5219\u533a\u95f4\u4e0d\u9700\u8981\u88ab\u66f4\u65b0 \n\t \n\tif(tree[now].ans != -1) Pushdown(now);//\u4e0b\u4f20\u61d2\u6807\u8bb0 \n\tint mid = (tree[now].L + tree[now].R) >> 1;\n\tif(L <= mid) Change(ls, L, R, key);//\u9012\u5f52 \u4fee\u6539\u5de6\u53f3\u533a\u95f4 \n\tif(R > mid) Change(rs, L, R, key);\n\tPushup(now);//\u66f4\u65b0 now\u70b9\u7684\u4fe1\u606f \n}\nint Query(int now, int pos)//\u5355\u70b9\u67e5\u8be2 pos\u7684\u7b54\u6848 \n{\n\tif(pos == tree[now].L && tree[now].R == pos) return tree[now].ans; //\u5bfb\u627e\u5230\u7b54\u6848 \n\t\n\tif(tree[now].ans != -1) Pushdown(now);//\u4e0b\u4f20\u61d2\u6807\u8bb0 \n\tint mid = (tree[now].L + tree[now].R) >> 1; \n\tif(pos <= mid) return Query(ls, pos);//\u67e5\u8be2 \u5bf9\u5e94\u4f4d\u7f6e \n\telse return Query(rs, pos);\n}\nvoid Prepare()//\u9884\u5904\u7406 \n{\n\tN = read(), M = read();\n\tfor (int i = 1, minn = 0; i <= N; i ++) //\u8bfb\u5165\u539f\u59cb\u6570\u5217, \u9884\u5904\u7406next\u503c \n\t{\n\t  original[i] = read(), next[i] = N + 1;  \n\t  next[last[original[i]]] = i, last[original[i]] = i; //\u66f4\u65b0 next, last\u503c \n\t  vis[original[i]] = 1; //\u66f4\u65b0 \u6b64\u6570\u7684\u51fa\u73b0\u60c5\u51b5 \n\t  while(vis[minn]) minn ++; //\u8ba1\u7b97 [1,i] \u7684\u7b54\u6848 \n\t  ans[i] = minn;\n\t}\n\tBuild(1, 1, N); \n\tfor(int i = 1; i <= M; i ++) q[i].l = read(), q[i].r = read(), q[i].data = i;\n\tstd :: sort(q + 1, q + M + 1, cmp);//\u5c06\u67e5\u8be2\u6309\u7167\u5de6\u7aef\u70b9 \u5347\u5e8f\u6392\u5e8f \n}\n//=============================================================\nsigned main()\n{\n\tPrepare();\n\tfor(int i = 1, nowl = 1; i <= M; i ++)//\u679a\u4e3e \u8be2\u95ee \n\t{\n\t  //\u5c06\u5de6\u7aef\u70b9\u53f3\u79fb\u81f3 \u5f53\u524d\u8be2\u95ee\u7684\u5de6\u7aef\u70b9 \n\t  for(;q[i].l > nowl; nowl ++) Change(1, nowl , next[nowl] - 1, original[nowl]);\n\t  ans[q[i].data] = Query(1, q[i].r);//\u56de\u7b54\u8be2\u95ee \n\t}\n\t\n\tfor(int i = 1; i <= M; i ++) printf(\"%d\\n\", ans[i]);\n}\n```",
        "postTime": 1577195673,
        "uid": 186186,
        "name": "\u7075\u4e4c\u8def\u7a7a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4137 \u3010Rmq Problem / mex\u3011"
    },
    {
        "content": "\u770b\u5230\u6ca1\u6709\u83ab\u961f+\u79bb\u6563\u5316\u7684\u505a\u6cd5\uff0c\u6211\u6765\u6c34\u4e00\u53d1\n\n\u9996\u5148\uff0c\u6211\u4eec\u5bf9\u539f\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\u3001\u53bb\u91cd\u3001\u4e8c\u5206\uff0c\u5373\u79bb\u6563\u5316\uff0c\u5e76\u628a\u79bb\u6563\u5316\u7528\u7684\u8f85\u52a9\u6570\u7ec4\u5b58\u4e0b\u6765\uff0c\u8bb0\u4e3a$lsh$\u3002\n\n\u548c\u666e\u901a\u505a\u6cd5\u7c7b\u4f3c\uff0c\u83ab\u961f\u5220\u9664\u65f6\u76f4\u63a5\u5bf9$ans$\u53d6$min$\u3002\u52a0\u5165\u7684\u65f6\u5019\uff0c\u5982\u679c\u7b26\u5408\u5f53\u524d\u5220\u9664\u7684\u662f\u7b54\u6848\uff0c$O(n)$\u679a\u4e3e\u5408\u6cd5\u6570\u5b57\uff0c\u5bfb\u627e$ans$\u3002\u5f53\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u6570$x$\u51fa\u73b0\u8fc7\u65f6\uff0c\u8be2\u95ee\u7684\u533a\u95f4\u4e2d\uff0c$x+1$\u6ca1\u6709\u51fa\u73b0\uff0c\u7b54\u6848\u5c31\u662f$x+1$\u3002\n\n\u6240\u4ee5\u5f53\u6211\u4eec\u9047\u5230\u4e00\u4e2a\u5728\u8be2\u95ee\u533a\u95f4\u91cc\u51fa\u73b0\u8fc7\u7684\u6570 $lsh_i$ \u65f6\uff0c\u5224\u65ad$lsh$\u6570\u7ec4\u4e2d\u4e0b\u4e00\u4e2a\u6570\u5b57 $lsh_{i+1}$\uff0c\u4e5f\u5c31\u662f\u5728\u6240\u6709\u6570\u5b57\u4e2d\u5927\u4e8e\u5f53\u524d\u6570\u7684\u7b2c\u4e00\u4e2a\u6570\uff0c\u662f\u5426\u51fa\u73b0\uff0c\u5982\u679c\u51fa\u73b0\uff0c\u90a3\u4e48\u662f\u5426\u7d27\u8ddf\u7740$lsh_i$\u3002\u5982\u679c\u4ee5\u4e0a\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u90a3\u4e48$lsh_i$\u540e\u9762\u5c31\u6ca1\u6709\u7d27\u8ddf\u7740\u7684\u6570\u5b57\uff0c\u7b54\u6848\u5c31\u662f\u8be5\u6570\u5b57$+1$\u3002\n\n\u8bb2\u8d77\u6765\u53ef\u80fd\u6709\u70b9\u4e71\uff0c\u4e0a\u6838\u5fc3\u4ee3\u7801\n\n```cpp\n/*\u6ce8\u610f\uff0c\u7531\u4e8ea\u662f\u79bb\u6563\u5316\u540e\u7684\u6570\u7ec4\uff0ca\u91cc\u5b58\u7684\u6570\u5b57\u76f8\u5f53\u4e8e\n\u539f\u6570\u7ec4\u7684\u76f8\u5bf9\u5927\u5c0f\uff0c\u4e5f\u5c31\u662flsh\u6570\u7ec4\u7684\u4e0b\u6807*/\ninline void add(int x)\n{\n\tif(++cnt[a[x]]==1)\n\t{\n\t\tif(ans==lsh[a[x]])//\u540c\u666e\u901a\u505a\u6cd5\n\t\t{\n\t\t\tfor(int i=a[x];i<=len;i++)//\u5728\u79bb\u6563\u5316\u6570\u7ec4\u91cc\u5bfb\u627e\u7b54\u6848 \n\t\t\t\tif(cnt[i])//\u6211\u4eec\u9700\u8981\u7684\u662f\u5728\u5f53\u524d\u533a\u95f4\u91cc\u51fa\u73b0\u7684\u6570\uff0c\u56e0\u4e3a\u7b54\u6848\u8981\u4e48\u662f0\uff0c\u8981\u4e48\u7d27\u8ddf\u5728\u533a\u95f4\u4e2d\u51fa\u73b0\u7684\u6570\u5b57\u540e\u9762\n\t\t\t\t\tif(!(lsh[i]+1==lsh[i+1]&&cnt[i+1]))//\u5224\u65ad\u8fd9\u4e00\u4f4d\u540e\u9762\u6709\u6ca1\u6709\u7d27\u8ddf\u7684\u6570\u5b57 \n\t\t\t\t\t{\n\t\t\t\t\t\tans=lsh[i]+1;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t}\n\t}\n}\n\n```\n\n\u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=200005;\n\n#define dd ch=getchar()\ninline int read()\n{\n\tint x=0;bool f=false;char dd;\n\twhile(!isdigit(ch)){f|=ch=='-';dd;}\n\twhile(isdigit(ch)){x=(x<<1)+(x<<3)+ch-48;dd;}\n\treturn f?-x:x;\n}\n#undef dd\nvoid write(int x)\n{\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>9)write(x/10);\n\tputchar(x%10+48);\n}\n\nint n,m,a[N];\nint res[N];\n\nint belong[N];\ninline void fuck(const int lim)\n{\n\tint size=pow(lim,0.5);\n\tfor(int i=1;i<=lim;i++)\n\t\tbelong[i]=(i-1)/size+1;\n}\n\nint lsh[N];\nint cnt[N];\nint ans=0,len;\n\nstruct node\n{\n\tint l,r,id;\n}q[N];\ninline bool cmp(node x,node y){return belong[x.l]^belong[y.l]?belong[x.l]<belong[y.l]:x.r<y.r;}\n\ninline void add(int x)\n{\n\tif(++cnt[a[x]]==1)\n\t{\n\t\tif(ans==lsh[a[x]])\n\t\t{\n\t\t\tfor(int i=a[x];i<=len;i++)\n\t\t\t\tif(cnt[i])\n\t\t\t\t\tif(!(lsh[i]+1==lsh[i+1]&&cnt[i+1]))\n\t\t\t\t\t{\n\t\t\t\t\t\tans=lsh[i]+1;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t}\n\t}\n}\ninline void del(int x)\n{\n\tif(--cnt[a[x]]==0)\n\t\tans=min(ans,lsh[a[x]]);\n}\n\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=lsh[i]=read();\n\tsort(lsh+1,lsh+1+n);\n\tlen=unique(lsh+1,lsh+1+n)-lsh-1;\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=lower_bound(lsh+1,lsh+1+len,a[i])-lsh;\n\t\n\tfuck(n);\n\tfor(int i=1;i<=m;i++)\n\t\tq[i].l=read(),q[i].r=read(),q[i].id=i;\n\tsort(q+1,q+1+m,cmp);\n\t\n\tint l=1,r=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint ql=q[i].l,qr=q[i].r;\n\t\twhile(l<ql)del(l++);\n\t\twhile(l>ql)add(--l);\n\t\twhile(r<qr)add(++r);\n\t\twhile(r>qr)del(r--);\n\t\tres[q[i].id]=ans;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t\twrite(res[i]),puts(\"\");\n\treturn 0;\n}\n```",
        "postTime": 1557662355,
        "uid": 80299,
        "name": "crpboy",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4137 \u3010Rmq Problem / mex\u3011"
    },
    {
        "content": "\u601d\u8def\u548c\u4e00\u4f17\u5927\u4f6c\u7684\u601d\u8def\u5dee\u4e0d\u591a\uff0c\u5148\u7ed9\u8be2\u95ee\u6309 $r$ \u6392\u5e8f\uff0c\u5c31\u53d8\u6210\u4e86\u626b\u63cf\u7ebf\u95ee\u9898\uff0c\u6bcf\u6b21\u4e8c\u5206\u540e\u67e5\u8be2 $[0,mid]$ \u6743\u503c\u4e2d\u51fa\u73b0\u4f4d\u7f6e\u6700\u5c0f\u7684\u503c\u3002\u53ef\u4ee5\u76f4\u63a5\u5b9e\u73b0 $\\Theta(q\\log^2n)$ \u6216\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206 $\\Theta(q\\log n)$\u3002\r\n\r\n\u4f46\u662f\u6ce8\u610f\u5230\u6bcf\u6b21\u67e5\u8be2\u7684\u6700\u5c0f\u503c\u662f\u6743\u503c\u6570\u7ec4\u4e0a\u7684\u524d\u7f00\u6700\u5c0f\u503c\uff0c\u800c\u524d\u7f00\u6700\u5c0f\u503c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u7f00\u6700\u5c0f\u503c\u7684\u6761\u4ef6\u662f\u6bcf\u6b21\u4fee\u6539\u53ea\u80fd\u5f80\u5c0f\u6539\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u4ece\u540e\u5f80\u524d\u505a\u5c31\u597d\u4e86\u3002\r\n\r\n\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u4e8c\u5206\u5219\u7c7b\u4f3c\u4e8e\u500d\u589e\uff0c\u8003\u8651\u4e00\u4e0b\u8be2\u95ee\u524d\u7f00\u6700\u5c0f\u503c\u7684\u8fc7\u7a0b\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u7406\u89e3\u8fd9\u4e2a\u4e8c\u5206\u65b9\u6cd5\u4e86\u3002\r\n\r\n\u4f18\u70b9\u662f\u7801\u91cf\u548c\u5e38\u6570\u90fd\u5f88\u5c0f\uff0c\u4e0d\u6613\u51fa\u9519\uff1b\u7f3a\u70b9\u662f\u6709\u70b9\u96be\u60f3\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n\\log n+q\\log n)$\u3002\r\n\r\n\u9644 AC \u4ee3\u7801\uff1a\r\n\r\n```cpp\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\ninline void chkmin(int& a,int b) { if(b<a) a=b; }\r\n\r\nint getint()\r\n{\r\n\tchar ch;\r\n\twhile((ch=getchar()) < '!') ;\r\n\tint x = ch^'0';\r\n\twhile((ch=getchar()) > '!') x = (x*10)+(ch^'0');\r\n\treturn x;\r\n}\r\n\r\nvoid putint(int x)\r\n{\r\n\tif(x/10) putint(x/10);\r\n\tputchar((x%10)^'0');\r\n}\r\n\r\nint tx[200005];\r\nconst int trin = 200001;\r\nconst int logtn = 17;\r\n\r\nint lowbit(int x) { return x&(-x); }\r\n\r\nvoid init()\r\n{\r\n\tmemset(tx,0x7f,(trin+1)*sizeof(int));\r\n}\r\n\r\nvoid fix(int x,int v)\r\n{\r\n\twhile(x<=trin)\r\n\t{\r\n\t\tchkmin(tx[x],v);\r\n\t\tx += lowbit(x);\r\n\t}\r\n}\r\n\r\nint query(int l)  // \u6811\u72b6\u6570\u7ec4\u4e0a\u4e8c\u5206\r\n{\r\n\tint res = 0;\r\n\tfor(int i=1<<logtn; i>=1; i>>=1)\r\n\t{\r\n\t\tif((res|i)<=trin && tx[res|i]>=l)\r\n\t\t{\r\n\t\t\tres |= i;\r\n\t\t}\r\n\t}\r\n\treturn res;\r\n}\r\n\r\nstruct qry\r\n{\r\n\tint l;\r\n\tint r;\r\n\tint id;\r\n};\r\n\r\nbool cmp(qry a,qry b) { return a.r > b.r; }\r\n\r\nint ai[200005];\r\nint papx[200005];\r\nint lapx[200005];\r\n\r\nqry qi[200005];\r\nint ansi[200005];\r\n\r\nint main()\r\n{\r\n\tconst int n = getint();\r\n\tconst int m = getint();\r\n\tfor(int i=1; i<=n; ++i)\r\n\t{\r\n\t\tai[i] = getint();\r\n\t}\r\n\r\n\tfor(int i=1; i<=n; ++i)\r\n\t{\r\n\t\tpapx[i] = lapx[ai[i]];\r\n\t\tlapx[ai[i]] = i;\r\n\t}\r\n\r\n\tinit();\r\n\tfor(int i=0; i<=trin; ++i)\r\n\t{\r\n\t\tfix(i+1,lapx[i]);\r\n\t}\r\n\r\n\tfor(int i=1; i<=m; ++i)\r\n\t{\r\n\t\tqi[i].l = getint();\r\n\t\tqi[i].r = getint();\r\n\t\tqi[i].id = i;\r\n\t}\r\n\tsort(qi+1,qi+1+m,cmp);\r\n\r\n\tint qtop = 1;\r\n\tfor(int i=n; i>=1; --i)\r\n\t{\r\n\t\twhile(qi[qtop].r == i)\r\n\t\t{\r\n\t\t\tansi[qi[qtop].id] = query(qi[qtop].l);\r\n\t\t\t++qtop;\r\n\t\t}\r\n\t\tfix(ai[i]+1,papx[i]);\r\n\t}\r\n\r\n\tfor(int i=1; i<=m; ++i)\r\n\t{\r\n\t\tputint(ansi[i]);\r\n\t\tputchar('\\n');\r\n\t}\r\n}\r\n```",
        "postTime": 1606479923,
        "uid": 49458,
        "name": "\u6728\u6728\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3-P4137"
    },
    {
        "content": "[\u5b89\u5229\u6ce2$blog$](https://ctz45562.github.io/2019/03/15/%E9%A2%98%E8%A7%A3-%E6%B4%9B%E8%B0%B7-P4137-%E3%80%90Rmq-Problem-mex%E3%80%91/)\n\n[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P4137)\n\n\u4e00\u9053\u6c34\u9898\u60f3\u4e86\u534a\u5929\u3002\u3002\u3002\n\n\u53ef\u4ee5\u60f3\u5230\u9020\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u67e5\u8be2\u65f6\u5982\u679c\u5de6\u513f\u5b50\u6709\u8fd9\u4e2a\u533a\u95f4\u5185\u6ca1\u6709\u51fa\u73b0\u7684\u6570\u5c31\u8d70\u5de6\u513f\u5b50\uff0c\u5426\u5219\u8d70\u53f3\u513f\u5b50\u3002\u5982\u679c\u7528\u666e\u901a\u7684\u4e3b\u5e2d\u6811\u7ef4\u62a4\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5c31\u4f1a\u53d1\u73b0\u8fd9\u73a9\u610f\u4e0d\u5177\u6709\u533a\u95f4\u53ef\u51cf\u6027\uff0c\u4e0d\u662f\u57fa\u4e8e\u524d\u7f00\u548c\u7684\u4e3b\u5e2d\u6811\u80fd\u7ef4\u62a4\u7684\u3002\n\n\u6362\u4e2a\u601d\u8def\uff1a\u5bf9\u4e8e\u7b2c$i$\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u4e00\u4e0b**\u6570\u5217\u524d$i$\u9879\u4e2d\u6bcf\u4e2a\u6743\u503c\u51fa\u73b0\u7684\u6700\u9760\u53f3\u7684\u4f4d\u7f6e**\u3002\u7136\u540e\u5411\u4e0a\u66f4\u65b0\u4e00\u4e0b\u6700\u5c0f\u503c\u3002\u8fd9\u6837\u5982\u679c\u67d0\u4e2a\u6743\u503c\u6700\u9760\u53f3\u7684\u4f4d\u7f6e\u90fd\u6bd4\u67e5\u8be2\u533a\u95f4\u5de6\u7aef\u70b9\u5c0f\u7684\u8bdd\uff0c\u90a3\u5b83\u4e00\u5b9a\u6ca1\u6709\u5728\u8fd9\u4e2a\u533a\u95f4\u91cc\u51fa\u73b0\u3002\u7ef4\u62a4\u6700\u5c0f\u503c\u76ee\u7684\u5c31\u662f\u770b\u6700\u5c0f\u7684\u662f\u5426\u6bd4\u5de6\u7aef\u70b9\u5927\uff0c\u6839\u636e\u8fd9\u4e2a\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u3002\n\n\u6743\u503c\u8303\u56f4\u662f$10^9$\u7684\u3002\u9898\u89e3\u91cc\u6709\u8bf4\u7b54\u6848\u6700\u5927\u4e3a$n$\uff0c\u76f4\u63a5\u628a$>n$\u7684$a[i]$\u5904\u7406\u4e3a$n+1$\u5c31\u884c\u3002\u849f\u84bb\u6ca1\u6709\u60f3\u5230$QAQ$\uff0c\u8bf4\u4e00\u4e0b\u849f\u84bb\u7684\u5904\u7406\uff1a\n\n\u7528\u79bb\u6563\u5316\uff0c\u4f46\u662f\u4e00\u4e2a\u6743\u503c\u6ca1\u6709\u5728\u6570\u5217\u91cc\u51fa\u73b0\u8fc7\u7684\u8bdd\u5c31\u4e0d\u4f1a\u5728\u79bb\u6563\u5316\u6570\u7ec4\u4e2d\uff0c\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u5728\u7ebf\u6bb5\u6811\u4e2d\uff0c\u67e5\u8be2\u4f1a\u51fa\u9505\u3002\u6ce8\u610f\u5230\u4e00\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\u8981\u4e48\u662f$0$\uff0c\u8981\u4e48\u662f\u6570\u5217\u4e2d\u67d0\u4e2a\u6570\u7684\u503c$+1$\u3002\u8fd9\u6837\u79bb\u6563\u5316\u65f6\u628a$0$\u548c\u6bcf\u4e2a\u51fa\u73b0\u8fc7\u7684\u6743\u503c$+1$\u90fd\u4e22\u8fdb\u53bb\u5c31\u884c\u4e86$QwQ$\u3002\n\n\u5f53\u7136\u8fd9\u9053\u9898\u4e0d\u5f3a\u5236\u5728\u7ebf\u4e5f\u4e0d\u4fee\u6539\uff0c\u53ef\u4ee5\u628a\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\u4e00\u8fb9\u626b\u4e00\u8fb9\u52a0\uff0c\u9047\u5230\u8be2\u95ee\u53f3\u7aef\u70b9\u5c31\u67e5\u8be2\u5de6\u7aef\u70b9\uff0c\u4e0d\u9700\u8981\u4e3b\u5e2d\u6811\uff08\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\uff09\uff0c\u4e00\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(nlogn)$\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <vector>\n\n#define maxn 400005\n#define inf 0x3f3f3f3f\n\nusing namespace std;\n\ninline int read(){\n\tint x=0,y=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn y?-x:x;\n}\ntemplate<typename T>\ninline T read(){\n\tT x=0;\n\tint y=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn y?-x:x;\n}\nint dis[maxn],ll[maxn],ans[maxn],len,a[maxn],n,m;\n//dis\u662f\u79bb\u6563\u5316\u6570\u7ec4\uff0cll\u662f\u6bcf\u4e2a\u8be2\u95ee\u7684\u5de6\u7aef\u70b9\uff0cans\u662f\u7b54\u6848\nvector<int>line[maxn];\n//line\u7528\u6765\u79bb\u7ebf\u5b58\u6bcf\u4e2a\u8be2\u95ee\nstruct Segment_Tree{\n#define ls(x) (x<<1)\n#define rs(x) (x<<1|1)\n\tint dat[maxn<<2];\n\tinline void update(int node){\n\t\tdat[node]=min(dat[ls(node)],dat[rs(node)]);\n\t}\n\tvoid add(int poi,int l,int r,int node,int d){\n\t\tif(l==r){\n\t\t\tdat[node]=d;\n            //\u56e0\u4e3a\u662f\u79bb\u7ebf\u8fb9\u626b\u8fb9\u52a0\uff0c\u5f53\u524d\u66f4\u65b0\u7684\u4f4d\u7f6e\u4e00\u5b9a\u662f\u6700\u9760\u53f3\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u8986\u76d6\u6389\u5c31\u884c\n\t\t\treturn;\n\t\t}\n\t\tint mid=l+r>>1;\n\t\tif(poi<=mid)add(poi,l,mid,ls(node),d);\n\t\telse add(poi,mid+1,r,rs(node),d);\n\t\tupdate(node);\n\t}\n\tint ask(int d){\n\t\tint l=1,r=len,node=1;\n\t\twhile(l<r){\n\t\t\tint mid=l+r>>1;\n\t\t\tif(dat[ls(node)]<d)r=mid,node=ls(node);\n            //\u5de6\u533a\u95f4\u6709\u6700\u9760\u53f3\u7684\u4f4d\u7f6e\u90fd\u6bd4\u5de6\u7aef\u70b9\u5c0f\u7684\uff0c\u4e00\u5b9a\u6ca1\u51fa\u73b0\u8fc7\uff0c\u5411\u5de6\u8d70\n\t\t\telse l=mid+1,node=rs(node);\n            //\u5426\u5219\u5411\u53f3\u8d70\n\t\t}\n\t\treturn dis[l];\n\t}\n}st;\nint main(){\n\tn=read(),m=read();\n\tfor(register int i=1;i<=n;++i)\n\t\tdis[++len]=a[i]=read(),dis[++len]=a[i]+1;\n    //\u628a\u6bcf\u4e2a\u503c+1\u6dfb\u8fdb\u53bb\n\tdis[++len]=0;\n    //\u628a0\u6dfb\u8fdb\u53bb\n\tsort(dis+1,dis+1+len);\n\tlen=unique(dis+1,dis+1+len)-dis-1;\n\tfor(register int i=1;i<=m;++i){\n\t\tll[i]=read();\n\t\tline[read()].push_back(i);\n\t}\n\tfor(register int i=1;i<=n;++i){\n\t\ta[i]=lower_bound(dis+1,dis+1+len,a[i])-dis;\n\t\tst.add(a[i],1,len,1,i);\n\t\tfor(int j=0;j<line[i].size();++j){\n\t\t\tint k=line[i][j];\n\t\t\tans[k]=st.ask(ll[k]);\n\t\t}\n\t}\n\tfor(register int i=1;i<=m;++i)\n\t\tprintf(\"%d\\n\",ans[i]);\n}\n\n```\n\n",
        "postTime": 1552609344,
        "uid": 111762,
        "name": "_ctz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4137 \u3010Rmq Problem / mex\u3011"
    },
    {
        "content": "### \u63d0\u4f9b\u4e24\u79cd\u73a9\u6cd5,\u5747\u53ef\u4e0d\u5f00O2\u901a\u8fc7.  \n\n## \u58f0\u660e:\u672c\u9898\u76ee N,M,V(\u5e8f\u5217\u957f\u5ea6,\u67e5\u8be2\u6b21\u6570,(\u6709\u7528\u7684)\u503c\u57df)\u662f\u540c\u9636\u7684.\u4e0d\u505a\u533a\u5206~~\u5176\u5b9e\u662f\u6211\u771f\u7684\u4e0d\u4f1a\u5206\u6790\u83ab\u961f\u590d\u6742\u5ea6~~\n\n1. \u83ab\u961f+\u5206\u5757 O(nsqrt(n))\u8fd9\u6837\u7684\u590d\u6742\u5ea6(~~\u7a9d\u81ea\u5df1\u771f\u7684\u4e0d\u4f1a\u7b97\u554a~~)...\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u80fd\u8fc7...\n2. \u53ef\u6301\u4e45\u5316\u6216\u8005\u626b\u63cf\u7ebf.O(nlogn)\u6216\u8005\u7c7b\u4f3c\u7684\u590d\u6742\u5ea6...\u5e94\u8be5\u662f\u672c\u9898\u7684\u6b63\u89e3.  \n```cpp\n//PS\u4ee3\u7801\u5728\u672b\u5c3e\n```\n---\n\n~~**\u6ce8\u610f\u5230:\u5927\u4e8en\u7684\u6570\u662f\u6ca1\u6709\u8d21\u732e\u7684,\u6240\u4ee5V\u548cN\u540c\u9636\u4e86**~~\n\n---\n\u5148\u6765\u8bf4\u7b2c\u4e00\u79cd...\u9996\u5148\u53d1\u73b0\u662f\u4e2a\u7c7b\u4f3c\u533a\u95f4\u6570\u989c\u8272\u7684\u95ee\u9898....\u975e\u5e38\u81ea\u7136\u7684\u60f3\u5230\u7528\u83ab\u961f\u7ef4\u62a4\u533a\u95f4\u5185\u6570\u7684\u503c\u57df,\u7136\u540e\u6700\u7b80\u5355\u7684\u662f\u5f00\u4e2a\u6570\u7ec4...**\u5355\u6b21\u67e5\u8be2\u662fO(N)\u7684**.~~\u7136\u540e\u53d1\u73b0\u5361\u4e00\u5361.\u4e71\u4f18\u5316\u4e00\u4e0b\u53ef\u4ee5\u8fc7....~~  \n\u6211\u4eec\u8003\u8651\u4e0a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u503c\u57df\u4fe1\u606f.\u6bcf\u4e2a\u8282\u70b9\u8bb0\u5f55\u4e00\u4e0b\u5de6\u8fb9\u662f\u4e0d\u662f\u67090(\u6ca1\u51fa\u73b0\u8fc7\u7684\u6570\u5b57).\u4fee\u6539\u662f\u5355\u70b9\u52a0.pushup\u975e\u5e38\u597d\u505a...\u76f4\u63a5\u7ee7\u627f\u5de6\u8fb9\u7684\u4fe1\u606f,\u53f6\u5b50\u770b\u81ea\u5df1\u7684\u8ba1\u6570\u662f\u4e0d\u662f0\u5c31\u597d\u4e86.\u67e5\u8be2\u662f\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u7684\u64cd\u4f5c.\u8003\u8651\u5de6\u8fb9\u67090\u5c31\u6df1\u5165\u5de6\u5b50\u6811,\u5426\u5219\u8fdb\u5165\u53f3\u4fa7.\u5230\u8fbe\u53f6\u5b50\u5373\u53ef.\u8fd9\u6837\u5355\u6b21\u4fee\u6539\u548c\u67e5\u8be2\u90fd\u662f\u4f18\u79c0\u7684**O(logn)**,  ~~\u8fd9\u4e2a\u505a\u6cd5\u6211\u6ca1\u6709\u5b9e\u9645\u5199\u8fc7.\u7b2c\u4e00\u773c\u770b\u5230\u8fd9\u4e2a\u9898\u76ee\u5c31\u60f3\u5230\u8fd9\u4e2a\u505a\u6cd5....\u4e0d\u77e5\u9053\u80fd\u4e0d\u80fd\u8fc7~~  \n**\u5212\u91cd\u70b9**,\u5206\u6790\u7b2c\u4e8c\u79cd\u73a9\u6cd5\u7684\u590d\u6742\u5ea6,\u8003\u8651\u83ab\u961f\u7b97\u6cd5\u7684\u8fc7\u7a0b.\u6211\u4eec\u6709O(nsqrt(n))\u7ea7\u522b\u7684\u4fee\u6539,\u800c\u53ea\u6709O(n)\u7684\u67e5\u8be2,**\u53ef\u4ee5\u8bf4\u4fee\u6539\u548c\u67e5\u8be2\u662f\u5f88\u4e0d\u5e73\u8861\u7684**\u8fd9\u65f6\u7ebf\u6bb5\u6811\u7684\u4f18\u52bf\u5c31\u4f53\u73b0\u4e0d\u51fa\u6765\u4e86...\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e2a\u533a\u95f4\u52a0\u533a\u95f4\u548c\u7684\u9898\u76ee\u5982\u679c\u53ea\u6709\u4e00\u6b21\u533a\u95f4\u52a0.\u90a3\u4e48\u6211\u4eec\u663e\u7136\u4e0d\u4f1a\u4f7f\u7528\u7ebf\u6bb5\u6811\u800c\u662f\u66b4\u529b.  \n~~so what~~\u4f7f\u7528\u503c\u57df\u5206\u5757.**\u5355\u70b9\u4fee\u6539O(1),\u67e5\u8be2O(sqrtn),\u5b8c\u7f8e\u5e73\u8861\u4e86\u67e5\u8be2\u548c\u4fee\u6539\u7684\u590d\u6742\u5ea6**,\u5f97\u5230\u4e86O(nsqrt(n))\u7684\u505a\u6cd5.\u53ef\u4ee5\u901a\u8fc7.  \n~~\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u8f85\u52a9\u83ab\u961f\u7684\u65f6\u5019,\u8981\u6ce8\u610f\u5230\u83ab\u961f\u7684\u8fc7\u7a0b\u4e2d\u4fee\u6539\u4e0e\u67e5\u8be2\u7684\u4e0d\u5e73\u8861,\u4f7f\u7528\u5408\u9002\u7684\u6570\u636e\u7ed3\u6784\u6765\u5e73\u8861\u8fd9\u4e2a\u590d\u6742\u5ea6,\u6700\u5e38\u89c1\u7684\u5f53\u7136\u662f\u503c\u57df\u5206\u5757\u4e86~~.\n\n---\n\n~~\u8fd9\u4e0d\u662f\u6570\u989c\u8272\u7684\u5957\u8def\u5417,\u5f00\u4e2apre\u8bb0\u5f55\u540c\u8272\u524d\u9a71,\u7136\u540e\u5c31\u662f\u77e9\u5f62\u6570\u70b9\u4e86.\u5199KDT,\u6216\u8005\u4e0a\u4e2a\u626b\u63cf\u7ebf\u6216\u8005\u53ef\u6301\u4e45\u5316\u964d\u7ef4,\u975e\u5e38\u8f7b\u677e\u554a~~  \n\u8fd9\u4e2aMEX\u548c\u6570\u989c\u8272\u5176\u5b9e\u6709\u975e\u5e38\u5927\u7684\u76f8\u4f3c\u6027.\u6211\u4eec\u6765\u8003\u8651\u5bf9\u4e8e\u8be2\u95ee\\[l,r],\u663e\u7136\u53ea\u6709pos<=r\u7684\u5143\u7d20\u6709\u7528.\u6211\u4eec\u518d\u8003\u8651\u6ca1\u51fa\u73b0\u7684\u6570\u5b57\u6709\u4ec0\u4e48\u7279\u5f81.\n1. \u4ed6\u4eec\u5728\\[1,r]\u8fd9\u4e2a\u524d\u7f00\u91cc\u9762\u6839\u672c\u6ca1\u6709...\n2. \u4ed6\u4eec**\u6700\u540e\u4e00\u6b21\u51fa\u73b0**\u5728pos<l\u7684\u4f4d\u7f6e  \n\n\u6211\u4eec\u53d1\u73b0**\u6bcf\u4e2a\u989c\u8272\u7684\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e**\u975e\u5e38\u91cd\u8981.\u6211\u4eec\u4ee4\u6ca1\u6709\u51fa\u73b0\u7684\u6570\u7684\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u4e3a0,\u4e24\u79cd\u60c5\u51b5\u5c31\u53ef\u4ee5\u88ab\u7edf\u4e00\u4e86.  \n\u6211\u4eec\u6b64\u65f6\u518d\u8003\u8651\u95ee\u9898\u7684\u672c\u8d28:pos<=r,last<l\u7684\u6700\u5c0f\u6570.\u662f\u4e00\u4e2a\u4e8c\u7ef4\u504f\u5e8f!\u4e24\u4e2a\u90fd\u662f\u524d\u7f00\u67e5\u8be2..\u53ef\u4ee5\u968f\u4fbf\u7528\u626b\u63cf\u7ebf\u6216\u8005\u53ef\u6301\u4e45\u5316\u964d\u7ef4.\n\n---\n\n\n\u6700\u540e\u6254\u4ee3\u7801\u8dd1\u8def.\n```cpp\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <cstdio>\n#include <cmath>\nusing namespace std;\nconst int N=200000+10;\nconst int V=200000+1;\nconst int BCNT=2000+10;\nint n,m,a[N],ans[N];\nint read(){\n    int x=0;char ch;\n    do{ch=getchar();}while(ch>'9'||ch<'0');\n    do{x=x*10+ch-'0';ch=getchar();}while(ch>='0'&&ch<='9');\n    return x; \n}\nint cnt[N],x[N],bel[N],bsz,bcnt,L[BCNT],R[BCNT],Sum[BCNT];\nvoid init(){\n    bsz=ceil(sqrt(V));\n    bcnt=V/bsz;if(V%bsz) bcnt++;\n    for(int i=0;i<=V;i++) bel[i]=1+i/bsz;\n    for(int i=1;i<=bcnt;i++){\n        L[i]=(i-1)*bsz;\n        R[i]=i*bsz-1;\n    }R[bcnt]=V;\n}\ninline void add(int p,int v){\n    if(p>V) return ;\n    cnt[p]+=v;\n    if(v==1&&cnt[p]==1){x[p]=1;Sum[bel[p]]++;}\n    if(v==-1&&cnt[p]==0){x[p]=0;Sum[bel[p]]--;}\n}\nint mex(){\n    int blk=1;\n    while(Sum[blk]==R[blk]-L[blk]+1) blk++;\n    for(int i=L[blk];i<=R[blk];i++) if(x[i]==0) return i;\n    return -1;\n}\nstruct Q{\n    int l,r,id;\n    bool operator<(const Q &b)const{return bel[l]^bel[b.l]?l<b.l:r<b.r;}\n}q[N];\nint main(){\n    init();\n    n=read();m=read();\n    for(int i=1;i<=n;i++) a[i]=min(read(),V+1);\n    for(int i=0;i<m;i++){\n        q[i].id=i;\n        q[i].l=read();q[i].r=read();\n    }\n    sort(q,q+m);\n    int l=1,r=1;add(a[1],1);\n    for(int i=0;i<m;i++){\n        while(l<q[i].l) add(a[l++],-1);\n        while(l>q[i].l) add(a[--l],1);\n        while(r<q[i].r) add(a[++r],1);\n        while(r>q[i].r) add(a[r--],-1);\n        ans[q[i].id]=mex(); \n    }\n    for(int i=0;i<m;i++) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n\n```\n\u4e0a\u9762\u662f\u83ab\u961f,\u4e0b\u9762\u662f\u626b\u63cf\u7ebf...\n```cpp\n#include<iostream>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nint read(){\n    int x=0;char ch;\n    do{ch=getchar();}while(ch>'9'||ch<'0');\n    do{x=x*10+ch-'0';ch=getchar();}while(ch>='0'&&ch<='9');\n    return x;\n}\nconst int N=200000+10;\nconst int M=N<<2;\nint n,m,a[N],v,ans[N];\nstruct Q{ int l,r,id; bool operator<(const Q& b)const{return r<b.r;} }q[M];\nint L[M],R[M],Min[M];\n#define lc (o<<1)\n#define rc ((o<<1)|1)\ninline void pushup(int o){ Min[o]=min(Min[lc],Min[rc]); }\nvoid build(int o,int l,int r){\n    L[o]=l;R[o]=r;\n    if(l==r) return ;\n    int mid=(l+r)>>1;\n    build(lc,l,mid); build(rc,mid+1,r);\n}\nvoid update(int o,int p,int v){\n    if(L[o]==R[o]){Min[o]=v; return ; }\n    if(p<=R[lc]) update(lc,p,v);\n    else \t\t\t\t update(rc,p,v);\n    pushup(o);\n}\nint query(int o,int k){\n    if(Min[o]>k) return n+1;\n    if(L[o]==R[o]) return L[o];\n    // \u8003\u8651\u662f\u5426\u6709\u8f83\u5c0f,\u51fa\u73b0\u4f4d\u7f6e<l\u7684\u6570...\n    if(Min[lc]<k) return query(lc,k);\n    return query(rc,k);\n}\nint main(){\n    n=read();m=read();v=n+1;\n    for(int i=1;i<=n;i++) a[i]=min(read(),v);\n    for(int i=0;i<m;i++){\n        q[i].l=read();\n        q[i].r=read();\n        q[i].id=i;\n    }\n    sort(q,q+m);\n    build(1,0,v);\n    int p=1;\n    for(int i=0;i<m;i++){\n        while(p<=q[i].r){ update(1,a[p],p); p++; }\n        ans[q[i].id]=query(1,q[i].l);\n    }\n    for(int i=0;i<m;i++) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n\n```\n\n\n\n\n",
        "postTime": 1546060344,
        "uid": 15295,
        "name": "hehelego",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4137 \u3010Rmq Problem / mex\u3011"
    },
    {
        "content": "\u542c\u8bf4\u6b63\u89e3\u662f\u4e3b\u5e2d\u6811\uff0c\u7136\u800c\u6211\u53ea\u4f1a\u83ab\u961f\u554aqwq\n\n\u5176\u4ed6\u9898\u89e3\u7684\u83ab\u961f\u90fd\u662f\u7ef4\u62a4\u4e00\u4e2a\u4e71\u8df3\u7684\u6307\u9488\u6307\u5411\u7b54\u6848\uff0c\u8f6c\u79fb\u590d\u6742\u5ea6\u8981\u7b97\u5747\u644a\u2026\u2026\u7136\u800c\u6211\u4e5f\u4e0d\u4f1a\u644a\u8fd8\u5206\u6790\u554aqwq\n\n### \u601d\u8def\n\n\u8fd9\u9898\u660e\u663eai\u8303\u56f4\u662f\u641e\u7b11\u7684\uff0c\u6781\u7aef\u60c5\u51b5\u5c31\uff080...n-1\uff09\u7b54\u6848\u662fn\uff0c\u6839\u672c\u7528\u4e0d\u52301e9\uff0c\u6240\u4ee5\u628a\u5927\u4e8en\u7684ai\u90fd\u6539\u6210n+1\u5c31\u884c\u4e86\n\n\u7136\u540e\u6211\u4eec\u8981\u627e\u533a\u95f4\u91cc\u7b2c\u4e00\u4e2a\u6ca1\u51fa\u73b0\u8fc7\u7684\u81ea\u7136\u6570\u3002\u201c\u627e\u7b2c\u4e00\u4e2axxx\u201d\uff0c\u4f60\u4eec\u8fd8\u8bb0\u5f97\u4e00\u4e2a\u4e1c\u897f\u53eb**lowbit**\u4e0d\n\n\u5982\u679c\u6211\u4eec\u80fd\u5f04\u4e00\u4e32\u4e8c\u8fdb\u5236\uff0c\u6bcf\u4e00\u4f4d\u8868\u793a\u4e00\u4e2a\u6570\u5b57\uff0c\u628a\u533a\u95f4\u91cc\u6ca1\u51fa\u73b0\u8fc7\u7684\u6570\u5b57\u5bf9\u5e94\u7684\u90a3\u4e00\u4f4d\u8bbe\u4e3a1\uff0c\u51fa\u73b0\u8fc7\u7684\u8bbe\u4e3a0\uff0c\u8fd9\u6837\u6bcf\u6b21\u8be2\u95ee\u5c31\u53ef\u4ee5\u4e00\u4e2alowbit\u89e3\u51b3\u4e86\n\n\u7136\u800c\u6570\u5b57\u8981\u5f00\u52302e5\u554a\u3002\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ef\u4ee5\u6bcf31\u4f4d\u538b\u5230\u4e00\u4e2aint\u91cc\uff0c\u7136\u540e\u53bb\u627e\u7b2c\u4e00\u4e2a\u4e0d\u4e3a0\u7684\u4f4d\u7f6e\u7b97lowbit\n\n\u600e\u4e48\u5feb\u901f\u627e\u7b2c\u4e00\u4e2a\u4e0d\u4e3a0\u7684\u4f4d\u7f6e\uff1f\u6211\u4eec\u518d\u5f04\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4e32\uff0c\u4e0d\u4e3a0\u7684\u8bbe\u4e3a1\uff0c\u4e3a0\u7684\u4f4d\u8bbe\u4e3a0\uff0c\u8fd9\u6837\u6211\u4eec\u53c8\u5f97\u5230\u4e86\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4e32\uff0c\u7136\u540e\u518d\u5f80int\u91cc\u538b\uff0c\u7136\u540e\u627e\u7b2c\u4e00\u4e2a\u4e0d\u4e3a0\u7684\u4f4d\u7f6e\u3002\u8fd9\u4e00\u5c42int\u6570\u91cf\u662f\u4e0a\u4e00\u5c42\u76841/31\uff0c\u5c11\u4e86\u5f88\u591a\n\n\u6211\u4eec\u53ef\u4ee5\u591a\u538b\u51e0\u6b21\uff0c\u538b\u5230\u53ea\u6709\u4e00\u4e2aint\uff0c\u7136\u540e\u67e5\u8be2\u65f6\u4e00\u8deflowbit\u4e0b\u53bb\u5c31\u89e3\u51b3\u4e86\u3002\u81f3\u4e8e\u8981\u538b\u51e0\u5c42\uff0clog(31)2e5\u5411\u4e0a\u53d6\u6574\u4e3a4\uff0c\u6240\u4ee5\u5f04\u56db\u4e2aint\u6570\u7ec4\u5c31\u884c\u4e86\u3002\n\n\u81f3\u4e8e\u83ab\u961f\u600e\u4e48\u8f6c\u79fb\uff0c\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u6570\u5b57\u51fa\u73b0\u4e86\u51e0\u6b21\uff0c\u6bcf\u6b21\u53d1\u73b0\u4e00\u4e2a\u6ca1\u51fa\u73b0\u8fc7\u7684\u6570\u5b57\u8fdb\u5165\u533a\u95f4\u65f6\u5c31\u5728\u7b2c\u4e00\u5c42int\u6570\u7ec4\u91cc\u627e\u5230\u5bf9\u5e94\u7684\u4f4d\u8bbe\u4e3a1\uff0c\u7136\u540e\u5982\u679c\u8fd9\u4e2aint\u539f\u6765\u662f0\uff0c\u90a3\u5c31\u628a\u7b2c\u4e8c\u5c42\u5bf9\u5e94\u7684\u4f4d\u4e5f\u6539\u4e3a1\uff0c\u540c\u7406\u7b2c\u4e09\u5c42\u7b2c\u56db\u5c42\u3002\u4e00\u4e2a\u6570\u5b57\u9000\u51fa\u533a\u95f4\u7684\u65f6\u5019\u4e5f\u7c7b\u4f3c\u8fd9\u6837\u3002\u8fd9\u6837\u5f04\u6bcf\u4e00\u6b21\u8f6c\u79fb\u9700\u8981\u505a\u7684\u4e8b\u5c31\u662f\u7ef4\u62a4\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u548c\u4fee\u6539\u90a3\u56db\u5c42int\uff0c\u8fd9\u662fO(1)\u7684\u2026\u2026\n\n\u4e8e\u662f\u8fd9\u9898\u5c31\u8fd9\u6837\u89e3\u51b3\u4e86\n\n### \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdlib>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nconst int N=200000+5,N2=10000+5,N3=400+5,N4=20+5,Y=31;\nint p2[32];\n#define re register\nvoid write(int x)\n{\n    if(x>9) write(x/10);\n    putchar(x%10+48);\n}\ninline int read()\n{\n    re int sum;\n    re char c=getchar();\n    while(c<'0'||c>'9')c=getchar();\n    sum=c-'0';\n    c=getchar();\n    while(c>='0'&&c<='9')\n    {\n        sum=sum*10+c-'0';\n        c=getchar();\n    }\n    return sum;\n}\ninline int imin(const int& qwe,const int& asd)\n{\n    return qwe<asd?qwe:asd;\n}\nint n,m,n2;\nstruct miaow\n{\n    int l,r;\n    int zx;\n    inline bool operator < (const miaow& qwe) const\n    {\n        return l/n2==qwe.l/n2?r<qwe.r:l<qwe.l;\n    }\n}q[N];\nint a[N];\nint sy[N]={0};\nint ans[N];\nint yw0[N2],yw1[N3],yw2[N4],yw3;  //\u56db\u5c42\u538b\u4f4dint\uff0c\u6700\u540e\u4e00\u5c42\u53ea\u6709\u4e00\u4e2a\u6240\u4ee5\u4e0d\u5199\u6210\u6570\u7ec4 \ninline int lowb(int x)\n{\n    return x&(-x);\n}\ninline void csh()   //\u521d\u59cb\u5316\u5168\u90e8\u4f4d\u8bbe\u4e3a1 \n{\n    for(re int i=0;i<=n+1;++i)\n    {\n        yw0[i/Y]+=(1<<(i%Y));\n    }\n    for(re int i=0;i<=(n+1)/Y;++i)\n    {\n        yw1[i/Y]+=(1<<(i%Y));\n    }\n    for(re int i=0;i<=(n+1)/Y/Y;++i)\n    {\n        yw2[i/Y]+=(1<<(i%Y));\n    }\n    for(re int i=0;i<=(n+1)/Y/Y/Y;++i)\n    {\n        yw3+=(1<<(i%Y));\n    }\n    for(re int i=0;i<Y;++i)p2[i]=(1<<i);\n}\ninline int fia()  //\u56db\u5c42lowbit\u67e5\u7b54\u6848\u4f4d\u7f6e \n{\n    re int ans,ans2,k;\n    k=0;\n    ans=lowb(yw3);ans2=lower_bound(p2,p2+Y,ans)-p2;\n    k=k*Y+ans2;\n    ans=lowb(yw2[k]);ans2=lower_bound(p2,p2+Y,ans)-p2;\n    k=k*Y+ans2;\n    ans=lowb(yw1[k]);ans2=lower_bound(p2,p2+Y,ans)-p2;\n    k=k*Y+ans2;\n    ans=lowb(yw0[k]);ans2=lower_bound(p2,p2+Y,ans)-p2;\n    k=k*Y+ans2;\n    return k;\n}\ninline void yw(re int x,int y)  //\u83ab\u961f\u8f6c\u79fb\n{\n    x=a[x];\n    sy[x]+=y;\n    if(!sy[x]&&y<0)\n    {\n        if(!yw0[x/Y])\n        {\n            if(!yw1[x/Y/Y])\n            {\n                if(!yw2[x/Y/Y/Y])\n                {\n                    yw3+=(1<<(x/Y/Y/Y%Y));\n                }\n                yw2[x/Y/Y/Y]+=(1<<(x/Y/Y%Y));\n            }\n            yw1[x/Y/Y]+=(1<<(x/Y%Y));\n        }\n        yw0[x/Y]+=(1<<(x%Y));\n    }\n    if(sy[x]==1&&y>0)\n    {\n        yw0[x/Y]-=(1<<(x%Y));\n        if(!yw0[x/Y])\n        {\n            yw1[x/Y/Y]-=(1<<(x/Y%Y));\n            if(!yw1[x/Y/Y])\n            {\n                yw2[x/Y/Y/Y]-=(1<<(x/Y/Y%Y));\n                if(!yw2[x/Y/Y/Y])\n                {\n                    yw3-=(1<<(x/Y/Y/Y%Y));\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    cin>>n>>m;\n    n2=sqrt(n)+1;\n    for(re int i=1;i<=n;++i)\n    {\n        int x=read();\n        a[i]=imin(x,n+1);\n    }\n    csh();\n    for(re int i=0;i<m;++i)\n    {\n        q[i].l=read(),q[i].r=read(),q[i].zx=i;\n    }\n    sort(q,q+m);\n    re int x=1,y=1;\n    yw(1,1);\n    for(re int i=0;i<m;++i)\n    {\n        int l=q[i].l,r=q[i].r;\n        while(y<r)++y,yw(y,1);\n        while(x>l)--x,yw(x,1);\n        while(y>r)yw(y,-1),--y;\n        while(x<l)yw(x,-1),++x;\n        ans[q[i].zx]=fia();\n    }\n    for(re int i=0;i<m;++i)\n    {\n        write(ans[i]);\n        putchar('\\n');\n    }\n    return 0;\n}\n```",
        "postTime": 1539933182,
        "uid": 13105,
        "name": "miaow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4137 \u3010Rmq Problem / mex\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e0d\u4e45\u524d\u88ab\u725b\u5ba2\u7f51\u642c\u8fc7\u53bb\u505a\u4e86f\uff0c\u7136\u540e\u4e00\u4f4d\u795e\u4ed9\u6307\u70b9\u6211\u4eec\u4e00\u4e2a\u4e00\u53ealog\u7684\u505a\u6cd5\u3002\n\n\u5927\u6982\u5c31\u662f\u5148\u628a\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\u7136\u540e\u7ebf\u6bb5\u6811\u7ef4\u62a41--now\u8fd9\u6bb5\u7684mex\u3002\u7136\u540e\u8003\u8651\u5de6\u7aef\u70b9\u5411\u53f3\u79fb\uff0c\u6211\u4eec\u53d1\u73b0\u5f53\u524d\u4f4da[i]\u80fd\u5f71\u54cd\u7684\u4f4d\u7f6e\u53ea\u6709i\u2014\u2014\uff08a[i]\u4e0b\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e-1\uff09\u8fd9\u6bb5\u533a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u6bcf\u6b21\u53f3\u79fb\u5de6\u7aef\u70b9\u65f6\uff0c\u53ea\u8981\u5c06\u8fd9\u6bb5\u533a\u95f4\u4e0e\u539f\u5148\u7684mex\u53d6\u4e2amin\uff0c\u7136\u540e\u518d\u8be2\u95ee\u7b54\u6848\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nstruct aaa{\n\tint x,y,id;\n}aa[1000001];\nint la,n,m,nt[1000001],ans[1000001],a[1000001],f[1000001],g[1000001];\nmap<int,int>mp,mp1,hd;\nbool cmp(aaa a,aaa b){\n\treturn a.x<b.x;\n}\nvoid pushdown(int x,int l,int r){\n\tif(f[x]!=1e8){\n\t\tf[x*2]=min(f[x*2],f[x]);f[x*2+1]=min(f[x*2+1],f[x]);\n\t\tf[x]=1e8;\n\t}\n}\nvoid build(int x,int l,int r){\n\tf[x]=1e8;\n\tif(l==r){\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tbuild(x*2,l,mid);build(x*2+1,mid+1,r);\n}\nvoid ins(int x,int l,int r,int t,int k,int s){\n\tif(t>k)return;\n\tif(l==t&&r==k){\n\t\tf[x]=min(f[x],s);\n\t\treturn;\n\t}\n\tpushdown(x,l,r);\n\tint mid=(l+r)/2;\n\tif(mid>=k)ins(x*2,l,mid,t,k,s);\n\t else if(t>mid)ins(x*2+1,mid+1,r,t,k,s);\n\t  else ins(x*2,l,mid,t,mid,s),ins(x*2+1,mid+1,r,mid+1,k,s);\n}\nint query(int x,int l,int r,int t){\n\tif(l==r)return f[x];\n\tpushdown(x,l,r);\n\tint mid=(l+r)/2;\n\tif(mid>=t)return query(x*2,l,mid,t);\n\t else return query(x*2+1,mid+1,r,t);\n}\nint main(){\n\tint i;\n\tscanf(\"%d%d\",&n,&m);\n\tbuild(1,1,n);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tmp[a[i]]=1;\n\t}\n\tfor(i=n;i;i--){\n\t\tnt[i]=hd[a[i]];\n\t\tif(!nt[i])nt[i]=n+1;\n\t\thd[a[i]]=i;\n\t}\n\tfor(i=1;i<=m;i++){\n\t scanf(\"%d%d\",&aa[i].x,&aa[i].y);\n\t aa[i].id=i;\n }\n    sort(aa+1,aa+m+1,cmp);\n    la=0;\n    for(i=1;i<=n;i++){\n    \tmp1[a[i]]=1;\n    \twhile(mp1[la]>0)la++;\n    \tins(1,1,n,i,i,la);\n\t}\n\tla=1;\n\tfor(i=1;i<=m;i++){\n\t\twhile(la<aa[i].x)ins(1,1,n,la+1,nt[la]-1,a[la]),la++;\n\t\tans[aa[i].id]=query(1,1,n,aa[i].y);\n\t}\n\tfor(i=1;i<=m;i++)printf(\"%d\\n\",ans[i]);\n}\n```",
        "postTime": 1546843569,
        "uid": 50251,
        "name": "\u59ec\u5c0f\u8def\u79cb\u5b50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4137 \u3010Rmq Problem / mex\u3011"
    },
    {
        "content": "\u4f60\u4eec\u90fd\u4f1a\u4e3b\u5e2d\u6811\uff0c\u6211\u53ea\u4f1a\u83ab\u961f \\kel  \n\u5148\u8bf4\u4e00\u4e0b\u83ab\u961f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5728\u5757\u5927\u5c0f\u4e3a$\\frac n{\\sqrt m}$\u7684\u60c5\u51b5\u4e0b\uff0c\u662f\u9700\u8981\u505a$O(n\\sqrt m)$\u6b21\u4fee\u6539\uff0c$O(n)$\u6b21\u67e5\u8be2\u7684\uff0c\u6ce8\u610f\u5230\u4fee\u6539\u548c\u67e5\u8be2\u5e76\u4e0d\u662f\u5e73\u8861\u7684\uff0c\u56e0\u6b64\u5728\u83ab\u961f\u5957\u6570\u636e\u7ed3\u6784\u662f\u5f80\u5f80\u4f7f\u7528\u5206\u5757\u800c\u975e\u7ebf\u6bb5\u6811\u8fd9\u6837\u7684\u6570\u636e\u7ed3\u6784   \n\u53ea\u80fd\u628a\u83ab\u961f\u7684\u65b9\u6cd5\u6c47\u603b\u4e00\u4e0b\u4e86  \n\u53e6\u5916\u6b64\u9898\u4e2d\u503c\u57df\u53ef\u4ee5\u770b\u4f5c\u662f$O(n)$\u7684  \n1 xjb\u8df3\uff0c\u5747\u644a\u590d\u6742\u5ea6\u672a\u77e5\uff08\u53cd\u6b63\u6211\u4e0d\u4f1a\u7b97  \n2 \u83ab\u961f\u65f6\u7ef4\u62a4\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u5355\u6b21\u4fee\u6539$O(logn)$\uff0c\u67e5\u8be2\u65f6\u82e5\u66b4\u529b\u4e8c\u5206\u662f$O(log^2n)$\u7684\uff0c\u4f46\u5229\u7528\u6811\u72b6\u6570\u7ec4\u7684\u6027\u8d28\u53ef\u4ee5\u7528\u500d\u589e\u505a\u5230$O(logn)$\uff08\u867d\u7136\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u591a\u5c11\u5f71\u54cd\uff09\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(mlogn+n\\sqrt mlogn)$\uff0c\u4e0d\u5f00o2\u8fc7\u4e0d\u4e86 \uff08\u5176\u5b9e\u5361\u5361\u5e38\u5e94\u8be5\u4e5f\u80fd\u8fc7\uff0c\u4ee3\u7801\u5982\u4e0b \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=200005;\nint n,m;\nint block1,block2;\nint a[N],bel[N];\ninline int read(){\n    int s=0;char ch=getchar();\n    while(!isdigit(ch)) ch=getchar();\n    while(isdigit(ch)) s=s*10+ch-'0',ch=getchar();\n    return s;\n}\nstruct node{\n    int l,r,id;\n}q[N];\ninline int cmp(const node & a,const node & b){\n    return bel[a.l]^bel[b.l] ? bel[a.l]<bel[b.l] : bel[a.l]&1 ? a.r<b.r : a.r>b.r;\n}\nint cnt[N],ans[N],c[N];\ninline void modify(int x,int t){\n    for(;x<=n+2;x+=x&-x) c[x]+=t;\n}\ninline void add(int x){\n    if(!cnt[x]++) modify(x+1,1);\n}\ninline void del(int x){\n    if(!--cnt[x]) modify(x+1,-1);\n}\n\ninline int query(){\n    int ans=0,sum=0;\n    for(int i=17;i>=0;i--){\n        int t=(1<<i);\n        if(ans+t>n+1) continue;\n        if(sum+c[ans+t]==ans+t) ans+=t,sum+=c[ans];\n    }\n    return ans;\n}\nint main(){\n    n=read(),m=read();\n    block1=n/sqrt(m*2/3),block2=sqrt(n);\n    for(int i=1;i<=n;i++){\n        a[i]=min(read(),n+1);\n        bel[i]=(i-1)/block1+1;\n    }\n    for(int i=1;i<=m;i++)\n        q[i].l=read(),q[i].r=read(),q[i].id=i;\n    sort(q+1,q+m+1,cmp);\n    int l=1,r=0;\n    for(int i=1;i<=m;i++){\n        for(;r<q[i].r;r++) add(a[r+1]);\n        for(;r>q[i].r;r--) del(a[r]);\n        for(;l<q[i].l;l++) del(a[l]);\n        for(;l>q[i].l;l--) add(a[l-1]);\n        ans[q[i].id]=query();\n    }\n    for(int i=1;i<=m;i++) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```\n3 \u503c\u57df\u5206\u5757\uff0c\u5229\u7528\u5176$O(1)-O(\\sqrt n)$\u7684\u590d\u6742\u5ea6\uff0c\u53ef\u4ee5\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u79c0\u7684\u5e73\u8861\u4e3a$O(n\\sqrt m+n\\sqrt n)$\uff0c\u56e0\u4e3a\u6709\u4eba\u5199\u4e86\uff0c\u6211\u5c31\u4e0d\u8d34\u4ee3\u7801\u4e86",
        "postTime": 1549094223,
        "uid": 27030,
        "name": "ustze",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4137 \u3010Rmq Problem / mex\u3011"
    },
    {
        "content": "\u6211\u4eec\u8003\u8651\u83ab\u961f\u7684\u505a\u6cd5\u3002\u5982\u679c\u6211\u4eec\u5220\u9664\u4e00\u4e2a\u6570\uff0c\u90a3\u4e48\u7528\u88ab\u5220\u7684\u6570\u66f4\u65b0mex\u5373\u53ef\u3002\u5982\u679c\u52a0\u5165\u4e00\u4e2a\u6570\uff0c\u4f3c\u4e4e\u6bd4\u8f83\u9ebb\u70e6\uff08\u81f3\u5c11\u672c\u849f\u84bb\u6ca1\u60f3\u51fa\u6765\uff09\u3002\n\n\u4e8e\u662f\u6211\u4eec\u501f\u9274\u56de\u6eda\u83ab\u961f\u7684\u601d\u60f3\uff0c\u5199\u51fa\u53ea\u9700\u5220\u9664\u4e0d\u9700\u63d2\u5165\u7684\u83ab\u961f\u3002\n\n\u5927\u4e8en\u7684\u6570\u5bf9\u7b54\u6848\u65e0\u5f71\u54cd\uff0c\u5728\u5904\u7406\u65f6\u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565\u3002\n\n```CPP\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<=b;i++)\nusing namespace std;\nconst int maxn=2e+5+5;\nint n,m,ksiz;\nint aa[maxn];\nint bb[maxn];\nint bl[maxn];\n//unordered_map<int,int> se;\n//unordered_map<int,int> se2;\nint se[maxn],se2[maxn];\nint ans=0,ans2=0,ans3=0;\nstruct query{\n    int l;\n    int r;\n    int ans;\n    int id;\n}qq[maxn];\nbool operator <(query x,query y){\n    return bl[x.l]==bl[y.l]?x.r>y.r:bl[x.l]<bl[y.l];\n}\nint cnt=0;\nvoid add(int pos){\n    cnt++;\n    if(aa[pos]>n+1)return;\n    se[aa[pos]]++;\n}\nvoid del(int pos,int &myans){\n    cnt++;\n    if(aa[pos]>n+1)return;\n    se[aa[pos]]--;\n    if(se[aa[pos]]==0)myans=min(myans,aa[pos]);\n}\nint res[maxn];\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    rep(i,1,n)scanf(\"%d\",aa+i),bb[i]=aa[i];\n    sort(bb+1,bb+n+1);\n    rep(i,1,n)if(bb[i]==ans)ans++;\n    ksiz=sqrt(n);\n    rep(i,1,n)bl[i]=(i-1)/ksiz*ksiz+1;\n    rep(i,1,m)scanf(\"%d%d\",&qq[i].l,&qq[i].r);\n    rep(i,1,m)qq[i].id=i;\n    sort(qq+1,qq+m+1);\n    int l=1,r=n;\n    rep(i,1,n)se[aa[i]]++;\n    ans2=ans;\n    rep(i,1,m){\n        if(bl[qq[i].l]==bl[qq[i].r]){\n            rep(j,qq[i].l,qq[i].r)if(aa[j]<=n+1)se2[aa[j]]++;\n            qq[i].ans=0;\n            while(se2[qq[i].ans])qq[i].ans++;\n            rep(j,qq[i].l,qq[i].r)if(aa[j]<=n+1)se2[aa[j]]--;\n            continue;\n        }\n        while(l<bl[qq[i].l]){\n            while(r<n)add(++r); //restore right\n            del(l++,ans); //move kuai\n            ans2=ans;\n        }\n        while(r>qq[i].r)del(r--,ans2); //move right\n        ans3=ans2;\n        int lpie=l;\n        while(lpie<qq[i].l)del(lpie++,ans3);\n        while(lpie>l)add(--lpie);\n        qq[i].ans=ans3;\n    }\n    rep(i,1,m)res[qq[i].id]=qq[i].ans;\n    rep(i,1,m)printf(\"%d\\n\",res[i]);\n    //cout<<cnt<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1547015852,
        "uid": 72665,
        "name": "ferrum_cccp",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4137 \u3010Rmq Problem / mex\u3011"
    }
]