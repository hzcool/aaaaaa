[
    {
        "content": "\u697c\u4e0b or \u697c\u4e0a\u7684dalao\u5bf9\u4e0d\u8d77\uff0c\u73b0\u5728\u6211\u6210\u4e3a\u6700\u5feb\u4e14\u6700\u77ed\u7684\u4e00\u4efd\u4ee3\u7801\u4e86\u3002\n\n\u8fd9\u9053\u9898\u663e\u7136\u4e0d\u662f\u4ec0\u4e48<=6\u7279\u5224\u7684\u4e71\u641e\uff0c\u5176\u5b9e\u4e5f\u4e0d\u5e94\u8be5\u662fO(n * a(n))\u7684\u5e76\u67e5\u96c6\uff0c\u6b63\u786e\u7684\u505a\u6cd5\u662f\u7ebf\u6027\u7684\uff1a\u8003\u8651\u6240\u6709O(n)\u4e2a\u672c\u8d28\u4e0d\u540c\u7684\u56de\u6587\u4e32\uff0c\u5bf9\u6bcf\u4e2a\u56de\u6587\u4e32\u90fd\u53ef\u4ee5O(1)\u5224\u65ad\u3002\u5177\u4f53\u5b9e\u73b0\u4e2d,\u53ea\u9700\u8981\u5728manacher\u4e2dmx\u66f4\u65b0\u65f6,\u5224\u65ad\u6240\u6709\u65b0\u51fa\u73b0\u7684\u56de\u6587\u4e32\u7684\u524d\u4e00\u534a\u662f\u5426\u4e3a\u56de\u6587\u4e32\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar s[1000010]={'?'};\nint p[1000010],n,ans;\nvoid manacher(char *s,int n){\n    for(int c=0,mx=0,i=1;i<=n;i++){\n        p[i]=i<mx?min(p[2*c-i],mx-i):1;\n        while(s[i+p[i]]==s[i-p[i]])++p[i];\n        if(i+p[i]>mx){\n        \tif(i&1)for(int j=max(mx,i+4);j<i+p[i];j++)\n\t\t\t\tif(!(j-i&3) && p[i-(j-i)/2]>(j-i)/2)ans=max(ans,j-i);\n\t\t\tmx=i+p[i],c=i;\n\t\t}\n    }\n}\nint main(){\n\tscanf(\"%d %s\",&n,s+1);\n    for(int i=n;i;i--)s[i*2+1]='#',s[i*2]=s[i];s[1]='#';\n    manacher(s,2*n+1);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1530356735,
        "uid": 30093,
        "name": "cosmicAC",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4287 \u3010[SHOI2011]\u53cc\u500d\u56de\u6587\u3011"
    },
    {
        "content": "\u5173\u4e8e\u53cc\u500d\u56de\u6587\u8fd9\u9053\u9898\uff0c\u53ef\u4ee5\u7b97\u662f\u4e00\u9053\u56de\u6587\u81ea\u52a8\u673a\u7684\u677f\u5b50\u9898\n\n\u4f46\u662f\u9700\u8981\u7a0d\u5fae\u9b54\u6539\u4e00\u4e0b\uff0c\u5728\u6784\u9020\u56de\u6587\u81ea\u52a8\u673a\u7684\u8fc7\u7a0b\u4e2d\u987a\u5e26\u6c42\u51fa\u4e00\u4e2a $trans$ \u6307\u9488\n\n$trans$ \u6307\u9488\u7684\u542b\u4e49\u662f\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u8282\u70b9\u957f\u5ea6\u4e00\u534a\u7684\u6700\u957f\u56de\u6587\u540e\u7f00\uff0c\u6c42\u6cd5\u548c $fail$ \u6307\u9488\u7684\u6c42\u6cd5\u7c7b\u4f3c\n\n\u5f53\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\u540e\uff0c\u5982\u679c\u5b83\u7684\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e 2\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u7684 $trans$ \u6307\u9488\u6307\u5411\u5b83\u7684 $fail$ \u8282\u70b9\n\n\u5426\u5219\u7684\u8bdd\uff0c\u6211\u4eec\u540c\u7406\u4ece\u5b83\u7236\u4eb2\u7684 $trans$ \u6307\u9488\u6307\u5411\u7684\u8282\u70b9\u5f00\u59cb\u8df3   $fail$ \u6307\u9488\n\n\u76f4\u5230\u8df3\u5230\u67d0\u4e00\u4e2a\u8282\u70b9\u6240\u8868\u793a\u7684\u56de\u6587\u4e32\u7684\u4e24\u4fa7\u90fd\u80fd\u6269\u5c55\u8fd9\u4e2a\u5b57\u7b26\n\n\u5e76\u4e14\u62d3\u5c55\u540e\u7684\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u8282\u70b9\u957f\u5ea6\u7684\u4e00\u534a\n\n\u90a3\u4e48\u65b0\u5efa\u8282\u70b9\u7684 $trans$ \u7684\u6307\u9488\u5c31\u6307\u5411\u8be5\u8282\u70b9\u7684\u513f\u5b50\n\n\u6709\u5173\u56de\u6587\u81ea\u52a8\u673a\u7684\u4ecb\u7ecd\u53ca $fail$ \u6307\u9488\u7684\u6c42\u6cd5\uff0c\u8be6\u89c1[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/Polaris5452830/p/10498625.html)\n\n\u6c42\u5b8c\u8fd9\u4e2a $trans$ \u6307\u9488\u4e4b\u540e\uff0c\u8fd9\u4e2a\u9898\u5c31\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\u4e86\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5b57\u7b26\u4e32\u6ee1\u8db3\u53cc\u500d\u56de\u6587\n\n\u5f53\u4e14\u4ec5\u5f53\u5b83\u7684 $trans$ \u6307\u9488\u6307\u5411\u7684\u8282\u70b9\u6240\u8868\u793a\u7684\u56de\u6587\u4e32\u957f\u5ea6\u521a\u597d\u662f\u8fd9\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u4e00\u534a\uff0c\u5e76\u4e14\u8fd9\u4e2a $trans$ \u6307\u9488\u6307\u5411\u7684\u8282\u70b9\u6240\u8868\u793a\u7684\u56de\u6587\u4e32\u957f\u5ea6\u4e3a\u5076\u6570\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e2a\u8282\u70b9\uff0c\u4e0d\u505c\u7684\u66f4\u65b0\u7b54\u6848\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n\nconst int maxn=555555;\n\nchar s[maxn];\nint cnt,last;\nint trans[maxn];\nint son[maxn][26];\nint len[maxn],fail[maxn];\n\nint new_node(int length)\n{\n    len[++cnt]=length;\n    return cnt;\n}\n\nint get_fail(int pre,int now)\n{\n    while(s[now-len[pre]-1]!=s[now])\n        pre=fail[pre];\n    return pre;\n}\n\nvoid build_PAM()\n{\n    cnt=1,last=0;\n    len[0]=0,len[1]=-1;\n    fail[0]=1,fail[1]=1;\n    for(int i=1;s[i];i++)\n    {\n        int cur=get_fail(last,i);\n        if(!son[cur][s[i]-'a'])\n        {\n            int now=new_node(len[cur]+2);\n            fail[now]=son[get_fail(fail[cur],i)][s[i]-'a'];\n            son[cur][s[i]-'a']=now;\n            //\u987a\u5e26\u6c42\u51fatrans\u6307\u9488 \n            if(len[now]<=2) trans[now]=fail[now];\n            else\n            {\n                int tmp=trans[cur];\n                while(s[i-len[tmp]-1]!=s[i]||((len[tmp]+2)<<1)>len[now]) tmp=fail[tmp];\n                //\u6ce8\u610f\u62d3\u5c55\u540e\u7684\u957f\u5ea6\u4e3alen[tmp]+2\n                trans[now]=son[tmp][s[i]-'a'];\n            }\n        }\n        last=son[cur][s[i]-'a'];\n    }\n}\n\nint n,ans;\n\nint main()\n{\n    scanf(\"%d\",&n);\n    scanf(\"%s\",s+1);\n    build_PAM();\n    for(int i=2;i<=cnt;i++)//\u679a\u4e3e\u6240\u6709\u8282\u70b9\n        if(((len[trans[i]]<<1)==len[i]&&len[trans[i]]%2==0))\n            ans=std::max(ans,len[i]);//\u66f4\u65b0\u7b54\u6848\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1552100087,
        "uid": 121921,
        "name": "Polaris5452830",
        "ccfLevel": 3,
        "title": "P4287 [SHOI2011]\u53cc\u500d\u56de\u6587"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u53ef\u80fd\u6bd4\u8f83\u597d\u60f3\u7684 manacher\uff1a\n\n\u6211\u4eec\u679a\u4e3e\u53cc\u500d\u56de\u6587\u4e32\u53f3\u8fb9\u90e8\u5206\u7684\u4e2d\u5fc3\u70b9\u65f6\uff0c\u9700\u8981\u627e\u5230\u8fd9\u4e2a\u4e2d\u5fc3\u70b9\u5bf9\u5e94\u7684\u53cc\u500d\u56de\u6587\u4e32\u7684\u4e2d\u5fc3\u70b9\u3002\u6839\u636e\u53cc\u500d\u56de\u6587\u4e32\u7684\u6027\u8d28\uff0c\u8fd9\u4e24\u4e2a\u70b9\u90fd\u5e94\u8be5\u662f\u7279\u6b8a\u7b26\u53f7\u800c\u4e0d\u662f\u5b57\u6bcd\uff08\u6ee1\u8db3\u957f\u5ea6\u4e3a 4 \u7684\u500d\u6570\uff09\uff0c\u5e76\u4e14\u8fd9\u4e24\u4e2a\u70b9\u5e94\u8be5\u6ee1\u8db3 $mid + \\frac{p_{mid} - 1}{2} \\ge i$\uff0c\u5176\u4e2d $mid$ \u662f\u53cc\u500d\u56de\u6587\u4e32\u7684\u4e2d\u5fc3\u70b9\uff0c$p_{mid}$ \u662f $mid$ \u5bf9\u5e94\u7684\u56de\u6587\u4e32\u957f\u5ea6 +1\uff0c$i$ \u662f\u53cc\u500d\u56de\u6587\u4e32\u53f3\u8fb9\u90e8\u5206\u7684\u4e2d\u5fc3\u70b9\u3002\u56e0\u4e3a\u5982\u679c $mid + \\frac{p_{mid} - 1}{2} < i$\uff0c\u53ef\u4ee5\u8bc1\u660e\u6b64\u65f6\u56de\u6587\u4e32\u957f\u5ea6\u8fd8\u5e94\u8be5\u66f4\u957f\uff0c\u4e0d\u7b26\u5408\u9898\u610f\u3002\u7136\u540e\u6211\u4eec\u67e5\u627e\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\u5c3d\u91cf\u9760\u5de6\u7684 $mid$ \u70b9\u5c31\u53ef\u4ee5\u4e86\uff0c\u6b64\u65f6\u7b54\u6848\u5c31\u662f $2 \\times (i - mid)$\uff0c\u7136\u540e\u6211\u4eec\u5bf9\u8fd9\u4e9b\u503c\u53d6\u6700\u5927\u503c\u3002\n\n\u4e3a\u4e86\u52a8\u6001\u63d2\u5165\u3001\u67e5\u627e\u7b26\u5408\u6761\u4ef6\u7684 $mid$ \u70b9\uff0c\u6211\u4eec\u9700\u8981\u4e24\u4e2a set\uff0c\u7b2c\u4e00\u4e2a set \u91cc\u5b58\u50a8\u6309 $mid + \\frac{p_{mid} - 1}{2}$ \u6392\u5e8f\u5143\u7d20\uff0c\u7b2c\u4e8c\u4e2a set \u5b58\u50a8\u6309 $mid$ \u5927\u5c0f\u6392\u5e8f\u7684\u5143\u7d20\u3002\u6211\u4eec\u6bcf\u6b21\u5728\u7b2c\u4e00\u4e2a set \u91cc\u5220\u9664\u5bf9\u4e8e\u5f53\u524d $i$ \u4e0d\u6ee1\u8db3 $mid + \\frac{p_{mid} - 1}{2} \\ge i$ \u7684\u5143\u7d20\uff0c\u5e76\u5728\u7b2c\u4e8c\u4e2a set \u91cc\u5220\u9664\u5bf9\u5e94\u7684 $mid$\uff0c\u67e5\u627e\u65f6\u76f4\u63a5\u5728\u7b2c\u4e8c\u4e2a set \u91cc\u7528 `lower_bound()` \u51fd\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<set>\nusing namespace std;\nconst int N = 1e6 + 20;\nint n, ans;\nchar s[N];\nint p[N];\nset<pair<int, int> > s1;\nset<int> s2;\nvoid manacher(char *s) {\n\tfor (int i = 1, r = 0, id = 0; i < n; i++) {\n\t\tif (i < r) p[i] = min(p[id * 2 - i], r - i);\n\t\telse p[i] = 1;\n\t\twhile (s[i + p[i]] == s[i - p[i]]) p[i]++;\n\t\tif (i + p[i] > r) r = i + p[i], id = i;\n\t\tif (s[i] == '$') {\n\t\t\ts1.insert(make_pair(i + (p[i] - 1) / 2, i));\n\t\t\ts2.insert(i);\n\t\t\twhile (s1.begin()->first < i) s2.erase(s1.begin()->second), s1.erase(s1.begin());\n\t\t\tint t = *s2.lower_bound(i - p[i]);\n\t\t\tans = max(ans, (i - t) * 2);\n\t\t}\n\t}\n}\nint main() {\n\ts[0] = '#';\n\tscanf(\"%d\", &n);\n\tscanf(\"%s\", s + 1);\n\tfor (int i = n * 2 + 1; i >= 1; i--)\n\t\tif (i & 1) s[i] = '$';\n\t\telse s[i] = s[i >> 1];\n\ts[n * 2 + 2] = '\\0';\n\tn = strlen(s);\n\tmanacher(s);\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1586403930,
        "uid": 144740,
        "name": "\u9006\u6d41\u4e4b\u65f6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4287 \u3010[SHOI2011]\u53cc\u500d\u56de\u6587\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u5efa\u56de\u6587\u81ea\u52a8\u673aPAM\uff0c\u4e0d\u77e5\u9053\u7684\u53ef\u4ee5\u770b[\u8fd9\u7bc7\u535a\u5ba2](<https://blog.csdn.net/u013368721/article/details/42100363>)\uff08\u548c\u53e6\u4e00\u7bc7\u9898\u89e3\u7684\u5e76\u4e0d\u4e00\u6837\n\n\u7136\u540e\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7edf\u8ba1\u7b54\u6848\uff0c\u4f46\u6211\u4eec\u5e72\u561b\u8981\u66b4\u529b\u8df3$fail$\u5462\uff1f\uff08\u4e0d\u8fc7\u53e6\u4e00\u7bc7PAM\u7684\u526a\u679d\u597d\u50cf\u8fd8\u884c\uff0c\u4e0d\u77e5\u9053\u80fd\u4e0d\u80fd\u5361\n\n\u4e00\u4e2a\u7b80\u5355\u7684\u601d\u8def\u5bf9$fail$\u6811\u8fdb\u884c\u500d\u589e\uff0c\u7136\u540e\u76f4\u63a5\u627e\u4e00\u534a\u957f\u5ea6\u7684\u5c31\u884c\u4e86\uff0c\u4f46\u8fd9\u6837\u662f$O(n\\log n)$\u7684\n\n\u4e0d\u59a8\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a$f_i$\u6570\u7ec4\uff0c\u4ee3\u8868$i$\u8fd9\u4e2a\u8282\u70b9\u5c0f\u4e8e\u7b49\u4e8eta\u4e00\u534a\u957f\u5ea6\u7684\u6700\u957f\u56de\u6587\u540e\u7f00\uff0c\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5$O(n)$\u66f4\u65b0\u3002\n\n\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u6bcf\u6b21\u5148\u8df3\u5230\u7236\u4eb2\u7684$f_i$\u90a3\u91cc\uff0c\u7136\u540e\u7528$fail$\u6570\u7ec4\u7ee7\u7eed\u8df3\u51fa\u4e00\u4e2a\u56de\u6587\u4e32\u5c31\u884c\u4e86\uff0c\u6ce8\u610f\u5728\u957f\u5ea6\u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\u8981\u7279\u5224\u3002\u8fd9\u91cc\u8bf4\u7684\u53ef\u80fd\u4e0d\u592a\u6e05\u695a\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u4ee3\u7801\u3002\n\n------\n\n**Code:**\n\n```cpp\n#include <cstdio>\n#include <cstring>\nconst int N=5e5+10;\nint ch[N][26],fail[N],f[N],len[N],tot,n;\nchar s[N];\nint getfail(int now,int p)\n{\n    while(s[p]!=s[p-len[now]-1]) now=fail[now];\n    return now;\n}\nvoid PAM()\n{\n    len[fail[0]=++tot]=-1;\n    scanf(\"%d%s\",&n,s+1);\n    for(int now,las=0,i=1;i<=n;i++)\n    {\n        int cur=getfail(las,i),c=s[i]-'a';\n        if(!ch[cur][c])\n        {\n            fail[now=++tot]=ch[getfail(fail[cur],i)][c];\n            len[now]=len[cur]+2;\n            ch[cur][c]=now;\n            if(len[fail[now]]<=len[now]>>1) f[now]=fail[now];\n            else\n            {\n                int p=f[cur];\n                while((len[p]+2>len[now]>>1)||(s[i]!=s[i-len[p]-1])) p=fail[p];\n                f[now]=ch[p][c];\n            }\n        }\n        las=ch[cur][c];\n    }\n}\nint main()\n{\n    PAM();int ans=0;\n    for(int i=2;i<=tot;i++)\n        if(len[i]%4==0&&len[f[i]]==len[i]>>1)\n            ans=ans>len[i]?ans:len[i];\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1544789105,
        "uid": 63727,
        "name": "ButterflyDew",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4287 \u3010[SHOI2011]\u53cc\u500d\u56de\u6587\u3011"
    },
    {
        "content": "# \u89e3\u6cd5\u4e00\uff1a\n\n\u5bf9\u539f\u4e32\u6784\u5efa\u56de\u6587\u81ea\u52a8\u673a\n\n\u62bd\u79bbfail\u6811\uff0c\u4ece\u6839\u5f00\u59cbdfs\n\n\u8bbelen[x]\u8868\u793a\u8282\u70b9x\u8868\u793a\u7684\u6700\u957f\u56de\u6587\u5b50\u4e32\u957f\u5ea6\n\n\u5728fail\u6811\u4e0a\uff0cx\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u70b9\u8868\u793a\u7684\u5b57\u7b26\u4e32\u5305\u542b\u4e86x\u4ee3\u8868\u7684\u56de\u6587\u5b50\u4e32\u7684\u6240\u6709\u56de\u6587\u540e\u7f00/\u524d\u7f00\n\n\u6240\u4ee5\u82e5dfs\u5230\u4e86x\uff0c\u82e5len[x]\u4e3a\u5076\u6570\uff0c\u6807\u8bb0len[x]*2\uff0c\u5982\u679c\u5728x\u7684\u5b50\u6811\u4e2d\u80fd\u627e\u5230len\u4e3alen[x]*2\u7684\u70b9\uff0c\u90a3\u4e48len[x]*2*2\u5c31\u53ef\u4ee5\u7528\u6765\u66f4\u65b0\u7b54\u6848\n\n\n\n\n\n\n# \u89e3\u6cd5\u4e8c\uff1a\n\n\u539f\u4e32\u548c\u5176\u53cd\u4e32\u62fc\u63a5\uff0c\u4e2d\u95f4\u7528\u4e24\u4e2a\u4e0d\u4e00\u6837\u7684\u5b57\u7b26\u9694\u5f00\n\n\u7136\u540e\u6784\u5efa\u56de\u6587\u81ea\u52a8\u673a\n\n\u8003\u8651\u4e00\u4e2a\u53cc\u500d\u56de\u6587\u7684\u5206\u5272\u70b9i\u548ci+1\n\ni\u662f\u524d\u7f00\u56de\u6587\u7684\u7ed3\u675f\u4f4d\u7f6e\n\ni+1\u662f\u540e\u7f00\u56de\u6587\u7684\u5f00\u59cb\u4f4d\u7f6e\n\n\u8bbe\u4ee5i\u4e3a\u7ed3\u675f\u4f4d\u7f6e\u7684\u6700\u957f\u56de\u6587\u5b50\u4e32\u4e3as1\uff0c\u5728\u56de\u6587\u81ea\u52a8\u673a\u4e0a\u7684\u8282\u70b9\u4e3aa\n\n\u8bbe\u4ee5i+1\u5f00\u59cb\u4f4d\u7f6e\u7684\u6700\u957f\u56de\u6587\u5b50\u4e32\u4e3as2\uff0c\u5728\u56de\u6587\u81ea\u52a8\u673a\u4e0a\u7684\u8282\u70b9\u4e3ab\n\n\u8bbe\u524d\u7f00\u4ee5i\u7ed3\u675f\uff0c\u540e\u7f00\u4ee5i+1\u5f00\u59cb\u7684\u53cc\u500d\u56de\u6587\u5b50\u4e32\u7684\u4e00\u534a\u4e3as\uff0c\u957f\u5ea6\u4e3aL\n\n\u90a3\u4e48\u73b0\u5728\u6709\u4e24\u4e2a\u8981\u6c42\uff1a\n\n1\u3001L\u4e3a\u5076\u6570\n\n2\u3001s\u662fs1\u7684\u540e\u7f00\uff0cs\u662fs2\u7684\u524d\u7f00\uff0c\u4e14s\u6700\u957f\n\n\u5bf9\u4e8e\u8981\u6c422\uff0c\u56e0\u4e3a\u5f00\u59cb\u539f\u4e32\u548c\u53cd\u4e32\u62fc\u63a5\u6784\u5efa\u4e86\u56de\u6587\u81ea\u52a8\u673a\uff0c\u6240\u4ee5\u5c31\u662f\u6c42a\u548cb\u5728fail\u6811\u4e0a\u7684LCA\n\n\u5bf9\u4e8e\u8981\u6c421\uff0c\u5bf9\u6bcf\u4e2a\u70b9x\u8bb0\u5f55fail\u6811\u4e0a x\u7684\u7956\u5148\u4e2d\u79bb\u5b83\u6700\u8fd1\u7684\u957f\u5ea6\u4e3a\u5076\u6570\u7684\u56de\u6587\u4e32\u5373\u53ef\n\n \n\n\u500d\u589e\u6c42LCA\u4f1a\u8d85\u65f6\n\n\u4e0d\u4f1atarjan\u6c42LCA\uff08~~~~(>_<)~~~~\uff09\n\n\u6811\u94fe\u5256\u5206\u6c42LCA \u4f1a\u88ab\u5361\u7a7a\u95f4\n\n\u6700\u540e\u8fd8\u662f\u9009\u4e86\u6811\u5256\u3002\u3002\u3002\n\n\u56de\u6587\u81ea\u52a8\u673a\u7528\u4e86map\u5b58\u50a8\uff0c\n\n\u6ce8\u610f\u56de\u6587\u81ea\u52a8\u673a\u4e2d\u6709\u8282\u70b90\uff0c\u5728\u6811\u5256\u7b2c\u4e8c\u904ddfs\u7684\u65f6\u5019\uff0c\u91cd\u513f\u5b50\u521d\u59cb\u5316\u7684\u7f16\u53f7\u4e0d\u80fd\u662f0\n\n\n```\n#include<map>\n#include<cmath>\n#include<cstdio>\n#include<algorithm>\n \nusing namespace std;\n \n#define N 1000001\n \nint n,m;\nchar ss[N+1];\nint s[N+1];\n \nint tot=1,last;\nint len[N],fail[N];\nmap<int,int>tr[N];\nint p,c,np,t;\n \nint use[N],pos[N];\n \nint front[N],to[N],nxt[N],cnt;\n \nint bl[N],dep[N],siz[N],fa[N];\n \nvoid add(int u,int v)\n{\n    to[++cnt]=v; nxt[cnt]=front[u]; front[u]=cnt;\n}\n \nvoid extend(int i)\n{\n    p=last; c=s[i];\n    while(s[i-1-len[p]]!=c) p=fail[p];\n    if(!tr[p][c])\n    {\n        np=++tot;\n        len[np]=len[p]+2;\n        t=fail[p];\n        while(s[i-1-len[t]]!=c) t=fail[t];\n        fail[np]=tr[t][c];\n        add(fail[np],np);\n        use[np]=len[np]&1 ? use[fail[np]] : np;\n        tr[p][c]=np;\n    }\n    else np=tr[p][c];\n    last=np;\n    pos[i]=np;\n}\n \nvoid build()\n{\n    s[0]=-1;\n    for(int i=1;i<=n;++i) s[i]=ss[i]-'a';\n    m=n;\n    s[++m]=26; s[++m]=27;\n    for(int i=n;i;--i) s[++m]=ss[i]-'a';\n    fail[0]=1;\n    len[1]=-1;\n    for(int i=1;i<=m;++i) extend(i);\n}\n \nvoid dfs1(int x)\n{\n    siz[x]=1;\n    for(int i=front[x];i;i=nxt[i])\n    {\n        dep[to[i]]=dep[x]+1;\n        fa[to[i]]=x;\n        dfs1(to[i]);\n        siz[x]+=siz[to[i]];\n    }\n}\n \nvoid dfs2(int x,int top)\n{\n    int y=-1;\n    bl[x]=top;\n    for(int i=front[x];i;i=nxt[i])\n        if(y==-1 || siz[to[i]]>siz[y]) y=to[i];\n    if(y==-1) return;\n    dfs2(y,top);\n    for(int i=front[x];i;i=nxt[i])\n        if(to[i]!=y) dfs2(to[i],to[i]);\n}\n \nint get_lca(int u,int v)\n{\n    while(bl[u]!=bl[v])\n    {\n        if(dep[bl[u]]<dep[bl[v]]) swap(u,v);\n        u=fa[bl[u]];\n    }\n    return dep[u]<dep[v] ? u : v;\n}\n \nvoid solve()\n{\n    add(1,0);\n    dfs1(1);\n    dfs2(1,1);\n    int ans=0;\n    int lca;\n    for(int i=1;i<=n;++i)\n    {\n        lca=get_lca(pos[i],pos[m-i]);\n    //  printf(\"%d %d\\n\",pos[i],pos[m-i]);\n        ans=max(ans,len[use[lca]]<<1);\n        //printf(\"%d\\n\",ans);\n    }\n    printf(\"%d\",ans);\n}\n \nint main()\n{\n    scanf(\"%d\",&n);\n    scanf(\"%s\",ss+1);\n    build();\n    solve();\n}\n```\n",
        "postTime": 1561340909,
        "uid": 111289,
        "name": "Ryan_",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4287 \u3010[SHOI2011]\u53cc\u500d\u56de\u6587\u3011"
    },
    {
        "content": "~~\u6211\u7adf\u7136\u662f\u7b2c\u4e00\u4e2a\u53d1\u9898\u89e3\u7684\uff1f\uff01~~\n## \u5e7f\u544a\n[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/xzyxzy/)\n\n\u535a\u4e3b\u6700\u8fd1\u5728\u5b66\u4e60\u5b57\u7b26\u4e32/FFT/\u9000\u706b\u7b49\u7b97\u6cd5\uff0c\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u8fdb\u6765\u73a9\u73a9\n\n## \u6b63\u6587\n\u8003\u8651\u6211\u4eec\u7528Manacher\u662f\u600e\u4e48\u6c42\u6700\u957f\u56de\u6587\u5b50\u4e32\u7684\uff08\u5982\u679c\u4e0d\u4f1a\uff0c[\u8bf7\u6233\u6211](https://www.cnblogs.com/xzyxzy/p/9150723.html)\uff09\n\n\u90a3\u4e48\u5982\u679c\u662f\u53cc\u500d\u56de\u6587\u5b57\u4e32\u7684\u8bdd\uff0c\u679a\u4e3e\u5230\u53f3\u5b50\u56de\u6587\u4e32\u7684\u4e2d\u5fc3\u7684\u65f6\u5019\uff0c\u5bf9\u5e94\u5730\u627e\u5230\u6700\u957f\u53cc\u500d\u56de\u6587\u5b50\u4e32\u7684\u4e2d\u5fc3\uff0c\u7136\u540e\u5bf9\u79f0\u5730\u770b\u662f\u5426\u7b26\u5408\u6761\u4ef6\n\n\u4e3e\u4e2a\u4f8b\u5b50\n\n`#b#a#a#b#b#a#a#b#`\n\u5f53\u6211\u679a\u4e3e\u5230\u7b2c13\u4f4d\u7684\u65f6\u5019\uff08\u4ece1\u5f00\u59cb\uff09\uff0c\u5c0613\u4f5c\u4e3a\u53f3\u5b50\u4e32\u4e2d\u5fc3\uff0c\u627e\u5230\u53cc\u500d\u56de\u6587\u5b50\u4e32\u4e2d\u5fc3\u7b2c9\u4f4d\uff0c\u5bf9\u79f0\u770b\u7b2c5\u4f4d\u4e5f\u6ee1\u8db3\u6761\u4ef6\uff0c\u90a3\u4e48\u66f4\u65b0\u7b54\u6848\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\u4e00\u4e9b\u89c4\u5f8b\n\n- \u5de6\u53f3\u4e32\u4e2d\u5fc3\u548c\u5168\u4e32\u4e2d\u5fc3\u5fc5\u987b\u8981\u662f#\n- \u80fd\u591f\u88ab\u53f3\u4e32\u4e2d\u5fc3\u8ba1\u7b97\u5230\u7684\u5168\u4e32\u4e2d\u5fc3\u662f\u4e00\u6bb5\u533a\u95f4\uff08\u539f\u6765\u6211\u4ee5\u4e3a\u662f\u4e00\u4e2a\u70b9\uff0cWA\u4e86Test6\uff09\uff0c\u53ef\u4ee5\u7528\u961f\u5217\u7ef4\u62a4\uff08\u4f46\u662f\u5bf9\u4e8e\u5168\u662fa\u7684\u4f1aT\uff0c\u6240\u4ee5\u52a0\u4e0at-h<100\uff09\n- \u7b54\u6848\u5c31\u662f(i-Centre)*2\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\nusing namespace std;\nconst int MAXN=1500000;\nint N,l,C,R,p[MAXN],Ans;\nint Q[MAXN],h,t;\nchar s[MAXN];\nint main()\n{\n\tcin>>N;\n\tchar ch=getchar();\n\twhile(ch>'z'||ch<'a') ch=getchar();\n\ts[++l]='#';\n\twhile(ch>='a'&&ch<='z')\n\t{\n\t\ts[++l]=ch;s[++l]='#';\n\t\tch=getchar();\n\t}\n\tfor(int i=1;i<=l;i++)\n\t{\n\t\tif(i<R)\n\t\t{\n\t\t\tp[i]=min(p[C*2-i],R-i);\n\t\t\twhile(t-h>100||((i-Q[h])*2>p[Q[h]]&&h<t)) h++;\n\t\t\tfor(int j=h;j<=t;j++)\n\t\t\t\tif(s[i]=='#'&&s[Q[j]]=='#'&&i-Q[j]+1<=p[i])\n\t\t\t\t\tAns=max(Ans,(i-Q[j])*2);\n\t\t}\n\t\telse p[i]=1;\n\t\twhile(s[i-p[i]]==s[i+p[i]]&&i-p[i]>=1&&i+p[i]<=l) p[i]++;\n\t\tif(i+p[i]>R) R=i+p[i],C=i,Q[++t]=i;\n\t}\n\tprintf(\"%d\\n\",Ans);\n\treturn 0;\n}\n\n```\n\u521a\u624d\u5361\u4e86\u4e00\u5361\uff0c\u53d1\u73b0\u80fd\u591f\u8f6c\u79fb\u7684\u53d66\u4e2a\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e5f\u5c31\u662ft-h<6\n\n~~\u4f5c\u4e3a\u6700\u77ed\u53c8\u6700\u5feb\u7684\u4ee3\u7801\uff0c\u6211\u6709\u70b9\u98d8\u554a\u3002\u3002~~",
        "postTime": 1528356165,
        "uid": 43628,
        "name": "xzyxzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4287 \u3010[SHOI2011]\u53cc\u500d\u56de\u6587\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\n\n\u6c42\u51fa\u7ed9\u5b9a\u5b57\u7b26\u4e32 $S$ \u7684\u4e00\u4e2a\u6700\u5927\u53cc\u500d\u56de\u6587\u5b50\u4e32\u3002\n\n\u53cc\u500d\u56de\u6587\u4e32\uff1a \u6307\u4e00\u4e2a\u4e32\u80fd\u88ab\u5206\u89e3\u4e3a\u4e24\u4e2a\u76f8\u540c\u7684\u56de\u6587\u4e32\u4e14\u5b83\u4eec\u957f\u5ea6\u4e3a $2$ \u7684\u500d\u6570\u3002\n\n\u5982\uff1a $\\texttt{abbaabba}\\ ,\\ \\texttt{cccc}$\n\n$| S | \\leq 5\\times 10^5$\n\n---\n\n\u8003\u8651\u5148\u5efa\u7acb\u56de\u6587\u81ea\u52a8\u673a\uff0c\u90a3\u4e48\u5982\u679c\u4e00\u4e2a\u56de\u6587\u4e32\u7684\u67d0\u4e2a\u56de\u6587\u540e\u7f00\u957f\u5ea6\u662f $2$ \u7684\u500d\u6570\u4e14\u957f\u5ea6\u6070\u597d\u4e3a\u539f\u4e32\u4e00\u534a\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u4e00\u4e2a\u53cc\u500d\u56de\u6587\u4e32\u3002\n\n\u8003\u8651\u600e\u4e48\u5904\u7406\u4e0a\u8ff0\u7684\u6761\u4ef6\uff0c\u4e0d\u59a8\u5148\u5efa\u7acb\u4e00\u9897\u56de\u6587\u81ea\u52a8\u673a\u4e0a\u7684\u540e\u7f00\u6811 ( \u6bcf\u4e2a\u8282\u70b9\u6307\u5411\u5b83\u7684 ``next / fail`` ) \uff0c\u7136\u540e\u539f\u9898\u76ee\u8f6c\u5316\u4e3a\u5728\u4e00\u9897\u6811\u4e0a\u627e\u5230\u957f\u5ea6\u6700\u5927\u4e00\u4e2a\u70b9\u6ee1\u8db3\u5b83\u6709\u67d0\u4e2a\u7956\u5148\u957f\u5ea6\u662f\u5b83\u4e00\u534a\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u76f4\u63a5\u904d\u5386\u6574\u68f5\u6811\uff0c\u904d\u5386\u65f6\u5b58\u4e0b\u6765\u4e4b\u524d\u7956\u5148\u7684\u957f\u5ea6\uff0c\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u6765\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O(n\\log n)$ \u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\uff0c\u89e3\u6cd5\u6e05\u65b0\u81ea\u7136\uff0c\u601d\u7ef4\u96be\u5ea6\u5c0f\uff0c\u4ee3\u7801\u957f\u5ea6\u8f83\u77ed\uff0c\u76f8\u4fe1\u8fd9\u7bc7\u9898\u89e3\u4e00\u5b9a\u80fd\u4e3a\u4f60\u7684 OI \u4e4b\u8def\u63d0\u4f9b\u6709\u529b\u7684\u5e2e\u52a9\uff01\uff08\u7b11\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define Mid ((L+R)>>1)\nusing namespace std;\ntypedef pair<int,int> pii;\ninline int read(){\n\tchar c;int x=0;int b=1;do{c=getchar();if(c==45)b=-1;}while(c>57||c<48);\n\tdo x=x*10+c-48,c=getchar();while(c<=57&&c>=48);x*=b;return x;\n}\nconst int maxn=500010;\nint i,j,k,n,m,Next[maxn],is[maxn],cnt=1;\nchar S[maxn];\nstruct node{\n\tint C[27],len;\n}a[maxn];\nint getNext(int now,int len){\n\twhile(S[len] != S[len-a[now].len-1])now=Next[now];\n\treturn now;\n}\nvoid add(int x,int y);\nvoid insert(){\n\tint len=strlen(S),now=0;\n\tfor(int i=0;i<len;i++){\n\t\tint X=getNext(now,i),Num=S[i]-'a'+1;\n\t\tif(!a[X].C[Num]){\n\t\t\ta[++cnt].len=a[X].len+2;\n\t\t\tNext[cnt]=a[getNext(Next[X],i)].C[Num];\n\t\t\ta[X].C[Num]=cnt;\n\t\t\tadd(Next[cnt],cnt);\n\t\t}now=a[X].C[Num];\n\t\tis[now]=1;\n\t}\n}\nstruct edge{\n\tint next,to;\n}e[maxn*2];\nint head[maxn],len;\nvoid add(int x,int y){\n\te[++len]={head[x],y};\n\thead[x]=len;\n}\nint ans=0;\nint Q[maxn],l=1,r;\nvoid dfs(int now){\n\tint lastl=l,lastr=r;\n\twhile(l<=r && Q[l]*2 < a[now].len)l++;\n\tif(l<=r && Q[l]*2==a[now].len && a[now].len%4==0)\n\t\tans=max(ans,a[now].len);\n\tQ[++r]=a[now].len;\n\tfor(int i=head[now];i;i=e[i].next){\n\t\tint u=e[i].to;\n\t\tdfs(u);\n\t}\n\tl=lastl;r=lastr;\n}\nint main() {\n\tfreopen(\"P4287.in\",\"r\",stdin);\n\tfreopen(\"P4287.out\",\"w\",stdout);\n\tcin>>n>>S;\n\ta[0].len=0;Next[0]=1;\n\ta[1].len=-1;Next[1]=1;\n\tadd(0,1);\n\tinsert();\n\tdfs(0);\n\tcout<<ans<<endl;\n\t//cerr << 1.0*clock()/CLOCKS_PER_SEC << endl;\n\treturn 0;\n}\n```",
        "postTime": 1592472699,
        "uid": 35891,
        "name": "huangzirui",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4287 \u3010[SHOI2011]\u53cc\u500d\u56de\u6587\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\u7528\u4e86\u4e00\u79cd\u5f88\u5947\u602a\u7684\u65b9\u6cd5\u6765\u89e3\uff0c\u5373\u4e8c\u5206\u5224\u65ad\u56de\u6587\uff0c\u518d\u8fdb\u884c\u67d0\u4e9b\u5947\u602a\u7684\u4f18\u5316\u3002\u56e0\u4e3a\u8fd9\u4e2a\u65b9\u6cd5\u5f88\u5947\u602a\uff0c\u6240\u4ee5\u5e0c\u671b\u5982\u679c\u6709\u95ee\u9898\u80fd\u591f hack \u4e00\u4e0b\u3002\n\n## \u9898\u89e3\n\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u9898\u4e2d\u8981\u6c42\u7684\u662f\u5b57\u7b26\u4e32 $SS'SS'$\uff0c\u5176\u4e2d $S'$ \u662f $S$\u7684\u53cd\u5411\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e32\u957f\u5ea6\u5fc5\u5b9a\u4e3a $4$ \u7684\u500d\u6570\u3002\u90a3\u4e48\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u5bfb\u627e\u4e00\u7ec4\u6700\u5927\u7684 $SS'$\uff0c\u7136\u540e\u627e\u8fd9\u524d\u9762\u662f\u5426\u6709\u4e00\u4e2a\u4e0e\u4ed6\u76f8\u540c\u7684 $SS'$\uff0c\u5982\u679c\u6709\uff0c\u90a3\u4e48\u8fd9\u4e24\u7ec4\u5b57\u7b26\u4e32\u7ec4\u6210\u4e00\u4e2a\u53cc\u500d\u56de\u6587\u3002\u4f46\u662f\u95ee\u9898\u5728\u4e8e\u5bf9\u4e8e\u67d0\u4e9b\u60c5\u51b5\uff0c\u4f8b\u5982 `bbbbbbbbbbb`\uff0c\u5728\u7b2c $3$ \u548c $4$ \u4e2a\u5b57\u7b26\u4e2d\u95f4\u4ee5\u53ca\u7b2c $8$ \u548c $9$ \u4e2a\u5b57\u7b26\u4e2d\u95f4\uff0c\u90fd\u80fd\u53d6\u5230\u957f\u5ea6\u4e3a $3$ \u7684\u56de\u6587 `bbb`\uff0c\u4f46\u662f\u4ed6\u4eec\u5171\u7528\u4e86\u7b2c $6$ \u4e2a\u5b57\u7b26\uff0c\u4ece\u800c\u9020\u6210\u6700\u5927\u53cc\u500d\u56de\u6587\u5b50\u4e32\u957f\u5ea6\u4e3a $3$ \u7684\u5047\u8c61\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u5047\u8c61\u7684\u53d1\u751f\uff0c\u540c\u65f6\u4fdd\u8bc1\u7b54\u6848\u957f\u5ea6\u7684\u6700\u5927\u5316\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5171\u7528\u7684\u90e8\u5206\u4e00\u5206\u4e3a\u4e8c\uff0c\u5404\u6267\u4e00\u534a\u3002\n\n\u4ed4\u7ec6\u601d\u8003\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e00\u5171\u7528\u7684\u90e8\u5206\u53ea\u53ef\u80fd\u662f\u4e00\u4e2a\u5b57\u7b26\u96c6\u5927\u5c0f\u4e3a $1$ \u7684\u5b57\u7b26\u4e32\uff08\u8bed\u6587\u4e0d\u597d\u4e0d\u77e5\u9053\u600e\u4e48\u8868\u8fbe\uff09\u3002\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\uff0c\u56de\u6587\u5b50\u4e32\u5173\u4e8e\u5bf9\u79f0\u4e2d\u5fc3\u5bf9\u79f0\uff0c\u5373\u5728\u8be5\u56de\u6587\u5b50\u4e32\u957f\u5ea6\u8303\u56f4\u5185\u4e0e\u5bf9\u79f0\u4e2d\u5fc3\u8ddd\u79bb\u76f8\u540c\u7684\u4e24\u4e2a\u5b57\u7b26\u76f8\u540c\uff0c\u4e24\u4e2a\u4e32\u5171\u7528\u7684\u90e8\u5206\u4f4d\u4e8e\u4e00\u4e2a\u4e32 $A$ \u7684\u672b\u5c3e\u548c\u53e6\u4e00\u4e2a\u4e32 $B$ \u7684\u5f00\u5934\uff0c\u5f53\u6211\u4eec\u628a\u4e32 $B$ \u7684\u5f00\u5934\u6620\u5c04\u5230\u4e32 $A$ \u7684\u5f00\u5934\uff08\u56e0\u4e3a $A$ \u4e32\u548c $B$ \u4e32\u76f8\u540c\uff09\u540e\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ea\u6709\u7b26\u5408\u5b57\u7b26\u96c6\u5927\u5c0f\u4e3a $1$ \uff0c\u624d\u80fd\u7b26\u5408\u4e0a\u8ff0\u6027\u8d28\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u9884\u5904\u7406\u65f6\u628a\u6bcf\u4e00\u6bb5\u5b57\u7b26\u96c6\u5927\u5c0f\u4e3a $1$ \u7684\u957f\u5ea6\u7b49\u4fe1\u606f\u505a\u597d\u6807\u8bb0\uff0c\u7136\u540e\u5728\u8ba1\u7b97\u5b8c\u5404\u4f4d\u7f6e\u4e3a\u4e2d\u5fc3\u7684\u6700\u5927\u56de\u6587\u5b50\u4e32\u957f\u5ea6\u540e\u51cf\u53bb\u91cd\u590d\u957f\u5ea6\u5373\u53ef\u3002\n\n\n## \u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<map>\n#include<algorithm>\ntypedef unsigned long long ull;\nconst int MAXN=500001+5;\nstd::map<ull,int>map;\nchar str[MAXN];int tail[MAXN],n,l,rs[MAXN],r,len[MAXN],bll[MAXN],now,cnt,mid;ull cc,hash1[MAXN],hash2[MAXN],pow[MAXN];\null GetHash1(int l,int r)\n{\n    if(l<1||l>n||r<1||r>n) return ++cc;\n    return hash1[r]-hash1[l-1]*pow[r-l+1];\n}\null GetHash2(int l,int r)\n{\n    if(l<1||l>n||r<1||r>n) return ++cc;\n    return hash2[l]-hash2[r+1]*pow[r-l+1];\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%c\",&str[i]);\n        if(!(str[i]>='a'&&str[i]<='z')) i--;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(str[i]!=str[i-1]) {tail[i-1]=1;now++;}\n        rs[i]=now;\n        bll[now]++;\n    }\n    for(int i=1;i<=n;i++)\n        hash1[i]=hash1[i-1]*31+str[i]-'a'+1;\n    for(int i=n;i>=1;i--)\n        hash2[i]=hash2[i+1]*31+str[i]-'a'+1;\n    pow[0]=1;\n    for(int i=1;i<=n;i++)\n        pow[i]=pow[i-1]*31;\n    int ans=0,answer,aans=0,last=0;\n    for(int i=1;i<=n;i++)\n    {\n        cnt=0;l=1;r=std::min(i-1,n-i+1);ans=0;answer=0;\n        while(l<=r)\n        {\n            cnt++;\n            if(cnt>30) break;\n            mid=(l+r)>>1;\n            if(GetHash1(i-mid,i-1)!=GetHash2(i,i+mid-1)) {r=mid-1;} else {l=mid+1;ans=std::max(ans,mid);}\n        }\n        if(tail[i+ans-1])\n        ans-=std::min(ans,bll[rs[i+ans-1]])/2;\n        len[i]=ans;\n        int result=map[GetHash1(i-ans,i+ans-1)];\n        if(GetHash1(i-ans,i+ans-1)==GetHash1(i+ans,i+ans*3-1))\n        {\n            aans=std::max(aans,ans*4);\n        }\n\n    }\t\n    printf(\"%d\",aans);\n    return 0;\n}\n```",
        "postTime": 1547973274,
        "uid": 9142,
        "name": "\u9177\u6691\u4e00\u590f1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4287 \u3010[SHOI2011]\u53cc\u500d\u56de\u6587\u3011"
    },
    {
        "content": "\u5c45\u7136\u6ca1\u6709\u56de\u6587\u81ea\u52a8\u673a\u7684\u9898\u89e3\uff1f\n\n\u8fd9\u597d\u50cf\u662f\u56de\u6587\u81ea\u52a8\u673a\u7684\u88f8\u9898\u554a\uff0c\u4e0d\u4f1a\u5c31\u53bb[\u8fd9\u4e2a\u535a\u5ba2](https://blog.csdn.net/YxuanwKeith/article/details/65667401)\u5b66\u597d\u4e86\uff0c\u5199\u5f97\u8fd8\u86ee\u597d\u7684\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5982\u679c\u8fd9\u4e2a\u4e32\u5982\u679c\u662f\u53cc\u500d\u56de\u6587\u4e32\uff0c\u4e00\u5b9a\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\n```\n1:\u957f\u5ea6\u4e3a4\u7684\u500d\u6570\n2:\u5fc5\u7136\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a\u5b83\u7684\u4e00\u534a\u7684\u56de\u6587\u540e\u7f00\n```\n\n\u7136\u540e\u8fd9\u9053\u9898\u5c31\u597d\u4e86\u3002\u5148\u5efa\u5b8c\u56de\u6587\u81ea\u52a8\u673a\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u66b4\u529b\u8df3$fail$\u6307\u9488\uff08\u7531\u4e8e$fail$\u6307\u9488\u6307\u7684\u662f\u6700\u5927\u56de\u6587\u540e\u7f00\u7684\u4f4d\u7f6e\uff09\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u5b58\u5728\uff0c\u66f4\u65b0\u7b54\u6848\u5c31\u597d\u5566\uff01\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct PAT{\n    long long ANS;\n    int last,cnt,fail[3000001],g[3000001][27],len[3000001],size[3000001];\n    inline void init(){\n        last=0,cnt=1;fail[0]=1;len[1]=-1;\n    }\n    inline void insert(char *a,int L){\n        for (int i=0;i<L;i++){\n            int now=last;\n            while (a[i-len[now]-1]!=a[i]) now=fail[now];\n            if (!g[now][a[i]-'a']){\n                len[++cnt]=len[now]+2;\n                int posx=fail[now];\n                while (a[i-len[posx]-1]!=a[i]) posx=fail[posx];\n                fail[cnt]=g[posx][a[i]-'a'];\n                g[now][a[i]-'a']=cnt;\n            }\n            last=g[now][a[i]-'a'];\n            size[last]++;\n        }\n    }\n    inline void sort(){\n        for (int i=cnt;i;i--){\n            int pos=i;\n            if (len[i]%4) continue;//\u6761\u4ef61\n            if (len[i]<=ANS) continue;//\u5982\u679c\u603b\u957f\u5ea6\u90fd\u6bd4\u7b54\u6848\u5c0f\u90a3\u4e48\u6ca1\u6709\u66f4\u65b0\u7684\u5fc5\u8981\u3002\n            while (2*len[pos]>len[i]) pos=fail[pos];//\u6761\u4ef62\n            if (len[pos]*2==len[i]) ANS=len[i];\n        }\n    }\n}pat;\nchar s[1000001];\nint N,a[1000001];\nint main(){\n    cin>>N;\n    scanf(\"%s\",s);\n    pat.init();\n    pat.insert(s,N);\n    pat.sort();\n    cout<<pat.ANS<<endl;\n}\n\n\n```",
        "postTime": 1544676341,
        "uid": 20309,
        "name": "Fading",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4287 \u3010[SHOI2011]\u53cc\u500d\u56de\u6587\u3011"
    },
    {
        "content": "**\u5f15\uff1a**\n\ntrans\u6307\u9488\u770b\u4e0d\u61c2\uff1fmanacher\u770b\u4e0d\u61c2\uff1f\u6765\u8fd9\u91cc\u770b\u770b\u7b80\u5355\u6613\u61c2\u7684\u56de\u6587\u6811+Hash\u5427\uff01\n\n------------\n\n**\u89e3\u6cd5\uff1a**\n\n\u6ce8\u610f\u5230\u672c\u8d28\u4e0d\u540c\u7684\u56de\u6587\u4e32\u53ea\u6709\u6700\u591an\u4e2a(PAM\u4e0a\u8282\u70b9\u6700\u591a\u4e3an)\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u957f\u5ea6\u4e3a\u56db\u7684\u500d\u6570\u7684\u56de\u6587\u4e32\u7528Hash\u5224\u65ad **\u524d\u4e00\u534a** \u4e0e **\u540e\u4e00\u534a** \u662f\u5426\u76f8\u7b49\u5373\u53ef\uff01\n\n------------\n\n**\u8bc1\u660e\uff1a**\n\n\u8bbe\u8fd9\u4e2a\u56de\u6587\u4e32\u4e3a $aa'$ ( $'$ \u8868\u793a\u7ffb\u8f6c)\uff0c\u4e14\u6709 $a=a'$ \u6240\u4ee5 $a$ \u4e3a\u56de\u6587\u4e32\uff0c\u53c8\u7531\u4e8e\u8fd9\u4e2a\u56de\u6587\u4e32\u957f\u5ea6\u4e3a\u56db\u7684\u500d\u6570\uff0c\u5373\u5f97\u5176\u662f\u4e00\u4e2a\u53cc\u500d\u56de\u6587\u3002\n\n------------\n\n**\u4ee3\u7801\uff1a(\u683c\u5f0f\u5316)**\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read() {\n\tint gans=0,gflag=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') {\n\t\tgflag|=(ch=='-');\n\t\tch=getchar();\n\t}\n\twhile('0'<=ch&&ch<='9') {\n\t\tgans=(gans<<1)+(gans<<3)+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn gflag?-gans:gans;\n}\ninline void write(int x) {\n\tif(x>9) {\n\t\twrite(x/10);\n\t}\n\tputchar(x%10^48);\n}\ninline void writenum(int x,char ch) {\n\tif(x<0) {\n\t\tputchar('-');\n\t\tx=-x;\n\t}\n\twrite(x);\n\tputchar(ch);\n}\ninline int Min(int x,int y) {\n\treturn x<y?x:y;\n}\ninline int Max(int x,int y) {\n\treturn x>y?x:y;\n}\nconst int Mx=5e5;\nconst int M=26;\nint ans;\n#define ULL unsigned long long\nULL hs[Mx+5],pw[Mx+5];\ninline ULL HS(int l,int r) {\n\treturn hs[r]-hs[l-1]*pw[r-l+1];\n}\nstruct PT { //Palindromic_Tree\n\tint cnt,tot,lst,nxt[Mx+5][M+1],flt[Mx+5][M+1],fil[Mx+5],ch[Mx+5],len[Mx+5],sum[Mx+5],num[Mx+5];\n\tinline int New(int x) {\n\t\tmemset(nxt[cnt],0,sizeof(nxt[cnt]));\n\t\tlen[cnt]=x;\n\t\tsum[cnt]=0;\n\t\tnum[cnt]=0;\n\t\treturn cnt++;\n\t}\n\tinline void Csh() {\n\t\tcnt=0;\n\t\ttot=0;\n\t\tlst=0;\n\t\tNew(0);//0:0\n\t\tNew(-1);//-1:1\n\t\tch[0]=-1;\n\t\tfil[0]=1;\n\t\tint i;\n\t\tfor(i=0; i<=M; i++) {\n\t\t\tflt[0][i]=1;\n\t\t}\n\t}\n\tinline int Get(int x) {\n\t\tif(ch[tot-len[x]-1]!=ch[tot]) {\n\t\t\treturn flt[x][ch[tot]];\n\t\t}\n\t\treturn x;\n\t}\n\tinline int Add(int c) {\n\t\tint now,p;\n\t\tc-='a';\n\t\tpw[tot]=(tot?pw[tot-1]*27:1);\n\t\ths[tot+1]=(tot?hs[tot]*27+c:c);\n\t\tch[++tot]=c;\n\t\tp=Get(lst);\n\t\tif(!nxt[p][c]) {\n\t\t\tnow=New(len[p]+2);\n\t\t\tfil[now]=nxt[Get(fil[p])][c];\n\t\t\tmemcpy(flt[now],flt[fil[now]],sizeof(flt[now]));\n\t\t\tflt[now][ch[tot-len[fil[now]]]]=fil[now];\n\t\t\tnxt[p][c]=now;\n\t\t\tnum[now]=num[fil[now]]+1;\n\t\t\tif(!(len[now]&3)) {\n\t\t\t\tans=Max(ans,(HS(tot-len[now]+1,tot-len[now]/2)==HS(tot-len[now]/2+1,tot)?len[now]:0));\n\t\t\t}\n\t\t}\n\t\tlst=nxt[p][c];\n\t\tsum[lst]++;\n\t\treturn len[lst];\n\t}\n\tinline void Cnt() {\n\t\tint i;\n\t\tfor(i=cnt-1; i>=0; i--) {\n\t\t\tsum[fil[i]]+=sum[i];\n\t\t}\n\t}\n} T;\nint len;\nchar ch[Mx+5];\nint main() {\n\tint i;\n\tlen=read();\n\tscanf(\"%s\",ch);\n\tT.Csh();\n\tfor(i=0; i<len; i++) {\n\t\tT.Add(ch[i]);\n\t}\n\twritenum(ans,'\\n');\n\treturn 0;\n}\n/*\n16\nggabaabaabaaball\n*/\n\n```",
        "postTime": 1594900701,
        "uid": 158948,
        "name": "\u7ea6\u745f\u592b\u7528\u8111\u73a9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4287 \u3010[SHOI2011]\u53cc\u500d\u56de\u6587\u3011"
    },
    {
        "content": "\uff08\u96be\u5f97\u6709\u6b21\u76f4\u63a5\u8bb2\u9898\n\n---\n- \u770b\u5b8c\u9898\u4e4b\u540e\uff0c\u6ce8\u610f\u9898\u4e2d\u8981\u6c42\u7684\u662fWWrWWr\u8fd9\u6837\u7684\u5f62\u52bf\uff0c\u4e5f\u5c31\u662f\u628a\u4e00\u4e2a\u4e32\u7ffb\u8f6c\u51e0\u6b21\uff0c\u800c\u4e0d\u662f\u5355\u7eaf\u7684\u4e24\u4e2a\u56de\u6587\u5b50\u4e32\u3002\n\n- \u4e8e\u662f\uff0c\u6211\u4eec\u5f97\u77e5\u4e86\u51e0\u4e2a\u6709\u8da3\u7684\u7279\u70b9\n\n  1. \u56de\u6587\u5b50\u4e32\u7684\u4e2d\u5fc3\u5fc5\u987b\u5728\u2018#\u2019\u4e0a\n  2. \u5de6\u53f3\u4e24\u4e2a\u56de\u6587\u5b50\u4e32\u76f8\u7b49\uff0c\u4e14\u6574\u4e2a\u5b50\u4e32\u662f\u56de\u6587\u5b50\u4e32\n- \u6839\u636e\u4ee5\u4e0a\u7684\u7279\u70b9\uff0c\u5f53\u6211\u4eec\u5728\u6c42\u534a\u5f84\u6570\u7ec4rad\u65f6\uff0c\u4ee5\u76ee\u524d\u4f4d\u7f6ei\u4e3a\u53f3\u5b50\u4e32\u7684\u4e2d\u5fc3\uff0c\u800c\u6574\u4e2a\u5b50\u4e32\u7684\u4e2d\u5fc3mid\u53ef\u4ee5\u662fi-rad[i]+1\u5230i\u4e4b\u95f4\u7684\u4efb\u610f\u4e00\u70b9\uff0c\u4e5f\u5c31\u4efb\u610f\u662f\u4ee5i\u4e3a\u4e2d\u5fc3\u7684\u56de\u6587\u5b50\u4e32\u7684\u53f3\u8fb9\u754c\u3002\u6240\u4ee5\u8fd9\u4e9b\u70b9\u90fd\u53ef\u4ee5\u4fdd\u8bc1\u53f3\u8fb9\u662f\u56de\u6587\u5b50\u4e32\u3002\n- \u63a5\u7740\u627e\u5230i\u70b9\u5bf9\u5e94mid\u7684\u5bf9\u79f0\u70b9l\uff0c\u4e5f\u5c31\u662f\u5de6\u5b50\u4e32\u7684\u4e2d\u5fc3\u70b9\uff0c\u5982\u679cl+rad[l]-1>mid\uff0c\u4e5f\u5c31\u662fmid\u4e3a\u4ee5l\u4e3a\u4e2d\u5fc3\u7684\u56de\u6587\u5b50\u4e32\u7684\u5de6\u8fb9\u754c\u3002\n- \u6700\u540e\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5de6\u5b50\u4e32\u548c\u53f3\u5b50\u4e32\u76f8\u7b49\uff0c\u6211\u4eec\u8981\u786e\u5b9a\uff0c\u8fd9\u4e24\u4e2a\u5b50\u4e32\u662f\u5426\u88abmid\u7684\u56de\u6587\u5b50\u4e32\u5305\u542b\u4e86\u3002\n\nps\uff1a\u4e4b\u524d\u6709\u5927\u4f6c\u5728\u9898\u89e3\u91cc\u8bf4\u4e86\uff0c\u5728\u679a\u4e3emid\u7684\u65f6\u5019\uff0c\u5e76\u4e0d\u9700\u8981\u628ai-rad[i]+1\u5230i\u5168\u90e8\u627e\u4e00\u904d\uff0c\u53ea\u7528\u5230i-rad[i]+7\u5c31ok\uff08\u6ca1\u6709\u4e3a\u4ec0\u4e48\uff0c\u56e0\u4e3a\u8fd9\u662f\u8bd5\u51fa\u6765\u7684\n\n```cpp\n#include<cstring>\n#include<cstdio>\n#include<iostream>\n#include<algorithm> \n#define MAXN 4100000\nusing namespace std;\nint rad[MAXN],n;\nchar s[MAXN],ch[MAXN];\nint mr=-1,c;\nvoid find(int x,int y){\n    int i=y;\n    for(;(x-i)>=0&&(x+i)<=2*n;i++){\n        if (s[x-i]!=s[x+i])break;\n    }\n    rad[x]=i;\n}\nint main(){\n    s[0]='#';\n    cin>>n;\n    cin>>ch+1;\n    for(int i=1;i<=n;i++){\n        s[2*i-1]=ch[i];\n        s[2*i]='#'; \n    }\n    int ans=0;\n    memset(rad,0,sizeof(rad));\n    for(int i=0;i<=n*2;i++){\n        if (i&1)continue;\n        if (i>mr) find(i,0);\n        else {\n            int cl,p2,pl;\n            cl=c-(mr-c);\n            p2=c-(i-c);\n            pl=p2-rad[p2]+1;\n            if (pl>cl){\n                rad[i]=rad[p2];\n            }\n            else if (pl<cl){\n                rad[i]=mr-i+1;\n            }\n            else {\n                find(i,mr-i+1);\n            }\n        }\n        if (i+rad[i]-1>mr){\n            mr=i+rad[i]-1;\n            c=i;\n        }\n        int mid,l;\n        for(int j=0;j<=6;j++){\n             mid=i-rad[i]+1+j;\n             l=mid-(i-mid);\n             if (l<0)continue;\n             if (l+rad[l]-1>=mid&&mid+rad[mid]-1>=i)ans=max(ans,(rad[i]-j)*2-2);\n        } \n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1554648272,
        "uid": 118273,
        "name": "\u543e\u738b\u7f8e\u5982\u753b",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4287 \u3010[SHOI2011]\u53cc\u500d\u56de\u6587\u3011"
    }
]