[
    {
        "content": "\u53e4\u5e0c\u814a\u54f2\u5b66\u5bb6\u8d6b\u62c9\u514b\u5229\u66fe\u8bf4\uff1a\u201c\u4eba\u4e0d\u80fd\u4e24\u6b21\u8e0f\u8fdb\u540c\u4e00\u6761\u6cb3\u6d41\u3002\u201d\u8fd9\u53e5\u8bdd\u627f\u8ba4\u4e86\u8fa9\u8bc1\u552f\u7269\u4e3b\u4e49\u4e2d\u7edd\u5bf9\u8fd0\u52a8\u4e0e\u76f8\u5bf9\u9759\u6b62\u7684\u7edf\u4e00\u7684\u89c2\u70b9\uff0c\u662f\u6b63\u786e\u7684\u3002\n\n\u4eba\u4e0d\u80fd\u4e24\u6b21\u8e0f\u8fdb\u540c\u4e00\u6761\u6cb3\u6d41\uff0c\u56e0\u4e3a\u4f60\u7b2c\u4e00\u6b21\u8e0f\u8fdb\u7684\u6cb3\u6d41\u548c\u7b2c\u4e8c\u6b21\u8e0f\u8fdb\u7684\u6cb3\u6d41\u5df2\u7ecf\u4e0d\u662f\u540c\u4e00\u4e2a\u6cb3\u6d41\u4e86\uff08\u6c34\u6d41\u8d70\u4e86\uff09\u3002\u540c\u6837\u5730\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4fee\u8f66\u5de5\u4eba\u800c\u8a00\uff0c\u4fee\u7b2c\u4e00\u8f86\u8f66\u7684\u4ed6\u548c\u4fee\u7b2c\u4e8c\u8f86\u8f66\u7684\u4ed6\u4e0d\u662f\u540c\u4e00\u4e2a\u4eba\u3002\n\n\u6240\u4ee5\u672c\u9898\u7684\u9519\u8bef\u5efa\u56fe\u65b9\u5f0f\u662f\uff0c\u5efa\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u5de6\u8fb9\u662f\u8f66\uff0c\u53f3\u8fb9\u662f\u5de5\u4eba\uff0c\u8fde\u8fb9\u8dd1\u6700\u5c0f\u8d39\u7528\u6d41\u3002\u8fd9\u6837\u5efa\u56fe\u4f53\u73b0\u7684\u662f\u5f62\u800c\u4e0a\u5b66\u7684\u4e0d\u53d8\u8bba\uff0c\u662f\u9519\u8bef\u7684\u3002\n\n~~\u8bf4\u4eba\u8bdd\uff1a~~\u5bf9\u4e8e\u6bcf\u4e2a\u5de5\u4eba\u800c\u8a00\uff0c\u4ed6\u5728\u4fee\u7b2c$k$\u8f86\u8f66\u7684\u65f6\u5019\uff0c\u4e4b\u524d\u5df2\u7ecf\u4fee\u4e86$k-1$\u8f86\u8f66\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4e0d\u540c\u7684$k$\uff0c\u5bf9\u5e94\u7684\u5ba2\u4eba\u7b49\u5f85\u7684\u65f6\u95f4\u662f\u4e0d\u540c\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06\u6bcf\u4e2a\u5de5\u4eba\u62c6\u6210$n$\u4e2a\u70b9\uff0c\u5206\u522b\u8868\u793a\u4fee\u7b2c\u51e0\u8f86\u8f66\u7684\u4ed6\u3002\n\n\u4f46\u662f\u4f60\u4f1a\u53d1\u73b0\u8fd9\u6837\u505a\u7684\u8bdd\u8fde\u8fb9\u65f6\u7684\u8fb9\u6743\u6bd4\u8f83\u56f0\u96be\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u505a\u4e00\u4e2a\u63a8\u5bfc\u3002\u5047\u8bbe\u67d0\u4e2a\u5de5\u4eba\u4e00\u5171\u4fee\u4e86$K$\u8f86\u8f66\uff0c\u82b1\u7684\u65f6\u95f4\u5206\u522b\u4e3a$T_1,T_2,\\cdots,T_K$\uff0c\u90a3\u4e48\u5f53\u4ed6\u4fee\u7b2c\u4e00\u8f86\u8f66\u65f6\uff0c\u540e\u9762\u7684$K-1$\u4e2a\u4eba\u5fc5\u987b\u7b49\u7740\uff0c\u540c\u65f6\u7b2c$1$\u4e2a\u4eba\u4e5f\u8981\u7b49\u4ed6\u4fee\u597d\uff0c\u6240\u4ee5\u603b\u5171\u7b49\u5f85\u65f6\u95f4\u4e3a$K\\times T_1$\uff1b\u63a5\u4e0b\u6765\u4fee\u7b2c\u4e8c\u8f86\u8f66\u65f6\u540c\u7406\uff0c\u6709$K-1$\u4e2a\u4eba\u5728\u7b49\u4ed6\u4fee\uff0c\u6240\u4ee5\u65f6\u95f4\u662f$(K-1)\\times T_2$\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u603b\u7b49\u5f85\u65f6\u95f4\u5373\u4e3a\n\n$$\\sum\\limits_{i=1}^K T_i(K-i+1)$$\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u4ed6\u5012\u6570\u7b2c$i$\u4e2a\u4fee\u7684\u8f66\u5bf9\u5e94\u7684\u5ba2\u4eba\u603b\u5171\u8981\u8d21\u732e$T_i\\times i$\u7684\u7b49\u5f85\u65f6\u95f4\u3002\u4e8e\u662f\u6709\u4e86\u8fd9\u4e00\u6b65\u8f6c\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u51fa\u6700\u7ec8\u7684\u5efa\u56fe\u65b9\u6848\u4e86\uff1a\u5c06\u6bcf\u4e2a\u5de5\u4eba\u62c6\u6210$n$\u4e2a\u70b9\uff0c\u5206\u522b\u8868\u793a\u4fee**\u5012\u6570\u7b2c\u51e0\u8f86\u8f66**\u7684\u4ed6\uff1b\u5982\u679c\u7b2c$j$\u4e2a\u5de5\u4eba\u4fee\u7b2c$i$\u8f86\u8f66\u8981\u82b1$T(i,j)$\u7684\u65f6\u95f4\uff0c\u6211\u4eec\u679a\u4e3e$k=1,\\cdots,n$\uff0c\u4ece\u7b2c$i$\u8f86\u8f66\u5411\u7b2c$j$\u4e2a\u5de5\u4eba\u7684\u7b2c$k$\u4e2a\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a$1$\uff0c\u8d39\u7528\u4e3a$k\\times T(i,j)$\u3002\u7136\u540e\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff0c\u6700\u540e\u603b\u8d39\u7528\u9664\u4ee5$n$\u5373\u53ef\u3002\n\n```cpp\n#include <cctype>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n\ntemplate <typename T> inline void read(T& x) {\n    int f = 0, c = getchar(); x = 0;\n    while (!isdigit(c)) f |= c == '-', c = getchar();\n    while (isdigit(c)) x = x * 10 + c - 48, c = getchar();\n    if (f) x = -x;\n}\ntemplate <typename T, typename... Args>\ninline void read(T& x, Args&... args) {\n    read(x); read(args...); \n}\n\nconst int maxv = 3000, maxe = 1e5, inf = INT_MAX;\nint dist[maxv], head[maxv], q[maxv];\nbool vis[maxv];\nint v[maxe << 1], cap[maxe << 1], cost[maxe << 1], flow[maxe << 1], next[maxe << 1];\nint n, m, s, t, V, tot = -1;\n\ninline void ae(int x, int y, int ca, int co) {\n    v[++tot] = y; cap[tot] = ca; cost[tot] = co; next[tot] = head[x]; head[x] = tot;\n    v[++tot] = x; cap[tot] = 0; cost[tot] = -co; next[tot] = head[y]; head[y] = tot;\n}\ninline bool bfs() {\n    for (int i = 1; i <= V; ++i)\n        dist[i] = inf, vis[i] = 0;\n    int l = 0, r = 1;\n    dist[t] = 0; vis[q[1] = t] = 1;\n    while (l < r) {\n        int x = q[++l]; vis[x] = 0;\n        for (int i = head[x]; ~i; i = next[i])\n            if (cap[i ^ 1] > flow[i ^ 1] && dist[v[i]] > dist[x] - cost[i]) {\n                dist[v[i]] = dist[x] - cost[i];\n                if (!vis[v[i]]) vis[q[++r] = v[i]] = 1;\n            }\n    }\n    return dist[s] < inf;\n}\nint dfs(int x, int cf, int &mc) {\n    vis[x] = 1;\n    if (x == t || !cf) return cf;\n    int getf = 0;\n    for (int i = head[x]; ~i; i = next[i])\n        if (!vis[v[i]] && cap[i] > flow[i] && dist[v[i]] == dist[x] - cost[i]) {\n            int nf = dfs(v[i], std::min(cf, cap[i] - flow[i]), mc);\n            if (nf) {\n                flow[i] += nf; flow[i ^ 1] -= nf; getf += nf; cf -= nf;\n                mc += nf * cost[i];\n                if (!cf) break;\n            }\n        }\n    return getf;\n}\ninline void mcmf(int &mc, int &mf) {\n    mc = mf = 0;\n    while (bfs()) {\n        vis[t] = 1;\n        while (vis[t]) {\n            for (int i = 1; i <= V; ++i)\n                vis[i] = 0;\n            mf += dfs(s, inf, mc);\n        }\n    }\n}\n\nint main() {\n    read(m, n);\n    s = n + n * m + 1;\n    t = V = s + 1;\n    for (int i = 1; i <= V; ++i) head[i] = -1;\n    for (int i = 1; i <= n; ++i)\n        for (int j = 1; j <= m; ++j) {\n            int x; read(x);\n            for (int k = 1; k <= n; ++k)\n                ae(i, j * n + k, 1, x * k);\n        }\n    for (int i = 1; i <= n; ++i) ae(s, i, 1, 0);\n    for (int i = 1; i <= n * m; ++i) ae(i + n, t, 1, 0);\n    int mc, mf; mcmf(mc, mf);\n    printf(\"%.2lf\\n\", (double)mc / n);\n    return 0;\n}\n```\n\n\u672c\u9898\u6709\u6570\u636e\u52a0\u5f3a\u677f\uff1aNOI2012\u7684\u7f8e\u98df\u8282\u3002\u90a3\u9053\u9898\u9700\u8981\u52a8\u6001\u52a0\u8fb9\u3002\u4e0d\u8fc7\u90a3\u9898\u4f3c\u4e4e\u5bf9\u6211\u8fd9\u79cdzkw\u8d39\u7528\u6d41\u4f7f\u7528\u8005\u4e0d\u592a\u53cb\u597d\uff0c\u53cd\u6b63\u6211\u662f\u7528EK-spfa\u8fc7\u7684\u90a3\u9898\u3002\n\n\u6700\u540e\u8bf4\u4e00\u53e5\uff0c\u5982\u679c\u8ba4\u4e3a\u201c\u4eba\u751a\u81f3\u4e00\u6b21\u4e5f\u4e0d\u80fd\u8e0f\u8fdb\u540c\u4e00\u6761\u6cb3\u6d41\u201d\uff0c\u90a3\u5c31\u662f\u76f8\u5bf9\u4e3b\u4e49\u8be1\u8fa9\u8bba\uff0c\u662f\u9519\u8bef\u7684\u3002",
        "postTime": 1549184842,
        "uid": 72071,
        "name": "GKxx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2053 \u3010[SCOI2007]\u4fee\u8f66\u3011"
    },
    {
        "content": "\u5bf9\u4e0b\u9762\u7684\u9898\u89e3\u8865\u5145\u4e00\u4e0b\u5f00\u5934\n\n\u8981\u6c42\u5e73\u5747\u65f6\u95f4\u6700\u77ed\uff0c\u5c31\u7b49\u540c\u4e8e\u8981\u6c42\u603b\u65f6\u95f4\u6700\u77ed\n\n\u5bf9\u4e8e\u4e00\u4e2a\u4fee\u8f66\u5de5\u5148\u540e\u7528$W_1-W_n$\u7684\u51e0\u4e2a\u4eba\uff0c\u82b1\u8d39\u7684\u603b\u65f6\u95f4\u662f\n\n$W_n*1+W_{n-1}*2+...+W_1*n$\n\n\u4e0d\u96be\u53d1\u73b0\u5012\u6570\u7b2ca\u4e2a\u4fee\u5c31\u5bf9\u603b\u65f6\u95f4\u4ea7\u751fa\\*\u539f\u65f6\u95f4\u7684\u8d21\u732e\n\n\u7136\u540e\u6211\u4eec\u5c06\u6bcf\u4e2a\u5de5\u4eba\u5212\u5206\u6210N\u4e2a\u9636\u6bb5\uff0c(i,t)\u8868\u793a\u4fee\u8f66\u5de5i\u5728\u5012\u6570\u7b2ct\u4e2a\u4fee\n\n\u53ef\u4ee5\u5efa\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u5de6\u8fb9\u8868\u793a\u8981\u4fee\u7406\u7684\u4e1c\u897f\uff0c\u53f3\u8fb9\u8868\u793a\u5de5\u4eba+\u9636\u6bb5\n\n\u4e8e\u662f\u53ef\u4ee5\u4ece\u5de6\u8fb9\u7684e\u5411\u53f3\u8fb9\u7684(i,t)\u8fde\u8fb9\uff0c\u6743\u503c\u662fTime[e][i]\\*t\uff0c\u5c31\u662f\u7b2ce\u4e2a\u7528i\u8fd9\u4e2a\u4fee\u8f66\u5de5\u6240\u7528\u65f6\u95f4\n\n\u6700\u5c0f\u6743\u503c\u5b8c\u5168\u5339\u914d\u540e\uff0c\u6700\u5c0f\u6743\u503c\u548c\u9664\u4ee5N\u5c31\u662f\u7b54\u6848\n\n\u56e0\u4e3a\u6743\u503c\u662f\u6b63\u7684\uff0c\u6240\u4ee5\u4e00\u4e2a\u4fee\u8f66\u5de5\u63a5\u5230\u7684\u8fde\u7ebf\u4e00\u5b9a\u662f\u4ece(i,1)\u5f00\u59cb\u8fde\u7eed\u7684\uff0c\u4e5f\u7b26\u5408\u73b0\u5b9e\u60c5\u51b5\n\n\u56e0\u4e3a\u5047\u8bbe\u662f\u65ad\u7eed\u7684\uff0c\u90a3\u540e\u9762\u7684(i,n)\u6539\u8fde\u5411(i,n-k),k<n\u65f6\uff0c\u7b54\u6848\u66f4\u4f18\uff0c\u8fdd\u80cc\u4e86\u524d\u9762\u7684\u6700\u4f18\u6027\n\n\u6240\u4ee5\u63a8\u5bfc\u5b8c\u540e\u5c31\u63a8\u5bfc\u51fa\u4e0b\u9762\u9898\u89e3\u90a3\u6837\u7684\u7b97\u6cd5\n",
        "postTime": 1503411906,
        "uid": 25508,
        "name": "Night_Aurora",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2053 \u3010[SCOI2007]\u4fee\u8f66\u3011"
    },
    {
        "content": "#### \u524d\u8a00\uff1a\n\n\u672c\u849f\u84bb\u89c9\u5f97\u8fd9\u9053\u9898\u51fa\u7684\u4e0d\u9519\uff0c\u4e00\u5f00\u59cb\u6211\u53ea\u60f3\u5230\u4e86\u4e8c\u5206\u7b54\u6848\uff0c\u6839\u672c\u6ca1\u6709\u60f3\u5230\u5982\u4f55\u6784\u9020\u7f51\u7edc\u6d41\uff0c\u770b\u4e86\u9898\u89e3\u540e\u624d\u5927\u6982\u7406\u89e3\u7684\u3002\n\n\n------------\n\n\n#### \u601d\u8def\uff1a  \n\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u53ea\u6709\u4e00\u4e2a\u4fee\u8f66\u5e08\u5085\uff0c\u5171\u6709$A1,A2...An$\u8fd9n\u8f86\u8f66\uff0c\u90a3\u4e48\u6240\u6709\u4eba\u7684\u7b49\u5f85\u65f6\u95f4\u5c31\u5206\u522b\u4e3a:\n\n\n$A1+A2...+An,A2+A3+..+An,...,An-1+An,An$\u3002                     \n**\u90a3\u6240\u6709\u4eba\u7684\u7b49\u5f85\u65f6\u95f4\u5462\uff1f**   \n\u52a0\u8d77\u6765\uff0c\u6211\u4eec\u53d1\u73b0\u6240\u6709\u4eba\u7684\u7b49\u5f85\u65f6\u95f4\u5e94\u8be5\u662f:\n\n$A1*n+A2*(n-1)+...+An$\n\n**\u90a3\u6211\u4eec\u5bf9\u6bcf\u8f86\u8f66\u88ab\u7b49\u5f85\u7684\u65f6\u95f4\u8003\u8651\uff0c\u53d1\u73b0\u8d8a\u540e\u4fee\u7684\u88ab\u7b49\u5f85\u7684\u65f6\u95f4\u8d8a\u5c11**\n\n**\u800c\u4e14\u663e\u800c\u6613\u89c1\u7684\uff0c\u6240\u6709\u8f66\u88ab\u7b49\u5f85\u7684\u65f6\u95f4\u5373\u4e3a\u6240\u6709\u4eba\u7b49\u5f85\u7684\u65f6\u95f4**\n\n\n------------\n\n\n#### \u505a\u6cd5\uff1a\n\n\u90a3\u6211\u4eec\u4ece\u6bcf\u8f86\u8f66\u88ab\u7b49\u5f85\u7684\u65f6\u95f4\u601d\u8003\uff0c\u601d\u8def\u4e5f\u4e0d\u662f\u5f88\u96be\u4e86\uff0c\n\n\u5c06$M$\u4f4d\u5e08\u5085\u62c6\u6210$N*M$\u4e2a\u70b9\uff0c\u7b2c$(i-1)*N+j$\u4e2a\u70b9\u8868\u793a\u7684\u662f\u5728\u4fee\u7b2c$j$\u8f86\u8f66\u7684\u7b2c$i$\u4f4d\u5e08\u5085\uff0c\u5e76\u5c06\u8fd9\u4e2a\u70b9\u8fde\u5411\u6bcf\u8f86\u8f66\uff0c\u5bb9\u91cf\u4e3a$1$\uff0c\u8fb9\u6743\u4e3a$Cki*j$\uff08$Cij$\u4e3a\u7b2ci\u8f86\u8f66\u88ab\u7b2cj\u4f4d\u5e08\u5085\u4fee\u6240\u82b1\u7684\u65f6\u95f4,$1<=k<=N$\uff09\uff0c\n\n\u7136\u540e\u518d\u6e90\u70b9\u671d$M$\u4e2a\u8f66\u70b9\u5efa\u8fb9\uff0c$N*M$\u4e2a\u5e08\u5085\u70b9\u671d\u6c47\u70b9\u5efa\u8fb9\uff0c\u90fd\u662f\u8fb9\u6743\u4e3a0\uff0c\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff0c\u6700\u540e\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5c31\u884c\u4e86\u3002\n\n~~\u540c\u65f6\u5efa\u53cd\u5411\u8fb9\u5e94\u8be5\u4e0d\u7528\u6211\u8d58\u8ff0\u4e86\u5427~~\n\n**\u6ce8\uff1a\u672c\u6765\u662f\u5148\u4fee\u88ab\u7b49\u7684\u65f6\u95f4\u8d8a\u591a\uff0c\u4f46\u662f\u53cd\u8fc7\u6765\u4ed4\u7ec6\u60f3\u5148\u4e5f\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898**\n\n\n\n------------\n\n#### \u4ee3\u7801:\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#include<vector>\n#define N 2010\n#define K 210\n#define M 100010\n#define inf 0x7fffffff/2\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ninline ll read()\n{\n\tchar ch=getchar();\n\tll s=0,w=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){s=s*10+ch-'0';ch=getchar();}\n\treturn s*w;\n}\nstruct edge\n{\n\tint next,to,fl,v;\n}e[M<<1];\nint head[N],cnt=1;\nint n,m;\nint dist[N],pre[N],wch[N];\n//pre\u8868\u793aspfa\u4e2d\u6bcf\u4e2a\u70b9\u662f\u4ece\u54ea\u6761\u8fb9\u6765\u7684,wch\u8868\u793aspfa\u4e2d\u6bcf\u4e2a\u70b9\u662f\u4ece\u54ea\u4e2a\u70b9\u6765\u7684\nqueue<int>Q;\nint vis[N];\nint c[K][K];//\u7b2ci\u8f86\u8f66\u88ab\u7b2cj\u683c\u5e08\u5085\u4fee\u6240\u82b1\u7684\u65f6\u95f4\nint s,t;\nint minn[N];//minn\u8868\u793aspfa\u4e2ds\u5230\u6bcf\u4e2a\u70b9\u6240\u7ecf\u8fc7\u7684\u8fb9\u4e2d\u7684\u6700\u5c0f\u6d41\u91cf\ninline void add_edge(int from,int to,int fl,int v)\n{\n\te[++cnt].to=to;\n\te[cnt].next=head[from];\n\te[cnt].v=v;\n\te[cnt].fl=fl;\n\thead[from]=cnt;\n}//\u52a0\u8fb9\nvoid dfs(int now,int sub)\n{\n\te[wch[now]].fl-=sub;\n\te[wch[now]^1].fl+=sub;\n\tif(pre[now])dfs(pre[now],sub);\n}//\u4fee\u6539\u6d41\u91cf\ninline int spfa()\n{\n\tfor(register int i=1;i<=t;i++)dist[i]=inf;\n\tmemset(vis,0,sizeof(vis));while(!Q.empty())Q.pop();\n\tQ.push(s),vis[s]=1;minn[s]=inf;//\u4e0d\u8981\u5fd8\u4e86\u7ed9minn[s]\u8bbe\u521d\u503c\n\twhile(!Q.empty())\n\t{\n\t\tint x=Q.front();Q.pop();vis[x]=0;\n\t\tfor(register int i=head[x];i;i=e[i].next)\n\t\t{\n\t\t\tif(dist[e[i].to]>dist[x]+e[i].v&&e[i].fl>0)\n\t\t\t{\n\t\t\t\tdist[e[i].to]=dist[x]+e[i].v;\n\t\t\t\twch[e[i].to]=i;pre[e[i].to]=x;\n                minn[e[i].to]=min(minn[x],e[i].fl);\n\t\t\t\tif(!vis[e[i].to])\n\t\t\t\t{\n\t\t\t\t\tQ.push(e[i].to);\n\t\t\t\t\tvis[e[i].to]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(dist[t]==inf)return inf;//\u5982\u679c\u4eces\u5230\u4e0d\u4e86t\u4e86\n\tdfs(t,minn[t]);//\u4fee\u6539\u8fb9\u7684\u6d41\u91cf\n\treturn minn[t]*dist[t];\n}//\u6700\u77ed\u8def\ninline int EK()\n{\n\tint sum=0;\n\twhile(1)\n\t{\n\t\tint x=spfa();\n\t\tif(x==inf)return sum;//\u6ca1\u6709\u589e\u5e7f\u8def\u4e86\n\t\telse sum+=x;\n\t}\n}\nint main()\n{\n\tm=read(),n=read();\n\tt=n*m+n+1;\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tfor(register int j=1;j<=m;j++){c[i][j]=read();}\n\t}\n\tfor(register int i=1;i<=n*m;i++)\n\t{\n\t\tadd_edge(s,i,1,0);add_edge(i,s,0,0);\n\t}\n\tfor(register int i=1;i<=m;i++)\n\t{\n\t\tfor(register int j=1;j<=n;j++)\n\t\t{\n\t\t\tfor(register int k=1;k<=n;k++)\n\t\t\t{\n\t\t\t\tint now=(i-1)*n+k;\n\t\t\t\tadd_edge(now,j+n*m,1,c[j][i]*k);\n\t\t\t\tadd_edge(j+n*m,now,0,-c[j][i]*k);\n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i=1;i<=n;i++)add_edge(n*m+i,t,1,0),add_edge(t,n*m+i,0,0);\n\tprintf(\"%.2lf\",double(double(EK())/double(n)));\n\treturn 0;\n    //\u6211\u7684\u5efa\u56fe\u65b9\u5f0f\u53ef\u80fd\u548c\u524d\u9762\u6211\u7684\u9898\u89e3\u5199\u7684\u65b9\u5f0f\u4e0d\u5927\u4e00\u6837\uff0c\u4ee3\u7801\u4e2d\u6211\u662f\u5e08\u5085\u7ec3\u5f97\u6e90\u70b9\uff0c\u8f66\u8fde\u7684\u6c47\u70b9\n}\n\n```\n\n\n\n------------\n\n#### \u540e\u8bb0\uff1a\n\n\u5e0c\u671b\u5927\u5bb6\u5728A\u4e86\u8fd9\u9053\u9898\u540e\u53ef\u4ee5\u770b\u770bNOI2012\u7684\u7f8e\u98df\u8282\uff0c\u8fd9\u9053\u9898\u5728\u672c\u9898\u6a21\u578b\u7684\u57fa\u7840\u4e0a\u63d0\u51fa\u4e86\u66f4\u591a\u7684\u601d\u8003\u548c\u4f18\u5316\uff0c\u5176\u4e2d\u90a3\u9053\u9898\u7684\u4f18\u5316\u5f88\u6709\u610f\u601d\uff0c\u4e3b\u8981\u4e86\u8fd0\u7528\u4e86spfa\u5728\u7a00\u758f\u56fe\u4e2d\u901f\u5ea6\u66f4\u5feb\u7684\u7406\u8bba\u77e5\u8bc6\uff0c\u503c\u5f97\u4e00\u505a\u3002\n\n",
        "postTime": 1544178700,
        "uid": 72419,
        "name": "WAPER4EVER",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2053 \u3010[SCOI2007]\u4fee\u8f66\u3011"
    },
    {
        "content": "\u7adf\u7136\u6ca1\u6709\u9898\u89e3\u2026\u2026\n\n\n\u8d39\u7528\u6d41\u95ee\u9898\uff0c\u628a\u5de5\u4eba\u62c6\u6210N\u4e2a\u70b9\uff0c\u8868\u793aN\u4e2a\u65f6\u95f4\u6bb5\u7684\u5de5\u4eba\u3002\u8fd9\u6837\u4e00\u5171M\\*N\u4e2a\u5de5\u4eba\u3002\n\n\u7136\u540e\u628aN\u8f86\u8f66\u548cM\\*N\u4e2a\u5de5\u4eba\u5168\u90e8\u8fde\u8d77\u6765\uff08\u5b8c\u5168\u4e8c\u5206\u56fe\uff09\uff0c\u6743\u503c\u662f\u5de5\u4eba\u65f6\u95f4\u6bb5\u7f16\u53f7\\*\u8f93\u5165\u7684\u65f6\u95f4\uff0c\u8868\u793a\u9700\u8981\u7b49\u5f85\u7684\u65f6\u95f4\u3002\n\nS\u5230\u8f66\u6d411\u8d390\uff0c\u5de5\u4eba\uff08M\\*N\uff09\u5230T\u6d411\u8d390\u3002\n\n\u8fd9\u6837\u52a0\u8d77\u6765\u540e\u6ee1\u6d41\u7684\u6700\u5c0f\u8d39\u7528/N\u7b54\u6848\u4e86\u3002\n\n\n\u54e6\uff0c\u4e0d\u8981\u5fd8\u4e86\uff0c**\u8f93\u5165\u4e0d\u8981\u7528time,\u5728\u6d1b\u8c37\u91cctime\u662f\u5173\u952e\u5b57\uff01\uff01\uff01**\n\n\n\n\n\n\n\n    \n\n\n        \n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define MAXN 1000\n#define MAXM 100000\n#define MEMINF 0x3f\n#define INF 0x3f3f3f3f\n#define P(x,y)    (~-(x)*N+(y))\nstruct Edge\n{\n    int to,nex,c,w;\n    Edge(){}\n    Edge(int _to, int _nex, int _c, int _w):to(_to),nex(_nex),c(_c),w(_w){} \n};\nEdge e[MAXM+5];\nint first[MAXN+5], q[MAXN+5], dis[MAXN+5], pre[MAXN+5], tm, tot, n, m, N, M, S, T, V, ANSC, ANSF;\nbool book[MAXN+5];\ninline void Add(int a, int b, int c, int w)\n{\n    e[tot] = Edge(b,first[a],c,w);\n    first[a] = tot++;\n    e[tot] = Edge(a,first[b],0,-w);\n    first[b] = tot++;\n    return;\n}\ninline bool SPFA()\n{\n    memset(dis,MEMINF,sizeof(dis));\n    q[0] = S, dis[S] = 0, book[S] = true;\n    for(register int head = 0, tail = 1, t, u; head != tail; book[t] = false)\n        for(t = q[head++], head %= MAXN, u = first[t]; u+1; u = e[u].nex)\n            if(e[u].c > 0 && dis[e[u].to] > dis[t] + e[u].w)\n            {\n                dis[e[u].to] = dis[t] + e[u].w, pre[e[u].to] = u;\n                if(!book[e[u].to])\n                    book[e[u].to] = true, q[tail++] = e[u].to, tail %= MAXN;\n            }\n    return (dis[T] != INF);\n}\ninline void CALC()\n{\n    int del = INF;\n    for(register int p = T, u = pre[p]; p != S; p = e[u^1].to, u = pre[p])\n        del = min(del,e[u].c);\n    for(register int p = T, u = pre[p]; p != S; p = e[u^1].to, u = pre[p])\n        e[u].c -= del, e[u^1].c += del, ANSC += del*e[u].w;\n    ANSF += del;\n    return;\n}\ninline void MCMF()\n{\n    for(; SPFA(); CALC());\n    return;\n}\nint main()\n{\n    memset(first,-1,sizeof(first));\n    scanf(\"%d%d\",&M,&N), S = 0, T =    (V = M*N)+N+1;    //operators:M*N    vehicles:N\n    for(register int i = 1, j, k; i <= N; i++)        //vehicles\n        for(j = 1; j <= M; j++)                        //operators\n        {\n            scanf(\"%d\",&tm);\n            for(k = 1; k <= N; k++)\n                Add(V+i,P(j,k),1,k*tm);\n        }\n    for(register int i = 1; i <= N; i++)            //vehicles\n        Add(S,V+i,1,0);\n    for(register int p = 1; p <= V; p++)            //operators\n        Add(p,T,1,0);\n    MCMF(), printf(\"%.2lf\",1.0*ANSC/N);\n     return 0;\n}\n```",
        "postTime": 1485319694,
        "uid": 16528,
        "name": "magolor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2053 \u3010[SCOI2007]\u4fee\u8f66\u3011"
    },
    {
        "content": "# \u5e7f\u544a\n\n[\u849f\u84bb\u7684blog](http://www.cnblogs.com/dedicatus545/p/8733196.html)\n\n# \u6b63\u6587\n\n\u6211\u4eec\u8003\u8651\u67d0\u4e2a\u5de5\u4eba\u4fee\u8f66\u7684\u4ece\u524d\u5230\u540e\u5e8f\u5217\u5982\u4e0b\uff1a\n\n${W_1,W_2,W_3,...,W_n}$\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u8fd9n\u8f86\u8f66\u7684\u8f66\u4e3b\u800c\u8a00\uff0c\u4ed6\u4eec\u7b49\u5019\u7684\u603b\u65f6\u95f4\u4e3a\uff1a\n\n$\\sum_{i=1}^{n}W_i\\ast\\left(n-i+1\\right)=nW_1+\\left(n-1\\right)W_2+...+2W_{n-1}+W_n$\n\n\u8fd9\u4e00\u6b65\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u7ecf\u8fc7\u8fd9\u4e00\u6b65\u63a8\u5bfc\uff0c\u6211\u4eec\u53d1\u73b0\uff1a\u5bf9\u4e8e\u201c\u628a\u7b2ci\u8f86\u8f66\u8ba9\u7b2cj\u4e2a\u4eba\u5728\u201c\u9700\u8981\u6d88\u8017k\u6b21\u65f6\u95f4\u201d\u7684\u90a3\u4e2a\u4e2a\u4f4d\u7f6e\u4fee\u201d\u8fd9\u4e00\u4e2a\u51b3\u7b56\uff0c\u53ef\u4ee5\u7b49\u540c\u4e3a\u8fdb\u884c\u4e00\u4e2a\u8d39\u7528\u4e3a$T\\left(i,j\\right)\\ast k$\u7684\u51b3\u7b56\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u51b3\u7b56\u96c6\u5408\uff1a\u51b3\u7b56$\\left(i,j,k\\right)=T\\left(i,j\\right)\\ast k$\u8868\u793a\u201c\u628a\u7b2ci\u8f86\u8f66\u8ba9\u7b2cj\u4e2a\u4eba\u5728\u201c\u9700\u8981\u6d88\u8017k\u6b21\u65f6\u95f4\u201d\u7684\u90a3\u4e2a\u4e2a\u4f4d\u7f6e\u4fee\u201d\n\n\u90a3\u5b9e\u9645\u4e0a\u6211\u4eec\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2ai\u9009\u53d6\u4e00\u4e2a\u8fd9\u6837\u7684\u51b3\u7b56\uff0c\u540c\u65f6\u8fd9\u4e2a\u51b3\u7b56\u7684$\\left(j,k\\right)$\u4e0d\u80fd\u76f8\u540c\n\n\u90a3\u5c31\u597d\u529e\u4e86\uff0c\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u5de6\u8fb9\u662fn\u8f86\u8f66\uff0c\u53f3\u8fb9\u662fn\\*m\u4e2a\u4e0a\u8ff0\u72b6\u6001\u7684\u4e8c\u5143\u7ec4$\\left(j,k\\right)$\uff08\u53ef\u4ee5\u8bc1\u660e$k\\leq n$\uff09\n\n\u6e90\u70b9\u5411\u8f66\u8fde\u8fb9\uff0c\u800c\u51b3\u7b56\u4e8c\u5143\u7ec4\u5411\u6c47\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf1\u8d39\u75280\n\n\u4e2d\u95f4\u7684\u8fb9\uff08\u6ce8\u610f\u8fd9\u662f\u4e00\u4e2a\u5b8c\u5168\u4e8c\u5206\u56fe\uff09\u5c31\u662f\u6d41\u91cf1\u8d39\u7528$T\\left(i,j\\right)\\ast k$\u7684\n\n\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\n\nCode:\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define inf 1e9\n#define id(i,j) (i-1)*n+j\nusing namespace std;\ninline int read(){\n    int re=0,flag=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){\n        if(ch=='-') flag=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9') re=(re<<1)+(re<<3)+ch-'0',ch=getchar();\n    return re*flag;\n}\nint n,m,cnt=-1,ans,first[1010],dis[1010],vis[1010];\nstruct edge{\n    int to,next,w,cap;\n}a[100010];\ninline void add(int u,int v,int w,int cap){\n    a[++cnt]=(edge){v,first[u],w,cap};first[u]=cnt;\n    a[++cnt]=(edge){u,first[v],-w,0};first[v]=cnt;\n}\nbool spfa(int s,int t){\n    int q[5010],head=0,tail=1,u,v,w,i;\n    memset(dis,-1,sizeof(dis));memset(vis,0,sizeof(vis));\n    q[0]=t;vis[t]=1;dis[t]=0;\n    while(head<tail){\n        u=q[head++];vis[u]=0;\n        for(i=first[u];~i;i=a[i].next){\n            v=a[i].to;w=a[i].w;\n            if(a[i^1].cap&&((dis[v]==-1)||(dis[v]>dis[u]-w))){\n                dis[v]=dis[u]-w;\n                if(!vis[v]) vis[v]=1,q[tail++]=v;\n            }\n        }\n    }\n    return ~dis[s];\n}\nint dfs(int u,int t,int limit){\n    if(u==t||!limit){vis[u]=1;return limit;}\n    int i,v,f,flow=0,w;vis[u]=1;\n    for(i=first[u];~i;i=a[i].next){\n        v=a[i].to;w=a[i].w;\n        if(!vis[v]&&a[i].cap&&(dis[v]==dis[u]-w)){\n            if(!(f=dfs(v,t,min(limit,a[i].cap)))) continue;\n            a[i].cap-=f;a[i^1].cap+=f;\n            ans+=f*w;flow+=f;limit-=f;\n            if(!limit) return flow;\n        }\n    }\n    return flow;\n}\nint zkw(int s,int t){//zkw\u8d39\u7528\u6d41\n    int re=0;\n    while(spfa(s,t)){\n        vis[t]=1;\n        while(vis[t]){\n            memset(vis,0,sizeof(vis));\n            re+=dfs(s,t,inf);\n        }\n    }\n    return re;\n}\nint main(){\n    memset(first,-1,sizeof(first));int i,j,k,t1;\n    m=read();n=read();\n    for(i=1;i<=n;i++) add(0,i,0,1);\n    for(i=1;i<=m;i++) for(j=1;j<=n;j++) add(n+id(i,j),n+n*m+1,0,1);\n    for(i=1;i<=n;i++){\n        for(j=1;j<=m;j++){\n            t1=read();\n            for(k=1;k<=n;k++){\n            \tadd(i,n+id(j,k),t1*k,1);\n\t\t\t}\n        }\n    }\n    zkw(0,n+n*m+1);\n    printf(\"%.2lf\",((double)ans)/((double)n));//\u6ce8\u610f\u8f93\u51fa\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570\n}\n```",
        "postTime": 1523082199,
        "uid": 27753,
        "name": "Orion545",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2053 \u3010[SCOI2007]\u4fee\u8f66\u3011"
    },
    {
        "content": "[luogu2053 \u4fee\u8f66](https://www.luogu.org/problemnew/solution/P2053)    \n\n\u5148\u63a8\u4e00\u6ce2[\u849f\u84bb\u7684\u535a\u5ba2](https://xminh.github.io/)    \n\n\u518d%\u697c\u4e0b\u795e\u4f6c\n\n\u7f51\u7edc\u6d41\u597d\u9898 \u5c31\u662f\u697c\u4e0b\u795e\u4f6c\u4eec\u7684\u9898\u89e3\u90fd\u6709\u70b9\u96be\u61c2 \u6211\u6765\u4e2a\u849f\u84bb\u7248\u672c\u7684\n\n\u8fd9\u9053\u9898\u4e5f\u7b97\u6413\u4e86\u5f88\u4e45\u4e86\u2026\u2026\u4e00\u76f4\u6ca1\u6709\u601d\u8def\uff0c\u53ea\u80fd\u602a\u6211\u6bd4\u8f83zz\u3002\n\n\u5c0f\u5fc3\u9898\u610f\u6740\u2026\u2026\u8981\u6ce8\u610f\uff0c\u4e0d\u80fd\u4e00\u4e2a\u4eba\u540c\u65f6\u4fee\u597d\u51e0\u8f86\u8f66\uff0c\u4e5f\u4e0d\u80fd\u597d\u51e0\u4e2a\u4eba\u540c\u4e00\u8f86\u8f66\uff0c\u4f46\u662f\u53ef\u4ee5\u597d\u51e0\u4e2a\u4eba\u540c\u65f6\u4fee\u597d\u51e0\u8f86\u5206\u522b\u4e0d\u540c\u7684\u8f66\u3002\n\n\u8981\u7528\u5230\u4e00\u4e2a\u5f88\u9a9a\u7684\u9006\u5411\u601d\u7ef4\u3002\n\n\u6211\u4eec\u628a\u6bcf\u4e2a\u4eba\u62c6\u6210n\u4e2a\u70b9\uff0c\u4e00\u5171m\u4e58n\u4e2a\uff0c\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u8bb0\u4e3aa[i,j]\uff0c\u4e5f\u5c31\u662f\u7b2ci\u4e2a\u4eba\u4fee\u7684\u5012\u6570\u7b2cj\u8f86\u8f66\u3002\u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u8fd9\u4e2a\u5012\u6570\u7b2cj\u662f\u76f8\u5bf9\u4e8e\u7b2ci\u4e2a\u4eba\u7684\uff0c\u5e76\u4e0d\u662f\u603b\u4f53\u4e0a\u7684\u5012\u6570\u7b2cj\u8f86\u3002\u6211\u4eec\u518d\u5f00n\u4e2a\u70b9\uff0c\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u8bb0\u4e3ak\uff0c\u4e5f\u5c31\u662f\u7b2ck\u8f86\u8f66\u3002\u6211\u4eec\u7684\u539f\u59cb\u6570\u7ec4\uff0c\u7b2ci\u4e2a\u4eba\u4fee\u7b2ck\u8f86\u8f66\uff0c\u8bb0\u4e3ab[i,k]\u3002\u628aa[i,j]\u548ck\u4e00\u8fde\uff0c\u5c31\u662f\u7b2ci\u4e2a\u4eba\u5012\u6570\u7b2cj\u4e2a\u4fee\u8f66\uff0c\u4fee\u7684\u662f\u7b2ck\u8f86\u3002\u56e0\u4e3a\u8fd9\u8f86\u8f66\u662f\u5012\u6570\u7b2cj\u4e2a\u4fee\uff0c\u6240\u4ee5\u4e00\u5171\u8981\u6709j\u8f86\u8f66\u7b49\u5f85b[i,k]\u7684\u65f6\u95f4\u624d\u884c\u3002\u8fd9\u6837\u4e00\u6765\uff0cj\u4e58b[i,k]\u5c31\u8868\u793a\u8fd9\u79cd\u60c5\u51b5\u8981\u8017\u8d39\u591a\u5c11\u65f6\u95f4\u3002\n\n\u6211\u4eec\u628as\u8fde\u63a5n\u4e2a\u8868\u793a\u987a\u5e8f\u7684\u70b9\uff0c\u6d41\u91cf1\uff0c\u8d39\u75280\uff0c\u8fd9\u4e2a\u597d\u8bf4\u3002\n\n\u7136\u540e\u5c31\u50cf\u521a\u624d\u6211\u4eec\u8bf4\u7684\u90a3\u6837\uff0c\u8fd9n\u4e2a\u70b9\u4e2d\u6bcf\u4e2a\u70b9k\u90fd\u8981\u8fde\u63a5\u6bcf\u4e2aa[i,j]\uff0c\u6d41\u91cf1\uff0c\u8d39\u7528\u4e3aj*b[i,k]\u3002\n\n\u7136\u540e\u6211\u4eec\u518d\u628am*n\u4e2a\u70b9\u8fde\u5230\u6c47\u70b9\u4e0a\uff0c\u6d41\u91cf1\uff0c\u8d39\u75280\u3002\n\n\u4ee3\u7801\n\n    #include<iostream>\n    #include<cstdio>\n    #include<queue>\n    #define big 1e9\n    #define maxn 100000\n    using namespace std;\n    int dis[maxn],pre[maxn],flow[maxn],lst[maxn],head[maxn],n,m,cnt,ans,s,t,b[1001][1001];\n    bool vis[maxn];\n    queue<int> q;\n    int read(){\n    \tchar c;int r=0,f=1;\n    \tc=getchar();\n    \twhile (c<'0' || c>'9'){\n    \t\tif (c=='-') f=-1;\n    \t\tc=getchar();\n    \t}\n    \twhile (c>='0' && c<='9'){\n    \t\tr=(r<<3)+(r<<1)+(c^48);\n    \t\tc=getchar();\n    \t}\n    \treturn r*f;\n    }\n    struct node{\n    \tint next,to,flow,dis;\n    }ljb[maxn];\n    void add_edge(int x,int y,int f,int c){\n    \tljb[++cnt].next=head[x];\n    \tljb[cnt].to=y;\n    \tljb[cnt].flow=f;\n    \tljb[cnt].dis=c;\n    \thead[x]=cnt;\n    }\n    void add(int x,int y,int f,int c){\n    \tadd_edge(x,y,f,c);\n    \tadd_edge(y,x,0,-c);\n    }\n    bool spfa(){\n    \tfor (int i=s;i<=t;i++) dis[i]=big,flow[i]=big,pre[i]=-1,lst[i]=0,vis[i]=0;\n    \tq.push(s);dis[s]=0;vis[s]=1;pre[s]=0;\n    \twhile (!q.empty()){\n    \t\tint x=q.front();q.pop();vis[x]=0;\n    \t\tfor (int i=head[x];i!=-1;i=ljb[i].next){\n    \t\t\tint y=ljb[i].to;\n    \t\t\tif (dis[y]>dis[x]+ljb[i].dis && ljb[i].flow>0){\n    \t\t\t\tdis[y]=dis[x]+ljb[i].dis;\n    \t\t\t\tflow[y]=min(flow[x],ljb[i].flow);\n    \t\t\t\tpre[y]=x;lst[y]=i;\n    \t\t\t\tif (!vis[y]){\n    \t\t\t\t\tvis[y]=1;\n    \t\t\t\t\tq.push(y);\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t}\n    \tif (pre[t]!=-1) return 1;\n    \treturn 0;\n    }\n    int main()\n    {\n    \tm=read();n=read();t=m*n+n+1;\n    \tfor (int i=s;i<=t;i++) head[i]=-1;cnt=-1;\n    \tfor (int k=1;k<=n;k++) add(s,m*n+k,1,0);\n    \tfor (int k=1;k<=n;k++)\n    \t\tfor (int i=1;i<=m;i++)\n    \t\t\tb[i][k]=read();\n    \tfor (int i=1;i<=m;i++)\n    \t\tfor (int j=1;j<=n;j++){\n    \t\t\tint now=(i-1)*n+j;\t\n    \t\t\tfor (int k=1;k<=n;k++) add(m*n+k,now,1,j*b[i][k]);\n    \t\t\tadd(now,t,1,0);\n    \t\t}\n    \twhile (spfa()){\n    \t\tans+=flow[t]*dis[t];\n    \t\tint now=t;\n    \t\twhile (now){\n    \t\t\tljb[lst[now]].flow-=flow[t];\n    \t\t\tljb[lst[now]^1].flow+=flow[t];\n    \t\t\tnow=pre[now];\n    \t\t}\n    \t}\n    \tprintf(\"%.2lf\",ans/(n*1.0));\n    }\n\n\n\n\n",
        "postTime": 1520730095,
        "uid": 43470,
        "name": "xMinh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2053 \u3010[SCOI2007]\u4fee\u8f66\u3011"
    },
    {
        "content": "\n\u8fd9\u662f\u4e00\u9053\u5f88\u4e0d\u9519\u7684\u8d39\u7528\u6d41\u597d\u9898\uff0c\u5efa\u56fe\u7684\u601d\u60f3\u5f88\u662f\u5de7\u5999\n\n\u6211\u4eec\u628a\u6bcf\u4e2a\u5de5\u4eba\u62c6\u6210$n$\u4e2a\u70b9\uff0c\u8868\u793a\u5f53\u524d\u5de5\u4eba\u5728$n$\u4e2a\u4e0d\u540c\u7684\u65f6\u95f4\u6bb5\uff0c\u90a3\u4e48$m$\u4e2a\u5de5\u4eba\u5c31\u662f$n*m$\u4e2a\u70b9\uff0c\u7136\u540e\u628a\u8fd9\u4e9b\u70b9\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u8d39\u7528\u4e3a0\u8fb9\u6743\u4e3a1\u7684\u8fb9\uff0c\u4e5f\u5c31\u662f\u540c\u4e00\u65f6\u6bb5\u4e00\u4e2a\u5de5\u4eba\u53ea\u80fd\u7ef4\u4fee\u4e00\u8f86\u8f66\u3002\u5bf9\u4e8e\u6bcf\u8f86\u8f66\uff0c\u6211\u4eec\u5148\u4ece\u6c47\u70b9\u8fde\u51fa\u4e00\u6761\u8d39\u7528\u4e3a0\u8fb9\u6743\u4e3a1\u7684\u8fb9\uff0c\u8868\u793a\u6bcf\u8f86\u8f66\u53ea\u4f1a\u88ab\u4e00\u4e2a\u5de5\u4eba\u5728\u4e00\u4e2a\u65f6\u6bb5\u7ef4\u4fee\u4e00\u6b21\u3002\u7136\u540e\u5bf9\u4e8e\u6bcf\u8f86\u8f66\uff0c\u6211\u4eec\u5411\u4e4b\u524d\u7684$n*m$\u4e2a\u70b9\u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a1\uff0c\u8d39\u7528\u4e3a\u5de5\u4eba\u7ef4\u4fee\u8fd9\u8f86\u8f66\u7684\u65f6\u95f4*\u8fd9\u662f\u5de5\u4eba\u7684\u7b2c\u51e0\u4e2a\u65f6\u95f4\u6bb5\u3002\u7136\u540e\u8dd1\u8d39\u7528\u6d41\uff0c\u6700\u540e\u7b54\u6848\u9664\u4ee5$n$\uff0c\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4f46\u662f\u8fd9\u6837\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\u5462\uff1f\n\n\u5bf9\u4e8e\u540c\u4e00\u8f86\u8f66\uff0c\u540c\u4e00\u4e2a\u5de5\u4eba\uff0c\u65f6\u95f4\u6bb5\u8d8a\u9760\u540e\uff0c\u4ea7\u751f\u7684\u6743\u503c\u4e5f\u5c31\u8d8a\u5927\u3002\u90a3\u4e48\u6d41\u91cf\u80af\u5b9a\u4f1a\u4f18\u5148\u4ece\u9760\u524d\u7684\u65f6\u95f4\u6bb5\u6d41\u51fa\u3002\u90a3\u4e48\u5982\u679c\u4e00\u4e2a\u5de5\u4eba\u8981\u7ef4\u4fee\u591a\u8f86\u8f66\uff0c\u4ed6\u4eec\u6240\u7528\u7684\u65f6\u95f4\u6bb5\u4e00\u5b9a\u662f\u76f8\u90bb\u7684\uff0c\u5e76\u4e14\u5728\u6700\u524d\u9762\u3002\u90a3\u4e48\u5de5\u4eba\u8981\u7ef4\u4fee\u7684\u65f6\u95f4\u6bb5\u6700\u9760\u540e\u7684\u8f66\uff0c\u4ea7\u751f\u7684\u6743\u503c\u662f\u201c\u5de5\u4eba\u7ef4\u4fee\u8fd9\u8f86\u8f66\u7684\u65f6\u95f4*\u8fd9\u662f\u5de5\u4eba\u7684\u7b2c\u51e0\u4e2a\u65f6\u95f4\u6bb5\u201d\uff0c\u90a3\u4e48\u4e5f\u5c31\u76f8\u5f53\u4e8e\u7ef4\u4fee\u8fd9\u8f86\u8f66\u4f7f\u5f53\u524d\u5de5\u4eba\u7ef4\u4fee\u7684\u6240\u6709\u8f66\u7684\u8f66\u4e3b\u4ea7\u751f\u7684\u7b49\u5f85\u65f6\u95f4\u4e4b\u548c\uff0c\u6362\u53e5\u8bdd\u8bf4\u8fd9\u91cc\u7684\u65f6\u95f4\u6bb5\u8d8a\u65e9\uff0c\u4fee\u7684\u5c31\u8d8a\u665a\uff0c\u65f6\u95f4\u6bb5\u6700\u665a\u7684\uff0c\u5b9e\u9645\u4e0a\u662f\u5f53\u524d\u5de5\u4eba\u7b2c\u4e00\u4e2a\u7ef4\u4fee\u7684\u8f66\u8f86\u3002\u6240\u4ee5\u8fd9\u4e2a\u65f6\u95f4\u6bb5\u5176\u5b9e\u662f\u6307\u5f53\u524d\u5de5\u4eba\u7ef4\u4fee\u7684\u5012\u6570\u7b2c\u51e0\u8f86\u8f66\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u4e5f\u5c31\u80fd\u591f\u770b\u51fa\u4e3a\u4ec0\u4e48\u8fd9\u6837\u5efa\u56fe\u662f\u6b63\u786e\u7684\u4e86\u3002\n\n\u4e0b\u653e\u4ee3\u7801\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cctype>\n#include<queue>\n#define ll long long\n#define gc getchar\n#define maxn 1005\n#define maxm 100005\nusing namespace std;\n\ninline ll read(){\n\tll a=0;int f=0;char p=gc();\n\twhile(!isdigit(p)){f|=p=='-';p=gc();}\n\twhile(isdigit(p)){a=(a<<3)+(a<<1)+(p^48);p=gc();}\n\treturn f?-a:a;\n}int n,m,S,T,ans,a[maxn][10];\n\nstruct ahaha{\n\tint f,w,to,next;\n}e[maxm<<1];int tot,head[maxn];\ninline void add(int u,int v,int w,int f){\n\te[tot]={f,w,v,head[u]};head[u]=tot++;\n}\ninline void Add(int u,int v,int w,int f){\n\tadd(u,v,w,f);add(v,u,0,-f);\n}\n\ndeque<int>q;\nint b[maxn],d[maxn],fl[maxn],la[maxn];\nint spfa(){memset(fl,63,sizeof fl);\n\tmemset(d,63,sizeof d);d[S]=0;la[T]=-1;q.push_back(S);\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop_front();b[u]=0;\n\t\tfor(int i=head[u];~i;i=e[i].next){\n\t\t\tint v=e[i].to;if(e[i].w<=0||d[v]<=d[u]+e[i].f)continue;\n\t\t\td[v]=d[u]+e[i].f;la[v]=i;\n\t\t\tfl[v]=min(fl[u],e[i].w);\n\t\t\tif(b[v])continue;b[v]=1;\n\t\t\tif(q.empty()||d[v]<d[q.front()])q.push_front(v);\n\t\t\telse q.push_back(v);\n\t\t}\n\t}return ~la[T];\n}\n\nint main(){memset(head,-1,sizeof head);\n\tm=read();n=read();T=n+n*m+1;\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=m;++j)\n\t\t\ta[i][j]=read();\n\tfor(int i=1;i<=n;++i){\n\t\tAdd(S,i,1,0);int p=n;\n\t\tfor(int j=1;j<=m;++j)\n\t\t\tfor(int k=1;k<=n;++k)\n\t\t\t\tAdd(i,++p,1,a[i][j]*k);  //\u6d41\u91cf\u6d41\u7ecf\u8fd9\u6761\u8fb9\u8868\u793a\u7b2ci\u8f86\u8f66\u662f\u7b2cj\u4e2a\u5de5\u4eba\u7ef4\u4fee\u7684\u5012\u6570\u7b2ck\u8f86\u8f66\n\t}int p=n;\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=m;++j)\n\t\t\tAdd(++p,T,1,0);\n\twhile(spfa()){\n\t\tans+=fl[T]*d[T];\n\t\tint now=T;\n\t\twhile(now!=S){\n\t\t\te[la[now]].w-=fl[T];\n\t\t\te[la[now]^1].w+=fl[T];\n\t\t\tnow=e[la[now]^1].to;\n\t\t}\n\t}\n\tprintf(\"%.2f\\n\",1.0*ans/n);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1554002599,
        "uid": 34530,
        "name": "\u5b50\u8c26\u3002",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2053 \u3010[SCOI2007]\u4fee\u8f66\u3011"
    },
    {
        "content": "\u8fd8\u662f\u503c\u5f97\u601d\u8003\u7684\u9898\u76ee\uff0c~~\u81f3\u5c11\u4e0d\u662f\u88f8\u9898\u4e86~~\u3002\n\n\u9996\u5148\u5982\u679c\u4e00\u4e2a\u5de5\u4eba\u53ea\u80fd\u7ef4\u4fee\u4e00\u8f86\u8f66\uff0c\u90a3\u4e48\u5c31\u662f\u4e2a\u88f8\u7684\u4e8c\u5206\u56fe\u5e26\u6743\u5339\u914d\u4e86\u3002\u53ef\u60dc\u4e00\u4e2a\u5de5\u4eba\u53ef\u4ee5\u7ef4\u4fee\u591a\u8f86\u8f66\u3002\n\n\u53ef\u4ee5\u770b\u5230 $n$ \u6bd4\u8f83\u5927\uff08$\\le60$\uff09\uff0c$m$ \u6bd4\u8f83\u5c0f\uff08$\\le9$\uff09\u3002\u6570\u636e\u8303\u56f4\u63d0\u793a\u6211\u4eec\u53ef\u4ee5\u628a $m$ \u4e2a\u70b9\u62c6\u6210\u591a\u4e2a\u70b9\u3002\n\n**\u5177\u4f53\u600e\u4e48\u62c6\uff1a**\n\n\u7b2c $x$ \u53f7\u5de5\u4eba\uff0c\u62c6\u6210 $x_1,x_2,x_3...x_n$ \u5171n\u4e2a\u5de5\u4eba\u3002\u7136\u540e\u5ba2\u6237\u5411\u6bcf\u4e2a\u5de5\u4eba\u8fde\u8fb9\u3002\u5982\u679c\u8be5\u5de5\u4eba\u7ef4\u4fee\u8be5\u5ba2\u6237\u9700\u8981 $c$ \u5143\uff0c\u5219\u5411 $x_i$ \u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$ \uff0c\u8fb9\u6743\u4e3a $i*c$ \u7684\u8fb9\u3002\n\n\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\uff1f\n\n~~\u611f\u6027\u7406\u89e3\u4e00\u4e0b~~\n\n\u5982\u679c\u5ba2\u6237 $A$ \u6700\u7ec8\u9009\u62e9\u4e86 $x_2$ \u8fd9\u4e2a\u5de5\u4eba\uff0c\u80af\u5b9a\u4f1a\u6709\u522b\u7684\u5ba2\u6237 $B$ \u5411 $x_1$ \u5339\u914d\u3002\u76f8\u5f53\u4e8e\u8ba9\u5ba2\u6237 $A$ \u5148\u548c $x$ \u5de5\u4eba\u5339\u914d\uff0c\u518d\u8ba9 $B$ \u5339\u914d\uff0c\u6240\u4ee5\u7b54\u6848\u52a0\u4e0a\u4e86\u4e24\u500d\u7684 $x$ \u4fee $A$ \u7684\u65f6\u95f4\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define N 100005\n#define M 200005 \nusing namespace std;\n\ninline void rd(int &X)\n{\n    X=0;int w=0;char ch=0;\n    while(!isdigit(ch))w|=ch=='-',ch=getchar();\n    while( isdigit(ch))X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n    X=w?-X:X;\n}\n\nint n,ans,s,t,flow;\nint head[N],cnt=1,v[N];\nint pre[N],d[N],mn[N];\nstruct nd{int nxt,to,v,c;}e[M];\n#define For(x) for(int y,i=head[x];(y=e[i].to);i=e[i].nxt)\n\nvoid add(int x,int y,int w,int c){\n    e[++cnt]=(nd){head[x],y,w, c};head[x]=cnt;\n    e[++cnt]=(nd){head[y],x,0,-c};head[y]=cnt;\n}\nbool SPFA()\n{\n    memset(d,0x3f,sizeof d);d[s]=0;\n    queue<int> q;q.push(s);mn[s]=1<<29;\n    while(!q.empty()){\n        int x=q.front();q.pop();v[x]=0;\n        For(x) if(e[i].v&&d[y]>d[x]+e[i].c)\n        {\n            pre[y]=i; d[y]=d[x]+e[i].c;\n            mn[y]=min(mn[x],e[i].v);\n            if(!v[y]) v[y]=1,q.push(y);\n        }\n    }\n    return d[t]!=0x3f3f3f3f;\n}\nvoid up()\n{\n    int x=t;\n    while(x!=s)\n    {\n        int i=pre[x];\n        e[i].v-=mn[t];\n        e[i^1].v+=mn[t];\n        x=e[i^1].to;\n    }\n    flow+=mn[t];\n    ans+=d[t]*mn[t];\n}\n\nint m,tot;\nint a[65][65];\n\nvoid build()\n{\n\trd(m);rd(n);s=N-5,t=N-4;tot=n;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\trd(a[i][j]);\n\tfor(int i=1;i<=n;i++)\n\t\tadd(s,i,1,0);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++){\n\t\t\t++tot;add(tot,t,1,0);\n\t\t\tfor(int k=1;k<=n;k++)\n\t\t\t\tadd(k,tot,1,j*a[k][i]);\n\t\t}\n\t}\n}\nint main()\n{\n\tbuild();\n    while(SPFA()) up();\n    printf(\"%.2lf\",1.0*ans/n);\n}\n```",
        "postTime": 1543311189,
        "uid": 56659,
        "name": "AubRain",
        "ccfLevel": 0,
        "title": "[SCOI2007]\u4fee\u8f66\u2014\u2014\u8d39\u7528\u6d41+\u62c6\u70b9"
    },
    {
        "content": "~~\u9ad8\u7ea7\u6280\u5de5\u767b\u573a~~\n\n\n\u770b\u5230\u9898\u76ee\uff0c\u7d2b\u9898\uff0c~~\u770b\u9898\u89e3~~\n\n\u8d39\u7528\u6d41??\u4ed4\u7ec6\u60f3\u60f3\uff0c\u786e\u5b9e\u662f\u8d39\u7528\u6d41\n\u600e\u4e48\u770b\u51fa\u6765\uff1a\u6bcf\u8f86\u8f66\u5f88\u660e\u663e\u90fd\u8981\u88ab\u4fee\u597d\uff0c\u800c\u4e14\u9700\u8981\u6c42\u51fa\u6700\u5c0f\u8d39\u7528\uff0c\u5f53\u7136\u662f\u8d39\u7528\u6d41\u4e86\n~~\u5176\u5b9e\u5168\u662f\u778ebb\uff0c\u6211\u672c\u6765\u4ee5\u4e3a\u662f\u533a\u95f4DP\u7684\uff0c\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e2a\u6280\u672f\u4eba\u5458\u90fd\u6709\u4e0d\u540c\u7684\u4fee\u7406\u65f6\u95f4\uff0c\u4e0d\u4f1a\u8f6c\u79fb~~\u3002\n\n\u8d39\u7528\u6d41\u5957\u6a21\u677f\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e0d\u4f1a\u6a21\u677f\u5c31\u53bb\u5b66\u3002~~\u5b9e\u5728\u61d2\u5f97\u8bb2~~\n\n\u7f51\u7edc\u6d41\u6a21\u677f\u6bd4\u8f83\u5355\u4e00\uff0c\u4e00\u822c\u90fd\u662f\u6a21\u677f\u3002\u4e3b\u8981\u8003\u8651\u5efa\u56fe\uff0c~~\u5efa\u56fe\u5168TM\u662f\u7701\u9009~~\u3002\n\n\u5efa\u56fe\u5148\u8003\u8651\u6700\u7b80\u5355\u7684\u60c5\u51b5\uff0c\u5c31\u662f\u5173\u4e8e\u6bcf\u4e2a\u6280\u672f\u4eba\u5458\u548c\u6bcf\u4e2a\u4eba\u5efa\u56fe\uff0c\u7136\u540e\u8f7b\u6613\u53d1\u73b0\u95ee\u9898\uff1a\u65f6\u95f4\u662f\u8d39\u7528\uff0c\u4f46\u662f\u6bcf\u4e2a\u6280\u5de5\u53ef\u80fd\u5728\u5f88\u4e45\u4e4b\u540e\u624d\u5f00\u59cb\u4fee\u8fd9\u8f86\u8f66\uff0c\u65f6\u95f4\u5c31\u4f1a\u88ab\u62c9\u957f\uff0c\u8fd9\u6837\u5efa\u56fe\u90a3\u4e48\u4e0d\u80fd\u627e\u5230\u6bcf\u540d\u6280\u5de5\u4e0d\u540c\u65f6\u523b\u4fee\u8fd9\u8f86\u8f66\u7684\u65f6\u95f4\uff0c\u90a3\u4e48\u628a\u6bcf\u4e2a\u6280\u5de5\u5206\u5f00\uff08\u7f51\u7edc\u6d41\u60ef\u7528\u624b\u6cd5\uff1a\u5288\u5f00\uff09\uff0c\u5206\u6210n*m\u4e2a\uff0c\u5173\u4e8e\u6bcf\u4e2a\u6280\u5de5\u4e0d\u540c\u65f6\u95f4\u4fee\u8f66\u5efa\u56fe\uff0c\u7b2ci\u4e2a\u6280\u5de5j\u65f6\u523b\u4fee\u67d0\u8f86\u8f66\u7684\u8d39\u7528\u5c31\u662fc*j\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#define itn int\nusing namespace std;\nconst int N=10010,M=1e5+10;\nint ver[M],hea[N],nex[M],edge[M],cost[M];\nint d[N],pre[N],incf[N];\nbool v[N];\nqueue<int>q;\nint n,m,tot=1,s,t,flow,ans,maxflow;\n\ninline void add(int x,int y,int z,int c){\n\tver[++tot]=y;nex[tot]=hea[x];hea[x]=tot;\n\tedge[tot]=z;cost[tot]=c;\n\tver[++tot]=x;nex[tot]=hea[y];hea[y]=tot;\n\tedge[tot]=0;cost[tot]=-c;\n}\n\ninline bool spfa(){\n\tmemset(d,0x7f,sizeof(d));int oo=d[1];\n\tmemset(v,0,sizeof(v));\n\twhile(q.size())q.pop();\n\tq.push(s);v[s]=1;d[s]=0;\n\tincf[s]=1<<30;;\n\twhile(q.size()){\n\t\tint x=q.front();q.pop();v[x]=0;\n\t\tfor(int i=hea[x];i;i=nex[i]){\n\t\t\tif(!edge[i])continue;\n\t\t\tint y=ver[i];\n\t\t\tif(d[y]>d[x]+cost[i]&&edge[i]>0){\n\t\t\t\td[y]=d[x]+cost[i];\n\t\t\t\tincf[y]=min(incf[x],edge[i]);\n\t\t\t\tpre[y]=i;\n\t\t\t\tif(!v[y])q.push(y),v[y]=1;\n\t\t\t}\n\t\t}\n\t}\n\tif(d[t]==oo)return false;\n\telse return true;\n}\n\ninline int calc(){\n\tint x=t;\n\twhile(x!=s){\n\t\tint i=pre[x];\n\t\tedge[i]-=incf[t];\n\t\tedge[i^1]+=incf[t];\n\t\tx=ver[i^1];\n\t}\n\tmaxflow+=incf[t];\n\treturn d[t]*incf[t];\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&m,&n);s=n+n*m+1,t=n+n*m+2;\n\tfor(int i=1;i<=n;i++)add(s,i,1,0);\n\tfor(int i=1;i<=n;i++){\n\t\tfor(itn j=1;j<=m;j++){\n\t\t\tint c;scanf(\"%d\",&c);\n\t\t\tfor(int k=1;k<=n;k++){\n\t\t\t\tadd(i,j*n+k,1,c*k);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n*m;i++){\n\t\tadd(n+i,t,1,0);\n\t}\n\twhile(spfa()){\n\t\tint p=calc();\n\t\tans+=p;\n\t}\n\tprintf(\"%.2lf\",(double)ans/n);\n\treturn 0;\n}\n```\n",
        "postTime": 1566211572,
        "uid": 169137,
        "name": "k\uff0c\u706b\u9b42",
        "ccfLevel": 0,
        "title": "P2053 [SCOI2007]\u4fee\u8f66"
    },
    {
        "content": "# [P2053 \u3010SCOI2007\u3011\u4fee\u8f66](https://www.luogu.org/problemnew/show/P2053)\n\n## $Solution$\n\n\u9996\u5148\u660e\u786e\u4e00\u70b9\uff0c\u82e5\u603b\u7684\u7b49\u5f85\u65f6\u95f4\u4e3a $sum$\uff0c\u90a3\u4e48\u7b54\u6848\u5373\u4e3a $sum/n$\uff0c\u56e0\u6b64\u53ea\u8981\u6700\u5c0f\u5316\u603b\u65f6\u95f4\u4fbf\u80fd\u6700\u5c0f\u5316\u7b54\u6848\u3002\n\n\u8003\u8651\u53ea\u6709\u4e00\u4e2a\u5de5\u4eba\u65f6\u7684\u60c5\u51b5\u3002\n\n\u5047\u8bbe$n$\u8f86\u8f66\u4ee5\u4fee\u7406\u901f\u5ea6\u5206\u522b\u4e3a$T_1,\\ T_2,\\ ...\\ ,\\ T_n$\u7684\u987a\u5e8f\u4fee\u7406\uff0c\u90a3\u4e48\uff1a\n\n\u7b2c\u4e00\u4f4d\u8f66\u4e3b\u7b49\u5f85\u65f6\u95f4\u4e3a $T_1;$\n\n\u7b2c\u4e8c\u4f4d\u8f66\u4e3b\u7b49\u5f85\u65f6\u95f4\u4e3a $T_1\\ +\\ T_2;$\n\n\u7b2c$n$\u4f4d\u8f66\u4e3b\u7b49\u5f85\u65f6\u95f4\u4e3a $T_1\\ +\\ T_2\\ +\\ ...\\ +\\ T_n;$\n\n\u7b2c$i$\u4f4d\u8f66\u4e3b\u7b49\u5f85\u65f6\u95f4\u4e3a $\\sum ^i _{j = 1} T_j;$\n\n\u663e\u800c\u6613\u89c1\u5730\uff0c\u603b\u7b49\u5f85\u65f6\u95f4\u4e3a $\\sum^n_{i = 1}\\sum^i_{j = 1}T_i*(n - i + 1);$\n\n\u90a3\u4e48\uff0c\u7b2c$i$\u8f86\u8f66\u7684\u8d21\u732e\u5373\u4e3a $T_i * (n - i + 1).$\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u4ece\u6bcf\u8f86\u8f66\u7684\u89d2\u5ea6\u8003\u8651\u7b54\u6848\u3002\n\n\u5177\u4f53\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4f4d\u5de5\u4eba\u62c6\u6210$n$\u4e2a\u70b9\uff0c\u5206\u522b\u8868\u793a$n$\u4e2a\u9636\u6bb5\uff1b\n\n\u8003\u8651 **\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41**\uff0c\u6bcf\u8f86\u8f66\u663e\u7136\u53ea\u80fd\u88ab\u6d41$1$\u6b21\uff0c\u5c06\u6e90\u70b9\u5411\u6bcf\u8f86\u8f66\u8fde\u4e00\u6761 **\u6d41\u91cf\u4e3a$1$\uff0c \u8d39\u7528\u4e3a$0$** \u7684\u8fb9\uff1b\n\n\u5bf9\u4e8e\u7b2c $i\\ (1 \\le i \\le n)$ \u8f86\u8f66\u4ee3\u8868\u7684\u70b9\uff0c\u5411\u7b2c $j\\ (1 \\le j \\le m)$ \u4f4d\u5de5\u4eba\u7684\u7b2c $k (1 \\le k \\le n)$ \u4e2a\u9636\u6bb5\uff0c\u8fde\u4e00\u6761 **\u6d41\u91cf\u4e3a$1$, \u8d39\u7528\u4e3a$T_{ij} $** \u7684\u8fb9\uff1b\n\n\u5bf9\u4e8e\u6bcf\u4f4d\u5de5\u4eba\u7684\u6bcf\u4e2a\u9636\u6bb5\uff08\u5171$n * m$\u4e2a\uff09\uff0c\u5411\u6c47\u70b9\u8fde\u4e00\u6761 **\u6d41\u91cf\u4e3a$1$, \u8d39\u7528\u4e3a$0$** \u7684\u8fb9\uff1b\n\n\u6700\u540e\uff0c\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n## $Code$\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <algorithm>\n\ninline int read() {\n    int x = 0, k = 1; char c = getchar();\n    for (; c < 48 || c > 57; c = getchar()) k ^= c == '-';\n    for (; c >= 48 && c <= 57; c = getchar()) x = x * 10 + (c ^ 48);\n    return k ? x : -x;\n}\n\nconst int N = 1e5 + 5, M = 2e5 + 5;\nint n, m, s, t, num = 1, head[N], dis[N], flow[N], last[N], pre[N], maxflow, mincost;\nbool vis[N];\nstruct edge {\n    int nxt, to, flow, val;\n} e[M];\nstd::queue <int> q;\n\ninline void add(int u, int v, int w, int val) {\n    e[++num] = (edge) { head[u], v, w, val }, head[u] = num;\n    e[++num] = (edge) { head[v], u, 0, -val }, head[v] = num;\n}\n\ninline bool spfa() {\n    memset(vis, 0, sizeof vis);\n    memset(dis, 0x3f, sizeof dis);\n    memset(flow, 0x3f, sizeof flow);\n    q.push(s), dis[s] = 0, vis[s] = 1;\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop(), vis[u] = 0;\n        for (int i = head[u], v; i; i = e[i].nxt)\n            if (e[i].flow && dis[v = e[i].to] > dis[u] + e[i].val) {\n                dis[v] = dis[u] + e[i].val;\n                pre[v] = u, last[v] = i;\n                flow[v] = std::min(flow[u], e[i].flow);\n                if (!vis[v])\n                    q.push(v), vis[v] = 1;\n            }\n    }\n    return dis[t] != 0x3f3f3f3f;\n}\n\ninline void MCMF() {\n    while (spfa()) {\n        int now = t;\n        maxflow += flow[t];\n        mincost += flow[t] * dis[t];\n        while (now ^ s) {\n            e[last[now]].flow -= flow[t];\n            e[last[now] ^ 1].flow += flow[t];\n            now = pre[now];\n        }\n    }\n}\n\nint main() {\n    m = read(), n = read(), t = (s = n * m + n + 1) + 1;\n    for (int i = 1; i <= n; ++i) {\n        add(s, i, 1, 0);\n        for (int j = 1; j <= m; ++j) {\n            int x = read();\n            for (int k = 1; k <= n; ++k) add(i, n + (j - 1) * n + k, 1, k * x);\n            add(n + (j - 1) * n + i, t, 1, 0);\n        }\n    }\n    MCMF();\n    printf(\"%.2lf\\n\", 1.0 * mincost / n);\n    return 0;\n}\n```",
        "postTime": 1557060355,
        "uid": 60504,
        "name": "Karnage",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2053 \u3010[SCOI2007]\u4fee\u8f66\u3011"
    },
    {
        "content": "\u4e00\u9053\u8f83\u4e3a\u7ecf\u5178\u7684\u8d39\u7528\u6d41\u7684\u9898\uff0c\u9996\u5148\u6beb\u65e0\u7591\u95ee\u662f\u987e\u5ba2\u5411\u6280\u672f\u4eba\u5458\u8fde\u8fb9\uff0c\u4f46\u662f\u600e\u4e48\u8fde\u5462\u3002\n\n\u6c42\u5e73\u5747\u65f6\u95f4\u6700\u77ed\u7b49\u4ef7\u4e8e\u6c42\u603b\u65f6\u95f4\u6700\u77ed\u3002*\u8fd9\u662f\u8f6c\u6362*\n\n\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u4fee\u7406\u5de5\uff0c\u90a3\u4e48\u82b1\u8d39\u7684\u603b\u65f6\u95f4\u662f\n$\\sum$ $T_1*n +T_2*(n-1)+....+T_n*1$\n\n\u53ef\u4ee5\u77e5\u9053\u5012\u6570\u7b2ci\u4e2a\u4eba\u6240\u63d0\u4f9b\u7684\u603b\u65f6\u95f4\u662f$T_i * n$ \u7684\uff0c\u7136\u540e\u5bf9\u4e8em\u4e2a\u6280\u672f\u4eba\u5458\uff0c\u6211\u4eec\u628a\u6bcf\u4e2a\u6280\u672f\u4eba\u5458\u5206\u6210n\u4e2a\u65f6\u95f4\u70b9\uff0c\u4f8b\uff1a\u7b2ci\u4e2a\u4eba\u662f\u7b2cj\u4e2a\u6280\u672f\u4eba\u5458\u5012\u6570\u7b2ck\u4e2a\u5b8c\u6210\u7684\nadd(i,n+(j-1)*n+k,T[i][j]*k),\u8fd9\u4e00\u6b65\u5c31\u662f\u8fd9\u9053\u9898\u7684\u7cbe\u9ad3\uff0c\u5bf9\u4e8e\u5f0f\u5b50\u7684\u8f6c\u5316\u5e76\u5efa\u8fb9\uff0c\u4e4b\u540e\u5c31\u662f\u6e90\u70b9\u4e0e\u6c47\u70b9\u76f8\u8fde\u4e86\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8bf4\u4e86\n~~~\n#include<bits/stdc++.h>\n#define pts putchar('\\n');\n#define ptc putchar(' ');\nusing namespace std;\ntypedef long long ll;\nconst int maxm=4000000+9;\nconst int maxn=20000+9;\nconst int mod=20100403;\nconst int inf=0x3f3f3f3f;\nconst double eps=1e-4;\nint m,n;\nstruct Edge{int u,v,cost,flow,from;}edge[maxm];\nint last[maxn],cnt=1;\nint st,ed;\nint fa[maxn],way[maxn];\nint flow_sum,min_cost;\nint dis[maxn],flow[maxn];\ndeque<int>q;\nint in[maxn],sign=0;;\nint read(){\n    int a=1,b=0;char c=getchar();\n    while(c>'9'||c<'0'){if(c=='-') a=-1;c=getchar();}\n    while(c>='0'&&c<='9'){b=(b<<1)+(b<<3)+c-'0';c=getchar();}\n    return a*b;\n}\nvoid print(int x){\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) print(x/10);\n    putchar(x%10+'0');\n}\nvoid add(int u,int v,int c,int f){\n    edge[++cnt].u=u;edge[cnt].v=v;edge[cnt].cost=c;\n    edge[cnt].flow=f;edge[cnt].from=last[u];last[u]=cnt;\n}\nint SPFA(){\n    sign++;\n    while(!q.empty()) q.pop_front();\n    memset(dis,inf,sizeof(dis));\n    memset(flow,inf,sizeof(flow));\n    q.push_front(st);dis[st]=0;\n    while(!q.empty())\n    {\n        int now=q.front();q.pop_front();in[now]=0;\n        for(int i=last[now];i;i=edge[i].from)\n        {\n            int to=edge[i].v;\n            if(dis[to]>dis[now]+edge[i].cost&&edge[i].flow)\n            {\n                dis[to]=dis[now]+edge[i].cost;\n                fa[to]=now;way[to]=i;\n                flow[to]=min(flow[now],edge[i].flow);\n                if(in[to]!=sign)\n                {\n                    if(q.empty()) q.push_front(to);\n                    else\n                    {\n                        if(dis[q.front()]>=dis[to]) q.push_front(to);\n                        else q.push_back(to);\n                    }\n                    in[to]=sign;\t\t\n                }\n            }\n        }\n    }\n    return dis[ed]!=dis[0];\n}\nvoid min_cost_flow(){int tmp;\n    fa[st]=0;\n    flow_sum=min_cost=0;\n    while(SPFA()){\n        flow_sum+=flow[ed];min_cost+=flow[ed]*dis[ed];\n        tmp=ed;\n        while(fa[tmp]!=0)\n        {\n            edge[way[tmp]].flow-=flow[ed];\n            edge[way[tmp]^1].flow+=flow[ed];\n            tmp=fa[tmp];\n        }\n    }\n}\nint main(){int A;\n    //freopen(\"123.txt\",\"r\",stdin);\n   // freopen(\"1.out\",\"w\",stdout);\n    m=read(),n=read();//n\u662f\u987e\u5ba2\uff0cm\u662f\u6280\u672f\u4eba\u5458\n\t//\u628a\u6bcf\u4e2a\u6280\u672f\u4eba\u5458\u5206\u6210n\u4e2a\u8fde\u8fb9 i--> n+(k-1)*m+i; \n\tst=n*m+n+1,ed=n*m+n+2;\n    for(int i=1;i<=n;++i)\n    {\n    \tadd(st,i,0,1);add(i,st,0,0);\n    \tfor(int j=1;j<=m;++j)\n    \t{\n    \t\tA=read();\n    \t\tfor(int k=1;k<=n;++k) \n\t\t\t{\n\t\t\t\tadd(i,n+(j-1)*n+k,k*A,1),add(n+(j-1)*n+k,i,-A*k,0);   \n\t\t\t}\t\n\t\t}\n\t}\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tfor(int j=1;j<=n;++j)\n\t\t{\n\t\t\tadd(n+(i-1)*n+j,ed,0,1);\n\t\t\tadd(ed,n+(i-1)*n+j,0,0);\n\t\t}\n\t}\n\tmin_cost_flow();\n\tprintf(\"%.2f\",(min_cost*1.0/n*1.0));\n    return 0;\n} \n~~~",
        "postTime": 1545295764,
        "uid": 64593,
        "name": "Mr_cold",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2053 \u3010[SCOI2007]\u4fee\u8f66\u3011"
    },
    {
        "content": "\u6253\u5e7f\u544a\uff1a[blog](https://www.cnblogs.com/bztMinamoto/p/9510697.html)\n\n\u697c\u4e0a\u51e0\u4f4d\u5927\u4f6c\u8bf4\u7684\u6211\u5565\u90fd\u542c\u4e0d\u61c2\u2026\u2026\u6211\u8fd8\u662f\u7a0d\u5fae\u5199\u7684\u8be6\u7ec6\u70b9\u597d\u4e86\u2026\u2026\n\n\u3000\u3000\u6211\u4eec\u8003\u8651\u4e00\u4e0b\uff0c\u5982\u679c\u4e00\u4e2a\u5de5\u4eba\u4fee\u8f66\u7684\u5e8f\u5217\u4e3a$W_1,W_2,W_3...W_n$\n\n\u3000\u3000\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u51e0\u8f86\u8f66\u7684\u8f66\u4e3b\u800c\u8a00\uff0c\u4ed6\u4eec\u7b49\u5f85\u7684\u603b\u65f6\u95f4\u662f$\\sum _{i=1}^n W_i*(n-i+1)=nW_1+(n-1)W_2+...+W_n$\uff08\u56e0\u4e3a\u4e00\u4e2a\u4eba\u5728\u8d8a\u524d\u9762\u4fee\uff0c\u4f1a\u4f7f\u540e\u9762\u66f4\u591a\u7684\u4eba\u8981\u7b49\u5f85\u4ed6\u7684\u8f66\u4fee\u597d\uff09\n\n\u3000\u3000\u7136\u540e\u56e0\u4e3a\u5e73\u5747\u65f6\u95f4\u6700\u5c11\uff0c\u4eba\u6570\u662f\u4e0d\u53d8\u7684\uff0c\u6240\u4ee5\u5f97\u4fdd\u8bc1\u603b\u65f6\u95f4\u6700\u5c11\n\n\u3000\u3000\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u628a\u7b2c$i$\u4e2a\u4eba\u7684\u8f66\u8ba9\u7b2c$j$\u4e2a\u4eba\u5728\u5012\u6570\u7b2c$k$\u4e2a\u4fee\uff08\u4ee5\u4e0b\u8868\u793a\u4e3a$(i,j,k)$\uff09\uff0c\u90a3\u4e48\u5bf9\u603b\u65f6\u95f4\u7684\u8d21\u732e\u662f$T(i,j)*k$\uff0c\u5176\u4e2d$T(i,j)$\u8868\u793a\u7b2c$j$\u4e2a\u4eba\u4fee\u7b2c$i$\u8f86\u8f66\u7684\u65f6\u95f4\n\n\u3000\u3000\u7136\u540e\u56e0\u4e3a\u6bcf\u4e00\u8f86\u8f66\u53ea\u80fd\u88ab\u4e00\u4e2a\u4eba\u4fee\uff0c\u6bcf\u4e00\u4e2a\u4eba\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u4fee\u4e00\u8f86\u8f66\n\n\u3000\u3000\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a$(j,k)$\u8868\u793a\u6210\u4e00\u4e2a\u72b6\u6001\uff0c\u8868\u793a\u88ab\u7b2c$j$\u4e2a\u4eba\u5728\u5012\u6570\u7b2c$k$\u4e2a\u4fee\uff0c\u90a3\u4e48\u4e0d\u96be\u53d1\u73b0\u6bcf\u4e00\u4e2a\u72b6\u6001\u53ea\u80fd\u88ab\u5339\u914d\u4e00\u6b21\uff0c\u5373\u4e0d\u53ef\u80fd\u6709\u4e24\u8f86\u8f66\u540c\u65f6\u88ab\u4e00\u4e2a\u4eba\u5728\u540c\u4e00\u4e2a\u987a\u5e8f\u4fee\n\n\u3000\u3000\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5efa\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u5de6\u8fb9\u662f$n$\u8f86\u8f66\uff0c\u53f3\u8fb9\u662f$n*m$\u4e2a\u72b6\u6001$(j,k)$\uff08\u56e0\u4e3a$k$\u4e0d\u53ef\u80fd\u8d85\u8fc7$n$\uff09\uff0c\u7136\u540e\u5de6\u8fb9\u7684\u6bcf\u4e00\u4e2a\u70b9\u5411\u53f3\u8fb9\u6240\u6709\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a$1$\uff0c\u8d39\u7528\u4e3a\u5bf9\u5e94\u7684$(i,j,k)$\n\n\u3000\u3000\u7136\u540e\u56e0\u4e3a\u6bcf\u4e00\u8f86\u8f66\u53ea\u4f1a\u88ab\u4fee\u4e00\u6b21\uff0c\u6240\u4ee5\u4ece\u6e90\u70b9\u5411\u6240\u6709\u8f66\u8fde\u5bb9$1$\u8d39$0$\u7684\u8fb9\n\n\u3000\u3000\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u4eba\u5728\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u4fee\u4e00\u8f86\u8f66\uff0c\u6240\u4ee5\u53f3\u8fb9\u6240\u6709\u72b6\u6001\u5411\u6c47\u70b9\u8fde\u5bb9$1$\u8d39$0$\u7684\u8fb9\n\n\u3000\u3000\u5f53\u7f51\u7edc\u8dd1\u6ee1\u7684\u65f6\u5019\u8bf4\u660e\u6240\u6709\u8f66\u90fd\u6709\u4eba\u4fee\u4e86\uff0c\u7136\u540e\u53c8\u8981\u65f6\u95f4\u6700\u5c11\uff0c\u53ea\u8981\u5728\u6b64\u57fa\u7840\u4e0a\u6c42\u4e00\u4e2a\u6700\u5c0f\u8d39\u7528\u6d41\u5373\u53ef\n  \n```\n//minamoto\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#define inf 0x3f3f3f3f\n#define id(i,j) (i-1)*n+j\nusing namespace std;\n#define getc() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int read(){\n    #define num ch-'0'\n    char ch;bool flag=0;int res;\n    while(!isdigit(ch=getc()))\n    (ch=='-')&&(flag=true);\n    for(res=num;isdigit(ch=getc());res=res*10+num);\n    (flag)&&(res=-res);\n    #undef num\n    return res;\n}\nconst int N=1005,M=100005;\nint ver[M],Next[M],head[N],edge[M],flow[M],tot=1;\nint vis[N],dis[N],disf[N],Pre[N],last[N],n,m,s,t;\nqueue<int> q;\ninline void add(int u,int v,int f,int e){\n\tver[++tot]=v,Next[tot]=head[u],head[u]=tot,flow[tot]=f,edge[tot]=e;\n\tver[++tot]=u,Next[tot]=head[v],head[v]=tot,flow[tot]=0,edge[tot]=-e;\n}\nbool spfa(){\n\tmemset(dis,0x3f,sizeof(dis));\n\twhile(!q.empty()) q.pop();\n\tq.push(s),dis[s]=0,disf[s]=inf,Pre[t]=-1;\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop(),vis[u]=0;\n\t\tfor(int i=head[u];i;i=Next[i]){\n\t\t\tint v=ver[i];\n\t\t\tif(flow[i]&&dis[v]>dis[u]+edge[i]){\n\t\t\t\tdis[v]=dis[u]+edge[i],Pre[v]=u,last[v]=i;\n\t\t\t\tdisf[v]=min(disf[u],flow[i]);\n\t\t\t\tif(!vis[v]) vis[v]=1,q.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn ~Pre[t];\n}\nint dinic(){\n\tint mincost=0;\n\twhile(spfa()){\n\t\tint u=t;mincost+=disf[t]*dis[t];\n\t\twhile(u!=s){\n\t\t\tflow[last[u]]-=disf[t],flow[last[u]^1]+=disf[t];\n\t\t\tu=Pre[u];\n\t\t}\n\t}\n\treturn mincost;\n}\nint main(){\n\tm=read(),n=read();\n\ts=0,t=n*m+n+1;\n\tfor(int i=1;i<=n;++i) add(s,i,1,0);\n\tfor(int i=1;i<=m;++i)\n\tfor(int j=1;j<=n;++j)\n\tadd(n+id(i,j),t,1,0);\n\tfor(int i=1;i<=n;++i)\n\tfor(int j=1;j<=m;++j){\n\t\tint cost=read();\n\t\tfor(int k=1;k<=n;++k){\n\t\t\tadd(i,n+id(j,k),1,cost*k);\n\t\t}\n\t}\n\tprintf(\"%.2lf\",(double)dinic()/n);\n\treturn 0;\n}\n```",
        "postTime": 1534826509,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2053 \u3010[SCOI2007]\u4fee\u8f66\u3011"
    },
    {
        "content": "![](https://m.qpic.cn/psb?/V11sk9wJ3UQAvi/WNkECsMb.6Je42R3g5tJRG1KAE4EYVohixcmTaEs9tg!/b/dEYBAAAAAAAA&bo=TgKRAU4CkQEDCSw!&rf=viewer_4&t=5)\n\n[](https://m.qpic.cn/psb?/V11sk9wJ3UQAvi/WNkECsMb.6Je42R3g5tJRG1KAE4EYVohixcmTaEs9tg!/b/dEYBAAAAAAAA&bo=TgKRAU4CkQEDCSw!&rf=viewer_4)\n\n\u5982\u56fe\n\n\u8bbef[i][j]\u4e3a\u8868\u793a\u7b2cj\u4f4d\u6280\u672f\u4eba\u5458\u7ef4\u4fee\u7b2ci\u8f86\u8f66\u9700\u8981\u7528\u7684\u65f6\u95f4\n\n\u7b2c\u4e00\u6b65\uff1a\u5c06\u6bcf\u4e2a\u5de5\u4eba\u5206\u4e3a\u4e0d\u540c\u65f6\u95f4\u70b9\u7684\u72b6\u6001\uff08\u5373\u4fee\u4e86\u591a\u5c11\u8f86\u8f66\uff09\uff0c\u7531\u6e90\u70b9\u5411\u5404\u4e2a\u72b6\u6001\u8fde\u6d41\u91cf\u4e3a1\u4e14\u8d39\u7528\u4e3a0\u7684\u8fb9\u3002\n\n\u7b2c\u4e8c\u6b65\uff1a\u7531\u4e0d\u540c\u65f6\u95f4\u70b9\uff08\u5171\u4fee\u4e86tim\u6b21\u8f66\uff08\u5305\u62ec\u6b64\u6b21\uff09\uff09\u7684\u5de5\u4ebai\uff08\u7f16\u53f7\u4e3a(i-1)*m+tim\uff09\u5411\u987e\u5ba2k\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a1\u4e14\u8d39\u7528\u4e3atim*f[i][j]\u7684\u8fb9\u3002\n\n\u7b2c\u4e09\u6b65\uff1a\u7531\u6bcf\u4f4d\u987e\u5ba2\u5411\u6c47\u70b9\u8fde\u6d41\u91cf\u4e3a1\u4e14\u8d39\u7528\u4e3a0\u7684\u8fb9\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n\uff08\u5176\u5b9e\u662f\u76f4\u63a5\u590d\u5236\u4ee5\u524d\u505a\u7684\u9898\u7684\uff09\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define swap(x,y) x^=y,y^=x,x^=y\n#define R register\n#define I inline\n#define B bool\n#define V void\n#define ll long long\nI int read()\n{\n    R int f=1,num=0;\n    R char ch=getchar();\n    while(0==isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n    while(0!=isdigit(ch)) num=(num<<1)+(num<<3)+ch-'0',ch=getchar();\n    return num*f;\n}\nconst int N=200007;\nconst int inf=1e9;\nconst int dx[]={-1,1, 0,0};\nconst int dy[]={ 0,0,-1,1};\nB v[N];\nint dis[N];\nint n,s,t,res=0,ans=0;\nint tot=1;\nint head[N],next[N<<1],to[N<<1],edge_c[N<<1],edge_cc[N<<1];\nI V add(R int x,R int y,R int z,R int zz)\n{\n    next[++tot]=head[x],head[x]=tot,to[tot]=y;\n    edge_c[tot]=z;edge_cc[tot]=zz;\n}\nI V Add(R int x,R int y,R int z,R int zz)\n{\n    add(x,y,z,zz);\n    add(y,x,0,-zz);\n}\nI B spfa()\n{\n    memset(v,0,sizeof(v));\n    for(R int i=0;i<=t;i++)dis[i]=inf;\n    dis[s]=0;v[s]=1;\n    deque<int>q;\n    q.push_back(s);\n    while(q.size())\n    {\n        R int x=q.front();\n        q.pop_front();\n        v[x]=0;\n        for(R int i=head[x];i;i=next[i])\n        {\n            R int y=to[i];\n            if(edge_c[i]>0&&dis[x]+edge_cc[i]<dis[y])\n            {\n                dis[y]=dis[x]+edge_cc[i];\n                if(!v[y])\n                {\n                    v[y]=1;\n                    if(!q.empty()&&dis[y]<dis[q.front()])q.push_front(y);\n                    else q.push_back(y);\n                }\n            }\n        }\n    }\n    return dis[t]<inf;\n}\nint dfs(R int x,R int low)\n{\n    v[x]=1;\n    if(x==t)\n    {\n        res+=low;\n        return low;\n    }\n    R int used=0,delta=0;\n    for(R int i=head[x];i;i=next[i])\n    {\n        R int y=to[i];\n        if(!v[y]&&edge_c[i]&&dis[y]==dis[x]+edge_cc[i])\n        {\n            delta=dfs(y,min(edge_c[i],low-used));\n            ans+=delta*edge_cc[i],edge_c[i]-=delta,edge_c[i^1]+=delta,used+=delta;\n            if(used==low)break;\n        }\n    }\n    return used;\n}\nV costflow()\n{\n    res=ans=0;\n    while(spfa())\n    {\n        v[t]=1;\n        while(v[t])\n        {\n            memset(v,0,sizeof(v));\n            dfs(s,inf);\n        }\n    }\n}\n//\u4ee5\u4e0a\u662fzkw\u8d39\u7528\u6d41\u7684\u677f\u5b50\nint m;\nint f[70][70];\nint main()\n{\n\tn=read();m=read();\n\ts=0;t=701;\n\tR int num=n*m;\n\tfor(R int i=1;i<=m;i++)\n\t{\n\t\tfor(R int j=1;j<=n;j++)\n\t\t{\n\t\t\tf[i][j]=read();\n\t\t}\n\t}\n\tfor(R int i=1;i<=num;i++)\n\t{\n\t\tAdd(s,i,1,0);\n\t}//\u7b2c\u4e00\u6b65\n\tfor(R int i=num+1;i<=num+m;i++)\n\t{\n\t\tAdd(i,t,1,0);\n\t}//\u7b2c\u4e09\u6b65\n\tfor(R int i=1;i<=n;i++)//\u5de5\u4eba \n\t{\n\t\tfor(R int tim=1;tim<=m;tim++)//\u65f6\u95f4\u6233 \n\t\t{\n\t\t\tfor(R int k=1;k<=m;k++)//\u987e\u5ba2 \n\t\t\t{\n\t\t\t\tAdd((i-1)*m+tim,n*m+k,1,f[k][i]*tim);\n\t\t\t}\n\t\t}\n\t}//\u7b2c\u4e09\u6b65\n\tcostflow();\n\tprintf(\"%.2lf\",(double)ans/m);//\u9664\u4ee5\u987e\u5ba2\u6570\u540e\u8bb0\u5f97\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570\n//\tcout<<ppo<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1559720284,
        "uid": 110031,
        "name": "z1431346079",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2053 \u3010[SCOI2007]\u4fee\u8f66\u3011"
    },
    {
        "content": "\u9898\u76ee\n-\n\n[\u4f20\u9001\u95e8](http://www.lydsy.com/JudgeOnline/problem.php?id=1070)\n\n\u9898\u89e3\n-\n\n\u539f\u672c\u60f3\u5230\u7684\u662f[\u661f\u9645\u6218\u4e89](http://blog.csdn.net/a_comme_amour/article/details/79615838)\u4e00\u6837\u4e8c\u5206\u6700\u5927\u6d41\u3002\u7136\u800c\u8fd9\u9898\u4e0e\u5176\u4e0d\u540c\u7684\u662f\u6bcf\u4e2a\u4eba\u4fee\u7684\u8f66\u6709\u5148\u540e\u987a\u5e8f\uff0c\u67d0\u4e00\u4eba\u4fee\u67d0\u4e00\u8f86\u8f66\u4f1a\u53d7\u5230\u4e0a\u4e00\u8f86\u8f66\u7684\u5f71\u54cd\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e00\u8f86\u8f66\u662f\u8fd9\u4e2a\u4eba\u7b2c\u51e0\u4e2a\u548c\u4fee\u7684\u5bf9\u4e8e\u603b\u65f6\u95f4\u7684\u8d21\u732e\u6709\u5f88\u5927\u7684\u5f71\u54cd\uff08\u5012\u6570\u7b2c\u4e00\u4e2a\u4eba\u4fee\u53ea\u9700\u8981\u82b1\u4e00\u500d\u7684\u65f6\u95f4\uff0c\u5012\u6570\u7b2c\u4e8c\u4e2a\u4eba\u4fee\u9700\u8981\u82b1\u4e24\u500d\u7684\u65f6\u95f4\u2026\u2026\uff09\u3002\n\u4e8e\u662f\u6211\u4eec\u628a\u6bcf\u4e00\u79cd\u72b6\u6001\u90fd\u62c6\u6210\u70b9\uff0c\u6bcf\u4e00\u4e2a\u4eba\u62c6\u51fan\uff08\u8f66\u7684\u6570\u91cf\uff09\u4e2a\u70b9\uff08\u5171\u62c6\u51fan *m\u4e2a\u70b9\uff09\uff0c\u6bcf\u8f86\u8f66\u90fd\u5411\u8fd9n*m\u548c\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a1,\uff0c\u8d39\u7528\u4e3atime[car][peo] * t (t\u8868\u793a\u8fd9\u8f86\u8f66\u88ab\u8fd9\u4e2a\u4eba\u5012\u6570\u7b2c\u51e0\u4e2a\u4fee)\uff0c\u8868\u793a\u5728\u5f53\u524d\u72b6\u6001\u4e0b\u4eba\u4fee\u8f66\u5bf9\u603b\u65f6\u95f4\u7684\u8d21\u732e\uff1b\n\u60f3\u4e00\u60f3\u5728\u540c\u4e00\u65f6\u523b\u6700\u591a\u53ea\u6709m\u4e2a\u4eba\u4fee\u8f66\uff0c\u8fd9\u662f\u7b26\u5408\u5b9e\u9645\u60c5\u51b5\u7684\u3002\nS\u5411\u8f66\uff0cm*n\u4e2a\u4eba\u5411T\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a1\u8d39\u7528\u4e3a0\uff0c\u8dd1\u51fa\u6700\u5c0f\u8d39\u7528\u5373\u4e3a\u7b54\u6848\u3002\n\n\u4ee3\u7801\n-\n\n\u89c1[\u8fd9\u91cc](http://blog.csdn.net/a_comme_amour/article/details/79634412)\n\n\u603b\u7ed3\n-\n\n\u628a\u6bcf\u4e00\u79cd\u72b6\u6001\u90fd\u62c6\u70b9\u7684\u601d\u60f3",
        "postTime": 1521626988,
        "uid": 48036,
        "name": "\u79cb\u65e5\u79c1\u8bed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2053 \u3010[SCOI2007]\u4fee\u8f66\u3011"
    }
]