[
    {
        "content": "\u6709\u65f6\u5019\u8ba1\u7b97\u4e00\u4e0b\u65e0\u7528\u7684\u72b6\u6001\u53cd\u800c\u662f\u6709\u7528\u7684\u3002\u4f8b\u5982\u697c\u4e0b\u7684\u5168\u90fd\u662f\u8bbedp[i][j]\u8868\u793ai\u4e2a\u70b9\u521a\u597dj\u5c42\u7684\u65b9\u6848\u6570\uff0c\u7136\u540e\u5f04\u4e2a4\u5c42\u5faa\u73af\uff0c\u8fd8\u6709\u7ec4\u5408\u6570\u4ec0\u4e48\u4e71\u4e03\u516b\u7cdf\u7684\uff0c\u4e0d\u4ec5\u601d\u7ef4\u96be\u5ea6\u9ad8\uff0c\u7f16\u7a0b\u96be\u5ea6\u9ad8\uff0c\u65f6\u7a7a\u590d\u6742\u5ea6\u90fd\u9ad8\uff01\n\n\u65e2\u7136\u8bbe\u521a\u597dj\u5c42\u90a3\u4e48\u9ebb\u70e6\uff0c\u6211\u4eec\u4e0d\u59a8\u8bbedp[i][j]\u8868\u793ai\u4e2a\u70b9\u5c0f\u4e8e\u7b49\u4e8ej\u5c42\u7684\u65b9\u6848\u6570\uff0c\u90a3\u4e48\u6700\u7ec8\u6211\u4eec\u6240\u9700\u7684\u7b54\u6848\u5c31\u662fdp[n][k]-dp[n][k-1]\u662f\u4e0d\u662f\uff1f\n\n\u8003\u8651\u4e00\u4e0bdp\u8fc7\u7a0b\uff08\u4e00\u822c\u6811\u5f62\u80cc\u5305\uff0c\u9664\u975e\u662f\u591a\u53c9\u6811\u7528\u5206\u7ec4\u80cc\u5305\u53ea\u80fd\u7528dfs\u5199\uff0c\u5426\u5219\u53ef\u4ee5\u5148\u8003\u8651\u5199\u4e00\u4e2a\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u56e0\u4e3a\u8bb0\u5fc6\u5316\u641c\u7d22\u867d\u7136\u6548\u7387\u4f4e\u4e00\u4e9b\uff0c\u4f46\u662f\u601d\u7ef4\u590d\u6742\u5ea6\u8f83\u4f4e\uff0c\u521d\u59cb\u5316\u8003\u8651\u4e5f\u4f1a\u66f4\u5168\u9762\uff0c\u7136\u540e\u5bf9\u5e94\u7684\u518d\u6539\u5199\u6210dp\uff09\n\n\u679a\u4e3e\u4e00\u4e2at\uff0c\u8868\u793a\u5206t\u4e2a\u70b9\u7ed9\u5de6\u5b50\u6811\uff0c\u5269\u4e0bi-t-1\uff08\u9664\u53bb\u5f53\u524d\u7684\u6839\uff09\u5206\u7ed9\u53f3\u5b50\u6811\uff0c\u7136\u540e\u4e58\u6cd5\u539f\u7406\u641e\u4e00\u641e\u3002\n\n\u5373\uff1adp[i][j]=sigma(dp[t][j-1]\\*dp[i-t-1][j-1]),\u662f\u4e0d\u662f\u5f88\u7b80\u5355\uff1f\n\n\u8003\u8651\u4e00\u4e0b\u521d\u59cb\u5316\uff1a\u628adp[1][]\u90fd\u8bbe\u62101\u5c31\u597d\u4e86\uff0c\u7136\u540e\u679a\u4e3e\u70b9\u7684\u4e2a\u6570\u65f6\u53ea\u9700\u8981\u679a\u4e3e\u5947\u6570\uff08\u8fd9\u4e2a\u5f88\u5bb9\u6613\u60f3\u5230\uff09\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int Mod=9901;\nint dp[210][110],n,k;\nint main(){\n    scanf(\"%d%d\",&n,&k);\n    for (int i=1;i<=k;i++)dp[1][i]=1;\n    for (int tk=1;tk<=k;tk++)\n        for (int i=3;i<=n;i+=2)\n            for (int j=1;j<i;j+=2)\n                (dp[i][tk]+=dp[j][tk-1]*dp[i-j-1][tk-1])%=Mod;\n    printf(\"%d\",(dp[n][k]-dp[n][k-1]+Mod)%Mod);\n    return 0;\n}\n```",
        "postTime": 1504875486,
        "uid": 54916,
        "name": "I_AM_HelloWord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1472 \u3010\u5976\u725b\u5bb6\u8c31 Cow Pedigrees\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2aDP\u95ee\u9898\u3002\u6211\u4eec\u6240\u5173\u5fc3\u7684\u6811\u7684\u6027\u8d28\u662f\u6df1\u5ea6\u548c\u8282\u70b9\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u505a\u8fd9\u6837\u4e00\u5f20\u8868\uff1a\n\ntable[i][j]\u8868\u793a\u6df1\u5ea6\u4e3ai\u3001\u8282\u70b9\u6570\u4e3aj\u7684\u6811\u7684\u4e2a\u6570\u3002\u6839\u636e\u7ed9\u5b9a\u7684\u7ea6\u675f\u6761\u4ef6\uff0cj\u5fc5\u987b\u4e3a\u5947\u6570\u3002\u4f60\u5982\u4f55\u6784\u9020\u4e00\u68f5\u6811\u5462\uff1f\u5f53\u7136\u662f\u7531\u66f4\u5c0f\u7684\u6811\u6765\u6784\u9020\u4e86\u3002\u4e00\u68f5\u6df1\u5ea6\u4e3ai\u3001\u8282\u70b9\u6570\u4e3aj\u7684\u6811\u53ef\u4ee5\u7531\u4e24\u4e2a\u5b50\u6811\u4ee5\u53ca\u4e00\u4e2a\u6839\u7ed3\u70b9\u6784\u9020\u800c\u6210\u3002\u5f53i\u3001j\u5df2\u7ecf\u9009\u5b9a\u65f6\uff0c\u6211\u4eec\u9009\u62e9\u5de6\u5b50\u6811\u7684\u8282\u70b9\u6570k\u3002\n\n\u8fd9\u6837\u6211\u4eec\u4e5f\u5c31\u77e5\u9053\u4e86\u53f3\u5b50\u6811\u7684\u8282\u70b9\u6570\uff0c\u5373j-k-1\u3002\u81f3\u4e8e\u6df1\u5ea6\uff0c\u81f3\u5c11\u8981\u6709\u4e00\u68f5\u5b50\u6811\u7684\u6df1\u5ea6\u4e3ai-1\u624d\u80fd\u4f7f\u6784\u9020\u51fa\u7684\u65b0\u6811\u6df1\u5ea6\u4e3ai\u3002\u6709\u4e09\u79cd\u53ef\u80fd\u7684\u60c5\u51b5\uff1a\u5de6\u5b50\u6811\u6df1\u5ea6\u4e3ai-1 \uff0c\u53f3\u5b50\u6811\u6df1\u5ea6\u5c0f\u4e8ei-1\uff1b\u53f3\u5b50\u6811\u6df1\u5ea6\u4e3ai-1\uff0c\u5de6\u5b50\u6811\u6df1\u5ea6\u5c0f\u4e8ei-1\uff1b\u5de6\u53f3\u5b50\u6811\u6df1\u5ea6\u90fd\u4e3ai-1\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5f53\u6211\u4eec\u5728\u6784\u9020\u4e00\u68f5\u6df1\u5ea6\u4e3ai\u7684\u6811\u65f6\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u4f7f\u7528\u7684\u5b50\u6811\u6df1\u5ea6\u662f\u5426\u4e3ai-1\u6216\u66f4\u5c0f\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u4f7f\u7528\u53e6\u4e00\u4e2a\u6570\u7ec4smalltrees[i-2][j]\u8bb0\u5f55\u6240\u6709\u6df1\u5ea6\u5c0f\u4e8ei-1\u7684\u6811\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u6df1\u5ea6\u4e3ai-2\u7684\u6811\u3002\u77e5\u9053\u4e86\u4e0a\u9762\u7684\u8fd9\u4e9b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4ee5\u4e0b\u4e09\u79cd\u53ef\u80fd\u7684\u65b9\u6cd5\u6765\u5efa\u6811\u4e86\uff1a\n\n```delphi\n\ntable[i][j] := smalltrees[i-2][k]*table[i-1][j-1-k];\n                  // \u5de6\u5b50\u6811\u6df1\u5ea6\u5c0f\u4e8ei-1\uff0c\u53f3\u5b50\u6811\u6df1\u5ea6\u4e3ai-1\ntable[i][j] := table[i-1][k]*smalltrees[i-2][j-1-k];\n                  // \u5de6\u5b50\u6811\u6df1\u5ea6\u4e3ai-1\uff0c\u53f3\u5b50\u6811\u6df1\u5ea6\u5c0f\u4e8ei-1\ntable[i][j] := table[i-1][k]*table[i-1][j-1-k];\n                  // \u5de6\u53f3\u5b50\u6811\u6df1\u5ea6\u90fd\u4e3ai-1 \n\n```\n\u53e6\u5916\uff0c\u5982\u679c\u5de6\u5b50\u6811\u66f4\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b83\u8fdb\u884c\u4e24\u6b21\u8ba1\u6570\uff0c\u56e0\u4e3a\u53ef\u4ee5\u901a\u8fc7\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\u6765\u5f97\u5230\u4e0d\u540c\u7684\u6811\u3002\u603b\u8fd0\u884c\u65f6\u95f4\u4e3aO(K\\*N^2)\uff0c\u4e14\u6709\u4e0d\u9519\u7684\u5e38\u6570\u56e0\u5b50\u3002\n",
        "postTime": 1376628916,
        "uid": 1,
        "name": "kkksc03",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1472 \u3010\u5976\u725b\u5bb6\u8c31 Cow Pedigrees\u3011"
    },
    {
        "content": "\u9898\u89e3by\uff1aredbag\n\n\u6211\u7684\u535a\u5ba2\uff1ahttp://redbag.duapp.com/\n\n\u6b22\u8fce\u6765\u8e29\uff01\n\n\u4e8e\u662f\u6211\u5c06kkk\u6240\u8ff0\u7684\u7ffb\u8bd1\u6210\u4ee3\u7801\u4e86\n\n/\\*\nID: ylx14274\n\nPROG: nocows\n\nLANG: C++\n\n\\*/\n            \n```cpp\n#include<set>  \n#include<map>  \n#include<list>  \n#include<queue>  \n#include<stack>  \n#include<string>  \n#include<math.h>  \n#include<time.h>  \n#include<vector>  \n#include<bitset>  \n#include<memory>  \n#include<utility>  \n#include<stdio.h>  \n#include<sstream>  \n#include<iostream>  \n#include<stdlib.h>  \n#include<string.h>  \n#include<algorithm> \n#define LL unsigned long long   \nusing namespace std;\nint a[240][240];\nint sa[240][240];\nint main() \n{\n    freopen(\"nocows.in\",\"r\",stdin);\n    freopen(\"nocows.out\",\"w\",stdout);\n    int n,m; \n    scanf(\"%d%d\",&n,&m);//n:\u8282\u70b9\u6570 m:\u6811\u9ad8\u5ea6 \n    a[1][1]=1;//\u521d\u59cb\u5316\n    for (int i=2;i<=m;i++)\n    {\n        for (int j=1;j<=n;j+=2)//\u8981\u4e48\u67092\u4e2a\u5b69\u5b50\u8981\u4e48\u6ca1\u6709\u5b69\u5b50\u6240\u4ee5\u8282\u70b9\u6570\u4e00\u5b9a\u662f\u5947\u6570 \n            for (int k=1;k<=j-1-k;k+=2)//\u7b80\u5355\u7684\u4f18\u5316,k>\u4e00\u534a\u7684\u65f6\u5019\u53ef\u4ee5*2\uff0cj-1\u662f\u51cf\u53bb\u7238\u7238 \n            {\n                int x=2;\n                if  (k==j-1-k) x=1;//\u4e00\u534a\u4e00\u534a\u7684\u8bdd\u5c31\u4e0d\u7528*2\u4e86\n                a[i][j]+=x*((sa[i-2][k]*a[i-1][j-1-k])%9901//\u5de6\u5b50\u6811\u6df1\u5ea6\u5c0f\u4e8ei-1\uff0c\u53f3\u5b50\u6811\u6df1\u5ea6\u4e3ai-1\n                +(a[i-1][k]*sa[i-2][j-1-k])%9901//\u5de6\u5b50\u6811\u6df1\u5ea6\u4e3ai-1\uff0c\u53f3\u5b50\u6811\u6df1\u5ea6\u5c0f\u4e8ei-1\n                +(a[i-1][k]*a[i-1][j-1-k])%9901);//\u5de6\u53f3\u5b50\u6811\u6df1\u5ea6\u90fd\u4e3ai-1 \n                a[i][j]%=9901; //\u8bb0\u5f97\u53d6\u6478 \n            }\n        for (int k=0;k<=n;k++)//\u52a0\u4e0a\u53bb \n            {\n                sa[i-1][k]+=sa[i-2][k]+a[i-1][k];\n                sa[i-1][k]%=9901;//\u8bb0\u5f97\u53d6\u6478 \n            }\n    }\n    cout<<a[m][n]%9901<<endl;\n    return 0;\n}\n```",
        "postTime": 1468845460,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1472 \u3010\u5976\u725b\u5bb6\u8c31 Cow Pedigrees\u3011"
    },
    {
        "content": "...\u8fd9\u9053\u9898\u96be\u5ea6\u6807\u8bb0\u6709\u70b9\u865a\u9ad8\uff08\u867d\u7136\u6211WA\u4e864\u6b21\uff09\n\n\u9996\u5148\uff0c\u5b9a\u4e49dp[x][y]\u4e3a\u8fd8\u6709x\u4e2a\u70b9\uff0c\u9700\u8981\u8fbe\u5230y\u7684\u9ad8\u5ea6\u3002\u8f6c\u79fb\u5e76\u4e0d\u5fc5\u50cf\u697c\u4e0a\u90a3\u4f4d\u6240\u8bf4\u7684\u201c\u7136\u540e\u5f04\u4e2a4\u5c42\u5faa\u73af\uff0c\u8fd8\u6709\u7ec4\u5408\u6570\u4ec0\u4e48\u4e71\u4e03\u516b\u7cdf\u7684\uff0c\u4e0d\u4ec5\u601d\u7ef4\u96be\u5ea6\u9ad8\uff0c\u7f16\u7a0b\u96be\u5ea6\u9ad8\u201d\n\n\u6211\u4eec\u91c7\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u6765\u89e3\u51b3\u8fd9\u9053\u9898\u3002\n\n\u6211\u4eec\u89c4\u5b9a\u5de6\u5b50\u6811\u5fc5\u987b\u6b63\u597d\u6ee1\u8db3\u8981\u6c42\uff0c\u5373\u5de6\u5b50\u6811\u9ad8\u5ea6\u4e3ay-1\uff0c\u800c\u53f3\u5b50\u6811\u9ad8\u5ea6\u5c0f\u4e8e\u7b49\u4e8ey-1\uff08\u5982\u679c\u5de6\u53f3\u5b50\u6811\u9ad8\u5ea6\u4e0d\u7b49\uff0c\u5219\u5de6\u53f3\u5b50\u6811\u53ef\u4ee5\u4e92\u6362\uff0c\u65b9\u6848\u4e58\u4ee52\uff09\n\n\u7136\u540e\u6211\u4eec\u7528\u4e24\u4e2afor\u5faa\u73af\u5206\u522b\u679a\u4e3e\u5de6\u5b50\u6811\u7684\u8282\u70b9\u6570\u4e0e\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u503c\uff08\u5c0f\u4e8e\u7b49\u4e8ey-1\uff09,\u5229\u7528\u4e58\u6cd5\u539f\u7406\u72b6\u6001\u8f6c\u79fb\u3002\n\n\u8bb0\u5f97\u53d6\u6a21\u3002\n\n\u603b\u65f6\u95f4\u5927\u69821000ms\uff0c\u5f53\u7136\u53ef\u4ee5\u53ef\u884c\u6027\u526a\u679d\u3001\u4f18\u5316\u2026\u2026\u53cd\u6b63\u8fc7\u4e86\u5c31\u4e0d\u7ea0\u7ed3\u4e86\uff08\u6bd5\u7adf\u52a8\u89c4\u662f\u601d\u8def\u9898\uff09\n\n```cpp\n\n#include <cstdio>\n#include <cstdlib>\n\n#define MOD 9901\n\nbool bVis[212][112];\nint dp[212][112];\n\nint n, m;\n\nint dfs(int cnt, int height)\n{\n\tif (bVis[cnt][height]) return dp[cnt][height];\n\tif (cnt == 1) return height == 1;\n\tbVis[cnt][height] = true;\n\tif (height > (cnt + 1) / 2) return 0;\n\tif (height <= 1) return 0;\n\tint& state(dp[cnt][height]);\n\tfor (int i(1); i < cnt; i += 2)\n\t{\n\t\tfor (int j(1); j < height; ++j)\n\t\t{\n\t\t\tstate += dfs(i, height - 1) * dfs(cnt - i - 1, j);\n\t\t\tstate %= MOD;\n\t\t\tif (height - 1 != j)//\u5982\u679c\u9ad8\u5ea6\u76f8\u7b49\uff0c\u90a3\u4e48\u4e92\u6362\u53cd\u800c\u4f1a\u5bfc\u81f4\u65b9\u6848\u91cd\u590d\uff08\u4e0d\u59a8\u8bd5\u7740\u6a21\u62df\u4e00\u4e0b\u6216\u8005\u8f93\u51fa\u53c2\u6570\uff09\n\t\t\t{\n\t\t\t\tstate += dfs(i, height - 1) * dfs(cnt - i - 1, j);\n\t\t\t\tstate %= MOD;\n\t\t\t}\n\t\t}\n\t}\n\treturn state;\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\tprintf(\"%d\\n\", dfs(n, m));\n\treturn 0;\n}\n\n```",
        "postTime": 1527134307,
        "uid": 33173,
        "name": "_J_C_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1472 \u3010\u5976\u725b\u5bb6\u8c31 Cow Pedigrees\u3011"
    },
    {
        "content": "\n\u9996\u5148\u660e\u786e\u4e00\u4e0b\u9898\u76ee\u7684\u610f\u601d\uff1a\u7528N\u4e2a\u70b9\u7ec4\u6210\u4e00\u68f5\u6df1\u5ea6\u4e3ai\u7684\u4e8c\u53c9\u6811\uff0c\u6c42\u4e00\u5171\u6709\u51e0\u79cd\u65b9\u6cd5\uff1f \u8bbedp[i,j]\u8868\u793a\u7528i\u4e2a\u70b9\u7ec4\u6210\u6df1\u5ea6\u6700\u591a\u4e3aj\u7684\u4e8c\u53c9\u6811\u7684\u65b9\u6cd5\u6570\uff0c\u5219\uff1a\n\ndp[i,j]=\u2211(dp[k,j-1]\u00d7dp[i-1-k,j-1])(k in {1..i-2})\n\n\u8fb9\u754c\u6761\u4ef6\uff1adp[1,i]=1\n\n\n\n\u6211\u4eec\u8981\u6c42\u7684\u662f\u6df1\u5ea6\u6070\u597d\u4e3aK\u7684\u65b9\u6cd5\u6570S\uff0c\u6613\u77e5S=dp[n,k]-dp[n,k-1]\u3002 \u4f46\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u6bcf\u6b21\u90fd\u53d6\u6a21\uff0c\u6700\u540e\u53ef\u80fd\u4f1a\u6709dp[n,k]<dp[n,k-1],\u6240\u4ee5\u53ef\u4ee5\u7528S=(dp[n,k]-dp[n,k-1]+v) mod v\n\n\n\u7ed9\u51fan,k,\u6c42\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u4e8c\u53c9\u6811\u4e2a\u6570 1.\u6bcf\u4e2a\u7ed3\u70b9\u7684\u5ea6\u4e3a\u5076\u6570 2.\u8be5\u6811\u6709n\u4e2a\u7ed3\u70b9 3.\u8be5\u6811\u7684\u6df1\u5ea6\u4e3ak \u95ee\u9898\u5206\u6790: \u7528\u52a8\u6001\u89c4\u5212\u548c\u4e58\u6cd5\u539f\u7406\u6c42\u89e3,\u53ef\u4ee5\u89c2\u5bdf\u5230\u4e00\u4e2a\u6811G(\u6709x\u4e2a\u7ed3\u70b9,\u6df1\u5ea6\u4e3ak),\u5982\u679c\u53bb\u9664\u5b83\u7684\u6839\u7ed3\u70b9\u53ef\u4ee5\u5f97\u5230\u4e24\u4e2a\u5b50\u6570G1,G2,\u8fd9\u4e24\u4e2a\u5b50\u56fe\u7684\u6df1\u5ea6\u4e3ak-1,\u4ed6\u4eec\u7684\u7ed3\u70b9\u6570\u7684\u548c\u4e3ax-1.\u8bbe\u5176\u4e2dG1\u6709i\u4e2a\u7ed3\u70b9\u5219G2\u6709x-1-i\u4e2a\u7ed3\u70b9.\n\n\n\u5b9a\u4e49P(G)\u4e3a\u4e0e\u6ee1\u8db3\u6761\u4ef6\u7684\u4e8c\u53c9\u6811G\u6709\u540c\u6837\u591a\u7ed3\u70b9\u6709\u6df1\u5ea6\u76f8\u540c\u4e14\u540c\u6837\u6ee1\u8db3\u6761\u4ef6\u7684\u6811\u7684\u4e2a\u6570.\n\n\n\u5c06\u4e8c\u53c9\u6811\u6309\u4e0a\u8ff0\u65b9\u6cd5\u4f9d\u6b21\u5206\u89e3\u4e3a(\u67091\u4e2a\u7ed3\u70b9,\u6df1\u5ea6\u4e3ak-1\u7684\u6811\u548c\u6709x-1-1\u4e2a\u7ed3\u70b9\u6df1\u5ea6\u4e3ak-1\u7684\u6811),(\u67092\u4e2a\u7ed3\u70b9,\u6df1\u5ea6\u4e3ak-1\u7684\u6811\u548c\u6709x-1-2\u4e2a\u7ed3\u70b9\u6df1\u5ea6\u4e3ak-1\u7684\u6811),(\u67093\u4e2a\u7ed3\u70b9,\u6df1\u5ea6\u4e3ak-1\u7684\u6811\u548c\u6709x-1-3\u4e2a\u7ed3\u70b9\u6df1\u5ea6\u4e3ak-1\u7684\u6811)...(\u6709x-1-1\u4e2a\u7ed3\u70b9,\u6df1\u5ea6\u4e3ak-1\u7684\u6811\u548c\u67091\u4e2a\u7ed3\u70b9\u6df1\u5ea6\u4e3ak-1\u7684\u6811)...\n\n\n\u7531\u4e58\u6cd5\u539f\u7406\u5f97\u5230:\u7531G\u6309\u4e0a\u8ff0\u65b9\u6cd5\u5206\u89e3\u6210\u7684\u6bcf\u5bf9\u4e8c\u53c9\u6811(Gx,Gy)\u52a0\u4e00\u4e2a\u6839\u7ed3\u70b9\u6784\u6210\u7684\u4e8c\u53c9\u6811\u7684\u4e2a\u6570\u6709P(Gx)\\*P(Gy)\u4e2a.\n\n\nG\u53ef\u4ee5\u5206\u89e3\u4e3ax-2\u5bf9\u5b50\u6811,\u7531\u52a0\u6cd5\u539f\u7406\u5f97\u5230P(G)=\u2211P(Gi)\\*P(Gj){(i,j)\u2208G\u53ef\u4ee5\u5206\u89e3\u5230\u7684\u5b50\u6811\u5bf9(Gi,Gj)}\n\n\n\u5b9a\u4e49f(x,k)\u6ee1\u8db3\u4e3a\u6df1\u5ea6\u4e3ak,\u7ed3\u70b9\u4e2a\u6570\u4e3ax,\u6bcf\u4e2a\u7ed3\u70b9\u7684\u5ea6\u4e3a\u5076\u6570\u7684\u4e8c\u53c9\u6811\u7684\u4e2a\u6570,\u7531\u4e0a\u8ff0\u5206\u6790\u5f97\u5230f(x,k)=\u2211(f(x-1-i,k-1)\\*f(i,k-1){1<=i<=x-2}.\n\n```cpp\nvar\n  n,m,i,j,k:integer;\n  dp:array[1..200,0..100]of integer;\nbegin\n  readln(n,m);\n  for i:=1 to m do\n    dp[1,i]:=1;\n  for j:=1 to m do\n    for i:=1 to n do\n    begin\n      if not odd(i) then\n        continue;\n      for k:=1 to i-2 do\n        dp[i,j]:=(dp[i,j]+dp[k,j-1]*dp[i-1-k,j-1]) mod 9901;\n    end;\n    writeln((dp[n,m]+9901-dp[n,m-1]) mod 9901);\nend.\n```",
        "postTime": 1458180147,
        "uid": 12825,
        "name": "YczSS",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1472 \u3010\u5976\u725b\u5bb6\u8c31 Cow Pedigrees\u3011"
    },
    {
        "content": "#### \u7b97\u6cd5\uff1a\u52a8\u6001\u89c4\u5212/\u8bb0\u5fc6\u5316\u641c\u7d22\n#### F1\uff1a\n\n\u6211\u4eec\u4e00\u5c42\u4e00\u5c42\u5730\u6765\u63a8\uff0c\u679a\u4e3e\u5c42\u6570\uff0c\u7136\u540e\u518d\u679a\u4e3e\u8fd9\u4e00\u5c42\u9009\u62e9\u7684\u5976\u725b\u7684\u4e2a\u6570\uff08\u5fc5\u987b\u662f\u5076\u6570\u4e2a\u7684\uff0c\u56e0\u4e3a\u6211\u7b2c\u4e00\u5c42\u5df2\u7ecf\u5904\u7406\u597d\u4e86\uff09\uff0c\u7136\u540e\u518d\u679a\u4e3e\u4e0a\u4e00\u5c42\u9009\u62e9\u7684\u5976\u725b\u7684\u4e2a\u6570\uff08\u4e5f\u5fc5\u987b\u662f\u5076\u6570\u7684\uff0c\u56e0\u4e3a\u6211\u628a\u7b2c\u4e8c\u5c42\u4e5f\u7279\u6b8a\u5904\u7406\u4e86\uff0c\u5c31\u53ef\u4ee5\u4ece\u7b2c\u4e09\u5c42\u5f00\u59cb\u4e86\uff09\uff0c\u4f46\u662f\u53d1\u73b0\u4e00\u5171\u8981\u9009\u62e9$n$\u4e2a\u5976\u725b\uff0c\u6240\u4ee5\u4e0d\u5f97\u4e0d\u518d\u52a0\u4e00\u7ef4\u76ee\u524d\u603b\u5171\u9009\u62e9\u7684\u5976\u725b\u7684\u6570\u91cf\uff0c\u4e5f\u5c31\u662f\u52a0\u4e00\u5c42\u5faa\u73af\u6765\u679a\u4e3e$v$\u7f62\u4e86\uff1b\u91cd\u70b9\u6765\u4e86\uff01\uff01\uff01\u5047\u8bbe\u4e0a\u4e00\u5c42\u9009\u62e9\u4e86$m$\u53ea\u5976\u725b\uff0c\u8fd9\u4e00\u5c42\u9009\u62e9\u4e86$j$\u53ea\u5976\u725b\uff0c\u90a3\u4e48$m$\u5fc5\u987b\u6ee1\u8db3$m>=j/2$\uff08\u56e0\u4e3a\u4e8c\u53c9\u6811\u7684\u6027\u8d28\uff09,\u5047\u8bbe\u4e0a\u4e00\u5c42\u7684\u72b6\u6001\u4e3a$f[i-1][m][v-j]$\uff0c\u4e5f\u5c31\u662fi-1\u5c42\u9009\u62e9\u4e86m\u53ea\u5976\u725b\uff0c\u524di-1\u5c42\u603b\u5171\u9009\u62e9\u4e86v-j\u53ea\u5976\u725b\u7684\u65b9\u6848\u603b\u6570\uff0c\u8fd9\u65f6\u7b2ci\u5c42\u5c31\u662f\u9009\u62e9\u4e86j\u53ea\u5976\u725b\u4e86\uff0c\u7b2ci\u5c42\u7684j\u53ea\u5976\u725b\u548c\u7b2ci-1\u5c42\u7684m\u53ea\u5976\u725b\u4e92\u76f8\u627e\u5988\u5988\uff0c\u90a3\u4e48\u53ef\u4ee5\u9009\u62e9\u7684\u65b9\u6848\u603b\u6570\u5c31\u662f$C_{j/2}^m*f[i-1][m][v-j]$,\u6700\u540e\u518d\u7edf\u8ba1\u5c31\u53ef\u4ee5\u4e86\u3002\n\n#### F1\u4ee3\u7801\u5b9e\u73b0\uff1a\n```cpp\n# include <bits/stdc++.h>\nusing namespace std;\nconst int mod = 9901;\nint n, k, dp[100 + 10][200 + 10][200 + 10], w[200 + 10][200 + 10];\nint main() \n{\n\tcin >> n >> k;\n\tw[0][0] = 1;\t    \n\tdp[1][1][1] = 1;\n\tdp[2][2][3] = 1;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tfor (int j = 0; j <= i; j++)\n\t    {\n\t\t\tif (j == 0 || i == j) w[i][j] = 1;\n\t        else w[i][j] = (w[i - 1][j] + w[i - 1][j - 1]) % mod;\n\t    }\n\t}\n\tfor (int i = 3; i <= k; i++)\n\t{\n\t\tfor (int j = 2; j <= (n / 2 + 1); j += 2)\n\t\t{\n\t\t\tfor (int x = j + 1; x <= n; x++)\n\t\t\t{\n\t\t\t\tfor (int y = j / 2; y <= n / 2 + 1; y++)\n\t\t\t\t{\n\t\t\t\t\tif (y % 2 == 0) dp[i][j][x] += w[y][j / 2] * dp[i - 1][y][x - j] % mod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tlong long ans = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tans += dp[k][i][n];\n\t} \n\tcout << ans % mod << endl;\t\t  \t \n\treturn 0;\n} \n```\n#### F2\uff1a\n\n\u91c7\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u6765\u89e3\u51b3\u8fd9\u9053\u9898\u3002\n\n\u6211\u4eec\u89c4\u5b9a\u5de6\u5b50\u6811\u5fc5\u987b\u6b63\u597d\u6ee1\u8db3\u8981\u6c42\uff0c\u5373\u5de6\u5b50\u6811\u9ad8\u5ea6\u4e3a$y-1$\uff0c\u800c\u53f3\u5b50\u6811\u9ad8\u5ea6\u5c0f\u4e8e\u7b49\u4e8e$y-1$\uff08\u5982\u679c\u5de6\u53f3\u5b50\u6811\u9ad8\u5ea6\u4e0d\u7b49\uff0c\u5219\u5de6\u53f3\u5b50\u6811\u53ef\u4ee5\u4e92\u6362\uff0c\u65b9\u6848\u4e58\u4ee52\uff09\u7136\u540e\u6211\u4eec\u7528\u4e24\u4e2afor\u5faa\u73af\u5206\u522b\u679a\u4e3e\u5de6\u5b50\u6811\u7684\u8282\u70b9\u6570\u4e0e\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u503c\uff08\u5c0f\u4e8e\u7b49\u4e8e$y-1$\uff09,\u5229\u7528\u4e58\u6cd5\u539f\u7406\u72b6\u6001\u8f6c\u79fb\u3002\n\n#### F2\u4ee3\u7801\u5b9e\u73b0\uff1a\n```\n# include <bits/stdc++.h>\nusing namespace std;\nconst int MOD = 9901;\nbool vis[212][112];\nint dp[212][112];\nint n, m;\nint dfs(int cnt, int height)\n{\n    if (vis[cnt][height]) return dp[cnt][height];\n    if (cnt == 1) return height == 1;\n    vis[cnt][height] = true;\n    if (height > (cnt + 1) / 2) return 0;\n    if (height <= 1) return 0;\n    int& state(dp[cnt][height]);\n    for (int i = 1; i < cnt; i += 2)\n    {\n        for (int j = 1; j < height; j++)\n        {\n            state += dfs(i, height - 1) * dfs(cnt - i - 1, j);\n            state %= MOD;\n            if (height - 1 != j)//\u5982\u679c\u9ad8\u5ea6\u76f8\u7b49\uff0c\u90a3\u4e48\u4e92\u6362\u53cd\u800c\u4f1a\u5bfc\u81f4\u65b9\u6848\u91cd\u590d\uff08\u4e0d\u59a8\u8bd5\u7740\u6a21\u62df\u4e00\u4e0b\u6216\u8005\u8f93\u51fa\u53c2\u6570\uff09\n            {\n                state += dfs(i, height - 1) * dfs(cnt - i - 1, j);\n                state %= MOD;\n            }\n        }\n    }\n    return state;\n}\n \nint main()\n{\n    cin >> n >> m;\n    cout << dfs(n, m) << endl;\n    return 0;\n}\n```\n",
        "postTime": 1588671554,
        "uid": 342361,
        "name": "Ender_beater",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1472 \u3010[USACO2.3]\u5976\u725b\u5bb6\u8c31 Cow Pedigrees\u3011"
    },
    {
        "content": "# \u4e00\u7bc7\u6765\u81ea\u849f\u84bb\u7684\u975e\u6b63\u89e3\n### \u9996\u5148\uff0c\u6211\u4eec\u6765\u770b\u770b\u6570\u636e\u8303\u56f4\uff1a  \n$3\\leqslant n<200$ , $1<k< 100$  \n\u4f60\u60f3\u5230\u4e86\u4ec0\u4e48\u4e1c\u897f\uff1f  \n~~\u7b54\uff1a\u4e8c\u7ef4\u6570\u7ec4~~  \n\u7b54\uff1a\u6253\u8868\uff01\uff01\uff01\n\n### \u6211\u4eec\u53ef\u4ee5\u5148\u6253\u4e2adfs\n\u5c31\u50cf\u8fd9\u6837\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tint x=0;\n\tchar c=getchar();\n\twhile(!isdigit(c))c=getchar();\n\twhile(isdigit(c))x=(x<<1)+(x<<3)+(c^48),c=getchar();\n\treturn x;\n}\ninline int C(int k,int n){\n\tregister int i,j=0,maxn=(n,k-n),s=1;\n\tfor(i=k;i>maxn;--i){\n\t\ts=s*i/(++j)%9901;\n\t}\n\treturn s;\n}\nint n,m,t,h[10001];\ninline void dfs(int k,int s,int x){\n\tif(k==m){\n\t\tif(s==n){\n\t\t\tt=(t+x)%9901;\n\t\t}\n\t\treturn ;\n\t}\n\tregister int i,a;\n\tfor(i=1;i<=h[k];++i){\n\t\th[k+1]=i*2;\n\t\ta=s+h[k+1];\n\t\tif(a>n){\n\t\t\treturn ;\n\t\t}\n\t\tdfs(k+1,a,x*C(h[k],i)%9901);\n\t}\n}\nint main(){\n\tn=read();\n\tm=read();\n\tif(n%2==0){\n\t\tcout<<0;\n\t\treturn 0;\n\t}\n\tif(n/2+1==m){\n\t\tint i,s=1;\n\t\tfor(i=1;i<m-1;i++){\n\t\t\ts*=2;\n\t\t\ts%=9901;\n\t\t}\n\t\tcout<<s;\n\t\treturn 0;\n\t}\n\th[1]=1;\n\tdfs(1,1,1);\n\tprintf(\"%d\",t);\n\treturn 0;\n}\n```\n### \u7136\u540e\uff0c\u628a\u5b83\u585e\u8fdb\u4e00\u4e2a\u6253\u8868\u7a0b\u5e8f\u91cc\n\u5c31\u50cf\u8fd9\u6837\uff1a\n ```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int C(int k,int n){\n\tregister int i,j=0,maxn=(n,k-n),s=1;\n\tfor(i=k;i>maxn;--i){\n\t\ts=s*i/(++j)%9901;\n\t}\n\treturn s;\n}\nint n,m,t,h[10001];\ninline void dfs(int k,int s,int x){\n\tif(k==m){\n\t\tif(s==n){\n\t\t\tt=(t+x)%9901;\n\t\t}\n\t\treturn ;\n\t}\n\tregister int i,a;\n\tfor(i=1;i<=h[k];++i){\n\t\th[k+1]=i*2;\n\t\ta=s+h[k+1];\n\t\tif(a>n){\n\t\t\treturn ;\n\t\t}\n\t\tdfs(k+1,a,x*C(h[k],i)%9901);\n\t}\n}\nint main(){\n\tfreopen(\"dabiao.txt\",\"w\",stdout);\n\tprintf(\"int p[210][110]={{0}\");\n\tfor(n=1;n<=199;++n){\n\t\tprintf(\",{\");\n\t\tprintf(\"0\");\n\t\tif(n%2==0){\n\t\t\tprintf(\"}\");\n\t\t\tcontinue;\n\t\t}\n\t\tfor(m=1;m<=n/2+1;++m){\n\t\t\tif(n%2==0){\n\t\t\t\tcout<<0;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif(n/2+1==m){\n\t\t\t\tregister int i,s=1;\n\t\t\t\tfor(i=1;i<m-1;i++){\n\t\t\t\t\ts*=2;\n\t\t\t\t\ts%=9901;\n\t\t\t\t}\n\t\t\t\tprintf(\",%d\",s);\n\t\t\t}\n\t\t\telse{\n\t\t\t\th[1]=1;\n\t\t\t\tdfs(1,1,1);\n\t\t\t\tprintf(\",%d\",t);\n\t\t\t}\n\t\t}\n\t\tprintf(\"}\");\n\t}\n\tprintf(\"};\");\n\treturn 0;\n}\n```\n### \u6700\u540e\uff0c\u628a\u8868\u590d\u5236\u4e0b\u6765\uff0c\u585e\u8fdb\u7a0b\u5e8f\u91cc  \nCode\u51fa\u73b0\u4e86\uff01\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,k,p[210][110]={\u60f3\u8981\u8868\u5417\uff1f\u81ea\u5df1\u590d\u5236\u53bb\uff01};\nint main(){\n    cin>>n>>k;\n    cout<<p[n][k];\n    return 0;\n}\n```\n",
        "postTime": 1572526651,
        "uid": 150843,
        "name": "\u5510\u4e00\u6587",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1472 \u3010\u5976\u725b\u5bb6\u8c31 Cow Pedigrees\u3011"
    },
    {
        "content": "\u771f\u662f\u9053\u597ddp\n\n\u8003\u8651\uff1a\u4ee4f[i][j]\u4e3a\u6df1\u5ea6\u4e3ai\uff0c\u8282\u70b9\u6570\u4e3aj\u7684\u6811\u7684\u65b9\u6848\n\n\u8003\u8651\u5206\u6cbb\uff0c\u5373\u8fd9\u4e00\u9897\u6811\u53ef\u4ee5\u5206\u4e3a\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\uff08\u5f53j = 1\u4f8b\u5916\uff09\uff0c\u53ef\u4ee5\u5206\u7ed9\u5de6\n\n\u5b50\u6811k\uff08k < j)\u4e2a\u8282\u70b9\uff0c\u8fd9\u65f6\u6839\u8282\u70b9\u9700\u8981\u6d88\u8017\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u5206\u7ed9\u53f3\u5b50\u6811j - k - 1\u4e2a\u8282\u70b9\n\nf[i][j] += f[i - 1][j - k - 1] * f[i - 1][k]\n\n\u663e\u7136j\u4e0d\u53ef\u80fd\u4e3a\u5076\u6570\uff0c\u6240\u4ee5\u679a\u4e3e\u7684\u65f6\u5019\u679a\u4e3e\u5947\u6570\u5373\u53ef\n\n\u4f46\u7a0d\u7b49\uff01\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u4f8b\u5982f[3][5] += f[2][1] * f[2][3],\u8fd9\u65f6f[2][1]\u662f0\uff0c\u4f46\u5b9e\u9645\u4e0a\u8fd9\u6837\u7684\u65b9\u6848\u662f\u5b58\u5728\u7684\n\n\u56e0\u6b64\u6211\u4eec\u8981\u6539\u53d8\u72b6\u6001\uff0c\u5c06f[i][j]\u8868\u793a\u4e3a\u6df1\u5ea6\u4e0d\u8d85\u8fc7i\uff0c\u4e2a\u6570\u4e3aj\u7684\u6811\u7684\u65b9\u6848\n\n\u8fd9\u65f6f[i][1]\u521d\u59cb\u5316\u4e3a1\uff0c\u4e14\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u662ff[k][n] - f[k - 1][n](\u8fd9\u6837\u80fd\u7edf\u8ba1\u51fa\u6df1\u5ea6\u6070\u597d\u4e3ak\u7684\u65b9\u6848\u6811\uff09\n\n\u4ee5\u4e0a\n\n\u4ee3\u7801\uff1a\n```\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<climits>\nusing namespace std;\nconst int mod = 9901;\nconst int maxn = 205;\ntypedef long long ll;\ninline int read()\n{\n  int ans = 0,op = 1;\n  char ch = getchar();\n  while(ch < '0' || ch > '9')\n    {\n      if(ch == '-') op = -1;\n      ch = getchar();\n    }\n  while(ch >= '0' && ch <= '9')\n    {\n      (ans *= 10) += ch - '0';\n      ch = getchar();\n    }\n  return ans * op;\n}\nint f[maxn][maxn];\nint main()\n{\n  int n = read(),k = read();\n  for(int i = 1;i <= k;i++) f[i][1] = 1;\n  f[1][1] = 1;\n  for(int i = 2;i <= k;i++)\n    for(int j = 3;j <= n;j += 2)\n      for(int k = 1;k < j;k += 2)\n    (f[i][j] += f[i - 1][k] * f[i - 1][j - k - 1]) %= mod;\n  printf(\"%d\",(f[k][n] - f[k - 1][n] + mod)% mod);\n}\n```",
        "postTime": 1542505828,
        "uid": 86721,
        "name": "L_M_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1472 \u3010\u5976\u725b\u5bb6\u8c31 Cow Pedigrees\u3011"
    },
    {
        "content": "1. \u76ee\u6807\u72b6\u6001f[i][j] \u6df1\u5ea6i \u8282\u70b9\u6570j\u4e00\u5b9a\u4e3a\u5947\u6570\n1. \u6ee1\u4e8c\u53c9\u6811f[i][j]=1 \n1. f[i][j]=\u5de6\u5b50\u6811\u60c5\u51b5\u6570*\u53f3\u5b50\u6811\u60c5\u51b5\u6570\n1. t\u8868\u793a\u5de6\u5b50\u6811\u8282\u70b9\u6570  p\u8868\u793a\u53f3\u5b50\u6811\u6df1\u5ea6 \n1. \u65e0\u6cd5\u6784\u5efa\u51fa\u6df1\u5ea6\u4e3ap\u7684\u53f3\u5b50\u6811 \u90a3\u5f53p\u66f4\u5927\u65f6\u4e5f\u4e0d\u884c\n1. \u5f53\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u4e0d\u8db3\u4ee5\u5bb9\u7eb3j-1-t\u4e2a\u8282\u70b9\u65f6 \u4f7fp\u589e\u5927 \n1. \u4e3a\u4fdd\u8bc1\u6df1\u5ea6i\u4f7f\u5de6\u5b50\u6811\u6df1\u5ea6\u6052\u4e3ai-1 \u53f3\u5b50\u6811\u6df1\u5ea6\u4e0d\u8d85\u8fc7i-1\n1. \u5982\u679c\u5de6\u53f3\u5b50\u6811\u6df1\u5ea6\u76f8\u540c \u90a3\u4e48\u5de6\u53f3\u5b50\u6811\u4e92\u6362\u4e0d\u4f1a\u4ea7\u751f\u66f4\u591a\u60c5\u51b5 \u4e0d\u4e582 \n```cpp\n#include<cstdio>\n#include<cmath>\n#include<iostream>\nusing namespace std;\nint n,k,f[201][201];\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tif(!n%2){printf(\"0\");return 0;}\n\tif(k*2-1>n){printf(\"0\");return 0;}\n\tfor(int i=1;i<=k;i++){\n\t\tfor(int j=i*2-1;j<=n;j+=2){\n\t\t\t//\u76ee\u6807\u72b6\u6001f[i][j] \u6df1\u5ea6i \u8282\u70b9\u6570j\u4e00\u5b9a\u4e3a\u5947\u6570 \n\t\t\tif(j==pow(2,i)-1) {f[i][j]=1;break;}\n\t\t\t//\u6ee1\u4e8c\u53c9\u6811f[i][j]=1 \n\t\t\tfor(int t=(i-1)*2-1;t<=j-2;t+=2){\n\t\t\t\tfor(int p=1;p<=i-1;p++){\n\t\t\t\t\t//f[i][j]=\u5de6\u5b50\u6811\u60c5\u51b5\u6570*\u53f3\u5b50\u6811\u60c5\u51b5\u6570\n\t\t\t\t\t//t\u8868\u793a\u5de6\u5b50\u6811\u8282\u70b9\u6570  p\u8868\u793a\u53f3\u5b50\u6811\u6df1\u5ea6 \n\t\t\t\t\tif(p*2-1>j-1-t) break;\n\t\t\t\t\t//\u65e0\u6cd5\u6784\u5efa\u51fa\u6df1\u5ea6\u4e3ap\u7684\u53f3\u5b50\u6811 \u90a3\u5f53p\u66f4\u5927\u65f6\u4e5f\u4e0d\u884c \n\t\t\t\t\twhile(pow(2,p)-1<j-1-t) p++;\n\t\t\t\t\t//\u5f53\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u4e0d\u8db3\u4ee5\u5bb9\u7eb3j-1-t\u4e2a\u8282\u70b9\u65f6 \u4f7fp\u589e\u5927 \n\t\t\t\t\tif(p>i-1) break;\n\t\t\t\t\t//\u4e3a\u4fdd\u8bc1\u6df1\u5ea6i\u4f7f\u5de6\u5b50\u6811\u6df1\u5ea6\u6052\u4e3ai-1 \u53f3\u5b50\u6811\u6df1\u5ea6\u4e0d\u8d85\u8fc7i-1 \n\t\t\t\t\tif(p==i-1) f[i][j]+=f[i-1][t]*f[p][j-1-t],f[i][j]%=9901;\n\t\t\t\t\t//\u5982\u679c\u5de6\u53f3\u5b50\u6811\u6df1\u5ea6\u76f8\u540c \u90a3\u4e48\u5de6\u53f3\u5b50\u6811\u4e92\u6362\u4e0d\u4f1a\u4ea7\u751f\u66f4\u591a\u60c5\u51b5 \u4e0d\u4e582 \n\t\t\t\t\telse f[i][j]+=f[i-1][t]*f[p][j-1-t]*2,f[i][j]%=9901;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} \n\tprintf(\"%d\",f[k][n]);\n\treturn 0;\n}\n```",
        "postTime": 1538121368,
        "uid": 86657,
        "name": "TheOldDriver",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1472 \u3010\u5976\u725b\u5bb6\u8c31 Cow Pedigrees\u3011"
    },
    {
        "content": "# \u849f\u84bb\u7b2c\u4e8c\u7bc7\u9898\u89e3\uff08\u7b2c\u4e00\u7bc7\u6ca1\u901a\u8fc7\u3012\u25bd\u3012\uff09\uff0c\u5e0c\u671b\u80fd\u901a\u8fc7\n\n#### \u7533\u660e\uff1a\u672c\u849f\u84bb\u6784\u56fe\u65f6\u5fd8\u8bb0\u6761\u4ef6\u201c\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u5ea6\u662f0\u62162\u201d\n#### \u6240\u4ee5\u6309\u71670\u62161\u62162\u753b\u7684\uff0c\u8bf7\u81ea\u884c\u8111\u8865~~\uff08\u52ff\u55b7\uff09~~\n\n## \u9996\u5148\u8bbe\u8ba1\u72b6\u6001\n```cpp\nint f[233][233]//f[i][j]\u4e3a\u8282\u70b9\u6570\u4e3ai\uff0c\u9ad8\u5ea6\u4e3aj\u7684\u6811\u7684\u65b9\u6848\u6570\n ```\n## \u8f6c\u79fb\u65b9\u7a0b \n\n\u5148\u770b\u8fd9\u6837\u4e00\u68f5\u6811\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/5zq6doqb.png)\n\n**\u5176\u6df1\u5ea6\u4e3a3\uff0c\u8282\u70b9\u65706\n\n**\u6211\u4eec\u53ef\u4ee5\u5c06\u6811\u53bb\u6839\u5206\u4e3a\u5de6\u53f3\u4e24\u68f5\u6811\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/xx03b5re.png)\n\n**\u7136\u540e\u5f00\u59cb\u679a\u4e3e\u5b50\u6811...~~\u81ea\u5df1\u610fyin~~\n\n**\u62d3\u5c55\u81f3\u4e00\u822c\u7684\u6811\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/5zq6doqb.png)\n\n**\u8bbe\u5176\u6df1\u5ea6\u4e3aj,\u5927\u5c0f\u4e3ai\n\n**\u53bb\u6839\u679a\u4e3e\u72b6\u6001\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/u6yjce3i.png)\n\n**\u5728\u8fd9\u91cc\u6211\u4eec\u5f3a\u5236\u8ba9\u53f3\u5b50\u6811\u7684\u6df1\u5ea6<=\u5de6\u5b50\u6811\uff0c\u7136\u540e\u5de6\u53f3\u5b50\u6811\u4ea4\u6362\n\n**\u7279\u6b8a\u7684\u5de6\u53f3\u5b50\u6811\u76f8\u540c\u65f6\uff0c\u4e0d\u7528\u4ea4\u6362\n\n```cpp\n\u5f53(p < j-1)\u65f6(k \u4e3a\u5de6\u5b50\u6811\u5927\u5c0f\uff0cp\u4e3a\u53f3\u5b50\u6811\u6df1\u5ea6) (\u5de6\u53f3\u5b50\u6811\u53ea\u6709\u4e00\u68f5\u6df1\u5ea6\u4e3a j-1\uff0c\u7ffb\u500d)\nF[i][j] += \u2211 \uff08F[k][j-1]  *  F[i-k-1][p]  *  2 \uff09 \n\n\n\u5f53p=j-1\u65f6(\u5de6\u53f3\u5b50\u6811\u6df1\u5ea6\u5747\u4e3a j-1\uff0c\u4e0d\u91cd\u590d\u8ba1\u7b97)\n+F[k][j-1] * F[i-k-1][j-1]\n```\n## \u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define MOD 9901\nusing namespace std;\nint n,m;\nint f[300][200];//f[i][j]\u4e3a\u5927\u5c0f\uff08\u8282\u70b9\u6570\uff09\u4e3ai\uff0c\u6df1\u5ea6\u4e3aj\u7684\u6811 \nint main(){\n\tcin>>n>>m;\n\tf[1][1]=1;// \u521d\u503c\uff0c\u5927\u5c0f\u6df1\u5ea6\u4e3a 1 \u7684\u5b50\u6811\u53ea\u6709\u4e00\u79cd\u60c5\u51b5\n\tfor(int i=3;i<=n;i++){//\u5927\u5c0f\u6700\u5c0f\u4e3a1\uff0c\u4f46\u4e0a\u9762\u8003\u8651\u4e86 \uff0cso \u4ece3\u5f00\u59cb \n\t\tfor(int j=2;j<=m;j++){//\u5927\u5c0f\u4e3a3\u65f6\u6df1\u5ea6\u6700\u5c0f\u4e3a2, \n\t\t\t//\u5b50\u6811\u72b6\u6001 \n\t\t\tfor(int k=1;k<i-1;k++){//\u5de6\u5b50\u6811\u5927\u5c0f\uff0c\u6700\u5927\u4e3ai-2\n\t\t\t//\u53bb\u6389\u6839-1\uff0c\u53f3\u5b50\u6811\u6700\u5c11\u7ad9\u4e00\u4e2a\u518d-1 \n\t\t\t\tfor(int p=1;p<j-1;p++){\n\t\t\t//\u8003\u8651\u53f3\u5b50\u6811\u6df1\u5ea6\uff0c\u4e3a\u4e86\u907f\u514d\u91cd\u590d so\u4f7f\u53f3\u5b50\u6811\u6df1\u5ea6\u5c0f\u4e8e\u5de6\u5b50\u6811\uff0c\u518d\u4ea4\u6362\u5de6\u53f3 \n\t\t\t//\u6700\u5927\u4e3aj-2\uff08\u53bb\u6839\u6df1\u5ea6-1 \uff09\u7684\u60c5\u51b5\t\t\t \n\t\t\t\t\tf[i][j]=(f[i][j]+f[k][j-1]*f[i-k-1][p]*2%MOD)%MOD;\n\t\t\t\t\t}//\u539f\u6765\u7684\u60c5\u51b5+\u5de6\u5b50\u6811\u60c5\u51b5*\u53f3\u5b50\u6811\u60c5\u51b5\uff0c\u56e0\u4e3a\u5de6\u53f3\u53ef\u4e92\u6362\u6240\u4ee5*2 \n\t\t\t\t\t//\u5de6\u53f3\u5b50\u6811\u6df1\u5ea6\u4e00\u6837\u65f6\uff0c\u4ea4\u6362\u4e00\u6837 \n\t\t\t\t\tf[i][j]=(f[i][j]+f[k][j-1]*f[i-k-1][j-1]%MOD)%MOD;\n\t\t\t}\n\t\t}\n\t}\n\tcout<<f[n][m];\n}\n```\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/b47l8p1g.png)\n\n\u7ba1\u7406\u5927\u5927\u6c42\u8fc7\n",
        "postTime": 1573042163,
        "uid": 155945,
        "name": "Kirito1",
        "ccfLevel": 0,
        "title": "P1472 \u5976\u725b\u5bb6\u8c31 Cow Pedigrees \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.com.cn/problem/P1472)\u5728\u8fd9\u91cc\u3002  \n\u8fd9\u9053\u9898\u5e94\u5f53\u662f\u7528**\u52a8\u6001\u89c4\u5212**\u89e3\u7684\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8981\u7528\u52a8\u6001\u89c4\u5212\uff0c\u5e94\u5f53\u662f\u56e0\u4e3a\u8fd9\u662f\u4e2a**\u8ba1\u6570**\u7684\u95ee\u9898\u3002    \n\u6574\u7bc7\u9898\u89e3\u4e3b\u8981\u5206\u56db\u5757\uff1a  \n- **\u52a8\u6001\u89c4\u5212\u7684\u6570\u7ec4**\n- **\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b**\n- **\u5e38\u6570\u4f18\u5316\uff0c\u4ee5\u53ca\u4e00\u70b9\u5c0f\u5751**\n- **\u5b8c\u6574\u4ee3\u7801**  \n\n\u4f1a\u4e00\u4e00\u53d9\u8ff0\u3002  \n### \u52a8\u6001\u89c4\u5212\u7684\u6570\u7ec4\n\u8fd9\u4e2a\u5e94\u5f53\u662f\u6700\u96be\u6574\u7684\u5730\u65b9\u4e86\u3002  \n\u9996\u5148\uff0c\u6211\u4eec\u5e94\u5f53\u8003\u8651\u8fd9\u6837\uff1a$dp_{i,j}$\u8868\u793a$j$\u4e2a\u8282\u70b9\u3001$i$\u5c42\u7684\u5b8c\u6ee1\u4e8c\u53c9\u6811\u7684\u79cd\u6570\u3002  \n\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\u63a8\u5bfc\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u65f6\u63a8\u5bfc\u4e0d\u4e0b\u53bb\u4e86\u3002\u7a76\u5176\u539f\u56e0\uff0c\u662f\u56e0\u4e3a\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u7684\u6570\u5b57\u4e4b\u95f4\u6ca1\u6709\u4ec0\u4e48\u660e\u663e\u800c\u597d\u7528\u7684\u5173\u7cfb\u3002  \n\u90a3\u4e48\u7ee7\u7eed\u60f3\u3002\u80af\u5b9a\u548c\u90a3\u4e2a\u6709\u5173\uff1b\u6211\u4eec\u5c31\u56f4\u7ed5\u90a3\u4e2a\u8bd5\u4e00\u8bd5\u3002\u8b6c\u5982\u8bf4\uff0c\u5229\u7528**\u524d\u7f00\u548c**\u601d\u60f3\uff0c\u8bbe$sum_{i,j}=\\sum_{k=1}^{i}dp_{k,j}$\u3002  \n\u8fd8\u6709\uff0c\u663e\u7136\u5730\uff0c$sum_{1,j}=1$\u3002\u8fd9\u662f**\u521d\u59cb\u503c**\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u662f\u8d70\u5f97\u901a\u7684\u3002\n### \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\u9996\u5148\uff0c\u6811\u7684\u6839\u4e00\u5b9a**\u65e2\u6709\u5de6\u5b50\u6811\uff0c\u53c8\u6709\u53f3\u5b50\u6811**\u3002\u9664\u4e86\u8282\u70b9\u6570\uff0c\u5b83\u4eec\u4e0d\u4e92\u76f8\u5f71\u54cd\u3002  \n\u5927\u5bb6\u5e94\u8be5\u5b66\u8fc7\u5c0f\u5b66\u5965\u6570\u4e2d\u7684\u52a0\u6cd5\u539f\u7406\u4e0e\u4e58\u6cd5\u539f\u7406\u5427\uff01\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5e94\u5f53**\u679a\u4e3e\u5de6\u5b50\u6811\u7684\u8282\u70b9\u6570**\uff0c\u628a\u5de6\u53f3\u5b50\u6811\u7684\u72b6\u51b5\u6570**\u4e58**\u8d77\u6765\u3002  \n\u597d\u6781\u4e86\u3002\u5df2\u7ecf\u6709\u601d\u8def\u4e86\u3002\u7ed9\u4e2a\u4ee3\u7801\u5427\uff01\n```cpp\nfor(int i=1;i<=k;i++)\n    for(int j=1;j<=n;j++)\n        for(int cut=1;cut<j;cut++)\n            sum[i][j]=(sum[i][j]+sum[i-1][j-cut-1]*sum[i-1][cut])%9901;\n```\n### \u5e38\u6570\u4f18\u5316\uff0c\u4ee5\u53ca\u4e00\u70b9\u5c0f\u5751\n**\u7406\u8bba\u4e0a**\uff0c\u901f\u5ea6\u80fd\u52a0\u500d\u3002\n\u5b8c\u6ee1\u4e8c\u53c9\u6811\u6709\u8fd9\u6837\u4e00\u6761\u6027\u8d28\uff1a\u8282\u70b9\u6570\u4e00\u5b9a\u662f**\u5947\u6570**\u3002\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u53ef\u4ee5\u8fd9\u6837\u60f3\uff1a\u5b8c\u6ee1\u4e8c\u53c9\u6811\u90fd\u662f\u7531\u6839\u8282\u70b9\u201c\u957f\u201d\u51fa\u6765\u7684\uff1b\u53ea\u6709\u6839\u8282\u70b9\u65f6\u8282\u70b9\u6570\u662f**\u5947\u6570**\uff0c\u6bcf\u201c\u751f\u957f\u201d\u4e00\u6b21\u589e\u52a0\u4e24\u4e2a\u8282\u70b9\uff0c\u8282\u70b9\u6570**\u5947\u5076\u6027\u4e0d\u53d8**\uff0c\u8282\u70b9\u6570\u8fd8\u662f**\u5947\u6570**\u3002\n\u597d\u6781\u4e86\u3002\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u7684\u90a3\u4e2a$j$\u53ea\u9700\u679a\u4e3e**\u5947\u6570**\u5373\u53ef\u3002\u6211\u6539\u8fdb\u4e4b\u540e\u662f\u8fd9\u6837\uff1a\n```cpp\nfor(int i=1;i<=k;i++)\n    for(int j=1;j<=n/2;j++)\n        for(int cut=1;cut<2*j+1;cut++)\n            sum[i][2*j+1]=(sum[i][2*j+1]+sum[i-1][2*j-cut]*sum[i-1][cut])%9901;\n```\n\u54e6\u4e0d\uff0c\u5149\u662f\u8fd9\u6837\uff0c\u4f60\u662f\u8fc7\u4e0d\u4e86\u7684\u3002\u5982\u679c\u4f60\u5f97\u4e8691\u5206\uff0c\u9519\u5728\u6700\u540e\u4e00\u4e2a\u70b9\u4e0a\uff0c\u8f93\u51fa\u7684\u662f\u8d1f\u6570\uff0c\u5f80\u4e0b\u770b\u5b8c\u3002  \n\u7b97\u6cd5\u6ca1\u6bdb\u75c5\u7684\u3002\u95ee\u9898\u51fa\u5728\u53d6\u6a21\u4e0a\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n$$a=13716,b=8706$$\n$$a\\bmod 9901=3815,b\\bmod 9901=8706$$\n$$(a-b)\\bmod 9901=5010,a\\bmod 9901-b\\bmod 9901=-4891$$\n\u6240\u4ee5\u600e\u4e48\u529e\u5462\uff1f\u7b80\u5355\u6781\u4e86\uff0c\u8f93\u51fa\u65f6\u505a\u4e2a\u7279\u5224\uff0c\u5c0f\u4e8e\u96f6\u4e86\uff0c\u5c31\u52a0\u4e0a9901\u3002\n### \u5b8c\u6574\u4ee3\u7801\n\u4ee3\u7801\u5f88\u7b80\u6d01\uff1b\u4f46\u601d\u7ef4\u96be\u5ea6\u4e0d\u5c0f\u3002\u8fd9\u4fbf\u662f\u4e00\u4e2a\u5f88\u5178\u578b\u7684\u52a8\u6001\u89c4\u5212\u3002\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read(){\n    int s=0,w=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n    return s*w;\n}\n//\u5feb\u8bfb\u7684\u51fd\u6570\u3002\u53ef\u4ee5\u8bfb\u5165\u4e00\u4e2a\u6574\u6570\u3002\nint main(){\n    int n,k,sum[209][209]={0};//n\u3001k\u5982\u9898\u610f\u3002sum\u662f\u52a8\u6001\u89c4\u5212\u7528\u7684\u6570\u7ec4\u3002\n    n=read();k=read();//\u8f93\u5165\u3002\n    for(int i=1;i<=k;i++) sum[i][1]=1;//\u8d4b\u521d\u503c\n    for(int i=1;i<=k;i++)\n        for(int j=1;j<=n/2;j++)\n            for(int cut=1;cut<2*j+1;cut++)\n                sum[i][2*j+1]=(sum[i][2*j+1]+sum[i-1][2*j-cut]*sum[i-1][cut])%9901;\n    //\u52a8\u6001\u89c4\u5212\u3002\n    if(sum[k][n]-sum[k-1][n]<0)\n        cout<<sum[k][n]-sum[k-1][n]+9901<<endl;\n    else\n        cout<<sum[k][n]-sum[k-1][n]<<endl;\n    //\u8f93\u51fa\u3002\n    return 0;\n}\n```",
        "postTime": 1588498362,
        "uid": 128136,
        "name": "Zhengsiwei",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1472 \u3010[USACO2.3]\u5976\u725b\u5bb6\u8c31 Cow Pedigrees\u3011"
    },
    {
        "content": "\u52a8\u6001\u89c4\u5212+\u6768\u8f89\u4e09\u89d2\u4e00\u904d\u8fc7\uff0c\u4f46\u662f\u5176\u5b9e\u60f3\u4e86\u5f88\u4e45\uff1b\u6211\u4eec\u80af\u5b9a\u662f\u4e00\u5c42\u4e00\u5c42\u5730\u6765\u63a8\uff0c\u679a\u4e3e\u5c42\u6570\uff0c\u7136\u540e\u518d\u679a\u4e3e\u8fd9\u4e00\u5c42\u9009\u62e9\u7684\u5976\u725b\u7684\u4e2a\u6570\uff08\u5fc5\u987b\u662f\u5076\u6570\u4e2a\u7684\uff0c\u56e0\u4e3a\u6211\u7b2c\u4e00\u5c42\u5df2\u7ecf\u5904\u7406\u597d\u4e86\uff09\uff0c\u7136\u540e\u518d\u679a\u4e3e\u4e0a\u4e00\u5c42\u9009\u62e9\u7684\u5976\u725b\u7684\u4e2a\u6570\uff08\u4e5f\u5fc5\u987b\u662f\u5076\u6570\u7684\uff0c\u56e0\u4e3a\u6211\u628a\u7b2c\u4e8c\u5c42\u4e5f\u7279\u6b8a\u5904\u7406\u4e86\uff0c\u5c31\u53ef\u4ee5\u4ece\u7b2c\u4e09\u5c42\u5f00\u59cb\u4e86\uff09\uff0c\u4f46\u662f\u53d1\u73b0\u4e00\u5171\u8981\u9009\u62e9n\u4e2a\u5976\u725b\uff0c\u6240\u4ee5\u4e0d\u5f97\u4e0d\u518d\u52a0\u4e00\u7ef4\u76ee\u524d\u603b\u5171\u9009\u62e9\u7684\u5976\u725b\u7684\u6570\u91cf\uff0c\u4e5f\u5c31\u662f\u52a0\u4e00\u5c42\u5faa\u73af\u6765\u679a\u4e3ev\u7f62\u4e86\uff1b\u73b0\u5728\u5c31\u662f\u91cd\u70b9\uff01\uff01\uff01\u5047\u8bbe\u4e0a\u4e00\u5c42\u9009\u62e9\u4e86m\u53ea\u5976\u725b\uff0c\u8fd9\u4e00\u5c42\u9009\u62e9\u4e86j\u53ea\u5976\u725b\uff0c\u90a3\u4e48m\u5fc5\u987b\u6ee1\u8db3m>=j/2\uff08\u56e0\u4e3a\u4e8c\u53c9\u6811\u7684\u6027\u8d28\uff09,\u5047\u8bbe\u4e0a\u4e00\u5c42\u7684\u72b6\u6001\u4e3af[i-1][m][v-j]\uff0c\u4e5f\u5c31\u662fi-1\u5c42\u9009\u62e9\u4e86m\u53ea\u5976\u725b\uff0c\u524di-1\u5c42\u603b\u5171\u9009\u62e9\u4e86v-j\u53ea\u5976\u725b\u7684\u65b9\u6848\u603b\u6570\uff0c\u8fd9\u65f6\u7b2ci\u5c42\u5c31\u662f\u9009\u62e9\u4e86j\u53ea\u5976\u725b\u4e86\uff0c\u7b2ci\u5c42\u7684j\u53ea\u5976\u725b\u548c\u7b2ci-1\u5c42\u7684m\u53ea\u5976\u725b\u4e92\u76f8\u627e\u5988\u5988\uff0c\n\n\u90a3\u4e48\u53ef\u4ee5\u9009\u62e9\u7684\u65b9\u6848\u603b\u6570\u5c31\u662fC\uff08m,j/2\uff09\\*f[i-1][m][v-j](\u6211\u8fd9\u91cc\u628a\u4e24\u53ea\u5144\u5f1f\u5976\u725b\u770b\u6210\u4e00\u53ea\u4e86),\u6700\u540e\u518d\u7edf\u8ba1\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\nusing namespace std;\nconst int maxn=200+10;\nconst int maxk=100+10;\nconst int mod=9901;\nint n,k,f[maxk][maxn][maxn],ans,w[maxn][maxn];\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    f[1][1][1]=1;\n    f[2][2][3]=1;\n    w[0][0]=1;\n    for(int i=1;i<=n;i++)\n        for(int j=0;j<=i;j++)\n            if(j==0 || j==i)w[i][j]=1;\n            else w[i][j]=(w[i-1][j]+w[i-1][j-1])%mod;\n    for(int i=3;i<=k;i++)\n    {\n        for(int j=2;j<=n/2+1;j+=2)\n        {\n            for(int v=j+1;v<=n;v++)\n            {\n                for(int m=j/2;m<=n/2+1;m++)\n                if(m%2==0)f[i][j][v]+=w[m][j/2]*f[i-1][m][v-j]%mod;\n            } \n        } \n    }\n    for(int i=1;i<=n;i++)\n    ans+=f[k][i][n];\n    printf(\"%d\\n\",ans%mod);\n    return 0;\n}\n```",
        "postTime": 1503803366,
        "uid": 20059,
        "name": "ylsoi",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1472 \u3010\u5976\u725b\u5bb6\u8c31 Cow Pedigrees\u3011"
    },
    {
        "content": "/\\*\ntime:76ms\n\ndp[i][j][k] i\u4ee3\u8868\u7b2c\u51e0\u5c42\uff0cj\u4e3a\u603b\u5171\u653e\u7684\u8282\u70b9\u6570\uff0ck\u8868\u793a\u8fd9\u4e00\u5c42\u653e\u7684\u8282\u70b9\u6570,dp\u6570\u7ec4\u5b58\u50a8\u65b9\u6848\u6570\n\n\u8f6c\u79fb\u65f6\uff0c\u679a\u4e3e\u8282\u70b9\u603b\u4e2a\u6570\uff0c\u4e0e\u8be5\u5c42\u7684\u8282\u70b9\u6570\uff0c\u7528\u7ec4\u5408\u6570\u7b97\u4e00\u7b97\u5373\u53ef\uff0c\uff08\u8f6c\u79fb\u8fd8\u662f\u770b\u4ee3\u7801\u5427\uff09\n\n\u7ec4\u5408\u6570\u53ef\u4ee5\u9884\u5904\u7406\n\n\\*/\n\n```cpp\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<iostream>\n#include<cstdio>\n#define For(i,a,b) for(register int i=a;i<=b;++i)\n#define Rep(i,a,b) for(register int i=a;i>=b;--i)\nconst int mod=9901;\nusing namespace std;\nint dp[110][210][210],c[201][201],fac[201],inv[201],n,k;    //c\u662f\u7ec4\u5408\u6570\uff0cfac\u662f\u9636\u4e58\uff0cinv\u662f\u9006\u5143\nint read(){\n    char x;\n    while((x=getchar())>'9' || x<'0');\n    int u=x-'0';\n    while((x=getchar())>='0' && x<='9')\n    u=u*10+x-'0';\n    return u;\n}\nint pow(int y,int x){                //x^(p-2)\u6c42\u9006\u5143\uff0c\u6c42\u7ec4\u5408\u6570\n    int res=1;\n    while(x){\n        if(x&1) (res*=y)%=mod;\n        (y*=y)%=mod;\n        x>>=1;\n    }\n    return res;\n}\nvoid init(){\n    fac[0]=1;\n    For(i,1,200) fac[i]=fac[i-1]*i%mod;\n    inv[200]=pow(fac[200],mod-2);\n    Rep(i,200,1) inv[i-1]=inv[i]*i%mod;            //\u9006\u5143\u7684\u8ba1\u7b97\n    For(i,1,200)\n        For(j,i,200)\n            c[i][j]=fac[j]%mod*inv[i]%mod*inv[j-i]%mod;\n}\nint main(){\n#ifndef ONLINE_JUDGE\n    freopen(\"input.in\", \"r\", stdin);\n    freopen(\"output.out\", \"w\", stdout);\n#endif\n    int i,j,u,v;\n    init();            //\u9884\u5904\u7406\u7ec4\u5408\u6570\n    n=read(); k=read();\n    dp[1][1][1]=1; dp[2][3][2]=1;    \n    For(u,2,k-1){                                //u\u679a\u4e3e\u5c42\u6570\n        for(i=2;i<n;i+=2)                        //i\u679a\u4e3e\u5f53\u524d\u5c42\u7684\u70b9\u6570 ,i+=2,\u70b9\u6570\u6c38\u8fdc\u4e3a\u5947\n            for(j=(u<<1)-1;j<n;j+=2){            //j\u679a\u4e3e\u603b\u70b9\u6570,u*2-1\u662f\u8fd9\u4e00\u5c42\u6700\u5c11\u8981\u653e\u7684\u70b9\n                if(!dp[u][j][i]) continue;\n                for(v=2;v<=(i<<1);v+=2){        //v\u8868\u793a\u4e0b\u4e00\u5c42\u653e\u7684\u70b9\u6570\uff0ci<<1\u56e0\u4e3a\u4e0b\u4e00\u5c42\u6700\u591a\u80fd\u6709\u8fd9\u4e00\u5c422\u500d\u7684\u70b9\n                    if(j+v>n) break; \n//                    printf(\"%d %d\\n\",v,i);\n                    (dp[u+1][j+v][v]+=(dp[u][j][i]*c[v/2][i]%mod))%=mod;\n                }\n            }\n        }\n    int ans=0;\n    for(int i=2;i<=200;i+=2)\n        if(dp[k][n][i])\n            (ans+=dp[k][n][i])%=mod;    //\u7edf\u8ba1\u7b54\u6848\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1503647566,
        "uid": 19622,
        "name": "\u7f57\u65c5\u6d32",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1472 \u3010\u5976\u725b\u5bb6\u8c31 Cow Pedigrees\u3011"
    },
    {
        "content": "\u4e09\u7ef4dp, \u56db\u7ef4\u8f6c\u79fb\uff1a\n\ndp[i][j][k] : \u7b2ci\u5c42\u653ej\u4e2a\uff0c \u603b\u5171\u653ek\u4e2a\uff0c \u7b54\u6848\u5c31\u662fdp[i][j:(2 ~ n)][k];\n\n\u8f6c\u79fb\u65b9\u7a0b\uff1adp[i][j][k] += dp[i - 1][m][k - j] \\* C[m][j >> 1], m:((j >> 1) + (j >> 1) % 2 ~ n)\n\n\u7b2ci\u5c42\u653ej\u4e2a\uff0c \u603b\u5171\u653ek\u4e2a\uff0c \u90a3\u4e48\u7b2ci - 1\u5c42\u81f3\u5c11\u653e(j >> 1) + (j >> 1) % 2) \u4e2a\uff0c \u6700\u591a\u653en\u4e2a;\n\n\u7b2ci\u5c42\u9700\u8981(j >> 1)\u4e2a\u7236\u4eb2\uff0c \u603b\u5171m\u4e2a\u7236\u4eb2\uff0c \u6240\u4ee5\u6709C[m][j >> 1]\u79cd\u9009\u62e9\uff1b\n\n\u7136\u540e\u5728\u5faa\u73af\u4e2d\u8bb0\u5f55co(i, j):i\u5c42\u653ej\u4e2a\u81f3\u5c11\u603b\u5171\u8981\u653e\u51e0\u4e2a\uff0c \u82e5\u8d85\u51fa\u9884\u7b97\uff0c \u5c31break;\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#define mod 9901\n#define For(a, b, c) for(a = b; a <= c; ++a)\n#define Forr(a, b, c) for(a = b; a >= c; --a)\nusing namespace std;\nint dp[105][205][205], C[205][205];\nint n, K, ans;\nint co(int d, int x){\n    long long u = x;\n    while(d){\n        u += (x >>= 1);\n        --d;\n        if(d > 1){\n            u += x % 2;\n            x += x % 2;\n        }\n        //cout<<d<<\" \"<<u<<endl;\n    }\n    return u;\n}\nint main(){\n#ifndef ONLINE_JUDGE\n    freopen(\"Usa.in\", \"r\", stdin);\n    freopen(\"Usa.out\",\"w\",stdout);\n#endif\n    int i, j, k, m;\n    //cout<<co(10, 100)<<endl;\n    dp[1][1][1] = 1;\n    C[0][0] = 1;\n    For(i, 1, 202) C[i][i] = C[i][0] = 1, C[i][1] = i;\n    For(i, 2, 202) For(j, 2, 202)\n        (C[i][j] = C[i - 1][j] + C[i - 1][j - 1]) %= mod;\n    scanf(\"%d%d\", &n, &K);\n    For(i, 2, K){\n        For(j, 2, n){\n            if(i < 31) if(j >= (1 << i)) break;\n            For(k, co(i, j), n){\n                For(m, j >> 1, n){\n                    if(m == (j >> 1) && i > 2) m += (j >> 1) % 2;\n                    if(co(i - 1, m) > k - j) break;\n                    (dp[i][j][k] += dp[i - 1][m][k - j] * C[m][j >> 1]) %= mod;\n                    ++m;\n                }\n            }\n            ++j;\n        }\n    }\n    //cout<<dp[2][2][3]<<endl;\n    For(i, 2, n) (ans += dp[K][i][n]) %= mod, ++i;\n    printf(\"%d\", ans);\n    return 0;\n}\n```",
        "postTime": 1491959135,
        "uid": 19683,
        "name": "Till_Gloam",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1472 \u3010\u5976\u725b\u5bb6\u8c31 Cow Pedigrees\u3011"
    },
    {
        "content": "\u5982kkk\u6240\u8a00\n\n\n\u6784\u9020f[j,i]\u8868\u793a\u6df1\u5ea6\u4e3ai\uff0c\u603b\u7ed3\u70b9\u6570\u4e3aj\u7684\u6811\u7684\u5f62\u6001\u6570\n\n\u6211\u4eec\u5728\u6784\u9020\u4e00\u68f5\u6df1\u5ea6\u4e3ai\uff0c\u603b\u7ed3\u70b9\u4e3aj\u7684\u6811\u7684\u65f6\u5019\uff0c\u9700\u8981\u5148\u62ff\u51fa\u4e00\u4e2a\u6839\u7ed3\u70b9\uff0c\u7528j-1\u4e2a\u8282\u70b9\u6784\u9020\u5b50\u6811\uff0c\n\n\u800c\u4e14\u8fd8\u8981\u4fdd\u8bc1max(deep\u5de6\u5b50\u6811\uff0cdeep\u53f3\u5b50\u6811)=i-1\n\n\u90a3\u4e48\u5de6\u53f3\u5b50\u6811\u7684\u5f62\u6001\u5171\u6709\u4e24\u79cd\uff1a\n\n1.deep\u5de6\u5b50\u6811=i-1 deep\u53f3\u5b50\u6811<=i-2\uff1b\n\n2.deep\u5de6\u5b50\u6811<=i-2 deep\u53f3\u5b50\u6811=i-1;\n\n3.deep\u5de6\u5b50\u6811=i-1 deep\u53f3\u5b50\u6811=i-1\uff1b\n\n\u90a3\u4e48\u6211\u4eec\u7b2c\u4e09\u79cd\u60c5\u51b5\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e \u4e0a\u4e00\u4e2a\u6df1\u5ea6\u7684 \u5de6\u53f3\u5b50\u6811\u7684\u8282\u70b9\u5206\u914d\u60c5\u51b5\u6765\u8f6c\u79fb\uff1b\n\n\u60c5\u51b51\u548c2\u7684\u4e2a\u6570\u5b9e\u9645\u4e0a\u662f\u4e00\u6837\u591a\u7684\uff0c\u56e0\u4e3a2\u4e2d\u53ef\u4ee5\u4ee4\u5de6\u53f3\u5b50\u6811\u4ea4\u6362\u4f4d\u7f6e\uff0c\u5c31\u548c1\u4e00\u6837\u4e86\uff1b\n\n\u90a3\u4e48\u6211\u4eec\u770b\u60c5\u51b51\uff0cdeep=i-1\u7684\u6811\u662f\u6211\u4eec\u4e0a\u4e00\u4e2a\u72b6\u6001\u7684\u8bb0\u5f55\u503c\uff0c\u8fd9\u5c31\u8981\u6c42\u6211\u4eec\u6709\u4e00\u4e2a\u8bb0\u5f55\u6df1\u5ea6\u4e0d\u8d85\u8fc7k\u7684\u6811\u7684\u4e2a\u6570\u7684\u6570\u7ec4\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5728\u6bcf\u6b21\u8f6c\u79fb\u5b8cf[j,i]\u7684\u65f6\u5019\uff0c\u8ba9sum[j,i]:=f[j,i]+sum[j,i-1]\uff1b\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u524d\u7f00\u548c\u7684\u601d\u60f3\u3002\n\n\nAC\u4ee3\u7801\uff1a\n\n```delphi\n\nvar f:array[1..200,1..100]of int64;\nvar sum:array[0..200,0..100]of int64;\nvar i,j,m,n,k,s:longint;\nbegin\nread(n,s);\nf[1,1]:=1;\nsum[1,1]:=1;\nf[3,2]:=1;\nsum[3,2]:=1;\nsum[1,2]:=1;\n\nfor i:=3 to s+1 do\nbegin\n    for j:=i to n do\n    begin\n        for k:=i-1 to j-1 do//k\u5206\u914d\u7ed9\u5de6\u5b50\u6811\uff0c\u6df1\u5ea6\u4e3ai-1\u7684\u5de6\u5b50\u6811\u6700\u5c11\u6709i-1\u4e2a\u8282\u70b9\n        f[j,i]:=(f[j,i]+f[k,i-1]*sum[j-k-1,i-2])mod 9901;//deep\u53f3\u5b50\u6811<=i-2\n        f[j,i]:=f[j,i]*2 mod 9901;//\u60c5\u51b51.2\u4e2a\u6570\u76f8\u540c\n        \n        for k:=i-1 to j-i do//deep\u5de6\u53f3\u5b50\u6811=i-1\uff0c\u5de6\u5b50\u6811\u6700\u5c11i-1\uff0c\u53f3\u5b50\u6811\u6700\u5c11i-1----->\u5de6\u5b50\u6811\u6700\u591aj-i\uff08\u5b50\u6811\u603b\u7ed3\u70b9j-1\uff09\n        f[j,i]:=(f[j,i]+f[k,i-1]*f[j-k-1,i-1]) mod 9901;\n        sum[j,i]:=(sum[j,i]+f[j,i])mod 9901;//\u8f6c\u79fbsum\n        sum[j,i]:=(sum[j,i]+sum[j,i-1])mod 9901;//\u52a0\u4e0a\u524d\u9762\u7684\n    end;\n    for j:=1 to i-1 do//\u8fd9\u4e9b\u72b6\u6001\u5bf9\u4e8e\u5b50\u6811\u7684\u8282\u70b9\u5206\u914d\u60c5\u51b5\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u4f46\u662f\u5bf9\u4e8esum\u662f\u6709\u610f\u4e49\u7684\u3002\n    sum[j,i]:=sum[j,i-1];\nend;\nwriteln(f[n,s]);\nend.\n\n```\n",
        "postTime": 1445430201,
        "uid": 2266,
        "name": "\u51ef\u7279\u7433",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1472 \u3010\u5976\u725b\u5bb6\u8c31 Cow Pedigrees\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u4e00\u9053\u9898\u662f\u4e00\u9053\u9012\u63a8\u9898\uff0c\u552f\u4e00\u7684\u96be\u70b9\u5c31\u662f\u96be\u627e\u89c4\u5f8b\n\n\u5b9a\u4e49\u4e00\u4e2af\u6570\u7ec4\uff0cf[n][k]\u8868\u793an\u4e2a\u70b9\u4e0d\u5927\u4e8ek\u957f\u5ea6\u7684\u65b9\u6848\u6570\n\n\u7ed3\u679c\u5c31\u662ff[n][k]-f[n][k-1]\u4e86\n\n\u4e09\u91cdfor\u5faa\u73af\u9996\u5148\u679a\u4e3e\u957f\u5ea6i\uff0c\u70b9\u7684\u4e2a\u6570j\uff0c\u5de6\u5b50\u6811\u7684\u4e2a\u6570t\n\n\u516c\u5f0f f[j][i]+=f[t][i-1]* f[j-i-1][i-1]\n\n\u8bb0\u5f97\u662f\u4e58\uff0c\u800c\u4e0d\u662f\u52a0\uff0c\u4e58\u6cd5\u539f\u7406\u5c31\u4e0d\u89e3\u91ca\u4e86\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,k,f[210][210];\nint main()\n{\n\tint i,j,t;\n\tscanf(\"%d%d\",&n,&k);\n\tfor(i=1;i<=k;i++) f[1][i]=1;//\u4e00\u4e2a\u70b9\u65e0\u8bba\u591a\u9ad8\u90fd\u662f1\u79cd\u65b9\u6848 \n\tfor(i=1;i<=k;i++)//\u679a\u4e3e\u9ad8\u5ea6 \n\t{\n\t\tfor(j=3;j<=n;j+=2)//\u679a\u4e3e\u70b9\u6570\uff0c\u4e24\u8fb9\u540c\u65f6+1\uff0c\u6240\u4ee5j+2 \n\t\t{\n\t\t\tfor(t=1;t<j;t+=2)//\u679a\u4e3e\u5de6\u5b50\u6811\u7684\u70b9\u6570 \n\t\t\t{\n\t\t\t\tf[j][i]+=f[t][i-1]*f[j-t-1][i-1];//\u521a\u624d\u7684\u516c\u5f0f \n\t\t\t\tf[j][i]%=9901;//\u9898\u76ee\u8bf4\u7684%9901 \n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",(f[n][k]-f[n][k-1]+9901)%9901);//\u8f93\u51fa\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a\u6570\u53ef\u80fd\u4e0d\u662f\u540c\u7ea7\uff0c\u6240\u4ee5\u8981+9901\uff0c\u8fd9\u4e2a\u4e0d\u5f71\u54cd\u7ed3\u679c \n\treturn 0;\n}\n```",
        "postTime": 1524382643,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1472 \u3010\u5976\u725b\u5bb6\u8c31 Cow Pedigrees\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7684\u89e3\u6cd5\u5176\u5b9e\u5f88\u5999\uff0c\u5176\u5b83\u9898\u89e3\u91cc\u6709\u4f53\u73b0\u3002\u8fd9\u91cc\u7ed9\u51fa\u4e00\u79cd\u6bd4\u8f83\u66b4\u529b\u7684dp\u601d\u8def\u3002\n\n\u8bbe$f[i][j]$\u8868\u793a$i$\u5c42$j$\u70b9\u7684\u6811\u6709\u591a\u5c11\u79cd\u3002\u663e\u7136\uff0c\u5f53$j>1$\u65f6\uff0c\u6839\u8282\u70b9\u5fc5\u6709$2$\u5b50\u8282\u70b9\u3002\u6240\u4ee5\u8003\u8651\u679a\u4e3e\u6839\u8282\u70b9\u5de6\u53f3\u5b50\u6811\u7684\u8282\u70b9\u4e2a\u6570\uff0c\u4e00\u8fb9\u4e3a$k$\u5219\u53e6\u4e00\u8fb9\u4e3a$j-k-1$\uff0c\u6240\u4ee5$k$\u7684\u8303\u56f4\u4e3a$1$\u5230$j-2$\uff0c\u4f7f$j$\u4e0e$j-k-1$\u5747\u5927\u4e8e$1$\u3002\n\n\u56e0\u4e3a\u53ea\u9700\u8981\u4e00\u6761\u4ece\u6839\u5f15\u51fa\u7684\u8def\u5f84\u7b49\u4e8e$i$\uff0c\u6240\u4ee5\u82e5\u6839\u8282\u70b9\u7684\u4e00\u4e2a\u5b50\u6811\u7684\u6df1\u5ea6\u4e3a$i-1$\uff0c\u5219\u53e6\u4e00\u5b50\u6811\u4e0d\u9700\u8981\u4e3a$i-1$\u3002\u6211\u4eec\u7528$sum[i][j]$\u8868\u793a\u5c42\u6570\u5c0f\u4e8e\u7b49\u4e8e$i$\uff0c\u70b9\u6570\u4e3a$j$\u7684\u6811\u6709\u591a\u5c11\u79cd\uff0c\u5219$f[i][j]$\u7b54\u6848\u4e3a$f[i-1][k]*sum[i-1][j-k-1]+sum[i-1][k]*f[i-1][j-k-1]$\u3002\u4f46\u662f\u8981\u6ce8\u610f\uff0c\u8fd9\u4e2a\u5f0f\u5b50\u91cd\u590d\u8ba1\u7b97\u4e86\u4e24\u4e2a\u5b50\u6811\u6df1\u5ea6\u5747\u4e3a$i-1$\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u8981\u518d\u51cf\u53bb$f[i-1][k]*f[i-1][j-k-1]$\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u8fb9\u6c42$f$\u4e00\u8fb9\u7edf\u8ba1$sum$\u5373\u53ef\u3002\u7a0b\u5e8f\u91cc\u7684$sum$\u4f7f\u7528\u4e86\u6eda\u52a8\u6570\u7ec4\uff0c\u6eda\u53bb\u4e86\u5c42\u6570\u7684\u7ef4\u5ea6\u3002\u6ce8\u610f$sum$\u4e0d\u8981\u4e0e$f$\u5728\u540c\u4e00\u4e2a\u5faa\u73af\u4e2d\u7edf\u8ba1\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4$sum$\u63d0\u524d\u7edf\u8ba1\u4e86\u6df1\u5ea6\u4e3a$i$\u7684$f$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<cmath>\n#include<iostream>\nusing namespace std;\nint dp[200][300]={0},sum[300]={0};\nint main()\n{\n    dp[1][1]=1;sum[1]=1;\n    int n,m;scanf(\"%d%d\",&n,&m);\n    for(int i=2;i<=m;i++)\n    {\n        for(int j=3;j<=n;j++)\n            for(int k=1;k<=j-2;k++)\n                dp[i][j]=((dp[i][j]+dp[i-1][k]*sum[j-k-1]+sum[k]*dp[i-1][j-k-1]-dp[i-1][k]*dp[i-1][j-k-1])%9901+9901)%9901;\n        for(int j=3;j<=n;j++)sum[j]=(sum[j]+dp[i][j])%9901;\n    }\n    printf(\"%d\\n\",dp[m][n]);\n    return 0;\n}\n```\n",
        "postTime": 1551876447,
        "uid": 32275,
        "name": "KesdiaelKen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1472 \u3010\u5976\u725b\u5bb6\u8c31 Cow Pedigrees\u3011"
    },
    {
        "content": "## \u6253\u8868\n\n\u7528dfs\u6253\u8868\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801 3ms\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n ,k;\nint p[210][110] = {{0},{0,1},{0},{0,0,1},{0},{0,0,0,2},{0},{0,0,0,1,4},{0},{0,0,0,0,6,8},{0},{0,0,0,0,6,20,16},{0},{0,0,0,0,4,40,56,32},{0},{0,0,0,0,1,68,152,144,64},{0},{0,0,0,0,0,94,376,480,352,128},{0},{0,0,0,0,0,114,844,1440,1376,832,256},{0},{0,0,0,0,0,116,1744,4056,4736,3712,1920,512},{0},{0,0,0,0,0,94,3340,955,5347,4371,9600,4352,1024},{0},{0,0,0,0,0,60,5976,7870,7500,1279,972,4262,9728,2048},{0},{0,0,0,0,0,28,139,8210,2026,4323,8349,1681,9375,1702,4096},{0},{0,0,0,0,0,8,5955,768,1419,4475,846,4202,4711,2698,7500,8192},{0},{0,0,0,0,0,1,3658,5844,44,7048,6711,5423,7462,8017,7091,3390,6483},{0},{0,0,0,0,0,0,2695,6536,3597,4607,4914,1438,5735,9580,9114,5962,3362,3065},{0},{0,0,0,0,0,0,2054,5024,5076,5100,6181,6900,4045,2338,1538,4360,1967,9789,6130},{0},{0,0,0,0,0,0,195,4706,4907,4246,5332,9601,4379,960,5542,1732,7213,6887,5906,2359},{0},{0,0,0,0,0,0,5241,4944,2806,7840,9274,5571,2074,5348,3081,2322,2278,7529,6008,4270,4718},{0},{0,0,0,0,0,0,5803,7888,4081,3288,3937,9264,4092,5702,3108,4626,6829,4370,9529,8744,3357,9436},{0},{0,0,0,0,0,0,1283,8282,2939,3087,6846,8617,5787,3756,1045,8985,5538,2473,7333,7087,5761,6249,8971},{0},{0,0,0,0,0,0,2340,4274,6233,7938,1086,2855,6692,9220,5193,5263,6346,6455,659,1327,3025,7405,1667,8041},{0},{0,0,0,0,0,0,1079,3330,4870,9532,137,1172,9842,6403,3980,783,596,9843,4203,2388,2140,8873,5646,1474,6181},{0},{0,0,0,0,0,0,9887,3852,8390,6204,1438,389,1906,9527,8073,435,4752,6372,459,1150,5290,1028,3397,1005,9129,2461},{0},{0,0,0,0,0,0,1047,8067,333,8696,1011,923,2779,9786,12,3981,5373,9006,8905,2223,2610,620,9783,5553,7419,917,4922},{0},{0,0,0,0,0,0,5096,1719,2342,8880,158,5722,379,8613,8913,8043,6137,6251,911,5402,4887,882,1225,9871,412,8315,6756,9844},{0},{0,0,0,0,0,0,1932,8293,5772,5628,3725,5488,3714,939,5236,9261,2615,2761,776,6251,8858,6009,2371,1214,7429,5077,8506,3554,9787},{0},{0,0,0,0,0,0,568,5876,2412,8246,9086,3437,8418,2635,2562,4434,6244,5147,9735,8426,3847,2492,9156,4177,8771,2785,5557,707,6994,9673},{0},{0,0,0,0,0,0,120,1346,3485,8727,3432,8953,6434,3842,7269,5181,1344,4526,3878,6970,4703,5405,5323,678,4336,1865,8250,5360,8294,3859,9445},{0},{0,0,0,0,0,0,16,81,3100,2437,7097,6549,3588,324,6782,2931,9716,2225,8975,9747,3982,9787,762,9607,7823,3033,8524,9588,5978,417,7262,8989},{0},{0,0,0,0,0,0,1,955,6085,8085,4922,6589,7602,1007,5621,8696,9332,8765,7457,6014,5831,2377,8628,7811,2673,6522,1554,877,7262,5875,7640,3711,8077},{0},{0,0,0,0,0,0,0,3031,7409,8112,4761,6480,7801,3266,9690,7931,8329,1493,7605,9853,9680,5205,6888,4268,3727,5913,1134,5883,5550,7592,5938,8178,5598,6253},{0},{0,0,0,0,0,0,0,2574,6849,1269,7281,4584,1038,5744,4663,2208,8989,572,8605,7590,4562,9316,9615,8311,8872,672,6238,8626,2815,1900,1402,2139,328,7548,2605},{0},{0,0,0,0,0,0,0,2706,6761,7062,2312,3155,7031,5685,4036,1151,7801,4159,4198,8184,1750,2843,7240,6919,5081,6621,7457,2325,9401,4100,6841,6082,6556,4556,7800,5210},{0},{0,0,0,0,0,0,0,6230,1790,9601,8638,2491,7014,7524,9486,1748,5764,149,2228,2917,4153,5273,3546,5621,2084,6195,1967,7153,4280,9161,520,4442,1322,8019,9616,1008,519},{0},{0,0,0,0,0,0,0,2498,9616,1299,1113,9086,4682,1843,1836,5164,7548,2010,610,4427,8765,5862,5013,8736,3288,3894,9353,3827,9687,663,4008,1075,70,2174,8961,5648,2535,1038},{0},{0,0,0,0,0,0,0,909,2587,9477,2700,6544,5565,7127,4453,8557,2456,1274,2509,9416,626,4384,3411,3176,6102,6963,774,5774,3839,2271,5398,8144,256,6113,2045,5295,4449,6108,2076},{0},{0,0,0,0,0,0,0,7794,9608,5768,4676,6360,6111,4587,2775,1805,2471,6352,1120,4800,2487,4678,6852,6069,8395,4086,3566,8983,4969,6644,7833,6582,1473,73,9023,3495,8711,6143,4391,4152},{0},{0,0,0,0,0,0,0,7705,1425,3142,4958,6886,9794,3833,7606,5644,7542,7753,5415,3614,7068,7646,9496,280,2855,1236,8496,648,6834,7439,4903,3032,4435,2344,8697,7201,8013,2046,8852,3033,8304},{0},{0,0,0,0,0,0,0,9432,2035,6285,1050,7016,3542,220,9499,9447,3397,2490,9743,5191,7521,7835,6560,2338,6296,1571,1623,8203,2224,1856,6079,2204,4598,6969,6099,2822,559,2017,1685,5087,4469,6707},{0},{0,0,0,0,0,0,0,9459,3816,6656,9400,8469,7947,794,3769,1176,6971,5007,6414,2772,4081,2901,9628,4524,2610,5769,6156,6028,5564,8019,7142,6860,9206,9596,800,3427,2260,3133,4030,9893,3145,5744,3513},{0},{0,0,0,0,0,0,0,5468,1316,2040,2058,2312,5129,640,8532,3000,2023,3603,8984,1758,9262,1144,1335,1920,4932,1669,2799,2324,9727,5243,8032,3790,8715,9792,2562,6344,9488,5268,1496,361,4404,8840,5100,7026},{0},{0,0,0,0,0,0,0,9812,8455,9182,5976,5452,2865,5157,303,9299,5100,6725,9873,7619,6011,760,1705,4473,731,3683,7440,8204,5212,1128,2952,4734,7043,8827,2596,5628,1008,6343,4437,7604,9224,7103,6491,7325,4151},{0},{0,0,0,0,0,0,0,9175,6162,6831,1702,1587,4168,6019,6057,9861,7480,6963,8490,5046,2939,8216,1587,8055,7352,6713,601,6272,2586,2059,3072,1632,1357,3580,8691,1876,3269,3828,3624,1678,5410,206,3120,7531,8900,8302},{0},{0,0,0,0,0,0,0,2466,1185,7336,195,9267,393,9776,7237,3506,4350,878,967,9514,4135,6706,142,4957,9470,4923,240,3331,4258,3230,6017,3798,5209,3890,2352,285,5410,3316,3457,1503,8312,11,8085,5445,8311,6300,6703},{0},{0,0,0,0,0,0,0,8470,9495,3178,4124,5099,4271,9494,9536,7212,9507,1109,1,6452,1252,6667,4237,3461,2554,4033,9790,9789,8717,4110,1089,9060,3953,2615,4196,2733,5959,877,9817,6370,8813,1713,9782,9619,6700,1521,9402,3505},{0},{0,0,0,0,0,0,0,8479,7752,5788,1780,962,3391,7098,9491,362,3081,8180,7629,6534,4576,9109,8100,7668,9777,5827,4943,3655,7754,6055,6945,7351,445,4254,2597,4635,2387,3743,3452,3396,7128,8578,1706,6461,3497,8122,9246,2507,7010},{0},{0,0,0,0,0,0,0,4880,6165,1247,9673,4894,5010,9408,4951,7054,8217,1906,1920,6497,8590,4004,9473,1220,8427,6573,6555,9604,9337,4054,6795,9172,465,1229,678,4142,7797,6955,4362,3653,3399,3115,7421,332,3741,1440,8694,4702,2123,4119},{0},{0,0,0,0,0,0,0,5979,9738,3116,3142,8098,1046,7551,3508,2365,8380,2536,2626,2628,8510,3391,4481,6236,9325,1023,7642,3012,9507,400,3056,9698,2117,7150,2539,162,7513,8359,5332,2646,7646,680,7566,2672,5363,9398,3832,1904,8636,8365,8238},{0},{0,0,0,0,0,0,0,8097,6455,7501,5474,5538,4077,8796,7146,620,5293,1447,9037,5555,408,9276,9083,5391,9034,5261,4604,4808,8751,5454,2583,3566,4809,529,2491,6085,2014,3380,6411,9089,6751,2918,4955,7190,3918,7049,2547,7106,8785,53,5166,6575},{0},{0,0,0,0,0,0,0,7879,7216,6198,6651,2922,8374,8414,1968,7122,3283,5471,1548,6299,101,7320,1660,1760,5950,1356,1205,3471,5002,673,5946,9878,9424,4584,9734,7451,4938,5338,2620,1621,7301,7949,8696,5720,1521,3985,2199,5905,1622,4523,3609,7006,3249},{0},{0,0,0,0,0,0,0,1476,9547,6376,7231,6537,6065,6491,9673,2927,4352,8052,5176,8192,796,6288,9115,1578,3204,430,669,5265,7727,1570,2934,3176,2370,4832,1671,4808,383,665,1380,1210,1841,7099,4796,7499,16,6855,7626,9213,9630,5541,4594,997,7360,6498},{0},{0,0,0,0,0,0,0,8563,5342,6980,6485,1953,6930,3070,2520,2448,6694,9359,5645,1713,8074,5822,5429,3878,5716,5741,6126,1913,1169,7578,4050,1820,1805,807,2035,4544,2404,5378,9224,5887,6254,7668,7972,7350,5417,640,1216,4715,8629,208,1500,638,2702,1416,3095},{0},{0,0,0,0,0,0,0,5272,2317,8002,9485,2657,1843,6730,7111,2924,1971,9256,3400,9745,613,7700,3497,7294,661,4905,855,7215,2931,9373,4169,7729,9159,1137,4955,6682,5224,2173,4631,7552,7911,2175,9037,7204,2322,4947,8028,3595,2326,5594,6375,2017,7935,3417,5927,6190},{0},{0,0,0,0,0,0,0,2383,8703,678,1288,956,6031,8932,2016,3978,3461,4002,6053,6159,3874,5959,8090,2215,6683,3021,8906,7927,1292,2624,9615,1540,6206,1298,5564,6580,3241,9457,7919,7146,5669,932,9824,1047,5550,2086,4785,9584,6858,9237,9170,5865,6032,3996,5955,8143,2479},{0},{0,0,0,0,0,0,0,5720,6238,9811,2013,8094,9436,5774,2630,3741,1002,2232,1245,315,3414,6694,625,3960,6915,9193,601,2055,6939,7238,6934,3372,7888,9616,4309,3426,4398,2278,1493,4762,7551,6320,9766,5903,2213,238,7979,7614,5989,3345,8961,776,4476,5294,6262,6441,8864,4958},{0},{0,0,0,0,0,0,0,974,8002,7509,8487,8623,3593,8642,1598,2345,4959,4322,9499,2033,6579,4873,1617,5424,3167,4026,8207,5159,7467,6889,4054,3916,9799,6110,470,2080,6726,9649,1706,4201,2430,5614,826,6075,2789,1768,4585,8218,4322,7891,1727,9876,3710,4316,629,9785,4423,2884,15},{0},{0,0,0,0,0,0,0,415,642,4995,5237,8668,3192,5831,9254,5989,4679,1382,9039,2922,3658,1450,5172,1442,944,1155,8113,1740,6074,8992,5745,4156,1997,8132,6771,8904,6027,3734,366,1740,6557,6211,2702,2750,2196,9795,8434,9796,1252,9236,1184,507,4007,8114,1388,5314,8112,6787,5783,30},{0},{0,0,0,0,0,0,0,6737,4351,5618,565,301,9871,9647,2992,7881,7864,2724,8246,1555,8063,2007,4396,6504,1533,9718,334,6108,7565,1984,458,3270,3392,61,2035,1245,5109,4305,4304,3573,5682,4404,2382,9623,8438,5876,2968,6360,8687,7893,877,4414,4092,6156,6185,9617,3781,6108,9471,1695,60},{0},{0,0,0,0,0,0,0,4976,468,6078,6685,7879,5462,5191,7329,6704,1031,5463,4740,4390,6506,9866,1715,8022,9101,9428,8894,8222,3841,6718,5329,1802,3512,3845,4023,7802,7464,47,9361,1502,5590,6789,751,3688,7749,6709,9369,5135,8299,1059,6974,2178,848,3842,1217,7513,187,1510,7698,865,3450,120},{0},{0,0,0,0,0,0,0,496,2248,9826,7422,8245,5915,5406,4992,4612,282,7458,1583,1009,3232,9527,8537,3326,5876,1294,4984,8881,840,2287,5482,635,8039,8990,3932,2385,8480,5554,1054,1920,6000,5992,9426,1597,190,5430,9567,2199,6526,2413,1333,8331,8568,8424,3555,1643,8319,6388,2127,8115,5240,7020,240},{0},{0,0,0,0,0,0,0,32,3977,1806,731,9699,9337,5885,8514,7385,4355,7347,946,8314,8783,9407,4566,576,1629,6575,9864,4202,2477,1398,16,2392,7443,9645,6936,7615,9403,9266,4414,6414,8612,9544,4989,5812,3623,858,956,9895,1324,3753,1204,2657,9883,6244,7919,1944,9470,2467,1361,6873,5238,7719,4379,480},{0},{0,0,0,0,0,0,0,1,9843,7949,5129,939,6057,7089,5434,9434,7878,9351,3235,8638,7661,5460,9092,7688,2973,2957,3970,6956,3067,9659,1881,1752,1986,2452,5315,1753,5465,272,2536,7612,7469,9084,3522,8472,6889,431,6172,8912,4099,8222,1247,7284,9752,8876,7923,771,9470,1263,4250,8533,1721,5653,255,9238,960},{0},{0,0,0,0,0,0,0,0,3741,5871,5672,8754,5602,9518,5985,5804,5568,1046,2104,3974,8798,3746,4938,3142,9373,54,2788,6950,60,6277,6828,5378,7520,1203,4420,8933,6507,6002,45,8903,7662,4678,9183,1832,9378,4670,1586,1448,7911,9877,3358,3531,2074,4715,125,4350,6711,437,2598,144,3090,1751,6519,327,9535,1920},{0},{0,0,0,0,0,0,0,0,7132,2809,991,3282,6906,6986,6736,6310,9328,981,8073,6477,3931,5527,4459,6201,8218,9742,3351,6108,8903,5927,9041,1058,3552,8968,840,8689,9599,3268,310,6315,2549,9090,7334,5857,4685,2042,6176,3573,802,5713,9485,9165,4898,5573,2850,6642,2883,8168,9294,6939,3486,6396,432,3761,1248,1188,3840},{0},{0,0,0,0,0,0,0,0,783,6572,6685,611,6984,1823,8374,4794,8030,2801,1584,7142,5279,8030,5763,5005,5769,8847,6611,4509,5318,8502,9586,970,6575,957,7177,2352,1344,7536,6379,9587,8033,707,1119,5482,1430,9135,9431,793,6585,8779,4449,5848,3459,9862,132,7675,3950,1134,637,8206,8939,23,5904,6026,423,5604,6216,7680},{0},{0,0,0,0,0,0,0,0,6072,5457,7934,5337,196,9837,5820,2772,4312,5496,6879,9198,5309,150,3382,7125,6601,3510,56,8401,7025,999,3789,1376,3445,452,3736,6230,1333,3159,942,1443,7073,5501,8573,4417,4358,6590,7460,8083,8145,3217,9797,4280,665,7641,1446,3048,5568,238,4478,4420,6292,9463,2972,5852,7890,1577,1462,310,5459},{0},{0,0,0,0,0,0,0,0,1778,7795,7457,8741,2882,591,5142,8820,2726,2275,3096,3218,7993,5110,4339,2751,7617,5667,4897,8760,4944,2530,5612,6307,3391,856,7390,4926,6738,8358,1483,231,6595,7418,6346,589,6490,5213,2895,9133,8228,3926,4975,6983,4481,1743,826,791,5699,9107,5843,833,3556,9234,3201,8154,4420,5234,8611,1013,6079,1017},{0},{0,0,0,0,0,0,0,0,5533,1605,5002,1972,8748,3339,2187,6803,1431,5921,9256,5758,3770,8905,2013,5214,4129,2460,61,4465,2873,8973,1331,3141,1224,9866,685,9793,2007,5129,3108,2487,8943,7061,7544,5218,4854,7352,8546,6141,702,4476,5743,5683,1367,4505,987,4903,6502,9840,6785,6845,219,7007,9691,2248,1593,273,2668,4202,3663,3274,2034},{0},{0,0,0,0,0,0,0,0,2991,3797,2656,7976,7853,6840,4385,4229,630,2986,6506,3373,2869,6455,8483,8636,8586,8796,5122,8352,7742,2844,5582,1335,3919,6093,1401,299,6925,4230,432,150,7670,5392,4715,988,1503,1936,4258,8811,3240,1718,628,3154,3138,3346,1224,4230,4512,9214,2321,4886,2434,7191,3605,8885,8709,8426,579,66,9262,1716,8582,4068},{0},{0,0,0,0,0,0,0,0,4415,1865,8223,796,8469,7963,9755,7665,6812,497,39,4996,2218,9678,7370,705,1336,796,4070,2855,7728,6670,822,4273,980,1817,390,6358,8061,4159,4488,1957,2186,3772,6567,1467,3876,3800,1588,5333,3535,1529,9900,3027,3542,4369,6087,8691,2585,8052,7957,8761,8238,6833,3930,8799,3178,519,5806,7611,3005,5746,4147,1430,8136},{0},{0,0,0,0,0,0,0,0,8829,6688,809,3327,8357,469,9553,6111,5049,9575,6321,3885,5729,1479,9306,8783,9376,5648,7452,9223,1552,8745,7235,7615,4947,3976,994,7038,5521,2227,9445,2254,6358,4888,1032,6778,7090,8312,1120,6842,7332,3233,2227,8239,6581,1054,7742,7909,1371,7582,4824,7143,2260,9080,5010,2490,9062,2730,2649,3222,3022,5303,8487,3891,1095,6371},{0},{0,0,0,0,0,0,0,0,3654,3499,5196,398,9091,442,92,5122,110,2059,3483,212,9701,2577,1579,8853,1482,5395,1008,1911,5457,2560,2619,136,3381,5685,1352,6636,9006,1104,5693,8849,9621,325,4921,191,6155,5000,1442,9240,4099,632,1639,247,1487,9622,2821,1426,1587,1241,6899,3272,7050,5330,1620,6524,2909,5759,4973,8927,7258,1628,1069,728,7112,8561,2841},{0},{0,0,0,0,0,0,0,0,7804,9133,4366,226,4918,1747,2591,7227,3794,79,5933,924,3366,8278,4383,7347,3574,4233,9403,7572,475,6493,3644,1786,6869,9546,6446,4047,7592,1615,1470,1790,610,5428,2075,2850,5818,971,7025,3951,2134,6912,7329,2229,7803,4717,3486,8088,4892,4080,1812,8561,9328,5568,2738,3958,1436,6479,1322,9311,8631,1356,3383,254,6133,9354,161,5682},{0},{0,0,0,0,0,0,0,0,4231,7156,5921,6722,501,7869,1887,6743,9738,5388,618,8688,448,583,6854,3837,6740,3761,5633,1592,4467,9508,7228,6298,1763,7281,2528,6934,9565,9470,4633,9074,8049,8938,5535,9160,119,8640,3909,3934,9471,3138,7641,7436,5358,1800,2091,5116,6189,9729,9791,3262,9177,3912,215,7861,4770,3609,1474,6735,8182,8823,2924,424,7118,3319,1908,6004,1463},{0},{0,0,0,0,0,0,0,0,3419,6489,6770,5132,1317,9439,1873,3955,6438,4803,1540,2442,7447,4795,1184,6737,4456,7651,2232,923,1689,6498,5881,3666,3401,5485,9680,7522,6859,5463,8979,7064,222,3752,5011,3973,5608,4279,8082,1406,6978,8121,8061,3570,6279,2616,3602,4,1545,2428,9803,492,1424,9602,2298,8750,6739,1836,4394,4253,2610,7983,3040,491,9088,6579,4488,5601,3570,2926},{0},{0,0,0,0,0,0,0,0,4068,9413,9809,3865,618,9755,105,5719,8107,4499,2197,6129,4189,1885,1375,6558,5066,4985,4837,8269,2107,9224,1742,1441,3775,1722,2019,8354,4583,3308,2299,7003,8195,961,1034,6862,3581,1171,9613,2110,1595,7467,6824,966,9292,4304,3294,6025,7543,5169,4158,8505,7501,3133,570,2336,5381,5465,3776,208,2642,8074,5708,9187,6214,563,4378,2242,6334,165,5852},{0},{0,0,0,0,0,0,0,0,6718,7800,961,8458,8924,1603,5496,5343,8896,8856,7564,9787,7759,8035,3125,1442,5213,8136,6773,668,1130,5859,1405,4978,3525,2390,8861,4166,7978,9241,1094,1035,8701,3845,4613,5382,6628,5610,6797,8910,9071,9702,3123,6081,4668,5472,3479,9544,5912,7526,4682,8490,348,6280,2358,2085,1890,4337,6952,1945,8588,6443,2318,2043,1056,4968,4882,7512,7413,5858,6182,1803},{0},{0,0,0,0,0,0,0,0,2144,9100,1718,6743,4401,9726,2023,5031,2911,6202,849,6684,2113,6845,1718,1661,3346,3967,1750,7163,3761,9209,4860,4198,328,9215,5839,459,5437,8824,9025,5743,5539,778,8159,938,3226,4726,2742,2846,8207,576,4472,9740,6988,9454,236,8287,2658,6744,9642,8982,9137,4116,6840,8362,7292,6244,4928,2409,6713,5646,6643,7316,5360,2548,872,1674,3622,6899,3948,4266,3606},{0},{0,0,0,0,0,0,0,0,5251,6328,4900,5354,1459,4050,8026,1705,8833,3529,8137,999,1827,6144,719,4990,2727,4027,3499,7943,1491,2683,4967,2331,8804,4556,4222,6744,5465,5925,4289,661,992,802,1270,9329,5824,7896,2888,6674,2380,3277,3429,4554,1121,2886,7523,6933,3021,2597,4463,1752,4540,2855,8766,1068,4479,5213,1060,6847,3883,8031,9012,5341,3912,8263,4987,9683,5977,5258,5929,4064,2237,7212},{0},{0,0,0,0,0,0,0,0,2572,6926,2413,7755,1606,371,4085,3831,1912,4628,4050,8466,596,6162,6920,3102,6611,6403,3065,444,7879,6910,9564,1164,2890,8837,1626,1125,1752,5374,5068,866,5096,3016,3069,241,5303,2993,2492,3103,4555,2216,4813,6419,9023,9731,5077,8511,6732,5534,8885,7382,6813,6618,4977,8435,1608,8845,9675,8399,2657,7629,9627,6932,7519,3575,1403,9358,8669,8309,2611,3992,4070,1785,4523},{0},{0,0,0,0,0,0,0,0,1543,8803,1203,6449,3610,3007,56,9429,5352,9688,5415,9221,2385,3656,6572,9023,7913,5327,1665,8476,9746,9262,2199,4901,6664,3125,1093,6989,7441,9640,8456,426,4723,5281,5766,2170,1965,2966,4522,6973,3978,5445,2571,6179,3007,140,3792,8264,6121,7901,8676,5117,4397,8969,587,4405,8704,3470,508,5240,1483,8974,7320,3926,8948,69,9666,5032,4452,1175,7278,1122,1701,7236,8093,9046},{0},{0,0,0,0,0,0,0,0,282,1900,8003,4344,4739,5804,8218,982,2842,1796,1759,7584,9371,159,1716,6249,418,2073,4938,3369,5345,5467,4876,7697,3009,4846,1983,6053,2543,6009,9783,6649,908,8359,5132,5776,7435,6190,4520,7077,5967,3844,1677,1376,2369,9725,7422,4383,3499,3645,2608,3315,1629,2592,7398,8623,4997,2275,9338,4796,7560,4061,2190,8088,6698,7593,9097,8017,7073,3919,9832,5063,816,7045,7286,5430,8191},{0},{0,0,0,0,0,0,0,0,789,8882,9133,8973,6382,7873,3435,9603,5715,3458,6625,2196,1224,7221,8743,3901,6660,3575,8340,9849,4614,4196,8592,6324,5806,5936,4802,6666,555,195,1417,3353,914,5475,2759,5624,9719,6235,2532,106,1934,5263,6460,7445,8182,959,2343,5390,894,4058,4021,3363,6195,9031,1645,2823,5757,6725,3363,7527,7405,5527,616,4790,820,8892,893,1117,5450,8535,8580,1484,3244,6038,8812,9246,9150,6481},{0},{0,0,0,0,0,0,0,0,896,3127,5223,6821,5190,8829,138,2757,7342,7252,8727,525,2322,3006,7486,9500,5028,3847,4314,8595,3617,2515,1815,4968,9352,2014,469,8343,4186,2027,9493,2137,397,707,824,5443,4527,2940,6608,8078,6028,1731,5627,103,4069,8061,3196,2556,5641,9524,5571,4811,3439,3327,1676,6832,7084,2876,2526,7855,2258,4111,8305,4403,6342,3425,3570,1275,8879,3389,4780,5123,5629,5322,7569,887,6130,4979,3061},{0},{0,0,0,0,0,0,0,0,9659,7992,8225,7364,1429,1120,5322,137,1274,3782,4211,2538,8696,3693,812,2184,5281,1331,7928,5931,2966,6715,3491,8786,3101,6136,470,1543,4228,6990,224,5912,7211,9330,4718,3232,5563,9005,9803,7846,9062,5614,6918,6912,1217,2022,7570,2698,2513,4703,6644,4895,7308,5273,6691,74,3345,9065,9596,7688,5272,8827,8622,800,7984,8257,1047,8196,2112,9025,2336,1017,2716,4742,6770,2153,3733,3918,3118,6122},{0},{0,0,0,0,0,0,0,0,7671,7921,2731,1389,8538,2323,5695,9761,8535,7141,7159,3108,3029,8388,7063,9710,4991,7328,7376,2856,1291,7982,30,7238,9046,4985,584,2588,468,5479,1063,9662,8500,3278,716,1166,717,3492,755,5094,679,9578,2710,2766,7563,7280,9692,1395,2213,3535,6919,4927,3080,6382,3334,5378,3794,7292,1204,5752,2823,4597,7908,310,5736,8272,4410,5495,6802,622,2697,8898,8452,2935,4907,747,4117,9523,4114,2457,2343},{0},{0,0,0,0,0,0,0,0,8084,9526,4120,887,7949,8774,1485,3322,5316,5247,1951,751,8184,9619,2058,3878,4271,3907,5451,8919,8770,3306,1991,9535,345,8130,5318,8050,426,9347,7707,4268,2717,1008,6604,4229,2566,3326,5523,6979,1037,1500,284,1860,2781,4399,8249,7180,5295,5010,1168,7998,8122,6437,554,5283,7131,2651,27,589,6263,9320,7348,6209,588,9837,6631,9877,2114,2050,6595,801,715,5442,6779,1818,3810,4632,2697,6906,7257,4686},{0},{0,0,0,0,0,0,0,0,9215,3999,6272,4098,432,6289,3965,9692,1589,8855,9843,3548,8128,939,7478,787,7589,3746,5318,5085,1521,1669,4456,6812,8470,7486,7587,8067,8404,7284,7941,8797,8556,7048,5441,3628,2468,942,1758,4799,7308,6502,8856,1811,2486,7433,3742,9690,6186,3454,5530,921,7071,1952,1119,6193,269,9109,9496,8388,6767,1277,7205,6833,4076,3118,3884,8024,9326,8847,9238,375,4073,4942,7024,2181,6949,6626,7913,7199,3610,9299,9372},{0},{0,0,0,0,0,0,0,0,4046,4762,8948,4754,9251,3896,7582,5294,959,6722,4885,9271,7377,5865,2484,2409,2797,1624,3109,4264,4041,2288,3439,6344,2039,7606,3253,5262,2652,3673,9466,9186,7188,1997,311,4586,9549,2513,1241,5141,3250,7106,4782,3358,995,4647,9251,8572,2176,5196,5450,6985,1751,9719,1055,4203,3930,2890,4704,2675,6970,190,3015,922,2727,7825,9247,6022,6409,524,3348,1011,4674,7848,9305,8743,9192,9660,1425,6049,248,1403,8168,8843},{0},{0,0,0,0,0,0,0,0,2461,6091,761,2346,6787,2405,7756,7669,3363,399,2729,3472,5978,7723,7156,807,7783,8332,7739,796,9726,4971,9015,2365,1963,179,2964,7971,9179,247,5213,2398,6345,8863,5372,8922,6034,4102,8789,6212,6402,2141,1183,3645,7964,2496,1012,3238,9076,3666,8529,6175,451,2665,8227,7281,441,3872,1925,2191,5368,36,1895,3030,3901,4114,7221,2944,8504,2821,9709,7421,1450,8757,8719,5848,4179,3089,9014,9091,2581,768,544,5377,7785},{0},{0,0,0,0,0,0,0,0,6180,2435,4264,2391,3045,2632,69,5445,4248,7725,2314,6231,8719,5689,2440,874,8056,1518,445,794,1571,1299,5341,1062,1285,8972,4985,4374,564,9394,7085,5377,6862,884,4444,5374,4771,1970,1523,4355,7047,9048,2389,6115,7498,416,8580,7176,403,7656,8711,2758,1103,7209,2713,4667,6129,2936,4108,2629,7459,6154,737,1330,4981,7743,9783,3110,7039,2302,291,9100,9067,8252,803,6182,7191,891,4868,7281,8209,9757,9190,5407,8638,5669},{0},{0,0,0,0,0,0,0,0,7658,1319,343,76,3743,8042,1043,4255,6705,7412,9221,4000,4423,3029,6899,8522,8536,8080,4554,5059,9866,7293,9259,5745,2826,9496,8145,338,6536,5374,2738,4719,4988,140,8956,1812,1879,1860,7156,4237,3648,5446,2506,8424,7292,25,9662,7759,1000,2999,4386,7851,660,189,5867,2700,4449,131,5449,9055,1678,2741,5349,5884,8820,2419,4716,8163,6897,1354,4255,9203,7341,7985,9405,5604,7996,1165,3269,2974,6278,3234,3335,7246,7435,3143,1437},{0},{0,0,0,0,0,0,0,0,9647,5968,7768,7629,9631,6957,302,4283,6355,4690,6764,3376,1898,6677,7580,7519,5027,4482,9598,4012,7132,1622,8408,5550,6844,7539,4940,996,8036,1292,3414,1811,7391,8352,8533,4824,4455,9683,5311,476,7798,5344,5997,111,99,6106,2846,5592,2239,3145,2290,2485,7228,2854,3068,5380,7094,3388,8782,7139,2383,8150,9588,8212,4929,6124,6671,3666,8270,3690,9495,3673,227,3246,6831,1524,5032,7450,2718,776,8278,4660,4010,4985,6531,3880,7723,2874},{0},{0,0,0,0,0,0,0,0,6565,478,61,8228,9574,8931,5997,3572,5522,4894,8493,150,4984,7789,4587,2912,8665,4072,4305,3814,8746,6105,3084,2727,9189,9138,3851,5846,3248,3967,2967,4241,8562,1517,2765,6322,7022,5358,1801,6561,8089,8696,8876,6277,8368,6391,2485,348,9114,5761,2566,2453,5647,1354,3499,5483,8595,5571,2568,1485,7446,6138,2744,2591,6434,9723,9631,4667,2452,141,6806,8753,9229,3766,6624,264,2907,9619,9011,8024,5176,7248,1186,3534,929,1720,7019,8419,5748},{0},{0,0,0,0,0,0,0,0,2115,2790,3021,1224,7544,5212,6542,9253,9602,1500,3978,3020,6570,4645,7912,7359,2934,5026,8042,839,1744,6733,8118,1737,4510,8355,2013,8675,2497,1944,6965,364,4031,4963,1120,1078,4070,3481,1266,9706,6639,7079,4433,3785,1769,8133,2596,9331,8722,6151,5549,7856,5448,1084,9283,3249,2403,2676,675,8769,7266,8592,7202,9654,8332,6300,6666,4143,9366,64,221,9779,2235,9062,1010,6758,6822,2687,3647,8422,602,8712,6621,4052,3360,2485,1254,5529,2784,1595},{0},{0,0,0,0,0,0,0,0,5217,7717,6909,8537,6895,2069,5308,5710,5674,376,4390,7446,7859,3726,662,9052,1721,1530,4883,2458,3864,49,8312,3458,475,4953,8312,315,3419,3839,8489,9477,4293,1770,1617,161,535,8103,8273,3946,3133,9525,8417,14,2098,8858,739,8550,6716,5811,6437,8072,3849,5977,63,5691,3953,4811,10,9118,5635,5897,2532,399,1693,4374,5123,4848,2834,8898,134,12,9041,8669,8398,350,6561,5892,4298,7749,910,7736,3163,1181,5581,4855,6171,2402,9689,7163,3190},{0},{0,0,0,0,0,0,0,0,6571,8931,1182,5086,526,5861,164,6180,73,5973,5271,2000,6913,8108,1837,8489,6194,4068,3668,3879,8866,5895,1649,875,1032,1638,9847,1004,1861,2784,7984,9680,9897,6741,4785,7873,4358,1065,351,8538,3835,7194,3647,3502,3039,6022,3652,1575,194,5792,4522,5602,5258,7931,466,6727,3301,3640,1369,3296,6552,6335,31,6177,2226,2856,8841,186,9583,9675,8014,238,9841,9733,3104,1235,8482,5663,4884,6002,4713,8133,2725,4209,5667,6610,797,1976,8971,8334,7615,6380},{0},{0,0,0,0,0,0,0,0,7452,3593,1759,1854,8739,5110,1302,8540,9054,7183,9817,802,5071,9605,1143,5689,375,4413,3929,6357,9894,6017,5056,5508,9655,6802,7138,4757,8440,6633,2886,406,4054,8766,2660,6071,1899,6513,4479,4345,5784,9238,3080,2376,6445,8783,5410,6534,8361,521,266,7067,5947,9288,7445,2968,4072,1038,8674,2788,100,6818,7230,8922,7819,831,2659,3795,1929,3114,7500,6003,9653,8453,7245,5261,8007,1173,8022,3293,6852,9498,144,7360,3820,705,8445,351,7415,6926,7671,1808,2859},{0},{0,0,0,0,0,0,0,0,1169,9665,1664,6936,5891,1384,2988,6163,8451,3961,3018,7686,235,8233,4352,6221,4718,1700,2530,1093,6910,9439,3068,6711,4874,5350,4468,3733,8082,7923,912,9526,9129,2547,7797,5353,9365,3051,6307,9293,9434,8553,4494,7276,3709,7815,9652,3974,6110,5886,8031,4077,7090,5714,7442,7435,4892,7813,9239,4425,3857,6463,2625,7681,6244,6503,1532,9641,8646,2112,6409,362,427,6545,4181,4253,9229,7315,2404,116,7748,2324,6943,5597,717,1697,7916,3111,2145,2886,5815,3728,6475,5718},{0},{0,0,0,0,0,0,0,0,6750,7356,4981,6064,7449,1542,9517,5911,5096,6243,437,6958,1435,1654,4953,5738,6941,8419,9296,7890,6530,2461,9352,1266,8509,3006,8169,776,245,5872,4917,9432,2589,9298,7755,9791,6290,366,6694,796,7240,6645,1008,1029,4275,4966,4997,8437,7969,42,5347,6952,1582,6658,4758,6462,2958,5879,2091,2633,7914,8029,630,5111,9623,8324,1573,6837,7546,6231,7581,6714,7594,3839,5970,5562,4301,1491,5670,1882,4049,7634,4078,8761,9552,6617,465,4043,6125,9707,933,223,6889,8767,1535},{0},{0,0,0,0,0,0,0,0,7223,7793,3253,7529,6790,5622,5212,5688,6390,4621,8568,1913,7023,5282,8518,2800,6415,8458,3965,5854,2320,1448,65,6693,4392,158,1604,9269,235,6888,8913,8147,5277,6247,9718,2853,5795,2071,3907,7133,7524,6049,800,6224,5979,5384,3569,7076,4065,4085,5997,1925,2264,6423,6518,6206,3281,516,9002,4389,414,197,8342,4370,6220,1897,4906,6219,6146,4746,9011,2999,5377,3700,6727,7999,2019,1592,5782,5600,8322,9116,2036,3239,67,4694,883,5001,8142,112,5427,1729,9627,8461,9168,3070},{0}};\n\ninline int read()//\u5feb\u8bfb \n{\n    int x = 0 ,y = 1;\n    char c = getchar();\n    while(c > '9' || c < '0')\n    {\n        if(c == '-')y = -1;\n        c = getchar();\n    }\n    while(c <= '9' && c >= '0')\n    {\n        x = x * 10 + c - '0';\n        c = getchar();\n    }\n    return x * y;\n}\n\nint main()\n{\n\tn = read(); k = read();//\u8f93\u5165\n\tif(n % 2 == 0)//\u7279\u5224\n\t{\n\t\tcout << 0;\n\t\treturn 0;\n\t}\n\tcout << p[n][k];//\u8f93\u51fa\n\treturn 0;//\u597d\u4e60\u60ef\n}\n\n```\n",
        "postTime": 1572523325,
        "uid": 113900,
        "name": "jbc392",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1472 \u3010\u5976\u725b\u5bb6\u8c31 Cow Pedigrees\u3011"
    },
    {
        "content": "\n<http://blog.csdn.net/QWsin/article/details/52905140>\n\ndp\uff08i\uff0cj\uff09\u8868\u793ai\u4e2a\u8282\u70b9\u6df1\u5ea6\u4e3aj\u7684\u6811\u6709\u591a\u5c11\u4e2a\u3002\u90a3\u4e48\u5982\u679c\u76f4\u63a5\u8f6c\u79fb\u7684\u8bdd\uff0c\u9700\u8981\u5148\u679a\u4e3e\u5de6\u5b50\u6811\u8282\u70b9\u4e2a\u6570k\uff0c\u548c\u4e00\u4e2adep\uff08\u56e0\u4e3a\u81f3\u5c11\u6709\u4e00\u4e2a\u5b50\u6811\u7684\u6df1\u5ea6\u4e3aj-1\uff09\u7136\u540e\u5982\u4e0b\u8f6c\u79fb\u3002\n\n\ndp\uff08i\uff0cj\uff09=sigma\uff08dp\uff08k\uff0cj-1\uff09\\* dp\uff08i-k-1\uff0cdep\uff09\uff09+s igma\uff08dp\uff08k\uff0cdep\uff09\\* dp\uff08i-k-1\uff0cj-1\uff09\uff09\n\n\n\u6ce8\u610f\uff1a\u6839\u636edep\u7684\u679a\u4e3e\u65b9\u5f0f\u4f1a\u6709\u7b97\u91cd\u7684\u6216\u8005\u7b97\u6f0f\u7684\u8981\u5904\u7406\u4e00\u4e0b\uff0c\u4e0a\u9762\u53ea\u662f\u4e2a\u5927\u6982\u601d\u8def\n\n\u590d\u6742\u5ea6\u660e\u663e\u8fc7\u9ad8\u3002\u5f15\u5165\u65b0\u6570\u7ec4 f\uff08i\uff0cj\uff09\u8868\u793ai\u4e2a\u8282\u70b9\u7ec4\u6210\u7684\u6df1\u5ea6\u4e0d\u5927\u4e8ej\u7684\u4e2a\u6570\uff0c\u90a3\u4e48\u65b9\u7a0b\u5927\u5e45\u7b80\u5316\uff0c\u5206\u4e09\u79cd\u60c5\u51b5\uff0c\u56e0\u4e3a\u81f3\u5c11\u6709\u4e00\u4e2a\u5b50\u6811\u7684\u6df1\u5ea6\u4e3aj-1\uff0c\u6240\u4ee5\u8981\u4e48\u5de6\u5b50\u6811\u6df1\u5ea6\u4e3aj-1\uff0c\u8981\u4e48\u53f3\u5b50\u6811\u662f\uff0c\u8981\u4e48\u90fd\u662f\u3002\n\n\ndp\uff08i\uff0cj\uff09=dp\uff08k\uff0cj-1\uff09\\* f\uff08i-k-1\uff0cj-2\uff09+f\uff08k\uff0cj-2\uff09\\* dp\uff08i-k-1\uff0cj-1\uff09 + dp\uff08k\uff0cj-1\uff09 \\* dp\uff08i-k-1\uff0cj-1\uff09\n\n\u7136\u540e\u53ef\u4ee5\u770b\u89c1\u53ea\u9700\u8981\u679a\u4e3ek\uff0c\u590d\u6742\u5ea6n\\* n \\*k\n\n\n```cpp\n//QWsin\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nconst int MOD=9901;\nconst int maxn=200+10;\nconst int maxk=100+10;\n\nll dp[maxn][maxk],f[maxn][maxk];\n\nint main()\n{\n    int n,K;cin>>n>>K;\n//  \u5b9e\u9645\u4e0a\u6570\u636e\u6ca1\u6709n\u4e3a\u5947\u6570\u7684 \n//    if(n%2==0){printf(\"0\\n\");return 0;} \n    dp[1][1]=1;f[0][0]=1;\n    for(int i=1;i<=K;i++) f[1][i]=f[0][i]=1;\n    for(int i=3;i<=n;i+=2)//\u5171n\u4e2a\u8282\u70b9 \n    {\n        int j=1;while((1<<j)-1 < i)j++;\n        for(;j<=K;j++) //\u6df1\u5ea6 \n        {\n            for(int k=1;k<=i-1;k+=2)//\u679a\u4e3e\u5de6\u5b50\u6811\u8282\u70b9\u4e2a\u6570 \n            {\n                dp[i][j]+=dp[k][j-1]*f[i-k-1][j-2];\n                dp[i][j]+=f[k][j-2]*dp[i-k-1][j-1];\n                dp[i][j]+=dp[k][j-1]*dp[i-k-1][j-1];\n            }\n            dp[i][j]%=MOD;    \n        }\n        for(int j=1;j<=K;j++) f[i][j]=(f[i][j-1]+dp[i][j])%MOD;\n    }\n    printf(\"%lld\\n\",dp[n][K]);\n    return 0;\n}\n\n```",
        "postTime": 1477232263,
        "uid": 11280,
        "name": "QWsin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1472 \u3010\u5976\u725b\u5bb6\u8c31 Cow Pedigrees\u3011"
    }
]