[
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u8fb9\u5e26\u6743\uff0c\u6bcf\u4e2a\u70b9\u6709\u9ed1\u767d\u4e24\u79cd\u989c\u8272\uff0c\u4f60\u9700\u8981\u652f\u6301\u7ffb\u8f6c\u67d0\u4e2a\u70b9\u7684\u989c\u8272\uff0c\u6216\u8005\u67e5\u8be2\u6240\u6709\u9ed1\u70b9\u5230\u67d0\u4e00\u6761\u94fe\u7684\u8ddd\u79bb\u4e4b\u548c\u3002\n\n\n---\n\n\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\u5728 LCA \u7684\u5b50\u6811\u5185\uff0c\u5728 LCA \u7684\u5b50\u6811\u5916\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u89c4\u5b9a\uff1a\n\n- $d_i$ \u4e3a\u7ed3\u70b9 $i$ \u5230\u6839\u7ed3\u70b9\u7684\u8ddd\u79bb\uff08\u4e5f\u5c31\u662f\u6df1\u5ea6\uff09\n- $s_i$ \u4e3a\u7ed3\u70b9 $i$ \u6240\u5728\u5b50\u6811\u7684\u9ed1\u70b9\u4e2a\u6570\n- $sd_i$ \u4e3a\u7ed3\u70b9 $i$ \u6240\u5728\u5b50\u6811\u4e2d\u9ed1\u70b9\u7684\u6df1\u5ea6\u4e4b\u548c\n- $sum$ \u4e3a\u6574\u68f5\u6811\u4e2d\u7684\u9ed1\u70b9\u4e2a\u6570\n\n\u5148\u770b\u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a\uff08 \u7ed9\u5b9a\u7684\u94fe\u4e3a $a\\to d\\to f$ \uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/d3fuc2dg.png)\n\n\u6211\u4eec\u5206\u522b\u8ba1\u7b97\u6bcf\u4e2a\u94fe\u4e0a\u7ed3\u70b9\u4f5c\u4e3a LCA \u65f6\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff1a\n\n| $+$ | $-$ |\n| :--: | :--: |\n| $sd_a-d_as_a$ |  |\n| $sd_b-d_bs_b$ | $sd_a-d_bs_a$ |\n| $sd_c-d_cs_c$ | $sd_b-d_cs_b$ |\n| $sd_d-d_ds_d$ | $sd_c-d_ds_c,\\ sd_e-d_ds_e$ |\n| $sd_e-d_es_e$ | $sd_f-d_es_f$ |\n| $sd_f-d_fs_f$ |  |\n\n\u5176\u4e2d\u52a0\u53f7\u8868\u793a\u6b63\u8d21\u732e\uff0c\u51cf\u53f7\u8868\u793a\u8d1f\u8d21\u732e\u3002\u6574\u7406\u53ef\u5f97\u7b54\u6848\u4e3a\n\n$$\n(d_b-d_a)s_a+(d_c-d_b)s_b+(d_d-d_c)s_c+(d_d-d_e)s_e+(d_e-d_f)s_f+sd_d-d_ds_d\n$$\n\n\u518d\u770b\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ot13cbnr.png)\n\n\u8fd8\u662f\u4e00\u6837\u7684\uff0c\u5217\u8868\u8ba1\u7b97\u8d21\u732e\uff1a\uff08 \u6839\u636e $dis(x,y)=dep_x+dep_y-2dep_{lca(x,y)}$ \uff09\n\n| $+$ | $-$ |\n| :--: | :--: |\n| $sd_x-2d_xs_x$ | $sd_d-2d_xs_d$ |\n| $sd_y-2d_ys_y$ | $sd_x-2d_ys_x$ |\n| $sd_z-2d_zs_z$ | $sd_y-2d_zs_y$ |\n| $d_d(sum-s_d)$ |  |\n\n\u6574\u7406\u53ef\u5f97\uff1a\n\n$$\nsd_z-sd_d+d_d(sum-s_d)-2(d_xs_x+d_ys_y+d_zs_z)+2(d_xs_d+d_ys_x+d_zs_y)\n$$\n\n---\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u7b54\u6848\u5f53\u4e2d\u6709\u7740\u975e\u5e38\u591a\u5f62\u5982 $s_i,\\ sd_i,\\ d_is_i,\\ d_{fa_i}s_i$ \u7684\u5f0f\u5b50\u3002\u6211\u4eec\u4fbf\u53ef\u4ee5\u5f00\u56db\u68f5\u7ebf\u6bb5\u6811\uff0c\u6765\u5206\u522b\u7ef4\u62a4\u8fd9\u56db\u4e2a\u5f0f\u5b50\u7684\u548c\u3002\n\n\u6bcf\u6b21\u6539\u53d8\u7ed3\u70b9\u989c\u8272\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u4fee\u6539\u4ece\u5b83\u5230\u6839\u7ed3\u70b9\u7684\u94fe\u4e0a\u8fd9\u56db\u4e2a\u5f0f\u5b50\u7684\u503c\u3002\u4fee\u6539\u548c\u67e5\u8be2\u90fd\u53ef\u4ee5\u7528\u6811\u94fe\u5256\u5206\u89e3\u51b3\u3002\n\n\u6ce8\u610f $d_is_i$ \u4e0e $d_{fa_i}s_i$ \u7684\u4fee\u6539\u4e0e\u666e\u901a\u7ebf\u6bb5\u6811\u7a0d\u6709\u4e0d\u540c\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define For(i,a,b) for(int i=(a);i<=(b);++i)\n#define Rof(i,a,b) for(int i=(a);i>=(b);--i)\nusing namespace std;\ntypedef pair<int,int> Pair;\nconst int Maxn=2e5;\n\ninline int read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch<'0' || ch>'9')\n    {\n        if(ch=='-') f=-1;\n        ch=getchar();\n    }\n    while(ch>='0' && ch<='9')\n    {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\n\nint n,m,kazuha,all,typ[Maxn+5]; ll dep[Maxn+5],sd[Maxn+5];\nint siz[Maxn+5],fa[Maxn+5],son[Maxn+5];\nint dfn[Maxn+5],pre[Maxn+5],top[Maxn+5],cur;\nvector<Pair> v[Maxn+5];\n#define ls(x) (x<<1)\n#define rs(x) (x<<1|1)\n\ninline void dfs1(int x,int f)\n{\n    fa[x]=f,siz[x]=1,sd[x]=dep[x];\n    for(auto i:v[x])\n    {\n        int y=i.first,z=i.second;\n        if(y==f) continue;\n        dep[y]=dep[x]+z;\n        dfs1(y,x),siz[x]+=siz[y],sd[x]+=sd[y];\n        son[x]=(siz[y]>siz[son[x]]?y:son[x]);\n    }\n}\ninline void dfs2(int x,int t)\n{\n    top[x]=t,dfn[x]=++cur,pre[cur]=x;\n    if(son[x]) dfs2(son[x],t);\n    for(auto i:v[x])\n    {\n        int y=i.first;\n        if(y==fa[x] || y==son[x]) continue;\n        dfs2(y,y);\n    }\n}\n\nstruct SegTree\n{\n    ll t[Maxn*4+5],tag[Maxn*4+5],val[Maxn+5],sum[Maxn+5]; int opt;\n    inline void push_up(int p) {t[p]=t[ls(p)]+t[rs(p)];}\n    inline void f(int p,ll k,int len) {t[p]+=len*k,tag[p]+=k;}\n    inline void f2(int p,ll k,int l,int r) {t[p]+=(sum[r]-sum[l-1])*k,tag[p]+=k;}\n    inline void push_down(int l,int r,int p)\n    {\n        int mid=(l+r)>>1;\n        f(ls(p),tag[p],mid-l+1),f(rs(p),tag[p],r-mid),tag[p]=0;\n    }\n    inline void push_down2(int l,int r,int p)\n    {\n        int mid=(l+r)>>1;\n        f2(ls(p),tag[p],l,mid),f2(rs(p),tag[p],mid+1,r),tag[p]=0;\n    }\n    inline void Build(int l,int r,int p)\n    {\n        if(l==r) {t[p]=val[pre[l]]; return;}\n        int mid=(l+r)>>1;\n        Build(l,mid,ls(p)),Build(mid+1,r,rs(p)),push_up(p);\n    }\n    inline void Update(int nl,int nr,int l,int r,int p,ll k)\n    {\n        if(l<=nl && nr<=r) {t[p]+=(nr-nl+1)*k,tag[p]+=k; return;}\n        int mid=(nl+nr)>>1; push_down(nl,nr,p);\n        if(l<=mid) Update(nl,mid,l,r,ls(p),k);\n        if(r>mid) Update(mid+1,nr,l,r,rs(p),k);\n        push_up(p);\n    }\n    inline void Update2(int nl,int nr,int l,int r,int p,ll k)\n    {\n        if(l<=nl && nr<=r) {t[p]+=(sum[nr]-sum[nl-1])*k,tag[p]+=k; return;}\n        int mid=(nl+nr)>>1; push_down2(nl,nr,p);\n        if(l<=mid) Update2(nl,mid,l,r,ls(p),k);\n        if(r>mid) Update2(mid+1,nr,l,r,rs(p),k);\n        push_up(p);\n    }\n    inline ll Count(int nl,int nr,int l,int r,int p)\n    {\n        if(l<=nl && nr<=r) return t[p];\n        int mid=(nl+nr)>>1; ll res=0;\n        if(!opt) push_down(nl,nr,p);\n        else push_down2(nl,nr,p);\n        if(l<=mid) res+=Count(nl,mid,l,r,ls(p));\n        if(r>mid) res+=Count(mid+1,nr,l,r,rs(p));\n        push_up(p); return res;\n    }\n    inline void Modify(int x,int y,ll z)\n    {\n        while(top[x]!=top[y])\n        {\n            if(dep[top[x]]<dep[top[y]]) swap(x,y);\n            Update(1,n,dfn[top[x]],dfn[x],1,z),x=fa[top[x]];\n        }\n        if(dep[x]>dep[y]) swap(x,y);\n        Update(1,n,dfn[x],dfn[y],1,z);\n    }\n    inline void Modify2(int x,int y,ll z)\n    {\n        while(top[x]!=top[y])\n        {\n            if(dep[top[x]]<dep[top[y]]) swap(x,y);\n            Update2(1,n,dfn[top[x]],dfn[x],1,z),x=fa[top[x]];\n        }\n        if(dep[x]>dep[y]) swap(x,y);\n        Update2(1,n,dfn[x],dfn[y],1,z);\n    }\n    inline ll Find(int x,int y)\n    {\n        ll res=0;\n        while(top[x]!=top[y])\n        {\n            if(dep[top[x]]<dep[top[y]]) swap(x,y);\n            res+=Count(1,n,dfn[top[x]],dfn[x],1),x=fa[top[x]];\n        }\n        if(dep[x]>dep[y]) swap(x,y);\n        res+=Count(1,n,dfn[x],dfn[y],1);\n        return res;\n    }\n} T[4];\n\ninline int LCA(int x,int y)\n{\n    while(top[x]!=top[y])\n    {\n        if(dep[top[x]]<dep[top[y]]) swap(x,y);\n        x=fa[top[x]];\n    }\n    return (dep[x]<dep[y]?x:y);\n}\ninline void Change(int x)\n{\n    if(!typ[x])\n    {\n        T[0].Modify(x,1,1);\n        T[1].Modify(x,1,dep[x]);\n        T[2].Modify2(x,1,1);\n        T[3].Modify2(x,1,1);\n        typ[x]=1,all++;\n    }\n    else\n    {\n        T[0].Modify(x,1,-1);\n        T[1].Modify(x,1,-dep[x]);\n        T[2].Modify2(x,1,-1);\n        T[3].Modify2(x,1,-1);\n        typ[x]=0,all--;\n    }\n}\ninline ll Query(int x,int y)\n{\n    int d=LCA(x,y);\n    ll sdd=T[1].Count(1,n,dfn[d],dfn[d],1),szd=T[0].Count(1,n,dfn[d],dfn[d],1);\n    ll s1=sdd-dep[d]*szd+T[3].Find(x,y)-T[2].Find(x,y)-szd*(dep[fa[d]]-dep[d]),s2=0;\n    if(fa[d])\n    {\n        ll sd1=T[1].Count(1,n,1,1,1);\n        s2=dep[d]*(all-szd)+sd1-sdd;\n        s2=s2+2ll*T[3].Find(1,d)-2ll*T[2].Find(1,fa[d]);\n    }\n    return s1+s2;\n}\n\nint main()\n{\n    n=read(),m=read(),kazuha=read(),all=n;\n    T[0].opt=0,T[1].opt=0,T[2].opt=1,T[3].opt=1;\n    For(i,1,n-1)\n    {\n        int a=read(),b=read(),c=read();\n        v[a].push_back(make_pair(b,c)),v[b].push_back(make_pair(a,c));\n    }\n    For(i,1,n) typ[i]=read();\n    dfs1(1,0),dfs2(1,1);\n    For(i,1,n) T[2].sum[i]=T[2].sum[i-1]+dep[pre[i]];\n    For(i,1,n) T[3].sum[i]=T[3].sum[i-1]+dep[fa[pre[i]]];\n    For(i,0,3)\n    {\n        if(i==0) For(j,1,n) T[i].val[j]=siz[j];\n        if(i==1) For(j,1,n) T[i].val[j]=sd[j];\n        if(i==2) For(j,1,n) T[i].val[j]=1ll*siz[j]*dep[j];\n        if(i==3) For(j,1,n) T[i].val[j]=1ll*siz[j]*dep[fa[j]];\n        T[i].Build(1,n,1);\n    }\n    For(i,1,n) if(!typ[i]) typ[i]=1,Change(i);\n    while(m--)\n    {\n        int opt=read(),x=read(),y;\n        if(opt==1) Change(x);\n        else y=read(),printf(\"%lld\\n\",Query(x,y));\n    }\n    return 0;\n}\n```",
        "postTime": 1659405881,
        "uid": 148913,
        "name": "Graphcity",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5559\u3010\u5931\u663c\u57ce\u7684\u5b88\u661f\u4f7f\u3011"
    },
    {
        "content": "# Solution\n\n\uff08\u5e94\u8be5\uff09\u4e0e\u6807\u7b97\u4e0d\u592a\u4e00\u6837\uff0c\u4e3b\u8981\u662f\u5b9e\u73b0\u4e0a\u9664\u4e86\u677f\u5b50\u51e0\u4e4e\u6ca1\u6709\u7ec6\u8282\u3002\n\n\u9996\u5148\u968f\u610f\u5b9a\u6839\u3002\n\n\u4e00\u4e2a\u70b9 $u$ \u5230\u94fe\u7684\u8ddd\u79bb\u7b49\u4ef7\u4e8e $u$ \u5230\u8fd9\u6761\u94fe\u4e0a LCA \u7684\u8ddd\u79bb\u51cf\u53bb $u$ \u5230 LCA \u7684\u91cd\u5408\u8def\u5f84\u90e8\u5206\u3002\u8fd9\u91cc\u7684\u91cd\u5408\u6307\u7684\u662f $u$ \u5230 LCA \u7684\u8def\u5f84\u4e0e\u8fd9\u6761\u94fe\u7684\u91cd\u5408\u90e8\u5206\u3002\n\n\u8003\u8651\u8fd9\u4e2a\u91cd\u5408\u8def\u5f84\u90e8\u5206\u600e\u4e48\u7b97\u3002\u7c7b\u4f3c [[LNOI2014]LCA](https://www.luogu.org/problem/P4211) \u7684\u505a\u6cd5\uff0c\u91cd\u5408\u90e8\u5206\u663e\u7136\u7b49\u4ef7\u4e8e $u$ \u5230\u6839\u7684\u8def\u5f84\u4e0e\u8fd9\u6761\u94fe\u7684\u91cd\u5408\u90e8\u5206\u3002\u5c06\u6bcf\u4e2a\u9ed1\u70b9\u5230\u6839\u7684\u8fb9\u5168\u90e8\u6253\u4e0a\u4e00\u4e2a +1 \u7684\u6807\u8bb0\uff0c\u6bcf\u6b21\u76f4\u63a5\u67e5\u8be2\u8fd9\u6761\u94fe\u4e0a\u7684\u8def\u5f84\u548c\u5373\u53ef\u3002\n\n\uff08\u6ce8\u610f\u8fd9\u91cc\u7684 +1 \u662f\u7d2f\u52a0\u4e00\u6b21\u8fb9\u6743\uff0c\u4e0d\u662f\u6743\u503c +1\uff09\n\n\u7136\u540e\u518d\u8003\u8651 $u$ \u5230\u8fd9\u6761\u94fe\u4e0a LCA \u7684\u8ddd\u79bb\u3002\u73b0\u5728\u8bbe LCA \u4e3a $v$\uff0c\u62c6\u4e00\u4e0b\u53ef\u4ee5\u5f97\u5230 $dis(u, v) = dis _u + dis _v - 2 dis _{lca(u, v)}$\uff08\u6ce8\u610f\u8fd9\u91cc\u7684 $dis(u, v)$ \u662f\u4e24\u70b9\u8ddd\u79bb\uff0c$dis _u$ \u662f $u$ \u5230\u6839\u7684\u8ddd\u79bb\uff09\n\n\u7528\u4e0a\u9762\u7684\u4fee\u6539\u65b9\u6cd5\u4e00\u6837\u80fd\u505a\uff0c\u67e5\u8be2 $v$ \u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u8def\u5f84\u548c\uff0c\u5373\u53ef\u5f97\u5230 $\\sum dis _{lca(u, v)}$\u3002\u800c $\\sum dis _u + dis _v$ \u5f88\u5bb9\u6613\u7ef4\u62a4\uff08\u76f4\u63a5\u8bb0\u5f53\u524d\u6709\u591a\u5c11\u4e2a\u9ed1\u70b9\u548c\u9ed1\u70b9\u7684 $dis$ \u548c\uff09\uff0c\u4e8e\u662f\u89e3\u51b3\u95ee\u9898\u3002\n\n\u7528 LCT \u5904\u7406\u53ef\u4ee5\u505a\u5230 $O(n \\log n)$\uff0c\u4e0d\u8fc7\u61d2\u5f97\u5199\u4e86\uff0c$O(n \\log ^2 n)$ \u6811\u5256\u5c31\u884c\u3002\n\n\u867d\u7136\u662f\u4e00\u4e2a\u6bd4\u8f83\u5947\u602a\u7684\u533a\u95f4\u52a0\uff08\u6574\u4f53\u7d2f\u52a0\u4e00\u6b21\u8fb9\u6743\uff09\uff0c\u4e0d\u8fc7\u5927\u540c\u5c0f\u5f02\uff0c\u8ddf\u666e\u901a\u7ebf\u6bb5\u6811\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\u3002\n\n# Code\n\n## gen\n\n```python\nfrom random import randint\nfrom cyaron import *\nimport os\ncnt = 0\nwhile True :\n    n, m = int(2e5), int(2e5)\n    outs = \"%d %d %d\\n\" % (n, m, 0)\n    tree = Graph.tree(n, weight_limit = 1e5)\n    for i in tree.iterate_edges() :\n        outs += \"%d %d %d\\n\" % (i.start, i.end, i.weight)\n    for i in range(n) :\n        outs += \"%d \" % (randint(0, 1))\n    outs += '\\n'\n    for i in range(m) :\n        if randint(0, 1) is 0 :\n            outs += \"1 %d\\n\" % randint(1, n)\n        else :\n            outs += \"2 %d %d\\n\" % (randint(1, n), randint(1, n))\n    print(outs, file = open(\"tmp.in\", \"w\"))\n    os.system(\"./std && ./tmp\")\n    if os.system(\"diff tmp.out tmp.ans\") :\n        print(\"WA\")\n        exit()\n    else :\n        cnt += 1\n        print(\"AC %d times!\" % cnt)\n```\n\n## std\n\n```cpp\n/**********************************************************\n * Author        : EndSaH\n * Email         : hjxhb1@gmail.com\n * Created Time  : 2019-09-17 10:26\n * FileName      : tmp.cpp\n * Website       : https://endsah.cf\n * *******************************************************/\n\n#include <cstdio>\n#include <cctype>\n#include <bitset>\n#include <vector>\n\nusing pii = std::pair<int, int>;\nusing LL = long long;\n\n#define fir first\n#define sec second\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define Debug(s) debug(\"The message in line %d, Function %s: %s\\n\", __LINE__, __FUNCTION__, s)\n#define getchar() (ipos == iend and (iend = (ipos = _ibuf) + fread(_ibuf, 1, __bufsize, stdin), ipos == iend) ? EOF : *ipos++)\n#define putchar(ch) (opos == oend ? fwrite(_obuf, 1, __bufsize, stdout), opos = _obuf : 0, *opos++ = (ch))\n#define __bufsize (1 << 21 | 1)\n\nchar _ibuf[__bufsize], _obuf[__bufsize], _stk[50];\nchar *ipos = _ibuf, *iend = _ibuf, *opos = _obuf, *oend = _obuf + __bufsize, *stkpos = _stk;\n\nstruct END\n{ ~END() { fwrite(_obuf, 1, opos - _obuf, stdout); } }\n__;\n\ninline int read()\n{\n    register int x = 0;\n    register char ch;\n    while (!isdigit(ch = getchar()));\n    while (x = x * 10 + (ch & 15), isdigit(ch = getchar()));\n    return x;\n}\n\ntemplate <typename _INT>\ninline void write(_INT x)\n{\n    while (*++stkpos = x % 10 ^ 48, x /= 10, x);\n    while (stkpos != _stk)\n        putchar(*stkpos--);\n}\n\ntemplate <typename _Tp>\ninline bool Chkmax(_Tp& x, const _Tp& y)\n{ return x < y ? x = y, true : false; }\n\ntemplate <typename _Tp>\ninline bool Chkmin(_Tp& x, const _Tp& y)\n{ return x > y ? x = y, true : false; }\n\nconst int maxN = 2e5 + 5;\n\nint n, m, cnt;\nLL sum;\nstd::bitset<maxN> vis;\nstd::vector<pii> G[maxN];\n\n// HLD and SEG\nnamespace HLD\n{\n    int dfst, ql, qr, addval;\n    int size[maxN], top[maxN], son[maxN], dfn[maxN], fa[maxN], dep[maxN];\n    LL dis[maxN];\n    int val[maxN], ref[maxN];\n    int tag[maxN << 2];\n    LL sum[maxN << 2], real[maxN << 2];\n\n    void DFS1(int u)\n    {\n        size[u] = 1;\n        for (const auto& i : G[u])\n        {\n            if (size[i.fir])\n                continue;\n            fa[i.fir] = u, dep[i.fir] = dep[u] + 1;\n            val[i.fir] = i.sec, dis[i.fir] = dis[u] + i.sec;\n            DFS1(i.fir);\n            size[u] += size[i.fir];\n            if (size[i.fir] > size[son[u]])\n                son[u] = i.fir;\n        }\n    }\n\n    void DFS2(int u)\n    {\n        dfn[u] = ++dfst;\n        ref[dfst] = u;\n        if (son[u])\n            top[son[u]] = top[u], DFS2(son[u]);\n        for (const auto& i : G[u])\n            if (!top[i.fir])\n                top[i.fir] = i.fir, DFS2(i.fir);\n    }\n\n    int LCA(int u, int v)\n    {\n        while (top[u] != top[v])\n        {\n            if (dep[top[u]] < dep[top[v]])\n                std::swap(u, v);\n            u = fa[top[u]];\n        }\n        return dep[u] > dep[v] ? v : u;\n    }\n\n    inline void Add(int addval, int x)\n    {\n        real[x] += sum[x] * addval;\n        tag[x] += addval;\n    }\n\n    inline void Pushdown(int x)\n    {\n        if (tag[x])\n        {\n            Add(tag[x], x << 1), Add(tag[x], x << 1 | 1);\n            tag[x] = 0;\n        }\n    }\n\n    inline void Pushup(int x)\n    { real[x] = real[x << 1] + real[x << 1 | 1]; }\n\n    void Build(int l = 1, int r = n, int cur = 1)\n    {\n        if (l == r)\n        {\n            sum[cur] = val[ref[l]];\n            return;\n        }\n        int mid = (l + r) >> 1;\n        Build(l, mid, cur << 1), Build(mid + 1, r, cur << 1 | 1);\n        sum[cur] = sum[cur << 1] + sum[cur << 1 | 1];\n    }\n\n    void Modify(int l = 1, int r = n, int cur = 1)\n    {\n        if (ql <= l and r <= qr)\n        {\n            Add(addval, cur);\n            return;\n        }\n        int mid = (l + r) >> 1;\n        Pushdown(cur);\n        if (ql <= mid)\n            Modify(l, mid, cur << 1);\n        if (mid < qr)\n            Modify(mid + 1, r, cur << 1 | 1);\n        Pushup(cur);\n    }\n\n    LL Query(int l = 1, int r = n, int cur = 1)\n    {\n        if (ql <= l and r <= qr)\n            return real[cur];\n        if (ql > r or qr < l)\n            return 0;\n        int mid = (l + r) >> 1;\n        Pushdown(cur);\n        return Query(l, mid, cur << 1) + Query(mid + 1, r, cur << 1 | 1);\n    }\n\n    void Init()\n    {\n        dep[1] = 1, DFS1(1);\n        top[1] = 1, DFS2(1);\n        Build();\n    }\n\n    void Add(int l, int r, int val)\n    { ql = l, qr = r, addval = val, Modify(); }\n\n    LL Ask(int l, int r)\n    { ql = l, qr = r; return Query(); }\n\n    void Add_root(int u, int addval)\n    {\n        while (top[u] != 1)\n            Add(dfn[top[u]], dfn[u], addval), u = fa[top[u]];\n        Add(2, dfn[u], addval);\n    }\n\n    LL Query_chain(int u, int v)\n    {\n        LL res = 0;\n        while (top[u] != top[v])\n        {\n            if (dep[top[u]] < dep[top[v]])\n                std::swap(u, v);\n            res += Ask(dfn[top[u]], dfn[u]), u = fa[top[u]];\n        }\n        if (dep[u] > dep[v])\n            std::swap(u, v);\n        return res + Ask(dfn[u] + 1, dfn[v]);\n    }\n}\n\nvoid Oper(int x)\n{\n    if (vis[x])\n        sum -= HLD::dis[x], --cnt, vis.reset(x), HLD::Add_root(x, -1);\n    else\n        sum += HLD::dis[x], ++cnt, vis.set(x), HLD::Add_root(x, 1);\n}\n\nint main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"tmp.in\", \"r\", stdin);\n    freopen(\"tmp.out\", \"w\", stdout);\n#endif\n    n = read(), m = read(), read();\n    for (int i = 2; i <= n; ++i)\n    {\n        int u = read(), v = read(), w = read();\n        G[u].emplace_back(v, w), G[v].emplace_back(u, w);\n    }\n    HLD::Init();\n    // for (int i = 1; i <= n; ++i)\n    //     printf(\"%d %d %d\\n\", HLD::size[i], HLD::top[i], HLD::dfn[i]);\n    for (int i = 1; i <= n; ++i)\n        if (read())\n            Oper(i);\n    for (int i = 1; i <= m; ++i)\n    {\n        int opt = read(), x = read();\n        // debug(\"%d %d %d\\n\", i, opt, x);\n        if (opt == 1)\n            Oper(x);\n        else\n        {\n            int y = read(), lca = HLD::LCA(x, y);\n            LL tmp = sum + cnt * HLD::dis[lca] - (HLD::Query_chain(1, lca) << 1);\n            LL minus = HLD::Query_chain(x, y);\n            write(tmp - minus), putchar('\\n');\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1568694952,
        "uid": 91252,
        "name": "EndSaH",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5559 \u3010\u5931\u663c\u57ce\u7684\u5b88\u661f\u4f7f\u3011"
    },
    {
        "content": "### \u7b80\u8981\u9898\u610f\n\n\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u4e0a\u9762\u6709\u767d\u70b9\u548c\u9ed1\u70b9\uff0c\u4f60\u9700\u8981\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n1. \u5c06\u4e00\u4e2a\u70b9\u7684\u989c\u8272\u53cd\u8f6c\u3002\n2. \u67e5\u8be2\u6811\u4e0a\u6240\u6709\u9ed1\u70b9\u5230\u4e00\u6761\u94fe\u4e0a\u7684\u6700\u77ed\u8def\u5f84\u4e4b\u548c\u3002\n\n### \u601d\u8def\n\n\u5148\u6765\u8003\u8651\u66b4\u529b\u505a\u6cd5\u3002\u4f17\u6240\u5468\u77e5\uff0c\u5728\u4e00\u68f5\u6811\u4e0a\uff0c\u70b9 $x$ \u5230\u94fe $\\left(u,v\\right)$ \u7684\u6700\u77ed\u8def\u5f84\u4e3a $\\frac{dis\\left(u,x\\right)+dis\\left(v,x\\right)-dis\\left(u,v\\right)}{2}$\u3002\n\n\u66b4\u529b\u679a\u4e3e\u5c31\u53ef\u4ee5\u62ff\u5230 $40$ \u5206\u7684\u597d\u6210\u7ee9\u3002\n\n\u4f17\u6240\u5468\u77e5\uff0c$dis\\left(x,y\\right)=dis_x+dis_y-2\\times dis_{lca\\left(x,y\\right)}$\uff0c\u8fd9\u91cc\u7684 $dis_x$ \u6307\u7684\u662f $x$ \u5230\u6839\u7684\u8ddd\u79bb\u3002\u8003\u8651\u628a\u8fd9\u4e2a\u5f0f\u5b50\u5316\u7b80\uff0c\u5316\u7b80\u540e\u7684\u5f0f\u5b50\u4e3a $dis_x-dis_{lca{\\left(u,x\\right)}}-dis_{lca\\left(v,x\\right)}+dis_{u,v}$\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u5f0f\u5b50\u62c6\u6210\u56db\u4e2a\u90e8\u5206\uff0c\u7b2c\u4e00\u90e8\u5206\u662f $dis_x$\uff0c\u8fd9\u4e2a\u76f4\u63a5\u66f4\u65b0\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u7b2c\u56db\u90e8\u5206\u662f $dis_{u,v}$\uff0c\u8fd9\u4e2a\u7edf\u8ba1\u9ed1\u70b9\u6570\u91cf\u76f4\u63a5\u4e58\u8d77\u6765\u6c42\u548c\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u7b2c\u4e8c\u90e8\u5206\u548c\u7b2c\u4e09\u90e8\u5206\u7684\u5f0f\u5b50\u51e0\u4e4e\u76f8\u540c\uff0c\u6211\u4eec\u53ea\u8981\u4f1a\u6c42 $dis_{lca{\\left(u,x\\right)}}$\uff0c\u5c31\u80fd\u6c42\u51fa $dis_{lca{\\left(v,x\\right)}}$\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u65e0\u8bba\u662f\u4ec0\u4e48\u70b9\uff0c\u4e0e $x$ \u7684 $lca$ \u90fd\u4e00\u5b9a\u662f $x$ \u7684\u7956\u5148\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u4ece\u7956\u5148\u4e0b\u624b\uff0c\u5bf9\u4e8e $x$ \u7684\u7956\u5148 $y$\uff0c\u4e0e\u70b9 $x$ \u7684 $lca$ \u662f\u70b9 $y$ \u7684\u70b9\u4e00\u5b9a\u662f $y$ \u7684\u540e\u4ee3\u5e76\u4e14\u4e00\u5b9a\u4e0d\u662f $x$ \u7684\u6df1\u5ea6\u6bd4 $y$ \u5927\u7684\u7956\u5148 $z$ \u7684\u540e\u4ee3\u7684\u70b9\u3002\n\n\u975e\u5e38\u62d7\u53e3\uff0c\u753b\u5f20\u56fe\u3002\n\n![](https://pic1.imgdb.cn/item/636c9e9816f2c2beb1e25040.png)\n\n\u5982\u56fe\uff0c\u8bbe\u70b9 $5$ \u4e3a\u70b9 $x$\uff0c\u70b9 $1$ \u4e3a\u70b9 $y$\uff0c\u8fd9\u4e2a\u65f6\u5019 $1$ \u7684\u540e\u4ee3\u6709 $2,3,4,5,6$\uff0c\u5176\u4e2d $4,5,6$ \u662f\u70b9 $x$ \u7684\u6df1\u5ea6\u6bd4 $y$ \u5927\u7684\u7956\u5148 $4$ \u7684\u540e\u4ee3\u3002\n\n\u8bf4\u7740\u5f88\u9ebb\u70e6\uff0c\u4f60\u4f1a\u53d1\u73b0 $x$ \u7684 $k$ \u7ea7\u7956\u5148\u7684\u53ef\u7528\u9ed1\u70b9\u6570\u91cf\u4e3a\u7b2c $k$ \u7ea7\u7956\u5148\u7684\u5b50\u6811\u4e2d\u7684\u9ed1\u70b9\u6570\u91cf\u4e0e\u7b2c $k-1$ \u7ea7\u7956\u5148\u7684\u5b50\u6811\u4e2d\u9ed1\u70b9\u6570\u91cf\u7684\u5dee\uff0c\u8bbe $a_i$ \u8868\u793a\u70b9 $i$ \u7684\u5b50\u6811\u4e2d\u7684\u9ed1\u70b9\u6570\u91cf\uff0c\u90a3\u4e48$x$ \u7684 $k$ \u7ea7\u7956\u5148\u7684\u53ef\u7528\u9ed1\u70b9\u6570\u91cf\u4e3a $a_{fa_{x,k}}-a_{fa_{x,k-1}}$\uff0c\u8fd9\u4e9b\u70b9\u4e0e $x$ \u7684 $lca$ \u90fd\u662f $x$ \u7684\u7b2c $k$ \u7ea7\u7956\u5148\u3002\n\n\u6211\u4eec\u8981\u6c42\u7684\u662f $dis$ \u4e4b\u548c\uff0c\u5373 $dis_{fa_{x,k}}\\times\\left(a_{fa_{x,k}}-a_{fa_{x,k-1}}\\right)$\uff0c\u8003\u8651\u5bf9\u8fd9\u4e2a\u4e1c\u897f\u6c42\u548c\u3002\n\n\u628a\u76f8\u90bb\u4e24\u4e2a\u62ff\u51fa\u6765\u6c42\u548c\uff0c\u5373 $dis_{fa_{x,k}}\\times\\left(a_{fa_{x,k}}-a_{fa_{x,k-1}}\\right)+dis_{fa_{x,k-1}}\\times\\left(a_{fa_{x,k-1}}-a_{fa_{x,k-2}}\\right)$\uff0c\u62c6\u5f00\u62ec\u53f7\u540e\u5408\u5e76\u540c\u7c7b\u9879\uff0c\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e24\u4e2a\u76f8\u90bb\u7684\u70b9\u7684\u7b54\u6848\u7684\u548c\u90fd\u53ef\u4ee5\u5c06\u5176\u4e2d\u4e00\u4e2a\u5408\u5e76\u540c\u7c7b\u9879\uff0c\u800c\u53c8\u4f17\u6240\u5468\u77e5\uff0c$dis_1=0$\uff0c\u6240\u4ee5\u521a\u597d\u51d1\u51fa $n$ \u9879\uff0c\u76f8\u90bb\u4e24\u4e2a\u70b9\u7684 $dis$ \u7684\u5dee\u503c\u76f8\u5f53\u4e8e\u662f\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u957f\u5ea6\u3002\n\n\u5230\u8fd9\u4e00\u6b65\uff0c\u5f0f\u5b50\u53d8\u6210\u4e86\u6c42 $x$ \u7684\u5012\u6839\u94fe\u4e0a\u7684 $a_i\\times w_i$ \u7684\u548c\uff0c\u5176\u4e2d $w_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u70b9\u4e0e\u4ed6\u7684\u7236\u4eb2\u4e4b\u95f4\u7684\u8def\u5f84\u957f\u5ea6\u3002\n\n\u5728\u6811\u4e0a\uff0c\u9700\u8981\u4fee\u6539\u548c\u67e5\u8be2\u4e00\u6574\u6761\u8def\u5f84\uff0c\u7528\u6811\u94fe\u5256\u5206\u5957\u7ebf\u6bb5\u6811\u5c31\u80fd\u7ef4\u62a4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O\\left(n\\log^2n\\right)$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nstruct node{\n    int v,w;\n};\nint n,q,type;\nint father[200005];\nint dis[200005];\nint top[200005];\nint rnk[200005];\nint dfn[200005];\nint heavy[200005];\nint siz[200005];//\u8fd9\u4e2asiz\u662f\u7ed3\u70b9\u6570\u91cf\nint cnt;\nvector<node> ljb[200005];\nint val[200005];\nint a[200005];\nint tag[200005];\nint pre[200005];\nint dep[200005];\nvoid dfs(int cur,int fa){\n    dep[cur]=dep[fa]+1;\n    father[cur]=fa;\n    siz[cur]=1;\n    for(int i=0;i<ljb[cur].size();i++){\n        int v=ljb[cur][i].v;\n        int w=ljb[cur][i].w;\n        if(v==fa)continue;\n        dis[v]=dis[cur]+w;\n        dfs(v,cur);\n        siz[cur]+=siz[v];\n        if(siz[heavy[cur]]<siz[v]){\n            heavy[cur]=v;\n        }\n    }\n    return;\n}\nvoid getlink(int cur,int fa){\n    cnt++;\n    dfn[cur]=cnt;\n    rnk[cnt]=cur;\n    if(heavy[cur]){\n        top[heavy[cur]]=top[cur];\n        getlink(heavy[cur],cur);\n    }\n    for(int i=0;i<ljb[cur].size();i++){\n        int v=ljb[cur][i].v;\n        if(v==fa)continue;\n        if(v==heavy[cur])continue;\n        top[v]=v;\n        getlink(v,cur);\n    }\n    return;\n}\nvoid geta(int cur,int fa){\n    a[cur]=tag[cur];\n    for(int i=0;i<ljb[cur].size();i++){\n        int v=ljb[cur][i].v;\n        if(v==fa)continue;\n        geta(v,cur);\n        a[cur]+=a[v];\n    }\n    return;\n}\nclass SegTree{\n    public:\n    int tree[200005<<2];\n    int tag[200005<<2];\n    void pushup(int cur){\n        tree[cur]=tree[cur*2]+tree[cur*2+1];\n    }\n    void addtag(int cur,int lt,int rt,int val){\n        tree[cur]+=abs(pre[rt]-pre[lt-1])*val;\n        tag[cur]+=val;\n        return;\n    }\n    void pushdown(int cur,int lt,int rt){\n        if(!tag[cur])return;\n        int mid=lt+rt>>1;\n        addtag(cur*2,lt,mid,tag[cur]);\n        addtag(cur*2+1,mid+1,rt,tag[cur]);\n        tag[cur]=0;\n        return;\n    }\n    void build(int cur,int lt,int rt){\n        if(lt==rt){\n            tree[cur]=a[rnk[lt]]*val[lt];//lt\u662fdfn\uff0crnk[lt]\u662fi\n            return;\n        }\n        int mid=lt+rt>>1;\n        build(cur*2,lt,mid);\n        build(cur*2+1,mid+1,rt);\n        pushup(cur);\n        return;\n    }\n    void update(int cur,int lt,int rt,int qx,int qy,int val){\n        if(rt<qx||lt>qy){\n            return;\n        }\n        if(lt>=qx&&rt<=qy){\n            addtag(cur,lt,rt,val);\n            return;\n        }\n        pushdown(cur,lt,rt);\n        int mid=lt+rt>>1;\n        update(cur*2,lt,mid,qx,qy,val);\n        update(cur*2+1,mid+1,rt,qx,qy,val);\n        pushup(cur);\n        return;\n    }\n    int query(int cur,int lt,int rt,int qx,int qy){\n        if(lt>qy||rt<qx){\n            return 0;\n        }\n        if(lt>=qx&&rt<=qy){\n            return tree[cur];\n        }\n        pushdown(cur,lt,rt);\n        int mid=lt+rt>>1;\n        return query(cur*2,lt,mid,qx,qy)+query(cur*2+1,mid+1,rt,qx,qy);\n    }\n}P;\nvoid updatelink(int x,int val){\n    while(x){\n        P.update(1,1,n,dfn[top[x]],dfn[x],val);\n        x=father[top[x]];\n    }\n    return;\n}\nint getlink(int x){\n    int sum=0;\n    while(x){\n        sum+=P.query(1,1,n,dfn[top[x]],dfn[x]);\n        x=father[top[x]];\n    }\n    return sum;\n}\nint LCA(int x,int y){\n    while(top[x]!=top[y]){\n        if(dep[top[x]]<dep[top[y]]){\n            swap(x,y);\n        }\n        x=father[top[x]];\n    }\n    if(dep[x]<dep[y])return x;\n    return y;\n}\n/*\n\u4ee5\u4e0a\u662f\u6811\u94fe\u5256\u5206\u57fa\u672c\u64cd\u4f5c\n*/\nsigned main(){\n    scanf(\"%lld%lld%lld\",&n,&q,&type);\n    for(int i=1;i<n;i++){\n        int u,v,w;\n        scanf(\"%lld%lld%lld\",&u,&v,&w);\n        ljb[u].push_back(node{v,w});\n        ljb[v].push_back(node{u,w});\n    }\n    dfs(1,0);\n    getlink(1,0);\n    int pos=0,sum=0;\n    for(int i=1;i<=n;i++){\n        scanf(\"%lld\",&tag[i]);\n        pos+=tag[i];\n        sum+=tag[i]*dis[i];\n    }\n    geta(1,0);\n    for(int i=1;i<=n;i++){\n        val[i]=dis[rnk[i]]-dis[father[rnk[i]]];//\u6ce8\u610f\u8fd9\u91cc\u7684val\u4ee5 $dfn[i]$ \u4e3a\u4e0b\u6807\uff01\n    }\n    for(int i=1;i<=n;i++){\n        pre[i]=pre[i-1]+val[i];\n    }\n    P.build(1,1,n);\n    while(q--){\n        int opt;\n        scanf(\"%lld\",&opt);\n        if(opt==1){\n            int x;\n            scanf(\"%lld\",&x);\n            if(tag[x]){\n                updatelink(x,-1);\n                sum-=dis[x];\n                pos--;\n            }\n            else{\n                updatelink(x,1);\n                sum+=dis[x];\n                pos++;\n            }\n            tag[x]^=1;\n        }\n        else{\n            int x,y;\n            scanf(\"%lld%lld\",&x,&y);\n            printf(\"%lld\\n\",sum-getlink(x)-getlink(y)+pos*dis[LCA(x,y)]);\n            /*\n            sum\u8868\u793a\u6240\u6709\u9ed1\u70b9\u7684dis\u548c\n            getlink(x)\u8868\u793a\u70b9x\u4e0e\u6240\u6709\u9ed1\u70b9\u7684lca\u7684dis\u7684\u548c\n            pos\u8868\u793a\u9ed1\u70b9\u6570\u91cf\u3002\n            */\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1668064819,
        "uid": 679749,
        "name": "EastSnowLotus",
        "ccfLevel": 0,
        "title": "\u6811\u94fe\u5256\u5206\u4e4b\u62fc\u640f4.11\u79d2\u6211\u88abLCT\u540a\u6253"
    }
]