[
    {
        "content": "## [COCI2021-2022#1] Kamen\u010di\u0107i\n\n\u9898\u76ee\u94fe\u63a5\uff1a[P7928 [COCI2021-2022#1\\] Kamen\u010di\u0107i - \u6d1b\u8c37 | \u8ba1\u7b97\u673a\u79d1\u5b66\u6559\u80b2\u65b0\u751f\u6001 (luogu.com.cn)](https://www.luogu.com.cn/problem/P7928)\n\n---\n\n\u200b\t\u5bb9\u6613\u60f3\u5230\u4e00\u4e2a\u72b6\u6001 $dp_{l,r,a,b,0/1}$ \u8868\u793a\u8fd8\u5269 $[l,r]$ \u8fd9\u4e2a\u533a\u95f4\u6ca1\u62ff\uff0c Alice \u62ff\u4e86 $a$ \u5757\u7ea2\u77f3\u5934\uff0cBob \u62ff\u4e86 $b$ \u5757\u7ea2\u77f3\u5934\uff0c\u4e14\u5f53\u524d\u662f Alice/Bob \u9009\u62e9\u62ff\u77f3\u5934\uff0c\u6700\u540e\u7684\u80dc\u8005\u662f\u8c01\u3002\u90a3\u4e48\u8f6c\u79fb\u5c31\u662f\u66b4\u529b\u8f6c\u79fb\u3002\n\n``\ndp_{l,r,a,b,0}=dp_{l+1,r,a,b+(s[l]=='C'),1}==1 && dp_{l,r-1,a,b+(s[r]=='C'),1}==1\n``\n\t\n\u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa $opt=1$ \u65f6\u7684\u8f6c\u79fb\u5f0f\u3002\n\n\u200b\t\u6ce8\u610f\u5230\uff0c\u7531\u4e8e\u603b\u5171\u7684\u7ea2\u77f3\u5934\u6570\u4e0d\u53d8\uff0c\u4e00\u4e2a\u533a\u95f4\u5185\u7ea2\u77f3\u5934\u6570\u4e5f\u4e0d\u53d8\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u77e5\u9053\u5176\u4e2d\u4e00\u4e2a\u4eba\u62ff\u4e86\u51e0\u5757\u77f3\u5934\u5c31\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u7b97\u51fa\u53e6\u5916\u4e00\u4e2a\u4eba\u62ff\u4e86\u51e0\u5757\u77f3\u5934\u3002\n\n\u200b\t\u90a3\u4e48\u5c31\u4f18\u5316\u4e86\u4e00\u7ef4\uff0c\u65f6\u7a7a\u590d\u6742\u5ea6\u4e3a $O(n^3)$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 355;\nbool Small;\nint n,K,suml[MAXN],sumr[MAXN];\nint dp[MAXN][MAXN][MAXN][2];\nchar s[MAXN];\nbool Sunny;\nint dfs(int l,int r,int k,int opt)\n{\n\tif(suml[l-1]+sumr[r+1]-k==K) return opt;\n\tif(dp[l][r][k][opt]!=-1) return dp[l][r][k][opt];\n\tint tmp1,tmp2;\n\ttmp1=dfs(l+1,r,suml[l-1]+sumr[r+1]-k,opt^1);\n\ttmp2=dfs(l,r-1,suml[l-1]+sumr[r+1]-k,opt^1);\n\tint ans;\n\tif(opt) ans=(tmp1==1||tmp2==1);\n\telse ans=(tmp1==1&&tmp2==1);\n\treturn dp[l][r][k][opt]=ans;\n}\nint main()\n{\n\tmemset(dp,-1,sizeof dp);\n\tscanf(\"%d %d\",&n,&K);\n\tscanf(\"%s\",s+1);\n\tfor(int i=1;i<=n;++i)\n\t\tsuml[i]=suml[i-1]+(s[i]=='C');\n\tfor(int i=n;i>=1;--i)\n\t\tsumr[i]=sumr[i+1]+(s[i]=='C');\n\tif(dfs(1,n,0,1)) printf(\"DA\\n\");\n\telse printf(\"NE\\n\");\n\treturn 0;\n}\n```\n\n",
        "postTime": 1636616146,
        "uid": 141485,
        "name": "A_Sunny_Day",
        "ccfLevel": 0,
        "title": "[COCI2021-2022#1] Kamen\u010di\u0107i"
    },
    {
        "content": "# COCI2021-2022 Contest1 T2 \u9898\u89e3\n\n[TOC]\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6b64\u8fdb\u5165](http://blog.monkey-hyx.tech?t=COCI-2021-2022-Contest1)\n\n\uff08\u5efa\u8bae\u60a8\u4ece\u4e0a\u65b9\u94fe\u63a5\u8fdb\u5165\u6211\u7684\u4e2a\u4eba\u7f51\u7ad9\u67e5\u770b\u6b64 Blog\uff0c\u5728 Luogu \u4e2d\u56fe\u7247\u4f1a\u88ab\u5899\u6389\uff0c\u90e8\u5206 Markdown \u4e5f\u4f1a\u5931\u6548\uff09\n\n## [\u539f\u9898\u9762\u94fe\u63a5](https://hsin.hr/coci/contest1_tasks.pdf)\n\n## [Luogu\u9898\u9762](https://www.luogu.com.cn/problem/list?keyword=COCI2021-2022%231&page=1)\n\n## T2 Kamen\u010di\u0107i\n\n### \u9898\u9762\n\n\u4e00\u884c $ (n \\le 350) $ \u4e2a\u77f3\u5934\u6709\u7ea2\u84dd\u4e24\u79cd\u989c\u8272\uff0c$ \\texttt{Alice} $ \u548c $ \\texttt{Bob} $ \u8f6e\u6d41\u4ece\u4e00\u7aef\u53d6\u4e00\u4e2a\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\u5f53\u624b\u4e2d\u6709 $ K $ \u4e2a\u7ea2\u8272\u77f3\u5b50\u65f6\u5219\u5931\u8d25\uff0c\u4fdd\u8bc1\u4f1a\u6709\u4eba\u83b7\u80dc\uff0c\u6c42\u51fa\u4e24\u4eba\u8c01\u83b7\u80dc\u3002\n\n\u8f93\u51fa\u5728\u4fdd\u8bc1\u4e24\u4eba\u5747\u91c7\u7528\u6700\u4f18\u7b56\u7565\u7684\u60c5\u51b5\u4e0b\uff0c\u8c01\u5c06\u4f1a\u53d6\u80dc\u3002\u82e5 $ \\texttt{Alice} $ \u80dc\u5229\u8f93\u51fa $ \\texttt{DA} $\uff0c\u53cd\u4e4b\u8f93\u51fa $ \\texttt{NE} $\u3002\n\n### Examples\n\n**Input_1**\n\n> 4 1\n>\n> CCCP\n\n**Output_1**\n\n> DA\n\n**Input_2**\n\n> 8 2\n>\n> PCPPCCCC\n\n**Output_2**\n\n> DA\n\n**Input_3**\n\n> 9 1\n>\n> PPCPPCPPC\n\n**Output_3**\n\n> NE\n\n### Solution\n\n\u5148\u8bf4\u51e0\u4e2a\u4e71\u641e\u7684\u505a\u6cd5\uff1a\n\n\u9996\u5148\u89c2\u5bdf\u53d1\u73b0\u4f3c\u4e4e\u53ef\u4ee5\u8d2a\u5fc3\uff0c\u5982\u679c\u4e00\u8fb9\u7ea2\u8272\u4e00\u8fb9\u84dd\u8272\u663e\u7136\u6700\u4f18\u65b9\u6848\u4e00\u5b9a\u662f\u53d6\u84dd\u8272\u7684\u3002\n\n\u5bf9\u4e8e\u4e24\u8fb9\u90fd\u662f\u7ea2\u8272\u6216\u8005\u90fd\u662f\u84dd\u8272\uff0c~~\u6211\u6709\u4e2a\u522b\u7684\u8d2a\u5fc3\u65b9\u6848\u4f46\u662f\u5047\u6389\u4e86~~\uff0c\u9898\u89e3\u91cc\u6709\u4e00\u4e2a\u8d2a\u5fc3\u65b9\u6848\u662f\u5c3d\u91cf\u8ba9\u5bf9\u65b9\u66f4\u5feb\u78b0\u5230\u7ea2\u8272\uff0c\u4e5f\u5c31\u662f\u627e\u5230\u9664\u5934\u5c3e\u5916\uff0c\u54ea\u8fb9\u7ea2\u8272\u77f3\u5934\u66f4\u8fd1\uff0c\u6216\u8005\u627e\u54ea\u4e2a\u84dd\u8272\u77f3\u5934\u66f4\u8fdc\uff0c\u6309\u7167\u8fd9\u4e2a\u601d\u8def\u4f3c\u4e4e\u53ef\u4ee5\u5207\u6389\u8fd9\u9053\u9898\uff0c\u4e0d\u8fc7\u6211\u8ba4\u4e3a\u8fd9\u4e2a\u65b9\u6848\u6b63\u786e\u6027\u5e76\u4e0d\u663e\u7136\uff0c\u6709\u53ef\u80fd\u53ea\u662f\u8fd0\u6c14\u597d\u6570\u636e\u6bd4\u8f83\u6c34\u3002\n\n\uff08\u8d2a\u5fc3+\u968f\u673a\u5316\u53ef\u4ee5\u8fc7\u66f4\u591a\u70b9\uff0c\u4e0d\u8fc7\u56e0\u4e3a\u662f\u6346\u6d4b\uff0c\u6700\u540e\u4f3c\u4e4e\u8fd8\u4f1a\u662f $ 0 \\texttt{pts} $\uff09\n\n \u56de\u5230\u6b63\u89e3\uff0c\u77f3\u5934\u4e2a\u6570 $ n $ \u6ee1\u8db3 $ n \\le 350 $\uff0c\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\u663e\u7136\u53ef\u4ee5\u533a\u95f4 DP\u3002\n\n\u53ef\u4ee5\u8003\u8651\u4ee4 $ dp(l, r, k) $ \u8868\u793a\u77f3\u5b50\u4ec5\u5269\u4e0b $ \\left[l, r\\right] $ \u7684\u533a\u95f4\uff0c\u8f6e\u5230\u7684\u4eba\u5df2\u7ecf\u62ff\u8d70\u4e86 $ k $ \u4e2a\u7ea2\u8272\u77f3\u5b50\uff08\u8fd9\u91cc\u663e\u7136\u56e0\u4e3a $ \\texttt{Alice} $ \u5148\u624b\uff0c\u8f6e\u6d41\u62ff\u987a\u5e8f\u56fa\u5b9a\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5c06\u8c01\u62ff\u77f3\u5b50\u5355\u72ec\u8bbe\u7f6e\u4e00\u7ef4\uff09\uff0c\u7136\u540e\u8003\u8651\u72b6\u6001\u8f6c\u79fb\uff0c\u5f53\u4ece\u5f53\u524d\u533a\u95f4\u79fb\u9664\u4e00\u4e2a\u77f3\u5b50\u7684\u65f6\u5019\uff0c\u4f1a\u53d8\u4e3a $ \\left[l + 1, r\\right] $ \u6216 $ \\left[l, r - 1\\right] $\uff0c\u7136\u540e\u53d6\u77f3\u5b50\u7684\u4eba\u5c31\u53d8\u6210\u4e86\u53e6\u4e00\u4e2a\uff0c\u8fd9\u65f6\u533a\u95f4\u7684\u7ef4\u5ea6\u5df2\u7ecf\u8003\u8651\u597d\u4e86\uff0c\u5c31\u9700\u8981\u8003\u8651 $ k $ \u5982\u4f55\u8ba1\u7b97\u3002 \n\n\u663e\u7136\u5bf9\u4e8e\u6574\u4e2a\u533a\u95f4\u7684\u7ea2\u8272\u77f3\u5b50\u662f\u7531\u4e09\u90e8\u5206\u6784\u6210\uff1a\u533a\u95f4\u5185\u7ea2\u8272 + $ \\texttt{Alice} $ \u53d6\u8d70\u7684 + $ \\texttt{Bob} $ \u53d6\u8d70\u7684\u3002\n\n\u8003\u8651\u7528\u524d\u7f00\u548c\u7ef4\u62a4\u6bcf\u4e2a\u533a\u95f4\u5185\u7684\u7ea2\u8272\u77f3\u5b50\uff0c\u6211\u4eec\u53c8\u5df2\u7ecf\u77e5\u9053\u5f53\u524d\u8fd9\u4e2a\u4eba\u53d6\u8d70\u7684\u6570\u91cf\uff0c\u90a3\u4e48\u8bbe\u8f6c\u79fb\u540e\u7684 $ k $ \u4e3a $ k' $\uff0c\u90a3\u4e48\u5c31\u6709\uff1a\n$$\nk' = sum(N) - ( sum(r) - sum(l - 1) ) - k\n$$\n\u8003\u8651\u5230\u5bf9\u624b\u4e4b\u95f4\u83b7\u80dc\u72b6\u6001\u76f8\u53cd\uff0c\u6240\u4ee5\u9700\u8981\u53d6\u53cd\u3002\u8003\u8651\u5230\u4e24\u4eba\u5747\u9009\u62e9\u6700\u4f18\u65b9\u5f0f\u6311\u9009\uff0c\u6240\u4ee5\u9700\u8981\u6216\u8fd0\u7b97\u3002\n\n\u4e8e\u662f\u5c31\u4f1a\u6709\u5982\u4e0b\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$\ndp(l, r, k) = \\neg dp(l + 1, r, k') \\vee \\neg dp(l, r - 1, k')\n$$\n\u6b64\u65f6\u8003\u8651\u5230\u8fb9\u754c\u6761\u4ef6\u5c31\u53ef\u4ee5\u5f97\u51fa\u6700\u7ec8\u65b9\u7a0b\uff1a\n$$\ndp(l, r, k) = \\left\\{\n\t\\begin{array}{ll}\n\t\\texttt{false} &\\quad k > K \\\\\n\t\\texttt{true}  &\\quad k' > K \\\\\n\t\\neg dp(l + 1, r, k') \\vee \\neg dp(l, r - 1, k') &\\quad \\texttt{otherwise}\n\t\\end{array}\n\\right.\n$$\n\u8003\u8651\u5230\u521d\u59cb\u5316\u8f83\u4e3a\u590d\u6742\uff0c\u53ef\u4ee5\u8003\u8651 $ \\texttt{dfs} $ + \u8bb0\u5fc6\u5316\u641c\u7d22\u3002\n\n### Code\n\n```cpp\n#define _USE_MATH_DEFINES\n#include <bits/stdc++.h>\n\n#define PI M_PI\n#define E M_E\n#define npt nullptr\n\nusing namespace std;\n\nmt19937 rnd(random_device{}());\nint rndd(int l, int r){return rnd() % (r - l + 1) + l;}\n\ntypedef unsigned int uint;\ntypedef unsigned long long unll;\ntypedef long long ll;\n\ntemplate<typename T = int>\ninline T read(void);\n\nint N, K;\nbool stone[400];\nint sum[400];\nint dp[400][400][400];\nint DFS(int l, int r, int k){\n    if(~dp[l][r][k])return dp[l][r][k];\n    if(k >= K)return false;\n    int k_ = sum[N] - (sum[r] - sum[l - 1]) - k;\n    if(k_ >= K)return true;\n    return dp[l][r][k] = (!DFS(l + 1, r, k_) | !DFS(l, r - 1, k_));\n}\n\nint main(){\n    memset(dp, -1, sizeof(dp));\n    N = read(), K = read();\n    for(int i = 1; i <= N; ++i){\n        char c = getchar(); while(c != 'C' && c != 'P')c = getchar();\n        stone[i] = (c == 'C' ? true : false);\n        sum[i] = sum[i - 1] + stone[i];\n    }\n    printf(\"%s\\n\", DFS(1, N, 0) ? \"DA\" : \"NE\");\n    fprintf(stderr, \"Time: %.6lf\\n\", (double)clock() / CLOCKS_PER_SEC);\n    return 0;\n}\n\ntemplate<typename T>\ninline T read(void){\n    T ret(0);\n    short flag(1);\n    char c = getchar();\n    while(c != '-' && !isdigit(c))c = getchar();\n    if(c == '-')flag = -1, c = getchar();\n    while(isdigit(c)){\n        ret *= 10;\n        ret += int(c - '0');\n        c = getchar();\n    }\n    ret *= flag;\n    return ret;\n}\n```\n\n## UPD\n\nupdate-2022_08_30 T1-T3\n\nupdate-2022_09_01 \u5b8c\u6210\u4e00\u90e8\u5206\u7684 T4\n\nupdate-2022_09_02 T4 \u809d\u5b8c\n\nupdate-2022_09_04 \u521d\u7a3f\n\nupdate-2022_09_04 \u53d1\u73b0 T4 \u4e4b\u524d\u7b97\u6cd5\u5047\u6389\u4e86\uff0c\u4fee\u6539\u4e86\u4e00\u4e0b\n\nupdate-2022_09_06 \u5b8c\u5584 latex \u4ee5\u7b26\u5408 Luogu \u9898\u89e3\u8981\u6c42",
        "postTime": 1661839805,
        "uid": 362938,
        "name": "Tsawke",
        "ccfLevel": 6,
        "title": "COCI2021-2022 Contest1 T2 \u9898\u89e3"
    },
    {
        "content": "## \u601d\u8def\uff1a\n\u7531\u4e8e\u6570\u636e\u8303\u56f4\u6bd4\u8f83\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u6a21\u62df\u4e24\u4e2a\u4eba\u7684\u64cd\u4f5c\u3002\n\n\u4e24\u4e2a\u4eba\u90fd\u662f\u6700\u4f18\u7b56\u7565\u3002\n\n\u6211\u4eec\u6bcf\u4e00\u6b21\u5bf9\u4e24\u7aef\u7684\u60c5\u51b5\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n\n\n------------\n\n\n$1.$ \u5de6\u7aef\u7ea2\u8272\uff0c\u53f3\u7aef\u84dd\u8272\uff1a\n\n\u90a3\u4e48\u5f53\u524d\u4eba\u7684\u6700\u4f18\u7b56\u7565\u5c31\u662f\u53d6\u84dd\u8272\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\n\n\n\n------------\n\n\n$2.$ \u5de6\u7aef\u84dd\u8272\uff0c\u53f3\u7aef\u7ea2\u8272\uff1a\n\n\u6700\u4f18\u7b56\u7565\u540c\u4e0a\u3002\n\n\n\n------------\n\n$3.$ \u4e24\u7aef\u90fd\u662f\u7ea2\u8272\uff1a\n\n\u6211\u4eec\u4ee4\u5de6\u7aef\u5411\u53f3\u8fb9\u5230**\u7b2c\u4e00\u4e2a\u84dd\u8272\u7684\u8ddd\u79bb**\u4e3a $c1$\uff0c\u53f3\u7aef\u5411\u5de6\u8fb9\u5230**\u7b2c\u4e00\u4e2a\u84dd\u8272\u7684\u8ddd\u79bb**\u4e3a $c2$\u3002\n\n\u4e3a\u4e86\u8ba9\u5bf9\u65b9\u53d6\u5230\u84dd\u8272\u5c3d\u91cf\u5c11\uff0c\u4e5f\u5c31\u662f\u7ea2\u8272\u5c3d\u91cf\u591a\uff0c\n\n\u4e8e\u662f\u6240\u4ee5\u5f53\u524d\u4eba\u53d6\u7684\u662f\u5de6\u7aef\u6216\u53f3\u7aef**\u8ddd\u79bb\u7b2c\u4e00\u4e2a\u84dd\u8272\u8f83\u8fdc**\u7684\u90a3\u4e00\u7aef\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff1a\n\n\u5f53 $c1\\ge c2$ \u65f6\uff0c\u53d6\u5de6\u7aef\uff1b\n\n\u7b49\u4e8e\u7684\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u4efb\u610f\u3002\n\n\u5f53 $c1<c2$ \u65f6\uff0c\u53d6\u53f3\u7aef\u3002\n\n\n\n------------\n\n$4.$ \u4e24\u7aef\u90fd\u662f\u7ea2\u8272\uff1a\n\n\u6211\u4eec\u4ee4\u5de6\u7aef\u5411\u53f3\u8fb9\u5230**\u7b2c\u4e00\u4e2a\u7ea2\u8272\u7684\u8ddd\u79bb**\u4e3a $c1$\uff0c\u53f3\u7aef\u5411\u5de6\u8fb9\u5230**\u7b2c\u4e00\u4e2a\u7ea2\u8272\u7684\u8ddd\u79bb**\u4e3a $c2$\u3002\n\n\u4e3a\u4e86\u8ba9\u5bf9\u65b9\u53d6\u5230\u7ea2\u8272\u5c3d\u91cf\u591a\uff0c\n\n\u4e8e\u662f\u5f53\u524d\u4eba\u53d6\u7684\u662f\u5de6\u7aef\u6216\u53f3\u7aef**\u8ddd\u79bb\u7b2c\u4e00\u4e2a\u7ea2\u8272\u8f83\u8fd1**\u7684\u90a3\u4e00\u7aef\uff0c\u8fd9\u6837\u5bf9\u65b9\u5c31\u4f1a\u6bd4\u8f83\u5feb\u62ff\u5230\u7ea2\u8272\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff1a\n\n\u5f53 $c1\\le c2$ \u65f6\uff0c\u53d6\u5de6\u7aef\uff1b\n\n\u7b49\u4e8e\u7684\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u4efb\u610f\u3002\n\n\u5f53 $c1>c2$ \u65f6\uff0c\u53d6\u53f3\u7aef\u3002\n\n\n\n------------\n## \u4ee3\u7801\uff1a\n\u6709\u4e00\u70b9\u7ec6\u8282\uff0c\u4f46\u662f\u56e0\u4e3a\u672c\u4eba\u4ee3\u7801\u8fc7\u4e11\uff0c\u4e0d\u5efa\u8bae\u770b\u3002\n\n\u8fd8\u662f\u8981\u653e\u4e00\u4e0b\u7684\u3002\n\n[\u4ee3\u7801\u3002](https://www.luogu.com.cn/paste/t23jebfi)",
        "postTime": 1636892924,
        "uid": 508316,
        "name": "cyhyyds",
        "ccfLevel": 0,
        "title": "P7928 [COCI2021-2022#1] Kamen\u010di\u0107i \u9898\u89e3"
    }
]