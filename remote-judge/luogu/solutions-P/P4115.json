[
    {
        "content": "## Qtree4\n\u9898\u610f:  \n$n$\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u989c\u8272\uff0c\u9ed1\u6216\u767d  \n\u6bcf\u6b21\u67e5\u8be2\u6700\u5927\u767d\u70b9\u95f4\u8ddd\u79bb  \n\u5e26\u4fee\u6539  \n$n=10^5,q=2*10^5$\n\n(\u76f8\u4fe1\u5927\u5bb6\u8fb9\u5206\u6cbb\uff0cLCT\u7b49 $O(nlog^2n)$\u505a\u6cd5\u90fd\u4f1a\u4e86)\n\n\u4f46\u662f\u8fd9\u91cc\u6709\u4e00\u4e2a~~\u5e38\u6570\u5de8\u5927\u7684~~$O(nlogn)$\u505a\u6cd5\n\n#### \u524d\u7f6e\u829d\u58eb\n1.\u5168\u5c40\u5e73\u8861\u4e8c\u53c9\u6811(\u8be6\u89c12007\u5e74\u8bba\u6587Qtree\u95ee\u9898\u89e3\u6cd5\u7684\u4e00\u4e9b\u7814\u7a76)\n\n\u5728\u4e00\u4e9b\u9759\u6001\u6811\u4e0a\u67e5\u8be2\uff0c\u4fee\u6539\u95ee\u9898\u4e2d\uff0cLCT\u80fd\u505a\u5230~~\u8d85\u5927\u5e38\u6570\u7684~~$O(logn)$,\u800c\u6811\u94fe\u5256\u5206\u53ea\u80fd\u505a\u5230$O(log^2n)$\uff0c\u539f\u56e0\u4f55\u5728?\n\n\u56e0\u4e3aLCT\u6574\u68f5\u6811\u53ef\u4ee5\u770b\u505a\u4e00\u4e2a\u5927\u7684~~spaly~~$splay$\uff0c\u4ecd\u7136\u53ef\u4ee5\u8fdb\u884c\u52bf\u80fd\u5206\u6790  \n\u800c\u6811\u5256\u53ea\u80fd\u505a\u5230\u5355\u6761\u94fe\u6700\u4f18(\u5c40\u90e8\u6700\u4f18)\uff0c\u4f46\u662f\u5168\u5c40\u5e76\u6ca1\u6709\u6700\u4f18\n\n\u5168\u5c40\u5e73\u8861\u4e8c\u53c9\u6811 \u5c31\u5b8c\u6210\u4e86\u628aLCT\u5f3a\u884c\u9759\u6001\u7684\u8fc7\u7a0b\n\n\u8f7b\u91cd\u94fe\u5256\u5206\u7684\u90e8\u5206\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u6211\u4eec\u5bf9\u6bcf\u4e00\u6761\u94fe\u5efa\u7acb\u4e00\u9897\u4e8c\u53c9\u641c\u7d22\u6811  \n\u7ed9\u6bcf\u4e00\u4e2a\u70b9\u4e00\u4e2a\u6743\u503c\u4e3a\u8f7b\u513f\u5b50$size$\u4e4b\u548c$+1$(\u81ea\u5df1)\uff0c\u7136\u540e\u6bcf\u6b21\u627e\u91cd\u5fc3\u9012\u5f52\u5efa\u6811\n\n\u8bc1\u660e\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\u4e3a$O(logn)$\u5f88\u7b80\u5355\uff0c\u6bcf\u6b21\u8c03\u5230\u7236\u4eb2\u5b50\u6811\u5927\u5c0f(\u5305\u62ec\u865a\u5b50\u6811)\u81f3\u5c11\u7ffb\u500d\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u5f00\u5f00\u5fc3\u5fc3\u7684\u4ee5\u4e00\u4e2a$log$\u7684\u505a\u6cd5\u505a\u6811\u5256\u9898\u4e86\n\n\n2.\u628a\u4efb\u610f\u4e00\u68f5\u6811\u8f6c\u5316\u4e3a\u6811\u4e0a\u8ddd\u79bb\u4e0d\u53d8\u7684\u4e8c\u53c9\u6811\n\n~~\u76f8\u4fe1\u5927\u5bb6\u90fd\u5b66\u8fc7\u8fb9\u5206\u6cbb\u5427\uff0c\u90a3\u6211\u5c31\u4e0d\u8bb2\u4e86~~\n\n\u76f4\u63a5\u4e0a\u56fe\n\n\u539f\u6811  \n![](https://cdn.luogu.com.cn/upload/pic/59214.png)\n\n\u4e8c\u53c9\u6811  \n![](https://cdn.luogu.com.cn/upload/pic/59215.png)\n\n\n\u5176\u4e2d\u7ea2\u70b9\u4e3a\u65b0\u5efa\u7684\u865a\u70b9\uff0c\u7ea2\u8fb9\u7684\u8fb9\u6743\u5747\u4e3a0  \n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5b83\u7684\u513f\u5b50\u90fd\u8fd9\u6837\u5904\u7406\uff0c\u7136\u540e\u5c31\u53d8\u6210\u6709$2n$\u4e2a\u70b9\u7684\u4e8c\u53c9\u6811\u4e86  \n~~\u611f\u53d7\u4e00\u4e0b\uff0c\u662f\u4e0d\u662f\u5f88\u795e\u5947?~~\n\n-----\n\n#### \u6b63\u9898\u5f00\u59cb\n\n\u9996\u5148\u8003\u8651~~\u6700\u5f3a\u7684\u6811\u4e0a\u5206\u6cbb~~\u94fe\u5206\u6cbb  \n\u5bf9\u4e8e\u6bcf\u4e00\u6761\u94fe\u7ef4\u62a4$lca$\u5728\u8fd9\u6761\u94fe\u4e0a\u7684\u6700\u5927\u767d\u70b9\u8ddd\u79bb  \n\u76f4\u63a5\u505a\u7684\u505a\u6cd5:\n\n\u4ee5\u4e0b\u4e3a\u4e86\u65b9\u4fbf\uff0c\u70b9$x$\u7684\u8f7b\u5b50\u6811\u548c\u8868\u793a\u4ee5$x$\u4e3a\u6839\u7684\u5b50\u6811\u53bb\u6389\u5b83\u7684\u91cd\u5b50\u6811\uff0c\u70b9$x$\u7684\u8f7b\u5b50\u6811\u8868\u793a\u4ee5\u5b83\u7684\u4e00\u4e2a\u8f7b\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\uff0c$dfn$\u8868\u793a$dfs$\u5e8f\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9$x$\u7ef4\u62a4\u4e00\u4e2a\u5806\uff0c\u8bb0\u5f55$x$\u7684\u6bcf\u4e2a\u8f7b\u5b50\u6811\u5185\u4efb\u610f\u9ed1\u70b9\u5230$x$\u7684\u8ddd\u79bb\u7684\u6700\u5927\u503c\uff0c  \n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7b54\u6848  \n\u5bf9\u4e8e$dfn$\u533a\u95f4$[l,r]$,\u8bb0\u5f55\u4e09\u4e2a\u503c:  \n1.$lmax$:\u6240\u6709$dfn$\u4e3a$[l,r]$\u70b9\u7684\u8f7b\u5b50\u6811\u548c\u5185\u7684\u6240\u6709\u9ed1\u70b9\u5230$dfn$\u4e3a$l$\u7684\u70b9\u7684\u8ddd\u79bb\u6700\u5927\u503c  \n2.$rmax$:\u540c\u7406\uff0c\u8868\u793a\u6240\u6709$dfn$\u4e3a$[l,r]$\u70b9\u7684\u8f7b\u5b50\u6811\u548c\u5185\u7684\u6240\u6709\u9ed1\u70b9\u5230$dfn$\u4e3a$l$\u7684\u70b9\u7684\u8ddd\u79bb\u6700\u5927\u503c  \n3.$ans$:\u8868\u793a\u6240\u6709$dfn[lca]\\in [l,r]$ \u7684\u9ed1\u70b9\u7684\u8ddd\u79bb\u6700\u5927\u503c\n\n\u533a\u95f4\u5408\u5e76:\u7ebf\u6bb5\u6811\u4e0a$x$\u7684\u5de6\u513f\u5b50\u4e3a$ls$\uff0c\u53f3\u513f\u5b50\u4e3a$rs$\n\n$$ans_x=max\\{ans_{ls},ans_{rs},rmax_{ls}+lmax_{rs}+dis(r_{ls},l_{rs})\\}$$\n$$lmax_x=max\\{lmax_{ls},lmax_{rs}+dist(l_{ls},l_{rs})\\}$$\n$$rmax_x=max\\{rmax_{rs},rmax_{ls}+dist(r_{ls},r_{rs})\\}$$\n\n\u8fb9\u754c:\u70b9$x$\u5bf9\u5e94\u533a\u95f4$[L,L]$ $D_1=$\u5806\u5185\u7684\u6700\u5927\u503c\uff0c$D_2=$\u5806\u5185\u7684\u6b21\u5927\u503c(\u6765\u81ea\u4e24\u4e2a\u4e0d\u540c\u8f7b\u5b50\u6811)(\u82e5\u6ca1\u6709\u4e3a$-\\infty$)\n\n\u82e5$x$\u4e3a\u767d\u70b9\n$$lmax_x=rmax_x=max\\{0,D_1\\}$$\n$$ans_x=max(0,D_1,D_1+D_2)$$\n(\u81ea\u5df1\u5230\u81ea\u5df1\uff0c\u81ea\u5df1\u5230\u6700\u8fdc\u7684\uff0c\u6700\u8fdc\u7684\u5230\u6b21\u8fdc\u7684)  \n\u5426\u5219  \n$$lmax_x=rmax_x=D_1$$\n$$ans_x=D_1+D_2$$\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u8ddd\u79bb\u5806\u5185\u7ef4\u62a4\u7684\u5c31\u662f\u6bcf\u4e2a\u8f7b\u513f\u5b50\u7ebf\u6bb5\u6811\u9876\u7684$lmax+dist(x,son)$\n\n\u6bcf\u6761\u94fe\u7684\u7b54\u6848\u53ef\u4ee5\u8bb0\u5728\u53e6\u4e00\u4e2a\u5806\u91cc\uff0c\u8be2\u95ee\u65f6\u76f4\u63a5\u67e5\u5373\u53ef\n\n#### \u590d\u6742\u5ea6\u5206\u6790:  \ndist(i,j):\u53d1\u73b0\u603b\u662f\u5728\u6c42\u7956\u5148-\u540e\u4ee3\u8ddd\u79bb\uff0c\u6240\u4ee5\u6df1\u5ea6\u51cf\u4e00\u4e0b$O(1)$  \n\u5efa\u6811O(n)  \n\u6bcf\u6b21\u4fee\u6539$O(logn)$\u6761\u94fe\uff0c\u6bcf\u6b21\u7ebf\u6bb5\u6811$O(logn)$,\u4fee\u6539\u8ddd\u79bb\u5806$O(logn)$\uff0c\u4fee\u6539\u8bb0\u7b54\u6848\u7684\u5806$O(logn)$\u603b\u590d\u6742\u5ea6$O(nlog^2n)$  \n\u6bcf\u6b21\u67e5\u8be2$O(1)$\u83b7\u53d6\u5806\u9876\u5373\u53ef  \n\u603b\u590d\u6742\u5ea6$O(qlog^2n+n)$\n\n~~\u611a\u8822\u7684$log^2$\u505a\u6cd5\u5230\u6b64\u7ed3\u675f~~\n\n-----\n\u8003\u8651\u964d\u4e3a\u4e00\u4e2a$log$\n\n\u9996\u5148\u76f4\u63a5\u4e0a\u5168\u5c40\u5e73\u8861\u4e8c\u53c9\u6811\u53ef\u4ee5\u628a\u7ebf\u6bb5\u6811\u90e8\u5206\u964d\u4e3a\u5355\u6b21\u8be2\u95ee$O(logn)$  \n\u7b54\u6848\u5806\u76f4\u63a5\u4e0d\u8981\u4e86\uff0c\u5168\u5c40\u5e73\u8861\u4e8c\u53c9\u6811\u7684$ans$\u5e26\u4e0a\u8f7b\u5b50\u6811\u548c\u5185\u7684\u7b54\u6848\u5373\u53ef\n\n\u7136\u540e\u662f\u8ddd\u79bb\u5806  \n\u6211\u4eec\u53d1\u73b0\u8ddd\u79bb\u5806\u5185\u7684\u70b9\u7684\u4e2a\u6570\u4e3a\u8f7b\u513f\u5b50\u4e2a\u6570  \n\u6240\u4ee5\u628a\u5b83\u8f6c\u6210\u4e8c\u53c9\u6811\u5c31\u4e0d\u7528\u5806\u6765\u7ef4\u62a4\u4e86\n\n#### \u60ca\u4e0d\u60ca\u559c\uff0c\u610f\u4e0d\u610f\u5916  \n\n\u7136\u540e\u5c31\u53ef\u4ee5\u4e00\u4e2a$log$\u6109\u5feb\u7684\u8fc7\u6389\u4e86\n\n\u5176\u5b9ebb\u4e86\u8fd9\u4e48\u4e00\u5927\u5806\uff0c\u4ee3\u7801\u5341\u5206\u597d\u5199  \n\n\u7801\u98ce\u4e11\uff0c\u5927\u4f6c\u8f7b\u55b7\n\n\u53e6\u5916\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c\u6211\u7684\u4e8c\u53c9\u67e5\u627e\u6811\u7ed3\u5408\u4e86\u7ebf\u6bb5\u6811\u7684\u7279\u70b9\uff0c(\u6709\u70b9\u50cf\u5b97\u6cd5\u6811)\n\n```\n#pragma GCC optimize(3)\n#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 1000000000;\nchar buf[1 << 20];\nchar *S = buf, *T = buf;\ninline char gc() {\n    if(S == T) T = buf + fread(buf, 1, 1 << 20, stdin), S = buf;\n    return S == T ? EOF : *S ++;\n}\ninline int read() {\n    int f = 1, c;\n    unsigned a = 0;\n    for(c = gc(); c != '-' && (c < '0' || c > '9'); c = gc());\n    if(c == '-') c = gc(), f = -1;\n    for(; c <= '9' && c >= '0'; c = gc()) a = (a << 1) + (a << 3) + (c ^ '0');\n    return f == 1 ? a : (~a) + 1;\n} // \u5feb\u901f\u8bfb\u5165\nint size[200010], wson[200010], lson[200010], lsize[200010], dep[200010];\nstruct node {\n    int ls, rs, ans, L, R, lmax, rmax, fa;\n} t[400010]; //\u4e8c\u53c9\u67e5\u627e\u6811\u7ed3\u6784\u4f53\nint nowcnt;\nint st[200010], cnt;//\u8bb0\u5f55\u5f53\u524d\u94fe\nint n, m;\nvector<pair<int, int> > son[100010];//\u8bb0\u5f55\u539f\u6811\ninline void addedge(int u, int v) {\n    if(wson[u] == 0) wson[u] = v;\n    else lson[u] = v;\n}\ninline void dfs(int now, int f) {//\u5efa\u7acb\u65b0\u6811\n    addedge(now + n, now);\n    for(int i = 0; i < son[now].size(); i++)\n        if(son[now][i].first == f) {\n            son[now].erase(son[now].begin() + i);\n            break;\n        }\n    for(int i = 0; i < son[now].size(); i++) dep[son[now][i].first + n] = dep[now], dep[son[now][i].first] = dep[now] + son[now][i].second, dfs(son[now][i].first, now);//\u5176\u5b9e\u6b64\u65f6dep\u5df2\u7ecf\u53ef\u4ee5\u6c42\u51fa\n    for(int i = 1; i < son[now].size(); i++) addedge(son[now][i - 1].first + n, son[now][i].first + n);\n    if(son[now].size()) addedge(now, son[now][0].first + n);\n}\ninline void dfs1(int now) {//\u6811\u5256\u7684\u7b2c\u4e00\u6b21dfs\n    size[now] = 1;\n    if(wson[now]) dfs1(wson[now]), size[now] += size[wson[now]];\n    if(lson[now]) dfs1(lson[now]), size[now] += size[lson[now]];\n    if(size[lson[now]] > size[wson[now]]) swap(lson[now], wson[now]);\n    lsize[now] = size[lson[now]] + 1; \n}\ninline int build(int l, int r) {//\u5bf9st[l...r]\u5efa\u7acb\u4e8c\u53c9\u6811\n    if(l == r) return t[st[l]].L = t[st[l]].R = st[l]; //\u6b64\u5904\u6709\u538b\u884c(\u9003)\n    int sum = 0, cnt = 0, ans;\n    for(int i = l; i <= r; i++) sum += lsize[st[i]];\n    sum >>= 1;\n    for(int i = l; i <= r; i++) {\n        cnt += lsize[st[i]];\n        if(cnt >= sum) {//\u627e\u5230\u91cd\u5fc3\n            if(i == l) i++;//\u8981\u662f\u4e0d\u52a0\uff0c\u54fc\u54fc\n            ans = ++nowcnt;\n            t[ans].ls = build(l, i - 1);\n            t[ans].rs = build(i, r);\n            t[t[ans].ls].fa = t[t[ans].rs].fa = ans;\n            t[ans].L = st[l], t[ans].R = st[r];\n            return ans;\n        }\n    }\n}\nint root;\ninline void dfs2(int now) {\n//st[1...cnt]\u4fdd\u5b58\u5f53\u524d\u94fe\uff0cst[0]\u4e3a\u94fe\u5934\u7684\u7236\u4eb2(\u4e3a0\u5219\u94fe\u5934\u4e3a\u6839)\n    st[++cnt] = now;\n    if(wson[now]) dfs2(wson[now]);\n    else {\n        int rt = build(1, cnt);\n        if(st[0] == 0) root = rt;\n        else t[rt].fa = st[0], t[st[0]].ls = t[st[0]].rs = rt;\n        cnt = 0;\n    }\n    st[0] = now;\n    if(lson[now]) dfs2(lson[now]);\n}\nint col[200010];\ninline void up(int x) {\n    node &now = t[x];\n    if(now.L == now.R) {//\u53f6\u5b50\u8282\u70b9\n        int D = t[now.ls].lmax + dep[lson[x]] - dep[x];//\u56e0\u4e3a\u662f\u4e8c\u53c9\u6811\uff0c\u6240\u4ee5\u4e0d\u4f1a\u6709D2\n        now.ans = t[now.ls].ans;\n        if(col[x]) now.ans = max(now.ans, now.lmax = now.rmax = max(D, 0));\n        else now.lmax = now.rmax = D;\n    }\n    else {//\u975e\u53f6\u5b50\u8282\u70b9\n        now.lmax = max(t[now.ls].lmax, t[now.rs].lmax + dep[t[now.rs].L] - dep[now.L]);\n        now.rmax = max(t[now.rs].rmax, t[now.ls].rmax + dep[now.R] - dep[t[now.ls].R]);\n        now.ans = max(max(t[now.ls].ans, t[now.rs].ans), t[now.ls].rmax + t[now.rs].lmax + dep[t[now.rs].L] - dep[t[now.ls].R]);\n    }\n}\ninline void init(int now) {\n    if(t[now].L == t[now].R) {\n        if(t[now].ls) init(t[now].ls);\n    }\n    else init(t[now].ls), init(t[now].rs);\n    up(now);\n}\nint main() {\n    // freopen(\"hehezhou.in\", \"r\", stdin);\n    // freopen(\"hehezhou.out\", \"w\", stdout);\n    t[0].lmax = t[0].ans = t[0].rmax = -inf;\n    n = read();\n    for(int i = 1, u, v, w; i < n; i++) u = read(), v = read(), w = read(), son[u].push_back(make_pair(v, w)), son[v].push_back(make_pair(u, w));\n    dfs(1, 0);\n    nowcnt = n << 1;\n    dfs1(n + 1);\n    dfs2(n + 1);\n    // for(int i = 1; i <= n << 1; i++) printf(\"%d %d\\n\", wson[i], lson[i]);\n    for(int i = 1; i <= n; i++) col[i] = 1;\n    // for(int i = 1; i <= nowcnt; i++) printf(\"%d : ls = % d, rs = %d, fa = %d, L = %d, R = %d\\n\", i, t[i].ls, t[i].rs, t[i].fa, t[i].L, t[i].R);\n    init(root);\n    nowcnt = n;//\u5728\u8fd9\u4e4b\u524d\u8868\u793a\u4e8c\u53c9\u641c\u7d22\u6811\u8282\u70b9\u5f53\u524d\u4f7f\u7528\u91cf\uff0c\u4e4b\u540e\u8868\u793a\u767d\u70b9\u4e2a\u6570\n    m = read();\n    for(int i = 1; i <= m; i++) {\n        char opt;\n        for(opt = gc(); opt != 'C' && opt != 'A'; opt = gc());\n        if(opt == 'A') nowcnt ? printf(\"%d\\n\", t[root].ans) : puts(\"They have disappeared.\");\n        else {\n            int v;\n            v = read();\n            if((col[v] ^= 1) == 0) nowcnt--;//\u538b\u884c\u5927\u6cd5\u597d\n            else nowcnt++;\n            for(; v; v = t[v].fa) up(v);\n        }\n    }\n    return 0;//\u5b8c\u7ed3\u6492\u82b1\n}\n```\n\u6700\u540e\u795d\u5927\u5bb6$rp$++",
        "postTime": 1558509367,
        "uid": 67371,
        "name": "hehezhou",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4115 \u3010Qtree4\u3011"
    },
    {
        "content": "\u9898\u610f:\u95ee\u6811\u4e0a\u6700\u8fdc\u767d\u8272\u70b9\u5bf9,\u5e26\u4fee\u6539\n\n\u8003\u8651\u70b9\u5206\u6cbb,\u6bcf\u6b21\u5206\u6cbb\u65f6\u627e\u5230\u6bcf\u68f5\u5b50\u6811\u6df1\u5ea6\u6700\u5927\u7684\u4e00\u4e2a\u767d\u70b9,\u7528\u6700\u5927\u7684\u4e24\u4e2a\u7edf\u8ba1\u4e00\u4e0b\u5373\u53ef.\u7136\u540e\u5efa\u7acb\u51fa\u70b9\u5206\u6811 \n\n\u8003\u8651\u66b4\u529b\u4e00\u70b9,\u5728\u6bcf\u4e2a\u70b9\u5f00\u4e24\u4e2a\u5806\n\n\u7b2c\u4e00\u4e2a\u5806\u63d2\u5165\u8fd9\u4e2a\u91cd\u5fc3\u7ba1\u8f96\u7684\u4e00\u5768\u6811\u6240\u6709\u767d\u70b9\u5230\u5206\u6cbb\u6811\u4e0a\u8fd9\u4e2a\u70b9\u7236\u4eb2\u7684\u8ddd\u79bb\n\n\u7b2c\u4e8c\u4e2a\u5806\u63d2\u5165\u6240\u6709\u70b9\u5206\u6cbb\u6811\u4e0a\u5b69\u5b50\u7684\u5806\u9876,\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u5206\u6cbb\u91cd\u5fc3,\u627e\u5230\u5206\u5c5e\u4e24\u68f5\u5b50\u6811\u7684\u6df1\u5ea6\u6700\u5927\u7684\u4e24\u4e2a\u767d\u70b9,\u5373\u8fd9\u4e2a\u70b9\u5806\u7684\u6700\u5927\u548c\u6b21\u5927\u503c\n\n\u6ce8\u610f\u4e00\u5f00\u59cb\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u91cd\u5fc3\u8981\u5728\u81ea\u5df1\u7b2c\u4e8c\u4e2a\u5806\u91cc\u628a\u81ea\u5df1\u63d2\u5165(\u56e0\u4e3a\u81ea\u5df1\u4e5f\u662f\u767e\u70b9,\u800c\u4e14\u6ca1\u6709\u7edf\u8ba1)\n\n\u7136\u540e\u8981\u8bb0\u5f55\u7b54\u6848\u7684\u8bdd\u5c31\u8fd8\u8981\u518d\u5f00\u4e00\u4e2a\u5806\n\n\u4fee\u6539\u5c31\u53ea\u8981\u518d\u70b9\u5206\u6811\u4e0a\u4ece\u81ea\u5df1\u7684\u91cd\u5fc3\u5f80\u6839\u8d70,\u7136\u540e\u7ef4\u62a4\u4e00\u4e0b\u90a3\u4e9b\u5806\u5373\u53ef,\u6ce8\u610f\u5224\u65ad\u6761\u4ef6\u7279\u522b\u591a \n\n\u590d\u6742\u5ea6\u662f$O(n\\log^2n)$\u7684,\u4fee\u6539\u641e\u4e00\u4e2a\u53ef\u4ee5\u5220\u9664\u7684\u5806\u5c31\u597d\u4e86 \n\n\u4f46\u662f\u7279\u522b\u6ce8\u610f,\u8fd9\u9053\u9898\u6709\u8d1f\u8fb9,\u6240\u4ee5\u5806\u7a7a\u5806\u9876\u4e0d\u662f$0$\u800c\u662f$-inf$\n\n\u7136\u540e\u8fd9\u9898\u662f$[ZJOI2007]Hide$\u6349\u8ff7\u85cf\u7684\u52a0\u5f3a\u7248\n\n\u4e00\u4e9b\u5b9e\u73b0\u7684\u7ec6\u8282\u770b\u4ee3\u7801\u5427(\u8fd9\u9898\u8fd8\u53ef\u4ee5\u6811\u5256,\u4f1a\u5feb\u4e00\u4e9b)\n\n```\n#include<bits/stdc++.h>\n#define fp(i,a,b) for(int i=a,I=b;i<=I;++i)\n#define go(i,u) for(int i=fi[u],v=e[i].to;i;v=e[i=e[i].nx].to)\n#define file(s) freopen(s\".in\",\"r\",stdin),freopen(s\".out\",\"w\",stdout)\ntemplate<class T>inline bool chkmax(T&a,const T&b){return a<b?a=b,1:0;}\nusing namespace std;\nchar ss[1<<17],*A=ss,*B=ss;\ninline char gc(){return A==B&&(B=(A=ss)+fread(ss,1,1<<17,stdin),A==B)?-1:*A++;}\ntemplate<class T>inline void sd(T&x){\n    char c;T y=1;while(c=gc(),(c<48||57<c)&&c!=-1)if(c==45)y=-1;x=c^48;\n    while(c=gc(),47<c&&c<58)x=(x<<1)+(x<<3)+(c^48);x*=y;\n}\nchar sr[1<<21],z[20];int C=-1,Z;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\ntemplate<class T>inline void we(T x){\n    if(x<0)sr[++C]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]='\\n';\n    if(C>1<<20)Ot();\n}\ninline void ge(){strcat(sr,\"They have disappeared.\\n\");C+=23;}\nconst int N=1e5+5,inf=1e9;\ntypedef int arr[N];\nstruct eg{int nx,to,w;}e[N<<1];\nstruct Hp{\n    priority_queue<int>s,t;int sz;\n    inline void pop(int x){t.push(x);--sz;}\n    inline void push(int x){s.push(x);++sz;}\n    inline void pre(){while(t.size()&&s.top()==t.top())s.pop(),t.pop();}\n    inline int top(){return pre(),sz?s.top():-inf;}\n    inline int len(){\n    \tif(sz<2)return 0;\n        int x=top();pop(x);\n        int y=top();push(x);\n        return max(x+y,0);\n    }\n    inline void op(int x,int col){col?pop(x):push(x);}\n}a[N],b[N],ans;\nint n,m,ce,rt,tot,Sum,Top;arr S,fi,fx,fa,Fa,sz,son,col,top,len,dep,vis;\nvoid dfs(int u){\n    dep[u]=dep[fa[u]]+(sz[u]=1);\n    go(i,u)if(v^fa[u]){\n        fa[v]=u,len[v]=len[u]+e[i].w,\n        dfs(v),sz[u]+=sz[v];\n        if(sz[v]>sz[son[u]])son[u]=v;\n    }\n}\nvoid dfs(int u,int t){\n    top[u]=t;if(son[u])dfs(son[u],t);\n    go(i,u)if(v^fa[u]&&v^son[u])dfs(v,v);\n}\ninline int lca(int u,int v){\n    for(;top[u]^top[v];dep[top[u]]>dep[top[v]]?u=fa[top[u]]:v=fa[top[v]]);\n    return dep[u]<dep[v]?u:v;\n}\ninline int dis(int u,int v){return len[u]+len[v]-(len[lca(u,v)]<<1);}\nvoid gr(int u,int fa){\n    fx[u]=0,sz[u]=1;S[++Top]=u;\n    go(i,u)if(!vis[v]&&v^fa)gr(v,u),sz[u]+=sz[v],chkmax(fx[u],sz[v]);\n    chkmax(fx[u],Sum-sz[u]);if(fx[u]<fx[rt])rt=u;\n}\nint sol(int u){\n    int p=Fa[u],son;vis[u]=1;b[u].push(0); \n    if(p)fp(i,1,Top)a[u].push(dis(p,S[i]));\n    go(i,u)if(!vis[v]){\n        Sum=sz[v],gr(v,Top=rt=0),Fa[rt]=u,son=sol(rt);\n        b[u].push(a[son].top());\n    }return ans.push(b[u].len()),u;\n}\ninline void mdy(int x,int cl){\n    int l1=b[x].len(),l2,s1,s2;b[x].op(0,cl);\n    if(l1^(l2=b[x].len()))ans.pop(l1),ans.push(l2);\n    for(int u=x,p=Fa[x];p;p=Fa[u=p]){\n        s1=a[u].top(),a[u].op(dis(p,x),cl),s2=a[u].top();\n        if(s1==s2)continue;\n        l1=b[p].len();if(s1!=-inf)b[p].pop(s1);if(s2!=-inf)b[p].push(s2);\n        l2=b[p].len();if(l1^l2)ans.pop(l1),ans.push(l2);\n    }\n}\ninline void add(int u,int v,int w){e[++ce]=eg{fi[u],v,w};fi[u]=ce;}\nint main(){\n    #ifndef ONLINE_JUDGE\n        file(\"s\");\n    #endif\n    sd(n);int u,v,w;fx[0]=N;tot=n;\n    fp(i,2,n)sd(u),sd(v),sd(w),add(u,v,w),add(v,u,w);\n    dfs(1),dfs(1,1),Sum=n;gr(1,0),sol(rt);sd(m);\n    while(m--){\n        char c;while(c=gc(),c<'A');\n        if(c=='A')\n            tot?we(tot==1?0:ans.top()):ge();\n        else{\n            sd(u);tot+=col[u]?1:-1;\n            col[u]^=1,mdy(u,col[u]);\n        }\n    }\nreturn Ot(),0;\n}\n\n```",
        "postTime": 1519299465,
        "uid": 20156,
        "name": "Kelin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4115 \u3010Qtree4\u3011"
    },
    {
        "content": "\n**\u73b0\u5728\u5df2\u7ecf\u6309\u7167\u9898\u89e3\u89c4\u8303\u4fee\u6539\u9898\u89e3\uff0c\u6c42\u8fc7\u3002**\n\n**\u6211\u8ba4\u771f\u4ed4\u7ec6\u7684\u68c0\u67e5\u4e86\u6bcf\u4e00\u4e2a\u7a7a\u683c\uff0c\u771f\u7684\u9ebb\u70e6\u7ba1\u7406\u5458\u5927\u5927\u7533\u56db\u6b21\u849f\u84bb\u7684\u9898\u89e3**\n\n**\u771f\u7684\u592a\u611f\u8c22\u7ba1\u7406\u5458\u5927\u5927\u4e00\u70b9\u4e00\u70b9\u6307\u51fa\u6211\u7684\u5c0f\u9519\u8bef\uff0c\u5b9e\u5728\u662f\u592a\u8c22\u8c22\u4e86**\n\n\u4ee5\u4e0b\u505a\u6cd5\u6765\u81ea [\u6f06\u5b50\u8d85 \u300a\u5206\u6cbb\u7b97\u6cd5\u5728\u6811\u7684\u8def\u5f84\u95ee\u9898\u4e2d\u7684\u5e94\u7528\u300b](https://wenku.baidu.com/view/a028126e6d175f0e7cd184254b35eefdc9d31575.html)\n\n\u672c\u9898\u8fd0\u7528\u7ebf\u6bb5\u6811\u548c\u6811\u5256\u548c\u5e73\u8861\u6811\u5b9e\u73b0\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u6811\u5256\u89c6\u4e3a**\u57fa\u4e8e\u94fe\u7684\u5206\u6cbb\u7b97\u6cd5**\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7c7b\u4f3c\u70b9\u5206\u6cbb\u7684\u7b97\u6cd5\u3002\n\n\u5047\u5982\u6211\u4eec\u73b0\u5728\u67e5\u8be2\u5230\u4e00\u6761\u94fe\u3002\u90a3\u4e48\u6811\u4e0a\u8def\u5f84\u53ea\u4f1a\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\u3002\n\n1. \u7ecf\u8fc7\u8fd9\u6761\u94fe\u3002\n\n2. \u4e0d\u7ecf\u8fc7\u3002\n\n\u4e0d\u7ecf\u8fc7\u7684\u8bdd\u76f4\u63a5\u9012\u5f52\u5373\u53ef\u3002\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u5c31\u8981\u5904\u7406\u7ecf\u8fc7\u7684\u60c5\u51b5\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e00\u6761\u94fe\u7ef4\u62a4\u4e00\u9897\u7ebf\u6bb5\u6811\uff08\u8981\u52a8\u6001\u5f00\u70b9\uff0c\u4e0d\u7136\u4f1a\u70b8\u7a7a\u95f4\uff09\u3002\n\n\u4e3a\u4e86\u66f4\u65b9\u4fbf\u63cf\u8ff0\uff0c\u6211\u4eec\u5b9a\u4e49 $d_x$ \u8868\u793a $x$ \u5230\u5176\u5b50\u6811\u7684\u4e00\u4e2a\u767d\u70b9\u7684\u6700\u957f\u8ddd\u79bb\u3002 $dis(i,j)$ \u8868\u793a\u8282\u70b9 $i$ \u5230 $j$ \u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\n\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u8bbe\u5176\u7ef4\u62a4\u7684\u533a\u95f4\u662f $[l,r]$\uff0c\u6211\u4eec\u8003\u8651\u7ef4\u62a4\u4e09\u4e2a\u503c\u3002\n\n1. $lv=\\max_{l \\leq x \\leq r}(dis(l,x)+d_x)$  \u5373\u4e0b\u56fe\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/jj7foptn.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n2. $rv=\\max_{l \\leq x \\leq r}(dis(x,r)+d_x)$  \u5373\u4e0b\u56fe\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zrp5pa3y.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n3. $mv$ \u4e0e\u5f53\u524d\u533a\u95f4\u91cd\u5408\u7684\u6240\u6709\u8def\u5f84\u7684\u6700\u957f\u957f\u5ea6\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5982\u4f55\u66f4\u65b0\u7236\u4eb2\u8282\u70b9\u7684\u4fe1\u606f \uff08push_up\uff09\u3002\n\n\u5047\u8bbe\u8282\u70b9 $p$ \u7684\u5de6\u53f3\u4e24\u4e2a\u513f\u5b50\u5206\u522b\u662f $ls_p$,$rs_p$ \u7ef4\u62a4\u533a\u95f4\u662f $[l,r]$ \u90a3\u4e48\u5c31\u6709 $mid=\\frac{l+r}{2}$\u3002\n\n1. $lv_p=\\max(lv_{ls_p},dis(l,mid+1)+lv_{rs_p})$ \u5373\u4e0b\u56fe\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/e9eaf862.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n2. $rv_p=\\max(rv_{rs_p},dis(r,mid)+rv_{ls_p})$ \u540c\u4e0a\n\n3. $mv_p=\\max\\left(\\max(mv_{ls_p},mv_{rs_p}),rv_{ls_p}+dis(mid,mid+1)+lv_{rs_p}\\right)$ \n\n\u5373\u4e0b\u56fe\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/sge9byyx.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u90a3\u4e48\u5c31\u8981\u8003\u8651\u8fb9\u754c\u6761\u4ef6\u3002\n\n\u5f53\u4e00\u4e2a\u8282\u70b9 $p$ \u7ef4\u62a4\u533a\u95f4 $[l,l]$ \u65f6\n\n\u5047\u5982\u5176\u662f\u767d\u70b9\uff1a\n\n$lv_p=rv_p=\\max(0,d_l)$\n\n\u8fd9\u65f6\uff0c\u8003\u8651\u5230\u7ecf\u8fc7\u8fd9\u4e2a\u70b9\u7684\u8def\u5f84\u53ef\u80fd\u4f1a\u5f80\u4e0b\u62d0\u3002\u6240\u4ee5\u6211\u4eec\u5b9a\u4e49 $d2[x]$ \u8868\u793a $x$ \u5230\u5176\u5b50\u6811\u7684\u4e00\u4e2a\u767d\u70b9\u7684\u6b21\u957f\u8ddd\u79bb\u3002\n\n\u6240\u4ee5 $mv_p=\\max(0,\\max(d_l,d_l+d2_l))$\u3002\n\n\u5047\u5982\u5176\u662f\u9ed1\u70b9\uff1a\n\n $lv_p=rv_p=d_l$\n\n $mv_p=d_l+d2_l$\n\n\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u6765\u7ef4\u62a4\u6b21\u957f\u548c\u6700\u957f\u5462\uff1f\n\n\u9996\u5148\u770b\u5982\u4f55\u627e\u5230\u3002\n\n\u663e\u7136\uff0c\u8981\u8d70\u5230\u67d0\u4e2a\u767d\u70b9\uff0c\u5fc5\u7136\u8d70\u5230\u5176\u975e\u91cd\u513f\u5b50\u7684\u8282\u70b9\u3002\u6240\u4ee5\u76f4\u63a5\u8003\u8651\u7528\u90a3\u4e9b\u8f7b\u513f\u5b50\u7684\u4fe1\u606f\u6765\u5bfb\u627e\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u90a3\u4e9b\u8f7b\u513f\u5b50\u53c8\u662f\u4e00\u6761\u91cd\u94fe\u7684\u5f00\u7aef\uff0c\u8981\u7ecf\u8fc7\u8fd9\u4e2a\u91cd\u94fe\u7684\u5f00\u7aef\u5e76\u5f80\u4e0b\u8d70\u6700\u957f\u7684\u8ddd\u79bb\uff0c\u90a3\u4e0d\u5c31\u662f\u7ef4\u62a4\u8fd9\u4e2a\u94fe\u7684\u7ebf\u6bb5\u6811\u6839\u8282\u70b9\u7684\u7684 $lv$ \u5417\uff1f\n\n\u8fd9\u6837\u6240\u6709\u957f\u5ea6\u90fd\u5f97\u4ee5\u8ba1\u7b97\uff0c\u53ef\u4ee5\u7528\u5806\u6765\u7ef4\u62a4\uff0c\u4f46\u662f\u7531\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u4eec\u8fd8\u662f\u8981\u4f7f\u7528\u5e73\u8861\u6811\u3002\n\n\u4fee\u6539\u64cd\u4f5c\n\n\u5f53\u4e00\u4e2a\u70b9\u88ab\u4fee\u6539\u65f6\uff0c\u5bf9\u4e8e\u5176\u6240\u5904\u94fe\u7684\u4fe1\u606f\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u6765\u4fee\u6539\u5373\u53ef\u3002\n\n\u5173\u952e\u662f\u5728\u5176\u94fe\u4e4b\u5916\u7684\u4fe1\u606f\u53d7\u5230\u7684\u5f71\u54cd\u3002\u6211\u4eec\u53ef\u4ee5\u5f88\u663e\u7136\u7684\u53d1\u73b0\uff0c\u4e00\u4e2a\u70b9\u88ab\u4fee\u6539\uff0c\u53ea\u4f1a\u5f71\u54cd\u5176\u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u4e00\u4e2a\u91cd\u94fe\uff0c\u4e00\u4e2a\u91cd\u94fe\u7684\u5f80\u4e0a\u8df3\u3002\n\n\u6ce8\u610f\u6211\u4eec\u5728\u521d\u59cb\u5316\u5806\u7684\u65f6\u5019\uff0c\u6211\u4eec\u81ea\u4e0a\u81f3\u5e95\u662f\u7528\u7236\u4eb2\u627e\u5176\u513f\u5b50\u7684 $lv$ ,\u73b0\u5728\u6211\u4eec\u513f\u5b50\u7684 $lv$ \u6539\u53d8\u4e86\uff0c\u8981\u66f4\u65b0\u7238\u7238\u3002\u6240\u4ee5\u73b0\u5728\u7238\u7238\u7684\u5806\u91cc\u5220\u53bb\u539f\u672c\u7684\u8d21\u732e\u3002\u7136\u540e\u518d\u4fee\u6539\u65f6\u628a\u65b0\u7684\u8d21\u732e\u52a0\u5165\u5806\uff0c\u7136\u540e\u53d6\u6700\u5927\u6b21\u5927\u66f4\u65b0\u4fe1\u606f\u3002\u6240\u4ee5\u6211\u4eec\u8981\u8bb0\u5f55\u4e00\u4e2a $last$ \u8868\u793a\u4fee\u6539\u65f6\u662f\u4ece\u54ea\u4e00\u6761\u94fe\u8df3\u4e0a\u6765\u7684\u3002\n\n\u4e0a\u9762\u7684\u601d\u8def\u8981\u6c42\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u652f\u6301\u5220\u9664\u4efb\u610f\u503c\u7684\u5806\uff0c\u6709\u70b9\u96be\u4ee5\u5b9e\u73b0\uff0c\u6240\u4ee5\u6211\u7528\u4e86  multiset\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\u5427\u3002\u53e6\u5916\u6ce8\u610f\u4ee5\u4e0a\u7684 $[l,r]$ \u90fd\u662f\u65b0\u7f16\u597d\u540e\u7684\u7f16\u53f7\uff0c\u67e5\u8be2\u8282\u70b9\u4fe1\u606f\u65f6\u8bb0\u5f97\u6620\u5c04\u56de\u53bb\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define N 100005\n#define INF 0x3f3f3f3f\nusing namespace std;\nint n,m,root[N],w[N];\nint head[N],idx;\nint size[N],fa[N],top[N],seg[N],rev[N],son[N],cnt,len[N],dep[N],sum;\nstruct edge{\n\tint v,next,c;\n}e[2*N];\nvoid add(int u,int v,int c){\n\te[++idx].v=v;\n\te[idx].next=head[u];\n\thead[u]=idx;\n\te[idx].c=c;\n}\nint ls[N<<2],rs[N<<2],mv[N<<2],lv[N<<2],rv[N<<2],tot;\nstruct myheap{\n\tmultiset<int,greater<int> > s;\n\tvoid insert(int v){\n\t\ts.insert(v);\n\t}\n\tvoid del(int v){\n\t\tmultiset<int, greater<int> > :: iterator it=s.lower_bound(v);\n\t\tif(it!=s.end()) s.erase(it);\n\t}\n\tint top(){\n\t\tif(s.empty()) return -INF;\n\t\treturn *s.begin();\n\t}\n}h[N],ans;\nvoid dfs1(int x,int f){\n\tfa[x]=f;\n\tsize[x]=1;\n\tfor(int i=head[x];i;i=e[i].next){\n\t\tint y=e[i].v;\n\t\tif(y==f) continue;\n\t\tdep[y]=dep[x]+e[i].c;\n\t\tdfs1(y,x);\n\t\tsize[x]+=size[y];\n\t\tif(size[y]>size[son[x]]) son[x]=y;\n\t}\n}\nvoid dfs2(int x){\n\tif(x==son[fa[x]]) top[x]=top[fa[x]];\n\telse top[x]=x;\n\tlen[top[x]]++;//\u8bb0\u5f55\u957f\u5ea6 \n\tseg[x]=++cnt;\n\trev[cnt]=x;\n\tif(son[x]) dfs2(son[x]);\n\tfor(int i=head[x];i;i=e[i].next){\n\t\tint y=e[i].v;\n\t\tif(y==fa[x]||y==son[x]) continue;\n\t\tdfs2(y);\n\t}\n}\nvoid push_up(int p,int l,int r){\n\tint mid=(l+r)>>1;\n\tlv[p]=max(lv[ls[p]],dep[rev[mid+1]]-dep[rev[l]]+lv[rs[p]]);//\u6ce8\u610f\u6620\u5c04 \n\trv[p]=max(rv[rs[p]],dep[rev[r]]-dep[rev[mid]]+rv[ls[p]]);\n\tmv[p]=max(max(mv[ls[p]],mv[rs[p]]),rv[ls[p]]+dep[rev[mid+1]]-dep[rev[mid]]+lv[rs[p]]);\n}\nvoid build(int p,int l,int r){\n\tif(l==r){\n\t\tint x=rev[l];\n\t\tfor(int i=head[x];i;i=e[i].next){\n\t\t\tint y=e[i].v;\n\t\t\tif(y==fa[x]||y==son[x]) continue;\n\t\t\th[x].insert(lv[root[y]]+e[i].c);\n\t\t}\n\t\tint d1=h[x].top();\n\t\th[x].del(d1);\n\t\tint d2=h[x].top();\n\t\th[x].insert(d1);\n\t\tlv[p]=rv[p]=max(d1,0);\n\t\tmv[p]=max(0,max(d1,d1+d2));\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tif(!ls[p]) ls[p]=++tot;\n\tbuild(ls[p],l,mid);\n\tif(!rs[p]) rs[p]=++tot;\n\tbuild(rs[p],mid+1,r);\n\tpush_up(p,l,r);\n}\nvoid modify(int p,int l,int r,int x,int tp){\n\t\tif(l==r){\n\t\t\tif(x!=tp) h[x].insert(lv[root[tp]]+dep[tp]-dep[x]);\n\t\t\tint d1=h[x].top();\n\t\t\th[x].del(d1);\n\t\t\tint d2=h[x].top();\n\t\t\th[x].insert(d1);\n\t\t\tif(w[x]){ \n\t\t\t\tlv[p]=rv[p]=d1;\n\t\t\t\tmv[p]=d1+d2;\n\t\t\t} \n\t\t\telse{\n\t\t\t\tlv[p]=rv[p]=max(d1,0);\n\t\t\t\tmv[p]=max(0,max(d1,d1+d2));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tif(seg[x]<=mid) modify(ls[p],l,mid,x,tp);\n\t\telse modify(rs[p],mid+1,r,x,tp);\n\t\tpush_up(p,l,r);\n}\nvoid change(int x){\n\tint last=x; //\u8bb0\u5f55\u4e0a\u4e00\u4e2atop[x] \n\twhile(x){\n\t\tint tp=top[x];\n\t\tint p1=mv[root[tp]];\n\t\tif(fa[tp]) h[fa[tp]].del(lv[root[tp]]+dep[tp]-dep[fa[tp]]);\n\t\tmodify(root[tp],seg[tp],seg[tp]+len[tp]-1,x,last);\n\t\tint p2=mv[root[tp]];\n\t\tif(p1!=p2){//\u4fee\u6539\u64cd\u4f5c \n\t\t\tans.del(p1);\n\t\t\tans.insert(p2);\n\t\t}\n\t\tlast=tp;\n\t\tx=fa[top[x]];\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;i++){\n\t\tint x,y,w;\n\t\tscanf(\"%d%d%d\",&x,&y,&w);\n\t\tadd(x,y,w);\n\t\tadd(y,x,w);\n\t}\n\tdfs1(1,0);\n\tdfs2(1);\n\tfor(int i=n;i>=1;i--){//\u4ece\u540e\u5f80\u524d\uff0c\u4fdd\u8bc1\u5b50\u8282\u70b9\u7684\u7ebf\u6bb5\u6811\u66f4\u65b0\u5b8c\u6bd5\u3002 \n\t\tint x=rev[i];\n\t\tif(x==top[x]){\n\t\t\tif(!root[x]) root[x]=++tot;\n\t\t\tbuild(root[x],seg[x],seg[x]+len[x]-1);\n\t\t\tans.insert(mv[root[x]]);\n\t\t}\n\t}\n\tscanf(\"%d\",&m);\n\tsum=n;\n\twhile(m--){\n\t\tstring op;\n\t\tcin>>op;\n\t\tint u;\n\t\tif(op[0]=='C'){\n\t\t\tscanf(\"%d\",&u);\n\t\t\tw[u]^=1;\n\t\t\tif(w[u]==0) sum++;\n\t\t\telse sum--;\n\t\t\tchange(u); \n\t\t}\n\t\telse{\n\t\t\tif(sum==0) puts(\"They have disappeared.\");\n\t\t\telse printf(\"%d\\n\",ans.top());\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1614133158,
        "uid": 128870,
        "name": "chen_qian",
        "ccfLevel": 7,
        "title": "P4115"
    },
    {
        "content": "#### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5\u6811\u548c\u4e00\u4e2a\u70b9\u96c6\uff0c\u6811\u6709\u8fb9\u6743\uff0c\u53ef\u4ee5\u4e3a\u8d1f\uff0c\u8981\u6c42\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n+ \u70b9\u96c6\u589e\u5220\u4e00\u4e2a\u70b9\n+ \u8be2\u95ee\u70b9\u96c6\u91cc\u8ddd\u79bb\u6700\u8fdc\u7684\u4e24\u4e2a\u70b9\uff0c\u53ef\u4ee5\u662f\u540c\u4e00\u4e2a\n\n\u6570\u636e\u8303\u56f4 $n\\le 10^5,q\\le 2\\times 10^5$\n\n#### \u5206\u6790\n\n\u7531\u4e8e\u8fb9\u6743\u53ef\u80fd\u662f\u8d1f\u7684\uff0c\u6240\u4ee5\u6c42\u76f4\u5f84\u7684\u8d2a\u5fc3\u505a\u6cd5\u90fd\u662f\u4e0d\u6210\u7acb\u7684\u3002\n\n\u6211\u4eec\u8003\u8651 dp \u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u5185\u7684\u6700\u5927\u6df1\u5ea6\uff0c\u76f4\u63a5 dp \u80af\u5b9a\u662f\u4e0d\u884c\u7684\u3002\n\n\u7b2c\u4e00\u79cd\u64cd\u4f5c\u6bcf\u6b21\u53ea\u4f1a\u589e\u5220\u4e00\u4e2a\u70b9\uff0c\u56e0\u6b64\u6bcf\u4e2a\u70b9\u51fa\u73b0\u7684\u65f6\u523b\u90fd\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u4e14\u533a\u95f4\u603b\u4e2a\u6570\u662f $\\mathcal{O}\\left(n\\right)$ \u7684\u3002\n\n\u8003\u8651\u5c06 dp \u6570\u7ec4\u653e\u5230\u4ee5\u65f6\u95f4\u4e3a\u503c\u57df\u7684\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\uff0c\u6bcf\u6b21 dp \u65f6\u5c06\u7ebf\u6bb5\u6811\u76f4\u63a5\u5408\u5e76\u3002\n\n\u76f4\u63a5\u5c06\u533a\u95f4\u4fee\u6539\u7684\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684\u6807\u8bb0\u6c38\u4e45\u5316\uff0c\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u5728\u8fd9\u6bb5\u65f6\u95f4\u533a\u95f4\u5185\u7684\u6700\u5927\u6df1\u5ea6\u3002\n\n\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u4ee5\u4e0b\u4e09\u4e2a\u4fe1\u606f\uff1a\n\n1. $max\\_ans$ \uff0c\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u7684\u6240\u6709\u5386\u53f2\u65f6\u523b\u7684\u7b54\u6848\u6700\u5927\u503c\uff0c\u5373 $dp$ \u65f6\u5b50\u6811\u5185\u7684\u76f4\u5f84\u6700\u5927\u503c\n2. $tag$ \uff0c\u8868\u793a\u6240\u6709\u6c38\u4e45\u5316\u7684\u8fd9\u4e2a\u8282\u70b9\u4e0a\u7684\u6807\u8bb0\u4e2d\u7684\u6700\u5927\u503c\uff0c\u5373\u4e00\u4e2a\u70b9\u96c6\u5728\u8fd9\u6bb5\u65f6\u95f4\u533a\u95f4\u5185\u7684\u6700\u5927\u6df1\u5ea6\uff0c$dp$ \u65f6\u5b50\u6811\u5185\u7684\u6df1\u5ea6\u6700\u5927\u503c\n3. $pushdown\\_tag$ \u8868\u793a\u5386\u53f2\u65f6\u523b\u4e2d\u7236\u94fe\u4e0a\u5408\u5e76\u8fc7 $tag$ \u7684\u6700\u5927\u503c\uff0c\u7528\u4e8e\u4e0b\u4f20\u7684\u6807\u8bb0\n\n\u4e0a\u9762\u8fd9\u4e9b\u6807\u8bb0\u7528\u4e8e\u6a21\u62df $Ans\\leftarrow\\max\\left(Ans,f_u+f_v-2dep_u\\right)$ \u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u6bcf\u6b21 $pushdown$ \u65f6 $max\\_ans\\leftarrow \\max\\left(max\\_ans,tag+pushdown\\_tag\\right)$\n\n\u6bcf\u6b21\u5408\u5e76\u4e24\u4e2a\u8282\u70b9 $u,v$ \u65f6\uff0c\u628a $u,v$ \u7684\u6bcf\u4e2a\u8282\u70b9\u5728\u53e6\u5916\u4e00\u68f5\u6811\u4e2d\u5bf9\u5e94\u7684\u7236\u94fe\u4fe1\u606f\u66f4\u65b0\u5230\u8fd9\u4e2a\u8282\u70b9\u4e0a\u53bb\u3002\n\n\u5047\u8bbe\u6b64\u65f6 $mx$ \u8868\u793a\u5bf9\u5e94\u7684\u7236\u94fe\u4fe1\u606f\n\n\u90a3\u4e48 $max\\_ans\\leftarrow \\max\\left(max\\_ans,mx+tag-2dep\\right)$ $pushdown\\_tag\\leftarrow \\max\\left(pushdown\\_tag,mx-2dep\\right)$\n\n#### Code\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <vector>\nusing namespace std;\nconstexpr int N=100010,M=4000010;\ntypedef long long ll;\nconstexpr ll inf=2e18;\nstruct _z{\n\tint c[2];\n\tll mxa,tg,pdtg;\n}z[M];int cnt;\nvoid upd(int &u,int cl,int cr,int ql,int qr,ll v){\n\tif(!u){u=++cnt;z[u].mxa=z[u].tg=z[u].pdtg=-inf;}if(cl>=ql && cr<=qr){z[u].tg=max(z[u].tg,v);return;}\n\tint mid=(cl+cr)>>1;if(ql<=mid) upd(z[u].c[0],cl,mid,ql,qr,v);if(qr>mid) upd(z[u].c[1],mid+1,cr,ql,qr,v);\n}\nvoid add(int u,ll v){z[u].mxa=max(z[u].mxa,z[u].tg+v),z[u].pdtg=max(z[u].pdtg,v);}\nvoid pd(int u){if(z[u].pdtg!=-inf){if(z[u].c[0]) add(z[u].c[0],z[u].pdtg);if(z[u].c[1]) add(z[u].c[1],z[u].pdtg);z[u].pdtg=-inf;}}\nint merge(int u,int v,int cl,int cr,ll mxu,ll mxv,ll bs){\n\tif(!u && !v) return 0;if(!u){add(v,mxu);return v;}if(!v){add(u,mxv);return u;}\n\tmxu=max(mxu,bs+z[u].tg),mxv=max(mxv,bs+z[v].tg);add(u,mxv);add(v,mxu);pd(u),pd(v);\n\tz[u].mxa=max(z[u].mxa,z[v].mxa),z[u].tg=max(z[u].tg,z[v].tg);int mid=(cl+cr)>>1;\n\tz[u].c[0]=merge(z[u].c[0],z[v].c[0],cl,mid,mxu,mxv,bs);z[u].c[1]=merge(z[u].c[1],z[v].c[1],mid+1,cr,mxu,mxv,bs);return u;\n}\nint rt[N],m,cur[N],ct,n;ll dep[N],ans[N];\nvector<pair<int,int> > es[N];\nvoid dfs(int u,int fa){\n\tfor(auto v:es[u]) if(v.first!=fa)\n\t\tdep[v.first]=dep[u]+v.second,dfs(v.first,u);\n}\nvoid dfs2(int u,int fa){\n\tfor(auto v:es[u]) if(v.first!=fa)\n\t\tdfs2(v.first,u),rt[u]=merge(rt[u],rt[v.first],1,m,-inf,-inf,-2ll*dep[u]);\n}\nchar s[5];bool nok[N];\nvector<pair<int,int> > ss[N];\nvoid solve(int u,int cl,int cr,ll curm){\n\tif(u) pd(u);int mid=(cl+cr)>>1;curm=max(curm,z[u].mxa);\n\tif(cl==cr){ans[cl]=curm;return;}solve(z[u].c[0],cl,mid,curm);solve(z[u].c[1],mid+1,cr,curm);\n}\nint main(){\n\tscanf(\"%d\",&n);ct=n;\n\tfor(int i=1;i<=n;++i)\n\t\tcur[i]=1;\n\tfor(int i=1,u,v,w;i<n;++i)\n\t\tscanf(\"%d%d%d\",&u,&v,&w),es[u].push_back(make_pair(v,w)),es[v].push_back(make_pair(u,w));\n\tdfs(1,0);\n\tint q;scanf(\"%d\",&q);\n\tfor(int i=1,t;i<=q;++i){\n\t\tscanf(\"%s\",s);\n\t\tif(s[0]=='A'){++m;nok[m]=(ct==0);}\n\t\telse{\n\t\t\tscanf(\"%d\",&t);\n\t\t\tif(cur[t]){\n\t\t\t\t--ct;if(cur[t]<=m) ss[t].push_back(make_pair(cur[t],m));\n\t\t\t\tcur[t]=0;\n\t\t\t}else{\n\t\t\t\t++ct;cur[t]=m+1;\n\t\t\t}\n\t\t}\n\t}\n\tif(!m) return 0;\n\tfor(int i=1;i<=n;++i){\n\t\tif(cur[i] && cur[i]<=m) ss[i].push_back(make_pair(cur[i],m));\n\t\tfor(auto v:ss[i])\n\t\t\tupd(rt[i],1,m,v.first,v.second,dep[i]);\n\t}\n\tdfs2(1,0);\n\tsolve(rt[1],1,m,0);\n\tfor(int i=1;i<=m;++i){\n\t\tif(nok[i]) printf(\"They have disappeared.\\n\");\n\t\telse printf(\"%lld\\n\",ans[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1646184299,
        "uid": 151623,
        "name": "xiaoyaowudi",
        "ccfLevel": 9,
        "title": "[\u9898\u89e3] Qtree4"
    },
    {
        "content": "## P4115 Qtree4\n\n\u8fd9\u9898\u600e\u4e48\u80fd\u5c11\u7684\u4e86$LCT$\u505a\u6cd5\u5462\uff1f\n\n\u4e00\u773c\u770b\u53bb\u89c9\u5f97\u548c\u52a8\u6001DP\u6709\u70b9\u50cf\uff0c\u4e8e\u662f\u60f3\u4e86\u534a\u5929\u9519\u8bef\u7684\u8f6c\u79fb...\n\n\n\n------------\n\n\u53ef\u4ee5\u5148\u53bb\u505a\u4e0b [P4719 \u3010\u6a21\u677f\u3011\u52a8\u6001dp](https://www.luogu.org/problemnew/show/P4719) \u7136\u540e\u518d\u56de\u6765\u505a\u8fd9\u9898\uff0c\u601d\u8def\u5dee\u4e0d\u591a\u3002\n\n\u4e0b\u9762\u5148\u628a\u53d8\u91cf\u5217\u51fa\u6765$:$\uff08\u5176\u5b9e\u770b\u61c2\u540e\u5c31\u4e0d\u96be...\uff09\n\n### \u4e00\u5b9a\u8981\u533a\u5206 \u539f\u6811 \u548c LCT\u6811 \u7684\u5173\u7cfb\n\n#### \u8fd8\u6709\u5c31\u662f\u6ce8\u610fLCT\u4e2dsplay\u662f\u6309\u7167\u6df1\u5ea6\u6392\u5e8f\u7684\uff0c\u5e76\u4e14\u6bcf\u4e2asplay\u4e0a\u7684\u8282\u70b9\u7684\u5b50\u6811\u5bf9\u5e94\u4e00\u6761\u94fe,\u7b2c\u4e00\u4e2a\u70b9\u4ee3\u8868\u94fe\u7684\u6700\u9876\u7aef\uff0c\u6700\u540e\u4e00\u4e2a\u70b9\u4ee3\u8868\u94fe\u7684\u6700\u5e95\u7aef\u3002\n\n$len[x]:$\u56e0\u4e3a\u662f\u8fb9\u6743\uff0c\u6240\u4ee5\u8981\u4e0b\u653e\u5230\u70b9\u3002  \n$lmax[x]:$\u5728splay\u4e2d\u4ee5$x$\u4e3a\u6839\u7684\u4ee5\u7b2c\u4e00\u4e2a\u70b9\u4e3a\u7aef\u70b9\u7684\u6700\u957f\u94fe  \n$rmax[x]:$\u5728splay\u4e2d\u4ee5$x$\u4e3a\u6839\u7684\u4ee5\u6700\u540e\u4e00\u4e2a\u70b9\u4e3a\u7aef\u70b9\u7684\u6700\u957f\u94fe(\n\u6ce8\uff1a\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u4e4b\u540e\u5408\u5e76\u65f6\u662f\u8fde\u7eed\u7684\uff0c\u56e0\u4e3ax\u7684\u53f3\u513f\u5b50\u7684\u7b2c\u4e00\u4e2a\u7aef\u70b9\u5728\u539f\u6811\u4e0a\u5fc5\u5b9a\u6328\u7740x\uff0c\u5de6\u513f\u5b50\u7684\u6700\u540e\u4e00\u4e2a\u4e5f\u662f\u6328\u7740x\u7684\u5e76\u4e14\u662fx\u7684\u7236\u4eb2\uff0c\u56e0\u4e3a\u662f\u8fb9\u6743\u4e0b\u653e\u5230\u70b9\uff0c\u540e\u9762\u4f1a\u51fa\u73b0\u5de6\u53f3\u513f\u5b50\u4e0d\u540c\u7684\u5730\u65b9  \n$ss[x]:ss[x]$\u4ee3\u8868splay\u4e2d\u4ee5$x$\u4e3a\u6839\u7684\u6700\u8fdc\u767d\u8272\u70b9\u5bf9  \n$sum[x]:$\u4ee3\u8868splay\u4e2d\u4ee5$x$\u4e3a\u6839\u7684\u6240\u6709\u70b9\u7684\u6743\u503c\u548c\uff0c\u6c42$lmax,rmax$\u8981\u7528\n\n$w[x]:$\u70b9\u4eae\u5c31\u662f$0$,\u5426\u5219\u662f$-inf$\n\n$hfir[x]:x$\u6240\u6709\u865a\u513f\u5b50\u4e2d\u7684$lmax$\u6700\u5927\u503c\uff08\u7528$multiset$\u5b58,$insert,erase$\u90fd\u66f4\u65b0\u4e00\u4e0b\uff0c\u662f\u4e3a\u4e86\u964d\u5e38\u6570\u624d\u8bb0\u4e0b\u6765\u7684\uff09\n\n$hsec[x]:x$\u6240\u6709\u865a\u513f\u5b50\u4e2d\u7684$lmax$\u6b21\u5927\u503c\n\n$pfir[x]:x$\u6240\u6709\u865a\u513f\u5b50\u4e2d$ss$\u7684\u6700\u5927\u503c\uff08\u53e6\u4e00\u4e2a$multiset$\u5b58\uff09\n\n#### \u6ce8\uff1a\u56e0\u4e3a\u865a\u513f\u5b50\u6216\u8005\u865a\u5b9e\u513f\u5b50\u8f6c\u5316\u65f6\u628a\u865a\u513f\u5b50\u66ff\u6362\u90fd\u662f\u6df1\u5ea6\u66f4\u5927\u7684\uff0c\u65e2\u7136\u6df1\u5ea6\u66f4\u5927\uff0c\u6211\u4eec\u8981\u8bb0\u7684\u5c31\u662f$lmax$\u624d\u4f1a\u4fdd\u8bc1\u8fde\u7eed\uff0c\u6240\u4ee5\u5b58\u7684\u662f$lmax$\n\n\u4e0a\u4ee3\u7801\n```cpp\n// luogu-judger-enable-o2\n#include <cstdio>\n#include <cstdlib>\n#include <set>\nusing namespace std;\n//inline int max(int a,int b){return a>b?a:b;}\nconst int N=100010,inf=1<<28;\nmultiset<int>h[N],p[N];\nint ch[N][2],fa[N],len[N],lmax[N],rmax[N],ss[N],sum[N],w[N],ans;\nint hfir[N],hsec[N],pfir[N];\ninline int fir(multiset<int>&s){return s.size()?*s.rbegin():-inf;}//\u6700\u5927 \ninline int sec(multiset<int>&s){return s.size()>1?*(++s.rbegin()):-inf;}//\u6b21\u5927 \ninline bool rt(int x){int y=fa[x];return (ch[y][0]!=x&&ch[y][1]!=x);}\n#define lc ch[x][0]\n#define rc ch[x][1]\ninline void Mo(int x){hfir[x]=fir(h[x]);hsec[x]=sec(h[x]);pfir[x]=fir(p[x]);}\ninline void pushup(int x){\n    sum[x]=sum[lc]+sum[rc]+len[x];\n    int cha=max(w[x],hfir[x]);\n    //lc:\u5de6\u513f\u5b50,\u6df1\u5ea6\u90fd\u6bd4x\u5c0f,rc\u76f8\u53cd \n    int L=max(cha,rmax[lc]+len[x]);\n    //\u8981\u52a0len[x]\u56e0\u4e3a\u662f\u4e0b\u653e\u8fc7\u6765\u7684,\u90a3\u4e48\u4ed6\u4e0a\u9762\u5305\u542b\u8fd9\u6761\u8fb9 \n    int R=max(cha,lmax[rc]);//\u4e0b\u9762\u4e0d\u542b\u8fd9\u6761\u8fb9 \n    lmax[x]=max(lmax[lc],sum[lc]+len[x]+R);//\u76f4\u63a5\u4ecelc\u7ee7\u627f,\u6216\u8005\u662f\u8de8\u8d8ax\u7684\u53f3\u8fb9\u6709\u4eae\u7684\u706f(\u6ca1\u6709\u7684\u8bddR=-inf,\u81ea\u7136\u4e0d\u4f1a\u7b97\u8fdb\u53bb) \n    rmax[x]=max(rmax[rc],sum[rc]+L);//\u540c\u4e0a,\u4f46\u662f\u56e0\u4e3a\u8fb9\u6743\u53d8\u70b9\u6743\u7684\u7f18\u6545,\u8fd9\u91cc\u8981\u6ce8\u610flen\u5728\u54ea\u91cc\u52a0,\u54ea\u91cc\u4e0d\u52a0 \n    //\u6ce8:lmax\u4e0d\u8981\u6c42\u5de6\u8fb9\u6709\u4eae\u706f,rmax\u4e5f\u662f,\u56e0\u4e3a\u53ea\u6709\u4e24\u8fb9\u90fd\u6709\u4eae\u706f\u624d\u4f1a\u8ba1\u7b97\u5728\u5185 \u5373\u4e0b\u4e00\u6b65 \n    ss[x]=max(rmax[lc]+len[x]+R,lmax[rc]+L);//\u8fd9\u4e2a\u5e94\u8be5\u4e0d\u96be\u7406\u89e3 \n    ss[x]=max(max(ss[lc],ss[rc]),ss[x]);\n    ss[x]=max(ss[x],hfir[x]+hsec[x]);//\u6240\u6709\u865a\u94fe\u4e2d\u6700\u957f+\u6b21\u957f \n    ss[x]=max(ss[x],pfir[x]);//\u6240\u6709\u865a\u94fe\u7684ss\u6700\u5927\u503c \n    if(w[x]==0)ss[x]=max(max(ss[x],hfir[x]),0);//\u672c\u8eab\u662f\u4eae\u706f,\u53ea\u8981\u6709\u4e00\u6761\u94fe\u5c31\u53ef\u4ee5\u8ba1\u7b97 \n}inline void rotate(int x){\n    int y=fa[x],z=fa[y],k=ch[y][1]==x;\n    if(!rt(y))ch[z][ch[z][1]==y]=x;fa[x]=z;\n    fa[ch[y][k]=ch[x][k^1]]=y;\n    ch[x][k^1]=y;fa[y]=x;pushup(y);\n}inline void splay(int x){\n    int y,z;\n    while(!rt(x)){\n        y=fa[x];z=fa[y];\n        if(!rt(y))(ch[y][1]==x)^(ch[z][1]==y)?rotate(x):rotate(y);\n        rotate(x);\n    }pushup(x);\n}inline void access(int x){\n    for(int y=0;x;x=fa[y=x]){\n        splay(x);\n        if(rc)h[x].insert(lmax[rc]),p[x].insert(ss[rc]);//rc\u4ece\u5b9e\u94fe\u53d8\u865a\u94fe,\u53bb\u6389\u5373\u53ef \n        if(y)h[x].erase(h[x].find(lmax[y])),p[x].erase(p[x].find(ss[y]));//\u52a0\u4e0a\u5373\u53ef \n        Mo(x);rc=y;pushup(x);//Mo(x)\u662f\u4e3a\u4e86\u964d\u4f4e\u5e38\u6570,\u4e0d\u7528\u6bcf\u6b21pushup\u7b97\u4e00\u6b21fir,sec\u4ec0\u4e48\u7684 \n    }\n}inline void modify(int x){\n    access(x);splay(x);\n    w[x]?w[x]=0:w[x]=-inf;//\u4eae\u706f\u4e3a0,\u706d\u706f\u4e3a-inf,\u65b9\u4fbf\u4e66\u5199,\u7701\u53bb\u5224\u65ad \n    pushup(x);ans=ss[x];\n}int n,T,d[N],nxt[N<<1],to[N<<1],cost[N<<1],tot;\ninline void ins(int a,int b,int c){to[++tot]=b;nxt[tot]=d[a];d[a]=tot;cost[tot]=c;}\ninline void dfs(int x){//dfs\u6574\u68f5\u6811\u4ece\u4e0b\u5b50\u4e0a\u5efaLCT \n    for(int i=d[x];i;i=nxt[i]){\n        int u=to[i];\n        if(u^fa[x]){\n            fa[u]=x;len[u]=cost[i];dfs(u);\n            h[x].insert(lmax[u]);p[x].insert(ss[u]);\n        }\n    }Mo(x);pushup(x);\n}inline void print(){for(int i=1;i<=n;++i)printf(\"lmax:%d rmax:%d ss:%d len:%d\\n\",lmax[i],rmax[i],ss[i],len[i]);}//debug\nint main(){\n    scanf(\"%d\",&n);int a,b,c;\n    for(int i=0;i<=n;++i)lmax[i]=rmax[i]=ss[i]=-inf;\n    for(int i=1;i<n;++i)scanf(\"%d%d%d\",&a,&b,&c),ins(a,b,c),ins(b,a,c);\n    dfs(1);ans=ss[1];\n    scanf(\"%d\",&T);char s[5];\n    while(T--){\n        scanf(\"%s\",s+1);\n        if(s[1]=='A')ans<0?printf(\"They have disappeared.\\n\"):printf(\"%d\\n\",ans);//\u5982\u679c\u5b58\u5728\u7684\u8bddans\u81f3\u5c11\u4e3a0 \n        else scanf(\"%d\",&a),modify(a);\n    }\n    return 0;\n}\n\n```\n\n\u521a\u5f00\u59cb\u5199\u4e86\u4e2a\u9519\u8bef\u8f6c\u79fb\uff0c\u5199\u534a\u5929\u8c03\u4e0d\u51fa\u6765\uff0c\u540e\u6765\u8fd8\u662f\u770b\u4e86\u7f51\u4e0a\u7684\u5927\u795e\u7684\u9898\u89e3\u624d\u6162\u6162\u81ea\u5df1\u6478\u7d22\u51fa\u6765\uff0c\u4e5f\u8bb8\u662f\u8fd9\u7c7b\u9898\u505a\u5c11\u4e86\u5427...",
        "postTime": 1554974109,
        "uid": 54113,
        "name": "ecnerwaIa",
        "ccfLevel": 0,
        "title": "P4115 Qtree4"
    },
    {
        "content": "\u70b9\u5206\u6811\uff0c\u5806\n\n\u539f\u9898\u9762\uff1a[Luogu](https://www.luogu.com.cn/problem/P4115)\u3002\n\n## \u7b80\u8ff0\n\n>\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u7684\u6811\uff0c\u8fb9\u6709\u8fb9\u6743\u3002\u521d\u59cb\u6811\u4e0a\u6240\u6709\u8282\u70b9\u90fd\u662f\u767d\u8272\u3002\u7ed9\u5b9a $m$ \u6b21\u64cd\u4f5c\uff1a  \n>1. \u53cd\u8f6c\u7ed9\u5b9a\u70b9\u7684\u989c\u8272\u3002  \n>2. \u8be2\u95ee\u6811\u4e0a\u6700\u8fdc\u7684\u4e24\u4e2a\u767d\u8272\u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u4e24\u70b9\u53ef\u4ee5\u91cd\u5408\uff08\u8ddd\u79bb\u4e3a 0\uff09\u3002  \n>\n>$1\\le n\\le 10^5$\uff0c$1\\le m\\le 2\\times 10^5$\uff0c$-10^3\\le$ \u8fb9\u6743 $\\le 10^3$\u3002  \n>1S\uff0c512MB\u3002  \n\n## \u5206\u6790\n\n\u9884\u5904\u7406 $\\operatorname{lca}$ \u540e\u5373\u53ef\u5feb\u901f\u6c42\u5f97\u4e24\u70b9\u8ddd\u79bb\uff0c\u5148\u8003\u8651\u5982\u4f55\u5904\u7406\u9759\u6001\u95ee\u9898\u3002\u53ef\u4ee5\u8003\u8651\u5728\u70b9\u5206\u6cbb\u7684\u8fc7\u7a0b\u4e2d\u5bf9\u6bcf\u4e2a\u8282\u70b9\u90fd\u7ef4\u62a4\u4e00\u4e2a\u5806\uff0c\u50a8\u5b58\u5206\u6cbb\u5757\u5185\u8be5\u70b9\u5b50\u6811\u8282\u70b9\u4e2d\u7684\u6240\u6709\u767d\u70b9\u5230\u91cd\u5fc3\u7684\u8ddd\u79bb\uff0c\u4f7f\u7528\u5176\u4e2d\u7684\u5206\u5c5e**\u4e0d\u540c\u5206\u6cbb\u5757**\u7684\u6700\u5927\u503c\u4e0e\u6b21\u5927\u503c\u62fc\u63a5\u8def\u5f84\u6c42\u6700\u5927\u503c\u5373\u53ef\uff0c\u5355\u6b21\u8be2\u95ee\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2 n)$ \u7ea7\u522b\u3002  \n\n\u8003\u8651\u52a8\u6001\u95ee\u9898\uff0c\u628a\u4e0a\u8ff0\u8fc7\u7a0b\u653e\u5230\u70b9\u5206\u6811\u4e0a\u81ea\u5e95\u5411\u4e0b\u8fdb\u884c\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u9884\u5904\u7406\u4e24\u4e2a\u5806\uff1a$t_1$ \u7ef4\u62a4\u8be5\u70b9**\u5b50\u6811\u5185**\u6240\u6709\u767d\u70b9\u5230**\u7236\u4eb2**\u7684\u8ddd\u79bb\uff08\u5bf9\u5e94\u70b9\u5206\u6cbb\u4e2d\u6c42\u5f97\u5404\u70b9\u5230\u91cd\u5fc3\u6700\u5927\u503c\uff09\uff0c$t_2$ \u7ef4\u62a4\u6240\u6709**\u513f\u5b50**\u7684 $t_1$ \u7684\u6700\u5927\u503c\uff08\u5bf9\u5e94\u7ef4\u62a4\u5206\u5c5e**\u4e0d\u540c\u5206\u6cbb\u5757**\u7684\u6700\u503c\u8fc7\u7a0b\uff09\u3002\u7279\u522b\u5730\uff0c\u82e5 $u$ \u4e3a\u767d\u70b9\uff0c\u5219 $0 \\in t_1(u)$\u3002\u5373\u6709\uff1a  \n\n$$\\begin{aligned}\n  t_1(u) &= \\{\\operatorname{dis}(u, v)\\mid v\\in \\operatorname{subtree}(u) , \\operatorname{color}_v\\texttt{is white}\\}\\\\\n  t_2(u) &= \\begin{cases}\n     \\{\\max(t_1(v))\\mid v \\in \\operatorname{son}(u)\\} \\cup \\{0\\}&\\operatorname{color}(u)\\texttt{ is white}\\\\\n    \\{\\max(t_1(v))\\mid v \\in \\operatorname{son}(u)\\} &\\text{otherwise}\n  \\end{cases}\\\\\n\\end{aligned}$$\n\n\u540c\u65f6\u5904\u7406\u4e00\u4e2a\u5806 $all$\uff0c\u50a8\u5b58\u6240\u6709\u8282\u70b9\u8def\u5f84\u62fc\u63a5\u540e\u7684\u503c\uff0c\u5373\u6709 $all = \\{ \\max(t_2(u)) + \\operatorname{secmax}(t_2(u))\\}$\uff0c\u6bcf\u6b21\u8be2\u95ee\u7684\u7b54\u6848\u5373 $\\max(all)$\u3002\u521d\u59cb\u65f6\u6240\u6709\u8282\u70b9\u5747\u4e3a\u767d\u70b9\uff0c\u5728\u5efa\u7acb\u70b9\u5206\u6811\u65f6\u5bf9\u6bcf\u4e2a\u8282\u70b9\u521d\u59cb\u5316\u4e0a\u8ff0\u4e09\u4e2a\u5806\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O(n\\log^2 n)$ \u7ea7\u522b\u3002  \n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u81ea\u6307\u5b9a\u8282\u70b9\u5411\u4e0a\u8df3\u7236\u4eb2\uff0c\u5728 $t_1$ \u4e2d\u6dfb\u52a0/\u5220\u9664\u7236\u4eb2\u5230\u6307\u5b9a\u8282\u70b9\u7684\u94fe\uff0c\u5e76\u66f4\u65b0\u7236\u4eb2\u7684 $t_2$ \u4e0e $all$ \u5373\u53ef\uff0c\u5355\u6b21\u4fee\u6539\u590d\u6742\u5ea6 $O(\\log^2 n)$ \u7ea7\u522b\u3002\u6ce8\u610f\u6dfb\u52a0/\u5220\u9664\u6307\u5b9a\u8282\u70b9 $t_2$ \u4e2d\u7684 $0$\u3002\u4e0a\u8ff0\u8fc7\u7a0b\u4e2d\u7684\u5806\u9700\u8981\u652f\u6301\u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u8be2\u6700\u5927\u503c\u3001\u6b21\u5927\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528 `mulitiset` \u6216\u5806+\u61d2\u60f0\u5220\u9664\u5b9e\u73b0\u3002  \n\n\u7279\u522b\u5730\uff0c\u6b64\u9898\u7684\u6811\u4e0a\u53ef\u80fd\u6709\u8d1f\u6743\u8fb9\u4e14\u5141\u8bb8\u767d\u70b9\u91cd\u5408\u3002\u7b54\u6848\u8981\u5bf9 $0$ \u53d6\u6700\u5927\u503c\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u5e38\u6570\u6781\u5927\u7684 $O((n + m)\\log^2 n)$\u3002  \n\u7136\u540e\u662f\u4e00\u4e9b\u5361\u5e38\u6280\u5de7\uff1a\u6811\u5256\u6c42 $\\operatorname{lca}$ \u5e38\u6570\u8f83\u5c0f\uff0c\u5b9e\u9645\u8868\u73b0\u6bd4 RMQ \u66f4\u4f18\uff1b`multiset` \u5e38\u6570\u8fc7\u5927\u4e0d\u5982\u5806 + \u61d2\u60f0\u5220\u9664\u3002\u4f46\u8fd8\u662f\u88ab\u8272\u6279 OJ \u5361\u5e38\u4e86\u545c\u545c\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u53ea\u80fd\u5728 Luogu \u4e0a\u8fc7\u3002\n\n## \u4ee3\u7801\n\n```cpp\n//\u77e5\u8bc6\u70b9\uff1a\u70b9\u5206\u6811\n/*\nBy:Luckyblock\n*/\n#include <algorithm>\n#include <cctype>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#define LL long long\nconst int kN = 1e5 + 10;\nconst int kM = kN << 1;\nconst int kInf = 1e9 + 2077;\n//=============================================================\nint n, m, e_num, head[kN], v[kM], w[kM], ne[kM], dep[kN];\nint cnt, root, sumsz, sz[kN], maxsz[kN], newfa[kN];\nbool vis[kN], val[kN];\n//=============================================================\ninline int read() {\n  int f = 1, w = 0;\n  char ch = getchar();\n  for (; !isdigit(ch); ch = getchar()) if (ch == '-') f = -1;\n  for (; isdigit(ch); ch = getchar()) w = (w << 3) + (w << 1) + (ch ^ '0');\n  return f * w;\n}\nvoid Chkmax(int &fir_, int sec_) {\n  if (sec_ > fir_) fir_ = sec_;\n}\nvoid Chkmin(int &fir_, int sec_) {\n  if (sec_ < fir_) fir_ = sec_;\n}\nvoid AddEdge(int u_, int v_, int w_) {\n  v[++ e_num] = v_, w[e_num] = w_;\n  ne[e_num] = head[u_];\n  head[u_] = e_num;\n}\nnamespace Cut {\n  int fa[kN], son[kN], dep[kN], dis[kN], size[kN], top[kN];\n  void Dfs1(int u_, int fa_) {\n    fa[u_] = fa_;\n    size[u_] = 1;\n    dep[u_] = dep[fa_] + 1;\n    for (int i = head[u_]; i; i = ne[i]) {\n      int v_ = v[i], w_ = w[i];\n      if (v_ == fa_) continue ;\n      dis[v_] = dis[u_] + w_;\n      Dfs1(v_, u_);\n      if (size[v_] > size[son[u_]]) son[u_] = v_;\n      size[u_] += size[v_];\n    }\n  }\n  void Dfs2(int u_, int top_) {\n    top[u_] = top_;\n    if (son[u_]) Dfs2(son[u_], top_);\n    for (int i = head[u_]; i; i = ne[i]) {\n      int v_ = v[i];\n      if (v_ == fa[u_] or v_ == son[u_]) continue ;\n      Dfs2(v_, v_);\n    }\n  }\n  int Lca(int u_, int v_) {\n    for (; top[u_] != top[v_]; u_ = fa[top[u_]]) {\n      if (dep[top[u_]] < dep[top[v_]]) {\n        std::swap(u_, v_);\n      }\n    }\n    return dep[u_] < dep[v_] ? u_ : v_;\n  }\n  int Dis(int u_, int v_) {\n    return dis[u_] + dis[v_] - 2 * dis[Lca(u_, v_)];\n  }\n  void Prepare() {\n    Dfs1(1, 0), Dfs2(1, 1);\n  }\n}\nstruct Heap { //\u61d2\u60f0\u5220\u9664\u5806\n  std::priority_queue <int> heap, delt;\n  void Insert(int val_) {\n    heap.push(val_);\n  }\n  void Erase(int val_) {\n    delt.push(val_);\n  }\n  int Size() {\n    return heap.size() - delt.size(); \n  }\n  void Update() {\n    while (delt.size() && heap.top() == delt.top()) {\n      heap.pop(); \n      delt.pop();\n    }\n  }\n  int Top() {\n    Update();\n    return Size() ? heap.top() : -kInf;\n  }\n  int Sectop() {\n    int t1 = Top(), t2;\n    Update(), heap.pop();\n    t2 = Top();\n    Insert(t1);\n    return t2;\n  }\n  int Get() {\n    if (Size() >= 2) return Top() + Sectop();\n    if (Size() == 1) return std::max(Top(), 0);\n    return -kInf;\n  }\n} all, dis[kN], disfa[kN];\nvoid AddAll(int pos_) {\n  if (dis[pos_].Size() >= 2) all.Insert(dis[pos_].Get());\n}\nvoid DeleteAll(int pos_) {\n  if (dis[pos_].Size() >= 2) all.Erase(dis[pos_].Get());\n}\nvoid CalcSize(int u_, int fa_) { //\u627e\u91cd\u5fc3\n  sz[u_] = 1, maxsz[u_] = 0;\n  for (int i = head[u_]; i; i = ne[i]) {\n    int v_ = v[i];\n    if (v_ == fa_ || vis[v_]) continue;\n    CalcSize(v_, u_);\n    Chkmax(maxsz[u_], sz[v_]);\n    sz[u_] += sz[v_];\n  }\n  Chkmax(maxsz[u_], sumsz - sz[u_]);\n  if (maxsz[u_] < maxsz[root]) root = u_;\n}\nvoid CalcDis(int u_, int fa_, int dis_, int pos_) {\n  disfa[pos_].Insert(dis_); //\u9884\u5904\u7406\n  for (int i = head[u_]; i; i = ne[i]) {\n    int v_ = v[i], w_ = w[i];\n    if (v_ == fa_ || vis[v_]) continue;\n    CalcDis(v_, u_, dis_ + w_, pos_);\n  }\n}\nvoid Dfs(int u_, int fa_) { //\u5efa\u7acb\u70b9\u5206\u6811\n  vis[u_] = true;\n  for (int i = head[u_]; i; i = ne[i]) {\n    int v_ = v[i], w_ = w[i];\n    if (v_ == fa_ || vis[v_]) continue;\n    sumsz = sz[v_], root = 0, maxsz[root] = kN;\n    CalcSize(v_, u_);\n    CalcDis(v_, u_, w_, root);\n\n    newfa[root] = u_;\n    dis[u_].Insert(disfa[root].Top()); //\u9884\u5904\u7406\n    CalcSize(root, 0), Dfs(root, 0);\n  }\n  dis[u_].Insert(0);\n  AddAll(u_);\n}\nvoid Add(int pos_) { //\u6dfb\u52a0\u767d\u70b9\n  ++ cnt;\n  DeleteAll(pos_); //\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u4e00\u7aef\u70b9\u7684\u60c5\u51b5\n  dis[pos_].Insert(0);\n  AddAll(pos_);\n  for (int now_ = pos_; newfa[now_]; now_ = newfa[now_]) { \n    int f = newfa[now_], d = Cut::Dis(pos_, f);\n    DeleteAll(f); //\u524a\u9664\u66f4\u65b0\u524d\u7684\u8d21\u732e\n    if (disfa[now_].Size()) dis[f].Erase(disfa[now_].Top());\n\n    disfa[now_].Insert(d); //\u63d2\u5165\u7236\u4eb2\u5230\u6307\u5b9a\u8282\u70b9\u7684\u94fe\n    \n    if (disfa[now_].Size()) dis[f].Insert(disfa[now_].Top());\n    AddAll(f); //\u66f4\u65b0\u8d21\u732e\n  }\n}\nvoid Delete(int pos_) { //\u5220\u9664\u767d\u70b9\n  -- cnt;\n  DeleteAll(pos_);\n  dis[pos_].Erase(0);\n  AddAll(pos_);\n  for (int now_ = pos_; newfa[now_]; now_ = newfa[now_]) { \n    int f = newfa[now_], d = Cut::Dis(pos_, f);\n    DeleteAll(f); //\u524a\u9664\u66f4\u65b0\u524d\u7684\u8d21\u732e\n    if (disfa[now_].Size()) dis[f].Erase(disfa[now_].Top());\n\n    disfa[now_].Erase(d); //\u63d2\u5165\u7236\u4eb2\u5230\u6307\u5b9a\u8282\u70b9\u7684\u94fe\n\n    if (disfa[now_].Size()) dis[f].Insert(disfa[now_].Top());\n    AddAll(f); //\u66f4\u65b0\u8d21\u732e\n  }\n}\nvoid Modify(int pos_) { //\u5355\u70b9\u4fee\u6539\uff0c\u66f4\u65b0\u70b9\u5206\u6811\u4e0a\u8be5\u70b9\u5230\u6839\u8def\u5f84\u4e0a\u5404\u70b9\u7684 \u5b50\u6811\u4fe1\u606f\n  val[pos_] ? Add(pos_) : Delete(pos_);\n  val[pos_] ^= 1;\n}\nint Query() {\n  return std::max(all.Top(), 0);\n}\n//=============================================================\nint main() {\n  cnt = n = read();\n  for (int i = 1; i < n; ++ i) {\n    int u_ = read(), v_ = read(), w_ = read();\n    AddEdge(u_, v_, w_), AddEdge(v_, u_, w_);\n  }\n  Cut::Prepare();\n  sumsz = n, root = 0, maxsz[root] = kN;\n  CalcSize(1, 0), CalcSize(root, 0), Dfs(root, 0);\n\n  m = read();\n  for (int i = 1; i <= m; ++ i) {\n    char opt[5]; scanf(\"%s\", opt + 1);\n    if (opt[1] == 'C') {\n      Modify(read());\n    } else {\n      if (!cnt) {\n        printf(\"They have disappeared.\\n\");\n      } else {\n        printf(\"%d\\n\", cnt == 1 ? 0 : Query());\n      }\n    }\n  }\n  return 0;\n}\n```",
        "postTime": 1613896372,
        "uid": 186186,
        "name": "\u7075\u4e4c\u8def\u7a7a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4115 \u3010Qtree4\u3011"
    },
    {
        "content": "# P4115 Qtree4 Solution\n\n\u9898\u76ee\u4f20\u9001\u95e8\uff1a[P4115 Qtree4](https://www.luogu.com.cn/problem/P4115)\u3002\n\n\u63a8\u8350\u5728 [\u535a\u5ba2](https://www.luogu.com.cn/blog/fy123333/P4115Solution) \u4e2d\u67e5\u770b\u3002\n\n## \u9898\u76ee\u5206\u6790 Hint\n\n\u9898\u76ee\u4e2d\u6709\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\n1. `C x`\uff0c\u6539\u53d8\u8282\u70b9 $x$ \u7684\u989c\u8272\uff0c\u5373\u767d\u53d8\u9ed1\uff0c\u9ed1\u53d8\u767d\u3002\n2. `A`\uff0c\u8be2\u95ee\u6811\u4e2d\u6700\u8fdc\u7684\u4e24\u4e2a\u767d\u8272\u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u8fd9\u4e24\u4e2a\u767d\u8272\u8282\u70b9\u53ef\u4ee5\u91cd\u5408\u3002\n\n\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u662f\u4fee\u6539\u8282\u70b9\u989c\u8272\uff0c\u8fd9\u4e2a\u5f88\u6c34\uff0c\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u662f\u8be2\u95ee\u70b9\u96c6\u91cc\u8ddd\u79bb\u6700\u8fdc\u7684\u4e24\u4e2a\u70b9\uff0c\u53ef\u4ee5\u662f\u540c\u4e00\u4e2a\u3002\u90a3\u4e48\u6211\u4eec\u7528\u7ebf\u6bb5\u6811+\u6811\u94fe\u5256\u5206+\u5e73\u8861\u6811\u8fdb\u884c\u5b9e\u73b0\u3002\u800c\u8fd9\u4e2a\u6811\u94fe\u5256\u5206\u770b\u505a\u6210\u94fe\u4e0a\u7684\u5206\u6cbb\u3002\n\n## \u601d\u8def Solution\n\n\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e00\u6761\u94fe\u7ef4\u62a4\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u8fd9\u91cc\u6ce8\u610f\u8981\u52a8\u6001\u5f00\u70b9\uff0c\u5426\u5219 MLE\u3002\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e09\u4e2a\u503c $lv$\uff0c$rv$ \u548c $mv$\u3002\u5176\u4e2d $lv$ \u8868\u793a\u67d0\u4e00\u4e2a\u70b9 $u$ \u5728 $[l,r]$ \u533a\u95f4\u4e2d\uff0c$u$ \u5230\u5176\u5b50\u6811\u767d\u70b9\u7684\u6700\u957f\u8ddd\u79bb\u52a0\u4e0a\u70b9 $l$ \u5230\u70b9 $u$ \u7684\u6700\u77ed\u8ddd\u79bb\u4e4b\u548c\u7684\u6700\u5927\u503c\u3002\u5373 $lv = \\max_{l \\leq u \\leq r}(dist(l, u)+ dist2_u)$\uff0c\u5176\u4e2d $dist(l,u)$ \u8868\u793a\u70b9 $l$ \u5230\u70b9 $u$ \u7684\u6700\u77ed\u8ddd\u79bb\u4e4b\u548c\uff0c$dist2_u$ \u8868\u793a $u$ \u5230\u5176\u5b50\u6811\u767d\u70b9\u7684\u6700\u957f\u8ddd\u79bb\u3002\u4e0b\u9762\u7684\u5f0f\u5b50\u4e2d\u4ea6\u662f\u5982\u6b64\u3002$rv$ \u8868\u793a\u7684\u662f\u67d0\u4e00\u4e2a\u70b9 $u$ \u5728 $[l,r]$ \u533a\u95f4\u4e2d\uff0c$u$ \u5230\u5176\u5b50\u6811\u767d\u70b9\u7684\u6700\u957f\u8ddd\u79bb\u52a0\u4e0a\u70b9 $u$ \u5230\u70b9 $r$ \u7684\u6700\u77ed\u8ddd\u79bb\u4e4b\u548c\u7684\u6700\u5927\u503c\u3002\u5373 $rv = \\max_{l \\leq u \\leq r}(dist(u, r)+ dist2_u)$\u3002$mv$ \u8868\u793a\u4e0e\u5f53\u524d\u533a\u95f4\u91cd\u5408\u7684\u6240\u6709\u8def\u5f84\u7684\u6700\u957f\u957f\u5ea6\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651 $\\operatorname{pushUp()}$\u3002\u5047\u8bbe $u$ \u70b9\u7684\u5de6\u53f3\u513f\u5b50\u662f $lson_p$\uff0c$rson_p$\uff0c$mid = \\left\\lfloor \\frac{l + r}{2} \\right\\rfloor$\uff0c\u90a3\u4e48\u5c31\u6709 $$lv_p = \\max(lv_{lson_{u}}, dist(l,mid+1)+lv_{rson_u})$$ $$rv_p = \\max(rv_{rson_{u}}, dist(mid, r) + rv_{lson_u})$$ $$mv_p = \\max(\\max(mv_{lson_u}, mv_{rson_u}), rv_{lson_u} + dist(mid,mid+1)+lv_{rson_u})$$\n\n\u7ef4\u62a4\u6700\u957f\u548c\u6b21\u957f\u7684\u65b9\u6cd5\u5c31\u662f\u7ef4\u62a4\u8fd9\u4e2a\u94fe\u7684\u7ebf\u6bb5\u6811\u6839\u8282\u70b9\u7684\u7684 $lv$\u3002\u8003\u8651\u5230\u5e26\u4fee\uff0c\u6211\u4eec\u4f7f\u7528\u5e73\u8861\u6811\u3002\n\n\u4fee\u6539\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u6765\u505a\u3002\u8fd9\u91cc\u76f4\u63a5\u7528 multiset \u6765\u8fdb\u884c\u7ef4\u62a4\u3002\n\n\u4ee3\u7801\u5982\u4e0b\u3002\n\n```cpp\nstruct Heap {\n    multiset<int, greater<int>> s;\n    inline void insert(int v) {\n        s.insert(v);\n    }\n    inline void Delete(int v) {\n        multiset<int, greater<int>>:: iterator iter = s.lower_bound(v);\n        if (iter != s.end()) s.erase(iter);\n    }\n    inline int top() {\n        if (s.empty()) return -inf;\n        return *s.begin();\n    }\n}hp[maxn], res;\nstruct Edge {\n    int v, nxt, c;\n}ed[maxn << 1];\ninline void addEdge(int u, int v, int c) {\n    ed[++idx].v = v;\n    ed[idx].nxt = head[u];\n    head[u] = idx;\n    ed[idx].c = c;\n}\ninline void dfs1(int x, int f) {\n    fa[x] = f;\n\tsiz[x] = 1;\n\tfor (int i = head[x]; i; i = ed[i].nxt) {\n\t\tint y = ed[i].v;\n\t\tif (y == f) continue;\n\t\tdep[y] = dep[x] + ed[i].c;\n\t\tdfs1(y, x);\n\t\tsiz[x] += siz[y];\n\t\tif (siz[y] > siz[son[x]]) son[x] = y;\n\t}\n}\ninline void dfs2(int x) {\n    if (x == son[fa[x]]) top[x] = top[fa[x]];\n\telse top[x] = x;\n\tlen[top[x]]++;\n\tsegTree[x] = ++cnt;\n\trev[cnt] = x;\n\tif (son[x]) dfs2(son[x]);\n\tfor(int i = head[x]; i; i = ed[i].nxt){\n\t\tint y = ed[i].v;\n\t\tif (y == fa[x] || y == son[x]) continue;\n\t\tdfs2(y);\n\t}\n}\ninline void pushUp(int rt, int lft, int rgt) {\n    int mid = (lft + rgt) >> 1;\n    lftv[rt]=max(lftv[lson[rt]], dep[rev[mid + 1]] - dep[rev[lft]] + lftv[rson[rt]]);\n\trgtv[rt]=max(rgtv[rson[rt]], dep[rev[rgt]] - dep[rev[mid]] + rgtv[lson[rt]]);\n\tmidv[rt]=max(max(midv[lson[rt]], midv[rson[rt]]), rgtv[lson[rt]] + dep[rev[mid + 1]] - dep[rev[mid]] + lftv[rson[rt]]);\n}\ninline void buildTree(int rt, int lft, int rgt) {\n    if (lft == rgt) {\n        int x = rev[lft];\n        for (int i = head[x]; i; i = ed[i].nxt) {\n            int y = ed[i].v;\n            if (y == fa[x] || y == son[x]) continue;\n            hp[x].insert(lftv[root[y]] + ed[i].c);\n        }\n        int d1 = hp[x].top();\n        hp[x].Delete(d1);\n        int d2 = hp[x].top();\n        hp[x].insert(d1);\n        lftv[rt] = rgtv[rt] = max(d1, 0);\n        midv[rt] = max(0, max(d1, d1 + d2));\n        return;\n    }\n    int mid = (lft + rgt) >> 1;\n    if (!lson[rt])\n        lson[rt] = ++tot;\n    buildTree(lson[rt], lft, mid);\n    if (!rson[rt])\n        rson[rt] = ++tot;\n    buildTree(rson[rt], mid + 1, rgt);\n    pushUp(rt, lft, rgt);\n}\ninline void update(int rt, int lft, int rgt, int x, int tp) {\n    if (lft == rgt) {\n        if (x != tp)\n            hp[x].insert(lftv[root[tp]] + dep[tp] - dep[x]);\n        int d1 = hp[x].top();\n        hp[x].Delete(d1);\n        int d2 = hp[x].top();\n        hp[x].insert(d1);\n        if (wgt[x]) {\n            lftv[rt] = rgtv[rt] = d1;\n            midv[rt] = d1 + d2;\n        } else {\n            lftv[rt] = rgtv[rt] = max(d1, 0);\n            midv[rt] = max(0, max(d1, d1 + d2));\n        }\n        return;\n    }\n    int mid = (lft + rgt) >> 1;\n    if (segTree[x] <= mid) update(lson[rt], lft, mid, x, tp);\n    else update(rson[rt], mid + 1, rgt, x, tp);\n    pushUp(rt, lft, rgt);\n}\ninline void modify(int x) {\n    int lst = x;\n    while (x) {\n        int tp = top[x];\n        int p1 = midv[root[tp]];\n        if (fa[tp]) hp[fa[tp]].Delete(lftv[root[tp]] + dep[tp] - dep[fa[tp]]);\n        update(root[tp], segTree[tp], segTree[tp] + len[tp] - 1, x, lst);\n        int p2 = midv[root[tp]];\n        if (p1 != p2) {\n            res.Delete(p1);\n            res.insert(p2);\n        }\n        lst = tp;\n        x = fa[top[x]];\n    }\n}\n```\n",
        "postTime": 1685202689,
        "uid": 589977,
        "name": "fy123333",
        "ccfLevel": 0,
        "title": "P4115 Solution"
    }
]