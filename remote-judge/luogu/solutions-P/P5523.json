[
    {
        "content": "# D [yLOI2019] \u73cd\u73e0\n\n## Background\n\n\u522b\u53f9\u606f\u592a\u591a\u544a\u522b\uff0c\u81f3\u5c11\u76f8\u9047\u5f88\u771f\u5207\u3002\n\n\u6447\u66f3\u7740\u76db\u653e\u67af\u7aed\uff0c\u65f6\u95f4\u4ece\u672a\u505c\u6b47\u3002\n\n\u5929\u6daf\u6d6a\u8ff9\u7684\u767d\u96ea\uff0c\u5ff5\u5ff5\u4e0d\u5fd8\u5c71\u5ddd\u8774\u8776\u3002\n\n\u542c\u8bf4\u6709\u4eba\u5b64\u8d1f\u9ed1\u591c\uff0c\u504f\u8981\u70b9\u4eae\u4eba\u95f4\u7684\u6708\u3002\n\n\u2014\u2014\u94f6\u4e34\u300a\u73cd\u73e0\u300b\n\n\n## Description\n\n\u7ed9\u5b9a\u4e00\u4e2a ``deque``\uff0c\u8981\u6c42\u652f\u6301 ``push_back`` \u548c ``push_front`` \u64cd\u4f5c\uff0c\u5e76\u4e14\u67e5\u8be2\u524d\u7f00\u4e0e\u975e\u548c\u4ee5\u53ca\u540e\u7f00\u4e0e\u975e\u548c\u3002\n\ndeque\u4e2d\u53ea\u4f1a\u6709 $0$ \u6216 $1$\uff0c\u4e00\u5171\u6709 $n$ \u6b21\u64cd\u4f5c\uff0c\u5176\u4e2d\u6709 $m$ \u6b21\u64cd\u4f5c\u7ed9\u5b9a\uff0c\u5269\u4e0b\u7684\u64cd\u4f5c\u968f\u673a\u3002\n\n## Limitations\n\n![img](https://cdn.luogu.com.cn/upload/pic/71767.png)\n\n## Solution\n\n~~\u8fd9\u662f\u4e00\u9053\u901a\u8fc7\u8f93\u5165\u683c\u5f0f\u6765\u9632AK\u7684\u9898\u76ee~~\n\n\u4e0b\u9762\u7684\u505a\u6cd5\u53ea\u8003\u8651\u524d\u7f00\u4e0e\u975e\u548c\uff0c\u56e0\u4e3a\u540e\u7f00\u7684\u505a\u6cd5\u4e0e\u524d\u7f00\u5b8c\u5168\u76f8\u540c\u3002\n\n\u5b50\u4efb\u52a1 $0$\uff1a\n\n\u6ca1\u6709\u64cd\u4f5c\uff0c\u8f93\u51fa\u56db\u4e2a $0$ \u5373\u53ef\u3002\u671f\u671b\u5f97\u5206 $5~pts$\n\n\u5b50\u4efb\u52a1 $1$\uff1a\n\n\u66b4\u529b\u6a21\u62df\uff0c\u6bcf\u6b21\u4ece\u524d\u9762\u63d2\u5165\u7684\u65f6\u5019\u540e\u9762\u7684\u5143\u7d20\u66b4\u529b\u79fb\u4f4d\uff0c\u66b4\u529b\u67e5\u8be2\u4e0e\u975e\u548c\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\uff0c\u671f\u671b\u5f97\u5206 $15~pts$\n\n\u5b50\u4efb\u52a1 $2$\uff1a\n\n\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u6bcf\u4e2a\u533a\u95f4\u7684\u4e0e\u975e\u548c\uff0c\u4f46\u662f\u8fd9\u6837\u4ea7\u751f\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u4e24\u4e2a\u533a\u95f4\u7684\u4e0e\u975e\u548c\u662f\u65e0\u6cd5\u5408\u5e76\u7684\uff0c\u56e0\u4e3a\u4e0e\u975e\u8fd0\u7b97\u6ca1\u6709\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\u3002\n\n\u4f46\u662f\u6211\u4eec\u6ce8\u610f\u5230\u4e8b\u5b9e\u4e0a\u5bf9\u4e8e\u67d0\u4e2a\u533a\u95f4\uff0c\u5e8f\u5217\u7684\u9996\u90e8\u5230\u533a\u95f4\u5de6\u7aef\u70b9\u4e4b\u524d\u6240\u6709\u5143\u7d20\u7684\u4e0e\u975e\u548c\u53ea\u53ef\u80fd\u662f $0$ \u6216 $1$\uff0c\u56e0\u6b64\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e24\u4e2a\u4fe1\u606f\uff1a\u5f53\u8be5\u533a\u95f4\u4e4b\u524d\u6240\u6709\u5143\u7d20\u7684\u4e0e\u975e\u548c\u662f $0$ \u65f6\u4e0e\u975e\u4e0a\u8be5\u533a\u95f4\u7684\u503c\uff0c\u4ee5\u53ca\u5f53\u8be5\u533a\u95f4\u4e4b\u524d\u5143\u7d20\u4e0e\u975e\u548c\u662f $1$ \u65f6\u4e0e\u975e\u4e0a\u8be5\u533a\u95f4\u7684\u503c\uff0c\u7136\u540e\u5373\u53ef $O(1)$ \u8f6c\u79fb\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\uff0c\u671f\u671b\u5f97\u5206 $15 ~pts$\n\n\u5b50\u4efb\u52a1 $3$\uff1a\n\n\u63d2\u5165\u7684\u5143\u7d20\u5168\u90e8\u662f $1$\u3002\n\n\u8003\u8651\u4e00\u5806\u8fde\u7eed $1$ \u7684\u524d\u7f00\u4e0e\u975e\u548c\u5e8f\u5217\uff0c\u4e00\u5b9a\u5f62\u5982 $101010101\\dots$\n\n\u8bc1\u660e\u4e0a\uff0c\u8003\u8651\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u4e00\u5b9a\u662f $1$\uff0c\u7136\u540e $1~\\text{nand}~1~=~0$ \uff0c$0~\\text{nand}~1~=~1$\uff0c\u56e0\u6b64\u5e8f\u5217\u4e2d $0$ \u548c $1$ \u4e00\u5b9a\u662f\u5faa\u73af\u51fa\u73b0\u7684\u3002\n\n\u56e0\u6b64\u4e00\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\u4e00\u5b9a\u662f $y~\\&~1$\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\uff0c\u671f\u671b\u5f97\u5206 $10~pts$\n\n\u5b50\u4efb\u52a1 $4$\uff1a\n\n\u63d2\u5165\u7684\u5143\u7d20\u5168\u90e8\u662f $0$\u3002\n\n\u8003\u8651\u4e00\u5806 $0$ \u7684\u524d\u7f00\u4e0e\u975e\u548c\u5e8f\u5217\uff0c\u4e00\u5b9a\u5f62\u5982 $011111111111 \\dots$\n\n\u7528\u4e0e\u5b50\u4efb\u52a1 $3$ \u7c7b\u4f3c\u7684\u529e\u6cd5\u5373\u53ef\u89e3\u51b3\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\uff0c\u671f\u671b\u5f97\u5206 $10~pts$\n\n\u5b50\u4efb\u52a1 $5$\uff1a\n\n\u8003\u8651\u4e00\u4e2a\u663e\u800c\u6613\u89c1\u7684\u4e8b\u5b9e\uff0c$0$ \u4e0e\u975e\u4efb\u4f55\u6570\u90fd\u5f97 $1$\u3002\n\n\u56e0\u6b64\u8003\u8651\u4e00\u6b21\u67e5\u8be2\u5982\u679c\u4e0e\u975e\u548c\u7684\u6700\u540e\u4e00\u9879\u662f $0$\uff0c\u5219\u76f4\u63a5\u8fd4\u56de $1$ \u5373\u53ef\u3002\n\n\u540c\u65f6\u5bf9\u4e8e\u6700\u540e\u4e00\u9879\u662f $1$ \u7684\u64cd\u4f5c\uff0c\u53ea\u9700\u8981\u770b\u8fd9\u4e00\u9879\u5411\u524d\u4e00\u5171\u6709\u8fde\u7eed\u7684\u51e0\u4e2a $1$\uff0c\u7531\u4e8e\u524d\u9762\u90a3\u4e00\u9879\u662f $0$\uff0c\u6240\u4ee5\u4e00\u6bb5 $011111$ \u7684\u5e8f\u5217\u7684\u4e0e\u975e\u548c\u4e00\u5b9a\u662f $1010101010\\dots$\uff0c\u800c\u4e0e $0$ \u524d\u9762\u7684\u9879\u5b8c\u5168\u65e0\u5173\u3002\n\n\u5f53\u7136\u9700\u8981\u7279\u5224\u67e5\u8be2\u7684 $0$ \u662f\u5e8f\u5217\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u4ee5\u53ca\u67e5\u8be2\u7684 $1$ \u524d\u9762\u6ca1\u6709 $0$ \u7684\u60c5\u51b5\u3002\n\n\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\u7ef4\u62a4\u5b83\u524d\u9762\u7b2c\u4e00\u4e2a $0$ \u7684\u4f4d\u7f6e\u3002\n\n\u7531\u4e8e $m = 0$ \uff0c\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u662f\u5b8c\u5168\u968f\u673a\u7684\uff0c\u56e0\u6b64\u8fde\u7eed $0/1$ \u6bb5\u7684\u957f\u5ea6\u671f\u671b\u90fd\u662f\u5e38\u6570\u7ea7\u7684\uff0c\u56e0\u6b64\u66b4\u529b\u627e\u5373\u53ef\uff0c\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\uff0c\u671f\u671b\u5f97\u5206 $15~pts$\n\n\u5b50\u4efb\u52a1 $6$\uff1a\n\n\u8003\u8651\u5728\u5e8f\u5217\u4e0d\u968f\u673a\u65f6\u600e\u4e48\u5bf9\u6bcf\u4e2a\u6570\u7ef4\u62a4\u5b83\u524d\u9762\u7b2c\u4e00\u4e2a $0$ \u7684\u4f4d\u7f6e\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u5728\u6bcf\u63d2\u5165\u4e00\u4e2a $0$ \u65f6\uff0c\u90fd\u66b4\u529b\u4fee\u6539\u8fd9\u4e2a $0$ \u7684\u6709\u5143\u7d20\u7684\u4e00\u4fa7\u7684\u8fde\u7eed $1$ \u7684\u4fe1\u606f\u5373\u53ef\u3002\n\n\u4f8b\u5982\uff0c\u5728\u5e8f\u5217\u5de6\u4fa7\u63d2\u5165\u4e00\u4e2a $0$\uff0c\u5219\u66b4\u529b\u4fee\u6539 $0$ \u53f3\u4fa7\u8fde\u7eed $1$ \u7684\u5de6\u4fa7\u6700\u8fd1\u7684 $0$ \u7684\u4f4d\u7f6e\u4e3a\u8be5\u4f4d\u7f6e\u5373\u53ef\u3002\u5728\u5e8f\u5217\u53f3\u4fa7\u63d2\u5165\u540c\u7406\u3002\n\n\u8003\u8651\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6bcf\u4e2a\u4e3a $1$ \u7684\u5143\u7d20\u90fd\u53ea\u4f1a\u5728\u5de6\u4fa7\u6700\u8fd1\u548c\u53f3\u4fa7\u6700\u8fd1\u7684 $0$ \u63d2\u5165\u7684\u65f6\u5019\u88ab\u4fee\u6539\u4fe1\u606f\uff0c\u56e0\u6b64\u6bcf\u4e2a\u5143\u7d20\u90fd\u53ea\u4f1a\u88ab\u4fee\u6539 $O(1)$ \u6b21\u4fe1\u606f\uff0c\u5373\u6bcf\u6b21\u5747\u644a\u4fee\u6539 $O(1)$ \u4e2a\u4fe1\u606f\uff0c\u603b\u7684\u4fee\u6539\u6b21\u6570\u4e3a $O(n)$\uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\uff0c\u671f\u671b\u5f97\u5206 $30~pts$\u3002\n\n\n\n\n```cpp\n#include <cstdio>\n#ifdef ONLINE_JUDGE\n#define freopen(a, b, c)\n#endif\n\ntypedef long long int ll;\n\nnamespace OPT {\n  char buf[120];\n}\n\ntemplate <typename T>\ninline void qw(T x, const char aft, const bool pt) {\n  if (x < 0) {x = -x, putchar('-');}\n  int top=0;\n  do {OPT::buf[++top] = static_cast<char>(x % 10 + '0');} while (x /= 10);\n  while (top) putchar(OPT::buf[top--]);\n  if (pt) putchar(aft);\n}\n\nnamespace Maker {\n\ntypedef unsigned int uit;\n\nbool __sp;\nuit __x, __y, __z;\nint __type, __k, __m;\n\nconst int L = 1 << 21;\nchar buf[L], *front=buf, *end=buf;\nchar GetChar() {\n  if (front == end) {\n    end = buf + fread(front = buf, 1, L, stdin);\n    if (front == end) return -1;\n  }\n  return *(front++);\n}\n\ntemplate <typename T>\ninline void qr(T &x) {\n  char ch = GetChar(), lst = ' ';\n  while ((ch > '9') || (ch < '0')) lst = ch, ch = GetChar();\n  while ((ch >= '0') && (ch <= '9')) x = (x << 1) + (x << 3) + (ch ^ 48), ch = GetChar();\n  if (lst == '-') x = -x;\n}\n\ntemplate <typename T>\ninline void Begin(const T &x) {\n  __type = x % 10;\n  qr(__x); qr(__y); qr(__z); qr(__m);\n  __sp = (__type == 3) || (__type == 4); __type &= 1;\n}\n\ninline uit __Next_Integer() {\n  __x ^= __y << (__z & 31);\n  __y ^= __z >> (__x & 31);\n  __z ^= __x << (__y & 31);\n  __x ^= __x >> 5; __y ^= __y << 13; __z ^= __z >> 6;\n  return __x;\n}\n\ninline uit Rand() { return __Next_Integer(); }\n\ntemplate <typename Tx, typename Ty, typename Tz>\ninline void Get_Nextline(Tx &x, Ty &y, Tz &z) {\n  if (__m) {\n    --__m;\n    x = 0; y = 0; z = 0;\n    qr(x); qr(y); qr(z);\n    if (x == 0) ++__k;\n  } else {\n    x = Rand() & 1; y = Rand() & 1;\n    if (__k == 0) { x = 0; }\n    if (x == 0) {\n      ++__k;\n      if (__sp) {\n        z = __type;\n      } else {\n        z = Rand() & 1;\n      }\n    } else {\n      int dk = __k >> 1;\n      if (dk == 0) {\n        z = 1;\n      } else {\n        z = Rand() % dk + dk;\n      }\n    }\n  }\n}\n\n}\n\nconst int maxn = 10000009;\n\nstruct Ask {\n  int x, y, z;\n\n  inline void init() { Maker::Get_Nextline(x, y, z); ++x; ++y;}\n};\nAsk ask[maxn];\n\nstruct M {\n  int v, lp, rp;\n};\nM MU[maxn];\n\nint n, lpos = 1, ans, answ, answe, answer;\n\nint main() {\n  scanf(\"%d\", &n);\n  fprintf(stderr, \"QAQIN\\n\") ;\n  Maker::Begin(n);\n  for (int i = 1; i <= n; ++i) {\n    ask[i].init();\n    if ((ask[i].x == 1) && (ask[i].y == 1)) ++lpos;\n  }\n  int rpos = lpos - 1;\n  for (int i = 1; i <= n; ++i) {\n    if (ask[i].x == 1) {\n      if (ask[i].y == 1) {\n        M &m = MU[--lpos];\n        if ((m.v = ask[i].z) == 1) {\n          m.rp = MU[lpos + 1].rp;\n        } else {\n          m.rp = m.lp = lpos;\n          for (int j = lpos + 1; MU[j].v == 1; ++j) {\n            MU[j].lp = lpos;\n          }\n        }\n      } else {\n        M &m = MU[++rpos];\n        if ((m.v = ask[i].z) == 1) {\n          m.lp = MU[rpos - 1].lp;\n        } else {\n          m.rp = m.lp = rpos;\n          for (int j = rpos - 1; MU[j].v == 1; --j) {\n            MU[j].rp = rpos;\n          }\n        }\n      }\n    } else {\n      int _ans = 0;\n      int p = ask[i].y == 1 ? lpos + ask[i].z - 1 : rpos - ask[i].z + 1;\n      if (MU[p].v == 0) {\n        _ans = ask[i].z != 1;\n      } else {\n        if (ask[i].y == 1) {\n          int k = MU[p].lp;\n          if (k == 0) {\n            _ans = ask[i].z & 1;\n          } else if (k == lpos) {\n            _ans = (ask[i].z - 1) & 1;\n          } else {\n            _ans = (p - k + 1) & 1;\n          }\n        } else {\n          int k = MU[p].rp;\n          if (k == 0) {\n            _ans = (ask[i].z) & 1;\n          } else if (k == rpos) {\n            _ans = (ask[i].z - 1) & 1;\n          } else {\n            _ans = (k - p + 1) & 1;\n          }\n        }\n      }\n      if (_ans) {\n        ++ans;\n        if (!(i & 1)) {\n          ++answe;\n        }\n      } else {\n        if (i & 1) {\n          ++answ;\n        }\n        if (!(i & 1023)) {\n          ++answer;\n        }\n      }\n    }\n  }\n  printf(\"%d %d %d %d\\n\", ans, answ, answe, answer);\n  return 0;\n}\n\n```\n\n## appreciation\n\n\u611f\u8c22@[Burnside](https://www.luogu.org/space/show?uid=64500) \u795e\u4ed9\u5e2e\u52a9\u8fdb\u884c\u9898\u89e3\u7684\u6821\u5bf9\u5de5\u4f5c",
        "postTime": 1566732037,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "D [yLOI2019] \u73cd\u73e0"
    },
    {
        "content": "\u9898\u610f\uff1a\n\n[\u539f\u9898\u9898\u9762](https://www.luogu.com.cn/problem/P5523)\n\n\u5b9a\u4e49\u8fd0\u7b97 $\\text{nand}$ \uff08 **\u975e\u4e0e** \uff09\u4e3a\uff1a\n\n$$A\\ \\text{nand}\\ B = \\text{not}(A\\ \\text{and}\\ B)$$\n\n\u5373\uff1a\n\nnand | 0| 1\n:-: | :-: | :-:|\n**0** | 1 | 1\n**1** | 1 | 0\n\n\u73b0\u5728\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 $A$\uff0c\u8981\u4f60\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\n1. \u4ece\u5e8f\u5217\u7684\u5de6\u8fb9\u6216\u53f3\u8fb9\u63d2\u5165\u4e00\u4e2a\u975e $0$ \u5373 $1$ \u7684\u6570\u3002\n\n2. \u4ece\u5e8f\u5217\u7684\u5de6\u8fb9\u6216\u53f3\u8fb9\u5f00\u59cb\uff0c\u67e5\u8be2\u8fde\u7eed $x$ \u4e2a\u6570\u7684 **\u975e\u4e0e** \u503c\n\n\u64cd\u4f5c\u6570 $\\leq 10^7+6$\n\n\uff08\u5410\u69fd\uff1a\u539f\u9898\u8f93\u5165\u683c\u5f0f\u592a duliu \u4e86\uff09\n\n---\n\n\u9996\u5148\u627e\u4e00\u4e0b $\\text{nand}$ \u64cd\u4f5c\u6709\u4ec0\u4e48\u6027\u8d28\u3002\n\n\u53d1\u73b0 $0\\ \\text{nand}$ \u4efb\u4f55\u4e00\u4e2a\u6570\u90fd\u662f $1$ \u3002\n\n\u8fd9\u610f\u5473\u7740\u65e0\u8bba\u6709\u591a\u5c11\u4e2a\u6570\u505a\u8fd9\u4e2a\u8fd0\u7b97\uff0c\u53ea\u8981\u8fd0\u7b97\u7684\u8fc7\u7a0b\u4e2d\u6709 $0$ \uff0c\u90a3\u4e48\u4e0d\u8bba\u524d\u9762\u6709\u4ec0\u4e48\u4e1c\u897f\uff0c**\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u7edf\u7edf\u90fd\u53d8\u6210 $1$** \uff0c\u6240\u4ee5\u7b54\u6848\u53ea\u548c $0$ \u540e\u9762\u7684\u6709\u5173\u3002\uff08**\u8fd9\u610f\u5473\u7740\u7b54\u6848\u53ea\u548c\u6700\u540e\u7684 $0$ \u6709\u5173**\uff09\n\n\u90a3\u4e48\u5047\u5982\u6211\u4eec\u4ece\u53f3\u5f80\u5de6\u67e5\u8be2\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u67e5\u8be2\u5230\u7684\u6700\u540e\u4e00\u4e2a\u6570\uff0c\u518d\u4ece\u8fd9\u4e2a\u8282\u70b9\u5f80\u524d\u627e\u5230\u4e00\u4e2a $0$ \uff0c\u6700\u540e\u8ba1\u7b97\u4ece\u8fd9\u4e2a $0$ \u5230\u6700\u540e\u4e00\u4e2a\u6570\u7684\u7b54\u6848\u5373\u53ef\u3002\n\n\u6bd4\u5982\uff1a\n\n$A = 1,0,1,0,1,1,1,1,0$\n\n\u6211\u73b0\u5728\u60f3\u4ece\u5de6\u5f80\u53f3\u67e5\u8be2 $8$ \u4e2a\u6570\uff0c\u90a3\u4e48\u67e5\u8be2\u5230\u7684\u6700\u540e\u4e00\u4e2a\u6570\u5c31\u662f\u7b2c\u516b\u4e2a\u6570\u3002\u7b2c\u516b\u4e2a\u6570\u5de6\u8fb9\u7684\u7b2c\u4e00\u4e2a $0$ \u5728\u7b2c\u56db\u4e2a\u4f4d\u7f6e\u3002\u7136\u540e\u4ece\u7b2c\u56db\u4e2a\u4f4d\u7f6e\u5411\u53f3 **\u975e\u4e0e** \u5373\u53ef\u3002\n\n\u53c8\u56e0\u4e3a\u8fd9\u6837\u5b50\u8ba1\u7b97\u76f8\u5f53\u4e8e\u8ba1\u7b97 $1\\ \\text{nand}\\ 1\\ \\text{nand}\\  \\dots\\ \\text{nand}\\ 1$ \u3002\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u663e\u7136\u53ef\u4ee5 $O(1)$ \u8ba1\u7b97\u3002\n\n\u6240\u4ee5\u539f\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u6c42\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u5411\u5de6\u548c\u5411\u53f3\u7684\u7b2c\u4e00\u4e2a $0$ \u7684\u4f4d\u7f6e\u3002\u53c8\u56e0\u4e3a\u8fd9\u9053\u9898\u63d2\u5165\u7684\u65b9\u5f0f\u5f88\u5947\u7279\uff0c\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u4ece\u4e0a\u4e00\u4e2a\u6570\u9012\u63a8\u8fc7\u6765\uff08\u4e5f\u53ef\u4ee5\u4ece\u65b0\u52a0\u5165\u7684\u6570\u63a8\u8fc7\u6765\uff09\u3002\u5177\u4f53\u7684\u8bf4\uff1a\n\n**\u8bbe\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u5411\u5de6\u7b2c\u4e00\u4e2a $0$ \u7684\u4f4d\u7f6e\u4e3a $L_i$ \uff0c\u5411\u53f3\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u662f $R_i$**\n\n\u5f53\u6211\u4eec\u4ece\u5de6\u8fb9\u52a0\u4e86\u4e00\u4e2a $0$ \uff0c\u90a3\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e2a $0$ \u53f3\u8fb9\u6240\u6709\u8fde\u7eed\u7684 $1$ \u7684 $L$ \u6570\u7ec4\u90fd\u8bbe\u6210\u8fd9\u4e2a\u4f4d\u7f6e\u3002\u53c8\u56e0\u4e3a\u6bcf\u4e2a $0$ \u6700\u591a\u88ab\u4e00\u4e2a $1$ \u67e5\u627e\u5230\uff0c\u5747\u644a\u590d\u6742\u5ea6\u662f $O($ \u957f\u5ea6 $)$ \u7684\u3002\n\n\u5f53\u6211\u4eec\u4ece\u5de6\u8fb9\u52a0\u4e86\u4e00\u4e2a $1$ \uff0c$R_i$ \u53ef\u4ee5\u76f4\u63a5\u4ece $R_{i+1}$ \u5904\u5f97\u5230\u3002\n\n\u7136\u540e\u7b97\u6cd5\u5927\u6982\u5206\u6790\u5b8c\u4e86\u3002\n\n\u8fd9\u9053\u9898\u7ec6\u8282\u76f8\u5f53\u591a\uff0c\u6bd4\u5982 $0\\ \\text{nand}$ \u4e00\u4e2a\u6570\u7b54\u6848\u80af\u5b9a\u662f $1$ \uff0c\u4f46\u662f\u5b83\u5355\u72ec\u4e00\u4e2a\u6570\u65f6\u5c31\u662f $0$ \uff0c\u56e0\u6b64\u8981\u7279\u5224\u4e00\u5f00\u59cb\u5c31\u662f $0$ \u7684\u60c5\u51b5\u3002\n\n\u4ee3\u7801\u4e3b\u4f53\u90e8\u5206\u4e0d\u957f\uff0c~~\u8f93\u5165\u90e8\u5206\u5360\u4e86\u4e00\u534a\uff0c\u679c\u7136\u662f\u8f93\u5165\u683c\u5f0f\u9632 AK \u9898~~\u3002\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\n//#define ONLINE_JUDGE\n\nnamespace Maker {\n\ntypedef unsigned int uit;\n\nbool __sp;\nuit __x, __y, __z;\nint __type, __k, __m;\n\nconst int L = 1 << 21;\nchar buf[L], *front=buf, *end=buf;\nchar GetChar() {\n  if (front == end) {\n    end = buf + fread(front = buf, 1, L, stdin);\n    if (front == end) return -1;\n  }\n  return *(front++);\n}\n\ntemplate <typename T>\ninline void qr(T &x) {\n  char ch = GetChar(), lst = ' ';\n  while ((ch > '9') || (ch < '0')) lst = ch, ch = GetChar();\n  while ((ch >= '0') && (ch <= '9')) x = (x << 1) + (x << 3) + (ch ^ 48), ch = GetChar();\n  if (lst == '-') x = -x;\n}\n\ntemplate <typename T>\ninline void Begin(const T &x) {\n  __type = x % 10;\n  qr(__x); qr(__y); qr(__z); qr(__m);\n  __sp = (__type == 3) || (__type == 4); __type &= 1;\n}\n\ninline uit __Next_Integer() {\n  __x ^= __y << (__z & 31);\n  __y ^= __z >> (__x & 31);\n  __z ^= __x << (__y & 31);\n  __x ^= __x >> 5; __y ^= __y << 13; __z ^= __z >> 6;\n  return __x;\n}\n\ninline uit Rand() { return __Next_Integer(); }\n\ntemplate <typename Tx, typename Ty, typename Tz>\ninline void Get_Nextline(Tx &x, Ty &y, Tz &z) {\n  if (__m) {\n    --__m;\n    x = 0; y = 0; z = 0;\n    qr(x); qr(y); qr(z);\n    if (x == 0) ++__k;\n  } else {\n    x = Rand() & 1; y = Rand() & 1;\n    if (__k == 0) { x = 0; }\n    if (x == 0) {\n      ++__k;\n      if (__sp) {\n        z = __type;\n      } else {\n        z = Rand() & 1;\n      }\n    } else {\n      int dk = __k >> 1;\n      if (dk == 0) {\n        z = 1;\n      } else {\n        z = Rand() % dk + dk;\n      }\n    }\n  }\n}\n\n}\n\nconst int maxn=3e7+10;\n\nint Left[maxn],Right[maxn];\nint nowL=15000001,nowR=15000000;\nint i,j,k,n,m;\nint ans1,ans2,ans3,ans4;\n\nint main() {\n#ifndef ONLINE_JUDGE\n\tfreopen(\"P5523.in\", \"r\", stdin);\n\tfreopen(\"P5523.out\", \"w\", stdout);\n#endif\n\tscanf(\"%d\", &n);\n\tMaker::Begin(n);\n\tmemset(Left,-1,sizeof(Left));\n\tmemset(Right,-1,sizeof(Right));\n\tint id=0;\n\tfor (int x,y,z;n;--n){\n\t\t++id;\n\t\tint ans=-1;\n\t\tMaker::Get_Nextline(x, y, z);\n\t\tif(x==0 && y==0 && z==1){\n\t\t\tnowL--;\n\t\t\tLeft[nowL]=-1;\n\t\t\tRight[nowL]=Right[nowL+1]; \n\t\t}if(x==0 && y==0 && z==0){\n\t\t\tnowL--;\n\t\t\tLeft[nowL]=nowL;\n\t\t\tRight[nowL]=nowL;\n\t\t\tfor(i=nowL+1;i<=nowR;i++){\n\t\t\t\tif(Left[i]!=-1)break;\n\t\t\t\tLeft[i]=nowL;\n\t\t\t}\n\t\t}\n\t\tif(x==0 && y==1 && z==1){\n\t\t\tnowR++;\n\t\t\tRight[nowR]=-1;\n\t\t\tLeft[nowR]=Left[nowR-1]; \n\t\t}if(x==0 && y==1 && z==0){\n\t\t\tnowR++;\n\t\t\tRight[nowR]=nowR;\n\t\t\tLeft[nowR]=nowR;\n\t\t\tfor(i=nowR-1;i>=nowL;i--){\n\t\t\t\tif(Right[i]!=-1)break;\n\t\t\t\tRight[i]=nowR;\n\t\t\t}\n\t\t}\n\t\tint Z=-1;\n\t\tif(x==1 && y==0){\n\t\t\tz=z+nowL-1;\n\t\t\tZ=Left[z];\n\t\t\tif(z==nowL){\n\t\t\t\tif(Left[z]==-1)ans=1;\n\t\t\t\telse ans=0;\n\t\t\t}else{\n\t\t\t\tif(Z==nowL)Z--;\n\t\t\t\tif(Z==-1)Z=nowL;\n\t\t\t\tif((z-Z)%2==0)ans=1;\n\t\t\t\telse ans=0;\n\t\t\t}\n\t\t}\n\t\tif(x==1 && y==1){\n\t\t\tz=nowR-z+1;\n\t\t\tZ=Right[z];\n\t\t\tif(z==nowR){\n\t\t\t\tif(Right[z]==-1)ans=1;\n\t\t\t\telse ans=0;\n\t\t\t}else{\n\t\t\t\tif(Z==nowR)Z++;\n\t\t\t\tif(Z==-1)Z=nowR;\n\t\t\t\tif((Z-z)%2==0)ans=1;\n\t\t\t\telse ans=0;\n\t\t\t}\n\t\t}\n\t\tif(ans==1)ans1++;\n\t\tif(ans==0 && id%2==1)ans2++;\n\t\tif(ans==1 && id%2==0)ans3++;\n\t\tif(ans==0 && id%1024==0)ans4++;\n//\t\tcout<<x<<' '<<y<<' '<<ans<<endl;\n//\t\tcout<<x<<' '<<y<<' '<<z<<' '<<Z<<' '<<nowL<<' '<<nowR<<\" ans=\"<<ans<<endl;\n//\t\tfor(i=nowL;i<=nowR;i++)cout<<Left[i]<<' ';cout<<endl;\n//\t\tfor(i=nowL;i<=nowR;i++)cout<<Right[i]<<' ';cout<<endl<<endl;\n\t}cout<<ans1<<' '<<ans2<<' '<<ans3<<' '<<ans4<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1583417729,
        "uid": 35891,
        "name": "huangzirui",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5523 \u3010[yLOI2019] \u73cd\u73e0\u3011"
    },
    {
        "content": "\n[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://llingy.ml/posts/1261641707/)\n\n>\u522b\u53f9\u606f\u592a\u591a\u544a\u522b\uff0c\u81f3\u5c11\u76f8\u9047\u5f88\u771f\u5207\u3002\n>\u6447\u66f3\u7740\u76db\u653e\u67af\u7aed\uff0c\u65f6\u95f4\u4ece\u672a\u505c\u6b47\u3002\n>\u5929\u6daf\u6d6a\u8ff9\u7684\u767d\u96ea\uff0c\u5ff5\u5ff5\u4e0d\u5fd8\u5c71\u5ddd\u8774\u8776\u3002\n>\u542c\u8bf4\u6709\u4eba\u5b64\u8d1f\u9ed1\u591c\uff0c\u504f\u8981\u70b9\u4eae\u4eba\u95f4\u7684\u6708\u3002\n\n## \u7b80\u8981\u9898\u610f\n\n\u5b9a\u4e49\u8fd0\u7b97 $a \\operatorname{nand} b$ \u4e3a $\\operatorname{not}(a \\operatorname{and} b)$\uff0c$\\operatorname{and}$ \u6307\u6309\u4f4d\u4e0e\uff0c$\\operatorname{not}$ \u6307\u6309\u4f4d\u53d6\u53cd\u3002\u4f60\u9700\u8981\u52a8\u6001\u7ef4\u62a4\u4e00\u4e2a\u6570\u5217\uff0c\u652f\u6301\u5728\u524d\u7aef\u63d2\u5165\uff0c\u540e\u7aef\u63d2\u5165\uff0c\u8be2\u95ee\u4e00\u6bb5\u524d\u7f00\u6216\u540e\u7f00\u7684 $\\operatorname{nand}$ \u548c\uff0c\u4fdd\u8bc1\u5728\u4efb\u610f\u65f6\u523b\u6570\u5217\u4e2d\u53ea\u6709 $0$ \u548c $1$\u3002\n\n## \u601d\u8def\n\n\u6b64\u5904\u4ec5\u4ecb\u7ecd\u524d\u7f00\u7684\u505a\u6cd5\uff0c\u540e\u7f00\u4e0e\u524d\u7f00\u7ef4\u62a4\u65b9\u5f0f\u76f8\u540c\u3002\n\n$\\operatorname{nand}$ \u7684\u8fd0\u7b97\u8868\uff1a\n\n| $\\bf{nand}$ | $\\bf{0}$ | $\\bf{1}$ |\n| :---------: | :------: | :------: |\n|     $0$     |   $1$    |   $1$    |\n|     $1$     |   $1$    |   $0$    |\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5f53\u53c2\u4e0e\u8fd0\u7b97\u7684\u4e24\u4e2a\u6570\u5b57\u4e2d\u53ea\u8981\u6709 $0$ \u90a3\u4e48\u8fd0\u7b97\u7ed3\u679c\u5fc5\u4e3a $1$\u3002\u6240\u4ee5\u5f53\u8be2\u95ee\u7684\u524d\u7f00\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u4e3a $0$ \u65f6\uff0c\u5fc5\u7136\u7ed3\u679c\u4e3a $1$\u3002\u800c\u5982\u679c\u662f $1$\uff0c\u7531\u4e8e\u4efb\u610f\u4e00\u6bb5\u4ee5 $0$ \u7ed3\u5c3e\u7684\u524d\u7f00\u7684 $\\operatorname{nand}$ \u548c\u5fc5\u4e3a $1$\u3002\u5219\u53ea\u9700\u8ba1\u7b97\u5728\u8fd9\u4e2a\u6570\u5b57\u524d\u9762\u79bb\u8fd9\u4e2a\u6570\u5b57\u6700\u8fd1\u7684\u4e00\u4e2a $0$ \u5230\u8fd9\u4e2a\u6570\u5b57\u7684 $\\operatorname{nand}$ \u548c\u3002\u8fd9\u662f\u4e00\u6bb5\u5168 $1$ \u6bb5\u3002\u5168 $1$ \u6bb5\u7684\u8fd0\u7b97\u7ed3\u679c\u4e0e $1$ \u7684\u4e2a\u6570\u5947\u5076\u6027\u76f8\u5173\u3002\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a $1$ \u7ef4\u62a4 $dis_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u8ddd\u524d\u9762\u6700\u8fd1\u4e00\u4e2a $0$ \u7684\u8ddd\u79bb\uff0c\u521d\u59cb\u65f6 $dis_i$ \u4e3a $-1$ \u8868\u793a\u524d\u9762\u6ca1\u6709 $0$\u3002\n\n\u5f80\u540e\u63d2\u5165\u4e00\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u5f53\u8fd9\u4e2a\u6570\u4e3a $1$ \u65f6\u66f4\u65b0 $dis$\u3002\u8bbe\u63d2\u5165\u7684\u4f4d\u7f6e\u4e3a $i$\uff0c\u68c0\u67e5\u524d\u9762\u4e00\u4e2a\u6570\uff0c\u5982\u679c\u524d\u9762\u4e3a $0$\uff0c$dis_i$ \u8d4b\u4e3a $1$\u3002\u5426\u5219\u6309\u7167 $dis_{i-1}$ \u66f4\u65b0 $dis_i$\u3002\n\n\u5f80\u524d\u63d2\u5165\u4e00\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u6570\u4e3a $1$ \u65f6\u76f4\u63a5\u628a $dis_1$ \u8d4b\u4e3a $-1$\uff0c\u82e5\u4e3a $0$\uff0c\u5219\u5411\u540e\u904d\u5386\u6bcf\u4e2a\u503c\u4e3a $1$ \u5e76\u4e14 $dis$ \u4e3a $-1$ \u7684\u4f4d\u7f6e\uff0c\u66f4\u65b0\u8fd9\u4e9b\u4f4d\u7f6e\u7684 $dis$ \u503c\u3002\u6bcf\u4e2a\u6570\u5b57\u6700\u591a\u88ab\u79bb\u5176\u6700\u8fd1\u7684\u524d\u9762\u7684 $0$ \u66f4\u65b0\u4e00\u6b21\uff0c\u5747\u644a\u65f6\u95f4\u590d\u6742\u5ea6 $O(1)$\u3002\n\n\u6ce8\u610f\u7279\u5224 $0$ \u5728\u7b2c\u4e00\u4e2a\u6570\u65f6\u7684\u60c5\u51b5\uff0c\u6ca1\u6709\u8fdb\u884c $\\operatorname{nand}$ \u8fd0\u7b97\uff0c\u503c\u4e3a $0$\u3002\n\n\u8bbe\u6709 $n$ \u6b21\u64cd\u4f5c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\u3002\n\n## Code\n\u5408\u7406\u4f7f\u7528\u5c01\u88c5\u53ef\u4ee5\u7b80\u5316\u4ee3\u7801\u3002\u6b64\u4efd\u4ee3\u7801\u7701\u7565\u9898\u9762\u63d0\u4f9b\u7684\u6570\u636e\u751f\u6210\u5668\u3002\n```cpp\n#include<cstdio>\n#include<iostream>\nnamespace lly\n{\n\u3164\u3164using namespace std;\n\u3164\u3164constexpr int N=1e7+11;\n\u3164\u3164struct deque\n\u3164\u3164{\n\u3164\u3164\u3164\u3164int a[N<<1],dis[N<<1],p1=N,p2=N;\n\u3164\u3164\u3164\u3164inline void push_back(int x)\n\u3164\u3164\u3164\u3164{\n\u3164\u3164\u3164\u3164\u3164\u3164++x;\n\u3164\u3164\u3164\u3164\u3164\u3164a[++p2]=x;\n\u3164\u3164\u3164\u3164\u3164\u3164if(a[p2]==1)return;\n\u3164\u3164\u3164\u3164\u3164\u3164if(a[p2-1]==2)dis[p2]=((dis[p2-1]==-1)?-1:(dis[p2-1]+1));\n\u3164\u3164\u3164\u3164\u3164\u3164else dis[p2]=(p2==p1+1?-1:0);\n\u3164\u3164\u3164\u3164}\n\u3164\u3164\u3164\u3164inline void push_front(int x)\n\u3164\u3164\u3164\u3164{\n\u3164\u3164\u3164\u3164\u3164\u3164++x;\n\u3164\u3164\u3164\u3164\u3164\u3164a[p1--]=x;\n\u3164\u3164\u3164\u3164\u3164\u3164if(a[p1+1]==1) for(int i=p1+2;i<=p2&&a[i]==2;i++)dis[i]=i-p1-2;\n\u3164\u3164\u3164\u3164\u3164\u3164else dis[p1+1]=-1;\n\u3164\u3164\u3164\u3164}\n\u3164\u3164\u3164\u3164inline int query(int x)\n\u3164\u3164\u3164\u3164{\n\u3164\u3164\u3164\u3164\u3164\u3164if(a[p1+x]==1) return x!=1;\n\u3164\u3164\u3164\u3164\u3164\u3164if(dis[p1+x]==-1) return x&1;\n\u3164\u3164\u3164\u3164\u3164\u3164if(dis[p1+x]==x-2) return (dis[p1+x]&1)^1;\n\u3164\u3164\u3164\u3164\u3164\u3164return dis[p1+x]&1;\n\u3164\u3164\u3164\u3164}\n\u3164\u3164}o,r;\n\u3164\u3164namespace collect\n\u3164\u3164{\n\u3164\u3164\u3164\u3164int s1=0,s2=0,s3=0,s4=0;\n\u3164\u3164\u3164\u3164inline void put(int id,int x)\n\u3164\u3164\u3164\u3164{\n\u3164\u3164\u3164\u3164\u3164\u3164if(x)++s1;\n\u3164\u3164\u3164\u3164\u3164\u3164if((id&1)&&!x)++s2;\n\u3164\u3164\u3164\u3164\u3164\u3164if(!(id&1)&&x)++s3;\n\u3164\u3164\u3164\u3164\u3164\u3164if(!(id&1023)&&!x)++s4;\n\u3164\u3164\u3164\u3164}\n\u3164\u3164\u3164\u3164inline void out(){cout<<s1<<\" \"<<s2<<\" \"<<s3<<\" \"<<s4<<\"\\n\";}\n\u3164\u3164}\n\u3164\u3164inline void work()\n\u3164\u3164{\n\u3164\u3164\u3164\u3164int n;scanf(\"%d\",&n);\n\u3164\u3164\u3164\u3164Maker::Begin(n);\n\u3164\u3164\u3164\u3164for(int i=1;i<=n;i++)\n\u3164\u3164\u3164\u3164{\n\u3164\u3164\u3164\u3164\u3164\u3164int x,y,z;Maker::Get_Nextline(x,y,z);\n\u3164\u3164\u3164\u3164\u3164\u3164if(x==0)\n\u3164\u3164\u3164\u3164\u3164\u3164{\n\u3164\u3164\u3164\u3164\u3164\u3164\u3164\u3164if(y==0) o.push_front(z),r.push_back(z);\n\u3164\u3164\u3164\u3164\u3164\u3164\u3164\u3164else o.push_back(z),r.push_front(z);\n\u3164\u3164\u3164\u3164\u3164\u3164}\n\u3164\u3164\u3164\u3164\u3164\u3164else\n\u3164\u3164\u3164\u3164\u3164\u3164{\n\u3164\u3164\u3164\u3164\u3164\u3164\u3164\u3164int ans;\n\u3164\u3164\u3164\u3164\u3164\u3164\u3164\u3164if(y==0) ans=o.query(z);\n\u3164\u3164\u3164\u3164\u3164\u3164\u3164\u3164else ans=r.query(z);\n\u3164\u3164\u3164\u3164\u3164\u3164\u3164\u3164collect::put(i,ans);\n\u3164\u3164\u3164\u3164\u3164\u3164}\n\u3164\u3164\u3164\u3164}\n\u3164\u3164\u3164\u3164collect::out();\n\u3164\u3164}\n}\nint main()\n{\n\u3164\u3164#ifdef llydebug\n\u3164\u3164freopen(\".in\",\"r\",stdin);\n\u3164\u3164#endif\n\u3164\u3164lly::work();\n\u3164\u3164return 0;\n}\n```",
        "postTime": 1669357326,
        "uid": 416928,
        "name": "llingy",
        "ccfLevel": 7,
        "title": "P5523 [yLOI2019] \u73cd\u73e0 \u9898\u89e3"
    },
    {
        "content": "\u4e0e\u975e\u8fd0\u7b97\u5e76\u4e0d\u6ee1\u8db3\u7ed3\u5408\u5f8b\uff0c\u56e0\u6b64\u6211\u6700\u521d\u7684\u60f3\u6cd5\u662f\u5229\u7528\u5fb7\u6469\u6839\u5f8b\u5316\u7b80\u6240\u6c42\u8868\u8fbe\u5f0f\uff0c\u518d\u8003\u8651\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u4fe1\u606f\u3002\u540e\u9762\u53d1\u73b0\u5e76\u65e0\u6536\u83b7\uff0c\u6700\u7ec8\u653e\u5f03\u3002\n\n\u6211\u4eec\u5148\u89c2\u5bdf\u4e0e\u975e\u8fd0\u7b97\u7684\u771f\u503c\u8868\uff1a\n\n| $a$ | $b$ | $\\mathit{out}$ |\n| :-----------: | :-----------: | :-----------: |\n| $0$ | $0$ | $1$ |\n| $0$ | $1$ | $1$ |\n| $1$ | $0$ | $1$ |\n| $1$ | $1$ | $0$ |\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u4e0e\u975e\u8fd0\u7b97\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a $1$\uff0c\u5f53\u4e14\u4ec5\u5f53\u8f93\u5165\u7684\u4e24\u4e2a\u503c\u4e2d\uff0c\u5b58\u5728\u4e00\u4e2a $0$\u3002\n\n\u5229\u7528\u8fd9\u4e00\u7ed3\u8bba\uff0c\u9898\u76ee\u6240\u6c42\u7684\u8868\u8fbe\u5f0f\u5c31\u53ef\u4ee5\u5927\u5927\u5316\u7b80\u4e86\uff1a\u6211\u4eec\u627e\u5230\u4e00\u4e2a\u503c\u4e3a $0$ \u7684\u53d8\u91cf\uff0c\u5219\u5728\u5b83\u4e4b\u524d\u7684\u90e8\u5206\u7684\u8868\u8fbe\u5f0f\u7684\u503c\u4e0e\u8fd9\u4e2a $0$ \u8fdb\u884c\u4e0e\u975e\u8fd0\u7b97\uff0c\u8f93\u51fa\u4e00\u5b9a\u662f $1$\uff08\u8fd9\u91cc\u6709\u4e2a\u4f8b\u5916\uff0c\u7a0d\u540e\u518d\u63d0\uff09\u3002\n\n\u6211\u4eec\u901a\u8fc7\u8fd9\u4e2a\u65b9\u6cd5\u5316\u7b80\u8868\u8fbe\u5f0f\uff0c\u6700\u540e\u53ef\u4ee5\u5f97\u5230\u82e5\u5e72\u4e2a $1$ \u53c2\u4e0e\u8fd0\u7b97\u7684\u4e0e\u975e\u8868\u8fbe\u5f0f\u3002\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u662f\u5bb9\u6613\u6c42\u503c\u7684\uff1a\u82e5\u8868\u8fbe\u5f0f\u542b\u6709\u5947\u6570\u4e2a $1$\uff0c\u503c\u4e3a $1$\uff1b\u82e5\u8868\u8fbe\u5f0f\u542b\u6709\u5076\u6570\u4e2a $1$\uff0c\u503c\u4e3a $0$\u3002\n\n\u73b0\u5728\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u5e8f\u5217\u4e2d $0$ \u7684\u4fe1\u606f\u3002\u6ce8\u610f\u5230\uff0c\u4e3a\u4e86\u4f7f\u5f0f\u5b50\u5316\u4e3a\u6700\u7b80\uff0c\u6211\u4eec\u6bcf\u6b21\u9700\u8981\u627e\u5230\u8ddd\u79bb\u8868\u8fbe\u5f0f\u672b\u7aef\u6700\u8fd1\u7684\u90a3\u4e2a $0$\uff0c\u8003\u8651\u7ef4\u62a4\u8fd9\u4e2a\u4fe1\u606f\u3002\n\n\u8fd9\u91cc\u4ee5\u524d\u7f00\u4e3a\u4f8b\uff0c\u540e\u7f00\u540c\u7406\u4e0d\u518d\u5c55\u5f00\u3002\n\n\u5bf9\u4e8e\u524d\u7f00\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u53d8\u91cf\uff0c\u9700\u8981\u627e\u5230\u5176\u5de6\u8fb9\u7684\u7b2c\u4e00\u4e2a $0$\u3002\u6211\u4eec\u53ea\u9700\u8981\u5728\u6bcf\u4ece\u5de6\u7aef\u63d2\u5165\u4e00\u4e2a\u65b0\u7684 $0$ \u65f6\uff0c\u5c06\u8fd9\u4e2a $0$ \u548c\u4e0a\u4e00\u4e2a $0$ \u4e4b\u95f4\u7684 $1$\uff08\u4ee5\u53ca\u65b0\u63d2\u5165\u7684 $0$\uff09\u7684\u4fe1\u606f\u66f4\u65b0\u4e3a\u6307\u5411\u65b0\u63d2\u5165\u7684 $0$ \u5373\u53ef\u3002\n\n\u56e0\u4e3a\u53ea\u6709\u4e24\u7aef\u63d2\u5165\u64cd\u4f5c\uff0c\u4e0a\u9762\u7684\u7ef4\u62a4\u4fe1\u606f\u64cd\u4f5c\u6bcf\u4e2a\u4f4d\u7f6e\u6700\u591a\u88ab\u4fee\u6539\u4e00\u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n)$ \u7684\u3002\n\n\u6700\u540e\u8bf4\u4e00\u4e0b\u524d\u9762\u63d0\u5230\u7684\u4f8b\u5916\uff1a\u867d\u7136\u4e0e\u975e\u8fd0\u7b97\u91cc\u6709 $0$ \u4f5c\u4e3a\u8f93\u5165\u6570\u65f6\uff0c\u8f93\u51fa\u503c\u4e3a $1$\uff0c\u4f46\u5355\u72ec\u7684\u4e00\u4e2a $0$ \u51fa\u73b0\u65f6\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u53c2\u4e0e\u4e0e\u975e\u8fd0\u7b97\uff0c\u8fd8\u9700\u8981\u5c06\u5176\u4f5c\u4e3a $0$ \u770b\u5f85\u3002\n\n\u611f\u89c9\u81ea\u5df1\u7684\u5b9e\u73b0\u633a\u4e11\uff0c\u8c03\u8bd5\u7684\u65f6\u5019\u6709\u70b9\u70e7\u8111\u3002\n\n```cpp\n// Problem: P5523 [yLOI2019] \u73cd\u73e0\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/P5523\n// Memory Limit: 500 MB\n// Time Limit: 2000 ms\n//\n// Powered by CP Editor (https://cpeditor.org)\n\n// --\u6a21\u677f\u90e8\u5206\u7565\u53bb--\n\nconst int maxn = 10000000;\n// \u5b9e\u73b0\u7684\u65f6\u5019\u8003\u8651\u5c06\u5de6\u7aef\u63d2\u5165\u7684\u90e8\u5206\u548c\u53f3\u7aef\u63d2\u5165\u7684\u90e8\u5206\u5206\u5f00\u5904\u7406\u3002\nint lh[maxn + 5], rh[maxn + 5];\nint lhl[maxn + 5], rhl[maxn + 5];\nint lhr[maxn + 5], rhr[maxn + 5];\nint ltop = maxn, rtop = 1;\n\nvoid insert(int y, int z) {\n  if (y == 0) {\n    lh[ltop] = z;\n    if (z == 0) {\n      lhl[ltop] = ltop;\n      for (int i = ltop + 1; lh[i] && i <= maxn; i++) lhl[i] = ltop;\n      lhr[ltop] = ltop;\n    } else\n      lhr[ltop] = lhr[ltop + 1];\n    ltop--;\n  } else {\n    rh[rtop] = z;\n    if (z == 0) {\n      rhr[rtop] = rtop;\n      for (int i = rtop - 1; rh[i] && i > 0; i--) rhr[i] = rtop;\n      rhl[rtop] = rtop;\n    } else\n      rhl[rtop] = rhl[rtop - 1];\n    rtop++;\n  }\n}\nint query(int y, int z) {\n  if (y == 0) {\n    if (ltop + z <= maxn) {\n      int pos = ltop + z;\n      if (lhl[pos] == -1)\n        return z % 2;\n      else {\n        int npos = lhl[pos];\n        return (pos - npos + (npos != ltop + 1)) % 2;\n      }\n    } else {\n      int pos = (ltop + z) - maxn;\n      if (rhl[pos] == -1) {\n        if (lhl[maxn] == -1)\n          return z % 2;\n        else {\n          int npos = lhl[maxn];\n          return (ltop + z - npos + (npos != ltop + 1)) % 2;\n        }\n      } else {\n        int npos = rhl[pos];\n        return (pos - npos + (npos != 1 || ltop != maxn)) % 2;\n      }\n    }\n  } else {\n    if (rtop - z > 0) {\n      int pos = rtop - z;\n      if (rhr[pos] == -1)\n        return z % 2;\n      else {\n        int npos = rhr[pos];\n        return (npos - pos + (npos != rtop - 1)) % 2;\n      }\n    } else {\n      int pos = maxn + (rtop - z);\n      if (lhr[pos] == -1) {\n        if (rhr[1] == -1)\n          return z % 2;\n        else {\n          int npos = rhr[1];\n          return (maxn - pos + 1 + npos - (npos == rtop - 1)) % 2;\n        }\n      } else {\n        int npos = lhr[pos];\n        return (npos - pos + (npos != maxn || rtop != 1)) % 2;\n      }\n    }\n  }\n}\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  Maker::Begin(n);\n  memset(lhl, -1, sizeof(lhl));\n  memset(lhr, -1, sizeof(lhr));\n  memset(rhl, -1, sizeof(rhl));\n  memset(rhr, -1, sizeof(rhr));\n  int res1 = 0, res2 = 0, res3 = 0, res4 = 0;\n  int cnt = 0;\n  for (int k = 1; k <= n; k++) {\n    int x, y, z;\n    Maker::Get_Nextline(x, y, z);\n    if (x == 0)\n      insert(y, z);\n    else {\n      cnt++;\n      int res = query(y, z);\n      res1 += (res == 1);\n      res2 += (k % 2 == 1 && res == 0);\n      res3 += (k % 2 == 0 && res == 1);\n      res4 += (k % 1024 == 0 && res == 0);\n    }\n  }\n  printf(\"%d %d %d %d\\n\", res1, res2, res3, res4);\n  return 0;\n}\n```",
        "postTime": 1642514994,
        "uid": 22030,
        "name": "StudyingFather",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5523 \u3010[yLOI2019] \u73cd\u73e0\u3011"
    }
]