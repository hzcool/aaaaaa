[
    {
        "content": "### Description \n\u6c42\u5bf9\u6bcf\u4e00\u4e2a\u8fde\u7eed\u5b57\u4e32\u5c06\u5b83\u5207\u5272\u6210\u5f62\u5982 AABB \u7684\u5f62\u5f0f\u7684\u65b9\u6848\u6570\u4e4b\u548c\n### Solution\n\u663e\u7136 AABB \u662f\u7531\u4e24\u4e2a AA \u4e32\u62fc\u8d77\u6765\u7684\n\n\u8003\u8651\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4 a[i] \u548c b[i] \uff0c\u5176\u4e2d a[i] \u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\u6709\u591a\u5c11\u4e2a AA \u4e32\uff0cb[i] \u8868\u793a\u4ee5 $i$ \u5f00\u5934\u6709\u591a\u5c11\u4e2a AA \u4e32\n\n\u6700\u540e\u7b54\u6848\u5c31\u662f $\\sum \\limits _{i=1}^{n-1}a[i]b[i+1]$ \uff08\u5c31\u662f\u4e24\u4e2a\u4e32\u62fc\u8d77\u6765\uff09\n\n\u5982\u4f55\u6c42 a[i] \u548c b[i] \u5462\uff1f\n\n\u9996\u5148\u6709\u4e00\u4e2a\u975e\u5e38\u663e\u7136\u7684 n^2 \u54c8\u5e0c\u505a\u6cd5\uff08\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i$ \u7528 $j$ \u626b\u4e00\u904d\u7528\u54c8\u5e0c\u5224\u65ad\u6709\u51e0\u4e2a AA \u4e32\uff09\uff0c\u6709 95 \u5206\uff01\n\n\u5982\u4f55\u62ff\u5230\u6700\u540e\u7684 5 \u5206\u5462\uff1f\u8003\u8651\u679a\u4e3e\u4e00\u4e2a Len \uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6c42\u51fa\u4ed6\u662f\u5426\u662f\u4e00\u4e2a 2 * Len \u7684 AA \u4e32\u7684\u5f00\u5934 / \u7ed3\u5c3e\u3002\n\n\u6211\u4eec\u6bcf\u9694 Len \u653e\u4e00\u4e2a\u70b9\uff0c\u8fd9\u6837\u6bcf\u4e00\u4e2a \u957f\u5ea6\u4e3a 2 * Len \u7684 AA \u4e32\u90fd\u81f3\u5c11\u4f1a\u7ecf\u8fc7\u4e24\u4e2a\u76f8\u90bb\u7684\u70b9\u3002\n\n\u6240\u4ee5\u518d\u8f6c\u6362\u4e3a\u6bcf\u4e24\u4e2a\u76f8\u90bb\u7684\u70b9\u4f1a\u5bf9 a, b \u4ea7\u751f\u591a\u5c11\u8d21\u732e\u3002\n\n\u5148\u6c42\u51fa\u8fd9\u5bf9\u76f8\u90bb\u70b9\u6240\u4ee3\u8868\u7684\u524d\u7f00\u7684\u6700\u957f\u516c\u5171\u540e\u7f00 LCS \u548c \u6240\u4ee3\u8868\u7684\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00 LCP\n\n\u5982\u679c LCP + LCS < Len \u5c31\u4e0b\u9762\u8fd9\u79cd\u60c5\u51b5\uff1a\n\n![](https://i.loli.net/2018/12/08/5c0b394224f12.png)\n\n\u5176\u4e2d\u4e24\u4e2a\u7ea2\u7ebf\u662f\u5173\u952e\u70b9\uff08\u76f8\u8ddd\u4e3a Len\uff09\uff0c\u84dd\u7ebf\u662fLCS\uff0c\u7eff\u7ebf\u662fLCP\uff0cLCP+LCS < Len\n\n\u5219\u6709 \n![](https://i.loli.net/2018/12/08/5c0b3a430c933.png)\n\n\u8fd9\u6761\u7d2b\u7ebf\u5c31\u662f\u7b2c\u4e00\u4e2a\u53ef\u80fd\u6ee1\u8db3\u6761\u4ef6\u7684 AA \u4e32\n\n\u4f46\u6b64\u65f6\u6211\u4eec\u4f1a\u53d1\u73b0\u4e0b\u56fe\n\n![](https://i.loli.net/2018/12/08/5c0b3aa4cbd94.png)\n\n\u5176\u4e2d\u4e24\u4e2a\u7ea2\u8272\u8367\u5149\u7b14\u7684\u90e8\u5206\u5728 AA \u4e32\u4e2d\u662f\u5bf9\u5e94\u7684\uff0c\u4f46\u4ed6\u4eec\u81f3\u5c11\u6709\u4e00\u4e2a\u4f4d\u7f6e\u5e76\u4e0d\u76f8\u540c \uff08\u4e0d\u7136LCP\u53ef\u4ee5\u518d\u957f\uff09\n\n\u6240\u4ee5\u6b64\u65f6\u4e0d\u4f1a\u6709\u4efb\u610f\u4e00\u4e2a\u957f\u5ea6\u4e3a 2 * Len \u7684 AA \u4e32\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u5982\u679c LCP + LCS >= Len \u5c31\u6709\u4e0b\u9762\u8fd9\u79cd\u60c5\u51b5\n\n![](https://i.loli.net/2018/12/08/5c0b3bb7dd8da.png)\n\n\u6b64\u65f6\u4e2d\u95f4\u5fc5\u7136\u5c31\u6ca1\u6709\u7a7a\u9699\u3002\u53ef\u4ee5\u53d1\u73b0\uff1a\n\n![](https://i.loli.net/2018/12/08/5c0b3c8bcaa8c.png)\n\n\u7c89\u8272\u7684\u662f\u7b2c\u4e00\u4e2a AA \u4e32\uff0c\u53ef\u4ee5\u53d1\u73b0\u5b83\u662f\u53ef\u4ee5\u5206\u6210\u4e24\u4e2a\u76f8\u540c\u7684 A \u4e32\u7684\uff08\u53ef\u4ee5\u7406\u89e3\u6210\u4e2d\u95f4\u6ca1\u6709\u7f1d\u9699\u4e86\u6240\u4ee5\u5c31\u6ca1\u6709\u4e0d\u4e00\u6837\u7684\u4e86\uff09\n\n\u7136\u540e\u8fd9\u4e2a AA \u4e32\u53ef\u4ee5\u4e00\u76f4\u5f80\u540e\u6ed1\u52a8\uff0c\u6bcf\u6ed1\u52a8\u4e00\u4e2a\u4f4d\u7f6e\u90fd\u53ef\u4ee5\u5f62\u6210\u4e00\u4e2a\u65b0\u7684 AA \u4e32\u77e5\u9053 AA \u4e32\u7684\u540e\u7aef\u70b9\u6ed1\u52a8\u5230\u6700\u53f3\u8fb9\u7684\u7eff\u8272\u7aef\u70b9\u3002\u4e5f\u5c31\u662f\u6ed1\u52a8\u5230\u68d5\u8272 AA \u4e32\n\n\u6b64\u65f6\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e00\u4e2a\u5b58\u5728\u4e8e\u7ea2\u8272\u8367\u5149\u90e8\u5206\u7684\u70b9\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684 AA \u4e32\u7684\u5f00\u5934\n\n\u540c\u7406\uff0c\u6bcf\u4e00\u4e2a\u518d\u7eff\u8272\u8367\u5149\u7b14\u7684\u70b9\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684 AA \u4e32\u7684\u7ed3\u5c3e\u3002\n\n\u4e8e\u662f\u5c31\u5c06\u7ea2\u8272\u8367\u5149\u7b14\u7684\u533a\u95f4\u7684 b \u52a0\u4e0a 1\uff0c\u7eff\u8272\u7684 a \u52a0\u4e0a 1\uff0c\u5c31\u5927\u529f\u544a\u6210\u3002\n\n\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e2a\u8fc7\u7a0b\u5462\uff1f\u590d\u6742\u5ea6\u662f\u4ec0\u4e48\u5462\uff1f\n\n1. \u679a\u4e3e Len \uff0c\u6bcf\u9694 Len \u8bbe\u7f6e\u5173\u952e\u70b9\uff1a\u8fd9\u4e2a\u7684\u590d\u6742\u5ea6\u662f\u8c03\u548c\u7ea7\u6570 $O(n \\log n)$\n2. \u6c42 \u540e\u7f00LCP\uff0c\u524d\u7f00LCS\uff1a\u4f7f\u7528\u540e\u7f00\u6570\u7ec4 + st \u8868 \u505a\u5230 O(1) \u67e5\u8be2\n3.  \u533a\u95f4\u52a0\u4e0a 1 \uff1a \u5dee\u5206\u7ef4\u62a4\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u81f3\u6b64\uff0c\u6b64\u9898\u5b8c\u7ed3\n\n### Code\n\n[\u770b\u4ee3\u7801\u6233\u8fd9\u91cc](https://www.cnblogs.com/acfunction/p/10087144.html)",
        "postTime": 1544240842,
        "uid": 54745,
        "name": "Gypsophila",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1117 \u3010[NOI2016]\u4f18\u79c0\u7684\u62c6\u5206 \u3011"
    },
    {
        "content": "\u5e7f\u544a\uff1a\u98df\u7528[$blog$](https://www.cnblogs.com/heyujun/p/10360053.html)\u4f53\u9a8c\u66f4\u4f73\n\n\u8003\u8651\u4e00\u4e2a\u5f62\u5982$AABB$\u7684\u4e32\u662f\u7531\u4e24\u4e2a\u5f62\u5982$AA$\u7684\u4e32\u62fc\u8d77\u6765\u7684\n\n\u90a3\u4e48\u6211\u4eec\u8bbe\n\n$f[i]$:\u4ee5\u4f4d\u7f6e$i$\u4e3a\u7ed3\u5c3e\u7684\u5f62\u5982$AA$\u4e32\u7684\u4e2a\u6570\n\n$g[i]$:\u4ee5\u4f4d\u7f6e$i$\u4e3a\u5f00\u5934\u7684\u5f62\u5982$AA$\u4e32\u7684\u4e2a\u6570\n$$\\therefore Ans=\\sum_{i=1}^nf[i]*g[i+1]$$\n\u9898\u76ee\u7684\u96be\u70b9\u8f6c\u5316\u4e3a\u6c42$f,g$\u3002\n\n\u4f46\u662f\uff0c\u5176\u5b9e\u6211\u4eec\u53ea\u8981$O(n^2)$\u66b4\u529b\u6c42\u4e00\u4e0b\u5c31\u6709$95pts$\u4e86\uff0c\n\n\u6240\u4ee5\u6211\u4eec\u63a5\u4e0b\u6765\u8003\u8651\u6700\u540e\u7684$5pts$\u600e\u4e48\u62ff\uff1a\n\n\u6211\u4eec\u679a\u4e3e$A$\u7684\u957f\u5ea6$len$\n\n\u5c06\u6240\u6709\u4f4d\u7f6e\u4e3a$len$\u7684\u500d\u6570\u7684\u70b9\u8bbe\u4e3a\u5173\u952e\u70b9\uff0c\n\n\u5219\u5982\u679c\u4e00\u4e2a$AA$\u6ee1\u8db3\u8981\u6c42\n\n\u8fd9\u4e2a$AA$\u5fc5\u8fc7\u4e24\u4e2a\u5173\u952e\u70b9\uff0c\n\n\u90a3\u4e48\u6211\u4eec\u8981\u7b97\u7684\u5c31\u662f\u76f8\u90bb\u4e24\u4e2a\u5173\u952e\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff1a\n\n\u8bb0\u76f8\u90bb\u4e24\u4e2a\u5173\u952e\u70b9\u4e3a$i,j$\u90a3\u4e48$j=i+len$\n\n\u8bb0$Lcp=lcp(suf(i), suf(j)),Lcs=lcs(pre(i-1),pre(j-1))$\n\n\u90a3\u4e48\uff0c\u5982\u679c$Lcp+Lcs<len$\uff0c\u5219\u4e0d\u80fd\u6784\u6210$AA$\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u76f8\u5f53\u4e8e\u8fd9\u6837\u4e00\u79cd\u60c5\u51b5\uff1a\n$$\\underbrace{.......i-1}_{Lcs}\\;\\overbrace{\\underbrace{i........}_{Lcp}\\;....\\underbrace{.......j-1}_{Lcs}}^{len}\\;\\underbrace{j........}_{Lcp}$$\n\u8fd9\u6837\u5b50\u662f\u4e0d\u5408\u6cd5\u7684\u3002\n\n\u53cd\u4e4b\uff0c\u4e2d\u95f4\u4e24\u6bb5\u7684$Lcp,Lcs$\u4f1a\u6709\u4ea4\uff0c\u800c\u6211\u4eec\u8fd9\u4e2a$A$\u4e32\u7684\u7ec8\u70b9\u843d\u5728\u4e2d\u95f4\u957f\u5ea6\u4e3a$Lcp+Lcs-len+1$\u7684\u4ea4\u4e0a\u90fd\u662f\u53ef\u4ee5\u7684\n\n\u56e0\u4e3a\u8fd9\u6837\u7684\u8bdd\u5e73\u79fb\u4e00\u4e0b\u53ef\u4ee5\u4fdd\u8bc1\u7d27\u8ddf\u7740\u51fa\u73b0\u4e00\u4e2a\u4e0d\u91cd\u53e0\u7684$A$\u4e32\n\n\u53c8\u56e0\u4e3a\u4e32$A$\u8d77\u70b9\u548c\u7ec8\u70b9\u5206\u522b\u51fa\u73b0\u7684\u4f4d\u7f6e\u662f\u4e00\u6bb5\u533a\u95f4\uff0c\u6240\u4ee5\u76f4\u63a5\u5206\u522b\u5728$f,g$\u4e0a\u5dee\u5206\u5373\u53ef\n\n\u590d\u6742\u5ea6\u662f\u8c03\u548c\u7ea7\u6570$O(nlogn)$\u3002\n\n\u5177\u4f53\u7ec6\u8282\u770b\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream> \n#include <cstdio> \n#include <cstdlib> \n#include <cstring> \n#include <cmath> \n#include <algorithm> \n#include <map> \nusing namespace std; \ninline int gi() { \n    register int data = 0, w = 1; \n    register char ch = 0; \n    while (!isdigit(ch) && ch != '-') ch = getchar(); \n    if (ch == '-') w = -1, ch = getchar(); \n    while (isdigit(ch)) data = 10 * data + ch - '0', ch = getchar(); \n    return w * data; \n} \nconst int MAX_N = 3e4 + 5;\nchar a[MAX_N]; \nint N, lg[MAX_N], f[MAX_N], g[MAX_N]; \nstruct SuffixArray { \n\tint sa[MAX_N], rnk[MAX_N], lcp[MAX_N]; \n\tvoid buildSA() { \n        #define cmp(i, j, k) (y[i] == y[j] && y[i + k] == y[j + k]) \n\t\tstatic int x[MAX_N], y[MAX_N], bln[MAX_N];\n\t\tmemset(sa, 0, sizeof(sa)); \n\t\tmemset(rnk, 0, sizeof(rnk)); \n\t\tmemset(lcp, 0, sizeof(lcp)); \n\t\tmemset(x, 0, sizeof(x)); \n\t\tmemset(y, 0, sizeof(y)); \n\t\tmemset(bln, 0, sizeof(bln));\n\t\tint M = 122; \n\t\tfor (int i = 1; i <= N; i++) bln[x[i] = a[i]]++; \n\t\tfor (int i = 1; i <= M; i++) bln[i] += bln[i - 1]; \n\t\tfor (int i = N; i >= 1; i--) sa[bln[x[i]]--] = i; \n\t\tfor (int k = 1; k <= N; k <<= 1) { \n\t\t\tint p = 0; \n\t\t\tfor (int i = 0; i <= M; i++) y[i] = 0; \n\t\t\tfor (int i = N - k + 1; i <= N; i++) y[++p] = i; \n\t\t\tfor (int i = 1; i <= N; i++) if (sa[i] > k) y[++p] = sa[i] - k;\n\t\t\tfor (int i = 0; i <= M; i++) bln[i] = 0; \n\t\t\tfor (int i = 1; i <= N; i++) bln[x[y[i]]]++; \n\t\t\tfor (int i = 1; i <= M; i++) bln[i] += bln[i - 1]; \n\t\t\tfor (int i = N; i >= 1; i--) sa[bln[x[y[i]]]--] = y[i]; \n\t\t\tswap(x, y); x[sa[1]] = p = 1;\n\t\t\tfor (int i = 2; i <= N; i++) x[sa[i]] = cmp(sa[i], sa[i - 1], k) ? p : ++p;\n\t\t\tif (p >= N) break;\n\t\t\tM = p; \n\t\t} \n\t\tfor (int i = 1; i <= N; i++) rnk[sa[i]] = i; \n\t\tfor (int i = 1, j = 0; i <= N; i++) {\n\t\t\tif (j) j--; \n\t\t\twhile (a[i + j] == a[sa[rnk[i] - 1] + j]) ++j; \n\t\t\tlcp[rnk[i]] = j; \n\t\t} \n\t} \n\tint st[16][MAX_N]; \n\tvoid buildST() { \n\t\tmemset(st, 63, sizeof(st)); \n\t\tfor (int i = 1; i <= N; i++) st[0][i] = lcp[i]; \n\t\tfor (int i = 1; i <= 15; i++)\n\t\t\tfor (int j = 1; j <= N; j++)\n\t\t\t\tst[i][j] = min(st[i - 1][j], st[i - 1][j + (1 << (i - 1))]); \n\t} \n\tint query(int l, int r) { \n\t\tint _l = l, _r = r; \n\t\tl = min(rnk[_l], rnk[_r]) + 1, r = max(rnk[_l], rnk[_r]);\n\t\tint t = lg[r - l + 1]; \n\t\treturn min(st[t][l], st[t][r - (1 << t) + 1]); \n\t} \n} A, B; \nvoid Sol() {\n\tscanf(\"%s\", a + 1); N = strlen(a + 1); \n\tA.buildSA(), A.buildST(); \n\treverse(&a[1], &a[N + 1]); \n\tB.buildSA(), B.buildST(); \n\tmemset(f, 0, sizeof(f)); \n\tmemset(g, 0, sizeof(g)); \n\tfor (int Len = 1; Len <= N / 2; Len++) { \n\t\tfor (int i = Len, j = i + Len; j <= N; i += Len, j += Len) { \n\t\t\tint Lcp = min(A.query(i, j), Len), Lcs = min(B.query(N - i + 2, N - j + 2), Len - 1); \n\t\t\tint t = Lcp + Lcs - Len + 1; \n\t\t\tif (Lcp + Lcs >= Len) {\n\t\t\t\tg[i - Lcs]++, g[i - Lcs + t]--; \n\t\t\t\tf[j + Lcp - t]++, f[j + Lcp]--; \n\t\t\t} \n\t\t} \n\t} \n\tfor (int i = 1; i <= N; i++) f[i] += f[i - 1], g[i] += g[i - 1]; \n\tlong long ans = 0; \n\tfor (int i = 1; i < N; i++) ans += 1ll * f[i] * g[i + 1]; \n\tprintf(\"%lld\\n\", ans); \n} \nint main () { \n#ifndef ONLINE_JUDGE \n    freopen(\"cpp.in\", \"r\", stdin); \n#endif \n\tfor (int i = 2; i <= 30000; i++) lg[i] = lg[i >> 1] + 1; \n\tint T; scanf(\"%d\", &T);\n\twhile (T--) Sol(); \n\treturn 0; \n} \n```",
        "postTime": 1550385813,
        "uid": 42506,
        "name": "\u4f55\u4fde\u5747",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1117 \u3010[NOI2016]\u4f18\u79c0\u7684\u62c6\u5206 \u3011"
    },
    {
        "content": "    \u542c\u8bf4\u5927\u4f6c\u4eec\u90fd\u662f\u7528SA\u505a\u7684\t\n\t\n    \u7136\u800cSA\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u786e\u5f88\u4f18\u79c0\uff0c\u7f3a\u70b9\u5c31\u662f\u770b\u4e0d\u592a\u61c2\u2026\u2026\n  \n\u3000\u3000\u7136\u540e\u53d1\u73b0\u4e00\u4f4d\u5927\u4f6c\u7528\u54c8\u5e0c\u534e\u4e3d\u7684\u8fc7\u4e86\u6b64\u9898\uff0c\u800c\u4e14\u8bb2\u7684\u7279\u522b\u6e05\u695a->[\u8fd9\u91cc](https://www.cnblogs.com/ljh2000-jump/p/6370364.html)\n  \n\u3000\u3000\u6211\u4eec\u53ea\u8981\u8003\u8651\u4ee5\u6bcf\u4e00\u4e2a\u70b9\u7ed3\u5c3e\u7684$AA$\u4e32\u7684\u4e2a\u6570$u[i]$\u548c\u4ee5\u6bcf\u4e00\u4e2a\u70b9\u5f00\u5934\u7684AA\u4e32\u7684\u4e2a\u6570$v[i]$\uff0c\u7b54\u6848\u5c31\u662f$\\sum _{i=1}^{n-1} u[i]*v[i+1]$\n  \n\u3000\u3000\u90a3\u4e48\u8003\u8651\u5982\u4f55\u6c42\u51fa$u$\u548c$v$\u5462\n  \n\u3000\u3000\u6211\u4eec\u8003\u8651\u4e00\u4e0b\uff0c\u679a\u4e3e\u4e32$A$\u7684\u957f\u5ea6$len$\uff0c\u7136\u540e\u6bcf\u9694$len$\u4e2a\u5355\u4f4d\u8bbe\u7f6e\u4e00\u4e2a\u5173\u952e\u70b9\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u6bcf\u4e00\u4e2a\u957f\u5ea6\u4e3a$len*2$\u7684$AA$\u4e32\uff0c\u5fc5\u5b9a\u7ecf\u8fc7\u4e24\u4e2a\u5173\u952e\u70b9\n  \n\u3000\u3000\u7136\u540e\u8003\u8651\uff0c\u53ea\u8981\u6c42\u51fa\u76f8\u90bb\u4e24\u4e2a\u5173\u952e\u70b9\u5f80\u524d\u7684$LCS$\u548c\u5f80\u540e\u7684$LCP$\uff0c\u5982\u679c$LCS+LCP>=len$\uff0c\u5c31\u8868\u660e\u5b58\u5728\u957f\u5ea6\u4e3a$len$\u7684$AA$\u4e32\u3002\u800c\u4e14\u4e0d\u96be\u53d1\u73b0\uff0c\u6240\u6709\u7ecf\u8fc7\u8fd9\u4e24\u4e2a\u5173\u952e\u70b9\u7684\u957f\u5ea6\u4e3a$len$\u7684$AA$\u4e32\uff0c\u80af\u5b9a\u662f\u8fde\u7eed\u7684\uff01\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u8fd9\u4e2a\u533a\u95f4\uff0c\u7136\u540e\u7528\u524d\u7f00\u548c\u5dee\u5206\uff0c\u5c31\u53ef\u4ee5\u907f\u514d\u533a\u95f4\u4fee\u6539\u4e86\n  \n\u3000\u3000\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u5230\u5e95\u600e\u4e48\u6c42$LCS$\u548c$LCP$\u5462\uff1f\uff08\u5927\u4f6c\uff1aSA+ST\u8868\u4e0d\u662f\u968f\u4fbf\u8fc7\u7684\u4e48\uff09\u55ef\uff0c\u6ca1\u9519\uff0c\u4e8c\u5206\u3002\u6211\u4eec\u4e8c\u5206\u5b83\u4eec\u7684\u957f\u5ea6\uff0c\u7136\u540e\u7528\u54c8\u5e0c\u5224\u65ad\u662f\u5426\u76f8\u7b49\u3002\u8fd9\u6837\u867d\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8d77ST\u8868\u591a\u4e86\u4e2a$log$\uff0c\u4f46\u8d77\u7801\u66f4\u770b\u5f97\u61c2\u2026\u2026\n  \n\u3000\u3000\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u679a\u4e3e$len$\u7684\u8c03\u548c\u7ea7\u6570\uff0c\u52a0\u4e0a\u4e8c\u5206\uff0c\u4e3a$O(nlog^2n)$\n  \n\u3000\u3000ps:\u8bdd\u8bf4\u6211\u4e5f\u4e0d\u660e\u767d\u8c03\u548c\u7ea7\u6570\u662f\u4e2a\u4ec0\u4e48\u73a9\u610f\u513f\uff0c\u53ea\u8981\u77e5\u9053\u679a\u4e3e\u7684\u590d\u6742\u5ea6\u662f$\\sum _{i=1}^n \\frac{n}{i} =O(nlogn)$\u5c31\u884c\u4e86\u2026\u2026\n  \n\u3000\u3000pps:\u7ba1\u90a3\u4e48\u591a\u5e72\u561b\u80fdA\u4e0d\u5c31\u884c\u4e86\u4e48\u2026\u2026\u8bdd\u8bf4\u8fd9\u9898\u660e\u660e\u7eaf\u54c8\u5e0c\u66b4\u529b\u5c31\u670995\u2026\u2026\u67d0\u5927\u4f6c\u8bb2\u8bfe\u7684\u65f6\u5019\u8fd8\u4ee5\u8fd9\u9898\u4e3a\u4f8b\u5632\u7b11NOI\u8fd1\u51e0\u5e74\u7684\u51fa\u9898\u6c34\u5e73\uff08\u9003\uff09\n```\n//minamoto\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define ll long long\nusing namespace std;\n#define getc() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int read(){\n    #define num ch-'0'\n    char ch;bool flag=0;int res;\n    while(!isdigit(ch=getc()))\n    (ch=='-')&&(flag=true);\n    for(res=num;isdigit(ch=getc());res=res*10+num);\n    (flag)&&(res=-res);\n    #undef num\n    return res;\n}\nchar sr[1<<21],z[20];int C=-1,Z;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\ninline void print(ll x){\n    if(C>1<<20)Ot();if(x<0)sr[++C]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]='\\n';\n}\nconst int N=30005,mod=3e7+7;\nchar s[N];int n;\nll hash[N],mo[N],u[N],v[N],ans;\ninline ll gethash(int l,int r){\n\tll now=hash[l]-hash[r]*mo[r-l];\n\tnow%=mod,now+=mod,now%=mod;\n\treturn now;\n}\nint main(){\n\tint T=read();mo[0]=1;for(int i=1;i<=30000;++i) mo[i]=mo[i-1]*31%mod;\n\twhile(T--){\n\t\tn=0;char ch;\n\t\twhile((ch=getc())!='\\n') s[++n]=ch;\n\t\tmemset(u,0,sizeof(u)),memset(v,0,sizeof(v));\n\t\thash[n+1]=0;\n\t\tfor(int i=n;i;--i) (hash[i]=hash[i+1]*31+s[i]-'a'+1)%=mod;\n\t\tfor(int L=1;L*2<=n;++L){\n\t\t\tfor(int i=L<<1;i<=n;i+=L){\n\t\t\t\tif(s[i]!=s[i-L]) continue;\n\t\t\t\tint l=1,r=L,last=i-L,pos=0;\n\t\t\t\t//\u4e8c\u5206\u67e5\u627elcp\u548clcs \n\t\t\t\twhile(l<=r){\n\t\t\t\t\tint mid=l+r>>1;\n\t\t\t\t\tif(gethash(last-mid+1,last+1)==gethash(i-mid+1,i+1)) pos=mid,l=mid+1;\n\t\t\t\t\telse r=mid-1;\n\t\t\t\t}\n\t\t\t\tint head=i-pos+1;\n\t\t\t\tl=1,r=L,pos=0;\n\t\t\t\twhile(l<=r){\n\t\t\t\t\tint mid=l+r>>1;\n\t\t\t\t\tif(gethash(last,last+mid)==gethash(i,i+mid)) pos=mid,l=mid+1;\n\t\t\t\t\telse r=mid-1;\n\t\t\t\t}\n\t\t\t\tint tail=i+pos-1;\n\t\t\t\thead=max(head+L-1,i);//\u9632\u6b62\u8d8a\u8fc7\u4e24\u5757 \n\t\t\t\ttail=min(tail,i+L-1);//\u9632\u6b62\u8dd1\u5230\u540e\u9762\u7684\u5757 \n\t\t\t\tif(head<=tail){\n\t\t\t\t\t++u[head-2*L+1],--u[tail+1-2*L+1];\n\t\t\t\t\t++v[head],--v[tail+1];\n\t\t\t\t\t//\u4e3a\u4e86\u5dee\u5206\n\t\t\t\t\t//\u56e0\u4e3ahead-2*L+1\u5230tail-2*L+1\u5f00\u5934\u7684AA\u4e32\u589e\u52a0\u7684\n\t\t\t\t\t//\u4ee5\u4ed6\u4eec\u7684\u7b54\u6848\u90fd\u53ef\u4ee5++\n\t\t\t\t\t//\u7136\u540e\u4ee5head\u5230tail\u7ed3\u5c3e\u7684AA\u4e32\u4e5f++ \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tans=0;\n\t\tfor(int i=1;i<=n;++i) u[i]+=u[i-1],v[i]+=v[i-1];\n\t\tfor(int i=1;i<n;++i) ans+=v[i]*u[i+1];\n\t\tprint(ans);\n\t}\n\tOt();\n\treturn 0;\n}\n```",
        "postTime": 1534157675,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1117 \u3010[NOI2016]\u4f18\u79c0\u7684\u62c6\u5206 \u3011"
    },
    {
        "content": "[$\\Huge\\color{#a76699}\\texttt{My Cnblogs}$](https://www.cnblogs.com/Wendigo/p/12930804.html)\n\n---\n> [NOI2016 \u4f18\u79c0\u7684\u62c6\u5206](https://www.luogu.com.cn/problem/P1117)\n\n> $T$ \u7ec4\u6d4b\u8bd5\u6570\u636e\u3002\u6c42\u5b57\u7b26\u4e32 $s$ \u7684\u6240\u6709\u5b50\u4e32\u62c6\u6210 $AABB$ \u5f62\u5f0f\u7684\u65b9\u6848\u603b\u548c\u3002\n\n> \u6570\u636e\u8303\u56f4\uff1a$1\\le T\\le 10$\uff0c$1\\le n\\le 3\\cdot 10^4$\u3002\n\n---\n\u8fd9\u9053\u9898\u592a\u795e\u4e86\uff0c\u80fd\u4e00\u6b21\u505a\u51fa\u8fd9\u9898\u7684\u4eba\u5f80\u5f80\u662f\u4eba\u5f62\u81ea\u8d70\u9898\u5e93\u3002\u771f\u7684\u5168\u662f\u5957\u8def\uff01\n\n---\n\u4ee4 $n=|s|$\uff0c$f_i$ \u8868\u793a\u6709\u51e0\u4e2a\u4ee5 $s_i$ **\u7ed3\u5c3e**\u7684 $AA$ \u4e32\uff0c$g_i$ \u8868\u793a\u6709\u51e0\u4e2a\u4ee5 $s_i$ **\u5f00\u5934**\u7684 $BB$ \u4e32\u3002\n\n$$\\therefore ans=\\sum_{i=1}^{n-1}f_i\\cdot g_{i+1}$$\n\n\u7136\u540e\u53ea\u9700\u6c42 $f_i,g_i$\u3002\n\n\u5957\u8def\u5730**\u4e3a $s$ \u4ee5\u53ca $s$ \u7684\u53cd\u4e32\u5efa\u540e\u7f00\u6570\u7ec4\u5e76\u4e3a $height$ \u6570\u7ec4\u88c5\u4e0a $st$ \u8868**\u3002\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5 $\\Theta(1)$ \u6c42**\u4efb\u610f\u4e24\u4e2a\u524d\u7f00\u7684\u6700\u957f\u516c\u5171\u540e\u7f00**\u548c**\u4efb\u610f\u4e24\u4e2a\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00**\u4e86\u3002\n\n---\n**\u8fd9\u65f6\u5019\u6c42 $f_i$ \u7684 $\\Theta(n^2)$ \u7684\u505a\u6cd5\uff08$g_i$ \u540c\uff09\uff1a**\n\n\u679a\u4e3e $A$ \u4e32\u957f\u5ea6 $w$\uff0c\u7136\u540e\u679a\u4e3e $s$ \u4e2d\u7684\u4e0b\u6807 $l,r(r-l=w)$\u3002\n\n\u5982\u679c**\u4e24\u4e2a\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00**$\\ge w$\uff0c\u5219 $f_{r+w-1}++$\u3002\n\n\u5982\u4e0b\u56fe\uff0c\u4e09\u6761\u9ec4\u7ebf\u95f4\u7684\u4e24\u4e2a\u4e32\u7ec4\u6210 $AA$ \u4e32\u3002\n\n![1117a.jpg](https://i.loli.net/2020/05/21/nDOjgRtQyZPo3Nd.jpg)\n\n**\u8003\u8651\u4e00\u79cd\u5957\u8def\u4f18\u5316\uff08$g_i$ \u540c\uff09\uff1a**\n\n\u679a\u4e3e\u4e86 $w$ \u4ee5\u540e\u4efb\u4f55\u76f8\u8ddd $w$ \u7684\u4e0b\u6807\u662f\u5bf9\u5e94\u7684\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u5728 $w$ \u500d\u6570\u7684\u4e0b\u6807**\u8bbe\u65ad\u70b9**\uff0c\u6b64\u65f6\u4e00\u4e2a $A$ \u4e32\u81f3\u5c11\u8981\u7ecf\u8fc7 $1$ \u4e2a\u65ad\u70b9\u3002\n\n\u679a\u4e3e\u76f8\u90bb\u4e24\u4e2a\u65ad\u70b9 $l$ \u548c $r$\uff0c\u6c42\u51fa\u5b83\u4eec\u7684**\u524d\u7f00\u6700\u957f\u516c\u5171\u540e\u7f00\u957f\u5ea6 $lcs$** \u548c**\u540e\u7f00\u6700\u957f\u516c\u5171\u524d\u7f00\u957f\u5ea6 $lcp$** \u4e4b\u548c $len$\uff1a\n\n\u8868\u793a**\u7ecf\u8fc7\u4e24\u4e2a\u65ad\u70b9**\u4e14\u5f00\u5934\u8ddd\u79bb $w$ \u7684\u6700\u957f\u516c\u5171\u5b50\u4e32\u3002\n\n\u5982\u679c $len<w$\uff0c\u8bf4\u660e\u6ca1\u6709**\u540c\u65f6\u7ecf\u8fc7\u8fd9\u4e24\u4e2a\u65ad\u70b9**\u7684 $AA$ \u4e32\u3002\n\n\u5426\u5219\uff0c$f_{r+lcp-(lcp+lcs-1)\\to r+lcp-1}++$\u3002\n\n\u5982\u4e0b\u56fe\uff0c\u5373**\u4e24\u6761\u7d2b\u7ebf**\u4ee5\u53ca\u4e4b\u95f4\u7684\u5b50\u4e32\u4e3a $AA$ \u4e32\uff1a\n\n![1117b.jpg](https://i.loli.net/2020/05/21/SkZ9nzMcyLfWRIs.jpg)\n\n$f_i,g_i$ \u9700\u8981**\u533a\u95f4\u52a0**\uff0c\u53ef\u4ee5**\u5dee\u5206**\u5904\u7406\u3002\n\n---\n**\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(T\\cdot n\\log n)$\u3002**\n\n---\n\u5c0f\u849f\u84bb\u8bb2\u4e0d\u6e05\u695a\uff0c\u653e\u4ee3\u7801\u5427\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n//Start\ntypedef long long ll;\ntypedef double db;\n#define mp(a,b) make_pair(a,b)\n#define x first\n#define y second\n#define b(a) a.begin()\n#define e(a) a.end()\n#define sz(a) int((a).size())\n#define pb(a) push_back(a)\nconst int inf=0x3f3f3f3f;\nconst ll INF=0x3f3f3f3f3f3f3f3f;\n\n//Data\nconst int N=3e4;\nint n,f[N+7],g[N+7];\n\n//SuffixArray\nstruct SuffixArray{\n\tchar s[N+7];\n\tint m,c[N+7],tp[N+7],rk[N+7],sa[N+7];\n\tint h[N+7],st[N+7][20];\n\tvoid csort(){\n\t\tfor(int i=0;i<=m;i++) c[i]=0;\n\t\tfor(int i=1;i<=n;i++) c[rk[i]]++;\n\t\tfor(int i=1;i<=m;i++) c[i]+=c[i-1];\n\t\tfor(int i=n;i>=1;i--) sa[c[rk[tp[i]]]--]=tp[i];\n\t}\n\tvoid build(){\n\t\tmemset(c,0,sizeof c);\n\t\tmemset(tp,0,sizeof tp);\n\t\tmemset(rk,0,sizeof rk);\n\t\tmemset(sa,0,sizeof sa);\n\t\tmemset(h,0,sizeof h);\n\t\tmemset(st,0,sizeof st);\n\t\tfor(int i=1;i<=n;i++) rk[i]=s[i],tp[i]=i;\n\t\tm=128,csort();\n\t\tfor(int w=1,p=1,i;p<n;w<<=1,m=p){\n\t\t\tfor(p=0,i=n-w+1;i<=n;i++) tp[++p]=i;\n\t\t\tfor(i=1;i<=n;i++)if(sa[i]>w) tp[++p]=sa[i]-w;\n\t\t\tcsort(),swap(rk,tp),rk[sa[1]]=p=1;\n\t\t\tfor(i=2;i<=n;rk[sa[i]]=p,i++)\n\t\t\t\tif(tp[sa[i]]!=tp[sa[i-1]]||tp[sa[i]+w]!=tp[sa[i-1]+w]) p++;\n\t\t}\n\t\tfor(int i=1,j,k=0;i<=n;h[rk[i++]]=k)\n\t\t\tfor(k=k?k-1:k,j=sa[rk[i]-1];s[i+k]==s[j+k];k++);\n\t\tfor(int i=1;i<=n;i++) st[i][0]=h[i];\n\t\tfor(int w=1;w<=18;w++)\n\t\t\tfor(int i=1;i+(1<<w)-1<=n;i++)\n\t\t\t\tst[i][w]=min(st[i][w-1],st[i+(1<<(w-1))][w-1]);\n\t}\n\tint Lcp(int a,int b){\n\t\tint l=rk[a],r=rk[b];\n\t\tif(l>r) swap(l,r); l++;\n\t\tint k=log2(r-l+1);\n\t\treturn min(st[l][k],st[r-(1<<k)+1][k]);\n\t}\n}a,b;\n\n//KonnyWen\nvoid KonnyWen(){\n\tmemset(f,0,sizeof f);\n\tmemset(g,0,sizeof g);\n\tscanf(\"%s\",&a.s[1]),n=strlen(&a.s[1]);\n\tfor(int i=1;i<=n;i++) b.s[i]=a.s[n+1-i];\n\ta.build(),b.build();\n\tfor(int i=1;i<=n;i++) f[i]=g[i]=0;\n\tfor(int w=1;w<=(n>>1);w++)\n\t\tfor(int i=w;i<=n;i+=w){\n\t\t\tint l=i,r=i+w;\n\t\t\tint lcp=min(w,a.Lcp(l,r));\n\t\t\tint lcs=min(w-1,b.Lcp(n-(l-1)+1,n-(r-1)+1));\n\t\t\tif(lcp+lcs>=w){\n\t\t\t\tint cov=lcp+lcs-w+1;\n\t\t\t\tf[r+lcp-cov]++,f[r+lcp]--;\n\t\t\t\tg[l-lcs]++,g[l-lcs+cov]--;\n\t\t\t}\n\t\t}\n\tfor(int i=1;i<=n;i++) f[i]+=f[i-1],g[i]+=g[i-1];\n\tll ans=0;\n\tfor(int i=1;i<n;i++) ans+=f[i]*g[i+1];\n\tprintf(\"%lld\\n\",ans);\n}\n\n//Main\nint main(){\n\tint t; scanf(\"%d\",&t);\n\twhile(t--) KonnyWen();\n\treturn 0;\n}\n```\n---\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**",
        "postTime": 1590044388,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1117 \u3010[NOI2016]\u4f18\u79c0\u7684\u62c6\u5206\u3011"
    },
    {
        "content": "[P1117](https://www.luogu.com.cn/problem/P1117)\n\n\u8ddf\u8fd9\u9053\u9898\u5f88\u50cf:[CF319D](https://www.luogu.com.cn/problem/CF319D)\uff08\u8fd9\u4e5f\u662f\u9ed1\u8272\u7684\uff09\n\n# \u5206\u6790\n\n\u8fd9\u662f\u4e00\u9053\u540e\u7f00SA+ST\u7684\u9898\u76ee\uff0c\u4f46\u662f~~\u4f17\u6240\u5468\u77e5~~\u5b57\u7b26\u4e32\u54c8\u5e0c\u662f\u4e00\u79cd\u5f02\u5e38\u4f18\u79c0\u7684\u7b97\u6cd5\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u5b57\u7b26\u4e32\u54c8\u5e0c\u89e3\u51b3\u8fd9\u4e00\u9053\u95ee\u9898\u3002\u5728\u8fd9\u9053\u9898\u4e2d\u5b57\u7b26\u4e32\u54c8\u5e0c\u76f8\u6bd4\u4e8eSA\u7684\u65b9\u6cd5\u867d\u7136\u6162\u4e86\u4e00\u4e2a$O(logn)$\uff0c\u4f46\u662f\u4f9d\u65e7\u5728\u590d\u6742\u5ea6\u53ef\u627f\u53d7\u8303\u56f4\u5185\u3002\n\n\u5728\u8fd9\u9053\u9898\u4e2d\u6211\u4eec\u9700\u8981\u6c42\u51fa\u62c6\u5206\u4e3aAABB\u5f62\u6001\u7684\u65b9\u6848\u6570\u91cf\u3002\u800c\u6211\u4eec\u53d1\u73b0AABB\u5f62\u6001\u5c31\u662f\u7531\u4e24\u4e2aAA\u72b6\u6001\u7684\u5b57\u7b26\u4e32\u8fde\u63a5\u5f62\u6210\u3002\n\n\u5982\u679c\u6211\u4eec\u8bbe$A_i$\u8868\u793a\u4ee5i\u4f4d\u7ed3\u5c3e\u7684AA\u4e32\u6570\u91cf\uff0c\u4ee5$B_i$\u8868\u793a\u4ee5i\u4f4d\u5f00\u5934\u7684AA\u4e32\u6570\u91cf\u3002\u5219\u5f88\u663e\u7136\u82e5\u6211\u4eec\u5c06\u7b2ci\u4f4d\u53ca\u4ee5\u524d\u7684\u90e8\u5206\u653e\u4e00\u4e2aAA\u4e32\uff0c\u5728\u7b2ci+1\u53ca\u4ee5\u540e\u653e\u4e00\u4e2aAA\u4e32\uff0c\u4ed6\u4eec\u5c31\u53ef\u4ee5\u8fde\u5728\u4e00\u8d77\u6210\u4e3a\u4e00\u4e2aAABB\u4e32\uff0c\u6240\u4ee5\u5f53\u524d\u72b6\u6001\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5373\u4e3a$A_i * B_i$\u3002\n\n\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u6c42\u89e3\u51fa$A$\u548c$B$\uff0c\u5219\u7b54\u6848\u5373\u4e3a\uff1a\n\n$$\\sum\\limits_{i=1}^{n-1}A_i*B_{i+1}$$\n\n\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u6c42\u89e3\u51faA\u6570\u7ec4\u4e0eB\u6570\u7ec4\u3002\n\n\u5982\u679c\u6211\u4eec\u5728\u5b57\u7b26\u4e32\u4e0a\u6bcf\u9694$len$\u8bbe\u7f6e\u4e00\u4e2a\u89c2\u5bdf\u70b9\uff0c\u76f8\u90bb\u89c2\u5bdf\u70b9\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\uff08LCP\uff09\u4e0e\u6700\u957f\u516c\u5171\u540e\u7f00\uff08LCS\uff09\u52a0\u8d77\u6765\u6784\u6210\u7684\u5b57\u7b26\u4e32\u5373\u4e3a\u7ecf\u8fc7\u4e24\u70b9\u4e0a\u7684\u6700\u957f\u76f8\u540c\u4e32\uff0c\u5e76\u4e14\u82e5$LCP+LCS>=len$\uff0c\u8bf4\u660e\u5b83\u4eec\u76f8\u4ea4\u3002\u82e5\u76f8\u4ea4\u6709\u91cd\u53e0\u90e8\u5206\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5e73\u79fb\u5f97\u5230\u591a\u4e2a\u53ef\u884c\u7684\u6446\u653e\u65b9\u6848\uff0c\u53ef\u4ee5\u7f29\u77ed\u4e24\u4e2a\u533a\u95f4\u7684\u5c3e\u90e8\uff0c\u4e5f\u53ef\u4ee5\u7f29\u77ed\u4e24\u4e2a\u533a\u95f4\u7684\u5934\u90e8\u4ee5\u4f7f\u4ed6\u4eec\u4e0d\u91cd\u5408\uff08\u8be6\u89c1\u4ee3\u7801\uff09\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u6c42LCP\u548cLCS\uff0c\u5f53\u7136\u53ef\u4ee5\u7528SA\uff0c\u4e0d\u8fc7\u6211\u4eec\u8fd9\u91cc\u8fd8\u662f\u91c7\u7528\u5b57\u7b26\u4e32\u54c8\u5e0c\uff0c\u6bd5\u7adf\u5b83\u5199\u8d77\u6765\u5341\u5206\u7b80\u6613\u3002\n\n# \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int mod = 1e9 + 7;\nconst int maxn = 30005;\n\nint a[maxn], b[maxn];\nlong long w[maxn], p[maxn];\nchar s[maxn];\n\ninline int get(int l, int r)\n{ //\u8ba1\u7b97\u5b57\u7b26\u4e32\u4e2dl~r\u6bb5\u7684\u54c8\u5e0c\u503c\n\treturn ((w[r] - w[l - 1] * p[r - l + 1]) % mod + mod) % mod;\n}\n\nint n, now;\n\nint lcp(int x, int y) //\u6c42\u6700\u957f\u524d\u7f00\n{\n\tint l = 0, r = now;\n\twhile (l < r)\n\t{\n\t\tint mid = l + r + 1 >> 1;\n\t\tif (get(x - mid + 1, x) == get(y - mid + 1, y))\n\t\t\tl = mid;\n\t\telse\n\t\t\tr = mid - 1;\n\t}\n\treturn l;\n}\n\nint lcs(int x, int y) //\u6c42\u6700\u957f\u540e\u7f00\n{\n\tint l = 0, r = n - y + 1;\n\twhile (l < r)\n\t{\n\t\tint mid = l + r + 1 >> 1;\n\t\tif (get(x, x + mid - 1) == get(y, y + mid - 1))\n\t\t\tl = mid;\n\t\telse\n\t\t\tr = mid - 1;\n\t}\n\treturn l;\n}\n\nint main()\n{\n\tint T;\n\tscanf(\"%d\", &T);\n\twhile (T--)\n\t{\n\t\tmemset(a, 0, sizeof(a));\n\t\tmemset(b, 0, sizeof(b));\n\t\tscanf(\"%s\", s + 1);\n\t\tn = strlen(s + 1);\n\t\tp[0] = 1;\n\t\tfor (int i = 1; i <= n; i++)\n\t\t{ //\u5b57\u7b26\u4e32\u54c8\u5e0c\n\t\t\tp[i] = p[i - 1] * 31 % mod;\n\t\t\tw[i] = (w[i - 1] * 31 + s[i] - 'a') % mod;\n\t\t}\n\t\tfor (int len = 1; len <= n; len++)\n\t\t{\t\t\t\t\t\t\t   //\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u5220\u9664\u533a\u95f4\u7684\u957f\u5ea6\n\t\t\tint j = len, k = len << 1; //\u4e24\u4e2a\u89c2\u5bdf\u70b9\n\t\t\tnow = len;\n\t\t\twhile (k <= n)\n\t\t\t{\n\t\t\t\tint LCP = lcp(j, k), LCS = lcs(j, k);\n\t\t\t\tint hd = max(k - LCP + len, k), tl = min(k + LCS - 1, k + len - 1); //\u4e24\u4e2a\u5757\u7684\u5c3e\u4f4d\u7f6e\n\t\t\t\tif (hd <= tl)\n\t\t\t\t{\n\t\t\t\t\ta[hd]++, a[tl + 1]--;\t\t\t\t\t\t  //\u4e24\u4e2a\u5c3e\u90e8\u4e4b\u95f4\u7684\u7a7a\u95f4\n\t\t\t\t\tb[hd - len * 2 + 1]++, b[tl - len * 2 + 2]--; //\u4e24\u4e2a\u5934\u90e8\u4e4b\u95f4\u7684\u7a7a\u95f4\n\t\t\t\t}\n\t\t\t\tj += len, k += len; //\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u89c2\u5bdf\u70b9\n\t\t\t}\n\t\t}\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\ta[i] += a[i - 1], b[i] += b[i - 1];\n\t\tlong long answer = 0;\n\t\tfor (int i = 1; i < n; i++)\n\t\t\tanswer += a[i] * b[i + 1];\n\t\tprintf(\"%lld\\n\", answer);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1595332055,
        "uid": 98482,
        "name": "Macesuted",
        "ccfLevel": 0,
        "title": "P1117"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e0d\u7ba1\u91c7\u7528Hash\uff0c\u540e\u7f00\u6570\u7ec4\u8fd8\u662f\u81ea\u52a8\u673a\uff0c\u7f51\u4e0a\u5927\u90e8\u5206\u7684\u9898\u89e3\u90fd\u91c7\u7528\u4e86\u5173\u952e\u70b9+\u8c03\u548c\u7ea7\u6570\u8fd9\u4e2a\u64cd\u4f5c\u3002\u672c\u849f\u84bb\u60f3\u4e0d\u5230\u5173\u952e\u70b9\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u6240\u4ee5\u91c7\u7528\u7684\u662f\u4e00\u79cd\u8f83\u4e3a\u7e41\u7410\u7684$O(nlog^2)$\u505a\u6cd5\u3002\r\n\r\n\u9996\u5148\u80af\u5b9a\u5c06\u95ee\u9898\u8f6c\u5316\u6210\u5bf9\u4e8e\u6bcf\u4e2a$i$\u6c42\u4ee5$i$\u4e3a\u8fb9\u754c\u7684$AA$\u7ed3\u6784\u4e2a\u6570\uff0c\u5f53\u7136\u524d\u7f00\u540e\u7f00\u5206\u522b\u6c42\u4e00\u904d\uff0c\u4ee5\u4e0b\u9ed8\u8ba4\u662f\u524d\u7f00\u3002\r\n\r\n\u8003\u8651\u5f62\u5f0f\u5316\u8fd9\u4e2a\u95ee\u9898\uff0c\u5bf9\u4e8e\u67d0\u4e2a\u524d\u7f00$i$\uff0c\u6c42\u6240\u6709\u7684\u524d\u7f00$j(j<i)$,\u4f7f\u5f97$i,j$\u7684\u6700\u957f\u516c\u5171\u540e\u7f00\u7684\u957f\u5ea6\u5927\u4e8e$j-i$\uff0c\u4e5f\u5c31\u662f$|\\{j|j<i,i-j\\le |Lcs(S_{1,j},S_{1,i})|\\}|$\r\n\r\n\u5bf9\u4e8e\u540e\u7f00\u524d\u7f00\u7684\u95ee\u9898\uff0c\u6211\u4eec\u4e00\u822c\u5c06\u4ed6\u4eec\u653e\u5230\u540e\u7f00\u81ea\u52a8\u673a\u7684$parent$\u6811\u4e0a\u8003\u8651\uff0c\u7531\u4e8e\u540e\u7f00\u81ea\u52a8\u673a\u7684$parent$\u6811\u76f8\u5f53\u4e8e\u662f\u5c06\u6bcf\u4e2a\u524d\u7f00\u9006\u5e8f\u63d2\u5165$Trie$\uff0c\u6240\u4ee5\u67d0\u4e24\u4e2a\u524d\u7f00\u7684$Lcs$\u5bf9\u5e94\u7684\u5c31\u662f\u4ed6\u4eec$parent$\u6811\u4e0a\u7684$Lca$\u3002\r\n\r\n\u6240\u4ee5\u8f6c\u5316\u6210\u6811\u4e0a\u7ed9\u82e5\u5e72\u4e2a\u5173\u952e\u70b9\uff08\u5bf9\u5e94\u7684\u662f\u5b57\u7b26\u4e32\u7684\u524d\u7f00\uff09\uff0c\u5bf9\u4e8e\u6bcf\u4e2a$x$,\u6c42$\\{y|mx_x-mx_y\\le mx_{lca(x,y)}\\}$\u3002\r\n\r\n\u8003\u8651\u91c7\u7528\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u5efa\u7acb\u4e00\u9897\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u6211\u4eec\u8ba9\u7236\u4eb2\u7ee7\u627f\u91cd\u513f\u5b50\u7684\u7ebf\u6bb5\u6811\uff0c\u628a\u5176\u4ed6\u5b50\u6811\u4e2d\u7684\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u66b4\u529b\u63d2\u5165\u5408\u5e76\u3002\r\n\r\n\u63d2\u5165\u67d0\u4e2a\u8282\u70b9\u7684\u65f6\u5019\uff0c\u8003\u8651\u7ebf\u6bb5\u6811\u5185\u7684\u8282\u70b9\u5bf9\u5176\u7684\u8d21\u732e\uff0c\u548c\u5b83\u5bf9\u7ebf\u6bb5\u6811\u5185\u8282\u70b9\u7684\u8d21\u732e\u3002\u524d\u8005\u7528\u4e00\u4e2a\u533a\u95f4\u8be2\u95ee\u5373\u53ef\uff0c\u5426\u5219\u5728\u7ebf\u6bb5\u6811\u4e0a\u6253\u6807\u8bb0\uff0c\u4f46\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u8981\u88ab\u62c6\u5f00\u7684\u65f6\u5019\u518d\u628a\u66b4\u529b\u6807\u8bb0\u63a8\u4e0b\u53bb\u8d21\u732e\u5230\u7b54\u6848\u4e0a\u5373\u53ef\u3002\r\n\r\n\u6bcf\u4e2a\u8282\u70b9\u63d2\u5165\u7684\u4e4b\u540e\u5176\u6240\u5728\u7ebf\u6bb5\u6811\u5927\u5c0f\u7ffb\u500d\uff0c\u6240\u4ee5\u4e4b\u591a\u63d2\u5165$log$\u6b21\uff0c\u603b\u590d\u6742\u5ea6$O(nlog^2)$\r\n\r\n[\u4ee3\u7801\u8bf7\u8f6c\u5230\u539fblog\u98df\u7528](https://blog.csdn.net/lvzelong2014/article/details/89048132)\r\n",
        "postTime": 1554472436,
        "uid": 2218,
        "name": "2014\u5415\u6cfd\u9f99",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1117 \u3010[NOI2016]\u4f18\u79c0\u7684\u62c6\u5206 \u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u4f7f\u7528 runs \u7684\u505a\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\u5b8c\u5168\u4e0d\u9700\u8981 SA \u9884\u5904\u7406 LCP\uff0c\u7528\u5230\u7684\u6700\u9ad8\u5999\u7684\u7b97\u6cd5\u5c31\u662f\u4e8c\u5206\u54c8\u5e0c\uff0c\u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u7136\u662f\u4f18\u79c0\u7684\u4e00\u4e2a $\\log$\u3002lg \u4e0a\u7528\u65f6\u6700\u6162\u7684\u70b9\u7528\u4e86 40ms\uff0c\u5176\u5b83\u90fd\u662f 2~3ms\uff0c\u770b\u4e0a\u53bb\u505a\u4e00\u6b21\u8be2\u95ee 1e6 \u6839\u672c\u4e0d\u6210\u95ee\u9898\u3002\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a[Lyndon \u5206\u89e3](https://www.luogu.com.cn/problem/P6114)\n\nLyndon \u5206\u89e3\u7f51\u4e0a\u8d44\u6599\u5f88\u591a\uff0c\u8fd9\u90e8\u5206\u4e0d\u5728\u8d58\u8ff0\uff0c\u53ea\u8865\u5145\u4e00\u90e8\u5206\u5b9a\u4e49\u3002\n\n- \u5468\u671f\uff08Period\uff09\uff1a\u79f0 $l$ \u662f\u4e32 $s$ \u7684\u5468\u671f\uff0c\u5f53\u4e14\u4ec5\u5f53 $\\forall i\\in[1,|S|-l],\\text{s.t. } s[i]=s[i+l]$\u3002\n\n- runs\uff1a\u79f0\u4e09\u5143\u7ec4 $r=(i,j,p)$ \u662f $s$ \u7684 run\uff0c\u5f53\u4e14\u4ec5\u5f53 $s[i:j]$ \u7684\u6700\u5c0f\u5468\u671f\u4e3a $p$\uff0c\u4e14 $2p\\le j-i+1$\uff0c\u4e14 $s[i:j]$ \u662f\u6781\u957f\u7684\u4e00\u6bb5\u6700\u5c0f\u5468\u671f\u4e3a $p$ \u7684\u4e32\u3002\n\n- Lyndon \u4e32\uff1a\u8bbe $<_\\iota$ \u662f\u6bd4\u8f83\u8fd0\u7b97\u7b26\uff0c\u5176\u4e2d $\\iota=0/1$\uff0c\u5206\u522b\u5bf9\u5e94\u4e24\u79cd\u76f8\u53cd\u7684\u6bd4\u8f83\uff0c\u8fd9\u91cc\u4ee4 $<_0\\Leftrightarrow<,<_1\\Leftrightarrow >$\u3002\u6211\u4eec\u79f0 $s$ \u662f\u5173\u4e8e $<_\\iota$ \u7684 Lyndon \u4e32\uff0c\u5f53\u4e14\u4ec5\u5f53 $\\forall i\\in [2,|s|], s<_\\iota s[i:|s|]$\u3002\n\n- Lyndon \u5206\u89e3\uff1a\u79f0 $a_1a_2...a_n=s$ \u662f $s$ \u5173\u4e8e $<_\\iota$ \u7684 Lyndon \u5206\u89e3\uff0c\u5f53\u4e14\u4ec5\u5f53\u6240\u6709 $a_i$ \u5747\u662f\u5173\u4e8e $<_\\iota$ \u7684 Lyndon \u4e32\uff0c\u4e14 $a_i\\not<_\\iota a_{i+1}$\u3002\u53ef\u4ee5\u8bc1\u660e\uff0c\u4e00\u4e2a\u4e32\u7684 Lyndon \u5206\u89e3\u5b58\u5728\u4e14\u552f\u4e00\u3002\n\n- Lyndon Root\uff1a\u79f0 $\\lambda=s[i_\\lambda:j_\\lambda]$ \u662f\u4e00\u4e2a run $r=(i,j,p)$ \u5173\u4e8e $<_\\iota$ \u7684 Lyndon Root\uff0c\u5f53\u4e14\u4ec5\u5f53 $[i_\\lambda:j_\\lambda]\\subseteq [i,j]$\uff0c\u4e14 $\\lambda$ \u662f\u4e00\u4e2a Lyndon \u4e32\u3002\n\n\u8003\u8651\u5982\u4f55\u6c42\u51fa\u4e00\u4e2a\u4e32\u7684\u6240\u6709 run\u3002\n\n\u6211\u4eec\u628a\u4e32 Lyndon \u5206\u89e3\uff0c\u7136\u540e\u679a\u4e3e\u4e00\u4e2a $i$\uff0c\u8bbe $ed[i]$ \u662f\u8fd9\u4e00\u6bb5 Lyndon \u5206\u89e3\u7684\u8fb9\u754c\uff0c\u90a3\u4e48\u4ee5 $i$ \u5f00\u5934\u7684 Lyndon \u5b50\u4e32\u7684\u53f3\u7aef\u70b9\u4e0d\u4f1a\u8d85\u8fc7 $ed[i]$\uff0c\u4e00\u6bb5 Lyndon Root \u4e5f\u5fc5\u7136\u662f $s[i:ed[i]]$ \u7684\u5b50\u4e32\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u54c8\u5e0c\u627e\u5230\u5305\u542b $s[i:ed[i]]$ \u7684\u6781\u957f\u5faa\u73af\u5b50\u4e32 $s[l:r]$\uff0c\u5982\u679c\u8fd9\u6bb5\u5b50\u4e32\u5408\u6cd5\uff08\u6ee1\u8db3 runs \u7684\u5b9a\u4e49\uff09\uff0c\u90a3\u4e48\u5c31\u627e\u5230\u4e86\u4e00\u4e2a run\u3002\u663e\u7136\u4e00\u4e2a $s[l:r]$ \u53ef\u80fd\u88ab\u7edf\u8ba1\u591a\u6b21\uff0c\u6211\u4eec\u5e94\u5f53\u53d6\u5468\u671f\u6700\u5c0f\u7684\u90a3\u4e00\u6b21\u3002\n\n\u5982\u679c\u5bf9 $\\iota=0/1$ \u5747\u505a\u4e00\u904d\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6240\u6709\u7684 run\u3002\n\n\u7136\u540e\u8003\u8651\u8ba1\u7b97\u201c\u4ee5\u67d0\u4e2a\u4f4d\u7f6e\u7ed3\u5c3e\u7684\u5e73\u65b9\u4e32\u7684\u6570\u91cf\u201d\u548c\u201c\u4ee5\u67d0\u4e2a\u4f4d\u7f6e\u5f00\u5934\u7684\u5e73\u65b9\u4e32\u7684\u6570\u91cf\u201d\uff0c\u663e\u7136\u4e00\u4e2a\u5e73\u65b9\u4e32\u4f1a\u81ea\u7136\u5730\u5bf9\u5e94\u4e00\u4e2a run \u7684\u5b50\u4e32\u3002\n\nThe Runs Theorem \u6307\u51fa\uff0c\u4e00\u4e2a\u4e32\u7684 run \u7684\u6570\u91cf\u4e0d\u8d85\u8fc7\u4e32\u957f\uff0c\u90a3\u4e48\u6211\u4eec\u63a5\u4e0b\u6765\u53ea\u8981\u679a\u4e3e\u4e00\u4e2a run\uff0c\u7136\u540e\u679a\u4e3e\u6700\u5c0f\u5468\u671f\u7684\u500d\u6570 $l$\u3002\u56e0\u4e3a run \u6ee1\u8db3\u5b83\u662f\u6781\u957f\u7684\u4e00\u6bb5\uff0c\u90a3\u4e48\u5728\u8fd9\u4e00\u6bb5\u91cc\u9762\u6bcf\u4e2a\u957f\u4e3a $l$ \u7684\u5b50\u4e32\u80af\u5b9a\u90fd\u662f\u4e00\u4e2a\u5e73\u65b9\u4e32\uff0c\u6211\u4eec\u76f4\u63a5\u5728\u8fd9\u4e00\u6bb5\u91cc\u9762\u5dee\u5206\u5373\u53ef\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\uff0c\u8fd9\u4e00\u90e8\u5206\u7684\u590d\u6742\u5ea6\u4e0d\u8d85\u8fc7 $O(n\\log n)$\u3002\u56e0\u6b64\u603b\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u4ee3\u7801\u590d\u6742\u5ea6\u6781\u4f4e\u3002\n\n\u53c2\u8003\u5b9e\u73b0\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define LL long long\nconst int CN = 3e4 + 10;\nconst int P = 191011109;\nconst int B = 39; int pB[CN];\nint read(){\n    int s = 0, ne = 1; char c = getchar();\n    for(;c < '0' || c > '9';c = getchar()) if(c == '-') ne = -1;\n    for(;c >= '0' && c <= '9';c = getchar()) s = (s << 1) + (s << 3) + c - '0';\n    return s * ne;\n}\nint add(int x, int y) {return x + y >= P ? x + y - P : x + y;}\nint ha[CN];\nint get(int l, int r) {return add(ha[r], P - (1ll * ha[l - 1] * pB[r - l + 1] % P));}\nint T, n; char ch[CN]; \nint LCP(int l1, int r1, int l2, int r2){\n    if(ch[l1] != ch[l2]) return 0;\n    int l = 1, r = min(r1 - l1 + 1, r2 - l2 + 1);\n    while(l < r){\n        int mid = (l + r + 1) >> 1;\n        if(get(l1, l1 + mid - 1) == get(l2, l2 + mid - 1)) l = mid;\n        else r = mid - 1;\n    }\n    return l;\n}\nint LCS(int l1, int r1, int l2, int r2){\n    if(ch[r1] != ch[r2]) return 0;\n    int l = 1, r = min(r1 - l1 + 1, r2 - l2 + 1);\n    while(l < r){\n        int mid = (l + r + 1) >> 1;\n        if(get(r1 - mid + 1, r1) == get(r2 - mid + 1, r2)) l = mid;\n        else r = mid - 1;\n    }\n    return l;\n}\nbool le(int l1, int r1, int l2, int r2){\n    if(l1 == l2) return r1 < r2;\n    int l = LCP(l1, r1, l2, r2);\n    if(l1 + l > r1 || l2 + l > r2) return r1 - l1 < r2 - l2;\n    return ch[l1 + l] < ch[l2 + l];\n}\nclass PAIR{\n  public: int l, r, p;\n    bool operator < (const PAIR &o) const{\n        return l ^ o.l ? l < o.l : (r ^ o.r ? p < o.p : r < o.r);\n    }\n    bool operator == (const PAIR &o) const{\n        return l == o.l && r == o.r;\n    } \n} ;\nPAIR mp(int a, int b, int c) {PAIR o; o.l = a, o.r = b, o.p = c; return o;}\nvector<PAIR> runs; int stk[CN], ed[CN], top;\nvoid lyndon(){\n    top = 0;\n    for(int i = n; i; i--){\n        stk[++top] = i;\n        while(top > 1 && le(i, stk[top], stk[top] + 1, stk[top - 1])) top--;\n        ed[i] = stk[top];\n    }\n    for(int i = 1; i <= n; i++){\n        int j = ed[i], lcs = LCS(1, i - 1, 1, j), lcp = LCP(i, n, j + 1, n), l, r;\n        l = i - lcs, r = j + lcp;\n        if((r - l + 1) / (j - i + 1) > 1) runs.pb(mp(l, r, j - i + 1));\n    }\n}\nint f[CN], g[CN];\nint main()\n{\n    // freopen(\"_in.in\", \"r\", stdin);\n    n = 3e4, pB[0] = 1;\n    for(int i = 1; i <= n; i++) pB[i] = 1ll * pB[i - 1] * B % P;\n    T = read();\n    while(T--){\n        scanf(\"%s\", ch + 1), n = strlen(ch + 1);\n        for(int i = 1; i <= n; i++) ha[i] = add(1ll * B * ha[i - 1] % P, ch[i] - 'a');\n        runs.clear();\n        lyndon();\n        for(int i = 1; i <= n; i++) ch[i] = 'a' + 'z' - ch[i];\n        lyndon();\n        sort(runs.begin(), runs.end());\n        int len = unique(runs.begin(), runs.end()) - runs.begin();\n        for(int i = 0; i < len; i++){\n            int l = runs[i].l, r = runs[i].r, p = runs[i].p;\n            for(int L = p + p; L <= r - l + 1; L += p + p){\n                g[l]++, g[r - L + 2]--;\n                f[l + L - 1]++, f[r + 1]--;\n            }\n        }\n        for(int i = 1; i <= n; i++) f[i] += f[i - 1], g[i] += g[i - 1];\n        LL ans = 0;\n        for(int i = 1; i < n; i++) ans += 1ll * f[i] * g[i + 1];\n        printf(\"%lld\\n\", ans);\n        for(int i = 0; i <= n + 1; i++) f[i] = g[i] = 0;\n    }\n    return 0;\n}\n```",
        "postTime": 1608474058,
        "uid": 70177,
        "name": "big_news",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1117 \u3010[NOI2016]\u4f18\u79c0\u7684\u62c6\u5206\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u5708\u9898\u89e3\u6ca1\u6709\u540e\u7f00\u81ea\u52a8\u673a\u7684\u9898\u89e3\uff0c\u4e0d\u8fc7\u6bd5\u7adf\u540e\u7f00\u81ea\u52a8\u673a\u540e\u7f00\u6570\u7ec4\u4e00\u5bb6\u4eba\uff0c\u8fd9\u91cc\u548c\u5927\u5bb6\u5206\u4eab\u540e\u7f00\u81ea\u52a8\u673a\u7684\u505a\u6cd5\u3002\n\n\u601d\u8def\u662f\u4e00\u6837\u7684\uff0c\u5904\u7406\u51fa\u6709\u591a\u5c11\u4e2aAA\u4e32\u4ee5i\u5f00\u5934\uff0c\u8bb0\u505af[i],\u6709\u591a\u5c11\u4e2aAA\u4e32\u4ee5i\u7ed3\u5c3e\uff0c\u8bb0\u505ag[i]\uff0c\u90a3\u4e48ans\u5c31\u662f\u6240\u6709\u7684g[i]f[i+1]\n\n\u4ee5\u4e0b\u7528pre(i)\u8868\u793a\u4ee5i\u7ed3\u5c3e\u7684\u524d\u7f00\uff0csuffix(i)\u8868\u793a\u4ee5i\u5f00\u5934\u7684\u540e\u7f00\u3002\n\n\u600e\u4e48\u53bb\u6c42g\u4e0ef\u6570\u7ec4\u5462\uff0c\u8003\u8651AA\u7684\u62fc\u63a5\uff0c\u8bbe\u5b83\u7684\u63a5\u70b9\u662f\u7b2c\u4e8c\u4e2aA\u5f00\u59cb\u7684\u4f4d\u7f6e\u3002\u8bbe\u4e00\u4e2aA\u7684\u957f\u5ea6\u4e3aL\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3aL\u7684\u533a\u95f4[i,j]\u6765\u8bf4\uff0c\u8bbepre(i-1)\u4e0epre(j-1)\u7684\u6700\u957f\u516c\u5171\u540e\u7f00\u957f\u5ea6\u4e3ax suffix(i)\u4e0esuffix(j)\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u957f\u5ea6\u4e3ay\uff0c\u90a3\u4e48[j-x,i+y+1]\u90fd\u80fd\u4f5c\u4e3a\u63a5\u70b9(\u6ce8\u610f[i-x,i+y-1] \u4e0e [j-x,j+y-1]\u662f\u76f8\u540c\u7684\u5b50\u4e32\n\n\u4e3a\u4e86\u4e0d\u7edf\u8ba1\u91cd\uff0c\u533a\u95f4[i,j]\u53ea\u7edf\u8ba1\u63a5\u70b9\u5728[i,j]\u8303\u56f4\u5185\u7684AA\u4e32\uff0c\u6240\u4ee5x\u4e0eL\u53d6min\uff0cy\u4e0eL-1\u53d6min\u3002\n\n\u73b0\u5728\u95ee\u9898\u7684\u6b65\u9aa4\u4fbf\u51fa\u6765\u4e86\uff1a\n1.\u679a\u4e3e\u4e00\u4e2aA\u7684\u957f\u5ea6L\u3002\n\n2.\u679a\u4e3ei=KL,j=i+L,\u7edf\u8ba1\u63a5\u70b9\u5728\u533a\u95f4[i,j]\u4e2d\u7684AA\u4e32\u5bf9\u4e8ef\u4e0eg\u7684\u8d21\u732e\uff1a\n\n3.\u67e5\u8be2x\u4e0ey\uff0c\u5b9a\u4e49\u5982\u4e0a\u6240\u793a\u3002\n      \n4.\u5982\u679cx+y<L,\u63a5\u4e0d\u4e0a\uff0c\u6ca1\u6709\u8d21\u732e\u3002\n      \n5.\u5426\u5219\u6bcf\u4e2a[i-x,i-x+(x+y-L)]\u533a\u95f4\u5185\u7684\u70b9\u90fd\u80fd\u4f5c\u4e3aAA\u4e32\u7684\u5de6\u7aef\u70b9\uff0c\u5f53\u7136\uff0c\u5176\u53f3\u7aef\u70b9\u4e3a[j+y-1-(x+y-L),j+y-1]\uff0c\u5efa\u8bae\u753b\u56fe\u7406\u89e3\u3002\u53d1\u73b0\u6bcf\u4e2a\u533a\u95f4\u5bf9\u4e8ef\u4e0eg\u7684\u8d21\u732e\u76f8\u5f53\u4e8e\u4e00\u4e2a\u533a\u95f4\u52a01\uff0c\u6240\u4ee5\u5dee\u5206\u70b9\u4fee\u6539\u3002\n      \n6.\u6700\u540e\u7edf\u8ba1\u524d\u7f00\u548c\u5373\u53ef\u6c42\u51faf\u4e0eg\u6570\u7ec4\u3002ans=\u6240\u6709g[i]f[i+1] \n\n\u90a3\u4e48\u95ee\u9898\u7684\u5173\u952e\u662f:\u600e\u4e48\u6c42\u524d\u7f00\u7684\u6700\u957f\u516c\u5171\u540e\u7f00?\u540e\u7f00\u6570\u7ec4\u53ef\u4ee5\uff0c\u5f53\u7136\u540e\u7f00\u81ea\u52a8\u673a\u4e5f\u884c\uff0c\u8bb0\u5f55\u4e0b\u63d2\u5165\u7b2ci\u4e2a\u70b9\u65f6\u7684np\u8282\u70b9\u4f4d\u7f6etag[i],\u90a3\u4e48pre(i)\u4e0epre(j)\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u5373\u4e3amx(Rg\u96c6\u5408\u7684max)[lca(tag[i],tag[j])](parent\u6811\u4e0a\u7684)\n\n\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00?\u5012\u7740\u518d\u5efa\u4e00\u4e2a\u81ea\u52a8\u673a\uff0c\u8fd9\u4e0a\u9762\u7684\u524d\u7f00\u7684\u6700\u957f\u516c\u5171\u540e\u7f00\u5373\u4e3a\u539f\u4e32\u7684\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff0c\u6709\u53d8\u91cf\u540d\u4e0e\u8bb2\u89e3\u65f6\u4e0d\u4e00\u6837\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <iostream>\nusing namespace std ; \n\nstruct SAM {\n\tint sn[60005][26] , fa[60005] , mx[60005] , tag[60005] , las , lzw ;\n\tint tot , dep[60005] , des[60005] , nxt[60005] , hd[60005] , f[60005][18] ; \n\tvoid insert ( int x , int id ) \n\t{\n\t\tint np = ++lzw , nd = las ; mx[np] = mx[las] + 1 ; las = np ; tag[id] = np ; \n\t\twhile ( nd != -1 && !sn[nd][x] ) sn[nd][x] = np , nd = fa[nd] ;\n\t\tif ( nd == -1 ) { fa[np] = 0 ; return ; }\n\t\tint q = sn[nd][x] ; \n\t\tif ( mx[q] == mx[nd] + 1 ) { fa[np] = q ; return ; } \n\t\tint nq = ++lzw ; \n\t\tfor ( int i = 0 ; i < 26 ; i++ ) sn[nq][i] = sn[q][i] ; \n\t\tfa[nq] = fa[q] ; mx[nq] = mx[nd] + 1 ; \n\t\tfa[q] = fa[np] = nq ; \n\t\twhile ( nd != -1 && sn[nd][x] == q ) sn[nd][x] = nq , nd = fa[nd] ;       \n\t}\n\tvoid getway ( int x , int y ) \n\t{\n\t\ttot++ ; des[tot] = y ; nxt[tot] = hd[x] ; hd[x] = tot ; \n\t}\n\tvoid dfs ( int u ) \n\t{\n\t\tfor ( int k = hd[u] ; k ; k = nxt[k] ) { dep[des[k]] = dep[u] + 1 ; dfs ( des[k] ) ; } \n\t}\n\tvoid init ( ) \n\t{\n\t\tfor ( int i = 1 ; i <= lzw ; i++ ) { f[i][0] = fa[i] ; getway ( fa[i] , i ) ; } ; \n\t\tfor ( int k = 1 ; k <= 17 ; k++ ) \n\t\t    for ( int i = 1 ; i <= lzw ; i++ ) \n\t\t        f[i][k] = f[f[i][k-1]][k-1] ; \n\t\tdfs ( 0 ) ; \n\t}\n\tint query ( int u , int v ) \n\t{\n\t\tu = tag[u] , v = tag[v] ; \n\t\tif ( dep[u] < dep[v] ) swap ( u , v ) ; \n\t\twhile ( dep[u] > dep[v] ) { int ij = 0 ; while ( dep[f[u][ij+1]] >= dep[v] ) ij++ ; u = f[u][ij] ; }\n\t\twhile ( u != v ) { int ij = 0 ; while ( f[u][ij+1] != f[v][ij+1] ) ij++ ; u = f[u][ij] ; v = f[v][ij] ; } \n\t\treturn mx[u] ;\n\t} \n} samp , saml , zero ; \n\nchar cp[30005] ; \nint T ; \nint chf1[30005] , chf2[30005] ;  \nint main ( ) \n{\n\tscanf ( \"%d\" , &T ) ; \n\tzero.fa[0] = -1 ; \n\twhile ( T-- ) \n\t{\n\t\tscanf ( \"%s\" , cp ) ; \n\t\tint l = strlen ( cp ) ; \n\t\tmemset ( chf1 , 0 , sizeof ( chf1 ) ) ; \n\t\tmemset ( chf2 , 0 , sizeof ( chf2 ) ) ; \n\t\tsamp = zero ; saml = zero ; \n\t\tfor ( int i = 0 ; i < l ; i++ ) samp.insert ( cp[i] - 'a' , i + 1 ) ;\n\t\tfor ( int i = l ; i >= 1 ; i-- ) saml.insert ( cp[i-1] - 'a' , i ) ;  \n\t\tsamp.init ( ) ; saml.init ( ) ;\n\t\tfor ( int len = 1 ; 2 * len <= l ; len ++ ) \n\t\t{\n\t\t\tfor ( int i = len ; i + len - 1 <= l ; i += len )\n\t\t\t{\n\t\t\t\tint j = i + len , hm = 0 , qm = 0 ; \n\t\t\t\tif ( j <= l ) hm = min ( saml.query ( i , j ) , len ) ; // \u4fdd\u8bc1AA\u7684\u4e24\u4e2aA \u7684\u5206\u754c\u8282\u70b9\u5728i\uff0cj\u4e4b\u95f4 \n\t\t\t\tif ( i > 1 ) qm = min ( samp.query ( i - 1 , j - 1 ) , len - 1 ) ;\n\t\t\t\tif ( qm + hm >= len ) \n\t\t\t\t{\n\t\t\t\t\tchf1[j+hm]-- ; chf1[j+hm-1-(qm+hm-len)]++ ;\n\t\t\t\t\tchf2[i-qm]++ ; chf2[i-qm+1+(qm+hm-len)]-- ;  \n\t\t\t\t} \n\t\t\t}\n\t\t} \n\t\tfor ( int i = 1 ; i <= l ; i++ ) chf1[i] += chf1[i-1] , chf2[i] += chf2[i-1] ; \n\t\tlong long ans = 0 ; \n\t\tfor ( int i = 2 ; i <= l ; i++ ) ans += 1ll * chf1[i-1] * chf2[i] ; \n\t\tcout << ans << '\\n' ; \n\t}\n}\n```",
        "postTime": 1544238437,
        "uid": 81210,
        "name": "yyyuuu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1117 \u3010[NOI2016]\u4f18\u79c0\u7684\u62c6\u5206 \u3011"
    },
    {
        "content": "# luogu1117 [NOI2016]\u4f18\u79c0\u7684\u62c6\u5206\n\n\n---\n\n\nhttps://www.luogu.org/problemnew/show/P1117\n\n\u540e\u7f00\u6570\u7ec4\u6211\u5fd8\u4e86\u3002\n\n\n\u6b64\u9898\u54c8\u5e0c\u53ef\u89e3\u51b395\u5206\uff08= =\uff09\n\n\n\u8bbe$l_i$\u8868\u793a\u4ee5i\u7ed3\u5c3e\u7684\u5f62\u5982\"AA\"\u4e32\u7684\u4e2a\u6570\uff0c$r_i$\u8868\u793a\u4ee5i+1\u5f00\u5934\u7684\u5f62\u5982\"AA\"\u4e32\u7684\u4e2a\u6570\u3002\n\n\n\u5219\u7b54\u6848\u4e3a $\\sum l_i r_i$\n\n\n\u5148$O(n)$hash\u9884\u5904\u7406\uff0c\u7136\u540e$O(n^2)$\u5904\u7406\u51fa$l,r$\u6570\u7ec4\n\n\n\u6700\u540e5\u5206\u9760**\u80ae\u810f\u7684**\u6253\u8868\n\n\n\u5355\u54c8\u5e0c\u5feb\uff0c\u53cc\u54c8\u5e0c\u7a33\n\n\n\u8fd9\u91cc\u53ea\u653e\u53cc\u54c8\u5e0c\n\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<cctype>\n#include<cstring>\nusing namespace std;\n#define il inline\n#define vd void\n#define rg register\n#define sta static\nil int gi(){\n    int x=0,f=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n    while(isdigit(ch))x=x*10+ch-'0',ch=getchar();\n    return x*f;\n}\nconst int maxn=30001;\nchar S[maxn];\nunsigned int ba[maxn],ha[maxn];\nlong long Ba[maxn],Ha[maxn];\nil pair<unsigned int,long long>Hash(int l,int r){\n    return make_pair(\n        ba[maxn-r]*(ha[r]-ha[l-1]),\n        Ba[maxn-r]*(Ha[r]-Ha[l-1]+1000000009)%1000000009\n    );\n}\nint ll[maxn],rr[maxn];\nint main(){\n    int T=gi(),n;\n    ba[0]=1;for(rg int i=1;i<maxn;++i)ba[i]=ba[i-1]*16943;\n    Ba[0]=1;for(rg int i=1;i<maxn;++i)Ba[i]=Ba[i-1]*19260817%1000000009;\n    while(T--){\n        scanf(\"%s\",S+1),n=strlen(S+1);\n        if(n>2000){printf(\"563349754956\\n161455324997\\n76621205738\\n70150901846\\n40842068960\\n6056659\\n2820346\\n3357795\\n2628223\\n10884\");return 0;}\n        for(rg int i=1;i<=n;++i)ha[i]=ha[i-1]+S[i]*ba[i];\n        for(rg int i=1;i<=n;++i)Ha[i]=(Ha[i-1]+S[i]*Ba[i]%1000000009)%1000000009;\n        for(rg int i=1;i<=n;++i){\n            ll[i]=rr[i]=0;\n            for(rg int j=i>>1;j;--j)if(Hash(i-j+1,i)==Hash(i-(j<<1)+1,i-j))++ll[i];\n            for(rg int j=(n-i)>>1;j;--j)if(Hash(i+1,i+j)==Hash(i+j+1,i+(j<<1)))++rr[i];\n        }\n        rg long long ans=0;\n        for(rg int i=1;i<=n;++i)ans+=ll[i]*rr[i];\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1516974099,
        "uid": 23118,
        "name": "\u03bb\u1d09\u028d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1117 \u3010[NOI2016]\u4f18\u79c0\u7684\u62c6\u5206 \u3011"
    },
    {
        "content": "\u521d\u5b66\u540e\u7f00\u81ea\u52a8\u673a\u7684\u540c\u5b66\u5c31\u522b\u6765\u505a\u8fd9\u9053\u601d\u7ef4\u9898\u4e86\n\n\u63a8\u8350\u505a\u8fd9\u4e9b\u9898\uff1a\n\n[SPOJ#7258 SUBLEX\"Lexicographical Substring Search\"]()\n\n[BZOJ#2555 Substring]()\n\n[SPOJ#8222 NSUBSTR\"Substrings\"]()\n\n[SPOJ#1812 LCS2\"Longest Common Substrings II\"]()\n\n[BZOJ#3998 \u5f26\u8bba]()\n\n \n\uff08\u4e0a\u9762\u6ca1\u6709\u94fe\u63a5\u7684\uff0c\u81ea\u5df1 $search$ \u5427\uff09\n\n# problem\n\n\u7ed9\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6c42\u5b83\u6240\u6709\u5b50\u4e32\u7684\u4f18\u79c0\u62c6\u5206\u6570\n\n# noteskey\n\n\n\u601d\u8def\u548c\u697c\u4e0a\u5927\u4f6c\u662f\u4e00\u6837\u7684\uff0c\u5c31\u662f\u8003\u8651\u627e\u5230\u4ee5 i \u5f00\u5934\u3001\u7ed3\u5c3e\u7684 $AA(BB)$ \u6570\u91cf $pre[i], suf[i]$\n\n\u7136\u540e\u7b54\u6848\u52a0\u4e0a\u6240\u6709\u7684 $\\sum pre[i-1]\u00b7suf[i]$ \u5c31\u597d\u4e86\n\n\n\n\n# solve\n\n\u8003\u8651\u5982\u4f55\u5904\u7406\u51fa pre \u548c suf \u6570\u7ec4\n\n\u6211\u4eec\u8003\u8651\u679a\u4e3e\u957f\u5ea6\uff0c\u7136\u540e\u5f97\u5230\u95f4\u9694\u4e3a $len $\u7684\u4e24\u4e2a\u7aef\u70b9 $i = k\u00b7len ,~~ j=i+len$ \uff0c\u627e\u5230\u4ed6\u4eec\u7684 LCP \uff08\u957f\u5ea6\u4e3a x\uff09 \u548c LCS \uff08\u957f\u5ea6\u4e3a y \uff09\uff0c\u5bf9\u4e8e$ [j-x,i+y+1]$  \u8fd9\u4e00\u6bb5\u53ef\u4ee5\u505a\u65ad\u70b9\u7684\u533a\u95f4\u6574\u4f53 +1 \uff0c\u4f46\u662f\u8fd9\u6837\u53ef\u80fd\u8981\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff1f\u90a3\u4e48\u6211\u4eec\u5dee\u5206\u8f6c\u79fb\u5c31\u597d\u4e86\uff0c\u53cd\u6b63\u4e2d\u95f4\u8fc7\u7a0b\u6ca1\u6709\u8be2\u95ee\u7684\n\n\u7136\u540e SAM \u662f\u53ef\u4ee5\u6c42 LCS \u7684\uff0c\u90a3\u4e48 LCP \u7684\u8bdd\u53ea\u8981\u5efa\u4e2a\u53cd\u4e32\u5728\u4e0a\u9762\u8dd1\u5c31\u597d\u4e86\n\n\n\n(\u5176\u5b9e hash \u53ef\u4ee5\u66f4\u52a0\u8f7b\u677e\u7684\u89e3\u51b3\u6389\u8fd9\u4e9b\u5904\u7406\u7684\u95ee\u9898\uff0cemmm \u505a\u8fd9\u9898\u7684\u8bdd\u5982\u679c\u4e0d\u662f\u4e3a\u4e86\u7ec3 SAM \u8fd8\u662f\u5199 hash \u6bd4\u8f83\u597d...)\n\n\n# code\n\n```cpp\n//by Judge\n#include<map>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#define ll long long\n#define fp(i,a,b) for(int i=(a),I=(b)+1;i<I;++i)\n#define fd(i,a,b) for(int i=(a),I=(b)-1;i>I;--i)\n#define go(G,u) for(int i=G.head[u],v=G.e[i].to;i;v=G.e[i=G.e[i].nxt].to)\nusing namespace std;\nconst int M=6e4+3;\ntypedef int arr[M];\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int Min(int a,int b){return a<b?a:b;}\ninline void reads(string& s){ char c=getchar();\n\tfor(;!isalpha(c);c=getchar());\n\tfor(;isalpha(c);c=getchar()) s+=c;\n} char sr[1<<21],z[20]; int CCF=-1,Z;\ninline void Ot(){fwrite(sr,1,CCF+1,stdout),CCF=-1;}\ninline void print(ll x,char chr='\\n'){ if(CCF>1<<20) Ot();\n\tfor(;z[++Z]=x%10+48,x/=10;); for(;sr[++CCF]=z[Z],--Z;); sr[++CCF]=chr;\n} int n; arr res1,res2; string s;\nstruct SAM{ arr c,sa,fa,len,tag;\n\tarr f,son,top,siz,dep;\n\tint cnt,las; map<char,int> to[M];\n\tstruct Gr{ int pat,head[M];\n\t\tstruct Edge{ int to,nxt; }e[M<<1];\n\t\tinline void add(int u,int v){\n\t\t\te[++pat]={v,head[u]},head[u]=pat;\n\t\t\te[++pat]={u,head[v]},head[v]=pat;\n\t\t}\n\t}G;\n\tinline void insert(char c,int id){ int p=las;\n\t\tint np=++cnt; las=np,tag[id]=np,len[np]=len[p]+1;\n\t\tfor(;p&&!to[p][c];p=fa[p]) to[p][c]=np;\n\t\tif(!p) fa[np]=1;\n\t\telse{ int q=to[p][c];\n\t\t\tif(len[q]==len[p]+1) fa[np]=q;\n\t\t\telse{ int nq=++cnt;\n\t\t\t\tlen[nq]=len[p]+1,to[nq]=to[q];\n\t\t\t\tfa[nq]=fa[q],fa[q]=fa[np]=nq;\n\t\t\t\tfor(;p&&to[p][c]==q;p=fa[p]) to[p][c]=nq;\n\t\t\t}\n\t\t}\n\t}\n\tvoid dfs(int u,int fa){ siz[u]=1;\n\t\tgo(G,u) if(v^fa) dep[v]=dep[u]+1,f[v]=u,dfs(v,u),\n\t\t\tsiz[u]+=siz[v],son[u]=siz[v]>siz[son[u]]?v:son[u];\n\t}\n\tvoid dfs(int u){ if(!top[u]) top[u]=u;\n\t\tif(son[u]) top[son[u]]=top[u],dfs(son[u]);\n\t\tgo(G,u) if(v^f[u]&&v^son[u]) dfs(v);\n\t}\n\tinline void init(){\n\t\tfp(i,1,cnt) f[i]=fa[i],G.add(f[i],i);\n\t\tdfs(1,0),dfs(1);\n\t}\n\tinline int query(int u,int v){ u=tag[u],v=tag[v];\n\t\tfor(;top[u]^top[v];u=f[top[u]])\n\t\t\tif(dep[top[u]]<dep[top[v]]) swap(u,v);\n\t\treturn len[dep[u]<dep[v]?u:v];\n\t}\n}samp,saml,zero;\nint main(){ int T; cin>>T,zero.cnt=zero.las=1;\n\tfp(kkk,1,T){ s.clear(),reads(s),n=s.length();\n\t\tmemset(res1,0,n+3<<3);\n\t\tmemset(res2,0,n+3<<3);\n\t\tsamp=zero,saml=zero;\n\t\tfp(i,0,n-1) samp.insert(s[i],i+1);\n\t\tfd(i,n-1,0) saml.insert(s[i],i+1);\n\t\tsamp.init(),saml.init();\n\t\tfp(len,1,n>>1) for(int i=len;i+len-1<=n;i+=len){\n\t\t\tint j=i+len,hm=0,qm=0;\n\t\t\tif(j<=n) hm=Min(saml.query(i,j),len);\n\t\t\tif(i>1) qm=Min(samp.query(i-1,j-1),len-1);\n\t\t\tif(qm+hm<len) continue;\n\t\t\t--res1[j+hm],++res1[j+hm-1-(qm+hm-len)],\n\t\t\t++res2[i-qm],--res2[i-qm+1+(qm+hm-len)];\n\t\t}\n\t\tfp(i,1,n) res1[i]+=res1[i-1],res2[i]+=res2[i-1];\n\t\tll ans=0; fp(i,2,n) ans+=1ll*res1[i-1]*res2[i]; print(ans);\n\t} return Ot(),0;\n} \n```\n\n\n\n\n",
        "postTime": 1553301609,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1117 \u3010[NOI2016]\u4f18\u79c0\u7684\u62c6\u5206 \u3011"
    },
    {
        "content": "\u8fd9\u91cc\u5373\u5c06\u4ecb\u7ecd\u4e00\u4e2a\u4e24\u53ealog\u5f88\u96be\u5199\u7684\u5206\u6cbb\u6cd5\u2026\u2026\n\n\u5c3d\u91cf\u5199\u5f97\u8be6\u7ec6\u5427\u2026\u2026\u987a\u4fbf\u7406\u6e05\u6211\u7684\u601d\u8def\n\n\u73b0\u5728\u5f00\u59cb\u5427\u3002\n\n# 1. \u89e3\u9898\u601d\u8def\n\n[\u8df3\u8f6c\u9898\u9762](https://www.luogu.com.cn/problem/P1117)\n\n\u5982\u679c\u6211\u4eec\u80fd\u6c42\u51fa\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e $i$ \u6709\u591a\u5c11\u4e2a $AA$ \u4ee5 $i$ \u7ed3\u5c3e\uff08\u7528 $f_i$ \u8868\u793a\uff09\uff0c\u6709\u591a\u5c11\u4e2a $BB$ \u4ee5 $i$ \u5f00\u5934\uff08\u7528 $g_i$ \u8868\u793a\uff09\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u4e3a\n\n$$ \\sum_{i=1}^{n-1} f_ig_{i+1} $$\n\n\u5f88\u663e\u7136\u6c42 $g$ \u8ddf\u6c42 $f$ \u662f\u5bf9\u79f0\u7684\uff0c\u6211\u4eec\u5148\u6765\u7814\u7a76\u600e\u4e48\u6c42 $g$\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a $BB$\uff0c\u8bbe $i$ \u4e3a\u7b2c\u4e00\u4e2a $B$ \u7684\u5f00\u5934\u4f4d\u7f6e\uff0c$j$ \u4e3a\u7b2c\u4e8c\u4e2a $B$ \u7684\u5f00\u5934\u4f4d\u7f6e\uff08$i<j$\uff09\uff0c\u5b83\u4eec\u5e94\u5f53\u6ee1\u8db3\n\n$$ j-i\\leq LCP(i,j) $$\n\n\u5176\u4e2d $LCP(a,b)$ \u6307\u7684\u662f\u4ee5 $a,b$ \u5f00\u5934\u7684\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u957f\u5ea6\u3002\n\n\u90a3\u4e48 $LCP$ \u600e\u4e48\u641e\u554a\uff1f\u5f88\u81ea\u7136\u60f3\u5230\u540e\u7f00\u6570\u7ec4\uff08\u4e0d\u4f1a\u7684\u6233[\u8fd9](https://www.luogu.com.cn/problem/P3809)\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8d58\u8ff0\u4e86\uff09\uff0c\u8bbe $loc_i$ \u4e3a\u540e\u7f00\u6392\u5e8f\u540e\u4f4d\u7f6e $i$ \u5728\u539f\u5b57\u7b26\u4e32\u4e2d\u7684\u4f4d\u7f6e\uff0c$lcp_i$ \u4e3a\u540e\u7f00\u6392\u5e8f\u540e\u540e\u7f00 $i$ \u4e0e $i+1$ \u7684 $LCP(loc_i,loc_{i+1})$\u3002\n\n\u90a3\u4e48\n\n$$ g_{loc_i}=\\sum_{j=1}^{i-1} [1 \\leq loc_j-loc_i\\leq \\min_{k=j}^{i-1} lcp_k] + \\sum_{j=i+1}^{n} [1\\leq loc_j-loc_i\\leq \\min_{k=i}^{j-1} lcp_k] $$\n\n$$ =\\sum_{j=1}^{i-1} [loc_j-loc_i \\leq \\min_{k=j}^{i-1} lcp_k] + \\sum_{j=i+1}^n [loc_j-loc_i \\leq \\min_{k=i}^{j-1} lcp_k] - loc_i +1 $$\n\n\uff08\u5efa\u8bae\u9759\u9759\u60f3\u60f3\u600e\u4e48\u6765\u7684\uff0c\u770b\u4e0d\u61c2\u53ef\u4ee5\u968f\u65f6\u95ee\u6211\uff09\n\n\u4e3a\u5565\u8981 $-loc_i+1$ \u5462\u2026\u2026\u56e0\u4e3a\u5982\u679c $loc_j<loc_i$ \u7684\u8bdd\u5e94\u8be5\u662f\u4e0d\u505a\u8d21\u732e\u7684\uff0c\u8fd9\u6837\u7684 $j$ \u6709 $loc_i-1$ \u4e2a\uff08$loc_j-loc_i$ \u4e3a\u8d1f\u6570\u5c31\u4e00\u5b9a\u4f1a\u4e0d\u6ee1\u8db3 $1 \\leq loc_j-loc_i$\uff09\uff0c\u56e0\u6b64\u8981\u51cf\u6389\u3002\n\n\u53ef\u662f\u5269\u4e0b\u7684\u4e1c\u897f\u8fd8\u662f\u5f88\u5934\u75bc\u554a\uff0c\u600e\u4e48\u529e\u5462\u3002\n\n\u53d1\u73b0\u6709 $\\min$ \u8fd0\u7b97\uff0c\u8003\u8651\u5bf9\u6574\u4e2a\u5e8f\u5217\uff08\u4ece\u8fd9\u91cc\u5f80\u540e\u201c\u5e8f\u5217\u201d\u6307\u7684\u662f\u540e\u7f00\u6392\u5e8f\u597d\u540e\u7684\u6570\u7ec4\uff09\u5206\u6cbb\uff0c\u8ba1\u7b97 $[L,R]$ \u65f6\u53d6 $mid=\\lfloor \\frac{L+R}{2} \\rfloor $\uff0c$[L,mid]$ \u79f0\u4e3a\u5de6\u534a\u90e8\u5206\uff0c$[mid+1,R]$ \u79f0\u4e3a\u53f3\u534a\u90e8\u5206\u3002\n\n\u6211\u4eec\u505a $lcp$ \u6570\u7ec4\u5728\u5de6\u534a\u90e8\u5206\u7684\u540e\u7f00\u6700\u5c0f\u503c\uff0c\u5728\u53f3\u534a\u90e8\u5206\u7684\u524d\u7f00\u6700\u5c0f\u503c\u6570\u7ec4 $minn_i$\u3002\n\n\u4e5f\u5c31\u662f\u5f53 $i \\in [L,mid]$ \u65f6\n\n$$ minn_i=\\min_{j=i}^{mid} lcp_j = \\min(lcp_i,minn_{i+1}) $$\n\n\u5f53 $ i \\in [mid+1,R]$ \u65f6\n\n$$ minn_i=\\min_{j=mid}^{R-1} lcp_{j}=\\min(lcp_{i-1},minn_{i-1}) $$\n\n\u5148\u8003\u8651\u53f3\u534a\u90e8\u5206\u5bf9\u5de6\u534a\u90e8\u5206\u7684\u8d21\u732e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $i\\in [L,mid]$\uff0c\u80fd\u4e0e\u4e4b\u6784\u6210 $BB$ \u7684 $j\\in [mid+1,R]$ \u6ee1\u8db3\n\n$$ loc_j-loc_i \\leq \\min(minn_i,minn_j) $$\n\n\u73b0\u5728 $\\min$ \u91cc\u7684\u4e1c\u897f\u53ea\u6709\u4e24\u4e2a\u9009\u62e9\u4e86\uff01\u8fd9\u4e2a\u65f6\u5019\u505a\u4e9b\u5206\u7c7b\u8ba8\u8bba\u5c31\u4e0d\u600e\u4e48\u9ebb\u70e6\u4e86\u5427\u3002\u6211\u4eec\u53d1\u73b0\u5f53 $i\\leq mid$ \u65f6\uff0c$minn_i$ \u968f $i$ \u7684\u589e\u5927\u800c\u589e\u5927\uff1b\u5f53 $i\\geq mid+1$ \u65f6\uff0c$minn_i$ \u968f $i$ \u7684\u589e\u5927\u800c\u51cf\u5c0f\u3002\n\n\u6211\u4eec\u4ece $mid$ \u5230 $L$ \u4e00\u4e2a\u4e2a\u679a\u4e3e\u51fa $i$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $i$ \u6c42\u51fa $pos$ \u6ee1\u8db3\n\n$$ \\forall j\\in[mid+1,pos],minn_i \\leq minn_j $$\n\n$$ \\forall j\\in[pos+1,R],minn_i>minn_j $$\n\n\u6839\u636e $minn$ \u7684\u589e\u51cf\u6027\u53ef\u4ee5\u8bc1\u660e\u51fa\u5bf9\u4e8e\u6bcf\u4e2a $i$ \u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u8fd9\u6837\u7684 $pos$\uff0c\u4e14\u8fdb\u4e00\u6b65\uff0c\u5f53 $i$ \u51cf\u5c0f\u65f6\uff0c$pos$ \u4f1a\u968f\u4e4b\u589e\u5927\u3002\u8fd9\u6837\u6c42\u51fa\u6240\u6709 $pos$ \u5c31\u662f\u5747\u644a $O(n)$ \u7684\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u770b\u600e\u4e48\u7edf\u8ba1\u5408\u6cd5 $j$ \u7684\u4e2a\u6570\u3002\n\n\u5f53 $ j\\in [mid+1,pos] $ \u65f6\uff0c\u6ee1\u8db3 $loc_j-loc_i\\leq minn_i$\uff0c\u4e5f\u5c31\u662f $loc_i + minn_i\\geq loc_j $\u3002\n\n\u5f53 $j\\in[pos+1,R]$ \u65f6\uff0c\u6ee1\u8db3 $loc_j-loc_i \\leq minn_j$\uff0c\u4e5f\u5c31\u662f $loc_i \\geq loc_j - minn_j$\u3002\n\n\u60ca\u4eba\u5730\u53d1\u73b0\u7ecf\u8fc7\u4e00\u756a\u6298\u817e\uff0c$i,j$ \u7ec8\u4e8e\u5206\u79bb\u4e86\uff0c$\\min$ \u4e5f\u6d88\u5931\u4e86\u6709\u6728\u6709\uff01\u8fd9\u4e2a\u65f6\u5019\u8822\u8822\u6b32\u52a8\u7684\u6811\u72b6\u6570\u7ec4\u7ec8\u4e8e\u6d3e\u4e0a\u7528\u573a\u4e86\uff0c\u79fb\u52a8 $pos$ \u7684\u540c\u65f6\u7ef4\u62a4\u6811\u72b6\u6570\u7ec4\uff08\u7528\u4e24\u4e2a\u6216\u8005\u505a\u4e24\u6b21\u90fd\u884c\uff09\uff0c\u7edf\u8ba1\u7684\u65f6\u5019\u67e5\u8be2\u503c\u57df\u4e0a $loc_i$ \u6216 $loc_i + minn_i$ \u7684\u524d\u7f00\u70b9\u6570\u5c31\u884c\u4e86\u3002\n\n\u5176\u5b9e\u8fd9\u79cd\u5957\u8def\u65e9\u5728\u53bb\u5e74\u5c31\u5df2\u7ecf\u88ab\u5927\u91cf\u53d1\u73b0\u4e86\u2026\u2026\u4e0e\u5206\u6cbb\u6cd5\u76f8\u63d0\u5e76\u8bba\u7684\u8fd8\u6709\u6570\u636e\u7ed3\u6784\u626b\u63cf\u7684\u505a\u6cd5\uff0c\u4e24\u79cd\u505a\u6cd5\u5404\u6709\u4f18\u52a3\uff0c\u4e5f\u4e0d\u662f\u6bcf\u9053\u9898\u4e24\u8005\u7686\u9002\u7528\u7684\uff0c\u8be6\u60c5\u53ef\u4ee5\u770b\u770b\u6211\u4ee5\u524d\u5199\u7684[\u535a\u5ba2](https://www.luogu.com.cn/blog/JHN021/tao-lu-ou-jian-ti-shi-gong-zhong-post)\u3002\n\n\u6811\u72b6\u6570\u7ec4\u5f00\u591a\u5927\u5462\u2026\u2026$ loc_i\\in [1,n] , minn_i\\in [0,n] , loc_i-minn_i \\in [1-n,n]$ \u56e0\u6b64 $j\\in[pos+1,R]$ \u65f6\u4e0d\u7b49\u5f0f\u6539\u5199\u4e3a $loc_i +n \\geq loc_j - minn_j +n$ \u8303\u56f4\u662f\u5b8c\u7f8e\u7684 $[1,2n]$\u3002\n\n\u522b\u5fd8\u4e86\u4e00\u5927\u5806\u4e1c\u897f\uff1a\n\n1. \u8fd8\u8981\u8ba1\u7b97\u5de6\u534a\u90e8\u5206\u5bf9\u53f3\u534a\u90e8\u5206\u7684\u8d21\u732e\uff0c\u505a\u6cd5\u7c7b\u4f3c\u3002\n\n2. \u8fd8\u8981\u628a\u6574\u4e2a\u5b57\u7b26\u4e32\u7ffb\u8f6c\u4e00\u904d\u518d\u505a\u4e00\u6b21\u6c42\u51fa $f$\uff0c\u505a\u6cd5\u7c7b\u4f3c\u3002\n\n3. \u5f00 long long\u3002\n\n4. SA \u522b\u5199\u70b8\u4e86\u3002\n\n5. \u6c42\u51fa $f_i,g_i$ \u4e86\u4e4b\u540e\u522b\u5fd8\u4e86\u51cf\u53bb $ i-1 $\u3002\n\n\u7531\u4e8e\u6709\u5206\u6cbb\u548c\u6811\u72b6\u6570\u7ec4\uff0c\u65f6\u95f4\u5c31\u662f $O(Tn\\log^2 n)$ \u7684\u4e86\uff0c\u7a7a\u95f4 $O(n)$\u3002\n\n# 2. \u4ee3\u7801\n\n\u5495\u5495\u5495\n\n~~\u4e00\u628a\u6293\u8d77\u9e3d\u5b50\u7096\u4e86~~\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAXN=3e4;\n\nint n,A[MAXN+5];\nll f[MAXN+5],g[MAXN+5],ans,lcp[MAXN+5];\n\n//\u54c8\u5e0c\nconst ll Base=2333,MOD=1e9+7; \nll pre[MAXN+5],B[MAXN+5];\nll Hash(int L,int R) {return (pre[R]-(pre[L-1]*B[R-L+1])%MOD+MOD)%MOD;}\n\n//\u6811\u72b6\u6570\u7ec4\nstruct BIT\n{\n\tint New,Edit[2*MAXN+5];//\u8fd9\u91cc\u8303\u56f4\u5f85\u5546\u69b7\n\tll sum[2*MAXN+5];\n\tint lowbit(int x) {return x&-x;}\n\tvoid Clean() {++New;} \n\tvoid ud(int x)\n\t{\n\t\tif(New>Edit[x])\n\t\t{\n\t\t\tEdit[x]=New;\n\t\t\tsum[x]=0;\n\t\t}\n\t}\n\tvoid Plus(int x,ll v)\n\t{\n\t\tfor(;x<=2*n;x+=lowbit(x))\n\t\t{\n\t\t\tud(x);\n\t\t\tsum[x]+=v;\n\t\t}\n\t}\n\tll Ask(int x)\n\t{\n\t\tll cnt=0;\n\t\tfor(;x>0;x-=lowbit(x))\n\t\t{\n\t\t\tud(x);\n\t\t\tcnt+=sum[x];\n\t\t}\n\t\treturn cnt;\n\t}\n}mapn[2];\n\nint SA[MAXN+5];\nint LCP(int a,int b)\n{\n\tint L=0,R=min(n-a+1,n-b+1);\n\tfor(int mid;L<=R;)\n\t{\n\t\tmid=(L+R)>>1;\n\t\tif(Hash(a,a+mid-1)==Hash(b,b+mid-1)) L=mid+1;\n\t\telse R=mid-1;\n\t}\n\treturn R;\n}\nbool cmp(int a,int b)\n{\n\tint cnt=LCP(a,b);\n\treturn A[a+cnt]<A[b+cnt];\n}\nvoid Sort()\n{\n\tsort(SA+1,SA+n+1,cmp);\n\t//printf(\"SA: \");for(int i=1;i<=n;i++) printf(\"%d \",SA[i]);printf(\"\\n\");\n\tfor(int i=1;i<n;i++) lcp[i]=LCP(SA[i],SA[i+1]);\n\t//printf(\"lcp: \");for(int i=1;i<n;i++) printf(\"%lld \",lcp[i]);printf(\"\\n\");\n}\n\nll minn[MAXN+5];\nvoid Solve(int L,int R)\n{\n\tif(L==R) return;\n\tint mid=(L+R)>>1;\n\tSolve(L,mid),Solve(mid+1,R);\n\t\n\tminn[mid]=lcp[mid];\n\tfor(int i=mid-1;i>=L;i--) minn[i]=min(lcp[i  ],minn[i+1]);\n\tfor(int i=mid+1;i<=R;i++) minn[i]=min(lcp[i-1],minn[i-1]);\n\t\n\tmapn[0].Clean(),mapn[1].Clean();\n\tfor(int i=mid+1;i<=R;i++) mapn[1].Plus(SA[i]-minn[i]+n,1);\n\tfor(int i=mid,pos=mid;i>=L;i--)\n\t{\n\t\twhile(pos<R)\n\t\t\tif(minn[i]<=minn[pos+1])\n\t\t\t{\n\t\t\t\t++pos;\n\t\t\t\tmapn[0].Plus(SA[pos],1);\n\t\t\t\tmapn[1].Plus(SA[pos]-minn[pos]+n,-1);\n\t\t\t}\n\t\t\telse break;\n\t\tf[SA[i]]+=mapn[0].Ask(SA[i]+minn[i])+mapn[1].Ask(SA[i]+n);\n\t}\n\t\n\tmapn[0].Clean(),mapn[1].Clean();\n\tfor(int i=L;i<=mid;i++) mapn[1].Plus(SA[i]-minn[i]+n,1);\n\tfor(int i=mid+1,pos=mid+1;i<=R;i++)\n\t{\n\t\twhile(pos>L)\n\t\t\tif(minn[i]<=minn[pos-1])\n\t\t\t{\n\t\t\t\t--pos;\n\t\t\t\tmapn[0].Plus(SA[pos],1);\n\t\t\t\tmapn[1].Plus(SA[pos]-minn[pos]+n,-1);\n\t\t\t}\n\t\t\telse break;\n\t\tf[SA[i]]+=mapn[0].Ask(SA[i]+minn[i])+mapn[1].Ask(SA[i]+n);\n\t}\n}\n\nvoid Work()\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tpre[i]=((pre[i-1]*Base)%MOD+A[i])%MOD;\n\t\tf[i]=0;\n\t\tSA[i]=i;\n\t}\n\tSort();\n\tSolve(1,n);\n\tfor(int i=1;i<=n;i++) f[i]-=i-1;\n\t//printf(\"f: \");for(int i=1;i<=n;i++) printf(\"%lld \",f[i]);printf(\"\\n\");\n}\n\nint main()\n{\n\t//freopen(\"Last.in\",\"r\",stdin);\n\t//freopen(\"MyAns.txt\",\"w\",stdout); \n\tB[0]=1;\n\tfor(int i=1;i<=MAXN;i++) B[i]=(B[i-1]*Base)%MOD;\n\tint T;\n\tscanf(\"%d\\n\",&T);\n\twhile(T--)\n\t{\n\t\tn=0;\n\t\tfor(char s;1;)\n\t\t{\n\t\t\ts=getchar();\n\t\t\tif(s=='\\n') break;\n\t\t\tA[++n]=s-'a'+1;\n\t\t}\n\t\tA[n+1]=0;\n\t\t//printf(\"first work\\n\");\n\t\t//for(int i=1;i<=n;i++) printf(\"%d \",A[i]);printf(\"\\n\");\n\t\tWork();\n\t\tfor(int i=1;i<=n;i++) g[i]=f[i];\n\t\tfor(int i=1;2*i<=n;i++) swap(A[i],A[n-i+1]);\n\t\t//printf(\"second work\\n\");\n\t\t//for(int i=1;i<=n;i++) printf(\"%d \",A[i]);printf(\"\\n\");\n\t\tWork();\n\t\tans=0;\n\t\tfor(int i=2;i<=n;i++) ans+=f[i]*g[n-i+2];\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1617535812,
        "uid": 54591,
        "name": "Seauy",
        "ccfLevel": 9,
        "title": "[NOI2016] \u4f18\u79c0\u7684\u62c6\u5206 \u7684\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898\u8c8c\u4f3c\u662f\u5c11\u6709\u7684\u540e\u7f00\u81ea\u52a8\u673a\u4e0d\u80fd\u89e3\u51b3\u800c\u540e\u7f00\u6570\u7ec4\u80fd\u89e3\u51b3\u7684\u9898\u76ee\u4e4b\u4e00\u4e86\u3002\n\n\u6b64\u9898\u505a\u6cd5\uff1a\u540e\u7f00\u6570\u7ec4 + \u8c03\u548c\u7ea7\u6570\u3002\n\n\u6211\u4eec\u53d1\u73b0\u95ee\u9898\u5176\u5b9e\u5c31\u662f\u627e\u5230\u6240\u6709\u5f62\u5982 AA \u7684\u4e32\uff08\u5373\u524d\u540e\u4e24\u534a\u76f8\u540c\u7684\u4e32\uff09\uff0c\u628a\u5b83\u6240\u5728\u7684\u5de6\u3001\u53f3\u7aef\u70b9\u4f4d\u7f6e\u4e0a\u8ba1\u6570\u5668 + 1 \u5373\u53ef\u3002\n\n\u9996\u5148\u6b63\u53cd\u4e32\u90fd\u5efa\u4e00\u4e2a\u540e\u7f00\u6570\u7ec4\uff0c\u8fd9\u6837\u65b9\u4fbf\u64cd\u4f5c\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4e0d\u59a8\u679a\u4e3e A \u7684\u957f\u5ea6 len\uff0c\u7136\u540e\u628a\u5b57\u7b26\u4e32\u6309\u7167 len \u5212\u5206\u6210\u82e5\u5e72\u5757\uff0c\u7136\u540e\u6211\u4eec\u9700\u8981\u5904\u7406\u5de6\u7aef\u70b9\u5728\u6bcf\u4e00\u5757\u4e2d\u7684\u5f62\u5982 AA \u7684\u5b50\u4e32\uff0c\u5047\u8bbe\u6211\u4eec\u5f53\u524d\u5904\u7406\u7684\u4f4d\u7f6e\u662f i\uff08\u89c1\u4e0b\u56fe\uff09\u3002\n\n![](https://images2015.cnblogs.com/blog/822137/201706/822137-20170625175717913-961577607.png)\n\n\u6ce8\u610f\u8fd9\u5f20\u56fe\u4e2d\uff0c\u6211\u4eec\u5f53\u524d\u4f4d\u7f6e\u4e3a i\uff0c\u5904\u7406\u5f00\u5934\u5728\u6700\u5de6\u8fb9\u90a3\u4e2a\u5757\u4e2d\u7684\u5f62\u5982 AA \u7684\u5b50\u4e32\u3002\uff08\u5757\u4e0e\u5757\u4e4b\u95f4\u7684\u5206\u9694\u7b26\u662f\u957f\u7ad6\u7ebf\uff0c\u4ee5\u4e0b\u201c\u5f62\u5982 AA \u7684\u5b50\u4e32\u201d\u5747\u7b80\u79f0\u4e3a\u201cAA \u5b50\u4e32\u201d\uff09\n\n\u4ee4 L1 = LCP(i, i+len)\uff08LCP \u4e3a\u6700\u957f\u516c\u5171\u524d\u7f00\uff0cLCS \u4e3a\u6700\u957f\u516c\u5171\u540e\u7f00\uff09\uff0c\u90a3\u4e48\u5b58\u5728 AA \u5b50\u4e32\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u662f LCS(i+len-1, i-1) > 0 \u4e14 LCS(i+len-1, i-1) + L1 >= len\uff08\u5426\u5219\u7ea2\u8272\u533a\u57df\u5c31\u4f1a\u6709\u4e0d\u540c\u7684\u5b57\u7b26\uff0c\u90a3\u4e48\u663e\u7136\u4e0d\u53ef\u80fd\u5b58\u5728 AA \u5b50\u4e32\uff09\u3002\u90a3\u4e48\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u5c31\u597d\u529e\u4e86\uff0c\u4ee4 L2 = LCS(i+L1-len-1, i+L1-1)\uff0c\u4e0d\u96be\u53d1\u73b0\u533a\u95f4 [ i+L1-len-L2, i+L1-len ] \u4e2d\u7684\u4f4d\u7f6e\u90fd\u662f\u957f\u5ea6\u4e3a len \u7684 AA \u5b50\u4e32\u7684\u5de6\u7aef\u70b9\uff08\u81f3\u4e8e\u53f3\u7aef\u70b9\u5728\u54ea\uff0c\u8bf7\u8bfb\u8005\u601d\u8003\uff09\u3002\uff08\u7136\u800c\u8fd9\u91cc\u5e76\u4e0d\u7528\u7ebf\u6bb5\u6811\u5b9e\u73b0\u533a\u95f4\u52a0\uff0c\u53ef\u4ee5\u76f4\u63a5\u6253\u79bb\u7ebf\u6807\u8bb0\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\nLL in() {\n    char ch; LL x = 0, f = 1;\n    while(!isdigit(ch = getchar()))(ch == '-') && (f = -f);\n    for(x = ch ^ 48; isdigit(ch = getchar()); x = (x << 1) + (x << 3) + (ch ^ 48));\n    return x * f;\n}\nconst int maxn = 5e4 + 10;\nint lg[maxn];\nstruct SA {\n    char s[maxn];\n    int rk[maxn], sa[maxn], c[maxn], x[maxn], y[maxn], h[maxn], n, m, st[maxn][20];\n    void init() {\n        memset(x, 0, sizeof x);\n        memset(y, 0, sizeof y);\n        memset(h, 0, sizeof h);\n        memset(st, 0, sizeof st);\n        memset(sa, 0, sizeof sa);\n        memset(rk, 0, sizeof rk);\n        memset(c, 0, sizeof c);\n        for(int i = 1; i <= n; i++) x[i] = y[i] = h[i] = st[i][0] = sa[i] = rk[i] = 0;\n        for(int i = 1; i <= m; i++) c[i] = 0;\n        for(int i = 1; i <= n; i++) c[x[i] = s[i]]++;\n        for(int i = 1; i <= m; i++) c[i] += c[i - 1];\n        for(int i = n; i >= 1; i--) sa[c[x[i]]--] = i;\n        for(int k = 1; k <= n; k <<= 1) {\n            int num = 0;\n            for(int i = n - k + 1; i <= n; i++) y[++num] = i;\n            for(int i = 1; i <= n; i++) if(sa[i] > k) y[++num] = sa[i] - k;\n            for(int i = 1; i <= m; i++) c[i] = 0;\n            for(int i = 1; i <= n; i++) c[x[i]]++;\n            for(int i = 1; i <= m; i++) c[i] += c[i - 1];\n            for(int i = n; i >= 1; i--) sa[c[x[y[i]]]--] = y[i], y[i] = 0;\n            std::swap(x, y);\n            x[sa[1]] = 1, num = 1;\n            for(int i = 2; i <= n; i++) x[sa[i]] = (y[sa[i]] == y[sa[i - 1]] && y[sa[i] + k] == y[sa[i - 1] + k])? num : ++num;\n            if(num == n) break;\n            m = num;\n        }\n        for(int i = 1; i <= n; i++) rk[i] = x[i];\n        int H = 0;\n        for(int i = 1; i <= n; i++) {\n            if(rk[i] == 1) continue;\n            if(H) H--;\n            int j = sa[rk[i] - 1];\n            while(i + H <= n && j + H <= n && s[i + H] == s[j + H]) H++;\n            h[rk[i]] = H;\n        }\n        for(int i = 1; i <= n; i++) st[i][0] = h[i];\n        for(int j = 1; j <= 18; j++)\n            for(int i = 1; i + (1 << j) - 1 <= n; i++)\n                st[i][j] = std::min(st[i][j - 1], st[i + (1 << (j - 1))][j - 1]);\n    }\n    int LCP(int x, int y) {\n        x = rk[x], y = rk[y];\n        if(x > y) std::swap(x, y);\n        x++;\n        int l = lg[y - x + 1];\n        return std::min(st[x][l], st[y - (1 << l) + 1][l]);\n    }\n    void ins(char *s, int len) {\n        n = len, m = 122;\n        for(int i = 1; i <= n; i++) this->s[i] = s[i];\n    }\n}A, B;\nLL pre[maxn], nxt[maxn];\nchar s[maxn];\nint main() {\n    lg[0] = -1;\n    for(int i = 1; i < maxn; i++) lg[i] = lg[i >> 1] + 1;\n    for(int T = in(); T --> 0;) {\n        scanf(\"%s\", s + 1);\n        int n = strlen(s + 1);\n        A.ins(s, n);\n        std::reverse(s + 1, s + n + 1);\n        B.ins(s, n);\n        A.init(), B.init();\n        memset(pre, 0, sizeof pre), memset(nxt, 0, sizeof nxt);\n        for(int L = 1; L <= n >> 1; L++)\n            for(int i = 1; i + L <= n; i += L) {\n                int j = i + L;\n                int xx = A.LCP(i, j), yy = B.LCP(n - i + 1, n - j + 1);\n                xx = std::min(xx, L), yy = std::min(yy, L);\n                if(xx + yy < L + 1) continue;\n                int nowlen = xx + yy - L - 1;\n                nxt[i - yy + 1]++, nxt[i - yy + nowlen + 2]--;\n                pre[j + xx - nowlen - 1]++, pre[j + xx]--;\n            }\n        for(int i = 1; i <= n; i++) pre[i] += pre[i - 1], nxt[i] += nxt[i - 1];\n        LL ans = 0;\n        for(int i = 1; i < n; i++) ans += pre[i] * nxt[i + 1];\n        printf(\"%lld\\n\", ans);\n    }\n    return 0;\n}\n```\n",
        "postTime": 1580106501,
        "uid": 271114,
        "name": "panjoel",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1117 \u3010[NOI2016]\u4f18\u79c0\u7684\u62c6\u5206 \u3011"
    },
    {
        "content": "\u5f62\u5982 $\\mathrm{AABB}$ \u7684\u4e32\u663e\u7136\u662f\u53ef\u4ee5\u679a\u4e3e\u4e00\u4e2a\u5206\u754c\u70b9 $i$\uff0c\u8bb0\u4ee5 $i$ \u7ed3\u5c3e\u7684 $\\mathrm{AA}$ \u4e32\u65b9\u6848\u6570\u4e3a $f_i$\uff0c\u4ee5 $i+1$ \u5f00\u5934\u7684 $\\mathrm{BB}$ \u4e32\u65b9\u6848\u6570\u4e3a $g_i$\uff0c\u5219\u6240\u6c42\u4e3a $\\sum f_i\\times g_{i+1}$\u3002\n  \n\u5982\u4f55\u6c42 $f_i,g_i$ \u5462\uff1f\u5bf9\u539f\u4e32\u548c\u53cd\u4e32\u5efa $\\mathrm{SAM}$ \u540e\uff0c\u6211\u5e76\u6ca1\u6709\u60f3\u5230\u4e4b\u524d\u9898\u89e3\u63d0\u5230\u7684\u8c03\u548c\u7ea7\u6570\uff0c\u800c\u662f\u60f3\u5230\u4e86 $\\mathrm{SAM}$ \u7684 $\\mathrm{Parent \\ Tree}$\u3002\u5728\u4e0d\u8003\u8651\u7a7a\u95f4\u590d\u6742\u5ea6\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u770b\u4e0a\u53bb\u5f88\u53ef\u505a\u7684\u505a\u6cd5\uff1a\u5bf9\u4e8e\u6811\u4e0a\u6bcf\u4e00\u4e2a\u70b9 $x$ \u6c42\u51fa\u5176 $\\mathrm{endpos}$ \u96c6\u5408\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651 $\\mathrm{endpos}$ \u96c6\u5408\u4e2d\u6240\u6709\u4e8c\u5143\u7ec4 $(p,q)$\uff0c\u6ee1\u8db3 $\\mathrm{minLen}_x\\leq|p-q|\\leq \\mathrm{maxLen}_x$ \u5373\u53ef\u3002\u8fd9\u90e8\u5206\u7edf\u8ba1\u662f\u4e2a\u7ecf\u5178\u95ee\u9898\uff0c\u53ef\u4ee5\u7ebf\u6027\u6c42\u89e3\u3002\n  \n\u901a\u8fc7\u5f52\u5e76\u5408\u5e76 $\\mathrm{endpos}$ \u96c6\u5408\uff0c\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u7684 $\\mathrm{endpos}$ \u96c6\u5408\u5185\u6709\u5e8f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5 $O(\\sum f_i)$ \u6c42\u89e3\u6b64\u95ee\u9898\uff0c\u5176\u4e2d $f(i)$ \u4e3a\u5b50\u6811 $i$ \u7684\u53f6\u5b50\u8282\u70b9\u6570\uff0c\u4f46\u8fd9\u663e\u7136\u662f\u4f1a\u88ab\u5faa\u73af\u4e32\u6216\u8005 $\\texttt{abbbbb...b}$ \u8fd9\u79cd\u6570\u636e\u5361\u5230\u81ea\u95ed\u3002~~\u5c31\u7b97\u8fd9\u6837 $95$ \u5206\u4f60\u8fd8\u662f\u53ef\u4ee5\u62ff\u6ee1~~\n  \n\u4e3a\u4ec0\u4e48\u8981\u663e\u5f0f\u8868\u793a\u51fa $\\mathrm{endpos}$ \u96c6\u5408\u5462\uff1f\u76f4\u63a5 $\\mathrm{dsu \\ on \\ tree}$\uff0c\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u91cd\u513f\u5b50\u8d21\u732e\u5373\u53ef\uff0c\u6700\u52a3\u60c5\u51b5\u4e0b\u4ecd\u53ef\u4ee5\u505a\u5230 $O(|S| \\log^2 |S|)$\uff0c\u4e0d\u7ba1\u600e\u4e48\u8bf4\u8fd8\u662f\u88ab $\\mathrm{SA}$ \u7684 $O(|S| \\log |S|)$ \u540a\u6253\u4e86\uff0c\u54ed\u54ed\u3002\n  \n\u672c\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u74f6\u9888\u5728\u4e8e\u6811\u4e0a\u7edf\u8ba1 $\\mathrm{minLen}_x\\leq |p-q|\\leq \\mathrm{maxLen}_x(p,q\\in \\mathrm{endpos}_x)$\u3002\n\n\u8fd9\u91cc\u4ec5\u8d34\u4e0a\u6700\u52a3 $O(|S|^2)$ \u7684\u4ee3\u7801\uff0c\u56e0\u4e3a\u54b1\u4e0d\u60f3\u5199 $O(|S| \\log^2 |S|)$ \u7684\u4ee3\u7801\uff08\u9003 \n\n\u5982\u679c\u6811\u4e0a\u7edf\u8ba1\u90a3\u4e2a\u4e1c\u897f\u6709\u4e86\u66f4\u4f18\u79c0\u7684\u505a\u6cd5\uff0c\u54b1\u4f1a\u56de\u6765\u628a\u8fd9\u4e2a\u5751\u586b\u4e0a\u7684 \u00d7\n\n```cpp\n/* stuff you should look for\n\t* int overflow, array bounds, uppercase/lowercase\n\t* special cases (n=1?)\n\t* do sth. instead of nothing and stay organized\n\t* WRITE STUFF DOWN\n\t* DON'T GET STUCK ON ONE APPROACH\n*/\n#include<cstdio>\n#include<map>\n#include<vector>\n#include<cstring>\ntypedef long long ll;\ntypedef std::map<int,int> mint;\ntypedef std::vector<int> vint;\nchar s[100005];\nll res1[60005],res2[60005];\ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f; \n}\nstruct node {\n\tint len,link;\n\tstd::map<int,int> trans;\n};\nstruct SuffixACM {\n\tint tot,lst;\n\tstd::vector<int> rev_link[60005];\n\tstd::vector<int> endpos[60005];\n\tnode t[60005];\n\tinline void init() {\n\t\ttot=lst=0; t[0].link=-1; \n\t} \n\tinline void extend(int pos,int c) {\n\t\tint p=lst,cur=++tot; endpos[cur].push_back(pos);//EP[cur]=pos;\n\t\tt[cur].len=t[lst].len+1;\n\t\twhile(p!=-1&&!t[p].trans.count(c)) {\n\t\t\tt[p].trans[c]=cur;\n\t\t\tp=t[p].link;\n\t\t}\n\t\tif(p==-1) t[cur].link=0;\n\t\telse {\n\t\t\tint q=t[p].trans[c];\n\t\t\tif(t[p].len+1==t[q].len) t[cur].link=q;\n\t\t\telse {\n\t\t\t\tint cln=++tot;\n\t\t\t\tt[cln]=t[q];\n\t\t\t\tt[cln].len=t[p].len+1;\n\t\t\t\twhile(p!=-1&&t[p].trans[c]==q) {\n\t\t\t\t\tt[p].trans[c]=cln;\n\t\t\t\t\tp=t[p].link;\n\t\t\t\t}\n\t\t\t\tt[cur].link=t[q].link=cln;\n\t\t\t} \n\t\t}\n\t\tlst=cur;\n\t}\n\tinline void show() {\n\t\tfor(register int i=0;i<=tot;++i) {\n\t\t\tfor(mint::iterator it=t[i].trans.begin();it!=t[i].trans.end();++it) {\n\t\t\t\tprintf(\"%d %d %d\\n\",i,it->second,it->first);\n\t\t\t}\n\t\t}\n\t\tfor(register int i=0;i<=tot;++i) printf(\"link=%d %d\\n\",t[i].link,i);\n\t\tfor(register int i=0;i<=tot;++i) {\n\t\t\tprintf(\"i=%d { \",i);\n\t\t\tfor(register int j=0;j<endpos[i].size();++j) {\n\t\t\t\tprintf(\"%d \",endpos[i][j]);\n\t\t\t}\n\t\t\tprintf(\"}\\n\");\n\t\t}\n//\t\tfor(register int i=0;i<=tot;++i) printf(\"%d\\n\",t[i].len);\n\t}\n\tinline void merge(vint &op1,vint &op2) {\n\t\tif(!op1.size()) {op1=op2; op2.clear(); return;}\n\t\tvint tmp; \n\t\tint len1=op1.size(),len2=op2.size();\n\t\tint p1=0,p2=0;\n\t\tfor(register int i=0;i<len1+len2;++i) {\n\t\t\tif((p1<len1&&op1[p1]<op2[p2])||(p2>=len2)) {tmp.push_back(op1[p1]);++p1;}\n\t\t\telse {tmp.push_back(op2[p2]);++p2;}\n\t\t}\n\t\top1=tmp;\n//\t\top2.clear();\n\t\tvint().swap(op2);\n\t}\n\tinline void dfs(int x,ll *des) {\n\t\tfor(size_t i=0;i<rev_link[x].size();++i) {\n\t\t\tint y=rev_link[x][i];\n\t\t\tdfs(y,des); merge(endpos[x],endpos[y]);\n\t\t}\n\t\tif(x) {\n\t\t\tint L=t[t[x].link].len+1,R=t[x].len;\n//\t\t\tint len=endpos[x].size(),ptt=len-1,cur;\n//\t\t\tfor(register int i=len-1;i>=0;--i) {\n//\t\t\t\tcur=endpos[x][i];\n//\t\t\t\twhile(ptt>i&&endpos[x][ptt]-cur>R) --ptt;\n//\t\t\t\tdes[cur]+=ptt-i; \n//\t\t\t}\n//\t\t\tptt=len-1;\n//\t\t\t//x<=R - x<=L-1\n//\t\t\tfor(register int i=len-1;i>=0;--i) {\n//\t\t\t\tcur=endpos[x][i];\n//\t\t\t\twhile(ptt>i&&endpos[x][ptt]-cur>L-1) --ptt;\n//\t\t\t\tdes[cur]-=ptt-i; \n//\t\t\t}\n\t\t\tint len=endpos[x].size(),ptt=0,cur;\n\t\t\tfor(register int i=0;i<len;++i) {\n\t\t\t\tcur=endpos[x][i];\n\t\t\t\twhile(ptt<i&&cur-endpos[x][ptt]>R) ++ptt;\n\t\t\t\tdes[cur]+=i-ptt;\n\t\t\t}\n\t\t\tptt=0;\n\t\t\tfor(register int i=0;i<len;++i) {\n\t\t\t\tcur=endpos[x][i];\n\t\t\t\twhile(ptt<i&&cur-endpos[x][ptt]>L-1) ++ptt;\n\t\t\t\tdes[cur]-=i-ptt;\n\t\t\t}\n\t\t}\n\t} \n\tinline void main(ll *des) {\n\t\tfor(register int i=1;i<=tot;++i) rev_link[t[i].link].push_back(i);\n\t\tdfs(0,des);\n\t}\n\tinline void clear() {\n//\t\tendpos[0].clear();\n\t\tvint().swap(endpos[0]);\n\t\tfor(register int i=0;i<=tot;++i) { \n\t\t\tt[i].trans.clear();\n\t\t\tt[i].link=0;\n\t\t\trev_link[i].clear();\n//\t\t\tendpos[i].clear();\n\t\t}\n\t}\n}SAM1,SAM2; \nint main() {\n\tfreopen(\"P1117_13.in\",\"r\",stdin);\n\tint T=read();\n\twhile(T--) {\n\t\tscanf(\"%s\",s+1);\n\t\tint n=strlen(s+1);\n//\t\tprintf(\"%d\\n\",n);\n\t\tSAM1.init(); SAM2.init();\n\t\tfor(register int i=1;i<=n;++i) SAM1.extend(i,s[i]-'a');\n\t\tfor(register int i=1;i<=n;++i) SAM2.extend(i,s[n-i+1]-'a');\n\t\tfor(register int i=1;i<=n;++i) res1[i]=res2[i]=0;\n//\t\tprintf(\"ERR\\n\");\n\t\tSAM1.main(res1); SAM2.main(res2);\n//\t\tSAM1.show();\n//\t\tprintf(\"ERR\\n\");\n\t\tll ans=0;\t\n\t\tfor(register int i=1;i<=n;++i) {\n\t\t\tans+=res1[i]*res2[n-i];\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t\tSAM1.clear(); SAM2.clear();\n\t}\n\treturn 0;\n}\n\n```\n  \n",
        "postTime": 1624420652,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "NOI 2016 Partition Editorial"
    },
    {
        "content": "\u5728\u6536\u85cf\u91cc\u8eba\u4e86\u56db\u4e2a\u6708\u7684\u9898\uff08\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\uff0c\u6c42\u4ee5 $i$ \u5f00\u59cb\u7684\u548c\u4ee5 $i$ \u7ed3\u5c3e\u7684 $\\texttt{AA}$ \u4e32\u7684\u4e2a\u6570\uff0c\u7136\u540e\u5229\u7528\u4e58\u6cd5\u539f\u7406\u53ef\u4ee5\u6c42\u51fa\u7b54\u6848\n\n\u663e\u7136\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a $\\mathcal O(n^2)$ \u7684\u54c8\u5e0c\u505a\u6cd5\n\n\u7136\u540e\u4f60\u5c31\u5f97\u5230\u4e8695\u5206\u7684\u597d\u6210\u7ee9\n\n\u5982\u4f55\u5f97\u5230\u5269\u4e0b\u7684\u4e94\u5206\u5462\uff1f\n\n~~\u5957\u53d6\u6570\u636e~~\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u679a\u4e3e $\\texttt{AA}$ \u4e32\u7684\u957f\u5ea6 $len$\n\n\u6211\u4eec\u5f80\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a $i\\times len$ \u6807\u8bb0\u4e3a\u5173\u952e\u70b9\uff0c\u90a3\u4e48\u6bcf\u4e2a $\\texttt{A}$ \u4e2d\u80af\u5b9a\u6709\u4e00\u4e2a\u5173\u952e\u70b9\u3002\n\n\u679a\u4e3e\u76f8\u90bb\u7684\u4e24\u4e2a\u5173\u952e\u70b9 $x,y$\uff0c\u6c42\u51fa\u4ed6\u4eec\u7684 $lcp$ \u548c $lcs$\n\n\u56e0\u4e3a $lcp$ \u548c $lcs$ \u6709\u4e00\u4e2a\u70b9\u662f\u91cd\u590d\u7684\uff0c\u6240\u4ee5\u5982\u679c $lcp+lcs-1 <len$ \u65f6\uff0c\u4e00\u5b9a\u4e0d\u5b58\u5728\u8de8\u8fc7\u8fd9\u4e2a\u5173\u952e\u70b9\u7684\u957f\u5ea6\u4e3a $len$ \u7684\u4e00\u4e2a $\\texttt{A}$ \u4e32\n\n\u5426\u5219\uff0c\u5bf9\u4e8e $i\\in(x-lcs,x-lcs+1+(lcp+lcs-len)]$\uff0c\u4e00\u5b9a\u5b58\u5728\u4ee5 $i$ \u5f00\u5934\u7684 $\\texttt{A}$ \u957f\u5ea6\u4e3a $len$ \u7684 $\\texttt{AA}$ \u4e32\uff0c\u540c\u7406\uff0c\u5bf9\u4e8e\u672b\u5c3e\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u4e5f\u6709\u4ee5\u4ed6\u4eec\u4e3a\u7ed3\u5c3e\u7684\u6ee1\u8db3\u6761\u4ef6\u7684 $\\texttt{AA}$ \u4e32\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u5229\u7528 SA \u8ba1\u7b97 lcp\uff0clcs \u7684\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n\\log n)$\uff0c\u679a\u4e3e\u5173\u952e\u70b9\u7684\u590d\u6742\u5ea6\u4e3a\u8c03\u548c\u7ea7\u6570 $\\mathcal O(n\\ln n)$\uff0c\u603b\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n\\log n)$\n\n\u4ee3\u7801\u8fd8\u633a\u597d\u5199\u7684\u5c0f\u6e05\u65b0\u5b57\u7b26\u4e32\u9898\uff08\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n# define Rep(i,a,b) for(int i=a;i<=b;i++)\n# define _Rep(i,a,b) for(int i=a;i>=b;i--)\n# define RepG(i,u) for(int i=head[u];~i;i=e[i].next)\n\ntypedef long long ll;\n\nconst int N=3e4+5;\n\ntemplate<typename T> void read(T &x){\n   x=0;int f=1;\n   char c=getchar();\n   for(;!isdigit(c);c=getchar())if(c=='-')f=-1;\n   for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+c-'0';\n    x*=f;\n}\n\nint t,n;\nint l[N],r[N];\nint box[N];\nll ans;\n\nstruct Suffix_Array{\n\tint m;\n\tchar s[N];\n\tint sa[N],rk[N],tp[N];\n\tint height[N];\n\tint st[N][17],lg[N];\n\tvoid init(){\n\t\tmemset(sa,0,sizeof(sa));\n\t\tmemset(rk,0,sizeof(rk));\n\t\tmemset(height,0,sizeof(height));\t\n\t\tmemset(st,0x3f,sizeof(st));\n\t}\n\tvoid RadixSort(){\n\t\tRep(i,1,m)box[i]=0;\n\t\tRep(i,1,n)box[rk[i]]++;\n\t\tRep(i,1,m)box[i]+=box[i-1];\n\t\t_Rep(i,n,1)sa[box[rk[tp[i]]]--]=tp[i];\n\t}\n\tvoid SA(){\n\t\tm=26;\n\t\tRep(i,1,n)rk[i]=s[i]-'a',tp[i]=i;\n\t\tRadixSort();\n\t\tfor(int k=1,t=0;t<n;k<<=1,m=t){\n\t\t\tt=0;\n\t\t\t_Rep(i,n,n-k+1)tp[++t]=i;\n\t\t\tRep(i,1,n)if(sa[i]>k)tp[++t]=sa[i]-k;\n\t\t\tRadixSort();\n\t\t\tswap(rk,tp);\n\t\t\trk[sa[1]]=t=1;\n\t\t\tRep(i,2,n)\n\t\t\t\trk[sa[i]]=tp[sa[i]]==tp[sa[i-1]]&&(sa[i]+k<=n&&sa[i-1]+k<=n&&tp[sa[i]+k]==tp[sa[i-1]+k])?t:++t;\n\t\t}\n\t\tRep(i,1,n)rk[sa[i]]=i;\n\t\tint k=0;\n\t\tRep(i,1,n){\n\t\t\tif(rk[i]==1)continue;\n\t\t\tif(k)k--;\n\t\t\tint j=sa[rk[i]-1];\n\t\t\twhile(i+k<=n&&j+k<=n&&s[i+k]==s[j+k])k++;\n\t\t\theight[rk[i]]=k;\t\n\t\t}\n\t\tlg[1]=0;\n\t\tRep(i,2,n)lg[i]=lg[i>>1]+1;\n\t\t_Rep(i,n,1){\n\t\t\tst[i][0]=height[i];\n\t\t\tRep(j,1,16){\n\t\t\t\tif(i+(1<<j-1)>n)break;\n\t\t\t\tst[i][j]=min(st[i][j-1],st[i+(1<<j-1)][j-1]);\t\n\t\t\t}\n\t\t}\n\t}\n\tint LCP(int x,int y){\n\t\tint l=rk[x],r=rk[y];\n\t\tif(l>r)swap(l,r);\n\t\tl++;\n\t\tint k=lg[r-l+1];\n\t\treturn min(st[l][k],st[r-(1<<k)+1][k]);\t\n\t}\n}sa1,sa2;\n\nint main()\n{\n\tread(t);\n\twhile(t--){\n\t\tmemset(l,0,sizeof(l));\n\t\tmemset(r,0,sizeof(r));\n\t\tsa1.init(),sa2.init();\n\t\tans=0;\n\t\tscanf(\"%s\",sa1.s+1);\n\t\tn=strlen(sa1.s+1);\n\t\tRep(i,1,n)sa2.s[n-i+1]=sa1.s[i];\n\t\tsa1.SA();\n\t\tsa2.SA();\n\t\tRep(len,1,n)\n\t\t\tfor(int j=1;(j+1)*len<=n;j++){\n\t\t\t\tint x=j*len,y=(j+1)*len;\n\t\t\t\tint lcp=sa1.LCP(x,y),lcs=sa2.LCP(n-x+1,n-y+1);\n\t\t\t\tlcp=min(lcp,len),lcs=min(lcs,len);\n\t\t\t\tif(lcp+lcs<=len)continue;\n\t\t\t\tl[y+lcp-(lcp+lcs-len)]++,l[y+lcp]--;\n\t\t\t\tr[x-lcs+1]++,r[x-lcs+1+(lcp+lcs-len)]--;\n\t\t\t}\n\t\tRep(i,1,n)l[i]+=l[i-1],r[i]+=r[i-1];\n\t\tRep(i,1,n)ans+=1ll*l[i-1]*r[i];\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1608121998,
        "uid": 97344,
        "name": "devout",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1117 \u3010[NOI2016]\u4f18\u79c0\u7684\u62c6\u5206\u3011"
    },
    {
        "content": "# /se/se/se \u2193\n\n\n[\u8d85\u8d85\u8d85\u8d85\u8d85\u8d85\u8d85\u8d85\u8d85\u723d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/dysyn1314/p/13336660.html)\n\n## \u9898\u89e3 LOJ2083 \u300cNOI2016\u300d\u4f18\u79c0\u7684\u62c6\u5206\n\n[\u9898\u76ee\u94fe\u63a5](https://loj.ac/problem/2083)\n\n> \u7ea6\u5b9a\uff1a$\\text{suf}(i)$\u8868\u793a\u4ee5$i$\u5f00\u5934\u7684\u540e\u7f00\uff08$s[i\\dots n]$\uff09\uff0c$\\text{pre}(i)$\u8868\u793a\u4ee5$i$\u7ed3\u5c3e\u7684\u524d\u7f00\uff08$s[1\\dots i]$\uff09\uff0c$\\text{lcp}(s_1,s_2)$\u8868\u793a\u4e24\u4e2a\u4e32\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c$\\text{lcs}(s_1,s_2)$\u8868\u793a\u4e24\u4e2a\u4e32\u7684\u6700\u957f\u516c\u5171\u540e\u7f00\u3002\n\n\u8bbe$f[i]$\u8868\u793a\u4ee5$i$\u4e3a\u7ed3\u5c3e\u7684\uff0c$\\text{AA}$\u5f0f\u7684\u5b50\u4e32\u6570\u91cf\u3002$g[i]$\u8868\u793a\u4ee5$i$\u4e3a\u5f00\u5934\u7684\uff0c$\\text{BB}$\u5f0f\u7684\u5b50\u4e32\u6570\u91cf\u3002\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e$\\text{AA}$\u4e0e$\\text{BB}$\u7684\u5206\u754c\u70b9\uff0c\u7136\u540e\u6c42\u51fa\u7b54\u6848\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u7b54\u6848\u7b49\u4e8e\uff1a\n$$\n\\sum_{i=1}^{n-1}f[i]\\cdot g[i+1]\n$$\n\u5bf9\u6bcf\u4e2a$i$\uff0c\u90fd\u6c42\u4e00\u904d$f$\u548c$g$\u3002\u5229\u7528\u54c8\u5e0c\u6216\u540e\u7f00\u6570\u7ec4\u5224\u65ad\u5b50\u4e32\u76f8\u7b49\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2)$\uff0c\u671f\u671b\u5f97$95$\u5206\u3002\n\n\u7ee7\u7eed\u4f18\u5316\u3002$f$, $g$\u662f\u7c7b\u4f3c\u7684\uff0c\u4ee5\u6c42$f$\u4e3a\u4f8b\u3002\u8003\u8651\u679a\u4e3e$\\text{A}$\u7684\u957f\u5ea6$\\text{len}$\u3002\u6211\u4eec\u628a$1\\dots n$\u4e2d\u6240\u6709\u662f$\\text{len}$\u7684\u500d\u6570\u7684\u70b9\uff0c\u6807\u4e3a\u201c\u5173\u952e\u70b9\u201d\u3002\u53d1\u73b0\u4e00\u4e2a$\\text{AA}$\u5f0f\u7684\u5b50\u4e32\uff0c\u5fc5\u5b9a\u8de8\u8fc7**\u6070\u597d**$2$\u4e2a\u5173\u952e\u70b9\uff01\n\n\u8003\u8651\u4e00\u7ec4\u76f8\u90bb\u7684\u5173\u952e\u70b9$i,j$ \uff08\u663e\u7136\uff0c$j=i+\\text{len}$\uff09\uff0c\u8ba1\u7b97\u8de8\u8fc7$i,j$\u7684$\\text{AA}$\u7684\u6570\u91cf\u3002\u8bbe$x=\\text{lcp}(\\text{suf}(i),\\text{suf}(j))$\uff0c$y=\\text{lcs}(\\text{pre}(i-1),\\text{pre}(j-1))$\u3002\u5982\u679c$x+y<\\text{len}$\uff0c\u663e\u7136\u8de8\u8fc7$i,j$\u7684$\\text{AA}$\u6570\u91cf\u4e3a$0$\u3002\u5426\u5219\uff0c\u4e2d\u95f4\u7684\u4e24\u6bb5$x$, $y$\u4f1a\u6709\u4e00\u4e2a\u4ea4\uff0c\u7b2c\u4e00\u4e2a$\\text{A}$\u7684\u7ec8\u70b9\uff0c\u53ea\u8981\u843d\u5728\u8fd9\u6bb5\u4ea4\u4e0a\u90fd\u662f\u53ef\u884c\u7684\uff0c\u6240\u4ee5\u4f1a\u6709$x+y-\\text{len}+1$\u4e2a\u8de8\u8fc7$i,j$\u7684$\\text{AA}$\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u7ed3\u5c3e\u4f4d\u7f6e\uff0c\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u6240\u4ee5\u5bf9\u8fd9\u6bb5\u533a\u95f4\u7684$f$\u503c$+1$\u5373\u53ef\uff0c\u53ef\u4ee5\u7528\u5dee\u5206\u5b9e\u73b0\u3002\n\n\u9884\u5904\u7406\u540e\u7f00\u6570\u7ec4\u540e\uff0c\u6c42$\\text{lcp}$, $\\text{lcs}$\u53ef\u4ee5$O(1)$\u5b9e\u73b0\u3002\u56e0\u4e3a\u5173\u952e\u70b9\u7684\u603b\u6570\u662f\u8c03\u548c\u7ea7\u6570\u7684\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log n)$\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n//problem:LOJ2083\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define pb push_back\n#define mk make_pair\n#define lob lower_bound\n#define upb upper_bound\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> pii;\n\ntemplate<typename T>inline void ckmax(T& x,T y){x=(y>x?y:x);}\ntemplate<typename T>inline void ckmin(T& x,T y){x=(y<x?y:x);}\n\nconst int MAXN=3e4;\nconst int LOG_MAXN=15;\nint n;\nchar s[MAXN+5];\nstruct SuffixArray{\n\tint n,m,x[MAXN+5],y[MAXN+5],c[MAXN+5],sa[MAXN+5];\n\tint rk[MAXN+5],ht[MAXN+5],st[MAXN+5][LOG_MAXN+5];\n\tint _log2[MAXN+5];\n\tvoid clear(){\n\t\tfor(int i=1;i<=max(n,(int)'z');++i)c[i]=0;\n\t\tfor(int i=1;i<=n;++i)y[i]=0;\n\t}\n\tvoid init(){\n\t\t_log2[0]=-1;\n\t\tfor(int i=1;i<=MAXN;++i)_log2[i]=_log2[i>>1]+1;\n\t}\n\tvoid build(char* s,int _n){\n\t\tn=_n;\n\t\tm='z';\n\t\tfor(int i=1;i<=n;++i)c[x[i]=s[i]]++;\n\t\tfor(int i=1;i<=m;++i)c[i]+=c[i-1];\n\t\tfor(int i=n;i>=1;--i)sa[c[x[i]]--]=i;\n\t\tfor(int k=1;k<=n;k<<=1){\n\t\t\tint num=0;\n\t\t\tfor(int i=n-k+1;i<=n;++i)y[++num]=i;\n\t\t\tfor(int i=1;i<=n;++i)if(sa[i]>k)y[++num]=sa[i]-k;\n\t\t\tfor(int i=1;i<=m;++i)c[i]=0;\n\t\t\tfor(int i=1;i<=n;++i)c[x[i]]++;\n\t\t\tfor(int i=1;i<=m;++i)c[i]+=c[i-1];\n\t\t\tfor(int i=n;i>=1;--i)sa[c[x[y[i]]]--]=y[i];\n\t\t\t\n\t\t\tfor(int i=1;i<=n;++i)swap(x[i],y[i]);\n\t\t\tx[sa[1]]=1;num=1;\n\t\t\tfor(int i=2;i<=n;++i)\n\t\t\t\tx[sa[i]]=((y[sa[i]]==y[sa[i-1]] && y[sa[i]+k]==y[sa[i-1]+k])?num:++num);\n\t\t\tif(num==n)break;\n\t\t\tm=num;\n\t\t}\n\t\tfor(int i=1;i<=n;++i)rk[sa[i]]=i;\n\t\t//for(int i=1;i<=n;++i)cout<<rk[i]<<\" \";cout<<endl;\n\t\tint k=0;\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tif(rk[i]==1)continue;\n\t\t\tif(k)--k;\n\t\t\tint j=sa[rk[i]-1];\n\t\t\twhile(i+k<=n && j+k<=n && s[i+k]==s[j+k])\n\t\t\t\t++k;\n\t\t\tht[rk[i]]=k;\n\t\t}\n\t\tfor(int i=1;i<=n;++i)st[i][0]=ht[i];\n\t\tfor(int j=1;j<=LOG_MAXN;++j){\n\t\t\tfor(int i=1;i+(1<<(j-1))<=n;++i){\n\t\t\t\tst[i][j]=min(st[i][j-1],st[i+(1<<(j-1))][j-1]);\n\t\t\t}\n\t\t}\n\t}\n\tint rmq(int l,int r){\n\t\tint k=_log2[r-l+1];\n\t\treturn min(st[l][k],st[r-(1<<k)+1][k]);\n\t}\n\tint get_lcp(int i,int j){\n\t\tif(i==j)\n\t\t\treturn n-i+1;\n\t\ti=rk[i]; j=rk[j];\n\t\tif(i>j)swap(i,j);\n\t\tassert(i<j);\n\t\treturn rmq(i+1,j);\n\t}\n\tSuffixArray(){}\n};\n\nSuffixArray SA,SA_rev;\n\nint f[MAXN+5],g[MAXN+5];\n\nvoid solve_case(){\n\tSA.clear();\n\tSA_rev.clear();\n\tcin>>(s+1); n=strlen(s+1);\n\tSA.build(s,n);\n\treverse(s+1,s+n+1);\n\tSA_rev.build(s,n);\n\t\n\tfor(int i=1;i<=n;++i)f[i]=g[i]=0;\n\t\n\tint maxlen=(n-2)/2;\n\tfor(int len=1;len<=maxlen;++len){\n\t\tfor(int k=1;(k+1)*len<=n;++k){\n\t\t\tint i=k*len;\n\t\t\tint j=(k+1)*len;\n\t\t\t\n\t\t\tint lcp=SA.get_lcp(i,j);\n\t\t\tint lcs=(i==1?0:SA_rev.get_lcp(n-(i-1)+1,n-(j-1)+1));\n\t\t\t\n\t\t\tif(!lcp)continue;\n\t\t\t\n\t\t\tint l=j-min(lcs,len-1)+len-1;\n\t\t\tint r=min(n,j+min(lcp,len)-1);\n\t\t\tif(l<=r){\n\t\t\t\tf[l]++;f[r+1]--;\n\t\t\t}\n\t\t\tl=max(1,i-min(lcs,len-1));\n\t\t\tr=i+min(lcp,len)-1-len+1;\n\t\t\tif(l<=r){\n\t\t\t\tg[l]++;g[r+1]--;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i)f[i]+=f[i-1],g[i]+=g[i-1];\n\tf[n+1]=g[n+1]=0;\n\tll ans=0;\n\tfor(int i=1;i<=n-2;++i)\n\t\tans+=(ll)f[i]*g[i+1];\n\tcout<<ans<<endl;\n}\nint main() {\n\tSA.init();\n\tSA_rev.init();\n\tint T;cin>>T;while(T--){\n\t\tsolve_case();\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1595065582,
        "uid": 100674,
        "name": "duyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1117 \u3010[NOI2016]\u4f18\u79c0\u7684\u62c6\u5206\u3011"
    },
    {
        "content": "\u663e\u7136\uff0cAABB \u662f\u7531\u4e24\u4e2a\u5f62\u5982 AA \u7684\u4e32\u62fc\u6210\u7684\u3002\u8bbe $a_i,b_i$ \u5206\u522b\u8868\u793a\u4ee5 $i$ \u4e3a\u7ed3\u5c3e\u548c\u8d77\u70b9\u7684 AA \u4e32\u7684\u4e2a\u6570\uff0c\u7b54\u6848\u663e\u7136\u662f $\\sum{a_i\\times b_{i+1}}$\u3002\u6240\u4ee5\u5173\u952e\u95ee\u9898\u5c31\u662f\u6c42\u51fa $a,b$ \u4e24\u4e2a\u6570\u7ec4\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u5355\u4e2a A \u7684\u957f\u5ea6 $l$\uff0c\u4ee5 $l$ \u4e3a\u95f4\u8ddd\u8bbe\u7f6e\u4e00\u4e9b\u5173\u952e\u70b9\u3002\u56e0\u4e3a\u5355\u4e2a A \u957f $l$\uff0c\u6240\u4ee5 AA \u4e32\u957f $2\\times l$\uff0c\u5fc5\u5b9a\u4f1a\u8de8\u8fc7\u4e24\u4e2a\u76f8\u90bb\u7684\u5173\u952e\u70b9\uff0c\u5047\u8bbe\u4e24\u4e2a\u76f8\u90bb\u5173\u952e\u70b9\u4e3a $i,j$\u3002\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa $lcp(i,j)$ \u548c $lcs(i-1,j-1)$\uff0c\u663e\u7136\u7528 SA \u6b63\u53cd\u4e2a\u8dd1\u4e00\u904d\u5373\u53ef\u3002\n\n\u5982\u679c\u8de8\u5173\u952e\u70b9 $i,j$ \u7684 AA \u4e32\u5b58\u5728\uff0c\u90a3\u5fc5\u987b $lcp+lcs\\geq l$\u3002\u5e76\u4e14 $lcp$ \u548c $lcs$ \u4f1a\u6709\u4e00\u6bb5\u4ea4\uff0c\u7b2c\u4e00\u4e2a A \u7684\u7ed3\u5c3e\u53ef\u4ee5\u53d6\u5728\u8fd9\u4e2a\u4ea4\u4e0a\u7684\u4efb\u610f\u4f4d\u7f6e\u3002\u6240\u4ee5\u8bf4\uff0c\u5bf9\u5e94\u4e2a\u6570\u52a0\u4e00\u7684\u662f\u4e00\u6bb5\u533a\u95f4\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5dee\u5206\u6c42\u51fa AA \u7684\u4e2a\u6570\u4e86\u3002\n\n\u4e0b\u9762\u662f AC \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n\nint Q,n,k,ans,a[30005],b[30005];\nchar str[30005];\nint sa1[30005],ht1[30005],rk1[30005],rk3[30005],mn1[30005][20];\nint sa2[30005],ht2[30005],rk2[30005],mn2[30005][20];\n\nbool cmp1(int i,int j)\n{\n\tif(rk1[i]!=rk1[j])\n\t\treturn rk1[i]<rk1[j];\n\tint ri=(i+k<=n ? rk1[i+k] : -1);\n\tint rj=(j+k<=n ? rk1[j+k] : -1);\n\treturn ri<rj;\n}\n\nvoid getsa1(int n,char *str)\n{\n\tfor(int i=1;i<=n;i++)\n\t\tsa1[i] = i, rk1[i] = str[i];\n\tfor(k=1;k<=n;k*=2)\n\t{\n\t\tsort(sa1+1,sa1+1+n,cmp1);\n\t\trk3[sa1[1]] = 1;\n\t\tfor(int i=2;i<=n;i++)\n\t\t\trk3[sa1[i]] = rk3[sa1[i-1]]+cmp1(sa1[i-1],sa1[i]);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\trk1[i] = rk3[i];\n\t}\n}\n\nvoid getht1(int n,char *str)\n{\n\tfor(int i=1;i<=n;i++)\n\t\trk1[sa1[i]] = i;\n\tint h=0;\n\tht1[1] = 0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint j=sa1[rk1[i]-1];\n\t\tif(h>0)\n\t\t\th--;\n\t\tfor(;j+h<=n&&i+h<=n;h++)\n\t\t\tif(str[j+h]!=str[i+h])\n\t\t\t\tbreak;\n\t\tht1[rk1[i]] = h;\n\t}\n}\n\nint getlcp1(int x,int y)\n{\n\tif(x==y)\n\t\treturn n-x+1;\n\tx = rk1[x], y = rk1[y];\n\tif(x>y)\n\t\tswap(x,y);\n\tint k=log2(y-x);\n\treturn min(mn1[x+1][k],mn1[y-(1<<k)+1][k]);\n}\n\nbool cmp2(int i,int j)\n{\n\tif(rk2[i]!=rk2[j])\n\t\treturn rk2[i]<rk2[j];\n\tint ri=(i+k<=n ? rk2[i+k] : -1);\n\tint rj=(j+k<=n ? rk2[j+k] : -1);\n\treturn ri<rj;\n}\n\nvoid getsa2(int n,char *str)\n{\n\tfor(int i=1;i<=n;i++)\n\t\tsa2[i] = i, rk2[i] = str[i];\n\tfor(k=1;k<=n;k*=2)\n\t{\n\t\tsort(sa2+1,sa2+1+n,cmp2);\n\t\trk3[sa2[1]] = 1;\n\t\tfor(int i=2;i<=n;i++)\n\t\t\trk3[sa2[i]] = rk3[sa2[i-1]]+cmp2(sa2[i-1],sa2[i]);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\trk2[i] = rk3[i];\n\t}\n}\n\nvoid getht2(int n,char *str)\n{\n\tfor(int i=1;i<=n;i++)\n\t\trk2[sa2[i]] = i;\n\tint h=0;\n\tht2[1] = 0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint j=sa2[rk2[i]-1];\n\t\tif(h>0)\n\t\t\th--;\n\t\tfor(;j+h<=n&&i+h<=n;h++)\n\t\t\tif(str[j+h]!=str[i+h])\n\t\t\t\tbreak;\n\t\tht2[rk2[i]] = h;\n\t}\n}\n\nint getlcp2(int x,int y)\n{\n\tif(x==y)\n\t\treturn n-x+1;\n\tx = rk2[x], y = rk2[y];\n\tif(x>y)\n\t\tswap(x,y);\n\tint k=log2(y-x);\n\treturn min(mn2[x+1][k],mn2[y-(1<<k)+1][k]);\n}\n\nsigned main()\n{\n\tcin>>Q;\n\twhile(Q--)\n\t{\n\t\tmemset(a,0,sizeof(a)), memset(b,0,sizeof(b));\n\t\tscanf(\"%s\",str+1);\n\t\tn = strlen(str+1);\n\t\tgetsa1(n,str), getht1(n,str);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tmn1[i][0] = ht1[i];\n\t\tfor(int j=1;j<20;j++)\n\t\t\tfor(int i=1;i+(1<<j-1)<=n;i++)\n\t\t\t\tmn1[i][j] = min(mn1[i][j-1],mn1[i+(1<<j-1)][j-1]);\n\t\treverse(str+1,str+1+n);\n\t\tgetsa2(n,str), getht2(n,str);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tmn2[i][0] = ht2[i];\n\t\tfor(int j=1;j<20;j++)\n\t\t\tfor(int i=1;i+(1<<j-1)<=n;i++)\n\t\t\t\tmn2[i][j] = min(mn2[i][j-1],mn2[i+(1<<j-1)][j-1]);\n\t\tfor(int l=1;l<=n;l++)\n\t\t\tfor(int i=l;i+l<=n;i+=l)\n\t\t\t{\n\t\t\t\tint j=i+l;\n\t\t\t\tint lcp=getlcp1(i,j),lcs=(i==1 ? 0 : getlcp2(n-(i-1)+1,n-(j-1)+1));\n\t\t\t\tif(lcp+lcs<l)\n\t\t\t\t\tcontinue;\n\t\t\t\tint s=lcp+lcs-l+1,lef=0,rht=0;\n\t\t\t\tlef = j-min(lcs,l-1)+l-1;\n\t\t\t\trht = min(j+min(lcp,l)-1,n);\n\t\t\t\tif(lef<=rht)\n\t\t\t\t\ta[lef]++, a[rht+1]--;\n\t\t\t\tlef = max(i-min(lcs,l-1),1ll);\n\t\t\t\trht = i+min(lcp,l)-1-l+1;\n\t\t\t\tif(lef<=rht)\n\t\t\t\t\tb[lef]++, b[rht+1]--;\n\t\t\t}\n\t\tans = 0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\ta[i] += a[i-1], b[i] += b[i-1];\n\t\tfor(int i=1;i<=n-2;i++)\n\t\t\tans += a[i]*b[i+1];\n\t\tcout<<ans<<endl;\n\t}\n\t\n\treturn 0;\n}\n```\n\n\u795d\u5927\u5bb6 AC \u6109\u5feb\uff01",
        "postTime": 1624982645,
        "uid": 123298,
        "name": "kouylty",
        "ccfLevel": 7,
        "title": "\u9898\u89e3\u3010[NOI2016]\u4f18\u79c0\u7684\u62c6\u5206\u3011"
    },
    {
        "content": "\u3000\u8fd9\u9053\u9898\u6709\u70b9\u96be\u60f3\u5230\u6b63\u89e3\u3002\n\n\u3000\u3000\u679a\u4e3e\u957f\u5ea6i\uff0c\u7136\u540e\u628a\u5b57\u7b26\u4e32\u62c6\u5206\u6210\u8bb8\u591a\u8fde\u7eed\u7684\u957f\u5ea6\u4e3ai\u7684\u5b50\u4e32\uff0c\u901a\u8fc7\u6bd4\u8f83LCS\u4e0eLCP\u5f97\u51fa\u4e00\u6bb5\u7684\u7b54\u6848\uff0c\u8fd9\u91cc\u53d1\u73b0\u7b54\u6848\u662f\u533a\u95f4\u52a0\u6cd5\uff0c\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u5f88\u53ef\u80fd\u8d85\u65f6\uff0c\u8fd9\u91cc\u7528\u7684\u662f\u5dee\u5206\uff0c\u770b\u7a0b\u5e8f\u5f88\u597d\u7406\u89e3\u3002\u8fd8\u6709\u4e00\u4e2a\u5730\u65b9\u8981\u6ce8\u610f\uff1a\u66f4\u65b0\u7b54\u6848\u65f6\u53ef\u80fd\u4f1a\u91cd\u590d\u8ba1\u7b97\uff0c\u53ea\u9700\u8981\u786e\u4fdd\u6bcf\u6b21\u679a\u4e3e\u90fd\u53ea\u5728\u4e00\u6bb5\u9650\u5b9a\u7684\u533a\u95f4\u66f4\u65b0\uff0c\u5c31\u4e0d\u4f1a\u51fa\u73b0\u91cd\u53e0\u3002\n```cpp\n  1 #include <iostream>\n  2 #include <cstring>\n  3 #include <cstdio>\n  4 using namespace std;\n  5 const int N=120010;\n  6 struct SAM{\n  7     char s[N];\n  8     int fa[N],pos[N],sa[N],rank[N];\n  9     int son[N][26],end[N],rht[N],lcp[N];\n 10     int ch[N][26],len[N],id[N],tot;\n 11     int od[N],wv[N],lst,cnt;\n 12     int mm[N],Min[N][25];\n 13     void Init(){\n 14         memset(s,0,sizeof(s)); \n 15         memset(ch,0,sizeof(ch));\n 16         memset(end,0,sizeof(end));\n 17         memset(son,0,sizeof(son));\n 18         memset(pos,0,sizeof(pos));\n 19         lst=cnt=1;tot=0;\n 20     }\n 21 \n 22     void Insert(int c){\n 23         int p=lst,np=lst=++cnt;end[lst]=1;\n 24         id[len[np]=len[p]+1]=np;rht[np]=1;\n 25         while(p&&!ch[p][c])ch[p][c]=np,p=fa[p];\n 26         if(!p)fa[np]=1;\n 27         else{\n 28             int q=ch[p][c],nq;\n 29             if(len[q]==len[p]+1)fa[np]=q;\n 30             else{\n 31                 len[nq=++cnt]=len[p]+1;\n 32                 fa[nq]=fa[q];fa[q]=fa[np]=nq;\n 33                 memcpy(ch[nq],ch[q],sizeof(ch[q]));\n 34                 while(ch[p][c]==q)ch[p][c]=nq,p=fa[p];\n 35             }\n 36         }\n 37     }\n 38 \n 39     void Get_Right(){\n 40         for(int i=1;i<=cnt;i++)wv[len[i]]++;\n 41         for(int i=1;i<=cnt;i++)wv[i]+=wv[i-1];\n 42         for(int i=1;i<=cnt;i++)od[wv[len[i]]--]=i;\n 43         for(int i=cnt;i>=1;i--)rht[fa[od[i]]]+=rht[od[i]];\n 44     }\n 45 \n 46     void Build_Tree(){\n 47         int l=strlen(s+1);\n 48         for(int i=l;i>=1;i--)Insert(s[i]-'a');\n 49         for(int i=l;i>=1;i--)\n 50             for(int x=id[i],p=l+1;x&&!pos[x];x=fa[x])\n 51                 p-=len[x]-len[fa[x]],pos[x]=p;\n 52         for(int x=2;x<=cnt;x++)son[fa[x]][s[pos[x]]-'a']=x;    \n 53     }\n 54 \n 55     void DFS(int x,int l){\n 56         if(end[x])sa[rank[l-len[x]+1]=++tot]=l-len[x]+1;\n 57         for(int i=0;i<26;i++)if(son[x][i])DFS(son[x][i],l);\n 58     }\n 59 \n 60     void Build_SA(){\n 61         int l=strlen(s+1),k=0;DFS(1,l);\n 62         for(int i=1,j;i<=l;lcp[rank[i++]]=k)\n 63             for(k?k--:k,j=sa[rank[i]-1];s[i+k]==s[j+k];k++);\n 64         mm[0]=-1;\n 65         for(int i=1;i<=l;i++){\n 66             mm[i]=(i&(i-1))?mm[i-1]:mm[i-1]+1;\n 67             Min[i][0]=lcp[i];\n 68         }\n 69         for(int k=1;k<=mm[l];k++)\n 70             for(int i=1;i+(1<<k-1)<=l;i++)\n 71                 Min[i][k]=min(Min[i][k-1],Min[i+(1<<(k-1))][k-1]);\n 72     }\n 73     \n 74     int LCP(int x,int y){\n 75         if(x>y)swap(x,y);x+=1;int k=mm[y-x+1];\n 76         int ret=min(Min[x][k],Min[y-(1<<k)+1][k]);\n 77         return ret; \n 78     }\n 79 }A,B;\n 80 \n 81 int ln,T,f[N],g[N];char s[N];\n 82 int Get_LCP(int x,int y){return A.LCP(A.rank[x],A.rank[y]);}\n 83 int Get_LCS(int x,int y){return B.LCP(B.rank[ln-x+1],B.rank[ln-y+1]);} \n 84 \n 85 int main(){\n 86     freopen(\"excellent.in\",\"r\",stdin);\n 87     freopen(\"excellent.out\",\"w\",stdout);\n 88     scanf(\"%d\",&T);\n 89     while(T--){\n 90         A.Init();B.Init();\n 91         scanf(\"%s\",s+1);ln=strlen(s+1);\n 92         for(int i=1;i<=ln;i++){A.s[i]=s[i];B.s[i]=s[ln-i+1];}\n 93         A.Build_Tree();A.Build_SA();\n 94         B.Build_Tree();B.Build_SA();\n 95         for(int i=1;i<=ln;i++)f[i]=g[i]=0;\n 96         \n 97         for(int i=1,l,r,x;i+i<=ln;i++)\n 98             for(int j=i;(x=j+i)<=ln;j+=i)if(s[j]==s[x]){\n 99                 l=x-Get_LCS(j,x)+1;r=x+Get_LCP(j,x)-1;\n100                 l=max(l+i-1,x);r=min(r,x+i-1);\n101                 if(l>r)continue;\n102                 f[l]++,f[r+1]--;\n103                    g[l-i-i+1]++,g[r+1-i-i+1]--;\n104             }\n105         long long ans=0;\n106         for(int i=1;i<=ln;i++)f[i]+=f[i-1],g[i]+=g[i-1];\n107         for(int i=1;i<ln;i++)ans+=f[i]*g[i+1];\n108         printf(\"%lld\\n\",ans);\n109     }\n110     return 0;\n111 }\n \n\n\u3000\u3000\u770b\u5728\u6211\u8fd9\u4e48\u52aa\u529b\u7684\u4efd\u4e0a\uff0c\u7ba1\u7406\u5458\u9ebb\u70e6\u901a\u8fc7\u5427\u3002",
        "postTime": 1612436106,
        "uid": 316623,
        "name": "2019jd12",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1117 \u3010[NOI2016] \u4f18\u79c0\u7684\u62c6\u5206\u3011"
    },
    {
        "content": "[\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1117)\n\n\u795e\u4ed9 SA %%%\n\n\u8003\u8651\u8bbe $a_i$ \u4e3a\u4ee5\u4f4d\u7f6e $i$ \u5f00\u5934\u7684 AA \u578b\u5b57\u7b26\u4e32\u7684\u4e2a\u6570\uff0c\u518d\u8bbe $b_i$ \u4e3a\u4ee5\u4f4d\u7f6e $i$ \u7ed3\u5c3e\u7684 AA \u578b\u5b57\u7b26\u4e32\u7684\u4e2a\u6570\uff0c\u90a3\u4e48\u7b54\u6848\u5e94\u4e3a $\\sum\\limits_{i=2}^{n}a_ib_{i-1}$\n\n\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\u600e\u6837\u6c42 $a_i$ \u548c $b_i$\u3002\u6211\u4eec\u8003\u8651\u679a\u4e3e AA \u578b\u5b57\u7b26\u4e32\u4e2d $A$ \u7684\u957f\u5ea6 $l$\u3002\u6bcf\u9694 $l$ \u683c\u653e\u4e00\u4e2a\u5173\u952e\u70b9\uff0c\u5373\uff0c\u5728\u4f4d\u7f6e $l,2l,3l,\\dots$ \u653e\u5173\u952e\u70b9\u3002\u663e\u7136\uff0c\u4e00\u4e2a\u957f\u5ea6\u4e3a $2l$ \u7684 AA \u578b\u5b57\u7b26\u4e32\u5e94\u5f53\u7ecf\u8fc7\u6070\u597d\u4e24\u4e2a\u5173\u952e\u70b9\u3002\n\n\u8003\u8651\u76f8\u90bb\u7684\u4e24\u4e2a\u5173\u952e\u70b9 $i,j$\uff0c\u663e\u7136 $j=i+l$\uff0c\u6211\u4eec\u8ba1\u7b97\u7ecf\u8fc7\u8fd9\u4e24\u4e2a\u5173\u952e\u70b9\u7684 AA \u578b\u5b57\u7b26\u4e32\u7684\u4e2a\u6570\u3002\u8bbe $LCP$ \u4e3a\u4ee5 $i,j$ \u5f00\u5934\u7684\u540e\u7f00\u7684 LCP \u7684\u957f\u5ea6\uff0c$LCS$ \u4e3a\u4ee5 $i,j$ \u5f00\u5934\u7684\u524d\u7f00\u7684 LCS \u7684\u957f\u5ea6\u3002\u5982\u679c $LCP+LCS>l$ \u5c31\u6709\u5b57\u7b26\u4e32\u7ecf\u8fc7\u5b83\u4eec\uff0c\u4e2a\u6570\u4e3a $LCP+LCS-l$\uff0c\u5426\u5219\u6ca1\u6709\u5b57\u7b26\u4e32\u3002\u5dee\u5206\u4e00\u4e0b\u5373\u53ef\u6c42\u5f97 $a,b$\u3002\u81f3\u4e8e\u600e\u6837\u6c42 $LCP$ \u548c $LCS$\uff0c\u6b63\u53cd\u5404\u540e\u7f00\u6570\u7ec4\u4e00\u904d\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n+\\dfrac{n}{2}+\\dfrac{n}{3}+\\dots)=\\mathcal O(n\\log n)$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fz(i,a,b) for(int i=a;i<=b;i++)\n#define fd(i,a,b) for(int i=a;i>=b;i--)\n#define ffe(it,v) for(__typeof(v.begin()) it=v.begin();it!=v.end();it++)\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntemplate<typename T> void read(T &x){\n\tx=0;char c=getchar();T neg=1;\n\twhile(!isdigit(c)){if(c=='-') neg=-1;c=getchar();}\n\twhile(isdigit(c)) x=x*10+c-'0',c=getchar();\n\tx*=neg;\n}\nconst int MAXN=3e4;\nconst int LOG_N=15;\nint n;\nstruct solver{\n\tchar s[MAXN+5];\n\tpii x[MAXN+5];\n\tint buc[MAXN+5],rk[MAXN+5],sa[MAXN+5],seq[MAXN+5],ht[MAXN+5];\n\tint st[MAXN+5][LOG_N+2];\n\tvoid init(){\n\t\tmemset(s,0,sizeof(s));memset(buc,0,sizeof(buc));memset(sa,0,sizeof(sa));\n\t\tmemset(seq,0,sizeof(seq));memset(ht,0,sizeof(ht));memset(st,0,sizeof(st));\n\t\tfill(x,x+MAXN+1,mp(0,0));\n\t}\n\tvoid getsa(){\n\t\tint vmax=122,gr=0;\n\t\tfor(int i=1;i<=n;i++) buc[s[i]]++;\n\t\tfor(int i=1;i<=vmax;i++) buc[i]+=buc[i-1];\n\t\tfor(int i=n;i;i--) sa[buc[s[i]]--]=i;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(s[sa[i]]!=s[sa[i-1]]) gr++;\n\t\t\trk[sa[i]]=gr;\n\t\t} vmax=gr;\n\t\tfor(int k=1;k<=n;k<<=1){\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tif(i+k<=n) x[i]=mp(rk[i],rk[i+k]);\n\t\t\t\telse x[i]=mp(rk[i],0);\n\t\t\t} memset(buc,0,sizeof(buc));int num=0;\n\t\t\tfor(int i=n-k+1;i<=n;i++) seq[++num]=i;\n\t\t\tfor(int i=1;i<=n;i++) if(sa[i]>k) seq[++num]=sa[i]-k;\n\t\t\tfor(int i=1;i<=n;i++) buc[x[i].fi]++;\n\t\t\tfor(int i=1;i<=vmax;i++) buc[i]+=buc[i-1];\n\t\t\tfor(int i=n;i;i--) sa[buc[x[seq[i]].fi]--]=seq[i];\n\t\t\tgr=0;for(int i=1;i<=n;i++){\n\t\t\t\tif(x[sa[i]]!=x[sa[i-1]]) gr++;\n\t\t\t\trk[sa[i]]=gr;\n\t\t\t} vmax=gr;if(vmax==n) break;\n\t\t}\n\t}\n\tvoid getht(){\n\t\tint k=1;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(rk[i]==1) continue;\n\t\t\tif(k) k--;\n\t\t\tint j=sa[rk[i]-1];\n\t\t\twhile(i+k<=n&&j+k<=n&&s[i+k]==s[j+k]) k++;\n\t\t\tht[rk[i]]=k;\n\t\t}\n\t}\n\tvoid buildst(){\n\t\tfor(int i=2;i<=n;i++) st[i][0]=ht[i];\n\t\tfor(int i=1;i<=LOG_N;i++) for(int j=2;j+(1<<i)-1<=n;j++)\n\t\t\tst[j][i]=min(st[j][i-1],st[j+(1<<(i-1))][i-1]);\n\t}\n\tint query(int x,int y){\n\t\tx=rk[x];y=rk[y];if(x>y) swap(x,y);x++;\n\t\tint k=log2(y-x+1);return min(st[x][k],st[y-(1<<k)+1][k]);\n\t}\n} s[2];\nint da[MAXN+5],db[MAXN+5],a[MAXN+5],b[MAXN+5];\nvoid init(){\n\tmemset(da,0,sizeof(da));memset(db,0,sizeof(db));\n\tmemset(a,0,sizeof(a));memset(b,0,sizeof(b));\n} \nvoid solve(){\n\tscanf(\"%s\",s[0].s+1);n=strlen(s[0].s+1);\n\tfor(int i=1;i<=n;i++) s[1].s[n-i+1]=s[0].s[i];\n\tfor(int i=0;i<2;i++) s[i].getsa(),s[i].getht(),s[i].buildst();\n\tfor(int l=1;l<=n;l++){\n\t\tfor(int j=l;j+l<=n;j+=l){\n\t\t\tint lcp=s[0].query(j,j+l);\n\t\t\tint lcs=s[1].query(n-j+1,n-j-l+1);\n\t\t\tlcs=min(lcs,l);lcp=min(lcp,l); \n//\t\t\tprintf(\"%d %d %d %d\\n\",l,j,lcp,lcs);\n\t\t\tif(lcp+lcs-1>=l){\n\t\t\t\tint len=lcp+lcs-l;\n\t\t\t\tda[j-lcs+1]++;da[j-lcs+len+1]--;\n\t\t\t\tdb[j-lcs+2*l]++;db[j-lcs+len+2*l]--;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) a[i]=a[i-1]+da[i],b[i]=b[i-1]+db[i];\n//\tfor(int i=1;i<=n;i++) printf(\"%d%c\",a[i],(i==n)?'\\n':' ');\n//\tfor(int i=1;i<=n;i++) printf(\"%d%c\",b[i],(i==n)?'\\n':' ');\n\tll ans=0;for(int i=1;i<n;i++) ans+=1ll*b[i]*a[i+1];\n\tprintf(\"%lld\\n\",ans);\n\ts[0].init();s[1].init();init();\n}\nint main(){\n\tint qu;scanf(\"%d\",&qu);\n\twhile(qu--) solve();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1611972215,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1117 \u3010[NOI2016] \u4f18\u79c0\u7684\u62c6\u5206\u3011"
    },
    {
        "content": "**\uff08\u89e3\u9898\u601d\u8def\uff1a\u540e\u7f00\u6570\u7ec4+\u5dee\u5206\uff09**\n\n\n\u5982\u679c\u80fd\u591f\u9884\u5904\u7406\u51fa\n\nsuf[i] \u4ee5i\u7ed3\u5c3e\u7684\u5f62\u5f0f\u4e3aAA\u7684\u5b50\u4e32\u4e2a\u6570\n\npre[i] \u4ee5i\u5f00\u5934\u7684\u5f62\u5f0f\u4e3aAA\u7684\u5b50\u4e32\u4e2a\u6570\n\nans= \u2211 suf[i]*pre[i+1]\n\n\u8fd9\u4e24\u4e2a\u6570\u7ec4\u7684\u6c42\u6cd5\uff0c\u7c7b\u4f3cbzoj 2119\u30013238\n\n\u679a\u4e3e|A|\u7684\u957f\u5ea6len\uff0c\u5c06\u5e8f\u5217\u6bcflen\u4e2a\u5206\u4e00\u5757\uff0c\u53d6\u6bcf\u5757\u5185\u7b2c\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a\u5173\u952e\u70b9\n\n\u6bcf\u4e2a\u5408\u6cd5\u7684AA\u6070\u597d\u5360\u636e\u4e24\u4e2a\u5173\u952e\u70b9\n\n\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5173\u952e\u70b9i\uff0c\u53d6j=i+len\n\n\u8ba1\u7b97[i,n]\u548c[j,n]\u7684lcp\uff0c[1,i]\u548c[1,j]\u7684lcs\uff08\u901a\u8fc7\u539f\u4e32\u548c\u53cd\u4e32\u7684\u540e\u7f00\u6570\u7ec4\uff09\n\n\u5047\u8bbe\u4ee5i\u4e3a\u57fa\u51c6\uff0clcp\u5411\u540e\u5339\u914d\u7684\u6700\u8fdc\u70b9\u4e3ar\uff0clcs\u5411\u524d\u5339\u914d\u7684\u6700\u8fdc\u70b9\u4e3al\n\n\u4ee4cnt=r-l+1 - len + 1\n\n\u90a3\u4e48AA\u7684\u5f00\u5934\u53ef\u4ee5\u662f[l\uff0cr]\u5185\u4efb\u610f\u957f\u5ea6\u4e3alen\u7684\u5b50\u4e32,\u8fd9\u79cd\u5b50\u4e32\u6709cnt\u4e2a\uff0c\u5373pre[l,l+cnt-1] \u90fd\u4f1a\u52a0\u4e00\u4e2a\u8d21\u732e\n\n\u5047\u8bbe\u4ee5j\u4e3a\u57fa\u51c6\uff0clcp\u5411\u540e\u5339\u914d\u7684\u6700\u8fdc\u70b9\u4e3ar\uff0clcs\u5411\u524d\u5339\u914d\u7684\u6700\u8fdc\u70b9\u4e3al\n\n\u4ee4cnt=r-l+1 - len + 1\n\n\u90a3\u4e48AA\u7684\u7ed3\u5c3e\u53ef\u4ee5\u662f[l\uff0cr]\u5185\u4efb\u610f\u957f\u5ea6\u4e3alen\u7684\u5b50\u4e32,\u8fd9\u79cd\u5b50\u4e32\u6709cnt\u4e2a\uff0c\u5373pre[r,r-cnt+1] \u90fd\u4f1a\u52a0\u4e00\u4e2a\u8d21\u732e\n\n\u5229\u7528\u5dee\u5206\u7d2f\u8ba1\u8d21\u732e\n\n\u6ce8\u610f\uff1a\n\n\u7528\u540e\u7f00\u6570\u7ec4\uff0c\u6709\u591a\u7ec4\u6570\u636e\u65f6\uff0c\u9664\u4e86\u7edf\u8ba1\u6570\u91cf\u7528\u7684v\u6570\u7ec4\u8981\u6e05\u96f6\uff0crank\u6570\u7ec4\u4e5f\u8981\u6e05\u96f6\n\n\n\u540e\u9762+k \u4f7frank \u4f7f\u7528\u8d85\u8fc7n\u7684rank\uff0c\u8d85\u8fc7n\u7684rank\u5b58\u50a8\u7684\u65f6\u4e0a\u4e00\u7ec4\u6570\u636e\u7684rank\n\n\n\nAC\u4ee3\u7801\uff1a\n```\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n\n#define N 30002\n\nusing namespace std;\n\nint n;\nchar s[N];\n\nint pre[N],suf[N];\n\nint Log[N];\n\nstruct SA\n{\n    int a[N];\n    int sa[2][N],rk[2][N];\n    int v[N];\n    int p,q;\n    int k;\n    int height[N];\n    int st[N][15];\n\n    void mul(int *sa,int *rk,int *SA,int *RK)\n    {\n        for(int i=1;i<=n;++i) v[rk[sa[i]]]=i;\n        for(int i=n;i;--i) if(sa[i]>k) SA[v[rk[sa[i]-k]]--]=sa[i]-k;\n        for(int i=n-k+1;i<=n;++i) SA[v[rk[i]]--]=i;\n        for(int i=1;i<=n;++i) RK[SA[i]]=RK[SA[i-1]]+(rk[SA[i]]!=rk[SA[i-1]] || rk[SA[i]+k]!=rk[SA[i-1]+k]);\n    }\n\n    void pre_sa()\n    {\n        p=0; q=1;\n        memset(v,0,sizeof(v));\n        memset(rk,0,sizeof(rk));\n        for(int i=1;i<=n;++i) v[a[i]]++;\n        for(int i=1;i<=26;++i) v[i]+=v[i-1];\n        for(int i=1;i<=n;++i) sa[p][v[a[i]]--]=i;\n        for(int i=1;i<=n;++i) rk[p][sa[p][i]]=rk[p][sa[p][i-1]]+(a[sa[p][i]]!=a[sa[p][i-1]]);\n        for(k=1;k<n;k<<=1,swap(p,q)) mul(sa[p],rk[p],sa[q],rk[q]);\n    }\n\n    void pre_height()\n    {\n        int j,k=0;\n        for(int i=1;i<=n;++i)\n        {\n            j=sa[p][rk[p][i]-1];\n            while(a[i+k]==a[j+k]) k++;\n            height[rk[p][i]]=k;\n            if(k) k--;\n        }\n    }    \n\n    void pre_st()\n    {\n        memset(st,0,sizeof(st));\n        for(int i=2;i<=n;++i) st[i][0]=height[i];\n        for(int j=1,k=1;j<=14;++j,k<<=1)\n            for(int i=2;i+k*2-1<=n;++i)\n                st[i][j]=min(st[i][j-1],st[i+k][j-1]);\n    }\n\n    void pre()\n    {\n        pre_sa();\n        pre_height();\n        pre_st();\n    }\n\n    int get(int i,int j)\n    {\n        i=rk[p][i]; j=rk[p][j];\n        if(i>j) swap(i,j);\n        i++;\n        int l=Log[j-i+1];\n        return min(st[i][l],st[j-(1<<l)+1][l]);    \n    }    \n};\nSA SA1,SA2;\n\nvoid solve()\n{\n    memset(pre,0,sizeof(pre));\n    memset(suf,0,sizeof(suf));\n    int j;\n    int lcp,lcs;\n    int cnt=0;\n    for(int len=1;len<n;++len)\n    {\n         for(int i=len;i+len<=n;i+=len)\n        {\n            j=i+len;\n            lcp=SA1.get(i,j);\n            if(lcp>len) lcp=len;\n            lcs=SA2.get(n-i+1,n-j+1);\n            if(lcs>len) lcs=len;\n            if(lcp+lcs-1>=len)\n            {\n                suf[j+len-lcs]++;\n                suf[j+lcp]--;\n                pre[i-lcs+1]++;\n                pre[i+lcp-len+1]--;\n            }\n        }\n    }\n    for(int i=2;i<=n;++i) pre[i]+=pre[i-1],suf[i]+=suf[i-1];\n    long long ans=0;\n    for(int i=2;i<=n-2;++i) ans+=1LL*suf[i]*pre[i+1];\n    cout<<ans<<'\\n';\n}\n\nint main()\n{\n    //freopen(\"testdata.in\",\"r\",stdin); \n    //freopen(\"__.txt\",\"w\",stdout);\n    int T;\n    scanf(\"%d\",&T);\n    for(int i=2;i<N;++i) Log[i]=Log[i>>1]+1;\n    while(T--)\n    {\n        scanf(\"%s\",s+1);\n        n=strlen(s+1);\n        for(int i=1;i<=n;++i) SA1.a[i]=s[i]-'a'+1;\n        memcpy(SA2.a,SA1.a,sizeof(SA2.a));\n        reverse(SA2.a+1,SA2.a+n+1);\n        SA1.a[n+1]=SA2.a[n+1]=0;\n        SA1.pre();\n        SA2.pre();\n        solve();\n    }\n}\n```\n",
        "postTime": 1560251402,
        "uid": 111289,
        "name": "Ryan_",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1117 \u3010[NOI2016]\u4f18\u79c0\u7684\u62c6\u5206 \u3011"
    },
    {
        "content": "\u535a\u5ba2\u5730\u5740\uff1a<http://www.cnblogs.com/hzoi-mafia/p/7587221.html>\n\n\n\u663e\u7136\u6211\u4eec\u4e0d\u7528\u5904\u7406\u4ec0\u4e48AABB\uff0c\u53ea\u9700\u8981\u53bb\u5904\u7406\u6240\u6709AA\u5f62\u5f0f\uff0c\u518d\u53bb\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\n\n\n\u8bbepre[i]\u8868\u793a\u4ee5i\u8fd9\u4e2a\u5b57\u7b26\u5f00\u5934\u7684AA\u578b\u5b50\u4e32\u7684\u6570\u76ee\n\n\n\u8bbenxt[i]\u8868\u793a\u4ee5i\u8fd9\u4e2a\u5b57\u7b26\u7ed3\u5c3e\u7684AA\u578b\u5b50\u4e32\u7684\u6570\u76ee\n\n\n\u5219\u7b54\u6848ans=\u2211\n\nn\u22121\ni=1\npre[i+1]\u00d7nxt[i]\n\n\n\u6240\u4ee5\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u6c42AA\u578b\u7684\u5b50\u4e32\n\n\n\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u627e\u7684AA\u578b\u5b50\u4e32\u957f\u5ea6\u7684\u4e00\u534a\uff0c\u53bb\u5224\u65adlcp\u4e0elcs\n\n\n\u679a\u4e3ei=k\u2217len,j=i+len\n\n\n\u8bbex=lcp(suffix(i),suffix(j)),y=lcs(pre(i\u22121),pre(j\u22121))\n\n\n\u82e5x+y\u2a7elen,\u90a3\u4e48\u6211\u4eec\u5c31\u627e\u5230\u4e86x+y\u2212len+1\u4e2a\u957f\u5ea6\u4e3a2\u00d7len\u7684AA\u4e32\n\n\n\u5dee\u5206\u4e00\u4e0b\u5c31GG\u4e86\n\n\n###c++\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\n#define mem(x) memset((x),0,sizeof((x)))\nstruct SA{\n    char s[60005];\n    int n,m;\n    int t1[60005],t2[60005],t3[60005],buc[60005];\n    int sa[60005],Rank[60005],height[60005],mn[60005][20];\n    SA(){}\n    inline void clear(){\n        m=130;\n        mem(t1),mem(t2),mem(t3),mem(buc),mem(sa),mem(Rank),mem(height),mem(mn);\n    }\n    inline void init(){\n        scanf(\"%s\",s+1);\n        n=strlen(s+1);\n    }\n    inline void Suffix(){\n        int i,j,k(0),p(0),*x(t1),*y(t2),*t;\n        for(i=0;i<=m;++i)buc[i]=0;\n        for(i=1;i<=n;++i)++buc[x[i]=s[i]];\n        for(i=1;i<=m;++i)buc[i]+=buc[i-1];\n        for(i=n;i>=1;--i)sa[buc[x[i]]--]=i;\n        for(j=1;p<n;j<<=1,m=p){\n            for(p=0,i=n-j+1;i<=n;++i)y[++p]=i;\n            for(i=1;i<=n;++i)\n                if(sa[i]>j)\n                    y[++p]=sa[i]-j;\n            for(i=0;i<=m;++i)buc[i]=0;\n            for(i=1;i<=n;++i)t3[i]=x[y[i]];\n            for(i=1;i<=n;++i)++buc[t3[i]];\n            for(i=1;i<=m;++i)buc[i]+=buc[i-1];\n            for(i=n;i>=1;--i)sa[buc[t3[i]]--]=y[i];\n            for(t=x,x=y,y=t,x[sa[1]]=1,p=1,i=2;i<=n;++i)\n                x[sa[i]]=((y[sa[i]]==y[sa[i-1]])&&(y[sa[i]+j]==y[sa[i-1]+j]))?p:++p;\n        }\n        for(i=1;i<=n;++i)Rank[sa[i]]=i;\n        for(i=1;i<=n;height[Rank[i++]]=k)\n            for(k?--k:0,j=sa[Rank[i]-1];s[i+k]==s[j+k];++k);\n    }\n    inline void ST(){\n        for(int i=1;i<=n;++i)mn[i][0]=height[i];\n        for(int i=1;(1<<i)<=n;++i)\n            for(int j=1;j+(1<<i)-1<=n;++j)\n                mn[j][i]=min(mn[j][i-1],mn[j+(1<<i-1)][i-1]);\n    }\n    inline int lcp(int x,int y){\n        if(y>n)return 0;\n        x=Rank[x],y=Rank[y];\n        if(x>y)swap(x,y);\n        ++x;\n        int k(0),len(y-x+1);\n        while((1<<k)<=len)++k;\n        --k;\n        return min(mn[x][k],mn[y-(1<<k)+1][k]);\n    }\n    inline void work(){\n        Suffix();\n        ST();\n    }\n}a,b;\ninline void inv(){\n    b.n=a.n;\n    for(int i=1;i<=a.n;++i)\n        b.s[i]=a.s[a.n-i+1];\n}\ntypedef long long L;\nL ans;\nL cnt1[30005],cnt2[30005];\ninline void doit(){\n    ans=0;\n    mem(cnt1),mem(cnt2);\n    int edge(a.n>>1);\n    for(int l=1;l<=edge;++l)\n        for(int i=l,j=l<<1;j<=a.n;i+=l,j+=l){\n            int x(min(a.lcp(i,j),l));\n            int y(min(b.lcp(a.n-(i-1)+1,a.n-(j-1)+1),l-1));\n            int tmp(x+y-l+1);\n            if(x+y>=l){\n                ++cnt1[i-y];--cnt1[i-y+tmp];\n                ++cnt2[j+x-tmp];--cnt2[j+x];\n            }\n        }\n    for(int i=1;i<=a.n;++i)\n        cnt1[i]+=cnt1[i-1],cnt2[i]+=cnt2[i-1];\n    for(int i=1;i<=a.n;++i)\n        ans+=cnt1[i+1]*cnt2[i];\n    printf(\"%lld\\n\",ans);\n}\nint main(){\n    int T;\n    scanf(\"%d\",&T);\n    while(T--){\n        a.clear(),b.clear();\n        a.init();\n        a.work();\n        inv();\n        b.work();\n        doit();\n    }\n}\n```\n###",
        "postTime": 1506432684,
        "uid": 51617,
        "name": "hzoi_mafia",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1117 \u3010\u4f18\u79c0\u7684\u62c6\u5206 \u3011"
    },
    {
        "content": "**\u6211\u4eec\u8bbef[i]f[i]\u4e3a\u4ee5ii\u7ed3\u5c3e\u7684AAAA\u4e32\u4e2a\u6570\uff0cg[i]g[i]\u4e3a\u4ee5ii\u5f00\u5934\u7684AAAA\u4e32\u4e2a\u6570\n\u5219 \n**ans=\u2211i=1nf[i]\u2217g[i+1]**\n\n**ans=\u2211i=1nf[i]\u2217g[i+1]**\n\n**\u8003\u8651\u600e\u6837\u6c42ff\u548cgg\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3eAAAA\u4e32\u7684\u4e00\u534alenlen\uff0c\u7136\u540e\u6bcf\u9694lenlen\u8bbe\u4e00\u4e2a\u65ad\u70b9\uff0c\u90a3\u4e48\u4e00\u4e2a\u957f\u5ea6\u4e3alen2*len\u7684AAAA\u5fc5\u8fc7\u4e24\u4e2a\u65ad\u70b9\u3002\u8fd9\u4e24\u4e2a\u65ad\u70b9ii\uff0cjj\u7684\u524d\u7f00\u7684lsplsp\u548c\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u7684\u540e\u7f00\u7684lcplcp\u52a0\u8d77\u6765\u4e3alenlen\uff0c\u5219\u5b58\u5728\u4e00\u4e2a\u8fd9\u6837\u7684AAAA\u4e32\uff1b\u5982\u679c\u5927\u4e8e\uff0c\u5219\u5b58\u5728\u591a\u4e2a\u8fd9\u6837\u7684\u4e32\uff0c\u800c\u6bcf\u4e2a\u4e32\u53ef\u4ee5\u53d6lsplsp\u548clcplcp\u7684\u4e00\u90e8\u5206\uff0c\u4f7f\u5f97\u6700\u7ec8\u957f\u5ea6\u4e3alenlen\u3002\u8fd9\u4e2a\u76f4\u63a5\u540e\u7f00\u6570\u7ec4\u641e\u6389\u5373\u53ef\u3002**\n\ncode\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#define LL long long\n\nconst int maxn=2e5+7;\n\nusing namespace std;\n\nint T,n;\nint c[maxn],x[maxn],y[maxn];\nLL f[maxn],g[maxn],ans;\n\nstruct suffix_array{\n    char s[maxn];\n    int rank[maxn],sa[maxn];\n    int h[maxn][15];\n    void getsa()\n    {\n        memset(rank,0,sizeof(rank));\n        memset(sa,0,sizeof(sa));\n        memset(h,0,sizeof(h));\n        memset(c,0,sizeof(c));\n        memset(x,0,sizeof(x));\n        memset(y,0,sizeof(y));\n        int m=1000;\n        for (int i=1;i<=m;i++) c[i]=0;\n        for (int i=1;i<=n;i++) x[i]=s[i];\n        for (int i=1;i<=n;i++) c[x[i]]++;\n        for (int i=1;i<=m;i++) c[i]+=c[i-1];\n        for (int i=n;i>0;i--) sa[c[x[i]]--]=i;\n        for (int k=1;k<=n;k<<=1)\n        {\n            int num=0;\n            for (int i=n-k+1;i<=n;i++) y[++num]=i;\n            for (int i=1;i<=n;i++) if (sa[i]>k) y[++num]=sa[i]-k;\n            for (int i=1;i<=m;i++) c[i]=0;\n            for (int i=1;i<=n;i++) c[x[i]]++;\n            for (int i=1;i<=m;i++) c[i]+=c[i-1];\n            for (int i=n;i>0;i--) sa[c[x[y[i]]]--]=y[i],y[i]=0;\n            swap(x,y);\n            num=1;\n            x[sa[1]]=1;\n            for (int i=2;i<=n;i++)\n            {\n                if ((y[sa[i]]!=y[sa[i-1]]) || (y[sa[i]+k]!=y[sa[i-1]+k]))\n                {\n                    x[sa[i]]=++num;\n                }\n                else x[sa[i]]=num;\n            }\n            if (num>=n) break;\n            m=num;\n        }\n        for (int i=1;i<=n;i++) rank[i]=x[i];\n    }\n    void getheight()\n    {\n        int k=0;\n        for (int i=1;i<=n;i++)\n        {\n            if (k) k--;\n            int j=sa[rank[i]-1];\n            while ((i+k<=n) && (j+k<=n) && (s[i+k]==s[j+k])) k++;\n            h[rank[i]][0]=k;\n        }\n        int c=1;\n        for (int j=1;j<15;j++)\n        {\n            for (int i=1;i<=n;i++)\n            {\n                h[i][j]=min(h[i][j-1],h[i+c][j-1]);\n            }\n            c<<=1;\n        }\n    }\n    int lcp(int x,int y)\n    {\n        x=rank[x],y=rank[y];\n        if (x>y) swap(x,y);\n        x++;\n        int k=trunc(log(y-x+1.5)/log(2));\n        return min(h[x][k],h[y-(1<<k)+1][k]);\n    }\n}A,B;\n\nint main()\n{\n    scanf(\"%d\",&T);\n    while (T--)\n    {   \n        memset(f,0,sizeof(f));\n        memset(g,0,sizeof(g));\n        scanf(\"%s\",A.s+1);\n        n=strlen(A.s+1);        \n        for (int i=1;i<=n;i++) B.s[n-i+1]=A.s[i];       \n        A.getsa(),A.getheight();\n        B.getsa(),B.getheight();                                    \n        for (int len=1;len<=n/2;len++)\n        {\n            for (int i=len,j=i+len;j<=n;i+=len,j+=len)\n            {\n                int x=min(A.lcp(i+1,j+1),len-1),y=min(B.lcp(n-i+1,n-j+1),len);\n                int t=x+y-len+1;\n                if (t>0)\n                {\n                    g[i-y+1]++,g[i-y+1+t]--;\n                    f[j+x+1-t]++,f[j+x+1]--;\n                }\n            }\n        }                               \n        for (int i=1;i<=n;i++) f[i]+=f[i-1],g[i]+=g[i-1];\n        ans=0;                              \n        for (int i=1;i<=n;i++) ans+=f[i]*g[i+1];\n        printf(\"%lld\\n\",ans);\n    }\n} \n```\n",
        "postTime": 1557149261,
        "uid": 202861,
        "name": "\u6821\u95e8\u5916\u7684\u6811",
        "ccfLevel": 0,
        "title": "P1117 [NOI2016] \u4f18\u79c0\u7684\u62c6\u5206"
    }
]