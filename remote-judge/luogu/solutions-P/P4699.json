[
    {
        "content": "\u8fd9\u9898\u7f51\u4e0a\u597d\u50cf\u627e\u4e0d\u5230\u6bd4\u8f83\u8be6\u7ec6\u7684\u9898\u89e3\n\n------------\n\u5148\u89e3\u51b3\u7b2c\u4e00\u95ee\uff0c\u5982\u4f55\u6c42\u51fa\u6700\u5927\u961f\u4f0d\u6570\n\n\u6211\u4eec\u5148\u6309$a_{i}$\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u4e00\u8d9f\uff0c\u663e\u7136\uff0c\u5982\u679c$a_{i+1}$\u6ee1\u8db3\u90a3\u4e48$a_{i}$\u4e5f\u5fc5\u5b9a\u6ee1\u8db3\u3002\u624b\u73a9\u51e0\u7ec4\u6570\u636e\u6613\u5f97\uff0c\u6bcf\u7ec4\u4eba\u5458\u90fd\u662f\u8fde\u63a5\u5728\u4e00\u8d77\u7684\uff0c\u5373\uff1a$a_{i},a_{i+1},a_{i+2},\\ldots$\n\n\u6211\u4eec\u5f00\u4e24\u4e2a\u6570\u7ec4\u6765\u8bb0\u5f55\uff1a\n\n$Max_{i}$ : \u524d$i$\u4e2a\u4eba\u6700\u591a\u5206\u51e0\u7ec4\n\n$f_{i}$ : \u7b2c$i$\u4e2a\u4eba\u4e3a\u4e00\u7ec4\u7684\u7ed3\u5c3e\u6700\u591a\u5206\u51e0\u7ec4\n\n\u8f6c\u79fb\u65b9\u7a0b\u975e\u5e38\u7b80\u6d01\uff0c\u5373\uff1a\n\n$f_{i} = Max_{i-a_{i}}+1$\n\n\u5f53\u7136\u524d\u63d0\u5fc5\u987b\u4fdd\u8bc1\uff1a $i>=a_{i}$ \u4e14 $Max_{i-a_{i}}>=0$\uff08\u6216\u8005\u8bf4$Max_{i-a_{i}}$\u5df2\u7ecf\u88ab\u66f4\u65b0\u8fc7\u4e86\uff09\n\n\u518d\u8003\u8651\u5982\u4f55\u66f4\u65b0$Max_{i}$\n\n\u6839\u636e\u5b9a\u4e49\uff0c$Max_{i}$ \u8868\u793a\u524d$i$\u4e2a\u4eba\u6700\u591a\u5206\u51e0\u7ec4\uff0c\u6240\u4ee5 :\n\n$Max_{i}=max(f_{i},Max_{i-1})$\n\n\u521d\u503c: $Max_{0}=0$\n\n$Ans=f_{n}$ \uff08\u56e0\u4e3a\u8981\u6ee1\u8db3\u6bcf\u4e2a\u5c0f\u670b\u53cb\uff0c\u6240\u4ee5\u7b2c$N$\u4e2a\u5c0f\u670b\u53cb\u5fc5\u53d6\uff0c$Ans$\u4e3a$f_{n}$\u800c\u5e76\u975e$Max_{n}$\uff09\n\n\u7b2c\u4e00\u95ee\u505a\u51fa\u6765\u540e\u7b2c\u4e8c\u95ee\u5c31\u5bb9\u6613\u4e86\n\n\u770b\u5230\u201c**\u6700\u5c0f\u5316\u4eba\u6570\u6700\u591a**\u7684\u961f\u4f0d\u7684\u4eba\u6570\u201d\uff0c\u81ea\u7136\u800c\u7136\u5c31\u4f1a\u60f3\u5230\u7528\u4e8c\u5206\u6765\u679a\u4e3e\u7b54\u6848\n\n$mid$\uff1a\u4eba\u6570\u6700\u591a\u7684\u961f\u4f0d\u4eba\u6570\n\n\u518d\u5f00\u4e00\u4e2a\u6570\u7ec4\uff1a\n\n$Lst_{i}$\uff1a \u679a\u4e3e\u5b8c\u7b2c $i$ \u4e2a\u4eba\u65f6\u4e0a\u4e00\u7ec4\u7684\u7ed3\u5c3e\u4f4d\u7f6e\uff08\u601d\u8003\n\n\u56e0\u4e3a$mid$\u8868\u793a\u4eba\u6570\u6700\u591a\u7684\u961f\u4f0d\u4eba\u6570\uff0c\u6240\u4ee5: $i-Lst_{i-a_{i}}<=mid$\n\n\u540c\u65f6\u66f4\u65b0\u64cd\u4f5c\u4e5f\u548c$Max$\u6570\u7ec4\u7c7b\u4f3c\uff1a\n\n\u5f53$f_{i}>=Max_{i-1}$\u65f6\uff1a$Lst_{i}=i$ \uff08\u65b0\u5f00\u4e00\u7ec4\uff0c\u81ea\u5df1\u4e3a\u7ed3\u5c3e\u4f4d\u7f6e\uff09\n\n\u5426\u5219\uff1a $Lst_{i}=Lst_{i-1}$ \uff08\u56e0\u4e3a\u6ca1\u6709\u65b0\u5f00\u4e00\u7ec4\uff0c\u4e0a\u4e00\u7ec4\u7ed3\u5c3e\u4f4d\u7f6e\u5373\u4e0d\u53d8\uff09\n\n\u5728\u6ee1\u8db3\u7ec4\u6570\u6700\u591a\u7684\u60c5\u51b5\u4e0b\uff0c\u7528\u4e8c\u5206\u6765\u67e5\u627e $mid$ \u7684\u6700\u5c0f\u503c\uff0c\u5373\u4e3a\u7b54\u6848\n\n\u8be6\u89c1\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\n#define maxn 1000005\nusing namespace std;\nint n,Ans,Min,Max[maxn],f[maxn],lst[maxn],L,R,mid;\nstruct lc{\n\tint x,id;\n\tbool operator <(const lc b)const{return x<b.x;}\n}a[maxn];\ninline int read(){\n\tint ret=0;char ch=getchar();\n\twhile (ch<'0'||ch>'9') ch=getchar();\n\twhile (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret;\n}\ninline int check(int len){\n\tmemset(lst,0,sizeof lst);\n\tmemset(f,-1,sizeof f);\n\tmemset(Max,-1,sizeof Max);\n\tMax[0]=0;int inf=Max[1];\n\tfor (int i=1;i<=n;i++){\n\t\tif (a[i].x<=i&&Max[i-a[i].x]>=0&&lst[i-a[i].x]+len>=i) f[i]=Max[i-a[i].x]+1;     //\u5224\u65ad\u662f\u5426\u80fd\u65b0\u6210\u4e00\u4e2a\u7ec4 \n\t\tif (f[i]>=Max[i-1]) lst[i]=i,Max[i]=f[i];\n\t\telse lst[i]=lst[i-1],Max[i]=Max[i-1];\n\t}\n\treturn f[n];           //\u8fd4\u56de\u6700\u5927\u7ec4\u6570 \n}\nint main(){\n\tn=read();\n\tfor (int i=1;i<=n;i++) a[i]=(lc){read(),i};\n\tsort(a+1,a+n+1); \n\tprintf(\"%d\\n\",Min=check(n));     //\u8bb0\u5f55\u6700\u5927\u7ec4\u6570 \n\tL=0,Ans=R=n;\n\twhile (L<=R){\n\t\tmid=L+R>>1;\n\t\tif (check(mid)==Min) Ans=mid,R=mid-1;       //\u67e5\u627e\u6ee1\u8db3\u6700\u5927\u7ec4\u6570\u7684\u524d\u63d0\u4e0bmid\u6700\u5c0f\u4e3a\u591a\u5c11 \n\t\telse L=mid+1;\n\t}\n\tcheck(Ans),R=n;       //\u6700\u540e\u8981\u5728check\u4e00\u904d\u6765\u8ba1\u7b97lst\u6570\u7ec4 \n\twhile (R){  \n\t\tL=lst[R-a[R].x];\n\t\tprintf(\"%d\",R-L);\n\t\tfor (int i=L+1;i<=R;i++) printf(\" %d\",a[i].id); //\u8f93\u51fa\u7b54\u6848 \n\t    putchar('\\n');R=L;\n\t}\n\treturn 0;\n}\n```\n#### \u53ef\u80fd\u8bb2\u7684\u4e0d\u591f\u8be6\u7ec6\uff0c\u5982\u6709\u4e0d\u61c2\u7684\u5730\u65b9\u6b22\u8fce\u8bc4\u8bba\u533a\u7559\u8a00\u6216\u8005\u79c1\u4fe1",
        "postTime": 1588821145,
        "uid": 108047,
        "name": "LlLlCc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4699 \u3010[CEOI2011]Teams\u3011"
    },
    {
        "content": "##### [\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P4699)\n\n---\n\n\u6211\u4eec\u5c06\u5c0f\u670b\u53cb\u7684\u9700\u6c42\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7ec4\uff0c\u6211\u4eec\u81f3\u5c11\u9700\u8981\u4e00\u4e2a\u957f\u5ea6\u4e3a\u5176\u4e2d\u5c0f\u670b\u53cb\u8981\u6c42\u6700\u5927\u503c\u7684\u5b50\u4e32\u3002\n\n\u7406\u7531\u5982\u4e0b\uff1a\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u4ee5\u67d0\u4e2a\u5c0f\u670b\u53cb\u7ed3\u5c3e\u7684\u961f\u4f0d\uff0c\u90a3\u4e48\u9009\u4e00\u4e9b\u8981\u6c42\u66f4\u9ad8\u7684\u5c0f\u670b\u53cb\u5728\u540c\u4e00\u961f\u4f0d\u4e2d\uff0c\u4e00\u5b9a\u6bd4\u9009\u4e00\u4e9b\u8981\u6c42\u66f4\u4f4e\u7684\u5c0f\u670b\u53cb\u6765\u5f97\u4f18\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u6700\u5927\u5316\u8fd9\u4e9b\u6784\u6210\u7ec4\u7684\u5c0f\u670b\u53cb\u7684\u7ec4\u6570\uff0c\u8bbe $f_i$ \u662f  $a_i$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\uff0c\u8003\u8651\u4e86\u524d $i$ \u4e2a\u5c0f\u670b\u53cb\uff0c\u81f3\u591a\u5206\u591a\u5c11\u7ec4\u3002\n\n\u5bb9\u6613\u6709\u8f6c\u79fb\u65b9\u7a0b $f_i=\\max(f_{i-1},f_{i-a_i}+1)$\uff0c\u7279\u6b8a\u5730\uff0c$f_t$ \u53ea\u80fd\u4ece $f_{t-a_t}$ \u8f6c\u79fb\u8fc7\u6765\uff0c\u56e0\u4e3a\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u4ee5\u8981\u6c42\u6700\u9ad8\u5c0f\u670b\u53cb\u4e3a\u7ed3\u5c3e\u7684\u7ec4\u3002\n\nDP \u51fa\u7684\u65b9\u6848\u5148\u5c06\u5176\u5206\u7ec4\u597d\uff0c\u5bf9\u4e8e\u5269\u4e0b\u7684\u5c0f\u670b\u53cb\u6211\u4eec\u8003\u8651\u4e8c\u5206\uff1a\n\n\u8bbe\u73b0\u5728\u6709 $n$ \u4e2a\u7ec4\uff0c$m$ \u4e2a\u672a\u5206\u914d\u7684\u5c0f\u670b\u53cb\uff0c\u7b54\u6848\u4e3a $mid$\u3002\n\n\u663e\u7136\uff0c$mid$ \u7684\u4e0b\u754c\u4e3a\u5206\u597d\u7684\u7ec4\u4e2d\u4eba\u6570\u6700\u591a\u7684\uff0c\u4e0a\u754c\u4e3a $n$\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u8981\u6c42\u9ad8\u7684\u5c0f\u670b\u53cb\uff0c\u653e\u5728\u5df2\u7ecf\u4eba\u6570\u8f83\u591a\u7684\u7ec4\u4e2d\uff0c\u4e00\u5b9a\u6bd4\u628a\u8981\u6c42\u4f4e\u7684\u5c0f\u670b\u53cb\u653e\u5728\u4eba\u6570\u8f83\u591a\u7684\u7ec4\u4e2d\u66f4\u4f18\u3002\n\n\u56e0\u6b64\u6211\u4eec\u8d2a\u5fc3\u5730\u628a\u5c0f\u670b\u53cb\u6309\u4ece\u5927\u5230\u5c0f\u5730\u987a\u5e8f\uff0c\u653e\u5165\u5df2\u6709\u4eba\u6570\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u7684\u7ec4\u4e2d\uff0c\u5c3d\u91cf\u653e\u6ee1\u3002\n\n\u8fd9\u65f6\uff0c\u9664\u4e86\u80fd\u653e\u5c0f\u670b\u53cb\u7684\u6700\u540e\u4e00\u7ec4\u6ca1\u6709\u653e\u6ee1\uff0c\u5176\u5b83\u5c0f\u670b\u53cb\u90fd\u653e\u5728\u4e00\u4e2a\u6ee1\u7684\u7ec4\u4e2d\uff0c\u7531\u4e8e\u4e0a\u6587\u6240\u8bf4 $mid$ \u7684\u4e0b\u754c\u4e00\u5b9a\u5927\u4e8e\u9700\u6c42\u6700\u5927\u5c0f\u670b\u53cb\u7684\u9700\u6c42\uff0c\u56e0\u6b64\u8fd9\u4e9b\u7ec4\u8fbe\u5230\u4e86\u6240\u6709\u5c0f\u670b\u53cb\u7684\u8981\u6c42\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6700\u540e\u4e00\u7ec4\u6211\u4eec\u8003\u8651\u8c03\u6574\uff1a\n\n\u6211\u4eec\u6bcf\u6b21\u628a\u5012\u6570\u7b2c\u4e8c\u7ec4\u8981\u6c42\u6700\u4f4e\u7684\u5c0f\u670b\u53cb\u8c03\u5230\u6700\u540e\u4e00\u7ec4\uff0c\u76f4\u5230\u6700\u540e\u4e00\u7ec4\u6ee1\u8db3\u8981\u6c42\u3002\u6b64\u65f6\u82e5\u5012\u6570\u7b2c\u4e8c\u7ec4\u7a7a\u4e86\uff0c\u6211\u4eec\u518d\u4ece\u524d\u9762\u8c03\u3002\n\n\u4ece\u6700\u540e\u4e00\u7ec4\u8c03\u6574\u5230\u7b2c\u4e00\u7ec4\uff0c\u82e5\u4e2d\u9014\u53d1\u73b0\u8c03\u6574\u4e0d\u4e0b\u53bb\u4e86\uff0c\u5c31\u8bf4\u660e\u4e0d\u5b58\u5728\u8fd9\u4e2a\u7b54\u6848\u7684\u65b9\u6848\u3002\n\n\u5982\u679c\u8c03\u6574\u5b8c\uff0c\u7b2c\u4e00\u7ec4\u4f9d\u7136\u5408\u6cd5\uff0c\u5c31\u8bf4\u660e\u5b58\u5728\u5408\u6cd5\u65b9\u6848\u3002\n\n##### \u5b9e\u73b0\u7ec6\u8282\n\n\u8c03\u6574\u5c0f\u670b\u53cb\u7684\u8fc7\u7a0b\u4e0d\u5fc5\u5f00\u591a\u4e2a\u6876\uff0c\u53ea\u9700\u8981\u7ef4\u62a4\u6bcf\u4e2a\u6876\u7684\u4e00\u4e2a\u6307\u9488\u5373\u53ef\uff0c\u6240\u6709\u64cd\u4f5c\u90fd\u5728\u4e00\u4e2a\u957f\u5ea6\u4e3a $m$ \u7684\uff0c\u5305\u542b\u6240\u6709\u5c0f\u670b\u53cb\u7684\u6876\u4e2d\u8fdb\u884c\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n### Code\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#define mid ((L+R)/2)\n#define l(i) (r[i-1]+1)\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int>pii;\nconst int SIZE=2e6+10;\ninline int read()\n{\n    int x=0;char ch=getchar();\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9')x=(x*10)+(ch^48),ch=getchar();\n    return x;\n}\nvector<int>ans[SIZE];\npii a[SIZE],b[SIZE];\nint t,lst,dp[SIZE],k[SIZE],v[SIZE],pre[SIZE],r[SIZE],maxn,n,m,cnt[SIZE];\ninline bool check(int x)\n{\n    ll sum=0,tot=0;\n    for(int i=1;i<=n;i++)sum+=(v[i]=x-k[i]);\n    if(sum<m)return false;\n    for(lst=1;lst<=n;lst++)\n    {\n        tot+=v[lst],r[lst]=tot;\n        if(tot>=m){r[lst]=m;break;}\n    }\n    if(tot==m)return true;\n    r[lst+1]=m+1;\n    for(int i=lst;i>1;i--)\n    {\n        r[i]=min(r[i],r[i+1]-1);\n        if(b[l(i)].first<=k[i]+r[i]-r[i-1])return true;\n        while(l(i)>1&&b[l(i)].first>k[i]+r[i]-r[i-1])r[i-1]--;\n        if(l(i)==1)return false;\n    }\n    return b[1].first<=k[1]+r[1];\n}\nint main()\n{\n    t=read();\n    for(int i=1;i<=t;i++)a[i]={read(),i};\n    sort(a+1,a+t+1);\n    for(int i=1;i<=t;i++)\n    {\n        dp[i]=dp[i-1],pre[i]=i-1;\n        if(i>=a[i].first&&dp[i-a[i].first]+1>=dp[i]||i==t)dp[i]=dp[i-a[i].first]+1,pre[i]=i-a[i].first;\n    }\n    n=dp[t];\n    for(int i=t,cnt=n;i;)\n    {\n        if(pre[i]==i-1&&a[i].first!=1){b[++m]=a[i--];continue;}\n        for(int j=i;j>pre[i];j--)ans[cnt].push_back(a[j].second);\n        maxn=max(maxn,k[cnt--]=a[i].first),i=pre[i];\n    }\n    reverse(k+1,k+n+1);\n    int L=maxn,R=t,final;\n    while(L<=R)\n    {\n        if(check(mid))final=mid,R=mid-1;\n        else L=mid+1;\n    }\n    check(final);\n    for(int i=1;i<=n;i++)if(i<=lst)for(int j=r[i-1]+1;j<=r[i];j++)ans[n-i+1].push_back(b[j].second);\n    printf(\"%d\\n\",n);\n    for(int i=1;i<=dp[t];i++)\n    {\n        printf(\"%d \",ans[i].size());\n        for(int ths:ans[i])printf(\"%d \",ths);\n        putchar('\\n');\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1669286703,
        "uid": 327355,
        "name": "FQ04gty",
        "ccfLevel": 0,
        "title": "[CEOI2011] Teams"
    }
]