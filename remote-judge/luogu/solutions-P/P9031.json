[
    {
        "content": "# [LG-P9031 [COCI2022-2023#1] Iksevi](https://www.luogu.com.cn/problem/P9031) Solution\n\n[TOC]\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6b64\u8fdb\u5165](http://blog.tsawke.com?t=LG-P9031-Solution)\n\n### \u9898\u9762\n\n$ n $ \u6b21\u8be2\u95ee\u6bcf\u6b21\u7ed9\u5b9a $ x, y $ \u6c42\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u6b63\u6574\u6570 $ d $ \u6ee1\u8db3 $ x = 2k_1d, y = (2k_2 + 1)d $ \u6216 $ x = (2k_1 + 1)d, y = 2k_2d $\uff0c\u5176\u4e2d $ k_1, k_2 \\in \\mathbb{N} $\u3002\n\n### Solution\n\n\u9996\u5148\u7b2c\u4e00\u6b65\u5c31\u662f\u5c06\u5197\u957f\u7684\u9898\u9762\u8f6c\u6362\u4e3a\u4e0a\u8ff0\u5f0f\u5b50\uff0c\u8fd9\u662f\u5e73\u51e1\u4e14\u81ea\u7136\u7684\u3002\n\n\u8003\u8651\u53d8\u5f62\uff0c\u4ee5\u524d\u8005\u4e3a\u4f8b\uff0c\u4e0d\u96be\u60f3\u5230\u6709 $ 2k_1 = \\dfrac{x}{d} $ \u4e0e $ 2k_2 + 1 = \\dfrac{y}{d} $\uff0c\u4ece\u4ee3\u6570\u610f\u4e49\u4e0a\u8003\u8651\uff0c\u5bb9\u6613\u60f3\u5230 $ \\dfrac{x}{d} $ \u4e3a\u5076\u6570\uff0c$ \\dfrac{y}{d} $ \u4e3a\u5947\u6570\u3002\u8fd9\u91cc\u6211\u4eec\u8003\u8651\u4e00\u4e9b\u6570\u8bba\u7684\u5e38\u89c1\u5957\u8def\uff0c\u60f3\u5230\u4e00\u4e2a\u6570\u8d28\u56e0\u6570\u5206\u89e3\u540e\u6709\u81f3\u5c11\u4e00\u4e2a $ 2 $ \u5f53\u4e14\u4ec5\u5f53\u5176\u4e3a\u5076\u6570\uff08\u56e0\u4e3a\u5076\u8d28\u6570\u6709\u4e14\u4ec5\u6709 $ 2 $\uff09\uff0c\u5219\u5982\u679c\u5bf9 $ x, y $ \u5747\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u90a3\u4e48 $ d $ \u5e94\u6ee1\u8db3\u5176 $ 2 $ \u7684\u5e42\u6b21\u4e25\u683c\u5c0f\u4e8e $ x $ \u7684 $ 2 $ \u7684\u5e42\u6b21\u4e14\u6d3d\u7b49\u4e8e $ y $ \u7684 $ 2 $ \u7684\u5e42\u6b21\uff0c\u800c\u5bf9\u4e8e\u5176\u5b83\u7684\u5947\u8d28\u56e0\u5b50\u4e0d\u96be\u53d1\u73b0\u5176\u5e42\u6b21\u662f\u4efb\u610f\u7684\u3002\n\n\u60f3\u5230\u7ebf\u6027\u7b5b\u8d28\u6570\uff0c\u7136\u540e\u901a\u8fc7\u8d28\u6570\u4e4b\u95f4\u7684\u679a\u4e3e\u5e42\u6b21\u7ebf\u6027\u7b5b\u503c\u57df\u5185\u6240\u6709\u6570\uff0c\u6c42\u51fa\u5176\u8d28\u56e0\u6570\u5206\u89e3\u540e $ 2 $ \u7684\u5e42\u6b21\u4e0e\u5947\u8d28\u56e0\u5b50\u5e42\u6b21 $ +1 $ \u540e\u7684\u4e58\u79ef\uff08\u5bf9\u5e94\u4e0a\u8ff0\u7684\u4efb\u610f\u53d6\u5e42\u6b21\u7684\u65b9\u6848\u6570\uff09\u3002\n\n\u6b64\u65f6\u8003\u8651\u5bf9\u4e8e\u8be2\u95ee\u7684\u6bcf\u4e00\u5bf9 $ x, y $\uff0c\u82e5 $ x = 0 \\land y = 0 $\uff0c\u7b54\u6848\u4e3a $ 0 $\uff0c\u82e5\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u4e3a $ 0 $\uff0c\u7b54\u6848\u663e\u7136\u4e3a\u975e\u96f6\u6570\u8d28\u56e0\u6570\u5206\u89e3\u540e\u5947\u8d28\u56e0\u5b50\u4efb\u53d6\u7684\u65b9\u6848\u6570\u3002\u82e5\u4e24\u8005\u5747\u4e3a\u5947\u6570\uff0c\u6216\u4e24\u8005\u8d28\u56e0\u6570\u5206\u89e3\u540e $ 2 $ \u7684\u5e42\u6b21\u76f8\u540c\uff0c\u90a3\u4e48 $ d $ \u663e\u7136\u65e0\u6cd5\u6ee1\u8db3\u4e0a\u8ff0\u7684 \u201c\u4e25\u683c\u5c0f\u4e8e $ x $ \u7684 $ 2 $ \u7684\u5e42\u6b21\u4e14\u6d3d\u7b49\u4e8e $ y $ \u7684 $ 2 $ \u7684\u5e42\u6b21\u201d\uff0c\u7b54\u6848\u4e3a $ 0 $\u3002\u5426\u5219\u6211\u4eec\u76f4\u63a5\u53d6 $ \\gcd(x, y) $ \u8d28\u56e0\u6570\u5206\u89e3\u540e\u5947\u8d28\u56e0\u5b50\u4efb\u53d6\u7684\u65b9\u6848\u6570\uff0c\u8fd9\u91cc\u4e5f\u662f\u81ea\u7136\u7684\uff0c\u5373\u5c06 $ 2 $ \u5e42\u6b21\u8f83\u5c0f\u6570\u4e2d $ 2 $ \u7684\u5e42\u6b21\u5168\u90e8\u94a6\u5b9a\u53d6\u51fa\u4f7f\u5176\u6700\u7ec8\u4e3a\u5947\u6570\uff0c\u53e6\u4e00\u4e2a\u5373\u4e3a\u5076\u6570\u3002\n\n\u82e5\u503c\u57df\u4e3a $ v $\uff0c\u5219\u9884\u5904\u7406\u590d\u6742\u5ea6 $ O(v) $\uff0c\u5355\u6b21\u8be2\u95ee\u590d\u6742\u5ea6 $ O(1) $\uff0c\u6700\u7ec8\u590d\u6742\u5ea6 $ O(v + n) $\uff0c\u9650\u5236\u6700\u5927\u503c\u57df\u540e\u76f4\u63a5\u6700\u4f18\u89e3\uff08\u4e3b\u8981\u6ca1\u51e0\u4e2a\u4eba\u4ea4\uff09\u3002\n\nTips\uff1a\u6ce8\u610f\u7ebf\u6027\u7b5b\u7684\u8fc7\u7a0b\u4e2d\u82e5\u540e\u9762\u7684\u8d28\u6570\u5747\u65e0\u6cd5\u53d6\u9700\u76f4\u63a5\u56de\u6eaf\uff0c\u5426\u5219\u4f1a\u56e0\u5927\u91cf\u679a\u4e3e\u65e0\u7528\u8d28\u6570\u5bfc\u81f4\u590d\u6742\u5ea6\u9000\u5316\u3002\n\n### Code\n\n```cpp\n#define _USE_MATH_DEFINES\n#include <bits/stdc++.h>\n\n#define PI M_PI\n#define E M_E\n#define npt nullptr\n#define SON i->to\n#define OPNEW void* operator new(size_t)\n#define ROPNEW void* Edge::operator new(size_t){static Edge* P = ed; return P++;}\n#define ROPNEW_NODE void* Node::operator new(size_t){static Node* P = nd; return P++;}\n\nusing namespace std;\n\nmt19937 rnd(random_device{}());\nint rndd(int l, int r){return rnd() % (r - l + 1) + l;}\nbool rnddd(int x){return rndd(1, 100) <= x;}\n\ntypedef unsigned int uint;\ntypedef unsigned long long unll;\ntypedef long long ll;\ntypedef long double ld;\n\n#define P(i) (Prime.at(i - 1))\n#define LIMV_SIZE (int)(1e7)\n\ntemplate < typename T = int >\ninline T read(void);\n\nint N;\nint tot;\nint LIMV(0);\npair < int, int > pos[1100000];\nbitset < LIMV_SIZE + 114514 > notPrime;\nbasic_string < int > Prime;\npair < int, int > fact[LIMV_SIZE + 114514];\n\nint main(){\n    N = read();\n    for(int i = 1; i <= N; ++i)LIMV = max({LIMV, pos[i].first = read(), pos[i].second = read()});\n    for(int i = 2; i <= LIMV; ++i){\n        if(!notPrime[i])Prime += i;\n        for(auto p : Prime){\n            if((ll)i * p > LIMV)break;\n            notPrime[i * p] = true;\n            if(i % p == 0)break;\n        }\n    }tot = Prime.size();\n    auto dfs = [](auto&& self, int dep = 1, int cnt2 = 0, int cnt_odd = 1, ll val = 1)->void{\n        if(val > LIMV)return;\n        if(dep > tot || val * P(dep) > LIMV)return fact[val] = {cnt2, cnt_odd}, void();\n        int tims(1);\n        while(val <= LIMV){\n            self(self, dep + 1, cnt2, cnt_odd, val);\n            val *= P(dep);\n            if(P(dep) == 2)++cnt2;\n            else cnt_odd /= tims, cnt_odd *= ++tims;\n        }\n    }; dfs(dfs);\n    for(int i = 1; i <= N; ++i){\n        int X = pos[i].first, Y = pos[i].second;\n        if(!X && !Y){printf(\"0\\n\"); continue;}\n        if(!X || !Y){printf(\"%d\\n\", fact[X ^ Y].second); continue;}\n        int pow2X = fact[X].first, pow2Y = fact[Y].first;\n        if((!pow2X && !pow2Y) || pow2X == pow2Y){printf(\"0\\n\"); continue;}\n        printf(\"%d\\n\", fact[__gcd(X, Y)].second);\n    }\n    fprintf(stderr, \"Time: %.6lf\\n\", (double)clock() / CLOCKS_PER_SEC);\n    return 0;\n}\n\ntemplate < typename T >\ninline T read(void){\n    T ret(0);\n    int flag(1);\n    char c = getchar();\n    while(c != '-' && !isdigit(c))c = getchar();\n    if(c == '-')flag = -1, c = getchar();\n    while(isdigit(c)){\n        ret *= 10;\n        ret += int(c - '0');\n        c = getchar();\n    }ret *= flag;\n    return ret;\n}\n```\n\n## UPD\n\nupdate-2023_03_28 \u521d\u7a3f",
        "postTime": 1679987306,
        "uid": 362938,
        "name": "Tsawke",
        "ccfLevel": 6,
        "title": "LG-P9031 [COCI2022-2023#1] Iksevi \u9898\u89e3"
    }
]