[
    {
        "content": "### \u524d\u7f6e\u6280\u80fd\uff1a\u540e\u7f00\u81ea\u52a8\u673a\n\n\u76f4\u63a5\u5bf9\u8bfb\u5165\u7684\u5b57\u7b26\u4e32\u5efaSAM\uff0c\u5e76\u4e14\u5bf9\u5176$parent$\u6811\u7edf\u8ba1$sz[u]$\u8868\u793a\u5b50\u6811\u5927\u5c0f\u3002\n\n\u90a3\u4e48\u4e00\u4e2a\u8282\u70b9\u8868\u793a\u7684\u5b57\u7b26\u4e32\u7684\u51fa\u73b0\u5b50\u4e32\u51fa\u73b0\u6b21\u6570\u5c31\u662f$sz_i$\n\n\u90a3\u4e48\u626b\u63cf\u6240\u6709$sz_i==k$\u7684\u8282\u70b9\uff0c\u8be5\u8282\u70b9\u8868\u793a\u7684\u6240\u6709\u5b50\u4e32\u90fd\u662f\u53ef\u884c\u7684\uff0c\u800c\u4e14\u5b83\u4eec\u7684\u957f\u5ea6\u4e00\u5b9a\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\u533a\u95f4$(len_{fa_i},len_i]$\n\n\u90a3\u4e48\u76f4\u63a5\u8fdb\u884c\u5dee\u5206\u5c31\u597d\u4e86\uff0c\u6574\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\n\n```cpp\n\n#include<set>\n#include<map>\n#include<cmath>\n#include<vector>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#define pb push_back\n#define fi first\n#define se second\n#define mp make_pair\nusing namespace std;\n\ntypedef double db;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> pi;\n\nconst int N=200005;\n\nint tot=1,la,ch[N][26],fa[N],len[N],ar[N],sz[N],rk[N],cnt[N];\n\nvoid extend(int id)\n{\n\tint p=la;\n\tint np=++tot;\n\tlen[np]=len[p]+1;\n\twhile(p && !ch[p][id])\n\t{\n\t\tch[p][id]=np;\n\t\tp=fa[p];\n\t}\n\tif(!p)\n\t{\n\t\tfa[np]=1;\n\t}\n\telse\n\t{\n\t\tint q=ch[p][id];\n\t\tif(len[p]+1==len[q])\n\t\t{\n\t\t\tfa[np]=q;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint nq=++tot;\n\t\t\tfa[nq]=fa[q];\n\t\t\tlen[nq]=len[p]+1;\n\t\t\tfor(int i=0; i<26; i++)\n\t\t\t\tch[nq][i]=ch[q][i];\n\t\t\tfa[np]=nq;\n\t\t\tfa[q]=nq;\n\t\t\twhile(p && ch[p][id]==q)\n\t\t\t{\n\t\t\t\tch[p][id]=nq;\n\t\t\t\tp=fa[p];\n\t\t\t}\n\t\t}\n\t}\n\t++sz[la=np];\n}\n\nvoid Sort()\n{\n\tfor(int i=1; i<=tot; i++) ar[len[i]]++;\n\tfor(int i=1; i<=tot; i++) ar[i]+=ar[i-1];\n\tfor(int i=1; i<=tot; i++) rk[ar[len[i]]--]=i;\n}\n\nint T,n,k,mx,ans;\n\nchar S[N];\n\nint main()\n{\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tscanf(\"%s%d\",S+1,&k);\n\t\tn=strlen(S+1);\n\t\tla=1;\n\t\tfor(int i=1; i<=n; i++) extend(S[i]-'a');\n\t\tSort();\n\t\tauto upd=[](int l,int r){cnt[l]++;cnt[r+1]--;};\n\t\tfor(int i=tot; i!=1; i--)\n\t\t{\n\t\t\tint now=rk[i];\n\t\t\tsz[fa[now]]+=sz[now];\n\t\t\tif(sz[now]==k) upd(len[fa[now]]+1,len[now]);\n\t\t}\n\t\tmx=ans=-1;\n\t\tfor(int i=1; i<=n; i++)\n\t\t{\n\t\t\tcnt[i]+=cnt[i-1];\n\t\t\tif(cnt[i]>=mx)\n\t\t\t{\n\t\t\t\tmx=cnt[i];\n\t\t\t\tans=i;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",mx>0?ans:-1);\n\t\tfor(int i=1; i<=tot; i++)\n\t\t{\n\t\t\tlen[i]=fa[i]=sz[i]=ar[i]=0;\n\t\t\tmemset(ch[i],0,sizeof(ch[i]));\n\t\t}\n\t\ttot=1;\n\t\tfor(int i=0; i<=n+1; i++) cnt[i]=0;\n\t}\n\treturn 0;\n}\n",
        "postTime": 1556967212,
        "uid": 13052,
        "name": "iostream",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5341 \u3010[TJOI2019]\u7532\u82ef\u5148\u751f\u548c\u5927\u4e2d\u950b\u7684\u5b57\u7b26\u4e32\u3011"
    },
    {
        "content": "### Update1:\u4fee\u4e86\u4e00\u70b9\u5c0f\u9505\n\n------------\n\n[[TJOI2019]\u7532\u82ef\u5148\u751f\u548c\u5927\u4e2d\u950b\u7684\u5b57\u7b26\u4e32](https://www.luogu.com.cn/problem/P5341)\n\n\u63d0\u4f9b\u4e00\u4e2a $\\mathcal{SA}$ \u7684\u505a\u6cd5\u3002\n\n\u9898\u9762\u6709\u70b9\u7ed5\uff0c\u5927\u610f\u662f\u627e\u51fa\u4ec5\u51fa\u73b0 $k$ \u6b21\u7684\u5b50\u4e32\u96c6\u5408\uff0c\u7136\u540e\u7edf\u8ba1\u51fa\u73b0\u6700\u591a\u7684\u5b50\u4e32\u957f\u5ea6\u3002\n\n\u8003\u8651\u5982\u4f55\u6c42\u51fa\u5b50\u4e32\u96c6\u5408\uff0c\u5148\u5efa\u597d height \u6570\u7ec4\uff0c\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5728 height \u6570\u7ec4\u4e0a\u627e\u4e00\u4e2a\u957f\u5ea6\u4e3a $k$ \u7684\u8fde\u7eed\u533a\u95f4\uff0c\u6c42\u5728\u6392\u5e8f\u540e\u7684\u540e\u7f00\u4e2d\u4ec5\u80fd\u51fa\u73b0\u5728\u8fd9\u6bb5\u533a\u95f4\u5185\u7684\u201c\u516c\u5171\u524d\u7f00\u201d\u6709\u90a3\u4e9b\u3002\n\n\u8bbe\u533a\u95f4 $[i,i+k-1]$ \u7684\u201c\u516c\u5171\u524d\u7f00\u201d\u957f\u4e3a $l$ \uff0c\u8003\u8651 $l$ \u7684\u8303\u56f4\uff0c\u663e\u7136 $l$ \u6700\u5927\u53ea\u80fd\u662f $\\text{lcp}_{i}^{i+k-1}$ , \u4e5f\u5c31\u662f\u7ecf\u8fc7\u6392\u5e8f\u7684\u540e\u7f00\u5728\u8fd9\u6bb5\u533a\u95f4\u7684**\u6700\u957f\u516c\u5171\u524d\u7f00**\u3002\n\n\u6839\u636e height \u6570\u7ec4\u7684\u5b9a\u4e49\uff0c\u6709 $\\text{lcp}_{i}^{i+k-1}=\\min_{j=i+1}^{i+k-1}\\{h_{j}\\}$ \uff0c$h$ \u8868\u793a height \u6570\u7ec4\uff0c\u5bf9\u4e8e\u524d\u9762\u8fd9\u4e2a\u5f0f\u5b50\u53ef\u4ee5\u7528\u4e00\u4e2a\u80fd\u7ef4\u62a4 RMQ \u95ee\u9898\u7684\u6570\u636e\u7ed3\u6784\u5c31\u884c\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651 $l$ \u7684\u4e0b\u754c\uff0c\u5148\u7ed9\u51fa\u7ed3\u8bba\uff0c\u82e5\u8981\u6ee1\u8db3\u8fd9\u6bb5\u201c\u516c\u5171\u524d\u7f00\u201d\u4e0d\u80fd\u5728\u533a\u95f4 $[i,i+k-1]$ \u51fa\u73b0\u8fc7\uff0c\u5219 $l > \\max(h_i,h_{i+k})$ \u3002\n\n\u611f\u6027\u8bc1\u660e\u4e00\u4e0b\uff0c\u82e5 $l \\leq h_i,h_{i+k}$ \uff0c\u5219\u8bf4\u660e\u957f\u5ea6\u4e3a $l$ \u7684\u201c\u516c\u5171\u524d\u7f00\u201d\u5df2\u7ecf\u8d85\u8fc7\u4e86 $k$ \u4e2a\uff0c\u662f\u4e0e\u201c\u4ec5\u51fa\u73b0 $k$ \u6b21\u201d\u77db\u76fe\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5bf9 height \u6570\u7ec4\u505a\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u6ed1\u52a8\u7a97\u53e3\u7684\u4e1c\u897f\uff0c\u7528\u5dee\u5206\u6570\u7ec4\u7ef4\u62a4\u6bcf\u4e2a\u533a\u95f4\u5bf9\u5e94\u7684 $l$ \u7684\u503c\u57df\uff0c\u8dd1\u5b8c\u4e4b\u540e\u6c42\u90a3\u4e2a\u957f\u5ea6\u51fa\u73b0\u6700\u591a\u5373\u53ef\u3002\n\n\u65e2\u7136\u4f60\u80fd\u627e\u5230\u8fd9\u9898\uff0c\u6211\u76f8\u4fe1\u4f60\u80fd\u77ac\u95f4\u505a\u51fa\u6765\u7684\u3002\n\n$Code:$\n\n```cpp\n#include<bits/stdc++.h>\ntypedef long long LL;\ntypedef long double LD;\nusing namespace std;\nconst LL N=100010,INF=0x3f3f3f3f;\ninline LL Max(LL x,LL y){return x>y?x:y;}\ninline LL Min(LL x,LL y){return x<y?x:y;}\ninline void Swap(LL &x,LL &y){x^=y^=x^=y;}\nLL T,n,m,k,cf[N];\nchar s[N];\nnamespace SA{\nLL sa[N],height[N],c[N],x[N],y[N],rk[N];\nvoid get_sa(){\n\tfor(LL i=1;i<=m;i++)c[i]=0;\n\tfor(LL i=1;i<=n;i++)c[x[i]=s[i]]++;\n\tfor(LL i=2;i<=m;i++)c[i]+=c[i-1];\n\tfor(LL i=n;i>=1;i--)sa[c[x[i]]--]=i;\n\tfor(LL w=1;w<=n;w<<=1){\n\t\tLL num=0;\n\t\tfor(LL i=n-w+1;i<=n;i++)y[++num]=i;\n\t\tfor(LL i=1;i<=n;i++)\n\t\t\tif(sa[i]>w)y[++num]=sa[i]-w;\n\t\tfor(LL i=1;i<=m;i++)c[i]=0;\n\t\tfor(LL i=1;i<=n;i++)c[x[i]]++;\n\t\tfor(LL i=2;i<=m;i++)c[i]+=c[i-1];\n\t\tfor(LL i=n;i>=1;i--)sa[c[x[y[i]]]--]=y[i],y[i]=0;\n\t\tstd::swap(x,y);\n\t\tx[sa[1]]=num=1;\n\t\tfor(LL i=2;i<=n;i++)\n\t\t\tx[sa[i]]=(y[sa[i]]==y[sa[i-1]]&&y[sa[i]+w]==y[sa[i-1]+w])?num:++num;\n\t\tif(num==n)break;\n\t\tm=num;\n\t}\n}\nvoid get_height(){\n\tfor(LL i=1;i<=n;i++)rk[sa[i]]=i;\n\tfor(LL i=1,k=0;i<=n;i++){\n\t\tif(rk[i]==1)continue;\n\t\tif(k)k--;\n\t\tLL j=sa[rk[i]-1];\n\t\twhile(i+k<=n&&j+k<=n&&s[i+k]==s[j+k])k++;\n\t\theight[rk[i]]=k;\n\t}\n}\n}\nstruct SegmentTree{\n\tLL l,r;\n\tLL mn;\n\t#define l(x) tree[x].l\n\t#define r(x) tree[x].r\n\t#define mn(x) tree[x].mn\n}tree[N<<2];\nvoid Pushup(LL x){\n\tmn(x)=Min(mn(x<<1),mn(x<<1|1));\n}\nvoid Build(LL x,LL l,LL r){\n\tl(x)=l,r(x)=r;mn(x)=0;\n\tif(l==r){mn(x)=SA::height[l];return;}\n\tLL mid=(l+r)>>1;\n\tBuild(x<<1,l,mid);\n\tBuild(x<<1|1,mid+1,r);\n\tPushup(x);\n}\nLL Query(LL x,LL L,LL R){\n\tLL l=l(x),r=r(x);\n\tif(L<=l&&r<=R)return mn(x);\n\tLL mid=(l+r)>>1;\n\tLL val=INF;\n\tif(L<=mid)val=Min(val,Query(x<<1,L,R));\n\tif(R>mid)val=Min(val,Query(x<<1|1,L,R));\n\treturn val;\n}\nint main(){\n\tscanf(\"%lld\",&T);\n\twhile(T--){\n\t\tscanf(\"%s%lld\",s+1,&k);\t\n\t\tn=strlen(s+1);m=122;\n\t\tmemset(cf,0,sizeof(cf));\n\t\tSA::height[n+1]=0;\n\t\tSA::get_sa();\n\t\tSA::get_height();\n\t\tBuild(1,1,n);\n\t\tfor(LL i=1;i+k-1<=n;i++){\n\t\t\tLL l=i,r=i+k-1,L,R;\n\t\t\tif(l+1>r)R=n-SA::sa[r]+1;\n\t\t\telse R=Query(1,l+1,r);\n\t\t\tL=Max(SA::height[l],SA::height[r+1])+1;\n\t\t\tif(L<=R)++cf[L],--cf[R+1];\n\t\t}\n\t\tLL ans=-1,maxv=1;\n\t\tfor(LL i=1;i<=n;i++){\n\t\t\tcf[i]+=cf[i-1];\n\t\t\tif(cf[i]>=maxv)ans=i,maxv=cf[i];\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1614253379,
        "uid": 137242,
        "name": "Dia\u043esi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5341 \u3010[TJOI2019]\u7532\u82ef\u5148\u751f\u548c\u5927\u4e2d\u950b\u7684\u5b57\u7b26\u4e32\u3011"
    },
    {
        "content": "SAM\u4e00\u9053\u5f88\u88f8\u7684\u9898\u3002\u3002\u3002\n\n\u9898\u610f\u5f88\u660e\u786e\uff0c\u4e0d\u518d\u9610\u8ff0\u3002\n\n\u505a\u6cd5\u5f88\u7b80\u5355\uff1a\u627e\u5230\u6240\u6709\u51fa\u73b0\u6b21\u6570\u4e3a $ k $ \u7684\u5b50\u4e32\uff0c\u7136\u540e\u7edf\u8ba1\u3002\n\n\u600e\u4e48\u627e\u5230\u8fd9\u4e9b\u5b57\u7b26\u4e32\u5462\uff1fSAM \u53ea\u80fd\u627e\u51fa\u7b49\u4ef7\u7c7b\u554a\u3002\n\n\u6ce8\u610f parent tree \u7684\u7236\u4eb2\u8282\u70b9\u7684\u957f\u5ea6 +1 \u5373\u8be5\u7b49\u4ef7\u7c7b\u4e2d\u957f\u5ea6\u6700\u77ed\u7684\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u82e5\u6211\u4eec\u5148\u901a\u8fc7\u62d3\u6251\u6392\u5e8f\u6c42\u51fa\u6bcf\u4e2a\u7b49\u4ef7\u7c7b\u5728\u539f\u4e32\u4e2d\u51fa\u73b0\u6b21\u6b21\u6570 $ siz[u] $\uff0c\u8be5\u7b49\u4ef7\u7c7b\u7684\u6240\u6709\u5b57\u7b26\u4e32\u90fd\u51fa\u73b0\u4e86 $ siz[u] $ \u6b21\uff0c\u90a3\u4e48\u5c31\u53d8\u4e3a\u4e86\u4e00\u4e2a\u5e8f\u5217\u64cd\u4f5c\u9898\uff1a\n1. \u533a\u95f4\u52a0 $ 1 $\n2. \u67e5\u8be2\u524d\u7f00\u548c\n\u800c\u6240\u6709 $ 2 $ \u64cd\u4f5c\u90fd\u5728 $ 1 $ \u64cd\u4f5c\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 $ O(n) $ \u7684\u5dee\u5206\u4f18\u79c0\u5730\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u8d34\u4ee3\u7801\uff1a\n```cpp\n#include<cstring>\n#include<cstdio>\nconst int M=1e5+5;\nint T,n,k,tot=1,lst=1,sum[M],id[M<<1],CB[M<<1],siz[M<<1];char s[M];\nstruct Node{\n    int chi[26];\n    int f,len;\n    Node():f(0),len(0){memset(chi,0,104);}\n}SAM[M<<1];\ninline void Insert(const int&s){\n    int q,p,nq,np;\n    p=lst;np=lst=++tot;\n\tSAM[np].len=SAM[p].len+1;siz[np]=1;\n    for(;p&&!SAM[p].chi[s];p=SAM[p].f)SAM[p].chi[s]=np;\n    if(!p)SAM[np].f=1;\n    else{\n        q=SAM[p].chi[s];\n        if(SAM[q].len==SAM[p].len+1)SAM[np].f=q;\n        else{\n            SAM[nq=++tot]=SAM[q];\n            SAM[np].f=SAM[q].f=nq;\n            SAM[nq].len=SAM[p].len+1;\n            for(;p&&SAM[p].chi[s]==q;p=SAM[p].f)SAM[p].chi[s]=nq;\n        }\n    }\n}\ninline int Solve(){\n    register int i,u,ans=n+1;\n    for(i=1;i<=tot;++i)++CB[SAM[i].len];\n    for(i=1;i<=tot;++i)CB[i]+=CB[i-1];\n    for(i=1;i<=tot;++i)id[CB[SAM[i].len]--]=i;\n    for(i=tot;i>=1;--i){\n        u=id[i];\n        siz[SAM[u].f]+=siz[u];\n        if(siz[u]==k)++sum[SAM[u].len],--sum[SAM[SAM[u].f].len];\n    }\n    for(i=n;i>=1;--i){\n    \tsum[i]+=sum[i+1];\n    \tif(sum[i]>sum[ans])ans=i;\n\t}\n\tans=sum[ans]?ans:-1;\n    while(tot)id[tot]=CB[tot]=siz[tot]=0,SAM[tot--]=Node();\n    for(i=1;i<=n;++i)sum[i]=0;\n    tot=lst=1;\n    return ans;\n}\nsigned main(){\n    register int i;\n    scanf(\"%d\",&T);\n    while(T--){\n        scanf(\"%s%d\",s,&k);n=strlen(s);\n        for(i=0;i<n;++i)Insert(s[i]-97),s[i]=0;\n        printf(\"%d\\n\",Solve());\n    }\n}\n```",
        "postTime": 1607181291,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u5b57\u7b26\u4e32 \u540e\u7f00\u81ea\u52a8\u673a P5341\u9898\u89e3"
    },
    {
        "content": "## \u9898\u89e3\uff08\u540e\u7f00\u6570\u7ec4\uff09\uff1a\n\n\u540e\u7f00\u6570\u7ec4\u597d\u9898\uff0c\u9898\u89e3\u8bf4\u662f\u5927\u6c34\u9898\uff0c\u4f46\u6211\u770b\u4e0d\u51fa\u6765\u3002\n\n\u9898\u8fd8\u662f\u505a\u5f97\u592a\u5c11\uff0c\u5bf9\u540e\u7f00\u6570\u7ec4\u7684\u7406\u89e3\u4e5f\u592a\u6d45\u3002\n\n\u6211\u4eec\u7528\u4e00\u4e2a\u957f\u5ea6\u4e3ak\u7684\u6ed1\u5757\u53bb\u6ed1\u5b57\u7b26\u4e32\u3002\n\n\u5b57\u7b26\u4e32\u7684\u5148\u540e\u987a\u5e8f\u662f\u6309\u540e\u7f00\u6392\u5e8f\u6765\u7684\u3002\n\n\u6211\u4eec\u7ef4\u62a4\u4e86\u533a\u95f4\u7684\u6700\u5c0fheight\u503c\uff0c\u8bb0\u4e3ax\uff0c\n\n\u8fd9\u662f\u4ec0\u4e48\uff1f\n\n\u5982\u679cx\u4e3a0\uff0c\u8bf4\u660e\u8fd9\u6837\u7684\u524d\u7f00\u5931\u8d25\u4e86\uff0c\u51fa\u73b0\u6b21\u6570\u4e0d\u5230k\n\n\u5982\u679cx\u4e0d\u4e3a0\uff0c\u8bf4\u660e\u6b64\u65f6\u957f\u5ea6\u4e3ax\u7684\u524d\u7f00\u81f3\u5c11\u6709k\u4e2a\n\n\u4f46\u6211\u4eec\u8981\u6c42\u6070\u597d\u4e3ak\u7684\u4e2a\u6570\n\n\u90a3\u600e\u4e48\u529e\u5462\uff1f\n\n\u6709\u4e86\uff0c\u6211\u4eec\u5224\u4e00\u4e0b,h[i-k+1]\u548ch[i+1]\n\n\u5982\u679c\u8fd9\u4e24\u4e2a\u503c\u4e2d\u6709\u503c\u5927\u4e8e\u7b49\u4e8ex\uff0c\u8fd9\u8bf4\u660e\u6b64\u65f6\u957f\u5ea6\u4e3ax\u7684\u524d\u7f00\u8d85\u8fc7\u4e86k\u4e2a\n\n\u5426\u5219\u8fd9\u6837\u957f\u5ea6\u4e3ax\u7684\u524d\u7f00\u6070\u597d\u7b49\u4e8ek\u4e2a\u3002\n\n\u8003\u8651\u524d\u7f00\u4e2d\u80fd\u5206\u51fa\u591a\u5c11\u7684\u524d\u7f00\u6070\u597d\u7b49\u4e8ek\uff0c\u6700\u5c0f\u7684\u5c31\u662fmax(h[i-k+1],h[i+1])+1,\u6700\u5927\u7684\u662fx\n\n\u8ba1\u7b97\u7b54\u6848\u5c31\u5dee\u5206\u4e00\u4e0b\u5373\u53ef\uff0c\u7ef4\u62a4\u6700\u5927\u503c .\n\n\n\n## \u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define next Next\nconst int N=4e5+5;\nint n,m,k,q[N],cf[N],sa[N],height[N],x[N],y[N],c[N],rk[N];\nchar a[N];\n/*char buf[1<<21],*p1=buf,*p2=buf;\ninline int gc(){return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;}*/\n#define gc getchar\ninline int read()\n{\n\tint ret=0,f=0;char c=gc();\n\twhile(!isdigit(c)){if(c=='-')f=1;c=gc();}\n\twhile(isdigit(c)){ret=ret*10+c-48;c=gc();}\n\tif(f)return -ret;return ret;\n}\nvoid SA(int n,int m)\n{\n\tint p;\n\tfor(int i=0;i<=n;i++)\n\t{\n\t\tsa[i]=rk[i]=x[i]=y[i]=0;\n\t}\n    for(int i=1;i<=m;i++)c[i]=0;\n    for(int i=1;i<=n;i++)c[x[i]=a[i]]++;\n    for(int i=1;i<=m;i++)c[i]+=c[i-1];\n    for(int i=n;i;i--)sa[c[x[i]]--]=i;\n    for(int i=1;i;i=i*2)\n    {\n        p=0;\n        for(int j=n-i+1;j<=n;j++)y[++p]=j;\n        for(int j=1;j<=n;j++)\n            if(sa[j]>i)y[++p]=sa[j]-i;\n        for(int j=1;j<=m;j++)c[j]=0;\n        for(int j=1;j<=n;j++)c[x[y[j]]]++;\n        for(int j=1;j<=m;j++)c[j]+=c[j-1];\n        for(int j=n;j;j--)sa[c[x[y[j]]]--]=y[j];\n        swap(x,y);\n        x[sa[1]]=1;\n        p=2;\n        for(int j=2;j<=n;j++)\n        {\n            if(y[sa[j]]==y[sa[j-1]]&&y[sa[j]+i]==y[sa[j-1]+i])x[sa[j]]=p-1;\n            else x[sa[j]]=p++;\n        }\n        if(p>n)return;\n        m=p;\n    }\n}\nvoid Height()\n{\n    int k=0;\n    for(int i=1;i<=n;i++)rk[sa[i]]=i;\n    for(int i=1;i<=n;i++)\n    {\n        if(rk[i]==1)continue;\n        if(k)k--;\n        int j=sa[rk[i]-1];\n        while(i+k<=n&&j+k<=n&&a[i+k]==a[j+k])k++;\n        height[rk[i]]=k;\n    }\n}\nsigned main()\n{\n\tint T=read();\n\twhile(T--)\n\t{\n\t\tmemset(cf,0,sizeof(cf));\n\t\tscanf(\"%s\",a+1);\n\t\tn=strlen(a+1);\n\t\tk=read();\n\t\theight[n+1]=0;\n\t\tSA(n,122);\n\t\tHeight();\n\t\tint l=1,r=0;\n\t\tfor(int i=1;i<=k;i++)\n\t\t{\n\t\t\twhile(l<=r&&height[q[r]]>=height[i])r--;\n\t\t\tq[++r]=i;\n\t\t}\n\t\tfor(int i=k;i<=n;i++)\n\t\t{\n\t\t\tif(i-q[l]+1>=k)l++;\n\t\t\twhile(l<=r&&height[q[r]]>=height[i])r--;\n\t\t\tq[++r]=i;\n\t\t\tint R;\n            if(k==1)R=n-sa[i+k-1]+1;\n            else R=height[q[l]];\n            int L=max(height[i-k+1],height[i+1]);\n            if(L<R)\n\t\t\t{\n\t\t\t\tcf[L+1]++;\n\t\t\t\tcf[R+1]--;\n\t\t\t}\n\t\t}\n\t\tint sum=cf[0],ma=1,ans=-1;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tsum+=cf[i];\n\t\t\tif(sum>=ma)\n\t\t\t{\n\t\t\t\tma=sum;\n\t\t\t\tans=i;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n/*\n\u540e\u7f00\u6570\u7ec4\u597d\u9898\uff0c\u9898\u89e3\u8bf4\u662f\u5927\u6c34\u9898\uff0c\u4f46\u6211\u770b\u4e0d\u51fa\u6765\u3002\n\u9898\u8fd8\u662f\u505a\u5f97\u592a\u5c11\uff0c\u5bf9\u540e\u7f00\u6570\u7ec4\u7684\u7406\u89e3\u4e5f\u592a\u6d45\u3002\n\u6211\u4eec\u7528\u4e00\u4e2a\u957f\u5ea6\u4e3ak\u7684\u6ed1\u5757\u53bb\u6ed1\u5b57\u7b26\u4e32\u3002\n\u5b57\u7b26\u4e32\u7684\u5148\u540e\u987a\u5e8f\u662f\u6309\u540e\u7f00\u6392\u5e8f\u6765\u7684\u3002\n\u6211\u4eec\u7ef4\u62a4\u4e86\u533a\u95f4\u7684\u6700\u5c0fheight\u503c\uff0c\u8bb0\u4e3ax\uff0c\n\u8fd9\u662f\u4ec0\u4e48\uff1f\n\u5982\u679cx\u4e3a0\uff0c\u8bf4\u660e\u8fd9\u6837\u7684\u524d\u7f00\u5931\u8d25\u4e86\uff0c\u51fa\u73b0\u6b21\u6570\u4e0d\u5230k\n\u5982\u679cx\u4e0d\u4e3a0\uff0c\u8bf4\u660e\u6b64\u65f6\u957f\u5ea6\u4e3ax\u7684\u524d\u7f00\u81f3\u5c11\u6709k\u4e2a\n\u4f46\u6211\u4eec\u8981\u6c42\u6070\u597d\u4e3ak\u7684\u4e2a\u6570\n\u90a3\u600e\u4e48\u529e\u5462\uff1f\n\u6709\u4e86\uff0c\u6211\u4eec\u5224\u4e00\u4e0b,h[i-k+1]\u548ch[i+1]\n\u5982\u679c\u8fd9\u4e24\u4e2a\u503c\u4e2d\u6709\u503c\u5927\u4e8e\u7b49\u4e8ex\uff0c\u8fd9\u8bf4\u660e\u6b64\u65f6\u957f\u5ea6\u4e3ax\u7684\u524d\u7f00\u8d85\u8fc7\u4e86k\u4e2a\n\u5426\u5219\u8fd9\u6837\u957f\u5ea6\u4e3ax\u7684\u524d\u7f00\u6070\u597d\u7b49\u4e8ek\u4e2a\u3002\n\u8003\u8651\u524d\u7f00\u4e2d\u80fd\u5206\u51fa\u591a\u5c11\u7684\u524d\u7f00\u6070\u597d\u7b49\u4e8ek\uff0c\u6700\u5c0f\u7684\u5c31\u662fmax(h[i-k+1],h[i+1])+1,\u6700\u5927\u7684\u662fx\n\u8ba1\u7b97\u7b54\u6848\u5c31\u5dee\u5206\u4e00\u4e0b\u5373\u53ef\uff0c\u7ef4\u62a4\u6700\u5927\u503c .\n*/\n```\n\n",
        "postTime": 1561555728,
        "uid": 39484,
        "name": "\u7c73\u5947",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5341 \u3010[TJOI2019]\u7532\u82ef\u5148\u751f\u548c\u5927\u4e2d\u950b\u7684\u5b57\u7b26\u4e32\u3011"
    },
    {
        "content": "\u6211\u5728\u8fd9\u91cc\u8bb2\u4e00\u4e0bSA\u7684\u505a\u6cd5\n\n\u9996\u5148\u6211\u4eec\u6c42\u4e0bHeight\u6570\u7ec4\n\n\u6211\u4eec\u7528\u957f\u4e3ak\u7684\u6ed1\u5757\u5728\u4e0a\u9762\u6ed1\u52a8\n\n\u51fa\u73b0\u6070\u597dk\u6b21\uff0c\u610f\u5473\u7740\n\n$\\max\\{Height_l,Height_{r+1}\\} \\leq ln \\leq \\min\\{Height_{l+1\\ to \\ r}\\}$\n\n\u7b26\u5408\u6761\u4ef6\u7684\u957f\u5ea6\u662f\u4e00\u6bb5\u533a\u95f4\n\n\u6211\u4eec\u53ef\u4ee5\u79bb\u7ebf\u4e0b\u6765\u5dee\u5206\u7edf\u8ba1\n\n~~SA\u7a7a\u95f4\u5c0f\u5e38\u6570\u5c0f\u4e3a\u4ec0\u4e48\u975e\u8981\u7528SAM\u5462~~\n\n```cpp\n#include\"cstdio\"\n#include\"cstring\"\n#include\"iostream\"\n#include\"algorithm\"\nusing namespace std;\n\nconst int MAXN=1e5+5;\n\nint n,T,mx,hd,tl;\nchar ch[MAXN];\nint id[MAXN],rnk[MAXN],SA[MAXN],bnk[MAXN],Ht[MAXN];\nint cnt[MAXN],q[MAXN];\n\nint read()\n{\n    int x=0;char ch=getchar();\n    while(ch<'0'||'9'<ch) ch=getchar();\n    while('0'<=ch&&ch<='9') x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n    return x;\n}\n\nvoid shel()\n{\n    for(int i=1;i<=n;++i) ++bnk[rnk[i]];\n    for(int i=1;i<=mx;++i) bnk[i]+=bnk[i-1];\n    for(int i=1;i<=n;++i) SA[++bnk[rnk[id[i]]-1]]=id[i];\n    for(int i=0;i<=mx;++i) bnk[i]=0;\n}\n\nvoid GetSA()\n{\n    mx=0;\n    for(int i=1;i<=n;++i) id[i]=i,rnk[i]=ch[i],mx=mx<rnk[i]?rnk[i]:mx;\n    shel();\n    for(int k=1;k<n;k<<=1){\n        for(int i=1;i<=k;++i) id[i]=n-k+i;\n        int ct=k;\n        for(int i=1;i<=n;++i) if(SA[i]>k) id[++ct]=SA[i]-k;\n        shel();swap(rnk,id);rnk[SA[1]]=1;\n        for(int i=2;i<=n;++i){\n            if(id[SA[i]]==id[SA[i-1]]&&id[SA[i]+k]==id[SA[i-1]+k]) rnk[SA[i]]=rnk[SA[i-1]];\n            else rnk[SA[i]]=rnk[SA[i-1]]+1;\n        }if(rnk[SA[n]]==n) break;\n        mx=rnk[SA[n]];\n    }return;\n}\n\nvoid GetHt()\n{\n    int k=0;\n    for(int i=1;i<=n;++i){\n        if(rnk[i]==1) continue;\n        int tmp=SA[rnk[i]-1];\n        k=k?k-1:0;\n        while(tmp+k<=n&&i+k<=n&&ch[i+k]==ch[tmp+k]) ++k;\n        Ht[rnk[i]]=k;\n    }return;\n}\n\nint GetLCP(int x,int y)\n{\n    if(x>y) return n-SA[y]+1;\n    return Ht[q[hd]];\n}\n\nint main()\n{\n    T=read();\n    while(T--){\n        memset(id,0,sizeof(id));\n        memset(cnt,0,sizeof(cnt));\n        scanf(\"%s\",ch+1);n=strlen(ch+1);\n        int w;scanf(\"%d\",&w);Ht[n+1]=0;\n        GetSA(),GetHt();hd=1;tl=0;\n        for(int i=2;i<=w;++i){\n            while(hd<=tl&&Ht[q[tl]]>=Ht[i]) --tl;\n            q[++tl]=i;\n        }for(int i=w;i<=n;++i){\n            if(i-q[hd]+1>=w) ++hd;\n            while(hd<=tl&&Ht[q[tl]]>=Ht[i]) --tl;\n            q[++tl]=i;\n            int tmp=GetLCP(i+1,i+w-1);\n            int g=max(Ht[i-w+1],Ht[i+1]);\n            if(g<=tmp) ++cnt[g+1],--cnt[tmp+1];\n        }int tmp=-1,mm=1;\n        for(int i=1;i<=n;++i){\n            cnt[i]+=cnt[i-1];\n            if(cnt[i]>=mm) mm=cnt[i],tmp=i;\n        }printf(\"%d\\n\",tmp);\n    }return 0;\n}\n```",
        "postTime": 1556885773,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5341 \u3010[TJOI2019]\u7532\u82ef\u5148\u751f\u548c\u5927\u4e2d\u950b\u7684\u5b57\u7b26\u4e32\u3011"
    },
    {
        "content": "\u6211\u4eec\u8003\u8651\u6309\u7167$suffix$\u7684$rank$\u6765\u8003\u8651\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u957f\u5ea6\u4e3a$k$\u7684\u7a97\u53e3\u6765\u6ed1\u52a8\uff0c\u7a97\u53e3\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\u90fd\u662f\u53ef\u80fd\u7684\u5b50\u4e32\u7684\u8d77\u70b9\uff0c\u6211\u4eec\u8003\u8651\u6ee1\u8db3\u8981\u6c42\u7684\u5b50\u4e32\u957f\u5ea6\u7684\u4e0a\u4e0b\u754c\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u4e0a\u754c\u5c31\u662f$min_{l+1}^r(h[i])$,\u90a3\u4e48\u4e0b\u754c\u8be5\u5982\u4f55\u8003\u8651\uff1f\n\n\u5176\u5b9e\u6211\u4eec\u53ea\u8981\u7ed9\u51fa\u7ea6\u675f\u6761\u4ef6\u5373\u53ef\uff0c\u8003\u8651\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e$max(h[l],h[r+1])$\u7684\u51fa\u73b0\u6b21\u6570\u90fd$>k$\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u786e\u5b9a\u4e86\u4e0b\u754c\u3002\n\n\u5bf9\u4e8e\u7b54\u6848\u7edf\u8ba1\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u5c31\u662f\u7edf\u8ba1$n$\u4e2a\u7ebf\u6bb5\u8986\u76d6\u6b21\u6570\u6700\u591a\u7684\u70b9\uff0c\u79bb\u7ebf\u5dee\u5206\u5373\u53ef\u3002\n\n```cpp\nconst int N=2e5+5;\n\nint T,n,m,p,k;\nint sa[N],oldrk[N],rk[N],cnt[N],id[N],px[N];\nint num[N],q[N],h[N];\nchar s[N];\n\nbool cmp(int x,int y,int w)\n{\n    return oldrk[x]==oldrk[y]&&oldrk[x+w]==oldrk[y+w];\n}\nvoid SA()\n{\n\tms(cnt),ms(rk),ms(oldrk);\n    n=strlen(s+1),m=131;\n    for(int i=1;i<=n;++i) ++cnt[rk[i]=s[i]];\n    for(int i=1;i<=m;++i) cnt[i]+=cnt[i-1];\n    for(int i=n;i>=1;--i) sa[cnt[rk[i]]--]=i;\n    for(int w=1;w<n;w<<=1,m=p)\n    {\n        p=0;\n        for(int i=n;i>n-w;--i) id[++p]=i;\n        for(int i=1;i<=n;++i) if(sa[i]>w) id[++p]=sa[i]-w;\n        ms(cnt);\n        for(int i=1;i<=n;++i) ++cnt[px[i]=rk[id[i]]];\n        for(int i=1;i<=m;++i) cnt[i]+=cnt[i-1];\n        for(int i=n;i>=1;--i) sa[cnt[px[i]]--]=id[i];\n        memcpy(oldrk,rk,sizeof(rk)),p=0;\n        for(int i=1;i<=n;++i) rk[sa[i]]=cmp(sa[i],sa[i-1],w)?p:++p;\n    }\n\tfor(int i=1,j=0;i<=n;++i)\n\t{\n\t\tif(j) --j;\n\t\twhile(s[i+j]==s[sa[rk[i]-1]+j]) ++j;\n\t\th[rk[i]]=j;\n\t}\n\th[n+1]=0;\n}\nint main()\n{\n\tfio();\n\tgi(T);\n\twhile(T--)\n\t{\n\t\tscanf(\"%s\",s+1),gi(k);\n\t\tSA(),ms(num);\n\t\tint hd=1,tl=0;\n\t\tfor(int i=2;i<=k;++i)\n\t\t{\n\t\t\twhile(hd<=tl&&h[q[tl]]>=h[i]) --tl;\n\t\t\tq[++tl]=i;\n\t\t}\n\t\tfor(int i=k;i<=n;++i)\n\t\t{\n\t\t\tif(i-q[hd]+1>=k) ++hd;\n\t\t\twhile(hd<=tl&&h[q[tl]]>=h[i]) --tl;\n\t\t\tq[++tl]=i;\n\t\t\tint t=(k==1)?n-sa[i]+1:h[q[hd]];\n\t\t\tint g=max(h[i-k+1],h[i+1]);\n\t\t\tif(g<=t) ++num[g+1],--num[t+1];\n\t\t}\n\t\tint pos=-1,maxx=1;\n\t\tfor(int i=1;i<=n;++i)\n\t\t{\n\t\t\tnum[i]+=num[i-1];\n\t\t\tif(num[i]>=maxx) maxx=num[i],pos=i;\n\t\t}\n\t\tprint(pos),pc(10);\n\t}\n\tend();\n}\n```",
        "postTime": 1584363935,
        "uid": 208081,
        "name": "MikukuOvO",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5341 \u3010[TJOI2019]\u7532\u82ef\u5148\u751f\u548c\u5927\u4e2d\u950b\u7684\u5b57\u7b26\u4e32\u3011"
    },
    {
        "content": "**\u642c\u8fd0\u5b98\u65b9\u9898\u89e3\u3002**\n\n------------\n\n\u9898\u610f\u4e3a\u627e\u51fa\u4ec5\u51fa\u73b0$k$\u6b21\u7684\u5b50\u4e32\u96c6\u5408$x_k$\uff0c\u7136\u540e\u7edf\u8ba1\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5b50\u4e32\u957f\u5ea6\u3002\n\n\u7531 _IOI2009 \u56fd\u5bb6\u96c6\u8bad\u961f\u8bba\u6587 \u540e\u7f00\u6570\u7ec4 \u7f57\u7a57\u9a9e \u540e\u7f00\u6570\u7ec4 \u5904\u7406\u5b57\u7b26\u4e32\u7684\u6709\u529b \u5de5\u5177\u7684\u8bba\u6587\u4e2d 2.2.2\u5b50\u4e32\u7684\u4e2a\u6570_ \uff0c\u53ef\u4ee5\u77e5\u9053\uff0c$k=1$\u7684\u60c5\u51b5\u4ec5\u51fa\u73b0$1$\u6b21\u7684\u5b50\u4e32\u4e2a\u6570\u4e3a $\\sum n - sa[i] + 1 - height[i]$ \n\n\n\u8003\u8651\u66f4\u666e\u904d\u7684\u60c5\u51b5\u53ef\u5f97 $min\\{height[i+1],height[i+2],\\cdots,height[i+k-1]\\}-max\\{height[i],height[i+k+1]\\}$ \u5373\u4ee5$sa[i]$\u4e3a\u5f00\u5934\u7684\u5b50\u4e32\uff0c\u4ec5\u51fa\u73b0$k$\u6b21\u7684\u5b50\u4e32\u957f\u5ea6\u7684\u4e0a\u754c\u662f$sa[i]$\u5230$sa[i+k-1]$\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u957f\u5ea6\uff1b\u4e0b\u754c\u4e3a\u4e0e\u8fd9$k$\u4e2a\u4e32\u76f8\u90bb\u7684\u4e32\u548c\u8fd9$k$\u4e2a\u4e32\u7684\u6700\u957f\u516c\u5171\u524d\u7f00$+1$\u3002\n\n\u56e0\u800c\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u5df2\u77e5$n$\u4e2a\u533a\u95f4\uff0c\u6c42\u8986\u76d6\u6700\u591a\u6b21\u70b9\u7684\u6700\u5927\u503c\u4e3a\u591a\u5c11\uff0c\u4f7f\u7528\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u5373\u53ef\u3002\n\n------------\n\nstd\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\n\nint wa[100005],wb[100005],wf[100005],wv[100005],ranking[100005],sa[100005],height[100005],s[100005],q[100005],now[100005],sum1[100005],sum2[100005],length;\nchar str[100005];\n\nint lowbit(int number)\n{\n    return number & (-number);\n}\n\nvoid add(int position, int value)\n{\n    while (position <= length)\n    {\n        sum2[position] += value;\n        position += lowbit(position);\n    }\n}\n\nint getsum(int position)\n{\n    int answer = 0;\n    while (position)\n    {\n        answer += sum2[position];\n        position -= lowbit(position);\n    }\n    return answer;\n}\n\nint cmp(int *r, int a, int b, int l)\n{\n    return r[a] == r[b] && r[a + l] == r[b + l];\n}\n\nvoid multi(int *r, int *sa, int n, int m)\n{\n    int *t,i,j,p;\n    int *x = wa;\n    int *y = wb;\n    for (i = 0; i < m; i++)\n    {\n        wf[i] = 0;\n    }\n    for (i = 0; i < n; i++)\n    {\n        wf[x[i] = r[i]]++;\n    }\n    for (i = 1; i < m; i++)\n    {\n        wf[i] += wf[i - 1];\n    }\n    for (i = n - 1; i >= 0; i--)\n    {\n        sa[--wf[x[i]]] = i;\n    }\n    for (p = 1, i = 1; p < n; i *= 2, m = p)\n    {\n        for (p = 0, j = n - i; j < n; j++)\n        {\n            y[p++] = j;\n        }\n        for (j = 0; j < n; j++)\n        {\n            if (sa[j] >= i)\n            {\n                y[p++] = sa[j] - i;\n            }\n        }\n        for (j = 0; j < n; j++)\n        {\n            wv[j] = x[y[j]];\n        }\n        for (j = 0; j < m; j++)\n        {\n            wf[j] = 0;\n        }\n        for (j = 0; j < n; j++)\n        {\n            wf[wv[j]]++;\n        }\n        for (j = 1; j < m; j++)\n        {\n            wf[j] += wf[j - 1];\n        }\n        for (j = n - 1; j >= 0; j--)\n        {\n            sa[--wf[wv[j]]] = y[j];\n        }\n        for (t = x, x = y, y = t, p = 1, x[sa[0]] = 0, j = 1; j < n; j++)\n        {\n            x[sa[j]] = cmp(y,sa[j - 1],sa[j],i) ? p - 1 : p++;\n        }\n    }\n}\n\nvoid getheight(int *r, int n)\n{\n    int j,k;\n    k = 0;\n    for (int i = 0; i < n; i++)\n    {\n        ranking[sa[i]] = i;\n    }\n    for (int i = 0; i < n - 1; i++)\n    {\n        if (k)\n        {\n            k--;\n        }\n        j = sa[ranking[i] - 1];\n        while (r[i + k] == r[j + k])\n        {\n            k++;\n        }\n        height[ranking[i]] = k;\n    }\n}\n\n\nint main()\n{\n    freopen(\"substring.in\", \"r\", stdin);\n    freopen(\"substring.out\", \"w\", stdout);    \n    int t,k,l,r,status,maxi,maxi2,maxi3,maxl;\n    scanf(\"%d\",&t);\n    while (t--)\n    {\n        r = status = maxi = maxi2 = 0;\n        l = 1;\n        memset(sum2,0,sizeof(sum2));\n        scanf(\"%s%d\",&str,&k);\n        length = strlen(str);\n        for (int i = 0; i < length; i++)\n        {\n            s[i] = str[i] - 'a' + 1;\n        }\n        s[length] = 0;\n        multi(s,sa,length + 1,30);\n        getheight(s,length + 1);\n        memset(q,0,sizeof(q));\n        memset(now,0,sizeof(now));\n        for (int i = 1; i < length; i++)\n        {\n            height[i] = height[i + 1];\n        }\n        if (k == 1)\n        {\n            height[length] = 0;\n            for (int i = 1; i <= length; i++)\n            {\n                now[i] = length - sa[i];\n                now[i] -= max(height[i - 1],height[i]);\n                add(length - sa[i] + 1 - now[i],1);\n                add(length - sa[i] + 1,-1);\n            }\n        }\n        else\n        {\n\t\t\tfor (int i = 1; i < length; i++)\n\t\t\t{\n\t\t\t\twhile(l <= r && q[l] <= i - k + 1) \n\t\t\t\t{\n\t\t\t\t\tl++;\n\t\t\t\t}\n\t\t\t\twhile(l <= r && height[i] < height[q[r]]) \n\t\t\t\t{\n\t\t\t\t\tr--;\n\t\t\t\t}\n\t\t\t\tq[++r] = i;\n\t\t\t\tnow[i] = height[q[l]];\n\t\t\t}\n\t\t\tnow[k - 2] = 0;\n\t\t\tfor (int i = k - 1; i < length; i++)\n\t\t\t{\n\t\t\t\tif (status)\n\t\t\t\t{\n\t\t\t\t\tif (now[i] > now[i - 1])\n\t\t\t\t\t{\n\t\t\t\t\t\tmaxi = now[i];\n\t\t\t\t\t\tmaxi2 = now[i - 1];\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (now[i] >= now[i - 1])\n\t\t\t\t\t{\n\t\t\t\t\t\tmaxi2 = maxi;\n\t\t\t\t\t\tmaxi = now[i];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstatus = 1;\n\t\t\t\t\t\tmaxi2 = max(maxi2,now[i]);\n\t\t\t\t\t\tadd(maxi2 + 1,1);\n\t\t\t\t\t\tadd(maxi + 1,-1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!status)\n\t\t\t{\n\t\t\t\tadd(maxi2 + 1,1);\n\t\t\t\tadd(maxi + 1,-1);\n\t\t\t}\n\t\t}\n\t\tmaxi3 = 0;\n\t\tfor (int i = 1; i <= length; i++)\n\t\t{\n\t\t\tif (maxi3 <= getsum(i))\n\t\t\t{\n\t\t\t\tmaxi3 = getsum(i);\n\t\t\t\tmaxl = i;\n\t\t\t}\n\t\t}\n\t\tif(maxi3==0) maxl=-1;\n\t\tprintf(\"%d\\n\",maxl);\n\t}\n    return 0;\n}\n\n```\n",
        "postTime": 1557587408,
        "uid": 56614,
        "name": "ThomasX",
        "ccfLevel": 4,
        "title": "P5341 \u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u7ed9\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6c42\u4e00\u4e2a $l$ \u6ee1\u8db3\u5bf9\u4e8e\u6240\u6709\u51fa\u73b0\u6b21\u6570\u4e3a $k$ \u7684\u5b50\u4e32\uff0c\u957f\u5ea6\u4e3a $l$ \u7684\u5b50\u4e32\u662f\u5176\u4e2d\u6700\u591a\u4e14\u6700\u957f\u7684\u3002\n\n## \u5410\u69fd\n\u600e\u4e48\u51fa\u4e86\u4e09\u9053\u677f\u5b50\u554a\u3002\u3002\u3002\n\n## \u9898\u89e3\n\u7edf\u8ba1\u5b50\u4e32\u4fe1\u606f\u6240\u4ee5\u8003\u8651\u5efa\u4e00\u9897 SAM \u51fa\u6765\u3002  \n\n\u5efa\u5b8c\u4ee5\u540e\u628a\u6bcf\u4e2a\u70b9\u7684 $siz$ \u518d\u6c42\u4e00\u6c42\u3002  \n\n\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\u5b9e\u9645\u4e0a\u4e00\u4e2a\u8282\u70b9\u7684 $siz$ \u5c31\u662f\u8bf4\u5bf9\u4e8e\u67d0\u4e00\u5768\u5b50\u4e32\uff0c\u5b83\u4eec\u7684\u51fa\u73b0\u6b21\u6570\u90fd\u662f $siz$\uff0c\u800c\u8fd9\u4e00\u5768\u5b50\u4e32\u6070\u597d\u662f\u957f\u5ea6\u4e3a $(len_{link_i}, len_i]$ \u7684\u51e0\u4e2a\u5b50\u4e32\u3002  \n\n\u5f00\u4e00\u4e2a\u6570\u7ec4\u6765\u7edf\u8ba1\u6709\u591a\u5c11\u4e2a\u957f\u5ea6\u4e3a $i$ \u7684\u5b50\u4e32\uff0c\u59d1\u4e14\u53eb\u5b83 $cnt$\u3002\n\n\u90a3\u4e48\u4e00\u4e2a $siz=k$ \u7684\u8282\u70b9\u4f1a\u8ba9 $[len_{link_i}+1,len_i]$ \u8fd9\u4e00\u6bb5\u7684 $cnt_i$ \u52a0\u4e00\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e48\u641e\u597d\u50cf\u8fd8\u9700\u8981\u5199\u4e2a\u6811\u72b6\u6570\u7ec4\u5565\u7684\u53bb\u7ef4\u62a4\u8fd9\u73a9\u610f\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u6211\u4eec\u53ea\u5728\u6240\u6709\u64cd\u4f5c\u7ed3\u675f\u540e\u9700\u8981\u7edf\u8ba1\u6570\u636e\uff0c\u6240\u4ee5\u5dee\u5206\u4e00\u4e0b\u5c31\u5b8c\u4e8b\u4e86\u3002  \n\n\u6c42\u7b54\u6848\u53ea\u9700\u8981\u627e\u51fa\u4e00\u4e2a\u6700\u5927\u7684 $cnt_i$ \u5e76\u4e14\u6ee1\u8db3 $i$ \u4e5f\u662f\u6700\u5927\u7684\u5c31\u53ef\u4ee5\u4e86\uff0c\u5982\u679c\u6240\u6709 $cnt_i$ \u90fd\u662f $0$ \u90a3\u4e48\u7b54\u6848\u5c31\u662f $-1$\u3002\n\n\u7136\u540e\u7a0d\u5fae\u641e\u4e00\u70b9\u7ec6\u8282\uff0c\u5361\u4e00\u5361\u5e38\u6570\uff0c\u5c31\u8fc7\u4e86\u3002  \n\n\u5982\u679c $T$ \u5c0f\u4e00\u70b9\u6216\u8005\u5e72\u8106\u4e0d\u51fa\u591a\u7ec4\u6570\u636e\u5c31\u662f\u4e00\u9053\u4e0d\u5361\u5e38\u7684 SAM \u6a21\u677f\u597d\u9898\u4e86\uff08\uff09\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int int_t;\n\nnamespace SAM {\n    int_t ch[200010][26], link[200010], len[200010], siz[200010], cntt[200010], mxl, last, cnt;\n    vector<int_t> son[200010];\n\n    void insert(int_t w){\n        if(cnt == 0) link[cnt++] = -1, siz[0] = 0;\n        int_t rt = cnt++, tx = last;\n        len[rt] = len[last] + 1;\n        siz[rt] = 1;\n        while(~tx && !ch[tx][w]) ch[tx][w] = rt, tx = link[tx];\n        if(~tx) {\n            int_t ty = ch[tx][w];\n            if(len[tx] + 1 == len[ty]) link[rt] = ty;\n            else {\n                int_t cloned = cnt++;\n                memcpy(ch[cloned], ch[ty], sizeof ch[ty]);\n                len[cloned] = len[tx] + 1;\n                link[cloned] = link[ty];\n                siz[cloned] = 0;\n                while(~tx && ch[tx][w] == ty) ch[tx][w] = cloned, tx = link[tx];\n                link[rt] = link[ty] = cloned;\n            }\n        } else link[rt] = 0;\n        last = rt;\n    }\n\n    void dfs(int_t rt, int_t k) {\n        for(int_t to : son[rt]) dfs(to, k), siz[rt] += siz[to];\n        if(rt && siz[rt] == k) cntt[len[rt]] ++, cntt[len[link[rt]]] --;\n        mxl = max(mxl, len[rt]);\n    }\n\n    void init() {\n        memset(ch, 0, sizeof ch);\n        for(int_t i=0;i<cnt;i++) son[i].clear();\n        last = cnt = mxl = 0;\n    }\n\n    int_t calcAns(int_t k) {\n        for(int_t i=1;i<cnt;i++) son[link[i]].push_back(i);\n        dfs(0, k);\n        int_t ans = -1, p = 0, ans2 = 0;\n        for(int_t i=mxl;~i;i--) {\n            p += cntt[i]; cntt[i] = 0;\n            if(p > ans2) ans = i, ans2 = p;\n        }\n        return ans;\n    }\n}\n\nchar tmp[1000100];\n\nint main() {\n    int_t T; scanf(\"%d\", &T);\n    while(T--) {\n        int_t k; scanf(\"%s%d\", tmp, &k);\n        int_t len = strlen(tmp);\n        SAM::init();\n        for(int_t i=0;i<len;i++) SAM::insert(tmp[i] - 'a');\n        cout << SAM::calcAns(k) << \"\\n\";\n    }\n}\n```",
        "postTime": 1591001235,
        "uid": 74020,
        "name": "Rainy_chen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5341 \u3010[TJOI2019]\u7532\u82ef\u5148\u751f\u548c\u5927\u4e2d\u950b\u7684\u5b57\u7b26\u4e32\u3011"
    },
    {
        "content": "~~\u4eca\u5e74TJOI\u80bf\u4e48\u80a5\u4e8b\u554a\uff1f\u5df2\u7ecf\u56db\u9053\u5927\u6c34\u9898\u60f9\u3002\u3002\u3002~~\n\n\u76f4\u63a5\u8dd1\u51fasam\u6765\uff0c\u987a\u4fbf\u7ef4\u62a4$right$\u96c6\u5408\u5927\u5c0f\uff0c\u5bf9\u4e8e\u90a3\u4e9b$right$\u5927\u5c0f\u4e3a$k$\u7684\u8282\u70b9\u5728\u6570\u7ec4$[mx[fail[x]]+1,mx[x]]$\u533a\u95f4\u52a01\uff0c\u53ef\u4ee5\u7528\u5dee\u5206\u5b9e\u73b0\u3002\u7136\u540e\u626b\u4e00\u904d\u5c31\u884c\u4e86\u3002\n\n\u63d0\u793a\uff1a\u591a\u6d4b\u4e0d\u6e05\u7a7a\uff0c\u7206\u96f6\u4e24\u884c\u6cea\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nconst int maxn=200000+3;\n\ninline int getint(){\n\tbool flag=0;\n\tregister int n=0;\n\tregister char ch=getchar();\n\twhile(ch<'0' || ch>'9'){\n\t\tif(ch=='-')flag=1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0' && ch<='9'){\n\t\tn=ch-'0'+(n<<3)+(n<<1);\n\t\tch=getchar();\n\t}\n\treturn flag?(-n):n;\n}\n\n\nint T;\nint n;\nint k;\nchar s[maxn];\nint dt[maxn];\n\nstruct SAM{\n\tint tot;\n\tint last;\n\tint root;\n\tint c[maxn];\n\tint p[maxn];\n\tint mx[maxn];\n\tint fail[maxn];\n\tint size[maxn];\n\tint nxt[maxn][26];\n\tinline void Init(){\n\t\tmemset(c,0,(tot+2)<<2);\n\t\tmemset(p,0,(tot+2)<<2);\n\t\tmemset(mx,0,(tot+2)<<2);\n\t\tmemset(dt,0,(tot+2)<<2);\n\t\tmemset(fail,0,(tot+2)<<2);\n\t\tmemset(size,0,(tot+2)<<2);\n\t\tfor(int i=1;i<=tot;i++)\n\t\t\tmemset(nxt[i],0,26<<2);\n\t\tlast=tot=root=1;\n\t}\n\tinline int RepNode(int p,int x){\n\t\tint q=nxt[p][x];\n\t\tif(mx[q]==mx[p]+1)return q;\n\t\tint nq=++tot;\n\t\tmx[nq]=mx[p]+1;\n\t\tfail[nq]=fail[q];\n\t\tfail[q]=nq;\n\t\tmemcpy(nxt[nq],nxt[q],26<<2);\n\t\twhile(p && nxt[p][x]==q){\n\t\t\tnxt[p][x]=nq;\n\t\t\tp=fail[p];\n\t\t}\n\t\treturn nq;\n\t}\n\tinline void Extend(int x){\n\t\tint p=last;\n\t\tint np=++tot;\n\t\tlast=np;\n\t\tsize[last]++;\n\t\tmx[np]=mx[p]+1;\n\t\twhile(p && nxt[p][x]==0){\n\t\t\tnxt[p][x]=np;\n\t\t\tp=fail[p];\n\t\t}\n\t\tif(p==0)fail[np]=root;\n\t\telse fail[np]=RepNode(p,x);\n\t}\n\tinline void Collect(){\n\t\tfor(int i=1;i<=tot;i++)c[mx[i]]++;\n\t\tfor(int i=1;i<=tot;i++)c[i]+=c[i-1];\n\t\tfor(int i=tot;i>=1;i--)p[c[mx[i]]--]=i;\n\t\tfor(int i=tot,x;i>=1;i--){\n\t\t\tx=p[i];\n\t\t\tif(size[x]==k && mx[fail[x]]+1<=mx[x])dt[mx[fail[x]]+1]++,dt[mx[x]+1]--;\n\t\t\tsize[fail[x]]+=size[x];\n\t\t}\n\t}\n};\nSAM sam;\n\nint main(){\n#ifdef Ezio\n\tfreopen(\"input\",\"r\",stdin);\n#endif\n\n\tT=getint();\n\twhile(T--){\n\t\tsam.Init();\n\t\tscanf(\"%s\",s+1);\n\t\tn=strlen(s+1);\n\t\tk=getint();\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tsam.Extend(s[i]-'a');\n\t\tsam.Collect();\n\t\tint Mx=0;\n\t\tint ans=-1;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tdt[i]+=dt[i-1];\n\t\t\tif(dt[i] && dt[i]>=Mx){\n\t\t\t\tMx=dt[i];\n\t\t\t\tans=i;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1556890273,
        "uid": 77450,
        "name": "__Ezio__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5341 \u3010[TJOI2019]\u7532\u82ef\u5148\u751f\u548c\u5927\u4e2d\u950b\u7684\u5b57\u7b26\u4e32\u3011"
    }
]