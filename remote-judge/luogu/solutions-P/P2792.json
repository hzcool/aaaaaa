[
    {
        "content": "## \u6700\u5c0f\u6811\u5f62\u56fe--\u6731\u5218\u7b97\u6cd5\n\u901a\u8fc7\u4e0d\u65ad\u8c03\u6574\u6765\u5b9e\u73b0\u6700\u4f18\u89e3\u3002\n\n\u5927\u81f4\u601d\u8def\u5982\u4e0b\uff1a\n\n\u9996\u5148\u53bb\u6389\u81ea\u73af\u3002\n\n\u7528\u8d2a\u5fc3\u7684\u601d\u60f3\u7ed9\u6bcf\u4e2a\u70b9\u9009\u62e9\u4e00\u6761\u6700\u5c0f\u7684\u5165\u8fb9\uff0c\u8bb0\u5f55\u8fde\u63a5\u7684\u70b9\u3002\n\n\u7279\u5224\u6b64\u65f6\u5982\u679c\u6709\u70b9\u6ca1\u6709\u5165\u8fb9(\u9664\u6839\u4ee5\u5916)\uff0c\u663e\u800c\u6613\u89c1\u6b64\u65f6\u65e0\u89e3\u3002\n\u7b97\u4e0a\u6bcf\u4e2a\u70b9\u5165\u8fb9\u7684\u4ee3\u4ef7\uff0c\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u6b64\u65f6\u5224\u5b9a\u6709\u6ca1\u6709\u6709\u5411\u73af\uff0c\u5982\u679c\u6ca1\u6709\u76f4\u63a5\u8f93\u51fa\u3002\n\u5982\u679c\u6709\u6709\u5411\u73af\uff0c\u7f29\u70b9\uff0c\u5e76\u4e14\u628a\u8fde\u51fa\u53bb\u7684\u8fb9\u90fd\u51cf\u53bb\u8fde\u51fa\u53bb\u7684\u70b9\u7684\u5165\u8fb9\uff0c\u56e0\u4e3a\u4ee3\u4ef7\u5df2\u7ecf\u7edf\u8ba1\u3002\n\u4e8c\u6b21\u5efa\u56fe\uff08\u6216\u591a\u6b21\uff09\uff0c\u5bf9\u65b0\u56fe\u91cd\u590d\u6240\u6709\u64cd\u4f5c\u3002\n# code\n```\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=100010;\nconst double inf=0x7f7f7f;\nint n,tot,m,cnt,need[maxn],pre[maxn],vis[maxn],id[maxn];\ndouble ans,cost[maxn],prize,inw[maxn];\nstruct Edge{\n    int u,v;\n    double w;\n}e[maxn];\ninline void mst(){\n    register int num=n,rt=1,idx;\n    while(1){// \u521d\u59cb\u5316\n        for(register int i=1;i<=num;++i) id[i]=vis[i]=pre[i]=-1,inw[i]=inf;// \u9009\u5165\u8fb9\n        for(register int i=1;i<=cnt;++i)\n            if(inw[e[i].v]>e[i].w&&e[i].u!=e[i].v) inw[e[i].v]=e[i].w,pre[e[i].v]=e[i].u;\n        pre[rt]=rt,idx=inw[rt]=0;// \u7f29\u73af\uff0c\u7edf\u8ba1\u8d21\u732e\n        for(register int i=1;i<=num;++i){\n            ans+=inw[i];\n            if(vis[i]==-1){\n                register int nw=i;\n                while(vis[nw]==-1) vis[nw]=i,nw=pre[nw];\n                if(vis[nw]==i&&nw!=rt){\n                    id[nw]=++idx;\n                    for(register int j=pre[nw];j!=nw;j=pre[j]) id[j]=idx;\n                }\n            }\n        }// \u6ca1\u6709\u73af\u7ed3\u675f\n        if(!idx) return; // \u91cd\u6807\u53f7\uff0c\u8bb0\u5f55\u65b0\u56fe\n        for(register int i=1;i<=num;++i) if(id[i]==-1) id[i]=++idx;\n        for(register int i=1;i<=cnt;++i)\n            e[i].w -=inw[e[i].v],e[i].u=id[e[i].u],e[i].v=id[e[i].v];\n        num=idx,rt=id[rt];\n    }\n}\n\nint main(){\n    scanf(\"%d\",&tot),n=2;\n    for(register int i=1;i<=tot;++i){\n        scanf(\"%lf%d\",&cost[n],&need[n]);\n        if(need[n]) e[++cnt]=(Edge){1,n,cost[n]},vis[i]=n++;\n    }\n    --n,scanf(\"%d\",&m);\n    for(register int i=1,a,b;i<=m;++i){\n        scanf(\"%d%d%lf\",&a,&b,&prize);\n        a=vis[a],b=vis[b];\n        if(a && b){\n            cost[b]=min(cost[b],prize);\n            e[++cnt]=(Edge){a,b,prize};\n        }\n    }\n    for(register int i=2;i<=n;++i) ans+=(need[i]-1)*cost[i];\n    mst();\n    printf(\"%.2lf\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1539434240,
        "uid": 111961,
        "name": "D_14134",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2792 \u3010[JSOI2008]\u5c0f\u5e97\u8d2d\u7269\u3011"
    },
    {
        "content": "\u7ed9\u51fa\u4e00\u4e2a\u6613\u4e8e\u7406\u89e3\u4e14\u597d\u5199\u7684\u505a\u6cd5\u3002\n\n\u6709\u4e00\u4e2a\u8d2a\u5fc3\u505a\u6cd5\uff0c\n\n- \u4ece\u6e90\u70b9\u5411\u6bcf\u4e00\u79cd\u5546\u54c1\u8fde $c_i \\times m_i$ \u7684\u8fb9\u3002\n\n- \u5bf9\u4e8e\u4f18\u60e0\u65b9\u6848 $(A,B,P)$ , \u4ece $A$ \u5411 $B$ \u8fde $P \\times m_B$ \u7684\u8fb9\u3002\n\n\u6700\u540e\u6e90\u70b9\u7684[\u6700\u5c0f\u6811\u5f62\u56fe](https://www.luogu.com.cn/problem/P4716)\u5373\u4e3a\u7b54\u6848?\n\n\u8fd9\u6837\u505a\u663e\u7136\u6709\u95ee\u9898\uff0c\u56e0\u4e3a\u5982\u679c\u540c\u65f6\u5b58\u5728\u4f18\u60e0\u65b9\u6848 $(A,B)$ \u548c $(B,A)$ \uff0c\u90a3\u4e48\u5148\u4e70\u4e00\u4ef6 $A$ , \u518d\u7528\u4f18\u60e0\u4ef7\u4e70\u5b8c $B$ , \u7136\u540e\u7528\u4f18\u60e0\u4ef7\u4e70\u5b8c $A$\uff0c\u8fd9\u79cd\u65b9\u6848\u53ef\u80fd\u66f4\u4f18\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u5c06\u4e00\u4ef6\u5546\u54c1\u62c6\u6210 $2$ \u4e2a\u70b9\uff0c\u8868\u793a\u4e70 $1$ \u4ef6\u548c\u4e70 $m_i-1$ \u4ef6\uff0c\u8fde\u8fb9\u65b9\u5f0f\u540c\u4e0a\u3002\n\n\u6ce8\u610f\u7ec6\u8282\uff0c\u4e0d\u8981\u591a\u5efa\u65b0\u70b9\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#define Inf 1e9\n\nconst int MAXN = 100 , MAXM = MAXN * ( MAXN + 1 );\n\nint m;\nstruct Edge{ int u , v; double w; Edge(){} Edge( int U , int V , double W ) { u = U , v = V , w = W; } } Graph[ MAXM + 5 ];\nvoid Add_Edge( int u , int v , double w ) { Graph[ ++ m ] = Edge( u , v , w ); }\n\nint n , k , rt , num[ MAXN + 5 ];\nstruct node { int v; double w; node(){} node( int V , double W ) { v = V , w = W; } } pre[ MAXN + 5 ];\nint vis[ MAXN + 5 ] , bel[ MAXN + 5 ];\ndouble Zhuliu( int rt ) {\n    double Ans = 0;\n    while( 1 ) {\n        for( int i = 1 ; i <= n ; i ++ ) pre[ i ] = node( 0 , Inf );\n        for( int i = 1 ; i <= m ; i ++ ) {\n            int u = Graph[ i ].u , v = Graph[ i ].v; double w = Graph[ i ].w;\n            if( u != v && pre[ v ].w > w ) pre[ v ] = node( u , w );\n        }\n        for( int i = 1 ; i <= n ; i ++ ) if( i != rt && !pre[ i ].v ) return -1;\n        \n        int cnt = 0;\n        memset( vis , 0 , sizeof( vis ) );\n        memset( bel , 0 , sizeof( bel ) );\n        for( int i = 1 , u ; i <= n ; i ++ ) {\n            if( i == rt ) continue; Ans += pre[ i ].w;\n            for( u = i ; u != rt && vis[ u ] != i ; vis[ u ] = i , u = pre[ u ].v );\n            if( u != rt && !bel[ u ] ) {\n                bel[ u ] = ++ cnt;\n                for( ; u != rt && !bel[ pre[ u ].v ] ; u = pre[ u ].v , bel[ u ] = cnt );\n            }\n        }\n        if( !cnt ) break;\n        for( int i = 1 ; i <= n ; i ++ ) if( !bel[ i ] ) bel[ i ] = ++ cnt;\n        for( int i = 1 ; i <= m ; i ++ ) {\n            int u = Graph[ i ].u , v = Graph[ i ].v; double w = Graph[ i ].w;\n            Graph[ i ].u = bel[ u ] , Graph[ i ].v = bel[ v ];\n            if( bel[ u ] != bel[ v ] ) Graph[ i ].w = w - pre[ v ].w;\n        }\n        n = cnt; rt = bel[ rt ];\n    }\n    return Ans;\n}\n\nint cnt , id[ MAXN + 5 ][ 2 ];\ndouble c;\nint main( ) {\n    scanf(\"%d\",&n); rt = ++ cnt;\n    for( int i = 1 ; i <= n ; i ++ ) {\n        scanf(\"%lf %d\",&c,&num[ i ]);\n        if( num[ i ] > 0 ) id[ i ][ 0 ] = ++ cnt , Add_Edge( rt , id[ i ][ 0 ] , c );\n        if( num[ i ] > 1 ) id[ i ][ 1 ] = ++ cnt , Add_Edge( rt , id[ i ][ 1 ] , c * ( num[ i ] - 1 ) );\n    }\n    scanf(\"%d\",&k);\n    for( int i = 1 , u , v ; i <= k ; i ++ ) {\n        scanf(\"%d %d %lf\",&u,&v,&c);\n        if( num[ u ] > 0 && num[ v ] > 0 ) Add_Edge( id[ u ][ 0 ] , id[ v ][ 0 ] , c );\n        if( num[ u ] > 0 && num[ v ] > 1 ) Add_Edge( id[ u ][ 0 ] , id[ v ][ 1 ] , c * ( num[ v ] - 1 ) );\n        if( num[ u ] > 1 && num[ v ] > 0 ) Add_Edge( id[ u ][ 1 ] , id[ v ][ 0 ] , c );\n        if( num[ u ] > 1 && num[ v ] > 1 ) Add_Edge( id[ u ][ 1 ] , id[ v ][ 1 ] , c * ( num[ v ] - 1 ) );\n    }\n    n = cnt;\n    printf(\"%.2f\\n\", Zhuliu( rt ) );\n    return 0;\n}\n```",
        "postTime": 1610354500,
        "uid": 123802,
        "name": "chihik",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2792 \u3010[JSOI2008]\u5c0f\u5e97\u8d2d\u7269\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P2792)\n\n~~\u6731\u5218\u7b97\u6cd5\u597d\uff0c\u6731\u5218\u7b97\u6cd5\u5999\uff0c\u6731\u5218\u7b97\u6cd5\u2026\u2026~~\n\n### \u9898\u76ee\u5206\u6790\n\n\u9898\u76ee\u8981\u6c42\u8d2d\u4e70\u6240\u6709\u9700\u8981\u5546\u54c1\u7684\u6700\u5c0f\u82b1\u8d39\u503c\u3002\u800c\u91cd\u70b9\u5728\u4e8e**\u4f18\u60e0\u65b9\u6848**\uff1a\n\n>\u5982\u679c\u60a8\u5728\u672c\u5e97\u8d2d\u4e70\u4e86\u5546\u54c1A\u7684\u8bdd\uff0c\u60a8\u5c31\u53ef\u4ee5\u4ee5P\u5143/\u4ef6\u7684\u4f18\u60e0\u4ef7\u683c\u8d2d\u4e70\u5546\u54c1B\uff08\u8d2d\u4e70\u7684\u6570\u91cf\u4e0d\u9650\uff09\u3002\n\n\u610f\u601d\u5c31\u662f\uff0c\u5047\u8bbe\u4f18\u60e0\u65b9\u6848\u4e3a $A$ \u548c $B$\uff0c\u5219\u53ea\u8981\u8d2d\u4e70 $A$\u7684\u6570\u91cf $\\ge$ $1$\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4f18\u60e0\u3002\n\n### \u89e3\u9898\u601d\u8def\n\n\u9898\u76ee\u5f88\u660e\u663e\u662f\u6700\u5c0f\u6811\u5f62\u56fe\uff0c\u5982\u679c\u4e0d\u4f1a\uff0c\u51fa[\u95e8](https://www.baidu.com/)\u5de6\u8f6c\u3002\n\n\u90a3\u4e48\u91cd\u70b9\u5c31\u5728\u4e8e\u5982\u4f55**\u5efa\u8fb9**\uff1f\n\n\u53ef\u4ee5\u5148\u5047\u8bbe\u6bcf\u79cd\u5546\u54c1\u90fd\u4e70\u4e86\u4e00\u4ef6\uff0c\u90a3\u4e48\u6240\u6709\u4f18\u60e0\u65b9\u6848\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002\u5c31\u76f4\u63a5\u5faa\u73af\u5f97\u51fa\u6bcf\u4ef6\u5546\u54c1\u7684\u6700\u4f4e\u4ef7\u683c\uff0c\u6c42\u51fa\u5269\u4f59\u4ef6\u6570\u7684**\u8d39\u7528\u548c**\u3002\n\n\u7136\u540e\u5728\u524d\u9762\u5047\u8bbe\u60c5\u51b5\uff08\u6bcf\u79cd\u8d2d\u4e70\u4e00\u4ef6\uff09\u7684\u6700\u4f18\u65b9\u6848\u3002\n\n\u4ed4\u7ec6\u60f3\u60f3\uff0c\u5c31\u662f\u6c42\u4e00\u4e2a\u65e0\u6839\u6709\u5411\u56fe\u7684\u6700\u5c0f\u6811\u5f62\u56fe\u3002\u5728\u4e00\u4e2a\u4f18\u60e0\u65b9\u6848\u4e2d\u5efa\u4e00\u6761\u8fb9\uff0c\u5c06\u6bcf\u4e2a\u5546\u54c1\u4e0e\u865a\u62df\u6839\u8fde\u4e00\u6761\u8fb9\uff0c\u8dd1\u6731\u5218\u5c31\u884c\u5566\u3002\n\n**\u6ce8\u610f\u70b9\uff1a**\n\n- \u5982\u679c\u4e00\u4e2a\u5546\u54c1\u4e0d\u9700\u8981\u8d2d\u4e70\u76f4\u63a5\u8df3\u8fc7\uff0c\u56e0\u6b64\u8981\u5148\u5224\u65ad\uff0c\u91cd\u65b0\u7ed9\u6bcf\u79cd\u5546\u54c1\u7f16\u53f7\u3002\n\n```cpp\n\tif(!t[i]) continue;\n\ttag[i] = ++num;\n\n```\n- \u540c\u6837\uff0c\u5982\u679c\u4e00\u4e2a\u4f18\u60e0\u65b9\u6848\u4e2d\u4efb\u610f\u4e00\u4ef6\u4e0d\u9700\u8981\u8d2d\u4e70\uff0c\u4e5f\u76f4\u63a5\u8df3\u8fc7\u3002\n\n```cpp\n\tif(!tag[b] || !tag[c]) continue;\n```\n- \u6700\u540e\u6ce8\u610f\u5efa\u7684\u662f**\u6709\u5411\u8fb9**\uff0c\u5343\u4e07\u4e0d\u8981\u624b\u6b8b\u3002\n\n\u6731\u5218\u6a21\u677f\u5c31\u4e0d\u7528\u8bf4\u4e86\u5427\uff1f~~\u6211\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u8bb2~~\n### \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define rt register int\nconst int N = 55;\nconst double inf = 1e8;\nint n,s,tot,cnt,num,id[N],tag[N],t[N],pre[N],vis[N];\ndouble val[N],dis[N],res;\n/*\n\tid:\u4ece\u5c5e\u7684\u8fde\u901a\u5757\u7f16\u53f7\n\ttag:\u5546\u54c1\u91cd\u65b0\u7684\u7f16\u53f7\n\tt:\u9700\u8981\u8d2d\u4e70\u7684\u6570\u91cf\n\tcnt:\u8fde\u901a\u5757\u6570\u91cf \n\ttot:\u5efa\u8fb9\u6570\u91cf \n\tpre/vis/dis: :\u6731\u5218\u7b97\u6cd5\u6240\u9700\u7684\u6a21\u677f\u6570\u7ec4\n*/\nstruct node {\n\tint fro,to;double w;\n}e[N * N];\ninline void zhuliu(int root) {\n\tint u,v,ver;\n\twhile(1) {\n\t\tfor(rt i = 1; i <= num; i ++) dis[i] = inf;\n\t\tfor(rt i = 1; i <= tot; i ++) {\n\t\t\tu = e[i].fro, v = e[i].to;\n\t\t\tif(u != v && dis[v] > e[i].w) pre[v] = u, dis[v] = e[i].w;\n\t\t}\n\t\tfor(rt i = 1; i <= num; i ++) {\n\t\t\tif(i != root && dis[i] == inf) return;\n\t\t}\n\t\tcnt = 0;\n\t\tmemset(id,0,sizeof(id));\n\t\tmemset(vis,0,sizeof(vis));\n\t\tdis[root] = 0;\n\t\tfor(rt i = 1; i <= num; i ++) {\n\t\t\tres += dis[i], ver = i;\n\t\t\twhile(vis[ver] != i && !id[ver] && ver != root) {\n\t\t\t\tvis[ver] = i, ver = pre[ver];\n\t\t\t}\n\t\t\tif(ver != root && !id[ver]) {\n\t\t\t\tid[ver] = ++cnt;\n\t\t\t\tfor(rt j = pre[ver]; j != ver; j = pre[j]) id[j] = cnt;\n\t\t\t}\n\t\t}\n\t\tif(!cnt) break;\n\t\tfor(rt i = 1; i <= num; i ++) {\n\t\t\tif(!id[i]) id[i] = ++cnt;\n\t\t}\n\t\tfor(rt i = 1; i <= tot; i ++) {\n\t\t\tu = e[i].fro, v = e[i].to;\n\t\t\te[i].fro = id[u], e[i].to = id[v];\n\t\t\tif(id[u] != id[v]) e[i].w -= dis[v];\n\t\t}\n\t\tnum = cnt, root = id[root];\n\t}\n}\ninline void read(int &x) {\n\tx = 0;\n\tchar s = getchar();\n\twhile(s < '0' || s > '9') s = getchar();\n\twhile(s <= '9' && s >= '0') x = x * 10 + s - '0', s = getchar(); \n}\nint main() {\n\tread(n);\n\ts = ++num;\n\tint b,c,k;\n\tdouble a;\n\tfor(rt i = 1; i <= n; i ++) {\n\t\tdis[i] = inf;\n\t\tscanf(\"%lf\",&a); read(t[i]);\n\t\tif(!t[i]) continue;\n\t\ttag[i] = ++num;\n\t\tdis[i] = min(dis[i],a);\n\t\te[++tot] = (node) {s,num,a};\n\t}\n\tread(k);\n\twhile(k--) {\n\t\tread(b), read(c), scanf(\"%lf\",&a);\n\t\tif(!tag[b] || !tag[c]) continue;\n\t\te[++tot] = (node) {tag[b],tag[c],a};\n\t\tdis[c] = min(dis[c],a);\n\t}\n\tfor(rt i = 1; i <= n; i ++) {\n\t\tif(t[i] > 1) res += dis[i] * (t[i] - 1);//\u8bb0\u5f97\u51cf 1 \n\t}\n\tzhuliu(s);\n\tprintf(\"%.2lf\",res);\n\treturn 0;\n}\n```\n",
        "postTime": 1610614550,
        "uid": 140643,
        "name": "crescentic",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2792\u3010[JSOI2008]\u5c0f\u5e97\u8d2d\u7269\u3011"
    },
    {
        "content": "\u9898\u89e3\uff1a\n\n\u5148\u8981\u4e86\u89e3\u4e00\u4e0b\u4ec0\u4e48\u662f**\u6700\u5c0f\u6811\u5f62\u56fe**\n\nhttp://blog.csdn.net/wsniyufang/article/details/6747392\n\n\u7136\u540e\u7531\u4e8e\u6240\u6709\u8981\u4e70\u7684\u4e1c\u897f\u90fd\u6700\u5c11\u6709\u4e00\u4e2a\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u4e1c\u897f\u4ed6\u9664\u4e86\u7b2c\u4e00\u4ef6\u4ee5\u5916\u80af\u5b9a\u53ef\u4ee5\u7528\u6700\u4f4e\u7684\u4ef7\u683c\u4e70\u5269\u4e0b\u7684\n\n\u7136\u540e\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u5982\u4f55\u6765\u4e70\uff0c\u6211\u4eec\u8fd9\u6837\u6784\u56fe\n\n\u5148\u52a0\u4e00\u4e2a\u989d\u5916\u7684\u70b9\uff0c\u5b83\u5411\u6bcf\u79cd\u4e1c\u897f\u8fde\u4e00\u6761\u6743\u503c\u4e3a\u539f\u4ef7\u7684\u6709\u5411\u8fb9\n\n\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a\u4f18\u60e0\u5173\u7cfb(a,b)\uff0c\u6211\u4eec\u4ecea\u5411b\u8fde\u4e00\u6761\u6743\u503c\u4e3a\u4f18\u60e0\u4ef7\u7684\u6709\u5411\u8fb9\n\n\u7136\u540e\u4f5c\u4e00\u904d\u6700\u5c0f\u6811\u5f62\u56fe\u5373\u53ef\n\n\u5982\u679c\u4e00\u79cd\u7269\u54c1\u8981\u4e70\u7684\u6570\u91cf\u4e3a0\uff0c\u5219\u5c06\u5176\u9664\u53bb\n\n\u6bcf\u4e00\u79cd\u7269\u54c1\uff0c\u9664\u7b2c\u4e00\u4ef6\u5916\uff0c\u90fd\u53ef\u7528\u6700\u4f4e\u7684\u4ef7\u683c\u4e70\u5230\n\n  \n  \n  \n  \n```cpp\n#include <iostream>  \n#include <cstdio>  \n#include <cstring>  \nusing namespace std;  \nconst double E=1<<30;  //\u5b9a\u4e49\u65e0\u7a77\u5927\uff0c\u4e3a\u540e\u9762\u505a\u51c6\u5907\nconst int maxn=105,maxm=10005;  \nint a,b,c,m,n,root;  \nint k[maxn],lk[maxn]; double p,cost[maxn];  //\u5206\u522b\u7edf\u8ba1\u6570\u7ec4\nint u[maxm],v[maxm]; double w[maxm],ans;  \nint pre[maxn],f[maxn]; double mincost[maxn];  \ninline double mn (double &x,double &y) {  //\u8fd4\u56de\u5c0f\u503c\uff0c\u7528cmath\u4e2d\u7684min\u51fd\u6570\u4e5f\u53ef\u4ee5\n    if (x<y) return x;  \n    return y;  \n}  \nvoid work () {  //\u6784\u5efa\u6700\u5c0f\u6811\u5f62\u56fe,\u4ece\u6bcf\u4e2a\u5b50\u6811\u4e2d\u679a\u4e3e\u7b54\u6848(\u4e0d\u80fd\u7528\u4e8c\u5206\uff0c\u56e0\u4e3a\u4f60\u65e0\u6cd5\u6392\u5e8f)\n    int i,j,x,cnt;  \n    while (1) {  \n        for (i=1;i<=n;i++) mincost[i]=E;  \n        for (i=1;i<=m;i++)  \n            if (w[i]<mincost[v[i]]&&u[i]!=v[i]) {  //\u6784\u5efa\u6811\n                mincost[v[i]]=w[i];  \n                pre[v[i]]=u[i];  \n            }  \n        memset (lk,-1,sizeof (lk));  //\u6e05\u7a7a\u6210\u65e0\u6cd5\u5230\u8fbe\u7684\u503c\n        memset (f,0,sizeof (f));  //\u6e050\n        mincost[root]=0; cnt=0;  \n        for (i=1;i<=n;i++) {  \n            ans+=mincost[i]; x=i;  \n            while (f[x]!=i&&x!=root) {  \n                f[x]=i; x=pre[x];  \n            }  \n            if (x!=root&&lk[x]==-1) {  \n                for (j=pre[x],cnt++;j!=x;j=pre[j])  \n                    lk[j]=cnt;  \n                lk[x]=cnt;  \n            }  \n        }  \n        if (cnt==0) break;  //\u5982\u679c\u8ba1\u6570\u5668\u4e3a0\uff0c\u8bf4\u660e\u4e0d\u53ef\u884c\uff08\u5982\u679c\u4e00\u79cd\u7269\u54c1\u8981\u4e70\u7684\u6570\u91cf\u4e3a0\uff0c\u5219\u5c06\u5176\u9664\u53bb\uff09\n        for (i=1;i<=n;i++)  \n            if (lk[i]==-1) lk[i]=++cnt;  \n        for (i=1;i<=m;i++) {  //\u5229\u7528\u6811\u7684\u6027\u8d28\u67e5\u627e\n            x=v[i]; u[i]=lk[u[i]]; v[i]=lk[v[i]];  \n            if (u[i]!=v[i]) w[i]-=mincost[x];  \n        }  \n        n=cnt; root=lk[root];  \n    }  \n}  \nint main () {  \n    scanf (\"%d\",&b);  \n    for (a=1,n=1;a<=b;a++){  \n        scanf (\"%lf %d\",&cost[n],&k[n]);  \n        if (k[n]==0) continue;  \n        k[n]--; lk[a]=n++;  \n    }  \n    for (a=1,root=n;a<n;a++) {  //\u5c06\u6570\u636e\u8f6c\u6210\u6811\n        u[++m]=n; v[m]=a;  \n        w[m]=cost[a];  \n    }  \n    scanf (\"%d\",&a);  \n    while (a--) {  //\u524d\u5e8f\u5de5\u4f5c,\u4e3a\u540e\u9762\u7684work\u505a\u51c6\u5907\n        scanf (\"%d %d %lf\",&b,&c,&p);  \n        b=lk[b]; c=lk[c]; if (b==0||c==0) continue;  \n        if (p<cost[c]) cost[c]=p;  \n        u[++m]=b; v[m]=c; w[m]=p;  \n    }  \n    for (a=1;a<n;a++) ans+=cost[a]*k[a];  \n    work (); \n    printf (\"%.2lf\\n\",ans);  \n    return 0;  \n}  //\u8fd9\u9898\u76ee\u6bd4\u8f83\u96be\uff0c**\u8bf7\u5927\u5bb6\u4e0d\u8981ctrl+c,ctrl+v\u54e6\uff1b**\u795d\u5927\u5bb6\u5929\u5929\u5f00\u5fc3\uff01\uff01\uff01\n```",
        "postTime": 1501817933,
        "uid": 26832,
        "name": "\u503e\u57ce\u30d5\u30a1\u30f3\u604b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2792 \u3010\u5c0f\u5e97\u8d2d\u7269\u3011"
    },
    {
        "content": "# \u9898\u9762\n[\u5c0f\u5e97\u8d2d\u7269](https://www.luogu.com.cn/problem/P2792)\n# \u9898\u89e3\n\u8fd9\u9053\u9898\u5efa\u8fb9\u65b9\u5f0f\u5f88\u5957\u8def\u3002\n\n\u5b9a\u4e49\u6709\u5411\u8fb9 $(u,v,w)$ \u8868\u793a\u4e70\u4e86 $u$ \u4e4b\u540e\uff0c\u80fd\u4ee5\u8fb9\u6743 $w$ \u7684\u4ef7\u683c\u4e70 $v$ \u3002\n\n\u5bf9\u4e8e\u539f\u4ef7\u7684\u7269\u54c1\uff0c\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\uff0c\u5206\u522b\u8fde\u63a5\u6bcf\u4e2a\u7269\u54c1\u3002\u5bf9\u4e8e\u7279\u4ef7\u7684\u7269\u54c1\uff0c\u6839\u636e\u4ee5\u4e0a\u7684\u5b9a\u4e49\uff0c\u8fde\u63a5\u4e24\u4e2a\u6709\u4f9d\u8d56\u5173\u7cfb\u7684\u7269\u54c1\u3002\n\n\u56e0\u4e3a\u901a\u8fc7\u8fd9\u6837\u7684\u5b9a\u4e49\u65b9\u5f0f\uff0c\u6bcf\u4e2a\u7269\u54c1  $v$ \u80fd\u88ab\u4e70\uff0c\u5f53\u4e14\u4ec5\u5f53 $u$ \u88ab\u4e70\uff0c\u4e3a\u4e86\u82b1\u8d39\u6700\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u80af\u5b9a\u8981\u9009\u53d6\u5176\u4e2d\u8fb9\u6743\u6700\u5c0f\u7684\u8fb9\u3002\n\n\u6240\u4ee5\u6700\u540e\u5c31\u4f1a\u53d1\u73b0\uff0c\u8981\u4e70\u5b8c\u6240\u6709\u7684\u7269\u54c1\uff0c\u5176\u5b9e\u5c31\u662f\u6c42\u8fd9\u5e45\u6709\u5411\u56fe\u7684\u6700\u5c0f\u6811\u5f62\u56fe\u3002\n\n\u6839\u636e\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u7269\u54c1\u90fd\u8981\u4e70 (\u5bf9\u4e8e\u4e0d\u7528\u4e70\u7684\u7269\u54c1\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u505a\u662f\u4ee5 $0$ \u7684\u4ef7\u683c\u4e70\u5165)\uff0c\u800c\u4ee5\u80fd\u4ee5\u5b83\u7684\u6700\u4f4e\u4ef7\u683c\u4e70\u5c31\u4ee5\u5b83\u7684\u6700\u4f4e\u4ef7\u683c\u4e70\u80af\u5b9a\u662f\u6700\u4f18\u7684 (\u5373 $u$ \u662f\u8981\u4e70\u7684)\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\u524d\u63d0\u4e0b\uff0c\u8bb0\u5f55\u6700\u5c0f\u7684\u4ef7\u683c\uff0c\u5148\u63d0\u524d\u7b97\u51fa\u4e70 $tot_i - 1$ \u4e2a\u7269\u54c1\u7684\u4ef7\u683c\uff0c\u7136\u540e\u8dd1\u6700\u5c0f\u6811\u5f62\u56fe\u7b97\u51fa\u4e70\u5269\u4f59\u7684\u4e00\u4e2a\u7684\u4ef7\u683c\u3002\n\n\u6700\u5c0f\u6811\u5f62\u56fe\u81ea\u7136\u5c31\u662f\u7528\u6731\u5218\u7b97\u6cd5\u5566\u3002\n\n### \u5c0f\u7ec6\u8282\n* \u5bf9\u4e8e\u4e70 $u$ \u4f18\u60e0 $v$ \u800c $u$ \u4e0d\u7528\u4e70\u7684\u60c5\u51b5\uff0c\u8fb9\u6743\u5e94\u8be5\u4e3a\u65e0\u7a77\u5927\u3002\n# \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int INF = 1e9;\nconst int N = 105;\nconst int M = N * N + 5;\ndouble in[N],val[N],w;  \nint pre[N],tot[N],vis[N],id[N];\nstruct edge{\n    int from,to;\n\tdouble dis;\n}a[M];\ndouble work(int n,int m,int root) {\n\tdouble ans = 0;\n\twhile(true){\n\t\tfor(int i = 1;i <= n; i++) in[i] = INF;\n\t\tfor(int i = 1;i <= m; i++){\n\t\t\tint u = a[i].from,v = a[i].to;\n\t\t\tif(u != v && a[i].dis < in[v])\n\t\t\t\tin[v] = a[i].dis,pre[v] = u;\n\t\t}\n\t\tint cnt = 0;\n\t\tmemset(vis,0,sizeof(vis));\n\t\tmemset(id,0,sizeof(id));\n\t\tfor(int i = 1;i <= n;i++){\n\t\t\tif(i == root)continue;\n\t\t\tans += in[i];\n\t\t\tint v = i;\n\t\t\twhile(vis[v] != i && !id[v] && v != root)\n\t\t\t\tvis[v] = i,v = pre[v];\n\t\t\tif(!id[v] && v != root){\n\t\t\t\tid[v] = ++cnt;\n\t\t\t\tfor(int u = pre[v];u != v;u = pre[u])\n\t\t\t\t\tid[u] = cnt;\n\t\t\t}\n\t\t}\n\t\tif(cnt == 0) break;\n\t\tfor(int i = 1;i <= n;i++)\n\t\t\tif(!id[i]) id[i] = ++cnt;\n\t\tfor(int i = 1;i <= m;i++){\n\t\t\tint u = a[i].from,v = a[i].to;\n\t\t\ta[i].from = id[u],a[i].to = id[v];\n\t\t\tif(id[u] != id[v]) a[i].dis -= in[v];\n\t\t}\n\t\troot = id[root];\n\t\tn = cnt;\n\t}\n\treturn ans;\n}\nint main(){\n    int n,m;\n    scanf(\"%d\",&n);\n    for(int i = 1; i <= n; i++) {\n    \tscanf(\"%lf%d\",&val[i],&tot[i]);\n    \ta[i].from = n + 1;\n\t\ta[i].to = i; a[i].dis = tot[i] == 0 ? 0 : val[i];\n\t}\n    scanf(\"%d\",&m);\n\tfor(int i = 1,u,v; i <= m; i++) {\n\t\tscanf(\"%d%d%lf\",&u,&v,&w);\n\t\tif(tot[u] == 0) {\n\t\t\ta[n + i].from = u;\n\t\t\ta[n + i].to = v; a[n + i].dis = INF;\n\t\t}\n\t\telse if(tot[v] == 0) {\n\t\t\ta[n + i].from = u;\n\t\t\ta[n + i].to = v; a[n + i].dis = 0;\n\t\t} \n\t\telse {\n\t\t\ta[n + i].from = u;\n\t\t\ta[n + i].to = v; a[n + i].dis = w;\n\t\t\tval[v] = min(val[v],w);\n\t\t}\t\n\t} double res = 0;\n\tfor(int i = 1; i <= n; i++)\n\t\tif(tot[i]) res += (tot[i] - 1) * val[i];\n    res += work(n + 1,n + m,n + 1);\n    printf(\"%.2lf\\n\",res);\n    return 0;\n}\n```\n\n",
        "postTime": 1620395235,
        "uid": 385145,
        "name": "\u795e\u7737\u4e4b\u6a31\u82b1",
        "ccfLevel": 4,
        "title": "P 2792 \u9898\u89e3"
    },
    {
        "content": "emmm\uff0c\uff0c\uff0c\u6700\u5c0f\u6811\u5f62\u56fe\u677f\u5b50\u9898\uff0c\uff0c\uff0c\u6302\u4e00\u4e2a\u81ea\u8ba4\u4e3a\u5f88\u597d\u770b\u7684\u4ee3\u7801\uff08\u4ee3\u7801\u4e2d\u6709\u8be6\u7ec6\u6ce8\u91ca + \u6211\u66fe\u7ecf\u9519\u8fc7\u7684\u5730\u65b9\u7684\u6807\u8bc6\uff09\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\n#define R register int\n#define AC 60\n#define ac 10000\nint n, m, s, tot, cnt, tmp;\nint last[AC], id[AC], buy[AC], vis[AC]; \nint Stack[AC], top;//\u6808\uff0c\u8f85\u52a9\u627e\u73af\ndouble ans;\ndouble in[AC];\n\nstruct road{\n    int x,y;double Size;\n}way[ac];\n/*\u6ce8\u610f\u5230\u4e00\u4ef6\u4e8b\uff1a\u4f18\u60e0\u653f\u7b56\u4e0e\u4e70\u7684\u4ef6\u6570\u65e0\u5173\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u7ba1\u4e70\u4e86\u591a\u5c11\uff0c\u53ea\u8981\u4e70\u4e86\u5c31\u53ef\u4ee5\u4f18\u60e0\uff0c\n\u8fd9\u5c31\u610f\u5473\u7740\u6784\u9020\u6700\u5c0f\u6811\u5f62\u56fe\u7684\u65f6\u5019\u8fb9\u6743\u5e94\u8be5\u6309\u71671\u7684\u6765\u7b97\uff0c\u56e0\u4e3a\u5982\u679c\u8981\u8d2d\u4e70\u591a\u4ef6\u7684\u8bdd\uff0c\u53ef\u4ee5\u7b49\u5230\u6700\u540e\n\u5df2\u7ecf\u4e70\u5b8c\u4e86\u6240\u6709\u7269\u54c1\u518d\u7528\u6700\u4f4e\u4ef7\u8d2d\u4e70(\u80af\u5b9a\u53ef\u4ee5\u8fbe\u5230\u6700\u4f4e\u4ef7\u683c\uff09\uff0c\n\u56e0\u4e3a\u7b2c\u4e00\u6b21\u8d2d\u4e70\u7684\u65f6\u5019\u662f\u4e0d\u5141\u8bb8\u51fa\u73b0\u73af\u7684\uff0c\uff08\u4e0d\u7136\u7684\u8bdd\u5148\u8d2d\u4e70\u54ea\u4e2a\uff1f\u80af\u5b9a\u6709\u4e2a\u5148\u540e\u987a\u5e8f\u7684\u554a\uff09\n\u4f46\u662f\u540e\u6765\u4e70\u5c31\u65e0\u6240\u8c13\u4e86\uff0c\u56e0\u4e3a\u4e1c\u897f\u53cd\u6b63\u90fd\u4e70\u4e86\uff0c\u5c31\u6bd4\u5982\u8bf4\u4e70a\u518d\u4e70b\u53ef\u4ee5\u4f18\u60e05\u5143\uff0c\u4e70b\u518d\u4e70a\u53ef\u4ee5\u4f18\u60e010\u5143\uff0c\n\u8fd9\u4e2a\u65f6\u5019\u663e\u7136\u5148\u4e70b\u518d\u4e70a\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u53ea\u4e70\u4e00\u4e2ab\uff0c\u8fd9\u6837\u7684\u8bdd\u4e70\u5b8ca\u548cb\u540e\u518d\u8d2d\u4e70\u5269\u4e0b\u7684b\u65f6\u5c31\u53ef\u4ee5\u6bcf\u4ef6\u4f18\u60e05\u5143\u4e86\n1\uff0c\u786e\u5b9a\u4e00\u4e2a\u6839(\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9\uff09\n2\uff0c\u627e\u5230\u9664\u6839\u5916\u6bcf\u4e00\u4e2a\u70b9\u7684\u6700\u5c0f\u5165\u8fb9\uff0c\u82e5\u8fd9\u4e9b\u8fb9\u6784\u6210\u4e86\u73af\uff08\u6b64\u65f6\u5fc5\u7136\u4e0d\u8054\u901a\uff09\uff0c\u5219\u7f29\u73af\u6210\u70b9\uff0c\u5e76\u5c06\u73af\u5185\u7684\u6bcf\u4e00\u4e2a\u70b9\u7684\u5176\u4ed6\u5165\u8fb9\u90fd\u51cf\u53bb\u73af\u5185\u7684\u5165\u8fb9\uff0c\n3\uff0c\u91cd\u590d\u6b65\u9aa42\u76f4\u5230\u6ca1\u6709\u73af\u51fa\u73b0\uff08\u6784\u6210\u4e86\u6811\uff09\u3002\n\n\u56e0\u4e3a\u8fb9\u5f88\u5c11\uff0c\u6240\u4ee5\u53ea\u80fd\u5f62\u6210\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u73af\uff0c\u53c8\u56e0\u4e3as\u6ca1\u6709\u5165\u5ea6\uff0c\u6240\u4ee5s\u4e0d\u53ef\u80fd\u51fa\u73b0\u5728\u73af\u5185\uff0c\n\u6240\u4ee5\u8bf4\u53ef\u4ee5\u4eces\u51fa\u53d1dfs\u4e00\u904d\uff0c\u5982\u679c\u6709\u70b9\u6ca1\u88ab\u8bbf\u95ee\u5230\u5c31\u662f\u6709\u73af\uff1f\uff1f\uff1f\uff1f\n\n\u6216\u8005\u8bf4\u4e0d\u7528bool\u8bb0\u5f55\u6709\u6ca1\u6709\u88ab\u8bbf\u95ee\uff0c\u800c\u662f\u7528vis\u8bb0\u5f55\u8bbf\u95ee\u5b83\u7684\u662f\u8c01\uff0c\u56e0\u4e3a\u4e0d\u80fd\u88ab\u540c\u4e00\u4e2a\u70b9\u591a\u6b21\u8bbf\u95ee\uff0c\n\u4f46\u88ab\u591a\u4e2a\u70b9\u4e00\u6b21\u8bbf\u95ee\u662f\u5408\u6cd5\u7684\n*/\n\ninline void upmin(double &a,double b)\n{\n    if(b < a) a = b;\n}\n\nvoid pre()\n{\n    double a;int b,c;\n    scanf(\"%d\", &n);\n    memset(in, 127, sizeof(in));//\u539f\u6765127\u662f\u5f88\u5927\u7684\uff1f\n    s = n + 1;\n    for(R i = 1; i <= n; i++)\n    {\n        scanf(\"%lf%d\", &a, &buy[++tot]);\n        if(!buy[tot]) \n        {\n            --tot;\n            continue;\n        }\n        --buy[tot];//\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u662f\u5728\u5efa\u6811\u7684\u65f6\u5019\u4e70\u7684\n        id[i] = tot;//\u9632\u6b62\u4e0d\u7528\u4e70\u7684\u5546\u54c1\u5360\u4f4d\u7f6e\n        way[++cnt] = (road){s, tot, a};\n        upmin(in[tot], a);//\u627e\u5230\u6700\u4f4e\u4ef7\n    }\n    scanf(\"%d\", &m);\n    for(R i = 1; i <= m; i++)\n    {\n        scanf(\"%d%d%lf\", &b, &c, &a);\n        if(!id[b] || !id[c]) continue;\n        way[++cnt] = (road){id[b], id[c], a};\n        upmin(in[id[c]], a);//\u83b7\u53d6\u6700\u4f4e\u4ef7\u683c\n    }\n}\n\nvoid init()\n{\n    for(R i=1;i<=tot;i++)//\u56e0\u4e3a\u6bcf\u6b21\u6807\u53f7\u90fd\u8981\u91cd\u7f6e\uff0c\u6240\u4ee5\u73b0\u5728\u8d76\u7d27\u52a0\u4e0a\u8d21\u732e\n        if(buy[i]) ans += in[i] * (double)buy[i];//\u76f4\u63a5\u679a\u4e3e\u6807\u53f7\n}\n\nvoid find()//\u627e\u73af\n{//error!!!\u867d\u7136\u8bf4\u90fd\u662f\u7b80\u5355\u73af\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u59a8\u788d\u73af\u6709\u51fa\u8fb9\uff0c\uff0c\uff0c\uff0c\u56e0\u6b64\u8fd8\u8981\u5224\u65ad\u4e0d\u8981\u8bef\u5165\u4e4b\u524d\u8fdb\u8fc7\u7684\u73af\u4e86\n    int x;\n    for(R i = 1; i <= tot; i++)//\u76f4\u63a5\u679a\u4e3e\u6807\u53f7\n    {\n        top = 0;\n        ans += in[x = i];//\u83b7\u53d6\u65b0\u6700\u5c0f\u8fb9\u8d21\u732e + \u987a\u4fbf\u8d4b\u503c\n        if(id[x]) continue;//\u5982\u679c\u5df2\u7ecf\u88ab\u53d1\u73b0\u5728\u73af\u5185\u5c31\u52a0\u4e0a\u8d21\u732e\u8d70\u4eba\n        while(1)//\u627e\u73af\n        {\n            if(vis[x] == i || x == s || id[x]) break;//error!!!\u4e0d\u8981\u8bef\u5165\u4e4b\u524d\u8fdb\u8fc7\u7684\u73af\u4e86(id[x])\n            vis[x] = i;\n            Stack[++top] = x;//\u5b58\u5165\u6808\n            x = last[x];\n        }\n        if(x == i && !id[x])//\u5982\u679c\u7ec8\u70b9\u88ab\u591a\u6b21\u8bbf\u95ee,error!!!\u4e4b\u524d\u8fdb\u8fc7\u7684\u73af\u5c31\u522b\u53bb\u4e86(id[x])\n        {//error!!!\u5e94\u8be5\u662f\u8d77\u70b9\u88ab\u591a\u6b21\u8bbf\u95ee\uff0c\u800c\u4e0d\u662f\u7ec8\u70b9\uff0c\u56de\u5230\u8d77\u70b9\u624d\u662f\u4e00\u4e2a\u73af\uff0c\u4e0d\u7136\u4e00\u4e2a\u73af\u7684\u5916\u5411\u8fb9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6709\u522b\u7684\u70b9\u201c\u8bef\u5165\u201d\u73af\u5185\n            ++tmp;\n            while(x = Stack[top--]) id[x] = tmp;//\u7ed9\u73af\u5185\u6240\u6709\u8282\u70b9\u90fd\u8d4b\u4e0a\u540c\u4e00\u4e2a\u7f16\u7801\n        }\n    }\n}\n        \nvoid get_in()//\u627e\u6700\u77ed\u8fb9 & \u524d\u9a71\n{\n    int x;\n    memset(in, 127, sizeof(in));//\u91cd\u7f6e\u6700\u77ed\u8fb9\n    for(R i = 1; i <= cnt; i++)//\u76f4\u63a5\u679a\u4e3e\u8fb9\uff0c\u8fd9\u6837\u66f4\u7701\u65f6\n    {\n        x = way[i].y;//\u5b58\u4e0b\u76ee\u6807\u70b9\n        if(way[i].x == x) continue;//\u5982\u679c\u5728\u4e00\u4e2a\u70b9\u91cc\u90a3\u5c31\u7b97\u4e86\n        if(way[i].Size < in[x])\n        {\n            last[x] = way[i].x;\n            in[x] = way[i].Size;//\u66f4\u65b0\u6700\u77ed\u8fb9\n        }\n    }\n}\n        \nvoid work()\n{\n    while(1)\n    {\n        get_in();\n        memset(id, 0, sizeof(id));//\u91cd\u7f6e\u6807\u53f7\n        memset(vis, 0, sizeof(vis));//\u91cd\u7f6e\u8bbf\u95ee\u6807\u8bb0\n        id[s] = s, tmp = 0;//\u91cd\u7f6e\u6807\u53f7\u8ba1\u6570,error!!!\u6ce8\u610fid[s]\u6c38\u8fdc\u662fs\n        find();\n        if(!tmp)//\u5982\u679c\u6ca1\u6709\u627e\u5230\u73af\u5c31\u9000\u51fa\n        {\n            printf(\"%.2lf\\n\",ans);\n            return ;\n        } \n        for(R i = 1; i <= tot; i++)\n            if(!id[i]) id[i] = ++tmp;//\u5982\u679c\u8fd8\u6ca1\u6709\u7f16\u53f7\uff0c\u5c31\u7edf\u4e00\u7f16\u53f7\n        tot = tmp;\n        for(R i = 1; i <= cnt; i++)//\u6bcf\u6b21\u90fd\u66f4\u65b0\u6240\u6709\u8fb9\u7684\u6240\u6709\u4fe1\u606f\n        {\n            way[i].Size -= in[way[i].y];//\u6743\u503c\u51cf\u53bb\u5165\u8fb9\u7684\u6700\u5c0f\u8fb9\u6743\u503c\n            way[i].x = id[way[i].x];//\u8d4b\u4e3a\u65b0\u70b9\n            way[i].y = id[way[i].y];\n        }\n    }\n}\n\nint main()\n{\n//\tfreopen(\"in.in\",\"r\",stdin);\n    pre();\n    init();\n    work();\t\n//\tfclose(stdin);\n    return 0;\n}\n```",
        "postTime": 1528679212,
        "uid": 47136,
        "name": "ww3113306",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2792 \u3010[JSOI2008]\u5c0f\u5e97\u8d2d\u7269\u3011"
    }
]