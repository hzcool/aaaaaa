[
    {
        "content": "~~\u4e0d\u592a\u4e25\u8c28+\u4e5f\u8bb8\u6f0f\u6d1e\u767e\u51fa\u7684\u9898\u89e3~~\n\n\u5df2\u77e5$\\{g_{i} | i \\in [1,n-1] \\cap Z\\}$\uff0c\u4e14$f_0=1$\uff0c\u540c\u65f6\u6709$f_i=\\sum_{j=1}^{i}f_{i-j}g_j$\n\n\u6c42$\\{ f_i | i \\in [0,n - 1] \\cap Z \\}$\n\n---\n\n\u4e0d\u59a8\u8bbe$F(x)=\\sum_{i=0}^{\\infty}f_ix^i,G(x)=\\sum_{i=0}^{\\infty}g_ix^i$\uff0c\u4e14$g_0=0$\n\n\u90a3\u4e48\u6709$F(x)G(x)=\\sum_{i=0}^{\\infty}x^i\\sum_{j+k=i}f_jg_k=F(x)-f_0x^0$\n\n\u5373$F(x)G(x) \\equiv F(x)-f_0 (\\bmod x^n)$\n\n\u5373$F(x) \\equiv \\frac{f_0}{1-G(x)} (\\bmod x^n)$\n\n\u5373$F(X) \\equiv (1-G(x))^{-1} (\\bmod x^n)$\n\n\u90a3\u4e48\u5c31\u662f\u4e00\u4e2a\u591a\u9879\u5f0f\u6c42\u9006\u7684\u6a21\u677f\u4e86",
        "postTime": 1530514424,
        "uid": 47111,
        "name": "nekko",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4721 \u3010\u3010\u6a21\u677f\u3011\u5206\u6cbb FFT\u3011"
    },
    {
        "content": "~~\u5206\u6cbbfft\u7684\u6a21\u677f\u9898\u5e72\u561b\u7528\u591a\u9879\u5f0f\u6c42\u9006\u5462~~\n\n\u8bb2\u4e00\u4e0b\uff08\u6211\u7406\u89e3\u7684\u3001\u53ef\u4ee5\u505a\u8fd9\u9053\u9898\uff09\u5206\u6cbbfft\u3002\n\n\u5176\u5b9e\u5c31\u662fcdq\u5206\u6cbb\u7684\u601d\u8def\u3002\u6bcf\u6b21\u6c42\u4e00\u4e2a\u533a\u95f4\u7684\u65f6\u5019\uff0c\u8981\u4fdd\u8bc1\u8fd9\u4e2a\u533a\u95f4\u5de6\u8fb9\u6240\u6709\u503c\u5bf9\u8fd9\u4e2a\u533a\u95f4\u7684\u8d21\u732e\u90fd\u7b97\u51fa\u6765\u4e86\u3002\u6bcf\u6b21\u628a\u533a\u95f4\u5206\u4e3a\u5de6\u53f3\u4e24\u534a\uff0c\u5148\u7b97\u505a\u534a\u6bb5\uff0c\u7136\u540e\u7528ntt\u8ba1\u7b97\u5de6\u534a\u6bb5\u5bf9\u53f3\u534a\u6bb5\u7684\u8d21\u732e\uff0c\u518d\u7b97\u53f3\u534a\u5ea6\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50g\\[1..3]=1, 1, 0\uff0c\u6c42f\\[0..3]\uff08\u522b\u95ee\u6211\u5e72\u561b\u8981\u62ff\u8fd9\u4e2a\u7b97\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff09\n\n\u521a\u5f00\u59cb\uff0c\u662f\u8fd9\u6837\u7684\uff08\u7528\u4e2d\u62ec\u53f7\u4ee3\u8868\u8981\u7b97\u7684\u533a\u95f4\uff0c\u7ad6\u7ebf\u4ee3\u8868\u4e2d\u95f4\u7684\u4f4d\u7f6e\uff09\n``` plain\nf =[1 0|0 0]\n```\n\u5148\u7b97\u5de6\u8fb9\n``` plain\nf =[1|0]0 0\n```\n\u5de6\u534a\u8fb9\u7684\u957f\u5ea6\u4e3a1\uff0c\u4e0d\u5f80\u4e0b\u9012\u5f52\u3002\u8ba1\u7b97\u5de6\u533a\u95f4\u5bf9\u53f3\u533a\u95f4\u7684\u8d21\u732e\u3002\u5c31\u662f\u628a1, 0\u548cg\u7684\u524d\u4e24\u98790, 1\u505a\u5377\u79ef\uff0c\u5f97\u5230\\*, 1\uff08\u661f\u53f7\u4ee3\u8868\u6211\u4eec\u4e0d\u5728\u610f\u8fd9\u4e2a\u4f4d\u7f6e\uff09\uff0c\u518d\u628a\u5f97\u5230\u7684\u540e\u534a\u6bb5\u52a0\u5230\u8fd9\u4e2a\u533a\u95f4\u7684\u53f3\u534a\u8fb9\u3002\u64cd\u4f5c\u540e\uff1a\n``` plain\nf =[1|1]0 0\n```\n\u53f3\u534a\u8fb9\u7684\u957f\u5ea6\u4e3a1\uff0c\u4e0d\u5f80\u4e0b\u9012\u5f52\u3002\u8fd9\u4e00\u6b65\u5c31\u597d\u4e86\uff0c\u56de\u5230\u4e0a\u4e00\u6b65\u3002\n``` plain\nf =[1 1|0 0]\n```\n\u8ba1\u7b97\u5de6\u534a\u8fb9\u5bf9\u53f3\u534a\u8fb9\u7684\u8d21\u732e\u3002\u628a1, 1, 0, 0\u548cg\u7684\u524d\u56db\u98790, 1, 1, 0\u505a\u5377\u79ef\uff0c\u5f97\u5230\\*, \\*, 2, 1\uff0c\u518d\u628a\u5f97\u5230\u7684\u540e\u534a\u6bb5\u52a0\u5230\u8fd9\u4e2a\u533a\u95f4\u7684\u53f3\u534a\u8fb9\u3002\u64cd\u4f5c\u540e\uff1a\n``` plain\nf =[1 1|2 1]\n```\n\u73b0\u5728\u5f00\u59cb\u8ba1\u7b97\u53f3\u534a\u6bb5\u3002\n``` plain\nf = 1 1[2|1]\n```\n\u5de6\u534a\u8fb9\u7684\u957f\u5ea6\u662f1\uff0c\u4e0d\u5f80\u4e0b\u9012\u5f52\u3002\u8ba1\u7b97\u5de6\u533a\u95f4\u5bf9\u53f3\u533a\u95f4\u7684\u8d21\u732e\u3002\u5c31\u662f\u628a2, **0**\uff08\u6ce8\u610f\u8fd9\u91cc\u662f0\uff09\u548cg\u7684**\u524d**\uff08\u4e0d\u662f\u540e\uff09\u4e24\u98790, 1\u505a\u5377\u79ef\uff0c\u5f97\u5230\\*, 2\uff0c\u518d\u628a\u5f97\u5230\u7684\u540e\u534a\u6bb5**\u52a0**\u5230\u8fd9\u4e2a\u533a\u95f4\u7684\u53f3\u534a\u8fb9\u3002\u64cd\u4f5c\u540e\uff1a\n``` plain\nf = 1 1[2|3]\n```\n\u53f3\u534a\u8fb9\u7684\u957f\u5ea6\u4e3a1\uff0c\u4e0d\u5f80\u4e0b\u9012\u5f52\u3002\u7136\u540e\u8fd9\u4e2af\u6570\u7ec4\u5c31\u7b97\u597d\u4e86\u3002\n\n\u4ee3\u7801\uff08\u6211\u662f\u5148\u586b\u5145\u62102\u7684\u5e42\uff0c\u8fd9\u6837\u597d\u5199\uff09\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int maxlogn=18;\nconst int maxn=(1<<maxlogn)|1;\nconst int G0=15311432;\nconst int kcz=998244353;\nint n,rev[maxn];\nll G[2][24],f[maxn],g[maxn],a[maxn],b[maxn];\nvoid gcd(ll a,ll b,ll &x,ll &y)\n{\n    if(!b) x=1,y=0;\n    else gcd(b,a%b,y,x),y-=x*(a/b);\n}\ninline ll inv(ll a)\n{\n    ll x,y;\n    gcd(a,kcz,x,y);\n    return (x+kcz)%kcz;\n}\ninline void calcrev(int logn)\n{\n    register int i;\n    rev[0]=0;\n    for(i=1;i<(1<<logn);i++)\n        rev[i]=(rev[i>>1]>>1)|((i&1)<<(logn-1));\n}\ninline void FFT(ll *a,int logn,int flag)\n{\n    register int i,j,k,mid;\n    register ll t1,t2,t;\n    for(i=0;i<(1<<logn);i++)\n        if(rev[i]<i)\n            swap(a[rev[i]],a[i]);\n    for(i=1;i<=logn;i++)\n        for(mid=1<<(i-1),j=0;j<(1<<logn);j+=1<<i)\n            for(k=0,t=1;k<mid;k++,t=t*G[flag][i]%kcz)\n            {\n                t1=a[j|k],t2=t*a[j|k|mid];\n                a[j|k]=(t1+t2)%kcz,a[j|k|mid]=(t1-t2)%kcz;\n            }\n}\nvoid solve(int l,int r,int logn)\n{\n    if(logn<=0) return;\n    if(l>=n) return;\n    int mid=(l+r)>>1,i;\n    ll t=inv(r-l);\n    solve(l,mid,logn-1); // \u8ba1\u7b97\u5de6\u533a\u95f4\n    calcrev(logn);\n    memset(a+(r-l)/2,0,sizeof(ll)*(r-l)/2); // \u62f7\u8d1d\u5de6\u533a\u95f4\n    memcpy(a,f+l,sizeof(ll)*(r-l)/2); // \u586b\u51450\n    memcpy(b,g,sizeof(ll)*(r-l)); // \u62f7\u8d1dg\n    FFT(a,logn,0),FFT(b,logn,0); // \u5377\u79ef\n    for(i=0;i<r-l;i++) a[i]=a[i]*b[i]%kcz;\n    FFT(a,logn,1);\n    for(i=0;i<r-l;i++) a[i]=a[i]*t%kcz;\n    for(i=(r-l)/2;i<r-l;i++)\n        f[l+i]=(f[l+i]+a[i])%kcz; // \u628a\u5377\u79ef\u540e\u7684\u53f3\u534a\u6bb5\u7684\u6570\u52a0\u5230f\u6570\u7ec4\u540e\u534a\u6bb5\n    // \u53ef\u80fd\u4f60\u4f1a\u6ce8\u610f\u5230\uff0c\u8fd9\u4e2a\u5377\u79ef\u662f(r-l)/2\u7684\u957f\u5ea6\u5377\u4e00\u4e2ar-l\u7684\u957f\u5ea6\uff0c\u800c\u6211\u5377\u79ef\u65f6\u6700\u7ec8\u7ed3\u679c\u5f53\u4f5cr-l\u7684\u957f\u5ea6\u6765\u5b58\uff0c\u8fd9\u4f1a\u4e0d\u4f1a\u6709\u5f71\u54cd\uff1f\u6ce8\u610f\u5230\u8d85\u51fa\u90e8\u5206\u662f(r-l)/2\u5de6\u53f3\uff0c\u6839\u636efft\u7684\u5b9e\u73b0\uff0c\u8d85\u51fa\u90e8\u5206\u662f\u4f1a\u91cd\u65b0\u4ece0\u5f00\u59cb\u586b\u7684\uff0c\u6240\u4ee5\u53ea\u4f1a\u5f71\u54cd\u7ed3\u679c\u7684\u524d\u534a\u6bb5\uff0c\u4e0e\u540e\u534a\u6bb5\u65e0\u5173\n    solve(mid,r,logn-1); // \u8ba1\u7b97\u53f3\u533a\u95f4\n}\nint main()\n{\n    int logn,i;\n    G[1][23]=inv(G[0][23]=G0);\n    for(i=22;i>=0;i--)\n    {\n        G[0][i]=G[0][i+1]*G[0][i+1]%kcz;\n        G[1][i]=G[1][i+1]*G[1][i+1]%kcz;\n    }\n    scanf(\"%d\",&n);\n    for(logn=0;(1<<logn)<n;logn++);\n    for(i=1;i<n;i++) scanf(\"%lld\",&g[i]);\n    for(i=0;i<n;i++) f[i]=!i;\n    solve(0,1<<logn,logn);\n    for(i=0;i<n;i++)\n        printf(\"%lld \",(f[i]+kcz)%kcz);\n    printf(\"\\n\");\n    return 0;\n}\n```",
        "postTime": 1547431184,
        "uid": 36998,
        "name": "ljc1301",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4721 \u3010\u3010\u6a21\u677f\u3011\u5206\u6cbb FFT\u3011"
    },
    {
        "content": "\u90fd\u662f\u6c42\u9006\u554a\u3002\u3002\u867d\u7136\u53ef\u4ee5\u7406\u89e3\u3002\n\n\u5206\u6cbb$FFT$\u53ef\u4ee5\u89e3\u51b3\u9898\u76ee\u6240\u63cf\u8ff0\u7684\u95ee\u9898\u3002\n\n\u53d1\u73b0\u9898\u76ee\u7684\u8981\u6c42\u7c7b\u4f3c\u4e8e\u5377\u79ef\uff0c\u4e8e\u662f\u8003\u8651\u4f7f\u7528$FFT$\u3002\n\n\u4f46\u662f\u540e\u9762\u7684\u6570\u5b57\u57fa\u4e8e\u524d\u9762\u7684\u6570\u5b57\uff0c\u65e0\u6cd5\u5feb\u901f\u8ba1\u7b97\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u9000\u5316\u81f3$O(n^2)$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u5c06\u7c7b\u4f3c\u7684\u8f6c\u79fb\u540c\u65f6\u8fdb\u884c\uff0c\u6765\u8282\u7701\u590d\u6742\u5ea6\u3002\n\n\u8003\u8651\u5229\u7528\u5206\u6cbb\u3002\n\n\u5047\u8bbe\u6211\u4eec\u6c42\u51fa\u4e86$l\\to mid$\u7684\u7b54\u6848\uff0c\u8981\u6c42\u8fd9\u4e9b\u70b9\u5bf9$mid+1\\to r$\u7684\u5f71\u54cd\uff0c\u90a3\u4e48\u5bf9\u53f3\u534a\u8fb9\u70b9$x$\u7684\u8d21\u732e\u4e3a:\n\n$$w_x=\\sum_{i=l}^{mid} f[i] * g[x-i]$$\n\n\u8fd9\u90e8\u5206\u53ef\u4ee5\u5229\u7528\u5377\u79ef\u6765\u5feb\u901f\u8ba1\u7b97\u3002\u8ba1\u7b97\u5b8c\u4ee5\u540e\uff0c\u7b54\u6848\u76f4\u63a5\u52a0\u5230\u7b54\u6848\u6570\u7ec4\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u8981\u6c42\u5de6\u8fb9\u70b9\u5bf9\u53f3\u8fb9\u70b9\u7684\u5f71\u54cd\uff0c\u9996\u5148\u6574\u4e2a\u533a\u95f4\u4ee5\u5de6\u5bf9\u8be5\u533a\u95f4\u7684\u8d21\u732e\u5e94\u8be5\u5148\u6c42\u51fa\u3002\u6240\u4ee5\u5206\u6cbb\u8fc7\u7a0b\u4e3a\u5148\u5206\u6cbb\u5de6\u8fb9\uff0c\u5728\u6c42\u51fa\u4e2d\u95f4\uff0c\u7136\u540e\u5728\u9012\u5f52\u53f3\u8fb9\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log^2n)$~~(\u88ab\u6c42\u9006$O(n\\log n)$\u540a\u6253)~~\n\n\u6709\u4e00\u4e2a\u5361\u5e38\u6280\u5de7\uff0c\u5c31\u662f\u53ef\u4ee5\u53d1\u73b0\u4f60\u8ba1\u7b97\u7684\u65f6\u5019\u53ea\u4f1a\u7528\u5230 $md-l\\sim r-l$ \u7684\u8fd9\u4e00\u90e8\u5206\uff0c\u524d\u534a\u90e8\u5206\u4e0d\u9700\u8981\u7ba1\u3002\u56e0\u6b64\uff0c\u76f4\u63a5\u7528\u5faa\u73af\u5377\u79ef\u5bf9\u5b83\u8fdb\u884c\u5904\u7406\uff0c\u505a\u4e58\u6cd5\u7684\u65f6\u5019\u4e0d\u5fc5\u505a\u957f\u5ea6\u4e3a $1.5(r-l+1)$ \u7684\uff0c\u53ea\u9700\u8981\u505a\u957f\u5ea6\u4e3a $r-l+1$ \u7684\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u6837\u5e38\u6570\u4f1a\u5230\u539f\u6765\u7684 $0.5\\sim 0.67$ \u500d(\u56e0\u4e3a $1.5(r-l+1)$ \u7684\u5faa\u73af\u5377\u79ef\u901a\u5e38\u4f1a\u76f4\u63a5\u505a\u957f\u5ea6\u4e3a $2(r-l+1) $ \u7684)\u3002\n\nupd:\u6709\u4eba\u8bf4\u8981\u5b8c\u6574\u4ee3\u7801\uff0c\u6211\u5c31\u653e\u51fa\u6765\u7b97\u4e86\u3002\u3002\u3002\n\n\u4ee3\u7801:\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cctype>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#define Rep(i,a,b) for(register int i=(a);i<=(b);++i)\n#define Repe(i,a,b) for(register int i=(a);i>=(b);--i)\n#define rep(i,a,b) for(register int i=(a);i<(b);++i)\n#define pb push_back\n#define mx(a,b) (a>b?a:b)\n#define mn(a,b) (a<b?a:b)\ntypedef unsigned long long uint64;\ntypedef unsigned int uint32;\ntypedef long long ll;\nusing namespace std;\n\nnamespace IO\n{\n\tconst uint32 Buffsize=1<<15,Output=1<<24;\n\tstatic char Ch[Buffsize],*S=Ch,*T=Ch;\n\tinline char getc()\n\t{\n\t\treturn((S==T)&&(T=(S=Ch)+fread(Ch,1,Buffsize,stdin),S==T)?0:*S++);\n\t}\n\tstatic char Out[Output],*nowps=Out;\n\t\n\tinline void flush(){fwrite(Out,1,nowps-Out,stdout);nowps=Out;}\n\n\ttemplate<typename T>inline void read(T&x)\n\t{\n\t\tx=0;static char ch;T f=1;\n\t\tfor(ch=getc();!isdigit(ch);ch=getc())if(ch=='-')f=-1;\n\t\tfor(;isdigit(ch);ch=getc())x=x*10+(ch^48);\n\t\tx*=f;\n\t}\n\n\ttemplate<typename T>inline void write(T x,char ch='\\n')\n\t{\n\t\tif(!x)*nowps++='0';\n\t\tif(x<0)*nowps++='-',x=-x;\n\t\tstatic uint32 sta[111],tp;\n\t\tfor(tp=0;x;x/=10)sta[++tp]=x%10;\n\t\tfor(;tp;*nowps++=sta[tp--]^48);\n\t\t*nowps++=ch;\n\t}\n}\nusing namespace IO;\n\nvoid file()\n{\n#ifndef ONLINE_JUDGE\n\tFILE*DSD=freopen(\"water.in\",\"r\",stdin);\n\tFILE*CSC=freopen(\"water.out\",\"w\",stdout);\n#endif\n}\n\nconst int MAXN=1<<19;\n\nnamespace poly\n{\n\tconst int mod=998244353,gen=3;\n\t\n\tstatic int g[23][MAXN],iv[MAXN];\n\n\tinline int power(int u,int v)\n\t{\n\t\tregister int sm=1;\n\t\tfor(;v;v>>=1,u=(uint64)u*u%mod)if(v&1)\n\t\t\tsm=(uint64)sm*u%mod;\n\t\treturn sm;\n\t}\n\n\tinline void predone()\n\t{\n\t\tRep(i,1,18)\n\t\t{\n\t\t\tg[i][0]=1,g[i][1]=power(gen,(mod-1)>>i);\n\t\t\tRep(j,2,2e5)g[i][j]=(ll)g[i][j-1]*g[i][1]%mod;\n\t\t}\n\t}\n\n\tstatic int Len,rev[MAXN];\n\n\tinline void calrev()\n\t{\n\t\tint II=log(Len)/log(2)-1;\n\t\tRep(i,1,Len-1)rev[i]=rev[i>>1]>>1|(i&1)<<II;\n\t}\n\n\tinline int ad(int u,int v){return(u+=v)>=mod?u-mod:u;}\n\n\tinline void NTT(int*F,int typ)\n\t{\n\t\tRep(i,1,Len-1)if(i<rev[i])swap(F[i],F[rev[i]]);\n\t\tfor(register int i=2,ii=1,t=1;i<=Len;i<<=1,ii<<=1,++t)\n\t\t\tfor(register int j=0;j<Len;j+=i)rep(k,0,ii)\n\t\t\t{\n\t\t\t\tregister int tt=(uint64)*(F+j+k+ii)*g[t][k]%mod;\n\t\t\t\t*(F+j+k+ii)=ad(*(F+j+k),mod-tt);\n\t\t\t\t*(F+j+k)=ad(*(F+j+k),tt);\n\t\t\t}\n\t\tif(typ==-1)\n\t\t{\n\t\t\treverse(F+1,F+Len);\n\t\t\tregister uint64 invn=power(Len,mod-2);\n\t\t\trep(i,0,Len)*(F+i)=invn**(F+i)%mod;\n\t\t}\n\t}\n}\nusing poly::power;\nusing poly::Len;\nusing poly::calrev;\nusing poly::NTT;\nusing poly::mod;\nusing poly::predone;\nusing poly::ad;\n\nstatic int n,F[MAXN],G[MAXN],A[MAXN],B[MAXN];\n\nvoid cdq_FFT(int*F,int*G,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\tif(!l)F[l]=1;\n\t\treturn;\n\t}\n\tint md=(l+r)>>1;\n\tcdq_FFT(F,G,l,md);\n\tmemcpy(A,F+l,sizeof(int)*(md-l+1));\n\tmemcpy(B,G,sizeof(int)*(r-l+1));\n\tfor(Len=2;Len<=r-l+1;Len<<=1);\n\tcalrev();\n\tmemset(A+md-l+1,0,sizeof(int)*(Len-(md-l)));\n\tmemset(B+r-l+1,0,sizeof(int)*(Len-(r-l)));\n\tNTT(A,1),NTT(B,1);\n\trep(i,0,Len)A[i]=(ll)A[i]*B[i]%mod;\n\tNTT(A,-1);\n\tRep(i,md+1,r)F[i]=ad(F[i],A[i-l]);\n\tcdq_FFT(F,G,md+1,r);\n}\n\nint main()\n{\n\tfile();\n\tpredone();\n\tread(n);\n\trep(i,1,n)read(G[i]);\n\tcdq_FFT(F,G,0,n-1);\n\trep(i,0,n)write(F[i],' ');\n\tflush();\n\treturn 0;\n}\n```",
        "postTime": 1530690336,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4721 \u3010\u3010\u6a21\u677f\u3011\u5206\u6cbb FFT\u3011"
    },
    {
        "content": "\u751f\u6210\u51fd\u6570\n\n$$f[i]=\\sum_{j=1}^if[i-j]*g[j],i>0$$\n\n\u8bbe$f(x)=\\sum\\limits_{i=0}^\\infty f[i]x^i,g(x)=\\sum\\limits_{i=0}^\\infty g[i]x^i$\uff08\u8bbe$g[0]=0$\uff09\n\n\u53d1\u73b0\u628a$f$\u548c$g$\u5377\u79ef\u540e$f$**\u5e38\u6570\u9879**\u6ca1\u6709\u4e86\uff1a\n\n$$f(x)*g(x)=\\sum_{i=0}^\\infty\\sum_{j=0}^\\infty f[i]\\times g[j]x^{i+j}$$\n\n\u4ee4$k=i+j$\n\n$$f(x)*g(x)=\\sum_{k=0}^\\infty(\\sum_{j=0}^kf[k-j]g[j])x^k$$\n\n$k>0$\u65f6$\\sum_{j=0}^kf[k-j]g[j]=f[k]$\n\n$k=0$\u65f6$\\sum_{j=0}^kf[k-j]g[j]=0$\uff08$g[0]=0$\uff09\n\n\u6240\u4ee5$f(x)*g(x)=\\sum\\limits_{k=1}^\\infty f[k]x^k$\uff0c\u548c$f(x)$\u5bf9\u6bd4\u4e00\u4e0b\u53d1\u73b0\u5c31\u5dee\u4e86\u4e00\u4e2a\u5e38\u6570\u9879\n\n\u5373$f(x)*g(x)+f[0]=f(x)$\n\n\u7136\u540e\u7528\u521d\u4e2d\u6570\u5b66\u77e5\u8bc6\uff08\u5c31\u662f\u628a\u672a\u77e5\u6570\u6362\u6210\u4e86\u591a\u9879\u5f0f\uff09\u5c31\u80fd\u7b97\u51fa\u6765\n\n$$f(x)=\\frac{f[0]}{1-g(x)}$$\n\n\u591a\u9879\u5f0f\u6c42\u9006\u5c31\u5b8c\u4e86\n\n\n~~\u751f\u6210\u51fd\u6570\u771f\u662f\u4eba\u7c7b\u667a\u6167\u505a\u6cd5~~\n\n\u4ee3\u7801\uff08\u662f\u4e2a~~\u6b63\u5728\u5b8c\u5584\u7684~~\u591a\u9879\u5f0f\u677f\u5b50\uff0c\u4ec0\u4e48$\\ln \\exp$\u90fd\u6709\u53ef\u4ee5\u62ff\u53bb\u770b\uff09\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#define md 998244353LL\n#define inv(x) power(x,md-2)\n#define max_n 1000000\nusing namespace std;\n\nint n,N,i;\n\nlong long num[max_n],ans[max_n];\n\n//const double pi=acos(-1);\n//\n//struct complex\n//{\n//\tdouble x,y;\n//\tcomplex operator +(complex a)\n//\t{\n//\t\treturn (complex){x+a.x,y+a.y};\n//\t}\n//\tcomplex operator -(complex a)\n//\t{\n//\t\treturn (complex){x-a.x,y-a.y};\n//\t}\n//\tcomplex operator *(complex a)\n//\t{\n//\t\treturn (complex){x*a.x-y*a.y,x*a.y+y*a.x};\n//\t}\n//\tcomplex operator /(double a)\n//\t{\n//\t\treturn (complex){x/a,y/a};\n//\t}\n//};\n\nlong long power(long long a,long long n)\n{\n\tlong long ans=1;\n\twhile(n)\n\t{\n\t\tif(n&1)\n\t\t  ans=ans*a%md;\n\t\ta=a*a%md;\n\t\tn>>=1;\n\t}\n\treturn ans;\n}\n\nint re[max_n];\nvoid build_re(int N)\n{\n\tint x,now=N>>1,len=0;\n\twhile(now)\n\t  len++,now>>=1;\n\tfor(int i=0;i<N;i++)\n\t{\n\t\tx=i;now=0;\n\t\tfor(int j=0;j<len;j++)\n\t\t  now=(now<<1)|(x&1),x>>=1;\n\t\tre[i]=now;\n\t}\n}\n\n//void FFT(complex a[],int len,int opt)\n//{\n//\tfor(int i=0;i<len;i++)\n//\t  if(i<re[i])\n//\t    swap(a[i],a[re[i]]);\n//\tcomplex wn,w,x;\n//\tfor(int i=2;i<=len;i<<=1)\n//\t  for(int j=(wn=(complex){cos(pi*2/i),opt*sin(pi*2/i)},0);j<len;j+=i)\n//\t  \tfor(int k=(w=(complex){1,0},0);k<i>>1;k++,w=w*wn)\n//\t  \t  x=w*a[j+k+(i>>1)],a[j+k+(i>>1)]=a[j+k]-x,a[j+k]=a[j+k]+x;\n//\tif(opt==-1)\n//\t  for(int i=0;i<len;i++)\n//\t    a[i]=a[i]/len;\n//}\nvoid NTT(long long a[],int len,int opt)\n{\n\tfor(int i=0;i<len;i++)\n\t  if(i<re[i])\n\t    swap(a[i],a[re[i]]);\n\tlong long wn,w,x;\n\tfor(int i=2;i<=len;i<<=1)\n\t  for(int j=(wn=power(3,(md-1)/i),(opt==-1?wn=power(wn,md-2):0),0);j<len;j+=i)\n\t    for(int k=(w=1,0);k<i>>1;k++,w=w*wn%md)\n\t      x=a[j+k+(i>>1)]*w%md,a[j+k+(i>>1)]=(a[j+k]-x+md)%md,a[j+k]=(a[j+k]+x)%md;\n\tif(opt==-1)\n\t{\n\t\tlong long inv=power(len,md-2);\n\t\tfor(int i=0;i<len;i++)\n\t\t  a[i]=a[i]*inv%md;\n\t}\n}\n//void poly_mul(long long a[],long long b[],long long tar[],int len)\n//{\n//\tstatic long long A[4*max_n],B[4*max_n];\n//\tmemcpy(A,a,sizeof(long long)*len);memcpy(B,b,sizeof(long long)*len);\n//\tbuild_re(len);\n//\tNTT(A,len,1);NTT(B,len,1);\n//\tfor(int i=0;i<len;i++)\n//\t  tar[i]=A[i]*B[i]%md;\n//\tNTT(tar,len,-1);\n//}\nvoid poly_inv(long long a[],long long tar[],int len)\n{\n\tstatic long long now[4*max_n],ret[4*max_n];\n\tmemset(now,0,sizeof(long long)*len);memset(ret,0,sizeof(long long)*len);\n\tret[0]=inv(a[0]);\n\tfor(int i=2;i<=len;i<<=1)\n\t{\n\t\tbuild_re(i<<1);\n\t\tmemcpy(now,a,sizeof(long long)*i);\n\t\tNTT(ret,i<<1,1);NTT(now,i<<1,1);\n\t\tfor(int j=0;j<i<<1;j++)\n\t\t  ret[j]=ret[j]*(2LL-now[j]*ret[j]%md+md)%md;\n\t\tNTT(ret,i<<1,-1);\n\t\tmemset(ret+i,0,sizeof(long long)*i);\n\t}\n\tmemcpy(tar,ret,sizeof(long long)*len);\n}\n//void poly_dir(long long a[],long long tar[],int len)\n//{\n//\tfor(int i=0;i<len-1;i++)\n//\t  tar[i]=a[i+1]*(i+1)%md;\n//}\n//void poly_int(long long a[],long long tar[],int len)\n//{\n//\tfor(int i=len;i>=1;i--)\n//\t  tar[i]=a[i-1]*inv(i)%md;\n//\ttar[0]=0;\n//}\n//void poly_ln(long long a[],long long tar[],int len)\n//{\n//\tstatic long long now[4*max_n],ret[4*max_n];\n//\tmemset(now,0,sizeof(long long)*len);memset(ret,0,sizeof(long long)*len);\n//\tpoly_inv(a,ret,len);\n//\tpoly_dir(a,now,len);\n//\tpoly_mul(now,ret,ret,len<<1);\n//\tpoly_int(ret,ret,len);\n//\tmemcpy(tar,ret,sizeof(long long)*len);\n//}\n//void poly_exp(long long a[],long long tar[],int len)\n//{\n//\tstatic long long now[4*max_n],ret[4*max_n],ln[4*max_n];\n//\tmemset(now,0,sizeof(long long)*len);memset(ret,0,sizeof(long long)*len);memset(ln,0,sizeof(long long)*len);\n//\tret[0]=1;\n//\tfor(int i=2;i<=len;i<<=1)\n//\t{\n//\t\tpoly_ln(ret,now,i);\n//\t\tfor(int j=0;j<i;j++)\n//\t\t  now[j]=(a[j]-now[j]+(j==0)+md)%md;\n//\t\tpoly_mul(now,ret,ret,i<<1);\n//\t}\n//\tmemcpy(tar,ret,sizeof(long long)*len);\n//}\n\nchar Getchar()\n{\n\treturn getchar();\n\tstatic char buff[1000000],*p,*end=p;\n\tif(p==end)\n\t  end=buff+fread(p=buff,1,1000000,stdin);\n\treturn *(p++);\n}\ntemplate<typename T>void read(T &x)\n{\n\tstatic char rc;\n\tx=0;rc=Getchar();\n\twhile(!isdigit(rc))\n\t  rc=Getchar();\n\twhile(isdigit(rc))\n\t  x=x*10+rc-'0',rc=Getchar();\n}\n\nint main()\n{\n\tread(n);num[0]=1;\n\tfor(i=1;i<n;i++)\n\t  read(num[i]),num[i]=-num[i];\n\tN=1;\n\twhile(N<n)\n\t  N<<=1;\n\tpoly_inv(num,ans,N);\n\tfor(i=0;i<n;i++)\n\t  cout<<ans[i]<<' ';\n\treturn 0;\n}\n```",
        "postTime": 1546696155,
        "uid": 9517,
        "name": "a2956331800",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4721 \u3010\u3010\u6a21\u677f\u3011\u5206\u6cbb FFT\u3011"
    },
    {
        "content": "\u591a\u9879\u5f0f\u6c42\u9006\u5927\u6cd5\u597d!\n________________\n\u5982\u679c\u4f60\u4e0d\u4f1a\u751f\u6210\u51fd\u6570\u90a3\u4e00\u5957\u7406\u8bba\u8bf7\u5de6\u8f6c\u95ee\u5ea6\u5a18\n\n\u6211\u4eec\u8003\u8651\u4e07\u80fd\u7684\u751f\u6210\u51fd\u6570\u2026\u2026\u6765\u6c42\u8fd9\u4e2a\u591a\u9879\u5f0ff\n\n\u5047\u8bbe\u8fd9\u4e2a\u591a\u9879\u5f0f\u7684\u751f\u6210\u51fd\u6570\u662f$f(x)$\u90a3\u4e48\u6211\u4eec\u5c31\u662f\u8981\u6c42\u8fd9\u4e2a\u591a\u9879\u5f0f\u7684\u751f\u6210\u51fd\u6570\n\n\u7136\u540e\u6211\u4eec\u5462\u53d1\u73b0\u8fd9\u4e2a\u751f\u6210\u51fd\u6570$f(x)$\u6709\u4e00\u4e2a\u975e\u5e38\u68d2\u7684\u7279\u70b9\uff0c\u5c31\u662f\u5b83\u5377\u79ef\u4e00\u4e2a$g(x)$\u4e4b\u540e\u6574\u4f53\u5411\u53f3\u79fb\u4e86\u4e00\u4f4d\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5217\u51fa\u8fd9\u6837\u4e00\u4e2a\u591a\u9879\u5f0f\u65b9\u7a0b\n\n## $f(x)g(x)+f_{0}=f(x)$\n\n\u7136\u540e\u79fb\u9879\n\n## $(1-g(x))f(x)=f_{0}$\n\n\u7531\u4e8e\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa$f(x)$\u7684\u524dn\u9879\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u819c$x^{n}$\u7684\u610f\u4e49\u4e0b\u8fdb\u884c\u8fd0\u7b97\n\n## $(1-g(x))f(x) \\equiv f_{0} (modx^n)$\n\n\u6b64\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u4e24\u8fb9\u540c\u65f6\u4e58\u9006\u5143\u5566\u2026\u2026\n\n## $f(x) \\equiv f_{0}(1-g(x))^{-1} (mod x^n)$\n\n\n\u5269\u4e0b\u7684\u4e8b\u60c5\u5c31\u662f\u5de6\u8f6c\u9694\u58c1\u201c\u3010\u6a21\u677f\u3011 \u591a\u9879\u5f0f\u6c42\u9006\u201d\u7136\u540e\u7c98\u4e00\u904d\u677f\u5b50\u7684\u4e8b\u60c5\u5566\u2026\u2026\n\n\u4e0a\u4ee3\u7801~\n\n```C\n#include<cstdio>\n#include<algorithm>\nusing namespace std;const int N=262144+10;typedef unsigned long long ll;const ll mod=998244353;\nint rv[N];ll rt[2][20];ll tr1[N];ll tr2[N];ll g[N];ll ig[N];int Len;int n;\ninline ll po(ll a,ll p){ll r=1;for(;p;p>>=1,a=a*a%mod)if(p&1)r=r*a%mod;return r;}\ninline void ntt(ll* a,int o,int len)//ntt\n{\n\tfor(int i=0;i<len;i++)if(i<rv[i])swap(a[i],a[rv[i]]);ll a0,a1;\n\tfor(int k=1,j=1;k<len;k<<=1,j++)\n\t\tfor(int s=0;s<len;s+=(k<<1))\n\t\t\tfor(int i=s,w=1;i<s+k;i++,w=w*rt[o][j]%mod)\n\t\t\ta0=a[i],a1=w*a[i+k]%mod,a[i]=(a0+a1)%mod,a[i+k]=(a0+mod-a1)%mod;\n\tif(o==1){ll inv=po(len,mod-2);for(int i=0;i<len;i++)(a[i]*=inv)%=mod;}\n}\ninline void poly_inv(ll* a,ll* b,int len)//\u500d\u589e\u591a\u9879\u5f0f\u6c42\u9006\n{\n\tb[0]=po(a[0],mod-2);\n\tfor(int k=1,j=0;k<=len;k<<=1,j++)\n\t{\n\t\tfor(int i=1;i<(k<<1);i++)rv[i]=(rv[i>>1]>>1)|((i&1)<<j);\n\t\tfor(int i=0;i<k;i++)tr1[i]=a[i];for(int i=0;i<k;i++)tr2[i]=b[i];\n\t\tntt(tr1,0,k<<1);ntt(tr2,0,k<<1);\n\t\tfor(int i=0;i<(k<<1);i++)b[i]=tr2[i]*(2+mod-tr1[i]*tr2[i]%mod)%mod;\n\t\tntt(b,1,k<<1);for(int i=k;i<(k<<1);i++)b[i]=0;\n\t}\n}\nint main()\n{\n\tfor(int k=2,j=1;j<=18;k<<=1,j++)rt[0][j]=po(3,(mod-1)/k);\n\tfor(int k=2,j=1;j<=18;k<<=1,j++)rt[1][j]=po(332748118,(mod-1)/k);\n\tscanf(\"%d\",&n);for(int i=1;i<n;i++)scanf(\"%lld\",&g[i]);\n\tfor(Len=1;Len<n;Len<<=1);for(int i=1;i<n;i++)g[i]=mod-g[i];(g[0]+=1)%=mod;//\u5904\u7406\u51fa\u8981\u6c42\u9006\u7684\u591a\u9879\u5f0f\n\tpoly_inv(g,ig,Len);\n\tfor(int i=0;i<n;i++)printf(\"%lld \",ig[i]);printf(\"\\n\");return 0;\n}\n\n```",
        "postTime": 1530523047,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4721 \u3010\u3010\u6a21\u677f\u3011\u5206\u6cbb FFT\u3011"
    },
    {
        "content": "[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/Memory-of-winter/p/10127918.html)\n\n**\u9898\u76ee\u5927\u610f\uff1a**\u7ed9\u5b9a\u957f\u5ea6\u4e3a$n-1$\u7684\u6570\u7ec4$g_{[1,n)}$\uff0c\u6c42$f_{[0,n)}$\uff0c\u8981\u6c42\uff1a\n\n$$f_i=\\sum_{j=1}^if_{i-j}g_j$$\n$$f_0=1$$\n\n**\u9898\u89e3\uff1a**\u76f4\u63a5\u6c42\u590d\u6742\u5ea6\u662f$O(n^2)$\uff0c\u660e\u663e\u4e0d\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\n\n\u5206\u6cbb$FFT$\uff0c\u53ef\u4ee5\u7528$CDQ$\u5206\u6cbb\uff0c\u5148\u6c42\u51fa$f_{[l,mid)}$\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u90e8\u5206\u5bf9\u533a\u95f4\u7684$f_{[mid,r)}$\u7684\u8d21\u732e\u662f$f_{[l,mid)}*g_{[0,r-l)}$\uff0c\u5377\u51fa\u6765\u52a0\u5230\u5bf9\u5e94\u4f4d\u7f6e\u5c31\u884c\u4e86\uff0c\u590d\u6742\u5ea6$O(n\\log_2^2n)$\n\n\u6709\u540c\u5b66\u6307\u51fa\u6211\u8fd9\u4efd\u4ee3\u7801\u6709\u95ee\u9898\uff0c\u6211\u56de\u53bb\u770b\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u8bfb\u5165$g$\u6570\u7ec4\u7684\u5730\u65b9\u5199\u9505\u4e86\uff0c\u5e94\u8be5\u662f\u8bfb\u5165$g_1\\sim g_{n-1}$\uff0c\u5199\u6210\u4e86$g_1\\sim g_n$\uff0c\u7136\u540e\u56e0\u4e3a\u662f\u7528\u4e86\u5feb\u8bfb\uff0c\u6ca1\u6709\u53d1\u73b0\u95ee\u9898\u3002\u5341\u5206\u62b1\u6b49\uff08\u611f\u8c22 @Lisy_03 \u6307\u51fa\u9519\u8bef\uff09\n\n**C++ Code\uff1a**\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cctype>\nnamespace std {\n\tstruct istream {\n#define M (1 << 21 | 3)\n\t\tchar buf[M], *ch = buf - 1;\n\t\tinline istream() {\n#ifndef ONLINE_JUDGE\n\t\t\tfreopen(\"input.txt\", \"r\", stdin);\n#endif\n\t\t\tfread(buf, 1, M, stdin);\n\t\t}\n\t\tinline istream& operator >> (int &x) {\n\t\t\twhile (isspace(*++ch));\n\t\t\tfor (x = *ch & 15; isdigit(*++ch); ) x = x * 10 + (*ch & 15);\n\t\t\treturn *this;\n\t\t}\n#undef M\n\t} cin;\n\tstruct ostream {\n#define M (1 << 21 | 3)\n\t\tchar buf[M], *ch = buf - 1;\n\t\tint w;\n\t\tinline ostream& operator << (int x) {\n\t\t\tif (!x) {\n\t\t\t\t*++ch = '0';\n\t\t\t\treturn *this;\n\t\t\t}\n\t\t\tfor (w = 1; w <= x; w *= 10);\n\t\t\tfor (w /= 10; w; w /= 10) *++ch = (x / w) ^ 48, x %= w;\n\t\t\treturn *this;\n\t\t}\n\t\tinline ostream& operator << (const char x) {*++ch = x; return *this;}\n\t\tinline ~ostream() {\n#ifndef ONLINE_JUDGE\n\t\t\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\t\tfwrite(buf, 1, ch - buf + 1, stdout);\n\t\t}\n#undef M\n\t} cout;\n}\n\n#define maxn 131072 | 3\nconst int mod = 998244353, G = 3;\n\nnamespace Math {\n\tinline int pw(int base, int p) {\n\t\tstatic int res;\n\t\tfor (res = 1; p; p >>= 1, base = static_cast<long long> (base) * base % mod) if (p & 1) res = static_cast<long long> (res) * base % mod;\n\t\treturn res;\n\t}\n\tinline int inv(int x) {return pw(x, mod - 2);}\n}\n\nint n;\nint f[maxn], g[maxn];\nnamespace Poly {\n#define N 131072 | 3\n\tint s, lim, ilim, rev[N];\n\tint Wn[N + 1];\n\tinline void reduce(int &x) {x += x >> 31 & mod;}\n\tinline void clear(register int *l, const int *r) {\n\t\tif (l >= r) return ;\n\t\twhile (l != r) *l++ = 0;\n\t}\n\tinline void init(const int n) {\n\t\ts = -1, lim = 1; while (lim <= n) lim <<= 1, s++; ilim = Math::inv(lim);\n\t\tfor (int i = 1; i < lim; i++) rev[i] = rev[i >> 1] >> 1 | (i & 1) << s;\n\t\tconst int t = Math::pw(G, (mod - 1) / lim);\n\t\t*Wn = 1; for (register int *i = Wn; i != Wn + lim; ++i) *(i + 1) = static_cast<long long> (*i) * t % mod;\n\t}\n\n\tinline void NTT(int *A, const int op = 1) {\n\t\tfor (register int i = 1; i < lim; i++) if (i < rev[i]) std::swap(A[i], A[rev[i]]);\n\t\tfor (register int mid = 1; mid < lim; mid <<= 1) {\n\t\t\tconst int t = lim / mid >> 1;\n\t\t\tfor (register int i = 0; i < lim; i += mid << 1) {\n\t\t\t\tfor (register int j = 0; j < mid; j++) {\n\t\t\t\t\tconst int W = op ? Wn[t * j] : Wn[lim - t * j];\n\t\t\t\t\tconst int X = A[i + j], Y = static_cast<long long> (A[i + j + mid]) * W % mod;\n\t\t\t\t\treduce(A[i + j] += Y - mod), reduce(A[i + j + mid] = X - Y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!op) for (int i = 0; i < lim; i++) A[i] = static_cast<long long> (A[i]) * ilim % mod;\n\t}\n\n\tint A[N], B[N];\n\tvoid CDQ_NTT(const int l, const int r) {\n\t\tif (r - l < 2) return ;\n\t\tconst int mid = l + r >> 1;\n\t\tCDQ_NTT(l, mid); init(r - l);\n\t\tstd::copy(f + l, f + mid, A); clear(A + mid - l, A + lim);\n\t\tstd::copy(g, g + r - l, B); clear(B + r - l, B + lim);\n\t\tNTT(A), NTT(B);\n\t\tfor (int i = 0; i < lim; i++) A[i] = static_cast<long long> (A[i]) * B[i] % mod;\n\t\tNTT(A, 0);\n\t\tfor (int i = mid; i < r; i++) reduce(f[i] += A[i - l] - mod);\n\t\tCDQ_NTT(mid, r);\n\t}\n#undef N\n}\n\nint main() {\n\tstd::cin >> n;\n\tfor (int i = 1; i < n; i++) std::cin >> g[i];\n\t*f = 1;\n\tPoly::CDQ_NTT(0, n);\n\tfor (int i = 0; i < n; i++) std::cout << f[i] << ' ';\n\tstd::cout << '\\n';\n\treturn 0;\n}\n\n```\n\n\n---\n\n\u65e2\u7136\u6211\u4ee3\u7801\u9505\u4e86\uff0c\u8981\u91cd\u65b0\u5ba1\u6838\uff0c\u5c31\u518d\u8865\u4e00\u7bc7\u6c42\u9006\u7684\u535a\u5ba2\u5427\u3002\uff08\u7136\u540e\u6211\u6c42\u9006\u7684\u535a\u5ba2\u53c8\u9505\u4e86\uff0c~~\u8fd9\u662f\u540e\u8bdd~~\uff0c\u611f\u8c22 @Owen_codeisking \u6307\u51fa\u9519\u8bef\uff09\n\n[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/Memory-of-winter/p/10133416.html)\n\n\n**\u9898\u89e3\uff1a**\u53d1\u73b0\u8fd9\u9053\u9898\u5c31\u662f\u6c42$f*g=f-1$\uff08$f-1$\u5c31\u662f\u6ca1\u6709\u5e38\u6570\u9879\u7684$f$\uff09\uff0c\u6539\u5199\u4e00\u4e0b\u5f0f\u5b50\uff1a\n\n$$\\begin{aligned}f*g\\equiv f-1\\pmod{x^n}\\\\f-f*g\\equiv1\\pmod{x^n}\\\\f*(1-g)\\equiv1\\pmod{x^n}\\\\f\\equiv(1-g)^{-1}\\pmod{x^n}\\end{aligned}$$\n\n\u5c31\u53ef\u4ee5\u6c42\u9006\u4e86\n\n**C++ Code\uff1a**\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cctype>\nnamespace std {\n\tstruct istream {\n#define M (1 << 21 | 3)\n\t\tchar buf[M], *ch = buf - 1;\n\t\tinline istream() {\n#ifndef ONLINE_JUDGE\n\t\t\tfreopen(\"input.txt\", \"r\", stdin);\n#endif\n\t\t\tfread(buf, 1, M, stdin);\n\t\t}\n\t\tinline istream& operator >> (int &x) {\n\t\t\twhile (isspace(*++ch));\n\t\t\tfor (x = *ch & 15; isdigit(*++ch); ) x = x * 10 + (*ch & 15);\n\t\t\treturn *this;\n\t\t}\n#undef M\n\t} cin;\n\tstruct ostream {\n#define M (1 << 21 | 3)\n\t\tchar buf[M], *ch = buf - 1;\n\t\tint w;\n\t\tinline ostream& operator << (int x) {\n\t\t\tif (!x) {\n\t\t\t\t*++ch = '0';\n\t\t\t\treturn *this;\n\t\t\t}\n\t\t\tfor (w = 1; w <= x; w *= 10);\n\t\t\tfor (w /= 10; w; w /= 10) *++ch = (x / w) ^ 48, x %= w;\n\t\t\treturn *this;\n\t\t}\n\t\tinline ostream& operator << (const char x) {*++ch = x; return *this;}\n\t\tinline ~ostream() {\n#ifndef ONLINE_JUDGE\n\t\t\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\t\tfwrite(buf, 1, ch - buf + 1, stdout);\n\t\t}\n#undef M\n\t} cout;\n}\n\nconst int mod = 998244353, G = 3;\nnamespace Math {\n\tinline int pw(int base, int p) {\n\t\tstatic int res;\n\t\tfor (res = 1; p; p >>= 1, base = static_cast<long long> (base) * base % mod) if (p & 1) res = static_cast<long long> (res) * base % mod;\n\t\treturn res;\n\t}\n\tinline int inv(int x) {return pw(x, mod - 2);}\n}\n\ninline void reduce(int &a) {a += a >> 31 & mod;}\ninline long long get_reducell(long long a) {return a += a >> 63 & mod;}\nnamespace Poly {\n#define N (262144 | 3)\n\tint lim, ilim, s, rev[N];\n\tint Wn[N + 1];\n\tinline void init(int n) {\n\t\ts = -1, lim = 1; while (lim <= n) lim <<= 1, s++; ilim = Math::inv(lim);\n\t\tfor (register int i = 1; i < lim; i++) rev[i] = rev[i >> 1] >> 1 | (i & 1) << s;\n\t\tconst int t = Math::pw(G, (mod - 1) / lim);\n\t\t*Wn = 1; for (register int *i = Wn; i != Wn + lim; ++i) *(i + 1) = static_cast<long long> (*i) * t % mod;\n\t}\n\tinline void clear(register int *l, const int *r) {\n\t\tif (l >= r) return ;\n\t\twhile (l != r) *l++ = 0;\n\t}\n\n\tinline void NTT(int *A, const int op = 1) {\n\t\tfor (register int i = 1; i < lim; i++) if (i < rev[i]) std::swap(A[i], A[rev[i]]);\n\t\tfor (register int mid = 1; mid < lim; mid <<= 1) {\n\t\t\tconst int t = lim / mid >> 1;\n\t\t\tfor (register int i = 0; i < lim; i += mid << 1) {\n\t\t\t\tfor (register int j = 0; j < mid; j++) {\n\t\t\t\t\tconst int W = op ? Wn[t * j] : Wn[lim - t * j];\n\t\t\t\t\tconst int X = A[i + j], Y = static_cast<long long> (A[i + j + mid]) * W % mod;\n\t\t\t\t\treduce(A[i + j] += Y - mod), reduce(A[i + j + mid] = X - Y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!op) for (register int *i = A; i != A + lim; ++i) *i = static_cast<long long> (*i) * ilim % mod;\n\t}\n\n\tint C[N];\n\tvoid INV(int *A, int *B, int n) {\n\t\tif (n == 1) {*B = Math::inv(*A); return ;}\n\t\tINV(A, B, n + 1 >> 1);\n\t\tinit(n + n - 1);\n\t\tstd::copy(A, A + n, C); clear(C + n, C + lim);\n\t\tNTT(B), NTT(C);\n\t\tfor (register int i = 0; i < lim; i++) B[i] = (2 - static_cast<long long> (B[i]) * C[i] % mod + mod) % mod * B[i] % mod;\n\t\tNTT(B, 0), clear(B + n, B + lim);\n\t}\n#undef N\n}\n\n#define maxn (262144 | 3)\nint n, f[maxn], g[maxn];\n\nint main() {\n\tstd::cin >> n;\n\t*g = 1;\n\tfor (int i = 1; i < n; i++) {\n\t\tstd::cin >> g[i];\n\t\tg[i] = mod - g[i];\n\t}\n\tPoly::INV(g, f, n);\n\tfor (int i = 0; i < n; i++) std::cout << f[i] << ' ';\n\tstd::cout << '\\n';\n\treturn 0;\n}\n```",
        "postTime": 1544964736,
        "uid": 22072,
        "name": "Memory_of_winter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4721 \u3010\u3010\u6a21\u677f\u3011\u5206\u6cbb FFT\u3011"
    }
]