[
    {
        "content": "## \u51fa\u9898\u4eba\u7684\u9898\u89e3\n#### \u771f\u7684\u4e0d\u60f3\u8bf4\u4ec0\u4e48\uff0c\u5728\u6bd4\u8d5b\u672c\u9898\u4e3a\u9882\u7eb7\u9898\uff0c\u5982\u679c\u8fd9\u90fd\u9001\u4e0d\u8fdb\u7684\u8bdd\uff0c\u5efa\u8bae\u518d\u5b66\u4e60\u4e00\u4e0b[\u9ad8\u7cbe\u5ea6\u6a21\u677f](https://www.luogu.org/problemnew/show/P1009)\u3002\u53ef\u5728\u6bd4\u8d5b\u4e2d\uff0c\u8fd8\u662f\u6709\u4eba\u6253\u4e0d\u51fa\u9ad8\u7cbe\u3002\u73b0\u5728\u666e\u53ca\u9009\u624b\u53ef\u4ee5\u7528\u6765\u52a0\u6df1\u9ad8\u7cbe\u7684\u5370\u8c61\uff0c\u4f46\u4e3a\u4f55\u6b64\u9898\u7684\u96be\u5ea6\u662f\u63d0\u9ad8+/\u7701\u9009-\u3002\u96be\u9053\u662f\u9519\u8bef\u7387\u9ad8\u5bfc\u81f4\u7684???\n\n### \u7b80\u5355\u9898\u610f\uff1a\n\n\u5c06\u5b57\u7b26\u4e32\u79fb\u4f4d\uff0c\u5728\u5c06\u5176ASCLL\u7801\u76f8\u4e58\uff08ord\uff08pascal\uff09\uff0c\uff08int\uff09\uff08C++\uff09\uff09\u9ad8\u7cbe\u3002\n\n### \u90e8\u5206\u5206\u83b7\u53d6\uff1a\n\n\u6253\u66b4\u529b30\u5206\u3002\uff08\u5f00long long(C++) int64(pascal)\uff09\n\n\u9ad8\u7cbe\u6ee1\u5206\n\n### \u9ad8\u7cbe\n\n\u4e0d\u591a\u8bf4\uff0c\u5b9e\u5728\u4e0d\u884c\u81ea\u5df1\u80cc\u677f\u53bb\u5427\u3002\u6211\u4e5f\u5e2e\u4e0d\u4e86\u4f60\u3002\n\n### \u603b\u7ed3\n\n\u5f88\u597d\u5947\u8fd9\u4e2a\u6807\u7b7e\u662f\u600e\u4e48\u8ba1\u7b97\u7684\u3002\u4f46\u6211\u4e3a\u6d1b\u8c37\u7684P5000\u611f\u5230\u9ad8\u5174\uff0c\u4e3a\u5927\u5bb6\u7684\u652f\u6301\u9ad8\u5174\u3002\n\n### \u4ee3\u7801\uff08\u8dd1\u5f97\u6162\uff0c\u4f5c\u8005\u61d2\u5f97\u6253\u66f4\u5feb\u7684\uff09\n```pascal\nvar n,r,i,j,k,t,j1,lb,len,x,y:longint;s:ansistring;\na,b,c:array[0..10000] of longint;\nbegin\n  assign(input,'hillwer.in');reset(input);\n  assign(output,'hillwer.out');rewrite(output);\n  readln(n,r);r:=r mod 26;\n  for i:=1 to n do\n  begin\n    readln(s);\n    for j:=1 to length(s) do\n    begin\n      for k:=1 to r do//\u8fd9\u91cc\u53ef\u4ee5\u4f18\u5316\u76f4\u63a5((ord(s[j])-64)+r-1)mod 26+1\n       if s[j]='Z' then s[j]:='A' else s[j]:=succ(s[j]);\n      write(s[j]);\n    end;writeln;\n    fillchar(a,sizeof(a),0);\n    lb:=2;len:=1;a[1]:=1;\n    for j:=1 to length(s) do//\u9ad8\u7cbe\u4e58\n    begin\n      y:=ord(s[j]);\n      b[1]:=y mod 10;\n      b[2]:=y div 10;\n      fillchar(c,sizeof(c),0);\n      for k:=1 to len do\n      begin\n        x:=0;\n        for t:=1 to lb do\n        begin\n          c[k+t-1]:=a[k]*b[t]+x+c[k+t-1];\n          x:=c[k+t-1] div 10;\n          c[k+t-1]:=c[k+t-1] mod 10;\n        end;\n        c[k+t]:=x;\n      end;\n      len:=len+lb;a:=c;\n      while (c[len]=0)and(len>0) do dec(len);\n    end;\n    for j:=len downto 1 do write(c[j]);writeln;\n  end;\n  close(input);\n  close(output);\nend.\n\n```",
        "postTime": 1541402637,
        "uid": 119685,
        "name": "Kevin_Wa",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5000 \u3010Hillwer\u7f16\u7801\u3011"
    },
    {
        "content": "\u5728\u6b64\u518d\u53d1\u5e03\u4e0a\u6bd2\u7624\u9a8c\u9898\u4eba\u7684\u7a0b\u5e8f\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u8dd1\u7684\u6bd4\u6807\u7b97\u5feb\u3002\u9ad8\u7cbe+\u5b57\u7b26\u4e32\u6a21\u62df\u662f\u6700\u88f8\u7684\u63d0\u793a\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define LL long long\n#define N 1111111\n#define reg register\nusing namespace std;\nint read(){\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch<'0' || ch>'9'){\n        if(ch=='-') f=-1;\n        ch=getchar();\n    }\n    while(ch>='0' && ch<='9'){\n        x=x*10+ch-'0';ch=getchar();\n    }\n    return x*f;\n}\nint n,m;\nstring s;\nint f[N];\nvoid times(int p){ \u7b80\u5355\u7684\u9ad8\u7cbe\n    int x=0;\n    for (int i=1;i<=f[0];++i){\n        f[i]=f[i]*p+x;\n        x=f[i]/10;\n        f[i]=f[i]%10;\t\n    }\n    while (x>0){\n        f[0]++;\n        f[f[0]]=x%10;\n        x=x/10;\n    }\n}\nint main(){\n    //freopen(\".in\",\"r\",stdin);\n    //freopen(\".out\",\"w\",stdout);\n    \n    scanf(\"%d%d\",&n,&m);\n    for (int i=1;i<=n;++i){\n        cin>>s;  //\u8bfb\u5165\n        f[0]=1;f[1]=1;\n        for (int j=0;j<s.size();++j){\n            s[j]=(s[j]+m-65)%26+65;//\u5b57\u7b26\u4e32\u5904\u7406\n            times(s[j]);//\u9ad8\u7cbe\n        }\n        cout<<s<<endl;\n        for (int j=f[0];j>=1;--j) printf(\"%d\",f[j]);\n        printf(\"\\n\");\n    } \n    \n    fclose(stdin);\n    fclose(stdout);\n    return 0;\n}\n```",
        "postTime": 1542926273,
        "uid": 119685,
        "name": "Kevin_Wa",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5000 \u3010Hillwer\u7f16\u7801\u30112"
    },
    {
        "content": "\u8fd9\u9898\u4e5f\u6ca1\u5565\uff0c\u4e3b\u8981\u662f\u9ad8\u7cbe\u4e58\u4f4e\u7cbe\n\n\u5bf9\u4e8e$R$\u5148$%26$\uff0c\u7136\u540e\u52a0\u4e00\u904d\uff0c\u8d85\u8fc7$90$\u7684\u5c31$-26$\uff0c\u7136\u540e\u8f93\u51fa\u5b57\u7b26\u4e32\n\n\u5f00\u59cb\u4e58\n\n\u7b54\u6848\u4e3a$ans$\u6570\u7ec4\uff0c$ans[0]$\u8868\u793a\u4f4d\u6570\uff0c\u56e0\u4e3a\u662f\u4e58\u6cd5\uff0c\u6240\u4ee5\u521d\u503c$ans[0]=ans[1]=1$\n\n\u6bcf\u6b21\u4e58\u6cd5\u5148\u5bf9$ans$\u4e2d\u6bcf\u4e00\u4f4d\u4e58\u4e0a\u4f4e\u7cbe\u7684\u90a3\u4e2a\uff0c\u7136\u540e\u8fdb\u4f4d\u5c31\u884c\u4e86\u3002\n\n\u6700\u540e\u5012\u5e8f\u8f93\u51fa\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int maxn=605;\nint n,r,len,g,now;\nchar ch[maxn];\nint ans[maxn<<2];\ninline void mul(int a1[],int x){\n\tfor(int i=1;i<=a1[0];++i)\n\t\ta1[i]*=x;\n\tg=0;\n\tfor(int i=1;i<=a1[0];++i){\n\t\tnow=g;\n\t\tg=(a1[i]+g)/10;\n\t\ta1[i]=(a1[i]+now)%10;\n\t}\n\twhile(g){\n\t\ta1[++a1[0]]=g%10;\n\t\tg/=10;\n\t}\n    if(a1[a1[0]+1]>=1) a1[0]++;\n    while(a1[a1[0]]==0&&a1[0]>1)--a1[0];\n}\nint main(){\n\tscanf(\"%d%d\",&n,&r);\n\tr%=26;\n\tfor(int i=1;i<=n;i++){\n\t\tmemset(ans,0,sizeof(ans));\n\t\tans[0]=ans[1]=1;\n\t\tscanf(\"%s\",ch+1);\n\t\tlen=strlen(ch+1);\n\t\tfor(int j=1;j<=len;++j)\n\t\t\tch[j]=(ch[j]+r)>90?ch[j]+r-26:ch[j]+r;\n\t\tprintf(\"%s\\n\",ch+1);\n\t\tfor(int i=1;i<=len;++i)\n\t\t\tmul(ans,ch[i]);\n\t\tfor(int i=ans[0];i>=1;--i)\n\t\t\tprintf(\"%d\",ans[i]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1569315755,
        "uid": 151768,
        "name": "\u6d41\u901d\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5000 \u3010Hillwer\u7f16\u7801\u3011"
    },
    {
        "content": "## \u8fd9\u6837\u7684\u9ad8\u7cbe\u5ea6\u9898\uff0c\u600e\u4e48\u6ca1\u6709\u4e00\u7bc7python\u9898\u89e3\u5462\n\n~~\u987a\u4fbf\u6211\u4eec\u6765\u5b66\u4e60\u4e00\u4e0b$python$\u7684\u4e00\u4e9b\u57fa\u672c\u5165\u95e8\u64cd\u4f5c\uff0c\u8fd9\u6837\u4ee5\u540e\u5c31\u53ef\u4ee5\u8650\u9ad8\u7cbe\u5ea6\u7684\u6a21\u677f\u9898\u4e86~~\n\n\u8fd9\u9053\u9898\u7684\u9898\u610f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u628a\u5b57\u7b26\u4e32\u7684\u6bcf\u4e2a\u4f4d\u5f80\u540e\u63a8$R$\u4f4d\uff0c\u7136\u540e\u518d\u628a\u5404\u4e2a\u4f4d\u4e0a\u7684$Ascii$\u7801\u4e58\u8d77\u6765\n\n~~\u8bdd\u8bf4\u6211\u662f\u6bd4\u8d5b\u524d\u8fd9\u9898\u7b2c\u4e00\u4e2a\u9a8c\u9898\u7684\u4eba\u8bf6$qwq$\uff0c\u5f53\u65f6\u6211\u9ad8\u7cbe\u5ea6\u534a\u4e2a\u5c0f\u65f6\u6ca1\u8c03\u51fa\u6765~~\n\n```\n# python\u7684\u6ce8\u91ca\u662f\u7528#\u53f7\u7684\nn,m=input().split() #\u8bfb\u5165\u90e8\u5206\uff0c\u7528\u8fd9\u6837\u7684\u65b9\u5f0f\u5728\u540c\u4e00\u884c\u8bfb\u5165\u591a\u4e2a\u5b57\u7b26\uff0c\u4f46\u662f\u90fd\u662f\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\nt=int(n)\nr=int(m)%26 #\u5fc5\u987b\u7528int\uff0c\u8fd9\u91cc\u7684int\u4e0d\u662f\u6307\u6362\u4e3aascii\u7801\uff0c\u800c\u662f\u76f4\u63a5\u8f6c\u4e3a\u6570\u5b57\uff0c\u5c31\u548cpascal\u7684val\u76f8\u4f3c\uff1b\u5bf926\u53d6\u6a21\uff0c\u56e0\u4e3a26\u4e2a\u5b57\u6bcd\u4e00\u5faa\u73af\nwhile (t>0): #while\u8bed\u53e5\u662f\u8fd9\u4e48\u6253\u7684\n    s=input()\n    t=t-1\n    ans=1 #\u7b54\u6848\u5728\u8fd9\u91cc\u54df\n    s1=\"\" #python\u4e0d\u652f\u6301\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u5176\u4e2d\u4e00\u4f4d\u7684\u4fee\u6539\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u65b0\u5f00\u4e00\u4e2a\u5217\u8868\n    for i in range(0,len(s)-1): #for\u5faa\u73af\u662f\u8fd9\u4e48\u6253\u7684\uff0clen\u51fd\u6570\u7b49\u4e8epascal\u4e2d\u7684length\uff0c\u8fd9\u91cc\u5982\u679c\u53f3\u8fb9\u8303\u56f4\u53d6len(s)\u7684\u8bdd\u4f1a\u591a\u51fa\u4e00\u4e2a\u5947\u5947\u602a\u602a\u7684\u5b57\u7b26\n        x=chr(ord(s[i])+r) #\u5f80\u540e\u63a8r\u4f4d\uff0cord\u548cchr\u8fd9\u4e24\u4e2a\u51fd\u6570P\u515a\u90fd\u61c2\u5427\n        if (x>'Z'): #if\u8bed\u53e5\u662f\u8fd9\u4e48\u6253\u7684\n            x=chr(ord(x)-26) #\u5982\u679c\u8d85\u51faZ\u4e86\u5c31\u53d6\u6a21\n        ans*=ord(x)\n        s1=s1+x #\u628a\u7b54\u6848\u5b58\u5165\u5217\u8868\n    print(s1) #\u6109\u5feb\u8f93\u51fa\n    print(ans)\n```\n\n\u8fd9\u79cd\u65b9\u5f0f\u5e94\u8be5\u4e0d\u662f\u6700\u77ed\u7684\uff0c\u4f46\u5df2\u7ecf\u662f\u5f88\u77ed\u4e86$qwq$",
        "postTime": 1548910837,
        "uid": 107231,
        "name": "zombie462",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5000 \u3010Hillwer\u7f16\u7801\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u96be\u5ea6\u4e5f\u4e0d\u5927\uff0c\u6211\u4e00\u6b21\u5c31\u8fc7\u4e86\uff0c\u6211\u6709\u70b9\u4e0d\u7406\u89e3\u4e3a\u4ec0\u4e48\u662f\u84dd\u9898~~(\u5176\u5b9e\u6211\u4e5f\u8bc4\u4e86\u84dd\u9898\u96be\u5ea6)~~\uff0c\u53ef\u80fd\u662f\u6ca1\u770b\u6e05$R$\u7684\u6700\u5927\u503c\u9ad8\u8fbe$10^5$\uff0c\u800c\u4e0d\u662f$26$\u3002  \n### \u89e3\u9898\u601d\u8def:\n1. \u8fd9\u9053\u9898\u76ee\u4e0d\u4ec5\u4ec5\u8003\u4e86\u5b57\u7b26\u4e32\u7684\u8f6c\u6362\uff0c\u8fd8\u8003\u4e86\u9ad8\u7cbe\uff0c\u53ef\u80fd\u6ca1\u770b\u6e05\u695a\u7684\u4eba\u5c31\u5f00\u4e86$long\\ long$\uff0c\u5c31\u5b8c\u7f8e\u7684$WA$\u4e86\uff0c\u5f00\u9ad8\u7cbe\u4e5f\u4e0d\u7528\u5f00\u7684\u7279\u522b\u5927\uff0c\u6700\u591a\u5c31$1173$\u4f4d\uff0c\u6240\u4ee5\u7701\u7a7a\u95f4\u7684\u4eba\u53ef\u4ee5\u5f00$294$(\u4e07\u8fdb\u5236)\u4f4d\u3002\n1. \u5728\u8fdb\u884c\u5b57\u7b26\u4e32\u8f6c\u6362\u65f6\uff0c\u4e00\u5b9a\u8981\u6ce8\u610fr\u7684\u5927\u5c0f\uff0c\u5efa\u8bae\u4e00\u5f00\u59cb\u5c31\u5bf9$26$\u53d6\u6a21\uff0c\u4e0d\u5bb9\u6613\u51fa\u9519\u3002\n1. \u8fd9\u662f\u4e00\u4e2a\u9ad8\u7cbe\u4e58\u4f4e\u7cbe\uff0c\u6bcf\u4e00\u4f4d\u5148\u4e58\u4e00\u904d\uff0c\u518d\u8fdb\u4f4d\u5c31\u53ef\u4ee5\u4e86\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5316\u4f4e\u7cbe\u4f4d\u9ad8\u7cbe\u3002\n1. \u5343\u4e07\u522b\u5fd8\u8bb0\u8f93\u51fa\u4e4b\u540e\u628a\u8fd9\u4e2a\u9ad8\u7cbe\u6570\u7684\u503c\u521d\u59cb\u5316\u4f4d1\uff0c\u5426\u5219$WA$\u548c$RE$\u7b49\u7740\u4f60\u3002\n### \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n  #include<bits/stdc++.h>\n  using namespace std;\n  struct ll{//\u6211\u559c\u6b22\u628a\u9ad8\u7cbe\u6570\u5b9a\u4e49\u6210\u7ed3\u6784\u4f53\uff0c\u8fd9\u6837\u597d\u64cd\u4f5c\u4e00\u70b9\n      int a[1222];//\u6211\u7528\u4e8610\u8fdb\u5236\uff0c\u4f60\u4eec\u4e5f\u53ef\u4ee5\u7528\u522b\u7684\u8fdb\u5236\uff0c\u5982\u4e07\u8fdb\u5236\n      void start()//\u521d\u59cb\u5316\n      {\n          memset(a,0,4888);//4888=1222*sizeof(int)\n          a[0]=a[1]=1;//\u7528a[0]\u50a8\u5b58\u6570\u7ec4\u4f4d\u6570\uff0c\u5e76\u521d\u59cb\u5316\u4e3a1\uff0c\u540c\u65f6a[1]\u4e5f\u8981\u4e3a1\n      }\n      ll& operator *=(int x)//\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u9ad8\u7cbe\u4e58\u4ee5\u4f4e\u7cbe\n      {\n          for(int i=1;i<=a[0];i++)\n              a[i]*=x;//\u5148\u6bcf\u4e00\u4f4d\u4e58\u4e00\u904d\n          for(int i=1;i<=a[0];i++)\n              a[i+1]+=a[i]/10,a[i]%=10,a[0]+=(i==a[0]&&a[i+1]);//\u63a5\u7740\u8fdb\u4f4d\n              /*\u8fd9\u4e2a\u4e0d\u9700\u8981\u53bb\u524d\u5bfc0\uff0c\u60f3\u4e00\u4e0b\u4e3a\u4ec0\u4e48*/\n          return *this;//\u8fd9\u4e2a\u4e0d\u7528\u7ba1\n      }\n      void out()//\u8f93\u51fa\n      {\n          for(int i=a[0];i>0;i--)\n              printf(\"%d\",a[i]);\n          puts(\"\");//\u522b\u5fd8\u8bb0\u6362\u884c\n      }\n  };\n  ll a;\n  int n,r,len;\n  char str[666];\n  void work(char *s,int len,int x)//\u4e2d\u8f6c\u5b57\u7b26\u4e32\n  {\n      x%=26;//\u4e00\u5f00\u59cb\u5c31\u5bf926\u53d6\u6a21\uff0c\u907f\u514d\u6ea2\u51fa\u5bfc\u81f4WA\n      for(int i=0;i<len;i++)\n          s[i]+=x,s[i]-=26*(s[i]>90);//\u7528\u4e86\u5047\u503c\u4e3a0\uff0c\u771f\u503c\u4e3a1\u7684\u7279\u6027\uff0c\u4f7f\u5f97\u4ee3\u7801\u7b80\u5355\u660e\u4e86\n  }\n  int main()\n  {\n      scanf(\"%d%d\",&n,&r);\n      /*\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u628ar\u5bf926\u53d6\u6a21*/\n      while(getchar()!='\\n');//\u8fd9\u4e2a\u4e0d\u80fd\u5c11\uff0c\u7528\u4e8e\u5403\u6362\u884c\u7b26\uff0c\u5c11\u6389\u540e\u679c\u81ea\u8d1f\n      for(int i=1;i<=n;i++)\n      {\n          a.start();//\u521d\u59cb\u5316\n          scanf(\"%s\",str);//\u4e0d\u5efa\u8bae\u7528gets\uff0c\u5426\u5219\u8b66\u544a\u4e00\u5927\u4e32\n          len=strlen(str);\n          work(str,len,r);\n          puts(str);//puts\u53ef\u4ee5\u7528\uff0c\u8fd9\u4e2a\u4e0d\u4f1a\u5bfc\u81f4\u8b66\u544a\u4e00\u5927\u4e32\n          for(int i=0;i<len;i++)//\u4e0b\u6807\u8981\u4ece0\u5f00\u59cb\n              a*=str[i];//\u4e00\u4f4d\u4e00\u4f4d\u4e58\n          a.out();//\u8f93\u51fa\n      }\n      return 0;\n  }\n```\n\u8fd9\u4e2a\u7a0b\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u8bb8\u4e0d\u662f\u6700\u4f18\uff0c\u4f46\u662f\u8fd9\u4e2a\u4ee3\u7801\u76f8\u5bf9\u6765\u8bf4\u6bd4\u8f83\u53cb\u597d\uff0c\u6700\u540e\u5e0c\u671b\u5927\u5bb6\u652f\u6301\u6211\uff0c\u6211\u63a5\u4e0b\u6765\u4f1a\u5199\u66f4\u591a\u7684\u9898\u89e3\uff0c\u8c22\u8c22\uff01",
        "postTime": 1563544389,
        "uid": 181378,
        "name": "Alarm5854",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5000 \u3010Hillwer\u7f16\u7801\u3011"
    },
    {
        "content": "\u8fd9\u9898\u4e0d\u662f\u5f88\u7b80\u5355\u5417\uff1f\uff1f\uff1f\u600e\u4e48\u88ab\u8bc4\u6210\u84dd\u8272\u7684\uff1f\uff1f\uff1f\uff1f\n\n\u9996\u5148\u7b2c\u4e00\u4e2a\u504f\u79fb\u5904\u7406\uff0c\u7531\u4e8eR\u6bd4\u8f83\u5927\uff0c\u53ef\u4ee5\u5148\u53d6\u6a21\n\n\u7b2c\u4e8c\u4e2a\u5904\u7406\u4e0d\u5c31\u662f\u88f8\u7684\u9ad8\u7cbe\u5417\uff1f\uff1f\n\nAC\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nconst int mod=26;\nconst int maxl=610;\nusing namespace std;\n\nint n,r;\nstring s;\nint ans[maxl<<1];\n\nvoid init()\n{\n    memset(ans,0,sizeof(ans));\n    ans[0]=1;\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&r);r%=mod;\n    for(int i=1;i<=n;i++)\n    {\n        init();\n        cin>>s;\n        for(int j=0;j<s.size();j++) s[j]=((s[j]-'A')+r)%mod+'A';\n        cout<<s<<endl;\n        for(int j=0;j<s.size();j++)\n        {\n            for(int k=0;k<=1210;k++) ans[k]*=s[j];\n            for(int k=0;k<=1210;k++) ans[k+1]+=ans[k]/10,ans[k]%=10;\n        }\n        int p=1215;\n        while(!ans[p] && p) p--;\n        for(p;p>=0;p--) cout<<ans[p];\n        cout<<endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1541383950,
        "uid": 44580,
        "name": "JMercury",
        "ccfLevel": 7,
        "title": "P5000 Hillwer\u7f16\u7801"
    },
    {
        "content": "**\u538b\u4f4d\u9ad8\u7cbe\uff0c\u5f53\u524d\u6700\u4f18\u89e3**\n\n\u51fa\u9898\u4eba\u5df2\u7ecf\u8bf4\u8fc7\u4e86\u8fd9\u9053\u9898\u4e0d\u503c\u84ddqwq\n\n\u5c31\u662f\u628a\u6bcf\u4e2a\u5b57\u6bcd\u79fb\u4e00\u4e0b\u7136\u540eASCII\u4e58\u8d77\u6765\u5c31\u597d\u4e86\u3002\n\n\u7136\u540e\u628a4\u4f4d\u538b\u5230\u4e00\u4e2aint\u91cc\u9762\uff0c\u5176\u5b9e\u53ef\u4ee5\u591a\u538b\u51e0\u4f4d\u8fd8\u80fd\u66f4\u5feb\u7684qwq\n\n\u6743\u5f53\u538b\u4f4d\u9ad8\u7cbe\u7ec3\u624b\u9898\u4e86qwq\n\n~~/*\u540e\u6392\u8868\u767d\u793e\u4f1a\u51fa\u9898\u4eba*/~~\n\n```\n/*\nqwerta \nP5000 Hillwer\u7f16\u7801 Accepted \n100\n\u4ee3\u7801 C++\uff0c0.84KB\n\u63d0\u4ea4\u65f6\u95f4 2018-11-06 08:22:36\n\u8017\u65f6/\u5185\u5b58 183ms, 812KB\n*/\n// luogu-judger-enable-o2\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nchar s[503];\nint a[303];//\u9ad8\u7cbe\u6570\u7ec4\nint toa;\nvoid mult(int x)//\u4e58\u4e0ax\n{\n    for(int i=1;i<=toa;++i)\n      a[i]*=x;\n    for(int i=1;i<=toa;++i)\n    if(a[i]>9999)//\u5904\u7406\u591a\u4e8e4\u4f4d\u7684\n    {\n        a[i+1]+=a[i]/10000;\n        a[i]%=10000;\n        toa=max(toa,i+1);\n    }\n    return;\n}\nvoid write(int x)//\u5feb(\u6162)\u5199\n{\n    if(x>9)write(x/10);\n    putchar(x%10+'0');\n    return;\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    int n,R;\n    cin>>n>>R;\n    R%=26;\n    while(n--)\n    {\n        cin>>s;\n        int lens=strlen(s);\n        memset(a,0,sizeof(a));\n        toa=1;\n        a[1]=1;\n        for(int i=0;i<lens;++i)\n        {\n            int x=s[i]+R;//\u79fb\u4f4d\n            if(x>'Z')x-=26;//\u51cf\u4e00\u4e0b\n            putchar(x);//\u8f93\u51fa\n            mult(x);//\u4e58\u8d77\u6765\n        }\n        putchar('\\n');//cout<<endl\n        write(a[toa]);//\u5148\u8f93\u51fa\u7b2c\u4e00\u4e2a\n        for(int i=toa-1;i;--i)\n        {\n            if(a[i]<1000)putchar('0');\n            if(a[i]<100)putchar('0');\n            if(a[i]<10)putchar('0');\n            write(a[i]);\n        }\n        putchar('\\n');\n    }\n    return 0;\n}\n\n```",
        "postTime": 1541464124,
        "uid": 48681,
        "name": "qwerta",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5000 \u3010Hillwer\u7f16\u7801\u3011"
    },
    {
        "content": "**\u542c\u8bf4\u8003\u524d\u53d1\u9898\u89e3\u53ef\u4ee5RP++**\n\n**\u6a21\u62df+\u9ad8\u7cbe\u4e58**\n\n\u663e\u7136\u76f4\u63a5\u5728\u6bcf\u4e2a\u5b57\u7b26\u4f4d\u52a0\u4e0a(R%26)\u5373\u53ef\u3002\u8003\u8651\u7206\u5230'Z'\u4ee5\u4e0a\u7684\u60c5\u51b5\uff0c\u52a0\u4e2a\u5224\u65ad\u5c31\u884c\u4e86\u3002\n\n\u6570\u4e32\u663e\u7136\u8981\u7528\u9ad8\u7cbe\u4e58\u3002\u7528ans\u5b58\u7ed3\u679c\uff0c\u5904\u7406\u6bcf\u4e00\u4f4d\u7684\u65f6\u5019\u987a\u4fbf\u52a0\u8fdb\u53bb\u3002\n\n\u4ee3\u7801\u975e\u5e38\u4e11 \u4f6c\u7237\u4eec\u51d1\u6d3b\u7740\u770bqwq\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n, r;\nchar s[601];\nint ans[10001];\nint a[10001];\nint main(){\n    scanf(\"%d%d\", &n, &r);\n    while(n--){\n        memset(a, 0, sizeof a);\n        a[0]=a[1]=1;\n        scanf(\"%s\", s);\n        int len=strlen(s);\n        for(int i=0; i<len; i++){\n            memset(ans, 0, sizeof ans);\n            s[i]=s[i]+(r%26);\n            if(s[i]>'Z')s[i]=s[i]-'Z'+'A'-1;\n            cout<<s[i];\n            \n            int len=a[0];\n            for(int j=1; j<=len; j++){\n                int k=j;\n                ans[j]+=a[j]*s[i];\n                while(ans[k]>9){\n                    ans[k+1]+=ans[k]/10;\n                    ans[k]%=10;\n                    k++;\n                }\n                if(k>a[0])a[0]=k;\n            }\n            for(int j=1; j<=a[0]; j++)\n                a[j]=ans[j];\n        }\n        printf(\"\\n\");\n        for(int i=a[0]; i>0; i--)\n            printf(\"%d\", ans[i]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1541401694,
        "uid": 69247,
        "name": "pushinl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5000 \u3010Hillwer\u7f16\u7801\u3011"
    },
    {
        "content": "\u611f\u89c9\u8fd9\u9053\u9898\u5f88\u7b80\u5355\u554a\uff0c~~\u4e3a\u4ec0\u4e48\u88ab\u8bc4\u4e0a\u84dd\u8272\u4e86~~\n\n\u7b97\u6cd5\uff1a\u9ad8\u7cbe+\u5b57\u7b26\u4e32\u5904\u7406\u3002\n\n* 1\uff1a\u5173\u4e8e\u5b57\u7b26\u4e32\u7684\u5904\u7406\n\n\u9898\u76ee\u8981\u6c42\u8ba9\u6211\u4eec\u628a\u5b57\u7b26\u50cf\u540e\u79fb$R$\u4e2a\u5b57\u7b26\u3002\n\n\u6211\u4eec\u53d1\u73b0\u9898\u76ee\u6ca1\u6709\u8bf4\u660e$R<=26$\n\n\u7136\u800c\u53d1\u73b0\u6bcf$26$\u6b21\u662f\u4e00\u4e2a\u5468\u671f\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u628a$R\\%26$\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u5b57\u7b26\u4e32\u8fb9\u754c\u7684\u5904\u7406\u3002\n\n* \u5982\u679c\u53d1\u73b0\u6bcf\u4e2a\u5b57\u7b26$s[i]+R<=Z$\n\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u53d8\u6362\n\n* \u5982\u679c\u4e00\u4e2a\u5b57\u7b26$s[i]+R<=26$\n\n\u6211\u4eec\u9700\u8981\u628a\u8fd9\u4e2a\u5b57\u7b26\u7684$ascll$\u7801\u5728\u51cf\u53bb$A$\u7684$asc$\u503c\u3002\n\n\u53ea\u8981\u5904\u7406\u5b8c\u5b57\u7b26\u4e32\uff0c\u5269\u4e0b\u7684\u4e58\u5c31\u662f\u6a21\u677f\u7684\u4e8b\u4e86~~\u4e0d\u4f1a\u81ea\u884c\u80cc\u9ad8\u7cbe\u6a21\u677f~~\n\n\u518d\u6b21$LZ$\u4e3a\u5927\u5bb6\u51c6\u5907\u4e86\u9ad8\u7cbe\u6a21\u677f~~\u9632\u6b62NOIP\u7684\u6bd2\u7624~~\n\n\u4ee3\u7801+\u5f88\u4e45\u4e4b\u524d\u9ad8\u7cbe\n\n```cpp\n// luogu-judger-enable-o2\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<queue>\n#define ri register int\n#define maxn 1001\nusing namespace std;\ninline int read()\n{\n    int res=0,flag=1;\n    char ch;\n    for(;!isdigit(ch);ch=getchar())\n        if(ch=='-')flag=-1;\n    for(;isdigit(ch);ch=getchar())\n        res=res*10+ch-'0';\n    return res*flag;\n}\nstruct bign{  \n    int d[maxn], len;  \n    void clean() { while(len > 1 && !d[len-1]) len--; }  \n    bign()          { memset(d, 0, sizeof(d)); len = 1; }  \n    bign(int num)   { *this = num; }   \n    bign(char* num) { *this = num; }  \n    bign operator = (const char* num){  \n        memset(d, 0, sizeof(d)); len = strlen(num);  \n        for(int i = 0; i < len; i++) d[i] = num[len-1-i] - '0';  \n        clean();  \n        return *this;  \n    }  \n    bign operator = (int num){  \n        char s[20]; sprintf(s, \"%d\", num);  \n        *this = s;  \n        return *this;  \n    }  \n    bign operator + (const bign& b){  \n        bign c = *this; int i;  \n        for (i = 0; i < b.len; i++){  \n            c.d[i] += b.d[i];  \n            if (c.d[i] > 9) c.d[i]%=10, c.d[i+1]++;  \n        }  \n        while (c.d[i] > 9) c.d[i++]%=10, c.d[i]++;  \n        c.len = max(len, b.len);  \n        if (c.d[i] && c.len <= i) c.len = i+1;  \n        return c;  \n    }  \n    bign operator - (const bign& b){  \n        bign c = *this; int i;  \n        for (i = 0; i < b.len; i++){  \n            c.d[i] -= b.d[i];  \n            if (c.d[i] < 0) c.d[i]+=10, c.d[i+1]--;  \n        }  \n        while (c.d[i] < 0) c.d[i++]+=10, c.d[i]--;  \n        c.clean();  \n        return c;  \n    }  \n    bign operator * (const bign& b)const{  \n        int i, j; bign c; c.len = len + b.len;   \n        for(j = 0; j < b.len; j++) for(i = 0; i < len; i++)   \n            c.d[i+j] += d[i] * b.d[j];  \n        for(i = 0; i < c.len-1; i++)  \n            c.d[i+1] += c.d[i]/10, c.d[i] %= 10;  \n        c.clean();  \n        return c;  \n    }  \n    bign operator / (const bign& b){  \n        int i, j;  \n        bign c = *this, a = 0;  \n        for (i = len - 1; i >= 0; i--)  \n        {  \n            a = a*10 + d[i];  \n            for (j = 0; j < 10; j++) if (a < b*(j+1)) break;  \n            c.d[i] = j;  \n            a = a - b*j;  \n        }  \n        c.clean();  \n        return c;  \n    }  \n    bign operator % (const bign& b){  \n        int i, j;  \n        bign a = 0;  \n        for (i = len - 1; i >= 0; i--)  \n        {  \n            a = a*10 + d[i];  \n            for (j = 0; j < 10; j++) if (a < b*(j+1)) break;  \n            a = a - b*j;  \n        }  \n        return a;  \n    }  \n    bign operator += (const bign& b){  \n        *this = *this + b;  \n        return *this;  \n    }  \n  \n    bool operator <(const bign& b) const{  \n        if(len != b.len) return len < b.len;  \n        for(int i = len-1; i >= 0; i--)  \n            if(d[i] != b.d[i]) return d[i] < b.d[i];  \n        return false;  \n    }  \n    bool operator >(const bign& b) const{return b < *this;}  \n    bool operator<=(const bign& b) const{return !(b < *this);}  \n    bool operator>=(const bign& b) const{return !(*this < b);}  \n    bool operator!=(const bign& b) const{return b < *this || *this < b;}  \n    bool operator==(const bign& b) const{return !(b < *this) && !(b > *this);}  \n    string str() const{  \n        char s[maxn]={};  \n        for(int i = 0; i < len; i++) s[len-1-i] = d[i]+'0';  \n        return s;  \n    }  \n};  \nistream& operator >> (istream& in, bign& x)  \n{  \n    string s;  \n    in >> s;  \n    x = s.c_str();  \n    return in;  \n}  \nostream& operator << (ostream& out, const bign& x)  \n{  \n    out << x.str();  \n    return out;  \n}\nint n,r;\nbign q;\ninline void work(string s)\n{\n    r%=26;\n    for(ri i=0;i<s.size();i++)\n    {\n        if(s[i]+r<='Z')s[i]=s[i]+r;\n        else s[i]=s[i]+r-('Z'-'A'+1);\n    }\n    q=1;\n    for(ri i=0;i<s.size();i++)\n        q=q*s[i];\n    cout<<s<<endl;\n    cout<<q<<endl;\n}\nint main()\n{\n    n=read();r=read();\n    string s;\n    for(ri i=1;i<=n;i++)\n    {\n    \tcin>>s;\n    \twork(s);\n    }\n    return 0;\n}\n```",
        "postTime": 1542201677,
        "uid": 51645,
        "name": "zybnxy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5000 \u3010Hillwer\u7f16\u7801\u3011"
    },
    {
        "content": "### \u8bfb\u9898\uff0c\u663e\u800c\u6613\u89c1\u662f\u4e2a\u5b57\u7b26\u4e32\u7684\u6a21\u62df\n\u90a3\u4e3a\u4ec0\u4e48\u96be\u5ea6\u90a3\u4e48\u9ad8\u5462\uff0c\u770b\u770b\u6570\u636e\u8303\u56f4\u5e94\u8be5\u662f\u9ad8\u7cbe\uff0c\u6240\u4ee5\u8bf4\n\n\u7b80\u5355\u7684\u6a21\u62df+\u9ad8\u7cbe\u5c31\u8fc7\u4e86\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<vector>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nstruct bign:vector<int> {\n    bign(int n=0) {\n        push_back(n);\n        check();\n    }\n    bign& check() {\n        while(!empty()&&!back())pop_back();\n        if(empty())return *this;\n        for(int i=1; i<size(); ++i) {\n            (*this)[i]+=(*this)[i-1]/10;\n            (*this)[i-1]%=10;\n        }\n        while(back()>=10) {\n            push_back(back()/10);\n            (*this)[size()-2]%=10;\n        }\n        return *this;\n    }\n};\nistream& operator >> (istream &is,bign &n) {\n    string s;\n    is>>s;\n    n.clear();\n    for(int i=s.size()-1; i>=0; --i)n.push_back(s[i]-'0');\n    return is;\n}\nostream& operator << (ostream &os,const bign &n) {\n    if(n.empty())os<<0;\n    for(int i=n.size()-1; i>=0; --i)os<<n[i];\n    return os;\n}\nbool operator != (const bign &a,const bign &b) {\n    if(a.size()!=b.size())return 1;\n    for(int i=a.size()-1; i>=0; --i)\n        if(a[i]!=b[i])return 1;\n    return 0;\n}\nbool operator == (const bign &a,const bign &b) {\n    return !(a!=b);\n}\nbool operator < (const bign &a,const bign &b) {\n    if(a.size()!=b.size())return a.size()<b.size();\n    for(int i=a.size()-1; i>=0; --i)\n        if(a[i]!=b[i])return a[i]<b[i];\n    return 0;\n}\nbool operator > (const bign &a,const bign &b) {\n    return b<a;\n}\nbool operator <= (const bign &a,const bign &b) {\n    return !(a>b);\n}\nbool operator >= (const bign &a,const bign &b) {\n    return !(a<b);\n}\nbign& operator += (bign &a,const bign &b) {\n    if(a.size()<b.size())a.resize(b.size());\n    for(int i=0; i!=b.size(); ++i)a[i]+=b[i];\n    return a.check();\n}\nbign operator + (bign a,const bign &b) {\n    return a+=b;\n}\nbign& operator -= (bign &a,bign b) {\n    if(a<b)swap(a,b);\n    for(int i=0; i!=b.size(); a[i]-=b[i],++i)\n        if(a[i]<b[i]) {\n            int j=i+1;\n            while(!a[j])++j;\n            while(j>i) {\n                --a[j];\n                a[--j]+=10;\n            }\n        }\n    return a.check();\n}\nbign operator - (bign a,const bign &b) {\n    return a-=b;\n}\nbign operator * (const bign &a,const bign &b) {\n    bign n;\n    n.assign(a.size()+b.size()-1,0);\n    for(int i=0; i!=a.size(); ++i)\n        for(int j=0; j!=b.size(); ++j)\n            n[i+j]+=a[i]*b[j];\n    return n.check();\n}\nbign& operator *= (bign &a,const bign &b) {\n    return a=a*b;\n}\nbign divmod(bign &a,const bign &b) {\n    bign ans;\n    for(int t=a.size()-b.size(); a>=b; --t) {\n        bign d;\n        d.assign(t+1,0);\n        d.back()=1;\n        bign c=b*d;\n        while(a>=c) {\n            a-=c;\n            ans+=d;\n        }\n    }\n    return ans;\n}\nbign operator / (bign a,const bign &b) {\n    return divmod(a,b);\n}\nbign& operator /= (bign &a,const bign &b) {\n    return a=a/b;\n}\nbign& operator %= (bign &a,const bign &b) {\n    divmod(a,b);\n    return a;\n}\nbign operator % (bign a,const bign &b) {\n    return a%=b;\n}\nbign pow(const bign &n,const bign &k) {\n    if(k.empty())return 1;\n    if(k==2)return n*n;\n    if(k.back()%2)return n*pow(n,k-1);\n    return pow(pow(n,k/2),2);\n}//\u9ad8\u7cbe\nint n,k;\nstring c;\nint main(){\n\tcin>>n>>k;//\u8f93\u5165\n\tk%=26;//\u5148%\u4e00\u4e0b\uff0c\u56e0\u4e3a\u8d85\u8fc726\u6ca1\u610f\u601d\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>c;\n\t\tfor(int j=0;j<c.size();j++){\n\t\t\tc[j]=((c[j]-'A')+k)%26+'A';\n\t\t\tcout<<c[j];//\u5904\u7406\u5e76\u8f93\u51fa\n\t\t}\n\t\tcout<<endl;\n\t\tbign sum=1;//\u7528\u9ad8\u7cbe\u624d\u80fd\n\t\tfor(int j=0;j<c.size();j++){\n\t\t\tint s;\n\t\t\ts=c[j]-'A'+65;\n\t\t\tsum*=s;//\u5c06 S1 S1\u6bcf\u4e00\u4f4d\u7684ACS\u7801\uff08\u5373ASCLL\u7801\uff09\u76f8\u4e58\n\t\t}\n\t\tcout<<sum<<endl;//\u8f93\u51fa\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1541397478,
        "uid": 52530,
        "name": "\u74dc\u76ae\u5c11\u5e74",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P5000 \u3010Hillwer\u7f16\u7801\u3011"
    }
]