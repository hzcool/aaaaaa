[
    {
        "content": "\u8fd9\u9898\u662f\u666e\u901a bfs \u7684\u53d8\u5f62\u9898\u3002\u52a0\u4e86\u4e00\u4e2a\u9053\u5177\u7684\u64cd\u4f5c\u3002\n\n\u677f\u5b50\u76f8\u4fe1\u5927\u5bb6\u90fd\u4f1a\u6572\uff0c\u90a3\u4e48\u4e3b\u8981\u8bb2\u4e00\u4e0b\u5982\u4f55\u5904\u7406\u65e0\u654c\u9053\u5177\u3002\n\n\u5728\u7ed3\u6784\u4f53\u5185\u65b0\u52a0\u4e00\u4e2a\u53d8\u91cf $magic$\uff0c\u8868\u793a\u5f53\u524d\u8fd8\u5269\u51e0\u6b65\u7684\u65e0\u654c\u6548\u679c\u3002\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u9047\u5230\u201cX\u201d\uff0c\u5e76\u4e14\u4e0d\u5269\u65e0\u654c\u4e86\uff0c\u5c31\u4e0d\u80fd\u8d70\uff1b\u5982\u679c\u9047\u5230\u201c%\u201d\uff0c$magic$ \u53d8\u4e3a $k$\u3002\u5176\u4ed6\u60c5\u51b5\uff0c\u5e76\u4e14\u4e0d\u4e3a\u201c#\u201d\u65f6\uff0c\u628a\u70b9\u5165\u961f\u3002\n\n\u8fd9\u91cc\u8981\u52a0\u4e00\u4e2a\u526a\u679d\uff1a\u52a0\u4e00\u4e2a int \u578b\u7684\u6570\u7ec4 $vis$\uff0c\u5165\u961f\u65f6\u9700\u8981 ```vis[x][y] < magic```\uff0c\u5373\u5982\u679c\u5f53\u524d\u8282\u70b9\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\uff0c\u4e14\u4e4b\u524d\u5230\u8fbe\u8be5\u8282\u70b9\u65f6\u7684\u65e0\u654c\u72b6\u6001\u5269\u4f59\u6b65\u6570\u6bd4\u73b0\u5728\u8981\u591a\uff0c\u5219\u4e0d\u9700\u8981\u518d\u6b21\u8bbf\u95ee\u8be5\u8282\u70b9\u3002\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u4e4b\u524d\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u8be5\u8282\u70b9\u5e76\u4e14\u4f7f\u7528\u4e86\u66f4\u591a\u7684\u65e0\u654c\u6b65\u6570\uff0c\u90a3\u4e48\u8fd9\u6761\u8def\u5f84\u4e00\u5b9a\u4e0d\u662f\u6700\u4f18\u89e3\u3002\u521d\u59cb\u65f6\u8981\u8d4b\u503c\u4e3a\u5168 $-1$\u3002\n\n\u4ee3\u7801+\u8be6\u7ec6\u6ce8\u91ca\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e3 + 5;\nint n, k; \nchar g[N][N]; \nint vis[N][N]; // \u5b58\u50a8\u6bcf\u4e2a\u683c\u5b50\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7\u4ee5\u53ca\u65e0\u654c\u72b6\u6001\u5269\u4f59\u6b65\u6570\nstruct node{\n\tint x, y, step, magic;\n};\n\nint dx[4] = {1, -1, 0, 0};\nint dy[4] = {0, 0, 1, -1};\n\nint main(){\n\tcin >> n >> k;\n\tfor (int i = 1; i <= n; i ++ )\n\t\tfor (int j = 1; j <= n; j ++ )\n\t\t\tcin >> g[i][j];\n\tmemset(vis, -1, sizeof vis);\n\tqueue<node> q;\n\tvis[1][1] = 0; // \u5c06\u8d77\u70b9\u7684\u8bbf\u95ee\u72b6\u6001\u8bbe\u7f6e\u4e3a0\n\tq.push({1, 1, 0, 0}); // \u5c06\u8d77\u70b9\u5165\u961f\uff0c\u5e76\u8bbe\u7f6e\u5176\u5230\u8fbe\u8be5\u70b9\u7684\u6b65\u6570\u4e3a0\u3001\u5f53\u524d\u4e0d\u5904\u4e8e\u65e0\u654c\u72b6\u6001\n\twhile (q.size()){\n\t\tnode t = q.front(); // \u53d6\u51fa\u961f\u5934\u8282\u70b9\n\t\tq.pop();\n\t\tif (t.x == n && t.y == n){ // \u5982\u679c\u5f53\u524d\u8282\u70b9\u4e3a\u7ec8\u70b9\uff0c\u5219\u8f93\u51fa\u6700\u77ed\u8def\u957f\u5ea6\u5e76\u7ed3\u675f\u7a0b\u5e8f\n\t\t\tcout << t.step;\n\t\t\treturn 0;\n\t\t}\n\t\tfor (int i = 0; i < 4; i ++ ){\n\t\t\tint tx = t.x + dx[i];\n\t\t\tint ty = t.y + dy[i];\n\t\t\tif (g[tx][ty] == 'X' && t.magic == 0) // \u5982\u679c\u4e0b\u4e00\u6b65\u4f4d\u7f6e\u662f\u9677\u9631\u4e14\u5f53\u524d\u4e0d\u5904\u4e8e\u65e0\u654c\u72b6\u6001\uff0c\u5219\u8df3\u8fc7\u8be5\u8282\u70b9\n\t\t\t\tcontinue;\n\t\t\tint magic = max(0, t.magic - 1); // \u8ba1\u7b97\u5f53\u524d\u65e0\u654c\u72b6\u6001\u5269\u4f59\u6b65\u6570\n\t\t\tif (g[tx][ty] == '%') // \u5982\u679c\u4e0b\u4e00\u6b65\u4f4d\u7f6e\u6709\u9053\u5177\uff0c\u66f4\u65b0\u65e0\u654c\u72b6\u6001\u5269\u4f59\u6b65\u6570\n\t\t\t\tmagic = k;\n\t\t\tif (tx >= 1 && tx <= n && ty >= 1 && ty <= n && vis[tx][ty] < magic && g[tx][ty] != '#'){ // \u5982\u679c\u4e0b\u4e00\u6b65\u4f4d\u7f6e\u662f\u5408\u6cd5\u7684\u53ef\u5230\u8fbe\u4f4d\u7f6e\n\t\t\t\tvis[tx][ty] = magic; // \u66f4\u65b0\u8bbf\u95ee\u72b6\u6001\u548c\u65e0\u654c\u72b6\u6001\u5269\u4f59\u6b65\u6570\n\t\t\t\tq.push({tx, ty, t.step + 1, magic}); // \u5c06\u4e0b\u4e00\u6b65\u4f4d\u7f6e\u5165\u961f\uff0c\u5e76\u66f4\u65b0\u5230\u8fbe\u8be5\u70b9\u7684\u6b65\u6570\u548c\u65e0\u654c\u72b6\u6001\u5269\u4f59\u6b65\u6570\n\t\t\t}\n\t\t}\n\t}\n\tcout << -1;\n    return 0;\n}\n\n```",
        "postTime": 1680180609,
        "uid": 691532,
        "name": "Zaku",
        "ccfLevel": 0,
        "title": "P8673 [\u84dd\u6865\u676f 2018 \u56fd C] \u8ff7\u5bab\u4e0e\u9677\u9631 \u9898\u89e3"
    },
    {
        "content": "## \u7b80\u8981\u9898\u610f\n\n\u8d70\u8ff7\u5bab\uff0c\u6c42\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002\u8f83\u666e\u901a\u8d70\u8ff7\u5bab\u591a\u4e86\u4e24\u4e2a\u7269\u54c1\uff1a\n\n* `%`\uff1a\u65e0\u654c\u9053\u5177\uff0c\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\uff0c\u4f7f\u7528\u4e86\u5b83\u53ef\u4ee5\u5c06\u65e0\u654c\u65f6\u95f4\u53d8\u6210 $K$\uff0c\u6bcf\u8d70\u4e00\u6b65\u65e0\u654c\u65f6\u95f4\u51cf\u4e00\u3002\n\n* `X`\uff1a\u9677\u9631\uff0c\u65e0\u654c\u65f6\u95f4\u5927\u4e8e $0$ \u65f6\u624d\u80fd\u5f80\u8fd9\u91cc\u8d70\uff08\u5230\u8fbe\u8be5\u683c\u5b50\u65f6\u65e0\u654c\u65f6\u95f4\u53ef\u4ee5\u4e3a $0$\uff09\u3002\n\n## \u601d\u8def\n\n\u6c42\u6700\u77ed\u8def\u5f84\u5c31\u7528 bfs\uff0c\u4f46\u662f\u56e0\u4e3a\u6709\u4e86\u9677\u9631\u6240\u4ee5\u6709\u7684\u683c\u5b50\u53ef\u4ee5\u91cd\u590d\u8d70\uff0c\u56e0\u4e3a\u8d70\u5230\u8be5\u683c\u5b50\u65f6\u65e0\u654c\u65f6\u95f4\u53ef\u80fd\u4e0d\u4e00\u6837\u3002\u4ee5\u6837\u4f8b\u4e00\u4e3e\u4f8b\uff0c\u6211\u4eec\u91cd\u590d\u8d70\u4e86 $(3, 1)$ \u8fd9\u4e2a\u5730\u65b9\uff0c\u56e0\u4e3a\u7b2c\u4e00\u6b21\u5230\u8fd9\u91cc\u65f6\u65e0\u654c\u65f6\u95f4\u662f $0$\uff0c\u800c\u7b2c\u4e8c\u6b21\u5230\u8fd9\u91cc\u65f6\u65e0\u654c\u65f6\u95f4\u662f $2$\uff0c\u8db3\u591f\u901a\u8fc7\u53f3\u9762\u4e24\u4e2a\u9677\u9631\uff0c\u8d70\u66f4\u77ed\u8def\u5f84\uff08\u76f8\u6bd4\u6765\u8bf4\u6837\u4f8b\u4e8c\u56e0\u4e3a\u65e0\u654c\u65f6\u95f4\u4e0d\u591f\u6240\u4ee5\u65e0\u6cd5\u8fc7\u53bb\u8d70\u66f4\u77ed\u8def\u5f84\uff09\u3002\n\n\u5982\u679c\u8fd9\u6837\u76f4\u63a5\u5b9a\u4e49\u4e09\u7ef4\u6570\u7ec4 $vis[x][y][inv]$\uff08\u5728 $(x, y)$ \u65f6\u65e0\u654c\u65f6\u95f4\u662f $inv$\uff09\u4f1a TLE\uff0c\u6240\u4ee5\u8003\u8651\u4f18\u5316\u3002\n\n\u6539\u53d8\u4e00\u4e0b\u601d\u8def\uff0c\u5982\u679c\u4e4b\u524d\u5df2\u7ecf\u5230\u8fc7 $(x, y)$ \u8fd9\u4e2a\u5730\u65b9\u4e86\uff0c\u4e14\u5f53\u65f6\u5230\u8fd9\u91cc\u65f6\u603b\u5171\u8d70\u4e86 $st[x][y]$ \u6b65\uff0c\u65e0\u654c\u65f6\u95f4\u662f $ti[x][y]$ \u65f6\u523b\u3002\u5982\u679c\u6b64\u65f6\u53c8\u5230\u4e86\u4e00\u6b21 $(x, y)$\uff0c\u4f46\u662f\u6b65\u6570\u5927\u4e8e\u7b49\u4e8e $st[x][y]$ \u4e14\u65e0\u654c\u65f6\u523b\u5c0f\u4e8e\u7b49\u4e8e $ti[x][y]$\uff0c\u53ef\u4ee5\u5ffd\u7565\u8fd9\u6b21\u79fb\u52a8\uff0c\u56e0\u4e3a\u663e\u7136\u6b65\u6570\u8d8a\u5c0f\u8d8a\u597d\uff0c\u65e0\u654c\u65f6\u95f4\u8d8a\u5927\u8d8a\u597d\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define setp setprecision\n#define mem(a, m) memset(a, m, sizeof(a));\nusing namespace std;\n\nconst int INF = 0x3f3f3f3f;\nint n, k;\nchar c[1005][1005];\nint st[1005][1005];//\u5230(x, y)\u65f6\u7684\u6b65\u6570 \nint ti[1005][1005];//\u5230(x, y)\u65f6\u7684\u65e0\u654c\u65f6\u95f4 \nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\nbool f = 0;\nint ans;\nstruct node {\n\tint x, y;//\u5750\u6807 \n\tint inv;//\u65e0\u654c\u65f6\u95f4 \n\tint step;//\u6b65\u6570 \n};\nbool check(int x, int y, int step, int inv)\n{\n\tif(x < 1 || x > n || y < 1 || y > n)\treturn false;\n\tif(c[x][y] == '#')\treturn false;\n\tif(step >= st[x][y] && inv <= ti[x][y])\treturn false;\n\tif(c[x][y] == 'X' && inv < 0)\treturn false;\n\treturn true;\n}\nvoid bfs()\n{\n\tqueue <node> q;\n\tq.push((node){1, 1, 0, 0});\n\tti[1][1] = 0;\n\tst[1][1] = 0;\n\twhile(!q.empty())\n\t{\n\t\tnode t = q.front();\n\t\tq.pop();\n\t\tint x = t.x, y = t.y, step = t.step, inv = t.inv;\n\t\tif(x == n && y == n)\n\t\t{\n\t\t\tf = 1;\n\t\t\tans = step;\n\t\t\tbreak;\n\t\t}\n\t\tinv--;\n\t\tstep++;\n\t\tfor(int i=0;i<4;i++)\n\t\t{\n\t\t\tint X = x + dx[i];\n\t\t\tint Y = y + dy[i];\n\t\t\tif(check(X, Y, step, inv))\n\t\t\t{\n\t\t\t\tif(c[X][Y] == '%' && st[X][Y] == INF)\tinv = k;\n\t\t\t\tst[X][Y] = step;\n\t\t\t\tti[X][Y] = inv;\n\t\t\t\t//cout << X << \" \" << Y << \" \" << inv << \" \" << endl;\n\t\t\t\tq.push((node){X, Y, inv, step});\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin >> n >> k;\n\tmem(st, INF);\n\tmem(ti, -INF);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tcin >> c[i][j];\n\tbfs();\n\tif(f)\tcout << ans;\n\telse\tcout << -1;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1683374827,
        "uid": 778011,
        "name": "DreamLand_zcb",
        "ccfLevel": 4,
        "title": "P8673 [\u84dd\u6865\u676f 2018 \u56fd C] \u8ff7\u5bab\u4e0e\u9677\u9631 \u9898\u89e3"
    },
    {
        "content": "## 1.\u7f16\u7a0b\u601d\u8def\u3002\n\n\u6c42\u5c0f\u660e\u6700\u5c11\u8d70\u51e0\u6b65\u53ef\u4ee5\u8d70\u51fa\u8ff7\u5bab\uff0c\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7b97\u6cd5 BFS\u3002\n\n\u76f8\u6bd4\u4e00\u822c\u7684 BFS \u8d70\u8ff7\u5bab\u95ee\u9898\uff0c\u672c\u9898\u9700\u8981\u5904\u7406\u597d\u5c0f\u660e\u5904\u4e8e\u65e0\u654c\u72b6\u6001\u7684\u60c5\u51b5\u3002\n\n\u4e3a\u6b64\uff0c\u5728\u5b9a\u4e49\u7684\u7ed3\u6784\u4f53\u7c7b\u578b\u4e2d\uff0c\u52a0\u5165\u4e00\u4e2a\u6210\u5458\u5206\u91cf $sta$\uff0c\u8868\u793a\u5904\u4e8e\u65e0\u654c\u72b6\u6001\u5269\u4f59\u53ef\u6301\u7eed\u7684\u6b65\u6570\uff0c$sta$ \u7684\u503c\u4e3a $0$\uff0c\u8868\u793a\u5f53\u524d\u4e0d\u662f\u65e0\u654c\u72b6\u6001\u3002\n\n\u53e6\u5916\uff0c\u5bf9 $vis$ \u6570\u7ec4\u7684\u7528\u6cd5\u8fdb\u884c\u4f18\u5316\u3002\u4e00\u822c\u7684 BFS \u4e2d\uff0c$vis[x][y]=0$ \u8868\u793a\u5750\u6807 $(x,y)$ \u5904\u6ca1\u6709\u8bbf\u95ee\u8fc7\uff0c\u8bbf\u95ee\u8fc7\u4e4b\u540e\u7f6e $vis[x][y]=1$\uff0c\u4ee5\u540e\u518d\u6b21\u8bbf\u95ee\u5750\u6807 $(x,y)$ \u5904\u65f6\uff0c\u7531\u4e8e $vis[x][y]=1$\uff0c\u4e0d\u518d\u8fdb\u884c\u8bbf\u95ee\u3002\n\n\u672c\u9898\u4e2d\uff0c\u53ef\u4ee5\u5c06 $vis$ \u6570\u7ec4\u7684\u5168\u90e8\u5143\u7d20\u521d\u59cb\u503c\u8d4b\u503c\u4e3a $-1$\uff0c\u8868\u793a\u5750\u6807 $(x,y)$ \u5904\u6ca1\u6709\u8bbf\u95ee\u8fc7\u3002\u6bcf\u6b21\u8bbf\u95ee\u5230 $(x,y)$ \u5904\u65f6\uff0c\u5c06 $vis[x][y]$ \u7684\u503c\u4e0e\u5f53\u524d\u7684\u65e0\u654c\u72b6\u6001\u5269\u4f59\u6b65\u6570 $sta$ \u8fdb\u884c\u6bd4\u8f83\u3002\u82e5 $vis[x][y]<sta$\uff0c\u624d\u5bf9\u5750\u6807 $(x,y)$ \u5904\u7684\u683c\u5b50\u8fdb\u884c\u8bbf\u95ee\uff0c\u5e76\u7f6e $vis[x][y]=sta$\uff1b\u82e5 $vis[x][y]\\ge sta$\uff0c\u5c31\u4e0d\u518d\u5bf9 $(x,y)$ \u91cd\u65b0\u8bbf\u95ee\u4e86\u3002\u8fd9\u662f\u56e0\u4e3a\u5750\u6807 $(x,y)$ \u5904\u66fe\u7ecf\u4ee5\u66f4\u591a\u5269\u4f59\u65e0\u654c\u72b6\u6001\u6b65\u6570\u90fd\u8bbf\u95ee\u8fc7\uff0c\u518d\u7528\u5269\u4f59\u65e0\u654c\u72b6\u6001\u6b65\u6570\u5c11\u7684\u6765\u91cd\u65b0\u8bbf\u95ee\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u672c\u9898\u4e2d\uff0c$vis[x][y]$ \u4e2d\u4fdd\u5b58\u7684\u503c\u4e00\u5b9a\u662f\u8bbf\u95ee\u5750\u6807 $(x,y)$ \u5904\u683c\u5b50\u7684\u6700\u591a\u65e0\u654c\u72b6\u6001\u5269\u4f59\u6b65\u6570\u3002\u5373\u4f7f\u8be5\u683c\u5b50\u53ea\u80fd\u4ee5\u975e\u65e0\u654c\u72b6\u6001\u8fdb\u884c\u8bbf\u95ee\uff0c\u5176\u503c\u4e5f\u4f1a\u7f6e\u4e3a $0$\uff0c\u6bd4\u521d\u59cb\u8bbe\u5b9a\u7684\u503c $-1$ \u5927\uff0c\u4fdd\u8bc1\u53ef\u4ee5\u8bbf\u95ee\u5230\u3002\n\n## 2.\u6e90\u7a0b\u5e8f\u3002\n\n```c\n#include <stdio.h>\n#include <string.h>\n#define MAXLEN 1000000\nint n,k;\nint dx[4]={0,1,0,-1};\nint dy[4]={1,0,-1,0};\nchar mp[1005][1005];\nint vis[1001][1001];\nstruct Node\n{\n    int sta;   // \u65e0\u654c\u72b6\u6001\u5269\u4f59\u65f6\u95f4\n    int x,y,step;\n};\nstruct Node q[1000005];\nint judge(int x,int y,int sta)\n{\n    if (x<0 || x>=n || y<0 || y>=n)  // \u8d8a\u754c\u5224\u65ad\n        return 0;\n    if (mp[x][y]=='#' || (mp[x][y]=='X' && sta==0)) // \u5899\u548c\u975e\u65e0\u654c\u72b6\u6001\u4e0b\u7684\u9677\u9631\u4e0d\u80fd\u8fc7\n        return 0;\n    return 1;\n}\nvoid bfs()\n{\n    memset(vis,-1,sizeof(vis));\n    int front=0,rear=0;\n    struct Node cur;\n    cur.x=cur.y=cur.step=cur.sta=0;\n    q[rear++]=cur;\n    while (front<rear)\n    {\n        cur=q[front];\n        front=(front+1)%MAXLEN;\n        int sta=cur.sta;\n        if (cur.x==n-1 && cur.y==n-1)\n        {\n            printf(\"%d\\n\",cur.step);\n            return ;\n        }\n        for (int i=0;i<4;i++)\n        {\n            int nx=cur.x+dx[i];\n            int ny=cur.y+dy[i];\n            if (mp[nx][ny]=='%' && vis[nx][ny]<k)  // \u9047\u5230\u65e0\u654c\u9053\u5177\u4e14\u6b64\u72b6\u6001\u672a\u8bbf\u95ee\u8fc7\n            {\n                vis[nx][ny]=k;\n                q[rear].x=nx;  q[rear].y=ny;\n                q[rear].step=cur.step+1;\n                q[rear].sta=k;\n                rear=(rear+1)%MAXLEN;\n             }\n            if (vis[nx][ny]<sta && judge(nx,ny,sta))\n            {\n                vis[nx][ny]=sta;\n                q[rear].x=nx;  q[rear].y=ny;\n                q[rear].step=cur.step+1;\n                if (sta>=1) q[rear].sta=sta-1;\n                else        q[rear].sta=0;\n                rear=(rear+1)%MAXLEN;\n            }\n        }\n    }\n    printf(\"-1\\n\");\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    int i;\n    for (i=0;i<n;i++)\n        scanf(\"%s\",mp[i]);\n    bfs();\n    return 0;\n}\n\n```\n",
        "postTime": 1680178799,
        "uid": 228457,
        "name": "wuhan1234",
        "ccfLevel": 0,
        "title": "P8673 [\u84dd\u6865\u676f 2018 \u56fd C] \u8ff7\u5bab\u4e0e\u9677\u9631 \u9898\u89e3"
    }
]