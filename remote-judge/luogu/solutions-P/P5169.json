[
    {
        "content": "emmm\u8fd9\u9898\u5176\u5b9e\u4e0d\u7528\u7ebf\u6027\u57fa\u3002\n\n\u5927\u81f4\u505a\u6cd5\u5f53\u7136\u8fd8\u662f\u4e00\u6837\u7684\u3002\n\n\u505a\u8fc7[P4151](https://www.luogu.org/problemnew/show/P4151)\u7684\u4eba\u90fd\u77e5\u9053\u53ea\u8981dfs\u51fa\u4e00\u68f5\u751f\u6210\u6811\uff0c\u628a\u6240\u6709\u53ea\u542b\u6709\u4e00\u6761\u975e\u6811\u8fb9\u7684\u7b80\u5355\u73af\u7684\u6743\u503c\u62ff\u51fa\u6765\uff0c\u90a3\u4e48$(u,v)$\u5173\u4e8e$x$\u5de7\u5999\u7684\u6761\u4ef6\u5c31\u662f$d(u) \\oplus d(v)\\oplus x$\uff08\u5176\u4e2d$d(u)$\u8868\u793a$u$\u5230\u6839\u7684\u8def\u5f84\u7684\u6743\u503c\u5f02\u6216\u548c\uff09\u4e0e\u8fd9\u4e9b\u73af\u6743\u503c\u7684\u67d0\u4e2a\u5b50\u96c6\u7684\u5f02\u6216\u548c\u76f8\u7b49\u3002\n\n\u7a9d\u840c\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4$a_i$\u8868\u793ai\u662f\u5426\u4e0e\u67d0\u4e2a\u5f02\u6216\u548c\u76f8\u7b49\uff0c\u63d2\u5165$x$\u65f6\u5982\u679c$a_x=1$\u5219\u4e0d\u63d2\u5165\uff0c\u5426\u5219\u76f4\u63a5\u66b4\u529b\u63d2\u5165\uff0c\u6ce8\u610f\u5230\u6bcf\u6b21\u66b4\u529b\u63d2\u5165\u65f6$a_i$\u4e0e$a_{i\\oplus x}$\u4e0d\u53ef\u80fd\u540c\u65f6$=1$\uff0c\u96c6\u5408\u7684\u5927\u5c0f\u4e00\u5b9a\u81f3\u5c11\u7ffb\u500d\uff0c\u4e8e\u662f\u8fd9\u4e00\u90e8\u5206\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(w_i \\log w_i)$\n\n\u7136\u540e\u76f4\u63a5`FWT`\u6c42\u7b54\u6848\u5373\u53ef\uff0c\u603b\u590d\u6742\u5ea6\u4e3a$O(n+w_i \\log w_i)$\n\n```cpp\n// luogu-judger-enable-o2\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int MAXSIZE=10000020;\nint bufpos;\nchar buf[MAXSIZE];\n#define NEG 0\nvoid init(){\n    #ifdef LOCAL\n        freopen(\"5169.txt\",\"r\",stdin);\n    #endif\n    buf[fread(buf,1,MAXSIZE,stdin)]='\\0';\n    bufpos=0;\n}\n#if NEG\nint readint(){\n    bool isneg;\n    int val=0;\n    for(;!isdigit(buf[bufpos]) && buf[bufpos]!='-';bufpos++);\n    bufpos+=(isneg=buf[bufpos]=='-');\n    for(;isdigit(buf[bufpos]);bufpos++)\n        val=val*10+buf[bufpos]-'0';\n    return isneg?-val:val;\n}\n#else\nint readint(){\n    int val=0;\n    for(;!isdigit(buf[bufpos]);bufpos++);\n    for(;isdigit(buf[bufpos]);bufpos++)\n        val=val*10+buf[bufpos]-'0';\n    return val;\n}\n#endif\nchar readchar(){\n    for(;isspace(buf[bufpos]);bufpos++);\n    return buf[bufpos++];\n}\nint readstr(char* s){\n    int cur=0;\n    for(;isspace(buf[bufpos]);bufpos++);\n    for(;!isspace(buf[bufpos]);bufpos++)\n        s[cur++]=buf[bufpos];\n    s[cur]='\\0';\n    return cur;\n}\nchar obuf[MAXSIZE];\nint opos;\nvoid write(int x){\n    if (x>=10)\n        write(x/10);\n    obuf[opos++]=x%10+'0';\n}\nvoid writeln(int x,char c='\\n'){\n    write(x);\n    obuf[opos++]=c;\n}\nconst int mod=998244353;\nconst int maxn=100002;\nconst int maxm=600002;\nconst int maxv=1<<18;\nvoid fwt(ll *a,int l,int r){\n    if (l==r)\n        return;\n    int mid=(l+r)/2;\n    fwt(a,l,mid);\n    fwt(a,mid+1,r);\n    for(int i=l,j=mid+1;i<=mid;i++,j++){\n        ll x=a[i],y=a[j];\n        a[i]=x+y;\n        a[j]=x-y;\n    }\n}\nstruct graph{\n    int n,m;\n    struct edge{\n        int to,cost,next;\n    }e[maxm];\n    int first[maxn];\n    void addedge(int from,int to,int cost){\n        e[++m]=(edge){to,cost,first[from]};\n        first[from]=m;\n    }\n    ll a[maxv];\n    void add(int x){\n        if (a[x])\n            return;\n        a[x]=1;\n        for(int i=0;i<maxv;i++)\n            a[i^x]|=a[i];\n    }\n    int d[maxn];\n    bool vis[maxn];\n    void dfs(int u,int fa){\n        vis[u]=1;\n        for(int i=first[u];i;i=e[i].next){\n            int v=e[i].to;\n            if (v==fa)\n                continue;\n            if (vis[v])\n                add(d[u]^d[v]^e[i].cost);\n            else d[v]=d[u]^e[i].cost,dfs(v,u);\n        }\n    }\n    ll cnt[maxv];\n    void work(){\n        a[0]=1;\n        dfs(1,0);\n        // puts(\"WTF\");\n        for(int i=1;i<=n;i++)\n            cnt[d[i]]++;\n        fwt(cnt,0,maxv-1);\n        fwt(a,0,maxv-1);\n        for(int i=0;i<maxv;i++)\n            a[i]=a[i]*cnt[i]*cnt[i];\n        fwt(a,0,maxv-1);\n        for(int i=0;i<maxv;i++)\n            a[i]=(a[i]>>18)%mod;\n    }\n}g;\nint main(){\n    init();\n    int n=readint(),m=readint(),q=readint();\n    g.n=n;\n    while(m--){\n        int u=readint(),v=readint(),w=readint();\n        g.addedge(u,v,w);\n        g.addedge(v,u,w);\n    }\n    g.work();\n    while(q--)\n        writeln(g.a[readint()]);\n    fwrite(obuf,1,MAXSIZE,stdout);\n}\n```",
        "postTime": 1548415864,
        "uid": 3720,
        "name": "q234rty",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5169 \u3010xtq\u7684\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/Memory-of-winter/p/10268704.html)\n\n**\u9898\u76ee\u5927\u610f\uff1a**\u7ed9\u4f60\u4e00\u5f20$n(n\\leqslant10^5)$\u4e2a\u70b9$m(m\\leqslant3\\times10^5)$\u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6bcf\u6761\u8fb9\u6709\u4e00\u4e2a\u6743\u503c\uff0c$q(q\\leqslant2^{18})$\u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u4f60\u4e00\u4e2a$x(x<2^{18})$\uff0c\u95ee\u6709\u591a\u5c11\u4e2a\u6709\u5e8f\u70b9\u5bf9$(u,v)$\uff0c\u6ee1\u8db3\u6709\u4e00\u6761$u$\u5230$v$\u7684\u8def\u5f84\u5f02\u6216\u548c\u4e3a$x$\n\n**\u9898\u89e3\uff1a**\u5148\u5efa\u4e00\u68f5\u751f\u6210\u6811\uff0c\u628a\u56fe\u4e2d\u6240\u6709\u73af\u4e22\u8fdb\u7ebf\u6027\u57fa\uff0c\u53d1\u73b0\u4e00\u6761$u->v$\u7684\u8def\u5f84\u5c31\u662f\u6811\u4e0a$u->v$\u7684\u8ddd\u79bb\u5f02\u6216\u4e0a\u4e00\u4e9b\u73af\u3002\n\n\u53d1\u73b0$x<2^{18}$\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a\u7ebf\u6027\u57fa\u4e2d\u6240\u6709\u53ef\u4ee5\u8868\u793a\u51fa\u6765\u7684\u6570\u6c42\u51fa\u6765\u4e3a\u96c6\u5408$S$\uff0c\u4ee4\u591a\u9879\u5f0f$A(x)$\uff0c\u6ee1\u8db3$[x^n]A(x)=\\sum\\limits_{i=1}^n[dis_i=n]$\uff1b\u4ee4\u591a\u9879\u5f0f$B(x)$\uff0c\u6ee1\u8db3$[x^n]B(x)=[n\\in S]$\uff0c$dis_i$\u8868\u793a\u7b2c$i$\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u5f02\u6216\u503c\n\n\u7136\u540e\u7b54\u6848\u5c31\u662f$A*A*B$\uff0c$*$\u8868\u793a\u5f02\u6216\u5377\u79ef\n\n\n\n**C++ Code\uff1a**\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#define maxn 100010\n#define maxm 300010\n#define N 262144\nconst int mod = 998244353;\n\nint head[maxn], cnt;\nstruct Edge {\n\tint to, nxt, w;\n} e[maxm << 1];\ninline void addedge(int a, int b, int c) {\n\te[++cnt] = (Edge) { b, head[a], c }; head[a] = cnt;\n\te[++cnt] = (Edge) { a, head[b], c }; head[b] = cnt;\n}\n\nlong long A[N], B[N];\nnamespace Base {\n#define M 18\n\tint p[M + 1];\n\tinline void insert(int x) {\n\t\tfor (int i = M; ~i; --i) if (x >> i & 1) {\n\t\t\tif (p[i]) x ^= p[i];\n\t\t\telse { p[i] = x; break; }\n\t\t}\n\t}\n\tvoid dfs(int dep, int val) {\n\t\tif (dep > M) {\n\t\t\t++B[val];\n\t\t\treturn ;\n\t\t}\n\t\tdfs(dep + 1, val);\n\t\tif (p[dep]) dfs(dep + 1, val ^ p[dep]);\n\t}\n#undef M\n}\n\nint n, m, q;\nint dis[maxn];\nbool vis[maxn];\nvoid dfs(int u, int fa = 0) {\n\tvis[u] = true;\n\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tif (!vis[v]) {\n\t\t\tdis[v] = dis[u] ^ e[i].w;\n\t\t\tdfs(v, u);\n\t\t} else Base::insert(dis[u] ^ dis[v] ^ e[i].w);\n\t}\n}\n\nconst int lim = N;\ninline void FWT(long long *A) {\n\tfor (register int mid = 1; mid < lim; mid <<= 1)\n\t\tfor (register int i = 0; i < lim; i += mid << 1)\n\t\t\tfor (register int j = 0; j < mid; ++j) {\n\t\t\t\tconst long long X = A[i + j], Y = A[i + j + mid];\n\t\t\t\tA[i + j] = X + Y, A[i + j + mid] = X - Y;\n\t\t\t}\n}\n\nint main() {\n\tstd::ios::sync_with_stdio(false), std::cin.tie(0), std::cout.tie(0);\n\tstd::cin >> n >> m >> q;\n\tfor (int i = 0, a, b, c; i < m; ++i) {\n\t\tstd::cin >> a >> b >> c;\n\t\taddedge(a, b, c);\n\t}\n\tdfs(1), Base::dfs(0, 0);\n\tfor (int i = 1; i <= n; ++i) ++A[dis[i]];\n\tFWT(A), FWT(B);\n\tfor (int i = 0; i < lim; ++i) A[i] = A[i] * A[i] * B[i];\n\tFWT(A);\n\tfor (int i = 0; i < lim; ++i) A[i] >>= 18;\n\twhile (q --> 0) {\n\t\tstatic int x;\n\t\tstd::cin >> x;\n\t\tstd::cout << A[x] % mod << '\\n';\n\t}\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1547466520,
        "uid": 22072,
        "name": "Memory_of_winter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5169 \u3010xtq\u7684\u5f02\u6216\u548c\u3011"
    }
]