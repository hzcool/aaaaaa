[
    {
        "content": "### 1\n\n\u5168\u6392\u5217\u3002\n\n### 2\n\n\u5199\u4e86\u4e00\u4e2a\u4e22\u4eba\u7684 $O(n^3 2^n)$ \u7684\u72b6\u538b dp \u8dd1\u4e86 2min\u3002\n\n### 3\n\n\u5927\u773c\u89c2\u5bdf\u4e0d\u96be\u5f97\u5230\u7ed3\u8bba\uff1a\u5f53 $n\\ge 4$ \u65f6\uff0c\u521d\u59cb\u6392\u5217\u4e3a $\\{1,2,3\\}$\uff0c\u540e\u9762\u4ece $4$ \u5f00\u59cb\u6bcf\u4e2a\u6570 $x$ \u63d2\u5165\u5230 $x-1$ \u548c $x-2$ \u4e4b\u95f4\u3002\n\n\u9057\u4f20\u5e94\u8be5\u6bd4\u8f83\u96be\u8fc7\uff0c\u8dd1\u4e00\u665a\u4e0a\u6ca1\u51c6\u80fd\u8fc7\u5462\uff08\n\n### 4~5\n\n\u7ed9\u9000\u706b\u7684\uff08\u6211\u672c\u673a\u7528\u9000\u706b\u8dd1 1s \u9020\u7684\u6570\u636e\uff0c\u4f46\u662f\u7528\u9000\u706b\u8fc7\u6389\u8fd9\u4e24\u4e2a\u70b9\u5374\u5f88\u56f0\u96be\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff09\u3002\n\n### 6~10\n\n\u672c\u6765\u60f3\u7ed9\u88f8\u7684\u9057\u4f20\u4e00\u70b9\u90e8\u5206\u5206\u7684\uff0c\u7136\u540e\u53d1\u73b0\u88f8\u7684\u9057\u4f20\u6bd4\u9000\u706b\u8fd8\u5dee\u3002\n\n\u8fd9\u4e9b\u70b9\u662f\u7ed9\u9057\u4f20\u7684\u3002\n\n\u5b9a\u4e49\u201c\u57fa\u56e0\u201d\u4e3a\u6392\u5217 $p$\uff0c\u5b9a\u4e49\u4e00\u6b21\u201c\u53d8\u5f02\u201d\u4e3a\u4ea4\u6362 $p$ \u4e2d\u7684\u4e24\u4e2a\u5143\u7d20\uff0c\u5b9a\u4e49\u4e00\u4e2a\u57fa\u56e0\u7684\u201c\u4f18\u79c0\u7a0b\u5ea6\u201d\u4e3a\u4ed6\u7684\u6743\u503c\u3002\n\n\u5176\u5b9e\u6211\u5199\u7684\u4e5f\u4e0d\u7b97\u9057\u4f20\uff08\u6211\u7528 TSP \u5c1d\u8bd5\u4e86\u4e0b\u4ea4\u914d\uff0c\u53d1\u73b0\u5e76\u4e0d\u6bd4\u7528\u5927\u91cf\u53d8\u5f02\u4ee3\u66ff\u4ea4\u914d\u4f18\u79c0\uff0c\u53e6\u5916\u591a\u79cd\u7fa4\u9057\u4f20\u4e5f\u4e0d\u6bd4\u8fd9\u4e2a\u4f18\u79c0\uff09\uff0c\u5c31\u662f\u6bcf\u6b21\u8ba9\u6bcf\u4e2a\u57fa\u56e0\u53d8\u5f02\u751f\u6210 $10$ \u4e2a\u513f\u5b50\uff0c\u7136\u540e\u6309\u7167\u6743\u503c\u6392\u5e8f\u3002\u9650\u5236\u79cd\u7fa4\u5927\u5c0f\uff0c\u751f\u6210\u4e0b\u4e00\u4ee3\u4e4b\u540e\u53ea\u4fdd\u7559\u6700\u4f18\u79c0\u7684 $maxn$ \u4e2a\u3002\n\n\u540c\u65f6\u91c7\u53d6\u4fdd\u7559\u7cbe\u82f1\u7b56\u7565\uff0c\u628a\u7236\u8f88\u4e2d\u7684\u6700\u4f18\u79c0\u57fa\u56e0\u5b8c\u6574\u590d\u5236\u5230\u4e0b\u4e00\u4ee3\u4e2d\u3002\n\n\u4f46\u8fd9\u6837\u4ecd\u7136\u4e0d\u8db3\u4ee5\u901a\u8fc7\u672c\u9898\uff0c\u8fd8\u9700\u8981\u4e00\u4e2a\u4f18\u5316\uff1a\u56e0\u4e3a\u9057\u4f20\u5c40\u90e8\u6536\u655b\u6bd4\u8f83\u6162\uff0c\u6240\u4ee5\u6539\u826f\u4e0a\u9762\u7684\u4fdd\u7559\u7cbe\u82f1\u7b56\u7565\uff0c\u628a\u7236\u8f88\u4e2d\u7684\u6700\u4f18\u79c0\u57fa\u56e0\u5148\u53d8\u5f02\u4e00\u6b21\uff0c\u7136\u540e\u5bf9\u5b83\u722c\u5c71\uff0c\u722c\u5c71 $10000$ \u6b21\u57fa\u672c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5728\u6d4b\u8bd5 TSP \u95ee\u9898\u7684\u65f6\u5019\uff0c\u540c\u6837\u8dd1 10s\uff0c\u9000\u706b\u548c\u722c\u5c71\u5747\u662f 28w \u5de6\u53f3\uff08\u8def\u7ebf\u603b\u957f\uff09\uff0c\u9057\u4f20\u662f 25w \u5de6\u53f3\uff0c\u4e0a\u9762\u7684\u505a\u6cd5\u53ef\u4ee5\u53bb\u5230 16w \u5de6\u53f3\u3002\n\n\u6ca1\u6709\u5b9e\u73b0\u7c92\u5b50\u7fa4\u548c\u8681\u7fa4\uff0c\u4e0d\u77e5\u9053\u80fd\u4e0d\u80fd\u901a\u8fc7\u672c\u9898\u3002\n\n\u7269\u7ade\u5929\u62e9\uff0c\u9002\u8005\u751f\u5b58\uff0c\u8fd9\u624d\u662f\u9898\u76ee\u771f\u6b63\u7684\u610f\u4e49\u3002\n\n\u4ee3\u7801\u4e0d\u653e\u4e86\uff0c\u9700\u8981\u8005\u79c1\u4fe1\u3002",
        "postTime": 1613701520,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7812 Dark Forest"
    },
    {
        "content": "\u5927\u6982\u662f\u770b\u5230\u4e86\u8fd9\u9053\u9898\n\n\u89c9\u5f97\u633a\u6709\u610f\u601d\u7684\n\n\u6bcf\u6b21 rand \u4e24\u4e2a\u4f4d\u7f6e swap \u80fd\u66f4\u4f18\u5c31\u6362\n\n\u4ed6\u8868\u73b0\u8fd8\u53ef\u4ee5\uff0c\u83b7\u5f97\u4e86 $62$ \u5206\u7684\u597d\u6210\u7ee9\u3002\n\n\u53d1\u73b0\u6bcf\u6b21 rand \u4e24\u4e2a\u4f4d\u7f6e\u5bb9\u6613 rand \u5230\u6362\u8fc7\u7684\u4f4d\u7f6e\uff0c\u5f88\u4e8f\u3002\n\n\u4e8e\u662f\u628a rand \u4e24\u4e2a\u4f4d\u7f6e\u6539\u6210\u4e86\u679a\u4e3e\u4e24\u4e2a\u4f4d\u7f6e\uff0c\u80fd\u6362\u5c31\u6362\u76f4\u5230\u6362\u4e0d\u4e86\u3002\n\n\u4ed6\u6bd4\u722c\u5c71\u5389\u5bb3\u5f88\u591a\uff0c\u83b7\u5f97\u4e86 $92$ \u5206\u7684\u597d\u6210\u7ee9\u3002\n\n\u6362\u51e0\u4e2a\u968f\u673a\u79cd\u5b50\u591a\u6d4b\u6d4b\uff0c\u83b7\u5f97\u4e86 $99$ \u5206\u7684\u597d\u6210\u7ee9\u3002\n\n\u53d1\u73b0\u7b2c\u4e09\u4e2a\u70b9\u6709\u6027\u8d28\uff0c\u770b\u8d77\u6765 \u5947\u6570\u6b63\u5e8f\u653e\u524d\u9762 \u5076\u6570\u9006\u5e8f\u653e\u540e\u9762 \u5f88\u5389\u5bb3\n\n\u5c31\u8fc7\u4e86\u3002\n\n\u4f46\u4ed6\u7684\u4f18\u5316\u7a7a\u95f4\u8fd8\u662f\u5f88\u5927\u7684\u3002\n\n\u628a \u201c\u6bcf\u6b21\u6362\u4e00\u4e2a\u968f\u673a\u79cd\u5b50\u201d \u6539\u6210 \u201c\u6bcf\u6b21\u628a\u7b54\u6848\u6392\u5217\u968f\u673a\u6362 $25$ \u5bf9\u201d\n\n\u8868\u73b0\u975e\u5e38\u597d\uff0c~~\u83b7\u5f97\u4e86\u66f4\u6362\u6570\u636e\u7684\u597d\u6210\u7ee9~~ \u65b0\u6570\u636e\u5927\u6982 $2min$ \u51fa\u89e3\u3002\n\n\u4ee3\u7801 https://www.luogu.com.cn/paste/srsy19qf\n\n\u5b9e\u73b0\u96be\u5ea6\u4e3b\u8981\u5728 $O(1)$ \u4ea4\u6362\u4e24\u4e2a\u6570\u8ba1\u7b97\u7b54\u6848\u3002\n\n~~\u7269\u7ade\u5929\u62e9\uff0c\u9002\u8005\u751f\u5b58\uff0c\u8fd9\u624d\u662f\u2026\u2026~~\n\n\u8bf4\u8d77\u6765\u6211\u8fd8\u4e0d\u4f1a\u9057\u4f20\u5462\uff08\n",
        "postTime": 1629951298,
        "uid": 101734,
        "name": "\u8fdd\u89c4\u7528\u6237\u540d76G!ihcm",
        "ccfLevel": 9,
        "title": "P7812 \u9898\u89e3"
    },
    {
        "content": "[P7812 [JRKSJ R2] Dark Forest](https://www.luogu.com.cn/problem/P7812)\u89e3\u9898\u62a5\u544a\uff1a\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://zybuluo.com/xiaoziyao/note/1816562)\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c\u5b9a\u4e49\u4e00\u4e2a\u6392\u5217 $p$ \u7684\u6743\u503c\u4e3a $\\sum_{i=1}^np_ia_{p_{i-1}}a_{p_i}a_{p_{i+1}}$\u3002\n\n\u4e00\u5171\u6709 $10$ \u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e00\u4e2a\u8bc4\u5206\u53c2\u6570\uff0c\u4f60\u9700\u8981\u6784\u9020\u4e00\u4e2a\u6743\u503c\u5c3d\u53ef\u80fd\u5927\u7684\u6392\u5217\u8ba9\u6743\u503c\u5927\u4e8e\u8bc4\u5206\u53c2\u6570\u3002\n\n$1\\leqslant n\\leqslant 1000$\u3002\n\n## \u5206\u6790\n\n\u4e0d\u6127\u662f\u9ed1\u6697\u68ee\u6797\uff0c\u4f60\u6c38\u8fdc\u4e0d\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u4f1a\u88ab\u4e00\u9053\u5927\u6bd2\u7624\u9898\u5751\u5bb3\u3002/cy\n\n\u8003\u8651\u968f\u673a\u5316\uff08\u8fd9\u8c8c\u4f3c\u4e0d\u662f\u5b8c\u5168\u7684\u9057\u4f20\u7b97\u6cd5\uff09\uff0c\u4ee4\u6392\u5217 $p$ \u4e3a\u57fa\u56e0\uff0c\u4ee4\u4e0a\u9762\u5f0f\u5b50\u7684\u503c\u4e3a\u4e00\u4e2a\u57fa\u56e0\u7684\u4f18\u5f02\u7a0b\u5ea6\uff0c\u4ee4\u4ea4\u6362\u4efb\u610f\u4e24\u4e2a\u6570\u4e3a\u4e00\u6b21\u53d8\u5f02\u3002\n\n\u6211\u4eec\u4e00\u5f00\u59cb\u968f\u673a\u751f\u6210\u82e5\u5e72\u4e2a\u57fa\u56e0\uff0c\u6bcf\u6b21\u4e00\u4e2a\u57fa\u56e0\u8bde\u751f\u82e5\u5e72\u4e2a\u540e\u4ee3\uff0c\u7136\u540e\u5c06\u540e\u4ee3\u6309\u4f18\u5f02\u7a0b\u5ea6\u6392\u5e8f\uff0c\u5220\u9664\u90e8\u5206\u4e0d\u4f18\u79c0\u7684\u540e\u4ee3\u4f7f\u5f97\u540e\u4ee3\u6570\u91cf\u63a7\u5236\u5728\u4e00\u4e2a\u8303\u56f4\u5185\u3002\u7136\u540e\u6bcf\u6b21\u518d\u7ed9\u6700\u4f18\u79c0\u7684\u65cf\u7fa4\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u540e\u4ee3\uff0c\u5e76\u722c\u5c71\u5f97\u5230\u8f83\u4f18\u7684\u89e3\u3002\n\n\u7136\u540e\u5c31\u8010\u5fc3\u8dd1\u5427\uff0c\u5b9e\u5728\u4e0d\u884c\u8c03\u8c03\u53c2\uff0c\u53cd\u6b63\u6211\u4e00\u665a\u4e0a\u5c31\u8dd1\u51fa\u6765\u4e24\u4e2a\u5305\u3002\n\n\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u52a0\u4e00\u4e9b\u7279\u5224\uff0c\u6bd4\u5982\u5982\u679c\u9677\u5165\u4e00\u4e2a\u5c40\u90e8\u6700\u4f18\u89e3\u5c31\u5f3a\u884c\u8ba9\u90e8\u5206\u540e\u4ee3\u53d8\u5f02\u82e5\u5e72\u6b21\uff0c\u7136\u540e\u6539\u53d8\u4e00\u6b21\u751f\u5b58\u6cd5\u5219\u4e4b\u7c7b\u7684\uff0c\u8fd9\u6837\u5e94\u8be5\u4f1a\u597d\u4e00\u70b9\u3002\n\n\u6211\u7adf\u7136\u8dd1\u51fa\u6765\u4e86\uff0c\u96be\u4ee5\u7f6e\u4fe1\u3002\n\n\u4ee3\u7801\u4e0d\u653e\u4e86\uff0c\u60f3\u8981\u79c1\u4fe1\u3002",
        "postTime": 1629292839,
        "uid": 35754,
        "name": "Verdandi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7812\u3010[JRKSJ R2] Dark Forest\u3011"
    },
    {
        "content": "\u8981\u4ec0\u4e48\u9057\u4f20\uff1f\u6a21\u62df\u9000\u706b\u53ef\u4ee5\u8f7b\u8f7b\u677e\u677e\u5730\uff0c\u6bcf\u4e2a\u70b9\u8dd1\u4e24\u79d2\uff0c\u518d\u7279\u5224\u4e00\u4e0b #3 \u7684\u7279\u6b8a\u6784\u9020\uff0c\u5c31 AC \u4e86\u3002\n\n\u548c\u8f83\u52a3\u7684\u6a21\u62df\u9000\u706b\u5b9e\u73b0\u76f8\u6bd4\u8f83\uff0c\u6700\u5173\u952e\u7684\u4e00\u70b9\u5728\u4e8e\uff1a\u8ba1\u7b97\u4e00\u4e2a\u6392\u5217\u6743\u503c\u7684\u590d\u6742\u5ea6\u3002\n\n\u6211\u4eec\u90fd\u77e5\u9053\u6a21\u62df\u9000\u706b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathrm O(-F\\log_{\\Delta T}{T_0\\over T_e})$\uff0c\u5176\u4e2d $T_0$ \u662f\u521d\u6e29\u5ea6\uff0c$T_e$ \u662f\u672b\u6e29\u5ea6\uff0c$\\Delta T$ \u662f\u964d\u6e29\u7cfb\u6570\uff0c$F$ \u662f\u8ba1\u7b97\u4e00\u4e2a\u65b9\u6848\u6743\u503c\u7684\u65f6\u95f4\u3002\u90a3\u4e48\u964d\u4f4e $F$\uff0c\u5c31\u80fd\u5141\u8bb8\u6211\u4eec\u8dd1\u66f4\u591a\u6b21\u3002\n\n\u5bf9\u4e8e\u65b9\u6848\u96c6\u5408\u662f\u6392\u5217\u7684\u6a21\u62df\u9000\u706b\uff0c\u4e00\u822c\u6270\u52a8\u65b9\u6cd5\u90fd\u662f\u968f\u673a\u4ea4\u6362\u4e24\u4e2a\u4f4d\u7f6e\u3002\u800c\u4ea4\u6362\u524d\u540e\u7684\u6743\u503c\u589e\u91cf\u663e\u7136\u662f\u80fd $\\mathrm O(1)$ \u8ba1\u7b97\u7684\uff0c\u628a\u4ea4\u6362\u7684\u4e24\u4e2a\u4f4d\u7f6e\u76f8\u90bb\u4e09\u9879\u7684\u8d21\u732e\u52a0\u52a0\u51cf\u51cf\u5373\u53ef\u2026\u2026\u4e0d\u9700\u8981\u6bcf\u6b21\u90fd $\\mathrm O(n)$\u3002\n\n\u8fd9\u6837\u5c31\u662f\u8bf4\uff0c\u964d\u6e29\u6b21\u6570\u53ef\u4ee5\u5f00\u5230 $10^7\\sim 10^8$ \u91cf\u7ea7\uff0c\u80fd\u5728\u51e0\u79d2\u5185\u8dd1\u5b8c\u3002\u8fd9\u4f7f\u6211\u4eec\u53ef\u4ee5\u8f93\u5165\u6700\u5962\u4f88\u7684\u53c2\u6570\uff1a$T_0=10^{15},T_e=10^{-15},\\Delta T=1-10^6$\u3002\u5728\u6709\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u91cf\u63d0\u9ad8 $\\Delta T$\uff0c\u76f8\u5f53\u4e8e\u8ba9\u964d\u6e29\u8fc7\u7a0b\u66f4\u52a0\u7cbe\u7ec6\uff0c\u53ea\u8dd1\u4e00\u6b21\uff0c\u4e00\u822c\u662f\u8981\u6bd4\u4e0d\u6539\u53d8\u53c2\u6570\u8dd1\u5f88\u591a\u6b21\u6548\u679c\u597d\u5f88\u591a\u7684\u3002\n\n\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u9000\u706b\u4e00\u822c\u662f\u628a\u8fc7\u7a0b\u4e2d\u5f97\u5230\u7684\u6bcf\u4e2a\u89e3\u90fd\u5f80\u7b54\u6848\u91cc\u5c1d\u8bd5\u66f4\u65b0\u4e00\u4e0b\uff0c\u800c\u4e0d\u53ea\u770b\u6700\u540e\u5f97\u5230\u7684\u90a3\u4e2a\u89e3\uff0c\u8fd9\u6837\u65e0\u7591\u662f\u4e0d\u52a3\u7684\u3002\u4f46\u8fd9\u91cc\u66f4\u65b0\u7b54\u6848\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathrm O(n)$\uff0c\u90a3\u80af\u5b9a\u4e0d\u884c\u3002\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u628a\u4fee\u6539\u8def\u5f84\uff08\u5c31\u662f\u6bcf\u6b21\u4ea4\u6362\u7684\u4e24\u4e2a\u4f4d\u7f6e\uff09\u548c\u6bcf\u6b21\u7684\u6743\u503c\u8bb0\u5f55\u4e0b\u6765\uff0c\u6700\u540e\u518d\u8fd8\u539f\u3002\u4f46\u8fd9\u6837\u7a7a\u95f4\u590d\u6742\u5ea6\u5c31\u53d8\u4e3a\u4e0e\u964d\u6e29\u6b21\u6570\u540c\u9636\u7684\u4e86\u3002\u5e76\u4e0d\u662f\u8bf4\u5f00\u4e0d\u4e0b\uff0c\u603b\u89c9\u5f97\u4e0d\u591f\u4f18\u7f8e\u3002\n\n\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff1a\u91c7\u7528\u5b9a\u671f\u91cd\u6784\uff0c\u6216\u8005\u7c7b\u4f3c\u4e8e\u5206\u5757 bitset \u7684\u601d\u60f3\uff0c\u6bcf $\\mathrm O(n)$ \u6b21\u66f4\u65b0\u5206\u4e3a\u4e00\u5757\uff0c\u6bcf\u5757\u5185\u8bb0\u5f55\u8def\u5f84\u3001\u66f4\u65b0\u4e00\u6b21\uff0c\u8fd9\u6837\u65f6\u7a7a\u590d\u6742\u5ea6\u90fd\u8fbe\u5230\u4e86\u539f\u6765\u7684\u6c34\u5e73\u3002\n\n\u4f46\u8fd9\u662f\u4e71\u641e\u9898\uff0c\u5c45\u7136\u8fd8\u6401\u8fd9\u8bbe\u8ba1\u7b97\u6cd5\uff0c\u771f\u662f\u591a\u6b64\u4e00\u4e3e\u4e86\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4e00\u8fb9\u9000\u706b\u4e00\u8fb9\u66f4\u65b0\u7b54\u6848\u53ea\u5728 $\\Delta T$ \u8f83\u5c0f\uff08\u9000\u706b\u4e0d\u591f\u7cbe\u7ec6\uff09\u7684\u60c5\u51b5\u4e0b\u6709\u6bd4\u8f83\u597d\u7684\u6548\u679c\uff0c$\\Delta T$ \u5f88\u5927\u65f6\u57fa\u672c\u4e0a\u6700\u540e\u7684\u89e3\u5c31\u662f\u8fc7\u7a0b\u4e2d\u7684\u6700\u4f18\u89e3\u4e86\u3002\u6240\u4ee5\u5e72\u8106\u76f4\u63a5\u53d6\u6700\u540e\u7684\u7ed3\u679c\u5f97\u4e86\u3002\n\n\u8fd9\u6837\u7b80\u5355\u5730\u5b9e\u73b0\u4e00\u4e0b\uff0c\u6bcf\u4e2a\u70b9\u82b1\u4e24\u79d2\u8dd1\u4e00\u4e0b\u5c31\u8fc7\u4e86\u3002\u7136\u540e\u770b\u5230\u4e86[\u8fd9\u4e2a\u8d34\u5b50](https://www.luogu.com.cn/discuss/434991)\uff0c\u7a81\u53d1\u5947\u60f3\u5982\u679c\u6211\u7684\u9000\u706b\u6bcf\u4e2a\u70b9\u8dd1\u4e2a 5min \u4f1a\u5f97\u5230\u600e\u6837\u7684\u7ed3\u679c\u3002\u4e8e\u662f\u4ee4 $\\Delta T=1-10^8$\uff0c\u8dd1\u51fa\u6765 #4~10 \u7684\u7ed3\u679c\u5206\u522b\u662f 1420195017577\u30011637948882729\u3001157875782146328\u3001142779066317098\u3001149662580014302\u3001141775806487785\u3001145539684174123\uff0c\u53ef\u4ee5\u770b\u5230\u6bd4\u8d34\u5b50\u91cc\u7ed9\u51fa\u7684\u65b0\u7b54\u6848\u8fd8\u8981\u9ad8\u51fa\u4e00\u622a\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nusing ll = long long;\nusing db = double;\nusing pii = pair<int, int>;\n#define mr make_pair\n#define fi first\n#define se second\nusing vi = vector<int>; using vii = vector<pii>;\n#define pb emplace_back\n#define sz(x) ((int)(x).size())\ntemplate<class T, class U> inline void cmn(T &x, const U &y) { if(y < x) x = y; }\ntemplate<class T, class U> inline void cmx(T &x, const U &y) { if(y > x) x = y; }\nconst char nl = '\\n', nk = ' ';\nconst int inf = sizeof(int) == 4 ? 0x3f3f3f3f : 0x3f3f3f3f3f3f3f3f;\n\nmt19937 rng(19171107);\nint rnd(int l, int r) { return uniform_int_distribution<>(l, r)(rng); }\ndb rndb(db l, db r) { return uniform_real_distribution<>(l, r)(rng); }\n\nconst int N = 1010;\n\nint n;\nll a[N];\nint p[N];\n\nll res;\n\nvoid calc(int x, int v) {\n  int A = p[x > 2 ? x - 2 : x + n - 2], B = p[x > 1 ? x - 1 : n], &C = p[x], D = p[x < n ? x + 1 : 1], E = p[x < n - 1 ? x + 2 : x + 2 - n];\n  res -= (a[A] * a[B] * B + a[B] * C * a[D] + D * a[D] * a[E]) * a[C];\n  C = v;\n  res += (a[A] * a[B] * B + a[B] * C * a[D] + D * a[D] * a[E]) * a[C];\n}\n\nvoid SA(db t0, db te, db dt) {\n  res = 0;\n  for(int i = 1; i <= n; ++i) calc(i, i);\n  for(db t = t0; t >= te; t *= dt) {\n    int x = rnd(1, n), y = rnd(1, n);\n    ll ores = res;\n    int px = p[x], py = p[y];\n    calc(y, px), calc(x, py);\n    if(res > ores || rndb(0, 1) <= exp((res - ores) / t));\n    else res = ores, swap(p[x], p[y]);\n//    cerr << t << \": \" << res << nl;\n  }\n  cerr << \"res = \" << res << nl;\n  for(int i = 1; i <= n; ++i) cout << p[i] << (i == n ? nl : nk);\n}\n\nvoid mian() {\n  cin >> n;\n  for(int i = 1; i <= n; ++i) cin >> a[i];\n  SA(1e15, 1e-15, 0.99999999);\n}\n\nsigned main() {\n  cin.tie(nullptr)->sync_with_stdio(false);\n  int t = 1;\n//  cin >> t;\n  while(t--) mian();\n  return 0;\n}\n\n```\n\n\n\n",
        "postTime": 1677991658,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "P7812 - Dark Forest \u9898\u89e3"
    },
    {
        "content": "[P7812 [JRKSJ R2] Dark Forest](https://www.luogu.com.cn/problem/P7812)\n\n\u5f88\u6709\u610f\u601d\u7684\u4e00\u9053\u968f\u673a\u9898\uff0c\u5361\u4e86\u4e00\u6574\u5929\u3002\n\n## \u3010\u9898\u610f\u3011\n\n\u7ed9\u4f60\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c\u6c42\u4e00\u4e2a\u6392\u5217 $1\\dots n$ \u7684\u6392\u5217 $p$\uff0c\u4f7f\u5f97 $\\sum_{i=1}^n a_i p_ip_{i-1}p_{i+1}$ \u5c3d\u53ef\u80fd\u5927\u3002\n\n## \u3010\u5206\u6790\u3011\n\n\u63d0\u4ea4\u7b54\u6848\u9898\uff0c\u8003\u8651\u4f7f\u7528\u968f\u673a\u5316\u7b97\u6cd5\u6765\u505a\u3002\n\n### #1~#2\n\n\u4e8e\u662f\u4e00\u5f00\u59cb\u5c31\u5199\u4e86\u6a21\u62df\u9000\u706b\uff0c\u6bcf\u6b21\u4ea4\u6362\u4e24\u4e2a\u4f4d\u7f6e\uff0c\u82e5\u66f4\u4f18\u5219\u4fdd\u7559\uff0c\u5426\u5219\u4ee5\u4e00\u5b9a\u6982\u7387\u63a5\u53d7\u8f83\u52a3\u89e3\uff0c\u8f7b\u677e\u8fc7\u6389\u4e86\u8fd9\u4e24\u4e2a\u70b9\u3002\n\n\u4ee3\u7801\u5927\u6982\u957f\u8fd9\u4e2a\u6837\u5b50\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#include<windows.h>\n#define DB double\n#define LL long long\nusing namespace std;\nconst int maxn=1005;\nint n;\nLL a[maxn],p[maxn],P[maxn];\nLL ans;\nint mp[maxn];\nLL calc(){\n\tLL ret=p[1]*a[p[n]]*a[p[1]]*a[p[2]]+p[n]*a[p[n-1]]*a[p[n]]*a[p[1]];\n\tfor(int i=2;i<n;i++){\n\t\tret+=p[i]*a[p[i-1]]*a[p[i]]*a[p[i+1]];\n\t}\n\treturn ret;\n}\nconst DB ST=1e15,ET=1e-5,DT=0.995;\nvoid cpy(){\n\tcerr<<ans<<endl;\n\tfor(int i=1;i<=n;i++) P[i]=p[i];\n\tfreopen(\"lst.txt\",\"w\",stdout);\n\tfor(int i=1;i<=n;i++) printf(\"%lld \",P[i]);\n\tif(ans>=52817386099ll){\n\t\tfreopen(\"2.txt\",\"w\",stdout);\n\t\tfor(int k=1;k<=n;k++) printf(\"%d \",P[k]);\n\t\texit(0);\n\t}\n}\nvoid SA(){\n\tfor(DB T=ST;T>ET;T*=DT){\n\t\tint x=rand()%n+1,y=rand()%n+1;\n\t\twhile(x==y) x=rand()%n+1,y=rand()%n+1;\n\t\tswap(p[x],p[y]);\n\t\tLL now=calc(),del=now-ans;\n\t\tif(del>0){\n\t\t\tans=now;\n\t\t\tcpy();\n\t\t}\n\t\tif(exp((DB)del/T)<=(DB)rand()/RAND_MAX) swap(p[x],p[y]);\n\t}\n}\nint main(){\n\tsrand(GetTickCount());\n\tfreopen(\"2.in\",\"r\",stdin);\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%lld\",&a[i]),p[i]=P[i]=i;\n\trandom_shuffle(P+1,P+1+n);\n\twhile(1){\n\t\tfor(int i=1;i<=n;i++) p[i]=P[i];\n\t\tSA();\n\t}\n\treturn 0;\n}\n```\n\n\n### #3\n\n\u8fd9\u4e2a\u9700\u8981\u7279\u6b8a\u6784\u9020\uff0c\u7528\u540e\u9762\u7684\u7b97\u6cd5\u8dd1\u4e86\u51e0\u4e2a\u5c0f\u65f6\uff0c\u8f93\u51fa\u4e00\u4e2a\u8f83\u4f18\u89e3\uff0c\u53d1\u73b0\u5927\u81f4\u662f\u4e24\u8fb9\u5927\u4e2d\u95f4\u5c0f\uff0c\u4e8e\u662f\u524d\u9762\u5947\u6570\u9012\u51cf\u3001\u540e\u9762\u5076\u6570\u9012\u589e\uff0c\u8fc7\u6389\u4e86\u8fd9\u4e2a\u70b9\u3002\n\n### #4~#5\n\n\u7ee7\u7eed\u9000\u706b\uff0c\u75af\u72c2\u8c03\u53c2\u8fc7\u4e86 $4$\uff0c\u8fc7\u4e0d\u4e86 $5$\u3002\n\n\u7136\u540e\u770b\u5230\u4e86**\u9057\u4f20\u7b97\u6cd5**\u3002\n\n\u5927\u81f4\u662f\u6a21\u62df\u751f\u7269\u8fdb\u5316\u7684\u8fc7\u7a0b\u3002\n\n\u53d8\u5f02->\u6dd8\u6c70->\u4ea4\u914d->\u9057\u4f20->\u7e41\u6b96->\u53d8\u5f02\u3002\n\n\u8fd9\u9898\u4ea4\u914d\u7684\u8fc7\u7a0b\u6bd4\u8f83\u9ebb\u70e6\uff0c\u4e0d\u7528\u6a21\u62df\u3002\n\n\u628a\u5f53\u524d\u8f83\u4f18\u89e3\u96c6\u770b\u6210\u79cd\u7fa4\uff0c\u628a\u5176\u4e2d\u4e00\u7ec4\u89e3\u770b\u6210\u4e00\u4e2a\u4e2a\u4f53\uff0c\u628a\u4ea4\u6362\u4e00\u7ec4\u89e3\u4e2d\u7684\u67d0\u51e0\u4e2a\u4f4d\u7f6e\u770b\u6210\u53d8\u5f02\u3002\n\n\u6bcf\u6b21\u9009\u53d6\u79cd\u7fa4\u4e2d\u8f83\u4f18\u7684\u4e2a\u4f53\u4fdd\u7559\uff0c\u8fdb\u884c\u53d8\u5f02\uff0c\u8f83\u4f18\u79c0\u4e2a\u4f53\u53ef\u4ee5\u591a\u7e41\u6b96\u540e\u4ee3\uff0c\u91cd\u590d\u64cd\u4f5c\u3002\n\n\u8bd5\u4e86\u51e0\u904d\u8fc7\u4e86\uff0c\u4ee3\u7801\u91cc\u8fd8\u662f\u6709\u70b9\u9000\u706b\u7684\u5f71\u5b50\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#include<windows.h>\n#define DB double\n#define LL long long\nusing namespace std;\nconst int maxn=1005;\nint n;\nLL a[maxn],p[maxn];\nLL ans;\nint mp[maxn];\nstruct P{\n\tint p[maxn];\n\tLL w;\n\tbool operator <(P b)const{return w>b.w;}\n}s;\nset<P> S1,S2;\nset<P>::iterator it;\nLL calc(){\n\tLL ret=s.p[1]*a[s.p[n]]*a[s.p[1]]*a[s.p[2]]+s.p[n]*a[s.p[n-1]]*a[s.p[n]]*a[s.p[1]];\n\tfor(int i=1;i<n;i++){\n\t\tret+=s.p[i]*a[s.p[i-1]]*a[s.p[i]]*a[s.p[i+1]];\n\t}\n\treturn ret;\n}\nvoid print(){\n\tcerr<<ans<<endl;\n\tfreopen(\"5.txt\",\"w\",stdout);\n\tprintf(\"%lld\\n\",ans);\n\tfor(int i=1;i<=n;i++) printf(\"%d \",mp[i]);\n\tputchar(10);\n}\nconst int B=30;\nconst DB ST=1e12,ET=1e-5,DT=0.99;\nvoid SA(){\n\tfor(DB T=ST;T>ET;T*=DT){\n\t\tint j=1;\n\t\tS2.insert(*S1.begin());\n\t\tfor(it=S1.begin();it!=S1.end();++it,j++){\n\t\t\tint t=j<=3?10:(j<=10?5:2);\n\t\t\tfor(int i=1;i<=n;i++) s.p[i]=(*it).p[i];\n\t\t\tfor(int i=1;i<=t;i++){\n\t\t\t\tint x=rand()%n+1,y=rand()%n+1;\n\t\t\t\twhile(x==y) x=rand()%n+1,y=rand()%n+1;\n\t\t\t\tswap(s.p[x],s.p[y]);\n\t\t\t\tLL now=calc(),del=now-ans;\n\t\t\t\tif(del>0){\n\t\t\t\t\tans=now;\n\t\t\t\t\tfor(int i=1;i<=n;i++) mp[i]=s.p[i];\n\t\t\t\t\tprint();\n\t\t\t\t}\n\t\t\t\ts.w=now;\n\t\t\t\tS2.insert(s);\n\t\t\t\tif(del<0&&exp((DB)del/T)<=(DB)rand()/RAND_MAX) swap(s.p[x],s.p[y]);\n\t\t\t}\n\t\t\twhile(S2.size()>B) S2.erase(--S2.end());\n\t\t}\n\t\tS1.clear();\n\t\tfor(it=S2.begin();it!=S2.end();++it) S1.insert(*it);\n\t}\n}\nint main(){\n\tsrand(GetTickCount());\n\tfreopen(\"5.in\",\"r\",stdin);\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%lld\",&a[i]),mp[i]=i;\n\trandom_shuffle(mp+1,mp+1+n);\n\twhile(1){\n\t\tfor(int i=1;i<=n;i++) s.p[i]=mp[i];\n\t\tLL now=calc();\n\t\ts.w=now;\n\t\tif(now>ans){\n\t\t\tans=now;\n\t\t\tprint();\n\t\t}\n\t\tS1.clear();\n\t\tS1.insert(s);\n\t\tSA();\n\t}\n\treturn 0;\n}\n```\n\n### #6~#10\n\n\u7ee7\u7eed\u9057\u4f20\u3002\n\n$2000\\ years\\ later$\uff0c$6$ \u548c $7$ \u8fc7\u4e86\u3002\n\n\u540e\u9762\u51e0\u4e2a\u70b9\u975e\u5e38\u56f0\u96be\uff0c\u6211\u4e0d\u786e\u5b9a\u80fd\u5426\u5728\u6709\u751f\u4e4b\u5e74\u8dd1\u51fa\u6765\u3002\n\n**\u4e3a\u4ec0\u4e48\u968f\u673a\u4ea4\u6362\u7684\u7b97\u6cd5\u51fa\u89e3\u901f\u5ea6\u5f88\u6162\uff1f**\n\n\u62dc\u8bfb\u4e86@76G!ihcm\u7684\u9898\u89e3\u4e4b\u540e\uff0c\u6211\u604d\u7136\u5927\u609f\u3002\n\n\u56e0\u4e3a\u505a\u4e86\u5f88\u591a\u65e0\u7528\u4ea4\u6362\u3002\n\n\u82e5\u5f53\u524d\u5f97\u5230\u4e86\u4e00\u4e2a\u8f83\u52a3\u7684\u89e3\uff0c\u5b83\u65e2\u6709\u53ef\u80fd\u4ea7\u751f\u66f4\u4f18\u7684\u89e3\uff0c\u53c8\u6709\u53ef\u80fd\u9000\u56de\u66f4\u52a3\u7684\u89e3\u3002\n\n\u6211\u4eec\u4e0d\u77e5\u9053\u8fd9\u4e2a\u8f83\u52a3\u89e3\u4f1a\u5c06\u7ed3\u679c\u5bfc\u5411\u4f55\u65b9\uff0c\u6216\u4e3a\u5176\u82b1\u8d39\u8d44\u6e90\u8bd5\u9519\uff0c\u6216\u5ffd\u89c6\u4e00\u6761\u6377\u5f84\u3002\n\n\u6240\u4ee5\u8981\u5c3d\u91cf\u907f\u514d\u51fa\u73b0\u6b64\u7c7b\u72b6\u51b5\u3002\n\n\u5bf9\u4e8e\u5f53\u524d\u72b6\u6001\uff0c\u6309**\u987a\u5e8f**\u679a\u4e3e\u4e24\u4e2a\u4f4d\u7f6e\uff0c\u80fd\u66f4\u4f18\u5c31\u4ea4\u6362\uff0c\u8fd9\u6837\u5c31\u786e\u4fdd\u4e86\u6bcf\u4e00\u6b21\u4ea4\u6362\u90fd\u80fd\u4ea7\u751f\u8f83\u5927\u7684\u6536\u76ca\u3002\n\n**\u9677\u5165\u50f5\u5c40\u600e\u4e48\u529e\uff1f**\n\n\u65e0\u6cd5\u64cd\u4f5c\u65f6\uff0c\u968f\u673a\u9009 $20$ \u7ec4\u70b9\u4ea4\u6362\uff0c\u629b\u7816\u5f15\u7389\u3002\n\n\u4ee3\u7801\u53c2\u8003\u4e86@76G!ihcm\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#include<windows.h>\n#pragma GCC optimize(2)\n#define LL long long\nusing namespace std;\nconst int maxn=1005;\nint n;\nLL a[maxn],p[maxn];\nLL calc(){\n\tLL ret=p[1]*a[p[n]]*a[p[1]]*a[p[2]]+p[n]*a[p[n-1]]*a[p[n]]*a[p[1]];\n\tfor(int i=2;i<n;i++){\n\t\tret+=p[i]*a[p[i-1]]*a[p[i]]*a[p[i+1]];\n\t}\n\treturn ret;\n}\nLL del(int x){\n\tLL ret=0;\n\tint l=x-1,r=x+1;\n\tret+=p[x]*a[p[l]]*a[p[x]]*a[p[r]];\n\tret+=p[l]*a[p[l-1]]*a[p[l]]*a[p[x]];\n\tret+=p[r]*a[p[x]]*a[p[r]]*a[p[r+1]];\n\treturn ret;\n}\nint id[maxn];\nLL ans,now;\nint P[maxn];\nvoid cpy(){\n\tcerr<<ans<<endl;\n\tfor(int i=1;i<=n;i++) P[i]=p[i];\n\tif(ans>145302138855600ll){\n\t\tfreopen(\"10.txt\",\"w\",stdout);\n\t\tfor(int k=1;k<=n;k++) printf(\"%d \",P[k]);\n\t\texit(0);\n\t}\n}\nvoid work(){\n\tbool flg;\n\tdo{\n\t\tflg=0;\n\t\tfor(int i=1;i<n;i++)\n\t\tfor(int j=i+1;j<=n;j++){\n\t\t\tint x=id[i],y=id[j];\n\t\t\tLL nxt;\n\t\t\tif(abs(x-y)<=3||abs(x-y)>=n-2){\n\t\t\t\tswap(p[x],p[y]);\n\t\t\t\tnxt=calc();\n\t\t\t}else{\n\t\t\t\tnxt=now-del(x)-del(y);\n\t\t\t\tswap(p[x],p[y]);\n\t\t\t\tnxt+=del(x)+del(y);\n\t\t\t}\n\t\t\tif(nxt>ans){\n\t\t\t\tans=now=nxt;\n\t\t\t\tcpy();\n\t\t\t\tflg=1;\n\t\t\t}else if(nxt>now) now=nxt,flg=1;\n\t\t\telse swap(p[x],p[y]);\n\t\t}\n\t}while(flg);\n}\nint main(){\n\tfreopen(\"10.in\",\"r\",stdin);\n\tsrand(GetTickCount());\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%lld\",&a[i]),p[i]=id[i]=i;\n\trandom_shuffle(p+1,p+1+n);\n\twhile(1){\n\t\tfor(int i=1;i<=20;i++){\n\t\t\tint x=rand()%n+1,y=rand()%n+1;\n\t\t\tswap(p[x],p[y]);\n\t\t}\n\t\tnow=calc();\n\t\tif(now>ans){\n\t\t\tans=now;\n\t\t\tcpy();\n\t\t}\n\t\trandom_shuffle(id+1,id+1+n);\n\t\twork();\n\t}\n\treturn 0;\n}\n```\n## \u3010\u7b97\u6cd5\u3011\n\n\u968f\u673a\u5316\u8d2a\u5fc3/\u9057\u4f20/\u6a21\u62df\u9000\u706b\n\n## \u3010\u6ce8\u3011\n\n\u4ee5\u4e0a\u4ee3\u7801\u7684\u53c2\u6570\u5747\u4e3a\u4f5c\u8005\u590d\u76d8\u505a\u9898\u8fc7\u7a0b\u65f6\u56de\u5fc6\u7684\uff0c\u4e0d\u662f\u6700\u4f18\u53c2\u6570\u3002",
        "postTime": 1636678700,
        "uid": 116251,
        "name": "\u7834\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7812 \u3010[JRKSJ R2] Dark Forest\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002](https://www.cnblogs.com/DRPLANT/p/dark_forest.html)\n\n\u8d85\u7ea7\u5927\u4e71\u641e\u9898\u3002~~\u8003\u5bdf\u4e86\u9009\u624b\u7684\u7535\u8111\u914d\u7f6e\u3002~~\n\n\u9996\u5148\u6784\u9020\u4e00\u4e0b\u628a #3 \u8fc7\u6389\u3002\u6784\u9020\u65b9\u6cd5\u662f\u6bcf\u6b21\u628a $x$ \u63d2\u5230 $x-2$ \u4e0e $x-1$ \u4e24\u8005\u4e4b\u95f4\u3002\u521d\u59cb\u5e8f\u5217\u662f $\\{1,2,3\\}$\u3002\u53ef\u4ee5\u8bc1\u660e $x-2$ \u4e0e $x-1$ \u4e00\u5b9a\u662f\u9760\u5728\u4e00\u8d77\u7684\u3002\n\n\u7136\u540e\u6309\u7167\u51fa\u9898\u4eba\u9898\u89e3\u5b9e\u73b0\u4e86\u4e00\u4e0b\u3002\u56e0\u4e3a\u6ca1\u5199\u8fc7\u9057\u4f20\u4e5f\u6ca1\u770b\u8fc7\u4e00\u4e2a\u5b57\u9057\u4f20\u7684\u4ee3\u7801\u6240\u4ee5\u4ee5\u4e0b\u5185\u5bb9\u5168\u662f\u57fa\u4e8e\u51fa\u9898\u4eba\u9898\u89e3\u53e3\u80e1\u7684\u3002\n\n\u5b9a\u4e49\u201c\u57fa\u56e0\u201d\u4e3a\u4e00\u7ec4\u6392\u5217\uff0c\u201c\u53d8\u5f02\u201d\u4e3a\u4ea4\u6362\u4e00\u7ec4\u6392\u5217\u4e2d\u7684\u4e24\u4e2a\u5143\u7d20\u3002\u8bbe\u4e24\u4e2a\u5e38\u6570 $limit$ \u548c $best$\uff08$best \\approx 0.01 \\times limit$\uff09\u3002\u9996\u5148\u968f $limit$ \u4e2a\u57fa\u56e0\uff0c\u628a\u5b83\u4eec\u6309\u7167\u6743\u503c\u964d\u5e8f\u6392\u5e8f\u3002\u6bcf\u6b21\u8ba9\u6240\u6709\u57fa\u56e0\u53d8\u5f02 10 \u6b21\u751f\u6210 10 \u4e2a\u513f\u5b50\u5e76\u628a\u6240\u6709\u5b50\u4ee3\u6392\u5e8f\u3002\u540c\u65f6\u91c7\u53d6\u6240\u8c13\u7684\u201c\u4fdd\u7559\u7cbe\u82f1\u201d\u7b56\u7565\uff0c\u628a\u4eb2\u4ee3\u57fa\u56e0\u4e2d\u6743\u503c\u6700\u5927\u7684 $best$ \u4e2a\u5f52\u5e76\u8fdb\u53bb\u3002\u79cd\u7fa4\u4e2d\u6392\u540d\u8d85\u8fc7 $limit$ \u7684\u90e8\u5206\u6254\u6389\u3002\n\n\u7136\u800c\u8fd9\u4e2a\u6240\u8c13\u7684\u201c\u4fdd\u7559\u7cbe\u82f1\u201d\u7b56\u7565\u5176\u5b9e\u5e76\u4e0d\u662f\u5f88\u597d\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6240\u8c13\u7684\u7cbe\u82f1\u53ef\u80fd\u4e5f\u6ca1\u90a3\u4e48\u4f18\u79c0\u3002\u6240\u4ee5\u5728\u628a\u5b83\u4eec\u5f52\u5e76\u8fdb\u53bb\u4e4b\u524d\u5148\u53d8\u5f02\u4e00\u6b21\u7136\u540e\u505a\u4e00\u4e0b\u722c\u5c71\u3002\u8fd9\u6837\u903c\u8fd1\u7b54\u6848\u7684\u901f\u5ea6\u53ef\u80fd\u4f1a\u5feb\u4e00\u70b9\u3002\n\n\u5f88\u5feb\u5730\u628a #1~5 \u8dd1\u51fa\u6765\u4e86\u3002#6 \u8dd1\u4e86\u4e00\u4e2a\u4e2d\u5348\uff0c#7 \u8dd1\u4e86\u4e00\u4e2a\u65e9\u4e0a\u3002\u4e4b\u540e\u7684\u600e\u4e48\u4e5f\u8dd1\u4e0d\u51fa\u6765\u4e86\u3002\n\n\u7136\u540e\u89c2\u5bdf\u9898\u89e3\u53d1\u73b0\u4e86\u4e00\u4e2a\u8dd1\u5f97\u5f88\u5feb\u7684\u66b4\u529b\u3002\u5c31\u662f\u76f4\u63a5\u679a\u4e3e\u4e24\u4e2a\u4f4d\u7f6e\uff0c\u82e5\u4ea4\u6362\u5b83\u4eec\u80fd\u66f4\u4f18\u5219\u4ea4\u6362\u3002\u5982\u679c\u65e0\u8bba\u5982\u4f55\u4ea4\u6362\u90fd\u65e0\u6cd5\u66f4\u4f18\u5c31\u53d8\u5f02 20 \u6b21\u518d\u505a\u3002\u6211\u7528\u8fd9\u4e2a\u7b56\u7565\u4ee3\u66ff\u4e86\u90a3\u4e2a\u795e\u5fc5\u7684\u722c\u5c71\uff08\u4e4b\u6240\u4ee5\u5982\u6b64\u795e\u5fc5\u5f88\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u722c\u5c71\u5199\u7684\u662f\u5047\u7684\uff09\u3002\u6b64\u5916\u518d\u589e\u52a0\u4e86\u8ba9\u90a3 $best$ \u4e2a\u7cbe\u82f1\u4ea7\u751f\u66f4\u591a\u540e\u4ee3\uff08100 \u4e2a\uff09\u7684\u7b56\u7565\u3002\u8fd9\u4e2a\u6539\u826f\u540e\u7684\u7b97\u6cd5\u8dd1\u5f97\u5f88\u5feb\u3002\u5b66\u6821\u673a\u623f\u7684\u8001\u5e74\u673a\u90fd\u80fd\u5728 2min \u5de6\u53f3\u8dd1\u5b8c\uff0c\u4f3c\u4e4e\u6bd4\u90a3\u4e2a\u6734\u7d20\u7684\u66b4\u529b\u7a0d\u5fae\u5feb\u4e00\u70b9\uff1f\uff08\u4e0d\u786e\u5b9a\u3002\uff09\u603b\u4e4b\u6bd4\u8f83\u731b\u3002\n\n\u53ef\u80fd\u6709\u70b9\u62bd\u8c61\u3002\u6240\u4ee5\u628a\u6838\u5fc3\u4ee3\u7801\u653e\u4e0a\u6765\u3002\n\n```cpp\nmt19937 rnd(random_device{}());\ninline int random(int l, int r) {\n  return rnd() % (r - l + 1) + l;\n}\n\nclass Gene {\n private:\n  int p[maxn];\n  i64 val = 0;\n  inline void calc() {\n    val = 0, p[0] = p[n], p[n + 1] = p[1];\n    for (int i = 1; i <= n; i++)\n      val += p[i] * w[p[i - 1]] * w[p[i]] * w[p[i + 1]];\n    p[0] = p[n + 1] = 0;\n  }\n  inline void erase(int x) {\n    val -= p[x] * w[p[x - 1]] * w[p[x]] * w[p[x + 1]];\n    val -= p[x - 1] * w[p[x - 2]] * w[p[x - 1]] * w[p[x]];\n    val -= p[x + 1] * w[p[x]] * w[p[x + 1]] * w[p[x + 2]];\n  }\n  inline void insert(int x) {\n    val += p[x] * w[p[x - 1]] * w[p[x]] * w[p[x + 1]];\n    val += p[x - 1] * w[p[x - 2]] * w[p[x - 1]] * w[p[x]];\n    val += p[x + 1] * w[p[x]] * w[p[x + 1]] * w[p[x + 2]];\n  }\n\n public:\n  inline bool operator<(const Gene &q) const {\n    return val > q.val;\n  }\n  inline i64 Val() const {\n    return val;\n  }\n  inline void Output() const {\n    for (int i = 1; i <= n; i++)\n      out(p[i]), space;\n    fflush(stdout);\n  }\n  inline friend Gene Generate();\n  inline friend void Sort(Gene *const, Gene *const);\n  inline friend void educate();\n  inline Gene Variate() const {\n    Gene res = *this;\n    static int a, b;\n    a = random(1, n), b = random(1, n), swap(res.p[a], res.p[b]);\n    res.calc();\n    return res;\n  }\n  inline void Educate() {\n    Gene _tmp = *this;\n    int *p = _tmp.p, sign = 1;\n    while (sign) {\n      sign = 0;\n      for (int x = 1; x <= n; x++)\n        for (int y = x + 1; y <= n; y++) {\n          i64 rec = _tmp.val;\n          if (x <= 3 || x >= n - 2 || y <= 3 || y >= n - 2 || abs(x - y) <= 4)\n            swap(p[x], p[y]), _tmp.calc();\n          else\n            _tmp.erase(x), _tmp.erase(y), swap(p[x], p[y]), _tmp.insert(x), _tmp.insert(y);\n          if (_tmp.val > val)\n            *this = _tmp;\n          (_tmp.val > rec) ? (sign = 1) : (swap(p[x], p[y]), _tmp.val = rec);\n        }\n    }\n  }\n} pop[limit + 10], son[limit * 10 + best * 100 + 10], *top, tmp[limit << 1];\n\ninline Gene Generate() {\n  Gene res;\n  for (int i = 1; i <= n; i++)\n    res.p[i] = i;\n  shuffle(res.p + 1, res.p + n + 1, rnd);\n  res.calc();\n  return res;\n}\ninline void Sort(Gene *const a, Gene *const end) {\n  // \u8fd9\u91cc\u7701\u7565\u4e00\u4e2a\u6781\u5176\u5197\u957f\u7684\u57fa\u6570\u6392\u5e8f\u3002\n}\n\ninline void init() {\n  for (int i = 0; i < limit; i++)\n    pop[i] = Generate();\n  Sort(pop, pop + limit);\n}\ninline void variate() {\n  top = son;\n  for (int i = 0; i < limit; i++) {\n    int T = i < best ? 100 : 10;\n    while (T--)\n      *top++ = pop[i].Variate();\n  }\n  Sort(son, top);\n}\ninline void educate() {\n  for (int i = 0; i < best; i++) {\n    Gene _tmp = pop[i];\n    int T     = 10;\n    while (T--) {\n      _tmp.Educate();\n      if (_tmp.val > pop[i].val)\n        pop[i] = _tmp;\n      for (int i = 1, a, b; i <= 20; i++)\n        a = random(1, n), b = random(1, n), swap(_tmp.p[a], _tmp.p[b]);\n      _tmp.calc();\n    }\n  }\n  Sort(pop, pop + best);\n}\ninline void Merge() {\n  merge(pop, pop + best, son, son + limit, tmp);\n  memcpy(pop, tmp, sizeof(Gene) * limit);\n}\n\nsigned main() {\n  // \u524d\u9762\u7701\u7565\u4e00\u5806\u6587\u4ef6\u8f93\u5165\u8f93\u51fa\u548c\u8bfb\u5165\u5565\u7684\u3002\n  init();\n  while (1) {\n    variate(), educate(), Merge();\n    cerr << pop[0].Val() << endl;\n    if (pop[0].Val() >= stop) {\n      pop[0].Output();\n      break;\n    }\n  }\n}\n```\n",
        "postTime": 1677122836,
        "uid": 111789,
        "name": "DRPLANT",
        "ccfLevel": 5,
        "title": "Dark Frog Forest Solution"
    },
    {
        "content": "\u8fd9\u4e0d\u80fd\u7b97\u662f\u9898\u89e3\uff0c\u56e0\u4e3a\u6839\u672c\u6ca1\u8fc7\uff0c\u4f46\u5e94\u8be5\u662f\u6240\u6709**\u76f4\u63a5\u63d0\u4ea4**\uff08\u975e\u63d0\u4ea4\u7b54\u6848\uff09\u7684\u6a21\u62df\u9000\u706b\u4ee3\u7801\u91cc\u6700\u4f18\u7684\u4e86\u3002\n\n\u4e3b\u8981\u601d\u8def\u5c31\u662f\u968f\u673a\u4ea4\u6362\u4e24\u4e2a\u6570\uff0c\u8ba1\u7b97\u6270\u52a8\u503c\uff0c\u5269\u4e0b\u7684\u5c31\u5f88\u677f\u4e86\u3002\n\n1. $2pts$ \u4e00\u5f00\u59cb\u9000\u706b\u5199\u6302\u4e86\uff0c\u53ea\u62ff\u5230\u4e86 $2pts$\n\n2. $9pts$ \u53ea\u62ff\u5230\u4e86\u7b2c\u4e09\u70b9\u7684 $9pts$\uff0c\u53d1\u73b0\u662f\u63a5\u53d7\u9519\u89e3\u7684\u6761\u4ef6\u5199\u6302\u4e86\uff0c\u4f46\u662f\u4ece\u6b64\u4ee5\u540e\u7b2c\u4e09\u70b9\u5c31\u6ca1 $AC$ \u8fc7\uff0c\u5168\u662f $9pts$\u3002\n\n3. $44pts$ \u6761\u4ef6\u6539\u597d\u4e86\uff0c\u6d45\u6d45\u8c03\u4e86\u4e2a\u53c2\uff0c\u4e00\u53d1 $44pts$ \u6709\u70b9\u6fc0\u52a8\uff0c\u8d85\u8fc7\u4e86\u5927\u90e8\u5206\u9000\u706b\u3002\n\n4. $83pts$ \u5361\u4e86\u5f88\u957f\u65f6\u95f4\uff0c$AC\\ 1,2,4,5,6$ \u51e0\u4e2a\u70b9\uff0c\u8fd9\u51e0\u4e2a\u70b9\u540e\u9762\u57fa\u672c\u662f\u7a33\u7684\uff0c\u7b2c\u4e00\u4e2a\u70b9\u5bb9\u6613 TLE\u3002\n\n5. $90pts$ \u8fd9\u91cc\u57fa\u672c\u5c31\u662f\u74f6\u9888\u4e86\uff0c\u81ea\u5df1\u7684\u9000\u706b\u8ba1\u7b97\u8fc7\u6162\u4e86\uff0c\u672c\u60f3\u590d\u5236 $\\rm c\\red{henxia25}$ \u5927\u4f6c\u7684\u9898\u89e3\uff0c\u4f46\u662f\u53d1\u73b0\u8fd9\u4efd\u4ee3\u7801\u8dd1\u51fa\u6765\u53ea\u6709 $77pts$\uff0c\u679c\u65ad\u653e\u5f03\uff0c\u62ff\u4e86\u4e00\u4e2a `calc()` \u8d70\u4eba\u3002\n\n\u63a5\u4e0b\u6765\u662f\u75af\u72c2\u7684\u8c03\u53c2\u8fc7\u7a0b\uff0c\u5361\u4e86 $9$ \u9875\u5de6\u53f3\uff0c\u9014\u4e2d\u53d1\u73b0\u4e86\u4e0a\u8ff0\u90a3\u4f4d\u5927\u4f6c\u7684\u8ba1\u7b97\u65b9\u5f0f\uff0c\u89c9\u5f97\u53ef\u4ee5\uff0c\u4e8e\u662f\u4e4e\u501f\u9274\u4e86\u3002\n\n6. $93pts$ \u8fd9\u91cc\u7684\u53c2\u6570\u662f $T_0=10^{18},T_k=10^{-18},\\Delta = 0.9999957781$\n\n\u53c8\u5361\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u53d1\u73b0\u74f6\u9888\u5728\u4e8e\u521d\u6e29\uff0c\u679c\u65ad\u628a $T_0$ \u6539\u6210 $10^{15}$\uff0c\u8fd9\u65f6\u5019 $\\Delta$ \u7ed9\u7684\u662f $0.99999646$ \u4e00\u53d1\u51fa\u4e86 $95pts$\uff01\n\n\u968f\u540e\u5361\u4e86\u5f88\u957f\u65f6\u95f4\uff0c\u6ca1\u80fd\u7a81\u7834 $95pts$\uff0c\u4f46\u662f\u5728\u5361\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u53d6\u6bcf\u4e2a\u70b9\u62ff\u5230\u7684\u6700\u5927\u5206\u6570\uff0c\u8fd9\u4efd\u4ee3\u7801\u7684\u4e0a\u9650\u662f $97pts$\u3002\n\n\u53c2\u6570\u7559\u4e0b\uff0c\u8fd9\u4e24\u5957\u53c2\u6570\u90fd\u8dd1\u8fc7 $95pts$ \u7684\u6210\u7ee9\uff1a\n\n1. $T_0=10^{15},T_l={10^{-15}},\\Delta=0.99999646$\n2. $T_0=10^{14},T_l={10^{-14}},\\Delta=0.99999666$\n\n```cpp\n#include <bits/stdc++.h>\n#include <bits/extc++.h>\n#define int long long\nusing namespace __gnu_pbds;\nusing namespace __gnu_cxx;\nusing namespace std;\nconst double k = 0.99999646, eps = 1e-15;\nint a[1001], p[1001], n, ans;\ndouble T;\nmt19937 rng(random_device{}());\nint rndint(int l, int r) {\n\treturn uniform_int_distribution<>(l, r)(rng);\n}\ndouble rnddb(int l, int r) {\n\treturn uniform_real_distribution<>(l, r)(rng);\n}\nvoid calc(int x, int v) {\n\tint A = p[x > 2 ? x - 2 : x + n - 2], B = p[x > 1 ? x - 1 : n], &C = p[x], D = p[x < n ? x + 1 : 1], E = p[x < n - 1 ? x + 2 : x + 2 - n];\n\tans -= (a[A] * a[B] * B + a[B] * C * a[D] + D * a[D] * a[E]) * a[C], C = v;\n\tans += (a[A] * a[B] * B + a[B] * C * a[D] + D * a[D] * a[E]) * a[C];\n\treturn;\n}\nvoid SA() {\n\tT = 1e15;\n\tfor (int i = 1; i <= n; i++) calc(i, i);\n\twhile (T >= eps) {\n\t\tint x = rndint(1, n), y = rndint(1, n), ta = ans, valx = p[x], valy = p[y];\n\t\tcalc(y, valx), calc(x, valy);\n\t\tif (ans > ta || rnddb(0, 1) <= exp((ans - ta) / T));\n\t\telse ans = ta, swap(p[x], p[y]);\n\t\tT *= k;\n\t}\n\treturn;\n}\nvoid prt() {\n\tfor (int i = 1; i <= n; i++) cout << p[i] << \" \";\n\treturn void(cout << '\\n');\n}\nsigned main() {\n\t/*freopen(\"1.in\", \"r\", stdin);\n\tfreopen(\"DarkForest1.txt\", \"w\", stdout);*/\n\tios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)cin >> a[i];\n\tSA(), prt();\n\treturn 0;\n}\n```\n\n\u5728\u6b64\u6df1\u819c $\\rm c\\red{henxia25}$ \u5927\u4f6c\uff0c\u8981\u4e0d\u7136\u6211\u5c31\u5361\u5728 $90pts$ \u4e86\u3002\n\n\u8fd9\u4efd\u4ee3\u7801\u8c03\u53c2\u540e\u63d0\u4ea4\u7b54\u6848\u662f\u80af\u5b9a\u80fd\u8fc7\u7684\uff0c\u8fd9\u79cd\u88ab\u51fa\u9898\u4eba\u70b9\u540d\u53c9\u6389\u7684\u505a\u6cd5\u80fd\u62ff\u5230\u8fd9\u4e48\u9ad8\u7684\u5206\u6211\u77e5\u8db3\u4e86\u3002\n\n~~\u9057\u4f20\u4e0d\u95ea\uff0c\u8e29\u7206\u9057\u4f20\uff0c\u9000\u706b\u597d\u95ea\uff0c\u62dc\u8c22\u9000\u706b\uff01~~",
        "postTime": 1683191140,
        "uid": 713955,
        "name": "__er",
        "ccfLevel": 0,
        "title": "P7812 [JRKSJ R2] Dark Forest \u9898\u89e3"
    }
]