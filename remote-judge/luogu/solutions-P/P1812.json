[
    {
        "content": "\u8fd9\u79cd\u9898\u7528Python\u505a\u662f\u6700\u7b80\u5355\u7684\uff0c\u56e0\u4e3a\u5b83\u6709\u795e\u5668\uff1a`eval()`\u3002\u76f4\u63a5\u5b9a\u4e49\u4e00\u4e2a\u7c7b\uff0c\u91cd\u8f7d\u4e00\u4e0b\u8fd0\u7b97\u7b26\u5373\u53ef\u3002\u552f\u4e00\u9700\u8981\u6ce8\u610f\u7684\u662f\u5904\u7406\u9664\u4ee50\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u91c7\u53d6\u5f02\u5e38\u5904\u7406\u7684\u65b9\u6cd5\u3002\n\n```python\nimport re\n\nclass Range():\n    def __init__(self, l, r):\n        self.l, self.r = min(l, r), max(l, r)\n\n    def __neg__(self):\n        return Range(-self.l, -self.r)\n\n    def __add__(self, other):\n        return Range(self.l + other.l, self.r + other.r)\n\n    def __sub__(self, other):\n        return self + (-other)\n\n    def __mul__(self, other):\n        tpl = self.l * other.l, self.r * other.r, self.l * other.r, self.r * other.l\n        return Range(min(tpl), max(tpl))\n\n    def __truediv__(self, other):\n        if other.l <= 0 and other.r >= 0:\n            raise ZeroDivisionError # \u9664\u6570\u533a\u95f4\u5305\u542b0\u7684\u60c5\u5f62\n        tpl = self.l / other.l, self.r / other.r, self.l / other.r, self.r / other.l\n        return Range(min(tpl), max(tpl))\n\n    def __str__(self):\n        return f\"[{self.l:.3f},{self.r:.3f}]\" # \u7528f-string\u53ef\u4ee5\u4fbf\u6377\u5730\u5b9e\u73b0\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\n\nwhile True:\n    try:\n        expr = re.sub(r\"\\[([^\\]]+)\\]\", r\"Range(\\1)\", input()) # \u6b63\u5219\u8868\u8fbe\u5f0f\u5904\u7406\u4e00\u4e0b\u6e90\u6587\u672c\uff0c\u4f8b\u5982[1,3]->Range(1,3)\n        try:\n            print(eval(expr))\n        except ZeroDivisionError:\n            print(\"Division by zero\")\n    except EOFError:\n        break\n\n```",
        "postTime": 1584941924,
        "uid": 70304,
        "name": "Pecco",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1812 \u3010\u533a\u95f4\u8fd0\u7b97\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5206\u6790\n\n\u672c\u9898\u662f\u4e00\u9053\u5927\u6a21\u62df\uff0c\u7801\u91cf\u8f83\u5927\uff083KB\uff09\u4f46\u601d\u7ef4\u96be\u5ea6\u4f4e\uff0c\u76f4\u63a5\u7528\u6808\u7ef4\u62a4\u8868\u8fbe\u5f0f\u7684\u8fd0\u7b97\u5373\u53ef\u3002\n\n### \u6574\u4f53\u8bfb\u5165\n\n\u4e3a\u4ec0\u4e48\u8fde\u8bfb\u5165\u90fd\u8981\u5355\u72ec\u62ce\u51fa\u6765\u8bb2\u5462\uff1f\u56e0\u4e3a~~\u6211\u592a\u83dc\u4e86~~\u8fd9\u9898\u5728\u8bfb\u5165\u65f6\u4f1a\u6709\u4e00\u4e9b\u591a\u4f59\u7684\u7a7a\u683c\uff0c\u8981\u5c06\u5176\u53bb\u6389\uff1b\u8bfb\u5165\u4e5f\u6ca1\u6709\u56fa\u5b9a\u7684\u884c\u6570\uff0c\u9700\u8981\u989d\u5916\u7684\u5904\u7406\u3002\n\n\u5728\u8fd9\u91cc\u6211\u9009\u7528\u4e86 `getchar()` \u6765\u8bfb\u5165\u5b57\u7b26\uff0c\u8bfb\u5165\u666e\u901a\u5b57\u7b26\u65f6\u5b58\u5165\u5b57\u7b26\u4e32\uff0c\u8bfb\u5165\u7a7a\u683c\u65f6\u76f4\u63a5\u5ffd\u7565\uff0c\u8bfb\u5165\u6362\u884c\u5219\u5904\u7406\u5f53\u524d\u5b57\u7b26\u4e32\u5e76\u5c06\u5b57\u7b26\u4e32\u6e05\u96f6\uff0c\u82e5\u65e0\u8f93\u5165\u5219\u7ed3\u675f\u7a0b\u5e8f\u3002\n\n\u5f53\u7136\u8fd9\u4ec5\u4ec5\u53ea\u662f\u4f17\u591a\u8bfb\u5165\u65b9\u6cd5\u4e2d\u7684\u4e00\u79cd\uff0c\u4f60\u4e5f\u53ef\u4ee5\u9009\u7528\u5176\u5b83\u7684\u65b9\u6cd5\u3002\n\n```cpp\nwhile(ch=getchar())\n\tif(ch==-1)break;//\u8bfb\u5165\u7ed3\u675f\n\telse if(ch=='\\n'){if(s!=\"\")work();s=\"\";}//\u51fa\u73b0\u6362\u884c\u7b26\u65f6\u5904\u7406\u5f53\u524d\u5b57\u7b26\u4e32\n\telse if(ch!=' ')s+=ch;//\u8fc7\u6ee4\u6389\u7a7a\u683c\n```\n\n### \u51fd\u6570\u5185\u90e8\u7684\u533a\u95f4\u8bfb\u5165\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\u7684\u8bfb\u5165\uff0c\u6211\u4eec\u91c7\u7528\u4e0e\u5feb\u8bfb\u7c7b\u4f3c\u7684\u65b9\u5f0f\u8bfb\u5165\u4e24\u4e2a\u6570\u5e76\u5165\u6808\u3002\n\n\u6ce8\u610f\u5230\u8bfb\u5165\u7684\u6570\u53ef\u80fd\u662f\u8d1f\u6570\u6216\u5c0f\u6570\uff0c\u8981\u591a\u52a0\u51e0\u53e5\u5224\u65ad\u3002\n\n\u5feb\u8bfb\u5e94\u8be5\u6ca1\u4eba\u4e0d\u4f1a\u5427\u3002\u3002\u3002\n\n```cpp\ndouble x=0.0,y=0.0,z,t=1.0;\nif(s[++i]=='-')t=-1.0,++i;//\u8d1f\u6570\nfor(;s[i]>='0'&&s[i]<='9';i++)x=x*10+(s[i]-48);//\u6574\u6570\u90e8\u5206\nif(s[i]=='.')for(z=0.1,i++;s[i]>='0'&&s[i]<='9';i++,z/=10)x=x+z*(s[i]-48);//\u5c0f\u6570\u90e8\u5206\uff08\u53ea\u5728\u6709\u5c0f\u6570\u70b9\u65f6\u8bfb\u5165\uff09\nx*=t;t=1.0;\nif(s[++i]=='-')t=-1.0,++i;//\u7b2c\u4e8c\u4e2a\u6570\uff0c\u540c\u4e0a\nfor(;s[i]>='0'&&s[i]<='9';i++)y=y*10+(s[i]-48);\nif(s[i]=='.')for(z=0.1,i++;s[i]>='0'&&s[i]<='9';i++,z/=10)y=y+z*(s[i]-48);\ny*=t;\nif(s[i]==']')a[top]=(node){min(x,y),max(x,y)};//\u5165\u6808\uff0c\u4e3a\u4e86\u9632\u6b62\u51fa\u73b0\u524d\u5927\u540e\u5c0f\u7684\u60c5\u51b5\uff0c\u4fdd\u9669\u8d77\u89c1\u52a0\u4e0amin\u548cmax\nif(b[top]=='^')a[top-1]=-a[top],--top;//\u5904\u7406\u8bfb\u5165\u533a\u95f4\u7684\u524d\u7f6e\u8d1f\u53f7\n```\n\n### \u533a\u95f4\u5904\u7406\n\n\u8fd9\u91cc\u91c7\u7528\u7ed3\u6784\u4f53\u5f62\u5f0f\u6765\u5904\u7406\u56db\u5219\u8fd0\u7b97\u548c\u5224\u96f6\u3001\u8f93\u51fa\u7684\u64cd\u4f5c\u3002\n\n\u7531\u4e8e\u51cf\u6cd5\u53ef\u4ee5\u7528\u52a0\u76f8\u53cd\u6570\u8868\u793a\uff0c\u6240\u4ee5\u6211\u6ca1\u5199\u51cf\u6cd5\u8fd0\u7b97\u3002\uff08\u7136\u540e\u5c31\u51fa\u73b0\u4e86 `a+-b` \u7684\u795e\u5947\u4ee3\u7801\uff09\n\n```cpp\nstruct node{\n\tdouble x,y;\n\tvoid write(){printf(\"[%.3f,%.3f]\\n\",x,y);}//\u8f93\u51fa\n\tbool zero(){return x*y<=0;}//\u5224\u65ad\u662f\u5426\u5305\u542b\u96f6\n\tnode operator-()const{return (node){-y,-x};}//\u53d6\u76f8\u53cd\u6570\n\tnode operator+(const node &t)const{return (node){x+t.x,y+t.y};}//\u52a0\n\tnode operator*(const node &t)const{return (node){min(min(x*t.x,x*t.y),min(y*t.x,y*t.y)),max(max(x*t.x,x*t.y),max(y*t.x,y*t.y))};}//\u4e58\n\tnode operator/(const node &t)const{return (node){min(min(x/t.x,x/t.y),min(y/t.x,y/t.y)),max(max(x/t.x,x/t.y),max(y/t.x,y/t.y))};}//\u9664\n};\n```\n\n### \u7b26\u53f7\u5165\u6808\u65f6\u7684\u5904\u7406\n\n\u82e5\u662f\u5de6\u62ec\u53f7\uff0c\u76f4\u63a5\u5165\u6808\u5373\u53ef\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u7531\u4e8e\u4e0d\u80fd\u628a\u6240\u6709\u8fd0\u7b97\u90fd\u5806\u5728\u4e00\u5757\u5904\u7406\uff0c\u518d\u52a0\u4e0a\u7d2f\u79ef\u7740\u5bb9\u6613\u7206\u6808\uff0c\u6240\u4ee5\u5728\u52a0\u51cf\u4e58\u9664\u53ca\u53f3\u62ec\u53f7\u8fd9\u4e9b\u7b26\u53f7\u5165\u6808\u65f6\uff0c\u90fd\u9700\u8981\u5c06\u4e4b\u524d\u7684\u4e00\u90e8\u5206\u8fd0\u7b97\u5904\u7406\u6389\u3002\n\n\u663e\u7136\uff0c\u5982\u679c\u662f\u4e58\u9664\u8fd0\u7b97\u7b26\uff0c\u5219\u4e0d\u80fd\u628a\u524d\u9762\u7684\u52a0\u51cf\u6cd5\u5904\u7406\u6389\u3002\n\n```cpp\nwhile(b[top]=='*')a[top-1]=a[top-1]*a[top],--top;\nwhile(b[top]=='/'){\n\tif(a[top].zero()){printf(\"Division by zero\\n\");return;}\n\ta[top-1]=a[top-1]/a[top];--top;\n}\nwhile(b[top]=='+')a[top-1]=a[top-1]+a[top],--top;\nwhile(b[top]=='-')a[top-1]=a[top-1]+-a[top],--top;\nb[++top]=s[i];\n```\n\nP.S.\u56e0\u4e3a\u5904\u7406\u65f6\u6808\u9876\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u76f8\u540c\u7684\u7b26\u53f7\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528 `if` \u4ee3\u66ff `while`\u3002\n\n### \u7ec6\u8282\n\n- \u624b\u5199\u6808\u522b\u51fa\u9505\uff1b\uff08\u6ca1\u9519\uff0c\u5c31\u662f\u6211 QwQ\uff09\n- \u5faa\u73af\u7ed3\u675f\u540e\u8981\u628a\u8fd8\u5728\u6808\u5185\u7684\u672a\u5904\u7406\u64cd\u4f5c\u5904\u7406\u4e86\u518d\u8f93\u51fa\uff1b\n- \u6ce8\u610f\u533a\u5206\u51cf\u53f7\u548c\u8d1f\u53f7\uff1b\n- \u6ce8\u610f\u5224\u65ad\u9664\u6570\u542b\u96f6\u7684\u60c5\u51b5\uff1b\n- \u5f53\u51fa\u73b0\u8d1f\u53f7\u6216\u62ec\u53f7\u65f6\uff0c\u4e0d\u80fd\u628a\u524d\u4e00\u4e2a\u7b26\u53f7\u9876\u6389\uff1b\n- \u4e0d\u8981\u8ba9\u4f60\u7684\u7a0b\u5e8f\u5ffd\u89c6\u62ec\u53f7/\u533a\u95f4\u524d\u7684\u8d1f\u53f7\u3002\n\n## \u53c2\u8003\u4ee3\u7801\uff08\u6846\u67b6\uff09\n\n~~\u53c2\u8003\u4ee3\u7801\u4ec5\u4f9b\u53c2\u8003(bushi)~~\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nll n,top,i;string s;char ch,b[1000005];\nstruct node{...}a[1000005];\nvoid work(){\n\ttop=0;\n\tfor(i=0;i<s.size();i++){\n\t\tif(s[i]=='(')b[++top]='(';\n\t\telse if(s[i]==')'){...}\n\t\telse if(s[i]=='+'){...}\n\t\telse if(s[i]=='-'){\n\t\t\tif(i==0||s[i-1]!=']')b[++top]='^';\n\t\t\telse{...}\n\t\t}\n\t\telse if(s[i]=='*'||s[i]=='/'){...}\n\t\telse if(s[i]=='['){...}\n\t}\n\twhile(b[top]=='*')a[top-1]=a[top-1]*a[top],--top;\n\twhile(b[top]=='/'){\n\t\tif(a[top].zero()){printf(\"Division by zero\\n\");return;}\n\t\ta[top-1]=a[top-1]/a[top];--top;\n\t}\n\twhile(b[top]=='+')a[top-1]=a[top-1]+a[top],--top;\n\twhile(b[top]=='-')a[top-1]=a[top-1]+-a[top],--top;\n\ta[0].write();\n}\nint main(){\n\twhile(ch=getchar())\n\t\tif(ch==-1)break;\n\t\telse if(ch=='\\n'){if(s!=\"\")work();s=\"\";}\n\t\telse if(ch!=' ')s+=ch;\n}\n```\n\n\u51cf\u5c11\u4ee3\u7801\u6284\u88ad\uff0c\u5171\u521b\u7f8e\u597d\u6d1b\u8c37\u3002",
        "postTime": 1660031913,
        "uid": 615290,
        "name": "lvkaiyi0811",
        "ccfLevel": 7,
        "title": "P1812 \u533a\u95f4\u8fd0\u7b97 \u9898\u89e3"
    },
    {
        "content": "\u6211\u662f\u7528\u4e86\u5206\u6cbb\u7684\u601d\u60f3\uff0c\u5148\u5904\u7406\u53d6\u53cd\uff0c \u518d\u5904\u7406\u62ec\u53f7\uff0c \u518d\u5904\u7406\u4e58\u9664\uff0c \u6700\u540e\u52a0\u51cf\n\n\n\u6bcf\u4e2a\u533a\u95f4\uff08\u5305\u62ec\u62ec\u53f7\uff09 \u5bf9\u5e94\u4e00\u4e2a\u5de6\u7aef\u70b9 \u548c \u53f3\u7aef\u70b9 \u7136\u540e \u5c31 \u9012\u5f52 \u52a0 \u6a21\u62df\u5c31\u884c\u4e86\n\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#define max(a, b) ((a)>(b)?(a):(b))\n#define min(a, b) ((a)<(b)?(a):(b))\n#define inf 2147483647\nusing namespace std;\nstruct node{\n    double a, b;\n}d[105][105];\nchar s[105];\nint f[105], re[105];\nint mp[105][105];\nint len, flag;\nnode tmp;\nnode work(char c, node a, node b){\n    node ans3;\n    if(c == '*'){\n        ans3.a = min(a.a*b.a,min(a.a*b.b, min(a.b*b.a, a.b*b.b)));\n        ans3.b = max(a.a*b.a,max(a.a*b.b, max(a.b*b.a, a.b*b.b)));\n    }\n    if(c == '/'){\n        ans3.a = min(a.a/b.a,min(a.a/b.b, min(a.b/b.a, a.b/b.b)));\n        ans3.b = max(a.a/b.a,max(a.a/b.b, max(a.b/b.a, a.b/b.b)));\n    }\n    if(c == '+'){\n        ans3.a = min(a.a+b.a,min(a.a+b.b, min(a.b+b.a, a.b+b.b)));\n        ans3.b = max(a.a+b.a,max(a.a+b.b, max(a.b+b.a, a.b+b.b)));\n    }\n    if(c == '-'){\n        ans3.a = min(a.a-b.a,min(a.a-b.b, min(a.b-b.a, a.b-b.b)));\n        ans3.b = max(a.a-b.a,max(a.a-b.b, max(a.b-b.a, a.b-b.b)));\n    }\n    return ans3;\n}\nnode solve(int l, int r){\n    int i, j, x, y;\n    node ans, ans1, ans2, ans3;\n    if(mp[l][r]) return d[l][r];\n    mp[l][r] = 1;\n    if(l >= r) return tmp;\n    if(s[l] == '-'){\n        ans3 = work(s[l], tmp, solve(l+1, r));\n        d[l][r] = ans3;\n        return d[l][r];\n    }\n    double a = 0, b = 0;\n    for(i = l; i <= r; i++){\n        if(s[i] == ')' && !re[i]){\n            for(j = i-1; j >= l; j--){\n                if(s[j] == '(' && !f[j]){\n                    f[j] = i;\n                    re[i] = j;\n                    ans = solve(j+1, i-1);\n                    if(flag) return tmp;\n                    d[j][i].a = ans.a;\n                    d[j][i].b = ans.b;\n                    break;\n                }\n            }\n        }\n    }\n    for(i = l; i <= r; i++){\n        if(s[i] == '*' || s[i] == '/'){\n            ans1 = solve(re[i-1], i-1);\n            if(s[i+1] != '-') ans2 = solve(i+1, f[i+1]);\n            else f[i+1] = f[i+2], ans2 = solve(i+1, f[i+1]);\n            if(s[i] == '/' && (ans2.a * ans2.b < 0)) flag = 1;\n            f[re[i-1]] = f[i+1];\n            re[f[i+1]] = re[i-1];\n            ans3 = work(s[i], ans1, ans2);\n            d[re[i-1]][f[i+1]] = ans3;\n        }\n    }\n    for(i = l; i <= r; i = f[i]+2){\n        if(s[i] == '-') f[i] = f[i+1];\n        j = f[i];\n        if(i == l) ans3 = work('+', tmp, solve(i, j));\n        else ans3 = work(s[i-1], ans3, solve(i, j));\n    }\n    d[l][r] = ans3;\n    return d[l][r];\n}\nint main(){\n    //freopen(\"interval.in\", \"r\", stdin);\n    //freopen(\"interval.out\", \"w\", stdout);\n    node ans;\n    int i, j, a, b, k, v;\n    double aa, bb, c = 0.1;\n    while(scanf(\"%s\", s+1) != EOF){\n        flag = 0;\n        len = strlen(s+1);\n        memset(f, 0, sizeof(f));\n        memset(re,0,sizeof(re));\n        memset(mp, 0, sizeof(mp));\n        for(i = 1; i <= 100; i++) \n            for(j = 1; j <= 100; j++) \n                d[i][j].a = d[i][j].b = 0;\n        for(i = 1; i <= len; i++){\n            aa = bb = 0;\n            c = 0.1;\n            if(s[i] == '['){\n                j = i+1;\n                v = 1;\n                if(s[j] == '-') v = -1, j++;\n                while(s[j] >= '0' && s[j] <= '9') aa = aa * 10 + s[j] - '0', j++;\n                if(s[j] == '.'){\n                    c = 0.1;\n                    j++;\n                    while(s[j] != ','){\n                         aa += (s[j] - '0') * c;\n                         c *= c;\n                         j++;\n                    }\n                }\n                aa *= v;\n                v = 1;\n                j++;\n                if(s[j] == '-') v = -1, j++;\n                while(s[j] >= '0' && s[j] <= '9') bb = bb * 10 + s[j] - '0', j++;\n                if(s[j] == '.'){\n                    c = 0.1;\n                    j++;\n                    while(s[j] != ']'){\n                         bb += (s[j] - '0') * c;\n                         c *= c;\n                         j++;\n                    }\n                }\n                bb *= v;\n                d[i][j].a = aa;\n                d[i][j].b = bb;\n                f[i] = j;\n                re[j] = i;\n                mp[i][j] = 1;\n            }\n        }\n        ans.a = ans.b = 0;\n        ans = solve(1, len);\n        if(flag) printf(\"Division by zero\\n\");\n        else printf(\"[%.3lf,%.3lf]\\n\", ans.a, ans.b);\n    }\n    return 0;\n}\n```",
        "postTime": 1508134313,
        "uid": 31619,
        "name": "Hzxleo4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1812 \u3010\u533a\u95f4\u8fd0\u7b97_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0802\uff09\u3011"
    }
]