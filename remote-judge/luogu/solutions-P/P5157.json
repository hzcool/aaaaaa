[
    {
        "content": "\n\n### \u7b80\u5316\u9898\u610f\n\n\u7b80\u5316\u4e3a\u7ed9\u5b9a\u4e00\u68f5\u5927\u5c0f\u4e3a$n$\u7684\u6811, \u6709$m$\u4e2a\u9650\u5236\n\n-  \u9650\u5236$(u,v)$ \u8868\u793a$u$\u5fc5\u987b\u5728$v$\u524d\u5220\u9664\n\n\u95ee\u6bcf\u6b21\u5220\u9664\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9, \u53ef\u80fd\u6700\u540e\u7559\u4e0b\u7684\u70b9\u7684\u96c6\u5408\n\n### \u5206\u6790\n\n~~nice problem~~\n\n\u4e0d\u96be\u53d1\u73b0: \u5982\u679c\u6ca1\u6709\u9650\u5236, \u90a3\u4e48\u6240\u6709\u7684\u70b9\u90fd\u53ef\u884c...\n\n\u9996\u5148, \u6211\u4eec\u53ef\u4ee5**\u8d2a\u5fc3**\u5148\u627e\u51fa\u4e00\u4e2a**\u53ef\u884c\u70b9**, \u89e3\u51b3\u65b9\u6cd5\u5982\u4e0b\n\n> \u6bcf\u6b21\u5bfb\u627e\u4e00\u4e2a\u6ca1\u6709\u9650\u5236\u6761\u4ef6\u7684\u53f6\u5b50\u8282\u70b9\u5220\u53bb\n> \u91cd\u590d\u4e0a\u8ff0\u64cd\u4f5c, \u6700\u540e\u7684\u8282\u70b9\u5373\u4e3a\u53ef\u884c\u7b54\u6848\u4e4b\u4e00\n> \u82e5\u4e0d\u6210\u529f, \u5219\u89c6\u4e3a\u65e0\u89e3\n\n**Prove**\n\n-  \u5982\u679c\u672c\u8eab\u6570\u636e\u65e0\u89e3, \u90a3\u4e48\u81ea\u7136\u4e0a\u8ff0\u65b9\u6cd5\u627e\u4e0d\u5230\u4e00\u4e2a\u5408\u6cd5\u7684\u5220\u70b9\u5e8f\u5217\n\n-  \u540c\u6837\u7684, \u5982\u679c\u4e0d\u5b58\u5728\u4e00\u4e2a\u5408\u6cd5\u7684\u5220\u70b9\u5e8f\u5217, \u90a3\u4e48\u5fc5\u5b9a\u610f\u5473\u7740\u5b58\u5728\u4e00\u4e2a\u8fde\u7eed\u7684\u5b50\u6811: \u5b50\u6811\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\u90fd\u88ab\u5176\u4ed6\u70b9\u7684\u7ea6\u675f\u9650\u5236\u7740, \u7c7b\u4f3c\u4e8e\u5f62\u6210\u4e86\u73af. \u90a3\u4e48\u5c31\u4e0d\u4f1a\u5b58\u5728\u4efb\u610f\u4e00\u4e2a\u5e8f\u5217\u53ef\u4ee5\u6253\u7834\u8fd9\u79cd\u5c40\u9762\u4e86.\n\n\u4e8e\u662f\u8bc1\u660e\u4e86\u8be5\u65b9\u6cd5\u662f\u53ef\u4ee5\u627e\u51fa\u5408\u6cd5\u70b9\u4ee5\u53ca\u5224\u65ad\u65e0\u89e3\u7684!\n\n### sol\n\n\u5148\u63d0\u4f9b\u4e00\u4e2a$O(n^2)$\u7684\u505a\u6cd5: \n\n-  \u6bcf\u6b21\u5224\u65ad\u4e00\u4e2a\u70b9\u662f\u5426\u53ef\u884c, \u53ea\u8981\u5c06\u5b83\u63d0\u4e3aroot,\u5e76\u5c06\u6240\u6709\u8fb9\u8bb0\u4e3a\u5b50\u8282\u70b9\u6307\u5411\u7236\u8282\u70b9\n-  \u82e5\u4e0d\u5b58\u5728**\u73af**\u4fbf\u662f\u53ef\u884c\u70b9, \u5426\u5219\u975e\u6cd5!\n\n\u90a3\u4e48\u4f1a\u53d1\u73b0\u4e00\u4e2atrick:\n\n-  \u82e5\u5b58\u5728\u9650\u5236$(u,v)$\u90a3\u4e48\u4ee5$v$\u4e3a\u6839\u7684$u$\u7684\u5b50\u6811(\u5305\u62ec$u$)\u90fd\u4e0d\u53ef\u884c\n\n\n\n~~\u8fd9\u6837\u5c31\u53ef\u4ee5\u641e\u4e8b\u60c5\u4e86~~\n\n\u6211\u4eec\u65e2\u7136\u5df2\u7ecf\u627e\u51fa\u4e86\u4e00\u4e2a\u53ef\u884c\u89e3(\u8bb0\u4e3a$rt$)\n\n- \u4ee5$rt$\u4e3a\u6839\u53ef\u4ee5\u53d1\u73b0\u4efb\u610f\u4e00\u4e2a\u9650\u5236(a,b)\u4e2d, a\u7684\u5b50\u6811\u4e00\u5b9a\u662f\u4e0d\u53ef\u884c\u7684(\u8bc1\u660e\u7565)\n\n- \u90a3\u4e48\u6807\u8bb0\u5b8c\u4e0d\u53ef\u884c\u70b9\u4e4b\u540e\u5269\u4e0b\u7684\u70b9\u90fd\u662f\u53ef\u884c\u7684!\n\n  **Prove**\n  **\u5229\u7528\u6570\u5b66\u5f52\u7eb3: \u53ea\u8981\u8bc1\u660e\u4e0e\u4e00\u4e2a\u53ef\u884c\u70b9\u76f8\u90bb\u7684\u4e14\u672a\u88ab\u6807\u8bb0\u8fc7\u7684\u70b9\u540c\u6837\u5408\u6cd5\u5373\u53ef!**\n\n  \u8bbe\u8be5\u53ef\u884c\u70b9\u4e3a$s$, \u8f6c\u4e3aroot, \u90a3\u4e48$t$\u4e3a\u5176\u5b50\u8282\u70b9\n  \u5982\u679c\u5173\u4e8e$s$\u7684\u5408\u6cd5\u5220\u9664\u5e8f\u5217\u4e3a$\\{a_n\\}$   s.t. $a_n=s,a_x=t$ ($x\\in Z$)\n  \u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u5c06$a_x$\u63d0\u81f3\u5e8f\u5217\u7684$a_n$\u4e4b\u540e, \u8be5\u5e8f\u5217\u540c\u6837\u5408\u6cd5\n> \u56e0\u4e3a\u6ca1\u6709$t$\u5fc5\u987b\u5728\u67d0\u4e00\u70b9\u524d\u5220\u9664\u7684\u9650\u5236, \u5426\u5219$t$\u5df2\u7ecf\u5728\u4e4b\u524d\u88ab\u6807\u8bb0\u4e3a\u975e\u6cd5!\n>\n> \u4e14t\u7684\u5b50\u6811\u53ef\u4ee5\u6309\u5e8f\u5220\u9664(\u4e0d\u7136$s$\u4e0d\u4f1a\u4e3a\u5408\u6cd5\u70b9),\u4ee5\u53ca$s$\u7684\u975et\u5b50\u6811\u90e8\u5206\u540c\u6837\u53ef\u4ee5\u5220\u9664,\u4f9d\u65e7\u4e0d\u4f1a\u88ab$t$\u6240\u5e72\u6270\n\n**\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0\u6240\u6709\u7684\u53ef\u884c\u89e3\u5fc5\u5b9a\u90fd\u662f\u4e00\u8d77\u7684**, \u4e00\u904ddfs\u5373\u53ef...\n\n\u590d\u6742\u5ea6: O(n)\n\n### Code\n\n```C++\n// Made by Bar.\n#include <bits/stdc++.h>\nusing namespace std;\n\nnamespace {\n\ttemplate <typename T> inline void read(T &x) {\n\t\tx = 0; T f = 1; char c = getchar();\n\t\tfor(; !isdigit(c); c = getchar())\n\t\t\tif(c == '-') f = -1;\n\t\tfor(;  isdigit(c); c = getchar())\n\t\t\tx = (x << 3) + (x << 1) + (c ^ 48);\n\t\tx *= f;\n\t}\n}\n\nconst int N = 1E5 + 50;\n\nint n, m, rt, d[N], vis[N], ans[N];\nvector<int> g[N], l[N];\nqueue<int> que;\n\nint cnt;\nint solve(int cnt = 0) {\n\tfor(; !que.empty(); ) {\n\t\tint u = que.front(); que.pop();\n\t\t++ cnt;\n\t\tif(d[u] != 1) {\n\t\t\tif(d[u] < 1) return u;\n\t\t\tfor(int i = 1; i <= n; ++i) printf(\"0\\n\");\n\t\t\texit(0);\n\t\t} \n\t\tfor(auto v : g[u]) {\n\t\t\t-- d[v]; ++ cnt;\n\t\t\tif(d[v] == 1) que.push(v);\n\t\t}\n\t\tfor(auto v : l[u]) {\n\t\t\t-- d[v]; ++ cnt;\n\t\t\tif(d[v] == 1) que.push(v);\n\t\t}\n\t}\n\tif(cnt != n) {\n\t\tfor(int i = 1; i <= n; ++i) printf(\"0\\n\"); \n\t\texit(0);\n\t}\n}\nvoid dfs(int u, int fa = -1) {\n\tans[u] = 1;\n\tfor(auto v : g[u]) \n\t\tif(v != fa && !vis[v]) \n\t\t\tdfs(v, u);\n}\nint main() {\n\tread(n), read(m);\n\tfor(int u, v, i = 1; i < n; ++i) {\n\t\tread(u), read(v);\n\t\tg[u].push_back(v), g[v].push_back(u); \n\t\t++ d[u], ++ d[v];\n\t}\n\tfor(int a, b, i = 1; i <= m; ++i) {\n\t\tread(a), read(b);\n\t\tl[a].push_back(b);\n\t\t++ d[b];\n\t\tvis[a] = true;\n\t}\n\tfor(int i = 1; i <= n; ++i) \n\t\tif(d[i] == 1) que.push(i);\n\trt = solve();\n\tdfs(rt);\n\tfor(int i = 1; i <= n; ++i)\n\t\tprintf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1549110227,
        "uid": 50047,
        "name": "Bartholomew",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5157 \u3010[USACO18DEC]The Cow Gathering\u3011"
    },
    {
        "content": "### USACO 2018 DEC Platinum The Cow Gathering\n\n**\u9898\u610f**\uff1a\u7ed9\u5b9a\u6811\u548c\u4e00\u4e9b\u6811\u4e0a\u6709\u5411\u8fb9\uff0c\u6bcf\u6b21\u5220\u53bb\u53f6\u5b50\uff0c\u8be2\u95ee\u6bcf\u4e2a\u7ed3\u70b9\u80fd\u5426\u6700\u540e\u4e00\u4e2a\u5220\u53bb\n\n**\u9898\u89e3**\uff1a\n\n\u5224\u65ad\u4e00\u4e2a\u70b9\u80fd\u5426\u6700\u540e\u4e00\u4e2a\u5220\uff0c\u5c31\u628a\u5b83\u63d0\u505a\u6839\uff0c\u7136\u540e\u628a\u6240\u6709\u513f\u5b50\u90fd\u5f80\u4e0a\u6307\n\n\u52a0\u5165\u4e00\u6761\u8fb9 $(u,v)$ \u53ef\u4ee5\u53d1\u73b0\u4ee5$v$\u4e3a\u6839\u65f6$u$\u7684\u5b50\u6811\u90fd\u6ca1\u6cd5\u6700\u540e\u5220\n\n\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\uff0c\u6bcf\u6b21\u52a0\u8fb9\u94a6\u5b9a\u4e00\u4e9b\u70b9\u7b54\u6848\u5c31\u662f$0$\n\n\u600e\u6837\u5feb\u901f\u627e\u5230$u$\u5728\u4ee5$v$\u4e3a\u6839\u7684\u6811\u4e2d\u7684\u5b50\u6811\uff1f\u7528\u7c7b\u4f3c\u300c\u9065\u8fdc\u7684\u56fd\u5ea6\u300d\u90a3\u9898\u7684\u65b9\u6cd5\uff0c\u76f4\u63a5\u4ee5$1$\u53f7\u70b9\u4e3a\u6839\u5efa\u6811\uff0c\u7136\u540e\u8fd9\u65f6\u6362\u6839\u53ea\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\uff1a\u5982\u679c$v$\u5728$u$\u5b50\u6811\u5916\uff0c\u4e0d\u7528\u52a8\uff1b\u5982\u679cv\u5728\u5b50\u6811\u5185\uff0c\u90a3\u627e\u5230$v$\u5728$u$\u7684\u54ea\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u91cc\uff0c\u9664\u4e86\u8fd9\u4e2a\u5b50\u6811\u5176\u4ed6\u6240\u6709\u7ed3\u70b9\u94a6\u5b9a\u7b54\u6848\u4e3a$0$\u3002\u5177\u4f53\u5b9e\u73b0\u5c31\u627e\u500d\u589e\u627e$v$\u7684$deep[v]-deep[u]-1$\u7ea7\u7956\u5148\uff08\u56e0\u4e3a\u5982\u679c\u66b4\u529b\u904d\u5386\u513f\u5b50\uff0c\u590d\u6742\u5ea6\u4e0d\u5bf9\uff09\uff0c\u8986\u76d6\u5c31dfs\u5e8f\u5dee\u5206\u4e00\u4e0b\n\n\u5176\u5b9e\u6b64\u65f6\u7684\u505a\u6cd5\u8fd8\u662f\u6709\u4e00\u4e9b\u95ee\u9898\u7684\uff0cUSACO\u6bd4\u8d5b\u65f6\u5f88\u591a\u9009\u624b\u5c31\u8fd9\u6837\u5199\u7684\uff0c\u4f46\u540e\u6765\u51fa\u9898\u4eba\u4e2d\u9014\u52a0\u6570\u636e\u628a\u4ed6\u4eec\u53c9\u6389\u4e86\n\n\u56e0\u6b64\u9700\u8981\u5224\u4e0b\u56fe\u662f\u5426\u65e0\u89e3\n\n\u6211\u4eec\u628a\u5df2\u7ecf\u786e\u5b9a\u7b54\u6848\u4e3a$0$\u7684\u7ed3\u70b9\u786e\u5b9a\u8fb9\u7684\u65b9\u5411\uff0c\u7136\u540e\u52a0\u4e0a\u6811\u4e0a\u6709\u5411\u8fb9\u5224\u73af\u3002\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <vector>\nusing namespace std;\n\nconst int N = 1e5 + 10;\n\nint n, m, dfn[N], idx[N], sz[N];\nint fa[N][20], d[N];\nvector<int> G[N], g[N];\nbool ans[N];\n\nvoid dfs(int u, int f = 0) {\n\tfa[u][0] = f; d[u] = d[f] + 1;\n\tfor(int i = 1; i < 20; i ++)\n\t\tfa[u][i] = fa[fa[u][i - 1]][i - 1];\n\tdfn[u] = ++ dfn[0]; idx[dfn[u]] = u; sz[u] = 1;\n\tfor(int i = 0; i < G[u].size(); i ++) if(G[u][i] != f)\n\t\tdfs(G[u][i], u), sz[u] += sz[G[u][i]];\n}\n\nint c[N];\n\ninline void cover(int l, int r) {\n\tif(l <= r) c[l] ++, c[r + 1] --;\n}\n\nvoid kthfa(int & u, int k) {\n\tif(k > 0) for(int i = 0; i < 20; i ++) \n\t\tif(k >> i & 1) u = fa[u][i];\n}\n\nbool vis[N];\nvoid fixdir(int u, int f) {\n\tfor(int & v : G[u]) if(v != f) {\n\t\tif(!vis[v]) {\n\t\t\tg[v].push_back(u);\n\t\t\tvis[v] = 1; fixdir(v, u);\n\t\t}\n\t}\n}\n\nbool vis2[N], ins[N];\nbool cir(int u) {\n\tif(ins[u]) return 1;\n\tif(vis2[u]) return 0;\n\tvis2[u] = ins[u] = 1;\n\tfor(const int & v : g[u]) \n\t\tif(cir(v)) return 1;\n\treturn ins[u] = 0;\n}\n\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tint u, v;\n\tfor(int i = 1; i < n; i ++) {\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tG[u].push_back(v);\n\t\tG[v].push_back(u);\n\t}\n\tdfs(1);\n\tfor(int i = 1; i <= m; i ++) {\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tg[u].push_back(v);\n\t\tint l = dfn[u], r = l + sz[u] - 1;\n\t\tif(dfn[v] < l || dfn[v] > r) {\n\t\t\tcover(l, r), fixdir(u, fa[u][0]);\n\t\t} else {\n\t\t\tkthfa(v, d[v] - d[u] - 1);\n\t\t\tint l2 = dfn[v], r2 = l2 + sz[v] - 1;\n\t\t\tcover(1, l2 - 1), cover(r2 + 1, n);\n\t\t\tfor(const int & j : G[v]) if(!vis[j]) {\n\t\t\t\tif(dfn[j] < l2 || dfn[j] > r2) {\n\t\t\t\t\tvis[j] = 1;\n\t\t\t\t\tfixdir(j, v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tbool tag = true;\n\tfor(int i = 1; i <= n; i ++) if(!vis2[i])\n\t\tif(cir(i)) tag = false, i = n;\n\n\tif(!tag) {\n\t\tfor(int i = 1; i <= n; i ++) puts(\"0\");\n\t\treturn 0;\n\t}\n\t\n\tint val = 0;\n\tfor(int i = 1; i <= n; i ++)\n\t\tval += c[i], ans[idx[i]] = (val > 0) ? 0 : 1;\n\tfor(int i = 1; i <= n; i ++)\n\t\tprintf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1546223884,
        "uid": 20375,
        "name": "hongzy",
        "ccfLevel": 9,
        "title": "\u300cUSACO18DEC Platinum C\u300d The Cow Gathering"
    },
    {
        "content": "\u7ec8\u4e8e $A$ \u4e86\u3002\n\n\u8fd9\u662f\u4e00\u9053\u601d\u7ef4\u597d\u9898\uff01\u6211\u63d0\u4f9b\u4e00\u4e2a\u65e0\u89e3\u7684\u6570\u636e\uff1a\n\n```cpp\n8 2\n1 2\n2 3\n1 4\n4 5\n4 6\n6 7\n6 8\n2 8\n4 3\n```\n\n![](https://cdn.luogu.com.cn/upload/pic/50658.png)\n\n\u6211\u4eec\u5148\u8003\u8651\u53ea\u6709\u4e00\u7ec4\u8be2\u95ee\u600e\u4e48\u505a\u3002\n\n\u6211\u4eec\u5b9a\u4e49 $x$ \u6bd4 $y$ \u5148\u5220\u9664\u3002\n\n1\u3001\u82e5 $y$ \u5728 $x$ \u5b50\u6811\u5185\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u6811\u4e0a\u500d\u589e\u5230 $y$ \u6240\u5c5e\u7684 $x$ \u7684\u5b50\u8282\u70b9 $z$\uff0c\u90a3\u4e48 $[1,st_z)$ \u548c $(ed_z,n]$ \u4e2d\u7684\u70b9\u7b54\u6848\u4e00\u5b9a\u4e3a $0$\n\n2\u3001\u5176\u4ed6\u60c5\u51b5\n\n\u6211\u4eec\u628a $x$ \u5b50\u6811\u5168\u90e8\u5220\u9664\u5373\u53ef\uff0c$[st_x,ed_x]$ \u4e2d\u7684\u70b9\u7b54\u6848\u4e00\u5b9a\u4e3a $0$\n\n\u6b64\u9898\u96be\u5728\u5224\u65ad\u65e0\u89e3\u7684\u60c5\u51b5\u3002\n\n\u5982\u679c $x$ \u6bd4 $y$ \u5148\u5220\u9664\uff0c\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u56fe\uff0c\u5c06 $x$ \u5411 $y$ \u8fde\u4e00\u6761\u8fb9\u3002\u5b9e\u9645\u4e0a\u65e0\u89e3\u7684\u60c5\u51b5\u5c31\u662f\u62d3\u6251\u540e\u65e0\u89e3\u7684\u60c5\u51b5\u3002\n\n\u90a3\u4e3a\u4ec0\u4e48\u65e0\u89e3\u7684\u60c5\u51b5\u5355\u72ec\u5224\u6389\u5c31\u7b54\u6848\u6210\u7acb\u5462\uff1f\n\n\u56e0\u4e3a\u65e0\u89e3\u7684\u60c5\u51b5\u5224\u6389\u540e\uff0c\u6211\u4eec\u5728\u5220\u9664\u70b9\u7684\u65f6\u5019\u6ca1\u6709\u5176\u4ed6\u9650\u5236\uff0c\u5404\u7ec4\u8be2\u95ee\u662f\u6ca1\u6709\u51b2\u7a81\u7684\u3002\n\n\u6b64\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u74f6\u9888\u5728\u6811\u4e0a\u500d\u589e\u3002\n\n@123asdfghjkl \u611f\u8c22\u4ed6\u53d1\u73b0\u4e86\u6211\u5224\u65e0\u89e3\u4e00\u4e2a\u9519\u8bef\uff0c\u6211\u4eec\u5728\u5224\u7684\u65f6\u5019\u6709\u53ef\u80fd\u51fa\u73b0\u5ea6\u6570\u4e3a\u8d1f\u6570\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u539f\u6765\u7684 `dg[x]==1` \u6539\u6210 `dg[x]<2` \u5c31\u884c\u4e86\u3002\n\n$Code\\ Below:$\n\n```cpp\n#include <bits/stdc++.h>\n#define lowbit(x) ((x)&(-(x)))\nusing namespace std;\nconst int maxn=100000+10;\nint n,m,c[maxn],dg[maxn],vis[maxn],ans[maxn];\nint dep[maxn],fa[maxn][18],st[maxn],ed[maxn],mp[maxn],tim;\nint head[maxn],fir[maxn],tot,cnt,now;\n\nstruct node{\n    int to,next;\n}e[maxn<<1],edge[maxn];\n\ninline int read(){\n    register int x=0,f=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n    while(isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n    return (f==1)?x:-x;\n}\n\ninline void add(int x,int y){\n    e[++tot].to=y;e[tot].next=head[x];head[x]=tot;\n}\n\ninline void addedge(int x,int y){\n    edge[++cnt].to=y;edge[cnt].next=fir[x];fir[x]=cnt;\n}\n\nvoid dfs(int x,int f){\n    st[x]=++tim;mp[tim]=x;\n    fa[x][0]=f;dep[x]=dep[f]+1;\n    for(int i=1;i<18;i++) fa[x][i]=fa[fa[x][i-1]][i-1];\n    for(int i=head[x],y;i;i=e[i].next){\n        y=e[i].to;\n        if(y==f) continue;\n        dfs(y,x);\n    }\n    ed[x]=tim;\n}\n\ninline int getson(int x,int y){\n    for(int i=17;i>=0;i--)\n        if(dep[fa[y][i]]>dep[x]) y=fa[y][i];\n    return y; \n}\n\ninline bool check(){\n\tqueue<int> q;\n    for(int i=1;i<=n;i++)\n        if(dg[i]<2) vis[i]=1,q.push(i);\n    int x,y;\n    while(!q.empty()){\n        x=q.front(),q.pop();\n        for(int i=head[x];i;i=e[i].next){\n            y=e[i].to;dg[y]--; \n            if(!vis[y]&&dg[y]<2) vis[y]=1,q.push(y);\n        }\n        for(int i=fir[x];i;i=edge[i].next){\n            y=edge[i].to;dg[y]--;\n            if(!vis[y]&&dg[y]<2) vis[y]=1,q.push(y);\n        }\n    }\n    for(int i=1;i<=n;i++)\n    \tif(!vis[i]) return 0;\n    return 1;\n}\n\nint main()\n{\n    n=read(),m=read();\n    int x,y,z;\n    for(int i=1;i<n;i++){\n        x=read(),y=read();\n        add(x,y);add(y,x);\n        dg[x]++;dg[y]++;\n    }\n    dfs(1,0);\n    while(m--){\n        x=read(),y=read();\n        addedge(x,y);dg[y]++;\n        if(st[x]<=st[y]&&st[y]<=ed[x]){\n            z=getson(x,y);\n            c[1]++;c[st[z]]--;\n            c[ed[z]+1]++;c[n+1]--;\n        }\n        else {\n            c[st[x]]++;c[ed[x]+1]--;\n        }\n    }\n    if(!check()){\n        for(int i=1;i<=n;i++) printf(\"0\\n\");\n        return 0;\n    }\n    for(int i=1;i<=n;i++){\n        c[i]+=c[i-1];\n        if(c[i]==0) ans[mp[i]]=1;\n    }\n    for(int i=1;i<=n;i++) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```\n\n",
        "postTime": 1548941963,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5157 \u3010[USACO18DEC]The Cow Gathering\u3011"
    },
    {
        "content": "\u8ba9\u6211\u4eec\u5148\u6574\u7406\u4e00\u4e0b\uff1a\u5df2\u77e5\u4e00\u4e2a\u6570\u56fe\uff0c\u6c42\u4e00\u4e2a\u70b9\u662f\u5426\u53ef\u4ee5\u6700\u540e\u5220\u9664\u3002\n\n\n\u65e2\u7136\u662f\u6c42\u987a\u5e8f\uff0c\u5f53\u7136\u4f18\u5148\u60f3\u5230\u7684\u662fdfs\u5e8f\uff1a\n``` cpp\nint st[100010],ed[100010],mp[100010],tim=0;\n  //\u5f00\u59cb\u65f6\u95f4   \u7ed3\u675f\u65f6\u95f4   dfs\u987a\u5e8f  \u65f6\u95f4\u6807\u8bb0\nvoid dfs(int x,int f){\n     //\u73b0\u70b9   \u7236\u70b9\n   st[x]=++tim,mp[tim]=x;\n   for(int i=head[x];i;i=a[i].next){//\u904d\u5386\n       int y=a[i].to;\n       if(y==f)continue;\n       dfs(y,x);\n   }\n   ed[x]=tim;\n}\n```\n\n\u4e0b\u9762\u8fd8\u8981\u89e3\u51b3m\u4e2a\u6761\u4ef6\uff0c\u65e2\u7136\u8981\u6c42\u4e00\u4e2a\u70b9\u662f\u5426\u53ef\u4ee5\u6700\u540e\u5220\u9664\uff0c\u5c31\u8981\u7528\u6392\u9664\u6cd5\uff0c\u6bcf\u4e2a\u6761\u4ef6\u90fd\u53ef\u4ee5\u6392\u9664\u4e00\u6bb5\u5b50\u6811\uff0c\u800c\u5728dfs\u4e2d\u5904\u7406\u5b50\u6811\u7528\u5dee\u5206\uff08\u6570\u7ec4\u4e3ac[])\u5c31\u53ef\u4ee5\u4e86\u3002\n\u800c\u6761\u4ef6\u53c8\u4e24\u79cd\u53ef\u80fd\uff1a\n\n1. \u5b50\u5b59\u6307\u5411\u7956\u5148\uff1a\u6392\u9664\u5b50\u5b59\u53ca\u4e0b\u9762\u7684\u70b9\uff1a\n```\nc[st[x]]++;c[ed[x]+1]--;\n```\n\n2. \u7956\u5148\u6307\u5411\u5b50\u5b59\uff1a\u6392\u9664\u7956\u5148\u53ca\u4e0a\u9762\u7684\u70b9\u5e76\u6392\u9664\u5206\u652f\uff1a\u6392\u9664\u5206\u652f\u65f6\u8981\u6c42\u51fa\u5b50\u8282\u70b9\uff0c\u7528LCA\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```\nif(st[x]<=st[y]&&st[y]<=ed[x]){//\u5224\u65ad\u7956\u5148\u662f\u5426\u6307\u5411\u5b50\u5b59\n   z=LCA(x,y);\n   c[1]++;c[st[z]]--;\n   c[ed[z]+1]++;c[n+1]--;\n}\n```\nLCA\uff1a\n\n```\nint LCA(int x,int y){//\u6c42\u5b50\u8282\u70b9\n    for(int i=17;i>=0;i--)\n    if(dep[fa[y][i]]>dep[x]) y=fa[y][i];\n    return y;\n}\n```\n\u8fd9\u65f6\u8fd8\u8981\u6539\u4e00\u4e0bdfs:\n\n```\nvoid dfs(int x,int f){\n   st[x]=++tim,mp[tim]=x;\n\tfa[x][0]=f;dep[x]=dep[f]+1;\n   for(int i=1;i<18;i++)fa[x][i]=fa[fa[x][i-1]][i-1];//\u9884\u5904\u7406LCA\u5e76\u6c42\u51fa\u6df1\u5ea6\n   for(int i=head[x];i;i=a[i].next){\n       int y=a[i].to;\n       if(y==f)continue;\n       dfs(y,x);\n   }\n   ed[x]=tim;\n}\n```\n\n\u4ee5\u53ca\u5224\u65ad\u6761\u4ef6\u662f\u5426\u6709\u73af\u4ee5\u6c42\u65e0\u89e3\uff1a\n\n```\nint vis[100010];//\u6807\u8bb0\nbool qwe(){\n    queue<int> q;\n    for(int i=1;i<=n;i++)\n        if(dg[i]<2) vis[i]=1,q.push(i);\n    int x,y;\n    while(!q.empty()){//\u5e7f\u641c\n        x=q.front(),q.pop();\n        for(int i=head[x];i;i=a[i].next){\n            y=a[i].to;dg[y]--;\n            if(!vis[y]&&dg[y]<2) vis[y]=1,q.push(y);\n        }\n        for(int i=fir[x];i;i=edge[i].next){\n            y=edge[i].to;dg[y]--;\n            if(!vis[y]&&dg[y]<2) vis[y]=1,q.push(y);\n        }\n    }\n    for(int i=1;i<=n;i++)//\u5224\u65ad\n        if(!vis[i]) return 0;\n    return 1;\n}\n```\n\u6700\u540e\u8fde\u8d77\u6765\uff1a\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m,c[100010],ans[100010];\nint st[100010],ed[100010],mp[100010],tim=0,dg[100010],vis[100010];\nint dep[100010],fa[100010][18];\nint head[100010],fir[100010],tot,cnt,now;\nstruct node{\n    int to,next;\n}a[200020],edge[100010];\nvoid add(int x,int y){\n    a[++tot].to=y;a[tot].next=head[x];head[x]=tot;\n}\nvoid addedge(int x,int y){\n    edge[++cnt].to=y;edge[cnt].next=fir[x];fir[x]=cnt;\n}\nvoid dfs(int x,int f){\n    st[x]=++tim;mp[tim]=x;\n    fa[x][0]=f;dep[x]=dep[f]+1;\n    for(int i=1;i<18;i++) fa[x][i]=fa[fa[x][i-1]][i-1];\n    for(int i=head[x],y;i;i=a[i].next){\n        y=a[i].to;\n        if(y==f) continue;\n        dfs(y,x);\n    }\n    ed[x]=tim;\n}\nint getson(int x,int y){\n    for(int i=17;i>=0;i--)\n        if(dep[fa[y][i]]>dep[x]) y=fa[y][i];\n    return y;\n}\n bool qwe(){\n    queue<int> q;\n    for(int i=1;i<=n;i++)if(dg[i]<2)vis[i]=1,q.push(i);\n    int x,y;\n    while(!q.empty()){\n        x=q.front(),q.pop();\n        for(int i=head[x];i;i=a[i].next){\n            y=a[i].to;dg[y]--;\n            if(!vis[y]&&dg[y]<2) vis[y]=1,q.push(y);\n        }\n        for(int i=fir[x];i;i=edge[i].next){\n            y=edge[i].to;dg[y]--;\n            if(!vis[y]&&dg[y]<2) vis[y]=1,q.push(y);\n        }\n    }\n    for(int i=1;i<=n;i++)if(!vis[i])return 0;\n    return 1;\n}\nint main(\uff09\n{\n    cin>>n>>m;\n    int x,y,z;\n    for(int i=1;i<n;i++){\n        cin>>x>>y;\n        add(x,y);add(y,x);\n        dg[x]++;dg[y]++;\n    }\n    dfs(1,0);\n    while(m--){\n        cin>>x>>y;\n        addedge(x,y);dg[y]++;\n        if(st[x]<=st[y]&&st[y]<=ed[x]){\n            z=getson(x,y);\n            c[1]++;c[st[z]]--;\n            c[ed[z]+1]++;c[n+1]--;\n        }\n        else {\n            c[st[x]]++;c[ed[x]+1]--;\n        }\n    }\n    if(qwe()==0){\n        for(int i=1;i<=n;i++)cout<<0\n        return 0;\n    }\n    for(int i=1;i<=n;i++){\n        c[i]+=c[i-1];\n        if(c[i]==0) ans[mp[i]]=1;\n    }\n    for(int i=1;i<=n;i++)cout<<ans[i]<<endl;\n}\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1584863031,
        "uid": 178953,
        "name": "zyy121212",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5157 \u3010[USACO18DEC]The Cow Gathering P\u3011"
    },
    {
        "content": "\u9898\u610f\u5c31\u662f\u8981\u4f7f\u4efb\u610f\u65f6\u523b\u4e0d\u5b58\u5728\u5b64\u70b9\u3002\u663e\u7136\u6211\u4eec\u6bcf\u6b21\u53ea\u80fd\u5220\u53f6\u5b50\uff0c\u5426\u5219\u5206\u4e3a\u4e24\u4e2a\u5b50\u6811\u540e\u6700\u540e\u603b\u4f1a\u81f3\u5c11\u5b58\u5728\u4e24\u4e2a\u5b64\u70b9\u3002\n\n\u8003\u8651\u4e00\u4e2a\u9650\u5236 $a$ \u8981\u5728 $b$ \u524d\u9762\uff0c\u5176\u5b9e\u610f\u601d\u5c31\u662f\u628a $b$ \u63d0\u4f5c\u6839\u540e $a$ \u7684\u6574\u4e2a\u5b50\u6811\u90fd\u8981\u5728 $b$ \u4e4b\u524d\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8fde\u51fa\u4e00\u5f20\u56fe\u3002\u663e\u7136\u82e5\u6b64\u56fe\u5b58\u5728\u73af\u5219\u65e0\u89e3\uff0c\u5426\u5219\u6ca1\u6709\u51fa\u5ea6\u7684\u70b9\u5c31\u662f\u7b54\u6848\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\u5b9e\u73b0\uff0c\u65f6\u7a7a\u590d\u6742\u5ea6 $O(n\\log n)$\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define inf 1e9\nconst int maxn=2e5+10;\nconst int mod=1e9+7;\ninline int read(){\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n\treturn x*f;\n}\nint n,m,dfn[maxn],f[maxn][20],ti,ed[maxn],S[maxn],dep[maxn],tr[maxn<<2],id[maxn],tot;\nvector<int>G[maxn],nG[maxn<<2];\n#define pb push_back\ninline void dfs(int x,int fa){\n\tdfn[x]=++ti,f[x][0]=fa;\n\tfor(int i=1;i<20;i++)\n\t\tf[x][i]=f[f[x][i-1]][i-1];\n\tdep[x]=dep[fa]+1;\n\tfor(auto t:G[x])\n\t\tif(t^fa)dfs(t,x);\n\ted[x]=ti;\n}\ninline void build(int h,int l,int r){\n\ttr[h]=++tot;\n\tif(l==r)return void(id[l]=tr[h]);\n\tint mid=(l+r)>>1;\n\tbuild(h<<1,l,mid);\n\tbuild(h<<1|1,mid+1,r);\n\tnG[tr[h<<1]].pb(tr[h]);\n\tnG[tr[h<<1|1]].pb(tr[h]);\n}\ninline void modify(int h,int l,int r,int x,int y,int z){\n\tif(l>y||r<x||x>y)return;\n\tif(l>=x&&r<=y)return void(nG[tr[h]].pb(z));\n\tint mid=(l+r)>>1;\n\tmodify(h<<1,l,mid,x,y,z);\n\tmodify(h<<1|1,mid+1,r,x,y,z);\n}\ninline bool in(int y,int x){return dfn[y]>=dfn[x]&&dfn[y]<=ed[x];}\ninline int jump(int y,int x){for(int i=19;~i;--i)if(dep[f[y][i]]>dep[x])y=f[y][i];return y;}\ninline void add(int l,int r,int x){\n\t++S[l],--S[r+1],modify(1,1,n,l,r,id[dfn[x]]);\n}\nint Dfn[maxn],low[maxn],ins[maxn],now,scc;stack<int>St;\ninline void tarjan(int x){\n\tDfn[x]=low[x]=++now;\n\tins[x]=1;St.push(x);\n\tfor(auto t:nG[x]){\n\t\tif(!Dfn[t]){\n\t\t\ttarjan(t);\n\t\t\tlow[x]=min(low[x],low[t]);\n\t\t}else if(ins[t])low[x]=min(low[x],Dfn[t]);\n\t}if(Dfn[x]==low[x]){\n\t\t++scc;ins[x]=0;\n\t\twhile(St.top()!=x)ins[St.top()]=0,St.pop();\n\t\tSt.pop();\n\t}\n}\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1,x,y;i<n;i++)\n\t\tx=read(),y=read(),G[x].pb(y),G[y].pb(x);\n\tdfs(1,0);build(1,1,n);\n\tfor(int i=1,x,y;i<=m;i++){\n\t\tx=read(),y=read();\n\t\tif(in(y,x)){\n\t\t\tx=jump(y,x);\n\t\t\tadd(1,dfn[x]-1,y),add(ed[x]+1,n,y);\n\t\t}else add(dfn[x],ed[x],y);\n\t}\n\tfor(int i=1;i<=tot;i++)\n\t\tif(!Dfn[i])tarjan(i);\n\tif(scc<tot){\n\t\tfor(int i=1;i<=n;i++)puts(\"0\");\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=n;i++)S[i]+=S[i-1];\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%d\\n\",(S[dfn[i]]==0));\n\treturn 0;\n}\n```",
        "postTime": 1653828227,
        "uid": 409469,
        "name": "Mariposa",
        "ccfLevel": 0,
        "title": "[USACO18DEC]The Cow Gathering P"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9053\u9898\u6211\u4eec\u81ea\u7136\u800c\u7136\u5730\u5c31\u4f1a\u60f3\u5230\u62d3\u6251\u3002\u4f46\u662f\u62d3\u6251\u7684\u65f6\u5019\u4e0d\u80fd\u6ee1\u8db3\u9898\u76ee\u7684\u7b2c\u4e8c\u4e2a\u6761\u4ef6\uff1a\u5fc5\u987b\u6ee1\u8db3\u5976\u725b $Ai$ \u8981\u6bd4\u5976\u725b $Bi$  \u5148\u79bb\u5f00\u3002\u90a3\u6211\u4eec\u5c31\u5148\u6309\u7167 $M$ \u884c\u7684\u6570\u636e\u5efa\u4e2a\u5355\u5411\u8fb9\uff0c\u7136\u540e\u7b49\u4f1a\u5237\u62d3\u6251\u7684\u65f6\u5019\u4e00\u8d77\u5237\uff0c\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1 $Ai$ \u8981\u5148\u6bd4 $Bi$ \u5237\u5230\uff0c\u4e5f\u5c31\u662f\u5148\u79bb\u5f00\u3002\u7b49\u6211\u4eec\u627e\u5230\u7b2c\u4e00\u4e2a\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u65f6\uff0c\u6211\u4eec\u5c31\u627e\u5230\u4e86\u6811\u6839\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u4ece\u6811\u6839\u5f00\u59cb\u53cd\u63a8,\u6bd4\u5982\u9650\u5b9a\u6761\u4ef6\u7684 $(A,B)$ ,\u90a3\u4e48 $A$ \u6240\u5728\u7684\u5b50\u6811(\u5305\u62ec $A$ )\u90fd\u5fc5\u987b\u5148\u5904\u7406\u6389,\u56e0\u4e3a\u8fd9\u5e2e\u5bb6\u4f19\u90fd\u4e0d\u53ef\u80fd\u6700\u540e\u5220\u9664,\u90a3\u4e48\u5269\u4e0b\u7684\u90fd\u662f\u53ef\u96f6\u53ef\u4e00\u7684\u8282\u70b9\u3002\u6309\u7167\u9898\u76ee\u7684\u8981\u6c42\uff0c\u90a3\u4e48\u6211\u4eec\u7edd\u5bf9\u8981\u5168\u7ed9 $1$ \u554a\u3002\n\n$code$ :\n```cpp\n#include<bits/stdc++.h>\n#define TT 200000\nusing namespace std;\nconst int maxn=100005,maxe=200005;\nint n,m,fa,hed,til,tot[2],du[maxn],ans[maxn],que[maxe],son[2][maxe],lnk[2][maxn],nxt[2][maxe];\nbool vis[maxn];\ninline int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-f;ch=getchar();}\n\twhile(isdigit(ch))ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\n\nvoid add_e(int k,int x,int y){du[y]++;son[k][++tot[k]]=y;nxt[k][tot[k]]=lnk[k][x];lnk[k][x]=tot[k];} \nvoid Topu(){\n\tfor(int i=1;i<=n;i++)if(du[i]==1)que[++til]=i;\n\twhile(hed<=til){\n\t\thed=(hed+1)%TT;\n\t\tif(du[que[hed]]==0){fa=que[hed];return ;}\n\t\tfor(int j=lnk[0][que[hed]];j;j=nxt[0][j])if(--du[son[0][j]]==1)que[til=(til+1)%TT]=son[0][j];\n\t\tfor(int j=lnk[1][que[hed]];j;j=nxt[1][j])if(--du[son[1][j]]==1)que[til=(til+1)%TT]=son[1][j];\n\t}\n}\nvoid dfs(int x,int father){\n\tans[x]=1;\n\tfor(int j=lnk[0][x];j;j=nxt[0][j]){\n\t\tif(son[0][j]==father||vis[son[0][j]])continue;\n\t\tdfs(son[0][j],x);\n\t}\n}\nint main(){\n\tn=read();m=read();\n\tfor(int i=1;i<n;i++){\n\t\tint x=read(),y=read();\n\t\tadd_e(0,x,y);add_e(0,y,x);\n\t}//\u5efa\u53cc\u5411\u8fb9\n\tfor(int i=1;i<=m;i++){\n\t\tint x=read(),y=read();\n\t\tadd_e(1,x,y);\n\t\tvis[x]=1;\n\t}//\u518d\u5efa\u56fe\n\tTopu();//\u627e\u6811\u6839\n   dfs(fa,0);//\u4ece\u6839\u4e0a\u5f00\u59cb\u904d\u5386\n\tfor(int i=1;i<=n;i++)printf(\"%d\\n\",ans[i]);//\u8f93\u51fa\u7b54\u6848\n\treturn 0;\n} \n```\n",
        "postTime": 1608731717,
        "uid": 370354,
        "name": "yxy666",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P5157 \u3010[USACO18DEC]The Cow Gathering P\u3011"
    },
    {
        "content": "\u521a\u5b66\u4e86\u62d3\u6251\u6392\u5e8f\uff0cA\u4e86\u8fd9\u9053\u9898\n```\n#include<iostream>\n#include<cctype>\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<cmath>\n#include<ctime>\n#include<queue>\n#include<cstdlib>\n#include<algorithm>\n#define N 220000\n#define L 200000\n#define eps 1e-7\n#define inf 1e9+7\n#define db double\n#define ll long long\n#define ldb long double\nusing namespace std;\ninline int read()\n{\n    char ch=0;\n    int x=0,flag=1;\n    while(!isdigit(ch)){ch=getchar();if(ch=='-')flag=-1;}\n    while(isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n    return x*flag;\n}\nstruct edge{int to,nxt;}e[N*2],E[N*2];\nint num,head[N],NUM,HEAD[N];\ninline void add(int x,int y){e[++num]=(edge){y,head[x]};head[x]=num;}\ninline void ADD(int X,int Y){E[++NUM]=(edge){Y,HEAD[X]};HEAD[X]=NUM;}\nqueue<int>q;\nbool vis[N];\nint times,c[N],sz[N],deg[N],deg_[N],dep[N],dfn[N],nxt[N][25];\nvoid dfs(int x,int fa)\n{\n    sz[x]=1;dfn[x]=++times;dep[x]=dep[fa]+1;\n    for(int i=head[x];i!=-1;i=e[i].nxt)\n    {\n        int to=e[i].to;\n        if(to==fa)continue;\n        dfs(to,x);sz[x]+=sz[to];nxt[to][0]=x;\n    }\n}\nint get(int x,int k){for(int i=0;i<=20;i++)if(1<<i&k)x=nxt[x][i];return x;}\nint main()\n{\n    num=NUM=-1;memset(head,-1,sizeof(head));memset(HEAD,-1,sizeof(HEAD));\n    int n=read(),m=read(),tot=0;\n    for(int i=1;i<n;i++){int x=read(),y=read();add(x,y);add(y,x);deg[x]++;deg[y]++;}\n    dfs(1,1);\n    for(int k=1;k<=20;k++)for(int i=1;i<=n;i++)nxt[i][k]=nxt[nxt[i][k-1]][k-1];\n    for(int i=1;i<=m;i++)\n    {\n        int x=read(),y=read();\n        ADD(x,y);deg_[y]++;\n        int l=dfn[x],r=dfn[x]+sz[x]-1;\n        if(l<=dfn[y]&&dfn[y]<=r)\n        {\n            int to=get(y,dep[y]-dep[x]-1);\n            int pl=dfn[to],pr=dfn[to]+sz[to]-1;\n            c[pl]--;c[pr+1]++;c[1]++;c[n+1]--;\n        }\n        else c[l]++,c[r+1]--;\n    }\n    for(int i=1;i<=n;i++)if(deg[i]==1&&!deg_[i])q.push(i);\n    while(!q.empty())\n    {\n        int x=q.front();q.pop();\n        if(vis[x])continue;vis[x]=true;tot++;\n        for(int i=head[x];i!=-1;i=e[i].nxt){int to=e[i].to;deg[x]--;deg[to]--;}\n        for(int i=HEAD[x];i!=-1;i=E[i].nxt){int to=E[i].to;deg_[to]--;}\n        for(int i=head[x];i!=-1;i=e[i].nxt){int to=e[i].to;if(deg[to]==1&&!deg_[to])q.push(to);}\n        for(int i=HEAD[x];i!=-1;i=E[i].nxt){int to=E[i].to;if(deg[to]==1&&!deg_[to])q.push(to);}\n    }\n    if(tot<n){for(int i=1;i<=n;i++)printf(\"0\\n\");return 0;}\n    for(int i=1;i<=n;i++)c[i]+=c[i-1];\n    for(int i=1;i<=n;i++)printf(\"%d\\n\",c[dfn[i]]?0:1);\n    return 0;\n}\n```\n",
        "postTime": 1552386286,
        "uid": 181775,
        "name": "_Fontainebleau_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5157 \u3010[USACO18DEC]The Cow Gathering\u3011"
    }
]