[
    {
        "content": "# $\\text{Foreword}$ \n\u672c\u9898\u7684\u5927\u90e8\u5206\u9898\u89e3\u91c7\u7528\u4e86\u4e00\u4e2a\u8fde\u53cd\u5411\u4e0d\u9650\u6d41\u8fb9\u7684\u505a\u6cd5\uff0c\u4f46\u8fd9\u4f3c\u4e4e\u5e76\u6ca1\u6709\u6293\u5230\u95ee\u9898\u7684\u5b9e\u8d28\uff0c\u800c\u662f\u5bf9\u95ee\u9898\u7684\u4e00\u4e2a\u95f4\u63a5\u7684\u4fee\u6b63\u3002  \n\u672c\u6587\u914d\u5408\u56fe\u50cf\u5bf9\u8fd9\u4e2a\u95ee\u9898\u8fdb\u884c\u4e86\u91cd\u70b9\u8ba8\u8bba\uff0c\u5e0c\u671b\u7ba1\u7406\u5458\u80fd\u7ed9\u4e88\u901a\u8fc7\u3002  \n# $\\text{Description}$\n[P6054 \u5f00\u95e8\u5927\u5409](https://www.luogu.com.cn/problem/P6054)\n>$n$ \u4f4d\u9009\u624b\u53bb\u53c2\u52a0\u8282\u76ee\u201c\u5f00\u95e8\u5927\u5409\u201d\u3002\u5171\u6709 $m$ \u5957\u9898\uff0c\u6bcf\u5957\u9898\u5305\u542b $p$ \u4e2a\u9898\u76ee\uff0c\u7b2c $i$ \u4f4d\u9009\u624b\u7b54\u5bf9\u7b2c $j$ \u5957\u9898\u4e2d\u7b2c $k$ \u9053\u7684\u6982\u7387\u4e3a $f_{i,j,k}$\u3002  \n\u82e5\u4e00\u4f4d\u9009\u624b\u7b54\u5bf9\u7b2c $i$ \u9898\uff0c\u4f1a\u5728\u5df2\u5f97\u5230\u5956\u52b1\u7684\u57fa\u7840\u4e0a\uff0c\u518d\u5f97\u5230 $c_i$ \u5143\u5956\u52b1\u3002\u9009\u624b\u603b\u662f\u4ece\u7b2c\u4e00\u9053\u5f00\u59cb\uff0c\u6309\u987a\u5e8f\u7b54\u9898\u7684\u3002  \n\u540c\u65f6\uff0c\u4e3a\u4e86\u9632\u6b62\u8fc7\u591a\u7684\u9009\u624b\u505a\u540c\u4e00\u5957\u9898\uff0c\u8fd8\u6709 $y$ \u6761\u5f62\u5982\u201c\u7b2c $i$ \u4f4d\u9009\u624b\u7684\u5957\u9898\u7f16\u53f7\u5fc5\u987b\u81f3\u5c11\u6bd4\u7b2c $j$ \u4f4d\u7684\u5927 $k$\u201d\u7684\u9650\u5236\u3002  \n\u4f60\u9700\u8981\u7ed9\u6bcf\u4e00\u4f4d\u9009\u624b\u5206\u914d\u4e00\u5957\u9898\uff08\u4e0d\u540c\u9009\u624b\u53ef\u4ee5\u76f8\u540c\uff09\uff0c\u4f7f\u5f97\u6240\u6709\u4eba\u7684\u671f\u671b\u5956\u52b1\u548c\u6700\u5c0f\u3002\n\n# $\\text{Solution}$\n[\u5b89\u5229\u4e00\u4e0b\u6211\u7684\u7f51\u7edc\u6d41\u535a\u5ba2\u3002](https://blog.csdn.net/BUG_Creater_jie/article/details/122685276)  \n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u7b97\u51fa $i$ \u9009\u624b\u9009\u5957\u9898 $j$ \u7684\u671f\u671b\u4ef7\u503c $v_{i,j}$\u3002  \n\u5173\u952e\u5c31\u5728\u4e8e\u5982\u4f55\u8868\u793a\u9650\u5236\u3002  \n\u5efa\u51fa $n$ \u6761\u957f\u5ea6\u4e3a $m+1$ \u7684\u94fe\uff0c\u8bbe\u94fe\u4e0a\u7684\u70b9\u4e3a $p_{1...n,1..m+1}$\uff0c\u8fde\u8fb9 $(S,p_{i,1},INF),(p_{i,m+1},T,INF),(p_{i,j},p_{i,j+1},v_{i,j})$\u3002\u65ad\u6389 $(p_{i,j},p_{i,j+1},v_{i,j})$ \u7684\u8fb9\u5373\u8868\u793a\u4ee4 $i$ \u9009\u624b\u505a $j$ \u53f7\u9898\u3002  \n\u8fd9\u6837\u5efa\u56fe\u4e4b\u540e\u9650\u5236\u5c31\u5bb9\u6613\u8868\u793a\u4e86\uff0c\u8bbe $i$ \u9009\u624b\u6bd4 $j$ \u9009\u624b\u9898\u76ee\u7f16\u53f7\u81f3\u5c11\u5927 $k$\uff0c\u5c31\u5bf9\u4e8e\u6240\u6709\u5408\u6cd5\u7684\u4e0b\u6807 $x$\uff0c\u5747\u8fde\u8fb9 $(p_{j,x},p_{i,x+k},INF)$ \u5373\u53ef\u3002  \n\n\u4f46\u662f\u8fd9\u6837\u662f\u65e0\u6cd5\u901a\u8fc7\u672c\u9898\u7684\u3002  \n\u4e3b\u6d41\u9898\u89e3\u90fd\u8bf4\u8fd8\u9700\u8981\u52a0\u4e0a $(p_{i,j+1},p_{i,j},INF)$ \u7684\u8fb9\uff0c\u4ee5\u5b9e\u73b0\u9650\u5236\u7684\u4f20\u9012\u6027\uff08\u6216\u8005\u8bf4\u4fdd\u8bc1\u6bcf\u6761\u94fe\u53ea\u65ad\u4e00\u6761\u8fb9\uff09\uff0c\u4f46\u6211\u8ba4\u4e3a\u8fd9\u5e76\u4e0d\u662f\u95ee\u9898\u7684\u672c\u8d28\uff0c\u8fd9\u4e2a\u8fde\u8fb9\u65b9\u6cd5\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff0c[\u5b9e\u8df5\u7ed3\u679c](https://www.luogu.com.cn/record/68286741)\u4e5f\u8bc1\u660e\u4e86\u8fd9\u4e00\u70b9\u3002  \n\u6211\u4eec\u6765\u770b\u770b\u539f\u6765\u7684\u505a\u6cd5\u5230\u5e95\u4e3a\u4ec0\u4e48\u51fa\u9519\u3002  \n\u539f\u6765\u7684\u8fde\u8fb9\u65b9\u5f0f\u5176\u5b9e\u662f\u5f88\u5065\u5168\u7684\uff0c\u5b83\u672c\u8eab\u5df2\u7ecf\u6709\u4e86\u4f20\u9012\u6027\uff0c\u5982\uff1a\n![](https://img-blog.csdnimg.cn/be66aedf9ece4419adb4906f4a5a2db1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAd2luZF9fd2hpc3Blcg==,size_20,color_FFFFFF,t_70,g_se,x_16)\n\u7ea2\u7ebf\u548c\u7eff\u7ebf\u9650\u5236\u5df2\u7ecf\u53ef\u4ee5\u8fdb\u884c\u4f20\u9012\uff0c\u5f62\u6210\u9ec4\u8272\u7684\u9650\u5236\u3002  \n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u6211\u4eec\u96be\u4ee5\u901a\u8fc7\u4e00\u4e9b\u6d4b\u8bd5\u70b9\u5462\uff1f  \n\u56e0\u4e3a**\u6211\u4eec\u7684\u9650\u5236\u6ca1\u6709\u52a0\u5168\uff01**  \n\u9898\u89e3\u548c\u6211\u4e00\u5f00\u59cb\u7684\u5199\u6cd5\u5bf9\u4e8e\u9650\u5236\u7684\u52a0\u8fb9\u4e00\u822c\u90fd\u662f\u5199\u6210\u7c7b\u4f3c\u4e0b\u8fb9\u7684\u5f62\u5f0f\uff1a\n\n```cpp\nfor(int j=max(1,1-k);j<=m+1&&j+k<=m+1;j++) add(id[y][j],id[x][j+k],inf);\n```\n\u4f46\u6b63\u786e\u7684\u5199\u6cd5\u5e94\u8be5\u662f\uff1a\n\n```cpp\nfor(int j=max(1,1-k);j<=m+1;j++) add(id[y][j],id[x][min(j+k,m+1)],inf);\n```\n\u8fd9\u4e24\u4e2a\u5177\u8c61\u4e00\u4e0b\u5c31\u662f\u4e0b\u9762\u4e24\u5f20\u56fe\u7684\u5dee\u522b\uff1a\n![\u8bf7\u6dfb\u52a0\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/fb3df7cfa746445b877a3f1871a83c5f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAd2luZF9fd2hpc3Blcg==,size_20,color_FFFFFF,t_70,g_se,x_16)![\u8bf7\u6dfb\u52a0\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/33944aee66504ada9693fc44cd1d87ff.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAd2luZF9fd2hpc3Blcg==,size_20,color_FFFFFF,t_70,g_se,x_16)  \n\n\u6ce8\u610f\u5230\uff0c\u5728\u7b2c\u4e00\u79cd\u52a0\u6cd5\u4e2d\uff0c\u540e\u9762\u7684\u4e24\u4e2a\u70b9\u6ca1\u6709\u88ab\u9650\u5236\uff0c\u6210\u4e86\u201c\u6cd5\u5916\u4e4b\u5730\u201d\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u52a0\u5b8c\u53cd\u5411\u8fb9\u53ef\u4ee5\u628a\u8fd9\u4e2a\u95ee\u9898\u4fee\u6b63\u7684\u539f\u56e0\u3002\u800c\u5728\u65b0\u7684\u52a0\u8fb9\u65b9\u5f0f\u4e0a\uff0c\u90a3\u4e24\u4e2a\u70b9\u76f4\u63a5\u548c\u70b9 $m+1$ \u76f8\u8fde\uff0c\u7531\u4e8e\u70b9 $m+1$ \u548c $T$ \u8fde\u6709 $INF$ \u7684\u8fb9\uff0c\u8fd9\u672c\u8d28\u4e5f\u5c31\u8868\u660e\u8fd9\u4e24\u4e2a\u70b9\u5fc5\u7136\u4e0d\u80fd\u88ab\u9009\u53d6\uff0c\u662f\u7b26\u5408\u4e8b\u5b9e\u7684\u3002  \n\n\u5373\u4f7f\u53ef\u4ee5\u901a\u8fc7\u52a0\u53cd\u5411\u8fb9\u7684\u65b9\u5f0f\u901a\u8fc7\u672c\u9898\uff0c\u4ece\u95ee\u9898\u7684\u672c\u8d28\u6765\u770b\u4e5f\u662f\u4e0d\u592a\u4f18\u7f8e\u7684\u3002\u56e0\u6b64\uff0c\u5efa\u8bae\u76f4\u63a5\u628a\u52a0\u9650\u5236\u8fb9\u7684\u65b9\u5f0f\u4fee\u6539\uff0c\u800c\u4e0d\u662f\u8fdb\u884c\u4fa7\u9762\u7684\u4fee\u6b63\u3002\n# $\\text{Code}$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define ull unsigned long long\n#define debug(...) fprintf(stderr,__VA_ARGS__)\n#define ok debug(\"OK\\n\")\ninline ll read(){\n\tll x(0),f(1);char c=getchar();\n\twhile(!isdigit(c)){if(c=='-') f=-1;c=getchar();}\n\twhile(isdigit(c)){x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n\treturn x*f;\n}\nconst int N=2e5+100;\nconst int M=2e6+100;\nconst double inf=1e11;\nconst double eps=1e-6;\n\nint n,m,num,y;\nint flag;\n\nint tot,s,t;\nstruct node{\n\tint to,nxt;\n\tdouble cap;\n}p[M<<1];\nint fi[N],cur[N],cnt;\ninline void addline(int x,int y,double c){\n\tp[++cnt]=(node){y,fi[x],c};fi[x]=cnt;\n}\ninline void add(int x,int y,double c){\n\t//printf(\"%d->%d cap=%.2lf\\n\\n\",x,y,c);\n\taddline(x,y,c);addline(y,x,0);\n}\nint bel[N];\nqueue<int>que;\nint bfs(){\n\tfill(bel,bel+1+tot,0);\n\tbel[s]=1;que.push(s);\n\twhile(!que.empty()){\n\t\tint now=que.front();que.pop();\n\t\tfor(int i=cur[now]=fi[now];~i;i=p[i].nxt){\n\t\t\tint to=p[i].to;\n\t\t\tif(p[i].cap<eps||bel[to]) continue;\n\t\t\tbel[to]=bel[now]+1;\n\t\t\tque.push(to);\n\t\t}\n\t}\n\treturn bel[t];\n}\ndouble dfs(int x,double lim){\n\tif(x==t||lim<eps) return lim;\n\tdouble res(0);\n\tfor(int &i=cur[x];~i;i=p[i].nxt){\n\t\tint to=p[i].to;\n\t\tif(bel[to]!=bel[x]+1) continue;\n\t\tdouble add=dfs(to,min(lim,p[i].cap));\n\t\tres+=add;lim-=add;\n\t\tp[i].cap-=add;p[i^1].cap+=add;\n\t\t//printf(\"x=%d to=%d add=%lf\\n\",x,to,add);\n\t\tif(lim<eps) break;\n\t}\n\tif(res<eps) bel[x]=-1;\n\treturn res;\n}\nvoid dinic(){\n\tdouble flow(0),tmp(0);\n\twhile(bfs()){\n\t\twhile((tmp=dfs(s,inf))>eps) flow+=tmp;\n\t\tif(flow>=inf){\n\t\t\tputs(\"-1\");return;\n\t\t}\n\t}\n\tprintf(\"%lf\\n\",flow);\n\treturn;\n}\nint id[90][90];\nint c[90];\ndouble ans;\ndouble f[90][90][90],pp[90][90][90],val[90][90];\nvoid init(){\n\tans=0;\n\ttot=0;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m+1;j++) id[i][j]=++tot;\n\t}\n\ts=++tot;t=++tot;\n\tmemset(fi,-1,sizeof(fi));cnt=-1;\n}\nvoid calc(){\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tpp[i][j][0]=1;val[i][j]=0;\n\t\t\tfor(int k=1;k<=num;k++) pp[i][j][k]=pp[i][j][k-1]*f[i][j][k];\n\t\t\tfor(int k=1;k<=num;k++){\n\t\t\t\tpp[i][j][k]=pp[i][j][k]*(1-f[i][j][k+1]);\n\t\t\t\tval[i][j]+=pp[i][j][k]*c[k];\n\t\t\t}\n\t\t\t//printf(\"i=%d j=%d val=%lf\\n\",i,j,val[i][j]);\n\t\t}\n\t}\n}\n\nvoid work(){\n\tn=read();m=read();num=read();y=read();\n\tinit();\n\tfor(int i=1;i<=num;i++) c[i]=read()+c[i-1];\n\tfor(int j=1;j<=m;j++){\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int k=1;k<=num;k++) scanf(\"%lf\",&f[i][j][k]);\n\t\t}\n\t}\n\tcalc();\n\tfor(int i=1;i<=n;i++){\n\t\tadd(s,id[i][1],inf);\n\t\tadd(id[i][m+1],t,inf);\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tadd(id[i][j],id[i][j+1],val[i][j]);//add(id[i][j+1],id[i][j],inf);\n\t\t}\n\t}\n\tfor(int i=1;i<=y;i++){\n\t\tint x=read(),y=read(),k=read();\n\t\tfor(int j=max(1,1-k);j<=m+1;j++) add(id[y][j],id[x][min(j+k,m+1)],inf);\n\t}\n\tdinic();\n\t\n\treturn;\n}\nsigned main(){\n\t#ifndef ONLINE_JUDGE\n\t//freopen(\"a.in\",\"r\",stdin);\n\t//freopen(\"a.out\",\"w\",stdout);\n\t#endif\n\tint T=read();\n\twhile(T--) work();\n\treturn 0;\n}\n/*\n1\n3 2 4 1\n10 10 10 20\n0.3 0.5 0.7 0.4\n0.2 0.6 0.2 0.2\n0.7 0.1 0.8 0.2\n0.5 0.5 0.5 0.5\n0.2 0.5 0.3 0.6\n0.3 0.5 0.4 0.1\n2 3 1\n*/\n \n```\n\n",
        "postTime": 1643448227,
        "uid": 449265,
        "name": "wind_whisper",
        "ccfLevel": 10,
        "title": "P6054 \u5f00\u95e8\u5927\u5409"
    },
    {
        "content": "### \u7b97\u6cd5\n\u795e\u4ed9\u671f\u671b+\u6700\u5c0f\u5272\u9898\u3002\n\n### \u601d\u8def\n**\u6ce8\u610f\uff1a** \u5f00\u95e8\u5927\u5409\u8fd9\u4e2a\u6e38\u620f\u9700\u8981\u7b54\u5bf9\u524d\u9762\u7684\u6240\u6709\u9898\u76ee\u4ee5\u540e\u624d\u80fd\u56de\u7b54\u4e0b\u4e00\u9898\uff01\uff08\u4e5f\u5c31\u662f\u6982\u7387\u8981\u7d2f\u4e58\uff09\n\n\u9996\u5148\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u6c42\u5f97\u7b2c $i$ \u4f4d\u9009\u624b\u505a\u7b2c $j$ \u5957\u9898\u7684\u671f\u671b\u5f97\u5206\uff0c\u8bb0\u4e3a $g(i,j)$\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u8003\u8651\u4ece\u6700\u5c0f\u5272\u7684\u89d2\u5ea6\u6765\u5efa\u56fe\u3002\n\n\u9996\u5148\u5c06\u201c\u7b2c $i$ \u4f4d\u9009\u624b\u505a\u7b2c $j$ \u5957\u9898\u201d\u8fd9\u4e2a\u4e8b\u4ef6\u4f5c\u4e3a\u4e00\u4e2a\u70b9\uff0c\u8bb0\u4e3a $(i,j)$\u3002\u90a3\u4e48\u53ef\u4ee5\u8fde $(i,j)-(j,j+1)$ \u6d41\u91cf\u4e3a $g(i,j)$ \u7684\u8fb9\uff0c\u5982\u679c\u5272\u6389\u4e86\u8fd9\u6761\u8fb9\uff0c\u8bf4\u660e\u7b2c $i$ \u4f4d\u9009\u624b\u901a\u8fc7\u505a $j$ \u5957\u9898\u5f97\u5230\u4e86 $g(i,j)$ \u5206\u3002\u4e3a\u4e86\u4f7f\u5f97\u6bcf\u4e00\u4e2a\u4eba\u90fd\u53ef\u4ee5\u505a\u9898\uff0c\u8fd8\u8981\u8fde $s-(i,1)$ \u548c $(i,m+1),t$ \u6d41\u91cf\u90fd\u4e3a $inf$\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u6ee1\u8db3\u9650\u5236\u3002\u5982\u679c\u8981\u6c42 $i$ \u6bd4 $j$ \u505a\u7684\u9898\u5927 $k$\uff0c\u90a3\u4e48\u53ef\u4ee5\u8fde $(j,x)-(i,x+l)(l\\ge k)$ \u6d41\u91cf\u4e3a $inf$ \u7684\u8fb9\uff08\u5f53\u7136\u4e24\u7aef\u7684\u70b9\u8981\u5408\u6cd5\uff09\uff0c\u8fd9\u6837\u7684\u8bdd\u5982\u679c\u5c06 $(j,x)-(j,x+1)$ \u5272\u6389\uff0c\u90a3\u4e48\u4e00\u5b9a\u8981\u5728 $\\ge x+k$ \u7684\u5730\u65b9\u5272\u6389\u4e00\u6761 $i$ \u7684\u8fb9\uff0c\u4e0d\u7136\u56fe\u5c31\u4efb\u7136\u4f1a\u8054\u901a\u3002\n\n\u4f46\u662f\uff0c\u4ec5\u6839\u636e\u4ee5\u4e0a\u65b9\u5f0f\u5efa\u56fe\u5e76\u4e0d\u80fd\u901a\u8fc7\u6240\u6709\u6d4b\u8bd5\u70b9\uff0c\u539f\u56e0\u662f\u9650\u5236\u5e76\u4e0d\u80fd\u4f20\u9012\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u4f60\u9009\u62e9 $(j,x)$ \u4e4b\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9 $(i,y)(y<x+l)$ \u6765\u4f7f\u5f97\u56fe\u4e0d\u8fde\u901a\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u8fde  $(i,j)-(i,j-1)$ \u6d41\u91cf\u4e3a $inf$ \u7684\u8fb9\u6765\u4f20\u9012\u9650\u5236\u3002\uff08\u6ce8\u610f\uff1a\u4ee5\u4e0a\u7684 $i,j,x$ \u542b\u4e49\u5e76\u4e0d\u76f8\u540c\uff09\n\n\u81f3\u4e8e\u5224\u65ad\u65e0\u89e3\uff0c\u53ea\u9700\u8981\u5728\u6d41\u91cf\u8d85\u8fc7 $inf$ \u7684\u65f6\u5019\u9000\u51fa\u5c31\u884c\u4e86\u3002\n\n### \u53c2\u8003\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n#include <cmath>\n#define LL long long\n#define db double\n#define eps 1e-10\n#define inf 1e15\n\nusing namespace std;\n\ninline LL read(){\n    LL x = 0, f = 1; char c = getchar();\n    while(c < '0' || c > '9'){if(c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9'){x = x * 10 + c - '0'; c = getchar();}\n    return x * f;\n}\n\nconst int maxn = 5e5 + 10, N = 85, INF = 0x3f3f3f3f;\nint n,m,p,y,c[N];\nint num = 1,head[maxn],s,t;\ndb g[N][N];\nstruct Edge{int then,to; db val;}e[maxn << 1];\n\nvoid add(int u, int v, db val){\n    e[++num] = (Edge){head[u], v, val}; head[u] = num;\n    e[++num] = (Edge){head[v], u, 0}; head[v] = num;\n}\n\nint Get(int i, int j){return n * (j - 1) + i;}\n\nint dep[maxn]; bool vis[maxn];\nbool bfs(int st, int en){\n    queue<int> q;\n    memset(vis, 0, sizeof(vis));\n    memset(dep, 0x3f, sizeof(dep));\n    q.push(st), dep[st] = 0, vis[st] = 1;\n    while(!q.empty()){\n        int u = q.front();\n        q.pop(), vis[u] = 0;\n        for(int i = head[u]; i; i = e[i].then){\n            int v = e[i].to;\n            if(e[i].val > eps && dep[v] == INF){\n                dep[v] = dep[u] + 1;\n                if(!vis[v]) vis[v] = 1, q.push(v);\n            }\n        }\n    }\n    return (dep[en] != INF);\n}\n\nint cur[maxn];\ndb dfs(int u, db sum){\n    if(u == t) return sum;\n    db now = 0;\n    for(int &i = cur[u]; i; i = e[i].then){\n        int v = e[i].to;\n        if(e[i].val > eps && dep[v] == dep[u] + 1){\n            db a = dfs(v, min(e[i].val, sum - now));\n            e[i].val -= a, e[i ^ 1].val += a, now += a;\n            if(fabs(now - sum) < eps) return now;\n        }\n    }\n    return now;\n}\n\nvoid Dinic(){\n    db Maxflow = 0;\n    while(bfs(s, t)){\n        memcpy(cur, head, sizeof(head));\n        Maxflow += dfs(s, inf);\n        if(Maxflow > inf){\n            printf(\"-1\\n\");\n            return;\n        }\n    }\n    printf(\"%.5lf\\n\", Maxflow);\n}\n\nvoid solve(){\n    memset(g, 0, sizeof(g));\n    memset(head, 0, sizeof(head));\n    num = 1;\n    n = read(), m = read(), p = read(), y = read();\n    s = n * (m + 1) + 1, t = n * (m + 1) + 2;\n    for(int i = 1; i <= p; ++ i) c[i] = read();\n    for(int j = 1; j <= m; ++ j)\n        for(int i = 1; i <= n; ++ i){\n            db val = 1;\n            for(int k = 1; k <= p; ++ k){\n                db f; scanf(\"%lf\", &f); val *= f;\n                g[i][j] += c[k] * val;\n            }\n        }\n    for(int i = 1; i <= n; ++ i){\n        add(s, Get(i, 1), inf);\n        add(Get(i, m + 1), t, inf);\n        for(int j = 1; j <= m; ++ j){\n            add(Get(i, j), Get(i, j + 1), g[i][j]);\n            add(Get(i, j + 1), Get(i, j), inf);\n        }\n    }\n    for(int cas = 1; cas <= y; ++ cas){\n        int i = read(), j = read(), k = read();\n        for(int x = 1; x <= m; ++ x)\n            if(x + k >= 1 && x + k <= m + 1)\n                add(Get(j, x), Get(i, x + k), inf);\n    }\n    Dinic();\n}\n\nint main(){\n    int Cas = read();\n    while(Cas--) solve();\n    return 0;\n}\n```",
        "postTime": 1617094251,
        "uid": 120351,
        "name": "When",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6054 [RC-02] \u5f00\u95e8\u5927\u5409"
    },
    {
        "content": "## \u6709\u56fe\u7684\u8be6\u7ec6\u89e3\u91ca\u548c\u4ee3\u66ff $(i,j+1) - (i,j)$ \u795e\u79d8\u8fde\u8fb9\u7684\u53e6\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\n\n\u4f5c\u4e3a\u7f51\u7edc\u6d41\u840c\u65b0\u7ec8\u4e8e\u5f04\u61c2\u4e86\uff0c\u697c\u4e0a\u90fd\u6ca1\u6709\u56fe\uff0c\u8fd9\u91cc\u7ed9\u653e\u4e2a\u56fe\uff0c\u5e76\u7ed9\u51fa\u6700\u4ee4\u4eba\u8d39\u89e3\u7684\u8fde\u8fb9\uff0c$(i,j+1) - (i,j)$ \u8fde $\\inf$ \u8fb9\u7684\u6837\u4f8b\u89e3\u91ca\u548c**\u53e6\u4e00\u79cd\u66f4\u7b80\u4fbf\u7684\u89e3\u51b3\u529e\u6cd5**\u3002\n\n### 1. \u89e3\u91ca $(i,j,k)$ \u9650\u5236\u8fb9\u7684\u8fde\u6cd5\n\n\n------------\n\n\n\u56fe\u4e2d\u7684\u6bcf\u4e2a\u70b9 $(i,j)$ \u8868\u793a\u7b2c $i$ \u4e2a\u4eba\u505a\u7b2c $j$ \u5957\u9898\u7684\u503c\uff0c\u5e76\u4e14\u6ca1\u6709\u8fde\u63a5\u4e0a\u9762\u8bf4\u7684\u90a3\u79cd\u53cd\u8fb9\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/93qnk0gg.png)\n\n\u6211\u4eec\u627e\u51fa\u5176\u4e2d\u4e00\u4e2a\u5355\u5143\u6765\u8be6\u7ec6\u89e3\u91ca\u9650\u5236 $k$ \u7684\u8fde\u6cd5\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ixxiyvqi.png)\n\n\u5728\u9009\u62e9\u65ad\u8fb9 $(2,3) - (2,4)$ \u4e4b\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u56fe\u8fd8\u662f\u901a\u8fc7\u4e24\u4e2a\u7eff\u7ebf\u76f8\u8fde\uff0c\u6240\u4ee5\u4e3a\u4e86\u5272\u5f00\u56fe\u9700\u8981\u5728\u4e24\u6761\u7eff\u7ebf\u7684\u516c\u5171\u8fb9\u518d\u5272\u6389\u4e00\u6761\u8fb9(\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u9009\u62e9\u4e0d\u5171\u7ebf\u7684\u5730\u65b9\u90fd\u65ad\u5f00\uff0c\u56e0\u4e3a\u90a3\u6837\u5c31\u4e0d\u662f\u6700\u5c0f\u5272\u4e86\uff0c\u5982\u679c\u90a3\u6837\u65ad\u7684\u8bdd $(2,3) - (2,4)$ \u5c31\u6ca1\u6709\u5fc5\u8981\u65ad\u5f00\u56fe\u4e5f\u53ef\u4ee5\u65ad\u5f00\uff0c\u4f60\u76f8\u5f53\u4e8e\u505a\u4e86\u522b\u7684\u9009\u62e9)\uff0c\u4e5f\u5c31\u8fbe\u5230\u4e86\u6211\u4eec\u8981\u6c42 $j$ \u7684\u9009\u62e9\u6bd4 $i$ \u7684\u9009\u62e9\u5927 $k$ \u7684\u8981\u6c42\u3002\n\n\u6ce8\u610f\uff1a\u6211\u4eec\u8fde\u63a5\u7684 inf \u8fb9\u53ea\u662f\u4e3a\u4e86\u8054\u901a\u4e24\u4e2a\u70b9\uff0c\u9650\u5236\u5272\u8fb9\uff0c\u800c\u4e14\u5272\u65ad\u5b83\u672c\u8eab\u5c31\u662f\u6ca1\u6709\u5b9e\u9645\u610f\u4e49\u7684\uff0c\u5176\u672c\u8eab\u4e0d\u80fd\u88ab\u5272\u6389\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u6c42\u7684\u662f\u6700\u5c0f\u5272\uff0c\u90a3\u663e\u7136\u53ea\u80fd\u5272\u4e0d\u4e3a inf \u7684\u8fb9\uff0c\u5982\u679c\u5176\u88ab\u5272\u5f00\uff0c\u8bf4\u660e\u8be5\u56fe\u65e0\u89e3\u3002\n\n\u6211\u4eec\u653e\u5230\u5b8c\u6574\u56fe\u4e0a\u628a\u65ad\u8fb9\u6a21\u62df\u51fa\u6765\u4e5f\u4e00\u6837\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/4hk8cfyh.png)\n\n\u6ce8\u610f\uff1a\u56fe\u7684\u5272\u6307\u7684\u662f\u5220\u9664\u8fb9\u4f7f\u5f97\u4ece $S$ \u65e0\u6cd5\u5230\u8fbe $T$\uff0c\u800c\u4e0d\u662f\u4ece $S$ \u5230 $T$ \u4e0a\u6ca1\u6709\u4efb\u4f55\u8fb9\u76f8\u8fde\uff0c\u6240\u4ee5\u65ad\u5f00 $(1,5)-(1,6)$ \u4e5f\u662f\u5408\u6cd5\u7684\u56fe\u7684\u5272\u3002\n\n### 2. \u89e3\u91ca $(i,j+1)-(i,j)$ \u7684 $\\inf$ \u8fb9\n\n\n------------\n\n\u91cd\u70b9\u6765\u5230\u6700\u540e\u90a3\u4e2a\u83ab\u540d\u5176\u5999\u7684\u8fde\u8fb9\uff0c$(i,j+1)-(i,j)$ \u7684 $\\inf$ \u8fb9\uff0c\u5176\u5b9e\u5b83\u662f\u4e3a\u4e86\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\u3002\n\n\u7ed9\u51fa\u4e00\u4e2a\u6837\u4f8b\uff0c\u6570\u636e\u6765\u81ea\u4e8e\u697c\u4e0a\u7684\u8bc4\u8bba\u533a@_Enthalpy\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/h1bbn7z9.png)\n\nm=5 ,\u9650\u5236 $(1,2,3)$ , $(2,3,3)$\uff0c\u663e\u7136\u662f\u65e0\u89e3\u7684\uff0c\u4f46\u662f\u5728\u6211\u4eec\u6784\u9020\u7684\u56fe\u91cc\u5374\u53ef\u4ee5\u901a\u8fc7\u5220\u9664 4 \u7ec4\u8fb9\u4f7f\u5176\u6709\u5c0f\u4e8e inf \u7684\u5272\u3002\n\n\u5176\u6839\u672c\u539f\u56e0\u662f\u56e0\u4e3a\uff0c$(2,1), (2,2), (2,3)$ \u8fd9\u4e09\u4e2a\u70b9\u56e0\u4e3a\u592a\u5c0f\uff0c\u6ca1\u6709\u5bf9\u5e94\u7684 $(3,j)$ \u4e0e\u5176\u8fde\u8fb9\uff0c\u6240\u4ee5\u5b83\u672c\u8d28\u4e0a\u6ca1\u6709\u53d7\u5230 $(2,3,3)$ \u8fd9\u7ec4\u7684\u9650\u5236\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u628a\u8fd9\u6837\u7684\u9650\u5236\u4f20\u9012\u4e0b\u53bb\uff0c\u6240\u4ee5\u5728\u8fde\u4e0a $(i,j+1) - (i,j)$ \u8fd9\u6837\u7684\u8fb9\u540e\uff0c\u518d\u770b\u8fd9\u5f20\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vueduuqg.png)\n\n\u53d1\u73b0\u521a\u624d\u7684\u5272\u4e0d\u8d77\u6548\u679c\u4e86\uff0c$S$ \u548c $T$ \u5728\u65b0\u56fe\u91cc\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6761\u7eff\u7ebf\u8fde\u63a5\u4e86\uff0c\u8fd9\u6837\u5c31\u628a\u9650\u5236\u4f20\u9012\u4e0b\u53bb\u4e86\u3002\n\n### 3. \u63d0\u4f9b\u4ee3\u66ff\u65b9\u6cd5\n\n\n------------\n\n\n\u8fd9\u91cc\u7ed9\u51fa\u53e6\u5916\u4e00\u79cd\u76f4\u63a5\u4e86\u5f53\u7684\u65b9\u6cd5\uff0c\u4ece\u672c\u8d28\u89e3\u51b3\u95ee\u9898\uff0c\u65e2\u7136\u662f\u6709\u4e9b\u70b9\u6ca1\u6709\u53d7\u5230\u9650\u5236\uff0c\u6211\u4eec\u5c31\u628a\u9650\u5236\u7ed9\u4e0a\u53bb\uff0c\u53ef\u4ee5\u53d1\u73b0 $(2,1), (2,2), (2,3), (3,4), (3,5)$ \u8fd9\u51e0\u4e2a\u70b9\uff0c\u56e0\u4e3a $(2,3,3)$ \u8fd9\u7ec4\u9650\u5236\uff0c\u65e0\u8bba\u4f55\u79cd\u65b9\u6848\uff0c\u8fd9\u4e9b\u70b9\u59cb\u7ec8\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u56e0\u4e3a\u6ca1\u6709\u5bf9\u5e94\u7684\u5176\u4ed6\u70b9\u548c\u5b83\u4eec\u8fdb\u884c\u5408\u6cd5\u7684\u5339\u914d\u3002\n\n\u4f8b\u5982\uff0c\u5982\u679c\u9009\u4e86 $(2,2)$\uff0c\u90a3\u4e48\u6211\u8d77\u7801\u8981\u9009\u62e9 $(3,-1)$ \u624d\u80fd\u6ee1\u8db3\u90a3\u7ec4\u9650\u5236\uff0c\u663e\u7136\u4e0d\u5408\u6cd5\u3002\n\n**\u6240\u4ee5\u6211\u4eec\u5c06\u8fd9\u4e9b\u4e0d\u5408\u6cd5\u70b9 $(i,j)$ \u7684 $(i,j) - (i,j+1)$ \u8fd9\u6761\u8fb9\uff0c\u6d41\u91cf\u53d8\u4e3a $\\inf$**\uff0c\u8fd9\u6761\u8fb9\u7684\u610f\u4e49\u5c31\u662f\u9009\u62e9 $(i,j)$\uff0c\u4f46\u8fd9\u79cd\u9009\u62e9\u672c\u8eab\u5c31\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u65ad\u5f00\u4e5f\u5c31\u662f\u53d8\u6210 $\\inf$ \u8fb9\uff0c\u4e0a\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ytqi3vcy.png)\n\n\n\u7d2b\u8272\u7684\u662f\u9650\u5236 $(1,2,3)$ \u9020\u6210\u7684\uff0c\u7eff\u8272\u7684\u662f\u9650\u5236 $(2,3,3)$ \u9020\u6210\u7684\u3002\n\n\u56e0\u4e3a\u8fd9\u4e24\u7ec4\u9650\u5236\uff0c\u6211\u4eec\u5c06\u8fd9\u4e9b\u8fb9\u7684\u6d41\u91cf\u53d8\u4e3a $\\inf$\uff0c\u8fd9\u6837\u5bf9\u4e8e\u4e00\u7ec4\u9650\u5236 $(x,y,k)$\uff0c\u6240\u6709\u7684 $(x,j)$ \u548c $(y,j)$ \u70b9\u90fd\u53d7\u5230\u4e86\u8be5\u9650\u5236\u7684\u6548\u679c\uff0c\u6ca1\u6709\u9057\u6f0f\uff0c\u95ee\u9898\u4e5f\u5c31\u5b8c\u7f8e\u89e3\u51b3\u4e86\u3002\n\n**\u4e00\u5b9a\u8981\u6ce8\u610f\uff01**\uff1a$m = 5$\uff0c\u5bf9\u4e8e $(1,2,-3)$ \u8fd9\u7ec4\u9650\u5236\uff0c$(2,1)$ \u662f\u4e00\u4e2a\u5408\u6cd5\u70b9\uff0c\u5e76\u4e0d\u7528\u53d8 $\\inf$ \u8fb9\uff0c\u867d\u7136\u6ca1\u6709\u5bf9\u5e94\u7684 $(1,j)$ \u548c\u5b83\u8fde\u8fb9\uff0c\u4f46\u5b9e\u9645\u4e0a\u53ea\u8981 $j>=2$ \u90a3\u4e48\u4e00\u4e2a\u70b9 $(1,j)$ \u5c31\u662f\u548c\u5b83\u5408\u6cd5\u914d\u5bf9\u7684\uff0c\u800cj\u663e\u7136\u5927\u4e8e $-2$\uff0c\u6240\u4ee5 $(2,1)$ \u8fd9\u4e2a\u70b9\u6240\u5bf9\u5e94\u7684 $1$ \u4f4d\u7f6e\u7684\u70b9\u4e00\u5b9a\u5408\u6cd5\uff0c\u5b83\u6ca1\u6709\u53d7\u5230\u9650\u5236\u7684\u539f\u56e0\u662f\u8fd9\u7ec4\u9650\u5236\u5bf9\u4e8e\u8fd9\u4e2a\u70b9\u6ca1\u6709\u610f\u4e49\u3002\n\n\u540c\u7406\uff0c\u5bf9\u4e8e\u70b9 $(1,5)$ \u540c\u6837\u4e5f\u4e0d\u53d7\u5230\u7ec4\u9650\u5236\u7684\u7ea6\u675f\uff0c\u7406\u7531\u540c\u4e0a\uff0c\u7531\u6b64\u53ef\u89c1\uff0c**\u5bf9\u4e8e $k<0$ \u7684\u7ea6\u675f\u6ca1\u6709\u6362 $\\inf$ \u8fb9\u7684\u5fc5\u8981\uff0c\u53ea\u6709 $k>0$ \u7684\u624d\u9700\u8981\u6362\u8fb9**\u3002\n\n\u9644\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 85\n#define maxd 200005\n#define M(x) memset(x,0,sizeof(x));\nstruct edge{\n\tint t,next;\n\tdouble v;\n} g[maxd<<3];\nconst double inf=100000007.0;\nconst double eps=1e-5;\ndouble val[maxn][maxn],ans;\nint head[maxd],c_head[maxd],dis[maxd],vis[maxd],tot=1,n,m,p,o,start,to,T,c[maxn];\nstd::queue<int> q;\nint make(int x,int y){return x*(m+1)-y+1;}\nvoid link(int x,int y,double z,double k=0)\n{\n\tg[++tot]=edge{y,head[x],z};head[x]=tot;\n\tg[++tot]=edge{x,head[y],k};head[y]=tot;\n}\nint bfs(void)\n{\n\tfor(int i=0;i<=to;i++) dis[i]=0,c_head[i]=head[i];\n\twhile(!q.empty()) q.pop();\n\tdis[start]=1;q.push(start);\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();q.pop();\n\t\tfor(int y,i=head[x];i;i=g[i].next)\n\t\t{\n\t\t\ty=g[i].t;\n\t\t\tif(dis[y]||g[i].v<eps) continue;\n\t\t\tdis[y]=dis[x]+1;\n\t\t\tq.push(y);\n\t\t}\n\t}\n\treturn dis[to];\n}\ndouble dfs(int x,double w)\n{\n\tif(x==to) {ans+=w;return w;}\n\tif(w==0) return 0;\n\tdouble sum=0;\n\tfor(int y,i=c_head[x];i&&eps<w-sum;i=g[i].next)\n\t{\n\t\tc_head[x]=i;y=g[i].t;\n\t\tif(dis[y]!=dis[x]+1) continue;\n\t\tdouble t=dfs(y,std::min(w-sum,g[i].v));\n\t\tif(t>=inf) return -1;\n\t\tif(t) g[i].v-=t,g[i^1].v+=t,sum+=t;\n\t}\n\treturn sum;\n}\nint main(void)\n{\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tM(val);M(head);M(c);M(vis);ans=0;tot=1;\n\t\tscanf(\"%d%d%d%d\",&n,&m,&p,&o);\n\t\tstart=make(n,0)+1;to=start+1;\n\t\tfor(int x,i=1;i<=p;i++) scanf(\"%d\",c+i);\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t{\n\t\t\t\tdouble sum=1,x;\n\t\t\t\tfor(int k=1;k<=p;k++)\n\t\t\t\t{\n\t\t\t\t\tscanf(\"%lf\",&x);sum*=x;\n\t\t\t\t\tval[i][j]+=sum*c[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int x,y,k,i=1;i<=o;i++)\n\t\t{\n\t\t\tscanf(\"%d%d%d\",&x,&y,&k);\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t\tif(j+k>=1&&j+k<=m+1) link(make(y,j),make(x,j+k),inf);\n\t\t\t\telse if(j+k>m) vis[make(y,j)]=1;\n\t\t\tk=-k;if(k>=0) continue;\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t\tif(j+k<1) vis[make(x,j)]=1;\n\t\t\t\telse break;\n\t\t}\n\t\tfor(int i=1;i<=n;i++) for(int j=1;j<=m;j++) link(make(i,j),make(i,j+1),vis[make(i,j)]?inf:val[i][j]);\n\t\tfor(int i=1;i<=n;i++) link(make(i,m+1),to,inf),link(start,make(i,1),inf);\n\t\twhile(bfs()&&ans<inf) dfs(start,inf*2);\n\t\tif(ans>=inf) printf(\"-1\\n\");\n\t\telse printf(\"%lf\\n\",ans);\n\t}\n} \n```\n",
        "postTime": 1645173630,
        "uid": 222757,
        "name": "Boeing",
        "ccfLevel": 6,
        "title": "P6054\u9898\u89e3"
    },
    {
        "content": "\u5b98\u65b9\u9898\u89e3\uff1ahttps://www.luogu.com.cn/blog/feecle6418/rcoi2020-day-1-ti-xie \n\n\u8fd9\u91cc\u63d0\u4f9b\u7684\u662f std\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define inf 1e10\nusing namespace std;\nint n,m,p,cnt=1,h[20005],dis[20005],gap[20005],S,T,N,c[85],Y;\ndouble f[85][85][85],cost[85][85];\nstruct Edge {\n\tint to,next;\n\tdouble flow;\n} e[600005];\nvoid Add_Edge(int x,int y,double z) {\n\te[++cnt]=(Edge) {\n\t\ty,h[x],z\n\t};\n\th[x]=cnt;\n\te[++cnt]=(Edge) {\n\t\tx,h[y],0\n\t};\n\th[y]=cnt;\n}\ndouble DFS(int now,double maxf,int s,int t) {\n\tif(now==t||maxf<1e-10)return maxf;\n\tdouble ret=0;\n\tfor(int i=h[now]; i; i=e[i].next) {\n\t\tint y=e[i].to;\n\t\tif(!e[i].flow||dis[y]+1!=dis[now])continue;\n\t\tdouble dlt=DFS(y,min(maxf,e[i].flow),s,t);\n\t\te[i].flow-=dlt,e[i^1].flow+=dlt;\n\t\tmaxf-=dlt,ret+=dlt;\n\t\tif(dis[s]==N||maxf<1e-10)return ret;\n\t}\n\tif(!(--gap[dis[now]]))dis[s]=N;\n\telse gap[++dis[now]]++;\n\treturn ret;\n}\ndouble SAP(int s,int t) {\n\tdouble ret=0;\n\tmemset(gap,0,sizeof(gap));\n\tmemset(dis,0,sizeof(dis));\n\tgap[0]=N;\n\twhile(dis[s]<N){\n\t\tret+=DFS(s,inf,s,t);\n\t\tif(ret>inf)return ret;\n\t}\n\treturn ret;\n}\nint pos(int x,int y) {\n\treturn (x-1)*(m+1)+y;\n}\nint main() {\n//\tfreopen(\"1.in\",\"r\",stdin);\n//\tfreopen(\"1.out\",\"w\",stdout);\n\tint Ttt;\n\tscanf(\"%d\",&Ttt);\n\twhile(Ttt--) {\n\t\tcnt=1;\n\t\tmemset(h,0,sizeof(h)),memset(e,0,sizeof(e)),memset(cost,0,sizeof(cost));\n\t\tscanf(\"%d%d%d%d\",&n,&m,&p,&Y);\n\t\tS=pos(n,m+1)+1,T=N=S+1;\n\t\tfor(int i=1; i<=p; i++)scanf(\"%d\",&c[i]);\n\t\tfor(int j=1; j<=m; j++) {\n\t\t\tfor(int i=1; i<=n; i++) {\n\t\t\t\tdouble gl=1;\n\t\t\t\tfor(int k=1; k<=p; k++) {\n\t\t\t\t\tscanf(\"%lf\",&f[i][j][k]);\n\t\t\t\t\tgl*=f[i][j][k];\n\t\t\t\t\tcost[i][j]+=gl*c[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=1; i<=n; i++) {\n\t\t\tAdd_Edge(S,pos(i,1),inf);\n\t\t\tAdd_Edge(pos(i,m+1),T,inf);\n\t\t\tfor(int j=1; j<=m; j++) {\n\t\t\t\tAdd_Edge(pos(i,j),pos(i,j+1),cost[i][j]);\n\t\t\t\tAdd_Edge(pos(i,j+1),pos(i,j),inf);\n\t\t\t}\n\t\t}\n\t\tfor(int i=1,x,y,k; i<=Y; i++) {\n\t\t\tscanf(\"%d%d%d\",&x,&y,&k);\n\t\t\tfor(int j=1; j<=m; j++){\n\t\t\t\tif(j+k>=1&&j+k<=m+1)Add_Edge(pos(y,j),pos(x,j+k),inf);\n\t\t\t}\n\t\t}\n\t\tdouble ans=SAP(S,T);\n\t\tif(ans<inf)printf(\"%.4lf\\n\",ans);\n\t\telse puts(\"-1\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1580964262,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6069 \u3010[RC-02] \u5f00\u95e8\u5927\u5409\u3011"
    },
    {
        "content": "\u670d\u4e86\uff0c\u88ab\u5361 eps \u4e86\u2026\u2026                   \n\n\u8003\u8651\u7f51\u7edc\u6d41\u4e0a\u6700\u5c0f\u5272\u89e3\u51b3\uff0c\u5efa\u7acb $O(nm)$ \u7ea7\u522b\u7684\u70b9\u5bf9\u91cf $(i,j)$ \u8868\u793a\u4e00\u4e2a\u70b9 $i$ \u9009\u62e9\u7b2c $j$ \u4e2a\u65b9\u6848\uff0c\u8003\u8651\u4ee5\u5982\u4e0b\u65b9\u5f0f\u5efa\u56fe\uff1a               \n\n\u4e0b\u6587\u4e2d\u7528\u4e09\u5143\u7ec4 $[a,b,c]$ \u8868\u793a\u70b9 $a$ \u5411 $b$ \u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $c$ \u7684\u8fb9\u3002\n\n1. $[(i,j),(i,j + 1),c_{i,j}],[S , (i,1) , Inf],[(i , m + 1 , T , Inf)]$ \u5176\u4e2d $c_{i,j}$ \u8868\u793a $(i,j)$ \u9009\u62e9\u65b9\u6848\u7684\u4ef7\u503c\u3002\u8fd9\u6837\u662f\u4e3a\u4e86\u6709\u4e00\u4e2a\u57fa\u672c\u7684\u201c\u5272\u201d\u7684\u6846\u67b6\uff0c\u64cd\u4f5c\u4e4b\u540e\u8dd1\u51fa\u7684\u6700\u5c0f\u5272\u5c31\u662f\u6bcf\u4e2a\u4eba\u5206\u914d\u4e00\u5957\u9898\u6240\u5f97\u7684\u6700\u5c0f\u671f\u671b\u6536\u76ca\uff0c\u540c\u65f6\u6ce8\u610f\u9700\u8981\u5efa\u7acb\u865a\u70b9\uff1b         \n\n2. \u63a5\u4e0b\u6765\u8003\u8651\u9650\u5236\u3002$(z , z + k) \\in [1 , m + 1],[(j , z) , (i , z + k) , Inf]$\uff0c\u7531\u4e8e\u6211\u4eec\u5efa\u7acb\u7684\u5272\u6a21\u578b\u5728\u5355\u72ec\u7684\u4e00\u6761\u7eb5\u5217\u4e0a\u7f16\u53f7\u8fde\u7eed\uff0c\u5982\u6b64\u64cd\u4f5c\u4e4b\u540e\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5982\u679c\u4f60\u5728 $(j,z)$ \u4e0a\u5272\u4e86\u4e00\u6761\u8fb9\uff0c\u4f60\u81f3\u5c11\u9700\u8981\u5728 $(j,z + k)$ \u4ee5\u540e\u5272\u4e00\u6761\u8fb9\u624d\u80fd\u4f7f\u5f97\u539f\u56fe\u4e0d\u8fde\u901a\u3002             \n\n3. $[(i,j+1) , (i,j) , Inf]$\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u6bd4\u8f83\u7cbe\u5999\uff08\u6211\u8fd8\u771f\u6ca1\u60f3\u5230\uff09\uff0c\u56e0\u4e3a\u4f60\u4f1a\u53d1\u73b0\u53ea\u7528\u4e0a\u8ff0\u4e24\u79cd\u5efa\u8fb9\u7ea6\u675f\u8fd9\u4e2a\u95ee\u9898\u662f\u65e0\u6cd5\u7ea6\u675f\u5b8c\u5168\u65e0\u89e3\u60c5\u51b5\uff0c\u6240\u4ee5\u6211\u4eec\u8fde\u4e00\u4e2a\u53cd\u5411\u8fb9\uff0c\u65b9\u4fbf\u56de\u6eaf\u3002\u5c31\u597d\u6bd4\u8bf4\u5982\u679c\u5f53\u524d\u65e0\u89e3\uff0c\u90a3\u5c31\u662f\u5f62\u5982\u4e00\u4e2a\u70b9 $(i,1)$ \u8d70\u5230\u4e86\u70b9 $(j,1+k)$ \u540e\uff0c$(j,1 + k)$ \u524d\u9762\u8fd8\u6709\u70b9\u6709 $2$ \u5f62\u5f0f\u4e0b\u7684\u9650\u5236\u8fde\u8fb9\uff0c\u8fd9\u6837\u7684\u60c5\u51b5\u662f\u65e0\u89e3\u7684\uff0c\u53cd\u5411\u8fde\u8fb9\u540e\u5c31\u53ef\u4ee5\u4ea7\u751f\u4e00\u6761\u503c\u4e3a Inf \u7684\u8def\u5f84\u5224\u65ad\u65e0\u89e3\uff0c\u7528 Enthalpy \u7684\u8bdd\u6765\u8bf4\u662f\u4e00\u79cd\u9650\u5236\u7684\u4f20\u9012\u6027\uff0c\u6bd4\u8f83\u6709\u610f\u601d\u7684\u8bf4\u6cd5\u3002\n\n\u6700\u540e\u6ce8\u610f\u4e00\u4e0b\u4e00\u4e9b eps \u76f8\u5173\u7684\u4e1c\u897f\uff0c\u4e0d\u8981\u628a eps \u5f00\u5c0f\uff0c\u6253\u6f0f\u4e86\u3002          \n\n\u6570\u636e\u591a\u6d4b\u3002\n\n```cpp\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 81 * 81 + 5 , Inf = 1e9 + 1 , N = 5e5 + 5;\nconst double eps = 1e-4;\nint n,m,p,y,c[Len],head[N],cnt = 1,dep[N],cur[N],s,t;\ndouble ans,w[85][85];\nstruct node\n{\n\tint next,to;double w;\n}edge[Len << 5];\nvoid add(int from,int to,double w)\n{\n\tedge[++ cnt].to = to;\n\tedge[cnt].next = head[from];\n\tedge[cnt].w = w;\n\thead[from] = cnt;\n}\nint BFS()\n{\n\tqueue<int> q;\n\tfor(int i = 1 ; i <= t ; i ++) dep[i] = 0;\n\tq.push(s);dep[s] = 1;cur[s] = head[s];\n\twhile(!q.empty())\n\t{\n\t\tint p = q.front();\n\t\tq.pop();\n\t\tif(p == t) break;\n\t\tfor(int e = head[p] ; e ; e = edge[e].next)\n\t\t{\n\t\t\tint to = edge[e].to;\n\t\t\tif(!dep[to] && edge[e].w > eps) \n\t\t\t{\n\t\t\t\tdep[to] = dep[p] + 1;\n\t\t\t\tcur[to] = head[to];\n\t\t\t\tq.push(to);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t];\n}\ndouble dfs(int u,double In)\n{\n\tif(u == t) return In;\n\tdouble Out = 0;\n\tfor(int e = cur[u] ; e && In > eps ; e = edge[e].next)\n\t{\n\t\tcur[u] = e;\n\t\tint to = edge[e].to;\n\t\tif(dep[to] == dep[u] + 1 && edge[e].w > eps)\n\t\t{\n\t\t\tdouble res = dfs(to , min(In , edge[e].w));\n\t\t\tIn -= res;\n\t\t\tOut += res;\n\t\t\tedge[e].w -= res;\n\t\t\tedge[e ^ 1].w += res;\n\t\t\tif(In <= eps) break;\n\t\t}\n\t}\n\tif(Out <= eps) dep[u] = 0;\n\treturn Out;\n}\ndouble cc;\nint X,Y,k;\nint Calc(int x,int y){return (x - 1) * (m + 1) + y;}\nint main()\n{\n\tint T;scanf(\"%d\",&T);\n\twhile(T --)\n\t{\n\t\t\n\t\tscanf(\"%d %d %d %d\",&n,&m,&p,&y);\n\t\ts = n * (m + 1) + 1 , t = s + 1;\n\t\tfor(int i = 1 ; i <= p ; i ++) scanf(\"%d\",&c[i]);\n\t\t\tfor(int j = 1 ; j <= m ; j ++)\n\t\t\tfor(int i = 1 ; i <= n ; i ++)\n\t\t\t{\n\t\t\t\tdouble ret = 1.0;\n\t\t\t\tw[i][j] = 0;\n\t\t\t\tfor(int k = 1 ; k <= p ; k ++) \n\t\t\t\t{\n\t\t\t\t\tscanf(\"%lf\",&cc);\n\t\t\t\t\tret = ret * cc;\n\t\t\t\t\tw[i][j] += ret * c[k];\n\t\t\t\t}\n\t\t\t}\n\t\tfor(int i = 1 ; i <= n ; i ++)\n\t\t{\n\t\t\tadd(s , Calc(i , 1) , Inf) , add(Calc(i , 1) , s , 0);\n\t\t\tadd(Calc(i , m + 1) , t , Inf) , add(t , Calc(i , m + 1) , 0);\n\t\t\tfor(int j = 1 ; j <= m ; j ++)\n\t\t\t{\n\t\t\t\tadd(Calc(i , j) , Calc(i , j + 1) , w[i][j]) , add(Calc(i , j + 1) , Calc(i , j) , 0);\n\t\t\t\tadd(Calc(i , j) , Calc(i , j + 1) , 0) , add(Calc(i , j + 1) , Calc(i , j) , Inf);\n\t\t\t}\n\t\t}\n\t\twhile(y --)\n\t\t{\n\t\t\tscanf(\"%d %d %d\",&X,&Y,&k);\n\t\t\tfor(int i = 1 ; i <= m + 1 ; i ++) \n\t\t\t{\n\t\t\t\tif(1 > i + k || i + k > m + 1) continue;\n\t\t\t\tadd(Calc(Y , i) , Calc(X , i + k) , Inf) , add(Calc(X , i + k) , Calc(Y , i) , 0);\n\t\t\t}\n\t\t}\n\t\twhile(BFS()) \n\t\t{\n\t\t\tans += dfs(s , Inf);\n\t\t\tif(ans >= Inf) break;\n\t\t}\n\t\t(ans >= Inf) ? puts(\"-1\") : printf(\"%.5lf\\n\",ans);\n\t\tfor(int i = 1 ; i <= t ; i ++) head[i] = 0;\n\t\tcnt = 1;ans = 0;\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1636249526,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6054 [RC-02] \u5f00\u95e8\u5927\u5409"
    },
    {
        "content": "\u5efa\u6a21\u597d\uff08duliu\uff09\u9898\uff0c\u5b98\u65b9\u9898\u89e3\u5173\u4e8e\u5efa\u6a21\u8fd9\u5757\u7ed9\u7684\u975e\u5e38\u6577\u884d\uff08\u867d\u7136\u5927\u5bb6\u5e94\u8be5\u90fd\u770b\u5f97\u61c2\uff09\uff0c\u7a0d\u5fae\u8bb2\u4e00\u4e0b\u3010\u5927\u96fe\u3011  \n\u9996\u5148\u9884\u5904\u7406 $a_{i,j}$ \u4e3a\u7b2c $i$ \u4e2a\u4eba\u505a\u7b2c $j$ \u5957\u9898\u7684\u671f\u671b\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u6bd4\u8f83\u5751\u7684\u70b9\u5c31\u662f\u505a\u9898\u662f roguelike \u673a\u5236\u7684\uff0c\u8981\u4e00\u9053\u9898\u505a\u5bf9\u4e86\u624d\u80fd\u505a\u4e0b\u4e00\u9898\uff08\u8fd9\u4e5f\u662f\u5f00\u95e8\u5927\u5409\u8fd9\u4e2a\u8282\u76ee\u7684\u673a\u5236\uff0c\u4f46\u662f\u6ca1\u770b\u8fc7\u6216\u8005\u6ca1\u8003\u8651\u5c31\u53ef\u80fd\u4f1a\u88ab\u5751\uff09\uff0c\u6240\u4ee5\u6982\u7387\u662f\u8981\u7d2f\u4e58\u7684\u3002  \n\n\u6b64\u5904\u7528\u6700\u5927\u6d41\u4e0d\u592a\u597d\u89e3\u91ca\uff0c\u7528\u6700\u5c0f\u5272\u5c31\u5f88\u597d\u7406\u89e3\u3002  \n\u6765\u8003\u8651\u600e\u4e48\u641e\uff0c\u628a\u6bcf\u4e2a\u4eba\u62c6\u6210 $m+1$ \u4e2a\u70b9\uff0c\u53ef\u4ee5\u5f97\u5230 $m$ \u6761\u8fb9\uff0c\u5bf9\u5e94 $m$ \u5957\u9898\u3002\u5047\u5b9a $(i,j)$ \u4e3a\u7b2c $i$ \u4e2a\u4eba\u7684\u7b2c $j$ \u4e2a\u70b9  \uff0c\u5219\n 1. $(i,j)\\stackrel{a_{i,j}}{\\to} (i,j+1)$  \n \n  \u8fd9\u4e00\u6b65\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u6bcf\u4e2a\u4eba\u9009\u4e00\u5957\u9898\uff0c\u6240\u4ee5\u4f1a\u4f18\u5148\u5272\u6700\u5c0f\u7684\u4e00\u6761\uff0c\u4e5f\u5c31\u662f\u53d6\u5230\u6700\u5c0f\u671f\u671b\u3002\n\n 2. $(i,j+1)\\stackrel{+\\infty}{\\to}(i,j)$\n \n  \u56e0\u4e3a\u8981\u8003\u8651\u9650\u5236\uff0c\u6240\u4ee5\u8981\u7ed9\u4e00\u4e2a\u53cd\u6094\u7684\u673a\u4f1a\u3002\uff08\u4f46\u4e0d\u52a0\u9664\u4e86 subtask 1 \u90fd\u8fc7\u5f97\u53bb=-=\uff0c\u4e0d\u592a\u786e\u5b9a\u662f\u4e0d\u662f\u8fd9\u4e2a\u529f\u80fd\uff09\n\n 3. $\\text{S}\\stackrel{+\\infty}{\\to}(i,1)$\uff0c$(i,m+1)\\stackrel{+\\infty}{\\to}\\text{T}$\n \n  \u7ecf\u5178\u8fde\u8fb9\uff0c\u4fdd\u8bc1\u6bcf\u4eba\u90fd\u80fd\u9009\u5230\u9898\u3002\n\n 4. \u8003\u8651\u9650\u5236 $(i,j,k)$\uff0c$\\forall\\ x\\in[1,m-k+1]$\uff0c$(j,x)\\stackrel{+\\infty}{\\to}(i,x+k)$\n \n  \u672c\u9898\u7684\u6838\u5fc3\uff0c\u8003\u8651\u8fd9\u6837\u8fde\u8fb9\u662f\u5982\u4f55\u8d77\u6548\u7684\uff0c\u5047\u5b9a\u9009\u62e9\u4e86 $(j,x)$ \u8fd9\u6837\u7684\u7ec4\u5408\uff0c\u90a3\u4e48 $(j,x)$ \u7684\u4e0b\u4e00\u6761\u8fb9\u5c31\u4f1a\u88ab\u5272\u6389\uff0c\u6b64\u65f6 $(j,x)$ \u8fd9\u4e2a\u70b9\u662f\u8fde\u5411 $(i,x+k)$ \u7684\uff0c\u4ee3\u8868 $(i,x+k)$ \u88ab\u4e00\u6761\u6743\u503c\u4e3a $+\\infty$ \u7684\u8fb9\u8fde\u901a\uff0c\u7565\u52a0\u601d\u7d22\u5c31\u4f1a\u53d1\u73b0\uff0c\u5982\u679c\u5272\u8fd9\u6761 $+\\infty$ \u7684\u8fb9\uff0c\u90a3\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa $-1$ \u7136\u540e\u4e0b\u4e00\u7ec4\u6570\u636e\u4e86\uff1b\u5982\u679c\u5272 $(i,x+k)$ \u8fd9\u4e2a\u70b9\u5411\u4e0a\u7684\u8fb9\uff0c\u4e0d\u8bba\u5272\u54ea\u6761\u90fd\u662f\u6ca1\u7528\u7684\uff0c\u56e0\u4e3a $(i,x+k)$ \u8fd9\u4e2a\u70b9\u88ab\u8fde\u901a\u4e86\uff0c\u56e0\u6b64\u53ea\u80fd\u8003\u8651\u5411\u4e0b\u5272\uff0c\u4e5f\u5c31\u505a\u5230\u4e86\u9898\u76ee\u4e2d\u8981\u6c42\u7684\u7f16\u53f7\u5927 $k$\u3002  \n\n\u6b64\u65f6\u5168\u90e8\u8fb9\u5c31\u88ab\u5efa\u5b8c\u4e86\uff0c\u76f4\u63a5\u8dd1\u4e00\u904d Dinic \u5c31\u5f97\u5230\u4e86\u7b54\u6848\uff0c\u4f46\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u7b14\u8005\u7684 Dinic \u592a\u4e11\uff0c\u9700\u8981\u52a0\u4e00\u4e2a\u526a\u679d\uff0c\u4e5f\u5c31\u662f\u4e0a\u6587\u8bf4\u5230\u7684\uff0c\u5982\u679c\u5272 $+\\infty$ \u8fd9\u6761\u8fb9\u90a3\u4e48\u76f4\u63a5\u8f93\u51fa $-1$\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n```cpp\n#include<bits/stdc++.h>\n#define N 800\n#define M 200000\n#define eps 1e-10\n#define inf 1e18\n#define reg register\n#define inl inline\n#define db double\nusing namespace std;\nint cnt,fst[M+5],nxt[M+5],to[M+5],cur[M+5];\ndb w[M+5];\nint n,m,p,q,c[N+5],dep[M+5],S,T;\ndb a[N+5][N+5];\ninl void AddEdge(reg int u,reg int v,reg db c)\n{\n\tto[++cnt]=v;\n\tnxt[cnt]=fst[u];\n\tfst[u]=cnt;\n\tw[cnt]=c;\n}\ninl bool Bfs()\n{\n\tmemset(dep,0,sizeof(dep));\n\tqueue <int> q;\n\tq.push(S);\n\tdep[S]=1;\n\twhile(!q.empty())\n\t{\n\t\treg int u=q.front();\n\t\tq.pop();\n\t\tfor(reg int i=fst[u];i;i=nxt[i])\n\t\t{\n\t\t\treg int v=to[i];\n\t\t\tif(!dep[v] && w[i]>eps)\n\t\t\t{\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[T];\n}\ndb Dfs(reg int u,reg db flow)\n{\n\tif(u==T || flow<eps) return flow;\n\treg db used=0;\n\tfor(reg int &i=cur[u];i;i=nxt[i])\n\t{\n\t\treg int v=to[i];\n\t\tif(dep[v]==dep[u]+1 && w[i]>eps)\n\t\t{\n\t\t\treg db fl=Dfs(v,min(flow,w[i]));\n\t\t\tif(fl>eps)\n\t\t\t{\n\t\t\t\tused+=fl;\n\t\t\t\tflow-=fl;\n\t\t\t\tw[i]-=fl;\n\t\t\t\tw[i^1]+=fl;\n\t\t\t\tif(flow<eps) break;\n\t\t\t}\n\t\t}\n\t}\n\treturn used;\n}\ninl db Dinic()\n{\n\treg db res=0;\n\twhile(Bfs())\n\t{\n\t\tmemcpy(cur,fst,sizeof(fst));\n\t\tres+=Dfs(S,inf);\n\t\tif(res>inf) break;\n\t\t//printf(\" $ : %.2lf\\n\",res);\n\t}\n\treturn res;\n}\ninl void Init()\n{\n\tcnt=1;\n\tmemset(fst,0,sizeof(fst));\n\tmemset(w,0,sizeof(w));\n\tmemset(a,0,sizeof(a));\n}\nint main()\n{\n\treg int Time;\n\tscanf(\"%d\",&Time);\n\twhile(Time--)\n\t{\n\t\tInit();\n\t\tscanf(\"%d %d %d %d\",&n,&m,&p,&q);\n\t\tfor(reg int i=1;i<=p;i++) scanf(\"%d\",&c[i]);\n\t\tfor(reg int i=1;i<=m;i++)//\u5957\u9898\n\t\t{\n\t\t\tfor(reg int j=1;j<=n;j++)//\u9009\u624b\n\t\t\t{\n\t\t\t\treg db tmp=1;\n\t\t\t\tfor(reg int k=1;k<=p;k++)//\u9898\u76ee\n\t\t\t\t{\n\t\t\t\t\treg db x;\n\t\t\t\t\tscanf(\"%lf\",&x);\n\t\t\t\t\ttmp*=x;\n\t\t\t\t\ta[j][i]+=1.0*c[k]*tmp;\n\t\t\t\t\t// a[ i ][ j ] \u7b2c i \u4e2a\u4eba\u505a\u7b2c j \u5957\u9898\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tS=0;\n\t\tT=n*(m+1)+1;\n\t\tfor(reg int i=1;i<=n;i++)//\u9009\u624b\n\t\t{\n\t\t\treg int bas=(i-1)*(m+1);\n\t\t\tAddEdge(S,bas+1,inf); AddEdge(bas+1,S,0);\n\t\t\tAddEdge(bas+m+1,T,inf); AddEdge(T,bas+m+1,0);\n\t\t\tfor(reg int j=1;j<=m;j++)//\u9898\u76ee\n\t\t\t{\n\t\t\t\tAddEdge(bas+j,bas+j+1,a[i][j]); AddEdge(bas+j+1,bas+j,0);\n\t\t\t\tAddEdge(bas+j+1,bas+j,inf); AddEdge(bas+j,bas+j+1,0);\n\t\t\t}\n\t\t}\n\t\tfor(reg int i=1;i<=q;i++)\n\t\t{\n\t\t\treg int x,y,z;\n\t\t\tscanf(\"%d %d %d\",&x,&y,&z);\n\t\t\treg int basx=(x-1)*(m+1),basy=(y-1)*(m+1);\n\t\t\tfor(reg int j=1;j<=m;j++)\n\t\t\t{\n\t\t\t\tif(j+z>=1 && j+z<=m+1)\n\t\t\t\t{\n\t\t\t\t\tAddEdge(basy+j,basx+j+z,inf); AddEdge(basx+j+z,basy+j,0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treg db ans=Dinic();\n\t\tans<inf?printf(\"%.5lf\",ans):printf(\"-1\");\n\t\tif(Time) puts(\"\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1600954345,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6054 \u3010[RC-02] \u5f00\u95e8\u5927\u5409\u3011"
    },
    {
        "content": "\u6211\u4e0d\u662f\u5f88\u7406\u89e3\u90a3\u4e2a\u53cd\u5411\u8fb9\u5728\u5e72\u5565\u554a\uff01\u6240\u4ee5\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u9650\u5236\u6bcf\u6761\u94fe\u53ea\u5272\u4e00\u6761\u8fb9\u7684\u65b9\u6cd5\u662f\uff0c\u76f4\u63a5\u7ed9\u94fe\u4e0a\u6bcf\u6761\u8fb9\u8fb9\u6743\u52a0\u4e0a $\\infty$\uff0c\u6700\u540e\u51cf\u53bb $n\\times \\infty$\u3002\u5982\u679c\u51cf\u5b8c\u4e86\u4ecd\u7136 $>\\infty$ \u90a3\u5c31\u65e0\u89e3\u3002\n\n\u56e0\u4e3a\u548c\u522b\u7684\u9898\u89e3\u4ee3\u7801\u51e0\u4e4e\u6ca1\u6709\u533a\u522b\uff0c\u53ea\u653e[\u63d0\u4ea4\u8bb0\u5f55](https://www.luogu.com.cn/record/107234548)\u3002\u662f\u6539\u7684 do_while_true \u9898\u89e3\u91cc\u7684\u4ee3\u7801\u3002\u6ce8\u610f $\\infty$ \u5f00\u592a\u5927\u7684\u8bdd\u7cbe\u5ea6\u4f1a\u70b8\u3002\n\n",
        "postTime": 1680839653,
        "uid": 152213,
        "name": "\u534e\u5c71\u62a1\u5251",
        "ccfLevel": 9,
        "title": "P6054 [RC-02] \u5f00\u95e8\u5927\u5409 \u9898\u89e3"
    },
    {
        "content": "\u4e00\u5957\u9898\u91cc\u9762\u7684\u5404\u4e2a\u9898\u662f\u5047\u7684\uff0c\u53ef\u4ee5\u5904\u7406\u51fa $w_{i,j}$ \u4e3a\u7b2c $i$ \u4e2a\u4eba\u9009\u7b2c $j$ \u5957\u9898\u7684\u671f\u671b\u5f97\u5206\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\u6765\u8bb2\uff0c\u6709 $m$ \u79cd\u9009\u62e9\u5957\u9898\uff0c\u53ea\u80fd\u9009\u62e9\u4e00\u4e2a\u5957\u9898\uff0c\u8981\u6c42\u4ef7\u503c\u6700\u5c0f\uff0c\u4e8e\u662f\u60f3\u5230\u4e00\u4e2a\u6700\u5c0f\u5272\u7684\u7ecf\u5178\u5efa\u56fe\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\uff0c\u4ece $S$ \u5230 $T$ \u8fde\u4e00\u6761\u957f\u5ea6\u4e3a $m$ \u7684\u94fe\uff0c\u8fb9\u7684\u6d41\u91cf\u4f9d\u6b21\u4e3a\u8fd9\u4e2a\u4eba\u9009\u62e9\u7b2c $i$ \u5957\u9898\u7684\u671f\u671b\u5f97\u5206\u3002\n\n\u8003\u8651\u600e\u6837\u63cf\u8ff0\u9650\u5236\uff0c\u82e5\u5272\u4e86 $j$ \u7684\u7b2c $l$ \u6761\u8fb9\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u5272 $i$ \u7684\u524d $(j+k-1)$ \u6761\u8fb9\u3002\n\n\u90a3\u4e48\u5c31\u4ece $j$ \u7684\u7b2c $l$ \u6761\u8fb9\u7684\u8d77\u70b9\uff0c\u5411 $i$ \u7684\u524d $(j+k-1)$ \u6761\u8fb9\u7684\u7ec8\u70b9\u8fde\u4e00\u6761 $+\\infty$\uff0e\n\n\u4f46\u662f\u8981\u6ce8\u610f\u5230\uff0c\u9650\u5236\u548c\u9650\u5236\u4e4b\u95f4\u662f\u6709\u4f20\u9012\u6027\u7684\uff0c\u5047\u82e5\u6709 $1$ \u6bd4 $2$ \u5927 $1$\uff0c$2$ \u6bd4 $3$ \u5927 $1$\uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u6ee1\u8db3 $1$ \u6bd4 $3$ \u5927 $2$\uff0e\n\n\u5c06\u4e00\u5f00\u59cb $S$ \u5230 $T$ \u7684\u82e5\u5e72\u6761\u957f\u5ea6\u4e3a $m$ \u7684\u94fe\uff0c\u8fde\u4e00\u6761\u53cd\u5411\u7684\u6d41\u91cf\u4e3a $+\\infty$ \u7684\u8fb9\uff0c\u8fd9\u6837\u9650\u5236\u548c\u9650\u5236\u7ec4\u6210\u7684\u9650\u5236\u4e5f\u88ab\u6ee1\u8db3\u4e86\u3002\n\n**\u6700\u5c0f\u5272 \u5efa\u56fe\u6a21\u578b\uff1a\u6bcf\u4e2a\u4f4d\u7f6e $n$ \u9009 $1$\uff0c\u6c42\u6700\u5c0f\u4ee3\u4ef7\uff0c$S$ \u5230 $T$ \u8fde\u82e5\u5e72\u6761\u957f\u5ea6\u4e3a $n$\uff0c\u6d41\u91cf\u4f9d\u6b21\u4e3a\u6bcf\u79cd\u9009\u62e9\u7684\u4ee3\u4ef7\uff0c\u6c42\u6700\u5c0f\u5272\u3002**\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#define pb emplace_back\n#define mp std::make_pair\n#define fi first\n#define se second\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef std::pair<int, int> pii;\ntypedef std::vector<int> vi;\nconst ll mod = 998244353;\nll Add(ll x, ll y) { return (x+y>=mod) ? (x+y-mod) : (x+y); }\nll Mul(ll x, ll y) { return x * y % mod; }\nll Mod(ll x) { return x < 0 ? (x + mod) : (x >= mod ? (x-mod) : x); }\nll cadd(ll &x, ll y) { return x = (x+y>=mod) ? (x+y-mod) : (x+y); }\nll cmul(ll &x, ll y) { return x = x * y % mod; }\ntemplate <typename T> T Max(T x, T y) { return x > y ? x : y; }\ntemplate<typename T, typename... T2> T Max(T x, T2 ...y) { return Max(x, y...); }\ntemplate <typename T> T Min(T x, T y) { return x < y ? x : y; }\ntemplate<typename T, typename... T2> T Min(T x, T2 ...y) { return Min(x, y...); }\ntemplate <typename T> T cmax(T &x, T y) { return x = x > y ? x : y; }\ntemplate <typename T> T cmin(T &x, T y) { return x = x < y ? x : y; }\ntemplate <typename T>\nT &read(T &r) {\n\tr = 0; bool w = 0; char ch = getchar();\n\twhile(ch < '0' || ch > '9') w = ch == '-' ? 1 : 0, ch = getchar();\n\twhile(ch >= '0' && ch <= '9') r = r * 10 + (ch ^ 48), ch = getchar();\n\treturn r = w ? -r : r;\n}\ntemplate<typename T1, typename... T2>\nvoid read(T1 &x, T2& ...y) { read(x); read(y...); }\nconst int N = 100010;\nconst int M = 500010;\nconst ll INF = 0x7fffffffffffffff;\nconst ld eps = 1e-10;\nint n, m, p, y, c[N], pos[81][81];\nld f[81][81][81], w[81][81];\nint tot, S, T, ent = 1, head[N], cur[N], dis[N];\nstruct Edge {\n\tint to, nxt;\n\tld fl;\n}e[M];\ninline void add(int x, int y, ld z) {\n\te[++ent].to = y; e[ent].fl = z; e[ent].nxt = head[x]; head[x] = ent;\n\te[++ent].to = x; e[ent].fl = 0; e[ent].nxt = head[y]; head[y] = ent;\n}\nbool bfs() {\n\tfor(int i = 1; i <= tot; ++i) dis[i] = -1, cur[i] = head[i];\n\tstd::queue<int>q;\n\tq.push(S); dis[S] = 0;\n\twhile(!q.empty()) {\n\t\tint x = q.front(); q.pop();\n\t\tfor(int i = head[x]; i; i = e[i].nxt) {\n\t\t\tint v = e[i].to;\n\t\t\tif(dis[v] == -1 && e[i].fl > eps) {\n\t\t\t\tdis[v] = dis[x] + 1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[T] != -1;\n}\nbool qwqbfs() {\n\tfor(int i = 1; i <= tot; ++i) dis[i] = -1;\n\tstd::queue<int>q;\n\tq.push(S); dis[S] = 0;\n\twhile(!q.empty()) {\n\t\tint x = q.front(); q.pop();\n\t\tfor(int i = head[x]; i; i = e[i].nxt) {\n\t\t\tint v = e[i].to;\n\t\t\tif(dis[v] == -1 && e[i].fl == INF) {\n\t\t\t\tdis[v] = dis[x] + 1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[T] != -1;\n}\nld dfs(int x, ld lim) {\n\tif(x == T) return lim;\n\tld flow = 0;\n\tfor(int i = cur[x]; i && flow < lim; i = e[i].nxt) {\n\t\tint v = e[i].to; cur[x] = i;\n\t\tif(dis[v] == dis[x] + 1 && e[i].fl > eps) {\n\t\t\tld f = dfs(v, Min(e[i].fl, lim - flow));\n\t\t\tflow += f; e[i].fl -= f; e[i^1].fl += f;\n\t\t}\n\t}\n\treturn flow;\n}\nld dinic() {\n\tld mxfl = 0;\n\twhile(bfs())\n\t\tmxfl += dfs(S, INF);\n\treturn mxfl;\n}\nvoid solve() { for(int i = 1; i <= tot; ++i) head[i] = 0; tot = 0; ent = 1;\n\tread(n, m, p, y);\n\tfor(int i = 1; i <= p; ++i) read(c[i]);\n\tfor(int j = 1; j <= m; ++j)\n\t\tfor(int i = 1; i <= n; ++i)\n\t\t\tfor(int k = 1; k <= p; ++k) {\n\t\t\t\tdouble qwq; scanf(\"%lf\", &qwq);\n\t\t\t\tf[i][j][k] = qwq;\n\t\t\t}\n\tfor(int i = 1; i <= n; ++i)\n\t\tfor(int j = 1; j <= m; ++j) {\n\t\t\tld t = 1; w[i][j] = 0;\n\t\t\tfor(int k = 1; k <= p; ++k) {\n\t\t\t\tt *= f[i][j][k];\n\t\t\t\tw[i][j] += t * c[k];\n\t\t\t}\n\t\t}\n\tS = ++tot; T = ++tot;\n\tfor(int i = 1; i <= n; ++i) {\n\t\tpos[i][0] = S;\n\t\tfor(int j = 1; j <= m; ++j) {\n\t\t\tif(j < m) pos[i][j] = ++tot;\n\t\t\telse pos[i][j] = T;\n\t\t\tadd(pos[i][j-1], pos[i][j], w[i][j]);\n\t\t\tadd(pos[i][j], pos[i][j-1], INF);\n\t\t}\n\t}\n\tfor(int o = 1; o <= y; ++o) {\n\t\tint i, j, k; read(i, j, k);\n\t\tfor(int a = 1; a <= m; ++a)\n\t\t\tif(a-1+k >= 1 && a-1+k <= m)\n\t\t\t\tadd(pos[j][a-1], pos[i][a-1+k], INF);\n\t}\n\tif(qwqbfs()) {\n\t\tputs(\"-1\");\n\t\treturn ;\n\t}\n\tdouble qwq = dinic();\n\tprintf(\"%lf\\n\", qwq);\n}\nsigned main() {\n\tint T; read(T);\n\twhile(T--)\n\t\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1642428802,
        "uid": 223298,
        "name": "do_while_true",
        "ccfLevel": 8,
        "title": "\u300c\u9898\u89e3\u300d\u6d1b\u8c37 P6054 [RC-02] \u5f00\u95e8\u5927\u5409"
    }
]