[
    {
        "content": "### \u601d\u8def\uff1a\n$\\quad\\quad$**\u8d2a\u5fc3+\u6570\u5b66**\n\n$\\quad$\u5148\u6765\u8bb2\u4e0b\u666e\u901a\u5747\u5206\u7eb8\u724c\u95ee\u9898\uff1a\n\n\u3000\u3000\u3000\u3000\u666e\u901a\u5747\u5206\u7eb8\u724c\u95ee\u9898\u5c31\u662f$n$\u4e2a\u5c0f\u670b\u53cb\u6392\u6210\u4e00\u5217\uff0c\u5404\u81ea\u6709$a[i]$\u5f20\u724c\uff0c\u6bcf\u4e2a\u4eba\u53ea\u80fd\u7ed9\u76f8\u90bb\u7684\u4eba\u4f20\u9012\u7eb8\u724c\uff0c\u95ee\u81f3\u5c11\u9700\u8981\u4f20\u9012\u591a\u5c11\u5f20\u7eb8\u724c\u624d\u80fd\u4f7f\u6bcf\u4e2a\u5c0f\u670b\u53cb\u724c\u7684\u4e2a\u6570\u76f8\u7b49\u3002\n\n\u3000\u3000\u3000\u3000\u8bbe\u603b\u724c\u6570\u4e3a$sum$\uff08\u5373$sum=\\sum{a[i]}$\uff09\uff0c\u5219\u6bcf\u4e2a\u4eba\u6700\u540e\u4f1a\u5404\u81ea\u6709$T=\\frac{sum}{n}$\u5f20\u724c\uff0c\u8bbe$g[i]=T-a[i]$\uff0c\u5219\u8ba9\u524d$k$\u4e2a\u4eba\u724c\u6570\u76f8\u540c\u9700\u8981\u7684\u4ea4\u6362\u724c\u6570\u4e3a$\\sum\\limits_{i=1}^{i\\leq k}{|s[i]|}$\uff0c\u5176\u4e2d$s[i]=\\sum\\limits_{j=1}^{j\\leq i}{g[i]}$\uff0c\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff0c\u8981\u8ba9\u524d$k$\u4e2a\u4eba\u724c\u6570\u76f8\u540c\uff0c\u8981\u4f9d\u6b21\u8ba9\u524d$1,2,3\u2026k-1$\u4e2a\u4eba\u724c\u6570\u76f8\u540c\uff0c\u591a\u9000\u5c11\u8865\uff0c\u4f1a\u4e0e\u540e\u8fb9\u7684\u4eba\u53d1\u751f\u4e8c\u8005\u4e4b\u5dee\u7edd\u5bf9\u503c\u7684\u724c\u6570\u4ea4\u6362\u3002\u6240\u4ee5\u79fb\u52a8\u603b\u724c\u6570$ans=\\sum{|s[i]|}$\u3002\n\n\u3000\u3000\u518d\u6765\u8bb2\u4e0b\u672c\u9898\u7684\u73af\u5f62\u5747\u5206\u7eb8\u724c\u95ee\u9898\uff1a\n\n\u3000\u3000\u3000\u3000\u73af\u5f62\u5747\u5206\u7eb8\u724c\u95ee\u9898\u5c31\u662f$n$\u4e2a\u5c0f\u670b\u53cb\u56f4\u6210\u4e86\u4e00\u5708\uff08\u7b49\u540c\u4e8e\u7b2c\u4e00\u4eba\u548c\u6700\u540e\u4e00\u4eba\u76f8\u90bb\uff09\uff0c\u8fd9\u6837\u7684\u8bdd\u5176\u5b9e\u53ef\u4ee5\u540c\u6837\u7684\u5904\u7406\u3002\n\n\u3000\u3000\u3000\u3000\u4ed4\u7ec6\u601d\u8003\u73af\u5f62\u5747\u5206\u7eb8\u724c\u95ee\u9898\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff1a\u5fc5\u5b9a\u81f3\u5c11\u6709\u4e24\u4e2a\u76f8\u90bb\u7684\u4eba\u4e0d\u9700\u8981\u4ece\u522b\u4eba\u90a3\u91cc\u83b7\u5f97\u7eb8\u724c\uff08\u8fd9\u662f\u663e\u7136\u7684\uff0c\u4e0d\u59a8\u8bbe\u8fd9\u4e24\u4e2a\u4eba\u7684\u4f4d\u7f6e\u4e3a$i$\u548c$i+1$\uff0c\u5219\u73af\u5f62\u5e8f\u5217\u4e2d\u5fc5\u5b9a\u6709\u6ee1\u8db3\u6761\u4ef6$a[i]\\leq T\\;\\;a[i+1]\\geq T$\u7684\u4e24\u4e2a\u76f8\u90bb\u4f4d\u7f6e\uff0c\u8fd9\u6837$a[i],\\;a[i+1]$\u4e4b\u95f4\u6ca1\u6709\u4ea4\u6362\uff0c$a[i]\\leq T$\u53ef\u4ee5\u4ece$a[i-1]$\u83b7\u5f97\u7eb8\u724c\uff0c$a[i+1]\\geq T$\u53ef\u4ee5\u628a\u591a\u7684\u7eb8\u724c\u7ed9$a[i+2]$\uff09\u3002\n\n\u3000\u3000\u3000\u3000\u4e8e\u662f\u7531\u4e0a\u9762\u7684\u6027\u8d28\uff0c\u6211\u4eec\u76f4\u63a5\u7834\u73af\u6210\u94fe\uff0c\u679a\u4e3e\u76f8\u90bb\u7684\u4e0d\u9700\u8981\u4ea4\u6362\u7eb8\u724c\u7684\u4e24\u4eba\uff08\u5c06\u5176\u5206\u522b\u653e\u5728\u7b2c\u4e00\u548c\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff09\u3002\n\n\u3000\u3000\u3000\u3000\u6309\u5f00\u59cb\u7684\u5e8f\u5217\u987a\u5e8f\uff0c\u50cf\u666e\u901a\u5747\u5206\u7eb8\u724c\u4e00\u6837\u5904\u7406\u51fa$s$\u6570\u7ec4\uff0c\u90a3\u4e48\u5047\u8bbe\u679a\u4e3e\u7684\u4f4d\u7f6e\u4e3a$k$\uff0c\u5219\u7c7b\u6bd4\u666e\u901a\u5747\u5206\u7eb8\u724c\u6c42\u6cd5\uff0c\u65b0\u7684$s[i]=s[i]-s[k]$\uff08\u6ce8\u610f$s$\u4e3a\u524d\u7f00\u548c\uff09\uff0c\u4e8e\u662f$ans=\\sum{|s[i]-s[k]|}$\uff0c\u6211\u4eec\u5957\u7528\u4e2d\u5b66\u6570\u5b66\u77e5\u8bc6\u53ef\u77e5\u5f53$s[k]$\u4e3a$s$\u4e2d\u4f4d\u6570\u65f6\uff0c$ans$\u6700\u5c0f\u3002\u4e8e\u662f\u672c\u9898\u5c31\u89e3\u51b3\u4e86\u3002\n    \n$\\quad$\u6b22\u8fce\u6765\u8e29\u535a\u5ba2\uff1a[five20](http://www.cnblogs.com/five20/p/8869948.html)\uff08\u849f\u84bb\u5199\u9898\u89e3\u4e0d\u6613\uff0c\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\uff09\n\n### \u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define il inline\n#define ll long long\nusing namespace std;\nconst int N=105;\nll n,a[N],sum,s[N];\nint main()\n{\n    ios::sync_with_stdio(0);\n    cin>>n;\n    for(int i=1;i<=n;i++)cin>>a[i],sum+=a[i];\n    sum/=n;\n    for(int i=1;i<=n;i++)a[i]-=sum,s[i]=s[i-1]+a[i];\n    sort(s+1,s+n+1);\n    sum=0;\n    for(int i=1;i<=n;i++)sum+=abs(s[n/2+1]-s[i]);\n    cout<<sum;\n    return 0;\n}\n```",
        "postTime": 1523970015,
        "uid": 44000,
        "name": "\u6d45\u8272\u8c03",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "# \u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\n\n# ** \u8fd9\u662f\u4e00\u4e2a\u5355\u8282\u70b9\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5! **\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problemnew/show/P4016)\n\n## \u9898\u76ee\u5206\u6790\n\n\u6700\u7ec8\u72b6\u6001\u6bcf\u4e00\u4e2a\u4ed3\u5e93\u7684\u6d41\u91cf\u4e00\u5b9a\u662f\u5e73\u5747\u6570.\n\n\u6240\u4ee5\u6bcf\u4e00\u4e2a\u5927\u4e8e\u5e73\u5747\u6570\u7684\u4ed3\u5e93\u53ef\u4ee5\u5411\u5916\u9001\u4e1c\u897f,\u6bcf\u4e00\u4e2a\u5c0f\u4e8e\u5e73\u5747\u6570\u7684\u4ed3\u5e93\u5fc5\u987b\u8981\u4ece\u522b\u7684\u8fdb\u4e1c\u897f.\n\n\u6bcf\u6b21\u8fd0\u8f93\u90fd\u662f\u6709\u4ee3\u4ef7\u7684,\u800c\u4ee3\u4ef7\u4e0e\u8fd0\u8f93\u7684\u591a\u5c11\u4e5f\u6709\u76f4\u63a5\u5173\u7cfb.\n\n\u81ea\u7136\u5c31\u662f\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u4e86.\u6700\u5927\u6d41\u4fdd\u8bc1\u4e86\u4e00\u5b9a\u80fd\u5e73\u8861\u6536\u652f,\u6700\u5c0f\u8d39\u7528\u4fdd\u8bc1\u5728\u6536\u652f\u5e73\u8861\u7684\u60c5\u51b5\u4e0b\u82b1\u8d39\u6700\u5c11\u4e86.\n\n## \u6a21\u578b\u5efa\u7acb\n\n\u9996\u5148\u5148\u8ba1\u7b97\u51fa\u4ed6\u4eec\u7684\u5e73\u5747\u6570,\u7528\u6bcf\u4e2a\u6570\u90fd\u51cf\u53bb\u5e73\u5747\u6570\u5f97\u5230\u65b0\u7684\u503c,\u8fd9\u4e2a\u503c\u5982\u679c\u662f\u8d1f\u6570\u610f\u5473\u7740\u9700\u8981\u4ece\u522b\u7684\u5730\u65b9\u641e\u8fc7\u4e00\u70b9\u6765,\u5982\u679c\u6b63\u6570\u5c31\u8bf4\u660e\u53ef\u4ee5\u5f80\u5916\u9001\u4e00\u70b9.\n\n\u6211\u4eec\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9\u548c\u8d85\u7ea7\u6c47\u70b9(\u8fd9\u5957\u8def\u5f88\u5e38\u89c1\u7684)\n\n\u5982\u679c\u6743\u503c\u4e3a\u6b63,\u5373\u50a8\u5b58\u91cf\u5927\u4e8e\u5e73\u5747\u503c,\u6211\u4eec\u5c31\u4eces\u5411\u5b83\u8fde\u4e00\u6761\u8fb9,\u6700\u5927\u6d41\u4e3a\u50a8\u5b58\u503c-\u5e73\u5747\u503c,\u8d39\u7528\u4e3a0,\u56fe\u8bba\u610f\u4e49\u5c31\u662f\u5b83\u53ef\u4ee5\u4ece\u6e90\u70b9\u514d\u8d39\u83b7\u5f97\u591a\u51fa\u6765\u7684\u50a8\u5b58\u503c-\u5e73\u5747\u503c\u7684\u6d41\u91cf,\u5c31\u76f8\u5f53\u4e8e\u81ea\u8eab\u6709\u50a8\u5b58\u503c-\u5e73\u5747\u503c\u7684\u6d41\u91cf,\u4e0a\u9762\u4e0d\u662f\u8bf4\u4e86\u5417,\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9,\u5c31\u662f\u4ee3\u66ff\u8fd9\u4e2a\u529f\u80fd.\n\n\u5982\u679c\u6743\u503c\u4e3a\u8d1f,\u5373\u50a8\u5b58\u503c\u5c0f\u4e8e\u5e73\u5747\u503c,\u6211\u4eec\u5c31\u4ece\u5b83\u5411t\u8fde\u4e00\u6761\u8fb9,\u6700\u5927\u6d41\u91cf\u4e3a\u5e73\u5747\u503c-\u50a8\u5b58\u503c,\u8d39\u7528\u4e3a0,\u56fe\u8bba\u610f\u4e49\u5c31\u662f\u5b83\u5fc5\u987b\u4ece\u522b\u7684\u8282\u70b9\u4f20\u6765\u6d41\u91cf,\u5e76\u4e14\u6c47\u5165\u81ea\u8eab,\u610f\u4e49\u7c7b\u6bd4\u4e0e\u4e0a\u9762\u6240\u8bf4.\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53ef\u4ee5\u4e92\u76f8\u4f20\u7684\u8282\u70b9,\u5373\u5de6\u90bb\u5c45\u548c\u53f3\u90bb\u5c45,\u9700\u8981\u5206\u522b\u5411\u4ed6\u4eec\u8fde\u8fb9,\u8868\u793a\u81ea\u5df1\u7684\u6d41\u53ef\u4ee5\u6d41\u8fc7\u53bb.\n\n\u6240\u4ee5\u8fd9\u4e2a\u56fe\u5c31\u5efa\u5b8c\u4e86\u554a.\n\n\u5e76\u4e0d\u9700\u8981\u5efa\u4e24\u4e2a\u70b9\u554a\n\n[\u5355\u70b9\u5efa\u56feAC\u8bc4\u6d4b\u8bb0\u5f55](https://www.luogu.org/recordnew/show/6324774)\n\n## \u6a21\u578b\u5206\u6790\n\n\u5927\u4f6c\u7684\u6587\u7ae0\u4e0a\u5199\u7684\u662f\u6700\u5c0f\u4ee3\u4ef7\u4f9b\u6c42,\u6211\u7684\u7406\u89e3\u5c31\u662f\u6709\u591a\u6709\u5c11,\u8981\u641e\u6210\u5e73\u5747.\n\n\u6269\u5c55\u4e00\u70b9\u5c31\u662f\u73b0\u5728\u6709\u597d\u591a\u4e1c\u897f\u90fd\u6709\u81ea\u5df1\u7684\u72b6\u6001,\u53ef\u4ee5\u5411\u6307\u5b9a\u5730\u65b9\u8c03\u52a8\u4e1c\u897f,\u6bcf\u6b21\u8c03\u52a8\u90fd\u6709\u4e00\u4e2a\u4ee3\u4ef7,\u73b0\u5728\u9700\u8981\u6c42\u6700\u5c0f\u7684\u4ee3\u4ef7\u8c03\u6210\u6307\u5b9a\u72b6\u6001.\n\n\u505a\u6cd5\u5c31\u662f\u5148\u7b97\u51fa\u5b83\u8981\u8c03\u5165/\u8c03\u51fa\u591a\u5c11.\n\n\u7136\u540e\u5bf9\u4e8e\u8fd9\u4e2a\u65b0\u7684\u503c,\u80fd\u591f\u8c03\u51fa\u7684\u7531s\u5411\u5176\u8fde\u8fb9,\u6700\u5927\u6d41\u4e3a\u80fd\u8c03\u51fa\u7684\u5927\u5c0f,\u4ee3\u4ef7\u4e3a0,\u56fe\u8bba\u610f\u4e49\u662f\u53ef\u4ee5\u514d\u8d39\u83b7\u5f97\u591a\u5c11\u7684\u6d41\u4ee5\u4f9b\u8c03\u51fa.\n\n\u9700\u8981\u8c03\u5165\u7684\u5411t\u8fde\u8fb9,\u6700\u5927\u6d41\u4e3a\u9700\u8981\u8c03\u5165\u7684\u5927\u5c0f,\u4ee3\u4ef7\u4e3a0,\u56fe\u8bba\u610f\u4e49\u4e3a\u6ee1\u8db3\u6700\u5927\u6d41\u7684\u524d\u63d0\u4e0b,\u5b83\u5fc5\u987b\u4ece\u522b\u7684\u5730\u65b9\u7684\u5f97\u5230\u591a\u5c11\u6d41.\n\n\u4e4b\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u80fd\u8c03\u51fa\u7684\u8282\u70b9,\u5411\u5b83\u53ef\u4ee5\u8c03\u7684\u5730\u65b9\u8fde\u4e00\u6761\u8fb9,\u4ee3\u4ef7\u4e3a\u8c03\u6574\u7684\u4ee3\u4ef7.\n\n\u5728\u8fd9\u4e2a\u7f51\u7edc\u4e0a\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5c31\u662f\u6240\u8981\u6c42\u7684\u7b54\u6848.\n\n## Code\n\n\u5355\u8282\u70b9\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int Mmax = 1910;\nconst int Nmax = 210;\nconst int inf = 20010509;\nint n,m,s,t,p1,p2,p3,to[Mmax<<1],net[Mmax<<1],mf[Mmax<<1],mo[Mmax<<1],tails=1,fr[Nmax];\nvoid add(int froms,int tos,int mfs,int money){\n    to[++tails]=tos;\n    net[tails]=fr[froms];\n    mf[tails]=mfs;\n    mo[tails]=money;\n    fr[froms]=tails;\n}\nvoid auto_add(int st,int en,int mft,int mo){\n    add(st,en,mft,mo),add(en,st,0,-mo);\n}\nint lastp[Nmax],useds[Nmax],flown[Nmax],dis[Nmax],ndo,p4;\nbool inqu[Nmax];\nqueue<int>ready;\nbool SPFA(){\n    memset(inqu,0,sizeof(inqu));\n    memset(dis,20010509,sizeof(dis));\n    memset(flown,20010509,sizeof(flown));\n    while(!ready.empty())ready.pop();ready.push(s);\n    dis[s]=0;inqu[s]=1;flown[s]=20010509;lastp[t]=0;\n    while(!ready.empty()){\n        ndo=ready.front();\n        ready.pop();inqu[ndo]=0;\n        for(int lzh=fr[ndo];lzh;lzh=net[lzh]){\n            if(dis[to[lzh]]>dis[ndo]+mo[lzh] && mf[lzh]){\n                dis[to[lzh]]=dis[ndo]+mo[lzh];\n                flown[to[lzh]]=min(mf[lzh],flown[ndo]);\n                useds[to[lzh]]=lzh;\n                lastp[to[lzh]]=ndo;\n                if(!inqu[to[lzh]]){\n                    inqu[to[lzh]]=1;\n                    ready.push(to[lzh]);\n                }\n            }\n        }\n    }\n    return lastp[t]!=0;\n}\nint maxflow=0,mincost=0,ppo;\nvoid Dinic(){\n    while(SPFA()){\n        maxflow+=flown[t];ppo=t;\n        mincost+=flown[t]*dis[t];\n        while(ppo!=s){\n            mf[useds[ppo]]-=flown[t];\n            mf[useds[ppo]^1]+=flown[t];\n            ppo=lastp[ppo];\n        }\n    }\n}\nint x[Nmax],sum;\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i){\n        scanf(\"%d\",&x[i]);\n        sum+=x[i];\n    }\n    sum/=n;s=208;t=209;\n    for(int i=1;i<=n;++i)\tx[i]-=sum;\n    for(int i=1;i<=n;++i){\n        if(x[i]>0)\n            auto_add(s,i,x[i],0);\n        else if(x[i]<0)\n            auto_add(i,t,-x[i],0);\n    }\n    for(int i=1;i<=n;++i){\n        if(i!=1)\n            auto_add(i,(i-1),inf,1);\n        if(i!=n)\n            auto_add(i,(i+1),inf,1);\n    }\n    auto_add(1,n,inf,1);\n    auto_add(n,1,inf,1);\n    Dinic();\n    printf(\"%d\",mincost);\n    return 0;\n}\n```\n\n\u53cc\u8282\u70b9(\u8bb2\u89e3\u53ef\u4ee5\u53c2\u8003\u697c\u4e0b\u5927\u4f6c)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int Mmax = 1910;\nconst int Nmax = 210;\nconst int inf = 20010509;\nint n,m,s,t,p1,p2,p3,to[Mmax<<1],net[Mmax<<1],mf[Mmax<<1],mo[Mmax<<1],tails=1,fr[Nmax];\nvoid add(int froms,int tos,int mfs,int money){\n    to[++tails]=tos;\n    net[tails]=fr[froms];\n    mf[tails]=mfs;\n    mo[tails]=money;\n    fr[froms]=tails;\n}\nvoid auto_add(int st,int en,int mft,int mo){\n    add(st,en,mft,mo),add(en,st,0,-mo);\n}\nint lastp[Nmax],useds[Nmax],flown[Nmax],dis[Nmax],ndo,p4;\nbool inqu[Nmax];\nqueue<int>ready;\nbool SPFA(){\n    memset(inqu,0,sizeof(inqu));\n    memset(dis,20010509,sizeof(dis));\n    memset(flown,20010509,sizeof(flown));\n    while(!ready.empty())ready.pop();ready.push(s);\n    dis[s]=0;inqu[s]=1;flown[s]=20010509;lastp[t]=0;\n    while(!ready.empty()){\n        ndo=ready.front();\n        ready.pop();inqu[ndo]=0;\n        for(int lzh=fr[ndo];lzh;lzh=net[lzh]){\n            if(dis[to[lzh]]>dis[ndo]+mo[lzh] && mf[lzh]){\n                dis[to[lzh]]=dis[ndo]+mo[lzh];\n                flown[to[lzh]]=min(mf[lzh],flown[ndo]);\n                useds[to[lzh]]=lzh;\n                lastp[to[lzh]]=ndo;\n                if(!inqu[to[lzh]]){\n                    inqu[to[lzh]]=1;\n                    ready.push(to[lzh]);\n                }\n            }\n        }\n    }\n    return lastp[t]!=0;\n}\nint maxflow=0,mincost=0,ppo;\nvoid Dinic(){\n    while(SPFA()){\n        maxflow+=flown[t];ppo=t;\n        mincost+=flown[t]*dis[t];\n        while(ppo!=s){\n            mf[useds[ppo]]-=flown[t];\n            mf[useds[ppo]^1]+=flown[t];\n            ppo=lastp[ppo];\n        }\n    }\n}\nint x[Nmax],sum;\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i){\n        scanf(\"%d\",&x[i]);\n        sum+=x[i];\n    }\n    sum/=n;s=208;t=209;\n    for(int i=1;i<=n;++i)\tx[i]-=sum;\n    for(int i=1;i<=n;++i){\n        if(x[i]>0)\n            auto_add(s,2*i-1,x[i],0);\n        else if(x[i]<0)\n            auto_add(2*i,t,-x[i],0);\n    }\n    for(int i=1;i<=n;++i){\n        if(i!=1){\n            auto_add(2*i-1,2*(i-1)-1,inf,1);\n            auto_add(2*i-1,2*(i-1),inf,1);\n        }\n        if(i!=n){\n            auto_add(2*i-1,2*(i+1)-1,inf,1);\n            auto_add(2*i-1,2*(i+1),inf,1);\n        }\n    }\n    auto_add(1,2*n-1,inf,1);\n    auto_add(1,2*n,inf,1);\n    auto_add(2*n-1,1,inf,1);\n    auto_add(2*n-1,2,inf,1);\n    Dinic();\n    printf(\"%d\",mincost);\n    return 0;\n}\n```",
        "postTime": 1521631888,
        "uid": 43931,
        "name": "SofanHe",
        "ccfLevel": 0,
        "title": "\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898"
    },
    {
        "content": "\u8fd9\u73a9\u610f\u51fa\u81ea\u201c\u7f51\u7edc\u6d4124\u9898\u201d\uff1f\u53ef\u662f\u3002\u3002\u3002\u597d\u50cf\u662f\u8d2a\u5fc3\u554a\u3002\n\n\u8fd9\u9898\u7684\u96be\u70b9\u4e3b\u8981\u662f\u5217\u65b9\u7a0b\uff1a\n\n\u9996\u5148\uff0c\u7ed9\u6ca1\u5b66\u300a\u6570\u636e\u7684\u5206\u6790\uff08\u516b\u5e74\u7ea7\u4e0b\uff09\u300b\u5c31\u6765\u5207\u6b64\u9898\u7684\u5de8\u4f6c\u4e00\u70b9\u6ce8\u91ca\uff1a\n\n> $\\overline{x}_a$ \u8868\u793a\u5e73\u5747\u6570\uff0c\u8bfb\u4f5cx b\u00e1\uff0c$\\overline{x}_a=\\dfrac{a_1+a_2+......+a_n}{n}$\n> \n> $m_{0.5}(a_1,a_2,......,a_n)$ \u8868\u793a\u4e00\u7ec4\u6570\u636e\u7684\u4e2d\u4f4d\u6570\u3002\u6587\u4e2d\u53d6$a_{n/2+1}$\n\n\u8bbe$K_1,K_2,......,K_n$\u8868\u793a\u7b2c$1,2,......,n$\u4e2a\u4eba\u7ed9\u4ed6\u5de6\u8fb9\u7684\u4eba\u7684\u8d27\u7269\u6570\u3002\n\n*$SP$\uff1a$K_1$\u8868\u793a\u7b2c\u4e00\u4e2a\u4eba\u7ed9\u7b2c$N$\u4e2a\u4eba\u7684\u8d27\u7269\u6570\uff0c\u662f\u4e2a\u672a\u77e5\u6570\u3002\n\n$A_1,A_2,......,A_n$\u8868\u793a\u6bcf\u4eba\u73b0\u6709\u7684\u8d27\u7269\u6570\u3002\n\n\u5219\u6709\uff1a\n\n$A_1-K_1+K_2=\\overline{x}_A$\n\n\u6545\u6709\uff1a\n\n- $K_2=\\overline{x}_A+K_1-A_1$\n\n\u540c\u7406\u53ef\u5f97\uff1a\n\n- $K_3=\\overline{x}_A+K_2-A_2$\n\n\n$\\begin{cases}K_2=\\overline{x}_A+K_1-A_1\\\\K_3=\\overline{x}_A+K_2-A_2\\\\...\\\\K_n=\\overline{x}_A+K_{n-1}-A_n\\end{cases}$\n\n\u8fd9\u662f\u4e00\u4e2a$n$\u5143$1$\u6b21\u65b9\u7a0b\uff0c\u600e\u4e48\u89e3\uff1f\n\n~~\u66b4\u529b\uff01~~ \u5f53\u7136\u662f\u7528\u4ee3\u5165\u6cd5\u6d88\u5143\u554a\n\n\u4ee5$K_3$\u4e3a\u4f8b\uff0c$K_3=2\\overline{x}_A+K_1-A_1-A_2$\n\n\u6211\u4eec\u8bbe$X_i=-i\\overline{x}_A+\\sum\\limits_{j=1}^{i-1}{A_j}$\n\n- $X_2=A_1+A_2-2\\overline{x}_A$\n- $X_3=A_1+A_2+A_3-3\\overline{x}_A$\n\n\u505a\u5dee\uff0c\u5f97\uff1a\n\n- $X_3=X_2-\\overline{x}_A+A_3$\n\n\u89c2\u5bdf\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u4e00\u822c\u89c4\u5f8b\uff1a\n\n- $X_i=X_{i-1}-\\overline{x}_A+A_i$ - - - - - - - - - - - - - - - - - - - - \u2460\n\n\u7136\u540e\uff1a\n\n- $K_2=K_1-X_1$\n- $K_3=K_1-X_2$\n- ......\n- $K_n=K_1-X_{n-1}$\n\n\u6211\u4eec\u77e5\u9053\uff1a\n\n$ans=\\sum\\limits_{i=1}^{n}{|K_i|}$\n\n\u6545\uff1a\n\n$ans=|K_1-0|+|K_1-X_1|+......+|K_1+X_{n-1}|$\n\n\u2234$min \\{ans\\}=min\\{|K_1-0|+|K_1-X_1|+......+|K_1+X_{n-1}|\\}$\n\n\u8fd9\u4e2a\u5f0f\u5b50\u7684\u51e0\u4f55\u610f\u4e49\uff1a\n\n\u5728\u6570\u8f74\u4e0a\u9009\u62e9\u4e00\u4e2a$K_1$\uff0c\u4f7f\u4e4b\u5230$0,X_1,X_2,......,X_{n-1}$\u7684\u8ddd\u79bb\u4e4b\u548c\u6700\u5c0f\n\n\u8fd9\u5c31\u662f\u67d0\u4e2a\u201c\u8f93\u6cb9\u7ba1\u9053\u95ee\u9898\u201d\u3010\u6a59\u9898\u3011\n\n\u8fd9\u4e2a$K_1$\u6211\u4eec\u8981\u7ed9\u5b83\u8d4b\u4e00\u4e2a\u6700\u4f18\u503c\uff1a\n\n\u8fd9\u4e2a\u503c\u5c31\u662f$m_{0.5}\\{0,X_1,X_2,......,X_{n-1}\\}$\u3002\n\n\u8bc1\u660e\u7565\n\n$min \\{ans\\}=|m-0|+|m-X_1|+......+|m-X_{n-1}|$ - - - - - - \u2461\n\n\u4f7f\u7528\u2460\u548c\u2461\u5373\u53ef\u89e3\u6b64\u9898\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nconst int maxn=1e6+5;\nint a[maxn],x[maxn];\nint n;\n\ninline int get()\n{\n\tint x=0;int f=1;char c=getchar();\n\twhile(!isdigit(c)) { if(c=='-') f=-1; c=getchar(); }\n\twhile(isdigit(c)) { x=x*10+c-'0'; c=getchar(); }\n\treturn x*f;\n}\n\nsigned main()\n{\n\tn=get();\n\tint x_ba=0;\n\tfor(register int i=1;i<=n;i++) {\n\t\ta[i]=get();\n\t\tx_ba+=a[i];\n\t}\n\tx_ba/=n;\n\tfor(register int i=1;i<=n;i++) {\n\t\tx[i]=x[i-1]-a[i]+x_ba;\n\t}\n\tsort(x+1,x+1+n);\n\tint m=x[n/2+1],ans=0;\n\tfor(register int i=1;i<=n;i++) {\n\t\tans+=abs(x[i]-m);\n\t}\n\tcout<<ans<<endl;\n}\n```",
        "postTime": 1556283757,
        "uid": 92254,
        "name": "Social_Zhao",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "\u7f51\u7edc\u6d4124\u9898\u91cc\u6df7\u8fdb\u6765\u7684\u8d2a\u5fc3\u2026\u2026\n\n\u89c1\u4e86\u9b3c\u4e86 /kk\n\n## \u9898\u76ee\u5206\u6790\n\n\u5efa\u4e00\u4e2a\u6e90\u70b9 $s$ \u548c\u6c47\u70b9 $t$ \uff08\u4ed6\u4eec\u53c8\u6765\u4e86\uff09\uff0c\u6bcf\u4e2a\u8981\u8fd0\u51fa\u8d27\u7269\u7684\u4ed3\u5e93\u4e0e $s$ \u8fde\u8fb9\uff0c\u6bcf\u4e2a\u8981\u8fd0\u5165\u8d27\u7269\u7684\u4ed3\u5e93\u4e0e $t$ \u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u8981\u8fd0\u8fdb/\u8fd0\u51fa\u8d27\u7269\u7684\u6570\u91cf\uff0c\u82b1\u8d39\u4e3a $0$ ,\u4ed3\u5e93\u4e4b\u95f4\u4f9d\u6b21\u8fde\u5bb9\u91cf\u4e3a $INF$ \uff0c\u82b1\u8d39\u4e3a $1$ \u7684\u8fb9\uff0c\u8dd1\u4e00\u904d\u8d39\u7528\u6d41\u5373\u53ef\n\n\u4f60\u53ef\u80fd\u8fd8\u662f\u4e0d\u660e\u767d\u8fd9\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\n\n\u6240\u4ee5\u6211\u6765\u7ed9\u4f60\u8bc1\u660e\u5176\u6b63\u786e\u6027\n\n\u4ee5$5\\;4\\;3\\;2\\;1$\u4f8b\uff0c\u5efa\u51fa\u6765\u7684\u56fe\u5e94\u8be5\u662f\u8fd9\u6837\u7684\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qipha3eu.png)\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u4ee5\u6e90\u70b9\u4e3a\u8d77\u70b9\u7684\u8fb9\u5bb9\u91cf\u4e4b\u548c\u7b49\u4e8e\u4ee5\u6c47\u70b9\u4e3a\u7ec8\u70b9\u7684\u8fb9\u5bb9\u91cf\u4e4b\u548c\n\n\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u6700\u7ec8\u8c03\u51fa\u4e86\u591a\u5c11\u8d27\u7269\uff0c\u5c31\u4f1a\u8c03\u5165\u591a\u5c11\u8d27\u7269\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u6700\u5927\u6d41\u5c31\u4e00\u5b9a\u4e86\uff0c\u800c\u6bcf\u6761\u8fb9\u7684\u82b1\u9500\u662f $1$ \uff0c\u6240\u4ee5\u6ee1\u8db3\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5c31\u662f\u6ee1\u8db3\u9898\u76ee\u6761\u4ef6\uff08\u6700\u5c11\u642c\u8fd0\u91cf\uff09\n\n\u8dd1\u4e00\u904d\u8d39\u7528\u6d41\u5c31\u884c\u4e86\u554a\n\n## Code($31$ ms,$800$ KB)\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cstring>\nusing namespace std;\nconst int MAXN = 5001;\nconst int MAXM = 50001;\nconst int INf = 2147483647;\nint n, m, s, t, edge_sum = 1;\nint maxflow, mincost;\nint dis[MAXN], head[MAXN], incf[MAXN], pre[MAXN];\nint a[MAXN];\nbool vis[MAXN];\nstruct Edge {\n\tint next, to, dis, flow;\n}edge[MAXM << 1];\ninline void addedge(int from, int to, int flow, int dis) {\n\tedge[++edge_sum].next = head[from];\n\tedge[edge_sum].to = to;\n\tedge[edge_sum].dis = dis;\n\tedge[edge_sum].flow = flow;\n\thead[from] = edge_sum;\n}\ninline bool spfa() {\n\tqueue <int> q;\n\tmemset(dis, 0x3f, sizeof(dis));\n\tmemset(vis, 0, sizeof(vis));\n\tq.push(s);\n\tdis[s] = 0;\n\tvis[s] = 1;\n\tincf[s] = 1 << 30;\n\twhile(!q.empty()) {\n\t\tint u = q.front();\n\t\tvis[u] = 0;\n\t\tq.pop();\n\t\tfor(register int i = head[u]; i; i = edge[i].next) {\n\t\t\tif(!edge[i].flow) continue;\n\t\t\tint v = edge[i].to;\n\t\t\tif(dis[v] > dis[u] + edge[i].dis) {\n\t\t\t\tdis[v] = dis[u] + edge[i].dis;\n\t\t\t\tincf[v] = min(incf[u], edge[i].flow);\n\t\t\t\tpre[v] = i;\n\t\t\t\tif(!vis[v]) vis[v] = 1, q.push(v);\n\t\t\t}\n\t\t}\n\t}\n\tif(dis[t] == 1061109567) return 0;\n\treturn 1;\n}\ninline void MCMF() {//\u8d39\u7528\u6d41\u677f\u5b50\n\twhile(spfa()) {\n\t\tint x = t;\n\t\tmaxflow += incf[t];\n\t\tmincost += dis[t] * incf[t];\n\t\tint i;\n\t\twhile(x != s) {\n\t\t\ti = pre[x];\n\t\t\tedge[i].flow -= incf[t];\n\t\t\tedge[i^1].flow += incf[t];\n\t\t\tx = edge[i^1].to;\n\t\t}\n\t}\n}\nsigned main() {\n\tscanf(\"%d\", &n);\n\tint sum = 0;\n\tfor(register int i = 1; i <= n; ++i) scanf(\"%d\", a + i), sum += a[i];\n\tsum /= n;//\u7b97\u51fa\u5e73\u5747\u503c\n\tfor(register int i = 1; i <= n; ++i) {\n\t\tif(a[i] < sum) {//\u5982\u679c\u9700\u8981\u8fd0\u5165\u5c31\u4e0es\u8fde\u8fb9\n\t\t\taddedge(0, i, sum - a[i], 0);\n\t\t\taddedge(i, 0, 0, 0);\n\t\t} else if(a[i] > sum) {//\u5982\u679c\u9700\u8981\u8fd0\u51fa\u5c31\u4e0et\u8fde\u8fb9\n\t\t\taddedge(i, n + 1, a[i] - sum, 0);\n\t\t\taddedge(n + 1, i, 0, 0);\n\t\t}\n\t\tif(i == 1) {//\u7279\u52241,\u522b\u5fd8\u4e86\u662f\u65e0\u5411\u56fe\n\t\t\taddedge(1, n, INf, 1);\n\t\t\taddedge(n, 1, 0, -1);\n\t\t\taddedge(n, 1, INf, 1);\n\t\t\taddedge(1, n, 0, -1);\n\t\t} else {\n\t\t\taddedge(i-1, i, INf, 1);\n\t\t\taddedge(i, i-1, 0, -1);\n\t\t\taddedge(i, i-1, INf, 1);\n\t\t\taddedge(i-1, i, 0, -1);\n\t\t}\n\t}\n\ts = 0, t = n + 1;\n\tMCMF();\n\tprintf(\"%d\\n\",mincost);\n\treturn 0;\n}\n```\n\n\u6240\u4ee5\uff0c\u70b9\u4e2a\u8d5e\u554a",
        "postTime": 1575988018,
        "uid": 149815,
        "name": "Isprime",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "\u672c\u9898\u89e3\u540c\u65f6\u53d1\u5e03\u4e8e\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff0c\u6b22\u8fce\u6765\u901b[\u7f51\u7edc\u6d4124\u9898\u9898\u89e3 | KSkun's Blog](https://ksmeow.moe/graph_flow_24prob_sol/)\u3002\n\n2019/10/10 UPD\uff1a\u4fee\u6b63\u4e86\u8868\u8ff0\u9519\u8bef\u548c\u535a\u5ba2\u5730\u5740\u9519\u8bef\uff0c\u540c\u65f6\u6539\u8fdb\u683c\u5f0f\uff0c\u611f\u8c22@qieqiemin \u6307\u51fa\u95ee\u9898\u6240\u5728\u3002\n\n\n## \u601d\u8def\n\n\u8fd9\u4e2a\u9898\u89e3\u7684\u601d\u8def\u6765\u81eahzwer\uff0c\u8fd9\u662f[\u4ed6\u7684\u535a\u5ba2](http://hzwer.com/1955.html)\u3002\n\n\u6211\u4eec\u5bf9\u6bcf\u4e2a\u4ed3\u5e93\u521b\u5efa\u4e24\u4e2a\u8282\u70b9$X_i$\u548c$Y_i$\uff0c\u524d\u8005\u4e3a\u4f9b\u5e94\u8282\u70b9\uff0c\u540e\u8005\u4e3a\u9700\u6c42\u8282\u70b9\u3002\u6c42\u51fa\u6700\u7ec8\u8981\u8fbe\u5230\u7684\u8d27\u7269\u503c\u5373\u5e73\u5747\u6570\uff0c\u7136\u540e\u628a\u521d\u59cb\u503c\u5904\u7406\u6210\u504f\u79fb\u503c\uff08\u521d\u59cb\u503c-\u5e73\u5747\u6570\uff09\u3002\n\n\n1. **\u504f\u79fb\u5c0f\u4e8e0\u3002** \u8868\u660e\u8fd9\u4e2a\u8282\u70b9\u9700\u8981\u8fd0\u5165\u8d27\u7269\uff0c\u5c06\u8282\u70b9\u7684$Y_i$\u4e0e\u6c47\u70b9$T$\u76f8\u8fde\uff0c\u5bb9\u91cf\u4e3a\u504f\u79fb\u7684\u7edd\u5bf9\u503c\uff0c\u8d39\u7528\u4e3a0\u3002\n\n2. **\u504f\u79fb\u5927\u4e8e0\u3002** \u8868\u660e\u8fd9\u4e2a\u8282\u70b9\u9700\u8981\u8fd0\u51fa\u8d27\u7269\uff0c\u5c06\u8282\u70b9\u7684$X_i$\u4e0e\u6e90\u70b9$S$\u76f8\u8fde\uff0c\u5bb9\u91cf\u4e3a\u504f\u79fb\uff0c\u8d39\u7528\u4e3a0\u3002\n\n\n\u7136\u540e\u518d\u8003\u8651\u76f8\u90bb\u8282\u70b9\u7684\u5173\u7cfb\u3002\n\n\n1. **\u76f8\u90bb\u8282\u70b9\u4e92\u76f8\u8865\u5145\u3002** \u5c06$X_i$\u4e0e$Y_j$\u76f8\u8fde\uff0c\u5bb9\u91cf\u4e3a$+ \\infty$\uff0c\u8d39\u7528\u4e3a1\uff0c\u8868\u793a\u8fd0\u8f93\u5355\u4f4d\u8d27\u7269\u9700\u89811\u7684\u8d39\u7528\u3002\n\n2. **\u4e0d\u662f\u76f4\u63a5\u8865\u5145\uff0c\u800c\u662f\u4f5c\u4e3a\u4e2d\u95f4\u8282\u70b9\u8f6c\u8fd0\u3002** \u5c06$X_i$\u4e0e$X_j$\u76f8\u8fde\uff0c\u5bb9\u91cf\u4e3a$+ \\infty$\uff0c\u8d39\u7528\u4e3a1\uff0c\u610f\u4e49\u540c\u4e0a\u3002\n\n\n\u4ee5\u4ee5\u4e0a\u65b9\u5f0f\u5efa\u56fe\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\u3002\u6700\u5927\u6d41\u4fdd\u8bc1\u80fd\u591f\u5e73\u8861\u8d27\u7269\uff0c\u800c\u6700\u5c0f\u8d39\u7528\u6d41\u80fd\u4fdd\u8bc1\u8fd0\u8f93\u7684\u8d27\u7269\u6700\u5c11\u3002\n\n\n## \u4ee3\u7801\n\n```cpp\n// Code by KSkun, 2018/1\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <queue>\n#include <algorithm>\n#include <utility>\n\nstruct io {\n    char buf[1 << 26], *s;\n    \n    io() {\n        fread(s = buf, 1, 1 << 26, stdin);\n    }\n    \n    inline int read() {\n        register int res = 0;\n        while(*s < '0' || *s > '9') s++;\n        while(*s >= '0' && *s <= '9') res = res * 10 + *s++ - '0';\n        return res;\n    }\n} ip;\n\n#define read ip.read\n\nconst int MAXN = 1005;\nconst int INF = 1e9;\n\nstruct Edge {\n    int to, cap, cost, rev;\n    Edge(int to, int cap, int cost, int rev): to(to), cap(cap), cost(cost), rev(rev) {}\n};\n\nstd::vector<Edge> vec[MAXN];\nstd::queue<int> que;\nint f[MAXN];\nint pre[MAXN], pree[MAXN], dis[MAXN];\nbool inque[MAXN];\n\ninline void addedge(int u, int v, int cap, int cost) {\n    vec[u].push_back(Edge(v, cap, cost, vec[v].size()));\n    vec[v].push_back(Edge(u, 0, -cost, vec[u].size() - 1));\n}\n\n// SPFA Min Cost Flow\n\nint flow = 0, cost = 0;\n\ninline void min_cost_flow(int s, int t) {\n    for(;;) {\n        memset(f, 0, sizeof f);\n        memset(dis, 0x3f, sizeof dis);\n        memset(inque, 0, sizeof inque);\n        while(!que.empty()) que.pop();\n        que.push(s);\n        dis[s] = 0;\n        inque[s] = true;\n        f[s] = INF;\n        while(!que.empty()) {\n            int u = que.front();\n            que.pop();\n            inque[u] = false; \n            for(int i = 0; i < vec[u].size(); i++) {\n                int v = vec[u][i].to;\n                if(vec[u][i].cap > 0 && dis[v] > dis[u] + vec[u][i].cost) {\n                    pre[v] = u;\n                    pree[v] = i;\n                    f[v] = std::min(vec[u][i].cap, f[u]);\n                    dis[v] = dis[u] + vec[u][i].cost;\n                    if(!inque[v]) {\n                        que.push(v);\n                        inque[v] = true;\n                    }\n                }\n            }\n        }\n        if(f[t] == 0) break;\n        for(int u = t; u != s; u = pre[u]) {\n            vec[pre[u]][pree[u]].cap -= f[t];\n            vec[u][vec[pre[u]][pree[u]].rev].cap += f[t];\n        }\n        flow += f[t];\n        cost += f[t] * dis[t];\n    }\n}\n\nint n, remain[1005], sum = 0, s, t; \n\nint main() {\n    n = read();\n    s = n * 2 + 1;\n    t = s + 1;\n    for(int i = 1; i <= n; i++) {\n        remain[i] = read();\n        sum += remain[i];\n    }\n    sum /= n;\n    for(int i = 1; i <= n; i++) {\n        remain[i] -= sum;\n        if(remain[i] < 0) {\n            addedge(i + n, t, -remain[i], 0);\n        } else {\n            addedge(s, i, remain[i], 0);\n        }\n        if(i - 1 > 0) {\n            addedge(i, i - 1, INF, 1);\n            addedge(i, i - 1 + n, INF, 1);\n        }\n        if(i + 1 <= n) {\n            addedge(i, i + 1, INF, 1);\n            addedge(i, i + 1 + n, INF, 1);\n        }\n    }\n    addedge(1, n, INF, 1);\n    addedge(1, n << 1, INF, 1);\n    addedge(n, 1, INF, 1);\n    addedge(n, 1 + n, INF, 1);\n    min_cost_flow(s, t);\n    printf(\"%d\", cost);\n    return 0;\n}\n```",
        "postTime": 1515082047,
        "uid": 35795,
        "name": "KSkun",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "## \u524d\u8a00\uff1a\n\n\u697c\u4e0b\u7684\u5927\u4f6c\u6709\u7684\u7528\u53cc\u8282\u70b9\u6765\u89e3\u51b3\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u6ca1\u6709\u5fc5\u8981\uff0c\u6240\u4ee5\n\n\u5c31\u7528\u5355\u8282\u70b9\u6765\u505a\u4e86\n\n\u6211\u5728\u4e00\u4f4d\u5927\u4f6c\u7684\u535a\u5ba2\n\nhttps://blog.csdn.net/zhangjianjunab\n\n\u5b66\u7684ZKW\u8d39\u7528\u6d41\n\n## \u601d\u8def\u4ee5\u53ca\u6784\u56fe\uff1a\n\n\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u8d85\u7ea7\u539f\u70b9st\uff0c\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9ed\n\n\u4e00\u5f00\u59cb\u6bcf\u4e2a\u5730\u65b9\u7684\u503c\u4e0d\u7b49\uff0c\u6240\u4ee5\n\n\u4ecest\u5efa\u8fb9\u5230\u6bcf\u4e00\u4e2a\u5730\u65b9\uff0c\u6d41\u91cf\u4e3a\u4e00\u5f00\u59cb\u7684\u5b58\u8d27\u91cf\uff0c\u8d39\u7528\u4e3a0\uff08\u4e0d\u4f1a\u5728\u8fd9\u4e9b\u5730\u65b9\u82b1\u8d39\uff09\n\n\u4ece\u6bcf\u4e00\u4e2a\u5730\u65b9\u5efa\u8fb9\u5230ed\uff0c\u6d41\u91cf\u4e3a\u5e73\u5747\u503c\uff08\u4ed3\u5e93\u6700\u540e\u5fc5\u987b\u5bb9\u7eb3\u7684\u8d27\u91cf\uff09\uff0c\u8d39\u7528\u4e5f\u4e3a0\uff0c\u540c\u4e0a\n\n\u56e0\u4e3a\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u4e24\u4e2a\u5730\u65b9\u5efa\u8fb9\u8981\u5efa\u53cc\u5411\u8fb9\uff0c\u6d41\u91cf\u4e3a+OO\uff08\u56e0\u4e3a\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u6765\u81ea\u4e16\u754c\u5404\u5730\u7684\u6d41\u91cf\u901a\u8fc7\u8fd9\u6761\u8def\uff09\uff0c\u5355\u4f4d\u6d41\u91cf\u7684\u8d39\u7528\u4e3a1\n\n\u56fe\u5c31\u5efa\u7acb\u5b8c\u6bd5\u4e86\uff0c\u548c\u697c\u4e0b\u5927\u4f6c\u7684\u6784\u56fe\u6709\u4e9b\u4e0d\u4e00\u6837\uff0c\u4f46\u662f\u611f\u89c9\u8fd9\u4e2a\u56fe\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u4e5f\u53ef\u4ee5\u5f88\u597d\u7684\u907f\u514d\u65e0\u5411\u56fe\u5bb9\u6613\u51fa\u73b0\u7684\u540e\u6548\u6027\n\n## \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nstruct node\n{\n\tint  y,c,d,next,other;\n}a[21000];int len,last[210];\nvoid  ins(int  x,int  y,int  c,int  d)//\u5efa\u8fb9 \n{\n\tlen++;int k1=len;\n\ta[len].y=y;a[len].c=c;a[len].d=d;\n\ta[len].next=last[x];last[x]=len;\n\t\n\tlen++;int k2=len;\n\ta[len].y=x;a[len].c=0;a[len].d=-d;//\u53cd\u5411\u8fb9\uff0c\u540e\u6094\u7684\u673a\u4f1a \n\ta[len].next=last[y];last[y]=len;\n\t\n\ta[k1].other=k2;\n\ta[k2].other=k1;\n}\nint cost,d[210];\nint head,tail,list[210];\nbool v[210];\nint st,ed;\nint n,sum;\nbool spfa() \n{\n\tmemset(d,20,sizeof(d));d[ed]=0;//\u4ece\u540e\u5f80\u524d\u627e\u4f1a\u66f4\u5feb \n\tmemset(v,true,sizeof(v));v[ed]=false;\n\thead=1;tail=2;list[head]=ed;\n\tint  inf=d[ed+1];\n\twhile(head!=tail)\n\t{\n\t\tint  x=list[head];\n\t\tfor(int  k=last[x];k;k=a[k].next)\n\t\t{\n\t\t\tint  y=a[k].y,kl=a[k].other;\n\t\t\tif(a[kl].c>0  && d[y]>d[x]-a[k].d)//\u53cd\u5411\u8fb9\u6d41\u91cf\u4e3a\u8d1f\u6570\uff0c\u6240\u4ee5\u8981\u51cf\u53bb \n\t\t\t{\n\t\t\t\td[y]=d[x]-a[k].d;\n\t\t\t\tif(v[y]==true)\n\t\t\t\t{\n\t\t\t\t\tv[y]=false;\n\t\t\t\t\tlist[tail++]=y;\n\t\t\t\t\tif(tail==n+1)tail=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\thead++;if(head==n+1)head=1;\n\t\tv[x]=true;\n\t}\n\treturn  d[st]!=inf;//\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u5230\u8fbe \n}\ninline int mymin(int x,int y){return x<y?x:y;}\nint find(int x,int f)//\u67e5\u627e\u6700\u5927\u6d41\uff0c\u987a\u4fbf\u627e\u51fa\u8d39\u7528 \n{\n\tv[x]=false;\n\tif(x==ed){v[x]=true;return f;}\n\tint  ans=0,t=0;\n\tfor(int  k=last[x];k;k=a[k].next)\n\t{\n\t\tint  y=a[k].y;\n\t\tif(a[k].c>0 && d[y]==d[x]-a[k].d && v[y]==true && ans<f)\n\t\t{\n\t\t\tans+=t=find(y,mymin(a[k].c,f-ans));\n\t\t\ta[k].c-=t;a[a[k].other].c+=t;\n\t\t\t\n\t\t\tcost+=t*a[k].d;\n\t\t}\n\t}\n\tv[x]=true;\n\treturn  ans;\n}\nint  main()\n{\n\tscanf(\"%d\",&n);st=0;ed=n+1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x;scanf(\"%d\",&x);\n\t\tint l=i-1,r=i+1;//\u5bf9\u5de6\u53f3\u4e24\u8fb9\u5efa\u8fb9 \n\t\tif(l==0)l=n;//\u7279\u5224\u73af \n\t\tif(r==n+1)r=1;\n\t\tins(i,l,999999999,1);ins(i,r,999999999,1);ins(st,i,x,0);\n\t\tsum+=x;\n\t}\n\tsum/=n;\n\tfor(int i=1;i<=n;i++)ins(i,ed,sum,0);\n\tint ans=0;n+=2;//n\u52a0\u4e0a\u8d77\u70b9\u548c\u7ec8\u70b9 \n\twhile(spfa()==true)find(st,999999999);\n\tprintf(\"%d\\n\",cost);\n\treturn  0;\n}\n```\n",
        "postTime": 1531879162,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "\u5173\u4e8e\u6784\u56fe\uff1a\r\n\r\n\u9996\u5148\uff0c\u8fd9\u662f\u4e00\u9053\u6700\u5c0f\u8d39\u7528\uff08\u8d39\u7528\u6307\u5728\u4e24\u4e2a\u76f8\u90bb\u4ed3\u5e93\u4e2d\u7684\u8fd0\u8f93\u5355\u4ef7\uff09\u6700\u5927\u6d41\u7684\u9898\u76ee\u3002\r\n\r\n1.\u5fc5\u4e0d\u53ef\u5c11\u7684\u6709\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\u548c\u6c47\u70b9\uff0cst=0,ed=n+1\u3002\r\n\r\n2.\u8d2a\u5fc3\u7684\u60f3\uff0c\u4e3a\u4e86\u662f\u6240\u6709\u4ed3\u5e93\u7684\u6570\u91cf\u90fd\u76f8\u7b49\uff0c\u5c31\u5e94\u8be5\u8bb2\u591a\u4f59\u5e73\u5747\u503c\u7684\u4ed3\u5e93\u8fd0\u5f80\u5c11\u4e8e\u5e73\u5747\u503c\u7684\u4ed3\u5e93\uff0c\u81ea\u7136\u800c\u7136\u5c31\u60f3\u5230\u591a\u7684\u4ed3\u5e93\u5e94\u8be5\u8d21\u732e\uff0c\u8fde\u5411\u6e90\u70b9\uff1b\u5c11\u7684\u4ed3\u5e93\u5e94\u8be5\u5f97\u5230\uff0c\u8fde\u5411\u6c47\u70b9\uff0c\u4e14\u8d39\u7528\u4e3a0\uff08\u56e0\u4e3a\u8d39\u7528\u6307\u5728\u4e24\u4e2a\u76f8\u90bb\u4ed3\u5e93\u4e2d\u7684\u8fd0\u8f93\u5355\u4ef7\uff09\u3002\r\n\r\n3.\u53e6\u5916\uff0c\u76f8\u90bb\u7684\u8282\u70b9\u4e4b\u95f4\u4e5f\u8981\u5efa\u8fb9\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u76f8\u90bb\u7684\u8282\u70b9\uff0c\u6211\u4eec\u5e94\u8be5\u8fde\u4e0a\u4e00\u6761\u6d41\u91cf\u4e3aINF\uff08\u53ef\u4ee5\u65e0\u9650\u8fd0\u8f93\uff09\uff0c\u8d39\u7528\u4e3a1\u7684\u8fb9\uff0c\u56e0\u4e3a\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u5e94\u8be5\u5efa\u53cc\u5411\u8fb9\uff0c\u6ce8\u610f\uff1a\u8fd8\u8981\u5efa\u53cd\u5411\u8fb9\uff08\u4e0d\u7406\u89e3\uff09\u3002\r\n\r\n4.\u6ce8\u610f\uff1a\u672c\u9898\u4e3a\u73af\uff0c\u6240\u4ee51\u53f7\u8282\u70b9\u4e0en\u53f7\u8282\u70b9\u8fd8\u5e94\u7279\u6b8a\u5904\u7406\uff08\u53c2\u71673\uff09\u3002\r\n\r\n\u9644\u4e0a\u4ee3\u7801\uff1a\r\n```cpp\r\n#include<cstdio>\r\n#include<queue>\r\n#include<cstring>\r\n#include<queue>\r\n#include<algorithm>\r\n#define INF 2147483647\r\nusing namespace std;\r\nqueue<int> f;\r\n\tint n,m,len=0,st,ed;\r\n\tstruct node{int x,y,c,d,next;} a[10000];\r\n\tint b[10000],last[10000],dis[10000],pre[10000],pos[10000],p[10000];\r\n\tbool bz[10000];\r\nvoid ins(int x,int y,int c,int d)\r\n{\r\n\ta[len].x=x;a[len].y=y;a[len].c=c;a[len].d=d;a[len].next=last[x];last[x]=len++;\r\n}\r\nbool spfa()\r\n{\r\n\tmemset(bz,true,sizeof(bz));\r\n\tbz[st]=false;\r\n\tmemset(dis,63,sizeof(dis));\r\n\tdis[st]=0;\r\n\tp[st]=INF;\r\n\tf.push(st);\r\n\twhile(!f.empty())\r\n\t{\r\n\t\tint x=f.front();\r\n\t\tbz[x]=true;\r\n\t\tfor(int i=last[x];i!=-1;i=a[i].next)\r\n\t\t{\r\n\t\t\tint y=a[i].y;\r\n\t\t\tif(a[i].c>0&&dis[y]>dis[x]+a[i].d)\r\n\t\t\t{\r\n\t\t\t\tdis[y]=dis[x]+a[i].d;\r\n\t\t\t\tpos[y]=x;\r\n\t\t\t\tpre[y]=i;\r\n\t\t\t\tp[y]=min(p[x],a[i].c);\r\n\t\t\t\tif(bz[y])\r\n\t\t\t\t{\r\n\t\t\t\t\tf.push(y);\r\n\t\t\t\t\tbz[y]=false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tf.pop();\r\n\t}\r\n\treturn dis[ed]<1061109567;\r\n}\r\nint flow()\r\n{\r\n\tint ans=0;\r\n\twhile(spfa())\r\n\t{\r\n\t\tans+=p[ed]*dis[ed];\r\n\t\tfor(int i=ed;i!=st;i=pos[i])\r\n\t\t{\r\n\t\t\ta[pre[i]].c-=p[ed];\r\n\t\t\ta[pre[i]^1].c+=p[ed];\r\n\t\t}\r\n\t}\r\n\treturn ans;\r\n}\r\nint main()\r\n{\r\n\tint sum=0;\r\n\tscanf(\"%d\",&n);\r\n\tst=0;ed=n+1;\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tscanf(\"%d\",&b[i]);\r\n\t\tsum+=b[i];\r\n\t}\r\n\tsum/=n;\r\n\tmemset(last,-1,sizeof(last));\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tif(b[i]>sum)\r\n\t\t\tins(st,i,b[i]-sum,0),ins(i,st,0,0);\r\n\t\telse\r\n\t\t\tins(i,ed,sum-b[i],0),ins(ed,i,0,0);\r\n\tfor(int i=2;i<=n;i++)\r\n\t{\r\n\t\tins(i-1,i,INF,1),ins(i,i-1,0,-1);\r\n\t\tins(i,i-1,INF,1),ins(i-1,i,0,-1);\r\n\t}\r\n\tins(1,n,INF,1),ins(n,1,0,-1);\r\n\tins(n,1,INF,1),ins(1,n,0,-1);\r\n\tprintf(\"%d\",flow());\r\n}\r\n```",
        "postTime": 1520068190,
        "uid": 31955,
        "name": "Mark_ZZY",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "\u4eca\u5929\u5199 $P2512$ $[HAOI2008]$ \u7cd6\u679c\u4f20\u9012\u4e86\uff0c\u4e8e\u662f\u8d70\u63a8\u8350\u6765\u770b\u8fd9\u9053\u9898\u3002\n\n------------\n\n\u6838\u5fc3\u7b97\u6cd5:\u8d2a\u5fc3\uff0c\u4e09\u5206\u3002\n\n\uff08\u867d\u7136\u9898\u76ee\u6ca1\u6807\u4e09\u5206\u4f46\u6211\u8fd8\u662f\u7528\u4e86\u3002\n\n\u6211\u4eec\u5148\u770b\u9898:\n\n\n* \u6709 $n$ \u4e2a\u73af\u5f62\u6392\u5217\u7684\u4ed3\u5e93\uff0c\u6bcf\u4e2a\u4ed3\u5e93\u5b58\u50a8\u7684\u8d27\u7269\u6570\u91cf\u4e0d\u7b49\u3002\n\n* \u7528\u6700\u5c11\u642c\u8fd0\u91cf\u53ef\u4ee5\u4f7f $n$ \u4e2a\u4ed3\u5e93\u7684\u5e93\u5b58\u6570\u91cf\u76f8\u540c\u3002\n\n* \u642c\u8fd0\u8d27\u7269\u53ea\u80fd\u5728\u76f8\u90bb\u7684\u4ed3\u5e93\u4e4b\u95f4\u642c\u8fd0\u3002\n\n\u7b49\u7b49\uff0c\u600e\u4e48\u6709\u70b9\u50cf  [\u5747\u5206\u7eb8\u724c ](https://www.luogu.com.cn/problem/P1031) \uff1f\n\n\u65b9\u6cd5\u6211\u5c31\u4e0d\u591a\u8bf4\u4e86\uff0c\u4e0d\u4f1a\u7684\u8bdd\u770b\u4e00\u4e0b\u5b83\u7684[\u9898\u89e3](https://www.luogu.com.cn/problem/solution/P1031)\u3002\n\n\n\u4f46\u60f3\u4e00\u60f3\uff0c\u5747\u5206\u7eb8\u724c\u662f\u7ebf\u6027\u7684\uff0c\u8fd9\u9898\u662f\u73af\u5f62\u7684\uff1b\n\n\u6240\u4ee5\u8fd9\u4e24\u9898\u533a\u522b\u662f\u6b64\u9898\u9996\u5c3e\u4e4b\u95f4\u6709\u8d27\u7269\u4f20\u8f93\uff1b\n\n\u6545\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u4e00\u53f7\u4ed3\u5e93\u4e0e $N$\u53f7\u4ed3\u5e93\u4e4b\u95f4\u7684\u8d27\u7269\u4f20\u8f93\u91cf\u6765\u5f97\u5230\u6b63\u89e3\u3002\n\n\u4f46\u6570\u636e\u53ef\u80fd\u5f88\u5927\uff0c\u66b4\u529b\u679a\u4e3e\u4f1a ~~\u65f6\u95f4\u5145\u88d5~~  $TLE$ \u6389\uff1b\n\n\u8fd9\u65f6\u5019\u5c31\u8981\u7528\u4e09\u5206\u4e86\u3002\n\n\u6211\u4eec\u770b\u5747\u5206\u7eb8\u724c\u4e2d\u7684\u65b9\u6cd5\uff1b\n\n\n\n```cpp\n\tjl=0;ans=0;\n\tfor(int i=1;i<=n;i++){\n\t\tjl=jl+a[i]-sum;\n\t\tans+=abs(jl);\n\t}\n```\n\n\u8fd9\u662f $jl$ \u521d\u59cb\u4e3a\u96f6\u65f6\uff08\u4e5f\u5c31\u662f\u94fe\uff09\u7684\u505a\u6cd5\uff1b\n\n\u6211\u4eec\u53d1\u73b0 $ans$ \u6bcf\u6b21\u52a0\u4e0a $jl$ \u7684\u7edd\u5bf9\u503c\uff1b\n\n\u7528\u56fe\u5f62\u8868\u793a\u7684\u8bdd\u5c31\u662f $jl$ \u5230 \u76f4\u7ebf $y=0$ \u7684\u8ddd\u79bb\uff1b\n\n![](https://i.loli.net/2020/10/27/FrJXCg8uRjnUapA.png)\n\n\u5176\u4e2d $x$ \u4e3a\u5faa\u73af\u4e2d\u7684 $i$ \uff0c$y$ \u4e3a $jl$ \u3002\n\n\u8fd9\u662f\u521d\u59cb\u503c\u4e3a $0$ \u7684\u60c5\u51b5\uff0c\u82e5\u521d\u59cb\u503c\u4e3a $1$ \u5219\u6709\u4e0b\u56fe\uff1a\n\n![](https://i.loli.net/2020/10/27/u2UyistLEao3XN1.png)\n\n\u7528\u6570\u8868\u793a\u5462\uff1f\n\n\u5c31\u662f \u4e00\u53f7\u4ed3\u5e93\u4e0e $N$ \u53f7\u4ed3\u5e93\u7684\u4f20\u8f93\u91cf(\u6709\u65b9\u5411)\n\n\u800c\u4e14\u5bf9\u4e8e\u51fd\u6570  $ans=f(x)$  $x$ \u662f $jl$ \u7684\u521d\u59cb\u503c\uff0c\n\n\u5b83\u662f\u5355\u51f9\u5cf0\u7684  \u5982\u56fe\u4e0b:\n\n\n![](https://i.loli.net/2020/10/27/4as89MgEDrKZWPY.png)\n\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e09\u5206\u6c42\u89e3\u3002\n\n\u4e09\u5206\u51fd\u6570\u89e3\u6cd5:\n\n* \u5148\u627e\u51fa\u51fd\u6570\u6700\u503c\u4e24\u4fa7\u7684\u70b9\uff0c\u5404\u4e00\u4e2a\u3002\u6211\u4eec\u53ef\u4ee5\u5f00\u4e2a\u5f88\u5927\u7684\u6570 $maxn\uff0cminn$\u3002\n* \u5728\u9010\u6b65\u679a\u4e3e\uff0c\u6bcf\u6b21\u8ba1\u7b97\u4e24\u70b9\u5e73\u5747\u503c $ans$ \u7684\u51fd\u6570\u503c\u548c $ans+1$ \u7684\u51fd\u6570\u503c\u3002\n* \u6bd4\u8f83\u82e5\u4e24\u70b9\u5e73\u5747\u503c\u7684\u51fd\u6570\u503c\u66f4\u5927\u5c06 $minn$ \u8c03\u5230 $ans$ \uff0c\u5426\u5219\u5c06 $maxn$ \u8c03\u5230  $ans+1$ \u3002\n* \u91cd\u590d\u4ee5\u4e0a\u4e24\u6b65\uff0c\u76f4\u5230 $maxn-minn<5$ \u3002\n* \u5269\u4e0b\u7684\u7528\u66b4\u529b\u679a\u4e3e \u3002\n* \u6700\u540e\u5f97\u51fa\u6765\u7684\u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n\n\u4e0b\u9762\u5c31\u89c1\u4ee3\u7801\u5427:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long//\u6211\u5f00  long long \u4e86 \nint a[1000005];\nint n;\nint jl=0;\nint ans=0;//\u7b54\u6848  \u50a8\u5b58\u8ba1\u7b97 abs(jl)  \u7684\u503c\nint anss=0;//\u50a8\u5b58\u8ba1\u7b97 abs(jl+1)  \u7684\u503c  \nint cs;\nint sum=0;//\u8ba1\u7b97\u5e73\u5747\u503c \nint minn=-4000000000000,maxn=4000000000000;//\u4e24\u4e2a\u5f88\u5927\u7684\u6570 \n//---------------------// \u7edd\u5bf9\u503c\u51fd\u6570 \nint abss(int x){      // \n\treturn x>0? x:-x;// \u4e09\u76ee\u8fd0\u7b97\u7b26  a \u6bd4\u8f83 b \u5982\u679c\u4e3a\u771f c  :  \u5426\u5219   d \n}                   //\n//-----------------// \n//-------------------------------// \u8ba1\u7b97\u521d\u59cb\u503c\u4e3a s \u65f6\u7684 ans \u548c\u521d\u59cb\u503c\u4e3a s+1 \u65f6\u7684 anss \nint js(int s){                  // \n\tjl=s;ans=0;anss=0;         // \n\tfor(int i=1;i<=n;i++){    // \n\t\tjl=jl+a[i]-sum;      // \n\t\tans+=abss(jl);      // \n\t\tanss+=abss(jl+1);  // \n\t}                     // \n\tif(ans<anss)return 0;// \n\telse return 1;      // \n}                      //\n//--------------------// \nsigned main(){// int \u8868\u793a long long \u6545 main \u8981\u7528 signed  \n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tsum+=a[i];\n\t}\n\tsum/=n;//\u5e73\u5747\u503c \n\twhile(maxn-minn>5){//\u4e09\u5206 \n\t\tcs=(maxn+minn)/2;\n\t\tif(js(cs)==1)minn=cs;\n\t\telse maxn=cs+1;\n\t}\n\tint mmin=400000000000000000;//\u7cbe\u5ea6\u4fee\u6b63 \n\tfor(int i=minn;i<=maxn;i++){\n\t\t\tjs(i);\n\t\tmmin=min(mmin,ans);\n\t}\n\tcout<<mmin<<endl;//\u7b54\u6848 \n}\n```\n\n\u5927\u5bb6\u53ef\u80fd\u5bf9\u6211 \u6570\u7ec4 $a$ \u5f00\u5f88\u5927\u4e0d\u7406\u89e3\u3002\n\n\u5176\u5b9e\u5b83\u7684\u8303\u56f4\u6070\u597d\u7b26\u5408 [\u7cd6\u679c\u4f20\u9012](https://www.luogu.com.cn/problem/P2512) \u7684\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u7bc7\u9898\u89e3\u4e5f\u53ef\u8fc7\u7cd6\u679c\u4f20\u9012\u3002\n\n\u8fd9\u7bc7\u9898\u89e3\u5c31\u5230\u8fd9\u91cc\u4e86\uff0c\n\n\u6211\u8fd8\u6ca1\u5199\u8fc7\u51e0\u6b21\uff0c\u6709\u4e0d\u5230\u4e4b\u5904\u8bf7\u591a\u591a\u6307\u6559\u3002\n\n\n\n\n\n",
        "postTime": 1603759428,
        "uid": 399239,
        "name": "\u5929\u5357\u661f\u9b54\u828b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "Uplate\uff1a\u6700\u540e\u7684\u65b9\u5411\u53d8\u5bb9\u91cf\u5199\u9519\u4e86\n\n\u65e2\u7136\u8fd9\u9053\u9898\u7684\u5206\u7c7b\u662f **\u7f51\u7edc\u6d4124\u9898** \uff0c\u6211\u8fd9\u4e2a\u849f\u84bb\u5c31\u8d21\u732e\u4e00\u7247\u7f51\u7edc\u6d41\u7684\u9898\u89e3\u3002\n\n\u4e07\u7269\u7686\u53ef\u7f51\u7edc\u6d41\uff08\u6ed1\u7a3d\uff09\u3002\n\n## \u524d\u7f6e\u829d\u58eb\uff1a\u7f51\u7edc\u6d41\n\n\u6781\u5176\u63a8\u8350\u8fd9\u4f4d\u795e\u4ed9\u7684 [\u7f51\u7edc\u6d41\u65e5\u62a5](https://www.luogu.com.cn/blog/ONE-PIECE/wang-lao-liu-di-zong-jie)\uff0c\u4e0d\u4f1a\u7684\u540c\u5b66\u53ef\u4ee5\u53bb\u5b66\u4e60\u4e00\u4e0b\u3002\n\n\u5b66\u4e60\u5b8c\u6210\u4e4b\u540e\u518d\u505a\u4e00\u4e0b [\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41](https://www.luogu.com.cn/problem/P3381) \u7684\u6a21\u677f\u5c31\u53ef\u4ee5\u53bb\u5207\u6389\u8fd9\u9053\u9898\u4e86\u3002\n\n## \u672c\u9898\u8bb2\u89e3\n\n\u5982\u679c\u60a8\u8ba4\u771f\u5b66\u4e60\u7f51\u7edc\u6d41\u5e76\u5bf9\u7f51\u7edc\u6d41\u6709\u521d\u6b65\u4e86\u89e3\uff0c\u5c31\u4f1a\u77e5\u9053\u7f51\u7edc\u6d41\u9898\u76ee\u4e3b\u8981\u8003\u5bdf\u7684\u662f **\u5efa\u56fe\u80fd\u529b** \uff0c\u5c31\u662f\u60a8\u628a\u56fe\u5efa\u51fa\u6765\u5c31\u80fd\u5207\u6389\u3002\n\n### \u7b2c\u4e00\u6b65\uff0c\u786e\u8ba4\u8d77\u70b9\u4e0e\u7ec8\u70b9\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u4e9b\u7bb1\u5b50\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6ca1\u6709\u7a81\u51fa\u7684\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u8981\u521b  **\u8d85\u7ea7\u8d77\u70b9\u548c\u8d85\u7ea7\u7ec8\u70b9** \uff0c\u901a\u4fd7\u70b9\u8bf4\u5c31\u662f\u628a\u8d77\u70b9\u8bbe\u4e3a `0` ,\u91cd\u70b9\u8bbe\u4e3a `n+1` \u5c31\u884c\u4e86\u3002\n\n### \u7b2c\u4e8c\u6b65\uff0c\u628a\u6743\u503c\u8fde\u4e0a\uff1a\n\n\u901a\u8fc7\u5b9e\u9645\u610f\u4e49\u53ef\u5f97\uff0c\u4ece\u8d77\u70b9\u5fd8\u6bcf\u4e2a\u4ed3\u5e93\u8fde\u4e00\u6761 **\u5bb9\u91cf\u4e3a\u5e93\u5b58\uff0c\u8d39\u7528\u4e3a0** \u7684\u8fb9\uff0c\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u628a\u5e93\u5b58\u9001\u5230\u6bcf\u4e2a\u4ed3\u5e93\u91cc\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```\n\tfor(int i=1;i<=n;i++){\n\t    c[i]=read();\n\t    sum+=c[i];\n\t    add(s,i,c[i],0);\n\t    add(i,s,0,0);\n\t}\n```\n\n### \u7b2c\u4e09\u6b65\uff0c\u4ed3\u5e93\u4e4b\u95f4\u8fde\u7ebf\uff1a\n\n\u7531\u4e8e\u6bcf\u4e2a\u4ed3\u5e93\u90fd\u53ef\u4ee5\u5f80 **\u4e24\u904d\u76f8\u90bb\u7684\u4ed3\u5e93** \u9001\u8d27,\u5c31\u662f\u628a\u6bcf\u4e24\u4e2a\u4ed3\u5e93\u4e4b\u95f4\u8fde\u4e00\u6761**\u65e0\u5411\u8fb9**\uff0c**\u5bb9\u91cf\u4e3ainf\uff0c\u8d39\u7528\u4e3a1**\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fdb\u884c\u5206\u914d\u4e86\u3002\n\n\u6ce8\u610f\uff1a`1` \u4e0e `n` \u4e4b\u95f4\u7684\u8fde\u7ebf\u8981\u7279\u6b8a\u5904\u7406\u4e00\u4e0b\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```\n\tfor(int i=1;i<n;i++){\n\t    add(i,i+1,inf,1);\n\t    add(i+1,i,0,-1);\n\t    add(i+1,i,inf,1);\n\t    add(i,i+1,0,-1);\n\t}\n\tadd(1,n,inf,1);\n\tadd(n,1,0,-1);\n\tadd(n,1,inf,1);\n\tadd(1,n,0,-1);\n\n```\n\n### \u7b2c\u56db\u6b65\uff0c\u4ed3\u5e93\u4e0e\u7ec8\u70b9\u8fde\u7ebf\u3002\n\n\u628a\u6bcf\u4e2a\u4ed3\u5e93\u5411\u7ec8\u70b9\u8fde\u4e00\u6761 **\u5bb9\u91cf\u4e3a\u5e73\u5747\u6570\uff0c\u8d39\u7528\u4e3a0** \u7684\u8fb9\uff0c\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u4ed3\u5e93\u7684\u5bb9\u91cf **\u5f3a\u5236\u9650\u5236\u5230\u5e73\u5747\u6570**\u3002\u53c8\u56e0\u4e3a\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u6c42\u7684\u662f **\u5728\u5230\u8fbe\u7ec8\u70b9\u6570\u91cf\u6700\u591a\u65f6** \u7684\u6700\u5c0f\u8d39\u7528\uff0c\u5c31\u53ef\u4ee5\u987a\u7406\u6210\u7ae0\u5730\u6c42\u51fa\u7ed3\u679c\u3002\n\n\u5e73\u5747\u6570\u53ef\u4ee5\u5728\u8f93\u5165\u4e2d\u6c42\u89e3\uff0c\u6211\u7528 `sum` \u8868\u793a\u4e86\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```\n\tfor(int i=1;i<=n;i++){\n\t\tadd(i,t,sum,0);\n\t\tadd(t,i,sum,0);\n\t}\n```\n\n## \u5168\u90e8\u4ee3\u7801\uff1a\n\n~~\u56e0\u4e3a\u6570\u636e\u8303\u56f4\u5f88\u5c0f\u6240\u4ee5\u6211\u5c31\u7528\u4e86 `EK` \u65e0\u4f24\u5927\u96c5~~\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<algorithm>\n\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nconst int inf=2147483647;\nint maxn,cost;\nint top=1,head[5001];\nint dis[5001];\nint n,m,s,t,book[5001],c[5001];\nstruct point{\n    int v,w,val,next;\n}a[100001];\nstruct b{\n    int fa;\n    int v;\n}b[5001];\ninline void add(int u,int v,int val,int w){\n    a[++top].v=v;\n    a[top].val=val;\n    a[top].w=w;\n    a[top].next=head[u];\n    head[u]=top;\n}\nbool spfa(){\n\tqueue<int> q;\n    memset(b,0,sizeof(b));\n    memset(book,0,sizeof(book));\n    for(int i=0;i<=t;i++)\n    \tdis[i]=inf;\n    dis[s]=0;\n    q.push(s);\n    book[s]=1;\n    while(!q.empty()){\n        int u=q.front();\n        book[u]=0;\n        q.pop();\n        for(int i=head[u];i;i=a[i].next){\n            int v=a[i].v,w=a[i].w;\n            if(a[i].val>0&&dis[v]>dis[u]+w){\n                dis[v]=dis[u]+w;\n                b[v].fa=u,b[v].v=i;\n                if(book[v]==0){\n                    q.push(v);\n                    book[v]=1;\n                }\n            }\n        }\n    }\n    return dis[t]!=inf;\n}\nvoid EK(){\n    while(spfa()){\n        int minn=inf;\n        for(int i=t;i!=s;i=b[i].fa)\n\t\t\tminn=min(minn,a[b[i].v].val);\n        for(int i=t;i!=s;i=b[i].fa){\n            a[b[i].v].val-=minn;\n            a[b[i].v^1].val+=minn;\n        }\n        maxn+=minn;\n        cost+=minn*dis[t];\n    }\n    return;\n}\nint main()\n{\n\tint sum=0;\n    n=read();\n    s=0,t=n+1;\n    for(int i=1;i<=n;i++){\n    \tc[i]=read();\n    \tsum+=c[i];\n        add(s,i,c[i],0);\n        add(i,s,0,0);\n    }\n    sum/=n;//\u6c42\u5e73\u5747\u6570\n    for(int i=1;i<n;i++){\n    \tadd(i,i+1,inf,1);\n    \tadd(i+1,i,0,-1);\n    \tadd(i+1,i,inf,1);\n    \tadd(i,i+1,0,-1);\n\t}\n\tadd(1,n,inf,1);\n\tadd(n,1,0,-1);\n\tadd(n,1,inf,1);\n\tadd(1,n,0,-1);\n\tfor(int i=1;i<=n;i++){\n\t\tadd(i,t,sum,0);\n\t\tadd(t,i,0,0);\n\t}\n    EK(); \n    cout<<cost;\n    return 0;\n}\n```\n\u8c22\u8c22\u5927\u5bb6\uff01",
        "postTime": 1611670916,
        "uid": 253738,
        "name": "\u542c\u53d6MLE\u58f0\u4e00\u7247",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7684\u5efa\u6a21\u6bd4\u8f83\u6709\u610f\u601d\uff0c\u4f46\u8fd8\u662f\u633a\u7b80\u5355\u7684\n\n\u9996\u5148\uff0c\u56e0\u4e3a\u4e00\u4e2a\u70b9\u53ef\u4ee5\u76f4\u63a5\u8fd0\u8d27\u5230\u4e0e\u4ed6\u5b83\u76f8\u90bb\u7684\u4e24\u70b9\uff0c\u6240\u4ee5\u6bcf\u4e2a\u70b9$i$\u5148\u4e0e\u70b9$i-1,i+1$\u5efa\u8fb9\uff0c\u6d41\u91cf\u4e3a\u4e00\u4e2a\u6781\u5927\u503c\uff0c\u8d39\u7528\u4e3a$1$\n\n\u6bcf\u4e2a\u70b9\u6700\u7ec8\u7684\u8d27\u7269\u6570\u91cf\u662f\u8d27\u7269\u91cf\u603b\u548c\u9664\u4ee5$n$\uff0c\u6211\u4eec\u8bbe\u8fd9\u4e2a\u6700\u7ec8\u7684\u6570\u91cf\u4e3a$tot$\n\n\u63a5\u4e0b\u6765\uff1a\u5982\u679c\u4e00\u4e2a\u70b9$i$\u7684\u8d27\u7269\u6570\u91cf\u5927\u4e8e$tot$\uff0c\u8bf4\u660e\u8fd9\u4e2a\u70b9\u7684\u8d27\u7269\u8981\u5f80\u5916\u8fd0\uff0c\u6240\u4ee5\u8ba9\u8d85\u7ea7\u6e90\u70b9$S$\u5411$i$\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a$a[i]-tot$\uff0c\u8d39\u7528\u4e3a$0$\u7684\u8fb9  \n\u5982\u679c\u4e00\u4e2a\u70b9$i$\u7684\u8d27\u7269\u6570\u91cf\u5c0f\u4e8e$tot$\uff0c\u8bf4\u660e\u5916\u9762\u7684\u8d27\u7269\u8981\u8fd0\u8fdb\u6765\uff0c\u6240\u4ee5\u8ba9\u70b9$i$\u5411\u8d85\u7ea7\u6c47\u70b9$T$\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a$tot-a[i]$\uff0c\u8d39\u7528\u4e3a$0$\u7684\u8fb9\n\n\u82e5\u4e00\u4e2a\u70b9\u7684\u8d27\u7269\u6570\u91cf\u521a\u597d\u7b49\u4e8e$tot$\uff0c\u8bf4\u660e\u5b83\u6839\u672c\u4e0d\u9700\u8981\u8fdb\u8d27\u6216\u8fd0\u8d27\uff0c\u53ea\u9700\u8981\u5f53\u4e00\u4e2a\u4e2d\u8f6c\u7ad9\u5c31\u53ef\u4ee5\u4e86\uff0c\u6240\u4ee5\u4e0d\u548c$S,T$\u8fde\u8fb9\n\n\u8fd9\u6837\uff0c\u9001\u51fa\u7684\u8d27\u7269\u90fd\u4ece\u70b9$S$\u9001\u51fa\uff0c\u800c\u5168\u90e8\u6d41\u5411\u70b9$T$\uff0c\u5c31\u5316\u4e3a\u4e86\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u95ee\u9898\u3002\n\n#### \u5269\u4e0b\u7684\u5c31\u662f\u8dd1\u6a21\u677f\u5566\uff01\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst int Maxn=110,Maxm=1020,inf=0x3f3f3f3f;\nint nxt[Maxm],to[Maxm],flow[Maxm],cost[Maxm];\nint cur[Maxn],dis[Maxn],head[Maxn],a[Maxn];\nint pre[Maxn];\nbool vis[Maxn];\nint n,s,t,edgecnt=1,ans,tot;\ninline int read()\n{\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0' && ch<='9')s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n\treturn s*w;\n}\ninline void add(int x,int y,int c,int v)\n{\n\t++edgecnt;\n\tnxt[edgecnt]=head[x];\n\tto[edgecnt]=y;\n\tflow[edgecnt]=c;\n\tcost[edgecnt]=v;\n\thead[x]=edgecnt;\n}\nbool spfa()\n{\n\tqueue <int> q;\n\tmemset(dis,inf,sizeof(dis));\n\tmemset(cur,inf,sizeof(cur));\n\tvis[s]=1,dis[s]=0,q.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tvis[x]=0;\n\t\tfor(int i=head[x];i;i=nxt[i])\n\t\t{\n\t\t\tint y=to[i];\n\t\t\tif(!flow[i])continue;\n\t\t\tif(dis[y]>dis[x]+cost[i])\n\t\t\t{\n\t\t\t\tdis[y]=dis[x]+cost[i];\n\t\t\t\tpre[y]=i,cur[y]=min(cur[x],flow[i]);\n\t\t\t\tif(!vis[y])vis[y]=1,q.push(y);\n\t\t\t}\n\t\t}\n\t}\n\tif(dis[t]==inf)return 0;\n\treturn 1;\n}\nvoid upd()\n{\n\tint x=t;\n\twhile(x!=s && x)\n\t{\n\t\tint i=pre[x];\n\t\tflow[i]-=cur[t];\n\t\tflow[i^1]+=cur[t];\n\t\tx=to[i^1];\n\t}\n\tans+=dis[t]*cur[t];\n}\nint main()\n{\n\t//freopen(\"in.txt\",\"r\",stdin);\n\tn=read();\n\ts=0,t=n+1;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\ttot+=(a[i]=read());\n\t\t//\u4e0e\u76f8\u90bb\u7684\u70b9\u8fde\u8fb9\n\t\tif(i==1)\n\t\t{\n\t\t\tadd(1,2,inf,1);\n\t\t\tadd(2,1,0,-1);\n\t\t\tadd(1,n,inf,1);\n\t\t\tadd(n,1,0,-1);\n\t\t}\n\t\telse if(i==n)\n\t\t{\n\t\t\tadd(n,n-1,inf,1);\n\t\t\tadd(n-1,n,0,-1);\n\t\t\tadd(n,1,inf,1);\n\t\t\tadd(1,n,0,-1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tadd(i,i+1,inf,1);\n\t\t\tadd(i+1,i,0,-1);\n\t\t\tadd(i,i-1,inf,1);\n\t\t\tadd(i-1,i,0,-1);\n\t\t}\n\t}\n\ttot/=n;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(a[i]>tot)\n\t\t{\n\t\t\tadd(s,i,a[i]-tot,0);\n\t\t\tadd(i,s,0,0);\n\t\t}\n\t\tif(a[i]<tot)\n\t\t{\n\t\t\tadd(i,t,tot-a[i],0);\n\t\t\tadd(t,i,0,0);\n\t\t}\n\t}\n\twhile(spfa())upd();\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1574230046,
        "uid": 120362,
        "name": "Priori_Incantatem",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb](https://www.cnblogs.com/GJY-JURUO/p/12231032.html)\n\n---\n\n# \u9898\u76ee\u5927\u610f\uff1a\n\n\u6709$n$\u4e2a\u4ed3\u5e93\uff0c\u8981\u628a\u6240\u6709\u4ed3\u5e93\u7684\u5b58\u5e93\u6570\u7edf\u4e00\uff0c\u95ee\u4e00\u5171\u8981\u642c\u591a\u5c11\u7269\u54c1\u3002\n\n# \u6b63\u6587\uff1a\n\n\u9996\u5148\u8fd9\u662f\u8d39\u7528\u6d41\u3002\n\n\u8981\u7edf\u4e00\u5b58\u5e93\u6570\uff0c\u7edf\u4e00\u7684\u5b58\u6b3e\u6570\u5c31\u662f\u6240\u6709\u5b58\u5e93\u6570\u7684\u5e73\u5747\u503c\uff0c\u90a3\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u5b58\u5e93\u6570\u5c0f\u4e8e\u5e73\u5747\u503c\u5c31\u8981\u8fdb\u8d27\uff0c\u5982\u679c\u5b58\u5e93\u6570\u5927\u4e8e\u5e73\u5747\u503c\u5c31\u8981\u51fa\u8d27\u3002\n\n\u90a3\u6211\u4eec\u5c31\u628a\u6bcf\u4e2a\u4ed3\u5e93\u4f5c\u4e24\u4efd\uff08\u5047\u8bbe\u5bf9\u4e8e\u7b2c$i$\u4e2a\u4ed3\u5e93\uff0c\u4e24\u4efd\u5206\u522b\u662f $a_{i_A}$ \u548c $a_{i_B}$\uff09\uff0c\u6837\u4f8b\u5982\u56fe\uff1a\n\n![\u56fe1](https://s2.ax1x.com/2020/01/23/1VZdoD.png)\n\n\u5982\u679c\u8981\u8fdb\u8d27\uff0c$A$ \u548c\u6e90\u70b9 $S$ \u8fde\u63a5\uff0c\u5426\u5219 $B$ \u548c\u6c47\u70b9 $T$ \u8fde\u63a5\uff0c\u8d39\u7528\u662f $|\\text{\u5b58\u5e93\u6570-\u5e73\u5747\u503c}|$\uff0c\u6837\u4f8b\u5982\u56fe\uff1a\n\n![\u56fe2](https://s2.ax1x.com/2020/01/23/1VQy4K.png)\n\n\u6a2a\u7ebf\u4e0a\u662f\u8d39\u7528\u3002\n\n\u9898\u76ee\u4e2d\u8bf4\uff0c\"$G$ \u516c\u53f8\u6709 $n$ \u4e2a\u6cbf\u94c1\u8def\u8fd0\u8f93\u7ebf **\u73af\u5f62\u6392\u5217** \u7684\u4ed3\u5e93\"\uff0c\u76f8\u90bb\u7684\u7ed3\u70b9\u662f\u76f8\u8fde\u7684\uff0c\u6837\u4f8b\u5982\u56fe\uff1a\n\n![\u56fe3](https://s2.ax1x.com/2020/01/23/1VQ4HI.png)\n\n\u8be6\u89c1\u4ee3\u7801\u3002\n\n# \u4ee3\u7801\uff1a\n\n```cpp\nfor (int i = 1; i <= n; i++)\n{ \n\tscanf(\"%d\", &x[i]);\n\tsum += x[i];\n}\nsum /= n;       // \u53d6\u5e73\u5747\u503c\nfor (int i = 1; i <= n; i++)\n{\n\tx[i] -= sum;\n\tif(x[i] < 0)                 //\u548c\u6e90\u70b9\u548c\u6c47\u70b9\u8fde\u7ebf\n\t{\n\t\tAdd(i + n, t, -x[i], 0);\n\t} \n\telse \n\t{\n\t\tAdd(s, i, x[i], 0);\n\t}\n\tif(i - 1 > 0)              //\u4ee5\u4e0b\u4e92\u76f8\u8fde\u7ebf\n\t{\n\t\tAdd(i, i - 1, INF, 1);\n\t\tAdd(i, i + n - 1, INF, 1);\n\t}\n\tif(i + 1 <= n)\n\t{\n\t\tAdd(i, i + 1, INF, 1);\n\t\tAdd(i, i + 1 + n, INF, 1);\n\t}\n}\nAdd(1, n, INF, 1);\nAdd(1, n << 1, INF, 1);\nAdd(n, 1, INF, 1);\nAdd(n, 1 + n, INF, 1);\nMCMF();     //\u8d39\u7528\u6d41\nprintf(\"%d\\n\", mincost);\n```",
        "postTime": 1579778965,
        "uid": 80695,
        "name": "Jayun",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "\u4f5c\u4e3a\u4e00\u9053\u7f51\u7edc\u6d4124\u9898\uff0c\u5f53\u7136\u662f\u7528\u7f51\u7edc\u6d41\uff0c\u800c\u663e\u7136\u662f\u7528\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u5728\u5982\u4f55\u5efa\u56fe\u4e86\u3002\u3002\u3002\u5efa\u5b8c\u4e86\u5c31\u4e0a\u88f8\u7684EK\u5c31\u53ef\u4ee5\u4e86\u3002\u3002\n\n\u90a3\u4e48\uff0c\u8981\u4f7f\u6240\u6709\u7684\u4ed3\u5e93\u8d27\u7269\u90fd\u4e00\u6837\u663e\u7136\uff0c\u8d27\u7269\u6570\u91cf\u5927\u4e8e\u5e73\u5747\u503c\u7684\u8981\u8fd0\u51fa\uff0c\u5c0f\u4e8e\u5e73\u5747\u503c\u7684\u5c31\u8fd0\u5165\u3002\u5bf9\u4e8e\u5927\u4e8e\u5e73\u5747\u503c\u7684\uff0c\u6211\u4eec\u5c31\u548cs\u8fde\u8fb9\uff0c\u5c0f\u4e8e\u7684\u5c31\u548ct\u8fde\u8fb9\uff08\u5f53\u7136\u53cd\u8fc7\u6765\u662f\u4e00\u6837\u7684\uff09\u3002\u6d41\u91cf\u5c31\u662f\u8d27\u7269\u6570\u91cf\u548c\u5e73\u5747\u503c\u7684\u5dee\uff0c\u4e5f\u5c31\u662f\u8fd8\u9700\u8981\u8fd0\u51fa\u6216\u8fd0\u5165\u591a\u5c11\u3002\u8d39\u7528\u4e3a0\uff0c\u56e0\u4e3as\u548ct\u672c\u6765\u5c31\u662f\u8d85\u7ea7\u6e90\u548c\u8d85\u7ea7\u6c47\uff0c\u662f\u65b0\u52a0\u7684\uff0c\u6211\u4eec\u53ea\u662f\u501f\u6765\u8868\u793a\u4e00\u4e0b\u5173\u7cfb\u800c\u5df2\uff0c\u5e76\u4e0d\u9700\u8981\u82b1\u8d39\u3002\n\n\u5f53\u7136\uff0c\u5bf9\u4e8e\u76f8\u90bb\u7684\u70b9\u6211\u4eec\u4e5f\u9700\u8981\u5efa\u8fb9\uff0c\u5efa\u7684\u8fb9\u6d41\u91cf\u4e3ainf\uff0c\u56e0\u4e3a\u53ef\u4ee5\u968f\u4fbf\u8fd0\u591a\u5c11\uff0c\u8d39\u7528\u5c31\u662f1\u4e86\u3002\n\n#### \u6ce8\u610f\uff0c\u56fe\u4e3a\u65e0\u5411\u56fe\uff0c\u6b63\u7740\u53cd\u7740\u90fd\u8981\u5efa\u8fb9\u3002\n\n\u90a3\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u5efa\u56fe\u54ea\uff1f\u663e\u7136\uff0c\u5927\u4e8e\u5e73\u5747\u503c\u7684\u70b9\u6d41\u5411\u5c0f\u4e8e\u5e73\u5747\u503c\u7684\u70b9\uff0c\u4e0d\u6b63\u662f\u5f80\u5c0f\u4e8e\u5e73\u5747\u503c\u7684\u70b9\u8fd0\u8d27\u7269\u4e48\uff0c\u6bcf\u4e00\u6761\u9009\u5165\u6700\u5927\u6d41\u7684\u8fb9u->v\u5c31\u662fu\u5f80v\u8fd0\u8d27\u7269\n\n## \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int inf=100000000;\ndouble avr=0;\nint n,s,t,cnt=-1;\nint a[100100];\nint head[100100],nxt[100100],to[100100],val[100100],w[100100];\nint del[100100],q[100100],dis[100100],f[100100],pre[100100];\nvoid addedge(int x,int y,int z,int k)\n{\n\tcnt++;\n\tnxt[cnt]=head[x];\n\thead[x]=cnt;\n\tto[cnt]=y;\n\tw[cnt]=z;\n\tval[cnt]=k;\n}\nbool spfa()\n{\n\tmemset(f,0,sizeof(f));\n\tmemset(dis,-1,sizeof(dis));\n\tq[1]=s,dis[s]=0,f[s]=1,del[s]=0x7fffffff;\n\tint l=0,r=1;\n\twhile(l<r)\n\t{\n\t\tint u=q[++l];\n\t\tfor(int i=head[u];i!=-1;i=nxt[i])\n\t\t{\n\t\t\tint v=to[i];\n\t\t\tif((dis[v]>dis[u]+val[i] || dis[v]==-1) && w[i])\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+val[i];\n\t\t\t\tdel[v]=min(del[u],w[i]),pre[v]=i;\n\t\t\t\tif(!f[v])\n\t\t\t\t{\n\t\t\t\t\tf[v]=1;\n\t\t\t\t\tq[++r]=v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tf[u]=0;\n\t}\n\treturn dis[t]!=-1;\n}\nint main()\n{\n\tmemset(head,-1,sizeof(head));\n\tscanf(\"%d\",&n);\n\ts=0,t=n+1;\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]),avr+=a[i];\n\tavr/=n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(a[i]>avr)addedge(s,i,a[i]-avr,0),addedge(i,s,0,0);\n\t\telse addedge(i,t,avr-a[i],0),addedge(t,i,0,0);//\u548cs\uff0ct\u8fde\u8fb9\n\t\tint j=i+1,k=i-1;\n\t\tif(i==n) j=1;\n\t\tif(i==1) k=n;\n\t\taddedge(i,j,inf,1),addedge(j,i,0,-1);\n\t\taddedge(i,k,inf,1),addedge(k,i,0,-1);//\u548c\u76f8\u90bb\u7684\u70b9\u8fde\u8fb9\n\t}\n\tint res=0;\n\twhile(spfa())//EK\n\t{\n\t\tres+=dis[t]*del[t];\n\t\tint tmp=t;\n\t\twhile(tmp!=s)\n\t\t{\n\t\t\tw[pre[tmp]]-=del[t];\n\t\t\tw[pre[tmp]^1]+=del[t];\n\t\t\ttmp=to[pre[tmp]^1];\n\t\t}\n\t}\n\tprintf(\"%d\",res);\n\treturn 0;\n}\n```",
        "postTime": 1532694509,
        "uid": 21874,
        "name": "hicc0305",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "# P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011\r\n------------\r\n\u89e3\u6cd5\uff1a\r\n\r\n\u8be5\u9898\u76ee\u7684\u6240\u7528\u7684\u662f\u8d2a\u5fc3\u6cd5\u3002\u5148\u8ba9\u7b2c\u4e00\u4e2a\u4ed3\u5e93\u7684\u8d27\u7269\u8fbe\u5230\u5e73\u5747\u6570\uff0c\u53ea\u4ea4\u63621\u30012\u4e24\u4e2a\u4ed3\u5e93\u7684\u8d27\u7269\uff0c\u7136\u540e\u8ba9\u7b2c\u4e8c\u4e2a\u4ed3\u5e93\u7684\u8d27\u7269\u8fbe\u5230\u5e73\u5747\u6570......\u76f4\u5230\u6700\u540e\u4e00\u4e2a\u4ed3\u5e93\u3002\u5b9e\u9645\u79fb\u52a8\u65f6\u662f\u4ece\u8d27\u7269\u6570\u6700\u591a\u7684\u4ed3\u5e93\u5f00\u59cb\u79fb\u52a8\uff0c\u4ece\u7b2c\u4e00\u4e2a\u5f00\u59cb\u79fb\u52a8\u53ef\u80fd\u5b58\u5728\u8d27\u7269\u4e0d\u591f\u7ed9\u7684\u60c5\u51b5\uff0c\u90a3\u5c31\u6682\u4e14\u5b58\u4e3a\u8d1f\u6570\uff0c\u76f4\u5230\u9047\u5230\u8d27\u7269\u6570\u5f88\u591a\u7684\u90a3\u4e00\u4e2a\u4ed3\u5e93\uff08\u8d85\u8fc7\u5e73\u5747\u6570\uff09\u628a\u8d1f\u6570\u5168\u90e8\u8865\u9f50\u3002\r\n\r\n## \u4f46\u662f\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u662f\u8d2a\u5fc3\u9898\u5462\uff1f\r\n\r\n\u4ee5\u4e0b\u6587\u5b57\u5f15\u81ea**\u77e5\u4e4e**\uff08\u6709\u6539\u52a8\uff09\r\n\r\n\r\n1\u3001\u5047\u8bbe\u8d27\u7269\u6570\u91cf\u53ef\u4ee5\u662f\u8d1f\u6570\r\n\r\n2\u3001\u5bf9\u4e8e\u6700\u5de6\u8fb9\u7684\u8d27\u7269\uff0c\u4e3a\u4e86\u4f7f\u5b83\u7684\u8d27\u7269\u6570\u8fbe\u5230\u5e73\u5747\uff0c\u53ea\u8981\u8fd8\u6ca1\u6709\u8fbe\u5230\u5e73\u5747\u65e0\u8bba\u5176\u4f59\u5b50\u60c5\u51b5\u5982\u4f55\u79fb\u52a8\uff0c\u4e00\u5b9a\u6709\u4e00\u6b65\u662f\u628a\u81ea\u5df1\u591a\u4f59\u7684\u8d27\u7269\u79fb\u52a8\u5230\u53f3\u8fb9\uff0c\u6216\u8005\u662f\u4ece\u53f3\u8fb9\u79fb\u52a8\u8fdb\u6765\u81ea\u5df1\u5dee\u4e86\u591a\u5c11\u4e2a\u8d27\u7269\r\n\r\n3\u3001\u7b2c\u4e00\u4e2a\u4ed3\u5e93\u53ea\u6709\u548c\u53f3\u8fb9\u8fdb\u884c\u4ea4\u4e92\u662f\u5408\u6cd5\u7684\uff0c\u6b65\u9aa41\u662f\u5fc5\u987b\u7684\r\n\r\n4\u3001\u5904\u7406\u597d\u7b2c\u4e00\u4e2a\u540e\uff0c\u5176\u4f59\u64cd\u4f5c\u4e00\u5b9a\u4e0d\u6d89\u53ca\u7b2c\u4e00\u4e2a\uff0c\u5426\u5219\u7b54\u6848\u66f4\u52a3\uff08\u7ecf\u8fc7\u524d\u4e00\u4e2a\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff09\r\n\r\n5\u3001\u65e0\u89c6\u7b2c\u4e00\u4e2a\uff0c\u4e8e\u662f\u73b0\u5728\u53c8\u662f\u60c5\u51b52\u4e86\uff08\u5b50\u7ed3\u6784\uff09\r\n\r\n6\u3001\u5bf9\u4e8e\u4e00\u4e2a\u4f1a\u51fa\u73b0\u8d1f\u6570\u7684\u65b9\u6848\uff0c\u901a\u8fc7\u8c03\u6574\u79fb\u52a8\u987a\u5e8f\uff0c\u4e00\u5b9a\u53ef\u4ee5\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u4e0d\u51fa\u73b0\u8d1f\u6570\u7684\u65b9\u6848\u3002\r\n\r\nCode\uff1a\r\n\r\n```cpp\r\n    #include<cstdio>\r\n    #include<algorithm>//sort\u5934\u6587\u4ef6\r\n    #include<cmath>//\u7edd\u5bf9\u503c\u51fd\u6570\u5934\u6587\u4ef6\r\n    #define _max 1000010\r\n    long long int all, ans=0;//\u8981\u7528long long int\r\n    int a[_max], c[_max];\r\n    int main() {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        for(int i=1; i<=n; i++) {\r\n            scanf(\"%d\",&a[i]);//\u8bfb\u5165\u6570\u636e\r\n            all+=a[i];//\u8ba1\u7b97\u603b\u548c\r\n        }\r\n        all/=n;//\u6c42\u5f97\u5e73\u5747\u503c\r\n        for(int i=1; i<n; i++) c[i]=c[i-1]+a[i]-all;\r\n        std::sort(c, c+n);//\u6392\u5e8f\r\n        long long int k=c[n/2];\r\n        for(int i=0; i<n; i++) ans+=fabs(k-c[i]);//\u6570\u5b66\u63a8\u5bfc\uff1a\u5c06\u6bcf\u4e2a\u4ed3\u5e93\u4e2d\u7684\u8d27\u7269\u6570\u53d8\u4e3a\u6570\u5217\u7684\u4e2d\u4f4d\u6570\u65f6\uff0c\u6240\u9700\u7684\u4ee3\u4ef7\u6700\u5c0f\r\n        printf(\"%lld\", ans);//\u8f93\u51fa\u7b54\u6848\r\n        return 0;\r\n}\r\n```",
        "postTime": 1513921609,
        "uid": 58502,
        "name": "char32_t",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "\u518d\u89c1\u8d39\u7528\u6d41\uff0c\u6211\u662f MOer.\n\n#### \u8fd9\u91cc\u63d0\u4f9b\u601d\u8def\uff0c\u5f0f\u5b50\u8bf7\u81ea\u884c\u63a8\u5012\u6216\u53c2\u8003\u4ee3\u7801\n\n\u6ce8\u610f\u5230\u8d27\u7269\u603b\u6570\u4e0d\u53d8\uff0c\u6240\u4ee5\u6bcf\u4e2a\u5e93\u6700\u540e\u62e5\u6709\u7684\u8d27\u7269\u6570\u786e\u5b9a\uff0c\u5219\u6bcf\u4e2a\u5e93\u8981\u8f6c\u51fa\u6216\u8f6c\u5165\u7684\u8d27\u7269\u6570\u4e00\u5b9a\u3002\n\n\u53c8\u56e0\u4e3a\u6bcf\u4e2a\u5e93\u53ea\u80fd\u548c\u4e24\u4e2a\u5e93\u4ea4\u6613\uff0c\u6545\u786e\u5b9a\u548c\u4e00\u4e2a\u5e93\u7684\u4ea4\u6613\u4e4b\u540e\u5c31\u53ef\u786e\u5b9a\u4e0e\u53e6\u4e00\u4e2a\u5e93\u7684\u4ea4\u6613\u3002\n\n\u6211\u4eec\u53c8\u63a8\u5e7f\u53d1\u73b0\uff0c\u53ea\u8981\u786e\u5b9a\u4efb\u610f\u4e00\u7ec4\u76f8\u90bb\u4e24\u5e93\u7684\u4ea4\u6613\uff0c\u5176\u5b83\u6240\u6709\u4ea4\u6613\u90fd\u53ef\u786e\u5b9a\u3002\n\n\u6240\u4ee5\u4ea4\u6613\u603b\u989d\u5c31\u662f\u4e2a\u4e00\u5143\u51fd\u6570\uff01\n\n\u63a8\u5f0f\u5b50\u53d1\u73b0\u8fd9\u662f\u4e2a\u7edd\u5bf9\u503c\u51fd\u6570\uff0c\u4e8e\u662f\u6211\u4eec\u5229\u7528\u521d\u4e00\u6570\u5b66\u4e2d\u7edd\u5bf9\u503c\u7684\u51e0\u4f55\u610f\u4e49\u53ef\u6c42\u5f97\u6700\u5c0f\u503c\u3002\n\n\u5f0f\u5b50\u5c31\u4e0d\u63a8\u4e86\uff0c\u5927\u6982\u5c31\u662f\u5217 $n-1$ \u4e2a\u7ebf\u6027\u65b9\u7a0b\u518d\u7528\u70b9\u9519\u4f4d\u76f8\u51cf\u3002\n\n\u4ee3\u7801\u91cc\u6709\u4e00\u4e9b\u8be6\u7ec6\u5f0f\u5b50\u548c\u7edd\u5bf9\u503c\u51fd\u6570\u6700\u503c\u6c42\u6cd5\n\n```cpp\n//coder: FeliksGM-YB\n#include<bits/stdc++.h>\n#define fu(i,a,b) for(int i = a, I = (b) + 1; i < I; ++i)\n#define fd(i,a,b) for(int i = a, I = (b) - 1; i > I; --i)\ntypedef long long ll;\nusing namespace std;\nconst int N=1e6+5;\ninline int read(){\n    int x=0;char ch=getchar();\n    while(!isdigit(ch))ch=getchar();\n    while(isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n    return x;\n}template <class T> inline void read(T &x) {\n    x=0;T f=1;char ch=getchar();\n    while(!isdigit(ch))f=ch=='-'?-1:1,ch=getchar();\n    while(isdigit(ch))x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n    x*=f;\n}int n;\nll a[N],avg,ans;//avg: \u5e73\u5747\u6570 \nll sum[N];//a \u6570\u7ec4\u524d\u7f00\u548c \nll x[N];//x[i] = -i * avg + sum[i]\n//\u4ee4 k[i] \u8868\u793a\u6bcf\u4e2a\u4eba\u5b9a\u5411\u8f6c\u51fa\u91d1\u5e01\u6570\n//\u63a8\u51fa k[i] = k[1] - x[i-1]\n//\u7edd\u5bf9\u503c\u51fd\u6570\u6700\u5c0f\u503c\uff0c\u53d8\u91cf\u4e3a k[1]\uff0c\u5229\u7528\u51e0\u4f55\u610f\u4e49\uff1a\n//k[1] \u5230 x[i] (1 <= i < n) \u548c 0 \u7684\u8ddd\u79bb\u4e4b\u548c\nll m;//\u8868\u793a k[1]\n//\u521d\u4e00\u6570\u5b66\uff0c\u53d6\u4e2d\u4f4d\u6570\u5373\u53ef \nint main(){\n\tavg=ans=0;\n\tfu(i,1,n)read(a[i]),avg+=a[i],sum[i]=sum[i-1]+a[i];\n\tavg/=n;\n\tfu(i,1,n-1)x[i]=sum[i]-i*avg;//\u6c42 x[i]\n\tx[n]=0;//\u5927\u90e8\u5206\u9898\u89e3\u91cc\u90fd\u628a\u8fd9\u53e5\u76f4\u63a5\u53bb\u6389\u800c\u4e0a\u4e00\u6b65\u5faa\u73af\u5230 n, \u6548\u679c\u4e00\u6837\n\t//\u4f46\u5176\u5b9e\u610f\u4e49\u6709\u5dee\u522b\uff0c\u8fd9\u5bfc\u81f4\u6211\u770b\u4e86\u534a\u5929\uff08\u4e3b\u8981\u56e0\u4e3a\u6211\u592a\u83dcQwQaQ\uff09 \n\tnth_element(x+1,x+(n+1>>1),x+n+1);//nth_element\u627e\u4e2d\u4f4d\u6570\uff0c\u5feb\u4e00\u70b9 \n\tm=x[n+1>>1];//\u53d6\u4e2d\u4f4d\u6570\uff0c\u5f97\u7edd\u5bf9\u503c\u51fd\u6570\u6700\u5c0f\u503c\u53d6\u5230\u7684\u70b9 \n\tfu(i,1,n)ans+=abs(m-x[i]);//\u6c42\u6700\u5c0f\u503c \n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1582878671,
        "uid": 104292,
        "name": "YellowBean_Elsa",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "\u5927\u5bb6\u597d\uff0c\u849f\u84bb\u53c8\u6765\u5199\u9898\u89e3\u4e86\n\n\u770b\u8fc7\u5176\u4ed6\u5927\u4f6c\u7684\u9ad8\u7ea7\u505a\u6cd5\uff0c\u849f\u84bb\u53ea\u80fd\u8868\u793a\u6211\u6ca1\u5b66\u8fc7\u521d\u4e2d\u6570\u5b66qwq\n\n\u4f46\u662f\u8fd9\u5e76\u4e0d\u59a8\u788d\u6211\u4eec\u7528\u4e00\u4e9b\u7279\u522b\u5f02\u7aef\u7684\u65b9\u6cd5\u505a\uff01\n\n\u76f8\u4fe1\u5927\u5bb6\u90fd\u505a\u8fc7\u5747\u5206\u7eb8\u724c\u8db4\uff0c\u90a3\u4e48\u6211\u4eec\u8fd9\u9053\u9898\u7684\u601d\u8def\u4e5f\u5f88\u7b80\u5355\u3002\u5747\u5206\u7eb8\u724c\u662f\u4ece1\u5230n\u63a8\u4e00\u904d\uff0c\u5982\u679c\u548c\u5e73\u5747\u503c\u4e0d\u4e00\u6837\u5c31\u79fb\u52a8\u7eb8\u724c\u3002\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,a[100010],tot=0,ans=0;\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i];\n\t\ttot+=a[i];\n\t}\n\ttot=tot/n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(a[i]<tot)\n\t\t{\n\t\t\ta[i+1]-=(tot-a[i]);\n\t\t\ta[i]=tot;\n\t\t\tans++;\n\t\t}\n\t\telse if(a[i]>tot)\n\t\t{\n\t\t\ta[i+1]+=(a[i]-tot);\n\t\t\ta[i]=tot;\n\t\t\tans++;\n\t\t}\n\t\telse if(a[i]==tot) continue;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\uff08\u5f88\u4e45\u4ee5\u524d\u5199\u7684\u4ee3\u7801\uff0c\u8fc7\u4e11 \u8bf7\u6c42\u539f\u8c05\uff09\n\n\u90a3\u4e48\u672c\u9898\u5c31\u53ef\u4ee5\u5c061~n\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u8d77\u70b9\uff0c\u8dd1\u4e00\u8fb9\u5747\u5206\u7eb8\u724c\u3002\u8fd9\u79cd\u505a\u6cd5\u53ef\u4ee5\u4fdd\u8bc1\u6211\u4eec\u67e5\u8be2\u4e86\u6240\u6709\u7684\u60c5\u51b5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662fO\uff08n2\uff09\u3002\u7531\u4e8e\u8fd9\u9053\u9898\u7684\u6570\u636e\u8303\u56f4\u53ea\u6709100\uff0c\u6240\u4ee5\u8f7b\u677e\u6109\u5feb\u5730\u8fc7\u5566~\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\uff0c\u8bf7\u6c42\u5ffd\u7565\u6211\u4e11\u4e11\u7684\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,a[100001],b[100001],ans,sum,minn=0x3f3f3f3f;\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tsum+=a[i];\n\t}\n\tsum/=n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tans=0;\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tb[j]=a[j];\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tif(i+j+1>n)\n\t\t\t{\n\t\t\t\tif(i+j==n)\n\t\t\t\t{\n\t\t\t\t\tif(b[i+j]<sum)\n\t\t\t\t\t{\n\t\t\t\t\t\tb[(i+j+1)%n]-=(sum-b[i+j]);\n\t\t\t\t\t\tans+=(sum-b[i+j]);\n\t\t\t\t\t\tb[i+j]=sum;\n\t\t\t\t\t}\n\t\t\t\t\telse if(b[i+j]>sum)\n\t\t\t\t\t{\n\t\t\t\t\t\tb[(i+j+1)%n]+=(b[i+j]-sum);\n\t\t\t\t\t\tans+=(b[i+j]-sum);\n\t\t\t\t\t\tb[i+j]=sum;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(b[(i+j)%n]<sum)\n\t\t\t\t\t{\n\t\t\t\t\t\tb[(i+j+1)%n]-=(sum-b[(i+j)%n]);\n\t\t\t\t\t\tans+=(sum-b[(i+j)%n]);\n\t\t\t\t\t\tb[(i+j)%n]=sum;\n\t\t\t\t\t}\n\t\t\t\t\telse if(b[(i+j)%n]>sum)\n\t\t\t\t\t{\n\t\t\t\t\t\tb[(i+j+1)%n]+=(b[(i+j)%n]-sum);\n\t\t\t\t\t\tans+=(b[(i+j)%n]-sum);\n\t\t\t\t\t\tb[(i+j)%n]=sum;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(i+j==n)\n\t\t\t\t{\n\t\t\t\t\tif(b[i+j]<sum)\n\t\t\t\t\t{\n\t\t\t\t\t\tb[(i+j+1)%n]-=(sum-b[i+j]);\n\t\t\t\t\t\tans+=(sum-b[i+j]);\n\t\t\t\t\t\tb[i+j]=sum;\n\t\t\t\t\t}\n\t\t\t\t\telse if(b[i+j]>sum)\n\t\t\t\t\t{\n\t\t\t\t\t\tb[(i+j+1)%n]+=(b[i+j]-sum);\n\t\t\t\t\t\tans+=(b[i+j]-sum);\n\t\t\t\t\t\tb[i+j]=sum;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(b[i+j]<sum)\n\t\t\t\t\t{\n\t\t\t\t\t\tb[i+j+1]-=(sum-b[i+j]);\n\t\t\t\t\t\tans+=(sum-b[i+j]);\n\t\t\t\t\t\tb[i+j]=sum;\n\t\t\t\t\t}\n\t\t\t\t\telse if(b[i+j]>sum)\n\t\t\t\t\t{\n\t\t\t\t\t\tb[i+j+1]+=(b[i+j]-sum);\n\t\t\t\t\t\tans+=(b[i+j]-sum);\n\t\t\t\t\t\tb[i+j]=sum;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tminn=min(minn,ans);\n\t}\n\tprintf(\"%d\",minn);\n\treturn 0;\n}\n```\n\u8fd9\u9053\u9898\u7684\u4e2d\u95f4\u80af\u5b9a\u662f\u53ef\u4ee5\u4f18\u5316\u7684\uff0c\u4f46\u662f\u5982\u679c\u6570\u636e\u8303\u56f4\u8fc7\u5c0f\u7684\u8bdd\uff0c\u90a3\u4e48\u4f18\u5316\u4e5f\u6ca1\u6709\u4ec0\u4e48\u5fc5\u8981\u3002\u968f\u4fbf\u5199\u5199\u54af~\n\n\u8dea\u6c42\u5927\u4f6c\u6307\u70b9\u9519\u8bef\uff0c\u849f\u84bb\u4e00\u5b9a\u6539\u6b63",
        "postTime": 1576830768,
        "uid": 143272,
        "name": "\u90ce\u8d64\u5a1c",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "\u4eca\u5929\u4e0a\u6570\u7ade\uff0c\u4f5c\u4e1a\u8d85\u7ea7\u591a\uff0c\u4f46\u8fd8\u662f\u5f97\u5199\u65e5\u5fd7\u7684\u5440\uff01\n\n------------\n\u4eca\u5929\u7ee7\u7eed\u5237\u7f51\u7edc\u6d4124\u9898\uff0c\u5237\u4e86\u5176\u4e2d\u7684\u4e00\u9053\u84dd\u9898\uff08\u84dd\u84dd\u8def~\uff09**[P4016 \u8d1f\u8f7d\u5e73\u8861\u95ee\u9898](https://www.luogu.org/problemnew/show/P4016)**\n\uff08\u4eca\u5929\u4e0a\u7269\u7406\u8bfe\u65f6\u65e0\u804a\u65f6\u60f3\u7684\uff09\n\n------------\n### \u601d\u8def\u5982\u4e0b\n1. \u672c\u9898\u8981\u7528**\u7f51\u7edc\u6d41**\uff0c\u8fd8\u662f**\u8d39\u7528\u6d41**\uff0c\u7f51\u7edc\u6d41\u7684\u9898\u6700\u91cd\u8981\u7684\u5c31\u662f\u5efa\u6a21\uff0c\u53ea\u8981\u5efa\u597d\u4e86\u6a21\uff0c\u5c31\u662f\u6253\u6a21\u677f\u7684\u4e8b\u60c5\u4e86\u3002\n2. \u672c\u9898\u5efa\u6a21\u91c7\u7528\u4e86\u4e00\u4e2a\u6bd4\u8f83\u5c0f\u4f17\u7684\u5efa\u6cd5\uff0c\u4f46\u662f\u5f88\u597d\u7406\u89e3\u7684\u8bf4\uff08\u5410\u69fd\u8fd9\u5f31\u5f97\u6ca1\u8c31\u7684\u6570\u636e\uff09\n3. \u5efa\u6cd5\u5982\u4e0b\uff1a\n\n        1\uff09 \u6709\u4e00\u4e2a\u6e90\u70b9\u548c\u4e00\u4e2a\u6c47\u70b9\uff08\u5e9f\u8bdd\uff09\n        2\uff09 \u6e90\u70b9\u4e0e\u6bcf\u4e2a\u4ed3\u5e93\u76f8\u8fde\uff0c\u6d41\u91cf\u4e3a\u5176\u521d\u59cb\u50a8\u91cf\uff0c\u8d39\u7528\u4e3a0\uff0c\u8868\u793a\u4e00\u5f00\u59cb\u6709\u90a3\u4e48\u591a\u7684\u8d27\u7269\u3002\n        3\uff09 \u6bcf\u4e2a\u4ed3\u5e93\u4e0e\u6c47\u70b9\u76f8\u8fde\uff0c\u6d41\u91cf\u4e3a\u5e73\u5747\u503c\uff0c\u8d39\u7528\u4e3a0\uff0c\u8868\u793a\u6700\u7ec8\u8981\u6c42\u7684\u60c5\u51b5\u662f\u90a3\u4e48\u591a\u7684\u8d27\u7269\u3002\n        4\uff09\u6bcf\u4e2a\u76f8\u90bb\u7684\u70b9\uff08\u6ce8\u610f\u662f\u4e2a\u73af\uff09\u4e4b\u95f4\u8fde\u63a5\uff0c\u6d41\u91cf\u4e3ainf\uff0c\u8d39\u7528\u4e3a1\uff0c\u8868\u793a\u8c03\u6574\u3002       \n ![\u7eaf\u624b\u7ed8\uff01\u8d85\u62df\u771f\uff01](https://cdn.luogu.com.cn/upload/pic/55102.png )\n \n ```cpp\nFOR(i,1,n){\n\tadd(0,i,num[i],0);\n\tadd(i,n+1,adv,0);\n\tif(i!=1) add(i,i-1,inf,1);\n\tif(i!=n) add(i,i+1,inf,1);\n}\nadd(1,n,inf,1); add(n,1,inf,1);//\u6ce8\u610f\u522b\u5fd8\u4e86\uff01\n```\n\n\n------------\n### CODE\n```cpp\n#include<bits/stdc++.h>\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\n#define Maxn 1000\n#define inf 1<<20\n#define LL long long\n\nusing namespace std;\n\ninline int read(){\n    char c=getchar();int x=0,f=1;\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    return x*f;\n}\n\nint n;\n\nstruct LINE{\n\tint st,en,lim,val,pre;\n}line[Maxn*10];\nint tot=1; int head[Maxn+10];\nvoid add(int a,int b,int c,int d){\n\tline[++tot]=(LINE){ a,b,c,d,head[a] };\n\thead[a]=tot;\n\tline[++tot]=(LINE){ b,a,0,-d,head[b] };\n\thead[b]=tot;\n}\n\nint visit[Maxn]; LL dist[Maxn]; int last[Maxn]; LL minflow[Maxn];\nbool spfa(int S,int T){\n\tqueue < int > q;\n\tmemset(visit,0,sizeof(visit));\n\tmemset(dist,63,sizeof(dist));\n\tminflow[S]=inf;\n\tq.push(S); dist[S]=0; visit[S]=1;\n\tlast[S]=0;\n\twhile(!q.empty()){\n\t\tint now=q.front(); visit[now]=0; q.pop();\n\t\tfor(int i=head[now];i;i=line[i].pre){\n\t\t\tint E=line[i].en;\n\t\t\tif(!line[i].lim) continue;\n\t\t\tif(dist[now]+line[i].val<dist[E]){\n\t\t\t\tdist[E]=dist[now]+line[i].val;\n\t\t\t\tminflow[E]=min(minflow[now],(LL)line[i].lim);\n\t\t\t\tlast[E]=i;\n\t\t\t\tif(!visit[E]){\n\t\t\t\t\tq.push(E);\n\t\t\t\t\tvisit[E]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(dist[T]==dist[T+1]) return false;\n\treturn true;\n}\nLL maxflow, ans;\nvoid update(int S,int T){\n\tint now=T;\n\twhile(now!=S){\n\t\tint i=last[now];\n\t\tline[i].lim-=minflow[T];\n\t\tline[i^1].lim+=minflow[T];\n\t\tnow=line[i].st;\n\t}\n\tmaxflow+=minflow[T];\n\tans+=dist[T]*minflow[T];\n}\n\nint main(){\n\t\n\tcin>>n;\n\t\n\tint num[n+1];\n\tint sum=0;\n\tFOR(i,1,n){\n\t\tnum[i]=read();\n\t\tsum+=num[i];\n\t}\n\tint adv=sum/n;\n\t\t\n\tFOR(i,1,n){\n\t\tadd(0,i,num[i],0);\n\t\tadd(i,n+1,adv,0);\n\t\tif(i!=1) add(i,i-1,inf,1);\n\t\tif(i!=n) add(i,i+1,inf,1);\n\t}\n\t\n\tadd(1,n,inf,1); add(n,1,inf,1);\n\t\n\twhile(spfa(0,n+1)) update(0,n+1);\n\t\n\tcout<<ans<<endl;\n\t\n\treturn 0;\n}\n\n```\n",
        "postTime": 1553617821,
        "uid": 29304,
        "name": "DYI_ZJZGC",
        "ccfLevel": 0,
        "title": "3.27\u65e5\u5fd7"
    },
    {
        "content": "\u9898\u76ee\u6807\u7b7e\u5199\u7740\u7f51\u7edc\u6d41\u8bf6\u2026.\u90a3\u4e48\u95ee\u9898\u5c31\u662f\u5982\u4f55\u5efa\u56fe\u4e86\u2026\u770b\u5230\u9898\u89e3\u91cc\u4e00\u6ce2\u5927\u795e\u7528\u5e73\u5747\u503c\u6765\u8ba1\u7b97\u2026\u4f46\u662f\u849f\u84bb\u6ca1\u60f3\u5230\u8bf6\u2026\u6240\u6709\u6211\u5c31\u6bd4\u8f83\u66b4\u529b\u4e86\u2026. \n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u4e00\u62c6\u4e3a\u4e8c\uff08ia\uff0cib\uff09\uff0c\u5efa\u7acb\u8d85\u6e90\u8d85\u6c47\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u4ece\u6e90\u70b9s\u5411\u5176\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3ac[i]\uff0c\u8d39\u7528\u4e3a0\u7684\u8fb9\uff0c\u4eceia\u5411ib\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u65e0\u9650\uff0c\u8d39\u7528\u4e3a0 \u7684\u8fb9\uff08\u56e0\u4e3a\u53ef\u4ee5\u4e0d\u505c\u7684\u628a\u522b\u7684\u5730\u65b9\u7684\u8d27\u7269\u642c\u5230ia\uff0c\u7136\u540e\u4eceib\u642c\u5230\u4e0b\u4e00\u4e2a\u70b9\u53bb\uff0cia\u5230ib\u642c\u8fd0\u5f53\u7136\u662f\u4e0d\u7528\u94b1\u7684\uff09\uff0c\u7136\u540e\u4eceib\u5411\u6c47\u70b9t\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u76ee\u6807\u503c\u4e5f\u5c31\u662f\u5e73\u5747\u503c\u7684\u8fb9\uff0c\u8d39\u7528\u4e3a0. \n\u540c\u65f6\uff0c\u6bcf\u4e2a\u70b9\u7684ib\u5411\u4ed6\u7684\u524d\u540e\u76f8\u90bb\u7684\u70b9\u8fde\u8fb9\uff0c\u4e5f\u5c31\u662fib\u5411(i-1)a\u8fde\u5bb9\u91cf\u4e3a\u65e0\u7a77\uff0c\u8d39\u7528\u4e3a1\u7684\u8fb9\uff0c\u5411\uff08i+1\uff09a\u540c\u6837\u4e5f\u662f\u5982\u6b64\u3002 \n\u8fd9\u6837\uff0c\u6211\u4eec\u5728\u8dd1\u6700\u5c0f\u8d39\u7528\u6d41\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e2a\u70b9i\u539f\u6709\u7684\u5728avg\u4ee5\u4e0b\u7684\u5bb9\u91cf\u4e0d\u4f1a\u642c\u5230\u522b\u7684\u70b9\u53bb\uff08\u6bd5\u7adf\u4eces\u5230t\u8d39\u7528\u4e3a0\u5462\uff09\uff0c\u800c\u4e0d\u6ee1\u8db3\u7684\u90e8\u5206\u4e00\u5b9a\u4f1a\u642c\u53bb\u522b\u7684\u70b9\u6216\u8005\u4ece\u522b\u7684\u70b9\u642c\u8fc7\u6765\uff0c\u90a3\u4e48\u642c\u7684\u8fc7\u7a0b\u81ea\u7136\u5c31\u4f1a\u4ea7\u751f\u76f8\u5e94\u7684\u8d39\u7528\u3002 \n\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<vector>\n#include<queue>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nstruct edge{\n    int to,cap,cost,rev;//\u7ec8\u70b9,\u5bb9\u91cf,\u8d39\u7528,\u53cd\u5411\u8fb9\n};\nvector<edge>G[5010];\nint dis[5010],prevv[5010],preve[5010],n,m,s,t,flow=0,cost=0;//\u6700\u77ed\u8def\u4e2d\u524d\u9a71\u8282\u70b9\u548c\u5bf9\u5e94\u7684\u8fb9\nbool inque[5010];\nvoid add(int from,int to,int cap,int cost)\n{\n    G[from].push_back(edge{to,cap,cost,(int)G[to].size()});\n    G[to].push_back(edge{from,0,-cost,(int)G[from].size()-1});//\u6ce8\u610f\u53cd\u5411\u8fb9\u7684\u52a0\u6cd5!!-cost\u548ccap=0!!\n}\nbool spfa(int s,int t)\n{\n    memset(dis,0x3f, sizeof(dis));memset(inque,0,sizeof(inque));\n    queue<int>que;que.push(s);dis[s]=0;\n    while(!que.empty()){\n        int t=que.front();que.pop();inque[t]=false;\n        for(int i=0;i<G[t].size();i++){\n            edge e=G[t][i];\n            if(e.cap&&dis[e.to]>dis[t]+e.cost){\n                dis[e.to]=dis[t]+e.cost;\n                prevv[e.to]=t;preve[e.to]=i;\n                if(!inque[e.to]){\n                    que.push(e.to);inque[e.to]=true;\n                }\n            }\n        }\n    }\n    if(dis[t]==0x3f3f3f3f)\n        return false;\n    int d=0x7f7f7f7f;\n    for(int v=t;v!=s;v=prevv[v])\n        d=min(d,G[prevv[v]][preve[v]].cap);//\u5168\u6700\u77ed\u8def\u4e2d\u7684\u6700\u5c0f\u6d41\u91cf\u9650\u5236\u5c31\u662f\u672c\u6b21\u603b\u7684\u6d41\u91cf\u9650\u5236\n    flow+=d;cost+=d*dis[t];\n    for(int v=t;v!=s;v=prevv[v]){\n        edge&e=G[prevv[v]][preve[v]];//\u66f4\u65b0\u8def\u5f84\u4fe1\u606f\n        e.cap-=d;\n        G[e.to][e.rev].cap+=d;\n    }\n    return true;\n}\nvoid mincostmaxflow(int s,int t)\n{\n    while(spfa(s,t));\n}\nint main()\n{\n    freopen(\"1.in\",\"r\",stdin);\n    freopen(\"1.out\",\"w\",stdout);\n    int n,i,j,k;\n    int  c[105];\n    cin>>n;int avg=0;\n    for(i=1;i<=n;i++) {\n        cin >> c[i], add(i, i + 200, 1 << 30, 0);\n        add(0, i, c[i], 0);avg+=c[i];\n    }\n    avg/=n;\n    for(i=1;i<=n;i++){\n        add(i+200,500,avg,0);\n        if(i!=n)\n            add(i+200,i+1,1<<30,1);\n        else\n            add(i+200,1,1<<30,1);\n        if(i!=1)\n            add(i+200,i-1,1<<30,1);\n        else\n            add(i+200,n,1<<30,1);\n    }\n    mincostmaxflow(0,500);\n    cout<<cost<<endl;\n\n    return 0;\n}\n```\n\n\u4e0ehzwer\u5927\u795e\u7684\u7a0b\u5e8f\u5bf9\u62cd\u4e86\u4e00\u4f1a\u597d\u50cf\u6ca1\u5565\u9519233",
        "postTime": 1522986643,
        "uid": 70338,
        "name": "humveea6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "# P4016 \u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\n## SOLUTION 1\u00b7\u7f51\u7edc\u6d41\u65b9\u6cd5\n\u5f88\u660e\u663e\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u67d0\u4e2a\u4ed3\u5e93\uff0c\u5b83\u5411\u5de6\u53f3\u4e24\u4e2a\u8282\u70b9\u8f93\u9001\u8d27\u7269\uff0c\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u7b49\u4e8e \u642c\u8fd0\u91cf$\\times1$\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528\u67d0\u4e2a\u8282\u70b9\u5206\u522b\u5411\u5de6\u53f3\u4e24\u4e2a\u4ed3\u5e93\u8fde\u4e00\u4e2a$\\begin{cases}cost_i=1\\\\ flow_i=+\\infty \\end{cases}$\u7684\u8fb9,\u5373\u8d39\u7528\u4e3a$1$\uff0c\u53ef\u4ee5\u65e0\u9650\u5236\u8fd0\u8f93\u8fd0\u8f93\n\n\u5bf9\u4e8e\u5b58\u91cf\u4e3a$a_i$\u7684\u4ed3\u5e93\uff0c**\u6e90\u70b9$S$** \u53ef\u4ee5\u4e0e\u4ed6\u94fe\u63a5\u4e00\u6761$\\begin{cases}cost_i=0\\\\ flow_i=a_i \\end{cases}$\u7684\u8fb9\uff0c\u5e76\u5411**\u6c47\u70b9$T$** \u8fde\u63a5\u4e00\u6761$\\begin{cases}cost_i=0\\\\ flow=\\dfrac {sum}n \\end{cases}$\u7684\u8fb9\uff0c\u8dd1\u4e00\u904d\u6700\u5c0f\u82b1\u8d39\u6700\u5927\u6d41\u5c31\u53ef\u4ee5\u4e86\n\n### \u6b63\u786e\u6027\n\u5f88\u660e\u663e\uff0c\u5f53\u6211\u4eec\u53d6\u6700\u5927\u6d41\u65f6\uff0c\u6bcf\u4e2a\u4ed3\u5e93\u901a\u5411**\u6c47\u70b9$T$** \u5fc5\u5b9a\u662f\u9971\u548c\u5f27\uff0c\u6b64\u65f6\u7684\u82b1\u8d39\u53ea\u6709\u4ed3\u5e93\u4e4b\u95f4\u4f1a\u4ea7\u751f\uff0c\u5c31\u4e3a\u642c\u8fd0\u7684\u6570\u91cf\uff0c\u90a3\u4e48\u6700\u5c0f\u82b1\u8d39\u6709\u4fdd\u8bc1\u4e86\u5176\u6700\u5c0f\uff0c\u56e0\u6b64\u672c\u65b9\u6cd5\u6784\u9020\u7684\u56fe\u662f\u6210\u7acb\u7684\n```cpp\n//#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include<bits/stdc++.h>\nnamespace in{\n\tchar buf[1<<21],*p1=buf,*p2=buf;\n\tinline int getc(){\n\t    return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;\n\t}\n\ttemplate <typename T>inline void read(T& t){\n\t    t=0;int f=0;char ch=getc();\n\t    while (!isdigit(ch)){\n\t        if(ch=='-')f = 1;\n\t        ch=getc();\n\t    }\n\t    while(isdigit(ch)){\n   \t    \tt=t*10+ch-48;\n   \t    \tch = getc();\n   \t\t}\n\t\tif(f)t=-t;\n\t}\n\ttemplate <typename T,typename... Args> inline void read(T& t, Args&... args){\n\t    read(t);read(args...);\n\t}\n}\nnamespace out{\n\tchar buffer[1<<21];\n\tint p1=-1;\n\tconst int p2 = (1<<21)-1;\n\tinline void flush() {\n\t\tfwrite(buffer,1,p1+1,stdout),\n\t\tp1=-1;\n\t}\n\tinline void putc(const char &x) {\n\t\tif(p1==p2)flush();\n\t\tbuffer[++p1]=x;\n\t}\n\ttemplate <typename T>void write(T x) {\n\t\tstatic char buf[15];\n\t\tstatic int len=-1;\n\t\tif(x>=0){\n\t\t\tdo{\n    \t\t\tbuf[++len]=x%10+48,x/=10;\n    \t\t}while (x);\n\t\t}else{\n    \t\tputc('-');\n\t\t\tdo {\n    \t\t\tbuf[++len]=-(x%10)+48,x/=10;\n\t\t\t}while(x);\n\t\t}\n\t\twhile (len>=0)\n\t\t\tputc(buf[len]),--len;\n\t}\n}\nusing namespace std;\nconst int maxn=5000+10,maxe=10011*5;\nstruct Graph{\n\tstruct node{\n\t\tint v,w,nxt,cost;\n\t\tnode(int _v=0,int _w=0,int _c=0,int _nxt=0){\n\t\t\tv=_v,w=_w,nxt=_nxt,cost=_c;\n\t\t}\n\t}e[maxe<<1];\n\tint s,t;\n\tint tot,head[maxn];\n\tvoid init(int _s,int _t){s=_s,t=_t;tot=1;}\n\tvoid add(int u,int v,int w,int c){\n\t\t//printf(\"%d %d %d %d\\n\",u,v,w,c);\n\t\te[++tot]=node(v,w,c,head[u]),head[u]=tot;\n\t}\n\tint dis[maxn],flow[maxn],inq[maxn];\n\tint pre[maxn],lste[maxn];\n\tbool spfa(){\n\t\tqueue<int>q;\n\t\tmemset(dis,0x3f,sizeof dis);\n\t\tmemset(flow,0x3f,sizeof flow);\n\t\tmemset(inq,0,sizeof inq);\n\t\tdis[s]=0,pre[t]=-1;q.push(s);\n\t\twhile(!q.empty()){\n\t\t\tint u=q.front();q.pop();inq[u]=0;\n\t\t\t#define v e[i].v\n\t\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\t\tif(e[i].w>0&&dis[v]>dis[u]+e[i].cost){\n\t\t\t\t\tdis[v]=dis[u]+e[i].cost;\n\t\t\t\t\tpre[v]=u,lste[v]=i;\n\t\t\t\t\tflow[v]=min(flow[u],e[i].w);\n\t\t\t\t\tif(!inq[v])inq[v]=1,q.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t\t#undef v\n\t\t}\n\t\treturn pre[t]!=-1;\n\t}\n\tpair<int,int> MCMF(){\n\t\tint mincost=0,maxflow=0;\n\t\twhile(spfa()){\n\t\t\tint u=t;\n\t\t\tmincost+=flow[t]*dis[t];\n\t\t\tmaxflow+=flow[t];\n\t\t\twhile(u!=s){\n\t\t\t\tint E=lste[u];\n\t\t\t\te[E].w-=flow[t],e[E^1].w+=flow[t];\n\t\t\t\tu=pre[u];\n\t\t\t}\n\t\t}\n\t\treturn make_pair(mincost,maxflow);\n\t}\n}G; \nint n,a[maxn],sum;\nconst int inf=1e9+10;\nsigned main(){\n\t//freopen(\"1.in\",\"r\",stdin);\n\tin::read(n);\n\tG.init(0,n+1);\n\tfor(int i=1;i<=n;i++)\n\t\tin::read(a[i]),sum+=a[i];\n\tsum/=n;\n\tfor(int i=1;i<=n;i++){\n\t\tint l=i-1,r=i+1;\n\t\tif(l==0)l=n;\n\t\tif(r==n+1)r=1;\n\t\tG.add(i,l,inf,1);G.add(l,i,0,-1);\n\t\tG.add(i,r,inf,1);G.add(r,i,0,-1);\n\t\t\n\t\tG.add(G.s,i,a[i],0);G.add(i,G.s,0,0);\n\t\tG.add(i,G.t,sum,0);G.add(G.t,i,0,0);\n\t}\n\tout::write(G.MCMF().first);\n\tout::flush();\n\treturn 0;\n}\n\n```\n## SOLUTION 2\u00b7\u8d2a\u5fc3\u65b9\u6cd5\n$\\color{Lavender}{\\text{\u7f51\u7edc\u6d4124\u9898\u91cc\u597d\u50cf\u6df7\u5165\u4e86\u4ec0\u4e48\u5947\u602a\u7684\u4e1c\u897f}}$\n\n~~\u7ecf\u8fc7\u89c2\u5bdf\u6211\u4eec\u53d1\u73b0\uff0c~~**\u5fc5\u7136\u5b58\u5728\u4e24\u4e2a\u4ed3\u5e93\u4e4b\u95f4\u4e0d\u8fd0\u4e1c\u897f**(\u5982\u679c\u60f3\u4e0d\u5230\u8fd9\u4e00\u70b9\u5c31\u8001\u8001\u5b9e\u5b9e\u6253\u7f51\u7edc\u7624\u5427)\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u679a\u4e3e\u54ea\u4e24\u4e2a\u8282\u70b9\u4e0d\u8fd0\u4e1c\u897f\uff0c\u5728\u5957\u4e0a[\u5747\u5206\u7eb8\u724c](https://www.luogu.com.cn/problem/P1031)\u5c31ok\u4e86\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[20009];\nint b[20009];\nint num,n;\nlong long sum=0;\nlong long ans=0x3f3f3f3f3f3f3f;\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    {\n        cin>>a[i];\n        a[i+n]=a[i];\n        sum+=a[i];\n    }\n    num=sum/n;\n    for(int i=0;i<n;i++)\n    {\n        long long tmp=0;\n        for(int j=i;j<n+i;j++)\n            b[j-i]=a[j];\n        for(int k=0;k<n;k++)\n            if(b[k]!=num)\n            {\n                int ch=b[k]-num;\n                b[k+1]+=ch;\n                b[k]=num;\n                tmp+=abs(ch);\n            }\n        ans=min(tmp,ans);\n    }\n    cout<<ans;\n}\n```",
        "postTime": 1594117585,
        "uid": 174304,
        "name": "jun\u5934\u5409\u5409",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "## \u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\n\n(\u4e0b\u6587\u4e2d$x\\xrightarrow{a,b}y$\u8868\u793a\u4ece$x$\u5411$y$\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a$a$\uff0c\u8d39\u7528\u4e3a$b$\u7684\u8fb9)\n\n\u5728\u505a\u5747\u5206\u7eb8\u724c\u90a3\u9898\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9996\u5148\u6c42\u51fa\u4e86\u724c\u6570\u7684\u5e73\u5747\u503c\uff0c\u5bf9\u4e0e\u6bcf\u4e00\u5806\u724c\u51cf\u5e73\u5747\u503c\n\n\u8fd9\u9053\u9898\u540c\u7406\uff0c\n\n#### 1.\u8d27\u7269\u6570\u51cf\u53bb $arv$ \u82e5\u5927\u4e8e0\n\n$s \\xrightarrow{a[i]-arv,0}i$\n\n\u8868\u793a $i$ \u53ef\u4ee5\u83b7\u5f97\u6570\u91cf\u4e3a $a[i]-arv$ \u7684\u8d27\u7269\n\n#### 2.\u8d27\u7269\u6570\u51cf\u53bb $arv$ \u82e5\u5c0f\u4e8e0\n\n$i \\xrightarrow{arv-a[i],0}i$ \n\n\u8868\u793a $i$ \u53ef\u4ee5\u6d41\u51fa\u6570\u91cf\u4e3a $arv-a[i]$ \u7684\u8d27\u7269\n\n#### 3. \u5411\u65c1\u8fb9\u7684\u4e24\u4e2a\u4ed3\u5e93\u8fde\u8fb9\uff1a\n\n$i\\xrightarrow{+\\infty,1}i+1,i\\xrightarrow{+\\infty,1}i-1$ \n\n\u8868\u793a $i$ \u53ef\u4ee5\u5c06\u8d27\u7269\u6d41\u5411 $i+1,i-1$\n\n\u5760\u540e\u4ece$s$\u5230$t$\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\n\n------------\n\n$\\mathcal{Code}:$\n```cpp\n#include<queue>\n#include<cmath>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n#define N 575\n#define inf 2147483647\n#define int long long\n#define debug cout<<__LINE__<<\" \"<<__FUNCTION__<<\"\\n\"\ninline int read(){\n\tint x=0,y=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x*y;\n}\nstruct Edge{\n    int to,flow,cost,nxt;\n}edge[N];\nint n,m,s,t,tot=1;\nint flow[N],deep[N],last[N],pre[N],vis[N],head[N],a[N];//pre: point   last:edge\nint maxflow,mincost;\ninline void add(int from,int to,int flow,int cost){\n    edge[++tot].nxt=head[from];\n    edge[tot].to=to;\n    edge[tot].flow=flow;\n    edge[tot].cost=cost;\n    head[from]=tot;\n}\nbool spfa(){\n    memset(flow,0x3f,sizeof(flow));\n    memset(deep,0x3f,sizeof(deep));\n    memset(vis,0,sizeof(vis));\n    deep[s]=0;\n    pre[t]=-1;\n    vis[s]=1;\n    queue<int>q;\n    q.push(s);\n    while(!q.empty()){\n        int u=q.front();\n        q.pop();\n        vis[u] = 0;\n        for(int i = head[u];i;i = edge[i].nxt){\n            int v = edge[i].to;\n            if(deep[v] > deep[u] + edge[i].cost && edge[i].flow){\n                flow[v] = min(flow[u],edge[i].flow);\n                deep[v] = deep[u] + edge[i].cost;\n                pre[v] = u;last[v] = i;\n                if(!vis[v]){\n                    vis[v] = 1;q.push(v);\n                }\n            }\n        }\n    }\n    return pre[t]!=-1;\n}\ninline void Dinic(){\n    while(spfa()){\n        maxflow += flow[t];\n        mincost += flow[t] * deep[t];\n        int x = t;\n        while(x != s){\n            edge[last[x]].flow -= flow[t];\n            edge[last[x] ^ 1].flow += flow[t];\n            x = pre[x];\n        }\n    }\n}\nsigned main(){\n//\tfreopen(\"a.in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tn=read();\n\ts=0;t=n+1;\n\tint sum=0;\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=read();sum+=a[i];\n\t}\n\tsum/=n;\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]-=sum;\n\t\tif(a[i]>0) add(s,i,a[i],0),add(i,s,0,0);\n\t\tif(a[i]<0) add(i,t,-a[i],0),add(t,i,0,0);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tadd(i,i%n+1,inf,1);add(i%n+1,i,0,-1);\n\t\tadd(i,(i-2+n)%n+1,inf,1);add((i-2+n)%n+1,i,0,-1);\n\t}\n\tDinic();\n\tcout<<mincost<<\"\\n\";\n//\tfclose(stdin);\n//\tfclose(stdout);\n\treturn 0;\n}\n```",
        "postTime": 1564060056,
        "uid": 123081,
        "name": "zh_dou",
        "ccfLevel": 7,
        "title": "[\u9898\u89e3]P4016|\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898"
    },
    {
        "content": "**Zkw\u8d39\u7528\u6d41\u6307\u9488\u7248**\n\n### \u89e3\u9898\u601d\u8def\n\n\u8fd9\u9053\u9898\u662f\u60f3\u8ba9\u6240\u6709\u8282\u70b9\u6700\u7ec8\u8d27\u7269\u503c\u76f8\u7b49\uff0c\u4e5f\u5c31\u662f\u6700\u7ec8\u6240\u6709\u90fd\u4f1a\u53d8\u6210\u5b83\u4eec\u7684\u5e73\u5747\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u8d39\u7528\u6d41\u3002\n\n### \u5efa\u56fe\n\n* \u8bbe$0$\u4e3a\u8d85\u7ea7\u6e90\u70b9\uff0c$n + 1$\u4e3a\u8d85\u7ea7\u6c47\u70b9\uff0c\u5e73\u5747\u503c\u4e3a$ave$\n\n* \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u9700\u8981\u201c\u9001\u201d\u7684\u70b9\uff0c\u4ece$0$\u5411\u5b83\u8fde\u8fb9\uff0c\u5bb9\u91cf$val_i - ave$\uff0c\u8d39\u7528$0$\n\n* \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u9700\u8981\u201c\u62ff\u201d\u7684\u70b9\uff0c\u4ece\u5b83\u5411$n + 1$\u8fde\u8fb9\uff0c\u5bb9\u91cf$ave - val_i$\uff0c\u8d39\u7528$0$\n\n* \u4ece\u6bcf\u4e2a\u70b9\u5411\u76f8\u90bb\u70b9\u8fde\u5bb9\u91cf$\\infty$\uff0c\u8d39\u7528$1$\u7684\u8fb9\n\n### \u4ee3\u7801\n\nZkw\u8d39\u7528\u6d41\uff0c\u6307\u9488\u5b58\u56fe\uff0c\u6709\u5f53\u524d\u5f27\n\n```cpp\n// luogu-judger-enable-o2\n// luogu-judger-enable-o2\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <deque>\n#include <cstdio>\n\nusing namespace std;\n\nconst int MAXN = 105;\nconst int INF = 0x3f3f3f3f;\n\nint n;\n\nstruct Edge{\n    int to, val, cost;\n    Edge *next, *ops;\n    Edge(int to, int val, int cost, Edge *next): to(to), val(val), cost(cost), next(next){}\n};\n\nEdge *head[MAXN], *cur[MAXN];\n\nvoid AddEdge(int u, int v, int w, int c) {\n    head[u] = new Edge(v, w, c, head[u]);\n    head[v] = new Edge(u, 0, -c, head[v]);\n    head[u]->ops = head[v]; head[v]->ops = head[u];\n}\n\nint s, t, res, ans;\nint dis[MAXN];\nbool vis[MAXN];\n\nbool Spfa() {\n    memset(dis, INF, sizeof(dis));\n    memset(vis, false, sizeof(vis));\n    deque<int> q; q.push_back(s); vis[s] = true; dis[s] = 0;\n    while (!q.empty()) {\n        int u = q.front(); q.pop_front();\n        for (Edge *e = head[u]; e; e = e->next) {\n            int v = e->to;\n            if (e->val && dis[v] > dis[u] + e->cost) {\n                dis[v] = dis[u] + e->cost;\n                if (!vis[v]) {\n                    if (!q.empty() && dis[v] < dis[q.front()]) q.push_front(v);\n                    else q.push_back(v);\n                }\n            }\n        }\n    }\n    return dis[t] < INF;\n}\n\nint Dfs(int u, int flow) {\n    vis[u] = true;\n    if (u == t) {\n        res += flow;\n        return flow;\n    }\n    int used = 0;\n    for (Edge *&e = cur[u]; e; e = e->next) {\n        int v = e->to;\n        if ((v == t || !vis[v]) && e->val && dis[v] == dis[u] + e->cost) {\n            int mi = Dfs(v, min(e->val, flow - used));\n            if (mi) {\n                used += mi;\n                e->val -= mi;\n                e->ops->val += mi;\n                ans += e->cost * mi;\n            }\n            if (used == flow) break;\n        }\n    }\n    return used;\n}\n\nvoid Dinic() {\n    res = ans = 0;\n    while (Spfa()) {\n        vis[t] = true;\n        while (vis[t]) {\n            memset(vis, false, sizeof(vis));\n            memcpy(cur, head, sizeof(head));\n            Dfs(s, INF);\n        }\n    }\n}\n\nint num[MAXN];\n\nint main() {\n    #ifndef ONLINE_JUDGE\n    freopen(\"in.txt\", \"r\", stdin);\n    freopen(\"out.txt\", \"w\", stdout);\n    #endif\n    ios :: sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\n    int sum = 0;\n    cin >> n;\n    s = 0; t = n + 1;\n    for (int i = 1; i <= n; i++) {\n        cin >> num[i];\n        sum += num[i];\n    }\n    int ave = sum / n;\n    for (int i = 1; i <= n; i++) {\n        if (num[i] > ave) AddEdge(s, i, num[i] - ave, 0);\n        else AddEdge(i, t, ave - num[i], 0);\n    }\n    for (int i = 2; i <= n; i++) {\n        AddEdge(i - 1, i, INF, 1);\n        AddEdge(i, i - 1, INF, 1);\n    }\n    AddEdge(1, n, INF, 1);\n    AddEdge(n, 1, INF, 1);\n    Dinic();\n    cout << ans << endl;\n    return 0;\n}\n```",
        "postTime": 1555152403,
        "uid": 126376,
        "name": "Irelia\u10e6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "## Solution\n\n$orz$ \u7528\u8d2a\u5fc3\u8fc7\u6b64\u9898\u7684\u5de8\u4f6c\u3002\n\n**\u4ee5\u4e0b\u662f\u8d39\u7528\u6d41\u601d\u8def~~\u5efa\u56fe\u65b9\u5f0f~~\u3002**\n\n1.\u663e\u7136\uff1a\u6bcf\u4e2a\u70b9\u5411\u5468\u56f4\u4e24\u4e2a\u70b9\u8fde\u6d41\u91cf\u4e3a $INF$ \uff0c\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\n\n2.\u8001\u5957\u8def\uff1a\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9\u548c\u6c47\u70b9\n\n\u73b0\u5728\u9700\u8981\u8003\u8651\u54ea\u4e9b\u70b9\u9700\u8981\u8fde\u5411\u6e90\u70b9\uff0c\u54ea\u4e9b\u9700\u8981\u8fde\u5411\u6c47\u70b9\u4e86\u3002\n\n\u8bbe\u5e73\u5747\u6570\u4e3a $s$ \uff0c\u6211\u4eec\u628a\u8d27\u7269\u4e0d\u8db3\u5e73\u5747\u6570\u7684\u70b9\u8fde\u5411\u6c47\u70b9\uff0c\u6d41\u91cf\u4e3a**\u5e73\u5747\u6570-\u8fd9\u4e2a\u70b9\u7684\u8d27\u7269\u91cf**\uff0c\u8d39\u7528\u4e3a $0$ \u3002\u628a\u8d27\u7269\u8d85\u8fc7\u5e73\u5747\u6570\u7684\u70b9\u8fde\u5411\u6e90\u70b9\uff0c\u6d41\u91cf\u4e3a**\u8fd9\u4e2a\u70b9\u7684\u8d27\u7269\u91cf-\u5e73\u5747\u6570**\uff0c\u8d39\u7528\u4e3a $0$\u3002\n\n\u597d\u4e86\u4e0a\u4ee3\u7801\u3002\n\n## Code\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int in=5005,INF=1<<30;\nint n,s,t,m,u,v,w,f,maf=0,cost=0,cnt=1,sum=0;\nint head[in],vis[in],dis[in],a[in];\nstruct Edge\n{\n    int nxt,to,w,f;\n}e[in];\nvoid add(int x,int y,int w,int f)\n{\n    cnt++;\n    e[cnt]=(Edge){head[x],y,w,f};\n    head[x]=cnt;\n}\nbool spfa() // dinic\u6a21\u677f\u65e0\u803b\u538b\u884c\n{\n    memset(vis,0,sizeof(vis)); memset(dis,0x3f,sizeof(dis));\n    queue<int>q; q.push(s); dis[s]=0;\n    while(!q.empty())\n    {\n        int a=q.front(); q.pop(); vis[a]=0;\n        for(int i=head[a];i;i=e[i].nxt)\n        {\n            int v=e[i].to;\n            if(e[i].w&&dis[v]>dis[a]+e[i].f){dis[v]=dis[a]+e[i].f;if(!vis[v]){q.push(v);vis[v]=1;}}\n        }\n    }\n    if(dis[t]!=0x3f3f3f3f) return true;\n    return false;\n}\nint dfs(int u,int flow)\n{\n    int used=0;\n    vis[u]=1;\n    if(u==t){maf+=flow;return flow;}\n    for(int i=head[u];i;i=e[i].nxt)\n    {\n        int v=e[i].to;\n        if((vis[v]==0||v==t)&&e[i].w&&dis[v]==dis[u]+e[i].f)\n        {\n            int mif=dfs(v,min(flow-used,e[i].w));\n            if(mif) cost+=e[i].f*mif,e[i].w-=mif,e[i^1].w+=mif,used+=mif;\n            if(used==flow) break;\n        }\n    }\n    return used;\n}\nvoid dinic(){while(spfa()){vis[t]=1;while(vis[t]){memset(vis,0,sizeof(vis));dfs(s,INF);}}}\nint main()\n{\n    scanf(\"%d\",&n);\n    s=0; t=n+1;\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        sum+=a[i];\n        int A=i-1;\n        if(!A) A=n;\n        add(i,A,INF,1);//\u8fde\u5411\u4e24\u8fb9\n        add(A,i,0,-1);\n        add(A,i,INF,1);\n        add(i,A,0,-1);\n    } \n    sum/=n;\n    for(int i=1;i<=n;i++)\n    {\n        if(a[i]>=sum)//\u8fde\u5411\u6e90\u70b9\n        {\n            add(s,i,a[i]-sum,0);\n            add(i,s,0,0);\n        }\n        else//\u8fde\u5411\u6c47\u70b9\n        {\n            add(i,t,sum-a[i],0);\n            add(t,i,0,0);\n        }\n    }\n    dinic();\n    printf(\"%d\",cost);\n    return 0;\n}\n```\n",
        "postTime": 1555121658,
        "uid": 138280,
        "name": "lxy__",
        "ccfLevel": 6,
        "title": "P4016 \u8d1f\u8f7d\u5e73\u8861\u95ee\u9898"
    },
    {
        "content": "\u6211\u4e5f\u662f\u7528\u8d2a\u5fc3\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u662f$O(n^2)$  \n\u8fdc\u8fdc\u4e0d\u53ca$dalao$\u7684$nlogn$ \u505a\u6cd5\u554a  \n\u4f46\u662f\u8fd9\u4e2a\u8d2a\u5fc3\u7684\u8bc1\u660e\u66f4\u597d\u7406\u89e3  \n\u9996\u5148\u663e\u7136\u80af\u5b9a\u5b58\u5728\u4e00\u4e2a\u8282\u70b9$S$\u53ea\u51fa\u4e0d\u5165\uff0c\u4e00\u4e2a\u8282\u70b9$T$\u53ea\u5165\u4e0d\u51fa  \n\u7136\u540e\u53ea\u9700\u8bc1\u660e$T$\u4e0e\u5b83\u7684\u5176\u4e2d\u4e00\u4e2a\u76f8\u90bb\u8282\u70b9\u6ca1\u6709\u8fd0\u8f93\u5173\u7cfb\u53ef\u4ee5\u662f\u6700\u4f18\u89e3  \n\u5982\u56fe\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/16726.png)  \n  \n    \n  \n\u6b64\u65b9\u6848\u76f8\u5f53\u5f53\u7136\u4e0d\u5982\u4e0b\u9762\u8fd9\u4e2a\u65b9\u6848\n\n![](https://cdn.luogu.com.cn/upload/pic/16727.png)\n\n**\u539f\u56e0**\uff1a\u5982\u679c\u5411\u53f3\u4ece$S$\u8fd0\u52a8$T$\uff0c\u5355\u4f4d\u8fd0\u8f93\u8d39\u7528\u4e3a3\uff0c\u5411\u5de6\u8fd0\uff0c\u5219\u5355\u4f4d\u8fd0\u8f93\u8d39\u4e3a2\uff0cS->T\u5e94\u9009\u62e9\u5411\u5de6\u8fd0\u8f93\uff0c\u8f6c\u5316\u4e3a\u56fe2\u7684\u8fd0\u8f93\u65b9\u6cd5  \n\u6240\u4ee5\u5b58\u5728$T$\u548c\u5b83\u76f8\u90bb\u7684\u4e00\u4e2a\u8282\u70b9\u6ca1\u6709\u8fd0\u8f93\u5173\u7cfb  \n\u5176\u4ed6\u60c5\u51b5\u540c\u7406\u53ef\u8bc1  \n  \n  \u6700\u540e\u5c06\u4e24\u4e2a\u6ca1\u6709\u8fd0\u8f93\u5173\u7cfb\u7684\u8282\u70b9\u770b\u6210\u4e00\u6761\u94fe\u7684\u4e24\u7aef\uff0c\u8fd0\u8f93\u91cf\u65e2\u53ef\u4ee5\u4e3a\u8d1f\u4e5f\u53ef\u4ee5\u4e3a\u6b63\u3002  \n  \u8dd1$n$\u6b21\u8d2a\u5fc3\uff0c\u9009\u53d6\u6700\u5c0f\u7684\u5c31\u53ef\u4ee5\u4e86\n  \u4ee3\u7801\u5982\u4e0b\uff1a  \n  ```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,ans,a[205],MIN=~0U>>1,A[105],aver;\nvoid work(){\n\tans=0;\n\tfor(int i=0;i<n;++i){\n \t\tans+=abs(aver-A[i]);\n \t\tA[i+1]+=A[i]-aver;\n\t}\n\tMIN=min(MIN,ans);\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;++i){\n\t\tscanf(\"%d\",&a[i]);\n\t\ta[i+n]=a[i];\n\t\taver+=a[i];\n\t}\n\taver/=n;\n\tfor(int i=0;i<n;++i){\n\t\tfor(int j=0;j<n;++j)A[j]=a[i+j];\n\t\twork();\n\t}\n\tprintf(\"%d\",MIN);\n}\n```",
        "postTime": 1522819758,
        "uid": 61953,
        "name": "Chester",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "\u65e2\u7136\u662f\u5728\u7f51\u7edc\u6d41\u7ec3\u4e60\u9898\u91cc\u770b\u5230\u7684\uff0c\u90a3\u4e48\u5c31\u62ff\u7f51\u7edc\u6d41\u6765\u505a\u561b\r\n\r\n\u89c2\u5bdf\u8fd9\u9053\u9898\uff0c\u65e2\u7136\u662f\u8981\u7528\u7f51\u7edc\u6d41\u6765\u505a\uff0c\u7f51\u7edc\u6d41\u7684\u5173\u952e\u80af\u5b9a\u662f\u5efa\u56fe\u4e86\uff0c\u90a3\u4e48\u8981\u600e\u4e48\u5efa\u56fe\u5462\uff1f\r\n\r\n\u5728\u73af\u4e0a\u7684\u4efb\u4f55\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u6e90\u548c\u6c47\u80af\u5b9a\u90fd\u4e0d\u5408\u9002\uff0c\u56e0\u6b64\u8d85\u7ea7\u6e90\u548c\u8d85\u7ea7\u6c47\u662f\u5fc5\u987b\u7684\uff0c\u7136\u540e\u5efa\u7acb\u4e0b\u9762\u4e09\u79cd\u8fb9\uff1a\uff08\u65e0\u9700\u62c6\u70b9\uff09\r\n\r\n1.\u591a\u4e8e\u5e73\u5747\u503c\u7684\u70b9\u7531\u6e90\u70b9\u5efa\u8fb9\uff0c\u4ed6\u4eec\u9700\u8981\u5411\u6c47\u70b9\u63d0\u4f9b\u4e00\u4e9b\u7269\u54c1\uff0c\u6d41\u91cf\u5373\u4e3a\u5176\u503c\u51cf\u5e73\u5747\u503c\uff0c\u8fd9\u91cc\u53ea\u662f\u58f0\u660e\u5173\u7cfb\uff0c\u6240\u4ee5\u8d39\u7528\u4e3a0\uff1b\u53cd\u5411\u8fb9\u6b63\u5e38\u5efa\u7acb\uff0c\u6d41\u91cf0\u8d39\u75280\r\n\r\n2.\u5c11\u4e8e\u5e73\u5747\u503c\u7684\u70b9\u5411\u6c47\u70b9\u5efa\u8fb9\uff0c\u4ed6\u4eec\u9700\u8981\u7531\u6e90\u70b9\u63a5\u6536\u4e00\u4e9b\u7269\u54c1\uff0c\u6d41\u91cf\u5373\u4e3a\u5e73\u5747\u503c\u51cf\u5176\u503c\uff0c\u8fd9\u91cc\u4e5f\u662f\u58f0\u660e\u5173\u7cfb\uff0c\u6240\u4ee5\u8d39\u7528\u4e3a0\uff1b\u53cd\u5411\u8fb9\u6b63\u5e38\u5efa\u7acb\uff0c\u6d41\u91cf0\u8d39\u75280\r\n\r\n3.\u76f8\u90bb\u7684\u70b9\u4e4b\u95f4 **\u4e92\u76f8** \u5efa\u8fb9\uff0c\u5982\u679c\u7ecf\u8fc7\u4ed6\uff0c\u4ee3\u8868\u79fb\u52a8\u4e86\u8d27\u7269\uff0c\u6545\u9700\u8981\u652f\u51fa\u8d39\u7528\u7684\uff0c\u4e00\u5355\u4f4d\u8d27\u7269\u9700\u8981\u4e00\u5355\u4f4d\u8d39\u7528\uff0c\u6240\u4ee5\u8fd9\u4e9b\u8fb9\u7684\u8d39\u7528\u4e3a1\uff0c\u6d41\u91cf\u65e0\u9650\u5236\uff08INF\uff09\uff1b\u53cd\u5411\u8fb9\u4e5f\u662f\u6b63\u5e38\u5efa\uff0c\u6d41\u91cf0\u8d39\u7528-1\u3002\u6ce8\u610f\u56e0\u4e3a\u662f\u73af\u6240\u4ee5n\u548c1\u4e5f\u8981\u5efa\u8fb9\u3002\r\n\r\n\u8fd9\u6837\u4f60\u4f1a\u53d1\u73b0\uff0c\u65e0\u8bba\u54ea\u4e00\u79cd\u6709\u6548\u7684\u8d27\u7269\u7684\u79fb\u52a8\u90fd\u53ef\u4ee5\u7531\u4e00\u6761\u8def\u5f84\u8868\u793a\uff0c\u53c8\u7531\u4e8e\u53cd\u5411\u8fb9\u7684\u5b58\u5728\uff0c\u6240\u4ee5\u8fd9\u6837\u505a\u662f\u6b63\u786e\u7684\u3002\r\n\r\n\u65e2\u7136\u90fd\u53ef\u4ee5\u8868\u793a\u4e86\uff0c\u5c31\u4e0d\u9700\u8981\u62c6\u70b9\u4e86\uff0c\u62c6\u70b9\u8fd8\u4e0d\u597d\u7406\u89e3\uff08\u5176\u5b9e\u662f\u6211\u770bKS\u5927\u4f6c\u7684\u9898\u89e3\u6ca1\u61c2\uff09\u3002\r\n\u603b\u4e4b\u56de\u53bb\u819c\u62dc\u4e00\u4e0bKS\u5927\u4f6c\u3002\r\n\r\n\u4e0b\u9762\u662f\u4ee3\u7801\uff0c\u4e0d\u8981\u5410\u69fd\u6211\u7684\u7801\u98ce\u548c\u53d8\u91cf\u540d\u2026\u2026\r\n\r\n```cpp\r\n#include <cstdio>\r\n#include <cstring>\r\nconst int N=110000,inf=2147483647; \r\nstruct node{\r\n\tint x,y,c,f,next;\r\n}map[N*2];\r\nint m,n,s,t;\r\nint h[N],num,a[N];\r\nint flowt,f1,ds[N],flag[N],pre[N],que[N],min1;\r\nvoid insert1(int x,int y,int c,int f)\r\n{\r\n\tmap[++num].x=x;\r\n\tmap[num].y=y;\r\n\tmap[num].c=c;\r\n\tmap[num].f=f;\r\n\tmap[num].next=h[x];\r\n\th[x]=num;\r\n}\r\nbool spfa()\r\n{\r\n\tfor(int i=0;i<=n+1;i++)\r\n\t{\r\n\t\tds[i]=inf;\r\n\t\tflag[i]=0;\r\n\t\tpre[i]=-1;\r\n\t}\r\n\tds[s]=0;\r\n\tint op=0,cl=0;\r\n\tque[++cl]=s;\r\n\twhile(op<cl)\r\n\t{\r\n\t\top++;\r\n\t\tint x=que[op];\r\n\t\tfor(int j=h[x];j!=-1;j=map[j].next)\r\n\t\t{\r\n\t\t\tint y=map[j].y;\r\n\t\t\tif(map[j].c>0 && ds[x]+map[j].f<ds[y])\r\n\t\t\t{\r\n\t\t\t\tds[y]=ds[x]+map[j].f;\r\n\t\t\t\tpre[y]=j;\r\n\t\t\t\tif(flag[y]==0)\r\n\t\t\t\t{\r\n\t\t\t\t\tque[++cl]=y;\r\n\t\t\t\t\tflag[y]=1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tflag[x]=0;\r\n\t}\r\n\tif(ds[t]==inf) return false;\r\n\telse return true;\r\n}\r\nint main()\r\n{\r\n\tscanf(\"%d\",&n);\r\n\tmemset(h,-1,sizeof(h));\r\n\tnum=-1;//\u4ece0\u5f00\u59cb\u65b9\u4fbf^\u6765\u8bfb\u53d6\u53cd\u5411\u8fb9 \r\n    int sum=0;\r\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]),sum+=a[i];\r\n\tsum/=n;\r\n\ts=0;t=n+1;\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tint x=a[i]-sum;\r\n\t\tif(x>0) insert1(s,i,x,0),insert1(i,s,0,0);//\u60c5\u51b51\r\n\t\tif(x<0) insert1(i,t,-x,0),insert1(t,i,0,0);//\u60c5\u51b52\r\n\t}\r\n\tfor(int i=1;i<n;i++)\r\n\t\tinsert1(i,i+1,inf,1),insert1(i+1,i,0,-1),\r\n\t\tinsert1(i+1,i,inf,1),insert1(i,i+1,0,-1);//\u60c5\u51b53\r\n\tinsert1(n,1,inf,1),insert1(1,n,0,-1);\r\n\tinsert1(1,n,inf,1),insert1(n,1,0,-1);//\u539f\u9898\u662f\u73af \r\n    int j;\r\n\tflowt=0;f1=0;\r\n\twhile(spfa())//\u8d39\u7528\u6d41 \r\n\t{\r\n\t\tmin1=inf;\r\n\t\tj=pre[t];\r\n\t\twhile(j!=-1)\r\n\t\t{\r\n\t\t\tif(min1>map[j].c) min1=map[j].c;\r\n\t\t\tj=pre[map[j].x];\r\n\t\t}\r\n\t\tflowt+=min1;\r\n\t\tf1+=ds[t]*min1;\r\n\t\tj=pre[t];\r\n\t\twhile(j!=-1)\r\n\t\t{\r\n\t\t\tmap[j].c-=min1;\r\n\t\t\tmap[j^1].c+=min1;\r\n\t\t\tj=pre[map[j].x];\r\n\t\t}\r\n\t}\r\n\tprintf(\"%d\\n\",f1);\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1518191742,
        "uid": 41180,
        "name": "\u9759\u9ed8\u4e4b\u5149",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "------------\r\n\r\n\r\n~~\u849f\u84bb\u6c34\u4e00\u6ce2\u9898\u89e3~~\r\n\r\n\u8fd9\u9053\u9898\u548c\u5747\u5206\u7eb8\u724c\u6bd4\u8f83\u7c7b\u4f3c,\u4e8e\u662f\u5148\u60f3\u5230\u4e86\u7c7b\u4f3c\u7684\u9884\u5904\u7406\u65b9\u6cd5----\r\n\r\n**\u628a\u6bcf\u4e2a\u6570\u51cf\u53bb\u6570\u5217\u7684\u5e73\u5747\u503c**\r\n\r\n\u56e0\u4e3a\u8981\u6784\u5efa\u4e00\u4e2a\u7f51\u7edc,\u6240\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u5904\u7406\r\n\r\n(\u8fd9\u91cc\u628a\u70b9i\u62c6\u6210\u70b9i\u548cn+i,\u8fde\u8fb9\u6bd4\u8f83\u76f4\u89c2\u65b9\u4fbf)\r\n\r\n\r\n- \u4eces(\u539f\u70b9)\u5411i\u8fde\u4e00\u6761\u6d41\u91cf\u4e3aa[i] (\u539f\u6570\u7ec4\u7684) \u8d39\u7528\u4e3a0\u7684\u8fb9(\u8d39\u7528\u7684\u4f5c\u7528\u89c1\u4e0b\u6587)\r\n\r\n- \u4ecei\u5411n+i\u8fde\u4e00\u6761\u6d41\u91cf\u4e3ainf(\u4e00\u4e2a\u5927\u6570) \u8d39\u7528\u4e3a0\u7684\u8fb9\r\n\r\n- \u4ecen+i\u5411t(\u6c47\u70b9)\u8fde\u4e00\u6761\u6d41\u91cf\u4e3ax(\u539f\u6570\u7ec4\u5e73\u5747\u503c) \u8d39\u7528\u4e3a0\u7684\u8fb9\r\n\r\n\r\n\u7136\u540e\u8dd1\u4e00\u904d\u6700\u5927\u6d41,\u8fd9\u6837\u4f1a\u5bfc\u81f4a[i] > x \u7684s\u5230i\u7684\u8fb9,a[i] < x \u7684n+i\u5230t\u7684\u8fb9\u6709\u6b8b\u4f59\u6d41\u91cf(\u524d\u8005\u8bf4\u660e\u4ed3\u5e93\u591a\u4e86,\u540e\u8005\u8bf4\u660e\u4ed3\u5e93\u8fd8\u9700\u8981\u66f4\u591a)\r\n\r\n\r\n\u63a5\u4e0b\u6765,\u4ecei\u5411\u70b9n+j(j\u2208[1,n],j\u2260i) \u8fde\u8fb9,\u6d41\u91cf\u4e3ainf,\u8d39\u7528\u4e3a\u8fd9\u4e24\u70b9(i\u548cj)\u7684\u8ddd\u79bb.\r\n\r\n\u8ddd\u79bb?~~\u90a3\u662f\u4ec0\u4e48~~\r\n\r\n\u8fd9\u6837,\u4ecei\u8fd0\u5230j\u7684\u8d27\u7269\u91cf\u5373\u4e3a(\u4e00\u6b21\u589e\u5e7f)\u6d41\u91cf \\* \u8fb9\u7684\u8d39\u7528.\r\n\r\n\u5728\u8fd9\u4e2a\u56fe\u4e0a\u8dd1\u8d39\u7528\u6d41,\u6700\u540e\u8fd9\u4e2a\u56fe\u6240\u6709\u6d41\u91cf(\u66fe\u7ecf)\u4e0d\u4e3ainf\u7684\u8fb9\u5168\u4e3a0----\u8bf4\u660e\u6240\u6709\u8d27\u7269\u90fd\u8fd0\u5b8c\u4e86\r\n\r\n\u5f97\u51fa\u6765\u7684cost\u603b\u8d39\u7528\u5c31\u662f\u7b54\u6848\r\n\r\n\u5b9e\u5728\u4e0d\u884c\u753b\u56fe\u7406\u89e3\u5417,\u5957\u51e0\u4e2a\u6837\u4f8b\u4e5f\u884c.\r\n\r\n~~\u4e0d\u5bf9\u554a\u6211\u778e\u626f\u4e86\u4e9b\u4ec0\u4e48,,,,,,~~\r\n\r\n\r\n------------\r\n\r\n\r\n\r\n####code\r\n\r\n```cpp\r\n#include<iostream>    //\u6700\u5927\u6d41\u8d39\u7528\u6d412\u54081 233\r\n#include<cstdio>\r\n#include<cstdlib>\r\n#include<cstring>\r\n#include<algorithm> \r\n#include<cmath>\r\n#include<queue>\r\n#define inf 999999999\r\n#define il inline\r\nusing namespace std;\r\nstruct nn\r\n{\r\n  int to,nt,c,w;\r\n}e[200010];\r\nint hd[10010],tot;\r\nil void add(int fr,int to,int c,int w)\r\n{\r\n  e[tot].to=to;e[tot].nt=hd[fr];e[tot].c=c;e[tot].w=w;hd[fr]=tot;tot++;\r\n  e[tot].to=fr;e[tot].nt=hd[to];e[tot].c=0;e[tot].w=-w;hd[to]=tot;tot++;\r\n}\r\nint ss,tt;\r\nint lv[10010];\r\nint ds[10010],pre[10010],ff[10010];bool v[10010];\r\nint flow,cost;\r\nint n;\r\nil bool bfs()\r\n{\r\n  memset(lv,-1,sizeof(lv));\r\n  queue<int> q;\r\n  q.push(ss);\r\n  lv[ss]=0;\r\n  while(!q.empty())\r\n    {\r\n      int x=q.front();\r\n      q.pop();\r\n      for(int j=hd[x];j>=0;j=e[j].nt)\r\n    {\r\n      int y=e[j].to,c=e[j].c;\r\n      if(c>0&&lv[y]<0)\r\n        {\r\n          lv[y]=lv[x]+1;\r\n          q.push(y);\r\n        }\r\n    }\r\n    }\r\n  return lv[tt]>=0;\r\n}\r\nil int dfs(int x,int fl)\r\n{\r\n  if(x==tt) return fl;\r\n  int fll=0;\r\n  for(int j=hd[x];j>=0;j=e[j].nt)\r\n    {\r\n      int y=e[j].to,c=e[j].c;\r\n      if(c>0&&lv[y]==lv[x]+1)\r\n    {\r\n      int fff=dfs(y,min(fl,c));\r\n      e[j].c-=fff;e[j^1].c+=fff;\r\n      fll+=fff;fl-=fff;\r\n      if(fl<=0) return fll;\r\n    }\r\n    }\r\n  return fll;\r\n}\r\nil bool spfaa()\r\n{\r\n  memset(ds,0x7f,sizeof(ds));\r\n  memset(pre,-1,sizeof(pre));\r\n  memset(ff,-1,sizeof(ff));\r\n  memset(v,false,sizeof(v));\r\n  queue<int> q;\r\n  q.push(ss);\r\n  ds[ss]=0;ff[ss]=inf;v[ss]=true;\r\n  while(!q.empty())\r\n    {\r\n      int x=q.front();\r\n      q.pop();\r\n      for(int j=hd[x];j>=0;j=e[j].nt)\r\n    {\r\n      int y=e[j].to,c=e[j].c,w=e[j].w;\r\n      if(c>0&&ds[y]>ds[x]+w)\r\n        {\r\n          ds[y]=ds[x]+w;\r\n          pre[y]=j;\r\n          ff[y]=min(ff[x],c);\r\n          if(!v[y])\r\n        {\r\n          v[y]=true;\r\n          if(y!=tt) q.push(y);\r\n        }\r\n        }\r\n    }\r\n      v[x]=false;\r\n    }\r\n  if(ds[tt]>=0x7f) return false;\r\n  flow+=ff[tt];\r\n  cost+=ff[tt]*ds[tt];\r\n  int now=tt;\r\n  while(now!=ss)\r\n    {\r\n      int j=pre[now];\r\n      e[j].c-=ff[tt];\r\n      e[j^1].c+=ff[tt];\r\n      now=e[j^1].to;\r\n    }\r\n  return true;\r\n}    //\u4ee5\u4e0a\u5185\u5bb9\u4e3a\u6700\u5927\u6d41\u548c\u8d39\u7528\u6d41\u677f\u5b50,\u4e0d\u4f1a\u5c31\u770b\u6a21\u7248\r\nil int dinicc()\r\n{\r\n  flow=0;\r\n  while(bfs()){flow+=dfs(ss,inf);}\r\n  return flow;\r\n}\r\nil int fyl()\r\n{\r\n  flow=0;cost=0;\r\n  while(1){if(!spfaa()) break;}\r\n  return cost;\r\n}\r\nint main()\r\n{\r\n  memset(hd,-1,sizeof(hd));    //\u4e2a\u4eba\u4e60\u60ef\r\n  scanf(\"%d\",&n);tt=2*n+1;\r\n  int sum=0,ans=0;\r\n  for(int i=1;i<=n;i++)\r\n    {\r\n      int c;\r\n      scanf(\"%d\",&c);\r\n      sum+=c;\r\n      add(ss,i,c,0);\r\n      add(i,n+i,inf,0);    //\u5148\u8fde\u9884\u5904\u7406\u8fb9\r\n    }\r\n  sum/=n;\r\n  for(int i=1;i<=n;i++) add(n+i,tt,sum,0);\r\n  dinicc();    //\u6700\u5927\u6d41\u9884\u5904\u7406\r\n  for(int i=1;i<=n;i++)\r\n    {\r\n      for(int j=1;j<=n/2;j++)\r\n    add(i,(n+i+j-1)%n+1,inf,j);\r\n      for(int j=1;j<=n/2;j++)\r\n    add(i,(n+i+-j-1)%n+1,inf,j);    //\u679a\u4e3e\u8ddd\u79bb,\u5411\u522b\u7684\u70b9\u8fde\u8fb9\r\n    }\r\n  printf(\"%d\",fyl());    //\u7136\u540e\u8d39\u7528\u6d41\u4e71\u641e\u5373\u53ef\r\n  return 0;\r\n}\r\n```\r\n\r\n------------\r\n\r\n",
        "postTime": 1515038690,
        "uid": 38372,
        "name": "star_magic_young",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "\u6211\u4f1a\u8bf4\u8fd9\u9898\u548c\u5747\u5206\u7eb8\u724c\u52a0\u5f3a\u7248\u662f\u4e00\u6837\u4e00\u6837\u7684\u4e48\u3002\u3002\u3002\u3002\u53ea\u4e0d\u8fc7\u6570\u636e\u8303\u56f4\u5c0f\u4e00\u70b9\u3002\u3002\u3002\u3002\r\n\r\n\u96be\u5ea6\u865a\u9ad8\u554a\u3002\u3002\u3002\r\n\r\n\u5747\u5206\u7eb8\u724c\u52a0\u5f3a\u7248\u662f\u6bcf\u6b21\u4e00\u5f20\uff0c\u6c42\u6700\u5c11\u6b21\u6570\r\n\r\n\u8fd9\u91cc\u662f\u6bcf\u6b21\u4e0d\u9650\u91cf\uff0c\u6c42\u6700\u5c11\u8fd0\u8f93\u91cf\uff0c\r\n\r\n\u4f46\u5747\u5206\u7eb8\u724c\u52a0\u5f3a\u7248\u7684\u56e0\u4e3a\u5fc5\u987b\u79fb\u5230\u5e73\u8861\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u770b\u6210\u79fb\u52a8\u4e86\u4e00\u6b21\uff0c\u4f46\u4e00\u6b21\u79fb\u52a8\u5f88\u591a\uff0c\u5c06\u4ee3\u4ef7\u53d8\u6210\u6b21\u6570\u5c31\u597d\u4e86\u554a\uff0c\uff0c\uff0c\uff0c\r\n\r\n\u8fd9\u91cc\u8d34\u4e00\u4efd\u4ee3\u7801\uff0c\uff0c\uff0c\u89e3\u91ca\u6bd4\u8f83\u5c11\uff0c\u5177\u4f53\u7684\u53ef\u4ee5\u53bb\u770b1368\uff0c\u89e3\u91ca\u7684\u5f88\u8be6\u7ec6\r\n\r\n#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n/\\*\u795e\u5947\u7684\u6570\u8bba\u505a\u6cd5\\*/\r\n\r\n```cpp\r\n#define AC 250\r\nint n,a[AC];\r\nlong long sum[AC],ave,mid,ans;\r\nint read()\r\n{\r\n    int x=0;char c=getchar();\r\n    while(c>'9'||c<'0')c=getchar();\r\n    while(c>='0'&&c<='9')x=x*10+c-'0',c=getchar();\r\n    return x;\r\n}\r\nint abS(int x)\r\n{\r\n    if(x>0)return x;\r\n    else return -x;\r\n}\r\nint main()\r\n{\r\n    n=read();\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        a[i]=read();\r\n        ave+=a[i];\r\n    }\r\n    ave/=n;//\u5e73\u5747\u6570\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        sum[i]=sum[i-1]+a[i]-ave;//\u5f97\u5230\u7684\u662f\u5b83\u524d\u9762\u8fd8\u591a\u591a\u5c11\u6216\u8005\u5c11\u591a\u5c11\u3002\r\n        //\u4e5f\u5c31\u662f\u6709\u591a\u5c11\u8981\u79fb\u8fc7\u6765\r\n    } \r\n    sort(sum+1,sum+n+1);//\u6392\u5e8f\r\n    mid=(sum[(n+1)/2]);//\u53d6\u4e2d\u4f4d\u6570\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        ans+=abS(sum[i]-mid);\r\n    }\r\n    printf(\"%lld\",ans);\r\n    return 0;\r\n}\r\n```",
        "postTime": 1513956158,
        "uid": 47136,
        "name": "ww3113306",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "###\u521d\u4e2d\u4e03\u4e0a\u7b2c\u4e00\u7ae0\u90fd\u5b66\u8fc7\u5427\u3002\r\n\r\n##### \u5728\u6570\u8f74\u4e0a\u4efb\u53d6n\u4e2a\u70b9\uff0c\u95ee\u5728\u6570\u8f74\u7684\u54ea\u4e2a\u70b9\u6216\u54ea\u4e2a\u8303\u56f4\u91cc\uff0c\u8fd9\u4e2a\u70b9\u5230\u6240\u6709\u70b9\u7684\u8ddd\u79bb\u548c\u6700\u5c0f\u3002\r\n\r\n##### \u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u70b9\u4ece\u5de6\u5230\u53f3\u6807\u4e0a1,2,3,4\u00b7\u00b7\u00b7n-1\uff0cn,\u7136\u540e\uff0c\u5982\u679cn\u662f\u5947\u6570\uff0c\u90a3\u4e48\u70b9\u4e3an+1/2\uff0c\u7136\u540e\u8ddd\u79bb\u548c\u5c31\u4e00\u4e2a\u4e00\u4e2a\u70b9\u7b97\u8fc7\u53bb\uff1b\u5982\u679cn\u662f\u5076\u6570\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\uff0c\u6211\u4eec\u53ef\u4ee5\u53d6n/2\u6216\uff08n/2\uff09+1\u8fd9\u4e24\u4e2a\u70b9\uff0c\u7136\u540e\u8ddd\u79bb\u548c\u5c31\u4e00\u4e2a\u4e00\u4e2a\u70b9\u7b97\u8fc7\u53bb\u3002\r\n\r\n### \u8d34\u4e0a\u4ee3\u7801\r\n\r\n```cpp\r\nvar\r\n  n:longint;\r\n  a,b:array[0..1000010] of int64;\r\n  i:longint;\r\n  sum1:int64;\r\n  max,k:int64;\r\nprocedure qk(l,r:longint);\r\nvar\r\n  i,j,m:longint;\r\n  t:int64;\r\nbegin\r\n  i:=l; j:=r; m:=b[(i+j) div 2];\r\n  while i<j do\r\n    begin\r\n      while b[i]<m do inc(i);\r\n      while b[j]>m do dec(j);\r\n      if i<=j then \r\n      begin\r\n        t:=b[i]; b[i]:=b[j]; b[j]:=t;\r\n        inc(i); dec(j);\r\n      end;\r\n    end;\r\n  if i<r then qk(i,r);\r\n  if j>l then qk(l,j);\r\nend;//\u5feb\u6392\r\nbegin\r\n  readln(n);\r\n  for i:=1 to n do \r\n    begin\r\n      read(a[i]);\r\n      b[i]:=b[i-1]+a[i];\r\n    end;\r\n  sum1:=b[n] div n;//\u5982\u679cn\u662f\u5076\u6570\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\uff0c\u6211\u4eec\u53ef\u4ee5\u53d6n/2\u7136\u540e\u8ddd\u79bb\u548c\u5c31\u4e00\u4e2a\u4e00\u4e2a\u70b9\u7b97\u8fc7\u53bb\u3002\r\n  for i:=1 to n do b[i]:=b[i]-i*sum1;\r\n  qk(1,n);\r\n  k:=b[(1+n) div 2];//\u5982\u679cn\u662f\u5947\u6570\uff0c\u90a3\u4e48\u70b9\u4e3an+1/2\uff0c\u7136\u540e\u8ddd\u79bb\u548c\u5c31\u4e00\u4e2a\u4e00\u4e2a\u70b9\u7b97\u8fc7\u53bb\uff1b\r\n  for i:=1 to n do max:=max+abs(b[i]-k);\r\n  writeln(max);\r\nend.\r\n```",
        "postTime": 1513938718,
        "uid": 59127,
        "name": "\u5deb\u5996\u738b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "\u7f51\u7edc\u6d4124\u9898\u7b2c\u4e00\u5237\u3002\n\n\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\u9b3c\u6807\u7b7e\uff0c\u53cd\u6b63\u5237\u4e86\u5c31\u662f\u4e86\u3002\n\n\n\u65e2\u7136\u662f\u7f51\u7edc\u6d41\u7cfb\u5217\uff0c\u90a3\u4e48\u5c31\u89c4\u5b9a\u4e00\u4e0b\u5427\uff1a$(u,v,w,f)$\u8868\u793a\u4eceu\u5411v\u8fde\u8fb9\uff0c\u6743\u503c\u4e3aw\uff0c\u6d41\u91cf\u4e3af\u7684\u53cc\u5411\u8fb9\uff08\u53cd\u5411\u8fb9\u81ea\u884c\u8111\u8865\uff09\u3002\u5982\u679c\u53ea\u9700\u8981\u7528\u5230\u7f51\u7edc\u6d41\uff0c\u90a3\u4e48\u8fb9\u53d8\u4e3a$(u,v,f)$\uff0c\u610f\u4e49\u540c\u4e0a\u3002\n\n\n\u672c\u9898\u4e3a\u8d39\u7528\u6d41\u3002\n\n\n\u8fde\u8fb9\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u50a8\u8d27\u91cf\u5927\u4e8e\u5e73\u5747\u503c$avr$\u7684\u70b9\u8fde\u8fb9 $(s,i,0,w[i]-avr)$\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u50a8\u8d27\u91cf\u5c0f\u4e8e$avr$\u8fde\u8fb9 $(i,t,0,avr-w[i])$\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5927\u4e8e\u5e73\u5747\u503c\u70b9$i$\u5411\u6bcf\u4e2a\u5c0f\u4e8e\u5e73\u5747\u503c\u70b9$j$\u8fde\u8fb9\n\n$(i,j,min((i-j+n)\\bmod n,(j-i+n)\\bmod n)$\n\n\u4eces\u5411t\u8dd1\u7f51\u7edc\u6d41\u3002\n\n\u4ee3\u7801\uff1a\n\n\n    \n    \n    \n    \n    \n```cpp\n    #include<bits/stdc++.h>\n    #include<cctype>\n    #define For(i,a,b) for(i=(a),i##end=(b);i<=i##end;++i)\n    #define Forward(i,a,b) for(i=(a),i##end=(b);i>=i##end;--i)\n    #define Rep(i,a,b) for(register int i=(a),i##end=(b);i<=i##end;++i)\n    #define Repe(i,a,b) for(register int i=(a),i##end=(b);i>=i##end;--i)\n    using namespace std;\n    template<typename T>inline void read(T &x){\n        T s=0,f=1;char k=getchar();\n        while(!isdigit(k)&&k^'-')k=getchar();\n        if(!isdigit(k)){f=-1;k=getchar();}\n        while(isdigit(k)){s=s*10+(k^48);k=getchar();}\n        x=s*f;\n    }\n    void file(void){\n        #ifndef ONLINE_JUDGE\n        freopen(\"water.in\",\"r\",stdin);\n        freopen(\"water.out\",\"w\",stdout);\n        #endif\n    }\n    const int MAXN=11111;\n    static struct edge\n    {\n        int v,w,next;\n        long long f;\n    }p[MAXN<<2];\n    static int n,head[MAXN],input[MAXN],output[MAXN],k1,k2,e=1;\n    static long long sum,w[MAXN];\n    inline void add(int u,int v,int w,int f)\n    {\n        p[++e].v=v;p[e].w=w;p[e].f=f;p[e].next=head[u];head[u]=e;\n        p[++e].v=u;p[e].w=-w;p[e].f=0;p[e].next=head[v];head[v]=e;\n    }\n    void init()\n    {\n        read(n);\n        Rep(i,1,n)read(w[i]),sum+=w[i];\n        sum/=n;\n        Rep(i,1,n)if(w[i]>sum)input[++k1]=i,add(n+1,i,0,w[i]-sum);\n        else if(w[i]<sum)output[++k2]=i,add(i,n+2,0,sum-w[i]);\n        Rep(i,1,k1)Rep(j,1,k2)add(input[i],output[j]\n                ,min((input[i]-output[j]+n)%n,(output[j]-input[i]+n)%n)\n                ,min(w[input[i]]-sum,sum-w[output[j]]));\n    }\n    long long fee;\n    long long lev[MAXN];bool vis[MAXN];\n    deque<int>G;\n    bool spfa(int s,int t)\n    {\n        memset(lev,0x3f,sizeof lev);\n        G.push_front(s);vis[s]=1;lev[s]=0;\n        while(!G.empty())\n        {\n            static int u,v;u=G.front();G.pop_front();\n            for(v=head[u];v;v=p[v].next)if(p[v].f&&lev[p[v].v]>lev[u]+p[v].w)\n            {\n                lev[p[v].v]=lev[u]+p[v].w;\n                if(!vis[p[v].v])\n                {\n                    vis[p[v].v]=true;\n                    if(G.empty()||lev[p[v].v]<lev[G.front()])G.push_front(p[v].v);\n                    else G.push_back(p[v].v);\n                }\n            }\n            vis[u]=false;\n        }\n        return lev[t]^lev[0];\n    }\n    static int cur[MAXN];\n    long long dfs(int u,int t,long long flow)\n    {\n        if(u==t||!flow)return flow;\n        long long sum=0;vis[u]=true;\n        for(register int &v=cur[u];flow&&v;v=p[v].next)\n        {\n            if(!vis[p[v].v]&&p[v].f&&lev[p[v].v]==lev[u]+p[v].w)\n            {\n                long long f=dfs(p[v].v,t,min(flow,p[v].f));\n                p[v].f-=f;p[v^1].f+=f;fee+=f*p[v].w;sum+=f;flow-=f;\n            }\n        }\n        vis[u]=false;\n        return sum;\n    }\n    void Dinic(int s,int t)\n    {while(spfa(s,t))memcpy(cur,head,sizeof head),dfs(s,t,lev[0]);}\n    void solve()\n    {\n        Dinic(n+1,n+2);\n        printf(\"%lld\\n\",fee);\n    }\n    int main(void){\n        file();\n        init();\n        solve();\n        return 0;\n    }\n\n```",
        "postTime": 1513860483,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u7684 **$Dark$ \u6c34\u9898**\u3002\n\n\u4e00\u5f00\u59cb\u7167\u7740\u5927\u4f6c\u4eec\u7684\u5efa\u6a21\u753b\u4e86\u4e00\u4e0b\u56fe,\u5982\u4e0b : \n\n![](https://i.loli.net/2018/11/03/5bdd1040ded4d.png)\n\n\u6ce8\u610f\u662f\u4e00\u4e2a\u73af\u800c,\u6240\u4ee5\u4e0a\u9762\u7684\u6700\u9ad8\u7684\u90a3\u4e2a\u70b9\u8981\u8fde\u6700\u4f4e\u7684\u90a3\u4e2a\u70b9\u7684,\u4e0a\u9762\u6ca1\u6709\u753b\u3002\n\n\u6211\u4eec\u4f1a\u53d1\u73b0,\u6211\u4eec\u4ece\u6e90\u70b9\u7ed9\u4e86\u90a3\u4e9b\u70b9\u4e00\u4e9b\u6743\u503c,\u7136\u540e\u8ba9\u7528\u5b83\u4eec\u7684\u5730\u7406\u4f4d\u7f6e\u6765\u7ed9\u5176\u5b83\u7684\u70b9\u6743\u503c\u3002\u5f88\u663e\u7136,\u5982\u679c\u8981\u6d41\u5230\u6c47\u70b9\u7684\u8bdd,\u80af\u5b9a\u8981\u5148\u6d41\u5230\u90a3\u4e9b\u5c11\u4e8e\u5e73\u5747\u503c\u7684\u70b9\u3002\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u641e\u5b9a\u4e86\u3002\n\n\u4e3a\u4ec0\u4e48\u6709\u6570\u5b66 $+$ \u8d2a\u5fc3\u7684\u65b9\u6cd5? \u4f60\u6ca1\u6709\u770b\u5230\u8fd9\u5f20\u56fe\u5c31\u662f\u4e00\u4e2a\u5e8f\u5217 $+$ \u4e24\u4e2a\u70b9\u5417,\u5b8c\u5168\u53ef\u4ee5\u6570\u5b66\u554a\u3002\n\n```pascal\nUses math;\n\nvar\n    from,reach,next,value,cost:array[-1..1010] of longint;\n    dis,pre,last,flow:array[-1..1010] of int64;\n    queue:array[-1..1010] of longint;\n    cnt:array[-1..110] of longint;\n    vis:array[-1..110] of boolean;\n    num:array[-1..110] of longint;\n    n,m,i,j,k,tot,sum,now,node,sink,source:longint;\n    maxflow,mincost:int64;\n\nprocedure add(x,y,sum_1,sum_2:longint);\nbegin\n    inc(tot); from[tot]:=x; reach[tot]:=y; value[tot]:=sum_1; cost[tot]:= sum_2; next[tot]:=cnt[x]; cnt[x]:=tot;\n    inc(tot); from[tot]:=y; reach[tot]:=x; value[tot]:=0    ; cost[tot]:=-sum_2; next[tot]:=cnt[y]; cnt[y]:=tot;\nend;\n\nfunction spfa:boolean;\nvar head,tail,now,i:longint;\nbegin\n    filldword(dis,sizeof(dis) div 4,maxlongint);\n    filldword(flow,sizeof(flow) div 4,maxlongint);\n    filldword(vis,sizeof(vis) div 4,0);\n    head:=1; tail:=1;  queue[1]:=source; vis[source]:=True; dis[source]:=0; pre[sink]:=-1;\n\n    while head<=tail do\n    begin\n        now:=queue[head]; vis[now]:=False; inc(head);\n        i:=cnt[now];\n        while i<>-1 do\n        begin\n            if (value[i]>0)and(dis[reach[i]]>dis[now]+cost[i]) then\n            begin\n                dis[reach[i]]:=dis[now]+cost[i];\n                pre[reach[i]]:=now;\n                last[reach[i]]:=i;\n                flow[reach[i]]:=min(flow[now],value[i]);\n                if vis[reach[i]]=False then\n                begin\n                    vis[reach[i]]:=True;\n                    inc(tail); queue[tail]:=reach[i];\n                end;\n            end;\n            i:=next[i];\n        end;\n    end;\n    if pre[sink]=-1 then exit(False); exit(True);\nend;\n\nprocedure MincostMaxflow;\nbegin\n    maxflow:=0; mincost:=0; now:=0;\n    while (spfa) do\n    begin\n        now:=sink;\n        inc(maxflow,flow[sink]);\n        inc(mincost,flow[sink]*dis[sink]);\n        while now<>source do\n        begin\n            dec(value[last[now]],flow[sink]);\n            inc(value[last[now] xor 1],flow[sink]);\n            now:=pre[now];\n        end;\n    end;\nend;\n\nprocedure Clear;\nbegin\n    filldword(cnt,sizeof(cnt) div 4,maxlongint*2+1); tot:=1;\n    fillchar(value,sizeof(value),0);\n    fillchar(reach,sizeof(reach),0);\n    fillchar(cost,sizeof(cost),0);\n    fillchar(next,sizeof(next),0);\nend;\n\nprocedure Construction_I;\nbegin\n    read(n);\n    source:=1; sink:=n+2;\n    for i:=1 to n do begin read(num[i]); inc(sum,num[i]); end;\n    sum:=sum div n;\n    for i:=1 to n do\n    begin\n        dec(num[i],sum);\n        if num[i]>0 then add(source,i+1,num[i],0);\n        if num[i]<0 then add(i+1,sink,-num[i],0);\n        if i>1 then add(i+1,i,maxlongint,1);\n        if i<n then add(i+1,i+2,maxlongint,1);\n    end;\n    add(2,n+1,maxlongint,1);\n    add(n+1,2,maxlongint,1);\nend;\n\nbegin\n    Clear; Construction_I; MincostMaxflow; writeln(mincost);\nend.\n```\n\n\n",
        "postTime": 1541214483,
        "uid": 77760,
        "name": "arfa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    },
    {
        "content": "[\u7f51\u7edc\u6d4124\u9898\u5927\u7efc\u5408](https://www.luogu.org/blog/foreverlasting/wang-lao-liu-24-ti-tai-zeng-ge)\n\n\u8fd9\u9898\u63d0\u4f9b\u4e24\u4e2a\u601d\u8def\u3002\n\n\u7b2c\u4e00\u4e2a\u662f\u7f51\u7edc\u6d41\uff1a\u5178\u578b\u7684\u6700\u5c0f\u8d39\u7528\u6d41\u95ee\u9898\u3002\u5bf9\u4e8e\u9700\u8981\u8d27\u7269\u7684\u70b9\u5411T\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u9700\u8981\u7684\u8d27\u7269\u91cf\u8d39\u7528\u4e3a0\u7684\u8fb9\uff0cS\u5411\u591a\u4f59\u8d27\u7269\u7684\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u591a\u4f59\u8d27\u7269\u91cf\u8d39\u7528\u4e3a0\u7684\u8fb9\uff0c\u7136\u540e\u4efb\u4f55\u76f8\u90bb\u4e24\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3ainf\u8d39\u7528\u4e3a1\u7684\u8fb9\uff0c\u56e0\u4e3a\u662f\u73af\uff0c\u6240\u4ee51\u548cn\u4e5f\u8981\u8fde\u3002\n\u7136\u540e\u5c31\u662f\u6700\u5c0f\u8d39\u7528\u6d41\u4e86\u3002\u4ee3\u7801\u6b64\u5904\u4e0d\u63d0\u4f9b\u3002\n\n\u7b2c\u4e8c\u79cd\u601d\u8def\u662f\u8d2a\u5fc3\uff1a\u53c2\u8003HNOI2008 \u7cd6\u679c\u4f20\u9012\uff0c\u8fd9\u79cd\u6a21\u578b\u5f88\u5e38\u89c1\u7684\u3002\u6240\u4ee5\u4e5f\u4e0d\u63d0\u4f9b\u4ee3\u7801\u3002",
        "postTime": 1530618072,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010\u7f51\u7edc\u6d4124\u9898\u3011\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898"
    },
    {
        "content": "\u989d\uff0c\u8fd9\u9053\u9898\u3002\u3002\u3002\u79d2A\uff0c\u5e76\u6ca1\u770b\u9898\u89e3\uff0c\u597d\u88f8\u3002\u3002\u3002\n\n\uff08\u6ce8\uff1a\u88ab\u770b\u9898\u89e3\u7684\u4eba\u6293\u53bb\u72c2\u625340\u5206\u949f\u5e76\u5582\u4e86\u4e94\u5927\u5305\u7684\u654c\u654c\u754f\uff09\n\n\u597d\u5427\uff0c\u4e0dXX\u4e86\u3002\n\n\u8fd9\u9053\u9898\u5efa\u6a21\u5e76\u4e0d\u590d\u6742\u3002\n\n\u6bcf\u4e2a\u70b9\u5411\u5468\u56f4\u4e24\u4e2a\u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u6d41\u91cf\u4e3aINF\uff0c\u8d39\u7528\u4e3a1\uff0c\u6e90\u70b9\u5411\u6bcf\u4e2a\u70b9\u8fde\u4e00\u6761\uff0c\u6d41\u91cf\u4e3a\u8fd9\u4e2a\u70b9\u7684\u5bb9\u91cf\uff0c\u8d39\u7528\u4e3a0\uff0c\u6bcf\u4e2a\u70b9\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u6d41\u91cf\u4e3asigma()/n~~\uff08\u4f60\u4eec\u5e94\u8be5\u770b\u5f97\u61c2\u5427\uff09~~\uff0c\u8d39\u7528\u4e3a0\n\n\u7136\u540e\u8d39\u7528\u6d41\uff0c\u6ca1\u4e86\uff0c\u989d~\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing  namespace  std;\nstruct  node\n{\n\tint  y,c,d,next,other;\n}a[21000];int  len,last[210],n,st,ed,sum,cost;\nint  list[210],head,tail,d[210];\nbool  v[210];\nvoid  ins(int  x,int  y,int  c,int  d)\n{\n\tlen++;\n\ta[len].y=y;a[len].c=c;a[len].d=d;\n\ta[len].next=last[x];last[x]=len;\n\tlen++;\n\ta[len].y=x;a[len].c=0;a[len].d=-d;\n\ta[len].next=last[y];last[y]=len;\n\ta[len].other=len-1;\n\ta[len-1].other=len;\n}\nbool  spfa()\n{\n\tmemset(d,20,sizeof(d));d[ed]=0;v[ed]=false;\n\thead=1;tail=2;list[head]=ed;\n\tint  inf=d[ed+1];\n\twhile(head!=tail)\n\t{\n\t\tint  x=list[head];\n\t\tfor(int  k=last[x];k;k=a[k].next)\n\t\t{\n\t\t\tint  y=a[k].y,kl=a[k].other;\n\t\t\tif(a[kl].c>0    &&  d[y]>d[x]-a[k].d)\n\t\t\t{\n\t\t\t\td[y]=d[x]-a[k].d;\n\t\t\t\tif(v[y]==true)\n\t\t\t\t{\n\t\t\t\t\tv[y]=false;\n\t\t\t\t\tif(d[list[head+1]]>d[y])\n\t\t\t\t\t{\n\t\t\t\t\t\tint  all=head;\n\t\t\t\t\t\thead--;if(head==0)head=n;\n\t\t\t\t\t\tlist[head]=list[all];list[all]=y;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tlist[tail++]=y;\n\t\t\t\t\t\tif(tail==n+1)tail=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\thead++;if(head==n+1)head=1;\n\t\tv[x]=true;\n\t}\n\treturn  d[st]!=inf;\n}\ninline  int  mymin(int  x,int  y){return  x<y?x:y;}\nint  find(int  x,int  f)\n{\n\tv[x]=false;\n\tif(x==ed){v[x]=true;return  f;}\n\tint  ans=0,t=0;\n\tfor(int  k=last[x];k;k=a[k].next)\n\t{\n\t\tint  y=a[k].y;\n\t\tif(a[k].c>0  &&  d[y]==d[x]-a[k].d  &&  v[y]==true  &&  ans<f)\n\t\t{\n\t\t\tans+=t=find(y,mymin(a[k].c,f-ans));\n\t\t\ta[k].c-=t;a[a[k].other].c+=t;cost+=t*a[k].d;\n\t\t}\n\t}\n\tv[x]=true;\n\treturn  ans;\n}\nint  main()\n{\n\tscanf(\"%d\",&n);st=0;ed=n+1;\n\tfor(int  i=1;i<=n;i++)\n\t{\n\t\tint  x;scanf(\"%d\",&x);\n\t\tint  l=i-1,r=i+1;\n\t\tif(l==0)l=n;/*\u73af\u7279\u5224*/\n\t\tif(r==n+1)r=1;/*\u73af\u7279\u5224*/\n\t\tins(i,l,999999999,1);ins(i,r,999999999,1);ins(st,i,x,0);\n\t\tsum+=x;\n\t}\n\tsum/=n;/*\u603b\u548c*/\n\tfor(int  i=1;i<=n;i++)ins(i,ed,sum,0);/*\u8fde\u8fb9*/\n\tint  ans=0;\n\tmemset(v,true,sizeof(v));n+=2;\n\twhile(spfa())find(st,999999999);/*ZKW\u8d39\u7528\u6d41*/\n\tprintf(\"%d\\n\",cost);/*\u8f93\u51fa*/\n\treturn  0;\n}\n```",
        "postTime": 1525437393,
        "uid": 65602,
        "name": "\u7231\u559d\u654c\u654c\u754f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4016 \u3010\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898\u3011"
    }
]