[
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u4e0d\u4e00\u6837\u7684\u89e3\u6cd5\uff08\n\n~~\u4e5f\u5c31\u60f3\u3001\u8c03\u4e865h\u5427\uff0c\u55ef\u4e0d\u7b97\u957f![/cy](https://cdn.luogu.com.cn/upload/pic/62225.png)~~\n\n\u8003\u8651$3$\u6b21`SPFA`\u3002\n\n\u7b2c\u4e00\u6b21\uff0c\u6211\u4eec\u4f7f\u7528`SPFA`\u5efa\u7acb $Mx$\u6570\u7ec4\uff0c$Mx_i$\u8868\u793a**\u5bfc\u822a1\u8ba4\u4e3a\u7684**$1$\u5230$n$\u7684\u6700\u77ed\u8def\u5f84 \u3002\n\n\u7b2c\u4e8c\u6b21\uff0c\u6211\u4eec\u518d\u4e00\u6b21\u4f7f\u7528`SPFA`\u5efa\u7acb $My$\u6570\u7ec4\uff0c$My_i$\u8868\u793a**\u5bfc\u822a2\u8ba4\u4e3a\u7684**$1$\u5230$n$\u7684\u6700\u77ed\u8def\u5f84\u3002\n\n\u6ce8\u610f\u533a\u5206$p_i$\u548c$q_i$\u4e0d\u8981\u5199\u9519\u4e86\n\n## \u91cd\u70b9\u6765\u4e86\uff01\n\n\u6211\u4eec\u53ef\u4ee5\u518d\u5efa\u4e00\u4e2a\u56fe$G$\uff0c\u5176\u4e2d$G_{i,j}$\u8868\u793a\u4ece\u7ed3\u70b9$i$\u8d70\u5230\u7ed3\u70b9$j$\uff0c\u62b1\u6028\u6570\u4e4b\u548c\uff0c\u5f53\u7136\u7ed3\u70b9$i$\u548c\u7ed3\u70b9$j$\u6709\u76f4\u63a5\u7684\u8fb9\u76f8\u8fde\u3002\n\n\u90a3\u4e48\u548b\u7b97\u6709\u76f4\u63a5\u8fb9\u7684\u4e24\u70b9\u4e4b\u95f4\u7684\u62b1\u6028\u6570\u548c\u5462\uff1f\n\n\n\u6211\u4eec\u60f3\u5230\uff0c\u5982\u679c\u4ece$i$\u7ed3\u70b9\u51fa\u53d1\uff0c\u5230$j$\u7ed3\u70b9\uff0c\u7b2c\u4e00\u4e2aGPS\u4f1a\u62b1\u6028\uff0c\u5f53\u524d\u4ec5\u5f53$Mx_i+u\\neq Mx_j$\uff08**\u6ce8\u610f\u662f$\\neq$**\uff09\u3002\n\n\u5176\u4e2du\u4e3a\u7b2c\u4e00\u4e2aGPS\u8ba4\u4e3a\u7684\u4ece$i$\u7ed3\u70b9\u51fa\u53d1\uff0c\u5230$j$\u7ed3\u70b9\u7684\u65f6\u95f4\u3002\n\n\u7b2c\u4e8c\u4e2aGPS\u4f1a\u62b1\u6028\u7684\u60c5\u51b5\u4e5f\u540c\u7406\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u7ecf\u8fc7\u6bcf\u6761\u8fb9\u7684\u62b1\u6028\u503c\u90fd\u7b97\u51fa\u6765\uff08\u7b2c\u4e00\u4e2aGPS\u662f\u5426\u62b1\u6028+\u7b2c\u4e8c\u4e2aGPS\u662f\u5426\u62b1\u6028\uff09\uff0c\u6784\u6210\u4e00\u4e2a\u56fe\uff0c\u518d\u8dd1\u4e00\u904d`SPFA`\uff0c\u5c31\u53ef\u4ee5\u7b97\u51fa\u62b1\u6028\u503c\u6700\u5c0f\u662f\u591a\u5c11\u4e86\u3002\n\n\n\n",
        "postTime": 1621518432,
        "uid": 253765,
        "name": "houpingze",
        "ccfLevel": 5,
        "title": "P3720 [AHOI2017\u521d\u4e2d\u7ec4]guide\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898\u6015\u662fUSCAO\u7684\u9898\n\n\u8fd9\u9053\u9898\u7684\u9898\u76ee\u5927\u610f\u662f\u8bf4\u6709\u4e24\u4e2a\u7cfb\u7edf\uff0c\u4ed6\u4eec\u5bf9\u4e8e1\u5230n\u7684\u6bcf\u6761\u8def\u5f84\u7684\u70b9\u7684\u65f6\u95f4\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6700\u77ed\u8def\u7684\u5224\u5b9a\u4e5f\u4e0d\u4e00\u6837\n\n\u5982\u679c\u4f60\u8d70\u7684\u8def\u548c\u67d0\u5957\u7cfb\u7edf\u7684\u6700\u77ed\u8def\u5224\u5b9a\u4e0d\u4e00\u6837\uff0c\u5219\u8fd9\u4e2a\u7cfb\u7edf\u4f1a\u62b1\u6028\u4e00\u6b21\u3002\u4f60\u9700\u8981\u4f7f\u62b1\u6028\u6700\u5c11\u3002\n\n\u601d\u8def\u975e\u5e38\u7b80\u5355\n\n\u9996\u5148\u4f60\u5fc5\u987b\u6c42\u51fa\u4e24\u5957\u7cfb\u7edf\u7684\u6700\u77ed\u8def\n\n\u7136\u540e\u7528\u8fd9\u4e24\u5957\u7cfb\u7edf\u7684\u6700\u77ed\u8def\u91cd\u65b0\u5efa\u56fe\uff0c\u6743\u503c\u4e3a\u8d70\u8fd9\u6761\u8def\u7684\u62b1\u6028\u6570\n\n```\nif (d1[v]!=d1[u]+w1) cnt++;\nif (d2[v]!=d2[u]+w2) cnt++;\nG[i][j].w[0]=cnt;\n```\n\u50cf\u8fd9\u6837\n\n\u7136\u540e\u518d\u7528\u8fd9\u4e2a\u56fe\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff0c\u5c31\u8fc7\u4e86\n\n\u8fd9\u9898\u6570\u636e\u8303\u56f4\u6bd4\u8f83\u5927\uff0c\u6240\u4ee5\u8981\u7528spfa\u6216dijstra\n\n```\n#include<iostream>\n#include<queue>\n#include<vector>\nusing namespace std;\nconst int INF=1000000;\nstruct edge\n{\n\tint to;\n\tint w[2];\n};\n\nvector<edge> G[500010];\nint d1[500010];\nint d2[500010];\nint n,m;\nbool used[500010];\n\nvoid spfa(int d[],int mode)\n{\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\td[i]=INF;\n\t\tused[i]=false;\n\t}\n\tqueue<int> q;\n\td[n]=0;\n\tq.push(n);\n\tused[n]=true;\n\twhile (!q.empty())\n\t{\n\t\tint u=q.front();q.pop();\n\t\tused[u]=false;\n\t\tfor (int i=0;i<G[u].size();i++)\n\t\t{\n\t\t\tedge e=G[u][i];\n\t\t\tint v=e.to;\n\t\t\tint w=e.w[mode];\n\t\t\tif (d[v]>d[u]+w)\n\t\t\t{\n\t\t\t\td[v]=d[u]+w;\n\t\t\t\tif (!used[v])\n\t\t\t\t{\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tused[v]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\t\n\nint main()\n{\n\tcin>>n>>m;\n\t\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint u,v,w1,w2;\n\t\tcin>>u>>v>>w1>>w2;\n\t\tedge e;\n\t\te.to=u;\n\t\te.w[0]=w1;\n\t\te.w[1]=w2;\n\t\tG[v].push_back(e);\n\t}\n\tspfa(d1,0);\n\tspfa(d2,1);\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tfor (int j=0;j<G[i].size();j++)\n\t\t{\n\t\t\tedge e=G[i][j];\n\t\t\tint u=i,v=e.to,w1=e.w[0],w2=e.w[1];\n\t\t\tint cnt=0;\n\t\t\tif (d1[v]!=d1[u]+w1) cnt++;\n\t\t\tif (d2[v]!=d2[u]+w2) cnt++;\n\t\t\tG[i][j].w[0]=cnt;\n\t\t}\n\t}\n\tspfa(d1,0);\n\tcout<<d1[1];\n\treturn 0;\n}\n```\n\n\u540e\u5929AHOI\uff0cRP++",
        "postTime": 1523537687,
        "uid": 5931,
        "name": "Misaka19280",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3720 \u3010[AHOI2017\u521d\u4e2d\u7ec4]guide\u3011"
    },
    {
        "content": "\u540c[P3106](https://www.luogu.org/problemnew/show/P3106)\u5b8c\u5168\u4e00\u6837\u7684\u9898\u76ee\uff0c\u5904\u7406\u51fa\u5bf9\u4efb\u610f\u4e00\u4e2aGPS\u6c42\u51fa\u7684\u6700\u77ed\u8ddd\u79bbdi    \n\u518d\u5bf9\u4e8e\u4efb\u610f\u4e00\u6761\u8fb9\u662f\u4e0d\u662f\u67d0\u4e2aGPS\u7684\u6700\u77ed\u8def\uff0c\u5728\u6c42\u4e00\u6b21\u6700\u77ed\u8def  \n\u603b\u4e0a\uff1a\u53ea\u8981\u6c42\u4e09\u904d\u6700\u77ed\u8def   \n\u6ce8\u610f\u70b9\uff1a\u5efa\u8fb9\u65f6\u5efa\u53cd\u5411\u8fb9\uff0c\u56e0\u4e3aGPS\u8868\u793au\u5230n\u7684\u6700\u77ed\u8def    \n\u4e0a\u4ee3\u7801\uff1a    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#define N 100010\n#define M 500010\nusing namespace std;\nint n,m,Q,P,head[N],tot,x[M],y[M],v1[M],v2[M];\nbool vis[N];\nint d[N],d1[N],d2[N]; \nstruct node{\n\tint id,s;\n\tnode(int x,int y){id=x;s=y;}\n};\nstruct Edge{\n\tint v,next,val;\n}edge[M]; \ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();\n\t}while(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();\n\t}return  x*f;\n}\ninline void add(int x,int y,int z){edge[++tot].v=y;edge[tot].val=z;edge[tot].next=head[x];head[x]=tot;}\nvoid dijk(int s){\n\tpriority_queue<pair<int,int> >q1;memset(d,0x3f,sizeof(d));memset(vis,0,sizeof(vis));\n\tq1.push(make_pair(0,s));d[s]=0;\n\twhile(q1.size()){\n\t\tint u=q1.top().second;q1.pop();\n\t\tif(vis[u])continue;\n\t\tvis[u]=1;\n\t\tfor(int i=head[u];i;i=edge[i].next){\n\t\t\tint v=edge[i].v,z=edge[i].val;\n\t\t\tif(d[v]>d[u]+z){\n\t\t\t\td[v]=d[u]+z;\n\t\t\t\tq1.push(make_pair(-d[v],v));\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tn=read();m=read(); \n\tfor(int i=1;i<=m;i++){\n\t\tx[i]=read(),y[i]=read(),v1[i]=read(),v2[i]=read();\n\t\tadd(y[i],x[i],v1[i]);\n\t}\n\tdijk(n);for(int i=1;i<=n;i++)d1[i]=d[i];\n\tmemset(head,0,sizeof(head));tot=0;\n\tfor(int i=1;i<=m;i++)\n\t\tadd(y[i],x[i],v2[i]);\n\tdijk(n);for(int i=1;i<=n;i++)d2[i]=d[i];\n\tmemset(head,0,sizeof(head));tot=0;\n\tfor(int i=1;i<=m;i++){\n\t\tint sum=0;\n\t\tif(d1[x[i]]!=d1[y[i]]+v1[i])sum++;\n\t\tif(d2[x[i]]!=d2[y[i]]+v2[i])sum++;\n\t\tadd(x[i],y[i],sum);\n\t} \n\tdijk(1);\n\tprintf(\"%lld\\n\",d[n]); \n\treturn 0;\n}\n\n```\n",
        "postTime": 1556438347,
        "uid": 88733,
        "name": "Zekrom",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3720 \u3010[AHOI2017\u521d\u4e2d\u7ec4]guide\u3011"
    },
    {
        "content": "\u770b\u4e0a\u53bb\u6b64\u9898\u5f88\u68d8\u624b\uff0c\u4f46\u662f\u53ea\u8981\u6162\u6162\u63a8\u7406\u4fbf\u53ef\u4ee5\u201c\u987a\u5229\u201d\u89e3\u9898\n\n**1.**\u4e00\u770b\u6b64\u9898\u5c31\u77e5\u9053\u8be5\u7528\u6700\u77ed\u8def\u5f84\uff0c\u7531\u4e8e\u6570\u636e\u5f88\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u7528spfa\u6765\u89e3\uff0c\u5e76\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u50a8\u3002\n\n**2.**\u56e0\u4e3a\u7b54\u6848\u8981\u6c42\u7684\u662f\u6700\u5c11\u62b1\u6028\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u77e5\u9053\u4e24\u4e2aGPS\u5206\u522b\u6307\u7684\u8def\u662f\u4ec0\u4e48\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u8981\u627e\u5230\u8fd9\u4e24\u4e2aGPS\u6240\u6307\u7684\u201c\u6700\u77ed\u8def\u5f84\u201d\u3002\n\n**3.**\u6211\u4eec\u6c42\u51fa\u4e24\u4e2aGPS\u6240\u6307\u7684\u201c\u6700\u77ed\u8def\u5f84\u201d\u540e\uff0c\u9700\u8981\u91cd\u65b0\u6784\u56fe\uff0c\u4ee5\u4ece\u8fd9\u4e2a\u70b9\u5230\u53e6\u4e00\u4e2a\u70b9\u7684\u62b1\u6028\u503c\uff0c\u518d\u6c42\u4e00\u6b21\u6700\u77ed\u8def\u3002\u81f3\u4e8e\u5224\u65ad\u6211\u4eec\u53ea\u9700\u7528\u6c42\u51fa\u7684\u6700\u77ed\u8def\u5f84\u6765\u5224\u65ad\u662f\u5426\u8d70\u4e86\u6b64\u8def\u5165x\u4e3a\u6b64\u70b9\uff0cy\u4e3a\u6b64\u8fb9\u5230\u8fbe\u7684\u70b9\uff0cz\u4e3a\u8fd9\u6761\u8fb9\u7684\u6743\u503c\u3002\u5219\u5982\u679c\n```cpp\n f[y]!=f[x]+z\n```\n\u5c31\u8bf4\u660e\u6b64\u8fb9\u6ca1\u6709\u7ecf\u8fc7\uff0cGPS\u4f1a\u62b1\u6028\u3002\n\n**4.**spfa\u539f\u6765\u7684dis[i]\u8868\u793a\u4ece\u539f\u70b9\u5230i\u8fd9\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\u6b64\u9898\u7684\u539f\u70b9\u660e\u663e\u4e3a1\u3002\u4f46\u662f\u7531\u4e8e\u4e3a\u4e86\u7edf\u8ba1\u5230\u70b9n\u662f\u5426\u7ecf\u8fc7\u4e86\u67d0\u4fbf\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5012\u7740\u6c42\uff0c\u540c\u6837\u5b58\u50a8\u65f6\u4e5f\u8981\u5012\u7740\n\n\n\u6700\u540e\u4fbf\u662f\u8c03\u8bd5\u4ee3\u7801\u4e86\u3002\u6211\u4ee3\u7801\u7531\u4e8e\u6211\u7684\u60f3\u6cd5\u53d8\u6765\u53d8\u53bb\uff0c\u5199\u5f97\u8d3c\u4e11\uff0c\u6709\u70b9\u5570\u55e6\u3002\u9700\u8981\u6539\u8fdb\u3002\n\n\u4e0b\u9762\u662f\u7528\u65f689ms\u7684\u4ee3\u7801\u3002\u5404\u4e2a\u91cd\u8981\u7684\u5df2\u5728\u4ee3\u7801\u4e2d\u6807\u51fa\u5bf9\u5e94\u5e8f\u53f7\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n    int x=0,ff=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')ff=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    return x*ff;\n}\nint h[100010],me,f[100010],n,m,fl[100010];\nbool b[100010];\n//1\nstruct qxx{\n    int to,next,xa,ya;\n}a[500005];\nvoid add(int x,int y,int zs,int zz){\n    a[++me].next=h[x];\n    a[me].to=y;\n    a[me].xa=zs;a[me].ya=zz;\n    h[x]=me;\n}\n//1\nvoid spfa(int x){\n    int c,e,y;\n    if(x)for(int i=0;i<=n;i++)f[i]=1<<30,b[i]=0;\n    else for(int i=0;i<=n;i++)fl[i]=1<<30,b[i]=0;\n    if(x)f[n]=0,b[n]=1;\n    else fl[n]=0,b[n]=1;\n    queue<int> p;\n    p.push(n);\n    while(!p.empty()){\n        c=p.front();p.pop();\n        e=h[c];b[c]=0;\n        while(a[e].next){\n            y=(x)?a[e].xa:a[e].ya;\n            if(x)if(f[a[e].to]>f[c]+y){\n                f[a[e].to]=f[c]+y;\n                if(!b[a[e].to]){\n                    b[a[e].to]=1;\n                    p.push(a[e].to);\n                }\n            }\n            if(!x)if(fl[a[e].to]>fl[c]+y){\n                fl[a[e].to]=fl[c]+y;\n                if(!b[a[e].to]){\n                    b[a[e].to]=1;\n                    p.push(a[e].to);\n                }\n            }\n            e=a[e].next;\n        }\n        y=(x)?a[e].xa:a[e].ya;\n        if(x)if(f[a[e].to]>f[c]+y){\n            f[a[e].to]=f[c]+y;\n            if(!b[a[e].to]){\n                b[a[e].to]=1;\n                p.push(a[e].to);\n            }\n        }\n        if(!x) if(fl[a[e].to]>fl[c]+y){\n                fl[a[e].to]=fl[c]+y;\n                if(!b[a[e].to]){\n                    b[a[e].to]=1;\n                    p.push(a[e].to);\n                }\n            }\n    }\n}\nint main(){\n    int x,y,zs,zz;\n    n=read();m=read();\n    for(int i=1;i<=m;i++){\n    \tx=read();y=read();zs=read();zz=read();\n        //4\n    \tadd(y,x,zs,zz);\n    }\n    //2\n    spfa(1);\n    spfa(0);\n    //3\n    for(int i=1;i<=n;i++){\n        int e=h[i];\n        for(;e;e=a[e].next){\n            x=a[e].xa;y=a[e].ya;\n            int t=0;\n            if(f[a[e].to]!=f[i]+x)t++;\n            if(fl[a[e].to]!=fl[i]+y)t++;\n            a[e].xa=t;\n        }\n    }\n    spfa(1);\n    printf(\"%d\\n\",f[1]);\n    return 0;\n}\n```",
        "postTime": 1548682229,
        "uid": 110574,
        "name": "Eismcs",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3720 \u3010[AHOI2017\u521d\u4e2d\u7ec4]guide\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e4d\u4e00\u770b\u5f88\u96be\uff0c\u6211\u4eec\u6765\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\n\n\n\u672c\u9898\u8bf4\u7684\u662fJohn\u6709\u4e24\u4e2aGPS\u7cfb\u7edf\uff08\u9898\u76ee\u597d\u50cf\u6539\u4e86\uff0c\u4e0d\u8fc7\u610f\u4e49\u4e00\u6837\uff09\uff0c\u7ed9\u4e86n\u4e2a\u70b9\u548cm\u6761\u8fb9\u3002\u552f\u4e00\u72ec\u7279\u7684\u662f\uff0c\u4e24\u4e2aGPS\u6240\u7ed9\u7684\u8def\u9014\u65f6\u95f4\u4e0d\u540c\uff0c\u6240\u4ee5\u4ece\u70b91\u5230\u70b9n\u7684\u6700\u77ed\u8def\u5f84\u4e0d\u540c\u3002\u5982\u679cJohn\u4ece\u5f53\u70b9\u8d70\u7684\u8def\u7ebf\u4e0e\u4e24\u4e2aGPS\u7ed9\u7684\u4ece\u5f53\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4e0d\u540c\uff0c\u5219GPS\u4f1a\u62b1\u6028\uff08\u4e00\u4e2a\u4e0d\u540c\u62b1\u6028\u4e00\u4e0b\uff0c\u4e24\u4e2a\u7684\u8bdd\u4e24\u4e0b\uff09\uff0c\u6c42\u6700\u5c11\u62b1\u6028\u603b\u6570\u3002\n\n\n\u600e\u4e48\u5224\u65ad\u8d70\u8fd9\u6761\u8fb9\u4f1a\u62b1\u6028\u51e0\u6b21\u5462\uff1f\n\n\n\u6211\u4eec\u65e0\u8bba\u600e\u4e48\u8d70\uff0c\u90fd\u662f\u8981\u4ece\u6b64\u70b9\u6cbf\u6700\u77ed\u8def\u5f84\u8d70\u5230\u7ec8\u70b9\uff0c\u4e0d\u59a8\u6211\u4eec\u90fd\u7528\u6700\u77ed\u8def\u5f84\u7b97\u6cd5\u6c42\u51fa\u4e24\u4e2aGPS\u4ece\u70b91->n-1\u5230\u70b9n\u7684\u6700\u77ed\u8def\u5f84\uff08\u5c31\u662f\u4ee5\u70b9n\u4e3a\u6e90\u70b9\uff0c\u6c42\u5230\u6240\u6709\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\u53cd\u8fc7\u6765\u5c31\u662f\u4ece\u70b91->n-1\u5230\u70b9n\u7684\u6700\u77ed\u8def\u5f84\u4e86\u3002\u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u53cd\u7740\u6c42\u7684\u65f6\u5019\uff0c\u8fb9\u7684\u65b9\u5411\u8981\u53cd\u8fc7\u6765\uff0c\u5426\u5219\u6c42\u5f97\u7684\u7ed3\u679c\u662f\u9519\u8bef\u7684\uff01\uff01\uff09\n\n\n\u7531\u4e8e\u6781\u9650\u60c5\u51b5\u662f100000\u4e2a\u70b9\uff0c\u53ea\u80fd\u9009\u62e9\u6548\u7387\u9ad8\u7684\u7b97\u6cd5\uff0c\u4f8b\u5982SPFA\uff0c\u6216\u8005\u6211\u5199\u7684dijkstra\u5806\u4f18\u5316\u7248\u3002\n\n\n\u6c42\u5f97\u4e24\u4e2aGPS\u4ece\u524dn-1\u4e2a\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u5f84\u540e\uff0c\u5224\u65ad\u8d70\u8fd9\u6761\u8fb9\uff0c\u662f\u5426\u62b1\u6028\uff0c\u65b9\u6cd5\u4e0d\u96be\uff1a\u679a\u4e3e\u6bcf\u6761\u8fb9\uff0c\u6cbf\u7740\u8fd9\u6761\u8fb9\u8d70\u65f6\uff0c\u82e5\u539f\u6765\u8be5\u70b9\u7684\u6700\u77ed\u8def\u5f84\u503c - \u8be5\u8fb9\u7684\u6743\u503c\uff08\u5373\u65f6\u95f4\uff09=\u4e0b\u4e00\u70b9\u7684\u6700\u77ed\u8def\u5f84\u65f6\uff0c\u8bf4\u660e\u8be5\u8fb9\u662f\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u4e00\u6761\u8fb9\uff0c\u4e0d\u4f1a\u62b1\u6028\uff1b\u82e5\u4e0d\u7b49\u4e8e\uff0c\u5219\u8bf4\u660e\u8be5\u8fb9\u4e0d\u662f\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u8fb9\uff0c\u8be5\u8fb9\u62b1\u6028\u6b21\u6570+1\u3002\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\u6bcf\u6761\u8fb9\u62b1\u6028\u7684\u6b21\u6570\u3002\n\n\n\u6700\u540e\u518d\u4ee5\u62b1\u6028\u6b21\u6570\u4e3a\u8fb9\u7684\u6743\u503c\uff0c\u6c42\u4e00\u4e0b\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\u5373\u4e3a\u6700\u5c11\u62b1\u6028\u6570\u3002\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nlogn)\uff1b\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(m)\uff1b//\u5806\u53ca\u6570\u7ec4\u7684\u5f00\u652f\u4e3am\n\n\n\u8bdd\u8bf4\u6570\u636e\u8303\u56f4\u597d\u50cf\u548c\u6bd4\u8d5b\u7684\u4e0d\u4e00\u6837\u554a\u3002\u3002\u3002\u6211\u7528\u7684\u662f\u6bd4\u8d5b\u65f6\u7684\u8303\u56f4\u3002\n\n\n\u4e0b\u9762\u662f\u7a0b\u5e8f\uff08\u6211\u52a0\u4e86\u9632\u6284\u88ad\u5904\u7406\uff0c\u5e0c\u671b\u5927\u5bb6\u8ba4\u771f\u5bf9\u5f85\u8fd9\u9053\u9898\uff0c\u4e0d\u8981\u6295\u673a\u53d6\u5de7\uff09\n\n        \n    \n    \n    \n\n\n\n\n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n    \n\n```cpp\ntype\n    arr=array[0..100000] of record .//\u5b9a\u4e49\u57fa\u7c7b\u578b\n        x,y.long:longint; .//\u8d77\u70b9\u3001\u7ec8\u70b9\u3001\u65f6\u95f4\n    end;\nvar\n    g:array[1..3,1..50000] of longint; .//\n    e:array[1..3] of arr;\n    s,t:array[0..50000] of longint;\n    n,m.i,x.y,w1.w2:longint;\n    heap,p1.p2:array[1..50000] of longint;\nprocedure sort(l,r:longint;var a:arr);\nvar    i.j.mid:longint;\nbegin\n    i:=l; j:=r;\n    mid:=a[(l+r) div 2].x;\n    repeat\n        while a[i].x<mid do inc(i);\n        while a[j].x>mid do dec(j);\n        if i<=j then\n            begin\n                a[0]:=a[i];a[i]:=a[j];a[j]:=a[0];\n                inc(i); dec(j);\n            end;\n    until i>j;\n    if l<j then sort(l,j,a);\n    if i<r then sort(i,r,a);\nend;\nprocedure swap(x,y:longint);\nvar t:longint;\nbegin\n    t:=heap[x]; heap[x]:=heap[y]; heap[y]:=t;\n    p2[p1[x]]:=y;p2[p1[y]]:=x;\n    t:=p1[x]; p1[x]:=p1[y]; p1[y]:=t;\nend;\nprocedure delete(x:longint);\nvar    i:longint;\nbegin\n    swap(1,x);\n    dec(x);\n    i:=2;\n    while i<=x do\n    begin\n        if (i<x) and (heap[i]>heap[i+1]) then inc(i);\n        if heap[i]<heap[i shr 1] then swap(i,i shr 1) else exit;        \n        i:=i shl 1;\n    end;\nend;\nprocedure move(x:longint);\nbegin\n    while x<>1 do\n    begin\n        if heap[x]<heap[x shr 1] then swap(x,x shr 1) else exit;\n        x:=x shr 1; .//\u8fd9\u91cc\u7528\u7684\u662f\u4f4d\u79fb\uff0c\u901f\u5ea6\u5feb\uff0c\u4f46\u4e60\u60ef\u8ba9\u6211\u5728\u8d5b\u573a\u4e0a\u6253\u6210\u4e862\uff0c\u7ed3\u679c\u8fd8\u597d\uff0c\u5dee\u70b9\u72060\u3002\n    end;\nend;\nprocedure dijkstar(xx:longint); .//dijkstra\u5806\u4f18\u5316\u7b97\u6cd5\u6838\u5fc3\u3002\u4e0d\u61c2\u7684\u4e0a\u7f51\u5ea6\u4e0b\uff0c\u8fd9\u91cc\u4e0d\u89e3\u91ca\u4e86\nvar\n        i.j.k:longint;\nbegin\n    fillchar(heap,sizeof(heap),$7f);\n    heap[1]:=0;\n    for i:=n downto 1 do\n        begin\n            p1[n-i+1]:=i;\n            p2[n-i+1]:=i;\n        end;\n    for i:=n downto 2 do\n    begin\n        delete(i);\n        for j:=s[p1[i]] to t[p1[i]] do\n            if heap[i]+e[xx,j].long<heap[p2[e[xx,j].y]] then\n            begin\n                heap[p2[e[xx,j].y]]:=heap[i]+e[xx,j].long;\n                move(p2[e[xx,j].y]);\n            end;\n        g[xx,p1[1]]:=heap[1];\n    end;\nend;\nbegin\n    readln(n,m);\n    for i:=1 to m do\n        begin\n            readln(x,y,w1,w2);\n            e[1,i].x:=y;e[1,i].y:=x;e[1,i].long:=w1; .//\u4e24\u53f0GPS\u8fb9\u7684\u53cd\u5904\u7406\n            e[2,i].x:=y;e[2,i].y:=x;e[2,i].long:=w2;\n        end;\n    sort(1,m,e[1]); .//\u4ee5\u8d77\u70b9\u4e3a\u5173\u952e\u5b57\uff0c\u6392\u5e8f\n    sort(1,m,e[2]);\n    fillchar(t,sizeof(t),-1); .//\u5c06\u6570\u7ec4\u521d\u59cb\u5316\u4e3a-1\n    e[1,0].x:=0; .// s[i],t[i]\u8bb0\u5f55\u4ee5\u70b9i\u4e3a\u8d77\u70b9\u7684\u8fb9\u5728\u6570\u7ec4\u4e2d\u7684\u533a\u95f4\n    for i:=1 to m do\n        if e[1,i].x<>e[1,i-1].x then\n            begin\n                s[e[1,i].x]:=i;\n                t[e[1,i-1].x]:=i-1;\n            end;\n    t[e[1,m].x]:=m;\n    dijkstar(1); .//\u4e24\u8d9f\u6700\u77ed\u8def\u5f84\n    dijkstar(2);\n    for i:=1 to m do\n    begin\n        e[3,i].x:=e[1,i].x; // \u590d\u5236\u8fb9\u7684\u4fe1\u606f\n        e[3,i].y:=e[1,i].y;\n        if g[1,e[1,i].y]-e[1,i].long<>g[1,e[1,i].x] then inc(e[3,i].long); //\u5224\u65ad\u662f\u5426\u4f1a\u62b1\u6028\n        if g[2,e[2,i].y]-e[2,i].long<>g[2,e[2,i].x] then inc(e[3,i].long);\n    end;\n    dijkstar(3); // \u6700\u540e\u4e00\u8d9f\u6700\u77ed\u8def\u5f84\n    writeln(g[3,1]); // \u8f93\u51fa\nend.\n\u518d\u6b21\u7533\u660e\uff0c\u8bf7\u5927\u5bb6\u4e0d\u8981\u6284\u88ad\uff0c\u540e\u679c\u81ea\u8d1f\n```",
        "postTime": 1503199153,
        "uid": 7706,
        "name": "AC_Evil",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3720 \u3010[AHOI2017\u521d\u4e2d\u7ec4]guide\u3011"
    },
    {
        "content": "~~\u4e94\u5206\u949f\u51faidea\uff0c\u6539\u4e86\u4e09\u904d\u4ee3\u7801\u539f\u6765\u662f\u56e0\u4e3a\u8bfb\u9519\u9898\u4e86\uff08~~\n\n[\u5f31\u5316\u7248](https://www.luogu.com.cn/problem/P3106)\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f](https://www.cnblogs.com/Silymtics/p/14824835.html)\n\n## Description\n\n> \u7b80\u5316\u9898\u610f\uff1a\u7ed9\u4f60\u4e00\u5f20\u6709\u5411\u56fe\uff0c\u6709\u4e24\u4e2a\u8fb9\u6743\u3002\u5bf9\u4e8e\u6bcf\u6761\u8fb9 $(u,v)$\uff0c\u901a\u8fc7\u5b83\u7684\u4ee3\u4ef7\uff08\u4e5f\u5c31\u662f\u62b1\u6028\uff09\u5c31\u662f\u4e24\u79cd\u8fb9\u6743\u4e0d\u5728 $u$ \u5230 $n$ \u7684\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\u6743\u7684\u6570\u91cf\n\n## Solution\n\n\u5148\u6765\u8bf4\u4e00\u4e0b\u5927\u4f53\u601d\u8def\uff1a\n\n\u53d1\u73b0\u4e24\u79cd GPS \u773c\u4e2d\u7684\u8fb9\u6743\u4e0d\u4e00\u6837\u4e14\u4e0d\u4f1a\u76f8\u4e92\u5f71\u54cd\uff0c\u628a\u4e24\u4e2a GPS \u5206\u5f00\u8003\u8651\u5c31\u597d\u4e86\n\n\u56e0\u4e3a\u8981\u6c42\u7684\u662f $u$ \u5230 $n$ \u7684\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u8003\u8651\u5efa\u53cd\u56fe\u6765\u6c42\u3002\n\u89c4\u5b9a\u4e0b\u9762\u8ba8\u8bba\u662f\u5bf9\u5e94\u7684\u8fb9\u662f\u7ed9\u5b9a\u7684\u53cd\u8fb9\u3002\n\n\u6211\u4eec\u628a\u6bcf\u6761\u8fb9\u90fd\u5e26\u4e0a\u4e09\u4e2a\u6743\u503c\uff0c\u5206\u522b\u8868\u793a\u4e24\u4e2a GPS \u8ba4\u4e3a\u7684\u901a\u8fc7\u65f6\u95f4\u548c\u901a\u8fc7\u8fd9\u6761\u8fb9\u7684\u62b1\u6028\u6570\u3002\n\n\u663e\u7136\u62b1\u6028\u6570\u521d\u59cb\u4e3a $2$\uff0c\u8fd9\u6761\u8fb9\u7b26\u5408\u51e0\u4e2a GPS \u7684\u8981\u6c42\u5c31\u5728\u51cf\u53bb\u51e0\u3002\n\n\u5df2\u7ecf\u5f88\u660e\u786e\u4e86\uff0c\u5148\u5bf9\u4e24\u4e2a GPS \u8dd1\u6700\u77ed\u8def\uff0c\u51cf\u53bb\u5bf9\u62b1\u6028\u6570\u7684\u8d21\u732e\u3002\n\n\u7136\u540e\u5bf9\u62b1\u6028\u6570\u8dd1\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n\u8fd9\u91cc\u6211\u7528\u7684\u662f\u5df2\u7ecf\u6b7b\u6389\u7684 $\\text{SPFA}$\uff0c\u9898\u76ee\u6570\u636e\u5e94\u8be5\u662f\u7528\u811a\u9020\u7684\uff0c\u5e76\u6ca1\u6709\u5361 $\\text{SPFA}$\uff0c\u6240\u4ee5\u8dd1\u7684\u98de\u5feb\uff0c\u5438\u53e3\u6c27\u662f\u76ee\u524d\u7684\u6700\u4f18\u89e3\u3002\n\n---------------\n\n\u5982\u4f55\u786e\u5b9a\u4e00\u6761\u8fb9$(u,v)$ \u662f\u5426\u5728 $u$ \u5230 $n$ \u7684\u6700\u77ed\u8def\u4e0a\uff1f\n\n\u8bbe $dis_x$ \u8868\u793a $x$ \u5230 $n$ \u7684\u6700\u77ed\u8def\uff0c$e_{u,v}$ \u8868\u793a\u8fb9 $(u,v)$ \u7684\u957f\u5ea6\uff0c\u5982\u679c\u6ee1\u8db3\n\n$$dis_u + e_{u,v} == dis_v$$\n\n\u90a3\u4e48\u8fd9\u6761\u8fb9\u5c31\u5728 $v$ \u5230 $n$ \u7684\u6700\u77ed\u8def\u4e0a\uff0c\u5bf9\u5e94\u7684\u62b1\u6028\u6570\u51cf\u4e00\u3002\n\n\u4e0b\u9762\u770b\u4ee3\u7801\u5427\n\n## Code\n\n\u628a\u4e09\u4e2a\u91cf\u653e\u8fdb\u4e00\u4e2a\u56fe\u91cc\uff0c\u5199\u8d77\u6765\u7801\u91cf\u66f4\u77ed\u3002\n\n```cpp\n/*\nWork by: Suzt_ilymics\nProblem: \u4e0d\u77e5\u540d\u5c51\u9898\nKnowledge: \u5783\u573e\u7b97\u6cd5\nTime: O(\u80fd\u8fc7)\n*/\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#define int long long\n#define LL long long\n#define orz cout<<\"lkp AK IOI!\"<<endl\n\nusing namespace std;\nconst int MAXN = 1e5+5;\nconst int MAXM = 5e5+5;\nconst int INF = 1e9+7;\nconst int mod = 1e9+7;\n\nstruct edge {\n    int from, to, t[3], nxt;\n}e[MAXN << 1];\nint head[MAXN], num_edge = 1;\n\nint n, m;\nint dis[MAXN];\nbool vis[MAXN];\n\nint read(){\n    int s = 0, f = 0;\n    char ch = getchar();\n    while(!isdigit(ch))  f |= (ch == '-'), ch = getchar();\n    while(isdigit(ch)) s = (s << 1) + (s << 3) + ch - '0' , ch = getchar();\n    return f ? -s : s;\n}\n\nvoid add_edge(int from, int to, int t1, int t2) { \n    e[++num_edge].from = from, e[num_edge].to = to;\n    e[num_edge].t[0] = 2, e[num_edge].t[1] = t1, e[num_edge].t[2] = t2;\n    e[num_edge].nxt = head[from]; \n    head[from] = num_edge; \n}\n\nvoid SPFA(int type) {\n    queue<int> q;\n    memset(vis, false, sizeof vis);\n    memset(dis, 0x3f, sizeof dis);\n    q.push(n), dis[n] = 0, vis[n] = true;\n    while(!q.empty()) {\n        int u = q.front(); q.pop();\n        vis[u] = false;\n        for(int i = head[u]; i; i = e[i].nxt) {\n            int v = e[i].to;\n            if(dis[v] > dis[u] + e[i].t[type]) {\n                dis[v] = dis[u] + e[i].t[type];\n                if(!vis[v]) q.push(v), vis[v] = true;\n            }\n        }\n    }\n}\n\nsigned main()\n{\n    n = read(), m = read();\n    for(int i = 1, u, v, t1, t2; i <= m; ++i) {\n        u = read(), v = read(), t1 = read(), t2 = read();\n        add_edge(v, u, t1, t2);\n    }\n    for(int k = 1; k <= 2; ++k) {\n        SPFA(k); // \u5206\u522b\u5bf9\u4e24\u4e2a GPS \u8dd1\u6700\u77ed\u8def\n        for(int i = 2; i <= num_edge; ++i) { // \u51cf\u53bb\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\u7684\u62b1\u6028\n            int u = e[i].from, v = e[i].to;\n            if(dis[v] == dis[u] + e[i].t[k]) e[i].t[0]--;\n        }\n    }\n//    for(int i = 2; i <= num_edge; ++i) cout<<e[i].from<<\" \"<<e[i].to<<\" \"<<e[i].t[0]<<\"\\n\";\n    SPFA(0);\n    printf(\"%lld\", dis[1]);\n    return 0;\n}\n```",
        "postTime": 1622259227,
        "uid": 230580,
        "name": "Suzt_ilymtics",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3720 [AHOI2017\u521d\u4e2d\u7ec4]guide"
    },
    {
        "content": "## \u91cd\u70b9+\u5751\u70b9\uff1a\u5fc5\u987b\u53cd\u5411\u5efa\u8fb9\uff0c\u4ece\u70b9n\u5f00\u59cb\u8dd1\u6700\u77ed\u8def\n\n\u6ce8\u610f\u8bfb\u9898\uff1a**\u6bcf\u6b21\u5230\u8fbe\u4e00\u4e2a\u8282\u70b9\uff0cGPS\u90fd\u662f\u63a8\u8350\u4f60\u8d70\u4ece\u8fd9\u4e00\u4e2a\u8282\u70b9\u5230\u519c\u573a\u7684\u6700\u77ed\u8def\u5f84**\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u5fc5\u987b\u4ece\u7ec8\u70b9\u5f00\u59cb\u8dd1\u6700\u77ed\u8def\u3002\n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u4e24\u5957\u4e0d\u540c\u7684$GPS$\u7cfb\u7edf\uff08\u4ec5\u6743\u503c\u4e0d\u540c\u7684\u4e24\u5f20\u56fe\uff09\uff0c\u6211\u4eec\u9700\u8981\u8dd1\u4e24\u904d\u6700\u77ed\u8def\uff0c\u5c06\u8fd9\u4e9b\u6700\u77ed\u8def\u6240\u7ecf\u8fc7\u7684\u8fb9\u6253\u6807\u8bb0\u3002\n\n\u7136\u540e\u6211\u4eec\u7528\u8fd9\u4e24\u5957\u7cfb\u7edf\u7684\u6700\u77ed\u8def\u91cd\u65b0\u5efa\u56fe\uff0c\u6743\u503c\u4e3a\u8d70\u8fd9\u6761\u8def\u7684\u62b1\u6028\u6570\uff0c\u4ece\u8282\u70b9$n$\u5f00\u59cb\u518d\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n \u5bf9\u4e8e\u8fd9\u6837\u5e9e\u5927\u7684\u65e0\u8d1f\u6743\u7a20\u5bc6\u56fe\uff0c**\u5f3a\u70c8\u63a8\u8350\u4f7f\u7528\u5806\u4f18\u5316\u7248\u7684$Dijkstra$**\u3002\n \n ## Code\uff08Pascal\uff09\n \n ```c\n program Luogu_P3720;\nvar a,b,cost1,cost2,next,f:array[0..1000010] of qword;\n    vis:array[0..100010] of boolean;\n    dis,head,h,p,from:array[0..100010] of qword;\n    n,m,s,x,y,z,zz,cnt,len:qword; i:longint;\n  procedure add(x,y,z,zz:qword);\n  begin\n    inc(cnt); a[cnt]:=x; b[cnt]:=y;\n    cost1[cnt]:=z; cost2[cnt]:=zz;\n    next[cnt]:=head[x]; head[x]:=cnt;\n  end;\n  procedure push(x,y:qword);  //\u5806\u64cd\u4f5c\n  var t:qword; i:longint;\n  begin\n    inc(len); h[len]:=x; p[len]:=y;\n    i:=len;\n    while (i>1)and(h[i]<h[i>>1]) do\n    begin\n      t:=h[i]; h[i]:=h[i>>1]; h[i>>1]:=t;\n      t:=p[i]; p[i]:=p[i>>1]; p[i>>1]:=t;\n      i:=i>>1;\n    end;\n  end;\n  procedure pop;\n  var t,x:qword; i:longint;\n  begin\n    h[1]:=h[len]; p[1]:=p[len];\n    dec(len);\n    i:=1;\n    while i<<1<=len do\n    begin\n      if (i<<1+1>len)or(h[i<<1]<h[i<<1+1]) then x:=i<<1 else x:=i<<1+1;\n      if h[i]>h[x] then\n      begin\n        t:=h[i]; h[i]:=h[x]; h[x]:=t;\n        t:=p[i]; p[i]:=p[x]; p[x]:=t;\n        i:=x;\n      end\n      else break;\n    end;\n  end;\n  procedure dijkstra(s,num:longint);\n  var u,d,cost:qword; i:longint;\n  begin\n    for i:=1 to n do dis[i]:=99999999999999;\n    dis[s]:=0;\n    push(0,s);\n    fillchar(vis,sizeof(vis),false);\n    while len>0 do\n    begin\n      d:=h[1]; u:=p[1];\n      pop;\n      if vis[u] then continue;\n      vis[u]:=true;\n      dec(f[from[u]]);  //\u662f\u6700\u77ed\u8def\u7684\u4e00\u90e8\u5206\uff0c\u62b1\u6028\u503c--\n      i:=head[u];\n      while i<>0 do\n      begin\n        if num=1 then cost:=cost1[i]\n        else if num=2 then cost:=cost2[i]\n        else cost:=f[i];\n        if d+cost<dis[b[i]] then\n        begin\n          dis[b[i]]:=d+cost; push(dis[b[i]],b[i]);\n          from[b[i]]:=i;  //\u8bb0\u5f55\u6765\u65f6\u7684\u8def\u5f84\n        end;\n        i:=next[i];\n      end;\n    end;\n  end;\nbegin\n  readln(n,m);\n  for i:=1 to m do\n  begin\n    readln(x,y,z,zz);\n    add(y,x,z,zz);  //\u6ce8\u610f\u53cd\u5411\u8fde\u8fb9\uff01\n  end;\n  for i:=1 to cnt do f[i]:=2;  //\u62b1\u6028\u503c\u521d\u59cb\u4e3a2\n  dijkstra(n,1);\n  dijkstra(n,2);\n  dijkstra(n,3);\n  writeln(dis[1]);\nend.\n ```",
        "postTime": 1573046569,
        "uid": 82593,
        "name": "Chavapa",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3720 \u3010[AHOI2017\u521d\u4e2d\u7ec4]guide\u3011"
    },
    {
        "content": "**\u8fd9\u9898\u8fd0\u7528\u4e86\u91cd\u65b0\u6784\u56fe\uff0c\u9700\u4e09\u6b21\u6700\u77ed\u8def\uff0c\u524d\u4e24\u6b21\u6c42\u51fa\u5355\u7ec8\u70b9\u6700\u77ed\u8def\uff0c\u4e3a\u4ec0\u4e48\u8981\u5355\u7ec8\u70b9\uff0c\u4e0d\u662f\u5355\u6e90\u70b9\u5462\uff1f\u89c1\u9898 \u201c\u4e0d\u662f\u4ece\u8def\u53e3X\u5230\u519c\u573a\u7684\u6700\u77ed\u8def\u5f84\u201d\uff0c\u6240\u4ee5\u662f\u5355\u7ec8\u70b9\u3002** \n\n\u91cd\u70b9\u6765\u4e86\uff0c\u6c42\u5b8c\u4e24\u4e2a\u6700\u77ed\u8def\u4e4b\u540e\uff0c\u5982\u4f55\u91cd\u65b0\u6784\u56fe\uff1f\n \n### \u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u679a\u4e3e\u6bcf\u6761\u8fb9\uff0c\u8fd0\u7528\u201c\u4e09\u89d2\u4e0d\u7b49\u5f0f\u201ddis[v]==dis[u]+w(u,v),u-v\u5c31\u662f\u5c31\u662f\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u4e00\u6761\u8fb9\u3002\n \n\u8fd9\u6837\u5c31\u53ef\u4ee5\u91cd\u65b0\u9020\u8fb9\u6743\u4e86\uff0c\u5728\u6c42\u5355\u6e90\u70b9\u6700\u77ed\u8def\uff0c\u7528\u65b0\u8fb9\u6743\u5373\u53ef\u3002\n\n\u6211\u7528\u7684\u662fdijkstra\uff0c\u901f\u5ea6\u8fd8\u884c\u3002\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<queue>\n#define r register int\nusing namespace std;\nconst int M=100005;\ninline void read(int &a){\n    a=0;char c=getchar();\n    while(c<'0'||c>'9')c=getchar();\n    while(c>='0'&&c<='9')a=(a<<1)+(a<<3)+c-'0',c=getchar();\n}\nstruct N{\n    int x;\n    long long value;\n    bool operator <(const N &a)const{\n        return value>a.value;\n    }\n};\npriority_queue<N>q;\nint vis[M],aj[M],nx[M],h[M],va[M],top,n,m,vb[M],vc[M];\n//va:gps1\u6743\u503c\n//vb:gps2\u6743\u503c\n//vc:\u91cd\u6784\u56fe\u6743\u503c\n//q:\u4f18\u5148\u961f\u5217\nlong long da[M],db[M];\ninline void dijkstra(int s,long long dis[],int val[]){//\u6700\u77ed\u8def\n    for(r i=1;i<=n;++i)dis[i]=9999999999,vis[i]=0;//\u521d\u59cb\u5316\n    dis[s]=0;\n    q.push((N){s,0});\n    while(!q.empty()){\n        N tt=q.top();//\u53d6\u5806\u9876\n        int u=tt.x;\n        long long w=tt.value;\n        q.pop();\n        if(vis[u])continue;\n        vis[u]=1;\n        for(r i=h[u];i;i=nx[i]){\n            int v=aj[i],wv=val[i];\n            if(!vis[v]&&dis[v]>w+wv)dis[v]=w+wv,q.push((N){v,dis[v]});//\u677e\u5f1b\u64cd\u4f5c\n        }\n    }\n    while(!q.empty())q.pop();\n}\ninline void add(int x,int y){//\u52a0\u8fb9\n    aj[++top]=y;nx[top]=h[x];h[x]=top;\n}\nint main(){\n    int x[M],y[M],z,t;\n    scanf(\"%d%d\",&n,&m);\n    for(r i=1;i<=m;++i){\n        read(x[i]);read(y[i]);read(va[i]);read(vb[i]);\n        add(y[i],x[i]);//\u5355\u7ec8\u70b9\u9700\u5c06\u8fb9\u9006\u8f6c\n    }\n    dijkstra(n,da,va);//\u7b2c\u4e00\u904d\n    dijkstra(n,db,vb);//\u7b2c\u4e8c\u904d\n    for(r i=1;i<=n;++i){\n        for(r j=h[i];j;j=nx[j]){\n            int v=x[j];\n            if(da[v]!=da[i]+va[j])vc[j]++;//\u4e0d\u5728gps1\u7684\u6700\u77ed\u8def\u4e0a\n            if(db[v]!=db[i]+vb[j])vc[j]++;//\u4e0d\u5728gps2\u7684\u6700\u77ed\u8def\u4e0a\n        }\n    }\n    top=0;\n    memset(h,0,sizeof(h));\n    for(r i=1;i<=m;++i)add(x[i],y[i]);//\u5355\u6e90\u70b9\u9006\u8f6c\u56de\u6765\n    dijkstra(1,da,vc);\n    cout<<da[n]<<endl;\n    return 0;\n}\n```",
        "postTime": 1540091740,
        "uid": 36616,
        "name": "lili_flyingcutter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3720 \u3010[AHOI2017\u521d\u4e2d\u7ec4]guide\u3011"
    },
    {
        "content": "\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u50a8 + 3\u6b21 SPFA.\n\n\u524d\u4e24\u6b21\u6309\u4e24\u4e2a\u65f6\u95f4\u6743\u503cSPFA.\n\n\u4e0d\u8fc7\u8981\u4ee5N\u4e3a\u6e90\u70b9\u8fdb\u884cSPFA\uff0c\u8fd9\u6837\u53ef\u4ee5\u5224\u65ad\u4e00\u6761\u8fb9\u5728\u4e0d\u5728\u6700\u77ed\u8def\u5f84\u4e0a\u3002\n\n\u5224\u65ad\u65b9\u6cd5\uff1a\u82e5\u4e00\u6761\u8fb9\u7684\u8d77\u70b9\u4e3afrom\uff0c\u7ec8\u70b9\u4e3ato\uff0c\u6743\u503cw\uff0cDis i \u8868\u793a\u7ed3\u70b9i\u5230N\u7684\u8ddd\u79bb\n\nif Dis from + w == Dis to\n\nthen \u8fd9\u6761\u8fb9\u5728\u6700\u77ed\u8def\u5f84\u4e0a.\n\n\u62b1\u6028\u6743\u503c\u4e5f\u5c31\u80fd\u7b97\u51fa\u4e86\uff1a\u8fd9\u6761\u8fb9\u4e0d\u5728A\u4e2a\u5bfc\u822a\u7684\u6700\u77ed\u8def\u5f84\u4e0a\uff0c\u8fd9\u6761\u8fb9\u7684\u62b1\u6028\u6743\u503c\u5c31\u662fA.(A\u53ea\u53ef\u80fd\u662f0\uff0c1\uff0c2)\n\n\u6700\u540e\u904d\u5386\u6240\u6709\u8fb9\uff0c\u628a\u65f6\u95f4\u6743\u503c\u66f4\u6539\u4e3a\u62b1\u6028\u503c\uff0c\u518dSPFA\u5c31\u884c\u4e86.\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\nusing namespace std;\n\nstruct Edge { //\u94fe\u5f0f\u524d\u5411\u661f\n    int from, to, next;\n    int w[2]; //\u4e24\u4e2a\u5bfc\u822a\u7ed9\u51fa\u7684\u6743\u503c\n} edge[500010];\nint head[500010], cnt, N, M;\nint Dis1[100010], Dis2[100010]; //i\u70b9\u5230\u7ec8\u70b9\u5230\u6700\u77ed\u8ddd\u79bb\nbool InQue[100010];\n\ninline void Add(int u, int v, int w1, int w2) {\n    edge[++cnt].w[0] = w1;\n    edge[cnt].w[1] = w2;\n    edge[cnt].from = u; //\u6bd4\u94fe\u5f0f\u524d\u5411\u661f\u591a\u8bb0\u5f55\u4e00\u4e2afrom\n    edge[cnt].to = v;\n    edge[cnt].next = head[u];\n    head[u] = cnt;\n}\n\ninline void Update_W(int index) { //\u628a\u8fb9\u7684\u503c\u6539\u6210\u62b1\u6028\u6b21\u6570\n    int W = 0;\n    if(Dis1[edge[index].from] + edge[index].w[0] != Dis1[edge[index].to]) W ++;\n    if(Dis2[edge[index].from] + edge[index].w[1] != Dis2[edge[index].to]) W ++;\n    edge[index].w[0] = W;\n}\n\nvoid SPFA(int *Dis, int x) { //SPFA\u6a21\u7248\n    int k, to;\n    queue<int> Q;\n    for(int i=0; i<N; i++) Dis[i] = 1e9, InQue[i] = false;\n    Dis[N] = 0;\n    Q.push(N); //N\u4e3a\u6e90\u70b9 \n    InQue[N] = true;\n    while(!Q.empty()) {\n        k = Q.front();\n        Q.pop();\n        InQue[k] = false;\n        for(int i = head[k]; i != 0; i = edge[i].next) {\n            to = edge[i].to;\n            if(Dis[to] > Dis[k] + edge[i].w[x]) {\n                Dis[to] = Dis[k] + edge[i].w[x];\n                if(!InQue[to]) {\n                    Q.push(to);\n                    InQue[to] = true;\n                }\n            }\n        }\n    }\n}\n\nint main() {\n    int u, v, w1, w2;\n    scanf(\"%d%d\", &N, &M);\n    for(int i=1; i<=M; i++) {\n        scanf(\"%d%d%d%d\", &u, &v, &w1, &w2);\n        Add(v, u, w1, w2); //v, u\u5f88\u91cd\u8981(\u53cd\u8fc7\u6765\u7684)\n    }\n    SPFA(Dis1, 0);\n    SPFA(Dis2, 1);\n    for(int i=1; i<=cnt; i++) Update_W(i);\n    SPFA(Dis1, 0); //\u6309\u62b1\u6028\u503c\u627e\u6700\u77ed\u8def\u5f84\n    printf(\"%d\\n\", Dis1[1]);\n    return 0;\n}\n\n```\n156ms.~~\u4e0d\u8fc7\u5e94\u8be5\u8fd8\u80fd\u4f18\u5316\u4e0d\u5c11\u5730\u65b9.~~\n",
        "postTime": 1516448015,
        "uid": 20375,
        "name": "hongzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3720 \u3010[AHOI2017\u521d\u4e2d\u7ec4]guide\u3011"
    },
    {
        "content": "\u603b\u4f53\u601d\u8def\u8ddf\u697c\u4e0b\uff08\u4e0a\uff1f\uff09\u4e00\u6837\u3002\n\n\n\u663e\u7136\uff0c\u5982\u679c\u6211\u4eec\u77e5\u9053\u8d70\u67d0\u6761\u8fb9\u6709\u51e0\u4e2agps\u4f1a\u62b1\u6028\uff0c\u5e76\u628a\u8fd9\u4e2a\u6570\u91cf\u8bbe\u4e3a\u8fb9\u6743\u503c\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u7b80\u5355\u7684\u901a\u8fc7\u4e00\u4e2a\u6700\u77ed\u8def\u7b97\u6cd5\u6c42\u51fa\u4ece1\u5230n\u6700\u5c11\u62b1\u6028\u51e0\u6b21\u4e86\u3002\n\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u5224\u65ad\u8d70\u67d0\u6761\u8fb9\uff0c\u67d0\u4e2agps\u662f\u5426\u4f1a\u62b1\u6028\u3002\u6839\u636e\u9898\u610f\uff0c\u5982\u679c\u8fd9\u6761\u8fb9\u5728\u67d0\u4e2agps\u770b\u6765\uff0c\u662f\u6700\u77ed\u8def\u4e0a\u7684\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48\u5b83\u5c31\u4e0d\u4f1a\u62b1\u6028\u3002\u6240\u4ee5\u6211\u4eec\u8981**\u5224\u65ad\u67d0\u6761\u8fb9\u662f\u5426\u5728\u67d0\u4e2agps\u7684\u56fe\u4e0a\u7684\u6700\u77ed\u8def\u91cc**\u3002\u8fd9\u4e2a\u5224\u65ad\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7**\u628a\u8fb9\u53cd\u8fc7\u6765\uff0c\u4ece\u7ec8\u70b9\u8dd1\u6700\u77ed\u8def**\u5e76\u5904\u7406\u51fa\u6765dis\u6570\u7ec4\u6765\u5224\u65ad\uff0c\u8fd9\u6837\u7684dis\u6570\u7ec4\u91cc\u5b58\u7684\u662f\u6bcf\u4e2a\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u3002\u6b64\u65f6\u5982\u679c\u67d0\u6761\u8fb9\u662f\u4eceu\u5230v\u7684\u6743\u503c\u4e3aw\u7684\u4e00\u6761\u8fb9\uff0c\u5b83\u5728\u6700\u77ed\u8def\u4e0a\u5f53\u4e14\u4ec5\u5f53dis[u]+w == dis[v]\u3002\n\n\n\u81f3\u6b64\uff0c\u6574\u4e2a\u9898\u7684\u505a\u6cd5\u5c31\u660e\u4e86\u4e86\uff1a\n\n\n1.\u53cd\u5411\u5c06\u56fe\u5b58\u4e0b\u6765\u3002\n\n\n2.\u5206\u522b\u7528\u4e24\u4e2agps\u7684\u4fe1\u606f\u4ece\u7ec8\u70b9\u8dd1\u6700\u77ed\u8def\u3002\n\n\n3.\u904d\u5386\u6240\u6709\u8fb9\uff0c\u8bb0\u5f55gps\u4f1a\u62b1\u6028\u51e0\u6b21\u3002\n\n\n4.\u7528\u5904\u7406\u51fa\u6765\u7684\u62b1\u6028\u6b21\u6570\u518d\u8dd1\u4e00\u6b21\u6700\u77ed\u8def\u3002\n\n\n\u8d34\u4e00\u4e0bC++\u4ee3\u7801\uff0c\u4e0d\u8981\u76f4\u63a5\u7c98\u54e6\uff0ca\u4e0d\u4e86\u7684\u3002\n\n\n```cpp\n/*\n###########################################################################\n#                                Code by :                                #\n#  /$$              /$$$$$$                                               #\n# | $$             /$$__  $$                                              #\n# | $$$$$$$       | $$  \\__/                    /$$   /$$       /$$$$$$$$ #\n# | $$__  $$      | $$$$                       |  $$ /$$/      |____ /$$/ #\n# | $$  \\ $$      | $$_/                        \\  $$$$/          /$$$$/  #\n# | $$  | $$      | $$                           >$$  $$         /$$__/   #\n# | $$  | $$      | $$                          /$$/\\  $$       /$$$$$$$$ #\n# |__/  |__/      |__/            /$$$$$$      |__/  \\__/      |________/ #\n#                                |______/                                 #\n###########################################################################\n*/\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<vector>\n#include<cstring>\n#include<cmath>\n#include<set>\nusing namespace std;\n\nconst int maxn = 100005, maxm = 500005;\nint n,m;\nint h[maxn],frm[maxn],to[maxm],nxt[maxm],l1[maxm],l2[maxm],l3[maxn],tot;\nint d1[maxn],d2[maxn],d3[maxn];\n//l1,l2\u662fgps\u7684\u8fb9\u6743\uff0cl3\u662f\u62b1\u6028\u6b21\u6570  d1,d2,d3\u662f\u5206\u522b\u7528l1,l2,l3\u8dd1\u7684\u6700\u77ed\u8defdis\u6570\u7ec4\nbool vis[maxn];\n\ninline void spfa(int len[],int dis[]){\n      memset(dis,0x3f,sizeof(dis));\n    memset(vis,0,sizeof(vis));\n    queue<int> q;\n    q.push(n); vis[n] = 1; dis[n] = 0; //\u4ece\u7ec8\u70b9\u5f00\u59cb\u8dd1\u6700\u77ed\u8def\n    while(!q.empty()){\n        int u = q.front(); q.pop(); vis[u] = 0;\n        for(int i=h[u],v;i;i=nxt[i])\n            if(dis[(v = to[i])] > dis[u] + len[i]){\n                dis[v] = dis[u] + len[i];\n                if(!vis[v]){\n                    q.push(v); vis[v] = 1;\n                }\n            }\n    }\n}\n\ninline void check(int len[],int dis[]){\n    for(int i=1;i<=m;i++)\n        if(dis[frm[i]] + len[i] != dis[to[i]])\n            l3[i]++; //\u8bb0\u5f55\u67d0\u6761\u8fb9gps\u62b1\u6028\u6b21\u6570\n}\n\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++){\n        int u,v;\n        scanf(\"%d%d\",&v,&u); //\u53cd\u5411\u5b58\u8fb9\n        to[++tot] = v; frm[tot] = u; nxt[tot] = h[u]; h[u] = tot;\n        scanf(\"%d%d\",l1+tot,l2+tot);\n    }\n    spfa(l1,d1);\n    spfa(l2,d2);\n    check(l1,d1);\n    check(l2,d2);\n    spfa(l3,d3);\n    printf(\"%d\\n\",d3[1]);\n    return 0;\n}\n\n```\n",
        "postTime": 1508917338,
        "uid": 35231,
        "name": "hf_xz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3720 \u3010[AHOI2017\u521d\u4e2d\u7ec4]guide\u3011"
    },
    {
        "content": "\u4e00\u9053\u8fd8\u4e0d\u9519\u7684\u9898\uff0c\u633a\u8003\u9a8c CE \u4e00\u5927\u4e32\u7684\u8010\u5fc3\u7684\uff08\u4e0d\u662f   \n\u95f2\u8bdd\u5c11\u8bf4\uff0c\u5207\u5165\u6b63\u9898\u2014\u2014  \n\n---\n*PS\uff1a\u7531\u4e8e\u8fd9\u9053\u9898\u5f88\u6076\u5fc3\uff0c\u8981\u53cd\u5411\u5b58\u8fb9\uff0c\u6240\u4ee5\u8981\u8dd1 $n\\sim 1$ \u7684\u6700\u77ed\u8def*  \n\u4e0b\u9762\u6211\u4eec\u79f0\u8fb9\u6743\u96c6\u5408\u662f $p$ \u7684\u56fe\u4e3a\u56fe $p$\uff0c\u8fb9\u6743\u96c6\u5408\u662f $q$ \u7684\u56fe\u6210\u4e3a\u56fe $q$\u3002  \n\u663e\u800c\u6613\u89c1\u7684\u601d\u8def\uff0c\u5148\u5206\u522b\u7b97\u51fa\u6765\u56fe $p$ \u548c $q$ \u4e2d\u4ece $n$ \u51fa\u53d1\u7684\u5355\u6e90\u6700\u77ed\u8def $dis1$ \u548c $dis2$    \n\u7136\u540e\u6211\u4eec\u5c31\u8981\u8fd0\u7528\u5230\u5f88\u591a\u6700\u77ed\u8def\u7b97\u6cd5\u90fd\u8fd0\u7528\u7684\u4e00\u4e2a\u4e09\u89d2\u5f62\u4e0d\u7b49\u5f0f $dis_v = dis_u + w$\uff0c$w$ \u4ee3\u8868\u8fb9\u6743\u3002  \n\u90a3\u4e48\u5982\u679c\u7b97\u51fa\u6765 $dis1_v \\ne dis1_u + w_0$\uff0c\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\u8fd9\u6761\u8fb9\u4e0d\u5728 $p$ \u7684\u6700\u77ed\u8def\u4e0a\uff0c$yyy + 1$\u3002$dis2$ \u4ea6\u7136\u3002\u91cd\u6784\u4e00\u5f20\u56fe\uff0c\u6700\u7ec8\u7b97\u51fa\u6765\u7684\u8fd9\u4e2a $yyy$ \u5c31\u662f\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\uff0c\u4ee3\u8868\u8d70\u8fd9\u6761\u8fb9\u7684\u62a5\u8b66\u6b21\u6570\u3002  \n\u5bf9\u4e8e\u8fd9\u5f20\u65b0\u56fe\uff0c\u6211\u4eec\u53ea\u8981\u8dd1\u4e00\u904d\u4ece $n$ \u5f00\u59cb\u7684\u6700\u77ed\u8def\u5c31\u884c\u5566~  \n\n---\n\u8bf4\u8d77\u6765\u7b80\u5355\uff0c\u4f46\u662f\u505a\u8d77\u6765\u8fd8\u662f\u8981\u8003\u8651\u5f88\u591a\u4e1c\u897f\u7684\u3002  \n\u5f88\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u8fd9\u9053\u9898\u6ca1\u5361 SPFA\uff08\u4e0d\u662f  \n\u8fd9\u91cc\u6211\u7528 ```vector``` \u5b58\u56fe\u7684\uff08\u83dc\u9e21\u672c\u6027\u66b4\u9732  \n\u4e0a\u8ff0\u7684\u7b97\u6cd5\u8981\u8dd1\u4e09\u6b21 dij\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec dij \u4f20\u53c2\u7684\u65f6\u5019\u4f20\u4e00\u4e2a\u6307\u9488\u4ee3\u8868 $dis1/dis2/dis3$\uff0c\u8fd9\u6837\u7684\u8bdd\u80fd\u5269\u5f88\u591a\u4ee3\u7801\u3002  \n\u7136\u540e\u7531\u4e8e\u6211\u662f\u4e2a\u61d2\u764c\u91cd\u75c7\u60a3\u8005\u4e0d\u60f3\u518d\u5f00\u56db\u4e2a\u6570\u7ec4\u5b58\u50a8 $a_i,b_i,p_i,q_i$ \u6240\u4ee5\u6211\u8fb9\u6743\u653e\u4e86\u4e24\u4e2a\u6210\u4e00\u4e2a\u6570\u7ec4 $val_{0/1}$\uff0c$0$ \u4ee3\u8868 $p$\uff0c$1$ \u4ee3\u8868 $q$\u3002  \n\u5728\u8dd1 dij \u7684\u65f6\u5019\u641e\u4e00\u4e2a $k$ \u4ee3\u8868\u662f $val_k$ \u7684\u8fb9\u6743\u3002\u5bf9\u4e8e\u6c42\u62a5\u8b66\u7684\u56fe\u9ed8\u8ba4 $k = 0$\u3002  \n\n---\n\u4ee3\u7801\uff1a  \n```cpp\n#include <iostream>\n#include <vector>\n#include <cstring>\n#include <queue>\n#define MAXN 500000\nusing namespace std;\nint k;\nstruct node {\n    int to, val[2];\n    node(int t, int p, int q) {\n        to = t, val[0] = p, val[1] = q;\n    }\n    bool operator < (const node &other) const {\n\t\treturn val[k] > other.val[k];\n\t}\n};\nvector <node> gra[MAXN + 10], ngr[MAXN + 10];\nbool vis[MAXN + 10];\nint dis1[MAXN + 10], dis2[MAXN + 10], dis3[MAXN + 10];\nvoid Dijkstra(int s, int *dis) {//dij\uff0cdis \u662f\u4e00\u4e2a\u6307\u9488\uff0c\u8fd9\u6837\u4f1a\u65b9\u4fbf\u4e00\u70b9\n    for(int p = 1; p <= MAXN; p++)\n        dis[p] = 0x7f7f7f7f;\n    memset(vis, 0, sizeof(vis));\n\tpriority_queue <node> que;\n\tque.push(node(s, 0, 0));\n\tdis[s] = 0;\n\twhile(!que.empty()) {\n\t\tnode fr = que.top(); que.pop();\n\t\tint u = fr.to;\n\t\tif(vis[u]) continue;\n\t\tvis[u] = 1;\n\t\tfor(int p = 0; p < gra[u].size(); p++) {\n\t\t\tint v = gra[u][p].to;\n\t\t\tif(dis[u] + gra[u][p].val[k] < dis[v]) {\n\t\t\t\tdis[v] = dis[u] + gra[u][p].val[k];\n\t\t\t\tif(!vis[v])\n                    if(k == 0) que.push(node(v, dis[v], 0));\n                    else que.push(node(v, 0, dis[v]));\n\t\t\t}\n\t\t}\n\t}\n}\nint main() {\n    int n, m;\n    cin >> n >> m;\n    for(int p = 1, x, y, P, Q; p <= m; p++) {\n        cin >> y >> x >> P >> Q;\n        gra[x].push_back(node(y, P, Q));//\u5b58\u56fe\n    }\n    k = 0, Dijkstra(n, dis1);\n    k = 1, Dijkstra(n, dis2);\n    //\u8dd1\u4e24\u6b21\n    int yyy = 0;\n    //\u5efa\u7acb\u65b0\u56fe\n    for(int u = 1; u <= n; u++) {\n        for(int p = 0; p < gra[u].size(); p++) {\n            int v = gra[u][p].to;\n            if(dis1[v] != dis1[u] + gra[u][p].val[0]) yyy++;\n            if(dis2[v] != dis2[u] + gra[u][p].val[1]) yyy++;\n            ngr[u].push_back(node(v, yyy, 0));\n            yyy = 0;\n        }\n    }\n    for(int p = 1; p <= n; p++)\n        for(int i = 0; i < ngr[p].size(); i++)\n            gra[p][i] = ngr[p][i];\n    k = 0, Dijkstra(n, dis3);\n    cout << dis3[1] << endl;\n}\n```",
        "postTime": 1621576136,
        "uid": 298549,
        "name": "SIXIANG32",
        "ccfLevel": 5,
        "title": "\u9898\u89e3\u3010P3720 [AHOI2017\u521d\u4e2d\u7ec4]guide\u3011"
    },
    {
        "content": "\u5199\u5728\u524d\u9762\uff1a\u8fd9\u4e2a\u9898\u76ee\uff0c\u9700\u8981\u4e00\u70b9\u5de7\u601d\u3002\n\n\u5206\u6790\uff1a\u65e2\u7136\u8981\u62b1\u6028\u6b21\u6570\u6700\u77ed\uff0c\u6211\u4eec\u5c31\u8981\u5148\u6c42\u62b1\u6028\u6b21\u6570\u3002\n\n\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\uff0c\u4ec0\u4e48\u65f6\u5019\uff0cGPS\u7cfb\u7edf\u4f1a\u62b1\u6028\u5462\uff1f\n\n\u5f53 John \u884c\u8d70\u5728\u9053\u8def $(x,y)$\uff0c\u4e14$x$ \u5230 $n$ \u7684\u6700\u77ed\u8def\u4e2d\u6ca1\u6709\u9053\u8def $(x,y)$\uff0c\u5219\u8be5\u7cfb\u7edf\u4f1a\u62b1\u6028\u4e00\u6b21\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u662f\u4e0d\u662f\u8981\u6c42\u6bcf\u4e00\u4e2a\u70b9\u5230 $n$ \u7684\u6700\u77ed\u8def\uff1f\u663e\u7136\u4e0d\u53ef\u80fd\uff0c\u5426\u5219\u6211\u4eec\u8981\u505a $n$ \u6b21\u6700\u77ed\u8def\uff0c\u663e\u7136\u8d85\u65f6\uff0c\u4e14\u5927\u591a\u6570\u6570\u636e\u663e\u5f97\u6ca1\u6709\u5fc5\u8981\u3002\n\n\u90a3\u6211\u4eec\u600e\u4e48\u529e\uff1f\n\n\u6211\u4eec\u8003\u8651\u628a\u56fe\u53cd\u8fc7\u6765\uff0c\u628a$(x,y)$ \u53d8\u6210$(y,x)$\uff0c\u90a3\u4e48\uff0c\u6bcf\u4e00\u4e2a\u70b9\u5230$n$ \u7684\u6700\u77ed\u8def\u5c31\u53d8\u6210\u4e86$n$ \u5230\u6bcf\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8def\uff0c\u5bf9\u4e8e\u4e24\u5957\u7cfb\u7edf\uff0c\u6211\u4eec\u53ea\u8981\u8dd1\u4e24\u904d\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n\u5b8c\u6210\u6700\u77ed\u8def\u540e\uff0c\u5224\u5b9a\u4e00\u6761\u8fb9$(x,y)$ \u5728\u4e0d\u5728\u6700\u77ed\u8def\u5f84\u4e0a\u5c31\u5341\u5206\u7b80\u5355\u4e86\uff0c\u8bbe\u6700\u77ed\u8def\u6570\u7ec4\u4e3a$dis$ ,\u4e00\u6761\u8fb9$(x,y,w)$ \u4e0d\u5728\u6700\u77ed\u8def\u4e0a\u5f53\u4e14\u4ec5\u5f53$dis[x]+w\\ne dis[y]$\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u5b83\u5728\u4e24\u5957\u7cfb\u7edf\u4e2d\u5206\u522b\u5c5e\u4e0d\u5c5e\u4e8e\u6700\u77ed\u8def\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u7ecf\u8fc7\u8fd9\u6761\u8fb9\u7684\u62b1\u6028\u6b21\u6570\u3002\u63a5\u4e0b\u6765\u53ea\u8981\u4ee5\u62b1\u6028\u6b21\u6570\u4e3a\u8fb9\u6743\uff0c\u518d\u91cd\u65b0\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\nvoid read(T &a)   //\u5feb\u8bfb\n{\n \tchar ch;int sign=1;\n \tfor(ch=getchar();!isdigit(ch);ch=getchar())\n \tif(ch=='-') sign=-1;\n \ta=ch&15;\n \tfor(ch=getchar();isdigit(ch);ch=getchar())\n \ta=(a<<3)+(a<<1)+(ch&15);\n \ta*=sign;\n}\nconst int N=1e5+5,M=5e5+5;\n\nstruct node\n{\n\tint id,dis;  //id \u4e3a\u8282\u70b9\u7f16\u53f7\uff0cdis \u4e3a\u6240\u5bf9\u5e94\u6700\u77ed\u8def\n\tbool operator <(const node &p)const  //\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u5b9a\u4e49\u6bd4\u8f83\u65b9\u5f0f\n\t{\n\t\treturn dis>p.dis;\n\t}\n\tnode(){}\n\tnode(int _id,int _dis)\n\t{\n\t\tid=_id,dis=_dis;\n\t}\n};\nint vst[N],n,m;\npriority_queue<node>q;\nstruct graph\n{\n\tint fir[N],nxt[M],to[M],w[M],st[M],ect=0,dis[N];\n\t\n\tinline void dij(int s)\n\t{\n\t\tfor(int i=1;i<=n;i++) dis[i]=0x7f7f7f7f;\n\t\tmemset(vst,0,sizeof vst);\n\t\tdis[s]=0;\n\t\tq.push(node(s,0));\n\t\twhile(q.size())\n\t\t{\n\t\t\tint x=q.top().id;\n\t\t\tq.pop();\n\t\t\tif(vst[x]) continue;\n\t\t\tvst[x]=1;\n\t\t\tfor(int i=fir[x];i;i=nxt[i])\n\t\t\t{\n\t\t\t\tint y=to[i],z=w[i];\n\t\t\t\tif(dis[y]>dis[x]+z)\n\t\t\t\tdis[y]=dis[x]+z,\n\t\t\t\tq.push(node(y,dis[y]));\n\t\t\t}\n\t\t}\n\t}\n\tinline void addedge(int u1,int v1,int w1)\n\t{\n\t\tnxt[++ect]=fir[u1];fir[u1]=ect;st[ect]=u1;to[ect]=v1;w[ect]=w1;\n\t}\n}gr1,gr2,gres;\n\n//gr1,gr2 \u5206\u522b\u662f\u4e24\u5957\u7cfb\u7edf\u7684\u53cd\u56fe\uff0cgres \u662f\u6700\u540e\u91cd\u6784\u7684\u56fe\nint main()\n{\n\tread(n);read(m);\n\tfor(int i=1,x,y,p,q;i<=m;i++)\n\t{\n\t\tread(x);read(y);read(p);read(q);\n\t\tgr1.addedge(y,x,p);\n\t\tgr2.addedge(y,x,q);\n\t}\n\tgr1.dij(n);\n\tgr2.dij(n);  //\u4e24\u904d\u6700\u77ed\u8def\uff0c\u7528\u5806\u4f18\u5316+Dijkstra\n\tfor(int i=1;i<=m;i++)   //\u4f9d\u636e\u6700\u77ed\u8def\u7684\u7ed3\u679c\u91cd\u6784\u56fe\n\t{\n\t\tint x=gr1.st[i],y=gr1.to[i],rw=0;\n\t\tif(gr1.dis[x]+gr1.w[i]!=gr1.dis[y]) rw++;\n\t\tif(gr2.dis[x]+gr2.w[i]!=gr2.dis[y]) rw++;\n\t\tgres.addedge(y,x,rw);\n\t\t\n\t}\n\ngres.dij(1);  //\u6700\u540e\u8dd1\u4e00\u904d\u6700\u77ed\u8def\ncout<<gres.dis[n];\n\n}\n\n```",
        "postTime": 1601471917,
        "uid": 226435,
        "name": "\u5929\u547d\u4e4b\u8def",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3720 \u3010[AHOI2017\u521d\u4e2d\u7ec4]guide\u3011"
    },
    {
        "content": "$$\\Huge\\color{gold}\\texttt{My Blog}$$\n**\u53cc\u500d\u7ecf\u9a8c**\u8bf7\u505a[$\\huge\\texttt{P3106}$](https://www.luogu.com.cn/problem/P3106)\n\n# \u524d\u8a00\n\n\u6700\u5f00\u59cb\u7684\u65f6\u5019\u6211\u8fd8\u8bf4\u201c\u8fd9\u9898\u600e\u4e48\u662f\u84dd\u9898\uff1f\u5145\u5176\u91cf\u4e00\u9053\u7eff\u9898\u5427\u201d\n\n\u7136\u800c\u4e8b\u5b9e\u65e0\u60c5\u7684\u6253\u4e86\u6211\u7684\u8138\u2026\u2026\n\n## \u524d\u7f6e\u77e5\u8bc6\n\n\u6700\u77ed\u8def\u7b97\u6cd5\u3001\u6700\u77ed\u8def\u95ee\u9898\u53d8\u79cd\uff08\u591a\u8d77\u70b9\u540c\u7ec8\u70b9\uff09\u3001\u8bb0\u5f55\u6700\u77ed\u8def\u8def\u5f84\n\n# \u5f00\u59cb\u5427\n\n\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u8981\u627e\u7684\u4e1c\u897f\u6709\u4e09\u4e2a\uff0c\u5206\u522b\u662fGPS1\u7684\u6700\u77ed\u8def\uff0cGPS2\u7684\u6700\u77ed\u8def\u548c\u62a5\u8b66\u6b21\u6570\u7684\u6700\u77ed\u8def\n\n## GPS\u6700\u77ed\u8def\n\n\u8fd9\u4e2a\u4e1c\u897f\u76f8\u5f53\u4e8e\u591a\u8d77\u70b9\u540c\u7ec8\u70b9\u7684\u6700\u77ed\u8def\n\n\u8fd9\u79cd\u7c7b\u578b\u7684\u9898\u76ee\u4e00\u822c\u628a\u8fb9\u53d6\u53cd\uff0c\u53d8\u6210\u53cd\u56fe\u6765\u6c42\u89e3\n\n\u6bd4\u5982\u8fd9\u9053\uff1a[$\\huge\\texttt{P1821-\u725b\u7684\u6d3e\u5bf9}$](https://www.luogu.com.cn/problem/P1821)\n\n### \u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\ninline void add1(int u,int v,int w,int id)\n{\n    e1[++k1[0]][0].u=u;\n\te1[++k1[1]][1].v=u;\n    e1[k1[1]][1].u=v;\n\te1[k1[0]][0].v=v;\n    e1[k1[0]][0].w=e1[k1[1]][1].w=w;\n    e1[k1[0]][0].next=head1[u][0];\n    e1[k1[1]][1].next=head1[v][1];\n    e1[k1[0]][0].id=e1[k1[1]][1].id=id;\n    head1[u][0]=k1[0];\n\thead1[v][1]=k1[1];\n}\n\nqueue <int> q;\n\nvoid spfa1(void)\n{\n    for(register int i=1;i<=n;++i)\n        dis1[i]=0x3f3f3f3f3f3f3f3f;\n    dis1[n]=0;\n    vis1[n]=true;\n    q.push(n);\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        for(int i=head1[u][1];i;i=e1[i][1].next)\n        {\n            int v=e1[i][1].v;\n            if(dis1[v]>dis1[u]+e1[i][1].w)\n            {\n            \tfrom1[v]=e1[i][1].id;\n                dis1[v]=dis1[u]+e1[i][1].w;\n                if(!vis1[v])\n                {\n                    vis1[v]=true;\n                    q.push(v);\n                }\n            }\n        }\n        vis1[u]=false;\n    }\n}\n```\n\n## \u62a5\u8b66\u6b21\u6570\u6700\u77ed\u8def\n\n\u6709\u4e24\u79cd\u5904\u7406\u65b9\u6cd5\n\n1. \u5bf9\u4e8e\u8dd1\u51fa\u7684GPS\u6700\u77ed\u8def\u8fdb\u884c\u91cd\u65b0\u5efa\u56fe\uff0c\u5e76\u8dd1\u6700\u77ed\u8def\n\n2. \u6253\u4e0b\u6700\u77ed\u8def\u6807\u8bb0\uff0c\u7136\u540e\u76f4\u63a5\u8dd1\u6700\u77ed\u8def\uff0c\u8fdb\u884c\u6bd4\u5bf9\n\n\u4e3a\u4e86\u7b80\u4fbf\uff0c\u8fd9\u91cc\u6211\u91c7\u53d6\u65b9\u6cd5\u4e8c\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/f8sm6tq6.png)\n\n# \u8fdb\u9636\n\n\u5f53\u4f60\u6309\u7167\u8fd9\u6837\u6765\u6253\u4e0b\u4e00\u4efd\u4ee3\u7801\uff0c\u606d\u559c\u4f60\uff0c\u8fdb\u5165\u4e86\u8c03\u8bd5\u9636\u6bb5\n\n\u56e0\u4e3a\u8fd9\u4efd\u4ee3\u7801\u3000\u6839\u3000\u672c\u3000\u62ff\u3000\u4e0d\u3000\u6ee1\u3000\u5206\n\n\u51a5\u601d\u82e6\u60f3\u554a\u2026\u2026\n\n## \u6807\u8bb0\u4f18\u5316\n\n\u540e\u6765\u8dd1\u53bb\u9694\u58c1\u91cd\u9898\u4ea4\u4e86\u4e00\u53d1\u2026\u2026\u641e\u5230\u4e86\u4e00\u4e2a\u70b9\u7684\u6570\u636e\uff0c\u957f\u4e0b\u9762\u8fd9\u6837\n\n```\n10000 20000\n1 2 1 100000\n2 1 100000 1\n2 3 1 100000\n3 2 100000 1\n3 4 1 100000\n4 3 100000 1\n4 5 1 100000\n5 4 100000 1\n5 6 1 100000\n6 5 100000 1\n6 7 1 100000\n7 6 100000 1\n7 8 1 100000\n8 7 100000 1\n8 9 1 100000\n9 8 100000 1\n9 10 1 100000\n10 9 100000 1\n\n...\n```\n\n\u8c41\u7136\u5f00\u6717\u554a\u3002\u8fd9\u6570\u636e\u5361\u6389\u4e86\u4f7f\u7528\u8ddd\u79bb\u76f8\u51cf\u7684\u8def\u5f84\u6807\u8bb0\n\n\u4e8e\u662f\u4e4e\u6253\u51fa\u4e86\u4e0b\u9762\u8fd9\u6837\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/jzxyg6tx.png)\n\n## \u4f18\u5316 2.0\n\n\u7136\u800c\u4e0a\u9762\u90a3\u4efd\u4e5fwa\u4e86\uff0c\u4e0d\u8fc7\u81f3\u5c11\u8fd9\u6b21\u80fd\u62ff60\u5206\n\n\u4e8e\u662f\u53c8\u8dd1\u53bb\u9694\u58c1\u627e\u7075\u611f\uff0c\u4e00\u7785\u9898\u5e72\u660e\u767d\u4e86\uff0c**\u6709\u91cd\u8fb9\uff01**\n\n\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u5c31\u662f\u8bf4\u4f60\u8fd9\u4e24\u4e2aspfa\u8dd1\u51fa\u6765\u7684\u90fd\u662f$u\\rightarrow v$\uff0c\u4f46\u662f\u8d70\u7684\u662f\u4e0d\u540c\u7684\u8fb9\uff01\n\n\u53c8\u4f18\u5316\u2026\u2026\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/q18vb545.png)\n\n\u8fd9\u6b21A\u4e86\uff01\n\n# \u603b\u7ed3\n\n\u8fd9\u9053\u9898\u7efc\u5408\u6027\u633a\u5f3a\u7684\uff0c\u6700\u77ed\u8def\u597d\u51e0\u4e2a\u7ec6\u8282\u5904\u7406\u90fd\u8003\u5230\u4e86\uff0c\u9002\u5408\u4e0b\u5348debug\n~~(\u7b11)~~\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n\nconst int MAXN=100010;\nconst int MAXM=500010;\n\nint n,m;\nint k1[2],k2[2];\nint head1[MAXN][2],head2[MAXN][2];\nint dis1[MAXN],dis2[MAXN],vis1[MAXN],vis2[MAXN],from1[MAXN],from2[MAXN];\n\nstruct edge{\n    int u,v,w,next,id;\n}e1[MAXM*2][2],e2[MAXM*2][2];\n\ninline int read(void)\n{\n    int ans=0;\n    char a=getchar();\n    while(!isdigit(a))\n        a=getchar();\n    while(isdigit(a))\n    {\n        ans=ans*10+a-'0';\n        a=getchar();\n    }\n    return ans;\n}\n\ninline void add1(int u,int v,int w,int id)\n{\n    e1[++k1[0]][0].u=u;\n\te1[++k1[1]][1].v=u;\n    e1[k1[1]][1].u=v;\n\te1[k1[0]][0].v=v;\n    e1[k1[0]][0].w=e1[k1[1]][1].w=w;\n    e1[k1[0]][0].next=head1[u][0];\n    e1[k1[1]][1].next=head1[v][1];\n    e1[k1[0]][0].id=e1[k1[1]][1].id=id;\n    head1[u][0]=k1[0];\n\thead1[v][1]=k1[1];\n}\n\ninline void add2(int u,int v,int w,int id)\n{\n    e2[++k2[0]][0].u=u;\n\te2[++k2[1]][1].v=u;\n    e2[k2[1]][1].u=v;\n\te2[k2[0]][0].v=v;\n    e2[k2[0]][0].w=e2[k2[1]][1].w=w;\n    e2[k2[0]][0].next=head2[u][0];\n    e2[k2[1]][1].next=head2[v][1];\n    e2[k2[0]][0].id=e2[k2[1]][1].id=id;\n    head2[u][0]=k2[0];head2[v][1]=k2[1];\n}\n\nqueue <int> q;\n\nvoid spfa1(void)\n{\n    for(register int i=1;i<=n;++i)\n        dis1[i]=0x3f3f3f3f3f3f3f3f;\n    dis1[n]=0;\n    vis1[n]=true;\n    q.push(n);\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        for(int i=head1[u][1];i;i=e1[i][1].next)\n        {\n            int v=e1[i][1].v;\n            if(dis1[v]>dis1[u]+e1[i][1].w)\n            {\n            \tfrom1[v]=e1[i][1].id;\n                dis1[v]=dis1[u]+e1[i][1].w;\n                if(!vis1[v])\n                {\n                    vis1[v]=true;\n                    q.push(v);\n                }\n            }\n        }\n        vis1[u]=false;\n    }\n}\n\nvoid spfa2(void)\n{\n    for(register int i=1;i<=n;++i)\n        dis2[i]=0x3f3f3f3f3f3f3f3f;\n    dis2[n]=0;\n    vis2[n]=true;\n    q.push(n);\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        for(int i=head2[u][1];i;i=e2[i][1].next)\n        {\n            int v=e2[i][1].v;\n            if(dis2[v]>dis2[u]+e2[i][1].w)\n            {\n            \tfrom2[v]=e2[i][1].id;\n                dis2[v]=dis2[u]+e2[i][1].w;\n                if(!vis2[v])\n                {\n                    vis2[v]=true;\n                    q.push(v);\n                }\n            }\n        }\n        vis2[u]=false;\n    }\n}\n\nint dis[MAXN],vis[MAXN];\n\nvoid spfa(void)\n{\n    for(int i=1;i<=n;++i)\n        dis[i]=0x3f3f3f3f3f3f3f3f;\n    dis[1]=0;\n    vis[1]=1;\n    q.push(1);\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        for(int i=head1[u][0];i;i=e1[i][0].next)\n        {\n            int v=e1[i][0].v,temp_a=1,temp_b=1;\n            if(from1[u]==e1[i][0].id)\n                temp_a=0;\n            if(from2[u]==e1[i][0].id)\n                temp_b=0;\n            if(dis[v]>(dis[u]+temp_a+temp_b))\n            {\n                dis[v]=dis[u]+temp_a+temp_b;\n                if(!vis[v])\n                {\n                    vis[v]=true;\n                    q.push(v);\n                }\n            }\n        }\n        vis[u]=false;\n    }\n}\n\nsigned main(void)\n{\n\t//freopen(\"C:\\\\Users\\\\HP\\\\Desktop\\\\debug.txt\",\"r\",stdin);\n    n=read();m=read();\n    for(register int i=1;i<=m;++i)\n    {\n        int u=read();int v=read();int p=read();int q=read();\n        add1(u,v,p,i);\n        add2(u,v,q,i);\n    }\n    spfa1();\n    spfa2();\n    spfa();\n    printf(\"%lld\",dis[n]);\n    return 0;\n}\n\n```",
        "postTime": 1594125066,
        "uid": 215954,
        "name": "\u6c34\u7121\u6708\u5609\u7965",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3720 \u3010[AHOI2017\u521d\u4e2d\u7ec4]guide\u3011"
    },
    {
        "content": "\u53ef\u80fd\u662f\u6211\u592a\u5f31\u4e86\uff0c\u4e00\u53e3\u6c14\u5199\u4e86\u4e09\u4e2aspfa(\u5927\u96fe)\u3002  \n\u524d\u4e24\u4e2a\u5206\u522b\u6c42\u7684\u662f\u4e24\u4e2a\u5bfc\u822a\u6240\u5efa\u8bae\u7684\u6700\u77ed\u8def  \n\u6700\u540e\u4e00\u4e2a\u4e86\u5c31\u662f\u6c42\u6700\u5c11\u62b1\u6028\u7684\u8def\u5f84  \n\u6211\u672c\u6765\u5b58\u7684\u662f\u4e00\u4e2a\u70b9\u662f\u7531\u54ea\u4e2a\u70b9\u8dd1\u6765\u7684(60\u5206)\uff0c\u4f46\u4e00\u60f3\u5230\u6700\u77ed\u8def\u53ef\u80fd\u4e0d\u6b62\u4e00\u6761\uff0c\u6211\u5c31\u89c9\u5f97\u6211\u592a\u84bb\u4e86  \ndis[u]!=dis[v]+val(u,v)  \u8fd9\u6761\u8def\u5f84\u7684\u62b1\u6028\u503c\u5c31\u52a01  \n\u4e3a\u4ec0\u4e48\u662f\u4e0d\u7b49\u4e8e ~~\u56e0\u4e3a\u6211\u61d2\uff0c\u9003~~  \n\u8fd8\u6709\uff0c\u56e0\u4e3a\u8981\u4fdd\u8bc1\u4e00\u6761\u8fb9\u7edd\u5bf9\u57281\u5230n\u7684\u6700\u77ed\u8def\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u53cd\u5411\u5efa\u8fb9  \n\u8fd9\u6837\u53ef\u4ee5\u6c42\u51fan\u5230\u5176\u4ed6\u70b9\u7684\u6700\u77ed\u8def  \n\u4e5f\u5c31\u662f\u5176\u4ed6\u70b9\u5230n\u7684\u6700\u77ed\u8def  \n\u5177\u4f53\u8fd8\u662f\u770b\u4ee3\u7801\u5427\uff0c\u4e0d\u8fc7\u6211\u89c9\u5f97\u5efa\u4e2a\u65b0\u56fe\u771f\u7684\u6ca1\u5fc5\u8981~~\u56e0\u4e3a\u6211\u61d2~~  \n\u8bb2\u771f\uff0cspfa\u53cc\u7aef\u961f\u5217\u4f18\u5316\u771f\u597d\u7528  \n\u4ee5\u4e0b\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define M 500005\n#define ll long long\n#define INF 0x3f\nusing namespace std;\ninline int read()\n{\n\tint w=0,q=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')q=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){w=(w<<1)+(w<<3)+c-'0';c=getchar();}\n\treturn w*q;\n}\nint h[M],cnt,h1[100005],h2[100005],vis[100005],n,m;\nll dis1[100005],dis2[100005],dis3[100005];\nstruct node{int nxt,to;ll p,q;}c[M];\ninline void add(int u,int v,int w1,int w2)\n{\n\tc[++cnt].nxt=h[u];\n\tc[cnt].to=v;\n\tc[cnt].p=w1;\n\tc[cnt].q=w2;\n\th[u]=cnt;\n}\nvoid spfa1()\n{\n\tmemset(vis,0,sizeof(vis));\n\tmemset(dis1,0x3f,sizeof(dis1));\n\tdeque<int> q;\n\tq.push_back(n);\n\tdis1[n]=0;\n\tvis[n]=1;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();q.pop_front();\n\t\tvis[u]=0;\n\t\tfor(int i=h[u];i;i=c[i].nxt)\n\t\t{\n\t\t\tint v=c[i].to;ll val=c[i].p;\n\t\t\tif(dis1[v]>dis1[u]+val)\n\t\t\t{\n\t\t\t\th1[v]=u;\n\t\t\t\tdis1[v]=dis1[u]+val;\n\t\t\t\tif(!vis[v])\n\t\t\t\t{\n\t\t\t\t\tif(q.size()&&dis1[v]>dis1[q.front()])q.push_back(v);\n\t\t\t\t\telse q.push_front(v);\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nvoid spfa2()\n{\n\tmemset(vis,0,sizeof(vis));\n\tmemset(dis2,0x3f,sizeof(dis2));\n\tdeque<int> q;\n\tq.push_back(n);\n\tdis2[n]=0;\n\tvis[n]=1;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();q.pop_front();\n\t\tvis[u]=0;\n\t\tfor(int i=h[u];i;i=c[i].nxt)\n\t\t{\n\t\t\tint v=c[i].to;ll val=c[i].q;\n\t\t\tif(dis2[v]>dis2[u]+val)\n\t\t\t{\n\t\t\t\th2[v]=u;\n\t\t\t\tdis2[v]=dis2[u]+val;\n\t\t\t\tif(!vis[v])\n\t\t\t\t{\n\t\t\t\t\tif(q.size()&&dis2[v]>dis2[q.front()])q.push_back(v);\n\t\t\t\t\telse q.push_front(v);\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nvoid spfa3()\n{\n\tmemset(vis,0,sizeof(vis));\n\tmemset(dis3,0x3f,sizeof(dis3));\n\tdeque<int> q;\n\tq.push_back(n);\n\tdis3[n]=0;\n\tvis[n]=1;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();q.pop_front();\n\t\tvis[u]=0;\n\t\tfor(int i=h[u];i;i=c[i].nxt)\n\t\t{\n\t\t\tint v=c[i].to;ll val=0;\n\t\t\tif(dis1[u]+c[i].p!=dis1[v])val++;\n\t\t\tif(dis2[u]+c[i].q!=dis2[v])val++;\n\t\t\tif(dis3[v]>dis3[u]+val)\n\t\t\t{\n\t\t\t\tdis3[v]=dis3[u]+val;\n\t\t\t\tif(!vis[v])\n\t\t\t\t{\n\t\t\t\t\tif(q.size()&&dis3[v]>dis3[q.front()])q.push_back(v);\n\t\t\t\t\telse q.push_front(v);\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++){int u=read(),v=read(),w1=read(),w2=read();add(v,u,w1,w2);}//\u5efa\u56fe\n\tspfa1();\n\tspfa2();\n\tspfa3();\n\tprintf(\"%lld\",dis3[1]);\n\treturn 0;\n}\n```",
        "postTime": 1566133379,
        "uid": 141940,
        "name": "muse_umbra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3720 \u3010[AHOI2017\u521d\u4e2d\u7ec4]guide\u3011"
    }
]