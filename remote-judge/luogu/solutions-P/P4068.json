[
    {
        "content": "\u5206\u6790\u9898\u76ee\uff0c\u53d1\u73b0\u91cd\u70b9\u5728\u4e8e\u6761\u4ef6\u300c\u4e00\u4e2a\u6570\u5b57\u53ea\u80fd\u53c2\u4e0e\u4e00\u6b21\u914d\u5bf9\u300d\u3002\n\n\u8003\u8651\u6c42\u51fa$cnt_i$\uff0c\u8868\u793a$a_i$\u5206\u89e3\u8d28\u56e0\u6570\u4e4b\u540e\uff0c\u6bcf\u4e2a\u8d28\u56e0\u6570\u7684\u6307\u6570\u4e4b\u548c\u3002\n\n\u90a3\u4e48$a_i$\u548c$a_j$\u80fd\u914d\u5bf9\u7684\u6761\u4ef6\u8f6c\u5316\u4e3a\uff1a\n\n$a_i$\u662f$a_j$\u7684\u500d\u6570\uff0c\u4e14$cnt_i=cnt_j+1$\u3002\n\n\u8003\u8651\u4e00\u4e2a\u4e8c\u5206\u56fe\u7684\u6a21\u578b\u3002\u5148\u6309\u7167$cnt$\u7684\u5947\u5076\u6027\uff0c\u628a\u6570\u5b57\u5206\u4e3a\u4e24\u4e2a\u96c6\u5408\u3002\n\n1\u3001\u6e90\u70b9\u5411\u6240\u6709$cnt$\u4e3a\u5947\u6570\u7684\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$b_i$\uff0c\u8d39\u7528\u4e3a$0$\u7684\u8fb9\u3002\n\n2\u3001\u6240\u6709$cnt$\u4e3a\u5076\u6570\u7684\u70b9\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$b_i$\uff0c\u8d39\u7528\u4e3a$0$\u7684\u8fb9\u3002\n\n3\u3001\u5bf9\u4e8e\u4e00\u5bf9$i,j$\uff0c\u5982\u679c$a_i$\u548c$a_j$\u80fd\u914d\u5bf9\u5e76\u4e14$cnt_i$\u4e3a\u5947\u6570\uff0c\u5219\u7531$i$\u5411$j$\u8fde\u4e00\u6761\u8fb9\uff0c\u5bb9\u91cf\u4e3a$\\infty$\uff0c\u8d39\u7528\u4e3a$ci\\times cj$\u3002\n\n\u7136\u540e\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u3002\u4f46\u662f\u5199\u6cd5\u6709\u4e00\u4e9b\u53d8\u5316\uff1a\n\n\u7531\u4e8e\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u4e00\u6b21\u589e\u5e7f\u6c42\u51fa\u7684\u6700\u957f\u8def\u4e00\u5b9a\u4e0d\u4f1a\u5927\u4e8e\u4e0a\u4e00\u6b21\u589e\u5e7f\u6c42\u51fa\u7684\u6700\u957f\u8def\uff0c\u6240\u4ee5\u8003\u8651\u8d2a\u5fc3\n\n\u6bcf\u4e00\u6b21\u8dd1\u6700\u957f\u8def\u540e\uff0c\u6cbf\u7740\u6700\u957f\u8def\uff0c\u5728\u4ef7\u503c\u603b\u548c\u4e0d\u5c0f\u4e8e$0$\u7684\u524d\u63d0\u4e0b\u5c3d\u53ef\u80fd\u589e\u52a0\u6d41\u91cf\u3002\u5982\u679c\u627e\u4e0d\u5230\u589e\u5e7f\u8def\u6216\u8005\u7ee7\u7eed\u589e\u5e7f\u4e00\u5b9a\u4f1a\u4f7f\u4ef7\u503c\u603b\u548c\u5c0f\u4e8e$0$\uff0c\u5219\u5df2\u7ecf\u4f20\u8f93\u7684\u603b\u6d41\u91cf\u5c31\u662f\u7b54\u6848\u3002 \n\u4ee3\u7801\uff1a\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\ninline int read() {\n    int res = 0; bool bo = 0; char c;\n    while (((c = getchar()) < '0' || c > '9') && c != '-');\n    if (c == '-') bo = 1; else res = c - 48;\n    while ((c = getchar()) >= '0' && c <= '9')\n        res = (res << 3) + (res << 1) + (c - 48);\n    return bo ? ~res + 1 : res;\n}\ntypedef long long ll;\nconst int N = 210, M = 5e5 + 5; const ll INF = 1ll << 61;\nint n, a[N], b[N], c[N], cnt[N], ecnt = 1, nxt[M], adj[N], st[M], go[M],\nfrm[M], S, T, len, que[M];\nll cap[M], cost[M], dis[N], sum, ans; bool vis[N];\nvoid add_edge(int u, int v, ll w, ll x) {\n    nxt[++ecnt] = adj[u]; adj[u] = ecnt; st[ecnt] = u;\n    go[ecnt] = v; cap[ecnt] = w; cost[ecnt] = x;\n    nxt[++ecnt] = adj[v]; adj[v] = ecnt; st[ecnt] = v;\n    go[ecnt] = u; cap[ecnt] = 0; cost[ecnt] = -x;\n}\nint sigma(int n) {\n    int i, S = sqrt(n), tot = 0; for (i = 2; i <= S; i++)\n        while (n % i == 0) n /= i, tot++; if (n > 1) tot++; return tot;\n}\nbool spfa() {\n    int i; for (i = S; i <= T; i++) vis[i] = 0, dis[i] = -INF;\n    dis[que[len = 1] = S] = 0; for (i = 1; i <= len; i++) {\n        int u = que[i]; vis[u] = 0;\n        for (int e = adj[u], v; e; e = nxt[e])\n            if (cap[e] && dis[u] + cost[e] > dis[v = go[e]]) {\n                dis[v] = dis[u] + cost[frm[v] = e];\n                if (!vis[v]) vis[que[++len] = v] = 1;\n            }\n    }\n    return dis[T] > -INF;\n}\nbool add() {\n    ll fl = INF, delta; for (int e = frm[T]; e; e = frm[st[e]])\n        fl = min(fl, cap[e]); delta = dis[T] * fl;\n    if (sum + delta >= 0) {\n        sum += delta; ans += fl;\n        for (int e = frm[T]; e; e = frm[st[e]])\n            cap[e] -= fl, cap[e ^ 1] += fl; return 1;\n    }\n    else return ans += sum / (-dis[T]), 0;\n}\nll solve() {\n    while (spfa() && add()); return ans;\n}\nint main() {\n    int i, j; n = read(); for (i = 1; i <= n; i++) a[i] = read();\n    for (i = 1; i <= n; i++) b[i] = read();\n    for (i = 1; i <= n; i++) c[i] = read(); S = 1; T = n + 2;\n    for (i = 1; i <= n; i++) cnt[i] = sigma(a[i]);\n    for (i = 1; i <= n; i++) if (cnt[i] & 1) add_edge(S, i + 1, b[i], 0);\n        else add_edge(i + 1, T, b[i], 0);\n    for (i = 1; i <= n; i++) if (cnt[i] & 1) for (j = 1; j <= n; j++)\n        if ((cnt[i] + 1 == cnt[j] && a[j] % a[i] == 0) ||\n            (cnt[j] + 1 == cnt[i] && a[i] % a[j] == 0))\n                add_edge(i + 1, j + 1, INF, 1ll * c[i] * c[j]);\n    cout << solve() << endl; return 0;\n}\n```",
        "postTime": 1520651526,
        "uid": 29936,
        "name": "xyz32768",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4068 \u3010[SDOI2016]\u6570\u5b57\u914d\u5bf9\u3011"
    },
    {
        "content": "## \u4e00\u9053\u975e\u5e38\u597d\u7684\u7f51\u7edc\u6d41\u9898\n\n## \u601d\u8def \u4e8c\u5206+\u8d39\u7528\u6d41\n\n\u6211\u7684\u601d\u8def\u4e0e\u5176\u4ed6\u9898\u89e3\u4e0d\u4e00\u6837\uff0c\u53ef\u80fd\u662f\u6211\u592a\u83dc\u4e86\uff0c\u6240\u4ee5\u8981\u591a\u4e00\u53ea $ \\log$\uff0c\u4e0d\u8fc7\u8dd1\u7684\u4e5f\u98de\u5feb\uff0c\u6700\u5927\u4e00\u4e2a\u70b9\u4e5f\u53ea\u8981 100ms\uff0c\u800c\u4e14\u4e3b\u8981\u8fd9\u4e2a\u597d\u60f3\u3002\n\n\n------------\n\n\n1. \u9996\u5148\u6211\u4eec\u8003\u8651\u5efa\u56fe\n\n\u8fd9\u5176\u5b9e\u4e0e\u5176\u4ed6\u9898\u89e3\u5dee\u4e0d\u591a\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u6570\u5176\u8d28\u56e0\u6570\u6307\u6570\u4e4b\u548c\uff0c\u8bb0\u5f55\u4e3a $tot_i$ \uff0c\u82e5\u4e00\u4e2a\u6570\u80fd\u6574\u9664\u53e6\u4e00\u4e2a\u6570\u4e14 $tot$ \u4e4b\u5dee\u4e3a\u4e00\u5219\u8fde\u8fb9\uff0c\n\n\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9 s\uff0c\u4e0e\u6c47\u70b9 t\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5947\u6570\u7684 $tot_i$ \u4e0e s \u8fde\u8fb9\uff0c\u5076\u6570\u4e0et\u8fde\u8fb9\n\n```cpp\n\tfor(int i=1;i<=n;i++)\n\t\tif(tot[i]%2==1)add(s,i,b[i],0);else add(i,t,b[i],0);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t{ \n\t\t\tif(a[i]%a[j]==0&&tot[i]==tot[j]+1)\n\t\t\t{\n\t\t\t\tif(tot[i]%2==1)add(i,j,inf,c[i]*c[j]);\n\t\t\t\telse add(j,i,inf,c[i]*c[j]);\n\t\t\t}\n\t\t}\n```\n\n\n------------\n\n\n2. \u7136\u540e\u6211\u4eec\u6765\u60f3\u5982\u4f55\u6c42\u5728\u83b7\u5f97\u7684\u4ef7\u503c\u603b\u548c\u4e0d\u5c0f\u4e8e0\u7684\u524d\u63d0\u4e0b,\u8fdb\u884c\u6700\u591a\u914d\u5bf9\u6b21\u6570\n\n\u56e0\u4e3a\u6613\u8bc1\u53d6\u7684\u8d39\u7528\u5c0f\u4e8e 0 \u6b21\u6570\u4e4b\u524d\u7684\u90fd\u5927\u4e8e\u7b49\u4e8e0\u4e4b\u540e\u7684\u90fd\u5c0f\u4e8e0\n\n\u6240\u4ee5\u53ef\u4ee5\u4e8c\u5206\u6d41\u91cf\n\n\u5728\u5efa\u4e00\u4e2a\u8d85\u8d85\u7ea7\u6e90\u70b9 ss\uff0c\u548c\u6c47\u70b9 tt\uff0css \u4e0e s\u8fde\u4e00\u6761g\u7684\u8fb9\uff0ct \u4e0e tt \u8fde\u4e00\u6761 g \u7684\u8fb9( g \u4e3a\u6d41\u91cf)\n\n```cpp\nbool check(int g)\n{\n\tmemset(last,0,sizeof last),memset(pre,0,sizeof pre),memset(head,0,sizeof head);\n\tcnt=1;int s=y+1,t=y+2;\n\tadd(x,s,g,0),add(t,y,g,0);\n\tfor(int i=1;i<=n;i++)\n\t\tif(tot[i]%2==1)add(s,i,b[i],0);else add(i,t,b[i],0);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tif(a[i]%a[j]==0&&tot[i]==tot[j]+1)\n\t\t\t{\n\t\t\t\tif(tot[i]%2==1)add(i,j,inf,c[i]*c[j]);\n\t\t\t\telse add(j,i,inf,c[i]*c[j]);\n\t\t\t}\n\t\t}\n\tfeiyong1();\n\treturn maxcost>=0;\n}\n```\n\n\u6ce8\u8981\u5f00 long long\n\n------------\n\u5b8c\u6574\u4ee3\u7801\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int maxn=80005,inf=0x3f3f3f3f;\ninline int read()\n{\n\tchar ch=getchar();int x=0;bool f=0;\n\tfor(;!isdigit(ch);ch=getchar())if(ch=='-')f=1;\n\tfor(;isdigit(ch);ch=getchar())x=(x<<1)+(x<<3)+(ch^48);\n\tif(f==1)x=-x;return x;\n}\nqueue<int>q;\nstruct edge\n{\n\tint v,wf,nex,wd;\n}e[maxn];\nint head[205],cnt=1,pre[205],x,y,n,m,maxflow,flow[205],last[205],tot[205];\nint dis[205],maxcost,a[205],b[205],c[205],d,l,r,ans;\nvoid add(int u,int v,int wf,int wd){e[++cnt].v=v,e[cnt].wf=wf,e[cnt].wd=wd,e[cnt].nex=head[u],head[u]=cnt;\ne[++cnt].v=u,e[cnt].wf=0,e[cnt].wd=-wd,e[cnt].nex=head[v],head[v]=cnt;}\nbool vis[maxn];\ninline bool spfa2() \n{\n\tmemset(dis,0x80,sizeof dis);\n\tmemset(vis,0,sizeof vis);\n\tmemset(flow,0x3f,sizeof flow);\n\tqueue<int>q;\n\tq.push(x),dis[x]=0,vis[x]=1,pre[y]=-1;\n\twhile(!q.empty()) \n\t{\n\t\tint u=q.front();\n\t\tvis[u]=0,q.pop();\n\t\tfor(int i=head[u];i;i=e[i].nex) \n\t\t{\n\t\t\tint v=e[i].v;\n\t\t\tif(e[i].wf&&dis[v]<dis[u]+e[i].wd) \n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+e[i].wd;\n\t\t\t\tflow[v]=min(flow[u],e[i].wf);pre[v]=u,last[v]=i;\n\t\t\t\tif(!vis[v])vis[v]=1,q.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn pre[y]!=-1;\n}\nvoid feiyong1()\n{\t\n\tmaxcost=0;maxflow=0;\n\twhile(spfa2())\n\t{\n\t\tint now=y;//cout<<dis[y]<<\" \"<<flow[y]<<endl;\n\t\tmaxflow+=flow[y];maxcost+=flow[y]*dis[y];\n\t\twhile(now!=x)\n\t\t{\n\t\t\te[last[now]].wf-=flow[y];\n\t\t\te[last[now]^1].wf+=flow[y];\n\t\t\tnow=pre[now];\n\t\t}\n\t}\n}\nbool check(int g)\n{\n\tmemset(last,0,sizeof last),memset(pre,0,sizeof pre),memset(head,0,sizeof head);\n\tcnt=1;int s=y+1,t=y+2;\n\tadd(x,s,g,0),add(t,y,g,0);\n\tfor(int i=1;i<=n;i++)\n\t\tif(tot[i]%2==1)add(s,i,b[i],0);else add(i,t,b[i],0);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tif(a[i]%a[j]==0&&tot[i]==tot[j]+1)\n\t\t\t{\n\t\t\t\tif(tot[i]%2==1)add(i,j,inf,c[i]*c[j]);\n\t\t\t\telse add(j,i,inf,c[i]*c[j]);\n\t\t\t}\n\t\t}\n\tfeiyong1();\n\treturn maxcost>=0;\n}\nint getr()\n{\n\tmemset(last,0,sizeof last),memset(pre,0,sizeof pre),memset(head,0,sizeof head);\n\tcnt=1;int s=y+1,t=y+2;\n\tadd(x,s,inf,0),add(t,y,inf,0);\n\tfor(int i=1;i<=n;i++)\n\t\tif(tot[i]%2==1)add(s,i,b[i],0);else add(i,t,b[i],0);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tif(a[i]%a[j]==0&&tot[i]==tot[j]+1)\n\t\t\t{\n\t\t\t\tif(tot[i]%2==1)add(i,j,inf,c[i]*c[j]);\n\t\t\t\telse add(j,i,inf,c[i]*c[j]);\n\t\t\t}\n\t\t}\n\tfeiyong1();return maxflow;\n}\nsigned main()\n{\n\tn=read();x=n+1,y=n+2;int M=0;\n\tfor(int i=1;i<=n;i++)a[i]=read();\n\tfor(int i=1;i<=n;i++)b[i]=read();\n\tfor(int i=1;i<=n;i++)c[i]=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint l=a[i];\n\t\tfor(int j=2;j<=l;j++)\n\t\t\tif(l%j==0)l=l/j,j--,tot[i]++;\n\t}\n\t\n\tans=0,l=0,r=getr();\n\twhile(r>=l)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid))ans=mid,l=mid+1;\n\t\telse r=mid-1;\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n\n\n\n\n\n",
        "postTime": 1616735968,
        "uid": 343748,
        "name": "louhao088",
        "ccfLevel": 9,
        "title": "\u9898\u89e3P4068 [SDOI2016]\u6570\u5b57\u914d\u5bf9"
    },
    {
        "content": "# \u5e7f\u544a\n\n[\u849f\u84bb\u7684blog](http://www.cnblogs.com/dedicatus545/p/8729451.html)\n\n# \u6b63\u6587\n\n### \u4e00\u4e2a\u6570\u5b57\u80fd\u4e14\u53ea\u80fd\u5339\u914d\u4e00\u6b21\n\n\u8fd9\u5f15\u5bfc\u6211\u4eec\u601d\u8003\uff1a\u4e00\u6b21\u4ee3\u8868\u4ec0\u4e48\uff1f\u4ee3\u8868\u7528\u5230\u4e00\u5b9a\u4e0a\u9650\uff08b\u6570\u7ec4\uff09\u5c31\u4e0d\u80fd\u518d\u7528\uff0c\u540c\u65f6\u6bcf\u7528\u4e00\u6b21\u4f1a\u4ea7\u751f\u4ef7\u503c\uff08c\u6570\u7ec4\uff09\n\n\u4e0a\u9650\uff1f\u4ef7\u503c\uff1f\u7f51\u7edc\u6d41\uff01\n\n\u628a\u4e00\u6b21\u5339\u914d\u8bbe\u4e3a\u4e00\u70b9\u6d41\u91cf\uff0c\u90a3\u4ea7\u751f\u7684\u4ef7\u503c\u4e0d\u5c31\u662f\u8d39\u7528\u4e86\u5417\uff1f\n\n\u6211\u4eec\u8003\u8651\u628a\u4e00\u79cd\u6570\u5b57\u62bd\u8c61\u6210\u4e00\u4e2a\u70b9\uff0c\u53ef\u4ee5\u5339\u914d\u7684\u6570\u5b57\u4e4b\u95f4\u8fde\u8fb9\uff0c\u8d39\u7528\u4e3ac\\[i\\]\\*c\\[j\\]\uff0c\u6d41\u91cf\u4e0a\u9650\u4e3a.....\n\n\u7b49\u7b49\uff0c\u6d41\u91cf\u4e0a\u9650\u600e\u4e48\u8bbe\uff1f\n\n\u800c\u4e14\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u8fd9\u91cc\u7684\u5339\u914d\u662f\u53cc\u5411\u7684\uff0c\u867d\u7136\u53ef\u4ee5$O\\left(n^2\\right)$\u6c42\u51fa\u6240\u6709\u5339\u914d\u5bf9\uff0c\u4f46\u662f\u7f51\u7edc\u6d41\u8981\u6c42\u662f\u5355\u5411\u8fb9\u554a\uff01\n\n\u522b\u6025\uff0c\u6211\u4eec\u5148\u6765\u5206\u6790\u4e00\u4e0b\u4e24\u4e2a\u6ee1\u8db3\u5339\u914d\u6761\u4ef6\u7684\u6570\uff0c\u6709\u4ec0\u4e48\u6027\u8d28\n\n\u8bbe$i=p\\ast j$\uff0c\u5176\u4e2dp\u662f\u4e00\u4e2a\u8d28\u6570\n\n\u90a3\u6211\u4eec\u8003\u8651$i$\u548c$j$\u7684\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u4f1a\u53d1\u73b0\uff1a\u5b83\u4eec\u4fe9\u5206\u89e3\u51fa\u7684\u8d28\u56e0\u6570\u4e2a\u6570\u4e4b\u95f4\u6b63\u597d\u5dee\u4e00\uff01\n\n\u8fd9\u8bf4\u660e\u4e86\u4ec0\u4e48\uff1f\n\n\u8fd9\u8bf4\u660e\u5339\u914d\u53ea\u6709\u53ef\u80fd\u5728\u8d28\u56e0\u6570\u4e2a\u6570\u5947\u5076\u6027\u4e0d\u540c\u7684\u6570\u5bf9\u4e4b\u95f4\u5b58\u5728\uff0c\u800c\u5982\u679c\u6839\u636e\u8d28\u56e0\u6570\u4e2a\u6570\u7684\u5947\u5076\u6027\u628a\u6570\u5206\u6210\u4e24\u7ec4\uff0c\u90a3\u4e48\u6240\u6709\u8fb9\u90fd\u5728\u4e24\u7ec4\u4e4b\u95f4\uff01\n\n\u8fd9\u662f\u4ec0\u4e48\uff1f\u4e8c\u5206\u56fe\u554a\uff01\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u8f7b\u6613\u628a\u6bcf\u6761\u8fb9\u5b9a\u5411\u6210\u4ece\u5947\u6570\u4fa7\u5230\u5076\u6570\u4fa7\u4e86\uff01\n\n\u63a5\u4e0b\u6765\u7684\u4e8b\u5c31\u7b80\u5355\u4e86\uff1a\u6211\u4eec\u5efa\u7acb\u8d85\u7ea7\u6e90S\u548c\u8d85\u7ea7\u6c47T\uff0c\u4eceS\u8fde\u8fb9\u5230\u6240\u6709\u8d28\u56e0\u6570\u4e2a\u6570\u4e3a\u5947\u6570\u7684\u70b9i\uff0c\u8d39\u7528\u4e3a0\uff0c\u5bb9\u91cf\u4e3ab\\[i\\]\uff0c\u8d28\u56e0\u6570\u4e2a\u6570\u4e3a\u5076\u6570\u7684\u70b9\u8fde\u5230T\uff0c\u7c7b\u4f3c\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u4e5f\u4e00\u540c\u9650\u5236\u4e86\u6bcf\u4e2a\u70b9\u6700\u591a\u6d41\u51fa\u53bb\u4e0d\u8d85\u8fc7b\\[i\\]\u7684\u6d41\u91cf\uff0c\u4e5f\u5c31\u662f\u4e0d\u53d1\u751f\u8d85\u8fc7b\\[i\\]\u6b21\u548c\u8fd9\u4e2a\u6570\u5b57\u6709\u5173\u7684\u5339\u914d\n\n\u56e0\u6b64\u5bf9\u4e8e\u539f\u56fe\u4e2d\u7684\u53ef\u884c\u5339\u914d\uff0c\u53ea\u8981\u8fde\u8fb9\uff0c\u8d39\u7528\u4e3ac\\[i\\]\\*c\\[j\\]\uff0c\u6d41\u91cf\u4e0a\u9650inf\n\n\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41......\u7b49\u7b49\u597d\u50cf\u4e0d\u884c\uff1f\u8fd9\u9053\u9898\u662f\u8981\u6c42\u8d39\u7528\u975e\u8d1f\u65f6\u7684\u6700\u5927\u6d41\u91cf\u554a......\n\n\u522b\u6025\uff0c\u6211\u4eec\u6765\u8d2a\u5fc3\u4e00\u6ce2\n\n\u6211\u4eec\u6bcf\u6b21\u5728\u56fe\u4e2d\u505a\u4e00\u4e2aspfa\uff0c\u627e\u5230\u8d39\u7528\u6700\u5927\uff08\u6700\u957f\uff09\u7684\u589e\u5e7f\u8def\uff0c\u8bbe\u5b83\u7684\u603b\u957f\u5ea6\uff08\u8d39\u7528\uff09\u4e3amaxn\uff0c\u540c\u65f6\u8bbe\u5f53\u524d\u603b\u8d39\u7528\u4e3aans\n\n\u5982\u679cmaxn<-ans\uff0c\u90a3\u4e48\u5373\u4f7f\u52a0\u4e0a1\u7684\u6d41\u91cf\uff0c\u603b\u8d39\u7528\u4e5f\u8d1f\u6570\u4e86\uff0c\u8fd9\u4e2a\u65f6\u5019\u7ed3\u675f\u5faa\u73af\uff0c\u8f93\u51fa\u603b\u6d41\u91cfflow\u5373\u53ef\n\n\u5426\u5219\uff0c\u5982\u679cmaxn>0\uff0c\u90a3\u4e48\u975e\u5e38\u9ad8\u5174\uff0c\u6211\u4eec\u968f\u4fbf\u52a0\uff0c\u6d41\u91cf\u8d8a\u591a\u8d8a\u597d\n\n\u5982\u679cmaxn<0\uff0c\u90a3\u4e48\u4e5f\u6ca1\u6709\u95ee\u9898\uff0c\u6211\u4eec\u53ea\u8981\u4ee4\u6d41\u7684\u6d41\u91cf\u4e3a$min(limit,ans/(-maxn))$\uff0c\u5176\u4e2dlimit\u4e3a\u5f53\u524d\u589e\u5e7f\u8def\u7684\u6d41\u91cf\u4e0a\u9650\n\n\u8fd9\u6837\u4e00\u76f4\u5faa\u73af\uff0c\u76f4\u5230\u56e0\u4e3a\u4e0a\u9762\u7684\u539f\u56e0\u8df3\u51fa\uff0c\u6216\u8005\u56fe\u4e0d\u8fde\u901a\u4e86\u4e3a\u6b62\uff0c\u8f93\u51fa\u603b\u6d41\u91cfflow\uff0c\u5c31\u662f\u6700\u5927\u5339\u914d\u6570\u4e86\n\n\u8d2a\u5fc3\u7684\u8bc1\u660e\u5f88\u663e\u7136\uff0c\u6211\u4eec\u6bcf\u6b21\u90fd\u662f\u53d6\u6700\u4f18\u8d70\uff0c\u800c\u4e14\u540e\u9762\u7684\u51b3\u7b56\u80af\u5b9a\u6ca1\u6709\u6211\u4f18\uff0c\u5c31\u8bc1\u5b8c\u4e86\n\n# Code:\n\n\u5199\u7684\u65f6\u5019\u6ce8\u610f\u7ec6\u8282\u554a......\u8fd9\u9898\u7ec6\u8282\u8d3c\u591a\uff0c\u4e00\u4e0d\u5c0f\u5fc3\u5c31\u96640\u6216\u8005mod0\u4e86\uff0c\u800c\u4e14\u5b9e\u73b0\u5206\u89e3\u8d28\u56e0\u6570\u7684\u65f6\u5019\u6ce8\u610f\uff0c\u5982\u679c\u4e00\u4e2a\u6570x\u5230\u4e86sqrt(x)\u90fd\u8fd8\u6ca1\u6709\u4e00\u4e2a\u8d28\u56e0\u6570\uff0c\u90a3\u4e48\u5b83\u80af\u5b9a\u662f\u4e2a\u8d28\u6570\n\n\u56e0\u6b64\u6211\u4eec\u53ea\u8981\u7b5b1e5\u7684\u7d20\u6570\u5c31\u591f\u4e86\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cassert>\n#define inf 1e15\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll re=0,flag=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){\n        if(ch=='-') flag=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9') re=(re<<1)+(re<<3)+ch-'0',ch=getchar();\n    return re*flag;\n}\nll cnt=-1,ans,flow,first[210],dis[210],vis[210],limit[210],pre[210];\nstruct edge{\n    ll to,next,w,cap;\n}a[100010];\ninline void add(ll u,ll v,ll w,ll cap){\n    a[++cnt]=(edge){v,first[u],w,cap};first[u]=cnt;\n    a[++cnt]=(edge){u,first[v],-w,0};first[v]=cnt;\n}\nbool spfa(ll s,ll t){\n    ll q[5010]={0},head=0,tail=1,u,v,w,i;\n    for(i=s;i<=t;i++) dis[i]=-inf;\n    memset(vis,0,sizeof(vis));\n    memset(pre,-1,sizeof(pre));memset(limit,0,sizeof(limit));\n    q[0]=s;vis[s]=1;dis[s]=0;limit[s]=inf;\n    while(head<tail){\n        u=q[head++];vis[u]=0;\n        for(i=first[u];~i;i=a[i].next){\n            v=a[i].to;w=a[i].w;\n            if(a[i].cap&&(dis[v]<dis[u]+w)){//\u6ce8\u610f\u662f\u6700\u957f\u8def\n                dis[v]=dis[u]+w;\n                limit[v]=min(limit[u],a[i].cap);\n                pre[v]=i;\n                if(!vis[v]) q[tail++]=v,vis[v]=1;\n            }\n        }\n    }\n    return dis[t]!=-inf;\n}\nll n,A[210],B[210],C[210],col[210];\nll tot=0,pri[100010],v[100010]={0};\nvoid init(){//\u7ebf\u7b5b\n    ll i,j,k;v[1]=1;\n    for(i=2;i<=100000;i++){\n        if(!v[i]) pri[++tot]=i;\n        for(j=1;j<=tot;j++){\n            k=i*pri[j];if(k>100000) break;\n            v[k]=1;\n            if((i%pri[j])==0) break;\n        }\n    }\n}\nll cntprime(ll x){\n    ll re=0,c=1;\n    while(x>1&&c<=tot){\n        while((x%pri[c])==0) x/=pri[c],re++;\n        c++;\n    }\n    if((c==tot+1)&&(x>1)) return 1;//\u5904\u7406\u7279\u6b8a\u60c5\u51b5\n    return re;\n}\nint main(){\n    memset(first,-1,sizeof(first));\n    ll i,j;init();\n    n=read();\n    for(i=1;i<=n;i++) A[i]=read(),col[i]=cntprime(A[i]);\n    for(i=1;i<=n;i++){\n        B[i]=read();\n        if(col[i]%2) add(0,i,0,B[i]);\n        else add(i,n+1,0,B[i]);\n    }\n    for(i=1;i<=n;i++) C[i]=read();\n    for(i=1;i<=n;i++){\n        for(j=i+1;j<=n;j++){\n            if((((A[i]%A[j])==0)&&(col[i]==col[j]+1))||(((A[j]%A[i])==0)&&(col[j]==col[i]+1))){\n                if(col[i]%2) add(i,j,C[i]*C[j],inf);\n                else add(j,i,C[i]*C[j],inf);\n            }\n        }\n    }\n    ll tmp,u;\n    while(1){\n        if(!spfa(0,n+1)) break;\n        if(dis[n+1]+ans<0) break;\n        if(dis[n+1]>=0) tmp=limit[n+1];//\u6ce8\u610f\u8fd9\u91cc>=\u4e0d\u8981\u5199\u6210>......\u6211\u88ab\u8fd9\u4e2a\u5751\u4e861h\u554a\u554a\u554a\u554a\n        else tmp=min(limit[n+1],ans/(-dis[n+1]));\n        ans+=dis[n+1]*tmp;flow+=tmp;\n        for(u=n+1;~pre[u];u=a[pre[u]^1].to){\n            a[pre[u]].cap-=tmp;a[pre[u]^1].cap+=tmp;\n        }\n    }\n    printf(\"%lld\\n\",flow);\n}\n```",
        "postTime": 1523029074,
        "uid": 27753,
        "name": "Orion545",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4068 \u3010[SDOI2016]\u6570\u5b57\u914d\u5bf9\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4068)\n\n\u840c\u65b0\u521a\u5b66\u8d39\u7528\u7624\uff0c\u6240\u4ee5\u672c\u7bc7\u9898\u89e3\u4f1a\u5c3d\u91cf\u8bb2\u5f97\u8be6\u7ec6\u4e00\u4e9b![](//\u56fe.tk/q)\n\n\u524d\u7f6e\u829d\u58eb\uff1a\n\n- \u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u3002\n- ~~\u8d28\u56e0\u6570\u5206\u89e3\u3002~~\n\n\u8bbe $cnt_i$ \u4e3a $a_i$ \u8d28\u56e0\u6570\u5206\u89e3\u540e\u5404\u9879\u6307\u6570\u4e4b\u548c\u3002\n\n\u90a3\u4e48 $a_i$ \u548c $a_j$ \u80fd\u5339\u914d\u7684\u6761\u4ef6\u4e3a\uff0c$a_i\\bmod a_j=0$ \u4e14 $cnt_i=cnt_j+1$\u3002\n\n\u7a0d\u5fae\u89e3\u91ca\u4e00\u4e0b\uff0c\u82e5 $a_i$ \u662f $a_j$ \u7684\u500d\u6570\uff0c\u90a3\u4e48 $a_i$ \u80af\u5b9a\u5305\u542b $a_j$ \u7684\u6240\u6709\u8d28\u56e0\u6570\uff0c\u800c\u53c8\u6709\u6761\u4ef6 $cnt_i=cnt_j+1$\uff0c\u8bf4\u660e $a_i$ \u5728 $a_j$ \u7684\u57fa\u7840\u4e0a\u53ea\u591a\u4e86\u4e00\u4e2a\u8d28\u56e0\u6570\uff0c\u6240\u4ee5 $\\frac{a_i}{a_j}$ \u662f\u4e00\u4e2a\u8d28\u6570\u3002\n\n\u73b0\u5728\u8003\u8651\u5efa\u56fe\uff0c\u6211\u4eec\u6839\u636e $cnt$ \u7684\u5947\u5076\u6027\u5c06 $a_i$ \u5206\u6210\u4e24\u5806\u513f\uff1a$cnt_i$ \u4e3a\u5947\u6570\u7684\u653e\u5728\u5de6\u8fb9\uff0c$cnt_i$ \u4e3a\u5076\u6570\u7684\u653e\u5728\u53f3\u8fb9\u3002\n\n\u8003\u8651\u5230\u3010\u4e00\u4e2a\u6570\u53ea\u80fd\u5339\u914d\u4e00\u6b21\u3011\u8fd9\u4e00\u6761\u4ef6\uff0c\u6211\u4eec\u628a\u6d41\u91cf\u8bbe\u6210 $b_i$\u3002\n\n\n\u65b0\u5efa\u4e00\u4e2a\u865a\u62df\u6c47\u70b9 $s$\uff0c\u5c06 $s$ \u4e0e\u5de6\u8fb9\u7684\u6bcf\u4e00\u4e2a\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $b_i$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n\u65b0\u5efa\u4e00\u4e2a\u865a\u62df\u6c47\u70b9 $t$\uff0c\u5c06\u53f3\u8fb9\u7684\u6bcf\u4e00\u4e2a\u70b9\u4e0e $t$ \u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $b_i$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n**\u901a\u8fc7\u8fd9\u6837\u5efa\u56fe\uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e00\u4e2a $a_i$ \u6700\u591a\u4f7f\u7528 $b_i$ \u6b21\u3002**\n\n\u4e24\u8fb9\u7684\u70b9\u5c31\u66b4\u529b\u5efa\u56fe\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u53ef\u4ee5\u5339\u914d\u7684\u70b9 $i,j$\uff0c\u8fde\u4e00\u6761 \u4ece $i$ \u5230 $j$\uff0c\u5bb9\u91cf\u4e3a $\\infty$\uff0c\u8d39\u7528\u4e3a $c_i\\times c_j$ \u7684\u8fb9\u3002\n\n\u4e2d\u95f4\u90e8\u5206\u7684\u5efa\u56fe\u5c31\u5df2\u7ecf\u4e0d\u7528\u8003\u8651 $b_i$ \u7684\u9650\u5236\u4e86\uff0c\u56e0\u4e3a\u4e24\u8fb9\u7684\u8fde\u8fb9\u90fd\u5df2\u7ecf\u8003\u8651\u5728\u5185\u4e86\u3002\u6240\u4ee5\u5bb9\u91cf\u8bbe\u4e3a\u65e0\u9650\u5927\u3002\n\n\n\u90a3\u4e48\u73b0\u5728\u5c31\u53ea\u5269\u4e0b\u3010\u4ef7\u503c\u4e4b\u548c\u4e0d\u5c0f\u4e8e $0$\u3011 \u8fd9\u4e00\u6761\u4ef6\u4e86\u3002\n\n\u8fd9\u5c31\u9700\u8981\u5bf9\u8d39\u7528\u6d41\u6539\u52a8\u4e00\u4e0b\u3002\n\n\u8003\u8651\u8d2a\u5fc3\u3002\u6211\u4eec\u6bcf\u6b21\u7528 SPFA \u8dd1\u6700\u957f\u8def\uff0c\u90a3\u4e48\u6bcf\u6b21 SPFA \u8dd1\u5230\u7ec8\u70b9\u7684\u6700\u957f\u8def\u80af\u5b9a\u662f\u4e0b\u964d\u7684\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u5f53\u524d\u7684\u8fd9\u4e00\u6761\u589e\u5149\u8def\uff0c\u5728\u4ef7\u503c\u548c\u4e0d\u5c0f\u4e8e $0$ \u7684\u60c5\u51b5\u4e0b\u5c3d\u53ef\u80fd\u591a\u7684\u6dfb\u52a0\u6d41\u91cf\uff0c\u76f4\u5230\u4ef7\u503c\u548c\u5c0f\u4e8e $0$\u3002\n\n\u5751\u70b9\uff1a\u5f00 long long\uff0c\u8fb9\u6570\u7ec4\u522b\u5f00\u5c0f\u3002\n\n\u8d34\u4e00\u4e0b\u5de8\u4e11\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<ctime>\n#include<cmath>\n#include<cstdlib>\n#include<climits>\n#include<queue>\n#include<vector>\nusing namespace std;\ntypedef long long ll;\nconst int MAXN(210);\nconst ll INF(1e18);\nint n,a[MAXN],b[MAXN];\nll c[MAXN];\nint cnt[MAXN];\nint s,t;\ninline ll Min(ll x,ll y){return x<y?x:y;}\ninline int fenjie(int x)\n{\n\tint res(0),N=sqrt(x+0.5);\n\tfor(register int i=2;i<=N;i++)\n\t\twhile(x%i==0) ++res,x/=i;\n\tif(x>1) ++res;\n\treturn res;\n}\nstruct E{int to,nxt;ll cost,flow;};\nE edge[MAXN*MAXN];\nint head[MAXN],tot=1;\ninline void add_edge(int u,int v,ll f,ll w)\n{\n\tedge[++tot].nxt=head[u];\n\thead[u]=tot;\n\tedge[tot].to=v;\n\tedge[tot].flow=f;\n\tedge[tot].cost=w;\n\treturn;\n}\nll dis[MAXN],flow[MAXN],Cost,Flow;\nint pre[MAXN],pos[MAXN];\nbool inq[MAXN];\nqueue<int>q;\ninline bool SPFA()\n{\n\tfor(register int i=s;i<=t;i++)\n\t\tdis[i]=-INF,flow[i]=INF,inq[i]=false;\n\tq.push(s);\n\tdis[s]=0;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tinq[u]=false;\n\t\tfor(register int i=head[u];i;i=edge[i].nxt)\n\t\t{\n\t\t\tE e=edge[i];\n\t\t\tif(dis[e.to]<dis[u]+e.cost&&e.flow)\n\t\t\t{\n\t\t\t\tdis[e.to]=dis[u]+e.cost;\n\t\t\t\tflow[e.to]=Min(flow[u],e.flow);\n\t\t\t\tpre[e.to]=u,pos[e.to]=i;\n\t\t\t\tif(!inq[e.to]) q.push(e.to),inq[e.to]=true;\n\t\t\t}\n\t\t}\n\t} \n\treturn dis[t]>-INF;\n}\ninline bool MCMF()\n{\n\tif(!SPFA()) return false;\n\tll now=dis[t]*flow[t];\n\tif(Cost+now>=0)\n\t{\n\t\tCost+=now;\n\t\tFlow+=flow[t];\n\t\tfor(register int u=t;u!=s;u=pre[u])\n\t\t{\n\t\t\tint p=pos[u];\n\t\t\tedge[p].flow-=flow[t];\n\t\t\tedge[p^1].flow+=flow[t];\n\t\t}\n\t\treturn true;\n\t}\n\telse return Flow+=Cost/(-dis[t]),false;\t\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\ts=0,t=n+1;\n\tfor(register int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tfor(register int i=1;i<=n;i++) scanf(\"%d\",&b[i]);\n\tfor(register int i=1;i<=n;i++) scanf(\"%lld\",&c[i]);\n\tfor(register int i=1;i<=n;i++) cnt[i]=fenjie(a[i]);\n\tfor(register int i=1;i<=n;i++)\n\t\tif(cnt[i]&1) add_edge(s,i,b[i],0),add_edge(i,s,0,0);\n\t\telse add_edge(i,t,b[i],0),add_edge(t,i,0,0);\n\tfor(register int i=1;i<=n;i++) if(cnt[i]&1)\n\t\tfor(register int j=1;j<=n;j++)\n\t\t\tif((a[i]%a[j]==0&&cnt[i]==cnt[j]+1)||(a[j]%a[i]==0&&cnt[j]==cnt[i]+1))\n\t\t\t\tadd_edge(i,j,INF,c[i]*c[j]),add_edge(j,i,0,-c[i]*c[j]);\n\twhile(MCMF());\n\tprintf(\"%lld\\n\",Flow);\n\treturn 0;\n}\n```\n\n$$\\texttt{The End.by UF}$$",
        "postTime": 1647403214,
        "uid": 360511,
        "name": "UperFicial",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u3010P4068 [SDOI2016]\u6570\u5b57\u914d\u5bf9\u3011"
    },
    {
        "content": "## [\u9898\u610f](https://www.luogu.com.cn/problem/P4068)\n\n\u770b\u89c1\u914d\u5bf9\u6570\u6700\u591a\uff0c\u60f3\u5230\u8fd9\u662f\u6700\u5927\u6d41\u3002\u770b\u5230\u4ee3\u4ef7\uff0c\u60f3\u5230\u8fd9\u662f\u6700\u5927\u8d39\u7528\u6d41\u3002\n\u4e8e\u662f\u8fd9\u9898\u662f\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u3002  \n~~\u505a\u5b8c\u4e86\uff0c\u6492\u82b1\uff01~~\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u9898\u6ca1\u6709\u660e\u663e\u7684\u7ec4\u522b\u4e4b\u5206\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u5efa\u56fe\u65f6\u8c01\u8fde\u6e90\u70b9\u8c01\u8fde\u6c47\u70b9\u3002\n\n\u518d\u6b21\u89c2\u5bdf\u9898\u4e2d\u7ed9\u51fa\u7684\u914d\u5bf9\u7684\u6761\u4ef6\uff1a$a_i$\u662f$a_j$\u7684\u500d\u6570\u4e14\u6ee1\u8db3$\\frac{a_i}{a_j}\\in prime$\uff0c\u5373$a_i=k*a_j,k\\in prime$\u3002\n\n\u8bbe$cnt_x$\u8868\u793a$x$\u8d28\u56e0\u6570\u5206\u89e3\u540e\u6307\u6570\u4e4b\u548c\uff0c\u5982$cnt_{12}=3$\uff0c\u56e0\u4e3a$12=3^1*2^2,1+2=3$\u3002\n\n\u6211\u4eec\u53d1\u73b0\u9898\u4e2d\u6761\u4ef6\u53d8\u4e3a\uff1a$a_i$\u662f$a_j$\u7684\u500d\u6570\u4e14\u6ee1\u8db3$cnt_{a_i}=cnt_{a_j}+1!!!$\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u6309\u7167$cnt_{a_i}$\u7684\u5947\u5076\u6027\u5bf9$i$\u5206\u7c7b\uff0c\u5947\u6570\u8fde\u6e90\u70b9\uff0c\u5076\u6570\u8fde\u6c47\u70b9\uff0c\u5bb9\u91cf\u90fd\u4e3a$b_i$\uff0c\u8d39\u7528\u4e3a$0$\u3002\n\n\u4e4b\u540e\u5c31\u679a\u4e3e\u6bcf\u5bf9$(i,j)$\uff0c\u6ee1\u8db3\u6761\u4ef6\u5c31\u4ece$cnt$\u4e3a\u5947\u6570\u7684\u5411\u53e6\u4e00\u4e2a\u8fde\u5bb9\u91cf\u4e3a$b_i*b_j$\uff0c\u8d39\u7528\u4e3a$c_i*c_j$\u7684\u8fb9\u5373\u53ef\u3002\n\n\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u9650\u5236\u9898\u5c31\u5df2\u7ecf\u505a\u5b8c\u4e86\uff1a\u201c\u5728\u83b7\u5f97\u7684\u4ef7\u503c\u603b\u548c\u4e0d\u5c0f\u4e8e$0$\u7684\u524d\u63d0\u4e0b\u201d\n\n\u4e3a\u4e86\u5904\u7406\u8fd9\u4e2a\u9650\u5236\uff0c\u6211\u4eec\u8003\u8651$Dinic$\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u6bcf\u6b21$spfa$\u7684\u6c42\u51fa\u7684\u6700\u957f\u8def\u5fc5\u5b9a\u662f\u9012\u51cf\u7684\uff0c\u56e0\u4e3a\u8fd9\u662f$Dinic$\u590d\u6742\u5ea6\u7684\u4fdd\u8bc1\u3002\uff08\u53ef\u4ee5\u53bb\u770b$Dinic$\u7684\u590d\u6742\u5ea6\u8bc1\u660e\uff0c\u5c31\u662f\u7528\u6700\u957f/\u77ed\u8def\u603b\u662f\u53d8\u5f97\u66f4\u5dee\u8bc1\u7684\uff09\n\n\u4e8e\u662f\u6211\u4eec\u6bcf\u6b21\u6c42\u51fa\u8d39\u7528\u540e\u5c31\u5224\u65ad\u4e0b\u52a0\u4e0a\u662f\u5426\u4f1a\u5c0f\u4e8e$0$\uff0c\u4e0d\u5c0f\u4e8e$0$\u5c31\u76f4\u63a5\u52a0\u4e0a\uff0c\u4e0d\u7136\u5c31\u53ea\u52a0\u52a0\u4e0a\u521a\u597d\u4e0d\u5c0f\u4e8e$0$\u7684\u90a3\u4e00\u90e8\u5206\uff0c\u4e4b\u540e$break$\u6389\u3002\n\ncode:\n```\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=210;\nconst ll inf=1e18;\nint n,cnt_edge=1,S,T;\nint a[maxn],b[maxn],c[maxn],head[maxn],cnt[maxn];\nll dis[maxn];\nbool vis_prime[100010],vis[maxn];\nvector<int>prime;\nstruct edge{int to,nxt;ll flow,cost;}e[(maxn*maxn)<<2];\ninline ll read()\n{\n\tchar c=getchar();ll res=0,f=1;\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9')res=res*10+c-'0',c=getchar();\n\treturn res*f;\n}\ninline void add(int u,int v,ll w,ll c)\n{\n\te[++cnt_edge].nxt=head[u];\n\thead[u]=cnt_edge;\n\te[cnt_edge].to=v;\n\te[cnt_edge].flow=w;\n\te[cnt_edge].cost=c;\n}\ninline void addflow(int u,int v,ll w,ll c){add(u,v,w,c);add(v,u,0,-c);}\ninline void pre_work()\n{\n\tvis[1]=1;\n\tfor(int i=2;i<=100000;i++)\n\t{\n\t\tif(!vis_prime[i])prime.push_back(i);\n\t\tfor(unsigned int j=0;j<prime.size()&&i*prime[j]<=100000;j++)\n\t\t{\n\t\t\tvis_prime[i*prime[j]]=1;\n\t\t\tif(i%prime[j]==0)break;\n\t\t}\n\t}\n}\ninline bool spfa()\n{\n\tmemset(vis,0,sizeof(vis));\n\tfor(int i=S;i<=T;i++)dis[i]=-inf;\n\tqueue<int>q;\n\tq.push(S);dis[S]=0;vis[S]=1;\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();q.pop();vis[x]=0;\n\t\tfor(int i=head[x];i;i=e[i].nxt)\n\t\t{\n\t\t\tint y=e[i].to;\n\t\t\tif(dis[y]<dis[x]+e[i].cost&&e[i].flow>0)\n\t\t\t{\n\t\t\t\tdis[y]=dis[x]+e[i].cost;\n\t\t\t\tif(!vis[y])q.push(y),vis[y]=1;\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[T]!=-inf;\n}\nll dfs(int x,ll lim)\n{\n\tvis[x]=1;\n\tif(x==T||lim<=0)return lim;\n\tll res=lim;\n\tfor(int i=head[x];i;i=e[i].nxt)\n\t{\n\t\tint y=e[i].to;\n\t\tif(dis[y]!=dis[x]+e[i].cost||e[i].flow<=0||vis[y])continue;\n\t\tll tmp=dfs(y,min(res,e[i].flow));\n\t\tres-=tmp;\n\t\te[i].flow-=tmp;e[i^1].flow+=tmp;\n\t\tif(res<=0)break;\n\t}\n\treturn lim-res;\n}\ninline ll Dinic()\n{\n\tll res=0,cost=0;\n\twhile(spfa())\n\t{\n\t\tll flow=dfs(S,inf);\n\t\tif(cost+flow*dis[T]>=0)res+=flow,cost+=flow*dis[T];\n\t\telse \n\t\t{\n\t\t\tres+=min(flow,cost/(-dis[T]));\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn res;\n}\nint main()\n{\n\t//freopen(\"test.in\",\"r\",stdin);\n\t//freopen(\"test.out\",\"w\",stdout);\n\tpre_work();\n\tn=read();\n\tfor(int i=1;i<=n;i++)a[i]=read();\n\tfor(int i=1;i<=n;i++)b[i]=read();\n\tfor(int i=1;i<=n;i++)c[i]=read();\n\tfor(int i=1;i<=n;i++)\n\t{\t\n\t\tint tmp=a[i];\n\t\tfor(unsigned int j=0;j<prime.size()&&1ll*prime[j]*prime[j]<=tmp;j++)\n\t\t\twhile(tmp%prime[j]==0)cnt[i]++,tmp/=prime[j];\n\t\tif(tmp>1)cnt[i]++;\n\t}\n\tS=0,T=n+1;\n\tfor(int i=1;i<=n;i++)\n\t\tif(cnt[i]&1)addflow(S,i,b[i],0);\n\t\telse addflow(i,T,b[i],0);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=i+1;j<=n;j++)\n\t\t{\n\t\t\tint x=a[i],y=a[j];\n\t\t\tif(((x%y!=0)&&(y%x!=0))||abs(cnt[i]-cnt[j])!=1)continue;\n\t\t\tx=i,y=j;\n\t\t\tif(cnt[y]&1)swap(x,y);\n\t\t\taddflow(x,y,1ll*b[x]*b[y],1ll*c[x]*c[y]);\n\t\t}\n\tprintf(\"%lld\",Dinic());\n\treturn 0;\n}\n```\n",
        "postTime": 1577454088,
        "uid": 145441,
        "name": "nofind",
        "ccfLevel": 6,
        "title": "P4068 [SDOI2016]\u6570\u5b57\u914d\u5bf9(\u8d39\u7528\u6d41)"
    },
    {
        "content": "# \u5e7f\u544a\n\n[\u849f\u84bb\u7684blog](http://www.luogu.com.cn/blog/111990/#)\n\n# \u6b63\u6587\n\n\u9996\u5148\u770b\u5b8c\u9898\uff0c\u672c\u849f\u84bb\u4e5f\u662f\u4e00\u70b9\u601d\u8def\u4e5f\u6ca1\u6709\uff0c\u76f4\u5230\u770b\u5230\u4e0b\u9762\u7684\u7279\u6b8a\u6570\u636e\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/gnkmxy0o.png)\n\n~~\u7136\u800c\u5e76\u6ca1\u6709\u4ec0\u4e48\u5375\u7528~~\n\n\u6ce8\u610f\u5230\u90a3\u4e2a\u7279\u6b8a\u6570\u636e\u6ca1\u6709\uff1a$c_i>0$\uff0c\u8fd9\u4e2a\u6570\u636e\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u610f\u5473\u7740\u60f3\u9009\u591a\u5c11\u9009\u591a\u5c11\uff01\n\n\u90a3\u4e48\u600e\u4e48\u624d\u80fd\u591f\u77e5\u9053\u6700\u591a\u80fd\u9009\u591a\u5c11\u5462\uff1f\uff1f\uff1f\u6211\u4eec\u5e94\u8be5\u53ef\u4ee5\u5f88\u81ea\u7136\u5730\u60f3\u5230\u7528\u7f51\u8def\u6d41\uff1a\n\n### \u4e0a\u56fe\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/hkweddvj.png)\n\n\u9996\u5148\u628a\u6bcf\u4e00\u4e2a\u70b9\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u7136\u540e\u5de6\u90e8\u70b9\u4e0e\u6e90\u70b9\u8fde\u8fb9\uff08**\u7eff\u8272\u8fb9**\uff09\uff0c\u5bb9\u91cf\u4e3a$b[i]$\uff0c\u8d39\u7528\u4e3a$0$\uff1b\u53f3\u90e8\u70b9\u4e0e\u6c47\u70b9\u8fde\u8fb9\uff08**\u84dd\u8272\u8fb9**\uff09\uff0c\u5bb9\u91cf\u4e3a$b[i]$\uff0c\u8d39\u7528\u4e3a$0$\u3002\u6700\u540e\u679a\u4e3e$i$,$j$\u3002\u82e5\u6ee1\u8db3$a[i]$\u662f$a[j]$\u7684\u500d\u6570\u4e14$a[i]/a[j]$\u4e3a\u8d28\u6570\uff0c\u5c31\u628a\u5de6\u90e8\u70b9\u7684\u7b2ci\u4e2a\u4e0e\u53f3\u90e8\u70b9\u7684\u7b2c$j$\u4e2a\u8fde\u8fb9\uff08**\u7ea2\u8272\u8fb9**\uff09\uff0c\u5bb9\u91cf\u4e3a$inf$\uff0c\u8d39\u7528\u4e3a$c[i] \\times c[j]$\u3002\n\n\u6700\u540e\u8dd1\u4e00\u8fb9**\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41**\uff0c\u7b54\u6848\u662f$maxflow>>1$\uff08\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8981$>>1$,\u540e\u9762\u4f1a\u8bb2\uff09\u3002\n\n\u7136\u540e\u5bf9\u4e8e$100\\%$\u7684\u6570\u636e\uff0c\u5c31\u53ea\u5269\u4e0b\u4e24\u4e2a\u95ee\u9898\u4e86\uff1a\n\n## \u4e00\uff1a\u5224\u65ad$a[i]/a[j]$\u662f\u5426\u4e3a\u8d28\u6570\n\n\u8fd9\u91cc\u6211\u4eec\u7528$millar \\_ rabbin$\u5224\u7d20\u6570\u6cd5\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u66b4\u529b\u679a\u4e3e\u5230$\\sqrt{n}$\u7684\u529e\u6cd5\uff0c\u53ea\u662f$millar \\_ rabbin$\u8f83\u5feb\uff09\n\n```cpp\ninline ll qmi(ll x,ll y,ll p)//\u5feb\u901f\u5e42\n{\n\tif(!y)return 1;\n\tll t=qmi(x,y>>1,p);\n\tif(y&1)return t*t%p*(x%p)%p;\n\treturn t*t%p;\n}\n\ninline bool millar_rabbin(int n)//millar_rabbin\u7684\u51fd\u6570\uff0c\u82e5n\u4e3a\u8d28\u6570\u5219\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\n{\n\tif(n==0||n==1)return 0;\n\tif(n==2)return 1;\n\tif(!(n&1))return 0;\n\tint u=n-1,cnt=0;\n\twhile(!(u&1))++cnt,u>>=1;\n\tll x,y;\n\tfor(re int i=1;i<=100;++i)//\u9a8c\u8bc1100\u6b21\n\t{\n\t\tint a=rand()%(n-1)+1;\n\t\tx=qmi(a,u,n);\n\t\tfor(re int j=1;j<=cnt;++j)\n\t\t{\n\t\t\ty=x*x%n;\n\t\t\tif(y==1&&x!=1&&x!=n-1)return 0;\n\t\t\tx=y;\n\t\t}\n\t\tif(x!=1)return 0;\n\t}\n\treturn 1;\n}\n```\n\n## \u4e8c\uff1a\u89e3\u51b3\u5728\u8d39\u7528$>0$\u7684\u60c5\u51b5\u4e0b\u7684\u6700\u5927\u6d41\n\n\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u6211\u4eec\u6765\u89c2\u5bdf\u4e00\u4e0b\u6c42\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u7684$dfs$\u51fd\u6570\uff1a\n\n```cpp\n//\u6ce8\u610f\u6253\u659c\u6760\u7684\u51e0\u884c\u4ee3\u7801\ninline int dfs(int now,int limit)\n{\n\tif(now==t||!limit)//\n\t{\n\t\tfeiyong+=dis[now]*limit;//\n\t\treturn limit;//\n\t}\n\tint flow=0,v,f;\n\tvis[now]=1;\n\tfor(re int &i=cur[now];i;i=edge[i].next)\n\t{\n\t\tv=edge[i].to;\n\t\tif(edge[i].f&&dis[v]==dis[now]+edge[i].w&&!vis[v])\n\t\t{\n\t\t\tf=dfs(v,min(limit,edge[i].f));\n\t\t\tedge[i].f-=f;\n\t\t\tedge[i^1].f+=f;\n\t\t\tlimit-=f;\n\t\t\tflow+=f;\n\t\t\tif(!limit)break;\n\t\t}\n\t}\n\tif(!flow)dis[now]=0;\n\treturn flow;\n}\n\ninline void dinic()\n{\n\twhile(spfa())maxflow+=dfs(s,inf);\n}\n```\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53\u6211\u4eec\u7684$feiyong<0$\u65f6\uff0c\u8bf4\u660e\u7684\u6211\u4eec\u7684\u6d41\u91cf\u592a\u5927\u4e86\uff0c\u5373\u539f\u6765\u7684$feiyong$\u4e0d\u591f\u6211\u4eec\u6765\u589e\u5e7f\u6d41\u91cf\uff0c\u800c\u901a\u8fc7$dfs$\u51fd\u6570\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a\n\n## \u6bcf\u589e\u52a0$1$\u7684\u6d41\u91cf\uff0c\u8d39\u7528\u5c31\u4f1a\u51cf\u5c11$(-dis[t])$\n\n\u6240\u4ee5\u5728\u6211\u4eec\u53d1\u73b0$feiyong<0$\u7684\u65f6\u5019\uff0c\u4fdd\u5b58\u4e00\u4e0b\u524d\u4e00\u6b21\u7684\u8d39\u7528\uff0c\u518d\u7528\u524d\u4e00\u6b21\u7684\u6d41\u91cf\u6765\u6362\u53d6\u6d41\u91cf\uff0c\u5373\u6539\u4e00\u4e0b$dinic$\u51fd\u6570\uff1a\n\n```cpp\ninline void dinic()\n{\n\twhile(spfa())\n\t{\n\t\tll temp=feiyong;\n\t\tint flow=dfs(s,inf);\n\t\tif(feiyong<0)//\u8d39\u7528\u5c0f\u4e8e0\u4e86\uff0c\u8bf4\u660e\u6d41\u91cf\u592a\u5927\u4e86 \n\t\t{\n\t\t\tmaxflow+=temp/(-dis[t]);//\u628a\u539f\u6765\u6b63\u7684\u8d39\u7528\u7528\u6765\u6362\u6d41\u91cf\uff0c\u80fd\u6362\u591a\u5c11\u662f\u591a\u5c11 \n\t\t\treturn;\n\t\t}\n\t\tmaxflow+=flow;\n\t}\n}\n```\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u6700\u96be\u7684\u5730\u65b9\u4e5f\u5c31\u88ab\u6211\u4eec\u89e3\u51b3\u4e86\uff08~~\u81ea\u8c6a\u611f\u6ee1\u6ee1~~\uff09\n\n## \u6700\u540e\u6709\u4e00\u4e9b\u7ec6\u8282\uff1a\n\n1.\u662f$maxflow+=last \\_ feiyong/(-dis[t])$\uff0c\u56e0\u4e3a$dis[t]$\u672c\u6765\u662f\u8d1f\u6570\uff08\u4e0d\u7136$feiyong$\u600e\u4e48\u4f1a\u51cf\u5c11\u5462\uff09\uff0c\u6362\u6d41\u91cf\u7684\u65f6\u5019\u5c31\u8981\u5c06\u5176\u53d8\u4e3a\u6b63\u6570\u3002\n\n2.\u6700\u540e\u7684\u7b54\u6848\u662f$maxflow>>1$\uff0c\u56e0\u4e3a$a[i]$\u548c$a[j]$\u8fde\u63a5\u4e86\u8fb9\uff0c$a[j]$\u548c$a[i]$\u4e5f\u8fde\u63a5\u4e86\u8fb9\uff0c\u76f8\u5f53\u4e8e\u591a\u8fde\u63a5\u4e86\u4e00\u6761\u8fb9\uff0c\u5c06\u6d41\u91cf\u548c\u8d39\u7528\u90fd$\\times 2$\uff0c\u6240\u4ee5\u6700\u540e\u7684\u7b54\u6848\u662f$maxflow>>1$\u3002\n\n\u6700\u540e\u4e0a\u5b8c\u6574\u4ee3\u7801\uff1a\n\n## code:\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\n#define re register\n#define ll long long\n#define N 200\n#define inf 0x7f7f7f7f\n#define infll 0x7f7f7f7f7f7f7f7fll\n\nstruct ed{\n\tint to,next,f;\n\tll w;\n}edge[N*N*2+10];int tot=1;\nint head[N*2+10],cur[N*2+10];\n\ninline void adde_double(int u,int v,int f,ll w)\n{\n//\tprintf(\"u==%d v==%d f==%d w==%lld\\n\",u,v,f,w);\n\tedge[++tot].to=v;\n\tedge[tot].next=head[u];\n\tedge[tot].f=f;\n\tedge[tot].w=w;\n\thead[u]=tot;\n\n\tedge[++tot].to=u;\n\tedge[tot].next=head[v];\n\tedge[tot].f=0;\n\tedge[tot].w=-w;\n\thead[v]=tot;\n}\n\nint n,m,s,t;\nll dis[N*2+10];\nbool vis[N*2+10];\nqueue<int>q;\n\ninline bool spfa()\n{\n\tmemset(vis,0,sizeof(vis));\n\twhile(!q.empty())q.pop();\n\tfor(re int i=s;i<=t;++i)dis[i]=-infll;\n\tfor(re int i=s;i<=t;++i)cur[i]=head[i];\n\tdis[s]=0;q.push(s);vis[s]=1;\n\twhile(!q.empty())\n\t{\n\t\tint now=q.front();q.pop();vis[now]=0;\n\t\tfor(re int i=head[now];i;i=edge[i].next)\n\t\t{\n\t\t\tint v=edge[i].to;\n\t\t\tif(edge[i].f&&dis[v]<dis[now]+edge[i].w)\n\t\t\t{\n\t\t\t\tdis[v]=dis[now]+edge[i].w;\n\t\t\t\tif(!vis[v])q.push(v),vis[v]=1;\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[t]!=-infll;\n}\n\nll feiyong;\n\ninline int dfs(int now,int limit)\n{\n\tif(now==t||!limit)\n\t{\n\t\tfeiyong+=dis[now]*limit;\n\t\treturn limit;\n\t}\n\tint flow=0,v,f;\n\tvis[now]=1;\n\tfor(re int &i=cur[now];i;i=edge[i].next)\n\t{\n\t\tv=edge[i].to;\n\t\tif(edge[i].f&&dis[v]==dis[now]+edge[i].w&&!vis[v])\n\t\t{\n\t\t\tf=dfs(v,min(limit,edge[i].f));\n\t\t\tedge[i].f-=f;\n\t\t\tedge[i^1].f+=f;\n\t\t\tlimit-=f;\n\t\t\tflow+=f;\n\t\t\tif(!limit)break;\n\t\t}\n\t}\n\tif(!flow)dis[now]=0;\n\treturn flow;\n}\n\nint a[N+10],b[N+10],c[N+10],maxflow;\n\ninline void dinic()\n{\n\twhile(spfa())\n\t{\n\t\tll temp=feiyong;\n\t\tint flow=dfs(s,inf);\n\t\tif(feiyong<0)//\u8d39\u7528\u5c0f\u4e8e0\u4e86\uff0c\u8bf4\u660e\u6d41\u91cf\u592a\u5927\u4e86 \n\t\t{\n\t\t\tmaxflow+=temp/(-dis[t]);//\u628a\u539f\u6765\u6b63\u7684\u8d39\u7528\u7528\u6765\u6362\u6d41\u91cf\uff0c\u80fd\u6362\u591a\u5c11\u662f\u591a\u5c11 \n\t\t\treturn;\n\t\t}\n\t\tmaxflow+=flow;\n\t}\n}\n\ninline ll qmi(ll x,ll y,ll p)\n{\n\tif(!y)return 1;\n\tll t=qmi(x,y>>1,p);\n\tif(y&1)return t*t%p*(x%p)%p;\n\treturn t*t%p;\n}\n\ninline bool millar_rabbin(int n)\n{\n\tif(n==0||n==1)return 0;\n\tif(n==2)return 1;\n\tif(!(n&1))return 0;\n\tint u=n-1,cnt=0;\n\twhile(!(u&1))++cnt,u>>=1;\n\tll x,y;\n\tfor(re int i=1;i<=100;++i)\n\t{\n\t\tint a=rand()%(n-1)+1;\n\t\tx=qmi(a,u,n);\n\t\tfor(re int j=1;j<=cnt;++j)\n\t\t{\n\t\t\ty=x*x%n;\n\t\t\tif(y==1&&x!=1&&x!=n-1)return 0;\n\t\t\tx=y;\n\t\t}\n\t\tif(x!=1)return 0;\n\t}\n\treturn 1;\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\ts=0,t=n*2+1;\n\tfor(re int i=1;i<=n;++i)scanf(\"%d\",&a[i]);\n\tfor(re int i=1;i<=n;++i)scanf(\"%d\",&b[i]),adde_double(s,i,b[i],0),adde_double(i+n,t,b[i],0);\n\tfor(re int i=1;i<=n;++i)scanf(\"%d\",&c[i]);\n\tfor(re int i=1;i<=n;++i)\n\t{\n\t\tfor(re int j=1;j<=n;++j)\n\t\t{\n\t\t\tint x=a[i],y=a[j];\n\t\t\tif(x>y)swap(x,y);\n\t\t\tif(y%x==0&&millar_rabbin(y/x))adde_double(i,j+n,inf,(ll)c[i]*(ll)c[j]);\n\t\t}\n\t}\n\tdinic();\n\tprintf(\"%d\\n\",maxflow/2);\n\treturn 0;\n}\n```",
        "postTime": 1568018350,
        "uid": 111990,
        "name": "\u849f\u84bb\u521d\u97f3\u30df\u30af",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4068 \u3010[SDOI2016]\u6570\u5b57\u914d\u5bf9\u3011"
    },
    {
        "content": "\u770b\u5230\u9898\u76ee\u60f3\u5230\u8d39\u7528\u6d41\u6a21\u578b\uff0c\u8981\u6c42\u4fdd\u8bc1\u8d39\u7528\u4e3a\u6b63\u65f6\u6d41\u91cf\u6700\u5927\u3002\n\n\u5148\u4e0d\u7ba1\u5177\u4f53\u600e\u4e48\u5efa\u6a21\uff0c\u4f46\u5728\u4fdd\u8bc1\u5f53\u524d\u53ef\u884c\u6d41\u6700\u5927\u8d39\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u8d39\u7528\u5177\u6709\u5355\u8c03\u6027\uff0c\u4e5f\u5c31\u662f\u53ef\u4ee5\u4e8c\u5206\u3002\n\n\u6bcf\u6b21\u7ed9\u5b9a\u4e00\u4e2a\u6d41\u91cf\u7684\u4e0a\u754c\uff0c\u5224\u65ad\u6b64\u65f6\u662f\u5426\u4e3a\u6b63\u3002\n\n\u9650\u5236\u6d41\u91cf\u9700\u8981\u5bf9\u6e90\u70b9\u62c6\u70b9\uff0c\u8fde\u8fb9\u5bb9\u91cf\u4e3a\u9650\u5236\u7684 $x$\u3002\u540c\u6837\u8981\u628a\u6240\u6709\u975e\u6e90\u6c47\u7684\u70b9\u62c6\u5f00\uff0c\u6e90\u70b9\u7684\u51fa\u70b9\u4e0e\u8fd9\u4e9b\u70b9\u7684\u5165\u70b9\u8fde\u5bb9\u91cf\u4e3a $b$ \u7684\u8fb9\uff0c\u53ef\u4ee5\u5339\u914d\u7684\u4e24\u4e2a\u70b9\u5bf9\u5e94\u8fde\u51fa\u70b9\u4e0e\u5165\u70b9\uff0c\u5bb9\u91cf\u65e0\u9650\u5927\uff0c\u5269\u4e0b\u5c31\u662f\u4e0e\u6c47\u70b9\u8fde\u65e0\u9650\u5927\u3002\n\n\u6c42\u6700\u5927\u8d39\u7528\uff0c\u53ef\u4ee5\u628a\u8d39\u7528\u8bbe\u4e3a\u8d1f\u8dd1\u6700\u5c0f\u8d39\u7528\uff0c\u8fd9\u91cc\u62c6\u70b9\u5c31\u53ef\u4ee5\u907f\u514d\u8d1f\u73af\u51fa\u73b0\uff0c\u540c\u65f6\u6ce8\u610f\u5230\u540c\u4e00\u79cd\u5339\u914d $(i,j)$ \u4f1a\u51fa\u73b0\u4e24\u6b21\uff0c\u56e0\u6b64\u7b54\u6848\u8981\u9664\u4ee5 $2$\u3002\n\n```cpp\nint n,m;\nint a[205],b[205],c[205];\nint S1,S2,T;\nstruct Graph{\n    struct edge{\n        int to,nxt;\n        ll lim,tmp,c;\n    }e[maxm<<1];\n    int head[maxn],cnt=1;\n    inline void add_edge(int u,int v,ll w,ll c){\n        e[++cnt].to=v,e[cnt].nxt=head[u],e[cnt].lim=w,e[cnt].tmp=w,e[cnt].c=c,head[u]=cnt;\n        e[++cnt].to=u,e[cnt].nxt=head[v],e[cnt].lim=0,e[cnt].tmp=0,e[cnt].c=-c,head[v]=cnt;\n    }\n    int pre[maxn];\n    ll dis[maxn];\n    bool vis[maxn];\n    inline void SPFA(){\n        queue<int> q;\n        memset(dis,0x3f,sizeof(dis));\n        memset(vis,0,sizeof(vis));\n        dis[S1]=0,vis[S1]=1;\n        q.push(S1);\n        while(!q.empty()){\n            int u=q.front();\n            q.pop();\n            vis[u]=0;\n            for(int i=head[u];i;i=e[i].nxt){\n                int v=e[i].to;\n                ll c=e[i].c;\n                if(dis[u]+c<dis[v]&&e[i].lim){\n                    dis[v]=dis[u]+c;\n                    pre[v]=i;\n                    if(vis[v]) continue;\n                    vis[v]=1;\n                    q.push(v);\n                }\n            }\n        }\n    }\n    inline pair<ll,ll> max_flow(int_fast64_t x){\n        e[2].lim=x,e[3].lim=0;\n        for(int i=4;i<=cnt;++i) e[i].lim=e[i].tmp;\n        ll flow=0,min_cost=0;\n        while(1){\n            SPFA();\n            if(dis[T]==maxxn) return make_pair(flow,min_cost);\n            ll mn=maxxn;\n            for(int u=T;u!=S1;u=e[pre[u]^1].to) mn=min(mn,e[pre[u]].lim);\n            flow+=mn;\n            for(int u=T;u!=S1;u=e[pre[u]^1].to){\n                min_cost+=e[pre[u]].c*mn;\n                e[pre[u]].lim-=mn,e[pre[u]^1].lim+=mn;\n            }\n        }\n    }\n}G;\n\ninline bool check_pr(int x){\n    for(int i=2;i*i<=x;++i){\n        if(x%i==0) return false;\n    }\n    return true;\n}\n\nint ans;\n\nint main(){\n    n=read();\n    S1=2*n+1,S2=2*n+2,T=2*n+3;\n    for(int i=1;i<=n;++i) a[i]=read();\n    for(int i=1;i<=n;++i) b[i]=read();\n    for(int i=1;i<=n;++i) c[i]=read();\n    G.add_edge(S1,S2,1e9,0);\n    for(int i=1;i<=n;++i){\n        G.add_edge(S2,i,b[i],0);\n        G.add_edge(i+n,T,b[i],0);\n    }\n    for(int i=1;i<=n;++i){\n        for(int j=i+1;j<=n;++j){\n            int x=a[i],y=a[j];\n            if(x==y) continue;\n            if(x<y) swap(x,y);\n            if(x%y) continue;\n            if(check_pr(x/y)){\n                G.add_edge(i,j+n,1e9,-1ll*c[i]*c[j]);\n                G.add_edge(j,i+n,1e9,-1ll*c[i]*c[j]);\n            } \n        }\n    }\n    int l=0,r=G.max_flow(1e9).first/2;\n    while(l<=r){\n        int mid=(l+r)>>1;\n        if(G.max_flow(mid*2).second<=0) ans=mid,l=mid+1;\n        else r=mid-1;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1670595094,
        "uid": 321177,
        "name": "SoyTony",
        "ccfLevel": 6,
        "title": "P4068 \u9898\u89e3"
    },
    {
        "content": "## \u600e\u4e48\u80fd\u4e0d\u7528$dinic$\u8dd1\u8d39\u7528\u6d41\u5462\n\u6b64\u9898\u601d\u8def\u5176\u4ed6\u5927\u4f6c\u8bb2\u7684\u5df2\u7ecf\u5f88\u6e05\u695a\u4e86\n\u6211\u6765\u91cd\u70b9\u8bb2\u4e00\u8bb2$dinic$\u8d39\u7528\u6d41\u7684\u5b9e\u73b0\n\nspfa\u90e8\u5206\n```cpp\ninline int spfa(){\n\tqueue<int>q;\n\tmemset(vis,0,sizeof(vis));\n\tfor(int i=0;i<=n+1;i++)d[i]=-inf;\n\td[s]=0;\n\tq.push(s);\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();vis[u]=0;\n\t\tfor(int i=head[u];i;i=edge[i].nxt){\n\t\t\tint v=edge[i].v;\n\t\t\tif(edge[i].w&&d[v]<d[u]+edge[i].c){\n\t\t\t\td[v]=d[u]+edge[i].c;\n\t\t\t\tif(!vis[v]){\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn d[t]>-inf;\n}\n```\n\u8fd9\u91cc\u53ea\u9700\u8981\u6ce8\u610f\u6e05\u7a7a$vis$\u6570\u7ec4\uff0c\u56e0\u4e3a\u8dd1$dinic$\u7684\u65f6\u5019\u8fd8\u8981\u7528\u5230$vis$\u6807\u8bb0\n\n\n$dinic$\u90e8\u5206\n```cpp\ninline int dinic(int u,int flow){\n\tif(u==t)return flow;\n\tint rest=flow,k;\n\tvis[u]=1;\n\tfor(int i=head[u];i&&rest;i=edge[i].nxt){\n\t\tint v=edge[i].v;\n\t\tif(vis[v])continue;\n\t\tif(d[v]==d[u]+edge[i].c&&edge[i].w){\n\t\t\tk=dinic(v,min(rest,edge[i].w));\n\t\t\tif(!k)d[v]=0;\n\t\t\tedge[i].w-=k;\n\t\t\tedge[i^1].w+=k;\n\t\t\trest-=k;\n\t\t}\n\t}\n\treturn flow-rest;\n}\n```\n\u5230\u8fbe\u4e00\u4e2a\u70b9\u65f6\uff0c\u6253\u4e0a\u6807\u8bb0\uff0c\n\u904d\u5386\u51fa\u8fb9\u65f6\u5982\u679c\u5df2\u7ecf\u6807\u8bb0\u8fc7$continue$\u6389\n\n\u6bcf\u6b21\u8dd1\u5b8c$dinic$\u90fd\u8981\u6e05\u7a7a\u6807\u8bb0\u6570\u7ec4\n\n\n\n\u5b8c\u6574\u4ee3\u7801\n```cpp\n//Code by : Y-k-y\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <queue>\n#include <vector>\n#include <set>\n#include <map>\n#define int long long\nconst int N=100010;\nconst int inf=1ll<<60;\nusing namespace std;\ninline int rnd(){\n\tint res=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n\twhile(isdigit(ch)){res=res*10+ch-'0';ch=getchar();}\n\treturn res*f;\n}\ninline void wr(int x){\n\tif(x<0){putchar('-');x=-x;}if(x>9) wr(x/10);putchar(x%10+'0');\n}\nint a[N],b[N],c[N],d[N],pr[N],cnt,num[N],aa[N],ans,s,t,sum;\nbool chk[N],vis[N];\nstruct pp{\n\tint v,nxt,w,c;\n}edge[N];\nint head[N],n,tot=1;\ninline void add(int u,int v,int w,int cc){\n\tedge[++tot].nxt=head[u],head[u]=tot;\n\tedge[tot].v=v,edge[tot].w=w,edge[tot].c=cc;\n\tedge[++tot].nxt=head[v],head[v]=tot;\n\tedge[tot].v=u,edge[tot].w=0,edge[tot].c=-cc;\n}\ninline void uim(){\n\tfor(int i=2;i<N;i++){\n\t\tif(!chk[i])pr[++cnt]=i;\n\t\tfor(int j=1;j<=cnt;j++){\n\t\t\tif(i*pr[j]>N)break;\n\t\t\tchk[i*pr[j]]=1;\n\t\t\tif(!(i%pr[j]))break;\n\t\t}\n\t}\n}\ninline int spfa(){\n\tqueue<int>q;\n\tmemset(vis,0,sizeof(vis));//\u6e05\u7a7a \n\tfor(int i=0;i<=n+1;i++)d[i]=-inf;\n\td[s]=0;\n\tq.push(s);\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();vis[u]=0;\n\t\tfor(int i=head[u];i;i=edge[i].nxt){\n\t\t\tint v=edge[i].v;\n\t\t\tif(edge[i].w&&d[v]<d[u]+edge[i].c){\n\t\t\t\td[v]=d[u]+edge[i].c;\n\t\t\t\tif(!vis[v]){\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn d[t]>-inf;\n}\ninline int dinic(int u,int flow){\n\tif(u==t)return flow;\n\tint rest=flow,k;\n\tvis[u]=1;//\u6253\u6807\u8bb0 \n\tfor(int i=head[u];i&&rest;i=edge[i].nxt){\n\t\tint v=edge[i].v;\n\t\tif(vis[v])continue;//\n\t\tif(d[v]==d[u]+edge[i].c&&edge[i].w){\n\t\t\tk=dinic(v,min(rest,edge[i].w));\n\t\t\tif(!k)d[v]=0;\n\t\t\tedge[i].w-=k;\n\t\t\tedge[i^1].w+=k;\n\t\t\trest-=k;\n\t\t}\n\t}\n\treturn flow-rest;\n}\nsigned main(){\n\tcin>>n;t=n+1;\n\tfor(int i=1;i<=n;i++)aa[i]=a[i]=rnd();\n\tfor(int i=1;i<=n;i++)b[i]=rnd();\n\tfor(int i=1;i<=n;i++)c[i]=rnd();\n\tuim();\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=cnt;j++){\n\t\t\tif(a[i]<pr[j])break;\n\t\t\tif(!(a[i]%pr[j])){\n\t\t\t\twhile(!(a[i]%pr[j])){\n\t\t\t\t\tnum[i]++;a[i]/=pr[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(a[i]!=1)num[i]++;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(num[i]&1)add(s,i,b[i],0);\n\t\telse add(i,t,b[i],0);\n\t\tif(num[i]&1)\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif((!(aa[i]%aa[j])&&num[i]==num[j]+1)||((!(aa[j]%aa[i]))&&num[j]==num[i]+1)){\n\t\t\t\tadd(i,j,inf,c[i]*c[j]);\n\t\t\t}\n\t\t}\n\t}\n\tint flow=0;\n\tbool flag=0;\n\twhile(spfa()){\n\t\twhile(flow=dinic(s,inf),flow!=0){\n\t\t\tfor(int i=0;i<=n+1;i++)vis[i]=0;//\u6e05\u7a7a \n\t\t\tif(sum+d[t]*flow>=0){\n\t\t\t\tans+=flow;sum+=d[t]*flow;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tans+=sum/(-d[t]);\n\t\t\t\tflag=1;break;\n\t\t\t}\n\t\t}\n\t\tif(flag)break;\n\t}\n\twr(ans);\n\treturn 0;\n}\n\n```\n\n\n",
        "postTime": 1572594600,
        "uid": 71844,
        "name": "\u6768\u94e0\u8fdc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4068 \u3010[SDOI2016]\u6570\u5b57\u914d\u5bf9\u3011"
    },
    {
        "content": "#### \u9898\u76ee\u63cf\u8ff0\n\u82e5\u4e24\u4e2a\u6570\u5b57 $a_i,a_j$ \u6ee1\u8db3\uff0c$a_i$\u662f $a_j$\u7684\u500d\u6570\uff0c\u4e14 $\\frac{a_i}{a_j}$\u662f\u4e00\u4e2a\u8d28\u6570\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u6570\u5b57\u53ef\u4ee5\u914d\u5bf9\uff0c\u5e76\u83b7\u5f97 $c_i \\times c_j$\u7684\u4ef7\u503c\u3002\n\u4e00\u4e2a\u6570\u5b57\u53ea\u80fd\u53c2\u4e0e\u4e00\u6b21\u914d\u5bf9\uff0c\u53ef\u4ee5\u4e0d\u53c2\u4e0e\u914d\u5bf9\u3002\n\u5728\u83b7\u5f97\u7684\u4ef7\u503c\u603b\u548c\u4e0d\u5c0f\u4e8e$0$\u7684\u524d\u63d0\u4e0b\uff0c\u6c42\u6700\u591a\u8fdb\u884c\u591a\u5c11\u6b21\u914d\u5bf9\u3002\n\n\n#### \u89e3\u9898\u601d\u8def\n\u8fd9\u4e2a\u9898\u6a21\u8003\u65f6\u60f3\u5230\u4e86\u7f51\u7edc\u6d41\uff1a\u4e00\u5f00\u59cb\u89c9\u5f97\u5efa\u4e2a\u56fe\u8dd1\u8d39\u7528\u6d41\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u53d1\u73b0\u6709\u4e2a\u95ee\u9898\u5c31\u662f\u6bcf\u4e2a\u70b9\u65e2\u53ef\u4ee5\u53bb\u5339\u914d\u522b\u4eba\uff0c\u4e5f\u53ef\u4ee5\u88ab\u522b\u4eba\u5339\u914d\uff0c\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4\u5f88\u96be\u53bb\u9650\u5236\u6d41\u91cf\u3002\n\u89e3\u51b3\u65b9\u6cd5\u662f\uff1a\u5408\u7406\u5047\u8bbe\uff0c\u611f\u6027\u8bc1\u660e\u3002\n\u6211\u4eec\u4eff\u4f5b\u53ef\u4ee5\u9690\u9690\u7684\u611f\u89c9\u5230\uff0c\u5982\u679c$a$\u70b9\u5339\u914d$b$\u70b9\uff0c$c$\u70b9\u4e5f\u5339\u914d\u4e86$b$\u70b9\uff0c$a,c$\u7684\u503c\u4e92\u4e0d\u76f8\u7b49\uff0c\u5219$a,c$\u4e0d\u80fd\u76f8\u4e92\u5339\u914d\u3002\u81f3\u4e8e\u8bc1\u660e\u6211\u4eec\u53ef\u4ee5\u8bbe\u51e0\u4e2a\u672a\u77e5\u6570\u7b97\u4e00\u4e0b\uff08\u6211\u7684\u8bc1\u660e\u53ef\u80fd\u4e0d\u662f\u5f88\u4e25\u8c28\uff0c\u5c31\u4e0d\u6765\u8bef\u5bfc\u65b0\u4eba\u4e86\uff0c\u4f46\u662f\u611f\u89c9\u81ea\u5df1\u7684\u8bc1\u660e\u6ca1\u4ec0\u4e48\u95ee\u9898\uff09\u3002\u8fd9\u6837\u4e00\u6ce2\u64cd\u4f5c\u4e0b\u6765\uff0c\u56fe\u5c31\u53d8\u6210\u4e86\u4e8c\u5206\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0a\u5de6\u8fb9\u7684\u70b9\u4f5c\u4e3a\u5339\u914d\u70b9\uff0c\u53f3\u8fb9\u7684\u70b9\u5f53\u4f5c\u88ab\u5339\u914d\u70b9\uff0c\u95ee\u9898\u6109\u5feb\u89e3\u51b3\u3002\n\u6ce8\u610f\u8dd1\u8d39\u7528\u6d41\u65f6\uff0c\u6211\u4eec\u5728EK\u4e2d\u6bcf\u589e\u5e7f\u4e00\u6b21\u5c31\u770b\u4e00\u4e0b\u603b\u8d39\u7528\u6709\u6ca1\u6709\u5c0f\u4e8e$0$\uff0c\u6709\u7684\u8bdd\u5c31\u8df3\u51fa\u6765\uff0c\u5c1d\u8bd5\u4e00\u6d41\u91cf\u4e00\u6d41\u91cf\u7684\u589e\u5e7f\u5373\u53ef\u3002\n\n\u4f46\u662f\u53ea\u62ff\u4e8650\u5206\uff0c\u539f\u56e0\u4e24\u70b9\uff1a\n1. \u6ca1\u5f00`long long`\uff0c\u6211\u8fd9\u662f\u8981**\u81ea\u6bd9**\u7684\u8282\u594f\u3002\n2. \u6700\u540e\u5355\u6b65\u589e\u5e7f\u7684\u6761\u4ef6\u5199\u6b8b\u4e86\uff0c\u5bfc\u81f4\u6ca1\u6709\u6700\u540e\u7684\u5355\u6b65\u589e\u5e7f\uff08\u8fd9\u8fd8\u80fd\u5f9750\u5206\uff0c233\uff09\u3002\n\n\u6539\u6b63\u4ee5\u4e0a\u95ee\u9898\u5c31\u53ef\u4ee5AC\u4e86\u3002\n\n#### AC\u4ee3\u7801\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<climits>\n#include<cstring>\n#include<cstdio>\n#include<cctype>\n#include<queue>\n#define int long long\nusing namespace std;\n\nconst int N=301010;\nconst int inf=LONG_LONG_MAX>>1;\nint n,S,T;\nint dis[N],pre[N],a[N],b[N],c[N],vis[N],id[N];\nint ec=-1,f[N],nxt[N],to[N],bg[N],w[N],fe[N];\n\ninline void read(int &x){\n\tint k=1;x=0;char c=getchar();\n\twhile(!isdigit(c)) {if(c=='-')k*=-1;c=getchar();}\n\twhile(isdigit(c)) x=(x<<1)+(x<<3)+(c^48),c=getchar();x*=k;\n}\ninline void Addedge_fir(int a,int b){\n\t++ec,to[ec]=b,bg[ec]=a,nxt[ec]=f[a],f[a]=ec;\n\t++ec,to[ec]=a,bg[ec]=b,nxt[ec]=f[b],f[b]=ec;\n}\ninline void Addedge_sec(int i,int a,int b){\n\tfe[i]=c[a]*c[b],w[i]=inf,i^=1;\n\tfe[i]=c[a]*c[b]*-1,w[i]=0;\n}\ninline void Addedge_thd(int a,int d){\n\tif(S==a)\n\t++ec,to[ec]=d,bg[ec]=a,fe[ec]=0,w[ec]=b[d],nxt[ec]=f[a],f[a]=ec,\n\t++ec,to[ec]=a,bg[ec]=d,fe[ec]=0,w[ec]=0,nxt[ec]=f[d],f[d]=ec;\n\tif(T==d)\n\t++ec,to[ec]=d,bg[ec]=a,fe[ec]=0,w[ec]=b[a],nxt[ec]=f[a],f[a]=ec,\n\t++ec,to[ec]=a,bg[ec]=d,fe[ec]=0,w[ec]=0,nxt[ec]=f[d],f[d]=ec;\n}\ninline bool Isp(int x){\n\tfor(int i=2;i*i<=x;++i)\n\t\tif(x%i==0) return false;\n\treturn true;\n}\nvoid DFS(int u,int cid){\n\tvis[u]=1,id[u]=cid;\n\tfor(int i=f[u];i!=-1;i=nxt[i])\n\t\tif(!vis[to[i]])\n\t\t\tDFS(to[i],cid^1);\n}\ninline bool SPFA(){\n\tfill(pre+1,pre+N,0);\n\tfill(vis+1,vis+N,0);\n\tfill(dis+1,dis+N,-inf);\n\tqueue<int> Q; Q.push(S);\n\tvis[S]=1,dis[S]=0;\n\twhile(!Q.empty()){\n\t\tint u=Q.front();Q.pop();vis[u]=0;\n\t\tfor(int i=f[u];i!=-1;i=nxt[i])\n\t\t\tif(w[i]&&dis[to[i]]<dis[u]+fe[i]){\n\t\t\t\tdis[to[i]]=dis[u]+fe[i],pre[to[i]]=i;\n\t\t\t\tif(!vis[to[i]]) vis[to[i]]=1,Q.push(to[i]);\n\t\t\t}\n\t}\n\treturn dis[T]!=-inf;\n}\ninline void MCMF(){\n\tint ans=0,out=0,minn;\n\twhile(SPFA()){\n\t\tminn=inf;\n\t\tfor(int i=T;i!=S;i=bg[pre[i]])\n\t\t\tminn=min(minn,w[pre[i]]);\n\t\tfor(int i=T;i!=S;i=bg[pre[i]])\n\t\t\tw[pre[i]]-=minn,w[pre[i]^1]+=minn;\n\t\tif(ans+minn*dis[T]<0) break;\n\t\tans+=minn*dis[T],out+=minn;\n\t}\n\tif(dis[T]!=inf) while(ans+dis[T]>=0) \n\t\t++out,ans+=dis[T];\n\tprintf(\"%lld\",out);\n}\nsigned main(){\n\tread(n),S=n+1;T=S+1;\n\tmemset(f,-1,sizeof(f));\n\tmemset(id,-1,sizeof(id));\n\tfor(int i=1;i<=n;++i) read(a[i]);\n\tfor(int i=1;i<=n;++i) read(b[i]);\n\tfor(int i=1;i<=n;++i) read(c[i]);\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=i+1;j<=n;++j)\n\t\t\tif((a[i]%a[j]==0&&Isp(a[i]/a[j]))||(a[j]%a[i]==0&&Isp(a[j]/a[i])))\n\t\t\t\tAddedge_fir(i,j);\n\tfor(int i=1;i<=n;++i) if(!vis[i]) DFS(i,1); \n\tint eec=ec;memset(vis,0,sizeof(vis));\n\tfor(int i=0;i<=eec;++i)\n\t\tif(id[bg[i]]==1){\n\t\t\tAddedge_sec(i,bg[i],to[i]);\n\t\t\tif(!vis[bg[i]]) vis[bg[i]]=1,Addedge_thd(S,bg[i]);\n\t\t\tif(!vis[to[i]]) vis[to[i]]=1,Addedge_thd(to[i],T);\n\t\t}\n\treturn MCMF(),0;\n}\n```",
        "postTime": 1554252747,
        "uid": 26512,
        "name": "Christopher_Yan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4068 \u3010[SDOI2016]\u6570\u5b57\u914d\u5bf9\u3011"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.org/problemnew/show/P4068)\n\n\u53d1\u73b0\u8981\u6c42\u914d\u5bf9\u7684\u6761\u4ef6\u662f\u8fd9\u6837\n\n$$a_j|a_i,\\frac{a_i}{a_j}=p_1$$\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u518d\u6765\u4e00\u4e2a$a_k$\uff0c\u6ee1\u8db3\n\n$$a_k|a_j,\\frac{a_j}{a_k}=p_2$$\n\n\u663e\u7136$a_i=a_jp_1,a_j=a_kp_2$\uff0c\u4e8e\u662f$a_i=p_1p_2\\times a_k$\n\n\u663e\u7136$p_1p_2$\u4e0d\u4f1a\u662f\u4e00\u4e2a\u8d28\u6570\uff0c\u4e8e\u662f\u6211\u4eec\u5927\u80c6\u5f97\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff0c\u5982**\u679c$a_i$\u80fd\u548c$a_j$\u914d\u5bf9\uff0c\u90a3\u4e48$a_i$\u5c31\u4e0d\u80fd\u548c\u5176\u4ed6\u80fd\u548c$a_j$\u914d\u5bf9\u7684\u6570\u914d\u5bf9**\n\n\u4e8e\u662f\u7ecf\u8fc7\u8fd9\u6837\u4e00\u756a\u7b80\u5355\u5206\u6790\uff0c\u53d1\u73b0\u8fd9\u662f\u4e00\u4e8c\u5206\u56fe\n\n\u90a3\u4e48\u505a\u6cd5\u5c31\u5f88\u663e\u7136\u4e86\uff0c\u6211\u4eec\u5c06\u8fd9\u5f20\u56fe\u6765\u4e00\u4e2a\u9ed1\u767d\u67d3\u8272\uff0c\u4e4b\u540e\u6309\u7167\u9898\u76ee\u8981\u6c42\u8fde\u8fb9\u5c31\u597d\u4e86\n\n\u81f3\u4e8e\u8fd9\u9053\u9898\u8981\u6c42\u5728\u8d39\u7528\u4e3a\u6b63\u7684\u60c5\u51b5\u4e0b\u6d41\u91cf\u6700\u5927\uff0c\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u53ea\u80fd\u4fdd\u8bc1\u6700\u5927\u6d41\u7684\u65f6\u5019\u8d39\u7528\u6700\u5927\uff0c\u4e0d\u80fd\u4fdd\u8bc1\u8d39\u7528\u4e3a\u6b63\n\n\u4f46\u662f\u6211\u4eec\u77e5\u9053$spfa$\u53bb\u589e\u5e7f\u51fa\u7684\u6700\u957f\u8def\u80af\u5b9a\u8d8a\u6765\u8d8a\u5c0f\uff0c\u4e8e\u662f\u6211\u4eec\u4e00\u65e6\u53d1\u73b0\u5f53\u524d\u8d39\u7528\u4e58\u4e0a\u6d41\u91cf\u5c0f\u4e8e$0$\u4e86\uff0c\u4ee5\u540e\u5c31\u4e0d\u53ef\u80fd\u518d\u4f7f\u5f97\u8d39\u7528\u4e3a\u6b63\u4e86\uff0c\u4e8e\u662f\u5728\u8fd9\u4e2a\u4e4b\u540e\u5224\u65ad\u4e00\u4e0b\u5269\u4f59\u6d41\u91cf\u9000\u51fa\u5c31\u597d\u4e86\n\n\u5f53\u7136\uff0c\u7531\u4e8e\u53ea\u4f1a\u5199\u677f\u5b50\uff0c\u8fd8\u662f\u8fb9\u6743\u53d6\u53cd\u7684\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u597d\u5199\n\n\u4ee3\u7801\n\n```cpp\n#include<queue>\n#include<vector>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define re register\n#define LL long long\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\n#define int long long\nconst int maxn=205;\nconst int inf=99999999999;\ninline int read() {\n\tchar c=getchar();int r=1,x=0;\n\twhile(c<'0'||c>'9') {if(c=='-') r=-1;c=getchar();}\n\twhile(c>='0'&&c<='9') x=(x<<3)+(x<<1)+c-48,c=getchar();return r*x;\n}\nstd::vector<int> v[maxn];\nstd::queue<int> q;\nstruct E{int v,nxt,f;LL w;}e[205*205*10];\nint head[maxn],d[maxn],vis[maxn];\nint a[maxn],b[maxn],c[maxn],col[maxn];\nint S,T,n,num=1;\ninline void C(int x,int y,LL w,int f) {\n\te[++num].v=y;e[num].nxt=head[x];head[x]=num;\n\te[num].f=f,e[num].w=w;\n}\ninline void add(int x,int y,LL w,int f) {C(x,y,-1*w,f),C(y,x,w,0);}\ninline int SPFA() {\n\tfor(re int i=S;i<=T;i++) vis[i]=0,d[i]=inf;\n\tq.push(T),d[T]=0;\n\twhile(!q.empty()) {\n\t\tint k=q.front();q.pop();vis[k]=0;\n\t\tfor(re int i=head[k];i;i=e[i].nxt) \n\t\tif(e[i^1].f&&d[e[i].v]>d[k]+e[i^1].w) {\n\t\t\td[e[i].v]=d[k]+e[i^1].w;\n\t\t\tif(!vis[e[i].v]) q.push(e[i].v),vis[e[i].v]=1;\n\t\t}\n\t}\n\treturn d[S]<inf;\n}\nint dfs(int x,int now) {\n\tif(x==T||!now) return now;\n\tint flow=0,ff;vis[x]=1;\n\tfor(re int i=head[x];i;i=e[i].nxt)\n\tif(!vis[e[i].v]&&e[i].f&&d[e[i].v]==d[x]+e[i^1].w) {\n\t\tff=dfs(e[i].v,min(now,e[i].f));\n\t\tif(ff<=0) continue;\n\t\tnow-=ff,flow+=ff;e[i].f-=ff,e[i^1].f+=ff;\n\t\tif(!now) break;\n\t}\n\treturn flow;\n}\ninline int check(int x) {\n\tif(x==1) return 0;\n\tfor(re int i=2;i*i<=x;i++)\n\t\tif(x%i==0) return 0;\n\treturn 1;\n}\nvoid paint(int x,int now) {\n\tcol[x]=now;\n\tfor(re int i=0;i<v[x].size();i++)\n\tif(col[v[x][i]]==2) paint(v[x][i],now^1); \n}\nsigned main() {\n\tn=read();T=n+1;\n\tfor(re int i=1;i<=n;i++) a[i]=read();\n\tfor(re int i=1;i<=n;i++) b[i]=read();\n\tfor(re int i=1;i<=n;i++) c[i]=read();\n\tfor(re int i=1;i<=n;i++)\n\t\tfor(re int j=1;j<=n;j++)\n\t\t\tif(a[i]%a[j]==0&&check(a[i]/a[j])) \n\t\t\t\tv[i].push_back(j),v[j].push_back(i);\n\tfor(re int i=1;i<=n;i++) col[i]=2;\n\tfor(re int i=1;i<=n;i++) \n\t\tif(col[i]==2) paint(i,1);\n\tfor(re int i=1;i<=n;i++)\n\tif(col[i]) add(S,i,0,b[i]);\n\t\telse add(i,T,0,b[i]);\n\tfor(re int i=1;i<=n;i++) {\n\t\tif(!col[i]) continue;\n\t\tfor(re int j=0;j<v[i].size();j++) \n\t\t\tadd(i,v[i][j],(LL)c[i]*(LL)c[v[i][j]],inf);\n\t}\n\tint t=0,ans=0,flag=1,F=0;\n\twhile(SPFA()) {\n\t\tvis[T]=1;\n\t\twhile(vis[T]) {\n\t\t\tfor(re int i=S;i<=T;i++) vis[i]=0;\n\t\t\tt=dfs(S,inf);\n\t\t\tif(ans+t*d[S]>0) {\n\t\t\t\tF+=(0-ans)/d[S];\n\t\t\t\tflag=0;break;\n\t\t\t}\n\t\t\tans+=t*d[S],F+=t;\n\t\t}\n\t\tif(!flag) break;\n\t}\n\tprintf(\"%lld\\n\",F);\n\treturn 0;\n}\n```\n",
        "postTime": 1552984909,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4068 \u3010[SDOI2016]\u6570\u5b57\u914d\u5bf9\u3011"
    },
    {
        "content": "\u4e00\u9053\u7f51\u7edc\u6d41\u597d\u9898\u3002\n\n~~\u7f51\u7edc\u6d41\uff0c\u7f51\u7edc\u5efa\u6a21\u6700\u6bd2\u7624~~\n\n\u770b\u9898\u76ee\u5c31\u5f88\u50cf\u4e00\u4e2a\u4e8c\u5206\u56fe\u5339\u914d\u95ee\u9898\uff0c\u4f46\u4f1a\u6709\u51e0\u4e2a\u95ee\u9898\u3002\n\n- \u6bcf\u4e2a\u6570\u5b57\u53ea\u80fd\u53c2\u4e0e $1$ \u6b21\u914d\u5bf9\uff0c\u6240\u4ee5\u4e0d\u80fd\u628a\u8fd9 $n$ \u4e2a\u70b9\u90fd\u653e\u5728\u4e24\u8fb9\u8dd1\u5339\u914d\u3002\n\n- \u8fd9\u9898\u8981\u6c42\u7684\u662f\u5728 **\u8d39\u7528\u5927\u4e8e $0$ \u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u7684\u6d41**\uff0c\u800c\u4e0d\u662f\u4f20\u7edf\u7684 **\u4fdd\u8bc1\u6d41\u6700\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u7684\u8d39\u7528**\u3002\n\n\u5148\u5c06\u8fd9\u51e0\u4e2a\u95ee\u9898\u4e00\u4e00\u89e3\u51b3\u3002\n\n\u9996\u5148\u662f\u5982\u4f55\u5c06\u8fd9 $n$ \u4e2a\u70b9\u5206\u5230\u4e24\u8fb9\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\u3002\u56e0\u4e3a\u5f53 $a_i$ \u548c $a_j$ \u80fd\u5339\u914d\u65f6\uff0c\u5f53\u4e14\u4ec5\u5f53 $a_i = a_j \\times p$ \uff08$p = \\dfrac{a_i}{a_j} $\uff0c\u4e14 $p$ \u4e3a\u8d28\u6570\uff09\uff0c**\u6240\u4ee5 $a_i$ \u7684\u8d28\u56e0\u6570\u4e2a\u6570\u4e00\u5b9a\u662f $a_j$ \u8d28\u56e0\u6570\u4e2a\u6570\u52a0\u4e00**\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9 $n$ \u4e2a\u70b9\u901a\u8fc7\u8d28\u56e0\u6570\u4e2a\u6570\u7684\u5947\u5076\u6027\u5206\u6210\u4e24\u8fb9\uff0c\u518d\u8fde\u8fb9\u5339\u914d\u3002\n\n\u518d\u89e3\u51b3\u5982\u4f55\u4fdd\u8bc1\u8d39\u7528\u5927\u4e8e $0$\u3002\n\n\u53ef\u4ee5\u4f7f\u7528\u8d2a\u5fc3\u7684\u601d\u60f3\u3002\n\n\u5bf9\u4e8e\u6bcf\u6b21\u6700\u957f\u8def\u8dd1\u51fa\u6765\u7684\u6743\u503c\u548c $dis$ \u548c\u6700\u5927\u80fd\u901a\u8fc7\u7684\u6d41\u91cf $flow$\uff0c\u5982\u679c\u5f53\u524d\u7684\u7b54\u6848 $ans + dis \\times flow \\ge 0$ \u7684\u8bdd\uff0c\u90a3\u4e48\u663e\u7136\u8fd9 $flow$ \u4e2a\u6d41\u91cf\u662f\u80af\u5b9a\u80fd\u6d41\u7684\u3002\uff08\u56e0\u4e3a\u6bcf\u6b21\u589e\u5e7f\u6743\u503c\u548c\u90fd\u662f\u5f53\u524d\u53ef\u6d41\u7684\u6700\u5927\u7684\u4e86\uff09\u3002\n\n\u90a3\u5982\u679c $ans + dis \\times flow < 0$\uff0c\u5c31\u6700\u591a\u53ea\u80fd\u6d41 $\\left\\lfloor\\dfrac{-now}{dis}\\right\\rfloor$ \u4e86\u3002\uff08\u8ddf\u4e0a\u9762\u540c\u7406\uff0c\u5982\u679c\u6700\u5927\u7684\u6743\u503c\u52a0\u4e0a\u53bb\u90fd\u5c0f\u4e8e $0$ \u4e86\uff0c\u90a3\u4e48\u66f4\u5c0f\u7684\u80af\u5b9a\u6d41\u4e0d\u8fc7\u53bb\u4e86\uff09\u7136\u540e\u5c31\u53ef\u4ee5\u9000\u51fa\u589e\u5e7f\u4e86\u3002\n\n\u7136\u540e\u5c31\u662f\u5e38\u89c4\u7684\u5efa\u6a21\u5566~\n\n$s$ \u5411\u6bcf\u4e2a\u5de6\u8fb9\u7684 $i$\uff0c\u8fde\u6d41\u91cf\u4e3a $b_i$\uff0c\u8d39\u7528\u4e3a $0$\u3002\n\n\u6bcf\u4e2a\u53ef\u5339\u914d\u7684\u5de6\u8fb9\u7684 $i$ \u548c\u53f3\u8fb9\u7684 $j$\uff0c\u8fde\u6d41\u91cf\u4e3a $inf$\uff0c\u8d39\u7528\u4e3a $-c_i \\times c_j$\uff08\u56e0\u4e3a\u662f\u6700\u5927\u8d39\u7528\uff0c\u6240\u4ee5\u53d6\u76f8\u53cd\u6570\u8dd1\u6700\u5c0f\u8d39\u7528\uff09\n\n\u6bcf\u4e2a\u53f3\u8fb9\u7684 $j$ \u5411 $t$\uff0c\u8fde\u6d41\u91cf\u4e3a $b_j$\uff0c\u8d39\u7528\u4e3a $0$\u3002\n\n\u7136\u540e\u6309\u4e0a\u9762\u8bf4\u7684\u8dd1\u5c31\u597d\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\n#define _rep(i, x, y) for(int i = x; i <= y; ++i)\n#define _req(i, x, y) for(int i = x; i >= y; --i)\n#define _rev(i, u) for(int i = head[u]; i; i = e[i].nxt)\n#define pb(x) push_back(x)\n#define mst(f, i) memset(f, i, sizeof f)\nusing namespace std;\n#ifdef ONLINE_JUDGE\n#define debug(...) 0\n#else\n#define debug(...) fprintf(stderr, __VA_ARGS__), fflush(stderr)\n#endif\nnamespace fastio{\n    template<typename T> inline void read(T &t){\n        T x = 0, f = 1;\n        char c = getchar();\n        while(!isdigit(c)){\n            if(c == '-') f = -f;\n            c = getchar();\n        }\n        while(isdigit(c)) x = x * 10 + c - '0', c = getchar();\n        t = x * f;\n    }\n    template<typename T, typename ... Args> inline void read(T &t, Args&... args){\n        read(t);\n        read(args...);\n    }\n    template<typename T> void write(T t){\n        if(t < 0) putchar('-'), t = -t;\n        if(t >= 10) write(t / 10);\n        putchar(t % 10 + '0');\n    }\n    template<typename T, typename ... Args> void write(T t, Args... args){\n        write(t), putchar(' '), write(args...);\n    }\n    template<typename T> void writeln(T t){\n        write(t);\n        puts(\"\");\n    }\n    template<typename T> void writes(T t){\n        write(t), putchar(' ');\n    }\n};\nusing namespace fastio;\ntypedef long long ll;\ntypedef pair<int, int> PII;\nconst int N = 1e6 + 5, inf = 0x3f3f3f3f3f3f3f3f, M = 1005;\nint n, m, s, t;\nint ecnt = 1, head[N];\nstruct edge{\n\tint v, w, c, nxt;\n}e[N << 1];\nvoid add(int u, int v, int w, int c){\n\te[++ecnt] = edge{v, w, c, head[u]}, head[u] = ecnt;\n\te[++ecnt] = edge{u, 0, -c, head[v]}, head[v] = ecnt;\n\tdebug(\"link : %d -> %d, w = %d, c = %d\\n\", u, v, w, c);\n}\nint dis[N], cur[N];\nbool vis[N];\nbool spfa(int s, int t){\n\tmst(dis, inf);\n\tqueue<int> q;\n\tq.push(s), dis[s] = 0, cur[s] = head[s], vis[s] = 1;\n\twhile(q.size()){\n\t\tint u = q.front(); q.pop();\n\t\tvis[u] = 0;\n\t\t_rev(i, u){\n\t\t\tint v = e[i].v;\n\t\t\tif(e[i].w && dis[v] > dis[u] + e[i].c){\n\t\t\t\tdis[v] = dis[u] + e[i].c;\n\t\t\t\tcur[v] = head[v];\n\t\t\t\tif(!vis[v]){\n\t\t\t\t\tvis[v] = 1;\n\t\t\t\t\tq.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[t] != inf;\n}\nint Flow, Cost;\nint dfs(int u, int in){\n\tint out = 0;\n\tif(u == t){\n\t\treturn in;\n\t}\n\tvis[u] = 1;\n\tfor(int i = cur[u]; i && in; i = e[i].nxt){\n\t\tint v = e[i].v;\n\t\tcur[u] = i;\n\t\tif(e[i].w && !vis[v] && dis[v] == dis[u] + e[i].c){\n\t\t\tint d = dfs(v, min(in, e[i].w));\n\t\t\te[i].w -= d, e[i ^ 1].w += d;\n\t\t\tin -= d, out += d;\n\t\t}\n\t}\n\tvis[u] = 0;\n\treturn out;\n}\nvoid Dinic(){\n\tCost = Flow = 0;\n\twhile(spfa(s, t)){\n\t\tint d = dfs(s, inf);\n\t\tint now = dis[t];\n\t\tif(Cost + now * d <= 0){\n\t\t\tFlow += d;\n\t\t\tCost += now * d;\n\t\t\tcontinue;\n\t\t}\n\t\tint delta = -Cost / now;\n\t\tFlow += delta;\n\t\tCost += now * delta;\n\t\tbreak;\n\t}\n}\nint a[205], b[205], c[205];\nnamespace Miller_Rabin{\n    mt19937 rnd(time(0));\n    int test = 8;\n    ll ksm(ll p, ll h, ll P){\n        ll base = p, res = 1;\n        while(h){\n            if(h & 1ll) res = res * base % P;\n            h >>= 1ll, base = base * base % P;\n        }\n        return res;\n    }\n    bool isprime(ll n){\n        if(n < 3 || n % 2 == 0) return n == 2;\n        ll a = n - 1, b = 0;\n        while(!(a & 1ll)) b++, a >>= 1ll;\n        _rep(i, 1, test){\n            ll x = rnd() % (n - 2) + 2, v = ksm(x, a, n), j = 1, nxt;\n            for(j = 1; j <= b; ++j){\n                nxt = v * v % n;\n                if(v != 1 && v != n - 1 && nxt == 1) return 0;\n                v = nxt; \n            }\n            if(v != 1) return 0;\n        }\n        return 1;\n    }\n};\nint cnt[205];\nsigned main(){\n\tread(n), s = 0, t = 2 * n + 1;\n\t_rep(i, 1, n){\n\t\tread(a[i]);\t\n\t\tint x = a[i];\n\t\tfor(int j = 2; j * j <= x; ++j){\n\t\t\tif(x % j) continue;\n\t\t\twhile(x % j == 0) cnt[i]++, x /= j;\n\t\t}\n\t\tif(x > 1) cnt[i]++;\n\t}\n\t_rep(i, 1, n) read(b[i]);\n\t_rep(i, 1, n) read(c[i]);\n\t_rep(i, 1, n){\n\t\tif(cnt[i] % 2) add(s, i, b[i], 0);\n\t\telse add(i, t, b[i], 0);\n\t}\n\t_rep(i, 1, n){\n\t\t_rep(j, 1, n){\n\t\t\tif(cnt[i] % 2 == cnt[j] % 2) continue;\n\t\t\tif(a[i] % a[j] || !Miller_Rabin::isprime(a[i] / a[j])){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(cnt[i] % 2) add(i, j, inf, -c[i] * c[j]);\n\t\t\telse add(j, i, inf, -c[i] * c[j]);\n\t\t}\n\t}\t\n\tDinic();\n\twriteln(Flow);\n    return 0;\n}\n```",
        "postTime": 1678946256,
        "uid": 573341,
        "name": "MiniLong",
        "ccfLevel": 0,
        "title": "P4068 [SDOI2016]\u6570\u5b57\u914d\u5bf9"
    },
    {
        "content": "\u524d\u7f6e\u829d\u58eb\uff1a[\u4e8c\u5206\u56fe](https://oi-wiki.org/graph/bi-graph/)\u3001[\u8d39\u7528\u6d41](https://oi-wiki.org/graph/flow/min-cost/)\n\n\u8003\u8651\u5c06\u4e24\u4e2a\u6570\u5b57 $a_i, a_j$ \u53ef\u4ee5\u5339\u914d\u7684\u6761\u4ef6\u8f6c\u5316\u4e3a $a_i \\bmod a_j = 0$ \u4e14 $\\Omega(a_i) = \\Omega(a_j) + 1$\u3002\n\n\u5982\u679c\u4f60\u7684\u56fe\u8bba\u8ddf\u6211\u4e00\u6837\u83dc\uff0c\u4f60\u4f1a\u628a\u53ef\u4ee5\u8fde\u8fb9\u7684 $i \\to j$ \u8fde\u8d77\u6765\uff0c\u5e76\u53d1\u73b0\u8fde\u51fa\u6765\u7684\u56fe\u662f\u4e00\u4e2a DAG\uff0c\u800c\u4e14\u53ef\u4ee5\u6839\u636e $\\Omega$ \u503c\u7684\u5947\u5076\u6027\u5bf9\u5176\u5206\u5c42\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u660e\u773c\u4eba\uff08\u5373\u6307\u9664\u6211\u8fd9\u6837\u7684\u778e\u5b50\u4e4b\u5916\uff09\u5e94\u8be5\u90fd\u80fd\u770b\u51fa\u8fd9\u4e2a DAG \u53ef\u4ee5\u6839\u636e $\\Omega$ \u503c\u7684\u5947\u5076\u6027\u6784\u9020\u4e8c\u5206\u56fe\u4e86\uff0c\u4e8e\u662f\u539f\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u4e00\u4e2a**\u4e8c\u5206\u56fe\u6700\u5927\u6743\u5339\u914d**\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u7528**\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u6c42\u89e3**\u3002\n\n\u6700\u540e\u518d\u6765\u8003\u8651\u201c\u5728\u83b7\u5f97\u7684\u4ef7\u503c\u603b\u548c\u4e0d\u5c0f\u4e8e $0$ \u7684\u524d\u63d0\u4e0b\u201d\u8fd9\u53e5\u8bdd\uff0c\u53d1\u73b0\u6211\u4eec\u53ea\u9700\u8981\u5c06\u8fb9\u6743\u8bbe\u4e3a\u5339\u914d\u7684\u4ef7\u503c\uff0c\u5e76\u5728\u8dd1\u8d39\u7528\u6d41\u65f6\u7279\u5224\u4e00\u4e0b\uff1a\u5982\u679c\u5f53\u524d\u603b\u8d39\u7528\u52a0\u4e0a\u6d41\u6ee1\u5f53\u524d\u589e\u5e7f\u8def\u7684\u603b\u8d39\u7528 $< 0$ \u4e86\uff0c\u5728\u5f53\u524d\u589e\u5e7f\u8def\u4e0a\u641e\u5c3d\u53ef\u80fd\u591a\u7684\u6d41\u91cf\u5e76\u9000\u51fa\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <queue>\n\nusing namespace std;\n\ntypedef long long ll;\n\ntypedef struct {\n\tint nxt;\n\tint end;\n\tint dis;\n\tll cost;\n} Edge;\n\nint cnt = 1;\nint a[207], omega[207], b[207], c[207], head[207], pre_dot[207], pre_edge[207];\nll dis[207];\nbool vis[207];\nEdge edge[80407];\nqueue<int> q;\n\ninline void init(int n){\n\tfor (register int i = 0; i <= n; i++){\n\t\tdis[i] = 0x8000000000000000ll;\n\t\tvis[i] = false;\n\t}\n}\n\ninline int get_omega(int n){\n\tint ans = 0;\n\tfor (register int i = 2; i * i <= n; i++){\n\t\twhile (n % i == 0){\n\t\t\tn /= i;\n\t\t\tans++;\n\t\t}\n\t}\n\tif (n > 1) ans++;\n\treturn ans;\n}\n\ninline void add_edge(int start, int end, int dis, ll cost){\n\tcnt++;\n\tedge[cnt].nxt = head[start];\n\thead[start] = cnt;\n\tedge[cnt].end = end;\n\tedge[cnt].dis = dis;\n\tedge[cnt].cost = cost;\n}\n\ninline void spfa(int start){\n\tdis[start] = 0;\n\tvis[start] = true;\n\tq.push(start);\n\twhile (!q.empty()){\n\t\tint cur = q.front();\n\t\tq.pop();\n\t\tvis[cur] = false;\n\t\tfor (register int i = head[cur]; i != 0; i = edge[i].nxt){\n\t\t\tif (edge[i].dis != 0){\n\t\t\t\tint x = edge[i].end;\n\t\t\t\tll y = dis[cur] + edge[i].cost;\n\t\t\t\tif (dis[x] < y){\n\t\t\t\t\tdis[x] = y;\n\t\t\t\t\tpre_dot[x] = cur;\n\t\t\t\t\tpre_edge[x] = i;\n\t\t\t\t\tif (!vis[x]){\n\t\t\t\t\t\tvis[x] = true;\n\t\t\t\t\t\tq.push(x);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\ninline pair<int, ll> maxcost_maxflow(int n, int start, int end){\n\tpair<int, ll> ans(0, 0);\n\twhile (true){\n\t\tinit(n);\n\t\tspfa(start);\n\t\tif (dis[end] == 0x8000000000000000ll) break;\n\t\tint flow = 0x7fffffff;\n\t\tbool flag;\n\t\tfor (register int i = end; i != start; i = pre_dot[i]){\n\t\t\tflow = min(flow, edge[pre_edge[i]].dis);\n\t\t}\n\t\tif (ans.second + flow * dis[end] < 0){\n\t\t\tflow = ans.second / -dis[end];\n\t\t\tflag = true;\n\t\t} else {\n\t\t\tflag = false;\n\t\t}\n\t\tfor (register int i = end; i != start; i = pre_dot[i]){\n\t\t\tedge[pre_edge[i]].dis -= flow;\n\t\t\tedge[pre_edge[i] ^ 1].dis += flow;\n\t\t}\n\t\tans.first += flow;\n\t\tans.second += flow * dis[end];\n\t\tif (flag) break;\n\t}\n\treturn ans;\n}\n\nint main(){\n\tint n, end;\n\tcin >> n;\n\tend = n + 1;\n\tfor (register int i = 1; i <= n; i++){\n\t\tcin >> a[i];\n\t\tomega[i] = get_omega(a[i]);\n\t}\n\tfor (register int i = 1; i <= n; i++){\n\t\tcin >> b[i];\n\t}\n\tfor (register int i = 1; i <= n; i++){\n\t\tcin >> c[i];\n\t}\n\tfor (register int i = 1; i <= n; i++){\n\t\tif (omega[i] % 2 == 0){\n\t\t\tadd_edge(0, i, b[i], 0);\n\t\t\tadd_edge(i, 0, 0, 0);\n\t\t} else {\n\t\t\tadd_edge(i, end, b[i], 0);\n\t\t\tadd_edge(end, i, 0, 0);\n\t\t}\n\t\tfor (register int j = 1; j <= n; j++){\n\t\t\tif (a[i] % a[j] == 0 && omega[i] == omega[j] + 1){\n\t\t\t\tll cost = (ll)c[i] * c[j];\n\t\t\t\tif (omega[i] % 2 == 0){\n\t\t\t\t\tadd_edge(i, j, 0x7fffffff, cost);\n\t\t\t\t\tadd_edge(j, i, 0, -cost);\n\t\t\t\t} else {\n\t\t\t\t\tadd_edge(j, i, 0x7fffffff, cost);\n\t\t\t\t\tadd_edge(i, j, 0, -cost);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout << maxcost_maxflow(end, 0, end).first;\n\treturn 0;\n}\n```",
        "postTime": 1642773828,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4068 \u3010[SDOI2016] \u6570\u5b57\u914d\u5bf9\u3011"
    },
    {
        "content": "## \u5206\u6790\n\u8bbe $cnt[i]$ \u4e3a $a[i]$ \u5206\u89e3\u8d28\u56e0\u6570\u540e\u8d28\u56e0\u6570\u6240\u6709\u5e42\u6b21\u7684\u548c\u3002\n\n\u5982\u679c $a[i]$ \u548c $a[j]$ \u4f1a\u4ea7\u751f\u51b2\u7a81\uff0c\u90a3\u4e48 $cnt[i]$ \u548c $cnt[j]$ \u7684\u5947\u5076\u6027\u4e00\u5b9a\u662f\u76f8\u53cd\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u628a $cnt$ \u4e3a\u5947\u6570\u7684\u67d3\u6210\u767d\u8272\uff0c\u628a\u6240\u6709 $cnt$ \u4e3a\u5076\u6570\u7684\u67d3\u6210\u9ed1\u8272\u3002\n\n\u8fd9\u6837\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u4e8c\u5206\u56fe\u7684\u6a21\u578b\u3002\n\n\u7136\u540e\u7531\u6e90\u70b9\u5411\u6240\u6709\u767d\u70b9\u8fde\u6d41\u91cf\u4e3a $b[i]$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n\u7531\u767d\u70b9\u5411\u6240\u6709\u4f1a\u4e0e\u5b83\u4ea7\u751f\u51b2\u7a81\u7684\u9ed1\u70b9\u8fde\u6d41\u91cf\u4e3a\u65e0\u7a77\u5927\uff0c\u8d39\u7528\u4e3a\u5bf9\u5e94\u4ef7\u503c\u7684\u8fb9\u3002\n\n\u9ed1\u70b9\u540c\u7406\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u4e2d\u8fd8\u6709\u4ef7\u503c\u603b\u548c\u4e0d\u5c0f\u4e8e $0$ \u7684\u9650\u5236\u3002\n\n\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u3002\n\n\u8981\u5728\u8d39\u7528\u53d8\u4e3a $0$ \u7684\u65f6\u5019\u505c\u6b62\u589e\u5e7f\u3002\n\n\u56e0\u4e3a\u5728\u589e\u5e7f\u7684\u8fc7\u7a0b\u4e2d\u8d39\u7528\u4e00\u5b9a\u662f\u9010\u6e10\u53d8\u5c0f\u7684\u3002\n## \u4ee3\u7801\n``` cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<cstring>\n#define rg register\ninline int read(){\n\trg int x=0,fh=1;\n\trg char ch=getchar();\n\twhile(ch<'0' || ch>'9'){\n\t\tif(ch=='-') fh=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0' && ch<='9'){\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn x*fh;\n}\nconst int maxn=5e4+5;\nint h[maxn],tot=2,n,m,s,t,ans;\nstruct asd{\n\tint to,nxt,val;\n\tlong long cost;\n}b[maxn<<1];\nvoid ad(rg int aa,rg int bb,rg int cc,rg long long dd){\n\tb[tot].to=bb;\n\tb[tot].val=cc;\n\tb[tot].cost=dd;\n\tb[tot].nxt=h[aa];\n\th[aa]=tot++;\n}\nlong long dis[maxn],ans2;\nint pre[maxn],incf[maxn],ans1;\nbool inq[maxn];\nstd::queue<int> q;\nbool spfa(){\n\tmemset(dis,0xcf,sizeof(dis));\n\tmemset(pre,0,sizeof(pre));\n\tmemset(incf,0,sizeof(incf));\n\tinq[s]=1,dis[s]=0,incf[s]=0x3f3f3f3f;\n\tq.push(s);\n\twhile(!q.empty()){\n\t\trg int now=q.front();\n\t\tq.pop();\n\t\tinq[now]=0;\n\t\tfor(rg int i=h[now];i!=-1;i=b[i].nxt){\n\t\t\trg int u=b[i].to;\n\t\t\tif(b[i].val && dis[u]<dis[now]+b[i].cost){\n\t\t\t\tdis[u]=dis[now]+b[i].cost;\n\t\t\t\tincf[u]=std::min(incf[now],b[i].val);\n\t\t\t\tpre[u]=i;\n\t\t\t\tif(!inq[u]){\n\t\t\t\t\tinq[u]=1;\n\t\t\t\t\tq.push(u);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[t]!=dis[0];\n}\nvoid updat(){\n\trg int now=t,i;\n\tans2+=dis[now]*incf[now];\n\tif(ans2<0){\n\t\tans1-=(ans2-dis[now]*incf[now])/dis[now];\n\t\tprintf(\"%d\\n\",ans1);\n\t\tstd::exit(0);\n\t}\n\tans1+=incf[now];\n\twhile(now!=s){\n\t\ti=pre[now];\n\t\tb[i].val-=incf[t];\n\t\tb[i^1].val+=incf[t];\n\t\tnow=b[i^1].to;\n\t}\n}\nint jla[maxn],jlb[maxn],jlc[maxn],cnt[maxn];\nint div(rg int now){\n\trg int ncnt=0;\n\tfor(rg int i=2;i*i<=now;i++){\n\t\tif(now%i==0){\n\t\t\twhile(now%i==0){\n\t\t\t\tnow/=i;\n\t\t\t\tncnt++;\n\t\t\t}\n\t\t}\n\t}\n\tif(now>1) ncnt++;\n\treturn ncnt;\n}\nint main(){\n\tmemset(h,-1,sizeof(h));\n\tn=read();\n\ts=n+1,t=n+2;\n\tfor(rg int i=1;i<=n;i++) jla[i]=read();\n\tfor(rg int i=1;i<=n;i++) jlb[i]=read();\n\tfor(rg int i=1;i<=n;i++) jlc[i]=read();\n\tfor(rg int i=1;i<=n;i++) cnt[i]=div(jla[i]);\n\tfor(rg int i=1;i<=n;i++){\n\t\tif(cnt[i]&1){\n\t\t\tad(s,i,jlb[i],0);\n\t\t\tad(i,s,0,0);\n\t\t} else {\n\t\t\tad(i,t,jlb[i],0);\n\t\t\tad(t,i,0,0);\n\t\t}\n\t}\n\tfor(rg int i=1;i<=n;i++){\n\t\tif(cnt[i]&1){\n\t\t\tfor(rg int j=1;j<=n;j++){\n\t\t\t\tif(cnt[j]&1) continue;\n\t\t\t\tif((cnt[i]==cnt[j]+1 && jla[i]%jla[j]==0) || (cnt[j]==cnt[i]+1 && jla[j]%jla[i]==0)){\n\t\t\t\t\tad(i,j,0x3f3f3f3f,1LL*jlc[i]*jlc[j]);\n\t\t\t\t\tad(j,i,0,-1LL*jlc[i]*jlc[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\twhile(spfa()) updat();\n\tprintf(\"%d\\n\",ans1);\n\treturn 0;\n}\n```",
        "postTime": 1616592558,
        "uid": 316322,
        "name": "hzoi_liuchang",
        "ccfLevel": 7,
        "title": "P4068 [SDOI2016]\u6570\u5b57\u914d\u5bf9\u9898\u89e3"
    },
    {
        "content": "\u5982\u679ca\u662fb\u7684\u500d\u6570\uff0c\u4e14a/b\u662f\u8d28\u6570\uff1a\n\n1. a\u80fd\u5206\u89e3\u4e3a\u5947\u6570\u4e2a\u8d28\u6570\u76f8\u4e58\uff0c\u90a3\u4e48a\u5230b+n\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3ainf\uff0c\u8d39\u7528\u4e3ac[a]*c[b]\u7684\u8fb9\n\n2. a\u80fd\u5206\u89e3\u4e3a\u5076\u6570\u4e2a\u8d28\u6570\u76f8\u4e58\uff0c\u90a3\u4e48b\u5230a+n\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3ainf\uff0c\u8d39\u7528\u4e3ac[a]*c[b]\u7684\u8fb9\n\n\u5982\u679ca\u80fd\u5206\u89e3\u4e3a\u5947\u6570\u4e2a\u8d28\u6570\u76f8\u4e58\uff0c\u90a3\u4e48\u6e90\u70b9\u5230a\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3asum[a]\uff0c\u8d39\u7528\u4e3a0\u7684\u8fb9\n\n\u5982\u679ca\u80fd\u5206\u89e3\u4e3a\u5076\u6570\u4e2a\u8d28\u6570\u76f8\u4e58\uff0c\u90a3\u4e48a\u5230\u6c47\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3asum[a]\uff0c\u8d39\u7528\u4e3a0\u7684\u8fb9\n\n### \u8fd9\u4e2a\u7f51\u7edc\u53bb\u6389\u6e90\u70b9\u6c47\u70b9\u53ca\u5176\u8fb9\u540e\u5c31\u662f\u4e00\u5f20\u4e8c\u5206\u56fe\n\n\u4e4b\u540e\u6c42\u51fa\u5728\u8d39\u7528\u4e0d\u4f4e\u4e8e0\u7684\u60c5\u51b5\u4e0b\u7684\u6700\u5927\u6d41\u5c31\u662f\u7b54\u6848\n\n\u6539\u4e0bSPFA\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#define LL long long\nusing namespace std;\ntypedef struct\n{\n\tint x;\n\tint y,z;\n\tint tp;\n}Res;\nRes s[205];\ntypedef struct\n{\n\tint flow;\n\tLL cost;\n}Edge;\nEdge road[505][505];\nint dis,T,link[505],vis[505];\nLL best[505];\nint Spfa();\nint Jud(int x)\n{\n\tint i;\n\tif(x<=1)\n\t\treturn 0;\n\tfor(i=2;i*i<=x;i++)\n\t{\n\t\tif(x%i==0)\n\t\t\treturn 0;\n\t}\n\treturn 1;\n}\nint Sech(int x)\n{\n\tint i,sum=0;\n\tfor(i=2;i*i<=x;i++)\n\t{\n\t\twhile(x%i==0)\n\t\t{\n\t\t\tsum++;\n\t\t\tx/=i;\n\t\t}\n\t}\n\tif(x!=1)\n\t\tsum++;\n\treturn 2-(sum%2);\n}\nint main(void)\n{\n\tLL ans,sum;\n\tint n,x,i,j,pre,flow;\n\twhile(scanf(\"%d\",&n)!=EOF)\n\t{\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&s[i].x);\n\t\t\ts[i].tp=Sech(s[i].x);\n\t\t}\n\t\tfor(i=1;i<=n;i++)\n\t\t\tscanf(\"%d\",&s[i].y);\n\t\tfor(i=1;i<=n;i++)\n\t\t\tscanf(\"%d\",&s[i].z);\n\t\tT=2*n+1;\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tif(s[i].tp==1)\n\t\t\t\troad[0][i].flow=s[i].y;\n\t\t\telse\n\t\t\t\troad[n+i][T].flow=s[i].y;\n\t\t}\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tfor(j=1;j<=n;j++)\n\t\t\t{\n\t\t\t\tif(s[i].x%s[j].x==0&&Jud(s[i].x/s[j].x))\n\t\t\t\t{\n\t\t\t\t\tif(s[i].tp==1)\n\t\t\t\t\t{\n\t\t\t\t\t\troad[i][n+j].flow=2147483647;\n\t\t\t\t\t\troad[i][n+j].cost=(LL)s[i].z*s[j].z;\n\t\t\t\t\t\troad[n+j][i].cost=-(LL)s[i].z*s[j].z;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\troad[j][n+i].flow=2147483647;\n\t\t\t\t\t\troad[j][n+i].cost=(LL)s[i].z*s[j].z;\n\t\t\t\t\t\troad[n+i][j].cost=-(LL)s[i].z*s[j].z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tans=flow=0;\n\t\twhile(Spfa())\n\t\t{\n\t\t\tx=T;\n\t\t\tdis=100000000;\n\t\t\twhile(x!=0)\n\t\t\t{\n\t\t\t\tpre=link[x];\n\t\t\t\tdis=min(dis,road[pre][x].flow);\n\t\t\t\tx=pre;\n\t\t\t}\n\t\t\tx=T;\n\t\t\tsum=0;\n\t\t\twhile(x!=0)\n\t\t\t{\n\t\t\t\tpre=link[x];\n\t\t\t\troad[pre][x].flow-=dis;\n\t\t\t\troad[x][pre].flow+=dis;\n\t\t\t\tsum+=road[pre][x].cost;\n\t\t\t\tx=pre;\n\t\t\t}\n\t\t\tif(ans+sum*dis<0)\n\t\t\t{\n\t\t\t\tflow+=-ans/sum;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tans+=sum*dis;\n\t\t\tflow+=dis;\n\t\t}\n\t\tprintf(\"%d\\n\",flow);\n\t}\n\treturn 0;\n}\nint Spfa()\n{\n\tint i,now;\n\tmemset(link,-1,sizeof(link));\n\tmemset(vis,0,sizeof(vis));\n\tmemset(best,-62,sizeof(best));\n\tbest[0]=0;\n\tqueue<int>q;\n\tq.push(0);\n\twhile(q.empty()==0)\n\t{\n\t\tnow=q.front();\n\t\tq.pop();\n\t\tfor(i=1;i<=T;i++)\n\t\t{\n\t\t\tif(road[now][i].flow>0&&best[i]<best[now]+road[now][i].cost)\n\t\t\t{\n\t\t\t\tbest[i]=best[now]+road[now][i].cost;\n\t\t\t\tlink[i]=now;\n\t\t\t\tif(vis[i]==0)\n\t\t\t\t{\n\t\t\t\t\tvis[i]=1;\n\t\t\t\t\tq.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvis[now]=0;\n\t}\n\tif(best[T]>=-1e17)\n\t\treturn 1;\n\treturn 0;\n}\n```\n",
        "postTime": 1558882028,
        "uid": 98954,
        "name": "\u4e0d\u5b58\u5728\u4e4b\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4068 \u3010[SDOI2016]\u6570\u5b57\u914d\u5bf9\u3011"
    },
    {
        "content": "### \u5e7f\u544a\uff1a [\u6211\u7684\u535a\u5ba2](http://ebola.blogwo.com/)\n\n\u53ef\u4ee5\u8bf4\u662f\u975e\u5e38\u6c34\u7684\u4e00\u9053\u9898\u4e86\n\n\u770b\u5230\u8fd9\u79cd\u5339\u914d\uff0c\u5c31\u5f97\u60f3\u4e00\u4e0b\u4e8c\u5206\u56fe\u3001\u7f51\u7edc\u6d41\u8fd9\u4e00\u5757\u4e1c\u897f\n\n\u6211\u4eec\u9996\u5148\u5bf9\u6240\u6709\u7684a[i]\u8fdb\u884c\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u7528cnt[i]\u8bb0\u5f55a[i]\u7684\u8d28\u56e0\u6570\u4e2a\u6570\n\n\u8fd9\u6837\uff0c\u4e24\u4e2a\u6570\u80fd\u5339\u914d\u5f53\u4e14\u4ec5\u5f53a[i] mod a[j]=0 \u5e76\u4e14 cnt[i]-cnt[j]=1 (a[i]>a[j])\n\n\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u4e8c\u5206\u56fe\uff0c\u5de6\u8fb9\u662fcnt\u503c\u4e3a\u5947\u6570\u7684\uff0c\u53f3\u8fb9\u662fcnt\u503c\u4e3a\u5076\u6570\u7684\uff0c\u4e8e\u662f\u5339\u914d\u5c31\u53ea\u4f1a\u53d1\u751f\u5728\u4e24\u4e2a\u96c6\u5408\u4e4b\u95f4\uff0c\u800c\u4e0d\u4f1a\u53d1\u751f\u5728\u67d0\u4e2a\u96c6\u5408\u5185\n\n\u4e8c\u5206\u56fe\u5339\u914d\u662f\u884c\u4e0d\u901a\u7684\uff0c\u56e0\u4e3a\u5339\u914d\u6709\u6743\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u8d39\u7528\u6d41\n\u5efa\u7acb\u6e90\u3001\u6c47\u70b9\uff0c\u6e90\u70b9\u5411\u4e8c\u5206\u56fe\u7684\u5de6\u8fb9\u8fde\u8fb9\uff0c\u4e8c\u5206\u56fe\u7684\u53f3\u8fb9\u5411\u6c47\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u5747\u4e3ab[i]\uff0c\u8d39\u7528\u5747\u4e3a0\n\n\u5bf9\u4e8e\u5339\u914d\u5173\u7cfb\uff0c\u6211\u4eec\u5c06\u80fd\u5339\u914d\u7684\u4e24\u4e2a\u70b9\u8fde\u8fb9\uff0c\u4ece\u5de6\u8fb9\u7684\u70b9\u8fde\u5411\u53f3\u8fb9\uff0c\u5bb9\u91cfINF\uff0c\u8d39\u7528\u4e3a\u5339\u914d\u7684\u6743\n\n\u6211\u4eec\u8981\u8dd1\u7684\u662f\u4e00\u4e2a**\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41**\n\n\u6211\u4eec\u77e5\u9053\uff0c\u8d39\u7528\u6d41\u7684\u589e\u5e7f\u8fc7\u7a0b\u662f\u5355\u8c03\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6743\u503c\u5927\u7684\u589e\u5e7f\u8def\u4f1a\u4f18\u5148\u627e\u51fa\u6765\uff0c\u56e0\u6b64\u5f53\u67d0\u6b21\u589e\u5e7f\u65f6\u53d1\u73b0\u5f53\u524d\u8d39\u7528\u52a0\u4e0a\u589e\u5e7f\u8def\u7684\u6743<0\u4e86\uff0c\u6839\u636e\u9898\u610f\uff0c\u5c31\u9700\u8981\u7ed3\u675f\u589e\u5e7f\u8fc7\u7a0b\n\n\u65f6\u95f4\u590d\u6742\u5ea6**O(\u80fd\u8fc7)**\n\n\u7ec6\u8282\u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define INF 0x7fffffff\n#define LINF (1ll<<62)\nusing namespace std;\n\ntypedef long long LL;\nstruct Edge{int from,to,capa,flow,next;LL cost;} e[2000000];\nint h[1000],sum=-1,s,t;\nint a[210],b[210];\nLL c[210],n;\nint cnt[210];\nbool vis[1000];\nLL dist[1000];\nint able[1000],p[1000];\n\nvoid AddEdge(int u,int v,int w,LL c)\n{\n\tsum++;\n\te[sum].from=u;\n\te[sum].to=v;\n\te[sum].capa=w;\n\te[sum].cost=c;\n\te[sum].flow=0;\n\te[sum].next=h[u];\n\th[u]=sum;\n}\n\nvoid add_edge(int u,int v,int w,LL c)\n{\n\tAddEdge(u,v,w,c);\n\tAddEdge(v,u,0,-c);\n}\n\nbool BellmanFord(int &flow,LL &cost)\n{\n\tmemset(vis,0,sizeof(vis));\n\tvis[s]=1;\n\tqueue<int> q;\n\tq.push(s);\n\tfor(int i=s;i<=t;i++) dist[i]=-LINF;\n\tdist[s]=0;\n\table[s]=INF;\n\twhile(!q.empty())\n\t{\n\t\tint o=q.front();\n\t\tfor(int tmp=h[o];tmp!=-1;tmp=e[tmp].next)\n\t\t\tif(e[tmp].capa>e[tmp].flow&&dist[o]+e[tmp].cost>dist[e[tmp].to])\n\t\t\t{\n\t\t\t\tdist[e[tmp].to]=dist[o]+e[tmp].cost;\n\t\t\t\table[e[tmp].to]=min(able[o],e[tmp].capa-e[tmp].flow);\n\t\t\t\tp[e[tmp].to]=tmp;\n\t\t\t\tif(!vis[e[tmp].to]) q.push(e[tmp].to),vis[e[tmp].to]=1;\n\t\t\t}\n\t\tq.pop();\n\t\tvis[o]=0;\n\t}\n\tif(dist[t]==-LINF) return 0;\n\tLL delta=(LL)able[t]*dist[t];\n\tif(cost+delta<0){flow+=cost/(-dist[t]);return 0;}\n\tcost+=delta;\n\tflow+=able[t];\n\tfor(int u=t;u!=s;u=e[p[u]].from)\n\t{\n\t\te[p[u]].flow+=able[t];\n\t\te[p[u]^1].flow-=able[t];\n\t}\n\treturn 1;\n}\n\nint MCMF()\n{\n\tint flow=0;\n\tLL cost=0;\n\twhile(BellmanFord(flow,cost));\n\treturn flow;\n}\n\nint decompose(int n)\n{\n\tint s=sqrt(n),tot=0;\n\tfor(int i=2;i<=s;i++)\n\t\twhile(n%i==0) n/=i,tot++;\n\tif(n>1) tot++;\n\treturn tot;\n}\n\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",a+i);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",b+i);\n\tfor(int i=1;i<=n;i++) scanf(\"%lld\",c+i);\n\tfor(int i=1;i<=n;i++) cnt[i]=decompose(a[i]);\n\ts=0;t=n+1;\n\tfor(int i=s;i<=t;i++) h[i]=-1;\n\tfor(int i=1;i<=n;i++)\n\t\tif(cnt[i]&1) add_edge(s,i,b[i],0);\n\t\telse add_edge(i,t,b[i],0);\n\tfor(int i=1;i<=n;i++)\n\t\tif(cnt[i]&1)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tif((a[i]%a[j]==0&&cnt[i]==cnt[j]+1)||(a[j]%a[i]==0&&cnt[j]==cnt[i]+1))\n\t\t\t\t\tadd_edge(i,j,INF,c[i]*c[j]);\n\tcout<<MCMF()<<endl;\n\treturn 0;\n}\n\n```",
        "postTime": 1526799784,
        "uid": 20158,
        "name": "Ebola",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4068 \u3010[SDOI2016]\u6570\u5b57\u914d\u5bf9\u3011"
    }
]