[
    {
        "content": "## \u7b97\u6cd51\uff1a\n\n\u8bbe$\\{a_n\\}$\u662f\u7b49\u5dee\u6570\u5217\uff0c\u9996\u9879\u4e3a$a_1$\uff0c\u516c\u5dee\u4e3a$d$\u3002\n\n\u8bbe$\\{b_n\\}$\u662f\u7b49\u6bd4\u6570\u5217\uff0c\u9996\u9879\u4e3a$b_1$\uff0c\u516c\u6bd4\u4e3a$q(\\,\\left|\\,q\\,\\right|\\lt1) $\u3002\n\n\u8bbe$S(x)=\\sum_{i=1}^{\\infty}a_ib_i$\uff0c\u5219\n\n$S(x)=a_1b_1+(a_1+d)b_1q+(a_1+2d)b_1q^2+\\cdots$\n\n$\\ \\ \\ \\ \\ \\ \\ \\,\\,=b_1\\big[a_1(1+q+q^2+\\cdots)+dq(1+2q+3q^2+\\cdots)\\big]$\n\n$\\ \\ \\ \\ \\ \\ \\ \\,\\,=b_1\\big[a_1\\frac{1}{1-q}+dq(\\frac{1}{1-q})^2\\big]$\n\n$\\ \\ \\ \\ \\ \\ \\ \\,\\,=\\frac{b_1}{1-q}\\big(a_1+d\\cdot \\frac{q}{1-q}\\big)$\n\n\u82e5$\\{a_n\\}$\u4e3a$m$\u9636\u7b49\u5dee\u6570\u5217\u3002\n\n\u8bbe$d_0,d_1,d_2,\\dots d_m$\u4e3a\u6570\u5217$\\{a_n\\}$\u7684$0,1,2,\\dots m$\u9636\u5dee\u6570\u5217\u7684\u9996\u9879\u3002\n\n\u5219$S(x)=\\sum\\limits_{i=1}^{\\infty}a_ib_i=\\frac{b_1}{1-q}\\sum\\limits_{i=0}^m d_i(\\frac{q}{1-q})^i$\n\n\u8bc1\u660e\uff1a$m=1$\u65f6\uff0c\u663e\u7136$d_0=a_1$\uff0c$d_1=d$\uff0c\u539f\u5f0f\u6210\u7acb\u3002\n\n\u73b0\u5728\u5047\u8bbe$m=r$\u65f6\u6210\u7acb\uff0c\u4e0b\u9762\u8bc1\u660e$m=r+1$\u65f6\u4e5f\u6210\u7acb\u3002\n\n\u8bbe$\\{\\Delta_n\\}=\\{a_{n+1}-a_n\\}$\uff0c\u90a3\u4e48$\\{\\Delta_n\\}$\u662f$r$\u9636\u7b49\u5dee\u6570\u5217\n\n\u5219$\\sum\\limits_{i=1}^{\\infty}\\Delta_ib_i=\\frac{b_1}{1-q}\\sum\\limits_{k=0}^r d_{k+1}(\\frac{q}{1-q})^k$\n\n\u8bbe$\\sum\\limits_{i=1}^{\\infty}\\Delta_ib_i$\u7684\u524d$n$\u9879\u548c\u4e3a$D_n$\uff0c$\\sum\\limits_{i=1}^{\\infty}a_ib_i$\u7684\u524d$n$\u9879\u548c\u4e3a$S_n$\u3002\n\n\u5219$\\lim\\limits_{n\\to \\infty}D_n=\\frac{b_1}{1-q}\\sum\\limits_{k=0}^r d_{k+1}(\\frac{q}{1-q})^k$\n\n\u8003\u8651$S_n=a_1b_1+a_2b_2+a_3b_3+\\cdots+a_nb_n$\n\n$qS_n=a_1b_2+a_2b_3+a_3b_4+\\cdots+a_nb_{n+1}$\n\n$\\big(1-q\\big)S_n=a_1b_1-a_nb_{n+1}+(a_2-a_1)b_2+(a_3-a_2)b_3+\\cdots+(a_n-a_{n-1})b_n$\n\n$\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\,\\,=a_1b_1-a_nb_{n+1}+\\Delta_1b_2+\\Delta_2b_3+\\cdots+\\Delta_{n-1}b_n$\n\n$\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\,\\,=a_1b_1-a_nb_{n+1}+q\\big(\\Delta_1b_1+\\Delta_2b_2+\\cdots+\\Delta_{n-1}b_{n-1}\\big)$\n\n$\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\,\\,=a_1b_1-a_nb_{n+1}+qD_{n-1}$\n\n$S(x)=\\lim\\limits_{n\\to \\infty}S_n=\\frac{1}{1-q}\\big(a_1b_1-\\lim_{n\\to \\infty}a_nb_{n+1}+q\\lim_{n\\to \\infty}D_{n-1}\\big)$\n\n\u5206\u5f00\u8003\u8651\uff0c\u7531\u4e8e$\\{a_n\\}$\u662f$r+1$\u9636\u7684\u7b49\u5dee\u6570\u5217\uff0c\u90a3\u4e48\u5fc5\u7136\u53ef\u4ee5\u8868\u8fbe\u6210$r+1$\u6b21\u591a\u9879\u5f0f\u3002\n\n\u90a3\u4e48$\\lim\\limits_{n\\to \\infty}a_nb_{n+1}=\\lim\\limits_{n\\to \\infty}\\sum\\limits_{k=0}^{r+1}c_kn^k\\cdot b_1q^n=b_1\\sum\\limits_{k=0}^{r+1}c_k\\lim\\limits_{n\\to \\infty}n^kq^n$\n\n\u5355\u72ec\u8003\u8651\u6bcf\u4e00\u4e2a$k$\uff0c\u90a3\u4e48\u6709\n\n$\\lim\\limits_{n\\to \\infty}\\frac{|(n+1)^kq^{n+1}|}{|n^kq^n|}=\\lim\\limits_{n\\to \\infty}\\big|q(1+\\frac{1}{n})^k\\big|=\\big|q\\big|\\lt 1$\n\n\u90a3\u4e48$\\lim\\limits_{n\\to \\infty}n^kq^n=0\\ \\ (k=0,1,2,\\dots,r+1)$\n\n\u5219$\\lim\\limits_{n\\to \\infty}a_nb_{n+1}=0$\n\n\u53c8\u663e\u7136$\\lim\\limits_{n\\to \\infty}D_{n-1}=\\lim\\limits_{n\\to \\infty}D_{n}=\\frac{b_1}{1-q}\\sum\\limits_{k=0}^r d_{k+1}(\\frac{q}{1-q})^k$\uff0c\u6240\u4ee5\n\n$S(x)=\\frac{1}{1-q}\\big(a_1b_1+q\\frac{b_1}{1-q}\\sum\\limits_{k=0}^r d_{k+1}(\\frac{q}{1-q})^k\\big)$\n\n$\\ \\ \\ \\ \\ \\ \\ \\,\\,=\\frac{b_1}{1-q}\\big(a_1+\\frac{q}{1-q}\\sum\\limits_{k=0}^r d_{k+1}(\\frac{q}{1-q})^k\\big)$\n\n$\\ \\ \\ \\ \\ \\ \\ \\,\\,=\\frac{b_1}{1-q}\\big(a_1+\\sum\\limits_{k=1}^{r+1} d_k(\\frac{q}{1-q})^k\\big)$\n\n$\\ \\ \\ \\ \\ \\ \\ \\,\\,=\\frac{b_1}{1-q}\\sum\\limits_{k=0}^{r+1} d_k(\\frac{q}{1-q})^k$\n\n\u6545$m=r+1$\u65f6\u6210\u7acb\u3002\n\n\u5f52\u7eb3\u5f97$S(x)=\\frac{b_1}{1-q}\\sum\\limits_{k=0}^m d_k(\\frac{q}{1-q})^k$\n\n----\n\n\u4e0b\u9762\u8003\u8651\u600e\u4e48\u8ba1\u7b97$d_k$\u3002\n\n$d_k=\\sum\\limits_{i=0}^k(-1)^i\\binom{k}{i}a_{k+1-i}$\n\n\u9996\u5148$d_0=a_0$\uff0c\u7b26\u5408\u4e0a\u9762\u5f0f\u5b50\u3002\n\n\u5047\u8bbe$k=r$\u65f6\u4e0a\u5f0f\u6210\u7acb\uff0c\u4e0b\u9762\u8bc1\u660e$k=r+1$\u65f6\u6210\u7acb\u3002\n\n\u4ee4$p_r$\u8868\u793a$a_2,a_3,\\dots a_{r+2}$\u4f5c\u5dee\u5206\u65f6$r$\u9636\u5dee\u6570\u5217\u7684\u9996\u9879\uff0c\u90a3\u4e48$p_r=\\sum\\limits_{i=0}^r(-1)^i\\binom{r}{i}a_{r+2-i}$\u3002\n\n\u5219$d_{r+1}=p_r-d_r=\\sum\\limits_{i=0}^r(-1)^i\\binom{r}{i}a_{r+2-i}-\\sum\\limits_{i=0}^r(-1)^i\\binom{r}{i}a_{r+1-i}$\n\n$=\\sum\\limits_{i=1}^r(-1)^i\\binom{r}{i}a_{r+2-i}-\\sum\\limits_{i=0}^{r-1}(-1)^i\\binom{r}{i}a_{r+1-i}+a_{r+2}-(-1)^ra_1$\n\n$=\\sum\\limits_{i=1}^r(-1)^i\\binom{r}{i}a_{r+2-i}+\\sum\\limits_{i=1}^r(-1)^i\\binom{r}{i-1}a_{r+2-i}+a_{r+2}-(-1)^ra_1$\n\n$=\\sum\\limits_{i=1}^r(-1)^i\\big(\\binom{r}{i}+\\binom{r}{i-1}\\big)a_{r+2-i}+a_{r+2}-(-1)^ra_1$\n\n$=\\sum\\limits_{i=1}^r(-1)^i\\binom{r+1}{i}a_{r+2-i}+a_{r+2}+(-1)^{r+1}a_1$\n\n$=\\sum\\limits_{i=0}^{r+1}(-1)^i\\binom{r+1}{i}a_{r+2-i}$\n\n\u6545$k=r+1$\u65f6\u6210\u7acb\u3002\n\n\u5f52\u7eb3\u5f97$d_k=\\sum\\limits_{i=0}^k(-1)^i\\binom{k}{i}a_{k+1-i}$\n\n----\n\n\u5c06$d_k$\u7684\u5f0f\u5b50\u62c6\u5f00\u3002\n\n$d_k=\\sum\\limits_{i=0}^k(-1)^i\\binom{k}{i}a_{k+1-i}=k!\\sum\\limits_{i=0}^k\\frac{(-1)^i}{i!}\\cdot\\frac{a_{k+1-i}}{(k-i)!}$\n\n\u591a\u9879\u5f0f\u591a\u70b9\u6c42\u503c$+\\mathrm{NTT}$\u5373\u53ef\u3002\n\n\u5e26\u5165\u7b54\u6848\u5f0f\u5b50\uff0c$Ans=S(x)+a_0b_0=\\frac{b_1}{1-q}\\sum\\limits_{k=0}^m d_k(\\frac{q}{1-q})^k+a_0$\n\n---\n\n## \u7b97\u6cd52\uff1a\n\n\u4ee4$f_k=\\sum\\limits_{n=0}^{\\infty}n^kr^n$\n\n\u90a3\u4e48 $r\\cdot f_k=\\sum\\limits_{n=0}^{\\infty}n^kr^{n+1}=\\sum\\limits_{n=1}^{\\infty}(n-1)^kr^n$\n\n$(1-r)f_k=\\sum\\limits_{n=1}^{\\infty}\\big(n^k-(n-1)^k\\big)r^n$\n\n$~~~~~~~~~~~~~\\,=r\\sum\\limits_{n=0}^{\\infty}\\big((n+1)^k-n^k\\big)r^n$\n\n$~~~~~~~~~~~~~\\,=r\\sum\\limits_{n=0}^{\\infty}\\sum\\limits_{i=0}^{k-1}\\binom{k}{i}n^ir^n$\n\n$~~~~~~~~~~~~~\\,=r\\sum\\limits_{i=0}^{k-1}\\binom{k}{i}\\sum\\limits_{n=0}^{\\infty}n^ir^n$\n\n$~~~~~~~~~~~~~\\,=r\\sum\\limits_{i=0}^{k-1}\\binom{k}{i}f_i$\n\n\u6545\u6709$f_k=\\frac{r}{1-r}\\sum\\limits_{i=0}^{k-1}\\binom{k}{i}f_i$\n\n\u5316\u4e00\u4e0b\u5f0f\u5b50\uff0c$\\frac{f_k}{k!}=\\sum\\limits_{i=0}^{k-1}\\frac{f_i}{i!}\\big(\\frac{r}{1-r}\\cdot \\frac{1}{(k-i)!}\\big)$\uff0c\u5f88\u660e\u663e**\u5206\u6cbbfft**\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u6700\u540e\u5f88\u660e\u663e$Ans=\\sum\\limits_{i=0}^ma_if_i$\n\n-----\n\n##  \u4ee3\u7801\uff1a\n\n### \u7b97\u6cd51\uff1a\n\n```cpp\n#pragma GCC optimize (\"Ofast\")\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int mod=998244353;\nconst int N=1048580;\ninline void rad(int &_){\n    static char ch;\n    while(ch=getchar(),ch<'0'||ch>'9');_=ch-48;\n    while(ch=getchar(),ch<='9'&&ch>='0')_=_*10+ch-48;\n}\ninline void swap(int &u,int &v){int o=u;u=v;v=o;}\ninline int __(int u){return u<mod?u:u-mod;}\ninline int ___(int u){return u<0?u+mod:u;}\nint ksm(int u,int v){\n    int res=1;\n    for(;v;v>>=1,u=1ll*u*u%mod)\n    if(v&1)res=1ll*res*u%mod;\n    return res;\n}\nint f[N],g[N],rnk[N],c[N],d[N],e[N];\nint C[N],D[N],cr[N],dr[N],siz[N];\nint h[N],fac[N],inv[N],cnt,n,m,r,s,Ans;\nvector<int>vp[N];\nvoid Ntt(int *t,int opt,int len){\n    int g=3,g_=ksm(g,mod-2);\n    for(int i=0;i<len;i++)if(i<rnk[i])swap(t[i],t[rnk[i]]);\n    for(int i=1;i<len;i<<=1){\n        int wn=ksm(~opt?g:g_,(mod-1)/(i<<1));\n        for(int j=0,J=i<<1;j<len;j+=J){\n            int w=1;\n            for(int k=j;k<i+j;k++,w=1ll*w*wn%mod){\n                int r=1ll*w*t[i+k]%mod;\n                t[i+k]=___(t[k]-r);\n                t[k]=__(t[k]+r);\n            }\n        }\n    }\n    if(~opt)return;\n    int ny=ksm(len,mod-2);\n    for(int i=0;i<len;i++)t[i]=1ll*t[i]*ny%mod;\n}\nvoid Inv(int *a,int Len,int *b){\n    if(Len==1){b[0]=ksm(a[0],mod-2);return;}\n    Inv(a,(Len+1)>>1,b);\n    int len=1,_2=-1;\n    while(len<Len+Len)len<<=1,_2++;\n    for(int i=0;i<len;i++)rnk[i]=(rnk[i>>1]>>1)|((i&1)<<_2);\n    memcpy(e,a,Len<<2);\n    memset(e+Len,0,(len-Len)<<2);\n    Ntt(e,1,len);Ntt(b,1,len);\n    for(int i=0;i<len;i++)b[i]=1ll*(2-1ll*e[i]*b[i]%mod+mod)*b[i]%mod;\n    Ntt(b,-1,len);\n    memset(b+Len,0,(len-Len)<<2);\n}\nvoid ntt(int *a,int *b,int len1,int len2,int *t){\n    int len=1,_2=-1;\n    while(len<len1+len2)len<<=1,_2++;\n    for(int i=0;i<len;i++)rnk[i]=(rnk[i>>1]>>1)|((i&1)<<_2);\n    memcpy(C,a,len1<<2);\n    memset(C+len1,0,(len-len1)<<2);\n    memcpy(D,b,len2<<2);\n    memset(D+len2,0,(len-len2)<<2);\t\n    Ntt(C,1,len);Ntt(D,1,len);\n    for(int i=0;i<len;i++)t[i]=1ll*C[i]*D[i]%mod;\n    Ntt(t,-1,len);\n    if(&b[0]==&dr[0])memset(dr,0,len<<2);\n}\nvoid Mod(const int *a,const vector<int>&b,int *t,int lena,int lenb){\n    for(int i=0;i<=lena;i++)c[i]=a[lena-i];\n    for(int i=0;i<=lenb;i++)d[i]=b[lenb-i];\t\n    int len=1;while(len<=lena+lenb)len<<=1;\n    memset(c+lena-lenb+1,0,(len-lena+lenb-1)<<2);\n    memset(d+lena-lenb+1,0,(len-lena+lenb-1)<<2);\n    Inv(d,lena-lenb+1,dr);\n    ntt(c,dr,lena-lenb+1,lena-lenb+1,cr);\n    reverse(cr,cr+(lena-lenb+1));\n    for(int i=0;i<=lenb;i++)d[i]=b[i];\n    memset(d+lenb+1,0,(len-lenb-1)<<2);\n    ntt(d,cr,lenb+1,lena-lenb+1,c);\n    for(int i=0;i<lenb;i++)t[i]=___(a[i]-c[i]);\n}\nvoid Solve(int now,int ls,int rs,int *a){\n    if(ls==rs){h[++cnt]=a[0];return;}\n    int noww=now<<1,nrs=ls+rs>>1,b[siz[now]+1];\n    Mod(a,vp[noww],b,siz[now]-1,siz[noww]);\n    Solve(noww,ls,nrs,b);\n    Mod(a,vp[noww|1],b,siz[now]-1,siz[noww|1]);\n    Solve(noww|1,nrs+1,rs,b);\n}\nvoid Solve(int now,int ls,int rs){\n    siz[now]=rs-ls+1;\n    if(ls==rs){\n        vp[now].resize(2);\n        vp[now][0]=mod-g[ls];\n        vp[now][1]=1;\n        return;\n    }\n    int noww=now<<1,nrs=ls+rs>>1;\n    Solve(noww,ls,nrs);Solve(noww|1,nrs+1,rs);\n    int len=1,_2=-1;\n    while(len<=siz[now])len<<=1,_2++;\n    for(int i=0;i<len;i++)rnk[i]=(rnk[i>>1]>>1)|((i&1)<<_2);\n    for(int i=0;i<=siz[noww];i++)c[i]=vp[noww][i];\n    for(int i=0;i<=siz[noww|1];i++)d[i]=vp[noww|1][i];\n    memset(c+siz[noww]+1,0,(len-siz[noww]-1)<<2);\n    memset(d+siz[noww|1]+1,0,(len-siz[noww|1]-1)<<2);\n    Ntt(c,1,len);Ntt(d,1,len);\n    for(int i=0;i<len;i++)c[i]=1ll*c[i]*d[i]%mod;\n    Ntt(c,-1,len);\n    vp[now].resize(siz[now]+1);\n    for(int i=0;i<=siz[now];i++)vp[now][i]=c[i];\n}\nint main(){\n    rad(n);m=n+1;rad(r);\n    for(int i=0;i<=n;i++)rad(f[i]);\n    for(int i=1;i<=m;i++)g[i]=i;\n    s=f[0];\n    Solve(1,1,m);\n    Solve(1,1,m,f);\n    fac[0]=fac[1]=inv[0]=inv[1]=1;\n    for(int i=2;i<=n;i++)fac[i]=1ll*fac[i-1]*i%mod;\n    inv[n]=ksm(fac[n],mod-2);\n    for(int i=n-1;i>=2;i--)inv[i]=1ll*inv[i+1]*(i+1)%mod;\n    for(int i=0;i<=n;i++)f[i]=___((i&1?-1:1)*inv[i]);\n    for(int i=0;i<=n;i++)g[i]=1ll*h[i+1]*inv[i]%mod;\n    ntt(f,g,n+1,n+1,h);\n    r=1ll*r*ksm(1-r+mod,mod-2)%mod;\n    for(int i=0,j=1;i<=n;i++,j=1ll*j*r%mod)\n    h[i]=1ll*h[i]*fac[i]%mod*j%mod;\n    for(int i=0;i<=n;i++)Ans=__(Ans+h[i]);\n    Ans=__(1ll*Ans*r%mod+s);\n    printf(\"%d\\n\",Ans);\n}\n```\n\n### \u7b97\u6cd52\uff1a\n\n```cpp\n#include<cstdio>\nconst int N=262150;\nconst int mod=998244353;\nint n,Ans,r,r_,A[N],fac[N],inv[N];\nint f[N],g[N],c[N],rnk[N];\nint ksm(int u,int v){\n    int res=1;\n    for(;v;v>>=1,u=1ll*u*u%mod)\n    if(v&1)res=1ll*res*u%mod;\n    return res;\n}\ninline void swap(int &u,int &v){int o=u;u=v;v=o;}\ninline int _(int u){return u<mod?u:u-mod;}\ninline int __(int u){return u<0?u+mod:u;}\nvoid ntt(int *t,int opt,int len){\n    int g=3,g_=ksm(g,mod-2);\n    for(int i=0;i<len;i++)if(i<rnk[i])swap(t[i],t[rnk[i]]);\n    for(int i=1;i<len;i<<=1){\n        int wn=ksm(~opt?g:g_,(mod-1)/(i<<1));\n        for(int j=0,J=i<<1;j<len;j+=J){\n            int w=1;\n            for(int k=j;k<i+j;k++,w=1ll*w*wn%mod){\n                int r=1ll*w*t[i+k]%mod;\n                t[i+k]=__(t[k]-r);\n                t[k]=_(t[k]+r);\n            }\n        }\n    }\n    if(~opt)return;\n    int ny=ksm(len,mod-2);\n    for(int i=0;i<len;i++)t[i]=1ll*t[i]*ny%mod;\n}\nvoid Inv(int Len,int *a,int *b){\n    if(Len==1){b[0]=ksm(a[0],mod-2);return;}\n    Inv((Len+1)>>1,a,b);\n    int len=1,_2=-1;\n    while(len<Len+Len)len<<=1,_2++;\n    for(int i=0;i<len;i++)rnk[i]=(rnk[i>>1]>>1)|((i&1)<<_2);\n    for(int i=0;i<Len;i++)c[i]=a[i];\n    for(int i=Len;i<len;i++)c[i]=0;\n    ntt(c,1,len);ntt(b,1,len);\n    for(int i=0;i<len;i++)\n    b[i]=1ll*(2-1ll*c[i]*b[i]%mod+mod)*b[i]%mod;\n    ntt(b,-1,len);\n    for(int i=Len;i<len;i++)b[i]=0;\n}\nint main(){\n    scanf(\"%d%d\",&n,&r);r_=1ll*r*ksm(1-r+mod,mod-2)%mod;\n    for(int i=0;i<=n;i++)scanf(\"%d\",&A[i]);\n    fac[0]=inv[0]=1;\n    for(int i=1;i<=n;i++)fac[i]=1ll*fac[i-1]*i%mod;\n    inv[n]=ksm(fac[n],mod-2)%mod;\n    for(int i=n-1;i>=1;i--)inv[i]=1ll*inv[i+1]*(i+1)%mod;\n    for(int i=1;i<=n;i++)g[i]=mod-1ll*inv[i]*r_%mod;\n    g[0]=1;\n    Inv(n+1,g,f);\n    for(int i=0;i<=n;i++)f[i]=1ll*f[i]*fac[i]%mod*ksm(1-r+mod,mod-2)%mod;\n    for(int i=0;i<=n;i++)Ans=_(Ans+1ll*f[i]*A[i]%mod);\n    printf(\"%d\\n\",Ans);\n}\n```",
        "postTime": 1556981453,
        "uid": 50092,
        "name": "da32s1da",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5349 \u3010\u5e42\u3011"
    },
    {
        "content": "\u4ee4 $f_k=\\sum_{i=0}^\\infty i^kq^i$\uff0c\u90a3\u4e48\n\n$qf_k=\\sum_{i=0}^\\infty i^kq^{i+1}$\n\n$(1-q)f_k=q\\sum_{i=0}^\\infty((i+1)^k-i^k)q^i$\n\n$=q \\sum_{i=0}^{\\infty} \\sum_{j=0}^{k-1}\\binom{k}{j} i^j q^i$\n\n$=q\\sum_{j=0}^{k-1}\\binom{k}{j}\\sum_{i=0}^\\infty i^jq^i$\n\n$=q\\sum_{j=0}^{k-1}\\binom{k}{j}f_j$\n\n$f_k=\\frac{q}{1-q}\\sum_{i=0}^{k-1}\\binom{k}{i}f_i$\n\n$\\frac{f_k}{k!}=\\frac{q}{1-q}\\sum_{i=0}^{k-1}\\frac{f_i}{i!}\\frac{1}{(k-i)!}$\n\n$\\frac{1}{1-q}F(x)=\\frac{q}{1-q}F(x)e^x+\\frac{1}{1-q}$\n\n$F(x)=qF(x)e^x+1$\n\n$F(x)=\\frac{1}{1-qe^x}$\n\n\u76f4\u63a5\u591a\u9879\u5f0f\u6c42\u9006\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\log m)$",
        "postTime": 1556983958,
        "uid": 153599,
        "name": "ywwywwyww",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5349 \u3010\u5e42\u3011"
    },
    {
        "content": "\u4e3a\u5565\u51fa\u9898\u4eba\u7684\u9898\u89e3\u641e\u7684\u90a3\u4e48\u8ff7\u60d1\uff0c\uff0c   \n\u840c\u65b0\u5199\u9898\u89e3\uff0c\u6c42\u8d44\u74f7qwq\n***\n\u8003\u8651\u4e00\u4e2a\u5f31\u5316\u95ee\u9898\uff1a\n$$f_k=\\sum_{i=0}^\\infty i^kr^i$$\n\u90a3\u4e48\u53ea\u9700\u8981\u5bf9\u4e8e $k\\in[0,m]$ \u6c42\u51fa $f_k$\uff0c\u5c31\u80fd\u7ebf\u6027\u5f97\u5230\u7b54\u6848\u4e86\u3002\n$$rf_k=\\sum_{i=1}^\\infty (i-1)^kr^i$$\n$$(1-r)f_k=\\sum_{i=1}^\\infty(i^k-(i-1)^k)r^i$$\n\u628a $i$ \u6539\u4e3a\u4ece $0$ \u5f00\u59cb\uff0c\u540c\u65f6\u628a $r$ \u63d0\u51fa\u6765\uff1a\n$$(1-r)f_k=r\\sum_{i=0}^\\infty((i+1)^k-i^k)r^i$$\n$$(1-r)f_k=r\\sum_{i=0}^\\infty\\sum_{j=0}^{k-1}\\binom{k}{j}i^jr^j$$\n\u4ea4\u6362\u4e00\u4e0b\u6c42\u548c\u987a\u5e8f\uff1a\n$$(1-r)f_k=r\\sum_{j=0}^{k-1}\\binom{k}{j}\\sum_{i=0}^\\infty i^jr^j$$\n\u7136\u540e\u4f60\u53d1\u73b0\u6700\u53f3\u8fb9\u7684\u90a3\u4e2a\u5c31\u662f $f_j$\uff0c\uff0c\n$$\\frac{1-r}{r}f_k=\\sum_{j=0}^{k-1}\\binom kj f_j$$\n\u8fd9\u4e2a\u5f62\u5f0f\u975e\u5e38\u50cf\u6307\u6570\u578b\u751f\u6210\u51fd\u6570\u7684\u5377\u79ef\uff0c\u4e8e\u662f\u6211\u4eec\u7ed9\u4e24\u8fb9\u52a0\u4e00\u9879\n$$\\frac 1rf_k=\\sum_{j=0}^k\\binom kj f_j$$\n\u73b0\u5728\u8bbe $\\{ f_k \\}_{k=0}^\\infty $ \u7684\u6307\u6570\u578b\u751f\u6210\u51fd\u6570\u4e3a $F(x)$\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u51fd\u6570\u65b9\u7a0b\u3002  \n\u4f46\u522b\u5fd8\u4e86 $k=0$ \u65f6\u4e0a\u5f0f\u90fd\u4e0d\u6210\u7acb\uff0c\u53f3\u8fb9\u9700\u8981\u591a\u52a0\u4e00\u4e2a $r^{-1}$\u3002\n$$\\frac{F(x)}{r}=\\text e^x F(x)+\\frac 1r$$\n$$F(x)=r\\text e^xF(x)+1$$\n$$F(x)=\\frac{1}{1-r\\text e^x}$$\n\u591a\u9879\u5f0f\u6c42\u9006\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(m\\log m)$\u3002  \n\u522b\u7684\u795e\u4ed9\u90fd\u4e0d\u5c51\u4e8e\u7ed9\u4ee3\u7801\uff0c\u8fd9\u91cc\u7ed9\u4e00\u4e2a\u5427\uff1a\n```cpp\n#pragma GCC optimize (2)\n#pragma GCC optimize (\"unroll-loops\")\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#define ll long long\n#define N 262147\n#define reg register\n#define p 998244353\nusing namespace std;\n\ninline void read(int &x){\n    x = 0;\n    char c = getchar();\n    while(c<'0'||c>'9') c = getchar();\n    while(c>='0'&&c<='9'){\n        x = (x<<3)+(x<<1)+(c^48);\n        c = getchar();\n    }\n}\n\ninline int power(int a,int t){\n    int res = 1;\n    while(t){\n        if(t&1) res = (ll)res*a%p;\n        a = (ll)a*a%p;\n        t >>= 1;\n    }\n    return res;\n}\n\nint rev[N],rt[N],fac[N],ifac[N];\nint siz;\n\nvoid init(int n){\n    int w,lim = 1;\n    while(lim<=n) lim <<= 1,++siz;\n    for(reg int i=0;i!=lim;++i) rev[i] = (rev[i>>1]>>1)|((i&1)<<(siz-1));\n    w = power(3,(p-1)>>siz);\n    rt[lim>>1] = 1;\n    for(reg int i=(lim>>1)+1;i!=lim;++i) rt[i] = (ll)rt[i-1]*w%p;\n    for(reg int i=(lim>>1)-1;i;--i) rt[i] = rt[i<<1];\n}\n\ninline void NTT(int *f,int type,int lim){\n    if(type==-1) reverse(f+1,f+lim);\n    static unsigned long long a[N];\n    reg int x,shift = siz-__builtin_ctz(lim);\n    for(reg int i=0;i!=lim;++i) a[rev[i]>>shift] = f[i];\n    for(reg int mid=1;mid!=lim;mid<<=1)\n    for(reg int j=0;j!=lim;j+=(mid<<1))\n    for(reg int k=0;k!=mid;++k){\n        x = a[j|k|mid]*rt[mid|k]%p;\n        a[j|k|mid] = a[j|k]-x+p;\n        a[j|k] += x;\n    }\n    for(reg int i=0;i!=lim;++i) f[i] = a[i]%p;\n    if(type==1) return;\n    x = p-(p-1)/lim;\n    for(reg int i=0;i!=lim;++i) f[i] = (ll)f[i]*x%p;\n}\n\ninline void inverse(const int *f,int n,int *g){\n    static int h[N],s[30];\n    int lim = 1,top = 0;\n    while(n){\n        s[++top] = n;\n        n >>= 1;\n    }\n    g[0] = power(f[0],p-2);\n    while(top--){\n        n = s[top+1];\n        while(lim<=(n<<1)) lim <<= 1;\n        memcpy(h,f,(n+1)<<2);\n        memset(h+n+1,0,(lim-n)<<2);\n        NTT(g,1,lim),NTT(h,1,lim);\n        for(reg int i=0;i!=lim;++i) g[i] = g[i]*(2-(ll)g[i]*h[i]%p+p)%p;\n        NTT(g,-1,lim);\n        memset(g+n+1,0,(lim-n)<<2);\n    }\n}\n\nint n,r,ans;\nint a[N],F[N],G[N];\n\nint main(){\n    read(n),read(r);\n    init(n<<1);\n    for(reg int i=0;i<=n;++i) read(a[i]);\n    fac[0] = fac[1] = ifac[0] = ifac[1] = 1;\n    for(reg int i=2;i<=n;++i) ifac[i] = fac[i] = (ll)fac[i-1]*i%p;\n    ifac[n] = power(fac[n],p-2);\n    for(reg int i=n-1;i;--i) ifac[i] = (ll)ifac[i+1]*(i+1)%p;\n    for(reg int i=1;i<=n;++i) F[i] = (ll)(p-ifac[i])*r%p;\n    F[0] = p+1-r;\n    inverse(F,n,G);\n    for(reg int i=0;i<=n;++i) ans = (ans+(ll)G[i]*fac[i]%p*a[i])%p;\n    printf(\"%d\",ans);\n\treturn 0;\t\n}\n```\n\u987a\u624b\u62a2\u4e86\u4e2a\u6700\u4f18\u89e3\uff08\u524d\u9762\u4e24\u4e2a\u90fd\u662f 500 \u5206",
        "postTime": 1576940174,
        "uid": 221763,
        "name": "Brodal_Queue",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5349 \u3010\u5e42\u3011"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u5355\u9879\u5f0f\u600e\u4e48\u505a\uff0c\u591a\u9879\u5f0f\u5c31\u662f\u5355\u9879\u5f0f\u7684\u7b54\u6848\u7684\u548c\u3002\n\n\u5c31\u6c42\u4e00\u4e0b$\\mathbf f(n) = n^k$\u5427\u3002\uff08\u4e0b\u9762\u8bbe$t = \\dfrac 1r$\uff09\n\n\u8bbe$\\mathbf S_k = \\sum_{n=0}^\\infty n^k \\left(\\dfrac 1t\\right)^n$\n\n$t\\mathbf S_k = \\sum_{n=1}^\\infty n^k \\left(\\dfrac 1t\\right)^{n-1} = \\sum_{n=0}^\\infty (n+1)^k \\left(\\dfrac 1t\\right)^n$\n\n\u6240\u4ee5$(t - 1) \\mathbf S_k = \\sum_{n=0}^\\infty [(n+1)^k - n^k]\\left(\\dfrac 1t\\right)^n$\n\n\u5c06$(n+1)^k$\u7528\u4e8c\u9879\u5f0f\u5b9a\u7406\u5c55\u5f00\u53ef\u4ee5\u53d1\u73b0\uff1a\n\n$\\mathbf S_k = \\dfrac 1{t-1} \\sum_{i=0}^{k-1} \\binom ki \\mathbf S(i), \\mathbf S_0 = \\dfrac t{t-1}$\n\n\u4e8e\u662f$\\mathbf S_{k} = \\dfrac {k!}{t-1}\\sum_{i=0}^{k-1} \\dfrac 1{(k - i)!} \\dfrac {\\mathbf S(i)}{i!}$\n\n\u663e\u7136\u5377\u79ef\u7684\u5f62\u5f0f\uff0c\u5206\u6cbb$\\mathrm{FFT}$\u5373\u53ef\u3002\n\n\u4ee3\u7801\u89c1\u6211\u7684[$\\texttt{blog}$](https://www.cnblogs.com/cj-xxz/p/10812424.html)",
        "postTime": 1557033265,
        "uid": 46800,
        "name": "xgzc",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5349 \u3010\u5e42\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e0b\u5168\u6d1b\u8c37\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u52a3\u89e3\n\n\u9996\u5148\uff0c\u89e3\u51b3\u4e00\u4e0b $f(n)=n^k$ \u7684\u65f6\u5019\u7684\u95ee\u9898\u3002\n\n\u8003\u8651 $n^k$ \u7684\u7b2c\u4e8c\u7c7b\u65af\u7279\u6797\u6570\u5c55\u5f00\uff1a\n\n$$n^k=\\sum_{i=0}^k\\begin{Bmatrix}k\\\\i\\end{Bmatrix}n^{\\underline i}=\\sum_{i=0}^k\\begin{Bmatrix}k\\\\i\\end{Bmatrix}\\frac{n!}{(n-i)!}$$\n\n$$\\sum_{n=0}^\\infty n^kz^n=\\sum_{n=0}^\\infty \\sum_{i=0}^k\\begin{Bmatrix}k\\\\i\\end{Bmatrix}\\frac{n!}{(n-i)!}z^n=\\sum_{i=0}^k\\begin{Bmatrix}k\\\\i\\end{Bmatrix}\\sum_{n=0}^\\infty \\frac{n!}{(n-i)!}z^n$$\n$$=\\sum_{i=0}^k\\begin{Bmatrix}k\\\\i\\end{Bmatrix}i!\\sum_{n=0}^\\infty\\binom niz^n=\\sum_{i=0}^k\\begin{Bmatrix}k\\\\i\\end{Bmatrix}\\frac{i!z^i}{(1-z)^{i+1}}$$\n\n\u76f4\u63a5\u63d2\u5165\u5373\u53ef\u3002\n\n\u663e\u7136\u4ece $n^k$ \u53d8\u6210\u4e00\u4e2a\u591a\u9879\u5f0f\u4e4b\u540e\u53ef\u4ee5\u8003\u8651\u8d21\u732e\uff0c\u552f\u4e00\u533a\u522b\u662f $\\begin{Bmatrix}k\\\\i\\end{Bmatrix}$ \u53d8\u6210 $f(i)=\\sum a_k\\begin{Bmatrix}k\\\\i\\end{Bmatrix}$ \u4e86\uff0c\u5176\u4e2d $a_k$ \u662f\u591a\u9879\u5f0f\u7cfb\u6570\u3002\n\n$$\\sum_{n=0}^\\infty p(n)z^n=\\sum_{i=0}^kf(i)\\frac{i!z^i}{(1-z)^{i+1}}$$\n\n\u8003\u8651 $f(i)$ \u5982\u4f55\u5904\u7406\u3002\n\n$$f(i)=\\sum_{k=0}^m a_k\\begin{Bmatrix}k\\\\i\\end{Bmatrix}$$\n\n\u5c55\u5f00\u7b2c\u4e8c\u7c7b\u65af\u7279\u6797\uff1a\n\n$$f(i)=\\sum_{k=0}^m a_k\\sum_{t=0}^i\\frac{t^k}{t!}\\frac{(-1)^{i-t}}{(i-t)!}=\\sum_{t=0}^i\\frac{\\sum_{k=0}^m a_kt^k}{t!}\\frac{(-1)^{i-t}}{(i-t)!}$$\n\n\u6ce8\u610f\u5230\u91cc\u9762\u7684\u548c\u5c31\u662f\u8f93\u5165\u591a\u9879\u5f0f p!\n\n$$f(i)=\\sum_{t=0}^i\\frac{p(t)}{t!}\\frac{(-1)^{i-t}}{(i-t)!}$$\n\n\u591a\u70b9\u6c42\u503c\u5904\u7406\u51fa\u6765 $p(0),p(1),\\dots,p(m)$ \u8fd9\u4e2a\u5c31\u53d8\u6210\u4e00\u4e2a\u6807\u51c6\u5377\u79ef\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#pragma GCC optimize(\"-Ofast\",\"-funroll-all-loops\",\"-ffast-math\")\n#pragma GCC optimize(\"-fno-math-errno\")\n#pragma GCC optimize(\"-funsafe-math-optimizations\")\n#pragma GCC optimize(\"-freciprocal-math\")\n#pragma GCC optimize(\"-fno-trapping-math\")\n#pragma GCC optimize(\"-ffinite-math-only\")\n#pragma GCC optimize(\"-fno-stack-protector\")\n#pragma GCC target (\"avx2\",\"sse4.2\",\"fma\")\n#include <immintrin.h>\n// writer: w33z8kqrqk8zzzx33\n#include <bits/stdc++.h>\nusing namespace std;\n\n// https://judge.yosupo.jp/submission/5253\n\nstruct IO {\n  static constexpr size_t buf_size = 1 << 18;\n  char buf_in[buf_size], buf_out[buf_size];\n  size_t pt_in = 0, pt_out = 0, tail_in = 0;\n  char strs[10000 * 4];\n  inline size_t num_digits(long long x) {\n    if (x >= (long long)1e9) {\n      if (x >= (long long)1e18) return 19;\n      if (x >= (long long)1e17) return 18;\n      if (x >= (long long)1e16) return 17;\n      if (x >= (long long)1e15) return 16;\n      if (x >= (long long)1e14) return 15;\n      if (x >= (long long)1e13) return 14;\n      if (x >= (long long)1e12) return 13;\n      if (x >= (long long)1e11) return 12;\n      if (x >= (long long)1e10) return 11;\n      return 10;\n    } else {\n      if (x >= (long long)1e8) return 9;\n      if (x >= (long long)1e7) return 8;\n      if (x >= (long long)1e6) return 7;\n      if (x >= (long long)1e5) return 6;\n      if (x >= (long long)1e4) return 5;\n      if (x >= (long long)1e3) return 4;\n      if (x >= (long long)1e2) return 3;\n      if (x >= (long long)1e1) return 2;\n      return 1;\n    }\n  }\n  IO() {\n    load();\n    for (int i = 0; i < 10000; ++i) {\n      int j = i;\n      for (int t = 3; t >= 0; --t) {\n        strs[i * 4 + t] = j % 10 + '0';\n        j /= 10;\n      }\n    }\n  }\n  ~IO() { flush(); }\n  inline void load() {\n    memcpy(buf_in, buf_in + pt_in, tail_in - pt_in);\n    size_t width = tail_in - pt_in;\n    tail_in = width + fread(buf_in + width, 1, buf_size - width, stdin);\n    pt_in = 0;\n  }\n  inline void flush() {\n    fwrite(buf_out, 1, pt_out, stdout);\n    pt_out = 0;\n  }\n  inline void read(char& c) { c = buf_in[pt_in++]; }\n  template <class T>\n  inline void read(T& x) {\n    if (pt_in + 32 > tail_in) load();\n    char c;\n    do {\n      read(c);\n    } while (c < '0');\n    bool minus = 0;\n    if (c == '-') {\n      minus = 1;\n      read(c);\n    }\n    x = 0;\n    while (c >= '0') {\n      x = x * 10 + (c & 15);\n      read(c);\n    }\n    if (minus) x = -x;\n  }\n  inline void write(char c) { buf_out[pt_out++] = c; }\n  template <class T>\n  inline void write(T x) {\n    if (pt_out > buf_size - 32) flush();\n    if (x < 0) {\n      write('-');\n      x = -x;\n    }\n    size_t digits = num_digits(x);\n    int i;\n    for (i = pt_out + digits - 4; i > (int)pt_out; i -= 4) {\n      memcpy(buf_out + i, strs + (x % 10000) * 4, 4);\n      x /= 10000;\n    }\n    memcpy(buf_out + pt_out, strs + x * 4 + (pt_out - i), 4 + i - pt_out);\n    pt_out += digits;\n  }\n  inline void write(const char* s) {\n    if (pt_out > buf_size - 32) flush();\n    for (int i = 0; s[i] != 0; ++i) write(s[i]);\n  }\n  template <class T>\n  inline void writeln(T x) {\n    write(x);\n    write('\\n');\n  }\n} io;\n\n#define iter(i, a, b) for(int i=(a); i<(b); i++)\n#define rep(i, a) iter(i, 0, (int)(a))\n#define rep1(i, a) iter(i, 1, (int)(a)+1)\n#define fi first\n#define se second\n#define pb push_back\n#define intsize (sizeof(int))\n \n#define ll long long\n#define pii pair<int, int>\n//#define int ll\nconst int MOD = 998244353;\n\ntypedef unsigned us;\ntypedef unsigned long long ull;\n\nstatic char buf[450 << 20];\nvoid* operator new(size_t s) {\n\tstatic size_t i = sizeof buf;\n\tassert(s < i);\n\treturn (void*)&buf[i -= s];\n}\nvoid operator delete(void*) {}\n\ntemplate<class T> struct ptr {\n\tunsigned ind;\n\tptr(T* p = 0) : ind(p ? unsigned((char*)p - buf) : 0) {\n\t\tassert(ind < sizeof buf);\n\t}\n\tT& operator*() const { return *(T*)(buf + ind); }\n\tT* get() const { return &**this; }\n\tT& operator[](int a) const { return (&**this)[a]; }\n\texplicit operator bool() const { return ind; }\n};\n\nnamespace poly {\n\tconst int MOD = 998244353;\n\tconst int IMAG = 86583718;\n\tconst int NTTG = 3;\n\t\n\tint qpow(int b, int e) {\n\t\tint re=1;\n\t\twhile(e){\n\t\t\tif(e&1)re=1ll*re*b%MOD;\n\t\t\tb=1ll*b*b%MOD;e>>=1;\n\t\t}\n\t\treturn re;\n\t}\n\t\n// https://www.luogu.com.cn/record/32153077\n// zzq orz\n#define SZ 524320\nll qp(ll a,ll b)\n{\n\tll ans=1;\n\twhile(b)\n\t{\n\t\tif(b&1) ans=ans*a%MOD;\n\t\ta=a*a%MOD; b>>=1;\n\t}\n\treturn ans;\n}\nint getK(int n)\n{int s=1; while(s<n) s<<=1; return s;}\nus pool[SZ*4] __attribute__ ((aligned(64))),*ptr=pool;\nus *p0[SZ],*p1[SZ],*q0[SZ],*q1[SZ];\n__attribute__((always_inline)) void bit_flip(us*p,int t)\n{\n\tfor(int i=0,j=0;i<t;++i)\n\t{\n\t\tif(i>j) swap(p[i],p[j]);\n\t\tfor(int l=t>>1;(j^=l)<l;l>>=1);\n\t}\n}\nvoid prep(int n)\n{\n\tstatic int t=1;\n\tfor(;t<n;t<<=1)\n\t{\n\t\tint g=qp(3,(MOD-1)/(t*2));\n\t\tus*p,*q;\n\t\tp=p0[t]=ptr; ptr+=max(t,16); p[0]=1;\n\t\tfor(int m=1;m<t;++m)\n\t\t\tp[m]=p[m-1]*(ull)g%us(MOD);\n\t\tbit_flip(p,t);\n\t\tq=q0[t]=ptr; ptr+=max(t,16);\n\t\tfor(int i=0;i<t;++i)\n\t\t\tq[i]=(ull(p[i])<<32)/MOD;\n\t\tg=qp(g,MOD-2);\n\t\tp=p1[t]=ptr; ptr+=max(t,16); p[0]=1;\n\t\tfor(int m=1;m<t;++m)\n\t\t\tp[m]=p[m-1]*(ull)g%us(MOD);\n\t\tbit_flip(p,t);\n\t\tq=q1[t]=ptr; ptr+=max(t,16);\n\t\tfor(int i=0;i<t;++i)\n\t\t\tq[i]=(ull(p[i])<<32)/MOD;\n\t}\n}\ntypedef unsigned long long ull;\n__attribute__((always_inline)) us my_mul(us a,us b,us c)\n{\n\treturn b*(ull)a-((ull(a)*c)>>32)*ull(998244353);\n}\n__attribute__((always_inline)) __m128i my_mullo_epu32(const __m128i&a, const __m128i& b)\n{\n\treturn _mm_mullo_epi32(a,b);\n\t/*\n\t__m128i a13    = _mm_shuffle_epi32(a, 0xF5);          // (-,a3,-,a1)\n\t__m128i b13    = _mm_shuffle_epi32(b, 0xF5);          // (-,b3,-,b1)\n\t__m128i prod02 = _mm_mul_epu32(a, b);                 // (-,a2*b2,-,a0*b0)\n\t__m128i prod13 = _mm_mul_epu32(a13, b13);             // (-,a3*b3,-,a1*b1)\n\t__m128i prod01 = _mm_unpacklo_epi32(prod02,prod13);   // (-,-,a1*b1,a0*b0) \n\t__m128i prod23 = _mm_unpackhi_epi32(prod02,prod13);   // (-,-,a3*b3,a2*b2) \n\t__m128i prod   = _mm_unpacklo_epi64(prod01,prod23);   // (ab3,ab2,ab1,ab0)\n\treturn prod;\n\t*/\n}\n__attribute__((always_inline)) __m128i my_mulhi_epu32(const __m128i&a, const __m128i& b)\n{\n\t__m128i a13    = _mm_shuffle_epi32(a, 0xF5);          // (-,a3,-,a1)\n\t__m128i b13    = _mm_shuffle_epi32(b, 0xF5);          // (-,b3,-,b1)\n\t__m128i prod02 = _mm_mul_epu32(a, b);                 // (a2*b2,-,a0*b0,-)\n\t__m128i prod13 = _mm_mul_epu32(a13, b13);             // (a3*b3,-,a1*b1,-)\n\t__m128i prod01 = _mm_unpacklo_epi32(prod02,prod13);   // (a1*b1,a0*b0,-,-) \n\t__m128i prod23 = _mm_unpackhi_epi32(prod02,prod13);   // (a3*b3,a2*b2,-,-) \n\t__m128i prod   = _mm_unpackhi_epi64(prod01,prod23);   // (ab3,ab2,ab1,ab0)\n\treturn prod;\n}\nvoid ntt(us* __restrict__ x,int n)\n{\n\tint t=n;\n\tfor(int m=1;m<n;m<<=1)\n\t{\n\t\tt>>=1;\n\t\tus* __restrict__ p=p0[m];\n\t\tus* __restrict__ q=q0[m];\n\t\tif(t==1)\n\t\t{\n\t\t\tus *xa=x,*xb=x+t;\n\t\t\tfor(int i=0;i<m;++i,xa+=t+t,xb+=t+t)\n\t\t\t\tfor(int j=0;j<t;++j)\n\t\t\t\t{\n\t\t\t\t\tus u=xa[j]-(xa[j]>=us(MOD+MOD))*us(MOD+MOD);\n\t\t\t\t\tus v=my_mul(xb[j],p[i],q[i]);\n\t\t\t\t\txa[j]=u+v;\n\t\t\t\t\txb[j]=u-v+us(MOD+MOD);\n\t\t\t\t}\n\t\t}\n\t\telse if(t==2)\n\t\t{\n\t\t\tus *xa=x,*xb=x+t;\n\t\t\tfor(int i=0;i<m;++i,xa+=t+t,xb+=t+t)\n\t\t\t\tfor(int j=0;j<t;++j)\n\t\t\t\t{\n\t\t\t\t\tus u=xa[j]-(xa[j]>=us(MOD+MOD))*us(MOD+MOD);\n\t\t\t\t\tus v=my_mul(xb[j],p[i],q[i]);\n\t\t\t\t\txa[j]=u+v;\n\t\t\t\t\txb[j]=u-v+us(MOD+MOD);\n\t\t\t\t}\n\t\t}\n\t\telse if(t==4)\n\t\t{\n\t\t\tus *xa=x,*xb=x+t;\n\t\t\tfor(int i=0;i<m;++i,xa+=t+t,xb+=t+t)\n\t\t\t{\n\t\t\t\tconst __m128i p4=_mm_set1_epi32(p[i]),\n\t\t\t\tq4=_mm_set1_epi32(q[i]),\n\t\t\t\tmm=_mm_set1_epi32(MOD+MOD),\n\t\t\t\tm0=_mm_set1_epi32(0),\n\t\t\t\tm1=_mm_set1_epi32(MOD);\n\t\t\t\tfor(int j=0;j<t;j+=4)\n\t\t\t\t{\n\t\t\t\t\t__m128i u=_mm_loadu_si128((__m128i*)(xa+j));\n\t\t\t\t\tu=_mm_sub_epi32(u,\n\t\t\t\t\t_mm_and_si128(_mm_or_si128(_mm_cmpgt_epi32(u,mm),\n\t\t\t\t\t_mm_cmpgt_epi32(m0,u)),mm));\n\t\t\t\t\t__m128i v=_mm_loadu_si128((__m128i*)(xb+j));\n\t\t\t\t\tv=_mm_sub_epi32(my_mullo_epu32(v,p4),\n\t\t\t\t\tmy_mullo_epu32(my_mulhi_epu32(v,q4),m1));\n\t\t\t\t\t_mm_storeu_si128((__m128i*)(xa+j),_mm_add_epi32(u,v));\n\t\t\t\t\t_mm_storeu_si128((__m128i*)(xb+j),_mm_add_epi32(_mm_sub_epi32(u,v),mm));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tus *xa=x,*xb=x+t;\n\t\t\tfor(int i=0;i<m;++i,xa+=t+t,xb+=t+t)\n\t\t\t{\n\t\t\t\tconst __m128i p4=_mm_set1_epi32(p[i]),\n\t\t\t\tq4=_mm_set1_epi32(q[i]),\n\t\t\t\tmm=_mm_set1_epi32(MOD+MOD),\n\t\t\t\tm0=_mm_set1_epi32(0),\n\t\t\t\tm1=_mm_set1_epi32(MOD);\n\t\t\t\t//unfold 2x\n\t\t\t\tfor(int j=0;j<t;j+=8)\n\t\t\t\t{\n\t\t\t\t\t__m128i u0=_mm_loadu_si128((__m128i*)(xa+j));\n\t\t\t\t\t__m128i u1=_mm_loadu_si128((__m128i*)(xa+j+4));\n\t\t\t\t\t__m128i v0=_mm_loadu_si128((__m128i*)(xb+j));\n\t\t\t\t\t__m128i v1=_mm_loadu_si128((__m128i*)(xb+j+4));\n\t\t\t\t\tu0=_mm_sub_epi32(u0,\n\t\t\t\t\t_mm_and_si128(_mm_or_si128(_mm_cmpgt_epi32(u0,mm),\n\t\t\t\t\t_mm_cmpgt_epi32(m0,u0)),mm));\n\t\t\t\t\tu1=_mm_sub_epi32(u1,\n\t\t\t\t\t_mm_and_si128(_mm_or_si128(_mm_cmpgt_epi32(u1,mm),\n\t\t\t\t\t_mm_cmpgt_epi32(m0,u1)),mm));\n\t\t\t\t\tv0=_mm_sub_epi32(my_mullo_epu32(v0,p4),\n\t\t\t\t\tmy_mullo_epu32(my_mulhi_epu32(v0,q4),m1));\n\t\t\t\t\tv1=_mm_sub_epi32(my_mullo_epu32(v1,p4),\n\t\t\t\t\tmy_mullo_epu32(my_mulhi_epu32(v1,q4),m1));\n\t\t\t\t\t_mm_storeu_si128((__m128i*)(xa+j),_mm_add_epi32(u0,v0));\n\t\t\t\t\t_mm_storeu_si128((__m128i*)(xa+j+4),_mm_add_epi32(u1,v1));\n\t\t\t\t\t_mm_storeu_si128((__m128i*)(xb+j),\n\t\t\t\t\t_mm_add_epi32(_mm_sub_epi32(u0,v0),mm));\n\t\t\t\t\t_mm_storeu_si128((__m128i*)(xb+j+4),\n\t\t\t\t\t_mm_add_epi32(_mm_sub_epi32(u1,v1),mm));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<n;++i)\n\t\tx[i]-=(x[i]>=us(MOD+MOD))*us(MOD+MOD),\n\t\tx[i]-=(x[i]>=us(MOD))*us(MOD);\n}\nvoid intt(us* __restrict__ x,int n)\n{\n\tint t=1;\n\tfor(int m=(n>>1);m;m>>=1)\n\t{\n\t\tus* __restrict__ p=p1[m];\n\t\tus* __restrict__ q=q1[m];\n\t\tif(t==1)\n\t\t{\n\t\t\tus *xa=x,*xb=x+t;\n\t\t\tfor(int i=0;i<m;++i,xa+=t+t,xb+=t+t)\n\t\t\t\tfor(int j=0;j<t;++j)\n\t\t\t\t{\n\t\t\t\t\tus u=xa[j],v=xb[j];\n\t\t\t\t\txa[j]=u+v-(u+v>=us(MOD+MOD))*us(MOD+MOD);\n\t\t\t\t\txb[j]=my_mul(u-v+us(MOD+MOD),p[i],q[i]);\n\t\t\t\t}\n\t\t}\n\t\telse if(t==2)\n\t\t{\n\t\t\tus *xa=x,*xb=x+t;\n\t\t\tfor(int i=0;i<m;++i,xa+=t+t,xb+=t+t)\n\t\t\t\tfor(int j=0;j<t;++j)\n\t\t\t\t{\n\t\t\t\t\tus u=xa[j],v=xb[j];\n\t\t\t\t\txa[j]=u+v-(u+v>=us(MOD+MOD))*us(MOD+MOD);\n\t\t\t\t\txb[j]=my_mul(u-v+us(MOD+MOD),p[i],q[i]);\n\t\t\t\t}\n\t\t}\n\t\telse if(t==4)\n\t\t{\n\t\t\tus *xa=x,*xb=x+t;\n\t\t\tfor(int i=0;i<m;++i,xa+=t+t,xb+=t+t)\n\t\t\t{\n\t\t\t\tconst __m128i p4=_mm_set1_epi32(p[i]),\n\t\t\t\tq4=_mm_set1_epi32(q[i]),\n\t\t\t\tmm=_mm_set1_epi32(MOD+MOD),\n\t\t\t\tm0=_mm_set1_epi32(0),\n\t\t\t\tm1=_mm_set1_epi32(MOD);\n\t\t\t\tfor(int j=0;j<t;j+=4)\n\t\t\t\t{\n\t\t\t\t\t__m128i u=_mm_loadu_si128((__m128i*)(xa+j));\n\t\t\t\t\t__m128i v=_mm_loadu_si128((__m128i*)(xb+j));\n\t\t\t\t\t__m128i uv=_mm_add_epi32(u,v);\n\t\t\t\t\t_mm_storeu_si128((__m128i*)(xa+j),_mm_sub_epi32(uv,\n\t\t\t\t\t_mm_and_si128(_mm_or_si128(_mm_cmpgt_epi32(uv,mm),\n\t\t\t\t\t_mm_cmpgt_epi32(m0,uv)),mm)));\n\t\t\t\t\tuv=_mm_add_epi32(_mm_sub_epi32(u,v),mm);\n\t\t\t\t\t_mm_storeu_si128((__m128i*)(xb+j),\n\t\t\t\t\t_mm_sub_epi32(my_mullo_epu32(uv,p4),\n\t\t\t\t\tmy_mullo_epu32(my_mulhi_epu32(uv,q4),m1)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tus *xa=x,*xb=x+t;\n\t\t\tfor(int i=0;i<m;++i,xa+=t+t,xb+=t+t)\n\t\t\t{\n\t\t\t\tconst __m128i p4=_mm_set1_epi32(p[i]),\n\t\t\t\tq4=_mm_set1_epi32(q[i]),\n\t\t\t\tmm=_mm_set1_epi32(MOD+MOD),\n\t\t\t\tm0=_mm_set1_epi32(0),\n\t\t\t\tm1=_mm_set1_epi32(MOD);\n\t\t\t\t//unfold 2x\n\t\t\t\tfor(int j=0;j<t;j+=8)\n\t\t\t\t{\n\t\t\t\t\t__m128i u0=_mm_loadu_si128((__m128i*)(xa+j));\n\t\t\t\t\t__m128i u1=_mm_loadu_si128((__m128i*)(xa+j+4));\n\t\t\t\t\t__m128i v0=_mm_loadu_si128((__m128i*)(xb+j));\n\t\t\t\t\t__m128i v1=_mm_loadu_si128((__m128i*)(xb+j+4));\n\t\t\t\t\t__m128i uv0=_mm_add_epi32(u0,v0);\n\t\t\t\t\t__m128i uv1=_mm_add_epi32(u1,v1);\n\t\t\t\t\t_mm_storeu_si128((__m128i*)(xa+j),_mm_sub_epi32(uv0,\n\t\t\t\t\t_mm_and_si128(_mm_or_si128(_mm_cmpgt_epi32(uv0,mm),\n\t\t\t\t\t_mm_cmpgt_epi32(m0,uv0)),mm)));\n\t\t\t\t\t_mm_storeu_si128((__m128i*)(xa+j+4),_mm_sub_epi32(uv1,\n\t\t\t\t\t_mm_and_si128(_mm_or_si128(_mm_cmpgt_epi32(uv1,mm),\n\t\t\t\t\t_mm_cmpgt_epi32(m0,uv1)),mm)));\n\t\t\t\t\tuv0=_mm_add_epi32(_mm_sub_epi32(u0,v0),mm);\n\t\t\t\t\tuv1=_mm_add_epi32(_mm_sub_epi32(u1,v1),mm);\n\t\t\t\t\t_mm_storeu_si128((__m128i*)(xb+j),\n\t\t\t\t\t_mm_sub_epi32(my_mullo_epu32(uv0,p4),\n\t\t\t\t\tmy_mullo_epu32(my_mulhi_epu32(uv0,q4),m1)));\n\t\t\t\t\t_mm_storeu_si128((__m128i*)(xb+j+4),\n\t\t\t\t\t_mm_sub_epi32(my_mullo_epu32(uv1,p4),\n\t\t\t\t\tmy_mullo_epu32(my_mulhi_epu32(uv1,q4),m1)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tt<<=1;\n\t}\n\tus rn=qp(n,MOD-2);\n\tfor(int i=0;i<n;++i)\n\t\tx[i]=x[i]*(ull)rn%MOD;\n}\n\t\n\tvoid mult(us *a, us as, us *b, us bs, us *o, bool construct, bool clean = 0, us th = 100000000) {\n\t\tus n = as+bs-1;\n\t\tif(n >= 40) {\n    \t\twhile(n - (n & (-n))) n += (n & (-n));\n    \t\tassert(!construct);\n    \t\t//constructrev(n);\n    \t\tntt(a, n); ntt(b, n);\n    \t\trep(i, n) o[i] = 1ll*a[i]*b[i]%MOD;\n    \t\tintt(o, n);\n\t\t} else {\n\t\t    static ll tmp[41];\n\t\t    rep(i, as) rep(j, bs) tmp[i+j] += 1ll * a[i] * b[j];\n\t\t    rep(i, n) {\n\t\t        o[i] = tmp[i] % MOD;\n\t\t        tmp[i] = 0;\n\t\t    }\n\t\t}\n\t\titer(i, th, n) o[i] = 0;\n\t\tif(clean) rep(i, n) a[i] = b[i] = 0;\n\t}\n\n\tvoid cfn(us* a, us as, us *o) {\n\t\tstatic us tmp[524320];\n\t\tif(as == 1) { tmp[0] = a[0]; o[0] = qpow(a[0], MOD - 2); return; }\n\t\tcfn(a, (as+1)/2, o); us le = 0;\n\t\twhile((1 << le) < (as << 1)) le++;\n\t\t//constructrev(1 << le);\n\t\tmemcpy(tmp, a, as*intsize);\n\t\tmemset(tmp+as, 0, ((1<<le)-as)*intsize);\n\t\tntt(tmp, 1<<le); ntt(o, 1<<le);\n\t\trep(i, 1<<le) o[i] = 1ll * (MOD + (2 - 1ll * tmp[i] * o[i]) % MOD) * o[i] % MOD;\n\t\tintt(o, 1<<le);\n\t\tmemset(o+as, 0, ((1<<le)-as)*intsize);\n\t}\n\n\tvoid init(us n) { prep(n); }\n\t\n\tvoid divide(us *a, us as, us *b, us bs, us *q, us *r) {\n\t\tstatic us ar[524320], br[524320], bin[524320];\n\t\tus th = as, re = as-bs+1;\n\t\t//th = re+1;\n\t\trep(i, as) ar[i] = a[as-1-i];\n\t\trep(i, bs) br[i] = b[bs-1-i];\n\t\tcfn(br, th, bin);\n\t\tmult(ar, th, bin, th, q, 0, 1, re);\n\t\treverse(q, q+re);\n\t\tmult(q, re, b, bs, r, 0, 1, bs - 1);\n\t\trep(i, bs - 1) r[i] = (MOD + a[i] - r[i]) % MOD;\n\t}\n\t\n}\n\n#define array MY_FUCKING_ARRAY\n\nstruct array {\n    ptr<us> head; us sz;\n    array() : sz(0) { head = nullptr; }\n    array(us size) : sz(size) { head = new us[size]; }\n    us& operator[](const us idx) { return head[idx]; }\n    us* get() { return head.get(); }\n    const us size() { return sz; }\n};\n\narray pol[524320];\n\n\nnamespace Eval {\n    us points[524320];\n    us answer[524320];\n    \n    void init(us idx, us l, us r) {\n        // [l, r)\n        if(r - l == 0) {\n            pol[idx] = array(1);\n            pol[idx][0] = 1;\n            return;\n        }\n        if(r - l == 1) {\n            pol[idx] = array(2);\n            pol[idx][0] = (MOD - points[l]) % MOD;\n            pol[idx][1] = 1;\n            return;\n        }\n        static us tmp1[524320], tmp2[524320], tmp3[524320];\n        init(idx*2, l, (l+r)/2);\n        init(idx*2+1, (l+r)/2, r);\n        us n = pol[idx*2].size();\n        us m = pol[idx*2+1].size();\n        memcpy(tmp1, pol[idx*2].get(), n * intsize);\n        memcpy(tmp2, pol[idx*2+1].get(), m * intsize);\n        poly::mult(tmp1, n, tmp2, m, tmp3, 0, 1);\n        pol[idx] = array(n+m-1);\n        memcpy(pol[idx].get(), tmp3, pol[idx].size() * intsize);\n        //assert(pol[idx] == Eval::pol[idx]);\n    }\n\n    void solve(us idx, us l, us r, array& polynomial) {\n        static us tmp[524320], tmp2[524320], tmp3[524320], BULLSHIT[524320];\n        //assert(polynomial.size() == r-l);\n        if(r - l == 0) return;\n        if(r - l == 1) {\n            answer[l] = polynomial[0];\n            return;\n        }\n        us m = (l+r)/2;\n        if(m - l) {\n            memcpy(tmp, polynomial.get(), polynomial.size()*intsize);\n            memcpy(tmp2, pol[idx*2].get(), (m-l+1)*intsize);\n            poly::divide(tmp, polynomial.size(), tmp2, m-l+1, BULLSHIT, tmp3);\n            array p2(m-l); memcpy(p2.get(), tmp3, (m-l)*intsize);\n            solve(idx*2, l, m, p2);\n        }\n        if(r - m) { \n            memcpy(tmp, polynomial.get(), polynomial.size()*intsize);\n            memcpy(tmp2, pol[idx*2+1].get(), (r-m+1)*intsize);\n            poly::divide(tmp, polynomial.size(), tmp2, r-m+1, BULLSHIT, tmp3);\n            array p2(r-m); memcpy(p2.get(), tmp3, (r-m)*intsize);\n            solve(idx*2+1, m, r, p2);\n        }\n    }\nus p[524320];\nus dv[524320];\nus rp[524320];\nus BULLsHIT[524320];\n    array eval(array& po, array& v) {\n        us n = po.size(), m = v.size();\n        rep(i, m) {\n            points[i] = v[i];\n            if(!v[i]) v[i] = MOD;\n        }\n        init(1, 0, m);\n        static us tmp[524320];\n        array pp(m);\n        if(n >= m+1) {\n            rep(i, m+1) dv[i] = pol[1][i];\n            rep(i, n) p[i] = po[i];\n            poly::divide(p, n, dv, m+1, BULLsHIT, tmp);\n            memcpy(pp.get(), tmp, m*intsize);\n        } else pp = po;\n        solve(1, 0, m, pp);\n        array res(m); memcpy(res.get(), answer, m*intsize);\n        return res;\n    }\n}\n\n/*\nnamespace Inter {\n    us points[524320], values[524320];\n    \n    array drv, coeff;\n\n    void init(us idx, us l, us r) {\n        // [l, r)\n        if(r - l == 0) {\n            pol[idx] = array(1);\n            pol[idx][0] = 1;\n            return;\n        }\n        if(r - l == 1) {\n            pol[idx] = array(2);\n            pol[idx][0] = (MOD - points[l]) % MOD;\n            pol[idx][1] = 1;\n            return;\n        }\n        static us tmp1[524320], tmp2[524320], tmp3[524320];\n        init(idx*2, l, (l+r)/2);\n        init(idx*2+1, (l+r)/2, r);\n        us n = pol[idx*2].size();\n        us m = pol[idx*2+1].size();\n        memcpy(tmp1, pol[idx*2].get(), n * intsize);\n        memcpy(tmp2, pol[idx*2+1].get(), m * intsize);\n        poly::mult(tmp1, n, tmp2, m, tmp3, 0, 1);\n        pol[idx] = array(n+m-1);\n        memcpy(pol[idx].get(), tmp3, pol[idx].size() * intsize);\n        //assert(pol[idx] == Eval::pol[idx]);\n    }\n    \n    array solve(us idx, us l, us r) {\n        if(r - l == 0) {\n            array ans(1); ans[0] = 1;\n            return ans;\n        }\n        if(r - l == 1) {\n            array ans(1); ans[0] = 1ll * values[l] * poly::qpow(coeff[l], MOD-2) % MOD;\n            return ans;\n        }\n        static us tmp1[524320], tmp2[524320], tmp3[524320], tmp4[524320];\n        array tmp = solve(idx*2, l, (l+r)/2);\n        array tmpp = solve(idx*2+1, (l+r)/2, r);\n        memcpy(tmp1, tmp.get(), tmp.size() * intsize);\n        memcpy(tmp2, pol[idx*2+1].get(), pol[idx*2+1].size() * intsize);\n        us s1 = tmp.size() + pol[idx*2+1].size() - 1;\n        poly::mult(tmp1, tmp.size(), tmp2, pol[idx*2+1].size(), tmp3, 0, 1); \n        rep(i, tmpp.size()) tmp1[i] = tmpp[i];\n        memcpy(tmp1, tmpp.get(), tmpp.size() * intsize);\n        memcpy(tmp2, pol[idx*2].get(), pol[idx*2].size() * intsize);\n        us s2 = tmpp.size() + pol[idx*2].size() - 1;\n        poly::mult(tmp1, tmpp.size(), tmp2, pol[idx*2].size(), tmp4, 0, 1); \n        s2 = max(s2, s1); tmp = array(s2);\n        rep(i, s2) {\n            us p = tmp3[i] + tmp4[i]; p -= (p >= MOD ? MOD : 0);\n            tmp[i] = p;\n            //tmp3[i] = tmp4[i] = 0;\n        }\n        return tmp;\n    }\n\n    array inter(array& pt, array& vl) {\n        assert(pt.size() == vl.size());\n        us n = pt.size();\n        memcpy(points, pt.get(), n * intsize);\n        memcpy(values, vl.get(), n * intsize);\n        init(1, 0, n);\n        drv = array(n);\n        rep1(i, n) { drv[i-1] = 1ll * i * pol[1][i] % MOD; }\n        coeff = Eval::eval(drv, pt);\n        return solve(1, 0, n);\n    }\n}\n*/\n\n#define pol MY_FUCKING_pol\n\narray pts;\narray pol;\narray tmp;\n\nus fac[524300], ifac[524300], inv[524300];\nus ar1[524320], ar2[524320], f[524320];\n\nsigned main() {\n    ios_base::sync_with_stdio(false); cin.tie(0);\n    int n, p; io.read(n); io.read(p);\n    n++;\n    fac[0] = ifac[0] = fac[1] = ifac[1] = inv[0] = inv[1] = 1;\n    iter(i, 2, n+2) {\n    \tinv[i]=1ll*(MOD-MOD/i)*inv[MOD%i]%MOD;\n    \tfac[i] = 1ll * fac[i-1] * i % MOD;\n    \tifac[i] = 1ll * ifac[i-1] * inv[i] % MOD;\n    }\n    pts = array(n+1);\n    rep(i, n+1) pts[i] = i;\n    pol = array(n);\n    rep(i, n) io.read(pol[i]);\n    int k = 1; while(k < ((n+2) << 1)) k <<= 1;\n    poly::init(k);\n    tmp = Eval::eval(pol, pts);\n    rep(i, n+1) ar1[i] = 1ll * tmp[i] * ifac[i] % MOD;\n    rep(i, n+1) ar2[i] = 1ll * ((i % 2) ? (MOD - 1) : 1) * ifac[i] % MOD;\n    poly::mult(ar1, n+1, ar2, n+1, f, 0);\n    int ans = 0;\n    int t1 = p, t2 = poly::qpow((MOD + 1 - p) % MOD, MOD - 2);\n    int v1 = 1, v2 = t2;\n    rep(i, n+1) {\n        ans = (ans + 1ll * f[i] * fac[i] % MOD * v1 % MOD * v2) % MOD;\n        v1 = 1ll * v1 * t1 % MOD;\n        v2 = 1ll * v2 * t2 % MOD;\n    }\n    cout << ans << endl;\n}\n```",
        "postTime": 1594462240,
        "uid": 220037,
        "name": "w33z8kqrqk8zzzx33",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5349 \u3010\u5e42\u3011"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P5349)\n\n>\u9898\u610f\uff1a  \n\u7ed9\u5b9a\u591a\u9879\u5f0f $f$\uff0c\u4ee5\u53ca\u6709\u7406\u6570 $r\\in(0,1)$  \n\u6c42 $\\displaystyle \\sum_{n\\geq 0}f(n)r^n$\n\n\u8bbe $\\displaystyle F(k)=\\sum_{n\\geq 0}n^kr^n$\uff0c\u90a3\u7b54\u6848\u5c31\u53ea\u9700\u4f9d\u6b21\u4e58\u4e0a $f$ \u7684\u5404\u9879\u7cfb\u6570\u5373\u53ef\u3002\n\n\u800c $F(k)$ \u4e5f\u5bb9\u6613\u6c42\u5f97\uff1a\n\n$$F(k)=\\left[\\dfrac{x^k}{k!}\\right]\\sum_{k\\geq 0}\\dfrac{x^k}{k!}\\sum_{n\\geq 0}n^kr^n=\\left[\\dfrac{x^k}{k!}\\right]\\sum_{n\\geq 0}r^n\\sum_{k\\geq 0}\\dfrac{(nx)^k}{k!}$$\n$$=\\left[\\dfrac{x^k}{k!}\\right]\\sum_{n\\geq 0}r^ne^{nx}=\\left[\\dfrac{x^k}{k!}\\right]\\dfrac{1}{1-re^x}$$\n\n\u7136\u540e\u4e00\u6b21\u591a\u9879\u5f0f\u6c42\u9006\u5c31\u6ca1\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u5f88\u4e0d\u80fd\u7406\u89e3\u5176\u4ed6\u4eba\u7684\u9b3c\u755c\u3002\n\n$\\texttt{Code:}$\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e6+10;\nconst int mod=998244353;\nchar ch;int T,ans;\nint n,k,m,nn,n_,x,y,res,wn,v;\nint n1,len;int invn,w;\nint a[N],b[N],nt[N];\nint rev[N],inv[N],fac[N],ifac[N];\nint invt[N];\ninline void read(int &x){\n\tx=0;ch=getchar();while(ch<47)ch=getchar();\n\twhile(ch>47)x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n}\nvoid write(int x){if(x>9)write(x/10);putchar(48|x%10);}\ninline void swap(int &x,int &y){x^=y^=x^=y;}\nvoid qpow(int x,int k){\n\tres=1;\n\twhile(k){\n\t\tif(k&1)res=1ll*res*x%mod;\n\t\tx=1ll*x*x%mod;k>>=1;\n\t}\n}\nvoid getinv(int n){\n\tregister int i;\n\tfor(inv[1]=1,i=2;i^n;++i)inv[i]=1ll*(mod-mod/i)*inv[mod%i]%mod;\n}\nvoid getfac(int n){\n\tregister int i;\n\tfor(ifac[0]=1,i=1;i^n;++i)ifac[i]=1ll*ifac[i-1]*inv[i]%mod;\n\tfor(fac[0]=1,i=1;i^n;++i)fac[i]=1ll*fac[i-1]*i%mod;\n}\nvoid getrev(int n){\n\tstatic int i;\n\tn1=1;len=-1;while(n1<(n<<1))n1<<=1,++len;\n\tfor(i=0;i^n1;++i)rev[i]=(rev[i>>1]>>1)|((i&1)<<len);\n}\nvoid ntt_init(int n){\n\tregister int i,mid,j;n<<=1;\n\tfor(mid=1;mid<n;mid<<=1){\n\t\tqpow(3,(mod-1)/(mid<<1));\n\t\twn=res;nt[mid]=1;j=(mid<<1);\n\t\tfor(i=mid+1;i<j;++i)nt[i]=1ll*nt[i-1]*wn%mod;\n\t}\n}\ninline int add(int x,int y){return x+y>mod?x+y-mod:x+y;}\ninline int sub(int x,int y){return x>y?x-y:x-y+mod;}\ninline void ntt(int n,int *a,bool t){\n\tregister int i,mid,j,k;\n\tfor(i=0;i^n;++i)if(i<rev[i])swap(a[i],a[rev[i]]);\n\tfor(mid=1;mid<n;mid<<=1){\n\t\tfor(j=0;j<n;j+=(mid<<1)){\n\t\t\tfor(k=0;k<mid;++k){\n\t\t\t\tx=a[j+k],y=1ll*nt[mid+k]*a[j+k+mid]%mod;\n\t\t\t\ta[j+k]=add(x,y);\n\t\t\t\ta[j+k+mid]=sub(x,y);\n\t\t\t}\n\t\t}\n\t}\n\tif(t){\n\t\tinvn=n+1>>1;for(i=1;i^invn;++i)swap(a[i],a[n-i]);\n\t\tfor(invn=inv[n],i=0;i^n;++i)a[i]=1ll*a[i]*invn%mod;\n\t}\n}\nvoid polyinv(int n,int *f,int *g){\n\tstatic int i;\n\tif(n==1)qpow(f[0],mod-2),g[0]=res;\n\telse {\n\t\tpolyinv(n+1>>1,f,g);\n\t\tgetrev(n);\n\t\tfor(i=0;i^n;++i)invt[i]=f[i];\n\t\tfor(i=n;i^n1;++i)invt[i]=0;\n\t\tntt(n1,invt,0);ntt(n1,g,0);\n\t\tfor(i=0;i^n1;++i)g[i]=1ll*sub(2,1ll*invt[i]*g[i]%mod)*g[i]%mod;\n\t\tntt(n1,g,1);for(i=n;i^n1;++i)g[i]=0;\n\t}\n}\nmain(){\n\tread(n),read(m);++n;register int i;\n\tgetinv(n<<2),ntt_init(n<<1);getfac(n);\n\tfor(i=0;i^n;++i)a[i]=mod-1ll*m*ifac[i]%mod;\n\ta[0]=add(1,a[0]);\n\tpolyinv(n,a,b);\n\tfor(i=0;i^n;++i)b[i]=1ll*b[i]*fac[i]%mod;\n\tfor(i=0;i^n;++i)read(x),ans=add(ans,1ll*b[i]*x%mod);\n\twrite(ans);\n}\n```\n",
        "postTime": 1640430628,
        "uid": 334380,
        "name": "Y_B_X",
        "ccfLevel": 7,
        "title": "\u9898\u89e3[P5349 \u5e42]"
    },
    {
        "content": "[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.luogu.com.cn/blog/wangrx/solution-p5349)\n## \u9898\u76ee\u5927\u610f\n\n\u5df2\u77e5 $f(x)=\\displaystyle\\sum_{k=0}^ma_kx^k,r\\in(0,1)$\uff0c  \n\n\u6c42 $\\left(\\displaystyle\\sum_{n=0}^\\infty f(n)r^n\\right)\\bmod 998244353$ \u3002\n\n$r$ \u4ee5$\\mod{998244353}$ \u610f\u4e49\u7ed9\u51fa\u3002\n\n$\\texttt{Data Range: }0\\le m\\le10^5,a_k\\in[0,998244353),a_m\\not=0,$  \n$\\qquad\\qquad\\qquad r\\not\\equiv0,1\\pmod{99844353}$\n\n## \u9898\u89e3\n\n\u524d\u7f6e\u829d\u58eb\uff1a[\u6709\u9650\u5fae\u79ef\u5206](https://www.luogu.com.cn/blog/wangrx/finite-calculus)\n\n$f(x)$ \u662f\u666e\u901a\u5e42\u4e0d\u597d\u5904\u7406\uff0c\u8f6c\u4e3a\u4e0b\u964d\u5e42\u591a\u9879\u5f0f\n\n$$f(x)=\\sum_{k=0}^ma_kx^k=\\sum_{k=0}^mf_kx^{\\underline{k}}$$\n\n\u4f7f\u7528\u5206\u90e8\u6c42\u548c\u516c\u5f0f\u6c42\u89e3\u4e0d\u5b9a\u548c\u5f0f $\\displaystyle\\sum x^{\\underline{k}}r^x\\delta x$\uff08\u6b64\u5904\u7701\u7565\u6c42\u89e3\u8fc7\u7a0b\uff09\uff1a\n\n\n\n$$\\sum x^{\\underline{k}}r^x\\delta x=\\dfrac{r^x}{r-1}\\sum_{i=0}^k{\\left(\\dfrac{-r}{r-1}\\right)}^ik^{\\underline{i}}x^{\\underline{k-i}}$$\n\n\n\u56e0\u6b64\u8bbe $g(x)=\\displaystyle\\sum f(x)r^x\\delta x+C$\uff0c\n\n\u5219 $g(x)=r^xh(x)+C,h(x)$ \u4e3a\u4e00 $m$ \u6b21\u4e0b\u964d\u5e42\u591a\u9879\u5f0f\u3002  \n\n$\\lim\\limits_{n\\rightarrow\\infty}r^nh(n)=0$\uff0c\u4e8e\u662f \n\n\n$$\\sum_{n=0}^\\infty f(n)r^n={\\sum}_0^\\infty f(x)r^x\\delta x=\\lim_{n\\rightarrow\\infty}{\\sum}_0^nf(x)r^x\\delta x$$\n\n$$=\\lim_{n\\rightarrow\\infty} g(n)-g(0)=\\lim_{n\\rightarrow\\infty} r^nh(n)-h(0)=-h(0)$$\n\n\u56e0\u6b64\u7b54\u6848\u5373\u4e3a\n\n$$-h(0)=-\\sum_{k=0}^m\\dfrac{f_k}{r-1}\\sum_{i=0}^k\\left(\\dfrac{-r}{r-1}\\right)^ik^{\\underline{i}}0^{\\underline{k-i}}$$\n$$=-\\sum_{k=0}^m\\dfrac{f_k}{r-1}\\left(\\dfrac{-r}{r-1}\\right)^kk!$$\n\n$\\Theta(m)$ \u4ee3\u5165\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $\\Theta(m\\log^2m)$\uff0c\u74f6\u9888\u4e3a\u8f6c\u4e0b\u964d\u5e42\u591a\u9879\u5f0f\u3002",
        "postTime": 1635775294,
        "uid": 104726,
        "name": "wangrx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5349 \u5e42"
    },
    {
        "content": "\u9898\u610f\uff1a\n\n\u6c42\n\n$$\\sum_{i=0}f(i)w^i$$\n\n\u5176\u4e2d $f$ \u662f\u6b21\u6570\u4e3a $n$ \u7684\u591a\u9879\u5f0f $\\sum_{i=0}^na_ix^i$\uff0c$w$ \u662f\u5e38\u6570\u3002\n\n\u4fdd\u8bc1 $n \\le 10^5$\n\n---\n\n\u751f\u6210\u51fd\u6570\u5165\u95e8\u9898\u3002\n\n\u663e\u7136\u628a\u8981\u628a\u5b83\u62c6\u6210\u5355\u9879\u5f0f\u505a\u3002\n\n\u6784\u9020\u751f\u6210\u51fd\u6570 $F$ \uff0c\u90a3\u4e48\u5047\u8bbe\u62c6\u51fa\u4e86\u4e00\u9879 $x^s$ \uff0c\u5c31\u8bbe\uff1a\n\n$$F_s(x)=\\sum\\limits_{i=0}i^sw^i$$\n\n\u5957\u8def\u5730\u51d1\u7cfb\u6570\uff1a\n\n$$F_s(x)-wF_s(x)=\\sum_{i=0}(i^s-(i-1)^s)w^i$$\n\n\u62c6\u4e00\u62c6\uff1a\n\n$$F_s(x)(1-w)=\\sum_{i=1}w^i(\\sum_{j=0}^{s-1} i^j{s\\choose j})$$\n\n\u8bd5\u4e00\u8bd5\u611f\u89c9\u8d70\u4e0d\u4e0b\u53bb\u4e86\uff0c\u8003\u8651\u4ea4\u6362\u6c42\u548c\u7b26\u53f7\uff1a\n\n$$F_s(x)(1-w)=\\sum_{j=0}^{s-1}{s\\choose j}\\sum_{i=1}w^ii^j$$\n\n$$F_s(x)\\dfrac{1-w}{w}=\\sum_{j=0}^{s-1}{s\\choose j}F_j(x)$$\n\n\u8fd9\u65f6\u518d\u51d1\u6210\u5377\u79ef\u5f62\u5f0f\uff1a\n\n$$\\dfrac{F_s(x)}{ws!}=\\sum_{j=0}^{s}\\dfrac{w^{s-j}}{(s-j)!}\\dfrac{F_j(x)}{j!}$$\n\u8fd9\u6837\u5c31\u5f88\u597d\u4e86\u3002\n\n\u4e8e\u662f\uff1a\n\n$$F(x)=we^xF(x)+1=\\dfrac{1}{1-we^x}$$\n",
        "postTime": 1624381553,
        "uid": 35891,
        "name": "huangzirui",
        "ccfLevel": 0,
        "title": "P5349 \u5e42"
    }
]