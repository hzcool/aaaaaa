[
    {
        "content": "\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u968f\u624b\u5199\u4e86\u4e00\u4e0b\u5c31\u62a2\u4e86\u8fd9\u9898\u7684rk1\u2026\u2026\n\n~~\u62d2\u7eddstl\u7684\u961f\u5217\u4ece\u6211\u505a\u8d77~~\n\n\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\u6211\u4eec\u8ba4\u4e3a$(-1,0),(0,1),(1,0),(0,-1)$\u8fd9\u56db\u4e2a\u65b9\u5411\u7684\u6807\u53f7\u5206\u522b\u4e3a$0,1,2,3$\n\n\u9996\u5148\u6211\u4eec\u8bbe$dp(i,j,k)$ \u8868\u793a\u5728$i,j$\u70b9\u6309\u7167k\u8fd9\u4e2a\u65b9\u5411\u8e39\u4e00\u811a\u673a\u5668\u4eba\u8fd9\u4e2a\u673a\u5668\u4eba\u4f1a\u8dd1\u5230\u4ec0\u4e48\u5730\u65b9\u53bb\n\n\u90a3\u4e48\u8fd9\u4e2a\u4e1c\u897f\u8fd8\u662f\u6bd4\u8f83\u597d\u8f6c\u79fb\u7684\uff0c\u76f4\u63a5\u9012\u5f52\u4e0b\u53bb\u8bb0\u5fc6\u5316\u641c\u7d22\u5c31\u53ef\u4ee5\u4e86\n\n\u4f46\u662f\u6211\u4eec\u53ef\u80fd\u9700\u8981\u6ce8\u610f\u4e24\u4e2a\u70b9\uff0c\u7b2c\u4e00\u70b9\u5c31\u662f\u5982\u679c$(i+dx(k),j+dy(k))$\u8fd9\u4e2a\u70b9\u662f\u5899\u6216\u8005\u969c\u788d\u7269\u7684\u8bdd\u6211\u4eec\u9700\u8981\u5c06$dp(i,j,k)$\u8bbe\u4e3a$num(i,j)$\u610f\u601d\u5c31\u662f\u8bf4\u8fd9\u4e2a\u673a\u5668\u4eba\u4e0d\u4f1a\u52a8\u4e86\n\n\u53e6\u5916\u4e00\u70b9\u5c31\u662f\u73af\uff0c\u6211\u4eec\u5728\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e0b\u4ec0\u4e48\u72b6\u6001\u88ab\u538b\u5728\u4e86\u6808\u91cc\uff0c\u5982\u679c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u8bbf\u95ee\u4e86\u4e00\u4e2a\u6808\u5185\u7684\u5143\u7d20,\u90a3\u4e48\u5c06\u8fd9\u4e2a\u6808\u5185\u7684\u5143\u7d20\u7684dp\u503c\u7f6e\u4e3a$-1$\uff0c\u6ce8\u610f\u8fd9\u91cc\u4e00\u5b9a\u8981\u548c\u5899\u7684\u6807\u53f7\u533a\u522b\u5f00\uff0c\u4e0d\u7136\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u9519\u8bef\n\n\u597d\u4e86\u90a3\u4e48\u5047\u8bbe\u6211\u4eec\u5904\u7406\u51fa\u4e86\u8fd9\u4e2adp\u6570\u7ec4\uff0c\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u5efa\u51fa\u4e00\u5f20\u56fe\u6765\u4e86~\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u5341\u5206\u7684\u50cf\u65af\u5766\u7eb3\u6811\u95ee\u9898\uff0c\u53ea\u662f\u6211\u4eec\u4e0d\u662f\u72b6\u538bdp\u800c\u662f\u533a\u95f4dp\u4e86\n\n\u5177\u4f53\u70b9\u6765\u8bb2\u6211\u4eec\u8bbe$dp(i,j,k)$\u8868\u793a$(i,j)$\u8fd9\u4e2a\u590d\u5408\u673a\u5668\u4eba\u51fa\u73b0\u5728$k$\u70b9\u7684\u6700\u5c0f\u4ee3\u4ef7\n\n\u90a3\u4e48\u5c42\u5916\u8f6c\u79fb\u5c31\u662f\u5411\u533a\u95f4dp\u4e00\u6837\u7684\u679a\u4e3e\u5206\u5272\u70b9mid\u8fdb\u884c\u8f6c\u79fb\n\n$$dp(i,j,k)=\\min_{mid=l}^{r-1}(dp(i,mid,k)+dp(mid+1,r,k))$$\n\n\u7136\u540e\u5c42\u5185\u7684\u8f6c\u79fb\u6211\u4eec\u53d1\u73b0\u4f3c\u4e4e\u6ee1\u8db3\u4e09\u89d2\u4e0d\u7b49\u5f0f(\u5176\u4e2d$k.alist$\u8868\u793a\u70b9k\u7684\u51fa\u8fb9\u96c6\u5408)\n\n$$dp(i,j,k) \\leq min_{v\\in k.alist}dp(i,j,v)+1$$\n\n\u4e0d\u8fc7\u6b64\u65f6\u4f3c\u4e4e\u8f6c\u79fb\u662f\u5e26\u73af\u7684\u2026\u2026\n\n\u90a3\u4e48\u4e00\u822c\u65af\u5766\u6811\u7684\u5957\u8def\u5c31\u662f\u7528spfa\u8fdb\u884c\u8f6c\u79fb\u2026\u2026\n\n\u4e0d\u8fc7\u8fd9\u91cc\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48spfa\u4f1atle\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u6bd4\u8f83nb\u4e00\u70b9\u7684\u526a\u679d\uff0c\u4e0d\u7136\u8fc7\u4e0d\u53bb\n\n\u5177\u4f53\u70b9\u6765\u8bb2\u6211\u4eec\u5f00\u4e24\u4e2a\u961f\u5217\uff0c\u4e00\u4e2a\u5b58\u4e00\u5f00\u59cb\u7684\u70b9\uff0c\u5e76\u4e14\u8fd9\u4e2a\u961f\u5217\u4e2d\u70b9\u662f\u6392\u597d\u5e8f\u7684\uff0c\u6392\u5e8f\u8fd9\u91cc\u5efa\u8bae\u624b\u5199\u8ba1\u6570\u6392\u5e8f\uff0c\u4f1a\u5feb\u4e00\u70b9\uff0c\u53e6\u4e00\u4e2a\u961f\u5217\u5b58\u9700\u8981\u53bb\u677e\u5f1b\u522b\u7684\u70b9\u7684\u70b9\n\n\u7136\u540e\u6bcf\u6b21\u53d6\u961f\u5934\u7684\u65f6\u5019\u53bb\u4e24\u4e2a\u70b9\u4e2ddis\u503c\u8f83\u5c0f\u7684\u90a3\u4e2a\u53bb\u677e\u5f1b\uff0c\u52a0\u4e0a\u8fd9\u4e2a\u7384\u5b66\u526a\u679d\u4e4b\u540e\u6211\u4eec\u7684spfa\u5c31\u8dd1\u7684\u98de\u8d77\u4e86\uff0c\u7136\u540e\u5c31\u4e0d\u7528\u62c5\u5fc3tle\u4e86~\n\n\u7136\u540e\u8fd9\u9898\u5e76\u6ca1\u6709\u4f60\u60f3\u7684\u90a3\u4e48\u6bd2\u7624\uff0c\u6ce8\u610f\u5b9e\u73b0\u65b9\u5f0f\u7684\u8bdd\u8fd8\u662f\u5f88\u597d\u5199\u7684~\n\n\u4e0a\u4ee3\u7801~\n\n```C\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<algorithm>\nusing namespace std;const int N=520;const int E=4*1e6+10;const int M=12;\nint dx[4]={-1,0,1,0};int dy[4]={0,1,0,-1};\nbool book[N][N][4];int dp[N][N][4];int tr[N][N];int ctt;int n;int w;int h;\nint v[4*N*N];int x[4*N*N];int ct;int al[N*N];char mp[N][N];\ninline void add(int u,int V){v[++ct]=V;x[ct]=al[u];al[u]=ct;}\ninline int dfs(const int& x,const int& y,const int& tw)//\u8bb0\u5fc6\u5316\u641c\u7d22\n{\n    if(book[x][y][tw]){return dp[x][y][tw]=-1;}\n    if(dp[x][y][tw]!=-2)return dp[x][y][tw];\n    book[x][y][tw]=true;int tx=x+dx[tw];int ty=y+dy[tw];\n    switch(mp[tx][ty])\n    {\n        case 'x':{dp[x][y][tw]=tr[x][y];break;}\n        case 'A':{dp[x][y][tw]=dfs(tx,ty,(tw+3)%4);break;}\n        case 'C':{dp[x][y][tw]=dfs(tx,ty,(tw+1)%4);break;}\n        default:{dp[x][y][tw]=dfs(tx,ty,tw);break;}\n    }book[x][y][tw]=false;return dp[x][y][tw];\n}int sum[N*N];int q1[N*N];int q2[E];bool inq[N*N];int hd;int tl;int dis[M][M][N*N];\ninline void rixs(int* dis)//\u8ba1\u6570\u6392\u5e8f\n{\n    int mx=0;for(int i=1;i<=ctt;i++)if(dis[i]<0x3f3f3f3f)mx=max(mx,dis[i]);\n    for(int i=1;i<=ctt;i++)if(dis[i]<0x3f3f3f3f)sum[dis[i]]++;\n    for(int i=1;i<=mx;i++)sum[i]+=sum[i-1];\n    for(int i=ctt;i>=1;i--)if(dis[i]<0x3f3f3f3f)q1[sum[dis[i]]--]=i;\n    for(int i=1;i<=ctt;i++)if(dis[i]<0x3f3f3f3f)inq[i]=true;\n    for(int i=0;i<=mx;i++)sum[i]=0;\n}\ninline void ex_spfa(int* dis)//spfa\n{\n    rixs(dis);int cur=1;int hd=1;int tl=0;\n    while((cur<=ctt)||(hd<=tl))\n    {\n        int nw=0x3f3f3f3f;\n        if((cur<=ctt)&&(hd>tl||dis[q1[cur]]<=dis[q2[hd]]))nw=q1[cur],cur++;\n        else nw=q2[hd],hd++;inq[nw]=false;\n        for(int i=al[nw];i;i=x[i])\n            if(dis[v[i]]>dis[nw]+1){dis[v[i]]=dis[nw]+1;if(!inq[v[i]])inq[v[i]]=true,q2[++tl]=v[i];}\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&w,&h);\n    for(int i=1;i<=h;i++)scanf(\"%s\",mp[i]+1);\n    for(int i=1;i<=h;i++)//\u5404\u79cd\u521d\u59cb\u5316~\n        for(int j=1;j<=w;j++)if(mp[i][j]!='x')tr[i][j]=++ctt;\n    for(int j=0;j<=w+1;j++)mp[0][j]='x';for(int j=0;j<=w+1;j++)mp[h+1][j]='x';\n    for(int i=0;i<=h+1;i++)mp[i][0]='x';for(int i=0;i<=h+1;i++)mp[i][w+1]='x';\n    for(int i=1;i<=h;i++)\n        for(int j=1;j<=w;j++)for(int k=0;k<4;k++)dp[i][j][k]=-2;\n    for(int i=1;i<=h;i++)\n        for(int j=1;j<=w;j++)if(mp[i][j]!='x')for(int k=0;k<4;k++)dfs(i,j,k);\n    for(int i=1;i<=h;i++)\n        for(int j=1;j<=w;j++)\n            if(mp[i][j]!='x')for(int k=0;k<4;k++)\n                if(dp[i][j][k]!=-1&&dp[i][j][k]!=tr[i][j])add(tr[i][j],dp[i][j][k]);\n    for(int i=1;i<=n;i++)\n        for(int j=i;j<=n;j++)for(int k=1;k<=ctt;k++)dis[i][j][k]=0x3f3f3f3f;\n    for(int i=1;i<=h;i++)\n        for(int j=1;j<=w;j++)\n            if('0'<mp[i][j]&&mp[i][j]<='9'){int t=mp[i][j]-'0';dis[t][t][tr[i][j]]=0;}\n    for(int len=1;len<=n;len++)\n        for(int l=1,r=l+len-1;r<=n;l++,r++)//dp\n        {\n            for(int mid=l;mid<r;mid++)\n                for(int k=1;k<=ctt;k++)dis[l][r][k]=min(dis[l][r][k],dis[l][mid][k]+dis[mid+1][r][k]);\n            ex_spfa(dis[l][r]);\n        }int ans=0x3f3f3f3f;\n    for(int i=1;i<=ctt;i++)ans=min(ans,dis[1][n][i]);printf(\"%d\",(ans==0x3f3f3f3f)?-1:ans);//\u62dc\u62dc\u7a0b\u5e8f~\n}\n\n```\n",
        "postTime": 1544930839,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3638 \u3010[APIO2013]\u673a\u5668\u4eba \u3011"
    },
    {
        "content": "# P3638 [APIO2013]\u673a\u5668\u4eba\n\n#### \u7b80\u6613\u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5e26\u969c\u788d\u7f51\u683c\u56fe\u4ee5\u53ca $n$ \u4e2a\u987a\u6b21\u7f16\u53f7\u673a\u5668\u4eba\uff0c\u6bcf\u6b21\u5c06\u4e00\u4e2a\u673a\u5668\u4eba\u63a8\u5411\u67d0\u4e2a\u65b9\u5411\u77e5\u9053\u78b0\u5230\u5899\u6216\u969c\u788d\u624d\u4f1a\u505c\u6b62\uff0c\u5982\u679c\u78b0\u5230\u4e86\u8f6c\u5411\u5668(\u4e0d\u7b97\u969c\u788d)\uff0c\u4f1a\u8f6c\u5411\u7ee7\u7eed\u524d\u8fdb\u3002\u5728\u505c\u4e0b\u540e\u82e5\u6709\u7f16\u53f7\u76f8\u90bb\u7684\uff0c\u5219\u5c06\u4e24\u4e2a\u673a\u5668\u4eba\u5408\u5e76\uff0c\u65b0\u7f16\u53f7\u4e3a\u6700\u5c0f\u7684\u7f16\u53f7\u4e0e\u6700\u5927\u7684\u7f16\u53f7\u3002\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u4e2a\u673a\u5668\u4eba\u79fb\u52a8\uff0c\u6c42\u6700\u5c0f\u63a8\u52a8\u6b21\u6570\u4f7f\u6240\u6709\u673a\u5668\u4eba\u5408\u5e76\u3002\uff08\u597d\u957f\u554a\uff0c\u7d2f\u6b7b\u6211\u4e86\uff09\n\n\u6570\u636e\u8303\u56f4\uff1a\u6d4b\u4f8b\u6ee1\u8db3 $n \\leq 9$\uff0c$w \\leq 500$ \u4e14 $h \\leq 500$\u3002\n\n#### \u5206\u6790\uff1a\n\n\u5c40\u9762\u5f88\u5927\uff0c\u4e0d\u80fd\u76f4\u63a5\u4f5c\u4e3a\u72b6\u6001\u8f6c\u79fb\u7740\u8d70\uff0c\u5bb9\u6613\u53d1\u73b0\u6bcf\u4e2a\u673a\u5668\u4eba\u7684\u72b6\u6001\u662f\u72ec\u7acb\u7684\uff0c\u5373\u4e0e\u6574\u4e2a\u5c40\u9762\u65e0\u5173\uff0c\u6545\u5206\u5f00\u8003\u8651\u3002\n\n\u90a3\u4e48\u5206\u4e3a $n$ \u4e2a\u5206\u5c42\u56fe\uff0c\u6bcf\u4e2a\u5206\u5c42\u56fe\u4ee3\u8868\u4e00\u4e2a\u673a\u5668\u4eba\u7f16\u53f7\u4e3a $i \\in [1,n]$ \u7684\u8f6c\u79fb\u3002\n\n\u4f46\u7531\u4e8e\u673a\u5668\u4eba\u4f1a\u5408\u5e76\uff0c\u5408\u5e76\u4e86\u8fd8\u662f\u4e00\u6837\u7684\u8d70\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u5408\u5e76\u4e86\u7684\u673a\u5668\u4eba\u4e5f\u5e94\u5355\u72ec\u6709\u4e00\u5c42\u8f6c\u79fb\u3002\n\n\u90a3\u4e48\u91cd\u65b0\u5b9a\u4e49\u6bcf\u4e00\u5c42\uff0c\u6bcf\u4e2a\u5206\u5c42\u56fe\u4ee3\u8868\u4e00\u4e2a\u673a\u5668\u4eba\u7f16\u53f7\u4e3a $(l,r) $ \uff0c\u5c06\u521d\u59cb\u7684\u673a\u5668\u4eba $i$ \u770b\u505a $(i,i) $ \uff0c\u5176\u4e2d $l \\leq r$ \u4e14 $l,r \\in [1,n]$ \u7684\u8f6c\u79fb\uff0c\u6545\u603b\u5171\u6709 $\\binom{n}{2}$ \u5c42\u3002\n\n\u5148\u8003\u8651\u5206\u5c42\u56fe\u5185\u7684\u8f6c\u79fb\uff0c\u5bb9\u6613\u53d1\u73b0\u6bcf\u4e2a\u4f4d\u7f6e\u5f80\u67d0\u4e2a\u65b9\u5411\u63a8\u4e00\u6b21\u540e\u505c\u4e0b\u7684\u4f4d\u7f6e\u662f\u56fa\u5b9a\u7684\uff0c\u76f4\u63a5\u9884\u5904\u7406\u51fa\u6765\uff0c\u6ce8\u610f\u5224\u73af\u5373\u53ef\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5206\u5c42\u56fe\u53ea\u6709\u4e00\u4e2a\u673a\u5668\u4eba\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528\u6700\u77ed\u8def\u8f6c\u79fb\u5230\u5176\u4ed6\u4f4d\u7f6e\u4e86\u3002\n\n\u800c\u5bf9\u4e8e\u5206\u5c42\u56fe\u95f4\u7684\u8f6c\u79fb\uff0c\u663e\u7136\u53ef\u4ee5\u770b\u51fa $(l,r) $ \u7684\u5206\u5c42\u56fe\u53ef\u4ee5\u7531 $mid \\in [l,r)$ \uff0c $(l,mid) $ \u4ee5\u53ca $(mid+1,r) $ \u4e24\u5c42\u4e2d\u7684\u76f8\u540c\u4f4d\u7f6e\u8f6c\u79fb\u8fc7\u6765\u3002\n\n\u6700\u540e\u4e00\u5c42\u4e0d\u7528\u8dd1\uff0c\u56e0\u4e3a\u63a8\u4e86\u6b65\u6570\u4e00\u5b9a\u589e\u52a0\uff0c\u76f4\u63a5\u68c0\u67e5\u5f53\u524d\u5c40\u9762\u6700\u5c0f\u5373\u4e3a\u7b54\u6848\u3002\n\n\u5728\u6b64\u7ed9\u51fa $\\texttt{Dijkstra}$ \u7684\u4ee3\u7801\uff0c\u5bb9\u6613\u7406\u89e3\uff0c\u4f46\u7531\u4e8e\u5e76\u4e0d\u4f18\u79c0\u7684\u5e38\u6570\u4f1a**T**\u98de\u3002\n\n#### \u4ee3\u7801\uff1a\n\n```cpp\ninline int Get(int &x,int &y) {\n\tif(fl[nxt[x][y]]==-1) {\n\t\treturn 0;\n\t}\n\tif(vis[x][y]&&~fl[nxt[nxt[x][y]][flg[x][y]]]) {\n\t\treturn 1;\n\t}\n\tvis[x][y]=1;\n\tif(Get(nxt[x][y],flg[x][y])) {\n\t\tx=0;\n\t\ty=flg[x][y];\n\t\treturn 1;\n\t}\n\tint tpx=nxt[x][y],tpy=flg[x][y];\n\tx=tpx;\n\ty=tpy;\n\treturn 0;\n}\ninline void Mrg(int l,int mid,int r) {\n\tint now;\n\tfor(now=1; now<=al; now++) {\n\t\tif(~F[l][mid][now]&&~F[mid+1][r][now]) {\n\t\t\tif(~F[l][r][now]) {\n\t\t\t\tckmn(F[l][r][now],F[l][mid][now]+F[mid+1][r][now]);\n\t\t\t} else {\n\t\t\t\tF[l][r][now]=F[l][mid][now]+F[mid+1][r][now];\n\t\t\t}\n\t\t}\n\t}\n}\ninline void Upd(int l,int r) {//Dij\n\tint i,k,mn=INT_MAX,now;\n\tfor(now=1; now<=al; now++) {\n\t\tvst[now]=0;\n\t\tif(~F[l][r][now]) {\n\t\t\tckmn(mn,F[l][r][now]);\n\t\t\tq.push(mkp(-F[l][r][now],now));\n\t\t}\n\t}\n\tif(l==1&&r==n) {\n\t\tans=mn==INT_MAX?-1:mn;\n\t\treturn;\n\t}\n\twhile(!q.empty()) {\n\t\tnow=s(q.top());\n\t\tq.pop();\n\t\tif(vst[now]) {\n\t\t\tcontinue;\n\t\t}\n\t\tvst[now]=1;\n\t\tfor(i=0; i<4; i++) {\n\t\t\tk=nxt[now][i];\n\t\t\tif(~fl[k]&&(F[l][r][k]==-1||F[l][r][k]>F[l][r][now]+1)) {\n\t\t\t\tq.push(mkp(-(F[l][r][k]=F[l][r][now]+1),k));\n\t\t\t}\n\t\t}\n\t}\n}\nsigned main() {\n\tint i,j,k,tp,now;\n\tn=read();\n\tC=read();\n\tR=read();\n\tal=R*C;\n\tfor(memset(fl,-1,sizeof(fl)),i=1; i<=R; i++) {\n\t\tfor(j=1; j<=C; j++) {\n\t\t\tnow=ps(i,j);\n\t\t\tfl[now]=gt();\n\t\t\tif(fl[now]==-1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(1<=fl[now]&&fl[now]<=9) {\n\t\t\t\tpsx[fl[now]]=i;\n\t\t\t\tpsy[fl[now]]=j;\n\t\t\t\tfl[now]=0;\n\t\t\t}//urdl\n\t\t\ttp=ps(i-1,j);\n\t\t\tnxt[now][0]=tp;\n\t\t\tnxt[tp][2]=now;\n\t\t\ttp=ps(i,j-1);\n\t\t\tnxt[now][3]=tp;\n\t\t\tnxt[tp][1]=now;\n\t\t\tfor(k=0; k<4; k++) {\n\t\t\t\tflg[now][k]=k;\n\t\t\t}\n\t\t}\n\t}//one\n\tfor(now=1; now<=al; now++) {\n\t\tif(~fl[now]&&fl[now]) {\n\t\t\tif(fl[now]-10) { //C\n\t\t\t\ttp=nxt[now][0];\n\t\t\t\tfor(k=0; k<3; k++) {\n\t\t\t\t\tflg[now][k]=k+1;\n\t\t\t\t\tnxt[now][k]=nxt[now][k+1];\n\t\t\t\t}\n\t\t\t\tflg[now][3]=0;\n\t\t\t\tnxt[now][3]=tp;\n\t\t\t} else { //A\n\t\t\t\ttp=nxt[now][3];\n\t\t\t\tfor(k=3; k; k--) {\n\t\t\t\t\tflg[now][k]=k-1;\n\t\t\t\t\tnxt[now][k]=nxt[now][k-1];\n\t\t\t\t}\n\t\t\t\tflg[now][0]=3;\n\t\t\t\tnxt[now][0]=tp;\n\t\t\t}\n\t\t}\n\t}//cng\n\tfor(now=1; now<=al; now++) {\n\t\tif(~fl[now]) {\n\t\t\tfor(k=0; k<4; k++) {\n\t\t\t\tint tpnw=now,tpk=k;\n\t\t\t\tGet(tpnw,tpk);\n\t\t\t}\n\t\t}\n\t}//all\n\tfor(tp=0,memset(F,-1,sizeof(F)),i=n; i; i--) {\n\t\tfor(F[i][i][ps(psx[i],psy[i])]=0,j=i; j<=n; j++) {\n\t\t\tfor(k=i; k<j; k++) {\n\t\t\t\tMrg(i,k,j);\n\t\t\t}\n\t\t\tUpd(i,j);\n\t\t}\n\t}\n\twritenum(ans,10);\n\treturn output;\n}//two samples\n/*\n4 10 5\n1.........\nAA...x4...\n..A..x....\n2....x....\n..C.3.A...\n*/\n/*\n0 2 2\nAA\nAA\n*/\n```\n\n\u9996\u5148\u8fd9\u91cc\u7684\u590d\u6742\u5ea6\u8fd8\u6709\u70b9\u5927\uff0c\u800c\u4e14\u8fd9\u9053\u9898\u7565\u5361\u5e38\uff0c\u5728\u6b64\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u9053\u9898\u7684\u4f18\u5316&\u5361\u5e38\u5c0f\u6280\u5de7\u3002\n\n1. \u4f7f\u5185\u5b58\u8fde\u7eed\u3002\u5bb9\u6613\u53d1\u73b0\u5206\u5c42\u56fe\u7684\u6570\u7ec4\u662f $F[big][small][small]\u200b$ \u7684\u5f62\u5f0f\uff0c\u8c03\u6574\u987a\u5e8f $F[small][small][big]\u200b$ \u540e\u80fd\u5feb2~4\u500d\u3002\n\n2. \u7528 $\\texttt{Dijkstra}$ \u4e0d\u5982 $\\texttt{Spfa}$ (\u5927\u96fe)\u3002\u7531\u4e8e\u521d\u59cb\u72b6\u6001\u8f83\u591a\u6545 $\\texttt{Dijkstra}$ \u7684 $O(m log m)$ \u5c31\u53ef\u80fd\u88ab\u5361\u5f97\u8f83\u6ee1\uff0c\u800c $\\texttt{Spfa}$ \u5c31\u53ef\u80fd\u4e3a\u4f18\u79c0\u3002\u8fd9\u6837\u7684\u6761\u4ef6\u663e\u7136\u662f\u4e0d\u8db3\u4ee5\u8ba9\u67d0\u5df2\u6b7b\u7b97\u6cd5\u8d85\u8fc7 $\\texttt{Dijkstra}$ \u7684\uff0c\u66f4\u8fdb\u4e00 \u6b65\u7684\u4f18\u5316\uff0c\u5f15\u7528[shadowice1984](https://www.luogu.com.cn/user/56384)\u7684\u8bdd\uff1a\n\n   \u5177\u4f53\u70b9\u6765\u8bb2\u6211\u4eec\u5f00\u4e24\u4e2a\u961f\u5217\uff0c\u4e00\u4e2a\u5b58\u4e00\u5f00\u59cb\u7684\u70b9\uff0c\u5e76\u4e14\u8fd9\u4e2a\u961f\u5217\u4e2d\u70b9\u662f\u6392\u597d\u5e8f\u7684\uff0c\u6392\u5e8f\u8fd9\u91cc\u5efa\u8bae\u624b\u5199\u8ba1\u6570\u6392\u5e8f\uff0c\u4f1a\u5feb\u4e00\u70b9\uff0c\u53e6\u4e00\u4e2a\u961f\u5217\u5b58\u9700\u8981\u53bb\u677e\u5f1b\u522b\u7684\u70b9\u7684\u70b9\n\n   \u7136\u540e\u6bcf\u6b21\u53d6\u961f\u5934\u7684\u65f6\u5019\u53bb\u4e24\u4e2a\u70b9\u4e2ddis\u503c\u8f83\u5c0f\u7684\u90a3\u4e2a\u53bb\u677e\u5f1b\uff0c\u52a0\u4e0a\u8fd9\u4e2a\u7384\u5b66\u526a\u679d\u4e4b\u540e\u6211\u4eec\u7684 $\\texttt{Spfa}$ \u5c31\u8dd1\u7684\u98de\u8d77\u4e86\uff0c\u7136\u540e\u5c31\u4e0d\u7528\u62c5\u5fc3 $Tle$ \u4e86~\n\n\u90a3\u4e48\u6211\u4eec\u6765\u4ed4\u7ec6\u7684\u601d\u8003\u4e00\u4e0b\u8fd9\u4e2a\u4e1c\u897f\u5230\u5e95\u53d8\u6210\u4e86\u4ec0\u4e48\uff0c\u7531\u4e8e\u8fb9\u6743\u4e3a1\uff0c\u4e0d\u592a\u663e\u7136\u4f46\u4f60\u610f\u4f1a\u3001\u7ec6\u54c1\u80fd\u54c1\u51fa\u6765\u5730\uff0c\u8fd9\u662f\u4e2a $\\texttt{BFS}$ \u4e8e\u662f\u590d\u6742\u5ea6\u6210\u529f\u5730\u7531 $O(72*mlogm)$ \u53d8\u4e3a\u4e86 $O(72*n)$\u3002\n\n```cpp\ninline int GetMx(int *a,int l,int r,int *ds) {\n\tint i,mx=0;\n\tfor(i=l; i<=r; i++) {\n\t\tckmx(mx,ds[a[i]]);\n\t}\n\treturn mx;\n}\ninline void J_sort(int *a,int l,int r,int mx,int *ds) {//js_sort\n\tint i;\n\tfor(i=l; i<=r; i++) {\n\t\tnum[ds[a[i]]]++;\n\t}\n\tfor(i=1; i<=mx; i++) {\n\t\tnum[i]+=num[i-1];\n\t}\n\tfor(i=r; i>=l; i--) {\n\t\ttpp[num[ds[a[i]]]--]=a[i];\n\t}\n\tfor(i=l; i<=r; i++) {\n\t\ta[i]=tpp[i];\n\t}\n\tfor(i=0; i<=mx; i++) {\n\t\tnum[i]=0;\n\t}\n}\ninline void Upd(int l,int r,int *ds) {//Spfa\n\tint i,k,mn=INT_MAX,now,fst;\n\tfor(tot=0,now=1; now<=al; now++) {\n\t\tvst[now]=0;\n\t\tif(~ds[now]) {\n\t\t\tckmn(mn,ds[now]);\n\t\t\tvst[now]=1;\n\t\t\ttmp[++tot]=now;\n\t\t}\n\t}\n\tif(l==1&&r==n) {\n\t\tans=mn==INT_MAX?-1:mn;\n\t\treturn;\n\t}\n\tJ_sort(tmp,fst=1,tot,GetMx(tmp,1,tot,ds),ds);\n\twhile(fst<=tot||!q.empty()) {\n\t\tnow=(q.empty()||(fst<=tot&&ds[tmp[fst]]<ds[q.front()])?tmp[fst++]:(k=q.front(),q.pop_front(),k));\n\t\tvst[now]=0;\n\t\tfor(i=0; i<4; i++) {\n\t\t\tk=nxt[now][i];\n\t\t\tif(~fl[k]&&(ds[k]==-1||ds[k]>ds[now]+1)) {\n\t\t\t\tds[k]=ds[now]+1;\n\t\t\t\tif(!vst[k]) {\n\t\t\t\t\tif(q.empty()||ds[k]>ds[q.front()]) {\n\t\t\t\t\t\tq.push_back(k);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tq.push_front(k);\n\t\t\t\t\t}\n\t\t\t\t\tvst[k]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n#### \u56de\u987e\uff1a\n\n$Q:$ \u8fd9\u9053\u9898\u5230\u5e95\u662f\u4e2a\u4ec0\u4e48\u4e1c\u897f\uff1f\n\n$A:$ \u5176\u5b9e\u662f\u65af\u5766\u7eb3\u6811\u7684\u9b54\u6539\uff0c\u60f3\u8c61\u4e00\u4e2a\u65af\u5766\u7eb3\u6811\u6a21\u677f\uff0c\u51fa\u9898\u4eba\u5f3a\u884c\u5c06\u72b6\u6001\u8fde\u7eed\u8d77\u6765\u4e86\uff0c\u7531\u72b6\u538b $\\texttt{DP}$ \u53d8\u6210\u4e86\u4e00\u4e2a\u533a\u95f4 $\\texttt{DP}$ \uff0c\u72b6\u6001\u5c31\u53ea\u9700 $l,r$ \u4e24\u4e2a\u7f16\u53f7\u5c31\u80fd\u8868\u793a\u4e86\uff0c\u6240\u4ee5\u4f60\u53d1\u73b0\u5206\u5c42\u56fe+\u6700\u77ed\u8def\u8f6c\u79fb\u7684\u601d\u8def\u548c\u65af\u5766\u7eb3\u6811\u7684\u4e00\u6a21\u4e00\u6837\uff0c\u4ec5\u4ec5\u5728\u4e8e\u72b6\u6001\u95f4\u8f6c\u79fb\u4e0d\u540c\u3002\n\n$Q:$ \u505a\u8fd9\u9053\u9898\u6709\u4ec0\u4e48\u7528\uff1f\n\n$A:$ \u63d0\u9ad8\u5947\u602a\u7684\u9898\u76ee\u5206\u6790\u5e76\u5b66\u4e60\u5947\u602a\u7684\u4f18\u5316\u65b9\u6cd5\u3002\n\n$Upd:$ \u8865\u4e86\u4e00\u4e0b $\\LaTeX$\uff0c\u589e\u6dfb\u4e86\u5bf9\u4e8e $\\texttt{Spfa}$ \u4f18\u5316\u7684\u5206\u6790\u3002",
        "postTime": 1608288313,
        "uid": 158948,
        "name": "\u7ea6\u745f\u592b\u7528\u8111\u73a9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3638 \u3010[APIO2013]\u673a\u5668\u4eba \u3011"
    },
    {
        "content": "\u9996\u5148\uff0c \u4ee4 $g(i,j,k)$ \u8868\u793a\u628a\u673a\u5668\u4eba\u4ece $(i,j)$ \u8fd9\u4e2a\u70b9\u5411 $k$ \u65b9\u5411\u9000\u4e00\u4e0b\u6700\u7ec8\u4f1a\u5230\u54ea\u91cc $k=0,1,2,3 $ \u5206\u522b\u8868\u793a\u4e0a\u3001 \u53f3\u3001 \u4e0b\u3001 \u5de6\n\n\u53ef\u4ee5\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u6c42\u51fa\n\n\u56e0\u4e3a\u9898\u4e2d\u8bf4 \u201c\u5982\u679c\u4e24\u4e2a\u673a\u5668\u4eba\u7684\u7f16\u53f7\u662f\u8fde\u7eed\u7684\uff0c\u90a3 \u4e48\u5b83\u4eec\u662f\u517c\u5bb9\u7684\uff0c\u53ef\u4ee5\u5408\u5e76\u6210\u4e00\u4e2a\u590d\u5408\u673a\u5668\u4eba\u3002\u201d \u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u7ec4\u6210\u590d\u5408\u673a\u5668\u4eba\u7684\u673a\u5668\u4eba\u662f\u4e00\u6bb5\u533a\u95f4\u3002 \u4e8e\u662f\uff0c \u4ee4 $f(l,r,i,j)$ \u8868\u793a\u533a\u95f4 $[l,r]$ \u4e2d\u7684\u673a\u5668\u4eba\u7ec4\u6210\u7684\u590d\u5408\u673a\u5668\u4eba\u5728\u70b9 $(i,j)$ \u65f6\u7684\u6700\u5c0f\u6b65\u6570\u3002 \n\n\u8f6c\u79fb\u5206\u4e24\u79cd\uff1a\n#### 1. \u8fd9\u4e2a\u590d\u5408\u673a\u5668\u4eba\u7531\u4e24\u4e2a\u673a\u5668\u4eba\u5408\u5e76\u800c\u6210\n\n$f(l,r,i,j)=\\min_{mid\\in [l,r-1]}\\{f(l,mid,i,j)+f(mid+1,r,i,j)\\}$\n\n\u8fd9\u4e2a\u90e8\u5206\u76f4\u63a5\u8f6c\u79fb\u5373\u53ef\n\n#### 2. \u8fd9\u4e2a\u590d\u5408\u673a\u5668\u4eba\u4ece\u53e6\u4e00\u4e2a\u5730\u65b9\u63a8\u8fc7\u6765\n\n$f(l,r,i,j)=\\min_{g(i',j',k)=(i,j),k\\in [0,3]} \\{f(l,r,i',j') \\}$\n\n\u8fd9\u4e00\u90e8\u5206\u6211\u4eec\u7528\u6539\u7248\u7684 $bfs$ \u89e3\u51b3\uff1a\n\n\u5728\u6b65\u9aa4 1 \u8f6c\u79fb\u5b8c\u6210\u540e\uff0c \u5c06\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9 $(i,j)$ \u653e\u8fdb\u4e00\u4e2a\u961f\u5217\u4e2d\uff0c \u5c06\u961f\u5217\u4e2d\u7684\u5143\u7d20\u6309\u7167\u6b65\u6570\u6392\u5e8f\uff0c \u66f4\u65b0\u51fa\u6765\u7684\u70b9\u653e\u8fdb\u53e6\u5916\u4e00\u4e2a\u961f\u5217\uff0c \u6bcf\u6b21\u53d6\u51fa\u4e24\u4e2a\u961f\u5217\u7684\u961f\u9996\u6b65\u6570\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\uff0c\u5bf9\u5176\u5f80\u56db\u4e2a\u65b9\u5411\u6269\u5c55\uff0c \u52a0\u5165\u7b2c\u4e8c\u4e2a\u961f\u5217\u3002\n\n\u63a5\u4e0b\u6765\u662f\u4f18\u5316\u3002\n\n\n~~\u5176\u5b9e\u8fd9\u9053\u9898\u4e0d\u9700\u8981\u624b\u5199\u961f\u5217\u548c\u6392\u5e8f\uff0c\u5438\u6c27\u5c31\u8fc7\u4e86~~\n\n\u8fd9\u91cc\u8fd8\u662f\u5efa\u8bae\u624b\u5199\u961f\u5217\u548c\u8ba1\u6570\u6392\u5e8f\uff0c \u53ef\u4ee5\u4f18\u5316\u5e38\u6570\u3002\n\n## Code:\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\ntypedef pair<int, int> pr;\nconst int N = 502, inf = 0x3f3f3f3f;\nconst int dx[4] = { -1, 0, 1, 0 }, dy[4] = { 0, -1, 0, 1 };\nint T, n, m, f[10][10][N][N], L_, R_;\nchar mp[N][N];\npr a[N], mem[N][N][4], gto[N][N][4];\nbool vis[N][N][4], used[N][N];\npr dfs(int x, int y, int k) {\n    if (mem[x][y][k].first >= 0)\n        return mem[x][y][k];\n    if (vis[x][y][k])\n        return mem[x][y][k] = pr(0, 0);\n    vis[x][y][k] = 1;\n\n    int k_ = (mp[x][y] == 'A') ? (k + 1) % 4 : ((mp[x][y] == 'C') ? (k + 3) % 4 : k);\n    int x_ = x + dx[k_], y_ = y + dy[k_];\n    if (x_ < 1 || x_ > m || y_ < 1 || y_ > n || mp[x_][y_] == 'x')\n        mem[x][y][k] = pr(x, y);\n    else\n        mem[x][y][k] = dfs(x_, y_, k_);\n    vis[x][y][k] = 0;\n    return mem[x][y][k];\n}\nclass Pair_Queue {\nprotected:\n    int head, tail, tms[N * N], st, ed;\n    pr q[N * N], cts[N * N];\n\npublic:\n    void init() { memset(tms, 0, sizeof tms); }\n    inline void reset() { head = 1, tail = 0; }\n    inline bool empty() { return tail < head; }\n    inline void push(int k, int h) { q[++tail] = pr(k, h); }\n    inline pr front() { return q[head]; }\n    inline void pop() { head++; }\n#define dis(k) (f[L_][R_][(k).first][(k).second])\n    inline void countsort() {\n        st = inf, ed = 0;\n        for (int i = head, val; val = dis(q[i]), i <= tail; i++)\n            cts[i] = q[i], st = min(st, val), ed = max(ed, val), tms[val]++;\n        for (int i = st + 1; i <= ed; i++) tms[i] += tms[i - 1];\n        for (int i = head; i <= tail; i++) q[tms[dis(cts[i])]--] = cts[i];\n        for (int i = st; i <= ed; i++) tms[i] = 0;\n    }\n#undef dis\n} q1, q2;\nvoid bfs(int l, int r) {\n    q1.reset(), q2.reset(), L_ = l, R_ = r;\n    for (int i = 1; i <= m; i++)\n        for (int j = 1; j <= n; j++)\n            if (f[l][r][i][j] < inf)\n                q1.push(i, j);\n    if (q1.empty())\n        return;\n    memset(used, 0, sizeof used), q1.countsort();\n    pr u;\n#define dis(k) (f[l][r][(k).first][(k).second])\n#define use(k) (used[(k).first][(k).second])\n    for (int x, y, x_, y_; !q1.empty() || !q2.empty();) {\n        if (q1.empty())\n            u = q2.front(), q2.pop();\n        else if (q2.empty())\n            u = q1.front(), q1.pop();\n        else if (dis(q1.front()) < dis(q2.front()))\n            u = q1.front(), q1.pop();\n        else\n            u = q2.front(), q2.pop();\n        x = u.first, y = u.second, used[x][y] = 1;\n        for (int o = 0; o < 4; o++) {\n            x_ = gto[x][y][o].first, y_ = gto[x][y][o].second;\n            if (!(x_ < 1 || x_ > m || y_ < 1 || y_ > n || mp[x_][y_] == 'x') &&\n                f[l][r][x][y] + 1 < f[l][r][x_][y_])\n                f[l][r][x_][y_] = f[l][r][x][y] + 1, used[x_][y_] = 1, q2.push(x_, y_);\n        }\n        while (!q1.empty() && use(q1.front())) q1.pop();\n    }\n}\nint main() {\n    memset(mem, -1, sizeof(mem));\n    scanf(\"%d%d%d\", &T, &n, &m), memset(f, 0x3f, sizeof f), q1.init(), q2.init();\n    char ch = getchar();\n    for (int i = 1, k; i <= m; i++) {\n        while (!(('0' <= ch && ch <= '9') || ch == '.' || ch == 'x' || ch == 'A' || ch == 'C'))\n            ch = getchar();\n        for (int j = 1; j <= n; j++) {\n            mp[i][j] = ch, ch = getchar();\n            if ('0' <= mp[i][j] && mp[i][j] <= '9')\n                a[k = mp[i][j] - '0'] = pr(i, j), f[k][k][i][j] = 0;\n        }\n    }\n    for (int i = 1; i <= m; i++)\n        for (int j = 1; j <= n; j++)\n            if (mp[i][j] != 'x')\n                for (int k = 0; k < 4; k++) gto[i][j][k] = dfs(i, j, k);\n    for (int len = 1; len <= T; len++)\n        for (int l, r = T; l = r - len + 1, l; r--) {\n            for (int mid = l; mid < r; mid++)\n                for (int x = 1; x <= m; x++)\n                    for (int y = 1; y <= n; y++)\n                        f[l][r][x][y] = min(f[l][r][x][y], f[l][mid][x][y] + f[mid + 1][r][x][y]);\n            bfs(l, r);\n        }\n    int ans = inf;\n    for (int x = 1; x <= m; x++)\n        for (int y = 1; y <= n; y++) ans = min(ans, f[1][T][x][y]);\n    printf(\"%d\\n\", ans < inf ? ans : -1);\n    return 0;\n}",
        "postTime": 1633527324,
        "uid": 225370,
        "name": "loverintime",
        "ccfLevel": 8,
        "title": "P3638"
    },
    {
        "content": "\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\u5728\u4e00\u4e2a\u4f4d\u7f6e\u5411\u4e00\u4e2a\u65b9\u5411\u8d70**\u4e00\u6b65**\u7684\u540e\u7ee7\u4f4d\u7f6e\u662f\u552f\u4e00\u7684\uff0c\u56e0\u6b64\u8003\u8651\u4f7f\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u6c42\u51fa\u6bcf\u4e2a\u4f4d\u7f6e\u8d70\u4e00\u6b65\u53ef\u4ee5\u5230\u8fbe\u7684\u4f4d\u7f6e\u3002\n\n\u95ee\u9898\u8f6c\u5316\u4e3a\u4e00\u4e2a\u8fb9\u6743\u4e3a $1$ \u7684\u6709\u5411\u56fe\u4e2d\u4f7f\u6240\u6709\u673a\u5668\u4eba\u5408\u5e76\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u8fd9\u5b9e\u8d28\u4e0a\u662f\u6700\u5c0f\u65af\u5766\u7eb3\u6811\u6a21\u677f\u52a0\u4e0a**\u7f16\u53f7\u76f8\u90bb\u5408\u5e76**\u7684\u9650\u5236\uff0c\u5c06\u539f\u6709\u7684\u72b6\u538b DP \u6539\u4e3a\u533a\u95f4 DP \u5373\u53ef\u6c42\u51fa\u7b54\u6848\u3002\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$\nf(l,r,i)=\\min_{1\\le j\\le n}\\{f(l,r,j)+1\\}\n$$\n$$\nf(l,r,i)=\\min_{l\\le x<r}\\{f(l,x,i)+f(x+1,r,i)\\}\n$$\n\n\u7531\u4e8e\u8fb9\u6743\u5168\u4e3a $1$\uff0c\u4f7f\u7528 bfs \u66f4\u65b0\u7b2c\u4e00\u6761\u5373\u53ef\u3002\n\n\u8bbe $n$ \u4e3a\u77e9\u5f62\u7684\u957f\u5bbd\uff0c$K$ \u4e3a\u673a\u5668\u4eba\u4e2a\u6570\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(K^3n^2)$\u3002\n\n### code\n\n```cpp\n/*FreeTimeLove's code.\nLove has a nasty habit of disappearing over night.*/\n#include<bits/stdc++.h>\nnamespace chiptune{\n#define ll long long\n#define LD long double\n#define i7 __int128\n#define re return\n#define con continue\nusing namespace std;\ninline void ckmin(auto &a,auto b){if(b<a)a=b;}\ninline void ckmax(auto &a,auto b){if(a<b)a=b;}\nconst int N=505;\ninline int rd(){\n\tint ans=0,f=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')f^=(ch=='-'),ch=getchar();\n\twhile(ch>='0'&&ch<='9')ans=(ans<<3)+(ans<<1)+(ch^48),ch=getchar();\n\tre f?-ans:ans;\n}\nint nxt[4][2]={{1,0},{0,1},{-1,0},{0,-1}};\nint n,m,K,nm,INF=0x3f3f3f3f,f[10][10][N*N];\nchar a[N][N],vis[N][N][5];\nint nd[N*N],tt=1;\nstruct edge{\n\tint v,nxt;\n}e[N*N*4];\nvoid add(int u,int v){\n\te[++tt]={v,nd[u]};\n\tnd[u]=tt;\n//\tprintf(\"(%d,%d)\\n\",u,v);\n}\nstruct xxs{\n\tint x,y;\n}to[N][N][5];\nxxs dfs(int x,int y,int t){\n\tif(to[x][y][t].x)re to[x][y][t];\n\tint nt=t,nx,ny;\n\tif(a[x][y]=='A')nt=(nt+1)&3;\n\tif(a[x][y]=='C')nt=(nt+3)&3;\n\tnx=x+nxt[nt][0],ny=y+nxt[nt][1];\n\tif(!nx||nx>n||!ny||ny>m||a[nx][ny]=='x')re to[x][y][t]={x,y};\n\tif(vis[nx][ny][nt])re to[x][y][t]={-1,-1};\n\tvis[x][y][t]=1;\n\tto[x][y][t]=dfs(nx,ny,nt);\n\tvis[x][y][t]=0;\n\tre to[x][y][t];\n}\nint bk[N*N],id[N*N];\nint bt[N*N],b[N*N];\nvoid bfs(int *dis){\n\tmemset(bk,0,sizeof bk);\n\tmemset(bt,0,sizeof bt[0]*nm);\n\tqueue<int>q;\n\tint cnt=nm;\n\tfor(int i=nm;i;i--)\n\t\tif(dis[id[i]]==INF)swap(id[i],id[cnt--]);\n\tfor(int i=1;i<=cnt;i++)bt[dis[id[i]]]++;\n\tfor(int i=1;i<=nm;i++)bt[i]+=bt[i-1];\n\tfor(int i=cnt;i;i--)b[bt[dis[id[i]]]--]=id[i];\n\tmemcpy(id+1,b+1,sizeof b[0]*cnt);\n\tcnt=2;\n\tq.push(id[1]);\n\twhile(q.size()){\n\t\tint u=q.front();q.pop();\n\t\tif(bk[u])con;\n\t\tbk[u]=1;\n\t\twhile(cnt<=nm&&dis[id[cnt]]<=dis[u]+1)q.push(id[cnt++]);\n\t\tfor(int i=nd[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].v;\n\t\t\tif(dis[v]>dis[u]+1)dis[v]=dis[u]+1,q.push(v);\n\t\t}\n\t}\n}\nint main(){\n//\tfreopen(\"data.in\",\"r\",stdin);\n\tK=rd(),m=rd(),n=rd(),nm=n*m;\n\tfor(int i=1;i<=nm;i++)id[i]=i;\n\tfor(int l=1;l<=K;l++)\n\t\tfor(int r=l;r<=K;r++)memset(f[l][r],0x3f,sizeof f[l][r]);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s\",a[i]+1);\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif(a[i][j]>'0'&&a[i][j]<='9'){\n\t\t\t\tint x=a[i][j]-'0';\n\t\t\t\tf[x][x][(i-1)*m+j]=0;\n\t\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++){\n\t\tif(a[i][j]=='x')con;\n\t\tfor(int t=0;t<4;t++){\n\t\t\tif(!to[i][j][t].x)dfs(i,j,t);\n\t\t\tint x=to[i][j][t].x,y=to[i][j][t].y;\n\t\t\tif(x>0)add((i-1)*m+j,(x-1)*m+y);\n\t\t}\n\t}\n\t/*--------------------------------*/\n\tfor(int r=1;r<=K;r++)\n\tfor(int l=r;l;l--){\n\t\tfor(int i=l;i<r;i++)\n\t\t\tfor(int j=1;j<=nm;j++)ckmin(f[l][r][j],f[l][i][j]+f[i+1][r][j]);\n\t\tbfs(f[l][r]); \n\t}\n\tint ans=INF;\n\tfor(int i=1;i<=nm;i++)ckmin(ans,f[1][K][i]);\n\tprintf(\"%d\\n\",ans==INF?-1:ans);\n\tre 0;\n}\n/*\n2 5 5\n.x1Ax\n..A..\n..C.C\nCx...\n2....\n\n*/\n}int main(){re chiptune::main();}\n```\n\n> Love has a nasty habit of disappearing over night.",
        "postTime": 1673873139,
        "uid": 346440,
        "name": "FreeTimeLove",
        "ccfLevel": 7,
        "title": "P3638 [APIO2013] \u673a\u5668\u4eba"
    },
    {
        "content": "# [[APIO2013] \u673a\u5668\u4eba](https://www.luogu.com.cn/problem/P3638)\r\n\r\n\r\n\u5148\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u627e\u5230\u6bcf\u4e2a\u70b9 $(i,j)$ \u5411\u65b9\u5411 $k$ \u79fb\u52a8\u6700\u7ec8\u5230\u7684\u4f4d\u7f6e\u3002  \r\n`A` \u5411\u5de6\u8f6c\uff0c `C` \u5411\u53f3\u8f6c\u3002  \r\n\u4f3c\u4e4e\u95ee\u9898\u4e0d\u662f\u90a3\u4e48\u7b80\u5355\uff0c\u6709\u53ef\u80fd\u51fa\u73b0\u73af\u3002  \r\n\u6bd4\u5982\u4e0b\u9762\u7684\u60c5\u51b5\u3002  \r\n```cpp\r\n\r\nAA\r\nAA\r\n\r\n```\r\n\u4ece\u4efb\u610f\u4e00\u4e2a `A` \u5411\u9644\u8fd1\u7684 `A` \u51fa\u53d1\uff0c\u6700\u7ec8\u90fd\u4f1a\u4e00\u76f4\u5728\u8f6c\u5708\u5708\u3002  \r\n\u7279\u5224\u4e00\u4e0b\u5373\u53ef\u3002  \r\n\r\n\u53d1\u73b0\u5408\u5e76\u662f\u6709\u987a\u5e8f\u7684\uff0c\u7c7b\u4f3c\u533a\u95f4\u5408\u5e76\uff0c\u8003\u8651\u533a\u95f4 DP\u3002  \r\n\u8bbe $f_{l,r,k}$ \u8868\u793a $[l,r]$ \u7684\u673a\u5668\u4eba\u5728\u4f4d\u7f6e $k$ \u5408\u5e76\u7684\u7b54\u6848\u3002  \r\n\r\n\u4e0d\u540c\u673a\u5668\u4eba\u7684\u8f6c\u79fb $f_{l,mid,k}+f_{mid+1,r,k}\\to f_{l,r,k}$ \u3002  \r\n\u540c\u4e00\u79cd\u673a\u5668\u4eba\u7684\u8f6c\u79fb $f_{l,r,k'}+1\\to f_{l,r,k}(k\\ne k';k,k' \\text{\u8fde\u901a})$\u3002  \r\n\r\n\u7b2c\u4e8c\u79cd\u8f6c\u79fb\uff0c\u6ee1\u8db3\u4e09\u89d2\u4e0d\u7b49\u5f0f\uff0c\u4e00\u770b\u5c31\u662f\u65af\u5766\u7eb3\u6811\uff0c\u53ef\u4ee5\u5199\u4e2a\u6700\u77ed\u8def\u3002  \r\n\r\n\u5173\u4e8e\u5361\u5e38\uff0c\u7528 C++20 \u548c O2 \u80fd\u8fc7\u3002  \r\n\r\n```cpp\r\n#include<cstdio>\r\n#include<cstring>\r\n#include<queue>\r\n#define _for(i,a,b) for(register int i=(a);i<=(b);++i)\r\n#define __for(i,a,b) for(register int i=(a);i>=(b);--i)\r\n#define Re register int\r\n#define il inline\r\n#define pc putchar\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int N=500+10,M=(1<<11)+10,mod=1e9+7;\r\nil int re(){\r\n    int x=0;\r\n    bool f=0;\r\n    char ch=getchar();\r\n    while(ch<'0'||ch>'9')\r\n        f|=ch=='-',ch=getchar();\r\n    while(ch>='0'&&ch<='9')\r\n        x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\r\n    return f?-x:x;\r\n}\r\nvoid pr(int x){\r\n    if(x<0) x=-x,pc('-');\r\n    if(x>9) pr(x/10);\r\n    pc(x%10|48);\r\n}\r\n\r\nint n,w,h;\r\nchar a[N][N];\r\nint id[N][N],num;\r\n\r\n int dx[4]={0,0,1,-1},dy[4]={1,-1,0,0};\r\nbool now[N][N][4];\r\nint to[N][N][4];\r\nint dfs( int x, int y, int d){\r\n\tif(now[x][y][d]){\r\n\t\tto[x][y][d]=-1;\r\n\t\treturn -1;\r\n\t}\r\n\tif(to[x][y][d]) return to[x][y][d];\r\n\tnow[x][y][d]=1;\r\n\t int xx=x+dx[d],yy=y+dy[d];\r\n\tif(a[xx][yy]=='x'){\r\n\t\tto[x][y][d]=id[x][y];\r\n\t}\r\n\telse if(a[xx][yy]=='A'){\r\n\t\tif(d==0)\r\n\t\t\tto[x][y][d]=dfs(xx,yy,3);\r\n\t\telse if(d==1)\r\n\t\t\tto[x][y][d]=dfs(xx,yy,2);\r\n\t\telse if(d==2)\r\n\t\t\tto[x][y][d]=dfs(xx,yy,0);\r\n\t\telse\r\n\t\t\tto[x][y][d]=dfs(xx,yy,1);\r\n\t}\r\n\telse if(a[xx][yy]=='C'){\r\n\t\tif(d==0)\r\n\t\t\tto[x][y][d]=dfs(xx,yy,2);\r\n\t\telse if(d==1)\r\n\t\t\tto[x][y][d]=dfs(xx,yy,3);\r\n\t\telse if(d==2)\r\n\t\t\tto[x][y][d]=dfs(xx,yy,1);\r\n\t\telse \r\n\t\t\tto[x][y][d]=dfs(xx,yy,0);\r\n\t}\r\n\telse to[x][y][d]=dfs(xx,yy,d);\r\n\tnow[x][y][d]=0;\r\n\treturn to[x][y][d];\r\n}\r\n\r\nint r[N*N],cnt;\r\nstruct Edge{\r\n\tint t,n;\r\n}edge[N*N*4];\r\nil void add_edge(int u,int v){\r\n\tedge[++cnt]=(Edge){v,r[u]};r[u]=cnt;\r\n}\r\nint f[10][10][N*N];\r\n\r\n\r\nvoid init(){\r\n\t_for(i,1,h)\r\n\t\t_for(j,1,w)\r\n\t\t\tif(a[i][j]!='x')\r\n\t\t\t\tid[i][j]=++num;\r\n\t_for(i,1,h)\r\n\t\ta[i][0]=a[i][w+1]='x';\r\n\t_for(j,1,w)\r\n\t\ta[0][j]=a[h+1][j]='x';\r\n\t_for(i,1,h){\r\n\t\t_for(j,1,w){\r\n\t\t\tif(a[i][j]!='x')\r\n\t\t\t\t_for(k,0,3)\r\n\t\t\t\t\tdfs(i,j,k);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t_for(i,1,h)\r\n\t\t_for(j,1,w)\r\n\t\t\tif(a[i][j]!='x')\r\n\t\t\t\t_for(k,0,3)\r\n\t\t\t\t\tif((~to[i][j][k])&&to[i][j][k]!=id[i][j])\r\n\t\t\t\t\t\tadd_edge(id[i][j],to[i][j][k]);\r\n\tmemset(f,0x3f,sizeof(f));\r\n\t_for(i,1,h)\r\n\t\t_for(j,1,w)\r\n\t\t\tif(a[i][j]>'0'&&a[i][j]<='9'){\r\n\t\t\t\tint number=a[i][j]^48;\r\n\t\t\t\tf[number][number][id[i][j]]=0;\r\n\t\t\t}\r\n\t\r\n}\r\n\r\nstruct node{\r\n\tint x,v;\r\n};\r\nbool operator <(const node &x,const node &y){\r\n\treturn x.v>y.v;\r\n}\r\npriority_queue<node> q;\r\nbool done[N*N];\r\nvoid dijkstra(int L,int R){\r\n\tmemset(done,0,sizeof(done));\r\n\twhile(!q.empty()){\r\n\t\tint x=q.top().x;q.pop();\r\n\t\tif(done[x]) continue;\r\n\t\tdone[x]=1;\r\n\t\tfor(Re i=r[x],y;i&&(y=edge[i].t);i=edge[i].n)\r\n\t\t\tif(f[L][R][y]>f[L][R][x]+1){\r\n\t\t\t\tf[L][R][y]=f[L][R][x]+1;\r\n\t\t\t\tq.push((node){y,f[L][R][y]});\r\n\t\t\t}\r\n\t}\r\n}\r\nvoid calc(int &x,int y){\r\n\tif(x>y) x=y;\r\n}\r\n\r\nsigned main(){\r\n    n=re(),w=re(),h=re();\r\n    _for(i,1,h)\r\n    \tscanf(\"%s\",a[i]+1);\r\n    init();\r\n    \r\n    _for(len,1,n){\r\n    \tfor(Re l=1,r;(r=l+len-1)<=n;++l){\r\n\t\t\t_for(k,1,num){\r\n\t\t\t\tfor(Re mid=l;mid<r;++mid)\r\n\t\t\t\t\tcalc(f[l][r][k],f[l][mid][k]+f[mid+1][r][k]);\r\n\t\t\t\tif(f[l][r][k]<f[0][0][0])\r\n\t\t\t\t\tq.push((node){k,f[l][r][k]});\r\n\t\t\t}\r\n\t\t\tdijkstra(l,r);\r\n\t\t}\r\n    }\r\n\tint ans=f[0][0][0];\r\n\t_for(k,1,num)\r\n\t\tif(f[1][n][k]<ans)\r\n\t\t\tans=f[1][n][k];\r\n\tif(ans==f[0][0][0])\r\n\t\tans=-1;\r\n\tpr(ans);\r\n    return 0;\r\n}\r\n```\r\n",
        "postTime": 1673692872,
        "uid": 609626,
        "name": "St_john",
        "ccfLevel": 0,
        "title": "P3638 [APIO2013] \u673a\u5668\u4eba"
    }
]