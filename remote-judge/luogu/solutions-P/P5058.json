[
    {
        "content": "\u8fd8\u6ca1\u6709\u5706\u65b9\u6811\u7684\u9898\u89e3\uff0c\u6211\u6765\u5199\u4e00\u4e2a\u3002\n\n\u524d\u7f6e\u77e5\u8bc60\uff0c\u70b9\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u8fd9\u4e2a\u76f8\u4fe1\u6765\u505a\u8fd9\u9053\u9898\u7684\u540c\u5b66\u5e94\u8be5\u90fd\u4f1a\u4e86\u3002\n\u524d\u7f6e\u77e5\u8bc61\uff0c\u5706\u65b9\u6811\uff0c\u53ef\u4ee5\u53c2\u8003\u5c0f\u7c89\u5154\u7684\u535a\u5ba2\u6587\u7ae0https://www.cnblogs.com/PinkRabbit/p/10446473.html\n\n\u7528\u5706\u65b9\u6811\u89e3\u51b3\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u76f8\u5173\u7684\u95ee\u9898\uff0c\u6bd4\u8f83\u8212\u670d\u3002\u628a\u539f\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u5f53\u6210\u4e00\u4e2a\u5706\u70b9\uff0c\u7ed9\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u521b\u5efa\u4e00\u4e2a\u65b9\u70b9\uff0c\u628a\u5c5e\u4e8e\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u5706\u70b9\u5411\u5bf9\u5e94\u7684\u65b9\u70b9\u8fde\u8fb9\uff0c\u8fd9\u6837\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u6811\u3002\u8fd9\u4e2a\u65b0\u7684\u6811\u4e0a\u9762\uff0c\u5ea6\u5927\u4e8e1\u7684\u5706\u70b9\uff0c\u5c31\u662f\u5272\u70b9\u3002\u800c\u9898\u76ee\u4e2d\u95ee\u4e24\u4e2a\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u5fc5\u7ecf\u70b9\uff0c\u5c31\u662f\u5272\u70b9\u3002\u90a3\u4e48\u53ea\u9700\u8981\u5efa\u597d\u5706\u65b9\u6811\u4ee5\u540e\uff0c\u5728\u6811\u4e0a\u4e24\u70b9\u95f4\u8def\u5f84\u4e0a\u627e\u7f16\u53f7\u6700\u5c0f\u7684\u5706\u70b9\u5c31\u884c\u4e86\u3002\n\n\u9996\u5148\u9898\u76ee\u4e2d\u7684\u4e24\u4e2a\u670d\u52a1\u5668\uff0c\u5206\u522b\u8bbe\u4e3astart\u548ctarget\uff0c\u8fd9\u65f6\u5019\u9898\u76ee\u4e2d\u5e76\u6ca1\u6709\u4fdd\u8bc1start\u548ctarget\u662f\u8fde\u901a\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u4ecestart\u5f00\u59cbtarjan\u8dd1\u4e00\u904d\uff0c\u770b\u770b\u8dd1\u5b8c\u4ee5\u540etarget\u70b9\u7684dfs\u65f6\u95f4\u6233\u662f\u5426\u53d8\u8fc7\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u8bf4\u660e\u4e0d\u8fde\u901a\uff0c\u4e00\u5b9a\u65e0\u89e3\u3002\u5982\u679c\u8fde\u901a\uff0c\u5176\u4ed6\u6ca1\u7ecf\u8fc7\u7684\u70b9\u4e5f\u4e0d\u7528\u7ba1\u4e86\uff0c\u53ea\u9700\u8981\u5904\u7406\u8fd9\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\u91cc\u9762\u7684\u70b9\u5c31\u884c\u4e86\u3002\n\n\u8dd1tarjan\u7684\u65f6\u5019\uff0c\u987a\u4fbf\u628a\u5706\u65b9\u6811\u5efa\u8d77\u6765\uff0c\u8fd9\u4e2a\u5efa\u6811\u7684\u8fc7\u7a0b\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\u3002\u5efa\u597d\u6811\u4ee5\u540e\uff0c\u600e\u4e48\u627e\u4e24\u70b9\u95f4\u8def\u5f84\u5462\uff1f\u53ef\u4ee5\u4ee5start\u4e3a\u6839\uff0c\u5411\u4e0bdfs\u627etarget\u70b9\uff0c\u56e0\u4e3a\u5706\u65b9\u6811\u662f\u4e00\u4e2a\u65e0\u6839\u6811\uff0c\u4ee5\u8c01\u4e3a\u6839\u90fd\u53ef\u4ee5\uff0c\u4e0d\u59a8\u4ee5start\u4e3a\u6839\uff0c\u5f88\u65b9\u4fbf\u3002\n\n\u7136\u540e\u5f80\u4e0bdfs\u7684\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u8def\u5f84\u4e0a\u7684\u7b54\u6848\uff0c\u627e\u5230target\u8f93\u51fa\u7b54\u6848\u5373\u53ef\uff0c\u603b\u590d\u6742\u5ea6$O(N)$\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <stack>\n#include <cstdlib>\n\nusing namespace std;\nconst int MAXN = 400005;//\u8fd9\u91cc\u6ce8\u610f\u8981\u5f00\u53cc\u500d\u7a7a\u95f4\uff0c\u56e0\u4e3a\u5706\u65b9\u6811\u4e0a\u70b9\u7684\u4e2a\u6570\u53ef\u80fd\u52302n\u7684\u6570\u91cf\n//n\u662f\u539f\u56fe\u4e2d\u70b9\u7684\u6570\u91cf\uff0cstart\u548ctarget\u662f\u4e24\u4e2a\u670d\u52a1\u5668\uff0cnn\u662f\u5706\u65b9\u6811\u4e0a\u70b9\u7684\u6570\u91cf\nint n, start, target, nn, pre[MAXN], low[MAXN], dt;\n//\u5206\u522b\u662f\u539f\u56fe\uff0c\u548c\u5706\u65b9\u6811\u7684\u90bb\u63a5\u8868\nvector<int> adj[MAXN], adjT[MAXN];\nstack<int> s;\n\nvoid tarjan(int u, int father) {\n    pre[u] = low[u] = ++dt;\n    s.push(u);\n    for (int i = 0; i < adj[u].size(); ++i) {\n        int v = adj[u][i];\n        if (pre[v] == 0) {\n            tarjan(v, u);\n            low[u] = min(low[u], low[v]);\n            if (low[v] >= pre[u]) {\n                nn++;//\u627e\u5230\u4e00\u4e2a\u65b0\u7684\u70b9\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u65b0\u589e\u4e00\u4e2a\u65b9\u70b9\n                while (true) {\n                    int t = s.top();\n                    s.pop();\n                    adjT[nn].push_back(t);//\u539f\u56fe\u4e2d\u7684\u70b9\u5230\u65b9\u70b9\u8fde\u8fb9\n                    adjT[t].push_back(nn);\n                    if (t == v) break;//\u8fd9\u91ccpop\u5230v\u4e3a\u6b62\uff0cu\u70b9\u4fdd\u7559\u5728\u6808\u91cc\u9762\uff0c\u56e0\u4e3a\u5272\u70b9\u53ef\u80fd\u88ab\u5f88\u591a\u70b9\u53cc\u516c\u7528\n                }\n                adjT[u].push_back(nn);//u\u70b9\u4e5f\u5728\u8fd9\u4e2a\u70b9\u53cc\u91cc\u9762\uff0c\u4e5f\u50cf\u65b9\u70b9\u8fde\u8fb9\u3002\n                adjT[nn].push_back(u);\n            }\n        } else if (v != father) {\n            low[u] = min(low[u], pre[v]);\n        }\n    }\n}\n\n//u\u662f\u5f53\u524d\u8bbf\u95ee\u5230\u7684\u70b9\uff0cans\u662f\u76ee\u524d\u4ece\u6839\u8d70\u4e0b\u6765\u7684\u8def\u5f84\u4e0a\u7684\u7b54\u6848\uff0cfather\u662fu\u7684\u7236\u4eb2\nvoid dfs(int u, int ans, int father) {\n    if (u == target) {\n        //\u5982\u679c\u8d70\u5230target\u4e86\n        if (ans == 0) {\n            //ans\u8fd8\u662f0\uff0c\u8bf4\u660e\u8def\u4e0a\u6ca1\u7ecf\u8fc7\u5272\u70b9\n            printf(\"No solution\\n\");\n        } else {\n            printf(\"%d\\n\", ans);\n        }\n        exit(0);\n    }\n    if (u != start && adjT[u].size() > 1 && u <= n) {\n        //\u9047\u5230\u975e\u53f6\u5b50\u7684\u5706\u70b9\uff0c\u8bf4\u660e\u662f\u5272\u70b9\n        if (ans == 0) {\n            ans = u;\n        } else {\n            ans = min(ans, u);\n        }\n    }\n    for (int i = 0; i < adjT[u].size(); ++i) {\n        int v = adjT[u][i];\n        if (v == father) continue;\n        dfs(v, ans, u);\n    }\n}\n\nint main() {\n    scanf(\"%d\", &n);\n    int u, v;\n    while (scanf(\"%d%d\", &u, &v)) {\n        if (u == 0 && v == 0) break;\n        adj[u].push_back(v);\n        adj[v].push_back(u);\n    }\n    scanf(\"%d%d\", &start, &target);\n    nn = n;//\u6700\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u5706\u65b9\u6811\u91cc\u9762\u70b9\u7684\u4e2a\u6570\u7b49\u4e8e\u5706\u70b9\u4e2a\u6570\n    tarjan(start, 0);//\u4ece\u5176\u4e2d\u4e00\u4e2a\u670d\u52a1\u5668\u5f00\u59cb\u8dd1\u4e00\u904dtarjan\n    if (pre[target] == 0) {\n        //\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u4e0d\u8fde\u901a\n        printf(\"No solution\\n\");\n        return 0;\n    }\n    //\u8fd9\u65f6\u5019\u4ee5start\u4e3a\u6839\uff0c\u5728\u5706\u65b9\u6811\u4e0adfs\u627etarget\uff0c\u6cbf\u9014\u8bb0\u5f55\u7ecf\u8fc7\u7684\u6700\u5c0f\u7684\u5272\u70b9\u7f16\u53f7\n    dfs(start, 0, 0);\n    return 0;\n}\n```\n",
        "postTime": 1586271624,
        "uid": 43206,
        "name": "\u6ce5\u571f\u7b28\u7b28",
        "ccfLevel": 0,
        "title": "P5058 [ZJOI2004]\u55c5\u63a2\u5668\uff08\u5706\u65b9\u6811\uff09\u9898\u89e3"
    },
    {
        "content": "\uff08$2020.3.25$\u66f4\u65b0\u6392\u7248\u53ca\u539f\u9898\u89e3\u6570\u636e\u8303\u56f4\uff0c\u611f\u8c22@\u2657Wendigo\u265d\uff09\n\n&emsp;&emsp;\u8003\u8651\u7f29\u70b9\u65f6\u7684\u8fc7\u7a0b\uff0c\u8bbe$u$\u662f$v$\u7684\u7956\u5148\uff0c\u6211\u4eec\u901a\u8fc7\u627e$v$\u4e3a\u6839\u7684\u641c\u7d22\u5b50\u6811\u662f\u5426\u80fd\u5ef6\u4f38\u5230\u65f6\u95f4\u6233\u5c0f\u4e8e$u$\u7684\u8282\u70b9\u6765\u5224\u65adu\u662f\u5426\u4e3a\u5272\u70b9\u3002\u5982\u679c\u8be5\u5b50\u6811\u4e0d\u80fd\u5ef6\u4f38\u81f3$u$\u4ee5\u4e0a\uff0c\u5219\u53bb\u6389$u$\u540e\u8be5\u5b50\u6811\u4f1a\u4e0e\u5176\u4f59\u90e8\u5206\u201c\u5931\u53bb\u8054\u7cfb\u201d\u3002  \n\n&emsp;&emsp;\u7531\u6b64\u6211\u4eec\u8fd9\u6837\u60f3\uff1a\u5982\u679c\u6211\u4eec\u4ee5\u4e00\u4e2a\u4fe1\u606f\u4e2d\u5fc3$a$\u4e3a\u6839\u5f00\u59cb\u641c\u7d22\uff0c\u627e\u5230\u4e00\u4e2a\u975e\u6839\u7684\u5272\u70b9$u$\uff1b\u6b64\u65f6\u82e5\u5bf9\u5e94\u7684\u5b50\u6811\u6839$v$\u7684\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e$b$\u7684\u65f6\u95f4\u6233\uff0c\u5219\u8bf4\u660e$b$\u5b58\u5728\u4e8e$v$\u7684\u5b50\u6811\u5185\u3002  \n\n&emsp;&emsp;\u8fd9\u5f88\u663e\u7136\uff0c\u7531\u4e8e$dfn$\u968f$dfs$\u5e8f\u66f4\u65b0\uff0c\u82e5\u8fd8\u6ca1\u641c\u5230$b$\uff0c\u5219\u5176$dfn$\u4e3a$0$\uff1b\u6216\u8005$dfn$\u4e0d\u4e3a$0$\u800c\u5c0f\u4e8e$v$\uff0c\u5219\u8bf4\u660e$b$\u5728\u8fdb\u5165$v$\u4ee5\u524d\u5df2\u7ecf\u88ab\u641c\u5230\u4e86\u3002\n\n&emsp;&emsp;\u90a3\u4e48\u5982\u679c\u628a$u$\u65ad\u6389\uff0c$v$\u7684\u6574\u68f5\u5b50\u6811\u90fd\u4f1a\u4e0e\u6839$a$\u5931\u53bb\u8054\u7cfb\uff0c$u$\u5c31\u662f\u6240\u6c42\u7684\u70b9\u4e4b\u4e00\u3002\n\n&emsp;&emsp;\u7b97\u6cd5\u53ea\u5bf9\u539f$Tarjan$\u51fd\u6570\u7684\u5224\u65ad\u6761\u4ef6\u7565\u505a\u4e86\u4fee\u6539\uff0c\u56e0\u6b64\u6548\u7387\u5f97\u5230\u4e86\u6781\u5927\u4fdd\u7559\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(n+m)$\u3002\n```\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstdio>\n#include <queue>\nconst int maxn(200010);\nconst int maxm = 500010;\nusing namespace std;\nint top = 1, head[maxn], n, a, b;\nstruct node {\n    int to, nxt;\n} edge[maxm<<1];\nvoid tarjan(int);\nbool cut[maxn];\ninline void insert(int u, int v) {\n    edge[++top] = (node) {v, head[u]};\n    head[u] = top;\n}\nint main() {\n    scanf(\"%d\", &n);\n    int u, v; \n    scanf(\"%d %d\", &u, &v);\n    while (!(u==0 && v==0)) {\n        insert(u, v), insert(v, u);\n        scanf(\"%d %d\", &u, &v);\n    }\n    scanf(\"%d %d\", &a, &b);\n    tarjan(a);\n    for(int i = 1; i <= n; i++)\n        if(cut[i]) {\n            printf(\"%d\", i);\n            return 0;\n        }\n    puts(\"No solution\");\n    return 0;\n}\nint dfn[maxn], low[maxn], timer;\nvoid tarjan(int u) {\n    dfn[u] = low[u] = ++timer;\n    for(int i = head[u]; i; i = edge[i].nxt) {\n        int v = edge[i].to;\n        if(!dfn[v]) {\n            tarjan(v);\n            low[u] = min(low[u], low[v]);\n            if(low[v]>=dfn[u] && u!=a && dfn[b]>=dfn[v]) \n                cut[u] = 1;\n        } else\n            low[u] = min(low[u], dfn[v]);\n    }\n    return;\n}\n    \n\n\n    \n```",
        "postTime": 1585097517,
        "uid": 137190,
        "name": "TonyYuan",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5058 \u3010[ZJOI2004]\u55c5\u63a2\u5668\u3011"
    },
    {
        "content": "[P5058 [ZJOI2004]\u55c5\u63a2\u5668](https://www.luogu.com.cn/problem/P5058)\n\n**\u9898\u610f\uff1a**\u65e0\u5411\u8fde\u901a\u56fe\u4e2d\u6709A\u3001B\u4e24\u70b9\uff0c\u95ee\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u70b9\u80fd\u5207\u65adA\u3001B\u4e4b\u95f4\u7684\u8054\u7cfb\u3002\n\n**\u5272\u70b9\u3002**\n\n\u6613\u60f3\uff0c\u5982\u679c$u$\u662f\u5272\u70b9\uff0c\u4e14\u5c06A\u3001B\u4e24\u70b9\u5272\u5728\u4e24\u8fb9\uff0c\u5219\u6b64\u70b9\u53ef\u884c\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/c7imdl6u.png)\n\n\n\u5982\u4f55\u5224\u65adA\u6216B\u662f\u5426\u5728$u$\u7684\u641c\u7d22\u5b50\u6811\u6216\u4e0d\u5728\u641c\u7d22\u5b50\u6811\u4e2d\uff1f\n\n$dfn[i]$\u662f\u70b9$i$\u7684dfs\u5e8f\uff0c\u5982\u679c $dfn[v]>dfn[u]$ \u5219$v$\u5728$u$\u7684\u641c\u7d22\u5b50\u6811\u4e2d\uff0c\u5982\u679c $dfn[v]<dfn[u]$ \u5219$v$\u4e0d\u5728$u$\u7684\u641c\u7d22\u5b50\u6811\u4e2d\u3002\u4e8e\u662f\u5982\u679c\u70b9$u$\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u4e14\u662f\u5272\u70b9\uff1a\n$$ dfn[u]>dfn[A] \\&\\& dfn[u]<dfn[B] $$\n$$ dfn[u]>dfn[B] \\&\\& dfn[u]<dfn[A] $$\n\u5219$u$\u5fc5\u4e3a\u7b54\u6848\u4e4b\u4e00\u3002\n\n\u5982\u679cA\u3001B\u90fd\u5728$u$\u7684\u641c\u7d22\u5b50\u6811\u5185\uff0c\u662f\u4e0d\u662f\u5c31\u4e0d\u662f\u7b54\u6848\u5462\uff1f\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ny4x4qjm.png)\n\n\n$u$\u4e5f\u662f\u7b54\u6848\u4e4b\u4e00\u3002\u6b64\u65f6\uff0c\u6ca1\u6709\u529e\u6cd5\u7528$u$\u6765\u754c\u5b9a\uff0c$u$\u5272\u6389v\u3001B\u8fd9\u4e00\u652f\uff0c\u663e\u7136\u6709\uff1a $dfn[v]<=dfn[B] \\&\\& dfn[v]>dfn[A]$\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u5224\u5b9a\u5305\u542b\u4e4b\u524d\u7684\u5224\u5b9a\u3002\n\n\u6700\u7ec8\u7b54\u6848\u9700\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\uff1a\n\n- $u$\u662f\u5272\u70b9\n- $v$\u662f$u$\u5272\u6389\u7684\u8fd9\u4e00\u652f\u7684\u9996\u8282\u70b9\n- A\u6216B\u5728$v$\u5b50\u6811\u5185\uff08\u5305\u62ec$v$)\u4e14B\u6216A\u4e0d\u5728$v$\u5b50\u6811\u5185\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N=2e5+10,M=5e5+10;\nint vex[N],k,n,m,A,B,ans=1e9;\nstruct edge {\n\tint u,v,next;\n}e[M*2];\n\nvoid add(int u,int v){\n\tk++;\n\te[k].u=u;\n\te[k].v=v;\n\te[k].next=vex[u];\n\tvex[u]=k;\n\treturn;\n}\n\nint dfn[N],low[N],idx;\n\nint check(int u,int v){\n\tif(dfn[v]<=dfn[A]&&dfn[v]>dfn[B]) return 1;\n\tif(dfn[v]<=dfn[B]&&dfn[v]>dfn[A]) return 1;\n\treturn 0;\n}\n\nvoid tarjan(int u,int fa){\n\tdfn[u]=low[u]=++idx;\n\tfor(int i=vex[u];i;i=e[i].next){\n\t\tint v=e[i].v;\n\t\tif(!dfn[v]) {\n\t\t\ttarjan(v,u);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t\tif(low[v]>=dfn[u]&&u!=A&&u!=B&&check(u,v)) {\n\t\t\t\tans=min(ans,u);\n\t\t\t}\t\t\n\t\t}\n\t\telse if(v!=fa) low[u]=min(low[u],dfn[v]);\n\t}\n\treturn;\n}\n\nint main(){\n\tcin>>n;\n\twhile(1){\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\tif(u==0&&v==0) break;\n\t\tadd(u,v);\n\t\tadd(v,u);\t\n\t}\n\tcin>>A>>B;\n\ttarjan(1,0);\n\tif(ans==1e9) cout<<\"No solution\";\n\telse cout<<ans;\n\treturn 0;\n} \n```\n\n\n\n\n\n\n\n",
        "postTime": 1587988120,
        "uid": 92704,
        "name": "fdszlzl",
        "ccfLevel": 0,
        "title": "\u3010\u5272\u70b9\u3011P5058 [ZJOI2004]\u55c5\u63a2\u5668"
    },
    {
        "content": "**\u56e0\u4e3aa,b\u95f4\u6240\u6709\u7684\u4fe1\u606f\u90fd\u8981\u7ecf\u8fc7\u4e2d\u95f4\u670d\u52a1\u5668\uff0c\u8bf4\u660e\u4e2d\u95f4\u670d\u52a1\u5668\u5220\u6389\u540e\uff0cab\u4e0d\u8fde\u901a\uff0c\u8fd9\u4e2a\u4e2d\u95f4\u670d\u52a1\u5668\u4e00\u5b9a\u662f\u4e00\u4e2a\u5272\u70b9\u3002**\n\n**\u6211\u4eec\u5728\u7528Tarjan\u6c42\u5272\u70b9\u65f6\uff0c\u8981\u5224\u65ad\u5272\u70b9\u662f\u5426\u628a a \u548c b \u5fc5\u987b\u5206\u5272\u5230\u4e24\u4e2a\u4e0d\u8fde\u901a\u7684\u90e8\u5206\u4e2d\u3002**\n\n\u4e3a\u4e86\u7b80\u5316\u95ee\u9898\uff0c\u6211\u4eec\u76f4\u63a5\u628aa\u70b9\u4f5c\u4e3a\u6839\uff0c\u4ecea\u70b9\u5f00\u59cb\u505aDFS\u3002\n\n\u6700\u5bb9\u6613\u60f3\u5230\u7684\u5c31\u662f\u5224\u65adb\u7684\u65f6\u95f4\u6233\uff08dfn\uff09\u662f\u5426\u4e0d\u5c0f\u4e8e\u6211\u4eec\u627e\u5230\u7684\u5272\u70b9\uff0c\u5982\u4e0b\u56fe\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/p0e1c4cf.png)\n\n\u4f46\u662f\u8fd9\u79cd\u60f3\u6cd5\u662f\u6709\u7f3a\u9677\u7684\u3002\n\n\u5047\u5982a\u6709\u4e00\u6761\u8fde\u5411b\u7684\u8fb9\uff0c\u4f46b\u5374\u662f\u7531u\u904d\u5386\u5230\u7684\uff0c\u90a3\u4e48\u8fd9\u65f6u\u5c31\u4e0d\u80fd\u5206\u5f00a\u4e0eb\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/gaz2nzvk.png)\n\n_**\u6240\u4ee5\u6211\u4eec\u60f3\u5230\u5229\u7528\u5224\u65ad u\u662f\u5272\u70b9\u7684 v\u70b9**_ \n\n \u5bf9\u4e8e\u4e00\u4e2a\u5272\u70b9u\uff0c\u82e5\u5224\u5b9au\u4e3a\u5272\u70b9\u7684\u8fb9\u662f(u,v)\uff1a\n\n1.dfn[b]<dfn[u]\uff0c\u6b64\u65f6b\u662fu\u7684\u7956\u5148\u6216\u8005b\u548cu\u4e0d\u5728\u540c\u4e00\u4e2a\u5b50\u6811\u5185\u3002\u7531\u4e8ea\u662f\u6839\uff0c\u90a3\u4e48a\u548cb\u4e00\u5b9a\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u5185\u3002\n\n2.dfn[b]>dfn[u]&&dfn[b]<dfn[v]\uff0c\u6b64\u65f6b\u662fv\u7684\u5144\u5f1f\u5b50\u6811\u4e2d\u7684\u8282\u70b9\uff0c\u65e0\u6cd5\u786e\u5b9a a,b\u662f\u5426\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\n3.dfn[b]>=dfn[v]\uff0c\u6b64\u65f6b\u662fv\u7684\u5b50\u6811\u4e2d\u7684\u8282\u70b9\uff0ca,b\u4e00\u5b9a\u4e0d\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\n**\u60f3\u6e05\u695a\u8fd9\u4e9b\uff0cAC\u5c31\u5411\u4f60\u6325\u624b\u4e86\u3002**\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1000005;//\u770b\u8d77\u6765\u8212\u670d\nint n,m,root,low[N],dfn[N],x,y,ans[N],tot,point[N],aa,bb,ff;\nvector<int> g[N];//\u90bb\u63a5\u8868\n//\u4e0d\u9700\u8981\u6808\u4e86\uff0c\u56e0\u4e3a\u4e0d\u662f\u7f29\u70b9\uff0c\u4e0d\u9700\u8981\u7ed9\u6240\u5c5e\u5f3a\u8fde\u901a\u5206\u91cf\u7f16\u53f7\nvoid tanjan(int u){\n\tlow[u]=dfn[u]=++tot;\n\tfor(int i=0;i<g[u].size();i++)\n\t{\n\t\tif(!dfn[g[u][i]])//\u6ca1\u5230\u8fc7\n\t\t{\n\t\t\ttanjan(g[u][i]);\n\t\t\tif(low[g[u][i]]>=dfn[u])\n\t\t\t{\n\t\t\t\tif(root!=u)//\u975e\u6839\u8282\u70b9\n\t\t\t\t{\n\t\t\t\t\tif(dfn[bb]>=dfn[g[u][i]])\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint[u]=1;//\u662f\u6240\u6c42\u7684\u70b9\u3002\u6ce8\u610f\u8fd9\u4e2a\u70b9\u662f\u5272\u70b9\uff0c\u4f46\u4e0d\u662f\u6240\u6709\u5272\u70b9\u3002\n\t\t\t\t\t\tff=1;//\u7528\u4e8e\u8f93\u51fa\u5224\u65ad\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlow[u]=min(low[u],low[g[u][i]]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlow[u]=min(low[u],dfn[g[u][i]]);\n\t\t}\n\t}\n}\nint main(){\n\tcin>>n;\n\tx=1;\n\ty=1;\n\twhile(x&&y)\n\t{\n\t\tcin>>x>>y;\n\t\tg[x].push_back(y);\n\t\tg[y].push_back(x);\n\t}\n\tcin>>aa>>bb;\n\troot=aa;\n\ttanjan(aa);//tanjan  a\u5c31\u884c\uff0c\u7b80\u5316\u95ee\u9898\n\tint j=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(point[i]!=0)\n\t\t{\n\t\t\tans[j]=i;\n\t\t\tj++;\n\t\t}\n\t}\n\tif(ff==0)\n\tcout<<\"No solution\";\n\telse\n\t{\n\t\tcout<<ans[0];\n\t}//\u8f93\u51fa\u5224\u65ad\u3002\n\treturn 0;\n}\n```\n\u795d\u5927\u5bb6\u513f\u7ae5\u8282\u5feb\u4e50\uff01",
        "postTime": 1591016053,
        "uid": 308575,
        "name": "\u8239\u533b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5058 \u3010[ZJOI2004]\u55c5\u63a2\u5668\u3011"
    },
    {
        "content": " \u8fd9\u662f\u4e00\u9053\u5272\u70b9\u7684\u677f\u5b50\u9898\n\n~~\u5176\u5b9e\u8fd9\u9053\u9898\u633a\u6c34\u7684~~\n\n\u5728\u677f\u5b50\u4e0a\u52a0\u4e00\u9053\u7279\u5224\u5c31\u53ef\u4ee5\u4e86..\n\n\u4e3a\u4e86\u7b80\u5316\u95ee\u9898\uff0c\u6211\u4eec\u76f4\u63a5\u4ece a \u70b9\u5f00\u59cb\u505aDFS\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5272\u70b9 u \uff0c\u82e5\u5224\u5b9a u \u4e3a\u5272\u70b9\u7684\u8fb9\u662f (u,v),\u90a3\u4e48\u6709\u4ee5\u4e0b\u8ba8\u8bba,\n\n - \u5982\u679c $dfn[b] < dfn[u]$\uff0c\u5219 $b$ \u662f $u$ \u7684\u7956\u5148\u6216\u8005 $b$ \u548c $u$ \u4e0d\u5728\u540c\u4e00\u4e2a\u5b50\u6811\u5185\uff0c\u7531\u4e8e $a$ \u662f\u6839\uff0c\u90a3\u4e48 $a$\u548c $b$ \u4e00\u5b9a\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u5185\u3002\n\n - \u5982\u679c $dfn[b] > dfn[u] \\,\\  and \\,\\ dfn[b] <dfn[v]$\uff0c\u5219 $b$ \u662f $v$ \u7684\u5144\u5f1f\u5b50\u6811\u4e2d\u7684\u8282\u70b9\uff0c\u65e0\u6cd5\u786e\u5b9a $a,b$ \u662f\u5426\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\n\n - \u5982\u679c $dfn[b] >= dfn[v]$\uff0c\u5219 $b$ \u662f $v$ \u7684\u5b50\u6811\u4e2d\u7684\u8282\u70b9\uff0c$a,b$ \u4e00\u5b9a\u4e0d\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n \n![](https://cdn.luogu.com.cn/upload/image_hosting/vu4h63n3.png)\n\n\u5927\u6982\u8fd9\u4e09\u79cd\u60c5\u51b5\u5c31\u5bf9\u5e94\u4e0a\u8ff0\u4e09\u79cd\u56fe\n\n\u7efc\u4e0a\u6ee1\u8db3$dfn[b] >= dfn[v]$\u5c31\u884c\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct edge{\n    int to,next;\n}e[1000010];\nint n,m,stindex,ei,ans;\nint a,b;\nint h[200010],dfn[200010],low[200010];\nbool u[200010];\nvoid add (int x,int y)\n{\t\n\tei++;\n    e[ei].to=y;\n    e[ei].next=h[x];\n    h[x]=ei;\n}\nvoid tarjan(int f, int fa)\n{\n\tint cnt = 0;\n\tstindex++;\n\tlow[f]=dfn[f]=stindex;\n\tfor(int i=h[f];i;i=e[i].next)\n\t{\n\t\tif(e[i].to==fa)continue;\n\t\tcnt++;\n\t\tint to = e[i].to;\n\t\tif(dfn[to]==0)\n\t\t{\n\t\t\ttarjan(to,f);\n\t\t\tif((fa==0&&cnt>1||fa!=0&&low[to]>=dfn[f])&&dfn[b]>=dfn[to])//\u76f8\u5bf9\u677f\u5b50tarjan\u90e8\u5206\u5c31\u53ea\u6539\u4e86\u8fd9\u4e00\u53e5\n\t\t\t{\n\t\t\t\tu[f]=1;\n\t\t\t}\n\t\t\tlow[f] = min(low[f],low[to]);\n\t\t}else\n\t\t{\n\t\t\tlow[f] = min(low[f],dfn[to]);\n\t\t}\n\t}\n}\nint main(){\n    scanf (\"%d\",&n);\n    int xx,yy;\n    while(scanf(\"%d%d\",&xx,&yy)&&xx&&yy){\n        add (xx,yy);\n        add (yy,xx);\n    }\n    scanf(\"%d%d\",&a,&b);\n    tarjan (a,0);\n    for (int i=1;i<=n;i++)\n        if (u[i])return printf (\"%d\\n\",i),0;\n\tprintf(\"No solution\\n\");\n    return 0;\n}\n```\n",
        "postTime": 1591016038,
        "uid": 148195,
        "name": "gcwixsxr",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5058 \u3010[ZJOI2004]\u55c5\u63a2\u5668\u3011"
    },
    {
        "content": "# \u8fd9\u4e2a\u601d\u8def\u7801\u91cf\u6709\u4e9b\u5927\uff0c\u4e0d\u8fc7\u8dd1\u7684\u633a\u5feb\u7684\u3002\u3002\n24ms  800kb\n\n\u770b\u4e86\u534a\u5929\u9898\u89e3\u53d1\u73b0\u6ca1\u6709\u54ea\u4f4djulao\u7528**Tarjan\u6c42\u5b8c\u5272\u70b9**\uff0c\u518d\u5c06**\u539f\u56fe\u7f29\u6210\u4e00\u68f5\u6811**\uff0c\u6700\u540e\u4ece**\u5176\u4e2d\u4e00\u4e2a\u4fe1\u606f\u4e2d\u5fc3Dfs\u5230\u53e6\u4e00\u4e2a\u4fe1\u606f\u4e2d\u5fc3**\u3002\n\n\u5728Dfs\u4e2d\uff0c\u4f20\u4e09\u4e2a\u503c\n\n- id:\u5f53\u524d\u7684\u5230\u4e86\u54ea\u4e2a\u70b9\uff08**\u7f29\u70b9\u540e\u7684\u65b0\u7f16\u53f7**\uff09\n- fa:\u8fd9\u4e2a\u70b9\u7684\u7236\u4eb2\uff08**\u9632\u6b62Dfs\u6b7b\u5faa\u73af**\uff09\n- minn:\u4ece\u9009\u5b9a\u7684\u4fe1\u606f\u4e2d\u5fc3\u5230\u76ee\u524d\u4e3a\u6b62\u7ecf\u8fc7\u7684\u5272\u70b9\u4e2d\u6700\u5c0f\u7684\u7f16\u53f7\uff08\u5982\u679c\u6ca1\u6709\u7ecf\u8fc7\u4efb\u4f55\u5272\u70b9\u5c31\u4e3aINF\uff09\n\n### \u5177\u4f53\u7ec6\u8282\u4ee3\u7801\u6709\u6ce8\u91ca\n\n```cpp\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<algorithm>\n#include<cctype>\n#include<vector>\n#include<stack>\nusing namespace std;\nconst int MAXN = 110;\nconst int MAXM = 10010;\nconst int INF = 0x3f3f3f3f;\n\ntemplate <typename T>\ninline void read(T&x){\n    x=0; char temp=getchar(); bool f=false;\n    while(!isdigit(temp)){if(temp=='-') f=true; temp=getchar();}\n    while(isdigit(temp)){x=(x<<1)+(x<<3)+temp-'0'; temp=getchar();}\n    if(f) x=-x;\n}\ntemplate <typename T>\nvoid print(T x){\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) print(x/10);\n    putchar(x%10+'0');\n}\n\n//basic\nint n;\nint x,y;\n//save edge1\nstruct node1{\n    int to,next;\n}edge1[MAXM];\nint head1[MAXN],cnt1;\n//Tarjan\nint dfn[MAXN],low[MAXN],sign;\nint root;\nbool cut[MAXN]={false};\nint vdcc,belong[MAXN];\nstack<int> sta;\nvector<int> block[MAXN];\n//Build\nint newid[MAXN];//\u5272\u70b9\u5728\u7f29\u5b8c\u70b9\u56fe\u4e2d\u7684\u65b0\u7f16\u53f7\nstruct node{\n    int to,next;\n}edge[MAXM];\nint head[MAXN],cnt;\nint size;\n//Dfs\nint ans=INF,ori[MAXN<<1];//ori\u4e0enewid\u662f\u4e92\u9006\u7684\uff0cori\u7528\u6765\u8bb0\u5f55\u5728\u65b0\u56fe\u4e2d\u7684\u7f16\u53f7\u4e3ai\u7684\u70b9\u539f\u6765\u7684\u7f16\u53f7\u662f\u591a\u5c11\uff08\u53ea\u8bb0\u5f55\u5272\u70b9\uff09\n\ninline void AddEdge1(int u,int v){//\u52a0\u539f\u56fe\u7684\u8fb9\n    edge1[++cnt1]=(node1){v,head1[u]};\n    head1[u]=cnt1;\n}\n\ninline void AddEdge(int u,int v){//\u52a0\u65b0\u56fe\u7684\u8fb9\n    edge[++cnt]=(node){v,head[u]};\n    head[u]=cnt;\n}\n\nvoid Tarjan(int id,int pre){//\u5272\u70b9Tarjan\u6b63\u5e38\u64cd\u4f5c\n    dfn[id]=low[id]=++sign;\n    sta.push(id);\n    if(id==root&&head1[id]==0){\n        block[++vdcc].push_back(id); sta.pop();\n        return;\n    }\n    int sub=0;\n    for(register int i=head1[id];i;i=edge1[i].next){\n        int aim=edge1[i].to;\n        if(dfn[aim]==0){\n            sub++;\n            Tarjan(aim,i);\n            low[id]=min(low[id],low[aim]);\n            if((id==root&&sub>1)||(id!=root&&low[aim]>=dfn[id])) cut[id]=true;//\u5224\u65ad\u662f\u5426\u4e3a\u5272\u70b9\n            if(low[aim]>=dfn[id]){//\u4fdd\u5b58\u8054\u901a\u5757\n                vdcc++;\n                int temp;\n                do{\n                    temp=sta.top(); sta.pop();\n                    block[vdcc].push_back(temp);\n                }while(temp!=aim);\n                block[vdcc].push_back(id);\n            }\n        }\n        else if(i!=(pre^1))//\u53ef\u4ee5\u4e0d\u7528\u5224\u65ad\n                 low[id]=min(low[id],dfn[aim]);\n    }\n}\n\ninline void Build(){\n    size=vdcc;\n    for(register int i=1;i<=n;i++)//\u7ed9\u5272\u70b9\u5355\u72ec\u8d4b\u5728\u65b0\u56fe\u4e2d\u7684\u7f16\u53f7\n        if(cut[i])//\u5224\u65ad\u5272\u70b9\n            newid[i]=++size,ori[newid[i]]=i;\n    for(register int i=1;i<=vdcc;i++){\n        int temp=block[i].size();\n        for(register int j=0;j<temp;j++){\n            belong[block[i][j]]=i;//\u8bb0\u5f55\u539f\u56fe\u7f16\u53f7\u4e3ai\u7684\u70b9\u5c5e\u4e8e\u7f16\u53f7\u4e3a\u51e0\u7684\u8054\u901a\u5757\n            if(cut[block[i][j]])\n                AddEdge(i,newid[block[i][j]]),AddEdge(newid[block[i][j]],i);\n        }\n    }\n}\n\nvoid Dfs(int id,int fa,int minn){\n    if(id==belong[y]){ans=min(ans,minn); return;}\n    for(register int i=head[id];i;i=edge[i].next){\n        int son=edge[i].to;\n        if(son!=fa){\n            int temp;\n            if(son!=belong[x]&&son!=belong[y]&&son>vdcc) temp=min(minn,ori[son]);//\u65b0\u56fe\u4e2d\u5272\u70b9\u7684\u7f16\u53f7\u662f\u5b58\u5728newid\u91cc\u7684\uff0c\u800cnewid\u662f\u7531vdcc\u7d2f\u52a0\u5f97\u51fa\u7684\uff0c\u6240\u4ee5\u65b0\u56fe\u7f16\u53f7\u5927\u4e8e\u539f\u6709\u7684\u70b9\u53cc\u8054\u901a\u5757\u7684\u4e2a\u6570\u7684\u70b9\u5c31\u662f\u5272\u70b9\uff0c\u6240\u4ee5minn\u53d6\u8fd9\u4e2a\u5272\u70b9\u5728\u539f\u56fe\u4e2d\u7684\u7f16\u53f7\uff08\u8bb0\u5728ori\u91cc\u7684\uff09\n            else temp=minn;\n            Dfs(son,id,temp);\n        }\n    }\n}\n\nint main(){\n    read(n);\n    while(true){\n        int u,v; read(u),read(v); if(u==0&&v==0) break;\n        AddEdge1(u,v); AddEdge1(v,u);\n    }\n    read(x),read(y);\n\n    for(register int i=1;i<=n;i++)\n        if(dfn[i]==0)\n            root=i,Tarjan(i,0);\n    Build();\n    Dfs(belong[x],0,INF);\n    if(ans==INF) puts(\"No solution\");\n    else print(ans);\n    return 0;\n}\n\n```\n",
        "postTime": 1572443447,
        "uid": 48316,
        "name": "\u6211\u53bb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5058 \u3010[ZJOI2004]\u55c5\u63a2\u5668\u3011"
    },
    {
        "content": "~~\u8fd9\u9053\u662f\u5272\u70b9\u7684\u6a21\u677f\u9898~~\n\n**\u5272\u70b9\uff1a \u4e00\u4e2a\u65e0\u5411\u8fde\u901a\u56fe\u4e2d\uff0c\u5220\u9664\u4e00\u4e2a\u70b9\u4ee5\u53ca\u4e0e\u5b83\u76f8\u8fde\u7684\u6240\u6709\u8fb9\u540e\uff0c\u56fe\u4e0d\u518d\u8fde\u901a\uff0c\u5219\u79f0\u8fd9\u4e2a\u70b9\u662f\u539f\u56fe\u7684\u5272\u70b9\u3002**\n\ntarjan\u6c42\u5272\u70b9\uff1a\n1. \u5982\u679c\u56fe\u4e2d\u8fd8\u5b58\u5728\u672a\u88ab\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9 u\uff0c\u4ece\u4efb\u610f\u672a\u88ab\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9 u \u51fa\u53d1\u505aDFS\uff0c\u5e76\u7528\u5168\u5c40\u53d8\u91cf\u8bb0\u5f55 \u5f53\u524dDFS\u7684\u6839\u4e3a u\u3002\n2. \u5f53\u524d\u8282\u70b9 u \u88ab\u8bbf\u95ee\u65f6\uff0c\u8bb0\u5f55dfn[u]\uff0c\u5e76\u521d\u59cb\u5316low[u] = dfn[u]\uff0c\u521d\u59cb\u5316 flag = 0\u3002\n3. \u5982\u679c\u5f53\u524d\u8282\u70b9 u \u6709\u4e00\u6761\u8fde\u5411\u4e00\u4e2a\u672a\u8bbf\u95ee\u8282\u70b9 v \u7684\u8fb9\uff0c\u4e14low[v]<low[u]\uff0c\u5219\u66f4\u65b0 low(u) = min(low(u),low(v))\u3002\n4. \u5982\u679c\u5f53\u524d\u8282\u70b9 u \u6709\u4e00\u6761\u8fde\u5411\u4e00\u4e2a\u672a\u8bbf\u95ee\u8282\u70b9 v \u7684\u8fb9\uff0c\u4e14low[v]>=dfn[u]\uff0c\u5219\u4ee4 flag \u52a0 1\u3002\u5982\u679c u \u662f\u6839 \u4e14 flag >=2 \uff0c\u6807\u8bb0 u \u4e3a\u5272\u70b9\uff1b\u5982\u679c u \u4e0d\u662f\u6839\uff0c\u6807\u8bb0 u \u4e3a\u5272\u70b9\u3002\n5. \u5982\u679c\u5f53\u524d\u8282\u70b9 u \u6709\u4e00\u6761\u8fde\u5411\u4e00\u4e2a\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9 v \u7684\u8fb9\uff0c\u5219 low(u) = min(low(u), dfn(v));\n\n\u601d\u8def\uff1a\u4ece\u4e00\u4e2a\u4e2d\u5fc3\u670d\u52a1\u5668\u5f00\u59cb\u6c42\u5272\u70b9\uff0c\u518d\u5224\u65ad\u5272\u70b9\u70b9\u662f\u5426\u628a a \u548c b \u5fc5\u987b\u5206\u5272\u5230\u4e24\u4e2a\u4e0d\u8fde\u901a\u7684\u90e8\u5206\u4e2d\uff08\u8fd9\u6837\u624d\u80fd\u62e6\u622a\u4e4b\u95f4\u7684\u6240\u6709\u4fe1\u606f\uff09\n\nCode\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N=400100;\nint n,a,b;\nint dfn[N],low[N],head[N],cut[N];  //cut\u8bb0\u5f55\u5272\u70b9\nint root,tot;    //root\u8bb0\u5f55\u6839\u8282\u70b9\uff0ctot\u8bb0\u5f55\u641c\u7d22\u7684\u7f16\u53f7\nint ne;\n\nstruct Edge\n{\n\tint next;\n\tint to;\n};\nEdge edge[N];  \n\nvoid add(int from,int to)\n{\n\tne++;\n\tedge[ne].next=head[from];\n\tedge[ne].to=to;\n\thead[from]=ne;\n}\n\n//\u524d\u5411\u661f\u5efa\u56fe\n\nvoid tarjan(int u)\n{\n\tint flag=0;                //\u8bb0\u5f55\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2a\u6570\uff08\u5982\u679c\u8282\u70b9 u \n                                 \u662f\u6839\uff0c\u4e14\u62e5\u6709\u4e24\u9897\u6216\u4ee5\u4e0a\u7684\u5b50\u6811\uff0c\u5219\u8282\u70b9 u \u662f\u4e00\u4e2a\u5272\u70b9\u3002\n\uff09\n\tlow[u]=dfn[u]=++tot;    \n\tfor (int i=head[u];i;i=edge[i].next)\n\t{\n\t\tint to=edge[i].to;\n\t\tif(!dfn[to]) \n\t\t{               \n\t\t\ttarjan(to);            \n\t\t\tif(low[to]>=dfn[u])    //\u70b9to\u80fd\u5230\u8fbe\u7684\u6700\u9ad8\u7684\u70b9\u90fd\u6ca1\u6709\u6bd4\u70b9u\u9ad8\uff0c\u90a3\u4e48\u70b9to\u662f\u4e00\u4e2a\u5272\u70b9\uff08\u524d\u63d0\u70b9u\u4e0d\u662f\u6839\u8282\u70b9\uff0c\u4e0d\u7136\u53ef\u4ee5\u5230\u8fbe\u53e6\u4e00\u4e2a\u5b50\u6811\uff09\n\t\t\t{                \n\t\t\t\tflag++;\n\t\t\t\tif(flag>1||root!=u)    //\u4e0a\u4e00\u4e2a\u6ce8\u91ca\n\t\t\t\t{\n\t\t\t\t\tif(dfn[to]<=dfn[b]) cut[u]=true;   // a \u548c b \u5fc5\u987b\u5206\u5272\u5230\u4e24\u4e2a\u4e0d\u8fde\u901a\u7684\u90e8\u5206\u4e2d\uff0c\u610f\u601d\u5c31\u662f\u5272\u70b9\u5fc5\u987b\u5728a\uff0cb\u4e2d\u95f4\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlow[u]=min(low[u],low[to]);\n\t\t\t}      \n\t\t}\n\t\telse\n\t\t{\n\t\t\tlow[u]=min(low[u],dfn[to]);\n\t\t}    \n\t} \n}\n\nint main()\n{\n\tcin>>n;\n\twhile(1)\n\t{\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tif(x==0&&y==0) break;\n\t\tadd(x,y);\n\t\tadd(y,x);               //\u5efa\u53cc\u5411\u8fb9\n\t}\n\tcin>>a>>b;\n\troot=a;              //\u4ecea\u5f00\u59cb\u641c\u7d22\n\ttarjan(root);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(cut[i])\n\t\t{\n\t\t\tcout<<i<<endl;     //\u53ea\u7528\u8f93\u51fa\u7f16\u53f7\u6700\u5c0f\u7684\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout<<\"No solution\"<<endl;\n\treturn 0;\n}\n```\n\n\u5199\u9898\u89e3\u4e0d\u6613\uff0c\u671b\u91c7\u7eb3\n",
        "postTime": 1591016595,
        "uid": 308587,
        "name": "AKakA",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5058 \u3010[ZJOI2004]\u55c5\u63a2\u5668\u3011"
    },
    {
        "content": "\u5982\u679c\u8fd9\u4e2a\u70b9\u662f\u5272\u70b9\u4e14\u5220\u53bb\u540e,$a$\u548c$b$\u5728\u4e0d\u540c\u7684\u8fde\u901a\u5757\u5c31\u53ef\u884c\n\n\u73b0\u5728\u95ee\u9898\u5173\u952e\u5c31\u662f\u5982\u4f55\u5224\u65ad\u8fd9\u4e2a\u5272\u70b9\u662f\u5426\u628a$a$,$b$\u9694\u5f00\u6765\u4e86\n\n\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u4ece$a$\u70b9\u5f00\u59cb$tarjan$\n\n\u60f3\u8c61\u4e00\u4e0b$v$\u662f$u$\u7684\u513f\u5b50,\u5982\u679c$dfn[u]<=low[v]$\u8bf4\u660e$u$\u662f\u5272\u70b9\n\n\u5220\u6389$u$\u540e,$a$\u548c$v$\u5fc5\u5b9a\u9694\u5f00\u6765\n\n\u90a3\u5982\u679c$b$\u5728$v$\u7684\u4e00\u4fa7,\u4e0d\u5c31\u8bf4\u660e$a$\u548c$v$\u9694\u5f00\u4e86\u5417?\n\n\u90a3$b$\u5728$v$\u7684\u4e00\u4fa7\u4e0d\u5c31\u8bf4\u660e$dfn[b]>=dfn[v]$\u5417?\n\n\u56e0\u4e3a$v$\u662f\u7ee7$u$\u7b2c\u4e00\u4e2a\u88ab\u8bbf\u95ee\u7684,\u6240\u4ee5\u5982\u679c$dfn[b]<dfn[v]$\n\n\u8bf4\u660eb\u5728u\u7684\u90a3\u4e00\u4fa7,\u5220\u6389\u8fd9\u4e2a\u70b9\u4e0d\u4e00\u5b9a\u53ef\u884c\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e6+10;\nint n,l,r;\nstruct edge{ int to,nxt; } d[maxn];\nint head[maxn],cnt=1;\nvoid add(int u,int v){ d[++cnt]=(edge){v,head[u]},head[u]=cnt; }\nint dfn[maxn],low[maxn],stac[maxn],id,top,cut[maxn];\nvoid tarjan(int u,int root)\n{\n\tlow[u]=dfn[u]=++id,stac[++top]=u;\n\tint flag=0;\n\tfor(int i=head[u];i;i=d[i].nxt )\n\t{\n\t\tint v=d[i].to;\n\t\tif( !dfn[v] )\n\t\t{\n\t\t\ttarjan(v,root);\n\t\t\tlow[u]=min( low[u],low[v] );\n\t\t\tif( dfn[u]<=low[v] )\n\t\t\t{\n\t\t\t\tflag++;\n\t\t\t\tif( u!=root||flag>=2 )\n\t\t\t\t{\n\t\t\t\t\tif( dfn[v]<=dfn[r] )\tcut[u]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\tlow[u]=min( low[u],dfn[v] );\n\t}\n}\nint ans[maxn];\nint main()\n{\n\tcin >> n;\n\twhile( cin >> l >> r && (l+r)!=0 )\tadd(l,r),add(r,l);\n\tcin >> l >> r;\n\ttarjan(l,l);\n\tfor(int i=1;i<=n;i++)\n\tif( cut[i]&&i!=l&&i!=r )\n\t{\n\t\tcout << i;\n\t\treturn 0;\n\t}\n\tcout << \"No solution\";\n} \n```",
        "postTime": 1599053795,
        "uid": 299810,
        "name": "issue_is_fw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5058 \u3010[ZJOI2004]\u55c5\u63a2\u5668\u3011"
    },
    {
        "content": "\u4e00\u9053 $tarjan$ \u9898\n\n> \u84dd\u519b\u5171\u6709\u4e24\u4e2a\u4fe1\u606f\u4e2d\u5fc3\uff0c\u7ea2\u519b\u8ba1\u5212\u5728\u67d0\u53f0\u4e2d\u95f4\u670d\u52a1\u5668\u4e0a\u5b89\u88c5\u4e00\u4e2a\u55c5\u63a2\u5668\uff0c\u4ece\u800c\u80fd\u591f\u4fa6\u542c\u5230\u4e24\u4e2a\u4fe1\u606f\u4e2d\u5fc3\u4e92\u76f8\u4ea4\u6362\u7684\u6240\u6709\u4fe1\u606f\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c$a$ \u5230 $b$ \u7684\u6240\u6709\u8def\u5f84\u5fc5\u987b\u7ecf\u8fc7 \u90a3\u4e2a\u4e2d\u95f4\u670d\u52a1\u5668\u3002\n\n-----> \u5982\u679c\u5220\u53bb\u90a3\u4e2a\u4e2d\u95f4\u670d\u52a1\u5668\uff0c$a$ \u4e0e $b$ \u4e0d\u8054\u901a\u3002\n\n-----> \u90a3\u4e2a\u4e2d\u95f4\u670d\u52a1\u5668\u662f\u4e00\u4e2a\u5272\u70b9\u3002\uff08\u4e00\u4e2a\u7279\u6b8a\u7684\u5272\u70b9\uff09\n\n\u5047\u8bbe\u7528 $now$ \u8868\u793a\u5f53\u524d\u7ed3\u70b9\uff0c $v$ \u8868\u793a\u513f\u5b50\u3002\n\n$exa[now]$ \u8868\u793a\u5f53\u524d\u7ed3\u70b9\u6240\u5728\u5b50\u6811\u4e2d\u6709\u65e0 $a$\n\n$exb[now]$ \u540c\u7406\n\n\u90a3\u4e48\u5f53\u4e14\u4ec5\u5f53\u4ee5\u4e0b\u6761\u4ef6\u5168\u90e8\u53d1\u751f\u65f6\uff0c$now$ \u53ef\u4ee5\u66f4\u65b0 $ans$\n\n- now\u4e3a\u5272\u70b9\uff08\u8fd9\u662f\u663e\u7136\u7684\uff0c\u4e0a\u9762\u5df2\u5206\u6790\uff09\n- \u5728\u4ee5\u4e0a\u6761\u4ef6\u6210\u7acb\u65f6\uff0c$a$ \u4e0e $b$ \u53ea\u80fd\u6709\u4e00\u4e2a\u5728 $v$ \u7684\u5b50\u6811\u5185\uff08\u56e0\u4e3a\u5220\u53bb $now$ \u540e $v$ \u7684\u5b50\u6811\u7684\u70b9\u4e0e\u5176\u4ed6\u70b9\u4e0d\u8054\u901a\uff09\uff08\u5982\u679ca\uff0cb\u90fd\u4e0d\u5728v\u5185\uff0cnow\u4e5f\u53ef\u80fd\u662f\u7b54\u6848\uff0c\u4f46\u8fd9\u662f\u901a\u8fc7\u5176\u4ed6\u5b50\u6811\u6765\u5b9e\u73b0\u7684\uff09\u3002\n- ```now!=a&&now!=b```(\u4e00\u5b9a\u4e0d\u8981\u5fd8\u8bb0)\uff08\u770b\u6e05\u9898\u76ee\uff09\n\n## Code\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#define LL long long\n#define rint register int\nusing namespace std;\nnamespace FastIO\n{\nchar c;\nbool sign;\ntemplate<class T>\ninline void read(T &x)\n{\n\tx=0;\n\tsign=false;\n\tfor(c=getchar();c<'0'||c>'9';c=getchar()) \n\t\tif(c=='-') \n\t\t\tsign=true;\n\tfor(;c>='0'&&c<='9';c=getchar()) \n\t\tx=(x<<1)+(x<<3)+(c&15);\n\tif(sign) x=~x+1;\n\treturn;\n}\n}\nusing FastIO::read;\n//======================================\nconst int N=2e5+5;\nconst int M=1e6+5;\nint one[N];\nint ver[M],Next[M];\nint tot=0;\ninline void AddEdge(const int &a,const int &b)\n{\n\ttot++;\n\tNext[tot]=one[a];\n\tone[a]=tot;\n\tver[tot]=b;\n\treturn;\n}\n//======================================\nint n;\nint a,b;\nint dfn[N],low[N],times=0;\nbool exa[N],exb[N]; // \u5728\u641c\u7d22\u6811\u7684\u5b50\u6811\u4e2d\u6709\u6ca1\u6709 a\uff0cb\nint ans=N+3;\nvoid tarjan(int now,const int &fa)\n{\n\tdfn[now]=low[now]=++times;\n\trint i,v,child=0;\n\tfor(i=one[now];i>0;i=Next[i]) {\n\t\tv=ver[i];\n\t\tif(!dfn[v]) {\n\t\t\tchild++;\n\t\t\ttarjan(v,now);\n\t\t\tlow[now]=min(low[now],low[v]);\n\t\t\tif(exa[v]) exa[now]=true;\n\t\t\tif(exb[v]) exb[now]=true; \n\t\t\tif((fa==-1&&child>1)||(fa!=-1&&low[v]>=dfn[now]))\n\t\t\t\tif(exa[v]^exb[v]&&now!=a&&now!=b) // !!!\n\t\t\t\t\tans=min(ans,now);\n\t\t}\n\t\telse if(v!=fa) \n\t\t\tlow[now]=min(low[now],dfn[v]);\n\t}\n\treturn;\n} \nint main()\n{\n//\tfreopen(\"1.in\",\"r\",stdin);\n\trint i;\n\tint x,y;\n\tread(n);\n\twhile(true) {\n\t\tread(x); read(y);\n\t\tif(x==0&&y==0) \n\t\t\tbreak;\n\t\tAddEdge(x,y);\n\t\tAddEdge(y,x);\n\t}\n\tread(a); read(b);\n\texa[a]=true;\n\texb[b]=true;\n//\ttarjan(a,-1);\n\tfor(i=1;i<=n;i++) \n\t\tif(dfn[i]==0) \n\t\t\ttarjan(i,-1);\n\tif(ans==N+3) \n\t\tputs(\"No solution\");\n\telse printf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1592632552,
        "uid": 234913,
        "name": "GBLoi",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5058 \u3010[ZJOI2004]\u55c5\u63a2\u5668\u3011"
    },
    {
        "content": "\u5927\u5bb6\u597d\uff0c\u6211\u662fAndy_2006\uff0c\u4eca\u5929\u7ed9\u5927\u5bb6\u8bb2\u4e00\u4e0b\u8fd9\u9053\u9898\u3002\r\n\r\n\u5728\u5bf9\u9898\u76ee\u8fdb\u884c\u4e862ms\u7684\u5206\u6790\u4e4b\u540e\uff0c\u6211\u5224\u5b9a\u8fd9\u662f\u4e00\u9053\u5229\u7528Tarjan\u6c42\u5272\u70b9\u7684\u9898\u76ee\uff0c\u603b\u4f53\u96be\u5ea6\u4e0d\u662f\u5f88\u9ad8\uff0c\u53ea\u8981\u60f3\u5230\u4e86\u65b9\u6cd5\uff0c\u5b9e\u73b0\u662f\u5f88\u5bb9\u6613\u7684\u3002\r\n\r\n\u4e3b\u9898\u601d\u60f3\uff1a\r\n\r\n\u6211\u4eec\u628aa\u8282\u70b9\u5f53\u505a\u662froot\uff08\u6839\u8282\u70b9\uff09\uff0c\u7136\u540e\u8fdb\u884ctarjan\uff0c\u8fdb\u884c\u73a9\u4e00\u6ce2\u6b63\u5e38\u64cd\u4f5c\u4e4b\u540e\u679a\u4e3e\u8282\u70b9\uff0c\u8f93\u51fa\u6700\u5c0f\u7684\u3002\r\n\r\ntarjan\u6c42\u5272\u70b9\uff1a\r\n\r\n\u5047\u5982\u4e00\u4e2a\u70b9\u662f\u5272\u70b9\uff08\u6211\u4eec\u8bbe\u4e3ax\uff09\uff0c\u90a3\u4e48\u4ed6\u4e00\u5b9a\u6ee1\u8db3\u4ee5\u4e0b\u6027\u8d28\uff1a\r\n\r\n1.\u62e5\u6709\u513f\u5b50\uff08\u641c\u7d22\u6811\u4e2d\uff09\r\n\r\n2.\u513f\u5b50\u80fd\u56de\u6eaf\u5230\u7684\u6700\u65e9\u65f6\u95f4\u6233\u4e0d\u5c0f\u4e8ex\u5728\u641c\u7d22\u6811\u4e2d\u88ab\u904d\u5386\u7684\u65f6\u95f4\u70b9\u3002\r\n\r\n\u5f53\u7136\u4e86\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u662froot\u5e76\u4e14\u62e5\u6709\u4e24\u4e2a\u4ee5\u4e0a\u7684\u513f\u5b50\u8282\u70b9\uff08\u641c\u7d22\u6811\u4e2d\uff09\uff0c\u90a3\u4e48\u8fd9\u4e5f\u662f\u4e00\u4e2a\u5272\u70b9\uff0c\u53ef\u662f\u8fd9\u9053\u9898\u4e0d\u5141\u8bb8\u6211\u4eec\u5728root\u653e\u55c5\u63a2\u5668\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5224\u5b9a\u65b9\u6cd5\u7528\u4e0d\u4e0a\u3002\r\n\r\n\u5982\u679c\u4e00\u4e2a\u70b9\u662f\u5272\u70b9\uff0c\u90a3\u4e48\u5c31\u662f\u8bf4\uff0c\u6240\u6709\u7684\u4fe1\u606f\u90fd\u8981\u4ece\u8fd9\u91cc\u7ecf\u8fc7\uff0c\u6211\u4eec\u5c31\u6807\u8bb0\u4e00\u4e0b\uff0c\u65b9\u4fbf\u540e\u9762\u679a\u4e3e\u3002\r\n\r\n\u8fd9\u91cc\u6211\u4eec\u8981\u6ce8\u610f\u7684\u662f\uff1ab\u8282\u70b9\u88ab\u8bbf\u95ee\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u4e0d\u5c0f\u4e8e\u8fd9\u4e2a\u8282\u70b9\u88ab\u8bbf\u95ee\u7684\u65f6\u95f4\uff0c\u4e0d\u7136\u7684\u8bdd\uff0c\u5c31\u7b97\u65ad\u4e86\u8fd9\u91cc\uff0c\u4e5f\u4e0d\u80fd\u4fdd\u8bc1a\u548cb\u4e0d\u80fd\u4f20\u8f93\u6d88\u606f\u3002\r\n\r\n\u5728\u4e86\u89e3\u8fd9\u4e9b\u4e4b\u540e\uff0c\u4ee3\u7801\u5c31\u5f88\u5bb9\u6613\u5199\u51fa\u6765\u4e86\uff1a\r\n\r\n\uff08\u4e3a\u4e86\u4fdd\u8bc1\u5927\u5bb6\u7684\u9605\u8bfb\u4f53\u9a8c\uff0c\u6211\u6362\u4e86\u4e2a\u7801\u98ce\uff0c\u4e4b\u524d\u7684\u603b\u6709\u4eba\u8bf4\u592a\u6bd2\u7624\u4e86\uff09\r\n\r\n```\r\n#include <cstdio>\r\n#define ll long long\r\n#define maxn1 2000005\r\n#define maxn2 10000005\r\nusing namespace std; \r\nll u[maxn2],v[maxn2],now[maxn1],before[maxn2],dfn[maxn1],low[maxn1],n,m,deep=0,a,b;\r\nbool is[maxn1];\r\ninline ll min(ll x, ll y)\r\n{\r\n\treturn x < y ? x : y;\r\n}\r\nvoid tarjan(ll x)\r\n{\r\n\tdfn[x] = low[x] = ++deep;\r\n\tfor(ll i = now[x]; i != -1; i = before[i]){\r\n\t\tif(!dfn[v[i]]){\r\n\t\t\ttarjan(v[i]);\r\n\t\t\tlow[x] = min(low[x], low[v[i]]);\r\n\t\t\tif(low[v[i]] >= dfn[x] && x!=a && dfn[b] >= dfn[v[i]])\r\n\t\t\t\tis[x] = true;\r\n\t\t} \r\n\t\telse\r\n\t\t\tlow[x] = min(low[x], dfn[v[i]]);\r\n\t}\r\n\treturn;\r\n}\r\nint main(){\r\n\tscanf(\"%lld\", &n);\r\n\tm = 0;\r\n\tfor(ll i = 1; i <= n; i++){\r\n\t\tnow[i] = -1;\r\n\t\tdfn[i] = low[i] = 0;\r\n\t}\r\n\twhile(1){\r\n\t\tm++;\r\n\t\tscanf(\"%lld%lld\", &u[m], &v[m]);\r\n\t\tif(u[m] == 0 || v[m] == 0)\r\n\t\t{\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tbefore[m] = now[u[m]];\r\n\t\tnow[u[m]] = m;\r\n\t}\r\n\tfor(ll i = m + 1; i <= 2*m; i++){\r\n\t\tu[i] = v[i - m];\r\n\t\tv[i] = u[i - m];\r\n\t\tbefore[i] = now[u[i]];\r\n\t\tnow[u[i]] = i;\r\n\t}\r\n\tscanf(\"%lld%lld\", &a, &b);\r\n\ttarjan(a);\r\n\tfor(ll i = 1; i <= n; i++){\r\n\t\tif(is[i]){\r\n\t\t\tprintf(\"%lld\", i);\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\tputs(\"No solution\");\r\n\treturn 0;\r\n}\r\n```\r\n\r\n\u559c\u6b22\u7684\u8bdd\u70b9\u4e2a\u8d5e\u5427\uff01\r\n\r\n\u756a\u5916\uff1a\r\n\r\n\uff08\u54c8\u54c8\uff0c\u6d59\u6c5f\u7701\u9009\u4e0d\u8fc7\u5982\u6b64\u561b\u3002\u7b49\u7b49\uff0c2004\u5e74\uff1f\uff1f\uff1f\u3002\u3002\u3002\u3002\uff09\r\n\r\n\uff08Andy\uff0c\u4f60\u8981\u70b9\u8138\uff0c\u4f60\u4e0d\u5c31\u662f\u901a\u8fc7\u641c\u7d22\u201c\u5272\u70b9\u201d\u8fd9\u4e2a\u77e5\u8bc6\u70b9\u5f04\u5230\u7684\u8fd9\u9053\u9898\u5417\uff1f\uff09\r\n\r\n\uff08\u5c0f\u58f0BB\uff01\uff09",
        "postTime": 1587980893,
        "uid": 261262,
        "name": "WaltVBAlston",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P5058 \u3010[ZJOI2004]\u55c5\u63a2\u5668\u3011"
    }
]