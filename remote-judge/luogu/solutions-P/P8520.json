[
    {
        "content": "\u8003\u8651\u5c06\u6240\u6709\u653e\u957f\u6905\u7684\u5730\u65b9\u9ed1\u767d\u67d3\u8272\uff0c\u9ed1\u8272\u7684\u53ea\u8fde\u6a2a\u7740\u7684\u8fb9\uff0c\u767d\u8272\u7684\u53ea\u8fde\u7ad6\u7740\u7684\u8fb9\uff0c\u8003\u8651\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\u52a0\u5165\u6240\u6709\u8fb9\uff0c\u5e76\u5c3d\u91cf\u4fdd\u8bc1\u6211\u4eec\u5f53\u524d\u7684\u56fe\u4e0e\u6240\u6709\u8fb9\u90fd\u52a0\u5165\u7684\u56fe\u8fde\u901a\u6027\u76f8\u540c\uff0c\u9ed1\u8272\u5757\u4e0a\u9762\u7684\u8fb9\u548c\u767d\u8272\u5757\u5de6\u9762\u7684\u8fb9\u4e00\u5b9a\u80fd\u52a0\u5165\uff0c\u53ea\u9700\u8981\u8003\u8651\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- \u9ed1\u8272\u5757\u4e0b\u9762\u7684\u8fb9\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8fzpc7kh.png)\n\n\u6b64\u65f6\u4e09\u6761\u7eff\u8272\u7684\u8fb9\u4e00\u5b9a\u5df2\u7ecf\uff08\u53ef\u80fd\u4ee5\u7b49\u4ef7\u5f62\u5f0f\uff09\u52a0\u5165\uff0c\u8fd9\u6761\u8fb9\u4e00\u5b9a\u4e0d\u7528\u52a0\u5165\u3002\n\n- \u767d\u8272\u5757\u53f3\u9762\u7684\u8fb9\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/2kp1r9fm.png)\n\n\u6b64\u65f6\u4e24\u6761\u7eff\u8272\u7684\u8fb9\u5df2\u7ecf\u52a0\u5165\uff0c\u800c\u84dd\u8272\u7684\u8fb9\u56e0\u4e3a\u5728\u9ed1\u8272\u5757\u4e0a\u9762\u800c\u4e00\u5b9a\u80fd\u52a0\u5165\uff0c\u4e8e\u662f\u8fd9\u6761\u8fb9\u4e5f\u4e0d\u7528\u52a0\u5165\u3002\n\n\u6240\u4ee5\u4ece\u5b9e\u73b0\u4e0a\u6765\u8bf4\u53ea\u9700\u8981\u4f9d\u6b21\u68c0\u9a8c\u6240\u6709\u8fb9\u662f\u5426\u80fd\u52a0\u5165\u5373\u53ef\u3002\n\n```cpp\n// #include \"parks.h\"\n#include <algorithm>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <vector>\nusing namespace std;\nvoid build(vector<int> u, vector<int> v, vector<int> a, vector<int> b);\nint construct_roads(vector<int> x, vector<int> y) {\n  int n = x.size();\n  vector<int> f(n, 0);\n  for (int i = 0; i < n; i++)\n    f[i] = i;\n  function<int(int)> gf = [&](int x) {\n    return f[x] == x ? x : f[x] = gf(f[x]);\n  };\n  vector<pair<int, int>> v;\n  map<pair<int, int>, int> mp, used;\n  for (int i = 0; i < n; i++)\n    mp[{x[i], y[i]}] = i, v.push_back({x[i], y[i]});\n  sort(v.begin(), v.end(), [&](auto a, auto b) {\n    if (a.second != b.second)\n      return a.second > b.second;\n    return a.first < b.first;\n  });\n  vector<int> vu, vv, va, vb;\n  for (auto [x, y] : v) {\n    if (mp.count({x + 2, y})) {\n      int u = mp[{x, y}], v = mp[{x + 2, y}];\n      if (gf(u) != gf(v)) {\n        int cx = x + 1, cy = y + 1;\n        if (((cx / 2) + (cy / 2)) & 1)\n          cy -= 2;\n        if (used.count({cx, cy}))\n          continue;\n        used[{cx, cy}] = 1;\n        vu.push_back(u), vv.push_back(v), va.push_back(cx), vb.push_back(cy);\n        f[gf(u)] = gf(v);\n      }\n    }\n    if (mp.count({x, y - 2})) {\n      int u = mp[{x, y}], v = mp[{x, y - 2}];\n      if (gf(u) != gf(v)) {\n        int cx = x + 1, cy = y - 1;\n        if (!(((cx / 2) + (cy / 2)) & 1))\n          cx -= 2;\n        if (used.count({cx, cy}))\n          continue;\n        used[{cx, cy}] = 1;\n        vu.push_back(u), vv.push_back(v), va.push_back(cx), vb.push_back(cy);\n        f[gf(u)] = gf(v);\n      }\n    }\n  }\n  bool flag = 1;\n  for (int i = 1; i < n; i++)\n    flag &= (gf(i) == gf(0));\n  if (!flag)\n    return 0;\n  build(vu, vv, va, vb);\n  return 1;\n}\n\n```",
        "postTime": 1679323548,
        "uid": 183154,
        "name": "swiftc",
        "ccfLevel": 9,
        "title": "[IOI2021] \u55b7\u6cc9\u516c\u56ed \u9898\u89e3"
    }
]