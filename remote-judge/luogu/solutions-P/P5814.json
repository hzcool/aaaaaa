[
    {
        "content": "\u8bfb\u5b8c\u9898\u540e\u4e0d\u96be\u770b\u51fa\u672c\u9898\u662f\u4e2a\u7f51\u7edc\u6d41\u6a21\u578b\uff0c\u6e90\u70b9\u6d41\u51fa\u7684\u603b\u6d41\u91cf\u4e3a$k$\uff0c\u6e90\u70b9\u5411\u6bcf\u4e2a\u548c\u603b\u90e8\u76f4\u63a5\u8054\u7cfb\u7684\u95f4\u8c0d\u8fde\u8fb9\uff0c\u6bcf\u4e2a\u95f4\u8c0d\u5411\u5176\u80fd\u4f20\u9012\u7684\u95f4\u8c0d\u8fde\u5bb9\u91cf\u4e3a$m$\u7684\u8fb9\uff0c\u80fd\u4e0e\u5fb7\u519b\u60c5\u62a5\u90e8\u8fdb\u884c\u8054\u7cfb\u7684\u95f4\u8c0d\u5411\u6c47\u70b9\u8fde\u5bb9\u91cf\u4e3a$inf$\u7684\u8fb9\uff0c\u82e5\u6700\u5927\u6d41\u4e3a$k$\uff0c\u5219\u5b58\u5728\u53ef\u884c\u7684\u65b9\u6848\u3002\n\n\u5904\u7406\u53ef\u9760\u7a0b\u5ea6\u6700\u5927\u65f6\uff0c\u8003\u8651\u7528\u8d39\u7528\u6d41\u89e3\u51b3\uff0c\u5c06\u6bcf\u6761\u8fb9\u7684\u5b89\u5168\u7a0b\u5ea6\u770b\u4f5c\u8fb9\u7684\u8d39\u7528\uff0c\u8fdb\u884c\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\uff0c\u6ce8\u610f\u53cd\u5411\u8fb9\u7684\u8d39\u7528\u5e94\u8be5\u4e3a\u539f\u8fb9\u8d39\u7528\u7684\u5012\u6570\uff0c\u5b9e\u73b0\u65f6\u628a\u5e73\u65f6\u7684\u8d39\u7528\u6d41\u7684\u4e00\u4e9b\u90e8\u5206\u6539\u4e3a\u4e58\u6cd5\u5373\u53ef\u3002\n\n\u4e00\u4e9b\u7ec6\u8282\u770b\u4ee3\u7801\u5427\u3002\n\n$code:$\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 1000010\n#define inf 1000000000\n#define eps 1e-12\nusing namespace std;\ntypedef long double ld;\ntemplate<typename T> inline void read(T &x)\n{\n    x=0;char c=getchar();bool flag=false;\n    while(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    if(flag)x=-x;\n}\nint n,k,S,s,t;\nld ans=1;\nint am[maxn],d[maxn];\nld as[maxn],dis[maxn];\nbool vis[maxn];\nchar str[30];\nstruct edge\n{\n    int to,nxt,v;\n    ld c;\n}e[maxn];\nint head[maxn],edge_cnt=1;\nvoid add(int from,int to,int val,ld cost)\n{\n    e[++edge_cnt]=(edge){to,head[from],val,cost};\n\thead[from]=edge_cnt;\n    e[++edge_cnt]=(edge){from,head[to],0,1/cost};\n\thead[to]=edge_cnt;\n}\nbool spfa()\n{\n    queue<int> q;\n    for(int i=s;i<=t;++i) dis[i]=0,vis[i]=d[i]=0;\n    q.push(s),dis[s]=1,d[s]=1,vis[s]=true;\n    while(!q.empty())\n    {\n        int x=q.front();\n        q.pop(),vis[x]=false;\n        for(int i=head[x];i;i=e[i].nxt)\n        {\n            int y=e[i].to,v=e[i].v;\n            ld c=e[i].c;\n            if(v&&dis[x]*c-dis[y]>eps)\n            {\n                dis[y]=dis[x]*c,d[y]=d[x]+1;\n                if(!vis[y]) vis[y]=true,q.push(y);\n            }\n        }\n    }\n    return dis[t];\n}\nint dfs(int x,int lim)\n{\n    if(x==t) return lim;\n    int res=lim,flow;\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        int y=e[i].to,v=e[i].v;\n        ld c=e[i].c;\n        if(!v||dis[y]-dis[x]*c>eps||d[y]!=d[x]+1) continue;\n        if(flow=dfs(y,min(res,v)))\n        {\n            res-=flow;\n            e[i].v-=flow;\n            e[i^1].v+=flow;\n            if(!res) break;\n        }\n    }\n    return lim-res;\n}\nld qp(ld x,int y)\n{\n    ld v=1;\n    while(y)\n    {\n        if(y&1) v*=x;\n        x*=x,y>>=1;\n    }\n    return v;\n}\nvoid dinic()\n{\n    int flow,sum=0;\n    while(spfa()>eps)\n        while(flow=dfs(s,inf))\n            sum+=flow,ans*=qp(dis[t],flow);\n    if(sum!=k) ans=0;\n}\nvoid print()\n{\n    sprintf(str,\"%.15Lf\",ans);\n    int pos=0,cnt=0;\n    while(cnt<5)\n    {\n        char ch=str[pos++];\n        if((ch!='0'&&ch!='.')||cnt) cnt++;\n    }\n    if(str[pos]>='5') str[pos-1]+=1;\n    str[pos]=0;\n    for(int i=pos;i>=0;--i)\n    {\n        if(str[i]=='.') break;\n        if(str[i]>'9') str[i-1]++,str[i]='0';\n    }\n    printf(\"%s\",str);\n}\nint main()\n{\n    read(n),read(k),S=n+1,t=S+1,add(s,S,k,1);\n    for(int i=1;i<=n;++i) scanf(\"%Lf\",&as[i]);\n    for(int i=1;i<=n;++i) read(am[i]);\n    for(int i=1;i<=n;++i)\n        if(am[i]&&as[i]>eps)\n            add(S,i,am[i],as[i]);\n    for(int i=1;i<=n;++i)\n    {\n        int v;\n        read(v);\n        if(v) add(i,t,inf,1);\n    }\n    while(1)\n    {\n        int x,y,m;\n        ld s;\n        read(x),read(y);\n        if(x==-1&&y==-1) break;\n        scanf(\"%Lf\",&s),read(m);\n        add(x,y,m,s),add(y,x,m,s);\n    }\n    dinic();\n    if(ans>eps) print();\n    else puts(\"0\");\n    return 0;\n}\n```",
        "postTime": 1586876414,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5814 \u3010[CTSC2001]\u7ec8\u6781\u60c5\u62a5\u7f51\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u5b9e\u5728\u592a\u5751\u4eba\u4e86\uff0c\u5c31\u5199\u4e00\u7bc7\u9898\u89e3\u3002\n\n------\n\n\u9996\u5148\uff0c\u672c\u9898\u8d39\u7528\u6d41\u7684\u6a21\u578b\u662f\u5f88\u660e\u663e\u7684\u2014\u2014\u6211\u519b\u603b\u90e8\u8fde\u5230\u6bcf\u4e2a\u4eba\uff0c\u4e24\u4e2a\u4eba\u4e4b\u95f4\u4e92\u76f8\u8fde\u8fb9\uff0c\u7136\u540e\u6bcf\u4e2a\u4eba\u518d\u8fde\u5230\u654c\u519b\u603b\u90e8\u3002\n\n\u4f46\u662f\uff0c\u8fd9\u91cc\u7684\u8d39\u7528\u5374\u6bd4\u8f83\u975e\u5e38\u89c4\u2014\u2014\u5b83\u662f\u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u7684\u8fb9\u6743\u7684**\u4e58\u79ef**\u3002\n\n\u82e5\u4ecd\u7136\u66b4\u529b\u8dd1\u8d39\u7528\u6d41\u7684\u8bdd\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u9664\u96f6\u8fd9\u79cd\u5947\u602a\u7684\u4e1c\u897f\uff0c\u56e0\u6b64\u5bf9\u6240\u6709\u8fb9\u6743\u53d6\u4e2a $\\ln$ \u5373\u53ef\u5316\u79ef\u4e3a\u548c\uff0c\u7136\u540e\u6700\u540e\u628a\u8dd1\u51fa\u6765\u7684\u6700\u5c0f\u8d39\u7528\u518d\u7ed9\u5b83 $\\exp$ \u56de\u53bb\u5c31\u884c\u4e86\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u56e0\u4e3a\u8fd9\u9898\u7684\u8fb9\u6743\u90fd\u662f\u5b9e\u6570\uff0c\u5c31\u53ef\u80fd\u4f1a\u628a SPFA \u53ef\u4ee5\u5904\u7406\u7684\u96f6\u73af\u7ed9\u5224\u6210\u8d1f\u73af\uff0c\u4e8e\u662f\u5728\u6bd4\u8f83\u5927\u5c0f\u7684\u65f6\u5019\u5f97\u624b\u52a8\u52a0\u4e00\u4e2a $\\text{eps}$ \u4e0a\u53bb\u3002\n\n\u540c\u65f6\uff0c\u6ce8\u610f\u8f93\u51fa\u2014\u2014\u201c\u4fdd\u7559 $5$ \u4f4d\u6709\u6548\u6570\u5b57\u201d\u7684\u610f\u601d\u662f\uff0c\u627e\u5230\u5c0f\u6570\u70b9\u540e\u7b2c\u4e00\u4e2a\u975e $0$ \u4f4d\uff0c\u4ece\u8be5\u4f4d\u5f80\u540e\u518d\u53d6 $5$ \u4f4d\u4f5c\u56db\u820d\u4e94\u5165\uff0c\u5e76\u975e\u4fdd\u7559 $5$ \u4f4d\u5c0f\u6570\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf=-0x3f3f3f3f;\nconst double eps=1e-8;\nconst double lim=-100;\nint n,m,s;\nnamespace MCMF{\n\tconst int N=310,M=2000000;\n\tint head[N],cnt,fr[N],S,T,flow;\n\tdouble cost,dis[N];\n\tstruct node{\n\t\tint to,next,val;\n\t\tdouble cost;\n\t}edge[M];\n\tvoid ae(int u,int v,int w,double c){\n//\t\tprintf(\"%d %d %d %lf\\n\",u,v,w,c);\n\t\tedge[cnt].cost=c,edge[cnt].next=head[u],edge[cnt].to=v,edge[cnt].val=w,head[u]=cnt++;\n\t\tedge[cnt].cost=-c,edge[cnt].next=head[v],edge[cnt].to=u,edge[cnt].val=0,head[v]=cnt++;\n\t}\n\tqueue<int>q;\n\tbool in[N];\n\tbool SPFA(){\n\t\tfor(int i=1;i<=T;i++)dis[i]=inf;dis[S]=0,q.push(S),in[S]=true;\n\t\twhile(!q.empty()){\n\t\t\tint x=q.front();q.pop(),in[x]=false;\n\t\t\tfor(int i=head[x];i!=-1;i=edge[i].next){\n\t\t\t\tif(!edge[i].val)continue;\n\t\t\t\tif(dis[edge[i].to]+eps<dis[x]+edge[i].cost){\n\t\t\t\t\tdis[edge[i].to]=dis[x]+edge[i].cost,fr[edge[i].to]=i;\n\t\t\t\t\tif(!in[edge[i].to])in[edge[i].to]=true,q.push(edge[i].to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(dis[T]<=inf+eps)return false;\n\t\tint x=T,mn=0x3f3f3f3f;\n\t\twhile(x!=S)mn=min(mn,edge[fr[x]].val),x=edge[fr[x]^1].to;\n\t\tflow+=mn,cost+=dis[T]*mn,x=T;\n\t\twhile(x!=S)edge[fr[x]].val-=mn,edge[fr[x]^1].val+=mn,x=edge[fr[x]^1].to;\n\t\treturn true;\n\t}\n}\nusing namespace MCMF;\ndouble sft[310];\nchar str[310];\nvoid roundprint(double x){\n\tsprintf(str,\"%.10lf\",x);\n\tint len=0,sml=-1;\n\tfor(len=0;sml<4;len++)if(str[len]>'0'&&str[len]<='9'||sml!=-1)sml++;\n\tif(str[len]>='5')str[len-1]++;str[len]='\\0';\n\twhile(str[len-1]!='.'&&str[len-1]>'9')str[len-1]='0',str[len-2]++,len--;\n\tprintf(\"%s\\n\",str);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m),s=n+1,S=n+2,T=n+3,memset(head,-1,sizeof(head)),ae(S,s,m,0);\n\tfor(int i=1;i<=n;i++)scanf(\"%lf\",&sft[i]);\n\tfor(int i=1,x;i<=n;i++){\n\t\tscanf(\"%d\",&x);\n\t\tif(sft[i]>eps)ae(s,i,x,log(sft[i]));\n\t\telse ae(s,i,x,lim);\n\t}\n\tfor(int i=1,x;i<=n;i++){\n\t\tscanf(\"%d\",&x);\n\t\tif(x)ae(i,T,0x3f3f3f3f,0);\n\t}\n\twhile(true){\n\t\tint x,y,z;double c;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(x==-1&&y==-1)break;\n\t\tscanf(\"%lf%d\",&c,&z);\n\t\tif(c>eps)ae(x,y,z,log(c)),ae(y,x,z,log(c));\n\t\telse ae(x,y,z,lim),ae(y,x,z,lim);\n\t}\n\twhile(SPFA());\n\tif(flow!=m)puts(\"0\");else roundprint(exp(cost));\n\treturn 0;\n}\n```\n\n",
        "postTime": 1612665282,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5814 \u3010[CTSC2001]\u7ec8\u6781\u60c5\u62a5\u7f51\u3011"
    }
]