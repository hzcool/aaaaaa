[
    {
        "content": "## \u9898\u89e3\u65f6\u95f4\r\n\r\n### subtask 1\r\n\r\n\u4e00\u4e2a\u7b80\u5355\u7684\u73af\u5957\u6811 DP\u3002\r\n\r\n\u6bcf\u4e2a\u5173\u7cfb\u4e00\u90fd\u5efa $ 1 $ \u6761\u8fb9\uff0c\u7136\u540e\u6b63\u5e38\u5730 DP \u5c31\u884c\u4e86\u3002\r\n\r\nDP \u5c31\u5f88\u7b80\u5355\uff0c\u4e00\u4e2a\u4f7f\u7528\u6839\uff0c\u4e00\u4e2a\u4e0d\u4f7f\u7528\u6839\uff0c\u7136\u540e\u53d6 max\u3002\r\n\r\n\u6700\u540e\u6240\u6709\u57fa\u73af\u6811\u7684 asw \u4e4b\u548c\u5373\u4e3a\u6240\u6c42\u3002\r\n\r\n### subtask 2\r\n\r\n\u5728 subtask 2 \u7684\u57fa\u7840\u4e0a\u6709\u4e86\u5173\u7cfb\u4e8c\u3002\r\n\r\n\u56e0\u4e3a\u6bcf\u4e2a\u7cfb\u5217\u90fd\u8981\u4e00\u8d77\u9009\uff0c\u6240\u4ee5\u5c31\u4ece\u9009\u70b9\u53d8\u6210\u4e86\u9009\u7cfb\u5217\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a\u6bcf\u4e2a\u7cfb\u5217\u7684\u6240\u6709\u70b9\u90fd\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u7cfb\u5217\u7684\u6743\u503c\u4e3a\u5176\u4e2d\u6240\u6709\u7684\u70df\u82b1\u7684\u6743\u503c\u4e4b\u548c\u3002(\u6ca1\u6709\u7cfb\u5217\u7684\u70df\u82b1\u5f53\u6210\u4e00\u4e2a\u7cfb\u5217\uff0c\u4e3b\u70df\u82b1\u4e3a\u81ea\u5df1)\r\n\r\n\u5176\u4e2d\u7684\u6bcf\u4e2a\u70df\u82b1\u7684\u5173\u7cfb\u4e00\uff0c\u5982\u679c\u4e0e\u4e3b\u70df\u82b1\u7684\u5173\u7cfb\u4e00\u662f\u4e00\u4e2a\u7cfb\u5217\u7684\uff0c\u5c31\u628a\u8fd9\u4e24\u4e2a\u7cfb\u5217\u4e4b\u95f4\u7684\u8fb9\u7684\u6743\u503c\u52a0\u4e0a\u8fd9\u4e2a\u5173\u7cfb\u4e00\u7684\u6743\u503c\u3002\u5982\u679c\u8fd9\u4e2a\u70df\u82b1\u7684\u5173\u7cfb\u4e00\u4e0e\u8fd9\u4e2a\u70df\u82b1\u662f\u540c\u4e00\u4e2a\u7cfb\u5217\u7684\uff0c\u5c31\u628a\u8fd9\u4e2a\u7cfb\u5217\u7684\u6743\u503c\u51cf\u53bb\u8fd9\u4e2a\u5173\u7cfb\u4e00\u7684\u6743\u503c\u3002\r\n\r\n\u7528\u5e76\u67e5\u96c6\u627e\u73af\uff0c\u4f46\u6709\u53ef\u80fd\u4e00\u4e2a\u7cfb\u5217\u7684\u4e3b\u70df\u82b1\u7684\u5173\u7cfb\u4e00\u4e0e\u8fd9\u4e2a\u70df\u82b1\u4e3a\u540c\u4e00\u4e2a\u7cfb\u5217\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a \u6811\u52a0\u57fa\u73af\u6811 \u68ee\u6797\u3002\u518d\u5229\u7528\u5efa\u53cd\u8fb9\uff0c\u4fbf\u53ef\u89e3\u51b3\u95ee\u9898\u3002\r\n\r\n\u628a\u6709\u5165\u5ea6\u7684\u70b9\u6807\u8bb0\u4e00\u4e0b\uff0c\u8fd9\u6837\u6ca1\u522b\u6807\u8bb0\u7684\u70b9\u4e3a\u4e00\u4e2a\u6811\u7684\u6839\uff0c\u518d\u5728\u627e\u5230\u73af\u7684\u65f6\u5019\u628a\u4e24\u4e2a\u70b9\u8bb0\u5f55\u4e0b\u6765\uff0c\u4f5c\u4e3a\u57fa\u73af\u6811\u7684\u6839\uff0c\u6700\u540e\u4f9d\u6b21 DP\uff0c\u628a\u6bcf\u6b21\u5f97\u5230\u7684\u7ed3\u679c\u52a0\u548c\uff0c\u5c31\u662f\u7b54\u6848\u3002\r\n\r\n**\u6ce8\uff1a\u8bb0\u5f97\u5f00 long long.**\r\n\r\n\u6700\u540e\u9644\u4e0a std:\r\n```cpp\r\n#include<iostream>\r\n#include<cstdio>\r\n#include<cmath>\r\n#include<cstring>\r\n#include<vector>\r\nusing namespace std;\r\nvector<int>mm[500001];\r\nstruct nood {\r\n\tint to,next;\r\n\tlong long v;\r\n} g[1000001];\r\nint num,m,top,cnt,n,fa[500001],fa1[500001],a[500001];\r\nint xx[500001],root[500001],di[500001],zhi[500001],zhu[500001];\r\nlong long ans,f[500001][2],v[500001],vv[500001],ji[500001];\r\nbool vi[500001];\r\nchar hhd;\r\ninline void read1(int &k) {\r\n\tk=0,hhd=getchar();\r\n\twhile(hhd>'9'||hhd<'0') hhd=getchar();\r\n\twhile(hhd<='9'&&hhd>='0') k=k*10+hhd-'0',hhd=getchar();\r\n}\r\ninline void read2(long long &k) {\r\n\tk=0,hhd=getchar();\r\n\twhile(hhd>'9'||hhd<'0') hhd=getchar();\r\n\twhile(hhd<='9'&&hhd>='0') k=k*10+hhd-'0',hhd=getchar();\r\n}\r\ninline int get(int u) {\r\n\tif(fa[u]==u) return u;\r\n\treturn fa[u]=get(fa[u]);\r\n}\r\ninline void dfs(int u) {\r\n\tf[u][1]=v[u];\r\n\tfor(int i=a[u]; i; i=g[i].next) {\r\n\t\tint j=g[i].to;\r\n\t\tdfs(j);\r\n\t\tf[u][0]+=max(f[j][0],f[j][1]);\r\n\t\tf[u][1]+=max(f[j][0],f[j][1]-g[i].v);\r\n\t}\r\n}\r\ninline void dfs1(int u,int k) {\r\n\tf[u][1]=v[u];\r\n\tfor(int i=a[u]; i; i=g[i].next) {\r\n\t\tint j=g[i].to;\r\n\t\tdfs1(j,k);\r\n\t\tif(j==di[k]) {\r\n\t\t\tf[u][0]+=max(f[j][0],f[j][1]-zhi[k]);\r\n\t\t\tf[u][1]+=max(f[j][0],f[j][1]-g[i].v-zhi[k]);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tf[u][0]+=max(f[j][0],f[j][1]);\r\n\t\tf[u][1]+=max(f[j][0],f[j][1]-g[i].v);\r\n\t}\r\n}\r\nint main() {\r\n\tread1(n),read1(m);\r\n\tfor(int i=1; i<=n; i++) read2(vv[i]),read1(xx[i]),read2(ji[i]);\r\n\tfor(int k,i=1; i<=m; i++) {\r\n\t\tread1(zhu[++num]),read1(k),fa[i]=num;\r\n\t\tfor(int kk,j=1; j<=k; j++) {\r\n\t\t\tread1(kk),fa1[kk]=i,v[i]+=vv[kk],mm[i].push_back(kk);\r\n\t\t}\r\n\t}\r\n\tfor(int i=1; i<=n; i++) if(!fa1[i]) {\r\n\t\t\tzhu[++num]=i,fa1[i]=num,fa[num]=num;\r\n\t\t\tv[num]=vv[i],mm[num].push_back(i);\r\n\t\t}\r\n\tfor(int i=1; i<=num; i++) {\r\n\t\tint res=0,y=fa1[xx[zhu[i]]];\r\n\t\tfor(int j=0; j<mm[i].size(); j++) {\r\n\t\t\tint x=fa1[xx[mm[i][j]]];\r\n\t\t\tif(i==x) v[x]-=ji[mm[i][j]];\r\n\t\t\telse if(y==x) res+=ji[mm[i][j]];\r\n\t\t}\r\n\t\tif(i==y) continue;\r\n\t\tvi[i]=1;\r\n\t\tif(get(i)==get(y)) root[++top]=i,di[top]=y,zhi[top]=res;\r\n\t\telse {\r\n\t\t\tfa[fa[i]]=fa[y],g[++cnt].v=res,g[cnt].to=i;\r\n\t\t\tg[cnt].next=a[y],a[y]=cnt;\r\n\t\t}\r\n\t}\r\n\tfor(int i=1; i<=num; i++) if(!vi[i]) dfs(i),ans+=max(f[i][1],f[i][0]);\r\n\tfor(int kk=1; kk<=top; kk++) {\r\n\t\tlong long asw=0;\r\n\t\tdfs1(root[kk],kk),asw=f[root[kk]][1],memset(f,0,sizeof(f));\r\n\t\tdfs(root[kk]),asw=max(asw,f[root[kk]][0]),ans+=asw;\r\n\t}\r\n\tprintf(\"%lld\",ans);\r\n}\r\n```",
        "postTime": 1642744028,
        "uid": 440943,
        "name": "leihonglongyin",
        "ccfLevel": 7,
        "title": "Fireworks \u9898\u89e3"
    },
    {
        "content": "### \u524d\u8a00\n\n\u6211\u4ece\u6765\u4e0d\u4f7f\u7528 STL\uff0c\u4f7f\u7528 STL \u8ba9\u6211\u611f\u5230\u4e0d\u8212\u670d\uff0c\u6211\u4e0d\u4f1a\u518d\u4f7f\u7528 STL \u5199\u9898\uff0c\u671b\u5468\u77e5\u3002\n\n\u4e3a\u4ec0\u4e48\u9898\u89e3\u533a\u5b98\u65b9\u9898\u89e3\u90fd\u6ca1\u6709\u554a\uff0c\u4e0d\u662f\u5f88\u80fd\u7406\u89e3\u3002\n\n\u5173\u6ce8\u83b2\u83b2\uff0c\u597d\u8fd0\u8fde\u8fde\uff01\n\n### \u601d\u8def\n\n#### Subtask 1\n\n\u4e00\u79cd\u70df\u82b1\u53ea\u4f1a\u6307\u5411\u53e6\u4e00\u79cd\u70df\u82b1\uff0c\u975e\u5e38\u50cf\u57fa\u73af\u6811\u3002\n\n$m=0$\uff0c\u6211\u4eec\u8003\u8651\u57fa\u73af\u6811\u4e0a\u52a8\u6001\u89c4\u5212\u3002\n\n\u6211\u4eec\u8003\u8651\u5148\u5728\u5b50\u6811\u4e0a\u52a8\u6001\u89c4\u5212\uff0c\u7136\u540e\u518d\u628a\u7b54\u6848\u4e22\u5230\u73af\u4e0a\u7edf\u8ba1\u8d77\u6765\u3002\n\n\u8bbe $dp_{i,0/1}$ \u8868\u793a \u5728\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u7b2c $i$ \u4e2a\u70b9\u53d6\u8fd8\u662f\u4e0d\u53d6\u5f97\u5230\u7684\u6700\u5927\u70b9\u6743\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\u975e\u5e38\u660e\u663e\uff0c$dp_{i,0}=dp_{i,0}+\\max\\left(dp_{v,0},dp_{v,1}\\right)$\uff0c$dp_{i,1}=dp_{i,0}+\\max\\left(dp_{v,0},dp_{v,1}-w\\right)$\uff0c\u5176\u4e2d $v$ \u4e3a $i$ \u7684\u5b50\u7ed3\u70b9\uff0c$w$ \u4e3a $i$ \u5230 $v$ \u7684\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\u3002\n\n\u4f60\u53ef\u80fd\u4f1a\u60f3\uff0c\u62c9\u5230\u73af\u4e0a\u50cf\u6811\u4e00\u6837\u52a8\u6001\u89c4\u5212\u5c31\u80fd\u89e3\u51b3\u8fd9\u4e2a\u96be\u9898\uff0c\u53ef\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\uff0c\u8d77\u70b9\u4f1a\u8bf4\uff1a\u4f60\u771f\u4ee5\u4e3a\u7ec8\u70b9\u53ea\u7531\u7ec8\u70b9\u7684\u524d\u9a71\u66f4\u65b0\u554a\uff1f\u4f60\u7239\u90fd\u4e0d\u8ba4\u8bc6\u4e86\u662f\u5427\uff1f\n\n\u5728\u73af\u4e0a\u5408\u5e76\u8fd9\u4e9b\u4fe1\u606f\uff0c\u4f60\u5e94\u8be5\u505a\u8fc7 P2607\uff0c\u50cf\u8fd9\u4e2a\u9898\u4e00\u6837\uff0c\u94a6\u70b9\u73af\u4e0a\u7684\u4e00\u4e2a\u8d77\u70b9\u7684\u72b6\u6001\uff0c\u4e00\u4e2a\u73af\u5c31\u4f1a\u88ab\u7834\u6210\u4e00\u6761\u94fe\uff0c\u5728\u8fd9\u6761\u94fe\u4e0a\u52a8\u6001\u89c4\u5212\uff0c\u800c\u5982\u679c\u8d77\u70b9\u7684\u72b6\u6001\u4e3a\u9009\uff0c\u7ec8\u70b9\u7684\u72b6\u6001\u4e5f\u4e3a\u9009\uff0c\u5c31\u9700\u8981\u989d\u5916\u51cf\u6389\u8d77\u70b9\u4e0e\u7ec8\u70b9\u7684\u8fb9\u6743\uff0c\u5728\u5408\u8ba1 $4$ \u79cd\u60c5\u51b5\u4e2d\u53d6\u51fa\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u867d\u7136\u8fd9\u79cd\u505a\u6cd5\u53ea\u80fd\u5728\u53ca\u5176\u7f55\u89c1\u7684\u60c5\u51b5\u4e0b\u8d77\u5230\u4f5c\u7528\uff0c\u4f46\u662f\u53ef\u4ee5\u62ff\u5230 $30$ \u5206\u3002\n\n#### Subtask 2\n\n\u65e0\u7279\u6b8a\u60c5\u51b5\u3002\n\n\u8003\u8651\u5230\u5173\u7cfb $2$\uff0c\u5373\u9650\u5236\u4e00\u4e9b\u70df\u82b1\u5fc5\u987b\u4e00\u8d77\u71c3\u653e\uff0c\u8003\u8651\u7528\u5e76\u67e5\u96c6\u5c06\u4ed6\u4eec\u5408\u5e76\uff0c\u5408\u5e76\u8d77\u6765\u540e\u7528\u4ed6\u4eec\u7684\u5173\u7cfb\u5efa\u7acb\u65b0\u56fe\uff0c\u7531\u4e8e\u9898\u76ee\u7ed9\u51fa\u7684\u9650\u5236\uff0c\u4e00\u4e2a\u5927\u70b9\u81f3\u591a\u8fde\u51fa\u53bb\u4e00\u6761\u8fb9\u3002\n\n\u4e8e\u662f\u65b0\u7684\u56fe\u5c31\u4f1a\u662f\u4e00\u4e2a\u57fa\u73af\u6811\u4e0e\u6811\u7684\u68ee\u6797\uff0c\u5728\u4e0a\u9762\u52a8\u6001\u89c4\u5212\u5c31\u80fd\u89e3\u51b3\u8fd9\u4e2a\u96be\u9898\u3002\n\n\u8fd9\u4e2a\u9898\u662f\u6bd4\u8f83\u5361\u7684\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u5927\u91cf STL\uff0c\u5c31\u4f1a\u51fa\u73b0\u7f55\u89c1\u7684 TLE\uff0c\u4f46\u662f\u6ca1\u5173\u7cfb\uff0c\u5f00 O2 \u5c31\u80fd\u8dd1\u8fc7\uff0c\u4efb\u4f55 STL \u7ec8\u5c06\u7ef3\u4e4b\u4ee5\u6cd5\u3002\n\n\u5982\u679c\u4f60\u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0 RE \u6216\u8005 WA \u4e86\uff0c\u6211\u7ed9\u51fa\u4e00\u7ec4 hack\u3002\n\n```\ninput:\n10 2\n7 4 65\n40 1 74\n48 8 32\n77 5 94\n74 3 79\n65 8 19\n38 5 80\n60 4 48\n60 3 1\n15 9 25\n1 3 1 7 6\n4 3 4 9 2\n\noutput:\n270\n```\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define mkpr make_pair\n#define int long long\nusing namespace std;\nconst int MAXN=5e5+5;\nint n,q;\nclass UFS{\n    public:\n    int father[MAXN];\n    void init(){\n        for(int i=1;i<=n;i++)father[i]=i;\n        return;\n    }\n    int find(int x){\n        if(father[x]==x)return x;\n        return father[x]=find(father[x]);\n    }\n    void unionn(int x,int y){\n        x=find(x),y=find(y);\n        if(x^y)father[x]=y;\n        return;\n    }\n}P;\nint cnt=1;\nstruct edge{\n    int v,w;\n    int nxt;\n}E[MAXN<<1];\nint head[MAXN];\nstruct node{\n    int v,a,b;\n}Fir[MAXN];\nstruct point{\n    int v,w;\n};\nint D[MAXN];\nint C[MAXN];\nbool vis[MAXN];\nint R[MAXN];\nbool tag[MAXN];\nbool bj[MAXN];\nvector<point> ljb[MAXN];\nint dp[MAXN][2];\nint num[MAXN][2];\nint id[MAXN];\nvoid init(){\n    scanf(\"%lld%lld\",&n,&q);\n    P.init();\n    for(int i=1;i<=n;i++){\n        int v,a,b;\n        scanf(\"%lld%lld%lld\",&v,&a,&b);\n        Fir[i]=node{v,a,b};\n    }\n    for(int i=1;i<=q;i++){\n        int p,k;\n        scanf(\"%lld%lld\",&p,&k);\n        while(k--){\n            int x;\n            scanf(\"%lld\",&x);\n            P.father[x]=p;\n        }\n    }\n    return;\n}\nvoid addedge(int u,int v,int w){\n    cnt++;\n    E[cnt].v=v;\n    E[cnt].w=w;\n    E[cnt].nxt=head[u];\n    head[u]=cnt;\n    return;\n}\nvoid getE(){\n    map<pair<int,int>,bool> mp;\n    for(int i=1;i<=n;i++){\n        if(P.father[i]==i){\n            int u=i;\n            int v=P.find(Fir[i].a);\n            if(u>v)swap(u,v);\n            if(mp[mkpr(u,v)]){\n                int tmp=i^u^v;\n                C[i]=C[tmp]^1;\n                continue;\n            }\n            if(u==v)continue;\n            mp[mkpr(u,v)]=true;\n            addedge(u,v,0);\n            addedge(v,u,0);\n            C[i]=cnt-1;\n        }\n    }\n    for(int i=1;i<=n;i++){\n        int v1=P.find(Fir[i].a);\n        int v2=P.find(Fir[P.find(i)].a);\n        if(v1==v2){\n            int fx=P.find(i);\n            int e=C[fx];\n            E[e].w+=Fir[i].b;\n            E[e^1].w+=Fir[i].b;\n        }\n    }\n    return;\n}\nvoid getD(){\n    for(int i=1;i<=n;i++){\n        D[P.find(i)]+=Fir[i].v;\n    }\n    for(int i=1;i<=n;i++){\n        int fx=P.find(i);\n        int v=P.find(Fir[i].a);\n        if(v==fx){\n            D[fx]-=Fir[i].b;\n        }\n    }\n    return;\n}\nvoid getnew(){\n    vector<int> A;\n    for(int i=1;i<=n;i++){\n        if(P.find(i)==i)A.push_back(i);\n    }\n    for(int i=0;i<A.size();i++){\n        id[A[i]]=i+1;\n    }\n    for(int i=0;i<A.size();i++){\n        int tmp=A[i];\n        D[id[tmp]]=D[tmp];\n        for(int j=head[tmp];j;j=E[j].nxt){\n            int v=E[j].v;\n            int w=E[j].w;\n            ljb[id[tmp]].push_back(point{id[v],w});\n        }\n    }\n    n=A.size();\n    return;\n}\nvoid getR(){\n    for(int i=1;i<=n;i++){\n        for(int j=0;j<ljb[i].size();j++){\n            int v=ljb[i][j].v;\n            R[v]++;\n        }\n    }\n    return;\n}\nvector<point> cir;\nbool pos[MAXN];\nvoid find(int cur,int fa,int w){\n    cir.push_back(point{cur,w});\n    pos[cur]=true;\n    for(int i=0;i<ljb[cur].size();i++){\n        int v=ljb[cur][i].v;\n        int w=ljb[cur][i].w;\n        if(v==fa)continue;\n        if(!pos[v]&&vis[v]){\n            find(v,cur,w);\n            break;\n        }\n        if(pos[v])cir[0].w+=w;\n    }\n    return;\n}\nvoid gettag(int cur){\n    bj[cur]=true;\n    tag[cur]=true;\n    for(int i=0;i<ljb[cur].size();i++){\n        int v=ljb[cur][i].v;\n        if(!tag[v])gettag(v);\n    }\n    return;\n}\nvoid getcir(int S){\n    for(int i=1;i<=n;i++)tag[i]=false;\n    cir.clear();\n    gettag(S);\n    queue<int> q;\n    for(int i=1;i<=n;i++){\n        if(R[i]==1&&tag[i])q.push(i);\n        vis[i]=false;\n    }\n    while(!q.empty()){\n        int t=q.front();\n        vis[t]=true;\n        q.pop();\n        for(int i=0;i<ljb[t].size();i++){\n            int v=ljb[t][i].v;\n            R[v]--;\n            if(vis[v])continue;\n            if(R[v]==1)q.push(v);\n        }\n    }\n    for(int i=1;i<=n;i++){\n        vis[i]^=1;\n    }\n    for(int i=1;i<=n;i++){\n        if(vis[i]&&tag[i]){\n            find(i,0ll,0ll);\n            break;\n        }\n    }\n    return;\n}\nvoid getDP(int cur,int fa){\n    dp[cur][0]=0;\n    dp[cur][1]=D[cur];\n    for(int i=0;i<ljb[cur].size();i++){\n        int v=ljb[cur][i].v;\n        int w=ljb[cur][i].w;\n        if((v^fa)&&!vis[v]){\n            getDP(v,cur);\n            dp[cur][0]+=max(dp[v][0],dp[v][1]);\n            dp[cur][1]+=max(dp[v][0],dp[v][1]-w);\n        }\n    }\n    return;\n}\nvoid getG(){\n    init();//\u8bfb\u5165\n    getE();//\u5efa\u8fb9\n    getD();//\u5efa\u70b9\n    getnew();//\u91cd\u7f6e\u6574\u5f20\u56fe\n    getR();//\u7edf\u8ba1\u5ea6\u6570\u65b9\u4fbf\u62d3\u6251\n    return;\n}\nint getans(){\n    int ans=0;\n    for(int i=1;i<=n;i++){\n        if(bj[i])continue;\n        getcir(i);//\u627e\u73af\uff0c\u585e\u8fdbcir\u6570\u7ec4\u91cc\u9762\n        int len=cir.size();\n        if(len==0){//\u65e0\u73af\uff0c\u6811\uff0c\u76f4\u63a5\u8dd1\u6811\u5f62dp\n            getDP(i,0);\n            ans+=max(dp[i][0],dp[i][1]);\n            continue;\n        }\n        for(point S:cir){//\u5904\u7406\u6302\u5728\u73af\u4e0a\u7684\u5b50\u6811\n            getDP(S.v,0);\n        }\n        int sum1=0;\n        int sum2=0;\n        num[0][0]=dp[cir[0].v][0];//\u5f3a\u5236\u8d77\u70b9\u4e0d\u53d6\n        num[0][1]=-1e18;\n        for(int i=1;i<cir.size();i++){\n            num[i][0]=max(num[i-1][0],num[i-1][1])+dp[cir[i].v][0];\n            num[i][1]=max(num[i-1][0],num[i-1][1]-cir[i].w)+dp[cir[i].v][1];\n        }\n        sum1=max(num[len-1][0],num[len-1][1]);\n        num[0][1]=dp[cir[0].v][1];//\u5f3a\u5236\u8d77\u70b9\u53d6\n        num[0][0]=-1e18;\n        for(int i=1;i<len;i++){\n            num[i][0]=max(num[i-1][0],num[i-1][1])+dp[cir[i].v][0];\n            num[i][1]=max(num[i-1][0],num[i-1][1]-cir[i].w)+dp[cir[i].v][1];\n        }\n        sum2=max(num[len-1][0],num[len-1][1]-cir[0].w);\n        ans+=max(sum1,sum2);\n    }\n    return ans;\n}\nint solve(){\n    getG();//\u5efa\u7acb\u65b0\u56fe\n    return getans();\n}\nsigned main(){\n    printf(\"%lld\\n\",solve());\n    return 0;\n}\n```\n\n\u6211\u7684\u5199\u6cd5\u6bd4\u8f83\u611a\u8822\uff0c\u8981\u5f00 O2 \u624d\u80fd\u8fc7\uff0c\u8fd9\u91cc\u4ec5\u4f5c\u53c2\u8003\u3002",
        "postTime": 1669174182,
        "uid": 679749,
        "name": "EastSnowLotus",
        "ccfLevel": 0,
        "title": "\u8aac\u660e"
    }
]