[
    {
        "content": "emmm \u8fd9\u91cc\u662f\u840c\u65b0\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3  \n****\n\u9996\u5148\u60f3\u60f3\u6ca1\u6709\u52a0\u8fb9\u600e\u4e48\u505a\uff1a  \n\n\u7531\u4e8e\u7ef4\u62a4\u7684\u662f\u5fc5\u7ecf\u70b9\uff0c\u4e5f\u5c31\u662f\u5272\u70b9\u7684\u4fe1\u606f\u3002  \n\u5f88\u5bb9\u6613\u60f3\u5230\u6784\u5efa\u5706\u65b9\u6811\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u5efa\u4e00\u4e2a\u65b9\u70b9\uff0c\u70b9\u53cc\u4e2d\u7684\u70b9\u90fd\u8fde\u8fc7\u53bb\uff0c\u5176\u5b83\u8fb9\u90fd\u53bb\u6389\u3002\n\n\u65e2\u7136\u8fd8\u6709\u52a8\u6001\u52a0\u8fb9\uff0c\u9996\u5148\u5f53\u7136\u662f\u7528 $\\text{Link-Cut Tree}$ \u5566\u3002  \n\n\u5bf9\u4e8e $2$ \u64cd\u4f5c\uff0c\u5c31\u76f4\u63a5\u628a $x$ \u70b9 splay \u4e0a\u53bb\uff0c\u76f4\u63a5\u4fee\u6539\u70b9\u6743\uff1b\u5bf9\u4e8e $3$ \u64cd\u4f5c\uff0c\u5c31\u662f\u8def\u5f84\u6c42\u548c + \u8def\u5f84\u6743\u503c\u53d8 $0$\uff0c\u4e5f\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002  \n\n\u4e3b\u8981\u8bf4\u4e00\u4e0b $1$ \u64cd\u4f5c\u7684\u505a\u6cd5\uff1a  \n\n\u9996\u5148\u4e24\u70b9\u4e0d\u8fde\u901a\uff0c\u5f53\u7136\u662f\u76f4\u63a5\u8fde\u4e0a\u53bb\uff1b\u5982\u679c\u5df2\u8fde\u901a\uff0c\u5c31\u628a\u8def\u5f84\u4e0a\u7684\u8fb9\u90fd\u65ad\u6389\uff0c\u6240\u6709\u70b9\u90fd\u8fde\u5411\u4e00\u4e2a\u65b9\u70b9\u3002  \n\u8fd9\u6837\u770b\u8d77\u6765\u975e\u5e38\u66b4\u529b\uff0c\u4f46\u5b9e\u9645\u4e0a\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u5bf9\u7684\uff1a\u7528\u52bf\u80fd\u5206\u6790\u5bb9\u6613\u8bc1\u660e\uff0c\u590d\u6742\u5ea6\u4e3a $\\text O(q\\log n)$\u3002\n\nps\uff1a\u6709\u4e00\u4e2a\u5c0f\u4f18\u5316\uff0c\u5c31\u662f\u5f53\u4e00\u6761\u8def\u5f84\u4e0a\u9664\u4e86\u4e24\u7aef\u5168\u662f\u65b9\u70b9\u65f6\uff0c\u5c31\u76f4\u63a5\u5ffd\u7565\u8fde\u8fb9\u64cd\u4f5c\uff0c\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#pragma GCC optimize (2)\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#define N 1000003\n#define ll long long\nusing namespace std;\n\nll sum[N],a[N];\nint son[N][2],fa[N],size[N],st[N];\nbool tag[N],rev[N],real[N];\n\ninline void pushup(int u){\n    size[u] = size[son[u][0]]+size[son[u][1]]+real[u];\n    sum[u] = sum[son[u][0]]+sum[son[u][1]]+a[u];\n}\n\ninline bool notrt(int u){\n    return son[fa[u]][0]==u||son[fa[u]][1]==u;\n}\n\ninline void push_tag(int u){\n    sum[u] = a[u] = 0;\n    tag[u] = true;\n}\n\ninline void push_rev(int u){\n    swap(son[u][0],son[u][1]);\n    rev[u] ^= 1;\n}\n\ninline void pushdown(int u){\n    if(tag[u]){\n        if(son[u][0]) push_tag(son[u][0]);\n        if(son[u][1]) push_tag(son[u][1]);\n        tag[u] = 0;\n    }\n    if(rev[u]){\n        if(son[u][0]) push_rev(son[u][0]);\n        if(son[u][1]) push_rev(son[u][1]);\n        rev[u] = 0;\n    }\n}\n\ninline bool check(int u){\n\treturn son[fa[u]][1]==u;\n}\n\ninline void rotate(int x){\n    int y = fa[x],z = fa[y];\n    int k = son[y][1]==x,w = son[x][k^1];\n    if(notrt(y)) son[z][check(y)] = x;\n    son[x][k^1] = y;\n    son[y][k] = w;\n    if(w) fa[w] = y;\n    fa[y] = x,fa[x] = z;\n    pushup(y);\n}\n\ninline void splay(int x){\n    int y = x,z = 1;\n    st[1] = y;\n    while(notrt(y)) st[++z] = y = fa[y];\n    while(z) pushdown(st[z--]);\n    while(notrt(x)){\n        y = fa[x],z = fa[y];\n        if(notrt(y)) rotate(check(x)==check(y)?y:x);\n        rotate(x);\n    }\n    pushup(x);\n}\n\ninline void access(int u){\n    for(int v=0;u;u=fa[v=u])\n        splay(u),son[u][1] = v,pushup(u);\n}\n\ninline void makeroot(int u){\n    access(u),splay(u);\n    push_rev(u);\n}\n\ninline void link(int u,int v){\n    makeroot(u);\n    fa[u] = v;\n}\n\ninline void split(int u,int v){\n    makeroot(u);\n    access(v),splay(v);\n}\n\ninline void cut(int u,int v){\n    split(u,v);\n    son[v][0] = fa[u] = 0;\n    pushup(v);\n}\n\ninline ll clear(int u,int v){\n    split(u,v);\n    ll res = sum[v];\n    push_tag(v);\n    return res;\n}\n\nint n,q,top,qaq;\nll ans;\nint fk[N],stk[N];\n\ninline int find(int x){\n    while(x!=fk[x]) x = fk[x] = fk[fk[x]];\n    return x;\n}\n\ninline void fuckyou(ll &x){\n    x ^= ans%n;\n\tif(x>n) x %= n;\n\tif(!x) x = 1;\n}\n\nvoid dfs(int u){\n    if(!u) return;\n    pushdown(u);\n    dfs(son[u][0]);\n    stk[++top] = u;\n    dfs(son[u][1]);\n}\n\nint main(){\n    int op;\n    ll x,y;\n    scanf(\"%d%d\",&n,&q);\n    for(int i=1;i<=n;++i){\n        fk[i] = i;\n        real[i] = true;\n    }\n    qaq = n;\n    while(q--){\n        scanf(\"%d%lld%lld\",&op,&x,&y);\n        fuckyou(x),fuckyou(y);\n        if(op==1){\n            if(find(x)==find(y)){\n                split(x,y);\n                if(size[y]<=2) continue;\n                top = 0;\n                dfs(y);\n                ++qaq;\n                for(int i=1;i<top;++i) cut(stk[i],stk[i+1]);\n                for(int i=1;i<=top;++i) link(stk[i],qaq);\n            }else{\n                link(x,y);\n                fk[find(x)] = find(y);\n            }\n        }else if(op==2){\n            splay(x);\n            a[x] += y;\n        }else{\n            ans = find(x)==find(y)?clear(x,y):0ll;\n            printf(\"%lld\\n\",ans);\n        }\n    }\n}\n```\n\u56e0\u4e3a\u4e4b\u524d\u6709\u4e00\u9053 [P5489](https://www.luogu.org/problem/P5489) \u6240\u4ee5\u8fd9\u9898\u5c31\u663e\u5f97\u6bd4\u8f83\u6a21\u677f\uff08",
        "postTime": 1572870072,
        "uid": 221763,
        "name": "Brodal_Queue",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5622 \u3010[DBOI2019]\u5deb\u5973\u7684\u804c\u8d23\u3011"
    },
    {
        "content": "\u770b\u5230\u4e0b\u9762\u7684\u9898\u89e3\u6ca1\u6709\u7ed9\u51fa\u5177\u4f53\u7684\u590d\u6742\u5ea6\u8bc1\u660e\uff0c\u8fd9\u91cc\u7a0d\u5fae\u7b80\u5355\u8bc1\u660e\u4e00\u4e0b\u5427\u3002\n\n\u7528$\\text{lct}$\u7ef4\u62a4\u4e00\u68f5\u8282\u70b9\u6570\u4e3a$O(n)$\u7684\u5706\u65b9\u6811\uff0c\u64cd\u4f5c\u4e09\u5c31\u662f\u67e5\u8be2\u8def\u5f84\u6743\u503c\u548c\uff0c\u64cd\u4f5c\u4e8c\u662f\u5355\u70b9\u4fee\u6539\u3002\u663e\u7136\u5355\u6b21\u590d\u6742\u5ea6\u90fd\u662f$O(logn)$\u3002\n\n\u6700\u4e3b\u8981\u7684\u662f\u64cd\u4f5c\u4e00\uff0c\u6dfb\u52a0\u4e00\u6761\u8fb9$\\text{(u,v)}$\u540e\uff0c\u628a$\\text{u}$\u5230$\\text{v}$\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u8fde\u63a5\u5230\u540c\u4e00\u4e2a\u65b9\u70b9\u4e0a\u3002\n\n\u4e00\u6761\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u8fde\u63a5\u5230\u540c\u4e00\u4e2a\u65b9\u70b9\u4e0a\u65f6\uff0c\u8fd9\u6761\u8def\u5f84\u7684\u5927\u5c0f\u5c31\u53d8\u6210$O(1)$\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u8def\u5f84\u4e0a\u7684\u70b9\u90fd\u201c\u6d88\u5931\u201d\u4e86\u3002\u7531\u4e8e\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u6d88\u5931\u4e00\u6b21\uff0c\u603b\u5171\u53ea\u6709$O(n)$\u4e2a\u70b9\uff0c\u56e0\u6b64\u5355\u6b21\u64cd\u4f5c\u7684\u5747\u644a\u590d\u6742\u5ea6\u4f9d\u7136\u662f$O(logn)$\u3002",
        "postTime": 1583141353,
        "uid": 14381,
        "name": "1jia1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5622 \u3010[DBOI2019]\u5deb\u5973\u7684\u804c\u8d23\u3011"
    },
    {
        "content": "\u9898\u76ee\u5728\u8fd9\uff1a[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5622)\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u4e00\u9898\u4e3b\u8981\u5c31\u662f\u8ba9\u6211\u4eec\u52a8\u6001\u627e\u5272\u70b9\u3002\n\n\u5f04\u5272\u70b9\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u4e1c\u897f\uff1a**\u5706\u65b9\u6811**\u3002\n\n\u4e0d\u4f1a\u7684\u53ef\u4ee5\u5927\u6982\u5728[\u6d1b\u8c37\u65e5\u62a5](https://www.luogu.com.cn/blog/PinkRabbit/Introduction-to-Round-Square-Tree)\u770b\u770b\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4e0d\u96be\u5f97\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff1a\u4e00\u6761\u94fe\u4e0a\u7684\u5272\u70b9\u5373\u4e3a\u8fd9\u6761\u94fe\u4e0a\u7684\u5706\u70b9\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053 3 \u64cd\u4f5c\u600e\u4e48\u5f04\u4e86\uff1a\n\n\u5148 split \u51fa\u6765 $x$ \u5230 $y$ \u7684\u4e00\u6761\u94fe\uff0c\u7136\u540e\u518d\u6c42\u51fa\u8fd9\u6761\u8def\u5f84\u4e0a\u5706\u70b9\u7684\u6743\u503c\u603b\u548c\u3002\n\n\u6211\u4eec\u8fd9\u91cc\u7684 LCT \u7ef4\u62a4\u7684\u5176\u5b9e\u662f**\u539f\u56fe\u7684\u5706\u65b9\u6811**\u3002\n\n\u6700\u540e\u6765\u603b\u7ed3\u4e00\u4e0b\uff1a\n\n1. link $x$ \u548c $y$\uff0c\u5982\u679c\u6210\u4e3a\u4e86\u4e00\u4e2a\u73af\uff08\u4e00\u4e2a\u70b9\u53cc\uff09\u5c31\u66b4\u529b dfs \u7f29\u70b9\u6210\u4e00\u4e2a\u65b9\u70b9\uff0c\u518d\u4e0e\u539f\u6765\u7684\u90a3\u4e9b\u5706\u70b9\u76f8\u8fde\u3002\n2. \u628a $x$ \u65cb\u6210\u6839\uff0c\u518d\u52a0 $y$\u3002\n3. split \u51fa $x$ \u5230 $y$ \u7684\u4e00\u6761\u94fe\uff0c\u7136\u540e\u5bf9 $y$ \u8fdb\u884c\u67e5\u8be2\uff0c\u5e76\u6253\u4e0a\u6e05\u7a7a\u6807\u8bb0\u3002\n\n\u66b4\u529b dfs \u7684\u65f6\u590d\u8bc1\u660e\u5176\u4ed6\u9898\u89e3\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u53ef\u4ee5\u53bb\u770b\u770b\u5176\u4ed6\u9898\u89e3\u3002\n\n\u66b4\u529bdfs\u7684\u4ee3\u7801\uff1a\n```cpp\nvoid dfs(int pos,int fa){//\u66b4\u529bdfs\n\tspl[pos].fa=fa;//\u65ad\u6389\u539f\u6765\u7684\u8fb9\uff0c\u8fde\u5411fa\n\tpushdown(pos);//\u8bb0\u5f97\u8981\u4e0b\u4f20\u6807\u8bb0\n\tif(spl[pos].son[0])\n\t\tdfs(spl[pos].son[0],fa);\n\tif(spl[pos].son[1])\n\t\tdfs(spl[pos].son[1],fa);\n\tspl[pos].son[0]=spl[pos].son[1]=0;//\u65ad\u513f\u5b50\n\tpushup(pos);//\u66f4\u65b0\uff08\u6bd5\u7adf\u513f\u5b50\u90fd\u6ca1\u4e86\u561b\uff09\n}\n```\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<iostream>\nusing namespace std;\nconst int N=1e6+10;//\u6700\u591a\u67095e5\u4e2a\u5706\u70b9\uff0c\u5706\u65b9\u6811\u8981\u5f00\u4e24\u500d\u7a7a\u95f4\nstruct splay{\n\tint fa,son[2];\n\tint val;//\u8fd9\u4e2a\u70b9\u7684\u6743\u503c\uff08\u65b9\u70b9\u4e00\u76f4\u4e3a0\uff09\n\tint sum;//\u5706\u70b9\u70b9\u6743\u603b\u548c\n\tint tag;//\u6e05\u7a7a\u6807\u8bb0\n\tint rev;\n};\nsplay spl[N];\ninline bool check_root(int pos){\n\treturn spl[spl[pos].fa].son[0]!=pos&&spl[spl[pos].fa].son[1]!=pos;\n}\ninline int relation(int pos,int fa){\n\treturn spl[fa].son[1]==pos;\n}\ninline void connect(int pos,int fa,int son){\n\tspl[pos].fa=fa;\n\tspl[fa].son[son]=pos;\n}\ninline void pushup(int pos){\n\tint lson=spl[pos].son[0],rson=spl[pos].son[1];\n\tspl[pos].sum=spl[lson].sum+spl[rson].sum+spl[pos].val;//\u56e0\u4e3a\u65b9\u70b9\u4e00\u76f4\u4e3a0\uff0c\u6240\u4ee5\u8bb0\u5f55\u7684\u5c31\u662f\u6240\u6709\u5706\u70b9\u7684\u70b9\u6743\u603b\u548c\n}\ninline void pushdown(int pos){\n\tif(spl[pos].rev){\n\t\tswap(spl[pos].son[0],spl[pos].son[1]);\n\t\tspl[spl[pos].son[0]].rev^=1;\n\t\tspl[spl[pos].son[1]].rev^=1;\n\t\tspl[pos].rev=0;\n\t}\n\tif(spl[pos].tag){\n\t\tspl[spl[pos].son[0]].tag=spl[spl[pos].son[1]].tag=1;\n\t\tspl[spl[pos].son[0]].sum=spl[spl[pos].son[0]].val=0;\n\t\tspl[spl[pos].son[1]].sum=spl[spl[pos].son[1]].val=0;\n\t\tspl[pos].tag=0;\n\t}\n}\ninline void pushall(int pos){\n\tif(!check_root(pos))\n\t\tpushall(spl[pos].fa);\n\tpushdown(pos);\n}\nvoid rotate(int pos){\n\tint fa=spl[pos].fa,gf=spl[fa].fa;\n\tint t1=relation(pos,fa),t2=relation(fa,gf);\n\tconnect(spl[pos].son[t1^1],fa,t1);\n\tconnect(fa,pos,t1^1);\n\tspl[pos].fa=gf;\n\tif(spl[gf].son[t2]==fa)\n\t\tspl[gf].son[t2]=pos;\n\tpushup(fa);\n\tpushup(pos);\n}\nvoid splaying(int pos){\n\tpushall(pos);\n\twhile(!check_root(pos)){\n\t\tint fa=spl[pos].fa,gf=spl[fa].fa;\n\t\tif(!check_root(fa))\n\t\t\trelation(pos,fa)^relation(fa,gf)?rotate(pos):rotate(fa);\n\t\trotate(pos);\n\t}\n}\nvoid access(int pos){\n\tint son=0;\n\twhile(pos){\n\t\tsplaying(pos);\n\t\tspl[pos].son[1]=son;\n\t\tpushup(pos);\n\t\tson=pos;\n\t\tpos=spl[pos].fa;\n\t}\n}\nvoid make_root(int pos){\n\taccess(pos);\n\tsplaying(pos);\n\tspl[pos].rev^=1;\n}\nint find_root(int pos){\n\taccess(pos);\n\tsplaying(pos);\n\tpushdown(pos);\n\twhile(spl[pos].son[0]){\n\t\tpos=spl[pos].son[0];\n\t\tpushdown(pos);\n\t}\n\tsplaying(pos);\n\treturn pos;\n}\nvoid link(int x,int y){\n\tmake_root(x);\n\tspl[x].fa=y;\n}\nvoid split(int x,int y){\n\tmake_root(x);\n\taccess(y);\n\tsplaying(y);\n}\nvoid dfs(int pos,int fa){\n\tspl[pos].fa=fa;\n\tpushdown(pos);\n\tif(spl[pos].son[0])\n\t\tdfs(spl[pos].son[0],fa);\n\tif(spl[pos].son[1])\n\t\tdfs(spl[pos].son[1],fa);\n\tspl[pos].son[0]=spl[pos].son[1]=0;\n\tpushup(pos);\n}\nbool check(int x,int y){\n\treturn find_root(x)==find_root(y);\n}\nint main(){\n\tint n,m;\n\tcin>>n>>m;\n\tint t=0;\n\tint opt,x,y;\n\tint lastans=0;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>opt>>x>>y;\n\t\tx^=lastans%n;\n\t\tif(x>n)\n\t\t\tx%=n;\n\t\tif(!x)\n\t\t\tx=1;\n\t\ty^=lastans%n;\n\t\tif(y>n)\n\t\t\ty%=n;\n\t\tif(!y)\n\t\t\ty=1;\n\t\tswitch(opt){\n\t\t\tcase 1:\n\t\t\t\tif(x==y)//\u53ef\u80fd\u6709\u81ea\u73af\n\t\t\t\t\tbreak;\n\t\t\t\tif(!check(x,y))//\u4e0d\u5728\u540c\u4e00\u8054\u901a\u5757\n\t\t\t\t\tlink(x,y);\n\t\t\t\telse{//\u5728\u540c\u4e00\u8054\u901a\u5757\n\t\t\t\t\tsplit(x,y);//\u5206\u79bb\u51fa\u6765\u8fd9\u4e00\u6761\u94fe\n\t\t\t\t\tt++;//\u65b0\u7684\u65b9\u70b9\u7f16\u53f7\u5373\u4e3an+t\n\t\t\t\t\tdfs(y,n+t);//\u94fe\u4e0a\u7684\u70b9\u8fde\u5411\u4e00\u4e2a\u65b9\u70b9\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tsplaying(x);//\u65cb\u6210\u6839\u6d88\u9664\u5f71\u54cd\n\t\t\t\tspl[x].val+=y;\n\t\t\t\tpushup(x);//\u66f4\u65b0sum\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tif(!check(x,y))//\u4e0d\u5728\u540c\u4e00\u8054\u901a\u5757\n\t\t\t\t\tlastans=0;//\u8bb0\u5f97lastans\u4e5f\u8981\u8d4b\u503c\u4e3a0\n\t\t\t\telse{\n\t\t\t\t\tsplit(x,y);\n\t\t\t\t\tlastans=spl[y].sum;\n\t\t\t\t\tspl[y].val=spl[y].sum=0;//\u5168\u90e8\u6e05\u96f6\n\t\t\t\t\tspl[y].tag=1;//tag\u6807\u8bb0\u6807\u8bb0\u6e05\u96f6\n\t\t\t\t}\n\t\t\t\tcout<<lastans<<'\\n';\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n```",
        "postTime": 1608967809,
        "uid": 204705,
        "name": "KiDDOwithTopTree",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5622 \u3010[DBOI2019]\u5deb\u5973\u7684\u804c\u8d23\u3011"
    },
    {
        "content": "\u516b\u91cd\u6a31\uff0c\u51fa\u51fb\uff01\n\n### Problem\n\n\u9898\u76ee\u5927\u610f\uff1a\u7ef4\u62a4\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u6267\u884c\u4e0b\u9762\u4e09\u4e2a\u64cd\u4f5c\uff1a\n\n- \u52a0\u8fb9\uff1b\n- \u4fee\u6539\u70b9\u6743\uff1b\n- \u6c42\u8def\u5f84\u4e0a\u7684\u5272\u70b9\u7684\u70b9\u6743\u548c\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a $n,m \\leq 5 \\times 10^5$\u3002\n\n### Solution\n\n[\u5347\u7ea7\u7248](https://www.luogu.com.cn/problem/P5489)\uff08\u53cc\u500d\u7ecf\u9a8c\uff09\u3002\n\n\u52a8\u6001\u56fe\u7ef4\u62a4\u5272\u8fb9\u5272\u70b9\u4e5f\u7b97\u4e00\u79cd\u5957\u8def\u4e86\u5427\uff1f\n\n\u6211\u4eec\u4f7f\u7528 LCT \u7ef4\u62a4\uff0c\u7ef4\u62a4\u5272\u70b9\u65f6\uff0c\u6211\u4eec\u52a0\u5165\u5706\u65b9\u6811\u6765\u7ef4\u62a4\uff0c\u5177\u4f53\u7684\uff0c\u5f53 Link \u7684\u4e24\u4e2a\u8282\u70b9\u5df2\u7ecf\u8054\u901a\u65f6\uff0c\u6211\u4eec\u5c06\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u8fde\u5411\u65b0\u5efa\u7684\u65b9\u70b9\uff0c\u5e76\u5c06\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u8fb9\u5168\u90e8\u65ad\u5f00\u3002\u8fd9\u91cc\u5229\u7528\u4e86\u5706\u65b9\u6811\u7684\u6027\u8d28\uff0c\u4e0d\u77e5\u9053\u7684\u53ef\u4ee5\u5148\u53bb\u5b66\u4e00\u4e0b\u5706\u65b9\u6811\u3002\n\n\u7ef4\u62a4\u5272\u8fb9\u66f4\u52a0\u7b80\u5355\uff0c\u9996\u5148\u5316\u8fb9\u4e3a\u70b9\uff08\u5728\u7ef4\u62a4\u5272\u8fb9\u6570\u91cf\u7684\u65f6\u5019\u5e76\u4e0d\u9700\u8981\uff0c\u56e0\u4e3a\u5272\u8fb9\u6570\u91cf=\u94fe\u4e0a\u70b9\u6570\u91cf -1\uff09\uff0c\u7136\u540e\u76f4\u63a5\u7f29\u70b9\u5373\u53ef\u3002\n\n### Code\n\n\u7801\u98ce\u6765\u81ea Enoftaipeople\uff0c\u4ed6\u6559\u4f1a\u4e86\u6211\u4e00\u79cd\u7b80\u5355\u597d\u5199\u5b9e\u7528\u7684\u7801\u98ce\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int N=2e6+7232,inf=1e9+7;\nint n,m;\nint f[N],t[N][2],sum[N],lam[N],rev[N],v[N],tot,op,x,y,lst;\nint s[N],head;\n#define ls t[x][0]\n#define rs t[x][1]\n#define tp(x) (t[f[x]][1]==x)\n#define in(x) (t[f[x]][0]==x||tp(x))\nvoid up(int x) {sum[x]=sum[ls]+sum[rs]+v[x];}\nvoid Rev(int x){swap(ls,rs);rev[x]^=1;}\nvoid down(int x)\n{\n    if(rev[x]) \n    {\n        if(ls) Rev(ls);\n        if(rs) Rev(rs);\n        rev[x]=0;\n    }\n    if(lam[x]) \n    {\n        if(ls) sum[ls]=v[ls]=0,lam[ls]=1;\n        if(rs) sum[rs]=v[rs]=0,lam[rs]=1;\n        lam[x]=0;\n    }\n}\nvoid pdown(int x){if(in(x)) pdown(f[x]);down(x);}\nvoid rot(int x)\n{\n    int y=f[x],k=tp(x),w=t[x][!k];\n    t[f[w]=t[x][!k]=y][k]=w;\n    if(in(y)) t[f[y]][tp(y)]=x;\n    f[x]=f[y],f[y]=x,up(y);\n}\nvoid splay(int x)\n{\n    pdown(x);\n    for(int y=f[x];in(x);rot(x),y=f[x])\n        if(in(y)) rot(tp(x)^tp(y)?x:y);\n    up(x);\n}\nvoid access(int x)\n{\n    for(int y=0;x;x=f[y=x])\n        splay(x),rs=y,up(x);\n}\nvoid evert(int x){access(x);splay(x);Rev(x);}\nvoid split(int x,int y){evert(x);access(y);splay(x);}\nint groot(int x)\n{\n    access(x);splay(x);\n    while(ls) down(x),x=ls;\n    splay(x);return x;\n}\nbool link(int x,int y)\n{\n    evert(x);\n    if(groot(y)!=x) {f[x]=y;return true;}\n    return false;\n}\nvoid cut(int x,int y)\n{\n    evert(x);\n    if(groot(y)==x&&f[y]==x&&!t[y][0]) t[x][1]=f[y]=0;\n}\nint num;\nvoid dfs(int x)\n{\n    s[++head]=x;if(x<=n) num++;\n    down(x);\n    if(ls) dfs(ls);\n    if(rs) dfs(rs);\n}\nvoid add(int x,int y)\n{\n    if(x==y) return ;\n    if(link(x,y)) return ;\n    split(x,y);\n    num=head=0;dfs(x);\n    if(num==2) return ;\n    int nw=++tot;\n    while(head)\n    {\n        int z=s[head--];\n        f[z]=tot;t[z][0]=t[z][1]=0;\n        up(z);\n    }\n}\ninline const void decode(int &x)\n{\n\tx^=lst%n;\n\tif (x>n)x%=n;\n\tif (!x)x=1;\n}\nsigned main()\n{\n    scanf(\"%d%d\",&n,&m);tot=n;\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&op,&x,&y);\n        decode(x);decode(y);\n        if(op==1) add(x,y);\n        else if(op==2) splay(x),v[x]+=y,up(x);\n        else \n        {\n            if(groot(x)!=groot(y)) lst=0,printf(\"0\\n\");\n            else split(x,y),printf(\"%lld\\n\",lst=sum[x]),sum[x]=v[x]=0,lam[x]=1;\n        }\n    }\n}\n\n```\n",
        "postTime": 1679892529,
        "uid": 478885,
        "name": "lenlen",
        "ccfLevel": 6,
        "title": "P5622 [DBOI2019]\u5deb\u5973\u7684\u804c\u8d23 \u9898\u89e3"
    }
]