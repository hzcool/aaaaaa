[
    {
        "content": "\u849f\u84bb\u9898\u89e3\uff0c\u6709\u4ec0\u4e48\u95ee\u9898\u8bf7\u5927\u4f6c\u6307\u51fa\n\n### \u601d\u8def\n\u8fd9\u9898\u660e\u663e\u5c31\u662f\u5dee\u5206\n\n\u6839\u636e\u5dee\u5206\u6570\u7ec4\u7684\u5b9a\u4e49\uff1a``` d[i]=a[i]-a[i-1]```\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728```d[x]```\u4e0a\u52a0\u4e0a```z```,\u4f1a\u8ba9\u540e\u9762\u7684\u5b66\u751f\u5168\u90e8\u52a0\u4e0az\u3002\u2193\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/2prm1f96.png)\n\n\u4f46\u8fd9\u662f\u628a\u540e\u9762\u5168\u90e8\u90fd\u52a0\u4e86\uff0c\u8fd8\u8981\u51cf\u6389\u4e00\u8282\uff0c\u6240\u4ee5\u2193\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vpzmrk8l.png)\n\n\u628a\u4e24\u4e2a\u7efc\u5408\u8d77\u6765\u5c31\u662f\u2193\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/45xhj19v.png)\n\n\u6240\u4ee5\u6bcf\u4e00\u6b21\u53d8\u5316\u53ea\u8981\u628a```d[x]+z,d[y+1]-z```\u5c31\u597d\u4e86\u3002\n\n\u56e0\u4e3a``` d[i]=a[i]-a[i-1]```\n\n\u6240\u4ee5``` a[i-1]+d[i]=a[i]```\n\n\u6700\u540e\u518d\u6839\u636e``` a[i-1]+d[i]=a[i]```\u8f93\u51fa\u6bcf\u4e00\u4e2a\u540c\u5b66\u7684\u5206\u6570\n\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint d[5000001];//d[i]\u8868\u793aa[i]-a[i-1] \nint a[5000001];\nint main()\n{\n\tint n,p,x,y,z,i,min=1e9;\n\tcin>>n>>p;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i];\n\t}\n\t\n    for(i=1;i<=n;i++)\n\t{\n\t\td[i]=a[i]-a[i-1];\n\t}\n\tfor(i=0;i<p;i++)\n\t{\n\t\tcin>>x>>y>>z;\n\t\td[x]+=z;\n\t\td[y+1]-=z;\n\t}\n\t\n\tfor(i=1;i<=n;i++)\n\t{\n\t\ta[i]=a[i-1]+d[i];\n\t\tif(min>a[i])\n\t\t{\n\t\t\tmin=a[i];\n\t\t}\n\t}\n\tcout<<min;\n\treturn 0;\n} \n```\n",
        "postTime": 1578461434,
        "uid": 156353,
        "name": "Big_Caibi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2367 \u3010\u8bed\u6587\u6210\u7ee9\u3011"
    },
    {
        "content": "\u533a\u95f4\u4fee\u6539\uff1f\u4e4d\u4e00\u770b\u4f3c\u4e4e\u8981\u7528\u7ebf\u6bb5\u6811\u624d\u80fd\u89e3\u51b3\u3002\u4e0d\u8fc7\u8bfb\u5b8c\u9898\u76ee\uff0c\u5c31\u4f1a\u53d1\u73b0\u53ea\u9700\u8981\u5728\u6700\u540e\u6c42\u51fa\u6700\u5c0f\u503c\uff0c\u5e76\u4e0d\u9700\u8981\u7ebf\u6bb5\u6811\u8fd9\u6837\u7684\u5728\u7ebf\u7b97\u6cd5\u3002\n\n\u4e8e\u662f\u81ea\u7136\u800c\u7136\u60f3\u5230\u5dee\u5206\u4e86\uff08\u672c\u849f\u84bb\u4e5f\u4e0d\u4f1a\u5199\u7ebf\u6bb5\u6811\u90a3\u4e48\u590d\u6742\u7684\u4ee3\u7801\uff09\uff0c\u8fd9\u6837\u53ea\u9700\u8981 $O(n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u9053\u9898\u4e86\u3002\n\nPS\uff1a\u5176\u5b9e\u4eca\u5929\u65e9\u4e0a\u6625\u4ee4\u8425\u4e0a\u8bfe\u5c31\u8bb2\u4e86\u5dee\u5206\uff0c\u6240\u4ee5\u8fd9\u9053\u9898\u7b97\u662f\u5b66\u4ee5\u81f4\u7528\u4e86\u5427\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nint a[5000005],diff[5000005],n,p,mina;\nint main()\n{\n scanf(\"%d%d\",&n,&p);\n for(int i=1;i<=n;i++)\n {\n  scanf(\"%d\",&a[i]);\n  diff[i]=a[i]-a[i-1];\n }\n for(int i=1;i<=p;i++)\n {\n  int x,y,z;\n  scanf(\"%d%d%d\",&x,&y,&z);\n  diff[x]+=z;\n  diff[y+1]-=z;\n }\n mina=diff[1];\n for(int i=1;i<=n;i++)\n {\n  a[i]=a[i-1]+diff[i];\n  mina=min(a[i],mina);\n }\n printf(\"%d\",mina);\n return 0;\n}\n```",
        "postTime": 1518187120,
        "uid": 22030,
        "name": "StudyingFather",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2367 \u3010\u8bed\u6587\u6210\u7ee9\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u5e76\u4e0d\u7528\u7ebf\u6bb5\u6811\uff0c\u7528\u5dee\u5206\u5e8f\u5217\u53ef\u4ee5\u66f4\u5feb\u7684\u89e3\u51b3\uff0c\u4e5f\u4e0d\u9700\u8981\u62c5\u5fc3\u7206\u7a7a\u95f4\u3002\u4e0b\u9762\u4e0a\u4ee3\u7801\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n,q,d[5000005]={0},a,minn,x,y,z;\nint main()\n{\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&d[i]);\n\tfor(int i=n;i>1;i--)d[i]-=d[i-1];\n\twhile(q--)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\td[x]+=z;d[y+1]-=z;\n\t}\n\tminn=d[1];\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\td[i]+=d[i-1];if(d[i]<minn)minn=d[i];\n\t}\n\tcout<<minn;\n\treturn 0;\n}\n```  ",
        "postTime": 1536067746,
        "uid": 84645,
        "name": "_WMD",
        "ccfLevel": 0,
        "title": "P2367\u9898\u89e3"
    },
    {
        "content": "\u9898\u89e3\u91cc\u6ca1\u6709\u5206\u5757\uff1f\u8fd9\u600e\u4e48\u80fd\u884c\u3002\n\n\u4e00\u9053**\u5206\u5757**\u7684\u88f8\u9898\u3002\n\n\u7531\u4e8e\u6570\u636e\u6bd4\u8f83\u5927\uff0c\u5438\u4e86\u6c27\u3002\n\n\u6700\u6162\u7684\u6570\u636e\u70b9 471ms\u3002\u4f7f\u7528 [OI Wiki](https://oi-wiki.org/misc/io/) \u4e0a\u7684 `fread` \u548c `fwrite` \u4f18\u5316\u540e\u53ef\u4ee5\u5230 454ms\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u7528\u5206\u5757\u5462\uff1f\u56e0\u4e3a\u6211\u559c\u6b22\u3002\n\n\u5982\u679c\u4f60\u8fd8\u4e0d\u4f1a\u5206\u5757\uff0c\u90a3\u6211\u5c31\u5c06\u5927\u6982\u601d\u8def\u8bb2\u4e00\u4e0b\u3002\n\n\u5206\u5757\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5c06\u6574\u4e2a\u5e8f\u5217\u5206\u6210\u82e5\u5e72\u4e2a\u5757\u3002\u6211\u4eec\u8981\u5148\u9884\u5904\u7406\u6bcf\u4e2a\u70b9\u5728\u54ea\u4e00\u4e2a\u5757\u5185\u3002\u5bf9\u4e8e\u4e0d\u5728\u6574\u5757\u4e2d\u7684\u70b9\uff0c\u8fdb\u884c\u66b4\u529b\u4fee\u6539\u3002\u5bf9\u4e8e\u5728\u6574\u5757\u4e2d\u7684\u70b9\uff0c\u76f4\u63a5\u5bf9\u5757\u8fdb\u884c\u4fee\u6539\u3002\u6700\u540e\u6bcf\u4e2a\u5143\u7d20\u7684\u503c\u5373\u4e3a\u5728\u539f\u5e8f\u5217\u4e0a\u8fd9\u4e2a\u5143\u7d20\u8fdb\u884c\u66b4\u529b\u4fee\u6539\u6700\u540e\u5f97\u5230\u7684\u503c\u52a0\u4e0a\u5b83\u6240\u5728\u6574\u5757\u4fee\u6539\u7684\u503c\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5757\u7684\u957f\u5ea6\u90fd\u4e3a $\\sqrt n$\uff0c$n$ \u4e3a\u5e8f\u5217\u957f\u5ea6\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#include <cctype>\n\n#define reg register\n\ntemplate <class T>\ninline void read(T &x)\n{\n    x = 0;\n    int f = 0;\n    char ch = getchar();\n    while (!isdigit(ch))    { f |= ch == '-'; ch = getchar(); }\n    while (isdigit(ch))     { x = (x << 1) + (x << 3) + (ch ^ 48); ch = getchar(); }\n    x = f ? -x : x;\n    return;\n}\n\nint a[5000010], add[2510], pos[5000010];\nint n, p, len, ans = 0x3f3f3f3f;\n\nvoid update(int l, int r, int c)\n{\n    for (reg int i = l; i <= std::min(pos[l] * len, r); ++i)\n        a[i] += c;\n    if (pos[l] != pos[r])\n        for (reg int i = (pos[r] - 1) * len + 1; i <= r; ++i)\n            a[i] += c;\n    for (reg int i = pos[l] + 1; i <= pos[r] - 1; ++i)\n        add[i] += c;\n}\n\nint main()\n{\n    read(n), read(p);\n    for (reg int i = 1; i <= n; ++i)\n        read(a[i]);\n    len = sqrt(n);\n    for (reg int i = 1; i <= n; ++i)\n        pos[i] = (i - 1) / len + 1;\n    for (reg int i = 1; i <= p; ++i)\n    {\n        int x, y, z;\n        read(x), read(y), read(z);\n        update(x, y, z);\n    }\n    for (reg int i = 1; i <= n; ++i)\n        ans = std::min(ans, a[i] + add[pos[i]]);\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n\n```",
        "postTime": 1578734578,
        "uid": 124152,
        "name": "AmamiyaYuuko",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2367 \u3010\u8bed\u6587\u6210\u7ee9\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u8f93\u5165\u89c4\u6a21\u975e\u5e38\u5927\uff0c\u8001\u5e08\u80af\u5b9a\u7d2f\u57ae\u4e86\u3002\n\n\u53ef\u4ee5\u666e\u53ca\u4e00\u4e0b fread\u3002\u6211\u4e4b\u524d\u6ca1\u5b66\uff0c\u89c9\u5f97\u5b83\u4e00\u5b9a\u5f88\u590d\u6742\uff0c\u5176\u5b9e\u5b83\u975e\u5e38\u5355\u7eaf\u3002\n\n## \u666e\u901a\u5feb\u8bfb\n\n\u6709\u8fd9\u6837\u7684\u65b9\u6cd5\uff0c\u7528\u5b83\u8bfb\u5165\u6574\u6570\u6bd4 scanf \u5feb\uff0c\u5e2e\u4f60\u7701\u4e0b\u65f6\u95f4\u3002\n\n\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u5982\u679c\u662f\u4e0d\u662f\u6570\u5b57\u5c31\u7ee7\u7eed\u8bfb\u5165\u3002\n\n\u8bfb\u5230\u4e00\u4e2a\u6570\u5b57\uff1f\u5f00\u59cb\u5904\u7406\uff1a\n\n```cpp\nwhile(isdigit(ch))//\u5224\u65ad\u662f\u4e0d\u662f\u6570\u5b57\u5b57\u7b26\uff0c\u6b64\u51fd\u6570\u5728\u5934\u6587\u4ef6<cctype>\u4e2d\n\tresult = result * 10 + (ch - '0'), ch = getchar();\n```\n\n\u6bd4\u5982\u8bfb\u5165\u6570\u5b57 408\uff0c\u5206\u6210\u51e0\u4e2a\u5b57\u7b26\u8bfb\u5165\uff1a\n\n  * \u53d1\u73b0\u8bfb\u5165 4\uff0c\u8bb0\u5f55 4(\u53d8\u91cf result)\uff0c\u8bfb\u4e0b\u4e00\u4e2a\u5b57\u7b26\u3002\n\n  * \u53d1\u73b0\u8bfb\u5165 0\uff0c\u5148\u628a\u4e4b\u524d\u7684\u8bb0\u5f55\u4e58\u4ee5 10\uff0c\u7136\u540e\u52a0\u4e0a 0\u3002\u73b0\u5728\u8bb0\u5f55\u4e86 40\uff0c\u8bfb\u4e0b\u4e00\u4e2a\u5b57\u7b26\u3002\n\n  * \u53d1\u73b0\u8bfb\u5165 8\uff0c\u5148\u628a\u4e4b\u524d\u7684\u8bb0\u5f55\u4e58\u4ee5 10\uff0c\u7136\u540e\u52a0\u4e0a 8\u3002\u73b0\u5728\u8bb0\u5f55\u4e86 408\uff0c\u8bfb\u4e0b\u4e00\u4e2a\u5b57\u7b26\u3002\n\n  * \u53d1\u73b0\u8bfb\u5230\u7a7a\u683c\u3001\u6362\u884c\u7b26\uff08\u6807\u51c6\u7684\u6570\u5b57\u95f4\u9694\u7b26\uff09\u6216\u8005 EOF\uff08\u8bfb\u4e0d\u5230\u4e1c\u897f\uff09\uff0c\u5c31\u53ef\u4ee5\u8fd4\u56de\u7ed3\u679c\uff1a408\u3002\n  \n*\u5c0f\u63d0\u793a\uff1a\u6570\u5b57\u5b57\u7b26\u8981\u8f6c\u53d8\u4e3a\u6570\u5b57\uff0c\u5373\u51cf\u53bb\u5b57\u7b26 '0'\uff08ASCII\u7801\u662f 48\uff09\u3002*\n  \n  \n```cpp\nint getint()//\u540d\u5b57\u4eff\u7167\u4e86getchar()\n{\n    int res = 0;\n    char ch = getchar();\n    while(!isdigit(ch))\n        ch = getchar();\n    while(isdigit(ch))\n        res = res * 10 + (ch - '0'), ch = getchar();\n    return res;\n}\n```\n\n## \u7528 fread \u4f18\u5316\n\n*\u53ea\u662f\u4f18\u5316\u4e86\u4e0a\u9762\u7684 getchar()\uff0c\u56e0\u4e3a getchar() \u6709\u70b9\u6162\u3002*\n\n* fread \u7684\u7528\u5904\u662f**\u5feb\u901f\u5730\u8bfb\u5165\u4e00\u5927\u5806\u5b57\u7b26\u8fdb\u6765\uff0c\u4fbf\u4e8e\u4f60\u5229\u7528\u8fd9\u4e9b\u5b57\u7b26**\u3002\u4f60\u80af\u5b9a\u77e5\u9053\u8fd9\u4e2a\uff1a\n\n  ```cpp\n  scanf(\"%s\", a+1);//\u4e3a\u4e86\u9996\u4e2a\u5b57\u7b26\u7684\u4e0b\u6807\u662f1\uff08\u4fbf\u4e8e\u7406\u89e3\uff09\uff0c\u6240\u4ee5\u8bfb\u8fdba+1\n  //scanf\u9047\u5230\u7a7a\u683c\u3001\u6362\u884c\u7b26\u5c31\u7ed3\u675f\u4e86\n  ```\n\n  \u90a3\u4e48\u4f60\u80fd\u7406\u89e3\uff1a\n\n  ```cpp\n  fread(tmp+1, 1, 1000000, stdin);\n  ```\n\n  \u8fc5\u901f\u8bfb\u5165 1000000 \u4e2a\u5b57\u7b26\u5230 tmp \u6570\u7ec4\u3002**\u5982\u679c\u6ca1\u6709 1000000 \u4e2a\u4e5f\u4e0d\u4f1a\u51fa\u9519\u3002**\u5176\u4e2d\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f 1\uff1a\u56e0\u4e3a fread \u662f\u4e00\u5757\u5757\u5730\u8bfb\u5165\u6570\u636e\u7684\uff0c\u8fd9\u91cc\u6bcf\u5757\u5927\u5c0f\u5b9a\u4e3a 1 \u5b57\u8282\u3002\n\n* \u4e00\u6b21 fread() \u4ee5\u540e\uff0c\u4f60\u7684 getchar() \u53ef\u4ee5\u6362\u6210\uff1a\n\n  ```cpp\n  char getch(){\n      return tmp[++cnt];\n  }\n  ```\n\n**\u53ea\u8981\u5728\u539f\u6765\u7684\u5feb\u8bfb\u91cc\u9762\u628a getchar() \u66ff\u6362\u6210 getch()\uff0c\u5c31\u5feb\u4e86\u8bb8\u591a\u4e86\uff01**\n\nfread \u8bb2\u5b8c\u4e86\u3002\n\n## \u7ec6\u8282\n\n* \u4e3a\u4e86\u4fdd\u8bc1 fread \u80fd\u8bfb\u5165\u591a\u4e8e 1000000 \u4e2a\u5b57\u7b26\uff0c**\u540c\u65f6 tmp \u6570\u7ec4\u5360\u7528\u7684\u7a7a\u95f4\u4e5f\u4e0d\u80fd\u592a\u5927**\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u4fee\u6539 getch() \uff1a\n\n  ```cpp\n  char tmp[1000010];\n  int cnt = 0, Max = 0;//\u4e24\u4e2a\u521d\u503c\u90fd\u662f0\uff0c\u4f7f\u7b2c\u4e00\u6b21getch()\u4e00\u5b9a\u4f1a\u8c03\u7528fread()\n  char getch()\n  {\n      ++cnt;\n      if(cnt > Max)\n      {\n          cnt = 1;\n          Max = fread(tmp+1, 1, 1000000, stdin);\n      }\n      return tmp[cnt];\n  }\n  ```\n  \n  fread() \u4f1a\u8fd4\u56de\u6210\u529f\u8bfb\u5165\u7684\u4e2a\u6570\uff0c\u7528 Max \u8bb0\u5f55\u672c\u6b21\u8bfb\u5165\u4e86\u51e0\u4e2a\uff08\u8fd9\u91cc\u9650\u5236\u4e00\u6b21\u6700\u591a 1000000 \u4e2a\uff09\uff0c\u5982\u679c cnt \u5927\u4e8e Max \u4e86\uff0c\u5c31\u81ea\u52a8\u518d\u6b21 fread() 1000000 \u4e2a\u5b57\u7b26\u3002\n    \n\u66f4\u591a\u7ec6\u8282\uff0c\u5982 getint() \u5224\u65ad\u8d1f\u6570\u3001fread() \u6307\u9488\u5199\u6cd5\u4ee5\u53ca\u5feb\u901f\u8f93\u51fa fwrite()\uff0c\u611f\u5174\u8da3\u53ef\u770b\u770b[\u5feb\u8bfb\u6709\u591a\u96be\uff1f](https://cicos.blog.luogu.org/grammar-readAndWrite)\n    \n## \u539f\u9898\n\n\u5148\u4e0d\u770b\u9898\u76ee\u3002\n\n\u6709\u4e00\u4e2a\u6982\u5ff5\u53eb\u505a\u524d\u7f00\u548c\u3002\u73b0\u5728\u6709\u4e00\u4e2a\u6570\u7ec4 t\uff0c\u91cc\u9762\u90fd\u662f 0\u3002\u7136\u540e\uff0c\u6211\u4eec\u7528 sum[i] \u8868\u793a t \u6570\u7ec4\u524d i \u4f4d\u7684\u548c\u3002\n\n* \u5982\u679c t[4] \u52a0\u4e0a 2\uff0csum \u6570\u7ec4\u8981\u53d1\u751f\u4ec0\u4e48\u53d8\u5316?\n\n\t**sum[4] ~ sum[n] \u6bcf\u4e00\u4f4d\u90fd\u8981\u52a0 2\u3002sum[1] ~ sum[3] \u4e0d\u53d8\u3002** \n\n* \u5982\u679c\u5728 t[9] \u51cf\u53bb 2\uff0csum \u6570\u7ec4\u53d1\u751f\u4ec0\u4e48\u53d8\u5316?\n\t\n\t**sum[9] ~ sum[n] \u6bcf\u4e00\u4f4d\u90fd\u8981\u51cf 2\u3002**\n  \n* \u4f9d\u6b21\u8fdb\u884c\u4e0a\u9762\u4e24\u6b65\u64cd\u4f5c\u4ee5\u540e\uff0csum \u6570\u7ec4\u8981\u53d1\u751f\u4ec0\u4e48\u53d8\u5316?\n\n\t**\u53ea\u6709 sum[4] ~ sum[8] \u589e\u52a0 2\uff0c\u5176\u4f59\u4e0d\u53d8\u3002**\n    \n\u5982\u679c t[l] \u589e\u52a0 x\uff0ct[r+1] \u51cf\u53bb x\uff0c\u90a3\u4e48 sum[l] ~ sum[r] \u90fd\u589e\u52a0 x\u3002\n___\n\n\u5927\u91cf\u7684\u533a\u95f4\u52a0\uff0c\u6700\u540e\u8be2\u95ee\u6240\u6709\u6570\u4e2d\u7684\u6700\u5c0f\u503c\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a t \u6570\u7ec4\uff0c\u82e5\u4fee\u6539\u5b66\u751f x ~ y \u90fd\u52a0 z\uff0c\u5c31\u53ea\u5728 t \u6570\u7ec4\u4e0a\u8fdb\u884c\u4e24\u4e2a\u64cd\u4f5c\uff1at[x] \u52a0\u4e0a z\uff0ct[y+1] \u51cf\u53bb z\u3002\u4f60\u53ef\u4ee5\u8111\u8865\u51fa**\u6b64\u65f6\u6709\u4e00\u4e2a sum \u6570\u7ec4\uff0c\u662f t \u7684\u524d\u7f00\u548c\uff0csum[i] \u80fd\u6b63\u786e\u8868\u793a\u7b2c i \u4e2a\u5b66\u751f\u88ab\u4fee\u6539\u4e86\u591a\u5c11\u3002**\u4f46\u662f\u4e0d\u8981\u6bcf\u6b21\u4fee\u6539 sum \u6570\u7ec4\uff0c\u800c\u662f\u4fee\u6539\u4ee5 t \u6570\u7ec4\u4ee3\u66ff\u3002\n\n\u6700\u540e\u4ece\u5de6\u5230\u53f3\u6c42\u4e00\u6b21 t \u7684\u524d\u7f00\u548c\uff0c\u8fd8\u539f\u51fa sum \u6570\u7ec4\uff0c\u52a0\u5230\u7b2c i  \u4f4d\u65f6\u7684 sum \u5c31\u80fd\u8868\u793a\u51fa\u8fd9\u4e2a\u5b66\u751f\u88ab\u4fee\u6539\u7684\u91cf\u3002\u522b\u5fd8\u4e86\u52a0\u4e0a\u521d\u59cb\u6210\u7ee9\uff0c\u53d6\u6700\u5c0f\u3002 \n\nt \u53eb\u505a sum \u7684\u5dee\u5206\u6570\u7ec4\u3002t \u7684\u524d\u7f00\u548c\u5c31\u662f sum\u3002\n\n```cpp\n#include <cstdio>\n#include <cctype>\nchar tmp[1000010];\nint cnt = 0, Max = 0;\nchar getch()\n{\n    ++cnt;\n    if(cnt > Max)\n    {\n        cnt = 1;\n        Max = fread(tmp+1, 1, 1000000, stdin);\n    }\n    return tmp[cnt];\n}\nint getint()\n{\n    int res = 0;\n    char ch = getch();\n    while(!isdigit(ch))\n        ch = getch();\n    while(isdigit(ch))\n        res = res * 10 + (ch - '0'), ch = getch();\n    return res;\n}\n\nint n, p;\nint a[5000010], b[5000010];\nint main()\n{\n    n = getint(), p = getint();\n    for(int i = 1; i <= n; i++)\n        a[i] = getint();\n    for(int i = 1; i <= p; i++)\n    {\n        int x = getint(), y = getint(), z = getint();\n        b[x] += z;\n        b[y+1] -= z;\n    }\n    \n    int sum = 0, ans = 1000000000;\n    for(int i = 1; i <= n; i++)\n    {\n        sum += b[i];\n        if(a[i] + sum < ans)\n            ans = a[i] + sum;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1540551192,
        "uid": 49474,
        "name": "\u5b66\u59d4",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2367 \u3010\u8bed\u6587\u6210\u7ee9\u3011"
    },
    {
        "content": "##.\n\u8fd9\u9053\u9898\u4e00\u5f00\u59cb\u770b\u5230\u533a\u95f4\u7d2f\u548c\u7684\u7b2c\u4e00\u53cd\u5e94\u5c31\u662f\u7528**\u7ebf\u6bb5\u6811**\uff0c\u4f46\u662f\u4ed4\u7ec6\u8bfb\u9898\u4e4b\u540e\u4f1a\u60ca\u8bb6\u7684\u53d1\u73b0\uff0c\u5b83\u4ec0\u4e48\u64cd\u4f5c\u90fd\u6ca1\u6709\uff0c\u4ec5\u4ec5\u53ea\u6709\u533a\u95f4\u7d2f\u548c\u3002\u3002\u6211\u4eec\u9700\u8981\u7684\u4e5f\u53ea\u662f\u90a3\u4e2a**lazy\u64cd\u4f5c**\u7f62\u4e86\u3002\u5f53\u65f6\u5c31\u6709\u653e\u5f03\u7684\u6b32\u671b\uff0c\u4f46\u770b\u5230\u9898\u89e3\u91cc\u6ca1\u4eba\u6253\u7ebf\u6bb5\u6811\uff0c\u4e8e\u662f\u6211\u5c31\u8d70\u4e0a\u8fd9\u6761~~\u4e0d\u5f52\u8def~~\u3002\u5f53\u81ea\u4fe1\u7684\u6253\u5b8c\u540e\uff0c\u60ca\u5947\u7684\u53d1\u73b0\u4f1aMLE\u3002\u4e8e\u662f\uff0c\u6211\u4fbf\u60f3\u4e86\u5404\u79cd\u64cd\u4f5c\uff0c\u6700\u7ec8\u88ab\u6211\u7528\u4e00\u4e2a~~\u7279\u611a\u8822\u7684\u9a9a\u64cd\u4f5c~~\u6c34\u8fc7\u53bb\u4e86\u3002\n\n##.\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<map>\n#include<queue>\n#define N 5000010\n#define Mid ((l+r)>>1)\n#define lson rt<<1,l,Mid\n#define rson rt<<1|1,Mid+1,r\nusing namespace std;\ninline void read(int &x)\n{\n    x=0;\n    int p=1;\n    char c=getchar();\n    while(!isdigit(c)){if(c=='-')p=-1;c=getchar();}\n    while(isdigit(c)) {x=(x<<1)+(x<<3)+(c^'0');c=getchar();}\n    x*=p;\n}\nint n,p;\nint a[N];\nint lazy[N<<2];\nint minn=0x7f7f7f7f;\nvoid pushdown(int rt,int len)\n{\n    if(lazy[rt]!=0)\n    {\n        lazy[rt<<1]+=lazy[rt];\n        lazy[rt<<1|1]+=lazy[rt];\n        lazy[rt]=0;\n    }\n}\nvoid build(int rt,int l,int r)\n{\n    if(l==r)\n    {\n        int x;read(x);\n        a[l]=x;//\u79c0\u64cd\u4f5c\u7684\u795e\u5947\u65b9\u6cd5\uff0c\u4e00\u822c\u662fa[rt]\uff0c\u4f46\u8003\u8651\u5230\u672c\u9898\u548ca\u6ca1\u4efb\u4f55\u5173\u7cfb\uff0c\u4e8e\u662f\u6839\u672c\u4e0d\u9700\u8981\u5f004\u500d\u7a7a\u95f4\n        return;\n    }\n    else\n    {\n        build(lson);\n        build(rson);\n    }\n}\nvoid update(int rt,int l,int r,int L,int R,int val)\n{\n    if(L<=l&&r<=R)\n    {\n        lazy[rt]+=val;\n        return;\n    }\n    else\n    {\n        pushdown(rt,r-l+1);\n        if(L<=Mid)update(lson,L,R,val);\n        if(R>Mid)update(rson,L,R,val);\n    }\n}\nvoid query(int rt,int l,int r)\n{\n    if(l==r)\n    {\n        a[l]+=lazy[rt];\n        minn=min(minn,a[l]);\n        return ;\n    }\n    else\n    {\n        pushdown(rt,r-l+1);\n        query(lson);\n        query(rson);\n    }\n}\nint main()\n{\n    read(n);read(p);\n    build(1,1,n);\n    for(int i=1;i<=p;i++)\n    {\n        int x,y,z;\n        read(x);read(y);read(z);\n        update(1,1,n,x,y,z);\n    }\n    query(1,1,n);\n    printf(\"%d\\n\",minn);\n    return 0;\n}\n```",
        "postTime": 1508324848,
        "uid": 22016,
        "name": "pengym",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2367 \u3010\u8bed\u6587\u6210\u7ee9\u3011"
    },
    {
        "content": "~~\u524d\u60c5\u63d0\u8981 \u8fd9\u7bc7\u9898\u89e3\u662f\u9762\u5bf9\u4ece\u672a\u63a5\u89e6\u8fc7\u5dee\u5206\u7684\u4eba\u5199\u7684 \u5acc\u5570\u55e6\u7684\u76f4\u63a5\u770b\u697c\u4e0a\u6216\u8005\u697c\u4e0b\u54c8~~\n\n\u8c03\u5dee\u5206\u8c03\u4e86\u4e00\u4e2a\u534a\u5c0f\u65f6\u7801\u529b\u6781\u5f31\u7684OIer\u6765\u6c34\u4e00\u53d1\u9898\u89e3......\n\n[\u6765\u81eaOI-Wiki\u7684\u5dee\u5206\u4ecb\u7ecd](https://oi-wiki.org/basic/prefix-sum/#_8)\n\n\u5dee\u5206\u57fa\u672c\u601d\u60f3\uff1a\u4ee4b[i]=a[i]-a[i-1]\n\nb[i]\u7684\u542b\u4e49\u4e3aa[i]\u4e0ea[i-1]\u7684\u5dee\u503c\n\n\u8fd9\u4e2a\u4e1c\u897f\u6613\u4e8e\u5728O(1)\u5185\u7ef4\u62a4\u533a\u95f4\u5185\u6240\u6709\u7684\u6570\u52a0\u51cf\u4e58\u9664\u4e00\u4e2a\u503c\n\n\u5b9e\u4f8b\uff1a\u5c06a\u6570\u7ec4\u4e2d[l,r]\u533a\u95f4\u5185\u7684\u6570\u5b57\u5168\u90e8\u52a0k\n\n\u8bbeb\u6570\u7ec4\u5b58\u50a8\u5dee\u5206\u4fe1\u606f\uff0c\u5219\u6613\u5f97 \u5c06b[l]\u52a0\u4e0ak\uff0c\u7136\u540e\u518d\u5c06b[r+1]\u51cf\u53bbk\u5373\u4e3a\u60f3\u8981\u7684\u7ed3\u679c\n\nQ&A\n\nQ1:\u4e3a\u4ec0\u4e48\u662fb[l]?\n\nA1:a[l]\u52a0k\uff0c\u5219a[l]\u4e0ea[l-1]\u7684\u5dee\u589e\u52a0k\n\nQ2:\u90a3\u4e3a\u4ec0\u4e48\u662fb[r+1]?\n\nA2:a[r]\u52a0k\uff0c\u5219a[r]\u4e0ea[r+1]\u7684\u5dee\u51cf\u5c0fk\u3002\u6ce8\u610f\uff01\u6b64\u65f6\u64cd\u4f5c\u7684\u5e94\u8be5\u662fb[r+1]\u800c\u4e0d\u662fb[r]\u3002\n\nQ3:\u4e3a\u4ec0\u4e48b[l+1,r]\u4e0d\u7528\u66f4\u6539\uff1f\n\nA3:\u4e00\u8d77\u589e\u52a0k\uff0c\u4ed6\u4eec\u4e4b\u95f4\u7684\u5dee\u503c\u4e0d\u53d8\n\n~~\u6211\u662f\u4e0d\u4f1a\u544a\u8bc9\u4f60\u4eec\u6211\u8c03Q2\u8c03\u4e86\u534a\u4e2a\u5c0f\u65f6~~\n\n\u5e76\u4e14\u6bd4\u7ebf\u6bb5\u6811\u7b80\u5355 ~~\u7ebf\u6bb5\u6811\u662f\u8fd9\u4e48\u7528\u7684\u5427\u6211\u8fd8\u6ca1\u5b66\u6211\u5514\u77e5\u554a~~\n\n\u6700\u540e\u8f93\u51fa\u53ea\u8981\u4ece\u5934\u5230\u5c3e\u505a\u4e00\u904d\u524d\u7f00\u548c\u5c31\u53ef\u4ee5\u4e86\n\n\u6700\u540e\u662f\u4f60\u4eec\u6700\u559c\u6b22\u7684\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#define N 5000005\nusing namespace std;\nint a[N],b[N];\ninline int minx(int a,int b){return a<b?a:b;}\ninline int read() //\u8bfb\u5165\u4f18\u5316\n{\n\tint x=0,k=1;char c=getchar();\n\twhile (c<'0'||c>'9'){if (c=='-') k=-1;c=getchar();}\n\twhile (c>='0'&&c<='9'){x=(x<<3)+(x<<1)+(c^48);c=getchar();}\n\treturn x*k;\n}\nint main()\n{\n\tint n,m,test=0,minn=0x7f7f7f7f;\n\tn=read();m=read();\n\tfor (int i=1;i<=n;i++) a[i]=read(),b[i]=a[i]-a[i-1];\n\tfor (int i=1,x,y,z;i<=m;i++)\n\t{//\u6b64\u5904\u4e3a\u5dee\u5206\u64cd\u4f5c\n\t\tx=read();y=read();z=read();\n\t\tb[x]+=z;b[y+1]-=z;\n\t}\n\tfor (int i=1;i<=n;i++) minn=minx(minn,test+b[i]),test+=b[i];\n  //\u524d\u7f00\u548c\u627e\u6700\u5c0f\u503c\n\tcout<<minn;\n\treturn 0;\n}\n```\n",
        "postTime": 1577689055,
        "uid": 51568,
        "name": "TPR123456",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2367 \u3010\u8bed\u6587\u6210\u7ee9\u3011"
    },
    {
        "content": "\u8fd9\u9898\uff0c\u7b2c\u4e00\u773c\uff1a\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u6700\u5c0f\u503c\u3002\u8fd9\u4e0d\u662f\u7ebf\u6bb5\u6811\u88f8\u9898\u5417\uff1f\n\n\u770b\u6570\u636e\u8303\u56f4 $n\\le5000000$.\u5f00\u4e86\u4e2atr\u7ef4\u62a4\u6700\u5c0f\u503c\uff0claz\u7ef4\u62a4\u52a0\n\n\u7136\u540e\u4e00\u7b97\u7a7a\u95f4\u5927\u6982\u662f$152$MB\uff0c\u5b8c\u4e86,$MLE$\u3002\n\n\u6362\u65b9\u6cd5\u5427\uff0c\u4f46\u662f\u6211\u5c31\u60f3\u5199\u7ebf\u6bb5\u6811\uff0c\u5c31\u662f\u5199\u7ebf\u6bb5\u6811\u624d\u80fd\u4f7f\u6211\u5feb\u4e50\uff0c\u6211\u5c31\u6539\u53d8\u7b56\u7565\n\n\u672c\u6765\u76f4\u63a5\u8f93\u51fa$tr[1]$\uff0c\u6211\u73b0\u5728\u5220\u6389$laz$\uff0c\u8ba9$tr$\u7ef4\u62a4\u52a0\uff0c\u8bbf\u95ee\u7684\u65f6\u5019\u5c31\u8bbf\u95ee\u6bcf\u4e2a\u53f6\u5b50\n\n\u7ed3\u70b9\uff0c\u5e76\u4e14\u4e00\u8def\u4e0b\u653e\uff0c\u539f\u6765\u7684\u503c\u7528\u4e00\u4e2an\u5927\u5c0f\u7684\u6570\u7ec4\u7ef4\u62a4\uff0c\u53f6\u5b50\u7ed3\u70b9\u7684\u503c\u5c31\u662f\n\n$tr[k]+a[l]$ \u8fd9\u4e0d\u5c31\u89e3\u51b3\u7a7a\u95f4\u95ee\u9898\u4e86\u4e48,\u7136\u540e\u53ea\u5199\u4e2a$change$\uff0c$down$\u548c$ask$\u4e0d\u5c31\u5b8c\u4e86\n\n\u4ee3\u7801\uff0c\u6700\u6162\u7684\u4e5f\u624d$424ms$\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define lson k<<1,l,mid\n#define rson k<<1|1,mid+1,r\n#define ls k<<1\n#define rs k<<1|1\n#define mid ((l+r)>>1)\nusing namespace std;\nconst int maxn=5000005;\nint n,m,a[maxn];\nint tr[maxn<<2];\ninline int read(){\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){s=s*10+ch-'0';ch=getchar();}\n\treturn s*w;\n}\ninline void down(int k){\n\ttr[ls]+=tr[k];tr[rs]+=tr[k];\n}\nvoid change(int k,int l,int r,int x,int y,int val){\n\tif(l==x&&y==r){\n\t\ttr[k]+=val;\n\t\treturn ;\n\t}\n\tif(y<=mid)change(lson,x,y,val);\n\telse if(x>mid)change(rson,x,y,val);\n\telse change(lson,x,mid,val),change(rson,mid+1,y,val);\n}\nint ask(int k,int l,int r){\n\tif(l==r){\n\t\treturn a[l]+tr[k]; \n\t}\n\tif(tr[k])down(k);\n\treturn min(ask(lson),ask(rson));\n}\nint main(){\n\tn=read();m=read();\n\tfor(int i=1;i<=n;++i)\n\t\ta[i]=read();\n\tint x,y,z;\n\twhile(m--){\n\t\tx=read();y=read();z=read();\n\t\tchange(1,1,n,x,y,z);\n\t}\n\tprintf(\"%d\",ask(1,1,n));\n\treturn 0;\n}\n```\n",
        "postTime": 1568985858,
        "uid": 151768,
        "name": "\u6d41\u901d\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2367 \u3010\u8bed\u6587\u6210\u7ee9\u3011"
    },
    {
        "content": "\u7ecf\u5178\u7684\u6811\u72b6\u6570\u7ec4\u3002\n\n\u6811\u72b6\u6570\u7ec4\u4e00\u822c\u662f\u7528\u4e8e\u67e5\u8be2\u4e24\u4f4d\u4e4b\u95f4\u6240\u6709\u5143\u7d20\u7684\u548c\uff0c\u4f46\u662f\u8fd9\u65f6\u53ea\u80fd\u4fee\u6539\u4e00\u4e2a\u70b9\u3002\u6539\u4e00\u6539\u53ef\u4ee5\u8fdb\u884c\u8303\u56f4\u4fee\u6539\uff0c\u4f46\u53ea\u80fd\u67e5\u8be2\u4e00\u4e2a\u70b9\u3002\n\n\u8fd9\u9053\u9898\u7b26\u5408\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002\n\n\u8fd9\u9898\u53ef\u4ee5\u7b80\u5316\u4e3a\u5c06\u533a\u95f4[x,y]\u91cc\u7684\u6bcf\u4e2a\u70b9\u52a0z\uff0c\u6700\u540e\u627e\u51fa\u6574\u4e2a\u6570\u7ec4\u4e2d\u503c\u6700\u5c0f\u7684\u4e00\u4e2a\u70b9\u3002\n\n\u4e0d\u4f1a\u7528\u6811\u72b6\u6570\u7ec4\u7684\u53ef\u4ee5\u53c2\u8003P3368 \u3010\u6a21\u677f\u3011\u6811\u72b6\u6570\u7ec4 2\uff0c\u548c\u8fd9\u9898\u5f88\u50cf\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,i,x,y,ans,tree[5000000],m,pre,a,k;\nint lowbit(int x)\n{\n    return x&-x;\n}\nvoid add(int x,int addnum)\n{\n    while (x<=n)       //\u4fee\u6539\n    {\n        tree[x]+=addnum;\n        x+=lowbit(x);\n    }\n}\nint query(int x)\n{\n    int sum=0;           //\u67e5\u8be2\n    while (x)\n    {\n        sum+=tree[x];\n        x-=lowbit(x);\n    }\n    return sum;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for (i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a);\n        add(i,a-pre);\n        pre=a;\n    }\n    for (i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&k);\n        add(x,k);\n        add(y+1,-k);\n    }\n    ans=query(1);            \n    for (i=2;i<=n;i++)\n    {\n        if (query(i)<ans) ans=query(i);\n    }\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1493272283,
        "uid": 12613,
        "name": "PTC06",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2367 \u3010\u8bed\u6587\u6210\u7ee9\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://xiaohuang888.github.io/2019/12/11/%E3%80%8CLuogu%202367%E3%80%8D%E8%AF%AD%E6%96%87%E6%88%90%E7%BB%A9/)\n\n### Solution\n\n\u8fd9\u9898\u4ecb\u7ecd\u4e00\u79cd$O(n)$\u7684\u7b97\u6cd5\u3002\n\n\u53ef\u4ee5\u7528\u5dee\u5206\u6570\u7ec4\u6765\u505a\uff0c\u5728\u4fee\u6539\u7684\u65f6\u5019\uff0c\u7b2c\u4e00\u4e2a\u6570\u52a0$x$\uff0c\u7b2c$n+1$\u4e2a\u6570\u51cf$x$\uff0c\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u61d2\u6807\u8bb0\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u7d2f\u52a0\u4e00\u4e0b\uff0c\u518d\u52a0\u4e0a\u672c\u8eab\u5c31\u662f\u8fd9\u4e2a\u6570\u7684\u6700\u7ec8\u503c\u3002\n\n### Code\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n\nusing namespace std;\n\nconst int INF = 0x3f3f3f3f, MAXN = 5000005;\nint n, q, l, r, val, a[MAXN], diff[MAXN];\nint main() {\n    scanf(\"%d%d\", &n, &q);\n    for (int i = 1; i <= n; i++)\n        scanf(\"%d\", &a[i]);\n    for (int i = 1; i <= q; i++) {\n        scanf(\"%d%d%d\", &l, &r, &val);\n        diff[l] += val; diff[r + 1] -= val;//\u5dee\u5206\u6570\u7ec4\n    }\n    int Min = INF, tmp = 0;\n    for (int i = 1; i <= n; i++) {\n        tmp += diff[i];//\u67e5\u8be2\u8fd9\u4e00\u4e2a\u4f4d\u7f6e\u7684\u4fee\u6539\u503c\n        if (a[i] + tmp < Min) Min = a[i] + tmp;\n    }\n    printf(\"%d\\n\", Min);\n    return 0;\n}\n```",
        "postTime": 1570005371,
        "uid": 19729,
        "name": "xiaohuang",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2367 \u3010\u8bed\u6587\u6210\u7ee9\u3011"
    },
    {
        "content": "**###\u770b\u5230\u5404\u4f4d\u5927\u4f6c\u90fd\u7528\u7ebf\u6bb5\u6811\u672c\u849f\u84bb\u9ed8\u9ed8\u5730\u732e\u51fa\u4e86\u7eaf\u66b4\u529b\u65b9\u6cd5\uff08\u6700\u540e\uff12\u4e2a\u70b9\uff34\uff2c\uff25\u6709\u89e3\u51b3\u65b9\u6cd5\u53ef\u4ee5\u79c1\u4fe1\uff09**\n\n**\u4ee3\u7801\u89e3\u91ca\u633a\u5168\u7684**\n\n`cpp\n```cpp\n#include<bits/stdc++.h>//\u8d85\u7ea7\u5e93\nusing namespace std;\nint n,p;\nint maxn=101;\nint a[5000005];\nint x,y,z;\nint main()\n{\n    cin.sync_with_stdio(false);//\u8bfb\u5165\u4f18\u5316\u3000\u4eb2\u6d4b\u5355\u5143\u6700\u77ed\u8def\uff50\uff52\uff49\uff4d\u3000\uff15\uff10\uff10\uff4d\uff53\uff0b\n    cin>>n>>p;\n    for(int i=1;i<=n;i++)\n        cin>>a[i];//a[i]\u5b58\u5b66\u751f\u7684\u6210\u7ee9\n    for(int i=1;i<=p;i++)\n    {\n        cin>>x>>y>>z;\n        for(int j=x;j<=y;j++)//\u65e0\u8111\u6a21\u62df\u3000\u8ba9\u4ece\uff58\u5230\uff59\u7684\u4f4d\u7f6e\uff0b\uff5a\n            a[j]+=z;\n    }\n    for(int i=1;i<=n;i++)\n        maxn=min(maxn,a[i]);//\u6c42\uff4d\uff41\uff58\uff4e\uff08\u5f53\u524d\u5b58\u7684\u6700\u5c0f\u6210\u7ee9\uff09\u548c\u7b2c\uff49\u4e2a\u4eba\u7684\u6210\u7ee9\u3000\u8c01\u6700\u5c0f\u3000\u3000\uff4d\uff41\uff58\uff4e\uff1d\u5c0f\u7684\u90a3\u4e2a\n    cout<<maxn;\n}\n```\n**\u4e0d\u5b8c\u7f8e\u6536\u573a\u624b\u52a8%%%%%%**",
        "postTime": 1507190996,
        "uid": 48439,
        "name": "YuRuiH_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2367 \u3010\u8bed\u6587\u6210\u7ee9\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811/\u5dee\u5206/\u6811\u72b6\u6570\u7ec4\u641e\u4e00\u4e0b\uff1b\n\n\u53c8\u56e0\u4e3a\u9898\u76ee\u4e2d\u53ea\u8981\u6c42\u627e\u51fa\u88ab\u4fee\u6539\u540e\u7684\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u6211\u7528\u7684\u662f\u5dee\u5206\uff08\u7ebf\u6bb5\u6811\u592a\u957f\u4e0d\u60f3\u5199\uff09\uff1b\n\n\u5dee\u5206\u767e\u5ea6\u4e0a\u627e\u4e0d\u5230\u592a\u591a\u8d44\u6599\n\n\u5927\u6982\u601d\u60f3\n\n\u5c31\u662f\u8bbe\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u4e0ba\u3010i\u3011\u76f8\u5bf9\u4e8ea\u3010i-1\u3011\u7684\u53d8\u5316\uff1b\n\n\u6700\u540e\u67e5\u8be2a\u3010i\u3011\u7684\u65f6\u5019\u5c31\u662f\u628as\u30100\u3011+\u3002\u3002\u3002+s\u3010i\u3011\uff1b\n\n\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u4f1a\u6bd4\u7ebf\u6bb5\u6811\u4f18\uff1b//noip\u7684\u501f\u6559\u5ba4\u4e5f\u53ef\u4ee5\u7528\u5dee\u5206\u641e\uff0c\u5e38\u6570\u5927\u7684\u7ebf\u6bb5\u6811\u4f1a\u88ab\u5361\n\n\uff08\u800c\u4e14\u8fd8\u6bd4\u7ebf\u6bb5\u6811\u597d\u5199\uff09\n\n\u5176\u5b9e\u4f60\u6839\u672c\u4e0d\u9700\u8981\u8bb0\u5f55a\u3010i\u3011\u6570\u7ec4\uff0c\u56e0\u4e3a\u5dee\u5206\u8981\u7528\u7684\u53ea\u662fa\u3010i\u3011\u548ca\u3010i-1\u3011\u7684\u5dee\u503c\n\n\u6211\u52a0\u62c9\u4e00\u4e2a\u5c0f\u5c0f\u7684\u4f18\u5316\uff0c\u8be6\u7ec6\u89c1\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n```\n}//\u5feb\u8bfb\n```cpp\nint n,m,k;\nint g[5000000+10];//g\u6570\u7ec4\u5c31\u662f\u8bb0\u5f55a\u3010i\u3011\u503c\u5bf9\u4e8e\u524d\u4e00\u4f4d\u7684\u53d8\u5316\u503c\uff08\u9ed8\u8ba4a\u30100\u3011\uff0cg\u30101\u3011=a\u30101]\u3011\uff09\nint main()\n{\n     n=read();k=read();\n     g[0]=0;m=0;\n     for(int i=1;i<=n;i++){\n      g[i]-=m;//\u5728\u8fd9\u4e2a\u5730\u65b9m\u662fa\u3010i-1\u3011\u7684\u503c\n      m=read();\n      g[i]+=m;//\u5728\u8fd9\u4e2a\u5730\u65b9m\u662fa\u3010i\u3011\u7684\u503c\n```\n}//\u8fd9\u6837\u6211\u4eec\u5c31\u7701\u53bb\u4e86a\u3010i\u3011\u6570\u7ec4\nfor(int i=1;i<=k;i++){/\\*\u4fee\u6539\uff0cx-\u300by\u52a0\u4e0az\uff08z\u53ef\u4e3a\u8d1f\u6570\uff09\u56e0\u4e3a\u6211\u4eec\u662f\u901a\u8fc7\u524d\u7f00\u548c\u6765\u6c42a\u3010i\u3011\u7684\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06g\u3010x\u3011+z\uff0cg\u3010y+1\u3011-z\uff08x\uff0cy\u533a\u95f4\u5185\u7684\u53d8\u5316\u91cf\u662f\u4e0d\u53d8\u7684\uff0c\u53d8\u5f97\u53ea\u662f\u4e24\u4e2a\u7aef\u70b9\uff09\uff0c\u6700\u540e\u524d\u7f00\u548c\u6c42\u51fa\u7684\u5c31\u662f\u4fee\u6539\u540e\u7684\u503c\uff1b\\*/\n\n```cpp\n     int x,y,z;\uff0c\n     x=read();\n     y=read();\n     z=read();\n     g[x]+=z;\n     g[y+1]-=z;\n     }\n     int sum=1000086,ans=0;\n     for(int i=1;i<=n;i++)\n     { \n        ans+=g[i];//\u679a\u4e3e\u4fee\u6539\u540e\u7684\u6bcf\u4e00\u4e2aa\u3010i\u3011\uff1b\n        sum=min(ans,sum);\n     }\n     printf(\"%d\",sum);\n     return 0;\n}\n```\n\u8fd9\u9053\u9898\u53ef\u4ee5\u641e\u641e\u7ebf\u6bb5\u6811\uff0c\u5982\u679c\u4f60\u60f3\u7ec3\u4e00\u4e0b\u5dee\u5206\uff0c\u53ef\u4ee5\u5b66\u4e60\u4e00\u4e0bnoip2012\u7684\u501f\u6559\u5ba4\uff0c\u5185\u9053\u9898\u591a\u79cd\u89e3\u6cd5\uff08\u5e38\u6570\u5927\u7684\u7ebf\u6bb5\u6570\u4f1a\u88ab\u5361\uff09=v=\n\u6700\u540e\u6700\u540e\u8fd9\u662f\u672c\u849f\u84bb\u7684\u7b2c\u56db\u7bc7\u9898\u89e3\uff0c\u5e0c\u671b\u5bf9\u6ce5\u840c\u6709\u5e2e\u52a9qwq\n",
        "postTime": 1506504014,
        "uid": 43601,
        "name": "\u56e7\u4eba232",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2367 \u3010\u8bed\u6587\u6210\u7ee9\u3011"
    },
    {
        "content": "\u5178\u578b\u7684\u5dee\u5206\u9898\u3002\n\n\u8bb0i\u53f7\u5b66\u751f\u5f97\u5206\u4e3aa[i]\uff0c\u4ee4b[i] = a[i] - a[i-1]\uff0c\u90a3\u4e48b[1]+b[2]+...+b[i] = a[i]\u3002\n\n\u8001\u5e08\u7ed9i\u53f7\u5b66\u751f\u5230j\u53f7\u5b66\u751f\u5168\u90e8\u52a0\u4e0ax\u5206\uff0c\u5c31\u76f8\u5f53\u4e8eb[i] += x, b[j+1] -= x\n\n\u6700\u540e\u6c42\u6240\u6709\u5b66\u751f\u7684\u6700\u4f4e\u5206\uff0c\u90a3\u4e48\u53ea\u8981\u4e00\u8fb9\u5bf9b[i]\u6c42\u548c\uff0c\u4e00\u8fb9\u6c42\u6c42\u548c\u8fc7\u7a0b\u4e2d\u7684\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\n\u53e6\u5916\u672c\u9898\u6570\u636e\u6bd4\u8f83\u5927\uff0c\u65f6\u95f4\u6bd4\u8f83\u7d27\uff0c\u8981\u5199\u5feb\u901f\u8bfb\u5165\u624d\u80fd\u8fc7\u3002\n",
        "postTime": 1428475581,
        "uid": 4341,
        "name": "TsReaper",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2367 \u3010\u8bed\u6587\u6210\u7ee9\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\uff0c\u5c31\u662f\u697c\u4e0b\u7684\u65b9\u6cd5\uff0c\u8c8c\u4f3c\u53eb\u524d\u7f00\u6570\u7ec4\u3002\n\n```cpp\n#include<iostream>\n#include<stdio.h>\n#include<string.h>\n#include<algorithm>\n#include<queue>\n#include<stack>\n#include<set>\n#include<vector>\n#include<map>\nusing namespace std;\n#define fr(i,a,b) for(int i=(a),_end_=(b);i<=_end_;i++)\n#define fd(i,a,b) for(int i=(a),_end_=(b);i>=_end_;i--)\n#define ln putchar('\\n')\n#define mem(x,y) memset(x,y,sizeof(x));\n#define gc getchar()\n#define u unsigned\n#define inf 0x3f3f3f3f\n#define ct continue\n#define rt return\n#define llf double\n#define lld long long\n#define frei(s) freopen(s,\"r\",stdin);\n#define freo(s) freopen(s,\"w\",stdout);\n#define _FILE_ \"\"\nvoid OPENFILE(){\n.    if(strlen(_FILE_)==0)rt;\n.    char FILENAME[50];\n.    sprintf(FILENAME,\"%s.in\",_FILE_);\n.    frei(FILENAME);\n.    sprintf(FILENAME,\"%s.out\",_FILE_);\n.    freo(FILENAME);\n}//\u65e0\u89c6\nlld n,m,x,y,z,f[5000010],ans,d,k[5000010];\nint main(){\n.    OPENFILE();\n.    scanf(\"%lld%lld\",&n,&m);\n.    fr(i,1,n)\n.        scanf(\"%lld\",&k[i]);\n.    while(m--){\n.        scanf(\"%lld%lld%lld\",&x,&y,&z);\n.        f[x]+=z;\n.        f[y+1]-=z;//\u5c31\u662f\u7a0b\u5e8f\u7684\u7cbe\u534e\n.    }\n.    ans=inf;//\u8bbe\u521d\u503c\n.    fr(i,1,n){\n.        d+=f[i];//\u770b\u76ee\u524d\u589e\u52a0\uff08\u51cf\u5c11\u7684\uff09\u6570\u503c\n.        ans=min(ans,d+k[i]);\n.    }\n.    printf(\"%lld\\n\",ans);\n.    rt 0;\n}\n```",
        "postTime": 1472873422,
        "uid": 19396,
        "name": "NP003",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2367 \u3010\u8bed\u6587\u6210\u7ee9\u3011"
    }
]