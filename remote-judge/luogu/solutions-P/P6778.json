[
    {
        "content": "\u53c2\u8003\u8d44\u6599\uff1a\u5468\u6b23\u300a\u6d45\u8c08\u4e00\u7c7b\u6811\u5206\u5757\u7684\u6784\u5efa\u7b97\u6cd5\u53ca\u5176\u5e94\u7528\u300b\u3001@negiizhao [Top tree \u76f8\u5173\u4e1c\u897f\u7684\u7406\u8bba\u3001\u7528\u6cd5\u548c\u5b9e\u73b0](https://negiizhao.blog.uoj.ac/blog/4912)\u3001lxl [[Ynoi2018]Day2 \u9898\u89e3](https://olddrivertree.blog.uoj.ac/blog/5213)\u3001@zhylj [\u300c\u5b66\u4e60\u7b14\u8bb0\u300d\u57fa\u4e8e Top Cluster \u5206\u89e3\u7684\u6811\u5206\u5757\u7b97\u6cd5](http://zhylj.cc/index.php/archives/90/)\u3002\n\ntop cluster \u6811\u5206\u5757\u677f\u9898\u3002\n\n# \u524d\u7f6e\u77e5\u8bc6\n\n## \u57fa\u672c\u6982\u5ff5\n\n\u4e00\u4e2a**\u6811\u7c07**\uff08cluster\uff09\u662f\u6811\u4e0a\u7684\u4e00\u4e2a\u8fde\u901a\u5b50\u6811\uff0c\u6709\u81f3\u591a\u4e24\u4e2a\u70b9\u4e0e\u5916\u754c\u8fde\u63a5\u3002\u8fd9\u4e24\u4e2a\u70b9\u79f0\u4e3a**\u754c\u70b9**\uff08boundary node\uff09\uff0c\u7c07\u4e2d\u5176\u4f59\u7684\u70b9\u79f0\u4e3a\u5185\u70b9\uff08internal node\uff09\u3002\u4e24\u4e2a\u754c\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u79f0\u4e3a**\u7c07\u8def\u5f84**\uff08cluster path\uff09\u3002\u65b9\u4fbf\u8d77\u89c1\uff0c\u672c\u6587\u8bbe\u6bcf\u4e2a\u7c07\u4e2d\u5fc5\u6709\u4e24\u4e2a\u754c\u70b9\uff0c\u79f0\u4e00\u4e2a\u7c07\u4e2d\u6df1\u5ea6\u8f83\u6d45\u7684\u754c\u70b9\u4e3a\u4e0a\u754c\u70b9\uff0c\u8f83\u6df1\u7684\u4e3a\u4e0b\u754c\u70b9\u3002\u5982\u679c\u628a\u6240\u6709\u7c07\u7684\u754c\u70b9\u4f5c\u4e3a\u70b9\uff0c\u6bcf\u4e2a\u7c07\u7684\u4e0a\u754c\u70b9\u5411\u4e0b\u754c\u70b9\u8fde\u6709\u5411\u8fb9\uff0c\u5219\u4f1a\u5f97\u5230\u4e00\u68f5\u6709\u6839\u6811\uff0c\u79f0\u4e3a**\u6536\u7f29\u6811**\u3002\n\n\u5b58\u5728\u4e00\u79cd\u9759\u6001\u5212\u5206\u7b97\u6cd5\uff0c\u80fd\u591f\u505a\u5230\u5bf9\u4e8e\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\u548c\u4e00\u4e2a\u5757\u5927\u5c0f $B$\uff0c\u5c06\u539f\u6811\u5212\u5206\u4e3a $O\\left(\\frac{n}{B}\\right)$ \u4e2a\u7c07\uff0c\u6bcf\u4e2a\u7c07\u7684\u5927\u5c0f\u5747\u4e3a $O(B)$\u3002\n\n## \u7b97\u6cd5\u8fc7\u7a0b\n\n\u9009\u53d6\u4efb\u610f\u8282\u70b9\u4e3a\u6839\u8282\u70b9\uff0c\u5e76\u4e14\u5f3a\u4ee4\u6839\u8282\u70b9\u4e3a\u4e00\u4e2a\u754c\u70b9\u3002\n\n\u4ece\u6839\u8282\u70b9\u5f00\u59cb DFS\uff0c\u7ef4\u62a4\u4e00\u4e2a\u6808\u5b58\u50a8\u6682\u65f6\u8fd8\u672a\u5f52\u7c7b\u7684\u8fb9\uff08\u5b9e\u9645\u4e0a\u5b58\u7684\u662f\u70b9\uff0c\u4f46\u4ee3\u8868\u7684\u610f\u4e49\u662f\u8fde\u5411\u5176\u7236\u4eb2\u7684\u8fb9\uff09\u3002\u5f53 $u$ \u8981\u7ed3\u675f DFS \u65f6\uff0c\u5982\u679c\u53d1\u751f\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff0c\u5219\u8981\u5c06\u6808\u4e2d\u7684\u4e00\u4e9b\u8fb9\u786e\u5b9a\u4e3a\u82e5\u5e72\u4e2a\u4ee5 $u$ \u4e3a\u4e0a\u754c\u70b9\u7684\u7c07\u3002\u5904\u7406\u5b8c\u6bd5\u540e\u628a\u6808\u4e2d\u6240\u6709 $u$ \u7684\u5b50\u6811\u4e2d\u7684\u8282\u70b9\u5f39\u51fa\u3002\n\n1. $u$ \u4e3a\u6839\u8282\u70b9\u3002\n2. $u$ \u6709\u81f3\u5c11\u4e24\u4e2a\u5b50\u6811\u4e2d\u5b58\u5728\u754c\u70b9\u3002\u6b64\u65f6\u5982\u679c\u4e0d\u4f7f $u$ \u4e3a\u754c\u70b9\u5219 $u$ \u6240\u5728\u7c07\u5c06\u4ea7\u751f\u81f3\u5c11\u4e09\u4e2a\u754c\u70b9\uff08$u$ \u7684\u67d0\u4e2a\u7956\u5148\u5c06\u6210\u4e3a\u8be5\u7c07\u7684\u4e0a\u754c\u70b9\uff0c\u800c $u$ \u7684\u5b50\u6811\u4e2d\u7684\u754c\u70b9\u5c06\u5747\u6210\u4e3a\u4e0b\u754c\u70b9\u3002\u5b58\u5728\u4e24\u4e2a\u4ee5\u4e0a\u7684\u4e0b\u754c\u70b9\u663e\u7136\u662f\u4e0d\u5408\u6cd5\u7684\uff09\uff0c\u6240\u4ee5\u5fc5\u987b\u4ee4 $u$ \u4e3a\u754c\u70b9\u3002\n3. \u6808\u4e2d\u5269\u4f59\u8fb9\uff08\u70b9\uff09\u7684\u6570\u91cf\u5927\u4e8e $B$\u3002\n\n\u4e0b\u9762\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\uff1a\u5982\u4f55\u5408\u9002\u5730\u5c06 $u$ \u7684\u5b50\u6811\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u7c07\uff0c\u6765\u6ee1\u8db3\u6700\u521d\u7684\u8981\u6c42\u3002\u8003\u8651\u8d2a\u5fc3\u5730\u5728\u6808\u4e2d\u9009\u53d6\u6781\u957f\u5408\u6cd5\u524d\u7f00\u4f5c\u4e3a\u540c\u4e00\u4e2a\u7c07\uff0c\u76f4\u5230\u4e0b\u5217\u60c5\u51b5\u4e4b\u4e00\u53d1\u751f\uff1a\n\n1. $u$ \u7684\u5b50\u6811\u5df2\u7528\u5b8c\u3002\n2. \u65b0\u52a0\u5165\u4e00\u4e2a\u5b50\u6811\u5c06\u4f1a\u4f7f\u5f53\u524d\u7c07\u4e2d\u6709\u4e24\u4e2a\u4e0b\u754c\u70b9\u3002\n3. \u65b0\u52a0\u5165\u4e00\u4e2a\u5b50\u6811\u5c06\u4f1a\u4f7f\u5f53\u524d\u7c07\u7684\u5927\u5c0f\u8d85\u8fc7 $B$\u3002\n\n\u5168\u90e8 DFS \u7ed3\u675f\u540e\uff0c\u6211\u4eec\u5c31\u80fd\u5f97\u5230\u4e00\u79cd\u7b26\u5408\u8981\u6c42\u7684\u5212\u5206\u65b9\u6848\u3002\n\n\u6b63\u786e\u6027\u8bc1\u660e\u8be6\u89c1[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/DRPLANT/articles/top_cluster.html)\u3002\n\n## \u6838\u5fc3\u4ee3\u7801\n\n```cpp\n// CL: \u7c07   BN: \u754c\u70b9   CT: \u6536\u7f29\u6811   CLP: \u7c07\u8def\u5f84\nint fa[maxn];  // \u8bb0\u5f55\u539f\u6811\u4e2d\u7684\u7236\u4eb2\nint CT_fa[maxn], near_CLP[maxn], up_BN[maxn], down_BN[maxn];\n// CT_fa\uff1a\u6bcf\u4e2a\u754c\u70b9\u5728\u6536\u7f29\u6811\u4e0a\u7684\u7236\u4eb2\u3002near_CLP\uff1a\u8ddd\u79bb\u6700\u8fd1\u7684\u7c07\u8def\u5f84\u4e0a\u8282\u70b9\u3002\n// up_BN\uff1a\u6240\u5c5e\u7c07\uff08\u82e5\u4e3a\u754c\u70b9\uff0c\u5219\u5176\u6240\u5c5e\u7c07\u4e3a\u5176\u4f5c\u4e3a\u4e0b\u754c\u70b9\u65f6\u6240\u5c5e\u7684\u7c07\uff09\u7684\u4e0a\u754c\u70b9\u3002down_BN\uff1a\u6240\u5c5e\u7c07\u7684\u4e0b\u754c\u70b9\u3002\nvector<int> BN, down_CL[maxn];  // BN\uff1a\u5b58\u50a8\u6240\u6709\u754c\u70b9\u3002down_CL\uff1a\u628a\u6574\u4e2a\u7c07\u4e2d\u4e0a\u754c\u70b9\u4ee5\u5916\u7684\u70b9\u5b58\u5230\u4e0b\u754c\u70b9\u7684 vector \u4e2d\u3002\n\nnamespace TOP_CLUSTER {\n// \u653e\u5728 namespace \u91cc\u9762\u7684\u53d8\u91cf\u662f\u53ea\u6709\u5212\u5206\u65f6\u624d\u4f1a\u7528\u5230\u7684\u3002\nint cur_CL[maxn], cur_CL_cnt;  // \u5b58\u653e\u5f53\u524d\u7c07\u7684\u4e34\u65f6\u6570\u7ec4\u3002\n\ninline void add_CL(int u, int v) {  // \u65b0\u589e\u4e00\u4e2a\u4ee5 u \u4e3a\u4e0a\u754c\u70b9\uff0cv \u4e3a\u4e0b\u754c\u70b9\u7684\u7c07\u3002\n  if (!v)  // \u5982\u679c\u6ca1\u6709\u4e0b\u754c\u70b9\uff0c\u5219\u53ef\u4ee5\u4efb\u9009\u7c07\u4e2d\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u4e0b\u754c\u70b9\u3002\n    v = cur_CL[cur_CL_cnt]; \n  CT_fa[v] = u, near_CLP[u] = u;\n  for (int r = v; r != u; r = fa[r])\n    near_CLP[r] = r;  // \u9884\u5904\u7406\u7c07\u8def\u5f84\u4e0a\u6bcf\u4e2a\u70b9\u7684\u6700\u8fd1\u7c07\u8def\u5f84\u4e0a\u8282\u70b9\u4e3a\u5b83\u81ea\u5df1\u3002\n  for (int i = 1; i <= cur_CL_cnt; i++) {\n    int r    = cur_CL[i], j;\n    up_BN[r] = u, down_BN[r] = v, down_CL[v].emplace_back(r);\n    for (j = r; !near_CLP[j]; j = fa[j])\n      ;  // \u66b4\u8df3\u627e\u6700\u8fd1\u7c07\u8def\u5f84\u4e0a\u8282\u70b9\uff0c\u56e0\u4e3a\u6309 DFS \u5e8f\u52a0\u5165\u6808\u4e2d\u6240\u4ee5\u8fd9\u90e8\u5206\u590d\u6742\u5ea6\u53ef\u4ee5\u4fdd\u8bc1\u3002\n    near_CLP[r] = near_CLP[j];\n  }\n  cur_CL_cnt = 0;  // \u8bb0\u5f97\u628a\u5b58\u653e\u5f53\u524d\u7c07\u7684\u4e34\u65f6\u6570\u7ec4\u957f\u5ea6\u6e05\u96f6\u3002\n}\n\n// ST: \u6808\nint ST[maxn], ST_top, rec_ST_top[maxn];  // rec_stack_top\uff1a\u8bb0\u5f55 DFS \u5230\u4e00\u4e2a\u8282\u70b9\u65f6\u7684\u6808\u9876\u3002\nint waiting[maxn], rec_BN[maxn];\n// waiting\uff1a\u957f\u5b58\u4e0d\u706d\u7684 waiting\uff0c\u9010\u6e10\u6d88\u901d\u7684 AC\u3002\uff08\u5212\u6389\uff09\u6682\u65f6\u8fd8\u672a\u5f52\u7c7b\u7684\u8fb9\u3002rec_BN\uff1a\u8bb0\u5f55\u5b50\u6811\u4e2d\u6700\u6d45\u754c\u70b9\u3002\n\ninline void CL_partition(int u, int FA) {  // DFS \u51fd\u6570\n  fa[u] = FA, rec_ST_top[u] = ST_top;\n  for (auto it = edge[u].begin(); it < edge[u].end(); it++)\n    if (it->to == FA) {  // \u5148\u628a\u7236\u4eb2\u5220\u4e86\u540e\u9762\u5904\u7406\u65b9\u4fbf\u4e00\u70b9\u3002\n      edge[u].erase(it);\n      break;\n    }\n  waiting[u] = 1;\n  int BN_cnt = 0;  // \u8bb0\u5f55\u6709\u754c\u70b9\u7684\u5b50\u6811\u4e2a\u6570\u3002\n  for (const Edge &v : edge[u]) {\n    ST[++ST_top] = v.to;\n    CL_partition(v.to, u);\n    waiting[u] += waiting[v.to], rec_BN[v.to] && (rec_BN[u] = rec_BN[v.to], BN_cnt++);\n  }\n  if (waiting[u] > B || BN_cnt > 1 || !FA) {  // \u7b26\u5408\u51fa\u6808\u6761\u4ef6\n    waiting[u] = 0, rec_BN[u] = u, BN.emplace_back(u);\n    for (int i = 0, j = rec_ST_top[u] + 1, cnt = 0, cur_down = 0, v; i <= edge[u].size(); i++) {\n      // cnt\uff1a\u5f53\u524d\u7c07\u7684\u5927\u5c0f\u3002cur_down\uff1a\u5f53\u524d\u7c07\u7684\u4e0b\u754c\u70b9\u3002\n      v = (i == edge[u].size()) ? 0 : edge[u][i].to;\n      if (cnt + waiting[v] > B || (cur_down && rec_BN[v]) || !v) {  // \u5df2\u65e0\u6cd5\u5f80\u5f53\u524d\u7c07\u4e2d\u518d\u52a0\u5165\u4e00\u4e2a\u5b50\u6811\u3002\n        for (; (j < rec_ST_top[v] || !v) && j <= ST_top; j++)\n          cur_CL[++cur_CL_cnt] = ST[j];\n        add_CL(u, cur_down), cnt = cur_down = 0;\n      }\n      cnt += waiting[v], rec_BN[v] && (cur_down = rec_BN[v]);\n    }\n    ST_top = rec_ST_top[u];  // \u628a\u6808\u4e2d\u6240\u6709 u \u7684\u5b50\u6811\u4e2d\u7684\u8282\u70b9\u5f39\u51fa\u3002\n    // \u5751\u70b9\uff1a\u522b\u5199\u7cca\u4e86\u628a\u8fd9\u53e5\u8bdd\u5199\u5230 if \u5916\u9762\u53bb\u4e86\u3002\u6211\u56e0\u4e3a\u8fd9\u4e2a\u8c03\u4e86\u597d\u957f\u65f6\u95f4\u3002\n  }\n}\n}  // namespace TOP_CLUSTER\n```\n\n# \u9898\u89e3\u6b63\u6587\n\n\u663e\u7136\u53ef\u4ee5\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u4ee5\u4e0b\u5f0f\u5b50\uff1a\n\n$$(r-l)\\sum\\limits_{i=l}^r dep_i - 2 \\times \\sum\\limits_{i=l}^r \\sum\\limits_{j=i+1}^r dep_{LCA(i,j)}$$\n\n\u524d\u4e00\u9879\u53ef\u4ee5\u901a\u8fc7\u524d\u7f00\u548c\u7b80\u5355\u6c42\u5f97\uff0c\u540e\u4e00\u9879\u770b\u8d77\u6765\u6bd4\u8f83\u96be\u6c42\u3002\n\n\u4f7f\u7528\u83ab\u961f\u7b97\u6cd5\u3002\u8003\u8651 [P4211](https://www.luogu.com.cn/problem/P4211) \u7684\u7ecf\u5178\u7ed3\u8bba\uff0c\u8bbe $w_i=dep_i-dep_{fa_i}$\uff0c$c\\left([l,r],x\\right)$ \u8868\u793a $\\sum\\limits_{i=l}^r dep_{LCA(i,x)}$\u3002\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u7528\u4ee5\u4e0b\u65b9\u6cd5\u5feb\u901f\u6c42\u5f97\uff1a\u5c06\u533a\u95f4 $[l,r]$ \u7684\u6240\u6709\u8282\u70b9\u5230\u6839\u7684\u94fe\u4e0a\u6bcf\u4e2a\u70b9\u7684 $cnt_i + 1$\uff0c\u6c42\u51fa $x$ \u5230\u6839\u7684\u94fe\u4e0a\u6240\u6709\u70b9\u7684 $\\sum w_i \\cdot cnt_i$\u3002\u4ee5\u83ab\u961f\u53f3\u6307\u9488 $r \\rightarrow r+1$ \u4e3a\u4f8b\uff0c\u53ef\u4ee5\u628a\u8d21\u732e\u5dee\u5206\u4e3a $c\\left([1,r],r+1\\right) - c\\left([1,l-1],r+1\\right)$\u3002\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u83ab\u961f\u4e8c\u6b21\u79bb\u7ebf\u7684\u5f0f\u5b50\uff0c\u76f4\u63a5\u5957\u677f\u5b50\u5373\u53ef\u3002\u4e0e\u90a3\u9053\u4e8c\u79bb\u677f\u5b50\uff08[P4887](https://www.luogu.com.cn/problem/P4887)\uff09\u7684\u552f\u4e00\u533a\u522b\u662f\u4e00\u4e2a\u8282\u70b9\u52a0\u5165\u540e\u4f1a\u5bf9\u81ea\u5df1\u4ea7\u751f\u8d21\u732e\uff0c\u56e0\u6b64\u6c42\u524d\u7f00\u548c\u7684\u90e8\u5206\u8981\u5206\u8d21\u732e\u662f\u5426\u5305\u542b\u81ea\u5df1\u4e24\u79cd\u3002\n\n\u8fd9\u6837\u672c\u9898\u5c31\u89e3\u51b3\u4e86\u5417\uff1f\u5b9e\u9645\u4e0a\u4f60\u4f1a\u53d1\u73b0\u4efb\u4f55\u5e38\u89c1\u6570\u636e\u7ed3\u6784\u90fd\u4f1a\u4f7f $cnt_i + 1$ \u548c\u67e5\u8be2 $\\sum w_i \\cdot cnt_i$ \u8fd9\u4e24\u90e8\u5206\u7684\u590d\u6742\u5ea6\u5e26\u4e0a $\\log$\u3002\u800c\u672c\u9898\u5e26 $\\log$ \u7684\u590d\u6742\u5ea6\u662f\u96be\u4ee5\u901a\u8fc7\u7684\u3002\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f~~\u5361\u5e38~~\u3002\u4f17\u6240\u5468\u77e5\uff0c\u83ab\u961f\u4e8c\u79bb\u53ef\u4ee5\u770b\u505a\u5bf9\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u8fdb\u884c $O(n)$ \u6b21\u4fee\u6539\u548c $O(n\\sqrt m)$ \u6b21\u67e5\u8be2\uff0c\u53d1\u73b0\u8fd9\u4e24\u8005\u662f\u975e\u5e38\u4e0d\u5e73\u8861\u7684\u3002\u5728\u5e8f\u5217\u4e0a\uff0c\u6211\u4eec\u4e00\u822c\u4f7f\u7528\u5206\u5757\u3001\u6839\u53f7\u5206\u6cbb\u7b49\u5e73\u8861\u5b83\u4eec\u7684\u590d\u6742\u5ea6\u3002\u800c\u672c\u9898\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6811\u5206\u5757\u8fdb\u884c\u6839\u53f7\u5e73\u8861\u3002\n\n\u52a0\u5165\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u628a\u8fd9\u4e2a\u8282\u70b9\u5230\u6839\u7684\u8def\u5f84\u62c6\u5206\u6210\u4ee5\u4e0b 3 \u90e8\u5206\uff1a\n\n1. \u8be5\u70b9\u5230\u6700\u8fd1\u7c07\u8def\u5f84\u4e0a\u8282\u70b9\u7684\u8def\u5f84\u3002\n2. \u8be5\u70b9\u7684\u6700\u8fd1\u7c07\u8def\u5f84\u4e0a\u8282\u70b9\u5230\u8be5\u7c07\u4e0a\u754c\u70b9\u7684\u8def\u5f84\u3002\n3. \u8be5\u7c07\u4e0a\u754c\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u3002\uff08\u5747\u4e3a\u7c07\u8def\u5f84\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u8be5\u7c07\u4e0a\u754c\u70b9\u5230\u6839\u8282\u70b9\u5728\u6536\u7f29\u6811\u4e0a\u7684\u8def\u5f84\u3002\uff09\n\n\u7ef4\u62a4 $val_i$ \u8868\u793a\u8282\u70b9 $i$ \u4f5c\u4e3a\u6563\u5757\u88ab\u8d21\u732e\u7684\u503c\uff0c$sum1_i$ \u8868\u793a\u6bcf\u4e2a\u8282\u70b9 $val_i$ \u7684\u6811\u4e0a\u524d\u7f00\u548c\uff0c\u4e14\u7c07\u4e0e\u7c07\u4e4b\u95f4\u4e92\u76f8\u72ec\u7acb\u3002$val\\_clp_v$ \u8868\u793a\u67d0\u7c07\u7684\u4e0b\u754c\u70b9 $v$ \u5230\u5176\u4e0a\u754c\u70b9\u7684\u8fd9\u6761\u7c07\u8def\u5f84\u88ab\u8d21\u732e\u7684\u503c\uff0c\u7528 $sum2_v$ \u8868\u793a\u6bcf\u4e2a\u754c\u70b9 $val\\_clp_v$ \u7684\u6536\u7f29\u6811\u4e0a\u524d\u7f00\u548c\u3002$tag_v$ \u8868\u793a\u67d0\u4e2a\u4e0b\u754c\u70b9 $v$ \u6240\u4ee3\u8868\u7684\u7c07\u4f5c\u4e3a\u6574\u5757\u88ab\u8d21\u732e\u7684\u6b21\u6570\u3002\u4fee\u6539\u65f6\u524d\u4e24\u90e8\u5206\u5728\u539f\u6811\u4e0a\u66b4\u8df3\u4fee\u6539\uff0c\u7b2c\u4e09\u90e8\u5206\u5728\u6536\u7f29\u6811\u4e0a\u66b4\u8df3\u4fee\u6539\u3002\u8df3\u5b8c\u4e4b\u540e\u628a $sum1$ \u548c $sum2$ \u66f4\u65b0\u4e00\u4e0b\u5373\u53ef\u3002\u5f53 $B$ \u53d6 $O(\\sqrt n)$ \u65f6\u53ef\u4ee5\u4fdd\u8bc1\u5355\u6b21\u4fee\u6539\u590d\u6742\u5ea6 $O(\\sqrt n)$\u3002\u67e5\u8be2\u65f6\u76f4\u63a5\u6c42 $sum1_x + (dep_{near} - dep_{up}) \\cdot tag_{down} + sum2_{up}$ \u5373\u53ef\uff08$x$ \u4e3a\u9700\u8981\u67e5\u8be2\u7684\u8282\u70b9\uff0c$near$ \u4e3a $x$ \u7684\u6700\u8fd1\u7c07\u8def\u5f84\u4e0a\u8282\u70b9\uff0c$up$ \u4e3a $x$ \u6240\u5728\u7c07\u7684\u4e0a\u754c\u70b9\uff0c$down$ \u4e3a\u4e0b\u754c\u70b9\uff09\uff0c\u663e\u7136\u662f\u5355\u6b21 $O(1)$ \u7684\u3002\n\n\u8fd9\u6837\u8fd9\u9053\u9898\u5c31\u5f7b\u5e95\u89e3\u51b3\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O\\left(n\\left(\\sqrt n + \\sqrt m\\right)\\right)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n+m)$\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u672c\u9898\u4fee\u6539\u4ee5\u53ca\u67e5\u8be2\u90e8\u5206\u7684\u4ee3\u7801\u3002\n\n```cpp\n// \u5212\u5206\u65b9\u5f0f\u4e0e\u4e0a\u9762\u76f8\u540c\uff0c\u7565\u3002\n// diff_dep[i] = dep[i] - dep[fa[i]], diff_CT_dep[i] = dep[i] - dep[CT_fa[i]];\nunsigned val[maxn], val_CLP[maxn], tag[maxn], sum1[maxn], sum2[maxn];\ninline void update(int x) {\n  const int up = up_BN[x], down = down_BN[x];\n  for (; x != near_CLP[x]; x = fa[x])\n    val[x] += diff_dep[x];\n  for (; x != up; x = fa[x])\n    val[x] += diff_dep[x], val_CLP[down] += diff_dep[x];\n  for (; CT_fa[x]; x = CT_fa[x])\n    val_CLP[x] += diff_CT_dep[x], tag[x]++;\n  for (int it : down_CL[down])\n    sum1[it] = (down_BN[fa[it]] == down ? sum1[fa[it]] : 0) + val[it];\n  for (int it : BN)\n    sum2[it] = sum2[CT_fa[it]] + val_CLP[it];\n}\ninline unsigned query(int x) {\n  const int up = up_BN[x], down = down_BN[x], near = near_CLP[x];\n  return sum1[x] + (dep[near] - dep[up]) * tag[down] + sum2[up];\n}\n```\n\n\u5bf9 top cluster \u6811\u5206\u5757\u66f4\u52a0\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff1a[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/DRPLANT/articles/top_cluster.html)\u3002\n\n\u5982\u679c\u53d1\u73b0\u6709\u95ee\u9898\u8bf7\u8054\u7cfb\u6211\uff0c\u6211\u4f1a\u5c3d\u5feb\u4fee\u6b63\u3002",
        "postTime": 1673526688,
        "uid": 111789,
        "name": "DRPLANT",
        "ccfLevel": 5,
        "title": "P6778 [Ynoi2009] rpdq \u9898\u89e3"
    },
    {
        "content": "\u672c\u9898\u89e3\u65e0 $\\text{top cluster}$ \u6811\u5206\u5757\uff0c\u8bf7\u653e\u5fc3\u98df\u7528\u3002\uff08\u8feb\u771f\uff09\n\n- \u524d\u7f6e\u829d\u58eb\n\n  - \u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f \uff1a [P5047 [Ynoi2019 \u6a21\u62df\u8d5b] Yuno loves sqrt technology II](https://www.luogu.com.cn/problem/P5047)\n  \n  - \u7ecf\u5178\u95ee\u9898 \uff1a [P4211 [LNOI2014]LCA](https://www.luogu.com.cn/problem/P4211)\n\n------------\n\n**\u9898\u610f** \uff1a \u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u8fb9\u6709\u8fb9\u6743\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa $l,r$ \uff0c\u6c42 \uff1a\n\n$$\\sum\\limits_{l\\leq u<v\\leq r}dis(u,v)$$\n\n\u7b54\u6848\u5bf9 $2^{32}$ \u53d6\u6a21\u3002\n\n\u5141\u8bb8\u79bb\u7ebf\uff0c $n,q\\leq 2\\times 10^5$ \uff0c\u65f6\u9650$\\texttt{4s}$ \uff0c\u7a7a\u9650$\\texttt{1Gb}$\u3002\n\n------------\n\n\u4f7f\u7528**\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f**\u3002\n\n\u5bb9\u6613\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a $O(n\\sqrt{m})$ \u6b21\n\n$$\n\\begin{aligned}\n&\\sum\\limits_{v\\leq r}dis(u,v)\\\\\n=&r\\times dep_u+\\sum\\limits_{v\\leq r}dep_v-2\\sum\\limits_{v\\leq r}dep_{{\\rm lca}(u,v)}\n\\end{aligned}\n$$\n\n\u7684\u6c42\u89e3\u3002\n\n\u96be\u70b9\u5728\u4e8e $\\sum\\limits_{v\\leq r}dep_{{\\rm lca}(u,v)}$ \uff0c\u8fd9\u662f \u201c\u7ecf\u5178\u95ee\u9898\u201d \uff0c\u5c06\u70b9 $1\\sim r$ \u5230\u6839\u7684\u70b9\u6743\u52a0\u4e0a\u7236\u8fb9\u8fb9\u6743\uff0c\u7136\u540e\u67e5\u8be2 $u$ \u5230\u6839\u7684\u8def\u5f84\u548c\u5373\u53ef\u5f97\u5230\u3002\n\n\u95ee\u9898\u8f6c\u5316\u4e3a $O(n)$ \u6b21\u8def\u5f84\u52a0\u4e0e $O(n\\sqrt{m})$ \u6b21\u8def\u5f84\u6c42\u548c\u3002\n\n\u7136\u540e\u6211\u4eec\u5c34\u5c2c\u5730\u53d1\u73b0\uff0c\u5e38\u7528\u7684\u6811\u4e0a\u6570\u636e\u7ed3\u6784\u51e0\u4e4e\u5168\u90e8\u5e26 $\\log$ \uff0c\u4e0d\u80fd\u5f88\u597d\u5730\u5e73\u8861\u590d\u6742\u5ea6\u3002\n\n\u8003\u8651**\u6811\u5206\u5757**\u3002\n\n\u6bcf\u4e2a\u70b9\u53ea\u5f52\u5c5e\u4e8e\u4e00\u4e2a\u5757\uff0c\u6bcf\u4e2a\u5757\u5f62\u6210\u4e00\u4e2a\u6811\u4e0a\u8054\u901a\u5757\u3002**\u8bb0\u5757\u4e2d\u7684\u6700\u6d45\u70b9\u4e3a\u5173\u952e\u70b9\u3002**\n  \n\u63a5\u4e0b\u6765\u662f\u5206\u5757\u65b9\u6cd5\u3002\n\n\u82e5 $siz_u\\leq \\sqrt{n}$ \u4e14 $siz_{fa}>\\sqrt{n}$ \uff0c\u5219\u5c06 $u$ \u7684\u5b50\u6811\u5206\u6210\u4e00\u5757\u3002\uff08\u7b2c\u4e00\u7c7b\uff09\n\n\u8fd9\u6837\u8fd8\u5269\u4e86\u6240\u6709\u5b50\u6811\u5927\u5c0f $>\\sqrt{n}$ \u7684\u70b9\u6ca1\u6709\u5f52\u5c5e\uff0c\u8fd9\u4e9b\u70b9\u6784\u6210\u4e00\u68f5\u5206\u53c9\u4e3a $O(\\sqrt{n})$ \u7684\u6811\u3002\n\n\u5bf9\u4e8e\u6bcf\u6761**\u4e0d\u5206\u53c9**\u7684\u94fe\u6761\uff0c\u5c3d\u91cf\u6309\u7167 $\\sqrt{n}$ \u5212\u5206\uff0c\u5982\u679c\u6700\u540e\u5269\u4e0b\u4e00\u5c0f\u6bb5\u4e0d\u8db3 $\\sqrt{n}$ \uff0c\u4e5f\u76f4\u63a5\u5206\u6210\u4e00\u5757\u3002\uff08\u7b2c\u4e8c\u7c7b\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/oa4pmc4v.png)\n\n\u7b2c\u4e8c\u7c7b\u5757\u7684\u4e2a\u6570\u4e3a $O(\\sqrt{n})$ \uff0c\u5f62\u6001\u4e3a**\u4e00\u6761\u94fe**\u3002\n\n\u7b2c\u4e00\u7c7b\u5757\u7684\u4e2a\u6570\u4e0d\u9650\uff0c\u5f62\u6001\u4e3a\u4e00\u68f5\u5b50\u6811\u3002\u4e00\u7c7b\u5757\u4e0b\u9762\u4e0d\u518d\u6709\u5757\uff0c\u4e00\u7c7b\u5757\u4e0a\u9762\u4e00\u5b9a\u662f\u4e8c\u7c7b\u5757\u3002\n\n\u8bb0 $f_u$ \u4e3a $u$ \u7684\u7236\u4eb2\uff0c $b_u$ \u4e3a $u$ \u6240\u5728\u5757\u7684\u5173\u952e\u70b9\u3002\n\n- \u5bf9 $u$ \u8fdb\u884c\u94fe\u52a0\n\n  \u8bb0 $w_u$ \u8868\u793a $u$ \u5230\u5173\u952e\u70b9\u7684\u8def\u5f84\u7684\u548c\u3002\n\n  \u82e5 $u$ \u5728\u4e00\u7c7b\u5757\u4e2d\uff0c\u66b4\u529b $\\rm dfs$ \u6574\u5757\u66f4\u65b0 $w$ \uff0c\u7136\u540e\u4fee\u6539 $f_{b_u}$ \uff0c\u5219\u8f6c\u5316\u4e3a $u$ \u5728\u4e8c\u7c7b\u5757\u4e2d\u7684\u60c5\u51b5\u3002\n\n  \u82e5 $u$ \u5728\u4e8c\u7c7b\u5757\u4e2d\uff0c\u4ecd\u7136\u5148\u66b4\u529b $\\rm dfs$ \u6574\u5757\u66f4\u65b0 $w$ \u3002\n\n  $u$ \u8fd8\u4f1a\u5bf9\u7956\u5148\u5757\u7684 $w$ \u8fdb\u884c\u8d21\u732e\u3002\u6ce8\u610f\u5230\u7531\u4e8e\u4e8c\u7c7b\u5757\u5f62\u6001\u662f\u4e00\u6761\u94fe\uff0c\u4e00\u5b9a\u662f\u6574\u4e2a\u5757\u90fd\u52a0\uff0c\u53ea\u9700\u8981\u8bb0\u4e0b\u6574\u5757\u6807\u8bb0\u3002\n\n  \u5bf9\u4e8e**\u4e8c\u7c7b\u5757**\u7684\u5173\u952e\u70b9\uff0c\u7ef4\u62a4\u5230\u6839\u7684\u8def\u5f84\u7684\u548c\uff0c\u7531\u4e8e\u4e8c\u7c7b\u5757\u7684\u4e2a\u6570\u8f83\u5c11\uff0c\u53ef\u4ee5\u6bcf\u6b21\u4fee\u6539\u540e\u66b4\u529b $\\rm dfs$ \u8ba1\u7b97\u3002\n\n- \u5bf9 $u$ \u8fdb\u884c\u94fe\u67e5\u8be2\n\n  \u82e5 $u$ \u5728\u4e00\u7c7b\u5757\u4e2d\uff0c\u7b54\u6848\u52a0\u4e0a $w_u$ \uff0c\u7136\u540e\u67e5\u8be2 $f_{b_u}$ \uff0c\u5219\u8f6c\u5316\u4e3a $u$ \u5728\u4e8c\u7c7b\u5757\u4e2d\u7684\u60c5\u51b5\u3002\n\n  \u82e5 $u$ \u5728\u4e8c\u7c7b\u5757\u4e2d\uff0c\u7b54\u6848\u4e3a $tag_{b_u}\\times td_u+w_u+w'_{b_u}$\n\n  \u5176\u4e2d $tag_{b_u}$ \u8868\u793a\u5757 $b_u$ \u88ab\u6574\u4f53\u52a0\u7684\u6b21\u6570\uff0c $td_u$ \u8868\u793a $u$ \u5230\u5173\u952e\u70b9\u7684\u8ddd\u79bb\uff0c $w'_{b_u}$ \u8868\u793a\u5173\u952e\u70b9 $b_u$ \u5230\u6839\u7684\u8def\u5f84\u548c\u3002\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O\\big(n(\\sqrt{n}+\\sqrt{m})\\big)$ \uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n\u5e38\u6570\u4e0d\u5927\uff0c\u6700\u6162\u70b9 $\\rm 2.2s$\u3002\n\n```cpp\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#include<vector>\n#include<cmath>\n#define uint unsigned int\n#define pb emplace_back\n#define MaxN 200500\nusing namespace std;\nnamespace io {}using namespace io;\nvector<int> g[MaxN],p[MaxN];\nvector<uint> l[MaxN];\nint siz[MaxN],fa[MaxN],tf[MaxN]\n   ,f2[MaxN],p2[1050],tn,stk[MaxN],top,BS2;\nuint dis[MaxN],lf[MaxN],td[MaxN],sd[MaxN];\nvoid pfs(int u)\n{\n  siz[u]=1;\n  for (int i=0,v;i<g[u].size();i++)\n    if (!siz[v=g[u][i]]){\n      dis[v]=dis[fa[v]=u]+(lf[v]=l[u][i]);\n      pfs(v);\n      siz[u]+=siz[v];\n    }\n}\nvoid pfs2(int u)\n{\n  int sav=top;\n  for (int i=0;i<g[u].size();i++)\n    if (siz[u]>siz[g[u][i]])pfs2(g[u][i]);\n  stk[++top]=u;\n  if (u==1||top-sav>=BS2||siz[u]<=BS2&&siz[fa[u]]>BS2||siz[fa[u]]-siz[u]>BS2)\n    while(top>sav)tf[stk[top--]]=u;\n}\nbool cmpP(int A,int B){return dis[A]<dis[B];}\nuint val[MaxN],tag[MaxN],w[MaxN],w2[MaxN],sum[MaxN];\nvoid add(int u)\n{\n  int t=tf[u];\n  for (int p=u;p!=t;p=fa[p])val[p]+=lf[p];\n  val[t]+=lf[t];w[t]=val[t];\n  for (int i=1;i<p[t].size();i++){\n    int v=p[t][i];\n    w[v]=w[fa[v]]+val[v];\n  }\n  if (siz[t]<BS2)add(fa[t]);\n  else {\n    sum[t]+=td[u];\n    for (int p=t;f2[p];p=f2[p]){\n      tag[f2[p]]++;\n      sum[f2[p]]+=td[fa[p]];\n    }\n    for (int i=2;i<=tn;i++){\n      int v=p2[i];\n      w2[v]=w2[f2[v]]+sum[f2[v]];\n    }\n  }\n}\ninline uint qry(int u)\n{return siz[tf[u]]<BS2 ? w[u]+qry(fa[tf[u]]) : w[u]+w2[tf[u]]+tag[tf[u]]*td[u];}\nstruct Data{int l,r,p;};\nvector<Data> bl[MaxN],br[MaxN];\nData b[MaxN];int BS;\nbool cmpQ(const Data &A,const Data &B)\n{return A.l/BS==B.l/BS ? (A.l/BS)&1 ? A.r<B.r : A.r>B.r : A.l<B.l;}\nuint sav[MaxN],ans[MaxN];\nint n,m;\nint main()\n{\n  n=rd();m=rd();\n  BS2=min((int)(sqrt(n)+5),n);\n  BS=0.75*n/sqrt(m)+5;\n  for (int i=1;i<n;i++){\n    int u=rd(),v=rd();uint len=rd();\n    g[u].pb(v);l[u].pb(len);\n    g[v].pb(u);l[v].pb(len);\n  }\n  for (int i=1;i<=m;i++)\n    {b[i].l=rd();b[i].r=rd();b[i].p=i;}\n  sort(b+1,b+m+1,cmpQ);\n  pfs(1);pfs2(1);\n  for (int i=1;i<=n;i++){\n    sd[i]=sd[i-1]+dis[i];\n    td[i]=dis[i]-dis[fa[tf[i]]];\n    p[tf[i]].pb(i);\n  }\n  p2[tn=1]=1;\n  sort(p[1].begin(),p[1].end(),cmpP);\n  for (int u=2;u<=n;u++)if (tf[u]==u){\n    sort(p[u].begin(),p[u].end(),cmpP);\n    if (siz[u]>=BS2)p2[++tn]=u;\n    int v=fa[u];while(tf[v]!=v)v=fa[v];\n    f2[u]=v;\n  }sort(p2+1,p2+tn+1,cmpP);\n  for (int i=1,l=1,r=0;i<=m;i++){\n    if (b[i].l<l){bl[r].pb((Data){b[i].l,l-1,b[i].p});l=b[i].l;}\n    if (r<b[i].r){br[l].pb((Data){r+1,b[i].r,b[i].p});r=b[i].r;}\n    if (l<b[i].l){bl[r].pb((Data){l,b[i].l-1,-b[i].p});l=b[i].l;}\n    if (b[i].r<r){br[l].pb((Data){b[i].r+1,r,-b[i].p});r=b[i].r;}\n  }\n  #define ad(p,x) if (p<0)ans[-p]-=x;else ans[p]+=x;\n  for (int i=1;i<=n;i++){\n    for (int j=0;j<br[i].size();j++){\n      Data &now=br[i][j];uint ret=0;\n      for (int r=now.l;r<=now.r;r++)\n        ret+=(uint)(r-i)*dis[r]+(sd[r-1]-sd[i-1])-2u*(-qry(r));\n      ad(now.p,ret);\n    }\n    add(i);sav[i]=qry(i);\n    for (int j=0;j<bl[i].size();j++){\n      Data &now=bl[i][j];uint ret=0;\n      for (int l=now.l;l<=now.r;l++)\n        ret+=(uint)(i-l)*dis[l]+(sd[i]-sd[l])-2u*(qry(l)-sav[l]);\n      ad(now.p,ret);\n    }\n  }\n  for (int i=1;i<=n;i++)\n    for (int j=0;j<br[i].size();j++){\n      Data &now=br[i][j];uint ret=0;\n      for (int r=now.l;r<=now.r;r++)ret-=2u*(sav[r]-dis[r]);\n      ad(now.p,ret);\n    }\n  for (int i=1;i<=m;i++)ans[b[i].p]+=ans[b[i-1].p];\n  for (int i=1;i<=m;i++)print(ans[i]),putc('\\n');\n  flush();\n  return 0;\n}\n```",
        "postTime": 1625182403,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 \u3010P6778 [Ynoi2009] rpdq\u3011"
    },
    {
        "content": "\u672c\u6587\u4e3b\u8981\u53c2\u8003 IOI 2021 \u4e2d\u56fd\u56fd\u5bb6\u96c6\u8bad\u961f\u8bba\u6587\u300a\u6d45\u8c08\u4e00\u7c7b\u6811\u5206\u5757\u7684\u6784\u5efa\u7b97\u6cd5\u53ca\u5176\u5e94\u7528\u300b\u5468\u6b23\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u8f6c\u5316\u5c06\u95ee\u9898\u53d8\u4e3a\u6c42 $(r-l)\\sum\\limits_{i=l}^r\\operatorname{dep}(i)-2\\sum\\limits_{i=l}^r\\sum\\limits_{j=i+1}^r\\operatorname{dep}(\\operatorname{lca}(i,j))$\u3002\n\n\u663e\u7136\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u540e\u9762\u7684\u90e8\u5206\u3002\n\n\u8003\u8651\u83ab\u961f\uff0c\u52a0\u5165/\u5220\u9664\u4e00\u4e2a\u5143\u7d20\u65f6\u4ea7\u751f\u7684\u8d21\u732e\u662f\u7ecf\u5178\u9898\uff0c[[LNOI2014]LCA](https://www.luogu.com.cn/problem/P4211)\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u94fe\u52a0\u94fe\u67e5\u8be2\u548c\u3002\n\n\u6211\u4eec\u83ab\u961f\u4e8c\u6b21\u79bb\u7ebf\uff0c\u8fd9\u6837\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u652f\u6301 $O(\\sqrt n)$ \u7ed9 $a_i$ \u52a0 $1$\uff0c$i$ \u53d6\u5728\u6839\u5230\u4fee\u6539\u70b9\u7684\u6240\u6709\u8fb9\u7684\u7f16\u53f7\uff1b$O(1)$ \u67e5\u8be2 $\\sum a_iw_i$ \u7684\u6570\u636e\u7ed3\u6784\uff0c$w_i$ \u4e3a\u8fb9\u6743\uff0c$i$ \u53d6\u6839\u5230\u67e5\u8be2\u70b9\u7684\u6240\u6709\u8fb9\u7684\u7f16\u53f7\u7684\u6570\u636e\u7ed3\u6784\u3002\n\n\u6211\u4eec\u4f7f\u7528 $\\text{top cluster}$ \u8fdb\u884c\u6811\u5206\u5757\u3002\n\n#### \u5b9a\u4e49\uff1a\n\n\u7c07\u662f\u4e00\u4e2a\u8054\u901a\u5b50\u56fe\uff0c\u81f3\u591a\u6709\u4e24\u4e2a\u70b9\u548c\u5168\u6811\u5176\u4ed6\u4f4d\u7f6e\u8fde\u63a5\u3002\n\n\u8fd9\u4e24\u4e2a\u70b9\u79f0\u4e3a\u754c\u70b9\uff0c\u7c07\u5185\u5176\u4ed6\u70b9\u6210\u4e3a\u5185\u70b9\u3002\n\n\u754c\u70b9\u95f4\u7684\u8def\u5f84\u79f0\u4e3a\u7c07\u8def\u5f84\u3002\n\n\u6811\u5206\u5757\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u628a\u6811\u5212\u5206\u4e3a $O(\\frac nB)$ \u4e2a\u5927\u5c0f\u4e3a $O(B)$ \u7684\u4e0d\u4ea4\u7c07\u3002\n\n\u5c06\u754c\u70b9\u770b\u4e3a\u70b9\uff0c\u7c07\u770b\u4e3a\u8fb9\uff0c\u5f62\u6210\u7684\u6811\u79f0\u4e3a\u6536\u7f29\u6811\u3002\n\n#### \u6784\u9020\u65b9\u6cd5\uff1a\n\n$\\text{dfs}$ \u7684\u65f6\u5019\u7ef4\u62a4\u4e00\u4e2a\u6808\u5b58\u653e\u672a\u5f52\u7c7b\u7684\u8fb9\u3002\n\n\u6211\u4eec\u53ea\u5728\u4e09\u79cd\u60c5\u51b5\u4e0b\u628a\u5f53\u524d\u70b9\u4f5c\u4e3a\u754c\u70b9\uff0c\u5e76\u5c06\u8fb9\u5f39\u51fa\u3002\n\n- \u5f53\u524d\u70b9\u4e3a\u6839\u8282\u70b9\uff1b\n- \u5f53\u524d\u70b9\u7684\u513f\u5b50\u4e2d\u5b58\u5728\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u542b\u6709\u754c\u70b9\u7684\u5b50\u6811\uff1b\n- \u6808\u4e2d\u8fb9\u6570\u91cf\u5927\u4e8e $B$\u3002\n\n\u95ee\u9898\u62bd\u8c61\u4e3a\u7ed9\u5b9a\u4e24\u4e2a\u5e8f\u5217 $a$\uff0c$b$\u3002\u5c06\u5e8f\u5217\u5212\u5206\u4e3a\u82e5\u5e72\u6bb5\u4f7f\u5f97\u6bcf\u4e2a\u5b50\u6bb5 $\\sum b$ \u4e0d\u8d85\u8fc7 $1$\uff0c$\\sum a$ \u4e0d\u8d85\u8fc7 $B$\u3002\n\n\u76f4\u63a5\u8d2a\u5fc3\u5730\u53d6\u6700\u957f\u7684\u5408\u6cd5\u524d\u7f00\u5c31\u53ef\u4ee5\u4e86\uff0c\u6b63\u786e\u6027\u8bc1\u660e\u53ef\u4ee5\u89c1\u8bba\u6587\uff0c\u4e0d\u5728\u6b64\u5c55\u5f00\u3002\n\n\u56de\u5230\u672c\u9898\uff0c\u6211\u4eec\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5230\u5b83\u6240\u5728\u7c07\u6df1\u5ea6\u5c0f\u7684\u754c\u70b9\u7ecf\u8fc7\u7684\u7c07\u8def\u5f84\u7684\u8fb9\u6743\u548c\u548c\u5230\u5b83\u6240\u5728\u7c07\u6df1\u5ea6\u5c0f\u7684\u754c\u70b9\u7ecf\u8fc7\u7684\u8fb9\u6743\u548c\u3002\n\n\u6bcf\u6b21\u4fee\u6539\uff0c\u628a\u4fee\u6539\u70b9\u6240\u5c5e\u7c07\u91cd\u65b0\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u5230\u5b83\u6240\u5728\u7c07\u6df1\u5ea6\u5c0f\u7684\u754c\u70b9\u7ecf\u8fc7\u7684\u8fb9\u6743\u548c\uff0c\u5bf9\u4e8e\u5176\u4f59\u7c07\uff0c\u4e00\u5b9a\u53ea\u6709\u7c07\u8def\u5f84\u4e0a\u7684\u8fb9\u88ab\u4fee\u6539\uff0c\u6253\u6807\u8bb0\u5373\u53ef\u89e3\u51b3\uff0c\u6700\u540e\u5728\u6536\u7f29\u6811\u4e0a\u505a\u4e00\u904d\u524d\u7f00\u548c\u3002\n\n\u67e5\u8be2\u65f6\u5c06\u8d21\u732e\u5206\u4e3a\u4e09\u90e8\u5206\uff1a\n\n- \u6536\u7f29\u6811\u4e0a\u7684\u524d\u7f00\u548c\uff1b\n- \u7c07\u5185\u7684\u524d\u7f00\u548c\uff1b\n- \u88ab\u6807\u8bb0\u7ef4\u62a4\u7684\u90e8\u5206\uff0c\u5373\u6807\u8bb0\u4e58\u201c\u6bcf\u4e2a\u70b9\u5230\u5b83\u6240\u5728\u7c07\u6df1\u5ea6\u5c0f\u7684\u754c\u70b9\u7ecf\u8fc7\u7684\u7c07\u8def\u5f84\u7684\u8fb9\u6743\u548c\u201d\u3002\n\n\u76f4\u63a5\u52a0\u8d77\u6765\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5982\u679c\u4f60\u88ab\u5361\u5e38\uff0c\u4e0d\u8981\u60ca\u614c\uff0c\u628a `vector` \u6362\u6210\u624b\u5199\u7684\u5185\u5b58\u6c60\u6216\u8005 `basic_string` \u90fd\u80fd\u8fc7\u3002\n\n\u4ee3\u7801\u5c31\u4e0d\u653e\u4e86\uff0c\u5982\u679c\u6709\u9700\u8981\u53ef\u4ee5\u79c1\u4fe1\u6211\u3002",
        "postTime": 1615799176,
        "uid": 55707,
        "name": "gxy001",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6778 [Ynoi2009] rpdq"
    },
    {
        "content": "rpdq = range pair distance query\n\n\u4e8b\u5b9e\u8bc1\u660e\u5e8f\u5217\u5206\u5757\u7684\u505a\u6cd5\u662f\u53ef\u4ee5\u901a\u8fc7\u7684\u3002\n\n\u5bf9\u539f\u5e8f\u5217\u8fdb\u884c\u5206\u5757\uff0c\u5219\u6bcf\u4e2a\u8be2\u95ee\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\uff1a\u5de6\u8fb9\u8fb9\u89d2\u5757\uff0c\u4e2d\u95f4\u90e8\u5206\uff0c\u53f3\u8fb9\u8fb9\u89d2\u5757\u3002\u8003\u8651\u8ba1\u7b97\u8fd9\u51e0\u4e2a\u90e8\u5206\u4e4b\u95f4\u7684\u8d21\u732e\u4ee5\u53ca\u6bcf\u90e8\u5206\u5185\u90e8\u7684\u8d21\u732e\uff0c\u76f8\u52a0\u5373\u4e3a\u7b54\u6848\u3002\n\n\u5148\u6765\u8003\u8651\u6574\u5757\u5bf9\u5176\u4ed6\u90e8\u5206\u7684\u8d21\u732e\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 $O(n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u6c42\u51fa\u8fd9\u4e2a\u5757\u4e2d\u7684\u70b9\u4e0e**\u6bcf\u4e2a\u70b9**\u7684\u8ddd\u79bb\u548c\u3002\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u95ee\u9898\uff0c\u5177\u4f53\u505a\u6cd5\u5982\u4e0b\uff1a\n\n- \u5c06\u5757\u5185\u7684\u70b9\u8bb0\u4e3a\u5173\u952e\u70b9\u3002\n- \u4ee4 $s_i$ \u8868\u793a $i$ \u5b50\u6811\u4e2d\u7684\u5173\u952e\u70b9\u4e2a\u6570\u3002$s_i$ \u53ef\u4ee5 $O(n)$ dfs \u5f97\u5230\u3002\n- \u4ee4 $f_i$ \u8868\u793a $i$ \u5230\u6240\u6709\u5173\u952e\u70b9\u7684\u8ddd\u79bb\u548c\u3002$f_1$ \u7684\u7b54\u6848\u5c31\u662f\u6240\u6709\u5173\u952e\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u548c\u3002\n- \u8003\u8651\u4ece $f_{fa_i}$ \u5f97\u5230 $f_i$\uff0c\u53ea\u6709 $i$ \u548c $fa_i$ \u4e4b\u95f4\u7684\u8fb9\u7ecf\u8fc7\u7684\u6b21\u6570\u53d1\u751f\u53d8\u5316\u3002\u6709 $s_i$ \u4e2a\u5173\u952e\u70b9\u539f\u6765\u7ecf\u8fc7\u4e86\u8fd9\u6761\u8fb9\uff0c\u73b0\u5728\u4e0d\u7ecf\u8fc7\u3002\u5176\u4ed6\u7684\u5173\u952e\u70b9\u539f\u6765\u4e0d\u7ecf\u8fc7\uff0c\u73b0\u5728\u7ecf\u8fc7\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5 $O(n)$ \u8f6c\u79fb\u5f97\u5230\u6240\u6709 $f$\u3002\u5bb9\u6613\u4f7f\u7528 dfs \u5b9e\u73b0\u3002\n\n\u6211\u4eec\u5bf9 $f$ \u8fdb\u884c\u524d\u7f00\u548c\uff0c\u5c31\u53ef\u4ee5 $O(1)$ \u56de\u7b54\u6bcf\u4e2a\u8be2\u95ee\u4e2d\uff0c\u8fd9\u4e2a\u5757\u5bf9\u5176\u4ed6\u90e8\u5206\u7684\u8d21\u732e\u4e86\u3002\u5bf9\u8be2\u95ee\u79bb\u7ebf\u540e\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u5757\u90fd\u679a\u4e3e\u8be2\u95ee\uff0c\u7136\u540e\u52a0\u4e0a\u8fd9\u4e2a\u5757\u7684\u8d21\u732e\u3002\n\n\u56e0\u6b64\u8fd9\u91cc\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n+m)\\sqrt n)$\u3002\n\n\u4e0a\u9762\u5904\u7406\u4e86\u4e2d\u95f4\u90e8\u5206\u5bf9\u6240\u6709\u90e8\u5206\u7684\u8d21\u732e\uff0c\u63a5\u4e0b\u6765\u53ea\u8981\u8003\u8651\u4e24\u4e2a\u8fb9\u89d2\u4e4b\u95f4\u7684\u8d21\u732e\u4ee5\u53ca\u4e24\u4e2a\u8fb9\u89d2\u5185\u90e8\u7684\u8d21\u732e\u5373\u53ef\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u4e24\u4e2a\u8fb9\u89d2\u5757\u653e\u5728\u4e00\u8d77\uff0c\u90a3\u4e48\u5c31\u662f\u8981\u6c42 $O(\\sqrt n)$ \u4e2a\u70b9\u7684\u4e24\u4e24\u8ddd\u79bb\u548c\u3002\n\n\u8003\u8651\u5efa\u51fa\u865a\u6811\u540e\uff0c\u5c31\u53ef\u4ee5\u50cf\u4e0a\u9762\u8ba1\u7b97\u6574\u5757\u7684\u8d21\u732e\u4e00\u6837\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u5230\u5176\u4ed6\u5173\u952e\u70b9\u7684\u8ddd\u79bb\u548c\u4e86\u3002\u5355\u6b21\u8ba1\u7b97\u7684\u590d\u6742\u5ea6\u4e3a $O(\\sqrt n)$\u3002\n\n\u90a3\u4e48\u53ea\u6709\u4e00\u4e2a\u95ee\u9898\u4e86\uff1a\u5efa $m$ \u4e2a\u70b9\u7684\u865a\u6811\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m\\log m)$\u3002\n\n\u8fd9\u91cc\u7684 $\\log$ \u4e3b\u8981\u8868\u73b0\u5728\u5bf9 dfs \u5e8f\u7684\u6392\u5e8f\u4e0a\u9762\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u57fa\u6570\u6392\u5e8f\u6765\u53bb\u6389 $\\log$\u3002\u4f46\u662f $2\\times 10^5$ \u7684\u8303\u56f4\u4e0b\uff0c\u9700\u8981\u4ee5 $512$ \u4e3a\u57fa\u6570\u624d\u80fd\u4fdd\u8bc1\u590d\u6742\u5ea6\u548c\u5b9e\u9645\u6548\u7387\u3002\u800c $512$ \u7684\u5927\u5c0f\u53ef\u80fd\u5361\u4e0d\u8fdb Cache \u5bfc\u81f4\u8868\u73b0\u8f83\u5dee\u3002\u56e0\u6b64\u8003\u8651\u5176\u4ed6\u5b9e\u73b0\u65b9\u5f0f\u3002\n\n\u89e3\u51b3\u65b9\u6848\u4e5f\u5f88\u5957\u8def\uff1a\u5bf9\u6bcf\u4e2a\u5757\u91cc\u7684\u70b9\u9884\u5148\u6309 dfs \u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u5bf9\u4e24\u4e2a\u5757\u91cc\u7684\u70b9\uff0c\u53ef\u4ee5 $O(\\sqrt n)$ \u63d0\u53d6\u51fa\u5b83\u4eec\u6309\u7167 dfs \u5e8f\u6392\u597d\u5e8f\u7684\u5e8f\u5217\uff0c\u7136\u540e\u518d $O(\\sqrt n)$ \u5f52\u5e76\u5373\u53ef\u3002\n\n\u5269\u4e0b\u7684\u5c31\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u7528\u6808\u6765\u5efa\u865a\u6811\u7684\u8fc7\u7a0b\u3002\u9700\u8981\u7528\u5230 $O(n\\log n)-O(1)$ \u7684\u6c42\u6700\u8fd1\u516c\u5171\u7956\u5148\u7b97\u6cd5\u4ee5\u4fdd\u8bc1\u590d\u6742\u5ea6\u4e3a $O(\\sqrt n)$\uff08\u4e0d\u8003\u8651 $O(n)-O(1)$\uff0c\u6ca1\u7814\u7a76\u8fc7\uff0c\u4e5f\u5e76\u4e0d\u4f1a\u5728\u8fd9\u91cc\u6709\u66f4\u597d\u7684\u8868\u73b0\uff09\u3002\n\n\u4e8e\u662f\u6211\u4eec\u505a\u5230\u4e86\u5355\u6b21 $O(\\sqrt n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u8fd9\u90e8\u5206\u4e00\u5171\u4f1a\u6267\u884c $O(m)$ \u6b21\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m\\sqrt n)$\u3002\n\n\u6ce8\u610f\u8fd9\u91cc\u8ba1\u7b97\u7684\u65f6\u5019\uff0c\u4e00\u4e2a\u70b9\u5bf9\u7684\u8d21\u732e\u88ab\u8ba1\u7b97\u4e86 $2$ \u6b21\uff0c\u56e0\u6b64\u6700\u540e\u8981\u9664\u4ee5 $2$\u3002\u6240\u4ee5\u6211\u4eec\u81f3\u5c11\u8981\u5b58\u50a8 $33$ \u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u9700\u8981\u7528\u5230 $64$ \u4f4d\u6574\u5f62\u3002\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u7684\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n+m)\\sqrt n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n+m)$\u3002\n\n---\n\n\u7136\u800c\u7531\u4e8e\u8be5\u5e8f\u5217\u5206\u5757\u7684\u505a\u6cd5\u5e38\u6570\u8f83\u5927\uff08\u6807\u7b97\u7528\u4e86\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\uff0c\u6211\u76ee\u524d\u5c1a\u672a\u60f3\u5230\u590d\u6742\u5ea6\u6b63\u786e\u7684\u505a\u6cd5\uff09\uff0c\u867d\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u8fbe\u5230\u4e86\u9898\u76ee\u8981\u6c42\uff0c\u4f46\u662f\u76f4\u63a5\u83bd\u5b8c\u4ea4\u4e0a\u53bb\u51e0\u4e4e\u4e00\u5b9a\u4f1a\u5f97\u5230 $0$ \u5206\u7684\u597d\u6210\u7ee9\u3002\n\n\u6240\u4ee5\u611f\u8c22 skip2004 \u7ed9\u6211\u7684\u4ee3\u7801\u8fdb\u884c\u5e38\u6570\u4f18\u5316\u3002\n\n\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e9b\u6211\u80fd\u60f3\u5230\u7684\uff0c\u4ee5\u53ca\u6211\u80fd\u770b\u5f97\u61c2\u7684\u5e38\u6570\u4f18\u5316\u3002\n\n\u9996\u5148\u8fd9\u4e2a dfs \u4e00\u770b\u5c31\u975e\u5e38\u6162\u3002\u6211\u4eec\u8003\u8651\u76f4\u63a5\u5728 dfs \u5e8f\u4e0a\u6c42\u7b54\u6848\u3002\u8fd9\u6837\u5c31\u628a\u4e00\u4e2a\u9012\u5f52\u53d8\u6210\u4e86\u4e24\u4e2a\u7b80\u5355\u7684\u5faa\u73af\u8bed\u53e5\u3002\n\n\u6574\u5757\u7684\u90e8\u5206\u53ea\u5269\u4e0b\u4e00\u4e9b\u5faa\u73af\u8bed\u53e5\uff0c\u800c\u8fb9\u89d2\u90e8\u5206\u5374\u6709\u4e2a\u865a\u6811\uff0c\u8fd8\u8981\u7528\u5230\u5927\u91cf $64$ \u4f4d\u6574\u6570\u7684\u8fd0\u7b97\uff0c\u56e0\u6b64\u74f6\u9888\u5728\u8fb9\u89d2\u8d21\u732e\u7684\u8ba1\u7b97\u4e0a\u3002\n\n\u7531\u4e8e\u8fb9\u89d2\u8d21\u732e\u4e2d\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u8d21\u732e\u7684\u548c\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e0d\u7528\u6c42\u51fa\u6bcf\u4e2a\u70b9\u5230\u5176\u4ed6\u8282\u70b9\u7684\u8d21\u732e\uff0c\u800c\u662f\u6c42\u865a\u6811\u4e0a\u6bcf\u6761\u8fb9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\u8fd9\u6837\u8d21\u732e\u4e0d\u4f1a\u7b97\u91cd\uff0c\u907f\u514d\u4e86 $64$ \u4f4d\u6574\u6570\uff0c\u800c\u4e14\u53ef\u4ee5\u7701\u4e0b\u4e00\u4e2a\u5faa\u73af\u3002\n\n\u8fd9\u6837\u5904\u7406\u4ee5\u540e\uff0c\u7b54\u6848\u53ef\u4ee5\u5728\u5efa\u865a\u6811\u7684\u540c\u65f6\u8ba1\u7b97\uff0c\u4e0d\u9700\u8981\u5728\u5efa\u51fa\u865a\u6811\u540e\u518d\u8ba1\u7b97\u4e86\u3002\u8fd9\u6837\u53c8\u8282\u7701\u4e86\u8bb0\u5f55\u6700\u7ec8\u7684 dfs \u5e8f\u5217\u7684\u5f00\u9500\u3002\n\n- \u5efa\u865a\u6811\u65f6\uff0c\u9884\u5148\u6c42\u51fa\u539f dfs \u5e8f\u5217\u4e2d\u76f8\u90bb\u4e24\u70b9\u7684 LCA\uff0c\u8fd9\u6837\u4f1a\u53d8\u5feb\u3002\n- \u51cf\u5c11\u6808\u90e8\u5206\u7684\u5bfb\u5740\u3002\n- \u4f18\u5316\u8be2\u95ee LCA \u7684\u5e38\u6570\u3002\n- \u6539\u8fdb\u533a\u95f4\u5728\u533a\u95f4\u5185\u7684\u5224\u65ad\uff08\u6548\u679c\u4e0d\u660e\u663e\uff09\u3002\n- IO \u4f18\u5316\uff08\u6bd4\u8f83\u5e38\u89c4\uff0c\u6548\u679c\u53ef\u80fd\u4e0d\u660e\u663e\uff09\u3002\n- \u8c03\u6574\u5757\u5927\u5c0f\uff08\u91cd\u8981\uff09\u3002\n\n\u52a0\u4e0a\u5404\u79cd\u5408\u7406\u7684\u4f18\u5316\u540e\uff0c\u8be5\u7b97\u6cd5\u662f\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u7684\u3002",
        "postTime": 1602260632,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "range pair distance query"
    },
    {
        "content": "upd:2021/7/5 \u592a\u5c34\u5c2c\u4e86\uff0c\u6ca1\u6709\u53d1\u73b0\u4e4b\u524d\u6811\u5206\u5757\u662f\u5047\u7684\u5c31\u76f4\u63a5\u83bd\u4e0a\u53bb\u4e86\uff0c\u628a\u4ee3\u7801\u91cd\u8c03\u4e86\u4e00\u4e0b\uff0c\u611f\u8c22 @b1ngxu \u7684 Hack \u3002           \n\n\u76f8\u4fe1\u5728\u4e8c\u79bb\u83ab\u961f\u548ctop cluster \u6811\u5206\u5757\u666e\u53ca\u4e4b\u540e\uff0c\u8fd9\u9053\u9898\u4f1a\u53d8\u5f97\u6709\u70b9\u5c34\u5c2c\u2026\u2026                \n\n\u9996\u5148\u5bf9\u4e8e\u8fd9\u79cd $\\sum$ \u5957 $\\sum$ \u7684\u7ef4\u62a4\uff0c\u6211\u4eec\u4e00\u822c\u90fd\u8003\u8651\u83ab\u961f\uff0c\u6bd5\u7adf\u4f60\u83ab\u961f\u5355\u70b9\u52a0\u8fdb\u53bb\u7684\u65f6\u5019\u624d\u53ef\u4ee5\u65b9\u4fbf\u62c6\u6210\u4e00\u53ea $\\sum$ \u3002               \n                 \n\n\u5728[\u6b64\u9898](https://www.luogu.com.cn/problem/P4211)\u7684\u94fa\u57ab\u4e0b\uff0c\u6211\u4eec\u8003\u8651\u8fd9\u4e48\u8ba1\u7b97\u6211\u4eec\u7684\u7b54\u6848\uff1a               \n\n- $Ans = \\sum_{i = l}^r\\sum_{j = i + 1}^r dep(i,j)$            \n\n- $Ans = \\sum_{i = l} ^ r dep(i) \\times (r - l) - \\sum_{i = l}^r\\sum_{j = i + 1}^r dep(Lca(i,j))$             \n\n\u6211\u4eec\u53d1\u73b0\u524d\u9762\u8fd9\u4e2a\u4e1c\u897f\u76f4\u63a5\u524d\u7f00\u548c\u63a8\u4e00\u904d\u5c31\u53ef\u4ee5\u7ef4\u62a4\u4e86\uff0c\u800c\u540e\u9762\u7684\u4e1c\u897f\u2026\u2026\u8c8c\u4f3c\u8fd8\u662f\u4e24\u53ea $\\sum$ \u5957\u4e00\u8d77\u5b8c\u5168\u4e0d\u53ef\u505a\u554a\u3002           \n\n\u8003\u8651\u4f7f\u7528\u83ab\u961f\u8ba1\u7b97\u7b54\u6848\uff0c\u5982\u679c\u5f53\u524d\u52a0\u5165\u7684\u70b9\u4e3a $i$ \uff0c\u90a3\u4e48\u6211\u4eec\u4e00\u6b21\u53ea\u9700\u8981\u5f80\u7b54\u6848\u91cc\u52a0\u4e0a $i$ \u5bf9 $[l , r]$ \u7684\u8d21\u732e\u5373\u53ef\u3002              \n\n\u4e0d\u8fc7\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u8fd8\u662f\u4e0d\u597d\u76f4\u63a5\u7b97\uff0c\u5957\u7528[\u6b64\u9898](https://www.luogu.com.cn/problem/P4211)\u6211\u4eec\u77e5\u9053\u5982\u679c\u79bb\u7ebf\u4e0b\u6765\u7684\u8bdd\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u7528\u524d\u7f00\u7684\u65b9\u5f0f\u8fdb\u884c\u67e5\u8be2\uff0c\u8fd9\u8ba9\u6211\u4eec\u60f3\u5230\u4e86\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\uff0c\u521a\u597d\u6211\u4eec\u83ab\u961f\u8f6c\u79fb\u65f6\u5019\u7684\u8d21\u732e\u4e5f\u4e0d\u597d\u8ba1\u7b97\uff0c\u6240\u4ee5\u4e00\u6b21\u89e3\u51b3\u4fe9\u3002          \n\n\u6211\u4eec\u4ee5\u533a\u95f4\u53f3\u7aef\u70b9\u5e73\u79fb\u4e3e\u4f8b\uff1a           \n\n- \u533a\u95f4 $[l , r]$ \u5e73\u79fb\u81f3\u533a\u95f4 $[l , r + 1]$ \uff0c\u5c06\u8d21\u732e\u62c6\u4e3a $[1 , r , r + 1] - [1 , l - 1 , r + 1]$ \uff0c\u5bf9\u4e8e\u524d\u534a\u8fd8\u662f\u4e8c\u79bb\u83ab\u961f\u505a\u6cd5\u5355\u72ec\u62ff\u51fa\u6765\u7b97\uff0c\u5bf9\u4e8e\u540e\u534a\uff0c\u5728\u79bb\u7ebf\u4e0b\u6765\u63a8\u5b8c $[1 , l - 1]$ \u533a\u95f4\u7684\u65f6\u5019\u62ff\u51fa\u6765\u5355\u70b9\u67e5\u8be2 $1 \\sim r + 1$ \u7684\u8def\u5f84\u8d21\u732e\u5373\u53ef\u3002               \n\n\u5728\u8fd9\u91cc\u987a\u4fbf\u63d0\u4e00\u4e0b\u600e\u4e48\u5355\u70b9 $O(1)$ \u67e5\u8be2$1 \\sim r + 1$ \u7684\u8def\u5f84\u8d21\u732e\u3002             \n\n- \u7ef4\u62a4\u4e00\u6bb5\u6536\u7f29\u6811\u4e0a\u7684\u524d\u7f00\u8def\u5f84\u8d21\u732e\uff0c\u8fd9\u4e2a\u6bcf\u6b21\u76f4\u63a5\u63a8\u5e73\u5373\u53ef\uff1b                \n\n- \u7ef4\u62a4\u6811\u7c07\u5185\u7684\u7c07\u8def\u5f84\u8d21\u732e\uff1b      \n\n- \u7ef4\u62a4\u7c07\u8def\u5f84\u4e0a\u5185\u6700\u8fd1\u4e00\u70b9\u5230\u8fd9\u4e2a\u70b9\u8def\u5f84\u8d21\u732e\uff1b         \n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6570\u7ec4\u5b58\u50a8\u8fd9\u4e9b\u8d21\u732e\uff0c\u5c31\u80fd\u505a\u5230 $O(1)$ \u67e5\u8be2\u4e86\u3002               \n\n\u8fd8\u662f\u6709\u70b9\u96be\u8c03\uff0c~~\u5f53\u7136\u53ea\u8981\u4e0dSB\u90a3\u4e48\u4e5f\u8c03\u4e0d\u4e86\u5f88\u4e45~~\u3002        \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst int Len = 2e5 + 5;\nint n,m,pos[Len],tem[Len],treebl;\nstruct node\n{\n    int to;\n\tunsigned int val;\n    node(){to = val = 0;}\n\tnode(int TO,unsigned int VAL){to = TO , val = VAL;}\n}sim;\nvector<node> v[Len];\nint dep[Len],fa[Len],Fa[Len];\nint top[Len],siz[Len],stk[Len],Top,Nearp[Len],cnt,btm[Len],ind[Len],Toper[Len],Btmer[Len];\nint ST[Len],Topp;\nint block[Len],lenbk;\nvector<int> nde[Len];\nbool vis[Len];\nint val[Len],sum[Len],ADD[Len];\nvoid Add(int from,int to,int val){v[from].push_back(node(to , val));}\nvoid add(int x,int y)\n{\n    if(y)\n    {\n        block[++ lenbk] = y;\n        Fa[y] = x;\n        for(int now = y ; now != x ; now = fa[now]) vis[now] = 1;\n    }\n    for(int i = 1 ; i <= Top ; i ++) Nearp[stk[i]] = 0;\n    for(int i = 1 ; i <= Top ; i ++)\n    {\n        btm[stk[i]] = y;\n        if(stk[i] != y) top[stk[i]] = x;\n        if(!y) \n        {\n            Nearp[stk[i]] = x;\n            continue;\n        }\n        int p = x;\n        for(int now = stk[i] ; now != x ; now = fa[now])\n        {\n            if(vis[now]) \n            {\n                p = now;\n                break;\n            }\n            if(Nearp[now])\n            {\n                p = Nearp[now];\n                break;\n            }\n        }\n        Nearp[stk[i]] = p;\n    }\n    if(y) for(int now = y ; now != x ; now = fa[now]) vis[now] = 0;\n} \nvector<node>::iterator itor;\nvoid dfs(int x,int f)\n{ \n    fa[x] = f;\n    for (itor = v[x].begin(); itor != v[x].end(); itor ++)\n    {\n    \tsim = *itor;\n        if (sim.to == f)\n        {\n            itor = v[x].erase(itor);\n            break;\n        }\n    }\n    siz[x] = 1;\n    top[x] = 0;\n    int Cnt = 0;\n    for(int i = 0 ; i < v[x].size() ; i ++)\n    {\n        int to = v[x][i].to , val = v[x][i].val;\n        if(to == f) continue;\n        dep[to] = dep[x] + val;\n        ST[Topp ++] = to;\n        dfs(to , x);\n        if(top[to]) Cnt ++ , top[x] = top[to];\n        siz[x] += siz[to];\n    }\n\tint Btm = 0;\n    if(siz[x] >= treebl || Cnt > 1 || x == 1)\n    {\n    \tint sz = 0 , ct = 0;\n        for(int i = v[x].size() - 1 ; i >= 0 ; i --)\n        {\n        \tint to = v[x][i].to , val = v[x][i].val;\n        \tif(to == f) continue;\n        \tsz += siz[to];\n        \tif(top[to]) ct ++;\n        \tif(sz > treebl || ct > 1)\n        \t{\n        \t\tsz = siz[to];\n        \t\tif(top[to]) ct = 1;\n        \t\tTop = 0;\n        \t\tcnt ++;\n        \t\tnde[cnt].clear();\n        \t\tBtm = 0;\n        \t\tdo\n        \t\t{\n        \t\t\tstk[++ Top] = ST[-- Topp];\n        \t\t\tBtm = max(Btm , top[ST[Topp]]);\n\t        \t\tind[ST[Topp]] = cnt;\n\t        \t\tnde[cnt].push_back(ST[Topp]);\n\t\t\t\t}while(ST[Topp] != v[x][i + 1].to);\n\t\t\t\tadd(x , Btm);\n\t\t\t\tToper[cnt] = x , Btmer[cnt] = Btm;\n\t\t\t}\n\t\t}\n\t\tcnt ++;nde[cnt].clear();Top = 0;Btm = 0;//printf(\"###%d:\\n\",cnt);\n\t\tdo\n\t\t{\n\t\t\tstk[++ Top] = ST[-- Topp];\n\t\t\tBtm = max(Btm , top[ST[Topp]]);\n\t       \tind[ST[Topp]] = cnt;\n\t      \tnde[cnt].push_back(ST[Topp]);\n\t\t}while(ST[Topp] != v[x][0].to);\n        add(x , Btm);\n        Toper[cnt] = x , Btmer[cnt] = Btm;\n        top[x] = x;\n        siz[x] = 1;\n    }\n}\nvoid Addval(int x)\n{\n    if(x == 1) return;\n    int tmp = (!Fa[x]) ? btm[x] : 0;\n    for(int i = 1 ; i < lenbk ; i ++) sum[block[i]] -= sum[Fa[block[i]]];//\u628a\u6536\u7f29\u6811\u7ed9\u6740\u56de\u6765\uff0c\u8981\u6ce8\u610f\u8fd9\u91cc1 ~ i\u5176\u5b9e\u662f\u6df1\u5ea6\u9012\u51cf\u7684\u6811\u7c07 \n\tif(tmp) sum[tmp] += dep[Nearp[x]] - dep[top[x]];\n    if(!Fa[x])\n    {\n        int j = ind[x] , u;\n        for(int i = nde[j].size() - 1 ; i >= 0 ; i --) \n        {\n            u = nde[j][i];\n            if(!Fa[fa[u]]) val[u] -= val[fa[u]];//\u5982\u679c\u7236\u4eb2\u4e0d\u662ftop\n        }\n        for(; !Fa[x] && x > 1 ; x = fa[x]) val[x] += dep[x] - dep[fa[x]];\n        for(int i = 0 ; i < nde[j].size() ; i ++)//\u8fd9\u91cc\u987a\u5e8f\u4e5f\u4e0d\u80fd\u53cd \n        {\n            u = nde[j][i];\n            if(!Fa[fa[u]]) val[u] += val[fa[u]];\n        }\n        //for(int i = 0 ; i < nde[j].size() ; i ++) printf(\"%d\\n\",val[nde[j][i]]);\n    }\n    if(!Fa[x]) x = top[x];\n    for(; x >= 1 ; x = Fa[x])\n    {\n        ADD[x] ++;\n        sum[x] += dep[x] - dep[Fa[x]];\n    }\n    for(int i = lenbk - 1 ; i >= 1 ; i --) sum[block[i]] += sum[Fa[block[i]]];\n}\ninline unsigned int GetAns(int x)\n{\n\tint bel = ind[x];\n    unsigned int res = val[x] * (Btmer[bel] != x) + sum[top[x]];\n    if(!Fa[x] && btm[x]) res += (dep[Nearp[x]] - dep[top[x]]) * ADD[btm[x]];\n    return res;\n}\nstruct nnode\n{\n\tint l,r;\n\tunsigned int ans;\n\tint idx;\n}Sec[Len];\nstruct Node\n{\n\tint l,r,idx,op;\n\tNode(){l = 0 , r = 0 , idx = 0 , op = 0;}\n\tNode(const int L , const int R , const int IDX , const int OP){l = L , r = R , idx = IDX , op = OP;}\n};\nvector<Node> q[Len];\nunsigned int Print[Len];\nint p1[Len],p2[Len],Block[Len],t,Sum[Len];\nbool cmp(nnode x , nnode y)\n{\n\tif(Block[x.l] ^ Block[y.l]) return Block[x.l] < Block[y.l];\n\treturn x.r < y.r;\n}\nbool cmd(int x,int y){return dep[x] < dep[y];}\nsigned main()\n{\n    scanf(\"%d %d\",&n,&m);\n    treebl = sqrt(n);\n    t = sqrt(n);\n    for(int i = 1 ; i <= n ; i ++) Block[i] = (i - 1) / t + 1;\n    for(int i = 2 ; i <= n ; i ++) \n    {\n        int x,y;unsigned int z;\n        scanf(\"%d %d %u\",&x,&y,&z);\n        Add(x , y , z) , Add(y , x , z);\n    }\n    int cnts = 0;\n    for(int i = 1 ; i <= m ; i ++)\n    {\n        scanf(\"%d %d\",&Sec[i].l,&Sec[i].r);\n\t\tSec[i].idx = i;\n    }\n    sort(Sec + 1 , Sec + 1 + m , cmp);\n    dfs(1 , 0);\n    for(int i = 1 ; i <= cnt ; i ++) sort(nde[i].begin() , nde[i].end() , cmd);\n    int l = 1 , r = 0;\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\tif(l > Sec[i].l) q[r].push_back(Node(Sec[i].l , l - 1 , i , 1)) , l = Sec[i].l;\n\t\tif(r < Sec[i].r) q[l - 1].push_back(Node(r + 1 , Sec[i].r , i , -1)) , r = Sec[i].r;\n\t\tif(l < Sec[i].l) q[r].push_back((Node){l , Sec[i].l - 1 , i , -1}) , l = Sec[i].l;//\u56e0\u4e3a\u5bf9\u4e8e\u539f\u6765\u7684\u7b54\u6848\u800c\u8a00\uff0c\u73b0\u5728\u662f\u8981\u51cf\u53bb\u8fd9\u4e9b\u503c\uff0c\u6240\u4ee5\u628a\u539f\u5f0f\u53d6\u4e86\u4e2a-1 \n\t\tif(r > Sec[i].r) q[l - 1].push_back((Node){Sec[i].r + 1 , r , i , 1}) , r = Sec[i].r;//\u4e0e\u4e0a\u540c \n\t}\n\tNode Calc;\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tp1[i] = GetAns(i);\n\t\tAddval(i);\n\t\tfor(int j = 0 ; j < q[i].size() ; j ++) \n\t\t{\n\t\t\tCalc = q[i][j];\n\t\t\tfor(int k = Calc.l ; k <= Calc.r ; k ++) Sec[Calc.idx].ans += Calc.op * GetAns(k);\n\t\t}\n\t\tp2[i] = GetAns(i);\n\t}\n\tl = 1 , r = 0;\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\twhile(l > Sec[i].l) Sec[i].ans -= p2[-- l];\n\t\twhile(r < Sec[i].r) Sec[i].ans += p1[++ r];\n\t\twhile(l < Sec[i].l) Sec[i].ans += p2[l ++];\n\t\twhile(r > Sec[i].r) Sec[i].ans -= p1[r --];\n\t}\n\tfor(int i = 1 ; i <= n ; i ++) Sum[i] = Sum[i - 1] + dep[i];\n\tfor(int i = 1 ; i <= m ; i ++) Sec[i].ans += Sec[i - 1].ans;\n\tfor(int i = 1 ; i <= m ; i ++) Print[Sec[i].idx] = (Sec[i].r - Sec[i].l) * (Sum[Sec[i].r] - Sum[Sec[i].l - 1]) - 2 * Sec[i].ans;\n\tfor(int i = 1 ; i <= m ; i ++) printf(\"%u\\n\",Print[i]);\n    return 0;\n}\n```",
        "postTime": 1619417180,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6778 [Ynoi2009] rpdq"
    },
    {
        "content": "\u524d\u9762\u7684\u8f6c\u5316\u6bd4\u8f83\u7b80\u5355\u800c\u4e14\u5176\u5b83\u9898\u89e3\u90fd\u6709\u8bb2\uff0c\u8fd9\u91cc\u5c31\u53ea\u7b80\u5355\u7684\u6982\u62ec\u4e00\u4e0b\u3002\n\n\u9996\u5148\u6709\uff1a\n$$\n\\sum_{l\\leq i\\leq j\\leq r} dist(i,j)=\\sum_{l\\leq i\\leq j\\leq r} deep_i+deep_j-2deep_{lca(i,j)}\n$$\n\u5176\u4e2d $dist(i,j)$ \u8868\u793a $i,j$ \u7684\u8ddd\u79bb\uff0c$deep_i$ \u8868\u793a $i$ \u5230\u6839\u8def\u5f84\u7684\u6743\u503c\u548c\u3002\n\n\u524d\u9762\u4e24\u9879\u53ef\u4ee5\u76f4\u63a5\u524d\u7f00\u548c\uff0c\u73b0\u5728\u95ee\u9898\u6765\u5230\u4e86\u6c42 $\\sum\\limits_{l\\leq i\\leq j\\leq r} deep_{lca(i,j)}$\u3002\n\n\u5bb9\u6613\u60f3\u5230\u83ab\u961f\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a $\\mathcal O(n\\sqrt m)$ \u6b21\u8be2\u95ee\u7ed9\u51fa $x,l,r$ \u6c42 $\\sum\\limits_{l\\leq i\\leq r} deep_{lca(i,x)}$\u3002\n\n\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u5c31\u662f [LNOI2014 LCA](https://www.luogu.com.cn/problem/P4211)\u3002\u5957\u7528\u6b64\u9898\u505a\u6cd5\uff0c\u95ee\u9898\u53d8\u4e3a $\\mathcal O(n)$ \u6b21\u70b9\u5230\u6839\u8def\u5f84\u52a0\uff0c$\\mathcal O(n\\sqrt m)$ \u6b21\u67e5\u8be2\u70b9\u5230\u6839\u8def\u5f84\u548c\u3002\n\n\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u5c31\u662f [gym103409C AC Automaton](https://codeforces.com/gym/103409/problem/C)\u3002\u63a5\u4e0b\u6765\u6211\u4f1a\u8f83\u4e3a\u8be6\u7ec6\u5730\u89e3\u91ca\u8be5\u505a\u6cd5\u3002\n\n---\n\n\u8003\u8651\u6839\u53f7\u91cd\u6784\u3002\u5c06\u4fee\u6539\u64cd\u4f5c\u6bcf $B$ \u4e2a\u5206\u4e00\u5757\uff0c\u6bcf\u6b21\u505a\u5b8c\u4e00\u4e2a\u5757\u5c31\u8fdb\u884c\u4e00\u6b21\u91cd\u6784\u3002\n\n\u91cd\u6784\u65f6\uff0c\u524d\u9762\u82e5\u5e72\u4e2a\u5757\u5bf9\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\u53ef\u4ee5\u76f4\u63a5 $\\mathcal O(n)$ \u66b4\u529b\u9884\u5904\u7406\u5f97\u5230\uff0c\u67e5\u8be2\u65f6\u76f4\u63a5\u8fdb\u884c\u67e5\u8868\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(\\frac{n^2}{B})$\u3002\n\n\u5bf9\u4e8e\u5f53\u524d\u5757\u5185\u7684 $B$ \u4e2a\u96f6\u6563\u70b9\uff0c\u53ef\u4ee5\u5efa\u51fa\u8fd9 $B$ \u4e2a\u70b9\u7684\u865a\u6811\uff0c\u7136\u540e\u5c06\u6bcf\u4e2a\u70b9\u5230\u5176\u865a\u6811\u7236\u4eb2\u7684\u8fd9\u6761\u94fe\u5206\u4e3a\u4e00\u4e2a\u5757\uff08\u5305\u62ec\u5b83\uff0c\u4e0d\u5305\u62ec\u865a\u6811\u4e0a\u7684\u7236\u4eb2\uff09\u3002\n\n\u6b64\u65f6\uff0c\u4fee\u6539\u64cd\u4f5c\u53d8\u4e3a $2B$ \u6b21\u6574\u5757\u52a0\uff0c\u5355\u6b21\u4fee\u6539\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(B)$\u3002\n\n\u8003\u8651\u67e5\u8be2\uff0c\u5728\u4fee\u6539\u65f6\u540c\u65f6\u7ef4\u62a4\u4e00\u4e0b $sum_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u5757\u5230\u6839\u7684\u8def\u5f84\u548c\uff0c\u7531\u4e8e\u5757\u6570\u53ea\u6709 $2B$ \u56e0\u6b64\u53ef\u4ee5\u66b4\u529b\u505a\uff1b\u5728\u91cd\u6784\u65f6\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5411\u4e0a\u722c\u4f1a\u722c\u5230\u865a\u6811\u4e0a\u54ea\u4e2a\u70b9\uff0c\u7b54\u6848\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u67e5\u8be2\u4e00\u4e2a $sum$ \u7684\u503c\u52a0\u4e0a\u6700\u4e0b\u9762\u7684\u5757\u591a\u51fa\u6765\u4e00\u6bb5\u503c\u6c42\u5f97\u3002\u5355\u6b21\u67e5\u8be2\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(1)$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\sqrt m+\\frac{n^2}{B}+nB)$\uff0c$B$ \u53d6 $\\sqrt n$ \u65f6\u65f6\u95f4\u590d\u6742\u5ea6\u8fbe\u5230\u6700\u4f18\u7684 $\\mathcal O(n\\sqrt m+n\\sqrt n+m)$\u3002\n\n\u9700\u8981\u4e00\u5b9a\u7684\u5361\u5e38\u624d\u80fd\u901a\u8fc7\uff0c\u9664\u6b64\u4e4b\u5916\u6211\u8ba4\u4e3a\u8fd9\u5e94\u8be5\u662f\u672c\u9898\u6700\u9633\u95f4\u7684\u505a\u6cd5\u4e86\u3002\n\n---\n\n\u672c\u9898\u7684\u4e00\u4e9b\u5361\u5e38\u6280\u5de7\uff1a\n\n1. \u5c06 dfs \u6539\u4e3a\u9884\u5904\u7406 dfn \u7136\u540e\u76f4\u63a5 for \u5faa\u73af\uff0c\u6548\u7387\u53ef\u4ee5\u5f97\u5230\u663e\u8457\u63d0\u5347\u3002\n2. \u74f6\u9888\u5904\u7684 vector \u6539\u4e3a\u94fe\u5f0f\u524d\u5411\u661f\u3002\n3. \u83ab\u961f\u548c\u6839\u53f7\u91cd\u6784\u4f7f\u7528\u4e0d\u540c\u7684\u5757\u957f\u3002\n\n~~\u867d\u7136\u8fd9\u51e0\u4e2a\u597d\u50cf\u633a\u663e\u7136\u7684\uff0c\u8bf4\u4e86\u767d\u8bf4\u3002~~\n\n$\\texttt{Code Below}$\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N=2e5+5;\nconst int B=500;\nconst int BB=900;\n\nll read(){static ll x;scanf(\"%lld\",&x);return x;}\nvoid write(ll x){printf(\"%lld\",x);}\nvoid print(ll x,char c='\\n'){write(x),putchar(c);}\n\nvector<pair<int,unsigned>>e[N];\nint st[N],ed[N],ndfn[N],cntdfn=0,deep[N],fa[N],n,Q;\nunsigned sum[N],val[N],pre[N];\nvoid dfs(int now,int father)\n{\n\tfa[now]=father;\n\tdeep[now]=deep[father]+1;\n\tst[now]=++cntdfn;\n\tndfn[cntdfn]=now;\n\tfor (auto [to,d]:e[now])\n\t{\n\t\tif (to==father) continue;\n\t\tsum[to]=sum[now]+d;\n\t\tval[to]=d;\n\t\tdfs(to,now);\n\t}\n\ted[now]=cntdfn;\n}\nbool have(int x,int y){return st[x]<=st[y]&&ed[y]<=ed[x];}\nint is[N],dw[N],top[N];\nunsigned F[N],S[N];\nint head[N],cnte=0;\nstruct edge\n{\n\tint to,nxt;\n}E[N];\nvoid add_edge(int u,int v)\n{\n\tE[++cnte].to=v;\n\tE[cnte].nxt=head[u];\n\thead[u]=cnte;\n}\nstruct block\n{\n\tint rt,fa;\n\tunsigned val,sum,S;\n\tvoid clear(){S=sum=val=rt=fa=0;}\n}b[BB*2+5];\nint cnt=0,w[N];\nvoid push(int x)\n{\n\tint m=0;\n\tstatic int a[N];\n\tb[++cnt].clear();\n\tfor (int i=head[x];i;i=E[i].nxt) a[++m]=E[i].to;\n\tfor (int i=1;i<=m;i++) w[a[i]]=cnt,b[cnt].S+=val[a[i]];\n\tb[cnt].rt=a[1];\n}\nvoid modify(int x)\n{\n\tfor (int i=1;i<=cnt;i++) if (have(b[i].rt,x)) b[i].val++;\n\tfor (int i=1;i<=cnt;i++) b[i].sum=b[b[i].fa].sum+b[i].val*b[i].S;\n}\nunsigned query(int x)\n{\n\treturn b[b[w[top[x]]].fa].sum+b[w[top[x]]].val*(sum[top[x]]-sum[fa[b[w[top[x]]].rt]]);\n}\nvoid clear(int n)\n{\n\tcnt=cnte=0;\n\tfor (int i=0;i<=n;i++) F[i]=S[i]=is[i]=dw[i]=top[i]=head[i]=0;\n}\nstruct Query\n{\n\tint l,r,id;\n\tbool operator <(const Query &a)const\n\t{\n\t\treturn l/B==a.l/B?((l/B)%2==0?r<a.r:r>a.r):l<a.l;\n\t}\n}q[N];\nstruct Query2{int l,r,f,id;};\nvector<Query2>q2[N];\nstruct Query3{int l,r,f,id;};\nvector<Query3>q3;\nstruct Query4{int l,r,f,id;};\nvector<Query4>q4;\nunsigned ans[N],res[N],ans1[N],ans2[N];\n\nsigned main()\n{\n\tn=read(),Q=read();\n\tfor (int i=1;i<n;i++)\n\t{\n\t\tint u=read(),v=read();\n\t\tunsigned d=read();\n\t\te[u].push_back({v,d});\n\t\te[v].push_back({u,d});\n\t}\n\tdfs(1,0);\n\tfor (int i=1;i<=n;i++) pre[i]=pre[i-1]+sum[i];\n\tfor (int i=1;i<=Q;i++)\n\t{\n\t\tq[i].l=read(),q[i].r=read(),q[i].id=i;\n\t\tres[i]=(pre[q[i].r]-pre[q[i].l-1])*(q[i].r-q[i].l);\n\t}\n\tsort(q+1,q+1+Q);\n\tfor (int i=1,l=1,r=0;i<=Q;i++)\n\t{\n\t\tif (r<q[i].r)\n\t\t{\n\t\t\tq4.push_back({r+1,q[i].r,1,i});\n\t\t\tq2[l-1].push_back({r+1,q[i].r,-1,i});\n\t\t\tr=q[i].r;\n\t\t}\n\t\tif (l>q[i].l)\n\t\t{\n\t\t\tq3.push_back({q[i].l,l-1,-1,i});\n\t\t\tq2[r].push_back({q[i].l,l-1,1,i});\n\t\t\tl=q[i].l;\n\t\t}\n\t\tif (r>q[i].r)\n\t\t{\n\t\t\tq4.push_back({q[i].r+1,r,-1,i});\n\t\t\tq2[l-1].push_back({q[i].r+1,r,1,i});\n\t\t\tr=q[i].r;\n\t\t}\n\t\tif (l<q[i].l)\n\t\t{\n\t\t\tq3.push_back({l,q[i].l-1,1,i});\n\t\t\tq2[r].push_back({l,q[i].l-1,-1,i});\n\t\t\tl=q[i].l;\n\t\t}\n\t}\n\tfor (int l=1,r;l<=n;l+=BB)\n\t{\n\t\tclear(n);\n\t\tr=min(l+BB-1,n);\n\t\tfor (int i=l;i<=r;i++) is[i]=2;\n\t\tfor (int i=n;i>=1;i--)\n\t\t{\n\t\t\tint now=ndfn[i];\n\t\t\tF[now]+=now<l;\n\t\t\tis[now]=min(is[now],2);\n\t\t\tis[fa[now]]+=!!is[now];\n\t\t\tF[fa[now]]+=F[now];\n\t\t}\n\t\tfor (int i=1;i<=n;i++)\n\t\t{\n\t\t\tint now=ndfn[i];\n\t\t\ttop[now]=top[fa[now]];\n\t\t\tif (is[now]) top[now]=now;\n\t\t\tS[now]=S[fa[now]]+val[now]*F[now];\n\t\t}\n\t\tfor (int i=n;i>=1;i--)\n\t\t{\n\t\t\tint now=ndfn[i];\n\t\t\tif (is[now]==2) dw[now]=now;\n\t\t\tif (dw[now]) dw[fa[now]]=dw[now];\n\t\t\tif (dw[now]) add_edge(dw[now],now);\n\t\t}\n\t\tfor (int i=1;i<=n;i++) if (head[ndfn[i]]) push(ndfn[i]);\n\t\tfor (int i=1;i<=cnt;i++) b[i].fa=w[fa[b[i].rt]];\n\t\tfor (int i=l;i<=r;i++)\n\t\t{\n\t\t\tmodify(i);\n\t\t\tfor (auto [l,r,f,id]:q2[i])\n\t\t\tfor (int x=l;x<=r;x++) ans[id]+=f*(S[x]+query(x));\n\t\t\tans1[i]=S[i]+query(i);\n\t\t\tif (i<n) ans2[i+1]=S[i+1]+query(i+1);\n\t\t}\n\t}\n\tfor (int i=1;i<=n;i++) ans1[i]+=ans1[i-1];\n\tfor (int i=1;i<=n;i++) ans2[i]+=ans2[i-1];\n\tfor (auto [l,r,f,id]:q3) ans[id]+=f*(ans1[r]-ans1[l-1]);\n\tfor (auto [l,r,f,id]:q4) ans[id]+=f*(ans2[r]-ans2[l-1]);\n\tfor (int i=1;i<=Q;i++) ans[i]+=ans[i-1];\n\tfor (int i=1;i<=Q;i++) res[q[i].id]=res[q[i].id]-ans[i]*2;\n\tfor (int i=1;i<=Q;i++) print(res[i]);\n\t\n\treturn 0;\n}\n```\n\n",
        "postTime": 1654611345,
        "uid": 61120,
        "name": "QwQcOrZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6778 \u3010Ynoi2009 rpdq\u3011"
    },
    {
        "content": "upd\uff1a\u7ecf\u8fc7 200+ \u6b21\u63d0\u4ea4\u7ec8\u4e8e\u5361\u8fc7\u4e86\u3002\u3002\u3002\n\n\u7ed9\u51fa\u4e00\u4e2a\u5bb9\u6613\u60f3\u4e00\u4e9b\u7684\u505a\u6cd5\uff0c\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt n)$\uff08\u7a7a\u95f4\u662f\u7ebf\u6027\u7684\uff09\uff0c~~\u867d\u7136\u7531\u4e8e\u5e38\u6570\u8fc7\u5927\u8fc7\u4e0d\u53bb~~\u5b9e\u9645\u4e0a\u662f\u6211\u5199\u7684\u592a\u4e11\u4e86\uff0c\u5361\u5b8c\u5e38\u4f1a\u628a\u65b0\u7684\u4ee3\u7801\u653e\u4e0a\u6765\u3002\n\n\u9996\u5148\u8be2\u95ee\u53ef\u4ee5\u79bb\u7ebf\uff0c\u8003\u8651\u83ab\u961f\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u77e5\u9053\u4e00\u4e2a\u70b9\u5230\u4e00\u4e2a\u533a\u95f4\u5185\u6240\u6709\u70b9\u7684\u8ddd\u79bb\u4e4b\u548c\uff0c\u5f88\u81ea\u7136\u7684\u60f3\u5230\u4f7f\u7528\u70b9\u5206\u6811\u505a\uff0c\u4e0d\u8fc7\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt n\\log n)$\uff0c\u663e\u7136\u662f\u76f4\u63a5T\u98de\u7684\u4e0d\u7528\u8bf4\u3002\n\n\u8fd9\u65f6\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230\u4e8c\u6b21\u79bb\u7ebf\u6765\u5e72\u8fd9\u4e8b\u3002\u901a\u8fc7\u4e8c\u6b21\u79bb\u7ebf\uff0c\u53ef\u4ee5\u628a\u52a0\u70b9\u7684\u6b21\u6570\u964d\u5230\u7ebf\u6027\uff0c\u8fd9\u65f6\u5c31\u9700\u8981\u4e00\u4e2a $O(\\sqrt n)$ \u52a0\u70b9\uff0c$O(1)$ \u67e5\u8be2\u5355\u70b9\u5230\u5df2\u52a0\u5165\u70b9\u7684\u8ddd\u79bb\u4e4b\u548c\u7684\u6570\u636e\u7ed3\u6784\u3002\n\n\u6211\u4eec\u6cbf\u7528\u70b9\u5206\u6811\u7684\u60f3\u6cd5\uff0c\u4e0d\u8fc7\u6211\u4eec\u73b0\u5728\u4e0d\u8981 $O(\\log n)$ \u5c42\uff0c\u53ea\u9700\u8981\u4e24\u5c42\u6811\u3002\u56e0\u6b64\uff0c\u8003\u8651\u5bf9\u5b50\u6811\u5927\u5c0f\u505a\u6839\u53f7\u5206\u6cbb\uff0c\u8bbe $B=\\sqrt n$\uff0c\u90a3\u4e48\u5bf9\u5927\u5c0f\u4e0d\u8d85\u8fc7 $B$ \u7684\u5b50\u6811\uff0c\u5c31\u76f4\u63a5\u66b4\u529b bfs/dfs \u66f4\u65b0\u8ddd\u79bb\uff0c\u6211\u4f7f\u7528\u7684\u662f bfs\uff08\u6216\u8bb8\u662f\u4ee5\u4e3a\u5e38\u6570\u6bd4\u8f83\u5c0f\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u5e76\u975e\u5982\u6b64\uff1f\uff09\u3002\n\n\u5bf9\u5927\u5c0f\u5927\u4e8e $B$ \u7684\u5b50\u6811\u5904\u7406\u7565\u590d\u6742\u4e00\u4e9b\uff0c\u6211\u4eec\u62ce\u51fa\u6765\u5efa\u4e00\u68f5\u7c7b\u4f3c\u865a\u6811\u7684\u4e1c\u897f\uff0c\u8fd9\u6837\u6839\u636e\u62bd\u5c49\u539f\u7406\uff0c\u53f6\u8282\u70b9\u4e2a\u6570\u4e0d\u8d85\u8fc7 $O(\\dfrac nB)=O(\\sqrt n)$ \u4e2a\uff0c\u6bcf\u4e2a\u975e\u6839\u975e\u53f6\u5b50\u8282\u70b9\u81f3\u5c11\u6709\u4e24\u4e2a\u5b69\u5b50\uff0c\u56e0\u6b64\u603b\u7ed3\u70b9\u6570\u4e0d\u8d85\u8fc7 $O(\\sqrt n)$ \u4e2a\uff0c\u7136\u540e\u505a\u7c7b\u4f3c\u6362\u6839 DP \u7684\u64cd\u4f5c\uff0c\u8bbe $f_x/cf_x$ \u4e3a $x$ \u5b50\u6811\u5185\u5df2\u52a0\u5165\u70b9\u5230 $x$ \u7684\u8ddd\u79bb\u4e4b\u548c/\u70b9\u7684\u4e2a\u6570\uff0c$g_x/cg_x$ \u4e3a\u865a\u6811\u4e0a $x$ \u5b50\u6811\uff08\u5305\u62ec $x$ \u5230\u7236\u4eb2\u7684\u8fb9\u4e0a\u6536\u8d77\u7684\u70b9\uff09\u5916\u5df2\u52a0\u5165\u70b9\u5230\u865a\u6811\u4e0a $x$ \u7236\u4eb2\u7684\u8ddd\u79bb\u4e4b\u548c/\u70b9\u7684\u4e2a\u6570\u3002\u8bbe\u6211\u4eec\u67e5\u8be2\u7684\u70b9\u4e3a $x$\uff0c\u5176\u4e0d\u65ad\u8df3\u7236\u4eb2\u5230\u8fbe\u865a\u6811\u4e0a\u7684\u8fb9\u7684\u4f4d\u7f6e\u4e3a $y$\uff0c\u8be5\u865a\u6811\u8fb9\u7684\u4e0a\u7aef\u70b9\u4e3a $t$\uff0c\u4e0b\u7aef\u70b9\u4e3a $s$\uff0c\u90a3\u4e48\uff0c\u8fd9\u4e24\u90e8\u5206\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a \n$$f_s+cf_s\\cdot dist(x,s)+g_s+cg_s\\cdot dist(x,t)$$\n\u90a3\u4e48\u73b0\u5728\u9700\u8981\u5904\u7406\u7684\u5c31\u662f\u865a\u6811\u4e0a $x$ \u6240\u5c5e\u8fb9\u7684\u8d21\u732e\uff08\u4e0d\u5305\u62ec\u4e24\u7aef\u70b9\uff09\uff0c\u5bf9\u4e8e $y$ \u4e0a\u65b9\u7684\u70b9 $u$\uff0c\u5176\u8d21\u732e\u4e3a \n$$sd_u+cd_u\\cdot dist(x,u)=sd_u+cd_u\\cdot dep_x-cd_u\\cdot dep_u$$\n\u5176\u4e2d $sd_u/cd_u$ \u4e3a $u$ \u5728\u539f\u6811\u4e0a\u6240\u6709\u5927\u5c0f\u4e0d\u8d85\u8fc7 $B$ \u7684\u5b50\u6811\u4e2d\u70b9\u5230 $u$ \u7684\u8ddd\u79bb\u4e4b\u548c/\u5df2\u52a0\u5165\u70b9\u7684\u4e2a\u6570\u3002\u82e5 $u$ \u5df2\u52a0\u5165\uff0c\u90a3\u4e48 $cd_u$ \u8fd8\u9700\u8981\u989d\u5916 $+1$\u3002\n\n\u7c7b\u4f3c\u7684\uff0c$y$ \u4e0b\u65b9\u7684\u70b9\u7684\u8d21\u732e\u4e3a \n$$sd_u+cd_u\\cdot(dep_x-2dep_y)+cd_u\\cdot dep_u$$\n\u4e8e\u662f\uff0c\u6211\u4eec\u5bf9\u539f\u6811\u6c42\u51fa dfs \u5e8f\uff0c\u5e76\u4e14\u6bcf\u6b21\u4f18\u5148 dfs \u6700\u5927\u7684\u5b50\u6811\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u865a\u6811\u4e0a\u4e00\u6761\u8fb9\u6536\u8d77\u7684\u8282\u70b9\u7f16\u53f7\u8fde\u7eed\uff0c\u4e8e\u662f\u5206\u5757\u7ef4\u62a4 $cd_u$ \u548c $cd_u\\cdot dep_u$ \u7684\u533a\u95f4\u548c\u5373\u53ef\u3002\n\n\u8fd9\u6837\uff0c\u5bf9\u4e8e\u5b50\u6811\u5927\u5c0f\u5927\u4e8e $B$ \u7684\u70b9\u5c31\u505a\u5b8c\u4e86\uff0c\u4e0d\u8fc7\u5bf9\u4e8e\u5b50\u6811\u5927\u5c0f\u4e0d\u8d85\u8fc7 $B$ \u7684\u70b9\uff0c\u4f1a\u591a\u7b97\u4e00\u4e9b\u4e1c\u897f\uff0c\u9700\u8981\u51cf\u53bb\u3002\u8fd9\u4e9b\u591a\u7b97\u7684\u663e\u7136\u662f $x$ \u6240\u5728\u5b50\u6811\u5185\u7684\u70b9\uff0c\u9700\u8981\u51cf\u53bb\u7684\u8d21\u732e\u76f4\u63a5\u7ef4\u62a4\u6570\u7ec4\u5373\u53ef\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a $O(n\\sqrt n)$ \u7684\u7b97\u6cd5~~\u867d\u7136\u5e38\u6570\u5de8\u5927~~\u3002\n\n\u7136\u800c\u4e0d\u4f18\u5316\u5e38\u6570\u662f\u6839\u672c\u8fc7\u4e0d\u53bb\u7684\uff0c\u53ea\u62ff\u7684\u5230 10pts\u3002\n\n\u4e0d\u8fc7\u6ca1\u6709\u5173\u7cfb\uff0c\u52a0\u51e0\u4e2a\u4f18\u5316\u5c31\u53ef\u4ee5\u4ee5\u6700\u6162\u70b9 3.99s \u7684\u901f\u5ea6\u5361\u8fc7\u53bb\uff08\uff08\uff08\n\n- `inline` & `register`\uff08\u7528\u5904\u4e0d\u5927\uff09\n- \u83ab\u961f\u7684\u5947\u5076\u5757\u6392\u5e8f\u4f18\u5316\uff0c\u80fd\u780d\u6389\u5927\u6982\u4e00\u534a\u7684\u5e38\u6570\uff0c\u53ef\u4ee5\u62ff\u5230  50~60pts\u3002\n- \u7384\u5b66\u8c03\u83ab\u961f\u5757\u957f\u3001\u6839\u53f7\u5206\u6cbb\u9608\u503c\uff0c\u53ef\u4ee5\u62ff\u5230 50~80pts\u3002\n- \u968f\u673a\u9009\u6839\uff0c\u8fd0\u6c14\u597d\u4ea4\u4e2a\u5341\u6b21\u5c31\u8fc7\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define re register \nusing namespace std;\ntypedef unsigned int ll;\nconst ll N=4e5+5;\ninline ll read(){\n\tchar ch;re ll x=0;\n\twhile(ch=getchar(),ch<'!');x=ch-48;\n\twhile(ch=getchar(),ch>'!')x=(x<<3)+(x<<1)+ch-48;\n\treturn x;\n}\nvoid write(re ll x){\n    char ch[11];re ll cc=0;\n    if(!x){putchar('0'),putchar('\\n');return;}\n    while(x)ch[cc++]=x%10+48,x/=10;\n    while(cc)putchar(ch[--cc]);putchar('\\n');\n}\nll n,m,rt,B,L,b[N],BB,S,bb[N],hd[N],to[N],w[N],nxt[N],tot,fa[N],sz[N],dep[N],top[N],tt[N],dn[N],ans[N],d[N];\nll s[N],cf[N],cg[N],f[N],g[N],sd[N],ss[N],cd[N],scd[510],cdd[N],scdd[510],cc[N],id[N],cnt,ql,qr,qql,qqr;\nvector<ll> toi[N],wi[N];\nstruct query{ll l,r,id;} q[N];\nstruct pp{ll x1,x2,x3;} qqq[N];struct ppp{ll x1,x2,x3,x4;} qq[N];\nbool cmp(query u,query v){return b[u.l]<b[v.l]||b[u.l]==b[v.l]&&((b[u.l]&1)?u.r<v.r:(u.r>v.r));}\nstruct Query{ll l,r,id,t;};\nvector<Query> Q[N];\ninline void add(re ll x,re ll y,re ll l){to[++tot]=y,w[tot]=l,nxt[tot]=hd[x],hd[x]=tot;}\nvoid dfs(re ll x,re ll Fa){\n\tfa[x]=Fa,sz[x]=1;\n\tfor(re ll i=hd[x],y;i;i=nxt[i])if((y=to[i])!=Fa)\n\t\tdep[y=to[i]]=dep[x]+w[i],dfs(y,x),sz[x]+=sz[y];\n}\nvoid dfs2(re ll x,re ll tp){top[x]=tp;for(re ll i=hd[x],y;i;i=nxt[i])if((y=to[i])!=fa[x])dfs2(y,tp);}\nvoid dfs3(re ll x,re ll tp,re ll ttp){\n\ttop[x]=tp,tt[x]=ttp;re ll cn=0;\n\tfor(re ll i=hd[x],y;i;i=nxt[i])cn+=((y=to[i])!=fa[x]&&sz[y]>S);\n\tif(x!=tp&&(cn>=2||!cn))dn[x]=x,toi[tp].push_back(x),wi[tp].push_back(dep[x]-dep[tp]),\n\t\t\t\t\t\t   \t\t   toi[x].push_back(tp),wi[x].push_back(dep[x]-dep[tp]);\n\tif(cn>=2||x==rt){\n\t\tdn[x]=x;\n\t\tfor(re ll i=hd[x],y;i;i=nxt[i])\n\t\t\tif((y=to[i])!=fa[x])sz[y]>S?dfs3(y,x,y):dfs2(y,y);\n\t\treturn;\n\t}\n\tfor(re ll i=hd[x],y;i;i=nxt[i])\n\t\tif((y=to[i])!=fa[x])sz[y]>S?dfs3(y,tp,ttp),dn[x]=dn[y]:(dfs2(y,y),0);\n} \nvoid dfs4(re ll x){\n\tid[x]=++cnt;re ll son=0;\n\tfor(re ll i=hd[x],y;i;i=nxt[i])if((y=to[i])!=fa[x]&&sz[y]>sz[son])son=y;\n\tif(son)dfs4(son);\n\tfor(re ll i=hd[x],y;i;i=nxt[i])if((y=to[i])!=fa[x]&&y!=son)dfs4(y);\n}\ninline void upd(ll *sx,ll *sbx,re ll x,re ll k){\n\tre ll i,t=bb[x]*BB;\n\tfor(i=x;i+7<=t;i+=8)sx[i]+=k,sx[i+1]+=k,sx[i+2]+=k,sx[i+3]+=k,sx[i+4]+=k,sx[i+5]+=k,sx[i+6]+=k,sx[i+7]+=k;\n\tfor(;i<=t;i++)sx[i]+=k;\n\tfor(i=bb[x];i+7<=L;i+=8)sbx[i]+=k,sbx[i+1]+=k,sbx[i+2]+=k,sbx[i+3]+=k,sbx[i+4]+=k,sbx[i+5]+=k,sbx[i+6]+=k,sbx[i+7]+=k;\n\tfor(;i<=L;i++)sbx[i]+=k;\n}\ninline void modify(re ll x){\n\tql=qr=1;\n\tif(sz[x]<=S){\n\t\tre ll ft=fa[top[x]],dw=dn[ft],tf=top[ft];\n\t\tsd[top[x]]+=dep[x]-dep[ft],cc[top[x]]++,qql=qqr=1;\n\t\tif(dw!=ft)ss[dw]+=dep[x]-dep[ft];\n\t\tupd(cd,scd,id[ft],1);upd(cdd,scdd,id[ft],dep[ft]);\n\t\tqqq[qqr++]=(pp){x,0,0};\n\t\twhile(qql!=qqr){\n\t\t\tpp cur=qqq[qql];re ll x=cur.x1,Fa=cur.x2,cd=cur.x3;qql++,s[x]+=cd;\n\t\t\tfor(re ll i=hd[x],y;i;i=nxt[i])if((y=to[i])!=Fa&&sz[y]<=S)qqq[qqr++]=(pp){y,x,cd+w[i]};\n\t\t}\n\t\tqq[qr++]=(ppp){dw,tf,dep[x]+dep[dw]-(dep[ft]<<1),dw==ft?1:2};\n\t\tif(top[ft])qq[qr++]=(ppp){tf,dw,dep[x]-dep[tf],1};\n\t}else{\n\t\tre ll dw=dn[x],tf=top[x];\n\t\tupd(cd,scd,id[x],1);upd(cdd,scdd,id[x],dep[x]);\n\t\tqq[qr++]=(ppp){dw,tf,dep[dw]-dep[x],dw==x?1:2};\n\t\tif(tf)qq[qr++]=(ppp){tf,dw,dep[x]-dep[tf],1};\n\t}\n\twhile(ql!=qr){\n\t\tppp cur=qq[ql];re ll xx=cur.x1,Fa=cur.x2,cd=cur.x3,t=cur.x4;ql++;\n\t\tif(t==1)f[xx]+=cd,cf[xx]++;\n\t\telse if(!t)g[xx]+=cd-dep[xx]+dep[top[xx]],cg[xx]++;\n\t\tfor(re ll i=toi[xx].size()-1,y;~i;i--)if((y=toi[xx][i])!=Fa)\n\t\t\tqq[qr++]=(ppp){y,xx,cd+wi[xx][i],y==top[xx]};\n\t}\n}\ninline ll Qry(ll *sx,ll *sbx,re ll x){return sx[x]+sbx[bb[x]-1];}\ninline ll qry(re ll l,re ll r){\n\tre ll res=0;\n\tfor(re ll i=l;i<=r;i++){\n\t\tre ll ft=sz[i]>S?i:fa[top[i]],dw=dn[ft],tf=top[ft],ttf=tt[ft];\n\t\tres+=f[dw]+cf[dw]*(dep[dw]+dep[i]-(dep[ft]<<1))+g[dw]+cg[dw]*(dep[i]-dep[tf])\n\t\t\t +ss[dw]-(Qry(cdd,scdd,id[ft]-1)<<1)+Qry(cdd,scdd,id[dw]-1)+Qry(cdd,scdd,id[ttf]-1)\n\t\t\t +(dep[ft]<<1)*Qry(cd,scd,id[ft]-1)-dep[i]*Qry(cd,scd,id[ttf]-1)\n\t\t\t +(dep[i]-(dep[ft]<<1))*(Qry(cd,scd,id[dw]-1));\n\t\tif(sz[i]<=S)res-=sd[top[i]]+(dep[i]-dep[ft])*cc[top[i]]-s[i];\n\t}\n\treturn res;\n}\nint main(){\n    srand(time(0));\n\tn=read(),m=read(),rt=rand()%n+1,BB=sqrt(n),B=sqrt(n)+35,S=0.7*sqrt(n),L=ceil(1.*n/BB);\n\tfor(re ll i=1,x,y,l;i<n;i++)x=read(),y=read(),l=read(),add(x,y,l),add(y,x,l);\n\tfor(re ll i=1;i<=n;i++)b[i]=(i-1)/B+1,bb[i]=(i-1)/BB+1;b[0]=bb[0]=1;\n\tdfs(rt,0),dfs3(rt,0,rt),dfs4(rt);\n\tfor(re ll i=1;i<=m;q[i].id=i,i++)q[i].l=read(),q[i].r=read();\n\tsort(q+1,q+m+1,cmp);\n\tfor(re ll i=1,l=1,r=0;i<=m;i++){\n\t\tif(r<q[i].r)Q[l-1].push_back((Query){r+1,q[i].r,q[i].id,-1u}),r=q[i].r;\n\t\tif(l>q[i].l)Q[r].push_back((Query){q[i].l,l-1,q[i].id,1}),l=q[i].l;\n\t\tif(r>q[i].r)Q[l-1].push_back((Query){q[i].r+1,r,q[i].id,1}),r=q[i].r;\n\t\tif(l<q[i].l)Q[r].push_back((Query){l,q[i].l-1,q[i].id,-1u}),l=q[i].l;\n\t}\n\tfor(re ll i=1;i<=n;i++){\n\t\tmodify(i),d[i]=qry(i,i);Query nq;\n\t\tfor(re ll j=Q[i].size()-1;~j;j--)\n\t\t\tnq=Q[i][j],ans[nq.id]+=nq.t*qry(nq.l,nq.r);\n\t}\n\tfor(re ll i=1;i<=n;i++)d[i]+=d[i-1];\n\tfor(re ll i=1,l=1,r=0;i<=m;i++)ans[q[i].id]+=d[q[i].r]-d[r]+d[q[i].l-1]-d[l-1],l=q[i].l,r=q[i].r;\n\tfor(re ll i=2;i<=n;i++)ans[q[i].id]+=ans[q[i-1].id];\n\tfor(re ll i=1;i<=n;i++)write(ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1610984701,
        "uid": 77174,
        "name": "FunnyCreatress",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P6778 \u3010[Ynoi2009] rpdq\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P6778)\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n\\sqrt{n})$ \u4f46\u662f\u5e38\u6570\u6781\u5927\u4ee5\u81f3\u4e8e\u8fc7\u4e0d\u53bb\u7684\u7b97\u6cd5\u3002\n\n\u8fd9\u4e2a\u7b97\u6cd5\u4e3b\u8981\u662f\u7531 @[Daniel\\_yuan](https://www.luogu.com.cn/user/71955) \u60f3\u51fa\u6765\u7684\uff0c~~\u5f53\u7136\u6211\u4e5f\u53c2\u4e0e\u4e86\u90e8\u5206~~\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\u9700\u8981\u77e5\u9053\uff0c\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\u548c\u82e5\u5e72\u5173\u952e\u70b9\uff0c\u8981\u6c42\u51fa\u6bcf\u4e2a\u70b9\u5230\u6240\u6709\u5173\u952e\u70b9\u7684\u8ddd\u79bb\u4e4b\u548c\uff0c\u53ef\u4ee5\u7528 $\\rm bfs$   $\\mathcal O(n)$ \u6c42\uff0c\n\n\u9898\u76ee\u6c42\u7684\u662f\u8fd9\u4e2a\uff1a\n\n$$\n\\sum_{l\\le i<j\\le r}\\operatorname{dist}(i,j)=\\frac{1}{2}\\sum_{i=l}^r\\sum_{j=l}^r\\operatorname{dist}(i,j)\n$$\n\n\u8003\u8651\u6309\u70b9\u7684\u7f16\u53f7\u5206\u5757\uff0c\u4e0d\u59a8\u8bbe\u5757\u5927\u5c0f\u4e3a $B$ \uff0c\u90a3\u4e48\u533a\u95f4 $[l,r]$ \u7684\u8d21\u732e\u5c31\u53ef\u4ee5\u5206\u6210\u4e00\u4e2a\u6574\u5757\u548c\u4e24\u4e2a\u6563\u5757\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/3hw8lojp.png)\n\n\u628a\u8d21\u732e\u518d\u6b21\u5206\u6210\u4e24\u4efd\u7b97\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/d0n8gauz.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/w2wa6q4k.png)\n\n\u524d\u9762\u90a3\u4e00\u4efd\u662f\u4e00\u4e2a\u6574\u5757\u5bf9\u4e00\u6bb5\u533a\u95f4\u9020\u6210\u7684\u8d21\u732e\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u524d\u7f00\u548c\u5dee\u5206\u5f97\u5230\uff0c\u8bbe\u7f16\u53f7\u4e3a $i$ \u7684\u5757\u7684\u7ed3\u5c3e\u70b9\u7f16\u53f7\u4e3a $ed_i$ \uff0c\u5148\u9884\u5904\u7406\u51fa\u4e00\u4e2a\u6570\u7ec4 $cnt(x,y)=\\sum_{i=1}^{ed_x}\\sum_{j=1}^y\\operatorname{dist}(i,j)$ \uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5dee\u5206\u5f97\u5230\u4e86\uff0c\u6570\u7ec4\u7684\u9884\u5904\u7406\u53ef\u4ee5\u76f4\u63a5 $\\rm dfs$ \uff0c\u4f46\u662f\u9884\u5904\u7406\u7a7a\u95f4\u5f00\u4e0d\u4e0b\uff0c\u79bb\u7ebf\u5904\u7406\u6240\u6709\u8be2\u95ee\u5373\u53ef\u964d\u4f4e\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal O(\\frac{n^2}{B})$ \u3002\n\n\u540e\u9762\u7684\u90e8\u5206\u548b\u7b97\uff1f\u53ef\u4ee5\u76f4\u63a5\u628a\u6240\u6709\u70b9\u627e\u51fa\u6765\u5efa\u865a\u6811\uff0c\u8fd9\u6837\u5efa\u51fa\u6765\u7684\u865a\u6811\u8282\u70b9\u6570\u662f $\\mathcal O(B)$ \u7ea7\u522b\u7684\uff0c\u7136\u540e\u76f4\u63a5 $\\rm dfs$ \u6c42\u5c31\u53ef\u4ee5\u4e86\uff0c\u5efa\u865a\u6811\u7684\u8fc7\u7a0b\u4e2d $\\rm lca$ \u53ef\u4ee5\u5355\u6b21 $\\mathcal O(1)$ \u6c42\uff0c\u6392\u5e8f\u4f7f\u7528\u57fa\u6570\u6392\u5e8f\uff0c\u57fa\u6570\u53d6 $\\sqrt{n}$ \u65f6\u603b\u590d\u6742\u5ea6\u662f $\\mathcal O(m\\sqrt{n})$ \u7684\u3002\n\n\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\uff1a $\\mathcal O(n\\log_2n+\\frac{n^2}{B}+mB+m\\sqrt{n})$ \u3002\n\n\u7531\u4e8e $m,n$ \u540c\u9636\uff0c\u5f53 $B=\\sqrt{n}$ \u65f6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1a $\\mathcal O(n\\log_2n+n\\sqrt{n})$ \u3002\n\n\u53e6\u5916\u8fd8\u6709\u8981\u6ce8\u610f\u7684\u4e00\u70b9\uff0c\u5c31\u662f\u5982\u679c $a\\equiv x\\pmod{2^{32}}$ \uff0c\u4e0d\u4e00\u5b9a\u6709 $a/2\\equiv x/2 \\pmod{2^{32}}$ \uff0c\u6240\u4ee5\u5982\u679c\u7b54\u6848\u6700\u7ec8\u8981\u9664\u4ee5 $2$ \u7684\u8bdd\u4e0d\u80fd\u7528 `unsigned int` \u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n\u65e2\u7136\u8fc7\u4e0d\u4e86\u5c31\u628a\u4ee3\u7801\u653e\u4e0a\u6765\u5427\u3002\n\n```cpp\n#pragma GCC optimize(3)\n#pragma GCC target(\"avx\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-fhoist-adjacent-loads\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n#pragma GCC optimize(2)\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define uint unsigned int\n#define ulog unsigned long long\nusing namespace std;\n#define ch() getchar()\n#define pc(x) putchar(x)\ntemplate<typename T>inline void read(T&x){\n\tint f;char c;\n\tfor(f=1,c=ch();c<'0'||c>'9';c=ch())if(c=='-')f=-f;\n\tfor(x=0;c<='9'&&c>='0';c=ch())x=x*10+(c&15);x*=f;\n}\ntemplate<typename T>inline void write(T x){\n\tstatic char q[64];int cnt=0;\n\tif(!x)pc('0');if(x<0)pc('-'),x=-x;\n\twhile(x)q[cnt++]=x%10+'0',x/=10;\n\twhile(cnt--)pc(q[cnt]);\n}\nconst uint maxn=200005,maxm=200005,maxb=505;\nstruct Edge{\n\tuint v;ulog w;uint nt;\n\tinline Edge(uint v=0,ulog w=0,uint nt=0):\n\t\tv(v),w(w),nt(nt){}\n}e[maxn*2];\nuint hd[maxn],num;\ninline void qwq(uint u,uint v,ulog w){\n\te[++num]=Edge(v,w,hd[u]),hd[u]=num;\n}\ninline void qaq(uint u,uint v,ulog w){\n\tqwq(u,v,w);qwq(v,u,w);\n}\nuint map[maxn],dfn[maxn],pos[maxn],pa[maxn],cnt,st[maxn*2][20],tot;\nulog dist[maxn];\ninline bool cmp(uint x,uint y){\n\treturn dfn[x]<dfn[y];\n}\ninline uint smin(uint x,uint y){\n\treturn cmp(x,y)?x:y;\n}\nvoid dfs(uint u,uint fa){\n\tmap[dfn[u]=++cnt]=u;\n\tst[pos[u]=++tot][0]=u;\n\tfor(uint i=hd[u];i;i=e[i].nt){\n\t\tuint v=e[i].v;\n\t\tif(v==fa)continue;pa[v]=u;\n\t\tdist[v]=dist[u]+e[i].w;dfs(v,u);\n\t\tst[++tot][0]=u;\n\t}\n}\nuint lg2[maxn*2];\ninline uint lca(uint x,uint y){\n\tx=pos[x],y=pos[y];if(x>y)x^=y^=x^=y;uint len=lg2[y-x+1];\n\treturn smin(st[x][len],st[y-(1<<len)+1][len]);\n}\nuint I[maxn],n,B,RT;\ninline void init(void){\n\tsrand(19260817);\n\tRT=rand()%n+1;dfs(RT,0);\n\tfor(uint i=2;i<=tot;++i)\n\t\tlg2[i]=lg2[i-1]+((i&(i-1))==0);\n\tfor(uint i=1;i<=lg2[tot];++i)\n\t\tfor(uint j=1;j+(1<<i)-1<=tot;++j)\n\t\t\tst[j][i]=smin(st[j][i-1],st[j+(1<<(i-1))][i-1]);\n\tfor(uint i=1;i<=n;++i)hd[i]=0;num=0;\n\tB=1;while(B*B<=n)++B;uint _B=(B+1)/2;\n\tfor(uint i=1;i<=n;++i)\n\t\tI[i]=I[i-1]+((i-1)%_B==0);\n\tI[n+1]=I[n]+1;\n}\nuint poi[maxb*2],vis[maxb],ord[maxb*2],dro[maxb*2];\ninline void bsort(uint len){\n\tfor(uint i=1;i<=len;++i)++vis[dfn[poi[i]]%B];\n\tfor(uint i=1;i<B;++i)vis[i]+=vis[i-1];\n\tfor(uint i=1;i<=len;++i)ord[vis[dfn[poi[i]]%B]--]=i;\n\tfor(uint i=0;i<B;++i)vis[i]=0;\n\tfor(uint i=1;i<=len;++i)++vis[dfn[poi[i]]/B];\n\tfor(uint i=1;i<B;++i)vis[i]+=vis[i-1];\n\tfor(uint i=len;i>=1;--i)dro[vis[dfn[poi[ord[i]]]/B]--]=poi[ord[i]];\n\tfor(uint i=0;i<B;++i)vis[i]=0;\n\tfor(uint i=1;i<=len;++i)poi[i]=dro[i];\n}\nuint sk[maxb*2];\ninline void build(uint len){\n\tnum=0;\n\tuint tp=0;sk[++tp]=poi[1];\n\tfor(uint i=2;i<=len;++i){\n\t\tuint u=poi[i],x=lca(u,sk[tp]);\n\t\twhile(tp>1&&dfn[sk[tp-1]]>=dfn[x]){\n\t\t\tqwq(sk[tp-1],sk[tp],dist[sk[tp]]-dist[sk[tp-1]]);--tp;\n\t\t}\n\t\tif(sk[tp]!=x){\n\t\t\tqwq(x,sk[tp],dist[sk[tp]]-dist[x]);sk[tp]=x;\n\t\t}\n\t\tsk[++tp]=u;\n\t}\n\twhile(tp>1){\n\t\tqwq(sk[tp-1],sk[tp],dist[sk[tp]]-dist[sk[tp-1]]);--tp;\n\t}\n}\nulog sm[maxn],ct[maxn];\nvoid pushup(uint u,uint fa){\n\tsm[u]=0;\n\tfor(uint i=hd[u];i;i=e[i].nt){\n\t\tuint v=e[i].v;\n\t\tpushup(v,u);ct[u]+=ct[v];\n\t\tsm[u]+=sm[v]+ct[v]*e[i].w;\n\t}\n}\nulog all;\nvoid pushdown(uint u,uint fa){\n\tfor(uint i=hd[u];i;i=e[i].nt){\n\t\tuint v=e[i].v;\n\t\tsm[v]=sm[u]+(all-ct[v]*2)*e[i].w;\n\t\tpushdown(v,u);\n\t}\n\thd[u]=ct[u]=0;\n}\nvoid solve(uint root){\n\tpushup(root,0);all=ct[root];pushdown(root,0);\n}\nstruct Query{\n\tuint a;ulog b;uint id,nt;\n\tinline Query(uint a=0,ulog b=0,uint id=0,uint nt=0):\n\t\ta(a),b(b),id(id),nt(nt){}\n}qy[maxm*8];\nuint qd[maxb*2],qm;\nvoid link(uint u,uint a,ulog b,uint id){\n\tqy[++qm]=Query(a,b,id,qd[u]),qd[u]=qm;\n}\nulog Ans[maxm];\nint main(){\n\tuint m;\n\tread(n),read(m);\n\tfor(uint i=1;i<n;++i){\n\t\tuint u,v;ulog w;\n\t\tread(u),read(v),read(w);\n\t\tqaq(u,v,w);\n\t}\n\tinit();\n\tfor(uint i=1;i<=m;++i){\n\t\tuint l,r;\n\t\tread(l),read(r);\n\t\tif(I[l]==I[r]){\n\t\t\tuint len=0;\n\t\t\tfor(uint j=l;j<=r;++j)poi[++len]=j;\n\t\t\tbsort(len);build(len);\n\t\t\tfor(uint j=l;j<=r;++j)++ct[j];solve(sk[1]);\n\t\t\tfor(uint j=l;j<=r;++j)Ans[i]+=sm[j];\n\t\t}\n\t\telse{\n\t\t\tuint nl=l,nr=r,len=0;\n\t\t\twhile(I[nl]==I[nl-1])poi[++len]=nl++;\n\t\t\twhile(I[nr]==I[nr+1])poi[++len]=nr--;\n\t\t\tbsort(len);build(len);\n\t\t\tfor(uint j=1;j<=len;++j)++ct[poi[j]];solve(sk[1]);\n\t\t\tfor(uint j=1;j<=len;++j)Ans[i]+=sm[poi[j]];\n\t\t\tif(I[nl]<=I[nr]){\n\t\t\t\tlink(I[nr]  ,l-1 ,-2,i);\n\t\t\t\tlink(I[nr]  ,nl-1,1 ,i);\n\t\t\t\tlink(I[nr]  ,nr  ,-1,i);\n\t\t\t\tlink(I[nr]  ,r   ,2 ,i);\n\t\t\t\tlink(I[nl]-1,l-1 ,2 ,i);\n\t\t\t\tlink(I[nl]-1,nl-1,-1,i);\n\t\t\t\tlink(I[nl]-1,nr  ,1 ,i);\n\t\t\t\tlink(I[nl]-1,r   ,-2,i);\n\t\t\t}\n\t\t}\n\t}\n\tfor(uint l=1,r=1;l<=n;l=r=r+1){\n\t\tuint x=I[l];while(I[r+1]==x)++r;\n\t\tif(!qd[x])continue;\n\t\tfor(uint i=1;i<=r;++i)++ct[i];\n\t\tfor(uint i=1;i<=n;++i)sm[i]=0;\n\t\tfor(uint i=n;i>=2;--i){\n\t\t\tuint v=map[i],u=pa[v];ct[u]+=ct[v];\n\t\t\tsm[u]+=sm[v]+ct[v]*(dist[v]-dist[u]);\n\t\t}\n\t\tct[RT]=0;\n\t\tfor(uint i=2;i<=n;++i){\n\t\t\tuint v=map[i],u=pa[v];\n\t\t\tsm[v]=sm[u]+(r-ct[v]*2)*(dist[v]-dist[u]);\n\t\t\tct[v]=0;\n\t\t}\n\t\tfor(uint i=1;i<=n;++i)sm[i]+=sm[i-1];\n\t\tfor(uint i=qd[x];i;i=qy[i].nt)\n\t\t\tAns[qy[i].id]+=sm[qy[i].a]*qy[i].b;\n\t}\n\tfor(uint i=1;i<=m;++i)\n\t\twrite((Ans[i]/2)&4294967295u),pc('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1599308827,
        "uid": 230249,
        "name": "xiaolilsq",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 [Ynoi2009]rpdq"
    },
    {
        "content": "\u672c\u9898\u89e3\u65e8\u5728\u4ecb\u7ecd\u5206\u5757\u7b97\u6cd5\u662f\u5982\u4f55\u5361\u8fc7\u7684\u3002\n\n\u9996\u5148\uff0c\u5982\u679c\u4f60\u4e0d\u4e86\u89e3\u5206\u5757\u7b97\u6cd5\u7684\u6d41\u7a0b\uff0c\u8bf7\u53bb\u697c\u4e0a\u770b\u4e00\u4e0bxiaolilsq\u5927\u4f6c\u7684\u5206\u5757\u7684\u56fe\u4ee5\u53camrsrz\u5927\u4f6c\u7684\u5f52\u5e76\u6392\u5e8f\u3002\n\n\u5982\u679c\u4f60\u60f3\u76f4\u63a5\u4f7f\u7528mrsrz\u5927\u4f6c\u7684\u65b9\u6cd5\u662f\u4e0d\u53ef\u4ee5\u8fc7\u53bb\u8fd9\u9898\u7684\u3002~~\u53ef\u80fd\u662f\u6211\u592a\u5f31\u4e86~~\n\n\u5728\u6b64\u5148\u8d34\u51fa\u6211\u7684\u7b2c\u4e00\u4e2a\u6b63\u786e\u800c\u4e14\u7406\u8bba\u590d\u6742\u5ea6\u6b63\u786e\u7684\u63d0\u4ea4\u3002~~\u6211\u592a\u5f31\u4e86\u4ee5\u81f3\u4e8e\u7b2c\u4e00\u6b21\u63d0\u4ea4\u7684\u7a7a\u95f4\u662f $O(m\\sqrt{n})$~~\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nconst int N=200007,B=450;\ntypedef unsigned uint;\ntypedef unsigned long long ull;\nint h[N],vx[N+N],nx[N+N],wx[N+N],ec;\n#define add(u,v,w) (nx[++ec]=h[u],vx[ec]=v,wx[ec]=w,h[u]=ec)\nint bel[N],lg[N+N],msk[19];\nint st[N+N][19],dl[N],kL[B+7],kR[B+7];\nint eid[N+N],edc;\nint id[N],dc;\null wk[N];\null wup[N];\nint l[N],r[N],stk[N],tp,k;\n/*el[edc]=vex\n eid[vex]=edc*/\nbool cmp(int a,int b){return id[a]<id[b];}\nint lrg(int a,int b){return id[a]<id[b]?a:b;}\nint lca(int a,int b)\n{\n\ta=eid[a];b=eid[b];\n\tif(a>b)a^=b^=a^=b;\n\tint k=lg[b-a+1];\n\treturn lrg(st[a][k],st[b-msk[k]+1][k]);\n}\nint pth[N],exsiz[B+B+7];\nvoid dfs(int i,int l)\n{\n\tst[eid[i]=++edc][0]=i;\n\tdl[id[i]=++dc]=i;wup[i]=wup[l]+wk[i];\n\tfor(int t=h[i];t;t=nx[t])if(vx[t]!=l)wk[vx[t]]=wx[t],dfs(vx[t],i),st[++edc][0]=i;\n}\nstruct qry{int l,r,id,s;};\nstd::vector<qry> v[B+7];//msqrt(n)\null s[N],f[N],fg[N];\null ans[N];\nuint tas;\nvoid sol(int u,int f)\n{\n\ttas+=s[u]*(k-s[u])*(wup[u]-wup[f]);\n\ts[f]+=s[u];\n}\nint main()\n{\n\tint n,m,u,_v,w;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<n;++i)scanf(\"%d%d%d\",&u,&_v,&w),add(u,_v,w),add(_v,u,w);\n\tdfs(1,0);*lg=-1;\n\tfor(int i=1;i<=n;++i)bel[i]=(i-1)/B+1,pth[i]=i;\n\tfor(int i=1;i<=bel[n];++i)kL[i]=(i-1)*B+1,kR[i]=(i*B<n?i*B:n);\n\tfor(int i=1;i<=edc;++i)lg[i]=lg[i>>1]+1;\n\tfor(int i=0;i<=18;++i)msk[i]=1<<i;\n\tfor(int k=1;k<=18;++k)\n\t\tfor(int i=1;i+msk[k]-1<=edc;++i)\n\t\t\tst[i][k]=lrg(st[i][k-1],st[i+msk[k-1]][k-1]);\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tscanf(\"%d%d\",l+i,r+i);\n\t\tint bl=bel[l[i]],br=bel[r[i]];\n\t\tif(bl!=br)\n\t\t\tv[br-1].push_back({l[i],r[i],i,1}),\n\t\t\tv[br-1].push_back({l[i],kR[bl],i,1}),\n\t\t\tv[br-1].push_back({kL[br],r[i],i,1}),\n\t\t\tv[bl].push_back({l[i],r[i],i,-1}),\n\t\t\tv[bl].push_back({l[i],kR[bl],i,-1}),\n\t\t\tv[bl].push_back({kL[br],r[i],i,-1});\n\t}\n\tfor(int i=1;i<=bel[n];++i)\n\t{\n\t\tstd::sort(pth+kL[i],pth+kR[i]+1,cmp);\n\t\tfor(int j=1,v,S;j<=edc;++j)\n\t\t\tif(eid[v=st[j][0]]==j)s[v]=(kL[i]<=v&&v<=kR[i]),f[v]=0;\n\t\t\telse s[v]+=s[S=st[j-1][0]],f[v]+=f[S]+wk[S]*s[S];\n\t\tfor(int j=2,v;j<=dc;++j)\n\t\t\tv=dl[j],f[v]=f[st[eid[v]-1][0]]+wk[v]*(s[1]-s[v]-s[v]);\n\t\tfor(int j=1;j<=n;++j)f[j]+=f[j-1]+fg[j],fg[j]=f[j];\n\t\tfor(auto&r:v[i])ans[r.id]+=r.s*(f[r.r]-f[r.l-1]);\n\t}\n\tfor(int T=1;T<=m;++T)\n\t{\n\t\tint l=::l[T],r=::r[T],bl=bel[l],br=bel[r];k=tas=0;\n\t\tif(bl==br)\n\t\t{\n\t\t\tfor(int j=kL[bl];j<=kR[bl];++j)\n\t\t\t\tif(pth[j]>=l&&pth[j]<=r)\n\t\t\t\t\texsiz[++k]=pth[j];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint i=kL[bl],j=kL[br];\n\t\t\twhile(pth[i]<l)++i;\n\t\t\twhile(pth[j]>r)++j;\n\t\t\twhile(i<=kR[bl]&&j<=kR[br])\n\t\t\t\tif(cmp(pth[i],pth[j])){exsiz[++k]=pth[i];while((++i)<=kR[bl]&&pth[i]<l);}\n\t\t\t\telse{exsiz[++k]=pth[j];while((++j)<=kR[br]&&pth[j]>r);}\n\t\t\tfor(;i<=kR[bl];++i)if(pth[i]>=l)exsiz[++k]=pth[i];\n\t\t\tfor(;j<=kR[br];++j)if(pth[j]<=r)exsiz[++k]=pth[j];\n\t\t}\n\t\tstk[tp=1]=1;\n\t\tfor(int i=(l==1)?2:1;i<=k;++i)\n\t\t{\n\t\t\tint lc=lca(exsiz[i],stk[tp]);s[exsiz[i]]=1;\n\t\t\twhile(tp>1&&eid[stk[tp-1]]>eid[lc])sol(stk[tp],stk[tp-1]),--tp;\n\t\t\tif(lc==stk[tp-1])sol(stk[tp],lc),stk[tp]=exsiz[i];\n\t\t\telse if(lc==stk[tp])stk[++tp]=exsiz[i];\n\t\t\telse s[lc]=0,sol(stk[tp],lc),stk[tp]=lc,stk[++tp]=exsiz[i];\n\t\t}\n\t\twhile(tp>1)sol(stk[tp],stk[tp-1]),--tp;\n\t\tprintf(\"%u\\n\",(uint)(ans[T]/2)+tas);\n\t}\n\treturn 0;\n}\n```\n**\u4ee5\u4e0b\u5217\u51fa\u7684\u65f6\u95f4\u90fd\u662f\u5341\u4e2a\u6d4b\u8bd5\u70b9\u7684\u603b\u65f6\u95f4**\n\n\u518d\u6b64\u5148\u5217\u51fa\u5df2\u7ecf\u6709\u7684\u4f18\u5316\n\n1. \u5728 dfs \u5e8f\u4e0a\u6c42\u7b54\u6848\n\n2. \u865a\u6811\u90e8\u5206\u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\n\n3. \u865a\u6811\u90e8\u5206\u4f7f\u7528 32 \u4f4d\u6574\u6570\u5e76\u4e14\u4f7f\u7528 mrsrz \u5927\u4f6c\u6240\u8bf4\u7684\u65b9\u6cd5\u4e0d\u5efa\u51fa\u865a\u6811\n\n\u63a5\u7740\uff0c\u8fdb\u884c\u4e86\u4e00\u4e9b\u5c0f\u4f18\u5316\uff0c\u6bd4\u8f83\u666e\u901a\u3002\n\n1. IO \u4f18\u5316\n\n2. \u6309 mrsrz \u5927\u4f6c\u7684\u8bf4\u6cd5\uff0c\u4f7f\u7528\u6307\u9488 $\\text{*tp}$ \u4ee3\u66ff $\\text{stk[tp]}$\n\n\u7136\u540e\uff0c\u53d1\u73b0\u4e86\u4e00\u79cd\u65b0\u7684\u8c03\u8bd5\u65b9\u6cd5\uff08\u5f3a\u70c8\u63a8\u8350\uff09\uff1a\u628a\u5176\u4ed6\u90e8\u5206\u6ce8\u91ca\u6389\uff0c\u53ea\u4fdd\u7559\u67d0\u90e8\u5206\uff0c\u518d\u63d0\u4ea4\u6765\u6d4b\u8bd5\u8fd0\u884c\u65f6\u95f4\u3002\n\n\u7ed3\u679c\u4ec5\u524d\u9762\u7684\u6574\u5757\u90e8\u5206\u8fd0\u884c\u65f6\u95f4\u5c31\u8fbe\u5230\u4e86 (B=450)53.2s\n\n\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c```eid[v=st[j][0]]==j```\u548c``S=st[j-1][0]``\uff0c\u4ee5\u53ca``st[eid[v]-1][0]``\u8fdb\u884c\u4e86\u5927\u91cf\u6570\u7ec4\u8c03\u7528\uff0c\u800c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u9884\u5904\u7406\u8fbe\u5230\u3002\n\n\u5341\u5206\u559c\u4eba\uff0c\u8be5\u90e8\u5206\u6709\u8f83\u5927\u7684\u63d0\u5347\u3002\u63a5\u4e0b\u6765\u5904\u7406\u4e0b\u65b9\u90e8\u5206\n\n\u6b64\u65f6\u5f52\u5e76\u6392\u5e8f\u7684\u65f6\u95f4\u5df2\u7ecf\u8fbe\u5230 11.06s\uff0c\u66ff\u6362\u90e8\u5206\u53d8\u91cf\uff0c\u5c55\u5f00\u90e8\u5206\u51fd\u6570\uff0c\u65f6\u95f4\u8fbe\u5230 9.83s\u3002\n\n\u4ec5\u6c42 lca \u4ee3\u7801\u5c31\u8dd1\u4e86 38.90s\uff0c\u53ef\u89c1\u74f6\u9888\u3002\n\n\u6ce8\u610f\u5230\u672c\u9898**\u4e0d\u9700\u8981\u77e5\u9053\u662f\u54ea\u4e9b\u70b9\u5728\u865a\u6811\u91cc**\uff0c\u800c\u53ea\u9700\u8981\u6bcf\u4e2a\u70b9\u6709\u552f\u4e00\u7684\u5bf9\u5e94\u5373\u53ef\uff0c\u4e8e\u662f\u5728\u6c42\u865a\u6811\u65f6\u7528\u6b27\u62c9\u5e8f\u76f4\u63a5\u8868\u793a\uff0c\u7701\u6389\u4e24\u6b21\u6570\u7ec4\u64cd\u4f5c\uff0c\u53e6\u5916\u5c06\u51fd\u6570\u5c55\u5f00\u81f3 main \u5185\u3002\u8fd0\u884c\u65f6\u95f4\u51cf\u4e3a 27.72s\u3002\n\n\u6ce8\u610f\u5230\u8fd9\u65f6\u6563\u5757\u5df2\u7ecf\u6ca1\u6709\u4ec0\u4e48\u4f18\u5316\u7a7a\u95f4\u4e86\uff0c\u53bb\u6574\u5757\u7ee7\u7eed\u4f18\u5316\u3002\u6b64\u65f6\u8be5\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nfor(int j=1,v,S;j<=edc;++j)\n\tif(elhit[j])v=vel[j],s[v]=(kL[i]<=v&&v<=kR[i]),f[v]=0;\n\telse s[v=vel[j]]+=s[S=vel[j-1]],f[v]+=f[S]+wk[S]*s[S];\nfor(int j=2,v;j<=dc;++j)v=dl[j],f[v]=f[fa[v]]+wk[v]*(s[1]-s[v]-s[v]);\nfor(int j=1;j<=n;++j)fg[j]+=f[j],f[j]=fg[j]+f[j-1];\nfor(int t=qh[i];t;t=qnx[t])ans[e[t].id]+=e[t].s*(f[e[t].r]-f[e[t].l-1]);\n```\n\n## \u975e\u5e38\u91cd\u8981\uff1a\u5927\u91cfcache\u4f18\u5316\n\n\u8ba1\u7b97\u673a\u5728\u8bfb\u53d6\u4e00\u4e2a\u533a\u57df\u65f6\uff0c\u4f1a\u5c06\u4e34\u8fd1\u7684\u533a\u57df\u4e5f\u8bfb\u8fdb\u5feb\u901f\u5b58\u53d6\u7684\u4f4d\u7f6e\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6309\u987a\u5e8f\u8303\u56f4\u6570\u7ec4\uff0c\u4f1a\u5feb\u5f88\u591a\u3002\n\n0. \u6ce8\u610f\u5230 B=315 \u65f6\u6563\u5757\u90e8\u5206\u5c31\u8dd1\u4e86 33.16s\uff0c\u56e0\u6b64\u5c06 B \u8c03\u4e3a 200 \u6765\u5e73\u8861\n\n1. \u5c06 s \u548c f \u6574\u6210\u7ed3\u6784\u4f53\uff08\u4e0d\u77e5\u9053\u4f1a\u4e0d\u4f1a\u5feb\uff09\n\n\u6ce8\u610f\u5230\u7b2c\u4e00\u4e2a\u5faa\u73af```elhit```\u7684\u90e8\u5206\u53ef\u4ee5\u7528```memset```\u4ee3\u66ff\uff0c```else```\u90e8\u5206\u53ef\u4ee5\u7528 dfs \u5e8f\u5faa\u73af\u4ee3\u66ff\n\n2. \u7528 dfs \u5e8f\u5faa\u73af\u4ee3\u66ff\u6b27\u62c9\u5e8f\u5faa\u73af\uff08\u7b2c\u4e00\u4e2a\u5faa\u73afB=100:26.61s->22.96s\uff09\n\n3. \u6ce8\u610f\u5230 v \u4e0d\u662f\u8fde\u7eed\u7684\uff0c\u56e0\u6b64```fa[v]```\u7684\u8c03\u7528\u4f1a\u5bfc\u81f4 cache \u4e0d\u53cb\u597d\uff0c\u9884\u5904\u7406\u6570\u7ec4```fadl[x]=fa[dl[x]]```\u89e3\u51b3\u95ee\u9898\uff08\u7b2c\u4e00\u4e2a\u5faa\u73afB=100:22.96s->17.72s\uff09\n\n4. \u6700\u91cd\u8981\u7684\uff1a\u5c06val\u7684\u5b58\u50a8\u65b9\u5f0f\u6539\u4e3a\u6309```id[x]```\u5b58\u50a8\uff0c\u4e5f\u5c31\u662f\u8bf4```val[id[x]]=trueval[x]```\uff0c\u4f7f\u4e24\u4e2a\u5faa\u73af cache \u6027\u80fd\u5927\u5e45\u63d0\u5347\uff0c\u540c\u65f6\u4e00\u4e2a\u5faa\u73af cache \u6027\u80fd\u964d\u4f4e( B=200 \u603b\u7528\u65f6\u51cf\u5c11 8s\uff09\n\n\u6700\u7ec8\uff0c\u6211\u4eec\u4ee5\u6700\u4f18\u89e3\u5012\u4e09\u7684\u4f4d\u7f6eA\u6389\u4e86\u672c\u9898\u3002",
        "postTime": 1649430547,
        "uid": 151415,
        "name": "Edward1002001",
        "ccfLevel": 7,
        "title": "\u9898\u89e3\uff1aLGOJT6778 rpdq"
    },
    {
        "content": "\u53ef\u4ee5\u4e0d\u7528\u4e8c\u79bb\u83ab\u961f\u548c $\\text{top cluster}$\uff0c\u7a7a\u95f4\u5141\u8bb8\u6839\u53f7\u7684\u8bdd\u4e5f\u53ef\u4ee5[\u5f3a\u5236\u5728\u7ebf](https://www.bilibili.com/video/av851774506)\u3002\n\n---\n\u5148\u628a\u539f\u6811\u4e09\u5ea6\u5316\uff0c\u865a\u70b9\u7f16\u53f7\u53ef\u4ee5\u8bbe\u4e3a\u4efb\u610f $>n$ \u7684\u6570\uff0c\u53d1\u73b0\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u3002\n\n\u4e09\u5ea6\u5316\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5220\u9664 $O(\\frac{n}{B})$ \u4e2a\u70b9\uff0c\u4f7f\u5f97\u5269\u4e0b $O(\\frac{n}{B})$ \u4e2a\u5927\u5c0f\u4e3a $O(B)$ \u7684\u8fde\u901a\u5757\u3002\n\n---\n\n\u70b9\u5206\u6cbb\uff0c\u6bcf\u6b21\u5904\u7406\u8fc7\u5206\u6cbb\u4e2d\u5fc3\u70b9\u5bf9\u7684\u8d21\u732e\uff0c\u628a\u5206\u6cbb\u4e2d\u5fc3\u5220\u6389\uff0c\u5f53\u524d\u8fde\u901a\u5757\u5927\u5c0f $\\leq B$ \u65f6\u9000\u51fa\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u4e00\u4e2a\u70b9\u6709\u4e0d\u8d85\u8fc7 $3$ \u4e2a\u5b50\u6811\uff08\u4e09\u5ea6\u5316\uff09\uff0c\u5206\u522b\u53eb $a,b,c$\u3002  \n\u5bf9\u4e8e\u4e00\u6b21\u8be2\u95ee\uff0c\u5728\u5b83\u4eec\u5b50\u6811\u91cc\u7684 $dep$ \u548c\uff08\u5230\u5206\u6cbb\u4e2d\u5fc3\uff09\u5206\u522b\u53eb $sum_a,sum_b,sum_c$\uff0c\u70b9\u4e2a\u6570\u5206\u522b\u53eb $cnt_a,cnt_b,cnt_c$\u3002  \n\u90a3\u4e48\u5206\u6cbb\u4e2d\u5fc3\u5bf9\u8fd9\u4e2a\u8be2\u95ee\u7684\u8d21\u732e\u5c31\u662f  \n\n$$sum_a(cnt_b+cnt_c)+sum_b(cnt_a+cnt_c)+sum_c(cnt_a+cnt_b)+[\\text{\u5206\u6cbb\u4e2d\u5fc3\u5728\u8be2\u95ee\u533a\u95f4}](sum_a+sum_b+sum_c)$$  \n\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u6811\uff0c\u5904\u7406\u5b50\u6811\u5185 $sum,cnt$ \u7684\u524d\u7f00\u548c\uff0c\u7136\u540e\u56de\u7b54\u6bcf\u6b21\u8be2\u95ee\u3002  \n\u8fd9\u4e00\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(\\frac{n}{B}(n+q))$ \uff08\u56e0\u4e3a\u4e00\u5171\u9700\u8981\u5206\u6cbb $O(\\frac{n}{B})$ \u6b21\uff09\uff0c\u7a7a\u95f4\u7ebf\u6027\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u8bc1\u660e\uff1a\n\n\u6700\u540e\u4e00\u6b21\u5206\u6cbb\u4e4b\u524d\uff0c\u6bcf\u4e2a\u8fde\u901a\u5757\u5927\u5c0f $\\geq B$\uff0c\u6240\u4ee5\u70b9\u5206\u6811\u4e0d\u8d85\u8fc7 $O(\\frac{n}{B})$ \u4e2a\u53f6\u5b50\uff0c\u6240\u4ee5\u70b9\u5206\u6811\u8282\u70b9\u6570 $\\leq O(\\frac{n}{B})$\u3002\n\n---\n\n\u73b0\u5728\u539f\u6811\u53d8\u6210\u4e86 $O(\\frac{n}{B})$ \u4e2a\uff08\u6bcf\u6b21\u5206\u6cbb\u81f3\u591a\u589e\u52a0 $3$ \u4e2a\uff09\u5927\u5c0f\u4e0d\u8d85\u8fc7 $B$ \u7684\u8fde\u901a\u5757\u3002  \n\u5904\u7406\u51fa\u4e24\u4e24 $dis$\uff0c\u95ee\u9898\u53d8\u6210\u4e86 $O(nB)$ \u4e2a\u70b9\uff0c$O(q)$ \u6b21\u4e8c\u7ef4\u6570\u70b9\uff0c\u626b\u63cf\u7ebf\u6839\u53f7\u5e73\u8861\u5373\u53ef\u3002  \n\u5177\u4f53\u5b9e\u73b0\u65f6\uff0c\u53ef\u4ee5\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u53f3\u7aef\u70b9\uff0c\u6c42\u51fa\u8be5\u8fde\u901a\u5757\u4e0e\u8be5\u70b9\u7684 $dis$\uff0c\u63d2\u5165\u8fd9\u4e9b\u70b9\u5bf9\uff0c\u5c31\u53ef\u4ee5\u505a\u5230\u7ebf\u6027\u7a7a\u95f4\uff0c\u4e0d\u8fc7 $\\text{dfs/bfs}$ \u5e38\u6570\u8f83\u5927\uff0c\u53ef\u80fd\u901a\u8fc7\u4e0d\u4e86\u672c\u9898\u3002  \n\u8fd8\u6709\u4e00\u79cd\u5199\u6cd5\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u901a\u5757\u5185\uff0c\u901a\u8fc7\u4ece $fa$ \u7684 $dis$ \u9012\u63a8\u5904\u7406\u51fa\u4e24\u4e24 $dis$\uff0c\u4e8c\u7ef4\u524d\u7f00\u548c\u56de\u7b54\u6bcf\u6b21\u8be2\u95ee\uff0c\u8fd9\u79cd\u5199\u6cd5\u5e38\u6570\u8f83\u5c0f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(q\\frac{n}{B}+nB)$\u3002\n\n\u53d6 $B=\\sqrt n$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+q)\\sqrt n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n+q)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\u9700\u8981\u4ee3\u7801\u53ef\u4ee5\u79c1\u6211\u3002\n\n---\n\n\u5982\u679c\u5f3a\u5236\u5728\u7ebf\u7684\u8bdd\uff0c\u70b9\u5206\u6cbb\u65f6\u5b58\u4e0b\u6240\u6709\u524d\u7f00\u548c\u6570\u7ec4\u3002\n\n\u4e8c\u7ef4\u6570\u70b9\u90e8\u5206\u53ef\u6301\u4e45\u5316\u5206\u5757\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+q)\\sqrt n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(q+n\\sqrt n)$\u3002\n\n[![](https://cdn.luogu.com.cn/upload/image_hosting/mz8hpfj0.png)](https://www.bilibili.com/video/av381826890)",
        "postTime": 1645950258,
        "uid": 101734,
        "name": "\u8fdd\u89c4\u7528\u6237\u540d76G!ihcm",
        "ccfLevel": 9,
        "title": "P6778 [Ynoi2009] rpdq \u9898\u89e3"
    },
    {
        "content": "\u4e00\u79cd\u663e\u7136\u7684\u505a\u6cd5\u662f\u4e8c\u79bb\u83ab\u961f\u540e\u6839\u53f7\u5e73\u8861\u5730\u7ef4\u62a4\u6811\uff1b\u4f46\u662f\u4e8b\u5b9e\u4e0a\u6839\u53f7\u5206\u6cbb\u7684\u8fb9\u5206\u6cbb\u53ef\u4ee5\u76f4\u63a5\u505a\uff0c\u800c\u4e14\u662f\u4e00\u4e2a\u601d\u7ef4\u96be\u5ea6\u76f8\u4eff\u3001\u4ee3\u7801\u96be\u5ea6\u7565\u4f4e\u7684\u505a\u6cd5\u3002\n\n\u5f53\u524d\u5206\u6cbb\u65f6\uff0c\u5904\u7406\u6bcf\u4e2a\u8be2\u95ee\u7a7f\u8fc7\u4e2d\u5fc3\u8fb9\u7684\u6240\u6709\u8def\u5f84\u7684\u8d21\u732e\u3002\u8bb0\u67d0\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u4e3a $dep$\uff0c\u5206\u6cbb\u4e2d\u5fc3\u8fb9\u7684\u957f\u5ea6\u4e3a $gap$\uff0c\u5219\u8d21\u732e\u548c\u4e3a $\\sum_{u\\in ls \\cap u\\in [ql,qr]}\\sum_{v\\in rs\\cap v\\in [ql,qr]}dep_u+dep_v+gap$\uff0c\u62c6\u5f00\u5373 $cnt_{v\\in rs\\cap v\\in [ql,qr]}sum_{u\\in rs\\cap u\\in [ql,qr]}+cnt_{u\\in rs\\cap u\\in [ql,qr]}sum_{v\\in rs\\cap v\\in [ql,qr]}+cnt_{u\\in ls \\cap u\\in [ql,qr]}cnt_{v\\in rs\\cap b\\in [ql,qr]}gap$\u3002\u6bcf\u6b21\u5206\u6cbb\u7684\u65f6\u5019\u9884\u5904\u7406 $[1,n]$ \u7684 $dep$ \u548c\u51fa\u73b0\u6b21\u6570\u7684\u524d\u7f00\u548c\u5373\u53ef\u505a\u5230 $O(n)$ \u9884\u5904\u7406\uff0c$O(1)$ \u56de\u7b54\u8be2\u95ee\u3002\u6839\u53f7\u5e73\u8861\u540e\u8fd9\u6837\u7684\u5206\u6cbb\u53ea\u6709 $O(\\sqrt{n})$ \u6b21\u3002\n\n\u5bf9\u4e8e\u5927\u5c0f\u5c0f\u4e8e\u6839\u53f7\u7684\u5206\u6cbb\u5c42\uff0c\u9884\u5904\u7406\u6240\u6709\u8def\u5f84\uff0c\u6bcf\u6b21\u8be2\u95ee\u90fd\u76f8\u5f53\u4e8e\u662f\u5728\u4e00\u4e2a\u8868\u793a\u8d21\u732e\u5173\u7cfb\u7684\u4e8c\u7ef4\u5e73\u9762\u4e0a\u8be2\u95ee\u77e9\u5f62\u548c\u3002\u5e73\u9762\u7684\u4e0b\u6807\u662f $O(\\sqrt{n})$ \u7ea7\u522b\u7684\uff0c\u53ef\u4ee5\u6bcf\u6b21 $O(n)$ \u9884\u5904\u7406\uff0c$O(1)$ \u67e5\u8be2\u3002\n\n\u79bb\u7ebf\u540e\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u65f6\u95f4 $O(n\\sqrt{n})$\uff0c\u7a7a\u95f4 $O(n)$ \u7684\u505a\u6cd5\u3002\u4e5f\u53ef\u4ee5\u7528 $O(n\\sqrt{n})$ \u7684\u7a7a\u95f4\u6765\u505a\u5230\u5728\u7ebf\u56de\u7b54\u8be2\u95ee\u3002\n\n\u4ee3\u7801\u653e\u7684\u662f\u6ca1\u6709\u7ecf\u8fc7\u5361\u5e38\u7684\u7248\u672c\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int INF=0x3f3f3f3f,N=4e5+5,SN=1005;\nint read(int ret=0,int w=0,char ch=getchar()){\n    while(!isdigit(ch)) w=ch=='-',ch=getchar();\n    while(isdigit(ch)) ret=ret*10+ch-'0',ch=getchar();\n    return w?-ret:ret;\n}\nvoid write(uint x){if(x>9) write(x/10);putchar('0'+x%10);}\n\nint n,m,head[N],cntedg=1,foc,focsiz,cnt[N][2],vis[N<<1],bsiz;\nuint ans[N],sum[N][2];\nstruct sontyp{int v,w;};\nvector<sontyp> son[N];\nstruct{int l,r;}qry[N];\nstruct{int to,nxt,w;}edg[N<<1];\n\nvoid add(int u,int v,int w){edg[++cntedg]={v,head[u],w},head[u]=cntedg;}\n\nvoid trans(int u,int fa=0){\n    for(int las=u,flag=0;auto i:son[u]){\n        if(i.v==fa) continue;\n        if(!flag) flag=1,add(u,i.v,i.w),add(i.v,u,i.w);\n        else ++n,add(las,n,0),add(n,las,0),add(n,i.v,i.w),add(i.v,n,i.w),las=n;\n        trans(i.v,u);\n    }\n}\n\nvoid getfoc(int u,int tot,int fa=0){\n    static int siz[N];siz[u]=1;\n    for(int i=head[u];i;i=edg[i].nxt){\n        int v=edg[i].to;\n        if(v==fa||vis[i]) continue;\n        getfoc(v,tot,u),siz[u]+=siz[v];\n        if(max(siz[v],tot-siz[v])<focsiz)\n            focsiz=max(siz[v],tot-siz[v]),foc=i;\n    }\n}\n\nnamespace bf{\n    int las[N],nxt[N],s[SN],tot;\n    uint sum[SN][SN];\n    void dfs2(int u,int fa=0){\n        s[++tot]=u;\n        for(int i=head[u];i;i=edg[i].nxt)\n            if(edg[i].to!=fa&&!vis[i]) dfs2(edg[i].to,u);\n    }\n    void dfs3(int rt,int u,int fa=0,uint dep=0){\n        if(nxt[rt]>nxt[u]) sum[nxt[rt]][nxt[u]]=dep;\n        for(int i=head[u];i;i=edg[i].nxt)\n            if(edg[i].to!=fa&&!vis[i]) dfs3(rt,edg[i].to,u,dep+edg[i].w);\n    }\n    void solve(int e){\n        int u=edg[e].to;\n        tot=0,dfs2(u),sort(s+1,s+1+tot),s[tot+1]=INF;\n        for(int i=1,j=0;i<=n;las[i]=j,++i) while(s[j+1]<=i) ++j;\n        for(int i=1,j=1;i<=n;nxt[i]=j,++i) while(s[j]<i) ++j;\n        for(int i=1;i<=tot;++i)\n            for(int j=1;j<=tot;++j) sum[i][j]=0;\n        for(int i=1;i<=tot;++i) dfs3(s[i],s[i]);\n        for(int i=1;i<=tot;++i){\n            for(int j=1;j<=tot;++j) sum[i][j]+=sum[i][j-1];\n            for(int j=1;j<=tot;++j) sum[i][j]+=sum[i-1][j];\n        }\n        for(int i=1;i<=m;++i){\n            int l=nxt[qry[i].l],r=las[qry[i].r];\n            if(l<=r) ans[i]+=sum[r][r]-sum[l-1][r]-sum[r][l-1]+sum[l-1][l-1];\n        }\n    }\n}\n\nvoid dfs1(int u,int opt,int &siz,int fa=0,uint dep=0){\n    ++siz,sum[u][opt]=dep,cnt[u][opt]=1;\n    for(int i=head[u];i;i=edg[i].nxt)\n\t    if(edg[i].to!=fa&&!vis[i]) dfs1(edg[i].to,opt,siz,u,dep+edg[i].w);\n}\n\ninline uint getsum(int l,int r,int opt){return sum[r][opt]-sum[l-1][opt];};\ninline int getcnt(int l,int r,int opt){return cnt[r][opt]-cnt[l-1][opt];};\n\nvoid solve(int e,int tot){\n    if(tot<=bsiz) return bf::solve(e);\t\t\t\t      \n    int u=edg[e].to,v=edg[e^1].to,gap=edg[e].w,siz0=0,siz1=0;\n    vis[e]=vis[e^1]=1;\n    for(int i=1;i<=n;++i) sum[i][0]=sum[i][1]=cnt[i][0]=cnt[i][1]=0;\n    dfs1(u,0,siz0),dfs1(v,1,siz1);\n    for(int i=1;i<=n;++i){\n        sum[i][0]+=sum[i-1][0],sum[i][1]+=sum[i-1][1];\n        cnt[i][0]+=cnt[i-1][0],cnt[i][1]+=cnt[i-1][1];\n    }\n    for(int i=1;i<=m;++i){\n        int l=qry[i].l,r=qry[i].r;\n        ans[i]+=getsum(l,r,0)*getcnt(l,r,1)+getsum(l,r,1)*getcnt(l,r,0)+(uint)gap*getcnt(l,r,0)*getcnt(l,r,1);\n    }\n    if(siz0>1) focsiz=INF,getfoc(u,siz0),solve(foc,siz0);\n    if(siz1>1) focsiz=INF,getfoc(v,siz1),solve(foc,siz1);\n}\n\nsigned main(){\n    n=read(),m=read(),bsiz=500;\n    for(int i=1;i<n;++i){\n        int u=read(),v=read(),w=read();\n        son[u].push_back({v,w}),son[v].push_back({u,w});\n    }\n    for(int i=1;i<=m;++i) qry[i]={read(),read()};\n    trans(1),focsiz=INF,getfoc(1,n),solve(foc,n);\n    for(int i=1;i<=m;++i) write(ans[i]),putchar('\\n');\n    return 0;\n}\n\n//~kawaii~\n```",
        "postTime": 1653920215,
        "uid": 372708,
        "name": "Yahbim",
        "ccfLevel": 0,
        "title": "P6778 [Ynoi2009] rpdq \u9898\u89e3\uff08\u7eaf\u8fb9\u5206\u6cbb\uff09"
    },
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u4e0d\u77e5\u4e3a\u4f55\u53c8 WA \u53c8 TLE \u7684 sb \u505a\u6cd5\u3002\n\n~~\u60f3\u5230\u5206\u5757\u7684\u8001\u54e5\u597d nb \u554a\uff0c\u53ef\u60dc\u5e38\u6570\u6709\u70b9\u5927~~\n\n\u9996\u5148\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a\u6280\u5de7\uff0c\u5c06\u4e00\u4e2a\u96c6\u5408 $S$ \u6240\u6709\u7684\u70b9\u5230\u6839\u8def\u5f84\u4e0a\u5404\u81ea\u52a0\u8fb9\u6743\uff0c\u7136\u540e\u8be2\u95ee $\\sum_{x\\in S}\\text{dis}(x,y)$ \u5c31\u53ef\u4ee5\u5148\u9884\u5904\u7406\u51fa\u6240\u6709\u7684\u70b9\u5230\u6839\u8def\u5f84\u7684\u8fb9\u6743\u548c $val$\uff0c\u628a\u8fd9\u90e8\u5206\u5148\u7b97\u6389\uff0c\u8be2\u95ee $y$ \u5230\u6839\u8def\u5f84\u7684\u548c\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230 $\\sum_{x\\in S}val(\\text{LCA}(x,y))$\u3002\n\n\u7136\u540e\u53d1\u73b0\u76f4\u63a5\u83ab\u961f\u590d\u6742\u5ea6\u7aef\u70b9\u79fb\u52a8\u8981 $\\log^2n$\uff0c\u7528 $\\text{LCT}$ \u4e5f\u8981 $\\log n$\uff0c\u81ea\u95ed\u4e86\u3002\n\n~~\u6211\u4e2a\u4eba\u731c\u60f3 lxl \u4e0d\u51fa\u8fb9\u6743\u90fd\u662f $1$ \u5e94\u8be5\u662f\u4e0d\u8ba9\u6811\u72b6\u6570\u7ec4\u8fc7\u3002~~ upd: \u5df2\u88ab\u5b98\u65b9\u6253\u5047\n\n\u8003\u8651\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u3002\u56e0\u4e3a\u8be2\u95ee\u4e2a\u6570\u8fbe\u5230 $n\\sqrt{n}$ \u7ea7\u522b\uff0c\u5355\u6b21\u8be2\u95ee\u9700\u8981\u505a\u5230 $\\mathcal{O}(1)$\u3002\n\n\u518d\u8003\u8651\u7aef\u70b9\u79fb\u52a8\u3002\u663e\u7136\u7528\u6811\u5256+\u7ebf\u6bb5\u6811\u5df2\u7ecf\u4e0d\u600e\u4e48\u884c\u4e86\uff0c\u9700\u8981\u4f7f\u7528\u6811\u5256+\u5206\u5757\u5b9e\u73b0\u533a\u95f4\u52a0\u3002\u4f46\u662f\u8fd9\u6837\u4e5f\u9700\u8981 $\\mathcal{O}(\\sqrt{n}\\log n)$\u3002\n\nupd: \u5177\u4f53\u7684\uff0c\u8981\u505a\u5230 $\\mathcal{O}(1)$ \u67e5\u8be2\uff0c\u53ef\u4ee5\u7ef4\u62a4\u5757\u5185\u6807\u8bb0\uff0c\u5757\u5185\u524d\u7f00\u548c\uff0c\u5927\u5757\u7684\u524d\u7f00\u548c\uff0c\u6bcf\u6b21\u67e5\u5757\u5185\u548c\u5927\u5757\u7684\u524d\u7f00\u548c\u5373\u53ef\u3002\n\n~~\u8fd9 TM \u4e0d\u662f\u767d\u60f3\u4e86\u5417~~\n\n\u4f46\u662f\u6709\u4e00\u4e2a\u6027\u8d28\uff0c\u867d\u7136\u6211\u4eec\u8fdb\u884c\u4e86 $\\log n$ \u6b21\u533a\u95f4\u52a0\uff0c\u4f46\u662f\u8fd9\u4e9b\u533a\u95f4\u4e0d\u76f8\u4ea4\uff0c\u6240\u4ee5\u6d89\u53ca\u7684\u4e2a\u6570\u603b\u548c\u4e0d\u8d85\u8fc7 $n$\u3002\n\n\u8fd9\u5c31\u542f\u53d1\u6211\u4eec\u5728\u5206\u5757\u7684\u65f6\u5019\u7ee7\u7eed\u5e73\u8861\u590d\u6742\u5ea6\u3002\n\n\u8bbe\u5757\u957f\u4e3a $S$\uff0c\u6bcf\u6b21\u8fb9\u89d2\u662f\u4f1a\u8dd1\u6ee1\u7684\uff0c\u4f46\u662f $\\log n$ \u6b21\u533a\u95f4\u52a0\u6d89\u53ca\u7684\u5757\u53ea\u6709 $\\frac nS$\uff0c\u6240\u4ee5 $S\\log n+\\frac nS\\ge 2\\sqrt{n\\log n}$\uff0c\u5728 $S=\\sqrt{\\frac n{\\log n}}$ \u65f6\u53d6\u7b49\u3002\n\n\u4f46\u662f\u6811\u5256\u7684 $\\log n$ \u662f\u8dd1\u4e0d\u6ee1\u7684\uff0c\u6240\u4ee5\u5927\u53ef\u4ee5\u5c06 $\\log n=w$\uff0c\u603b\u590d\u6742\u5ea6\u7684\u74f6\u9888\u5c31\u662f\u5206\u5757\uff0c\u65f6\u95f4 $\\mathcal{O}(n\\sqrt{nw})$\uff0c\u5b9e\u9645\u6d4b\u8bd5\u4e2d $w=2\\sim 4$ \u5728\u968f\u673a\u6570\u636e\u4e2d\u80fd\u8dd1\u5230\u6700\u4f18\uff0c~~\u4f46\u662f lxl \u8981\u662f\u5168\u51fa\u83ca\u82b1+\u94fe+\u4e8c\u53c9\u6811\u6211\u5c31\u4e0d\u77e5\u9053\u4e86~~\n\n\u672c\u6765\u6211\u4ee5\u4e3a lxl \u5c31\u662f\u8fd9\u4e48\u60f3\u7684\uff0c\u7ed3\u679c\u6709\u4e25\u683c $\\mathcal{O}(n\\sqrt{n})$\uff0c\u5982\u679c\u6807\u7b97\u4e0d\u662f\u8fd9\u4e2a\uff0c\u770b\u6765\u8fd9\u4e2a\u4f1a\u88ab\u5361\u7206\u4e86\u3002\n\n\u4e0d\u8fc7\u56e0\u4e3a $\\log n$ \u5728\u6839\u53f7\u91cc\u9762\uff0c\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u7684\u5e38\u6570\u4e0d\u5927\uff0c\u5927\u80c6\u731c\u60f3 **\u7cbe \u7ec6 \u7684 \u5b9e \u73b0** \u662f\u53ef\u4ee5\u8fc7\u7684\u3002",
        "postTime": 1599866922,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6778 \u3010[Ynoi2009]rpdq\u3011"
    }
]