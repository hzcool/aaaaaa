[
    {
        "content": "\u53cc\u6743\u56fe\uff0c\u660e\u663e\u7684\u53cc\u7aef\u961f\u5217BFS\u554a\uff0c\u9898\u89e3\u91cc\u600e\u4e48\u6ca1\u4eba\u5199\u5462\u3002\u3002\n****\n\u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u53cc\u7aef\u961f\u5217BFS\u5427\uff1a  \n\n\u6211\u4eec\u5728\u7528$\\text{dijkstra}$\u8dd1\u6700\u77ed\u8def\u7684\u65f6\u5019\uff0c\u4f1a\u7528\u5230\u5806\u4f18\u5316\uff0c\u628a\u5f53\u524d\u6700\u77ed\u8def\u6700\u5c0f\u7684\u70b9\u653e\u5230\u524d\u9762\u53bb\u3002  \n\u73b0\u5728\u8fd9\u4e2a\u56fe\u7684\u6743\u8981\u4e48\u662f$0$\uff0c\u8981\u4e48\u662f$1$\uff0c\u5982\u679c\u8fd8\u7528\u5806\u6765\u7ef4\u62a4\uff0c\u4f3c\u4e4e\u6709\u4e9b\u6d6a\u8d39\u4e86\u3002  \n\n\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u8981\u7528\u5230\u53cc\u7aef\u961f\u5217\uff0c\u5b83\u652f\u6301\u67e5\u8be2\u961f\u5934\u3001\u961f\u5c3e\uff0c\u52a0\u5165\u5143\u7d20\u5230\u961f\u5934\u3001\u961f\u5c3e\u3002  \n\u6211\u4eec\u4ecd\u7136\u5e0c\u671b\u8ddd\u79bb\u5927\u7684\u70b9\u653e\u540e\u9762\uff0c\u5c0f\u7684\u653e\u524d\u9762\uff0c\u8be5\u600e\u4e48\u529e\u5462\uff1f  \n\u56e0\u4e3a\u53ea\u6709$0$\u548c$1$\u4e24\u79cd\u6743\u503c\uff0c\u5982\u679c$u\\rightarrow v$\u7684\u8fb9\u662f$0$\u6743\uff0c\u90a3\u5c31\u628a$v$\u653e\u5728\u961f\u5934\uff1b\u5426\u5219\u653e\u5728\u961f\u5c3e\u3002  \n\u73b0\u5728\u539f\u672c$\\Theta(\\log n)$\u7684\u5806\u4f18\u5316\uff0c\u5728\u8fd9\u91cc\u53ea\u9700\u8981$\\Theta(1)$\u4e86\uff01\n\n****\n\u4ecb\u7ecd\u5b8c\u4e86\u53cc\u7aef\u961f\u5217BFS\uff0c\u90a3\u8fd9\u9898\u7684\u505a\u6cd5\u5c31\u5f88\u660e\u663e\u4e86\uff0c\u76f4\u63a5\u5957\u677f\u5b50\u5373\u53ef\u3002  \n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8fd9\u91cc\u6211\u76f4\u63a5\u7528\u4e86STL\uff0c\u9700\u8981\u4f7f\u7528\u5e93$\\text{deque}$\u3002  \n\u8fd9\u6837\u505a\u7684\u590d\u6742\u5ea6\u662f$\\Theta(nm)$\u7684\uff0c\u5728\u6784\u9020\u6570\u636e+\u5927\u6570\u636e\u91cf\u7684\u60c5\u51b5\u4e0b\uff0c\u6bd4$\\text{SPFA}$\u548c$\\text{dijkstra}$ $\\color{red}\\text{\u90fd\u8981\u5feb}$\u3002  \n\u4e00\u4e9b\u5173\u952e\u7684\u90e8\u5206\u6211\u52a0\u4e86\u6ce8\u91ca\uff0c\u6ca1\u592a\u660e\u767d\u7684\u53ef\u4ee5\u770b\u770b\u3002\n\n\u4ee3\u7801\u5949\u4e0a\uff1a  \n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<deque>\n#include<vector>\n#define N 503\n#define inf 0x3f3f3f3f\n#define ll long long\nusing namespace std;\n\nstruct node{\n    int x,y;\n    node(int x=0,int y=0):x(x),y(y){}\n};\n\nchar a[N][N];\nbool vis[N][N];\nint d[N][N];\nconst int dx[4] = {0,0,1,-1};\nconst int dy[4] = {1,-1,0,0};\nint n,m,x1,y1,x2,y2;\n\ninline void read(int &x);\nvoid print(int x);\nvoid bfs();\n\nint main(){\n    while(1){\n        read(n),read(m);\n        if(n==0&&m==0) break;\n        for(int i=1;i<=n;++i){\n            int j = 0;\n            char c = getchar();\n            while(c!='#'&&c!='@') c = getchar(); \n            while(c=='#'||c=='@'){\n                a[i][++j] = c;\n                c = getchar();\n            }\n        }\n        read(x1),read(y1),read(x2),read(y2);\n        ++x1,++y1,++x2,++y2;\n        bfs();\n        print(d[x2][y2]);\n        putchar('\\n');\n    }\n    return 0;\n}\n\nvoid bfs(){\n    int x,y,nx,ny,w;\n    memset(d,inf,sizeof(d));\n    memset(vis,0,sizeof(vis));\n    d[x1][y1] = 0;\n    deque<node> q; //\u65b0\u5efa\u4e00\u53ea\u53cc\u7aef\u961f\u5217\n    q.push_back(node(x1,y1));\n    while(!q.empty()){\n        x = q.front().x;\n        y = q.front().y;\n        q.pop_front();\n        if(vis[x][y]) continue; //\u7531\u4e8e\u662fbfs,\u6240\u4ee5\u8981\u5224\u65ad\u6709\u6ca1\u6709\u6765\u8fc7,\u6765\u8fc7\u4e86\u5c31\u4e0d\u7528\u518d\u6765\u4e86\n        vis[x][y] = true;\n        for(int i=0;i<4;++i){ //\u904d\u5386\u5468\u56f4\u683c\u5b50\n            nx = x+dx[i];\n            ny = y+dy[i];\n            if(nx>n||nx<1||ny>m||ny<1) continue; //\u5224\u65ad\u662f\u5426\u8d8a\u754c\n            w = a[nx][ny]!=a[x][y]; //\u786e\u5b9a\u8fb9\u6743,\u4e00\u6837\u4e3a1,\u4e0d\u4e00\u6837\u4e3a0\n            if(d[x][y]+w>=d[nx][ny]) continue; //\u677e\u5f1b\u64cd\u4f5c\n            d[nx][ny] = d[x][y]+w;\n            if(w==0) q.push_front(node(nx,ny)); //0\u6743\u653e\u524d\u9762\n            else q.push_back(node(nx,ny)); //1\u6743\u653e\u540e\u9762\n        }\n    }\n}\n\ninline void read(int &x){\n    x = 0;\n    char c = getchar();\n    while(c<'0'||c>'9') c = getchar();\n    while(c>='0'&&c<='9'){\n        x = (x<<3)+(x<<1)+(c^48);\n        c = getchar();\n    } \n}\n\nvoid print(int x){\n    if(x>9) print(x/10);\n    putchar(x%10+'0');\n}\n```\n\n\u6700\u540e\u518d\u63a8\u8350\u4e00\u9053\u53cc\u7aef\u961f\u5217BFS\u7684\u4f8b\u9898\uff1a  \n[ [BalticOI 2011 Day1] Switch the Lamp On](https://www.luogu.org/problemnew/show/P4667)",
        "postTime": 1548948099,
        "uid": 115864,
        "name": "NaCly_Fish",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4554 \u3010\u5c0f\u660e\u7684\u6e38\u620f\u3011"
    },
    {
        "content": "### SPFA\u4ee3\u7801\u5b9e\u73b0\n#### \u5176\u5b9e\u5c31\u662f\u6700\u77ed\u8def\u7684\u8fdb\u9636\u7248\n#### \u52a0\u4e0a\u6743\u503c\u5c31\u53ef\u4ee5\u4e86\n#### \u5982\u679c\u7b26\u53f7\u76f8\u7b49\uff0c\u5219\u6743\u503c\u4e3a0\n#### \u5982\u679c\u7b26\u53f7\u4e0d\u76f8\u7b49\uff0c\u5219\u6743\u503c\u4e3a1\n#### \u5176\u4ed6\u90fd\u4e00\u6837\n```cpp\n#include <iostream>\n#include <queue>\n#include <vector>\nusing namespace std;\nconst int MAXN=500,INF=2147483647,dx[4]={-1,0,1,0},dy[4]={0,1,0,-1};\nint n,m,x1,y1,x2,y2,d[MAXN*MAXN],V,E,nx,ny;\nbool inq[MAXN*MAXN];\nchar map[MAXN][MAXN+1];\nstruct edge{\n\tint from,to,cost;\n\tedge(){}\n\tedge(int a,int b,int c){\n\t\tfrom=a;\n\t\tto=b;\n\t\tcost=c;\n\t}\n};\nvector<edge> edges;\nvector<int> G[MAXN*MAXN];\nvoid graph_init(){\n\tfor(int i=0;i<n;i++){\n\t\tG[i].clear();\n\t}\n\tedges.clear();\n}\nvoid addedge(int from,int to,int cost){\n\tedges.push_back(edge(from,to,cost));\n\tG[from].push_back(edges.size()-1);\n}\nvoid SPFA(int s){\n\tfor(int i=0;i<V;i++){\n\t\td[i]=INF;\n\t\tinq[i]=false;\n\t}\n\td[s]=0;\n\tqueue<int> Q;\n\tQ.push(s);\n\tinq[s]=true;\n\twhile(!Q.empty()){\n\t\tint u=Q.front();\n\t\tQ.pop();\n\t\tinq[u]=false;\n\t\tfor(int i=0;i<G[u].size();i++){\n\t\t\tedge e=edges[G[u][i]];\n\t\t\tif(d[u]<INF&&d[e.to]>d[u]+e.cost){\n\t\t\t\td[e.to]=d[u]+e.cost;\n\t\t\t\tif(!inq[e.to]){\n\t\t\t\t\tQ.push(e.to);\n\t\t\t\t\tinq[e.to]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\twhile(cin>>n>>m){\n\t\tif(n==0&&m==0){\n\t\t\tbreak;\n\t\t}\n\t\tV=n*m;\n\t\tgraph_init();\n\t\tfor(int i=0;i<n;i++){\n\t\t\tcin>>map[i];\n\t\t}\n\t\tcin>>x1>>y1>>x2>>y2;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tfor(int j=0;j<m;j++){\n\t\t\t\tfor(int k=0;k<4;k++){\n\t\t\t\t\tnx=i+dx[k];\n\t\t\t\t\tny=j+dy[k];\n\t\t\t\t\tif(0<=nx&&nx<n&&0<=ny&&ny<m){\n\t\t\t\t\t\tif(map[i][j]==map[nx][ny]){\n\t\t\t\t\t\t\taddedge(i*m+j,nx*m+ny,0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\taddedge(i*m+j,nx*m+ny,1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSPFA(x1*m+y1);\n\t\tcout<<d[x2*m+y2]<<endl;\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1532435965,
        "uid": 113852,
        "name": "daqirui",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4554 \u3010\u5c0f\u660e\u7684\u6e38\u620f\u3011"
    },
    {
        "content": "# \u5c0f\u660e\u7684\u6e38\u620f\n[\u9898\u76ee\u4f20\u9001\u95e8qwq](https://www.luogu.com.cn/problem/P4554)\n\n#### \u524d\u8a00\n\n\u8bf4\u5b9e\u8bdd\uff0c\u521a\u62ff\u5230\u8fd9\u9053\u9898\uff0c\u6211\u56e0\u4e3a\u61d2\u5f97\u5c06\u5750\u6807\u8f6c\u6362\u4e3a\u4e00\u4e2a\u7f16\u53f7\uff0c\u6240\u4ee5\u76f4\u63a5\u6de6\u7684\u4e8c\u7ef4\u6700\u77ed\u8def\uff08~~\u660e\u660e\u4e8c\u7ef4\u6700\u77ed\u8def\u66f4\u9ebb\u70e6\u597d\u5427~~\uff09\n\n\u5728\u7528\u4e8c\u7ef4\u505a\u6cd5A\u6389\u8fd9\u9898\u540e\uff0c\u53e6\u5916\u5199\u4e86\u6b63\u5e38\u70b9\u7684\u5e38\u89c4\u6700\u77ed\u8def\n\n\u672c\u7bc7\u9898\u89e3\u5c06\u4f1a\u4ecb\u7ecd\u8fd9**\u4e24\u79cd**\u505a\u6cd5\n\n#### \u63d0\u9192\n\n\u8fd9\u9053\u9898\u7ed9\u51fa\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u5750\u6807\u90fd\u662f\u4ece **$0$\u5f00\u59cb\u7684**\n\n\u6240\u4ee5\u5efa\u56fe\u90a3\u4e9b\u662f\u4ece$1$\u5230$N$\u7684\u8bdd\uff0c\u8bf7\u5bf9\u8d77\u70b9\u7ec8\u70b9\u5750\u6807++\uff08\u867d\u8fc7\u4e0d\u4e86\u6837\u4f8b\u4e5f\u4f1a\u63d0\u9192\u4f60\u8fd9\u4e2a$point$)\n\n------------\n#### \u7b97\u6cd5\u8bc1\u660e\n\n\u8fd9\u9898\u4e00\u770b\u5c31\u662f\u9053\u641c\u7d22\uff08$DFS$\u4f1a\u88ab$T$\u6389\uff0c$BFS$\u7684\u53cc\u7aef\u961f\u5217\u53ef\u4ee5\u8fc7\uff09\n\n\u4f46\u662f\u8fd9\u9898\u4e5f\u80fd\u8dd1\u6700\u77ed\u8def\uff0c**\u5c06\u56db\u4e2a\u65b9\u5411\u8f6c\u6362\u4e3a\u8fde\u8fb9**\uff0c\u7136\u540e\u4ece$1$\u5230$N$\u6c42\u5f97\u6700\u77ed\u8ddd\u79bb\u5373\u53ef\n\n------------\n#### \u4e8c\u7ef4\u6700\u77ed\u8def\n\n\uff08~~\u554a\u6211\u771f\u4f18\u79c0~~\uff09\n\n\u4e8c\u7ef4\u5b9e\u73b0\u6700\u77ed\u8def\u8fd8\u662f\u8c03\u4e86\u4e00\u70b9\u65f6\u95f4\u7684\uff0c\u8fd9\u91cc\u5c31\u7f57\u5217\u4e00\u4e0b\u6211\u4e3b\u8981\u9047\u5230\u7684\u4e24\u4e2a\u95ee\u9898\uff1a\n\n1. \u5efa\u56fe\u8fde\u8fb9\u7684\u65f6\u5019\uff0c\u6709\u5411\u8fb9\u7684\u65b9\u5411\u6ca1\u6709\u641e\u6e05\u695a\uff08\u4e24\u79cd\u505a\u6cd5\u90fd\u8981\u6ce8\u610f\uff09\n\n2. \u4e0d\u77e5\u9053$Dijkstra$\u7684\u4f18\u5148\u961f\u5217\u5bf9\u4e8e\u4e8c\u7ef4\u6700\u77ed\u8def\u600e\u4e48\u8fdb\u884c\u5b58\u50a8\u548c\u6392\u5e8f\n\n\u7136\u540e\u6211\u4eec\u518d\u6839\u636e\u4e0a\u9762\u4e24\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\uff0c\u6765\u8ba8\u8bba\u601d\u8def\n\n- \u6709\u5411\u8fb9\u7684\u65b9\u5411\n\n\u5f53\u524d\u70b9\u5411\u56db\u4e2a\u65b9\u5411\u6269\u5c55\uff0c\u5982\u679c\u5408\u6cd5\uff0c\u90a3\u4e48\u6709\u5411\u8fb9\u5f53\u7136\u662f**\u5f53\u524d\u70b9\u8fde\u5411\u5176\u4ed6\u70b9**\n\n\u6ce8\u610f\u4e00\u4e0b\uff1a**\u5411\u56db\u4e2a\u65b9\u5411\u6269\u5c55\u65f6\u8981\u5224\u65ad\u662f\u5426\u8d8a\u754c\uff01**\n\n- \u4f18\u5148\u961f\u5217\u7ef4\u62a4\u4e8c\u7ef4\u6700\u77ed\u8def\n\n\u5728\u81ea\u5b9a\u4e49\u7ed3\u6784\u4f53\u5185\u4f7f\u7528**\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff01**\n\n\u4ee3\u7801\u6bb5\uff1a\n\n```cpp\nstruct node {\n    int val,tx,ty,net;   //val\u662f\u82b1\u8d39\uff0ctx\u662f\u4e0b\u4e00\u4e2a\u70b9\u7684\u6a2a\u5750\u6807\uff0cty\u662f\u7eb5\u5750\u6807\n    bool operator < (const node &x )const {  //\u91cd\u8f7d\u8fd0\u7b97\u7b26\n        return val>x.val;\n    }\n} e[5200010];\n\npriority_queue<node> q;\n```\n\u8fd9\u6837\u5b9a\u4e49\u540e\uff0c\u5728\u8dd1\u4e8c\u7ef4\u6700\u77ed\u8def\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u6b63\u5e38\u7ef4\u62a4\u5566\n\n- \u4e8c\u7ef4\u6700\u77ed\u8def\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nchar s[5001][5001];\nint n,m,sx,sy,ex,ey;\nint tot,dis[5001][5001],vis[5001][5001],head[5001][5001];\n\nstruct node {\n\tint val,tx,ty,net;\n\tbool operator < (const node &x )const {\n\t\treturn val>x.val;\n\t}\n} e[5200010];\n\npriority_queue<node> q;  //\u91cd\u8f7d\u8fd0\u7b97\u7b26\u4e4b\u540e\u7684\u4f18\u5148\u961f\u5217 \n\ninline void add(int fx,int fy,int nx,int ny,int w) {  //\u8fde\u8fb9 \n\te[++tot].tx=nx;\n\te[tot].ty=ny;\n\te[tot].val=w;\n\te[tot].net=head[fx][fy];\n\thead[fx][fy]=tot;\n}\n\ninline void dijkstra(int fx,int fy) {\n\tfor(register int i=1;i<=n;i++) {\n\t\tfor(register int j=1;j<=m;j++) {\n\t\t\tvis[i][j]=0;\n\t\t\tdis[i][j]=20050206;\n\t\t}\n\t}\n\tdis[fx][fy]=0;\n\tq.push((node) {\n\t\t0,fx,fy\n\t});\n\twhile(!q.empty()) {\n\t\tint x=q.top().tx;\n\t\tint y=q.top().ty;\n\t\tq.pop();\n\t\tif(vis[x][y]) continue;\n\t\tvis[x][y]=1;\n\t\tfor(register int i=head[x][y];i;i=e[i].net) {\n\t\t\tint vx=e[i].tx;\n\t\t\tint vy=e[i].ty;\n\t\t\tif(dis[vx][vy]>dis[x][y]+e[i].val) {\n\t\t\t\tdis[vx][vy]=dis[x][y]+e[i].val;\n\t\t\t\tq.push((node) {\n\t\t\t\t\tdis[vx][vy],vx,vy  //\u8fd9\u91ccdis[]\u5c31\u4e0d\u7528\u53d6\u53cd\u5566 \n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\twhile(scanf(\"%d%d\",&n,&m)) {\n\t\tif(n==0&&m==0) break;\n\t\ttot=0;  //\u8bb0\u5f97\u6e05\u96f6 \n\t\tmemset(head,0,sizeof(head));\n\t\tfor(register int i=1;i<=n;i++) {\n\t\t\tfor(register int j=1;j<=m;j++) {\n\t\t\t\tcin>>s[i][j];\n\t\t\t}\n\t\t}\n\t\tscanf(\"%d%d%d%d\",&sx,&sy,&ex,&ey);\n\t\tsx++;sy++;   //\u6ce8\u610f\u8f93\u5165\u662f\u4ece0\u5f00\u59cb \n\t\tex++;ey++;\n\t\tfor(register int i=1;i<=n;i++) {  //\u5982\u679c\u7ed9\u60a8\u7684\u773c\u775b\u5e26\u6765\u4e0d\u9002\uff0c\u6211\u5f88\u62b1\u6b49QAQ \n\t\t\tfor(register int j=1;j<=m;j++) {\n\t\t\t\tif(s[i-1][j]==s[i][j]&&i-1>=1) add(i,j,i-1,j,0);\n\t\t\t\tif(s[i-1][j]!=s[i][j]&&i-1>=1) add(i,j,i-1,j,1);\n\t\t\t\t\n\t\t\t\tif(s[i][j-1]==s[i][j]&&j-1>=1) add(i,j,i,j-1,0);\n\t\t\t\tif(s[i][j-1]!=s[i][j]&&j-1>=1) add(i,j,i,j-1,1);\n\t\t\t\t\n\t\t\t\tif(s[i+1][j]==s[i][j]&&i+1<=n) add(i,j,i+1,j,0);\n\t\t\t\tif(s[i+1][j]!=s[i][j]&&i+1<=n) add(i,j,i+1,j,1);\n\t\t\t\t\n\t\t\t\tif(s[i][j+1]==s[i][j]&&j+1<=m) add(i,j,i,j+1,0);\n\t\t\t\tif(s[i][j+1]!=s[i][j]&&j+1<=m) add(i,j,i,j+1,1);\n\t\t\t}\n\t\t}\n\t\tdijkstra(sx,sy);\n\t\tprintf(\"%d\\n\",dis[ex][ey]);\n\t}\n\treturn 0;\n}\n```\n\n\n------------\n#### \u5e38\u89c4\u6700\u77ed\u8def\n\n\u8bb2\u771f\uff0c\u5e38\u89c4\u6700\u77ed\u8def\u5176\u5b9e\u5c31\u662f\u4e0a\u9762\u4e8c\u7ef4\u6700\u77ed\u8def\u7684\u4f18\u5316\uff08\u4e8c\u7ef4\u6700\u77ed\u8def\u5c5e\u4e8e\u4e0d\u52a8\u8111\u5b50\uff0c\u76f4\u63a5\u7ed9\u4ec0\u4e48\u505a\u4ec0\u4e48\uff0c\u5e38\u89c4\u7684\u6700\u77ed\u8def\u5c31\u9700\u8981\u8f6c\u6362\uff0c\u4f46\u662f\u8f6c\u6362\u4e4b\u540e\u4ee3\u7801\u66f4\u7b80\u4fbf\u4e5f\u66f4\u5bb9\u6613\u5b9e\u73b0\uff09\n\n- \u5750\u6807\u8f6c\u6362\u4e3a\u7f16\u53f7\n\n\u4e3a\u4ec0\u4e48\u8981\u5c06\u5750\u6807\u8f6c\u6362\u4e3a\u7f16\u53f7\uff1f\u56e0\u4e3a\u8fd9\u6837\u6211\u4eec\u5c31**\u5c06\u7ef4\u62a4\u4e8c\u7ef4\u6700\u77ed\u8def\u6539\u6210\u5e38\u89c4\u7684\u6700\u77ed\u8def\u4e86**\uff0c\u63a5\u4e0b\u6765\u5c31\u4e0d\u7528\u60f3\u4ec0\u4e48\u91cd\u8f7d\u8fd0\u7b97\u7b26\u540e\u7528\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u4e09\u4e2a\u503c\u4e86\n\n- \u5e38\u89c4\u6700\u77ed\u8def\u4ee3\u7801$Code$\n\n\u56e0\u4e3a\u5e38\u89c4\u6700\u77ed\u8def\u7684\u601d\u8def\u771f\u7684\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u8dd1\u677f\u5b50\uff0c\u6240\u4ee5\u76f4\u63a5\u7ed9\u4ee3\u7801\u5566qwq\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nchar s[510][510];\nint n,m,sx,sy,ex,ey,tot,cnt;\ndeque<int> q;\nint sum[510][510],dis[520010],vis[520010],head[520010];\n\nstruct node {\n\tint to,net,val;\n} e[520010];\n\ninline void add(int u,int v,int w) {\n\te[++tot].to=v;\n\te[tot].val=w;\n\te[tot].net=head[u];\n\thead[u]=tot;\n}\n\ninline void spfa(int s) {\n\tfor(register int i=1;i<=cnt;i++) {\n\t\tvis[i]=0;\n\t\tdis[i]=20050206;\n\t}\n\tdis[s]=0;\n\tvis[s]=1;\n\tq.push_back(s);\n\twhile(!q.empty()) {\n\t\tint x=q.front();\n\t\tq.pop_front();\n\t\tvis[x]=0;\n\t\tfor(register int i=head[x];i;i=e[i].net) {\n\t\t\tint v=e[i].to;\n\t\t\tif(dis[v]>dis[x]+e[i].val) {\n\t\t\t\tdis[v]=dis[x]+e[i].val;\n\t\t\t\tif(!vis[v]) {\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t\tif(!q.empty()&&dis[q.front()]<dis[v]) q.push_back(v);\n\t\t\t\t\telse q.push_front(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\twhile(scanf(\"%d%d\",&n,&m)) {\n\t\tif(n==0&&m==0) break;\n\t\ttot=0;cnt=0;\n\t\tmemset(sum,0,sizeof(sum));\n\t\tmemset(head,0,sizeof(head));\n\t\tfor(register int i=1;i<=n;i++) {\n\t\t\tfor(register int j=1;j<=m;j++) {\n\t\t\t\tcin>>s[i][j];\n\t\t\t\tsum[i][j]=++cnt;  //\u7528\u7f16\u53f7\u4ee3\u66ff\u5750\u6807\n\t\t\t}\n\t\t}\n\t\tscanf(\"%d%d%d%d\",&sx,&sy,&ex,&ey);\n\t\tsx++;sy++;ex++;ey++;\n\t\tfor(register int i=1;i<=n;i++) {\n\t\t\tfor(register int j=1;j<=m;j++) {  //\u5982\u679c\u53c8\u7ed9\u60a8\u7684\u773c\u775b\u5e26\u6765\u4e0d\u9002\uff0c\u6211\u518d\u6b21\u611f\u5230\u5f88\u62b1\u6b49QAQ \n\t\t\t\tif(s[i][j]==s[i-1][j]&&i-1>0) add(sum[i][j],sum[i-1][j],0);\n\t\t\t\tif(s[i][j]!=s[i-1][j]&&i-1>0) add(sum[i][j],sum[i-1][j],1);\n\t\t\t\t\n\t\t\t\tif(s[i][j]==s[i][j-1]&&j-1>0) add(sum[i][j],sum[i][j-1],0);\n\t\t\t\tif(s[i][j]!=s[i][j-1]&&j-1>0) add(sum[i][j],sum[i][j-1],1);\n\t\t\t\t\n\t\t\t\tif(s[i][j]==s[i+1][j]&&i+1<=n) add(sum[i][j],sum[i+1][j],0);\n\t\t\t\tif(s[i][j]!=s[i+1][j]&&i+1<=n) add(sum[i][j],sum[i+1][j],1);\n\t\t\t\t\n\t\t\t\tif(s[i][j]==s[i][j+1]&&j+1<=m) add(sum[i][j],sum[i][j+1],0);\n\t\t\t\tif(s[i][j]!=s[i][j+1]&&j+1<=m) add(sum[i][j],sum[i][j+1],1);\n\t\t\t}\n\t\t}\n\t\tspfa(sum[sx][sy]);\n\t\tprintf(\"%d\\n\",dis[sum[ex][ey]]);\n\t}\n\treturn 0;\n}\n```\n\n------------\n\n\u55ef...\u5199\u5b8c\u4e86...\n\n\u6700\u540e\uff0c\u5982\u679c\u8fd9\u7bc7\u9898\u89e3\u6709\u4efb\u4f55\u9519\u8bef\u6216\u60a8\u4e0d\u61c2\u7684\u5730\u65b9\uff0c\u6b22\u8fce\u4e0b\u65b9\u7559\u8a00\u533a\u8bc4\u8bba\uff0c\u6211\u4e00\u5b9a\u4f1a\u53ca\u65f6\u56de\u590d\u3001\u6539\u6b63\n\n\u8c22\u8c22\u5404\u4f4ddalao\u554aqwq\n\n------------\n\n\n\n\n",
        "postTime": 1593835812,
        "uid": 145205,
        "name": "Eleven\u8c26",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4554 \u3010\u5c0f\u660e\u7684\u6e38\u620f\u3011"
    },
    {
        "content": "# \u4e0d\u7528\u5efa\u56fe\u7684bfs\uff01~~\uff08\u597d\u4e45\u4e0dbfs\u4e86\uff09~~\n\ndebug\u4e00\u4e2a\u5c0f\u65f6\u540e\u7ec8\u4e8ea\u4e86\uff08\u611f\u8c22[HG1](https://www.luogu.org/space/show?uid=115947)\u7684\u5e2e\u52a9!\uff09\n\n\u673a\u623f\u5927\u4f6c\u6709\u7684\u7f29\u70b9\u6709\u7684\u5efa\u56fe\uff0c~~\u6211\u4e00\u4e2a\u7a76\u6781\u849f\u84bb\u5374\u7528bfs~~\n\n\u70b9\u5f00\u9898\u89e3\u90fd\u9700\u8981\u5efa\u56fe\uff0c\u6211\u51b3\u5b9a\u7ed9\u5927\u5bb6\u5206\u4eab\u4e00\u79cd\u7b80\u5355\u7684\u505a\u6cd5\uff0c58\u884c465ms\u7684bfs\n\n------------\n\u601d\u8def\u5c31\u662f\u5229\u7528spfa\u7684\u539f\u7406\uff0c\u627e\u4e8c\u7ef4\u6700\u77ed\u8def\n\n\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff1ay1\u4e0d\u80fd\u7528\uff01\uff01\uff01\uff01\uff01\uff01\n\u8fd8\u6709\u5c31\u662f\u70b9\u4ece0\u5f00\u59cb\uff01\uff01\uff01\uff01~~\uff08debug\u534a\u5c0f\u65f6\u624d\u68c0\u67e5\u51fa\u6765\uff09~~\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u81ea\u4ee5\u4e3a\u4ee3\u7801\u7b80\u6d01\u660e\u4e86\uff0c\u91cc\u9762\u6709\u6ce8\u91ca\uff01\uff01\n\u4e0a\u4ee3\u7801\uff01\n\n------------\n\n\n```cpp\n#include <bits/stdc++.h>\n#define I return\n#define like 0\n#define guanliyuan ;\n#define int long long//\u5fae\u64cd\u5fae\u64cd\nusing namespace std;\n\nint n,m,x1,x2,y3,y2;\nint dis[501][501],vis[501][501];\nchar mp[501][501];\nint dx[5]={0,1,0,-1,0};\nint dy[5]={0,0,1,0,-1};\nqueue<int> qx;\nqueue<int> qy;\n\nvoid spfa(){\n\tint x,y;\n\tmemset(dis,0x3f,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tqx.push(x1);\n\tqy.push(y3);\n\tvis[x1][y3]=1;\n\tdis[x1][y3]=0;\n\twhile(qx.size()&&qy.size()){//\u5f00\u59cb\u5bbd\u641c\n\t\tx=qx.front();qx.pop();\n\t\ty=qy.front();qy.pop();\n\t\tfor(int i=1;i<=4;i++){\n\t\t\tif(x+dx[i]<n&&x+dx[i]>=0&&y+dy[i]>=0&&y+dy[i]<m){\n\t\t\t\tint D=(mp[x][y]!=mp[x+dx[i]][y+dy[i]]);//\u7531\u9898\u610f\u5f97\u5fae\u64cd\uff0c\u51cf\u5c11\u4ee3\u7801\u957f\u5ea6\n\t\t\t\tif(dis[x+dx[i]][y+dy[i]]>dis[x][y]+D){//\u5982\u679c\u53ef\u4ee5\u5c31\u66f4\u65b0\n\t\t\t\t\tdis[x+dx[i]][y+dy[i]]=dis[x][y]+D;\n\t\t\t\t\tif(!vis[x+dx[i]][y+dy[i]]){//\u6ce8\u610fx,y\u4e0d\u53ef\u66f4\u65b0\uff01\uff01\n\t\t\t\t\t\tqx.push(x+dx[i]);qy.push(y+dy[i]);\n\t\t\t\t\t\tvis[x+dx[i]][y+dy[i]]=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvis[x][y]=0;//\u4e0espfa\u601d\u8def\u76f8\u4f3c\n\t}\n}\n\nsigned main(){//\u4e0edefine int long long\u914d\u5957\u7684\u8bbe\u65bd\n\tchar a;\n\tn=1;m=1;\n\twhile(1){\n\t\tscanf(\"%ld%ld\",&n,&m);\n\t\tif(n==0&&m==0) break;\n\t\tfor(int i=0;i<n;i++)\n\t\t\tfor(int j=0;j<m;j++){\n\t\t\t\tcin>>a;\n\t\t\t\tmp[i][j]=a;\n\t\t\t}\n\t\tscanf(\"%ld%ld%ld%ld\",&x1,&y3,&x2,&y2);\n\t\tspfa();\n\t\tcout<<dis[x2][y2]<<endl;\n\t}\n\tI like guanliyuan//\u90b9\u8001\u677f\u5fae\u64cd\n}\n```\n",
        "postTime": 1570352434,
        "uid": 119279,
        "name": "LitShone",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4554 \u3010\u5c0f\u660e\u7684\u6e38\u620f\u3011"
    },
    {
        "content": "##\n\u5176\u5b9e\u5440....\u8fd9\u4e2a\u9898\u53ef\u4ee5\u752801BFS\u6765\u505aQwQ,\u7f8e\u540d\u5176\u66f0\u53cc\u7aef\u961f\u5217\uff08deque\uff09;\n##\n\u90a3\u4e48\u4ec0\u4e48\u662f01BFS\u5462\uff1f\u5c31\u662f\u4e00\u4e2a\u7ef4\u62a4\u4e86\u53cc\u7aef\u961f\u5217\u7684BFS\uff0c\u8fb9\u6743\u4e3a1\u65f6\u5411\u540e\u63d2\u5165\u4e3a0\u65f6\u5411\u524d\u63d2\u5165\u7684\u8bf4\uff0c\u4f8b\u9898\u7684\u8bdd\u5e94\u8be5\u5c31\u662f\u7535\u8def\u95ee\u9898\u4e86\u5427\uff08\u6bd4\u8fd9\u4e2a\u9898\u8981\u96be\u7684\u8bf4\uff09\uff1b\n\u5f53\u7136\u6709\u7b80\u5355\u7684SPOJ KATHTHI - KATHTHI\u5440\uff0c\u53ef\u4ee5\u8bd5\u8bd5QwQ;\n\n```\n#include<iostream>\n#include<cstdio>\n#include<deque>\n#include<cstring>\nusing namespace std;\n\nconst int N=505;\n\nint n,m,x1,x2,y1,y2;\n\nchar s[N][N];\n\nint vis[N][N];\n\nint dx[4]={0,0,1,-1};\nint dy[4]={1,-1,0,0};\n\nstruct node\n{\n\tint x;\n\tint y;\n\tint z;\n\tchar c;\t\n};\n\nint main()\n{\n\twhile(scanf(\"%d%d\",&n,&m)&&n&&m)\n\t{\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t{\n\t\t\t\tcin>>s[i][j];\n\t\t\t}\n\t\t}\n\t\tcin>>x1>>y1>>x2>>y2;\n\t\tx1++,y1++,x2++,y2++;//\u6572\u9ed1\u677f\uff1a\u4ed6\u7ed9\u7684\u56fe\u662f0~n-1,\u800c\u6211\u7684\u662f1~n\u6240\u4ee5\u53ea\u597d\u5b83\u7684\u5750\u6807\u90fd+1\u4e86QwQ,\u8bba\u6ca1\u8bfb\u597d\u9898\u7684\u540e\u679c\uff1b\n\t\tdeque<node>q;\n\t\tmemset(vis,0,sizeof(vis));\n\t\tq.push_back((node){x1,y1,0,s[x1][y1]});\n\t\tvis[x1][y1]=1;\n\t\twhile(!q.empty())\n\t\t{\n\t\t\tnode w=q.front();q.pop_front();//\u662fpop_front()!!!\u4e0d\u662fpop_back()\uff1b\n\t\t\tif(w.x==x2&&w.y==y2)\n\t\t\t{\n\t\t\t\tcout<<w.z<<endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int i=0;i<4;i++)\n\t\t\t{\n\t\t\t\tint xx=w.x+dx[i];\n\t\t\t\tint yy=w.y+dy[i];\n\t\t\t\tif(xx>n||yy>m||xx<1||yy<1||vis[xx][yy])continue;\n\t\t\t\tvis[xx][yy]=1;\n\t\t\t\tif(s[xx][yy]==w.c)q.push_front((node){xx,yy,w.z,w.c});//\u6839\u636e\u8fb9\u6743\u7684\u503c\u5206\u5f00\u5224\u65ad\u5440\n\t\t\t\telse q.push_back((node){xx,yy,w.z+1,s[xx][yy]});//\u4e0e\u4e0a\u4e00\u53e5\u4e00\u6837\u7684\u5e9f\u8bddQwQ;\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\u662f\u4e0d\u662f\u5f88\u7b80\u5355\u5c31AC\u4e86\uff1f\u5b8c\u5168\u4e0d\u9700\u8981\u6700\u77ed\u8def\u548cspfa\u5462\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u76f8\u5f53\u4f18\u79c0\uff0c\u5982\u679c\u624b\u5199\u53cc\u7aef\u961f\u5217\u7684\u8bdd\u5e94\u8be5\u8ddf\u5feb\u5427QwQ\n01BFS\u53ef\u4ee5\u5728O(n+m)\u6c42\u51fa\u8fb9\u6743\u53ea\u67090/1\u7684\u6700\u77ed\u8def",
        "postTime": 1551934127,
        "uid": 122822,
        "name": "Merci",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4554 \u3010\u5c0f\u660e\u7684\u6e38\u620f\u3011"
    },
    {
        "content": "\u6bcf\u4e2a\u70b9\u5411\u5b83\u65c1\u8fb9\u7684\u70b9\u8fde\u8fb9\uff0c\u76f8\u540cdis\u4e3a0\uff0c\u4e0d\u540c\u4e3a1\u3002\n\nn=3,m=3\u6bcf\u4e2a\u70b9\u7684\u6807\u53f7\u5982\u4e0b:\n\n1 2 3 \n\n4 5 6\n\n7 8 9\n\n\u8fd9\u6837\u5b89\u6392\u6807\u53f7\u552f\u4e00\uff0c\u6807\u53f7\u8ba1\u7b97\u516c\u5f0f$\uff08i-1\uff09* m+j$,\u8fde\u8fb9\u65f6\u5224\u65ad\u4e00\u4e0b\u8fb9\u754c\uff0c\u56e0\u4e3a\u9898\u76ee\u9ed8\u8ba4\u5750\u6807\u662f\u4ece\uff080,0\uff09\u5f00\u59cb\uff0c\u6240\u4ee5\u65b9\u4fbf\u505a\u9898\uff0c\u5c06\u8bfb\u5165\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u5750\u6807\u90fd\u52a01\u3002\u7136\u540e\u8dd1\u4e2a\u6700\u77ed\u8def\u5c31\u53ef\u4ee5\u4e86\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\nusing namespace std;\nint n,m;\nint ex,ey,px,py;\nint a[505][505];\nchar ch[255];\n\nstruct node{\n\tint to,nxt,dis;\n}e[20000005];\nint head[250005],cnt,dis[250005],in[250005];\ninline void add(int from,int to,int dis){\n\te[++cnt]=(node){to,head[from],dis};\n\thead[from]=cnt;\n}\nvoid spfa(){\n\tqueue<int>q;\n\tfor(int i=1;i<=n*m;++i)\n\t\tdis[i]=2000000000,in[i]=0;\n\tdis[(ex-1)*m+ey]=0;\n\tin[(ex-1)*m+ey]=1;\n\tq.push((ex-1)*m+ey);\n\twhile(!q.empty()){\n\t\tint now=q.front();\n\t\tq.pop();\n\t\tin[now]=0;\n\t\tfor(int i=head[now];i;i=e[i].nxt)\n\t\t\tif(dis[now]+e[i].dis<dis[e[i].to]){\n\t\t\t\tdis[e[i].to]=dis[now]+e[i].dis;\n\t\t\t\tif(!in[e[i].to]){\n\t\t\t\t\tq.push(e[i].to);\n\t\t\t\t\tin[e[i].to]=1;\n\t\t\t\t}\n\t\t\t}\n\t}\n\tprintf(\"%d\\n\",dis[(px-1)*m+py]);\n}\nint main(){\n\twhile(scanf(\"%d%d\",&n,&m)){\n\t\tif(n==0&&m==0)break;\n\t\tcnt=0;\n\t\tmemset(head,0,sizeof(head));\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tscanf(\"%s\",ch+1);\n\t\t\tfor(int j=1;j<=m;++j){\n\t\t\t\tif(ch[j]=='@')a[i][j]=1;\n\t\t\t\telse a[i][j]=0;\n\t\t\t}\t\n\t\t}\n\t\tfor(int i=1;i<=n;++i)\n\t\t\tfor(int j=1;j<=m;++j){\n\t\t\t\tif(i>1)\n\t\t\t\t\tadd((i-1)*m+j,(i-2)*m+j,a[i][j]^a[i-1][j]),add((i-2)*m+j,(i-1)*m+j,a[i][j]^a[i-1][j]);\n\t\t\t\tif(i<n)\n\t\t\t\t\tadd((i-1)*m+j,i*m+j,a[i][j]^a[i+1][j]),add(i*m+j,(i-1)*m+j,a[i][j]^a[i+1][j]);\n\t\t\t\tif(j>1)\n\t\t\t\t\tadd((i-1)*m+j,(i-1)*m+j-1,a[i][j]^a[i][j-1]),add((i-1)*m+j-1,(i-1)*m+j,a[i][j]^a[i][j-1]);\n\t\t\t\tif(j<m)\n\t\t\t\t\tadd((i-1)*m+j,(i-1)*m+j+1,a[i][j]^a[i][j+1]),add((i-1)*m+j+1,(i-1)*m+j,a[i][j]^a[i][j+1]);\n\t\t\t}\n\t\tscanf(\"%d%d%d%d\",&ex,&ey,&px,&py);\n\t\tex++;ey++;px++;py++;\n\t\tspfa();\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1568466017,
        "uid": 151768,
        "name": "\u6d41\u901d\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4554 \u3010\u5c0f\u660e\u7684\u6e38\u620f\u3011"
    },
    {
        "content": "\u7b80\u5355\u6700\u77ed\u8def\uff0c\u611f\u89c9\u548c[\u8fd9\u9898](https://www.luogu.org/problemnew/show/P4667)\u7684\u5efa\u56fe\u65b9\u5f0f\u6bd4\u8f83\u50cf\u3002    \n### \u6b63\u6587\u90e8\u5206:         \n\u56e0\u4e3a\u7a7a\u95f4\u8db3\u591f\uff0c\u6240\u4ee5\u6211\u4eec\u5e76\u4e0d\u9700\u8981$O(1)$\u7684\u54c8\u5e0c\u7b97\u6cd5\uff0c\u53ef\u4ee5\u8003\u8651\u5f00\u4e00\u4e2a\u6570\u7ec4$mark[i][j]$\u8868\u793a\u7b2c$i$\u884c\u7b2c$j$\u5217\u6240\u5bf9\u5e94\u7684\u7f16\u53f7\u3002\u521d\u59cb\u5316\u7684\u65f6\u5019\u5c06\u6574\u4e2a\u77e9\u9635\u904d\u5386\u4e00\u904d\u7136\u540e\u5c06\u8ba1\u6570\u5668$tot++$\u5c31\u597d\u4e86\u3002     \n\u5982\u4f55\u5efa\u56fe\uff1f       \n\u6211\u4eec\u5df2\u7ecf\u5904\u7406\u51fa\u4e86\u6bcf\u4e2a\u70b9\u7684\u7f16\u53f7\uff0c\u7136\u540e\u5c31\u8ddf$dfs$\u4e00\u6837\u521b\u5efa\u4e00\u4e2a$dir$\u6570\u7ec4\uff0c\u5f80$4$\u4e2a\u65b9\u5411\u62d3\u5c55\uff0c\u5982\u4f55\u76f8\u540c\u5219\u6743\u503c\u4e3a$1$,\u5426\u5219\u5219\u4e3a$0$\u3002    \n\u4e4b\u540e\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5c31\u597d\u4e86\u3002      \n\u987a\u4fbf\u63d0\u4e00\u53e5\uff0c\u8fd9\u9898\u4e0d\u5361$spfa$,\u4e0d\u9700\u8981$Dijkstra$\u3002      \n\u4ee3\u7801\u6211\u5c31\u4e0d\u653e\u4e86\uff0c\u5b9e\u73b0\u96be\u5ea6\u5e94\u8be5\u4e0d\u662f\u5f88\u5927\u3002",
        "postTime": 1550213269,
        "uid": 82635,
        "name": "January\u7684\u5fe7\u4f24",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4554 \u3010\u5c0f\u660e\u7684\u6e38\u620f\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u4f60\u4e00\u5f20\u56fe\uff0c\u4e24\u4e24\u4e4b\u95f4\u8fb9\u7684\u6743\u503c\u6709\u7684\u4e3a1\uff0c\u6709\u7684\u4e3a0\uff0c\u6c42\u6700\u5c0f\u503c\uff0c\u5e94\u8be5\u8fd9\u6837\u7b80\u5316\u9898\u76ee\u4f1a\u6709\u4e9b\u773c\u719f\uff0c\u6ca1\u9519\uff0cspfa\u6a21\u677f\u9898\uff0c\u4e0d\u8fc7\u8981\u52a0\u4e0a\u964d\u7ef4\uff08\u4e8c\u7ef4->\u4e00\u7ef4\uff09\uff0c\u964d\u7ef4\u516c\u5f0f\n```cpp\ni*m+j\n```\n\u4e0a\u4ee3\u7801\u5427\uff0c60\u5206\u4ee3\u7801\u2014\u2014\u90bb\u63a5\u94fe\u8868\u50a8\u5b58\uff08\u6211\u4e5f\u4e0d\u77e5\u4e3a\u5565\u9519QWQ\uff0c~~\u5927\u4f6c\u5e2e\u5fd9~~\uff09\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<iomanip>\n#include<string>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nconst int N = 500*500+10;\nqueue<int> q;\nint n,m,xa,xb,ya,yb,num;\nint head[N],d[N],v[N];\nint dx[]={0,0,1,-1};\nint dy[]={-1,1,0,0};\nchar f[500+10][500+10];\nint boundary(int a,int b)\n{\n\tif((a<0)||(a>n)||(b>m)||(b<0)) return 0;\n\treturn 1;\n}\nstruct come{\n\tint to,next,cost;\n}edge[N*2];\nvoid add_edge(int from,int to,int cost)\n{\n\tnum++;\n\tedge[num].to=to;\n\tedge[num].cost=cost;\n\tedge[num].next=head[from];\n\thead[from]=num;\n}\nvoid spfa(int s)\n{\n\tmemset(v,0,sizeof(v));\n\tmemset(d,0x3f,sizeof(d));\n\td[s]=0,v[s]=1;\n\tq.push(s);\n\twhile(q.size())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tv[u]=0;\n\t\tfor(int i=head[u];i;i=edge[i].next)\n\t\t{\n\t\t\tint to=edge[i].to;\n\t\t\tint cost=edge[i].cost;\n\t\t\tif(d[to]>d[u]+cost)\n\t\t\t{\n\t\t\t\td[to]=d[u]+cost;\n\t\t\t\tif(!v[to]) q.push(to),v[to]=1;\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\twhile(cin>>n>>m)\n\t{\n\t\twhile(!q.empty()) q.pop();\n\t\tif(n==0&&m==0) break;\n\t\tfor(int i=0;i<n;i++)\n\t\t    for(int j=0;j<m;j++)\n\t\t        cin>>f[i][j];\n\t\tcin>>xa>>ya>>xb>>yb;\n\t\tfor(int i=0;i<n;i++)\n\t\t    for(int j=0;j<m;j++)\n\t\t        for(int k=0;k<4;k++)\n\t\t        {\n\t\t        \tint aa=i+dx[k];\n\t\t        \tint bb=j+dy[k];\n\t\t        \tif(boundary(aa,bb)==1)\n\t\t        \t{\n\t\t        \t\tif(f[i][j]==f[aa][bb])\n\t\t\t\t\t\t    add_edge(i*m+j,aa*m+bb,0);\n\t\t        \t    else\n\t\t        \t        add_edge(i*m+j,aa*m+bb,1);\n\t\t        \t}\n\t\t        }\n\t\tspfa(xa*m+ya);\n\t\tcout<<d[xb*m+yb]<<endl;\n\t}\n\treturn 0;\n} \n```\n\u7b2c\u4e8c\u6b21\uff0cvecter\uff0c\u6211\u4e5f\u7528\u7684\u4e0d\u592a\u719f\u7ec3\uff0c\u4f46AC\u4e86(O~OY)\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<iomanip>\n#include<string>\n#include<queue>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nconst int N = 500*500+10,INF=2147483647;\nint n,m,xa,xb,ya,yb,num;\nint head[N],d[N],v[N];\nint dx[]={0,0,1,-1};\nint dy[]={-1,1,0,0};//\u56db\u65b9\u4f4d\nchar f[500+10][500+10];\nint boundary(int a,int b)//\u5224\u65ad\u8fb9\u754c\n{\n\tif((a<0)||(a>n)||(b>m)||(b<0)) return 0;\n\treturn 1;//\u8bb0\u4f4f\uff0c\u5148a\u2014\u2014n\uff0cb\u2014\u2014m,\u8840\u7684\u6559\u8bad\n}\nstruct come\n{\n    int from,to,cost;\n    come(){}\n    come(int a,int b,int c)\n\t{\n        from=a;\n        to=b;\n        cost=c;\n    }\n};\nvector<come> edge;\nvector<int> G[N];\nvoid gg(){\n    for(int i=0;i<n;i++)\n        G[i].clear();\n    edge.clear();\n}\nvoid add_edge(int from,int to,int cost)\n{\n    edge.push_back(come(from,to,cost));\n    G[from].push_back(edge.size()-1);\n}\nvoid spfa(int s)\n{\n\tqueue<int> q;\n\tfor(int i=0;i<n*m;i++)\n\t{\n\t\tv[i]=0;\n\t\td[i]=INF;\n\t}\n\td[s]=0,v[s]=1;\n\tq.push(s);\n\twhile(q.size())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tv[u]=0;\n\t\tfor(int i=0;i<G[u].size();i++)\n\t\t{\n\t\t\tcome e=edge[G[u][i]];\n\t\t\tint to=e.to;\n\t\t\tint cost=e.cost;\n\t\t\tif(d[to]>d[u]+cost)\n\t\t\t{\n\t\t\t\td[to]=d[u]+cost;\n\t\t\t\tif(!v[to])    q.push(to),v[to]=1;\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\twhile(cin>>n>>m)\n\t{\n\t\tif(n==0&&m==0) break;\n\t\tgg();\n\t\tfor(int i=0;i<n;i++)\n\t\t    cin>>f[i];\n\t\tcin>>xa>>ya>>xb>>yb;\n\t\tfor(int i=0;i<n;i++)\n\t\t    for(int j=0;j<m;j++)\n\t\t        for(int k=0;k<4;k++)\n\t\t        {\n\t\t        \tint aa=i+dx[k];\n\t\t        \tint bb=j+dy[k];\n\t\t        \tif(boundary(aa,bb)==1)\n\t\t        \t{\n\t\t        \t\tif(f[i][j]==f[aa][bb])\n\t\t\t\t\t\t    add_edge(i*m+j,aa*m+bb,0);\n\t\t        \t    else\n\t\t        \t        add_edge(i*m+j,aa*m+bb,1);\n\t\t        \t}\n\t\t        }\n\t\tspfa(xa*m+ya);\n\t\tcout<<d[xb*m+yb]<<endl;\n\t}\n\treturn 0;\n} \n```\n\u64b0\u6587\u4e0d\u6613\uff0c\u5927\u4f6c\u8f7b\u55b7\uff0c\u7ba1\u7406\u5927\u5927\u6c42\u901a\u8fc7\n\n\u70ed\u7231\u7f16\u7a0b\uff0c\u6c38\u4e0d\u653e\u5f03\uff0c\u4e0d\u670d\u52aa\u529b\u7ec8\u5f97\u5fd7",
        "postTime": 1568515822,
        "uid": 173239,
        "name": "\u9ec4\u6c5d\u9e4f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4554 \u3010\u5c0f\u660e\u7684\u6e38\u620f\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a~~Dijkstrea~~pDijkstra+Heap\n\n\u82e5\u7528map[i][j]\u8868\u793a\u68cb\u76d8\uff0c\u4e0e\u4e0a\u7684\u8fde\u8fb9\u6743\u503c\u5c31\u662fmap[i][j]!=map[i-1][j]\uff0c\u5de6\u53f3\u4e0b\u4ee5\u6b64\u7c7b\u63a8\n\n\u4e8c\u7ef4\u6570\u7ec4\u641e\u6700\u77ed\u8def\u4e0d\u597d\u641e\uff0c\u7ed9\u4ed6\u6539\u6210\u4e00\u7ef4\u3002\u5750\u6807(x,y)\u5bf9\u5e94\u7684\u7f16\u53f7\u662f(x-1)*m+y\n\n\u5171n\u00b2\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u81f3\u591a\u6709\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u8fde\u8fb9\uff0c\u6700\u5927\u8fb9\u6570\u4e3a4n\u00b2\n\n```cpp\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<utility>\n#include<algorithm>\n#define num(x,y) (x-1)*m+y\nusing namespace std;\ntypedef pair<int,int>heap;\nconst int N=510;\nbool vis[N*N];\nint n,m,cnt,head[N*N],sx,sy,ex,ey,d[N*N];\nchar map[N][N];\nstruct edge{int to,next;bool w;}e[N*N*4];\ninline void addedge(int u,int v,bool w)\n{\n\te[++cnt].next=head[u];\n\thead[u]=cnt;\n\te[cnt].to=v;\n\te[cnt].w=w;\n}\ninline int dijkstra(int s,int t)\n{\n\tmemset(d,0x7f,sizeof(d));memset(vis,0,sizeof(vis));\n\tpriority_queue<heap,vector<heap>,greater<heap> >q; //pair\u4f18\u5148\u961f\u5217\u505a\u5c0f\u6839\u5806\n\tq.push(make_pair(d[s]=0,s));\n\twhile (q.size())\n\t{\n\t\tint u=q.top().second;q.pop();\n\t\tif (vis[u])continue;vis[u]=1;\n\t\tfor (int v,i=head[u];i;i=e[i].next)\n\t\t\tif (!vis[v=e[i].to]&&d[v]>d[u]+e[i].w)\n\t\t\t\tq.push(make_pair(d[v]=d[u]+e[i].w,v));\n\t}\n\treturn d[t];\n}\nint main()\n{\n\twhile (scanf(\"%d%d\",&n,&m)==2&&n+m)\n\t{\n\t\tcnt=0;\n\t\tmemset(head,0,sizeof(head)); //\u521a\u5f00\u59cb\u8fd9\u4e2a\u6ca1\u6e05\u96f6\u4e00\u76f4\u9519\u2026\n\t\tfor (int i=1;i<=n;i++)\n\t\t\tfor (int j=1;j<=m;j++)\n\t\t\t\tscanf(\" %c\",&map[i][j]);\n\t\tfor (int i=1;i<=n;i++)\n\t\t\tfor (int j=1;j<=m;j++) //\u5efa\u8fb9\uff0c\u5176\u5b9e\u5199\u4e2a\u65b9\u5411\u6570\u7ec4\u66f4\u65b9\u4fbf\u4f46\u662f\u6211\u61d2\u5f97\u6539\u4e86\n\t\t\t{\n\t\t\t\tif (i>1)addedge(num(i,j),num(i-1,j),map[i][j]!=map[i-1][j]);\n\t\t\t\tif (i<n)addedge(num(i,j),num(i+1,j),map[i][j]!=map[i+1][j]);\n\t\t\t\tif (j>1)addedge(num(i,j),num(i,j-1),map[i][j]!=map[i][j-1]);\n\t\t\t\tif (j<m)addedge(num(i,j),num(i,j+1),map[i][j]!=map[i][j+1]);\n\t\t\t}\n\t\tscanf(\"%d%d%d%d\",&sx,&sy,&ex,&ey);sx++;sy++;ex++;ey++; //\u9898\u76ee\u7ed9\u7684\u5750\u6807\u662f\u4ece\u96f6\u5f00\u59cb\u2026\u8f6c\u62101\u5f00\u59cb\u6bd4\u8f83\u65b9\u4fbf\n\t\tprintf(\"%d\\n\",dijkstra(num(sx,sy),num(ex,ey)));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1544195682,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4554 \u3010\u5c0f\u660e\u7684\u6e38\u620f\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5462\uff0c\u5f88\u591a\u4eba\u90fd\u60f3\u5230\u5355\u6e90\u6700\u77ed\u8def\uff0c\u7136\u540e\u5c31\u53bb\u5efa\u8fb9\uff0c\u8dd1\u56fe\uff0c\u7136\u540eAC\uff0c\n\n\u8fd9\u771f\u7684\u5fc5\u8981\u5417\uff1f\n\n\u5176\u5b9edij\u662f\u5f88\u4f18\u79c0\u7684\uff0c\u4f46\u662f\u5f88\u591a\u65f6\u5019\u4f1a\u88ab\u5947\u602a\u7684\u56fe\u5361\u7206\u7a7a\u95f4\u548c\u65f6\u95f4\n\n\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e00\u9898\n\n[\u98de\u98de\u4fa0\uff08\u56fd\u96c6\uff09](https://www.luogu.org/problem/P4473)\n\u4ee5\u53ca[\u9898\u89e3](https://www.luogu.org/blog/xcgzyouxiao/solution-p4473)\n\n\u5927\u5bb6\u90fd\u662f\u5b9a\u5f0f\u601d\u7ef4\uff0c\u770b\u5230\u56fe\u5c31\u662f\u8fb9\uff0c\u770b\u5230\u8fb9\u5c31\u53bb\u5b58\uff0c\u5f80\u5f80\u5fd8\u8bb0\u4e86\u8fb9\u7684\u610f\u4e49\n\n## \u8fb9\u7684\u5b58\u5728\u53ea\u662f\u544a\u8bc9\u4f60\u524d\u8fdb\u65b9\u5411\n\n\u5982\u679c\u65b9\u5411\u5f88\u660e\u786e\uff0c\u90a3\u4e48\u8fb9\u5c31\u6ca1\u6709\u610f\u4e49\uff0c\u751a\u81f3\u6210\u4e3a\u7d2f\u8d58\n\n\u6240\u4ee5\u8bf4\uff0c\n\n# \u6211\u53c8\u4e0d\u5b58\u8fb9\u4e86\uff01\uff01\uff01\u6559\u7ec3\uff01\uff01\n\n\u6211\u4eec\u770b\uff0c\u4e00\u4e2a\u683c\u5b50\u53ef\u4ee5\u5411\u4e0a\u4e0b\u5de6\u53f3\u8d70\uff0c\u8fd9\u662f\u53ef\u4ee5\u62bd\u8c61\u6210\u4e3amp\u6570\u7ec4\u7684\uff0c\n\n\u5e76\u4e14\u683c\u5b50\u4f4d\u7f6e\u6709\u5e8f\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u627e\u5230\u5468\u56f4\u7684\u56db\u4e2a\u683c\u5b50\uff0c\n\n\u90a3\u4e48\u5c31\u4e0d\u9700\u8981\u8fb9\u6765\u6307\u5f15\u4e86\uff0c\n\n\u5bf9\u4e8edij\u7684\u8fc7\u7a0b\uff0c\u5efa\u7acb\u4ee5dis\u4e3a\u4f9d\u636e\uff0c\u987a\u4fbf\u5b58\u4e00\u4e0b\u5750\u6807\u7684\u4f18\u5148\u961f\u5217\uff0c\n\n\u7136\u540e\u50cf\u5bbd\u641c\u4e00\u6837\u6253\u5c31\u597d\u4e86\u3002\u3002\u3002\n\n\u4e00\u6837\u7684\u5c31\u4e0d\u52a0\uff0c\u4e0d\u4e00\u6837\u7684\u52a0\u4e00  XD\n\n\uff08\u8bdd\u8bf4\u76f4\u63a5\u53eb\u5bbd\u641c\u4e0d\u597d\u5417\uff1f\uff1f\uff1f\uff09\n\n\uff08\u6216\u8005 ~~\u4f18\u5148\u961f\u5217\u4f18\u5316\u7684\u8bb0\u5fc6\u5316\u542f\u53d1\u5f0f\u5bbd\u641c\uff1f\uff1f\uff1f~~\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,mp[550][550],dis[550][550],yd[2][4]={{1,-1,0,0},{0,0,1,-1}};\nbool b[550][550];\nconst int inf=0x3fffffff;\nstruct dd{\n\tint x,y;\n}st,ed;\n\nvoid fake_dij(){\n\tpriority_queue< pair<int,pair<int,int> > >que;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tdis[i][j]=inf;\n\t\t\tb[i][j]=0;\n\t\t}\n\t}\n\tdis[st.x][st.y]=0;\n\tque.push(make_pair(0,make_pair(st.x,st.y)));\n\twhile(que.size()){\n\t\tdd x=(dd){que.top().second.first,que.top().second.second};que.pop();\n\t\tif(b[x.x][x.y])continue;\n\t\tfor(int i=0;i<4;i++){\n\t\t\tint xx=x.x+yd[0][i],yy=x.y+yd[1][i];\n\t\t\tif(mp[xx][yy]){\n\t\t\t\tif(mp[xx][yy]!=mp[x.x][x.y]){\n\t\t\t\t\tif(dis[xx][yy]>dis[x.x][x.y]+1){\n\t\t\t\t\t\tdis[xx][yy]=dis[x.x][x.y]+1;\n\t\t\t\t\t\tif(!b[xx][yy])que.push(make_pair(-dis[xx][yy],make_pair(xx,yy)));\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(dis[xx][yy]>dis[x.x][x.y]){\n\t\t\t\t\t\tdis[xx][yy]=dis[x.x][x.y];\n\t\t\t\t\t\tif(!b[xx][yy])que.push(make_pair(-dis[xx][yy],make_pair(xx,yy)));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t} \n\t}\n\tprintf(\"%d\\n\",dis[ed.x][ed.y]);\n}\n\nint main(){\n\twhile(1){\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tif(n==0&&m==0)return 0;\n\t\tmemset(mp,0,sizeof(mp));\n\t\tchar ch;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=1;j<=m;j++){\n\t\t\t\tch=getchar();\n\t\t\t\twhile(ch!='@'&&ch!='#')ch=getchar();\n\t\t\t\tif(ch=='@')mp[i][j]=1;\n\t\t\t\telse mp[i][j]=2; \n\t\t\t} \n\t\t}\n\t\tscanf(\"%d%d%d%d\",&st.x,&st.y,&ed.x,&ed.y);\n\t\tst.x++;st.y++;ed.x++;ed.y++;\n\t\tfake_dij();\n\t}\n\treturn 0;\n}\n```\n\u6ca1\u6709\u4e86\u5efa\u8fb9\u64cd\u4f5c\u7684dij\u771f\u662f\u723d\u5feb\u5462\uff0c\u5c31\u50cf\u65b0\u5e74\u7684\u6e05\u6668\u7a7f\u4e0a\u65b0\u7684\u5185\u88e4\u4e00\u6837\u6e05\u723d\u5462\u3002\u3002\u3002\n",
        "postTime": 1572504802,
        "uid": 197283,
        "name": "you_xiao",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4554 \u3010\u5c0f\u660e\u7684\u6e38\u620f\u3011"
    },
    {
        "content": "\u6b64\u9898\u6bcf\u4e2a\u70b9\u5411\u76f8\u90bb\u7684\u70b9\u8fde\u8fb9\uff0c\u4e0d\u4e00\u6837\u7684\u8fb9\u6743\u4e3a$1$,\u4e00\u6837\u7684\u662f$0$\n\n\u7136\u540e\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e00\u4e2a\u7f16\u53f7\uff0c\u70b9$(i,j)$\u7684\u7f16\u53f7\u662f$i*m+j+1$\n\n\u6240\u4ee5\u4e00\u4e2a$2*2$\u7684\u77e9\u9635\u5c31\u662f\n\n1 2\n\n3 4\n\n\u4e8e\u662f\u8dd1\u6700\u77ed\u8def\u5c31\u884c\u4e86\n\n$code$:\n\n```\n#include<algorithm>\n#include<bitset>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<map>\n#include<iostream>\n#include<queue>\n#include<set>\n#include<stack>\n#include<string>\n#include<vector>\nusing namespace std;\n#define ll long long\n#define f(i,a,b) for(int i=a;i<=b;i++)\ninline ll read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\n#define d read()\nstruct edge{\n\tll u,v,w,nx;\n}e[1000010];\nll n,m,tot;\nll dis[100010];\n\nll head[1000010];\nbool vis[500010];\nbool mp[510][510];\nstruct node{\n\tll w,now;\n\tinline bool operator <(const node &x)const{\n\t\treturn w>x.w;\n\t}\n};\nll k(ll i,ll j){return i*m+j+1;}\n\npriority_queue<node> q;\nint main(){\n\twhile(cin>>n>>m&&n&&m){\n\t\tmemset(dis,0x3f,sizeof(dis));\n\n\t\tmemset(vis,0,sizeof(vis));\n\t\tmemset(mp,0,sizeof(mp));\n\t\tf(i,1,n*m)e[i].u=e[i].v=e[i].w=e[i].nx=head[i]=0;\n\t\ttot=0;\n\t\tf(i,0,n-1)\n\t\t\tf(j,0,m-1){\n\n\t\t\t\tchar c;\n\t\t\t\tcin>>c;\n\t\t\t\tif(c=='@')mp[i][j]=1;\n\n\t\t\t}\n\t\tll s,t;\n\t\tll a1=d,a2=d,a3=d,a4=d;\n\t\ts=k(a1,a2);\n\t\tt=k(a3,a4);\n\t\tdis[s]=0;\n\n\t\tf(i,0,n-1)\n\t\t\tf(j,0,m-1){\n\n\t\t\t\tll x=k(i,j);\n\n\t\t\t\tif(i>0){\n\t\t\t\t\ttot++;\n\t\t\t\t\te[tot].u=x,e[tot].v=k(i-1,j),e[tot].w=(mp[i][j]!=mp[i-1][j]);\n\n\t\t\t\t\te[tot].nx=head[e[tot].u];\n\t\t\t\t\thead[x]=tot;\n\t\t\t\t}\n\t\t\t\tif(i+1<n){\n\t\t\t\t\ttot++;\n\t\t\t\t\te[tot].u=x,e[tot].v=k(i+1,j),e[tot].w=(mp[i][j]!=mp[i+1][j]);\n\n\t\t\t\t\te[tot].nx=head[e[tot].u];\n\t\t\t\t\thead[x]=tot;\n\t\t\t\t}\n\t\t\t\tif(j>0){\n\n\t\t\t\t\ttot++;\n\t\t\t\t\te[tot].u=x,e[tot].v=k(i,j-1),e[tot].w=(mp[i][j]!=mp[i][j-1]);\n\n\t\t\t\t\te[tot].nx=head[e[tot].u];\n\t\t\t\t\thead[x]=tot;\n\t\t\t\t}\n\t\t\t\tif(j+1<m){\n\n\t\t\t\t\ttot++;\n\t\t\t\t\te[tot].u=x,e[tot].v=k(i,j+1),e[tot].w=(mp[i][j]!=mp[i][j+1]);\n\n\t\t\t\t\te[tot].nx=head[e[tot].u];\n\t\t\t\t\thead[x]=tot;\n\t\t\t\t}\n\t\t\t}\n\t\tdis[s]=0;\n\n\t\tq.push((node){0,s});\n\t\twhile(!q.empty()){\n\t\t\tll u=q.top().now;\n\t\t\tq.pop();\n\t\t\tif(vis[u])continue;\n\t\t\tvis[u]=1;\n\t\t\tfor(int i=head[u];i;i=e[i].nx){\n\t\t\t\tll v=e[i].v;\n\t\t\t\tif(dis[v]>dis[u]+e[i].w){\n\n\t\t\t\t\tdis[v]=dis[u]+e[i].w;\n\n\t\t\t\t\tq.push((node){dis[v],v});\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout<<dis[t]<<endl;\n\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1589546915,
        "uid": 90706,
        "name": "_jimmywang_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4554 \u3010\u5c0f\u660e\u7684\u6e38\u620f\u3011"
    },
    {
        "content": "\u672c\u5f31\u9e21\u5e76\u4e0d\u4f1a01bfs\u4e5f\u4e0d\u60f3\u6253\u6700\u77ed\u8def\uff0c\u7528\u8054\u901a\u5757\u7f29\u70b9\uff08\u4f2a\uff09\u5904\u7406\uff0c\u8fd9\u6837\u6bcf\u4e2a\u70b9\u4e4b\u95f4\u7684\u8fb9\u90fd\u662f1\uff0c\u76f4\u63a5bfs\u5c31\u884c\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nconst int maxn=1000005;\nstruct node\n{\n\tint pos,ans;\n};\nint n,m,cnt,dx[5]={1,-1,0,0},dy[5]={0,0,1,-1},sx,sy,tx,ty,st,tt;\nint from[505][505],head[maxn],nxt[maxn],to[maxn],tot;\nchar s[505][505];\nbool p[maxn];\nqueue<node>q;\ninline int read()\n{\n\tchar z=getchar();int x=0,y=1;\n\twhile(z<'0'||z>'9'){if(z=='-')y=-1;z=getchar();}\n\twhile(z<='9'&&z>='0'){x=x*10+z-'0';z=getchar();}\n\treturn x*y;\n}\ninline void add(int x,int y)\n{\n\tto[++tot]=y;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n}\ninline void dfs(int x,int y)\n{\n\tfor(register int i=0;i<4;i++)\n\t{\n\t\tint nx=x+dx[i],ny=y+dy[i];\n\t\tif(nx>0&&ny>0&&nx<=n&&ny<=m)\n\t\t{\n\t\t\tif(s[x][y]==s[nx][ny]&&!from[nx][ny])\n\t\t\t{\n\t\t\t\tfrom[nx][ny]=from[x][y];\n\t\t\t\tdfs(nx,ny);\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\twhile(1)\n\t{\n\t\tn=read();m=read();\n\t\tif(n==0&&m==0)return 0;\n\t\tmemset(from,0,sizeof(from));cnt=0;\n\t\tmemset(head,0,sizeof(head));tot=0;\n\t\tmemset(p,0,sizeof(p));\n\t\tfor(register int i=1;i<=n;i++)\n\t\t\tscanf(\"%s\",s[i]+1);\n\t\tsx=read();sy=read();tx=read();ty=read();\n\t\tsx++;sy++;tx++;ty++;\n\t\tfor(register int i=1;i<=n;i++)\n\t\t\tfor(register int j=1;j<=m;j++)\n\t\t\t\tif(!from[i][j])from[i][j]=++cnt,dfs(i,j);\n\t\tfor(register int i=1;i<=n;i++)\n\t\t\tfor(register int j=1;j<=m;j++)\n\t\t\t\tfor(register int k=0;k<4;k++){\n\t\t\t\t\tint nx=i+dx[k],ny=j+dy[k];\n\t\t\t\t\tif(nx>0&&ny>0&&nx<=n&&ny<=m)\n\t\t\t\t\t\tif(from[i][j]!=from[nx][ny])\n\t\t\t\t\t\t\tadd(from[i][j],from[nx][ny]);\n\t\t\t\t}\n\t\tst=from[sx][sy];tt=from[tx][ty];\n\t\tp[st]=1;\n\t\tq.push((node){st,0});\n\t\twhile(!q.empty())\n\t\t{\n\t\t\tnode u=q.front();q.pop();\n\t\t\tif(u.pos==tt){printf(\"%d\\n\",u.ans);break;}\n\t\t\tfor(register int i=head[u.pos];i;i=nxt[i])\n\t\t\t{\n\t\t\t\tint g=to[i];\n\t\t\t\tif(p[g])continue;\n\t\t\t\tp[g]=1;\n\t\t\t\tq.push((node){g,u.ans+1});\n\t\t\t}\n\t\t}\n\t\twhile(!q.empty())q.pop();\n\t}\n}\n```\n",
        "postTime": 1570272814,
        "uid": 121612,
        "name": "\u5728\u60f3Peach",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4554 \u3010\u5c0f\u660e\u7684\u6e38\u620f\u3011"
    },
    {
        "content": "\u8001\u5b9e\u8bf4\uff0c\u76f4\u5230\u73b0\u5728\u6211\u90fd\u6ca1\u6709\u5f04\u61c2\u4e3a\u4ec0\u4e48\u5f00250000\u4f1a\u6302\uff0c\u5f002500000\u5c31ac\u4e86\n\n\u4e3a\u5927\u5bb6\u63d0\u4f9b\u4e00\u4e2a\u6807\u51c6\u7684dijkstra(priority_queue\u4f18\u5316\uff09\u505a\u6cd5\n\n\u9996\u5148\u5efa\u56fe\uff0c500\u7684\u6570\u636e\u76f4\u63a5\u786c\u6765\u5c31\u884c\n```\nfor(int i=1;i<=n;i++)\n  for(int j=1;j<=m;j++){\n     if(i>1)addedge((i-1)*m+j, (i-2)*m+j, s[i][j]!=s[i-1][j]);\n     if(i<n)addedge((i-1)*m+j, i*m+j,s[i][j]!=s[i+1][j]);\n     if(j>1)addedge((i-1)*m+j, (i-1)*m+j-1,s[i][j]!=s[i][j-1]);\n     if(j<m)addedge((i-1)*m+j, (i-1)*m+j+1,s[i][j]!=s[i][j+1]);\n  }\n```\n\u7d27\u63a5\u7740\uff0c\u8dd1\u4e00\u4e2adijk\u6a21\u677f\uff0c\u8bb0\u5f97\u6bcf\u6b21\u91cd\u8bbevis\n```\n//\n//  main.cpp\n//  luoguP4554\u5c0f\u660e\u7684\u6e38\u620f\n//\n//  Created by Ousmane_Dembele on 2019/3/29.\n//  Copyright \u00a9 2019 Ousmane_Dembele. All rights reserved.\n//\n\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <string.h>\nusing namespace std;\nchar s[1001][1001];\n#define int long long\nint n,m;\nint nxt[2006001],to[2600001],head[2600001],cost[2600001],cnt,sx,sy,ex,ey,start,ed;\nint dis[2600001],vis[2600001];\nstruct node{\n    int dis,num;\n    bool operator<(const node &a)const{\n        return dis>a.dis;\n    }\n};\n\nvoid add(int u,int v,int w){\n    to[++cnt]=v;\n    nxt[cnt]=head[u];\n    cost[cnt]=w;\n    head[u]=cnt;\n}\nvoid addedge(int u,int v,int w){\n    //cout<<u<<\" \"<<v<<\" \"<<w<<endl;\n    add(u,v,w);\n    add(v,u,w);\n}\nvoid dijkstra(){\n    priority_queue<node>q;\n    while(!q.empty()){\n        q.pop();\n    }\n    for(int i=0;i<=2600000;i++)dis[i]=19260817;\n    memset(vis,0,sizeof(vis));\n    dis[start]=0;\n    q.push({0,start});\n    while(!q.empty()){\n        node w=q.top();\n        q.pop();\n        int v=w.num;\n        if(vis[v]==1)continue;\n        vis[v]=1;\n        for(int i=head[v];i;i=nxt[i]){\n            int u=to[i];\n            if(dis[u]>cost[i]+dis[v]){\n                dis[u]=cost[i]+dis[v];\n                q.push({dis[u],u});\n            }\n        }\n    }\n}\n\nsigned main(){\n    while(1){\n        \n        scanf(\"%lld%lld\",&n,&m);\n        if(n==0&&m==0)return 0;\n        memset(head,-1,sizeof(head));\n        cnt=0;\n        for(int i=1;i<=n;i++)scanf(\"%s\",s[i]+1);\n        //for(int i=1;i<=n;i++)cout<<s[i]+1<<endl;\n        //        for(int i=1;i<=n;i++){\n        //            for(int j=1;j<=m;j++){\n        //                for(int k=1;k<=4;k++){\n        //                    if(i+x[k]<=n&&j+y[k]<=m&&i+x[k]>=1&&j+y[k]>=1){\n        //                        if(s[i+x[k]][j+y[k]]==s[i][j])addedge((i-1)*m+j,(i+x[k]-1)*m+j+y[k],0);\n        //                        else addedge((i-1)*m+j,(i+x[k]-1)*m+j+y[k],1);\n        //                    }\n        //                }\n        //            }\n        //        }\n        //        for(int i=1;i<=n;i++)\n        //            for(int j=1;j<=m;j++)\n        //                scanf(\"%c\",&s[i][j]);\n        //        for(int i=1;i<=n;i++)\n        //            cout<<s[i]+1<<endl;\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=m;j++){\n                if(i>1)addedge((i-1)*m+j, (i-2)*m+j, s[i][j]!=s[i-1][j]);\n                if(i<n)addedge((i-1)*m+j, i*m+j,s[i][j]!=s[i+1][j]);\n                if(j>1)addedge((i-1)*m+j, (i-1)*m+j-1,s[i][j]!=s[i][j-1]);\n                if(j<m)addedge((i-1)*m+j, (i-1)*m+j+1,s[i][j]!=s[i][j+1]);\n            }\n        scanf(\"%lld%lld%lld%lld\",&sx,&sy,&ex,&ey);\n        sy++;ey++;\n        start=sx*m+sy;\n        //cout<<start<<endl;\n        ed=ex*m+ey;\n        dijkstra();\n        //if(dis[ed]==192600000817)dis[ed]=0;\n        //for(int i=1;i<=n*m;i++)cout<<dis[i]<<\" \";\n        printf(\"%lld\\n\",dis[ed]);\n    }\n}\n\n\n\n\n\n\n```\n",
        "postTime": 1553956143,
        "uid": 48142,
        "name": "Ousmane_Dembele",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4554 \u3010\u5c0f\u660e\u7684\u6e38\u620f\u3011"
    },
    {
        "content": "##### \u7531\u4e8e\u76f8\u90bb\u4e14\u7b26\u53f7\u76f8\u540c\u7684\u70b9\u4e24\u4e2a\u70b9\u76f8\u4e92\u8fde\u901a\u4e14\u65e0\u82b1\u8d39\n##### \u6240\u4ee5\u8fd9\u4e24\u4e2a\u70b9\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u6574\u4f53\n##### \u4e5f\u5c31\u662f\u770b\u6210\u4e00\u4e2a\u5927\u7684\u70b9\n##### \u5f53\u4e24\u70b9\u76f8\u90bb\u800c\u53c8\u4e0d\u5c5e\u4e8e\u4e00\u4e2a\u201c\u70b9\u201d\u65f6\n##### \u6211\u4eec\u53ef\u4ee5\u8bf4\u8fd9\u4e24\u4e2a\u201c\u70b9\u201d\u95f4\u6709\u4e00\u6761\u8fb9\n##### \u5efa\u7acb\u5b8c\u56fe\u540espfa\u5c31ok\u4e86\n```cpp\n#include<iostream>\n#include<queue>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nlong long n,m;\nint col=0;       //\u70b9\u53f7\nint co[510][510];  //\u6807\u8bb0a[i][j]\u5c5e\u4e8e\u54ea\u4e2a\u201c\u70b9\u201d\nchar a[510][510];\nint dis[510*510];\nint head[510*510];\nint f[510*510];\nint tot;\nint dx[]={0,1,-1,0,0};\nint dy[]={0,0,0,1,-1};\nstruct woc\n{\n    int to,from;\n\tint next;\n\tint w;\n}e[510000];\nvoid build(int x,int y)\n{\n    ++tot;\n\te[tot].to=y;\n\te[tot].from=x;\n\te[tot].w=1;\n\te[tot].next=head[x];\n\thead[x]=tot;\n}\nqueue<int>q;\nvoid add(int x,int y)  //\u7f29\u70b9\n{\n\tco[x][y]=col;\n\tfor(int i=1;i<=4;i++)\n\t{\n\t\tif(a[dx[i]+x][dy[i]+y]==a[x][y] && !co[dx[i]+x][dy[i]+y])\n\t\t{\n\t\t\tadd(dx[i]+x,dy[i]+y);\n\t\t}\n\t}\n}\nvoid spfa(int s,int end)\n{\n\tdis[s]=0;\n\tf[s]=1;\n\tq.push(s);\n\twhile(!q.empty())\n\t{\n\t    int now=q.front();\n\t\tq.pop();\n\t\tf[now]=0;\n\t\tfor(int i=head[now];i;i=e[i].next)\n\t\t{\n\t\t    if(dis[e[i].to]>dis[now]+e[i].w)\n\t\t\t{\n\t\t\t    dis[e[i].to]=dis[now]+e[i].w;\n\t\t\t\tif(!f[e[i].to])\n\t\t\t\t{\n\t\t\t\t    f[e[i].to]=1;\n\t\t\t\t\tq.push(e[i].to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<dis[end]<<endl;\n}\nint main()\n{\n\twhile(cin>>n>>m && n && m)\n\t{\n\t   memset(co,0,sizeof(co));\n\t\tmemset(dis,127/2,sizeof(dis));\n\t\tmemset(head,0,sizeof(head));\n\t\tmemset(e,0,sizeof(e));\n\t\tmemset(f,0,sizeof(f));\n\t\tcol=0;\n\t\ttot=0;\n\t\t\n\t\tfor(int i=1;i<=n;i++)\n\t\t  for(int j=1;j<=m;j++)\n\t\t    cin>>a[i][j];\n\t\tint sx,sy,ex,ey;\n\t\tcin>>sx>>sy>>ex>>ey;\n\t    for(int i=1;i<=n;i++)\n\t\t  for(int j=1;j<=m;j++)\n\t\t\tif(!co[i][j])\n\t\t\t{\n\t\t\t  col++; \n\t\t\t  add(i,j);\n\t\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t  for(int j=1;j<=m;j++)\n\t\t\tfor(int k=1;k<=4;k++)            //\u5efa\u8fb9\n\t\t\t   if(co[i+dx[k]][j+dy[k]]!=co[i][j])\n\t\t\t\t\tbuild(co[i+dx[k]][j+dy[k]],co[i][j]);\n\t spfa(co[sx+1][sy+1],co[ex+1][ey+1]);//\u5c06\u8981\u8bbf\u95ee\u7684s,e\u6240\u5728\u201c\u70b9\u201d\u4e0a\u4f20\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1581680535,
        "uid": 209953,
        "name": "\u4f0a\u8389\u7802\u7cd6\u8517",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4554 \u3010\u5c0f\u660e\u7684\u6e38\u620f\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u8fd9\u9053\u9898\u53ef\u4ee5\u62bd\u8c61\u6210\u6700\u77ed\u8def\u7684\u95ee\u9898  \n\u5b9e\u73b0\u65b9\u6cd5   \n1.\u904d\u5386\u8054\u901a\u5757  \n2.\u5bf9\u4e8e\u6a2a\u5411\u7eb5\u5411\uff0c\u82e5\u8054\u901a\u5757\u4e0d\u540c\uff0c\u6dfb\u52a0\u8fb9   \n3.\u6267\u884c\u6700\u77ed\u8def\uff0c\u6c42\u51fad[c[ex][ey]]  \n\u6ce8\u610f\uff1a\u52a0\u8fb9\u5e94\u7528\u90bb\u63a5\u8868\uff0c\u76f4\u63a5\u6570\u7ec4\u5b58\u4f1a\u7206\u6808\uff08~~\u521a\u5f00\u59cb\u6211\u8fd8\u60f3\u53bb\u91cd\u8fb9\u5bfc\u81f4re qaq~~\uff09  \n\u4e0a\u4ee3\u7801  \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#define N 510 \nusing namespace std;\nint n,m,cnt,sx,sy,ex,ey,c[N][N],d[N*N],tot,head[N*N];\nbool map[N][N],vis[N*N];\nint dx[]={0,1,0,0,-1};\nint dy[]={0,0,1,-1,0}; \nstruct Edge{\n\tint v,next;\n}edge[N*N*4];\ninline int read(){\n\tint x=0,f=1;char ch=getchar();while(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();\n\t}while(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();\n\t}return x*f;\n}\nvoid dfs(int x,int y){\n\tc[x][y]=cnt;\n\tfor(int i=1;i<=4;i++){\n\t\tint vx=x+dx[i],vy=y+dy[i];\n\t\tif(map[vx][vy]==map[x][y]&&vx>=1&&vx<=n&&vy>=1&&vy<=m&&!c[vx][vy])\n\t\t\tdfs(vx,vy);\n\t}\n}\ninline void add(int x,int y){edge[++tot].v=y;edge[tot].next=head[x];head[x]=tot;}\nvoid spfa(int s){\n\tqueue<int>q;\n\tmemset(d,0x3f,sizeof(d));memset(vis,0,sizeof(vis));\n\tq.push(s);d[s]=0;vis[s]=1;\n\twhile(q.size()){\n\t\tint u=q.front();q.pop();vis[u]=0;\n\t\tfor(int i=head[u];i;i=edge[i].next){\n\t\t\tint v=edge[i].v;\t\t\t\n\t\t\tif(d[v]>d[u]+1){\n\t\t\t\td[v]=d[u]+1;\n\t\t\t\tif(!vis[v])vis[v]=1,q.push(v);\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tn=read();m=read();\n\twhile(1){\n\t\tif(n==0&&m==0)break;\n\t\tmemset(map,0,sizeof(map));memset(c,0,sizeof(c));memset(head,0,sizeof(head));cnt=0,tot=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=m;j++){\n\t\t\t\tchar ch;cin>>ch;\n\t\t\t\tif(ch=='#')map[i][j]=1;\n\t\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t\tif(!c[i][j])cnt++,dfs(i,j);\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tfor(int i=1;i<n;i++)\n\t\t\t\tif(c[i][j]!=c[i+1][j])add(c[i][j],c[i+1][j]),add(c[i+1][j],c[i][j]);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<m;j++)\n\t\t\t\tif(c[i][j]!=c[i][j+1])add(c[i][j],c[i][j+1]),add(c[i][j+1],c[i][j]);\n\t\tsx=read()+1,sy=read()+1,ex=read()+1,ey=read()+1;\n\t\tspfa(c[sx][sy]); \n\t\tprintf(\"%d\\n\",d[c[ex][ey]]);\n\t\tn=read();m=read();\t\t\n\t} \n\treturn 0;\n}\n\n```\n",
        "postTime": 1555220419,
        "uid": 88733,
        "name": "Zekrom",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4554 \u3010\u5c0f\u660e\u7684\u6e38\u620f\u3011"
    },
    {
        "content": "\u4e00\u5f00\u59cb\u6570\u636e\u4f3c\u4e4e\u662f\u6302\u4e86\n\n\u5f00\u5c3d\u4e86\u4f18\u5316,\u4ea4\u4e86\u6574\u6574\u4e00\u9875\n\n\u5c31\u662f\u7b80\u5355\u7684 bfs\n\n```cpp\n#include <cstdio>\n#include <bitset>\n#include <cstring>\n#include <algorithm>\n#define __R register\nusing namespace std;\ntypedef pair <int,int> pii;\n\nconst int MAXN=1005,MAXQ=1000005,inf=0x3f3f3f3f,dir[4][2]={{0,1},{1,0},{0,-1},{-1,0}};\nint n,m,sx,sy,tx,ty,dis[MAXN][MAXN];\nbool p; bitset <MAXN> vis[MAXN];\nchar mp[MAXN][MAXN];\n\ninline char getc(){\n\tstatic const int IN_LEN=10000000;\n    static char buf[IN_LEN],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,IN_LEN,stdin),p1==p2)?EOF:*p1++;\n}\ntemplate <typename T>\ninline void read(T &x){\n\tx=0; __R char ch; __R bool fl=0;\n\twhile (ch=getc(),ch<48||57<ch) fl^=ch=='-'; x=(ch&15);\n\twhile (ch=getc(),47<ch&&ch<58) x=(x<<1)+(x<<3)+(ch&15);\n\tif (fl) x=-x;\n}\nvoid readc(char &x){\n\twhile (x=getc(),x!='@'&&x!='#');\n}\n\nstruct STACK{\n\tint num[2][MAXQ],size;\n\tvoid clear(){\n\t\tsize=0;\n\t}\n\tvoid push(int x,int y){\n\t\tsize++;\n\t\tnum[0][size]=x;\n\t\tnum[1][size]=y;\n\t}\n} Q[2];\n\nint P[MAXQ][2];\nvoid bfs(int x_,int y_){\n\tint Head=0,Tail=1;\n\tP[Tail][0]=x_,P[Tail][1]=y_;\n\tvis[x_][y_]=1;\n\twhile (Head!=Tail){\n\t\tHead++;\n\t\tint x=P[Head][0],y=P[Head][1];\n\t\tfor (int i=0;i<4;i++){\n\t\t\tint nx=x+dir[i][0],ny=y+dir[i][1];\n\t\t\tif (nx<1||ny<1||n<nx||m<ny||vis[nx][ny]) continue;\n\t\t\tif (mp[nx][ny]!=mp[x_][y_]){\n\t\t\t\tif (dis[nx][ny]==inf) Q[p^1].push(nx,ny),dis[nx][ny]=dis[x_][y_]+1; \n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvis[nx][ny]=1;\n\t\t\tdis[nx][ny]=dis[x_][y_];\n\t\t\t++Tail;\n\t\t\tP[Tail][0]=nx,P[Tail][1]=ny;\n\t\t}\n\t}\n}\n\ninline void work(){\n\tfor (int i=1;i<=n;i++){\n\t\tvis[i].reset();\n\t\tfor (int j=1;j<=m;j++)\n\t\t\tdis[i][j]=inf;\t\n\t}\n\tdis[sx][sy]=0;\n\tint Head=0,Tail=1;\n\tQ[p=0].clear();\n\tQ[p].push(sx,sy);\n\twhile (1){\n\t\tQ[p^1].clear();\n\t\tfor (int i=1;i<=Q[p].size;i++){\n\t\t\tint x=Q[p].num[0][i];\n\t\t\tint y=Q[p].num[1][i];\n\t\t\tbfs(x,y);\n\t\t}\n\t\tif (dis[tx][ty]!=inf) break;\n\t\tp^=1;\n\t}\n\tprintf(\"%d\\n\",dis[tx][ty]);\n}\n\nint main(){\n\twhile (read(n),read(m),n&&m){\n\t\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=m;j++)\n\t\t\treadc(mp[i][j]);\n\t\tread(sx),read(sy),read(tx),read(ty);\n\t\tsx++,sy++,tx++,ty++;\n\t\twork();\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1527675574,
        "uid": 26166,
        "name": "\u6309Ctrl\u52a0w\u4f1aAC",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4554 \u3010\u5c0f\u660e\u7684\u6e38\u620f\u3011"
    },
    {
        "content": "\u770b\u5927\u5bb6\u90fd\u7528\u6700\u77ed\u8def\u548c\u53cc\u5411bfs\uff0c\u6211\u5c31\u7528\u5355\u7eaf\u7684bfs\u5427\n\n\u5927\u5bb6\u65e2\u7136\u8fde\u53cc\u5411\u90fd\u4f1a\uff0c\u8fd9\u79cd\u5355\u5411\u7684\u5c31\u4e0d\u89e3\u91ca\u4e86\u5427\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,sx,sy,tx,ty,d[4][2]={{0,1},{0,-1},{1,0},{-1,0}},dis[505][505],qx[5000000],qy[5000000],tot,tow;\nchar ch[505][505];\nbool flag[505][505];\nvoid bfs(){\n    for(int i=1;i<=n;++i)for(int j=1;j<=m;++j)dis[i][j]=1e9;\n    qx[tot=1]=sx;\n\tqy[tow=1]=sy;\n\tdis[sx][sy]=0;\n    while(tot<=tow){\n        flag[qx[tot]][qy[tot]]=0;\n        for(int i=0;i<4;++i){\n            int nx=qx[tot]+d[i][0],ny=qy[tot]+d[i][1];\n            if(nx<1||nx>n||ny<1||ny>m)continue;\n            if(dis[nx][ny]>dis[qx[tot]][qy[tot]]+(ch[nx][ny]!=ch[qx[tot]][qy[tot]])){\n                dis[nx][ny]=dis[qx[tot]][qy[tot]]+(ch[nx][ny]!=ch[qx[tot]][qy[tot]]);\n                if(!flag[nx][ny])flag[qx[++tow]=nx][qy[tow]=ny]=1;\n            }\n        }\n        tot++;\n    }\n}\nint main(){\n    while(cin>>n>>m){\n        if(n==0&&m==0)break;\n        for(int i=1;i<=n;++i)scanf(\"%s\",ch[i]+1);\n        cin>>sx>>sy>>tx>>ty;\n        sx++;\n\t\tsy++;\n\t\ttx++;\n\t\tty++;\n        bfs();\n        cout<<dis[tx][ty]<<\"\\n\";\n    }\n}\n```\n\u6c42\u7ba1\u7406\u901a\u8fc7",
        "postTime": 1568519902,
        "uid": 242967,
        "name": "JasonZRY",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4554 \u3010\u5c0f\u660e\u7684\u6e38\u620f\u3011"
    },
    {
        "content": "# P4554 \u5c0f\u660e\u7684\u6e38\u620f\n[\u539f\u9898\u5730\u5740](https://www.luogu.org/problemnew/show/P4554)\n[GitHub\u9898\u89e3](https://github.com/jerrykcode/luogu)\n\n## \u601d\u8def\n\nDijkstra\uff0c\u56fe\u7684\u9876\u70b9\u4e3a\u68cb\u76d8\u4e0a\u7684\u683c\u5b50\uff0c\u4e00\u4e2a\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u4e3a\u68cb\u76d8\u4e0a\u4e0e\u5b83\u76f8\u90bb\u7684\u683c\u5b50\u3002\u9876\u70b9\u4e0e\u90bb\u63a5\u70b9\u7684\u8ddd\u79bb\uff1a\u82e5\u4e3a\u540c\u7c7b\u578b\u7684\u683c\u5b50\u5219\u4e3a0\uff0c\u5426\u5219\u4e3a1\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <queue>\n#include <vector>\nusing namespace std;\n\ntypedef unsigned short uint16_t; //16\u4f4d\u65e0\u7b26\u53f7\u7c7b\u578b\ntypedef uint16_t grid_t; //\u683c\u5b50\ntypedef uint16_t dist_t; //\u8ddd\u79bb(\u82b1\u8d39)\n#define DIST_INF 0xffff\n\n//\u5750\u6807\nstruct Coordinate {\n\tgrid_t row, col; //\u884c\u4e0e\u5217\n\tCoordinate() {}\n\tCoordinate(grid_t row, grid_t col) : row(row), col(col) {}\n};\n\n//dijkstra\u4e2d\u5b58\u5165\u4f18\u5148\u961f\u5217\u7684\u5750\u6807\nstruct PriorityCoordinate : public Coordinate {\n\tdist_t dist; //\u4e0e\u6e90\u7684\u8ddd\u79bb\n\tPriorityCoordinate(grid_t row, grid_t col, dist_t dist) : Coordinate(row, col), dist(dist) {}\n\t\n\t//\u4f18\u5148\u961f\u5217\u7528\u4e8e\u6bd4\u8f83\u7684\u7ed3\u6784\u4f53\n\tstruct cmp {\n\t\tbool operator() (PriorityCoordinate& a, PriorityCoordinate& b) {\n\t\t\treturn a.dist > b.dist;\n\t\t}\n\t};\n};\n\n//\u8fed\u4ee3\u5668\uff0c\u7528\u4e8e\u679a\u4e3e\u4e00\u4e2a\u683c\u5b50\u76f8\u90bb\u7684\u683c\u5b50\nstruct Iterator {\n\t//\u6784\u9020\u51fd\u6570\uff0c\u4f20\u5165\u68cb\u76d8\u4e0e\u5c3a\u5bf8\n\tIterator(char ** board, grid_t n_rows, grid_t n_cols) : board(board), n_rows(n_rows), n_cols(n_cols) {}\n\t\n\t//\u8bbe\u7f6e\u683c\u5b50\n\tbool setCoordinate(grid_t row, grid_t col) {\n\t\tif (row < n_rows && col < n_cols) {\n\t\t\tthis->row = row;\n\t\t\tthis->col = col;\n\t\t\tdirection = UP; //\u521d\u59cb\u5411\u4e0a\u5f00\u59cb\u627e\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\t//\u5f97\u5230\u4e0b\u4e00\u4e2a\u76f8\u90bb\u683c\u5b50\u7684\u884c\u4e0e\u5217\n\tbool next(grid_t * p_row, grid_t * p_col) {\n\t\tswitch (direction) {\n\t\tcase UP: { //\u5411\u4e0a\u627e\n\t\t\tdirection = LEFT; //\u4e0b\u6b21\u5411\u5de6\n\t\t\tif (row - 1 >= 0) { //\u4e0a\u9762\u5b58\u5728\u683c\u5b50\n\t\t\t\t*p_row = row - 1;\n\t\t\t\t*p_col = col;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse //\u4e0a\u9762\u4e0d\u5b58\u5728\n\t\t\t\treturn next(p_row, p_col); //\u9012\u5f52\u627e\n\t\t\tbreak;\n\t\t}\n\t\tcase LEFT: { //\u5411\u5de6\u627e\n\t\t\tdirection = RIGHT; //\u4e0b\u6b21\u5411\u53f3\n\t\t\tif (col - 1 >= 0) { //\u5de6\u8fb9\u5b58\u5728\u683c\u5b50\n\t\t\t\t*p_row = row;\n\t\t\t\t*p_col = col - 1;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse \n\t\t\t\treturn next(p_row, p_col); //\u9012\u5f52\u627e\n\t\t\tbreak;\n\t\t}\n\t\tcase RIGHT: { //\u5411\u53f3\u627e\n\t\t\tdirection = DOWN; //\u4e0b\u6b21\u5411\u4e0b\n\t\t\tif (col + 1 < n_cols) { //\u53f3\u8fb9\u5b58\u5728\u683c\u5b50\n\t\t\t\t*p_row = row;\n\t\t\t\t*p_col = col + 1;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse \n\t\t\t\treturn next(p_row, p_col); //\u9012\u5f52\n\t\t\tbreak;\n\t\t}\n\t\tcase DOWN: { //\u5411\u4e0b\u627e\n\t\t\tdirection = END; //\u5411\u4e0b\u4e3a\u6700\u540e\u53ef\u80fd\u5f97\u5230\u7684\u76f8\u90bb\u683c\u5b50\uff0c\u4e0b\u6b21\u5c06\u7ed3\u675f\u5bfb\u627e\n\t\t\tif (row + 1 < n_rows) { //\u4e0b\u8fb9\u5b58\u5728\u683c\u5b50\n\t\t\t\t*p_row = row + 1;\n\t\t\t\t*p_col = col;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t\treturn next(p_row, p_col); //\u9012\u5f52\uff0c\u4e8b\u5b9e\u4e0adirection\u66f4\u65b0\u4e3aEND\u540e\uff0c\u9012\u5f52\u4e5f\u53ea\u53ef\u80fd\u8fd4\u56defalse\n\t\t\tbreak;\n\t\t}\n\t\tcase END :{ //\u65e0\u5904\u53ef\u627e\n\t\t\treturn false; //\u8fd4\u56defalse\n\t\t\tbreak;\n\t\t}\n\t\tdefault: return false; break;\n\t\t}\t\n\t\treturn false;\n\t}\nprivate:\n\tchar ** board; //\u68cb\u76d8\n\tgrid_t n_rows, n_cols; //\u68cb\u76d8\u7684\u5c3a\u5bf8\n\tgrid_t row, col; //\u5f53\u524d\u683c\u5b50\uff0cnext\u51fd\u6570\u5f97\u5230\u7684\u4fbf\u662frow, col\u7684\u76f8\u90bb\u683c\u5b50\n\n\t//\u5bfb\u627e\u76f8\u90bb\u683c\u5b50\u7684\u65b9\u5411\n\ttypedef enum {\n\t\tUP,\n\t\tLEFT,\n\t\tRIGHT,\n\t\tDOWN,\n\t\tEND,\n\t} Direction;\n\n\tDirection direction;\n};\n\n//\u8ba1\u7b97\u6700\u77ed\u8ddd\u79bb(\u6700\u5c0f\u82b1\u8d39)\n//\u4e0e\u666e\u901adijkstra\u76f8\u540c\uff0c\u53ea\u662f\u56fe\u7684\u9876\u70b9\u662f\u68cb\u76d8\u4e2d\u7684\u4e00\u4e2a\u683c\u5b50(\u5750\u6807)\uff0c\u4e00\u4e2a\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u4e3a\u68cb\u76d8\u4e2d\u4e0e\u4ed6\u76f8\u90bb\u7684\u683c\u5b50\ndist_t dijkstra(char ** board, grid_t n_rows, grid_t n_cols, Coordinate src, Coordinate des) {\n\tbool ** collected = new bool *[n_rows];\n\tdist_t ** dist = new dist_t *[n_rows];\n\tfor (size_t i = 0; i < n_rows; i++) {\n\t\tcollected[i] = new bool[n_cols];\n\t\tfill(collected[i], collected[i] + n_cols, false);\n\t\tdist[i] = new dist_t[n_cols];\n\t\tfill(dist[i], dist[i] + n_cols, DIST_INF);\n\t}\n\tpriority_queue<PriorityCoordinate, vector<PriorityCoordinate>, PriorityCoordinate::cmp> pq;\n\tpq.push(PriorityCoordinate(src.row, src.col, 0));\n\tdist[src.row][src.col] = 0;\n\tgrid_t top_row, top_col;\t\n\tdist_t top_dist, tmp_dist;\n\tgrid_t adj_row, adj_col;\n\tIterator it(board, n_rows, n_cols);\n\twhile (!pq.empty()) {\n\t\ttop_row = pq.top().row;\n\t\ttop_col = pq.top().col;\n\t\ttop_dist = pq.top().dist;\n\t\tpq.pop();\n\t\tif (collected[top_row][top_col]) continue;\n\t\tcollected[top_row][top_col] = true;\n\t\tif (top_row == des.row && top_col == des.col) {\n\t\t\t//\u5230\u8fbe\u7ec8\u70b9\n\t\t\twhile (!pq.empty()) pq.pop();\n\t\t\tbreak;\n\t\t}\n\t\tit.setCoordinate(top_row, top_col); //\u8bbe\u7f6e\u8fed\u4ee3\u5668\n\t\twhile (it.next(&adj_row, &adj_col)) { //\u904d\u5386\u76f8\u90bb\u7684\u683c\u5b50\n\t\t\tif (!collected[adj_row][adj_col]) {\n\t\t\t\ttmp_dist = top_dist + (board[top_row][top_col] == board[adj_row][adj_col] ? 0 : 1);\n\t\t\t\tif (tmp_dist < dist[adj_row][adj_col]) {\n\t\t\t\t\t//\u66f4\u65b0\n\t\t\t\t\tdist[adj_row][adj_col] = tmp_dist;\n\t\t\t\t\tpq.push(PriorityCoordinate(adj_row, adj_col, tmp_dist));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tdist_t result = dist[des.row][des.col];\n\t//\u91ca\u653e\u5185\u5b58\n\tfor (size_t i = 0; i < n_rows; i++) {\n\t\tfree(collected[i]);\n\t\tfree(dist[i]);\n\t}\n\tfree(collected);\n\tfree(dist);\n\treturn result;\n}\n\nint main() {\n\tgrid_t n, m, x1, y1, x2, y2;\n\tCoordinate src, des;\n\tchar ** board;\n\twhile (1) {\n\t\tscanf(\"%hd %hd\", &n, &m);\t\t\n\t\tif (!n) break;\n\t\t//\u8f93\u5165\u68cb\u76d8\n\t\tboard = new char *[n];\n\t\tfor (size_t i = 0; i < n; i++) {\n\t\t\tboard[i] = new char[m];\t\t\t\n\t\t\tfor (size_t j = 0; j < m; j++) {\t\t\n\t\t\t\tscanf(\" %c\", &board[i][j]);\n\t\t\t}\n\t\t}\n\t\t//\u8f93\u5165\u8d77\u70b9\uff0c\u7ec8\u70b9\u5750\u6807\n\t\tscanf(\"%hd %hd %hd %hd\", &x1, &y1, &x2, &y2);\n\t\tsrc.row = x1;\n\t\tsrc.col = y1;\n\t\tdes.row = x2;\n\t\tdes.col = y2;\n\t\tprintf(\"%hd\\n\", dijkstra(board, n, m, src, des));\n\t\tfor (size_t i = 0; i < n; i++) {\n\t\t\tfree(board[i]);\n\t\t}\n\t\tfree(board);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1560438492,
        "uid": 194439,
        "name": "rediserver",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4554 \u3010\u5c0f\u660e\u7684\u6e38\u620f\u3011"
    }
]