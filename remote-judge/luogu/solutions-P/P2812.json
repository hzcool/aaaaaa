[
    {
        "content": "tarjan\u7684\u6a21\u677f\u9898\uff08\u55ef\u53ef\u4ee5\u770blrj\u7684\u4e66\n\n\n-\u7b2c\u4e00\u95ee\uff1a\u81f3\u5c11\u8981\u7ed9\u591a\u5c11\u4e2a\u5b66\u6821\u8f6f\u4ef6\uff0c\u624d\u80fd\u4fdd\u8bc1\u6240\u6709\u5b66\u6821\u90fd\u6709\u8f6f\u4ef6\u7528\uff0c\u4e5f\u5c31\u662f\u6c42\u7f29\u70b9\u540e\u5165\u5ea6\u4e3a0\u7684\u70b9\u7684\u4e2a\u6570\uff08\u56e0\u4e3a\u5165\u5ea6\u4e3a0\u7684\u8bdd\u6ca1\u6709\u5176\u4ed6\u5b66\u6821\u80fd\u4f20\u8f6f\u4ef6\u7ed9\u5b83\uff09\n\n-\u7b2c\u4e8c\u95ee\uff1a\u4f7f\u7f29\u70b9\u540e\u6240\u6709\u5b66\u6821\u7684\u5165\u5ea6\u548c\u51fa\u5ea6\u90fd\u5927\u4e8e0\uff08\u8fd9\u6837\u5c31\u53ef\u4ee5\u7ed9\u4efb\u610f\u5b66\u6821\u8f6f\u4ef6\uff0c\u7136\u540e\u6240\u6709\u5b66\u6821\u90fd\u80fd\u7528\u4e0a\u8f6f\u4ef6\n\n\n**\u5982\u679c\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u56fe\u9700\u8981\u7279\u5224\u3002**\n\n\n```cpp\n/*\nID: ylx14271\nPROG: schlnet\nLANG: C++\n*/\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<stack>\n#include<cstdio>\nusing namespace std;\nint read()\n{\n    char ch=getchar();\n    int x=0;\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+ch-'0',ch=getchar(); \n    return x;\n}\nint s[20100],top;\nint low[21000];//\u5b58\u80fd\u641c\u5230\u7684\u6700\u65e9\u7684\u70b9 \nint pre[21000];//\u5b58\u81ea\u5df1\u7684\u65f6\u95f4 \nint dfs_clock; \nstruct node\n{\n    int x,y,d;\n} a[4000000];\nint po[21000],m;\nint n,x1;\nint scc[21000],id;\nint c[21000];//\u51fa\u5ea6 \nint r[21000];//\u5165\u5ea6 \n\nvoid dfs(int u)\n{\n    top++;\n    s[top]=u;\n    low[u]=++dfs_clock; //\u5b58\u81ea\u5df1\u7684\u65f6\u95f4\u548c \n    pre[u]=dfs_clock; \n    for (int i=po[u];i!=0;i=a[i].d)\n    {\n        int v=a[i].y;//\u63d0\u51fa\u70b9 \n        if (pre[v]==0)//\u6ca1\u6709\u626b\u8fc7 \n        {\n            dfs(v);//\u626b\u4e00\u904d \n            low[u]=min(low[u],low[v]);//\u66f4\u65b0 \n        } else\n        if (scc[v]==0)//\u5982\u679c\u5728\u522b\u7684\u8054\u901a\u5757\u5c31\u4e0d\u7ba1\u4e86 \n        {\n            low[u]=min(low[u],pre[v]);\n        }\n    }\n    int k; \n    if (pre[u]==low[u])//\u81ea\u5df1\u662f\u81ea\u5df1\u7684\u7956\u5148\uff08\u4e5f\u5c31\u662f\u626b\u4e0d\u5230\u65f6\u95f4\u66f4\u65e9\u7684\u70b9\u4e86 \n    {\n        id++;\n        while (1)\n        {\n            k=s[top];top--;\n            scc[k]=id;\n            if (k==u) break;\n        }\n    }\n}\nint main()\n{\n    freopen(\"schlnet.in\",\"r\",stdin);\n    freopen(\"schlnet.out\",\"w\",stdout);\n    n=read();\n    for (int i=1;i<=n;i++)\n    {\n        x1=read();\n        while (x1!=0)\n        {\n            m++;\n            a[m].x=i;\n            a[m].y=x1;\n            a[m].d=po[a[m].x];\n            po[a[m].x]=m;\n            x1=read();\n        }\n    }//\u8bfb\u5165 \n    for (int j=1;j<=n;j++)\n    {//\u56e0\u4e3a\u5e76\u4e0d\u4e00\u5b9a\u662f\u4e2a\u8fde\u901a\u56fe\uff0cso \n        if (pre[j]==0) dfs(j);\n    }\n    for (int i=1;i<=m;i++)\n    {\n        if (scc[a[i].x]!=scc[a[i].y])//\u81ea\u5df1\u56fe\u5185\u4e0d\u7ba1 \n        {\n            c[scc[a[i].x]]++;//x\u7684\u51fa\u5ea6+1 \n            r[scc[a[i].y]]++;//y\u7684\u5165\u5ea6+1 \n        }\n    } \n    int ans1=0;\n    int ans2=0;\n    for (int i=1;i<=id;i++)//\u7edf\u8ba1\u51fa\u5ea6\u5165\u5ea6\u4e3a0\u7684\u70b9\u7684\u51fa\u73b0\u6b21\u6570 \n    {\n        if (r[i]==0) ans1++;\n        if (c[i]==0) ans2++;\n    }\n    ans2=max(ans2,ans1);//\u7b2c\u4e8c\u95ee\uff0c\u6240\u6709\u70b9\u8981\u51fa\u5ea6\u4e0d\u4e3a0\u800c\u4e14\u5165\u5ea6\u4e0d\u4e3a0 \n    if (id==1) ans1=1,ans2=0;//\u55ef\u8981\u7279\u5224 \n    printf(\"%d\\n%d\\n\",ans1,ans2);\n    return 0;\n}\n```",
        "postTime": 1499662610,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2812 \u3010\u6821\u56ed\u7f51\u7edc\u3011"
    },
    {
        "content": "\u8fd9\u9898\uff0c\u76f4\u63a5\u5904\u7406\u662f\u5f88\u9ebb\u70e6\u7684\u3002\u6211\u4eec\u9700\u8981Tarjan\u7f29\u70b9\uff0c\u7136\u540e\u4ed6\u5c31\u53d8\u6210\u4e86\u4e00\u4e2aDAG\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u518d\u6765\u770b\u9898\u76ee\u8981\u6211\u4eec\u6c42\u4ec0\u4e48\u3002   \n\uff08\u58f0\u660e\uff1a\u4e0b\u9762\u6240\u6709\u63d0\u5230\u7684\u70b9\u554a\uff0c\u5165\u5ea6\u554a\uff0c\u51fa\u5ea6\u554a\uff0c\u90fd\u662f\u6307\u5728\u7f29\u5b8c\u70b9\u7684\u56fe\u4e0a\u7684\u3002\uff09\n\n\u7b2c\u4e00\u95ee\uff0c\u53ef\u4ee5\u53d1\u73b0\u5176\u5b9e\u5c31\u662f\u6c42\u5165\u5ea6\u4e3a0\u7684\u70b9\u7684\u4e2a\u6570\u3002    \n\u800c\u7b2c\u4e8c\u95ee\u5462\uff0c\u5c31\u662f\u95ee\u8fd8\u8981\u591a\u5c11\u6761\u8fb9\u4f7f\u5f97\u4ed6\u6210\u4e3a**\u4e00\u4e2a**\u5f3a\u8fde\u901a\u5206\u91cf\u3002\u800c\u8981\u52a0\u7684\u8fb9\u6570\u5176\u5b9e\u5c31\u662f\u5165\u5ea6\u4e3a0\u7684\u70b9\u7684\u4e2a\u6570\u548c\u51fa\u5ea6\u4e3a0\u7684\u70b9\u7684\u4e2a\u6570\u4e2d\u8f83\u5927\u7684\u90a3\u4e2a\u3002    \n\u6ce8\u610f\uff0c\u8fd9\u91cc\u9700\u8981\u7279\u5224\u672c\u6765\u5c31\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u8f93\u51fa`1\\n0`\u7684\u60c5\u51b5\u3002\n\n\u53e6\u5916\u5728\u6c42\u7684\u8fc7\u7a0b\u4e2d\u6211\u4eec\u4e0d\u9700\u8981\u77e5\u9053\u7f29\u5b8c\u70b9\u540e\u7684\u56fe\u957f\u4ec0\u4e48\u6837\uff0c\u81ea\u7136\u4e5f\u5c31\u4e0d\u7528\u5b58\u56fe\u5566~\n\n**code\uff1a**\n```cpp\n#include<cstdio>\n#include<stack>\n#define MAXN 10005\n#define MAXM 5000005\nusing namespace std;\nint n;\nint index,low[MAXN],dfn[MAXN];\nstack<int>s;\nint f[MAXN];\nint scc_cnt,scc[MAXN];\nint In,Out,in[MAXN],out[MAXN];\nint max(int x,int y){return x>y?x:y;}\nstruct graph\n{\n\tint tot,hd[MAXN];\n\tint nxt[MAXM],to[MAXM];\n\tvoid add(int x,int y)\n\t{\n\t\ttot++;\n\t\tnxt[tot]=hd[x];\n\t\thd[x]=tot;\n\t\tto[tot]=y;\n\t}\n}g;\nvoid Tarjan(int x)\n{\n\tdfn[x]=low[x]=++index;\n\ts.push(x);\n\tf[x]=true;\n\tfor(int i=g.hd[x];i;i=g.nxt[i])\n\t\tif(!dfn[g.to[i]])\n\t\t{\n\t\t\tTarjan(g.to[i]);\n\t\t\tlow[x]=min(low[x],low[g.to[i]]);\n\t\t}\n\t\telse if(f[g.to[i]])\n\t\t\tlow[x]=min(low[x],dfn[g.to[i]]);\n\tif(dfn[x]==low[x])\n\t{\n\t\tscc[x]=++scc_cnt;\n\t\twhile(s.top()!=x)\n\t\t{\n\t\t\tscc[s.top()]=scc_cnt;\n\t\t\tf[s.top()]=false;\n\t\t\ts.pop();\n\t\t}\n\t\tf[x]=false;\n\t\ts.pop();\n\t}\n\treturn ;\n}//\u677f\u5b50\uff0c\u4e0d\u591a\u8bf4\u3002\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint v;\n\t\twhile(scanf(\"%d\",&v)&&v) g.add(i,v);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(!dfn[i]) Tarjan(i);//\u5148\u505aTarjan\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=g.hd[i];j;j=g.nxt[j])\n\t\t{\n\t\t\tint u=scc[i],v=scc[g.to[j]];\n\t\t\tif(v!=u)//\u4e0d\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\n\t\t\t{\n\t\t\t\tin[v]++;\n\t\t\t\tout[u]++;\n                //\u8bb0\u5f55\u4ed6\u4eec\u7684\u5165\u5ea6\u548c\u51fa\u5ea6\n\t\t\t}\n\t\t}\n\tfor(int i=1;i<=scc_cnt;i++)\n\t{\n\t\tif(!in[i]) In++;\n\t\tif(!out[i]) Out++;\n        //\u5206\u522b\u8bb0\u5f55\u5165\u5ea6\u4e3a0\u7684\u70b9\u7684\u6570\u91cf\u548c\u51fa\u5ea6\u4e3a0\u7684\u70b9\u7684\u6570\u91cf\n\t}\n\tprintf(\"%d\\n\",In);//\u7b2c\u4e00\u95ee\n\tif(scc_cnt==1) printf(\"0\");\n\telse printf(\"%d\",max(In,Out));\n    //\u7b2c\u4e8c\u95ee\uff0c\u8bb0\u5f97\u7279\u5224\n\treturn 0;\n}\n```\n\u5982\u679c\u4f60\u4e0d\u4f1aTarjan\u6216\u8005\u5bf9\u4ee3\u7801\u91ccTarjan\u90a3\u90e8\u5206\u6709\u4ec0\u4e48\u4e0d\u660e\u767d\u7684\uff0c\u53ef\u4ee5\u770b[\u8fd9\u91cc](https://www.luogu.com.cn/blog/195331/tarjan)\u3002   \n\u987a\u4fbf[\u5b89\u5229\u4e00\u4e0b](https://www.luogu.com.cn/blog/195331/)\u6211\u7684\u535a\u5ba2~",
        "postTime": 1587195759,
        "uid": 195331,
        "name": "Mine_King",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2812 \u3010\u6821\u56ed\u7f51\u7edc\u3010[USACO]Network of Schools\u52a0\u5f3a\u7248\u3011\u3011"
    },
    {
        "content": "# \u524d\u7f6e\u77e5\u8bc6\uff1a\n\n- [\u5f3a\u8054\u901a\u5206\u91cf](https://blog.csdn.net/qq_46230164/article/details/105406699)\n\n# \u5206\u6790\n\n\u8fd9\u9053\u9898\u7684\u8bdd\uff0c\u6211\u4eec\u5148\u8003\u8651\u7f29\u70b9\u3002\n\n\u4e0d\u4f1a\u7f29\u70b9\u7684\u53ef\u4ee5\u770b\u4e00\u4e0b\u6211\u7684[\u6587\u7ae0](https://blog.csdn.net/qq_46230164/article/details/105406699)\n\n\u65e2\u7136\u6211\u4eec\u7f29\u597d\u70b9\u4e86\uff0c\u90a3\u4e48\u6574\u5f20\u56fe\u53d8\u6210\u4e86\u4e00\u4e2a $DAG$\uff08\u6709\u5411\u65e0\u73af\u56fe\uff09\n\n\u8fd9\u6837\u5c31\u597d\u5904\u7406\u4e86\u3002\n\n- \u5bf9\u4e8e\u95ee\u9898 `A`\n\n\t\u6211\u4eec\u53d1\u73b0\u65e2\u7136\u8fd9\u6574\u5f20\u56fe\u662f $DAG$\uff0c\u90a3\u4e48\u7b54\u6848\u663e\u7136\u4e3a\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u7684\u4e2a\u6570\n    \n- \u5bf9\u4e8e\u95ee\u9898 `B`\n\t\u6211\u4eec\u53d1\u73b0\u8fd9\u6574\u5f20\u56fe\u662f $DAG$\u3002\u6211\u4eec\u8981\u628a\u5b83\u53d8\u6210\u8fde\u901a\u56fe\u3002\n    \n    \u8fde\u901a\u56fe\u9700\u8981\u6ee1\u8db3\uff1a\n    - \u6ca1\u6709\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\n    - \u6ca1\u6709\u51fa\u5ea6\u4e3a $0$ \u7684\u70b9\n    \n    \u8003\u8651\u5165\u5ea6\u4e3a $0$ \u548c \u51fa\u5ea6\u4e3a $0$ \u7684\u70b9\u4e24\u4e24\u5339\u914d\uff0c\u5219\u9700\u8981\u5339\u914d $\\max\\{ \\texttt{\u5165\u5ea6\u4e3a}\\ 0\\ \\texttt{\u7684\u70b9},\\texttt{\u5165\u5ea6\u4e3a}\\ 1\\ \\texttt{\u7684\u70b9}$ \u6b21\u3002\n    \n# \u4e00\u4e9b\u7ec6\u8282\n\n\u6ce8\u610f\u7f29\u70b9\u540e\u53ea\u6709\u4e00\u4e2a\u70b9\u7684\u60c5\u51b5\uff0c\u672c\u8eab\u5c31\u662f\u8fde\u901a\u7684\uff0c\u6240\u4ee5 \u95ee\u9898 `B` \u7684\u7b54\u6848\u4e3a $0$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>inline void read(T &FF){\n\tT RR=1;FF=0;char CH=getchar();\n\tfor(;!isdigit(CH);CH=getchar())if(CH=='-')RR=-1;\n\tfor(;isdigit(CH);CH=getchar())FF=(FF<<1)+(FF<<3)+(CH^48);\n\tFF*=RR;\n}\ntemplate<typename T>inline void write(T x){\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>9)write(x/10);\n\tputchar('0'+x%10);\n}\nconst int MAXN=1e6+10,MAXM=1e6+10;\nint s[MAXN],stop,dfn[MAXN],low[MAXN],scccnt,sccnum[MAXN],dfscnt,tot,he[MAXN],ne[MAXM<<1],ed[MAXM<<1],n,x,se,es,du[MAXN],ud[MAXN];\nvoid add(int x,int y){\n\ted[++tot]=y;\n\tne[tot]=he[x];\n\the[x]=tot;\n}\ninline void tarjan(int now){\n\tdfn[now]=low[now]=++dfscnt;\n\ts[stop++]=now;\n\tfor (int i=he[now];i;i=ne[i]){\n\t\tif(!dfn[ed[i]]){\n\t\t\ttarjan(ed[i]);\n\t\t\tlow[now]=min(low[now],low[ed[i]]);\n\t\t}else if(!sccnum[ed[i]]){\n\t\t\tlow[now]=min(low[now],dfn[ed[i]]);\n\t\t}\n\t}\n\tif(dfn[now]==low[now]){\n\t\tscccnt++;\n\t\tdo{\n\t\t\tsccnum[s[--stop]]=scccnt;\n\t\t}while(s[stop]!=now);\n\t}\n}//tarjin\u7684\u677f\u5b50\nint main(){\n\tread(n);\n\tfor(int i=1;i<=n;i++)\n\t\twhile(cin>>x&&x)add(i,x);\n\tfor(int i=1;i<=n;i++)\n\t\tif(!dfn[i])tarjan(i);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=he[i];j;j=ne[j])\n\t\t\tif(sccnum[i]!=sccnum[ed[j]]){\n\t\t\t\tdu[sccnum[ed[j]]]++;//\u7edf\u8ba1\n\t\t\t\tud[sccnum[i]]++;//\u7edf\u8ba1\n\t\t\t}\n\tfor(int i=1;i<=scccnt;i++){\n\t\tif(!du[i])se++;//\u5165\u5ea6\u4e3a0\u7684\u70b9\n\t\tif(!ud[i])es++;//\u51fa\u5ea6\u4e3a0\u7684\u70b9\n\t}\n\tcout<<se<<endl<<(scccnt==1?0:max(se,es));//\u5c0f\u7ec6\u8282\n\treturn 0;\n}\n```",
        "postTime": 1588411090,
        "uid": 180242,
        "name": "orzdevinwang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2812 \u3010\u6821\u56ed\u7f51\u7edc\u3010[USACO]Network of Schools\u52a0\u5f3a\u7248\u3011\u3011"
    },
    {
        "content": "tarjan \u677f\u5b50\n\u4ee5\u4e0b\u51e0\u4e2a\u6570\u7ec4\n\n```c++\ndin[],dout[]\u5206\u522b\u7edf\u8ba1\u5165\u5ea6\u548c\u51fa\u5ea6\ndfn[],low[]\u8bb0\u4e00\u4e0b\u65f6\u95f4\u6233\uff0c\u548c\u6700\u65e9\u8fbe\u5230\u7684\u65f6\u95f4\nid[]\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u5c5e\u4e8e\u54ea\u4e2a\u8054\u901a\u5757\nsiz[]\u8bb0\u5f55\u6bcf\u4e2a\u8054\u901a\u5757\u4e2d\u70b9\u7684\u4e2a\u6570\nscc_cnt\u8bb0\u5f55\u8054\u901a\u5757\u7684\u4e2a\u6570\n```\n\u8fd9\u9053\u9898\n\u95ee\u9898\u4e00\u7684\u89e3\u91ca\n\n\u6240\u6709\u8d77\u70b9\u90fd\u65e0\u6cd5\u7531\u522b\u7684\u70b9\u5230\u8fbe\uff0c\u56e0\u6b64\u6bcf\u4e2a\u8d77\u70b9\u5fc5\u987b\u5206\u914d\u4e00\u4e2a\u8f6f\u4ef6\uff0c\u800c\u5bf9\u4e8e\u5176\u4ed6\u6240\u6709\u70b9\uff0c\u4e00\u5b9a\u5b58\u5728\u524d\u9a71\uff0c\u4e00\u5b9a\u80fd\u7531\u67d0\u4e00\u4e2a\u8d77\u70b9\u8d70\u5230\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ece\u6240\u6709\u8d77\u70b9\u51fa\u53d1\uff0c\u80fd\u904d\u5386\u6574\u4e2a\u56fe\u3002\u56e0\u6b64\u53ea\u9700\u8981\u7ed9\u6240\u6709\u8d77\u70b9\u5404\u4e00\u4e2a\u8f6f\u4ef6\u5373\u53ef\u3002\n\n\u95ee\u9898\u4e8c\u7684\u89e3\u91ca\n\n\u8bbe\u7f29\u70b9\u540e\u7684DAG\u4e2d\uff0c\u8d77\u70b9\uff08\u5165\u5ea6\u4e3a0\uff09\u7684\u96c6\u5408\u4e3aP,\u7ec8\u70b9\uff08\u51fa\u5ea6\u4e3a0\uff09\u7684\u96c6\u5408\u4e3aQ\uff0c\u5206\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\n\n1.|P|<=|Q|\n\n\u2460 \u82e5 |P|=1\uff0c\u5219\u53ea\u6709\u4e00\u4e2a\u8d77\u70b9\uff0c\u5e76\u4e14\u8fd9\u4e2a\u8d77\u70b9\u80fd\u8d70\u5230\u6240\u6709\u70b9\uff0c\u53ea\u8981\u5c06\u6bcf\u4e00\u4e2a\u7ec8\u70b9\u90fd\u5411\u8fd9\u4e2a\u8d77\u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48\u5bf9\u4e8e\u56fe\u4e2d\u4efb\u610f\u4e00\u70b9\uff0c\u90fd\u53ef\u4ee5\u5230\u8fbe\u6240\u6709\u70b9\uff0c\u65b0\u52a0\u7684\u8fb9\u6570\u4e3a |Q|\u3002\n\n\u2461 \u82e5 |P|\u22652\uff0c\u5219 |Q|\u2265|P|\u22652\uff0c\u6b64\u65f6\u81f3\u5c11\u5b58\u5728 2\u4e2a\u8d77\u70b9 p1,p2\uff0c2 \u4e2a\u7ec8\u70b9 q1,q2\u6ee1\u8db3 p1 \u80fd\u8d70\u5230 q1 \u80fd\u8d70\u5230 q2\u3002\uff08\u53cd\u8bc1\u6cd5\uff1a\u5982\u679c\u4e0d\u5b58\u5728\u4e24\u4e2a\u8d77\u70b9\u80fd\u8d70\u5230\u4e0d\u540c\u7684\u7ec8\u70b9\uff0c\u5219\u6240\u6709\u7684\u8d77\u70b9\u4e00\u5b9a\u53ea\u80fd\u8d70\u5230\u540c\u4e00\u4e2a\u7ec8\u70b9\uff0c\u800c\u7ec8\u70b9\u81f3\u5c11\u6709\u4e24\u4e2a\uff0c\u53d1\u751f\u77db\u76fe\uff0c\u5047\u8bbe\u4e0d\u6210\u7acb\uff09\u3002\n```c++\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 10000+20, M = N * N;\nint n;\nint h[N], e[M], ne[M], idx, dfn[N], low[N], timestamp, stk[N], tt, id[N], siz[N], scc_cnt, din[N], dout[N];\nbool in_stk[N]; \nvoid add(int a, int b) {\n    e[idx] = b, ne[idx] = h[a], h[a] = idx++;}\nvoid tarjan(int u) {\n    dfn[u] = low[u] = ++timestamp;\n    stk[++tt] = u, in_stk[u] = true;\n    for (int i = h[u]; ~i; i = ne[i]) {int j = e[i];\n\t\tif (!dfn[j]) {tarjan(j);low[u] = min(low[u], low[j]);}\n\t\telse if (in_stk[j]) {low[u] = min(low[u], dfn[j]);}}\n    if (dfn[u] == low[u]) {++scc_cnt;int v;\n        do {v = stk[tt--];in_stk[v] = false;id[v] = scc_cnt;siz[scc_cnt]++;\n        } while (v != u);}\n} \nint main() {\n    cin >> n;\n    memset(h, -1, sizeof h);\n    for (int i = 1; i <= n; i++) {\n        int t;while (cin >> t, t) add(i, t);}\n    for (int i = 1; i <= n; i++) {\n        if (!dfn[i]) tarjan(i);}\n    for (int i = 1; i <= n; i++) {\n        for (int j = h[i]; ~j; j = ne[j]) {int k = e[j];int a = id[i], b = id[k];if (a != b) dout[a]++, din[b]++;}}\n    int src = 0, des = 0;\n    for (int i = 1; i <= scc_cnt; i++) {\n        if (!din[i]) src++;\n        if (!dout[i]) des++;}\n    printf(\"%d\\n\", src);\n    if (scc_cnt == 1) puts(\"0\");\n    else printf(\"%d\\n\", max(src, des));\n    return 0;}\n\n```\n\n\n\n",
        "postTime": 1601437656,
        "uid": 302189,
        "name": "dbodb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2812 \u3010\u6821\u56ed\u7f51\u7edc\u3010[USACO]Network of Schools\u52a0\u5f3a\u7248\u3011\u3011"
    },
    {
        "content": "\n------------\n\u6211\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3~~\n\n~~\u8fd9\u4e2a\u9898\u5927\u6982\u662f\u4e0d\u96be\u7684~~  _ (:3 \u300d\u2220) _\n\n## \u9898\u9762\u6982\u62ec\n\n\u6709\u4e00\u5f20\u6709\u5411\u56fe\uff0c\u7ed9\u51fa\u70b9\u7684\u6570\u91cfn\u4ee5\u53ca\u8fb9\u7684\u6570\u91cfm\uff0c\u6709\u4e24\u4e2a\u95ee\u9898\uff1a\n\n### problem1\n\n\u81f3\u5c11\u9009\u51e0\u4e2a\u70b9\u5f00\u59cb\u641c\u7d22\u624d\u80fd\u4f7f\u6574\u4e2a\u56fe\u90fd\u80fd\u88ab\u904d\u5386\u5230\n\n### problem2\n\n\u81f3\u5c11\u9700\u8981\u6dfb\u52a0\u51e0\u6761\u8fb9\u80fd\u4f7f\u6574\u4e2a\u56fe\u6210\u4e3a\u4e00\u4e2a\u73af\uff1f\n\n## \u9898\u76ee\u5206\u6790\n\n\u8fd9\u4e2a\u9898\u7684\u96be\u70b9\u5728\u4e8e\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u8fde\u63a5\u54ea\u4e24\u5ea7\u5b66\u6821\u624d\u80fd\u4f7f\u6574\u4e2a\u56fe\u6210\u4e3a\u4e00\u4e2a\u73af\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u4e00\u4e9b\u5c0f\u95ee\u9898\u5b8c\u6210\u518d\u53bb\u770b\u5927\u95ee\u9898\uff08\u4f5b\u7cfb\uff09\n\n### \u4e00\u3001tarjan\u7f29\u70b9\n\u4ece\u9898\u76ee\u53ef\u4ee5\u5f97\u77e5\u5982\u679c\u8fd9\u4e2a\u56fe\u4e2d\u6709\u73af\uff0c\u90a3\u8fd9\u4e2a\u73af\u4e2d\u82e5\u6709\u81f3\u5c11\u4e00\u4e2a\u70b9\u53ef\u4ee5\u88ab\u5171\u4eab\uff0c\u6574\u4e2a\u73af\u5c31\u53ef\u4ee5\u88ab\u5171\u4eab\uff0c\u8fd9\u5c31\u53ef\u4ee5\u628a\u4e00\u4e2a\u73af\u770b\u505a\u6210\u4e00\u4e2a\u70b9\uff0c\u53ef\u4ee5\u7528tarjan\u7f29\u70b9\u5b8c\u6210\n\n### \u4e8c\u3001\u5bf9\u5165\u5ea6\u4e3a0\u7684\u70b9\u548c\u51fa\u5ea6\u4e3a0\u7684\u70b9\u8fdb\u884c\u64cd\u4f5c\n\n\n------------\n\n\n#### \u5b50\u95ee\u98981\uff1a\u5165\u5ea6\u4e3a0\u7684\u70b9\n\n\u5982\u679c\u5728\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u70b9\u4e0a\u8bbe\u6bcd\u673a\uff0c\u90a3\u4e48\u6574\u4e2a\u56fe\u90fd\u4f1a\u88ab\u5171\u4eab\n\n\u8fd9\u4e5f\u662fproblem1\u7684\u7b54\u6848\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u7f29\u70b9\u540e\u7684\u56fe\u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff0c\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e00\u4e2a\u5165\u5ea6\u548c\u51fa\u5ea6\uff0c\u5165\u5ea6\u4e3a0\u7684\u70b9\u65e0\u6cd5\u88ab\u5171\u4eab\uff0c\u90a3\u6211\u4eec\u8981\u60f3\u529e\u6cd5\u8ba9\u8fd9\u79cd\u70b9\u5165\u5ea6\u4e0d\u4e3a0\u5450~\u80af\u5b9a\u8981\u8fde\u8fb9\u4f7f\u5165\u5ea6\u4e3a0\u7684\u70b9\u7684\u5165\u5ea6\u4e0d\u4e3a0 ~~\uff08\u597d\u7ed5\uff09~~\n\n\n#### \u5b50\u95ee\u98982\uff1a\u51fa\u5ea6\u4e3a0\u7684\u70b9\n\n\u8fd9\u6837\u7684\u8bdd\u95ee\u9898\u53c8\u6765\u4e86\uff1a\u5982\u679c\u968f\u4fbf\u627e\u4e2a\u70b9\u8fde\u63a5\u5165\u5ea6\u4e3a0\u7684\u70b9\u7684\u8bdd\uff0c\u90a3\u8fde\u63a5\u5165\u5ea6\u4e3a0\u7684\u90a3\u4e2a\u70b9\u7684\u51fa\u5ea6\u662f\u5426\u4e3a0\uff1f\n\n\u5982\u679c\u51fa\u5ea6\u4e0d\u4e3a0\uff0c\u90a3\u4e48\u4ece\u8fd9\u4e2a\u70b9\u51fa\u53d1\u7684\u70b9\u5c31\u65e0\u6cd5\u5728\u8fd9\u4e2a\u73af\u91cc\uff0c\u4ee5\u5b83\u4e3a\u6bcd\u673a\uff0c\u4f1a\u6709\u5b66\u6821\u5171\u4eab\u4e0d\u5230\uff0c\u6240\u4ee5\u51fa\u5ea6\u4e3a\u96f6\u7684\u70b9\u4e5f\u9700\u8981\u5411\u5916\u8fde\u4e00\u6761\u8fb9\n\n## \u5206\u6790\u7ed3\u679c\n\n\u4e0d\u96be\u60f3\u5230\uff0c\u8ba9\u51fa\u5ea6\u4e3a0\u7684\u70b9\u5411\u5165\u5ea6\u4e3a0\u7684\u70b9\u8fde\u4e00\u6761\u8fb9\n\n\u90a3\u7b54\u6848\u5c31\u51fa\u6765\u4e86\uff1a\n\n### problem1\uff1a\n\n\u5165\u5ea6\u4e3a0\u7684\u70b9\u7684\u4e2a\u6570\n\n\n------------\n\n\n\n### problem2\uff1a\n\nmax\uff08\u5165\u5ea6\u4e3a0\u7684\u70b9\u7684\u6570\u91cf\uff0c\u51fa\u5ea6\u4e3a0\u7684\u70b9\u7684\u6570\u91cf\uff09:\n\n\n------------\n\n\n\n### **\u6ce8\u610f\uff1a\u5f53\u53ea\u6709\u4e00\u4e2a\u70b9\uff08\u6216\u8005\u5f3a\u8fde\u901a\u5206\u91cf\u65f6\uff09\uff0c\u8f93\u51fa0\uff01\uff01\uff01\uff08\u8fd9\u4e2a\u53ef\u80fd\u4f1a\u6210\u4e3a\u5f3a\u5316\u6570\u636e\uff09**\n\n\n------------\n\n\n\u66f4\u8be6\u7ec6\u7684\u8bf7\u89c1\u5b8c\u6574\u4ee3\u7801\n\n------------\n\n\n## \u5b8c\u6574AC\u4ee3\u7801\n```c\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#define MAXN 10010\nusing namespace std;\n\nint vis[MAXN], head[MAXN];\nint js = 0, n, m, op=0, cnt, top=0;\nint sta[MAXN], low[MAXN], dfn[MAXN];\nint num[MAXN], sum[MAXN], g=0, oq=0;//num[i]\u8bb0\u5f55\u70b9i\u7684\u5e8f\u53f7\uff0csum[i]\u8bb0\u5f55\u5e8f\u53f7\u4e3ai\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5143\u7d20\u4e2a\u6570\nint rd[MAXN],cd[MAXN];//\u8bb0\u5f55\u5165\u5ea6\u548c\u51fa\u5ea6\n\nstruct edge{\n\tint v, nxt;\n}e[5000010 << 1];\n\nvoid addage(int u, int v){\n\te[++js].v = v;\n\te[js].nxt = head[u];\n\thead[u] = js;\n}\n\nvoid tarjan(int t){//tarjan\u7f29\u70b9\u677f\u5b50\n\tsta[++top] = t;\n\tvis[t] = 1;\n\tlow[t] = dfn[t] = ++op;\n\tfor (int j = head[t]; j; j = e[j].nxt){\n\t\tint v = e[j].v;\n\t\tif (!dfn[v]){\n\t\t\ttarjan(v);\n\t\t\tlow[t] = min (low[t], low[v]);\n\t\t}\n\t\telse if (vis[v])\n\t\t\tlow[t] = min (low[t], low[v]);\n\t}\n\tif (low[t] == dfn[t]){\n\t\tint f = sta[top--];\n\t\tvis[f] = 0;\n\t\tnum[f] = ++g;\n\t\tsum[g]++;\n\t\twhile (f != t){\n\t\t\tf = sta[top--];\n\t\t\tvis[f] = 0;\n\t\t\tnum[f] = g;\n\t\t\tsum[g]++;\n\t\t}\n\t}\n}\n\nint main(){\n\tint x, y, v, ans=0, jss=0,mm;\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++){\n\t\twhile (scanf(\"%d\", &x)){\n\t\t\tif (x == 0) break;\n\t\t\taddage(i, x);\n\t\t}\n\t}//\u8f93\u5165\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!dfn[i]) tarjan(i);\n\tfor (int i = 1; i <= n; i++){\n\t\tfor (int j = head[i]; j; j = e[j].nxt){\n\t\t\tv = e[j].v;\n\t\t\tif (num[i] != num[v]){\n\t\t\t\tcd[num[i]]++;//\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\n\t\t\t\trd[num[v]]++;//\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u51fa\u5ea6\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 1;i <= g; i++){\n\t\tif (!rd[i]){\n\t\t\tans++;\n\t\t}//\u8bb0\u5f55\u5165\u5ea6\u4e3a0\u7684\u70b9\u7684\u6570\u91cf\n\t\tif (!cd[i]){\n\t\t\tjss++;\n\t\t}//\u8bb0\u5f55\u51fa\u5ea6\u4e3a0\u7684\u70b9\u7684\u6570\u91cf\n\t}\n\tmm=max(ans,jss);//\u6bd4\u8f83\n\tprintf(\"%d\\n%d\\n\",ans,mm);\n\treturn 0;\n}\n```\n\n\n------------\n\n\n\u6c42\u7ba1\u7406\u5458\u5927\u5927\u8ba9\u6211\u8fc7\u5ba1\u5427\uff01\uff01\\(\u2022\u3142\u2022)/\u2665",
        "postTime": 1601797380,
        "uid": 260710,
        "name": "_Scaley",
        "ccfLevel": 0,
        "title": "P2812"
    },
    {
        "content": "### upd:  \u53d1\u73b0\u6211\u7684\u539f\u9898\u89e3\u548c\u52a0\u5f3a\u7248\u9898\u89e3\u533a\u4e2d\u7684\u5927\u90e8\u5206\u9898\u89e3\u90fd\u6ca1\u6709\u52a0\u7279\u5224\uff0c\u5728\u539f\u9898\u5904\u65e0\u6cd5\u901a\u8fc7\uff0c\u800c\u52a0\u5f3a\u7248\u6570\u636e~~\uff08\u6709\u70b9\u6c34\uff09~~\u53ef\u4ee5\u901a\u8fc7\uff0c\u4e8e\u662f\u7279\u6b64\u66f4\u65b0\u9898\u89e3\u3002\n\n[\u9898\u76ee\u6233\u8fd9](https://www.luogu.com.cn/problem/P2812)\n\n## \u9996\u5148\u8003\u8651\u95ee\u9898\u4e00\n---------------------------------------------------\n\n\u4e0d\u96be\u60f3\u5230\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u5b66\u6821\u4f5c\u4e3a\u7ec8\u7aef\u673a\uff0c\u90a3\u4e48\u8ddf\u5176\u5904\u4e8e\u540c\u4e00\u4e2a\u5f3a\u8054\u901a\u4e2d\u7684\u6240\u6709\u5b66\u6821\u5c31\u53ef\u4ee5\u4e0d\u7528\u4f5c\u4e3a\u7ec8\u7aef\u673a\u4e86\u3002\n\u90a3\u4e48\uff0c\u95ee\u9898\u4e00\u4e5f\u5c31\u8fce\u5203\u800c\u89e3\u4e86\uff1a\u627e\u5230\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u7f29\u70b9\u3002\u56e0\u4e3a\u8fd9\u4e2a\u5b66\u6821\uff08\u5f3a\u8054\u901a\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u5b66\u6821\uff09\u5fc5\u987b\u4f5c\u4e3a\u7ec8\u7aef\u673a\uff0c\u6bd5\u7adf\u5b83\u6536\u4e0d\u5230\u522b\u7684\u5b66\u6821\u4f20\u6765\u7684\uff0c\u53ea\u80fd\u81ea\u7ed9\u81ea\u8db3\u3002\n\n## \u7136\u540e\u8003\u8651\u95ee\u9898\u4e8c\n\n\u201c\u4efb\u610f\u4e00\u4e2a\u5b66\u6821\u90fd\u80fd\u4f5c\u4e3a\u6bcd\u9e21\u201d\uff1f\u8bd5\u60f3\u4e00\u4e0b\uff0c\u4efb\u610f\u9009\u53d6\u4e00\u4e2a\u5b66\u6821\u4f5c\u4e3a\u7ec8\u7aef\uff0c\u8981\u4f7f\u5f97\u5176\u4f59\u6240\u6709\u5b66\u6821\u90fd\u80fd\u6536\u5230\uff0c\u53ea\u80fd\u662f\u5168\u56fe\u8054\u901a\u3002\u56e0\u6b64\uff0c\u627e\u5230\u51fa\u5ea6\u4e3a0\u7684\u7f29\u70b9\u7684\u4e2a\u6570\u5c31ok\u4e86\u3002\uff08\u5373\u4ece\u51fa\u5ea6\u4e3a0\u7684\u70b9\u8fde\u5411\u5165\u5ea6\u4e3a0 \u7684\u70b9\uff09\n\n### \u7279\u5224\uff1a\u6ce8\u610f\u53ea\u6709\u4e00\u4e2a\u5f3a\u8054\u901a\u7684\u60c5\u51b5\uff0c\u4efb\u52a12\u5e94\u8f93\u51fa 0\n\n\u4e0d\u5e9f\u8bdd\uff0c\u4e0a\u4ee3\u7801\u3002\u7ec6\u8282\u5df2\u6807\u597d\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 5000010\n#define orz 0\n\ninline int read(){\n\tint x = 0, s = 1;\n\tchar c = getchar();\n\twhile(!isdigit(c)){\n\t\tif(c == '-')s = -1;\n\t\tc = getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx = (x << 1) + (x << 3) + (c ^ '0');\n\t\tc = getchar();\n\t}\n\treturn x * s;\n} \n\nstruct node{\n\tint u, v;\n\tint next;\n} t[N];\nint f[N];//\u65e5\u5e38\u90bb\u63a5\u8868 \n\nint stac[N], top = 0;\nint dfn[N], scc[N], low[N];\nbool vis[N];\n//tarjan \u677f\u5b50\uff0c\u4e0d\u591a\u8bf4 \nint in[N], out[N];//\u5165\u5ea6\u51fa\u5ea6 \nint ans1 = 0, ans2 = 0;\n\nint bian = 0;\ninline void add(int u, int v){\n\tt[++bian].v = v;\n\tt[bian].u= u;\n\tt[bian].next = f[u];\n\tf[u] = bian;\n\treturn ;\n}\n\nint cac = 0, cnt = 0;\nvoid tarjan(int now){//\u6709\u5411\u56fe\u5f3a\u8054\u901a\u677f\u5b50 \n\tdfn[now] = low[now] = ++ cac;\n\tstac[++top] = now;\n\tvis[now] = 1;\n\tfor(int i = f[now]; i;i = t[i].next){\n\t\tint v = t[i].v;\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v);\n\t\t\tlow[now] = min(low[now], low[v]);\n\t\t}\n\t\telse if(vis[v])low[now] = min(low[now], dfn[v]);\n\t}\n\tif(dfn[now] == low[now]){\n\t\tint cur; \n\t\tcnt++;\n\t\tdo{\n\t\t\tcur = stac[top--];\n\t\t\tvis[cur] = 0;\n\t\t\tscc[cur] = cnt;\n\t\t}while(cur != now);\n\t}\n\treturn ;\n}\n\nint main(){\n\tint n = read();\n\tfor(int i = 1;i <= n; i++){\n\t\tint x = read();\n\t\twhile(x){\n\t\t\tadd(i, x);\n\t\t\tx = read();\n\t\t}\n\t}\n\tfor(int i = 1;i <= n;i++)\n\t\tif(!dfn[i]) tarjan(i);//\u6ce8\u610f\u9632\u6b62\u6709\u7684\u70b9\u6f0f\u6389 \n\tfor(int i = 1;i <= bian; i++){ //\u7edf\u8ba1\u6240\u6709\u7684\u8fb9 \n\t\tint u = t[i].u, v = t[i].v;\n\t\tif(scc[u] != scc[v]){//\u5982\u679c\u8d77\u70b9\u548c\u7ec8\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u7f29\u70b9  \uff08\u5373\u5728\u4e24\u4e2a\u7f29\u70b9\u7684\u4ea4\u754c\u5904\u7684\u8fb9\uff09 \n\t\t\tout[scc[u]]++;\n\t\t\tin[scc[v]]++;\n\t\t}\n\t\t\n\t}\n\tfor(int i = 1;i <= cnt; i++){\n\t\tif(!in[i])ans1++;\n\t\tif(!out[i])ans2++;//\u7edf\u8ba1 \n\t}\n\tif(cnt == 1) printf(\"1\\n0\");  /*\u8bb0\u5f97\u7279\u5224\u5440*/ \n\telse printf(\"%d\\n%d\", ans1, max(ans1, ans2));\n\treturn orz;         //%\u4e00\u4e0bCCF\u6c42AC \n}\n```\n\n",
        "postTime": 1585888690,
        "uid": 234224,
        "name": "\u9752\u9e1f_Blue_Bird",
        "ccfLevel": 5,
        "title": "P2812\u6821\u56ed\u7f51\u7edc \uff08\u53c8\u662f\u5f3a\u8054\u901a\uff09"
    },
    {
        "content": "### $Description:$\n\u4e00\u4e9b\u5b66\u6821\u8fde\u63a5\u5728\u4e00\u4e2a\u8ba1\u7b97\u673a\u7f51\u7edc\u4e0a\uff0c\u5b66\u6821\u4e4b\u95f4\u5b58\u5728\u8f6f\u4ef6\u652f\u63f4\u534f\u8bae\uff0c\u6bcf\u4e2a\u5b66\u6821\u90fd\u6709\u5b83\u5e94\u652f\u63f4\u7684\u5b66\u6821\u540d\u5355\uff08\u5b66\u6821A\u652f\u63f4\u5b66\u6821B\uff0c\u5e76\u4e0d\u8868\u793a\u5b66\u6821B\u4e00\u5b9a\u8981\u652f\u63f4\u5b66\u6821A\uff09\u3002\n\n\u5f53\u67d0\u6821\u83b7\u5f97\u4e00\u4e2a\u65b0\u8f6f\u4ef6\u65f6\uff0c\u65e0\u8bba\u662f\u76f4\u63a5\u83b7\u5f97\u8fd8\u662f\u901a\u8fc7\u7f51\u7edc\u83b7\u5f97\uff0c\u8be5\u6821\u90fd\u5e94\u7acb\u5373\u5c06\u8fd9\u4e2a\u8f6f\u4ef6\u901a\u8fc7\u7f51\u7edc\u4f20\u9001\u7ed9\u5b83\u5e94\u652f\u63f4\u7684\u5b66\u6821\u3002\n\n\u56e0\u6b64\uff0c\u4e00\u4e2a\u65b0\u8f6f\u4ef6\u82e5\u60f3\u8ba9\u6240\u6709\u5b66\u6821\u90fd\u80fd\u4f7f\u7528\uff0c\u53ea\u9700\u5c06\u5176\u63d0\u4f9b\u7ed9\u4e00\u4e9b\u5b66\u6821\u5373\u53ef\u3002\n\n\u73b0\u5728\u8bf7\u95ee\u6700\u5c11\u9700\u8981\u5c06\u4e00\u4e2a\u65b0\u8f6f\u4ef6\u76f4\u63a5\u63d0\u4f9b\u7ed9\u591a\u5c11\u4e2a\u5b66\u6821\uff0c\u624d\u80fd\u4f7f\u8f6f\u4ef6\u80fd\u591f\u901a\u8fc7\u7f51\u7edc\u88ab\u4f20\u9001\u5230\u6240\u6709\u5b66\u6821\uff1f\n\n\u6700\u5c11\u9700\u8981\u6dfb\u52a0\u51e0\u6761\u65b0\u7684\u652f\u63f4\u5173\u7cfb\uff0c\u4f7f\u5f97\u5c06\u4e00\u4e2a\u65b0\u8f6f\u4ef6\u63d0\u4f9b\u7ed9\u4efb\u4f55\u4e00\u4e2a\u5b66\u6821\uff0c\u5176\u4ed6\u6240\u6709\u5b66\u6821\u5c31\u90fd\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u83b7\u5f97\u8be5\u8f6f\u4ef6\uff1f\n\n### $Solution:$\n\n\u5982\u679cA\u80fd\u652f\u63f4B\uff0c \u90a3\u4e48\u5c31\u8fde\u4e00\u6761\u4eceA\u5230B\u7684\u6709\u5411\u8fb9\u3002\u7f29\u70b9\u4e4b\u540e\uff0c\u5c31\u53d8\u6210\u4e86\u4e00\u4e2aDAG\u3002\u7b2c\u4e00\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u6bcf\u4e2a\u5165\u5ea6\u4e3a0\u7684\u70b9\u4e00\u4e2a\u65b0\u8f6f\u4ef6\u3002\n\n\u7b2c\u4e8c\u95ee\uff1a\n\n\u5047\u8bbe\u5165\u5ea6\u4e3a$0$\u7684\u70b9\u96c6\u4e3a$P$\uff0c\u51fa\u5ea6\u4e3a$0$\u70b9\u96c6\u4e3a$Q$\u3002\u5e76\u4e14\u5047\u8bbe$|P| \\leq |Q|$\n\n\u6bcf\u52a0\u4e00\u6761\u8fb9\uff0c\u6700\u591a\u53ef\u4ee5\u51cf\u5c11\u4e00\u4e2a\u5165\u5ea6\u4e3a$0$\u7684\u70b9\u4e0e\u4e00\u4e2a\u51fa\u5ea6\u4e3a$0$\u7684\u70b9\u3002\u6240\u4ee5\u6700\u5c11\u9700\u8981\u6dfb\u52a0$|Q|$\u6761\u8fb9\u3002\n\n1.\u5982\u679c$|P| == 1$, \u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4ece\u6bcf\u4e00\u4e2a\u51fa\u5ea6\u4e3a$0$\u7684\u70b9\u8fde\u4e00\u6761\u8fb9\u5230\u5165\u5ea6\u4e3a$0$\u70b9\u3002\n\n2.\u5982\u679c$|P| > 1$, \u56e0\u4e3a$|P| \\leq |Q|$, \u6240\u4ee5$2 \\leq |P| \\leq |Q|$.\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u4ece$P$ \u4e0e $Q$ \u4e2d\u627e\u5230\u56db\u4e2a\u70b9$p1, p2, q1, q2$, \u4f7f\u5f97   $p_1$\u53ef\u4ee5\u8d70\u5230$q_1$, $p_2$\u53ef\u4ee5\u8d70\u5230$q_2$.\n\n\u6240\u4ee5\uff0c\u53ef\u4ee5\u8fde\u4e00\u6761\u4ece$q_1$\u5230$p_2$\u7684\u6709\u5411\u8fb9\u3002\u90a3\u4e48$|P'| = |P| - 1, |Q'| = |Q| - 1.$\u53ef\u4ee5\u4e00\u76f4\u8fd9\u6837\u64cd\u4f5c\uff0c\u4e00\u76f4\u5230$|P| == 1$, \u90a3\u4e48\u4e00\u5171\u8fdb\u884c\u4e86$|P| - 1$\u6b21\uff0c \u6b64\u65f6\n$|Q'| = |Q| - (|P| - 1)$, \u90a3\u4e48\u5c31\u56de\u5230\u4e86\u60c5\u51b5$1$\uff0c\u90a3\u4e48\u4e00\u5171\u8fdb\u884c\u4e86$|Q| - (|P|-1) + (|P| - 1) = |Q|$.\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\n\nconst int N = 1e4 + 10, M = 5e6 + 100;\nstruct Edge {\n\tint v, w, nxt;\n} e[M];\n\nint low[N], dfn[N], stk[N], in_stk[N], id[N], timestamp, top, scc_cnt;\nint head[N], cnt, n;\nbool inde[N], outde[N];\n\nvoid AddEdge(int u, int v) {\n\te[++cnt].v = v;\n\te[cnt].nxt = head[u];\n\thead[u] = cnt;\n}\n\nvoid tarjan(int u)\n{\n\tlow[u] = dfn[u] = ++ timestamp;\n\tin_stk[u] = true, stk[ ++ top] = u;\n\tfor(int i = head[u]; i; i = e[i].nxt) {\n\t\tint v = e[i].v;\n\t\tif( !dfn[v]) {\n\t\t\ttarjan(v);\n\t\t\tlow[u] = min(low[u], low[v]);\n\t\t}\n\t\telse if( in_stk[v])\n\t\t    low[u] = min(low[u], dfn[v]);\n\t}\n\tif( low[u] == dfn[u]) {\n\t\tint y;\n\t\tscc_cnt ++;\n\t\tdo {\n\t\t\ty = stk[top --];\n\t\t\tin_stk[y] = false;\n\t\t\tid[y] = scc_cnt;\n\t\t} while( u != y);\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; i ++) {\n\t\tint v;\n\t//\tprintf(\"u = %d\\n\", i);\n\t\twhile(scanf(\"%d\", &v) && v) {\n\t\t\tAddEdge(i, v);\n\t//\t\tprintf(\"%d \", v);\n\t\t}\n//\t\tputs(\"\");\n\t}\n\tfor(int i = 1; i <= n; i ++)\n\t    if( !dfn[i])  tarjan(i);\n//\tfor(int i = 1; i <= n; i ++)  printf(\"%d \", id[i]);\n//\tputs(\"\");\n\tfor(int u = 1; u <= n; u ++) {\n\t\tfor(int i = head[u]; i; i = e[i].nxt) {\n\t\t\tint x = id[u], y = id[e[i].v];\n\t\t\tif( x != y) inde[y] = outde[x] = true;\n\t\t}\n\t}\n\n\tint in_cnt = 0, out_cnt = 0;\n\tfor(int i = 1; i <= scc_cnt; i ++) {\n\t\tif( inde[i] == 0)  in_cnt ++;\n\t\tif( outde[i] == 0)  out_cnt ++;\n\t}\n\tprintf(\"%d\\n\", in_cnt);\n\tif( scc_cnt == 1) puts(\"0\");\n\telse printf(\"%d\\n\", max(in_cnt, out_cnt));\n\treturn 0;\n}\n```\n",
        "postTime": 1581077610,
        "uid": 33360,
        "name": "\u738b\u96e8\u9633",
        "ccfLevel": 0,
        "title": "\u6821\u56ed\u7f51\u7edc"
    },
    {
        "content": "\u521a\u5b66\u5b8ctarjan\u4e4b\u540e\u505a\u5230\u4e86\u8fd9\u9053\u9898\uff0c\u4ed4\u7ec6\u4e00\u770b\uff0c\u8fd9\u4e0d\u5c31\u662f\u4e00\u4e2atarjan\u6a21\u677f\u5927\u6c34\u9898\u5417\uff01\u4e8e\u662f\u672c\u849f\u84bb\u7acb\u523b\u6572\u51fa\u4e86\u677f\u5b50\uff0c\u81ea\u4fe1\u6ee1\u6ee1\u6d4b\u8bd5\u6837\u4f8b\u7684\u65f6\u5019\u53d1\u73b0\u53ea\u8f93\u51fa\u4e86Problem 1\uff0c\u8fd8\u6709\u4e2aProblem 2\uff0c\u4e5f\u662f\u672c\u9898\u6700\u503c\u5f97\u601d\u8003\u7684\uff0c\u9996\u5148\u6211\u4eec\u60f3\uff0c\u5982\u4f55\u624d\u80fd\u4f7f\u4efb\u610f\u9009\u62e9\u4e00\u4e2a\u6bcd\u6821\uff0c\u5176\u4ed6\u6240\u6709\u5b66\u6821\u90fd\u80fd\u591f\u7528\u4e0a\u8f6f\u4ef6\uff1f\uff1f\uff1f\u5176\u5b9e\u591a\u60f3\u4e00\u60f3\u95ee\u9898\u5c31\u8fce\u5203\u800c\u89e3\u4e86\uff0c\u4f60\u8981\u8ba9\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e0e\u5176\u4ed6\u5206\u91cf\u76f8\u8fde\uff0c\u5c31\u53ea\u9700\u8981\u8ba9\u4ed6\u4eec\u5165\u5ea6\u6216\u8005\u51fa\u5ea6\u90fd\u4e0d\u4e3a0\u5373\u53ef\uff0c\u4e8e\u662fProblem 2\u8f6c\u5316\u4e3a\u4e86\u6c42\u5165\u5ea6\u4e3a0\u7684\u5206\u91cf\u4e2a\u6570\u548c\u51fa\u5ea6\u4e3a0\u7684\u5206\u91cf\u4e2a\u6570\u7684\u8f83\u5927\u503c\uff0c\u6240\u4ee5\u76f4\u63a5\u6c42\u5c31\u597d\u4e86\uff0c\u6700\u540e\u4e0d\u8981\u5fd8\u8bb0\u7279\u5224\u4e00\u4e2a\u5f53\u6240\u6709\u5b66\u6821\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u65f6\uff0c\u53d1\u4e00\u4e2a\u8f6f\u4ef6\u5c31\u597d\u4e86\u3002\n\n\u4ee5\u4e0b\u4e3aAC\u4ee3\u7801\uff0c\u8fd1\u4e4etarjan\u677f\u5b50\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint head[1000000];\nint ver[1000000];\nint nxt[1000000];\nint cnt;\nint dfn[1000000];\nint low[1000000];\nint idx;\nint belong[1000000];\nint Link[1000000];\nint top;\nint cnsta;\nbool aim[1000000];\nint in[1000000];\nint out[1000000];\nvoid add(int x,int y)\n{\n\tnxt[++cnt] = head[x];\n\thead[x] = cnt;\n\tver[cnt] = y;\n}\nvoid tarjan(int x)\n{\n\tLink[++top]=x;\n\tdfn[x] = low[x] = ++idx;\n\taim[x] = 1;\n\tfor (int i = head[x]; i;i=nxt[i])\n\t{\n\t\tint v0 = ver[i];\n\t\tif(!dfn[v0])\n\t\t{\n\t\t\ttarjan(v0);\n\t\t\tlow[x] = min(low[x], low[v0]);\n\t\t}\n\t\telse if(aim[v0])\n\t\t{\n\t\t\tlow[x] = min(low[x], dfn[v0]);\n\t\t}\n\t}\n\tif(dfn[x]==low[x])\n\t{\n\t\tint w;\n\t\tcnsta++;\n\t\tdo{\n\t\t\tw = Link[top--];\n\t\t\taim[w] = 0;\n\t\t\tbelong[w] = cnsta;\n\t\t} while (w != x);\n\t}\n}\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint b;\n\t\twhile(scanf(\"%d\",&b)&&b)\n\t\t{\n\t\t\tadd(i, b);\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif(!dfn[i])\n\t\t{\n\t\t\ttarjan(i);\n\t\t}\n\t}\n\tint sumin = 0;\n\tint sumout = 0;\n\tfor (int i = 1; i <= n;i++)\n\t{\n\t\tfor (int j = head[i]; j;j=nxt[j])\n\t\t{\n\t\t\tint v0 = ver[j];\n\t\t\tif(belong[v0]!=belong[i])\n\t\t\t{\n\t\t\t\tin[belong[v0]]++;\n\t\t\t\tout[belong[i]]++;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 1; i <= cnsta;i++)\n\t{\n\t\tif(in[i]==0)\n\t\t\tsumin++;\n\t\tif(out[i]==0)\n\t\t\tsumout++;\n\t}\n\tif(cnsta==1)\n\t{\n\t\tprintf(\"1\\n0\");\n\t\treturn 0;\n\t}\n\tprintf(\"%d\\n%d\", sumin, max(sumin, sumout));\n}\n```\n",
        "postTime": 1599401865,
        "uid": 278481,
        "name": "Link_Space",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2812 \u3010\u6821\u56ed\u7f51\u7edc\u3010[USACO]Network of Schools\u52a0\u5f3a\u7248\u3011\u3011"
    },
    {
        "content": "\u505a\u6cd5\u5927\u5bb6\u57fa\u672c\u4e00\u6837\uff0c\u6211\u8be6\u7ec6\u8bc1\u660e\u4e00\u4e0b\u4e3a\u4ec0\u4e48 $A$ \u4efb\u52a1\u662f\u627e\u5165\u5ea6\u4e3a0\u7684\u70b9\uff0c$B$ \u4efb\u52a1\u662f\u627e\u51fa\u5ea6\u548c\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u66f4\u591a\u7684\u90a3\u4e00\u4e2a\u3002\n\n\u9996\u5148\u5206\u6790\u4efb\u52a1 $A$ \uff0c\u81f3\u5c11\u9009\u51e0\u6240\u5b66\u6821\u4f5c\u4e3a\u5171\u4eab\u8f6f\u4ef6\u7684\u6bcd\u673a\uff0c\u80fd\u4f7f\u6bcf\u6240\u5b66\u6821\u90fd\u53ef\u4ee5\u7528\u4e0a\u3002\n\n\u7f29\u70b9\u4e4b\u540e\u8fd9\u4e2a\u56fe\u5c31\u662f\u4e00\u4e2a $DAG$ \uff0c $DAG$ \u6709\u4e00\u4e2a\u6027\u8d28\u5c31\u662f\u8981\u60f3\u80fd\u904d\u5386\u6240\u6709\u70b9\uff0c\u5fc5\u987b\u4ece\u6bcf\u4e00\u4e2a\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u51fa\u53d1\uff0c\u56e0\u4e3a\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u6ca1\u6709\u5176\u4ed6\u8fb9\u53ef\u4ee5\u5230\u8fbe\u5b83\uff0c\u53ea\u6709\u4ece\u5b83\u81ea\u5df1\u5f00\u59cb\u8d70\u624d\u80fd\u904d\u5386\u5230\u5b83\u672c\u8eab\u3002\u800c\u5176\u4ed6\u5165\u5ea6\u4e0d\u4e3a $0$ \u7684\u70b9\u4e00\u5b9a\u4f1a\u88ab\u5176\u4ed6\u8fb9\u904d\u5386\u5230\u3002\n\n\u7136\u540e\u5206\u6790\u4efb\u52a1 $B$ \uff0c \u81f3\u5c11\u8981\u6dfb\u52a0\u51e0\u6761\u7ebf\u8def\u80fd\u4f7f\u4efb\u610f\u4e00\u6240\u5b66\u6821\u4f5c\u4e3a\u6bcd\u673a\u90fd\u53ef\u4ee5\u4f7f\u522b\u7684\u5b66\u6821\u4f7f\u7528\u4e0a\u8f6f\u4ef6\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u8ba9\u8fd9\u4e2a\u56fe\u6210\u4e3a\u4e00\u4e2a\u5f3a\u8fde\u901a\u56fe\uff0c\u5f88\u663e\u7136\uff0c\u628a $DAG$ \u53d8\u6210\u4e00\u4e2a\u5f3a\u8fde\u901a\u56fe\u6211\u4eec\u53ef\u4ee5\u4ece\u51fa\u5ea6\u4e3a $0$ \u7684\u70b9\u8fde\u63a5\u5230\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\uff0c\u56e0\u4e3a\u51fa\u5ea6\u4e3a $0$ \u7684\u70b9\u8c01\u4e5f\u8bbf\u95ee\u4e0d\u5230\uff0c\u80af\u5b9a\u4e0d\u6ee1\u8db3\u6211\u4eec\u4efb\u52a1 $B$ \u7684\u8981\u6c42\uff0c\u90a3\u4e3a\u4ec0\u4e48\u8fde\u5411\u5165\u5ea6\u4e3a0\u7684\u70b9\u5c31\u662f\u6700\u4f18\u89e3\u5462\uff1f\u56e0\u4e3a\u5165\u5ea6\u4e0d\u4e3a $0$ \u7684\u70b9\u4e00\u5b9a\u53ef\u4ee5\u88ab\u8fd9\u6761\u94fe\u4e0a\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u8bbf\u95ee\u5230\uff0c\u8fde\u63a5\u4e86\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u4e00\u5b9a\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u5230\u8fd9\u4e2a\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u80fd\u8bbf\u95ee\u5230\u7684\u6240\u6709\u70b9\u3002\n\n\u7279\u5224\u5982\u679c\u8fd9\u4e2a\u56fe\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u56fe\u7684\u60c5\u51b5\u3002\n\n\u987a\u4fbf\u63d0\u4e00\u53e5\uff0c\u628a\u5404\u79cd\u56fe\u7684\u6027\u8d28\u80cc\u8fc7\u5e76\u4e14\u7406\u89e3\u5bf9\u4e8e\u63d0\u4f9b\u56fe\u8bba\u9898\u7684\u601d\u8def\u6709\u5f88\u5927\u5e2e\u52a9\u3002\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<stack>\nusing namespace std;\nint dfn[10010],low[10010],vis[10010],color[10010],ru[10010],chu[10010];\nstack<int> s;\nint tot,cnt,n;\nint head[10010];\nstruct node{\n\tint nxt,to;\n}edge[5000010];\nint idx;\nvoid add(int u,int v)\n{\n\tedge[++idx].nxt=head[u];\n\tedge[idx].to=v;\n\thead[u]=idx;\n}\nvoid tarjan(int x)\n{\n\tdfn[x]=low[x]=++cnt;\n\ts.push(x);\n\tvis[x]=1;\n\tfor(int i=head[x];i;i=edge[i].nxt)\n\t{\n\t\tint v=edge[i].to;\n\t\tif(!dfn[v])\n\t\t{\n\t\t\ttarjan(v);\n\t\t\tlow[x]=min(low[x],low[v]);\n\t\t}\n\t\telse if(vis[v])\n\t\t{\n\t\t\tlow[x]=min(low[x],dfn[v]);\n\t\t}\n\t}\n\tif(low[x]==dfn[x])\n\t{\n\t\ttot++;//\u54ea\u79cd\u989c\u8272 \n\t\tint y;\n\t\tdo\n\t\t{\n\t\t\ty=s.top();\n\t\t\ts.pop();\n\t\t\tvis[y]=0;\n\t\t\tcolor[y]=tot;\n\t\t}while(x!=y);\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\twhile(1)\n\t\t{\n\t\t\tint u;\n\t\t\tscanf(\"%d\",&u);\n\t\t\tif(!u)\n\t\t\tbreak;\n\t\t\tadd(i,u);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!dfn[i])\n\t\ttarjan(i);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=head[i];j;j=edge[j].nxt)\n\t\t{\n\t\t\tint v=edge[j].to;\n\t\t\tif(color[i]!=color[v])\n\t\t\t{\n\t\t\t\tru[color[v]]++;\n\t\t\t\tchu[color[i]]++;\n\t\t\t}\n\t\t}\n\t}\n\tint ans1=0,ans2=0;\n\tfor(int i=1;i<=tot;i++)\n\t{\n\t\tif(!ru[i])\n\t\tans1++;\n\t\tif(!chu[i])\n\t\tans2++;\n\t}\n\tif(tot==1)\n\t{\n\t\tcout<<1<<endl<<0;\n\t\treturn 0;\n\t}\n\tcout<<ans1<<endl<<max(ans1,ans2);\n\treturn 0;\n} ",
        "postTime": 1597226114,
        "uid": 250699,
        "name": "Herkaii",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2812 \u3010\u6821\u56ed\u7f51\u7edc\u3010[USACO]Network of Schools\u52a0\u5f3a\u7248\u3011\u3011"
    },
    {
        "content": "\u9898\u610f\u7b80\u8ff0\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u56fe\uff0c\u7b2c\u4e00\u95ee\u6c42\u5728\u8fd9\u91cc\u9762\u9009\u51e0\u4e2a\u70b9\u5c31\u53ef\u4ee5\u4f20\u9012\u4f7f\u6bcf\u4e2a\u70b9\u90fd\u88ab\u6807\u8bb0\uff0c\u7b2c\u4e8c\u95ee\u6c42\u8981\u52a0\u51e0\u6761\u8fb9\u662f\u8fd9\u4e2a\u53d8\u6210\u5f3a\u8fde\u901a\u56fe\u3002\n\n\u601d\u8def\u89e3\u6790\uff1a\u8fd9\u9053\u9898\u7684\u7b2c\u4e00\u95ee\u663e\u7136\u5f88\u5bb9\u6613\uff0c\u5c31\u662f\u5c06\u8fd9\u4e2a\u56fe\u7f29\u70b9\u4e4b\u540e\u627e\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u5c31\u884c\u4e86\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u7684\u6b63\u786e\u6027\u6211\u5c31\u4e0d\u8bc1\u660e\u4e86\uff0c\u56e0\u4e3a\u8fd9\u9053\u9898\u7684\u91cd\u70b9\u5728\u7b2c\u4e8c\u95ee\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u4e00\u4e2a\u56fe\uff0c\u6700\u5c11\u52a0\u51e0\u6761\u8fb9\u80fd\u5c06\u5b83\u53d8\u6210\u5f3a\u8fde\u901a\u56fe\u3002\n\n\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f3a\u8fde\u901a\u56fe\u5fc5\u987b\u6ca1\u6709\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6\u6216\u51fa\u5ea6\u4e3a $0$\uff0c\u8fd9\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u4f46\u662f\u600e\u4e48\u8bc1\u660e\u6ca1\u6709\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6\u6216\u51fa\u5ea6\u4e3a $0$ \u7684\u6709\u5411\u8fde\u901a\u56fe $(DAG)$ \u5c31\u662f\u5f3a\u8fde\u901a\u56fe\u5462\uff1f\u9996\u5148\uff0c\u56e0\u4e3a\u5b83\u662f $DAG$ \u6240\u4ee5\u6211\u6cbf\u7740\u4efb\u610f\u4e00\u4e2a\u7ed3\u70b9\u8d70\uff0c\u5b83\u80fd\u5230\u8fbe\u4efb\u610f\u4e00\u4e2a\u7ed3\u70b9\uff0c\u56e0\u4e3a\u6ca1\u6709\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6\u6216\u51fa\u5ea6\u4e3a $0$,\u6240\u4ee5\u8fd9\u4e2a\u5b9a\u7406\u5f97\u8bc1\u3002\n\n\u6240\u4ee5\u6211\u4eec\u7684\u505a\u6cd5\u5c31\u662f\u5c06\u8fd9\u4e2a\u56fe\u7f29\u70b9\uff0c\u4e4b\u540e\u7b97\u51fa\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u548c\u51fa\u5ea6\uff0c\u7136\u540e\u7b97\u51fa\u5165\u5ea6\u4e3a $0$ \u4ee5\u53ca\u51fa\u5ea6\u4e3a $0$ \u7684\u70b9\u6570\uff0c\u53d6\u4e00\u4e2a $max$ \u5c31\u662f\u4e86\u3002\u6211\u4eec\u7684\u8fde\u8fb9\u65b9\u6cd5\u5c31\u662f\u5c06\u4e00\u4e2a\u51fa\u5ea6\u4e3a $0$ \u7684\u70b9\u8fde\u5411\u4e00\u4e2a\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u5373\u53ef\u3002\u6240\u4ee5\u76f4\u63a5\u662f $max(in,out)$ \u5c31\u662f\u4e86\u3002\n\n\u6b65\u9aa4\uff1a\n\n$1.$ $tarjan$ \u7f29\u70b9\u5e76\u5efa $DAG$\u3002\n\n$2.$ \u7edf\u8ba1\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u548c\u51fa\u5ea6\uff0c\u8bb0\u4e3a $rd$ \u548c $cd$\u3002\n\n$3.$ \u505a\u95ee\u9898 $1$,\u5373\u7edf\u8ba1\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u3002\n\n$4.$ \u505a\u95ee\u9898 $2$,\u5373\u7edf\u8ba1 $max(rd,cd)$\u3002\n\n\u6700\u540e\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int NR=1e4+10;\nconst int MR=5e6+10;\nstruct Edge\n{\n\tint to,next;\n}e[MR],e_[MR];\nint tot=1,tot_=1;\nint rd[NR],cd[NR];\nint head[NR],head_[NR];\nint n,m,s;\nint k,l;\nint dfn[NR],low[NR];\nint flag[NR],stack_[NR];\nint c[NR],d[NR];\nint cnt=0;\ninline int read()\n{\n    int x=0,f=1; char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n    return x*f;\n}\nvoid add(int x,int y)\n{\n\te[tot].to=y;\n\te[tot].next=head[x];\n\thead[x]=tot++;\n}\nvoid add_(int x,int y)\n{\n\te_[tot].to=y;\n\te_[tot].next=head[x];\n\thead_[x]=tot_++;\n}\nvoid tarjan(int x)\n{\n\tdfn[x]=low[x]=++k;\n\tstack_[++l]=x;\n\tflag[x]=1;\n\tfor(int i=head[x];i;i=e[i].next)\n\t{\n\t\tint y=e[i].to;\n\t\tif(!dfn[y])\n\t\t{\n\t\t\ttarjan(y);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t}\n\t\telse if(flag[y])\n\t\t{\n\t\t\tlow[x]=min(low[x],dfn[y]);\n\t\t}\n\t}\n\tif(dfn[x]==low[x])\n\t{\n\t\tint y=-1e9;\n\t\tif(!c[stack_[l]])cnt++;\n\t\twhile(x!=y)\n\t\t{\n\t\t\ty=stack_[l--];\n\t\t\tflag[y]=0;\n\t\t\tif(!c[y])\n\t\t\t{\n\t\t\t\tc[y]=cnt;\n\t\t\t\td[cnt]++;\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n} \nint main()\n{\n\t//freopen(\"1.in\",\"r\",stdin);\n\t//freopen(\"1.out\",\"w\",stdout);\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\twhile(1)\n\t\t{\n\t\t\tint x=read();\n\t\t\tif(x==0) break;\n\t\t\tadd(i,x);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) if(!dfn[i]) tarjan(i);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=head[i];j;j=e[j].next)\n\t\t{\n\t\t\tif(c[i]!=c[e[j].to])\n\t\t\t{\n\t\t\t\tadd_(c[i],c[e[j].to]);\n\t\t\t\trd[c[e[j].to]]++;\n\t\t\t\tcd[c[i]]++;\n\t\t\t}\n\t\t}\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tif(!d[i]) continue;\n\t\tif(rd[i]==0) \n\t\t{\n\t\t\tans++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\tint rd_=0,cd_=0;\n\tint tmp=0;\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tif(!d[i]) continue;\n\t\tif(rd[i]==0) rd_++;\n\t\tif(cd[i]==0) cd_++; \n\t}\n\tif(d[1]==n) \n\t{\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t}\n\tlong long ans_=max(rd_,cd_);\n\tprintf(\"%lld\",ans_);\n\treturn 0;\n}\n```",
        "postTime": 1586777143,
        "uid": 97136,
        "name": "chenzida",
        "ccfLevel": 0,
        "title": "P2812 \u6821\u56ed\u7f51\u7edc\u3010[USACO]Network of Schools\u52a0\u5f3a\u7248\u3011"
    },
    {
        "content": "\u8003\u8651\u7f29\u70b9\u3002  \n\u5bf9\u7f29\u70b9\u540e\u7684\u56fe\uff1a  \n\u4f1a\u53d8\u6210\u5916\u5411\u6811/\u5185\u5411\u6811\u68ee\u6797,\u6216\u8005\u4e00\u5806 DAG\u3002  \n\u5bf9\u4e8e\u5165\u5ea6\u4e3a0\u7684\u70b9\u9700\u8981\u653e\u4e00\u4e2a\u6587\u4ef6\u3002  \n\u5c06\u5165\u5ea6\u4e3a0\u548c\u51fa\u5ea6\u4e3a0\u7684\u70b9\u8fde\u8fb9\u4e3a\u6700\u4f18\u7684\u6784\u5efa\u5f3a\u8fde\u901a\u56fe\u7684\u7b56\u7565\u3002\u5219\u7b2c\u4e8c\u4e2a\u5b50\u95ee\u9898\u7684\u7b54\u6848\u4e3a\u5165\u5ea6\u4e3a0\u4e0e\u51fa\u5ea6\u4e3a0\u7684\u70b9\u6570\u76ee\u7684\u6700\u5927\u503c\u3002  \n\u6ce8\u610f\u7279\u5224\u7f29\u70b9\u540e\u6210\u4e3a\u4e00\u4e2a\u70b9\u7684\u60c5\u51b5\u3002  \n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\nconst int N = 12345, M = 5678901;\n\nint head[N], ver[M], nex[M], my[M], tot, n;\ninline void addedge(int u, int v) {\n\tver[tot] = v; nex[tot] = head[u]; my[tot] = u; head[u] = tot++;\n}\n\nint sta[N], dfn[N], low[N], co[N], top, col = 1, dfs_clock = 1;\nvoid tarjan(int cur) {\n\tdfn[cur] = low[cur] = dfs_clock++;\n\tsta[top++] = cur;\n\tfor(int i = head[cur]; ~i; i = nex[i])\n\tif(!dfn[ver[i]]) {\n\t\ttarjan(ver[i]);\n\t\tlow[cur] = min(low[cur], low[ver[i]]);\n\t} else if(!co[ver[i]]) {\n\t\tlow[cur] = min(low[cur], dfn[ver[i]]);\n\t}\n\tif(dfn[cur] == low[cur]) {\n\t\twhile(sta[--top] != cur)\n\t\t\tco[sta[top]] = col;\n\t\tco[cur] = col++;\n\t}\n}\n\nint ind[N], outd[N];\n\nint main() {\n\tmemset(head, -1, sizeof(head));\n\tint tmp;\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; ++i) {\n\t\twhile(~scanf(\"%d\", &tmp) && tmp)\n\t\t\taddedge(i, tmp);\n\t}\n\tfor(int i = 1; i <= n; ++i) if(!co[i]) tarjan(i);\n\tfor(int i = 0; i < tot; ++i) {\n\t\tif(co[my[i]] != co[ver[i]]) {\n\t\t\t++ind[co[ver[i]]]; ++outd[co[my[i]]];\n\t\t}\n\t}\n\tint id0 = 0, od0 = 0;\n\tfor(int i = 1; i < col; ++i) {\n\t\tif(!ind[i]) ++id0;\n\t\tif(!outd[i]) ++od0;  \n\t}\n\tif(col == 2) {\n\t\tprintf(\"1\\n0\\n\");\n\t} else {\n\t\tprintf(\"%d\\n%d\\n\", id0, max(id0, od0));\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1575738250,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "[\u5f3a\u8fde\u901a\u5206\u91cf]\u9898\u89e3 P2812 \u3010\u6821\u56ed\u7f51\u7edc\u3010[USACO]Network of Schools\u52a0\u5f3a\u7248\u3011\u3011"
    },
    {
        "content": "$tarjan$\u6a21\u677f\u9898\u76ee\u3002\n\n## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u6c42\uff1a\n\n$1.$\u7f29\u70b9\u540e\u5165\u5ea6\u4e3a$0$\u7684\u70b9\u7684\u4e2a\u6570\u3002\n\n$2.$\u7f29\u70b9\u540e\u7684$dag$\u4e0a\uff0c\u6700\u5c11\u52a0\u591a\u5c11\u6761\u8fb9\u4f7f\u5f97\u6574\u4e2a\u56fe\u4e3a\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u3002\n\n## \u601d\u8def\n\n\u95ee\u9898\u4e00\u8fd8\u662f\u6bd4\u8f83\u597d\u5199\u7684\uff0c\u7f29\u70b9\u540e\u7edf\u8ba1\u5373\u53ef\u3002\n\n\u4e3b\u8981\u662f\u95ee\u9898\u4e8c\uff0c\u6211\u4eec\u6765\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\u3002\n\n\u5982\u679c\u8fd9\u4e2a$dag$\u662f\u8fde\u901a\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u901a\u8fc7\u4ece\u51fa\u5ea6\u4e3a\u96f6\u7684\u70b9\u5411\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\u8fde\u8fb9\u6765\u8fbe\u5230\u6574\u4e2a\u56fe\u76f8\u4e92\u8fde\u901a\u3002\n\n\u600e\u4e48\u8fde\uff1f\u4e00\u4e00\u5339\u914d\u5373\u53ef\uff0c\u591a\u7684\u4e5f\u65e0\u59a8\uff0c\u8fde\u5230\u8fde\u5b8c\u7684\u5165\u5ea6/\u51fa\u5ea6\u4e3a\u96f6\u7684\u70b9\u4e5f\u53ef\u4ee5\u3002\n\n\u6211\u4eec\u8bb0\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\u6709$ind$\u4e2a\uff0c\u51fa\u5ea6\u4e3a\u96f6\u7684\u70b9\u4e3a$outd$\u4e2a\n\n\u7b54\u6848\uff1f\u663e\u7136\u662f$max(ind,outd).$\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u8fd9\u4e2a$dag$\u4e0d\u8fde\u901a\u7684\u60c5\u51b5\u3002\n\n\u597d\u50cf\u662f\u548c\u539f\u6765\u7684\u60c5\u51b5\u7c7b\u4f3c\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0a\u4e00\u4e2a\u56fe\u51fa\u5ea6\u4e3a\u96f6\u7684\u70b9\u5411\u4e0b\u4e00\u4e2a\u56fe\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\u8fde\u8fb9\uff0c\u8fde\u901a\u4e4b\u540e\u518d\u91cd\u590d\u4e0a\u9762\u8fde\u901a$dag$\u7684\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u7b54\u6848\uff1f\u597d\u50cf\u8fd8\u662f$max(ind,outd).$\n\n\u4e3a\u4ec0\u4e48\uff1f\u6211\u4eec\u5148\u5047\u8bbe\u8fd9\u4e2a\u8fde\u901a\u7684$dag$\u4e0a\u5165\u5ea6\u548c\u51fa\u5ea6\u4e3a\u96f6\u7684\u70b9\u4e2a\u6570\u76f8\u540c\u3002\n\n\u6211\u4eec\u628a\u5165\u5ea6\u4e3a\u96f6\u548c\u51fa\u5ea6\u4e3a\u96f6\u7684\u70b9\u5bf9\u4e00\u4e00\u5339\u914d\u4e4b\u540e\uff0c\u6211\u4eec\u601d\u8003\u4e0b\u9762\u7684\u8fc7\u7a0b\u3002\n\n\u5bf9\u4e8e\u4e00\u5bf9\u5339\u914d\u7684\u70b9\u5bf9\uff0c\u663e\u7136\u8fd9\u4e24\u4e2a\u70b9\u5bf9\u6784\u6210\u4e86\u4e00\u4e2a\u73af\u3002\n\n\u5f53\u4ece\u51fa\u5ea6\u4e3a\u96f6\u7684\u70b9\u8d70\u5230\u4ed6\u5bf9\u5e94\u7684\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\u65f6\uff0c\u6211\u4eec\u53c8\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\u8d70\u5230\u5176\u5b83\u51fa\u5ea6\u4e3a\u96f6\u7684\u70b9\uff0c\u4ece\u800c\uff0c\u6211\u4eec\u53c8\u53ef\u4ee5\u8d70\u5230\u5176\u5b83\u51fa\u5ea6\u4e3a\u96f6\u7684\u70b9\u5bf9\u5e94\u7684\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\uff0c\u4ece\u800c\uff0c\u6211\u4eec\u5c31\u53ef\u8d70\u5168\u8fd9\u6574\u4e2a$dag$\u4e86\u3002\n\n\u7efc\u4e0a\uff0c\u8fd9\u4e2a\u9898\u76ee\u5c31\u5b8c\u6210\u4e86\u3002\n\n$code:$\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 5000005;\n\nstruct Edge {\n\tint to , nxt;\n}e[N];\n\nint head[N] , cnt;\nvoid add(int u , int v ) {\n\te[++ cnt].to = v;\n\te[cnt].nxt = head[u];\n\thead[u] = cnt;\n}\n\nint tot , dfn[N] , low[N] , top , st[N] , ins[N] , idx;\nint wic[N];\n\nvoid Tarjan(int now) {\n\tdfn[now] = low[now] = ++ idx;\n\tins[now] = 1; st[++ top] = now;\n\tfor(int i = head[now] ; i ; i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tif(!dfn[v]) {\n\t\t\tTarjan(v); low[now] = min(low[now] , low[v]);\n\t\t} else if(ins[v]) low[now] = min(low[now] , dfn[v]);\n\t}\n\tif(low[now] == dfn[now]) {\n\t\tint p;\n\t\ttot ++;\n\t\tdo {\n\t\t\tp = st[top --];\n\t\t\twic[p] = tot;\n\t\t\tins[p] = 0;\n\t\t}while(p != now);\n\t}\n}\n\nint n , ind[N] , outd[N];\nint main () {\n\tscanf(\"%d\" , &n);\n\tfor(int i = 1 ;  i <= n ; ++ i) {\n\t\twhile(true) {\n\t\t\tint x; scanf(\"%d\" , &x);\n\t\t\tif(!x) break; add(i , x);\n\t\t\t//printf(\"add %d -> %d\\n\" , i , x);\n\t\t}\n\t}\n\tfor(int i = 1 ; i <= n ; ++ i) if(!dfn[i]) Tarjan(i);\n\tfor(int i = 1 ; i <= n ; ++ i) {\n\t\tfor(int j = head[i] ; j ; j = e[j].nxt) {\n\t\t\tint v = e[j].to;\n\t\t\tif(wic[v] == wic[i]) continue;\n\t\t\tind[wic[v]] ++;\n\t\t\toutd[wic[i]] ++;\n\t\t}\n\t}\n\tint id = 0, od = 0;\n\tfor(int i = 1 ; i <= tot ; ++ i) {\n\t\tif(!ind[i]) id ++;\n\t\tif(!outd[i]) od ++;\n\t}\n\tif(tot == 1) {\n\t\tprintf(\"1\\n0\"); return 0;\n\t}\n\tprintf(\"%d\\n%d\" , id , max(id , od));\n\treturn 0;\n}\n```\n\n",
        "postTime": 1572341899,
        "uid": 134080,
        "name": "jins3599",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2812 \u3010\u6821\u56ed\u7f51\u7edc\u3010[USACO]Network of Schools\u52a0\u5f3a\u7248\u3011\u3011"
    },
    {
        "content": "### \u9898\u9762\n\n1515\uff1a\u7f51\u7edc\u534f\u8bae\n\n\u65f6\u95f4\u9650\u5236: 1000 ms \u5185\u5b58\u9650\u5236: 10240 KB\n\n\u3010\u9898\u76ee\u63cf\u8ff0\u3011\n\n\u51fa\u81ea IOI 1996\n\n\u4e00\u4e9b\u5b66\u6821\u8fde\u63a5\u5728\u4e00\u4e2a\u8ba1\u7b97\u673a\u7f51\u7edc\u4e0a\u3002\u5b66\u6821\u4e4b\u95f4\u5b58\u5728\u8f6f\u4ef6\u652f\u63f4\u534f\u8bae\u3002\u6bcf\u4e2a\u5b66\u6821\u90fd\u6709\u5b83\u5e94\u652f\u63f4\u7684\u5b66\u6821\u540d\u5355\uff08\u5b66\u6821$a$\u652f\u63f4\u5b66\u6821$b$\uff0c\u5e76\u4e0d\u8868\u793a\u5b66\u6821$b$\u4e00\u5b9a\u652f\u63f4\u5b66\u6821$a$\uff09\u3002\u5f53\u67d0\u6821\u83b7\u5f97\u4e00\u4e2a\u65b0\u8f6f\u4ef6\u65f6\uff0c\u65e0\u8bba\u662f\u76f4\u63a5\u5f97\u5230\u8fd8\u662f\u7f51\u7edc\u5f97\u5230\uff0c\u8be5\u6821\u90fd\u5e94\u7acb\u5373\u5c06\u8fd9\u4e2a\u8f6f\u4ef6\u901a\u8fc7\u7f51\u7edc\u4f20\u9001\u7ed9\u5b83\u5e94\u652f\u63f4\u7684\u5b66\u6821\u3002\u56e0\u6b64\uff0c\u4e00\u4e2a\u65b0\u8f6f\u4ef6\u82e5\u60f3\u8ba9\u6240\u6709\u8fde\u63a5\u5728\u7f51\u7edc\u4e0a\u7684\u5b66\u6821\u90fd\u80fd\u4f7f\u7528\uff0c\u53ea\u9700\u5c06\u5176\u63d0\u4f9b\u7ed9\u4e00\u4e9b\u5b66\u6821\u5373\u53ef\u3002\n\n\u4efb\u52a1\n\n$a$. \u8bf7\u7f16\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u6839\u636e\u5b66\u6821\u95f4\u652f\u63f4\u534f\u8bae\uff08\u5404\u4e2a\u5b66\u6821\u7684\u652f\u63f4\u540d\u5355\uff09\uff0c\u8ba1\u7b97\u6700\u5c11\u9700\u8981\u5c06\u4e00\u4e2a\u65b0\u8f6f\u4ef6\u76f4\u63a5\u63d0\u4f9b\u7ed9\u591a\u5c11\u4e2a\u5b66\u6821\uff0c\u624d\u80fd\u4f7f\u8f6f\u4ef6\u901a\u8fc7\u7f51\u7edc\u88ab\u4f20\u9001\u5230\u6240\u6709\u5b66\u6821\uff1b\n\n$b$. \u5982\u679c\u5141\u8bb8\u5728\u539f\u6709\u652f\u63f4\u534f\u8bae\u4e0a\u6dfb\u52a0\u65b0\u7684\u652f\u63f4\u5173\u7cfb\u3002\u5219\u603b\u53ef\u4ee5\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u534f\u8bae\uff0c\u4f7f\u5f97\u6b64\u65f6\u53ea\u9700\u5c06\u4e00\u4e2a\u65b0\u8f6f\u4ef6\u63d0\u4f9b\u7ed9\u4efb\u4f55\u4e00\u4e2a\u5b66\u6821\uff0c\u5176\u4ed6\u6240\u6709\u5b66\u6821\u5c31\u90fd\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u83b7\u5f97\u8be5\u8f6f\u4ef6\u3002\u7f16\u7a0b\u8ba1\u7b97\u6700\u5c11\u9700\u8981\u6dfb\u52a0\u51e0\u6761\u65b0\u7684\u652f\u63f4\u5173\u7cfb\u3002\n\n\u3010\u8f93\u5165\u3011\n\n\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6b63\u6574\u6570$n$\uff0c\u8868\u793a\u4e0e\u7f51\u7edc\u8fde\u63a5\u7684\u5b66\u6821\u603b\u6570\u3002\u968f\u540e$n$\u884c\u5206\u522b\u8868\u793a\u6bcf\u4e2a\u5b66\u6821\u8981\u652f\u63f4\u7684\u5b66\u6821\uff0c\u5373\uff1a$i+1$\u884c\u8868\u793a\u7b2c$i$\u53f7\u5b66\u6821\u8981\u652f\u63f4\u7684\u6240\u6709\u5b66\u6821\u4ee3\u53f7\uff0c\u6700\u540e$0$\u7ed3\u675f\u3002\n\n\u5982\u679c\u4e00\u4e2a\u5b66\u6821\u4e0d\u652f\u63f4\u4efb\u4f55\u5176\u4ed6\u5b66\u6821\uff0c\u76f8\u5e94\u884c\u5219\u4f1a\u6709\u4e00\u4e2a$0$\u3002\u4e00\u884c\u4e2d\u82e5\u6709\u591a\u4e2a\u6570\u5b57\uff0c\u6570\u5b57\u4e4b\u95f4\u4ee5\u4e00\u4e2a\u7a7a\u683c\u5206\u9694\u3002\n\n\u3010\u8f93\u51fa\u3011\n\n\u5305\u542b\u4e24\u884c\uff0c\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8868\u793a\u4efb\u52a1$a$\u7684\u89e3\uff0c\u7b2c\u4e8c\u884c\u4e5f\u662f\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8868\u793a\u4efb\u52a1$b$\u7684\u89e3\u3002\n\n\u3010\u8f93\u5165\u6837\u4f8b\u3011\n\n5\n\n2 4 3 0\n\n4 5 0\n\n0\n\n0\n\n1 0\n\n\u3010\u8f93\u51fa\u6837\u4f8b\u3011\n\n1\n\n2\n\n\u3010\u63d0\u793a\u3011\n\n\u6570\u636e\u8303\u56f4\u4e0e\u63d0\u793a:\n\n$2\u2264n\u2264100$\u3002\n\n### \u7b97\u6cd5\n\nTarjan\u7f29\u70b9\n\n\u5bf9\u4e8e\u4efb\u52a1$a$\uff0c\u53ef\u4ee5\u53d1\u73b0\u5728\u7f29\u70b9\u4e4b\u540e\u56fe\u53d8\u6210\u4e86\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff0c\u6b64\u65f6\u7edf\u8ba1\u5165\u5ea6\u4e3a$0$\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u3002\u5165\u5ea6\u4e3a$0$\u610f\u5473\u7740\u8be5\u5f3a\u8fde\u901a\u5206\u91cf\u4e0d\u4f1a\u63a5\u53d7\u5230\u5176\u4ed6\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u8f6f\u4ef6\uff0c\u6240\u6709\u9700\u8981\u5c06\u65b0\u8f6f\u4ef6\u63d0\u4f9b\u7ed9\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002\u6240\u6709\u4efb\u52a1$a$\u7684\u7b54\u6848\u5c31\u662f\u7f29\u70b9\u540e\u5165\u5ea6\u4e3a$0$\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf\u3002\n\n\u5bf9\u4e8e\u4efb\u52a1$b$\uff0c\u5728\u7f29\u70b9\u4e4b\u540e\u7684\u56fe\u4e2d\u5982\u679c\u6709\u4e9b\u70b9\u7684\u5165\u5ea6\u4e3a$0$\uff0c\u5219\u82e5\u5c06\u8f6f\u4ef6\u53d1\u9001\u7ed9\u4e0d\u662f\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u7684\u5b66\u6821\u5c31\u65e0\u6cd5\u4f20\u9012\u5230\u8fd9\u4e2a\u5b66\u6821\uff1b\u5982\u679c\u6709\u4e9b\u70b9\u7684\u51fa\u5ea6\u4e3a$0$\uff0c\u5219\u82e5\u5c06\u8f6f\u4ef6\u53d1\u9001\u7ed9\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u7684\u5b66\u6821\uff0c\u5219\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5916\u7684\u5b66\u6821\u65e0\u6cd5\u63a5\u53d7\uff08\u6ce8\u610f\uff0c\u6b64\u5904\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6570\u76ee\u5e94\u5927\u4e8e\u7b49\u4e8e2\uff09\uff0c\u6240\u6709\u5e94\u8be5\u628a\u7f29\u70b9\u540e\u7684\u56fe\u53d8\u6210\u4e00\u4e2a\u4e0d\u5b58\u5728\u5165\u5ea6\u4e3a$0$\u6216\u51fa\u5ea6\u4e3a$0$\u7684\u70b9\u3002\u5982\u679c\u5c06\u4e00\u4e2a\u51fa\u5ea6\u4e3a0\u7684\u70b9\u8fde\u63a5\u4e00\u4e2a\u5165\u5ea6\u4e3a0\u7684\u70b9\uff0c\u5373\u53ef\u5c06\u8fd9\u4e24\u4e2a\u70b9\u7684\u51fa\uff08\u5165\uff09\u5ea6\u589e\u52a0\u3002\u7136\u800c\u4e00\u6b21\u589e\u52a0\u8fb9\u6700\u591a\u53ea\u80fd\u4f7f\u5165\u5ea6\u4e3a0\u7684\u70b9\u51cf\u5c111\u548c\u51fa\u5ea6\u4e3a0\u7684\u70b9\u51cf\u5c111\uff0c\u5219\u9700\u8981\u589e\u52a0\u5165\u5ea6\u4e3a0\u7684\u70b9\u7684\u6570\u91cf\u548c\u51fa\u5ea6\u4e3a0\u7684\u70b9\u7684\u6570\u91cf\u7684\u6700\u5927\u503c\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<stack>\n#define mini(a,b) ((a)<(b)?(a):(b))\nconst unsigned short int N=10005;\nconst unsigned int M=5000005;\nunsigned short int n;\nstruct node\n{\n\tunsigned short int to;\n\tunsigned int next;\n}edge[M];\nunsigned int cnt,head[N];\ninline void add(unsigned short int u,unsigned short int v)\n{\n\tcnt++;\n\tedge[cnt].to=v;\n\tedge[cnt].next=head[u];\n\thead[u]=cnt;\n}//\u94fe\u5f0f\u524d\u5411\u5fc3\u5b58\u56fe\u3001\u5efa\u8fb9\nunsigned short int dfn[N],low[N],step,num,col[N],sum[N];\nstd::stack<unsigned short int> s;//Tarjan\u6570\u7ec4\nvoid tarjan(unsigned short int i)\n{\n\tstep++;\n\tdfn[i]=step;\n\tlow[i]=step;\n\ts.push(i);\n\tfor(unsigned int j=head[i];j!=0;j=edge[j].next)\n\t{\n\t\tunsigned short int k=edge[j].to;\n\t\tif(dfn[k]==0)\n\t\t{\n\t\t\ttarjan(k);\n\t\t\tlow[i]=mini(low[k],low[i]);\n\t\t}\n\t\telse if(col[k]==0)\n\t\t{\n\t\t\tlow[i]=mini(dfn[k],low[i]);\n\t\t}\n\t}\n\tif(low[i]==dfn[i])\n\t{\n\t\tnum++;\n\t\tcol[i]=num;\n\t\tsum[num]++;\n\t\twhile(s.top()!=i)\n\t\t{\n\t\t\tsum[num]++;\n\t\t\tcol[s.top()]=num;\n\t\t\ts.pop();\n\t\t}\n\t\ts.pop();\n\t}\n}//Tarjan\u7b97\u6cd5\u7f29\u70b9\nunsigned short int dui[N],duo[N],ans1,ans2;\nint main()\n{\n\tscanf(\"%hu\",&n);\n\tunsigned short int d;\n\tfor(register unsigned short int i=1;i<=n;i++)\n\t{\n\t\twhile(true)\n\t\t{\n\t\t\tscanf(\"%hu\",&d);\n\t\t\tif(d==0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tadd(i,d);\n\t\t}\n\t}//\u8bfb\u5165\u3001\u5efa\u8fb9\n\tfor(register unsigned short int i=1;i<=n;i++)\n\t{\n\t\tif(dfn[i]==0)\n\t\t{\n\t\t\ttarjan(i);\n\t\t}\n\t}//Tarjan\n\tfor(register unsigned short int i=1;i<=n;i++)\n\t{\n\t\tfor(register unsigned int j=head[i];j!=0;j=edge[j].next)\n\t\t{\n\t\t\tif(col[i]!=col[edge[j].to])\n\t\t\t{\n\t\t\t\tdui[col[edge[j].to]]++;\n\t\t\t\tduo[col[i]]++;\n\t\t\t}\n\t\t}\n\t}//\u7edf\u8ba1\u5165\u5ea6\u3001\u51fa\u5ea6\n\tfor(register unsigned short int i=1;i<=num;i++)\n\t{\n\t\tif(dui[i]==0)\n\t\t{\n\t\t\tans1++;\n\t\t}\n\t\tif(duo[i]==0)\n\t\t{\n\t\t\tans2++;\n\t\t}\n\t}//\u7edf\u8ba1\u7b54\u6848\n\tif(num==1)\n\t{\n\t\tans2=0;\n\t}//\u7279\u5224\uff1a\u5f53\u5168\u56fe\u4e3a\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u65f6\uff0c\u4efb\u52a1b\u7684\u7b54\u6848\u4e3a0\uff08\u539f\u6765\u7b97\u51fa\u6765\u7684\u4e3a1\uff09\n\telse\n\t{\n\t\tans2=((ans2)>(ans1)?(ans2):(ans1));\n\t}//\u53d6\u5927\u503c\n\tprintf(\"%hu\\n%hu\",ans1,ans2);\n\treturn 0;\n}\n```\n\n#### \u8fd0\u884c\u7ed3\u679c\n\n\u4e00\u672c\u901aOJ\uff1a\uff08\u539f\u59cb\u6570\u636e\uff09\n\n1515\n\n\u901a\u8fc7 100\u5206\n\n\u6d4b\u8bd5\u70b91: \u7b54\u6848\u6b63\u786e 432KB 6MS \n\n\u6d4b\u8bd5\u70b92: \u7b54\u6848\u6b63\u786e 432KB 5MS \n\n\u6d4b\u8bd5\u70b93: \u7b54\u6848\u6b63\u786e 428KB 6MS \n\n\u6d4b\u8bd5\u70b94: \u7b54\u6848\u6b63\u786e 424KB 5MS \n\n\u6d4b\u8bd5\u70b95: \u7b54\u6848\u6b63\u786e 424KB 6MS \n\n\u6d4b\u8bd5\u70b96: \u7b54\u6848\u6b63\u786e 428KB 5MS \n\n\u6d4b\u8bd5\u70b97: \u7b54\u6848\u6b63\u786e 424KB 6MS \n\n\u6d4b\u8bd5\u70b98: \u7b54\u6848\u6b63\u786e 424KB 5MS \n\n\u6d4b\u8bd5\u70b99: \u7b54\u6848\u6b63\u786e 432KB 6MS \n\n\u6d4b\u8bd5\u70b910: \u7b54\u6848\u6b63\u786e 420KB 5MS \n\n\u6d4b\u8bd5\u70b911: \u7b54\u6848\u6b63\u786e 440KB 6MS \n\n\u6d1b\u8c37\uff1a\n\n\uff08\u539f\u59cb\u6570\u636e\uff09\n\n\u7528\u65f6 30ms \u5185\u5b58 820.00KB\n\n\u6d4b\u8bd5\u70b9\u4fe1\u606f\n\n3ms/764.00KB \nAC #1\n\n3ms/524.00KB \nAC #2\n\n2ms/508.00KB \nAC #3\n\n3ms/788.00KB \nAC #4\n\n2ms/676.00KB \nAC #5\n\n3ms/628.00KB \nAC #6\n\n3ms/672.00KB \nAC #7\n\n2ms/644.00KB \nAC #8\n\n3ms/820.00KB \nAC #9\n\n3ms/660.00KB \nAC #10\n\n3ms/692.00KB \nAC #11\n\n\uff08\u589e\u5f3a\u7248\uff09\n\n\u7528\u65f6 39ms \u5185\u5b58 1.12MB\n\n\u6d4b\u8bd5\u70b9\u4fe1\u606f\n\n3ms/676.00KB \nAC #1\n\n13ms/1.12MB \nAC #2\n\n2ms/768.00KB \nAC #3\n\n2ms/524.00KB \nAC #4\n\n3ms/808.00KB \nAC #5\n\n2ms/648.00KB \nAC #6\n\n2ms/676.00KB \nAC #7\n\n4ms/804.00KB \nAC #8\n\n3ms/800.00KB \nAC #9\n\n5ms/1.02MB \nAC #10",
        "postTime": 1566208417,
        "uid": 158626,
        "name": "lzcjoe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2746 & P2812 \u3010[USACO5.3]\u6821\u56ed\u7f51Network of Schools / \u52a0\u5f3a\u7248 \u4e00\u672c\u901a\u63d0\u9ad8\u7bc7 3.5.1 1515 \u7f51\u7edc\u534f\u8bae"
    },
    {
        "content": "## Tarjan\u7f29\u70b9\u7684\u597d\u9898\uff0c\u9002\u5408Tarjan\u521d\u5b66\u8005\n\n\u9898\u76ee\u5927\u610f\u4e3a\u7ed9\u4f60\u4e00\u5f20\u56fe\uff0c\u8ba9\u4f60\u5224\u65ad\u81f3\u5c11\u901a\u8fc7\u51e0\u4e2a\u70b9\u624d\u80fd\u904d\u5386\u6574\u5f20\u56fe\uff0c\u4ee5\u53ca\u81f3\u5c11\u9700\u8981\u52a0\u51e0\u6761\u8fb9\u624d\u80fd\u4f7f\u6574\u5f20\u56fe\u53d8\u6210\u4e00\u4e2a\u5927\u73af\n\n\n\u7b2c\u4e00\u95ee\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7taijan\u7f29\u70b9\u4f7f\u5176\u4e0d\u5b58\u5728\u73af\uff08\u7f29\u70b9\u4e4b\u540e\u7684\u6bcf\u4e2a\u70b9\u4e00\u5b9a\u662f\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe\u7684\uff09\uff0c\u7136\u540e\u7edf\u8ba1\u5165\u5ea6\u4e3a0\u7684\u70b9\u5c31\u53ef\u4ee5\u4e86\n\n\u90a3\u4e48\u7b2c\u4e8c\u95ee\u561e\uff1f\n\n\u6211\u5728\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019\u770b\u5230\u7b2c\u4e8c\u95ee\u61f5\u4e86\u534a\u5929\u3002\n\n### \u9996\u5148\u6211\u4eec\u8981\u4e86\u89e3\u56fe\u7684\u4e00\u4e2a\u91cd\u8981\u6027\u8d28\uff1a\u5bf9\u4e8e\u4e00\u5f20\u4e0d\u5b58\u5728\u73af\u7684\u56fe\uff0c\u5fc5\u7136\u5b58\u5728\u5165\u5ea6\u4e3a0\u548c\u521d\u5ea6\u4e3a0\u7684\u70b9\u3002\n\u6240\u4ee5\u53ef\u4ee5\u6211\u4eec\u7edf\u8ba1\u7f29\u70b9\u540e\u5165\u5ea6\u4e3a0\u548c\u521d\u5ea6\u4e3a0\u7684\u70b9\uff0c\u4ece\u51fa\u5ea6\u4e3a0\u7684\u5230\u5165\u5ea6\u4e3a0\u7684\u70b9\u8fde\u4e00\u6761\u8fb9\n\n\u5f53\u5165\u5ea6>\u51fa\u5ea6 \u663e\u7136\u6211\u4eec\u9700\u8981\u591a\u8fde\uff08\u5165\u5ea6-\u521d\u5ea6\uff09\u6761\u8fb9\n\n\u5f53\u5165\u5ea6<\u521d\u5ea6 \u6211\u4eec\u9700\u8981\u591a\u8fde\uff08\u521d\u5ea6-\u5165\u5ea6\uff09\u6761\u8fb9\n\n### \u90a3\u4e48\u7b2c\u4e8c\u95ee\u7684\u7b54\u6848\u6211\u4eec\u5c31\u53ef\u4ee5\u63a8\u51fa\u6765\u4e86max\uff08\u5165\u5ea6\u4e3a0\u70b9\u7684\u4e2a\u6570\uff0c\u521d\u5ea6\u4e3a0\u70b9\u7684\u4e2a\u6570\uff09\n\n\u90a3\u4e48\u4ee3\u7801\u5c31\u5341\u5206\u7b80\u5355\u4e86\uff0c\u8dd1\u4e2a\u88f8tarjan\uff0c\u7edf\u8ba1\u5165\u5ea6\u548c\u51fa\u5ea6\u4e3a0\u7684\u70b9\u5c31\u53ef\u4ee5\u5566\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<stack>\n#include<cstring>\n#define ss 5005000 \nusing namespace std;\ninline int read(){\n\tint x(0),f(1);char c(getchar());\n\tfor(;!isdigit(c);c=getchar()) c=='-'?f=-1:1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0';\n\treturn x*f;\n}\n\nstruct oo{\n   int next,to;\n}e[ss*4];\nint head[ss],cnt(0),cnt2(0),fr[ss],to[ss],X[ss],Y[ss],col(0),co[ss],dfn[ss],low[ss],num(0);\nstack <int >q;\n\ninline void add(int x,int y){\n\te[++cnt].to=y;\n\te[cnt].next=head[x];\n\thead[x]=cnt;\n}\n\ninline void Tarjan(int x){//\u6807\u51c6Tarjan\u7f29\u70b9 \n\tdfn[x]=low[x]=++num;\n\tq.push(x);\n\tint u=(x);\n\tfor(register int i=head[x];i;i=e[i].next){\n\t\tint y=e[i].to;\n\t\tif(!dfn[y]) {\n\t\t   Tarjan(y);\n\t\tlow[x]=min(low[x],low[y]);\n\t    }\n\t    else if(!co[y]){\n\t    \tlow[x]=min(low[x],dfn[y]);\n\t\t}\n\t}\n\tif(low[x]==dfn[x]){\n\t\tco[x]=++col;\n\t\twhile(q.top()!=x){\n\t\t\tint po=q.top();\n\t\t\tq.pop();\n\t\t\tco[po]=col;\n\t\t}\n\t\tq.pop();\n\t}\n}\n\ninline void clean(){\n\tmemset(head,0,sizeof(head));\n\tcnt=0;\n}\nmain(){\n    int n=read();\n\tfor(register int i=1;i<=n;i++){\n\t\tint x=read();\n\t\twhile(x){\n\t\t\tadd(i,x);\t\n\t\t\tX[++cnt2]=i;\n\t\t    Y[cnt2]=x;//\u7528\u6570\u7ec4\u5b58\u4e00\u4e0b\u5165\u5ea6\u548c\u51fa\u5ea6\u597d\u7edf\u8ba1 \n\t\t\tx=read();\n\t\t\n\t\t}\n\t\t\n\t}\n\tfor(register  int i=1;i<=n;i++){\n\t\tif(!dfn[i]) Tarjan(i);\n\t}\n//\tclean();add(x,y);\n//(\u6253\u5230\u8fd9\u4e2a\u5730\u65b9\u7684\u65f6\u5019\u6211\u8fd8\u60f3\u7f29\u70b9\u4e4b\u540e\u91cd\u5efa\u4e00\u6b21\u8fb9\uff0c\u540e\u6765\u53d1\u73b0\u6839\u672c\u4e0d\u9700\u8981\uff0c\u6211\u8fd8\u662f\u592a\u7bdb\u4e86 \n\tfor(register int i=1;i<=cnt2;i++){\n\t\tint x=co[X[i]],y=co[Y[i]];\n\t//\tprintf(\"%d %d %d %d\\n\",X[i],co[X[i]],Y[i],co[Y[i]]); \n\t\tif(x==y) continue;\n\t\tfr[x]++;to[y]++;\n\t}\n\tint ans1(0),ans2(0);\n\tfor(register int i=1;i<=col;i++){\n\t\tif(!fr[i]) ans1++;\n\t\tif(!to[i]) ans2++;\n\t}\n\tprintf(\"%d\\n%d\",ans2,col==1?0:max(ans1,ans2));//\u56e0\u4e3a\u5f53\u53ea\u6709\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u4e0d\u9700\u8981\u518d\u6dfb\u52a0\u6bcd\u9e21\uff0c\u6240\u4ee5\u8981\u7279\u5224\u4e00\u4e0b \n}//\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5207\u6389\u6ca1\u6709\u5f3a\u5316\u8fc7\u6570\u636e\u7684\u6821\u56ed\u7f51\u7edc\u83b7\u5f97\u53cc\u500d\u5feb\u4e50\u5566 \n```\n",
        "postTime": 1564576810,
        "uid": 124591,
        "name": "\u7d2b\u85af\u5e03\u4e01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2812 \u3010\u6821\u56ed\u7f51\u7edc\u3010[USACO]Network of Schools\u52a0\u5f3a\u7248\u3011\u3011"
    },
    {
        "content": "\u6765\u79d2\u4e00\u53d1\u9898\u89e3\uff0c\u5728\u505aUSACO\u7684\u65f6\u5019\u987a\u5e26\u628a\u8fd9\u9053\u9898\u505a\u4e86\uff0c\u6211\u4eec\u7528tarjan\u7f29\u597d\u70b9\u540e\uff0c\u4e4b\u540e\u7684\u56fe\u6211\u4eec\u770b\u5176\u4e2d\u7684\u70b9\u6570\uff0c\u5c31\u662f\u7b2c\u4e00\u95ee\u7684\u7b54\u6848\uff0c\u7b2c\u4e8c\u95ee\u5c31\u662f\u697c\u4e0b\u8bb2\u7684INDEGREE\u548cOUTDEGREE\u7684max\u5c31\u597d\u4e86\n\n/*************************************************************************\n\n    > Author: Drinkwater-cnyali\n    > Created Time: 2017/5/16 20:16:50\n************************************************************************/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<vector>\nusing namespace std;\ntypedef long long LL;\n#define REP(i, a, b) for(register int i = (a), i##_end_ = (b); i <= i##_end_; ++ i)\n#define DREP(i, a, b) for(register int i = (a), i##_end_ = (b); i >= i##_end_; -- i)\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define mem(a, b) memset((a), b, sizeof(a))\ntemplate<typename T> inline bool chkmin(T &a, const T &b) { return a > b ? a = b, 1 : 0; }\ntemplate<typename T> inline bool chkmax(T &a, const T &b) { return a < b ? a = b, 1 : 0; }\nint read()\n{\n    int sum = 0, fg = 1; char c = getchar();\n    while(c < '0' || c > '9') { if (c == '-') fg = -1; c = getchar(); }\n    while(c >= '0' && c <= '9') { sum = sum * 10 + c - '0'; c = getchar(); }\n    return sum * fg;\n}\nconst int maxn = 100000;\nconst int inf = 0x3f3f3f3f;\nint n;\nint be[maxn],ne[maxn],to[maxn],e;\nvoid add(int x,int y)\n{\n    to[++e] = y;\n    ne[e] = be[x];\n    be[x] = e;\n}\nint vis[maxn];\nint tid[maxn],low[maxn],cnt,col[maxn],stack[maxn],top,num[maxn],ff,p[maxn];\nvoid tarjan(int x)\n{\n    low[x] = tid[x] = ++cnt;\n    vis[x] = 1;stack[++top] = x;\n    for(int i = be[x]; i; i = ne[i])\n    {\n        int v = to[i];\n        if(!vis[v])\n        {\n            tarjan(v);\n            low[x] = min(low[x],low[v]);\n        }\n        else if(vis[v])low[x] = min(low[x],tid[v]);\n    }\n    if(tid[x] == low[x])\n    {\n        vis[x] = 0;col[x] = x;\n        do\n        {\n            col[stack[top]] = x;\n            vis[stack[top]] = 0;\n            top--;\n        }while(stack[top+1]!=x);\n    }\n}\nint In[maxn],Out[maxn];\nvoid find(int x)\n{\n    vis[x] = 1;\n    for(int i = be[x]; i ;i = ne[i])\n    {\n        int v = to[i];\n        if(!vis[v] && col[v]!=x)\n        {\n            In[v]++,Out[x]++;\n            find(v);\n        }\n    }\n}\nint main()\n{\n    n = read();\n    REP(i,1,n)\n    {\n        int x;\n        while(scanf(\"%d\",&x)&&x)\n            add(i,x);\n    }\n    int ans1 = 0;\n/*    REP(i,1,n)\n    {\n        if(!vis[i])\n            ans1++,dfs(i);\n    }\n    memset(vis,0,sizeof(vis));*/\n    REP(i,1,n)\n        if(!tid[i])\n        {\n            tarjan(i);\n        }\n    REP(i,1,n)if(!p[col[i]])p[col[i]] = 1,num[++ff] = col[i];\n    int cnt1 = 0,cnt2 = 0;\n    REP(i,1,n)\n    {\n        for(int j = be[i]; j; j = ne[j])\n        {\n            int v = to[j];\n            if(col[i]!=col[v])++In[col[v]],++Out[col[i]];\n        }\n    }\n    REP(i,1,ff)\n    {\n        if(In[num[i]] == 0)cnt1++;\n        if(Out[num[i]] == 0)cnt2++;\n    }\n    if(ff == 1){puts(\"1\");puts(\"0\");return 0;}\n    int ans2 = max(cnt1,cnt2);\n    cout<<cnt1<<endl<<ans2<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1494942466,
        "uid": 19645,
        "name": "Drinkwater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2812 \u3010\u6821\u56ed\u7f51\u7edc\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684wiki\u7f16\u53f7\u662f1999\uff0c\u90a3\u4e48\u8fd9\u91cc\u7684\u7b2c\u4e00\u4e2a\u9898\u89e3\u5c31\u975e\u6211\u83ab\u5c5e\u4e86~~\u4f5c\u4e3a\u9898\u76ee\u8d21\u732e\u8005\u53d1\u73b0\u6ca1\u4eba\u505a\u8fd9\u4e00\u9898\u6709\u70b9\u90c1\u95f7\uff0c\u8bdd\u8bf4\u53d1\u9898\u89e3\u80fd\u4e0d\u80fd\u628a\u8fd9\u4e00\u9898\u9876\u4e0a\u53bb\uff1f\u4f60\u5f53\u662f\u8d34\u5427\u554a\u5582~~\n\n\u8fd9\u9898\u7684\u539f\u5f62\u662fPOJ\u7684\u4e00\u9053\u5f3a\u8fde\u901a\uff0c\u800c\u4e14\u6570\u636e\u5f02\u5e38\u6c34\uff08n<=100\uff09\uff0c\u6240\u4ee5\u6211\u5c31\u51b3\u5b9a\u6765\u70b9\u731b\u7684\u76f4\u63a5\u6269\u5927100\u500d\u3002\u53cd\u6b63\u975e\u66b4\u529b\u7684\u6b63\u89e3\u90fd\u4e0d\u865a\u8fd9\u4e48\u70b9\u6570\u636e\u3002\n\n\u9898\u610f\u5f88\u660e\u663e\uff0c\u9996\u5148\u6211\u4eec\u5c06\u56fe\u5f3a\u8fde\u901a\u5206\u89e3\uff0c\u5f97\u5230\u6bcf\u4e2a\u70b9\u7684\u5f3a\u8fde\u901a\u7f16\u53f7\uff0c\u7f29\u70b9\uff0c\u7136\u540e\u6211\u4eec\u5904\u7406\u7f29\u70b9\u540e\u6bcf\u4e2a\u70b9\u7684in\\_degree\u548cout\\_degree\u3002\n\n\u7b2c\u4e00\u95ee\u5f88\u660e\u663e\u662f\u8ba9\u6211\u4eec\u6c42\u51fain\\_degree\u4e3a0\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf\uff0c\u7b2c\u4e8c\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\uff0c\u6700\u591a\u53ea\u9700\u8981max(in\\_degree==0\u7684\u6570\u91cf\uff0cout\\_degree==0\u7684\u6570\u91cf\uff09\u3002\n\n---------------------------------------------------------------------------------------------------------------------------------------\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <vector>\n#include <cmath>\n#include <stack>\n```\n----------------------------------------------------------------------------------------------------------------------------------------\nusing namespace std;\n\n----------------------------------------------------------------------------------------------------------------------------------------\n\nconst int maxn=10000+5;\n\n----------------------------------------------------------------------------------------------------------------------------------------\n\n```cpp\nvector<int>G[maxn];\nstack<int>s;\nint n,Index=0,cnt=0,cmp[maxn],low[maxn],dfn[maxn];\nbool ins[maxn];\n```\n---------------------------------------------------------------------------------------------------------------------------------------\n\n\n```cpp\nvoid add_edge(int u,int v){\n    G[u].push_back(v);\n    return;\n}\nvoid init(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        int u=i;int v;\n        while(1){\n            scanf(\"%d\",&v);\n            if(v==0) break;\n            add_edge(u,v);\n        }\n    }\n    return;\n}\nvoid tarjan(int u){\n    dfn[u]=low[u]=++Index;\n    ins[u]=true;\n    s.push(u);\n    for(int i=0;i<G[u].size();i++){\n        int v=G[u][i];\n        if(!dfn[v]){\n            tarjan(v);\n            low[u]=min(low[u],low[v]);\n        }\n        else{\n            if(ins[v]){\n                low[u]=min(dfn[v],low[u]);\n            }\n        }\n    }\n    if(low[u]==dfn[u]){\n        cnt++;\n        int i;\n        do{\n            i=s.top();\n            s.pop();\n            ins[i]=false;\n            cmp[i]=cnt;\n        }while(i!=u);\n    }\n    return;\n}\nvoid scc(){\n    memset(ins,false,sizeof(ins));\n    memset(low,0,sizeof(low));\n    memset(dfn,0,sizeof(dfn));\n    for(int i=1;i<=n;i++)\n        if(!dfn[i]) tarjan(i);\n    return;\n}\nvoid calc(){\n    if(cnt==1){\n        printf(\"1\\n\");\n        printf(\"0\\n\");\n        return;\n    }\n    int in_num[maxn],out_num[maxn],ans1=0,ans2=0;\n    memset(in_num,0,sizeof(in_num));\n    memset(out_num,0,sizeof(out_num));\n    for(int u=1;u<=n;u++){\n        for(int i=0;i<G[u].size();i++){\n            int v=G[u][i];\n            if(cmp[u]!=cmp[v]){\n                in_num[cmp[v]]++;\n                out_num[cmp[u]]++;\n            }\n        }\n    }\n    for(int i=1;i<=cnt;i++){\n        if(in_num[i]==0) ans1++;\n        else if(out_num[i]==0) ans2++;\n    }\n    ans2=max(ans2,ans1);\n    printf(\"%d\\n%d\",ans1,ans2);\n    return;\n}\nvoid solve(){\n    scc();\n    calc();\n    return;\n}\nint main(){\n    init();\n    solve();\n    return 0;\n}\n```",
        "postTime": 1471061641,
        "uid": 8874,
        "name": "Kwork",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2812 \u3010\u6821\u56ed\u7f51\u7edc\u3011"
    }
]