[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u5199\u4e00\u4e2a\u7a0b\u5e8f\u6e38\u73a9 Wordle \u6e38\u620f\uff1a\u5728\u4e94\u6b21\u5185\u731c\u51fa\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5355\u8bcd\u3002\u5355\u8bcd\u7ed9\u5b9a\u9996\u5b57\u6bcd\uff0c\u6bcf\u6b21\u731c\u6d4b\u540e\uff0c\u4ea4\u4e92\u5e93\u4f1a\u53cd\u9988\u6bcf\u4e2a\u4f4d\u7f6e\u662f\u300c\u5b57\u6bcd\u4e14\u4f4d\u7f6e\u6b63\u786e\u300d\u300c\u5b57\u6bcd\u6b63\u786e\u4f46\u4f4d\u7f6e\u9519\u8bef\u300d\u300c\u5b8c\u5168\u9519\u8bef\u300d\u4e2d\u7684\u54ea\u4e00\u79cd\u3002\n\n## \u89e3\u9898\u601d\u8def\n\n\u9996\u5148\uff0c\u6709\u4e00\u4e2a\u663e\u7136\u7684\u4e71\u641e\uff1a\u6bcf\u6b21\u4ece\u5355\u8bcd\u5e93\u91cc\u968f\u673a\u4e00\u4e2a\u5355\u8bcd\u8f93\u51fa\uff0c\u7136\u540e\u6392\u9664\u6389\u4e0e\u5df2\u77e5\u6761\u4ef6\u4e0d\u76f8\u7b26\u7684\u5355\u8bcd\u3002\u91cd\u590d\u8fd9\u4e2a\u6b65\u9aa4\uff0c\u77e5\u9053\u53ea\u5269\u4e0b\u4e00\u4e2a\u5355\u8bcd\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u4e71\u641e\u5e76\u4e0d\u4f18\u79c0\uff0c\u4f46\u662f\u5728\u6b64\u9898\u7684\u8bc4\u5206\u6807\u51c6\u4e0b\uff0c\u5b83\u80fd\u5f97\u5230\u5927\u6982 80pt \u7684\u6210\u7ee9\u3002\n\n\u8003\u8651\u4f18\u5316\u8fd9\u4e2a\u4e71\u641e\uff0c\u6bcf\u6b21\u8f93\u51fa\u5355\u8bcd\u65f6\uff0c\u4e0d\u8981\u968f\u673a\u8f93\u51fa\uff0c\u800c\u662f\u5bf9\u6bcf\u4e2a\u5355\u8bcd\u8fdb\u884c\u4f30\u4ef7\uff0c\u9009\u62e9\u4e00\u4e2a\u4ef7\u503c\u6700\u9ad8\u7684\u5355\u8bcd\u8f93\u51fa\u3002\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u6bcf\u4e2a\u5355\u8bcd\u7684\u4ef7\u503c\u4e3a\u8be5\u5355\u8bcd\u7684\u4fe1\u606f\u91cf\uff0c\u7528\u4fe1\u606f\u71b5\u6765\u8868\u793a\u8fd9\u4e2a\u5355\u8bcd\u4f1a\u5e26\u6765\u7684\u4fe1\u606f\u91cf\uff0c\u5373\uff1a\n\n$$\nE(\\text{word}) = \\sum_{x \\in \\text{\u731c\u6d4b\u8be5\u5355\u8bcd\u540e\u51fa\u73b0\u7684 $3^5$ \u79cd\u7ed3\u679c}} p(x)\\log_2(\\frac 1 {p(x)})\n$$\n\n\u4f46\u662f\u8fd9\u6837\u505a\u4f1a\u5f15\u8d77\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u9ad8\uff1a\u6bcf\u6b21\u731c\u4e00\u4e2a\u65b0\u5355\u8bcd\u65f6\uff0c\u6211\u4eec\u8981\u5bf9 $n$\u00a0\u4e2a\u5355\u8bcd\u8fdb\u884c\u4f30\u4ef7\uff0c\u4f30\u4ef7\u4e00\u4e2a\u5355\u8bcd\u4e3a $O(n)$\uff0c\u8fd9\u6837\u7684\u8bdd\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u53d8\u6210 $O(Tn^2)$\uff0c\u5c3d\u7ba1\u6b64\u9898\u6709 60s \u7684\u65f6\u95f4\u9650\u5236\uff0c\u4ecd\u7136\u65e0\u6cd5\u901a\u8fc7\u3002\u8003\u8651\u9884\u5904\u7406\u51fa\u9996\u5b57\u6bcd\u5206\u522b\u4e3a $\\tt a \\sim z$ \u65f6\u9009\u62e9\u4ec0\u4e48\u5355\u8bcd\u8fdb\u884c\u731c\u6d4b\u6700\u4f18\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u907f\u514d\u7b2c\u4e00\u6b21\u731c\u6d4b\u65f6\u679a\u4e3e\u5168\u90e8\u5355\u8bcd\u4f30\u4ef7\u800c\u9020\u6210\u8d85\u65f6\u3002\n\n\u8be5\u4f18\u5316\u4f5c\u7528\u6bd4\u6bd4\u8f83\u660e\u663e\uff0c\u5e73\u5747\u6bcf\u4e2a\u8bcd\u6240\u7528\u6b21\u6570\u51cf\u5c11\u4e86\u7ea6 $0.5$\uff0c\u4f46\u662f\u4ecd\u7136\u6709\u5c11\u91cf\u5355\u8bcd\u65e0\u6cd5\u5728\u89c4\u5b9a\u6b21\u6570\u5185\u731c\u51fa\u3002\n\n\u8003\u8651\u8fd9\u6837\u4e00\u79cd\u60c5\u51b5\uff1a\u5047\u8bbe\u6b63\u786e\u7b54\u6848\u4e3a VAIL\uff0c\u7a0b\u5e8f\u53ef\u80fd\u4f9d\u6b21\u731c\u6d4b JAIL\u3001FAIL\u3001BAIL\u3001HAIL \u7b49\uff0c\u800c\u6bcf\u6b21\u731c\u6d4b\u8fd4\u56de\u7684\u7ed3\u679c\u90fd\u4e3a `-GGG`\uff0c\u6211\u4eec\u7684\u7a0b\u5e8f\u4f1a\u5728\u731c\u6d4b\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u4e0a\u7528\u6389\u5927\u91cf\u4ea4\u4e92\u6b21\u6570\u3002\u800c\u4e00\u4e2a\u6bd4\u8f83\u4f18\u79c0\u7684\u7a0b\u5e8f\u4f1a\u5728\u786e\u5b9a\u4e09\u4e2a\u5b57\u6bcd\u65f6\uff0c\u8f6c\u800c\u6784\u9020\u4e00\u4e2a\u5305\u542b\u5c3d\u91cf\u591a J\u3001F\u3001B\u3001H\u3001V \u7b49\u53ef\u80fd\u4e3a\u9996\u5b57\u6bcd\u7684\u5355\u8bcd\uff0c\u4ece\u800c\u4e00\u6b21\u6392\u9664\u591a\u4e2a\u53ef\u80fd\u7684\u9996\u5b57\u6bcd\u3002\u8003\u8651\u4f18\u5316\u7a0b\u5e8f\uff0c\u8ba9\u5176\u53ef\u4ee5\u9009\u62e9\u300c\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\u7684\u5355\u8bcd\u300d\u4e4b\u5916\u7684\u5355\u8bcd\u3002\u91cd\u65b0\u8bbe\u8ba1\u4f30\u4ef7\u51fd\u6570\uff1a\n\n$$\nE(\\text{word}) = [\\text{\u8be5\u5355\u8bcd\u662f\u5426\u53ef\u80fd\u6210\u4e3a\u6700\u7ec8\u7b54\u6848}]\\cdot \\varepsilon + \\sum_{x \\in \\text{\u731c\u6d4b\u8be5\u5355\u8bcd\u540e\u51fa\u73b0\u7684 $3^5$ \u79cd\u7ed3\u679c}} p(x)\\log_2(\\frac 1 {p(x)})\n$$\n\n\u5b9a\u4e49 $\\varepsilon=0.01$\u00a0\u65f6\uff0c\u6548\u679c\u8f83\u597d\u3002\n\n\u8fd9\u65f6\u7684\u7a0b\u5e8f\u5c31\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u4e86\uff0c\u4e14\u672c\u5730\u6d4b\u8bd5\u4e0b\u6240\u6709\u5355\u8bcd\u90fd\u53ef\u4ee5\u5728\u89c4\u5b9a\u6b21\u6570\u5185\u731c\u51fa\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\nvector<string> words, a[28], curr;\nstring lst;\nconst char hintStr[] = \".SG\";\nconst int pwLen = 243;\nint hintStrR[255];\nconst char *bests[] = {\n    \"slier\", \"lares\", \"lares\", \"tores\", \"tarns\", \"arles\", \"lares\", \"lares\", \"snare\",\n    \"ousel\", \"ranis\", \"nares\", \"tares\", \"aides\", \"tries\", \"lares\", \"raise\", \"aides\",\n    \"plate\", \"nares\", \"snare\", \"riles\", \"nares\", \"cones\", \"kanes\", \"aeons\",\n};\n\nstring GetOp(string right, string guess) {\n  static int buk[28];\n  memset(buk, 0, sizeof buk);\n  string op(5, hintStr[0]);\n  rep (i, 0, 5 - 1)\n    if (right[i] == guess[i])\n      op[i] = hintStr[2];\n    else\n      ++buk[right[i] - 'a'];\n  rep (i, 0, 5 - 1)\n    if (op[i] != hintStr[2] && buk[guess[i] - 'a']) op[i] = hintStr[1];\n  return op;\n}\n\ninline double GetE(const string &s) {\n  static int mp[250];\n  memset(mp, 0, sizeof(int) * pwLen);\n  each (x, curr) {\n    string op = GetOp(x, s);\n    int res = 0;\n    rep (i, 0, 5 - 1)\n      res *= 3, res += hintStrR[(int)op[i]];\n    ++mp[res];\n  }\n  double e = 0;\n  rep (i, 0, pwLen) {\n    if (!mp[i]) continue;\n    double p = 1.0 * mp[i] / curr.size();\n    e += p * log2(1.0 / p);\n  }\n  return e;\n}\n\ninline string GetBest() {\n  if (curr.empty()) {\n    // \u8be5\u5206\u652f\u4e0d\u53ef\u80fd\u88ab\u8fdb\u5165\n    return \"test\";\n  }\n  double mxCurr = -1, mxWords = -1;\n  int idCurr = -1, idWords = -1;\n  rep (i, 0, curr.size() - 1) {\n    double res = GetE(curr[i]);\n    if (res > mxCurr) idCurr = i, mxCurr = res;\n  }\n  rep (i, 0, words.size() - 1) {\n    double res = GetE(words[i]);\n    if (res > mxWords) idWords = i, mxWords = res;\n  }\n  if (GetE(curr[idCurr]) > GetE(words[idWords]) - 0.01)\n    return curr[idCurr];\n  else\n    return words[idWords];\n}\n\nbool Ck(string x, bool *g, bool *s) {\n  string op = GetOp(x, lst);\n  rep (i, 0, 5 - 1)\n    if (op[i] == hintStr[0] && (g[i] || s[i]))\n      return 0;\n    else if (op[i] == hintStr[1] && !s[i])\n      return 0;\n    else if (op[i] == hintStr[2] && !g[i])\n      return 0;\n  return 1;\n}\n\nvector<string> GetFilter(bool *g, bool *s) {\n  vector<string> ans;\n  each (x, curr) {\n    if (Ck(x, g, s)) ans.push_back(x);\n  }\n  return ans;\n}\n\nconst char *guess(int num_testcase, int remaining_guesses, char initial_letter, bool *gold,\n                  bool *silver) {\n  int c = initial_letter - 'a';\n  if (remaining_guesses == 5) {\n    curr = a[c];\n    lst = bests[c];\n    return lst.c_str();\n  }\n  curr = GetFilter(gold, silver);\n  return (lst = GetBest()).c_str();\n}\n\nvoid init(int num_scramble, const char *scramble) {\n  rep (i, 0, 2)\n    hintStrR[(int)hintStr[i]] = i;\n  rep (i, 0, num_scramble - 1) {\n    string s;\n    rep (j, 0, 4)\n      s.push_back(scramble[i * 5 + j]);\n    words.push_back(s);\n  }\n  each (x, words)\n    a[x[0] - 'a'].push_back(x);\n}\n```\n\n",
        "postTime": 1644407241,
        "uid": 207996,
        "name": "yzy1",
        "ccfLevel": 9,
        "title": "P8079 \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P8079)\n\n## \u9898\u610f\n\u4f60\u8981\u8ddf\u4ea4\u4e92\u5e93\u73a9\u4e00\u6e38\u620f\u3002\u4ea4\u4e92\u5e93\u4f1a\u5728\u8bcd\u5e93\uff08$N=8869$ \u4e2a\u8bcd\uff0c\u957f\u5ea6\u4e3a $5$\uff0c\u5728\u4ea4\u4e92\u5f00\u59cb\u524d\u7ed9\u4f60\uff09\u4e2d\u7b49\u6982\u7387\u968f\u673a\u9009\u4e00\u4e2a\u8bcd\uff0c\u544a\u8bc9\u4f60\u5b83\u7684\u9996\u5b57\u6bcd\uff0c\u4f60\u6709 5 \u6b21\u731c\u8bcd\u7684\u673a\u4f1a\u3002\n\n\u6bcf\u6b21\u4f60\u8981\u4ece\u8bcd\u5e93\u91cc\u9762\u9009\u4e00\u4e2a\u8bcd\u544a\u8bc9\u4ea4\u4e92\u5e93\uff0c\u5982\u679c\u731c\u9519\u4e86\uff0c\u4ea4\u4e92\u5e93\u4f1a\u544a\u8bc9\u4f60\uff1a\n- \u54ea\u4e9b\u5b57\u6bcd\u7684\u4f4d\u7f6e\u662f\u6b63\u786e\u7684\n- \u54ea\u4e9b\u5b57\u6bcd\u5728\u5f85\u731c\u5355\u8bcd\u4e2d\u51fa\u73b0\u4e86\u4f46\u4f4d\u7f6e\u662f\u9519\u8bef\u7684\u3002\n\n\u7528 1~5 \u6b21\u731c\u6d4b\u731c\u5bf9\u7684\u5f97\u5206\u5206\u522b\u4e3a\uff1a$150,120,100,90,85$\u3002\n\n\u4ea4\u4e92\u5e93\u5c06\u4e0e\u4f60\u8fdb\u884c $T=1000$ \u6b21\u6e38\u620f\uff0c\u53d6\u5e73\u5747\u5206\u56db\u820d\u4e94\u5165\u7684\u7ed3\u679c\u3002\u65f6\u9650 60 \u79d2\uff0c\u53ea\u6709\u4e00\u4e2a\u6d4b\u8bd5\u70b9\u3002\n\n## \u9898\u89e3\n\u8fd9\u9053\u9898\u4e00\u770b\u5c31\u5f88\u4e0d\u6b63\u7ecf\u3002~~\u8054\u60f3\u524d\u4e00\u5929\u300aIOI \u9898\u578b\u4e0e\u53bb\u5411\u5206\u6790\u300b\u4e2d\u6240\u63d0\u5230\u67d0\u4e9b IOI \u9898\u76ee\u8981\u4f60\u201c\u624b\u64b8\u51b3\u7b56\u6811\u201d~~\uff0c\u6211\u4eec\u53ef\u4ee5\u731c\u6d4b\u8fd9\u9898\u53ef\u4ee5\u4f7f\u7528\u51b3\u7b56\u6811\u89e3\u51b3\u3002\n\n\u663e\u7136 8869 \u4e2a\u8bcd\u4e0d\u53ef\u80fd\u624b\u64b8\u51b3\u7b56\u6811\uff0c\u6211\u4eec\u8003\u8651\u6309\u7167\u5982\u4e0b\u65b9\u6cd5\u5efa\u6811\uff1a\u5f53\u6211\u4eec\u5e26\u7740\u8fd9\u4e2a\u7ed3\u70b9\u5bf9\u5e94\u7684\u8bcd\u7684\u96c6\u5408\uff0c\u9012\u5f52\u5230\u4e00\u4e2a\u7ed3\u70b9\u65f6\uff1a\n- \u82e5\u5176\u53ea\u5305\u542b\u4e00\u79cd\u53ef\u80fd\u7684\u8bcd\uff0c\u6216\u8005\u8fd9\u662f\u7b2c\u4e94\u6b21\u731c\u6d4b\uff0c\u7ed3\u675f\u8fc7\u7a0b\uff1b\n- \u5426\u5219\u679a\u4e3e\u6240\u6709 $N$ \u4e2a\u8bcd\uff0c\u627e\u5230\u201c\u6700\u597d\u201d\u7684\u4e00\u4e2a $w$\u3002\u4ee5 $w$ \u4e3a\u6807\u51c6\uff0c\u6839\u636e\u731c\u6d4b\u5b83\u65f6\u8fd4\u56de\u7ed3\u679c\u4e0d\u540c\uff0c\u53ef\u4ee5\u5c06\u5f53\u524d\u8282\u70b9\u7684\u8bcd\u5206\u4e3a\u82e5\u5e72\u90e8\u5206\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u90e8\u5206\u9012\u5f52\u5efa\u6811\u3002\n\n\u8fd9\u6837\u5efa\u51fa 26 \u68f5\u6811\u3002\u67e5\u8be2\u65f6\u4ece\u9996\u5b57\u6bcd\u5bf9\u5e94\u7684\u6811\u6839\u5f00\u59cb\uff0c\u6cbf\u8fd4\u56de\u503c\u5bf9\u5e94\u7684\u6811\u8fb9\u8d70\u3002\n\n\u90a3\u4e48\u95ee\u9898\u5728\u4e8e\u201c\u6700\u597d\u201d\u7684\u8bcd\u5e94\u8be5\u5982\u4f55\u8861\u91cf\u3002\u6700\u4f18\u7684\u65b9\u5f0f\u80af\u5b9a\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u8bcd\u90fd\u9012\u5f52\u5efa\u6811\uff0c\u53d6\u5206\u6570\u6700\u9ad8\u7684\u4e00\u4e2a\uff0c\u4f46\u8fd9\u663e\u7136\u6548\u7387\u8fc7\u4f4e\u3002\u611f\u6027\u7406\u89e3\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u628a\u5f53\u524d\u8282\u70b9\u7684\u8bcd\u5206\u5f97\u8d8a\u591a\u3001\u8d8a\u5747\u5300\uff0c\u6548\u679c\u8d8a\u597d\u3002\u7531\u6b64\u6211\u4eec\u6709\u591a\u79cd\u8861\u91cf\u65b9\u5f0f\uff08\u8bb0\u6211\u4eec\u5206\u51fa\u4e86 $n$ \u4e2a\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u7684\u5360\u6bd4\u4e3a $p_i$\uff0c$\\sum p_i=1$\uff09\uff1a\n- $n$\n- $-\\max p_i$\n- \u5206\u7c7b\u4ea4\u53c9\u71b5\u51fd\u6570\uff1a$-\\sum p_i\\log p_i$\n- \u57fa\u5c3c\u7cfb\u6570\uff1a$1-\\sum p_i^2$\n\n\u8003\u573a\u4e0a\u6211\u91c7\u7528\u4e86\u5206\u7c7b\u4ea4\u53c9\u71b5\u51fd\u6570\uff0c\u5f97\u4e86 97 \u5206\u3002~~\u60f3\u7740\u4e0e\u5176\u5361\u8fd9 3 \u5206\u4e0d\u5982\u591a\u60f3\u60f3\u524d\u9762\u7684\u9898\uff0c\u7136\u540e\u79bb\u91d1\u724c\u7ebf\u5dee\u4e86 3 \u5206\u3002~~\n\n\u6ce8\u610f\u5230\u8d8a\u65e9\u731c\u51fa\u6765\u7b54\u6848\uff0c\u5f97\u5206\u8d8a\u9ad8\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u731c\u6d4b\u4ee5\u4e0b\u4e24\u4ef6\u4e8b\u662f\u6709\u5229\u7684\uff1a\n- \u731c\u6d4b\u7684\u8bcd\u672c\u8eab\u53ef\u80fd\u662f\u6b63\u786e\u7b54\u6848\uff1b\n- $n$ \u5f88\u5927\u3002\n\n\u57fa\u4e8e\u4ee5\u4e0a\u4e24\u4e2a\u731c\u6d4b\uff0c\u6211\u4eec\u7cbe\u7ec6\u8c03\u6574\u201c\u6700\u597d\u201d\u7684\u8861\u91cf\u6807\u51c6\uff0c\u7136\u540e\u4e0d\u77e5\u4e0d\u89c9\u5c31\u80fd\u8fc7\u4e86\u3002\n\n```cpp\n//\u671f\u671b\u5f97\u5206\u7ea6\u4e3a 100.14\uff0c\u56db\u820d\u4e94\u5165\u540e\u5927\u6982\u7387\u4e3a 100\n//\u4ee3\u7801\u4e2d\u90e8\u5206\u8ff7\u60d1\u5199\u6cd5/\u547d\u540d\u662f\u7384\u5b66\u8c03\u53c2\u7684\u4ea7\u7269\n#include<bits/stdc++.h>\n#include\"word.h\"\nusing namespace std;\n\nnamespace Wallbreaker5th{\n\nconst int N=9000;\nstring s[N];int occ[N];\nint n;\nmap<int,int>ch[26][N];int gue[26][N];int cnt[26];\nmt19937 mt;\ndouble gini(const vector<int>&v){\n\tdouble sum=0;for(int i:v)sum+=i;\n\tdouble res=v.size()*0.2;\n\tfor(int i:v)if(i)res-=log(i/sum)*(i/sum)*2;\n\treturn res;\n}\nint res(int x,int ans){\n\tint r=0;\n\tfor(int i=0;i<5;i++)r|=(s[x][i]==s[ans][i])<<i;\n\tfor(int i=0;i<5;i++){\n\t\tif((r>>i)&1)continue;\n\t\tfor(int j=0;j<5;j++)if(!((r>>j)&1)&&s[x][i]==s[ans][j])r|=1<<(i+5);\n\t}\n\treturn r;\n}\ndouble pred_score=0;\nint sco[]={-1,150,120,100,90,85};\nvoid build(int x,vector<int>w,int fi,int dep){\n\tif(w.size()==1||dep==5){\n\t\tgue[fi][x]=w[mt()%w.size()];\n\t\tpred_score+=sco[dep];\n\t\tif(w.size()>1)cerr<<\"> \"<<w.size()<<endl;\n\t\treturn;\n\t}\n\tvector<pair<double,int>>cho;\n\tfor(int i=0;i<n;i++){\n\t\tmap<int,double>o;\n\t\tfor(int j:w)o[res(i,j)]++;\n\t\tdouble g=0;\n\t\tif(o[31]){\n\t\t\to[31]=0;\n\t\t\tint sum=0;for(auto i:o)sum+=i.second;\n\t\t\to[31]=sum/(o.size()-1.);\n\t\t\tg++;\n\t\t}\n\t\tvector<int>v;for(auto i:o)v.push_back(i.second);\n\t\tg+=gini(v);\n\t\tcho.push_back({g,i});\n\t}\n\tsort(cho.begin(),cho.end(),greater<pair<double,int>>());\n\tint mxi=cho[0].second;\n\n\tgue[fi][x]=mxi;\n\tmap<int,vector<int>>o;\n\tfor(int j:w)o[res(mxi,j)].push_back(j);\n\tfor(auto &i:o){\n\t\tif(i.first==31){\n\t\t\tpred_score+=sco[dep];\n\t\t\tcontinue;\n\t\t}\n\t\tch[fi][x][i.first]=++cnt[fi];\n\t\tbuild(cnt[fi],i.second,fi,dep+1);\n\t}\n}\nvoid init(int num_scramble, const char *scramble){\n\tn=num_scramble;\n\tfor(int i=0;i<n;i++)for(int j=0;j<5;j++)s[i]+=scramble[i*5+j];\n\tfor(int i=0;i<n;i++)for(int j=0;j<5;j++)occ[i]|=1<<(s[i][j]-'a');\n\tvector<int>w[26];\n\tfor(int i=0;i<n;i++)w[s[i][0]-'a'].push_back(i);\n\tfor(int i=0;i<26;i++)build(0,w[i],i,1);\n\tcerr<<\"> \"<<pred_score/n<<endl;\n}\n\nint cur=0;\nconst char *guess(int num_testcase, int remaining_guesses, char \n\tinitial_letter, bool *gold, bool *silver){\n\tif(remaining_guesses==5)cur=0;\n\telse{\n\t\tint v=0;\n\t\tfor(int i=0;i<5;i++)v|=gold[i]<<i;\n\t\tfor(int i=0;i<5;i++)v|=silver[i]<<(i+5);\n\t\tcur=ch[initial_letter-'a'][cur][v];\n\t}\n\treturn s[gue[initial_letter-'a'][cur]].c_str();\n}\n\n}\n\nvoid init(int num_scramble, const char *scramble){\n\tWallbreaker5th::init(num_scramble,scramble);\n}\nconst char *guess(int num_testcase, int remaining_guesses, char \n\tinitial_letter, bool *gold, bool *silver){\n\treturn Wallbreaker5th::guess(num_testcase, remaining_guesses, initial_letter, \n\t\tgold, silver);\n}\n\n```\n",
        "postTime": 1643943746,
        "uid": 37676,
        "name": "\u7834\u58c1\u4eba\u4e94\u53f7",
        "ccfLevel": 9,
        "title": "\u3010\u9898\u89e3\u3011P8079 [WC2022] \u731c\u8bcd"
    },
    {
        "content": "\u58f0\u660e\uff1a\u672c\u6587\u662f\u4f5c\u8005\u89c2\u770b\u4e86 3b1b \u7684\u89c6\u9891\u540e\u5199\u7684\uff0c\u601d\u8def\u5927\u90e8\u5206\u4e3a\u501f\u9274\u4ed6\u7684\u89c6\u9891\u3002\u6587\u7ae0\u672b\u5c3e\u4f1a\u653e\u89c6\u9891\u94fe\u63a5\u3002\n\n\u8fd9\u9898\u8fd8\u662f\u6709\u96be\u5ea6\u7684\uff0c\u7136\u800c\u672c\u4eba\u6bd4\u8f83\u83dc\uff0c\u5199\u4e0d\u51fa\u4ee3\u7801\uff0c\u90a3\u5c31\u5206\u6790\u4e00\u4e0b\u601d\u8def\u5427\u3002\n\n\u8fd9\u6e38\u620f\u5176\u5b9e\u633a\u50cf wordle\uff08 https://www.wordlegame.org \uff09\u7684\u3002\n\n\u4f60\u9700\u8981\u5728\u6709\u9650\u6b21\u6570\u5185\uff0c\u6839\u636e\u6b64\u524d\u731c\u6d4b\u53cd\u9988\u7684\u4fe1\u606f\u731c\u8bcd\u3002\n\n\u90a3\u4e48\uff0c\u5176\u5b9e\u5c31\u662f\u8ba9\u6211\u4eec\u627e\u5230\u4e00\u4e2a\u731c\u8bcd\u6b21\u6570\u671f\u671b\u503c\u5c3d\u91cf\u5c11\u7684\u65b9\u6cd5\u3002\n\n\u7136\u540e\u5982\u679c\u8981\u60f3\u5c3d\u5feb\u731c\u5230\u6b63\u786e\u7b54\u6848\u7684\u8bdd\uff0c\u6211\u4eec\u663e\u7136\u5e94\u8be5\u5728\u6bcf\u6b65\u731c\u6d4b\u4e2d\u5c3d\u91cf\u4f7f\uff08\u6839\u636e\u6b64\u524d\u7684\u4fe1\u606f\u53cd\u9988\uff09\u8fd9\u4e00\u6b65\u53cd\u9988\u4fe1\u606f\u4e4b\u540e\u53ef\u80fd\u662f\u6b63\u786e\u7b54\u6848\u7684\u5355\u8bcd\u6570\u91cf\u7684\u671f\u671b\u503c\u5c3d\u91cf\u5c0f\u3002\n\n\u8fd9\u91cc\u5355\u8bcd\u6570\u91cf\u7684\u671f\u671b\u503c\u6307\u7684\u662f\uff0c\u731c\u6d4b\u4e00\u4e2a\u5355\u8bcd\u4e4b\u540e\u6240\u6709\u53ef\u80fd\u7684\u53cd\u9988\u4fe1\u606f\u7684\u51fa\u73b0\u6982\u7387 $r$\uff08\u5373\uff1a\u6ee1\u8db3\u8fd9\u4e00\u53cd\u9988\u4fe1\u606f\u4ee5\u53ca\u4e4b\u524d\u6240\u6709\u53cd\u9988\u4fe1\u606f\u7684\u53ef\u80fd\u5355\u8bcd\u6570 $a$\uff0c\u4e0e\u6ee1\u8db3\u4e4b\u524d\u6240\u77e5\u9053\u7684\u6240\u6709\u53cd\u9988\u4fe1\u606f\u7684\u6240\u6709\u53ef\u80fd\u5355\u8bcd\u6570 $n$ \u4e4b\u6bd4\uff09\uff0c\u4e0e\u5f97\u5230\u8fd9\u4e00\u6b65\u53cd\u9988\u4fe1\u606f\u540e\u53ef\u80fd\u662f\u6b63\u786e\u7b54\u6848\u7684\u5355\u8bcd\u6570\uff08\u5176\u5b9e\u5c31\u662f $a$\uff09\u7684\u4e58\u79ef\u3002\n\n\u5373\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u731c\u6d4b\u7684\u5355\u8bcd $s$\uff0c\u8bbe\u5171\u6709 $m$ \u79cd\u53ef\u80fd\u7684\u53cd\u9988\u7ed3\u679c\uff0c\u5219\u5269\u4e0b\u53ef\u80fd\u7684\u5355\u8bcd\u6570\u671f\u671b\u503c\u4e3a $\\sum\\limits_{i=1}^{m}{\\frac{a_i^2}{n}}$\u3002\n\n\u8fd9\u91cc $a_i$ \u6307\u5728\u7b2c $i$ \u79cd\u53cd\u9988\u4fe1\u606f\u4e0b\u53ef\u80fd\u7684\u5355\u8bcd\u6570\uff0c$n$ \u6307\u5728\u731c\u6d4b\u524d\u53ef\u80fd\u7684\u5355\u8bcd\u6570\u3002\n\n\uff08\u4e0a\u8ff0\u63a8\u5bfc\u8fd0\u7528\u4e86\u8bcd\u5e93\u4e2d\u6240\u6709\u5355\u8bcd\u4f5c\u4e3a\u6b63\u89e3\u7684\u6982\u7387\u76f8\u7b49\u7684\u5047\u8bbe\uff0c\u8fd9\u4e00\u5047\u8bbe\u662f\u663e\u7136\u7684\uff09\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u6b65\u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u8bcd\u5e93\u4e2d\u6240\u6709\u7684\u5355\u8bcd\uff0c\u679a\u4e3e\u53cd\u9988\u4fe1\u606f\u679a\u4e3e\u53ef\u80fd\u7684\u7b54\u6848\uff0c\u8ba1\u7b97\u51fa\u53ef\u80fd\u6b63\u786e\u7b54\u6848\u6570\u91cf\u671f\u671b\u503c\uff0c\u518d\u9009\u62e9\u4e00\u4e2a\u671f\u671b\u503c\u6700\u5c0f\u7684\u4f5c\u4e3a\u65b0\u4e00\u6b65\u731c\u6d4b\u5373\u53ef\u3002\uff08\u5982\u6709\u671f\u671b\u503c\u76f8\u7b49\uff0c\u53ef\u4ee5\u4efb\u9009\u4e00\u4e2a\uff09\n\n\u90a3\u4e48\u8fd9\u4e00\u95ee\u9898\u4e5f\u5c31\u89e3\u51b3\u4e86\u3002\n\n\uff08\u8bed\u8a00\u4e0d\u901a\u987a\u7684\u8bdd\u53ef\u4ee5\u79c1\u4fe1\u8be2\u95ee\uff09\n\n\u9644\u89c6\u9891\u94fe\u63a5 https://www.bilibili.com/video/BV1zZ4y1k7Jw?spm_id_from=333.337.search-card.all.click \u3002",
        "postTime": 1653375414,
        "uid": 250940,
        "name": "banned_user",
        "ccfLevel": 5,
        "title": "wordle"
    }
]