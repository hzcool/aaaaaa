[
    {
        "content": "~~\u6765\u4e00\u4e2a HLPP \u7684\u9898\u89e3~~\n\nHLPP \uff08\u6700\u9ad8\u6807\u53f7\u9884\u6d41\u63a8\u8fdb\uff09\u5e94\u8be5\u662f\u5e38\u89c1\u6700\u5927\u6d41\u7b97\u6cd5\u91cc\u6548\u7387\u6700\u9ad8\u7684\uff0c\u6700\u5dee\u590d\u6742\u5ea6\u4e3a $O(n^2\\sqrt m)$\uff08\u7136\u800c\u968f\u673a\u6570\u636e\u4e0b\u8dd1\u7684\u6ca1 dinic \u5feb\uff09\uff0c\u867d\u7136\u88f8\u7684 HLPP \u5f88\u5bb9\u6613\u88ab\u5361\u5230\u8fd9\u4e2a\u4e0a\u754c\uff0c\u4f46\u662f\u7ecf\u8fc7\u4e00\u4e9b\u4f18\u5316\u7684 HLPP \u8fd8\u662f\u57fa\u672c\u80fd\u505a\u5230\u5e73\u5747\u901f\u5ea6\u548c dinic \u6301\u5e73\u3002\n\n------------\n\n### \u57fa\u672c\u601d\u60f3\n\nEK\u3001FF\u3001dinic\u3001ISAP \u7b49\u7b97\u6cd5\u90fd\u5c5e\u4e8e**\u589e\u5e7f\u8def\u7b97\u6cd5**\u3002\u800c HLPP \u662f\u4e00\u79cd**\u63a8\u9001-\u91cd\u8d34\u6807\u7b7e**\u7b97\u6cd5\uff08\u53c8\u79f0\u9884\u6d41\u63a8\u8fdb\uff09\u3002\u73b0\u5728\u6548\u7387\u6700\u9ad8\u7684\u51e0\u79cd\u6700\u5927\u6d41\u7b97\u6cd5\u51e0\u4e4e\u90fd\u662f\u63a8\u9001-\u91cd\u8d34\u6807\u7b7e\u7b97\u6cd5\u3002\u63a8\u9001-\u91cd\u8d34\u6807\u7b7e\u7b97\u6cd5\u5728\u7b97\u6cd5\u8fc7\u7a0b\u4e2d\u5e76\u4e0d\u6ee1\u8db3\u7f51\u7edc\u7684\u6d41\u91cf\u5b88\u6052\u6027\u8d28\uff0c\u5373\u5b58\u5728\u6d41\u5165\u4e00\u4e2a\u8282\u70b9\u7684\u6d41\u91cf\u5927\u4e8e\u6d41\u51fa\u8be5\u8282\u70b9\u6d41\u91cf\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u63a8\u9001-\u91cd\u8d34\u6807\u7b7e\u7b97\u6cd5\u59cb\u7ec8\u7ef4\u62a4\u7740\u4e00\u4e2a\u51fd\u6570**\u9884\u6d41**\uff08preflow\uff09\u3002\n\n\u4f17\u6240\u5468\u77e5\uff0c\u7f51\u7edc\u7684\u6d41\u91cf\u5b88\u6052\u6027\u8d28\u662f\uff1a\u5728\u7f51\u7edc $G(E,V)$ \u4e2d\uff0c\u5bf9\u4e8e $u\\in V-\\{s,t\\}$ \u6709\uff1a\n\n$$\\sum_{v\\in V}f(v,u)-\\sum_{v\\in V}f(u,v)=0$$\n\n\u800c\u5728\u63a8\u9001-\u91cd\u8d34\u6807\u7b7e\u7b97\u6cd5\u8fc7\u7a0b\u4e2d\uff0c\u5219\u5f31\u5316\u4e86\u8fd9\u4e2a\u6761\u4ef6\uff1a\n\n$$\\sum_{v\\in V}f(v,u)-\\sum_{v\\in V}f(u,v)\\geq0$$\n\n\u5373\u6bcf\u4e2a\u8282\u70b9\u53ef\u4ee5\u6682\u65f6\u50a8\u5b58\u4e00\u5b9a\u7684\u6d41\u91cf\uff08\u4f46\u4e0d\u80fd\u900f\u652f\uff09\uff0c\u800c\u6211\u4eec\u79f0\uff1a\n\n$$e(u)=\\sum_{v\\in V}f(v,u)-\\sum_{v\\in V}f(u,v)$$\n\n\u4e3a $u$ \u7684**\u8d85\u989d\u6d41**\uff08excess flow\uff09\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5728\u6700\u5927\u5316\u6d41\u91cf\u4e14 $u\\in V-\\{s,t\\}$ \u7684 $e(u)$ \u90fd\u4e3a $0$ \u65f6\uff0c$e(t)$ \u5373\u4e3a\u6574\u5f20\u7f51\u7edc\u7684\u6700\u5927\u6d41\u3002\n\n\u90a3\u4e48\u6211\u4eec\u7684\u76ee\u6807\u5c31\u662f\u4e0d\u65ad\u63a8\u9001\u6d41\u91cf\uff0c\u4e14\u4fdd\u8bc1\u6700\u7ec8 $e(u)$ \u4e3a $0$\u3002\n\n\n\n------------\n\n### \u7b97\u6cd5\u6d41\u7a0b\n\u5927\u5bb6\u53ef\u80fd\u5c31\u7acb\u523b\u4f1a\u60f3\u5230\u4e00\u79cd\u505a\u6cd5\uff1a\n\n\u6bcf\u4e2a\u8282\u70b9\u90fd\u628a\u6d41\u5411\u81ea\u5df1\u7684\u8fb9\u6d41\u6ee1\uff0c\u591a\u4f59\u7684\u6d41\u91cf\u4f5c\u4e3a\u8d85\u989d\u6d41\u6682\u65f6\u50a8\u5b58\uff0c\u4e00\u65e6\u6709\u673a\u4f1a\u5c31\u9a6c\u4e0a\u63a8\u5411\u5468\u56f4\u7684\u8282\u70b9\uff1b\u56e0\u4e3a\u6709\u53cd\u5411\u8fb9\u7684\u5b58\u5728\uff0c\u4ece $s$ \u6d41\u51fa\u7684\u591a\u4f59\u6d41\u91cf\u6700\u7ec8\u4e00\u5b9a\u4e5f\u4f1a\u56de\u5230 $s$\uff0c\u90a3\u4e48\u6700\u7ec8\u6574\u5f20\u7f51\u7edc\u4e5f\u80fd\u5e73\u8861\u3002\n\n\u4f46\u662f\uff0c\u8bbe\u60f3\u4e00\u79cd\u60c5\u51b5\uff1a\u5982\u679c $u$ \u628a\u8d85\u989d\u6d41\u63a8\u7ed9\u4e86 $v$\uff0c\u4f46 $v$ \u4e0d\u8bb2\u6b66\u5fb7\uff0c\u63a5\u5316\u53d1\u628a\u6d41\u91cf\u539f\u5c01\u4e0d\u52a8\u7684\u8fd8\u4e86\u56de\u53bb\uff0c\u7136\u540e $u$ \u518d\u63a8\uff0c$v$ \u518d\u8fd8\u2026\u2026\u4e00\u76f4\u63a8\u5230 TLE\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u8003\u8651\u548c dinic \u5dee\u4e0d\u591a\uff0c\u5c06\u6574\u5f20\u7f51\u7edc\u8fdb\u884c\u5206\u5c42\uff0c\u6bcf\u4e00\u5c42\u8282\u70b9\u7684\u8d85\u989d\u6d41\u53ea\u80fd\u63a8\u7ed9\u4e0b\u4e00\u5c42\u8282\u70b9\u3002\n\n\u4ee4 $h(u)$ \u4e3a\u9ad8\u5ea6\u51fd\u6570\uff0c\u8868\u793a\u8282\u70b9 $u$ \u7684\u9ad8\u5ea6\uff08height\uff09\uff0c\u9884\u6d41\u63a8\u8fdb\u7684\u64cd\u4f5c\u53ea\u5141\u8bb8\u63a8\u7ed9 $v\\in V$ \u4e14 $h(v)=h(u)-1$ \u7684\u8282\u70b9\uff0c\u90a3\u4e48\u6d41\u91cf\u5c31\u4e0d\u4f1a\u6765\u56de\u63a8\u4e86\uff0c $h(s)$ \u8bbe\u4e3a\u6700\u9ad8\u3002\n\n\u4f46\u662f\uff0c\u8fd9\u6837\u53c8\u4f1a\u6709\u53e6\u4e00\u79cd\u60c5\u51b5\uff1a\u5728\u6d41\u91cf\u63a8\u6765\u63a8\u53bb\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6709\u4e2a\u8282\u70b9 $u$ \u7279\u522b\u60e8\uff0c\u6ee1\u8db3 $v\\in V$ \u4e14 $h(v)=h(u)-1$ \u7684\u8fb9 $(u,v)$ \u8981\u4e48\u5c31\u6ca1\u6709\uff0c\u8981\u4e48\u5df2\u7ecf\u6ee1\u6d41\u4e86\uff0c\u800c\u6b64\u65f6\u5979\u4e0a\u4e00\u5c42\u7684\u8282\u70b9\u53c8\u63a8\u7ed9\u5979\u5f88\u591a\u8d85\u989d\u6d41\uff0c\u800c\u8fd9\u4e9b\u8d85\u989d\u6d41\u5728\u5979\u624b\u91cc\u65e0\u8bba\u5982\u4f55\u90fd\u63a8\u4e0d\u51fa\u53bb\u4e86\u3002\n\n\u600e\u4e48\u529e\uff1f\n\n\u6211\u4eec\u7684\u7b97\u6cd5\u53eb\u63a8\u9001-**\u91cd\u8d34\u6807\u7b7e**\u7b97\u6cd5\u3002\n\n\u90a3\u5c31\u5f3a\u884c\u628a\u5979\u62ac\u8d77\u6765\uff0c\u628a\u6d41\u91cf\u63a8\u56de\u53bb\u3002\n\n\uff08\u4f60\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e2a\u573a\u9762\uff0c\u4e00\u4e2a\u76c6\u5730\u6216\u4e00\u4e2a\u65ad\u5c42\u88ab\u9876\u51fa\uff0c\u53d8\u6210\u4e00\u5ea7\u5c71\uff09\n\n\u6bcf\u6b21\u9047\u5230\u6d41\u4e0d\u52a8\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5c31\u627e\u5230\u4e00\u4e2a\u6700\u4f4e\u7684\u9ad8\u5ea6\uff0c\u8ba9\u5979\u6070\u597d\u80fd\u6d41\u6389\u81ea\u5df1\u7684\u8d85\u989d\u6d41\u3002\n\n\u8fd9\u5c31\u662f\u91cd\u8d34\u6807\u7b7e\uff08relabel\uff09\u7684\u8fc7\u7a0b\n\n\u7136\u540e\u5462\uff1f\u6ca1\u6709\u7136\u540e\u4e86\u3002\n\n------------\n### \u5173\u4e8e HLPP \u7684\u7ec6\u8282\n\n\u4e0a\u9762\u7684\u90fd\u662f\u63a8\u9001-\u91cd\u8d34\u6807\u7b7e\u7b97\u6cd5\u7684\u57fa\u7840\u6a21\u578b\uff0c\u5982\u679c\u4e0d\u52a0\u4f18\u5316\u53ef\u4ee5\u8f7b\u677e\u7684\u8fbe\u5230 $O(n^2m)$ \u7684~~\u4f18\u79c0~~\u590d\u6742\u5ea6\uff0c\u8ddd\u79bb\u6211\u4eec HLPP \u7684 $O(n^2\\sqrt m)$ \u8fd8\u6709\u4e00\u6bb5\u8ddd\u79bb\u3002\n\n\u90a3\u4e48\u8fd8\u8981\u6ce8\u610f\u4ec0\u4e48\uff1f\n\n1. \u5173\u4e8e $h$ \u51fd\u6570\u521d\u503c\u7684\u5904\u7406\u3002\n\n\u5982\u4f55\u7ed9 $h$ \u8d4b\u4e00\u4e2a\u5408\u9002\u7684\u521d\u503c\uff1f\u53ef\u4ee5\u76f4\u63a5\u5c06 $h(s)\\gets n$ \uff0c\u5176\u5b83\u7684\u90fd\u662f $0$\uff0c\u5728\u91cd\u8d34\u6807\u7b7e\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u8c03\u6574\u3002\n\n\u4f46\u8fd9\u6837\u4e0d\u591f\u4f18\u79c0\uff0c\u5728\u521d\u59cb\u65f6\u53ef\u4ee5\u50cf dinic \u4e00\u6837 bfs \u4e00\u904d\uff0c\u5c06\u5206\u5c42\u56fe\u7684\u5c42\u6b21\u4f5c\u4e3a $h$\u3002\u8fd9\u6837\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u65f6\u95f4\n\n2. \u5173\u4e8e\u600e\u4e48\u8ba9\u6d41\u91cf\u4ece\u9ad8\u5904\u5411\u4f4e\u5904\u6d41\uff1f\n\n\u8fd9\u4e2a\u95ee\u9898\u7531 R\u00b7E\u00b7Tarjan \uff08\u600e\u4e48\u53c8\u662f\u4ed6\uff09\u5728 1986 \u5e74\u89e3\u51b3\uff0c\u8fd9\u4e5f\u662f HLPP \u540d\u5b57\u7684\u7531\u6765\u3002bfs \u53ef\u4ee5\u6709\u5c42\u6b21\u7684\u5904\u7406\u4fe1\u606f\u3002\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u4ee5 $h$ \u4e3a\u952e\u503c\u7684\u4f18\u5148\u961f\u5217\uff0c\u6bcf\u6b21\u53d6\u6700\u9ad8\u7684\u8282\u70b9\u8fdb\u884c\u9884\u6d41\u63a8\u8fdb\u3002\u56e0\u4e3a\u5176\u5b83\u8282\u70b9\u90fd\u6bd4\u5f53\u524d\u8282\u70b9\u77ee\uff0c\u4e0d\u4f1a\u88ab\u91cd\u8d34\u6807\u7b7e\uff0c\u5904\u7406\u8d77\u6765\u65b9\u4fbf\uff1b\u800c\u4e14\u8fd9\u6837\u80fd\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u5165\u961f\u7684\u6b21\u6570\u6700\u5c11\uff0c\u56e0\u4e3a\u77ee\u7684\u8282\u70b9\u4f1a\u5728\u961f\u5217\u4e2d\u88ab\u53cd\u590d\u63a8\u8fdb\uff0c\u800c\u4e0d\u662f\u51fa\u961f\u53c8\u8fdb\u961f\u3002\n\n3. \u5173\u4e8e\u91cd\u8d34\u6807\u7b7e\u7684 gap \u4f18\u5316\u3002\n\n\u5b66\u8fc7 ISAP \u7684\u4eba\u5927\u6982\u90fd\u77e5\u9053 gap \u4f18\u5316\uff0cHLPP \u7684 gap \u4f18\u5316\u548c ISAP \u6709\u70b9\u50cf\u3002\u5047\u8bbe\u6211\u4eec\u7ed9 $u$ \u91cd\u8d34\u6807\u7b7e\u7684\u8fc7\u7a0b\u4e2d\uff0c$h(u)$ \u8fd9\u4e00\u9ad8\u5ea6\u6ca1\u6709\u5176\u5b83\u8282\u70b9\u4e86\uff0c\u7531\u4e8e\u53ea\u6709\u6ee1\u8db3 $h(v)=h(u)-1$ \u7684\u8fb9 $(u,v)$ \u7684\u8fb9\u624d\u4f1a\u88ab\u9884\u6d41\u63a8\u8fdb\uff0c\u90a3\u4e48\u9ad8\u5ea6\u4e3a $h(u)+1$ \u5c31\u6c38\u8fdc\u65e0\u6cd5\u628a\u81ea\u5df1\u7684\u8d85\u989d\u6d41\u5411\u4e0b\u63a8\u4e86\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6240\u6709 $h(v)>h(u)$ \u7684\u8282\u70b9\u7684\u8d85\u989d\u6d41\u90fd\u6d41\u4e0d\u52a8\u4e86\uff0c\u8fd9\u4e9b\u8282\u70b9\u672a\u6765\u90fd\u9700\u8981\u91cd\u8d34\u6807\u7b7e\uff0c\u4e0d\u77e5\u60c5\u7684\u8282\u70b9\u8fd8\u4f1a\u4e92\u76f8\u63a8\u6d41\u91cf\uff0c\u7136\u800c\u8fd9\u4e9b\u6d41\u91cf\u90fd\u6d41\u4e0d\u52a8\u3002\u90a3\u4e48\u8fd8\u4e0d\u5982\u73b0\u5728\u5c31\u91cd\u8d34\u3002\u628a\u5979\u4eec\u7684\u9ad8\u5ea6\u8bbe\u4e3a $n+1$ \uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u5979\u4eec\u7684\u6d41\u91cf\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fd8\u7ed9 $s$ \u8282\u70b9\u3002\n\n\u4ee3\u7801\uff08\u7ec6\u8282\u6bd4\u8f83\u591a\uff0c\u53ef\u4ee5\u5bf9\u7167\u67e5\u770b\uff09\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define rg register\n#define ll long long\n#define ull unsigned ll\n#define inf 0x7f7f7f7f\n#define sit set<int>::iterator\ninline void file(){\n\tfreopen(\"test.in\",\"r\",stdin);\n}\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int getc(){\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;\n}\ninline ll read(){\n\trg ll ret=0,f=0;char ch=getc();\n    while(!isdigit(ch)){if(ch=='-')f=1;ch=getc();}\n    while(isdigit(ch)){ret=ret*10+ch-48;ch=getc();}\n    return f?-ret:ret;\n}\nstruct node{\n\tint nex,to;\n\tll val;\n}e[500005<<1];\nint n,m,u,v,w,s,t,cnt=1,head[50005];\nint h[50005],gap[50005];  //h \u8868\u793a\u9ad8\u5ea6\uff0cgap \u8868\u793a\u8be5\u9ad8\u5ea6\u7684\u8282\u70b9\u6570\u3002 \nbool vis[50005];  //vis \u8868\u793a\u662f\u5426\u5728\u961f\u4e2d\u3002 \nll maxflow,excess[50005];  //excess \u8868\u793a\u8d85\u989d\u6d41 \ninline void add(int u,int v,ll w){\n\te[++cnt].nex=head[u];\n\te[cnt].to=v;\n\te[cnt].val=w;\n\thead[u]=cnt;\n}\nbool init(){  //\u521d\u59cb bfs \u7ed9\u56fe\u5206\u5c42\uff0c\u6ce8\u610f\u662f\u4ece t \u5012\u7740\u641c\u3002 \n\tqueue<int> q; \n\tmemset(h,0x7f,sizeof(h));\n\th[t]=0; q.push(t);\n\twhile(!q.empty()){\n\t\tint now=q.front(); q.pop();\n\t\tfor(rg int i=head[now];i;i=e[i].nex){\n\t\t\tif(e[i^1].val&&h[e[i].to]-1>h[now]){\n\t\t\t\tq.push(e[i].to);\n\t\t\t\th[e[i].to]=h[now]+1;\n\t\t\t}\n\t\t}\n\t}\n\treturn h[s]!=inf;\n}\nstruct ty{\n\tint v;\n\tbool operator<(const ty& __)const{\n\t\treturn h[v]<h[__.v]; \n\t}\n};\ninline ty make(int x){\n\treturn (ty){x};\n}\npriority_queue<ty> pq;  //\u4ee5 h \u4e3a\u952e\u503c\u7684\u4f18\u5148\u961f\u5217\u3002 \ninline void push(int x){  //\u9884\u6d41\u63a8\u8fdb\u64cd\u4f5c\u3002 \n\tfor(rg int i=head[x];i;i=e[i].nex){\n\t\tif(!excess[x]) break;  //\u63a8\u5b8c\u4e86\u3002 \n\t\tif(!e[i].val||h[e[i].to]!=h[x]-1) continue;  //\u4e0d\u80fd\u63a8\u3002 \n\t\tll tmp=min(e[i].val,excess[x]);  //\u5c3d\u53ef\u80fd\u7684\u63a8\u3002 \n\t\te[i].val-=tmp;\n\t\te[i^1].val+=tmp;\n\t\texcess[x]-=tmp;\n\t\texcess[e[i].to]+=tmp;\n\t\tif(e[i].to!=s&&e[i].to!=t&&!vis[e[i].to]){  //\u88ab\u63a8\u7684\u8282\u70b9\u81ea\u5df1\u4e5f\u4f1a\u8d85\u989d\uff0c\u5165\u961f\u7b49\u5f85\u63a8\u522b\u4eba\u7684\u673a\u4f1a\u3002 \n\t\t\tvis[e[i].to]=1;\n\t\t\tpq.push(make(e[i].to));\n\t\t}\n\t}\n}\ninline void relabel(int x){\n\th[x]=inf;\n\tfor(rg int i=head[x];i;i=e[i].nex)\n\t\tif(e[i].val&&h[e[i].to]<h[x]-1)\n\t\t\th[x]=h[e[i].to]+1;  //\u627e\u5230\u6700\u77ee\u7684\u80fd\u63a8\u522b\u4eba\u7684\u4f4d\u7f6e\u3002 \n}\nvoid HLPP(){\n\tif(!init())  //\u4e0d\u8fde\u901a\u3002 \n\t\treturn maxflow=0,void();\n\th[s]=n;\n\tfor(rg int i=1;i<=n;++i)\n\t\tif(h[i]!=inf) ++gap[h[i]];\n\tfor(rg int i=head[s];i;i=e[i].nex){\n\t\tif(!e[i].val||h[e[i].to]==inf) continue;\n\t\tll tmp=e[i].val;\n\t\te[i].val-=tmp; \n\t\te[i^1].val+=tmp;\n\t\texcess[s]-=tmp;\n\t\texcess[e[i].to]+=tmp;\n\t\tif(e[i].to!=s&&e[i].to!=t&&!vis[e[i].to]){  \n\t\t\tvis[e[i].to]=1;\n\t\t\tpq.push(make(e[i].to));\n\t\t}\n\t} //\u540c push \u51fd\u6570\uff0c\u5bf9\u4e8e s \u7684 push \u7279\u6b8a\u5904\u7406\u3002 \n\twhile(!pq.empty()){\n\t\tint now=pq.top().v; pq.pop();\n\t\tvis[now]=0;\n\t\tpush(now);\n\t\tif(!excess[now]) continue; //\u8d85\u989d\u6d41\u63a8\u5b8c\u4e86\u3002 \n\t\tif(!--gap[h[now]])  //gap \u4f18\u5316\u3002 \n\t\t\tfor(rg int i=1;i<=n;++i)\n\t\t\t\tif(i!=s&&i!=t&&h[i]>h[now]&&h[i]<n+1)\n\t\t\t\t\th[i]=n+1;\n\t\trelabel(now); \n\t\t++gap[h[now]];  //\u91cd\u8d34\u6807\u7b7e\u3002 \n\t\tvis[now]=1;\n\t\tpq.push(make(now)); //\u6ca1\u63a8\u5b8c\uff0c\u5165\u961f\u7ee7\u7eed\u7b49\u5f85\u63a8\u522b\u4eba\u7684\u673a\u4f1a\u3002 \n\t}\n\tmaxflow=excess[t];\n}\nint main(){\n    n=read(); m=read(); s=read(); t=read();\n    for(rg int i=1;i<=m;++i){\n    \tu=read(); v=read(); w=read(); \n    \tadd(u,v,w);\n    \tadd(v,u,0);\n\t}\n\tHLPP();\n\tprintf(\"%lld\",maxflow);\n    return 0;\n}\n//If you're gonna replace me,at least have the audacity to kill me thoroughly.\n```\n",
        "postTime": 1625304245,
        "uid": 241977,
        "name": "Legitimity",
        "ccfLevel": 8,
        "title": "\u5173\u4e8e HLPP"
    },
    {
        "content": "\u88f8\u7684\u7f51\u7edc\u6d41\u6a21\u677f\u9898\uff0c\u7528 Dinic \u5373\u53ef\u3002\n\n## \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a\u4e00\u5f20 $n$ \u4e2a\u8282\u70b9\uff0c$m$ \u6761\u8fb9\u7684\u7f51\u7edc\uff0c\u4ee5\u53ca\u6e90\u70b9\u3001\u6c47\u70b9 $s,t$\uff0c\u6c42 $s$ \u5230 $t$ \u7684\u6700\u5927\u6d41\u3002\n\n## \u5927\u4f53\u601d\u8def\n### \u7f51\u7edc\u6d41\u6982\u5ff5\n\u4e00\u4e2a\u7f51\u7edc $G=(V,E)$ \u662f\u4e00\u5f20\u6709\u5411\u56fe\uff0c\u6bcf\u6761\u8fb9 $(x,y)$ \u6709\u4e00\u4e2a\u6743\u503c $c$\uff0c\u8868\u793a\u8fb9\u7684\u5bb9\u91cf\uff08capability)\u3002\u56fe\u4e2d\u6709\u4e24\u4e2a\u7279\u6b8a\u8282\u70b9 $s,t$\uff0c\u8868\u793a\u6e90\u70b9\u548c\u6c47\u70b9\uff08source, sink)\u3002\n\n\u8bbe\u6d41\u91cf\u51fd\u6570\u4e3a $f(x,y),\\ x,y\\in V$\uff0c\u5219\u6ee1\u8db3\n1. $f(x,y)\\le c(x,y)$\uff0c\u5373\u6d41\u91cf\u9650\u5236\u3002\n2. $f(x,y)=-f(y,x)$\uff0c\u5373\u659c\u5bf9\u79f0\uff08\u53cd\u5bf9\u79f0\uff09\u3002\n3. $\\forall x\\neq S,x\\neq T,\\sum_{(u,x)\\in E}f(u,x)=\\sum_{(x,v)\\in E}f(x,v)$\uff0c\u5373\u6d41\u91cf\u5b88\u6052\u3002\n\n$(x,y)\\in E$\uff0c\u79f0 $f(x,y)$ \u8868\u793a\u8be5\u8fb9\u7684\u6d41\u91cf\uff0c$c(x,y)-f(x,y)$ \u8868\u793a\u8be5\u8fb9\u7684\u5269\u4f59\u5bb9\u91cf\u3002\n\n\u6709\u4e00\u5f20\u56fe\uff0c\u8981\u6c42\u4ece\u6e90\u70b9\u6d41\u5411\u6c47\u70b9\u7684\u6700\u5927\u6d41\u91cf\uff08\u53ef\u4ee5\u6709\u5f88\u591a\u6761\u8def\u5230\u8fbe\u6c47\u70b9\uff09\uff0c\u5c31\u662f\u6211\u4eec\u7684\u6700\u5927\u6d41\u95ee\u9898\u3002\u6700\u5927\u6d41\u7684\u5e38\u7528\u7b97\u6cd5\u6709 EK, Dinic, ISAP, \u5176\u4e2d\u524d\u8005\u590d\u6742\u5ea6\u4e3a $O(nm^2)$\uff0c\u540e\u4e24\u8005\u7684\u7406\u8bba\u590d\u6742\u5ea6\u4e0a\u754c\u4e3a $O(n^2m)$\uff0c\u4f46\u5b9e\u9645\u6548\u7387\u5747\u8fdc\u9ad8\u4e8e\u6b64\u3002\n\n### Dinic \u4e0e\u589e\u5e7f\u8def\n\u6c42\u89e3\u6700\u5927\u6d41\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u8ba4\u8bc6\u4ee5\u4e0b\u589e\u5e7f\u8def\u7684\u6982\u5ff5\u3002\n\n**\u589e\u5e7f\u8def** \u6307\u7684\u662f\uff0c\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\uff0c\u53ea\u8981\u6709 $flow>0$ \u6d41\u8fc7\u53bb\uff0c\u8fd9\u6761\u8def\u5c31\u662f\u589e\u5e7f\u8def\u3002\u5728\u4e00\u4e9b\u6700\u5927\u6d41\u7b97\u6cd5\u4e2d\uff0c\u5c31\u662f\u5c06\u8fd9\u4e9b\u8def **\u589e\u5e7f** \uff08\u610f\u601d\u5c31\u662f\u8d70\u6389\u8fd9\u6761\u8def\uff0c\u5e26\u8d70\u7684\u6d41\u91cf\u80af\u5b9a\u5c31\u662f\u8fd9\u6761\u8def\u7684\u6700\u5c0f\u6d41\u91cf\uff09\u3002\n\n\u5728\u4efb\u610f\u65f6\u523b\uff0c\u7f51\u7edc\u4e2d\u6240\u6709\u8282\u70b9\u4ee5\u53ca\u5269\u4f59\u5bb9\u91cf\u5927\u4e8e 0 \u7684\u8fb9\u6784\u6210\u7684\u5b50\u56fe\u79f0\u4e3a **\u6b8b\u91cf\u7f51\u7edc**\u3002\n\nEK \u7b97\u6cd5\u6bcf\u8f6e\u4f1a\u904d\u5386\u6574\u4e2a\u6b8b\u91cf\u7f51\u7edc\uff0c\u4f46\u53ea\u627e\u51fa\u4e00\u6761\u589e\u5e7f\u8def\uff0c\u56e0\u6b64\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\u3002\u7531\u6b64\u4fbf\u8bde\u751f\u4e86 Dinic\u3002\n\nBFS \u4e2d\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u8282\u70b9\u7684\u5c42\u6b21 $d_x$\uff0c\u8868\u793a $S\\to x$ \u7ecf\u8fc7\u7684\u6700\u5c11\u8fb9\u6570\u3002\u5728\u6b8b\u91cf\u7f51\u7edc\u4e2d\uff0c\u6ee1\u8db3 $d_y=d_x+1$ \u7684\u8fb9 $(x,y)$ \u6784\u6210\u7684\u5b50\u56fe\u662f\u5206\u5c42\u56fe\uff0c\u5176\u663e\u7136\u662f DAG\u3002\n\nDinic \u7b97\u6cd5\u662f\u4e0d\u65ad\u91cd\u590d\u4ee5\u4e0b\u6d41\u7a0b\uff0c\u76f4\u5230 $S$ \u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a\u65e0\u6cd5\u8fbe\u5230 $T$\uff1a\n1. \u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a BFS \u5f97\u5230\u5206\u5c42\u56fe\uff1b\n2. \u5728\u5206\u5c42\u56fe\u4e0a\u8fdb\u884c DFS \u5bfb\u627e\u589e\u5e7f\u8def\uff0c\u56de\u6eaf\u65f6\u66f4\u65b0\u5269\u4f59\u5bb9\u91cf\uff08\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u6bcf\u6761\u8fb9\u53ea\u9700\u8bb0\u5f55\u5269\u4f59\u5bb9\u91cf $c_i$ \u5373\u53ef\uff09\u3002\n\n\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u6709\u4e00\u4e9b\u4f18\u5316\uff1a\n1. \u591a\u8def\u589e\u5e7f\uff1a\u6bcf\u6b21\u627e\u5230\u4e00\u6761\u589e\u5e7f\u8def\u7684\u65f6\u5019\uff0c\u5982\u679c\u6b8b\u4f59\u6d41\u91cf\u6ca1\u6709\u7528\u5b8c\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u6b8b\u4f59\u90e8\u5206\u6d41\u91cf\uff0c\u518d\u627e\u51fa\u4e00\u6761\u589e\u5e7f\u8def\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u4e00\u6b21 DFS \u4e2d\u627e\u51fa\u591a\u6761\u589e\u5e7f\u8def\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u7b97\u6cd5\u7684\u6548\u7387\u3002\n\n2. \u5f53\u524d\u5f27\u4f18\u5316\uff1a\u589e\u5e7f\u65f6\uff0c\u4e00\u6761\u8fb9\u4e0d\u53ef\u80fd\u88ab\u589e\u5e7f\u7b2c\u4e8c\u6b21\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u66f4\u65b0\u90bb\u63a5\u8868\u4e34\u65f6\u8868\u5934\u8df3\u8fc7\u8fd9\u4e9b\u8fb9\u3002\n\n3. \u6ee1\u6d41\u526a\u679d\uff1a\u589e\u5e7f\u65f6\uff0c\u5bf9\u4e8e\u4e00\u6761\u8fb9\u589e\u5e7f\u5931\u8d25\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u5bf9\u5e94\u8282\u70b9\u7684\u5c42\u6570\u8bbe\u7f6e\u4e3a $-1$\uff0c\u8fd9\u6837\u4e0d\u4f1a\u518d\u5bf9\u8fd9\u4e9b\u8fb9\u8fdb\u884c\u589e\u5e7f\u3002\n\n### \u7f51\u7edc\u6d41\u4e0e\u4e8c\u5206\u56fe\u5339\u914d\n\u7f51\u7edc\u6d41\u662f\u6c42\u89e3\u4e8c\u5206\u56fe\u5339\u914d\u95ee\u9898\u7684\u5e38\u7528\u624b\u6bb5\uff0c\u4e5f\u662f\u4e00\u79cd\u901a\u7528\u624b\u6bb5\u3002\u7531\u4e8e\u4e00\u7ec4\u5339\u914d\u662f\u6bcf\u4e2a\u5de6\u90e8\u70b9\u51fa\u4e00\u6761\u8fb9\uff0c\u6bcf\u4e2a\u53f3\u90e8\u70b9\u5165\u4e00\u6761\u8fb9\uff0c\u7b49\u4ef7\u4e8e\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9\u548c\u8d85\u7ea7\u6c47\u70b9 $s,t$\uff0c\u7531 $s$ \u5411\u6240\u6709\u5de6\u90e8\u70b9\u8fde\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u7531\u6240\u6709\u53f3\u90e8\u70b9\u5411 $t$ \u8fde\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u539f\u56fe\u4e2d\u8fb9 $(x,y)$ \u5bf9\u5e94 $x$ \u5411 $y$ \u8fde\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u6c42\u6700\u5927\u6d41\u5373\u4e3a\u6700\u5927\u5339\u914d\u3002\n\n\u7279\u522b\u5730\uff0cDinic \u7b97\u6cd5\u5728\u6c42\u89e3\u4e0a\u8ff0\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u95ee\u9898\u65f6\u7684\u590d\u6742\u5ea6\u4e0a\u754c\u4e3a $O(m\\sqrt n)$\uff0c\u5b9e\u9645\u66f4\u5feb\u3002\n\n## \u5b8c\u6574\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\n#define rep(ii,aa,bb) for(re int ii=aa;ii<=bb;ii++)\n#define Rep(ii,aa,bb) for(re int ii=aa;ii>=bb;ii--)\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int maxn=1e4+5;\nconst ll inf=1ll<<60;\nnamespace IO_ReadWrite{\n\t#define re register\n\t#define gg (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n\tchar buf[1<<21],*p1=buf,*p2=buf;\n\ttemplate <typename T>\n\tinline void read(T &x){\n\t\tx=0;re T f=1;re char c=gg;\n\t\twhile(c>57||c<48){if(c=='-') f=-1;c=gg;}\n\t\twhile(c>=48&&c<=57){x=(x<<1)+(x<<3)+(c^48);c=gg;}\n\t\tx*=f;return;\n\t}\n\tinline void ReadChar(char &c){\n\t\tc=gg;\n\t\twhile(!isalpha(c)) c=gg;\n\t}\n\ttemplate <typename T>\n\tinline void write(T x){\n\t\tif(x<0) putchar('-'),x=-x;\n\t\tif(x>9) write(x/10);\n\t\tputchar('0'+x%10);\n\t}\n\ttemplate <typename T>\n\tinline void writeln(T x){write(x);putchar('\\n');}\n}\nusing namespace IO_ReadWrite;\nint ver[maxn],head[maxn],nxt[maxn],c[maxn],tot=1;\ninline void add(int u,int v,int w){\n\tver[++tot]=v;c[tot]=w;nxt[tot]=head[u];head[u]=tot;\n\tver[++tot]=u;c[tot]=0;nxt[tot]=head[v];head[v]=tot;\n}\nint d[maxn],cur[maxn],n,m,s,t;\ninline bool bfs(){// BFS \u8fdb\u884c\u5206\u5c42 \n\tmemset(d,-1,sizeof(d));\n\tqueue<int> q;\n\tq.push(s);d[s]=1;cur[s]=head[s];\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=head[u];i;i=nxt[i]){\n\t\t\tint v=ver[i];\n\t\t\tif(c[i]&&d[v]==-1){\n\t\t\t\td[v]=d[u]+1;q.push(v);\n\t\t\t\tcur[v]=head[v];\n\t\t\t\tif(v==t) return 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\ninline int dfs(int u,int limit){// DFS \u8fdb\u884c\u589e\u5e7f\n\tif(u==t||limit==0) return limit;\n\tint flow=0; // \u591a\u8def\u589e\u5e7f\n\tfor(int i=cur[u];i&&flow<limit;i=nxt[i]){\n\t\tcur[u]=i;// \u5f53\u524d\u5f27\u4f18\u5316\n\t\tint v=ver[i];\n\t\tif(d[v]==d[u]+1&&c[i]){\n\t\t\tint f=dfs(v,min(c[i],limit-flow));\n\t\t\tif(!f) d[v]=-1;// \u6ee1\u6d41\u526a\u679d\n\t\t\tflow+=f;c[i]-=f;c[i^1]+=f;\n\t\t}\n\t}\n\treturn flow;\n}\ninline ll dinic(){ // \u6c42\u6700\u5927\u6d41\n\tll maxflow=0,flow=0;\n\twhile(bfs()) while(flow=dfs(s,inf)) maxflow+=flow;\n\treturn maxflow;\n}\nint main(){\n\tread(n);read(m);read(s);read(t);\n\tfor(int i=1,u,v,w;i<=m;i++){\n\t\tread(u);read(v);read(w);\n\t\tadd(u,v,w);\n\t}\n\twriteln(dinic());\n\treturn 0;\n}\n```",
        "postTime": 1625280607,
        "uid": 279197,
        "name": "Mars_Dingdang",
        "ccfLevel": 6,
        "title": "\u7f51\u7edc\u6d41"
    },
    {
        "content": "\u4f5c\u4e3a\u4e00\u9053\u6a21\u677f\u9898\uff0c\u9898\u89e3\u600e\u4e48\u53ef\u4ee5\u6ca1\u6709 EK \u7b97\u6cd5\u5462\uff1f\n\nEK \u7b97\u6cd5\u662f\u5bf9 FF \u7b97\u6cd5\u7684\u4e00\u79cd\u6539\u8fdb\uff0c\u8fd9\u4e24\u79cd\u7b97\u6cd5\u7684\u601d\u60f3\u662f\uff1a\u6bcf\u6b21\u5bf9\u7f51\u7edc\u8fdb\u884c\u4e00\u6b21\u904d\u5386\uff0c\u627e\u51fa\u6700\u5c0f\u7684\u6b8b\u91cf\uff08\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\uff09\uff0c\u8fdb\u884c\u589e\u5e7f\u3002\n\nFF \u7b97\u6cd5\u6838\u5fc3\u4ee3\u7801\uff1a\n\n```cpp\nint dfs(int u,int in){\n    if(u==t){\n        ans+=in;\n        flag=1;//\u627e\u5230\u589e\u5e7f\u8def\n        return in;\n    }\n    vis[x]=1;\n    for(int i=fir[u];i;i=nxt[i]){\n        int v=to[i];\n        if(vis[v]||flow[i]==0) continue;\n        int res=dfs(v,min(in,flow[i]));//\u6d41\u91cf\u53d7\u6700\u5c0f\u7684\u8fb9\u7684\u9650\u5236\n        if(flag){\n            flow[i]-=res;\n            flow[i^1]+=res;//\u53cd\u5411\u8fb9\u8fdb\u884c\u52a0\uff0c\u65b9\u4fbf\u8fdb\u884c\u53cd\u6094\u64cd\u4f5c\n            return res;\n        }\n    }\n    return 0;\n}\nvoid ff(){\n    do{\n        memset(vis,0,sizeof(vis));\n        flag=0; \n        dfs(s,INF);\n    }while(flag);\n}\n```\n\u7531\u4e8e FF \u7b97\u6cd5\u6bcf\u6b21\u627e\u5230\u7684\u589e\u5e7f\u8def\u4e0d\u662f\u6700\u77ed\u8def\u5f84\uff0c\u8fd9\u5bfc\u81f4\u4e00\u6761\u8fb9\u6210\u4e3a\u5173\u952e\u8fb9\u7684\u6700\u5927\u6b21\u6570\u4e3a $ \\max \\{c_1,c_2,c_3,... \\ ,c_{m-1},c_m \\} \\div 2$ \uff08 $m$ \u4e3a\u8fb9\u6570\uff0c $c_i$ \u4e3a\u7b2c $i$ \u6761\u8fb9\u7684\u6d41\u91cf\uff09\u3002\u8fd9\u4f1a\u88ab\u6d41\u91cf\u5361\uff0c\u590d\u6742\u5ea6\u5f88\u7cdf\u7cd5\u3002\n\n\u6240\u4ee5 EK \u91c7\u7528\u4e86 BFS \u6765\u5bfb\u627e\u589e\u5e7f\u8def\uff0c\u8fd9\u786e\u4fdd\u4e86\u6bcf\u6b21\u627e\u5230\u7684\u589e\u5e7f\u8def\u90fd\u662f\u6700\u77ed\u8def\u5f84\u3002\u4f7f\u5f97\u590d\u6742\u5ea6\u4e0b\u964d\u3002\n\n\u590d\u6742\u5ea6\u5206\u6790\uff1a\uff08\u5b9a\u4e49\u5173\u952e\u8fb9\u4e3a\uff1a\u8be5\u8fb9\u7684\u6b8b\u91cf\u4e3a\u589e\u5e7f\u8def\u7684\u6b8b\u91cf\u7684\u8fb9\uff09\n\n\u4ece\u8fb9 $(u,v)$ \u6210\u4e3a\u5173\u952e\u8fb9\u5230\u4e0b\u4e00\u6b21\u6210\u4e3a\u5173\u952e\u8fb9\uff0c\u539f\u7ed3\u70b9\u5230 $u$ \u7684\u8ddd\u79bb\u81f3\u5c11\u589e\u52a0 $2$ \u4e2a\u5355\u4f4d\u3002\u7531\u4e8e\u4ece\u6e90\u7ed3\u70b9 $s$ \u5230\u7ed3\u70b9 $u$ \u7684\u7684\u6700\u77ed\u8def\u5f84\u4e2d\u95f4\u7ed3\u70b9\u4e0d\u53ef\u80fd\u5305\u62ec $s,u,t$ \uff0c\u4ece $s$ \u5230 $u$ \u7684\u6700\u77ed\u8def\u5f84\u6700\u957f\u4e3a $n-2$ \u3002\n\n\u4e00\u6761\u8fb9\u6210\u4e3a\u5173\u952e\u8fb9\u7684\u6700\u5927\u53ef\u80fd\u662f $(n-2) \\div 2$ \uff0c\u4e00\u5171\u6709 $m$ \u6761\u8fb9\uff0c\u5173\u952e\u8fb9\u603b\u6570\u4e3a $O(nm)$ \uff0cBFS \u590d\u6742\u5ea6\u4e3a $O(m)$ \uff0c\u6240\u4ee5 EK \u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u4e0a\u754c\u662f $O(nm^2)$ \u3002\n\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#define int long long\nusing namespace std;\nconst int maxn=105;\nconst int inf=0x7fffffff;\nint r[maxn][maxn],pre[maxn],m,n;\nbool vis[maxn];\nbool bfs(int s,int t) {\n\tint u;\n\tqueue<int>q;\n\tmemset(pre,0,sizeof(pre));\n\tmemset(vis,0,sizeof(vis));\n\tpre[s]=s;\n\tvis[s]=true;\n\tq.push(s);\n\twhile(!q.empty()) {\n\t\tu=q.front();\n\t\tq.pop();\n\t\tfor(int i=1; i<=n; i++) {\n\t\t\tif(r[u][i]>0&&!vis[i]) {//\u6709\u6d41\u91cf\u624d\u80fd\u6d41 \n\t\t\t\tpre[i]=u;\n\t\t\t\tvis[i]=true;\n\t\t\t\tif(i==t) return true;\n\t\t\t\tq.push(i);\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint ek(int s,int t) {\n\tint flow=0,d;\n\twhile(bfs(s,t)) {\n\t\td=inf;\n\t\tfor(int i=t; i!=s; i=pre[i])\n\t\t\td=(d<r[pre[i]][i]?d:r[pre[i]][i]);//\u6b8b\u91cf\u53d6\u51b3\u4e8e\u6700\u5c0f\u8fb9\u7684\u6d41\u91cf \n\t\tfor(int i=t; i!=s; i=pre[i]) {\n\t\t\tr[pre[i]][i]-=d;\n\t\t\tr[i][pre[i]]+=d;//\u53cd\u8fb9\u6dfb\u52a0\u6d41\u91cf\uff0c\u4ee5\u8fdb\u884c\u53cd\u6094\u64cd\u4f5c\u3002 \n\t\t}\n\t\tflow+=d;\n\t}\n\treturn flow;\n}\nsigned main() {\n\tint s,t,u,v,w;\n\tscanf(\"%lld%lld%lld%lld\",&n,&m,&s,&t);\n\tfor(int i=1; i<=m; i++) {\n\t\tscanf(\"%lld%lld%lld\",&u,&v,&w);\n\t\tr[u][v]+=w;//\u91cd\u8fb9\u5904\u7406 \n\t}\n\tprintf(\"%lld\\n\",ek(s,t));\n\treturn 0;\n}\n```\n",
        "postTime": 1640325895,
        "uid": 434929,
        "name": "Usada_Pekora",
        "ccfLevel": 7,
        "title": "B3607 \u7f51\u7edc\u6d41\u6a21\u677f"
    },
    {
        "content": "# B3607 \u7f51\u7edc\u6d41 2\n\n\u8fd9\u662f\u4e00\u7bc7 ISAP \u9898\u89e3\u3002\n\n## ISAP \n\n\u4f55\u4e3a ISAP\uff1f\n\nISAP \u7b97\u6cd5\u548c EK\u3001FF\u3001dinic \u8fd9\u4e9b\u7b97\u6cd5\u4e00\u6837\uff0c\u90fd\u5c5e\u4e8e\u589e\u5e7f\u8def\u7b97\u6cd5\u3002\u4e5f\u5c31\u662f\u8bf4\u5176\u5b9e\u5979\u4eec\u672c\u8eab\u7684\u601d\u8def\u57fa\u672c\u662f\u4e00\u81f4\u7684\uff0c\u53ea\u4e0d\u8fc7\u5b9e\u73b0\u4e0d\u540c\u3002\n\nISAP \u7684\u5168\u540d\u4e3a Improved Shortest Augumenting Path\uff0c\u8fd9\u4e2a Improved \u5c31\u4f53\u73b0\u5728\u5979\u76f8\u6bd4\u4e8e Dinic\uff0c\u53ea\u9700\u8981\u4e00\u6b21 BFS\u3002\n\n\u8fd9\u91cc\u5c31\u4e0d\u518d\u5c55\u5f00\u5173\u4e8e Dinic \u7684\u8fc7\u7a0b\u63cf\u8ff0\uff0c\u4f46\u7531\u4e8e\u4e0b\u6587\u6d89\u53ca\u5230 Dinic\uff0c\u8fd9\u91cc\u4ecd\u5efa\u8bae\u5927\u5bb6\u5728\u5b66\u4e60 ISAP \u4e4b\u524d\u5148\u4fdd\u8bc1\u5df2\u7ecf\u5b66\u8fc7\u4e86 Dinic \u7684\u6d41\u7a0b\uff0c\u5e76\u4e14\u5df2\u7ecf\u81ea\u5df1\u5199\u8fc7\u4e86\u4e00\u904d\u4ee3\u7801\uff0c\u4e0b\u9762\u7684\u53d9\u8ff0\u4e2d\u6211\u5c31\u5047\u5b9a\u5927\u5bb6\u90fd\u4f1a Dinic \u7f62\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa [Oi-Wiki](https://oi-wiki.net/graph/flow/max-flow/#dinic) \u4ee5\u4f9b\u5927\u5bb6\u5148\u590d\u4e60\u4e00\u4e0b Dinic \u3002\n\n## ISAP \u7684\u8fc7\u7a0b\n\n1. \u4ece\u6c47\u70b9 $t$ \u5230\u6e90\u70b9 $s$ \u8dd1**\u4e00\u6b21** BFS \u8fdb\u884c\u6df1\u5ea6\u6807\u8bb0\n\n2. \u4ece\u6e90\u70b9 $s$ \u5f00\u59cb\u8dd1 DFS \n\n\u7b2c\u4e00\u6b65\uff0c\u548c Dinic \u7684\u4ece $s$ \u5230 $t$ \u8dd1\u6b63\u597d\u76f8\u53cd\u3002\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u4e0d\u518d\u53bb\u53cd\u590d\u7684\u901a\u8fc7 BFS \u5bf9\u56fe\u8fdb\u884c\u5206\u5c42\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u628a Dinic \u7684\u4ee3\u7801\u8fdb\u884c\u4e00\u5b9a\u7684\u4fee\u6539\u5c31\u80fd\u5b8c\u6210 ISAP \u7684\u7b2c\u4e00\u6b65\uff1a\n\n```cpp\nstruct node\n{\n    LL to,nex,val;\n}\n\nr[MXX<<1];\n\nLL head[NXX],cnt(1),dis[NXX],now[NXX],n,m,maxflow,s,t,gap[NXX];\n\nqueue<LL> qwq;\n\nI void BFS()\n{\n    qwq.push(t);dis[t]=0;now[t]=head[t];gap[0]=1;\n    while(qwq.size())\n    {\n        LL x=qwq.front();qwq.pop();\n        for(R LL i=head[x];i;i=r[i].nex)\n        {\n            if(!dis[r[i].to] and r[i].to!=t)\n            {\n                LL y=r[i].to;\n                qwq.push(y);\n                now[y]=head[y];\n                dis[y]=dis[x]+1;\n                ++gap[dis[y]];\n            }\n        }\n    }\n}\n```\n\n\u8fd9\u91cc\u6709\u4e86\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4 `gap[\\ ]`\uff0c`gap[i]` \u4ee3\u8868\u7684\u610f\u4e49\u662f**\u6df1\u5ea6\u4e3a $i$ \u7684\u7ed3\u70b9\u7684\u6570\u91cf**\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e3b\u8981\u7684\u4f18\u5316\u3002\n\n\u56e0\u4e3a\u7b2c\u4e8c\u6b65\u4f9d\u7136\u662f DFS \u53bb\u8d70\u589e\u5e7f\u8def\uff0c\u4e8e\u662f\u524d\u9762\u7684\u90e8\u5206\u548c Dinic \u662f\u4e00\u6837\u7684\uff0c\u53ea\u662f\u6700\u540e\u7a0d\u6709\u4e0d\u540c\uff1a\n\n```cpp\nLL ISAP(LL x,LL flow)\n{\n    if(x==t) Heriko flow;\n    LL rst=flow,k,i,y,mindis=inf;\n    for(i=now[x];i and rst;i=r[i].nex)\n    {\n        y=r[i].to;\n        if(r[i].val>0)\n        {\n            mindis=Hmin(mindis,dis[y]);\n            if(dis[y]+1==dis[x])\n            {\n                k=ISAP(y,Hmin(rst,r[i].val));\n                r[i].val-=k;\n                r[i^1].val+=k;\n                rst-=k;\n            }\n        }\n        \n    }\n    if(!rst) Heriko flow;\n    //\u53ef\u4ee5\u770b\u5230\u4ece\u8fd9\u91cc\u5f80\u4e0a\u7684\u90e8\u5206\u548c Dinic \u7684 DFS \u57fa\u672c\u4e00\u81f4\n    --gap[dis[x]];\n    if(!gap[dis[x]]) dis[s]=n+1;\n    if(mindis==inf) dis[x]=n;\n    else dis[x]=mindis+1;\n    ++gap[dis[x]];\n    Heriko flow-rst;\n}\n```\n\u524d\u534a\u90e8\u5206\u7684 DFS \u548c Dinic \u57fa\u672c\u662f\u4e00\u81f4\u7684\uff0c\u53ea\u4e0d\u8fc7\u5bf9\u5c42\u7ea7 `dis` \u7684\u5224\u65ad\u4ece `dis[x]+1==dis[y]` \u6539\u4e3a\u4e86 `dis[y]+1==dis[x]`\uff0c\u8fd9\u53ea\u662f\u56e0\u4e3a\u6211\u4eec BFS \u5206\u5c42\u7684\u987a\u5e8f\u4e0d\u540c\u4e86\u800c\u5df2\u3002\n\n\u771f\u6b63\u53d8\u5316\u7684\u5c31\u662f for \u5faa\u73af\u540e\u9762\u7684\u4e00\u6bb5\uff08\u5373\u4e0a\u9762\u4ee3\u7801\u4e2d\u6ce8\u91ca\u4ee5\u4e0b\u7684\u90e8\u5206\uff09\u3002\n\n\u9996\u5148\uff0c\u65e2\u7136\u7a0b\u5e8f\u80fd\u591f\u8fd0\u884c\u5230\u8fd9\u91cc\uff0c\u8bf4\u660e\u672c\u6b21 DFS \u7684\u8d77\u70b9 $x$ \u76f8\u8fde\u7684\u70b9**\u90fd\u5df2\u7ecf\u8d70\u8fc7\u4e86\u4e00\u904d\u5e76\u4e14\u6d41\u91cf\u8fd8\u6709\u5269\u4f59**\u3002\u90a3\u4e48\u6b64\u65f6\u6211\u4eec\u5bf9 $x$ \u7684\u6df1\u5ea6\u8fdb\u884c\u4fee\u6539\uff0c\u7136\u540e\u66f4\u65b0 `gap[dis[x]]`\u3002\n\n\u56e0\u4e3a ISAP \u7684 DFS \u662f\u6309\u7167\u6df1\u5ea6\u8d70\u7684\uff0c\u6240\u4ee5\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u6df1\u5ea6\u4e00\u5b9a\u662f\u8fde\u7eed\u7684\u624d\u80fd\u5230\u8fbe\u6df1\u5ea6\u4e3a 0 \u7684 $t$\uff0c\u5982\u679c\u4e2d\u95f4\u6709\u4efb\u610f\u4e00\u5c42\u7684\u70b9\u4e0d\u5b58\u5728\uff0c\u6211\u4eec\u90fd\u65e0\u6cd5\u5230\u8fbe $t$\u3002\u56e0\u6b64\u5f53\u4fee\u6539\u540e\u7684 `gap[dis[x]]==0` \u7684\u65f6\u5019\u8bf4\u660e\u8fd9\u4e2a\u6df1\u5ea6\u5df2\u7ecf\u6ca1\u6709\u70b9\u4e86\uff0c\u6211\u4eec\u76f4\u63a5\u7ed3\u675f\u672c\u6b21 DFS\uff0c\u8fd9\u6837\u80fd\u591f\u6709\u6548\u7684\u589e\u52a0\u6211\u4eec\u7b97\u6cd5\u7684\u6548\u7387\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e9b\u56fe\u5e2e\u52a9\u7406\u89e3\uff1a\n\n![](https://pic.imgdb.cn/item/60e436b15132923bf8b70806.png)\n\nISAP \u7684\u90a3\u4e00\u6b21 BFS \u4f1a\u5c06\u6b64\u56fe\u5206\u5c42\uff08\u7ea2\u8272\uff09\uff1a\n\n![](https://pic.imgdb.cn/item/60e4372e5132923bf8b9174f.png)\n\n\u663e\u7136\u6211\u4eec\u53ea\u80fd\u8d70\u6df1\u5ea6\u8fde\u7eed\u7684\u4e0b\u8def\uff1a\n\n![](https://pic.imgdb.cn/item/60e43ade5132923bf8c838e7.png)\n\n\u7136\u540e\u6211\u4eec\u66f4\u65b0\u7ed3\u70b9\u7684\u6df1\u5ea6\u548c\u8fb9\u7684\u5bb9\u91cf\uff0c\u5f97\u5230\u65b0\u56fe\uff1a\n\n![](https://pic.imgdb.cn/item/60e43ade5132923bf8c838bd.png)\n\n\u7136\u540e\u8d70\u4e0a\u8def\uff1a\n\n![](https://pic.imgdb.cn/item/60e43ade5132923bf8c838ac.png)\n\n\u7136\u540e\u6211\u4eec\u66f4\u65b0\u6df1\u5ea6\u4fe1\u606f\u548c\u8fb9\u7684\u5bb9\u91cf\uff0c\u53d1\u73b0\u6b64\u65f6\u8fd9\u5f20\u56fe\u51fa\u73b0\u4e86\u65ad\u5c42\uff0c\u505c\u6b62 DFS\u3002\n\n![](https://pic.imgdb.cn/item/60e43ade5132923bf8c8389e.png)\n\n![](https://pic.imgdb.cn/item/60e43ae15132923bf8c84581.png)\n\nISAP \u8d70\u8fd9\u4e2a\u8fc7\u7a0b\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u662f\u5982\u679c\u662f Dinic \u5c31\u9700\u8981\u4e09\u904d BFS\uff0c\u4e24\u904d DFS\uff01\n\n\u4e5f\u5c31\u662f\u8bf4 ISAP \u5229\u7528\u6df1\u5ea6\u66f4\u65b0\u5c11\u4e86\u6574\u6574\u4e24\u6b21\u5206\u5c42\u8fc7\u7a0b\uff01\n\n## Code\n\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <math.h>\n#include <algorithm>\n#include <string.h>\n#include <queue>\n#define Heriko return\n#define Deltana 0\n#define Romanno 1\n#define S signed\n#define LL long long\n#define R register\n#define I inline\n#define CI const LL\n#define mst(a, b) memset(a, b, sizeof(a))\n#define ON std::ios::sync_with_stdio(false)\nusing namespace std;\n\ntemplate<typename J>\nI void fr(J &x)\n{\n    short f=1;\n    char c=getchar();\n    x=0;\n    while(c<'0' or c>'9')\n    {\n        if(c=='-') f=-1;\n        c=getchar();\n    }\n    while (c>='0' and c<='9') \n    {\n        x=(x<<3)+(x<<1)+c-'0';\n        c=getchar();\n    }\n    x*=f;\n}\n\ntemplate<typename J>\nI void fw(J x,bool k)\n{\n    if(x<0) putchar('-'),x=-x;\n    static short stak[35];\n    short top=0;\n    do\n    {\n        stak[top++]=x%10;\n        x/=10;\n    }\n    while(x);\n    while(top) putchar(stak[--top]+'0');\n    if(k) putchar('\\n');\n    else putchar(' ');\n}\n\ntemplate<typename J>\nI J Hmin(J x,J y) {Heriko x<y?x:y;}\n\ntemplate<typename J>\nI void Clear(queue<J> &x) {while(x.size()) x.pop();}\n\nCI inf=998244353,MXX=5005,NXX=205;\n\nstruct node\n{\n    LL to,nex,val;\n}\n\nr[MXX<<1];\n\nLL head[NXX],cnt(1),dis[NXX],now[NXX],n,m,maxflow,s,t,gap[NXX];\n\nqueue<LL> qwq;\n\nI void Ass_we_can(LL x,LL y,LL z)\n{\n    r[++cnt].to=y;r[cnt].nex=head[x];r[cnt].val=z;head[x]=cnt;\n    r[++cnt].to=x;r[cnt].nex=head[y];r[cnt].val=0;head[y]=cnt;\n}\n\nI void BFS()\n{\n    qwq.push(t);dis[t]=0;now[t]=head[t];gap[0]=1;\n    while(qwq.size())\n    {\n        LL x=qwq.front();qwq.pop();\n        for(R LL i=head[x];i;i=r[i].nex)\n        {\n            if(!dis[r[i].to] and r[i].to!=t)\n            {\n                LL y=r[i].to;\n                qwq.push(y);\n                now[y]=head[y];\n                dis[y]=dis[x]+1;\n                ++gap[dis[y]];\n            }\n        }\n    }\n}\n\nLL ISAP(LL x,LL flow)\n{\n    if(x==t) Heriko flow;\n    LL rst=flow,k,i,y,mindis=inf;\n    for(i=now[x];i and rst;i=r[i].nex)\n    {\n        y=r[i].to;\n        if(r[i].val>0)\n        {\n            mindis=Hmin(mindis,dis[y]);\n            if(dis[y]+1==dis[x])\n            {\n                k=ISAP(y,Hmin(rst,r[i].val));\n                r[i].val-=k;\n                r[i^1].val+=k;\n                rst-=k;\n            }\n        }\n    }\n    if(!rst) Heriko flow;\n    --gap[dis[x]];\n    if(!gap[dis[x]]) dis[s]=n+1;\n    if(mindis==inf) dis[x]=n;\n    else dis[x]=mindis+1;\n    ++gap[dis[x]];\n    Heriko flow-rst;\n}\n\nLL z,y,x,flow;\n\nS main()\n{\n    fr(n),fr(m),fr(s),fr(t);\n    for(R LL i=1;i<=m;++i)\n    {\n        fr(z),fr(y),fr(x);\n        Ass_we_can(z,y,x);\n    }\n    BFS();\n    while(dis[s]<n)\n    {\n        for(R LL i=1;i<=n;++i) now[i]=head[i];\n        maxflow+=ISAP(s,inf);\n    }\n    fw(maxflow,1);\n    Heriko Deltana;\n}\n\n```\n\n## \u590d\u6742\u5ea6\u76f8\u5173\n\nISAP \u548c Dinic \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u754c\u662f\u4e00\u6837\u7684\uff0c\u90fd\u662f $O(n^2m)$\uff0c\u4f46\u662f\u8fd9\u4e2a\u4e0a\u754c\u76f8\u5bf9\u5bbd\u677e\uff0c\u5e73\u5747\u60c5\u51b5\u4e0b\u8fbe\u4e0d\u5230\u8fd9\u4e2a\u590d\u6742\u5ea6\u3002\n\n## End\n\n\u672c\u4eba\u53ef\u80fd\u63cf\u8ff0\u6b20\u4f73\uff0c\u5e0c\u671b\u5927\u5bb6\u591a\u591a\u5305\u6db5\u3002\n\n\u7b2c\u4e8c\u6b21\u4fee\u6539\u7684\u65f6\u5019\u9898\u89e3\u4ea4\u9519\u4e86\u9898\uff0c\u5728\u8fd9\u91cc\u5bf9\u7ba1\u7406\u9020\u6210\u7684\u9ebb\u70e6\u81f4\u6b49\uff01\uff01\n\n\u7b2c\u4e09\u6b21\u4fee\u6539\u52a0\u5165\u4e86\u4e00\u4e9b\u56fe\u7247\u4ee5\u5e2e\u52a9\u7406\u89e3\u3002\n\n\u7b2c\u56db\u3001\u4e94\u6b21\u4fee\u6539\u6570\u5b66\u516c\u5f0f\u76f8\u5173\u4ee5\u7b26\u5408\u9898\u89e3\u6392\u7248\u683c\u5f0f\uff0c\u8f9b\u82e6\u4e86\u7ba1\u7406\u5927\u5927\u8fd9\u4e48\u8ba4\u771f\u5ba1\u6838\n\n### \u53c2\u8003\u8d44\u6599\n\n* [\u7a76\u7ea7\u7684\u6700\u5927\u6d41\u7b97\u6cd5\uff1aISAP\u4e0eHLPP](https://www.luogu.com.cn/blog/ONE-PIECE/jiu-ji-di-zui-tai-liu-suan-fa-isap-yu-hlpp) \u2014\u2014 \u94b1\u9038\u51e1",
        "postTime": 1625468048,
        "uid": 407417,
        "name": "HerikoDeltana",
        "ccfLevel": 4,
        "title": "B3607-ISAP"
    }
]