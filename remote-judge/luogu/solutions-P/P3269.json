[
    {
        "content": "n<=4\uff0cn!\u679a\u4e3e\u653e\u7f6e\u987a\u5e8f\u3002\n\n\u6700\u5927\u503c:\n\n\u8981\u5c3d\u91cf\u5c11\u4ea4\u3002\n\n\u7b2c\u4e00\u4e2a\u4e32\u5e94\u8be5\u653e\u7684\u5c3d\u91cf\u524d\u9762\u3002\n\n\u7b2c\u4e8c\u4e2a\u4e32\u5f00\u5934\u5982\u679c\u8ddf\u7b2c\u4e00\u4e2a\u4e32\u4e0d\u4ea4\uff0c\u5e94\u8be5\u653e\u5728\u5c3d\u91cf\u524d\u9762\uff1b\n\n\u5982\u679c\u8ddf\u7b2c\u4e00\u4e2a\u4e32\u4ea4\uff0c\u5e94\u8be5\u653e\u5728\u5c3d\u91cf\u540e\u9762\uff0c\u56e0\u4e3a\u5982\u679c\u628a\u524d\u4e24\u4e2a\u4e32\u770b\u4f5c\u4e00\u4e2a\u6574\u4f53\uff0c\u8fd9\u6837\u4f1a\u6700\u957f\u3002\n\n\u540e\u9762\u4e5f\u4e00\u6837\u3002\n\n\u6700\u5c0f\u503c:\n\n\u7b2c\u4e00\u4e2a\u4e32\u5982\u679c\u4e0d\u9009\u62e9\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u653e\uff0c\u5c31\u662f\u4e00\u4e2a2->l,1->n\u7684\u5b50\u95ee\u9898\u3002\n\n\u5982\u679c\u9009\u62e9\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u653e\uff0c\n\n\u5982\u679c\u7b2c\u4e8c\u4e2a\u4e32\u4e0d\u4ea4\u7b2c\u4e00\u4e2a\u4e32\uff0c\u5c31\u662f\u672b\u5c3e+1->l,2->n\u7684\u4e00\u4e2a\u5b50\u95ee\u9898\u3002\n\n\u5426\u5219\u7b2c\u4e8c\u4e2a\u4e32\u5e94\u8be5\u653e\u7684\u5c3d\u91cf\u524d\u9762\uff0c\u56e0\u4e3a\u5982\u679c\u628a\u524d\u4e24\u4e2a\u4e32\u770b\u4f5c\u4e00\u4e2a\u6574\u4f53\uff0c\u8fd9\u6837\u4f1a\u6700\u77ed\u3002\n\n\u540e\u9762\u7684\u4e5f\u4e00\u6837\u3002\n\ndp,\u72b6\u6001\u6570O(nl)\uff0c\u8f6c\u79fbO(1)\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nvoid chmax(int &x,int y) { if(x<y)x=y; }\nvoid chmin(int &x,int y) { if(x>y)x=y; }\n#define N 5\n#define L 10005\nchar s[L];int l;\nchar q[1003];int m;\nint pre[N][L],next[N][L],len[N],n;//pre:<=\u7b2c\u4e00\u4e2a\u5f00\u5934\u5339\u914d next:>=\u7b2c\u4e00\u4e2a\u5f00\u5934\u5339\u914d \nint id[N],*pr[N],*nex[N],le[N];\nint fail[L],i,j;\nvoid init()\n{\n    for (i=2;i<=m;++i)\n    {\n        char now=q[i];\n        j=fail[i-1];\n        while (j&&q[j+1]!=now) j=fail[j];\n        fail[i]=(q[j+1]==now)?j+1:0;\n    }\n}\n\nbool mark[L];\nvoid ins(int *pre,int *next)\n{\n    i=0;\n    for (j=1;j<=l;++j)\n    {\n        char now=s[j];\n        while (i&&q[i+1]!=now) i=fail[i];\n        if (q[i+1]==now) \n        {\n            ++i;\n            if (i==m) mark[j-m+1]=1;\n        }\n    }\n    for (i=1;i<=l;++i) pre[i]=mark[i]?i:pre[i-1];\n    pre[i]=pre[i-1];\n    next[l+1]=0;\n    for (i=l;i;--i) \n    if (mark[i]) {next[i]=i;mark[i]=0;}\n    else next[i]=next[i+1];\n}\n\nint f[L][N];bool vis[L][N];\nbool *st[N*L];int top;\nint dp(int first,int num)//first:\u5b57\u7b26\u4e32=[first..l] num:\u7b2c\u51e0\u4e2a\u5b50\u4e32   \n{\n    if (num>n) return 0;\n    first=nex[num][first];\n    int &ans=f[first][num];\n    if (*(st[top+1]=&vis[first][num])) return ans;*st[++top]=1;\n    ans=dp(first+1,num); \n    int last=first+le[num],x0=first;//x0\u662fnum-1\u7684\u5f00\u5934 \n    while ((++num)<=n)\n    {\n        chmin(ans,dp(last,num)+last-first);//\u7b2cnum\u4e2a\u9009\u62e9\u4e0d\u4ea4 \n        int x=nex[num][first];\n        if (x<x0||x>=last) return ans;\n        x0=x;\n        chmax(last,x+le[num]);//\u9009\u62e9\u4ea4\n    }\n    chmin(ans,last-first);\n    return ans;\n}\n\nint get(int first,int num)\n{\n    if (num>n) return 0;\n    first=nex[num][first];\n    if(!first) return -L;\n    int last=first+le[num],x0=first,ans=-L;\n    while ((++num)<=n)\n    {\n      chmax(ans,get(last,num)+last-first); //\u4e0d\u4ea4 \n      int x=pr[num][last];//\u4ea4:\u5c3d\u91cf\u540e\u9762 \n      if (x<x0||x>=last) return ans;\n      x0=x;\n      chmax(last,x+le[num]);\n    }\n    return max(ans,last-first);\n} \n\nint main()\n{\n    freopen(\"1.in\",\"r\",stdin);freopen(\"1.out\",\"w\",stdout);\n    for (i=1;i<=4;++i) { vis[0][i]=1;f[0][i]=L; }\n    int tt,i,j;scanf(\"%d\",&tt);\n    while (tt--)\n    {\n        scanf(\"%s\",s+1);l=strlen(s+1);\n        scanf(\"%d\",&n);\n        for (i=1;i<=n;++i) \n        {\n            scanf(\"%s\",q+1);len[i]=m=strlen(q+1);\n            init();\n            ins(pre[i],next[i]);\n        }\n        for (i=1;i<=n;++i) id[i]=i;\n        int ans1=L,ans2=0;\n        do\n        {\n            for (i=1;i<=n;++i) {pr[i]=pre[id[i]];nex[i]=next[id[i]];le[i]=len[id[i]];}\n            chmin(ans1,dp(1,1));\n            for (;top;--top) *st[top]=0;\n            chmax(ans2,get(1,1));\n        }while (next_permutation(id+1,id+n+1));\n        printf(\"%d %d\\n\",ans1,ans2);\n    }\n}\n```",
        "postTime": 1487409256,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3269 \u3010[JLOI2016]\u5b57\u7b26\u4e32\u8986\u76d6\u3011"
    },
    {
        "content": "> *II. [P3269 [JLOI2016]\u5b57\u7b26\u4e32\u8986\u76d6](https://www.luogu.com.cn/problem/P3269)\n>\n> \u6458\u81ea [\u8d2a\u5fc3\u4e13\u9898](https://www.cnblogs.com/alex-wei/p/greedy.html) \u7b2c\u4e09\u90e8\u5206\u4f8b\u9898 II.\n\n\u795e\u4ed9\u601d\u7ef4\u9898\u3002**\u4e00\u4e2a\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u975e\u5e38\u4f18\u79c0\u7684\u89e3\u6cd5**\u3002\n\n\u663e\u7136\u5bf9\u4e8e\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u9700\u8981\u5206\u5f00\u8ba1\u7b97\u3002\u9996\u5148\u6211\u4eec\u6c42\u51fa\u4e00\u4e9b\u57fa\u7840\u7684\u4e1c\u897f\u8f85\u52a9\u89e3\u9898\uff1a$n$ \u4e2a\u5b50\u4e32 $s_i$ \u7684 next \u6570\u7ec4\uff08KMP\uff09\u4ee5\u53ca\u4e0e\u6bcd\u4e32 $T$ \u5728\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u5339\u914d\u60c5\u51b5\u3002\u8fd9\u4e2a\u53ef\u4ee5\u5728 $\\mathcal{O}(nL)$ \u7684\u65f6\u95f4\u5185\u9884\u5904\u7406\u51fa\u6765\u3002\n\n### \u6700\u5927\u503c\n\n\u9047\u5230\u8fd9\u79cd\u9898\u76ee\u6211\u4eec\u4f3c\u4e4e\u65e0\u4ece\u4e0b\u624b\uff0c\u90a3\u4e48\u5c1d\u8bd5\u628a $n=4$ \u4f5c\u4e3a\u7a81\u7834\u53e3\u3002\u8003\u8651 $n!$ \u679a\u4e3e\u94a6\u5b9a\u6bcf\u4e2a\u5b57\u7b26\u4e32\u51fa\u73b0\u4f4d\u7f6e\u6309\u5f00\u5934\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\uff0c\u90a3\u4e48\u4e00\u4e2a\u8d2a\u5fc3\u7684\u60f3\u6cd5\u662f\u628a\u51fa\u73b0\u987a\u5e8f\u5728\u524d\u9762\u7684\u5b57\u7b26\u4e32\u5c3d\u91cf\u5f80\u524d\u653e\u3002\u4f46\u8fd9\u6837\u6709\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5728\u653e\u7b2c $i$ \u4e2a\u5b57\u7b26\u4e32\u65f6\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u662f\u5426\u4e0e $s_{i-1}$ \u91cd\u53e0\uff0c\u56e0\u4e3a\u4e24\u79cd\u60c5\u51b5\u90fd\u6709\u53ef\u80fd\u6210\u4e3a\u6700\u4f18\u89e3\uff08\u53cd\u4f8b\u5bb9\u6613\u4e3e\u51fa\uff09\u3002\u4f46\u82e5\u786e\u5b9a\u4e86\u662f\u54ea\u79cd\u60c5\u51b5\uff0c\u8d2a\u5fc3\u7b56\u7565\u5c31\u4fdd\u8bc1\u4e86\u65b9\u6848\u552f\u4e00\uff1a\u82e5\u4e0d\u91cd\u53e0\uff0c\u5219\u8d8a\u5f80\u524d\u653e\u8d8a\u597d\uff08\u7ed9\u5269\u4e0b\u6765\u7684\u5b57\u7b26\u4e32\u7559\u8db3\u7a7a\u95f4\uff09\uff1b\u82e5\u91cd\u53e0\u5219\u8d8a\u5f80\u540e\u653e\u8d8a\u597d\uff08\u56e0\u4e3a\u4e0d\u52a3\uff09\u3002\u56e0\u6b64\u518d $2^{n-1}$ \u679a\u4e3e\u76f8\u90bb\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u91cd\u53e0\u5373\u53ef\u3002\u6ce8\u610f\u7edf\u8ba1\u7b54\u6848\u662f\u4e0d\u5e94\u53ea\u5173\u6ce8\u524d\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u56e0\u4e3a\u53ef\u80fd\u51fa\u73b0 $l_1<l_2<r_2<l_3<r_3<r_1$ \u7684\u60c5\u51b5\uff0c\u5176\u4e2d $l_i,r_i$ \u662f $s_i$ \u5728 $T$ \u4e2d\u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u56e0\u6b64\u9700\u8bb0\u5f55\u7684\u662f\u5f53\u524d\u6240\u6709\u5b57\u7b26\u4e32\u7684\u53f3\u7aef\u70b9\u6700\u5927\u503c\u5373 $\\max r_i$\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n!2^nnL)$\u3002\n\n\u5f53\u7136\u53ef\u4ee5\u66f4\u4f18\uff1a\u7528 $\\log$ \u7ea7\u522b\u7684\u67e5\u627e\u5373 `lower_bound` \u4ee3\u66ff\u7ebf\u6027\u67e5\u627e\u5373\u53ef\u505a\u5230 $\\mathcal{O}(nL+n!2^nn\\log L)$\u3002\n\n### \u6700\u5c0f\u503c\n\n\u4e00\u4e2a\u663e\u7136\u7684\u60f3\u6cd5\u662f\u820d\u5f03\u6240\u6709\u88ab\u5176\u5b83\u5b57\u4e32\u8986\u76d6\u7684\u5b50\u4e32\uff0c\u82e5\u76f8\u540c\u5219\u4ec5\u4fdd\u7559\u4e00\u4e2a\uff0c\u56e0\u4e3a\u8981\u4f7f\u7b54\u6848\u6700\u5c0f\u8ba9\u5176\u88ab\u5b8c\u5168\u8986\u76d6\u4e00\u5b9a\u6700\u4f18\u3002\u90a3\u4e48\u5269\u4e0b\u6765\u7684\u5b50\u4e32\u5c31\u4e00\u5b9a\u6ee1\u8db3\u82e5 $l_i<l_j$ \u5219\u4e00\u5b9a\u6709 $r_i<r_j$\uff0c\u8fd9\u662f\u5f88\u5f3a\u7684\u4e00\u4e2a\u6027\u8d28\uff0c\u5e76\u4e14\u7ed3\u5408\u6700\u4f18\u5316\u7684\u9650\u5236\uff0c\u7ed9\u4e88\u6211\u4eec\u52a8\u6001\u89c4\u5212\u7684\u601d\u60f3\uff1a\u8bbe $f_{i,S}$ \u8868\u793a\u524d $i$ \u4f4d\u653e\u7f6e\u4e86\u96c6\u5408 $S$ \u5185\u7684\u5b50\u4e32\u7684\u6700\u5c0f\u503c\u4e14\u7b2c $i$ \u4f4d\u88ab\u8986\u76d6\uff0c\u8f6c\u79fb\u65f6\u679a\u4e3e $p\\in S$ \u4e14 $s_p$ \u4e0e $T$ \u5728 $i$ \u5904\u5339\u914d\u3002\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff0c\u4e00\u79cd\u662f\u4e0e\u5df2\u653e\u7f6e\u5b57\u7b26\u4e32\u6709\u4ea4\u96c6\uff0c\u53e6\u4e00\u79cd\u662f\u4e0d\u4ea4\uff0c\u7efc\u5408\u4e00\u4e0b\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n$$\n\\mathrm{checkmin}(f_{i,S},\\min_{p\\in S}\\min_{0\\leq j<i}f_{j,S\\backslash p}+\\min(len_p,i-j))\n$$\n\u5f53 $j>i-len_p$ \u65f6 $i-j<len_p$ \u6545\u8fdb\u884c\u8d21\u732e\u4e3a $len_p$ \u7684\u8f6c\u79fb\u4e0d\u4f1a\u4f7f\u7b54\u6848\u53d8\u5f97\u66f4\u5c0f\uff08\u5373\u66f4\u4f18\uff09\uff0c\u800c\u5f53 $j\\leq i-len_p$ \u65f6 $i-j>len_p$ \u6240\u4ee5\u8fdb\u884c\u8d21\u732e\u4e3a $i-j$ \u7684\u8f6c\u79fb\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\uff0c\u56e0\u6b64\u53ef\u4ee5\u770b\u505a\u5bf9\u4e8e\u6bcf\u4e2a $j\\in [0,i)$ \u90fd\u8fdb\u884c $len_p$ \u548c $i-j$ \u7684\u8f6c\u79fb\u3002$len_p$ \u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u8bb0\u5f55 $f_{i,S}$ \u524d\u7f00\u6700\u5c0f\u503c\u4f18\u5316\uff0c\u800c $i-j$ \u7684\u8f6c\u79fb\u53ef\u4ee5\u8bbe $g_{i,S}$ \u8868\u793a $\\min_{j=0}^if_{j,S}-j$ \u8fdb\u884c\u4f18\u5316\u3002\u518d\u52a0\u4e0a\u6eda\u52a8\u6570\u7ec4\uff0c\u672c\u90e8\u5206\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n2^nL)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u66f4\u662f\u4ec5\u6709\u60ca\u4eba\u7684 $\\mathcal{O}(2^n)$\uff01\n\n\u4e5f\u8bb8\u4f60\u4f1a\u95ee\uff1a\u76f4\u63a5\u7528\u6c42\u6700\u5c0f\u503c\u7684 DP \u6c42\u6700\u5927\u503c\u4e0d\u5c31\u884c\u4e86\u5417\uff1f\u975e\u4e5f\uff0c\u56e0\u4e3a\u8f6c\u79fb\u65b9\u7a0b\u4e2d $\\min(len_p,i-j)$ \u7684\u90e8\u5206\u5e76\u6ca1\u6709\u53d8\u6210 $\\max$\uff0c\u6545\u6b64\u65f6 $len_p$ \u53ea\u80fd\u4ece $j\\leq i-len_p$ \u8f6c\u79fb\uff0c\u800c $i-j$ \u53ea\u80fd\u4ece $j>i-len_p$ \u8f6c\u79fb\uff0c\u6240\u4ee5\u9700\u8981\u52a0\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u4fee\u6539\u4e0e\u533a\u95f4\u6700\u503c\uff0c\u5f88\u9ebb\u70e6\uff0c\u4e0d\u5982\u76f4\u63a5\u8d2a\u5fc3\u66f4\u65b9\u4fbf\u3002\u800c\u4e14\u4e00\u9053\u9898\u76ee\u953b\u70bc\u4e24\u79cd\u601d\u7ef4\uff0c\u5c82\u4e0d\u5999\u54c9\uff1f\n\n\u590d\u6742\u5ea6\u5206\u6790\uff1a\u672c\u9898\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n!n2^n\\log L+n2^nL)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(nL+2^n)$\u3002\u5f88\u663e\u7136\u540e\u8005\u5df2\u7ecf\u8fbe\u5230\u4e86\u7406\u8bba\u4e0b\u754c\u3002\u5b9e\u73b0\u8d77\u6765\u4e0d\u7b97\u9ebb\u70e6\uff0c\u800c\u4e14\u6548\u7387\u975e\u5e38\u4f18\u79c0\uff0c\u4ee5 33ms \u7684\u6781\u9650\u901f\u5ea6\u4e0e\u4ec5\u4ec5 900K \u7684\u7a7a\u95f4\u5360\u7528\u593a\u5f97\u6700\u4f18\u89e3\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define mem(x, v, s) memset(x, v, sizeof(x[0]) * (s))\ntemplate <class T1, class T2> void cmin(T1 &a, T2 b){a = a < b ? a : b;}\ntemplate <class T1, class T2> void cmax(T1 &a, T2 b){a = a > b ? a : b;}\n\nconst int N = 1e4 + 5;\nchar t[N], s[4][N];\nint n, tL, len[4], nxt[4][N];\nbool mat[4][N];\nvoid KMP(char *s, int sL, int *nxt, bool *mat) {\n\tfor(int i = 2; i <= sL; i++) {\n\t\tnxt[i] = nxt[i - 1];\n\t\twhile(nxt[i] && s[nxt[i] + 1] != s[i]) nxt[i] = nxt[nxt[i]];\n\t\tif(s[nxt[i] + 1] == s[i]) nxt[i]++;\n\t}\n\tfor(int i = 1, p = 0; i <= tL; i++) {\n\t\twhile(p && s[p + 1] != t[i]) p = nxt[p];\n\t\tif(s[p + 1] == t[i]) p++;\n\t\tif(p == sL) mat[i] = 1, p = nxt[p];\n\t\telse mat[i] = 0;\n\t}\n}\n\nbool OverLap(char *t, char *s, int tL, int sL, int *nxt) {\n\tfor(int i = 1, p = 0; i <= tL; i++) {\n\t\twhile(p && s[p + 1] != t[i]) p = nxt[p];\n\t\tif(s[p + 1] == t[i]) p++;\n\t\tif(p == sL) return 1;\n\t}\n\treturn 0;\n}\n\nint GetMax() {\n\tif(n == 1) return len[0];\n\tstatic int id[4], ans, pos[4][N], cnt[4]; ans = 0, mem(cnt, 0, 4);\n\tfor(int i = 0; i < n; i++) id[i] = i;\n\tfor(int i = 0; i < n; i++) for(int j = 1; j <= tL; j++) if(mat[i][j]) pos[i][cnt[i]++] = j - len[i];\n\tdo {\n\t\tfor(int S = 0; S < 1 << n - 1; S++) {\n\t\t\tint cur = -1, res = 0, rbound = 0;\n\t\t\tfor(int bit = 0; bit < n; bit++) {\n\t\t\t\tint i = id[bit];\n\t\t\t\tif(!bit) {cur = pos[i][0], rbound = cur + len[i] - 1, res = len[i]; continue;}\n\t\t\t\tint p = -1, pr = id[bit - 1];\n\t\t\t\tif(S >> bit - 1 & 1) {\n\t\t\t\t\tint rlim = min(tL - len[i] + 1, cur + len[pr] - 1);\n\t\t\t\t\tint it = upper_bound(pos[i], pos[i] + cnt[i], rlim) - pos[i];\n\t\t\t\t\tif(it == 0 || pos[i][it - 1] < cur) break;\n\t\t\t\t\tp = pos[i][it - 1];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tint it = lower_bound(pos[i], pos[i] + cnt[i], cur + len[pr]) - pos[i];\n\t\t\t\t\tif(it == cnt[i]) break;\n\t\t\t\t\tp = pos[i][it];\n\t\t\t\t}\n\t\t\t\tres += max(0, p + len[i] - 1 - max(rbound, p - 1));\n\t\t\t\tcmax(rbound, p + len[i] - 1), cur = p;\n\t\t\t}\n\t\t\tcmax(ans, res);\n\t\t}\n\t} while(next_permutation(id, id + n));\n\treturn ans;\n}\n\nint GetMin() {\n\tif(n == 1) return len[0];\n\tstatic int ban[4], id[4], m; mem(ban, 0, 4), m = 0;\n\tfor(int i = 0; i < n; i++) for(int j = 0; j < n; j++)\n\t\tif(strcmp(s[i] + 1, s[j] + 1)) ban[j] |= OverLap(s[i], s[j], len[i], len[j], nxt[j]);\n\tfor(int i = 0; i < n; i++) for(int j = i + 1; j < n; j++) ban[j] |= !strcmp(s[i] + 1, s[j] + 1);\n\tfor(int i = 0; i < n; i++) if(!ban[i]) id[m++] = i;\n\tstatic int f[2][16], g[2][16];\n\tmem(f, 0x3f, 2), mem(g, 0x3f, 2), f[0][0] = g[0][0] = 0;\n\tfor(int i = 1, cur = 1, pr = 0; i <= tL; i++, swap(cur, pr)) {\n\t\tfor(int j = 0; j < 1 << m; j++) {\n\t\t\tf[cur][j] = N;\n\t\t\tfor(int k = 0; k < j; k++) {\n\t\t\t\tif(!(j >> k & 1)) continue;\n\t\t\t\tint S = j - (1 << k), p = id[k];\n\t\t\t\tif(mat[p][i]) cmin(f[cur][j], min(f[pr][S] + len[p], g[pr][S] + i));\n\t\t\t}\n\t\t\tg[cur][j] = min(g[pr][j], f[cur][j] - i), cmin(f[cur][j], f[pr][j]);\n\t\t}\n\t}\n\treturn f[tL & 1][(1 << m) - 1];\n}\n\nvoid solve() {\n\tscanf(\"%s %d\", t + 1, &n), tL = strlen(t + 1);\n\tfor(int i = 0; i < n; i++) {\n\t\tscanf(\"%s\", s[i] + 1);\n\t\tKMP(s[i], len[i] = strlen(s[i] + 1), nxt[i], mat[i]);\n\t}\n\tcout << GetMin() << \" \" << GetMax() << \"\\n\";\n}\n\nint main(){\n\tint T; cin >> T;\n\twhile(T--) solve();\n\treturn 0;\n}\n```\n\n**\u542f\u793a\uff1a\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u627f\u53d7\u7684\u524d\u63d0\u4e0b\u5c3d\u53ef\u80fd\u786e\u5b9a\u66f4\u591a\u4fe1\u606f\uff0c\u4e5f\u8bb8\u5176\u6240\u5e26\u6765\u7684\u91cd\u8981\u6027\u8d28\u4f7f DP \u6216\u8d2a\u5fc3\u53d8\u5f97\u53ef\u884c\u3002**",
        "postTime": 1635943270,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "P3269 [JLOI2016]\u5b57\u7b26\u4e32\u8986\u76d6"
    },
    {
        "content": "> \u6458\u81ea\u6211\u7684 [\u8d2a\u5fc3/\u6784\u9020/DP \u6742\u9898\u9009\u505a\u2161](https://www.cnblogs.com/ET2006/p/greedy-construction-dp2.html) \u4e2d\u7684\u7b2c $43$ \u9898\n\n\u9996\u5148\u6c42\u51fa\u6bcf\u4e2a\u7ed9\u51fa\u7684\u5b50\u4e32\u5728 $S$ \u4e2d\u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u5b57\u7b26\u4e32\u54c8\u5e0c\u5b9e\u73b0\uff0c\u4e0d\u59a8\u8bbe\u7b2c $i$ \u4e2a\u5b57\u7b26\u4e32\u6240\u6709\u51fa\u73b0\u4f4d\u7f6e\u7684\u5de6\u7aef\u70b9\u4e3a $p_{i,1},p_{i,2},\\cdots,p_{i,c_i}$\u3002\n\n\u8003\u8651\u5982\u4f55\u6c42\u51fa\u6240\u6709\u5b57\u7b26\u4e32\u8986\u76d6\u7684\u4f4d\u7f6e\u7684\u5e76\u7684\u6700\u5927\u503c\uff0c\u6ce8\u610f\u5230\u9898\u76ee\u4e00\u4e2a\u975e\u5e38\u5173\u952e\u7684\u6761\u4ef6\uff1a$n\\le 4$\u3002\u8003\u8651\u679a\u4e3e\u6240\u6709\u5b57\u7b26\u4e32\u8d77\u70b9\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u8fd9\u4e2a $n!$ \u679a\u4e3e\u4e00\u4e0b\u5373\u53ef\uff0c\u518d\u679a\u4e3e\u76f8\u90bb\u5b57\u7b26\u4e32\u4e24\u4e24\u4e4b\u95f4\u662f\u5426\u91cd\u53e0\uff0c\u540c\u6837 $2^{n-1}$ \u679a\u4e3e\u4e00\u4e0b\uff0c\u8003\u8651\u5982\u4f55\u8d2a\u5fc3\u5730\u5bf9\u6bcf\u79cd\u60c5\u51b5\u5b89\u6392\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u542f\u793a\u95ee\u9898\uff0c\u5bf9\u4e8e\u76f8\u90bb\u4e24\u5b57\u7b26\u4e32 $i,i+1$\uff0c\u5982\u679c\u5b83\u4fe9\u4e0d\u91cd\u53e0\uff0c\u90a3\u4e48\u6211\u4eec\u80af\u5b9a\u5c3d\u91cf\u5e0c\u671b $i+1$ \u653e\u7f6e\u7684\u4f4d\u7f6e\u5c3d\u53ef\u80fd\u9760\u524d\uff0c\u5426\u5219\u6211\u4eec\u80af\u5b9a\u5c3d\u91cf\u5e0c\u671b $i+1$ \u653e\u7f6e\u7684\u4f4d\u7f6e\u5c3d\u53ef\u80fd\u9760\u540e\uff0c\u8fd9\u4e2a\u5c06\u6bcf\u4e2a\u4e32\u51fa\u73b0\u7684\u4f4d\u7f6e\u538b\u5165\u4e00\u4e2a `set` \u7136\u540e\u5728 `set` \u4e2d `upper_bound` \u5373\u53ef\u627e\u5230\uff0c\u8fd9\u6837\u6700\u5927\u503c\u90e8\u5206\u5c31\u53ef\u4ee5\u5728 $|S|\u00b7n!\u00b72^{n-1}$ \u7684\u65f6\u95f4\u5185\u89e3\u51b3\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u6c42\u6240\u6709\u5b57\u7b26\u4e32\u8986\u76d6\u7684\u4f4d\u7f6e\u7684\u5e76\u7684\u6700\u5c0f\u503c\uff0c\u9996\u5148\u6211\u4eec\u8e22\u6389 $n$ \u4e2a\u5b50\u4e32\u4e2d\u6240\u6709\u5305\u542b\u4e8e\u53e6\u4e00\u4e2a\u5b50\u4e32\u7684\u5b50\u4e32\uff0c\u56e0\u4e3a\u7531\u4e8e\u6211\u4eec\u6c42\u7684\u662f\u6700\u5c0f\u503c\uff0c\u6211\u4eec\u80af\u5b9a\u4f1a\u5c06\u8fd9\u6837\u7684\u5b50\u4e32\u8986\u76d6\u5728\u5305\u542b\u5b83\u7684\u90a3\u4e2a\u5b50\u4e32\u7684\u4f4d\u7f6e\u4e0a\u6700\u4f18\uff0c\u6b64\u65f6\u8fd9\u6837\u7684\u5b57\u7b26\u4e32\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u51fa\u4e00\u4e2a DP\uff1a$dp_{i,j}$ \u8868\u793a\u76ee\u524d\u9009\u62e9\u4e86 $j$ \u4e2d\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u76ee\u524d\u9009\u62e9\u7684\u5b57\u4e32\u4e2d\uff0c\u53f3\u7aef\u70b9\u6700\u5927\u7684\u5b57\u7b26\u4e32\u7684\u51fa\u73b0\u4f4d\u7f6e\u7684\u53f3\u7aef\u70b9\u4e3a $i$\uff0c\u8986\u76d6\u7684\u4f4d\u7f6e\u7684\u5e76\u7684\u5927\u5c0f\u7684\u6700\u5c0f\u503c\uff0c\u8f6c\u79fb\u5c31\u679a\u4e3e\u53f3\u7aef\u70b9\u4e3a $j$ \u7684\u5b57\u7b26\u4e32\u662f\u5565\uff0c\u8bbe\u4e3a $x$\uff0c\u6709\u4e24\u79cd\u8f6c\u79fb\uff1a\n\n- $dp_{i,j}\\leftarrow dp_{k,j-\\{x\\}}+len_x$\uff0c\u5176\u4e2d $len_x$ \u4e3a\u5b50\u4e32 $x$ \u7684\u957f\u5ea6\uff0c$k<i-len_x$\n- $dp_{i,j}\\leftarrow dp_{k,j-\\{x\\}}+i-k$\uff0c\u5176\u4e2d $i-len_x\\le k<i$\u3002\n\n\u4e4d\u4e00\u770b\u8fd9\u4e2a\u8f6c\u79fb\u5f0f\uff0c\u4f60\u53ef\u80fd\u4f1a\u4ee5\u4e3a\u9700\u8981\u7528\u7ebf\u6bb5\u6811\u7b49\u7ed3\u6784\u7ef4\u62a4\u8f6c\u79fb\uff0c\u5b9e\u5219\u4e0d\u7528\u3002\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8e\u4e0a\u9762\u90a3\u79cd\u8f6c\u79fb\uff0c\u5fc5\u7136\u6709 $i-k>len_x$\uff0c\u56e0\u6b64\u6211\u4eec\u628a\u4e0b\u9762\u90a3\u79cd\u8f6c\u79fb\u7684\u4e0b\u754c\u6539\u6210 $0$ \u4f9d\u7136\u53ef\u4ee5\u8ba1\u7b97\u5f97\u5230\u6b63\u786e\u7684 DP \u503c\uff0c\u8fd9\u6837\u8f6c\u79fb\u5c31\u53d8\u6210\u6c42\u4e00\u6bb5\u524d\u7f00 $\\min$ \u7684\u5f62\u5f0f\uff0c\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4 $mn1_{i,j}$ \u8868\u793a $\\min_{k\\le i}dp_{k,j}$\uff0c$mn2_{i,j}$ \u8868\u793a $\\min_{k\\le i}dp_{k,j}-k$\uff0c\u8fd9\u6837\u53ef\u4ee5 $\\mathcal O(1)$ \u8f6c\u79fb\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u5728 $\\mathcal O(|S|\u00b72^{n})$ \u7684\u65f6\u95f4\u5185\u6c42\u51fa\u4e86\u6700\u5c0f\u503c\u3002\n\n```cpp\nconst int MAXN=1e4;\nconst u64 BS=131;\nint n,m,p[5],l[5];char s[MAXN+5];\nu64 hs[MAXN+5],pw[MAXN+5];set<int> occ[5],tmp[5];\nu64 gethash(int l,int r){return hs[r]-hs[l-1]*pw[r-l+1];}\nint dp[MAXN+5][17],mn1[MAXN+5][17],mn2[MAXN+5][17];\nbool ban[5];\nvoid solve(){\n\tscanf(\"%s%d\",s+1,&n);m=strlen(s+1);\n\tfor(int i=1;i<=n;i++) occ[i].clear(),ban[i]=0;\n\tfor(int i=1;i<=m;i++) hs[i]=hs[i-1]*BS+s[i];\n\tfor(int i=1;i<=n;i++){\n\t\tstatic char buf[MAXN+5];scanf(\"%s\",buf+1);\n\t\tint len=strlen(buf+1);u64 hst=0;l[i]=len;\n\t\tfor(int j=1;j<=len;j++) hst=hst*BS+buf[j];\n\t\tfor(int j=1;j+len-1<=m;j++) if(gethash(j,j+len-1)==hst)\n\t\t\tocc[i].insert(j);\n\t} int mx=0;\n\tfor(int i=1;i<=n;i++) p[i]=i;\n\tdo {\n\t\tfor(int i=1;i<=n;i++) tmp[i]=occ[i];\n\t\tfor(int i=0;i<(1<<n-1);i++){\n\t\t\tint pre=0,sum=0,flg=1;\n\t\t\tfor(int j=1;j<=n;j++){\n\t\t\t\tif(j==1||(i>>(j-2)&1)){\n\t\t\t\t\tset<int>::iterator it=tmp[p[j]].upper_bound(pre);\n\t\t\t\t\tif(it==tmp[p[j]].end()){flg=0;break;}\n\t\t\t\t\tpre=(*it)+l[p[j]]-1;sum+=l[p[j]];\n\t\t\t\t} else {\n\t\t\t\t\tset<int>::iterator it=tmp[p[j]].upper_bound(pre);\n\t\t\t\t\tif(it==tmp[p[j]].begin()){flg=0;break;}\n\t\t\t\t\t--it;int ed=(*it)+l[p[j]]-1;\n\t\t\t\t\tif(ed>pre) sum+=ed-pre,pre=ed;\n\t\t\t\t}\n\t\t\t} if(flg) chkmax(mx,sum);\n\t\t}\n\t} while(next_permutation(p+1,p+n+1));\n\tmemset(dp,63,sizeof(dp));memset(mn1,63,sizeof(mn1));\n\tmemset(mn2,63,sizeof(mn2));int lim=(1<<n)-1;\n\tfor(int i=1;i<=n;i++){\n\t\tif(!occ[i].size()){ban[i]=1;continue;}\n\t\tint pos=*occ[i].begin();\n\t\tfor(int j=1;j<=n;j++) if((i^j)&&occ[j].size()){\n\t\t\tif(l[i]==l[j]&&i<j) continue;\n\t\t\tset<int>::iterator it=occ[j].lower_bound(pos);\n\t\t\tif(it!=occ[j].end()){\n//\t\t\t\tprintf(\"%d %d %d %d\\n\",i,j,pos,*it);\n\t\t\t\tif(pos+l[i]-1>=(*it)+l[j]-1){\n\t\t\t\t\tban[j]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) if(ban[i]) lim^=(1<<i-1);\n//\tprintf(\"lim=%d\\n\",lim);\n\tdp[0][0]=mn1[0][0]=mn2[0][0]=0;\n\tfor(int i=1;i<=m;i++){\n\t\tfor(int j=0;j<(1<<n);j++){\n\t\t\tif((j&lim)!=j) continue;\n\t\t\tfor(int k=1;k<=n;k++) if(j>>(k-1)&1){\n\t\t\t\tif(occ[k].find(i-l[k]+1)==occ[k].end()) continue;\n\t\t\t\tchkmin(dp[i][j],mn1[i-l[k]][j^(1<<k-1)]+l[k]);\n\t\t\t\tchkmin(dp[i][j],mn2[i][j^(1<<k-1)]+i);\n\t\t\t}\n\t\t\tmn1[i][j]=min(mn1[i-1][j],dp[i][j]);\n\t\t\tmn2[i][j]=min(mn2[i-1][j],dp[i][j]-i);\n//\t\t\tprintf(\"%d %d %d\\n\",i,j,dp[i][j]);\n\t\t}\n\t}\n\tprintf(\"%d %d\\n\",mn1[m][lim],mx);\n}\nint main(){\n\tfor(int i=(pw[0]=1);i<=MAXN;i++) pw[i]=pw[i-1]*BS;\n\tint qu;scanf(\"%d\",&qu);while(qu--) solve();\n\treturn 0;\n}\n/*\n1\nabacab\n4\nab\nab\nac\nca\n*/\n```",
        "postTime": 1636545410,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3269 [JLOI2016]\u5b57\u7b26\u4e32\u8986\u76d6"
    },
    {
        "content": "$\\min/\\max$ \u80af\u5b9a\u8981\u5206\u5f00\u5904\u7406\uff0c\u8fd9\u91cc\u5148\u6765\u8003\u8651 $\\min$\u3002\n\n\u8d2a\u5fc3\u5730\uff0c\u4e0d\u96be\u60f3\u5230\u82e5 $i \\neq j$ \u4e14 $B_i$ \u4e3a $B_j$ \u7684\u5b50\u4e32\uff0c\u5219\u76f4\u63a5\u628a $B_i$ \u653e\u5230 $B_j$ \u8986\u76d6\u540e\u5185\u90e8\u7684\u67d0\u4e2a\u4f4d\u7f6e\u4e00\u5b9a\u4e0d\u52a3\u3002\u4e8e\u662f\u6211\u4eec\u5148\u628a\u8fd9\u4e9b\u6ca1\u7528\u7684 $B_i$ \u6254\u4e86\uff0c\u53cd\u6b63\u5b83\u4eec\u4e0d\u5f71\u54cd\u7b54\u6848\u3002\n\n\u4f46\u662f\u63a5\u4e0b\u6765\u76f4\u63a5\u586b\u5b50\u4e32\u770b\u4e0a\u53bb\u975e\u5e38\u56f0\u96be\uff0c\u8003\u8651\u901a\u8fc7\u72b6\u538b dp \u94a6\u5b9a\u4e00\u4e2a\u6700\u53f3\u7aef\u70b9\u53f3\u79fb\u7684\u5148\u540e\u987a\u5e8f\u3002\u8bbe $f_{S, i}$ \u8868\u793a\u5df2\u7ecf**\u6309\u7167\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927**\u586b\u4e86 $S$ \u4e2d\u7684\u6240\u6709\u4e32\uff0c\u6700\u540e\u4e00\u4e2a\u586b\u7684\u4e32\u7684\u53f3\u7aef\u70b9\u4e3a $i$ \u7684\u6700\u5c0f\u957f\u5ea6\u3002\n\n\u521d\u503c\uff1a$f_{\\emptyset, i} = [i \\neq 0](+\\infty)$\u3002\n\n\u8f6c\u79fb\uff1a$f_{S, i} = \\displaystyle\\min_{x \\in S} \\min_{j = 0}^i (f_{S - \\{x\\}, j} + \\min(|B_x|, i - j))$\u3002\n\n\u7b54\u6848\uff1a$\\displaystyle\\min_{i = 1}^{|A|} f_{S_0, i}$\uff0c\u5176\u4e2d $S_0$ \u8868\u793a\u6254\u6389\u6ca1\u7528 $B_i$ \u540e\u5269\u4e0b\u7684\u96c6\u5408\u3002\n\n\u4f46\u662f\u76f4\u63a5\u505a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(T(\\sum |B_i| + n 2^n |A|^2))$\uff0c\u663e\u7136\u4e0d\u80fd\u901a\u8fc7\u3002\n\n\u6ce8\u610f\u5230\u6211\u4eec\u53ef\u4ee5\u5c06\u8f6c\u79fb\u5f0f\u6539\u5199\u6210 $f_{S, i} = \\displaystyle\\min_{x \\in S} \\min_{j = 0}^i \\min(f_{S - \\{x\\}, j} + |B_x|, f_{S - \\{x\\}, j} + i - j)$\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a $S$\uff0c\u5206\u522b\u5bf9 $f_{S, i}, f_{S, i} - i$ \u505a\u524d\u7f00 $\\min$\uff0c\u4e8e\u662f\u8f6c\u79fb\u88ab\u4f18\u5316\u81f3 $O(n)$\uff0c\u5219\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(T(\\sum |B_i| + n 2^n |A|))$\u3002\n\n\u73b0\u5728\u6765\u770b\u770b $\\max$ \u600e\u4e48\u505a\u3002\n\n\u7531\u4e8e\u6b64\u65f6\u628a\u6709\u5305\u542b\u5173\u7cfb\u7684\u5b50\u4e32\u5206\u5f00\u66f4\u4f18\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u50cf $\\min$ \u90a3\u6837\u6254\u6389\u88ab\u5305\u542b\u8005\u3002\n\ndp \u90e8\u5206\u8ddf\u4e0a\u9762\u51e0\u4e4e\u4e00\u6837\uff1a\u8bbe $g_{S, i}$ \u8868\u793a\u5df2\u7ecf**\u6309\u7167\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927**\u586b\u4e86 $S$ \u4e2d\u7684\u6240\u6709\u4e32\uff0c\u6700\u540e\u4e00\u4e2a\u586b\u7684\u4e32\u7684\u53f3\u7aef\u70b9\u4e3a $i$ \u7684\u6700\u5927\u957f\u5ea6\u3002\n\n\u521d\u503c\uff1a$g_{\\emptyset, i} = [i \\neq 0](-\\infty)$\u3002\n\n\u8f6c\u79fb\uff1a$g_{S, i} = \\displaystyle\\max_{x \\in S} \\max_{j = 0}^i (g_{S - \\{x\\}, j} + \\min(|B_x|, i - j))$\u3002\n\n\u7b54\u6848\uff1a$\\displaystyle\\max_{i = 1}^{|A|} g_{\\{1, 2, \\cdots, n\\}, i}$\u3002\n\n\u4f46\u662f\u76f4\u63a5\u505a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u4e3a $O(T(\\sum |B_i| + n 2^n |A|^2))$\uff0c\u663e\u7136\u4e0d\u80fd\u901a\u8fc7\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4ef6\u5f88\u9ebb\u70e6\u7684\u4e8b\uff1a\u56e0\u4e3a\u6700\u91cc\u9762 $\\min$ \u7684\u524d\u9762\u662f $\\max$\uff0c\u6211\u4eec\u6ca1\u6cd5\u76f4\u63a5\u50cf\u4e0a\u9762\u90a3\u6837\u641e\u3002\n\n\u8003\u8651\u8ba8\u8bba\u4e00\u4e0b $\\min$ \u7684\u53d6\u503c\u60c5\u51b5\uff1a\n\n- $0 \\leq j \\leq k - |B_x|$\uff1a\u6b64\u65f6\u53d6\u5230 $g_{S - \\{x\\}, j} + |B_x|$\uff0c\u524d\u7f00 $\\max$ \u4f18\u5316\u5373\u53ef\u3002\n- $k - |B_x| + 1 \\leq j \\leq k$\uff1a\u6b64\u65f6\u53d6\u5230 $g_{S - \\{x\\}, j} + i - j$\uff0c\u6bcf\u7b97\u5b8c\u4e00\u8f66 $g_{S, i}$ \u540e\u628a $g_{S, i} - i$ \u4e22\u5230 ST \u8868\u91cc\uff0c\u67e5\u8be2\u65f6\u7528 ST \u8868\u6c42\u533a\u95f4 $\\max$ \u5373\u53ef\u3002\n\n\u4e8e\u662f\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(T(\\sum |B_i| + n 2^n |A| \\log |A|))$\u3002\n\n\u7efc\u4e0a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(T(\\sum |B_i| + n 2^n |A| \\log |A|))$\u3002~~\u8363\u83b7\u6700\u52a3\u89e3\uff01\uff01\uff01~~\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <set>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int N = 1e4, seed = 998244353, mod = 1e9 + 7;\nll power[N + 7];\n\ntypedef struct {\n\tll hash[N + 7];\n\t\n\tinline void init(char s[]){\n\t\tint len = strlen(&s[1]);\n\t\tfor (int i = 1; i <= len; i++){\n\t\t\thash[i] = (hash[i - 1] * seed % mod + s[i]) % mod;\n\t\t}\n\t}\n\t\n\tinline ll get_hash(int l, int r){\n\t\treturn ((hash[r] - hash[l - 1] * power[r - l + 1] % mod) % mod + mod) % mod;\n\t}\n} Hash;\n\nconst int M = 13 + 7;\n\ntypedef struct {\n\tint st[N + 7][M];\n\t\n\tinline void init(int n, int a[]){\n\t\tint m = log2(n);\n\t\tfor (register int i = 1; i <= n; i++){\n\t\t\tst[i][0] = a[i] - i;\n\t\t}\n\t\tfor (register int i = 1; i <= m; i++){\n\t\t\tint id = i - 1, t1 = n - (1 << i) + 1, t2 = 1 << id;\n\t\t\tfor (register int j = 1; j <= t1; j++){\n\t\t\t\tst[j][i] = max(st[j][id], st[j + t2][id]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tinline int get_max(int l, int r){\n\t\tif (l > r) return 0x80000000;\n\t\tint t = log2(r - l + 1);\n\t\treturn max(st[l][t], st[r - (1 << t) + 1][t]);\n\t}\n} ST;\n\nconst int K = 4 + 7, P = 15 + 7;\nHash hasha;\nint lenb[K], use[K], dp[P][N + 7], pre1[P][N + 7], pre2[P][N + 7], p[K];\nchar a[N + 7], b[N + 7];\nbool mark[K], vis[N + 7];\nHash hashb[K];\nST st[P];\nset<int> s[K];\n\ninline void init(){\n\tpower[0] = 1;\n\tfor (register int i = 1; i <= N; i++){\n\t\tpower[i] = power[i - 1] * seed % mod;\n\t}\n}\n\nint main(){\n\tint t;\n\tscanf(\"%d\", &t);\n\tinit();\n\tfor (register int i = 1; i <= t; i++){\n\t\tint lena, n, m = 0, full, ans_min = 0x7fffffff, ans_max = 0;\n\t\tscanf(\"%s\", &a[1]);\n\t\tlena = strlen(&a[1]);\n\t\thasha.init(a);\n\t\tscanf(\"%d\", &n);\n\t\tfor (register int j = 1; j <= n; j++){\n\t\t\tscanf(\"%s\", &b[1]);\n\t\t\tlenb[j] = strlen(&b[1]);\n\t\t\tmark[j] = false;\n\t\t\ts[j].clear();\n\t\t\thashb[j].init(b);\n\t\t\tfor (register int k = 1; ; k++){\n\t\t\t\tint r = k + lenb[j] - 1;\n\t\t\t\tif (r > lena) break;\n\t\t\t\tif (hasha.get_hash(k, r) == hashb[j].hash[lenb[j]]) s[j].insert(r);\n\t\t\t}\n\t\t}\n\t\tfor (register int j = 1; j <= n; j++){\n\t\t\tfor (register int k = 1; k <= n; k++){\n\t\t\t\tif (j != k && !mark[j] && !mark[k] && lenb[j] >= lenb[k]){\n\t\t\t\t\tbool flag = false;\n\t\t\t\t\tfor (register int l = 1; ; l++){\n\t\t\t\t\t\tint r = l + lenb[k] - 1;\n\t\t\t\t\t\tif (r > lenb[j]) break;\n\t\t\t\t\t\tif (hashb[j].get_hash(l, r) == hashb[k].hash[lenb[k]]){\n\t\t\t\t\t\t\tflag = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (flag) mark[k] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (register int j = 1; j <= n; j++){\n\t\t\tif (!mark[j]) use[++m] = j;\n\t\t}\n\t\tfull = (1 << m) - 1;\n\t\tfor (register int j = 1; j <= lena; j++){\n\t\t\tdp[0][j] = 1e9;\n\t\t}\n\t\tfor (register int j = 1; j <= full; j++){\n\t\t\tfor (register int k = 0; k <= lena; k++){\n\t\t\t\tdp[j][k] = 1e9;\n\t\t\t\tfor (register int l = 1; l <= m; l++){\n\t\t\t\t\tif ((j >> (l - 1) & 1) && s[use[l]].count(k)){\n\t\t\t\t\t\tint x = j ^ (1 << (l - 1));\n\t\t\t\t\t\tdp[j][k] = min(pre1[x][k] + lenb[use[l]], pre2[x][k] + k);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpre1[j][k] = dp[j][k];\n\t\t\t\tpre2[j][k] = dp[j][k] - k;\n\t\t\t\tif (k > 0){\n\t\t\t\t\tpre1[j][k] = min(pre1[j][k], pre1[j][k - 1]);\n\t\t\t\t\tpre2[j][k] = min(pre2[j][k], pre2[j][k - 1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (register int j = 1; j <= lena; j++){\n\t\t\tans_min = min(ans_min, dp[full][j]);\n\t\t}\n\t\tfull = (1 << n) - 1;\n\t\tfor (register int j = 1; j <= lena; j++){\n\t\t\tdp[0][j] = 0x80000000;\n\t\t}\n\t\tst[0].init(lena, dp[0]);\n\t\tfor (register int j = 1; j <= full; j++){\n\t\t\tfor (register int k = 0; k <= lena; k++){\n\t\t\t\tdp[j][k] = 0;\n\t\t\t\tfor (register int l = 1; l <= n; l++){\n\t\t\t\t\tif ((j >> (l - 1) & 1) && s[l].count(k)){\n\t\t\t\t\t\tint x = j ^ (1 << (l - 1));\n\t\t\t\t\t\tdp[j][k] = max(dp[j][k], max(pre1[x][k - lenb[l]] + lenb[l], st[x].get_max(k - lenb[l] + 1, k) + k));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpre1[j][k] = dp[j][k];\n\t\t\t\tif (k > 0) pre1[j][k] = max(pre1[j][k], pre1[j][k - 1]);\n\t\t\t}\n\t\t\tst[j].init(lena, dp[j]);\n\t\t}\n\t\tfor (register int j = 1; j <= lena; j++){\n\t\t\tans_max = max(ans_max, dp[full][j]);\n\t\t}\n\t\tcout << ans_min << \" \" << ans_max << endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1673318476,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3269 \u3010[JLOI2016] \u5b57\u7b26\u4e32\u8986\u76d6\u3011"
    },
    {
        "content": "###  \u7b80\u5355\u6982\u51b5\u4e00\u4e0b\u9898\u610f\n> \u7ed9\u5b9a\u4e00\u4e2a\u6bcd\u4e32S\u4e0e\u5176\u5b50\u4e32T \uff0c\u8981\u5c06T\u653e\u5165\u6bcd\u4e32\u4e2d \uff0c\u5728\u5141\u8bb8\u76f8\u4e92\u8986\u76d6\u6216\u8005\u76f8\u4ea4\u7684\u60c5\u51b5\u4e0b \uff0c\u95ee\u8fd9\u4e9b\u5b50\u4e32\u5728\u6bcd\u4e32\u4e2d\u8986\u76d6\u7684\u5b57\u7b26 \u6700\u591a/\u5c11 \u662f\u591a\u5c11\n\n### \u5206\u6790\n> \u770b\u89c1\u6700\u503c\u5f88\u5bb9\u6613\u5c31\u5f80dp\u4e0a\u60f3\uff0c\u4f46\u662f\u8fd9\u9898\u76f4\u63a5dp\u4f1a\u6709\u540e\u6548\u6027\uff0c\u5c31\u662f\u6bcf\u4e2a\u4e32\u653e\u7684\u4f4d\u7f6e\u6ca1\u6709\u987a\u5e8f\u3002\u4f46\u662f\u5b50\u4e32\u4e2a\u6570\u975e\u5e38\u5c0f\uff0c\u56e0\u6b64\u53ef\u4ee5 $O(n!)$ \u7684\u65f6\u95f4\u679a\u4e3e\u653e\u7f6e\u987a\u5e8f\uff0c\u8fd9\u6837\u5c31\u6d88\u9664\u4e86dp\u7684\u540e\u6548\u6027\u3002\n\n> \u8003\u8651\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u8986\u76d6\u3002\u5047\u5982\u76f8\u8986\u76d6\uff0c\u90a3\u4e48\u5176\u5b9e\u5c31\u662f\u7b49\u4ef7\u4e8e\u4e0d\u653e\u90a3\u4e2a\u88ab\u8986\u76d6\u6389\u7684\u5b57\u7b26\u4e32\uff0c\u800c\u88ab\u8c01\u8986\u76d6\u5176\u5b9e\u5e76\u4e0d\u91cd\u8981\uff0c\u56e0\u4e3a\u53ea\u9700\u8981\u77e5\u9053\u8fd9\u4e2a\u4e32\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a\u96f6\u5373\u53ef\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528 $O(2^n)$ \u7684\u65f6\u95f4\u6765\u679a\u4e3e\u6bcf\u4e2a\u4e32\u662f\u5426\u88ab\u8986\u76d6\uff0c\u7136\u540e\u5199\u4e00\u4e2a\u51fd\u6570\u5224\u8986\u76d6\u662f\u5426\u5408\u6cd5\u5373\u53ef\u3002\n\n### \u72b6\u6001\u8bbe\u8ba1\n> \u9636\u6bb5\u6027\u548c\u76f8\u8986\u76d6\u7684\u60c5\u51b5\u5df2\u7ecf\u679a\u4e3e\u8fc7\u4e86\uff0c\u5269\u4e0b\u7684\u5b57\u7b26\u4e32\u5c31\u662f\u8981\u4e48\u76f8\u4ea4\u8981\u4e48\u4e0d\u4ea4\u4e86\uff08\u53cd\u6b63\u4e0d\u4f1a\u76f8\u8986\u76d6\u4e86\uff09\uff0c\u90a3\u4e48\u5f53\u524d\u8fd9\u4e2a\u4e32\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u53ea\u4e0e\u4e0a\u4e00\u4e2a\u4e32\u6709\u5173\u4e86\uff0c\u90a3\u4e48\u53ef\u4ee5\u8bbe\u8ba1dp\u72b6\u6001\uff1a\n\n > * $f[i][j]$ \u8868\u793a\u5f3a\u5236\u7b2c $i$ \u4e2a\u4e32\u653e\u5728 $j$ \u4e0a\u8986\u76d6\u5b57\u7b26\u4e2a\u6570\u7684\u6700\u5927\u503c\n \n > * $g[i][j]$ \u8868\u793a\u5f3a\u5236\u7b2c $i$ \u4e2a\u4e32\u653e\u5728 $j$ \u4e0a\u8986\u76d6\u5b57\u7b26\u4e2a\u6570\u7684\u6700\u5c0f\u503c\n \n### \u8f6c\u79fb\u65b9\u7a0b\n> \u5206\u4e24\u79cd\u60c5\u51b5\u6765\u8003\u8651\uff1a  \n\u2460 \u4e0e\u4e0a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6709\u4ea4  \n\u2461 \u4e0e\u4e0a\u4e00\u4e2a\u5b57\u7b26\u4e32\u65e0\u4ea4\n\n> \u9996\u5148\u8bbe\u4e0a\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5934\u7684\u4f4d\u7f6e\u662f $k$ , \u90a3\u4e48\u4e0a\u4e00\u4e2a\u4e32\u7684\u7ed3\u5c3e\u4f4d\u7f6e\u5c31\u662f $k+len_{i-1}-1$ \u3002\u5f53\u524d\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u5934\u7684\u4f4d\u7f6e\u662f $j$ , \u7ed3\u5c3e\u4f4d\u7f6e\u662f $j+len_i-1$ \u3002\u82e5\u4e24\u4e32\u6709\u4ea4\u5c31\u610f\u5473\u7740\n\n$$ \\left\\{\n\\begin{aligned}\nj  \u2264  k+len_{i-1}-1 \\\\\nk+len_{i-1}-1  < j+len_i-1 \\\\\nj > k\n\\end{aligned}\n\\right.\n$$\n\n> \u89e3\u51fa\u6765\u5c31\u662f  \n\n$$\nj-len_{i-1}+1 \u2264 k \u2264 min(j-1,j+len_i-len_{i-1})\n$$\n> \u4e8e\u662f\u5c31\u6709\u8f6c\u79fb\u65b9\u7a0b\n\n$$\n\tf[i][j]=min_{j-len_{i-1}+1 \u2264 k \u2264 min(j-1,j+len_i-len_{i-1})}(f[i-1][k]+j+len_i-1-k-len_{i-1}+1) \n\n$$\n\n$$\n\tg[i][j]=max_{j-len_{i-1}+1 \u2264 k \u2264 min(j-1,j+len_i-len_{i-1})}(g[i-1][k]+j+len_i-1-k-len_{i-1}+1) \n\n$$\n\n\n> \u4e0d\u96be\u53d1\u73b0\u8fd9\u4e2a\u5f88\u50cf\u4e00\u4e2a\u5b9a\u957f\u7684\u533a\u95f4\u5728\u5de6\u53f3\u6ed1\u52a8\uff0c\u90a3\u5c31\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\u4e00\u4e0b\uff0c\u5355\u8c03\u961f\u5217\u91cc\u8bb0\u5f97\u662f $f[i-1][j]-j$  \u4e0e $g[i-1][j]-j$ \u5373\u53ef\u3002\n\n> \u7136\u540e\u8003\u8651\u4e0d\u4ea4\u7684\u60c5\u51b5 , \u5982\u679c\u4e0d\u4ea4\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e32\u7684\u8d21\u732e\u5c31\u662f\u8fd9\u4e2a\u4e32\u7684\u957f\u5ea6\uff0c\u5c31\u6709\u8f6c\u79fb\u65b9\u7a0b\n\n$$\nf[i][j]=min_{k<j-len_{i-1}+1}(f[i-1][k]+len_i) \n$$\n$$\ng[i][j]=max_{k<j-len_{i-1}+1}(g[i-1][k]+len_i) \n$$\n\n> \u53d1\u73b0\u4e0e\u4e0a\u4e2a\u4e32\u7684\u672b\u4f4d\u7f6e\u65e0\u5173\u4e86\uff0c\u90a3\u4e48\u5c31\u7528\u4e00\u4e2a\u524d\u7f00\u6700\u5c0f\u6700\u5927\u503c\u6765\u4f18\u5316\u5373\u53ef  \n\u8f6c\u79fb\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(nL)$ \u7684\uff0c \u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(2^n \\ n! \\ nL)$ \n\n### \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch))f^=(ch=='-'),ch=getchar();\n\twhile(isdigit(ch))x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\treturn f?x:-x;\n}\nconst int N=1e4+5;\nint n,idx[5];\n\nstruct str{\n\tint len,kmp[N];\n\tchar S[N];\n}s,t[5],tmp[5];\n\ninline int cmp(str x,str y){\n\treturn x.len>y.len;\n}\ninline void getkmp(str &x){\n\tx.kmp[1]=0;\n\tfor(int i=2,j=0;i<=x.len;i++){\n\t\twhile(j&&x.S[i]!=x.S[j+1])j=x.kmp[j];\n\t\tx.kmp[i]=(j+=(x.S[i]==x.S[j+1]));\n\t}\n}\ninline int check(str s1,str s2){\t\t//s1 <- s2\n\tint j=0;\n\tfor(int i=1;i<=s1.len;i++){\n\t\twhile(j&&s1.S[i]!=s2.S[j+1])j=s2.kmp[j];\n\t\tif(s1.S[i]==s2.S[j+1])j+=1;\n\t\tif(j==s2.len)return 1;\n\t}\n\treturn 0;\n}\n\n\n\ninline int lowbit(int x){\n\treturn x&-x;\n}\ninline int cnt(int x){\n\tint ret=0;\n\twhile(x){\n\t\tx-=lowbit(x);\n\t\tret+=1;\n\t}\n\treturn ret;\n}\n\nint tag[5][N],use[5],minans=1e9,maxans=-1e9;\nint f[5][N],g[5][N],maxhd,maxtl,minhd,mintl,qmax[N],qmin[N],premax,premin;\nint fuck[5][5];\nvoid trans(int j){\n\tint premin=1e9,premax=-1e9,now=1;\n\tint len1=tmp[j].len,len2=tmp[j-1].len;\n\tminhd=maxhd=1;\n\tmintl=maxtl=0;\n\tfor(int i=1;i<=s.len;i++){\n\t\tint l=i-len2+1,r=min(i-1,i+len1-len2);\n\t\twhile(minhd<=mintl&&qmin[minhd]<l)\n\t\t\tpremin=min(premin,f[j-1][qmin[minhd++]]);\n\t\twhile(maxhd<=maxtl&&qmax[maxhd]<l)\n\t\t\tpremax=max(premax,g[j-1][qmax[maxhd++]]);\n\t\tfor(;now<=r;now++){\n\t\t\twhile(minhd<=mintl&&f[j-1][qmin[mintl]]-qmin[mintl]>=f[j-1][now]-now)mintl--;\n\t\t\twhile(maxhd<=maxtl&&g[j-1][qmax[maxtl]]-qmax[maxtl]<=g[j-1][now]-now)maxtl--;\n\t\t\tqmin[++mintl]=now;\n\t\t\tqmax[++maxtl]=now;\n\t\t}\n\t\tif(tag[j][i]){\n\t\t\tf[j][i]=premin+len1;\n\t\t\tg[j][i]=premax+len1;\n\t\t\tif(minhd<=mintl){\n\t\t\t\tint k=qmin[minhd];\n\t\t\t\tf[j][i]=min(f[j][i],f[j-1][k]-k+i-len2+len1);\n\t\t\t}\n\t\t\tif(maxhd<=maxtl){\n\t\t\t\tint k=qmax[maxhd];\n\t\t\t\tg[j][i]=max(g[j][i],g[j-1][k]-k+i-len2+len1);\n\t\t\t}\n\t\t}\n\t}\n}\nvoid search(int Sq,int lar){\n\tfor(int i=1,j=1;i<=lar,j<=n;j++){\n\t\tif((Sq>>(j-1))&1){\n\t\t\ttmp[idx[j]]=t[j];\n\t\t}\n\t}\n\tmemset(f,0x3f,sizeof(f));\n\tmemset(g,-0x3f,sizeof(g));\n\tmemset(tag,0,sizeof(tag));\n\tfor(int k=1;k<=lar;k++){\n\t\tint now=0;\n\t\tfor(int i=1;i<=s.len;i++){\n\t\t\twhile(now&&tmp[k].S[now+1]!=s.S[i])now=tmp[k].kmp[now];\n\t\t\tif(tmp[k].S[now+1]==s.S[i])now++;\n\t\t\tif(now==tmp[k].len){\n\t\t\t\ttag[k][i-tmp[k].len+1]=1;\n\t\t\t\tnow=tmp[k].kmp[now];\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=s.len;i++){\n\t\tif(tag[1][i]){\n\t\t\tf[1][i]=tmp[1].len;\n\t\t\tg[1][i]=tmp[1].len;\n\t\t}\n\t}\n\tfor(int j=2;j<=lar;j++){\n\t\ttrans(j);\n\t}\n\tfor(int i=1;i<=s.len;i++){\n\t\tminans=min(minans,f[lar][i]);\n\t\tmaxans=max(maxans,g[lar][i]);\n\t}\n}\n\nvoid dfs(int ok,int up,int Sq){\n\t//S\u8868\u793a\u72b6\u6001  up\u8868\u793a\u679a\u4e3e\u4e0a\u9650 \n\tif(ok>n){\n\t\tsearch(Sq,up);\n\t\treturn;\n\t}\n\telse{\n\t\tif((Sq>>(ok-1))&1){\n\t\t\tfor(int i=1;i<=up;i++){\n\t\t\t\tif(!use[i]){\n\t\t\t\t\tuse[i]=1;\n\t\t\t\t\tidx[ok]=i;\n\t\t\t\t\tdfs(ok+1,up,Sq);\n\t\t\t\t\tuse[i]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse dfs(ok+1,up,Sq);\n\t}\n}\n\ninline void solve(){\n    minans=1e9;\n    maxans=-1e9;\n\tscanf(\"%s\",s.S+1);\n\ts.len=strlen(s.S+1);\n\tgetkmp(s);\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s\",t[i].S+1);\n\t\tt[i].len=strlen(t[i].S+1);\n\t\tgetkmp(t[i]);\n\t}\n\tsort(t+1,t+n+1,cmp);\n\tmemset(fuck,0,sizeof(fuck));\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<i;j++){\n\t\t\tif(check(t[j],t[i]))fuck[j][i]=1;\n\t\t}\n\t}\n\tfor(int ss=0;ss<(1<<n);ss++){\n\t\tint flg=1;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(!(1&(ss>>i-1))){\n\t\t\t\tint shabi=1;\n\t\t\t\tfor(int j=1;j<i;j++){\n\t\t\t\t\tif((1&(ss>>j-1))&&fuck[j][i]){\n\t\t\t\t\t\tshabi=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(shabi)flg=0;\n\t\t\t}\n\t\t}\n\t\tif(flg)dfs(1,cnt(ss),ss);\n\t}\n\tprintf(\"%lld %lld\\n\",minans,maxans);\n}\nsigned main(){\n\tint T=read();\n\twhile(T--)solve();\n}\n```\n",
        "postTime": 1634487528,
        "uid": 239407,
        "name": "CHENHX",
        "ccfLevel": 6,
        "title": "P3269 [JLOI2016]\u5b57\u7b26\u4e32\u8986\u76d6 \u5355\u8c03\u961f\u5217\u505a\u6cd5"
    },
    {
        "content": "A Naive Sol\n\n\u53d1\u73b0\u987a\u5e8f\u4f3c\u4e4e\u633a\u5173\u952e\u7684\n\n\u8003\u8651\u72b6\u538b\u628a\u987a\u5e8f\u538b\u6389\n\nF(i,Mx)\u524di\u4e2a\u5b57\u6bcd \u72b6\u6001\u662f\u5df2\u7ecf\u7528\u4e86\u591a\u5c11\u4e2a\n\n\u8003\u8651min\u56e0\u4e3amax\u5f88\u7b80\u5355\n\n\u6545\u8003\u8651\u8f6c\u79fb\u53d1\u73b0\u5982\u679c\u4ece\u5c0f\u4e8eSt\u7684\u8fc7\u6765 \u90a3\u4e48\u662f len\n\n\u5426\u5219\u662f i-Fro\n\n\u505a\u8fc7BZOJ2865\u7684\u4eba\u90fd\u61c2 \u8fd9\u4e0d\u8fc7\u662f\u4e24\u9897\u7ebf\u6bb5\u6811\u7684\u662f\n\n\u5bf9\u4e8e16\u79cd\u72b6\u6001 \u4e0d\u8fc7\u662f 32\u68f5\u7ebf\u6bb5\u6811\u7684\u4e8b\uff08n\u90a3\u4e48\u5c0f\u6015\u4e2a\u5565\uff09\n\n\u90a3\u4e48\u8003\u8651\u4e00\u4e9b\u975e\u6cd5\u7684\u72b6\u6001\u5c31\u662f\u5179\u51fa\u53bb\u4e86\n\n\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e0d\u4f18\u7684Unique\u6389\u5c31\u884c\u4e86\uff01\n\nMax\u7684\u540c\u7406 \u518d\u5f0032\u68f5\u7ebf\u6bb5\u6811\u6c34\u8fc7\u53bb\u5373\u53ef\n\n\u590d\u6742\u5ea6$2^{k}*N*log_{2}N*m*T$\n\u4ee3\u7801\u6709\u70b9\u957f\u4f46\u662f\u6b63\u786e\u6027\u663e\u7136\n\n```\nstruct SubTaskMin{\n\t#define INF (1e9)\n\tstruct Segment_Tree_One{\n\t\tstruct Segment_Node{\n\t\t\tint lson,rson,sum;\n\t\t}T[N<<2];\n\t\tvoid PushUp(int p){\n\t\t\tT[p].sum=min(T[lc].sum,T[rc].sum);\n\t\t}\n\t\tvoid Build(int p,int l,int r){\n\t\t\tT[p].lson=l;\n\t\t\tT[p].rson=r;\n\t\t\tif(l==r){T[p].sum=INF;return;}\n\t\t\tint mid=(l+r)>>1;\n\t\t\tBuild(lc,l,mid);\n\t\t\tBuild(rc,mid+1,r);\n\t\t\tPushUp(p);\n\t\t}\n\t\tvoid Update(int p,int pos,int v){\n\t\t\tif(T[p].lson==T[p].rson){\n\t\t\t\tT[p].sum=min(T[p].sum,v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tint mid=(T[p].lson+T[p].rson)>>1;\n\t\t\tif(pos<=mid)Update(lc,pos,v);\n\t\t\telse Update(rc,pos,v);\n\t\t\tPushUp(p);\n\t\t}\n\t\tint Query(int p,int l,int r){\n\t\t\tif(l<=T[p].lson&&T[p].rson<=r){\n\t\t\t\treturn T[p].sum;\n\t\t\t}\n\t\t\tint mid=(T[p].lson+T[p].rson)>>1;\n\t\t\tint ret=INF;\n\t\t\tif(l<=mid)ret=min(ret,Query(lc,l,r));\n\t\t\tif(mid< r)ret=min(ret,Query(rc,l,r));\n\t\t\treturn ret;\n\t\t}\n\t}T1[16],T2[16];\n\tint Del[5];\n\tvoid Unique(){\n\t\tfor(int i=1;i<=m;++i){\n\t\t\tLL now=0;\n\t\t\tfor(int j=1;j<=len[i];++j)now=(now+(Str[i][j]-'a'+1)*Bas[j])%mod;\n\t\t\tfor(int j=1;j<=m;++j){\n\t\t\t\tif(i==j)continue;\n\t\t\t\tif(Del[j])continue;\n\t\t\t\tif(len[i]>len[j])continue;\n\t\t\t\tLL tmp=0;\n\t\t\t\tfor(int k=1;k<=len[i];++k)tmp=(tmp+(Str[j][k]-'a'+1)*Bas[k])%mod;\n\t\t\t\tif(now==tmp){\n\t\t\t\t\tDel[i]=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tfor(int k=len[i]+1;k<=len[j];++k){\n\t\t\t\t\ttmp=tmp-(Str[j][k-len[i]]-'a'+1)*Base;\n\t\t\t\t\ttmp=(tmp%mod+mod)%mod;\n\t\t\t\t\ttmp=tmp*InvBase%mod;\n\t\t\t\t\ttmp=(tmp+(Str[j][k]-'a'+1)*Bas[len[i]]%mod)%mod;\n\t\t\t\t\tif(now==tmp){\n\t\t\t\t\t\tDel[i]=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(Del[i])break;\n\t\t\t}\n\t\t}\n\t}\n\tint F[12000][16];\n\tvoid Solve(){\n\t\tmemset(Del,0,sizeof(Del));\n\t\tUnique();\n\t\tint tot=0;\n\t\tint A[5]={0,0,0,0,0};\n\t\tint Ls[5]={0,0,0,0,0};\n\t\tfor(int i=1;i<=m;++i){\n\t\t\tif(!Del[i])A[++tot]=i;\t\n\t\t}\n\t\tint Mx=(1<<tot)-1;\n\t\tfor(int i=0;i<=Mx;++i){\n\t\t\tT1[i].Build(1,0,n);\n\t\t\tT2[i].Build(1,0,n);\n\t\t}\n\t\tT1[0].Update(1,0,0);\n\t\tmemset(F,0x3f,sizeof(F));\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tfor(int j=1;j<=tot;++j){\n\t\t\t\tif(i<len[A[j]])continue;\n\t\t\t\twhile(Ls[j]<pos[A[j]][0]&&pos[A[j]][Ls[j]+1]<=i)++Ls[j];\n\t\t\t\tif(pos[A[j]][Ls[j]]==i&&Ls[j]!=0){\n\t\t\t\t\tint Ed=pos[A[j]][Ls[j]];\n\t\t\t\t\tint l=len[A[j]];\n\t\t\t\t\tint St=Ed-l+1;\n\t\t\t\t\tfor(int k=0;k<=Mx;++k){\n\t\t\t\t\t\tif((1<<(j-1))&k)continue;\n\t\t\t\t\t\tF[i][k|(1<<(j-1))]=min(F[i][k|(1<<(j-1))],T1[k].Query(1,0,St-1)+l);\n\t\t\t\t\t\tF[i][k|(1<<(j-1))]=min(F[i][k|(1<<(j-1))],T2[k].Query(1,St,Ed)+i);\n\t\t\t\t\t\tT1[k|(1<<(j-1))].Update(1,i,F[i][k|(1<<(j-1))]);\n\t\t\t\t\t\tT2[k|(1<<(j-1))].Update(1,i,F[i][k|(1<<(j-1))]-i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint ans=INF;\n\t\tans=min(ans,T1[Mx].Query(1,0,n));\n\t\tcout<<ans<<\" \";\n\t}\n\t#undef INF\n}Sol1;\n```\n",
        "postTime": 1551084574,
        "uid": 28147,
        "name": "\u5289\u5b50\u98ba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3269 \u3010[JLOI2016]\u5b57\u7b26\u4e32\u8986\u76d6\u3011"
    },
    {
        "content": "\u9898\u610f:\u7ed9\u4f60\u4e00\u4e2a\u65e0\u5411\u56fe,\u5176\u4e2d\u4e00\u4e2a\u70b9\u53cc\u8054\u901a\u5206\u91cf\u7b97\u4f5c\u4e00\u4e2a\u70b9,\u8be2\u95ee\u4e24\u4e2a\u70b9\u4e4b\u95f4\u6709\u591a\u5c11\u70b9\n\n\u70b9\u53cc\u8054\u901a\u5206\u91cf:\u6240\u8c13\u70b9-\u53cc\u8fde\u901a\u5206\u91cf\u662f\u6307\u5728\u4e00\u4e2a\u65e0\u5411\u56fe\u4e2d\u4e24\u70b9\u95f4\u81f3\u5c11\u6709\u4e24\u6761\u8def\u5f84,\u4e14\u8def\u5f84\u4e2d(\u4e0d\u7b97\u5934\u5c3e)\u7684\u70b9\u4e0d\u540c.\n\n\u6211\u4eec\u53ea\u8981\u628a\u6240\u6709\u7684\u53cc\u8054\u901a\u5206\u91cf\u7f29\u6210\u4e00\u4e2a\u70b9,\u7136\u540e\u8fd9\u4e2a\u56fe\u53c8\u662f\u4e00\u4e2a\u8fde\u901a\u56fe\n\n\u5373\u7f29\u70b9\u4e4b\u540e\u5c31\u662f\u4e00\u4e2a\u8054\u901a\u65e0\u73af\u56fe\u4e86\u2014\u2014\u5373\u6811\n\n\u8be2\u95ee\u4e24\u70b9\u4e4b\u95f4\u6709\u591a\u70b9\u5c31\u662f\u8be2\u95ee\u6811\u4e0a\u8ddd\u79bb+1\u4e86\n\n\u6811\u4e0a\u8ddd\u79bb=dep[u]+dep[v]-2*dep[lca(u,v)]\n\n\u7136\u540e\u8fd9\u9053\u9898,tarjan\u7684\u65f6\u5019\u6700\u597d\u7528vector\u5b58\u8fb9,\u4e0d\u7136\u7b2c4\u4e2a\u70b9\u6b7b\u6d3b\u8fc7\u4e0d\u53bb(\u4e0d\u8981\u95ee\u6211\u4e3a\u5565\u77e5\u9053\u7684)",
        "postTime": 1548125569,
        "uid": 146604,
        "name": "\u5434\u5f66\u826f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3269 \u3010[JLOI2016]\u5b57\u7b26\u4e32\u8986\u76d6\u3011"
    }
]