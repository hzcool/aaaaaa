[
    {
        "content": "\u5173\u4e8e\u6811\u540c\u6784\uff0c\u6709\u4e00\u4e2a\u795e\u5947\u7684\u6027\u8d28\uff1a\n\n\u4e00\u68f5\u6811\u7684\u91cd\u5fc3\u53ea\u6709 $1$ \u4e2a\u6216 $2$ \u4e2a\uff0c\u5982\u679c\u6709 $2$ \u4e2a\uff08\u8bb0\u4e3a $u$ \u548c $v$\uff09\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u8fb9 $(u,v)$ \uff0c\u800c\u6b64\u65f6\u53ef\u4ee5\u65ad\u5f00\u8fb9 $(u,v)$ \uff0c\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u5206\u522b\u5411 $u$ \u548c $v$ \u5efa\u8fb9\uff0c\u8fd9\u6837\u65b0\u5efa\u7684\u8282\u70b9\u5c31\u662f\u91cd\u5fc3\u3002\u4e0a\u9762\u6240\u8bf4\u7684\u6027\u8d28\u662f\uff1a\u5982\u679c\u6709\u4e24\u68f5\u6811\uff0c\u5f3a\u5236\u4ee5\u91cd\u5fc3\u4e3a\u6839\uff0c\u90a3\u4e48\u8fd9\u4e24\u68f5\u6811\u540c\u6784\u5f53\u4e14\u4ec5\u5f53\u5f62\u6210\u7684\u4e24\u68f5**\u6709\u6839\u6811**\u540c\u6784\u3002\n\n\u800c\u4e24\u68f5\u6709\u6839\u6811\uff08\u5206\u522b\u4ee5 $u$ \u548c $v$\uff09\u540c\u6784\uff0c\u5f53\u4e14\u4ec5\u5f53 $u$ \u548c $v$ \u7684\u5ea6\u6570\u76f8\u540c\uff0c\n\n\u5e76\u4e14\u8bbe $u$ \u7684\u5b50\u8282\u70b9\u96c6\u5408\u4e3a $son_u=\\{x_1,x_2,...,x_m\\}$ \uff0c\n\n$v$ \u7684\u5b50\u8282\u70b9\u96c6\u5408\u4e3a $son_v=\\{y_1,y_2,...,y_m\\}$ \uff0c\n\n\u5b58\u5728\u4e00\u4e2a $1$ \u5230 $m$ \u7684\u6392\u5217 $P$ \u4f7f\u5f97\u5bf9\u4e8e\u6bcf\u4e2a $i$ \uff0c\u6ee1\u8db3\u4ee5 $x_i$ \u4e3a\u6839\u7684\u5b50\u6811\u4e0e\u4ee5 $y_{P_i}$ \u4e3a\u6839\u7684\u5b50\u6811\u540c\u6784\u3002\n\n\u56de\u5230\u539f\u95ee\u9898\u3002\u6839\u636e\u6027\u8d28\uff0c\u53ef\u4ee5\u5148\u627e\u51fa\u6811\u7684\u91cd\u5fc3\uff0c\u7136\u540e\u5f3a\u5236\u4ee5\u91cd\u5fc3\u4e3a\u6839\uff0c\u505a\u4e00\u6b21\u6811\u5f62 DP\uff1a\n\n$f[x][y]$ \uff1a\u4f7f $x$ \u7684\u5b50\u6811\u548c $y$ \u7684\u5b50\u6811\u542f\u52a8\u60c5\u51b5\u540c\u6784\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u5176\u4e2d $x$ \u548c $y$ \u5fc5\u987b\u6df1\u5ea6\u76f8\u540c\u4e14\u5b50\u6811\u540c\u6784\u3002\n\n\u8f6c\u79fb\u5f53\u7136\u662f\u4ece $x$ \u548c $y$ \u7684\u5b50\u6811\u8f6c\u79fb\u3002\u4e5f\u5c31\u662f\u627e\u5230\u4e00\u4e2a\u5408\u6cd5\u7684\uff0c\u6700\u4f18\u7684\u5b50\u6811\u5339\u914d\uff0c\u4f7f\u5f97\u6ee1\u8db3\u6761\u4ef6\uff1a\n\n\uff081\uff09\u5982\u679c $x$ \u7684\u4e00\u4e2a\u5b50\u6811 $u$ \u548c $y$ \u7684\u4e00\u4e2a\u5b50\u6811 $v$ \u8fdb\u884c\u5339\u914d\uff0c\u90a3\u4e48 $u$ \u7684\u5b50\u6811\u548c $v$ \u7684\u5b50\u6811\u5fc5\u987b\u540c\u6784\u3002\n\n\uff082\uff09$u$ \u548c $v$ \u5339\u914d\u7684\u4ee3\u4ef7\u4e3a $f[u][v]$ \uff0c\u5fc5\u987b\u6700\u5c0f\u5316 $\\sum f[u][v]$ \u3002\n\n\u663e\u7136\uff0c\u5173\u952e\u5728\u4e8e\u6761\u4ef6\uff082\uff09\u3002\u800c\u6761\u4ef6\uff082\uff09\u662f\u4e00\u4e2a\u6700\u5c0f\u6743\u548c\u5b8c\u5907\u5339\u914d\u95ee\u9898\uff0c\u7528 KM / \u8d39\u7528\u6d41\u53ef\u4ee5\u6c42\u5f97\u3002\n\n\u73b0\u5728\u8fd8\u5269\u4e0b\u6700\u540e\u4e00\u4e2a\u95ee\u9898\uff0c\u90a3\u5c31\u662f\uff0c\u5982\u4f55\u5224\u65ad\u6df1\u5ea6\u76f8\u540c\u7684\u4e24\u4e2a\u5b50\u6811 $u$ \u548c $v$ \u662f\u5426\u540c\u6784\u3002\n\nHash ~~\u5927\u6cd5\u597d\uff01~~\n\n\u4e5f\u5c31\u662f\u4e3a\u6bcf\u4e2a\u5b50\u6811\u5b9a\u4e49\u4e00\u4e2a Hash \u51fd\u6570\uff0c\u5982\u679c $u$ \u548c $v$ \u7684 Hash \u503c\u76f8\u7b49\uff0c\u90a3\u4e48 $u$ \u7684\u5b50\u6811\u548c $v$ \u7684\u5b50\u6811\u540c\u6784\u3002\n\n\u5177\u4f53\u5730\uff0c\u6784\u9020\u8fd9\u4e2a Hash \u51fd\u6570\u7684\u65b9\u6cd5\u662f\uff1a\n\n\u5c06\u5b50\u6811\u5185\u7684\u6240\u6709\u8282\u70b9\u6309\u7167 Hash \u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u90a3\u4e48 Hash \u51fd\u6570\u4e3a\uff1a\n\n$$H(u)=((A\\times H(son[u]_1))\\times p+H(son[u]_2))\\times p+...$$\n\n~~\u8c03\u4e86 37 \u904d\uff0c\u6700\u540e\u624d\u53d1\u73b0 KM \u5199\u6302\u4e86~~\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define For(i, a, b) for (i = a; i <= b; i++)\n#define Edge(u) for (int e = adj[u], v; e; e = nxt[e])\nusing namespace std;\ninline int read() {\n\tint res = 0; bool bo = 0; char c;\n\twhile (((c = getchar()) < '0' || c > '9') && c != '-');\n\tif (c == '-') bo = 1; else res = c - 48;\n\twhile ((c = getchar()) >= '0' && c <= '9')\n\t\tres = (res << 3) + (res << 1) + (c - 48);\n\treturn bo ? ~res + 1 : res;\n}\ntypedef long long ll;\nconst int N = 805, M = N << 1, INF = 0x3f3f3f3f;\nint n, ecnt, nxt[M], adj[N], go[M], st[N], ed[N], dis[N], pyz[N], lpf[N],\nRoot = -1, Root0 = -1, tot, cnt, mo[N], ox[N], f[N][N], fa[N], dep[N];\nvector<int> edg[N];\nll has[N], orz[N];\nstruct cyx {\n\tint n, val[N][N], tox[N], ex[N], ey[N], orz[N];\n\tbool visx[N], visy[N];\n\tbool dfs(int u) {\n\t\tint v; visx[u] = 1; For (v, 1, n) {\n\t\t\tif (visy[v] || val[u][v] == -1) continue;\n\t\t\tint t = val[u][v] - ex[u] - ey[v]; if (t == 0) {\n\t\t\t\tvisy[v] = 1; if (!tox[v] || dfs(tox[v]))\n\t\t\t\t\treturn tox[v] = u, 1;\n\t\t\t}\n\t\t\telse orz[v] = min(orz[v], t);\n\t\t}\n\t\treturn 0;\n\t}\n\tint solve() {\n\t\tif (n == 0) return 0;\n\t\tint i, j; For (i, 1, n) tox[i] = 0;\n\t\tFor (i, 1, n) {\n\t\t\tey[i] = 0; ex[i] = INF; For (j, 1, n)\n\t\t\t\tif (val[i][j] != -1) ex[i] = min(ex[i], val[i][j]);\n\t\t}\n\t\tFor (i, 1, n) {\n\t\t\tFor (j, 1, n) orz[j] = INF; int cnt = 0; while (1) {\n\t\t\t\tFor (j, 1, n) visx[j] = visy[j] = 0;\n\t\t\t\tif (dfs(i)) break; int mind = INF; For (j, 1, n)\n\t\t\t\t\tif (!visy[j]) mind = min(mind, orz[j]);\n\t\t\t\tFor (j, 1, n) {\n\t\t\t\t\tif (visx[j]) ex[j] += mind;\n\t\t\t\t\tif (visy[j]) ey[j] -= mind;\n\t\t\t\t\telse orz[j] -= mind;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint ans = 0; For (i, 1, n) ans += ex[i] + ey[i]; return ans;\n\t}\n} km;\nvoid add_edge(int u, int v) {\n\tnxt[++ecnt] = adj[u]; adj[u] = ecnt; go[ecnt] = v;\n\tnxt[++ecnt] = adj[v]; adj[v] = ecnt; go[ecnt] = u;\n}\nint dfs(int u, int fu) {\n\tfa[u] = fu; dis[u] = 0; pyz[u] = u; Edge(u) {\n\t\tif ((v = go[e]) == fu) continue; dfs(v, u);\n\t\tif (2 + dis[v] > dis[u]) dis[u] = 2 + dis[v], pyz[u] = pyz[v];\n\t}\n\treturn pyz[u];\n}\nvoid calcHash(int u, int fu) {\n\tdep[u] = dep[fu] + 1;\n\thas[u] = 14221; Edge(u) if ((v = go[e]) != fu) calcHash(v, u);\n\tint i; tot = 0; Edge(u) if ((v = go[e]) != fu) orz[++tot] = has[v];\n\tsort(orz + 1, orz + tot + 1); For (i, 1, tot)\n\t\thas[u] = (has[u] * 4481 % 1060469 ^ orz[i]) % 1060469;\n\thas[u] = has[u] * 20707 % 1060469;\n}\nbool comp(int u, int v) {return has[u] < has[v];}\nbool comp2(int u, int v) {\n\tif (dep[u] != dep[v]) return dep[u] > dep[v]; return has[u] < has[v];\n}\nint DP() {\n\tint i, j, k; For(i, 1, n) lpf[i] = i; sort(lpf + 1, lpf + n + 1, comp2);\n\tfor (k = 1; k <= n;) {\n\t\tint nx = k; while (nx <= n && dep[lpf[k]] == dep[lpf[nx]]\n\t\t\t&& has[lpf[k]] == has[lpf[nx]]) nx++;\n\t\tFor (i, k, nx - 1) For (j, k, nx - 1) {\n\t\t\tint u = lpf[i], v = lpf[j], sb = 0; km.n = 0;\n\t\t\tfor (int e = adj[u]; e; e = nxt[e])\n\t\t\t\tif (dep[go[e]] == dep[u] + 1) km.n++;\n\t\t\tfor (int e = adj[u]; e; e = nxt[e]) if (dep[go[e]] == dep[u] + 1) {\n\t\t\t\tsb++; int sp = 0; for (int r = adj[v]; r; r = nxt[r])\n\t\t\t\t\tif (dep[go[r]] == dep[v] + 1) {\n\t\t\t\t\t\tkm.val[sb][++sp] = has[go[e]] == has[go[r]]\n\t\t\t\t\t\t\t? f[go[e]][go[r]] : -1;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tf[u][v] = km.solve() + (st[u] != ed[v]);\n\t\t}\n\t\tk = nx;\n\t}\n\treturn f[Root][Root];\n}\nint main() {\n\tint i, j, x, y, d; n = read(); For (i, 1, n - 1)\n\t\tx = read(), y = read(), edg[x].push_back(y),\n\t\tedg[y].push_back(x), add_edge(x, y);\n\tFor (i, 1, n) st[i] = read(); For (i, 1, n) ed[i] = read();\n\tx = dfs(1, 0); y = dfs(x, 0); Root = y; d = dis[x] >> 1;\n\tFor (i, 1, d >> 1) Root = fa[Root]; if (d & 1) Root0 = fa[Root];\n\tif (Root0 != -1) {\n\t\tecnt = 0; memset(adj, 0, sizeof(adj));\n\t\tFor (i, 1, n) {\n\t\t\tint tmp = edg[i].size(); For (j, 0, tmp - 1)\n\t\t\t\tif (i < edg[i][j] && !(i == Root && edg[i][j] == Root0) &&\n\t\t\t\t\t!(i == Root0 && edg[i][j] == Root)) add_edge(i, edg[i][j]);\n\t\t}\n\t\tadd_edge(++n, Root); add_edge(n, Root0); Root = n;\n\t}\n\tcalcHash(Root, 0); printf(\"%d\\n\", DP());\n\treturn 0;\n}\n```",
        "postTime": 1522981412,
        "uid": 29936,
        "name": "xyz32768",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3296 \u3010[SDOI2013]\u523a\u5ba2\u4fe1\u6761\u3011"
    },
    {
        "content": "#### \u9898\u76ee\u94fe\u63a5\uff1a[P3296 [SDOI2013]\u523a\u5ba2\u4fe1\u6761](https://www.luogu.org/problemnew/show/P3296)\n\n### \u2299\u4eba\u8bdd\uff1a\n\n   **\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u6bcf\u4e2a\u70b9\u4e0a\u6709\u6743\u503c\uff080\u62161\uff09\uff0c\n   \u95ee\u901a\u8fc7\u66f4\u6539\u70b9\u6743\uff081\u53d80\u62160\u53d81\uff09\u8fbe\u5230\u76f8\u4f3c\u7684\u6307\u5b9a\u72b6\u6001\u6700\u5c11\u9700\u8981\u591a\u5c11\u6b21\u3002\n\u76f8\u4f3c\u72b6\u6001\u7684\u5b9a\u4e49\u4e3a\u201c\u770b\u8d77\u6765\u662f\u4e00\u6837\u7684\u201d\uff0c\u5c31\u662f\u8bf4\u4e0d\u4e00\u5b9a\u6bcf\u4e2a\u70b9\u90fd\u662f\u548c\u539f\u6765\u7684\u4f4d\u7f6e\u5bf9\u5e94\u7684\uff0c\u53ea\u8981\u6811\u7684\u5f62\u72b6\u6ca1\u53d8\uff0c\u6811\uff08\u5305\u62ec\u70b9\u6743\uff09\u4e0e\u76ee\u6807\u6811\u540c\u6784\u5373\u53ef\u3002**\n\n**\u6bd4\u5982\uff1a\u4e0b\u9762\u8fd9\u4e24\u68f5\u6811\u5c31\u662f\u201c\u770b\u8d77\u6765\u4e00\u6837\u7684\u201d**\n\n![1](https://cdn.luogu.com.cn/upload/pic/55272.png)\n \n### \u2460\u601d\u8def\uff1a \n  **1.\u6211\u4eec\u5148\u4ee51\u4e3a\u6839\u8282\u70b9\u8fdb\u884cDFS\u627e\u5230\u6811\u7684\u4e00\u4e2a\u91cd\u5fc3root\u3002**\n  \n  **2.\u6211\u4eec\u518d\u4ee5root\u6839\uff0c\u4ee5\u6811\u7684\u540c\u6784\u7684\u65b9\u6cd5\uff0c\u6c42\u51fa\u6bcf\u4e00\u68f5\u5b50\u6811\u7684Hash\u503c\uff0c\u540c\u65f6\u5b58\u4e0b\u6bcf\u4e00\u4e2a\u70b9\u7684\u6240\u6709\u5b69\u5b50\uff0c\u7528\u9014\u89c1\u4e0b\u6587\u3002**\n  \n  **3.\u6211\u4eec\u67e5\u627e\u6bcf\u4e00\u4e2a\u70b9p\uff0c\u82e5\u4ee5p\u4e3a\u6839\u7684\u6811\u548c\u4ee5root\u4e3a\u6839\u7684\u6811\u540c\u6784\uff0c\u5219\u8fdb\u884cDP\u3002**\n  \n### \u2606DP\u65b9\u5f0f\n**a. \u8bb0y\u662f\u4ee5root\u4e3a\u6839\u7684\u6811\u4e2d\u7684\u67d0\u8282\u70b9\uff0cx\u4e3ay\u5728\u4ee5p\u4e3a\u6839\u7684\u6811\u4e2d\u7684\u5bf9\u5e94\u70b9\uff0c\u5e76\u4e14x\u5728p\u4e3a\u6839\u7684\u6811\u4e2d\u7684\u5b50\u6811\u4e0ey\u5728root\u4e3a\u6839\u4e2d\u7684\u5b50\u6811\u540c\u6784\u3002**\n\n**b. \u6211\u4eec\u5148\u8ba9x\u548cy\u5728\u5bf9\u5e94\u5b50\u6811\u4e2d\u7684\u5b69\u5b50\u5339\u914d\uff0c\u4f8b\u5982a\u4e3ax\u7684\u67d0\u4e2a\u5b69\u5b50\uff0cb\u4e3ay\u7684\u5b69\u5b50\uff0c\u5e76\u4e14a\u5b50\u6811\uff08\u8bb0\u505aA\uff09\u4e0eb\u7684\u5b50\u6811\uff08\u8bb0\u505aB\uff09\u540c\u6784,\u6211\u4eec\u518d\u8ba9x\uff0cy\u7684\u5b69\u5b50\u7684\u5b69\u5b50\u8fdb\u884c\u5339\u914d\u2026\u2026**\n\n**c. \u5bf9\uff0c\u8fd9\u662f\u4e2a\u9012\u5f52\u3002\u6211\u4eec\u5728a\u548cb\u7684\u5b69\u5b50DP\u8fc7\u540e\u518d\u6765\u786e\u5b9a\u6700\u7ec8a\u7684\u6bcf\u4e2a\u5b69\u5b50\u5bf9\u5e94b\u7684\u54ea\u4e2a\u5a03\u3002\u8fd9\u4e2a\u4e1c\u897f\u6211\u4eec\u53ef\u4ee5\u7528\u4e8c\u5206\u56fe\u7684KM\u7b97\u6cd5\u6216\u8005\u7f51\u7edc\u6d41\u7684\u8d39\u7528\u6d41\u6765\u5b8c\u6210\u3002**\n\n![4213](https://cdn.luogu.com.cn/upload/pic/55273.png)\n **\uff08\u8ba9x \u7684\u5b69\u5b50\u548cy\u7684\u5b69\u5b50\u5bf9\u5e94\uff09**\n \n ### \u2461\u4e0b\u9762\u662f\u6211\u7684\u4e11\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nconst int inf=0x3f3f3f3f;\nconst int Mod=152383;//\u968f\u4fbf\u627e\u4e00\u4e2a\u6570 \nconst int Mul=5579;//\u518d\u968f\u4fbf\u627e\u4e00\u4e2a\u6570 \nconst int N=1005;\nint read(){\n\tint s=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){s=s*10+c-'0';c=getchar();}\n\treturn s*f;\n}\nstruct Xinyue_Shuai{\n\t//\u8fd9\u662f\u4e00\u4e2a\u88f8\u7684 KM  \n\t//xinyue\u5b87\u5b99\u7b2c\u4e00\u5e05 \n\tint n,lx[N],ly[N],visx[N],visy[N],p[N],w[N][N];\n\tbool DFS(int x){\n\t\tvisx[x]=1;\n\t\tfor(int y=1;y<=n;y++){\n\t\t\tif(!visy[y]&&lx[x]+ly[y]==w[x][y]){\n\t\t\t\tvisy[y]=1;\n\t\t\t\tif(!p[y]||DFS(p[y])){p[y]=x;return true;}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tvoid Adjust(){\n\t\tint d=inf;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(!visx[i])continue;\n\t\t\tfor(int j=1;j<=n;j++){\n\t\t\t\tif(!visy[j])d=min(d,lx[i]+ly[j]-w[i][j]);\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(visx[i])lx[i]-=d;\n\t\t\tif(visy[i])ly[i]+=d;\n\t\t}\n\t}\n\tint KM(){\n\t\tmemset(p,0,sizeof(p));\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tlx[i]=-inf;ly[i]=0;\n\t\t\tfor(int j=1;j<=n;j++){\n\t\t\t\tw[i][j]*=-1;\n\t\t\t\t//\u6c42\u7684\u662f\u6700\u5c0f\u66f4\u6539\u6b21\u6570 \n\t\t\t\t//\u6240\u4ee5\u6211\u4eec\u5c06\u6240\u6709\u8fb9\u53d6\u53cd \n\t\t\t\tlx[i]=max(lx[i],w[i][j]);\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\twhile(1){\n\t\t\t\tmemset(visx,0,sizeof(visx));\n\t\t\t\tmemset(visy,0,sizeof(visy));\n\t\t\t\tif(DFS(i))break;Adjust();\n\t\t\t}\n\t\t}\n\t\tint ans=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(p[i])ans+=w[p[i]][i];\n\t\t}\n\t\treturn -ans;//\u6ce8\u610f \n\t}\n}P;\nint n,cnt,root,Ans=inf,tmp=inf;\nint h[N],fa[N],s1[N],s2[N],vis[N],sum[N];\nint Hash[N],f[N][N],c1[N][N],c2[N][N];\nstruct edge{int to,next;}d[N*2];\nvoid Add(int x,int y){//\u53cc\u5411\u8fb9 \n\td[++cnt]=(edge){y,h[x]};h[x]=cnt;\n\td[++cnt]=(edge){x,h[y]};h[y]=cnt;\n}\nbool cmp(int x,int y){\n\t//\u4ee5Hash\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n\treturn Hash[x]<Hash[y];\n}\nvoid Find(int x){//\u6c42\u6811\u7684\u91cd\u5fc3 \n\tint Max=0;\n\tvis[x]=sum[x]=1;\n\tfor(int i=h[x];i;i=d[i].next){\n\t\tint y=d[i].to;\n\t\tif(vis[y])continue;\n\t\tFind(y);\n\t\tsum[x]+=sum[y];\n\t\tMax=max(Max,sum[y]);\n\t}\n\tMax=max(Max,n-sum[x]);\n\tif(Max<tmp){tmp=Max;root=x;}\n\t//\u627e\u91cd\u5fc3\uff0c\u4e0d\u8bf4\u4e86 \n}\nvoid DFS(int x,int prt,int c[][N]){\n\tfa[x]=prt;Hash[x]=2019;\n\tmemset(c[x],0,sizeof(c[x]));\n\tfor(int i=h[x];i;i=d[i].next){\n\t\tint y=d[i].to;\n\t\tif(y==fa[x])continue;\n\t\tDFS(y,x,c);\n\t\tc[x][++c[x][0]]=y;\n\t\t//\u5b58\u5165\u6bcf\u4e2a\u70b9\u7684\u6240\u6709\u5b69\u5b50\uff0c\u7528\u4e8eDP\n\t}\n\tsort(c[x]+1,c[x]+c[x][0]+1,cmp);\n\t//\u5c06x\u7684\u6240\u6709\u5b69\u5b50\u4ee5Hash\u503c\u6392\u5e8f \n\tfor(int i=1;i<=c[x][0];i++){\n\t\tHash[x]=((Hash[x]*Mul)^Hash[c[x][i]])%Mod;\n\t\t//\u6811\u7684\u540c\u6784 Hash \n\t}\n}\nint DP(int x,int y){\n\tif(f[x][y]!=-1)return f[x][y];//\u7c7b\u4f3c\u8bb0\u5fc6\u5316 \n\tf[x][y]=s1[x]^s2[y];//x\u7684\u521d\u59cb\u503c\u662f\u5426\u4e0e\u76ee\u6807\u503c\u4e0d\u540c \n\tint num=c1[x][0];\n\t//\u65e2\u7136x\u548cy\u540c\u6784\uff0c\u90a3\u4ed6\u4eec\u7684\u5b69\u5b50\u7684Hash\u503c\u80af\u5b9a\u76f8\u540c \n\tfor(int i=1;i<=num;i++){\n\t\tint j=i;\n\t\twhile(j<=num&&Hash[c1[x][j+1]]==Hash[c1[x][i]])j++;\n\t\t//i-j\u4e2d\u7684\u6240\u6709\u5b50\u6811\u90fd\u540c\u6784 \n\t\t//\u65b9\u4fbf\u4e4b\u540e\u7684\u5efa\u8fb9\uff0c\u5b69\u5b50\u5728DFS\u4e2d\u662f\u6392\u8fc7\u5e8f\u7684 \n\t\tfor(int k=i;k<=j;k++){\n\t\t\tfor(int l=i;l<=j;l++){\n\t\t\t\tDP(c1[x][k],c2[y][l]);\n\t\t\t\t//\u5904\u7406x\u548cy\u7684\u5b69\u5b50\u7684\u5bf9\u5e94\u5173\u7cfb \n\t\t\t}\n\t\t}\n\t\t//\u5148\u5bf9\u5b69\u5b50\u5904\u7406\u5b8c\u518d\u5904\u7406\u672c\u8eab \n\t\tfor(int k=i;k<=j;k++){\n\t\t\tfor(int l=i;l<=j;l++){\n\t\t\t\tint dlt=DP(c1[x][k],c2[y][l]);\n\t\t\t\tP.w[k-i+1][l-i+1]=dlt;\n\t\t\t\t//\u8ba9x\u7684\u5b69\u5b50\u548cy\u7684\u5b69\u5b50\u770b\u8d77\u6765\u4e00\u6837\u6240\u9700\u8981\u7684\u6700\u5c0f\u4ee3\u4ef7 \n\t\t\t}\n\t\t}\n\t\t//\u521d\u59cb\u5316\u8fb9\u6743 \n\t\tP.n=j-i+1;\n\t\tf[x][y]+=P.KM();\n\t\t//KM\u8fdb\u884c\u5339\u914d\uff0c\u8d39\u7528\u6d41\u4e5f\u53ef\u4ee5 \n\t\ti=j;\n\t}\n\treturn f[x][y];\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<n;i++)Add(read(),read());\n\tfor(int i=1;i<=n;i++)s1[i]=read();//\u8fd9\u662f\u521d\u59cb\u72b6\u6001 \n\tfor(int i=1;i<=n;i++)s2[i]=read();//\u8fd9\u662f\u76ee\u6807\u72b6\u6001 \n\tFind(1);//\u5148\u627e\u5230\u91cd\u5fc3 root \n\tDFS(root,0,c2);\n\t//\u4ee5\u91cd\u5fc3\u4e3a\u6839\u91cd\u65b0 Hash\uff0c\u6bcf\u4e2a\u70b9\u7684\u5b69\u5b50\u5b58\u5165 C2 \n\ttmp=Hash[root];\n\tfor(int i=1;i<=n;i++){\n\t\tDFS(i,0,c1);\n\t\t//\u4ee5i\u4e3a\u6839\u91cd\u65b0 Hash\uff0c\u6bcf\u4e2a\u70b9\u7684\u5b69\u5b50\u5b58\u5165 C1 \n\t\tif(Hash[i]==tmp){//\u5982\u679c\u4e0e\u539f\u6811\u540c\u6784 \n\t\t\tmemset(f,-1,sizeof(f));\n\t\t\tAns=min(Ans,DP(i,root));//DP\uff0c\u66f4\u65b0\u7b54\u6848 \n\t\t}\n\t}\n\tprintf(\"%d\\n\",Ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1553777781,
        "uid": 39017,
        "name": "Corycle",
        "ccfLevel": 0,
        "title": "\u3010\u6811\u7684\u540c\u6784+KM\u7b97\u6cd5||\u8d39\u7528\u6d41\u3011 [SDOI2013]\u523a\u5ba2\u4fe1\u6761"
    },
    {
        "content": "### \u524d\u8a00\n\u505a\u6cd5\u6765\u81ea\uff1a@pzrpzr \uff0c\u5199\u4e00\u4e0b\uff01Orz pzr\uff01\n\n\n### \u9898\u76ee\u5927\u610f\n$n$ \u4e2a\u70b9\u7684\u65e0\u6839\u6811\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e24\u4e2a $0/1$ \u6743\u503c\uff0c\u5408\u9002\u5730\u5b89\u6392\u8282\u70b9\u5728\u540c\u6784\u6811\u4e2d\u7684\u987a\u5e8f\uff0c\u4f7f\u5f97\u524d\u540e\u5bf9\u5e94\u7684\u6743\u503c\u4e0d\u540c\u8282\u70b9\u4e2a\u6570\u6700\u5c0f\uff0c\u5e76\u8f93\u51fa\u3002\n\n### \u89e3\u9898\u601d\u8def\n\n\u9996\u5148\uff0c\u6211\u4eec\u5957\u8def\u5730\u5c06**\u65e0\u6839\u6811\u7684\u540c\u6784\u95ee\u9898**\u8f6c\u5316\u6210**\u4ee5\u91cd\u5fc3\u4e3a\u6839\u7684\u6709\u6839\u6811\u7684\u540c\u6784\u95ee\u9898**\u3002\uff08\u76f8\u5173\u8bc1\u660e\u8bf7\u67e5\u9605\u76f8\u5173\u8d44\u6599\uff0c\u6b64\u5904\u4e0d\u8d58\u8ff0\u3002\uff09\n\n\u627e\u51fa\u91cd\u5fc3\uff0c\u4ee5\u6b64\u4e3a\u6839\u3002\u82e5\u6709\u4e24\u4e2a\u91cd\u5fc3\uff0c\u5219\u65b0\u589e\u4e00\u4e2a\u70b9\uff0c\u4f7f\u5176\u4e3a\u6839\uff0c\u5e76\u5220\u53bb\u539f\u91cd\u5fc3\u4e4b\u95f4\u7684\u8fde\u8fb9\uff0c\u4e14\u4e24\u4e2a\u91cd\u5fc3\u5206\u522b\u5411\u6839\u8fde\u8fb9\u3002\u4e0d\u96be\u53d1\u73b0\u6b64\u8282\u70b9\u4e00\u5b9a\u4e3a\u91cd\u5fc3\uff0c\u4e14\u4e0d\u5f71\u54cd\u7b54\u6848\u3002\n\n\u6ce8\u610f\u5230\u4e00\u4e2a\u6761\u4ef6\u5373\u4e00\u4e2a\u8282\u70b9\u7684\u5ea6\u6570 $<=11$\uff0c\u8fd9\u542f\u793a\u6211\u4eec\u4f7f\u7528dp\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\uff08 $son_x$ \u8868\u793a $x$ \u7684\u513f\u5b50\u4e2a\u6570\u3002\uff09\n\n\u8bbe $f_{x,y}$ \u8868\u793a $x$ \u5b50\u6811\u4e0e $y$ \u5b50\u6811\u540c\u6784\uff0c$x$ \u5bf9\u5e94 $y$ \u65f6\uff0c\u6700\u5c0f\u7684\u4ee3\u4ef7\u3002\u5bb9\u6613\u53d1\u73b0 $x$ \u548c $y$ \u7684\u6df1\u5ea6\u3001\u513f\u5b50\u4e2a\u6570\u3001\u5b50\u6811\u5927\u5c0f\u5747\u5e94\u8be5\u76f8\u7b49\u3002\u6545\u771f\u6b63\u6709\u7528\u7684\u72b6\u6001\u5f88\u5c0f\u3002\n\n\u81f3\u4e8e\u8f6c\u79fb\uff0cpzr\u60f3\u5230\u4e0d\u9700\u8981\u901a\u8fc7\u6811hash\u8fdb\u884c\u5224\u65ad\u540c\u6784\u3002\u5982\u679c\u6211\u4eec\u80fd\u5c06 $x$ \u548c $y$ \u7684\u5b50\u6811\u5206\u522b\u4e00\u4e00\u914d\u5bf9\uff0c\u7531\u5176\u8f6c\u79fb\u5373\u53ef\u3002\u8bbe\u4e00\u4e2a\u8f85\u52a9dp\u6570\u7ec4 $g_{i,s}$ \u8868\u793a $x$ \u7684\u513f\u5b50\u5339\u914d\u5230\u7b2c $i$ \u4e2a\uff0c$y$ \u7684\u513f\u5b50\u5339\u914d\u7684\u72b6\u6001\u4e3a $s$ \u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u8f6c\u79fb\u53ef\u4ee5\u679a\u4e3e\u5b50\u96c6\u3002\u663e\u7136\n\n$$f_{x,y}=g_{son_x,2^{son_y+1}-1}(son_x=son_y)+[val_{1,i} \\ne val_{2,j}]$$\n\u3002\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u597d\u5206\u6790\uff0c\u6073\u8bf7\u5927\u795e\u5e2e\u5fd9\u7b97\u4e00\u4e0b\u3002\n\n\u6700\u540e\u8981\u6ce8\u610f\uff0c\u627e\u5230\u91cd\u5fc3\u4ee5\u540e $siz$ , $son$ \u8981\u91cd\u65b0\u7b97\u3002\u56e0\u4e3a\u8fd9\u4e2awa\u4e86\u4e00\u53d1\u3002\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <algorithm>\n#define M 13\n#define W 1030\n#define N 710\n#define INF 0x3f3f3f3f\n#define ff(i, a, b) for(int i = (a); i < (b); ++i)\n#define fo(i, a, b) for(int i = (a); i <= (b); ++i)\n#define fd(i, a, b) for(int i = (a); i >= (b); --i)\nusing namespace std;\ninline int read() // negative , long long\n{\n\tint x = 0; char ch = getchar();\n\twhile(ch < '0' || ch > '9')\tch = getchar();\n\twhile(ch >= '0' && ch <= '9')\tx = (x << 3) + (x << 1) + (ch ^ 48), ch = getchar();\n\treturn x;\n}\nint n, p2[M] = {1}, cnt[W], siz[N], fa[N], son[N], c[3], f[N][N], g[M][W];\nint last[N], pre[N << 1], to[N << 1];\nbool op1[N], op2[N];\ninline void add(int u, int v){static int tot = 0; pre[++tot] = last[u], to[tot] = v, last[u] = tot;}\nvoid findC(int u)\n{\n\tsiz[u] = 1, son[u] = 0;\n\tbool ok = 1;\n\tfor(int i = last[u]; i; i = pre[i])\n\t{\n\t\tint v = to[i];\n\t\tif(v == fa[u])\tcontinue ;\n\t\tfa[v] = u, findC(v), ++son[u], siz[u] += siz[v];\n\t\tif(siz[v] > (n >> 1))\tok = 0;\n\t}\n\tif(ok && n - siz[u] <= (n >> 1))\tc[++c[0]] = u;\n}\nvoid delEdge(int u, int v)\n{\n\tif(to[last[u]] ^ v)\n\t\tfor(int i = last[u]; pre[i]; i = pre[i])\n\t\t\tif(to[pre[i]] == v && (pre[i] = pre[pre[i]]))\treturn ;\n\tlast[u] = pre[last[u]];\n}\nvoid dfs(int x, int y)\n{\n\tf[x][y] = INF;\n\tvector<int> sx, sy;\n\tint full = p2[son[y]] - 1, s = son[x];\n\tif(s != son[y] || siz[x] != siz[y])\treturn ;\n\tfor(int i = last[x]; i; i = pre[i])\n\t\tif(to[i] ^ fa[x])\tsx.push_back(to[i]);\n\tfor(int i = last[y]; i; i = pre[i])\n\t\tif(to[i] ^ fa[y])\tsy.push_back(to[i]);\n\tfo(i, 1, s)\tfo(j, 1, s)\n\t\tdfs(sx[i - 1], sy[j - 1]);\n\tfo(i, 1, s)\tmemset(g[i], 0x3f, sizeof(int) * (full + 3));\n\tfo(i, 1, s)\tfo(j, 1, s)\tfo(S, p2[j - 1], full)\n\t\tif(cnt[S] == i && (S & p2[j - 1]))\n\t\t\tg[i][S] = min(g[i][S], g[i - 1][S ^ p2[j - 1]] + f[sx[i - 1]][sy[j - 1]]);\n\tf[x][y] = min(f[x][y], g[s][full] + (op1[x] != op2[y]));\n}\nint main()\n{\n\tn = read();\n\tfo(i, 1, 10)\tp2[i] = p2[i - 1] << 1;\n\tfo(i, 1, p2[10])\tcnt[i] = cnt[i >> 1] + (i & 1);\n\tint u, v, rt;\n\tfo(i, 2, n)\tu = read(), v = read(), add(u, v), add(v, u);\n\tfo(i, 1, n)\top1[i] = read();\n\tfo(i, 1, n)\top2[i] = read();\n\tfindC(1);\n\tif(c[0] ^ 1)\n\t{\n\t\trt = ++n; add(n, c[1]), add(n, c[2]), add(c[1], n), add(c[2], n);\n\t\tdelEdge(c[1], c[2]), delEdge(c[2], c[1]);\n\t}\n\telse rt = c[1];\n\tfa[rt] = 0, findC(rt);\n\tdfs(rt, rt);\n\tprintf(\"%d\\n\", f[rt][rt]);\n\treturn 0;\n}\n\n\n```",
        "postTime": 1625659044,
        "uid": 112395,
        "name": "Martin_MHT",
        "ccfLevel": 0,
        "title": "P3296 [SDOI2013]\u523a\u5ba2\u4fe1\u6761"
    },
    {
        "content": "\u8bbe $f_{u,v}$ \u8868\u793a $u$ \u5b50\u6811\u548c $v$ \u5b50\u6811\u540c\u6784\u4e14\u540c\u5c42\u7684\u60c5\u51b5\u4e0b$u$\u5b50\u6811\u539f\u6807\u8bb0\u53d8\u52a8\u6210$v$\u5b50\u6811\u7684\u65b0\u6807\u8bb0\u9700\u8981\u7684\u6700\u5c11\u6b21\u6570\u3002\n\n\u90a3\u4e48\u5b9e\u9645\u4e0a\u5c31\u662f\u679a\u4e3e $u$ \u548c $v$ \u7684\u513f\u5b50\u5b50\u6811\u4e92\u76f8\u5339\u914d\uff0c\u7528\u4ed6\u4eec\u7684$f$\u8f6c\u79fb\u5230$f_{u,v}$\u4e0a\uff0c\u5f88\u660e\u663e\u8fd9\u662f\u4e00\u4e2a\u5e26\u6743\u4e8c\u5206\u56fe\u5339\u914d\u7684\u8fc7\u7a0b\uff0cKM\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002\n\n\u5982\u679c\u8981\u662f\u679a\u4e3e\u6839\u6765\u505a\u7684\u8bdd\uff0c\u590d\u6742\u5ea6\u5c31\u662f $O(1331n^2)$ \u8fc7\u4e0d\u4e86\uff0c\u5f53\u7136\u5982\u679c\u4f60\u4f7f\u7528\u52a8\u6001\u6362\u6839\u7684\u8bdd\uff0c\u867d\u7136\u6211\u6ca1\u6709\u60f3\u8fc7\uff0c\u4f46\u662f\u5230\u76ee\u524d\u4f4d\u7f6e\uff0c\u4ee3\u7801\u5df2\u7ecf\u5feb200\u884c\u4e86\uff0c\u5982\u679c\u518d\u52a8\u6001\u6362\u6839\u7684\u8bdd\u5c31\u8981\u7d2f\u6b7b\u4e86\uff08\u5f53\u7136debug\u5c31\u66f4\u7d2f\u4e86\uff09\u3002\n\n\u6211\u4eec\u6709\u4e2a\u5f88\u5999\u7684\u6027\u8d28\uff1a\u53d6\u8fd9\u68f5\u6811\u7684\u91cd\u5fc3\uff08\u5982\u679c\u6709\u4e24\u4e2a\u91cd\u5fc3\uff0c\u5219\u5c06\u4e24\u4e2a\u91cd\u5fc3\u4e4b\u95f4\u7684\u8fb9\u4e0a\u5efa\u8fd9\u4e2a\u70b9\uff0c\u53d6\u8fd9\u4e2a\u70b9\uff09\u4f5c\u4e3a\u6839\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u6709\u4e00\u4e2a\u7f8e\u5999\u7684\u7ed3\u8bba\uff1a\u4e24\u68f5\u6811\u540c\u6784\uff0c\u5f53\u4e14\u4ec5\u5f53\u4ee5\u4e24\u68f5\u6811\u91cd\u5fc3\u4e3a\u6839\u7684\u6811\u540c\u6784\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\ntypedef unsigned long long ll;\nconst int M=12;\nconst int N=705;\nconst int B=6662333;\nconst int INF=1e9;\ninline int read() {\n\tint X=0,w=0;\n\tchar ch=0;\n\twhile(!isdigit(ch)) {\n\t\tw|=ch=='-';\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch))X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n\treturn w?-X:X;\n}\nint dis[M][M],wx[M],wy[M],match[M],sla[M];\nbool vx[M],vy[M];\nbool dfs2(int u,int n) {\n\tvx[u]=1;\n\tfor(int v=1; v<=n; v++) {\n\t\tif(!vy[v]) {\n\t\t\tint w=wx[u]+wy[v]-dis[u][v];\n\t\t\tif(!w) {\n\t\t\t\tvy[v]=1;\n\t\t\t\tif(!match[v]||dfs2(match[v],n)) {\n\t\t\t\t\tmatch[v]=u;\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t} else sla[v]=min(sla[v],w);\n\t\t}\n\t}\n\treturn 0;\n}\nint KM(int n) {\n\tmemset(wx,-127,sizeof(wx));\n\tmemset(wy,-127,sizeof(wy));\n\tmemset(match,0,sizeof(match));\n\tfor(int i=1; i<=n; i++)\n\t\tfor(int j=1; j<=n; j++)\n\t\t\twx[i]=max(wx[i],dis[i][j]);\n\tfor(int i=1; i<=n; i++) {\n\t\tmemset(sla,127,sizeof(sla));\n\t\twhile(1) {\n\t\t\tmemset(vx,0,sizeof(vx));\n\t\t\tmemset(vy,0,sizeof(vy));\n\t\t\tif(dfs2(i,n))break;\n\t\t\tint minn=INF;\n\t\t\tfor(int j=1; j<=n; j++)\n\t\t\t\tif(!vy[j])minn=min(minn,sla[j]);\n\t\t\tfor(int j=1; j<=n; j++) {\n\t\t\t\tif(vx[j])wx[j]-=minn;\n\t\t\t\tif(vy[j])wy[j]+=minn;\n\t\t\t\telse sla[j]-=minn;\n\t\t\t}\n\t\t}\n\t}\n\tint ans=0;\n\tfor(int i=1; i<=n; i++)if(dis[match[i]][i]!=-INF)ans-=dis[match[i]][i];\n\treturn ans;\n}\nstruct node {\n\tint to,nxt;\n} e[N*2];\nint n,cnt,head[N],fa[N],a[N],b[N],q[N],size[N],son[N],dep[N];\nll h[N];\ninline void add(int u,int v) {\n\te[++cnt].to=v;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nint calcg(int st) {\n\tint r=0,g1,g2=0,maxn=n;\n\tq[++r]=st;\n\tfa[st]=0;\n\tfor(int l=1; l<=r; l++) {\n\t\tint u=q[l];\n\t\tsize[u]=1;\n\t\tson[u]=0;\n\t\tfor(int i=head[u]; i!=-1; i=e[i].nxt) {\n\t\t\tint v=e[i].to;\n\t\t\tif(v==fa[u])continue;\n\t\t\tfa[v]=u;\n\t\t\tq[++r]=v;\n\t\t}\n\t}\n\tfor(int l=r; l>=1; l--) {\n\t\tint u=q[l],v=fa[u];\n\t\tif(r-size[u]>son[u])son[u]=r-size[u];\n\t\tif(son[u]<maxn)g1=u,maxn=son[u],g2=0;\n\t\telse if(son[u]==maxn)g2=u;\n\t\tif(!v)break;\n\t\tsize[v]+=size[u];\n\t\tif(size[u]>son[v])son[v]=size[u];\n\t}\n\tif(!g2)return g1;\n\tfor(int i=head[g1]; i!=-1; i=e[i].nxt) {\n\t\tint v=e[i].to;\n\t\tif(v==g2) {\n\t\t\te[i].to=++n;\n\t\t\te[i^1].to=n;\n\t\t\tadd(n,g1);\n\t\t\tadd(n,g2);\n\t\t\treturn n;\n\t\t}\n\t}\n}\nll dfs1(int u) {\n\tll num[N];\n\tint r=0;\n\tsize[u]=1;\n\th[u]=B;\n\tfor(int i=head[u]; i!=-1; i=e[i].nxt) {\n\t\tint v=e[i].to;\n\t\tif(v==fa[u])continue;\n\t\tfa[v]=u;\n\t\tdep[v]=dep[u]+1;\n\t\tnum[++r]=dfs1(v);\n\t\tsize[u]+=size[v];\n\t}\n\tsort(num+1,num+r+1);\n\tfor(int i=1; i<=r; i++)h[u]=h[u]*B+num[i];\n\treturn h[u]*=size[u];\n}\nint f[N][N],to1[N],to2[N];\nint find(int u1,int u2) {\n\tint idx1=0,idx2=0;\n\tmemset(to1,0,sizeof(to1));\n\tmemset(to2,0,sizeof(to2));\n\tfor(int i=head[u1]; i!=-1; i=e[i].nxt) {\n\t\tint v1=e[i].to;\n\t\tif(v1==fa[u1])continue;\n\t\tif(!to1[v1])to1[v1]=++idx1;\n\t\tfor(int j=head[u2]; j!=-1; j=e[j].nxt) {\n\t\t\tint v2=e[j].to;\n\t\t\tif(v2==fa[u2])continue;\n\t\t\tif(!to2[v2])to2[v2]=++idx2;\n\t\t\tdis[to1[v1]][to2[v2]]=-f[v1][v2];\n\t\t}\n\t}\n\treturn KM(idx1)+(a[u1]!=b[u2]);\n}\nint bfs(int s) {\n\tint r=0;\n\tq[++r]=s;\n\tfor(int l=0; l<=r; l++) {\n\t\tint u=q[l];\n\t\tfor(int i=head[u]; i!=-1; i=e[i].nxt) {\n\t\t\tint v=e[i].to;\n\t\t\tif(v==fa[u])continue;\n\t\t\tq[++r]=v;\n\t\t}\n\t}\n\tfor(int i=r; i>=0; i--) {\n\t\tif(dep[q[i]]!=dep[q[r]]) {\n\t\t\ti++;\n\t\t\tfor(int j=r; j>=i; j--)\n\t\t\t\tfor(int k=r; k>=i; k--)\n\t\t\t\t\tif(h[q[j]]==h[q[k]]) {\n\t\t\t\t\t\tf[q[j]][q[k]]=find(q[j],q[k]);\n\t\t\t\t\t}\n\t\t\tr=i-1;\n\t\t}\n\t}\n\treturn find(s,s);\n}\nint main() {\n\tcnt=-1,memset(head,-1,sizeof(head));\n\tn=read();\n\tfor(int i=1; i<n; i++) {\n\t\tint u=read(),v=read();\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t}\n\tfor(int i=1; i<=n; i++)a[i]=read();\n\tfor(int i=1; i<=n; i++)b[i]=read();\n\tint rt=calcg(1);\n\tfa[rt]=0;\n\tdfs1(rt);\n\tfor(int i=1; i<=n; i++)for(int j=1; j<=n; j++)f[i][j]=INF;\n\tprintf(\"%d\",bfs(rt));\n\treturn 0;\n}\n```",
        "postTime": 1611819878,
        "uid": 306255,
        "name": "\u65e5\u5fa1\u8353\u7ff3",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3296 \u3010[SDOI2013]\u523a\u5ba2\u4fe1\u6761\u3011"
    }
]