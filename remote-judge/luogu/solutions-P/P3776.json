[
    {
        "content": "\u5bf9\u4e8e\u6bcf\u4e24\u5757\u76f8\u90bb\u7684\u53ef\u7528\u571f\u5730\uff08\u4e0d\u88ab\u86c7\u5360\u636e\u7684\u571f\u5730\uff0c\u4e0b\u79f0**\u767d\u70b9**\uff0c\u53cd\u4e4b\u4e3a\u9ed1\u70b9\uff09\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c\u5f62\u6210\u56fe $G$\uff0c\u663e\u7136\u9898\u610f\u5c31\u662f\u6c42 $G$ \u5728\u6a2a\u5750\u6807 $[a_r,b_r]$\uff0c\u7eb5\u5750\u6807 $[a_c,b_c]$ \u8303\u56f4\u5185\u7684\u8fde\u901a\u5757\u4e2a\u6570\u3002\n\n\u663e\u7136 $G$ \u662f\u4e00\u4e2a\u5e73\u9762\u56fe\u3002\u6839\u636e\u5e73\u9762\u56fe\u7684\u6b27\u62c9\u516c\u5f0f\uff0c\u5bf9\u4e8e**\u8fde\u901a**\u5e73\u9762\u56fe $G$\uff0c\u6709 $|V|-|E|+|F|=1$\uff0c\u5176\u4e2d $|V|,|E|,|F|$ \u5206\u522b\u8868\u793a $G$ \u7684\u70b9\u6570\u3001\u8fb9\u6570\u3001\u5212\u5206\u5e73\u9762\u6570\u3002\u8fdb\u800c\u63a8\u77e5\uff1a\u5bf9\u4e8e\u4efb\u610f\u5e73\u9762\u56fe $G$\uff0c$|V|-|E|+|F|=G$ \u7684\u8fde\u901a\u5757\u6570\u3002\u8003\u8651\u5feb\u901f\u8ba1\u7b97 $|V|,|E|,|F|$ \u7684\u503c\u3002\n\n\u663e\u7136 $|V|,|E|$ \u90fd\u5f88\u597d\u8ba1\u7b97\uff1a\u4ee5 $|V|$ \u4e3a\u4f8b\uff0c\u76f8\u5f53\u4e8e\u8ba1\u7b97 $[a_r,b_r][a_c,b_c]$ \u5185\u7684\u767d\u70b9\u4e2a\u6570\uff0c\u800c\u767d\u70b9\u4e2a\u6570\u8f83\u5927\uff0c\u53cd\u9762\u8003\u8651\uff0c\u8f6c\u5316\u4e3a\u8ba1\u7b97\u8be5\u533a\u57df\u5185\u9ed1\u70b9\u4e2a\u6570\u2014\u2014\u7531\u4e8e\u9ed1\u70b9\u603b\u6570\u4e3a $O(m)$ \u7684\uff0c\u8f6c\u5316\u4e3a\u7b80\u5355\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\uff0c\u4e3b\u5e2d\u6811\u5373\u53ef\u89e3\u51b3\u3002$|E|$ \u5305\u542b\u4e24\u90e8\u5206\u8fb9\uff1a\u6a2a\u8fb9\u548c\u7ad6\u8fb9\uff0c\u5206\u5f00\u8003\u8651\uff0c\u6bcf\u90e8\u5206\u4e5f\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\uff0c\u4ea6\u53ef\u540c\u4e0a\u89e3\u51b3\u3002\n\n\u5bf9\u4e8e $|F|$\uff0c\u539f\u56fe\u7684\u5e73\u9762\u53ef\u80fd\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a\u4e00\u662f\u82e5\u5e72 $1\\times 1$ \u7684\u5c0f\u6b63\u65b9\u5f62\uff0c\u8fd9\u4e00\u90e8\u5206\u76f8\u5f53\u4e8e\u6c42\u56db\u4e2a\u70b9\u90fd\u662f\u767d\u70b9\u7684\u6570\u91cf\uff0c\u5957\u7528\u4e8c\u7ef4\u6570\u70b9\u5373\u53ef\uff1b\u53e6\u5916\u8981\u7279\u522b\u6ce8\u610f\uff0c\u5982\u679c\u77e9\u5f62\u8303\u56f4\u5c06\u86c7\u7684\u8303\u56f4\u5b8c\u5168\u5305\u4f4f\u5e76\u7559\u6709\u5916\u9699\uff0c\u5219 $|F|$ \u989d\u5916\u52a0 $1$\u2014\u2014\u4ee4\u9ed1\u70b9\u7684 $r,c$ \u6700\u5927\u6700\u5c0f\u503c\u4e3a $maxr,minr,maxc,minc$\uff0c\u5219\u4e0a\u8ff0\u6761\u4ef6\u7b49\u4ef7\u4e8e $a_r<minr$ \u4e14 $b_r>maxr$ \u4e14 $a_c<minc$ \u4e14 $b_c>minc$\u3002\u5177\u4f53\u539f\u7406\u7559\u7ed9\u8bfb\u8005\u601d\u8003\u3002\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u65f6\u95f4\u3001\u7a7a\u95f4\u590d\u6742\u5ea6\u5747\u4e3a $O((r+c+m)\\log c)$ \u7684\u505a\u6cd5\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002**\u7279\u522b\u63d0\u9192\uff1a**\u7279\u5224 $m=0$\uff0c\u5373 $S$ \u4e3a\u7a7a\u7684\u60c5\u51b5\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n\nusing namespace std;\n\nint r=0,c=0,m=0,Q=0;\n\nstruct point\n{\n\tint x,y;point(int xx=0,int yy=0):x(xx),y(yy){}\n};bool operator<(point a,point b){if(a.x!=b.x)return a.x<b.x;return a.y<b.y;}\nbool operator==(point a,point b){return a.x==b.x&&a.y==b.y;}\n\nvector<point> q[4];\nvoid add_point(int x,int y)\n{\n\tfor(int i=0;i<4;i++)q[i].push_back(point(x,y));\n\tif(x<r){q[1].push_back(point(x+1,y)),q[3].push_back(point(x+1,y));}\n\tif(y<c){q[2].push_back(point(x,y+1)),q[3].push_back(point(x,y+1));}\n\tif(x<r&&y<c){q[3].push_back(point(x+1,y+1));}\n}\n\nstruct PresidentTree\n{\n\tstruct nd\n\t{\n\t\tint lc,rc,sum;\n\t}t[7000000];int used;\n\tvoid build(int l,int r,int &k)\n\t{\n\t\tif(!k)k=++used;t[k].sum=0;if(l==r)return;\n\t\tint mid=(l+r)>>1;build(l,mid,t[k].lc),build(mid+1,r,t[k].rc);\n\t}\n\tint add(int pos,int val,int l,int r,int k)\n\t{\n\t\tint p=++used;t[p]=t[k];\n\t\tif(l==r){t[p].sum+=val;return p;}\n\t\tint mid=(l+r)>>1;if(pos<=mid){t[p].lc=add(pos,val,l,mid,t[k].lc);}else t[p].rc=add(pos,val,mid+1,r,t[k].rc);\n\t\tt[p].sum=t[t[p].lc].sum+t[t[p].rc].sum;return p;\n\t}\n\tint sum(int x,int y,int l,int r,int k)\n\t{\n\t\tif(l>y||r<x)return 0;\n\t\tif(x<=l&&r<=y)return t[k].sum;\n\t\tint mid=(l+r)>>1;return sum(x,y,l,mid,t[k].lc)+sum(x,y,mid+1,r,t[k].rc);\n\t}\n}T[4];int rt[4][500000];\n\nchar S[500000];\n\nint sum(int i,int ar,int ac,int br,int bc)\n{\n\tif(ar>br||ac>bc)return 0;\n\treturn T[i].sum(ac,bc,1,c,rt[i][br])-T[i].sum(ac,bc,1,c,rt[i][ar-1]);\n}\n\nint main()\n{\n\tscanf(\"%d%d%d%d\",&r,&c,&m,&Q);\n\tint sr=0,sc=0;scanf(\"%d%d\",&sr,&sc);add_point(sr,sc);\n\tif(m)scanf(\"%s\",S+1);\n\tint minr=sr,maxr=sr,minc=sc,maxc=sc;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(S[i]=='N')sr--;if(S[i]=='S')sr++;if(S[i]=='W')sc--;if(S[i]=='E')sc++;\n\t\tminr=min(minr,sr),maxr=max(maxr,sr),minc=min(minc,sc),maxc=max(maxc,sc);\n\t\tadd_point(sr,sc);\n\t}\n\t//puts(\"\");\n\tfor(int i=0;i<4;i++)\n\t{\n\t\tsort(q[i].begin(),q[i].end());\n\t\t\n\t\tvector<point>::iterator new_end=unique(q[i].begin(),q[i].end());\n\t\tq[i].erase(new_end,q[i].end());\n\t\t//for(int j=0;j<q[i].size();j++)printf(\"%d %d\\n\",q[i][j].x,q[i][j].y);\n\t\tT[i].build(1,c,rt[i][0]);\n\t\tfor(int j=1,p=-1;j<=r;j++)\n\t\t{\n\t\t\trt[i][j]=rt[i][j-1];\n\t\t\twhile(p+1<q[i].size()&&q[i][p+1].x==j)\n\t\t\t{\n\t\t\t\tp++;\n\t\t\t\trt[i][j]=T[i].add(q[i][p].y,1,1,c,rt[i][j]);\n\t\t\t}\n\t\t}\n\t\t//puts(\"\");\n\t}\n\t\n\twhile(Q--)\n\t{\n\t\tint ar=0,ac=0,br=0,bc=0;scanf(\"%d%d%d%d\",&ar,&ac,&br,&bc);long long R=br-ar+1,C=bc-ac+1;\n\t\tlong long ans1=R*C-sum(0,ar,ac,br,bc);\n\t\tlong long ans2=(R-1)*C-sum(1,ar+1,ac,br,bc);\n\t\tlong long ans3=R*(C-1)-sum(2,ar,ac+1,br,bc);\n\t\tlong long ans4=(R-1)*(C-1)-sum(3,ar+1,ac+1,br,bc);\n\t\tif(ar<minr&&br>maxr&&ac<minc&&bc>maxc)ans4++;\n\t\t//printf(\"%lld %lld %lld %lld\\n\",ans1,ans2,ans3,ans4);\n\t\tprintf(\"%lld\\n\",ans1-ans2-ans3+ans4);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1595775795,
        "uid": 112794,
        "name": "\u5468\u5b50\u8861",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3776 \u3010[APIO2017]\u6591\u6593\u4e4b\u5730\u3011"
    }
]