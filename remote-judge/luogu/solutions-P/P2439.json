[
    {
        "content": "\u849f\u84bb\u5199\u4e86\u4e2aO(n+k)\u7b97\u6cd5,\u7b80\u5355\u7c97\u66b4.jpg.\u601d\u8def\u5c31\u662f\u5f0030000\u4e2avector\u4f5c\u4e3a\u8d77\u59cb\u65f6\u95f4(\u5c31\u662f\u4e0d\u7528\u6392\u5e8f),\u5bf9\u4e8e\u8bfb\u5165\u7684\u4e1c\u897f(st,ed)\u5c06ed\u6254\u5230st\u7684\u90a3\u4e2avector\u91cc,\u7136\u540e\u5c31\u662f\u4e00\u4e2a\u5f88\u5047\u7684dp\u4e86,dp[i]\u8868\u793a\u5728i\u65f6\u95f4\u7ed3\u675f\u7684\u6700\u5927\u6f14\u8bb2\u65f6\u95f4,\u8f6c\u79fb\u4e5f\u5f88\u7b80\u5355,\u5c31\u662f\u8981\u6ce8\u610f\u4e0bdp[i]\u7684\u521d\u503c\u662fdp[i-1],\u56e0\u4e3a\u53ef\u4ee5\u67d0\u6bb5\u65f6\u95f4\u4e0d\u6392\u6f14\u51fa...\u4ee3\u780117\u884c,0ms,\u8fd8\u7b97\u53ef\u4ee5...\u5177\u4f53\u770b\u4ee3\u7801\u5427...\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,dp[30010]={0},st,ed;\nvector<int>mp[30010];\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d%d\",&st,&ed),mp[st].push_back(ed);\n    for(int i=0;i<=30000;i++)\n    {\n        if(i>1)dp[i]=max(dp[i],dp[i-1]);\n        for(int j=0;j<mp[i].size();j++)\n        dp[mp[i][j]]=max(dp[mp[i][j]],dp[i]+mp[i][j]-i);//\u8f6c\u79fb \n    }\n    cout<<dp[30000];//\u6700\u5927\u5c3130000\u7ed3\u675f \n}\n```",
        "postTime": 1523770815,
        "uid": 51742,
        "name": "sigland",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2439 \u3010[SDOI2005]\u9636\u68af\u6559\u5ba4\u8bbe\u5907\u5229\u7528\u3011"
    },
    {
        "content": "\u5927\u4f6c\u4eec\u7684$DP$\u6709\u70b9\u590d\u6742\uff0c\u8ba9\u6211\u6765\u8bb2\u4e9b\u6613\u61c2\u7684\u3002\n\n\u60f3\u5fc5\u5927\u5bb6\u90fd\u4f1a\u5199\u201c\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u95ee\u9898\u201d\uff08$LIS$\uff09\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u8fd9\u9053\u9898\u8f6c\u5316\u4e3a$LIS$\u5440\uff01\n\n**\u600e\u4e48\u8f6c\u5316\u5462\uff1f**\n\n\u6211\u4eec\u77e5\u9053\uff0c$LIS$\u4e2d\u4e0d\u4e0b\u964d\u6307\u7684\u662f\u6570\u5b57\u5927\u5c0f\uff0c\u800c\u5728\u8fd9\u9053\u9898\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e0d\u4e0b\u964d\u6765\u6307\u4ee3\u6f14\u8bb2\u7684\u65f6\u95f4\uff0c\u53ca\u540e\u9762\u7684\u6f14\u8bb2\u5f00\u59cb\u65f6\u95f4\u4e0d\u4f4e\u4e8e\u524d\u9762\u6f14\u8bb2\u7684\u7ed3\u675f\u65f6\u95f4\u3002\n\n\u800c$LIS$\u4e2d\uff0c$f_i$\u6307\u4ee3\u7684\u662f\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u8fd9\u91cc\u53ef\u4ee5\u6307\u4ee3\u6700\u957f\u7684\u6f14\u8bb2\u65f6\u95f4\uff1b\u800c$LIS$\u4e2d$f_i$\u66f4\u65b0\u662f\u56e0\u4e3a\u5728\u6bd4\u5b83\u66f4\u5c0f\u7684\u6570\u4e2d\uff0c\u6709\u6bd4$f_i$\u66f4\u957f\u7684\u5e8f\u5217\uff0c\u8fd9\u91cc\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u5f53\u524d\u9762\u7684\u67d0\u4e2a\u6f14\u8bb2\u52a0\u4e0a\u4e4b\u524d\u7684\u6f14\u8bb2\uff0c\u6bd4$f_i$\u66f4\u5927\u65f6\uff0c\u53ef\u4ee5\u66f4\u65b0\u3002\n\n\u7b80\u800c\u8a00\u4e4b\uff0c\u539f$LIS$\u7684\u65b9\u7a0b\u4e3a\uff1a\n\n$f_i=\\max(f_i,f_j+1)\\ (1<=j<i,a_j<=a_i)$\n\n\u7c7b\u6bd4\uff0c\u8fd9\u91cc\u7684\u65b9\u7a0b\u53ef\u4ee5\u5199\u4e3a\n\n$f_i=\\max(f_i,f_j+a_i.len)\\ (1<=j<i,a_j.ed<=a_i.st)$\n\n\uff08\u5176\u4e2d$len$\u8868\u793a\u6f14\u8bb2\u65f6\u95f4\u957f\u5ea6\uff0c$st$\u8868\u793a\u6f14\u8bb2\u5f00\u59cb\u65f6\u95f4\uff0c$ed$\u8868\u793a\u6f14\u8bb2\u7ed3\u675f\u65f6\u95f4\uff09\n\n**\u8f6c\u5316\u6210\u529f\u4e86\uff01**\n\n\u6700\u540e\u8bb2\u4e00\u4e0b\u7ec6\u8282\uff1a\n\n\u6211\u4eec\u4e3a\u4e86\u4fdd\u6301\u65f6\u95f4\u6700\u957f\uff0c\u4e00\u5b9a\u8981**\u6392\u5e8f**,\u6309\u5f00\u59cb\u65f6\u95f4\u5927\u5c0f\u6392\u5e8f\u3002\n\n\u6ca1\u4e86\u3002\n\n$AC$ $Code$\n\n```cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nstruct speak{\n\tint st, ed, len;\n};//\u7ed3\u6784\u4f53\u66f4\u65b9\u4fbf\u63a8\u7b97\u548c\u6392\u5e8f\nspeak a[10010];\nbool cmp(speak x, speak y) {\n\treturn x.st < y.st;\n}//\u81ea\u5b9a\u4e49cmp\u51fd\u6570\uff0c\u7528\u6765\u6392\u5e8f\u3002\u5982\u679c\u60f3\u8981\u66f4\u5feb\u53ef\u91cd\u8f7d\u8fd0\u7b97\u7b26\n\nint n, f[10010], ans;\n\nint main() {\n\tcin >> n;\n\tfor (int i=1; i<=n; i++) {\n\t\tcin >> a[i].st >> a[i].ed;\n\t\ta[i].len = a[i].ed-a[i].st;//\u65f6\u95f4\u8ba1\u7b97\u5f0f\n\t}\n\tsort(a+1, a+1+n, cmp);\n\tfor (int i=1; i<=n; i++) {\n\t\tf[i] = a[i].len;//\u521d\u59cb\u5316\uff1a\u5047\u8bbe\u5728\u5b83\u524d\u9762\u6ca1\u6709\u6f14\u8bb2\uff0c\u6700\u77ed\u65f6\u95f4\u4e5f\u662f\u8fd9\u4e2a\u6f14\u8bb2\u7684\u65f6\u95f4\n\t\tfor (int j=1; j<i; j++) {\n\t\t\tif (a[j].ed <= a[i].st && f[i] < f[j]+a[i].len)\n\t\t\t\tf[i] = f[j]+a[i].len;\n\t\t}\n\t\tans = max(ans, f[i]);//\u66f4\u65b0\u7b54\u6848\n\t}\n\tcout << ans << endl;\n\treturn 0;//\u5b8c\u7ed3\u6492\u82b1\uff01\n}\n```\n",
        "postTime": 1565430442,
        "uid": 88213,
        "name": "zhangyuhan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2439 \u3010[SDOI2005]\u9636\u68af\u6559\u5ba4\u8bbe\u5907\u5229\u7528\u3011"
    },
    {
        "content": "\u770b\u5230\u5927\u591a\u6570\u5927\u4f6c\u90fd\u7528dp\uff0c\u4e5f\u6709\u5927\u4f6c\u7528spfa\u8dd1\u6700\u957f\u8def~~\u7ed3\u679c\u4ee3\u7801\u5f88\u957f~~\uff0c\u5c0f\u849f\u84bb\u76f4\u63a5\u5efa\u56fe\u8dd1bfs~~\uff08\u4ec0\u4e48\uff0cspfa\u4e5f\u7528\u7684\u662fbfs\uff09~~\u3002\u4e3b\u8981\u539f\u56e0\u662f\u8fd9\u4e2a\u56fe\u6ca1\u6709\u73af\uff0c\u53ef\u4ee5\u5199\u7684\u7b80\u5355\u5f88\u591a\u3002\n\n### \u5efa\u56fe\n\n\u5efa\u56fe\u5176\u5b9e\u6bd4\u8f83\u7b80\u5355\uff0c\u628a\u6bcf\u4e2a\u70b9\u5411\u4e0b\u4e00\u4e2a\u70b9\u8fde\u957f\u5ea6\u4e3a0\u7684\u8fb9\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6f14\u8bb2\uff0c\u4ece\u5f00\u59cb\u65f6\u95f4\u5411\u7ed3\u675f\u65f6\u95f4\u8fde\u4e00\u6761\u957f\u4e3a\u65f6\u95f4\u5dee\u7684\u8fb9\u3002\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u8dd1bfs\u4e86\u3002\n\n### \u6838\u5fc3\u4ee3\u7801\n```cpp\n\tq.push(0);//\u63d2\u5165\u8d77\u59cb\u70b9\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=head[x];i;i=nxt[i]){//\u679a\u4e3e\u51fa\u8fb9\n\t\t\tif(d[x]+zhi[i]<d[bian[i]])continue;//\u5224\u65ad\u76ee\u6807\u70b9\u662f\u5426\u4e3a\u6700\u4f18\u89e3\u3002\n\t\t\td[bian[i]]=d[x]+zhi[i];\n\t\t\tq.push(bian[i]);\n\t\t}\n\t}\n\n```\n\u975e\u5e38\u77ed\uff0c\u800c\u4e14\u4e0d\u7528\u62c5\u5fc3\u88ab\u5361\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,V;\nint tot,bian[60010],nxt[60010],head[30010],zhi[60010];\nint d[30010];\ninline void add(int x,int y,int z){\n\ttot++;\n\tbian[tot]=y;\n\tzhi[tot]=z;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n}\nstruct data{\n\tint b,e;\n}a[10010];\nbool operator <(data a,data b){\n\treturn a.b<b.b;\n}\nqueue<int>q;\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d%d\",&a[i].b,&a[i].e);\n\t\tadd(a[i].b,a[i].e,a[i].e-a[i].b);\n\t\tV=max(V,a[i].e);\n\t}\n\tfor(int i=0;i<=V;++i){\n\t\tadd(i,i+1,0);\n\t}\n\tq.push(0);\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=head[x];i;i=nxt[i]){\n\t\t\tif(d[x]+zhi[i]<d[bian[i]])continue;\n\t\t\td[bian[i]]=d[x]+zhi[i];\n\t\t\tq.push(bian[i]);\n\t\t}\n\t}\n\tcout<<d[V]<<endl;\n}\n```",
        "postTime": 1538132165,
        "uid": 48143,
        "name": "zhenglier",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2439 \u3010[SDOI2005]\u9636\u68af\u6559\u5ba4\u8bbe\u5907\u5229\u7528\u3011"
    },
    {
        "content": "\u8003\u8651 dp \uff0c\u6211\u4eec\u8bbe $f(i)$ \u8868\u793a\u5230 i \u65f6\u95f4\u70b9\uff0c\u6700\u957f\u7684\u6f14\u8bb2\u65f6\u95f4\uff0c\u90a3 $f(i)$\n\n\u80af\u5b9a\u7531 $f(i)$ , i \u4e4b\u524d\u7684\u6f14\u8bb2\u7684\u65f6\u95f4\u4e2d\u6700\u5927\u7684\u90a3\u4e2a\u8f6c\u79fb\u8fc7\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\n\n\u52a8\u6001\u6570\u7ec4 vector \u5b58 i \u4e4b\u524d\u7684\u8bb2\u8bfe\u65f6\u95f4\uff0c\u8f6c\u79fb\u65f6\u904d\u5386 vector \u5bfb\u627e\u7b54\u6848\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nvector<int>v[3000002];\nint n,mx,f[3000002];\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tv[y].push_back(x);\n\t\tmx=max(mx,y);\n\t}\n\tfor(int i=1;i<=mx;i++)\n\t{\n\t\tf[i]=f[i-1];\n\t\tfor(int j=0;j<v[i].size();j++)\n\t\t{\n\t\t\tint b=v[i][j];\n\t\t\tf[i]=max(f[i],f[b]+i-b);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",f[mx]);\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1618105588,
        "uid": 503899,
        "name": "_byta",
        "ccfLevel": 0,
        "title": "P2439 [SDOI2005]\u9636\u68af\u6559\u5ba4\u8bbe\u5907\u5229\u7528"
    },
    {
        "content": "#### Solution\n\u8fd9\u662f\u4e00\u9053\u663e\u800c\u6613\u89c1\u7684dp.\n\n\u4ee4$f(i)$\u8868\u793a\u524di\u5206\u949f\u6700\u957f\u6f14\u8bb2\u957f\u5ea6, \u90a3\u4e48\u53ef\u4ee5\u6709\u4ee5\u4e0b\u8f6c\u79fb\u65b9\u7a0b\n![](https://cdn.luogu.com.cn/upload/pic/21847.png )\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e2a\u65f6\u95f4$t$\u7528\u6f14\u8bb2\u7684\u7ec8\u70b9\u65f6\u95f4\u5728\u8fd9\u4e2a\u65f6\u95f4\u7684\u6240\u6709\u65f6\u95f4\u6765\u66f4\u65b0$f(t)$.\u56e0\u4e3a\u6bcf\u4e2a\u6f14\u8bb2\u53ea\u6709\u4e00\u4e2a\u65f6\u95f4, \u56e0\u6b64\u603b\u590d\u6742\u5ea6\u5c31\u662f$O(m+n)$, \u5176\u4e2d$m$\u8868\u793a\u6700\u5927\u53ef\u80fd\u51fa\u73b0\u7684\u65f6\u95f4,$n$\u8868\u793a\u6f14\u8bb2\u4e2a\u6570.\n#### code\n\u6211\u6bd4\u8f83\u6de1\u817e\u6240\u4ee5\u5f3a\u884c\u6307\u9488\u5199\u4e86\u4e00\u6ce2, \u539f\u56e0\u662f\u53ef\u4ee5\u4e0d\u7528\u5199\u6570\u7ec4\u4e0b\u6807\u6bd4\u8f83\u597d\u5199\u2026\u2026\n```c++\n#include<algorithm>\n#include<iostream>\n#include<cstdio>\n#define N 40006\nusing namespace std;\n\nint me;\nstruct TED{\n    int st,en;\n    bool operator<(const TED& o)const{return en<o.en;}\n    void input(){scanf(\"%d%d\",&st,&en);me=max(me,en);}\n}t[N];\n\nint f[N];\n\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;++i)\n        t[i].input();\n    sort(t,t+n);\n    TED *pos=t;\n    int *g=f+1;\n    int i=1;\n    while(i<=me){\n        while(pos->en<(g-f))++pos;\n        while(pos->en==(g-f))*g=max(*g,*(f+pos->st)+pos->en-pos->st),++pos;\n        *g=max(*g,*(g-1));\n        g+=1,++i;\n    }\n    printf(\"%d\",*max_element(f+1,f+me+1));\n    return 0;\n}\n```",
        "postTime": 1530256085,
        "uid": 39067,
        "name": "aiyougege",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2439 \u3010[SDOI2005]\u9636\u68af\u6559\u5ba4\u8bbe\u5907\u5229\u7528\u3011"
    },
    {
        "content": "DP\u65b9\u7a0b\u663e\u800c\u6613\u89c1\uff1a\u5bf9\u4e8e\u4e00\u5bf9\u6570 a, b\n\ndp[b] = max(dp[b], max(dp[i])  + b - a);(i = 1 to a);\n\n\u600e\u4e48\u5c31\u6ca1\u6709\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4 max(dp[i]) \u7684\u5462\uff1f\u6211\u6765\u8d21\u732e\u4e00\u4e2a\u5427 qwq~\uff08\u771f\u76f8\u662f\u672c\u4eba\u6ca1\u60f3\u5230\u4e8c\u5206\uff09\n\n\u672c\u4eba\u8bed\u6587\u5dee\uff0c\u6240\u4ee5\u5f00\u59cb\u7406\u89e3\u9519\u4e86\u9898\u610f\uff0c\u6709\u4e24\u4e2a\u8981\u70b9\uff1a\n\n1\u3001\u7acb\u5373\u5f00\u59cb\u6307\uff1a\u5982\u679c\u524d\u4e00\u4e2a\u4eba\u5728 t \u79d2\u7ed3\u675f\u6f14\u8bb2\uff0c\u90a3\u4e48\u4ece t \u79d2\u5f00\u59cb\u6f14\u8bb2\u7684\u4eba\u53ef\u4ee5\u7acb\u523b\u5f00\u59cb\uff1b\n\n2\u3001\u65f6\u95f4\u95f4\u9694\u6307\uff1a\u6bd4\u5982\u4ece 1s \u5230 3s \uff0c\u90a3\u4e48\u7ecf\u8fc7\u7684\u65f6\u95f4\u662f 3-1=2s\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\uff0c\u8981\u641e\u5b9a\u8fd9\u9898\u5c31\u4e0d\u96be\u5566~\u4e0a\u4ee3\u7801ing\uff08\u5168\u7a0blog\u6548\u7387\uff09\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N = 30005, M = 10005;\nstruct data {\n    int x, y;\n}a[M];\nint dp[N], n, ma, sum[N << 2];\nbool cmp(data a, data b) {\n    return a.y < b.y;\n}\nvoid updata(int l, int r, int d, int c) {\n    if(l == r) {\n        sum[d] = max(dp[c], sum[d]);\n        return ;\n    }\n    int mid = (l + r) >> 1;\n    if(c <= mid) updata(l, mid, d << 1, c);\n    if(mid < c) updata(mid + 1, r, d << 1 | 1, c);\n    sum[d] = max(sum[d << 1], sum[d << 1 | 1]);\n    return ;\n}\n//\u7ebf\u6bb5\u6811\u5355\u70b9\u66f4\u65b0\u6700\u5927\u503c\nint query(int l, int r, int d, int L, int R) {\n    if(L <= l && r <= R) return sum[d];\n    int mid = (l + r) >> 1, ans = 0;\n    if(L <= mid) ans = max(ans, query(l, mid, d << 1, L, R));\n    if(mid < R) ans = max(ans, query(mid + 1, r, d << 1 | 1, L, R));\n    return ans;\n}\n//\u7ebf\u6bb5\u6811\u533a\u95f4\u67e5\u8be2\u6700\u5927\u503c\nint main() {\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; i++) scanf(\"%d%d\", &a[i].x, &a[i].y);\n    sort(a + 1, a + n + 1, cmp);\n    for(int i = 1; i <= n; i++) {\n        dp[a[i].y] = max(dp[a[i].y], query(0, a[n].y, 1, 0, a[i].x) + a[i].y - a[i].x);//dp\u65b9\u7a0b\n        updata(0, a[n].y, 1, a[i].y);\n    }\n    printf(\"%d\", query(1, a[n].y, 1, 1, a[n].y));\n    return 0;\n}\n```",
        "postTime": 1511525045,
        "uid": 20094,
        "name": "\u68a6\u56de\u8fd8",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2439 \u3010[SDOI2005]\u9636\u68af\u6559\u5ba4\u8bbe\u5907\u5229\u7528\u3011"
    },
    {
        "content": "#### \u5982\u4f55\u7528\u56fe\u8bba~~\u4e71\u641e~~dp\u7684\u533a\u95f4\u80cc\u5305\n\n\n\n------------\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u533a\u95f4\uff0c\u53ef\u4ee5\u679a\u4e3e\u8fd9\u4e2a\u533a\u95f4\u53d6\u548c\u4e0d\u53d6\uff0c\u53d6\u5c31\u52a0\u4e0a\u8fd9\u4e00\u533a\u95f4\u7684\u4ef7\u503c\uff0c\u4f46\u662f\u6709\u65f6\u7528\u80cc\u5305\u662f\u6bd4\u8f83\u96be\u5199\u7684\uff0c\u800c\u4e14\u6709\u7684\u4eba\u4e0d\u4f1a\u80cc\u5305\u4ec0\u4e48\u7684~~\uff08\u4e5f\u8bb8\u6ca1\u6709\u5427\uff09~~\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u533a\u95f4\uff0c\u4ece\u533a\u95f4\u7684\u5f00\u59cb\u5230\u7ed3\u675f\u5efa\u4e00\u6761\u8fb9\uff0c\u8fb9\u7684\u6743\u503c\u5c31\u662f\u533a\u95f4\u7684\u6743\u503c\n\n```\nfor(int i=1;i<=n;i++)\n    {\n        int u,v,w;\n        scanf(\"%d%d\",&u,&v);\n        w=v-u;\n        add(u,v,w);\n        m=max(v,m);//\u7ec8\u70b9\u662f\u533a\u95f4\u53f3\u7aef\u70b9\u7684\u6700\u5927\n        x[u]=1,x[v]=1;\n    }\n    //\u8fde\u4e0a\u8fb9\u4e4b\u540e\u5982\u4e0b\n    \u2014\u2014\u2014\u2014 \u2014\u2014\u2014\u2014\u2014 \u2014\u2014\u2014\u2014\u2014\u2014\n       \u2014\u2014\u2014\u2014\n```\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4e0d~~\u592a~~\u8054\u901a\u7684\u56fe\uff0c\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u4e0d\u8054\u901a\u7684\u56fe\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f3a\u884c\u8054\u901a\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u8f83\u8fd1\u7684\u533a\u95f4\uff0c\u8fde\u4e0a\u4e00\u6761\u6743\u503c\u4e3a0\u7684\u8fb9\n\n```\n\u2014\u2014\u2014\u2014--\u2014\u2014\u2014\u2014--\u2014\u2014\u2014\u2014\u2014\u2014\n\n```\n```\n\twhile(1)\n    {\n        while(!x[hd]&&hd<m) hd++;\n        add(tl,hd,0);//\u8fd9\u6837\u5efa\u8fb9\u53ef\u4ee5\u6709\u6548\u51cf\u5c11\u8fb9\u7684\u6570\u91cf\n        if(hd>=m)\n        break;\n        tl=hd++;\n    }\n```\n\u4e4b\u540e\u7528spfa||dij\u8dd1\u6700\u957f\u8def\u5c31\u53ef\u4ee5\u4e86\n~~\u4e00\u822c\u8fd9\u79cd\u6b63\u89e3\u662fdp\u7684\u9898\u76ee\uff0c\u4e0d\u53ef\u80fd\u5361\u8fd9\u4e2a\u7684~~\n \n\u6211\u4eec\u6709\u5e78\u8bf7\u5230\u4e86bfs-spfa \u548c dfs-spfa \u548c \u53d8\u79cd-dij\n\nbfs-spfa \u65f6\u95f4 14ms\n```\nvoid spfa(int st)\n{\n    q.push(st);\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        vis[u]=1;\n        for(int i=head[u];i;i=e[i].next)\n        {\n            int to=e[i].to;\n            if(dis[to]<=dis[u]+e[i].w)//\u6700\u957f\u8def\uff0c\u4e00\u5b9a\u8981\u8fd9\u4e2a\u2018=\u2019\uff0c\u4e0d\u7136\u6709\u7684\u533a\u95f4\u5c31\u65e0\u6cd5\u88ab\u9009\u4e0a\n            {\n                dis[to]=dis[u]+e[i].w;\n                if(!vis[to])\n                {\n                    q.push(to);\n                    vis[to]=1;\n                }\n            }\n        }\n    }\n}\n```\ndfs-spfa \u65f6\u95f4 27ms\n\n~~\u4f18\u79c0\u7684\u4f53\u73b0\u7684spfa-dfs\u5224\u65ad\u8d1f\u73af\u7684\u4f18\u8d8a\u6027~~\n```\nvoid spfa(int u)\n{\n    vis[u]=1;\n    for(int i=head[u];i;i=e[i].next)\n    {\n        int to=e[i].to;\n         if(dis[to]<=dis[u]+e[i].w)\n            {\n                dis[to]=dis[u]+e[i].w;\n                if(vis[to])\n                return;\n                spfa(to);\n            }\n    }\n    vis[u]=0;\n}\n```\n\u53d8\u79cd-dij\n\ntip\uff1a\u7531\u4e8e\u8fd9\u79cd\u9898\u76ee\u5b58\u5728\u8d1f\u73af\uff0c\u548c0\u6743\u7b49\u7b49\u2026\u2026\u2026\u2026\u6240\u4ee5\u6bcf\u4e00\u4e2a\u70b9\u8981\u591a\u6b21\u62d3\u5c55\uff0c\u5176\u5b9e\u548cspfa\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u5c31\u662f\u591a\u4e86\u4e00\u4e2a\u5806\u4f18\u5316\n\n\u7136\u800c\n\n\u65f6\u95f4 22ms\n\n~~\u4f18\u79c0\u7684\u4f53\u73b0\u7684spfa-dfs\u5224\u65ad\u8d1f\u73af\u7684\u4f18\u8d8a\u6027~~\n```\nvoid dij(int st)//\u5176\u5b9e\u8fd9\u5927\u90e8\u5206\u5c31\u662fspfa\n{\n    pq.push((node){st,0});\n\tdis[st]=0;\n    while(!pq.empty())\n    {\n        int u=pq.top().id;\n        pq.pop();\n        vis[u]=0;\n        for(int i=head[u];i;i=e[i].next)\n        {\n            int to=e[i].to;\n            if(dis[to]<=dis[u]+e[i].w)\n            {\n                dis[to]=dis[u]+e[i].w;\n                if(!vis[to])\n                pq.push((node){to,dis[to]}),vis[to]=1;\n            }\n        }\n    }\n}\n```\n\u6700\u540e\u9644\u4e0a\u51a0\u519b\u4ee3\u7801\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct edge{\n    int next,to,w;\n}e[10100];\nint dis[31000];\nint n,m,cnt,head[31001],hd=1,tl;\nbool vis[31000],x[31000];\nvoid add(int from,int to,int l)\n{\n    cnt++;\n    e[cnt].to=to;\n    e[cnt].next=head[from];\n    e[cnt].w=l;\n    head[from]=cnt;\n}\nqueue<int> q;\nvoid spfa(int st)\n{\n    q.push(st);\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        vis[u]=1;\n        for(int i=head[u];i;i=e[i].next)\n        {\n            int to=e[i].to;\n            if(dis[to]<=dis[u]+e[i].w)\n            {\n                dis[to]=dis[u]+e[i].w;\n                if(!vis[to])\n                {\n                    q.push(to);\n                    vis[to]=1;\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    //freopen(\"in.txt\",\"r\",stdin);\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        int u,v,w;\n        scanf(\"%d%d\",&u,&v);\n        w=v-u;\n        add(u,v,w);\n        m=max(v,m);\n        x[u]=1,x[v]=1;\n    }\n    while(1)\n    {\n        while(!x[hd]&&hd<m) hd++;\n        add(tl,hd,0);\n        if(hd>=m)\n        break;\n        tl=hd++;\n    }\n    spfa(0);\n    printf(\"%d\",dis[m]);\n}\n```\n\n\u9047\u5230\u4e0d\u4f1a\u7684\u9898\u76ee\uff0c\u4e0d\u8981\u614c\u5f20\uff0c\u8ba4\u771f~~\u4e71\u641e~~\u603b\u662f\u6709\u5206\u7684\n\n\u66b4\u529b\u8d5b\u6807\u7b97\u4e4b\u7c7b\u7684\u4e0d\u662f\u4e0d\u53ef\u80fd\n\n\u795dNOIP2018 rp++\uff01\n\n```\nwhile(666)\n++rp\n```\n\u540c\u7c7b\u9898\u76ee\n[p2889](https://www.luogu.org/problemnew/show/P2889)\n[p1280](https://www.luogu.org/problemnew/show/P1280)",
        "postTime": 1540820038,
        "uid": 104704,
        "name": "\u7530\u5927\u5751",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2439 \u3010[SDOI2005]\u9636\u68af\u6559\u5ba4\u8bbe\u5907\u5229\u7528\u3011"
    },
    {
        "content": "~~\u8fd9\u4e2a\u9898\u88ab\u5de6\u95ed\u53f3\u5f00\u5751\u4e86\u597d\u51e0\u6b21\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7~~\n\n~~\u5ba3\u4f20[blog](https://www.luogu.com.cn/blog/2007100723874wxz/)~~\n\n\u9996\u5148\uff0c\u8fd9\u9898\u4e0a\u624b\u60f3\u5230\u8d2a\u5fc3(\u5982\u679c\u4e0d\u662f\u591a\u5c11\u5206\u949f\u800c\u662f\u591a\u5c11\u573a\u5c31\u597d\u4e86)\n\n\u4f46\u7136\u540e\u4e00\u60f3\u5c31\u4f1a\u53d1\u73b0\uff1a\u8d2a\u5fc3\u4e0d\u884c\uff01\n\n\u4e8e\u662f\u8003\u8651DP\n\n$\\operatorname{dp}(\\text{i})$\u8868\u793a$\\text{i}$\u65f6\u523b\u7ed3\u5c3e\u6700\u591a\u6ed4\u6ed4\u4e0d\u7edd\u591a\u5c11\u65f6\u95f4\n\n\u8003\u8651\u5230\u6f14\u8bb2\u7684\u95ee\u9898\uff0c\u76f4\u63a5DP\u5e76\u4e0d\u662f\u5f88\u597d\u8f6c\u79fb\uff08dalao\u8bf7\u65e0\u89c6\uff09\n\n\u4e2a\u4eba\u662f\u5148\u628a\u6bcf\u4e2a\u6f14\u8bb2\u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f\uff0c\u7136\u540e\u5728\u6bcf\u4e2a\u6f14\u8bb2\u7684\u7ed3\u675f\u65f6\u95f4DP\u4e00\u4e0b\n\n\u611f\u89c9\u65b9\u4fbf\u4e00\u70b9\n\n\u8bb0$\\text{i}$\u4e3a\u5f53\u524d\u6f14\u8bb2\u7684\u7ed3\u675f\u65f6\u95f4\uff0c$\\text{j}$\u4e3a\u5f00\u59cb\u65f6\u95f4\n\n\u65b9\u7a0b\uff1a\n\n$\\operatorname{dp}(\\text{i})=\\operatorname{max}\\{\\operatorname{max}\\{\\operatorname{dp}(\\text{k})|0\\le{k}\\le{j}\\}+i-j,\\operatorname{dp}(\\text{i})\\}$\n\n\u5982\u679c\u76f4\u63a5\u66b4\u529b\u6c42\u4e0a\u8ff0\u5f0f\u5b50\u4e2d\u7684$\\text{max}$\u4f3c\u4e4e\u662f$\\operatorname{O}(\\text{n}^2)$\n\n\u4e8e\u662f\u8003\u8651\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\n\n\u8981\u652f\u6301\u4ec0\u4e48\uff1f\n\n\u5355\u70b9\u4fee\u6539\u533a\u95f4\u67e5\u8be2$({\\text{RMQ}})$\n\n\u7ebf\u6bb5\u6811\u53ef\u4ee5\n\n\u4f46\u662f~~\u672c\u849f\u84bb\u4e0d\u592a\u719f\u7ec3\u7ebf\u6bb5\u6811~~\u89c2\u5bdf\u5230\u7279\u6b8a\u6027\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u666e\u901a\u7684${\\text{RMQ}}$\n\n\u5b83\u5176\u5b9e\u662f\u4e00\u4e2a\u524d\u7f00\u6700\u503c\u67e5\u8be2$({\\text{PMQ}})$\uff01\n\n\u524d\u7f00\u67e5\u8be2\u7684\u8bdd\u6811\u72b6\u6570\u7ec4\u5c31\u53ef\u4ee5\u7528\u4e86~\n\n\u5e38\u6570\u6bd4\u7ebf\u6bb5\u6811\u5c0f\u5f88\u591a\uff0c\u4ee3\u7801\u4e5f\u597d\u5199\n\n\u7efc\u4e0a\uff0c\u8fd9\u9898\u5c31\u6ca1\u4e86\uff01\n\n\u6700\u540e\u4e0a\u4ee3\u7801\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nint bit[30009];\ninline void update(register int pos,const int&x){\n\twhile(pos<=30000){\n\t\tif(x<=bit[pos])return;\n\t\tbit[pos]=x;\n\t\tpos+=pos&-pos;\n\t}\n}\ninline int query(register int pos){\n\tregister int x=0;\n\twhile(pos){\n\t\tx=max(x,bit[pos]);\n\t\tpos&=pos-1;\n\t}\n\treturn x;\n}\nstruct node{\n\tint u,v;\n}p[10009];\nbool cmp(const node&x,const node&y){\n\treturn x.v<y.v;\n}\nint dp[10009];\nint main(){\n\tcin>>n;\n\tfor(register int i=1;i<=n;++i)cin>>p[i].u>>p[i].v,p[i].u+=2,p[i].v+=2;\n\tsort(p+1,p+n+1,cmp);\n\tfor(register int i=1;i<=n;++i){\n\t\tint u=query(p[i].u)+p[i].v-p[i].u;\n\t\tif(u<=query(p[i].v))\n\t\t\tcontinue;\n\t\tupdate(p[i].v,dp[p[i].v]=u);\n\t}\n\tcout<<query(30005);\n    return 0;\n}\n```",
        "postTime": 1581823385,
        "uid": 250637,
        "name": "UnyieldingTrilobite",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2439 \u3010[SDOI2005]\u9636\u68af\u6559\u5ba4\u8bbe\u5907\u5229\u7528\u3011"
    },
    {
        "content": "\u5927\u81f4\u7ffb\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u6ca1\u6709\u627e\u5230 $DAG(dp)$ \u505a\u6cd5\uff0c\u8d21\u732e\u4e00\u53d1\n\n--- \n\n\u9996\u5148\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u82e5\u628a\u6bcf\u4e2a\u65f6\u95f4\u4f5c\u4e3a\u4e00\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u6709\u5982\u4e0b\u7684\u8fde\u8fb9\uff1a\n\n1. $s_i\\ \\rightarrow\\ \\  t_i$ $\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!^{t_i-s_i}$\n1. $i\\ \\rightarrow i+1$ $\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!^{0}$\n\n\u7136\u540e\u6709\u4eba\u4f1a\u7528 $spfa/dij$ \u8dd1\u6700\u957f\u8def\u3002\n\n\u7136\u800c\u8fd9\u662f\u4e2a $DAG(Directed\\ Acyclic\\ Graph, \\texttt{\u6709\u5411\u65e0\u73af\u56fe})$, \u6240\u4ee5\u6ca1\u5fc5\u8981\u3002\n\n\u53ef\u4ee5\u7528 $O(n+m)$($n$ \u4e3a\u8282\u70b9\u6570, $m$ \u4e3a\u8fb9\u6570)\u5b8c\u6210 $DAG$ \u7684\u6700\u957f\u8def/\u6700\u77ed\u8def\u8ba1\u7b97\u3002\n\n\u5176 $dfs$ \u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nDAG_dfs(node)\n\tfor each edge in {start_node = node}\n    \tlongest[end_node] = max(longest[end_node], longest[start_node] + edge_value)\n        if (updated longest[end_node]) \n        \tDAG_dfs(end_node)\n```\n\n\u53ef\u80fd\u662f\u6211\u5199\u6cd5\u4e0d\u4f18\u79c0\u7684\u539f\u56e0\uff0c\u8fd9\u4e2a $dfs$ \u7248\u7684\u590d\u6742\u5ea6\u770b\u7740\u4e0d\u592a\u5bf9\u3002(\u597d\u50cf\u4e0d\u5e94\u8be5\u679a\u4e3e\u51fa\u8fb9\uff0c\u5e94\u8be5\u679a\u4e3e\u5165\u8fb9)\n\n\u7ed9\u51fa\u6b63\u786e\u590d\u6742\u5ea6\u7684 $dp$ \u4f2a\u4ee3\u7801(\u4fdd\u8bc1\u7ed3\u70b9 $i$ \u5728\u7ed3\u70b9 $i + 1$ \u4e4b\u524d)\uff1a\n```cpp\nfor node from 1 to n\n\tfor each edge in {start_node = node}\n    \tlongest[end_node] = max(longest[end_node], longest[start_node] + edge_value)\n```\n\n\u7ed9\u51fa\u5168\u90e8\u4ee3\u7801\uff08$32$ \u884c\uff09\n\n(\u53e6\u8bf4\u660e\uff1a\u56e0\u4e3a $i\\ \\rightarrow i+1$ $\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!^{0}$ \u8fd9\u6761\u8fb9\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u90fd\u4e00\u5b9a\u5b58\u5728\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5efa\u5b9e\u8fb9\uff0c\u5efa\u7acb\u865a\u8fb9\u5373\u53ef\uff0c\u5373\u5728 ``for node from 1 to n`` \u540e\u5148\u8fdb\u884c ``f[i + 1] = max(f[i + 1], f[i])`` \u64cd\u4f5c)\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int MaxN = 10000 + 7, MaxK = 30000 + 7;\nint n, MaxEnd = -1;\nint head[MaxK], to[MaxN], nxt[MaxN], edges_count = 0;\nint f[MaxK];\n\nvoid add(int u, int v)\n{\n    to[++edges_count] = v;\n    nxt[edges_count] = head[u];\n    head[u] = edges_count;\n}\n\nint main()\n{\n    scanf(\"%d\", &n);\n    for (int i = 1, s, t; i <= n; i++) {\n        scanf(\"%d%d\", &s, &t);\n        add(s, t);\n        MaxEnd = max(MaxEnd, t);\n    }\n    for (int i = 0; i <= MaxEnd; i++) {\n        f[i + 1] = max(f[i + 1], f[i]);\n        for (int e = head[i]; e; e = nxt[e]) {\n            f[to[e]] = max(f[to[e]], f[i] + to[e] - i);\n        }\n    }\n    printf(\"%d\", f[MaxEnd]);\n    return 0;\n}\n```",
        "postTime": 1577013628,
        "uid": 63720,
        "name": "brealid",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2439 \u3010[SDOI2005]\u9636\u68af\u6559\u5ba4\u8bbe\u5907\u5229\u7528\u3011"
    },
    {
        "content": "# \u9898\u89e3\n\u53d1\u73b0\u5927\u4f6c\u4eec\u5199\u7684\u90fd\u662fDP\uff0c\u4e3a\u4ec0\u4e48\u849f\u84bb\u60f3\u5230\u7684\u662f\u6700\u957f\u8def\uff1f   \n\u5176\u5b9e\u590d\u6742\u5ea6\u8fd8\u662f\u9760\u8c31\u7684\uff0c\u6700\u591a\u4e5f\u5c3140000\u6761\u8fb9\u3002\u3002\u3002  \n\u5bf9\u4e8e\u6240\u6709\u7684\u6f14\u8bb2  **\u52a0\u8fb9 \u8d77\u59cb\u65f6\u95f4 $\\to$ \u7ec8\u6b62\u65f6\u95f4\uff0c\u8fb9\u6743\u4e3a \u65f6\u95f4\u5dee \u3002**  \n\u7136\u540e\uff0c~~\u4e3a\u4e86\u8ba9\u6700\u957f\u8def\u80fd\u591f\u8dd1\u8d77\u6765\uff0c~~\u7531\u6bcf\u4e2a\u65f6\u523b\u5411\u4e0b\u4e00\u4e2a\u65f6\u523b\u8fde\u8fb9\u6743\u4e3a0\u7684\u8fb9\u3002  \n\u5f00\u5f00\u5fc3\u5fc3\u7684\u8dd1\u6700\u957f\u8def\u5c31\u597d\u5566\u3002\n***\n\u9898\u5916\u8bdd\uff1a\u5176\u5b9e\u849f\u84bb\u7b2c\u4e00\u53cd\u5e94\u662f\u7f51\u7edc\u6d41\uff0c\u60f3\u8dd1\u4e00\u4e2a\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\uff0c\u7136\u540e\u52a0\u5b8c\u8fb9\u540e\u53d1\u73b0\u5bb9\u91cf\u5168\u90fd\u662f1\uff08\u4ec0\u4e48\u9b3c\uff09\u3002\u3002\u3002\u9ed8\u9ed8\u7684\u9119\u89c6\u4e86\u4e00\u4e0b\u81ea\u5df1\uff0c**\u5bb9\u91cf\u90fd\u662f1\u8fd8\u8dd1\u4ec0\u4e48\u7f51\u7edc\u6d41**\uff01\uff01 \n# \u4ee3\u7801\n###### \u4f5c\u4e3a\u4e00\u4e2a\u56fe\u8bba\uff0c\u4ee3\u7801\u6bd4DP\u957f\u4e5f\u662f\u5f88\u6b63\u5e38\u7684\u5427\u3002\u3002\u3002\uff08\u9003\uff09\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\n#define N 40005\n#define M 1000005\n\nint n,S,T,ans;\n\ninline int read() {\n    int tmp=0,w=1;\n    char ch=0;\n    while(!isdigit(ch)) {if(ch=='-') w=-1;ch=getchar();}\n    while(isdigit(ch)) tmp=(tmp<<1)+(tmp<<3)+ch-'0',ch=getchar();\n    return tmp*w;\n}\n\nstruct node {\n    int v,f,nex;\n}e[M];\nint tot,h[N];\nvoid add(int u,int v,int f) {\n    e[++tot].v=v,e[tot].f=f,e[tot].nex=h[u],h[u]=tot;\n}\n\nint dis[N];\nbool vis[N];\ndeque<int>q;\nvoid spfa() {  // \u6700\u957f\u8def\n    for(int i=S;i<=T;++i) dis[i]=-1e9,vis[i]=0;\n    q.push_back(S);\n    dis[S]=0;\n    int x,xx;\n    while(!q.empty()) {\n        x=q.front();\n        q.pop_front();\n        vis[x]=0;\n        for(int i=h[x];i;i=e[i].nex) {\n            xx=e[i].v;\n            if(dis[xx]<dis[x]+e[i].f) {\n                dis[xx]=dis[x]+e[i].f;\n                if(!vis[xx]) {\n                    vis[xx]=1;\n                    if(q.empty()||dis[xx]<dis[q.front()]) q.push_back(xx);\n                    else q.push_front(xx);\n                }\n            }\n        }\n    }\n}\n\nint main()\n{\n    n=read();\n    int u,v;\n    for(int i=1;i<=n;++i) {\n        u=read(),v=read();\n        add(u,v,v-u); // \u7531\u6f14\u8bb2\u5f00\u59cb\u65f6\u95f4\u5411\u7ed3\u675f\u65f6\u95f4\u52a0\u8fb9\n        S=min(S,u),T=max(T,v);\n    }\n    for(int i=S;i<T;++i) add(i,i+1,0); // \u6bcf\u4e2a\u65f6\u523b\u5411\u4e0b\u4e00\u4e2a\u65f6\u523b\u52a0\u8fb9\n    spfa();\n    printf(\"%d\\n\",dis[T]);\n    return 0;\n} \n```",
        "postTime": 1521003275,
        "uid": 36728,
        "name": "\u96e8\u5b63",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2439 \u3010[SDOI2005]\u9636\u68af\u6559\u5ba4\u8bbe\u5907\u5229\u7528\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u5b66\u4e60\u4e86DP\u540e\u603b\u7b97\u8fc7\u4e86\u8fd9\u9898qwq\n\n\u9996\u5148\u8981\u660e\u786e\u7684\u662f \u672c\u9898\u6c42\u6700\u957f\u65f6\u95f4 \u6240\u4ee5**\u4e0d\u80fd\u8d2a\u5fc3**\uff08\u6c42\u6700\u591a\u573a\u6b21\uff09\n\n\u90a3\u4e48\u6700\u4f18\u89e3\u95ee\u9898 \u4e00\u4e0b\u5c31\u60f3\u5230\u52a8\u6001\u89c4\u5212~~\u660e\u660e\u662f\u6b63\u597d\u5b66\u5230~~\n\n#### \u5199DP\u9996\u5148\u660e\u786e\u56db\u4e2a\u8981\u7d20:\n\n1.\u72b6\u6001\uff1af[i]\u8868\u793a\u4ee5\u7b2ci\u573a\u6f14\u8bb2\u7ed3\u5c3e\u7684 \u6700\u957f\u6f14\u8bb2\u603b\u65f6\u95f4\n\n2.\u72b6\u6001\u8f6c\u79fb:\u8003\u8651\u524dj\u573a\u6f14\u8bb2\u4e2d(1<=j<i) \u82e5\u6709\u7b2cj\u573a\u6f14\u8bb2\u4e0e\u7b2ci\u573a\u6f14\u8bb2\u4e0d\u51b2\u7a81\n\n\t\u5373t[j].ed<=t[i].st\u5c31\u662f\u8bf4\u7b2cj\u573a\u5728\u7b2ci\u573a\u6f14\u8bb2\u5f00\u59cb\u524d\u7ed3\u675f\n    \n   \uff08\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u53d6\u7b49\u2014\u2014\u9898\u76ee\u539f\u8bdd\uff1a\u201c\u6211\u4eec\u5047\u8bbe\u5728\u67d0\u4e00\u6f14\u8bb2\u7ed3\u675f\u7684\u77ac\u95f4\u6211\u4eec\u5c31\u53ef\u4ee5\u7acb\u5373\u5f00\u59cb\u53e6\u4e00\u4e2a\u6f14\u8bb2\u201d\uff09\n   \n   \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5728f[j]\u540e\u9762\u52a0\u4e0a\u672c\u573a\u6f14\u8bb2\u7684\u957f\u5ea6 \u518d\u4e0ef[i]\u53d6\u6700\u5927\u503c\u5373\u53ef\n   \n   \u65b9\u7a0b:f[i]=max(f[i],f[j]+t[i].len);//1<=j<i && t[j].ed<=t[i].st\n   \n3.\u8fb9\u754c:\u5bf9\u4e8ef[i]\u6765\u8bf4 \u4ee5t[i]\u7ed3\u5c3e\u7684\u6700\u957f\u6f14\u8bb2\u603b\u65f6\u95f4 \u81f3\u5c11\u662f\u5b83\u81ea\u5df1\u7684\u65f6\u957f\n\n\t\u5373t[i].len\n    \n4.\u89e3:\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u4ee5\u54ea\u4e00\u573a\u7ed3\u675f\u662f\u6700\u4f18\u7684\uff0c\u6240\u4ee5\u8981\u5728\u6240\u6709\u7684f[i]\u4e2d\u53d6\u6700\u5927\u7684\uff1amax{f[i]}\n\n\n\u6700\u540e\u9644\u4e0a\u4ee3\u7801qwq\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=10003;\nstruct tim{\n    int st,ed,len;\n};//\u7ed3\u6784\u4f53 \u8868\u793a\u6bcf\u4e00\u573a\u6f14\u8bb2\u7684\u8d77\u59cb\u65f6\u95f4\u3001\u7ed3\u675f\u65f6\u95f4\u3001\u6301\u7eed\u65f6\u957f\ntim t[MAXN];\nint n,f[MAXN];\nint ans;\nbool cmp(tim x,tim y){//\u6309\u8d77\u70b9\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u7ec8\u70b9\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u5347\u5e8f\u6392\u5e8f\n    if(x.st==y.st) return x.ed<y.ed;\n    return x.st<y.st;\n}\nint main(){\n    cin>>n;\n    ans=INT_MIN;//\u8d4b\u521d\u503c\uff08\u597d\u4e60\u60ef\uff09\n    for(int i=1;i<=n;i++){\n        cin>>t[i].st>>t[i].ed;\n        t[i].len=t[i].ed-t[i].st;//\u5c06\u6bcf\u573a\u6f14\u8bb2\u65f6\u957f\u9884\u5904\u7406\u51fa\u6765 \u6ce8\u610f\u8fd9\u91cc\u4e0d\u9700\u8981+1\uff08\u5206\u6790\u6837\u4f8b\u53ef\u5f97\uff09\n    }\n    sort(t+1,t+n+1,cmp);//\u6392\u5e8f\n    for(int i=1;i<=n;i++){\n        f[i]=t[i].len;//\u8fb9\u754c\uff08\u521d\u59cb\u5316\uff09\n        for(int j=1;j<i;j++){//\u679a\u4e3e\u6bcf\u4e00\u4e2a\u53ef\u80fd\u8f6c\u79fb\u8fc7\u6765\u7684\u72b6\u6001\n            if(t[j].ed<=t[i].st && f[j]+t[i].len>f[i]){//\u7b2cj\u573a\u5728\u7b2ci\u573a\u524d\u7ed3\u675f \u5e76\u4e14\u52a0\u4e0a\u7b2ci\u573a\u540e\u603b\u65f6\u957f\u6bd4\u4e4b\u524d\u7684\u8981\u957f\n                f[i]=f[j]+t[i].len;//\u66f4\u65b0\u72b6\u6001\n        \t\t}\n        \t} \n        ans=max(ans,f[i]);//\u4e0a\u6587\u63d0\u5230\u7684 \u5982\u4f55\u5bfb\u627e\u6700\u4f18\u89e3\n    }\n    cout<<ans;\n    return 0;\n}\n```\n\n",
        "postTime": 1565448366,
        "uid": 8321,
        "name": "Twinkle3110",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2439 \u3010[SDOI2005]\u9636\u68af\u6559\u5ba4\u8bbe\u5907\u5229\u7528\u3011"
    },
    {
        "content": "\n\n\u4e00\u5b9a\u8981\u6ce8\u610f\u8fd9\u9053\u9898\u6c42\u7684\u662f\u6700\u957f\u65f6\u957f\uff0c\u4e0d\u662f\u6700\u591a\u6d3b\u52a8\u6570\uff0c\u4e0d\u80fd\u7528\u8d2a\u5fc3\n\n### \u672c\u9898\u5206\u6790\u601d\u8def\uff1a\n\n\u8fd9\u662f\u4e00\u9053\u5e8f\u5217DP\uff0c\u4e0d\u786e\u5b9a\u7684\u56e0\u7d20\u662f\u65f6\u95f4\n\n\u6240\u4ee5\u6211\u4eec\u4ee5f[i]\u8868\u793a\u5728\u7b2c0~\u7b2ci\u4e2a\u65f6\u523b\u4e3e\u529e\u6f14\u8bb2\u7684\u6700\u957f\u65f6\u95f4\n\n\u5047\u8bbe\u6709\u4e00\u573a\u6f14\u8bb2\uff0c\u65f6\u95f4\u4e3a2~5.\n\n\u6211\u4eec\u73b0\u5728\u6709\u4e24\u79cd\u9009\u62e9\uff1a\n\n1.\u4e0d\u4e3e\u529e\u8fd9\u573a\u6f14\u8bb2\uff0cf[5]\u7684\u72b6\u6001\u4ecef[4]\u8f6c\u79fb\uff0c\u5373f[i]=f[i-1];\n\n2.\u4e3e\u529e\u8fd9\u573a\u6f14\u8bb2\uff0cf[5]\u7684\u72b6\u6001\u4ece\u8fd9\u573a\u6f14\u8bb2\u7684\u5f00\u59cbf[2]\u8f6c\u79fb\uff0c\u5373f[i]=f[l[j].s]+len[j];\n\n\u7efc\u4e0a\uff0c\u8fd9\u9053\u9898\u7684\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662f\uff1a\n\n## f[i]=max(f[i],max(f[i-1],f[l[j].s]+len[j]))\n\n\u6ce8\u610f\u4e8b\u9879\uff1a\n\n1.\u8981\u8f6c\u79fb\u7684\u6f14\u8bb2\u7684\u7ed3\u675f\u65f6\u523b\u5fc5\u987b\u4e0e\u5f53\u524d\u679a\u4e3e\u7684i\u76f8\u540c\n\n2.\u5982\u679c\u6ca1\u6709\u6f14\u8bb2\u53ef\u4ee5\u8f6c\u79fb\uff0c\u8bb0\u5f97\u628a\u72b6\u6001\u4ece\u4e0a\u4e00\u4e2a\u65f6\u523b\u8f6c\u79fb\u8fc7\u6765\uff08f[i]=f[i-1]\uff09\n\n3.\u53ef\u80fd\u6709\u591a\u4e2a\u6f14\u8bb2\u7684\u7ed3\u675f\u65f6\u95f4\u76f8\u540c\uff0c\u6240\u4ee5f[i]\u5728\u8f6c\u79fb\u65f6\uff0c\u4e00\u5b9a\u8981\u4e0e\u539f\u672c\u7684\u503c\u6bd4\u8f83\u4e00\u4e0b\n\n4.\u65f6\u957f\u7684\u8ba1\u7b97\u662fl[j].e-l[j].s\n\n\u4e0a\u4ee3\u7801~ ~~\u5199\u7684\u4e11\uff0c\u4e0d\u8981\u55b7\u6211~~\n\n\uff08\u4ee3\u7801\u4e2d\u7684l[j].t\u5c31\u662f\u6f14\u8bb2\u65f6\u957flen[j]\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint f[30005];\nint n;\nstruct speech\n{\n    int s,e,t;\n}l[10005];\ninline int read()\n{\n    int x=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9') {if(c=='-') f=0; c=getchar();}\n    while(c>='0'&&c<='9') {x=x*10+c-'0'; c=getchar();}\n    return f?x:-x;\n}\ninline void write(int x)\n{\n    if(x<0) {putchar('-'); x=-x;}\n    if(x>9) write(x/10);\n    putchar(x%10+'0'); \n}\nint main()\n{\n    n=read();\n    int maxn=0;\n    for(int i=1;i<=n;i++)\n    {\n        l[i].s=read();\n        l[i].e=read();\n        l[i].t=l[i].e-l[i].s;\n        maxn=max(maxn,l[i].e);\n    }\n    for(int i=1;i<=maxn;i++)\n    {\n        int flag=0;\n        for(int j=1;j<=n;j++)\n            if(l[j].e==i)\n            {\n                f[i]=max(f[i], max(f[i-1],f[l[j].s]+l[j].t));\n                flag=1;\n            }\n        if(flag==0) f[i]=f[i-1];\n    }\n    write(f[maxn]);\n    return 0;\n}\n```\n\u542c\u8bf4\u6709dalao\u7528dij\u5806\u4f18\u5316\u6700\u957f\u8fb9\u5927\u529b\u8279\u8fc7\u53bb\u7684%%%\uff0c\u849f\u84bb\u4e0d\u4f1a\uff0c\u5c31\u4e0d\u653e\u4ee3\u7801\u4e86",
        "postTime": 1563771014,
        "uid": 68009,
        "name": "unsigned_XB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2439 \u3010[SDOI2005]\u9636\u68af\u6559\u5ba4\u8bbe\u5907\u5229\u7528\u3011"
    },
    {
        "content": "\u6253\u4e2aO(tlogn)\u7684\u65b9\u6cd5\uff0c\u5e94\u8be5\u662f\u6b63\u89e3\u5427\n\n\u539f\u7406\u662f\u7528\u4e8c\u5206+\u5355\u8c03\u6808\u4f18\u5316dp\n\n\u7531dp\u65b9\u7a0bf[i]=max(f[i-1],f[j]+i-j)(\u6709\u4e00\u573aj\u5230i\u7684\u6f14\u8bb2)(i,j\u679a\u4e3e\u65f6\u95f4)\n\n\u5176\u4e2d\u5982\u679c\u6709f[j]=f[k]\u4e14j<k(\u5b9e\u8df5\u4e0a\u8fd9\u79cd\u60c5\u51b5\u5f88\u591a)\uff0cf[k]\u662f\u4e0d\u53ef\u80fd\u7528\u5230\u7684\n\n\u5c06\u80fd\u7528\u5230\u7684f\u88c5\u5165\u4e00\u4e2a\u6808\u4e2d\uff0c\u8fd9\u4e2a\u6808\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u53ef\u4ee5\u4e8c\u5206\u67e5\u627e\n\n\u4e0b\u9762\u662f\u4ee3\u7801\u5b9e\u73b0\uff0c\u7b97\u4e0a\u8bfb\u5165\u4f18\u5316\u624d30\u884c\u8fd8\u662f\u6bd4\u8f83\u77ed\u7684\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define fo(a,b,c) for(int a=b;a<=c;a++)\n#define go(a,b,c) for(int a=b;a>=c;a--)\nint read(){\n    int a=0,f=0;char c=getchar();\n    for(;c<'0'||c>'9';c=getchar())if(c=='-')f=1;\n    for(;c>='0'&&c<='9';c=getchar())a=a*10+c-'0';\n    return f?-a:a;\n}//\u8bfb\u5165\u4f18\u5316\nint max(int a,int b){return a>b?a:b;}\nconst int maxn=1e4+1,maxt=3e4+1,t=3e4;\nint head[maxt],pre[maxn],beg[maxn],st[maxt],ft[maxt],top;\n//head\uff0cpre\uff0cbeg\u662f\u540e\u5411\u661f\uff0cst\u662f\u65f6\u95f4\uff08\u5c31\u662f\u5f00\u5934\u7684j\uff09\uff0cft\u662f\u6f14\u8bb2\u65f6\u95f4\uff08dp\u503c\uff09\nint main(){\n    //freopen(\"in.txt\",\"r\",stdin);\n    int n=read();\n    fo(i,1,n){\n        beg[i]=read();int end=read();\n        pre[i]=head[end];head[end]=i;\n    }//\u540e\u5411\u661f\uff0c\u8bb0\u5f55end\u7ed3\u675f\u7684\u6f14\u8bb2\u7684\u5f00\u59cb\u65f6\u95f4\n    fo(i,1,t){\n        int f=ft[top];\n        for(int x=head[i];x;x=pre[x])\n            f=max(f,ft[upper_bound(st+1,st+top+1,beg[x])-st-1]+i-beg[x]);\n//upper_bound\u662fSTL\u4e2d\u7684\u4e8c\u5206\u4ee3\u7801\uff0c\u610f\u601d\u662f\u67e5\u627est\u4e2d\u5927\u4e8ebeg[x]\u7684\u6700\u5c0f\u7684\u5730\u5740\n        if(f>ft[top])ft[++top]=f,st[top]=i;\n    }\n    printf(\"%d\",ft[top]);\n    return 0;\n}\n```",
        "postTime": 1501071811,
        "uid": 12668,
        "name": "Minclxc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2439 \u3010[SDOI2005]\u9636\u68af\u6559\u5ba4\u8bbe\u5907\u5229\u7528\u3011"
    },
    {
        "content": "\n\u8fd9\u9053\u9898\u4e4d\u4e00\u770b\u662fdp,\u6211\u4eec\u4e0d\u96be\u60f3\u5230 _N*K_ \u7684\u66b4\u529b\u7b97\u6cd5\uff1a\n\u9996\u5148\u8981\u5148\u5bf9\u6bcf\u4e00\u573a\u6f14\u8bb2\u6309\u7ed3\u675f\u65f6\u95f4\n\u679a\u4e3e\u7ed3\u675f\u65f6\u95f4i\uff0c\u6240\u9009\u62e9\u7684\u6f14\u8bb2j\n\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n  $f[i]=max(f[i-1],f[a[j].s]+a[j].e-a[j].s) (a[j].e<=i)$ \n\n\n\n------------\n\n\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u8981\u9009\u62e9\u7684$f[a[j].s]+a[j].e-a[j].s$\u4e0e$i$\u7684\u503c\u662f\u65e0\u5173\u7684\u3002\u540c\u65f6\u8981\u60f3\u6ee1\u8db3\u503c\u6700\u5927\uff0c\u5c31\u53ef\u4ee5\u60f3\u5230\u7528\u5927\u6839\u5806\u6765\u7ef4\u62a4\n\n\n\n------------\n\n\n------------\n```cpp\n\npriority_queue<int> Q;\n---------------------------\nstruct node{\n  int s,e;  //s\u4e3a\u8d77\u59cb\u65f6\u95f4\uff0ce\u4e3a\u7ed3\u675f\u65f6\u95f4\u3002\n}a[N];\n---------------------------\nbool cmp(node a,node b){\n  if(a.e!=b.e) return a.e<b.e;\n  return a.s<b.s;\n}\n   sort(a+1,a+1+n,cmp);\n---------------------------\n  t=a[n].e;  int pos=0;   //t\u4e3a\u6700\u5927\u65f6\u95f4\n  for(int i=1;i<=t;i++){\n  \tf[i]=f[i-1];\n    while(pos<=n&&pos>=0){\n\t  pos++;\n\t  if(a[pos].e<=i) Q.push(f[a[pos].s]+a[pos].e-a[pos].s);\n\t  else { --pos; break; }\n\t}\n\tif(!Q.empty()) f[i]=max(f[i],Q.top());\n  }\n  cout<<f[t]<<endl;\n}\n```",
        "postTime": 1532178489,
        "uid": 55276,
        "name": "East_Wind",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2439 \u3010[SDOI2005]\u9636\u68af\u6559\u5ba4\u8bbe\u5907\u5229\u7528\u3011"
    },
    {
        "content": "\u7c7b\u4f3c\u4e8e\u51cc\u4e71\u7684yyy\u2026\u2026\n\n\u65b9\u6cd5\u4e00\uff1a\n\n\u4ee5\u6f14\u8bb2\u4efb\u52a1\u4e3a\u9636\u6bb5\u3002\n\n\u5bf9\u6f14\u8bb2\u7ed3\u675f\u65f6\u95f4\u8fdb\u884c\u5347\u5e8f\u6392\u5217\uff0c\u4f7f\u4e4b\u6709\u5e8f\u3002\n\nF[i]:\u7b2ci\u4e2a\u6f14\u8bb2\u4e3e\u884c\u540e\u6559\u5ba4\u6700\u957f\u7684\u4f7f\u7528\u65f6\u95f4\u3002\n\n\u65b9\u6cd5\u4e8c\uff1a\n\n\u4ee5\u65f6\u95f4\u4e3a\u9636\u6bb5\u3002([0..30000])\n\n\u5bf9\u6f14\u8bb2\u7ed3\u675f\u65f6\u95f4\u8fdb\u884c\u5347\u5e8f\u6392\u5217\uff0c\u4f7f\u4e4b\u6709\u5e8f\u3002\n\nF[i]:\u5230i\u5206\u949f\u4e3a\u6b62\u6559\u5ba4\u7684\u6700\u957f\u4f7f\u7528\u65f6\u95f4\u3002\n\n\u8fd9\u91cc\u7528\u7684\u662f\u65b9\u6cd5\u4e8c\u2026\u2026\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b:f[k[i]]=maxx(f[k[i]],f[j]+k[i]-p[i]);\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\nusing namespace std;\nint n,p[10009],k[10009],f[10009],ans=0,out,fh;\nchar cc;\nint read()\n{\n    out=0,fh=1,cc=getchar();\n    if(cc=='-'){fh=-1;}\n    while(cc>'9'||cc<'0'){cc=getchar();}\n    while(cc>='0'&&cc<='9')\n    {\n        out=out*10+cc-'0',\n        cc=getchar();\n    }\n    return out*fh;\n}\nvoid sort(int a[],int b[],int l,int r)\n{\n    int i,j,mid,p;\n    i=l,j=r,mid=b[(l+r)/2];\n    while(i<=j)\n    {\n        while(b[i]<mid){i++;}\n        while(b[j]>mid){j--;}\n        if(i<=j)\n        {\n            p=a[i],a[i]=a[j],a[j]=p,\n            p=b[i],b[i]=b[j],b[j]=p,\n            i++,j--;\n        }\n    }\n    if(i<r){sort(a,b,i,r);}\n    if(l<j){sort(a,b,l,j);}\n}\nint maxx(int a,int b)\n{\n    if(a>b){return a;}\n    else{return b;}\n}\n```\n/\\*\n\u5176\u5b9e\u4e0a\u9762\u7684\u90fd\u4e0d\u7528\u770b\u2026\u2026\n\n\u90fd\u662f\u4e00\u4e9b\u597d\u61c2\u7684\u4e1c\u897f\u2026\u2026\n\n\u8bfb\u5165\u4f18\u5316\uff0c\u5feb\u6392\uff0c\u624b\u5199max\u2026\u2026\n\n\u636e\u8bf4\u673a\u667a\u7684\u4eba\u90fd\u559c\u6b22\u4ece\u4e3b\u7a0b\u5e8f\u5f00\u59cb\u770b\u2026\u2026\n\n23333333\u2026\u2026\n\n\\*/\n```cpp\nint main()\n{\n    n=read();\n    for(int i=1;i<=n;i++){p[i]=read(),k[i]=read();}\n    sort(p,k,1,n);//\u6392\u5e8f\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=p[i];j>0;j--)\n        {\n            f[k[i]]=maxx(f[k[i]],f[j]+k[i]-p[i]);//\u72b6\u6001\u8f6c\u79fb\uff0c\u4ece\u5f00\u59cb\u65f6\u95f4\u5f80\u524d\u63a8\n        }\n    }\n    for(int i=0;i<=k[n];i++){ans=maxx(ans,f[i]);}//\u627e\u6700\u4f18\u89e3\n    printf(\"%d\",ans);//\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1483855519,
        "uid": 14378,
        "name": "doby",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2439 \u3010[SDOI2005]\u9636\u68af\u6559\u5ba4\u8bbe\u5907\u5229\u7528\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u5728dp\u5185\u90e8\u8fdb\u884c\u4f18\u5316\uff0c\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\u4e00\u4e2a\u5f53\u524d\u6700\u4f18\u7684\u6f14\u8bb2\uff0c\u7136\u540e\u8f6c\u79fb\u8fd9\u4e2a\u6f14\u8bb2\uff0c\u8fd9\u6837\u53ef\u4ee5\u901a\u8fc7n=10^5\uff0cp\uff0ck=10^9\u7684\u5927\u6570\u636e\u3002\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nstruct t{\n    int st,ed;\n}a[100005];\nint n,ans,f[100005];\nint cmp(t a,t b){\n    return a.ed<b.ed;\n}\nint main(){\n    //freopen(\"rez.in\",\"r\",stdin);\n    //freopen(\"rez.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d%d\",&a[i].st,&a[i].ed);\n    }\n    sort(a+1,a+n+1,cmp);//\u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f\n    for (int i=1;i<=n;i++){\n        f[i]=f[i-1]; \n        int l=0,r=i-1;\n        while(l<r){//\u4e8c\u5206\u67e5\u627e\n            int m=(l+r+1) >> 1;\n          if (a[m].ed>a[i].st)r=m-1; else l=m;//\u5224\u65ad\u8be5\u6f14\u8bb2\u662f\u5426\u53ef\u884c\n        }\n        \n        if (f[l]+a[i].ed-a[i].st>f[i])f[i]=f[l]+a[i].ed-a[i].st;//\u8f6c\u79fb\n    }  \n    printf(\"%d\",f[n]);\n    return 0;\n}\n```",
        "postTime": 1473328436,
        "uid": 19241,
        "name": "infinityedge",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2439 \u3010[SDOI2005]\u9636\u68af\u6559\u5ba4\u8bbe\u5907\u5229\u7528\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ea\u8981\u770b\u61c2\u9898\u76ee\u5c31\u5f88\u5bb9\u6613\u4e86\uff0c\n\n\u5148\u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f\uff0c\n\n\u518d\u6309\u7167\u6bcf\u4e2a\u533a\u95f4\u4ece\u5f00\u59cb\u65f6\u95f4\u5f80\u524d\u626b\u63cf\uff0c\n\n\u627e\u4e4b\u524d\u7684\u6700\u5927\u5229\u7528\u65f6\u95f4\u518d\u52a0\u4e0a\u8fd9\u4e00\u6bb5\u65f6\u95f4\uff08\u6ce8\u610f\u76f4\u63a5\u7528**\u7ed3\u675f\u65f6\u95f4-\u5f00\u59cb\u65f6\u95f4**\uff09\uff0c\n\n\u603b\u4e4b\u8fd8\u662f\u5148\u8d2a\u5fc3\uff0c\u518d\u66b4\u529b\u5c31\u884c\u4e86\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#include<cmath>\n#include<vector>\nusing namespace std;\nconst int maxn=10005;\nstruct node{\n    int p,k;\n}a[maxn];\nint f[maxn*3];\nbool cmp(node x,node y){\n    return x.k<y.k;\n}\nint main(){\n    int i,n,ans=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        scanf(\"%d %d\",&a[i].p,&a[i].k);\n    }\n    sort(a+1,a+1+n,cmp);//\u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f\n    for(i=1;i<=n;i++){\n        if(a[i].p==0)f[a[i].k]=max(a[i].k,f[a[i].k]);\n        else {//f[a[i].k]=max(max(f[a[i].k],f[a[i].p]+a[i].k-a[i].p),f[a[i].p-1]+a[i].k-a[i].p);\n             for(int j=a[i].p;j>=0;j--){//\u5bfb\u627e\u5f00\u59cb\u65f6\u95f4\u4e4b\u524d\u7684\u6700\u5927\u5229\u7528\u65f6\u95f4\n                f[a[i].k]=max(f[a[i].k],f[j]+a[i].k-a[i].p);\n             }\n        }\n    }\n    for(i=0;i<=a[n].k;i++){\n        ans=max(ans,f[i]);\n```\n}//\u6700\u540e\u518d\u626b\u4e00\u904d\u627e\u6700\u5927\u5229\u7528\u65f6\u95f4\n    printf(\"%d\",ans);\n\n    return 0;\n\n}\n",
        "postTime": 1467043220,
        "uid": 8843,
        "name": "woshiyzr",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2439 \u3010[SDOI2005]\u9636\u68af\u6559\u5ba4\u8bbe\u5907\u5229\u7528\u3011"
    }
]