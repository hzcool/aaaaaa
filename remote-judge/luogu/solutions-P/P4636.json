[
    {
        "content": "\u6211\u6015\u4e0d\u662f\u4e2a\u50bb\u5b50\n\n\u4e00\u9053\u6a21\u7248\u9898\u809d\u6a21\u62df\u9000\u706b\u3002\n\n~~-\u5b69\u5b50\u6c89\u8ff7\u9000\u706b\u600e\u4e48\u529e\uff1f\u903c\u4ed6\u7528\u6a21\u62df\u9000\u706b\u505a\u8ba1\u7b97\u51e0\u4f55\u518d\u8ba9\u4ed6\u6253\u6b63\u89e3\uff0c\u5988\u5988\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u6211\u7684\u5e38\u6570\u5566\uff01~~\n\n\u54b3\uff0c\u8bf4\u6b63\u89e3\uff0c\u65cb\u8f6c\u5361\u58f3\u6c42\u51f8\u5305\u70b9\u8fb9\u6700\u957f\u503c\uff0c\n\n\u4e0d\u8fc7\u6715\u7684\u4ee3\u7801\u2026\u2026\u6211\u4e00\u5f00\u59cb\u60f3\u6b6a\u4e86\u2026\u2026\u76f4\u63a5\u51f8\u5305+\u4e8c\u5206\u4e0a\u4e86\u2026\u2026\u4f3c\u4e4e\u6ca1\u89c1\u8fc7\u8fd9\u6837\u641e\u7684\u2026\u2026\n\n\u5c31\u662f\u627e\u51f8\u5305\u4e0a\u6bcf\u4e2a\u8fb9\u659c\u7387\u5728\u51f8\u5305\u53e6\u4e00\u4fa7\u7684\u4f4d\u7f6e\uff0c\u5c31\u786e\u5b9a\u4e86\u79bb\u8be5\u8fb9\u6700\u8fdc\u7684\u70b9\u3002\u5176\u5b9e\u5982\u679c\u7528\u5c3a\u53d6\u6cd5\u505a\u7684\u8bdd\uff0c\u5c31\u7b49\u4ef7\u4e8e\u65cb\u8f6c\u5361\u58f3\u4e86\u3002\n\n~~\u6240\u4ee5\u6211\u72ec\u7acb\u53d1\u660e\u4e86\u65cb\u8f6c\u5361\u58f3\uff1f~~\n\n\u8d34\u4e2a\u8d85\u7ea7\u4e11\u7684\u4ee3\u7801\uff0c\u5e0c\u671b\u6b63\u7edf\u65cb\u8f6c\u5361\u58f3\u4eb2\u4e4b\u4fe1\u4e4b\uff0c\u5219\u51e0\u4f55\u4e4b\u9686\uff0c\u53ef\u8ba1\u65e5\u800c\u5f85\u4e5f\u3002\n\n\u61d2\u5f97\u505a\u6b63\u89e3\u4e86\uff0c\u5982\u679c\u60a8\u662f\u521d\u5b66\u8005\uff0c\u60f3\u7528\u8fd9\u7bc7\u4ee3\u7801\u4e3a\u84dd\u672c\u5b66\u65cb\u8f6c\u5361\u58f3\uff0c\u90a3\u4e48\u6211\u5efa\u8bae\u6362\u4e00\u7bc7\u9898\u89e3\u3002\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\nconst double pi = 3.1415926535;\nconst int maxn = 100005;\nconst double inf = 2000000001;\nint n;\ndouble k, l, ans;\nint t;\n\nstruct pointt {\n\tdouble x, y, tk;\n} a[maxn], p[maxn];\n\nint findd(double ff) {\n\tint l, r, mid;\n\tl=1; r=t;\n\twhile(l < r) {\n\t\tmid=(l+r+1)/2;\n\t\tif(a[mid].tk <= ff) l=mid;\n\t\telse r=mid-1;\n\t}\n\treturn l;\n}\n\ndouble count_ans(int kx) {\n\tint i;\n\tdouble kk=a[kx].tk, maxx, minn;\n\tdouble kt;\n\tif(kk < pi) kk+=pi;\n\telse kk-=pi;\n\tif((a[kx].x!= a[kx-1].x)) kt=(a[kx].y-a[kx-1].y)/(a[kx].x-a[kx-1].x);\n\telse kt=inf;\n\t\n\ti=findd(kk);\n\tmaxx=(kt*a[i].x-a[i].y)/sqrt(kt*kt+1);\n\tminn=(kt*a[kx].x-a[kx].y)/sqrt(kt*kt+1);\n\t\n\tif(kt == inf) {\n\t\tmaxx=a[i].x;\n\t\tminn=a[kx].x;\n\t}\n\treturn abs(maxx-minn)/2;\n}\n\nbool cmp(pointt a1, pointt a2) {\n\treturn a1.tk < a2.tk;\n}\n\ndouble count(pointt a1, pointt a2) {\n\tdouble tt=atan2((a1.y-a2.y), (a1.x-a2.x));\n\tif(tt < 0) tt+=2*pi;\n\treturn tt;\n}\n\ndouble ll(pointt a1, pointt a2) {\n\treturn sqrt((a1.y-a2.y)*(a1.y-a2.y) + (a1.x-a2.x)*(a1.x-a2.x));\n}\n\nint main() {\n\tint i, minp, maxp;\n\tdouble miny;\n\tscanf(\"%d\", &n);\n\tfor(i=1; i <= n; i++) \n\t\tscanf(\"%lf%lf\", &p[i].x, &p[i].y);\n\t\n\tminy=p[1].y; minp=1;\n\tfor(i=1; i <= n; i++) {\n\t\tif(p[i].y < miny) miny=p[i].y, minp=i;\n\t}\n\tswap(p[1], p[minp]);\n\tfor(i=1; i <= n; i++) \n\t\tp[i].tk=atan2(p[i].y-p[1].y, p[i].x-p[1].x);\n\tsort(p+1, p+1+n, cmp);\n\tt=0; i=0;\n\tdo {\n\t\ti++;\n\t\tif(i == n+1) i=1;\n\t\twhile(t > 1 && (count(p[i], a[t]) < count(a[t], a[t-1]))) {\n\t\t\tt--;\n\t\t}\n\t\tt++;\n\t\ta[t]=p[i];\n\t\ta[t].tk=count(a[t], a[t-1]);\n\t} while(i != 1 || t <= 1);\n\t\n\tminy=inf;\n\ta[1].tk = -0.1;\n\tfor(i=2; i <= t; i++) {\n\t\tminy=min(miny, count_ans(i));\n\t}\n\t\n\tprintf(\"%.2lf\\n\", miny);\n\treturn 0;\n}\n```\n\n\u53e6\u5916\u5462\uff0c\u5c06\u519b\u9000\u706b\uff0c\u6027\u884c\u6dd1\u5747\uff0c\u9002\u7528\u4e8e\u6614\u65e5\uff0c\u8bc4\u6d4b\u673a\u79f0\u4e4b\u66f090\uff0c\u611a\u4ee5\u4e3a\u6b64\u505a\u9898\u4e4b\u6cd5\uff0c\u4ec5\u4f9b\u89c2\u8d4f\uff0c\u8bf8\u5c06\u5207\u52ff\u60eb\u6020\u3002\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<ctime>\nusing namespace std;\n\nconst int maxn = 100005;\nconst double maxl = 200000000;\nconst double pai = 3.14159;\nconst double delta=0.9;\n\nint n;\ndouble a[maxn], b[maxn], t;\ndouble ansp, ansk;\nint ts;\n\ndouble count(double k) {\n    int i;\n    double ll, maxx=-maxl, minn=maxl;\n    \n    for(i=1; i <= n; ++i) {\n        ll=k*a[i]-b[i];\n        minn=min(minn, ll);\n        maxx=max(maxx, ll);\n    }\n    \n    maxx=maxx/sqrt(k*k+1);\n    minn=minn/sqrt(k*k+1);\n    \n    return (maxx-minn)/2;\n}\n\nvoid SA() {\n    double kk=ansk;\n    double tk, newp;\n    t=1777;\n    while(t > 1e-14) {\n        tk=kk+(rand()*2.0-RAND_MAX)*1.0/10000*t;\n        newp=count(tan(tk));\n        //cout<<tk<<' '<<newp<<endl;\n        //cin>>ts;\n        \n        if(newp < ansp) {\n            kk=tk;\n            ansk=tk;\n            ansp=newp;\n        }\n        else if(exp(-(newp-ansp)*1000/t)*RAND_MAX > rand()) {\n            kk=tk;\n        }\n        t*=delta;\n    }\n    return;\n}\n\nint main() {\n    srand(time(NULL));\n    scanf(\"%d\", &n);\n    //cout<<RAND_MAX<<endl;\n    int i;\n    double pi, tt, stt;\n    for(i=1; i <= n; ++i) {\n        scanf(\"%lf%lf\", &a[i], &b[i]);\n    }\n    //cout<<count(1)<<endl;\n    \n    ansk=0;\n    ansp=count(tan(ansk));\n    for(pi=-1.6; pi <= 1.6; pi+=0.01) {\n        tt=count(tan(pi));\n        if(tt < ansp) {\n            ansp=tt;\n            ansk=pi;\n        }\n    }\n    \n    stt=ansk;\n    for(pi=stt-0.1; pi <= stt+0.1; pi+=0.001) {\n        tt=count(tan(pi));\n        if(tt < ansp) {\n            ansp=tt;\n            ansk=pi;\n        }\n    }\n    \n    stt=ansk;\n    for(pi=stt-0.01; pi <= stt+0.01; pi+=0.0001) {\n        tt=count(tan(pi));\n        if(tt < ansp) {\n            ansp=tt;\n            ansk=pi;\n        }\n    }\n    \n    stt=ansk;\n    for(pi=stt-0.001; pi <= stt+0.001; pi+=0.00001) {\n        tt=count(tan(pi));\n        if(tt < ansp) {\n            ansp=tt;\n            ansk=pi;\n        }\n    }\n    \n    SA();\n    \n    printf(\"%.2lf\\n\", ansp);\n    return 0;\n}\n```",
        "postTime": 1548506415,
        "uid": 18883,
        "name": "CR_Raphael",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4636 \u3010[SHOI2011]\u76f4\u7ebf\u62df\u5408\u3011"
    }
]