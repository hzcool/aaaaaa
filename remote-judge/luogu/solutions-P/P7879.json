[
    {
        "content": " $ k $ \u8db3\u591f\u5c0f\u662f\u89e3\u9898\u7684\u5173\u952e.\n\n $ \\text{Lemma 1:} $  \u82e5\u5b58\u5728\u65b9\u6848,\u5219\u81f3\u5c11\u6709\u4e00\u79cd\u65b9\u6848\u4e0d\u9009\u62e9\u957f\u5ea6\u8d85\u8fc7 $ 2k $ \u7684\u4e32.\n\n\u8003\u8651\u957f\u5ea6\u8d85\u8fc7 $ 2k $ \u7684\u4e32\u4e00\u5b9a\u80fd\u62c6\u6210\u4e24\u4e2a\u81f3\u5c11\u4e3a $ k $ \u7684\u4e32\u5373\u53ef.\n\n\u8003\u8651\u5bf9\u6bcf\u4e2a $ T_i $ \u5904\u7406\u51fa $ l_i $ \u8868\u793a\u6700\u5927\u7684 $ l $ \u4f7f\u5f97 $ T[i,i+l-1] $ \u662f $ S $ \u7684\u5b50\u4e32,\u800c\u7531L1,\u8d85\u8fc7 $ 2k $ \u65f6\u53ef\u4ee5\u76f4\u63a5\u8ba4\u4e3a\u662f $ 2k $ .\u901a\u8fc7\u5bf9 $ S $ \u5efaSAM,\u8fd9\u90e8\u5206\u590d\u6742\u5ea6\u662f $ O(nk) $ .\n\n\u5bf9\u4e8e\u8be2\u95ee,\u8003\u8651\u4ece\u5de6\u5f80\u53f3\u5339\u914d, $ f(i) $ \u8868\u793a $ T[l,i] $ \u8fd9\u4e2a\u524d\u7f00\u80fd\u5426\u5339\u914d.\u5bf9\u4e8e $ T_i $ ,\u53ef\u4ee5\u8f6c\u79fb\u5230 $ [i+k-1,i+l_i-1] $ .\n\n\u90a3\u4e48\u8003\u8651\u7c7b\u4f3c\u52a8\u6001dp,\u5bf9 $ i $ \u6784\u9020\u77e9\u9635\n$$\n\\begin{bmatrix}\n0 & 0 & 0& \\cdots &1& 1& 1&\\cdots& 0&0\\\\\n1 & 0 & 0&\\cdots& 0 & 0 & 0&\\cdots & 0& 0\\\\\n0 & 1 & 0 &\\cdots& 0 & 0 & 0&\\cdots & 0& 0\\\\\n\\vdots\\\\\n0& 0 & 0&\\cdots& 0 & 0 & 0 &\\cdots & 1 &0\n\\end{bmatrix}\n$$\n~~\u8fd9\u6548\u679c\u8fd8\u4e0d\u5982\u76f4\u63a5\u53e3\u8ff0~~\n\n\u53e3\u8ff0\u4e00\u4e0b\u5c31\u662f,\u7b2c\u4e00\u884c $ [k-1,l_i-1] $ \u8fd9\u4e9b\u662f $ 1 $ \u522b\u7684\u662f0,\u7b2c $ i(i>1) $ \u884c\u4ec5\u6709\u7b2c $ i-1 $ \u5217\u662f1.\n\n\u539f\u7406\u5f88\u7b80\u5355,\u8981\u4e48\u8f6c\u79fb\u5230 $ [i+k-1,i+l_i-1] $  \u8981\u4e48\u524d\u79fb\u4e00\u6b65.\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4,\u6bcf\u6b21\u66b4\u529b\u4fee\u6539  $ O(L) $ \u4e2a\u4f4d\u7f6e,\u590d\u6742\u5ea6\u662f $ O(L\\log m\\  \\text{Mul}(2k)+q\\log m\\ \\text{VMul}(2k)) $ ,\u5176\u4e2d $ \\text{Mul}(2k) $ \u8868\u793a\u5927\u5c0f\u4e3a $ 2k\\times 2k $ \u7684\u77e9\u9635\u4e58\u6cd5\u590d\u6742\u5ea6,\u672c\u9898\u4e2d\u53ef\u4ee5\u901a\u8fc7\u538b\u4f4d\u505a\u5230 $ 4k^2 $ , $ \\text{VMul} $ \u8868\u793a\u5927\u5c0f\u4e3a $ 1\\times 2k $ \u7684\u884c\u5411\u91cf\u4e58 $ 2k\\times 2k $ \u7684\u77e9\u9635\u7684\u590d\u6742\u5ea6,\u53ef\u4ee5\u538b\u4f4d\u505a\u5230 $ 2k $ .\n\n\u6216\u8005\u7528\u5206\u5757\u7ef4\u62a4, $ O(L\\ \\text{Mul}(2k)+q\\sqrt m\\ \\text{VMul}(2k)) $ .\n\n\u6216\u8005\u7528\u5206\u5757+\u7ebf\u6bb5\u6811\u7ef4\u62a4.\n\n\u4e0b\u9762\u4ee3\u7801\u4f7f\u7528\u7ebf\u6bb5\u6811,\u6b63\u786e\u6027\u548c\u590d\u6742\u5ea6\u5747\u6b63\u786e,\u4f46\u4ecd\u9700\u8981\u4e00\u4e9b\u5e38\u6570\u4f18\u5316,\u4ec5\u4f9b\u53c2\u8003.\n\n```\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\ntypedef long long ll;\ntypedef unsigned un;\ntypedef unsigned long long ull;\ntypedef std::pair<int,int> pii;\nint read()\n{\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9')x=x*10+(c-'0'),c=getchar();\n\treturn f*x;\n}\nint min(int a,int b){return a<b?a:b;}\nint max(int a,int b){return a>b?a:b;}\ntemplate<typename T> bool umin(T& a,T t){if(a>t)return a=t,1;return 0;}\ntemplate<typename T> bool umax(T& a,T t){if(a<t)return a=t,1;return 0;}\n/**********/\nconst int MAXN = 6000011;\nstruct SAM\n{\n\tint t[MAXN][9],pre[MAXN],len[MAXN],last,tot;\n\tSAM(){last=tot=1;}\n\tvoid extend(int w)\n\t{\n\t\tint pos=last,cur=++tot;\n\t\tlen[cur]=len[pos]+1,last=cur;\n\t\twhile(pos&&!t[pos][w])t[pos][w]=cur,pos=pre[pos];\n\t\tif(!pos){pre[cur]=1;return;}\n\t\tint nxt=t[pos][w];\n\t\tif(len[nxt]==len[pos]+1)pre[cur]=nxt;\n\t\telse\n\t\t{\n\t\t\tint tmp=++tot;\n\t\t\tlen[tmp]=len[pos]+1,memcpy(t[tmp],t[nxt],sizeof t[nxt]);\n\t\t\tpre[tmp]=pre[nxt],pre[cur]=pre[nxt]=tmp;\n\t\t\twhile(pos&&t[pos][w]==nxt)t[pos][w]=tmp,pos=pre[pos];\n\t\t}\n\t}\n}sam;\nstruct Bmatrix\n{\n\tun a[16];\n\tBmatrix(){memset(a,0,sizeof a);}\n\tBmatrix(un* tp){memcpy(a,tp,sizeof a);}\n\tinline Bmatrix operator* (const Bmatrix& you)\n\t{\n\t\tstatic un tp[16];\n\t\tmemset(tp,0,sizeof tp);\n\t\tfor(int i=0;i<16;++i)\n\t\t\tfor(int k=0;k<16;++k)\n\t\t\t\tif(a[i]&(1u<<k))tp[i]|=you.a[k];\n\t\treturn tp;\n\t}\n\tvoid see()\n\t{\n\t\tputs(\"See:\");\n\t\tfor(int i=0;i<16;++i)\n\t\t{\n\t\t\tfor(int j=0;j<16;++j)printf(\"%d\",a[i]>>j&1);\n\t\t\tputs(\"\");\n\t\t}\n\t}\n}a[200011];\nint lf[200011];\nBmatrix getmat(int s,int t)\n{\n\tstatic un tp[16];\n\tmemset(tp,0,sizeof tp);\n\tif(s<=t)tp[0]=((1u<<(t+1))-1)^((1u<<s)-1);\n\tfor(int i=1;i<16;++i)tp[i]=1u<<(i-1);\n\treturn tp;\n}\nint n;\nstruct Segment_Tree\n{\n\tstatic const int MAXN = 200011;\n\tBmatrix t[MAXN<<2|1];\n#define rt t[num]\n#define tl t[num<<1]\n#define tr t[num<<1|1]\n\tvoid init(un l=1,un r=n,un num=1)\n\t{\n\t\tif(l==r){rt=a[l];return;}\n\t\tun mid=(l+r)>>1;\n\t\tinit(l,mid,num<<1),init(mid+1,r,num<<1|1);\n\t\trt=tl*tr;\n\t}\n\tvoid modify(un pos,un l=1,un r=n,un num=1)\n\t{\n\t\tif(l==r){rt=a[l];return;}\n\t\tun mid=(l+r)>>1;\n\t\tif(pos<=mid)modify(pos,l,mid,num<<1);\n\t\telse modify(pos,mid+1,r,num<<1|1);\n\t\trt=tl*tr;\n\t}\n\tun res;\n\tvoid Query(un ql,un qr,un l=1,un r=n,un num=1)\n\t{\n\t\tif(ql<=l&&r<=qr)\n\t\t{\n\t\t\t//printf(\"[%u,%u]\\n\",l,r);\n\t\t\t//rt.see();\n\t\t\tun f=0;\n\t\t\tfor(int i=0;i<16;++i)\n\t\t\t\tif(res&(1u<<i))f|=rt.a[i];\n\t\t\tres=f;\n\t\t\treturn;\n\t\t}\n\t\tun mid=(l+r)>>1;\n\t\tif(ql<=mid)Query(ql,qr,l,mid,num<<1);\n\t\tif(qr>mid)Query(ql,qr,mid+1,r,num<<1|1);\n\t}\n}sgt;\nchar s[MAXN],t[200011];\nint main()\n{\n\tint tasknumber=read();\n\tscanf(\"%s%s\",s+1,t+1);\n\tint k=read(),q=read();\n\tint sn=strlen(s+1);\n\tfor(int i=1;i<=sn;++i)sam.extend(s[i]-'a');\n\tn=strlen(t+1);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tint u=1,j=0;\n\t\tfor(;j<k+k&&i+j<=n;++j)\n\t\t{\n\t\t\tu=sam.t[u][t[i+j]-'a'];\n\t\t\tif(!u)break;\n\t\t}\n\t\ta[i]=getmat(k-1,j-1);\n\t\tlf[i]=j;\n\t\t//a[i].see();\n\t}\n\tsgt.init();\n\twhile(q--)\n\t{\n\t\tint op=read();\n\t\tif(op==1)\n\t\t{\n\t\t\tint l=read(),r=read();\n\t\t\tchar pre=t[r+1];\n\t\t\tscanf(\"%s\",t+l);\n\t\t\tt[r+1]=pre;\n\t\t\tfor(int i=max(1,l-k-k);i<=r;++i)\n\t\t\t{\n\t\t\t\tint u=1,j=0;\n\t\t\t\tfor(;j<k+k&&i+j<=n;++j)\n\t\t\t\t{\n\t\t\t\t\tu=sam.t[u][t[i+j]-'a'];\n\t\t\t\t\tif(!u)break;\n\t\t\t\t}\n\t\t\t\tif(j!=lf[i])a[i]=getmat(k-1,j-1),lf[i]=j,sgt.modify(i);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint l=read(),r=read();\n\t\t\tsgt.res=1;\n\t\t\tsgt.Query(l,r);\n\t\t\tputs(sgt.res&1?\"Yes\":\"No\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1634260846,
        "uid": 73142,
        "name": "\u4e07\u5f18",
        "ccfLevel": 9,
        "title": "P7879 \u9898\u89e3"
    },
    {
        "content": "[\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P7879)\n\n~~orz \u4e00\u53d1\u51fa\u9898\u4eba\uff08\u8bdd\u8bf4\u6211 AC \u8fd9\u9053\u9898\u7684\u65f6\u5019\uff0c\u51fa\u9898\u4eba\u597d\u50cf\u5c31\u5750\u5728\u6211\u7684\u53f3\u4fa7\u5462/cy/cy\uff09~~\n\n\u8003\u8651\u4e00\u4e2a\u5f88 naive \u7684 DP\uff0c$dp_i$ \u8868\u793a $[l,i]$ \u4e4b\u95f4\u7684\u5b57\u7b26\u4e32\u662f\u5426\u53ef\u4ee5\u88ab\u8bc6\u522b\uff0c\u8f6c\u79fb\u5c31\u679a\u4e3e\u4e0a\u4e00\u6bb5\u7684\u7ec8\u6b62\u4e3a\u6b62\uff0c\u7136\u540e SAM/\u54c8\u5e0c\u5224\u65ad\u5b50\u4e32\u662f\u5426\u5728 $s$ \u4e2d\u51fa\u73b0\u8fc7\u3002\n\n\u6ce8\u610f\u5230\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u6240\u6709\u957f\u5ea6 $>2k$ \u7684\u5b57\u7b26\u4e32\u90fd\u53ef\u4ee5\u7531\u957f\u5ea6 $\\ge k$ \u7684\u5b57\u7b26\u4e32\u62fc\u6210\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u6709\u957f\u5ea6\u5728 $[k,2k]$ \u7684\u5b57\u7b26\u4e32\u662f\u6709\u7528\u7684\uff0c\u6545\u6bcf\u6b21\u8f6c\u79fb\u53ea\u7528\u679a\u4e3e $k+1$ \u4e2a\u8f6c\u79fb\u70b9\u3002\u6ce8\u610f\u5230 $k$ \u7684\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u77e9\u9635\u4f18\u5316\u8f6c\u79fb\uff0c\u5373\u5bf9\u4e8e\u5927\u5c0f\u5206\u522b\u4e3a $n\\times m$ \u548c $m\\times k$ \u7684\u77e9\u9635 $A,B$\uff0c\u5b9a\u4e49\u5176\u4e58\u79ef $C$ \u6ee1\u8db3 $C_{i,j}=\\text{or}_{t=1}^mA_{i,t}\\land B_{t,j}$\uff0c\u90a3\u4e48\n$$\n\\begin{bmatrix}\ndp_{i}&dp_{i-1}&\\cdots&dp_{i-2k+1}\n\\end{bmatrix}\n=\n\\begin{bmatrix}\ndp_{i-1}&dp_{i-2}&\\cdots&dp_{i-2k}\n\\end{bmatrix}\n\\times\n\\begin{bmatrix}\ng_1&1&0&0&\\cdots&0\\\\\ng_2&0&1&0&\\cdots&0\\\\\ng_3&0&0&1&\\cdots&0\\\\\n\\vdots&\\vdots&\\vdots&\\vdots&\\ddots&\\vdots\\\\\ng_{2k-1}&0&0&0&\\cdots&1\\\\\ng_{2k}&0&0&0&\\cdots&0\n\\end{bmatrix}\n$$\n\u5176\u4e2d $g_j$ \u8868\u793a $[i-j+1,i]$ \u662f\u5426\u4e3a $s$ \u7684\u5b50\u4e32\u3002\n\n\u663e\u7136\u6bcf\u6b21\u4fee\u6539\u4e00\u4e2a\u533a\u95f4\u6700\u591a\u6539\u53d8 $r-l+1+2k$ \u4e2a\u4f4d\u7f6e\u7684\u8f6c\u79fb\u77e9\u9635\uff0c\u56e0\u6b64\u6211\u4eec\u6709\u4e00\u4e2a\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\uff1a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u77e9\u9635\u4e58\u79ef\uff0c\u6bcf\u6b21\u66b4\u529b\u4fee\u6539\u7ebf\u6bb5\u6811\u5bf9\u5e94\u7684\u4f4d\u7f6e\u7684\u503c\uff0c\u6c42\u4e00\u4e2a\u4f4d\u7f6e\u7684\u8f6c\u79fb\u77e9\u9635\u53ef\u7528 SAM\u3002\u67e5\u8be2\u5c31\u6c42\u4e00\u904d\u533a\u95f4\u77e9\u9635\u4e58\u79ef\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u5927\u6982\u662f $(L+qk)\u00b7k^3\\log n+qk^3\\log n$\uff0c\u663e\u7136\u65e0\u6cd5\u901a\u8fc7\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u77e9\u9635\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f 0/1\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u4f4d\u8fd0\u7b97\u52a0\u901f\u5b9e\u73b0 $k^2$ \u77e9\u9635\u4e58\u6cd5\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u53ef\u8fbe\u5230 $(L+qk)\u00b7k^2\\log n+qk^2\\log n$\uff0c\u8fd8\u662f\u65e0\u6cd5\u901a\u8fc7\u3002\u518d\u89c2\u5bdf\u5230\u6bcf\u6b21\u4fee\u6539\u662f\u4e00\u6bb5\u533a\u95f4\uff0c\u56e0\u6b64\u8003\u8651\u5bf9**\u8fd9\u4e00\u6bb5\u533a\u95f4\u4e0a\u7684\u53f6\u5b50\u8282\u70b9\u5230\u6839\u8282\u70b9\u8def\u5f84\u7684\u5e76\u4e0a\u7684\u8282\u70b9**\uff0c\u91cd\u65b0\u8ba1\u7b97\u5b83\u4eec\u8f6c\u79fb\u77e9\u9635\u7684\u4e58\u79ef\uff0c\u8fd9\u6837\u5047\u8bbe\u5f85\u91cd\u6784\u7684\u533a\u95f4\u957f\u5ea6\u4e3a $len$\uff0c\u6bcf\u6b21\u91cd\u6784\u9700\u8981\u8fdb\u884c\u77e9\u9635\u4e58\u6cd5\u7684\u6b21\u6570\u5927\u6982\u662f $\\sum\\limits_{n}\\lfloor\\dfrac{len}{n}\\rfloor=\\mathcal O(len)$ \u7ea7\u522b\u7684\uff0c\u8fd9\u6837\u52a0\u53f7\u524d\u9762\u7684 $\\log n$ \u53ef\u4ee5\u7701\u53bb\uff0c\u590d\u6742\u5ea6\u5c31\u8fbe\u5230\u4e86 $(L+qk)\u00b7k^2+qk^2\\log n$\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n```cpp\nconst int MAXN=3e6;\nconst int MAXM=3e5;\nconst int MAXP=6e6;\nconst int MAXK=16;\nint n,m,k,qu;char s[MAXN+5],t[MAXM+5];\nint ch[MAXP+5][9],len[MAXP+5],lnk[MAXP+5],cur=1,ncnt=1;\nvoid extend(char c){\n\tint id=c-'a',nw=++ncnt,p=cur;\n\tlen[nw]=len[cur]+1;cur=nw;\n\twhile(p&&!ch[p][id]) ch[p][id]=nw,p=lnk[p];\n\tif(!p) return lnk[nw]=1,void();\n\tint q=ch[p][id];\n\tif(len[q]==len[p]+1) return lnk[nw]=q,void();\n\tint cl=++ncnt;len[cl]=len[p]+1;\n\tlnk[cl]=lnk[q];lnk[q]=lnk[nw]=cl;\n\tfor(int i=0;i<9;i++) ch[cl][i]=ch[q][i];\n\twhile(p&&ch[p][id]==q) ch[p][id]=cl,p=lnk[p];\n}\nstruct mat{\n\tint a[MAXK+2];\n\tmat(){memset(a,0,sizeof(a));}\n\tmat operator *(const mat &rhs){\n\t\tmat res;\n\t\tfor(int i=0;i<k*2;i++) for(int j=0;j<k*2;j++)\n\t\t\tif(a[i]>>j&1) res.a[i]|=rhs.a[j];\n\t\treturn res;\n\t}\n\tvoid print(){\n\t\tfor(int i=0;i<k+k;i++) for(int j=0;j<k+k;j++)\n\t\t\tprintf(\"%d%c\",a[i]>>j&1,\"\\0\\n\"[j==k+k-1]);\n\t}\n};\nint lf[MAXM+5],used[MAXM*4+5];\nmat calc(int l){\n\tmat ret;\n\tfor(int i=0;i+1<k+k;i++) ret.a[i]|=1<<i+1;\n\tint curp=1;\n\tfor(int i=1;i<=min(l,k+k);i++){\n\t\tif(!ch[curp][t[l-i+1]-'a']) break;\n\t\tcurp=ch[curp][t[l-i+1]-'a'];\n\t\tif(i>=k) ret.a[i-1]|=1;\n\t}\n//\tprintf(\"calc %d\\n\",l);\n//\tret.print();\n\treturn ret;\n}\nnamespace segtree{\n\tstruct node{int l,r;mat v;} s[MAXM*4+5];\n\tvoid build(int k,int l,int r){\n\t\ts[k].l=l;s[k].r=r;\n\t\tif(l==r){s[k].v=calc(l),lf[l]=k;return;}\n\t\tint mid=l+r>>1;build(k<<1,l,mid);build(k<<1|1,mid+1,r);\n\t\ts[k].v=s[k<<1].v*s[k<<1|1].v;\n\t}\n\tvoid rebuild(int k){\n\t\tif(!used[k]) return;used[k]=0;\n\t\tif(s[k].l==s[k].r) return;\n\t\trebuild(k<<1);rebuild(k<<1|1);\n\t\ts[k].v=s[k<<1].v*s[k<<1|1].v;\n\t}\n\tmat query(int k,int l,int r){\n\t\tif(l<=s[k].l&&s[k].r<=r) return s[k].v;\n\t\tint mid=s[k].l+s[k].r>>1;\n\t\tif(r<=mid) return query(k<<1,l,r);\n\t\telse if(l>mid) return query(k<<1|1,l,r);\n\t\telse return query(k<<1,l,mid)*query(k<<1|1,mid+1,r);\n\t}\n}\nvoid rebuild(int l,int r){\n\tstatic char buf[MAXM+5];scanf(\"%s\",buf+1);\n\tfor(int i=l;i<=r;i++) t[i]=buf[i-l+1];\n\tfor(int i=l;i<=min(r+k+k,m);i++){\n\t\tfor(int j=lf[i];j;j>>=1) used[j]=1;\n\t\tsegtree::s[lf[i]].v=calc(i);\n\t} segtree::rebuild(1);\n}\nint main(){\n//\tfreopen(\"passage.in\",\"r\",stdin);\n//\tfreopen(\"passage.out\",\"w\",stdout);\n\tscanf(\"%*d%s%s%d%d\",s+1,t+1,&k,&qu);\n\tn=strlen(s+1);m=strlen(t+1);\n\tfor(int i=n;i;i--) extend(s[i]);\n\tsegtree::build(1,1,m);\n\twhile(qu--){\n\t\tint opt;scanf(\"%d\",&opt);\n\t\tif(opt==1){\n\t\t\tint l,r;scanf(\"%d%d\",&l,&r);\n\t\t\trebuild(l,r);\n\t\t} else {\n\t\t\tint l,r;scanf(\"%d%d\",&l,&r);\n\t\t\tmat v=segtree::query(1,l,r);\n\t\t\tprintf(\"%s\\n\",(v.a[0]&1)?\"Yes\":\"No\");\n//\t\t\tv.print();\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1633877060,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P7879 \u300cSWTR-07\u300dHow to AK NOI?"
    }
]