[
    {
        "content": "## \u4ec0\u4e48\u662f 2-SAT\uff1f\n\u9996\u5148\uff0c\u628a\u300c2\u300d\u548c\u300cSAT\u300d\u62c6\u5f00\u3002SAT \u662f Satisfiability \u7684\u7f29\u5199\uff0c\u610f\u4e3a\u53ef\u6ee1\u8db3\u6027\u3002\u5373\u4e00\u4e32\u5e03\u5c14\u53d8\u91cf\uff0c\u6bcf\u4e2a\u53d8\u91cf\u53ea\u80fd\u4e3a\u771f\u6216\u5047\u3002\u8981\u6c42\u5bf9\u8fd9\u4e9b\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c\uff0c\u6ee1\u8db3\u5e03\u5c14\u65b9\u7a0b\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u6559\u7ec3\u6b63\u5728\u8bb2\u6388\u4e00\u4e2a\u7b97\u6cd5\uff0c\u4ee3\u7801\u8981\u7ed9\u6559\u5ba4\u4e2d\u7684\u591a\u4f4d\u540c\u5b66\u9605\u8bfb\uff0c\u4ee3\u7801\u7684\u7801\u98ce\u8981\u6ee1\u8db3\u6240\u6709\u5b66\u751f\u3002\u5047\u8bbe\u6559\u5ba4\u5f53\u4e2d\u6709\u4e09\u4f4d\u5b66\u751f\uff1aAnguei\u3001Anfangen\u3001Zachary_260325\u3002\u73b0\u5728\u4ed6\u4eec\u6bcf\u4eba\u6709\u5982\u4e0b\u8981\u6c42\uff1a\n\n+ **Anguei**: \u6211\u8981\u6c42\u4ee3\u7801\u5f53\u4e2d\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\u4e4b\u4e00\uff1a\n  1. \u4e0d\u5199 `using namespace std;` \uff08 $\\neg a$\uff09\n  2. \u4f7f\u7528\u8bfb\u5165\u4f18\u5316 \uff08$b$\uff09\n  3. \u5927\u62ec\u53f7\u4e0d\u6362\u884c \uff08$\\neg c$\uff09\n+ **Anfangen**: \u6211\u8981\u6c42\u4ee3\u7801\u5f53\u4e2d\u6ee1\u8db3\u4e0b\u6761\u4ef6\u4e4b\u4e00\uff1a\n  1. \u5199 `using namespace std;` \uff08$a$\uff09\n  2. \u4f7f\u7528\u8bfb\u5165\u4f18\u5316 \uff08$b$\uff09\n  3. \u5927\u62ec\u53f7\u4e0d\u6362\u884c \uff08$\\neg c$\uff09\n+ **Zachary_260325**\uff1a\u6211\u8981\u6c42\u4ee3\u7801\u5f53\u4e2d\u6ee1\u8db3\u4e0b\u6761\u4ef6\u4e4b\u4e00\uff1a\n  1. \u4e0d\u5199 `using namespace std;` \uff08$\\neg a$\uff09\n  2. \u4f7f\u7528 `scanf` \uff08$\\neg b$\uff09\n  3. \u5927\u62ec\u53f7\u6362\u884c \uff08$c$\uff09\n \n\u6211\u4eec\u4e0d\u59a8\u628a\u4e09\u79cd\u8981\u6c42\u8bbe\u4e3a $a,b,c$\uff0c\u53d8\u91cf\u524d\u52a0 $\\neg$ \u8868\u793a\u300c\u4e0d\u300d\uff0c\u5373\u300c\u5047\u300d\u3002\u4e0a\u8ff0\u6761\u4ef6\u7ffb\u8bd1\u6210\u5e03\u5c14\u65b9\u7a0b\u5373\uff1a$(\\neg a\\vee b\\vee\\neg c) \\wedge (a\\vee b\\vee\\neg c) \\wedge (\\neg a\\vee\\neg b\\vee c)$\u3002\u5176\u4e2d\uff0c$\\vee$ \u8868\u793a\u6216\uff0c$\\wedge$ \u8868\u793a\u4e0e\u3002\uff08\u5c31\u50cf\u96c6\u5408\u4e2d\u5e76\u96c6\u4ea4\u96c6\u4e00\u6837\uff09\n\n\u73b0\u5728\u8981\u505a\u7684\u662f\uff0c\u4e3a ABC \u4e09\u4e2a\u53d8\u91cf\u8d4b\u503c\uff0c\u6ee1\u8db3\u4e09\u4f4d\u5b66\u751f\u7684\u8981\u6c42\u3002\n\nQ: \u8fd9\u53ef\u600e\u4e48\u8d4b\u503c\u554a\uff1f\u66b4\u529b\uff1f\n\nA: \u5bf9\uff0c\u8fd9\u662f SAT \u95ee\u9898\uff0c\u5df2\u88ab\u8bc1\u660e\u4e3a **NP \u5b8c\u5168** \u7684\uff0c\u53ea\u80fd\u66b4\u529b\u3002\n\nQ: \u90a3\u4e48 2-SAT \u662f\u4ec0\u4e48\u5462\uff1f\n\nA: 2-SAT\uff0c\u5373\u6bcf\u4f4d\u540c\u5b66 **\u53ea\u6709\u4e24\u4e2a\u6761\u4ef6**\uff08\u6bd4\u5982\u4e09\u4f4d\u540c\u5b66\u90fd\u5bf9\u5927\u62ec\u53f7\u662f\u5426\u6362\u884c\u4e0d\u505a\u8981\u6c42\uff0c\u8fd9\u5c31\u5c11\u4e86\u4e00\u4e2a\u6761\u4ef6\uff09\u4e0d\u8fc7\uff0c\u4ecd\u8981\u4f7f\u6240\u6709\u540c\u5b66\u5f97\u5230\u6ee1\u8db3\u3002\u4e8e\u662f\uff0c\u4ee5\u4e0a\u5e03\u5c14\u65b9\u7a0b\u5f53\u4e2d\u7684 $c,\\neg c$ \u6ca1\u4e86\uff0c\u53d8\u6210\u4e86\u8fd9\u4e2a\u6837\u5b50\uff1a$(\\neg a\\vee b) \\wedge (a\\vee b) \\wedge (\\neg a\\vee\\neg b)$\n\n## \u600e\u4e48\u6c42\u89e3 2-SAT \u95ee\u9898\uff1f\n**\u4f7f\u7528\u5f3a\u8fde\u901a\u5206\u91cf\u3002** \u5bf9\u4e8e\u6bcf\u4e2a\u53d8\u91cf $x$\uff0c\u6211\u4eec\u5efa\u7acb\u4e24\u4e2a\u70b9\uff1a$x, \\neg x$ \u5206\u522b\u8868\u793a\u53d8\u91cf $x$ \u53d6 `true` \u548c\u53d6 `false`\u3002\u6240\u4ee5\uff0c**\u56fe\u7684\u8282\u70b9\u4e2a\u6570\u662f\u4e24\u500d\u7684\u53d8\u91cf\u4e2a\u6570**\u3002**\u5728\u5b58\u50a8\u65b9\u5f0f\u4e0a\uff0c\u53ef\u4ee5\u7ed9\u7b2c $i$ \u4e2a\u53d8\u91cf\u6807\u53f7\u4e3a $i$\uff0c\u5176\u5bf9\u5e94\u7684\u53cd\u503c\u6807\u53f7\u4e3a $i + n$**\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u540c\u5b66\u7684\u8981\u6c42 $(a \\vee b)$\uff0c\u8f6c\u6362\u4e3a $\\neg a\\rightarrow b\\wedge\\neg b\\rightarrow a$\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a\u300c\u82e5 $a$ \u5047\u5219 $b$ \u5fc5\u771f\uff0c\u82e5 $b$ \u5047\u5219 $a$ \u5fc5\u771f\u300d\u7136\u540e\u6309\u7167\u7bad\u5934\u7684\u65b9\u5411\u5efa\u6709\u5411\u8fb9\u5c31\u597d\u4e86\u3002\u7efc\u4e0a\uff0c\u6211\u4eec\u8fd9\u6837\u5bf9\u4e0a\u9762\u7684\u65b9\u7a0b\u5efa\u56fe\uff1a\n\n| \u539f\u5f0f | \u5efa\u56fe |\n| :----------- | :----------- |\n| $\\neg a\\vee b$     | $a\\rightarrow b\\wedge\\neg b\\rightarrow\\neg a$ |\n| $a \\vee b$         | $\\neg a\\rightarrow b\\wedge\\neg b\\rightarrow a$ |\n| $\\neg a\\vee\\neg b\\space \\space $ | $a\\rightarrow\\neg b\\wedge b\\rightarrow\\neg a$ |\n\n\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\u8fd9\u4e48\u4e00\u5f20\u56fe\uff1a\n\n![built](https://s1.ax1x.com/2018/08/22/PTAjy9.png)\n\n\u53ef\u4ee5\u770b\u5230\uff0c$\\neg a$ \u4e0e $b$ \u5728\u540c\u4e00\u5f3a\u8fde\u901a\u5206\u91cf\u5185\uff0c$a$ \u4e0e $\\neg b$ \u5728\u540c\u4e00\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u3002**\u540c\u4e00\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u7684\u53d8\u91cf\u503c\u4e00\u5b9a\u662f\u76f8\u7b49\u7684**\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c $x$ \u4e0e $\\neg x$ \u5728\u540c\u4e00\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u90e8\uff0c\u4e00\u5b9a\u65e0\u89e3\u3002\u53cd\u4e4b\uff0c\u5c31\u4e00\u5b9a\u6709\u89e3\u4e86\u3002\n\n\u4f46\u662f\uff0c\u5bf9\u4e8e\u4e00\u7ec4\u5e03\u5c14\u65b9\u7a0b\uff0c\u53ef\u80fd\u4f1a\u6709\u591a\u7ec4\u89e3\u540c\u65f6\u6210\u7acb\u3002\u8981\u600e\u6837\u5224\u65ad\u7ed9\u6bcf\u4e2a\u5e03\u5c14\u53d8\u91cf\u8d4b\u7684\u503c\u662f\u5426\u6070\u597d\u6784\u6210\u4e00\u7ec4\u89e3\u5462\uff1f\n\n\u8fd9\u4e2a\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981 **\u5f53 $x$ \u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u62d3\u6251\u5e8f\u5728 $\\neg x$ \u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u62d3\u6251\u5e8f\u4e4b\u540e\u53d6 $x$ \u4e3a\u771f** \u5c31\u53ef\u4ee5\u4e86\u3002\u5728\u4f7f\u7528 Tarjan \u7b97\u6cd5\u7f29\u70b9\u627e\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5df2\u7ecf\u4e3a\u6bcf\u7ec4\u5f3a\u8fde\u901a\u5206\u91cf\u6807\u8bb0\u597d\u987a\u5e8f\u4e86\u2014\u2014**\u4e0d\u8fc7\u662f\u53cd\u7740\u7684\u62d3\u6251\u5e8f**\u3002\u6240\u4ee5\u4e00\u5b9a\u8981\u5199\u6210 `color[x] < color[-x]` \u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(N + M)$\n\n## \u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u548b\u4e0d\u4e0a\u4ee3\u7801\u554a\uff1f\n\u6838\u5fc3\u4ee3\u7801\u5728\u4e0b\u9762\u3002\n### \u5efa\u56fe\n```cpp\nn = read(), m = read();\nfor (int i = 0; i < m; ++i) {\n    // \u7b14\u8005\u4e60\u60ef\u5bf9 x \u70b9\u6807\u53f7\u4e3a x\uff0c-x \u6807\u53f7\u4e3a x+n\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u53cd\u8fc7\u6765\u3002\n    int a = read(), va = read(), b = read(), vb = read();\n    if (va && vb) { // a, b \u90fd\u771f\uff0c-a -> b, -b -> a\n        g[a + n].push_back(b);\n        g[b + n].push_back(a);\n    } else if (!va && vb) { // a \u5047 b \u771f\uff0ca -> b, -b -> -a\n        g[a].push_back(b);\n        g[b + n].push_back(a + n);\n    } else if (va && !vb) { // a \u771f b \u5047\uff0c-a -> -b, b -> a\n        g[a + n].push_back(b + n);\n        g[b].push_back(a);\n    } else if (!va && !vb) { // a, b \u90fd\u5047\uff0ca -> -b, b -> -a\n        g[a].push_back(b + n);\n        g[b].push_back(a + n);\n    }\n}\n```\n\u5f53\u7136\uff0c\u8fd8\u6709\u66f4\u7cbe\u7b80\u7684\u4f4d\u8fd0\u7b97\u5efa\u56fe\u65b9\u5f0f\uff0c\u53ef\u4ee5\u514d\u53bb\u4e0a\u9762\u7684\u56db\u4e2a if\uff1a\n```cpp\nn = read(), m = read();\nfor (int i = 0; i < m; ++i) {\n    int a = read(), va = read(), b = read(), vb = read();\n    g[a + n * (va & 1)].push_back(b + n * (vb ^ 1));\n    g[b + n * (vb & 1)].push_back(a + n * (va ^ 1));\n}\n```\n\n\n### \u627e\u73af\n```cpp\n// \u6ce8\u610f\u6240\u6709\u4e1c\u897f\u90fd\u8981\u5f00\u4e24\u500d\u7a7a\u95f4\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u53d8\u91cf\u5b58\u4e86\u4e24\u6b21\nvoid tarjan(int u) {\n    low[u] = dfn[u] = ++dfsClock;\n    stk.push(u); ins[u] = true;\n    for (const auto &v : g[u]) {\n        if (!dfn[v]) tarjan(v), low[u] = std::min(low[u], low[v]);\n        else if (ins[v]) low[u] = std::min(low[u], dfn[v]);\n    }\n    if (low[u] == dfn[u]) {\n        ++sccCnt;\n        do {\n            color[u] = sccCnt;\n            u = stk.top(); stk.pop(); ins[u] = false;\n        } while (low[u] != dfn[u]);\n    }\n}\n// \u7b14\u8005\u4f7f\u7528\u4e86 Tarjan \u627e\u73af\uff0c\u5f97\u5230\u7684 color[x] \u662f x \u6240\u5728\u7684 scc \u7684\u62d3\u6251\u9006\u5e8f\u3002\nfor (int i = 1; i <= (n << 1); ++i) if (!dfn[i]) tarjan(i);\n```\n### \u8f93\u51fa\n```cpp\nfor (int i = 1; i <= n; ++i)\n    if (color[i] == color[i + n]) { // x \u4e0e -x \u5728\u540c\u4e00\u5f3a\u8fde\u901a\u5206\u91cf\u5185\uff0c\u4e00\u5b9a\u65e0\u89e3\n        puts(\"IMPOSSIBLE\");\n        exit(0);\n    }\nputs(\"POSSIBLE\");\nfor (int i = 1; i <= n; ++i)\n    print((color[i] < color[i + n])), putchar(' '); // \u5982\u679c\u4e0d\u4f7f\u7528 Tarjan \u627e\u73af\uff0c\u8bf7\u6539\u6210\u5927\u4e8e\u53f7\nputs(\"\");\n```",
        "postTime": 1534938666,
        "uid": 53062,
        "name": "Anguei",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4782 \u3010\u3010\u6a21\u677f\u30112-SAT \u95ee\u9898\u3011"
    },
    {
        "content": "\n## \u5173\u4e8e $2-SAT$ \u7684\u5c0f\u603b\u7ed3\uff0c\u5e0c\u671b\u80fd\u5e2e\u52a9\u5927\u5bb6\n\n### $Update$ $in$ $2020.9.11$ \u6539\u6b63\u4e86\u4ee3\u7801\u4e2d\u7684\u4e00\u4e9b\u9519\u8bef\n\u4e5f\u53ef\u4ee5\u5230\u6211\u7684 [$blog$](https://www.cnblogs.com/xcg123/p/11818059.html) \u53bb\u770b\u54e6~\n### $2-SAT$ \u95ee\u9898\uff1a\n\n\u6709 $n$ \u4e2a\u53d8\u91cf\uff0c\u6bcf\u4e00\u4e2a\u53d8\u91cf\u90fd\u662f $bool$ \u7c7b\u578b\u7684\uff0c\u9664\u4e86\u8fd9 $n$ \u4e2a\u53d8\u91cf\u4ee5\u5916\uff0c\u6211\u4eec\u8fd8\u6709 $m$ \u4e2a\u5173\u7cfb\u8868\u8fbe\u5f0f\uff0c\u5173\u7cfb\u8868\u8fbe\u5f0f\u5dee\u4e0d\u591a\u662f\u8fd9\u6837\u7684\uff1a\n\n$x_1$ & $x_2 = false$\uff08\u6ce8\u610f\u6bcf\u4e2a\u8868\u8fbe\u5f0f\u53ea\u4f1a\u6709\u4e24\u4e2a\u53d8\u91cf\uff09\n\n\u95ee\u7ed9\u51fa $m$ \u4e2a\u5173\u7cfb\u8868\u8fbe\u5f0f\u540e\uff0c\u80fd\u5426\u7ed9\u8fd9 $n$ \u4e2a\u53d8\u91cf\u627e\u51fa\u4e00\u4e2a\u8d4b\u503c\u7684\u65b9\u6cd5\uff0c\u4f7f\u5f97\u6ee1\u8db3\u6240\u6709\u7684\u8868\u8fbe\u5f0f\uff1b \n\n### \u5efa\u8fb9\u65b9\u5f0f\uff1a\n\n\u6838\u5fc3\u95ee\u9898\u53ea\u9700\u8981\u8003\u8651\u6709\u6ca1\u6709\u89e3\uff1b\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u53d8\u91cf\u90fd\u53ea\u6709\u4e24\u79cd\u53d6\u503c\uff1a$0 / 1$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u6211\u4eec\u628a\u6bcf\u4e2a\u53d8\u91cf\u62c6\u6210 $true$ \u70b9\u548c $false$ \u70b9\uff1b\n\n\u5047\u5982\u6211\u4eec\u6709\u4e00\u4e2a\u5173\u7cfb\uff1a$x_1$ & $x_2 = false$\uff1b\n\n**\u8bf4\u660e $x_1$ \u548c $x_2$ \u4e2d\u4e00\u5b9a\u6709\u4e00\u4e2a\u4e3a $false$\uff1b**\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4ece $x_1$ \u7684 $true$ \u8fde\u5411 $x_2$ \u7684 $false$\uff0c\u4ece $x_2$ \u7684 $true$ \u8fde\u5411 $x_1$ \u7684 $false$\uff1b\n![](https://cdn.luogu.com.cn/upload/image_hosting/zxk71w4g.png)\n\n**\u8981\u6ce8\u610f\u53ea\u6709\u5173\u7cfb\u660e\u786e\u7684\u65f6\u5019\u624d\u80fd\u5efa\u8fb9\uff1b**\n\n\u89e3\u91ca\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u8fde\u8fb9\uff1a\n\n\u5982\u679c $x_1$ \u7684\u503c\u4e3a $true$ \uff0c\u90a3\u4e48\u5982\u679c\u6211\u4eec $x_2$ \u7684\u503c\u518d\u4e3a $true$ \u7684\u8bdd\uff0c\u5c31\u4e0d\u6ee1\u8db3 \u201c $x_1$ & $x_2 = false$ \u201d \u8fd9\u4e2a\u5f0f\u5b50\u4e86\uff0c\u6240\u4ee5\u5982\u679c $x_1$ \u4e3a $true$ \u7684\u8bdd\u662f\u80fd\u660e\u786e\u63a8\u51fa $x_2$ \u4e3a $false$ \u7684\uff1b\n\n\u6211\u4eec\u53ef\u4ee5\u4ece $x_2$ \u7684 $flase$ \u5411 $x_1$ \u7684 $true$ \u8fde\u8fb9\u5417\uff1f\u8fd9\u6837\u4e5f\u80fd\u6ee1\u8db3\u5173\u7cfb\u5f0f\uff1b\n\n\u663e\u7136\u4e0d\u80fd\uff0c\u56e0\u4e3a\u5982\u679c $x_2$ \u4e3a $false$ \u7684\u8bdd\uff0c$x_1$ \u4e3a $true$ \u6216 $ false$ \u90fd\u662f\u53ef\u4ee5\u7684\uff0c\u8fd9\u4e0d\u662f\u660e\u786e\u7684\u5173\u7cfb\uff0c\u6211\u4eec\u4e0d\u80fd\u5efa\u8fb9\uff1b\n\n\u6240\u4ee5\u4e00\u822c\u7684\u5efa\u8fb9\u65b9\u5f0f\u4e3a\uff1a\n\n\u82e5 \u201c $x_a = p$ \u6216 $x_b = q$ \u201d \u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u6ee1\u8db3\uff0c\u90a3\u4e48\u6211\u4eec\u5efa\u4e24\u6761\u6709\u5411\u8fb9\uff1a\n\n$x_a ($\u00ac$p)  ->  x_b (q)$ \n\n$x_b ($\u00ac$q)  ->  x_a (p)$ \n\n**\u53ef\u4ee5\u7b80\u5355\u603b\u7ed3\u4e3a\uff1a\u5176\u4e2d\u4e00\u4e2a\u4e0d\u6210\u7acb\u5219\u53e6\u4e00\u4e2a\u4e00\u5b9a\u6210\u7acb\uff08\u8fd9\u662f\u660e\u786e\u7684\u5173\u7cfb\uff09\uff1b**\n\n\u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u5fc5\u987b\u7b49\u4e8e $true$\uff0c\u90a3\u4e48\u6211\u4eec\u4ece\u8fd9\u4e2a\u70b9\u7684 $false$ \u8fde\u5411\u8fd9\u4e2a\u70b9\u7684 $true$\uff0c\u8868\u793a\u6211\u4eec\u4ece $false$ \u8d70\u4e5f\u4f1a\u8d70\u5230 $true$\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u80fd\u7b49\u4e8e $true$\uff1b\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/rrtjsq4h.png)\n\n\n\u81f3\u4e8e\u5efa\u8fb9\u7684\u65f6\u5019\u600e\u4e48\u7ed9\u70b9\u7f16\u53f7\u561b\uff0c\u81ea\u5b9a\u4e49\u55bd\uff0c\u4e0d\u8fc7\u6211\u5efa\u8bae\u5927\u5bb6\u8fd9\u6837\u7f16\u53f7\uff08\u4e0b\u9762\u7684\u4ee3\u7801\u90fd\u662f\u8fd9\u4e48\u7f16\u53f7\u7684\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zxksz5dh.png)\n\n\u8fd9\u6837\u7684\u8bdd\u5bf9\u4e8e\u4e00\u4e2a\u53d8\u91cf $k$\uff0c\u7f16\u53f7\u4e3a $k$ \u7684\u70b9\u4ee3\u8868\u4e86\u8fd9\u4e2a\u53d8\u91cf\u7684 $false$ \u70b9\uff0c\u7f16\u53f7\u4e3a $k+n$ \u7684\u70b9\u4ee3\u8868\u4e86\u8fd9\u4e2a\u53d8\u91cf\u7684 $true$ \u70b9\uff1b\n\n\u5224\u89e3\u65b9\u5f0f\uff1a \n\u8fd9\u4e48\u5224\u65ad\u662f\u5426\u6709\u89e3\uff1f\n\n**\u65e0\u89e3\u7684\u60c5\u51b5\uff1a\u67d0\u4e00\u4e2a\u53d8\u91cf\u7684 $false$ \u80fd\u8d70\u5230 $true$\uff0c\u4ece $true$ \u4e5f\u80fd\u8d70\u5230 $false$\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u67d0\u4e00\u4e2a\u53d8\u91cf\u7684\u4e24\u4e2a\u53d6\u503c\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u7684\u8bdd\uff0c\u5c31\u8bf4\u660e\u65e0\u89e3\u3002**\n\n\u6c42\u5f3a\u8054\u901a\u5206\u91cf\u7684\u8bdd\u5e38\u7528\u7684\u65b9\u6cd5\u662f $Tarjan$ \u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/v7jlwp8x.png)\n\n\u5426\u5219\u5c31\u662f\u6709\u89e3\u7684\u60c5\u51b5\uff0c\u7136\u540e\u5b83\u4e00\u822c\u8ba9\u4f60\u8f93\u51fa\u4e00\u4e2a\u7ed9\u6240\u6709\u53d8\u91cf\u8d4b\u503c\u7684\u65b9\u6cd5\uff0c\u4f7f\u5176\u6ee1\u8db3\u6240\u6709\u7684\u5173\u7cfb\u5f0f\uff1b\n\n\u90a3\u4e48\u600e\u4e48\u7ed9\u53d8\u91cf\u8d4b\u503c\u5462\uff1f\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/fu7ffw8d.png)\n\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u4ece $x_1$ \u7684 $false$ \u51fa\u53d1\u4f1a\u8d70\u5230 $x_1$ \u7684 $true$ \uff0c\u4e5f\u5c31\u662f\u8bf4 $x_1$ \u73b0\u5728\u53ea\u80fd\u7b49\u4e8e $true$ \u4e86\uff1b\u540c\u7406\u4ece $x_2$ \u7684 $true$ \u51fa\u53d1\u80fd\u8d70\u5230 $x_2$ \u7684 $flase$\uff0c\u8bf4\u660e $x_2$ \u53ea\u80fd\u7b49\u4e8e $flase$\uff1b\n\n\u89e3\u91ca\u4e00\u4e0b\u5427\uff1a\n\n\u5982\u679c\u6211\u4eec\u4e0d\u5c06 $x_1$ \u8d4b\u503c\u4e3a $true$\uff0c\u800c\u662f\u8d4b\u503c\u4e3a $false$\uff0c\u90a3\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f\n\n\u7531 $x_1$ \u7684 $false$ \u662f\u80fd\u660e\u786e\u63a8\u51fa $x_2$ \u662f\u4e3a $true$ \u7684\uff0c\u4f46\u662f\u53c8\u6709 $x_2$ \u7684 $true$ \u80fd\u660e\u786e\u63a8\u51fa $x_1$ \u4e3a $true$\uff0c\u8fd9\u4e0e\u521a\u521a\u6211\u4eec\u5c06 $x_1$ \u8d4b\u503c\u4e3a $false$ \u662f\u76f8\u77db\u76fe\u7684\uff1b\uff08\u4f60\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff1a\u5047\u5982\u4f60\u5728\u89e3\u65b9\u7a0b\uff0c\u5b9e\u5728\u662f\u89e3\u4e0d\u51fa\u6765\u4e86\uff0c\u4f60\u5c31\u6765\u4e86\u4e2a\u7279\u6b8a\u503c\u6cd5\uff0c\u5c06 $x$ \u4ee3\u5165 $1$ \u8bd5\u8bd5\u770b\uff0c\u7ed3\u679c\u89e3\u51fa\u6765\u7b49\u5f0f\u4e0d\u6210\u7acb\uff0c\u5c31\u8bf4\u660e $x \u2260 1$\uff09\uff1b\n\n\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\uff0c\u5c31\u8bf4\u660e\u5728\u6709\u89e3\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u53d8\u91cf\u7684\u4e24\u4e2a\u53d6\u503c\u662f\u6709\u524d\u540e\u63a8\u5bfc\u5173\u7cfb\u7684\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u53d6\u503c\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u6307\u5411\u4e86\u53e6\u4e00\u4e2a\u53d6\u503c\uff1b\n\n**\u6211\u4eec\u6240\u8981\u9009\u7684\u5c31\u662f\u88ab\u6307\u5411\u7684\u8fd9\u4e2a\u53d6\u503c\uff0c\u4e0d\u7136\u4f1a\u4ea7\u751f\u50cf\u4e0a\u4f8b\u90a3\u6837\u7684\u77db\u76fe\uff1b**\n\n**\u5728\u62d3\u6251\u5e8f\u4e0a\u7684\u8868\u73b0\u4e3a\uff1a\u6211\u4eec\u8981\u5728\u4e24\u79cd\u53d6\u503c\u4e2d\u9009\u62e9\u62d3\u6251\u5e8f\u8f83\u5927\u7684\u90a3\u4e2a\u503c\uff1b**\n\n~~\u6240\u4ee5\u6211\u4eec\u63a5\u4e0b\u6765\u8981\uff1a\u7f29\u70b9 + \u62d3\u6251 + \u67d3\u8272~~\n\n**\u5176\u5b9e\u6211\u4eec\u5728 $Tarjan$ \u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u6c42\u51fa\u4e86\u5f3a\u8054\u901a\u5206\u91cf\u7684\u62d3\u6251\u5e8f\u4e86\uff0c\u53ea\u4e0d\u8fc7\u662f\u53cd\u5e8f\uff1b**\n\n\uff08\u4ee5\u6211\u7684\u7406\u89e3\u662f\u62d3\u6251\u5e8f\u8d8a\u5927\u7684\u70b9\u5728\u4e00\u68f5\u6811\u4e0a\u662f\u8d8a\u9760\u8fd1\u53f6\u8282\u70b9\u7684\uff0c\u7136\u540e\u8d8a\u9760\u8fd1\u53f6\u8282\u70b9\u7684\u90a3\u4e9b\u8282\u70b9\u5728 $Tarjan$ \u7684\u65f6\u5019\u662f\u8d8a\u65e9\u88ab\u7f29\u70b9\u7684\uff0c\u6240\u4ee5\u62d3\u6251\u5e8f\u8d8a\u5927\u7684\u70b9\u5176\u6240\u5728\u5f3a\u8054\u901a\u5206\u91cf\u7f16\u53f7\u8d8a\u5c0f\uff09\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u53d6\u4e24\u4e2a\u53d6\u503c\u4e2d\u5f3a\u8054\u901a\u5206\u91cf\u7f16\u53f7\u8f83\u5c0f\u7684\u6240\u5bf9\u5e94\u7684\u503c\u5c31\u53ef\u4ee5\u4e86\uff1b\uff08\u8fd9\u662f\u4fdd\u8bc1\u4e0d\u4f1a\u9519\u7684\uff0c\u56e0\u4e3a\u6709\u65f6\u5019\u4e24\u4e2a\u503c\u53d6\u54ea\u4e2a\u90fd\u884c\uff09\n\n\u4e0a\u4ee3\u7801\u55bd\uff1a\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<vector>\nusing namespace std;\nlong long read()\n{\n    char ch=getchar();\n    long long a=0,x=1;\n    while(ch<'0'||ch>'9')\n    {\n        if(ch=='-') x=-x;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9')\n    {\n        a=(a<<1)+(a<<3)+(ch-'0');\n        ch=getchar();\n    }\n    return a*x;\n}\nconst int N=4e6+5;\nint n,m,a,b,x,y,tim,top,edge_sum,scc_sum;\nint dfn[N],low[N],st[N],vis[N],scc[N],head[N];\nstruct node\n{\n    int to,next;\n}A[N];\nvoid add(int from,int to)\n{\n    edge_sum++;\n    A[edge_sum].next=head[from];\n    A[edge_sum].to=to;\n    head[from]=edge_sum;\n}\nvoid tarjan(int u)\n{\n    dfn[u]=low[u]=++tim;\n    st[++top]=u;\n    vis[u]=1;\n    for(int i=head[u];i;i=A[i].next)\n    {\n        int v=A[i].to;\n        if(!dfn[v])\n        {\n            tarjan(v);\n            low[u]=min(low[u],low[v]);\n        }\n        else if(vis[v]) low[u]=min(low[u],dfn[v]);\n    }\n    if(dfn[u]==low[u])\n    {\n        scc_sum++;\n        while(st[top]!=u)\n        {\n            scc[st[top]]=scc_sum;\n            vis[st[top]]=0;\n            top--;\n        }\n        scc[st[top]]=scc_sum;\n        vis[st[top]]=0;\n        top--;\n    }\n}\nint main()\n{\n    n=read();m=read();\n    for(int i=1;i<=m;i++)\n    {\n        a=read();x=read();  //\u7b2ca\u4e2a\u6570\u4e3ax\u6216\u7b2cb\u4e2a\u6570\u4e3ay \n        b=read();y=read();\n        if(x==0&&y==0)      //\"\u5982\u679c\u7b2ca\u4e2a\u6570\u4e3a0\u6216\u7b2cb\u4e2a\u6570\u4e3a0\"\u81f3\u5c11\u6ee1\u8db3\u5176\u4e00 \n        {\n            add(a+n,b);     //a=1\u5219b=0 \n            add(b+n,a);     //b=1\u5219a=0 \n        }\n        if(x==0&&y==1)      //\"\u5982\u679c\u7b2ca\u4e2a\u6570\u4e3a0\u6216\u7b2cb\u4e2a\u6570\u4e3a1\"\u81f3\u5c11\u6ee1\u8db3\u5176\u4e00 \n        {\n            add(a+n,b+n);   //a=1\u5219b=1 \n            add(b,a);       //b=0\u5219a=0 \n        }\n        if(x==1&&y==0)      //\"\u5982\u679c\u7b2ca\u4e2a\u6570\u4e3a1\u6216\u7b2cb\u4e2a\u6570\u4e3a0\"\u81f3\u5c11\u6ee1\u8db3\u5176\u4e00\n        {\n            add(a,b);       //a=0\u5219b=0 \n            add(b+n,a+n);   //b=1\u5219a=1 \n        }\n        if(x==1&&y==1)      //\"\u5982\u679c\u7b2ca\u4e2a\u6570\u4e3a1\u6216\u7b2cb\u4e2a\u6570\u4e3a1\"\u81f3\u5c11\u6ee1\u8db3\u5176\u4e00\n        {\n            add(a,b+n);     //a=0\u5219b=1 \n            add(b,a+n);     //b=0\u5219a=1 \n        }\n    }\n    for(int i=1;i<=2*n;i++) //\u5bf9\u6bcf\u4e2a\u53d8\u91cf\u7684\u6bcf\u79cd\u53d6\u503c\u8fdb\u884ctarjan \n    {\n        if(!dfn[i]) tarjan(i);\n    }\n    for(int i=1;i<=n;i++)   //\u5224\u65ad\u65e0\u89e3\u7684\u60c5\u51b5 \n    { \n        if(scc[i]==scc[i+n]) //\u540c\u4e00\u53d8\u91cf\u7684\u4e24\u79cd\u53d6\u503c\u5728\u540c\u4e00\u5f3a\u8054\u901a\u5206\u91cf\u91cc,\u8bf4\u660e\u65e0\u89e3 \n        {\n            printf(\"IMPOSSIBLE\\n\");\n            return 0;\n        }\n    }\n    printf(\"POSSIBLE\\n\");   //\u5426\u5219\u5c31\u662f\u6709\u89e3 \n    for(int i=1;i<=n;i++)\n    {\n        if(scc[i]>scc[i+n]) printf(\"1 \");  //\u5f3a\u8054\u901a\u5206\u91cf\u7f16\u53f7\u8d8a\u5c0f -> \u62d3\u6251\u5e8f\u8d8a\u5927 -> \u8d8a\u4f18 \n        else printf(\"0 \");\n    }\n    return 0;\n}\n```\n\u8fd8\u6709\u4e00\u4e2a\u51e0\u4e4e\u548c\u6a21\u677f\u9898\u4e00\u6837\u7684~~\u6c34~~\u9898\uff0c\u53cc\u500d\u7ecf\u9a8c\uff0c\u53cc\u500d\u6b22\u4e50$qwq$\uff01\n\n[$P4171 [JSOI2010]$\u6ee1\u6c49\u5168\u5e2d](https://www.luogu.org/problem/P4171)\n\n\u8c22\u8c22\u5927\u5bb6\u7684\u89c2\u770b\uff0c\u89c9\u5f97\u4e0d\u9519\u7684\u70b9\u4e2a\u8d5e\u5457$(((o(*\uff9f\u25bd\uff9f*)o)))$\n\n\u611f\u8c22 Chinese_zjc_ \u63d0\u4f9b\u7684 $hack$ \u6570\u636e\uff0c\u6570\u636e\u5982\u4e0b\uff1a\n\n```\n2 5\n2 0 1 1\n2 1 2 1\n2 0 2 0\n1 0 1 1\n1 1 1 0\n```\n\u539f\u5148\u4ee3\u7801\u7684\u95ee\u9898\u662f $if(v==fa) continue;$ \u8fd9\u4e00\u8bed\u53e5\u5bfc\u81f4\u4e86\u7f29\u70b9\u8fc7\u7a0b\u4e2d\u82e5\u4e24\u70b9\u95f4\u76f8\u4e92\u8fde\u4e86\u4e24\u6761\u6709\u5411\u8fb9\uff0c\u539f\u5148\u4ee3\u7801\u662f\u65e0\u6cd5\u5c06\u4e24\u70b9\u5224\u65ad\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u5185\u7684\uff0c\u6240\u4ee5\u65e0\u6cd5\u901a\u8fc7 $hack$ \u6570\u636e\u3002\u56e0\u6b64\u5220\u6389\u4e4b\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7 $hack$ \u6570\u636e\u4e86\u3002",
        "postTime": 1573181348,
        "uid": 177070,
        "name": "\u6697\u3056\u4e4b\u6b87",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4782 \u3010\u6a21\u677f\u30112-SAT \u95ee\u9898"
    },
    {
        "content": "# $2-sat$\n\n$k-sat$\u95ee\u9898\u5927\u6982\u5c31\u662f\u591a\u4e2a$01$\u53d8\u91cf\u4e4b\u95f4\u5b58\u5728$k$\u5143\u9650\u5236\u6c42\u5408\u6cd5\u89e3\u7684\u95ee\u9898\u3002\u5176\u4e2d\uff0c$k$\u5143\u9650\u5236\u6307\u7684\u662f:\n\n$$x_{p_1}\\oplus x_{p_2}\\oplus x_{p_3}\\cdots\\oplus x_{p_k}=a$$\n\n\u5176\u4e2d\uff0c$a$\u662f$0$\u6216\u8005$1$\uff0c\u800c$\\oplus$\u662f\u67d0\u4e00\u79cd\u4e8c\u5143$bool$\u64cd\u4f5c\u3002\n\n$k>2$\u7684\u60c5\u51b5\u5df2\u88ab\u8bc1\u660e\u662f$NP$\u95ee\u9898\uff0c\u76ee\u524d\u53ea\u80fd\u591f\u66b4\u529b\u679a\u4e3e\u6765\u89e3\u51b3\u3002\n\n\u800c\u5f53$k=2$\u65f6\uff0c\u5b58\u5728$O(nm)$\u548c$O(n+m)$\u4e24\u79cd\u5e38\u7528\u505a\u6cd5\u3002$O(nm)$\u7684\u505a\u6cd5\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u5173\u4e8e\u6700\u5c0f\u5b57\u5178\u5e8f\u89e3\u7684\u95ee\u9898\u3002\u56e0\u4e3a\u65e0\u6cd5\u901a\u8fc7\u6b64\u9898\uff0c\u6240\u4ee5\u5728\u6b64\u53ea\u63cf\u8ff0$O(n+m)$\u7684\u7b97\u6cd5\u3002\n\n\u56e0\u4e3a\u6761\u4ef6\u662f\u4e8c\u5143\u7684\uff0c\u56e0\u6b64\u6bcf\u4e2a\u9650\u5236\u90fd\u53ea\u4f1a\u6d89\u53ca$2$\u4e2a\u53d8\u91cf\u3002\u8fd9\u542f\u53d1\u6211\u4eec\u4f7f\u7528\u56fe\u8bba\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u4eec\u5c06\u6bcf\u4e2a\u53d8\u91cf\u90fd\u62c6\u6210$2$\u4e2a\uff0c\u5206\u522b\u8868\u793a\u8be5\u53d8\u91cf$=0$\u548c$=1$\u7684\u60c5\u51b5\u3002\u518d\u5b9a\u4e49\u8fb9$(u,v)$\u8868\u793a\u9009\u62e9$u$\u5c31\u5fc5\u987b\u9009\u62e9$v$\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u95ee\u9898\u8f6c\u5316\u6210\u4ee5\u4e0b$3$\u79cd\u60c5\u51b5:\n\n(\u4ee5\u4e0b\u4e3a\u4e86\u65b9\u4fbf\uff0c\u7528$x_{i,a}$\u8868\u793a\u7b2c$i$\u4e2a\u53d8\u91cf\u9009\u62e9$a$\u7684\u70b9\uff0c$(u,v)$\u8868\u793a$u$\u5230$v$\u7684\u8fb9\uff0c$\\otimes$\u8868\u793a\u5f02\u6216)\n\n### 1. $x_i=a$ ,\u5219 $x_j=b$\n\n\u5efa\u8fb9$(x_{i,a},x_{j,b})$,$(x_{j,b\\otimes1},x_{i,a\\otimes1})$\n\n\u610f\u4e49\u663e\u7136\u3002\u5982\u679c$x_i=a$\uff0c\u90a3\u4e48$x_j=b$\u3002\u5982\u679c$x_j!=b$\uff0c\u90a3\u4e48$x_i!=a$\u3002\n\n### 2. $x_i=a$ \u4e0e $x_j=b$ \u81f3\u5c11\u6ee1\u8db3\u4e00\u4e2a\n\n\u5efa\u8fb9\n$(x_{i,a\\oplus1},x_{j,b})$,$(x_{j,b\\oplus1},x_{i,a})$\n\n\u540c\u6837\u5341\u5206\u663e\u7136\u3002\u5982\u679c$x_i!=a$,\u90a3\u4e48$x_j=b$\u3002\u5982\u679c$x_j!=b$\uff0c\u90a3\u4e48$x_i=a$\u3002\n\n### 3. $x_i=a$ \u4e00\u5b9a\u6ee1\u8db3\n\n\u5efa\u8fb9$(x_{i,a\\oplus1},x_{i,a})$\n\n\u8003\u8651\u8be5\u64cd\u4f5c\u7684\u610f\u4e49\u3002\u9996\u5148\u53ef\u4ee5\u77e5\u9053\uff0c$x_{i,0}$\u548c$x_{i,1}$\u5fc5\u987b\u9009\u62e9\u4e14\u4ec5\u9009\u62e9\u4e00\u4e2a\u3002\u90a3\u4e48\uff0c\u56e0\u4e3a$x_i=a$\u4e00\u5b9a\u6ee1\u8db3\uff0c\u5219$x_i!=a$\u7684\u70b9\u4e0d\u53ef\u4ee5\u53d6\u3002\u90a3\u4e48\uff0c\u76f4\u63a5\u5efa\u8fb9$(x_{i,a\\oplus1},x_{i,a})$\u53ef\u4ee5\u63a7\u5236$x_{i,a\\oplus1}$\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u4e0d\u53ef\u9009\u62e9\uff0c\u5426\u5219\u65e0\u89e3\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\uff0c\u4ee5\u4e0a$3$\u79cd\u60c5\u51b5\u56ca\u62ec\u4e86\u6240\u6709\u53ef\u80fd\u7684\u591a\u5143\u9650\u5236\u3002\u5176\u4f59\u9650\u5236\u53ef\u4ee5\u901a\u8fc7\u8f6c\u5316\u53d8\u6210\u4ee5\u4e0a$3$\u79cd\u3002\n\n\u7ecf\u8fc7\u64cd\u4f5c\u540e\uff0c\u4f60\u5c31\u5f97\u5230\u4e86\u4e00\u5f20\u6709\u5411\u56fe\u3002\u5f00\u59cb\u8003\u8651\u8fd9\u5f20\u56fe\u7684\u4f5c\u7528\u3002\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u8fd9\u5f20\u56fe\u4e2d\u7684\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u70b9\u4e00\u5b9a\u8981\u4e48\u540c\u65f6\u9009\uff0c\u8981\u4e48\u540c\u65f6\u4e0d\u9009\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5c06\u56fe\u7f29\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n\u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u5224\u65ad\u65e0\u89e3\u4e86\u3002\u5982\u679c$x_{i,0}$\u548c$x_{i,1}$\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u90a3\u4e48\u660e\u663e\u65e0\u89e3\u3002\n\n\u6b64\u65f6\uff0c\u4f60\u5c31\u5f97\u5230\u4e86\u4e00\u5f20\u62d3\u6251\u56fe\u3002\u8fd9\u5f20\u62d3\u6251\u56fe\u4e2d\uff0c\u5982\u679c$u$\u53ef\u4ee5\u5230\u8fbe$v$\uff0c\u90a3\u4e48$u$\u9009\u62e9\u5219$v$\u4e5f\u5fc5\u987b\u9009\u62e9\u3002\n\n\u90a3\u4e48\uff0c\u4f60\u53ef\u4ee5\u5229\u7528\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6807\u53f7\u6765\u5f97\u5230**\u53cd\u5411\u7684\u62d3\u6251\u5e8f**\u3002\n\n\u518d\u7ed3\u5408\u4e0a\u9762\u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u9009\u62e9\u7b56\u7565:\n\n\u5728$x_{i,0}$\u548c$x_{i,1}$\u4e2d\u9009\u62e9\u62d3\u6251\u5e8f\u8f83\u5927\u7684\u70b9\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u907f\u514d\u4ea7\u751f\u51b2\u7a81\u4e86\u3002\u5e76\u4e14\u8fd9\u79cd\u65b9\u6cd5\u4e00\u5b9a\u53ef\u4ee5\u6784\u9020\u51fa\u89e3\u3002\n\n\u8fd9\u6837$2-sat$\u6c42\u89e3\u5c31\u5b8c\u6210\u4e86\u3002\u5176\u74f6\u9888\u5728\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5904\u7406\uff0c\u5229\u7528$Tarjan$\u53ef\u4ee5\u505a\u5230$O(n+m)$\u5df2\u62b5\u8fbe\u8f93\u5165\u4e0b\u754c\u3002\u56e0\u6b64\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n+m)$\u3002\n\n## \u6838\u5fc3\u4ee3\u7801:\n\n```cpp\nstatic int dfn[MAXN<<1],low[MAXN<<1],bel[MAXN<<1];\nstatic int e,cnt,sta[MAXN<<1],tp;\n\nvoid tarjan(int u)\n{\n\tdfn[u]=low[u]=++e;sta[++tp]=u;\n\tfor(register int v:ed[u])\n\t{\n\t\tif(!dfn[v])tarjan(v),Chkmin(low[u],low[v]);\n\t\telse if(!bel[v])Chkmin(low[u],dfn[v]);\n\t}\n\tif(low[u]==dfn[u])for(++cnt;sta[tp+1]^u;--tp)\n\t\tbel[sta[tp]]=cnt;\n}\n\ninline void solve()\n{\n\tRep(i,2,n<<1|1)if(!dfn[i])tarjan(i);\n\tRep(i,1,n)if(bel[i<<1]==bel[i<<1|1])return (void)puts(\"IMPOSSIBLE\");\n\tputs(\"POSSIBLE\");\n\tRep(i,1,n)write(bel[i<<1]>bel[i<<1|1],' ');\n}\n```",
        "postTime": 1533214229,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4782 \u3010\u3010\u6a21\u677f\u30112-SAT \u95ee\u9898\u3011"
    },
    {
        "content": "\r\n\u679c\u7136\u6ca1\u6709Kosaraju\u7684\u9898\u89e3\u256e(\u256f_\u2570)\u256d\u3002\r\n\r\n&emsp;&emsp;\u4e8b\u5b9e\u4e0a$tarjan$\u89e3$2-SAT$\u4f1a\u5f88\u4e0d\u81ea\u7136\uff0c\u56e0\u4e3a\u5b83\u7684\u62d3\u6251\u5e8f\u5176\u5b9e\u662f\u5012\u8fc7\u6765\u7684\uff0c\u800c$Kosaraju$\u5c31\u4e0d\u4f1a\u6709\u8fd9\u4e2a\u70e6\u607c\uff0c\u6b63\u597d\u6ca1\u4eba\u6253\uff0c\u6211\u6765\u6c34\u4e00\u53d1\u3002\r\n\r\n\r\n&emsp;&emsp;\u8003\u8651\u5230\u8fd9\u4e2a\u4f18\u79c0\u7684\u51b7\u95e8\u7b97\u6cd5\u5927\u591a\u6570\u4eba\u4e0d\u7528\uff0c\u6240\u4ee5\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u3002\r\n\r\n \u5173\u4e8eKosaraju\r\n\r\n1. \u4ee3\u7801\u4e0d\u5bb9\u6613\u9519\r\n \r\n2. \u601d\u7ef4\u4e0a\u66f4\u597d\u7406\u89e3\uff0c\u66f4\u52a0\u81ea\u7136\u3002\r\n\r\n3. \u548c$2-SAT$\u95ee\u9898\u7684\u539f\u7406\u4e0a\u66f4\u52a0\u5171\u901a\r\n\r\n \u5148\u4e0a\u4e00\u6ce2\u4ee3\u7801\uff1a\r\n```cpp\r\nvoid add(int x,int y){\r\n\te[++tot].to=y;e[tot].next=head[x];head[x]=tot;\r\n\te[++tot].to=x;e[tot].next=HEAD[y];HEAD[y]=tot;\r\n}\r\n```\r\n```cpp\r\nvoid dfs1(int u){\r\n\tint i;\r\n\tvis[u]=1;\r\n\tfor(i=head[u];i;i=e[i].next)\r\n\t\tif(!vis[e[i].to])\r\n\t\t\tdfs1(e[i].to);\r\n\tturn[++cnt]=u;\r\n}\r\nvoid dfs2(int u){\r\n\tbelong[u]=cnt;vis[u]=1;\r\n\tfor(int i=HEAD[u];i;i=e[i].next)\r\n\t\tif(!vis[e[i].to])\r\n\t\t\tdfs2(e[i].to);\r\n}\r\nvoid kosaraju(){\r\n\tfor(int i=1;i<=2*n;i++)\r\n\t\tif(!vis[i])dfs1(i);\r\n\treset(vis);cnt=0;\r\n\tfor(int i=2*n;i>=1;i--)\r\n\t\tif(!vis[turn[i]])\r\n\t\t\tcnt++,dfs2(turn[i]);\r\n}\r\n```\r\n\u539f\u7406\u5f88\u7b80\u5355\uff1a\r\n\r\n1. \u8003\u8651\u65e0\u5411\u56fe\u7684\u7f29\u70b9\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\uff0c\u53ea\u8981\u4ece\u8fd9\u4e2a\u5757\u4efb\u610f\u4e00\u4e2a\u70b9\u5f00\u59cb\u8dd1\u5230\u6ca1\u70b9\u53ef\u53bb\u5c31\u53ef\u4ee5\u4e86\u3002\r\n2. \u7136\u800c\u6709\u5411\u56fe\u4e0d\u53ef\u4ee5\uff0c\u8bbe$A$\uff0c$B$\u4e3a\u4e24\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\uff0c\u5f53$A->B$\u65f6\uff0c\u6211\u4eec\u4f9d\u7136\u65e0\u8111\u8dd1\uff0c\u628a\u8dd1\u5230\u7684\u7f29\u4e00\u8d77\uff0c\u4f46\u662f\u5462\uff0c\u5982\u679c\u6211\u4eec\u4ece$A$\u4e2d\u7684\u70b9\u5f00\u59cb\u8dd1\uff0c\u5c31\u4f1a\u628a$A$\u548c$B$\u7f29\u4e00\u8d77\uff0c\u8fd9\u662f\u6211\u4eec\u4e0d\u5e0c\u671b\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u8ba9\u4ed6\u603b\u4f1a\u4ece$B$\u5f00\u59cb\u904d\u5386\u3002\r\n3. \u6211\u4eec\u4f7f\u7528\u201c\u9006\u540e\u5e8f\u201d\uff0c\u5373\u5148\u904d\u5386\u8be5\u70b9\u7684\u51fa\u70b9\uff0c\u5728\u628a\u5b83\u4e22\u8fdb\u53bb\uff0c\u76f8\u5f53\u4e8e\u662f\u201c\u6bcf\u4e2a\u70b9\u8dd1\u5b8c\u7684\u987a\u5e8f\u201d\u3002\r\n\r\n```cpp\r\nvoid dfs1(int u){\r\n\tint i;\r\n\tvis[u]=1;\r\n\tfor(i=head[u];i;i=e[i].next)\r\n\t\tif(!vis[e[i].to])\r\n\t\t\tdfs1(e[i].to);\r\n\tturn[++cnt]=u;\r\n}\r\n```\r\n \u8fd9\u6837\u505a\u4f1a\u6709\u4e00\u4e2a\u5f88\u68d2\u7684\u6027\u8d28\uff0c\u6a21\u62df\u4e00\u6ce2\u8fc7\u7a0b\uff1a\r\n \r\n&emsp;&emsp;$(1).$\u4ece$A$\u5f00\u59cb\u8dd1\uff0c\u904d\u5386\u987a\u5e8f\u4e3a:$A->B->$\u628a$B$\u4e22\u8fdb\u6808$->$\u56de\u6eaf\u5230$A->$\u628a$A$\u4e22\u8fdb\u6808\u3002\r\n \r\n&emsp;&emsp;$(2).$\u4ece$B$\u5f00\u59cb\u8dd1\uff0c\u904d\u5386\u987a\u5e8f\u4e3a:\u8dd1\u5b8c$B->$\u628a$B$\u4e22\u8fdb\u6808$->$\u56e0\u4e3a\u8fb9\u7684\u65b9\u5411\u662f$A$\u5230$B$\u800c\u5230\u4e0d\u4e86$A$\uff0c\u9000\u51fa$->$\u53d1\u73b0$vis[A]=0->$\u8dd1$A->$\u628a$A$\u4e22\u8fdb\u6808\u3002\r\n\r\n&emsp;&emsp;\u6211\u4eec\u53d1\u73b0\u4e0d\u7ba1\u600e\u4e48\u6837\uff0c\u6808\u9876\u90fd\u662fA\u3002\r\n&emsp;&emsp;$4.$\u4f46\u662f\u8fd9\u4e2a$A$\u5f88\u8ba9\u4eba\u96be\u53d7\uff0c\u76f8\u5f53\u4e8e\u6211\u4eec\u627e\u5230\u4e86\u4e00\u79cd\u65b9\u6cd5\uff0c\u4f7f\u6808\u9876\u6c38\u8fdc\u90fd\u662f\u90a3\u4e2a\u4e0d\u5e94\u8be5\u8dd1\u7684\u70b9\uff0c\u8fd9\u548c\u7b2c\u4e8c\u6761\u4e2d\u7684\u671f\u671b\u4e0d\u7b26\u5408\u8bf6\u3002\r\n \r\n&emsp;&emsp;5.\u4e8e\u662f\u6211\u4eec\u5efa\u4e00\u4e2a\u53cd\u56fe\uff0c\u5bf9\u4e8e$A$\u548c$B$\uff0c\u4ed6\u4eec\u4f9d\u7136\u90fd\u662f\u5f3a\u8054\u901a\u7684(\u6bd4\u5982\u73af\u53cd\u5411\u4e86\u8fd8\u662f\u4e00\u4e2a\u73af)\uff0c\u4f46\u662f$A->B$\u7684\u8fb9\u53d8\u6210\u4e86$B->A$\uff0c\u800c$A$\u5728\u6808\u9876\uff0c\u8fd9\u5c31\u5f88\u5b8c\u7f8e!\u73b0\u5728\u6211\u4eec\u50cf\u65e0\u5411\u56fe\u4e00\u6837\u65e0\u8111\u904d\u5386\u4e00\u904d\u5c31$OK$\u4e86\u3002\r\n\r\n\u547c\uff0c\u603b\u7b97\u662f\u8bb2\u5b8c\u4e86\uff0c\u90a3\u4e48\u5f00\u59cb\u6b63\u5f0f\u8bb2\u4e00\u6ce22-SAT\u3002\r\n\r\n&emsp;&emsp;\u5206\u6790\u4e00\u6ce2\u903b\u8f91\uff1a\r\n\r\n&emsp;&emsp;$1.<A=1$\u6216\u8005$B=1>$ $=$ $($\u5f53$A$\u4e0d\u9009,$B$\u4e00\u5b9a\u5f97\u9009;\u5f53$B$\u4e0d\u9009\uff0c$A$\u4e00\u5b9a\u5f97\u9009$)$\r\n \r\n&emsp;&emsp;$2.<A=0$\u6216\u8005$B=0>$ $=($\u5f53$A$\u9009\uff0c$B$\u4e00\u5b9a\u4e0d\u9009;\u5f53$B$\u9009,$A$\u4e00\u5b9a\u4e0d\u9009$)$\r\n\r\n&emsp;&emsp;$3.<A=0$\u6216\u8005$B=1>$ $=($\u5f53$A$\u9009\uff0c$B$\u4e00\u5b9a\u9009;\u5f53$B$\u4e0d\u9009\uff0c$A$\u4e00\u5b9a\u4e0d\u9009$)$\r\n\r\n $4.<A=1$\u6216\u8005$B=0>$ $=($\u5f53$A$\u4e0d\u9009\uff0c$B$\u4e00\u5b9a\u4e0d\u9009\uff1b\u5f53$B$\u9009,$A$\u4e00\u5b9a\u9009)\r\n\r\n\r\n &emsp;&emsp;\u8fd9\u6837\u4e00\u6765\uff0c\u4e00\u4e2a\u4e2a\u4ee4\u4eba\u4e0d\u723d\u7684\u201c\u6216\u8005\u201d\u5c31\u53d8\u6210\u4e86\u53ef\u4ee5\u786e\u5b9a\u7684\u201c\u4e00\u5b9a\u201d\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u5173\u7cfb\u5efa\u56fe\u3002\r\n\r\n&emsp;&emsp;$tips$:\u5f53\u4f60\u628a\u4e0a\u9762\u56db\u53e5\u7406\u89e3\u4e86\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5e94\u8be5\u4e5f\u5c31\u53ef\u4ee5\u770b\u61c2\u4e86\uff0c\u5982\u679c\u4e0d\u7406\u89e3\u628a4\u79cd\u60c5\u51b5\u5e26\u8fdb\u53bb\u770b\u4e00\u770b\u5e94\u8be5\u5c31\u6e05\u6670\u4e86\u3002(\u5728\u4e0b\u65b9\u4ee3\u7801\u4e4b\u4e2d\uff0c$1-n$\u8868\u793a$1-n$\u51b3\u7b56\u9009\uff0c$n+1-2n$\u8868\u793a$1-n$\u51b3\u7b56\u4e0d\u9009)\r\n```cpp\r\nfor(i=1;i<=m;i++){\r\n\tx=read();f1=read();y=read();f2=read();\r\n\tadd(x+n*(f1&1),y+n*(f2^1));\r\n\tadd(y+n*(f2&1),x+n*(f1^1));\r\n}\r\n```\r\n &emsp;&emsp;\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u903b\u8f91\u95ee\u9898\u4f1a\u548c\u5f3a\u8054\u901a\u5206\u91cf\u6cbe\u4e0a\u5173\u7cfb\u5462\uff1f\r\n\r\n&emsp;&emsp;\u6784\u5efa\u51fa\u4e86\u56fe\u4e4b\u540e\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u82e5$A->B$\u4ee3\u8868\u9009\u4e86\u51b3\u7b56$A$\u4e00\u5b9a\u9009\u51b3\u7b56$B$\uff0c\u90a3\u4e48\u6211\u4eec\u5982\u679c\u8fd9\u6837\u6307\u4e86\u4e00\u5708\u4e4b\u540e\u6307\u5230\u4e86\u76f8\u6096\u7684\u51b3\u7b56\uff0c\u5c31\u50cf$A=1->B=1->A=0$\uff0c\u90a3\u4e48\u8fd9\u4e2a$2-SAT$\u80af\u5b9a\u662f\u65e0\u89e3\u7684\uff1a\r\n```cpp\r\nfor(i=1;i<=n;i++)\r\n\tif(belong[i]==belong[i+n]){\r\n\t\tcout<<\"IMPOSSIBLE\";return 0;\r\n}\r\n```\r\n\r\n&emsp;&emsp;\u8fd9\u4e2a\u903b\u8f91\u5176\u5b9e\u5f88\u597d\u60f3\uff0c\u4f46\u662f\u201c\u5982\u679c\u6ca1\u6709\u8fd9\u79cd\u60c5\u51b5\u5373\u6709\u89e3\u201d\u8fd9\u4e00\u7ed3\u8bba\u53c8\u662f\u600e\u4e48\u6765\u7684\u5462?\r\n&emsp;&emsp;\u6211\u4eec\u8003\u8651\u8fd9\u6837\u4e00\u4ef6\u4e8b\u60c5\uff1a\u5982\u679c\u903b\u8f91\u5173\u7cfb$A->B->C->D->A$\u5b58\u5728\uff0c\u90a3\u4e48\u4ed6\u4eec\u7684\u201c\u975e\u201d\u5173\u7cfb\u4e00\u5b9a\u6709$!D$$->$$!C$$->$$!B$$\u2014>$$!A->!D$\u5b58\u5728\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\r\n![](https://cdn.luogu.com.cn/upload/pic/50490.png)\r\n \u6b64\u65f6\u6211\u4eec\u4efb\u53d6\u5176\u4e2d\u4e00\u7ec4\u5f3a\u8054\u901a\u5206\u91cf\u5c31\u53ef\u4ee5\u4ea7\u751f\u4e00\u7ec4\u89e3\u4e86\u3002\r\n &emsp;&emsp;\u4f46\u662f\u4e8b\u60c5\u5f80\u5f80\u4e0d\u5982\u4eba\u610f\uff0c\u6211\u4eec\u52a0\u4e00\u6761$B->!C$\uff0c\u968f\u4e4b\u4ea7\u751f\u4e86$C->!B$:![](https://cdn.luogu.com.cn/upload/pic/50492.png )\r\n&emsp;&emsp;\u90a3\u4e48 ($ABCD$\u5168\u9009) \u548c ($ABCD$\u90fd\u4e0d\u9009) \u4e24\u4e2a\u201c\u903b\u8f91\u5757\u201d\u5c31\u4e0d\u662f\u4efb\u610f\u53d6\u4e86\uff0c\u663e\u7136\u6211\u4eec\u5982\u679c\u9009 ($ABCD$\u5168\u9009) \u8fd9\u4e2a\u5757\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\r\n &emsp;&emsp;\u6709\u6ca1\u6709\u89c9\u5f97\u8fd9\u4e00\u90e8\u5206\u548c\u4e4b\u524d\u7684Kosaraju\u67d0\u4e00\u90e8\u5206\u76f8\u4f3c\u5462\uff1f\r\n &emsp;&emsp;\u6015\u4f60\u4eec\u61d2\u5f97\u7ffb\uff0c\u5e2e\u4f60\u4eec\u56de\u5fc6\u4e00\u4e0b\uff1a\r\n&emsp;&emsp;\u201c$2.$\u7136\u800c\u6709\u5411\u56fe\u4e0d\u53ef\u4ee5\uff0c\u8bbe$A$\uff0c$B$\u4e3a\u4e24\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\uff0c\u5f53$A->B$\u65f6\uff0c\u6211\u4eec\u4f9d\u7136\u65e0\u8111\u8dd1\uff0c\u628a\u8dd1\u5230\u7684\u7f29\u4e00\u8d77\uff0c\u4f46\u662f\u5462\uff0c\u5982\u679c\u6211\u4eec\u4ece$A$\u4e2d\u7684\u70b9\u5f00\u59cb\u8dd1\uff0c\u5c31\u4f1a\u628a$A$\u548c$B$\u7f29\u4e00\u8d77\uff0c\u8fd9\u662f\u6211\u4eec\u4e0d\u5e0c\u671b\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u8ba9\u4ed6\u603b\u4f1a\u4ece$B$\u5f00\u59cb\u904d\u5386\u3002\u201d\r\n &emsp;&emsp;$2-SAT$\u539f\u7406\u662f\u8fd9\u6837\u7684\uff1a\u5f53\u51fa\u73b0\u5f3a\u8054\u901a\u5206\u91cf$A->B$\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u6ee1\u8db3B\u7684\u8981\u6c42,\u4e5f\u5c31\u662f\u6ee1\u8db3\u62d3\u6251\u5e8f\u66f4\u9760\u540e\u7684\u201c\u8054\u901a\u5757\u201d\u7684\u8981\u6c42\u3002(\u8fd9\u548c$Kosaraju$\u4e0d\u662f\u4e00\u6837\u7684:\u5f53\u9047\u5230\u4e86$A->B$\uff0c\u5148\u7f29$B$)\r\n &emsp;&emsp;\u56de\u5fc6\u4e00\u4e0b$Kosaraju$\u5e72\u4e86\u4ec0\u4e48\u4e8b\u60c5\uff1a\u5f53$A->B$,$A$\u603b\u662f\u5728\u6808\u9876\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bd4$B$\u66f4\u65e9\u904d\u5386\uff0c\u62d3\u6251\u5e8f\u66f4\u5c0f\uff0c\u8fd9\u771f\u662f\u592a\u68d2\u4e86!\r\n&emsp;&emsp;\u5728$Kosaraju$\u7b97\u6cd5\u7684\u5b9e\u73b0\u5f53\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u6240\u5c5e\u7684\u5f3a\u8054\u901a\u5206\u91cf\u7684\u7f16\u53f7\u5176\u5b9e\u5c31\u662f\u4ed6\u4eec\u7684\u62d3\u6251\u5e8f\uff0c\u4e8e\u662f\uff0c\u5f53\u6211\u4eec\u60f3\u77e5\u9053$A$\u9009\u4e0d\u9009\uff0c\u53ea\u9700\u8981\u6bd4\u8f83$A$\u548c$!A$\u6240\u5c5e\u8054\u901a\u5757\u7684\u7f16\u53f7\u5c31$OK$\u4e86\uff0c\u9009\u62e9\u90a3\u4e2a\u7f16\u53f7\u66f4\u5927\uff0c\u5373\u62d3\u6251\u5e8f\u66f4\u9760\u540e\u7684\u51b3\u7b56\u3002\r\n```cpp\r\ncout<<\"POSSIBLE\\n\";\r\n\tfor(i=1;i<=n;i++){\r\n\t\tcout<<(belong[i]>belong[i+n])<<' ';\r\n\t}\t\r\n```\r\n&emsp;&emsp;\u56e0\u4e3a\u62d3\u6251\u5e8f\u8f83\u5927\u7684\u51b3\u7b56\u80af\u5b9a\u4e0d\u4f1a\u548c\u62d3\u6251\u5e8f\u8f83\u5c0f\u7684\u51b3\u7b56\u51b2\u7a81\uff0c\u90a3\u4e48\u6211\u4eec\u6309\u7167\u62d3\u6251\u5e8f\uff0c\u4ece\u540e\u5f80\u524d\u8fdb\u884c\u6ee1\u8db3\uff0c\u5728\u6709\u89e3\u72b6\u6001\u4e0b\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u4e00\u7ec4\u53ef\u884c\u89e3\u3002\r\n &emsp;&emsp;\u81f3\u6b64 \u95ee\u9898\u5b8c\u7f8e\u89e3\u51b3 \u5f53\u903b\u8f91\u5173\u7cfb\u4e0d\u6b62$4$\u4e2a\u7684\u65f6\u5019\u53ea\u8981\u4fee\u6539\u5efa\u8fb9\u65b9\u5f0f\u5c31\u597d\u3002\r\n&emsp;&emsp;\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\r\n```cpp\r\n#include<cstdio>\r\n#include<iostream>\r\n#include<algorithm>\r\n#include<cstring>\r\n#define reset(a) memset((a),0,sizeof((a)))\r\nusing namespace std;\r\nstatic char buf[100000],*pa,*pd;\r\n#define gc pa==pd&&(pd=(pa=buf)+fread(buf,1,100000,stdin),pa==pd)?EOF:*pa++\r\ninline int read(){\r\n\tregister int x(0);register char c(gc);\r\n\twhile(c>'9'||c<'0')c=gc;\r\n\twhile(c>='0'&&c<='9')x=x*10+c-48,c=gc;\r\n\treturn x;\r\n}\r\nconst int N=4001000;\r\nstruct edge{\r\n\tint to,next;\r\n}e[N];\r\nint head[N],tot,HEAD[N];\r\nint n,m,cnt,turn[N],belong[N],vis[N];\r\nvoid add(int x,int y){\r\n\te[++tot].to=y;e[tot].next=head[x];head[x]=tot;\r\n\te[++tot].to=x;e[tot].next=HEAD[y];HEAD[y]=tot;\r\n}\r\nvoid dfs1(int u){\r\n\tint i;\r\n\tvis[u]=1;\r\n\tfor(i=head[u];i;i=e[i].next)\r\n\t\tif(!vis[e[i].to])\r\n\t\t\tdfs1(e[i].to);\r\n\tturn[++cnt]=u;\r\n}\r\nvoid dfs2(int u){\r\n\tbelong[u]=cnt;vis[u]=1;\r\n\tfor(int i=HEAD[u];i;i=e[i].next)\r\n\t\tif(!vis[e[i].to])\r\n\t\t\tdfs2(e[i].to);\r\n}\r\nvoid kosaraju(){\r\n\tfor(int i=1;i<=2*n;i++)\r\n\t\tif(!vis[i])dfs1(i);\r\n\treset(vis);cnt=0;\r\n\tfor(int i=2*n;i>=1;i--)\r\n\t\tif(!vis[turn[i]])\r\n\t\t\tcnt++,dfs2(turn[i]);\r\n}\r\nint main(){\r\n\tn=read();m=read();\r\n\tregister int i,x,y,f1,f2;\r\n\tfor(i=1;i<=m;i++){\r\n\t\tx=read();f1=read();y=read();f2=read();\r\n\t\tadd(x+n*(f1&1),y+n*(f2^1));\r\n\t\tadd(y+n*(f2&1),x+n*(f1^1));\r\n\t}\r\n\tkosaraju();\r\n\tfor(i=1;i<=n;i++)\r\n\t\tif(belong[i]==belong[i+n]){\r\n\t\t\tcout<<\"IMPOSSIBLE\";return 0;\r\n\t\t}\r\n\tcout<<\"POSSIBLE\\n\";\r\n\tfor(i=1;i<=n;i++){\r\n\t\tcout<<(belong[i]>belong[i+n])<<' ';\r\n\t}\t\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1548855707,
        "uid": 130060,
        "name": "TopCarry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4782 \u3010\u3010\u6a21\u677f\u30112-SAT \u95ee\u9898\u3011"
    },
    {
        "content": "\u5c06\u6bcf\u4e00\u4e2a\u70b9$x_i$\u62c6\u6210$2i$\u548c$2i+1$\uff08$2i$\u8868\u793a$x_i$\u7684\u5047\u72b6\u6001\uff0c$2i+1$\u8868\u793a$x_i$\u7684\u771f\u72b6\u6001\uff09\uff0c\u95ee\u9898\u5c31\u5316\u4e3a\u4e86\u4ece2n\u4e2a\u72b6\u6001\u4e2d\u9009\u51fa\u539f\u6765\u7684\u6bcf\u4e00\u4e2a$x_i$\u7684\u4e00\u4e2a\u72b6\u6001\u3002\n\n\u8fd9\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u522b\u6025\uff0c\u5148\u4e3e\u4e2a\u6817\u5b50\uff0c\u201c1 1 3 0\u201d\u5c31\u53ef\u4ee5\u7528\u6709\u5411\u8fb9 2->6 7->3 \u6765\u8868\u793a\uff0c\u4ec0\u4e48\u610f\u601d\u5462\uff1f2\u8868\u793a1\u4e3afalse\uff0c\u6839\u636e\u89c4\u5219\u53ef\u5f973\u4e00\u5b9a\u4e3afalse\uff08\u4e5f\u5c31\u662f6\uff09\uff0c7\u8868\u793a3\u4e3atrue\uff0c\u6839\u636e\u89c4\u5219\u53ef\u5f971\u4e00\u5b9a\u4e3atrue\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u6709\u5411\u56fe\u7684\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\uff08\u4e0d\u4e00\u5b9a\u662f\u5f3a\u8fde\u901a\u7684\uff09\u8fdb\u884cdfs\u5904\u7406\uff0c\u5e76\u52a0\u4e0a\u526a\u679d\u3001\u56de\u6eaf\u5c31\u884c\u4e86\uff0c\u7ec6\u8282\u89c1\u4ee3\u7801\u3002\n\n```cpp\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<vector>\nusing namespace std;\ntemplate<typename T> inline void read(T& t)\n{\n    t=0; bool f=false; char ch;\n    while(ch=getchar(),!((ch>='0'&&ch<='9')||ch=='-'));\n    if(ch=='-') f=true,ch=getchar();\n    t=ch-'0';\n    while(ch=getchar(),ch>='0'&&ch<='9') t=t*10+ch-'0';\n    if(f) t=-t;\n}\ntemplate<typename T,typename... Args> inline void read(T& t,Args&... args) { read(t); read(args...); }\nconst int maxn=1e6+7;\nstruct TwoSAT\n{\n    int n;\n    vector<int> G[maxn*2];\n    bool mark[maxn*2];\n    int S[maxn*2],c;\n    bool dfs(int x)\n    {\n        if(mark[x^1]) return false;\n        if(mark[x]) return true;\n        mark[x]=true;\n        S[c++]=x;\n        for(int i=0;i<G[x].size();i++)\n            if(!dfs(G[x][i])) return false;\n        return true;\n    }\n    //x = xval or y = yval\n    void add_clause(int x,int xval,int y,int yval)\n    {\n        x=x*2+xval;\n        y=y*2+yval;\n        G[x^1].push_back(y);\n        G[y^1].push_back(x);\n        //\u4e00\u4e2a\u4e0d\u6ee1\u8db3\u4e00\u5b9a\u80fd\u63a8\u51fa\u53e6\u4e00\u4e2a\u6ee1\u8db3\n    }\n    bool solve()\n    {\n        for(int i=0;i<n*2;i+=2)\n            if(!mark[i]&&!mark[i+1])//\u6ca1\u88ab\u8bbf\u95ee\u8fc7\n            {\n                c=0;\n                if(!dfs(i))\n                {\n                    while(c>0) mark[S[--c]]=false;\n                    //\u56de\u6eaf\n                    if(!dfs(i+1)) return false;\n                    //true/false\u90fd\u4e0d\u884c\u90a3\u5c31\u65e0\u836f\u53ef\u6551\u4e86\n                }\n            }\n        return true;\n    }\n}Ago;\nint m,x,xval,y,yval;\nint main()\n{\n#ifdef local\n    freopen(\"pro.in\",\"r\",stdin);\n#endif\n    read(Ago.n,m);\n    while(m-->0)\n    {\n        read(x,xval,y,yval);\n        Ago.add_clause(x,xval,y,yval);\n    }\n    if(!Ago.solve()) printf(\"IMPOSSIBLE\\n\");\n    else\n    {\n        printf(\"POSSIBLE\\n\");\n        for(int i=1;i<=Ago.n;i++)\n            if(Ago.mark[i<<1]) printf(\"0 \");\n            else printf(\"1 \");\n        printf(\"\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1533201483,
        "uid": 87248,
        "name": "happyZYM",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4782 \u3010\u3010\u6a21\u677f\u30112-SAT \u95ee\u9898\u3011"
    },
    {
        "content": "\u8c8c\u4f3c\u5c11\u6709\u9898\u89e3\u89e3\u91ca \u201c\u53d6\u62d3\u6251\u5e8f\u8f83\u5927\u8005\u201d \u8fd9\u6b65\u7684\u6b63\u786e\u6027\uff0c\u4e8e\u662f\u8fd9\u91cc\u5c31\u8865\u5145\u4e2a\u7b80\u77ed\u7684\u8bc1\u660e\n\n\u53e6\u5916\u5728\u6211\u67e5\u9605\u8d44\u6599\u65f6\uff0c\u8fd8\u53d1\u73b0\u6709\u4ee5 wiki \u4e3a\u4ee3\u8868\u7684\u53e6\u4e00\u79cd 2-sat \u505a\u6cd5\uff0c\u4e3b\u8981\u533a\u522b\u5728\u6700\u540e\u4e00\u6b65\uff1b\u7531\u4e8e\u6ca1\u4ec0\u4e48\u5b9e\u73b0\u4ef7\u503c\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5c55\u5f00\u4e86\u3002\u6709\u5174\u8da3\u53ef\u4ee5\u53c2\u8003 [\u201c2-SAT \u89e3\u6cd5\u6d45\u6790\u201d](https://www.oschina.net/uploads/doc/sat2_sjtu_zhaoshuang.pdf), [wiki(en)](https://en.wikipedia.org/wiki/2-satisfiability)\n\n## \u89e3\u6790\n\n### Part 0 - \u5bfc\u5165\n\n\u4e00\u822c\u6211\u4eec\u6c42\u89e3 2-sat \u7684\u8fc7\u7a0b\u4e3a\uff1a\n\n1. \u5efa\u56fe\uff08\u5177\u4f53\u7565\uff09\n2. \u5bf9\u56fe\u6c42\u51fa\u5f3a\u8054\u901a\u5206\u91cf\uff0c\u5e76\u6c42\u51fa\u7f29\u70b9\u540e\u7684\u62d3\u6251\u5e8f\n3. \u82e5\u5b58\u5728\u5bf9\u5e94\u540c\u4e00\u4e2a\u53d8\u91cf\u7684\u4e24\u4e2a\u7ed3\u70b9\u5728\u540c\u4e00\u4e2a\u5206\u91cf\u5185\uff0c\u5373\u65e0\u89e3\n4. \u5426\u5219\u4e00\u5b9a\u6709\u89e3\uff1b\u5bf9\u6bcf\u4e2a\u53d8\u91cf\u53d6\u6240\u5728\u5206\u91cf\u62d3\u6251\u5e8f\u8f83\u5927\u7684\u90a3\u4e2a\u5bf9\u5e94\u7ed3\u70b9\uff0c\u4e00\u5b9a\u80fd\u6784\u9020\u51fa\u4e00\u7ec4\u5408\u6cd5\u89e3\n\n\u5176\u4e2d\u4e0d\u592a\u663e\u7136\u7684\u5730\u65b9\u4e3b\u8981\u5728 $\\text{4.}$\n\n### Part 1 - \u5f15\u7406\n\n\u8bbe\u53d8\u91cf $x_i$ \u5bf9\u5e94\u7684\u7ed3\u70b9\u4e3a $u_{i, p}, p\\in \\{0, 1\\}$\n\n\u5148\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u5f15\u7406\uff1a\n\n> \u5f15\u7406 $1.$ \u82e5\u5b58\u5728\u8fb9 $(u_{i, p}, u_{j, q})$\uff0c\u90a3\u4e48\u4e00\u5b9a\u5bf9\u5e94\u5730\u5b58\u5728\u8fb9 $(u_{j, q\\text{ xor }1}, u_{i, p\\text{ xor }1})$\n\n\u8003\u8651\u6211\u4eec\u5efa\u56fe\u7684\u8fde\u8fb9\u89c4\u5219\uff0c\u8fd9\u662f\u663e\u7136\u7684\uff08\u5373\u82e5\u6709\u8981\u6c42 \u300c$x_i=b_1$ \u6216 $x_j=b_2$\u300d\uff0c\u90a3\u4e48 $x_i$ \u5bf9\u5e94\u7684\u4e0d\u6ee1\u8db3\u8981\u6c42\u7684\u7ed3\u70b9\uff08$u_{i, b_1\\text{ xor }1}$\uff09\u5c31\u4f1a\u5411 $x_j$ \u5bf9\u5e94\u7684\u6ee1\u8db3\u8981\u6c42\u7684\u7ed3\u70b9\uff08$u_{j, b_2}$\uff09\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff1b\u53e6\u4e00\u6761\u8fb9\u4ea6\u7136\uff09\n\n\u66f4\u8fdb\u4e00\u6b65\u5730\uff0c\u6709\u5982\u4e0b\u5f15\u7406\uff1a\n\n> \u5f15\u7406 $2.$ \u82e5\u5b58\u5728\u8def\u5f84\uff08\u5355\u5411\uff09$p(u_{i, p}, u_{j, q})$\uff0c\u90a3\u4e48\u4e00\u5b9a\u5bf9\u5e94\u5730\u5b58\u5728\u8def\u5f84 $p(u_{j, q\\text{ xor }1}, u_{i, p\\text{ xor }1})$\n\n\u5bf9\u8def\u5f84\u4e0a\u6bcf\u4e00\u6761\u8fb9\u8fd0\u7528 $\\text{\u5f15\u7406 1.}$ \u5373\u53ef\u5f97\u5230\n\n### Part 2 - \u8bc1\u660e\n\n\u518d\u8003\u8651\u6211\u4eec\u7b97\u6cd5\u7684 $\\text{4.}$\uff1b\u4e0d\u59a8\u7528\u53cd\u8bc1\u6cd5\u8bc1\u660e\u5176\u6b63\u786e\u6027\n\n\u8bb0 $f(u_{i, p})$ \u8868\u793a $u_{i, p}$ \u6240\u5728\u5206\u91cf\u7684\uff08\u7f29\u70b9\u540e\u7684\uff09\u62d3\u6251\u5e8f\n\n\u8bbe\u6709 $f(u_{i, p})<f(u_{i, p\\text{ xor }1}) [1], f(u_{j, q})>f(u_{j, q\\text{ xor }1}) [2]$\uff0c\u4e14\u5b58\u5728\u8def\u5f84\uff08\u5355\u5411\uff09$P_1=p(u_{j, q}, u_{i, p})$\u3002\u663e\u7136\u8fd9\u7531\u6211\u4eec\u7684\u7b97\u6cd5\u4f1a\u5f97\u5230\u4e00\u4e2a\u975e\u6cd5\u7684\u7ed3\u679c\n\n\u8003\u8651 $\\text{\u5f15\u7406 2.}$\uff0c\u5f97\u51fa\u4e5f\u5b58\u5728\u8def\u5f84 $P_2=p(u_{i, p\\text{ xor }1}, u_{j, q\\text{ xor }1})$\u3002\u7531 $P_1$ \u53ef\u63a8\u51fa $f(u_{j, q})<f(u_{i, p}) [3]$\uff0c\u7531 $P_2$ \u53ef\u63a8\u51fa $f(u_{i, p\\text{ xor }1})<f(u_{j, q\\text{ xor }1}) [4]$\u3002\u8054\u7acb $[1], [3], [4]$ \u53ef\u5f97 $f(u_{j, q})<f(u_{j, q\\text{ xor }1})$\uff0c\u8fd9\u548c\u4f5c\u4e3a\u524d\u63d0\u7684 $[2]$ \u662f\u77db\u76fe\u7684\uff1b\u7531\u6b64\u53ef\u63a8\u5f97\u7b97\u6cd5\u7684 $\\text{4.}$ \u662f\u6b63\u786e\u7684\n\n\uff08\u8fd9\u90e8\u5206\u4f5c\u56fe\u53ef\u80fd\u4f1a\u66f4\u76f4\u89c2w\uff09\n\n## CODE\n\n\u4ec5\u4f9b\u53c2\u8003\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing std::min;\n\n/*------------------------------IO------------------------------*/\n\nnamespace IO_number{\n\tint read(){\n\t\tint x =0; char c =getchar(); bool f =0;\n\t\twhile(c < '0' || c > '9') (c == '-') ? f =1, c =getchar() : c =getchar();\n\t\twhile(c >= '0' && c <= '9') x =(x<<1)+(x<<3)+(48^c), c =getchar();\n\t\treturn (f) ? -x : x;\n\t}\n\t\n\tvoid write(const int &x){\n\t\tif(x/10)\n\t\t\twrite(x/10);\n\t\tputchar('0'+x%10);\n\t}\n}\nusing namespace IO_number;\n\n/*------------------------------Graph------------------------------*/\n\nconst int MAXN =1e6+20;\n\nint first[MAXN<<1], tote;\nstruct edge{\n\tint to, nxt;\n}e[MAXN<<1];\n\ninline void addedge(const int &u, const int &v){\n\t++tote, e[tote].to =v, e[tote].nxt =first[u], first[u] =tote;\n}\n\n/*------------------------------Tarjan------------------------------*/\n\nint scc_id[MAXN<<1], Scc_id;\n\nint dfn[MAXN<<1], low[MAXN<<1], Dfn;\nint stk[MAXN<<1], stk_top;\nbool instk[MAXN<<1];\n\nvoid tarjan(const int &u){\n\tlow[u] =dfn[u] =++Dfn;\n\tstk[stk_top++] =u;\n\tinstk[u] =1;\n\tfor(int l =first[u]; l; l =e[l].nxt){\n\t\tif(!dfn[e[l].to]){\n\t\t\ttarjan(e[l].to);\n\t\t\tlow[u] =min(low[u], low[e[l].to]);\n\t\t}\n\t\telse if(instk[e[l].to])\n\t\t\tlow[u] =min(low[u], dfn[e[l].to]);\n\t}\n\tif(low[u] == dfn[u]){\n\t\t++Scc_id;\n\t\twhile(stk[stk_top] != u){\n\t\t\tscc_id[stk[stk_top-1]] =Scc_id;\n\t\t\tinstk[stk[stk_top-1]] =0;\n\t\t\t--stk_top;\n\t\t}\n\t}\n}\n\n/*------------------------------Main------------------------------*/\n\nint main(){\n\tint n =read(), m =read();\n\tfor(int t =0; t < m; ++t){\n\t\tint i =read(), a =read(), j =read(), b =read();\n\t\t/* [1, n] -> false, [n+1, 2n] -> true */\n\t\t// x_i, x_j \u5747\u4e0d\u6ee1\u8db3\u4e0d\u80fd\u540c\u65f6\u6210\u7acb //\n\t\taddedge(i+(a^1)*n, j+b*n);\n\t\taddedge(j+(b^1)*n, i+a*n);\n\t}\n\t\n\tfor(int i =1; i <= 2*n; ++i){\n\t\tif(!dfn[i])\n\t\t\ttarjan(i);\n\t\tif(i <= n && scc_id[i] == scc_id[i+n])\n\t\t\treturn puts(\"IMPOSSIBLE\") && 0;\n\t}\n\tputs(\"POSSIBLE\");\n\tfor(int i =1; i <= n; ++i)\n\t\twrite((scc_id[i+n] < scc_id[i])), putchar(' ');\n}\n```",
        "postTime": 1612581211,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4782 \u3010\u3010\u6a21\u677f\u30112-SAT \u95ee\u9898\u3011"
    },
    {
        "content": "## $2-SAT$\u95ee\u9898\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u9898\u76ee\u7684\u8981\u6c42\u662f\u5728\u4e24\u4e2a\u6761\u4ef6\u4e2d\u4efb\u9009\u4e00\u4e2a\u6ee1\u8db3\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u9009A\u6761\u4ef6\uff0c\u5c31\u5fc5\u987b\u8981\u9009B\u6761\u4ef6\uff1b\u540c\u7406\uff0c\u6211\u4eec\u4e0d\u9009B\u6761\u4ef6\uff0c\u5c31\u5fc5\u987b\u8981\u9009A\u6761\u4ef6\u3002\n\n\u73b0\u5728\uff0c\u6211\u4eec\u5047\u8bbe\u8fb9(A,B)\u8868\u793a\u9009\u4e86A\u6761\u4ef6\uff0c\u5c31\u5fc5\u987b\u8981\u9009B\u6761\u4ef6\u3002\u90a3\u4e48\u6839\u636e\u4e0a\u9762\u7684\u63a8\u8bba\uff0c\u6211\u4eec\u53d1\u73b0\u73b0\u5728\u6211\u4eec\u5e94\u8be5\u8fde\u8fb9(\u975eA\u6761\u4ef6\uff0cB\u6761\u4ef6)\uff0c(\u975eB\u6761\u4ef6\uff0cA\u6761\u4ef6)\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u80fd\u53d1\u73b0\uff0c\u5982\u679cA\u6761\u4ef6\u548c\u975eA\u6761\u4ef6\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u9762\uff0c\u8bc1\u660e\u9009\u4e86A\u6761\u4ef6\u4e4b\u540e\u6211\u4eec\u5c31\u8981\u9009\u975eA\u6761\u4ef6\uff0c\u8fd9\u81ea\u76f8\u77db\u76fe\u3002\u8fd9\u4e2a\u65f6\u5019\u65e0\u89e3\u3002\n\n\u987a\u4fbf\u7ed9\u5927\u5bb6\u63a8\u8350\u51e0\u9053\u76f8\u5173\u7684\u9898\u76ee\uff1a\n\n[JSOI2010\u6ee1\u6c49\u5168\u5e2d](https://www.luogu.org/problemnew/show/P4171)\n\n[POJ2723](http://poj.org/problem?id=2723)\n\n```c++\n#include <cstdio>\n#define min(a,b) (a<b?a:b)\n\nconst int maxn=1e6+10;\nstruct EDGE\n{\n\tint t,next;\n}edge[maxn<<2];\nint head[maxn<<1],low[maxn<<1],dfn[maxn<<1],stack[maxn<<1],scc[maxn<<1];\nbool in[maxn<<1];\nint cur,n,tim,top,cnt,m;\n\nvoid add(int u,int v)\n{\n\tedge[++cur].t=v;\n\tedge[cur].next=head[u];\n\thead[u]=cur;\n}\n\nvoid tarjan(int u)\n{\n\tlow[u]=dfn[u]=++tim;\n\tstack[top++]=u;in[u]=true;\n\tfor(int i=head[u]; i; i=edge[i].next)\n\t{\n\t\tint v=edge[i].t;\n\t\tif(!dfn[v])\n\t\t{\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}else\tif(in[v])\n\t\t\tlow[u]=min(low[u],dfn[v]);\n\t}\n\tif(low[u]==dfn[u])\n\t{\n\t\tint v;\n\t\tcnt++;\n\t\tdo\n\t\t{\n\t\t\tv=stack[--top];\n\t\t\tin[v]=false;\n\t\t\tscc[v]=cnt;\n\t\t}while(u!=v);\n\t}\n}\n\nbool two_SAT()\n{\n\tfor(int i=1; i<=2*n; i++)\n\t\tif(!dfn[i])\n\t\t\ttarjan(i);//tarjan\u627e\u5f3a\u8fde\u901a\u5206\u91cf \n\tfor(int i=1; i<=n; i++)\n\t\tif(scc[i]==scc[i+n])//a\u6761\u4ef6\u548c\u975ea\u6761\u4ef6\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u539f\u95ee\u9898\u65e0\u89e3 \n\t\t\treturn false;\n\treturn true;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1; i<=m; i++)\n\t{\n\t\tint a,b,aval,bval;\n\t\tscanf(\"%d%d%d%d\",&a,&aval,&b,&bval);\n\t\tint nota=aval^1,notb=bval^1;//\u8fd9\u91cc\u6211\u7528a\u8868\u793a\u6761\u4ef6a\u90090\u7684\u60c5\u51b5\uff0ca+n\u8868\u793a\u6761\u4ef6a\u90091\u7684\u60c5\u51b5\u3002 \n\t\tadd(a+nota*n,b+bval*n);//\u8fde\u8fb9(\u975ea\uff0cb) \n\t\tadd(b+notb*n,a+aval*n);//\u8fde\u8fb9(\u975eb\uff0ca) \n\t}\n\tif(two_SAT())\n\t{\n\t\tprintf(\"POSSIBLE\\n\");\n\t\tfor(int i=1; i<=n; i++)\n\t\t\tprintf(\"%d \",scc[i]>scc[i+n]);\n\t}else\n\t\tprintf(\"IMPOSSIBLE\");\n\treturn 0;\n}\n```",
        "postTime": 1533772388,
        "uid": 53167,
        "name": "kuansoudafahao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4782 \u3010\u3010\u6a21\u677f\u30112-SAT \u95ee\u9898\u3011"
    },
    {
        "content": "# \u76ee\u5f55\n> \u7b80\u4ecb\n\n> \u505a\u6cd5\n\n> \u4ee3\u7801\n\n## \u7b80\u4ecb\nk-SAT\uff08\u5168\u79f0Satisfiability\uff09\u95ee\u9898\uff0c\u5177\u4f53\u6765\u8bf4\uff0c\u7ed9\u5b9a $n$ \u4e2a\u5177\u6709\u771f\u5047\u7684**\u547d\u9898**\uff0c\u7ed9\u4e00\u4e9b**\u903b\u8f91\u5173\u7cfb**\uff08\u4f8b\u5982 $p_1 \\vee p_2$\uff09\uff0c\u5982\u679c\u903b\u8f91\u5173\u7cfb\u5f0f\u5b50\u5305\u542b $k$ \u4e2a\u5143\uff0c\u8981\u6c42\u51fa $n$ \u4e2a\u547d\u9898\u7684\u771f\u5047\u503c\u6ee1\u8db3\u6240\u6709\u903b\u8f91\u5173\u7cfb\u3002\u5f53 $k>3$ \u65f6\uff0c\u5df2\u7ecf\u88ab\u8bc1\u660e\u4e3a $NPC$ \u95ee\u9898\uff0c\u4f46\u662f $k=2$ \u65f6\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6027\u590d\u6742\u5ea6\u7684\u7b97\u6cd5\u89e3\u51b3\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u8fd9\u91cd\u70b9\u8ba8\u8bba 2-SAT \u95ee\u9898\u3002\n\n## \u505a\u6cd5\n\u6ce8\u610f\u5230\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff1a$a\\vee b \\Leftrightarrow \\neg a \\rightarrow b$ \uff0c\u540c\u7406\uff0c$a\\vee b \\Leftrightarrow \\neg b \\rightarrow a$ \u3002\uff08\u8be6\u7ec6\u53ef\u4ee5\u53c2\u8003\u6570\u7406\u903b\u8f91\uff09\n\n> $\\rightarrow$ \u88ab\u79f0\u4e3a**\u8574\u542b**\n\n\u5982\u679c\u5c06 $n$ \u4e2a\u547d\u9898\u770b\u6210 $2n$ \u4e2a\u70b9\uff0c\u7136\u540e\u5229\u7528\u4e0a\u9762\u7684\u4e8b\u5b9e\u5efa\u8fb9\u7684\u8bdd\uff0c\u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a\u56fe\u8bba\u95ee\u9898\u6c42\u89e3\u4e86\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u4f8b\u5982\uff0c\u6709\u547d\u9898 $p_1,p_2$ \uff0c\u903b\u8f91\u5173\u7cfb\u4e3a $p_1\\vee p_2$ \uff0c\u6211\u4eec\u5c06 $p_1$ \u62c6\u6210\u4e24\u4e2a\u72b6\u6001\uff08\u56fe\u8bba\u4e2d\u76f8\u5e94\u7684\u4e24\u4e2a\u70b9\uff09 $x_1, \\neg x_1$ \uff0c\u5206\u522b\u8868\u793a $p_1$ \u53d6**\u771f**\u3001\u53d6**\u5047**\uff0c$p_2$ \u7528\u76f8\u540c\u65b9\u5f0f\u5904\u7406\uff0c\u90a3\u4e48\u903b\u8f91\u5173\u7cfb\u53ef\u4ee5\u8f6c\u5316\u4e3a\u56fe\u8bba\u4e2d\u7684\u4e24\u6761**\u6709\u5411**\u8fb9\uff1a$(\\neg x_1, x_2),~(\\neg x_2, x_1)$ \u3002\n\n\u7528\u8fd9\u6837\u7684\u65b9\u5f0f\uff0c\u5c31\u53ef\u4ee5\u5c06\u6240\u7ed9\u7684**\u547d\u9898**\u4ee5\u53ca**\u903b\u8f91\u5173\u7cfb**\u8f6c\u5316\u4e3a\u4e00\u4e2a**\u6709\u5411\u56fe**\u4e86\u3002\n\n\u5bf9\u8fd9\u4e2a\u6709\u5411\u56fe\uff0c\u6211\u4eec\u91c7\u7528 $SCC\u7f29\u70b9$ \uff0c\u5982\u679c\u4e00\u4e2a\u547d\u9898\u7684\u4e24\u4e2a\u72b6\u6001 $x_i,~\\neg x_i$ \u540c\u65f6\u51fa\u73b0\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u95ee\u9898\u65e0\u89e3\uff08\u56e0\u4e3a\u4e0d\u53ef\u80fd\u6709 $x_i$ \u76f4\u63a5\u6216\u95f4\u63a5\u5730\u8574\u542b $\\neg x_i$\uff09\n\n\u5426\u5219\uff0c$x_i,~\\neg x_i$ \u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7f16\u53f7\u4e00\u5b9a\u5b58\u5728\u4e25\u683c\u7684\u504f\u5e8f\u5173\u7cfb\uff08\u901a\u4fd7\u5730\u8bf4\u5c31\u662f\u4e00\u5b9a\u662f\u4e00\u5927\u4e00\u5c0f\uff09\uff0c\u6211\u4eec\u53d6\u7f16\u53f7\u5c0f\u7684\u90a3\u4e2a\u72b6\u6001\u4f5c\u4e3a\u547d\u9898 $p_i$ \u7684\u53d6\u503c\u5373\u53ef\u3002\n\n\u4e0b\u9762\u7b80\u5355\u8bf4\u660e\u8fd9\u6837\u53d6\u5373\u53ef\u4fdd\u8bc1\u6b63\u786e\uff1a\n\n\u5047\u5982 $\\neg a \\rightarrow b$\uff0c\u7531**\u9006\u5426\u547d\u9898**\u6027\u8d28\uff0c\u4e00\u5b9a\u6709 $\\neg b \\rightarrow a$ \uff0c\u5982\u679c\u8bf4 $\\neg a$ \u548c $b$ \u5728\u540c\u4e00\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u90a3\u4e48 $\\neg b$ \u548c $a$ \u4e00\u5b9a\u5728\u53e6\u4e00\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u4e0d\u59a8\u8bbe $a$ \u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7f16\u53f7\u8f83\u5c0f\uff0c\u6211\u4eec\u9009\u53d6\u4e86 $a$ \u3002\u7531\u5f3a\u8fde\u901a\u5206\u91cf\u6027\u8d28\uff0c$a$ \u4e0e $\\neg b$ \u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe\uff0c\u6240\u4ee5 $\\neg b$ \u4e00\u5b9a\u8981\u88ab\u9009\u53d6\uff0c\u800c\u4e8b\u5b9e\u4e0a\u7531\u6784\u9020\u65b9\u5f0f\u77e5 $\\neg b$ \u4e00\u5b9a\u662f\u88ab\u9009\u53d6\u7684\uff0c\u56e0\u6b64\u8fd9\u6837\u505a\u80fd\u591f\u4fdd\u8bc1\u6b63\u786e\u6027\u3002\n\n\u5177\u4f53\u7ec6\u8282\u53c2\u89c1\u4ee3\u7801\u3002\n\n\u5728\u5b9e\u73b0\u4e2d\uff0c\u6211\u4eec\u91c7\u53d6 tarjan \u7b97\u6cd5\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n[\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/P4782)\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ninline void read(int &x) {\n    int s=0;x=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9') {if(ch=='-')x=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') s=(s<<3)+(s<<1)+ch-'0',ch=getchar();\n    x*=s;\n}\n\nconst int N=2e6+5, M=2e6+5;\nint n, m;\n\nstruct node{\n\tint to, next;\t\n}e[M];\n\nint h[N], tot;\n\nvoid add(int u, int v){\n\te[tot].to=v, e[tot].next=h[u], h[u]=tot++;\n}\n\nint ts, dfn[N], low[N];\nint stk[N], top;\nint id[N], cnt;\nbool ins[N];\n\nvoid tarjan(int u){\n\tdfn[u]=low[u]=++ts;\n\tstk[++top]=u, ins[u]=true;\n\tfor(int i=h[u]; ~i; i=e[i].next){\n\t\tint go=e[i].to;\n\t\tif(!dfn[go]){\n\t\t\ttarjan(go);\n\t\t\tlow[u]=min(low[u], low[go]);\n\t\t}else if(ins[go]) low[u]=min(low[u], dfn[go]);\n\t}\n\t\n\tif(dfn[u]==low[u]){\n\t\tint y;\n\t\tcnt++;\n\t\tdo{\n\t\t\ty=stk[top--], ins[y]=false, id[y]=cnt; \n\t\t}while(y!=u);\n\t}\n}\n\nint res[N];\n\nint main(){\n\tmemset(h, -1, sizeof h);\n\tread(n), read(m);\n\t\n\twhile(m--){\n\t\tint i, a, j, b; read(i), read(a), read(j), read(b);\n\t\ti--, j--;\n\t\tadd(2*i+!a, 2*j+b), add(2*j+!b, 2*i+a);\n\t}\n\t\n\tfor(int i=0; i<2*n; i++) if(!dfn[i]) tarjan(i);\n\t\n\tfor(int i=0; i<n; i++) if(id[2*i]==id[2*i+1]){\n\t\tputs(\"IMPOSSIBLE\");\n\t\treturn 0;\n\t}else res[i]= id[2*i]>id[2*i+1];\n\t\n\tputs(\"POSSIBLE\");\n\tfor(int i=0; i<n; i++) printf(\"%d \", res[i]);\n\tcout<<endl;\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1621329739,
        "uid": 138960,
        "name": "Tenshi",
        "ccfLevel": 0,
        "title": "2-SAT \u95ee\u9898"
    },
    {
        "content": "\u6765\u4e00\u6ce2\u975e $Tarjan$ \u7684\u9898\u89e3\u3002\n\n\u57fa\u672c\u5efa\u56fe\u53ef\u4ee5\u53bb\u6309\u7167\u5176\u4ed6\u9898\u89e3\u53bb\u505a\uff0c\u8fd9\u91cc\u4e0d\u518d\u9610\u8ff0\u3002\n\n\u8003\u8651\u4f7f\u7528~~\u51b0\u8336\u51e0~~\u5e76\u67e5\u96c6\u53bb\u505a\u7f29\u70b9\u3002\n\n\u5f53\u641c\u5230\u4e00\u4e2a\u672a\u641c\u5230\u7684\u70b9\u65f6\u7ee7\u7eed\u5f80\u4e0b\u641c\uff0c\u5f53\u91cd\u590d\u8d70\u5230\u5230\u4e00\u70b9\uff0c\u65f6\uff0c\u6211\u4eec\u5c31\u5c06\u6211\u4eec\u6240\u5728\u7684\u8282\u70b9\u5e76\u5165\u76ee\u6807\u8282\u70b9\u4e2d\uff0c\u8d70\u5b8c\u540e\u5c06\u70b9\u6df1\u5ea6\u6807\u8bb0\u4e3a\u8d1f\u3002\u6700\u540e\u5b58\u5728\u4e8e\u540c\u4e00\u5e76\u67e5\u96c6\u4e2d\u7684\u70b9\u5f62\u6210\u4e00\u4e2a\u73af\u3002\n\n\u7f29\u70b9\u7a0b\u5e8f\u5982\u4e0b\uff1a\n\n```cpp\nvoid dfs(int pos){\n    for(int i=h[pos]; i; i=edge[i].nxt){\n        int to=edge[i].to;\n        if(!dep[to]){\n            dep[to]=dep[pos]+1;\n            dfs(to);\n        }\n        if(dep[find(to)]>0){\n            if(dep[find(pos)]<dep[f[to]]) \n                f[f[to]]=f[pos];\n            else f[f[pos]]=f[to];\n        }\n    }\n    dep[pos]=-1, top_mark[pos]=++cnt;//\u8bb0\u62d3\u6251\u5e8f\n}\n```\n\n\u8fd9\u65f6\u4f60\u5c31\u4f1a\u6709\u7591\u95ee\uff1a\u8fd9\u6837\u4e0d\u4f1a\u51fa\u9519\u5417\uff1f\n\n\u89e3\u7b54\uff1a\u56e0\u4e3a\u6211\u4eec\u6bcf\u4e00\u6b21\u90fd\u662f\u5c06\u6df1\u5ea6\u5927\u7684\u70b9\u5e76\u5165\u6df1\u5ea6\u5c0f\u7684\u70b9\u4e2d\uff0c\u8fd9\u6837\u5c31\u4f1a\u4f7f\u5f97\u5373\u4f7f\u5728\u6df1\u5ea6\u5927\u7684\u70b9\u9000\u6808\u540e\uff0c\u73af\u4e0a\u7684\u8282\u70b9\u4ecd\u80fd\u627e\u5230\u5176\u7684\u7956\u5148\u8282\u70b9\uff08\u5373\u73af\u4e2d\u6700\u5148\u88ab\u904d\u5386\u7684\u8282\u70b9\uff09\uff0c\u5de7\u5999\u7684\u8f6c\u5316\u4e86\u7f29\u70b9\u7684\u6280\u5de7\u3002\n\n\u5224\u65ad\u65e0\u89e3\u65f6\uff0c\u76f4\u63a5\u53bb\u627e\u662f\u5426\u6709\u540c\u4e00\u70b9\u51fa\u4e8e\u4e00\u4e2a\u73af\u4e0a\u5373\u53ef\u3002\n\n\u8f93\u51fa\u4e00\u7ec4\u89e3\u65f6\uff0c\u4f18\u5148\u9009\u62e9\u62d3\u6251\u5e8f\u8f83\u5927\u7684\u5373\u53ef\u3002\n\n### Code\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <string.h>\n#define N 2000005\nusing namespace std;\ninline int read(){\n\tchar ch;int x=0, f=1;ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint h[N], tot;\nstruct Edge{\n\tint to, nxt;\n}edge[N*5];\nvoid add(int x, int y){\n//\tprintf(\"%d %d\\n\", x, y);\n\tedge[++tot].to=y, edge[tot].nxt=h[x];\n\th[x]=tot;\n}\nint n, m;\nint f[N], dep[N], top_mark[N], cnt;\nint find(int x){return f[x]=x==f[x]?f[x]:find(f[x]);}\nvoid dfs(int pos){\n    for(int i=h[pos]; i; i=edge[i].nxt){\n        int to=edge[i].to;\n        if(!dep[to]){\n            dep[to]=dep[pos]+1;\n            dfs(to);\n        }\n        if(dep[find(to)]>0){\n            if(dep[find(pos)]<dep[f[to]]) \n                f[f[to]]=f[pos];\n            else f[f[pos]]=f[to];\n        }\n    }\n    dep[pos]=-1, top_mark[pos]=++cnt;\n}\nint main(){\n\tn=read(), m=read();\n\tfor(int i=1; i<=2*n; i++) f[i]=i;\n\tfor(int k=1; k<=m; k++){\n\t\tint i=read(), a=read(), j=read(), b=read();\n\t\tadd(i+n*(a&1), j+n*(b^1));add(j+n*(b&1), i+n*(a^1));\n\t}\n\tfor(int i=1; i<=2*n; i++) if(!dep[i]) dfs(i);\n    for(int i=1; i<=n; i++)\n        if(find(i)==find(i+n)) return printf(\"IMPOSSIBLE\")*0;\n    printf(\"POSSIBLE\\n\");\n    for(int i=1; i<=n; i++){\n        int i_=i+n;\n        if(top_mark[find(i)]<top_mark[find(i_)])\n            printf(\"%d \", 1);\n        else printf(\"%d \", 0);\n    }\n\treturn 0;\n}\n```\n",
        "postTime": 1617695059,
        "uid": 341102,
        "name": "ReKoJ",
        "ccfLevel": 0,
        "title": "P4782 \u3010\u6a21\u677f\u30112-SAT \u95ee\u9898"
    },
    {
        "content": "### \u524d\u8a00\uff08feihua\uff09\nSAT\u662f\u9002\u5b9a\u6027(Satisfiability)\u95ee\u9898\u7684\u7b80\u79f0 \u3002\u4e00\u822c\u5f62\u5f0f\u4e3ak-\u9002\u5b9a\u6027\u95ee\u9898\uff0c\u7b80\u79f0 k-SAT\n\n\u53ef\u4ee5\u8bc1\u660e\uff0c\u5f53k>2\u65f6\uff0ck-SAT\u662fNP\u5b8c\u5168\u7684\u3002\u56e0\u6b64\u4e00\u822c\u8ba8\u8bba\u7684\u662fk==2\u7684\u60c5\u51b5\uff0c\u53732-SAT\u95ee\u9898\u3002\n\n\n------------\n\n2-SAT\u7528\u5904 \uff1a\u6709\u82e5\u5e72\u4e2a\u5305\u542b2\u4e2a\u5143\u7d20\u7684\u96c6\u5408\uff0c\u53ea\u80fd\u9009\u62e9\u6bcf\u4e2a\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u7ed9\u51fa\u4e00\u4e9b\u6761\u4ef6\uff08\u4f8b\uff1a\u9009a\u540e\u4e0d\u80fd\u9009b\uff09\uff0c\u8981\u6c42\u6c42\u51fa\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\u7684\u9009\u62e9\uff0c\u8fd9\u4e2a\u89e3\u4e5f\u79f0\u4e3a2-SAT\u7684\u89e3\n\n####  \u5982\u4f55\u6c42\u89e3\uff1f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/yvpf7xam.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\u5982\u4e0a\u56fe\uff0c\u4e3a{A,A'},{B,B'},{C,C'}\u8fd9\u51e0\u4e2a\u96c6\u5408\n\n\u82e5\u7ed9\u51fa\u6761\u4ef6\uff0c{A,B'},{B\u2018C\u2019}\u4e0d\u80fd\u540c\u65f6\u9009\u62e9\n\n\u56e0\u4e3a{A,A'},{B,B'},{C,C'}\u4e2d\uff0c\u6bcf\u4e2a\u96c6\u5408\u90fd\u8981\u9009\u51fa\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\u4e0d\u80fd\u540c\u65f6\u9009\u62e9\n\n\u53c8\u56e0\u4e3a{A,B'}\u4e0d\u80fd\u540c\u65f6\u9009\u62e9\uff0c\u5219\u9009\u62e9B\u2018\u65f6\uff0c\u4e00\u5b9a\u9009\u62e9A\u2019\uff0c\u4e8e\u662f\u5728B\u2018\uff0cA\u2019\u4e4b\u95f4\u8fde\u4e0a\u4e00\u6761\u6709\u5411\u8fb9\uff08\u56e0\u4e3a\u9009A\u2018\u4e0d\u4e00\u5b9aB\u2019\uff09\uff1b\u540c\u7406\uff0c\u5728\u9009B\u65f6\u4e5f\u4e00\u5b9a\u9009A\n\n\u5176\u5b83\u4e5f\u540c\u4e0a\u5904\u7406\uff0c\u4e8e\u662f\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/or7mztck.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\u63a5\u7740\u518d\u8fdb\u884c\u7f29\u70b9\uff0c\u7136\u800c\u8fd9\u4e2a\u6817\u5b50\u4e2d\u6ca1\u6709\u53ef\u7f29\u7684\u70b9\uff0c\u5224\u65ad\u5bf9\u79f0\u7684\u4e24\u70b9\u662f\u5426\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u82e5\u5728\uff0c\u5219\u65e0\u89e3\n\n\u82e5\u4e0d\u5728\uff0c\u6211\u4eec\u63a5\u7740\u5e94\u8be5\u6c42\u51fa\u7b26\u5408\u8981\u6c42\u7684\u89e3\uff0c\u5982\u4f55\u6c42\u5462\n\n1.\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff08\u4e0d\u7528\u4e86\uff09\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u7f29\u70b9\u540e\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u7f16\u53f7\u5c31\u662f\u53cd\u7740\u7684\u62d3\u6251\u6392\u5e8f\n\n\u4e3a\u4ec0\u4e48\u8981\u62d3\u6251\u6392\u5e8f\u5462\uff1f\u6bd4\u5982\u4e00\u4e2a\u6837\u4f8b\uff0c\u5b83\u8ba9A->B->A'\uff0c\u663e\u7136\u6211\u4eec\u4e0d\u80fd\u9009A\uff0c\u53ea\u80fd\u9009A\u2019\uff08\u62d3\u6251\u6392\u5e8f\u5927\u7684\uff09\uff0c\u5373\u9009\u5f3a\u8fde\u901a\u5206\u91cf\u7f16\u53f7\u5c0f\u7684\n\n2.\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u96c6\u5408\uff0c\u9009\u51fa\u5f3a\u8fde\u901a\u5206\u91cf\u5c0f\u7684\n\n\u4e0aAC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint head[2000006],zhan[2000006],color[2000006],dfn[2000006],low[2000005];\nint num,Color,dfx,top;\nbool pd[2000005];\nstruct{\n    int to,next;\n}a[2000006];\nvoid lian(int from,int to){\n    num++;\n    a[num].to=to;\n    a[num].next=head[from];\n    head[from]=num;\n}\nvoid tarjan(int x){\n    int i;\n    dfn[x]=low[x]=++dfx;zhan[++top]=x;\n    pd[x]=1;\n    for(i=head[x];i;i=a[i].next){\n        if(pd[a[i].to]==0){\n            tarjan(a[i].to);\n            low[x]=min(low[x],low[a[i].to]);\n        }\n        if(color[a[i].to]==0)low[x]=min(low[x],dfn[a[i].to]);\n    }\n    if(low[x]==dfn[x]){\n        Color++;\n        do{\n            i=zhan[top];top--;\n            color[i]=Color;\n        }while(low[i]!=dfn[i]);\n    }\n}\nint main(){\n    int n,m,i,j,a,_a,b,_b;\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=m;i++){\n        scanf(\"%d%d%d%d\",&a,&_a,&b,&_b);\n        if(_a==0&&_b==0)lian(a+n,b),lian(b+n,a);\n        else if(_a==1&&_b==0)lian(a,b),lian(b+n,a+n);\n        else if(_a==0&&_b==1)lian(a+n,b+n),lian(b,a);\n        else lian(a,b+n),lian(b,a+n);\n    }\n    for(i=1;i<=2*n;i++){\n        if(color[i]==0)tarjan(i);\n    }\n    for(i=1;i<=n;i++){\n        if(color[i]==color[i+n]){\n            printf(\"IMPOSSIBLE\\n\");\n            return 0;\n        }\n    }\n    printf(\"POSSIBLE\\n\");\n    for(i=1;i<=n;i++){\n        if(color[i]<color[i+n])printf(\"0 \");\n        else printf(\"1 \");\n    }\n    return 0;\n}\n```\n",
        "postTime": 1604716338,
        "uid": 88727,
        "name": "caojia",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4782 \u3010\u3010\u6a21\u677f\u30112-SAT \u95ee\u9898\u3011"
    },
    {
        "content": "## \u5f15\u5165\uff1a\n\n\u76f8\u4fe1\u5927\u5bb6\u90fd\u4e86\u89e3\u8fc7\u5dee\u5206\u7ea6\u675f\u7cfb\u7edf\u3002\u5dee\u5206\u7ea6\u675f\u7cfb\u7edf\u7684\u5927\u4f53\u610f\u601d\u5c31\u662f\u7ed9\u51fa\u4e00\u4e9b\u6709\u67d0\u79cd\u5173\u7cfb\u7684\u53d8\u91cf\uff0c\u95ee\u4f60\u662f\u5426\u6709\u67d0\u79cd\u8d4b\u503c\u4f7f\u5f97\u8fd9\u4e9b\u5173\u7cfb\u5168\u90e8\u6210\u7acb\n\n\u5176\u5b9e$2-SAT$\u7684\u9898\u76ee\u63cf\u8ff0\u548c\u8fd9\u4e2a\u5f88\u50cf\uff08~~\u867d\u7136\u89e3\u6cd5\u4e0d\u4e00\u6837~~\uff09\n\n\u90a3\u4e48$2-SAT$\u5230\u5e95\u662f\u4ec0\u4e48\u5462\uff1f\n\n\u901a\u4fd7\u4e00\u70b9\u6765\u8bf4\uff0c\u5c31\u662f\u6709$n$\u4e2abool\u53d8\u91cf$x_1$~$x_n$\u6709$m$\u4e2a\u4f4d\u8fd0\u7b97\u7684\u8868\u8fbe\u5f0f\uff08\u53ea\u6709\u4e24\u4e2a\u53d8\u91cf\uff09\uff0c\u6c42\u662f\u5426\u6709\u4e00\u79cd\u65b9\u6cd5\u4f7f\u5f97$m$\u4e2a\u8868\u8fbe\u5f0f\u90fd\u6210\u7acb\n$$\\ $$\n## \u4f8b\u9898\n\n[\u6d1b\u8c37P4782](https://www.luogu.org/problem/P4782)\n\n### \u9898\u76ee\u80cc\u666f\n\n2-SAT \u95ee\u9898 \u6a21\u677f\n\n### \u9898\u76ee\u63cf\u8ff0\n\n\u6709$n$\u4e2a\u5e03\u5c14\u53d8\u91cf$x_1$~$x_n$\uff0c\u53e6\u6709$m$\u4e2a\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\uff0c\u6bcf\u4e2a\u6761\u4ef6\u7684\u5f62\u5f0f\u90fd\u662f\"$x_i$\u4e3atrue/false\"\u6216\"$x_j$\u4e3atrue/false\"\u3002\u6bd4\u5982\"$x_1$\u4e3a\u771f\u6216$x_3$\u4e3a\u5047\"\u3001\"$x_7$\u4e3a\u5047\u6216$x_2$\u4e3a\u5047\"\u30022-SAT \u95ee\u9898\u7684\u76ee\u6807\u662f\u7ed9\u6bcf\u4e2a\u53d8\u91cf\u8d4b\u503c\u4f7f\u5f97\u6240\u6709\u6761\u4ef6\u5f97\u5230\u6ee1\u8db3\u3002\n\n### \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570n\u548cm\uff0c\u610f\u4e49\u5982\u4f53\u9762\u6240\u8ff0\u3002\n\n\u63a5\u4e0b\u6765m\u884c\u6bcf\u884c4\u4e2a\u6574\u6570$ i ,a, j, b $\uff0c\u8868\u793a\"$x_i$\u4e3aa\u6216$x_j$\u4e3ab\"($a,b\\in \\{0,1\\}$\u200b)\n\n### \u8f93\u51fa\u683c\u5f0f\n\n\u5982\u65e0\u89e3\uff0c\u8f93\u51fa\"IMPOSSIBLE\"\uff08\u4e0d\u5e26\u5f15\u53f7\uff09; \u5426\u5219\u8f93\u51fa\"POSSIBLE\"\uff08\u4e0d\u5e26\u5f15\u53f7),\u4e0b\u4e00\u884c$n$\u4e2a\u6574\u6570\uff08$x_1$~$x_n$$\\in \\{0,1\\}$\uff09\uff0c\u8868\u793a\u6784\u9020\u51fa\u7684\u89e3\u3002\n$$\\ $$\n## \u5982\u4f55\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\uff1f\n\n\u9996\u5148\uff0c\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u53d8\u91cf\u53d6\u503c\u7684\u771f\u548c\u5047\u662f\u76f8\u5bf9\u72ec\u7acb\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u548c\u4ed6\u81ea\u5df1\u6ca1\u6709\u5173\u7cfb\uff0c\u53ea\u548c\u5176\u4ed6\u53d8\u91cf\u7684\u771f\u5047\u6709\u5173\u7cfb\n\n\u90a3\u6211\u4eec\u4e0d\u59a8\u4e3a\u6bcf\u4e00\u4e2a\u53d8\u91cf\u5efa\u4e24\u4e2a\u8282\u70b9\uff0c\u4e00\u4e2a\u8868\u793a\u771f\uff0c\u4e00\u4e2a\u8868\u793a\u5047\uff08\u6211\u8fd9\u91cc\u75281~n\u8868\u793a\u5047\uff0cn+1~2n\u8868\u793a\u771f\uff09\n\n\u6709\u4e86\u70b9\uff0c\u8003\u8651\u600e\u4e48\u8fde\u8fb9\u3002\u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u7684\u771f\u5047\u80fd\u591f\u63a8\u51fa\u53e6\u4e00\u4e2a\u53d8\u91cf\u7684\u771f\u5047\uff0c\u5c31\u5bf9\u8fd9\u4e24\u4e2a\u53d8\u91cf\u5bf9\u5e94\u7684\u771f\u5047\u8fde\u8fb9\n\n\u6bd4\u5982\uff1a$x_1$\u4e3a\u771f\u6216$x_2$\u4e3a\u5047\uff0c\u90a3\u4e48$x_1$\u7684\u5047\u5c31\u53ef\u4ee5\u63a8\u51fa$x_2$\u7684\u771f\uff0c$x_2$\u7684\u771f\u5c31\u53ef\u4ee5\u63a8\u51fa$x_1$\u7684\u5047\n\n\u90a3\u4e48\u5c31\u628a$x_1$\u5bf9\u5e94\u7684\u5047\u8282\u70b9\u8fde\u5411$x_2$\u5bf9\u5e94\u7684\u771f\u8282\u70b9\uff0c\u628a$x_2$\u5bf9\u5e94\u7684\u771f\u8282\u70b9\u8fde\u5411$x_1$\u5bf9\u5e94\u7684\u5047\u8282\u70b9\n\n\u5982\u4f55\u5224\u65ad\u6709\u6ca1\u6709\u89e3\uff1f\n\n\u8003\u8651\u65e0\u89e3\u7684\u60c5\u51b5\uff0c\u80af\u5b9a\u662f\u51fa\u73b0\u4e86\u77db\u76fe\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u70b9\u7684\u771f\u63a8\u51fa\u4e86\u5b83\u81ea\u5df1\u7684\u5047\uff0c\u6216\u8005\u662f\u8fd9\u4e2a\u70b9\u7684\u5047\u63a8\u51fa\u4e86\u5b83\u81ea\u5df1\u7684\u771f\u3002\u8fd9\u79cd\u60c5\u51b5\u6709\u4ec0\u4e48\u7279\u5f81\uff1f\n\n\u53d1\u73b0\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u8fd9\u4e2a\u70b9\u7684\u771f\u548c\u5047\u4e00\u5b9a\u5728\u76f8\u540c\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u9762\n\n\u5f3a\u8054\u901a\u5206\u91cf\uff1f\u90a3\u4e0d\u5c31\u662ftarjan\u5417\uff1f\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(n+m)\n\n\u90a3\u4e48\u600e\u4e48\u627e\u51fa\u6ee1\u8db3\u9898\u610f\u7684\u89e3\uff1f\n\n**\u5f53$x$\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u62d3\u6251\u5e8f\u5728$\\neg x$\u4e4b\u540e\u65f6\uff0c\u76f4\u63a5\u53d6$x$\u4e3a\u771f\u5c31\u884c\u4e86**\u3002tarjan\u7b97\u6cd5\u5728\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\u5df2\u7ecf\u4e3a\u6bcf\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u6807\u597d\u4e86\u62d3\u6251\u5e8f\uff08**\u4e0d\u8fc7\u662f\u548c\u6b63\u5e38\u7684\u62d3\u6251\u5e8f\u76f8\u53cd**\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2000050;\n\nint head[N],ecnt;//1~n\u5b580,n+1~2n\u5b581 \nstruct edge\n{\n\tint to,nxt;\n}edg[N<<1];\n\ninline void add(int u,int v)\n{\n\tedg[++ecnt].to=v;\n\tedg[ecnt].nxt=head[u];\n\thead[u]=ecnt;\n}\n\nint n,m;\n\ninline void read()\n{\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,a,y,b;\n\t\tscanf(\"%d%d%d%d\",&x,&a,&y,&b);//\u5efa\u8fb9 \n\t\tif(a==1&&b==1) add(x,y+n),add(y,x+n);\n\t\tif(a==0&&b==1) add(x+n,y+n),add(y,x);\n\t\tif(a==1&&b==0) add(x,y),add(y+n,x+n);\n\t\tif(a==0&&b==0) add(x+n,y),add(y+n,x);\n\t}\n}\n//tarjan\nint dfn[N],low[N],in[N],s[N],scc[N],top,ind,cnt;\n\nvoid tarjan(int x)\n{\n\tlow[x]=dfn[x]=++ind;\n\ts[top++]=x;\n\tin[x]=1;\n\tfor(int i=head[x];i;i=edg[i].nxt)\n\t{\n\t\tint v=edg[i].to;\n\t\tif(!dfn[v])\n\t\t{\n\t\t\ttarjan(v);\n\t\t\tlow[x]=min(low[x],low[v]);\n\t\t}\n\t\telse if(in[v]) low[x]=min(low[x],dfn[v]);\n\t}\n\tif(dfn[x]==low[x])\n\t{\n\t\tcnt++;\n\t\twhile(s[top]!=x)\n\t\t{\n\t\t\ttop--;\n\t\t\tin[s[top]]=0;\n\t\t\tscc[s[top]]=cnt;\n\t\t}\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tread();\n\tfor(int i=1;i<=2*n;i++)\n\t{\n\t\tif(!dfn[i]) tarjan(i);\n\t}\n\tfor(int i=1;i<=n;i++) if(scc[i]==scc[i+n]) return cout<<\"IMPOSSIBLE\",0;\n\tputs(\"POSSIBLE\");\n\tfor(int i=1;i<=n;i++) printf(\"%d \",scc[i]>scc[i+n]);\n}\n```",
        "postTime": 1571831214,
        "uid": 177510,
        "name": "\u5c0f\u849f\u84bb\u76ae\u76ae\u9c7c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4782 \u3010\u3010\u6a21\u677f\u30112-SAT \u95ee\u9898\u3011"
    },
    {
        "content": "# \u6d45\u8c082-SAT\n\n## \u524d\u8a00\n\n> \u6700\u8fd1\u4e5f\u662f\u521a\u5237\u5230\uff0c\u5b66\u4e86\u4e24\u4e2a\u5c0f\u65f6\uff0c\u5206\u4eab\u4e00\u4e0b\u6211\u5bf9\u5b83\u7684\u7406\u89e3\n\n## \u6982\u5ff5\n\n**2-SAT** \u62c6\u5f00\u53ef\u4ee5\u4ece\u5b57\u9762\u4e0a\u5927\u4f53\u4e86\u89e3\uff0c\u5373\uff1a\u6ee1\u8db3\u6761\u4ef6\u6570\u91cf\u4e3a2\u7684\u60c5\u51b5\u4e0b\u5f97\u5230\u7684\u53ef\u884c\u6027\u6700\u4f18\u89e3\u3002\n\n\u5b83\u7684\u5bf9\u8c61\u4e00\u822c\u90fd\u662f\u6211\u4eec\u9ad8\u4e2d\u5b66\u7684\u9006\u5426\u547d\u9898\uff0c\u4f8b\u5982\uff1a\n\n- \u82e5 $P$ \u5219 $Q$ , \u548c \u82e5\u975e $P$ \u5219\u975e $Q$\n\n  \u4e0a\u8ff0\u53c8\u79f0\u505a**\u9006\u5426\u547d\u9898**\uff0c\u5f85\u4f1a\u8bb2\u89e3\u662f\u4f1a\u7528\u5230\n\n- \u771f\u5207\u7684\u4f8b\u5b50\uff1a\u6709\u4f60\u6ca1\u6211\uff0c\u6709\u6211\u6ca1\u4f60\uff01\n\n\u5728 2-SAT \u95ee\u9898\u4e2d\uff0c\u6211\u4eec\u603b\u80fd\u628a $M$ \u7edf\u4e00\u8f6c\u5316\u4e3a \u201c\u82e5\u53d8\u91cf $A_i$ \u8d4b\u503c\u4e3a $A_i,p$ \uff0c\u5219\u53d8\u91cf $A_j$ \u5c31\u5fc5\u987b\u8d4b\u503c\u4e3a $A_j,q$\uff0c \u5176\u4e2d $p,q$ \u5747\u4e3a\u6211\u4eec\u5e38\u7528\u7684$true,false$ \u201d\n\n## \u5efa\u8fb9\n\n\u56de\u60f3\u4e00\u4e0b\u9ad8\u4e2d\u6982\u7387\u7edf\u8ba1\u90a3\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u5b66\u8fc7\u6982\u7387\u7684\u8ba1\u7b97\uff0c\u90a3\u4e48\u5b83\u8868\u793a\u4ec0\u4e48\n$$\n\\mathfrak{A}\\ P(a+b)=a\\lor b\n\n$$\n$$\n \\mathfrak{B}\\ b.\\ P(ab)=a\\land b\n$$\n\n- $\\mathfrak{A}$ \u8868\u793a $a,b$ \u4e24\u4e2a\u4e8b\u4ef6\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u53d1\u751f\n- $\\mathfrak{B}$ \u8868\u793a $a,b$ \u4e24\u4e2a\u4e8b\u4ef6\u540c\u65f6\u53d1\u751f\n\n\u6709\u4e86\u6570\u5b66\u7684\u7406\u89e3\uff0c\u6211\u4eec\u7684\u5efa\u8fb9\u4f1a\u6709\u65b0\u7684\u53f0\u9636\n\n- \u5efa\u7acb $2N$ \u4e2a\u8282\u70b9\u7684\u6709\u5411\u56fe\uff0c\u6bcf\u4e2a\u53d8\u91cf $A_i$ \u5bf9\u5e94\u7740\u4e24\u4e2a\u8282\u70b9\uff0c\u5206\u522b\u4e3a $i$ \u548c $i + N$\n  - \u90fd\u662f\u4e24\u4e2a\u70b9\u7684\u539f\u56e0\u662f\u4e00\u4e2a\u4e8b\u4ef6\u5b58\u5728\u6b63\u53cd\u4e24\u9762\uff0c\u5373\u4e0a\u8ff0\u6211\u4eec\u6240\u8bf4\u7684**\u9006\u5426\u547d\u9898**\uff0c\u4ed6\u7684\u6b63\u9762\u6210\u7acb\uff0c\u81ea\u7136\u53cd\u9762\u4e5f\u5fc5\u7136\u6210\u7acb\uff0c\u82e5\u4e0d\u80fd\u7406\u89e3\uff0c\u8bf7\u81ea\u884c\u767e\u5ea6\u4e86\u89e3**\u9006\u5426\u547d\u9898**\uff0c\uff08\u6b64\u5904\u7684\u6b63\u9762\u4e0e\u53cd\u9762\u975e\u5e7f\u4e49\uff09\n- \u5f53\u8003\u8651\u6761\u4ef6\u65f6\uff0c\u8ba9\u4e00\u5bf9**\u6709\u5173\u8054**\u7684\u4e24\u4e2a\u70b9\u5efa\u7acb\u6709\u5411\u8fb9\n  - \u4ec0\u4e48\u53eb**\u6709\u5173\u8054**\u5462\uff0c\u5f88\u7b80\u5355\uff0c\u5982\u679c $A$ \u6210\u7acb\uff0c\u90a3\u4e48\u5bf9\u5e94 $B$ \u7684\u4e5f\u4e00\u5b9a\u6210\u7acb\uff0c\u6211\u4eec\u79f0\u6b64\u53eb\u5173\u8054\u3002\u6700\u771f\u5207\u7684\u4f8b\u5b50\u5c31\u662f\uff0c\u201d\u4eca\u5929\u4f60\u8981\u767b\u6d1b\u8c37\u201c\uff0c\u90a3\u4e48 \u201c\u6253\u5361\u201d \u8fd9\u4e00\u4e8b\u4ef6 $B$ \u662f\u4f60\u63a5\u4e0b\u6765\u4e00\u5b9a\u8981\u505a\u7684\uff0c\u7c7b\u4f3c\u7684\uff0c\u90fd\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff0c\u5b58\u5728\u5fc5\u7136\u6027\n\n- \u90a3\u4e48**\u6709\u5411\u8fb9**\u7684**\u6307\u5411**\u5462\uff1f \u5b58\u5728\u5173\u8054\u7684\u95ee\u9898\u5b9a\u6709\u524d\u540e\u987a\u5e8f\uff0c\u5373\u53ea\u6709\u5148\u53d1\u751f $A$, \u624d\u56de\u5148\u53d1\u751f $B$,\u5c31\u5982 \u5148\u6709\u60a8\u7236\u4eb2\uff0c\u518d\u6709\u60a8\u4e00\u6837\uff0c\u90a3\u4e48\u5177\u4f53\u70b9\u5c31\u662f\u7531\"\u7236\u4eb2\"\u5411\u201c\u513f\u5b50\u201d\u5efa\u8fb9\uff0c\u5982\u679c\u5012\u8fc7\u6765\uff0c\u5374\u6ca1\u6709\u903b\u8f91\n\n- \u8bf4\u4e00\u4e0b\u5217\u51fa\u6570\u5b66\u6982\u5ff5\u7684\u610f\u4e49\uff0c\u5728\u9898\u4e2d\uff0c\u9650\u5236\u6761\u4ef6\u662f\u4e00\u4e2a\u5e7f\u6cdb\u7684\u5c42\u9762\uff0c\u800c\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\u6709\u591a\u79cd\u60c5\u51b5\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5229\u7528**\u6982\u7387\u601d\u60f3**\u5168\u9762\u7684\u5efa\u8fb9\u3002\n\n## \u5b9e\u73b0\n\n`Tarjan` \u7b97\u6cd5\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5bfb\u627e\u8bf7\u8fde\u901a\u5206\u91cf\uff0c\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u5b58\u5728\u6211\u4eec\u9700\u8981\u7684\u53ef\u884c\u89e3\u3002\n\n**\u65e0\u89e3:** \u5982\u679c\u4e00\u4e2a\u4e8b\u4ef6\u7684\u6b63\u53cd\u9762\u90fd\u5728\u540c\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u91cc\u7684\uff0c\u5373\u4f60\u5403\u4e86\u82f9\u679c\uff0c\u53ef\u4f60\u53c8\u6ca1\u5403\u82f9\u679c\uff0c\u8fd9\u5f88\u51a4\uff0c\u6240\u4ee5\u8fd9\u662f\u77db\u76fe\u7684\uff0c\u81ea\u7136\u4e0d\u5b58\u5728\u53ef\u884c\u89e3.\n\n## \u65f6\u95f4\u590d\u6742\u5ea6\n\n\u4fdd\u8bc1\u6240\u6709\u7684 $2N$ \u70b9\u90fd\u8981\u88ab `tarjan` \u6240\u4ee5\u4e3a\uff1a\n$$\nO(N+M)\n$$\n\n## \u53ef\u884c\u89e3\u9009\u62e9\u7b56\u7565\n\n\u6211\u6bd4\u8f83\u559c\u6b22\u7528\u62d3\u6251\u5e8f\uff0c\u5373\u6211\u4eec\u5728`tarjan`\u65f6\u7528\u6765\u6807\u8bb0\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6570\u7ec4\n\n\u56e0\u4e3a `tarjan` \u7684\u672c\u8d28\u5c31\u662f\u6df1\u641c\uff0c\u6240\u4ee5\u62d3\u6251\u5e8f\u6309\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u7684\u8bdd\uff0c\u62d3\u6251\u5e8f\u662f\u7531\u5927\u5230\u5c0f\u7684\uff0c\u5373\u641c\u7d22\u6811\u8d8a\u6df1\u7684\u70b9\uff0c\u62d3\u6251\u5e8f\u8d8a\u5c0f\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83**\u62d3\u6251\u5e8f**\u5f97\u5230\u53ef\u884c\u89e3\uff0c\u4e0d\u540c\u7684\u9898\u5bf9\u4e8e\u5927\u5c0f\u7684\u4e0d\u4e00\u6837\uff0c\n\n\u6211\u8ba4\u4e3a\uff0c\u6ce8\u610f\u662f\u6211\u8ba4\u4e3a\uff0c\u5982\u679c\u5426\u547d\u9898\u53ef\u4ee5\u8fde\u5411\u771f\u547d\u9898\uff0c\u90a3\u4e48\u62d3\u6251\u5e8f\u5927\u7684\u8bb0\u5f55\u7b54\u6848\uff0c\u53cd\u4e4b\u8bb0\u5f55\u5c0f\u7684\u3002\u8bb2\u89e3\u5b8c\u6bd5\uff01\n\n## Code\n\n```c\n#include <cmath>\n#include <queue>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define ll long long\nusing namespace std;\n\nconst int A = 1e5 + 11;\nconst int B = 5 *1e6 + 11;\nconst int mod = 1e9 + 7;\nconst int inf = 0x3f3f3f3f;\n\ninline int read() {\n  char c = getchar();\n  int x = 0, f = 1;\n  for ( ; !isdigit(c); c = getchar()) if (c == '-') f = -1;\n  for ( ; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n  return x * f;\n}\nvector<int> e[B];\nint vis[B];\nint mon[B], cnt, n, m, low[B], dfn[B], lt[B], sum, ans, dis[B], st[B], top;\nint x[B], y[B], vx[B], s, p;\nvoid tarjan(int u){\n  low[u] = dfn[u] = ++cnt, st[++top] = u;\n  for (int i = 0; i < e[u].size(); i++){\n    int v = e[u][i];\n    if(!dfn[v]){ tarjan(v); low[u] = min(low[u], low[v]);}\n    else if(!lt[v]) low[u] = min(low[u], dfn[v]);\n  }\n  if(dfn[u] == low[u]){\n    sum++; \n    while(st[top] != u) {lt[st[top--]] = sum;}\n    lt[st[top--]] = sum;\n  }\n}\nint main() {\n// freopen(\"a.in\", \"r\", stdin);\n//  freopen(\".out\", \"w\", stdout);\n  n = read(), m = read();\n  for(int i = 1; i <= m; i++){\n     int x, a, y, b;\n     cin >> x >> a >> y >>b;\n     e[x + n * (a ^ 1)].push_back(y + n * (b & 1));\n     e[y + n * (b ^ 1)].push_back(x + n * (a & 1));  \n  }\n  for(int i = 1; i <= (n << 1); i++) if(!dfn[i]) tarjan(i);\n  for(int i = 1; i <= n; i++)\n       if(lt[i] == lt[i + n]) \n        {\n            cout << \"IMPOSSIBLE\" << \"\\n\";\n            return 0;\n        }\n  cout << \"POSSIBLE\" << endl;\n  for(int i = 1; i <= n; i++) printf(\"%d \", lt[i] > lt[i + n]);\n  return 0;\n}\n\n\n```\n\n\u4f5c\u8005 $@Tzy$ \n\n\u8f6c\u8f7d\u8bf7\u6807\u660e\u51fa\u5904\u3001\t",
        "postTime": 1612270936,
        "uid": 230808,
        "name": "Zxsoul",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4782 \u3010\u3010\u6a21\u677f\u30112-SAT \u95ee\u9898\u3011"
    },
    {
        "content": "### \u524d\u8a00\n\n\u4eca\u5929\u4e0a\u56fe\u8bba\u8bfe\uff0c\u8001\u5e08\u7ed9\u6211\u4eec\u505a **2-SAT** \u3001 \u4e8c\u5206\u56fe \u3001 \u7f51\u7edc\u6d41 \u7684**\u590d\u4e60**\u3002\u7136\u800c\u6211\u90fd\u6ca1\u9884\u4e60\u8fc7\uff01\u4e8e\u662f\u5b66\u4e60\u5b8c **2-SAT** \u6765\u4e00\u6ce2\u9898\u89e3\u5566\u3002\n\n### 2-SAT\u662f\u4ec0\u4e48\n\nN\u4e2a **bool** \u53d8\u91cf $x[1...N]$\uff0c\u82e5\u5e72\u4e2a\u7ea6\u675f\uff0c\u6bcf\u4e2a\u7ea6\u675f\u5f62\u5982\uff1a$x[i]=0/1$ \u548c $x[j]=0/1$ \u4e0d\u80fd\u540c\u65f6\u6210\u7acb\u3002\u95ee\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u8d4b\u503c\u4f7f\u7ea6\u675f\u6210\u7acb\u3002\n\n\u5176\u4ed6\u535a\u5ba2\u91cc\u7684\u8bb2\u89e3\uff0c\u90fd\u6709\u5f88\u591a\u521d\u4e2d\u751f\u770b\u7740\u82e6\u607c\u7684\u7b26\u53f7\uff0c\u6211\u5c31\u8bf4\u7684\u901a\u4fd7\u4e00\u70b9\u5427\u3002\n\n>\u6821\u957f\u8981\u7ed9\u540c\u5b66\u4eec\u6392\u4e00\u8282\u4ed6\u4eec\u60f3\u4e0a\u7684\u8bfe\uff0c\u5e76\u4e14\u6ee1\u8db3\u6bcf\u4e2a\u4eba\u7684\u81f3\u5c11\u4e00\u70b9\u9700\u6c42\u3002\n\n>\u7532\u60f3\u8981\u4e0a\u738b\u8001\u5e08\u7684\u6570\u5b66\u8bfe\u3002\n>\n>\u4e59\u60f3\u8981\u4e0a\u738b\u8001\u5e08\u7684\u4f53\u80b2\u8bfe\u3002\n\n\u8fd9\u91cc\u9762\u4e0a\u738b\u8001\u5e08\u7684\u8bfe\u662f\u4e00\u4e2a\u7ea6\u675f\uff0c\u6570\u5b66\u8bfe\u3001\u4f53\u80b2\u8bfe\u662f\u4e00\u4e2a\u7ea6\u675f\u3002\n\n### \u600e\u4e48\u89e3\u51b3 2-SAT\n\n\u524d\u7f6e\u6280\u80fd\uff1a$Tarjan$\n\n\u628a\u4e00\u4e2a\u70b9\u5206\u6210\u4e24\u4efd\u3002$u$ -> $u+ , u-$ \u3002\u5bf9\u7ea6\u675f\u8fdb\u884c\u5206\u7c7b\u3002\u8fd9\u9898\u91cc\u5177\u4f53\u5982\u4e0b\u4ee3\u7801\u3002\u7531\u4e8e\u5206\u6210\u4e24\u4e2a\u70b9\u4e0d\u5927\u597d\u8868\u793a\uff0c\u5c31\u8868\u793a\u6210 $u , u+n$\u3002\n```cpp\n        if(x==0&&y==0){\n            add(a+n,b);\n            add(b+n,a);\n        }\n        else if(x==0&&y==1){\n            add(a+n,b+n);\n            add(b,a);\n        }\n        else if(x==1&&y==0){\n            add(a,b);\n            add(b+n,a+n);\n        }\n        else if(x==1&&y==1){\n            add(a,b+n);\n            add(b,a+n);\n        }\n```\n\n\u600e\u4e48\u5224\u65ad\u662f\u5426\u6709\u89e3\u5462\uff1f`Tarjan` \u4ee5\u540e\uff0c\u5982\u679c\u4e00\u4e2a\u70b9 $u$ \u548c $u+n$ \u5c5e\u4e8e\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u90a3\u5c31\u4e0d\u53ef\u80fd\u4e86\u3002\n\n```cpp\n\tfor(int i=1;i<=n;i++){\n\t\tif(co[i]==co[i+n]){\n\t\t\tputs(\"IMPOSSIBLE\");\n\t\t\texit(0);\n\t\t}\n\t}\n```\n\n\u5426\u5219\u5373\u6709\u89e3\u3002\u7136\u540e\u8f93\u51fa\u5c31\u5f88\u7b80\u5355\u4e86\u3002\n```cpp\n\tputs(\"POSSIBLE\");\n\tfor(int i=1;i<=n;i++){\n\t\tif(co[i]>co[i+n])printf(\"1 \");\n\t\telse printf(\"0 \");\n\t}\n```\n\n### \u7ed3\u5408\u4ee3\u7801\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ninline int gin(){//\u5feb\u8bfb\n\tchar c=getchar();\n\tint s=0,f=1;\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-')f=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\ts=(s<<3)+(s<<1)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn s*f;\n}\n\nconst int N=4e6+5;\nint n,m,top,num,col,dfn[N],low[N],st[N];\nint head[N],ne[N],to[N],co[N],tot; \n//co[i]\u8868\u793a\u70b9i\u5c5e\u4e8e\u7684\u8fde\u901a\u5757\uff0c\u5176\u4ed6\u6570\u7ec4\u540d\u4e3a\u5e38\u89c4\n\ninline void add(int u,int v){//\u524d\u5411\u661f\u8fde\u8fb9\uff0c\u6ca1\u6709\u8fb9\u6743\n\tto[++tot]=v;\n\tne[tot]=head[u];\n\thead[u]=tot;\n}\n\nvoid tarjan(int u){//\u505a\u4e00\u904dTarjan\uff0c\u6c42\u51fa\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u8fde\u901a\u5757\u3002\n\tdfn[u]=low[u]=++num;\n\tst[++top]=u;\n\tfor(int i=head[u],v;i;i=ne[i]){\n\t\tv=to[i];\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if(!co[v])\n\t\t\tlow[u]=min(low[u],dfn[v]);\n\t}\n\tif(dfn[u]==low[u]){\n\t\tco[u]=++col;\n\t\twhile(st[top]!=u){\n\t\t\tco[st[top]]=col;\n\t\t\ttop--;\n\t\t}\n\t\ttop--;\n\t}\n}\n\nint main(){\n\tn=gin(),m=gin();\n\tfor(int i=1;i<=m;i++){\n        int a=gin(),x=gin();\n        int b=gin(),y=gin();\n        //\u5206\u7c7b\u3002\u8fd8\u6709\u4e00\u79cd\u9700\u8981\u63a8\u5f88\u4e45\u7684\u4f4d\u8fd0\u7b97\u538b\u6210\u4e24\u884c\u4ee3\u7801\uff0c\u9898\u89e3\u533a\u91cc\u6709\uff0c\u6211\u662f\u63a8\u4e0d\u51fa\u6765\u4e86\u3002\n        if(x==0&&y==0){\n            add(a+n,b);\n            add(b+n,a);\n        }\n        else if(x==0&&y==1){\n            add(a+n,b+n);\n            add(b,a);\n        }\n        else if(x==1&&y==0){\n            add(a,b);\n            add(b+n,a+n);\n        }\n        else if(x==1&&y==1){\n            add(a,b+n);\n            add(b,a+n);\n        }\n\t}\n\tfor(int i=1;i<=2*n;i++)\n\t\tif(!dfn[i])tarjan(i);\n\tfor(int i=1;i<=n;i++){\n\t\tif(co[i]==co[i+n]){\n\t\t\tputs(\"IMPOSSIBLE\");\n\t\t\texit(0);\n\t\t}\n\t}\n\tputs(\"POSSIBLE\");\n\tfor(int i=1;i<=n;i++){\n\t\tif(co[i]>co[i+n])printf(\"1 \");\n\t\telse printf(\"0 \");\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1601821358,
        "uid": 135485,
        "name": "Push_Y",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4782 \u3010\u3010\u6a21\u677f\u30112-SAT \u95ee\u9898\u3011"
    },
    {
        "content": "# \u4e00\u3001\u8bf4\u660e\n\n## $1.$ \u95ee\u9898\u80cc\u666f\n\u6709 $N$ \u4e2a\u5e03\u5c14\u53d8\u91cf $x_1,x_2...x_n$\u3002\n\n\u7ed9\u51fa\u4e00\u4e9b**\u4e00\u5143\u6216\u8005\u4e8c\u5143**\u9650\u5236\u5173\u7cfb\u3002\n\n$2-SAT$ \u95ee\u9898\u662f\u8981\u786e\u5b9a $N$ \u4e2a\u5e03\u5c14\u53d8\u91cf\u7684\u503c\uff0c\u4f7f\u5f97\u5176\u6ee1\u8db3\u6240\u6709\u9650\u5236\u5173\u7cfb\u3002\n## $2.$ \u6784\u5efa\u56fe\u8bba\u6a21\u578b\n\u5efa\u7acb $2N$ \u4e2a\u70b9\u7684\u6709\u5411\u56fe\uff1a\n\n$i$ \u8868\u793a $x_i=false$\n\n$i'=i+n$ \u70b9\u8868\u793a $x_i=true$\n\n\u4e00\u6761 $u->v$ \u7684\u6709\u5411\u8fb9\u8868\u793a**\u5982\u679c\u9009\u62e9\u4e86 $u$\uff0c\u90a3\u4e48\u4e00\u5b9a\u8981\u9009\u62e9 $v$\u3002**\n\n$2-SAT$ \u6709\u89e3\u5f53\u4e14\u4ec5\u5f53 $\\forall{i}$\uff0c**\u4ece $i$ \u70b9\u51fa\u53d1\u4e0d\u80fd\u5230\u8fbe $i'$ \u70b9\uff0c\u6216\u4ece$i'$ \u70b9\u51fa\u53d1\u4e0d\u80fd\u5230\u8fbe $i$ \u70b9\u3002**\n\n\u5229\u7528 $Kosaraju$ \u7b97\u6cd5\u6c42\u51fa\u5f3a\u8fde\u901a\u5206\u91cf\u5373\u53ef\u3002\u5982\u679c $\\exists{i}$\uff0c\u4f7f\u5f97 $i$ \u548c $i'$ \u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u5219\u65e0\u89e3\uff0c\u5426\u5219\u6709\u89e3\u3002\n\n\u8f93\u51fa\u65b9\u6848\uff1a\u5982\u679c\u4ece $i$ \u70b9\u51fa\u53d1\u53ef\u4ee5\u5230\u8fbe $i'$ \u70b9\uff0c\u5219\u9009\u4e86 $i$ \u4f1a\u5bfc\u81f4\u9009 $i'$\uff0c\u77db\u76fe\uff0c\u56e0\u6b64\u53ea\u80fd\u9009 $i'$\u3002\u6545\u53d6 $i$ \u548c $i'$ \u5728\u9006\u540e\u5e8f\u4e2d**\u9760\u540e**\u7684\u4e00\u4e2a\u5373\u53ef\u3002\n## $3.$ \u9650\u5236\u7684\u6784\u56fe\u65b9\u6cd5\n### $(1)$ \u4e00\u5143\u9650\u5236\uff1a\n\n\u4ee5 $u=true$ \u4e3a\u4f8b\uff0c\n\n$u->u'$\uff0c\u4f7f $u_{false}$ \u4e0d\u53ef\u884c\uff0c\u4e8e\u662f\u53ea\u80fd\u9009\u62e9 $u_{true}$\u3002\n### $(2)$ \u4e8c\u5143\u9650\u5236\uff1a\n\n\u6ce8\u610f\u539f\u547d\u9898**\u4e0e\u5176\u9006\u5426\u547d\u9898**\u90fd\u8981\u8fde\uff01\uff01\n\n#### $(i)$ $u$ $or$ $v=true$\n\u82e5 $u$ \u4e3a\u5047\uff0c\u5219 $v$ \u4e3a\u771f\uff1a\u8fde\u8fb9 $u->v'$\u3002\n\n\u82e5 $v$ \u4e3a\u5047\uff0c\u5219 $u$ \u4e3a\u771f\uff1a\u8fde\u8fb9 $v->u'$\u3002\n\n#### $(ii)$ $u$ $or$ $v=false$\n$u$ \u4e3a\u5047\uff1a\u8fde\u8fb9 $u'->u$\u3002\n\n$v$ \u4e3a\u5047\uff1a\u8fde\u8fb9 $v'->v$\u3002\n\n#### $(iii)$ $u$ $and$ $v=false$\n\u82e5 $u$ \u4e3a\u771f\uff0c\u5219 $v$ \u4e3a\u5047\uff1a\u8fde\u8fb9 $u'->v$\u3002\n\n\u82e5 $v$ \u4e3a\u771f\uff0c\u5219 $u$ \u4e3a\u5047\uff1a\u8fde\u8fb9 $v'->u$\u3002\n#### $(iiii)$ $u$ $and$ $v=true$\n$u$ \u4e3a\u771f\uff1a\u8fde\u8fb9 $u->u'$\u3002\n\n$v$ \u4e3a\u771f\uff1a\u8fde\u8fb9 $v->v'$\u3002\n\n#### $(iiiii)$ $u!=v$\n**\u82e5 $u$ \u4e3a\u771f\uff0c\u5219 $v$ \u4e3a\u5047\uff1a\u8fde\u8fb9 $u'->v$\u3002**\n\n**\u82e5 $u$ \u4e3a\u5047\uff0c\u5219 $v$ \u4e3a\u771f\uff1a\u8fde\u8fb9 $u->v'$\u3002**\n\n**\u82e5 $v$ \u4e3a\u771f\uff0c\u5219 $u$ \u4e3a\u5047\uff1a\u8fde\u8fb9 $v'->u$\u3002**\n\n**\u82e5 $v$ \u4e3a\u5047\uff0c\u5219 $u$ \u4e3a\u771f\uff1a\u8fde\u8fb9 $v->u'$\u3002**\n\n\n#### $(iiiiii)$ $u==v$\n**\u82e5 $u$ \u4e3a\u771f\uff0c\u5219 $v$ \u4e3a\u771f\uff1a\u8fde\u8fb9 $u'->v'$\u3002**\n\n**\u82e5 $u$ \u4e3a\u5047\uff0c\u5219 $v$ \u4e3a\u5047\uff1a\u8fde\u8fb9 $u->v$\u3002**\n\n**\u82e5 $v$ \u4e3a\u771f\uff0c\u5219 $u$ \u4e3a\u771f\uff1a\u8fde\u8fb9 $v'->u'$\u3002**\n\n**\u82e5 $v$ \u4e3a\u5047\uff0c\u5219 $u$ \u4e3a\u5047\uff1a\u8fde\u8fb9 $v->u$\u3002**\n\n\n\u547c\uff0c\u603b\u800c\u8a00\u4e4b\uff0c\u5148\u628a\u4e00\u5207\u6709\u53ef\u80fd\u7684\u547d\u9898\u90fd\u5217\u51fa\u6765\uff0c\u518d\u89c2\u5bdf\u5176\u9006\u5426\u547d\u9898\u662f\u5426\u5df2\u7ecf\u5305\u542b\u3002\n\n## $4.$ \u6a21\u677f\n```\n\nconst int N = 2e6 + 5, M = 2e6 + 5;\nstruct Graph {\n\tint to[M], nxt[M], head[M], cnt;\n\tinline void add(int u, int v) {\n\t\tto[++cnt] = v;\n\t\tnxt[cnt] = head[u];\n\t\thead[u] = cnt;\n\t}\n} G1, G2;\ninline void add_edge(int u, int v) {\n\tG1.add(u, v);\n\tG2.add(v, u);\n}\n\nint n, m, h, b[N], q[N], cnt, tot, id[N][2], pos[N];\n\nvoid dfs1(int u) {\n\tb[u] = 1;\n\tgo(G2, u) if(!b[v]) dfs1(v);\n\tq[++tot] = u;\n}\n\nvoid dfs2(int u, int c) {\n\tb[u] = c;\n\tgo(G1, u) if(!b[v]) dfs2(v, c);\n}\n\nint main() {\n\tread(n), read(m);\n\tfu(k, 0, 1) fu(i, 1, n) id[i][k] = ++cnt;  \n\tfor(int i = 1, u, x, v, y; i <= m; ++i) {\n\t\tread(u), read(x), read(v), read(y);\n\t\tadd_edge(id[u][!x], id[v][y]);\n\t\tadd_edge(id[v][!y], id[u][x]);\n\t}\n\tfu(u, 1, cnt) if(!b[u]) dfs1(u); reset(b);\n\tfd(i, cnt, 1) if(!b[q[i]]) dfs2(q[i], q[i]);\n\tfu(i, 1, n) if(b[id[i][0]] == b[id[i][1]]) finish(puts(\"IMPOSSIBLE\"));\n\tputs(\"POSSIBLE\");\n\tfu(i, 1, cnt) pos[q[i]] = i; \n\tfu(i, 1, n) printf(\"%d \", pos[id[i][0]] > pos[id[i][1]] ? 0 : 1);\n\treturn 0;\n}\n```\n\n\n\n\n\n\n\n",
        "postTime": 1579867023,
        "uid": 100101,
        "name": "yzc2005",
        "ccfLevel": 9,
        "title": "2-SAT"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P4782)\n\n[\u535a\u5ba2\u98df\u7528](https://www.luogu.com.cn/blog/368107/solution-p4782)\n\n---\n\n**\u524d\u8a00**\n\n\u9605\u8bfb\u672c\u6587\uff0c\u4f60\u9700\u8981\u638c\u63e1\u7684\u7b97\u6cd5\u5982\u4e0b\uff1a\n\n+ \u56fe\u7684\u5b58\u50a8&\u904d\u5386\n\n+ ***DFS***\n\n~~\u5bf9\u6ca1\u9519\u771f\u5c31\u53ea\u6709\u8fd9\u4e24\u6761~~\n\n---\n\n1. ***2-SAT*** \u4ecb\u7ecd\n\n***2-SAT*** \u95ee\u9898\u6307\u7684\u662f**\u7ed9\u5b9a\u4e00\u4e9b\u5e03\u5c14\u53d8\u91cf\uff0c\u4ee5\u53ca\u5b83\u4eec\u7684\u5173\u7cfb\uff08\u6bd4\u5982 $a$ \u4e3a\u771f\u6216 $b$ \u4e3a\u5047\uff09\uff0c\u8981\u4f60\u6c42\u51fa\u89e3\u5b58\u4e0d\u5b58\u5728\uff0c\u5b58\u5728\u5c31\u6784\u9020\u51fa\u4e00\u7ec4\u89e3**\u3002\n\n\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\n\n~~\u8fd8\u771f\u5c31\u662fdfs~~\n\n---\n\nSTEP 1\uff1a\u628a\u95ee\u9898\u8f6c\u5316\u5230\u4e00\u4e2a\u56fe\u4e0a\n\n\u6211\u4eec\u5148\u5efa\u7acb\u4e00\u4e2a\u56fe\u5305\u542b $2\\times n$ \u4e2a\u70b9\uff0c\u7528\u4e8e\u5b58\u4e0b\u7b2c $i$ \u4e2a\u70b9\u4e3a $true$ \u6216 $false$ \u7684\u60c5\u51b5\n\n\u8fd9\u91cc\u6211\u7528 $0 \\dots n-1$ \u4ee3\u8868 $n$ \u4e2a\u70b9\uff0c\u7b2c $i$ \u4e2a\u70b9\u7684 $false$ \u60c5\u51b5\u5bf9\u5e94\u56fe\u91cc\u7684\u7b2c $2 \\times i$ \u4e2a\u70b9\uff0c$true$ \u60c5\u51b5\u5bf9\u5e94\u56fe\u91cc\u7684\u7b2c $2 \\times i + 1$ \u4e2a\u70b9\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528 $i$ `^` $1$\u53d6\u5230\u7f16\u53f7\u4e00\u6837\u4f46\u771f\u5047\u503c\u4e0e $i$ \u76f8\u53cd\u7684\u70b9\u3002\n\n\u597d\u7684\uff0c\u5f00\u59cb\u5efa\u56fe\n\n\u4ee5\u6761\u4ef6 $a$ \u4e3a\u771f\u6216 $b$ \u4e3a\u5047\u4e3e\u4f8b\uff1a\n\n+ \u5982\u679c $a$ \u4e3a\u771f\uff0c\u5219 $b$ \u5fc5\u5b9a\u4e5f\u4e3a\u771f\n+ \u5982\u679c $b$ \u4e3a\u5047\uff0c\u5219 $a$ \u5fc5\u5b9a\u4e5f\u4e3a\u5047\n- \u5982\u679c $a$ \u4e3a\u5047\uff0c\u63a8\u4e0d\u51fa\u4efb\u4f55\u4e1c\u897f\n- \u5982\u679c $b$ \u4e3a\u771f\uff0c\u63a8\u4e0d\u51fa\u4efb\u4f55\u4e1c\u897f\n\n\u90a3\u4e48\u5c31\u5e94\u8be5\u662f\uff1a\n```cpp\nif(!a && !b){\n\tG[i << 1].push_back(j << 1 | 1);\n\tG[j << 1].push_back(i << 1 | 1);\n} else if(a && !b){\n\tG[i << 1 | 1].push_back(j << 1 | 1);\n\tG[j << 1].push_back(i << 1);\n} else if(!a && b){\n\tG[j << 1 | 1].push_back(i << 1 | 1);\n\tG[i << 1].push_back(j << 1);\n} else if(a && b){\n\tG[i << 1 | 1].push_back(j << 1);\n\tG[j << 1 | 1].push_back(i << 1);\n}\n```\n\n---\n\nSTEP 2\uff1aDFS\n\nDFS\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5f00\u4e00\u4e2a $vis$ \u6570\u7ec4\u6807\u8bb0**\u56fe\u4e0a**\u7b2c $i$ \u4e2a\u70b9\u662f\u5426\u88ab\u6807\u8bb0\uff08\u6807\u8bb0\u8868\u793a\u6211\u4eec\u6682\u65f6\u9009\u8fd9\u4e2a\u70b9\uff0c\u5982\u679c\u540e\u9762\u53d1\u73b0\u884c\u4e0d\u901a\u4e86\u5c31\u53d6\u6d88\u6807\u8bb0\uff09\n\n\u90a3\u5982\u679c\u70b9 $2 \\times i$ \u88ab\u6807\u8bb0\u4e86\u5e76\u4e14\u70b9 $2 \\times i + 1$ \u4e5f\u88ab\u6807\u8bb0\u4e86\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u4e00\u8def\u53d6\u6d88\u6807\u8bb0\n\n\u6211\u4eec\u5f00\u4e00\u4e2a\u6570\u7ec4\u88c5\u4e0b\u6240\u6709\u88ab\u6807\u8bb0\u4e86\u7684\u70b9\u7684\u7f16\u53f7\u4ee5\u65b9\u4fbf\u6211\u4eec\u540e\u9762\u53d6\u6d88\u6807\u8bb0\n\n\u4ee3\u7801\uff08\u6ce8\u91ca\u5728\u91cc\u9762\uff09\uff1a\n```cpp\nbool dfs(int u){\n\tif(vis[u ^ 1]) return false;  // \u5982\u679c\u8fd9\u4e2a\u70b9\u771f\u5047\u503c\u76f8\u53cd\u7684\u60c5\u51b5\u88ab\u6807\u8bb0\u4e86\uff0c\u90a3\u4e48\u77db\u76fe\uff0c\u4e0d\u80fd\u518dDFS\u4e0b\u53bb\n\tif(vis[u]) return true; // \u5982\u679c\u66fe\u7ecfDFS\u8fc7\u8fd9\u4e2a\u70b9\u5e76\u4e14\u628a\u5b83\u6807\u8bb0\u4e0a\u4e86\uff0c\u5c31\u4e0d\u7528\u518dDFS\u4e0b\u53bb\u4e86\uff0c\u76f4\u63a5\u53cd\u56de\n\tvis[u] = true; // \u6807\u8bb0\u4e0a\n\ta[len++] = u; // \u5b58\u5165\u6570\u7ec4\n\tfor(int i = 0;i < G[u].size();++i)\n\t\tif(!dfs(G[u][i])) return false; // \u4efb\u4f55\u4e00\u4e2av\u5931\u8d25\u5c31\u4e0d\u80fd\u518dDFS\u4e0b\u53bb\u4e86\n\treturn true;\n}\n```\n\n---\n\nSTEP 3\uff1a**2-SAT**\u51fd\u6570\n\n\u6211\u4eec\u7528\u4e00\u4e2a`_2_SAT`\u51fd\u6570\u6765\u5b8c\u6210\u64cd\u4f5c\n\n\u4ee3\u7801\uff08\u6ce8\u91ca\u5728\u91cc\u9762\uff09\uff1a\n```cpp\nbool _2_SAT(){\n\tfor(int i = 0;i < 2 * n;i += 2){\n\t\tif(vis[i] == false && vis[i + 1] == false){ // \u5982\u679c\u8fd9\u4e2a\u70b9\u6ca1\u6709\u8bbf\u95ee\u8fc7\n\t\t\tlen = 0; // DFS\u524d\u6e05\u96f6\n\t\t\tif(!dfs(i)){ // \u5982\u679cDFS\u5931\u8d25\n\t\t\t\twhile(len > 0) vis[a[--len]] = false; // \u6cbf\u8def\u6e05\u7a7a\u6807\u8bb0\n\t\t\t\tif(!dfs(i + 1)) return false; // \u8fd9\u4e2a\u65f6\u5019\u5c1d\u8bd5\u53e6\u4e00\u79cd\u53ef\u80fd\uff0c\u5982\u679c\u8fd8\u662f\u5931\u8d25\uff0c\u5c31\u5f7b\u5e95\u5931\u8d25\uff0c\u4e0d\u53ef\u80fd\u5b58\u5728\u53ef\u884c\u89e3\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n```\n\n---\n\n\u7f8e\u597d\u7684AC\u4ee3\u7801\u65f6\u523b\uff1a\n\n```cpp\n#include<stdio.h>\n#include<v\u0435ctor>\nstd::vector<int> G[2000001];\nint n,m,a[2000001],len = 0;\nbool vis[2000001];\nbool dfs(int u){\n\tif(vis[u ^ 1]) return false;\n\tif(vis[u]) return true;\n\tvis[u] = true;\n\ta[len++] = u;\n\tfor(int i = 0;i < G[u].size();++i)\n\t\tif(!dfs(G[u][i])) return false;\n\treturn true;\n}\nbool _2_SAT(){\n\tfor(int i = 0;i < 2 * n;i += 2){\n\t\tif(vis[i] == false && vis[i + 1] == false){\n\t\t\tlen = 0;\n\t\t\tif(!dfs(i)){\n\t\t\t\twhile(len > 0) vis[a[--len]] = false;\n\t\t\t\tif(!dfs(i + 1)) return false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int _i = 1;_i <= m;++_i){\n\t\tint i,a,j,b;\n\t\tscanf(\"%d%d%d%d\",&i,&a,&j,&b);\n\t\t--i,--j;\n\t\tif(!a && !b){\n\t\t\tG[i << 1].push_back(j << 1 | 1);\n\t\t\tG[j << 1].push_back(i << 1 | 1);\n\t\t} else if(a && !b){\n\t\t\tG[i << 1 | 1].push_back(j << 1 | 1);\n\t\t\tG[j << 1].push_back(i << 1);\n\t\t} else if(!a && b){\n\t\t\tG[j << 1 | 1].push_back(i << 1 | 1);\n\t\t\tG[i << 1].push_back(j << 1);\n\t\t} else if(a && b){\n\t\t\tG[i << 1 | 1].push_back(j << 1);\n\t\t\tG[j << 1 | 1].push_back(i << 1);\n\t\t}\n\t}\n\tif(_2_SAT()){\n\t\tputs(\"POSSIBLE\");\n\t\tfor(int i = 0;i < n;++i)\n\t\t\tprintf(\"%d \",vis[i << 1] ? 1 : 0 );\n\t} else puts(\"IMPOSSIBLE\");\n\treturn 0;\n}\n```",
        "postTime": 1619874819,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "\u9898\u89e3-P4782"
    },
    {
        "content": "$2 - SAT$ \u7684\u677f\u5b50\u9898\u3002\n# \u601d\u8def\n\u8bf4\u767d\u4e86\u5c31\u662f $Tarjan$ \u6c42\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u53ea\u4e0d\u8fc7\u5728\u5efa\u8fb9\u4e0a\u6709\u8bb8\u591a\u6280\u5de7\u3002\u6211\u4eec\u628a\u4e00\u4e2a\u70b9\u62c6\u6210 $a_i$ \u548c $a_{i+n}$ \u4e24\u4e2a\u70b9\uff0c\u5206\u522b\u8868\u793a $a_i$ \u53d6\u771f\u548c\u53d6\u5047\u65f6\u7684\u70b9\u3002\n\n\u4e0b\u9762\u662f\u6761\u4ef6\u5206\u522b\u4e3a $4$ \u79cd\u60c5\u51b5\u662f\u6211\u4eec\u7684\u5efa\u8fb9\u65b9\u6848\u3002\n\n---\n- $a_i=0||b_i=0$ \u65f6\uff0c\u6211\u4eec\u5efa $a_i->b_{i+n}$ \u7684\u8fb9\u548c $b_i->a_{i+n}$ \u7684\u8fb9\u3002\n\n- $a_i=1||b_i=0$ \u65f6\uff0c\u6211\u4eec\u5efa $a_{i+n}->b_{i+n}$ \u7684\u8fb9\u548c $b_i->a_i$ \u7684\u8fb9\u3002\n\n- $a_i=0||b_i=1$ \u65f6\uff0c\u6211\u4eec\u5efa $a_i->b_i$ \u7684\u8fb9\u548c $b_{i+n}->a_{i+n}$ \u7684\u8fb9\u3002\n\n- $a_i=1||b_i=1$ \u65f6\uff0c\u6211\u4eec\u5efa $a_{i+n}->b_i$ \u7684\u8fb9\u548c $b_{i+n}->a_i$ \u7684\u8fb9\u3002\n\n---\n\u6700\u540e\u7edf\u8ba1\u7684\u65f6\u5019\u5982\u679c $a_i$ \u4e0e $a_{i+n}$ \u5728\u540c\u4e00\u5f3a\u8fde\u901a\u5206\u91cf\u5185\uff0c\u65e0\u89e3\u3002\u53cd\u4e4b\uff0c\u5982\u679c $a_i$ \u6240\u5c5e\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u51fa\u73b0\u7684\u65f6\u95f4\u5c0f\u4e8e $a_{i+n}$ \u6240\u5c5e\u7684\uff0c$a_i$ \u4e3a $1$\uff0c\u5426\u5219\u4e3a $0$\u3002\n# code\n```cpp\n#include<bits/stdc++.h>\n#define ri register int\nusing namespace std;\nconst int MAX_N=15000005;\nint n,m,ti,ans;\nint head[MAX_N],to[MAX_N],next[MAX_N];\nint dfn[MAX_N],low[MAX_N];\nbool flag[MAX_N],vis[MAX_N];\nint cnt;\nint num[MAX_N];\nint color[MAX_N];\nstack <int> s;\nvoid add(int u,int v){\n\t++cnt;\n\tto[cnt]=v;\n\tnext[cnt]=head[u];\n\thead[u]=cnt;\n}\nvoid tarjan(int u){\n\ts.push(u);\n\tvis[u]=flag[u]=1;\n\tdfn[u]=low[u]=++ti;\n\tfor(ri i=head[u];i;i=next[i]){\n\t\tint v=to[i];\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}else{\n\t\t\tif(vis[v]){\n\t\t\t\tlow[u]=min(low[u],dfn[v]);\n\t\t\t}\n\t\t}\n\t}\n\tif(low[u]==dfn[u]){\n\t\tcnt++;\n\t\twhile(s.top()!=u){\n\t\t\tint v=s.top();\n\t\t\ts.pop();\n\t\t\tcolor[v]=cnt;\n\t\t\tnum[cnt]++;\n\t\t\tvis[v]=0;\n\t\t}\n\t\ts.pop();\n\t\tcolor[u]=cnt;\n\t\tnum[cnt]++;\n\t\tvis[u]=0;\n\t}\n}\nint main(){\n\tcin>>n>>m;\n\tfor(ri i=1;i<=m;i++){\n\t\tint a,b,c,d;\n\t\tcin>>a>>b>>c>>d;\n\t\tif(b==d){\n\t\t\tif(b){\n\t\t\t\tadd(a+n,c);\n\t\t\t\tadd(c+n,a);\n\t\t\t}else{\n\t\t\t\tadd(a,c+n);\n\t\t\t\tadd(c,a+n);\n\t\t\t}\n\t\t}else{\n\t\t\tif(b){\n\t\t\t\tadd(a+n,c+n);\n\t\t\t\tadd(c,a); \n\t\t\t}else{\n\t\t\t\tadd(a,c);\n\t\t\t\tadd(c+n,a+n);\n\t\t\t}\n\t\t}\n\t}\n\tfor(ri i=1;i<=2*n;i++){\n\t\tif(!flag[i]) tarjan(i);\n\t} \n\tfor(ri i=1;i<=n;i++){\n\t\tif(color[i]==color[i+n]){\n\t\t\tcout<<\"IMPOSSIBLE\";\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout<<\"POSSIBLE\"<<endl;\n\tfor(ri i=1;i<=n;i++){\n\t\tcout<<(color[i]<color[i+n])<<\" \";\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1605924203,
        "uid": 244165,
        "name": "_121017_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4782 \u3010\u3010\u6a21\u677f\u30112-SAT \u95ee\u9898\u3011"
    },
    {
        "content": "### [\u535a\u5ba2\u9605\u8bfb\u66f4\u4f73](https://www.cnblogs.com/zimindaada/p/2_SAT.html)\n\n---\n\n### SAT\u95ee\u9898\u7684\u5b9a\u4e49\n\nSAT\u662fSatisfiability\uff08\u53ef\u6ee1\u8db3\u6027\uff09\u7684\u7f29\u5199\uff0c\u800ck-SAT\u95ee\u9898\u5c31\u662f\u8bf4\u4f60\u6709$n$\u4e2a\u672a\u77e5\u7684`bool`\u53d8\u91cf$a_i$\uff0c\u6709$m$\u4e2a\u5bf9\u8fd9\u4e9b\u53d8\u91cf\u7684\u9650\u5236\uff0c\u6bcf\u4e2a\u9650\u5236\u6709$k$\u4e2a\u5143\u7d20\uff0c\u8bbe\u6bcf\u4e2a\u5143\u7d20\u4e3a$x$\uff0c\u8981\u6c42 $x$\u6216$\\neg x$ \u7684 $\\lor$\uff08\u6216\uff09\u6216\u8005$\\land$\uff08\u548c\uff09\u7684\u503c\uff08\u59823-SAT\u4e2d\uff0c\u5f62\u5982`(a or b or !c)` \u6216 `a and !b and !c` \u7684\u6761\u4ef6\uff09\u4e3a`true`\uff0c\u6216\u5b9a\u4e49\u67d0\u4e00\u4e2a\u672a\u77e5\u6570\u4e3a`true`/`false`\u7684\u4e00\u79cd\u89e3\u6cd5\u3002\n\n\u5f88\u5bb9\u6613\u60f3\u5230$O(2^nm)$\u66b4\u529b\u505a\u6cd5\uff0c\u5373\u679a\u4e3e\u6bcf\u4e00\u4e2a`bool`\u672a\u77e5\u6570\u7684\u503c\uff0c\u5224\u65ad\u662f\u5426\u5408\u6cd5\u3002\u800c\u5bf9\u4e8e$k \\geq 3$\u800c\u8a00\u7684k-SAT\u5df2\u7ecf\u88ab\u8bc1\u660e\u662fNP\u5b8c\u5168\u95ee\u9898\uff08\u5373\u6ca1\u6709\u591a\u9879\u5f0f\u590d\u6742\u5ea6\u7684\u95ee\u9898\uff09\uff0c\u800c\u6211\u4eec\u7814\u7a76\u76842-SAT\u5219\u6709\u4e00\u4e2a\u591a\u9879\u5f0f\u89e3\u6cd5\u3002\n\n### 2-SAT\u95ee\u9898\u7684\u89e3\u6cd5\n\n\u5b9a\u4e49\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u5355\u5b57\u6bcd`bool`\u53d8\u91cf$a$\u4e3a`true`\u3002\n\n\u6211\u4eec\u901a\u8fc7\u5efa\u4e00\u4e9b\u7279\u6b8a\u7684\u56fe\u6765\u5b9e\u73b0\uff1a\u6211\u4eec\u4ee4\u7f16\u53f7\u4ece$1$\u5230$n$\u7684\u70b9\u4e3a\u672a\u77e5\u53d8\u91cf$a_i$\u53d6`true`\u7684\u60c5\u51b5\uff0c$n+1$\u5230$2 \\times n$\u7684\u70b9\u4e3a$a_i$\u53d6`false`\u7684\u60c5\u51b5\u3002\u8fde\u8fb9\u65b9\u9762\uff0c\u6211\u4eec\u4ee4\u4ece$a$\u8fde\u5411$b$\u8868\u793a\u7531$a$\u80fd\u63a8\u5230$b$\uff0c\u5219$a\\land b$\u53ef\u4ee5\u53d8\u4e3a$a \\rightarrow b, b\\rightarrow a$\uff0c\u5373\u7531$a$\u4e3a\u771f\u53ef\u4ee5\u63a8\u51fa$b$\u4e3a\u771f\uff0c\u7531$b$\u4e3a\u771f\u53ef\u4ee5\u63a8\u51fa$a$\u4e3a\u771f\uff1b$a \\lor b$\u53ef\u4ee5\u53d8\u4e3a$\\neg a \\rightarrow b, \\neg b \\rightarrow a$\uff0c\u5373\u82e5$a$\u4e3a\u5047\u5219$b$\u4e3a\u771f\uff1b$a = x (x\\in \\{ true, false\\})$\u53ef\u4ee5\u53d8\u4e3a$\\neg a \\rightarrow a$\uff0c\u8fd9\u4e2a\u6211\u4eec\u4e4b\u540e\u518d\u8bf4\u4e3a\u4ec0\u4e48\uff0c\u5148\u5f53\u8fd9\u79cd\u60c5\u51b5\u4e0d\u5b58\u5728\u3002\u53ef\u4ee5\u53d1\u73b0\u6240\u6709\u60c5\u51b5\u90fd\u53ef\u4ee5\u5316\u4e3a\u521a\u624d\u4e09\u79cd\u60c5\u51b5\u4e4b\u4e00\u3002\n\n\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u7279\u6b8a\u7684\u56fe\u8dd1\u4e00\u8fb9\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u5982\u679c\u5b58\u5728$\\neg a$\u548c$a$\u53ea\u6709\u540c\u5b58\u5728\u4e8e\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u5219\u4e00\u5b9a\u65e0\u89e3\uff0c\u56e0\u4e3a\u8fd9\u4e00\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u4ece$\\neg a$\u63a8\u5230$a$\uff0c\u800c\u5f88\u660e\u663e\u8fd9\u662f\u77db\u76fe\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u5f20\u62d3\u6251\u56fe\u3002\u6709\u4e00\u4e2a\u6027\u8d28\uff0c\u5c31\u662f\u5728\u6709\u89e3\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u672a\u77e5\u6570\u7684\u4e24\u4e2a\u53d6\u503c\u662f\u6709\u524d\u540e\u63a8\u5bfc\u5173\u7cfb\u7684\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u53d6\u503c\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u6307\u5411\u4e86\u53e6\u4e00\u4e2a\u53d6\u503c\u65f6\uff0c\u6211\u4eec\u53d6\u540e\u8005\u662f\u4e00\u5b9a\u6709\u89e3\u7684\u3002\u5b9e\u9645\u5b9e\u73b0\u4e0a\uff0c\u8f93\u51fa\u7684\u65f6\u5019\uff0c\u8f93\u51fa\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u62c6\u9664\u7684`true`\u548c`false`\u4e2d\uff0c\u62d3\u6251\u5e8f\u8f83\u5927\u7684\u90a3\u4e00\u4e2a\uff0c\u5219\u4e00\u5b9a\u6709\u4e00\u4e2a\u89e3\u3002\u7136\u800c\u7531\u4e8e\u6211\u4eec\u8dd1\u4e86`Tarjan`\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9644\u5e26\u7740\u6c42\u4e00\u4e2a\u53cd\u5411\u7684\u62d3\u6251\u5e8f\uff0c\u90a3\u4e48\u8fd9\u5c31\u62d3\u6251\u5e8f\u4e5f\u6c42\u5f97\u4e86\u3002\n\n\u4ece\u521a\u624d\u8fd9\u4e00\u89d2\u5ea6\u6765\u8bf4\uff0c\u5bf9\u4e8e\u521a\u624d\u5efa\u56fe\u4e2d\u7684\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u8fde$\\neg a \\rightarrow a$\u53ef\u4ee5\u8ba9$a$\u7684\u62d3\u6251\u5e8f\u5fc5\u5b9a\u5927\u4e8e$\\neg a$\uff0c\u5373\u6700\u540e\u8f93\u51fa\u7684\u65f6\u5019\u4e00\u5b9a\u4f1a\u8f93\u51fa\u5f00\u59cb\u65f6\u7ed9\u5b83\u7684\u5b9a\u4e49\u3002\n\n\u5f88\u660e\u663e\u590d\u6742\u5ea6\u74f6\u9888\u5728`Tarjan`\u8dd1\u5f3a\u8fde\u901a\u5206\u91cf\u4e0a\uff0c\u5176\u590d\u6742\u5ea6\u4e3a$O(n+m)$\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u4e3a$O(n+m)$\n\n### \u4f8b\u9898\n\n#### \u4f8b\u98981 [P4782 \u3010\u6a21\u677f\u30112-SAT \u95ee\u9898](https://www.luogu.com.cn/problem/P4782)\n\n\u4e00\u9053\u6a21\u677f\u9898\uff0c\u751a\u81f3\u8fde\u8d4b\u503c\u64cd\u4f5c\u90fd\u6ca1\u6709\u3002\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u8f93\u5165\u7684\u65f6\u5019\u7528\u4e86\u4e00\u4e9b\u5c0f\u6280\u5de7\u6765\u538b\u4e86\u4e00\u4e0b\u8f93\u5165\u7684\u884c\uff0c\u5176\u4ed6\u5c31\u6ca1\u4ec0\u4e48\u96be\u4ee5\u7406\u89e3\u7684\u4e86\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\nnamespace ztd{\n    using namespace std;\n    typedef long long ll;\n\tconst int mod = 998244353;\n\tconst int inf = 2147483647;\n    template<typename T> inline T read(T& t) {//fast read\n        t=0;short f=1;char ch=getchar();double d = 0.1;\n        while (ch<'0'||ch>'9') {if (ch=='-') f=-f;ch=getchar();}\n        while (ch>='0'&&ch<='9') t=t*10+ch-'0',ch=getchar();\n        if(ch=='.'){ch=getchar();while(ch<='9'&&ch>='0') t+=d*(ch^48),d*=0.1,ch=getchar();}\n        t*=f;\n        return t;\n    }\n}\nusing namespace ztd;\nconst int maxn = 2e6+7, maxm = 2e6+7;\nint n, m;\n\nint last[maxn], ecnt;\nstruct edge{int y, gg;}e[maxm];\ninline void addedge(int x, int y){\n\te[++ecnt] = {y, last[x]};\n\tlast[x] = ecnt;\n}\n\nint dfn[maxn], low[maxn], pcnt, st[maxn], top, gang[maxn], gtot;\nbool instack[maxn];\nvoid Tarjan(int x){\n\tdfn[x] = low[x] = ++pcnt; \n\tst[++top] = x; instack[x] = 1;\n\tfor(int i = last[x], y = e[i].y; i; i = e[i].gg, y = e[i].y){\n\t\tif(!dfn[y]){\n\t\t\tTarjan(y);\n\t\t\tlow[x] = min(low[x], low[y]);\n\t\t}else if(instack[y]) low[x] = min(low[x], dfn[y]);\n\t}\n\tif(low[x] == dfn[x]){\n\t\tint now; ++gtot;\n\t\tdo{\n\t\t\tnow = st[top--]; instack[now] = 0;\n\t\t\tgang[now] = (gtot);\n\t\t}while(now ^ x);\n\t}\n}\n\nint main(){\n\tread(n); read(m);\n\tint xx, yy, hmx, hmy;\n\tfor(int i = 1; i <= m; ++i){\n\t\tread(xx); read(hmx); read(yy); read(hmy); \n\t\taddedge(xx+(1-hmx)*n, yy+hmy*n);\n\t\taddedge(yy+(1-hmy)*n, xx+hmx*n);\n\t}\n\tfor(int i = 1; i <= n*2; ++i) if(!dfn[i]) Tarjan(i);\n\tfor(int i = 1; i <= n; ++i){\n\t\tif(gang[i] == gang[i+n]){\n\t\t\tputs(\"IMPOSSIBLE\");\n\t\t\treturn 0;\n\t\t} \n\t}\n\tputs(\"POSSIBLE\");\n\tfor(int i = 1; i <= n; ++i){\n\t\tcout << ((int)(gang[i] > gang[i+n])) << \" \";\n\t} \n\tcout << '\\n';\n\treturn 0;\n}\n\n```\n\u8fd8\u6709\u51e0\u9053\u6bd4\u8f83\u597d\u7684\u7ec3\u624b\u9898\uff0c\u5982\n\n[P4171 \u3010JSOI2010\u3011\u6ee1\u6c49\u5168\u5e2d](https://www.luogu.com.cn/problem/P4171)\uff08\u8ddf\u6a21\u677f\u533a\u522b\u4e0d\u5927\uff09\n\n\n[P3825 \u3010NOI2017\u3011\u6e38\u620f](https://www.luogu.com.cn/problem/P3825)\uff08\u6bd4\u8f83\u597d\u7684\u5b9e\u9645\u5e94\u7528\u9898\uff09\n\n\u5173\u4e8e\u8fd9\u4e9b\u9898\u7684\u9898\u89e3\uff0c\u53ef\u4ee5\u5728[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/zimindaada/p/2_SAT.html)\u91cc\u770b\u3002\n",
        "postTime": 1603030229,
        "uid": 134635,
        "name": "zimindaada",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4782 \u3010\u3010\u6a21\u677f\u30112-SAT \u95ee\u9898\u3011"
    },
    {
        "content": "> SAT \u662f\u9002\u5b9a\u6027\uff08Satisfiability\uff09\u95ee\u9898\u7684\u7b80\u79f0\u3002\u4e00\u822c\u5f62\u5f0f\u4e3a k - \u9002\u5b9a\u6027\u95ee\u9898\uff0c\u7b80\u79f0 k-SAT\u3002\u800c\u5f53 $k>2$ \u65f6\u8be5\u95ee\u9898\u4e3a NP \u5b8c\u5168\u7684\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u7814\u7a76 $k=2$ \u7684\u60c5\u51b5\u3002\n>\n> \u2014\u2014\u6458\u81ea _OI-Wiki_ \n\n2-SAT\u95ee\u9898\u5927\u591a\u662f\u56fa\u5b9a\u7684\u6a21\u578b\uff1a\n\n\u7ed9\u5b9a\u82e5\u5e72\u4e2a\u5747\u6709\u4e24\u4e2a\u5143\u7d20\u7684\u96c6\u5408\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u79f0\u96c6\u5408 $i$ \u4e2d\u4e00\u4e2a\u5143\u7d20\u4e3a $A_i$ \uff0c\u53e6\u4e00\u4e2a\u5143\u7d20\u4e3a $A_i'$ \u3002\u73b0\u5728\u7ed9\u51fa\u82e5\u5e72\u9650\u5236\u6761\u4ef6\uff0c\u5982\u9009\u62e9 $A_i$ \u5c31\u4e0d\u80fd\u9009\u62e9 $A_j$ \uff0c\u9009\u62e9 $A_i$ \u5c31\u5fc5\u987b\u9009\u62e9 $A_j$ \u7b49\uff08\u5176\u4e2d $i \\not= j$ \uff09\u3002\u8be2\u95ee\u662f\u5426\u5b58\u5728\u4e00\u79cd\u65b9\u6848\uff0c\u80fd\u591f\u5728\u6ee1\u8db3\u9650\u5236\u6761\u4ef6\u7684\u540c\u65f6\u4ece\u6bcf\u4e00\u4e2a\u96c6\u5408\u4e2d\u90fd\u9009\u51fa**\u4e00\u4e2a**\u5143\u7d20\u3002\n\n\u53d1\u73b0**\u4e00\u4e2a\u9650\u5236\u6761\u4ef6\u53ea\u548c\u4e24\u4e2a\u96c6\u5408**\u6709\u5173\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c06\u8fd9\u79cd\u5173\u7cfb\u62bd\u8c61\u6210\u56fe\u4e0a\u7684\u8fb9\uff0c\u5c06\u96c6\u5408\u4e2d\u5bf9\u7acb\u7684\u4e24\u4e2a\u5143\u7d20\u62bd\u8c61\u6210\u70b9\u3002\n\n\u82e5\u73b0\u5728\u6709\u8fd9\u6837\u4e00\u4e2a\u9650\u5236\uff1a\u9009\u62e9 $A_i$ \u5c31\u4e0d\u80fd\u9009\u62e9 $A_j$ \u3002\u90a3\u4e48\u5982\u679c\u9009\u62e9 $A_i$ \u5c31\u5fc5\u987b\u9009\u62e9 $A_j'$ \uff0c\u9009\u62e9 $A_j$ \u5c31\u5fc5\u987b\u9009\u62e9 $A_i'$ \u3002\u5bf9\u4e8e\u8fd9\u6837\u7684\u9650\u5236\uff0c\u8fde\u8fb9 $A_i \\to A_j'$ \u548c $A_j \\to A_i'$ \u3002\u4e8e\u662f\u56fe\u4e2d\u7684\u8fb9\u6709\u4e86\u5177\u4f53\u610f\u4e49\uff1a$u \\to v$ \u7684\u8fb9\u8868\u793a\u82e5\u9009 $u$ \u5219\u5fc5\u9009 $v$ \u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u82e5\u4e00\u4e2a\u70b9 $u$ \u88ab\u9009\u62e9\uff0c\u5219 $u$ \u6240\u80fd\u5230\u8fbe\u7684\u70b9\u5747\u5fc5\u987b\u88ab\u9009\u62e9\u3002\u8fd9\u4e2a\u6027\u8d28\u660e\u663e\u4e0e**\u8fde\u901a\u6027**\u76f8\u5173\u3002\n\n\u4e8e\u662f\u6709\u4e86\u4e00\u4e2a\u7ed3\u8bba\uff1a**\u82e5\u4e00\u4e2a\u70b9 $u$ \u88ab\u9009\u62e9\uff0c\u90a3\u4e48\u4e0e $u$ \u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u70b9\u5747\u5fc5\u987b\u88ab\u9009\u62e9\u3002**\n\n\u8fd9\u53e5\u8bdd\u8bf4\u660e**\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u70b9\u53d6\u6216\u4e0d\u53d6\u7684\u72b6\u6001\u662f\u4e00\u81f4\u7684**\u3002\n\n\u8fd9\u6837\u5c31\u80fd\u5224\u65ad\u662f\u5426\u6709\u89e3\u4e86\uff1a\u82e5\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\u7684\u4e24\u4e2a\u5143\u7d20\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u5219\u95ee\u9898\u65e0\u89e3\u3002\u5f88\u663e\u7136\uff0c\u82e5 $A_i$ \u548c $A_i'$ \u8981\u4e48\u540c\u65f6\u9009\uff0c\u8981\u4e48\u90fd\u4e0d\u9009\uff0c\u5219\u4e0d\u6ee1\u8db3\u9898\u8bbe\u3002\n\n\u6c42\u51fa\u5f3a\u8fde\u901a\u5206\u91cf\u540e\u5224\u65ad\u65e0\u89e3\uff1a\n\n```cpp\nfor(int i=1;i<=n;++i)\n\tif(scc[i]==scc[i+n])\n\t{\n\t\tputs(\"IMPOSSIBLE\");\n\t\treturn 0;\n    }\n```\n\n---\n\n\u4f46\u662f\u6709\u4e9b\u9898\u4e0d\u6b62\u8ba9\u4f60\u5224\u65ad\u6709\u65e0\u89e3\uff0c\u8fd8\u8ba9\u4f60\u8f93\u51fa\u53ef\u884c\u89e3\uff0c\u8fd9\u5c31\u9700\u8981\u7528\u5230**\u62d3\u6251\u6392\u5e8f**\u3002\n\n\u8bbe $S_i$ \u8868\u793a $A_i$ \u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff0c$S_i'$ \u8868\u793a $A_i'$ \u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n\u63a8\u5e7f\u4e00\u4e0b\u4e0a\u9762\u5bf9\u4e8e\u5355\u70b9\u7684\u7ed3\u8bba\uff1a**\u82e5\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf $S$ \u88ab\u9009\u62e9\uff0c\u5219 $S$ \u6240\u80fd\u5230\u8fbe\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u5747\u5fc5\u987b\u88ab\u9009\u62e9**\u3002\n\n\u5148\u8003\u8651\u8fd9\u6837\u4e00\u79cd\u60c5\u51b5\uff1a $S_i$ \u4e0e $S_i'$ \u8054\u901a\uff0c\u5e76\u4e14\u5047\u8bbe $S_i$ \u7684\u62d3\u6251\u5e8f\u5c0f\u4e8e $S_i'$ \u7684\u62d3\u6251\u5e8f\u3002\u5219\u5fc5\u7136\u6709\uff1a\u82e5 $S_i$ \u88ab\u9009\u62e9\uff0c\u5219 $S_i'$ \u5fc5\u987b\u88ab\u9009\u62e9\u3002\u90a3\u80af\u5b9a\u4e0d\u80fd\u9009 $S_i$ \u4e86\uff0c\u56e0\u4e3a $S_i$ \u548c $S_i'$ \u5fc5\u7136\u4e0d\u80fd\u540c\u65f6\u9009\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u786e\u5b9a\u4e86\u9009\u62e9\u65b9\u6848\u3002\n\n\u800c $S_i$ \u4e0e $S_i'$ \u4e0d\u8fde\u901a\u7684\u8bdd\uff0c\u4e0a\u9762\u7684\u65b9\u6cd5\u5c31\u4e0d\u884c\u4e86\uff0c\u56e0\u4e3a\u6ca1\u6cd5\u786e\u5b9a\u9009\u62e9\u65b9\u6848\uff0c\u800c\u4e00\u4e2a\u770b\u8d77\u6765\u6ee1\u8db3\u8981\u6c42\u7684\u65b9\u6848\u53ef\u80fd\u4f1a\u5bf9\u5176\u4ed6\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u4ea7\u751f\u5f71\u54cd\uff0c\u800c\u679a\u4e3e\u65b9\u6848\u80af\u5b9a\u590d\u6742\u5ea6\u7206\u70b8\u3002\n\n\u6211\u4eec\u5c1d\u8bd5\u5c06\u4e24\u79cd\u60c5\u51b5\u8fdb\u884c\u7edf\u4e00\uff0c\u5373\u9009\u62e9 $S_i$ \u548c $S_i'$ \u4e2d\u62d3\u6251\u5e8f\u5927\u7684\u90a3\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002\u800c\u8fd9\u6837\u9009\u62e9\u5176\u5b9e\u662f\u6b63\u786e\u7684\uff0c\u6765\u7b80\u5355\u8bc1\u660e\u4e00\u4e0b\uff1a\n\n\u7531\u6700\u521d\u7684\u8fde\u8fb9\u65b9\u5f0f\u53ef\u77e5\uff0c\u5f97\u51fa\u7684\u56fe\u662f\u5bf9\u79f0\u7684\uff1a\n\n![aqViHP.png](https://s1.ax1x.com/2020/08/10/aqViHP.png)\n\n\u6240\u4ee5\u7f29\u70b9\u540e\u7684DAG\u4e5f\u662f\u5bf9\u79f0\u7684\uff1a\n\n![aqVNv9.png](https://s1.ax1x.com/2020/08/10/aqVNv9.png)\n\n\u8003\u8651\u8fd9\u4e48\u4e00\u4e2aDAG\uff1a\n\n![aqVWDI.png](https://s1.ax1x.com/2020/08/10/aqVWDI.png)\n\n\u4e0d\u96be\u770b\u51fa $S_i'$ \u7684\u540e\u7ee7\u7ed3\u70b9\u4e0e $S_i$ \u7684\u524d\u9a71\u7ed3\u70b9\u662f\u5bf9\u79f0\u7684\u3002\n\n\u4e8e\u662f\u9009\u62e9 $S_i'$ \u4f1a\u5bfc\u81f4 $S_i'$ \u7684\u540e\u7ee7\u7ed3\u70b9\u5168\u90e8\u88ab\u9009\u62e9\uff0c\u800c\u9009\u62e9 $S_i'$ \u5c31\u5fc5\u987b\u4e0d\u9009 $S_i$ \uff0c\u9009\u62e9 $S_i'$ \u7684\u540e\u7ee7\u7ed3\u70b9\u4f1a\u5bfc\u81f4 $S_i$ \u7684\u524d\u9a71\u7ed3\u70b9\u4e0d\u88ab\u9009\u62e9\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c$S_i'$ \u4ee5\u4e0b\u7684\u7ed3\u70b9\u5168\u9009\uff0c $S_i$ \u4ee5\u4e0a\u7684\u7ed3\u70b9\u5168\u4e0d\u9009\u3002\u4e0d\u96be\u770b\u51fa\uff0c\u8fd9\u6837\u9009\u62e9\u5bf9\u865a\u7ebf\u6846\u4e2d\u7684\u7ed3\u70b9\u65e0\u5f71\u54cd\u3002\n\n\u4e8e\u662f\u53ef\u77e5\uff0c\u8fd9\u6837\u9009\u62e9\u4e0d\u4f1a\u5bfc\u81f4\u77db\u76fe\u3002\n\n---\n\n\u8dd1\u5b8ctarjan\u540e\u4e0d\u9700\u8981\u518d\u62d3\u6251\uff0c\u56e0\u4e3atarjan\u6c42\u51fa\u7684scc\u7f16\u53f7\u5c31\u662f**\u9006\u62d3\u6251\u5e8f**\u3002\n\n\u6ce8\u610f\u4e00\u4e0b\uff1a\u82e5\u5c06 $i$ \u96c6\u5408\u62c6\u6210 `i<<1` \u548c `i<<1|1` \u4e24\u4e2a\u70b9\uff0c\u90a3\u4e48\u4ece`2`\u626b\u63cf\u5230`n<<1|1` \u6c42\u51fa\u7684\u62d3\u6251\u5e8f\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4f1a\u51fa\u9505\uff0c\u5927\u6982\u662f\u56e0\u4e3a\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\u7ed3\u70b9\u7684\u62d3\u6251\u5e8f\u4e0d\u8fde\u7eed\u9020\u6210\u7684\u3002\n\n---\n\n$\\text{Code}:$\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <stack>\n#define maxn 2000005\n#define R register\n#define INF 0x3f3f3f3f\nusing namespace std;\ntypedef long long lxl;\n\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') {x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\n\nstruct edge\n{\n\tint u,v,next;\n}e[maxn];\n\nint head[maxn],k;\n\ninline void add(int u,int v)\n{\n\te[k]=(edge){u,v,head[u]};\n\thead[u]=k++;\n}\n\nint n,m,ans[maxn];\nint dfn[maxn],low[maxn],dfs_cnt,scc[maxn],scc_cnt;\nstd::stack<int> S;\nbool vis[maxn];\n\ninline void tarjan(int u)\n{\n\tS.push(u);\n\tdfn[u]=low[u]=++dfs_cnt;\n\tfor(int i=head[u];~i;i=e[i].next)\n\t{\n\t\tint v=e[i].v;\n\t\tif(!dfn[v])\n\t\t{\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if(!scc[v]) low[u]=min(low[u],dfn[v]);\n\t}\n\tif(dfn[u]==low[u])\n\t{\n\t\t++scc_cnt;\n\t\tint x;\n\t\tdo\n\t\t{\n\t\t\tx=S.top();S.pop();\n\t\t\tscc[x]=scc_cnt;\n\t\t} while (x!=u);\n\t}\n}\n\nint main()\n{\n\t// freopen(\"P4782.in\",\"r\",stdin);\n\tn=read(),m=read();\n\tmemset(head,-1,sizeof(head));\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint x=read(),a=read(),y=read(),b=read();\n\t\tadd(x+n*(a&1),y+n*(b^1));\n\t\tadd(y+n*(b&1),x+n*(a^1));\n\t}\n\tfor(int i=1;i<=(n<<1);++i)\n\t\tif(!dfn[i]) tarjan(i);\n\tfor(int i=1;i<=n;++i)\n\t\tif(scc[i]==scc[i+n])\n\t\t{\n\t\t\tputs(\"IMPOSSIBLE\");\n\t\t\treturn 0;\n\t\t}\n\tputs(\"POSSIBLE\");\n\tfor(int i=1;i<=n;++i)\n\t\tprintf(\"%d \",scc[i]<scc[i+n]);\n\treturn 0;\n}\n```\n\n---\n\n\u53c2\u8003\u6587\u732e\uff1a_\u56fd\u5bb6\u96c6\u8bad\u961f2003\u5e74\u8bba\u6587\u96c6\uff1a\u4f0d\u6631--\u7531\u5bf9\u79f0\u6027\u89e32-SAT\u95ee\u9898_\n\n",
        "postTime": 1597067684,
        "uid": 224236,
        "name": "GoPoux4",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4782 \u3010\u3010\u6a21\u677f\u30112-SAT \u95ee\u9898\u3011"
    },
    {
        "content": "upd 2020.9.1\n\n\u66f4\u6362\u7528\u8bcd\u7cbe\u7b80\u4e86\u4ee3\u7801\u3002\u4f46\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e0a\u6b21\u91cd\u65b0\u63d0\u4ea4\u65f6\u628a\u6211\u7684\u9898\u89e3\u7ed9\u64a4\u4e86\u3002\n\n# 2-SAT\u95ee\u9898\n\n[~~\u83b7\u5f97\u66f4\u5dee\u7684\u9605\u8bfb\u4f53\u9a8c~~](https://ignotusjee.github.io/2020/09/08/2-SAT/)\n\n[\u6d1b\u8c374782](https://www.luogu.com.cn/problem/P4782)\n\u9898\u610f\uff1a\u7ed9\u5b9am\u4e2a\u7ea6\u675f\u6761\u4ef6\uff0c\u5f62\u5f0f\u4e3a$x_i,x_j$\uff0c\u8868\u793a$x_i$\u4e3a\u771f/\u5047\u6216$x_j$\u4e3a\u771f/\u5047\uff0c\u7ed9\u6bcf\u4e2a\u53d8\u91cf\u8d4b\u503c\u4f7f\u5f97\u6240\u6709\u6761\u4ef6\u5f97\u5230\u6ee1\u8db3\u3002\n\n### \u65b9\u6cd5\uff1a\n\n\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u56fe\u8bba\u95ee\u9898\u3002\u8bbe$x$\u8868\u793a\u53d8\u91cf$x$\u53d6`false`\uff0c\u00ac$x$\u8868\u793a\u53d8\u91cf$x$\u53d6`true`\u3002\u5efa\u7acb$2 \\times n$\u4e2a\u70b9\uff0c\u8bbe$x_i$\u5bf9\u5e94\u70b9$i$\uff0c\u00ac$x_i$\u5bf9\u5e94\u70b9$i+n$\uff0c\u5219\u8fde\u6709\u5411\u8fb9\u7684\u610f\u4e49\u4e3a\u82e5\u524d\u8005\u6210\u7acb\u5219\u540e\u8005\u5fc5\u6210\u7acb\u3002\u5229\u7528\u7ed9\u51fa\u6761\u4ef6\u8fde\u8fb9\u5efa\u56fe\uff1a\n\n| \u7ea6\u675f\u6761\u4ef6 | \u8fde\u8fb9 |\n| ---- | ---- |\n| $x_i$ or $x_j$ |   $i+n \\rightarrow j , j+n \\rightarrow i$ |\n| \u00ac$x_i$ or $x_j$ |   $i \\rightarrow j , j+n \\rightarrow i+n$ |\n| $x_i$ or \u00ac$x_j$ |   $i+n \\rightarrow j+n , j \\rightarrow i$ |\n| \u00ac$x_i$ or \u00ac$x_j$ |   $i \\rightarrow j+n , j \\rightarrow i+n$ |\n\n**\u4ee5\u4e00\u8a00\u4ee5\u853d\u4e4b\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u7ea6\u675f\uff0c\u82e5\u5176\u4e2d\u4e00\u4e2a\u53d8\u91cf\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u5219\u53e6\u4e00\u4e2a\u5fc5\u987b\u6ee1\u8db3\u3002**\n\u8fde\u8fb9\u4ee3\u7801\u5982\u4e0b~~\u4f4d\u8fd0\u7b97\u6bd2\u7624~~\uff1a\n```cpp\nAddEdge(u+n*(a^1),v+n*(b&1));\nAddEdge(v+n*(b^1),u+n*(a&1));\n```\n\u63a5\u4e0b\u6765\u9700\u8981\u627e\u51fa\u662f\u5426\u6709\u53ef\u884c\u89e3\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c$i$\u662f$j$\u7684\u524d\u9a71\u5f53\u4e14\u4ec5\u5f53$i$\u70b9\u7684\u53d6\u503c\u6761\u4ef6\u6210\u7acb\u65f6$j$\u70b9\u7684\u53d6\u503c\u6761\u4ef6\u6210\u7acb\uff08\u6b64\u5904\u53d6\u503c\u6761\u4ef6\u6307\u70b9\u6240\u6307\u7684\u53d8\u91cf\u4e3a`true`\u6216`false`\uff09\uff0c\u5e76\u4e14\u6709$i$\u70b9\u7684\u53d6\u503c\u6761\u4ef6\u4e0d\u6210\u7acb\u65f6$j$\u70b9\u7684\u53d6\u503c\u6761\u4ef6\u4e0d\u4e00\u5b9a\u6210\u7acb\u3002\u663e\u7136\uff0c\u5f53$x_i$\u548c\u00ac$x_i$\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u65f6\uff0c\u4e0d\u5b58\u5728\u53ef\u884c\u89e3\uff08\u5b58\u5728\u4e92\u76f8\u77db\u76fe\uff09\u3002\u56e0\u6b64\uff0c\u53ea\u8981\u4f7f\u7528$tarjan$\u7f29\u70b9\uff0c\u5728\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u770b\u6709\u6ca1\u6709$i$\u548c$i+n$\u7684\u70b9\u5bf9\u5373\u53ef\u5b9e\u73b0\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nint low[maxn<<1],dfn[maxn<<1],stamp,belong[maxn<<1],cnt;\nint s[maxn<<1],top;\nchar ins[maxn<<1];\nvoid tarjan(int u) {\n\tdfn[u]=low[u]=++stamp;\n\ts[++top]=u;ins[u]=0xff;\n\tfor(R i(head[u]);i;i=e[i].next) {\n\t\tconst int &v=e[i].v;\n\t\tif(!dfn[v]) {\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if(ins[v]) low[u]=min(low[u],dfn[v]);\n\t}\n\tif(dfn[u]==low[u]) {\n\t\tcnt++;\n\t\twhile(s[top+1]!=u) {\n\t\t\tbelong[s[top]]=cnt;\n\t\t\tins[s[top--]]=0x0;\n\t\t}\n\t}\n}\n\nfor(R i(1);i<=n;i++)\n\tif(belong[i]==belong[i+n])\n\t\treturn write(\"IMPOSSIBLE\\n\"),0;\n```\n\u6700\u540e\uff0c\u8981\u627e\u51fa\u4e00\u7ec4\u53ef\u884c\u89e3\u3002\u7531\u4e0a\u6587\u53ef\u77e5\uff0c\u5f53$i$\u4e3a$i+n$\u7684\u524d\u9a71\u65f6\uff0c$x_i$\u53d6`true`\uff1b\u5f53$i+n$\u4e3a$i$\u7684\u524d\u9a71\u65f6\uff0c$x_i$\u53d6`false`\uff08\u8ba9\u524d\u8005\u4e0d\u6210\u7acb\uff0c\u540e\u8005\u6210\u7acb\uff09\u3002\u5728$tarjan$\u65f6\uff0c\u6807\u53f7\u6570\u7ec4`belong`\u5373\u4e3a\u53cd\u5411\u7684\u62d3\u6251\u5e8f\u3002\u56e0\u6b64\uff0c\u901a\u8fc7\u6b64\u6570\u7ec4\u5373\u53ef\u5f97\u51fa\u524d\u9a71\u540e\u7ee7\u5173\u7cfb\uff0c\u5373$i \\text{\u4e3aj\u7684\u524d\u9a71} \\Leftrightarrow belong[i]>belong[j]$\u3002\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nfor(R i(1);i<=n;i++)\n\twrite((int)(belong[i]>belong[i+n]),\" \\n\"[i==n]);\n```\n\n\u6700\u540e\u653e\u51fa\u5b8c\u6574\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <cstring>\n#define R register int\n\nnamespace quick {\n//\u6bd2\u7624\u5feb\u8bfb\n}\nusing namespace quick;\n\nconst int maxn=1e6+20,inf=0x3f3f3f3f;\nint n,m;\n\nstruct Edge {\n\tint v,next;\n\tEdge(int v=0,int next=0) :v(v),next(next) {}\n}e[maxn<<2];\nint head[maxn<<1],k;\ninline void AddEdge(const int &u,const int &v) {\n\te[++k]=Edge(v,head[u]);\n\thead[u]=k;\n}\n\nint low[maxn<<1],dfn[maxn<<1],stamp,belong[maxn<<1],cnt;\nint s[maxn<<1],top;\nchar ins[maxn<<1];\nvoid tarjan(int u) {\n\tdfn[u]=low[u]=++stamp;\n\ts[++top]=u;ins[u]=0xff;\n\tfor(R i(head[u]);i;i=e[i].next) {\n\t\tconst int &v=e[i].v;\n\t\tif(!dfn[v]) {\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if(ins[v]) low[u]=min(low[u],dfn[v]);\n\t}\n\tif(dfn[u]==low[u]) {\n\t\tcnt++;\n\t\twhile(s[top+1]!=u) {\n\t\t\tbelong[s[top]]=cnt;\n\t\t\tins[s[top--]]=0x0;\n\t\t}\n\t}\n}\n\nint main(void) {\n#ifndef ONLINE_JUDGE\n\tfreopen(\"sat.in\",\"r\",stdin);\n#endif\n\tread(n,m);\n\tfor(R i(1);i<=m;i++) {\n\t\tR u,a,v,b;\n\t\tread(u,a,v,b);\n\t\tAddEdge(u+n*(a^1),v+n*(b&1));\n\t\tAddEdge(v+n*(b^1),u+n*(a&1));\n\t}\n\tfor(R i(1);i<=(n<<1);i++) if(!dfn[i]) tarjan(i);\n\tfor(R i(1);i<=n;i++)\n\t\tif(belong[i]==belong[i+n])\n\t\t\treturn write(\"IMPOSSIBLE\\n\"),flush(),0;\n\twrite(\"POSSIBLE\\n\");\n\tfor(R i(1);i<=n;i++)\n\t\twrite((int)(belong[i]>belong[i+n]),\" \\n\"[i==n]);\n\tflush();\n\treturn 0;\n}\n```",
        "postTime": 1597062581,
        "uid": 226485,
        "name": "\u67f3\u82cf\u660e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4782 \u3010\u3010\u6a21\u677f\u30112-SAT \u95ee\u9898\u3011"
    },
    {
        "content": "\u4e0d\u4f1a2-SAT\u7684\u53f3\u8f6c[2-SAT\u7b97\u6cd5\u521d\u6b65](https://www.luogu.org/blog/xukuan/2-SAT)\n\n\u8fd9\u91cc\u91cd\u70b9\u8bb2**\u5efa\u6a21**\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u201c2-SAT\u95ee\u9898\u4e2d\u4e24\u4e2a\u6761\u4ef6\u4e4b\u95f4\u662f\u5f02\u6216\u5173\u7cfb\u201d\n\n\u8fd9\u91cc\u7684\u4e24\u4e2a\u6761\u4ef6\u662f\u6216\u5173\u7cfb\n\n\u90a3\u4e48\u6211\u4eec\u8be5\u5982\u4f55\u5904\u7406\uff1f\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u9009\u62e9\u4e86not A,\u5c31\u5fc5\u987b\u9009\u62e9B\uff1b\u9009\u62e9\u4e86not B\uff0c\u5c31\u5fc5\u987b\u9009\u62e9A\u3002\n\n\u8fd9\u5c31\u6709\u4e00\u4e2a\u5f02\u6216\u5173\u7cfb\u4e86\u3002\n\n\u540c\u65f6\u6ce8\u610f\u8fde\u8fb9\u65f6\u662f\u4e24\u6761\u5355\u5411\u8fb9\n\n\u6700\u540e\uff0c\u8fd9\u91cc\u7684\u5c0f\u4e8e\u548c\u5927\u4e8e\u4e0d\u80fd\u4e71\u7528\uff0c\u56e0\u4e3a\u539f\u9898\u662f\u6216\u5173\u7cfb\n\n**\u4ee3\u7801\uff08\u4e0ei\u5bf9\u5e94\u7684\u72b6\u6001\u662fi+n\uff09**\n\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#define ll long long\nusing namespace std;\n\nconst ll N=1000010<<1,M=1000010<<1;//\u6709n*2\u4e2a\u70b9\nll n,m,deep,color,v[N],dfn[N],low[N],colour[N];\nll ver[M<<1],Next[M<<1],head[N],tot;\nstack<ll> st;\n\ninline ll read(){\n\tll x=0,tmp=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-') tmp=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tx=(x<<3)+(x<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn tmp*x;\n}\n\ninline void addEdge(ll x,ll y){\n\tver[++tot]=y;\n\tNext[tot]=head[x];\n\thead[x]=tot;\n}\n\ninline ll id(ll x,ll y){\n\treturn x+n*(y&1);\n}\n\n//tarjan\u90e8\u5206\u4e0e\u7f29\u70b9\u65e0\u5f02\nvoid tarjan(ll x){\n\tdfn[x]=low[x]=++deep;\n\tv[x]=1; st.push(x);\n\tfor(ll i=head[x]; i; i=Next[i]){\n\t\tll y=ver[i];\n\t\tif(!dfn[y]){\n\t\t\ttarjan(y);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t}\n\t\telse{\n\t\t\tif(v[y]) low[x]=min(low[x],dfn[y]);\n\t\t}\n\t}\n\tif(dfn[x]==low[x]){\n\t\tcolour[x]=++color;\n\t\tv[x]=0;\n\t\twhile(st.top()!=x){\n\t\t\tcolour[st.top()]=color;\n\t\t\tv[st.top()]=0;\n\t\t\tst.pop();\n\t\t}\n\t\tst.pop();\n\t}\n}\n\nint main(){\n\tn=read(); m=read();\n\twhile(m--){\n\t\tll x1=read(),x2=read(),Y1=read(),y2=read();\n\t\taddEdge(id(x1,x2),id(Y1,y2^1));\n\t\taddEdge(id(Y1,y2),id(x1,x2^1));\n\t\t//\u5efa\u6a21\uff0c\u6ce8\u610f\u662f\u4e24\u6761\u5355\u5411\u8fb9\n\t}\n\tfor(ll i=1; i<=n*2; i++){//\u6709n*2\u4e2a\u70b9\n\t\tif(!dfn[i]) tarjan(i);\n\t}\n\tfor(ll i=1; i<=n; i++){\n\t\tif(colour[i]==colour[i+n]) return printf(\"IMPOSSIBLE\")&0;\n\t\t//\u4e24\u4e2a\u72b6\u6001\u5728\u540c\u4e00\u4e2a\u73af\u91cc\n\t}\n\tprintf(\"POSSIBLE\\n\");\n\tfor(ll i=1; i<=n; i++){\n\t\tputchar((colour[i]<colour[i+n])+'0');\n\t\tputchar(' ');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1568725099,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4782 \u3010\u3010\u6a21\u677f\u30112-SAT \u95ee\u9898\u3011"
    },
    {
        "content": "# \u535a\u5ba2\u9605\u8bfb\u66f4\u4f73\r\n[My Blog](https://blog.csdn.net/init1064573673/article/details/116357182)\r\n\r\n# \u9898\u89e3\r\n### \u8fde\u8fb9\r\n* \u5b9a\u4e49\u70b9 $x$ \u8868\u793a$(x-(x>n)*n)=(x>n)$\uff0c\u4e5f\u5c31\u662f\uff1a\r\n* \u5982\u679c\u70b9 $x\\leq n$\uff0c\u5219\u4ee3\u8868\u7b2c $x$ \u4e2a\u6570\u4e3a $0$\u3002\r\n* \u5982\u679c\u70b9 $x\\geq n+1$\uff0c\u5219\u4ee3\u8868\u7b2c $x-n$ \u4e2a\u6570\u4e3a $1$\u3002\r\n* \u5b9a\u4e49\u8fb9 ($x,y$) \u7531 $(x-(x>n)*n)=(x>n)$ \u53ef\u4ee5\u63a8\u51fa $(y-(y>n)*n)=(y>n)$\u3002\r\n\r\n\u5bf9\u4e8e\u6761\u4ef6 ($x=a||y=b$)\uff0c\u6211\u4eec\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff1a\r\n$$x=a\\ xor\\ 1\\rightarrow y=b$$\r\n$$y=b\\ xor\\ 1\\rightarrow x=a$$\r\n\u7531\u6b64\u6211\u4eec\u5c31\u77e5\u9053\u4e86\u8be5\u600e\u4e48\u8fde\u8fb9\u3002\r\n\r\n```cpp\r\nadd(x + (a ^ 1) * n,y + b * n);\r\nadd(y + (b ^ 1) * n,x + a * n);\r\n```\r\n### \u5224\u65e0\u89e3\r\n\u4e8e\u662f\u8fde\u5b8c\u540e\uff0c\u6211\u4eec\u8dd1\u4e00\u904dtarjan\uff0c\u6c42\u51fa\u5176\u4e2d\u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u5982\u679c $x$ \u548c $x+n$ \u540c\u5904\u4e8e\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185\uff0c\u90a3\u4e48\u663e\u7136\u65e0\u89e3\u3002\u539f\u56e0\u5f88\u663e\u7136\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u4ece $x=0$ \u63a8\u51fa\u4e86 $x = 1$\u3002\r\n### \u6784\u9020\u503c\r\n\u63a5\u4e0b\u6765\u662f\u6784\u9020\u503c\u7684\u95ee\u9898\u3002\r\n\u6211\u7528\u7684\u662f\u5c0f\u84dd\u4e66\u7684\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8d58\u8ff0\u539f\u7406\u4e86\u3002\r\n# \u4ee3\u7801\r\n\r\n```cpp\r\n#include<cstdio>\r\n#include<iostream>\r\nusing std::min;\r\nconst int N = 2e6 + 5;\r\nstruct edge {\r\n\tint next,to;\r\n}a[N << 1];\r\nint head[N],opp[N],n,m,a_size = 1;\r\ninline void add(int u,int v) {\r\n\ta[++a_size] = (edge){head[u],v};\r\n\thead[u] = a_size;\r\n}\r\nint dfn[N],low[N],sta[N],c[N],top = 0,cnt = 0,num = 0;\r\nbool ins[N];\r\nvoid tarjan(int x) {\r\n\tdfn[x] = low[x] = ++num;\r\n\tsta[++top] = x; ins[x] = true;\r\n\tfor(int i = head[x]; i; i = a[i].next) {\r\n\t\tint y = a[i].to;\r\n\t\tif(!dfn[y]) {\r\n\t\t\ttarjan(y);\r\n\t\t\tlow[x] = min(low[x],low[y]);\r\n\t\t}\r\n\t\telse if(ins[y])\r\n\t\t\tlow[x] = min(low[x],dfn[y]); \r\n\t}\r\n\tif(dfn[x] == low[x]) {\r\n\t\tint y; cnt++;\r\n\t\tdo {\r\n\t\t\ty = sta[top--]; ins[y] = false;\r\n\t\t\tc[y] = cnt;\r\n\t\t}while(x != y);\r\n\t}\r\n}\r\ninline int read() {\r\n\tint x = 0,flag = 1;\r\n\tchar ch = getchar();\r\n\twhile(ch < '0' || ch > '9'){if(ch == '-')flag = -1;ch = getchar();}\r\n\twhile(ch >='0' && ch <='9'){x = (x << 3) + (x << 1) + ch - 48;ch = getchar();}\r\n\treturn x * flag;\r\n}\r\nint main() {\r\n\tn = read(),m = read();\r\n\tfor(int i = 1; i <= m; i++) {\r\n\t\tint x = read(),a = read(),y = read(),b = read();\r\n\t\tadd(x + (a ^ 1) * n,y + b * n);\r\n\t\tadd(y + (b ^ 1) * n,x + a * n);\r\n\t} n <<= 1;\r\n\tfor(int i = 1; i <= n; i++)\r\n\t\tif(!dfn[i]) tarjan(i);\r\n\tn >>= 1;\r\n\tfor(int i = 1; i <= n; i++)\r\n\t\tif(c[i] == c[i + n]) {puts(\"IMPOSSIBLE\"); return 0;}\r\n\tputs(\"POSSIBLE\");\r\n\tfor(int i = 1; i <= n; i++)\r\n\t\tprintf(\"%d \",c[i] > c[n + i]);\r\n\treturn 0;\r\n} \r\n```\r\n",
        "postTime": 1619964286,
        "uid": 385145,
        "name": "\u795e\u7737\u4e4b\u6a31\u82b1",
        "ccfLevel": 4,
        "title": "P4782 \u9898\u89e3"
    },
    {
        "content": "### ~~\u6211\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u5728\u8fd9\u9053\u9898\u4e0a\u6b7b\u4e86\u591a\u5c11\u6b21\u3002\u3002\u3002~~\n\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u8fd9\u9053\u9898\u662f\u4e00\u4e2a2-SAT\u7684\u6a21\u677f\u9898\uff08\u4e0d\u77e5\u90532-SAT\u662f\u4ec0\u4e48\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5\u53bb\u7f51\u4e0a\u627e\u627e\uff0cXie_BR\u5728\u6b64\u4e0d\u505a\u8fc7\u591a\u7684\u89e3\u91ca\uff09  \n\n### \u9996\u5148  \n\u5bf9\u4e8e2-SAT\u6765\u8bf4\uff0cXie_BR\u5efa\u8bae\u4f7f\u7528   \n  # Tarjan + Topsort  \n\u8fd9\u662f\u5f88\u597d\u5f88\u597d\u7684\u65b9\u6cd5\uff0c\u7b80\u5355\u660e\u4e86\uff0c~~\u53ea\u6709200\u884c~~  \n\n\u5148\u5efa\u8fb9\uff0c\u901a\u8fc7\u903b\u8f91\u63a8\u7406\uff0c\u53d1\u73b01\u62160\u7684\u5173\u7cfb\u539f\u6765\u53ef\u4ee5\u8fd9\u4e48\u5efa\u8fb9\uff1a  \n```cpp\nint x,a,y,b;\nscanf(\"%d%d%d%d\",&x,&a,&y,&b);\nif(a)\n{\n\tif(b)\n\t{\n\t\tadd(x+n,y);\n\t\tadd(y+n,x);\n\t}else\n\t{\n\t\tadd(y,x);\n\t\tadd(x+n,y+n);\n\t}\n}else\n{\n\tif(b)\n\t{\n\t\tadd(x,y);\n        add(y+n,x+n);\n\t}else\n\t{\n\t\tadd(x,y+n);\n\t\tadd(y,x+n);\n\t}\n}\n```\n\n\u7136\u540e\u6211\u4eec\u9700\u8981\u901a\u8fc7tarjan+\u7f29\u70b9\u5408\u5e76\u73af\uff0c\u6700\u540e\u8ba1\u6570\u3002\n\n# \u5728\u6b64\u5341\u5206\u611f\u8c22spj\uff01\uff01\uff01\n\n\u6700\u540e\uff0c\u6211\u4eec\u6765\u770b\u770b  \n# AC\u4ee3\u7801\uff1a  \n```cpp\n#include<bits/stdc++.h>\n#define MK 5000010\nusing namespace std;\nint n,m;\n\nstruct edge\n{\n\tint to,next,f;\n}e[MK*2];\n\nint h[MK],ei = 0;\n\nvoid add(int x,int y)\n{\n\tei++;\n\te[ei].to = y;\n\te[ei].f = x;\n\te[ei].next = h[x];\n\th[x] = ei;\n}\n\nstack<int>st;\nint dfn[MK],cnt[MK],stindex = 0,tmindex = 0,indegree[MK];\nint low[MK],team[MK],col[MK];\n\nvoid tarjan(int f)\n{\n\tstindex++;\n\tlow[f] = dfn[f] = stindex;\n\tst.push(f);\n\tfor(int i=h[f];i;i=e[i].next)\n\t{\n\t\tint to = e[i].to;\n\t\tif(dfn[to]==0)\n\t\t{\n\t\t\ttarjan(to);\n\t\t\tlow[f] = min(low[f],low[to]);\n\t\t}else\n\t\t{\n\t\t\tif(team[to]==0)\n\t\t\t{\n\t\t\t\tlow[f] = min(low[f],dfn[to]);\n\t\t\t}\n\t\t}\n\t}\n\tif(low[f] == dfn[f])\n\t{\n\t\ttmindex++;\n\t\twhile(1)\n\t\t{\n\t\t\tint top = st.top();\n\t\t\tst.pop();\n\t\t\tteam[top] = tmindex;\n\t\t\tcnt[tmindex]++;\n\t\t\tif(top==f)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn; \n}\n\nint opt[MK];\n\nint check()\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(team[i]==team[i+n])\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t\topt[team[i]] = team[i+n];\n\t\topt[team[i+n]] = team[i];\n\t}\n\treturn 1;\n}\n\nvoid suodian()\n{\n\tmemset(h,0,sizeof(h));\n\tint newei = ei;\n\tei = 0;\n\tfor(register int i=1;i<=newei;i++)\n\t{\n\t\tint f = e[i].f;\n\t\tint to = e[i].to;\n\t\tif(team[f]==team[to])\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tindegree[team[f]]++;\n\t\tadd(team[to],team[f]);\n\t}\n\treturn;\n}\n\nvoid topsort()\n{\n\tqueue<int>qu;\n\tfor(int i=1;i<=tmindex;i++)\n\t{\n\t\tif(indegree[i]==0)\n\t\t{\n\t\t\tqu.push(i);\n\t\t}\n\t}\n\twhile(!qu.empty())\n\t{\n\t\tint f1 = qu.front();\n\t\tqu.pop();\n\t\tif(col[f1]==0)\n\t\t{\n\t\t\tcol[f1] = 1;\n\t\t\tcol[opt[f1]] = 2;\n\t\t}\n\t\tfor(int i=h[f1];i;i=e[i].next)\n\t\t{\n\t\t\tint to = e[i].to;\n\t\t\tindegree[to]--;\n\t\t\tif(indegree[to]==0)\n\t\t\t{\n\t\t\t\tqu.push(to);\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\n\nvoid out()\n{\n\tprintf(\"POSSIBLE\\n\");\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(col[team[i]]==1)\n\t\t{\n\t\t\tprintf(\"1 \");\n\t\t}else\n\t\t{\n\t\t\tprintf(\"0 \");\n\t\t}\n\t}\n\treturn;\n}\n\nvoid dotarjan()\n{\n\tfor(int i=1;i<=2*n;i++)\n\t{\n\t\tif(!dfn[i])\n\t\t{\n\t\t\ttarjan(i);\n\t\t}\n\t}\n\treturn;\n}\n\nsigned main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\twhile(m--)\n\t{\n\t\tint x,a,y,b;\n\t\tscanf(\"%d%d%d%d\",&x,&a,&y,&b);\n\t\tif(a)\n\t\t{\n\t\t\tif(b)\n\t\t\t{\n\t\t\t\tadd(x+n,y);\n\t\t\t\tadd(y+n,x);\n\t\t\t}else\n\t\t\t{\n\t\t\t\tadd(y,x);\n\t\t\t\tadd(x+n,y+n);\n\t\t\t}\n\t\t}else\n\t\t{\n\t\t\tif(b)\n\t\t\t{\n\t\t\t\tadd(x,y);\n\t\t\t\tadd(y+n,x+n);\n\t\t\t}else\n\t\t\t{\n\t\t\t\tadd(x,y+n);\n\t\t\t\tadd(y,x+n);\n\t\t\t}\n\t\t}\n\t}\n\tdotarjan();\n\tif(!check())\n\t{\n\t\tprintf(\"IMPOSSIBLE\\n\");\n\t\treturn 0;\n\t}\n\tsuodian();\n\ttopsort();\n\tout();\n\treturn 0;\n} \n```\n\n\u4e0d\u591a\u4e0d\u591a\uff0c\u4e5f\u5c31200\u884c\u3002  \n\u849f\u84bb\u7684\u60f3\u6cd5\u53ef\u80fd\u548c\u5e7c\u7a1a\uff0c\u5927\u4f6c\u6307\u6559\u554a\u554a\u554a\u554a\u554a\u554a\u554a\u554a\u554a\uff01\uff01\uff01",
        "postTime": 1565699746,
        "uid": 90646,
        "name": "Xie_BR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4782 \u3010\u3010\u6a21\u677f\u30112-SAT \u95ee\u9898\u3011"
    }
]