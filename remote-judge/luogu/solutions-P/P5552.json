[
    {
        "content": "~~\u6bd4\u8d5b\u7ed3\u675f\u8fd9\u4e48\u4e45\u4e00\u76f4\u5fd8\u4e86\u628a\u5b98\u65b9\u9898\u89e3\u653e\u4e0a\u6765~~\n\n\u9898\u76ee\u5f52\u7eb3\u4e3a\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u5faa\u73af\u961f\u5217\uff0c\u6bcf\u6b21\u6bd4\u8f83\u961f\u5934\u7684\u4e24\u4e2a\u5143\u7d20 $p1,p2$\uff0c\u8ddd\u79bb\u5f53\u524d\u6307\u9488\u7684\u4f4d\u7f6e\uff0c\u5982\u679c $p1$ \u4e0d\u6bd4 $p2$ \u8fdc\uff0c\u4ee4\u6307\u9488\u6307\u5411 $p1$, \u5e76\u5f39\u51fa\u961f\u5217\uff0c\u5426\u5219\u5c06 $p1$ \u653e\u56de\u961f\u5c3e\n\u7edf\u8ba1\u6307\u9488\u79fb\u52a8\u8ddd\u79bb\n\n\u6a21\u62df\u53ef\u4ee5\u83b7\u5f97$30$\u5206\n\n\u56e0\u4e3a\u6bcf\u4e2a\u5143\u7d20\u53ea\u4f1a\u51fa\u961f\u4e00\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4f18\u5316\u5bfb\u627e\u4e0b\u4e00\u4e2a\u51fa\u961f\u5143\u7d20\u7684\u8fc7\u7a0b\n\n\u8003\u8651\u4e8c\u5206\uff0c\u4f46\u662f\u8fd9\u6ca1\u6709\u5355\u8c03\u6027\u554a\uff0c\u6bd4\u5982\u6211\u53ef\u80fd\u5728\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u505c\u4e0b\uff0c\u5374\u4e0d\u4e00\u5b9a\n\u80fd\u5728\u7b2c $i + 1$ \u4e2a\u4f4d\u7f6e\u505c\u4e0b\u554a\u3002\n\u6362\u4e00\u79cd\u5224\u65ad\u65b9\u5f0f\uff0c\u5982\u679c\u6211\u4eec\u4f1a\u5728\u533a\u95f4 $[1, i]$ \u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\u505c\u4e0b\uff0c\n\u5c31\u4e00\u5b9a\u4f1a\u5728\u533a\u95f4 $[1, i + 1]$ \u7684\u67d0\u4e2a\u4f4d\u7f6e\u505c\u4e0b\n\u6240\u4ee5\u5982\u4f55\u5224\u65ad\u5bf9\u4e8e\u5f53\u524d\u6307\u9488 $s$\uff0c\u6211\u4eec\u662f\u5426\u4f1a\u5728\u533a\u95f4 $[1, i]$ \u505c\u4e0b\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u76f8\u90bb\u7684\u4e24\u4e2a\u5143\u7d20 $pi, pi+1$\uff0c\u662f\u53ef\u4ee5\u627e\u5230\u4e00\u6761\uff0c\u5206\u754c\u7ebf\u7684\uff0c\u5176\u4e2d\u5206\u754c\u7ebf\u7684\u4e00\u4fa7\u90fd\u4f1a\u88ab\u62e6\u4e0b\u6765\uff0c\u800c\u53e6\u4e00\u4fa7\u90fd\u53ef\u4ee5\u901a\u8fc7\n\n\u6211\u53ef\u4ee5\u7ef4\u62a4\u533a\u95f4\u4e2d\u5206\u754c\u7ebf\u7684\u4ea4\u96c6\uff01\u7ebf\u6bb5\u6811\u5373\u53ef\n\n\u6240\u4ee5\u601d\u8def\u5c31\u662f\u5148\u4e8c\u5206\uff0c\u7136\u540e\u5224\u65ad\u533a\u95f4\u7684\u4ea4\u96c6\u662f\u5426\u80fd\u62e6\u4e0b\u4ece$ s$ \u5904\u51fa\u53d1\u7684\u8001\u5e08\n\n\u6700\u7ec8\u590d\u6742\u5ea6$O(nlog^2n)$\n\n\u5982\u679c\u5199\u4e86\u6b63\u89e3\u8fd8\u662f $TLE$ \u53ef\u80fd\u53ea\u662f\u5e38\u6570\u8fc7\u5927(\uff0c$std$ \u6ca1\u6709\u52a0\u5feb\u8bfb\u4ecd\u7136\u53ea\u5728 $2s$ \u5185\u5b8c\u6210\u4e86",
        "postTime": 1578921389,
        "uid": 48265,
        "name": "decoqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5552 \u3010Chino\u7684\u8bd5\u5377\u3011"
    },
    {
        "content": "\u5199\u592a\u591a\u4e86\uff0c\u603b\u4f53\u800c\u8a00\u662f\u4e0b\u9762\u8fd9\u53e5\u8bdd\u3002\n\n```\n\u4e00\u53e5\u8bdd\u9898\u89e3\uff1a\u76f8\u90bb\u4e24\u5f20\u8bd5\u5377\u7684\u4e2d\u70b9\u4e0es\u7684\u5173\u7cfb\uff0c\u51b3\u5b9a\u4e86\u524d\u4e00\u5f20\u8bd5\u5377\u662f\u5426\u80fd\u53d1\u653e\u3002\n\u7528\u7ebf\u6bb5\u6811\u7b49\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u4e2d\u70b9\u5373\u53ef\u3002\n\u5269\u4e0b\u7684\u5c31\u662f\u6a21\u62df\u4e86\u3002\n```\n\n\u8fd9\u9898\u6700\u91cd\u8981\u7684\u90e8\u5206\u662f\u8fd9\u4e2a\u6027\u8d28\uff1a\n\n\u6211\u4eec\u73b0\u5728\u6ca1\u53d1\u7684\u8bd5\u5377\u5e8f\u5217\u662f $p$ \u3002\n\n\u5bf9\u4e8e $p[1],p[2]$ \uff0c\u6c42\u51fa\u4e24\u6570\u8fde\u7ebf\u4e2d\u70b9 $mid=\\frac{(p[1]+p[2])}{2}$ \u3002 \u5982\u679c $p[1]<p[2]$ \uff0c\u5219\u5f53\u4e14\u4ec5\u5f53 $s\\le mid$ \u65f6\uff0c\u4f1a\u53d1\u6389 $p[1]$ \uff0c\u540c\u7406 \uff0c\u82e5 $p[1]>p[2]$ \u65f6\uff0c$s\\ge mid$ \u624d\u4f1a\u9009\u62e9\u53d1\u6389 $p[1]$ \u3002\n\n\u90a3\u4e48\u521b\u5efa\u4e24\u4e2a\u4e2d\u70b9\u5e8f\u5217 $a,b$ \uff0c\u4e00\u4e2a\u5e8f\u5217\u7684\u4e2d\u70b9\u8868\u793a\u5f53 $s\\le a[i]$ \u65f6\uff0c\u53ef\u4ee5\u53d1\u6389 $a[i]$ \u6240\u5bf9\u5e94\u7684\u4e24\u5f20\u5377\u5b50\u7684\u7b2c\u4e00\u4efd\u5377\u5b50\u3002\u53e6\u4e00\u4e2a\u540c\u7406\uff0c\u5728 $s\\ge b[i]$ \u65f6\uff0c\u53ef\u4ee5\u53d1\u6389\u5bf9\u5e94\u4e24\u5f20\u4e2d\u7684\u524d\u4e00\u5f20\u3002\n\n\u53ef\u4ee5\u660e\u786e\u7684\u662f\uff0c\u5bf9\u4e8e\u76f8\u90bb\u4e24\u5f20\u5377\u5b50\u6765\u8bf4\uff0c\u5c31\u4f1a\u6709\u4e00\u4e2a\u4e2d\u70b9\u4ec5\u5b58\u5728\u4e8e $a$ \u6216\u8005\u662f $b$ \u4e2d\u3002\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u8981\u627e\u5230\u7684\u662f\uff0c\u5f53\u524d\u4e24\u4e2a\u5e8f\u5217\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u53d1\u6389\u5377\u5b50\u7684\u5bf9\u5e94\u4e2d\u70b9\u7684\u4f4d\u7f6e\u3002\u8fd9\u4e00\u90e8\u5206\u53ef\u4ee5\u7528\u4e24 \u7ebf\u6bb5\u6811/\u5e73\u8861\u6811 \u7ef4\u62a4\uff0c\u7136\u540e \u7ebf\u6bb5\u6811/\u5e73\u8861\u6811 \u4e8c\u5206 \u627e\u5230\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u70b9 $x$ \uff0c\u5728\u8fd9\u4e2a\u70b9\u524d\u9762\u70b9\u4f1a\u88ab\u96c6\u4f53\u79fb\u52a8\u5230\u5e8f\u5217\u672b\u7aef\uff08\u56e0\u4e3a\u524d\u9762\u7684\u5377\u5b50\u88ab\u653e\u5230\u4e86\u5377\u5b50\u5806\u7684\u672b\u7aef\uff0c\u5bf9\u5e94\u7684\u4e2d\u70b9\u4e5f\u4f1a\u88ab\u63d0\u5230\u672b\u7aef\uff09\uff0c\u5e76\u4e14\u56e0\u4e3a\u8fd9\u4e2a\u70b9\u7684\u5bf9\u5e94\u7684\u7b2c\u4e00\u4efd\u5377\u5b50\u88ab\u53d1\u6389\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u4e5f\u5c31\u4e0d\u5b58\u5728\u4e86\uff0c\u800c\u4e14\u8fd9\u4e2a\u70b9\u7684\u4e0a\u4e00\u4e2a\u70b9\u4e5f\u56e0\u4e3a\u7b2c\u4e8c\u4efd\u5377\u5b50\u88ab\u53d1\u6389\u4e5f\u4e0d\u5b58\u5728\u4e86\uff0c\u4f46\u662f\u540c\u65f6\u53c8\u4f1a\u521b\u9020\u4e00\u4e2a\u65b0\u7684\u70b9\uff0c\u4e5f\u5c31\u662f\u65b0\u7684\u76f8\u90bb\u4e24\u5f20\u5377\u5b50\u53c8\u4f1a\u4ea7\u751f\u65b0\u7684\u4e2d\u70b9\u3002\n\n\u90a3\u4e48\u73b0\u5728\u6700\u56f0\u96be\u7684\u662f\u5982\u4f55\u628a\u4e00\u6bb5\u5e8f\u5217\u6574\u4f53\u79fb\u52a8\u5230\u672b\u5c3e\uff0c\u5bf9\u4e8e\u5e73\u8861\u6811(splay)\u6765\u8bf4\u5f88\u597d\u529e\u76f4\u63a5\u628a\u524d\u9762\u63a5\u5230\u540e\u9762\u5c31\u884c\u4e86\uff0c\u4f46\u662f\u8fd9\u91cc\u9009\u62e9\u7528\u7ebf\u6bb5\u6811\u4e5f\u5f88\u7b80\u5355\uff0c\u53ef\u4ee5\u76f4\u63a5\u5148\u67e5\u8be2\u540e\u533a\u95f4\uff0c\u518d\u67e5\u8be2\u524d\u9762\u7684\u533a\u95f4\uff0c\u5c31\u7b49\u540c\u4e0e\u628a\u524d\u9762\u533a\u95f4\u63a5\u5230\u540e\u9762\u4e86\uff0c\u7ed9\u540e\u533a\u95f4\u7684\u67e5\u8be2\u5230\u7684\u7b54\u6848\u9644\u4e0a\u66f4\u9ad8\u7684\u4f18\u5148\u7ea7\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5f88\u957f\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u628a\u4e24\u68f5\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u4f46\u662f\u51ac\u5929\u4e86\u8111\u5b50\u4e0d\u7075\u901a\uff0c\u5c31\u66b4\u529b\u65e0\u8111\u4e86\u3002\u590d\u6742\u5ea6 $O(nlogn)$ \u3002\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\nvoid read(int &an){\n    char ch=getchar();an=0;\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9')an=(an<<3)+(an<<1)+ch-'0',ch=getchar();\n}\n\nconst int inf=1e7;\nconst int MAXN=1e6+2;\nint n;\nint maxn[12*MAXN],minn[12*MAXN];\nint p=1,s;\nint a[3*MAXN];\n\nvoid updatemax(int l,int r,int x,int v,int id){\n    if(l==r){\n        maxn[id]=v;return ;\n    }\n    int mid=(l+r)/2;\n    if(mid>=x)updatemax(l,mid,x,v,id*2);\n    else updatemax(mid+1,r,x,v,id*2+1);\n    maxn[id]=min(maxn[id*2],maxn[id*2+1]);\n}\n\nvoid updatemin(int l,int r,int x,int v,int id){\n    if(l==r){\n        minn[id]=v;return ;\n    }\n    int mid=(l+r)/2;\n    if(mid>=x)updatemin(l,mid,x,v,id*2);\n    else updatemin(mid+1,r,x,v,id*2+1);\n    minn[id]=max(minn[id*2],minn[id*2+1]);\n}\n\nint querymax(int l,int r,int v,int id){\n    if(l==r){\n        if(maxn[id]>v)return -1;\n        return l;\n    }\n    int mid=(l+r)/2;\n    if(maxn[id*2]<=v)return querymax(l,mid,v,id*2);\n    else{\n        if(maxn[id*2+1]>v)return -1;\n        return querymax(mid+1,r,v,id*2+1);\n    }\n}\n\nint querymin(int l,int r,int v,int id){\n    if(l==r){\n        if(minn[id]<v)return -1;\n        return l;\n    }\n    int mid=(l+r)/2;\n    if(minn[id*2]>=v)return querymin(l,mid,v,id*2);\n    else {\n        if(minn[id*2+1]<v)return -1;\n        return querymin(mid+1,r,v,id*2+1);\n    }\n}\n\nint querymax(int l,int r,int z,int y,int v,int id){\n    if(l==z&&r==y){\n        int an=querymax(l,r,v,id);\n        return an;\n    }\n    int mid=(l+r)/2;\n    if(mid>=y)return querymax(l,mid,z,y,v,id*2);\n    else if(mid<z)return querymax(mid+1,r,z,y,v,id*2+1);\n    else{\n        int an=querymax(l,mid,z,mid,v,id*2);\n        if(an!=-1)return an;\n        return querymax(mid+1,r,mid+1,y,v,id*2+1);\n    }\n}\nint querymin(int l,int r,int z,int y,int v,int id){\n    if(l==z&&r==y){\n        int an=querymin(l,r,v,id);\n        return an;\n    }\n    int mid=(l+r)/2;\n    if(mid>=y)return querymin(l,mid,z,y,v,id*2);\n    else if(mid<z)return querymin(mid+1,r,z,y,v,id*2+1);\n    else{\n        int an=querymin(l,mid,z,mid,v,id*2);\n        if(an!=-1)return an;\n        return querymin(mid+1,r,mid+1,y,v,id*2+1);\n    }\n}\n\nvoid up(int l,int r,int x){\n    if(a[l]>a[r]){\n        int v=(a[l]+a[r]+1)/2;\n        updatemax(1,n,x,v,1);\n        updatemin(1,n,x,-inf,1);\n    }\n    else{\n        int v=(a[l]+a[r])/2;\n        updatemin(1,n,x,v,1);\n        updatemax(1,n,x,inf,1);\n    }\n}\n\nint nxt[3*MAXN],last[3*MAXN];\n\nlong long ans;\n\nint main(){\n\n    read(n),read(s);\n    for(int i=1;i<=n;i++)read(a[i]);\n    if(n==1){\n        printf(\"%d\\n\",abs(s-a[1]));\n        return 0;\n    }\n\n    for(register int i=1;i<=n;i++){\n        int ni=i+1;if(ni>n)ni=1;\n        nxt[i]=ni;\n        last[ni]=i;\n        up(i,ni,i);\n    }\n\n    for(register int i=1;i<=n;i++){\n        int mx,mi;\n        mx=querymax(1,n,p,n,s,1);\n        mi=querymin(1,n,p,n,s,1);\n        if(mx==-1&&mi==-1){\n            mx=querymax(1,n,1,p-1,s,1);\n            mi=querymin(1,n,1,p-1,s,1);\n        }\n        int an=0;\n        if(mx==-1&&mi>0)an=mi;\n        else if(mi==-1&&mx>0)an=mx;\n        else{an=min(mx,mi);}\n        \n        ans+=abs(a[an]-s);\n        s=a[an],p=an;\n        int nl=last[an],nr=nxt[an];\n\n        if(nr==nl){\n            ans+=abs(s-a[nl]);\n            break;\n        }\n\n        updatemax(1,n,an,inf,1);\n        updatemin(1,n,an,-inf,1);\n\n        up(nl,nr,nl);\n        nxt[nl]=nr;\n        last[nr]=nl;\n    }\n\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n\n```\n",
        "postTime": 1577365937,
        "uid": 34663,
        "name": "redegg",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5552 \u3010Chino\u7684\u8bd5\u5377\u3011"
    }
]