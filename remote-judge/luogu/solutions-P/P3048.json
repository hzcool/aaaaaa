[
    {
        "content": "## \u5199\u4e86\u4e2a\u66b4\u529b\u7136\u540e\u7eff\u4e86\uff01\uff01\uff01QAQ\n\n~~\u66b4\u98ce\u54ed\u6ce3\u545c\u545c\u545c~~\n\n---\n\u9996\u5148\uff0c\n\n\u6bcf\u6b21\u627e\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u5e8f\u5217\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u524d\u9762\u662f0\u76841\uff0c\uff08\u6700\u9ad8\u4f4d1\u7684\u524d\u9762\u4e5f\u662f0\uff09\n\n\u7136\u540e\u628a\u8fd9\u4e2a0\u4e0e1\u7684\u4f4d\u7f6e\u4e92\u6362\uff0c\u518d\u8ba9\u8fd9\u4e2a\u96f6\u540e\u9762\u76841\u5168\u90e8\u5728\u6700\u540e\u3002\n\n(\u8fd9\u6837\u8bf4\u53ef\u80fd\u6709\u70b9\u62bd\u8c61\uff0c\uff0c\u6211\u4eec\u6765\u770b\u4e0b\u6837\u4f8b\uff01\uff01\n\n111\n\n1011\n\n1101\n\n1110\n\n10011\n\n10101\n\n10110\n\n\u5e94\u8be5\u5f88\u597d\u61c2\u53ed\uff01\u6bd4\u59821110\u523010011\u7684\u65f6\u5019\uff0c\u5c31\u662f\u628a\u6700\u9ad8\u4f4d\u4e00\u548c\u524d\u9762\u76840\u4e92\u6362\u4f4d\u7f6e\uff0c\u518d\u5c06\u540e\u9762\u6700\u540e\u51e0\u4f4d\u5168\u90e8\u6539\u4e3a0\u3002\n\n\u76f4\u63a5\u8bb0\u5f55\u4e8c\u8fdb\u5236\u6bcf\u4f4d\u5e76\u4e0d\u65b9\u4fbf\uff0c\u4f46\u53ef\u4ee5\u8003\u8651\u6765\u8bb0\u5f55\u6bcf\u4e2a1\u7684\u6240\u5728\u4f4d\u7f6e\u3002\n\n\u5982\u679c\u5f53\u524d1\u7684\u4f4d\u7f6e+1\u4e0d\u7b49\u4e8e\u4e0b\u4e00\u4f4d1\u7684\u4f4d\u7f6e\uff0c\u5c31\u8bf4\u660e\u524d\u9762\u662f\u7a7a\u7684\u3002\u90a3\u4e48\u6211\u4eec\u4e92\u6362\u8fd9\u4e24\u4e2a\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u628a\u524d\u9762\u76841\u5f04\u5230\u6700\u524d\u9762\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u904d\u5386\u7684\u65f6\u5019\u5728\u524d\u9762\u8ba91\u7684\u4f4d\u7f6e\u7b49\u4e8e\u6570\u7ec4\u4e0b\u6807\u5373\u53ef\u3002\u5982\u679c\u627e\u5230\u4e86\u53ef\u4e92\u6362\u7684\u5c31break\u6389\u3002\n\n\u6700\u9ad8\u590d\u6742\u5ea6O(n*k)\uff0c\n\n---\n## \u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,k,rec[15];\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=k;i++) rec[i]=i;\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=k;j++)\n\t\t{\n\t\t\tif(rec[j]+1!=rec[j+1]) {++rec[j];break;}\n\t\t\telse rec[j]=j;\n\t\t}\n\t}\n\tfor(int i=rec[k];i;i--)\n\t{\n\t\tif(rec[k]==i) { cout<<\"1\";--k; }\n\t\telse cout<<\"0\";\n\t}\n}\n```",
        "postTime": 1544339042,
        "uid": 107960,
        "name": "\u695a\u6ceb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3048 \u3010[USACO12FEB]\u725b\u7684IDCow IDs\u3011"
    },
    {
        "content": "#### \u672c\u6765\u662f\u4e3a\u4e86\u7ec3\u4e60\u4f4d\u8fd0\u7b97\u624d\u627e\u5230\u6b64\u9898\u7684\uff0c\u4f46\u6211\u53d1\u73b0\u8fd9\u8ddf\u4f4d\u8fd0\u7b97\u5173\u7cfb\u5e76\u4e0d\u5927\uff0c\u4e0d\u8fc7\u7ec3\u4e00\u7ec3\u7ec4\u5408\u6570\u5b66\u4e5f\u5e76\u975e\u4e0d\u597d\u3002\n\n\u8fd9\u6837\u4e00\u9053\u9898\uff0c\u4e00\u770b\u5c31\u77e5\u9053\u8981\u627e\u89c4\u5f8b\uff0c\u5bb9\u6613\u53d1\u73b0\u672c\u9898\u5411\u540e\u9012\u63a8\u7684\u7b2c\u4e00\u4e2a\u89c4\u5f8b\uff0c\u5c31\u662f`0\u7684\u4e2a\u6570\u662f\u6309\u987a\u5e8f\u6392\u5217\u7684`\uff0c\u6bd4\u5982\u8bf43\u4e2a0\u7684\u6240\u6709\u60c5\u51b5\u904d\u5386\u5b8c\u540e\uff0c\u624d\u4f1a\u627e4\u4e2a0\u7684\u60c5\u51b5\u3002\n\n\u7b54\u6848\u662f10110\uff0c\u6240\u4ee5\u9700\u8981\u76f4\u63a5\u53bb\u6389\u6ca1\u67090\u548c\u4e00\u4e2a0\u7684\u60c5\u51b5\uff0c\u7136\u540e\u4ece\u4e24\u4e2a0\u7684\u60c5\u51b5\u5f00\u59cb\u9012\u63a8\uff0c\u90a3\u4e48\u5982\u4f55\u4f7f\u7528\u7ec4\u5408\u6570\u5462\uff1f\u8fd9\u91cc\u7528\u6837\u4f8b\u201c7 3\u201d\u6765\u5206\u6790\u3002\u6211\u4eec\u628a\u6bcf\u4e2a1\u540e\u9762\u76840\u7684\u4e2a\u6570\u770b\u505a\u8fd9\u4e2a1\u201d\u76d8\u5b50\u201c\u7684\u82f9\u679c\u6570\u3002\uff08\u56e0\u4e3a1\u7684\u4e2a\u6570\u662f\u56fa\u5b9a\u7684\uff09\n\n1. `K=3, cnt=0`\u4ee3\u88680\u4e2a\u76f8\u540c\u82f9\u679c\u653e\u51653\u4e2a\u4e0d\u540c\u76d8\u5b50\u4e2d\uff0c\u67091\u79cd\u65b9\u6848\u3002\u6211\u4eec\u628a`N-=1`\uff0c\u628a`cnt++`;\n\n2. `K=3, cnt=1`\u4ee3\u88681\u4e2a\u76f8\u540c\u82f9\u679c\u653e\u51653\u4e2a\u4e0d\u540c\u76d8\u5b50\u4e2d\uff0c\u67093\u79cd\u65b9\u6848\u3002\u6211\u4eec\u628a`N-=3`\uff0c\u628a`cnt++`;\n\n3.  `K=3\uff0c cnt=2`\u4ee3\u88682\u4e2a\u76f8\u540c\u82f9\u679c\u653e\u51653\u4e2a\u4e0d\u540c\u76d8\u5b50\u4e2d\uff0c\u67096\u79cd\u65b9\u6848\u3002\u4f46\u662f`N=6`\uff0c\u5df2\u7ecf\u4e0d\u591f\u51cf\u4e86\uff0c\u9000\u51fa\u3002\n\n   \u5982\u4f55\u8ba1\u7b97\u65b9\u6848\u7efc\u8ff0\uff0c\u6211\u5728~~\u5fd8\u4e86\u54ea\u4e00\u8282~~\u8bfe\u4e0a\uff0c\u627e\u5230\u89c4\u5f8b`f(K,cnt)=C(K+cnt-1,cnt-1)`\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u8fd9\u53eb\u4ec0\u4e48\u6570\uff0c\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u81ea\u884c\u63a8\u5bfc\u3002\n\n\u6b64\u65f6`K=3,N=3,cnt=2`\u4ee3\u8868\u6211\u4eec\u9700\u8981\u628a2\u4e2a\u76f8\u540c\u82f9\u679c\u653e\u51653\u4e2a\u4e0d\u540c\u76d8\u5b50\u4e2d\uff0c\u964d\u5e8f\u6392\u5217\u7684\u7b2c3\u79cd\u65b9\u6848\u3002\n\n\u6211\u4eec\u679a\u4e3e\u6392\u5217\uff1a(\u8fd9\u91cc\u7684\u964d\u5e8f\u53ea\u4ece\u524d\u5f80\u540e\u6bd4\u8f83)\n\n```\n2 0 0\n1 1 0\n1 0 1\n0 2 0\n0 1 1\n0 0 2\n```\n\n\u7b2c\u4e09\u4e2a\u662f`1 0 1`\uff0c\u4ee3\u8868\u7b2c1\u4e2a1\u548c\u7b2c3\u4e2a1\u540e\u9762\u5404\u6709\u4e00\u4e2a0\uff0c\u8f93\u51fa10110\uff0c`return 0;`\n\n\u90a3\u4e48\u5982\u4f55\u679a\u4e3e\u6392\u5217\u5462\uff1f\u7ecf\u8fc7\u4e00\u8282\u5316\u5b66\u8bfe\u7684\u6478\u7d22\uff0c\u6211\u627e\u5230\u89c4\u5f8b\uff1a\n\n**1.\u82e5\u6700\u540e\u4e00\u4f4d(\u7b2cK\u4f4d)\u4e0d\u4e3a0\uff0c\u5219\u628a\u6700\u9760\u540e\u7684\u4e00\u4e2a\u6570-1\uff0c\u5b83\u7684\u4e0b\u4e00\u4e2a\u6570\u53d8\u4e3a1\uff0c\u5982\"4 2 2 0 0\"\u2192\"4 2 1 1 0\"**\n\n**2.\u5426\u5219\u8fdb\u884c\u5982\u4e0b\u53d8\u6362(\u592a\u96be\u8bf4\u4e86\uff0c\u53c2\u89c1\u6837\u4f8b\u548c\u4ee3\u7801)\uff0c\u5982\"2 0 1\"\u2192\"1 2 0\"\uff0c\"4 2 2 0 3\"\u2192\"4 2 1 4 0\"**\n\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528`cnt`\u8bb0\u5f55\u5f53\u524d\u6700\u540e\u975e0\u4f4d\u7684\u4f4d\u7f6e\uff0c\u8282\u7701\u65f6\u95f4\u7a7a\u95f4\u3002\n\n\u81f3\u6b64\uff0c\u672c\u9898\u5df2\u7ecf\u5b8c\u7f8e\u89e3\u51b3\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n//\u65f6\u95f4\u6bd4\u8f83\u7d27\uff0c\u5e38\u6570\u8f83\u5927\uff0c\u4ee3\u7801\u4e0d\u7f8e\u89c2\u89c1\u8c05\u3002\n#include <bits/stdc++.h>\nusing namespace std;\n\nint N,K,cnt,ans[11],acnt;\n\nint C(int n,int m)\n//\u7ec4\u5408\u6570\u8ba1\u7b97\n{\n    int ans=1,div=2;\n    for (register int i=n-m+1; i<=n; i++)\n    {\n        ans*=i;\n        if (!(ans%div)&&div<=m) {ans/=div;div++;}\n    }\n    return ans;\n}\n\nint main()\n{\n    scanf(\"%d%d\",&N,&K);\n    while (N>C(K+cnt-1,K-1))\n        N-=C(K+cnt-1,K-1),cnt++;\n    //\u6267\u884c\u7b2c\u4e00\u6b65\u64cd\u4f5c\n    ans[1]=cnt; cnt=1;\n    while (--N)\n    {\n        if (cnt>=K)\n        {\n            for (int i=K-1;i>=1; i--)\n                if (ans[i]>0)\n                {\n                    cnt=i+1;\n                    ans[i]--;\n                    ans[i+1]=1+ans[K];\n                    if (i!=K-1) ans[K]=0;\n                    //\u9012\u63a8\u60c5\u51b51\n                    break;\n                }\n        }\n        else ans[cnt]--, ans[++cnt]++;\n        //\u9012\u63a8\u60c5\u51b52\n    }\n    for (int i=1; i<=K; i++)\n    {//\u7384\u5b66\u8f93\u51fa\n        putchar('1');\n        while (ans[i]--) putchar('0');\n    }\n    return 0;\n}\n```\n\n\n\n",
        "postTime": 1543473128,
        "uid": 73489,
        "name": "NyaRu_Official",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3048 \u3010[USACO12FEB]\u725b\u7684IDCow IDs\u3011"
    },
    {
        "content": "[\u66f4\u597d\u9605\u8bfb\u4f53\u9a8c\u6233\u8fd9\u91cc](https://www.cnblogs.com/nlKOG/p/11104817.html)\n\n[[USACO12FEB]\u725b\u7684IDCow IDs](<https://www.luogu.org/problemnew/show/P3048>)\n\n## Description\n\n\u4f5c\u4e3a\u4e00\u4e2a\u795e\u79d8\u7684\u7535\u8111\u9ad8\u624b\uff0cFarmer John \u7528\u4e8c\u8fdb\u5236\u6570\u5b57\u6807\u8bc6\u4ed6\u7684\u5976\u725b\u3002\u7136\u800c\uff0c\u4ed6\u6709\u70b9\u8ff7\u4fe1\uff0c\u6807\u8bc6\u5976\u725b\u7528\u7684\u4e8c\u8fdb\u5236\u6570\n\u5b57\uff0c\u5fc5\u987b\u53ea\u542b\u6709K\u4f4d\"1\"(1 <= K <= 10)\u3002 \u5f53\u7136\uff0c\u6bcf\u4e2a\u6807\u8bc6\u6570\u5b57\u7684\u9996\u4f4d\u5fc5\u987b\u4e3a\"1\"\u3002FJ\u6309\u9012\u589e\u7684\u987a\u5e8f\uff0c\u5b89\u6392\u6807\u8bc6\u6570\u5b57\n\uff0c\u5f00\u59cb\u662f\u6700\u5c0f\u53ef\u884c\u7684\u6807\u8bc6\u6570\u5b57\uff08\u7531\"1\"\u7ec4\u6210\u7684\u4e00\u4e2aK\u4f4d\u6570\uff09\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u4ed6\u6ca1\u6709\u8bb0\u5f55\u4e0b\u6807\u8bc6\u6570\u5b57\u3002\u8bf7\u5e2e\u4ed6\u8ba1\u7b97\uff0c\u7b2cN\n\u4e2a\u6807\u8bc6\u6570\u5b57(1 <= N <= 10^7)\u3002\n\n## Input\n\n\u7b2c1\u884c\uff1a\u7a7a\u683c\u9694\u5f00\u7684\u4e24\u4e2a\u6574\u6570\uff0cN\u548cK\u3002 \n\n## Output\n\n\u5982\u9898\uff0c\u7b2cN\u4e2a\u6807\u8bc6\u6570\u5b57\n\n## Sample Input\n\n```\n7 3\t\n```\n\n## Sample Output\n\n```\n10110\n```\n\n## Solution\n\n\u5728len\u957f\u533a\u95f4\u4e2d\u53d6k\u4e2a\u6570\u4e3a1,\u7b2c\u4e00\u4f4d\u4e3a1,\u65b9\u6848\u6570\u4e3aC(len-1,k-1)\n\n\u8bbe$f(i,j)=\\sum\\limits_{x=1}^{i}C(x,j)$\n\n\u5bf9\u4e8e\u9898\u76ee\u4e2d\u7684n\u548ck,\u6c42\u51fai,\u4f7f\u5f97$f(i,k-1)\\le n<f(i+1,k-1) $\n\n\u5219\u6709\u5b57\u7b26\u4e32\u7684\u957f\u5ea6len=i+1\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u7b2c\u4e00\u4e2a'1'\u7684\u4f4d\u7f6e\u4e86\n\n\u6b64\u65f6\u4ee4:$n=n-f(i,k-1)\\ ,\\ k=k-1$\n\n\u63a5\u7740\u4ee5\u76f8\u540c\u65b9\u5f0f\u6c42\u51fa\u5269\u4e0b\u7684'1'\u7684\u4f4d\u7f6e\n\n## Code\n\n~~~cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint read(){\n\tint f=1,re=0;char ch=getchar();\n\tfor(;!isdigit(ch);ch=getchar())if(ch=='-')f=-1;\n\tfor(;isdigit(ch);ch=getchar())re=re*10+ch-'0';\n\treturn f*re;\n}\nint C(int n,int m){\n\tif(!m)return 1;\n\tint re=1;\n\tfor(int i=n;i>=n-m+1;i--)re*=i;\n\tfor(int i=1;i<=m;i++)re/=i;\n\treturn re;\n}\nint n,k;\nsigned main(){\n//\tfreopen(\"cowids.in\",\"r\",stdin);\n//\tfreopen(\"cowids.out\",\"w\",stdout);\n\tn=read(),k=read();\n\tint len,tot,lst,tmp;\n\tlen=k-1,tot=0,tmp=C(len,k-1);\n\twhile(tot+tmp<n){\n\t\ttot+=tmp;\n\t\ttmp=C(++len,k-1);\n\t}\n\tlst=len,n-=tot;\n\tputchar('1');\n\tfor(k--;k;k--){\n\t\tlen=k-1,tot=0,tmp=C(len,k-1);\n\t\twhile(tot+tmp<n){\n\t\t\ttot+=tmp;\n\t\t\ttmp=C(++len,k-1);\n\t\t}\n\t\tfor(int i=1;i<=lst-len-1;i++)putchar('0');\n\t\tlst=len,n-=tot;\n\t\tputchar('1');\n\t}\n\tfor(int i=1;i<=len;i++)putchar('0');\n\treturn 0;\n}\n/*\n7 3\n\n*/\n~~~",
        "postTime": 1561951284,
        "uid": 98051,
        "name": "The_KOG",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3048 \u3010[USACO12FEB]\u725b\u7684IDCow IDs\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u53ea\u67090\u548c1\u7684\u6570\u5b57\u4e32\uff0c\u53ea\u67091\u5bf9\u6570\u5b57\u4e32\u5927\u5c0f\u6709\u5f71\u54cd\uff0c0\u6ca1\u6709\u5f71\u54cd\uff0c\u5927\u5c0f\u53d6\u51b3\u4e8e1\u7684\u4f4d\u7f6e\u548c\u6570\u91cf\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u4e2d\u8981\u6c42\u51fa\u7b2cn\u4e2a\u7f16\u53f7\u662f\u4ec0\u4e48\uff0c\u5e76\u4e14\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u9650\u5236\uff1a\u7b2c\u4e00\u4f4d\u5fc5\u987b\u662f0\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u5c06\u8fd9\u4e2a\u4e32\u7528\u8db3\u591f\u5927\u5c0f\u4fdd\u5b58\uff0c\u8db3\u591f\u5927\u7684\u8bdd\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u524d\u5bfc0\uff0c\u5230\u6700\u540e\u4ece\u7b2c\u4e00\u4e2a\u975e0\u4f4d\u8f93\u51fa\u5373\u53ef\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8981\u627e\u5230\u4e00\u4e2am,\u4f7f\u5f97C(m,k) >= n\uff0c\u53ef\u4ee5\u4e8c\u5206\u6c42m\u3002\n\n\u5f53k=1\u76f4\u63a5\u7279\u5224\u6389\u3002\n\n\u4ece\u5927\u5230\u5c0f\u786e\u5b9a\u6bcf\u4e00\u4f4d\u3002\n\n\u5982\u679c\u505a\u5230\u7b2ci\u4f4d\uff0c\u4e4b\u524d\u5df2\u7ecf\u586b\u4e86j\u4e2a1\uff0c\u90a3\u4e48\u8fd9\u4e00\u4f4d\u586b0\u7684\u65b9\u6848\u6570\u5c31\u662fC(i-1,k-j)\uff0c\u5373\u8fd8\u5269i-1\u4f4d\u53ef\u4ee5\u586bk-j\u4e2a1\u7684\u65b9\u6848\u6570\u3002\n\n\u5982\u679c\u8fd9\u4e2a\u6570\u5c0f\u4e8en\uff0c\u90a3\u4e48\u8fd9\u4e00\u4f4d\u586b1\uff0c\u5e76\u4e14n\u8981\u51cf\u53bb\u8fd9\u4e2a\u6570\uff0c\u5426\u5219\u8fd9\u4e00\u4f4d\u586b0\u3002\n\n\u4e0d\u8fc7\u8fd9\u4e2a\u7ec4\u5408\u6570\u4f1a\u975e\u5e38\u5927\uff0c\u8fd8\u4f1a\u7206long long,\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\u8fdb\u884c\u4e8c\u5206\u6c42m.\u4e00\u5b9a\u8981\u6ce8\u610f\u8fd9\u70b9\uff0c\u7b2c\u4e00\u6b21\u63d0\u4ea4\u5c31\u5728\u8fd9\u91ccwa\u7684QwQ\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(sqrt(n)k)\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nconst int maxn = 10000010;\nlong long n , k , m;\nlong long num[maxn] , cnt;\nlong long mid , l , r;\nlong long zuhe(int x , int y)\n{\n    long long k = 1;\n    for(int i = x;i > x - y;i --)\n    {\n        k *= i;\n    }\n    for(int i = y;i > 1;i --)\n    {\n        k /= i;\n    }\n    return k;\n}\nint main(){\n    scanf(\"%lld%lld\" , &n , &k);\n    if(k == 1)\n    {\n        for(int i = n;i > 0;i --)\n        {\n            if(i == n)\n            {\n                printf(\"1\");\n            }\n            else printf(\"0\");\n        }\n        return 0; \n    }\n    else {\n//\u5206\u7c7b\u8ba8\u8bba\u4e8c\u5206\u6c42m\n        if(k == 10)\n        {\n            l = 1;\n            r = 600;\n            while(l <= r)\n            {\n                mid = (l + r) / 2;\n                if(zuhe(mid , k) >= n)\n                {\n                    m = mid;\n                    r = mid - 1;\n                }\n                else {\n                    l = mid + 1;\n                }\n            }\n        }\n        else {\n            if(k >= 7)\n            {\n                l = 1;\n                r = 1000;\n                while(l <= r)\n                {\n                    mid = (l + r) / 2;\n                    if(zuhe(mid , k) >= n)\n                    {\n                        m = mid;\n                        r = mid - 1;\n                    }\n                    else {\n                        l = mid + 1;\n                    }\n                }\n            }\n            else {\n                l = 1;\n                r = 7000;\n                while(l <= r)\n                {\n                    mid = (l + r) / 2;\n                    if(zuhe(mid , k) >= n)\n                    {\n                        m = mid;\n                        r = mid - 1;\n                    }\n                    else {\n                        l = mid + 1;\n                    }\n                }\n            }\n        }\n        for(int i = m;i > 0;i --)\n        {\n            long long t = zuhe(i - 1 , k);\n            if(t < n)\n            {\n                num[i] = 1;\n                n -= t;\n                k --;\n                if(!cnt)\n                {\n                    cnt = i;\n                }\n            }\n            if(!k || !n)\n            {\n                break;\n            }\n        }\n        for(long long i = cnt;i > 0;i --)\n        {\n            printf(\"%d\" , num[i]);\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1504788787,
        "uid": 22831,
        "name": "a1399433645",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3048 \u3010[USACO12FEB]\u725b\u7684IDCow IDs\u3011"
    },
    {
        "content": "\u592a\u83dc\u4e86\u6ca1\u6709\u60f3\u5230\u7ec4\u5408\u6570\n\n\u6211\u4eec\u4e5f\u533b\u7528\u6570\u4f4ddp\u53bb\u505a\uff1b\n\nf[i][j] \u8868\u793a\u5728\u524di\u4f4d\u6211\u4eec\u653ej\u4e2a1\u7684\u60c5\u51b5\u6709\u51e0\u79cd\n\nf[i][j]=f[i-1][j]+f[i-1][j];\n\n\u7136\u540e\u6211\u4eec\u76f4\u63a5\u5927\u529b\u7684\u4ece\u5b57\u7b26\u4e32\u7684\u9ad8\u4f4d\u5f00\u59cb\u679a\u4e3e\n\n\u5982\u679c\u8fd9\u4e2a\u4f4d\u5b50\u4e0d\u653e\u6211\u4eec\u540e\u6765\u6240\u6709\u7684\u65b9\u6cd5\u90fd\u4e0d\u591f\u4e86\u90a3\u5c31\u653e\n\n\u7ec6\u8282\u7684\u8bdd\u770b\u4ee3\u7801\u628a\uff1b\n\n\u7136\u540e\u4e00\u4e2a\u5f88\u4e3b\u8981\u7684\u4e1c\u897f\n\n\u5047\u5982\u8f93\u5165\n\n10000000 1\n\n\u6211\u4eec\u9700\u8981\u5f001e7\u7684\u6570\u7ec4\u4e0d\u53ef\u80fd\n\n\u5047\u5982\n10000000 2\n\n\u6211\u4eec\u8981\u5f00\u7684\u6570\u7ec41e5\u90fd\u4e0d\u5230\n\n\u6240\u4ee5\u7279\u52241\n\n```cpp\n#include<bits/stdc++.h>\n#define Ll long long\nusing namespace std;\nconst Ll N=12,M=1e5+5;\nLl a[M],f[M][N];\nLl n,m,ok,v;\nint main()\n{\n    scanf(\"%lld%lld\",&m,&n);\n    if(n==1){\n        cout<<1;\n        for(int i=1;i<m;i++)printf(\"0\");\n        return 0;\n    }\n    for(Ll i=0;i<=1e5;i++)f[i][0]=1;\n    for(Ll i=1;i<=1e5;i++)if(!v)\n        for(Ll j=1;j<=n;j++){\n            f[i][j]=f[i-1][j]+f[i-1][j-1];\n            if(j==n&&f[i][j]>=m){v=i;break;}\n        }\n    for(Ll i=v;i;i--){\n        if(f[i-1][n]<m)\n            a[i]=1,m-=f[i-1][n],n--;\n        if(a[i])ok=1;\n        if(ok)cout<<a[i];\n    }\n}\n```",
        "postTime": 1507864406,
        "uid": 7442,
        "name": "\u5de8\u578b\u65b9\u5757",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3048 \u3010[USACO12FEB]\u725b\u7684IDCow IDs\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u8fd9\u79cd\u9898\u76ee\uff0c\u4e2a\u4eba\u6bd4\u8f83\u559c\u6b22\u7528\u9012\u5f52\u89e3\u51b3\u3002\n\n\u9996\u5148\uff0c\u5148\u6c42\u51fam\u4f4d\u7b26\u5408\u8981\u6c42\u7684\u6570\u6709\u51e0\u4e2a\uff0c\u663e\u7136\u5c31\u662fC(m,k)\u4e2a\u3002\u53ef\u4ee5\u76f4\u63a5\u7528\u7ec4\u5408\u6570\u9012\u63a8\u628a\u8868\u6253\u51fa\u6765\uff0c\u4ee3\u7801\u5982\u4e0b\uff0c\u590d\u6742\u5ea6$O(k\\sqrt{n})$\n```\nfor(int i=0;i<=4995;i++) cnm[i][0]=1;\nfor(int i=1;i<=10;i++)\n\t    for(int j=i;j<=4995;j++)\n\t\t{\n\t\t    cnm[j][i]=cnm[j-1][i-1]+cnm[j-1][i];\n\t\t    if(cnm[j][i]>=n) {key[i]=j;break;}\n\t\t}\n```\n\u5c06\u539f\u95ee\u9898\u8bb0\u4e3a$(k,n)$,\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u7f29\u5c0f\u5b50\u95ee\u9898\u3002\u5bf9\u4e8e\u4e00\u7ec4$(know,nnow)$,\n\u60f3\u529e\u6cd5\u5c06\u5176\u964d\u4e3a$(know-1,x)$\u7684\u5f62\u5f0f\uff0c\u5373\u653e\u4e0b\u4e00\u4e2a1\u5728$m$\u4f4d.\u5bf9\u4e8e\u4e00\u4e2a$m$\u4f4d\u6570,\u6709$cnm[m][know]$\u79cd\u653e\u6570\u65b9\u6cd5\u3002\u5373\u5bf9\u8fd9\u4e2a$m$\uff0c\u8981\u6c42$cnm[m-1][know]<nnow<=cnm[m][know]$\n\u81ea\u7136\u4e8c\u5206\uff0c\u7136\u540e\u8bb0$ans[m]=1$\u5373\u53ef\uff08\u6ce8\u610f\u8003\u8651$nnow==cnm[m][know]$\u7684\u8bf7\u51b5\uff09\u3002\n\u9012\u5f52\u8fc7\u7a0b\uff1a\n```\nvoid dfs(int know,int nnow)\n{\n\tif(know==1) {ans[nnow]=1;return;}\n\tint l=1,r=key[know];\n\twhile(l<r)\n\t{\n\t\tint mid=(l+r+1)>>1;\n\t\tif(cnm[mid][know]<=nnow) l=mid;else r=mid-1;\n\t}\n\tif(cnm[l][know]==nnow)\n\t{\n\t\tfor(int i=l;i>=l-know+1;i--) ans[i]=1;\n\t\treturn;\n\t}\n\telse\n\t{\n\t    ans[l+1]=1;\n\t    dfs(know-1,nnow-cnm[l][know]);\n\t    return;\n\t}\n}\n```\n\n\u6700\u540e\uff0c\u9006\u5e8f\u8f93\u51fa$ans[i]$\u5373\u53ef\uff0c\u6ce8\u610f\u524d\u5bfc0.\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nbool ans[10000100];\nint n,k,key[15];\nint cnm[5000][15];\nvoid dfs(int know,int nnow)\n{\n\tif(know==1) {ans[nnow]=1;return;}\n\tint l=1,r=key[know];\n\twhile(l<r)\n\t{\n\t\tint mid=(l+r+1)>>1;\n\t\tif(cnm[mid][know]<=nnow) l=mid;else r=mid-1;\n\t}\n\tif(cnm[l][know]==nnow)\n\t{\n\t\tfor(int i=l;i>=l-know+1;i--) ans[i]=1;\n\t\treturn;\n\t}\n\telse\n\t{\n\t    ans[l+1]=1;\n\t    dfs(know-1,nnow-cnm[l][know]);\n\t    return;\n\t}\n}\nint main()\n{\n\tcin>>n>>k;\n\tfor(int i=0;i<=4995;i++) cnm[i][0]=1;\n\tfor(int i=1;i<=10;i++)\n\t    for(int j=i;j<=4995;j++)\n\t\t{\n\t\t    cnm[j][i]=cnm[j-1][i-1]+cnm[j-1][i];\n\t\t    if(cnm[j][i]>=n) {key[i]=j;break;}\n\t\t}\n\tdfs(k,n);\n\tbool flag=0;\n\tfor(int i=10000010;i>=1;i--)\n\t{\n\t\tif(flag==0&&ans[i]==1) flag=1;\n\t\tif(flag) cout<<ans[i];\n\t}\n}\n```",
        "postTime": 1570511472,
        "uid": 87899,
        "name": "Doraven",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3048 \u3010[USACO12FEB]\u725b\u7684IDCow IDs\u3011"
    }
]