[
    {
        "content": "\u5927\u5bb6\u90fd\u662f\u5148\u7b5b\u7d20\u6570\u518d\u5408\u5e76\uff1f\u5176\u5b9e\u7528\u57c3\u6c0f\u7b5b\u6cd5\u7684\u8bdd\u7b5b\u7684\u540c\u65f6\u5c31\u53ef\u4ee5\u5408\u5e76\u4e86\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u6570\u90fd\u88ab\u5b83\u7684\u6240\u6709\u8d28\u56e0\u6570\u5404\u7b5b\u4e86\u4e00\u904d\uff0c\u76f4\u63a5\u5728\u7528\u6bcf\u4e2a\u8d28\u56e0\u6570\u7b5b\u7684\u65f6\u5019\u628a\u88ab\u7b5b\u6389\u7684\u6570\u5408\u5e76\u5c31\u597d\u4e86\u3002\n\n```\n#include <iostream>\n\nusing namespace std;\n\nint find(int x);\n\nint f[100010],a,b,p,ans;\nbool np[100010];\n\nint main()\n{\n\tint i,j;\n\t\n\tcin>>a>>b>>p;\n\t\n\tans=b-a+1; //\u5c06\u7b54\u6848\u521d\u59cb\u5316\u4e3aa~b\u95f4\u6570\u7684\u4e2a\u6570\uff0c\u6bcf\u5408\u5e76\u4e00\u6b21\u51cf1\u5c31\u53ef\u4ee5\u4e86\n\t\n\tfor (i=a;i<=b;++i)\n\t{\n\t\tf[i]=i;\n\t}\n\t\n\tfor (i=2;i<=b;++i) //\u57c3\u6c0f\u7b5b\n\t{\n\t\tif (!np[i])\n\t\t{\n\t\t\tif (i>=p) //\u5982\u679c\u5f53\u524d\u8d28\u6570\u5927\u4e8ep\u624d\u5408\u5e76\n\t\t\t{\n\t\t\t\tfor (j=i*2;j<=b;j+=i)\n\t\t\t\t{\n\t\t\t\t\tnp[j]=true;\n\t\t\t\t\tif (j-i>=a&&find(j)!=find(j-i)) //\u5c06\u5f53\u524d\u88ab\u7b5b\u7684\u6570\u4e0e\u4e0a\u4e00\u4e2a\u88ab\u7b5b\u7684\u6570\u5408\u5e76\uff08\u7b2c\u4e00\u4e2a\u88ab\u7b5b\u7684\u6570\u548c\u8d28\u56e0\u6570\u672c\u8eab\u5408\u5e76\uff09\uff0c\u6ce8\u610f\u8fd9\u4e24\u4e2a\u6570\u90fd\u8981\u5728a~b\u4e4b\u95f4\u624d\u5408\u5e76\n\t\t\t\t\t{\n\t\t\t\t\t\tf[find(j)]=find(j-i);\n\t\t\t\t\t\t--ans;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (j=i*2;j<=b;j+=i)\n\t\t\t\t{\n\t\t\t\t\tnp[j]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tcout<<ans;\n\t\n\treturn 0;\n} \n\nint find(int x)\n{\n\treturn x==f[x]?x:f[x]=find(f[x]);\n}\n```",
        "postTime": 1531543463,
        "uid": 49742,
        "name": "ouuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1621 \u3010\u96c6\u5408\u3011"
    },
    {
        "content": "**\u5148\u7b5b\u7d20\u6570\uff08\u6211\u592a\u5f31\u4e86\uff0c\u4e0d\u4f1a\u7ebf\u7b5b\uff09**\n\n**\u7b5b\u51fa\u7d20\u6570\u4e4b\u540e\u627e\u51fa\u5728 \u2018p~b\u2019 \u8303\u56f4\u5185\u7684\u7d20\u6570**\n\n**\u7136\u540e\u679a\u4e3ea~b\u4e4b\u95f4\u7684\u6570\uff0c\u5408\u5e76\u4ed6\u4eec**\n\n**\u6700\u540e\u770b\u770b\u90a3\u4e9b\u6570\u7684\u7956\u5148\u662f\u81ea\u5df1\u5c31\u597d\u4e86**\n\n\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n#include<cstdlib>\n#include<cmath>\n#define maxn 100010\nusing namespace std;\nint f[maxn];\nint a,b,p,ans;\nbool prime[maxn];\nint vis[maxn];\nint cnt;\nint getf(int x)\n{\n    if(f[x]==x) return x;\n    else\n    {\n        f[x]=getf(f[x]);\n        return f[x];\n    }\n}\nint merge(int x,int y)\n{\n    int t1=getf(x),t2=getf(y);\n    if(t1!=t2)\n    {\n        f[t2]=t1;\n        return 1;\n    }\n    return 0;\n}\nint make_prime()      //\u666e\u901a\u7b5b \n{\n    memset(prime,1,sizeof(prime));\n    int k=sqrt(b);\n    prime[0]=prime[1]=0;\n    for(int i=2;i<=k;i++)\n        if(prime[i])\n            for(int j=2*i;j<maxn;j+=i) prime[j]=0;\n}\nint main()\n{\n    cin>>a>>b>>p;\n    for(int i=a;i<=b;i++) f[i]=i;\n    make_prime();\n    for(int i=p;i<=b;i++)      //\u627e\u51fap~b\u4e4b\u95f4\u7684\u7d20\u6570 \n        if(prime[i]) vis[++cnt]=i;  //\u8bb0\u5f55 \n    for(int i=1;i<=cnt;i++)     //\u627e\u51faa~b\u4e4b\u95f4\u7b26\u5408\u6761\u4ef6\u7684\u6570\uff0c\u5408\u5e76 \n    {\n        int cc=0;\n        while(cc*vis[i]<a) cc++;     //\u786e\u4fdd\u662fa~b\u4e4b\u95f4\u7684\uff0c\u4e0d\u8981\u8d85\u8303\u56f4\uff0c\u4e0d\u7136\u540e\u9762\u6ca1\u6cd5\u7edf\u8ba1 \n        while(vis[i]*(cc+1)<=b)\n        {\n            merge(vis[i]*cc,vis[i]*(cc+1));     //\u5408\u5e76 \n            cc++;\n        }\n    }\n    for(int i=a;i<=b;i++)\n        if(f[i]==i) ans++;     //\u7edf\u8ba1\u4e2a\u6570 \n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1509326184,
        "uid": 18441,
        "name": "Drug__Lover",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1621 \u3010\u96c6\u5408\u3011"
    },
    {
        "content": "\u5728\u4e0b\u849f\u84bb\uff0c\u73b0\u8d34\u9898\u89e3\u4e00\u7bc7\uff0c\u8bf7\u5927\u7287\u52ff\u55b7\n\n\n\u601d\u8def\uff1a\u8d28\u6570\u7b5b\u6c42\u8d28\u6570\uff0c\u7b26\u5408\u6761\u4ef6\u70b9\u7684\u8fde\u8fb9\uff08\u4e0e\u81ea\u5df1\u7684\u8d28\u56e0\u6570\uff09\uff0c\u6700\u540e\u704c\u6c34\u5373\u53ef\n\n\n\u9644\u4ee3\u7801\uff1a\n\n\n    \n    \n```cpp\n    #include<bits/stdc++.h>\n    using namespace std;\n    struct{\n      int to,next;\n    }edge[400005];\n    int f[100005],a,b,p,nedge,head[100005],ans;\n    void add(int x,int y){\n      edge[nedge].to=y;\n      edge[nedge].next=head[x];\n      head[x]=nedge++;\n      edge[nedge].to=x;\n      edge[nedge].next=head[y];\n      head[y]=nedge++;\n    }\n    void init(){\n      for (int i=2;i<=b;i++)\n        if (f[i]==0)\n          for (int j=i*2;j<=b;j+=i){\n            if (j>=a&&i>=p)add(j,i);\n            f[j]=1;\n          }\n    }\n    void dfs(int x){\n      if (f[x]) return;\n      f[x]=1;\n      for (int i=head[x];i!=-1;i=edge[i].next) dfs(edge[i].to);\n    }\n    int main(){\n      cin>>a>>b>>p;\n      memset(head,-1,sizeof(head));\n      init();\n      memset(f,0,sizeof(f));\n      for (int i=a;i<=b;i++)\n      if (!f[i]) {dfs(i);ans++;}\n      cout<<ans;\n}\n```",
        "postTime": 1515652239,
        "uid": 30543,
        "name": "_LGX_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1621 \u3010\u96c6\u5408\u3011"
    },
    {
        "content": "## \u9898\u89e3 P1621 \u3010\u96c6\u5408\u3011\n\n\u9898\u76ee\u4f20\u9001\u95e8:\n\nhttps://www.luogu.org/problemnew/show/P1621\n\n\u5176\u5b9e\u8fd9\u9898\u8fd8\u662f\u5f88\u6c34\u7684= =~~\uff08\u6211\u8fd8\u662fWA\u4e86\u4e24\u6b21\uff0c\u592a\u849f\u4e86\u554a\uff09~~\n\n=================================================\n\n\u8fd9\u9898\u5f88\u660e\u663e\uff1a**\u96c6\u5408**\u4e4b\u95f4\u7684**\u5408\u5e76**\u64cd\u4f5c\uff0c\u663e\u7136\u662f\u8981\u7528**\u5e76\u67e5\u96c6**\u7ef4\u62a4\n\n\u53ea\u662f\u672c\u9898\u591a\u4e86\u8fd9\u6837\u4e00\u4e2a\u4e1c\u897f\uff1a\n\n     \u6bcf\u6b21\u9009\u62e9\u4e24\u4e2a\u5c5e\u4e8e\u4e0d\u540c\u96c6\u5408\u7684\u6574\u6570\uff0c\n     \u5982\u679c\u8fd9\u4e24\u4e2a\u6574\u6570\u62e5\u6709\u5927\u4e8e\u7b49\u4e8eP\u7684\u516c\u5171\u8d28\u56e0\u6570\uff0c\n     \u90a3\u4e48\u628a\u5b83\u4eec\u6240\u5728\u7684\u96c6\u5408\u5408\u5e76\n\n\n\u73b0\u5728\u6211\u4eec\u60f3\uff1a\u5bf9\u4e8e\u4e24\u4e2a\u6574\u6570\u62e5\u6709\u5927\u4e8e\u7b49\u4e8ep\u7684\u516c\u5171\u8d28\u56e0\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u59a8**\u5148\u7b5b\u51faA~B\u4e4b\u95f4\u6240\u6709\u7684\u7d20\u6570**\uff0c**\u679a\u4e3e\u6bcf\u4e2a\u7d20\u6570\u7684\u500d\u6570**\uff0c\u4e00\u5b9a\u4e3a\u5408\u6570\u3002\u5982\u679c\u8be5\u7d20\u6570\u5927\u4e8ep\uff08\u7b26\u5408\u6761\u4ef6\uff09\uff0c**\u5c06\u5408\u6570\u4e0e\u8be5\u7d20\u6570\u7684\u96c6\u5408\u5408\u5e76\uff0c\u6700\u540e\u7edf\u8ba1\u96c6\u5408\u4e2a\u6570\u5373\u53ef**\u3002\n\n\u4ee5\u4e0a\u7b97\u6cd5\u4f30\u8ba1**\u65f6\u95f4\u590d\u6742\u5ea6 O(nlogn)**\n\n\u4e0d\u8fc7\u8fd8\u662f\u6709\u4e00\u70b9\u5c0f\u6539\u52a8= =\u5c31\u662f\u7d20\u6570\u7b5b\u4e0d\u662f\u5e38\u89c4\u7684\n\n= =\u672c\u4eba\u5728\u67d0\u9a6c\u59d3dalao\u7684blog\u9898\u89e3\u4e2d\u770b\u5230\u4e86\u8fd9\u6837\u7684**\u7d20\u6570\u7b5b**\n\n\uff08\u9a6c\u5de8\u4f6c\u7d20\u6570\u7b5b\u94fe\u63a5\uff1a\n\nhttps://www.luogu.org/blog/nopartyfoucaodong/solution-p3383 \n\n\u9644\u8be6\u89e3\u8bc1\u660e\uff0c\u672c\u4eba\u849f\u84bb\u5c31\u4e0d\u8bc1\u660e\u4e86\uff09\n\n\u6240\u4ee5\u5927\u6982\u4f1a\u7a0d\u5fae\u5feb\u4e00\u70b9\u5427\uff08\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u6bd4\u8f83\u4e00\u4e0b\u6548\u7387\uff09\n\n\u597d\u4e86\uff0c\u8bb2\u5b8c\u5566\uff0c\u4e0b\u9762\u653e\u4ee3\u7801\n\n    #include<iostream>\n    #include<cstdio>\n    #include<cmath>\n    #include<algorithm>\n    #include<queue>\n    #include<cstring>\n    using namespace std;\n    typedef long long ll;\n    const int inf=1e9+7;\n\n    inline int read()\n    {\n        int p=0,f=1;char c=getchar();\n        while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n        while(c>='0'&&c<='9'){p=p*10+c-'0';c=getchar();}\n        return f*p;}\n    const int maxn=2e5+3;\n    int A,B,All,cnt;\n    int Prime_SHEET[maxn+19],fa[maxn+19],v[maxn+19],ans;\n    //\u7d20\u6570\u5c0f\u7ed3\u8bba:\u5927\u4e8e\u7b49\u4e8e5\u7684\u8d28\u6570\u4e00\u5b9a\u548c6\u7684\u500d\u6570\u76f8\u90bb \n    inline bool prime(int x)\n    {\n\t    //\u7d20\u6570\u8981\u51fa\u73b0\u53ea\u53ef\u80fd\u51fa\u73b0\u57286x\u7684\u76f8\u90bb\u4e24\u4fa7\n\t    //\u5404\u79cd\u7279\u5224(x<5)\n\t    if(x==1)return 0;\n\t    if(x==2||x==3)return 1;\n\t    if(x==4)return 0;\n\t    if((x%6!=1)&&(x%6!=5))return 0;\n\t    int lim=sqrt(x);//\u786e\u5b9a\u4e0a\u754c \n\t    for(int i=5;i<=lim;i+=6)//\u6b65\u957f\u4e3a6 \n\t        if(!(x%i)||!(x%(i+2)))return 0;\n\t    return 1;\n    }\n    void make_Prime()//\u7d20\u6570\u7b5b \n    {\n\t    for(int i=1;i<=maxn;i++,fa[i]=i)\n\t        if(prime(i))Prime_SHEET[++cnt]=i;\n    }\n    int find(int x){return fa[x]==x?x:fa[x]=find(fa[x]);}\n    int main()\n    {\n\t    A=read(),B=read(),All=read();\n\t    make_Prime();//\u7b5b\u4e00\u53d1\u8d28\u6570 \n\t    /* \n\t    for(int i=1;i<=cnt;i++)\n\t        printf(\"%d \",Prime_SHEET[i]);\n\t    printf(\"\\n\\n\\n\\n\");\n\t    */\n\t    for(int i=1;i<=cnt;i++)\n\t        if(Prime_SHEET[i]>=All)//\u7b26\u5408\u6761\u4ef6\u5f00\u59cb\u5408\u5e76 \n\t\t      {\n\t\t  \t  //\u628a\u7b26\u5408\u6761\u4ef6\u7684\u8d28\u6570\u7684\u500d\u6570\u5f52\u5230\u4e00\u7ec4 \n\t    \t    int j=ceil(1.0*A/Prime_SHEET[i]);\n\t\t\t    while(j*Prime_SHEET[i]<=B)\n\t    \t         {\n\t    \t    \t    int t1=find(Prime_SHEET[i]);\n\t    \t    \t    int t2=find(j*Prime_SHEET[i]);\n\t    \t    \t    fa[t1]=t2;//\u5408\u5e76\u6709\u76f8\u540c\u8d28\u56e0\u5b50\u7684\u6570 \n\t\t\t\t \t    j++;\n\t\t\t\t     }\n\t\t      }\n\t    //\u7edf\u8ba1\u96c6\u5408\u4e2a\u6570\u5373\u53ef(\u5e76\u67e5\u96c6\u627e\u6839) \n\t    for(int i=A;i<=B;i++)\n\t        if(!v[find(i)])\n\t\t       {\n\t\t\t    v[find(i)]=1;\n\t\t\t    ans++;\n\t\t       }\n\t    printf(\"%d\",ans);\n\t    return 0;\n    }\n\n=================================================\n\n\u597d\u5566\uff0c\u5230\u6b64\u672c\u9898\u5c31\u8bb2\u5b8c\u4e86= =\u611f\u8c22\u9605\u8bfb\n\n\u6700\u540e\u63a8\u5e7f\u4e00\u4e0b\u6211\u7684\u535a\u5ba2\uff1a\n\nhttps://www.luogu.org/blog/new2zy/\n\n\u62dc\u62dc~~~\n\n\n\n\n\n\n\n\n",
        "postTime": 1531358775,
        "uid": 60359,
        "name": "___new2zy___",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1621 \u3010\u96c6\u5408\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9053\u9898\u8c8c\u4f3c\u90fd\u7528\u4e86\u5408\u5e76\u64cd\u4f5c\uff0c\u5077\u5077\u53d1\u4e00\u4e2a\u4e0d\u9700\u8981\u5408\u5e76\u7684\n\n\u539f\u7406\u5f88\u7b80\u5355\uff0c\u7528\u57c3\u7b5b\u7b5b\u4e00\u904d\u4ece\u79bbP\u6700\u8fd1\u7684\u7d20\u6570\uff08\u5411\u540e\u53d6\uff0cP\u672c\u8eab\u4e0d\u4e00\u5b9a\u662f\u8d28\u6570\uff09\u5f00\u59cb\uff0c\u4e00\u76f4\u5230B\uff0c\u56e0\u4e3a\u57c3\u7b5b\u672c\u8eab\u7b5b\u6cd5\u51b3\u5b9a\u4e86\u4ed6\u4f1a\u88ab\u672c\u8eab\u6240\u6709\u7684\u8d28\u56e0\u5b50\u6807\u8bb0\u4e00\u904d\uff0c\u800c\u5982\u679c\u6211\u4eec\u7684\u57c3\u7b5b\u662f\u4ece\u79bbP\u6700\u8fd1\u7684\u8d28\u6570\uff08\u518d\u6b21\u58f0\u660e\u662f\u5411\u540e\u53d6\uff09\u5f00\u59cb\u7684\u8bdd\uff0c\u524d\u9762\u7684\u90a3\u4e9b\u8d28\u6570\u6240\u8981\u6807\u8bb0\u70b9\u5e76\u4e0d\u4f1a\u88ab\u6807\u8bb0\uff0c\u800c\u5927\u4e8e\u6216\u7b49\u4e8e\u90a3\u4e2a\u8d28\u6570\u90fd\u4f1a\u88ab\u626b\u5230\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u88ab\u626b\u5230\u591a\u6b21\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u4ed6\u4eec\u662f\u4e00\u4e2a\u96c6\u5408\u7684\u3002\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nbool b[100010];//\u7528\u4e8e\u5224\u65ad\nbool zhishu[100010];//\u4e2d\u6587\u62fc\u4e00\u4e0b\uff0c\u91cc\u9762\u662f\u7b2c\u4e00\u904d\u7b5b\u51fa\u7684\u7d20\u6570\nlong long ans;\nbool pd;//\u4fdd\u8bc1\u6bcf\u4e2a\u6570\u6700\u591a\u53ea\u52a0\u4e00\u6b21\nbool frist;//\u4fdd\u8bc1\u6bcf\u4e2a\u6570\u5982\u679c\u548c\u67d0\u4e2a\u96c6\u5408\u5408\u5e76\u4e86\uff0c\u6700\u591a\u53ea\u51cf\u4e00\u6b21\nlong long now=19260817;\nint main()\n{\n\tlong long start,end,p;\n\tcin>>start>>end>>p;\n\tfor(long long i=2;i<=end;i++)\n\t{\n\t\tif(zhishu[i]==false)\n\t\t{\n\t\t\tif(i>=p)\n\t\t\t{\n\t\t\t\tnow=min(now,i);//\u627e\u51fa\u5728P\u540e\u9762\u79bbP\u6700\u8fd1\u7684\u8d28\u6570\n\t\t\t}\n\t\t\tfor(int j=i;j*i<=end;j++)\n\t\t\t{\n\t\t\t\tzhishu[i*j]=true;\n\t\t\t}\n\t\t}\n\t}\n\tif(start<now)\n\t{\n\t\tans=ans+now-start;//\u5982\u679c\u5f00\u59cb\u7684\u6570\u6bd4\u90a3\u4e2a\u8d28\u6570\u8fd8\u8981\u5c0f\uff0c\u90a3\u4e48\u5c0f\u4e8e\u7684\u90a3\u4e9b\u7684\u6570\u6bcf\u4e2a\u6570\u90fd\u4f1a\u6210\u4e00\u4e2a\u5355\u72ec\u7684\u96c6\u5408\n\t}\n\tfor(int i=now;i<=end;i++)\n\t{\n\t\tif(b[i]==false)\n\t\t{\n\t\t\tif(zhishu[i]==false)\n\t\t\t{\n\t\t\t\tfrist=false;\n\t\t\t\tpd=false;\n\t\t\t\tfor(int j=1;i*j<=end;j++)//\u6ce8\u610f\uff1a\u4e00\u5b9a\u8981\u4ece1\u5f00\u59cb\uff0c\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u6570\u90fd\u88ab\u4ed6\u6240\u6709\u7684\u8d28\u56e0\u6570\u6807\u8bb0\u4e00\u6b21\n\t\t\t\t{\n\t\t\t\t\tif(i*j>=start&&pd==false)\n\t\t\t\t\t{\n\t\t\t\t\t\tpd=true;\n\t\t\t\t\t\tans++;\n\t\t\t\t\t}\n\t\t\t\t\tif(b[i*j]==true&&frist==false&&pd==true)//\u5982\u679c\u4e00\u4e2a\u6570\u5df2\u7ecf\u88ab\u53e6\u4e00\u4e2a\u96c6\u5408\u7ed9\u6807\u8bb0\u8fc7\u4e86\uff0c\u90a3\u5c31\u8bf4\u660e\u8fd9\u4e00\u6b21\u4e0d\u7528\u65b0\u5f00\u96c6\u5408\u4e86\uff0c\u51cf\u6389\u8fd9\u6b21\u52a0\u7684\n\t\t\t\t\t{\n\t\t\t\t\t\tfrist=true;\n\t\t\t\t\t\tans--;\n\t\t\t\t\t}\n\t\t\t\t\tb[i*j]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(i>=start)//\u5982\u679c\u4e00\u4e2a\u6570\u8fd8\u6ca1\u6709\u88ab\u6807\u8bb0\u8fc7\uff0c\u800c\u4e14\u4e5f\u4e0d\u662f\u7d20\u6570\uff0c\u90a3\u5c31\u53ea\u80fd\u5355\u72ec\u7684\u5f00\u4e00\u4e2a\u96c6\u5408\u4e86\uff0c\u56e0\u4e3a\u4ed6\u627e\u4e0d\u5230\u548c\u4ed6\u4e00\u4e2a\u96c6\u5408\u7684\u6570\n\t\t\t{\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1537327973,
        "uid": 82291,
        "name": "\u9690\u5fc3",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1621 \u3010\u96c6\u5408\u3011"
    },
    {
        "content": "### \u524d\u8a00\n\n\u7ec6\u8282\u8fd8\u662f\u6709\u70b9\u591a\u7684 ...\n\n### \u89e3\u9898\u601d\u8def\n\n\u6ca1\u6709\u7528\u5230\u5e76\u67e5\u96c6\uff0c\u800c\u662f\u7528\u4e86\u7b5b\u3002\n\n\u5148\u7528\u7b5b\u6cd5\u628a $1$ \u5230 $100000$ \u7684**\u8d28\u6570**\u7b5b\u51fa\u6765\uff0c\u7136\u540e\u7528\u5faa\u73af\u5728 $p$ \u4e0e $b$ \u4e4b\u95f4\u5bfb\u627e\u8d28\u6570\uff0c\u627e\u5230\u540e\u5411\u4e0a\u7ffb\u500d\uff0c\u65b9\u4fbf\u4e0b\u4e00\u6b21\u5904\u7406\u3002\n\n\u542c\u8d77\u6765\u6bd4\u8f83\u7b80\u5355\uff0c\u8fd9\u8fb9\u63d0\u9192\u51e0\u4e2a\u5c0f\u95ee\u9898\uff1a\n\n1. \u6ce8\u610f\u88ab\u6211\u4eec\u626b\u63cf\u8fc7\u7684\u6570\u6211\u4eec\u76f4\u63a5\u8ba4\u4e3a\u662f\u540c\u4e00\u96c6\u5408\u7684\u5143\u7d20\uff0c\u5982\u679c\u5728\u626b\u63cf\u7684\u65f6\u5019\u53d1\u73b0\u8fd9\u4e00\u7ec4\u4e2d\u6709\u88ab\u626b\u63cf\u8fc7\u7684\u6570\u90a3\u4e48\u8fd9\u4e00\u6b21\u626b\u63cf\u7684\u6240\u6709\u6570\u90fd\u540c\u4e00\u5f52\u5230\u90a3\u4e2a\u6570\u7684\u96c6\u5408\u4e0b\u9762\u3002\n\n1. \u6ce8\u610f\u6bcf\u4e00\u6b21\u626b\u63cf\u5b8c\u540e\u5b58\u4e0d\u5b58\u5728\u6ca1\u6709\u6570\u7684\u60c5\u51b5\u3002\n\n\u6ce8\u610f\u7ec6\u8282\uff0c\u4ee3\u7801\u4f1a\u6709\u76f8\u5e94\u89e3\u91ca\u3002\n\n### \u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint pri[100001];\nint check[100001];\nint main(){\n    int a,b,p;\n    cin>>a>>b>>p;\n    pri[0]=1;\n    pri[1]=1;//\u8fd9\u4e24\u4e2a\u6ce8\u610f\u7279\u5224\n    for(int i=2;i<=100001;i++){//\u5faa\u73af\u8bb0\u5f97\u4ece 2 \u5f00\u59cb\n        for(int j=i;j<=100001/i;j++){\n            pri[i*j]=1;\n        }\n    }//\u7b5b\u7d20\u6570\n    int ans=0,sum=0;\n    //ans\u4e3a\u5143\u7d20\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e 2 \u7684\u96c6\u5408\u4e2a\u6570\n    //sum\u4e3aans\u4e2a\u96c6\u5408\u4e2d\u6240\u6709\u70b9\u7684\u4e2a\u6570\n    for(int i=p;i<=b;i++){//\u5f00\u59cb\u5bfb\u627e\n        if(pri[i]) continue;\n        int t;\n        if(a%i==0) t=a;\n        else t=i*(a/i+1);//\u5b9a\u4e49\u6bcf\u4e00\u6b21\u626b\u63cf\u7684\u7aef\u70b9\n        int wyxak=0,tyqak=0;//\u8fd9\u4e24\u4e2a\u7528\u6765\u5904\u7406\u7279\u6b8a\u60c5\u51b5\n        //WYXkk AK IOI! Light_Tracing AK IOI!\n        for(int j=t;j<=b;j+=i){//\u626b\u63cf\u6b64\u533a\u95f4\n            if(!check[j]){\n                check[j]=1;\n                wyxak=1;\n                sum++;//\u627e\u5230\u540e\u5904\u7406\n            } \n            else tyqak=1;//\u6ca1\u6709\u6570\u5c31\u5c06\u6b64\u5224\u65ad\u53d8\u91cf\u6539\u4e3a true\n        }\n        if(wyxak==1&&tyqak==0) ans++;//\u626b\u5b8c\u82e5\u662f\u6b64\u72b6\u51b5 ans \u4fbf\u53ef\u4ee5\u52a0 1 \u4e86\n    }\n    cout<<ans+(b-a-sum+1);//b-a-sum+1 \u8868\u793a\u5355\u4e2a\u96c6\u5408\u4e2a\u6570\n    return 0;\n}\n```\n\n\u5177\u4f53\u5c31\u662f\u8fd9\u6837\uff0c\u4e0d\u61c2\u8fd8\u53ef\u4ee5\u79c1\u4fe1\u6211\u3002\n\n\u7ba1\u7406\u5458\u5ba1\u6838\u8f9b\u82e6\u4e86\uff01\n",
        "postTime": 1583505815,
        "uid": 214148,
        "name": "_Camille_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1621 \u3010\u96c6\u5408\u3011"
    },
    {
        "content": "### [\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problemnew/show/P1621)\n\n**\u8fd9\u4e2a\u9898\u8981\u6c42\u6211\u4eec\u5728\u4e00\u4e2a\u533a\u95f4[A,B]\u4e2d\u627e\u51fa\u51e0\u4e2a\u96c6\u5408\uff0c\u96c6\u5408\u4e2d\u7684\u6570\u6ee1\u8db3\u662f\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8eP\u7684\u8d28\u56e0\u6570\u7684\u4e2a\u6570\u3002**\n\n ### 1.\u770b\u5230\u96c6\u5408\u8fd9\u4e2a\u5b9a\u4e49\uff0c\u6211\u4eec\u77ac\u95f4\u4f1a\u60f3\u5230\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u8fd9\u4e2a\u96c6\u5408\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e2a\u96c6\u5408\uff0c\u4ed6\u6ee1\u8db3\u4e00\u4e2a\u6027\u8d28\uff0c\u5c31\u662f\u5982\u679c\u6211\u4eec\uff0c\u8d77\u59cb\u7684\u65f6\u5019\u521d\u59cb\u5316\u6bcf\u4e00\u4e2a\u6570\u7684\u7236\u4eb2\u90fd\u662f\u81ea\u5df1\uff0c\u90a3\u4e48\u6bcf\u4e00\u4e2a\u96c6\u5408\u4e2d\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u6570\u7684\u7236\u4eb2\u662f\u81ea\u5df1\u3002\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u660e\u786e\u4e86\u6c42\u89e3\u7b54\u6848\u7684\u6761\u4ef6\uff0c\u5c31\u662f\u5c06\u6240\u6709\u6709\u5927\u4e8e\u7b49\u4e8eP\u7684\u8d28\u56e0\u6570\u7684\u4e00\u5806\u6570\u5408\u5e76\u8d77\u6765\uff0c\u7edf\u8ba1\u7236\u4eb2\u662f\u81ea\u5df1\u7684\u4e2a\u6570\u3002\n\n### 2.\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u5c06\u6709\u540c\u6837\u5927\u4e8e\u7b49\u4e8eP\u7684\u8d28\u56e0\u6570\u627e\u51fa\u6765\u5462\uff0c\u6211\u4eec\u9009\u62e9\u901a\u8fc7\u4e2d\u8f6c\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\uff0c\u5373\u5982\u679c\u6211\u4eec\u627e\u52301\u4e2a\u5927\u4e8e\u7b49\u4e8eP\u7684\u8d28\u56e0\u6570\u662f\u8fd9\u4e2a\u6570\u7684\u56e0\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u8fd9\u4e24\u4e2a\u6570\u653e\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u6700\u7ec8\u4e0e\u8fd9\u4e2a\u6570\u6709\u540c\u6837\u8d28\u56e0\u6570\u7684\u6570\u4e5f\u4f1a\u5728\u8fd9\u4e2a\u96c6\u5408\u4e2d\u3002\n\n### 3.\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u627e\u8fd9\u4e9b\u8d28\u56e0\u6570\u5462\uff0c\u6211\u4eec\u81ea\u7136\u800c\u7136\u7684\u60f3\u5230\u901a\u8fc7\u7b5b\u6cd5\u8fdb\u884c\u9884\u5904\u7406\uff0c\u8fd9\u6b21\u6211\u4eec\u91c7\u7528\u7684\u662f\u6b27\u62c9\u7b5b\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N\uff09\u3002\n\n  ##  \u5173\u4e8e\u6b27\u62c9\u7b5b\uff1f\n\n```cpp\n    for(int i=2;i<=B;i++)\n    {\n        if(!vis[i]) p[++cnt]=i;\n        for(int j=1;j<=cnt&&p[j]*i<=B;j++)\n        {\n            vis[p[j]*i]=1;\n            if(!i%p[j]) break;\n        }\n     } \n```\n## \u628a\u8fd9\u4e2a\u4ee3\u7801\u8d34\u51fa\u6765\uff1a\n \n```cpp\n#include <bits/stdc++.h>\n#define N 200010\nusing namespace std;\nint ans;\nint A,B,P,cnt,p[N],vis[N];\nint fa[N];\nint find(int x)\n{\n    return x==fa[x]?x:fa[x]=find(fa[x]);\n}\nvoid merge(int x,int y)\n{\n    int x1=find(x);\n    int y1=find(y);\n    if(x1==y1) return;\n    fa[x1]=y1;\n}\nint main()\n{\n    cin>>A>>B>>P;\n    for(int i=A;i<=B;i++) fa[i]=i; \n    for(int i=2;i<=B;i++)\n    {\n        if(!vis[i]) p[++cnt]=i;\n        for(int j=1;j<=cnt&&p[j]*i<=B;j++)\n        {\n            vis[p[j]*i]=1;\n            if(!i%p[j]) break;\n        }\n     } \n     for(int i=1;i<=cnt;i++)\n     if(p[i]>=P)\n     {\n     \tint t=(A+p[i]-1)/p[i]*p[i];//\u4e0a\u53d6\u6574 \n     \tfor(int j=t+p[i];j<=B;j+=p[i])\n     \tmerge(t,j);\n     }\n     for(int i=A;i<=B;i++)\n     {\n     \tif(fa[i]==i) ans++;\n     }\n     cout<<ans;\n}\n```\n\u5b8c\u7ed3\u6492\u82b1\u3002\n--------------------- \n",
        "postTime": 1549120901,
        "uid": 61112,
        "name": "Michigan_King",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1621 \u3010\u96c6\u5408\u3011"
    },
    {
        "content": "### \u8fd9\u9898\u4e0d\u662f\u66b4\u529b\u5c31\u80fd\u8fc7\u7684\u5417\n\u6211\u4eec\u770b\u770b\u9898\u76ee\u8bf4\u4e86\u4ec0\u4e48\n- \u9898\u76ee\u8bf4\uff1a\u8d28\u56e0\u6570\uff0c\u6211\u77e5\u9053\u4e86\uff0c\u7528\u5230**\u7b5b\u6cd5**\n- \u9898\u76ee\u8bf4\uff1a\u5408\u5e76\uff0c\u6211\u77e5\u9053\u4e86\uff0c\u7528\u5230**\u5e76\u67e5\u96c6**\n- \u9898\u76ee\u8bf4\uff1aA\u2264B\u2264100000\uff1b\u6211\u77e5\u9053\u4e86\uff0c**\u66b4\u529b**\u5c31\u80fd\u8fc7\n\n\u4ee3\u7801\u6b65\u9aa4\uff1a\n\n- \u7ebf\u7b5b\u6c42\u51fa\u8303\u56f4\u5185\u7684\u6240\u6709\u8d28\u6570\n- \u679a\u4e3ep~b\u7684\u8d28\u6570\uff0c\u5408\u5e76\u5b83\u7684\u500d\u6570\n- \u7edf\u8ba1\u6709\u51e0\u4e2a\u4e0d\u540c\u7684\u7956\u5148\n\nCode\uff1a\n```pascal\nvar\n    prime, f : array[0..1000000] of longint;\n    flag : array[0..1000000] of boolean;\n    a, b, p, i, j, tot, ans, f1 : longint;\n\nfunction find(k : longint) : longint;\n\nbegin\n    if k <> f[k] then f[k] := find(f[k]);\n    find := f[k];\nend;\n\nbegin\n    readln(a, b, p);\n    for i := 2 to b do//\u7ebf\u7b5b\n    begin\n        if not flag[i] then\n        begin\n            inc(tot); prime[tot] := i;\n        end;\n        for j := 1 to tot do\n        begin\n            if i * prime[j] > b then break;\n            flag[i * prime[j]] := true;\n            if i mod prime[j] = 0 then break;\n        end;\n    end;\n    for i := 1 to b do f[i] := i;\n    for i := 1 to tot do\n        if prime[i] >= p then\n        begin\n            f1 := find(prime[i]);\n            for j := 1 to b do//\u5408\u5e76\n            begin\n                if j * prime[i] > b then break;\n                f[find(j * prime[i])] := f1;\n            end;\n        end;\n    fillchar(flag, sizeof(flag), 0);\n    for i := a to b do//\u7edf\u8ba1\n        if not flag[find(i)] then\n        begin\n            flag[find(i)] := true;\n            inc(ans);\n        end;\n    writeln(ans);\nend.\n```",
        "postTime": 1541728955,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1621 \u3010\u96c6\u5408\u3011"
    },
    {
        "content": "\u7a81\u7136\u53d1\u73b0\u8fd9\u9053\u9898\u6ca1\u4eba\u53d1\u9898\u89e3\u3002\u3002\u6211\u6765\u4e00\u53d1\n\n\n\u9996\u5148\u8003\u8651\u66b4\u529b\u505a\u6cd5\uff1a\n\nN^2\u7684\u66b4\u529b\uff0cA\u5230B\u7684\u4efb\u610f\u4e24\u4e2a\u6570\u5982\u679c\u6709\u516c\u5171\u8d28\u56e0\u5b50\u5c31\u5408\u5e76\u5b83\u4eec\u6240\u5728\u7684\u96c6\u5408\u3002\u5f88\u660e\u663e\u662f\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u5408\u5e76\u96c6\u5408\u8fd9\u4e2a\u5de5\u4f5c\u3002\u65f6\u95f4\u590d\u6742\u5ea6O((B-A)^2)\n\n\n\u7136\u540e\u8003\u8651\u5bf9\u66b4\u529b\u505a\u6cd5\u8fdb\u884c\u4f18\u5316\uff1a\n\n\u9996\u5148\u679a\u4e3ep=P~B\u7684\u6240\u6709\u8d28\u6570\uff0c\u7136\u540e\u7528\u4e00\u4e2a\u7c7b\u4f3c\u7b5b\u6cd5\u7684\u505a\u6cd5\u3002\u4ece\u4e0d\u5c0f\u4e8eA\u7684\u7b2c\u4e00\u4e2ap\u7684\u500d\u6570\u5f00\u59cb\u7b5b\u8d77\uff0c\u628aA~B\u7684\u8303\u56f4\u5185\u6240\u6709p\u7684\u500d\u6570\u5168\u90e8\u4e0e\u4e0d\u5c0f\u4e8eA\u7684\u7b2c\u4e00\u4e2ap\u7684\u500d\u6570\u8fdb\u884c\u5408\u5e76\u3002\u5f88\u660e\u663e\u4e5f\u662f\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u3002\n\n\n```cpp\n\n\n#include <cstdio>\n\nusing namespace std;\n\nconst size_t Max_Size(100050);\n\nunsigned int A, B, P;\nunsigned int Father[Max_Size];\n\nbool Is_Not_Prime[Max_Size];\n\nunsigned int Get_Father(const unsigned int &x)\n{\n    return Father[x] == x ? x : Father[x] = Get_Father(Father[x]);\n}\n\ninline\nvoid Union(const unsigned int &a, const unsigned int &b)\n{\n    Father[Get_Father(b)] = Get_Father(a);\n}\n\nunsigned int div;\n\nbool OK[Max_Size];\n\nunsigned int Ans;\n\nint main()\n{\n    scanf(\"%u%u%u\", &A, &B, &P);\n    for (size_t i = A;i <= B;++i)\n        Father[i] = i;\n    \n    Is_Not_Prime[0] = Is_Not_Prime[1] = true;\n    for (size_t i = 2;i * i < Max_Size;++i)\n        if (!Is_Not_Prime[i])\n            for (size_t j = i * i;j < Max_Size;j += i)\n                Is_Not_Prime[j] = true;\n    \n    for (size_t p = P;p <= B;++p)\n        if (!Is_Not_Prime[p])\n        {\n            div = ((A % p == 0) ? (A / p) : (A / p + 1)) * p;\n            for (size_t j = div + p;j <= B;j += p)\n                Union(div, j);\n        }\n    \n    for (size_t i = A;i <= B;++i)\n        if (!OK[Get_Father(i)])\n        {\n            ++Ans;\n            OK[Get_Father(i)] = true;\n        }\n    \n    printf(\"%u\", Ans);\n    \n    return 0;\n}\n\n```",
        "postTime": 1442841061,
        "uid": 3182,
        "name": "Created_equal1",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1621 \u3010\u96c6\u5408\u3011"
    },
    {
        "content": "\u697c\u4e0b\u9898\u89e3\u592a\u7b80\u5355\u4e86\uff0c\u6211\u4e5f\u6765\u4e00\u53d1\u3002\n\n\u4e0d\u4f1a\u5e76\u67e5\u96c6\u548c\u7b5b\u7d20\u6570\u7684\u5148\u53bbA\u4e0b\u9762\u8fd92\u9898\n\n\u5e76\u67e5\u96c6\uff1ahttp://www.luogu.org/problem/show?pid=1551\n\n\u7b5b\u7d20\u6570\uff1ahttp://www.luogu.org/problem/show?pid=1835\n\n\u9898\u89e3\u89e3\u91ca\u5f97\u5f88\u6e05\u695a\uff0c\u8fd9\u9898\u5c31\u4e0d\u7ec6\u8bb2\u4e86\u3002\n\n```cpp\n\n#include<set>  \n#include<map>  \n#include<list>  \n#include<queue>  \n#include<stack>  \n#include<string>  \n#include<math.h>  \n#include<time.h>  \n#include<vector>  \n#include<bitset>  \n#include<memory>  \n#include<utility>  \n#include<stdio.h>  \n#include<sstream>  \n#include<iostream>  \n#include<stdlib.h>  \n#include<string.h>  \n#include<algorithm> \nusing namespace std;\nint f[100010]={0},bb[100010];//b\uff1a\u5e76\u67e5\u96c6\u91cc\u7684\uff0cf\uff1a\u7b5b\u7d20\u6570\u7528\u7684\uff0c0\uff1a\u8d28\u6570 1\uff1a\u975e\u8d28\u6570 \nint a,b,p,i,k,s,fa; \nint gf(int u)//\u5e76\u67e5\u96c6\u627e\u7238\u7238\n{\n    if (bb[u]==u) return u;//\u5982\u679c\u7238\u7238\u662f\u672c\u8eab\u5c31\u627e\u5230\u4e86\n    bb[u]=gf(bb[u]);//\u7ee7\u7eed\u627e\u7238\u7238\n    return bb[u]; \n} \nint un(int u,int v)//\u5e76\u67e5\u96c6\u5408\u5e76 \n{\n    int f1=gf(u),f2=gf(v);//\u627e\u5230u\u548cv\u7684\u7238\u7238 \n    if (f1!=f2)//\u5982\u679c\u7238\u7238\u4e0d\u540c\n    bb[f1]=f2;//\u5408\u5e76 \n} \nint main()\n{\n    scanf(\"%d%d%d\",&a,&b,&p);\n    for (i=a;i<=b;i++) bb[i]=i;//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n    f[1]=1; //1\u4e0d\u662f\u8d28\u6570 \n    for (i=2;i<=b/2;i++)//\u7b5b\u9009\u7d20\u6570 \n    {\n        k=i;\n        if (f[k]==0)\n        {\n            while (k+i<=b)\n            {\n                k+=i;\n                f[k]=1;\n            }\n        }\n    }\n    for (i=p;i<=b;i++)\n    {\n        if (f[i]==0)//i\u662f\u8d28\u6570\u5c31\u7ee7\u7eed\u2026\u2026\u5408\u6570\u5565\u7684\u4e4b\u524d\u90fd\u5408\u5e76\u4e86\n        {\n            k=i;\n            fa=0;//\u5408\u5e76\u540e\u7684\u96c6\u5408\u7684\u7f16\u53f7\n            while (k<=b) \n            {\n                if (k>=a)//\u5982\u679c\u5728\u8303\u56f4\u5185\uff0ck<=b\u5224\u65ad\u8fc7\u4e86 \n                    if (fa==0) fa=k;//\u5982\u679c\u524d\u9762\u6ca1\u6709\u5c31\u8d4b\u503c\uff0c\u8fd9\u4e2a\u6570\u5c31\u4f5c\u4e3a\u8fd9\u4e00\u4e32\u6570\u7684\u7238\u7238 \n                        un(fa,k);//\u5426\u5219\u5408\u5e76 \n                k+=i;//\u7b5b\u4e0b\u4e00\u4e2a \n            } \n        } \n    } \n    s=0;\n    for (i=a;i<=b;i++)\n    if (bb[i]==i) s++;\n    cout<<s;\n    return 0;\n}\n\n```",
        "postTime": 1459864859,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1621 \u3010\u96c6\u5408\u3011"
    },
    {
        "content": "# \u53ea\u6709\u81ea\u5df1\u5199\u51fa\u6765,\u6536\u8d27\u624d\u662f\u6700\u5927\u7684\n\u8fd9\u9898\u597d\u70b9\u6709\u70b9\u591a\uff0c\u53ea\u8981\u8010\u5fc3\u5c31\u4e00\u5b9a\u80fd\u5199\u51fa\u6765\u3002\n\n\u53ea\u8981\u628a\u95ee\u9898\u62c6\u5f00\u5199\u5c31\u8f7b\u677e\u591a\u4e86\u3002\n\n\u4e3b\u8981\u5206\u4e3a\u4e0b\u9762\u51e0\u4e2a\u6b65\u9aa4\uff1a\n\n1. \u8d28\u6570\u95ee\u9898\n1. \u56e0\u5b50\u95ee\u9898\n1. \u5e76\u67e5\u96c6\u95ee\u9898\n\n\u6211\u4eec\u5148\u9884\u5904\u7406\u8d28\u6570\uff0c\u5199\u4e2a\u6b27\u62c9\u7b5b\u628a\u6240\u6709\u8d28\u6570\u7b5b\u51fa\u6765\u3002\n\n\u6b27\u62c9\u7b5b\u4ee3\u7801\uff1a\n\n```cpp\nfor(int i=2;i<=b;i++)//\u6b27\u62c9\u7b5b \n\t{\n\t\tif(!v[i])\n\t\t{\n\t\t\tt[tot++]=i;\n\t\t\tf[i]=1;\n\t\t}\n\t\tfor(int l=0;l<tot&&i*t[l]<=b;l++)\n\t\t{\n\t\t\tv[i*t[l]]=1;\n\t\t\tif(i%t[l]==0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n```\n\n\u7136\u540e\u5728\u5faa\u73af\u4e2d\u6c42\u5b83\u7684\u56e0\u5b50\uff0c\u5982\u679c\u662f\u8d28\u6570\u5c31\u5148\u5b58\u4e0b\u6765\uff08\u56e0\u4e3a\u5982\u679c\u540e\u9762\u51fa\u73b0\u4e86\u8fd9\u4e2a\u8d28\u6570\u7684\u500d\u6570\u662f\u8981\u5206\u5230\u4e00\u4e2a\u7ec4\u91cc\u9762\u7684\uff0c\u6240\u4ee5\u4e0d\u80fd\u7740\u6025\u7d2f\u52a0\uff09\u3002\u4e0d\u662f\u8d28\u6570\u7684\u8bdd\u5c31\u628a\u5b83\u7684\u56e0\u5b50\u6c42\u51fa\u6765\u3002\n\n\u5faa\u73af\u7684\u5185\u5bb9\uff1a\n\n```cpp\nfor(int i=a;i<=b;i++)\n\t{\n\t\tif(f[i])\n\t\t{\n\t\t\tans++;\n\t\t\ts[ans]=i;\n\t\t\ttop[i]++;\n\t\t\tp[i][top[i]]=i;\n\t\t\tmaxx[i]=max(maxx[i],i);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans++;\n\t\t\ts[ans]=i;\n\t\t\tasd(i);\n\t\t}\n\t}\n```\n\n\u6211\u4eec\u5728\u6c42\u56e0\u5b50\u7684\u65f6\u5019\u5728\u52a0\u51e0\u6761\u5224\u65ad\uff0c\u628a\u5c0f\u4e8ep\u7684\u548c\u4e0d\u662f\u8d28\u6570\u7684\u90fd\u6392\u9664\u3002\u8fd8\u9700\u8981\u628a\u8fd9\u662f\u6570\u4e2d\u7684\u6700\u5927\u56e0\u5b50\u7ed9\u5b58\u4e0b\u6765\u3002\n\n\u56e0\u5b50\u5224\u65ad\uff1a\n\n```cpp\nint asd(int x)\n{\n\tfor(int i=2;i<=x/i;i++)\n\t{\n\t\tif(x%i==0)\n\t\t{\n\t\t\tif(f[i])\n\t\t\t{\n\t\t\t\tif(i>=o)\n\t\t\t\t{\n\t\t\t\t\ttop[x]++;\n\t\t\t\t\tp[x][top[x]]=i;\n\t\t\t\t\tmaxx[x]=max(maxx[x],i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(i!=x/i)\n\t\t\t{\n\t\t\t\tif(f[x/i])\n\t\t\t\t{\n\t\t\t\t\tif(x/i>=o)\n\t\t\t\t\t{\n\t\t\t\t\t\ttop[x]++;\n\t\t\t\t\t\tp[x][top[x]]=x/i;\n\t\t\t\t\t\tmaxx[x]=max(maxx[x],x/i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\u6700\u540e\u5c31\u662f\u5173\u952e\u7684\u5e76\u67e5\u96c6\u4e86\u3002\n\n```cpp\nfor(int i=1;i<=ans;i++)\n\t{\n\t\tr1=find(maxx[s[i]]);\n\t\tfor(int j=1;j<=top[s[i]];j++)\n\t\t{\n\t\t\tif(p[s[i]][j]!=maxx[s[i]])\n\t\t\t{\n\t\t\t\tr2=find(p[s[i]][j]);\n\t\t\t\tunionn(r1,r2);\n\t\t\t}\n\t\t}\n\t}\n```\n\n\u5e76\u4e86\u4e4b\u540e\u5728\u7528\u6876\u6392\u5e8f\u7684\u601d\u60f3\u5b58\u8d77\u6765\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u7d2f\u52a0\uff0c\u7b49\u4e8e0\u4e5f\u7d2f\u52a0\u3002\n\n```cpp\nfor(int i=1;i<=ans;i++)\n\t{\n\t\tif(top[s[i]]==0)\n\t\t{\n\t\t\tant++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int j=1;j<=top[s[i]];j++)\n\t\t\t{\n\t\t\t\tr1=find(p[s[i]][j]);\n\t\t\t\tif(r1==0)\n\t\t\t\t{\n\t\t\t\t\tant++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(tou[r1]==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tant++;\n\t\t\t\t\t}\n\t\t\t\t\ttou[r1]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n```\n\n\u6700\u540e\u8f93\u51fa\u5c31\u5b8c\u4e8b\u4e86\u3002\n\n\u4e0a\u603b\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n//#pragma GCC optimize(2)//O2\u4f18\u5316\nusing namespace std;\ntypedef long long ll;\nconst int N=100000+10;\nint a,b,o;\nint ams,father[N];\nint r1,r2,maxx[N];\nint ans,ant,top[N],q[N],p[N][40],s[N];\nint tot,f[N],v[N],t[N];\nint tou[N];\nint asd(int x)\n{\n\tfor(int i=2;i<=x/i;i++)\n\t{\n\t\tif(x%i==0)\n\t\t{\n\t\t\tif(f[i])\n\t\t\t{\n\t\t\t\tif(i>=o)\n\t\t\t\t{\n\t\t\t\t\ttop[x]++;\n\t\t\t\t\tp[x][top[x]]=i;\n\t\t\t\t\tmaxx[x]=max(maxx[x],i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(i!=x/i)\n\t\t\t{\n\t\t\t\tif(f[x/i])\n\t\t\t\t{\n\t\t\t\t\tif(x/i>=o)\n\t\t\t\t\t{\n\t\t\t\t\t\ttop[x]++;\n\t\t\t\t\t\tp[x][top[x]]=x/i;\n\t\t\t\t\t\tmaxx[x]=max(maxx[x],x/i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint find(int x)\n{\n\tif(father[x]!=x)\n\t{\n\t\tfather[x]=find(father[x]);\n\t}\n\treturn father[x];\n}\nvoid unionn(int r1,int r2)\n{\n\tfather[r2]=r1;\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&a,&b,&o);\n\tams=ceil(b/2);\n\t//\u521d\u59cb\u5316\u81ea\u5df1\u90fd\u662f\u81ea\u5df1\u7684\u8001\u5927\n\tfor(int i=1;i<=ams;i++)\n\t{\n\t\tfather[i]=i;\n\t}\n\tfor(int i=2;i<=b;i++)//\u6b27\u62c9\u7b5b \n\t{\n\t\tif(!v[i])\n\t\t{\n\t\t\tt[tot++]=i;\n\t\t\tf[i]=1;\n\t\t}\n\t\tfor(int l=0;l<tot&&i*t[l]<=b;l++)\n\t\t{\n\t\t\tv[i*t[l]]=1;\n\t\t\tif(i%t[l]==0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=a;i<=b;i++)\n\t{\n\t\tif(f[i])\n\t\t{\n\t\t\tans++;\n\t\t\ts[ans]=i;\n\t\t\ttop[i]++;\n\t\t\tp[i][top[i]]=i;\n\t\t\tmaxx[i]=max(maxx[i],i);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans++;\n\t\t\ts[ans]=i;\n\t\t\tasd(i);\n\t\t}\n\t}\n\tfor(int i=1;i<=ans;i++)\n\t{\n\t\tr1=find(maxx[s[i]]);\n\t\tfor(int j=1;j<=top[s[i]];j++)\n\t\t{\n\t\t\tif(p[s[i]][j]!=maxx[s[i]])\n\t\t\t{\n\t\t\t\tr2=find(p[s[i]][j]);\n\t\t\t\tunionn(r1,r2);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=ans;i++)\n\t{\n\t\tif(top[s[i]]==0)\n\t\t{\n\t\t\tant++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int j=1;j<=top[s[i]];j++)\n\t\t\t{\n\t\t\t\tr1=find(p[s[i]][j]);\n\t\t\t\tif(r1==0)\n\t\t\t\t{\n\t\t\t\t\tant++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(tou[r1]==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tant++;\n\t\t\t\t\t}\n\t\t\t\t\ttou[r1]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<ant;\n\treturn 0;\n}\n              \n```\n",
        "postTime": 1567765073,
        "uid": 156734,
        "name": "dfydada\u26a1\u26a1\u26a1",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1621 \u3010\u96c6\u5408\u3011"
    },
    {
        "content": "\u770b\u6837\u5b50\u8fd9\u9053\u9898\u7684\u9898\u9762\u8fd8\u662f\u633a\u86ca\u60d1\u4eba\u6ef4\uff0c\u5927\u90e8\u5206\u4eba\u90fd\u56e0\u6b64\u4f7f\u7528\u4e86\u5e76\u67e5\u96c6\u3002\u4f46\u662f\uff0c\u6ca1\u6709\u5fc5\u8981\uff01    \n\n\u5927\u4f53\u601d\u8def\uff1a\u5148\u7528**\u7b5b\u6cd5**\u628a\u8d28\u6570\u7b5b\u51fa\u6765\uff0c\u518d\u4ece$p$\u5230$b$\u4e4b\u95f4\u627e\u8d28\u6570\uff0c\u627e\u5230\u540e\u518d\u4f9d\u7167\u7b5b\u6cd5\u539f\u7406**\u5411\u4e0a\u7ffb\u500d**\uff0c\u88ab\u89e6\u78b0\u5230\u7684\u6570\u6211\u4eec\u4fbf\u53ef\u4ee5\u8ba4\u4e3a\u662f\u540c\u4e00\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u3002  \u6ce8\u610f\uff1a\u5904\u7406\u7ec6\u8282\u5f88\u91cd\u8981\uff01   \n\u5728\u8fd9\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u5224\u5b9a\u4ee5\u4e0b\u5185\u5bb9\uff1a     \n$1.$ \u901a\u8fc7\u6539\u53d8\u8d77\u59cb\u7aef\u70b9\u7684\u4f4d\u7f6e\u6765\u786e\u4fdd\u5728$[a,b]$\u533a\u95f4\u91cc\uff1b          \n$2.$ \u9700\u8981\u5224\u65ad\u8fd9\u4e2d\u95f4\u5b58\u5728\u7684\u201c\u65e0\u6570\u201d\u60c5\u51b5\uff08\u5373\u626b\u63cf\u5b8c\u540e\u6ca1\u6709\u4efb\u4f55\u6570\uff09     \n$3.$ \u82e5\u626b\u63cf\u65f6\u53d1\u73b0\u6709\u4ee5\u524d\u5df2\u7ecf\u89e6\u78b0\u8fc7\u7684\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e00\u6b21\u626b\u63cf\u7684\u6240\u6709\u6570\uff0c\u4e00\u80a1\u8111\uff0c\u5168\u90e8\u88ab\u8ba4\u4e3a\u4e0e\u524d\u9762\u7684\u70b9\u5728\u540c\u4e00\u96c6\u5408\n\n\u4e0b\u65b9\u4ee3\u7801\uff0c\u8f85\u52a9\u7406\u89e3\n\n```cpp\n# include <cstdio>\n# include <iostream>\n# include <algorithm>\nusing namespace std;\nconst int N=100005;\nint a,b,p,now,sum,ans;\nbool v[N],f[N]; \n\nvoid pri () {\n\tv[0]=v[1]=1;\n\tfor (int i=2;i<=N;i++) {\n\t\tif (v[i]) continue;\n\t\tfor (int j=i;j<=N/i;j++)\n\t\t\tv[i*j]=1;\n\t}\n}//\u7b5b\u6cd5\n\nint main () {\n\tpri ();\n\tscanf (\"%d%d%d\",&a,&b,&p);\n\tfor (int i=p;i<=b;i++) {\n\t\tif (v[i]) continue;\n\t\tif (a%i==0) now=a;\n\t\telse now=i*(a/i+1);\n        //\u5b9a\u8d77\u70b9\n\t\tbool t=0,k=0;//\u7279\u5224\n\t\tfor (int j=now;j<=b;j+=i) {\n\t\t\tif (!f[j]) {\n\t\t\t\tf[j]=1;\n\t\t\t\tt=1;\n\t\t\t\tsum++;\n\t\t\t} \n\t\t\telse k=1;\n\t\t}\n\t\tif (t==1&&k==0) ans++;\n        //\u4ee5\u4e0a\u90e8\u5206\u5747\u53ef\u5bf9\u7167\u6587\u5b57\u90e8\u5206\u67e5\u770b\n\t}\n    //ans\u5b9a\u4e49\u4e3a\u5143\u7d20\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e2\u7684\u96c6\u5408\u4e2a\u6570\n    //\u800c\u5269\u4e0b\u7684\u70b9\u5373\u5355\u4e2a\u6210\u4e00\u96c6\u5408\u7684\u4e2a\u6570\n    //sum\u4e3aans\u4e2a\u96c6\u5408\u4e2d\u6240\u6709\u70b9\u7684\u4e2a\u6570\uff0c\u6240\u4ee5a-b\u95f4\u6240\u6709\u6570\u7684\u4e2a\u6570\u51cf\u53bbsum\uff0c\u5c31\u662f\u5355\u4e2a\u96c6\u5408\n\tprintf (\"%d\\n\",ans+(b-a+1-sum)); \n    //\u76f8\u52a0\uff0c\u5f97\u51fa\u7b54\u6848\n\treturn 0;\n}\n//By\u82cd\u7a7a\u7684\u84dd\u8000\n\n```\n\u5b8c\u7ed3\u6492\u82b1",
        "postTime": 1570027594,
        "uid": 109640,
        "name": "\u5fae\u9999\u7389\u70db\u6697",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1621 \u3010\u96c6\u5408\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u4f3c\u4e4e\u6ca1\u6709\u7528\u6b27\u62c9\u7b5b\u6cd5\u7684\uff1fQWQ\n\n\u8fb9\u7b5b\u8fb9\u505a\u641e\u4e0d\u51fa\u6765\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u6570\u53ea\u88ab\u7b5b\u9009\u4e00\u6b21\uff0c\u5bfc\u81f4\u6709\u4e9b\u60c5\u51b5\u6ca1\u8986\u76d6\u5230\n\nbut\u6b27\u62c9\u7b5b\u6cd5\u4e0d\u4f18\u5316\u4e5f\u6709O\uff08n\uff09\u7684\u4f18\u79c0\u590d\u6742\u5ea6\uff0c\u53ea\u8981\u6211\u4eec\u5408\u5e76\u90e8\u5206\u5904\u7406\u7684\u8f83\u597d\u90a3\u4e48\u6548\u7387\u4e5f\u662f\u5f88\u9ad8\u7684\u8bf4\n\n\u60f3\u5fc5\u5927\u5bb6\u90fd\u4f1a\u5e76\u67e5\u96c6\u548c\u6b27\u62c9\u7b5b\u6cd5\u60f9\n\n\u90a3\u4e48\u5173\u952e\u5c31\u5728\u4e8e\u5904\u7406\u5408\u5e76\n```cpp\nfor(int i=1; i<=ans; i++) {\n\t\tif(shu[i]<k)continue;\n\t\tfor(int j=2; j*shu[i]<=y; j++) {\n\t\t\tif (j * shu[i] >= x && (j-1) * shu[i] >= x)\n\t\t\t\the(j*shu[i],(j-1)*shu[i]);\n\t\t}\n\t}\n```\n\nhe\u662f\u7edf\u4e00\u7956\u5b97\uff0c\u56e0\u4e3a\u8d28\u6570\u4e2a\u6570\u5c0f\u4e8e\u603b\u6570//\u5e9f\u8bdd\n\n\u6240\u4ee5\u6211\u4eec\u5148\u679a\u4e3e\u8d28\u6570\uff0c\u5982\u679c\u5f53\u524d\u8d28\u6570\u5c0f\u4e8e\u9898\u76ee\u8981\u6c42\uff0c\u90a3\u4e48\u5c31\u8df3\u8fc7\uff0c\u82e5\u7b26\u5408\uff0c\u5219\u5c06\u8303\u56f4\u5185\u6240\u6709\u5305\u542b\u8fd9\u4e2a\u8d28\u56e0\u6570\u7684\u6570\u679a\u4e3e\u51fa\u6765\uff0c\u5c06\u5176\u4e00\u4e00\u5408\u5e76\uff0c\u7136\u540e\u5c31\u7ed3\u675f\u4e86QAQ\n\n\u81f3\u4e8e\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\uff0c\u5927\u6982\u5c31\u662fO\uff08\u603b41ms\uff09\u4f10\n\n\u7a9d\u8bd5\u7740\u5199\u4e86\u6b27\u62c9\u7b5b\u6cd5\u8fb9\u505a\u8fb9\u641e\uff0c\u4f4630\u5206\u66b4\u6bd9\u60f9\uff0c\u800c\u4e14\u590d\u6742\u5ea6\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u633a\u9ad8\u7684\n\n\u4e0b\u9762\u662f\u603b\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint f[100050];\nbool num[100050];\nint shu[100050];\nint x,y,k,ans,kkk;\nint find(int x) {\n\tif(f[x]==x)return x;\n\treturn f[x]=find(f[x]);\n}\nvoid su(int n) {\n\tmemset(num,1,sizeof(num));\n\tfor(int i=2; i<=n; i++) {\n\t\tif(num[i])shu[++ans]=i;\n\t\tfor(int j=1; j<=ans&&i*shu[j]<=n; j++) {\n\t\t\tnum[i*shu[j]]=0;\n\t\t\tif(i%shu[j]==0)break;\n\t\t}\n\t}\n\treturn ;\n}\nvoid he(int x,int y) {\n\tint a=find(x),b=find(y);\n\tif(a!=b) {\n\t\tf[a]=b;\n\t}\n}\nint main() {\n\tcin>>x>>y>>k;\n\tfor(int i=1; i<=y; i++)f[i]=i;\n\tsu(y);\n\tfor(int i=1; i<=ans; i++) {\n\t\tif(shu[i]<k)continue;\n\t\tfor(int j=2; j*shu[i]<=y; j++) {\n\t\t\tif (j * shu[i] >= x && (j-1) * shu[i] >= x)\n\t\t\t\the(j*shu[i],(j-1)*shu[i]);\n\t\t}\n\t}\n\tfor(int i=x; i<=y; i++) {\n\t\tif(find(i)==i) {\n\t\t\tkkk++;\n\t\t}\n\t}\n\tcout<<kkk<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1570458981,
        "uid": 234271,
        "name": "\u8c2c\u60a0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1621 \u3010\u96c6\u5408\u3011"
    },
    {
        "content": "\u521a\u5f00\u59cb\u76f4\u63a5\u6c42\u8d28\u6570\uff0c\u5b8c\u4e86\u66b4\u529b\uff0c\u6a21\u62df\u3002\u7136\u540e\u53ea\u670980\u5206\u3002\u96c6\u5408\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u3002\n\u8ba9\u540e\u662f\u770b\u4e86\u697c\u4e0b\u5927\u4f6c\u7684\u9898\u89e3\u3002\u5728\u7528\u57c3\u5f0f\u7b5b\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u6765\u7ef4\u62a4\u3002\u6bcf\u6b21\u90fd\u662f\u7528\u4e00\u4e2a\u8d28\u6570\u7b5b\u53bb\u540e\u9762\u4ed6\u7684\u500d\u6570\u3002\u6b63\u597d\u5bf9\u5e94\u9898\u76ee\u4e2d\u6700\u5927\u516c\u7ea6\u6570\u5927\u4e8e\u7b49\u4e8eP\uff0c\u5e76\u4e14P\u4e3a\u8d28\u6570\u3002\nAC\u4ee3\u7801\uff1a\n```c\n#include<stdio.h>\n#include<iostream>\n#include<algorithm>\n#define MAXN  100005\ntypedef  long long  LL;\nusing namespace std;\n\nint A,B,P;\nint fa[MAXN];\nbool vis[MAXN];\n\nint Find(int x)\n{\n    return fa[x]==x?x:fa[x]=Find(fa[x]);//\u8def\u5f84\u538b\u7f29\n}\n\nvoid init()\n{\n    memset(vis,true,sizeof(vis));\n    for(int i=0;i<=B;i++)        //\u521d\u59cb\u5316\u5e76\u67e5\u96c6\n        fa[i]=i;\n    for(int i=2;i<=B;i++)\n    {\n        if(vis[i])\n        {\n            for(int j=i*2;j<=B;j+=i)\n            {\n                vis[j]=false;\n                if(i>=P)                  //\u662f\u8d28\u6570\u4e14\u5927\u4e8eP\n                {\n                    int xx=Find(i);\n                    int yy=Find(j);\n                    if(xx!=yy)\n                       fa[xx]=yy;            //\u6709P\u8fd9\u4e2a\u8d28\u56e0\u5b50\uff0c\u6240\u4ee5\u5c31\u52a0\u5165\u540c\u4e00\u4e2a\u96c6\u5408\n                }\n            }\n        }\n    }\n}\n\n\nint main()\n{\n    scanf(\"%d %d %d\",&A,&B,&P);\n    init();\n    int sum=0;\n    for(int i=A;i<=B;i++)\n    {\n        if(Find(i)==i)\n            sum++;\n    }\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n\n```\n\n80\u5206\u66b4\u529b\u7248\uff1a\n```c\n#include<stdio.h>\n#include<iostream>\n#include<algorithm>\n#define MAXN  100005\ntypedef  long long  LL;\nusing namespace std;\n\nint A,B,P;\nint fa[MAXN];\nbool vis[MAXN];\n\nint Find(int x)\n{\n    return fa[x]==x?x:fa[x]=Find(fa[x]);\n}\n\nvoid init()\n{\n    memset(vis,true,sizeof(vis));\n    for(int i=0;i<=B;i++)        //\u521d\u59cb\u5316\u5e76\u67e5\u96c6\n        fa[i]=i;\n    for(int i=2;i<=B;i++)\n    {\n        if(vis[i])\n        {\n            for(int j=i*2;j<=B;j+=i)\n            {\n                vis[j]=false;\n                if(i>=P)                  //\u662f\u8d28\u6570\u4e14\u5927\u4e8eP\n                {\n                    int xx=Find(i);\n                    int yy=Find(j);\n                    if(xx!=yy)\n                       fa[xx]=yy;            //\u6709P\u8fd9\u4e2a\u8d28\u56e0\u5b50\uff0c\u6240\u4ee5\u5c31\u52a0\u5165\u540c\u4e00\u4e2a\u96c6\u5408\n                }\n            }\n        }\n    }\n}\n\n\nint main()\n{\n    scanf(\"%d %d %d\",&A,&B,&P);\n    init();\n    int sum=0;\n    for(int i=A;i<=B;i++)\n    {\n        if(Find(i)==i)\n            sum++;\n    }\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n\n```\n",
        "postTime": 1569384108,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1621 \u3010\u96c6\u5408\u3011"
    },
    {
        "content": "\u89e3\u9898\u62a5\u544a\uff1a\n\n\u7b5b\u51fa1-100000\u5f53\u4e2d\u6240\u6709\u7684\u7d20\u6570 \u8fdb\u884c\u9884\u5904\u7406 \n\n\u91c7\u7528\u7ebf\u6027\u7b5b \u4e0d\u4f1a\u8bf7\u5de6\u8f6c [P3383 \u3010\u6a21\u677f\u3011\u7ebf\u6027\u7b5b\u7d20\u6570](https://www.luogu.org/problemnew/show/P3383)\n\n\u5bf9\u4e8e\u96c6\u5408\u5212\u5206 \u5f88\u81ea\u7136\u5c31\u4f1a\u60f3\u5230\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u5176\u8fde\u901a\u6027 \u5bf9\u4e8e\u6027\u8d28\u76f8\u540c\u7684\u5143\u7d20\u5408\u5e76\u5165\u540c\u4e00\u4e2a\u96c6\u5408 \u6700\u540e\u7edf\u8ba1\u7236\u4eb2\u8282\u70b9\u4e2a\u6570\u5373\u53ef\n\n\u521a\u5f00\u59cb\u6709\u4e00\u4e2a\u5730\u65b9\u60f3\u9519\u4e86 \n\n\u6211\u521a\u5f00\u59cb\u662f\u8fd9\u6837\u8fdb\u884c\u5e76\u67e5\u96c6\u7ef4\u62a4\u7684\n\n```cpp\n\tpx=find(prime[i]);\n\tfor (int j=1;j*prime[i]<=b;j++){\n\t\tpy=find(j*prime[i]);\n\t\tif (px==py) continue;\n\t\tf[py]=px;\n     \t}\n```\n\n\u7136\u540e\u7edf\u8ba1\u5728a-b\u533a\u95f4\u5185\u7684\u7956\u5148\u8282\u70b9\u4e2a\u6570 \u4e4d\u4e00\u770b\u5f88\u5bf9 \u5176\u5b9e\u9519\u5f97\u5f88\u79bb\u8c31\n\n\u4ed4\u7ec6\u60f3\u4e00\u60f3\u5c31\u4f1a\u77e5\u9053 \u8fd9\u6837\u7ef4\u62a4\u7684\u8bdd \u6700\u540e\u7684\u7956\u5148\u8282\u70b9\u4f1a\u7edf\u4e00\u5230 \n\n$prime[i]$ \u4e0a\u53bb \u5982\u679c\u51fa\u73b0\u4e00\u4e2a$prime[i]$\u4e0d\u5728a-b\u7684\u533a\u95f4\u5185 \u5c31\u4f1a\n\n\u6709\u4e00\u90e8\u5206\u7684\u7236\u4eb2\u8282\u70b9\u5728\u533a\u95f4\u5916 \u90a3\u4e48\u7edf\u8ba1\u7b54\u6848\u7b54\u6848\u65f6\u5019\u5c31\u4f1a\u4e22\u5931\u4e00\u90e8\u5206\u6570\u636e\n\n\u90a3\u4e48\u600e\u4e48\u529e\u5462\uff1f\n\n\u627e\u51fa\u5f53\u524d\u7d20\u6570\u5728a-b\u7684\u8303\u56f4\u8868\u793a\u7684\u7b2c\u4e00\u4e2a\u6570 \u7136\u540e\u5728\u8fdb\u884c\u7ef4\u62a4\u7684\u65f6\u5019 \u7edf\u4e00\u5230\u7b2c\u4e00\u4e2a\u6570 \u90a3\u4e48\u6211\u4eec\u6700\u540e\u5728\u8fdb\u884c\u626b\u63cf\u7684\u65f6\u5019 \u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u96c6\u5408\u7684\u7236\u4eb2\u90fd\u5728\u533a\u95f4\u5185\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint prime[100005],v[100005],tot;\nint a,b,p,f[100005],px,py,ans;\nvoid pri(){\n\tfor (int i=2;i<=100000;i++){\n\t\tif (!v[i]){\n\t\t\tv[i]=i;\n\t\t\tprime[++tot]=i; \n\t\t}\n\t\tfor (int j=1;j<=tot;j++){\n\t\t\tif (v[i]<prime[j]||i*prime[j]>100000) break;\n\t\t\tv[prime[j]*i]=prime[j];\n\t\t}\n\t}\n}\nint find(int x){\n\tif (x==f[x]) return x;\n\treturn f[x]=find(f[x]);\n}\nint main(){\n\tpri();\n\t//for (int i=1;i<=100;i++) printf(\"%d\\n\",prime[i]);\n\tscanf(\"%d%d%d\",&a,&b,&p);\n\tfor (int i=1;i<=100005;i++) f[i]=i; \n\tfor (int i=1;i<=tot;i++)\n\t\tif (prime[i]>=p){\n\t\t/*\n\t\t\tpx=find(prime[i]);\n\t\t\tfor (int j=1;j*prime[i]<=b;j++){\n\t\t\t\tpy=find(j*prime[i]);\n\t\t\t\tif (px==py) continue;\n\t\t\t\tf[py]=px;\n\t\t*/\n\t\t//\u96c6\u5408\u5408\u5e76\u9519\u8bef \u4e0d\u662f\u4e0e\u7d20\u6570\u5408\u5e76\u4e3a\u4e00\u4e2a\u96c6\u5408 \u800c\u662f\u4e0e\u5728a-b\u7684\u8303\u56f4\u7c7b\u7b26\u5408\u6761\u4ef6\u7684\u6570\u5408\u5e76\u4e3a\u4e00\u4e2a\u96c6\u5408\n\t\t\tint flag=1,tmp; \n\t\t\tfor (int j=1;j*prime[i]<=b;j++){\n\t\t\t\t\tif (j*prime[i]>=a&&flag){\n\t\t\t\t\t\ttmp=j*prime[i];\n\t\t\t\t\t\tflag=0;\n\t\t\t\t\t\tpx=find(tmp);\n\t\t\t\t\t}//\u5bfb\u627e\u7b2c\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u6570 \u4f5c\u4e3a\u96c6\u5408\u5408\u5e76\u7684\u5bf9\u8c61\n\t\t\t\t\tif (j*prime[i]>=a){\n\t\t\t\t\t\tpy=find(j*prime[i]);\n\t\t\t\t\t\tif (px==py) continue;\n\t\t\t\t\t\tf[py]=px;\n\t\t\t\t\t}\t\t\n\t\t\t\t}\n\t\t\t} \n\tfor (int i=a;i<=b;i++)\n\t\tif (f[i]==i) ans++;\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1558105818,
        "uid": 99460,
        "name": "Hiraeth",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1621 \u3010\u96c6\u5408\u3011"
    },
    {
        "content": "\u672c\u6587\uff08\u4e0d\u4e00\u5b9a\uff09\u540c\u6b65\u53d1\u8868\u4e8e[Handwer's Blog](https://blog.handwer-std.top/)\n\n---\n\n\u9898\u76ee\u4e2d\u201c\u8d28\u6570\u201d\u4e24\u4e2a\u5b57\u5f88\u662f\u663e\u773c\u554a\n\n\u8fd8\u7b49\u5565\u554a\n\n### \u7b5b\u554a\n\n\u7d20\u6570\u7b5b\u5f88\u597d\u5199\u5427\n\n---\n\n\u7b5b\u5b8c\u4e86\uff0c\u7136\u540e\u5462\uff1f\n\n\u9898\u76ee\u8ba9\u6211\u4eec\u627e\u4e24\u4e2a\u516c\u5171\u8d28\u56e0\u6570 $ \\geq P $ \u7684\uff0c\u4e0d\u5728\u4e00\u4e2a\u96c6\u5408\u91cc\u7684\u6570\uff0c\u5e76\u5408\u5e76\u5b83\u4eec\u3002\u6211\u4eec\u4e0d\u8fd9\u6837\u627e\n\n---\n\n\u679a\u4e3e\u6bcf\u4e00\u4e2a\u8d28\u6570`primes[i]`\uff0c\u8ba1\u7b97\u51fa`\u7b2c\u4e00\u4e2a` `\u5927\u4e8eA`\u7684`primes[i]\u7684\u500d\u6570`\uff08\u9898\u76ee\u8981\u6c42\u7684\uff09\u8bb0\u4e3a$t$\uff0c\u7136\u540e\u4ece$t+\\text{primes[i]}$\u4e00\u76f4\u679a\u4e3e\u5230$B$\uff08\u6bcf\u6b21\u589e\u957f\u4e00\u4e2a$\\text{primes[i]}$\uff0c\u6bd5\u7adf\u8981\u6c42\u5fc5\u987b\u6709$\\text{primes[i]}$\u8fd9\u4e2a\u6570\u4f5c\u4e3a\u8d28\u56e0\u6570\uff09\uff0c\u6bcf\u6b21\u7528\u5e76\u67e5\u96c6\u5408\u5e76$t$\u548c\u5f53\u524d\u679a\u4e3e\u5230\u7684\u8fd9\u4e2a\u6570\n\n# \u4ee3\u7801\u5b9e\u73b0\n```cpp\n#include <iostream>\n#include <cstdio>\n\n#define FILE_IN(__fname) freopen(__fname, \"r\", stdin)\n#define FILE_OUT(__fname) freopen(__fname, \"w\", stdout)\n#define IMPROVE_IO() std::ios::sync_with_stdio(false)\n\nusing std::cin;\nusing std::cout;\nusing std::endl;\nusing std::max;\n\nconst int MAXB = 100000 + 10;\n\nint A, B, P;\n\nint primes[MAXB], cnt, ans;\nbool npm[MAXB]; // n(ot a )p(ri)m(e) -> not a prime\n\nint U[MAXB];\n\nint Find(int x) {\n\tif (U[x] == x) return x;\n\treturn U[x] = Find(U[x]);\n}\n\ninline void Union(int x, int y) {\n\tx = Find(x), y = Find(y);\n\tif (x == y) return;\n\t--ans; // \u4e24\u4e2a\u96c6\u5408\u53d8\u6210\u4e86\u4e00\u4e2a\uff0c\u7b54\u6848\u51cf\u4e00\n\tU[x] = y;\n}\n\nint main() {\n    IMPROVE_IO();\n    cin >> A >> B >> P;\n\tfor (int i = 1; i <= B; ++i) U[i] = i; // \u5e76\u67e5\u96c6\u521d\u59cb\u5316\n    // \u7b5b\u4e00\u6ce2\u7d20\u6570\n    for (int i = 2; i <= B; ++i) {\n    \tif (!npm[i]) primes[++cnt] = i;\n    \tfor (int j = 1; j <= cnt && primes[j] * i <= B; ++j) {\n    \t\tnpm[primes[j] * i] = true;\n    \t\tif (i % primes[j] == 0) break;\n\t\t}\n\t}\n\tans = B - A + 1; // r - l + 1\n    // \u539f\u6765\u7684\u7b54\u6848\u603b\u6570\u662f\uff08\u53f3\u8fb9\u754c - \u5de6\u8fb9\u754c + 1\uff09\n    //\uff08\u5373 B - A + 1\uff09\uff0c\u6bcf\u6b21\u5408\u5e76\u96c6\u5408\u7684\u65f6\u5019\u4e24\u4e2a\u96c6\u5408\u53d8\u6210\u4e86\u4e00\u4e2a\uff0c--ans\n\tfor (int i = 1; i <= cnt; ++i) {\n\t\tif (primes[i] < P) continue; // \u8d28\u56e0\u6570\u8981\u6c42\u5927\u4e8e\u7b49\u4e8eP\n\t\tint np = (A + primes[i] - 1) / primes[i] * primes[i];\n\t\t// np -> The smallest multiple of primes[i] larger than A\n        // np -> \u6700\u5c0f\u7684 \u6bd4A\u5927\u7684 primes[i]\u7684\u500d\u6570\n\t\tfor (int j = np + primes[i]; j <= B; j += primes[i]) {\n\t\t\tUnion(np, j); \n\t\t}\n\t} \n\tcout << ans << endl;\n    return 0;\n}\n\n```",
        "postTime": 1548932759,
        "uid": 56626,
        "name": "HDWR",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1621 \u3010\u96c6\u5408\u3011"
    },
    {
        "content": "\u89e3\uff1a\u5bf9\u4e8e\u6b64\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u5c06\u6bcf\u4e2a\u6570\u5f52\u5230\u5b83\u5bf9\u5e94\u7684\u8d28\u56e0\u5b50\u96c6\u5408\u4e2d\n\n\u4f46\u662f\u8fd9\u6837\u52bf\u5fc5\u4f1a\u6709\u91cd\u590d\uff0c\u600e\u4e48\u529e\u5462\uff1f\n\n\u5bf9\u4e8e\u6bcf\u4e2a>=p\u7684\u8d28\u6570\uff0c\u6211\u4eec\u679a\u4e3e\u4ed6\u7684\u500d\u6570(\u5047\u8bbe\u662fx)\n\nif A<=x<=B   \u6211\u4eec\u5c06x\u4e0ep\u4e4b\u95f4\u5efa\u4e00\u6761\u8fb9\n\n\u5230\u6700\u540e\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u4e4b\u95f4\u662f\u6709\u5173\u7cfb\u7684\uff0c\u90a3\u4e48\u4ed6\u4eec\u5fc5\u5c06\u5728\u56fe\u4e0a\u53ef\u4ee5\u4e92\u76f8\n\n\u5230\u8fbe\n\n\u6240\u4ee5\u6700\u540e\u6211\u4eec\u53ea\u9700\u627e\u51fa\u6700\u540e\u56fe\u4e2d\u6709\u591a\u5c11\u4e2a\u8054\u901a\u5757\u5c31\u53ef\u4ee5\u4e86\n\n[OK](http://www.cnblogs.com/adelalove/p/8796318.html)",
        "postTime": 1523434126,
        "uid": 83546,
        "name": "\u4f9d\u4f9d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1621 \u3010\u96c6\u5408\u3011"
    },
    {
        "content": "~~\u8fd9\u9053\u9898\u6807\u9898\u5c31\u662f\"\u96c6\u5408\",\u4e0d\u7528\u5e76(\u5408\u5e76)\u67e5(\u67e5\u627e)\u96c6(\u96c6\u5408)\u53c8\u600e\u4e48\u8fc7\u610f\u5f97\u53bb\u5462?~~\n\n\u53ef\u4ee5\u5148\u7528\u6b27\u62c9\u7b5b\u628a\u5c0f\u4e8e\uff42\u7684\u7d20\u6570\u90fd\u7b5b\u51fa\u6765\uff0c\u7136\u540e\u6bcf\u4e2a\u7d20\u6570\u7684\u500d\u6570\u80af\u5b9a\u90fd\u662f\u4e00\u4e2a\u96c6\u5408\u7684\uff0c\n\n\u7136\u540e\u67d0\u4e2a\u6570\u7684\u7d20\u56e0\u6570\u5982\u679c\u4e0d\u6b62\u4e00\u4e2a\uff0c\u90a3\u8fd8\u53ef\u4ee5\u548c\u522b\u7684\u96c6\u5408\u5408\u5e76\u6210\u4e00\u4e2a\u96c6\u5408\u3002\n\n\u679a\u4e3e\u7d20\u6570\u7684\u65f6\u5019\u53ef\u4ee5\u641e\u4e00\u4e2a\u6807\u8bb0\uff0c\u8868\u793a\u8fd9\u4e2a\u7d20\u6570\u7684\u96c6\u5408\u5bf9\u7b54\u6848\u6709\u6ca1\u6709\u8d21\u732e\uff0c\n\n\u82e5\u5728\u679a\u4e3e\u8fd9\u4e2a\u7d20\u6570\u7684\u500d\u6570\u7684\u65f6\u5019\u53d1\u73b0\u67d0\u4e2a\u6570\u662f\u5df2\u7ecf\u6709\u627e\u51fa\u6765\u7684\u8d28\u56e0\u6570\uff0c\n\n\u90a3\u4e48\u8fd9\u4e2a\u7d20\u6570\u96c6\u5408\u80af\u5b9a\u53ef\u4ee5\u548c\u524d\u9762\u7684\u90a3\u4e2a\u7d20\u6570\u96c6\u5408\u5408\u5e76\uff0c\n\n\u6240\u4ee5\u8fd9\u4e2a\u7d20\u6570\u96c6\u5408\u5bf9\u7b54\u6848\u662f\u6ca1\u6709\u8d21\u732e\u7684\u3002\u5728\u6700\u540e\u8fd8\u8981\u628a\u7b54\u6848\u52a0\u4e0a\u90a3\u4e9b\u6ca1\u6709\u627e\u5230\u8d28\u56e0\u5b50\u7684\u6570\u7684\u6570\u91cf\u3002\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\n#define ll long long\n#define re register\n#define il inline\n#define fp(i,a,b) for(re int i=a;i<=b;i++)\n#define fq(i,a,b) for(re int i=a;i>=b;i--)\nusing namespace std;\nint a,b,p,prim[100005]={},cnt,f[100005]={},ans;\nbool check[100005]={};\nil int find(int x)//\u5e76\u67e5\u96c6\u5e38\u89c4\u67e5\u627e\u64cd\u4f5c\n{\n    return f[x]==x ? x : f[x]=find(f[x]);\n}\nil void combine(int u,int fa)//\u5e76\u67e5\u96c6\u5e38\u89c4\u5408\u5e76\u64cd\u4f5c\n{\n    f[find(u)]=f[find(fa)];\n}\nil int gi()\n{\n    re int x=0;\n    re int t=1;\n    re char ch=getchar();\n    while((ch<'0'||ch>'9')&&ch!='-') ch=getchar();\n    if(ch=='-') t=-1,ch=getchar();\n    while(ch>='0'&&ch<='9') x=x*10+ch-48,ch=getchar();\n    return x*t;\n}\nint main()\n{\n    a=gi();b=gi();p=gi();\n    fp(i,a,b) f[i]=i;//\u521d\u59cb\u5316,\u81ea\u5df1\u7684\u7236\u4eb2\u662f\u81ea\u5df1\n    fp(i,2,b)\n    {\n        if(!check[i]) prim[++cnt]=i;\n        for(re int j=1;j<=cnt&&i*prim[j]<=b;j++)\n        {\n            check[prim[j]*i]=1;\n            if(i%prim[j]==0) break;\n        }\n```\n}//\u7ebf\u6027\u7b5b\u7d20\u6570(\u628a\u6240\u6709\u7d20\u6570\u52a0\u5165prim\u6570\u7ec4)\n```cpp\n    fp(i,1,cnt)\n        if(prim[i]>=p)\n        {\n            int c=a/prim[i]*prim[i];//c\u6709\u6839prim[i]\n            if(c!=a) c+=prim[i];//\u4f7fc\u5927\u4e8ea\n            for(re int j=c+prim[i];j<=b;j+=prim[i]) combine(j,c);//\u628a\u6709\u6839prim[i]\u7684\u6570\u5408\u5e76\n        }\n    fp(i,a,b) if(f[i]==i) ans++;//\u672a\u88ab\u5408\u5e76\u7684\u6570\u81ea\u7136\u5206\u522b\u4ee3\u8868\u4e00\u4e2a\u96c6\u5408\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1506861710,
        "uid": 21534,
        "name": "ysner",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1621 \u3010\u96c6\u5408\u3011"
    },
    {
        "content": "\u4e0e\u697c\u4e0b\u7684\u7b97\u6cd5\u662f\u4e0d\u540c\u7684\n\n\u679a\u4e3e\u6bcf\u4e00\u4e2a[p,B]\u95f4\u7684\u7d20\u6570\uff0c\u5e76\u628a\u4ed6\u4eec\u7684\u5408\u6570\u5408\u5e76\u5728\u5f53\u524d\u7d20\u6570\u7684\u96c6\u5408\u5185\uff0c\u53ef\u6070\u597d\u5904\u7406\u7d20\u6570\u4e0e\u7d20\u6570\u4e4b\u95f4\u662f\u5426\u5728\u540c\u4e00\u96c6\u5408\u7684\u95ee\u9898\n\n\n\n\n\n    \n    \n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int MAXN = 100001;\nint A,B,p,Prime[MAXN],Father[MAXN],From,Ans,Size;\nbool NotPrime[MAXN]={1,1},Vis[MAXN];\n//Prime\u8bb0\u5f55\u7d20\u6570\uff0cFather\u5e76\u67e5\u96c6\uff0cNotPrime\u5224\u65adi\u662f\u5426\u4e3a\u975e\u7d20\u6570\uff0cVis\u7528\u4e8e\u8f85\u52a9\u8f93\u51fa\u96c6\u5408\u7684\u4e2a\u6570 \nvoid Make_Prime()//\u7ebf\u6027\u7b5b\u7d20\u6570\u4e0d\u89e3\u91ca \n{\n    for(int i=2;i<=B;i++)//\u628a(1,B]\u4e4b\u95f4\u7684\u7d20\u6570\u7b5b\u51fa\u6765 \n    {\n        if(!NotPrime[i])\n            Prime[++Size]=i;\n        for(int j=1;j<=Size&&Prime[j]*i<=B;j++)\n            NotPrime[Prime[j]*i]=true;\n    }\n}\nint Find(int t)//\u5e76\u67e5\u96c6 \n{\n    if(t!=Father[t]) return Father[t]=Find(Father[t]);\n    return t;\n}\nint main()\n{\n    scanf(\"%d%d%d\",&A,&B,&p);\n    Make_Prime();\n    for(int i=1;i<=Size;i++)//\u627e\u5230\u6700\u5c0f\u7684\u53ef\u7528\u7d20\u6570 \n        if(Prime[i]>=p)\n        {\n            From=i;\n            break;\n        }\n    for(int i=1;i<=B;i++)\n        Father[i]=i;\n    for(int i=From,v;i<=Size;i++)\n    {\n        for(int j=ceil(A*1.0/Prime[i]),Now;Prime[i]*j<=B;j++)//Prime[i]*j\u8868\u793a\u8be5\u6570\u7684\u67d0\u4e00\u8d28\u56e0\u6570\u4e3aPrime[i]\uff0c\n        {//                                                \u521d\u59cb\u5316\u4e0e\u7ec8\u6b62\u6761\u4ef6\u4f7fPrime[i]*j\u5728[A,B]\u8303\u56f4\u5185 \n            Now=Find(Prime[i]);\n            v=Find(Prime[i]*j);\n            Father[v]=Now;\n        }\n    }\n    for(int i=A,u;i<=B;i++)//\u8ba1\u7b97\u96c6\u5408\u4e2a\u6570 \n        if(!Vis[u=Find(i)])\n        {\n            Vis[u]=1;\n            Ans++;\n        }\n    printf(\"%d\",Ans);\n    return 0;\n}\n```",
        "postTime": 1483000105,
        "uid": 20116,
        "name": "never_see",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1621 \u3010\u96c6\u5408\u3011"
    }
]