[
    {
        "content": "\u9996\u5148\uff0c\u53ef\u4ee5\u7b49\u6548\u5730\u628a\u9898\u76ee\u770b\u6210\u4ece\u76ee\u6807\u5c9b\u5c7f\u51fa\u53d1\u5230\u8fbe\u6bcf\u4e2a\u5176\u4ed6\u5c9b\u5c7f\uff0c\u8fd9\u5728\u601d\u8003\u4e0a\u66f4\u5bb9\u6613\u4e00\u4e9b\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/fi7mmzuw.png)\n\n\u663e\u7136\uff0c\u5728\u533a\u57df $1$ \u548c $3$ \u7684\u5730\u65b9\u53ef\u4ee5\u4e00\u6b21\u53bb\u5230\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vkiegiis.png)\n\n\u4e0e\u7b2c\u4e00\u5f20\u56fe\u76f8\u6bd4\uff0c\u4ee3\u8868\u533a\u57df $2$ \u7684\u77e9\u5f62\u5df2\u7ecf\u6536\u7f29\u4e86\uff0c\u533a\u57df $4$ \u4e5f\u662f\u5982\u6b64\u3002\u968f\u7740 BFS \u8fdb\u5c55\u5230\u7b2c $3,4$ \u6216\u8005\u66f4\u591a\u6b65\uff0c\u8fd9\u4e24\u4e2a\u77e9\u5f62\u5c06\u7ee7\u7eed\u7f29\u5c0f\uff0c\u76f4\u5230\u8fdb\u884c\u5230\u7b2c $i$ \u6b65\u65f6\uff0c\u6ca1\u6709\u4efb\u4f55\u5c9b\u5c7f\u5728\u5176\u4e2d\uff08\u6240\u6709\u5c9b\u5c7f\u90fd\u80fd\u5728 $i$ \u6b65\u4ee5\u5185\u53bb\u5230\uff09\u3002\u5982\u679c\u6211\u4eec\u9700\u8981\u77e5\u9053\uff0c\u5728 BFS \u7684\u4e0b\u4e00\u6b65\uff0c\u8fd9\u4e24\u4e2a\u767d\u8272\u533a\u57df\u5c06\u5982\u4f55\u7f29\u5c0f\uff0c\u53ea\u8981\u77e5\u9053\u5728\u5b83\u5468\u56f4\u6700\u9760\u8fb9\u7684\u5c9b\u5c7f\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u4e9b\u5c9b\u5c7f\u5728\u4e0b\u56fe\u4e2d\u7528\u6d45\u7070\u8272\u6807\u8bb0\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zqavwo3g.png)\n\n\u8bbe $\\operatorname{dp(r,c)}$ \u4e3a\u8bbf\u95ee\u77e9\u5f62 $(r,c)-(N,1)$\uff08\u5c31\u662f\u4e0a\u9762\u7684\u7a7a\u767d\u90e8\u5206\uff09\u4e2d\u5c9b\u5c7f\u6240\u9700\u7684\u4f59\u4e0b\u8df3\u6570\uff0c\u8bbe $\\operatorname{cnt(r,c)}$ \u4e3a\u77e9\u5f62\u4e2d\u7684\u5c9b\u5c7f\u6570\u91cf\u3002\n\n\u5982\u679c\u77e9\u5f62\u4e2d\u6ca1\u6709\u5c9b\u5c7f\uff08$\\operatorname{cnt(r,c)}=0$\uff09\uff0c\u90a3\u4e48 $\\operatorname{dp(r,c)}=0$\uff0c\u8868\u793a\u4e0d\u9700\u8981\u518d\u7ee7\u7eed\u8df3\u4e86\u3002\u5426\u5219\uff0c\u5f53 BFS \u7ee7\u7eed\uff0c\u77e9\u5f62\u4f1a\u7f29\u5c0f\u81f3 $(\\operatorname{min_r{(r,c)}},\\operatorname{max_c{(r,c)}})-(N,1)$\u3002\u5176\u4e2d $\\operatorname{min_r}$ \u662f\u77e9\u5f62\u5de6\u4fa7\u6240\u6709\u5c9b\u5c7f\u4e2d\u7684\u6700\u5c0f\u884c\uff0c$\\operatorname{max_c}$ \u662f\u77e9\u5f62\u4e0b\u65b9\u6240\u6709\u5c9b\u5c7f\u4e2d\u7684\u6700\u5927\u5217\u3002\u73b0\u5728\uff0c$\\operatorname{dp(r,c)}$ \u5f88\u5bb9\u6613\u72b6\u6001\u8f6c\u79fb\u4e3a $\\operatorname{cnt(r,c)}+\\operatorname{dp(min_r{(r,c)},max_c{(r,c)})}$\u3002\n\n\u5bf9\u4e8e\u5de6\u4e0b\u89d2\u77e9\u5f62\uff0c\u4e5f\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff0c\u6700\u540e\u628a\u7ed3\u679c\u52a0\u8d77\u6765\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4ece\u8d77\u59cb\u5c9b\u5c7f\u5f00\u59cb\u7684\u603b\u8df3\u6570\u3002\n\n\u5b98\u65b9\u9898\u89e3\u4ee3\u7801\uff1a\n\n```cpp\n// CEOI 2013 - Task: Adriatic - Solution\n// Author: Gustav Matula\n\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <iostream>\n\nusing namespace std;\n\n#define MAXC 2500\n#define MAXN 250005\n#define CFF 0102\n\nint N;\nint x[MAXN], y[MAXN];\n\nint on[MAXC+2][MAXC+2];\nint cnt[MAXC+2][MAXC+2];\nint minx[MAXC+2][MAXC+2];\nint miny[MAXC+2][MAXC+2];\nint maxx[MAXC+2][MAXC+2];\nint maxy[MAXC+2][MAXC+2];\n\nint mur[MAXC+2][MAXC+2];\nint mdl[MAXC+2][MAXC+2];\n\nint ur(int x, int y) {\n  int &ref = mur[x][y];\n  if (ref != -1) return ref;\n  if (cnt[x][MAXC] - cnt[x][y-1] == 0) return ref =  0;\n  return ref = cnt[x][MAXC] - cnt[x][y-1] + ur(min(x, minx[x][y-1]), max(y, maxy[x+1][y]));\n}\n\nint dl(int x, int y) {\n  int &ref = mdl[x][y];\n  if (ref != -1) return ref;\n  if (cnt[MAXC][y] - cnt[x-1][y] == 0) return ref =  0;\n  return ref = cnt[MAXC][y] - cnt[x-1][y] + dl(max(x, maxx[x][y+1]), min(y, miny[x-1][y]));\n}\n\nint main(void)\n{\n  scanf(\"%d\", &N);\n  \n  if (N == 1) std::cout << 0, exit(0);\n\n  for (int i = 0; i < N; ++i) {\n    scanf(\"%d%d\", x+i, y+i);\n    on[x[i]][y[i]] = 1;\n  }\n\n  memset(minx, 0x3f, sizeof minx);\n  memset(miny, 0x3f, sizeof miny);\n\n  for (int i = 1; i <= MAXC; ++i) {\n    for (int j = 1; j <= MAXC; ++j) {\n      cnt[i][j] = on[i][j] + cnt[i-1][j] + cnt[i][j-1] - cnt[i-1][j-1];\n      minx[i][j] = on[i][j] ? min(i, minx[i-1][j]) : min(minx[i-1][j], minx[i][j-1]);\n      miny[i][j] = on[i][j] ? min(j, miny[i][j-1]) : min(miny[i-1][j], miny[i][j-1]);\n    }\n  }\n\n  for (int i = MAXC; i >= 1; --i) {\n    for (int j = MAXC; j >= 1; --j) {\n      maxx[i][j] = on[i][j] ? max(i, maxx[i+1][j]) : max(maxx[i+1][j], maxx[i][j+1]);\n      maxy[i][j] = on[i][j] ? max(j, maxy[i][j+1]) : max(maxy[i+1][j], maxy[i][j+1]);\n    }\n  }\n\n  memset(mur, -1, sizeof mur);\n  memset(mdl, -1, sizeof mdl);\n\n  for (int i = 0; i < N; ++i) \n    printf(\"%d\\n\", cnt[MAXC][MAXC] + ur(x[i], y[i]) + dl(x[i], y[i]) - 3);\n\n  return 0;\n}\n```\n\n\u8fd9\u9898\u8fd8\u6709\u4e00\u4e2a\u5c0f\u5751\u70b9\u3002\u770b\u5230\u8bf4\u660e\u63d0\u793a\u6700\u540e\u4e00\u884c\uff0c\u53d1\u73b0 $N$ \u53ef\u4ee5\u4e3a $1$\uff0c\u8fd9\u8bf4\u660e\u4ec0\u4e48\uff1f\u5c1d\u8bd5\u4e00\u4e0b\uff0c$N=1$ \u65f6\uff0c\u5f88\u660e\u663e\u5e94\u8be5\u8f93\u51fa\u7684\u662f $0$\u3002\u6240\u4ee5\u8fd9\u4efd\u4ee3\u7801\u5728 `main` \u51fd\u6570\u5f00\u5934\u7279\u5224\u4e86\u4e00\u4e0b\uff0c\u76f4\u63a5\u8f93\u51fa\uff0c\u7ed3\u675f\u7a0b\u5e8f\uff0c\u907f\u514d\u7ee7\u7eed\u8fd0\u884c\uff0c\u4ea7\u751f\u9519\u8bef\u7684\u7ed3\u679c\u3002\n",
        "postTime": 1682612143,
        "uid": 542457,
        "name": "cff_0102",
        "ccfLevel": 4,
        "title": "P9272 [CEOI2013] Adritic \u9898\u89e3"
    }
]