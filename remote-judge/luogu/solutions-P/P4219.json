[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a $n$ \u4e2a\u7ed3\u70b9\u548c $q$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u4e3a\u5982\u4e0b\u5f62\u5f0f\uff1a\n\n```A x y``` \u5728\u7ed3\u70b9 $x$ \u548c $y$ \u4e4b\u95f4\u8fde\u63a5\u4e00\u6761\u8fb9\u3002\n\n```Q x y``` \u7ed9\u5b9a\u4e00\u6761\u5df2\u7ecf\u5b58\u5728\u7684\u8fb9 $(x,y)$ \uff0c\u6c42\u6709\u591a\u5c11\u6761\u7b80\u5355\u8def\u5f84\uff0c\u5176\u4e2d\u5305\u542b\u8fb9 $(x,y)$ \u3002\n\n\u4fdd\u8bc1\u5728\u4efb\u610f\u65f6\u523b\uff0c\u56fe\u7684\u5f62\u6001\u90fd\u662f\u4e00\u68f5\u68ee\u6797\u3002\n\n$1\\le n,q,x,y\\le 10^5$\n\n## \u89e3\u9898\u601d\u8def\n\n\u4e3a\u8be2\u95ee ```Q``` \u8003\u8651\u53e6\u4e00\u79cd\u8868\u8ff0\uff0c\u6211\u4eec\u53d1\u73b0\u7b54\u6848\u7b49\u4e8e\u8fb9 $(x,y)$ \u5728 $x$ \u4fa7\u7684\u7ed3\u70b9\u6570\u4e0e $y$ \u4fa7\u7684\u7ed3\u70b9\u6570\u7684\u4e58\u79ef\uff0c\u5373\u5c06\u8fb9 $(x,y)$ \u65ad\u5f00\u540e\u5206\u522b\u5305\u542b $x$ \u548c $y$ \u7684\u6811\u7684\u7ed3\u70b9\u6570\u3002\u4e3a\u4e86\u6d88\u9664\u65ad\u8fb9\u7684\u5f71\u54cd\uff0c\u5728\u8be2\u95ee\u540e\u6211\u4eec\u518d\u6b21\u8fde\u63a5\u8fb9 $(x,y)$ \u3002\n\n\u9898\u76ee\u4e2d\u7684\u64cd\u4f5c\u65e2\u6709\u8fde\u8fb9\uff0c\u53c8\u6709\u5220\u8fb9\uff0c\u8fd8\u4fdd\u8bc1\u5728\u4efb\u610f\u65f6\u523b\u90fd\u662f\u4e00\u68f5\u68ee\u6797\uff0c\u6211\u4eec\u4e0d\u7531\u5f97\u60f3\u5230\u7528 LCT \u6765\u7ef4\u62a4\u3002\u4f46\u662f\u8fd9\u9898\u4e2d LCT \u7ef4\u62a4\u7684\u662f\u5b50\u6811\u7684\u5927\u5c0f\uff0c\u4e0d\u50cf\u6211\u4eec\u5370\u8c61\u4e2d\u7684\u7ef4\u62a4\u4e00\u6761\u94fe\u7684\u4fe1\u606f\uff0c\u800c LCT \u7684\u6784\u9020 **\u8ba4\u7236\u4e0d\u8ba4\u5b50** \uff0c\u4e0d\u65b9\u4fbf\u6211\u4eec\u76f4\u63a5\u8fdb\u884c\u5b50\u6811\u7684\u7edf\u8ba1\u3002\u600e\u4e48\u529e\u5462\uff1f\n\n\u65b9\u6cd5\u662f\u7edf\u8ba1\u4e00\u4e2a\u7ed3\u70b9 $x$ \u6240\u6709\u865a\u513f\u5b50\uff08\u5373\u7236\u4eb2\u4e3a $x$ \uff0c\u4f46 $x$ \u5728 splay \u4e2d\u7684\u5de6\u53f3\u513f\u5b50\u5e76\u4e0d\u5305\u542b $x$ \uff09\u6240\u4ee3\u8868\u7684\u5b50\u6811\u7684\u8d21\u732e\u3002\n\n\u5b9a\u4e49 $siz2[x]$ \u4e3a\u7ed3\u70b9 $x$ \u7684\u6240\u6709\u865a\u513f\u5b50\u4ee3\u8868\u7684\u5b50\u6811\u7684\u7ed3\u70b9\u6570\uff0c $siz[x]$ \u4e3a \u7ed3\u70b9 $x$ \u5b50\u6811\u4e2d\u7684\u7ed3\u70b9\u6570\u3002\n\n\u4e0d\u540c\u4e8e\u4ee5\u5f80\u6211\u4eec\u7ef4\u62a4 Splay \u4e2d\u5b50\u6811\u7ed3\u70b9\u4e2a\u6570\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u5728\u8ba1\u7b97\u7ed3\u70b9 $x$ \u5b50\u6811\u4e2d\u7684\u7ed3\u70b9\u6570\u65f6\uff0c\u8fd8\u8981\u52a0\u4e0a $siz2[x]$ \uff0c\u5373\n\n```cpp\nvoid maintain(int x){clear(0);if(x)siz[x]=siz[ch[x][0]]+1+siz[ch[x][1]]+siz2[x];}\n```\n\n\u800c\u4e14\u5728\u6211\u4eec **\u6539\u53d8 Splay \u7684\u5f62\u6001** \uff08\u5373\u6539\u53d8\u4e00\u4e2a\u7ed3\u70b9\u5728 Splay \u4e0a\u7684\u5de6\u53f3\u513f\u5b50\u6307\u5411\u65f6\uff09\uff0c\u9700\u8981\u53ca\u65f6\u4fee\u6539 $siz2[x]$ \u7684\u503c\u3002\n\n\u5728 ```rotate,splay``` \u64cd\u4f5c\u4e2d\uff0c\u6211\u4eec\u90fd\u53ea\u662f\u6539\u53d8\u4e86 Splay \u4e2d\u7ed3\u70b9\u7684\u76f8\u5bf9\u4f4d\u7f6e\uff0c\u6ca1\u6709\u6539\u53d8\u4efb\u610f\u4e00\u6761\u8fb9\u7684\u865a\u5b9e\u60c5\u51b5\uff0c\u6240\u4ee5\u4e0d\u5bf9 $siz2[x]$ \u8fdb\u884c\u4efb\u4f55\u4fee\u6539\u3002\n\n\u5728 ```access``` \u64cd\u4f5c\u4e2d\uff0c\u5728\u6bcf\u6b21 splay \u5b8c\u540e\uff0c\u90fd\u4f1a\u6539\u53d8\u521a\u521a splay \u5b8c\u7684\u7ed3\u70b9\u7684\u53f3\u513f\u5b50\uff0c\u5373\u8be5\u7ed3\u70b9\u4e0e\u5176\u539f\u53f3\u513f\u5b50\u7684\u8fde\u8fb9\u548c\u8be5\u8282\u70b9\u548c\u65b0\u53f3\u513f\u5b50\u7684\u8fde\u8fb9\u7684\u865a\u5b9e\u60c5\u51b5\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u6211\u4eec\u9700\u8981\u52a0\u4e0a\u65b0\u53d8\u6210\u865a\u8fb9\u6240\u8fde\u7684\u5b50\u6811\u7684\u8d21\u732e\uff0c\u51cf\u53bb\u521a\u521a\u53d8\u6210\u5b9e\u8fb9\u6240\u8fde\u7684\u5b50\u6811\u7684\u8d21\u732e\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nvoid access(int x)\n{\n\tfor(int f=0;x;f=x,x=fa[x])\n\tsplay(x),siz2[x]+=siz[ch[x][1]]-siz[f],ch[x][1]=f,maintain(x);\n}\n```\n\n\u5728 ```makeroot,find``` \u64cd\u4f5c\u4e2d\uff0c\u6211\u4eec\u90fd\u53ea\u662f\u8c03\u7528\u4e86\u4e4b\u524d\u7684\u51fd\u6570\u6216\u8005\u5728 Splay \u4e0a\u6761\u8fb9\uff0c\u5e76\u4e0d\u7528\u505a\u4efb\u4f55\u4fee\u6539\u3002\n\n\u5728\u8fde\u63a5\u4e24\u70b9\u65f6\uff0c\u6211\u4eec\u4fee\u6539\u4e86\u4e00\u4e2a\u7ed3\u70b9\u7684\u7236\u4eb2\u3002\u6211\u4eec\u9700\u8981\u5728\u7236\u4eb2\u7ed3\u70b9\u7684 $siz2$ \u503c\u4e2d\u52a0\u4e0a\u65b0\u5b50\u7ed3\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u8d21\u732e\u3002\n\n```cpp\nst.makeroot(x);\nst.makeroot(y);\nst.fa[x]=y;\nst.siz2[y]+=st.siz[x];\n```\n\n\u5728\u65ad\u5f00\u4e00\u6761\u8fb9\u65f6\uff0c\u6211\u4eec\u53ea\u662f\u5220\u9664\u4e86 Splay \u4e0a\u7684\u4e00\u6761\u5b9e\u8fb9\uff0c ```maintain``` \u64cd\u4f5c\u4f1a\u7ef4\u62a4\u8fd9\u4e9b\u4fe1\u606f\uff0c\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u4fee\u6539\u3002\n\n\u4ee3\u7801\u4fee\u6539\u7684\u7ec6\u8282\u8bb2\u5b8c\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u603b\u7ed3\u4e00\u4e0b LCT \u7ef4\u62a4\u5b50\u6811\u4fe1\u606f\u7684\u8981\u6c42\u548c\u65b9\u6cd5\uff1a\n\n1. \u7ef4\u62a4\u7684\u4fe1\u606f\u8981\u6709 **\u53ef\u51cf\u6027** \uff0c\u5982\u5b50\u6811\u7ed3\u70b9\u6570\uff0c\u5b50\u6811\u6743\u503c\u548c\uff0c\u4f46\u4e0d\u80fd\u76f4\u63a5\u7ef4\u62a4\u5b50\u6811\u6700\u5927\u6700\u5c0f\u503c\uff0c\u56e0\u4e3a\u5728\u5c06\u4e00\u6761\u865a\u8fb9\u53d8\u6210\u5b9e\u8fb9\u65f6\u8981\u6392\u9664\u539f\u5148\u865a\u8fb9\u7684\u8d21\u732e\u3002\n\n2. \u65b0\u5efa\u4e00\u4e2a\u9644\u52a0\u503c\u5b58\u50a8\u865a\u5b50\u6811\u7684\u8d21\u732e\uff0c\u5728\u7edf\u8ba1\u65f6\u5c06\u5176\u52a0\u5165\u672c\u7ed3\u70b9\u7b54\u6848\uff0c\u5728\u6539\u53d8\u8fb9\u7684\u865a\u5b9e\u65f6\u53ca\u65f6\u7ef4\u62a4\u3002\n\n3. \u5176\u4f59\u90e8\u5206\u540c\u666e\u901a LCT \uff0c\u5728\u7edf\u8ba1\u5b50\u6811\u4fe1\u606f\u65f6\u4e00\u5b9a\u5c06\u5176\u4f5c\u4e3a\u6839\u8282\u70b9\u3002\n\n4. \u5982\u679c\u7ef4\u62a4\u7684\u4fe1\u606f\u6ca1\u6709\u53ef\u51cf\u6027\uff0c\u5982\u7ef4\u62a4\u533a\u95f4\u6700\u503c\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u5f00\u4e00\u4e2a\u5e73\u8861\u6811\u7ef4\u62a4\u7ed3\u70b9\u7684\u865a\u5b50\u6811\u4e2d\u7684\u6700\u503c\u3002\n\n\n## \u4ee3\u7801\u5c55\u793a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=100010;\ntypedef long long ll;\nstruct Splay\n{\n\tint ch[maxn][2],fa[maxn],siz[maxn],siz2[maxn],tag[maxn];\n\tvoid clear(int x){ch[x][0]=ch[x][1]=fa[x]=siz[x]=siz2[x]=tag[x]=0;}\n\tint getch(int x){return ch[fa[x]][1]==x;}\n\tint isroot(int x){return ch[fa[x]][0]!=x&&ch[fa[x]][1]!=x;}\n\tvoid maintain(int x){clear(0);if(x)siz[x]=siz[ch[x][0]]+1+siz[ch[x][1]]+siz2[x];}\n\tvoid pushdown(int x)\n\t{\n\t\tif(tag[x])\n\t\t{\n\t\t\tif(ch[x][0])swap(ch[ch[x][0]][0],ch[ch[x][0]][1]),tag[ch[x][0]]^=1;\n\t\t\tif(ch[x][1])swap(ch[ch[x][1]][0],ch[ch[x][1]][1]),tag[ch[x][1]]^=1;\n\t\t\ttag[x]=0;\n\t\t}\n\t}\n\tvoid update(int x)\n\t{\n\t\tif(!isroot(x))update(fa[x]);\n\t\tpushdown(x);\n\t}\n\tvoid rotate(int x)\n\t{\n\t\tint y=fa[x],z=fa[y],chx=getch(x),chy=getch(y);\n\t\tfa[x]=z;if(!isroot(y))ch[z][chy]=x;\n\t\tch[y][chx]=ch[x][chx^1];fa[ch[x][chx^1]]=y;\n\t\tch[x][chx^1]=y;fa[y]=x;\n\t\tmaintain(y);maintain(x);maintain(z);\n\t}\n\tvoid splay(int x)\n\t{\n\t\tupdate(x);\n\t\tfor(int f=fa[x];f=fa[x],!isroot(x);rotate(x))\n\t\tif(!isroot(f))rotate(getch(x)==getch(f)?f:x);\n\t}\n\tvoid access(int x)\n\t{\n\t\tfor(int f=0;x;f=x,x=fa[x])\n\t\tsplay(x),siz2[x]+=siz[ch[x][1]]-siz[f],ch[x][1]=f,maintain(x);\n\t}\n\tvoid makeroot(int x)\n\t{\n\t\taccess(x);splay(x);\n\t\tswap(ch[x][0],ch[x][1]);\n\t\ttag[x]^=1;\n\t}\n\tint find(int x)\n\t{\n\t\taccess(x);splay(x);\n\t\twhile(ch[x][0])x=ch[x][0];\n\t\tsplay(x);\n\t\treturn x;\n\t}\n}st;\nint n,q,x,y;\nchar op;\nint main()\n{\n\tscanf(\"%d%d\",&n,&q);\n\twhile(q--)\n\t{\n\t\tscanf(\" %c%d%d\",&op,&x,&y);\n\t\tif(op=='A')\n\t\t{\n\t\t\tst.makeroot(x);\n\t\t\tst.makeroot(y);\n\t\t\tst.fa[x]=y;\n\t\t\tst.siz2[y]+=st.siz[x];\n\t\t}\n\t\tif(op=='Q')\n\t\t{\n\t\t\tst.makeroot(x);st.access(y);st.splay(y);\n\t\t\tst.ch[y][0]=st.fa[x]=0;\n\t\t\tst.maintain(x);\n\t\t\tst.makeroot(x);st.makeroot(y);\n\t\t\tprintf(\"%lld\\n\",(ll)(st.siz[x]*st.siz[y]));\n\t\t\tst.makeroot(x);\n\t\t\tst.makeroot(y);\n\t\t\tst.fa[x]=y;\n\t\t\tst.siz2[y]+=st.siz[x];\n\t\t}\n\t\t//for(int i=1;i<=n;i++)printf(\"%d %d %d %d %d %d\\n\",i,st.ch[i][0],st.ch[i][1],st.fa[i],st.siz[i],st.siz2[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1554814360,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4219 \u3010[BJOI2014]\u5927\u878d\u5408\u3011"
    },
    {
        "content": "**\u9898\u76ee\u5927\u610f**\uff1a\u7ed9\u5b9a $n$ \u4e2a\u70b9\uff0c\u8981\u6c42\u652f\u6301\u4e24\u79cd\u64cd\u4f5c $m$ \u6b21\uff1a\n1. `A x y`\uff0c\u52a0\u5165\u4e00\u6761\u8fb9 $(x,y)$\uff0c\u4fdd\u8bc1\u56fe\u7684\u5f62\u6001\u59cb\u7ec8\u662f\u68ee\u6797\u3002\n2. `Q x y`\uff0c\u67e5\u8be2\u7ecf\u8fc7\u8fb9 $(x,y)$ \u7684\u8def\u5f84\u6570\u91cf\uff0c\u4fdd\u8bc1 $(x,y)$ \u5b58\u5728\u4e8e\u5f53\u524d\u7684\u6811\u4e2d\u3002\n\n**\u6570\u636e\u8303\u56f4**\uff1a\n* $1\\leq n,m\\leq 10^5$\u3002\n\n~~\u600e\u4e48\u5927\u5bb6\u90fd\u662f\u4ec0\u4e48 LCT \u6811\u94fe\u5256\u5206\u7ebf\u6bb5\u6811\u7684\uff0c\u6811\u72b6\u6570\u7ec4 dfs \u5e8f\u5b83\u4e0d\u9999\u54a9\u3002~~\n\n\u9996\u5148\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u5f53\u524d\u7684\u6839\u548c\u5f53\u524d\u7684\u5b50\u6811\u5927\u5c0f\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u505a\u8fd9\u9053\u9898\u4e86\u3002\n\n\u7136\u540e\u5c31\u662f\u600e\u4e48\u7ef4\u62a4\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u79bb\u7ebf\u5efa\u51fa\u52a0\u5165\u6240\u6709\u8fb9\u540e\u7684\u6811\uff08\u68ee\u6797\uff09\uff0c\u90a3\u4e48\u6839\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\uff0c\u5b50\u6811\u5927\u5c0f\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4 + dfs \u5e8f\u6765\u7ef4\u62a4\u3002\n\n\u5177\u4f53\u7684\uff0c\u5bf9\u4e8e\u4e00\u6761\u8fb9 $(x,y)$\uff0c\u5047\u8bbe $y$ \u662f $x$ \u7684\u7236\u4eb2\u3002\u82e5\u662f\u52a0\u5165\u8fd9\u6761\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5c06 $(y,rot_y)$ \u8fd9\u6761\u94fe\u52a0\u4e0a $siz_x$\uff0c\u5e76\u5c06 $x$ \u5b50\u6811\u4e2d\u6240\u6709\u70b9\u7684\u6839\u8bbe\u4e3a $rot_y$\uff1b\u82e5\u662f\u67e5\u8be2\uff0c\u5219\u7b54\u6848\u4e3a\uff1a\n$$\nsiz_x(siz_{rot_{y}}-siz_x)\n$$\n\n\u8fd9\u4e4b\u4e2d\u6d89\u53ca\u7684\u6240\u6709\u64cd\u4f5c\u5747\u53ef\u7528\u5e76\u67e5\u96c6\u548c\u6811\u72b6\u6570\u7ec4 + dfs \u5e8f\u89e3\u51b3\u3002\n\n\u4ec0\u4e48\uff1f\u600e\u4e48\u7528\u6811\u72b6\u6570\u7ec4 + dfs \u5e8f\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\uff1f\n\n\u5bf9\u4e8e\u94fe\u52a0\u64cd\u4f5c\uff0c\u6211\u4eec\u5728 $y$ \u5904\u52a0\u4e0a $siz_x$\uff0c\u5728 $fa_{rot_y}$ \u5904\u51cf\u53bb $siz_x$\uff0c\u90a3\u4e48\u5728\u67e5\u8be2\u7684\u65f6\u5019\u5c31\u53d8\u6210\u4e86\u67e5\u8be2\u5b50\u6811\u548c\uff0c\u63a5\u4e0b\u6765\u5c31\u662f dfs \u5e8f + \u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u7684\u7ecf\u5178\u64cd\u4f5c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n+m\\log n)$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N=100000;\n\nint n,cq,qopt[N+9],qx[N+9],qy[N+9];\nstruct side{\n  int y,next;\n}e[N*2+9];\nint lin[N+9],cs;\n\nvoid Ins(int x,int y){e[++cs].y=y;e[cs].next=lin[x];lin[x]=cs;}\nvoid Ins2(int x,int y){Ins(x,y);Ins(y,x);}\n\nvoid into(){\n  scanf(\"%d%d\",&n,&cq);\n  for (int i=1;i<=cq;++i){\n    char opt[2];\n    scanf(\"%s%d%d\",opt,&qx[i],&qy[i]);\n    if (!(qopt[i]=opt[0]=='Q')) Ins2(qx[i],qy[i]);\n  }\n}\n\nint fa[N+9],ld[N+9],rd[N+9],co;\n\nvoid Dfs_ord(int k,int fat){\n  fa[k]=fat;\n  ld[k]=++co;\n  for (int i=lin[k];i;i=e[i].next)\n    if (e[i].y^fat) Dfs_ord(e[i].y,k);\n  rd[k]=co;\n}\n\nvoid Get_ord(){\n  for (int i=1;i<=n;++i)\n    if (!ld[i]) Dfs_ord(i,0);\n}\n\nstruct union_find_set{\n  int fa[N+9];\n  int &operator [] (const int &p){return fa[p];}\n  void Build(){for (int i=1;i<=n;++i) fa[i]=i;}\n  int Query_fa(int k){return k^fa[k]?fa[k]=Query_fa(fa[k]):k;}\n}uni;\n\nint c[N+9];\n\nvoid Add(int p,int v){if (!p) return;for (;p<=n;p+=p&-p) c[p]+=v;}\nint Query(int p){int res=0;for (;p;p-=p&-p) res+=c[p];return res;}\nint Query(int l,int r){return Query(r)-Query(l-1);}\n\nLL ans[N+9];\n\nvoid Get_ans(){\n  uni.Build();\n  for (int i=1;i<=n;++i) Add(ld[i],1),Add(ld[fa[i]],-1);\n  for (int i=1;i<=cq;++i){\n    int x=qx[i],y=qy[i];\n    if (ld[x]<ld[y]) swap(x,y);\n    int fy=uni.Query_fa(y),t=Query(ld[x],rd[x]);\n    if (qopt[i]) ans[i]=(LL)t*(Query(ld[fy],rd[fy])-t);\n    else Add(ld[y],t),Add(ld[fa[uni[x]=fy]],-t);\n  }\n}\n\nvoid work(){\n  Get_ord();\n  Get_ans();\n}\n\nvoid outo(){\n  for (int i=1;i<=cq;++i)\n    if (qopt[i]) printf(\"%lld\\n\",ans[i]);\n}\n\nint main(){\n  into();\n  work();\n  outo();\n  return 0;\n}\n```",
        "postTime": 1582793956,
        "uid": 32331,
        "name": "hezlik",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4219 \u3010[BJOI2014]\u5927\u878d\u5408\u3011"
    },
    {
        "content": "\u597d\u50cf\u6ca1\u6709\u6811\u5256\u7684\u9898\u89e3\u554a\n\n\u7531\u4e8e\u8fd9\u9898\u6ca1\u6709\u5220\u8fb9\u64cd\u4f5c\n\n\u7136\u540e\u53c8\u6ca1\u6709\u5f3a\u5236\u5728\u7ebf\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u6700\u7ec8\u5f62\u6210\u7684\u68ee\u6797\u7684\u5f62\u6001\u5efa\u51fa\u6765\n\n\u6211\u4eec\u53ef\u4ee5\u5efa\u4e00\u4e2a\u8d85\u7ea7root\u3000\u5c06\u68ee\u6797\u53d8\u6210\u6811\n\n\u6211\u4eec\u7ef4\u62a4\u6bcf\u4e00\u9636\u6bb5\u7684\u6bcf\u4e2a\u70b9\u5b50\u6811\u5927\u5c0f\uff08\u8282\u70b9\u4e2a\u6570\uff09\uff0c\u540c\u65f6\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u6b64\u65f6\u7684\u6839\n\n\u6211\u4eec\u5b9a\u4e49find(x)\u4e3a\u8fd9\u4e2a\u9636\u6bb5x\u7684\u6839\n\uff08\u4e3a\u5565\u5b9a\u4e49\u7684\u662ffind\u5462\uff0c\u56e0\u4e3a\u5bfb\u6839\u662f\u5e76\u67e5\u96c6\u64cd\u4f5c\uff09\n\nsize(x)\u4e3a\u8fd9\u4e2a\u9636\u6bb5x\u7684\u5b50\u6811\u5927\u5c0f\uff08\u8282\u70b9\u4e2a\u6570\uff09\n\n\n`A x y`\u64cd\u4f5c\uff1a\n\n\u5047\u8bbex \u662fy\u7684\u7236\u8282\u70b9\n\n\u6211\u4eec\u628ax\u5230find(x)\u7684\u6bcf\u4e2a\u70b9\u90fd\u52a0\u4e0asize(y)\u5373\u53ef\n\n\u8def\u5f84\u4e0a\u52a0\u4e00\u4e2a\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u5256\u6765\u7ef4\u62a4\n\n\u6700\u540e\u518d\u5e76\u67e5\u96c6merge\u4e00\u4e0b(x,y)\n\n`Q x y`\u64cd\u4f5c\uff1a\n\n\u5047\u8bbex\u662fy\u7684\u7236\u8282\u70b9\n\n\u5219\u7b54\u6848\u5c31\u662f`(size(x) - size(y))*(size(y))`\n\n\u8fd9\u91cc\u6240\u8981\u7528\u5230\u7684\u8be2\u95ee\uff0c\u662f\u533a\u95f4\u52a0\uff0c\u5355\u70b9\u8be2\u95ee\uff0c\u53ef\u4ee5\u5dee\u5206\u540e\u7ef4\u62a4\u6811\u72b6\u6570\u7ec4\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff0c175ms\uff0c\u5199\u8fd9\u7bc7\u9898\u89e3\u7684\u5728\u6700\u4f18\u89e3\u6392\u540d\u5728\u7b2c\u4e00\u9875rk6\uff0c\u5e94\u8be5\u8fd8\u662f\u6bd4\u8f83\u5feb\u7684\n\n```#include<bits/stdc++.h>\nusing namespace std;\n\n#define MAXN 400005\n#define lowbit(x) (x&(-x))\n#define LL long long\n\nint n,m;\nint f[MAXN];\n\nstruct bian\n{\n\tint x,y,ls;\n}b[MAXN];\nint t[MAXN],cnt;\n\nstruct aa\n{\n\tbool opt;\n\tint x,y;\n}p[MAXN];\n\nvoid print(int x)\n{\n    if(x<0)\n    {\n        putchar('-');\n        x=-x;\n    }\n    if(x>9)\n        print(x/10);\n    putchar(x%10+'0');\n}\n\ninline int read()\n{\n    register int x = 0 , ch = getchar();\n    while( !isdigit( ch ) ) ch = getchar();\n    while( isdigit( ch ) ) x = x * 10 + ch - '0' , ch = getchar();\n    return x;\n}\n\nvoid jb(int x,int y)//\u5efa\u8fb9\n{\n\tcnt ++;\n\tb[cnt].x = x;\n\tb[cnt].y = y;\n\tb[cnt].ls = t[x];\n\tt[x] = cnt;\n}\n\nvoid rd()\n{\n\tcin >> n >> m;\n\tfor(int i = 1; i <= m; i ++)\n\t{\n\t\tchar ch = 0;\n\t\twhile(ch != 'A' && ch != 'Q') ch = getchar();\n\t\t\n\t\tif(ch == 'A') p[i].opt = 1;\n\t\telse p[i].opt = 0;\n\t\t\n\t\tp[i].x = read();\n\t\tp[i].y = read();\n\t\tif(p[i].opt == 1)\n\t\t{\n\t\t\tjb(p[i].x,p[i].y);\n\t\t\tjb(p[i].y,p[i].x);\n\t\t}\t\n\t}\n}\n\nvoid csh(){//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n\tfor(int i = 1; i <= n; i ++) f[i] = i; \n}\n\nint find(int x)\n{\n\tif(f[x] == x) return x;\n\treturn f[x] = find(f[x]);\n}\n\nvoid mg(int x,int y)//mg\u5c31\u662fmerge\n{\n\tf[find(y)] = find(x);\n}\n\nint c[MAXN];\n\nvoid jia(int x,int y) {\n\tfor(; x <= n; x += lowbit(x))\n\t\tc[x] += y;\n}\n\nint he(int x)\n{\n\tint ans = 0;\n\tfor(; x > 0; x -= lowbit(x))\n\t\tans += c[x];\n\treturn ans;\n}\n\nint ht[MAXN],th[MAXN],z[MAXN],s[MAXN],a[MAXN];\nint fa[MAXN];\n\n\n\nvoid dfs(int x)\n{\n\ts[x] = 1;\n\tint mz = 0;\n\tfor(int i = t[x]; i != 0; i = b[i].ls)\n\t{\n\t\tint y = b[i].y;\n\t\tif(y != fa[x]) {\n\t\t\tfa[y] = x;\n\t\t\tdfs(y);\n\t\t\ts[x] += s[y];\n\t\t\tif(s[y] > mz) \n\t\t\t{\n\t\t\t\tmz = s[y];\n\t\t\t\tz[x] = y;\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid dfs2(int x,int _ht,int _th)\n{\n\tht[x] = _ht;\n\tth[x] = _th;\n\t\n\tcnt ++;\n\ta[x] = cnt;\n\tif(z[x])\n\t{\n\t\tdfs2(z[x],_ht,_th);\n\t}\n\tfor(int i = t[x]; i != 0 ; i = b[i].ls)\n\t{\n\t\tint y = b[i].y;\n\t\tif(y != fa[x] && y != z[x]) {\n\t\t\tdfs2(y,y,_th+1);\n\t\t}\n\t}\n}\n\nvoid optA(int x,int y,int s)//x\u5230y\u6bcf\u4e2a\u70b9\u70b9\u6743+s\n{\n\twhile(ht[x] != ht[y])\n\t{\n\t\tjia(a[ht[x]],s);\n\t\tjia(a[x]+1,-s);\n\t\tx = fa[ht[x]];\n\t}\n\tjia(a[y],s);\n\tjia(a[x]+1,-s);\n}\n\nsigned main()\n{\n\trd();\n\tcsh();\n\tfor(int i = 1; i <= m; i ++) {\n\t\tif(p[i].opt == 1) {\n\t\t\tmg(p[i].x,p[i].y);\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; i ++)\n\t{\n\t\tif(find(i) == i) {\n\t\t\tjb(i,n+1);\n\t\t\tjb(n+1,i);\n\t\t}\n\t}\n\tn ++;\n\tcsh();\n\tdfs(n);\n\tcnt = 0;\n\tdfs2(n,n+1,1);\n\tjia(1,1);\n\tfor(int i = 1; i <= m; i ++)\n\t{\n\t\tint x = p[i].x,y = p[i].y;\n\t\tif(fa[x] == y) swap(x,y);//\u786e\u4fddy\u7684\u7236\u4eb2\u662fx\n\t\t\t\n\t\tif(p[i].opt == 1)\n\t\t{\n\t\t\toptA(x,find(x),he(a[y]));\n\t\t\tmg(x,y);\n\t\t} else {\n\t\t\tLL ans = 0;\n\t\t\tint sa = he(a[find(x)]),sb = he(a[y]);\n\t\t\tans = 1ll*(sa-sb)*sb;\n\t\t\tprint(ans);\n\t\t\tputs(\"\");\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n\n```\n\n~~\u6811\u94fe\u5256\u5206\u5199\u6811\u94fe\u5256\u5206\uff0c\u6211\u3000\u5199\u3000\u6211\u3000\u81ea\u3000\u5df1~~",
        "postTime": 1564219061,
        "uid": 124721,
        "name": "Ynoi",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4219 \u3010[BJOI2014]\u5927\u878d\u5408\u3011"
    },
    {
        "content": "LCT\u7ef4\u62a4\u5b50\u6811\u4fe1\u606f\u7684\u601d\u8def\u603b\u7ed3\u4e0e\u5176\u5b83\u95ee\u9898\u8be6\u89c1[\u6211\u7684LCT\u603b\u7ed3](http://www.cnblogs.com/flashhu/p/8324551.html)\n\n## \u601d\u8def\u5206\u6790\n\n\u52a8\u6001\u8fde\u8fb9\uff0cLCT\u9898\u76ee\u8dd1\u4e0d\u4e86\u4e86\u3002\u7136\u800c\u8fd9\u9898\u53c8\u6709\u70b9\u5947\u7279\u7684\u5730\u65b9\u3002\n\n\u6211\u4eec\u5206\u6790\u4e00\u4e0b\uff0c\u67e5\u8be2\u64cd\u4f5c\u5c31\u662f\u8981\u8ba9\u6211\u4eec\u6c42\u51fa\u780d\u65ad\u8fd9\u6761\u8fb9\u540e\uff0cx\u548cy\u5404\u81ea\u5b50\u6811\u5927\u5c0f\u7684\u4e58\u79ef\u3002\n\n\u638c\u63e1\u4e86LCT\u5982\u4f55\u7ef4\u62a4\u865a\u5b50\u6811\u4fe1\u606f\u548c\u540e\uff0c\u505a\u6cd5\u5c31\u5f88\u6e05\u6670\u4e86\u3002split(x,y)\u540e\uff0c\u8f93\u51fax\u7684\u865a\u5b50\u6811\u548c+1\u4e0ey\u7684\u865a\u5b50\u6811\u548c+1\u7684\u4e58\u79ef\uff1b\u6216\u8005\uff0c\uff08\u4ee5y\u4e3a\u6839\uff09\u8f93\u51fax\u7684\u5b50\u6811\u603b\u548c\u4e0ey\u7684\u5b50\u6811\u603b\u548c\u51cf\u53bbx\u7684\u5b50\u6811\u603b\u548c\u7684\u4e58\u79ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u8fd9\u6b21\u6211\u8bd5\u7740\u5199\u4e86\u4e00\u4e2a\u5355\u65cb\"Spaly\"\uff0c~~\u597d\u50cf\u5e38\u6570\u8fd8\u5c0f\u4e0d\u5c11\u3002\u3002\u3002\u3002\u3002\u3002~~\uff09\n```\n#include<cstdio>\n#include<cstdlib>\n#define R register int\n#define I inline void\nconst int N=100009;\nint f[N],c[N][2],si[N],s[N];\nbool r[N];\n#define lc c[x][0]\n#define rc c[x][1]\ninline bool nroot(R x){return c[f[x]][0]==x||c[f[x]][1]==x;}\nI pushup(R x){\n\ts[x]=s[lc]+s[rc]+si[x]+1;\n}\nI pushdown(R x){\n\tif(r[x]){\n\t\tR t=lc;lc=rc;rc=t;\n\t\tr[lc]^=1;r[rc]^=1;r[x]=0;\n\t}\n}\nI pushall(R x){\n\tif(nroot(x))pushall(f[x]);\n\tpushdown(x);\n}\nI rotate(R x){\n\tR y=f[x],z=f[y],k=c[y][1]==x,w=c[x][!k];\n\tif(nroot(y))c[z][c[z][1]==y]=x;c[x][!k]=y;c[y][k]=w;\n\tf[w]=y;f[y]=x;f[x]=z;\n\tpushup(y);\n}\nI splay(R x){//\u8bf7\u5ffd\u7565\u8fd9\u4e2aspaly\n\tpushall(x);\n\twhile(nroot(x))rotate(x);\n\tpushup(x);\n}\nI access(R x){\n\tfor(R y=0;x;x=f[y=x]){\n\t\tsplay(x);\n\t\tsi[x]+=s[rc];\n\t\tsi[x]-=s[rc=y];\n\t\t//pushup(x);\u8bd5\u7740\u53bb\u6389\uff0c\u53d1\u73b0\u5bf9\u7b54\u6848\u65e0\u5f71\u54cd\n\t}\n}\nI makeroot(R x){\n\taccess(x);splay(x);\n\tr[x]^=1;\n}\nI split(R x,R y){\n\tmakeroot(x);\n    access(y);splay(y);\n}\nI link(R x,R y){\n\tsplit(x,y);\n\tsi[f[x]=y]+=s[x];\n\tpushup(y);\n}//LCT\u6a21\u677f\u5230\u6b64\u7ed3\u675f\n#define G ch=getchar()\n#define gc G;while(ch<'-')G\n#define in(z) gc;z=ch&15;G;while(ch>'-')z*=10,z+=ch&15,G;\nint main(){\n\tregister char ch;\n\tregister bool fl;\n\tR n,q,u,v;\n\tin(n);in(q);\n\tfor(R i=1;i<=n;++i)s[i]=1;\n\twhile(q--){\n\t\tgc;fl=ch=='A';in(u);in(v);\n\t\tif(fl)link(u,v);\n\t\telse{\n\t\t\tsplit(u,v);\n\t\t\tprintf(\"%lld\\n\",(long long)(si[u]+1)*(si[v]+1));//\u53ef\u4ee5\u6362\u6210\u4e0a\u9762\u63d0\u5230\u7684\u53e6\u4e00\u79cd\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1517909738,
        "uid": 61325,
        "name": "FlashHu",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4219 \u3010[BJOI2014]\u5927\u878d\u5408\u3011"
    },
    {
        "content": "# \u7ebf\u6bb5\u6811\u5408\u5e76\n\n~~\u7ebf\u6bb5\u6811\u5929\u4e0b\u7b2c\u4e00~~\n\n\u5f88\u660e\u663e\u6211\u4eec\u8981\u5feb\u901f\u6c42\u51fax\u6216y\u7684\u5b50\u6811\u5927\u5c0f\n\n\u6240\u4ee5\u4e00\u4e2a\u660e\u663e\u7684\u601d\u8def\u662f\u8981\u8ba9x\u6216y\u7684\u5b50\u6811\u7684\u7f16\u53f7\u8fde\u7eed,\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u79bb\u7ebf\u5566\n\n\u6211\u4eec\u79bb\u7ebf\u5efa\u7acb\u68ee\u6797,\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u7ebf\u6bb5\u6811\u7684dfs\u5e8f\u7f16\u53f7\n\n\u90a3\u4e48\u5bf9\u4e8e\u52a0\u8fb9\u5c31\u76f4\u63a5\u7ebf\u6bb5\u6811\u5408\u5e76\n\n\u5bf9\u4e8e\u67e5\u8be2,\u6211\u4eec\u4ee4x\u4e3a\u7f16\u53f7\u8f83\u5927\u7684\u8282\u70b9(\u4e5f\u5c31\u662fx\u7684father\u4e3ay)\n\n\u90a3\u4e48\u76f4\u63a5\u533a\u95f4\u67e5\u8be2(d[x],d[x]+siz[x]-1)\u7684\u70b9\u7684\u4e2a\u6570\n\ny\u540c\u7406\n\n## Code\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<algorithm>\n#define N 100010\n#define mid ((L+R)>>1)\n#define ll long long\nusing namespace std;\nstruct Node{char op;int x,y;}p[N];\nint n,m,q,k,d[N],g[N],fa[N],siz[N];//d:dfs\u5e8f,g:\u5e76\u67e5\u96c6 \nint head[N],to[N<<1],nexts[N<<1];\nvoid add(int u,int v){to[++k] = v; nexts[k] = head[u]; head[u] = k;}\nint find(int x){return g[x]==x?x:g[x]=find(g[x]);}\nvoid dfs(int x,int f)\n{\n\tfa[x] = f; siz[x] = 1; d[x] = ++m;//\u5efa\u7acbdfs\u5e8f \n\tfor(int i=head[x];i;i=nexts[i])\n\t{\n\t\tint v = to[i];\n\t\tif(v == f) continue;\n\t\tdfs(v,x);\n\t\tsiz[x] += siz[v];\n\t} \n}\nint rt[N],ls[N*64],rs[N*64],sum[N*64];//sum\u533a\u95f4\u548c \nvoid Build(int &t,int L,int R,int x)\n{\n\tif(!t) t = ++k;\n\tif(L == R) {sum[t]++; return ;}\n\tif(x <= mid) Build(ls[t],L,mid,x);\n\telse Build(rs[t],mid+1,R,x);\n\tsum[t] = sum[ls[t]]+sum[rs[t]];\n}\nvoid Merge(int &x,int &y,int L,int R)\n{\n\tif(!x || !y) {x += y; return ;}\n\tif(L == R) {sum[x] += sum[y]; return;}\n\tMerge(ls[x],ls[y],L,mid);\n\tMerge(rs[x],rs[y],mid+1,R);\n\tsum[x] = sum[ls[x]]+sum[rs[x]]; \n}\nint query(int t,int L,int R,int x,int y)\n{\n\tif(!t || x > y) return 0;\n\tif(L == x && R == y) return sum[t];\n\tif(y <= mid) return query(ls[t],L,mid,x,y);\n\tif(x >  mid) return query(rs[t],mid+1,R,x,y);\n\treturn query(ls[t],L,mid,x,mid)+query(rs[t],mid+1,R,mid+1,y);\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=1;i<=q;i++)//\u79bb\u7ebf \n\t{\n\t\tscanf(\" %c%d%d\",&p[i].op,&p[i].x,&p[i].y);\n\t\tif(p[i].op == 'A')\n\t\t{\n\t\t\tadd(p[i].x,p[i].y);\n\t\t\tadd(p[i].y,p[i].x);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) if(!d[i]) dfs(i,0);\n\tfor(int i=1;i<=n;i++) Build(rt[i],1,m,d[i]),g[i] = i;//\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u662fdfs\u5e8f\u7f16\u53f7 \n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tif(p[i].op == 'A')\n\t\t{\n\t\t\tint fx = find(p[i].x);\n\t\t\tint fy = find(p[i].y);\n\t\t\tg[fx] = fy;//\u5e76\u67e5\u96c6\u5408\u5e76 \n\t\t\tMerge(rt[fy],rt[fx],1,n);//\u7ebf\u6bb5\u6811\u5408\u5e76 \n\t\t}else\n\t\t{\n\t\t\tif(fa[p[i].y] == p[i].x) swap(p[i].x,p[i].y);//\u4fdd\u8bc1x\u5728y\u7684\u4e0b\u9762 \n\t\t\tint x = p[i].x; int a = find(x);\n\t\t\tint ans1 = query(rt[a],1,m,d[x],d[x]+siz[x]-1);//\u67e5\u8be2x\u7684\u5b50\u6811\u5927\u5c0f \n\t\t\tint ans2 = query(rt[a],1,m,1,d[x]-1)+query(rt[a],1,m,d[x]+siz[x],n);//\u67e5\u8be2y\u7684\u5b50\u6811\u5927\u5c0f \n\t\t\tprintf(\"%lld\\n\",(ll)ans1*(ll)ans2);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1572442611,
        "uid": 112003,
        "name": "_Chris\u00b0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4219 \u3010[BJOI2014]\u5927\u878d\u5408\u3011"
    },
    {
        "content": "\u5206\u4eab\u4e00\u4e2a\u7ebf\u6bb5\u6811\u5206\u6cbb\u505a\u6cd5\u3002\n\n~~\u5e7f\u544a\uff1a\u5982\u679c\u6211\u628a\u6d1b\u8c37\u7684markdown\u7528\u51fa\u9505\u4e86\u8bf7\u5230\u6211\u7684\u535a\u5ba2\u53bb\u770b[\u3010\u6d1b\u8c374219\u3011[BJOI2014]\u5927\u878d\u5408\uff08\u7ebf\u6bb5\u6811\u5206\u6cbb\uff09](https://www.cnblogs.com/zyt1253679098/p/10265586.html)~~\n\n\u5206\u6790\uff1a\n=\n\n\u5f88\u660e\u663e\uff0c\u67e5\u8be2\u7684\u662f\u5220\u6389\u67d0\u6761\u8fb9\u540e\u4e24\u7aef\u70b9\u6240\u5728\u8fde\u901a\u5757\u5927\u5c0f\u7684\u4e58\u79ef\u3002\n\n\u6709\u52a0\u8fb9\u548c\u5220\u8fb9\uff0c\u60f3\u5230LCT\u3002\u4f46\u662f\u6211\u4e0d\u4f1a\u7528LCT\u67e5\u8fde\u901a\u5757\u5927\u5c0f\u554a\u3002~~\u679c\u65ad\u5f03\u4e86~~\n\n\u6709\u52a0\u8fb9\u548c\u5220\u8fb9\uff0c\u8fd8\u8ddf\u8fde\u901a\u6027\u6709\u5173\uff0c\u4e8e\u662f\u5f00\u59cbyy\u7ebf\u6bb5\u6811\u5206\u6cbb\u505a\u6cd5\uff08\u4e0d\u77e5\u9053\u7ebf\u6bb5\u6811\u5206\u6cbb\uff1f\u63a8\u8350\u4e00\u4e2a~~\u4f2a\u6a21\u677f~~\u9898[BZOJ4025\u4e8c\u5206\u56fe](https://www.cnblogs.com/zyt1253679098/p/10014932.html)~~\u4e8b\u5b9e\u4e0a\u8fd9\u4e2a\u94fe\u63a5\u662f\u6307\u5411\u6211\u7684\u535a\u5ba2\u7684~~\uff09\u3002\u628a\u6bcf\u6b21\u64cd\u4f5c\uff08\u52a0\u8fb9\u6216\u67e5\u8be2\uff09\u770b\u505a\u4e00\u4e2a\u65f6\u523b\uff0c\u4e00\u6761\u8fb9\u5b58\u5728\u7684\u533a\u95f4\u5c31\u662f\u5b83\u52a0\u5165\u540e\u6ca1\u6709\u88ab\u67e5\u8be2\u7684\u65f6\u95f4\u533a\u95f4\u7684\u5e76\u3002\u4e8e\u662f\u7528\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u7ef4\u62a4\u4e00\u4e0b\u8fde\u901a\u5757\u5927\u5c0f\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n=\n\n~~\u4e0d\u8981\u518d\u5410\u69fd#undef\u4e86\uff0c\u8fd8\u4e0d\u662f\u4ed6\u4eec\u6574\u5929\u5728\u6211\u7684\u6807\u51c6\u5e93\u91cc\u52a0\u5947\u602a\u7684define~~\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cctype>\n#include <algorithm>\n#include <map>\n#include <cassert>\n#undef i\n#undef j\n#undef k\n#undef min\n#undef max\n#undef true\n#undef false\n#undef swap\n#undef sort\n#undef if\n#undef for\n#undef while\n#undef printf\n#undef scanf\n#undef putchar\n#undef getchar\n#define _ 0\nusing namespace std;\n\nnamespace zyt\n{\n\ttemplate<typename T>\n\tinline bool read(T &x)\n\t{\n\t\tchar c;\n\t\tbool f = false;\n\t\tx = 0;\n\t\tdo\n\t\t\tc = getchar();\n\t\twhile (c != EOF && c != '-' && !isdigit(c));\n\t\tif (c == EOF)\n\t\t\treturn false;\n\t\tif (c == '-')\n\t\t\tf = true, c = getchar();\n\t\tdo\n\t\t\tx = x * 10 + c - '0', c = getchar();\n\t\twhile (isdigit(c));\n\t\tif (f)\n\t\t\tx = -x;\n\t\treturn true;\n\t}\n\tinline bool read(char &c)\n\t{\n\t\tdo\n\t\t\tc = getchar();\n\t\twhile (c != EOF && !isgraph(c));\n\t\treturn c != EOF;\n\t}\n\ttemplate<typename T>\n\tinline void write(T x)\n\t{\n\t\tstatic char buf[20];\n\t\tchar *pos = buf;\n\t\tif (x < 0)\n\t\t\tputchar('-'), x = -x;\n\t\tdo\n\t\t\t*pos++ = x % 10 + '0';\n\t\twhile (x /= 10);\n\t\twhile (pos > buf)\n\t\t\tputchar(*--pos);\n\t}\n\ttypedef long long ll;\n\tconst int N = 1e5 + 10, B = 17, QUERY = 0, ADD = 1;\n\tint n, q;\n\tll ans[N];\n\tstruct node\n\t{\n\t\tbool type;\n\t\tint x, y;\n\t}arr[N];\n\tnamespace UFS\n\t{\n\t\tint fa[N], rk[N], size[N], top;\n\t\tstruct node\n\t\t{\n\t\t\tint x, y, fax, rky, sizey;\n\t\t}stack[N];\n\t\tvoid init(const int n)\n\t\t{\n\t\t\tfor (int i = 1; i <= n; i++)\n\t\t\t\tfa[i] = i, rk[i] = size[i] = 1;\n\t\t}\n\t\tint f(const int u)\n\t\t{\n\t\t\treturn fa[u] == u ? u : f(fa[u]);\n\t\t}\n\t\tbool merge(const int u, const int v)\n\t\t{\n\t\t\tint x = f(u), y = f(v);\n\t\t\tif (x == y)\n\t\t\t\treturn false;\n\t\t\tif (rk[x] > rk[y])\n\t\t\t\tswap(x, y);\n\t\t\tstack[top++] = (node){x, y, fa[x], rk[y], size[y]};\n\t\t\tfa[x] = y, size[y] += size[x];\n\t\t\tif (rk[x] == rk[y])\n\t\t\t\t++rk[y];\n\t\t\treturn true;\n\t\t}\n\t\tint query(const int u)\n\t\t{\n\t\t\tassert(f(u) < N);\n\t\t\treturn size[f(u)];\n\t\t}\n\t\tvoid undo(const int bck)\n\t\t{\n\t\t\twhile (top > bck)\n\t\t\t{\n\t\t\t\t--top;\n\t\t\t\tint x = stack[top].x, y = stack[top].y;\n\t\t\t\tassert(x < N && y < N);\n\t\t\t\tfa[x] = stack[top].fax;\n\t\t\t\trk[y] = stack[top].rky;\n\t\t\t\tsize[y] = stack[top].sizey;\n\t\t\t}\n\t\t}\n\t}\n\tnamespace Segment_Tree\n\t{\n\t\tstruct edge\n\t\t{\n\t\t\tint x, y, next;\n\t\t}e[N * (B + 1)];\n\t\tint head[1 << (B + 1) | 11], ecnt;\n\t\tinline void init()\n\t\t{\n\t\t\tmemset(head, -1, sizeof(head));\n\t\t}\n\t\tinline void add(const int a, const int b, const int c)\n\t\t{\n\t\t\te[ecnt] = (edge){b, c, head[a]}, head[a] = ecnt++;\n\t\t}\n\t\tinline void insert(const int rot, const int lt, const int rt, const int ls, const int rs, const int x, const int y)\n\t\t{\n\t\t\tif (ls <= lt && rt <= rs)\n\t\t\t{\n\t\t\t\tadd(rot, x, y);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tint mid = (lt + rt) >> 1;\n\t\t\tif (ls <= mid)\n\t\t\t\tinsert(rot << 1, lt, mid, ls, rs, x, y);\n\t\t\tif (rs > mid)\n\t\t\t\tinsert(rot << 1 | 1, mid + 1, rt, ls, rs, x, y);\n\t\t}\n\t\tinline void solve(const int rot, const int lt, const int rt)\n\t\t{\n\t\t\tint bck = UFS::top;\n\t\t\tfor (int i = head[rot]; ~i; i = e[i].next)\n\t\t\t\tUFS::merge(e[i].x, e[i].y);\n\t\t\tif (lt == rt)\n\t\t\t{\n\t\t\t\tif (arr[lt].type == QUERY)\n\t\t\t\t\tans[lt] = (ll)UFS::query(arr[lt].x) * UFS::query(arr[lt].y);\n\t\t\t\tUFS::undo(bck);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tint mid = (lt + rt) >> 1;\n\t\t\tsolve(rot << 1, lt, mid);\n\t\t\tsolve(rot << 1 | 1, mid + 1, rt);\n\t\t\tUFS::undo(bck);\n\t\t}\n\t}\n\tmap<pair<int, int>, int> lastins;\n\tint work()\n\t{\n\t\tread(n), read(q);\n\t\tUFS::init(n);\n\t\tSegment_Tree::init();\n\t\tfor (int i = 1; i <= q; i++)\n\t\t{\n\t\t\tchar opt;\n\t\t\tread(opt), read(arr[i].x), read(arr[i].y);\n\t\t\tif (arr[i].x > arr[i].y)\n\t\t\t\tswap(arr[i].x, arr[i].y);\n\t\t\tarr[i].type = (opt == 'Q' ? QUERY : ADD);\n\t\t\tpair<int, int> p = make_pair(arr[i].x, arr[i].y);\n\t\t\tif (arr[i].type == ADD)\n\t\t\t\tlastins[p] = i;\n\t\t\telse\n\t\t\t{\n\t\t\t\tSegment_Tree::insert(1, 1, q, lastins[p], i - 1, p.first, p.second);\n\t\t\t\tlastins[p] = i + 1;\n\t\t\t}\n\t\t}\n\t\tfor (map<pair<int, int>, int>::iterator it = lastins.begin(); it != lastins.end(); it++)\n\t\t\tif (it->second <= q)\n\t\t\t\tSegment_Tree::insert(1, 1, q, it->second, q, it->first.first, it->first.second);\n\t\tSegment_Tree::solve(1, 1, q);\n\t\tfor (int i = 1; i <= q; i++)\n\t\t\tif (arr[i].type == QUERY)\n\t\t\t\twrite(ans[i]), putchar('\\n');\n\t\treturn (0^_^0);\n\t}\n}\nint main()\n{\n\treturn zyt::work();\n}\n```",
        "postTime": 1547433579,
        "uid": 47778,
        "name": "zyt1253679098",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4219 \u3010[BJOI2014]\u5927\u878d\u5408\u3011"
    },
    {
        "content": "\u770b\u5230\u5f88\u591a\u4eba\u7528 LCT \u6c34\u8fc7\u4e86\u6b64\u9898\uff0c\u672c\u4eba\u5e76\u6ca1\u5199\u8fc7 LCT \uff0c\u6240\u4ee5\u53ea\u597d\u7528\u4e00\u79cd\u7b28\u529e\u6cd5\uff0c\u4f46\u662f\u6bd4 LCT \u5e38\u6570\u4f4e\u592a\u591a\u3002\n\n\u5bf9\u8fd9\u4e2a\u68ee\u6797\u7684\u64cd\u4f5c\u53ea\u6709\u4e0d\u65ad\u5730\u8fde\u8fb9\uff0c\u800c\u6ca1\u6709\u5220\u8fb9\uff0c\u6211\u4eec\u4e0d\u59a8\u770b\u6210\u8fd9\u672c\u6765\u662f\u4e00\u68f5\u6811\uff0c\u63a5\u7740\u4e0d\u65ad\u6709\u8fb9\u88ab\u201c\u70b9\u4eae\u201d\uff0c\u5c31\u5408\u5e76\u4e86\u5b50\u6811\u3002\u6700\u5f00\u59cb\u8bfb\u4e00\u904d\uff0c\u628a\u8fd9\u9897\u6811\u5efa\u51fa\u6765\uff0c\u518d\u91cd\u65b0\u626b\u4e00\u904d\uff0c\u8fde\u8fb9\u7684\u65f6\u5019\uff0c\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u6240\u5728\u6811\u7684\u6839\u3002\n\n\u7edf\u8ba1\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u3002\u901a\u8fc7 $(u, v)$ \u8fb9\u5408\u5e76\u4e24\u9897\u6811\u7684\u65f6\u5019 \u4e0d\u59a8\u8bbe\u5728\u5927\u6811\u4e2d $u$ \u662f\u8f83\u9ad8\u7684\uff0c\u628a\u8f83\u4f4e\u7684\u90a3\u9897\u6811\u7684\u5927\u5c0f\u52a0\u5230\u5927\u6811\u4e0a\uff0c\u628a $u$ \u4e00\u8def\u5230\u6839\u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u90fd\u52a0\u4e0a $\\mathrm{size}(v)$ \u3002\u8fd9\u4e2a\u662f\u53ef\u4ee5\u7528\u6811\u94fe\u5256\u5206 + \u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u7684\u3002\n\n\u603b\u590d\u6742\u5ea6 $\\Theta(n + q\\log^2 n)$ \u3002\u5e38\u6570\u539f\u56e0\u6bd4\u666e\u901a\u4eba\u5199\u7684 LCT \u8dd1\u5f97\u8fd8\u5feb\u3002\n\n\n\u6ce8\uff1a\u6837\u4f8b\u4ee3\u7801\u53ea\u6709\u5f00\u542f $\\texttt{C++11}$ \u53ca\u4ee5\u4e0a\u7248\u672c\u624d\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\uff0c\u8fd9\u662f\u56e0\u4e3a\u4f5c\u8005\u5f04\u5de7\u6210\u62d9\uff0c\u5f3a\u884c\u52a8\u7528\u4e86 $\\texttt{std::itoa()}$ \u51fd\u6570\uff0c\u5176\u5b9e\u6ca1\u5927\u7528\uff0c\u5c31\u662f\u7f29\u884c\u4e86\u4e00\u4e2a\u5faa\u73af\u8d4b\u503c\u3002\n```cpp\n#include <cstdio>\n\n#include <algorithm>\n#include <numeric>\n\nusing namespace std;\n\nstruct edge {\n\tint v;\n\tedge* next;\n};\n\nconst int N = 100010;\n\nint n;\nchar opt[N];\nint eu[N], ev[N], p[N], f[N], son[N], sum[N], fw[N], ord[N];\nint top[N];\nedge* g[N];\n\nint find(int x);\nvoid add_edge(int u, int v);\nvoid dfs1(int u);\nvoid dfs2(int u);\nvoid change(int k, int x);\nvoid tchange(int u, int x);\nint query(int k);\nint low_bit(int k);\n\nint main() {\n\tint q;\n\tscanf(\"%d%d\", &n, &q);\n\tfor (int i = 1; i <= q; ++i) {\n\t\tscanf(\" %c%d%d\", &opt[i], &eu[i], &ev[i]);\n\t\tif (opt[i] == 'A') {\n\t\t\tadd_edge(eu[i], ev[i]);\n\t\t\tadd_edge(ev[i], eu[i]);\n\t\t}\n\t}\n\tfor (int u = 1; u <= n; ++u)\n\t\tif (!p[u]) {\n\t\t\tp[u] = -1;\n\t\t\tdfs1(u);\n\t\t}\n\tfor (int u = 1; u <= n; ++u)\n\t\tif (p[u] == -1) {\n\t\t\ttop[u] = u;\n\t\t\tdfs2(u);\n\t\t}\n\tiota(f + 1, f + n + 1, 1);\n\tfor (int i = 1; i <= n; ++i) {\n\t\ttchange(i, 1);\n\t\ttchange(p[i], -1);\n\t}\n\tfor (int i = 1; i <= q; ++i) {\n\t\tint u = eu[i], v = ev[i];\n\t\tif (p[u] == v)\n\t\t\tswap(u, v);\n\t\tint sv = query(ord[v]);\n\t\tif (opt[i] == 'A') {\n\t\t\tf[v] = find(u);\n\t\t\ttchange(u, sv);\n\t\t\ttchange(p[f[u]], -sv);\n\t\t} else {\n\t\t\tint s = query(ord[find(u)]);\n\t\t\tprintf(\"%d\\n\", (s - sv) * sv);\n\t\t}\n\t}\n\treturn 0;\n}\n\nvoid tchange(int u, int x) {\n\twhile (u != -1) {\n\t\tchange(ord[top[u]], x);\n\t\tchange(ord[u] + 1, -x);\n\t\tu = p[top[u]];\n\t}\n}\n\nvoid dfs2(int u) {\n\tstatic int t;\n\tord[u] = ++t;\n\tif (!son[u])\n\t\treturn;\n\ttop[son[u]] = top[u];\n\tdfs2(son[u]);\n\tfor (edge* q = g[u]; q; q = q->next)\n\t\tif (p[q->v] == u && q->v != son[u]) {\n\t\t\ttop[q->v] = q->v;\n\t\t\tdfs2(q->v);\n\t\t}\n}\n\nint low_bit(int k) {\n\treturn k & -k;\n}\n\nvoid change(int k, int x) {\n\tfor (; k <= n; k += low_bit(k))\n\t\tfw[k] += x;\n}\n\nint query(int k) {\n\tint ret = 0;\n\tfor (; k; k -= low_bit(k))\n\t\tret += fw[k];\n\treturn ret;\n}\n\nvoid dfs1(int u) {\n\tsum[u] = 1;\n\tfor (edge* q = g[u]; q; q = q->next)\n\t\tif (!p[q->v]) {\n\t\t\tp[q->v] = u;\n\t\t\tdfs1(q->v);\n\t\t\tsum[u] += sum[q->v];\n\t\t\tif (sum[son[u]] < sum[q->v])\n\t\t\t\tson[u] = q->v;\n\t\t}\n}\n\nint find(int x) {\n\treturn f[x] == x ? x : (f[x] = find(f[x]));\n}\n\nvoid add_edge(int u, int v) {\n\tstatic edge pool[N * 2];\n\tstatic edge* p = pool;\n\tp->v = v;\n\tp->next = g[u];\n\tg[u] = p;\n\t++p;\n}\n```",
        "postTime": 1518177602,
        "uid": 21423,
        "name": "Elegia",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4219 \u3010[BJOI2014]\u5927\u878d\u5408\u3011"
    },
    {
        "content": "**\u9000\u5f79\u849f\u84bb\u521a\u5b66LCT\uff0c\u505a\u9053\u770b\u4e0a\u53bb\u50cfLCT\u88f8\u9898\u7684\u9898\u76ee\u7ec3\u7ec3\u624b\u3002**\n\n\n------------\n\n\u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2an\u4e2a\u70b9\u7684\u68ee\u6797\uff0c\u521d\u59cb\u65e0\u8fb9\uff0c\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n1. \u8fde\u8fb9\n\n1. \u8be2\u95ee\u67d0\u6761\u8fb9\u7684\u201c\u8d1f\u8f7d\u201d\uff08\u5373\u88ab\u70b9\u5bf9\u7b80\u5355\u8def\u5f84\u7ecf\u8fc7\u7684\u6b21\u6570\uff09\n\n\n\n------------\n\n \u770b\u5230\u8fd9\u4e2a\u8fde\u8fb9\u64cd\u4f5c\u5c31\u611f\u89c9\u5f88LCT\uff0c\u90a3\u4e48\u518d\u770b\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\uff0c\u53d1\u73b0\u5c31\u662f\u65ad\u8fb9\uff08x\uff0cy\uff09\u4ee5\u540e\n \n **\u4ee5x\u4e3a\u6839\u7684\u6811\u7684\u5927\u5c0f \u548c \u4ee5y\u4e3a\u6839\u7684\u6811\u7684\u5927\u5c0f\u7684\u4e58\u79ef**\n \n \u90a3\u4e48\u5f88\u7b80\u5355\u4e86\uff0c\u5728lct\u4e0a\u6211\u4eec\u4e0d\u4ec5\u7ef4\u62a4\u677f\u5b50\u4e2d\u7684siz\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u4e0b\u5b83\u7684\u6240\u6709\u865a\u8fb9\u5b50\u6811siz\u7684\u548c\uff08\u8fd9\u91cc\u79f0\u4e4b\u4e3aexsiz\uff09\u3002\n \n \u8fd9\u68372\u64cd\u4f5c\u5c31\u8f6c\u6362\u4e3a\u4e86\uff1a\n \n 1. split\uff08x\uff0cy\uff09 \u3010LCT\u677f\u5b50\u7684\u64cd\u4f5c\u3011\n 1. \u65ad\u8fb9\n 1. makeroot\uff08x\uff09\u5e76\u4e14makeroot\uff08y\uff09\n 1. \u8f93\u51fasiz\u4e58\u79ef\u5373\u53ef\n \n \n\u76f8\u4fe1\u5df2\u7ecf\u5f88\u597d\u7406\u89e3\u4e86\uff0c\u90a3\u4e48\u4ee3\u7801\u4e2d\u8981\u6ce8\u610f\u7684\u5c31\u662f\u6bcf\u4e00\u6b21\u66f4\u6539\u8fb9\u7684\u865a\u5b9e\u5173\u7cfb\u65f6\u90fd\u8981\u6ce8\u610fexsiz\u7684\u53d8\u5316\u548csiz\u7684\u53d8\u5316\uff08\u5176\u5b9e\u5c31\u662f\u5728access\u548clink\u4e2d\u8981\u6ce8\u610f\u8fd9\u4e2a\u5373\u53ef\uff09\u4ee5\u53ca\u591a\u591aupdate\n \n \u90a3\u4e48\u4e0a\u4ee3\u7801\uff1a\n \n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<iomanip>\n#include<algorithm>\nusing namespace std;\nstruct node{\n\tint fa,son[2],siz,exsiz,rev;\n}t[100050];\ninline void update(int x)\n{\n\tt[x].siz=t[t[x].son[0]].siz+t[t[x].son[1]].siz+t[x].exsiz+1;\n}\ninline void pushdown(int x)\n{\n\tif(t[x].rev)\n\t{\n\t\tswap(t[x].son[0],t[x].son[1]);\n\t\tif(t[x].son[0]) t[t[x].son[0]].rev^=1;\n\t\tif(t[x].son[1]) t[t[x].son[1]].rev^=1;\n\t\tt[x].rev=0;\n\t}\n}\ninline bool isroot(int x)\n{\n\treturn t[t[x].fa].son[0]!=x&&t[t[x].fa].son[1]!=x;\n}\ninline int get(int x)\n{\n\treturn t[t[x].fa].son[1]==x;\n}\ninline void rotate(int x)\n{\n\tint f=t[x].fa;int ff=t[f].fa;int gx=get(x);int gx2=get(f);\n\tif(!isroot(f))\n\t{\n\t\tt[ff].son[gx2]=x;\n\t}\n\tt[f].son[gx]=t[x].son[gx^1];\n\tt[t[x].son[gx^1]].fa=f;\n\tt[x].son[gx^1]=f;\n\tt[f].fa=x;\n\tt[x].fa=ff;\n\tupdate(f);\n\tupdate(x);\n}\nint st[100050];\ninline void splay(int x)\n{\n\tint top=0;\n\tint y=x;\n\tst[++top]=y;\n\twhile(!isroot(y))\n\t{\n\t\ty=t[y].fa;\n\t\tst[++top]=y;\n\t}\n\twhile(top)\n\t{\n\t\tpushdown(st[top--]);\n\t}\n\twhile(!isroot(x))\n\t{\n\t\tint f=t[x].fa;\n\t\tif(isroot(f))\n\t\t{\n\t\t\trotate(x);\n\t\t}\n\t\telse if(get(x)==get(f))\n\t\t{\n\t\t\trotate(f);\n\t\t\trotate(x);\n\t\t}\n\t\telse \n\t\t{\n\t\t\trotate(x);\n\t\t\trotate(x);\n\t\t}\n\t\tupdate(x);\n\t}\n}\ninline void access(int x)\n{\n\tfor(int y=0;x;y=x,x=t[x].fa)\n\t{\n\t\tsplay(x);\n\t\tt[x].exsiz+=t[t[x].son[1]].siz-t[y].siz;\n\t\tt[x].son[1]=y;\n\t\tupdate(x);\n\t}\n}\ninline void makeroot(int x)\n{\n\taccess(x);\n\tsplay(x);\n\tt[x].rev^=1;\n\tpushdown(x);\n}\ninline void link(int x,int y)\n{\n\tmakeroot(x);\n\tmakeroot(y);\n\tt[x].fa=y;\n\tt[y].exsiz+=t[x].siz;\n\tupdate(y);\n}\ninline void split(int x,int y)\n{\n\tmakeroot(x);\n\taccess(y);\n\tsplay(y);\n}\nint n,q;\nint main()\n{\n\t scanf(\"%d%d\",&n,&q);\n\t while(q--)\n\t {\n\t \tchar typ;\n\t \tcin>>typ;\n\t \tif(typ=='A')\n\t \t{\n\t \t\tint x,y;\n\t \t\tscanf(\"%d%d\",&x,&y);\n\t \t\tlink(x,y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tsplit(x,y);\n\t\t\tt[y].son[0]=t[x].fa=0;\n\t\t\tupdate(y);\n\t\t\tmakeroot(x);\n\t\t\tmakeroot(y);\n\t\t\tlong long ans=(long long)(t[x].siz)*(long long)(t[y].siz);\n\t\t\tprintf(\"%lld\\n\",ans);\n\t\t\tt[x].fa=y;\n\t\t\tt[y].exsiz+=t[x].siz;\n\t\t}\n\t }\n\t return 0;\n } \n```\n\n",
        "postTime": 1577271779,
        "uid": 182738,
        "name": "ZBHRuaRua",
        "ccfLevel": 6,
        "title": "BJOI2014 \u5927\u878d\u5408"
    },
    {
        "content": "## \u601d\u8def\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u7684\u662f\u6bcf\u6b21\u67e5\u8be2\u7b54\u6848\u90fd\u662f\u8fb9\u4e24\u7aef\u70b9\u5b50\u6811\u5927\u5c0f\u7684\u4e58\u79ef\u3002\n\u9700\u8981\u52a8\u6001\u7ef4\u62a4\u3002\n\n\u4e00\u822c\u6765\u8bf4LCT\u662f\u7ef4\u62a4\u8def\u5f84\u3002\n\n\u5b50\u6811\u5927\u5c0f\u8be5\u600e\u4e48\u7ef4\u62a4\uff1f\u5176\u5b9e\u662f\u7ef4\u62a4LCT\u5b9e\u865a\u513f\u5b50\u7684\u603b\u6570\u3002\n\n\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4\u5373\u53ef\uff0cs\u8868\u793a\u5b9e\u865a\u513f\u5b50\u7684\u603b\u6570\uff08\u5b50\u6811\u5927\u5c0f\uff09\uff0cfs\u8868\u793a\u865a\u513f\u5b50\u603b\u6570\u3002\u6bcf\u6b21\u865a\u5b9e\u53d8\u5316\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6539\u53d8fs\u5c31\u884c\n\n\u4e00\u4e9b\u7ec6\u8282\uff1a\n\n1.link\u64cd\u4f5c\u4e2d\uff0c\u8003\u8651\u8fde\u63a5\u5bf9y\u7956\u5148\u7684\u5f71\u54cd\uff0c\u9700\u8981\u5148\u628ay\u65cb\u81f3\u6839\u8282\u70b9\n\n2.\u6bcf\u6b21\u5b9e\u865a\u513f\u5b50\u53d8\u5316\uff0c\u6211\u4eec\u90fd\u9700\u8981pushup\u7ef4\u62a4\u603b\u6570z\n\n3.\u6700\u5927\u503c50000*50000 \u4f1a\u7206\u6389int\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=2e5+10;\nint ch[maxn][2],s[maxn],rev[maxn],fs[maxn],fa[maxn],st[maxn];\nint n,q,x,y;\nchar op[10+5];\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nvoid flip(int x){\n\tswap(ch[x][0],ch[x][1]);rev[x]^=1;\n} \nvoid pushup(int x){\n\ts[x]=s[ch[x][0]]+s[ch[x][1]]+fs[x]+1;\n}\nint chk(int x){\n\treturn ch[fa[x]][1]==x;\n}\nint get(int x){\n\treturn ch[fa[x]][0]==x||ch[fa[x]][1]==x;\n}\nvoid pushdown(int x){\n\tif(!rev[x])return;\n\tif(ch[x][0])flip(ch[x][0]);\n\tif(ch[x][1])flip(ch[x][1]);\n\trev[x]=0; \n}\nvoid rotate(int x){\n\tint y=fa[x],z=fa[y],k=chk(x),w=ch[x][k^1];\n\tch[y][k]=w;if(w)fa[w]=y;\n\tif(get(y))ch[z][chk(y)]=x;fa[x]=z;\n\tch[x][k^1]=y;fa[y]=x;\n\tpushup(y);\n}\nvoid splay(int x){\n\tint y=x,top=0;st[++top]=y;\n\twhile(get(y))st[++top]=y=fa[y];\n\twhile(top)pushdown(st[top--]);\n\twhile(get(x)){\n\t\ty=fa[x];\n\t\tif(get(y)){\n\t\t\tif(chk(x)==chk(y))rotate(y);\n\t\t\telse rotate(x); \n\t\t}rotate(x);\n\t}pushup(x);\n}\nvoid access(int x){\n\tfor(int y=0;x;x=fa[y=x])\n\tsplay(x),fs[x]+=s[ch[x][1]]-s[ch[x][1]=y],pushup(x);\n}\nvoid makeroot(int x){\n\taccess(x);splay(x);flip(x);\n}\nvoid split(int x,int y){\n\tmakeroot(x);access(y);splay(y);\n}\nvoid link(int x,int y){\n\tsplit(x,y);\n\tfs[fa[x]=y]+=s[x];\n\tpushup(y); \n}\nint main(){\n\tn=read();q=read();\n\t\n\tfor(int i=1;i<=q;i++){\n\t\tscanf(\"%s\",op);x=read();y=read();\n\t\tif(op[0]=='A')link(x,y);\n\t\telse{\n\t\t\tsplit(x,y);\n\t\t\tprintf(\"%lld\\n\",1ll*(fs[x]+1)*(fs[y]+1));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1569312349,
        "uid": 58707,
        "name": "Edward_Elric",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4219 \u3010[BJOI2014]\u5927\u878d\u5408\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\r\n\r\n- \u7ed9\u5b9a $n$ \u70b9\uff0c$m$ \u4e2a\u64cd\u4f5c\u5982\u4e0b\uff1a\r\n\t1. \u52a0\u5165\u4e00\u6761\u8fb9\uff0c\u4fdd\u8bc1\u8fde\u8fb9\u7684\u4e24\u70b9\u539f\u6765\u4e0d\u8fde\u901a\u3002\r\n\t2. \u8be2\u95ee\u6709\u591a\u5c11\u6761\u8def\u5f84\u901a\u8fc7\u67d0\u6761\u8fb9\u3002\r\n- $1 \\leq n,m \\leq 10^5$\r\n\r\n## \u5206\u6790\r\n\r\n\u7f51\u4e0a\u5927\u591a\u9898\u89e3\u90fd\u662f\u4f7f\u7528 LCT \u6765\u7ef4\u62a4\uff0c\u7136\u800c\u849f\u84bb\u5e76\u4e0d\u4f1a LCT\uff0c\u6240\u4ee5\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u4ec5\u4f7f\u7528\u6811\u94fe\u5256\u5206\u7684\u89e3\u6cd5\u3002\r\n\r\n\u4e0d\u96be\u53d1\u73b0\u67d0\u6761\u8fb9\u8def\u5f84\u6570\u4e3a $siz_x \\times (siz_{root} - siz_x)$\uff0c\u5176\u4e2d $x$ \u4e3a\u8fb9\u6240\u8fde\u7684\u70b9\u4e2d\u6df1\u5ea6\u8f83\u5927\u7684\u4e00\u4e2a\uff0c$root$ \u4e3a\u6811\u6839\uff0c$siz$ \u4e3a\u5b50\u6811\u5927\u5c0f\u3002\r\n\r\n\u53d1\u73b0\u6700\u540e $n$ \u4e2a\u70b9\u7684\u5f62\u6001\u4e3a\u4e00\u4e2a\u68ee\u6797\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u79bb\u7ebf\u4e0b\u6765\uff0c\u5efa\u597d\u68ee\u6797\u518d\u5012\u5e8f\u5220\u8fb9\u540c\u65f6\u56de\u7b54\u8be2\u95ee\u3002\r\n\r\n\u5047\u8bbe\u5220\u53bb\u7684\u8fb9\u8fde\u63a5 $x$\uff0c$y$\uff0c\u4e14 $x$\uff0c$y$ \u539f\u6765\u7684\u6df1\u5ea6 $dep_x < dep_y$\u3002\u5220\u8fb9\u4f1a\u5f71\u54cd $x$ \u5230\u6839\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u4ee5\u53ca\u4ee5 $top_a$\uff0c\u5176\u4e2d $a$ \u4e3a $y$ \u6240\u5728\u91cd\u94fe\u4e2d $y$ \u4e00\u4e0b\u7684\u8282\u70b9\u3002\r\n\r\n\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u5256\u6765\u7ef4\u62a4 $siz$ \u548c $dep$\uff0c\u65ad\u5f00\u8fb9\u65f6\uff0c\u5c06 $x$ \u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u70b9\u7684 $siz$ \u90fd\u51cf\u53bb $siz_y$\uff0c\u5c06 $x$ \u4e00\u4e0b\u7684\u91cd\u94fe\u4e0a\u8282\u70b9\u7684 $top$ \u4fee\u6539\u4e3a $y$. \u67e5\u8be2\u65f6\uff0c$siz_y \\times (siz_{root} - siz_y)$ \u5373\u4e3a\u7b54\u6848\u3002\r\n\r\n\u672c\u505a\u6cd5\u4e3a\u771f\u00b7\u7528\u6811\u5256\u6765\u7ef4\u62a4\u6811\u5256\uff0c\u590d\u6742\u5ea6\u4e3a $O(m\\log^2n)$\uff0c\u8fd8\u662f\u5f88\u5feb\u7684\u3002\r\n\r\n## \u4ee3\u7801\r\n\r\n\u53ea\u653e\u51fa\u4fee\u6539\u548c\u67e5\u8be2\u65f6\u7684\u6838\u5fc3\u4ee3\u7801\uff0c\u7ec6\u8282\u8f83\u591a\uff0c\u6ce8\u610f\u66f4\u65b0 $dep$ \u548c $siz$\uff0c\u5b8c\u6574\u4ee3\u7801\u53ef\u4ee5\u770b[\u6211\u7684\u63d0\u4ea4](https://www.luogu.com.cn/record/77665218)\u3002\r\n\r\n### \u4fee\u6539\r\n\r\n```cpp\r\nfa[y] = 0;\r\ntop[y] = query(1, 1, n, dfn[y]).top;\r\ntop[x] = query(1, 1, n, dfn[x]).top;\r\n// \u66f4\u65b0 top\r\nif(top[y] != y){\r\n\tmodify(1, 1, n, dfn[y], dfn[y] + dep[tail[top[y]]] - dep[y], y); // \u4fee\u6539 y \u6240\u5728\u91cd\u94fe top\r\n\ttop[y] = y;\r\n\ttail[top[y]] = tail[top[x]];\r\n\ttail[top[x]] = x;\r\n}\r\nsiz[y] = query(1, 1, n, dfn[y]).siz; // \u66f4\u65b0 siz\r\nwhile(x){\r\n\ttop[x] = query(1, 1, n, dfn[x]).top;\r\n\tmul(1, 1, n, dfn[top[x]], dfn[x], -siz[y]); // \u4fee\u6539 x \u5230\u6839\u7684 siz\r\n\tx = fa[top[x]];\r\n}\r\n```\r\n\r\n### \u67e5\u8be2\r\n\r\n```cpp\r\nsiz[y] = query(1, 1, n, dfn[y]).siz;\r\ntop[x] = query(1, 1, n, dfn[x]).top;\r\n// \u66f4\u65b0 siz \u548c top\r\nwhile(fa[top[x]]){\r\n\tx = fa[top[x]];\r\n\ttop[x] = query(1, 1, n, dfn[x]).top;;\r\n}\r\nx = top[x];\r\n// x \u8df3\u5230\u6839\r\nsiz[x] = query(1, 1, n, dfn[x]).siz;\r\nans[i] = 1LL * siz[y] * (siz[x] - siz[y]); //\u6ce8\u610f long long\r\n```",
        "postTime": 1655720617,
        "uid": 117555,
        "name": "99_wood",
        "ccfLevel": 6,
        "title": "P4219 [BJOI2014]\u5927\u878d\u5408 \u9898\u89e3"
    },
    {
        "content": "## \u9898\u9762\u63cf\u8ff0\n[~~\u9898\u9762\u4e0d\u53ef\u63cf\u8ff0~~](https://www.luogu.org/problem/P42196)\n\n## \u601d\u8def\n\u8c8c\u4f3c$\\operatorname{LCT}$\u778e\u641e\u7ef4\u62a4\u4e00\u4e0b\u865a\u513f\u5b50\u5c31\u884c\u4e86\u3002\n\n\u4f46\u7ec6\u8282\u6bd4\u8f83\u591a\u554a\u3002\n\n\u901a\u8fc7**\u778e\u641e**\u7684\u89c4\u5f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u7b54\u6848\u8c8c\u4f3c\u5c31\u662f($x$\u7684\u513f\u5b50\u6570$+1$)$*$($y$\u7684\u513f\u5b50\u6570$+1$)\u3002\n\n\u7ecf\u8fc7\u8be2\u95ee\u64cd\u4f5c\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\uff0c\u5176\u5b9e\u5c31\u7b49\u4ef7\u4e8e\u865a\u513f\u5b50 $+1$ $*$ \u865a\u513f\u5b50 $+1$\n\n\u597d\u4e86\uff0c\u5c31\u8fd9\u4e48\u7b80\u5355\u3002\n\n\u8bb0\u5f97$link$\u7684\u65f6\u5019\uff0c\u5c06$y$\u8c03\u5230\u6240\u5728\u8f85\u52a9\u6811\u7684\u6839\u8282\u70b9\uff0c\u7ef4\u62a4\u597d\u72b6\u6001\u518d\u8fde\u3002\n\n## AC code\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define gc getchar()\nusing namespace std;\nconst int N=1e5+10;\ninline void qr(int &x)\n{\n\tx=0;char c=gc;int f=1;\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=gc;}\n\twhile(c>='0'&&c<='9'){x=x*10+(c^48);c=gc;}\n\tx*=f;\n}\nvoid qw(int x)\n{\n\tif(x<0)x=-x,putchar(x%10+48);\n\tif(x/10)qw(x/10);\n\tputchar(x%10+48);\n}\nstruct node{int son[2],c,s,f;bool rv;}t[N<<1];\ninline bool nroot(int p){return t[t[p].f].son[0]==p||t[t[p].f].son[1]==p;}\ninline void update(int p){t[p].c=t[t[p].son[0]].c+1+t[p].s+t[t[p].son[1]].c;}\ninline void crv(int p)\n{\n\tif(!p)return;\n\tswap(t[p].son[0],t[p].son[1]);\n\tt[p].rv^=1;\n}\nvoid pushdown(int p)\n{\n\tif(t[p].rv)\n\t{\n\t\tcrv(t[p].son[1]),crv(t[p].son[0]);\n\t\tt[p].rv=0;\n\t}\n}\nvoid rotate(int p,int w)\n{\n\tint f=t[p].f,gf=t[f].f;\n\tint r=t[p].son[w],R=f;t[R].son[w^1]=r;if(r)t[r].f=R;\n\tr=p;R=gf;if(nroot(f))t[R].son[t[R].son[1]==f]=r;t[r].f=R;\n\tr=f;R=p;t[R].son[w]=r;t[r].f=R;update(f);update(p);\n}\nvoid dfs(int p){if(nroot(p))dfs(t[p].f);pushdown(p);}\nvoid splay(int p)\n{\n\tfor(dfs(p);nroot(p);)\n\t{\n\t\tint f=t[p].f,gf=t[f].f;\n\t\tif(!nroot(f))rotate(p,t[f].son[0]==p);\n\t\telse\n\t\t{\n\t\t\tif(t[f].son[0]==p&&t[gf].son[0]==f)rotate(f,1),rotate(p,1);\n\t\t\telse if(t[f].son[0]==p&&t[gf].son[1]==f)rotate(p,1),rotate(p,0);\n\t\t\telse if(t[f].son[1]==p&&t[gf].son[0]==f)rotate(p,0),rotate(p,1);\n\t\t\telse rotate(f,0),rotate(p,0);\n\t\t}\n\t}\n}\nvoid access(int x)\n{\n\tfor(int y=0;x;x=t[y=x].f)\n\t{\n\t\tsplay(x);if(t[x].son[1])t[x].s+=t[t[x].son[1]].c;\n\t\tif((t[x].son[1]=y))t[x].s-=t[y].c;update(x);\n\t}\n}\nvoid makeroot(int x)\n{\n\taccess(x);splay(x);crv(x);\n}\nvoid link(int x,int y)\n{\n\tmakeroot(x);access(y);splay(y);t[x].f=y;//\u6b64\u65f6y\u4e0d\u4e3a\u6839\uff0c\u4fe1\u606f\u5f97\u4e0d\u5230\u7edf\u8ba1\uff0c\u56e0\u6b64\u9700\u8981access(y),splay(y); \n\tt[y].s+=t[x].c;update(y);\n}\nvoid query(int x,int y)\n{\n\tmakeroot(x);access(y);splay(y);\n\tqw((t[x].s+1)*(t[y].s+1));puts(\"\");\n}\nint main()\n{\n\tint n,m;qr(n),qr(m);char s[10];\n\twhile(m--)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%s\",s+1);qr(x),qr(y);\n\t\tif(s[1]=='A')link(x,y);\n\t\telse query(x,y);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1565265476,
        "uid": 106232,
        "name": "_Sein",
        "ccfLevel": 0,
        "title": "[BJOI2014]\u5927\u878d\u5408"
    },
    {
        "content": "LCTextended\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ea\u9700\u8981\u7528LCT\u7ef4\u62a4\u6811\u7684\u5f62\u6001\uff0c\u5728\u60f3\u529e\u6cd5\u5904\u7406\u5b50\u6811\u5c31\u53ef\u4ee5\u4e86\u3002\u7136\u800cLCT\u4e0d\u652f\u6301\u5b50\u6811\u64cd\u4f5c\uff0c\u8fd9\u65f6\u53ef\u4ee5\u7528\u4f2atop-tree\u3002\u76f4\u63a5\u518d\u5f00\u4e00\u4e2a\u6570\u7ec4\u7ef4\u62a4\u8f7b\u513f\u5b50\u7684\u5927\u5c0f\uff0c\u5728link\u548caccess\u7684\u65f6\u5019\u66f4\u65b0\u6570\u7ec4\u5373\u53ef\u3002\uff08\u7136\u800clink\u6ca1\u6709\u5c06\u53e6\u4e00\u4e2a\u70b9access\u3001splay\u5904\u7406\u5230\u6839\u7684\u4e60\u60ef\u7684\u6211\u88ab\u5361\u4e86\u597d\u591a\u6b21\uff09\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define For(i,a,b) for(i=(a);i<=(b);++i)\n#define Forward(i,a,b) for(i=(a);i>=(b);--i)\n#define Rep(i,a,b) for(register int i=(a),i##end=(b);i<=i##end;++i)\n#define Repe(i,a,b) for(register int i=(a),i##end=(b);i>=i##end;--i)\nusing namespace std;\ntemplate<typename T>inline void read(T &x)\n{\n\tT s=0,f=1;char k=getchar();\n\twhile(!isdigit(k)&&(k^'-'))k=getchar();\n\tif(!isdigit(k)){f=-1;k=getchar();}\n\twhile(isdigit(k)){s=s*10+(k^48);k=getchar();}\n\tx=s*f;\n}\nvoid file()\n{\n\t#ifndef ONLINE_JUDGE\n\t\tfreopen(\"test.in\",\"r\",stdin);\n\t\tfreopen(\"test.out\",\"w\",stdout);\n\t#endif\n}\n#define Chkmax(a,b) a=a>(b)?a:(b)\n#define Chkmin(a,b) a=a<(b)?a:(b)\nconst int MAXN=1e6+7;\nstatic int son[MAXN][2],sz[MAXN],fa[MAXN],rev[MAXN],lit[MAXN];\nnamespace LCT\n{\n\tinline void refresh(int x)\n\t{sz[x]=sz[son[x][0]]+sz[son[x][1]]+1+lit[x];}\n\tinline int isroot(int x)\n\t{return x!=son[fa[x]][0]&&x!=son[fa[x]][1];}\n\tinline int isl(int x){return x==son[fa[x]][1];}\n\tinline void rotate(int x)\n\t{\n\t\tstatic int f,ff,k;f=fa[x],ff=fa[f];k=isl(x);\n\t\tfa[x]=ff;if(!isroot(f))son[ff][isl(f)]=x;\n\t\tson[fa[son[x][k^1]]=f][k]=son[x][k^1];\n\t\tson[fa[f]=x][k^1]=f;refresh(f);refresh(x);\n\t}\n\tinline void pushdown(int x)\n\t{\n\t\tif(rev[x])\n\t\t\tswap(son[x][0],son[x][1]),rev[son[x][0]]^=1\n\t\t\t,rev[son[x][1]]^=1,rev[x]=0;\n\t}\n\tinline void splay(int x)\n\t{\n\t\tstatic int sta[MAXN],top,f;\n\t\tfor(register int i=x,top=0;!isroot(i);i=fa[i])\n\t\t\tsta[++top]=i;\n\t\tfor(;top;pushdown(sta[top--]));\n\t\tfor(f=fa[x];!isroot(x);rotate(x),f=fa[x])\n\t\t\tif(!isroot(f))rotate(isl(f)==isl(x)?f:x);\n\t\t//for(;!isroot(x);rotate(x));\n\t}\n\tinline void access(int x)\n\t{\n\t\tstatic int t;\n\t\tfor(t=0;x;t=x,x=fa[x])\n\t\t{\n\t\t\tsplay(x);\n\t\t\tlit[x]+=sz[son[x][1]]-sz[t];\n\t\t\tif(lit[x]<0)cerr<<\"ERRR\"<<endl;\n\t\t\tson[x][1]=t;refresh(x);\n\t\t}\n\t}\n\tinline void makeroot(int x)\n\t{access(x);splay(x);rev[x]^=1;}\n\tinline void link(int x,int y)\n\t{makeroot(x);access(y);splay(y);\n\t\tfa[x]=y;lit[y]+=sz[x];refresh(y);}\n\tinline long long calans(int x,int y)\n\t{\n\t\tmakeroot(x);access(y);splay(y);\n\t\t//cout<<sz[x]<<' '<<sz[y]<<endl;\n\t\t//cout<<lit[x]<<' '<<lit[y]<<endl;\n\t\t//cout<<son[x][0]<<' '<<son[x][1]<<endl;\n\t//\tcout<<son[y][0]<<' '<<son[y][1]<<endl;\n\t\treturn 1ll*sz[x]*(sz[y]-sz[x]);\n\t}\n}\nusing namespace LCT;\nstatic int n,m;\ninline void getopt(char &x)\n{for(x=0;!isupper(x);x=getchar());}\ninline void work()\n{\n\tread(n);read(m);\n\tRep(i,1,n)sz[i]=1;\n\tstatic char opt;\n\tstatic int x,y;\n\tRep(i,1,m)\n\t{\n\t\t//cerr<<i<<endl;\n\t\tgetopt(opt);read(x);read(y);\n\t\tif(opt=='A')link(x,y);\n\t\telse printf(\"%lld\\n\",calans(x,y));\n\t}\n}\nint main()\n{\n\tfile();\n\twork();\n\treturn 0;\n}\n```\n\n\u8fd8\u662f\u53ef\u4ee5\u770b\u5230\u6211\u75af\u72c2\u7684\u8c03\u8bd5\u4ee3\u7801\u7684\u3002",
        "postTime": 1517895833,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4219 \u3010[BJOI2014]\u5927\u878d\u5408\u3011"
    },
    {
        "content": "\u9996\u5148\u4e00\u6761\u8fb9\u7684\u8d1f\u8f7d\u5c31\u662f\u65ad\u6389\u8fd9\u6761\u8fb9\u540e\u4e24\u4e2a\u70b9\u6240\u5728\u8fde\u901a\u5757\u7684\u5927\u5c0f\n\n\u8fd9\u9898\u6709\u8fde\u8fb9\uff0c\u65ad\u8fb9\uff0c\u67e5\u8be2\u7684\u64cd\u4f5c\uff0c\u8003\u8651lct\n\n\u5404\u79cd\u64cd\u4f5c\u5982\u4e0b\uff1a\n\n\u8fde\u8fb9\uff1a\u76f4\u63a5link\n\n\u67e5\u8be2\uff1a\u5148split\uff0c\u518d\u8f93\u51fa\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#pragma GCC optimize(2) \n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#define ll long long\nusing namespace std;\n\nchar buf[100010],*p1=buf,*p2=buf;\nconst ll N=100010;\nll n,m;\nstruct Link_Cut_tree{\n\tll sum,size,son[2],lazy,father;\n}tree[N];\n\ninline ll read(){\n\tll x=0,tmp=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-') tmp=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tx=(x<<3)+(x<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn tmp*x;\n}\n\ninline void write(ll x){\n\tif(x<0){\n\t\tputchar('-');\n\t\tx=-x;\n\t}\n\tll y=10,len=1;\n\twhile(y<=x){\n\t\ty=(y<<3)+(y<<1);\n\t\tlen++;\n\t}\n\twhile(len--){\n\t\ty/=10;\n\t\tputchar(x/y+48);\n\t\tx%=y;\n\t}\n}\n\ninline void pushup(ll p){\n\ttree[p].sum=tree[tree[p].son[0]].sum+tree[tree[p].son[1]].sum+tree[p].size+1;\n}\n\ninline void pushdown(ll p){\n\tif(tree[p].lazy){\n\t\tswap(tree[p].son[0],tree[p].son[1]);\n\t\ttree[tree[p].son[0]].lazy^=tree[p].lazy;\n\t\ttree[tree[p].son[1]].lazy^=tree[p].lazy;\n\t\ttree[p].lazy=0;\n\t}\n}\n\ninline bool isroot(ll p){\n\treturn tree[tree[p].father].son[0]!=p&&tree[tree[p].father].son[1]!=p;\n}\n\ninline bool which(ll p){\n\treturn tree[tree[p].father].son[1]==p;\n}\n\ninline void rotate(ll p){\n\tll fa=tree[p].father,fafa=tree[fa].father;\n\tbool w=which(p);\n\tif(!isroot(fa)) tree[fafa].son[which(fa)]=p;\n\ttree[fa].son[w]=tree[p].son[w^1];\n\ttree[tree[p].son[w^1]].father=fa;\n\ttree[p].son[w^1]=fa;\n\ttree[fa].father=p;\n\ttree[p].father=fafa;\n\tpushup(fa); pushup(p);\n}\n\ninline void splay(ll p){\n\tstack<ll> st;\n\twhile(!st.empty()) st.pop();\n\tst.push(p);\n\tfor(ll i=p; !isroot(i); i=tree[i].father) st.push(tree[i].father);\n\twhile(!st.empty()){\n\t\tpushdown(st.top());\n\t\tst.pop();\n\t}\n\tfor(ll i=tree[p].father; !isroot(p); rotate(p),i=tree[p].father){\n\t\tif(!isroot(i)){\n\t\t\tif(which(i)==which(p)) rotate(i);\n\t\t\telse rotate(p);\n\t\t}\n\t}\n\tpushup(p);\n}\n\ninline void access(ll p){\n\tfor(ll y=0; p; p=tree[y=p].father){\n\t\tsplay(p);\n\t\ttree[p].size+=tree[tree[p].son[1]].sum;\n\t\ttree[p].size-=tree[tree[p].son[1]=y].sum;\n\t\tpushup(p);\n\t}\n}\n\ninline ll getroot(ll p){\n\taccess(p);\n\tsplay(p);\n\twhile(tree[p].son[0]){\n\t\tpushdown(p);\n\t\tp=tree[p].son[0];\n\t}\n\treturn p;\n}\n\ninline void makeroot(ll p){\n\taccess(p);\n\tsplay(p);\n\ttree[p].lazy^=1;\n}\n\ninline void split(ll x,ll y){\n\tmakeroot(x);\n\taccess(y);\n\tsplay(y);\n}\n\ninline void link(ll x,ll y){\n\tsplit(x,y);\n\ttree[tree[x].father=y].size+=tree[x].sum;\n\tpushup(y);\n}\n\ninline void cut(ll x,ll y){\n\tsplit(x,y);\n\tif(tree[y].son[which(x)^1]||tree[x].father!=y||tree[x].son[1]) return;\n\ttree[x].father=tree[y].son[0]=0;\n\tpushup(y);\n}\n\nint main(){\n\tn=read(); m=read();\n\tfor(ll i=1; i<=n; i++) tree[i].sum=0;\n\twhile(m--){\n\t\tchar op; cin>>op;\n\t\tif(op=='A'){\n\t\t\tll x=read(),y=read();\n\t\t\tlink(x,y);\n\t\t}\n\t\telse if(op=='Q'){\n\t\t\tll x=read(),y=read();\n\t\t\tsplit(x,y);\n\t\t\twrite((tree[x].size+1)*(tree[y].size+1)); putchar('\\n');\n\t\t}\n\t\telse cout<<\"FUCK op=\"<<op<<endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1579353504,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4219 \u3010[BJOI2014]\u5927\u878d\u5408\u3011"
    }
]