[
    {
        "content": "\u5410\u69fd\uff1a\u4e00\u9053\u66fe\u7ecf\u6df7\u5728\u7eff\u9898\u91cc\u7684\u7d2b\u9898\u3002\n\n---\n\u5728\u6b63\u6587\u7684\u524d\u9762\uff0c\u5148\u89e3\u91ca\u4e00\u4e0b\u4e00\u4e9b\u5185\u5bb9\u7684\u5b9a\u4e49\u3002\n\n$u\\to v$\uff1a\u8868\u793a$u$\u5230$v$\u7684\u6700\u77ed\u8def\u3002\n\n$d1_u$\uff1a$1\\to u$\u7684\u957f\u5ea6\u3002\n\n$dn_u$\uff1a$n\\to u$\u7684\u957f\u5ea6\u3002\n\n$st_i$\uff1a$1\\to n$\u4e0a\u7684\u7b2c$i$\u4e2a\u70b9\u3002\n\n$id_u$\uff1a\u82e5\u4e3a$0$\uff0c\u8868\u793a$u$\u4e0d\u5728$1\\to n$\u4e0a\uff0c\u5426\u5219\u8868\u793a$u$\u662f$1\\to n$\u4e0a\u7b2c$id_u$\u4e2a\u70b9\u3002\n\n$L_u$\uff1a$1\\to n$\u548c$1\\to u$\u7684**\u6700\u540e\u4e00\u4e2a\u91cd\u5408\u70b9\u7684**$id$\n\n$R_u$\uff1a$n\\to1$\u548c$n\\to u$\u7684**\u6700\u540e\u4e00\u4e2a\u91cd\u5408\u70b9\u7684**$id$\u3002\n\n$res_i$\uff1a\u5220\u6389$1\\to n$\u7684\u7b2c$i$\u6761\u8fb9\u540e\uff0c$1\\to n$\u7684\u957f\u5ea6\u3002\n\n\u672c\u6587\u4e0d\u518d\u8bb2\u89e3$d1_u,dn_u,st_i,id_u$\u7684\u6c42\u6cd5\u3002\n\n---\n### $step1$ \u6c42\u51fa$L_u,R_u$\n\u4ece$1\\to n$\u4e0a\u7684\u6bcf\u4e2a\u70b9$u$\u51fa\u53d1\uff0c\u5f00\u59cb$bfs$\uff0c\u5411\u6ca1\u6709\u88ab\u641c\u8fc7\u3001$id_v=0$\u4e14$u$\u5728$1\\to v$\u4e0a\u7684\u70b9$v$\u641c\u7d22\uff0c\u5e76\u5c06\u5176$L_v$\u8bbe\u4e3a$id_u$\u3002\u5982\u4e0b\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/yn0l8e0o.png)\n\n\u4ece$n\\to 1$\u4e0a\u7684\u6bcf\u4e2a\u70b9$u$\u51fa\u53d1\uff0c\u5f00\u59cb$bfs$\uff0c\u5411\u6ca1\u6709\u88ab\u641c\u8fc7\u3001$id_v=0$\u4e14$u$\u5728$n\\to v$\u4e0a\u7684\u70b9$v$\u641c\u7d22\uff0c\u5e76\u5c06\u5176$R_v$\u8bbe\u4e3a$id_u$\u3002\u5982\u4e0b\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/i5r70k69.png)\n\n### $step2$ \u6c42\u51fa$res_i$\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u82e5\u8981\u4f7f$1\\to n$\u7684\u957f\u5ea6\u53d8\u5927\uff0c\u4e00\u5b9a\u8981\u5220\u9664$1\\to n$\u4e0a\u7684\u8fb9\u3002\n\n\u8003\u8651\u6bcf\u6761\u4e0d\u5728$1\\to n$\u4e0a\u7684\u8fb9$u\\to v$\uff0c\u82e5\u5220\u9664$st_{L_u}\\to st_{R_v}$\u4e2d\u7684\u4e00\u6761\u8fb9\uff0c\u5219$1\\to n$\u6709\u53ef\u80fd\u7ecf\u8fc7$u\\to v$\uff0c\u6b64\u65f6$1\\to n$\u7684\u957f\u5ea6\u4e3a$d1_u+w_{u,v}+dn_v$\u3002\n\n\u800c$res_i$\u5c31\u662f\u6240\u6709\u6ee1\u8db3$st_{L_u}\\le i\\le st_{R_v}$\u7684\u8fb9$1\\to n$\u7684\u957f\u5ea6\u7684\u6700\u5c0f\u503c\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\uff0c\u533a\u95f4\u4fee\u6539$[st_{L_u},st_{R_v}]$\u7684\u6700\u5c0f\u503c\uff0c\u6700\u7ec8\u53f6\u5b50\u7ed3\u70b9\u7684\u503c\u5c31\u662f$res$\u3002\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n---\n\u66f4\u591a\u7ec6\u8282\u8be6\u89c1\u4ee3\u7801\u3002\n\n```cpp\n#include<stdio.h>\n#include<queue>\nusing namespace std;\nint rd(){\n\tint k=0;char c=getchar();\n\twhile(c>'9'||c<'0')c=getchar();\n\twhile(c>='0'&&c<='9')k=k*10+c-'0',c=getchar();\n\treturn k;\n}\nconst int N=100001;\nint Min(int x,int y){return x<y?x:y;}\nstruct E{int v,w,nxt;}e[N<<2];\nstruct P{int p,w;};\nbool operator<(P a,P b){return a.w>b.w;}\nint n,m,h[N],cnt,u,v,w,d1[N],dn[N],id[N],st[N],T,L[N],R[N],t[N<<2],res[N];\npriority_queue<P>q;queue<int>Q;bool I[N<<2];\nvoid add(int u,int v,int w){e[++cnt]=(E){v,w,h[u]},h[u]=cnt;}\nvoid Dijkstra(int x,int*d){\n\tfor(int i=1;i<=n;++i)d[i]=2e9;\n\td[x]=0,q.push((P){x,0});\n\twhile(!q.empty()){\n\t\tu=q.top().p,w=q.top().w,q.pop();\n\t\tif(w>d[u])continue;\n\t\tfor(int i=h[u];i;i=e[i].nxt){\n\t\t\tv=e[i].v;\n\t\t\tif(d[v]>e[i].w+w)d[v]=e[i].w+w,q.push((P){v,d[v]});\n\t\t}\n\t}\n}//Dijkstra\u6c42d1,dn\nvoid bfs(int x,int*d,int*f){\n\tQ.push(st[x]),f[st[x]]=x;\n\twhile(!Q.empty()){\n\t\tu=Q.front(),Q.pop();\n\t\tfor(int i=h[u];i;i=e[i].nxt){\n\t\t\tv=e[i].v;\n\t\t\tif(!id[v]&&!f[v]&&d[u]+e[i].w==d[v])f[v]=x,Q.push(v);\n            //\u82e5\u4e0d\u5728\u6700\u77ed\u8def\u4e0a\u3001\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\u3001\u4e14u\u57281->v\u4e0a\uff0c\u5c31\u641c\u7d22v\n\t\t}\n\t}\n}//bfs\u6c42L,R\n#define p ((l+r)>>1)\n#define ls (x<<1)\n#define rs (x<<1|1)\nvoid Make(int x,int l,int r){\n\tt[x]=2e9;\n\tif(l==r)return;\n\tMake(ls,l,p),Make(rs,p+1,r);\n}\nvoid Update(int x,int l,int r,int L,int R,int w){\n\tif(L<=l&&r<=R){t[x]=Min(t[x],w);return;}\n\tif(L<=p)Update(ls,l,p,L,R,w);\n\tif(p<R)Update(rs,p+1,r,L,R,w);\n}\nvoid Down(int x,int l,int r){\n\tif(l==r){res[l]=t[x];return;}\n\tt[ls]=Min(t[ls],t[x]),t[rs]=Min(t[rs],t[x]),Down(ls,l,p),Down(rs,p+1,r);\n}\nint main(){\n\tfreopen(\"data.in\",\"r\",stdin);\n\tfreopen(\"data.out\",\"w\",stdout);\n\tn=rd(),m=rd();\n\tfor(int i=1;i<=m;++i)u=rd(),v=rd(),w=rd(),add(u,v,w),add(v,u,w);\n\tDijkstra(1,d1),Dijkstra(n,dn),u=1;\n\twhile(u<n){\n\t\tst[++T]=u,id[u]=T;\n\t\tfor(int i=h[u];i;i=e[i].nxt){\n\t\t\tv=e[i].v;\n\t\t\tif(dn[v]+e[i].w==dn[u]){I[i]=1,u=v;break;}//\u8981\u6807\u8bb0\u8fb9\u662f\u5426\u5728\u6700\u77ed\u8def\u4e0a\n\t\t}\n\t}\n\tst[++T]=n,id[n]=T;//\u6c42st,id\n\tfor(int i=1;i<=T;++i)bfs(i,d1,L),bfs(i,dn,R);\n\t--T,Make(1,1,T);\n    //\u6709T\u4e2a\u70b9\uff0c\u5c31\u6709T-1\u6761\u8fb9\uff0c\u6240\u4ee5T\u8981\u51cf1\n    //\u5efa\u7ebf\u6bb5\u6811\u65f6\u8981\u5c06\u6743\u503c\u521d\u59cb\u5316\u4e3ainf\n\tfor(u=1;u<=n;++u)\n\t\tfor(int i=h[u];i;i=e[i].nxt){\n\t\t\tv=e[i].v;\n\t\t\tif(!I[i]&&L[u]<R[v])Update(1,1,T,L[u],R[v]-1,d1[u]+e[i].w+dn[v]);\n            //\u82e5\u8fb9\u4e0d\u5728\u6700\u77ed\u8def\u4e0a\u5c31\u8fdb\u884c\u533a\u95f4\u4fee\u6539\u3002\n\t\t}\n\tDown(1,1,T),u=0,v=0;\n\tfor(int i=1;i<=T;++i){\n\t\tif(u<res[i])u=res[i],v=1;\n\t\telse if(u==res[i])++v;\n\t}//\u7edf\u8ba1\u6700\u5927\u503c\u548c\u65b9\u6848\u6570\n\tif(u==d1[n])v=m;//!!!\n    //\u82e5\u5220\u9664\u4e00\u6761\u8fb9\u540e1->n\u4e0d\u53d8\uff0c\u90a3\u4e48\u5220\u9664\u6bcf\u4e00\u6761\u8fb9\u6548\u679c\u76f8\u540c\uff0c\u65b9\u6848\u6570\u4e3am\n\tprintf(\"%d %d\\n\",u,v);\n\treturn 0;\n}\n```",
        "postTime": 1570168126,
        "uid": 68467,
        "name": "xcxcli",
        "ccfLevel": 0,
        "title": "[TJOI2012]\u6865"
    },
    {
        "content": "# \u8bf7\u7ba1\u7406\u5458\u4fee\u6b63\u672c\u9898\u96be\u5ea6\u6807\u7b7e\u5e76\u6e05\u9664\u66f4\u6539\u9898\u76ee\u524d\u7684AC\u8bb0\u5f55\n\n\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u5b9a\u4e00\u65e0\u5411\u56fe\uff0c\u6c42\u5220\u9664\u4e00\u6761\u8fb9\u540e1\u5230n\u6700\u77ed\u8def\u7684\u6700\u5927\u503c\uff0c\u4ee5\u53ca\u65b9\u6848\u6570\u3002\n\n\u505a\u6cd5\uff1a\u6211\u4eec\u5148\u4ece1\u4e3a\u8d77\u70b9\u3001\u4ecen\u4e3a\u8d77\u70b9\u8dd1\u4e24\u8fb9dij\uff0c\u83b7\u5f97\u6bcf\u4e00\u4e2a\u70b9\u5230\u8d77\u70b91\u3001\u7ec8\u70b9n\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u5176\u5b9e\u8ddd\u79bb\u548c\u8fb9\u6743\u4e4b\u95f4\u7684\u5173\u7cfb\u76f8\u5f53\u4e8e\u6784\u5efa\u4e86\u75311\u4e3a\u6839\u7684\u548c\u7531n\u4e3a\u6839\u7684\u6700\u77ed\u8def\u6811---\u6240\u6709\u6700\u77ed\u8def\u7ec4\u6210\u7684\u6811\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u8981\u5220\u9664\u4e00\u6761\u8fb9\uff0c\u5e76\u4f7f\u5f97\u6700\u77ed\u8def\u589e\u5927\uff0c\u4e00\u5b9a\u8981\u5220\u9664\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\u3002\u6240\u4ee5\u6211\u4eec\u627e\u5230\u4ece1\u5230n\u7684\u4e00\u6761\u6700\u77ed\u8def\u94fe\u3002\u627e\u7684\u65b9\u6cd5\u5c31\u662f\u5728\u7531n\u4e3a\u6839\u7684\u6700\u77ed\u8def\u6811\u4e0a\u4ece1\u5f00\u59cb\u5411N\u8d70\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u4ece\u8fd9\u4e2a\u6700\u77ed\u8def\u94fe\u4e0a\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5728\u4ee51\u4e3a\u6839\u548c\u4ee5n\u4e3a\u6839\u7684\u6700\u77ed\u8def\u6811\u4e0a\u8fdb\u884cbfs(\u4ec5\u5411\u513f\u5b50bfs)\u3002\u76ee\u7684\u662f\u627e\u5230\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e0d\u5728\u6700\u77ed\u8def\u94fe\u4e0a\u7684\u70b9x\uff0c\u627e\u52301\u5230x\u6700\u77ed\u8def\u4e0e1\u5230n\u6700\u77ed\u8def\u6700\u540e\u4e00\u4e2a\u91cd\u5408\u7684\u70b9l[x]\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u5728\u4ee51\u4e3a\u6839\u7684\u6700\u77ed\u8def\u6811\u4e0ax\u4e0en\u7684lca\u3002\u540c\u7406\u8fd8\u6709\u4ee5n\u4e3a\u6839\u7684\u6700\u77ed\u8def\u4e0ax\u548c1\u7684lca\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u6761\u4e0d\u5728\u6700\u77ed\u8def\u94fe\u4e0a\u7684\u8fb9u->v\uff0c\u4e0d\u96be\u60f3\u5230\uff0c\u4ece1\u5230N\u7ecf\u8fc7\u8fb9u->v\u7684\u6700\u77ed\u8def\u4e00\u5b9a\u662f1->l[u]->u->v->r[v]->n\u7684\u8fd9\u79cd\u5f62\u5f0f\u3002\u90a3\u4e48\u57281->n\u7684\u6700\u77ed\u8def\u4e0a\uff0cl[u]->r[v]\u8fd9\u4e00\u6bb5\u533a\u95f4\u5185\u4efb\u610f\u4e00\u6761\u8fb9\u7684\u5220\u9664\uff0c\u4ece1\u5230n\u7684\u6700\u77ed\u8def**\u6709\u53ef\u80fd**\u53d8\u4e3a1->l[u]->u->v->r[v]->n\u3002\u7531\u4e8e\u662f\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u5c31\u8981\u66f4\u65b0\u6240\u6709\u8fd9\u79cd\u5f62\u5f0f\u7684\u6700\u5c0f\u503c\u3002\u5e76\u4e14\u6240\u6709\u4e0d\u57281->N\u6700\u77ed\u8def\u94fe\u4e0a\u7684\u8fb9\u90fd\u80fd\u5f71\u54cd\u4e00\u4e2a\u533a\u95f4\uff0c\u6240\u4ee5\u8fd9\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u533a\u95f4\u6700\u5c0f\u503c\u95ee\u9898\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a41->N\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\uff0c\u7ebf\u6bb5\u6811\u6bcf\u4e00\u4e2a\u5143\u7d20\u4ee3\u8868\u5220\u9664\u8fd9\u6761\u8fb9\u540e\u6700\u77ed\u8def\u7684\u957f\u5ea6\u3002\n\n\u6700\u540e\u6211\u4eec\u626b\u4e00\u904d\u6574\u4e2a\u7ebf\u6bb5\u6811\uff0c\u627e\u6700\u5927\u503c\u5373\u53ef\u3002\u6ce8\u610f\u5982\u679c\u6240\u6709\u7684\u503c\u76f8\u7b49(\u4e14\u7b49\u4e8e\u6700\u77ed\u8def\u5f84)\uff0c\u8bf4\u660e\u65e0\u8bba\u5220\u9664\u54ea\u4e00\u6761\u8fb9\u90fd\u4e0d\u4f1a\u4f7f\u5f97\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u589e\u52a0\uff0c\u6240\u4ee5\u5220\u9664\u56fe\u91cc\u4efb\u610f\u4e00\u6761\u8fb9\u5747\u53ef\uff0ctot=m\u3002\n\n\u4ee3\u7801\u5982\u4e0b(\u6ca1\u6709\u5751\uff0c\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u63d0\u4ea4)\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n, m, tot, res[100010];\n\nstruct SegmentTree\n{\n    int tree[400010];\n    \n    void init(int x, int l, int r)\n    {\n        tree[x] = 0x3f3f3f3f;\n        if (l == r)\n            return;\n        int mid = (l + r) >> 1;\n        init((x << 1), l, mid);\n        init((x << 1) | 1, mid + 1, r);\n    }\n    \n    void update(int x, int L, int R, int cl, int cr, int key)\n    {\n        if (cr < L || cl > R)\n            return;\n        if (cl >= L && cr <= R)\n        {\n            tree[x] = min(tree[x], key);\n            return;\n        }\n        int mid = (cl + cr) >> 1;\n        update(x << 1, L, R, cl , mid, key);\n        update((x << 1) | 1, L, R, mid + 1, cr, key); \n    }\n    \n    void pushdown(int x, int l, int r)\n    {\n        if (l == r)\n        {\n            res[l] = tree[x];\n            return;\n        }\n        tree[x << 1] = min(tree[x << 1], tree[x]);\n        tree[(x << 1) | 1] = min(tree[(x << 1) | 1], tree[x]);\n        int mid = (l + r) >> 1;\n        pushdown(x << 1, l, mid);\n        pushdown((x << 1) | 1, mid + 1, r); \n    }\n}segtree;\n\nstruct edge\n{\n    int v, w, ne;\n}a[400010];\nbool in[400010];\n\nint h[100010], dis1[100010], dis2[100010], link[100010], id[100010], l[100010], r[100010];\nbool v[100010];\n\nvoid add(int x, int y, int z)\n{\n    static int tmp = 0;\n    a[++tmp] = (edge){y, z, h[x]};\n    h[x] = tmp;\n}\n\nvoid dij(int *dis, int src)\n{\n    for (int i = 1; i <= n; i++)\n    {\n        dis[i] = 0x3f3f3f3f;\n        v[i] = false;\n    }\n    dis[src] = 0;\n    priority_queue<pair<int, int>, vector<pair<int, int> >, greater<pair<int, int> > >q;\n    q.push(make_pair(0, src));\n    while (!q.empty())\n    {\n        int x = q.top().second;\n        q.pop();\n        if (v[x])\n            continue;\n        v[x] = true;\n        for (int i = h[x]; i != 0; i = a[i].ne)\n        {\n            if (v[a[i].v] == false && dis[x] + a[i].w < dis[a[i].v])\n            {\n                dis[a[i].v] = dis[x] + a[i].w;\n                q.push(make_pair(dis[a[i].v], a[i].v));\n            }\n        }\n    }\n}\n\nvoid getLink()\n{\n    int x = 1;\n    while (x != n)\n    {\n        link[++tot] = x;\n        id[x] = tot;\n        for (int i = h[x]; i != 0; i = a[i].ne)\n        {\n            if (dis2[x] == dis2[a[i].v] + a[i].w)\n            {\n                in[i] = true;\n                x = a[i].v;\n                break;\n            }\n        }\n    }\n    link[++tot] = n;\n    id[n] = tot;\n}\n\nvoid bfs(int src, int *dis, int *arr)\n{\n    queue<int> q;\n    q.push(link[src]);\n    arr[link[src]] = src;\n    while (!q.empty())\n    {\n        int x = q.front();\n        q.pop();\n        for (int i = h[x]; i != 0; i = a[i].ne)\n            if (id[a[i].v] == 0 && arr[a[i].v] == 0 && dis[x] + a[i].w == dis[a[i].v])\n            {\n                arr[a[i].v] = src;\n                q.push(a[i].v);\n            }\n    }\n}\n\nint main()\n{\n    scanf(\"%d%d\", &n, &m);\n    for (int x, y, z, i = 1; i <= m; i++)\n    {\n        scanf(\"%d%d%d\", &x, &y, &z);\n        add(x, y, z);\n        add(y, x, z); \n    }\n    dij(dis1, 1);\n    dij(dis2, n);\n    getLink();\n    for (int i = 1; i <= tot; i++)\n        bfs(i, dis1, l);\n    for (int i = tot; i >= 1; i--)\n        bfs(i, dis2, r);\n    segtree.init(1, 1, tot);\n    for (int x = 1; x <= n; x++)\n        for (int i = h[x]; i != 0; i = a[i].ne)\n            if (in[i] == false && l[x] > 0 && r[a[i].v] > 0 && l[x] < r[a[i].v])\n                segtree.update(1, l[x], r[a[i].v] - 1, 1, tot, dis1[x] + a[i].w + dis2[a[i].v]);\n    segtree.pushdown(1, 1, tot);\n    int cnt = 0, ans = 0;\n    for (int i = 1; i < tot; i++)\n    {\n        if (res[i] > ans)\n        {\n            ans = res[i];\n            cnt = 1;\n        }\n        else if (res[i] == ans)\n            cnt++;\n    }\n    if (ans == dis1[n])\n        cnt = m;\n    printf(\"%d %d\\n\", ans, cnt);\n    return 0;\n}\n\n```\n\n\n\u8ba9\u6211\u4eec\u4e00\u8d77\u819c\u62dc\u5927\u4f6c\u6797\u745e\u5802@[olinr](https://www.luogu.org/space/show?uid=88460)",
        "postTime": 1536820615,
        "uid": 13091,
        "name": "ghj1222",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2685 \u3010[TJOI2012]\u6865\u3011"
    },
    {
        "content": "# \u3010\u9898\u89e3\u3011P2685 [TJOI2012]\u6865\n\n\u633a\u5999\u7684\u4e00\u9053\u9898\u3002\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u4e0d\u7528\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\u3002\n\n[\u535a\u5ba2\u56ed\u98df\u7528\u6548\u679c\u66f4\u4f73](https://www.cnblogs.com/xrkforces/p/luogu-P2685.html)\n\n## \u9898\u76ee\u94fe\u63a5\n\n[P2685 [TJOI2012]\u6865 - \u6d1b\u8c37](https://www.luogu.com.cn/problem/P2685)\n\n## \u9898\u610f\u6982\u8ff0\n\n\u7ed9\u5b9a\u4e00\u5f20 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684**\u65e0\u5411**\u56fe\u3002\u6c42\u628a\u8fd9\u5f20\u56fe\u4e0a\u4efb\u610f\u4e00\u6761\u8fb9\u65ad\u6389\u540e\uff0c\u5f62\u6210\u7684\u65b0\u7684\u4ece $1$ \u5230 $n$ \u7684\u6700\u77ed\u8def\u6700\u5927\u662f\u591a\u5c11\uff0c\u5e76\u8f93\u51fa\u6ee1\u8db3\u6700\u5927\u503c\u7684\u65b9\u6848\u6570\u3002\n\n## \u601d\u8def\u5206\u6790\n\n\u9996\u5148\uff0c\u53ea\u6709\u65ad\u6389\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\u65f6\uff0c\u624d\u4f1a\u5bf9\u6700\u540e\u7684\u6700\u77ed\u8def\u957f\u5ea6\u6709\u5f71\u54cd\uff1b\u5982\u679c\u70b8\u7684\u4e0d\u662f\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\uff0c\u5c31\u5bf9\u6700\u77ed\u8def\u957f\u5ea6\u6ca1\u6709\u5f71\u54cd\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n- \u82e5\u539f\u56fe\u4e0a\u65ad\u6389\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\u540e\u5f62\u6210\u7684\u65b0\u7684\u6700\u77ed\u8def\u7684\u6700\u5927\u503c\u4ecd\u7136\u4e0e\u539f\u6700\u77ed\u8def\u957f\u5ea6\u76f8\u540c\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u5f20\u56fe\u4e0a\u65ad\u6389\u4efb\u610f\u4e00\u6761\u8fb9\u90fd\u53ef\u4ee5\uff08\u4e0d\u4e00\u5b9a\u662f\u6700\u77ed\u8def\u4e0a\u8fb9\uff09\uff0c\u90a3\u4e48\u65b9\u6848\u6570\u5c31\u662f\u8fb9\u6570 $m$\uff1b\n\n- \u82e5\u539f\u56fe\u4e0a\u65ad\u6389\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\u540e\u5f62\u6210\u7684\u65b0\u7684\u6700\u77ed\u8def\u7684\u6700\u5927\u503c**\u5927\u4e8e**\u539f\u6700\u77ed\u8def\u957f\u5ea6\uff0c\u90a3\u4e48\u5c31\u53ea\u80fd\u65ad\u6389\u539f\u6700\u77ed\u8def\u4e0a\u7b26\u5408\u8981\u6c42\u7684\u8fb9\uff1b\n\n- \u7a0d\u5fae\u601d\u8003\u53ef\u77e5\uff0c\u65ad\u6389\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\u540e\u5f62\u6210\u7684\u65b0\u7684\u6700\u77ed\u8def\u7684\u6700\u5927\u503c**\u4e0d\u53ef\u80fd\u5c0f\u4e8e**\u539f\u6700\u77ed\u8def\u957f\u5ea6\u3002\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u53ea\u9700\u8981\u8ba1\u7b97\u5728\u65ad\u6389\u6700\u77ed\u8def\u4e0a\u7684\u4efb\u610f\u4e00\u6761\u8fb9\u540e\u5f62\u6210\u7684\u65b0\u7684\u6700\u77ed\u8def\u6700\u5927\u503c\u662f\u591a\u5c11\u3002\n\n\u9996\u5148\u8003\u8651\u4e00\u4e2a\u7ed3\u8bba\uff1a\n\n> \u5047\u8bbe\u539f\u56fe\u6700\u77ed\u8def\u4e0a\u6709 $s$ \u4e2a\u70b9\uff0c\u6700\u77ed\u8def\u5f84\u4e3a $1-v_1-v_2-v_3-\\cdots-v_s$\uff0c\u90a3\u4e48\u5728\u6700\u77ed\u8def\u4e0a\u70b8\u6389\u4e00\u6761\u8fb9 $v_i \\rightarrow v_{i+1}$ \u4e4b\u540e\uff0c\u6240\u5f62\u6210\u7684\u65b0\u7684\u6700\u77ed\u8def\u4e00\u5b9a\u662f $1-v_1-v_2-\\cdots -v_j-\u4e00\u4e9b\u975e\u6700\u77ed\u8def\u4e0a\u7684\u8fb9-v_k-\\cdots -v_s(j\\le i,k \\ge i+1)$\u3002\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u6700\u77ed\u8def\u4e0a\u5220\u6389\u4e00\u6761\u8fb9\u00a0$(u,v)$ \u540e\uff0c\u6211\u4eec\u600e\u4e48\u8d70\u624d\u80fd\u8ba9\u8def\u5f84\u7ee7\u7eed\u6700\u77ed\u5462\uff1f\u4e00\u5b9a\u662f\u4ece\u8d77\u70b9\u6cbf\u7740\u539f\u6765\u7684\u6700\u77ed\u8def\u8d70\u5230 $u$ \u53ca $u$ \u4e4b\u524d\u7684\u67d0\u4e2a\u70b9\uff0c\u504f\u79bb\u6700\u77ed\u8def\uff0c\u8d70\u4e0d\u5728\u539f\u6765\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\uff0c\u5230\u8fbe $v$ \u53ca $v$ \u4e4b\u540e\u7684\u67d0\u4e2a\u70b9\uff0c\u518d\u6cbf\u7740\u539f\u6765\u7684\u6700\u77ed\u8def\u8d70\u5b8c\u3002\n\n\u8fd9\u91cc\u6709\u70b9\u62bd\u8c61\u6211\u4eec\u753b\u4e2a\u56fe\u7406\u89e3\u4e00\u4e0b\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/mzzxqjas.png)\n\n\uff08\u6b64\u56fe\u4ec5\u4f9b\u7406\u89e3\u65b9\u4fbf\uff0c\u5b9e\u9645\u4e0a\u4e0d\u7b26\u5408\u9898\u610f\uff0c\u539f\u9898\u662f\u8fb9\u53cc\u3002\uff09\n\n\u5047\u8bbe\u539f\u6700\u77ed\u8def\u662f $1 \\rightarrow 2 \\rightarrow 3\\rightarrow 4\\rightarrow 7$ \uff08\u56fe\u4e2d\u6807\u7eff\u7684\u8def\u5f84\uff09\uff0c\u82e5\u65ad\u6389\u8fb9 $3\\rightarrow4$\uff0c\u90a3\u4e48\u65b0\u7684\u6700\u77ed\u8def\u5c31\u53ea\u80fd\u4ece\u5728\u6700\u77ed\u8def\u4e0a\u7684 $3$ \u6216\u8005 $3$ \u4e4b\u524d\u201c\u504f\u79bb\u201d\u6700\u77ed\u8def\uff0c\u5728 $4$ \u6216\u8005 $4$ \u4e4b\u540e\u56de\u5230\u6700\u77ed\u8def\u3002\n\n\u5728\u8fd9\u5f20\u56fe\u4e2d\u53ea\u80fd\u662f $1 \\rightarrow 2 \\rightarrow 6 \\rightarrow 5\\rightarrow 4 \\rightarrow 7$\u3002\n\n\u8fd9\u4e2a\u7ed3\u8bba\u5f88\u597d\u8bc1\u660e\uff0c\u4ee5\u4e0a\u56fe\u4e2d\uff0c\u9664\u4e86\u88ab\u65ad\u6389\u7684\u5730\u65b9\u5176\u5b83\u5730\u65b9\u5fc5\u987b\u7ecf\u8fc7\u6700\u77ed\u8def\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u201c\u6700\u77ed\u201d\u3002\n\n\u8fd9\u4e2a\u7ed3\u8bba\u544a\u8bc9\u6211\u4eec\uff1a\u6211\u4eec\u5728\u65b0\u7684\u6700\u77ed\u8def\u4e0a\u8d70\u65f6\uff0c\u6700\u591a\u53ea\u80fd\u201c\u504f\u79bb\u201d\u539f\u6700\u77ed\u8def\u4e00\u6b21\uff0c\u201c\u56de\u5230\u201d\u539f\u6700\u77ed\u8def\u4e00\u6b21\u3002\n\n\u4f60\u662f\u5426\u8054\u60f3\u5230\u4ec0\u4e48\u5462\uff1f\n\n\u8fd9\u4e0d\u5c31\u76f8\u5f53\u4e8e\uff0c\u4e00\u67b6\u98de\u673a\uff0c\u4ece\u8d77\u70b9\u8d70\u5230\u7ec8\u70b9\uff0c\u5728\u4e2d\u95f4\u53ea\u80fd\u8d77\u98de\u4e00\u6b21\uff0c\u964d\u843d\u4e00\u6b21\uff0c\u800c\u6211\u4eec\u5173\u6ce8\u7684\u5c31\u662f\u8d77\u98de\u7684\u65f6\u673a\u548c\u964d\u843d\u7684\u65f6\u673a\u4f7f\u5f97\u6700\u540e\u8d70\u7684\u8def\u7a0b\u6700\u5c0f\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u8003\u8651\uff0c\u628a\u539f\u6700\u77ed\u8def\u627e\u51fa\u6765\uff0c\u7136\u540e\u8003\u8651\u5bf9\u4e8e\u6bcf\u6761\u975e\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\uff0c\u5982\u679c\u6211\u8ba9\u98de\u673a\u5fc5\u987b\u7ecf\u8fc7\u8fd9\u6761\u8fb9\uff0c\u90a3\u5b83\u5728\u4ec0\u4e48\u65f6\u5019\u8d77\u98de\uff0c\u5728\u4ec0\u4e48\u65f6\u5019\u964d\u843d\u3002\n\n\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\u5148\u627e\u5230\u539f\u56fe\u7684\u6700\u77ed\u8def\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5728\u4e4b\u524d\u89c1\u5230\u8fc7\u7684\u597d\u591a\u9898\u7528\u7684\u6280\u5de7\uff1a\n\n\u8dd1\u4e24\u904d dijkstra\uff0c\u5206\u522b\u9884\u5904\u7406\u51fa\u6765\u4ece $1$ \u51fa\u53d1\u5230\u6bcf\u4e2a\u70b9 $i$ \u7684\u6700\u77ed\u8def $dis1_i$ \u4ee5\u53ca\u4ece $n$ \u51fa\u53d1\u5230\u6bcf\u4e2a\u70b9 $i$ \u6700\u77ed\u8def $dis2_i$\u3002\n\n\u7136\u540e\u6211\u4eec\u5229\u7528 $dis2$ \u8fd9\u4e2a\u6570\u7ec4\u6807\u8bb0\u51fa\u6765\u6700\u77ed\u8def\u4e0a\u7684\u6240\u6709\u8fb9\u5e76\u5bf9\u4ed6\u4eec\u91cd\u65b0\u7f16\u53f7\u3002\n\n\u5177\u4f53\u505a\u6cd5\uff1a\u4ece $1$ \u5f00\u59cb\uff0c\u679a\u4e3e\u5f53\u524d\u8282\u70b9 $now$ \u7684\u6bcf\u6761\u51fa\u8fb9 $nxt$\uff0c\u5982\u679c $now$ \u5230 $n$ \u7684\u8ddd\u79bb\u7b49\u4e8e $now \\rightarrow nxt$ \u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\u52a0\u4e0a $nxt$ \u5230 $n$ \u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u5728\u6700\u77ed\u8def\u4e0a\uff0c\u5c06\u5b83\u6807\u8bb0\u51fa\u6765\u3002\n\n\u90a3\u4e48\u6709\u4eba\u4f1a\u95ee\u4e86\uff0c\u90a3\u5982\u679c\u4e00\u4e2a\u56fe\u6709\u591a\u4e2a\u6700\u77ed\u8def\u600e\u4e48\u529e\u5462\uff1f\n\n\u5b9e\u9645\u4e0a\u6211\u4eec\u53ea\u9700\u8981\u6807\u8bb0\u51fa\u6765\u5176\u4e2d\u4e00\u6761\u5373\u53ef\uff0c\u539f\u56e0\u5982\u4e0b\uff1a\n\n$1$ \u5230 $n$ \u7684\u6700\u77ed\u8def\uff0c\u5982\u679c\u6709\u591a\u4e2a\uff0c\u90a3\u4e48\u5c31\u662f\u8bf4\u6700\u77ed\u8def\u67d0\u8fb9\u4e0a\u4e24\u70b9 $(u,v)$ \u4e4b\u95f4\uff0c\u8fd8\u6709\u4e00\u6761\u522b\u7684\u957f\u5ea6\u76f8\u7b49\u7684\u8def\u5f84\uff0c\u90a3\u4e48\u6211\u4eec\u82e5\u65ad\u6389 $(u,v)$ \u8fd9\u6761\u8fb9\uff0c\u5b8c\u5168\u53ef\u4ee5\u8d70\u53e6\u5916\u4e00\u6761\u8def\u5f84\uff0c\u6240\u4ee5\u4e0d\u5f71\u54cd\u3002\n\n\u8fd9\u90e8\u5206\u6c42\u89e3\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nfor(int now=1;now!=n;)\n{\n\tfor(Node nxt:edge[now])\n\t{\n\t\tif(dis2[nxt.v]+nxt.w==dis2[now])\n\t\t{\n\t\t\tnow=nxt.v;\n\t\t\tbook[nxt.id]++;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n```\n\n\u5728\u6807\u8bb0\u5b8c\u539f\u6700\u77ed\u8def\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4 $l$ \u548c $r$\uff1a\n\n$l_u$ \u8868\u793a**\u7b2c\u4e00\u4e2a**\u4e0d\u5728 $1 \\rightarrow u$ \u6700\u77ed\u8def\u4e0a\u7684\u8fb9\u7684\u7f16\u53f7\uff1b\n\n$r_u$ \u8868\u793a**\u6700\u540e\u4e00\u4e2a**\u4e0d\u5728 $u \\rightarrow  n$ \u6700\u77ed\u8def\u4e0a\u7684\u8fb9\u7684\u7f16\u53f7\u3002\n\n\u6bd4\u5982\u5bf9\u4e8e\u4e0a\u9762\u90a3\u5f20\u56fe\uff0c\u6211\u4eec\u5bf9\u4e8e\u8fb9\u7f16\u4e2a\u53f7\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/fme004w8.png)\n\n\u5728\u8fd9\u5f20\u56fe\u4e2d\uff1a\n\n$l_2=2,r_2=1,l_6=2,r_6=3,\\cdots$\n\n\u6211\u4eec\u6682\u4e14\u5148\u4e0d\u7ba1 $l$ \u548c $r$ \u662f\u600e\u4e48\u6c42\u7684\uff0c\u6765\u8003\u8651\u4e00\u4e0b\u5982\u4f55\u5229\u7528 $l$ \u548c $r$ \u6c42\u89e3\u95ee\u9898\u3002\n\n\u5176\u5b9e\u8fd9\u91cc\u7684 $l$ \u548c $r$ \u5bf9\u6807\u7684\u662f\u5728\u98de\u673a\u8d77\u98de\u964d\u843d\u6a21\u578b\u4e2d\u7684\u8d77\u98de\u65f6\u673a\u548c\u964d\u843d\u65f6\u673a\u3002\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u8981\u77e5\u9053\u7684\u5c31\u662f\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u6761\u975e\u539f\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\uff08\u5373\u56fe\u4e2d\u7684\u7eff\u8fb9\uff09\uff0c\u4ec0\u4e48\u65f6\u5019\u8981\u901a\u8fc7\u8fd9\u6761\u8fb9\u4ee5\u53ca\u8fd9\u6761\u8fb9\u6240\u5728\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6\u662f\u591a\u5c11\u3002\n\n\u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff0c\u5047\u5982\u6211\u4eec\u8981\u901a\u8fc7 \u2464 \u53f7\u8fb9\uff0c\u90a3\u4e48\u53ea\u6709\u5f53 \u2461 \u6216 \u2462 \u88ab\u65ad\u5f00\u65f6\uff0c\u624d\u80fd\u7ecf\u8fc7\u5b83\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5047\u5982\u8981\u7ecf\u8fc7\u4e00\u6761\u975e\u539f\u6700\u77ed\u8def\u7684\u8fb9 $u \\rightarrow v$\uff0c\u53ea\u6709\u5f53 $l_u$ \u5230 $r_v$ \u4e2d\u6709\u4e2a\u6865\u65ad\u4e86\uff0c\u6211\u4eec\u624d\u4f1a\u8003\u8651\u8d70\u8fd9\u6761\u8fb9\uff0c\u6b64\u65f6\u5f62\u6210\u7684\u65b0\u7684\u6700\u77ed\u8def\u957f\u5ea6\u5c31\u4e3a $dis1_u+w(u,v)+dis2_v$\u3002\u5176\u4e2d $w(u,v)$ \u8868\u793a\u4ece $u$ \u5230 $v$ \u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\u3002\n\n\u7b49\u7b49\uff0c\u5047\u5982 $u=6,v=2$ \u5462\uff1f\u90a3\u4e48\u5e94\u8be5\u662f $l_v$ \u5230 $r_u$ \u55bd\uff1f\u5b9e\u9645\u4e0a\u8fd9\u662f\u53e6\u4e00\u79cd\u8d70\u5411\uff0c\u4e00\u79cd\u4ece $2 \\rightarrow 6$\uff0c\u4e00\u79cd\u662f $6 \\rightarrow 2$\u3002\n\n\u6240\u4ee5\u5f53 $l_u \\le r_v$ \u65f6\uff0c\u6211\u4eec\u65b0\u7684\u6700\u77ed\u8def\u957f\u5ea6\u4e3a $dis1_u+w(u,v)+dis2_v$\uff1b\n\n\u5f53 $l_v \\le r_u$ \u65f6\uff0c\u65b0\u7684\u6700\u77ed\u8def\u957f\u5ea6\u4e3a $dis1_v+w(u,v)+dis2_u$\u3002\n\n**\u6ce8\u610f\uff1a\u8fd9\u4e24\u4e2a\u6761\u4ef6\u5e76\u4e0d\u5bf9\u7acb\uff0c\u53ef\u4ee5\u5e76\u5b58\u4e5f\u53ef\u4ee5\u5747\u4e0d\u6ee1\u8db3\u3002**\n\n\u6211\u4eec\u7528\u4e24\u4e2a basic_string\uff1a\n\n$dp1_i$ \u8868\u793a\u7684\u662f\u98de\u673a\u5728\u8fb9 $i-1$ \u7684\u7ec8\u70b9\u201c\u8d77\u98de\u201d\u6240\u80fd\u5f62\u6210\u7684\u8def\u5f84\u7684\u96c6\u5408\uff1b\n\n$dp2_i$ \u8868\u793a\u7684\u662f\u98de\u673a\u5728\u8fb9 $i+1$ \u7684\u8d77\u70b9\u201c\u964d\u843d\u201d\u6240\u80fd\u5f62\u6210\u7684\u8def\u5f84\u7684\u96c6\u5408\u3002\n\n\u7ef4\u62a4\u6bcf\u6b21\u8ba1\u7b97\u7684\u8def\u5f84\u957f\u5ea6\u3002\n\n\u8fd9\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nfor(int i=1;i<=m;i++)\n{\n\tif(book[i])continue;\n\tint u=e[i].u,v=e[i].v,w=e[i].w;\n    if(l[u]<=r[v])\n\t{\n\t\tdp1[l[u]]+=dis1[u]+w+dis2[v];\n\t\tdp2[r[v]]+=dis1[u]+w+dis2[v];\n\t}\n\tif(l[v]<=r[u])\n\t{\n\t\tdp1[l[v]]+=dis1[v]+w+dis2[u];\n\t\tdp2[r[u]]+=dis1[v]+w+dis2[u];\n\t}\n} \n```\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u539f\u6700\u77ed\u8def\u4e0a\u7684\u6bcf\u4e00\u6761\u8fb9\uff0c\u6bcf\u4e00\u6761\u8fb9\u88ab\u65ad\u6389\u540e\uff0c\u76f8\u5f53\u4e8e\u98de\u673a\u4ece\u8fd9\u4e2a\u70b9\u524d\u8d77\u98de\uff0c\u964d\u843d\u5230\u8fd9\u4e2a\u70b9\u4e4b\u540e\u3002\n\n\u8003\u8651\u6211\u4eec $l$ \u548c $r$ \u6570\u7ec4\u7684\u672c\u8d28\uff1a$l_i$ \u8868\u793a\u7684\u662f\u4ece $i-1$ \u5f00\u59cb\u4e4b\u540e\u4efb\u610f\u65ad\u54ea\u4e00\u6761\u8fb9\u90fd\u884c\uff0c$r_i$ \u8868\u793a\u7684\u662f\u4ece $i+1$ \u5f80\u524d\u4efb\u610f\u65ad\u54ea\u4e00\u6761\u8fb9\u90fd\u884c\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u7684\u4ea4\u96c6\uff0c\u5c31\u8868\u793a\u4ece $1$ \u5230 $l_i+1$\uff0c\u4ece $r_i+1$ \u5230 $n$ \u7684\u6240\u6709\u7684\u8fb9\u90fd\u4e0d\u80fd\u65ad\u3002\n\n\u53ef\u4ee5\u8003\u8651\u7528 multiset \u6765\u7ef4\u62a4\u3002\n\n\u6211\u4eec\u4ece\u5de6\u5230\u53f3\u679a\u4e3e\u6bcf\u4e00\u4e2a\u6700\u77ed\u8def\u4e0a\u7684\u8fb9 $i$\uff0c\u6bcf\u6b21\u679a\u4e3e\u521a\u5f00\u59cb\u5c06 $dp1_i$ \u4e2d\u7684\u6240\u6709\u5143\u7d20\u52a0\u5165\u4e00\u4e2a multiset \u4e2d\u7ef4\u62a4\uff0c\u7136\u540e\u53d6\u6700\u5c0f\u503c\uff0c\u5c31\u662f\u5f53\u524d\u5728 $i$ \u4e4b\u524d\u8d77\u98de\u5728 $i$ \u4e4b\u540e\u964d\u843d\u7684\u6700\u5c0f\u8ddd\u79bb\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u5728\u6bcf\u6b21\u679a\u4e3e\u7ed3\u675f\u4e4b\u524d\uff0c\u9700\u8981\u5c06 $dp2_i$ \u4e2d\u7684\u5143\u7d20\u4ece multiset \u4e2d\u79fb\u9664\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u56e0\u4e3a $dp2_i$ \u8868\u793a\u7684\u662f\u5728 $i+1$ \u7684\u8d77\u70b9\u964d\u843d\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u5b9a\u4f1a\u7ecf\u8fc7 $i+1$ \u8fd9\u6761\u8fb9\uff0c\u800c\u6211\u4eec\u679a\u4e3e\u7684\u4e0b\u4e00\u4e2a\u662f\u65ad\u6389 $i+1$ \u8fd9\u6761\u8fb9\uff0c\u6240\u4ee5 $dp2_i$ \u4e00\u5b9a\u662f\u4e0d\u7b26\u5408\u4e0b\u4e00\u6b21\u679a\u4e3e\u7684\u6761\u4ef6\u7684\uff0c\u6240\u4ee5\u5fc5\u987b\u8981\u79fb\u9664\u3002\n\n\u8fd9\u91cc\u53ef\u80fd\u6709\u70b9\u62bd\u8c61\uff0c\u6211\u4eec\u518d\u501f\u52a9\u56fe\u7406\u89e3\u4e00\u4e0b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/3j3vvdh2.png)\n\n\u5047\u8bbe\u6211\u4eec\u5728\u4e0a\u9762\u90a3\u5f20\u56fe\u7684 $3$ \u548c $5$ \u4e4b\u95f4\u518d\u8fde\u4e00\u6761\u8fb9\uff0c\u7f16\u53f7\u4e3a \u2467\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8def\u5f84 $1 \\rightarrow 2 \\rightarrow 6 \\rightarrow 5 \\rightarrow 3 \\rightarrow 4 \\rightarrow 7$\uff0c\u6211\u4eec\u4f1a\u5728\u679a\u4e3e\u8fb9 \u2461 \u65f6\u52a0\u5165\u5230 multiset \u4e2d\uff0c\u7531\u4e8e\u5b83\u5728 $3$ \u53f7\u8282\u70b9\u5c31\u56de\u5230\u4e86\u539f\u6700\u77ed\u8def\u4e0a\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u679a\u4e3e\u8fb9 \u2462 \u65f6\u5c31\u4e0d\u80fd\u628a\u5b83\u7b97\u8fdb\u53bb\uff0c\u662f\u4e0d\u5408\u6cd5\u7684\u3002\n\n\u6700\u540e\u7edf\u8ba1\u4e00\u4e0b\u65b9\u6848\u6570\u5c31\u597d\u3002\n\n\u8fd9\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nint cnt=0;//\u65b9\u6848\u6570\uff1b \nfor(int i=1;i<=tot;i++)\n{\n\tfor(int tt:dp1[i])ss.insert(tt);\n\tif(*ss.begin()>ans){ans=*ss.begin();cnt=1;}\n\telse if(*ss.begin()==ans)cnt++;\n\tfor(int tt:dp2[i])ss.erase(ss.find(tt));\n} \nif(ans==dis1[n])cnt=m;//\u8fd9\u91cc\u5728\u521a\u5f00\u59cb\u5206\u6790\u601d\u8def\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u89e3\u91ca\u8fc7\u4e86\u3002\u65ad\u6389\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\u540e\u4e0d\u5f71\u54cd\u6700\u77ed\u8def\u957f\u5ea6\u3002\ncout<<ans<<\" \"<<cnt<<endl;\n```\n\n\u6700\u540e\u6211\u4eec\u6765\u8003\u8651\u5982\u4f55\u6c42 $l$ \u548c $r$ \u6570\u7ec4\u3002\n\n\u9996\u5148\u7531\u4e8e $l_u$ \u662f\u5f53\u524d\u6700\u5c0f\u7684\u4e0d\u5728 $1-u$ \u6700\u77ed\u8def\u4e0a\u7684\u7f16\u53f7\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5c06 $l$ \u6570\u7ec4\u521d\u59cb\u5316\u4e3a\u65e0\u7a77\u5927\uff0c\u540c\u7406\u8981\u5c06 $r$ \u521d\u59cb\u5316\u4e3a $0$\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u539f\u6700\u77ed\u8def\u4e0a\u7684\u6bcf\u4e2a\u70b9 $u$\uff0c\u5b83\u7684 $l$ \u8bbe\u4e3a\u4ece $u$ \u5230 $n$ \u6700\u77ed\u8def\u5f84\u4e0a\u7b2c\u4e00\u6761\u8fb9\u7684\u7f16\u53f7\uff0c$r$ \u8bbe\u4e3a\u4ece $1$ \u5230 $u$ \u8def\u5f84\u4e0a\u6700\u540e\u4e00\u6761\u8fb9\u7684\u7f16\u53f7\u3002\n\n\u8fd9\u4e2a\u5f88\u597d\u7406\u89e3\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u975e\u539f\u6700\u77ed\u8def\u4e0a\u70b9\u6765\u8bf4\uff0c\u5982\u4f55\u6c42\u51fa\u5b83\u7684 $l$ \u548c $r$ \u5462\uff1f\n\n\u5148\u4ee5 $l$ \u4e3a\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u7684\u70b9\u6309\u7167\u5230 $1$ \u7684\u6700\u77ed\u8def\u957f\u5ea6**\u4ece\u5c0f\u5230\u5927**\u6392\u5e8f\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4e0d\u662f\u6700\u77ed\u8def\u4e0a\u7684\u70b9\uff0c\u7528\u5b83\u7684 $l$ \u6765\u66f4\u65b0\u4e0e\u5b83\u8fde\u8fb9\u7684\u6240\u6709\u70b9\u7684 $l$\uff0c\u8fd9\u91cc\u6709\u70b9\u7c7b\u4f3c\u4e8e dijkstra \u7684\u201c\u677e\u5f1b\u201d\u64cd\u4f5c\uff0c\u5177\u4f53\u505a\u6cd5\uff1a\u8bbe\u5f53\u524d\u70b9\u4e3a $now$\uff0c\u4e0e\u5b83\u8fde\u8fb9\u7684\u70b9\u662f $nxt$\uff0c\u82e5 $now$ \u5728 $1$ \u5230 $nxt$ \u7684\u6700\u77ed\u8def\u4e0a\u4e14 $l_{nxt}>l_{now}$\uff0c\u90a3\u4e48\u5c31\u7528 $l_{now}$ \u6765\u66f4\u65b0 $l_{nxt}$\n\n\u806a\u660e\u7684\u5c0f\u4f19\u4f34\u5c31\u4f1a\u53d1\u73b0\uff0c\u8fd9\u5b9e\u9645\u4e0a\u4e5f\u76f8\u5f53\u4e8e\u4e5f\u8dd1\u4e86\u4e00\u904d dijkstra\u3002\n\n\u4e4b\u6240\u4ee5\u8981\u6309\u7167 $dis1$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u8fd9\u5b9e\u9645\u4e0a\u5c31\u662f\u6ee1\u8db3\u4e86\u4e00\u79cd\u62d3\u6251\u6392\u5e8f\uff0c\u8fd9\u5757\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a DP\uff0c\u6211\u4eec\u5fc5\u987b\u4fdd\u8bc1\u7528\u8ddd\u79bb $1$ \u66f4\u8fd1\u7684\u8282\u70b9\u7684 $l$ \u53bb\u66f4\u65b0\u8ddd\u79bb $1$ \u66f4\u8fdc\u7684\u7b54\u6848\uff0c\u4e5f\u76f8\u5f53\u4e8e dijkstra \u4e2d\u6bcf\u6b21\u4ece\u5c0f\u6839\u5806\u51fa\u53d6\u51fa\u5806\u9876\u3002\u5982\u679c\u4e0d\u6392\u5e8f\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u62d3\u6251\u6392\u5e8f\u4e2d\uff0c\u4e00\u4e2a\u8282\u70b9\u7684\u5165\u5ea6\u6ca1\u6709\u51cf\u4e3a $0$ \u5c31\u5165\u961f\u4e86\uff0c\u8fd9\u6709\u53ef\u80fd\u5bfc\u81f4\u7b54\u6848\u9519\u8bef\u3002\n\n\u800c\u4e4b\u6240\u4ee5\u5fc5\u987b\u6ee1\u8db3 $l_{nxt}>l_{now}$ \u624d\u80fd\u66f4\u65b0\u7b54\u6848\uff0c\u6211\u4eec\u7ee7\u7eed\u501f\u52a9\u4e0a\u9762\u7684\u56fe\u7406\u89e3\u4e00\u4e0b\u3002\n\n\u5047\u8bbe $now=6,nxt=5$\uff0c\u6b64\u65f6\u7684 $l_5=3$\uff0c\u90a3\u4e48\u7531\u4e8e $l_6=2 < l_5$\uff0c\u6240\u4ee5\u7528 $l_6$ \u66f4\u65b0 $l_5$\u3002\u8fd9\u5c31\u76f8\u5f53\u4e8e\u4f60\u627e\u5230\u4e86\u98de\u673a\u8d77\u98de\u7684\u66f4\u65e9\u7684\u65f6\u95f4\uff0c\u800c\u7531\u4e8e\u6211\u4eec\u7684 $l$ \u6570\u7ec4\u7684\u542b\u4e49\u662f\u6700\u5c0f\u7684\u4e0d\u5728 $1$ \u5230\u5f53\u524d\u8282\u70b9\u8def\u5f84\u4e0a\u7684\u8fb9\uff0c\u6240\u4ee5\u8981\u7528 $l_6$ \u66f4\u65b0 $l_5$\uff0c\u5c31\u662f\u8fd9\u4e2a\u610f\u601d\u3002\n\n\u6c42 $r$ \u4e0e\u6c42 $l$ \u540c\u7406\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u8fd9\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nfor(int i=1;i<=n;i++)z[i]=i;\nsort(z+1,z+n+1,cmp1);\nfor(int i=1;i<=n;i++)\n{\n\tint now=z[i];\n\tfor(Node nxt:edge[now])\n\t{\n\t\tif(book[nxt.id])continue;\n\t\tif(dis1[nxt.v]==dis1[now]+nxt.w&&l[nxt.v]>l[now])l[nxt.v]=l[now];\n\t}\n}\nsort(z+1,z+n+1,cmp2);\nfor(int i=1;i<=n;i++)\n{\n\tint now=z[i];\n\tfor(Node nxt:edge[now])\n\t{\n\t\tif(book[nxt.id])continue;\n\t\tif(dis2[nxt.v]==dis2[now]+nxt.w&&r[nxt.v]<r[now])r[nxt.v]=r[now];\n\t}\n}\n```\n\n\u5230\u6b64\u4e3a\u6b62\uff0c\u8fd9\u9053\u9898\u7684\u6240\u6709\u601d\u8def\u5c31\u5168\u90e8\u5206\u6790\u5b8c\u4e86\u3002\n\n\u56de\u8fc7\u5934\u6765\u770b\u8fd9\u9053\u9898\uff0c\u5b9e\u9645\u4e0a\u76f8\u5f53\u4e8e\u8dd1\u4e86\u56db\u904d dijkstra\uff0c\u4e24\u904d\u5206\u522b\u7528\u6765\u6c42\u4ece $1$ \u51fa\u53d1\u7684\u6700\u77ed\u8def\u548c\u4ece $n$ \u51fa\u53d1\u7684\u6700\u77ed\u8def\uff0c\u4e24\u904d\u7528\u6765\u6c42 $l$ \u548c $r$\u3002\u800c\u8fd9\u56db\u4e2a\u6570\u7ec4\uff0c\u6b63\u662f\u8fd9\u9053\u9898\u7684\u5173\u952e\u6240\u5728\u3002\n\n\u53e6\u5916\u8fd8\u6709\u4e00\u4e2a multiset\uff0c\u8fd9\u9053\u9898\u7684\u6240\u6709\u9898\u89e3\u90fd\u662f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e86\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u4f46\u5728\u8fd9\u79cd\u89e3\u6cd5\u4e2d\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0d\u7528\u7ebf\u6bb5\u6811\u53ea\u6709\u7b80\u5355\u7684 STL \u5c31\u89e3\u51b3\u95ee\u9898\u7684\u529e\u6cd5\u3002\u5f88\u5999\u3002\n\n\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u8fd9\u662f\u4e00\u9053\u6700\u77ed\u8def\u597d\u9898\uff0c\u8ba9\u6211\u66f4\u52a0\u6df1\u523b\u7684\u8ba4\u8bc6\u5230\u4e86 dijkstra \u4e00\u4e9b\u672c\u8d28\u7684\u4e1c\u897f\uff0c\u751a\u81f3\u4e5f\u5e2e\u6211\u7406\u89e3\u4e86 DP \u4e2d\u7684\u4e00\u4e9b\u4e1c\u897f\uff0c\u540c\u65f6\u8ba9\u6211\u66f4\u52a0\u7406\u89e3\u4e86 multiset \u7684\u7528\u6cd5\uff0c\u53d7\u76ca\u532a\u6d45\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n//luoguP2685\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<algorithm>\n#include<set>\n#define int long long\nusing namespace std;\nconst int maxn=1e5+10;\nint dis1[maxn],dis2[maxn],vis[maxn],vis2[maxn];\nint l[maxn],r[maxn],z[maxn],book[maxn<<1];\nint n,m;\nint ans;\n\nstruct Node{\n    int v,w,id;\n    bool operator<(const Node &t)const\n    {\n    \treturn w>t.w;\n\t}\n};\n\nstruct nod{int u,v,w;}e[maxn<<1];\n\nbasic_string<Node>edge[maxn];\nbasic_string<int>dp1[maxn],dp2[maxn];\nmultiset<int>ss;\n\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\n\nvoid dijkstra1()\n{\n\tpriority_queue<Node>q;\n\tfor(int i=1;i<=n;i++)dis1[i]=(1ll<<31)-1;\n\tdis1[1]=0;int tt=0;\n\tq.push(Node{1ll,dis1[1],tt});\n\twhile(!q.empty())\n\t{\n\t\tNode now=q.top();\n\t\tq.pop();\n\t\tif(vis[now.v])continue;\n\t\tvis[now.v]++;\n\t\tfor(Node y:edge[now.v])\n\t\t{\n\t\t\tif(dis1[y.v]>dis1[now.v]+y.w)\n\t\t\t{\n\t\t\t\tdis1[y.v]=dis1[now.v]+y.w;\n\t\t\t\tq.push(Node{y.v,dis1[y.v],tt});\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid dijkstra2()\n{\n\tpriority_queue<Node>q;\n\tfor(int i=1;i<=n;i++)dis2[i]=(1ll<<31)-1;\n\tint s=n;\n\tdis2[n]=0;int tt=0;\n\tq.push(Node{s,dis2[s],tt});\n\twhile(!q.empty())\n\t{\n\t\tNode now=q.top();\n\t\tq.pop();\n\t\tif(vis2[now.v])continue;\n\t\tvis2[now.v]++;\n\t\tfor(Node y:edge[now.v])\n\t\t{\n\t\t\tif(dis2[y.v]>dis2[now.v]+y.w)\n\t\t\t{\n\t\t\t\tdis2[y.v]=dis2[now.v]+y.w;\n\t\t\t\tq.push(Node{y.v,dis2[y.v],tt});\n\t\t\t}\n\t\t}\n\t}\n}\n\nint cmp1(int a,int b){return dis1[a]<dis1[b];}\nint cmp2(int a,int b){return dis2[a]<dis2[b];}\n\nsigned main()\n{\n\tn=read();m=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint s,t,c;\n\t\ts=read();t=read();c=read();\n\t\te[i].u=s;e[i].v=t;e[i].w=c;\n\t\tedge[s]+=Node{t,c,i};\n\t\tedge[t]+=Node{s,c,i};\n\t}\n\t//\u6b63\u53cd\u8dd1\u4e24\u904d dij\u3002\u9884\u5904\u7406\u51fa\u6765\u6240\u6709\u70b9\u5230 1 \u548c n \u7684\u6700\u77ed\u8def\u3002 \n\tdijkstra1();\n\tdijkstra2();\n\t//\u521d\u59cb\u5316 l \u548c r\u3002\u5e76\u6807\u8bb0\u6240\u6709\u5f53\u524d\u6700\u77ed\u8def\u4e0a\u7684\u70b9\u3002 \n\tmemset(l,0x3f3f3f,sizeof(l)); \n\tl[1]=1;\n\tint tot=0;\n\tfor(int now=1;now!=n;)\n\t{\n\t\tfor(Node nxt:edge[now])\n\t\t{\n\t\t\tif(dis2[nxt.v]+nxt.w==dis2[now])\n\t\t\t{\n\t\t\t\tnow=nxt.v;\n\t\t\t\tbook[nxt.id]++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tr[now]=++tot;\n\t\tl[now]=tot+1;\n\t}\n\t//\u6c42\u6bcf\u4e00\u4e2a l \u548c r\u3002 \n\tfor(int i=1;i<=n;i++)z[i]=i;\n\tsort(z+1,z+n+1,cmp1);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint now=z[i];\n\t\tfor(Node nxt:edge[now])\n\t\t{\n\t\t\tif(book[nxt.id])continue;\n\t\t\tif(dis1[nxt.v]==dis1[now]+nxt.w&&l[nxt.v]>l[now])l[nxt.v]=l[now];\n\t\t}\n\t}\n\tsort(z+1,z+n+1,cmp2);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint now=z[i];\n\t\tfor(Node nxt:edge[now])\n\t\t{\n\t\t\tif(book[nxt.id])continue;\n\t\t\tif(dis2[nxt.v]==dis2[now]+nxt.w&&r[nxt.v]<r[now])r[nxt.v]=r[now];\n\t\t}\n\t}\n\t//\u6c42\u51fa\u5bf9\u4e8e\u6bcf\u4e00\u6761\u975e\u539f\u6700\u77ed\u8def\u8fb9\uff0c\u54ea\u4e00\u6761\u6700\u77ed\u8def\u8fb9\u5220\u6389\u4e4b\u540e\u8fd9\u6761\u8fb9\u624d\u6709\u7528\u3002\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(book[i])continue;\n\t\tint u=e[i].u,v=e[i].v,w=e[i].w;\n\t\tif(l[u]<=r[v])\n\t\t{\n\t\t\tdp1[l[u]]+=dis1[u]+w+dis2[v];\n\t\t\tdp2[r[v]]+=dis1[u]+w+dis2[v];\n\t\t}\n\t\tif(l[v]<=r[u])\n\t\t{\n\t\t\tdp1[l[v]]+=dis1[v]+w+dis2[u];\n\t\t\tdp2[r[u]]+=dis1[v]+w+dis2[u];\n\t\t}\n\t } \n\t//\u6c42\u51fa\u5220\u6389\u6bcf\u4e00\u6761\u539f\u6700\u77ed\u8def\u8fb9\u540e\u5bf9\u5e94\u7684\u7b54\u6848\u3002\n\tint cnt=0;//\u65b9\u6848\u6570\uff1b \n\tfor(int i=1;i<=tot;i++)\n\t{\n\t\tfor(int tt:dp1[i])ss.insert(tt);\n\t\tif(*ss.begin()>ans){ans=*ss.begin();cnt=1;}\n\t\telse if(*ss.begin()==ans)cnt++;\n\t\tfor(int tt:dp2[i])ss.erase(ss.find(tt));\n\t } \n\tif(ans==dis1[n])cnt=m;\n\tcout<<ans<<\" \"<<cnt<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1659777907,
        "uid": 341245,
        "name": "xrk2006",
        "ccfLevel": 4,
        "title": "\u3010\u9898\u89e3\u3011P2685 [TJOI2012]\u6865\uff08\u6700\u77ed\u8def\uff0cdijkstra\uff0cmultiset\uff09"
    },
    {
        "content": "\u8fd9\u9898\u6298\u817e\u4e86\u6211\u597d\u4e45\u3002\n\n\u5148\u5efa\u6700\u77ed\u8def\u6811\uff082\u68f5\uff09\u3002\u7136\u540e\u679a\u4e3e\u4e0d\u5728\u6811\u4e0a\u7684\u8fb9\u3002\u8003\u8651\u4e00\u6761\u975e\u6811\u8fb9xy\u80fd\u5bf9\u7b54\u6848\u9020\u6210\u8d21\u732e\u7684\u5f62\u5f0f\u5fc5\u5b9a\u662f\uff0c1-a-x-y-b-n\uff0c\u5176\u4e2da\u548cb\u662f\u8d70\u51fa1-n\u8fd9\u6761\u6811\u4e0a\u4e3b\u94fe\u7684\u7b2c\u4e00\u4e2a\u70b9\uff0c\u4e5f\u5c31\u662f\u4ea4\u53c9\u53e3\u3002\n\n\u90a3\u4e48x-y\u8fd9\u4e24\u70b9\u4e4b\u95f4\u7684\u4e3b\u94fe\u90fd\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u66f4\u65b0\u7b54\u6848\u3002\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<algorithm>\n#include<cstring>\n#include<vector>\n#define pa pair<int ,int >\nusing namespace std;\ninline int read(){int x=0,f=1,ch=getchar(); while(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();} while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();} return x*f;}\ninline void write(int x){if (x<0) putchar('-'),x=-x; if (x>=10) write(x/10); putchar(x%10+'0');}\ninline void writeln(int x){write(x); puts(\"\");}\nconst int N=200005,M=800005;\nstruct edge{\n\tint link,next,val;\n}e[M];\nint n,m,tot,head[N];\ninline void add_edge(int u,int v,int w){\n\te[++tot]=(edge){v,head[u],w}; head[u]=tot;\n}\ninline void insert(int u,int v,int w){\n\tadd_edge(u,v,w); add_edge(v,u,w);\n}\ninline void init(){\n\tn=read(); m=read();\n\tfor (int i=1;i<=m;i++){\n\t\tint u=read(),v=read(),w=read();\n\t\tinsert(u,v,w);\n\t}\n}\npriority_queue<pa,vector<pa>,greater<pa > >heap;\nint dis1[N],dis2[N];\nbool vis[N];\ninline void dijkstra(int S,int *dis){\n\tmemset(dis,127/3,N*sizeof(int));\n\tmemset(vis,0,sizeof(vis));\n\tdis[S]=0; heap.push(pa(0,S));\n\twhile (!heap.empty()){\n\t\tint u=heap.top().second; heap.pop();\n\t\tif (vis[u]) continue;\n\t\tvis[u]=1;\n\t\tfor (int i=head[u];i;i=e[i].next){\n\t\t\tint v=e[i].link;\n\t\t\tif (dis[v]>dis[u]+e[i].val){\n\t\t\t\tdis[v]=dis[u]+e[i].val;\n\t\t\t\theap.push(make_pair(dis[v],v));\n\t\t\t}\n\t\t}\n\t}\n}\nint qu[N],q[N],cnt,id[N],lx[N],rx[N];\nbool mark[N];\ninline void bfs(int S,int *dis,int *x){\n\tint h=0,t=1;\n\tqu[t]=q[S]; x[q[S]]=S;\n\twhile (h<t){\n\t\tint u=qu[++h];\n\t\tfor (int i=head[u];i;i=e[i].next){\n\t\t\tint v=e[i].link;\n\t\t\tif (dis[v]==dis[u]+e[i].val&&!id[v]&&!x[v]){\n\t\t\t\tx[v]=S;\n\t\t\t\tqu[++t]=v;\n\t\t\t}\n\t\t}\n\t}\n}\nstruct node{\n\tint lazy;\n}a[N<<2];\nconst int inf=1e9;\nint ans[N];\nvoid build(int k,int l,int r){\n\ta[k].lazy=inf;\n\tif (l==r) return;\n\tint mid=(l+r)>>1;\n\tbuild(k<<1,l,mid); build(k<<1|1,mid+1,r);\n}\nvoid update(int k,int l,int r,int x,int y,int w){\n\tif (l==x&&r==y) {\n\t\ta[k].lazy=min(a[k].lazy,w);\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif (mid>=y) update(k<<1,l,mid,x,y,w);\n\t\telse if (mid<x) update(k<<1|1,mid+1,r,x,y,w);\n\t\t\telse update(k<<1,l,mid,x,mid,w),update(k<<1|1,mid+1,r,mid+1,y,w);\n}\nvoid push(int k,int l,int r){\n\tif (l==r){\n\t\tans[l]=a[k].lazy;\n\t\treturn;\n\t}\n\ta[k<<1].lazy=min(a[k<<1].lazy,a[k].lazy);\n\ta[k<<1|1].lazy=min(a[k<<1|1].lazy,a[k].lazy);\n\tint mid=(l+r)>>1;\n\tpush(k<<1,l,mid); push(k<<1|1,mid+1,r);\n}\ninline void solve(){\n\tdijkstra(1,dis1);\n\tdijkstra(n,dis2);\n\tfor (int u=1;u!=n;){\n\t\tmark[u]=1;\n\t\tq[++cnt]=u;\n\t\tid[u]=cnt;\n\t\tfor (int i=head[u];i;i=e[i].next){\n\t\t\tint v=e[i].link;\n\t\t\tif (dis2[u]==dis2[v]+e[i].val){\n\t\t\t\tu=v; mark[i]=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tq[++cnt]=n; id[n]=cnt;\n\tfor (int i=1;i<cnt;i++){\n\t\tbfs(i,dis1,lx);\n\t}\n\tfor (int i=cnt;i;i--){\n\t\tbfs(i,dis2,rx);\n\t}\n\tbuild(1,1,cnt);\n\tfor (int u=1;u<=n;u++){\n\t\tfor (int i=head[u];i;i=e[i].next){\n\t\t\tint v=e[i].link;\n\t\t\tif (mark[i]) continue;\n\t\t\tif (lx[u]<rx[v]&&lx[u]&&rx[v]) update(1,1,cnt,lx[u],rx[v]-1,dis1[u]+e[i].val+dis2[v]);\n\t\t}\n\t}\n\tpush(1,1,cnt);\n\tint ton=0,d=0;\n\tfor (int i=1;i<cnt;i++){\n\t\tif (ans[i]>d) d=ans[i],ton=1;\n\t\t\telse if (ans[i]==d) ton++;\n\t} \n\tif (d==dis1[n]) ton+=m-cnt+1;\n\twrite(d); putchar(' '); writeln(ton);\n}\nsigned main(){\n\tinit();\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1530927598,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2685 \u3010[TJOI2012]\u6865\u3011"
    },
    {
        "content": "[P2685](https://www.luogu.com.cn/problem/P2685)\n\n\u7b80\u5316\u7248\uff1a[P1186](https://www.luogu.com.cn/problem/P1186)\n\n### \u601d\u8def\n\n\u9898\u610f\u5373\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u56fe\u4efb\u610f\u65ad\u4e00\u6761\u8fb9\u540e\u5f62\u6210\u7684\u6700\u77ed\u8def\u6700\u957f\u7684\u957f\u5ea6\u548c\u65b9\u6848\u6570\u3002\n\n\u663e\u7136\uff0c\u65ad\u5728\u539f\u56fe\u6700\u77ed\u8def\u4e0a\u6700\u4f18\u3002\n\n\u5bf9\u4e8e $30$ \u7684\u90e8\u5206\u5206\uff0c\u4e5f\u662f\u7b80\u5316\u7248\u6570\u636e\u8303\u56f4\uff0c$n\\leq 1000$\uff0c\u5e38\u89c4\u7684\u601d\u8def\u662f\u679a\u4e3e\u65ad\u5f00\u7684\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\u5e76\u91cd\u8dd1\u6700\u77ed\u8def\u3002\u4f46\u5728 $m\\leq \\frac{n\\times(n-1)}{2}$ \u7684\u7a20\u5bc6\u56fe\u4e0a\uff0cDijkstra \u7684\u590d\u6742\u5ea6\u4e3a $O(n^2+m)$ \u6216 $O(n+m\\log m)$\uff0c\u6700\u77ed\u8def\u53ef\u4ee5\u957f\u8fbe $n-1$ \u6761\u8fb9\uff0c\u603b\u590d\u6742\u5ea6 $O(n^3)$\uff0c\u4e0d\u592a\u53ef\u4ee5\u8fc7\u3002\u8fde\u90e8\u5206\u5206\u90fd\u62ff\u4e0d\u5230\u3002\n\n\u9700\u8981 $O(n\\log n)$ \u7684\u7b97\u6cd5\u89e3\u51b3\u3002\n\n\u601d\u8003\u5f97\u77e5\uff0c\u65b0\u6700\u77ed\u8def\u4e00\u5b9a\u662f\u5728\u539f\u6700\u77ed\u8def\u7684 $u$ \u70b9\u79bb\u5f00\u6700\u77ed\u8def\uff0c\u518d\u5728 $v$ \u70b9\u56de\u5230\u539f\u6700\u77ed\u8def\u3002\n\n\u8bbe $lst_u$ \u8868\u793a\u539f\u6700\u77ed\u8def\u548c\u4ece $1$ \u5230 $u$ \u7684\u6700\u77ed\u8def\u7684\u6700\u540e\u4e00\u4e2a\u4ea4\u70b9\u3002\u8bbe $fir_u$ \u8868\u793a\u539f\u6700\u77ed\u8def\u548c\u4ece $u$ \u5230 $n$ \u7684\u6700\u77ed\u8def\u7684\u7b2c\u4e00\u4e2a\u4ea4\u70b9\u3002\n\n\u8bbe $ans_i$ \u8868\u793a\u7b2c $i$ \u6761\u539f\u6700\u77ed\u8def\u8fb9\u88ab\u65ad\u540e\u65b0\u6700\u77ed\u8def\u7684\u957f\u5ea6\u3002\u6700\u540e\u7b54\u6848 $res$ \u7b49\u4e8e $\\max^{tp-1}_{i=1} ans_i$\u3002\n\n\u5bf9\u4e8e\u4e00\u6761\u4ece $u$ \u5230 $v$ \u7684\u8fb9 $i$\uff0c\u5982\u679c\u8fd9\u6761\u8fb9\u662f\u65b0\u8def\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u6761\u65b0\u8def\u957f\u5ea6 $val_i$ \u7b49\u4e8e $dis1_u+w_i+disn_v$\uff0c\u65ad\u8fb9\u5728 $lst_u$ \u5230 $fir_v$ \u4e4b\u95f4\u3002\u5bf9\u4e8e\u539f\u6700\u77ed\u8def\u8fb9 $j$ \u6ee1\u8db3 $lst_u\\leq j< fir_v$\uff0c$ans_j$ \u53ef\u4ee5\u88ab $val_i$ \u66f4\u65b0\uff0c$ans_j$ \u53d6\u6700\u5c0f\u503c\u3002\n\n\u533a\u95f4\u66f4\u65b0\uff0c\u7ef4\u62a4\u6700\u5c0f\u503c\uff0c\u8054\u60f3\u5230\u7ebf\u6bb5\u6811\u3002\u5bf9 $tp-1$ \u6761\u8fb9\u5efa\u6811\u3002\u6700\u540e $ans_i$ \u7684\u503c\u5373 $l=r=i$ \u65f6\u53f6\u5b50\u8282\u70b9\u7684\u503c\u3002\u56e0\u6b64\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u53ea\u9700\u8981\u5904\u7406\u4e0b\u4f20\uff0c\u4e0d\u9700\u8981\u4e0a\u4f20\u3002\n\n### code\n\n\u5148\u5bf9 $1$ \u548c $n$ \u4e24\u70b9\u8dd1\u6700\u77ed\u8def\uff0c$dis1_i$ \u548c $disn_i$ \u5206\u522b\u8868\u793a $1$ \u548c $n$ \u5230 $i$ \u7684\u8ddd\u79bb\u3002\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n```cpp\nstruct Dis{\n\tint id,dis;\n\tbool operator <(const Dis&tmp)const{return dis>tmp.dis;};\n};\nint dis1[maxn],disn[maxn];\nbool bk[maxn];\npriority_queue<Dis> q;\nvoid dij1(){\n\tmemset(dis1,0x3f,sizeof(dis1));\n\tdis1[1]=0;q.push({1,dis1[1]});\n\twhile(!q.empty()){\n\t\tu=q.top().id;q.pop();\n\t\tif(bk[u])continue;\n\t\tbk[u]=true;\n\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\tv=e[i].to;\n\t\t\tif(dis1[v]>dis1[u]+e[i].w){\n\t\t\t\tdis1[v]=dis1[u]+e[i].w;\n\t\t\t\tq.push({v,dis1[v]});\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n\u518d\u786e\u5b9a\u539f\u6765\u7684\u6700\u77ed\u8def\u3002\u7528\u9012\u63a8\u7684\u65b9\u5f0f\uff0c\u5982\u679c $disn_v+w(u,v)=disn_u$\uff0c\u8bf4\u660e $v$ \u5728 $u$ \u5230 $n$ \u3002\u6700\u77ed\u8def\u4e0a\u590d\u6742\u5ea6 $O(n+m)$\u3002\n\n\u8bbe\u539f\u6700\u77ed\u8def\u4e00\u5171\u6709 $tp$ \u4e2a\u70b9\uff0c\u5219\u6709 $tp-1$ \u6761\u8fb9\u3002$d_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u6700\u77ed\u8def\u8282\u70b9\uff0c$id_u$ \u8868\u793a\u7b2c $u$ \u4e2a\u8282\u70b9\u5982\u679c\u5728\u6700\u77ed\u8def\u4e0a\uff0c\u5b83\u662f\u7b2c\u51e0\u4e2a\u8282\u70b9\u3002$vis_i$ \u8868\u793a\u7b2c $i$ \u6761\u8fb9\u662f\u4e0d\u662f\u6700\u77ed\u8def\u8fb9\u3002\n\n```cpp\n\tu=1;\n\twhile(u<n){\n\t\td[++tp]=u;id[u]=tp;\n\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\tv=e[i].to;\n\t\t\tif(disn[v]+e[i].w==disn[u]){\n\t\t\t\tvis[i]=1;u=v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\td[++tp]=u;id[u]=tp;\n```\n\n\u63a5\u4e0b\u6765\u5904\u7406 $lst$ \u548c $fir$ \u6570\u7ec4\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u6700\u77ed\u8def\u4e0a\u7684\u70b9\uff0c\u6cbf\u7740\u975e\u539f\u6700\u77ed\u8def\u3001\u6ca1\u6709\u5904\u7406\u8fc7\u7684\u70b9\u5e76\u4fdd\u8bc1 $u$ \u5728 $1$ \u5230 $v$ \u7684\u6700\u77ed\u8def\u4e0a\u641c\u7d22\uff0c\u9047\u5230\u7684\u70b9\u66f4\u65b0 $lst_v$\u3002$fir_v$ \u5219\u53cd\u8fc7\u6765\u3002\u6bcf\u4e2a\u70b9\u4e00\u5171\u53ea\u7ecf\u8fc7\u4e00\u6b21\u3002\u590d\u6742\u5ea6 $O(n)$\u3002\n\n```cpp\nint lst[maxn],fir[maxn];\nqueue<int> q1;\nvoid bfs1(int x){\n\tq1.push(d[x]);lst[d[x]]=x;\n\twhile(!q1.empty()){\n\t\tu=q1.front();q1.pop();\n\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\tv=e[i].to;\n\t\t\tif(!id[v]&&!lst[v]&&dis1[u]+e[i].w==dis1[v]){\n\t\t\t\tlst[v]=x;\n\t\t\t\tq1.push(v);\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n\u5904\u7406\u534a\u4e2a\u7ebf\u6bb5\u6811\u529f\u80fd\u7684\u6570\u636e\u7ed3\u6784\u3002\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n```cpp\nint tree[maxn<<2],ans[maxn];\nvoid build(int nd,int l,int r){\n\ttree[nd]=inf;\n\tif(l==r)return ;\n\tint mid=l+r>>1,ls=nd<<1,rs=nd<<1|1;\n\tbuild(ls,l,mid);build(rs,mid+1,r);\n}\nvoid updata(int nd,int l,int r,int ql,int qr,int w){\n\tif(l>=ql&&r<=qr){\n\t\ttree[nd]=min(tree[nd],w);\n\t\treturn ;\n\t}\n\tint mid=l+r>>1,ls=nd<<1,rs=nd<<1|1;\n\tif(ql<=mid)updata(ls,l,mid,ql,qr,w);\n\tif(qr>mid)updata(rs,mid+1,r,ql,qr,w);\n}\nvoid down(int nd,int l,int r){\n\tif(l==r){\n\t\tans[l]=tree[nd];\n\t\treturn;\n\t}\n\tint mid=l+r>>1,ls=nd<<1,rs=nd<<1|1;\n\ttree[ls]=min(tree[nd],tree[ls]);\n\ttree[rs]=min(tree[nd],tree[rs]);\n\tdown(ls,l,mid);down(rs,mid+1,r);\n}\n```\n\n\u4e3b\u51fd\u6570\u5185\uff0c\u679a\u4e3e\u6bcf\u6761\u975e\u539f\u6700\u77ed\u8def\u8fb9\u5e76\u66f4\u65b0\u3002\u590d\u6742\u5ea6 $O(m)$\u3002\n\n```cpp\n\ttp--;build(1,1,tp);\n\tfor(u=1;u<=n;u++){\n\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\tv=e[i].to;\n\t\t\tif(!vis[i]&&lst[u]<fir[v]){\n\t\t\t\tupdata(1,1,tp,lst[u],fir[v]-1,dis1[u]+e[i].w+disn[v]);\n\t\t\t}\n\t\t}\n\t}\n\tdown(1,1,tp);\n```\n\n\u5982\u679c\u6700\u540e\u7b54\u6848\u8fd8\u662f\u539f\u6700\u77ed\u8def\u957f\u5ea6\uff0c\u90a3\u65ad\u4efb\u4f55\u4e00\u6761\u8fb9\u90fd\u53ef\u4ee5\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int maxn=100010;\nconst int inf=1e9;\ninline int read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+(ch-48);ch=getchar();}\n\treturn x*f;\n}\n\nint n,m;\nint head[maxn],tot;\nstruct nd{\n\tint nxt,to,w;\n}e[maxn<<2];\nvoid add(int u,int v,int w){\n\te[++tot].nxt=head[u];e[tot].to=v;e[tot].w=w;\n\thead[u]=tot;\n}\nint u,v,w;\n\nstruct Dis{\n\tint id,dis;\n\tbool operator <(const Dis&tmp)const{return dis>tmp.dis;};\n};\nint dis1[maxn],disn[maxn];\nbool bk[maxn];\npriority_queue<Dis> q;\nvoid dij1(){\n\tmemset(dis1,0x3f,sizeof(dis1));\n\tdis1[1]=0;q.push({1,dis1[1]});\n\twhile(!q.empty()){\n\t\tu=q.top().id;q.pop();\n\t\tif(bk[u])continue;\n\t\tbk[u]=true;\n\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\tv=e[i].to;\n\t\t\tif(dis1[v]>dis1[u]+e[i].w){\n\t\t\t\tdis1[v]=dis1[u]+e[i].w;\n\t\t\t\tq.push({v,dis1[v]});\n\t\t\t}\n\t\t}\n\t}\n}\nvoid dijn(){\n\tmemset(disn,0x3f,sizeof(disn));\n\tmemset(bk,false,sizeof(bk));\n\tdisn[n]=0;q.push({n,disn[n]});\n\twhile(!q.empty()){\n\t\tu=q.top().id;q.pop();\n\t\tif(bk[u])continue;\n\t\tbk[u]=true;\n\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\tv=e[i].to;\n\t\t\tif(disn[v]>disn[u]+e[i].w){\n\t\t\t\tdisn[v]=disn[u]+e[i].w;\n\t\t\t\tq.push({v,disn[v]});\n\t\t\t}\n\t\t}\n\t}\n}\n\nint d[maxn],tp,id[maxn];\nint lst[maxn],fir[maxn];\nbool vis[maxn<<2];\nqueue<int> q1;\nvoid bfs1(int x){\n\tq1.push(d[x]);lst[d[x]]=x;\n\twhile(!q1.empty()){\n\t\tu=q1.front();q1.pop();\n\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\tv=e[i].to;\n\t\t\tif(!id[v]&&!lst[v]&&dis1[u]+e[i].w==dis1[v]){\n\t\t\t\tlst[v]=x;\n\t\t\t\tq1.push(v);\n\t\t\t}\n\t\t}\n\t}\n}\nvoid bfsn(int x){\n\tq1.push(d[x]);fir[d[x]]=x;\n\twhile(!q1.empty()){\n\t\tu=q1.front();q1.pop();\n\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\tv=e[i].to;\n\t\t\tif(!id[v]&&!fir[v]&&disn[u]+e[i].w==disn[v]){\n\t\t\t\tfir[v]=x;\n\t\t\t\tq1.push(v);\n\t\t\t}\n\t\t}\n\t}\n}\n\nint tree[maxn<<2],ans[maxn];\nvoid build(int nd,int l,int r){\n\ttree[nd]=inf;\n\tif(l==r)return ;\n\tint mid=l+r>>1,ls=nd<<1,rs=nd<<1|1;\n\tbuild(ls,l,mid);build(rs,mid+1,r);\n}\nvoid updata(int nd,int l,int r,int ql,int qr,int w){\n\tif(l>=ql&&r<=qr){\n\t\ttree[nd]=min(tree[nd],w);\n\t\treturn ;\n\t}\n\tint mid=l+r>>1,ls=nd<<1,rs=nd<<1|1;\n\tif(ql<=mid)updata(ls,l,mid,ql,qr,w);\n\tif(qr>mid)updata(rs,mid+1,r,ql,qr,w);\n}\nvoid down(int nd,int l,int r){\n\tif(l==r){\n\t\tans[l]=tree[nd];\n\t\treturn;\n\t}\n\tint mid=l+r>>1,ls=nd<<1,rs=nd<<1|1;\n\ttree[ls]=min(tree[nd],tree[ls]);\n\ttree[rs]=min(tree[nd],tree[rs]);\n\tdown(ls,l,mid);down(rs,mid+1,r);\n}\nint res,cnt;\n\nsigned main(){\n\tn=read();m=read();\n\tfor(int i=1;i<=m;i++){\n\t\tu=read();v=read();w=read();\n\t\tadd(u,v,w);add(v,u,w);\n\t}\n\tdij1();dijn();u=1;\n\twhile(u<n){\n\t\td[++tp]=u;id[u]=tp;\n\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\tv=e[i].to;\n\t\t\tif(disn[v]+e[i].w==disn[u]){\n\t\t\t\tvis[i]=1;u=v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\td[++tp]=u;id[u]=tp;\n\tfor(int i=1;i<=tp;i++)bfs1(i);\n\tfor(int i=tp;i>=1;i--)bfsn(i);\n\ttp--;build(1,1,tp);\n\tfor(u=1;u<=n;u++){\n\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\tv=e[i].to;\n\t\t\tif(!vis[i]&&lst[u]<fir[v]){\n\t\t\t\tupdata(1,1,tp,lst[u],fir[v]-1,dis1[u]+e[i].w+disn[v]);\n\t\t\t}\n\t\t}\n\t}\n\tdown(1,1,tp);\n\tfor(int i=1;i<=tp;i++){\n\t\tif(res<ans[i])res=ans[i],cnt=1;\n\t\telse if(res==ans[i])++cnt;\n\t}\n\tif(res==dis1[n])cnt=m;\n\tprintf(\"%lld %lld\\n\",res,cnt);\n}\n```",
        "postTime": 1683884294,
        "uid": 754153,
        "name": "gdf_yhm",
        "ccfLevel": 5,
        "title": "P2685 \u9898\u89e3"
    }
]