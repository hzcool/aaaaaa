[
    {
        "content": "```cpp\n/*\n\u6b64\u9898\u6570\u636e\u8303\u56f4\u662fn<=100,\u672c\u6765\u6b63\u89e3\u662fbfs\u6216\u8005\u6700\u77ed\u8def\u5f84spfa\n\u6211\u5148\u60f3\u7528\u66b4\u641c\u8bd5\u4e00\u4e0b\u770b\u80fd\u62ff\u591a\u5c11\u5206\n\u6ca1\u60f3\u5230\u5c45\u7136\u80fdAC\uff0c\u4f46\u662f\u6211\u540e\u6765\u8c03\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u6709\u70b9\u5de7\u7684\u4e8b\u60c5\n\u5982\u679c\u4f60\u628a\u65b9\u5411\u6570\u7ec4\u7684\u987a\u5e8f\u6539\u4e00\u4e0b\uff0c\u4e5f\u8bb8\u5c31\u53ea\u80fd\u62ff90\uff0c\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u6211\u8fd8\u662f\u4fa5\u5e78\u8fc7\u4e86\n\u601d\u8def\u8fd8\u662f\u5f88\u597d\u7406\u89e3\u3002\n\u4e0b\u9762\u4e0a\u4ee3\u7801 \uff1a \n*/ \n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nint n,x0,y0,xn,yn,ans=0x7fffffff/2,bj;char l;\nint a[105][105];\nint dx[4]={1,0,-1,0};\nint dy[4]={0,-1,0,1};\n//\u53f3 \u4e0b \u5de6  \u4e0a \nvoid Read()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t    for(int j=1;j<=n;j++)\n\t    {\n\t    \tcin>>l;//\u8bfb\u5165\u5b57\u7b26\u7684\u65f6\u5019\u56e0\u4e3a\u9898\u76ee\u8bf4\u4e86\u6709\u7a7a\u683c\uff0c\u6240\u4ee5\u7528cin\u800c\u6ca1\u7528scanf \n\t    \tif(l=='A')x0=i,y0=j,a[i][j]=-1;//\u6807\u8bb0\u4e0d\u80fd\u91cd\u590d\u8d70 \n\t    \tif(l=='B')xn=i,yn=j,a[i][j]=0;\n\t    \tif(l=='x')a[i][j]=-1;\n    \t}\n} \nvoid dfs(int x,int y,int t,int k)\n//x\u5750\u6807+y\u5750\u6807+t\u4e3a\u4e0a\u6b21\u7684\u65b9\u5411+k\u4e3a\u5f53\u524d\u8f6c\u89d2\u6b21\u6570 \n{\n\tif(k>=ans)return ;\n\t//\u526a\u679d\uff01\uff01\uff01 \uff1a\u4e0d\u7ba1\u4f60\u641c\u5230\u6ca1\u6709\uff0c\u56e0\u4e3a\u672c\u9898\u662f\u6c42\u7684\u6700\u5c11\u6b21\u6570\uff0c\u6240\u4ee5\u5982\u679c\u53d1\u73b0\u5f53\u524d\u7684k\u90fd\u5927\u4e8eans\uff0c\u90a3\u4e48\u76f4\u63a5return \n\tif(x==xn&&y==yn){ans=min(ans,k);bj=1;return ;}//\u53d6ans\u6700\u5c0f\u5e76\u6807\u8bb0\u627e\u5230 \n\tfor(int i=0;i<4;i++)\n\t{\n\t\tint nx=dx[i]+x;int ny=dy[i]+y;//\u56db\u4e2a\u65b9\u5411\u7684\u8d70\u540e\u70b9\u7684\u65b0\u5750\u6807 \n\t\tif(nx<=0||nx>n||ny<=0||ny>n)continue;//\u5224\u754c \n\t\tif(!a[nx][ny])//\u4e0d\u8d70\u56de\u8def \n\t\t{\n\t\t\ta[nx][ny]=-1;//\u6807\u8bb0\u4e0d\u80fd\u8d70 \n\t\t    int f=0;\n\t\t\tif(i!=t)f=1;if(t==-1)f=0;//f\u5224\u65ad\u65b9\u5411\uff0c\u5982\u679c\u5f53\u524d\u65b9\u5411i\u4e0e\u4e0a\u4e00\u6b21\u7684\u65b9\u5411t\u4e0d\u540c\uff0c\u8bf4\u660e\u8981\u8f6c\u5411\uff0c\u8bb0f=1 \n\t    \tdfs(nx,ny,i,k+f);\n\t    \t//\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5750\u6807+\u65b9\u5411+\u6b21\u6570\u7d2f\u52a0 \n\t    \ta[nx][ny]=0;//\u56de\u6eaf \n\t\t}\n\t}\n}\nint main()\n{\n    Read();\n    dfs(x0,y0,-1,0);//\u4e0b\u9762\u662f\u66b4\u529bdfs \n    if(bj)printf(\"%d\",ans);\n    else printf(\"-1\");\n    return 0;\n} \n```",
        "postTime": 1531457756,
        "uid": 90520,
        "name": "Lidy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1649 \u3010[USACO07OCT]\u969c\u788d\u8def\u7ebfObstacle Course\u3011"
    },
    {
        "content": "\u9898\u89e3by\uff1aredbag\n\n\u5176\u5b9e\u5c31\u662f\u66b4\u529b\uff0c\u4e00\u4e2a\u683c\u5b50\u4e00\u4e2a\u683c\u5b50\u7684\u641c\uff0c\u6bcf\u6b21\u53ea\u6269\u5c55\u4e00\u4e2a\uff08\u56e0\u4e3a\u4e0d\u4e00\u5b9a\u9700\u8981\u8d70\u5230\u5e95\uff09\n\n\u7136\u540e\u6269\u5c55\u4e4b\u540e\u5165\u961f\uff0c\n\n\u6ce8\u610f\uff1a\u6bcf\u4e2a\u70b9\u4e0d\u6b62\u5165\u961f\u4e00\u6b21\uff0c\u56e0\u4e3a\u53ef\u80fd\u4e4b\u540e\u627e\u5230\u4e86\u66f4\u4f18\u7684\u65b9\u6848\uff08\u6bd5\u7adf\u662f\u62d0\u5f2f\u6b21\u6570\u554a\uff09\n\n\u7136\u540e\u5177\u4f53\u89c1\u4ee3\u7801\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<queue>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint read(){\n    char s;\n    int k=0,base=1;\n    while((s=getchar())!='-'&&s!=EOF&&!(s>='0'&&s<='9'));\n    if(s==EOF)exit(0);\n    if(s=='-')base=-1,s=getchar();\n    while(s>='0'&&s<='9')\n    {\n        k=(k<<1)+(k<<3)+(s-'0');\n        s=getchar();\n    }\n    return k*base;\n}\nvoid write(int x)\n{\n    if(x<0){putchar('-');write(-x);}\n    else{if(x/10)write(x/10);putchar(x%10+'0');}\n}\nint n;\nint sx,sy,tx,ty;\nint a[110][110];\nint d[110][110];\nstruct node\n{\n    int x,y;\n    int d;\n    int f;\n};\nint ans;\nint fx[4][2]={{-1,0},{1,0},{0,-1},{0,1}};\nqueue<node> q;\nint main()\n{\n    n=read();\n    char ch;\n    for (int i=1;i<=n;i++)\n    {\n        for (int j=1;j<=n;j++)\n        {//\u53ea\u67091\u7684\u5730\u65b9\u53ef\u4ee5\u8d70\n            ch=getchar();\n            while (ch!='A'&&ch!='B'&&ch!='.'&&ch!='x') ch=getchar();\n            //\u795e\u5947\u8bfb\u5165\uff0c\u53ea\u8981\u4e0d\u662f\u81ea\u5df1\u8981\u7684\u5c31\u4e22\u6389 \n            if (ch=='A') a[i][j]=1,sx=i,sy=j; else\n            if (ch=='B') a[i][j]=1,tx=i,ty=j; else\n            if (ch=='.') a[i][j]=1;//\u6807\u8bb0\uff0cs\uff1a\u8d77\u70b9\uff0ct\uff1a\u7ec8\u70b9 \n        }\n    }\n    node aa;//\u8d77\u70b9\u5165\u961f \n    aa.x=sx;aa.y=sy;aa.d=0;aa.f=-1;\n    memset(d,1,sizeof(d));\n    a[aa.x][aa.y]=233;//\u548c'x'\u5206\u5f00\uff0c\u56e0\u4e3a\u4e00\u4e2a\u70b9\u53ef\u80fd\u53cd\u590d\u5165\u961f\n    //\uff08\u7b2c\u4e00\u6b21\u627e\u5230\u7684\u4e0d\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\uff0c\u4eb2\u6d4b30\u5206\uff09 \n    d[aa.x][aa.y]=0;//\u6253\u6807\u8bb0 \n    q.push(aa);\n    ans=23333333;\n    while (!q.empty())\n    {\n        node u;\n        u=q.front();\n        q.pop();\n        if (u.d>ans) continue;//\u641c\u7d22\u526a\u679d\uff0c\u5982\u679c\u8f6c\u5f2f\u6b21\u6570\u5927\u4e8eans\u5c31\u4e0d\u7528\u641c\u4e86 \n        for (int i=0;i<=3;i++)\n        {//\u56db\u4e2a\u65b9\u5411\u4e00\u4e2a\u4e00\u4e2a\u7684\u53bb\u626b \n            node v;\n            v.x=u.x+fx[i][0];\n            v.y=u.y+fx[i][1];\n            v.f=i;\n            if (u.f==-1||u.f==v.f) v.d=u.d; else v.d=u.d+1;\n//v.f\u5b58\u7684\u662f\u8fd9\u4e00\u6b65\u8d70\u7684\u65b9\u5411\uff0c\u5982\u679c\u4e0a\u4e00\u6b65\u6ca1\u8d70\u6216\u8005\u548c\u8fd9\u4e00\u6b65\u65b9\u5411\u4e00\u6837\uff0c\u90a3\u4e48\u62d0\u5f2f\u6b21\u6570\u4e0d\u53d8 \n            if (v.x<1||v.y<0||v.x>n||v.y>n) continue;//\u8d8a\u754c \n            if ((a[v.x][v.y]!=1&&v.d>d[v.x][v.y])||a[v.x][v.y]==0) continue;\n            //\u5982\u679c\u626b\u8fc7\u5e76\u4e14\u8fd9\u6b21\u5e76\u4e0d\u662f\u66f4\u4f18\uff0c\u6216\u8005\u662fx\uff08\u8d70\u4e0d\u4e86\uff09\uff0c\u5c31\u4e0d\u641c\u4e86 \n            a[v.x][v.y]=233;//\u6807\u8bb0 \n            d[v.x][v.y]=v.d;//\u8bb0\u5f55 \n            if (v.x==tx&&v.y==ty)//\u5230\u7ec8\u70b9\u4e86\uff0c\u66f4\u65b0ans\uff0c\u4e0d\u7528\u5165\u961f \n            {\n                ans=min(ans,v.d);\n                continue;\n            }\n            q.push(v);\n        }\n    }\n    if (ans!=23333333) printf(\"%d\\n\",ans); else//\u8f93\u51fa \n    printf(\"-1\");\n    return 0;\n}\n\n```",
        "postTime": 1500650901,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1649 \u3010[USACO07OCT]\u969c\u788d\u8def\u7ebfObstacle Course\u3011"
    },
    {
        "content": "#\u76ee\u524d\u6700\u5feb\u7684BFS\u7b97\u6cd5\n\n\n\u5148\u6765\u8bf4\u4e00\u4e0b\u601d\u8def\u5427\uff0c\u9119\u4eba\u4e0d\u624d\uff0c\u8868\u8fbe\u80fd\u529b\u6709\u5f88\u5927\u6b20\u7f3a\uff0c\u5982\u679c\u7406\u89e3\u6709\u8bef\uff0c\u90a3\u5b8c\u5168\u662f\u6211\u7684\u9519\u3002\n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u4e00\u4e2a\u7279\u6b8a\u7684BFS\u6765\u6c42\u89e3\u3002**\u6bcf\u6b21\u628a\u961f\u9996\u5143\u7d20\u56db\u4e2a\u65b9\u5411\u4e0a\u7684\u70b9\u6269\u5c55\u5230\u961f\u5c3e\uff0c\u7528\u6876\u6765\u8bb0\u5f55\u8f6c\u5f2f\u6b21\u6570\u3002**\n\n\n##1.\u521d\u59cb\u72b6\u6001\n\nA\uff08\u8d77\u70b9\uff09\u7684\u8f6c\u5f2f\u6b21\u6570\u4e3a-1\u3002\n\n##2.\u4ea7\u751f\u7ed3\u70b9\u7684\u89c4\u5219\n\n\u73b0\u5728\uff0c\u8d77\u70b9\u4f4d\u4e8e\u961f\u9996\u3002\n\n\u4ece\u961f\u9996\u7684\u70b9\u5411\u56db\u5468\u9010\u201c\u5c42\u201d\u6269\u5c55\uff0c\u6bcf\u4e00\u201c\u5c42\u201d\u6269\u5c55\u5230\u7684\u65b0\u70b9\u5165\u961f\u5217\uff0c\u8fd9\u4e9b\u65b0\u70b9\u663e\u7136\u4e0d\u9700\u8981\u8f6c\u5f2f\u5c31\u53ef\u4ee5\u8fbe\u5230\uff08\u8d77\u70b9\u4efb\u610f\u65b9\u5411\uff09\uff0c\u6240\u4ee5\u4ed6\u4eec\u7684\u8f6c\u5f2f\u6b21\u6570\u8bb0\u5f55\u4e3a0 **\uff08\u4e5f\u5c31\u662f\u8d77\u70b9+1\uff0c\u4f60\u7684\u7591\u95ee\u9a6c\u4e0a\u5c31\u4f1a\u5f97\u5230\u89e3\u7b54\uff09**\n\n ![](https://cdn.luogu.com.cn/upload/pic/5320.png) \n\n\u8fd9\u5c31\u662f\u4ea7\u751f\u65b0\u7ed3\u70b9\u7684\u7b56\u7565\u3002\n\n##3.\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u8f6c\u5f2f\u6b21\u6570\n\n\u6269\u5c55\u5230\u7684\u65b0\u70b9\u7684\u8f6c\u5f2f\u6b21\u6570=\u961f\u9996\u70b9\u7684\u8f6c\u5f2f\u6b21\u6570+1\u3002\uff08\u7531\u4e8eBFS\u7684\u7279\u70b9\uff0c\u65b0\u70b9\u672a\u88ab\u8bbf\u95ee\u8fc7\u624d\u53ef\u4ee5\u88ab\u52a0\u5165\u961f\u5c3e\uff09\n\n**\u4e0b\u9762\u662f\u8bc1\u660e\u3002**\n\n\u5982\u679c\u6269\u5c55\u5230\u7684\u65b0\u70b9\u662f\u4e0d\u8f6c90\u00b0\uff08\u76f4\u8d70\uff09\u5c31\u53ef\u4ee5\u5230\u7684\uff0c\u90a3\u8be5\u70b9**\u4e00\u5b9a**\u88ab\u6269\u5c55\u4e86\u961f\u9996\u70b9\u7684\u70b9\uff08\u961f\u9996\u70b9\u7684\u7236\u7ed3\u70b9\uff0c\u4e0d\u77e5\u9053\u8fd9\u4e48\u8bf4\u5bf9\u4e0d\u5bf9\uff09\u8bbf\u95ee\u8fc7\uff0c\u6b64\u65f6\u8be5\u70b9\u4e0d\u4f1a\u88ab\u5f53\u4f5c\u65b0\u70b9\u5904\u7406\u3002\u540c\u7406\uff0c\u8f6c\u5f2f180\u00b0\u7684\u70b9\u4e5f**\u4e00\u5b9a**\u88ab\u6269\u5c55\u4e86\u961f\u9996\u70b9\u7684\u70b9\u8bbf\u95ee\u8fc7\u3002\n\n\u6240\u4ee5\uff0c\u6269\u5c55\u5230\u7684\u65b0\u70b9**\u4e00\u5b9a**\u662f\u8f6c\u5f2f90\u00b0\uff08\u5de6\u6216\u53f3\uff09\u624d\u80fd\u8d70\u5230\u7684\u3002\n\n\u6b64\u65f6\uff0c\u5230\u65b0\u70b9\u7684\u8f6c\u5f2f\u6b21\u6570=\u961f\u9996\u70b9\u7684\u8f6c\u5f2f\u6b21\u6570+1\u3002\n\n\u8bc1\u660e\u5b8c\u6bd5\u3002\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<queue>\n#include<map>\nusing namespace std;\n\nint n;//\u5730\u56fe\u5927\u5c0f \nint timex[200][200]={0};//\u8f6c\u5f2f\u6b21\u6570\u8bb0\u5f55 \nint cachex,cachey,sx,sy,ex,ey;//\u8d77\u70b9\uff0c\u7ec8\u70b9\u5750\u6807\u548c\u961f\u9996\u5750\u6807\u7f13\u5b58 \nint wayx[4]={-1,0,1,0},wayy[4]={0,1,0,-1};//\u65b9\u5411\u8868 \nqueue<int>quex,quey;\nchar mapx[200][200]={0};//\u5730\u56fe \nbool teller[4]={true};//\u6269\u5c55\u5c42\u6570\u5224\u65ad \n\nvoid showTimex()//\u8f93\u51fa\u5230\u5730\u56fe\u5404\u70b9\u7684\u8f6c\u5f2f\u6b21\u6570 \n{\n    cout<<endl<<\"Showing Timex Mitrix\"<<endl<<endl;\n    for (int i=0;i<n;i++)\n    {\n        for (int j=0;j<n;j++) printf(\"%3d\",timex[i][j]);\n        printf(\"\\n\");\n    }\n    printf(\"\\n\");\n    return;\n}\n\nint main()\n{\n    memset(timex,-1,sizeof(timex));\n    scanf(\"%d\",&n);\n    getchar();//\u5438\u6536\u56de\u8f66 \n    for (int i=0;i<n;i++) for (int j=0;j<n;j++) \n    {\n        cin>>mapx[i][j];\n        if (mapx[i][j]=='A'){sx=i;sy=j;}//\u8bb0\u5f55\u8d77\u70b9 \n        if (mapx[i][j]=='B'){ex=i;ey=j;mapx[i][j]='.';}//\u8bb0\u5f55\u7ec8\u70b9\u5e76\u4e14\u8ba9\u7ec8\u70b9\u53ef\u4ee5\u5165\u961f \n    }\n    //cout<<sx<<\" \"<<sy<<\" \"<<ex<<\" \"<<ey<<\" \"<<endl; /*\u53bb\u6389\u6ce8\u91ca\u53ef\u4ee5\u770b\u8d77\u70b9\u7ec8\u70b9\u7684\u4f4d\u7f6e*/ \n    quex.push(sx); quey.push(sy); \n    while (quex.size()>0)\n    {\n        memset(teller,true,sizeof(teller));//\u521d\u59cb\u5316 \u6269\u5c55\u5c42\u6570\u5224\u65ad\u53d8\u91cf \n        cachex=quex.front(); cachey=quey.front();//\u7f13\u5b58\u5b58\u5165 \n        if (cachex==ex && cachey==ey)//\u5982\u679c\u5230\u4e86\u7ec8\u70b9\uff0c\u8f93\u51fa\uff08\u8fd9\u4e2a\u9898\u4e0d\u5b58\u5728\u8d77\u70b9=\u7ec8\u70b9\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u5206\u522b\u7528AB\u8868\u793a \n        {\n            cout<<timex[ex][ey]<<endl;\n            return 0;\n        }\n        for (int j=0;j<=3;j++)//\u56db\u4e2a\u65b9\u5411 \n        {\n            for (int i=1;i<=n;i++)/*\u5f00\u4e00\u5c42*/ if (teller[j]==true) /*\u5982\u679c\u8be5\u65b9\u5411\u4e0a \u524d\u9762\u4e00\u5c42\u6ca1\u9047\u5230\u969c\u788d*/ \n            {\n                //cout<<\"Direction= \"<<j<<\" Now Position At: \"<<cachex+wayx[j]*i<<\" \"<<cachey+wayy[j]*i<<endl; /*\u53bb\u6389\u6ce8\u91ca\u770b\u65b9\u5411\u3001\u73b0\u5728\u6269\u5c55\u5230\u7684\u4f4d\u7f6e\u5750\u6807 */ \n                if (cachex+wayx[j]*i>=0 && cachex+wayx[j]*i<n && cachey+wayy[j]*i>=0 && cachey+wayy[j]*i<n)//\u8d8a\u754c\u5224\u65ad \n                {\n                    if (mapx[cachex+wayx[j]*i][cachey+wayy[j]*i]=='.' && timex[cachex+wayx[j]*i][cachey+wayy[j]*i]==-1) //\u672a\u88ab\u8bbf\u95ee\u4e14\u4e0d\u662f\u969c\u788d \n                    {\n                        timex[cachex+wayx[j]*i][cachey+wayy[j]*i]=timex[cachex][cachey]+1;//\u8ba1\u7b97\u8f6c\u5f2f\u6b21\u6570 \n                        quex.push(cachex+wayx[j]*i); quey.push(cachey+wayy[j]*i);//\u5165\u961f\u5217 \n                    }\n                    else if (mapx[cachex+wayx[j]*i][cachey+wayy[j]*i]=='x') teller[j]=false;//\u6b64\u65b9\u5411\u8be5\u5c42\u5b58\u5728\u969c\u788d\uff0c\u7ed3\u675f\u6b64\u65b9\u5411\u7684\u6269\u5c55 \n                }\n                else teller[j]=false;//\u8d8a\u754c\uff0c\u7ed3\u675f\u6269\u5c55 \n            }\n        }\n        //showTimex(); /*\u53bb\u6389\u6ce8\u91ca\u53ef\u4ee5\u770b\u6bcf\u4e00\u6b21\u6269\u5c55\u5b8c\u4e4b\u540e\u7684\u8f6c\u5f2f\u6b21\u6570\u8868*/ \n        quex.pop(); quey.pop();//\u961f\u9996\u5143\u7d20\u51fa\u961f \n    }\n    cout<<-1<<endl;//\u641c\u5b8c\u5168\u56fe\uff0c\u6ca1\u641c\u5230 \n    return 0;\n}\n```\n##\u8bf7\u4e0d\u8981\u6284\u88ad\u4ee3\u7801\n",
        "postTime": 1493986081,
        "uid": 21512,
        "name": "GNAQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1649 \u3010[USACO07OCT]\u969c\u788d\u8def\u7ebfObstacle Course\u3011"
    },
    {
        "content": "\u8fd9\u9898\u4e00\u770b\u4e0a\u53bb\u88f8\u7684\u5bbd\u641c\n\n\u4f46\u8fd9\u9898\u56e0\u4e3a\u8981\u8bb0\u5f55\u62d0\u5f2f\u7684\u6b21\u6570\uff0c\u800c\u4e0d\u662f\u6700\u77ed\u8def\u3002\u3002\u3002\n\n# \u8bef\u533a \u8def\u77ed\u4e0d\u4ee3\u8868\u62d0\u5f2f\u5c11\n\n\u6240\u4ee5\u4e0d\u80fd\u7528\u5e38\u89c4\u5bbd\u641cQWQ~~\u592a\u9ebb\u70e6\u4e86\uff0c\u8981\u56de\u6eaf\uff0c\u591a\u6b21\u641c\uff0c\u641c\u51fa\u6240\u6709\u8def~~\n\n\u8fd9\u65f6\u6211\u4eec\u9700\u8981\u5bf9\u5bbd\u641c\u8fdb\u884c\u4e00\u4e0b\u7279\u6b8a\u7684\u52a0\u5f3a~~\u5904\u7406~~\n\n\u8ba9\u5b83\u53ea\u641c\u4e00\u6b21\u5c31\u51fa\u7b54\u6848\n\n\u6211\u4eec\u53ef\u4ee5\u5229\u7528\n\n# \u6d2a\u6c34\u586b\u5145~~\u673a\u623f\u67d0\u5927\u4f6c\u53d6\u7684\u540d~~\n\u7684\u65b9\u6cd5\u5bf9\u4e00\u4e2a\u70b9\u76844\u4e2a\u65b9\u5411\u8fdb\u884c\u641c\u7d22\n\n\u8fd9\u6837\u5c31\u4e0d\u7528\u591a\u6b21\u641c\u4e86\n\n\u81f3\u4e8e\u6d2a\u6c34\u586b\u5145\u662f\u5565\uff0c\u6211\u5177\u4f53\u8bb2\u4e00\u4e0b\n\n\u8fd9\u4e2a\u65b9\u6cd5\u662f\u5bf9\u5bbd\u641c\u8fdb\u884c\u4f18\u5316\uff0c\u4f46\u67d0\u4e9b\u60c5\u51b5\u53cd\u800c\u4f1a\u6709\u6709\u62d6\u7d2f\n\n~~\u4e0d\u8fc7\u5e94\u8be5\u6ca1\u4eba\u5361\u8fd9\u79cd\u849f\u84bb\u4f18\u5316~~\n\n\u5b9e\u73b0\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4f60\u53ea\u8981\u5728\u8fdb\u884c\u641c\u7d22\u8dd1\u70b9\u65f6\u5728\u591a\u52a0\u4e00\u4e2afor\u5faa\u73af\n\n\u6765\u6a21\u62df\u5f53\u524d\u8fd9\u6761\u8def\u80fd\u8dd1\u591a\u8fdc\uff0c\u5411\u524d\u5ef6\u4f38\u591a\u8fdc\uff0c\u50cf\u6c34\u4e00\u6837\u5411\u76f4\u7ebf\u62d3\u5c55\n\n\u5373\u8ba9\u5750\u6807\u70b9\u7684\u53d8\u91cf\u4e58\u4e0a\u4e00\u4e2a\u5e38\u6570\uff0c\u8ba9\u8be5\u70b94\u6761\u76f4\u7ebf\u4e0a\u5ef6\u5c55\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801QWQ\n```\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nstruct pd{int x,y;}hrb[20050];//\u961f\u5217\uff0c\u5b58\u72b6\u6001\nint lxy[101][101],n,m,i,j,k,r=1,l,x,y,emm[101][101];\n//lxy\u8d77bool\u7684\u4f5c\u7528\uff0cemm\u8bb0\u5f55\u62d0\u5f2f\u6b21\u6570\nint xy[4]={1,-1,0,0},yx[4]={0,0,-1,1}\uff1b//\u5750\u6807\u53d8\u91cf\nchar tu[101][101];//\u539f\u56fe\nint main()\n{\n    //freopen(\"ddos.in\",\"r\",stdin);\n    //freopen(\"ddos.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    for(k=1;k<=n;k++)\n    {\n        cin>>tu[i][k];\n        if(tu[i][k]=='A')hrb[l].x=i,hrb[l].y=k,lxy[i][k]=1;\n        if(tu[i][k]=='B')x=i,y=k;\n        if(tu[i][k]=='x')lxy[i][k]=1;\n        //\u5bf9\u56fe\u8fdb\u884c\u5904\u7406\n    }\n    while(l<r)//\u5f00\u641c\n    {\n        for(i=0;i<4;i++)//\u679a\u4e3e\u5750\u6807\u53d8\u91cf\uff0c\u8fdb\u884c4\u65b9\u79fb\u52a8\n        for(k=1;;k++)//\u7528\u4e8e\u6d2a\u6c34\u586b\u5145\u7684\u6570\u7ec4\n        {\n            int xx=hrb[l].x+k*xy[i],yy=hrb[l].y+k*yx[i];\n            //\u679a\u4e3e\u4e00\u4e2a\u5e38\u6570k\uff0c\u4e0e\u5750\u6807\u53d8\u91cf\u76f8\u4e58\n            if(lxy[xx][yy]==1)break;\n            if(xx<=0||xx>n||yy<=0||yy>n)break;\n            //\u78b0\u8fb9\u6216\u8d70\u8fc7\u4e86\uff0c\u505c\u6b62\u586b\u5145\n            lxy[xx][yy]=1;//\u6253\u6807\u8bb0\n            emm[xx][yy]=emm[hrb[l].x][hrb[l].y]+1;\n            //\u505c\u4e86\uff0c\u8bf4\u660e\u8be5\u8f6c\u5f2f\u4e86\uff0c\u4e8e\u662f\u5f53\u524d\u70b9\u7684\u6b21\u6570\u4e3a\u539f\u5750\u6807\u7684\u52a01\n            //\u8be5\u5904\u4e0d\u7528\u53d6min\uff0c\u662f\u56e0\u4e3a\u6d2a\u6c34\u586b\u5145\u8bb0\u5f97\u662f\u62d0\u5f2f\u6b21\u6570\uff0c\u5230\u76ee\u6807\u70b9\uff0c\u62d0\u5f2f\u6b21\u6570\u81ea\u7136\u662f\u6700\u5c11\u7684\n            hrb[r].x=xx;\n            hrb[r].y=yy;\n            r++;//\u8fdb\u884c\u961f\u5217\n        }\n        l++;\n    }\n    if(emm[x][y]!=0)\n    printf(\"%d\",emm[x][y]-1);//\u7ec8\u70b9\u4e0d\u4e3a0\uff0c\u5c31\u8bf4\u660e\u5230\u8fc7\u8fd9\uff0c\u8f93\u51fa\u7b54\u6848\u51cf\u53bb1\uff0c\u56e0\u4e3a\u5f00\u59cb\u65b9\u5411\u4e0d\u5b9aQWQ~~\u7406\u89e3\u4e00\u4e0b~~\n    else\n    printf(\"-1\");//\u8bf4\u660e\u5230\u4e0d\u4e86\n    return 0;\n}\n```\n\u641c\u7d22\u5176\u5b9e\u662f\u4f18\u96c5\u7684\u66b4\u529bQWQ\n\n\u9762\u5bf9\u4e0d\u540c\u9898\u76ee\uff0c\u8981\u7528\u5404\u79cd\u9a9a\u64cd\u4f5c\n\n\u6bd4\u5982\uff0c\u8fd9\u9898\u5e38\u89c4\u5bbd\u641c\u8981\u641c\u51e0\u6b21\u624d\u80fd\u51fa\u7b54\u6848\uff0c\u8bd5\u51fa\u6240\u6709\u8def\u624d\u80fd\u51fa\u7b54\u6848\n\n\u52a0\u4e86\u6d2a\u6c34\u586b\u5145\uff0c\u5c31\u53ea\u6709\u4e00\u6b21\uff0c\u641c\u5b8c\uff0c\u662f\u4e0d\u662f\u5f88\u5feb\uff0c\u662f\u4e0d\u662f\u5f88\u795e\u5947\n\n# \u6240\u4ee5\uff0c\u8fd9\u4e0d\u70b9\u8d5e\uff0c\u5173\u6ce8\uff0c~~\u6295\u98df\uff0c\u7d20\u8d28\u4e09\u8fde~~\uff0c\u4e00\u6ce2",
        "postTime": 1540907288,
        "uid": 104710,
        "name": "\u767d\u70db\u8475",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1649 \u3010[USACO07OCT]\u969c\u788d\u8def\u7ebfObstacle Course\u3011"
    },
    {
        "content": "\u4eca\u5929\u6709\u4eba\u6765\u7ed9\u6211\u4eec\u8bb2\u8bfe\u3002\u3002\uff08~~\u900f\u9732\u4e00\u70b9\uff1aWC\u94f6\u724c\u2026\u4e0d\u80fd\u88ab\u770b\u5230\u3002\u300223333\uff08\u9003~~\n\n\n\u597d\u4e86\u4e0d\u626f\u4e86\u3002\u3002\n\n\n------------\uff08low\u5230\u4e0d\u884c\u7684\u5206\u5272\u7ebf\u3002\u3002\uff09\n\n\n\u8fd9\u9898\u662f\u4eca\u5929\u8bb2\u8bfe\u7684\u4f8b\u9898\u3002\u3002\u4e00\u5f00\u59cb\u7528\u6df1\u641c\u505a\u3002\u3002\u4f46\u53ea\u670930\u5206\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n\n```cpp\n\n\n\n\n#include <bits/stdc++.h>\n\nusing std::cin;\nusing std::cout;\nusing std::string;\n\nconst int MAXN = 100 + 10;\nconst int dx[] = {-1, 0, 1, 0};\nconst int dy[] = {0, -1, 0, 1};\n\nstring s[MAXN];\nint N, matrix[MAXN][MAXN] = {0}, ans = -1, endX, endY, startX, startY;\n\n\n/*startX\uff0c startY\uff1a\u8d77\u59cb\u70b9\u7684\u5750\u6807\uff1bendX, endY\uff1a\u540cstart\uff1bmatrix\uff1a\u8f6c\u6362\u6210\u6570\u5b57\u540e\u7684\u77e9\u9635\uff08\u8fd9\u6837\u5904\u7406\u65b9\u4fbf\u4e9b\u3002~~\uff08\u4e0d\u8fc7\u4e5f\u6ca1\u65b9\u4fbf\u591a\u5c11\u3002\u3002~~*/\n\nbool check(int x, int y) {\n    if ((x < 0) || (x >= N) || (y < 0) || (y >= N)) {\n        return false;\n    }\n    if (matrix[x][y] < 0) {\n        return false;\n    }\n    return true;\n}\n\nvoid dfs(int x, int y, int now, int lastWay) {\n/*\n(x,y)\u662f\u5f53\u524d\u7684\u70b9\u7684\u5750\u6807\uff1bnow\u662f\u5230\u8fbe\u5f53\u524d\u70b9\u7684\u8f6c\u5f2f\u6b21\u6570\uff1blastWay\u662f\u8d70\u5230\u8fd9\u4e2a\u70b9\u65f6\u7684\u65b9\u5411\u3002\u3002\n*/\n\n    if ((x == endX) && (y == endY)) {\n    \n    \n/*\n\u8fd9\u91cc\u4e0d\u80fd\u7528matrix[x][y] == 2\uff08\u867d\u7136\u4e00\u5f00\u59cb\u8f6c\u6362\u6570\u7ec4\u65f6\u628a\u7ec8\u70b9\u6807\u4e3a\u4e862\uff09\uff0c\u56e0\u4e3a\u540e\u9762\u7ee7\u7eed\u641c\u7d22\u65f6\uff0c\u6709\u4e00\u53e5\"matrix[tmpx][tmpy] = -1\"\uff0c\u8fd9\u53e5\u4f1a\u4f7f\u5f97\u4f60\u8d70\u5230\u7ec8\u70b9\u518d\u5224\u65ad\u65f6\uff0c\u7ec8\u70b9\u5374\u88ab\u6807\u8bb0\u4e3a\u4e86-1\u3002*/\n        (ans == -1) ? ans = now : ans = std::min(now,ans);\n    } else {\n        \n        for (int i = 0; i < 4; ++i) {\n        \n        //\u56db\u4e2a\u65b9\u5411\u8fdb\u884c\u6269\u5c55\u3002\u3002\n            int tmpx = x + dx[i], tmpy = y + dy[i];\n            \n            //\u6269\u5c55\u51fa\u7684\u70b9\u7684\u65b0\u5750\u6807\u3002\u3002\n            if (check(tmpx, tmpy) == true) {\n            \n            //\u6ca1\u6709\u8d8a\u754c\u4e14\u6269\u5c55\u7684\u65b0\u70b9\u53ef\u4ee5\u8d70\u3002\u3002\n                if (lastWay != i) {//\u4e0a\u4e00\u4e2a\u65b9\u5411\u548c\u5f53\u524d\u65b9\u5411\u4e0d\u76f8\u540c\n                    matrix[tmpx][tmpy] = -1;\n                    dfs(tmpx, tmpy, now + 1, i);\n                    //\u65b0\u5750\u6807\uff0c\u8f6c\u5f2f\u6b21\u6570+1\uff0c \u65b0\u65b9\u5411\u3002\u3002\n                    matrix[tmpx][tmpy] = 1;\n                } else {\n                    matrix[tmpx][tmpy] = -1;\n                    dfs(tmpx, tmpy, now, i);\n                    //\u65b9\u5411\u548c\u8f6c\u5f2f\u6b21\u6570\u90fd\u4e0d\u53d8\u3002\n                    matrix[tmpx][tmpy] = 1;\n                }\n            }\n        }\n    }\n}\n\nstring OutSpace(string s) {\n    int len = s.size();\n    string ans = \"\";\n    for (int i = 0; i < len; ++i) {\n        if (s[i] != ' ') {\n            ans += s[i];\n        }\n    }\n    return ans;\n}\n\nvoid Init() {\n    cin >> N;\n    getchar();\n    \n/*\n\u8fd9\u53e5\u662f\u522b\u4eba\u5e2e\u6211debug\u65f6\u53d1\u73b0\u7684\u3002\u3002\u5728\u8f93\u5165N\u4e4b\u540e\uff0c\u4f1a\u6709\u4e00\u4e2a\u56de\u8f66\u7b26\u3002\u3002\u5bfc\u81f4\u4e0b\u9762\u8bfb\u5165\u65f6\uff0c\u5148\u8bfb\u5165\u4e86\u56de\u8f66\u7b26\uff0c\u800c\u4e0d\u662f\u56fe\u3002\u3002\n*/\n//    N++;\u8fd9\u4e24\u53e5\u6ca1\u4ec0\u4e48\u7528\u3002\u8f9b\u82e6\u60a8\u4fe9\u4e86\u3002\u3002233333333\n//    std::cerr << N;\n    int x = 1, y = 1;\n    for (int i = 0; i < N; i++) {\n        getline(cin, s[i]);\n        s[i] = OutSpace(s[i]);//\u53bb\u6389\u7a7a\u683c\u3002\u3002\n    }\n    \n    for (int i = 0; i < N; ++i) {/*\u4e00\u5f00\u59cb\u60f3\u53d8\u4e3a1\u2014\u2014n\u8303\u56f4\u7684\u3002\u3002\u4f46\u662f\u6bd4\u8f83\u9ebb\u70e6\u3002\u3002\u6240\u4ee50\u2014\u2014n-1.\u3002*/\n        for (int j = 0; j < s[i].size(); ++j) {\n            \n            switch (s[i][j]) {\n\n                case '.': {//\u53ef\u4ee5\u8d70\u7684\u70b9\uff0c\u6807\u8bb0\u4e3a1\n                    matrix[i][j] = 1;\n                    break;\n                }\n                case 'A': {\n                    matrix[i][j] = 1;\n                    startX = i; startY = j;/*\u4e3b\u8981\u662f\u8fd9\u91cc\uff0c\u8981\u8bb0\u4f4f\u8d77\u70b9\u7684\u5750\u6807\uff0c\u4e0b\u9762dfs\u8981\u7528\u5230\u3002*/\n                    break;\n                }\n                case 'B': {\n                    matrix[i][j] = 2; \n                    endX = i; endY = j;\n/*\n\u65e2\u7136\u4e0d\u80fd\u7528matrix[i][j] == 2 \u4f5c\u4e3adfs\u7ec8\u6b62\u6761\u4ef6\u4e86\uff0c\u6240\u4ee5\u8981\u8bb0\u4f4f\u5750\u6807\u3002\n*/                 \n                    break;\n                }\n                case 'x': {\n                    matrix[i][j] = -1;//\u4e0d\u53ef\u6269\u5c55\u7684\u70b9\u3002\n                    break;\n                }\n            }\n\n        }\n    }\n}\n\nvoid Work() {\n    for (int i = 0; i < 4; ++i) {\n        dfs(startX, startY, 0, i);//\u4ece\u8d77\u70b9\u51fa\u53d1\uff0c4\u4e2a\u65b9\u5411\u8fdb\u884c\u6269\u5c55\u3002\n    }\n}\n\nvoid Print() {\n    cout << ans;\n}\n\nint main() {\n    Init();\n    Work();\n    Print();\n    return 0;\n}\n\n\n\n```\n\n\uff08\u8fd9\u91cc\u5410\u69fd\u4e00\u53e5\uff1a\u4e3a\u4ec0\u4e48vscode\u4e0a\u7684\u4e2d\u6587\u5230\u8fd9\u91cc\u5c31\u4e71\u7801\u4e86\u3002\u3002\u4e0a\u9762\u7684\u6ce8\u91ca\u662f\u6211\u91cd\u65b0\u6253\u7684\u3002\u3002\n\n\n\u4f46\u662f\u3002\u3002\u65e2\u7136\u8eab\u4e3a\u5e7f\u641c\u8bb2\u8bfe\u4f8b\u9898\u3002\u3002\u3002\u90a3\u80fd\u7528dfs\u5c31\u80fdA\u54622333.\u3002\n\n\u597d\u5427\u5176\u5b9e\u5b66\u957f\u7ed9\u51fa\u4e86\u8fd9\u6837\u4e00\u79cd\u6570\u636e\uff1a\n\n\uff08\u6253\u7a7a\u683c\u592a\u7d2f\u4e0d\u6253\u4e86\uff09\n\nxx........\u2026\u2026\n\nxxA.......\u2026\u2026\n\nxxxxxx....\n\nxxxxxx.xxx\n\nB......xxx\n\n\u5728\u8fd9\u79cd\u6570\u636e\u4e2d\uff0c\u660e\u663e\u53ea\u7528\u8f6c2\u6b21\u5f2f\uff08\u53ef\u4ee5\u81ea\u5df1\u7a0d\u5fae\u624b\u753b\u4e00\u4e0b\uff09\u4f46dfs\u4f1a\u5168\u90e8\u904d\u5386\u4e00\u904d\uff0c\u5e7f\u641c\u5219\u4fdd\u8bc1\u4e86\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u5165\u961f1\u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08\u70b9\u7684\u6570\u91cf\uff09\uff0c\n\n\u660e\u663e\u8981\u597d\u5f97\u591a\uff0c\u6240\u4ee5\uff0c\u8fd8\u4e0d\u7528\u5e7f\u641c\uff0c\u66f4\u5f85\u4f55\u65f6\uff1f\uff1f\uff1f\n\n\n\n\u5148\u653e\u51fa\u5e7f\u641c\u5927\u62db\uff1a~~\u867d\u7136\u57fa\u672c\u4e0a\u662f\u6284\u7684~~\n\n\n```cpp\n\n\n\n\n\n\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int INF = 2333333;//\u6bcf\u5929\u7b11\u4e00\u7b11\uff0c\u5341\u5e74\u5c1123333333333\nconst int MAXN = 200 + 10;\nconst int maxWay = 4;//\u6700\u5927\u7684\u65b9\u5411\u4e2a\u6570\u3002\u3002\u76f4\u8bd1\u4e00\u4e0b\u5c31\u597d\u3002\u3002\nconst int dx[] = {-1, 0, 0, 1};\nconst int dy[] = {0, -1, 1, 0};\n\nstruct Point {\n    int x, y;\n    int lastWay;\n};\n\nqueue < Point > q;\nPoint start, end;//\u8d77\u70b9\u548c\u7ec8\u70b9\nchar maze[MAXN][MAXN];//maze\uff1a\u8ff7\u5bab\uff0c\nint N, step[MAXN][MAXN];\n\nbool check(int x, int y) {\n    if ((x < 0) || (x >= N) || (y < 0) || (y >= N) || (maze[x][y] == 'x')) {\n        return false;\n    }//\u8d8a\u754c||\u8fd9\u4e2a\u70b9\u4e0d\u80fd\u8d70 return false\uff1b\n    return true;\n}\n\nvoid Init() {\n    cin >> N;\n    getchar();\n    for (int i = 0; i < N; ++i) {\n        for (int j = 0; j < N; ++j) {\n            cin >> maze[i][j];\n            //cin\u81ea\u52a8\u5ffd\u7565\u7a7a\u7684\u5b57\u7b26\n            if (maze[i][j] == 'A') {\n            //\u627e\u5230\u8d77\u70b9\u548c\u7ec8\u70b9\n                start.x = i; start.y = j;\n            }\n            if (maze[i][j] == 'B') {\n                end.x = i; end.y = j;\n            }\n            step[i][j] = INF;\n    //\u4ece\u8d77\u70b9\u5230\u70b9[i][j]\u7684\u8f6c\u5f2f\u6b21\u6570\u8bbe\u7f6e\u4e3aINF\uff08\u65e0\u9650\u5927\uff09\n        }\n    }\n    step[start.x][start.y] = 0;//\u8d77\u70b9\u5230\u8d77\u70b9\u8f6c0\u6b21\u5f2f\u3002\n}\n\nvoid Work() {\n    q.push(start);\n    while (!q.empty()) {\n        Point u = q.front();\n        q.pop();\n        if ((u.x == end.x) && (u.y == end.y)) break;//\u5982\u679c\u5750\u6807\u5230\u4e86\u7ec8\u70b9\u5750\u6807\uff0c\u6839\u636e\u5e7f\u641c\u201c\u5148\u5230\u7684\u5fc5\u5b9a\u6700\u4f18\u201d\u539f\u5219\uff0c\u53ef\u7acb\u5373\u7ed3\u675f\u641c\u7d22\u3002\n        Point V;\n        for (int i = 0; i < maxWay; ++i) {//\u56db\u4e2a\u65b9\u5411\n            V.x = u.x + dx[i]; V.y = u.y + dy[i];\n            while (check(V.x, V.y) == true) {\n            \n            \n/*\n\u5b66\u957f\u8bf4\uff0c\u4e00\u822c\u7684\u5e7f\u641c\u662f\u9010\u6e10\u6269\u6563\u5f00\u6765\u7684\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u961f\u5217\u91cc\u7684\u987a\u5e8f\u5c31\u6ca1\u529e\u6cd5\u4fdd\u8bc1\u662f\u7531\u8f6c\u5f2f\u6b21\u6570\u5c11\u5230\u8f6c\u5f2f\u6b21\u6570\u591a\u7684\uff0c\u6240\u4ee5\u7528\u4e00\u4e2awhile\uff0c\u4e00\u6b21\u628a\u6240\u6709\u80fd\u8d70\u7684\u70b9\u5168\u90e8\u6269\u5c55\u6389\u3002\n*/\n            if (step[V.x][V.y]>step[u.x][u.y] + 1) {\n                    step[V.x][V.y]=step[u.x][u.y] + 1;\n                    //\u66f4\u65b0\u5230\u8fbe\u6b64\u70b9\u7684\u8f6c\u5f2f\u6b21\u6570\u3002\u3002\n                    q.push(V);\n                }\n                V.x += dx[i]; V.y += dy[i];//\u987a\u7740\u6b64\u65b9\u5411\u7ee7\u7eed\u8d70\uff0c\u8fdb\u884c\u4e0b\u4e00\u6b21\u52a0\u5165\u961f\u5217\u3002\n            }\n        }\n    }\n}\n\nvoid Print() {\n    (step[end.x][end.y] == INF) ? cout << -1 : cout << step[end.x][end.y] - 1;//\u5b66\u957f\u8bf4\uff0c\u5728step\u6570\u7ec4\u91cc\uff0c\u5c31\u7b97\u662f\u901a\u8fc7\u8d77\u70b9\u76f4\u63a5\u8d70\u8fc7\u53bb\u7684\u70b9\uff0c\u90fd\u88ab\u7b97\u6210\u4e86\u201c\u8f6c1\u6b21\u5f2f\u201d\uff0c\u56e0\u4e3a\u5728\u4e0a\u9762\u7684\u5e7f\u641c\u4e2d\uff0cwhile\u5faa\u73af\u628a\u4e00\u79cd\u6269\u5c55\u70b9\u90fd\u6269\u5c55\u4e86\uff0c\uff08\u53ef\u4ee5\u6253\u51fa\u6765\u770b\u4e00\u4e0b\uff09\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u76f4\u63a5-1\uff1b\n}\n\nvoid debug2()\n{\n    for (int i=0;i<N;i++){\n        for (int j=0;j<N;j++)\n            cout<<step[i][j]<<\" \";\n        cout<<endl;\n    }\n}\n\nint main() {\n    Init();\n    Work();\n    Print();\n//    debug2();\n    return 0;\n}\n\n\n```\n\n\n\n\n\u8bf4\u5b9e\u8bdd\uff0c\u8fd9\u9898\u771f\u7684\u6709\u4e00\u4e9b\u5751\uff08~~\u6240\u4ee5\u6211\u5199\u4e86\u4e00\u5929~~\uff09\uff0c\u4f46\u662f\uff0c\u53ea\u8981\u505a\u51fa\u6765\u4e86\uff0c\u6211\u8ba4\u4e3a\u4fbf\u503c\u5f97\u3002\n\n\n~~\u9893\u554a~~\n",
        "postTime": 1516882887,
        "uid": 51211,
        "name": "yjxyjx",
        "ccfLevel": 0,
        "title": "[USACO07OCT]\u969c\u788d\u8def\u7ebfObstacle Course"
    },
    {
        "content": "\u9762\u5bf9\u5982\u6f6e\u7684BFS\u5199\u6cd5\uff0c\u5bf9\u6df1\u641c\u72c2\u70ed\u7684\u6211\u8fd8\u662f\u51b3\u7136\u7528\u4e86DFS\uff1b\n\n\u6df1\u641c\u91cc\u5e94\u653e\u5165\u56db\u4e2a\u53d8\u91cf\uff0c\u5206\u522b\u8868\u793a\uff1a\n\n\u5f53\u524d\u4f4d\u7f6e\uff08\u4e24\u4e2a\u53d8\u91cf\uff09\uff1b\u5f53\u524d\u8f6c\u5f2f\u6b21\u6570\uff1b\u5f53\u524d\u65b9\u5411\uff1b\n\n\u88f8\u4e0aDFS\u5f53\u7136\u4e0d\u80fd\uff0c\u4e0d\u7136\u4e00\u4e2a100\u00d7100\u84dd\u5929\u767d\u4e91\u5c31gg\u4e86\uff1b\n\n\u6240\u4ee5\u5fc5\u987b\u8fd8\u52a0\u5165\u4e00\u70b9\u4f18\u5316\uff1a\n\n### \u8bb0\u5fc6\u5316\u641c\u7d22\u662f\u5173\u952e\uff01\n\n\u7b80\u5355\u8bf4\u5c31\u662f\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u4e0b\u5f53\u524d\u4f4d\u7f6e\u7684\u6700\u5c0f\u6b65\u6570\uff0c\u5982\u679c\u6bd4\u5f53\u524d\u6b65\u6570\u5c0f\uff0c\u90a3\u5c31\u7528\u65b0\u7684\u6b65\u6570\u66f4\u65b0\uff0c\u5982\u679c\u5df2\u5927\u4e8e\u5f53\u524d\u6b65\u6570\uff0c\u90a3\u5c31\u76f4\u63a5\u9000\u51fa\u641c\u7d22\u3002\n\n\u8f6c\u6362\u8bed\u53e5\u5c31\u662f\uff1a\nif(q[x][y]<=sum) return ;\nq[x][y]=sum;\n\n\u597d\u4e86\uff0c\u8fd9\u6837\u4ee3\u7801\u5c31\u5f88\u597d\u5199\u4e86\u3002\u7b80\u5355\u7801\u4e00\u4e0b\uff0c80\u5206\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,l1,l2,s1,s2,q[101][101];\nchar a[1000][1000]; \nint ax[5]={0,-1,0,1,0},ay[5]={0,0,-1,0,1};\nbool flag=1,vis[1000][1000]={0};\nvoid dfs(int x,int y,int sum,int p)\n{\n    //cout<<x<<\" \"<<y<<\" \"<<sum<<\" \"<<p<<endl;\n    if(q[x][y]<sum) return ;\n    q[x][y]=sum;\n    if(x==s1&&y==s2) return ;\n    for(int i=1;i<=4;i++)\n    {\n        int ux=x+ax[i],uy=y+ay[i];\n        if(ux<1||uy<1||ux>n||uy>n) continue;\n        if(a[ux][uy]=='x') continue;\n        if(!vis[ux][uy])\n        {\n            vis[ux][uy]=1;\n            if(p==i%2||p==2) dfs(ux,uy,sum,i%2);\n            else dfs(ux,uy,sum+1,i%2);\n            vis[ux][uy]=0;\n        }\n    }\n}\nint main()\n{\n    memset(q,0x3f3f3f3f,sizeof(q));\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n        {\n            cin>>a[i][j];\n            if(a[i][j]=='A')\n            {\n                l1=i;\n                l2=j;\n            }\n            if(a[i][j]=='B')\n            {\n                s1=i;\n                s2=j;\n            }\n        }   \n    vis[l1][l2]=1;\n    dfs(l1,l2,0,2);\n    if(q[s1][s2]==0x3f3f3f3f) cout<<-1;\n    else cout<<q[s1][s2];\n    return 0;\n}\n```\n\u90a3\u4e48\u95ee\u9898\u51fa\u5728\u54ea\u513f\u5462\uff1f\n\n\u5047\u8bbe\u6709\u4e00\u4e2a5\u00d75\u7684\u8868\u683c\uff1a\n\n|  |  |  |  |  |\n| :----------: | :----------: | :----------: | :----------: | :----------: |\n|  |  | \u65b9\u54111 |  |  |\n|  | \u65b9\u54112 | \u5f53\u524d\u4f4d\u7f6e | \u65b9\u54114 |  |\n|  |  | \u65b9\u54113 |  |  |\n|  |  |  |  |  |\n\n\u6211\u4eec\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\u65b9\u54111\u548c\u65b9\u54113\u4e3a\u540c\u65b9\u5411\uff1b\u65b9\u54112\u548c\u65b9\u54114\u4e3a\u540c\u65b9\u5411\u3002\u800c1\u548c3\u90fd\u4e0d\u80fd\u88ab2\u6574\u9664\uff0c2\u548c4\u90fd\u80fd\u88ab2\u6574\u9664\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53d1\u73b0\u4e86\u4e00\u4e2a\u65b0\u65b9\u6cd5\u2014\u2014\n\n#### \u901a\u8fc7\u5224\u65ad\u662f\u5426\u80fd\u88ab2\u6574\u9664\u6765\u5224\u65ad\u65b9\u5411\n\n\u8bb0\u5fc6\u5316\u6570\u7ec4\u5c31\u53ef\u4ee5\u6539\u4e3aq[3][x][y]:q[1][x][y]\u8868\u793a\u65b9\u54111\u548c\u65b9\u54113\uff1bq[2][x][y]\u8868\u793a\u65b9\u54112\u548c\u65b9\u54114\u3002\n\n\u90a3\u4e48\u65f6\u95f4\u53ef\u4ee5\u5c11\u7528\u4e00\u534a\u55bd\uff01\n\nAC\u4ee3\u7801\u732e\u4e0a\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,l1,l2,s1,s2,q[3][101][101];\nchar a[1000][1000]; \nint ax[5]={0,-1,0,1,0},ay[5]={0,0,-1,0,1};\nbool flag=1,vis[1000][1000]={0};\nvoid dfs(int x,int y,int sum,int p)\n{\n    //cout<<x<<\" \"<<y<<\" \"<<sum<<\" \"<<p<<endl;\n    if(q[p][x][y]<=sum) return ;\n    q[p][x][y]=sum;\n    if(x==s1&&y==s2) return ;\n    for(int i=1;i<=4;i++)\n    {\n        int ux=x+ax[i],uy=y+ay[i];\n        if(ux<1||uy<1||ux>n||uy>n) continue;\n        if(a[ux][uy]=='x') continue;\n        if(!vis[ux][uy])\n        {\n            vis[ux][uy]=1;\n            if(p==i%2||p==2) dfs(ux,uy,sum,i%2);\n            else dfs(ux,uy,sum+1,i%2);\n            vis[ux][uy]=0;\n        }\n    }\n}\nint main()\n{\n    memset(q,0x3f3f3f3f,sizeof(q));\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n        {\n            cin>>a[i][j];\n            if(a[i][j]=='A')\n            {\n                l1=i;\n                l2=j;\n            }\n            if(a[i][j]=='B')\n            {\n                s1=i;\n                s2=j;\n            }\n        }   \n    vis[l1][l2]=1;\n    dfs(l1,l2,0,2);\n    if(q[1][s1][s2]==0x3f3f3f3f&&q[0][s1][s2]==0x3f3f3f3f) cout<<-1;\n    else cout<<min(q[1][s1][s2],q[0][s1][s2]);\n    return 0;\n}\n```\n\u795d\u5927\u5bb6\u65e9\u65e5AC\uff01\uff01",
        "postTime": 1558753674,
        "uid": 151791,
        "name": "ykuouzf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1649 \u3010[USACO07OCT]\u969c\u788d\u8def\u7ebfObstacle Course\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u6ca1\u6709\u90a3\u4e48\u96be\uff0c\u6ca1\u6709\u90a3\u4e48\u70e6\uff1b\n\n\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u88f8\u7684bfs\uff1b\n\n\u7136\u540e\u6bd4\u8f83\u7684\u4e1c\u897f\u5c31\u662f\u8f6c\u5f2f\u7684\u6b21\u6570\uff0c\u8fd9\u6837\u5927\u529bbfs\u5c31\u6ca1\u4e8b\u4e86\uff1b\n\n\u6ca1\u4ec0\u4e48\u53ef\u4ee5\u8bb2\u7684\u4e86\uff0c\u5199spfa\u7684\u771f\u7684\u6ca1\u5fc5\u8981\u4e86\uff1b\n\n\n\n```cpp\n#include<bits/stdc++.h>\n#define Ll long long\nusing namespace std;\nconst int N=1e2+5;\nbool vi[N][N],g[N][N];\nint xxx[4]={0,1,0,-1};\nint yyy[4]={1,0,-1,0};\nint X[N*N],Y[N*N],V[N*N],l,r;\nint n,m,A[2],B[2];\nchar c;\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++){\n            cin>>c;\n            if(c=='x')g[i][j]=1;\n            if(c=='A')A[0]=i,A[1]=j;\n            if(c=='B')B[0]=i,B[1]=j;\n        }\n    for(int i=1;i<=n;i++)g[0][i]=g[n+1][i]=g[i][0]=g[i][n+1]=1;\n    X[1]=A[0];Y[1]=A[1];V[1]=-1;\n    l=0;r=1;\n    while(r>l){\n        int xx=X[++l],yy=Y[l],v=V[l];\n        if(xx==B[0]&&yy==B[1]){printf(\"%d\",max(0,v));return 0;}\n        for(int i=0;i<4;i++){\n            int x=xx+xxx[i];\n            int y=yy+yyy[i];\n            while(!g[x][y]){\n                if(!vi[x][y]){\n                    vi[x][y]=1;\n                    X[++r]=x;\n                    Y[r]=y;\n                    V[r]=v+1;\n                }\n                x+=xxx[i];\n                y+=yyy[i];\n            }\n        }\n    }printf(\"-1\");\n}\n\n```",
        "postTime": 1499497708,
        "uid": 7442,
        "name": "\u5de8\u578b\u65b9\u5757",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1649 \u3010[USACO07OCT]\u969c\u788d\u8def\u7ebfObstacle Course\u3011"
    },
    {
        "content": "# **\u62c6\u70b9+\u6700\u77ed\u8def**\n\u4e00\u770b\u9898\u76ee\u5c31\u60f3\u5230\u5206\u5c42\u56fe\u5565\u7684\uff0c\u4e8e\u662f\u4e4e\u5c31\u6109\u5feb\u5730\u62c6\u70b9\u8dd1Dijkstra\u8fc7\u4e86...\n\n\u7136\u540e\u6253\u5f00\u9898\u89e3\u770b\u4e00\u773c\uff0c\u7adf\u7136\u83ab\u5f97\u8fd9\u6837\u5199\u7684\uff0c\u90a3\u5c31\u8d21\u732e\u51fa\u6d1b\u8c37\u7b2c\u4e00\u7bc7\u5904\u5973\u9898\u89e3\u5427\uff08~~\u8f7b\u55b7\uff0c\u8f7bhack~~\uff09\n\n\u8ddf\u4e00\u822c\u7684\u6700\u77ed\u8def\u4e0d\u4e00\u6837\uff0c\u9898\u76ee\u8981\u6c42\u7684\u662f90\u8f6c\u5f2f\u6b21\u6570\u6700\u5c11\u7684\uff0c\u4e0d\u662f\u8def\u5f84\u6700\u77ed\u7684\n\n\u5982\u4e0b\u56fe\u4e2d\u663e\u7136\u6700\u77ed\u8def\u662f\u5f80\u4e0a\u8d70\u7684\u90a3\u6761\uff0c\u4f46\u662f\u8f6c\u5f2f\u7684\u6b21\u6570\u6bd4\u5f80\u53f3\u8fb9\u8d70\u6765\u5f97\u591a\u3002\n\n![\u56fe\u4f8b1](https://cdn.luogu.com.cn/upload/image_hosting/0vrzkt8j.png)\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u91cd\u65b0\u6784\u56fe\uff0c\u5c06\u4e00\u4e2a\u70b9\u62c6\u6210\u56db\u4e2a\u70b9\uff0c\u5206\u522b\u8868\u793a\u5230\u8fbe\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u65f6\u5019\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u56db\u79cd\u72b6\u6001\u3002\n\n\u5728\u5efa\u8fb9\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u76f8\u90bb\u7684\u70b9\uff0c\u5176\u4e2d\u540c\u65b9\u5411\u7684\u70b9\uff08\u8f6c\u5f2f\u89d2\u5ea6\u4e3a0\u00b0/180\u00b0\uff09\u8fde\u4e00\u6761\u6743\u503c\u4e3a0\u7684\u8fb9\uff0c\u800c\u5782\u76f4\u65b9\u5411\u7684\u70b9\uff08\u8f6c\u5f2f\u89d2\u5ea6\u4e3a90\u00b0\uff09\u8fde\u4e00\u6761\u6743\u503c\u4e3a1\u7684\u8fb9\u3002\n\n\u6700\u540e\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9\u8fde\u63a5S\u7684\u56db\u4e2a\u72b6\u6001\u70b9\uff0cT\u7684\u56db\u4e2a\u72b6\u6001\u70b9\u8fde\u63a5\u5230\u8d85\u7ea7\u6c47\u70b9\uff0c\u8dd1\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n##  _**Code**_ \n```cpp\n#include<iostream>\n#include<algorithm>\n#include<set>\n#include<queue>\n#include<deque>\n#include<vector>\n#include<map>\n#include<stack>\n#include<cstdio>\n#include<cstring>\n#include<climits>\n#include<cmath>\n#include<iomanip>\n#define int long long\n#define double long double\nusing namespace std;\n\nconst int INF = 0x3f3f3f3f;\nconst int MAXN = 400+10;  // \u56e0\u4e3a\u8981\u62c6\u6210\u56db\u4e2a\u70b9\uff0c\u6240\u4ee5\u56db\u500d\n\nstruct qNode {\n\tint v;\n\tint c;\n\tqNode(int _v = 0, int _c = 0) : v(_v), c(_c) {}\n\tbool operator < (const qNode &r)const {\n\t\treturn c > r.c;\n\t}\n};\n\nstruct Edge {\n\tint v;\n\tint cost;\n\tEdge(int _v = 0, int _cost = 0) : v(_v), cost(_cost) {}\n};\n\nint n;\nchar g[MAXN][MAXN];  // \u6ce8\u610f\u662fMAXN*MAXN\nvector<Edge>E[MAXN*MAXN];\nbool vis[MAXN*MAXN];\nint dist[MAXN*MAXN];\n\ninline int read() {\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') {\n\t\tif(ch=='-')w=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n\treturn s*w;\n}\n\nvoid Dijkstra(int n, int start) { //\u70b9\u7684\u7f16\u53f7\u4ece1\u5f00\u59cb\n\tmemset(vis, false, sizeof(vis));\n\tmemset(dist, 0x3f, sizeof(dist));\n\tpriority_queue<qNode>que;\n\n\twhile (!que.empty()) {\n\t\tque.pop();\n\t}\n\tdist[start] = 0;\n\tque.push(qNode(start, 0));\n\tqNode tmp;\n\n\twhile (!que.empty()) {\n\t\ttmp = que.top();\n\t\tque.pop();\n\t\tint u = tmp.v;\n\t\tif (vis[u]) {\n\t\t\tcontinue;\n\t\t}\n\t\tvis[u] = true;\n\t\tfor (int i = 0; i < E[u].size(); i++) {\n\t\t\tint v = E[tmp.v][i].v;\n\t\t\tint cost = E[u][i].cost;\n\t\t\tif (!vis[v] && dist[v] > dist[u] + cost) {\n\t\t\t\tdist[v] = dist[u] +cost;\n\t\t\t\tque.push(qNode(v, dist[v]));\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid addEdge(int u, int v, int w) {\n\tE[u].push_back(Edge(v, w));\n}\n\nsigned main() {\n\tn = read();\n\tfor(int i = 1; i <= n; i++) {\n\t\tfor(int j = 1; j <= n; j++) {\n\t\t\tcin >> g[i][j];\n\t\t}\n\t}\n\tint st, ed;\n\tfor(int i = 1; i <= n; i++) {\n\t\tfor(int j = 1; j <= n; j++) {\n\t\t\tif(g[i][j] == '.' || g[i][j] == 'A' || g[i][j] == 'B') {\n\t\t\t\tint now = (i-1)*n+j;\n\t\t\t\t// 1~n*n \u4e0a n*n+1~2*n*n \u4e0b 2*n*n+1~3*n*n \u5de6 3*n*n+1~4*n*n \u53f3\n\t\t\t\tif(i-1 >= 1 && (g[i-1][j] == '.' || g[i-1][j] == 'A' || g[i-1][j] == 'B')) {\n\t\t\t\t\taddEdge(now+n*n, n*n+(i-2)*n+j, 0);\n\t\t\t\t\taddEdge(now, n*n+(i-2)*n+j, 0);\n\t\t\t\t\taddEdge(now+2*n*n, n*n+(i-2)*n+j, 1);\n\t\t\t\t\taddEdge(now+3*n*n, n*n+(i-2)*n+j, 1);\n\t\t\t\t}\n\t\t\t\tif(i+1 <= n && (g[i+1][j] == '.' || g[i+1][j] == 'A' || g[i+1][j] == 'B')) {\n\t\t\t\t\taddEdge(now, i*n+j, 0);\n\t\t\t\t\taddEdge(now+n*n, i*n+j, 0);\n\t\t\t\t\taddEdge(now+2*n*n, i*n+j, 1);\n\t\t\t\t\taddEdge(now+3*n*n, i*n+j, 1);\n\t\t\t\t}\n\t\t\t\tif(j-1 >= 1 && (g[i][j-1] == '.' || g[i][j-1] == 'A' || g[i][j-1] == 'B')){\n\t\t\t\t\taddEdge(now+3*n*n, 3*n*n+(i-1)*n+j-1, 0);\n\t\t\t\t\taddEdge(now+2*n*n, 3*n*n+(i-1)*n+j-1, 0);\n\t\t\t\t\taddEdge(now+n*n, 3*n*n+(i-1)*n+j-1, 1);\n\t\t\t\t\taddEdge(now, 3*n*n+(i-1)*n+j-1, 1);\n\t\t\t\t}\n\t\t\t\tif(j+1 <= n && (g[i][j+1] == '.' || g[i][j+1] == 'A' || g[i][j+1] == 'B')){\n\t\t\t\t\taddEdge(now+2*n*n, 2*n*n+(i-1)*n+j+1, 0);\n\t\t\t\t\taddEdge(now+3*n*n, 2*n*n+(i-1)*n+j+1, 0);\n\t\t\t\t\taddEdge(now+n*n, 2*n*n+(i-1)*n+j+1, 1);\n\t\t\t\t\taddEdge(now, 2*n*n+(i-1)*n+j+1, 1);\n\t\t\t\t}\n\t\t\t\tif(g[i][j] == 'A') st = (i-1)*n+j;\n\t\t\t\telse if(g[i][j] == 'B') ed = (i-1)*n+j;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 0; i < 4; i++) addEdge(0, st+i*n*n, 0);\n\tfor(int i = 0; i < 4; i++) addEdge(ed+i*n*n, 4*n*n+1, 0);\n\tDijkstra(4*n*n+1, 0);\n\tcout << (dist[4*n*n+1]>=INF?-1:dist[4*n*n+1]) << endl;\n\treturn 0;\n}\n\n```\n\n\u3010\u611f\u8c22\u89c2\u770b\u3011",
        "postTime": 1568256742,
        "uid": 149730,
        "name": "\u6768\u5148\u8fbe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1649 \u3010[USACO07OCT]\u969c\u788d\u8def\u7ebfObstacle Course\u3011"
    },
    {
        "content": "\u770b\u4e00\u773c\u89c9\u5f97\u662f\u4e00\u9053bfs\u88f8\u9898\uff0c\u672c\u6765\u60f3\u79d2\u6389\u6765\u7740\n\nbut\n\n## \u6211\u809d\u4e86\u4e00\u665a\u4e0a\uff1f\uff1f\uff1f\n\n\u8ddf\u666e\u901a\u7684bfs\u4e0d\u592a\u4e00\u6837\u5462\uff0c\u9700\u8981\u5168\u6269\u5c55\u6389\uff0c\n\n\u4e0d\u591a\u8bf4\uff0c\u770b\u4ee3\u7801\u5427\uff01\n\n\uff08\u6b63\u5728\u6539\u8fdb\u7801\u98ce\uff09\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<queue>\n#include<algorithm>\n\nusing namespace std;\n\ninline int read ()\n{\n    int f = 1, x = 0;\n\tchar ch;\n    do {ch = getchar (); if (ch== '-') f = -1;} while (ch < '0' || ch > '9');\n    do {x = x * 10 + ch - '0'; ch = getchar ();} while (ch >= '0' && ch <= '9');\n    return f * x;\n}\n\nstruct node\n{\n\tint x, y;\n} ;\n\nqueue <node> q;\n\nint n;\nint fx[4] = {1, -1, 0, 0};\nint fy[4] = {0, 0, 1, -1};\nbool map[101][101];\nint s[101][101];\nint qx, qy, zx, zy;\n\nvoid GET_in ()\n{   \n    char pg;\n\tfor (int i = 0; i < n; i ++)\n\t for (int j = 0; j < n; j ++)\n\t {\n\t \tcin >> pg;\n\t \tif (pg == 'x') map[i][j] = true;\n\t \tif (pg == 'A') qx = i, qy = j;\n\t \tif (pg == 'B') zx = i, zy = j;\n\t }\n}\n\nbool check(int x, int y)\n{\n    if ((x >= 0) && (x < n) && (y >= 0) && (y < n) && (!map[x][y]))\n    return true;\n    return false;\n}\n\nvoid bfs ()\n{\n\tmemset (s, 0x3f, sizeof (s));\n\ts[qx][qy] = 0;\n\tnode start;\n\tstart.x = qx, start.y = qy;\n\tq.push (start);\n\twhile (!q.empty ())\n\t{\n\t\tnode now = q.front (); q.pop ();\n\t\tif ((now.x == zx) && (now.y == zy)) return ;\n\t\tnode now2;\n\t\tfor (int i = 0; i < 4; i ++)\n\t\t{\n\t\t\tnow2.x = now.x + fx[i], now2.y = now.y + fy[i];\n\t\t\twhile (check (now2.x, now2.y))\n\t\t\t{\n\t\t\t\tif (s[now2.x][now2.y] > s[now.x][now.y] + 1)\n\t\t\t\t{\n\t\t\t\t\ts[now2.x][now2.y] = s[now.x][now.y] + 1;\n\t\t            q.push (now2);\n\t\t\t\t}\n\t\t\t\tnow2.x += fx[i], now2.y += fy[i];\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main ()\n{\n\tn = read ();\n\tGET_in ();\n\tbfs ();\n\tif (s[zx][zy] == 1061109567) printf (\"-1\"); //\u5173\u4e8e0x3f\n\telse printf (\"%d\", s[zx][zy] - 1);\n\treturn 0;\n}\n```\n",
        "postTime": 1551540379,
        "uid": 136006,
        "name": "s_Shot\u10e6Maki",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1649 \u3010[USACO07OCT]\u969c\u788d\u8def\u7ebfObstacle Course\u3011"
    },
    {
        "content": "**spfa**\n~~\u8fd9\u9053\u9898\u6807\u7b7e\u662fspfa\uff0c\u90a3\u5c31\u7528spfa\u505a\u5427~~\n\u8fd9\u9053\u9898\u5f88\u660e\u663e\u662f\u4e00\u4e2a\u6700\u77ed\u8def\u7684\u601d\u60f3\uff0c\u4f46\u95ee\u9898\u662f\u600e\u4e48spfa\u3002\n\u9996\u5148\uff0c\u8fd9\u9053\u9898\u5f88\u660e\u663e\u4e0d\u80fd\u7528\u4e00\u822c\u7684bfs\uff0c\u56e0\u4e3a\u6c42\u7684\u4e0d\u662f\u6700\u5c11\u6b65\u6570\u800c\u662f\u6700\u5c11\u8f6c\u5f2f\u6b21\u6570\uff0c\u6bcf\u4e2a\u70b9\u7684\u503c\u90fd\u4e0d\u540c\uff0c\u4e14\u65e0\u6cd5\u786e\u5b9a\uff0c\u90a3\u53ea\u80fd\u7528spfa\u3002\nspfa\u7684\u65f6\u5019\u8fd8\u8981\u8003\u5bdf\u65b9\u5411\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u65b9\u5411\u6765\u7684\u8f6c\u5f2f\u6b21\u6570\u6709\u53ef\u80fd\u4e0d\u540c\u3002\n\u6240\u4ee5\u6570\u7ec4\u8981\u52a0\u591a\u4e00\u7ef4\u6765\u8bb0\u5f55\u65b9\u5411\u3002\n~~\u597d\u4e86\uff0c\u4e0d\u8bf4\u5e9f\u8bdd\u4e86\uff0c\u4e0a\u4ee3\u7801~~\n```\n#include<iostream>\n#include<queue>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\n\nconst int dx[4]={0,1,0,-1},dy[4]={1,0,-1,0};\nconst int INF=99999999;\n\nint n,head,tail,sx,sy,ex,ey,c,ans=INF;\n\nstruct point{\n    int x,y,dt;\n}a;\n\nint dis[105][105][5],vis[105][105][5];//\u52a0\u4e00\u7ef4\u8bb0\u5f55\u65b9\u5411\nint map[105][105];\nqueue<point>que;\n\nint main(){\n    cin>>n;\n    for(int i=1;i<=n;i++){\n      for(int j=1;j<=n;j++){\n      \tchar ch;\n      \tcin>>ch;\n        if(ch=='A') sx=i,sy=j;\n        if(ch=='B') ex=i,ey=j;\n        if(ch=='x') map[i][j]=1;\n       }\n    }//\u8fd9\u9053\u9898\u6709\u5751\uff0c\u8bfb\u5165\u7684\u65f6\u5019\u662f\u6709\u7a7a\u683c\u7684\u3002\u3002\u3002\n    \n    \n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=n;j++)\n        for(int k=0;k<4;k++)\n          dis[i][j][k]=INF;\n    \n    \n    for(int i=0;i<4;i++){\n        int xx=sx+dx[i],yy=sy+dy[i];\n        if(xx<=0||yy<=0||xx>n||yy>n||map[xx][yy])continue;\n        vis[xx][yy][i]=1;\n        a.x=xx,a.y=yy,a.dt=i;\n        que.push(a);\n        dis[xx][yy][i]=0;\n    }//\u4ece\u8d77\u70b9\u5411\u56db\u4e2a\u65b9\u5411\u62d3\u5c55\n    \n    \n    while(!que.empty()){//spfa\n        point t=que.front();que.pop();\n        int tx=t.x,ty=t.y;\n        for(int i=0;i<4;i++){\n            int xx=tx+dx[i],yy=ty+dy[i];\n            \n            if(xx<=0||yy<=0||xx>n||yy>n||map[xx][yy])continue;//\u8d8a\u754c\n            \n            if(t.dt==i) c=0;else c=1;//\u540c\u65b9\u5411\u8f6c\u5f2f\u6b21\u6570\u5c31\u4e3a0\uff0c\u53cd\u4e4b\u4e3a1\n            if(dis[xx][yy][i]>dis[tx][ty][t.dt]+c){\n                dis[xx][yy][i]=dis[tx][ty][t.dt]+c;\n                if(!vis[xx][yy][i]){\n                    a.x=xx,a.y=yy,a.dt=i;\n                    que.push(a);\n                    vis[xx][yy][i]=1;\n                }\n            }\n        }\n        vis[tx][ty][t.dt]=0;\n    }\n    \n    for(int i=0;i<4;i++)\n      ans=min(ans,dis[ex][ey][i]);//\u770b\u770b\u56db\u4e2a\u65b9\u5411\u7684\u7b54\u6848\n    \n    if(ans==INF)cout<<\"-1\\n\";//\u5230\u4e0d\u4e86\u5c31-1\n    else cout<<ans<<endl;\n    \n    return 0;\n}\n```\n~~~~ ",
        "postTime": 1524807472,
        "uid": 78567,
        "name": "\u3055\u3087\u306a\u3061",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1649 \u3010[USACO07OCT]\u969c\u788d\u8def\u7ebfObstacle Course\u3011"
    },
    {
        "content": "\u8fd9\u9898\uff0c\u5176\u5b9e\u548c**P2937**\u8fd8\u662f\u5f88\u50cf\u7684\uff0c\u57fa\u672c\u662f\u4e00\u6a21\u4e00\u6837\u7684\u4ee3\u7801\u3002\n\n\u548cP2937\u4e00\u6837\uff0c\u4e5f\u662f\u5178\u578b\u768401\u6700\u77ed\u8def\u95ee\u9898\uff0c\u6bd4\u8f83\u597d\u7684\u65b9\u6cd5\u662f\u7528bfs\u3002\u6211\u770b\u9898\u89e3\u91cc\u6ca1\u591a\u5c11\u7528dfs\u7684\uff0c\u8fd9\u91cc\u7528\u7684dfs\u6c42\uff0c\u4e3b\u8981\u4e5f\u662f\u60f3\u7ec3\u4e60\u7206\u641c\uff08\u96fe\uff09\u3002\n\n\u9996\u5148\u8003\u8651dfs\uff0c\u5982\u679c\u8981\u6362\u65b9\u5411\u5c31\u628a\u7b54\u6848$+1$\uff0c\u53cd\u6b63\u53ea\u8981\u6362\u65b9\u5411\u4e86\u80af\u5b9a\u9700\u8981\u4e00\u4e2a+1\u3002\u5230\u8fbeB\u7684\u65f6\u5019\u66f4\u65b0\u7b54\u6848\uff0c\u53d6\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u6bcf\u6b21\u641c\u7684\u65f6\u5019\u6309\u7167\u4e4b\u524d\u7684\u65b9\u5411\u641c\uff0c\u7136\u540e\u518d\u5c1d\u8bd5\u5176\u4ed6\u65b9\u5411\u641c\u3002\u8fd9\u6837\u80fd\u5c3d\u5feb\u627e\u5230\u6700\u4f18\u89e3\u3002\n\n\u4f46\u662f\u4ecd\u7136\u4f1aTLE\u3002\u8003\u8651\u4f7f\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u3002\u4ee4$dp[x][y][direct]$\u4e3a\u8868\u793a\u5230\u70b9$(x,y)$\u5e76\u4e14\u524d\u4e00\u6b21\u8f6c\u5f2f\u4f4d$direct$\u65f6\u6700\u5c0f\u8f6c\u5f2f\u6b21\u6570\u3002\n\n```cpp\n#include <stdio.h>\n#include <iostream>\n#include <memory.h>\nusing namespace std;\nint tox[5]={0,1,0,-1,0},toy[5]={0,0,1,0,-1};\nint n,m,s(9999999),cnt,dp[501][501][5];\nchar a[501][501];\nbool vis[501][501];\nvoid dfs(int x,int y,int direct,int times)//x,y\u5750\u6807\uff0cdirect\u65b9\u5411\uff0ctimes\u8f6c\u5f2f\u6b21\u6570 \n{\n\tif(direct!=-1 && dp[x][y][direct]<=times) return;\n\tif(direct!=-1) dp[x][y][direct]=times;//\u8bb0\u5f55\u6700\u4f18\u89e3 \n\tif(a[x][y]=='B')//\u5230\u8fbe\u7ec8\u70b9 \n\t{\n\t\ts=min(s,times);\n\t\treturn;\n\t}\n\tregister int i,j,x1,y1;\n\tif(direct!=-1)//\u5148\u540c\u65b9\u5411\u641c\u7d22 \n\t{\n\t\tx1=x+tox[direct];\n\t\ty1=y+toy[direct];\n\t\tif(x1>=1 && x1<=n && y1>=1 && y1<=n && vis[x1][y1]==0 && a[x1][y1]!='x')\n\t\t{\n\t\t\tvis[x1][y1]=1;\n\t\t\tdfs(x1,y1,direct,times);//\u80af\u5b9a\u65b9\u5411\u76f8\u540c\uff0c\u4e0d\u7528\u62d0\u5f2f \n\t\t\tvis[x1][y1]=0;\n\t\t}\n\t}\n\tfor(i=1;i<=4;i++)//\u679a\u4e3e\u65b9\u5411 \n\t{\n\t\tif(i!=direct)\n\t\t{\n\t\t\tx1=x+tox[i];\n\t\t\ty1=y+toy[i];\n\t\t\tif(x1>=1 && x1<=n && y1>=1 && y1<=n && vis[x1][y1]==0 && a[x1][y1]!='x')\n\t\t\t{\n\t\t\t\tvis[x1][y1]=1;\n\t\t\t\tif(direct!=-1)//\u6362\u4e00\u4e2a\u65b9\u5411\u5c31\u8981\u52a0\u8f6c\u4e2a\u5f2f \n\t\t\t\t\tdfs(x1,y1,i,times+1);\n\t\t\t\telse//\u5982\u679c\u7b49\u4e8e-1\u7684\u8bdd\uff0c\u8fd8\u662f\u610f\u5473\u7740\u540c\u65b9\u5411\u3002\u8fd9\u4e2a\u7279\u5224\u4e3b\u8981\u9488\u5bf9\u4e8e\u4e00\u5f00\u59cb\u600e\u4e48\u8d70 \n\t\t\t\t\tdfs(x1,y1,i,times);\n\t\t\t\tvis[x1][y1]=0;\n\t\t\t}\n\t\t}\n\t}\n}\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\tregister int i,j,k;\n\tcin>>n;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tfor(j=1;j<=n;j++)\n\t\t{\n\t\t\tcin>>a[i][j];\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tfor(j=1;j<=n;j++)\n\t\t{\n\t\t\tif(a[i][j]=='A')//\u8d77\u70b9 \n\t\t\t{\n\t\t\t\tmemset(dp,999999,sizeof(dp));\n\t\t\t\tvis[i][j]=1;\n\t\t\t\tdfs(i,j,-1,0);//\u7531\u4e8e\u4e00\u5f00\u59cb\u4e0d\u597d\u786e\u5b9a\u65b9\u5411\u6240\u4ee5direct\u5148\u4e3a-1 \n\t\t\t\tif(s==9999999)\n\t\t\t\t\tcout<<-1<<endl;\n\t\t\t\telse\n\t\t\t\t\tcout<<s<<endl;\n\t\t\t\treturn 0; \n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1564324671,
        "uid": 72255,
        "name": "Apro1066",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1649 \u3010[USACO07OCT]\u969c\u788d\u8def\u7ebfObstacle Course\u3011"
    },
    {
        "content": "# \u849f\u84bb\u7684Dijkstra\n\u521a\u521a\u770b\u4e86dalao\u4eec\u7684\u6d2a\u6c34\u586b\u5145\uff0c\u849f\u84bb\u7684\u6211\u745f\u745f\u53d1\u6296(tql+orz).....\u666e\u901abfs\u5728\u8dd1\u56fe\u65f6\u641c\u70b9\u8bb0\u5f55\u7684\u662f\u6700\u77ed\u8def\u5f84\uff08\u6269\u5c55\u5c42\u6570\uff09\uff0c\u672c\u9898\u8981\u6c42\u8f93\u51fa\u6700\u5c0f\u8f6c\u5f2f\u6b21\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u6a21\u4effdijkstra+\u5806\u4f18\u5316\u5c06\u8f6c\u5f2f\u6570\u4fdd\u5b58\u5728\u5c0f\u6839\u5806\u4e2d\u7136\u540e\u8dd1dijkstra\uff0c\n\u7531\u4e8e\u5806\u9876\u59cb\u7ec8\u6700\u5c0f\uff0c\u6240\u4ee5\u5728bfs\u8dd1\u5230\u65f6\u5c31\u80fd\u5f97\u51fa\u6211\u4eec\u7684\u7b54\u6848\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nchar a[109][109];\nint book[109][109];\nint flag=99999;\nint nx[4]= {1,0,-1,0};\nint ny[4]= {0,-1,0,1};\nint s1,s2;\nint e1,e2;\nstruct node\n{\n    int px=0;\n    int py=0;\n    int x=0;\n    int y=0;\n    int w=0;\n    friend bool operator < (node a,node b)//\u5c0f\u6839\u5806\n    {\n        return a.w>b.w;\n    }\n};\nint w;\npriority_queue<node> q;\nint m,n;\nvoid bfs()//dijkstra\n{\n    node fir;\n    fir.x=s1;\n    fir.y=s2;\n    q.push(fir);\n    book[s1][s2]=1;\n    while(!q.empty())\n    {\n        node now=q.top();\n        q.pop();\n        book[now.x][now.y]=1;\n        if(now.x==e1&&now.y==e2)\n        {\n            //if(now.w<=flag)\n            {\n            flag=now.w;\n            break;\n            //return;\n            }\n        }\n        for(int i=0; i<4; i++)\n        {\n            int tx=now.x+nx[i];\n            int ty=now.y+ny[i];\n            if(tx<1||tx>m||ty<1||ty>m)\n                continue;\n            if(a[tx][ty]=='x')\n                continue;\n            if(book[tx][ty]==1)\n                continue;\n            if((tx-now.x)*(now.x-now.px)+(ty-now.y)*(now.y-now.py)==0)\n            {\n                node next;\n                next.x=tx;\n                next.y=ty;\n                next.px=now.x;\n                next.py=now.y;\n                next.w=now.w+1;\n                q.push(next);\n          \n            }\n            else\n            {\n                node next;\n                next.x=tx;\n                next.y=ty;\n                next.px=now.x;\n                next.py=now.y;\n                next.w=now.w;\n                q.push(next);\n                \n            }\n        }\n    }\n}\nint main()\n{\n    cin>>m;\n    memset(a,-1,sizeof(a));\n    int x,y;\n    int z;\n    for(int i=1; i<=m; i++)\n        for(int j=1; j<=m; j++)\n        {\n            char c;\n            cin>>c;\n            if(c=='A')\n            {\n                s1=i;\n                s2=j;\n            }\n            if(c=='B')\n            {\n                e1=i;\n                e2=j;\n            }\n            a[i][j]=c;\n        }\n    bfs();\n    if(flag==99999)\n        cout<<-1;\n    else\n        cout<<flag;\n    return 0;\n}\n```\n",
        "postTime": 1573142144,
        "uid": 195728,
        "name": "Remarkableboy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1649 \u3010[USACO07OCT]\u969c\u788d\u8def\u7ebfObstacle Course\u3011"
    },
    {
        "content": "## \u8fd9\u9898\u662fBFS~~\u5427~~\n\n\u8fd9\u9898\u4e3b\u8981\u662f\u8981\u8bb0\u5f55\u79fb\u52a8\u65b9\u5411\u7684\u53d8\u5316\uff0c\u4ece\u800c\u5f97\u51fa\u8f6c\u5f2f\u7684\u6b21\u6570\u3002\u5f88\u663e\u7136\uff0c\u5982\u679c\u67d0\u4e00\u6b21\u6269\u5c55\u7684\u65b9\u5411\u4e0e\u8fd9\u6b21\u6269\u5c55\u4e4b\u524d\u7684\u6269\u5c55\u65b9\u5411\u4e0d\u4e00\u81f4\u7684\u8bdd\uff0c\u8f6c\u5411\u6b21\u6570\u5c31\u662f\u4e0a\u4e00\u8282\u70b9\u7684\u8f6c\u5f2f\u6b21\u6570+1\u4e86\u3002\n\n\u4f46\u662f\uff0c\u5982\u4f55\u5224\u65ad\u662f\u5426\u4e00\u81f4\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u60f3\u5230\uff0c\u5728\u6269\u5c55\u7684\u8282\u70b9\u4e2d\u65b0\u589e\u4e00\u4e2a\u72b6\u6001$f$\u8868\u793a\u65b9\u5411,\u6bcf\u6b21\u6bd4\u8f83\u8fd9\u4e2a\u65b9\u5411\u5c31\u884c\u4e86\u3002\u4e0d\u8fc7\u5982\u679c\u7528\u4e00\u4e2a\u6570\u5b57\u6765\u8868\u793a\u65b9\u5411\u4f1a\u6709\u70b9\u9ebb\u70e6\uff0c\u56e0\u4e3a\u4e00\u822c\u8282\u70b9\u6269\u5c55\u65f6\u6211\u4eec\u662f\u7528$dx[]$\u548c$dy[]$\u4e24\u4e2a\u65b9\u5411\u6570\u7ec4\u6765\u63a7\u5236\u79fb\u52a8\u7684\uff0c\u82e5\u8981\u628a$dx[]$\u548c$dy[]$\u8f6c\u6362\u6210$1\u30012\u30013\u30014$\u7684\u8fd9\u7c7b\u6570\u5b57\u7684\u8bdd\u7740\u5b9e~~\u4e0d\u4f18\u96c5~~\u9ebb\u70e6,\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u628a\u65b9\u5411\u8868\u793a\u6210\u548c$dx[]$\u548c$dy[]$\u4e00\u6837\u7684\u5f62\u5f0f(\u4e5f\u5c31\u662f{-1,0},{1,0},{0,-1},{0,1})\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5feb\u901f\u5224\u65ad\u4e86\n\n\u8fd8\u6709\uff0c\u8fd9\u6837\u505a\u4f1a\u4f7f\u67d0\u4e2a\u70b9\u591a\u6b21\u88ab\u8bbf\u95ee\u5230\uff08\u6700\u591a4\u6b21\uff0c\u5206\u522b\u4e3a\u8fd9\u4e2a\u70b9\u7684\u4e0a\uff0c\u4e0b\uff0c\u5de6\uff0c\u53f3\u7684\u76f8\u90bb\u70b9\u8bbf\u95ee\u800c\u6765\uff09\uff0c\u6240\u4ee5\u5728\u66f4\u65b0\u8fd9\u4e2a\u70b9\u4e4b\u524d\u8981\u5224\u65ad\u5f53\u524d\u662f\u5426\u6bd4\u6b64\u6b21\u66f4\u65b0\u8981\u597d\n\ncode:\n```cpp\n#include<iostream>\n#include<queue>\n#include<cstring>\n#define debug for(int i(1);i<=n;++i){for(int j(1);j<=n;++j){cout<<vis[i][j]<<\" \";}cout<<endl;}\nusing namespace std;\nconst int N(110);\nstruct node\n{\n    int x,y,turn,fx,fy;\n};\nint n,sx,sy,ex,ey,vis[N][N],ans(1<<30);\nchar a[N][N],dx[]={-1,1,0,0},dy[]={0,0,-1,1};\nvoid bfs(int wayx,int wayy)\n{\n    queue<node>que;\n    que.push((node){sx,sy,0,wayx,wayy});\n    vis[sx][sy]=0;//\u521d\u59cb\u5316\n    while(que.size())\n    {\n        node now(que.front());\n        que.pop();\n        if(now.turn>=ans)\n            continue;//\u5982\u679c\u5f53\u524d\u7684\u6b21\u6570\u90fd\u5df2\u7ecf\u5927\u4e8e\u7b49\u4e8e\u5df2\u77e5\u7b54\u6848\u4e86\uff0c\u90a3\u4e48\u4e5f\u5c31\u6ca1\u6709\u5fc5\u8981\u518d\u641c\u7d22\u4e0b\u53bb\u4e86\n        for(int i(0);i<4;++i)\n        {\n            int fx(now.x+dx[i]),fy(now.y+dy[i]);\n            if(fx<1 || fx>n || fy<1 || fy>n || a[fx][fy]=='x')\n                continue;\n            if(vis[fx][fy])//\u5982\u679c\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\u4e86\uff0c\u5c31\u6bd4\u8f83\u8fd9\u6b21\u8bbf\u95ee\u548c\u4e4b\u524d\u90a3\u4e00\u6b21\u8bbf\u95ee\u8c01\u7684\u8f6c\u5f2f\u6b21\u6570\u66f4\u5c11\n            {\n                int pd(now.turn);\n                if(dx[i]!=now.fx || dy[i]!=now.fy)//\u4e0d\u662f\u540c\u4e2a\u65b9\u5411\u6b21\u6570\u5c31\u8981+1\n                    ++pd;\n                if(pd<vis[fx][fy])//\u9009\u62e9\u66f4\u597d\u7684\u89e3\n                    vis[fx][fy]=pd,\n                    que.push((node){fx,fy,pd,dx[i],dy[i]});\n            }\n            else//\u5982\u679c\u6ca1\u6709\u8bbf\u95ee\u8fc7\u8fd9\u4e2a\u70b9\u5c31\u76f4\u63a5\u66f4\u65b0\u5b83\n            {\n                int pd(now.turn);\n                if(dx[i]!=now.fx || dy[i]!=now.fy)\n                    ++pd;\n                vis[fx][fy]=pd;\n                que.push((node){fx,fy,pd,dx[i],dy[i]});\n            }\n        }\n    }\n    if(vis[ex][ey])//\u5f53\u7ec8\u70b9\u88ab\u5230\u8fbe\u8fc7\u65f6\u624d\u6765\u66f4\u65b0ans\n        ans=ans<vis[ex][ey]?ans:vis[ex][ey];\n    return ;\n}\nint main()\n{\n    ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);\n    cin>>n;\n    for(register int i(1);i<=n;++i)\n    {\n        for(register int j(1);j<=n;++j)\n        {\n            cin>>a[i][j];\n            if(a[i][j]=='A')//\u8bb0\u5f55\u5f00\u59cb\u70b9\n                sx=i,sy=j;\n            else if(a[i][j]=='B')//\u8bb0\u5f55\u7ed3\u675f\u70b9\n                ex=i,ey=j;\n        }\n    }\n    for(int i(0);i<4;++i)\n        memset(vis,0,sizeof(vis)),\n        bfs(dx[i],dy[i]);//\u7531\u4e8e\u5f00\u59cb\u65f6\u7684\u65b9\u5411\u662f\u4efb\u610f\u7684\uff0c\u6240\u4ee5\u9700\u8981\u56db\u4e2a\u65b9\u5411\u90fd\u8bd5\u4e00\u904d\n    if(ans==1<<30)\n        cout<<-1<<endl;\n    else\n        cout<<ans<<endl;//\u6700\u7ec8\u7684\u7b54\u6848\n    return 0;\n}\n\n```",
        "postTime": 1559972114,
        "uid": 108716,
        "name": "Number_Two",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1649 \u3010[USACO07OCT]\u969c\u788d\u8def\u7ebfObstacle Course\u3011"
    },
    {
        "content": "### \u53d1\u4e00\u4e2a\u4e0d\u4e00\u6837\u7684\u9898\u89e3\n#### \u7b97\u6cd5:\n\u6807\u7b7e\u662fspfa\u6216DP\uff0c\u6709\u7684\u4eba\u7528spfa\uff0c\u6709\u7684\u4eba\u7528bfs\uff0c\u6709\u7684\u4eba\u7528dfs\uff0c\u53ef\u6211\u7528\u7684\u5c45\u7136\u662f\u7528\u53cc\u7aef\u961f\u5217\u4f18\u5316\u7684Dijkstra\u3002\n\n#### \u601d\u8def\uff1a\n\u8fd9\u4e00\u9898\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u6700\u77ed\u8def\u3002\u5bf9\u4e8e\u67d0\u4e2a\u70b9\uff0c\u5b83\u6709\u56db\u79cd\u72b6\u6001\uff0c\u9762\u5bf9\u524d\u3001\u540e\u3001\u5de6\u3001\u53f3\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u70b9\u5206\u6210\u56db\u4e2a\u70b9\u3002\n\n\u7531\u4e8e\u6211\u4eec\u8981\u6c42\u7684\u4e0d\u662f\u6700\u8981\u9700\u8981\u591a\u5c11\u6b65\uff0c\u800c\u662f\u6700\u8981\u9700\u8981\u62d0\u591a\u5c11\u5f2f\uff0c\u6240\u4ee5\u8fb9\u6743\u6709\u4e24\u79cd\uff0c0(\u4e0d\u62d0\u5f2f)\u548c1(\u62d0\u5f2f)\u3002\u6b64\u65f6\uff0c\u7528\u666e\u901a\u7684bfs\u5c31\u4e0d\u884c\u4e86\uff0c\u53ef\u4ee5\u6539\u6210spfa\u3002(\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\uff1ak\u00b7n^2,k\u4e3a\u5c0f\u5e38\u6570\uff0c\u6700\u574f\u53ef\u8fben^2)\u3002\n\n\u7528spfa\u7b97\u6cd5\u4f1a\u4f7f\u4e00\u4e2a\u70b9\u88ab\u6269\u5f20\u591a\u6b21\uff0c\u4f7f\u6548\u7387\u964d\u4f4e\u3002\u4f46\u6700\u77ed\u8def\u8fd8\u6709\u53e6\u4e00\u4e2a\u66f4\u9ad8\u6548\u7684Dijkstra\u7b97\u6cd5\u3002\u6734\u7d20\u7684Dijkstra\u7b97\u6cd5\u662f\u70b9\u6570\u7684\u5e73\u65b9\uff0c\u4e00\u822c\u53ef\u4ee5\u52a0\u5806\u4f18\u5316\u3002\u4f46\u5806\u4f18\u5316\u4f1a\u589e\u52a0\u4e00\u4e2alog\uff0c\u5728\u8fd9\u4e00\u9898\u4f1a\u5f97\u4e0d\u507f\u5931(\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\uff1an^2\u00b7logn^2\uff0clogn^2\u4e3a\u5806\u7684\u65f6\u95f4)\u3002\n\n\u4e0d\u8fc7\uff0c\u8fd9\u4e00\u9898\u7684\u8fb9\u6743\u4e0d\u662f\u4e3a\u96f6\u5c31\u662f\u4e00\uff0c\u5e76\u4e0d\u8981\u7528\u5806\uff0c\u7528\u53cc\u7aef\u961f\u5217\u5c31\u884c\u3002\u5728\u666e\u901abfs\u961f\u5217\u91cc\uff0c\u6309\u5c42\u6269\u5f20\uff0c\u5c42\u6570\u53ea\u6709\u4e24\u5c42\uff0c\u6b63\u5728\u6269\u5f20\u5c42\u548c\u6269\u5f20\u5c42\u7684\u4e0b\u4e00\u5c42\uff0c\u800c\u4e14\u6b63\u5728\u6269\u5f20\u5c42\u5728\u961f\u5217\u4e2d\u5168\u90e8\u5728\u4e0b\u4e00\u5c42\u7684\u524d\u9762\u3002\u5982\u679c\u6539\u6210\u53cc\u7aef\u961f\u5217\uff0c\u8fb9\u6743\u4e3a\u96f6\u8bf4\u660e\u65b0\u6269\u5f20\u7684\u7ed3\u70b9\u548c\u6269\u5f20\u5b83\u7684\u7ed3\u70b9\u5728\u540c\u4e00\u5c42\uff0c\u4ece\u961f\u5934\u5165\u961f\uff1b\u5426\u5219\uff0c\u4ece\u961f\u5c3e\u5165\u961f\u3002\u8fd9\u6837\uff0c\u5f53\u4e00\u4e2a\u70b9\u7b2c\u4e00\u6b21\u88ab\u53d6\u51fa\u65f6\uff0c\u5b83\u79bb\u8d77\u70b9\u7684\u8ddd\u79bb\u5c31\u5b83\u79bb\u8d77\u70b9\u7684\u6700\u77ed\u8def(\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\uff1an^2)\u3002\n\n### code:\n\u53cc\u7aef\u961f\u5217Dijkstra:\n```cpp\n#include<queue>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nconst int dx[4]={1,0,-1,0},dy[4]={0,1,0,-1};//\u56db\u4e2a\u65b9\u5411\nchar a[110][110];//\u539f\u5730\u56fe\nint v[110][110][4];//\u62c6\u70b9\u540e\u7684\u5355\u6e90\u6700\u77ed\u8def\nbool b[110][110][4];//\u8bb0\u5f55\u662f\u5426\u88ab\u53d6\u51fa\nstruct node{\n\tint x,y,f;\n};\ndeque<node>q;//STL\u4e2d\u7684\u53cc\u7aef\u961f\u5217\nint main()\n{\n\tmemset(v,0x3f,sizeof(v));//\u6700\u77ed\u8def\u521d\u503c\u4e3ainf\n\tint n,sx,sy,tx,ty;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tcin>>a[i][j];\n\t\t\tif(a[i][j]=='A')//\u8d77\u70b9\n\t\t\t{\n\t\t\t\tsx=i;\n\t\t\t\tsy=j;\n\t\t\t}\n\t\t\telse if(a[i][j]=='B')//\u7ec8\u70b9\n\t\t\t{\n\t\t\t\ta[i][j]='.';\n\t\t\t\ttx=i;\n\t\t\t\tty=j;\n\t\t\t}\n\t\t}\n\tfor(int k=0;k<4;k++)//\u5c06\u8d77\u70b9\u5165\u961f\n\t\tq.push_back((node){sx,sy,k}),v[sx][sy][k]=0;\n\twhile(!q.empty())\\\\dijkstra\n\t{\n\t\tnode x=q.front();\n\t\tq.pop_front();\n\t\tif(x.x==tx&&x.y==ty)//\u7ec8\u70b9\u88ab\u53d6\u51fa\uff0c\u5f97\u5230\u7b54\u6848\n\t\t{\n\t\t\tprintf(\"%d\\n\",v[x.x][x.y][x.f]);\n\t\t\treturn 0;\n\t\t}\n\t\tif(b[x.x][x.y][x.f])continue;//\u88ab\u53d6\u51fa\u8fc7\uff0ccontinue\n\t\tb[x.x][x.y][x.f]=1;\n\t\tfor(int i=0;i<4;i++)//\u679a\u4e3e\u56db\u4e2a\u65b9\u5411\n\t\t{\n\t\t\tint x1=x.x+dx[i],y1=x.y+dy[i];\n\t\t\tif(a[x1][y1]=='.'/*\u8d8a\u754c\u5373\u4e3a\u7a7a\u5b57\u7b26*/&&v[x.x][x.y][x.f]+(x.f!=i)<v[x1][y1][i])\n\t\t\t{\n\t\t\t\tv[x1][y1][i]=v[x.x][x.y][x.f]+(i!=x.f);\n\t\t\t\tif(i==x.f)q.push_front((node){x1,y1,i});//\u8fb9\u6743\u4e3a\u96f6,\u4ece\u961f\u5934\u5165\u961f\u3002\n\t\t\t\telse q.push_back((node){x1,y1,i});//\u5426\u5219\uff0c\u4ece\u961f\u5c3e\u5165\u961f\n\t\t\t}\n\t\t}\n\t}\n\tputs(\"-1\");//\u7ec8\u70b9\u4ece\u672a\u88ab\u53d6\u51fa\uff0c\u5224\u65ad\u65e0\u89e3\n}\n```",
        "postTime": 1549804158,
        "uid": 151722,
        "name": "hht2005",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1649 \u3010[USACO07OCT]\u969c\u788d\u8def\u7ebfObstacle Course\u3011"
    },
    {
        "content": "**\u6765\u4e00\u53d1P\u515a\u7684\u9898\u89e3\uff0c\u9020\u798fP\u515a\u7684\u670b\u53cb\u4eec**\n\n\u672c\u9898\u7684\u601d\u8def\u662fBFS\u3002 \uff08\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6807\u7b7e\u4f1a\u662fdp\uff09\n\n\u5148\u7528ff[i,j]\u8bb0\u5f55\u4eceA\u70b9\u51fa\u53d1\u6700\u5c11\u8f6c\u5f2f\u6b21\u6570\uff08\u4e00\u5f00\u59cb\u8d4b\u521d\u503c\u4e3amaxlongint\uff0c\u56e0\u4e3a\u662f\u6c42\u6700\u5c11\uff09\n\n\u7136\u540e\u53bbBFS\uff0c\u8d77\u70b9\u4e3aA\u7684\u5750\u6807\uff0c\u6bcf\u6b21\u5411\u56db\u4e2a\u65b9\u5411\u62d3\u5c55\uff0c\u5165\u961f\u7684\u6761\u4ef6\u662f\u5230\u5f53\u524d\u70b9\u7684\u6b21\u6570\u6bd4ff\u6570\u7ec4\u91cc\u5f53\u524d\u8bb0\u5f55\u7684\u6700\u4f18\u89e3\u8fd8\u8981\u66f4\u4f18\n\n\u4e0d\u591abb\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\nconst\n  x:array[1..4]of longint=(1,0,0,-1);\n  y:array[1..4]of longint=(0,1,-1,0);//\u56db\u4e2a\u65b9\u5411\nvar\n  ff:array[0..101,0..101]of longint;\n  f,f1,f2,f3:array[0..100000]of longint;\n  a:array[0..101,0..101]of char;\n  n,i,j,k,a1,a2,b1,b2,h,t,l,r:longint;\n  c:char;\nbegin\n  readln(n);\n  for i:=1 to n do \n    begin\n      for j:=1 to n do  \n        begin\n          read(a[i,j],c);//\u7528c\u628a\u591a\u4f59\u7a7a\u683c\u8bfb\u6389\n          if a[i,j]='A' then begin a1:=i;a2:=j; end;\n          if a[i,j]='B' then begin b1:=i;b2:=j; end;//\u8bb0\u5f55A\u548cB\u7684\u5750\u6807\n        end;\n      readln;\n    end;\n  for i:=1 to n do \n    for j:=1 to n do \n      ff[i,j]:=maxlongint;//\u8d4b\u521d\u503c\n  h:=0;\n  t:=1; \n  f[1]:=0;\n  f1[1]:=a1;\n  f2[1]:=a2;\n  f3[1]:=0;//f\u6570\u7ec4\u8bb0\u5f55\u65b9\u5411,f1\u548cf2\u6570\u7ec4\u8bb0\u5f55\u5750\u6807\n  while h<=t do \n    begin\n      inc(h);\n      for i:=1 to 4 do \n        begin\n          l:=f1[h]+x[i];\n          r:=f2[h]+y[i];\n          if (l<1)or(r<1)or(l>n)or(r>n)or(a[l,r]='x') then continue;//\u6240\u8981\u53bb\u7684\u70b9\u4e0d\u80fd\u8d8a\u754c\n          if (h=1)or(f[h]=i) then k:=f3[h] else k:=f3[h]+1;//\u5224\u65ad\u4ece(f1[h],f2[h])\u5230\u5f53\u524d\u70b9\u8981\u4e0d\u8981\u8f6c\u5f2f\uff0c\u5e76\u628a\u8f6c\u5f2f\u6570\u8bb0\u5f55\u4e0b\u6765\n          if ff[l,r]>k then //\u5230\u5f53\u524d\u70b9\u7684\u6b21\u6570\u6bd4ff\u6570\u7ec4\u91cc\u5f53\u524d\u8bb0\u5f55\u7684\u6700\u4f18\u89e3\u8fd8\u8981\u66f4\u4f18\n            begin\n              inc(t);\n              f[t]:=i;\n              f1[t]:=l;\n              f2[t]:=r;\n              f3[t]:=k;\n              ff[l,r]:=k; \n            end;//\u5165\u961f\n        end;\n    end;//BFS\n  if ff[b1,b2]=maxlongint then write(-1) else write(ff[b1,b2]);//\u5982\u679c\u5230\u4e0d\u4e86\u5219\u8f93\u51fa-1\uff08\u9898\u76ee\u91cc\u6ca1\u8bf4\uff09\nend.\n```",
        "postTime": 1501295516,
        "uid": 25355,
        "name": "\u590f\u8272\u796d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1649 \u3010[USACO07OCT]\u969c\u788d\u8def\u7ebfObstacle Course\u3011"
    },
    {
        "content": "\u770b\u5230\u697c\u4e0a\u9898\u89e3\u4ee3\u7801\u8f83\u4e3a\u590d\u6742\uff0c\u6ca1\u6709\u7ed9\u51fa\u5206\u6790\u5f88\u900f\u5f7b\u7684\u601d\u8def\uff0c\u4e8e\u662f\u60f3\u4e86\u5f88\u4e45\uff0c\u5f97\u5230\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8\u4f46\u662f\u7b80\u5355\u4e00\u4e9b\u7684\u4ee3\u7801\u3002\n\n\u9996\u5148BFS\u7684\u6027\u8d28\u2014\u2014\u6700\u77ed\u3002\u6b64\u9898\u4e0d\u80fd\u7528\u4e00\u822cBFS\u7684\u539f\u56e0\u5728\u4e8e\uff0c\u79bbA\u70b9\u8def\u5f84\u6700\u77ed\u7684\u70b9\u5e76\u975e\u62d0\u5f2f\u6700\u5c11\u7684\u70b9\u3002\u7531\u6b64\u60f3\u5230\uff0c\u53ef\u4ee5\u4ee5\u8f6c\u5f2f\u6b21\u6570\u4f5c\u4e3a\u63a8\u5e7f\u641c\u7d22\u4e0b\u4e00\u5c42\u7684\u6761\u4ef6\u3002\u800c\u6211\u4eec\u80fd\u591f\u6839\u636eBFS\u6027\u8d28\u5f97\u77e5\uff0c\u82e5\u67d0\u4e2a\u70b9\u8f6c\u5f2f\u6b21\u6570\u4e3ai\uff0c\u5219\u5b83\u4e00\u5b9a\u80fd\u591f\u901a\u8fc7\u67d0\u4e2a\u8f6c\u5f2f\u6b21\u6570\u4e3ai-1\u7684\u70b9\u6269\u5c55\u800c\u6765\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4ee5A\u70b9\u4e3a\u6839\uff0c\u5148\u6269\u5c55\u51fa\u6240\u6709\u5230A\u70b9\u8f6c\u5f2f\u4ec5\u4e3a1\u7684\u70b9\uff0c\u5c06\u5b83\u4eec\u653e\u5165\u961f\u5217\u3002\u518d\u4ece\u8fd9\u4e9b\u8f6c\u5f2f\u6b21\u6570\u4e3a1\u7684\u7ed3\u70b9\u51fa\u53d1\uff0c\u518d\u6b21\u6269\u5c55\uff0c\u5f97\u5230\u6b21\u6570\u4e3a2\u7684\u7ed3\u70b9\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u5bfb\u627e\u5230B\u70b9\u3002\n\n\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\uff0c\u6211\u6ca1\u6709\u7528\u4e24\u4e2a\u961f\u5217\uff0c\u8fd9\u6837\u4f1a\u9047\u5230\u4e00\u4e2a\u95ee\u9898\uff1a\u53ef\u80fd\u7531\u4e8e\u6269\u5c55\u987a\u5e8f\u5148\u540e\u7684\u4e0d\u540c\uff0c\u67d0\u4e9b\u7ed3\u70b9\u65e0\u6cd5\u88ab\u53ca\u65f6\u6269\u5c55\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ea\u597d\u5728\u53d6\u51fa\u6bcf\u4e2a\u6269\u5c55\u7ed3\u70b9\u65f6\uff0c\u5411\u8fd9\u4e2a\u7ed3\u70b9\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u56db\u4e2a\u65b9\u5411\u627e\uff0c\u82e5\u6269\u5c55\u7684\u7ed3\u70b9\u5df2\u8bbf\u95ee\u5219\u8df3\u8fc7\u7ee7\u7eed\uff0c\u76f4\u5230\u641c\u7d22\u5230\u7b2c\u4e00\u4e2a\u7981\u4f4d\u4e3a\u6b62\u3002\u4e8e\u662f\u8fd9\u4f7f\u5f97\u6bcf\u4e2a\u7ed3\u70b9\u6269\u5c55\u65f6\u9700\u8981\u82b1\u8d39\u8fd1\u4f3cO(N)\u7684\u65f6\u95f4\uff08PS\uff1a\u5c3d\u7ba1\u53ef\u80fd\u8fdc\u5c0f\u4e8e\u5b83\uff09\uff08PS 2\uff1a\u5176\u5b9e\u697c\u4e0a\u7684\u90a3\u4e2a\u627e\u6cd5\u4e5f\u662f\u8981\u82b1\u65f6\u95f4\u7684\uff0c\u53ea\u4e0d\u8fc7\u5c11\u4e00\u70b9\u7f62\u4e86233\uff09\uff08PS 3\uff1a\u6211\u4e0d\u7528\u8bb0\u5f55\u65b9\u5411\uff0c\u4e14\u53ea\u7528\u4e00\u4e2a\u961f\u5217\uff0c\u7b49\u4e8e\u65f6\u95f4\u6362\u7a7a\u95f4+\u4ee3\u7801\u590d\u6742\u5ea6\uff09\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u7ea6\u4e3aO(N^3)\uff08PS\uff1a\u4e0d\u8fc7\u9664\u975e\u6781\u7aef\u6570\u636e\u5426\u5219\u6839\u672c\u5230\u4e0d\u4e86N^3\uff09\n\n\u8d34\u4ee3\u7801\u2026\u2026\u5f88\u4e11\u964b\u8fd8\u8bf7\u5305\u6db5\n\n\u3001\u3001\u3001\n\n\n\n    \n        \n\n  \n  \n    \n      \n        \n        \n        \n  \n\n\n    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int MAX=105,INF=1<<29,dx[]={-1,1,0,0},dy[]={0,0,-1,1}; \nint N,Bx,By,Ex,Ey;\nbool F[MAX][MAX],Vis[MAX][MAX];\nstruct Node\n{\n  int x,y,turn;\n}Q[MAX*MAX*MAX];\nvoid Input()\n{\n    char c;\n    scanf(\"%d\\n\",&N);\n    for(int i=1;i<=N;i++){\n      for(int j=1;j<=N;j++){\n        cin>>c;\n        if(c=='A'){\n          Bx=i;\n          By=j;\n      }\n      if(c=='B'){\n        Ex=i;\n        Ey=j;\n      }\n      if(c!='x')F[i][j]=true;\n    }\n  }\n}\nbool BFS()\n{\n  int Head=0,Tail=1;\n  Node top;\n  Q[1].x=Bx;\n  Q[1].y=By;\n  Q[1].turn=-1;\n  Vis[Bx][By]=true;\n  do{\n    Head++;\n    top=Q[Head];\n    Vis[top.x][top.y]=true;\n    for(int i=0;i<4;i++){\n      int tx=top.x+dx[i],ty=top.y+dy[i];\n      while(tx>=1&&tx<=N&&ty>=1&&ty<=N&&F[tx][ty]){\n        if(Vis[tx][ty]){\n          tx+=dx[i];\n          ty+=dy[i];\n          continue;\n        }\n        if(tx==Ex&&ty==Ey){\n          printf(\"%d\\n\",top.turn+1);\n          return true;\n        }\n        Vis[tx][ty]=true;\n        Tail++;\n        Q[Tail].x=tx;\n        Q[Tail].y=ty;\n        Q[Tail].turn=top.turn+1;\n        tx+=dx[i];\n        ty+=dy[i];\n      }\n    }\n  }while(Head<Tail);\n  return false;\n}\nint main()\n{\n    Input();\n    if(!BFS())printf(\"-1\\n\");\n    return 0;\n}\n\u3001\u3001\u3001\n```",
        "postTime": 1477584165,
        "uid": 5502,
        "name": "Von_Bl\u00fccher",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1649 \u3010[USACO07OCT]\u969c\u788d\u8def\u7ebfObstacle Course\u3011"
    },
    {
        "content": "\u2460BFS\n\u5229\u7528\u4e24\u4e2a\u961f\u5217\u3002Q1\u8bb0\u5f55\u53ea\u8f6c\u5f2f\u53ef\u5230\u7684\u70b9\uff0cQ2\u8bb0\u5f55Q1\u8f6c\u5f2f\u540e\u518d\u5728\u65b9\u5411\u4e0a\u6269\u5c55\u6240\u6709\u53ef\u5230\u7684\u70b9\u3002\u5982\u679cQ1\u91cc\u7684\u70b9\u65e0\u6cd5\u6269\u5c55\u4e86\uff0c\u5c31\u8bf4\u660e\u65e0\u6cd5\u5230\u8fbe\u4e86\u3002\n\n\uff08\u6ce8\u610f\u8f93\u5165\u683c\u5f0f\u91cc\u9762 **\u6bcf\u4e2a\u5b57\u7b26\u540e\u6709\u4e00\u4e2a\u7a7a\u683c**\uff0c\u88ab\u5751\u4e86\u5f88\u591a\u6b21\uff09\n\n\u5173\u952e\u4ee3\u7801\uff1a\n\n```cpp\nconst int        Dx[] = {1, 0, -1, 0}, Dy[] = {0, 1, 0, -1};\nstruct NodeTp {\n    int    cx, cy, cd, cstep;\n} ;\nstruct QueueTp {\n    NodeTp    Q[MaxN * MaxN << 2];\n    int        Head, Tail;\n\n    inline bool notempty()\n     { return Head != Tail; }\n    inline void clear()\n     { Head = Tail = 0; }\n    inline void push(const NodeTp& arg)\n     { Q[Tail++] = arg; }\n    inline NodeTp& pop()\n     { return Q[Head++]; }\n} Q1, Q2;\n```\n\n```cpp\n    for(int i = 0; i < 4; i++)\n        Vis[Ax][Ay][i] = true, Q1.push((NodeTp) {Ax, Ay, i, 0});\n    while(flag) {\n        flag = false;\n        Q2.clear();\n            while(i > 0 && j > 0 && i <= N && j <= N && Map[i][j] != 'x' && !Vis[i][j][now.cd]) {\n                if(Map[i][j] == 'B') {\n                    cout << now.cstep << endl;\n                    return 0;\n                }\n                Vis[i][j][now.cd] = true, flag = true;\n                Q2.push((NodeTp) {i, j, now.cd, now.cstep});\n                i += Dx[now.cd], j += Dy[now.cd];\n            }\n        }\n        Q1.clear();\n        while(Q2.notempty()) {\n            NodeTp    &now = Q2.pop();\n            if(!Vis[now.cx][now.cy][(now.cd + 1) % 4])\n                Vis[now.cx][now.cy][(now.cd + 1) % 4] = true, Q1.push((NodeTp) {now.cx, now.cy, (now.cd + 1) % 4, now.cstep + 1});\n            if(!Vis[now.cx][now.cy][(now.cd + 3) % 4])\n                Vis[now.cx][now.cy][(now.cd + 3) % 4] = true, Q1.push((NodeTp) {now.cx, now.cy, (now.cd + 3) % 4, now.cstep + 1});\n        }\n    }\n```\n\u2461\u6700\u77ed\u8def\n\n\u628a\u4e00\u4e2a\u70b9\u6269\u62104\u4e2a\u70b9\uff0c\u8868\u793a\u4e00\u4e2a\u70b9\u76844\u4e2a\u4e0d\u540c\u65b9\u5411\u3002\u52a0\u8fb9\uff1a\u540c\u4e00\u4e2a\u70b9\u4e0d\u540c\u65b9\u5411\u95f4\u8fb9\u6743\u4e3a1(90\u5ea6)\uff0c\u4e00\u4e2a\u70b9\u4e00\u4e2a\u65b9\u5411\u53ef\u8fbe\u7684\u70b9\uff08\u90bb\u63a5\u70b9\u5373\u53ef\uff09\u95f4\u8fb9\u6743\u4e3a0\u3002\n\n\u7136\u540e\u53ef\u4ee5\u4f7f\u7528\u6700\u77ed\u8def\u7b97\u6cd5\u6c42\u5f97\u7b54\u6848\u3002\n\n\uff08\u601d\u8def\u6765\u6e90\u4e8e\u5176\u4ed6\u4eba\uff0c\u6211\u8fd8\u6ca1\u5199\uff0c\u5c31\u4e0d\u8d34\u4ee3\u7801\u4e86\uff09\n",
        "postTime": 1475849365,
        "uid": 3144,
        "name": "\u6d6e\u5c18ii",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1649 \u3010[USACO07OCT]\u969c\u788d\u8def\u7ebfObstacle Course\u3011"
    },
    {
        "content": "### \u6700\u5c11\n\u786e\u8ba4\u8fc7\u773c\u795e\uff0c\u5c31\u662f\u5bbd\u641c\u5566\u3002\n\u5bbd\u641c\u9700\u8981\u5b58\u961f\u5217\uff0c\u7136\u800c\u8fd9\u4e48~~\u61d2~~\u7684\u6211\u3002\u3002\u770b\u5230\u4e86\n#### \u201cN (1 <= N <= 100)\u201d\n\u90a3\u4e48\uff0c\u53ef\u4ee5\u4e0d\u5b58\u961f\u5217\uff0c\u76f4\u63a5\u641c\uff08\u54b3\uff0c\u8fd9\u662f\u4e00\u7bc7\u5077\u61d2\u7684\u9898\u89e3\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar s[101][101];\nint xxx,yyy,ii,k,xx,yy,i,x,y,j,n,a[101][101];\nint dx[5]={0,0,0,1,-1};\nint dy[5]={0,1,-1,0,0};\nint main()\n{\n    cin>>n;\n    for (i=1;i<=n;i++)\n     for (j=1;j<=n;j++)\n     {\n      cin>>s[i][j];\n      if (s[i][j]=='A')a[i][j]=0,x=i,y=j;else a[i][j]=10001;\n      if (s[i][j]=='B')xx=i,yy=j;\n     }\n    for (i=1;i<=4;i++)\n    {\n        xxx=x;yyy=y;\n        while ((s[x+dx[i]][y+dy[i]]=='.'||s[x+dx[i]][y+dy[i]]=='B')&&a[x+dx[i]][y+dy[i]]==10001)\n          x+=dx[i],y+=dy[i],a[x][y]=0;\n        x=xxx;y=yyy;\n    }\n    if (a[xx][yy]!=10001)\n    {\n        cout<<a[xx][yy];\n        return 0;\n    }\n    for (k=0;k<=10000;k++)\n    for (i=1;i<=n;i++)\n     for (j=1;j<=n;j++)\n     {\n     \tif (a[i][j]==k)\n     \t{\n     \t\tx=i;y=j;\n     \t\tfor (ii=1;ii<=4;ii++)\n     \t\t{\n     \t\t\txxx=x;yyy=y;\n     \t\twhile ((s[x+dx[ii]][y+dy[ii]]=='.'||s[x+dx[ii]][y+dy[ii]]=='B')\n             &&a[x+dx[ii]][y+dy[ii]]>=k+1)\n            x+=dx[ii],y+=dy[ii],a[x][y]=k+1;\n            x=xxx;y=yyy;\n            }\n            if (a[xx][yy]!=10001)\n            {\n               cout<<a[xx][yy];return 0;\n            }  \n        }\n     }\n    cout<<-1;\n}\n```\n",
        "postTime": 1555481753,
        "uid": 70124,
        "name": "qr\u7684\u5c0f\u8ff7\u59b9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1649 \u3010[USACO07OCT]\u969c\u788d\u8def\u7ebfObstacle Course\u3011"
    }
]