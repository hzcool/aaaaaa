[
    {
        "content": "- \u9664\u4e86\u94fe\u8868\u548c\u5e76\u67e5\u96c6\uff0c\u8fd8\u6709\u7ebf\u6bb5\u6811\u7684\u65b9\u6cd5\u3002\n\n---\n\n- \u5bf9\u4e8e\u9774\u5b50 $i$ \uff0c\u6211\u4eec\u5c06\u5b83\u80fd\u8d70\u7684\u5730\u7816\u7684\u6743\u503c\u8bbe\u4e3a $0$\uff0c\u4e0d\u80fd\u8d70\u7684\u5730\u7816\u7684\u6743\u503c\u8bbe\u4e3a $1$ \uff0c\u5e76\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u957f\u7684\u8fde\u7eed\u7684 $1$ \u7684\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u6700\u957f\u8fde\u7eed\u7684\u4e0d\u80fd\u8d70\u7684\u90a3\u6bb5\u5730\u7816\u7684\u6570\u91cf\u3002\u5982\u679c\u8fd9\u4e2a\u503c\u5c0f\u4e8e\u9774\u5b50 $i$ \u7684\u6b65\u957f\uff0c\u90a3\u4e48\u7b54\u6848\u4e3a $1$\uff1b\u5426\u5219\u9774\u5b50 $i$ \u4e00\u5b9a\u65e0\u6cd5\u8de8\u8fc7\u8fd9\u6bb5\u5730\u7816\uff0c\u6240\u4ee5\u7b54\u6848\u4e3a $0$ \u3002\n\n- \u7136\u800c\u6bcf\u6b21\u679a\u4e3e\u4e00\u53ea\u9774\u5b50\u5e76\u5728\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(NlogN)$ \u7684\uff0c\u663e\u7136\u4e0d\u80fd\u8fc7\u3002\u8003\u8651\u5148\u5c06\u7ebf\u6bb5\u6811\u8d4b\u4e3a\u5168 $1$ \uff08\u90fd\u4e0d\u80fd\u8d70\uff09\uff0c\u628a\u5730\u7816\u548c\u9774\u5b50\u6309\u7167\u96ea\u7684\u6df1\u5ea6\u6392\u5e8f\uff0c\u4ece\u5c0f\u5230\u5927\u5f00\u59cb\u626b\u63cf\u3002\u5982\u679c\u626b\u5230\u5730\u7816\uff0c\u5219\u5728\u7ebf\u6bb5\u6811\u4e2d\u628a\u8fd9\u5757\u5730\u7816\u7684\u4f4d\u7f6e\u6539\u4e3a $0$ \uff08\u56e0\u4e3a\u4ee5\u540e\u626b\u5230\u7684\u9774\u5b50\u80fd\u627f\u53d7\u7684\u79ef\u96ea\u6df1\u5ea6\u90fd\u4e0d\u5c0f\u4e8e\u8fd9\u5757\u5730\u7816\u7684\u79ef\u96ea\u6df1\u5ea6\uff0c\u4e5f\u5c31\u662f\u90fd\u80fd\u8d70\u8fd9\u5757\u5730\u7816\uff09\uff1b\u5982\u679c\u626b\u5230\u9774\u5b50\uff0c\u5c31\u7edf\u8ba1\u6700\u957f\u8fde\u7eed\u7684\u4e0d\u80fd\u8d70\u7684\u90a3\u6bb5\u5730\u7816\u7684\u6570\u91cf\uff0c\u8ba1\u7b97\u7b54\u6848\u3002\n\n- \u7ebf\u6bb5\u6811\u5355\u70b9\u4fee\u6539\u662f $O(logN)$ \u7684\uff0c\u67e5\u8be2\u6700\u957f\u8fde\u7eed $1$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5219\u662f $O(1)$\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(NlogN+B)$\u3002\n\n---\n\n- \u9644\uff1a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u957f\u8fde\u7eed $1$ \u7684\u65b9\u6cd5\uff1a\n\n- \u6bcf\u4e2a\u7ed3\u70b9\u7ef4\u62a4\u56db\u4e2a\u503c\uff1a\u5f53\u524d\u8282\u70b9\u7ef4\u62a4\u7684\u533a\u95f4\u957f\u5ea6 $len$ \uff0c\u5f53\u524d\u533a\u95f4\u6700\u957f\u8fde\u7eed $1$ \u7684\u957f\u5ea6 $maxx$ \uff0c\u5f53\u5148\u533a\u95f4\u4ece\u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u957f\u8fde\u7eed $1$ \u7684\u957f\u5ea6 $maxl$\uff0c\u5f53\u5148\u533a\u95f4\u4ece\u53f3\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u957f\u8fde\u7eed $1$ \u7684\u957f\u5ea6 $maxr$\u3002\n\n- \u90a3\u4e48\uff0c\u5f53\u524d\u8282\u70b9\u7684 $maxl$ \u5c31\u5e94\u8be5\u7b49\u4e8e\u5b83\u5de6\u513f\u5b50\u7684 $maxl$ \uff1b\u5982\u679c\u5de6\u513f\u5b50\u7684 $maxx$ \u7b49\u4e8e\u5de6\u513f\u5b50\u7ef4\u62a4\u7684\u533a\u95f4\u7684\u957f\u5ea6\uff0c\u5c31\u8868\u793a\u5de6\u513f\u5b50\u7ef4\u62a4\u7684\u533a\u95f4\u5168\u662f $1$ \uff0c\u90a3\u4e48\u5f53\u524d\u8282\u70b9 $maxl$ \u5c31\u5e94\u8be5\u7b49\u4e8e\u5de6\u513f\u5b50\u7ef4\u62a4\u7684\u533a\u95f4\u7684\u957f\u5ea6\u52a0\u4e0a\u53f3\u513f\u5b50\u7684 $maxl$ \u3002$maxr$ \u7684\u7ef4\u62a4\u65b9\u5f0f\u7c7b\u4f3c\u3002\n\n- \u5f53\u524d\u7ed3\u70b9\u7684 $maxx$ \u5219\u7b49\u4e8e\u5b83\u5de6\u513f\u5b50\u7684 $maxx$ \uff0c\u53f3\u513f\u5b50\u7684 $maxx$ \uff0c\u4ee5\u53ca\u5de6\u513f\u5b50\u7684 $maxr$ \u548c \u53f3\u513f\u5b50\u7684 $maxl$ \u4e4b\u548c\uff08\u8868\u793a\u8de8\u8d8a\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u7ef4\u62a4\u7684\u4e24\u4e2a\u533a\u95f4\uff09\u8fd9\u4e09\u8005\u7684\u6700\u5927\u503c\u3002\n\n- \u5177\u4f53\u5b9e\u73b0\u89c1 $pushup$ \u51fd\u6570\u7684\u4ee3\u7801\u3002\n\n---\n\n\u4ee3\u7801\u5b9e\u73b0\uff08c++\uff09\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int MAXN=110000;\nstruct SegmentTree\n{\n\t#define lc (root<<1)\n\t#define rc (root<<1|1)\n\tstruct Node\n\t{\n\t\tbool val;\n\t\tint len, maxx, maxl, maxr;\n\t} tr[MAXN*4];\n\tvoid pushup(int root) // \u7ef4\u62a4\u533a\u95f4\u4fe1\u606f\n\t{\n\t\ttr[root].len=tr[lc].len+tr[rc].len;\n\t\ttr[root].maxx=tr[root].maxl=tr[root].maxr=tr[root].val;\n\t\ttr[root].maxl=max(tr[root].maxl, tr[lc].maxl);\n\t\tif (tr[lc].maxx==tr[lc].len)\n\t\t\ttr[root].maxl=max(tr[root].maxl, tr[lc].len+tr[rc].maxl);\n\t\ttr[root].maxr=max(tr[root].maxr, tr[rc].maxr);\n\t\tif (tr[rc].maxx==tr[rc].len)\n\t\t\ttr[root].maxr=max(tr[root].maxr, tr[rc].len+tr[lc].maxr);\n\t\ttr[root].maxx=max(tr[root].maxx, tr[lc].maxx);\n\t\ttr[root].maxx=max(tr[root].maxx, tr[rc].maxx);\n\t\ttr[root].maxx=max(tr[root].maxx, tr[lc].maxr+tr[rc].maxl);\n\t}\n\tvoid update(int root, int l, int r, int x) // \u5355\u70b9\u4fee\u6539\n\t{\n\t\tif (l==r)\n\t\t{\n\t\t\ttr[root].maxx=tr[root].maxl=tr[root].maxr=tr[root].val=0;\n\t\t\treturn;\n\t\t}\n\t\tint mid=l+r>>1;\n\t\tif (x<=mid) update(lc, l, mid, x);\n\t\telse update(rc, mid+1, r, x);\n\t\tpushup(root);\n\t}\n\tint query() // \u67e5\u8be2\n\t{\n\t\treturn tr[1].maxx; // 1 \u5c31\u662f\u6811\u6839\u7ed3\u70b9\uff0c\u7ef4\u62a4\u4e86\u6574\u4e2a\u533a\u95f4\n\t}\n\tvoid build(int root, int l, int r)\n\t{\n\t\ttr[root].val=0;\n\t\tif (l==r)\n\t\t{\n\t\t\ttr[root].len=1;\n\t\t\ttr[root].maxx=tr[root].maxl=tr[root].maxr=tr[root].val=1;\n\t\t\treturn;\n\t\t}\n\t\tint mid=l+r>>1;\n\t\tbuild(lc, l, mid);\n\t\tbuild(rc, mid+1, r);\n\t\tpushup(root);\n\t}\n\t#undef lc\n\t#undef rc\n} st;\nstruct Snow // \u8fd9\u91cc\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7ed3\u6784\u4f53\u7528\u6765\u6392\u5e8f\u65f6\u8bb0\u5f55\u4e0b\u6807\n{\n\tint id, step, dep;\n\tbool operator < (const Snow& rhs) const\n\t{\n\t\treturn dep!=rhs.dep?dep<rhs.dep:step<rhs.step;\n\t}\n\tSnow(int i=0, int s=0, int d=0):\n\t\tid(i), step(s), dep(d) {}\n} a[MAXN*2];\nint n, m;\nbool ans[MAXN];\nint main()\n{\n\tfreopen(\"snowboots.in\", \"r\", stdin);\n\tfreopen(\"snowboots.out\", \"w\", stdout);\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i=1, f; i<=n; i++)\n\t{\n\t\tscanf(\"%d\", &f);\n\t\ta[i]=Snow(i, 0, f);\n\t}\n\tfor (int i=1, s, d; i<=m; i++)\n\t{\n\t\tscanf(\"%d%d\", &s, &d);\n\t\ta[i+n]=Snow(i, d, s);\n\t}\n\tsort(a+1, a+n+m+1);\n\tst.build(1, 1, n);\n\tfor (int i=1; i<=n+m; i++)\n\t{\n\t\tif (a[i].step==0) st.update(1, 1, n, a[i].id);\n\t\telse ans[a[i].id]=st.query()<a[i].step;\n\t}\n\tfor (int i=1; i<=m; i++) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1536410745,
        "uid": 43064,
        "name": "\u6500\u5ca9\u9ad8\u624b",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4269 \u3010[USACO18FEB]Snow Boots G\u3011"
    },
    {
        "content": "\u5177\u4f53\u8bb2\u89e3\u90fd\u5728\u4ee3\u7801\u91cc\uff0c\u81ea\u5df1\u770b\u54c8\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u89e3\u91ca\u4e86\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int Maxnb=1e5+5;\nint n,b,i,j,maxsteps=1/*\u6700\u5c11\u4e5f\u8981\u8d70\u4e00\u6b65\u5427*/,last[Maxnb],next[Maxnb];//last\u548cnext\u662f\u53cc\u5411\u94fe\u8868 \nbool get[Maxnb];\nstruct snow{int snowdeep,sloc;}f[Maxnb];//snowdeep\u662f\u96ea\u7684\u6df1\u5ea6\uff0csloc\u662f\u96ea\u7684\u4f4d\u7f6e \nstruct bost{int bostdeep,dis,bloc;}s[Maxnb];//bostdeep\u662f\u9774\u5b50\u80fd\u627f\u53d7\u7684\u96ea\u7684\u6df1\u5ea6\uff0cdis\u662f\u9774\u5b50\u80fd\u8d70\u7684\u8ddd\u79bb\uff0cbloc\u662f\u9774\u5b50\u7684\u4f4d\u7f6e \n\nbool compsnow(snow a,snow b){return a.snowdeep<b.snowdeep;}\nbool compbost(bost a,bost b){return a.bostdeep<b.bostdeep;}\n\nint main()\n{\n\tmemset(get,0,sizeof(get));\n\tcin>>n>>b;\n\tfor(i=1;i<=n;++i) cin>>f[i].snowdeep,f[i].sloc=i;//\u56e0\u4e3a\u8981\u6392\u5e8f\uff0c\u6240\u4ee5\u8fd8\u662f\u8981\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u4e2a\u79ef\u96ea\u7684\u4f4d\u7f6e \n\tfor(i=1;i<=b;++i) cin>>s[i].bostdeep>>s[i].dis,s[i].bloc=i;//\u540c\u4e0a \n\tsort(f+1,f+n+1,compsnow);\n\tsort(s+1,s+b+1,compbost);\n\tfor(i=1;i<=n;++i) last[i]=i-1,next[i]=i+1;//\u53cc\u5411\u94fe\u8868\uff0clast\u6307\u5411\u524d\u4e00\u4e2a\u79ef\u96ea\uff0cnext\u6307\u5411\u4e0b\u4e00\u4e2a\u79ef\u96ea \n\tj=n;//\u5f53\u7136\u4ece\u79ef\u96ea\u6700\u5927\u7684\u5f00\u59cb\u679a\u4e3e\u55bd! \n\tfor(i=b;i>=1;--i)//\u6211\u662f\u5347\u5e8f\u6392\u7684\uff0c\u6240\u4ee5\u8981\u5012\u7740\u5faa\u73af \u3002\u5e94\u8be5\u4e5f\u53ef\u4ee5\u6309\u964d\u5e8f\u6392\uff0c\u6211\u6ca1\u8bd5\u8fc7\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b \n\t{\n\t    while(j>=1 && f[j].snowdeep>s[i].bostdeep)//\u8fd9\u91cc\u662f\u6574\u4e2a\u7b97\u6cd5\u7684\u6838\u5fc3\n\t\t/*\n\t\t\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u8fd9\u6761\u9774\u5b50\u80fd\u8d70\u8fc7\u53bb\uff0c\u6240\u4ee5\u8981\u627e\u5230\u6bd4\u5b83\u80fd\u627f\u53d7\u79ef\u96ea\u7684\u6df1\u5ea6\u7684\u8303\u56f4\u66f4\u5927\u7684\u79ef\u96ea\u7684\u6df1\u5ea6\uff0c\u5e76\u628a\u5b83\u4ece\u53cc\u5411\u94fe\u8868\u4e2d\u5220\u9664\n\t\t\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u80fd\u8d70\u53bb\u7684\u8ddd\u79bb\uff0c\u5982\u679c\u8fd9\u4e2a\u9774\u5b50\u80fd\u8d70\u7684\u6b65\u6570\u5c0f\u4e8e\u5b83\uff0c\u90a3\u4e48\u4e5f\u5c31\u4e0d\u53ef\u80fd\u5230\u8fbe\u3002\n\t\t\u5f53\u7136\uff0c\u8fd9\u6837\u662f\u4e0d\u591f\u7684\uff0c\u4e5f\u8bb8\u4f1a\u8d85\u65f6\u3002\n\t\t\u6240\u4ee5\u6211\u4eec\u5c31\u9700\u8981\u6392\u5e8f\u3002\n\t\t\u6211\u4eec\u53ef\u4ee5\u60f3\u60f3\u770b\uff0c\u4e00\u4e2a\u6bd4\u4f60\u80fd\u627f\u53d7\u79ef\u96ea\u6df1\u5ea6\u66f4\u5927\u7684\u9774\u5b50\u90fd\u8d70\u4e0d\u8fc7\u53bb\uff0c\u90a3\u4f60\u80af\u5b9a\u8d70\u4e0d\u8fc7\u53bb\u3002\n\t\t\u56e0\u6b64maxsteps\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5224\u65ad\u3002 \n\t\t*/ \n\t\t{\n\t\t    last[next[f[j].sloc]]=last[f[j].sloc];\n\t\t    next[last[f[j].sloc]]=next[f[j].sloc];//\u8fd9\u4e24\u53e5\u8bdd\u662f\u5220\u9664\u53cc\u5411\u94fe\u8868\u4e2d\u4e00\u4e2a\u70b9\u7684\u8bed\u53e5\uff0c\u5982\u679c\u89c9\u5f97\u96be\u7406\u89e3\uff0c\u5c31\u80cc\u4e0b\u6765\u5427 \n\t\t    maxsteps=max(maxsteps,next[f[j].sloc]-last[f[j].sloc]);\n\t\t    j--;\n\t\t}\n\t\tget[s[i].bloc]=(s[i].dis>=maxsteps);\n\t\t/*\u8fd9\u91cc\u662f\u7b80\u4fbf\u5199\u6cd5 \n\t\t\u4e5f\u53ef\u4ee5\u8fd9\u6837\u5199:\n\t\tif(s[i].dis>=maxsteps) get[s[i].bloc]=1;\n\t\t*/ \n\t}\n\tfor(i=1;i<=b;++i) cout<<get[i]<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1522684498,
        "uid": 50787,
        "name": "zzzty___",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4269 \u3010[USACO18FEB]Snow Boots G\u3011"
    },
    {
        "content": "\u4e00\u770b\uff0c\u9898\u662f\u5976\u725b\u9898\uff0c\u6240\u4ee5\u6574\u70b9\u9633\u95f4\u7684\u9898\u610f\u8fd8\u662f\u5f88\u91cd\u8981\u7684\u3002\n\n```\n\u6709N\u5757\u5730\u7816\u548cM\u53cc\u9774\u5b50\u3002\n\u7b2ci\u5757\u5730\u7816\u4e0a\u6709snow[i]\u7684\u79ef\u96ea\u3002\n\u6bcf\u4e00\u53cc\u9774\u5b50\u6709\u4e24\u4e2a\u503c\u3002\ndep:\u8868\u793a\u8fd9\u53cc\u9774\u5b50\u7684\u9ad8\u5ea6\uff0c\u4f60\u4e0d\u80fd\u5728\u201c\u79ef\u96ea\u6df1\u5ea6\u9ad8\u4e8e\u9774\u5b50\u7684\u5730\u7816\u201d\u4e0a\u843d\u811a\u3002\nstep\uff1a\u8868\u793a\u7a7f\u8fd9\u53cc\u978b\u65f6\u4e00\u6b65\u6700\u591a\u80fd\u8de8\u591a\u8fdc\u3002\n\uff08\u4e5f\u5c31\u662f\u6700\u591a\u53ef\u4ee5\u9694\u591a\u8fdc\u843d\u4e00\u6b21\u811a\uff09\n\u5bf9\u4e8e\u6bcf\u4e00\u53cc\u9774\u5b50\uff0c\u6c42\u7a7f\u7740\u8fd9\u53cc\u9774\u5b50\u80fd\u5426\u4ece1\u53f7\u5730\u7816\u5b89\u5168\u62b5\u8fbeN\u53f7\u3002\n```\n\u4e00\u773c\u770b\u53bb\uff0c\u6c34\u9898\uff0c\u66b4\u529b\u6bcf\u4e00\u53cc\u978b\uff0c\u90fd\u8bd5\u7740\u53bb\u8d70\u901a\u4e00\u4e0b\uff0c\u590d\u6742\u5ea6\u518d\u600e\u4e48\u4f18\u5316\u4e5f\u662f $O(N^2)$ \u8d77\u6b65\u3002\n\n\u4f46\u662f\u6570\u636e\u8303\u56f4\u5e76\u4e0d\u5141\u8bb8\u8fd9\u4e48\u505a\uff0c\u6211\u4eec\u9700\u8981\u66f4\u9ad8\u6548\u7684\u89e3\u6cd5\u3002\n\n\n------------\n\n\n\u6211\u4eec\u60f3\u5230\uff0c\u4e0d\u7ba1\u7a7f\u7684\u54ea\u4e00\u53cc\u978b\uff0c\u8be5\u8d70\u7684\u8def\u90fd\u662f\u90a3\u4e00\u6761\uff0c\u53ea\u662f\u76f8\u5bf9\u4e8e\u4e0d\u540c\u7684\u9774\u5b50\uff0c\u6709\u4e0d\u540c\u7684**\u843d\u4e0d\u4e86\u811a\u7684\u5730\u65b9**\uff0c\u6211\u4eec\u79f0\u8fd9\u4e9b\u5730\u65b9\u53eb\u7eca\u811a\u77f3\u3002\n\n**\u300e\u771f\u6b63\u6709\u6740\u4f24\u529b\u7684\u5730\u65b9\uff0c\u5f80\u5f80\u662f\u8fde\u7eed\u7684\u7eca\u811a\u77f3\u3002\u300f**\n\n\u4e3a\u4ec0\u4e48\uff1f\u5bf9\u4e8e\u7eca\u811a\u77f3\uff0c\u6211\u4eec\u552f\u4e00\u7684\u51fa\u8def\u5c31\u662f**\u8de8\u6b65\u8df3\u8fc7\u4ed6**\u3002\u800c\u8981\u662f\u6b65\u5b50\u5df2\u7ecf\u8fc8\u5230\u6700\u5927\uff0c\u5374\u8fd8\u662f\u8de8\u4e0d\u8fc7\u957f\u957f\u7684\u8fde\u7eed\u7eca\u811a\u77f3\u7684\u65f6\u5019\uff0c\u8fd9\u53cc\u9774\u5b50\u5c31GG\u4e86\u3002\u4e3a\u4e86\u6613\u4e8e\u7406\u89e3\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u7eca\u811a\u77f3\u7684\u5927\u5c0f\uff0c\u6765\u6307\u4ee3**\u7eca\u811a\u77f3\u7684\u8fde\u7eed\u957f\u5ea6**\u3002\n\n\u5f88\u5bb9\u6613\u9886\u609f\u5230\uff0c\u6700\u5927\u7eca\u811a\u77f3\u7684\u5927\u5c0f\u662f\u76f8\u5bf9\u7684\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u53cc\u9774\u5b50\uff0c\u90fd\u4f1a\u6709**\u4e0d\u540c\u7684**\u6700\u5927\u7eca\u811a\u77f3\u3002\n\n\u6211\u4eec\u4e4b\u524d\u63d0\u5230\uff1a\u8981\u662f\u7a7f\u7740\u4e00\u53cc\u9774\u5b50\u65f6\u6b65\u5b50\u5df2\u7ecf\u8fc8\u5230\u6700\u5927\uff0c\u5374\u8fd8\u662f\u8de8\u4e0d\u8fc7\uff08\u5bf9\u4e8e\u8fd9\u53cc\u9774\u5b50\u800c\u8a00\u7684\uff09\u6700\u5927\u7eca\u811a\u77f3\u7684\u65f6\u5019\uff0c\u8fd9\u53cc\u9774\u5b50\u5c31GG\u4e86\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8fd9\u65f6\u5c31\u5e0c\u671b\u627e\u51fa\u6bcf\u4e00\u53cc\u9774\u5b50\u7684\u6700\u5927\u7684\u7eca\u811a\u77f3\u5728\u54ea\u91cc\u3002\n\n\u6211\u4eec\u6e05\u695a\uff0c\u5bf9\u4e8e\u9ad8\u5ea6\u66f4\u4f4e\u7684\u9774\u5b50\uff0c\u4ed6\u7684\u7eca\u811a\u77f3\u53ea\u4f1a\u66f4\u591a\u3002\u90a3\u8981\u662f\u6211\u4eec\u6709\u4e00\u4e2a\u6309\u9ad8\u5ea6\u9012\u51cf\u7684\u9774\u5b50\u5e8f\u5217\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a**\u9012\u589e\u7684**\u7eca\u811a\u77f3\u5e8f\u5217\u3002\n\n\u90a3\u5f88\u663e\u7136\uff0c\u6211\u4eec\u8981\u5bf9\u9774\u5b50\u4ee5\u9ad8\u5ea6\u4e3a\u5173\u952e\u5b57\u6392\u51fa\u964d\u5e8f\u3002\u8fd9\u6837\u6211\u4eec\u5728\u6c42\u6bcf\u4e00\u53cc\u9774\u5b50\u7684\u6700\u5927\u7eca\u811a\u77f3\u7684\u65f6\u5019\uff0c\u5c31\u53ea\u7528\u5728\u4e0a\u4e00\u53cc\u9774\u5b50\u7684\u7eca\u811a\u77f3\u5927\u5c0f\u7684\u57fa\u7840\u4e0a\u53ea\u589e\u4e0d\u51cf\uff0c\u6709\u6548\u5730\u4f18\u5316\u4e86\u65f6\u95f4\u3002\n\n\u4f46\u5982\u4f55\u6c42\u7eca\u811a\u77f3\u5927\u5c0f\u8fd8\u662f\u9700\u8981\u4e00\u756a\u63a8\u6572\u3002\n\n\u6211\u4eec\u8bf4\u8fc7\uff1a**\u843d\u4e0d\u4e86\u811a\u7684\u5730\u65b9**\u79f0\u4f5c\u7eca\u811a\u77f3\u3002\u8fd9\u91cc\u7684\u843d\u4e0d\u4e86\u811a\u8f6c\u5316\u6210\u5224\u65ad\u6761\u4ef6\u5c31\u662f**\u9774\u5b50\u9ad8\u5ea6\u5c0f\u4e8e\u8be5\u683c\u96ea\u6df1**\uff0c\u770b\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u604d\u604d\u60da\u60da\u5c31\u6709\u4e86\u6c42\u6700\u5927\u7eca\u811a\u77f3\u7684\u505a\u6cd5\u3002\n\n\u8981\u662f\u4e00\u4e2a\u5730\u7816\u662f\u7eca\u811a\u77f3\uff0c\u5c31\u628a\u4ed6**\u67d3\u6210\u9ed1\u8272**\u3002\u6700\u540e\u6211\u4eec\u627e\u6700\u5927\u7eca\u811a\u77f3\u5c31\u662f\u627e**\u6700\u957f\u7684\u8054\u901a\u9ed1\u8272\u533a\u57df**\u3002\n\n\u88ab\u67d3\u8272\u7684\u5730\u65b9\u90fd\u6ee1\u8db3\u96ea\u6df1\u9ad8\u4e8e\u4e00\u4e2a\u503c\uff08\u9774\u5b50\u9ad8\u5ea6\uff09\uff0c\u800c\u6211\u4eec\u53c8\u77e5\u9053\u53ea\u6709\u5728\u54ea\u4e00\u683c\u4e0a\u67d3\u8272\u7684\u65f6\u5019\uff0c\u624d\u6709\u53ef\u80fd\u66f4\u65b0\u6700\u5927\u7eca\u811a\u77f3\u7684\u5927\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u53c8\u8d77\u4e86\u70b9\u4f18\u5316\u7684\u5fc3\u601d\u3002\n\n\u628a\u5730\u7816\u4ee5\u96ea\u6df1\u4e3a\u5173\u952e\u5b57\u6392\u4e2a\u964d\u5e8f\uff0c\u6211\u4eec\u67d3\u8272\u7684\u65f6\u5019\uff0c\u53ea\u7528\u505a $\\operatorname{while}$ \u76f4\u5230\u96ea\u6df1\u4f4e\u4e8e\u9774\u5b50\u9ad8\u5ea6\u5c31\u53ef\u4ee5\u505c\u4e86\u3002\u56e0\u4e3a\u8fd9\u4e4b\u540e\u90fd\u4e0d\u518d\u67d3\u8272\u4e86\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u66f4\u65b0\u6700\u5927\u7eca\u811a\u77f3\u3002\u8fd9\u4e5f\u662f\u4e00\u79cd\u65f6\u95f4\u7684\u7f29\u51cf\u3002\n\n\u6c42\u8054\u901a\u5757\u6211\u4eec\u518d\u719f\u6089\u4e0d\u8fc7\u4e86\uff0c\u7528**\u5e76\u67e5\u96c6**\u5c31\u662f\u4e00\u79cd\u6781\u4f73\u7684\u529e\u6cd5\uff08\u53c2\u8003Kruskal\uff09\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u51fa\u6765\u5c31\u662f\uff1a\u5982\u679c\u67d3\u8272\u65f6\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u4e0a\u4e00\u683c\u662f\u9ed1\u8272\uff0c\u5219\u8981**\u5c06\u4ed6\u4eec\u7528\u5e76\u67e5\u96c6\u5e76\u8d77\u6765\uff0c\u518d\u770b\u770b\u662f\u5426\u8981\u66f4\u65b0\u6700\u957f\u8fde\u901a\u5757\u957f\u5ea6**\u3002\u4ec5\u6b64\u800c\u5df2\u3002\n\n\u800c\u6c42\u51fa\u6765\u7684\u6700\u957f\u8054\u901a\u5757\u6bd5\u7adf\u53ea\u662f\u5bf9\u4e8e\u5f53\u524d\u9774\u5b50\u800c\u8a00\uff0c\u90a3\u6211\u4eec\u5982\u4f55\u5728\u5404\u4e2a\u9774\u5b50\u4e4b\u95f4\u4f20\u9012\u4fe1\u606f\u5462\uff1f\n\n\u76ee\u524d\u5f53\u4e0d\u4e86\u6700\u957f\u8054\u901a\u5757\u7684\u8054\u901a\u5757\u5e76\u4e0d\u662f\u4e00\u65e0\u662f\u5904\uff0c\u5c06\u6765\u53ef\u80fd\u8fd8\u4f1a\u5c06\u4ed6\u548c\u5176\u4ed6\u8054\u901a\u5757\u5e76\u8d77\u6765\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5f00\u4e00\u4e2a $cross$ \u6570\u7ec4\uff0c\u8868\u793a**\u4ee5\u8fd9\u5757\u5730\u7816\u4e3a\u7ed3\u5c3e\uff0c\u524d\u9762\u6709\u591a\u957f\u7684\u8054\u901a\u5757**\u3002\u8fd9\u4e2a\u6570\u7ec4\u521d\u59cb\u5316\u4e3a1\uff0c\u6bd5\u7adf\u6bcf\u5757\u5730\u7816\u6700\u65e9\u65f6\u81ea\u5df1\u90fd\u662f\u4e00\u4e2a\u8054\u901a\u5757\u3002\u800c $cross$ \u91cc\u7684\u503c\uff0c\u5728\u88ab\u67d3\u8272\u4e14\u4e0a\u4e00\u683c\u662f\u9ed1\u8272\u65f6\u4f1a\u8fdb\u884c\u66f4\u65b0\u3002\n\n\u800c\u4ee5\u4e0a\u6211\u4eec\u8bb2\u7684\u90fd\u662f\u4e0e\u4e0a\u4e00\u5757\u8054\u901a\uff0c\u800c\u4e0e\u4e0b\u4e00\u5757\u8054\u901a\u4e5f\u540c\u6837\u91cd\u8981\uff0c\u8fd9\u6837\u6211\u4eec\u7684\u67d3\u8272\u624d\u80fd\u6709\u65f6\u8d77\u5230\u8054\u7ed3\u4e24\u4e2a\u8054\u901a\u5757\u7684\u4f5c\u7528\u3002\n\n\u6574\u4e2a\u6c42\u7eca\u811a\u77f3\u90e8\u5206\u7684\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nint cnt = 1;\n//\u8fd9\u91cc\u6307\u6211\u4eec\u8d70\u5230\u4e86\u7b2c\u51e0\u5757\u5730\u7816\u3002\n//\u56e0\u4e3a\u9774\u5b50\u9ad8\u5ea6\u9012\u51cf\uff0c\u6240\u4ee5\u5230\u4e0b\u4e00\u53cc\u9774\u5b50\u65f6\uff0c\u5730\u7816\u7684\u67d3\u8272\u76f4\u63a5\u5f80\u4e0b\u4e00\u5757\u5730\u7816\u5224\u65ad\u5373\u53ef\u3002\n//\u4e0a\u4e00\u53cc\u9774\u5b50\u65f6\u88ab\u67d3\u8272\u7684\u4f4d\u7f6e\uff0c\u4e0b\u4e00\u53cc\u4e00\u5b9a\u8fd8\u662f\u67d3\u7740\u8272\u7684\u3002\n\nfor (register int i = 1; i <= M; i++) //i\u4ee3\u8868\u7b2ci\u53cc\u9774\u5b50\n{\n\twhile (cnt <= N && bri[cnt].snow > boo[i].dep)\n    //while\u7684\u6761\u4ef6\u91cc\uff0cbri\u5373\u5730\u7816\uff0cboo\u5373\u9774\u5b50\n\t{\n\t\tmaxcross = max(maxcross, 1);//\u8054\u901a\u5757\u5927\u5c0f\u5c11\u8bf4\u4e5f\u5f97\u6709\u4e00\u4e2a\n        \n\t\tcolor[bri[cnt].id] = 1;//color\u4ee3\u8868\u8fd9\u4e2a\u5730\u7816\u662f\u5426\u88ab\u67d3\u8272\n        //\u56e0\u4e3a\u6211\u4eec\u4e4b\u524dsort\u8fc7\u5730\u7816\uff0c\u6240\u4ee5\u5728\u4f4d\u7f6e\u987a\u5e8f\u4e0a\u8fd8\u662f\u5f97\u7528\u4ed6\u539f\u6765\u7684id\n        \n\t\tif (color[bri[cnt].id - 1])//\u4e0a\u4e00\u683c\u88ab\u67d3\u8272\n\t\t{\n        \t/*\u4ee5\u4e0b\u4e3a\u5e76\u67e5\u96c6\u201c\u5e76\u201d\u7684\u57fa\u64cd*/\n\t\t\tint x = find(bri[cnt].id - 1);\n            int y = find(bri[cnt].id);\n\t\t\tfa[x] = y;\n            \n\t\t\tcross[y] += cross[x];//\u8fd9\u6837\u66f4\u65b0cross\n            //\u6211\u4eeccross\u521d\u503c\u8d4b\u7684\u662f1\n            \n\t\t\tmaxcross = max(maxcross, cross[y]);\n            //\u53ef\u80fd\u4f1a\u66f4\u65b0\u6700\u957f\u8054\u901a\u5757\n\t\t}\n        \n        /*\u4e0b\u4e00\u683c\u540c\u4e0a*/\n\t\tif (color[bri[cnt].id + 1])\n\t\t{\n\t\t\tint x = find(bri[cnt].id);\n            int y = find(bri[cnt].id + 1);\n\t\t\tfa[x] = y;\n\t\t\tcross[y] += cross[x];\n\t\t\tmaxcross = max(maxcross, cross[y]);\n\t\t}\n        \n\t\tcnt++;\n\t}\n\tif (maxcross < boo[i].step)//\u82e5\u8fd9\u53cc\u9774\u5b50\u80fd\u514b\u670d\u6700\u5927\u7eca\u811a\u77f3\n\t{\n\t\tCout[boo[i].id] = 1;//\u8f93\u51fa\u7684\u662f1\n\t}\n}\n```\n\u5168\u8fc7\u7a0b\u7684\u590d\u6742\u5ea6\u5927\u4f53\u662f $O(N \\log N)$ \uff0c$\\operatorname{sort}$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u4ee5\u4e0b\u4e3a\u5b8c\u6574\u4ee3\u7801\uff08\u6bd4\u7ebf\u6bb5\u6811\u7684\u7248\u672c\u77ed\u591a\u4e86\uff5e\uff09\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 1e5 + 7;\nstruct shoe\n{\n\tint step;\n\tint dep;\n\tint id;\n} boo[MAX];\nstruct brick\n{\n\tint snow;\n\tint id;\n} bri[MAX];\nbool cmp1(shoe a, shoe b)\n{\n\treturn a.dep > b.dep;\n}\nbool cmp2(brick a, brick b)\n{\n\treturn a.snow > b.snow;\n}\nint cnt = 1;\nint color[MAX], cross[MAX];\nint fa[MAX];\nint maxcross = 0;\nint Cout[MAX];\ninline int find(int x)\n{\n\tif (x == fa[x])\n\t\treturn x;\n\treturn fa[x] = find(fa[x]);\n}\nint read()\n{\n\tint num = 0, bj = 0;\n\tchar ch = getchar();\n\twhile (!isdigit(ch))\n\t{\n\t\tif (ch == '-')\n\t\t{\n\t\t\tbj = 1;\n\t\t}\n\t\tch = getchar();\n\t}\n\twhile (isdigit(ch))\n\t{\n\t\tnum = num * 10 + ch - '0';\n\t\tch = getchar();\n\t}\n\treturn bj ? -num : num;\n}\nint main()\n{\n\tint N, M;\n\tcin >> N >> M;\n\tfor (register int i = 1; i <= N; i++)\n\t{\n\t\tbri[i].snow = read();\n\t\tbri[i].id = i;\n\t}\n\tfor (register int i = 1; i <= M; i++)\n\t{\n\t\tboo[i].dep = read();\n\t\tboo[i].step = read();\n\t\tboo[i].id = i;\n\t}\n\tsort(bri + 1, bri + 1 + N, cmp2);\n\tsort(boo + 1, boo + 1 + M, cmp1);\n\tfor (register int i = 1; i <= N; i++)\n\t{\n\t\tcross[i] = 1;\n\t\tfa[i] = i;\n\t}\n\tfor (register int i = 1; i <= M; i++)\n\t{\n\t\twhile (cnt <= N && bri[cnt].snow > boo[i].dep)\n\t\t{\n\t\t\tmaxcross = max(maxcross, 1);\n\t\t\tcolor[bri[cnt].id] = 1;\n\t\t\tif (color[bri[cnt].id - 1])\n\t\t\t{\n\t\t\t\tint x = find(bri[cnt].id - 1), y = find(bri[cnt].id);\n\t\t\t\tfa[x] = y;\n\t\t\t\tcross[y] += cross[x];\t\t\t \n\t\t\t\tmaxcross = max(maxcross, cross[y]);\n\t\t\t}\n\t\t\tif (color[bri[cnt].id + 1])\n\t\t\t{\n\t\t\t\tint x = find(bri[cnt].id), y = find(bri[cnt].id + 1);\n\t\t\t\tfa[x] = y;\n\t\t\t\tcross[y] += cross[x];\n\t\t\t\tmaxcross = max(maxcross, cross[y]); \n\t\t\t}\n\t\t\tcnt++;\n\t\t}\n\t\tif (maxcross < boo[i].step)\n\t\t{\n\t\t\tCout[boo[i].id] = 1;\n\t\t}\n\t}\n\tfor (register int i = 1; i <= M; i++)\n\t{\n\t\tprintf(\"%d\\n\", Cout[i]);\n\t}\n}\n```\n\n\u6d1b\u8c37\u7684\u7248\u672c\u4e0d\u9700\u8981\u5361\u5e38\uff0c\u4f46\u662f\u5176\u4ed6OJ\u4e0a\u5c31\u5f88\u96be\u8bf4\u4e86\u3002\n\n\u4e0d\u8fc7\u5361\u4e00\u5361\u90fd\u662f\u8fc7\u5f97\u4e86\u7684\u3002",
        "postTime": 1599133542,
        "uid": 150879,
        "name": "quest_2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4269 \u3010[USACO18FEB]Snow Boots G\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u503c\u57df\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\n\n## \u601d\u8def\n\u9996\u5148\u8f6c\u5316\u4e00\u4e0b\u9898\u610f\uff1a\u5bf9\u4e8e\u6bcf\u4e2a $s_i,d_i$ \u76f8\u5f53\u4e8e\u6c42\u5b58\u4e0d\u5b58\u5728\u4e00\u6bb5\u957f\u4e3a $d_i$ \u7684\u533a\u95f4\u6ee1\u8db3\u5176\u4e2d\u7684\u6700\u5c0f\u503c\u5927\u4e8e $s_i$ \uff0c\u4e0d\u5b58\u5728\u8f93\u51fa `YES`\uff0c\u5426\u5219\u8f93\u51fa `NO` (\u8fd9\u6837\u7684\u8bdd\u8fd9\u6bb5\u533a\u95f4\u4e00\u5b9a\u8de8\u4e0d\u8fc7\u53bb)\n\n\u8003\u8651\u9884\u5904\u7406\u957f\u4e3a $i$ \u7684\u6240\u6709\u533a\u95f4\u6700\u5c0f\u503c\u4e2d\u7684\u6700\u5927\u503c\u4e3a $f_i$\n\n\u66b4\u529b\u53bb\u6c42\u662f $O(n^2)$ \u7684\uff0c\u53cd\u8fc7\u6765\u8003\u8651\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u5bf9\u4e8e $f_i$ \u7684\u8d21\u732e\u3002\u53ef\u4ee5\u6309\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4f9d\u6b21\u52a0\u5165\u6570\u7ec4\u4e2d\uff0c\u7531\u4e8e\u5df2\u52a0\u5165\u7684\u6570\u4e00\u5b9a\u6bd4\u5f53\u524d\u6570\u5c0f\uff0c\u90a3\u4e48\u4ee5\u5f53\u524d\u6570\u4e3a\u6700\u5c0f\u503c\u7684\u533a\u95f4\u4e00\u5b9a\u662f\u5b83\u7684\u524d\u9a71\u5230\u5b83\u7684\u540e\u7ee7 $[pre_x+1,nxt_x-1]$ \u7684\u4e00\u6bb5\uff0c\u957f\u4e3a $nxt_x-pre_x-1$ \uff0c\u5219 $\\forall_{i \\ge nxt_x-pre_x-1}\\  f_i=x$\n\n\u7528\u503c\u57df\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\n\n```cpp\n#include <bits/stdc++.h>\n#define rg register\nusing namespace std;\nconst int N=100003;\nstruct node{\n\tint i,v;\n\tbool operator <(const node x)const{\n\t\treturn v<x.v;\n\t}\n}a[N];\nint reads(){\n\trg char c;\n\tint x=0;\n\twhile (!isdigit(c=getchar()));\n\tdo x=(x<<1)+(x<<3)+(c^48);\n\twhile (isdigit(c=getchar()));\n\treturn x;\n}\nint f[N],n,m;\nnamespace ST{\n\tbool val[4*N];\n\tint l[4*N],r[4*N];\n\tvoid ins(int p,int x){\n\t\tif (l[p]==r[p]) {val[p]=1; return;}\n\t\tint mid=(l[p]+r[p])>>1;\n\t\tif (x<=mid) ins(2*p,x);\n\t\telse ins(2*p+1,x);\n\t\tval[p]=val[2*p]||val[2*p+1];\n\t}\n\tvoid bld(int ll,int rr,int p){\n\t\tl[p]=ll; r[p]=rr; val[p]=0;\n\t\tif (ll==rr) return ;\n\t\tint mid=(ll+rr)>>1;\n\t\tbld(ll,mid,2*p); bld(mid+1,rr,2*p+1);\n\t}\n\tint loc(int p,int x){\n\t\tif (l[p]==r[p]) return p;\n\t\tint mid=(l[p]+r[p])>>1;\n\t\tif (x<=mid) return loc(2*p,x);\n\t\telse return loc(2*p+1,x);\n\t}\n\tint pre(int x){\n\t\tint p=loc(1,x);\n\t\twhile (p!=1&&(!val[p^1]||!(p&1))) p>>=1; p^=1;\n\t\tif (!p) return 0;\n\t\twhile (l[p]!=r[p]) if (val[2*p+1]) p=2*p+1; else p=2*p;\n\t\treturn l[p];\n\t}\n\tint nxt(int x){\n\t\tint p=loc(1,x);\n\t\twhile (p!=1&&(!val[p^1]||(p&1))) p>>=1; p^=1;\n\t\tif (!p) return n+1;\n\t\twhile (l[p]!=r[p]) if (val[2*p]) p=2*p; else p=2*p+1;\n\t\treturn l[p];\n\t}\n}\nint main(){\n//\tfreopen(\"boots.in\",\"r\",stdin);\n//\tfreopen(\"boots.out\",\"w\",stdout);\n\tn=reads(); m=reads();\n\tST::bld(1,n,1);\n\tfor (rg int i=1; i<=n; i++) a[i]=(node){i,reads()};\n\tsort(a+1,a+n+1);\n\tfor (rg int i=1; i<=n; i++){\n\t\tST::ins(1,a[i].i);\n\t\tf[ST::nxt(a[i].i)-ST::pre(a[i].i)-1]=a[i].v;\n\t}\n\tfor (rg int i=n-1; i; i--) f[i]=max(f[i],f[i+1]);\n\tfor (rg int i=1; i<=m; i++){\n\t\tint s=reads(),d=reads();\n\t\tif (s>=f[d]) puts(\"1\");\n\t\telse puts(\"0\");\n\t}\n//\tfclose(stdin);\n//\tfclose(stdout);\n\treturn 0;\n} \t\n```\n",
        "postTime": 1617429580,
        "uid": 163729,
        "name": "yyyyxh",
        "ccfLevel": 7,
        "title": "P4269 [USACO18FEB]Snow Boots G \u9898\u89e3"
    },
    {
        "content": "\u6574\u4f53\u4e8c\u5206+\u5355\u8c03\u961f\u5217\u4f18\u5316 dp\u3002\n\n\u6bcf\u53cc\u9774\u5b50\u90fd\u6709 $d_i$ \u548c $s_i$ \u4e24\u4e2a\u5c5e\u6027\uff0c\u5148\u611f\u6027\u7684\u601d\u8003\u4e00\u4e0b\uff0c\u5982\u679c\u67d0\u4e00\u79cd\u5c5e\u6027\u5f3a\u4e00\u4e9b\uff0c\u90a3\u4e48\u60f3\u6210\u529f\u8d70\u5230\u7b2c $n$ \u5757\u7816\u5bf9\u4e8e\u53e6\u4e00\u79cd\u5c5e\u6027\u7684\u9700\u6c42\u5c31\u76f8\u5e94\u964d\u4f4e\u3002\u8003\u8651\u6309\u7167 $s$ \u964d\u5e8f\u6392\u5e8f\uff0c\u4e0d\u96be\u53d1\u73b0\u6b64\u65f6\u6211\u4eec\u5982\u679c\u6309\u987a\u5e8f\u6c42\u89e3\u51fa\u6bcf\u53cc\u9774\u5b50\u8981\u80fd\u591f\u8fbe\u5230\u7b2c $n$ \u5757\u7816\u6240\u9700\u7684\u6700\u5c0f\u7684 $d$\uff0c\u8fd9\u4e00\u5b9a\u662f\u5355\u8c03\u4e0d\u964d\u7684\u3002\u4e0d\u96be\u60f3\u5230\u6574\u4f53\u4e8c\u5206\u3002\u95ee\u9898\u53d8\u4e3a\u6c42\u51fa\u6bcf\u53cc\u9774\u5b50\u9700\u8981\u7684\u6700\u5c0f\u7684 $d$\uff0c\u7136\u540e\u8fdb\u884c\u5224\u5b9a\u3002\n\n\u6574\u4f53\u4e8c\u5206\u8fc7\u7a0b\u4e2d\uff0c\u5047\u8bbe\u5f53\u524d\u7b54\u6848\u533a\u95f4\u4e3a $[ansl,ansr]$\uff0c\u4e2d\u70b9\u4e3a $mid$\uff0c\u5f85\u6c42\u89e3\u7684\u9774\u5b50\u7684\u533a\u95f4\u4e3a $[l,r]$\uff0c\u6211\u4eec\u8981\u6309\u7167\u8fd9\u4e9b\u9774\u5b50\u5728 $d$ \u4e3a $mid$ \u7684\u60c5\u51b5\u4e0b\u80fd\u5426\u8d70\u5230 $n$ \u53f7\u7816\u8fdb\u884c\u5206\u7ec4\u4ece\u800c\u9012\u5f52\u3002\u8003\u8651\u8fdb\u884c\u52a8\u6001\u89c4\u5212\uff0c\u8bbe $f_i$ \u8868\u793a\u6309\u7167\u5f53\u524d\u7684 $d$ \u503c\uff0c\u8d70\u5230\u7b2c $i$ \u5757\u7816\u6240\u9700\u8981\u7684\u6700\u5c0f\u7684 $s$\uff08$a_i$ \u4e3a\u79ef\u96ea\u6df1\u5ea6\uff09\u3002\u5219\u6709\uff1a\n\n$$\nf_i=\\max(a_i,\\min_{1\\leq j,i-j\\ge mid}f_j)\n$$\n\n\u4e0d\u96be\u53d1\u73b0 $j$ \u7684\u53d6\u503c\u8303\u56f4\u6ee1\u8db3\u201c\u6ed1\u52a8\u7a97\u53e3\u201d\uff0c\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\uff0c$O(n)$\u3002\n\n\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u5bf9 $s$ \u964d\u5e8f\u6392\u5e8f\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 $[l,r]$ \u4e2d\u8fdb\u884c\u4e8c\u5206\uff0c\u628a\u80fd\u8d70\u5230 $n$ \u7684\u9774\u5b50\u9012\u5f52\u5230 $[ansl,mid]$ \u4e2d\u5bfb\u627e\u7b54\u6848\uff0c\u5176\u4f59\u7684\u9012\u5f52\u5230 $[mid+1,ansr]$\u3002\u4e00\u53cc\u9774\u5b50\u80fd\u8d70\u5230 $n$ \u7684\u5224\u5b9a\u6761\u4ef6\u5c31\u662f\u8fd9\u53cc\u9774\u5b50\u7684 $s$ \u503c\u5927\u4e8e\u7b49\u4e8e $f_n$\u3002\n\n\u7b80\u5355\u597d\u5199\u7684\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100010;\nint a[N];\nstruct dat{\n\tint s;\n\tint id;\n}b[N];\nint n,m;\nint cmp(dat x,dat y){\n\treturn x.s>y.s;\n}\nint f[N];\nint ans[N];\nint q[N];\nint d[N];\nvoid solve(int l,int r,int ansl,int ansr){\n\tif(ansl>ansr||l>r)\n\t\treturn;\n\tif(ansl==ansr){\n\t\tfor(int i=l;i<=r;i++)\n\t\t\tans[b[i].id]=ansl;\n\t\treturn;\n\t}\n\tint mid=(ansl+ansr)/2;\n\tf[0]=f[1]=0;\n\tint head=1,tail=1;\n\tq[1]=1;\n\tfor(int i=2;i<=n;i++){\n\t\twhile(head<=tail&&i-q[head]>mid)\n\t\t\thead++;\n\t\tf[i]=max(a[i],f[q[head]]);\n\t\twhile(head<=tail&&f[i]<=f[q[tail]])\n\t\t\ttail--;\n\t\ttail++;\n\t\tq[tail]=i;\n\t}\n\tint L=l,R=r;\n\tif(b[l].s<f[n]){\n\t\tsolve(l,r,mid+1,ansr);\n\t\treturn;\n\t}\n\tif(b[r].s>=f[n]){\n\t\tsolve(l,r,ansl,mid);\n\t\treturn;\n\t}\n\twhile(L<R){\n\t\tint mid=(L+R)/2;\n\t\tif(b[mid].s>=f[n])\n\t\t\tL=mid+1;\n\t\telse\n\t\t\tR=mid;\n\t}\n\tsolve(l,L-1,ansl,mid);\n\tsolve(L,r,mid+1,ansr);\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>a[i];\n\tfor(int i=1;i<=m;i++){\n\t\tb[i].id=i;\n\t\tcin>>b[i].s>>d[i];\n\t}\n\tsort(b+1,b+m+1,cmp);\n\tsolve(1,m,1,n);\n\tfor(int i=1;i<=m;i++){\n\t\tif(ans[i]<=d[i])\n\t\t\tcout<<1<<'\\n';\n\t\telse\n\t\t\tcout<<0<<'\\n';\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1661391049,
        "uid": 140360,
        "name": "LKawaii",
        "ccfLevel": 0,
        "title": "P4269 \u9898\u89e3"
    },
    {
        "content": "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8fd9\u9898\u4e0d\u7528\u94fe\u8868\u4e5f\u53ef\u4ee5\u5440\uff0c\u849f\u84bb\u6211\u7528\u7684\u662f\u5e76\u67e5\u96c6\u3002\u6bcf\u6b21\u5148\u6309\u79ef\u96ea\u6df1\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u9774\u5b50\u627f\u53d7\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5148\u628a\u4e0d\u80fd\u8d70\u5230\u7684\u5730\u65b9\u5e76\u8d77\u6765\uff0c\u90a3\u4e48\u663e\u7136\u53ea\u8981$d_i\\gt$\u8fde\u7eed\u4e0d\u80fd\u8d70\u7684\u5730\u65b9\u7684\u957f\u5ea6\u7684\u6700\u5927\u503c\u7b54\u6848\u4e3a$1$\uff0c\u53cd\u4e4b\u4e3a$0$\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,b;\nint l[100010],r[100010];\npair<int,int>tiles[100010];\nint par[100010];\nint rnk[100010];\nint siz[100010];\nbool f[100010];\nbool ans[100010];\nint res;\npair<int,pair<int,int> >boots[100010];\nint getpar(int x)\n{\n\treturn x==par[x]?x:par[x]=getpar(par[x]);\n}\nvoid un(int x,int y)\n{\n\tx=getpar(x);y=getpar(y);\n\tif(x==y)return;\n\tif(rnk[x]<rnk[y])\n\t{\n\t\tpar[x]=y;\n\t\tsiz[y]+=siz[x];\n\t}\n\telse\n\t{\n\t\tif(rnk[x]==rnk[y])rnk[x]++;\n\t\tpar[y]=x;\n\t\tsiz[x]+=siz[y];\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&b);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\ttiles[i]=make_pair(x,i);\n\t\tpar[i]=i;\n\t\tsiz[i]=1;\n\t\tf[i]=false;\n\t}\n\tfor(int i=1;i<=b;i++)\n\t{\n\t\tint s,d;\n\t\tscanf(\"%d%d\",&s,&d);\n\t\tboots[i]=make_pair(s,make_pair(d,i));\n\t}\n\tsort(tiles+1,tiles+n+1);\n\treverse(tiles+1,tiles+n+1);\n\tsort(boots+1,boots+n+1);\n\treverse(boots+1,boots+n+1);\n\tint pos=1;\n\tfor(int i=1;i<=b;i++)\n\t{\n\t\twhile(pos<=n && tiles[pos].first>boots[i].first)\n\t\t{\n\t\t\tint x=tiles[pos].second;\n\t\t\tf[x]=true;\n\t\t\tif(f[x-1])un(x-1,x);\n\t\t\tif(f[x+1])un(x,x+1);\n\t\t\tres=max(res,siz[getpar(x)]);\n\t\t\tpos++;\n\t\t}\n\t\tif(res<boots[i].second.first)ans[boots[i].second.second]=true;\n\t}\n\tfor(int i=1;i<=b;i++)if(ans[i])puts(\"1\");else puts(\"0\");\n\treturn 0;\n}\n```",
        "postTime": 1531557488,
        "uid": 59551,
        "name": "ASSWECAN",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4269 \u3010[USACO18FEB]Snow Boots G\u3011"
    },
    {
        "content": "\u5148\u9884\u5904\u7406\u51fa\u53ea\u7ecf\u8fc7 $\\le i$ \u7684\u70b9\uff0c\u81f3\u5c11\u6bcf\u4e00\u6b65\u9700\u8981\u8de8\u591a\u5927\u8ddd\u79bb\u3002\n\n\u628a\u6240\u6709 $f_i$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4f9d\u6b21\u52a0\u5165\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u4e2d\uff0c\u9700\u8981\u67e5\u8be2\u76f8\u90bb\u4e24\u70b9\u8ddd\u79bb\u7684\u6700\u5927\u503c\u3002\u7528\u4e24\u4e2a set \u5c31\u53ef\u4ee5\u7ef4\u62a4\uff08\u6216\u8005\u4e00\u4e2a set \u4e00\u4e2a\u53ef\u5220\u9664\u5806\uff09\uff0c\u5148\u5728\u7b2c\u4e00\u4e2a set \u4e2d\u627e\u5230\u5de6\u8fb9\u53f3\u8fb9\u7684\u70b9\uff0c\u5220\u9664\u8fd9\u4e24\u70b9\u95f4\u8ddd\u79bb\uff0c\u52a0\u5165\u65b0\u70b9\u5230\u5de6\u8fb9\u53f3\u8fb9\u7684\u70b9\u7684\u8ddd\u79bb\uff0c\u518d\u67e5\u8be2\u6700\u5927\u503c\u3002\n\n\u5bf9\u6bcf\u4e2a\u8be2\u95ee\uff0c\u5047\u5982\u80fd\u8d70\u7684\u8ddd\u79bb\u5927\u4e8e\u7b49\u4e8e\u53ea\u8d70 $\\le s$ \u7684\u6700\u5c0f\u8ddd\u79bb\u5c31\u53ef\u884c\uff0c\u5426\u5219\u4e0d\u53ef\u884c\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,a[100005],ans[100005],c[100005];\nstruct P{\n\tint x,id;\n}b[100005];\nbool operator <(P o,P oo){return o.x<oo.x;};\nmultiset<int> s,q;\nint main() {\n\tios::sync_with_stdio(0),cin.tie(0),cin>>n>>m;\n\tfor(int i=1;i<=n;i++)cin>>a[i],b[i]={a[i],i},c[i]=a[i];\n\tsort(b+1,b+n+1),sort(c+1,c+n+1);\n\tc[0]=unique(c+1,c+n+1)-c-1;\n\ts.insert(1),s.insert(n),q.insert(n-1),ans[1]=n-1;\n\tfor(int i=1,j=1;i<=n;i=j){\n\t\twhile(j<=n&&b[j].x==b[i].x)j++;\n\t\tint pos=lower_bound(c+1,c+c[0]+1,b[i].x)-c;\n\t\tfor(int k=i;k<j;k++){\n\t\t\tif(b[k].id<2||b[k].id>n-1)continue;\n\t\t\tauto it=s.lower_bound(b[k].id),it2=it;\n\t\t\tit2--;\n\t\t\tq.erase(q.find(*it-*it2)),q.insert(b[k].id-*it2),q.insert(*it-b[k].id);\n\t\t\ts.insert(b[k].id);\n\t\t}\n\t\tans[pos]=*--q.end();\n\t}\n\tfor(int i=1,x,y;i<=m;i++){\n\t\tcin>>x>>y;\n\t\tint pos=upper_bound(c+1,c+c[0]+1,x)-c-1;\n\t\tif(y>=ans[pos])puts(\"1\");\n\t\telse puts(\"0\");\n\t}\n}\n```",
        "postTime": 1598531790,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4269 \u3010[USACO18FEB]Snow Boots G\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u7565\u5fae\u66b4\u529b\u7684\u65b9\u6cd5\u3002\n\n\u5982[\u8fd9\u7bc7](https://www.luogu.com.cn/blog/quest233/solution-p4269)\u9898\u89e3\u6240\u8bf4\uff0c\u5f53\u6211\u4eec\u628a\u9774\u5b50\u6309\u9ad8\u5ea6\u964d\u5e8f\u6392\u5e8f\u65f6\uff0c\u540e\u9762\u7684\u9774\u5b50\u80fd\u8d70\u7684\u5730\u65b9\u80af\u5b9a\u4e0d\u6bd4\u524d\u9762\u7684\u9774\u5b50\u7684\u591a\u3002\u5f53\u6709\u4e24\u4e2a\u80fd\u8d70\u7684\u5730\u65b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff08\u4e0d\u5305\u542b\u4e24\u8fb9\uff09\u5927\u4e8e\u7b49\u4e8e\u8fd9\u53cc\u9774\u5b50\u7684\u6700\u5927\u6b65\u957f\u4e14\u8fd9\u4e24\u4e2a\u80fd\u8d70\u7684\u5730\u65b9\u4e4b\u95f4\u6ca1\u6709\u5176\u4ed6\u7684\u80fd\u8d70\u7684\u5730\u65b9\uff0c\u8fd9\u53cc\u9774\u5b50\u5c31\u4e0d\u80fd\u7a7f\u4e86\u3002\n\n\u8be6\u89c1\u4ee3\u7801\u3002\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nint n,b,a[500001],ans[500001]; \nstruct node{\n    int id;//id\u8868\u793a\u6392\u5e8f\u524d\u8fd9\u53cc\u9774\u5b50\u7684\u5e8f\u53f7\uff08\u56e0\u4e3a\u8981\u6309\u539f\u987a\u5e8f\u8f93\u51fa\uff09 \n    int s,d;\n}q[500001];\nvector<int> v;//v\u7528\u6765\u5b58\u76ee\u524d\u80fd\u8d70\u7684\u5730\u65b9 \nbool cmp(node a,node b){//\u628a\u9774\u5b50\u6309\u9ad8\u5ea6\u964d\u5e8f\u6392\u5e8f\n    return a.s>b.s;\n}\nint main(){\n    cin>>n>>b;\n    for(int i=1;i<=n;i++){\n        cin>>a[i];\n        v.push_back(i);//\u4e00\u5f00\u59cb\u6211\u4eec\u4e0d\u77e5\u9053\u54ea\u4e9b\u5730\u65b9\u4e0d\u80fd\u8d70\uff0c\u5c31\u90fd\u653e\u8fdb\u53bb \n    }\n    for(int i=1;i<=b;i++){\n        cin>>q[i].s>>q[i].d;\n        q[i].id=i;\n    }\n    sort(q+1,q+b+1,cmp);\n    for(int i=1;i<=b;i++){\n        vector<int> now;//now\u7528\u6765\u5b58\u6392\u5e8f\u540e\u7b2ci\u53cc\u9774\u5b50\u65b0\u589e\u7684\u4e0d\u80fd\u8d70\u7684\u5730\u65b9 \n        bool check=true;//check\u4e3atrue\u8868\u793a\u6392\u5e8f\u540e\u7b2ci\u53cc\u9774\u5b50\u80fd\u7a7f\u8fc7\u96ea\u5730\uff0c\u4e3afalse\u8868\u793a\u4e0d\u80fd \n        for(int j=0;j<v.size();j++){\n            if(a[v[j]]>q[i].s){ \n                now.push_back(v[j]);\n            }\n        }\n        for(int j=0;j<now.size();j++){//\u6328\u4e2a\u628a\u65b0\u589e\u7684\u4e0d\u80fd\u8d70\u7684\u5730\u65b9\u4ecev\u4e2d\u5220\u9664 \n            v.erase(lower_bound(v.begin(),v.end(),now[j]));//\u56e0\u4e3av\u6709\u5e8f\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e8c\u5206\n        }\n        for(int j=0;j<v.size()-1;j++){\n            if(v[j+1]-v[j]-1>=q[i].d){\n                check=false;\n                break;\n            }\n        }\n        if(check==true){\n            ans[q[i].id]=1;\n        }else{\n            ans[q[i].id]=0;\n        }\n    }\n    for(int i=1;i<=b;i++){\n        cout<<ans[i]<<endl;\n    }\n    return 0;\n}\n```\n\n\u56e0\u4e3a\u505a\u6cd5\u6709\u4e9b\u8fc7\u4e8e\u66b4\u529b\uff0c\u4e14\u4f7f\u7528\u4e86\u5927\u91cf\u7684 STL\uff0c\u6240\u4ee5\u5728\u4e0d\u5f00 -O2 \u4f18\u5316\u7684\u60c5\u51b5\u4e0b\u662f\u4f1a\u65f6\u95f4\u8d85\u9650\u7684\u3002\u4f46\u662f\u5f53\u5f00\u542f -O2 \u4f18\u5316\u65f6\uff0c\u662f\u53ef\u4ee5\u52c9\u5f3a\u5361\u8fc7\u7684\u3002[\u8bb0\u5f55](https://www.luogu.com.cn/record/66992939)",
        "postTime": 1642409446,
        "uid": 511907,
        "name": "\u4e00\u53ea\u5927\u9f99\u732b",
        "ccfLevel": 5,
        "title": "P4269 \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u95ee\u9898\u672c\u8d28\u3002\n\n\u95ee\u9898\u662f\u4e00\u53cc\u9774\u5b50\u80fd\u4e0d\u80fd\u8d70\u5230\u7ec8\u70b9\uff0c\u8fd9\u4e2a\u9774\u5b50\u6700\u5927\u8de8\u5ea6\u4e3a$d$\uff0c\u6700\u5927\u9ad8\u5ea6\u4e3a $s$ \u3002\n\n\u5982\u679c\u9047\u5230\u4e86\u9ad8\u5ea6\u4e3a $s$ \u7684\u96ea\u5806\uff0c\u8fd9\u53cc\u9774\u5b50\u5c31\u8fc7\u4e0d\u53bb\u4e86\u4e48\uff1f\n\n\u5f53\u7136\u4e0d\u662f\uff0c\u8fd9\u53cc\u9774\u5b50\u6700\u5927\u8de8\u5ea6\u4e3a $d$ \uff0c\u5982\u679c\u9ad8\u5ea6\u6bd4$s$\u5927\uff0c\u90a3\u4e48\u8fd9\u53cc\u9774\u5b50\u5c31\u80fd\u8de8\u8fc7\u53bb\u3002\n\n\u7167\u8fd9\u4e48\u8bf4\uff0c\u603b\u4e0d\u4f1a\u6240\u6709\u96ea\u5806\u90fd\u80fd\u8de8\u8fc7\u53bb\u5427\uff1f\n\n\u4e0d\u5bf9\uff0c\u56e0\u4e3a\u8de8\u5ea6\u6700\u591a\u4e3a $d$ \uff0c\u5982\u679c\u9ad8\u5ea6\u6bd4 $s$ \u5927\u7684\u96ea\u5806\u8fde\u7eed\u6709 $d$ \u5806\uff0c\u90a3\u4e48\u6211\u7684\u9774\u5b50\u5c31\u8de8\u4e0d\u8fc7\u53bb\uff0c\u4e5f\u5c31\u5230\u8fbe\u4e0d\u4e86\u7ec8\u70b9\u3002\n\n\u8fd9\u4e48\u4e00\u5206\u6790\uff0c\u95ee\u9898\u53d8\u6210\u4e86**\u8fde\u7eed\u7684\u9ad8\u5ea6\u6bd4 $s$ \u5927\u7684\u96ea\u5806\u7684\u6570\u91cf\u662f\u4e0d\u662f\u6bd4 $d$ \u5c0f\uff0c\u5982\u679c\u6bd4 $d$ \u5c0f\uff0c\u9774\u5b50\u5c31\u80fd\u8d70\u8fc7\u53bb\uff0c\u5426\u5219\u5c31\u4e0d\u80fd**\n\n\u518d\u6765\u770b\u4e00\u4e2a\u95ee\u9898\uff1a\n\n\u73b0\u5728\u6709 $a$ \uff0c $b$ \u4e24\u53cc\u9774\u5b50\uff0c $s_a$ \u6bd4 $s_b$ \u5927\uff0c\u90a3\u4e48\u662f\u9774\u5b50 $a$ \u4e0d\u80fd\u8d70\u7684\u96ea\u5806\u591a\uff0c\u8fd8\u662f\u9774\u5b50 $b$ \u4e0d\u80fd\u8d70\u7684\u96ea\u5806\u591a\uff1f\n\n\u5f88\u663e\u7136\uff0c\u9774\u5b50 $b$ \u4e0d\u80fd\u8d70\u7684\u96ea\u5806\u591a\u3002\n\n\u90a3\u4e48\uff0c\u663e\u7136\u7684\uff0c\u6211\u4eec\u628a\u9774\u5b50\u6309\u7167 $s$ \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u90a3\u4e48\u524d\u9762\u7684\u9774\u5b50\u8d70\u4e0d\u8fc7\u7684\u8def\uff0c\u540e\u9762\u7684\u9774\u5b50\u90fd\u4e0d\u80fd\u8d70\uff0c\u4f46\u662f\u8fd9\u6ca1\u6709\u7528\uff0c\u56e0\u4e3a\u8fd8\u662f\u5f97\u4ece\u5934\u5f00\u59cb\u5faa\u73af\u3002\n\n\u90a3\u4e48\uff0c\u600e\u6837\u624d\u80fd\u4e0d\u4ece\u5934\u5f00\u59cb\u5faa\u73af\u634f\uff1f\n\n**\u6211\u4eec\u8fd8\u5f97\u628a\u96ea\u5806\u6309\u7167\u9ad8\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff01**\n\n\u4f46\u662f\u6709\u7684\u4eba\u5c31\u95ee\u4e86\uff1a\u6392\u4e86\u5e8f\u6211\u4eec\u600e\u4e48\u7edf\u8ba1\u8fde\u7eed\u7684\u4e2a\u6570\u5462\uff1f\n\n\u6211\u4eec\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u6570\u53ef\u4ee5\u4e3a\u4ed6\u6253\u4e0a\u6807\u8bb0\uff0c\u8868\u793a\u4ed6\u5df2\u7ecf\u8fdb\u6765\u4e86\u3002\n\n\u800c\u4ed6\u6bcf\u6b21\u8fdb\u6765\u90fd\u8981\u68c0\u67e5\u4ed6\u7684\u4e24\u8fb9\uff0c\u5982\u679c\u6709\u54ea\u4e2a\u96ea\u5806\u6709\u6807\u8bb0\uff0c\u90a3\u4e48\u4ed6\u4eec\u8fde\u8d77\u6765\u53d8\u6210\u4e00\u4e32\u5927\u96ea\u5806\u3002\n\n\u4ed6\u4eec\u6bcf\u6b21\u8981\u5408\u5e76\uff0c\u5408\u5e76\u7684\u8bdd\u4ec0\u4e48\u6700\u5feb\u5462\uff1f**\u5e76\u67e5\u96c6\uff01**\n\n\u90a3\u4e48\u6211\u4eec\u8981\u6c42\u7684\u662f\u5565\u5462\uff1f\u8fde\u7eed\u7684\u96ea\u5806\u7684\u5927\u5c0f\u3002\n\n\u8fd9\u4e2a\u6211\u4eec\u5c31\u653e\u5728\u7236\u8282\u70b9\u53bb\u5904\u7406\u3002\n\n\u90a3\u4e48\u663e\u7136\u7684\uff0c\u4e24\u4e2a\u8282\u70b9\u8054\u5408\u7684\u65f6\u5019\uff0c\u96ea\u5806\u5927\u5c0f\u4e5f\u662f\u8981\u76f8\u52a0\u7684\u3002\n\n\u6bcf\u6b21\u76f8\u52a0\u6211\u4eec\u90fd\u8981\u7edf\u8ba1\u6700\u5927\u503c\uff0c\u7136\u540e\u62ff\u6700\u5927\u503c\u4e0e\u9774\u5b50\u7684\u8de8\u5ea6$d$\u6bd4\u8f83\u5c31\u884c\u4e86\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,b,num[100010],MAX;\nbool vis[100010];\nint ans[100010];\nstruct node{//\u96ea\u5806\u7684\u7ed3\u6784\u4f53\uff0c\u5206\u522b\u4ee3\u8868\u9ad8\u5ea6\uff0c\u7f16\u53f7\n\tint h,id;\n}p[100005];\nstruct point{//\u9774\u5b50\u7684\u7ed3\u6784\u4f53\uff0c\u5206\u522b\u4ee3\u8868\u9ad8\u5ea6\uff0c\u8de8\u5ea6\uff0c\u7f16\u53f7\n\tint h,w,id;\n}q[100005];\nbool cmp1(const node &a,const node &b){//\u96ea\u5806\u7684\u6392\u5e8f\u51fd\u6570\n\treturn a.h>b.h;\n}\nbool cmp2(const point &a,const point &b){//\u96ea\u5806\u7684\u6392\u5e8f\u51fd\u6570\n\treturn a.h>b.h;\n}\nint fa[100005];\nint find(int x){\n\tif(fa[x]==x){\n\t\treturn x;\n\t}\n\treturn fa[x]=find(fa[x]);\n}\nvoid unionn(int x,int y){\n\tint fx=find(x);\n\tint fy=find(y);\n\tif(fx==fy){\n\t\treturn;\n\t}\n\tfa[fx]=fy;//\u8ba4fy\u4e3a\u6839\u8282\u70b9\n\tnum[fy]+=num[fx];//\u628afx\u7684\u8282\u70b9\u6570\u91cf\u7d2f\u8ba1\u8fdb\u6839\u8282\u70b9fy\u91cc\u9762\n\tMAX=max(MAX,num[fy]);//\u7edf\u8ba1\u8282\u70b9\u6570\u91cf\u6700\u5927\u503c\n\treturn;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&b);\n\tfor(int i=1;i<=n;i++){\n\t\tfa[i]=i;//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n\t\tp[i].id=i;\n\t\tscanf(\"%d\",&p[i].h);\n\t}\n\tfor(int i=1;i<=b;i++){\n\t\tq[i].id=i;\n\t\tscanf(\"%d%d\",&q[i].h,&q[i].w);\n\t}\n\tsort(p+2,p+n,cmp1);//\u6309\u7167\u9ad8\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u8fd9\u91cc\u6ce8\u610f\uff0c\u9996\u5c3e\u96ea\u5806\u4e0d\u9700\u8981\u6392\u5e8f\uff01\n\tsort(q+1,q+1+b,cmp2);\n\tint j=2;//\u76ee\u524d\u9774\u5b50\u80fd\u8d70\u8fc7\u53bb\u7684\u96ea\u5806\u7f16\u53f7\uff08\u6392\u5e8f\u4e4b\u540e\u7684\u7f16\u53f7\uff01\uff09\n\tfor(int i=1;i<=b;i++){//\u679a\u4e3e\u9774\u5b50\n\t\twhile(q[i].h<p[j].h){//\u5224\u65ad\u8fd9\u53cc\u9774\u5b50\u662f\u4e0d\u662f\u4e0d\u80fd\u8d70\u8fc7\u76ee\u524d\u7684\u96ea\u5806\n\t\t\tvis[p[j].id]=true;//\u6253\u4e0a\u6807\u8bb0\uff0c\u8868\u793a\u8fd9\u4e2a\u96ea\u5806\u8fc7\u4e0d\u53bb\u4e86\n\t\t\tnum[p[j].id]=1;//\u628a\u5927\u5c0f\u521d\u59cb\u4e3a1\uff08\u4ed6\u81ea\u5df1\u7b97\u4e00\u4e2a\u8282\u70b9\uff09\n\t\t\tif(vis[p[j].id-1]){//\u5224\u65ad\u76ee\u524d\u7684\u96ea\u5806\u5de6\u8fb91\u4e2a\u96ea\u5806\u662f\u4e0d\u662f\u4e5f\u88ab\u6807\u8bb0\n\t\t\t\tunionn(p[j].id-1,p[j].id);//\u5408\u5e76\u76ee\u524d\u7684\u96ea\u5806\u548c\u5de6\u8fb9\u7684\u96ea\u5806\n\t\t\t}\n\t\t\tif(vis[p[j].id+1]){//\u5224\u65ad\u76ee\u524d\u7684\u96ea\u5806\u53f3\u8fb91\u4e2a\u96ea\u5806\u662f\u4e0d\u662f\u4e5f\u88ab\u6807\u8bb0\n\t\t\t\tunionn(p[j].id+1,p[j].id);//\u5408\u5e76\u76ee\u524d\u7684\u96ea\u5806\u548c\u53f3\u8fb9\u7684\u96ea\u5806\n\t\t\t}\n\t\t\tj++;//\u76ee\u524d\u96ea\u5806\u9774\u5b50\u8d70\u4e0d\u8fc7\u53bb\u4e86\uff0c\u679a\u4e3e\u4e0b\u4e00\u4e2a\u96ea\u5806\n\t\t\tMAX=max(MAX,1);//\u5982\u679c\u6682\u65f6\u6ca1\u6709\u5408\u5e76\uff0cMAX\u5c31\u662f1\u4e2a\u8282\u70b9\n\t\t}\n\t\tans[q[i].id]=(q[i].w>MAX);//\u5c06MAX\u4e0e\u8de8\u5ea6\u6bd4\u8f83\uff0c\u5982\u679c\u8de8\u5ea6\u6bd4MAX\u5927\uff0c\u5c31\u80fd\u8de8\u8fc7\u53bb\uff0c\u53cd\u4e4b\u5c31\u8de8\u4e0d\u8fc7\u53bb\n\t}\n\tfor(int i=1;i<=b;i++){\n\t\tprintf(\"%d\\n\",ans[i]);\n\t}\t\n\treturn 0;\n}//awa\n```\n",
        "postTime": 1621328578,
        "uid": 264490,
        "name": "hmya",
        "ccfLevel": 7,
        "title": "p4269"
    },
    {
        "content": "~~\u770b\u5230\u672c\u9898\u7684\u6574\u4f53\u5206\u6cbb\u9898\u89e3\u597d\u5c11\u554a\uff01\u6211\u556a\u7684\u4e00\u4e0b\uff0c\u5c31\u7ad9\u4e86\u8d77\u6765\uff0c\u5f88\u5feb\u554a\uff01~~\n\n\u57fa\u4e8e\u503c\u57df\u7684\u6574\u4f53\u5206\u6cbb/\u4e8c\u5206\uff08\u4f60\u8c37\u662f\u4e8c\u5206\uff09\u7b97\u6cd5\u3002\n\n\u8981\u662f\u60f3\u505a\u8fd9\u9898\uff0c\u8bf7\u5148\u9605\u8bfb[\u672c\u6587](https://www.cnblogs.com/Sakits/p/7990875.html)\u3002~~\u8bdd\u8bf4\u6765\u505a\u8fd9\u9898\uff0c\u5e94\u8be5\u90fd\u4f1a\u4e86\u5427\u3002~~\n\n\u9996\u5148\u77e5\u9053\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $s[i]$\uff0c\u5373\u80fd\u8d70\u8fc7\u7684\u79ef\u96ea\u6df1\u5ea6\uff0c\u6211\u4eec\u8981\u5224\u65ad\u51fa\u6709\u6ca1\u6709 $d[i]$ \u4f7f\u5b83\u53ef\u4ee5\u8d70\u5230\u7ec8\u70b9\u3002\n\n\u76f4\u63a5\u4e8c\u5206\u4f1a\u8d85\u65f6\u3002\n\n\u67d0\u7bc7\u9898\u89e3\u4e2d\u63d0\u5230\uff1a\u53d1\u73b0**\u5f53 $s[i]$ \u8d8a\u5927\uff0c\u6700\u5c0f\u7684 $d[i]$ \u5c31\u8d8a\u5c0f\u3002** \n\n\u6240\u4ee5\u5f53 $s[i]$ \u4ece\u5927\u5230\u5c0f\uff0c$d[i]$ \u5c31\u4ece\u5c0f\u5230\u5927\u3002\n\n\u5728\u6b64\u611f\u8c22xsap\u63d0\u4f9b\u7684\u601d\u8def\u3002\n\n\n\u53ef\u4ee5\u6574\u4f53\u5206\u6cbb\u4e86\u3002\n\n\u7528\u7ed3\u6784\u4f53\u50a8\u5b58\uff0c\u5c06 $s[i]$ \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u63a5\u4e0b\u6765\u5206\u6cbb\u3002\n\n\u7ec6\u8282\u548c\u6ce8\u91ca\u89c1\u4ee3\u7801\u3002\n\n\u4ee3\u7801\u52a0\u4e86\u9632\u6284\u88ad\u3002\n\n```cpp\n#include<bits/sdc++.h>\nusing namesapce std;\n#defien maxn 100010\nint n,b,f[maxn],s[maxn],d[maxn],answer[maxn],q[maxn],ql,qr,dp[maxn];\nstruct node {\n\tint s,id;\n} g[maxn];//id\u4e3a\u7f16\u53f7\uff0cs\u4e3a\u6df1\u5ea6 \nbool cmp(const node &a,const node &b) {\n\treturn a.s>b.s;\n}//\u6392\u5e8f\u51fd\u6570 \n//-------------------------------------------\nint check(int a,int b,int ms) {\n\tdp[1]=ql=qr=0;\n\tq[0]=1;\n\tfor(register int i=2; i<=n; i++) {\n\t\twhile(ql<=qr&&i-q[ql]>ms)ql++;\n\t\tdp[i]=max(dp[q[ql]],f[i]);\n\t\twhile(ql<=qr&&dp[q[qr]]>=dp[i])qr--;\n\t\tq[++qr]=i;\n\t}//\u4e00\u4e2a\u4f18\u5148\u961f\u5217+dp \n\tint now=dp[n],l=a,r=b;\n\t//\u6c42\u51fa\u5f53\u524d\u9700\u8981\u7684\u6700\u5c0f\u7684\u79ef\u96ea\u6df1\u5ea6 \n\twhile(l<r) {\n\t\tint mid=(l+r+1)>>1;\n\t\tif(g[mid].s>=now)l=mid;\n\t\tesle r=mid-1;\n\t}//\u4e8c\u5206 \n\tif(g[l].s<now)return a-1;\n\tretrun l;\n}\n//-------------------------------------------------\nvodi work(int a,int b,int l,int r) {\n\tif(a>b)return;//\u6574\u4f53\u5206\u6cbb\u7684\u8fb9\u754c \n\tif(l==r) {\n\t\tfor(register int i=a; i<=b; i++)answer[g[i].id]=l;\n\t\treturn;\n\t}//\u5230\u8fbe\uff0c\u8bb0\u5f55\u7b54\u6848 \n\tint mid=(l+r)>>1;//\u4e2d\u95f4\u70b9 \n\tint b2=check(a,b,mid);//\u7528check\u5206\u754c \n\twork(a,b2,l,mid);\n\twork(b2+1,b,mid+1,r);\n}\n//-----------------------------------------------------\nint main() {\n\tcin>>n>>b;\n\tfor(register int i=1; i<=n; i++)cin>>f[i];\n\tfor(register int i=1; i<=b; i++) {\n\tcin>>s[i]>>d[i];\n\t\tg[i].s=s[i];\n\t\tg[i].id=i;\n\t}\n\tsort(g+1,g+b+1,cmp);\n\twork(1,b,1,n);\n\tfor(register int i=1; i<=b; i++) {\n\t\tif(answer[i]>d[i])printf(\"0\\n\");\n        //\u6ca1\u6709\u7b49\u4e8e\n\t\telse printf(\"1\\n\");\n\t}\n\treturn 0;\n}\n```\n\n\u5f00O2\u53ef\u4ee5\u4f18\u5316\u4e24\u79d2\uff0c\u4e0d\u5f00\u4e5f\u80fd\u8fc7\u3002\n\n\u8c22\u8c22\u9605\u8bfb\u3002",
        "postTime": 1607949449,
        "uid": 344382,
        "name": "lmrttx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4269 \u3010[USACO18FEB]Snow Boots G\u3011"
    },
    {
        "content": "\u770b\u9898\u76ee\u6211\u4eec\u60f3\u5230\u5355\u8c03\u961f\u5217\u4f18\u5316$dp$\n\n\u4f46\u662f\u8fd9\u662f\u4e00\u4e2a$O(nm)$\u7ea7\u522b\u7684\u4e1c\u897f\u554a...\n\n\u9996\u5148\u8003\u8651\u53ea\u6709\u5355\u6b21\u8be2\u95ee\u600e\u4e48\u529e\u5462\uff1f\u6709\u4e00\u79cd\u53ef\u884c\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u628a\u6240\u6709\u7684$a_i\\leq s_i$\u53d8\u6210$-\\infty$\uff0c\u5176\u4ed6\u7684\u53d8\u6210$1$\uff0c\u7136\u540e\u6211\u4eec\u53ea\u9700\u8981\u8ba9\u8fd9\u4e2a\u4e1c\u897f\u7684**\u6700\u5927\u5b50\u6bb5\u548c**\u6bd4$d_i$\u8981\u5c0f\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8d70\u8fc7\u53bb\uff0c\u5426\u5219\u4e0d\u80fd\n\n\u518d\u770b$m$\u6b21\u8be2\u95ee\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u8003\u8651\u628a$a_i$\u6309\u7167\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e5f\u6309\u7167$s_i$\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u7ef4\u62a4\u4e00\u4e2a\u6307\u9488\u8868\u793a\u73b0\u5728\u6dfb\u52a0\u5230\u54ea\u4e86\uff0c\u6bcf\u6b21\u628a\u7b26\u5408\u6761\u4ef6\u7684\u4f4d\u7f6e\u5728\u7ebf\u6bb5\u6811\u4e0a\u6539\u6210$-\\infty$\u5c31\u53ef\u4ee5\uff08\u4ee3\u7801\u5199\u7684$-n$\uff09\n\n\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u9700\u8981\u628a\u8be2\u95ee\u79bb\u7ebf\u6389\uff08\u987a\u4fbf\u501f\u697c\u95ee\u5728\u7ebf\u600e\u4e48\u505a\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u7684\u74f6\u9888\u5c31\u5728\u4e8e\u5982\u4f55\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u5927\u5b50\u6bb5\u548c\n\n\u5176\u5b9e\u8fd9\u662f\u4e00\u4e2a\u6a21\u677f\u4e86\u5427\uff0cGSS3\u539f\u9898\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ebf\u6bb5\u6811\u533a\u95f4\uff0c\u7ef4\u62a4\u6700\u5927\u524d\u7f00\u548c\uff0c\u6700\u5927\u540e\u7f00\u548c\uff0c\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u533a\u95f4\u548c\u7136\u540e\u5206\u522b\u66f4\u65b0\u5c31\u53ef\u4ee5\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n# define Rep(i,a,b) for(int i=a;i<=b;i++)\n# define _Rep(i,a,b) for(int i=a;i>=b;i--)\n# define RepG(i,u) for(int i=head[u];~i;i=e[i].next)\n\ntypedef long long ll;\n\nconst int N=1e5+5;\n\ntemplate<typename T> void read(T &x){\n   x=0;int f=1;\n   char c=getchar();\n   for(;!isdigit(c);c=getchar())if(c=='-')f=-1;\n   for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+c-'0';\n    x*=f;\n}\n\n# define int long long\n\nint n,m;\nint out[N];\n\nstruct chtholly{\n    int x,y,id;\n    bool operator < (const chtholly &cmp)const{\n        return x<cmp.x;\n    }\n};\n\nchtholly a[N],q[N];\n\nstruct node{\n    int l,r;\n    int lmax,rmax,sum,max;\n}seg[N<<2];\n\n# define lc (u<<1)\n# define rc (u<<1|1)\n\nvoid pushup(int u){\n    seg[u].lmax=max(seg[lc].lmax,seg[lc].sum+seg[rc].lmax);\n    seg[u].rmax=max(seg[rc].rmax,seg[rc].sum+seg[lc].rmax);\n    seg[u].sum=seg[lc].sum+seg[rc].sum;\n    seg[u].max=max(max(seg[lc].max,seg[rc].max),seg[lc].rmax+seg[rc].lmax);\n}\n\nvoid build(int u,int l,int r){\n    seg[u].l=l,seg[u].r=r;\n    if(l==r){\n        seg[u].sum=seg[u].lmax=seg[u].rmax=seg[u].max=1;\n        return;\n    }\n    int mid=l+r>>1;\n    build(lc,l,mid);\n    build(rc,mid+1,r);\n    pushup(u);\n}\n\nvoid update(int u,int x,int k){\n    if(seg[u].l==seg[u].r){\n        seg[u].sum=k;\n        seg[u].max=seg[u].lmax=seg[u].rmax=max(k,0ll);\n        return;\n    }\n    int mid=seg[u].l+seg[u].r>>1;\n    if(x<=mid)update(lc,x,k);\n    else update(rc,x,k);\n    pushup(u);\n}\n\nsigned main()\n{\n    read(n),read(m);\n    Rep(i,1,n)read(a[i].x),a[i].id=i;\n    sort(a+1,a+n+1);\n    Rep(i,1,m)read(q[i].x),read(q[i].y),q[i].id=i;\n    sort(q+1,q+m+1);\n    build(1,1,n);\n    int k=1;\n    Rep(i,1,m){\n        while(k<=n&&a[k].x<=q[i].x)update(1,a[k].id,-n),k++;\n        out[q[i].id]=seg[1].max<q[i].y;\n    }\n    Rep(i,1,m)printf(\"%d\\n\",out[i]);\n    return 0;\n}\n```\n",
        "postTime": 1590047586,
        "uid": 97344,
        "name": "devout",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4269 \u3010[USACO18FEB]Snow Boots G\u3011"
    },
    {
        "content": "\u94fe\u8868\uff0c\u5355\u8c03\u961f\u5217\uff0c\u7ebf\u6bb5\u6811\uff0c\u5e76\u67e5\u96c6\uff0c\u600e\u4e48\u591a\u65b9\u6cd5\uff0c\u6765\u4e00\u4e2amultiset\u89e3\n\n\u53ef\u4ee5\u6ce8\u610f\u5230\u4e00\u4e2a\u4e00\u4e2a\u6027\u8d28\uff1a\u5982\u679c\u4e24\u4e2a\u542b\u6709\u5c0f\u4e8e\u7b49\u4e8e $s_i$ \u7684\u4f4d\u7f6e\u7684\u8ddd\u79bb\u80af\u5b9a\u5c0f\u4e8e\u7b49\u4e8e $d_i$\uff0c\u90a3\u7b2c $i$ \u9774\u5b50\u662f\u53ef\u4ee5\u4f7f\u7528\u7684\u3002\n\n\u6240\u4ee5\uff0c\u53ef\u4ee5\u6309 $s_i$ \u975e\u9012\u589e\u904d\u5386\u8fd9\u4e9b\u9774\u5b50\uff0c\u5e76\u4e14\u4f7f\u7528\u4e00\u4e2aset\u7ef4\u62a4\u54ea\u4e9b\u4f4d\u7f6e\u7684\u96ea\u91cf\u5c0f\u4e8e\u7b49\u4e8e\u4e00\u4e2a\u9012\u51cf\u503c\u3002\u540c\u4e8b\uff0c\u4e5f\u9700\u8981\u7ef4\u62a4\u4e00\u4e2amultiset\uff0c\u4fdd\u5b58\u76f8\u90bb\u6ca1\u6709\u4eceset\u91cc\u5220\u9664\u7684\u4f4d\u7f6e\u7684\u4e24\u4e24\u8ddd\u79bb\u3002\u5982\u679c\u628a\u4f4d\u7f6e\u6309\u975e\u9012\u589e\u96ea\u91cf\u6392\u5e8f\uff0c\u7740\u5c31\u7b49\u4ef7\u4e8e\u6bcf\u4e00\u6b21\u904d\u5386\u4e00\u4e2a\u4f4d\u7f6e\u5427\u8fd9\u4e2a\u4f4d\u7f6e\u5728set\u91cc\u5220\u9664\u3002\u5e94\u4e3aset\u662f\u81ea\u52a8\u6392\u5e8f\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u540c\u4e8b\u66f4\u65b0multiset\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n// writer: w33z8kqrqk8zzzx33\n#include <bits/stdc++.h>\nusing namespace std;\n \n#define iter(i, a, b) for(int i=(a); i<(b); i++)\n#define rep(i, a) iter(i, 0, a)\n#define rep1(i, a) iter(i, 1, (a)+1)\n#define log(a) cerr<<\"\\033[32m[DEBUG] \"<<#a<<'='<<(a)<<\" @ line \"<<__LINE__<<\"\\033[0m\"<<endl\n#define all(a) a.begin(), a.end()\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n \nusing ll=long long;\nusing pii=pair<int, int>;\n//#define int ll\nconst int MOD = 1000000007;\n\nmultiset<int> distances;\nset<int> curreach;\n\nvector<pii> location;\nvector<pair<pii, int>> boot;\nint answer[100005];\n\nsigned main() {\n    ios_base::sync_with_stdio(false); cin.tie(0);\n    int N, bc; cin >> N >> bc;\n    rep1(i, N) {\n        int v; cin >> v;\n        if(i != 1 && i != N) location.pb({v, i});\n    }\n    rep(i, bc) {\n        int st, di; cin >> st >> di;\n        boot.pb({{st, di}, i});\n    }\n    sort(all(location));\n    sort(all(boot));\n    int cbp = bc-1;\n    rep1(i, N) curreach.insert(i); \n    rep(i, N-1) distances.insert(1);\n    while(cbp >= 0 && boot[cbp].fi.fi >= location.back().first) {\n        answer[boot[cbp].se] = *(--distances.end()) <= boot[cbp].fi.se;\n        cbp--;\n    }\n    for(int i=location.size()-1; i>=0; i--) {\n        int loc = location[i].se;\n        curreach.erase(loc);\n        auto pt = curreach.lower_bound(loc);\n        int rig = *pt; int lef = *(--pt);\n        distances.insert(rig-lef);\n        distances.erase(distances.find(rig-loc)); distances.erase(distances.find(loc-lef));\n        if(!i) break;\n        while(cbp >= 0 && boot[cbp].fi.fi >= location[i-1].fi) {\n            answer[boot[cbp].se] = *(--distances.end()) <= boot[cbp].fi.se;\n            cbp--;\n        }\n    }\n    while(cbp >= 0 && boot[cbp].fi.fi >= 0) {\n        answer[boot[cbp].se] = *(--distances.end()) <= boot[cbp].fi.se;\n        cbp--;\n    }\n    rep(i, bc) cout << answer[i] << endl;\n}\n\n```",
        "postTime": 1582366419,
        "uid": 220037,
        "name": "w33z8kqrqk8zzzx33",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4269"
    },
    {
        "content": "~~\u524d\u8a00\uff1a\u6700\u8fd1\u4e00\u76f4\u5728\u5237\u7ebf\u6bb5\u6811\u7684\u9898\uff0c\u53d1\u73b0\u6b64\u9898\u8f83\u4e8e\u5176\u4ed6\u9898\u601d\u8def\u66f4\u52a0\u7cbe\u5999\uff0c\u9042\u5199\u7bc7\u9898\u89e3\u603b\u7ed3\u4e00\u4e0b\uff08\u8fd8\u662f\u592a\u84bb\u4e86\uff09\u3002~~\n\n\u601d\u8def\uff1a\u7ebf\u6bb5\u6811\u3002\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u957f\u7684\u8fde\u7eed\u7684 $1$ \u7684\u957f\u5ea6\uff08\u6700\u957f\u8fde\u7eed\u4e0d\u80fd\u8d70\u7684\u5730\u7816\u6570\u91cf\uff09\uff0c\u82e5\u6b64\u957f\u5ea6\u5c0f\u4e8e\u9774\u5b50 $i$\uff0c\u7b54\u6848\u4e3a $1$\uff1b\u53cd\u4e4b\uff0c\u7b54\u6848\u4e3a $0$\u3002\u5bf9\u4e8e\u9774\u5b50 $i$\uff0c\u82e5\u53ef\u4ee5\u8d70\u7b2c $j$ \u5757\u5730\u7816\uff0c\u5219\u8d4b\u503c\u4e3a $0$\uff0c\u4e0d\u80fd\u8d70\u5219\u8d4b\u503c\u4e3a $1$\u3002\u4f46\u6b64\u65b9\u6cd5\u65f6\u590d\u4e3a $\\Theta(n\\log n)$\uff0c\u663e\u7136\u8d85\u65f6\u3002\u8be5\u5982\u4f55\u4f18\u5316\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u5c06\u7ebf\u6bb5\u6811\u5168\u8d4b\u503c\u4e3a $1$\uff0c\u5373\u5047\u8bbe\u90fd\u4e0d\u80fd\u8d70\uff0c\u518d\u5c06\u9774\u5b50\u4e0e\u5730\u7816\u6309\u96ea\u7531\u6d45\u5230\u6df1\u7684\u5347\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u5f00\u59cb\u4ece\u5934\u626b\u4e00\u904d\u3002\u82e5\u626b\u5230\u5730\u7816\uff0c\u5219\u8d4b\u503c\u4e3a $0$\uff1b\u82e5\u626b\u5230\u9774\u5b50\uff0c\u5219\u7edf\u8ba1\u533a\u95f4\u6700\u957f\u7684\u8fde\u7eed $1$ \u7684\u957f\u5ea6\u3002\u6b64\u65b9\u6848\u65f6\u590d\u4e3a $\\Theta(n\\log n+B)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1e5+10;\nstruct Segment_Tree{//\u7528\u6765\u7edf\u8ba1\u533a\u95f4\u6700\u957f\u8fde\u7eed 1 \u7684\u957f\u5ea6 \n\t#define ls(x) (x<<1)\n\t#define rs(x) (x<<1|1)\n\tstruct SGT{int len,maxv,maxl,maxr,val;}tree[N<<2];\n\tvoid pushup(int now){\n\t\ttree[now].len=tree[ls(now)].len+tree[rs(now)].len;\n\t\ttree[now].maxv=tree[now].maxl=tree[now].maxr=tree[now].val;\n\t\ttree[now].maxl=max(tree[now].maxl,tree[ls(now)].maxl);\n\t\ttree[now].maxr=max(tree[now].maxr,tree[rs(now)].maxr);\n\t\tif (tree[ls(now)].maxv==tree[ls(now)].len)\n\t\t\ttree[now].maxl=max(tree[now].maxl,tree[ls(now)].len+tree[rs(now)].maxl);\n\t\tif (tree[rs(now)].maxv==tree[rs(now)].len)\n\t\t\ttree[now].maxr=max(tree[now].maxr,tree[rs(now)].len+tree[ls(now)].maxr);\n\t\ttree[now].maxv=max(tree[now].maxv,tree[ls(now)].maxv);\n\t\ttree[now].maxv=max(tree[now].maxv,tree[rs(now)].maxv);\n\t\ttree[now].maxv=max(tree[now].maxv,tree[ls(now)].maxr+tree[rs(now)].maxl); \n\t}\n\tvoid build(int now,int l,int r){\n\t\ttree[now].val=0;\n\t\tif (l==r)return tree[now]={1,1,1,1,1},void();\n\t\tint mid=(l+r)>>1;\n\t\tbuild(ls(now),l,mid);\n\t\tbuild(rs(now),mid+1,r);\n\t\tpushup(now);\n\t}\n\tvoid update(int now,int l,int r,int x){\n\t\tif (l==r)return tree[now]={tree[now].len,0,0,0,0},void();\n\t\tint mid=(l+r)>>1;\n\t\tif (x<=mid)update(ls(now),l,mid,x);\n\t\telse update(rs(now),mid+1,r,x);\n\t\tpushup(now);\n\t}\n}T;int n,m,ans[N];\nstruct Node{int num,stp,val;}a[N<<1];\nbool cmp(Node x,Node y){return x.val==y.val?x.stp<y.stp:x.val<y.val;}\nint main(){\n\tcin>>n>>m;\n\tfor (int i=1,x;i<=n;i++)cin>>x,a[i]={i,0,x};\n\tfor (int i=1,x,y;i<=m;i++)cin>>x>>y,a[i+n]={i,y,x};\n\tsort(a+1,a+n+m+1,cmp);T.build(1,1,n);\n\tfor (int i=1;i<=n+m;i++)\n\t\tif (a[i].stp!=0)ans[a[i].num]=T.tree[1].maxv<a[i].stp;\n\t\telse T.update(1,1,n,a[i].num);\n\tfor (int i=1;i<=m;i++)cout<<ans[i]<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1669211534,
        "uid": 518232,
        "name": "dage666",
        "ccfLevel": 0,
        "title": "P4269 \u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "[[USACO18FEB]Snow Boots G](https://www.luogu.com.cn/problem/P4269)\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c\u3002\n\n\u89c2\u5bdf\u5230 $s_i$ \u589e\u5927\u7684\u65f6\u5019\u80fd\u5728\u96ea\u5730\u4e0a\u8d70\u7684\u8303\u56f4\u4e5f\u662f\u5728\u589e\u5927\u7684\uff0c\u800c\u5f53\u96ea\u5730\u4e0a\u6700\u957f\u7684\u4e0d\u80fd\u8d70\u7684\u8303\u56f4\u8d85\u8fc7\u4e86 $d_i$ \u65f6 FJ \u662f\u8d70\u4e0d\u5230\u53e6\u4e00\u7aef\u7684\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u8981\u5b58\u5728\u4e00\u4e2a\u8fde\u7eed\u6bb5 $l \\sim r$ \u6ee1\u8db3 $s_i < f_{l \\sim r}$ \u4e14 $d_i \\leq r-l+1$ \u65f6 FJ \u5c31\u65e0\u6cd5\u5230\u8fbe\u7b2c $N$ \u5757\u7816\u3002\n\n\u8f6c\u6362\u4e00\u4e0b\u95ee\u9898\uff0c\u5bf9\u4e8e $i=1 \\sim n$ \u548c\u4e00\u4e2a\u5e8f\u5217 $a$ \uff0c\u82e5 $s_i \\geq f_i$ \u4ee4 $a_i = -\\inf$ \uff0c\u82e5$s_i < f_i$ \u4ee4 $a_i =1$ \uff0c\u5219\u5f53\u5e8f\u5217 $a$ \u7684\u6700\u5927\u5b50\u6bb5\u548c\u5c0f\u4e8e $d_i$ \u65f6\uff0c\u7b54\u6848\u5c31\u4e3a $1$ \u3002\n\n\u663e\u7136\u4e0d\u80fd\u5bf9\u6bcf\u4e00\u4e2a\u8be2\u95ee\u90fd\u6309\u7167\u5982\u4e0a\u65b9\u5f0f\u53bb\u7ef4\u62a4\u5e8f\u5217 $a$ \uff0c\u90a3\u6709\u4ec0\u4e48\u529e\u6cd5\u80fd\u591f\u590d\u7528\u72b6\u6001\u6216\u8005\u662f\u907f\u514d\u5197\u4f59\u8fd0\u7b97\u5462\uff1f\n\n\u6839\u636e\u672c\u7247\u9898\u89e3\u5f00\u5934\u63d0\u5230\u7684\u5355\u8c03\u6027\uff0c\u4e5f\u5c31\u662f\u8bf4 $s_i$ \u589e\u5927\u7684\u65f6\u5019 $a$ \u4e2d $1$ \u7684\u6570\u91cf\u662f\u51cf\u5c11\u7684\uff0c\u6574\u4e2a\u8fc7\u7a0b\u5c31\u50cf\u662f $1$ \u5728\u4e0d\u65ad\u5730\u88ab\u5220\u9664\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u505a\u6cd5\uff0c\u5c06\u539f\u5e8f\u5217\u548c\u8be2\u95ee\u4e2d\u7684 $s_i$ \u79bb\u6563\u5316\uff0c\u5c06 $s_i$ \u5728\u539f\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u5b58\u5728 ```std::vector``` \u4e2d\u3002\n\n\u4ee4 $a$ \u5168\u4e3a $1$ \uff0c\u7136\u540e\u628a\u6240\u6709\u8be2\u95ee\u6309\u7167 $s_i$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6b64\u65f6\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a $s_i$ \uff0c\u5c06\u539f\u5e8f\u5217\u4e2d\u5c0f\u4e8e\u7b49\u4e8e $s_i$ \u7684\u6570\u6240\u5bf9\u5e94\u7684 $a_i$ \u90fd\u8bbe\u4e3a $-\\inf$ \uff0c\u53ef\u4ee5\u7528\u4e4b\u524d\u7684 ```std::vector``` \u5f88\u65b9\u4fbf\u5730\u5b9e\u73b0\uff0c\u7136\u540e\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5168\u5c40\u6700\u5927\u5b50\u6bb5\u548c\u3002\n\n\u6bcf\u4e00\u6b21\u5728\u7ebf\u6bb5\u6811\u4e0a\u5220\u9664\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal{O(\\log n)}$ \u7684\uff0c\u7531\u4e8e\u6392\u5e8f\u540e\u7684 $s_i$ \u662f\u5355\u8c03\u4e0d\u964d\u7684\uff0c\u6240\u4ee5\u6bcf\u4e2a\u4f4d\u7f6e\u7684 $1$ \u6700\u591a\u4f1a\u88ab\u5220\u4e00\u6b21\uff0c\u6700\u540e\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal{O(n \\log n)}$ \u7684\u3002\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u5927\u5b50\u6bb5\u548c + \u5355\u70b9\u4fee\u6539\u8be6\u60c5\u89c1\uff1a[GSS3 - Can you answer these queries III](https://www.luogu.com.cn/problem/SP1716)\uff0c\u5728\u6b64\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u65e2\u7136\u4f60\u80fd\u627e\u5230\u8fd9\u9898\uff0c\u6211\u76f8\u4fe1\u4f60\u80fd\u77ac\u95f4\u505a\u51fa\u6765\u7684\u3002\n\n$Code:$\n\n```cpp\n#include<bits/stdc++.h>\ntypedef long long LL;\ntypedef long double LD;\nusing namespace std;\nconst LL N=100010,M=1000010,INF=0x3f3f3f3f;\ninline LL Max(LL x,LL y){return x>y?x:y;}\ninline LL Min(LL x,LL y){return x<y?x:y;}\ninline void Swap(LL &x,LL &y){x^=y^=x^=y;}\nLL n,m,num,a[N],b[M];\nvector<LL> v[M];\nstruct query{LL s,d,id,ans;}q[N];\nbool cmp1(query a,query b){return a.s<b.s;}\nbool cmp2(query a,query b){return a.id<b.id;}\nstruct SegmentTree{\n\tLL l,r;\n\tLL lmax,rmax,max,sum;\n\t#define l(x) tree[x].l\n\t#define r(x) tree[x].r\n\t#define sum(x) tree[x].sum\n\t#define max(x) tree[x].max\n\t#define lmax(x) tree[x].lmax\n\t#define rmax(x) tree[x].rmax\n}tree[N<<2];\nvoid Pushup(LL x){\n\tsum(x)=sum(x<<1)+sum(x<<1|1);\n\tlmax(x)=Max(lmax(x<<1),sum(x<<1)+lmax(x<<1|1));\n\trmax(x)=Max(rmax(x<<1|1),sum(x<<1|1)+rmax(x<<1));\n\tmax(x)=Max(Max(max(x<<1),max(x<<1|1)),rmax(x<<1)+lmax(x<<1|1));\n}\nvoid Build(LL x,LL l,LL r){\n\tl(x)=l,r(x)=r;\n\tif(l==r){\n\t\tsum(x)=max(x)=1;\n\t\tlmax(x)=rmax(x)=1;\n\t\treturn;\n\t}\n\tLL mid=(l+r)>>1;\n\tBuild(x<<1,l,mid);\n\tBuild(x<<1|1,mid+1,r);\n\tPushup(x);\n}\nvoid Change(LL x,LL pos,LL d){\n\tLL l=l(x),r=r(x);\n\tif(l==r){\n\t\tsum(x)=max(x)=d;\n\t\tlmax(x)=rmax(x)=d;\n\t\treturn;\n\t}\n\tLL mid=(l+r)>>1;\n\tif(pos<=mid)Change(x<<1,pos,d);\n\telse Change(x<<1|1,pos,d);\n\tPushup(x);\n}\nint main(){\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(LL i=1;i<=n;i++)\n\t\tscanf(\"%lld\",&a[i]),b[++num]=a[i];\n\tfor(LL i=1;i<=m;i++){\n\t\tscanf(\"%lld%lld\",&q[i].s,&q[i].d);\n\t\tb[++num]=q[i].s;q[i].id=i;\n\t}\n\tsort(b+1,b+num+1);\n\tsort(q+1,q+m+1,cmp1);\n\tLL cnt=unique(b+1,b+num+1)-b-1;\n\tfor(LL i=1;i<=n;i++){\n\t\tLL p=lower_bound(b+1,b+cnt+1,a[i])-b;\n\t\tv[p].push_back(i);\n\t}\n\tLL now=0;\n\tBuild(1,1,n);\n\tfor(LL i=1;i<=m;i++){\n\t\tLL p=lower_bound(b+1,b+cnt+1,q[i].s)-b;\n\t\twhile(now<p){\n\t\t\t++now;\n\t\t\tfor(LL it:v[now])Change(1,it,-INF);\n\t\t}\n\t\tq[i].ans|=(tree[1].max<q[i].d);\n\t}\n\tsort(q+1,q+m+1,cmp2);\n\tfor(LL i=1;i<=m;i++)\n\t\tprintf(\"%lld\\n\",q[i].ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1614858830,
        "uid": 137242,
        "name": "Dia\u043esi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4269 \u3010[USACO18FEB]Snow Boots G\u3011"
    }
]