[
    {
        "content": "# P4182 \u9898\u89e3\n## \u9898\u610f\n\u63d0\u4f9b $n$ \u4e2a\u533a\u95f4\uff0c\u8981\u6c42\u5220\u53bb $k$ \u4e2a\u533a\u95f4\u540e\u5269\u4e0b\u7684\u533a\u95f4\u8986\u76d6\u957f\u5ea6\u6700\u5927\u3002\n\n\uff08\u5410\u69fd\u672c\u9898\u7ffb\u8bd1\uff0c\u770b\u82f1\u6587\u624d\u770b\u61c2\u7684\uff09\n\n## \u5efa\u6a21\n\u6211\u4eec\u5148\u4ece\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\u8003\u8651\u3002\u5982\u679c\u533a\u95f4 $A$ \u5b8c\u5168\u8986\u76d6\u533a\u95f4 $B$ \uff0c\u90a3\u4e48\u5220\u53bb\u8fd9\u6837\u7684 $B$ \u533a\u95f4\u5b8c\u5168\u6ca1\u6709\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u5148\u5220\u9664\u8fd9\u79cd\u60c5\u51b5\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u4e0d\u96be\u770b\u51fa\u6211\u4eec\u53ef\u4ee5\u5148\u5bf9\u6240\u6709\u7684\u533a\u95f4\u8fdb\u884c\u4e00\u6b21\u6392\u5e8f\uff0c\u5e76\u4e14\u53ef\u4ee5\u8bc1\u660e**\u6309\u7167\u5de6\u7aef\u70b9\u6392\u5e8f\u6216\u8005\u53f3\u7aef\u70b9\u6392\u5e8f\u540e\uff0c\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u90fd\u4fdd\u6301\u5347\u5e8f**\u3002\n\n\u8bc1\u660e\u5982\u4e0b\uff1a  \n\u5982\u679c\u5b58\u5728\u5de6\u7aef\u70b9 $l_i \\leq l_{i+1}$ \u4e14 $r_i \\geq r_{i+1}$ \uff0c\u90a3\u4e48\u533a\u95f4 $i$ **\u5b8c\u5168\u8986\u76d6**\u533a\u95f4 $i+1$ \uff0c\u8fd9\u79cd\u60c5\u51b5\u5728\u4e00\u5f00\u59cb\u7684**\u7279\u6b8a\u60c5\u51b5\u8003\u8651**\u4e2d\u5c31\u5df2\u7ecf\u88ab\u5220\u9664\u3002  \n$\u2234$ \u4e0d\u5b58\u5728 $l_i \\leq l_{i+1}$ \u4e14 $r_i \\geq r_i+1$ \uff0c\u56e0\u6b64\u4e00\u5b9a\u5de6\u53f3\u7aef\u70b9\u90fd\u4fdd\u6301\u5347\u5e8f\uff0c\u8bc1\u6bd5\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c**\u533a\u95f4** $dp$ \u4e86\u3002\n\n\u6839\u636e\u9898\u76ee\uff0c\u6211\u4eec\u8bbe $f[i][j]$ \u8868\u793a**\u524d $i$ \u4e2a\u533a\u95f4\uff0c\u5220\u9664 $j$ \u4e2a\u7684\u6700\u5927\u8986\u76d6\u957f\u5ea6**\u3002\u4f46\u662f\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u5b58\u5728\u7684\u95ee\u9898\u662f**\u5e76\u4e0d\u786e\u5b9a\u8986\u76d6\u7684\u72b6\u6001**\uff0c\u4e0d\u65b9\u4fbf\u8f6c\u79fb\u3002\n\n\u5177\u4f53\u5316 $f[i][j][S]$ \u8868\u793a**\u524d $i$ \u4e2a\u533a\u95f4\uff0c\u5220\u9664 $j$ \u4e2a\uff0c\u72b6\u6001\u4e3a $S$ \u7684\u6700\u5927\u8986\u76d6\u957f\u5ea6**\uff1f\u7206\u7a7a\u95f4\u3002\n\n\u56e0\u6b64\u6211\u4eec\u6700\u597d\u628a\u72b6\u6001\u63a7\u5236\u5728 $2$ \u7ef4\uff0c\u4e14\u8981\u5177\u4f53\u5316\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\uff1a $f[i][j]$ \u8868\u793a**\u524d $i$ \u4e2a\u533a\u95f4\uff0c\u5220\u9664 $j$ \u4e2a\u7684\u6700\u5927\u8986\u76d6\u957f\u5ea6\uff0c**$\\color{red}{\\normalsize{\\mathbf{\u5e76\u4e14\u9650\u5236\u9009\u7b2c}}}$ $\\color{red}{i}$ $\\color{red}{\\normalsize{\\mathbf{\u4e2a}}}$\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$f[i][j]=\\max\\{f[k][j-\\text{len}(k,i)],R[i]-\\max(L[i],R[k])\\}\\ |\\ k<i$$\n\n\u5176\u4e2d $\\text{len}(l,r)=r-l-1$\n\n\u590d\u6742\u5ea6 $\\Theta(n \\times k^2)$ \uff0c\u660e\u663e $\\colorbox{#052242}{\\text{\\color{white}TLE}}$ \u3002\n\n## \u4f18\u5316\n\u6211\u4eec\u7ee7\u7eed\u628a\u8f6c\u79fb\u65b9\u7a0b\u8d34\u4e00\u904d\uff1a\n$$f[i][j]=\\max\\{f[k][j-\\text{len}(k,i)],R[i]-\\max(L[i],R[k])\\}\\ |\\ k<i$$\n\u628a\u5b83\u8f6c\u5316\u4e00\u4e0b\uff1a\n$$f[i][j]=\\max\\{f[k][k-\\text{len}(k,i)],R[i]-L[i]\\}\\ |\\ \\text{\\footnotesize{\u5bf9\u4e8e\u6bd4\u8f83\u5c0f\u7684}}\\ k$$\n\n\u5982\u679c\u6211\u4eec\u80fd\u591f\u7528**\u9884\u8ba1\u7b97**\u628a $\\Theta(k)$ \u7684\u8f6c\u79fb\u53d8\u4e3a $\\Theta(1)$ \u7684\uff0c\u90a3\u4e48\u603b\u590d\u6742\u5ea6\u5373\u4e3a $\\Theta(nk)$ \uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\u5c31 $\\colorbox{#52C41A}{\\text{\\color{white}{AC}}}$ \u4e86\u3002\n\n\u8fd9\u662f\u5bf9\u4e8e\u8f83\u5c0f\u7684 $k$ \u7684\u60c5\u51b5\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u8f83\u5927\u7684 $k$ \u7684\u60c5\u51b5\uff1f  \n\u8fd9\u65f6\u7684\u8f6c\u79fb\u65b9\u7a0b\u662f\uff1a\n$$f[i][j]=\\max\\{f[k][k-\\text{len}(k,i)],R[i]-R[k]\\}$$  \n\u8bb0 $que\\_t$ \u8868\u793a\u6240\u6709 $f[k][k+t]-R[k]$ \u7684\u6700\u5927\u503c\uff0c\u5355\u8c03\u961f\u5217\u5373\u53ef\u3002\n\n\u90a3\u5982\u679c $k$ \u6709\u9650\u5236\uff0c\u4e0d\u80fd\u592a\u5c0f\uff1f\u8fd8\u662f**\u5355\u8c03\u961f\u5217**\u3002\n\n\u5f53 $k$ \u6709\u9650\u5236\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u5728\u54ea\u91cc\u6c42\u6700\u5927\u503c\uff1f  \n$f[i][j]=que\\_t[j-i+1]$ \u961f\u5217\u91cc\u7684\u9996\u4f4d $+R[i]$ \uff08\u4e0d\u6ee1\u8db3 $L[i]<R[k]$ \u5c31\u79bb\u961f\uff0c\u987a\u4fbf\u66f4\u65b0 $que\\_t[j-i+1]$ \uff09\u3002  \n\u5e76\u4e14\uff0c\u6211\u4eec\u540c\u65f6\u5c06 $f[i][j]$ \u7528 $que\\_t[j-i+1]$ \u6765\u66f4\u65b0\u4e00\u4e0b\u3002\n\n\u7b97\u5b8c\u4e4b\u540e\uff0c\u66f4\u65b0\u5355\u8c03\u961f\u5217\uff0c\u628a $f[i][j]-R[i]$ \u63d2\u5165\u5230 $que\\_t[j-i]$ \u7684\u5355\u8c03\u961f\u5217\u91cc\uff0c\u5373\u53ef\u3002\n\n\u90a3\u4e48\u6211\u4eec\u7406\u4e00\u4e0b\u601d\u8def\uff1a\n1. \u8ba1\u7b97 $f[i][j]$ \u65f6\uff0c\u628a $que\\_t[i-j-1]$ \u4e2d\u961f\u9996\u8868\u793a\u7684\u533a\u95f4\u4e0d\u4e0e $i$ \u76f8\u4ea4\u7684\u8e22\u51fa\u53bb\u3002\n2. \u5f53\u524d\u961f\u9996\u662f\u6700\u5927\u503c\u3002\n3. \u8ba1\u7b97 $f[i][j]$ \u5e76\u66f4\u65b0 $que\\_t[i-j]$ \u3002\n\n\u590d\u6742\u5ea6 $\\Theta(nk)$ \uff0c\u53ef\u4ee5 $\\colorbox{#52C41A}{\\text{\\color{white}{AC}}}$ \u3002\n\n\u4ee3\u7801\u8fd8\u662f\u653e\u4e00\u4e0b\u5427\uff0c\u7ec6\u8282\u6bd4\u8f83\u591a\uff0c\u6ce8\u610f\u4e0d\u8981\u590d\u5236\u3002\n\n```cpp\n//lifeguards P \u9632Copy\u7248\nfor(ll i=1;i<=n*k;i++){\n\tll u=min(k+1,i);\n\tfor(ll j=0;j<n;j++){\n\t\tll now_pos=i-j-1;\n\t\twhile(!increasing_queue[now_pos].empty()&&sequence[increasing_queue[now_pos].front().node].r<sequence[i].l){\n\t\t\tNode tt_next=increasing_queue[now_pos].front();\n\t\t\trr[now_pos]=max(rr[now_pos],tt_next.val+sequence[tt_next.node].r);\n\t\t\tincreasing_queue[now_pos].pop_front();\n\t\t}\n\t\tf[i][j]=max(f[i][j],rr[now_pos]+sequence[i].r-sequence[i].l);\n\t\tif(!increasing_queue[now_pos].empty())f[i][j]=max(f[i][j],increasing_queue[now_pos].front().val+sequence[i].r);\n\t\tll now_val=f[i][j]-sequence[i].r;\n\t\tnow_pos=i-j;\n\t\twhile((!increasing_queue[now_pos].empty())&&(increasing_queue[now_pos].back().val<now_val))increasing_queue[now_pos].pop_back();\n\t\tincreasing_queue[now_pos].push_back((Node){i,now_val});\n\t}\n}//\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53c2\u8003\u4e86\u5176\u4ed6\u4eba\u7684\u4ee3\u7801\uff08\u6211\u4e0d\u4f1a\u544a\u8bc9\u4f60\u662f\u56e0\u4e3a\u6211\u5199\u7684\u592a\u4e11\u4e86\uff09\nfor(int i=1;i<=n;i++)ans=max(ans,f[i][k]);\n```\n\n\u5b8c\u7ed3\u6492\u82b1~\n\n\u770b\u5728\u6211\u7801\u4e86\u8fd9\u4e48\u591a\u5b57\uff0c\u7ed9\u4e2a\u8d5e\u5427![](https://cdn.jsdelivr.net/gh/xaoxuu/volantis@1.0/img/qq/%E5%8F%AF%E6%80%9C.gif)\u3002",
        "postTime": 1599379949,
        "uid": 291706,
        "name": "GspTools",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4182 \u3010[USACO18JAN]Lifeguards P\u3011"
    },
    {
        "content": "  \u597d\u5427\uff0c\u81ea\u5df1\u8003\u8651\u7684\u65f6\u5019\u6ca1\u60f3\u8fc7\u8981\u5f00\u591a\u4e2a\u5355\u8c03\u961f\u5217\u6765\u4f18\u5316dp\u3002\u3002\u3002\n\n  \u9996\u5148\uff0c\u5982\u679c\u4e00\u4e2a\u533a\u95f4\u88ab\u5176\u4ed6\u533a\u95f4\u5305\u542b\u7684\u8bdd\uff0c\u5f88\u660e\u663e\uff0c\u5b83\u88ab\u5220\u9664\u4e5f\u6ca1\u5f71\u54cd\u3002\u6240\u4ee5\u6211\u4eec\u5148\u6309\u5de6\u8282\u70b9\u6392\u5e8f\uff0c\u53bb\u9664\u90a3\u4e9b\u5305\u542b\u7684\u533a\u95f4\uff0c\u7136\u540e\u5bf9\u63a5\u4e0b\u6765\u6709\u5e8f\u7684\u533a\u95f4\u8fdb\u884cdp\u3002\n\ndp[i][j]\u8868\u793a\u524di\u4e2a\u533a\u95f4\u5220\u6389j\u4e2a\u4e14\u7b2ci\u4e2a\u5fc5\u53d6\u80fd\u8986\u76d6\u7684\u6700\u5927\u9762\u79ef\u3002\n\ndp[i][j]=max(dp[i][j],dp[p][j-(i-p-1)]+calc(p,i))//calc(p,i)\u8868\u793a\u5c06\u7b2ci\u4e2a\u533a\u95f4\u52a0\u5230\u7b2cp\u4e2a\u533a\u95f4\u540e\u65f6\u65b0\u589e\u7684\u8986\u76d6\u9762\u79ef,\u56e0\u4e3ai-p-1\u663e\u7136\u9700\u8981\u5c0f\u4e8e\u7b49\u4e8ek\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n*k*k)\uff0c\u9700\u4f18\u5316\u3002\n\n  \u4e4b\u524d\u7684\u533a\u95f4\u5206\u4e3a\u662f\u5426\u4e0e\u5f53\u524d\u533a\u95f4\u6709\u91cd\u53e0\u90e8\u5206\u8fd9\u6837\u4e24\u79cd\u3002\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u4e4b\u524d\u7684\u4e00\u4e2adp[x][y]\u53ef\u4ee5\u66f4\u65b0dp[i][j]\uff0c\u90a3\u4e48x-y=i-j-1;\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f00k\u4e2a\u5355\u8c03\u961f\u5217\uff0c\u5982\u679c\u961f\u5934\u7684\u5143\u7d20\u5df2\u7ecf\u548c\u5f53\u524d\u7b2ci\u4e2a\u533a\u95f4\u4e0d\u91cd\u53e0\uff0c\u5c31\u66f4\u65b0\u4e0d\u91cd\u53e0\u7684\u7b54\u6848\uff0c\u5e76\u5f39\u51fa\u961f\u5934\u3002\n\n\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u7528\u961f\u5934\u53ca\u6709\u91cd\u53e0\u90e8\u5206\u7684\u533a\u95f4\u6765\u66f4\u65b0\u7b54\u6848\u3002\n\n   \u5c06dp[i][j]-a[i].r\uff08\u4e3a\u4ec0\u4e48\u662f\u8fd9\u4e2a\u503c\uff09\u653e\u5165\u7b2ci-j\u4e2a\u5355\u8c03\u961f\u5217\uff0c\u8fdb\u884c\u66f4\u65b0\u3002\n\n   \u5177\u4f53\u7684\u7a0b\u5e8f\u4e2d\u5199\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cstdlib>\n#include<queue>\n#define maxn 100009\nusing namespace std;\nint n,k,p[maxn],dp[maxn][109];\nstruct ding{\n  int l,r;\n}a[maxn],b[maxn];\nstruct ding2{\n  int node,val;\n};\ndeque<ding2>q[maxn];\nbool cmp(ding t1,ding t2)\n{return t1.l==t2.l?t1.r>t2.r:t1.l<t2.l;}\nint main()\n{\n  freopen(\"std.in\",\"r\",stdin);\n  freopen(\"std.out\",\"w\",stdout);\n  scanf(\"%d%d\",&n,&k);\n  b[0]=(ding){0,0};\n  for (int i=1;i<=n;i++) scanf(\"%d%d\",&a[i].l,&a[i].r);\n  if (k>=n) \n  {\n      printf(\"0\\n\");\n      return 0;\n  }\n  sort(a+1,a+1+n,cmp);\n  int maxx=-1,cnt=0;\n  for (int i=1;i<=n;i++)\n  {\n      if (a[i].r>maxx) b[++cnt]=a[i];\n//\u53bb\u6389\u88ab\u5305\u542b\u533a\u95f4\n      else k--;\n      maxx=max(maxx,a[i].r);\n  }\n  if (k<0) k=0; n=cnt;\n  for (int i=1;i<=n;i++)\n  {\n    for (int j=0;j<min(k+1,i);j++)\n    {\n      int now=i-j-1;\n      while ((!q[now].empty())&&(b[q[now].front().node].r<b[i].l))\n//\u5982\u679c\u5f53\u524d\u961f\u5934\u7684\u533a\u95f4\u548c\u7b2ci\u4e2a\u533a\u95f4\u4e0d\u91cd\u53e0\u90a3\u5c31\u5f39\u51fa\n      {\n          ding2 to=q[now].front();\n          p[now]=max(p[now],to.val+b[to.node].r);\n//\u56e0\u4e3a\u5982\u679c\u6709\u91cd\u53e0\uff0c\u90a3\u4e48dp[i][j]=dp[x][y]+a[i].r-a[x].r\uff0c\u6240\u4ee5\u653e\u5165\u961f\u5217\u7684\u5143\u7d20\u4e3adp[x][y]-a[x].r,\u6211\u4eec\u7528\u5b83\u6765\u66f4\u65b0\u4e0d\u91cd\u53e0\u7684\u7b54\u6848\n          q[now].pop_front();\n      }\n      dp[i][j]=max(dp[i][j],p[now]+b[i].r-b[i].l);\n//\u4e0d\u91cd\u53e0\u533a\u95f4\u66f4\u65b0\n      if (!q[now].empty())\n      dp[i][j]=max(dp[i][j],q[now].front().val+b[i].r);\n//\u91cd\u53e0\u7684\u533a\u95f4\u66f4\u65b0\n      int nowv=dp[i][j]-b[i].r;\n      now=i-j;\n      while ((!q[now].empty())&&(q[now].back().val<nowv))\n      q[now].pop_back();\n      q[now].push_back((ding2){i,nowv});\n//\u653e\u5165\u961f\u5217\n    }\n  }\n  int ans=0;\n  for (int i=1;i<=n;i++)\n  for (int j=0;j<min(i,k+1);j++)\n  if (j+n-i==k) ans=max(ans,dp[i][j]);\n//\u679a\u4e3e\u54ea\u4e2a\u533a\u95f4\u662f\u6700\u540e\u4e00\u4e2a\u88ab\u53d6\u7684\n  printf(\"%d\\n\",ans);\n  return 0;\n}\n```",
        "postTime": 1520498916,
        "uid": 21621,
        "name": "nihanchu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4182 \u3010[USACO18JAN]Lifeguards P\u3011"
    },
    {
        "content": "# UPD:\n\n\u4fee\u590d\u4e86\u4ee3\u7801\u4e2d\u4e00\u4e2a\u6570\u7ec4\u8d8a\u754c\u7684\u95ee\u9898\uff0c\u5e76\u8fdb\u884c\u5361\u5e38\uff0c\u4f7f\u5f97\u4e0d\u5f00O2\u4e5f\u80fd\u8f7b\u677e\u8fc7\u9898\n\n\u8fd9\u9898\u5728\u5b66\u6821\u542c\u4e86\u8001\u677f\u8bb2\uff0c\u7136\u800c\u5e76\u6ca1\u6709\u542c\u61c2\u4e2a\u5565\uff08\n\n\u7136\u540e\u81ea\u5df1\u91cd\u65b0\u5b9a\u72b6\u6001\uff0c\u63a8\u5f0f\u5b50\uff0c\u4f18\u5316\uff08\n\n~~IEE~~\n\n\u5410\u69fd\u7ffb\u8bd1\u3002[\u9898\u9762](https://www.luogu.com.cn/paste/opegmwc5)\n\n# Solution\n\n\u9996\u5148\u5c06\u6bcf\u4e2a\u6551\u751f\u725b\u7684\u5de5\u4f5c\u65f6\u6bb5\u62bd\u8c61\u4e3a\u7ebf\u6bb5\u3002\u5219\u9898\u610f\u53d8\u4e3a\uff0c\u7ed9\u4f60 $N$ \u6761\u7ebf\u6bb5\uff0c\u8981\u4f60\u5220\u9664 $K$ \u6761\uff0c\u4f7f\u5f97\u5269\u4e0b\u7684\u7ebf\u6bb5\u8986\u76d6\u6700\u591a\u7684\u70b9\u3002\u4e3a\u4e86\u65b9\u4fbf\u63cf\u8ff0\uff0c\u4ee4 $l_i=s_i$\uff0c$r_i=t_i$\n\n\u5f88\u591a\u9898\u89e3\u4e00\u4e0a\u6765\u5148\u53bb\u6389\u4e86\u4ec0\u4e48\u201c\u4e0d\u9700\u8981\u4fdd\u7559\u7684\u7ebf\u6bb5\u201d\u3002\u5176\u5b9e\u6211\u8ba4\u4e3a\u6b63\u5e38\u505a\u9898\u5e94\u8be5\u662f\u60f3\u597d\u4e86\u5982\u4f55\u52a8\u89c4\u518d\u6839\u636e\u52a8\u89c4\u9700\u6c42\u5220\u9664\u8fd9\u4e9b\u6ca1\u6709\u4fdd\u7559\u4ef7\u503c\u7684\u7ebf\u6bb5\u3002\n\n## \u6734\u7d20\u505a\u6cd5\u7684\u72b6\u6001\u4e0e\u65b9\u7a0b\n\u6839\u636e\u6570\u636e\u8303\u56f4\uff0c\u8bbe $f[i][j]$ \u8868\u793a\u524d $i$ \u6761\u7ebf\u6bb5\uff0c\u5220\u9664\u4e86 $j$ \u6761\uff0c\u5269\u4e0b\u7684\u7ebf\u6bb5\u6700\u591a\u53ef\u4ee5\u8986\u76d6\u591a\u5c11\u4e2a\u70b9\u3002\n\n\u65b9\u7a0b\u4e3a\uff1a$f[i][j]=max\\{f[k][j-i+k+1]+r_i-max(l_i,r_k)\\}(i-j-1\\le k\\le i-1,i\\le N,j\\le K)$\n\n\u7136\u800c\u65f6\u95f4\u590d\u6742\u5ea6 $O(NK^2)$\uff0c~~\u5982\u679c\u5bf9\u81ea\u5df1\u7684\u5e38\u6570\u4e0e\u538c\u6c27\u7a0b\u5ea6\u4e0d\u591f\u81ea\u4fe1~~\u5efa\u8bae\u653e\u5f03\n\n## \u4f18\u5316DP\n\n\u4e0a\u8ff0\u5185\u5bb9\u81ea\u5df1\u7a0d\u52a0\u601d\u8003\u4fbf\u80fd\u60f3\u5230\u3002\u96be\u7684\u662f\u4f18\u5316\u3002\n\n\u72b6\u6001\u6570\u80af\u5b9a\u9003\u4e0d\u4e86\uff0c\u60f3\u529e\u6cd5\u5728 $O(K)$ \u7684\u8f6c\u79fb\u4e0a\u505a\u624b\u811a\u3002\n\n\u6839\u636e\u52a8\u89c4\u4f18\u5316\u7684\u5957\u8def\uff0c\u5c06\u5f0f\u5b50\u4e2d\u4e0e $k$ \u65e0\u5173\u7684\u9879\u786c\u63d0\u51fa\u6765\u3002\u4ee4 $x=j-i+1$\u3002\n\n\u5219\u539f\u5f0f\u53d8\u4e3a\uff1a$f[i][j]=max\\{f[k][x+k]+r_i-max(l_i,r_k)\\}$\n\n\u73b0\u5728\u5f88\u8ba8\u538c\u7684\u662f\u91cc\u9762\u7684\u90a3\u4e2a $max$\u3002\u6211\u4eec\u5c1d\u8bd5\u7528\u5e72\u6389\u7edd\u5bf9\u503c\u7684\u65b9\u6cd5\u5e72\u6389\u8fd9\u4e2a $max$\u2014\u2014**\u5206\u7c7b\u8ba8\u8bba**\u3002\n\n\u5982\u679c $r_k\\le l_i$\uff0c\u76f8\u5f53\u4e8e\u8981 $f[k][x+k]$ \u6700\u5927\u3002\n\n\u5982\u679c $r_k>l_i$\uff0c\u76f8\u5f53\u4e8e\u8981 $f[k][x+k]-r_k$ \u6700\u5927\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u7ef4\u62a4\uff0c\u6211\u4eec\u8003\u8651\u5c06\u6bcf\u6761\u7ebf\u6bb5\u6309\u5de6\u7aef\u70b9\u6392\u5e8f\u3002\u8fd9\u6837\u65b9\u4fbf\u786e\u5b9a\u8ba1\u7b97\u987a\u5e8f\u3002\n\n\u73b0\u5728\uff0c\u5982\u679c\u6309\u4f20\u7edf\u7684`for(i 1......n),for(j 1......k)`\u8ba1\u7b97\u5f88\u4e0d\u65b9\u4fbf\u3002\n\n\u8003\u8651\u6309\u7167 $x=j-i+1$ \u5212\u5206\u9636\u6bb5\u3002$1$ \u662f\u5e38\u6570\uff0c\u76f8\u5f53\u4e8e\u6309\u7167 $j-i$ \u5212\u5206\u9636\u6bb5\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6240\u6709\u80fd\u8f6c\u79fb\u5230\u72b6\u6001 $f[i][j]$ \u7684\u72b6\u6001 $f[x][y]$ **\u5fc5\u5b9a\u6ee1\u8db3** $y-x=j-i+1$\u3002\u6240\u4ee5\uff0c\u72b6\u6001 $f[i][j]$ \u80fd\u8f6c\u79fb\u5230\u7684\u72b6\u6001 $f[x_1][y_1]$ \u6ee1\u8db3 $y_1-x_1=j-i-1$\u3002\n\n\u56e0\u6b64\u6309\u7167 $j-i$ **\u5012\u5e8f**\u8ba1\u7b97\u6bcf\u4e2a\u72b6\u6001\u3002\u5c06\u6240\u6709 $j-i=0$ \u7684\u72b6\u6001\u8bbe\u4e3a $0$\uff08\u76f8\u5f53\u4e8e\u6240\u6709\u7ebf\u6bb5\u5168\u90e8\u5220\u9664\uff09\u3002\n\n\u8fd9\u6837\uff0c\u5c31\u76f8\u5f53\u4e8e\u5728\u6240\u6709\u8303\u56f4\u5185\u7684 $k$ \u4e2d\uff0c\u5bf9\u4e8e $r_k\\le l_i$ \u7684\u60c5\u51b5\uff08\u60c5\u51b51\uff09\u53d6\u4e00\u4e2a\u6700\u5927\u503c\uff0c\u5bf9\u4e8e $r_k>l_i$ \uff08\u60c5\u51b52\uff09\u53d6\u4e00\u4e2a\u6700\u5927\u503c\u3002\n\n\u8003\u8651\u4f7f\u7528\u524d\u7f00\u548csum\u7ef4\u62a4\u60c5\u51b51\uff0c\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u60c5\u51b52\u3002\u56e0\u4e3a\u6240\u6709\u7ebf\u6bb5\u6309\u7167\u5de6\u7aef\u70b9\u6392\u597d\u4e86\u5e8f\uff0c\u6240\u4ee5\u5728 $x=j-i-1$ \u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u4ece\u5c0f\u5230\u5927\u679a\u4e3e $j$\uff08\u4e2a\u4eba\u8ba4\u4e3a\u679a\u4e3e $j$ \u65b9\u4fbf\uff0c\u679a\u4e3e $i$ \u5f53\u7136\u4e5f\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\uff09\uff0c$i$ \u4e5f\u662f\u4ece\u5c0f\u5230\u5927\u7684\uff0c$r_{i-1}$ \u4e5f\u662f\u4ece\u5c0f\u5230\u5927\u7684\u3002\uff08\u4e3a\u4ec0\u4e48\u662f $i-1$\uff0c\u56e0\u4e3a $i-j-1\\le k\\le i-1$\uff09\uff0c$l_{i-1}$ \u4e5f\u662f\u4ece\u5c0f\u5230\u5927\u7684\u3002\n\n\u7b49\u7b49\uff01\u7ebf\u6bb5\u53ea\u6309\u7167\u5de6\u7aef\u70b9\u8fdb\u884c\u4e86\u6392\u5e8f\uff0c\u4e3a\u4ec0\u4e48 $r_{i-1}$ \u4e5f\u201c\u5929\u7136\u6709\u5e8f\u201d\uff1f\u4ed4\u7ec6\u60f3\u60f3\uff0c\u5982\u679c\u6709\u4e24\u6761\u7ebf\u6bb5 $i$\uff0c$j$\uff0c$l_i\\le l_j$ \u4e14 $r_i\\ge r_j$\uff0c\u7ebf\u6bb5 $j$ \u65e0\u8bba\u4fdd\u7559\u8fd8\u662f\u5220\u9664\u90fd\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c$j$ \u88ab $i$ **\u5b8c\u5168\u8986\u76d6**\u4e86\uff0c\u6211\u4eec\u5e94\u8be5\u5728\u9884\u5904\u7406\u65f6\u5220\u6389\u8fd9\u79cd\u7ebf\u6bb5\u3002\u5982\u679c\u9884\u5904\u7406\u5b8c\u5df2\u7ecf\u5220\u9664\u4e86\u8d85\u8fc7 $K$ \u6761\u7ebf\u6bb5\u76f4\u63a5\u5c06\u6240\u6709\u7ebf\u6bb5\u8986\u76d6\u7684\u70b9\u6570\u8f93\u51fa\u5373\u53ef\u3002\n\n\u626f\u4e86\u534a\u5929\uff0c\u56de\u5230\u5f0f\u5b50\u3002\u5355\u8c03\u961f\u5217\u88c5\u4e0b\u6bcf\u4e2a\u65b9\u6848\u5bf9\u5e94\u7684 $k$\uff0c\u6bcf\u6b21\u68c0\u67e5\u5355\u8c03\u961f\u5217\u9996\u90e8\u7684\u5143\u7d20 $k$ \u662f\u5426 $r_k\\le l_i$\uff0c\u5982\u679c\u662f\uff0c\u5c06\u8fd9\u4e2a\u65b9\u6848\u7684 $f[k][x+k]$ \u8ba1\u7b97\u51fa\u6765\uff0c\u4e0e $sum$ \u6bd4\u8f83\u53d6\u5927\u503c\u3002\u5355\u8c03\u961f\u5217`pop_front()`\u3002\u7136\u540e\u6839\u636e\u5404\u4e2a\u7ebf\u6bb5\u7684\u60c5\u51b5\u51b3\u5b9a $k=i-1$ \u653e\u5230\u5355\u8c03\u961f\u5217\u91cc\u8fd8\u662f\u76f4\u63a5\u66f4\u65b0\u524d\u7f00\u548c\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(NK)$\u3002\u56e0\u4e3a\u5355\u8c03\u961f\u5217\u6bcf\u4e2a\u5143\u7d20\u6700\u591a\u53ea\u4f1a\u6709\u4e00\u6b21\u8fdb\u961f\u548c\u51fa\u961f\u7684\u673a\u4f1a\u3002\n\n\u7ec6\u8282\u89c1\u4ee3\u7801\u3002\n\n# $Code:$\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <string.h>\n\ninline int min(const int x, const int y) {return x < y ? x : y;}\ninline int max(const int x, const int y) {return x > y ? x : y;}\nconst int MaxN = 100001, INF = 0x3fffffff;\nstruct Line {\n    int l, r;\n    inline bool operator < (const Line x) const {return l < x.l;}\n} a[MaxN];\n\ntemplate<int MAXSIZE> struct deque {\n\tint head, tail, a[MAXSIZE];\n\tdeque() {head = 0, tail = -1;}\n\tinline void clear() {head = 0, tail = -1;}\n\tinline void push_back(int x) {a[++ tail] = x;}\n\tinline void pop_back() {-- tail;}\n\tinline void pop_front() {++ head;}\n\tinline int size() {return tail - head + 1;}\n\tinline int front() {return a[head];}\n\tinline int back() {return a[tail];}\n};\n\ndeque<1005> q;\nint f[MaxN][101], L[MaxN], R[MaxN], n;\n\nint main() {\n    int N, K, ans(-INF), MaxR(-INF);\n    scanf(\"%d%d\", &N, &K);\n    memset(f, ~0x3f, sizeof f);\n    for (int i(1); i <= N; ++ i) scanf(\"%d%d\", &a[i].l, &a[i].r);\n    std::sort(a + 1, a + N + 1);\n    for (int i(1); i <= N; ++ i) if (a[i].r > MaxR)\n    L[++ n] = a[i].l, R[n] = a[i].r, MaxR = a[i].r;\n    K -= N - n;\n    if (K <= 0) {\n        int ans(0), MaxR(L[1]);\n        for (int i(1); i <= n; ++ i) ans += R[i] - max(MaxR, L[i]), MaxR = R[i];\n        printf(\"%d\", ans);\n        return 0;\n    }\n    for (int i(0); i <= K; ++ i) f[i][i] = 0;\n    for (int k(-1); k >= -n; -- k) {\n        int x(k + 1), sum(-INF);\n        q.clear();\n        for (int j(0); j <= min(K, n + k); ++ j) {\n            int i(j - k);\n            while (q.size() && R[q.front()] <= L[i])\n                sum = max(sum, f[q.front()][x + q.front()]), q.pop_front();\n            if (R[i - 1] <= L[i]) sum = max(sum, f[i - 1][x + i - 1]);\n            else {\n                while (q.size() && f[q.back()][x + q.back()] - R[q.back()] <=\n                f[i - 1][x + i - 1] - R[i - 1]) q.pop_back();\n                q.push_back(i - 1);\n            }\n            f[i][j] = sum - L[i] + R[i];\n            if (q.size()) f[i][j] = max(f[i][j], f[q.front()][x + q.front()] - R[q.front()] + R[i]);\n        }\n    }\n    for (int i(n - K); i <= n; ++ i) ans = max(ans, f[i][K - n + i]);\n    printf(\"%d\", ans);\n    return 0;\n}\n```",
        "postTime": 1608991818,
        "uid": 361308,
        "name": "Stinger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4182 \u3010[USACO18JAN]Lifeguards P\u3011"
    },
    {
        "content": "\u6765\u81eahttp://blog.csdn.net/iceprincess_1968/article/details/79146028\n\n\u5c06\u6240\u6709\u7684\u533a\u95f4\u6309\u5de6\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n\u6211\u4eec\u5904\u7406\u90a3\u4e9b\u88ab\u5b8c\u5168\u5305\u542b\u7684\u533a\u95f4\uff0c\u8fd9\u4e9b\u533a\u95f4\u5373\u4f7f\u5220\u9664\u4e5f\u4e0d\u4f1a\u4f7f\u7b54\u6848\u53d8\u574f\n\n\u8fd9\u6837\u5148\u5220\u4e00\u6ce2\uff0c\u5982\u679c\u53d1\u73b0\u8fd9\u79cd\u5c0f\u533a\u95f4\u7684\u4e2a\u6570\u591a\u4e8ek\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u7b97\u7b54\u6848\u4e86\n\n\u5426\u5219\u6211\u4eec\u8981dp\n\n\u8bbedp[i][j]\u4e3a\u8003\u8651\u5230\u7b2ci\u4e2a\u533a\u95f4\uff0c\u5df2\u7ecf\u5220\u9664\u4e86j\u4e2a\u533a\u95f4\uff0c\u4e14\u7b2ci\u4e2a\u533a\u95f4\u6ca1\u6709\u88ab\u5220\u9664\u7684\u60c5\u51b5\u4e0b\u6700\u5927\u7684\u8986\u76d6\u957f\u5ea6\n\n\u663e\u7136\u6709\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0bdp[i][j]=max(dp[k][j-i-k-1]+\u7b2ci\u4e2a\u533a\u95f4\u8d21\u732e\u7684\u8986\u76d6)\n\n\u8fd9\u4e2a\u65b9\u7a0b\u76f8\u5f53\u4e8e\u679a\u4e3e\u4e0a\u4e00\u4e2a\u6ca1\u6709\u88ab\u5220\u9664\u7684\u533a\u95f4k,\u7136\u540e\u5c06k+1~i-1\u5168\u90e8\u5220\u9664\n\n\u4f46\u6211\u4eec\u770b\u5230\u8fd9\u4e2a\u8f6c\u79fb\u662fO(n)\u7684\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u4e3aO(n*n*k)\uff0c\u4e0d\u80fd\u63a5\u53d7\n\n\u8003\u8651\u4f18\u5316dp\u8f6c\u79fb\n\n\u5bf9\u4e8e\u7b2ci\u4e2a\u533a\u95f4\uff0c\u8bbe\u5176\u5de6\u7aef\u70b9\u4e3al\n\n\u6211\u4eec\u5148\u770b\u4e00\u770b\u65b9\u7a0b\uff0c\u4f1a\u53d1\u73b0\u5bf9dp[i][j]\u4ea7\u751f\u8d21\u732e\u7684i'-j'=i-1-j\n\n1. \u5bf9\u4e8ei\u4e4b\u524d\u7684\u90a3\u4e9b\u53f3\u7aef\u70b9<=l\u7684\u533a\u95f4\uff0c\u5b83\u4eec\u4e0ei\u6ca1\u6709\u91cd\u53e0\u90e8\u5206\uff0c\u6240\u4ee5\u53ea\u8981\u5728\u5b83\u4eec\u5f53\u4e2d\u53d6max\uff0c\u518d\u52a0\u4e0a\u7b2ci\u4e2a\u533a\u95f4\u7684\u957f\u5ea6\u5373\u53ef\n\n2. \u5bf9\u4e8e\u90a3\u4e9b\u4e0ei\u6709\u91cd\u53e0\u90e8\u5206\u7684\u533a\u95f4\uff0c\u5728\u5f53\u524d\u533a\u95f4\u53f3\u79fb\u7684\u65f6\u5019\uff0c\u8fd9\u4e9bdp\u7684\u8d21\u732e\u4f1a\u53d8\uff0c\u4f46\u76f8\u5bf9\u5927\u5c0f\u4e0d\u4f1a\u53d8\uff0c\u6240\u4ee5\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u961f\u5217\uff0cdp[i][j]\u5bf9\u5e94\u7684\u5355\u8c03\u961f\u5217\u7684\u7f16\u53f7\u4e3ai-1-j\uff0c\u6bcf\u6b21\u5148\u628a\u961f\u5934\u7684\u90a3\u4e9b\u5df2\u7ecf\u8dd1\u5230\u5de6\u8fb9\u7684\u533a\u95f4\u5f39\u51fa\u53bb\uff08\u7b97\u62101\u7684\u8d21\u732e\uff09\uff0c\u7136\u540e\u53d6\u961f\u5934\u5c31\u662f\u5f53\u524d\u7684\u6709\u91cd\u53e0\u7684\u72b6\u6001\u4e2d\u7684\u6700\u5927\u7b54\u6848\n\n\u7136\u540e\u5f53\u524ddp\u503c\u7b97\u51fa\u6765\u4ee5\u540e\u8981\u63d2\u8fdb\u5bf9\u5e94\u7684\u5355\u8c03\u961f\u5217\u4e2d\uff08\u7f16\u53f7\u4e3ai-j\u7684\u5355\u8c03\u961f\u5217\uff09\uff0c\u5982\u679c\u961f\u5c3e\u72b6\u6001\u52a0\u4e0a\u4e0e\u5f53\u524d\u72b6\u6001\u7684\u53f3\u7aef\u70b9\u5dee\u8fd8\u6ca1\u6709\u5f53\u524d\u72b6\u6001\u7684dp\u503c\u5927\u7684\u8bdd\uff0c\u5c31\u628a\u5b83\u4ece\u961f\u5c3e\u5f39\u51fa\n\n\u8fd9\u6837\u603b\u590d\u6742\u5ea6O(n*k)",
        "postTime": 1519870178,
        "uid": 51357,
        "name": "babingbaboom",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4182 \u3010[USACO18JAN]Lifeguards P\u3011"
    },
    {
        "content": "[P4182 [USACO18JAN]Lifeguards P](https://www.luogu.com.cn/problem/P4182) \n\n\u8f6c\u5316\u9898\u610f\u4e3a\uff1a\u7ed9\u4f60 $n$ \u6761\u7ebf\u6bb5\uff0c\u4ece\u5176\u4e2d\u53bb\u6389 $K$ \u6761\uff0c\u4f7f\u5269\u4e0b\u7684\u7ebf\u6bb5\u8986\u76d6\u7684\u5e76\u96c6\u6700\u5927\u3002\n\n\u9996\u5148\u628a\u6240\u6709\u7ebf\u6bb5\u6309\u5de6\u7aef\u70b9\u5347\u5e8f\uff0c\u5de6\u7aef\u70b9\u76f8\u540c\u6309\u53f3\u7aef\u70b9\u5347\u5e8f\u6392\u5e8f\u3002\u53d1\u73b0\u5982\u679c\u4e00\u4e2a\u7ebf\u6bb5\u5b8c\u5168\u88ab\u53e6\u4e00\u4e2a\u7ebf\u6bb5\u5305\u542b\uff0c\u90a3\u628a\u5b83\u53bb\u6389\u4e5f\u6ca1\u6709\u5f71\u54cd\u3002\u4e8e\u662f\u6211\u4eec\u5148\u53bb\u6389\u8fd9\u79cd\u7ebf\u6bb5\uff0c\u7136\u540e\u8fdb\u884c dp \u3002\u8bbe $dp_{i,j}$ \u8868\u793a\u524d $i$ \u4e2a\u533a\u95f4\u5220\u53bb $j$ \u4e2a\uff0c\u4e14\u94a6\u5b9a\u7b2c $i$ \u4e2a\u53d6\u7684\u6700\u5927\u8986\u76d6\u3002\u90a3\u4e48 $dp_{i,j}=\\max\\limits_{k<i}(dp_{k,j-(i-k-1)}+r_i-\\max(l_i,r_k))$ \u3002\u7b80\u5355\u89e3\u91ca\u4e00\u4e0b\uff0c\u5c31\u662f\u94a6\u5b9a\u4e0a\u4e00\u4e2a\u9009\u7684\u662f $k$ \uff0c$(k,i)$ \u95f4\u7684\u5168\u90fd\u4e0d\u9009\u3002\u56e0\u4e3a $i-k-1\\le K$ \uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e3a $O(nK^2)$\u3002\n\n\u5bf9\u4e8e $k$ \u6bd4\u8f83\u5c0f\uff0c\u5373 $r_k<l_i$ \u65f6\u7684\u60c5\u51b5\uff0c$dp_{i,j}=\\max(dp_{k,j-(i-k-1)}+r_i-l_i)$\u3002\u5982\u679c\u6211\u4eec\u80fd\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i-j- 1$ \u9884\u5904\u7406\u51fa $dp_{k,k-(i-j-1)}$ \u7684\u6700\u5927\u503c $p$ \uff0c\u5c31\u53ef\u4ee5 $O(1)$ \u8f6c\u79fb\u4e86\u3002\n\n\u5bf9\u4e8e $k$ \u6bd4\u8f83\u5927\uff0c\u5373 $r_k>l_i$ \u65f6\u7684\u60c5\u51b5\uff0c$dp_{i,j}=\\max(dp_{k,j-(i-k-1)}+r_i-r_k)$\u3002\u6211\u4eec\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4 $dp_{k,j-(i-k-1)}-r_k$\u7684\u6700\u5927\u503c\u3002\u5f53\u5355\u8c03\u961f\u5217\u4e2d\u7684\u5143\u7d20\u4e0d\u6ee1\u8db3 $r_k>l_i$ \u65f6\u5c31\u5f39\u51fa\uff0c\u5f39\u51fa\u7684\u65f6\u5019\u987a\u4fbf\u5904\u7406\u51fa $p$\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u5904\u7406\u51fa $r_k<l_i$ \u65f6 $dp_{k,k-(i-j-1)}$ \u7684\u6700\u5927\u503c\uff0c\u518d\u5f00 $n$ \u4e2a\u5355\u8c03\u961f\u5217\uff0c\u7b2c $i-j$ \u4e2a\u5355\u8c03\u961f\u5217\u7ef4\u62a4 $dp_{i,j}-r_i$ \u7684\u6700\u5927\u503c\u3002\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u964d\u4e3a\u4e86 $O(nK)$\u3002\n\n\n------------\n\n\u6700\u540e\u8bf4\u4e00\u53e5\uff0cdeque \u771f\u662f\u4ee3\u7801\u4e11\u5e38\u6570\u5927\u554a\uff08\u4f46\u529f\u80fd\u786e\u5b9e\u5f3a\u5927\uff09\uff01\u5bfc\u81f4\u6211\u7684\u4ee3\u7801\u5fc5\u987b\u8981\u5438\u6c27\u624d\u80fd\u8fc7\u3002\n\n\u672c\u6765\u8fd8\u60f3\u8bd5\u7740\u6539\u624b\u5199\u961f\u5217\u51cf\u5c0f\u5e38\u6570\uff0c\u7ed3\u679c\u83dc\u9e21\u5982\u6211\u6539\u7740\u6539\u7740\u5c31\u6539\u6302\u4e86\u3002\u3002\u3002\u6240\u4ee5\u4ee3\u7801\u5c31\u51d1\u5408\u770b\u770b\u5427\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nnamespace FGF\n{\n\tint n,m;\n\tconst int N=1e5+5;\n\tstruct Node{\n\t\tint l,r;\n\t}a[N],b[N];\n\tint dp[N][110],p[N];\n\tdeque<int> q[N];\n\tbool cmp(Node x,Node y)\n\t{\n\t\treturn x.l^y.l? x.l<y.l:x.r<y.r;\n\t}\n\tvoid work()\n\t{\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=1;i<=n;i++)\n\t\t \tscanf(\"%d%d\",&a[i].l,&a[i].r);\n\t\tif(m>=n)\n\t\t{\n\t\t\tputs(\"0\");\n\t\t\treturn;\n\t\t}\n\t\tsort(a+1,a+n+1,cmp);\n\t\tint mx=-1,cnt=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(a[i].r>mx)b[++cnt]=a[i];\n\t\t\t\telse m--;\n\t\t\tmx=max(mx,a[i].r);\n\t\t}\n\t\tm=max(m,0);\n\t\tb[++cnt].l=1e9,b[cnt].r=1e9;\n\t\tn=cnt;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tfor(int j=0;j<=min(i-1,m);j++)\n\t\t\t{\n\t\t\t\tint now=i-j-1;\n\t\t\t\twhile(q[now].size()&&b[q[now].front()].r<b[i].l)\n\t\t\t\t{\n\t\t\t\t\tp[now]=max(p[now],dp[q[now].front()][q[now].front()-now]);\n\t\t\t\t\tq[now].pop_front();\n\t\t\t\t}\n\t\t\t\tdp[i][j]=max(dp[i][j],p[now]+b[i].r-b[i].l);\n\t\t\t\tif(q[now].size())dp[i][j]=max(dp[i][j],dp[q[now].front()][q[now].front()-now]-b[q[now].front()].r+b[i].r);\n\t\t\t\tnow=i-j;\n\t\t\t\twhile(q[now].size()&&dp[q[now].back()][q[now].back()-now]-b[q[now].back()].r<=dp[i][j]-b[i].r)\n\t\t\t\t\tq[now].pop_back();\n\t\t\t\tq[now].push_back(i);\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\",dp[n][m]);\n\t}\n}\nint main()\n{\n\tFGF::work();\n\treturn 0;\n}\n```",
        "postTime": 1606955325,
        "uid": 224403,
        "name": "\u6728xx\u6728\u5927",
        "ccfLevel": 9,
        "title": "P4182 [USACO18JAN]Lifeguards P\uff08\u5355\u8c03\u961f\u5217\u4f18\u5316dp)"
    },
    {
        "content": "# [LG-P4182 [USACO18JAN]Lifeguards P](https://www.luogu.com.cn/problem/P4182) Solution\n\n[TOC]\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6b64\u8fdb\u5165](http://blog.monkey-hyx.tech?t=LG-P4182-Solution)\n\n\u89e3\u6cd5\u672c\u8eab\u9898\u89e3\u533a\u5df2\u7ecf\u5199\u7684\u8f83\u4e3a\u6e05\u695a\u4e86\uff0c\u8fd9\u91cc\u4e3b\u8981\u5bf9\u5927\u591a\u6570\u9898\u89e3\u90fd\u6d89\u53ca\u5230\u4f46\u5747\u672a\u8bc1\u660e\u7684\u4e00\u4e2a\u8d2a\u5fc3\u7b56\u7565\u8fdb\u884c\u611f\u6027\u8bc1\u660e\uff0c\u6545\u524d\u9762\u7684\u63a8\u5bfc\u8fc7\u7a0b\u5199\u7684\u8f83\u4e3a\u7b80\u7565\u3002\n\n### \u9898\u9762\n\n\u7ed9\u5b9a $ n $ \u4e2a\u5de6\u95ed\u53f3\u5f00\u7684\u533a\u95f4\uff0c\u5728\u8303\u56f4 $ [0, 10^{9}] $ \u5185\uff0c\u6700\u5927\u5316\u5220\u53bb\u5176\u4e2d $ k $ \u4e2a\u533a\u95f4\u540e\u5269\u4e0b\u533a\u95f4\u5e76\u8d77\u6765\u7684\u957f\u5ea6\uff0c\u6c42\u6700\u5927\u503c\u3002\n\n$ 1 \\le n \\le 10^5, 1 \\le k \\le \\min(100, n) $\u3002\n\n### Solution\n\n\u9996\u5148\u4e0d\u96be\u60f3\u5230\u5bf9\u4e8e\u533a\u95f4 $ [l_1, r_1), [l_2, r_2) $ \u4e14 $ l_1 \\le l_2 \\land r_2 \\le r_1 $ \u90a3\u4e48\u5220\u53bb $ [l_2, r_2] $ \u7b54\u6848\u4e00\u5b9a\u4e0d\u53d8\uff0c\u4e8e\u662f\u53ef\u4ee5\u76f4\u63a5\u5168\u90e8\u5220\u53bb\uff0c\u5e76\u5c06 $ k \\leftarrow k - 1 $\u3002\n\n\u7136\u540e DP \u663e\u7136\uff0c\u4e5f\u5f88\u597d\u60f3\u5230\u4e00\u4e2a\u72b6\u6001 $ dp(i, k) $ \u8868\u793a\u8003\u8651\u524d $ i $ \u4e2a\u533a\u95f4\uff0c\u5220\u53bb\u5176\u4e2d\u7684 $ k $ \u4e2a\u7684\u6700\u4f18\u503c\uff0c\u7136\u540e\u53d1\u73b0\u8fd9\u73a9\u610f\u6ca1\u6709\u56fa\u5b9a\u5177\u4f53\u600e\u4e48\u5220\u6ca1\u6cd5\u8f6c\u79fb\uff0c\u7136\u540e\u5c31\u60f3\u5230\u5728\u539f\u6765\u7684\u72b6\u6001\u57fa\u7840\u4e0a\u94a6\u5b9a\u5fc5\u987b\u9009\u62e9\u7b2c $ i $ \u4e2a\u533a\u95f4\uff0c\u7136\u540e\u9700\u8981\u628a\u533a\u95f4\u4f18\u5148\u6309\u5de6\u7aef\u70b9\uff0c\u518d\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4f1a\u53d1\u73b0\u6700\u5f00\u59cb\u53bb\u6389\u90a3\u4e9b\u533a\u95f4\u7684\u4f5c\u7528\u4e86\uff0c\u53bb\u6389\u4e4b\u540e\u73b0\u5728\u6211\u4eec\u5269\u4e0b\u7684\u533a\u95f4\u6392\u5e8f\u540e\u4e00\u5b9a\u6ee1\u8db3\u5bf9\u4e8e $ l $ \u7684\u5347\u5e8f\u4e00\u5b9a\u4e5f\u6ee1\u8db3 $ r $ \u5347\u5e8f\uff0c\u4e0d\u6ee1\u8db3\u7684\u5df2\u7ecf\u88ab\u6211\u4eec\u5220\u6389\u4e86\u3002\u4e8e\u662f\u6b64\u65f6\u8f6c\u79fb\u6bd4\u8f83\u663e\u7136\uff1a$ dp(i, k) = \\max\\{ dp(j, k - (i - j - 1)) + r_i - \\max(l_i, r_j) \\}, j \\in [i - k - 1, i - 1] $\u3002\u8fd9\u73a9\u610f\u590d\u6742\u5ea6\u663e\u7136\u662f $ O(nk^2) $ \u7684\uff0c\u663e\u7136\u4e0d\u6b63\u786e\u3002\n\n\u8003\u8651\u4f18\u5316\uff0c\u72b6\u6001\u6ca1\u4ec0\u4e48\u53ef\u4f18\u5316\u7684\uff0c\u4e8e\u662f\u8003\u8651\u4f18\u5316\u8f6c\u79fb\uff0c\u6211\u4eec\u5c1d\u8bd5\u63d0\u51fa\u6765\u4e0e\u8f6c\u79fb\u65f6\u7684 $ j $ \u65e0\u5173\u7684\u9879\uff0c\u4ee4 $ \\xi = i - k - 1 $\uff0c\u4e8e\u662f\u6709 $ dp(i, k) = \\max\\{ dp(j, j - \\xi) + r_i - \\max(l_i, r_j) \\}, j \\in [i - k - 1, i - 1] $\u3002\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8981\u5728 $ \\xi = i - k - 1 $ \u7684\u524d\u63d0\u4e0b\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u4ee5\u524d\u7684 $ dp $ \u4e2d\u524d\u540e\u7d22\u5f15\u7684\u5dee\u4e3a $ \\xi $ \u7684\u503c\u4e2d\u627e\u5230\u540e\u9762\u5f0f\u5b50\u7684\u6700\u5927\u503c\u8fdb\u884c\u8f6c\u79fb\uff0c\u8fd9\u4e2a\u4e1c\u897f\u7b80\u5355\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\u5c31\u662f\u5982\u679c $ l_i \\ge r_j $\uff08\u6216\u8005\u7406\u89e3\u4e3a\u533a\u95f4\u65e0\u4ea4\uff09\u90a3\u4e48\u5c31\u662f\u8981\u6700\u5927\u5316 $ dp(j, j - \\xi) $\u3002\u53cd\u4e4b\u9700\u8981\u6700\u5927\u5316 $ dp(j, j - \\xi) - r_j $\u3002\n\n\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u5bf9\u524d\u8005\u7ef4\u62a4\u4e00\u4e2a\u6700\u5927\u503c\uff08\u56e0\u4e3a\u6211\u4eec\u7684\u533a\u95f4\u4e4b\u95f4\u4f7f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u5982\u679c\u5bf9\u4e8e\u4e4b\u524d\u7684\u533a\u95f4\u5df2\u7ecf\u65e0\u4ea4\u4e86\uff0c\u5bf9\u4e8e\u73b0\u5728\u7684\u4e00\u5b9a\u4e5f\u65e0\u4ea4\uff09\uff0c\u540e\u8005\u5219\u7ef4\u62a4\u4e00\u4e2a~~\u5355\u8c03\u961f\u5217~~~~\u5355\u8c03\u6808~~\u5355\u8c03\u53cc\u7aef\u961f\u5217\uff0c\u6bcf\u6b21\u5904\u7406\u65f6\u5148\u628a\u5bf9\u5e94\u5355\u8c03\u53cc\u7aef\u961f\u5217\u961f\u5934\u4e2d\u6240\u6709\u4e0d\u5408\u6cd5\u7684\uff0c\u4e5f\u5c31\u662f\u4e0d\u4ea4\u7684\u5f39\u51fa\u7136\u540e\u66f4\u65b0\u4e0d\u4ea4\u533a\u95f4\u91cc\u9762\u7684\u6700\u5927\u503c\u3002\u7136\u540e\u7528\u4ea4\u7684\u548c\u4e0d\u4ea4\u7684\u91cc\u7684\u6700\u5927\u503c\u66f4\u65b0\u5f53\u524d $ dp $\uff0c\u6bcf\u6b21\u5904\u7406\u5b8c\u5f53\u524d\u7684 $ dp $ \u5c31\u628a\u5f53\u524d\u7684\u4e22\u5230\u5bf9\u5e94\u7684\u5355\u8c03\u53cc\u7aef\u961f\u5217\u91cc\uff0c\u8fd9\u65f6\u6211\u4eec\u4f1a\u6309\u7167\u53cc\u7aef\u961f\u5217\u76f4\u63a5\u628a\u961f\u5c3e\u4e0d\u4f18\u4e8e\u5f53\u524d\u7684\u76f4\u63a5\u4e22\u6389\u800c\u4e0d\u662f\u4fdd\u7559\u4e0b\u6765\u7b49\u5f85\u4e0d\u4ea4\u65f6\u66f4\u65b0\u4e0d\u4ea4\u7684\u6700\u5927\u503c\uff0c\u8fd9\u4e2a\u7684\u539f\u56e0\u6211\u60f3\u4e86\u5f88\u4e45\uff0c\u611f\u6027\u5730\u8bc1\u660e\u4e86\u4e00\u4e0b\uff0c\u5982\u4e0b\uff1a\n\n\u5982\u679c\u4f60\u4ed4\u7ec6\u60f3\u4e00\u4e0b\u5c31\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u7b97\u6cd5\u6709\u4e00\u70b9\u95ee\u9898\uff0c\u9996\u5148\u6211\u4eec\u5728\u6700\u521d\u7684\u627e\u5355\u8c03\u53cc\u7aef\u961f\u5217\u91cc\u9762\u7684\u961f\u5934\u4e0d\u5408\u6cd5\u7684\u503c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u65f6\u6309\u7167 $ val $ \u7684\u5927\u5c0f\uff0c\u4e5f\u5c31\u662f $ dp(j, j - \\xi) - r_j $ \u7684\u5927\u5c0f\u7ef4\u62a4\u7684\u5355\u8c03\u53cc\u7aef\u961f\u5217\uff0c\u4f46\u662f\u6211\u4eec\u66f4\u65b0\u4e0d\u4ea4\u6700\u5927\u503c\u7684\u65f6\u5019\u9700\u8981\u7684\u662f\u4e0e\u5176\u4e0d\u4ea4\u533a\u95f4\u91cc\u7684\u6700\u5927\u503c\uff08\u5e9f\u8bdd\uff09\uff0c\u96be\u9053\u5c31\u4e0d\u4f1a\u5b58\u5728\u4e00\u79cd\u60c5\u51b5\uff0c\u5373\u961f\u5934\u7684\u533a\u95f4 $ val $ \u66f4\u5927\uff0c\u4f46\u662f\u533a\u95f4\u9760\u53f3\uff0c\u7136\u800c\u961f\u5934\u4e4b\u540e\u67d0\u4e2a\u533a\u95f4 $ val $ \u8f83\u5c0f\u5374\u533a\u95f4\u9760\u5de6\uff0c\u4e5f\u5c31\u662f\u5b58\u5728\u4e00\u79cd\u60c5\u51b5\u5355\u8c03\u4f18\u5148\u961f\u5217\u7684\u540e\u9762\u5df2\u7ecf\u5b58\u5728\u4e86\u4e0d\u4ea4\u7684\u533a\u95f4\u4f46\u662f\u5374\u88ab\u961f\u5934\u7684\u76f8\u4ea4\u533a\u95f4\u963b\u6321\u4e86\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u96be\u9053\u4e0d\u4f1a\u5c11\u66f4\u65b0\u4e00\u4e9b\u503c\u5417\uff1f\u8fd8\u6709\u5c31\u662f\u5728\u628a\u5f53\u524d\u7684 $ dp $ \u538b\u5165\u5355\u8c03\u53cc\u7aef\u961f\u5217\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u628a\u961f\u5c3e\u4e0d\u4f18\u4e8e\u5f53\u524d\u503c\u7684\u76f4\u63a5\u8e22\u6389\uff0c\u8fd9\u4e2a\u65f6\u5019\u5374\u6ca1\u6709\u8003\u8651\u5230\u5728\u540e\u9762\u66f4\u65b0\u65f6\u8fd9\u4e9b\u533a\u95f4\u53ef\u80fd\u4f1a\u4ece\u76f8\u4ea4\u53d8\u6210\u4e0d\u4ea4\uff0c\u4ece\u800c\u53ef\u80fd\u6027\u5730\u53bb\u66f4\u65b0\u4e0d\u4ea4\u7684\u6700\u5927\u503c\uff0c\u4f46\u662f\u73b0\u5728\u8fd9\u88ab\u6211\u4eec\u4e22\u6389\u4e86\uff0c\u96be\u9053\u4e0d\u4f1a\u4f7f\u7b54\u6848\u66f4\u52a3\u5417\uff1f\n\n\u8fd9\u51e0\u4e2a\u95ee\u9898\u56f0\u6270\u4e86\u6211\u5f88\u4e45\uff0c\u5b8c\u5168\u6ca1\u6709\u5934\u7eea\uff0c\u76f4\u5230\u53d1\u73b0\u4e86\u4e00\u4e2a\u6027\u8d28\u6211\u624d\u5927\u6982\u80fd\u611f\u6027\u7406\u89e3\u8fd9\u4e2a\u8d2a\u5fc3\u7684\u6b63\u786e\u6027\u3002\n\n\u663e\u7136\u5f53\u6211\u4eec\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u5982\u679c\u8f6c\u79fb\u7684\u8fd9\u4e2a $ j $ \u662f\u4e0e $ i $ \u4ea4\u7684\uff0c\u90a3\u4e48\u6700\u4f18\u7684 $ j $ \u4e00\u5b9a\u662f $ l_j $ \u6700\u5c0f\u7684 $ j $\uff0c\u5f53\u7136\u7ecf\u8fc7\u6211\u4eec\u7684\u5904\u7406\u4e4b\u540e\u540c\u65f6\u4e5f\u662f $ r_j $ \u6700\u5c0f\u7684\u3002\u8fd9\u4e2a\u4e0d\u96be\u7406\u89e3\uff0c\u56e0\u4e3a\u6211\u4eec\u5904\u7406\u8fc7\u5305\u542b\u7684\u533a\u95f4\uff0c\u6240\u4ee5 $ i, j $ \u76f8\u4ea4\u90a3\u4e48\u6700\u7ec8\u8fd9\u4e24\u6bb5\u7ec4\u6210\u7684\u533a\u95f4\u4e00\u5b9a\u662f $ [l_j, r_i) $\uff0c\u90a3\u4e48 $ l_j $ \u5c3d\u91cf\u5c0f\u4e00\u5b9a\u66f4\u4f18\uff0c\u6240\u4ee5 $ j + 1, j + 2, \\cdots, i - 1 $ \u7684\u533a\u95f4\u90fd\u662f\u6ca1\u5fc5\u8981\u9009\u7684\uff0c\u9009\u4e86\u4e5f\u4e0d\u4f1a\u6709\u4efb\u4f55\u8d21\u732e\u3002\n\n\u6b64\u65f6\u6211\u4eec\u518d\u56de\u5230\u521a\u624d\u7684\u8003\u8651\uff0c\u6211\u4eec\u7684\u5355\u8c03\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u7684\u662f\u6700\u5927\u503c\uff0c\u800c\u6700\u5927\u503c\u4e00\u5b9a\u662f $ l $ \u548c $ r $ \u6700\u5c0f\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5b9e\u9645\u4e0a\u4e5f\u53ef\u4ee5\u611f\u6027\u5730\u8ba4\u4e3a\u66f4\u5de6\u7684\u533a\u95f4\u5728\u5355\u8c03\u53cc\u7aef\u961f\u5217\u91cc\u4e5f\u66f4\u9760\u524d\uff0c\u5982\u679c\u8fd9\u4e2a\u6210\u7acb\u90a3\u4e48\u6211\u4eec\u521a\u624d\u7684\u6240\u6709\u95ee\u9898\u4e5f\u5c31\u5f88\u663e\u7136\u662f\u4e0d\u9700\u8981\u8003\u8651\u5f97\u4e86\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5f39\u51fa\u7684\u961f\u5934\u4e00\u5b9a\u662f\u6700\u5148\u53d8\u5f97\u4e0d\u4ea4\u7684\uff0c\u88ab\u4e22\u6389\u7684\u533a\u95f4\u4e5f\u4e00\u5b9a\u662f\u66f4\u52a3\u7684\u3002\n\n\u4e8e\u662f\u8fd9\u4e2a\u8d2a\u5fc3\uff08~~\u5e94\u8be5~~\uff09\u662f\u6b63\u786e\u7684\u3002\n\n\u5f53\u7136\u4e0a\u9762\u8fd9\u4e00\u5927\u6bb5\u8bc1\u660e\u90fd\u5b8c\u5168\u662f\u6211\u53e3\u7cca\u7684\uff0c\u4e0d\u4fdd\u8bc1\u6b63\u786e\u6027\uff0c\u4e5f\u4e0d\u591f\u7406\u6027\u548c\u4e25\u8c28\uff0c\u671f\u5f85\u4e00\u4e2a\u66f4\u4e25\u8c28\u7684\u8bc1\u660e\u3002\n\n### Code\n\n```cpp\n#define _USE_MATH_DEFINES\n#include <bits/extc++.h>\n\n#define PI M_PI\n#define E M_E\n#define npt nullptr\n#define SON i->to\n#define OPNEW void* operator new(size_t)\n#define ROPNEW(arr) void* Edge::operator new(size_t){static Edge* P = arr; return P++;}\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\nmt19937 rnd(random_device{}());\nint rndd(int l, int r){return rnd() % (r - l + 1) + l;}\nbool rnddd(int x){return rndd(1, 100) <= x;}\n\ntypedef unsigned int uint;\ntypedef unsigned long long unll;\ntypedef long long ll;\ntypedef long double ld;\n\ntemplate< typename T = int >\ninline T read(void);\n\nstruct Line{\n    int l, r;\n    friend const bool operator < (const Line &a, const Line &b){if(a.l == b.l)return a.r < b.r; return a.l < b.l;}\n}line[110000];\nlist < Line > _line;\nint N, K;\nint cnt(0);\nstruct Status{int idx; int val;};\ndeque < Status > bst[110000];\nint mx[110000];\nint dp[110000][110];\n\nint main(){\n    N = read(), K = read();\n    for(int i = 1; i <= N; ++i){\n        int l = read(), r = read();\n        _line.emplace_back(Line{l, r});\n    }_line.sort();\n    for(auto it = next(_line.begin()); it != _line.end();)\n        if(it->r <= prev(it)->r)it = _line.erase(it), --K; else ++it;\n    for(auto ln : _line)line[++cnt] = ln;\n    N = cnt; K = max(0, K);\n    for(int i = 1; i <= N; ++i){\n        for(int k = 0; k <= min(i - 1, K); ++k){\n            int xi = i - k - 1;\n            while(!bst[xi].empty() && line[bst[xi].front().idx].r < line[i].l){\n                auto tp = bst[xi].front(); bst[xi].pop_front();\n                mx[xi] = max(mx[xi], tp.val + line[tp.idx].r);\n            }\n            dp[i][k] = max({\n                dp[i][k],\n                mx[xi] + line[i].r - line[i].l,\n                bst[xi].empty() ? -1 : bst[xi].front().val + line[i].r\n            });\n            int val = dp[i][k] - line[i].r;\n            int pos = i - k;\n            while(!bst[pos].empty() && bst[pos].back().val < val)bst[pos].pop_back();\n            bst[pos].push_back(Status{i, val});\n        }\n    }int ans(-1);\n    for(int i = N - K; i <= N; ++i)ans = max(ans, dp[i][K - (N - i)]);\n    printf(\"%d\\n\", ans);\n    fprintf(stderr, \"Time: %.6lf\\n\", (double)clock() / CLOCKS_PER_SEC);\n    return 0;\n}\n\ntemplate < typename T >\ninline T read(void){\n    T ret(0);\n    short flag(1);\n    char c = getchar();\n    while(c != '-' && !isdigit(c))c = getchar();\n    if(c == '-')flag = -1, c = getchar();\n    while(isdigit(c)){\n        ret *= 10;\n        ret += int(c - '0');\n        c = getchar();\n    }\n    ret *= flag;\n    return ret;\n}\n```\n\n## UPD\n\nupdate-2022_11_03 \u521d\u7a3f",
        "postTime": 1667463763,
        "uid": 362938,
        "name": "Tsawke",
        "ccfLevel": 6,
        "title": "LG-P4182 [USACO18JAN]Lifeguards P \u9898\u89e3"
    },
    {
        "content": "**\u8b66\u544a\uff1a** \u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u4e00\u5b9a\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\uff0c\u53ef\u80fd\u4f1a**\u8d85\u8fc7\u65f6\u7a7a\u9650\u5236**\u3002\u7b14\u8005\u4e3a\u4e86\u80fd\u5361\u8fdb\u65f6\u7a7a\u9650\u5236\uff0c\u7528\u4e86\u4e00\u4e9b\u624b\u6bb5\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4**\u7b54\u6848\u9519\u8bef**\u3002\u5982\u679c\u60a8\u60f3\u8981\u5bf9\u62cd\u7684\u8bdd\uff0c\u8bf7**\u4e0d\u8981**\u4f7f\u7528\u8fd9\u4efd\u4ee3\u7801\u3002\n\n\u9898\u610f\uff1a\u6709 $n$ \u4e2a\u7ebf\u6bb5\uff0c\u4f60\u9700\u8981\u5220\u6389 $k$ \u4e2a\u7ebf\u6bb5\uff0c\u4f7f\u5f97\u5269\u4e0b\u7684\u7ebf\u6bb5\u7684\u5e76\u96c6\u6700\u5927\uff0c\u95ee\u8fd9\u4e2a\u6700\u5927\u503c\u662f\u591a\u5c11\u3002\n\n\u9996\u5148\u6211\u4eec\u5148\u628a\u5220\u6389 $k$ \u4e2a\u8f6c\u5316\u6210\u4fdd\u7559 $n-k$ \u4e2a\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u8bbe $f(s)$ \u4e3a\u4fdd\u7559 $s$ \u6761\u7ebf\u6bb5\u7684\u5e76\u96c6\u6700\u5927\u503c\uff0c\u90a3\u4e48 $f(s)$ \u662f\u51f8\u7684\u3002\n\n\u7136\u540e\u6211\u4eec\u9700\u8981\u6c42 $f(n-k)$\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651 wqs \u4e8c\u5206\u3002\n\n\u6bcf\u6b21\u4e8c\u5206\u60e9\u7f5a $p$\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u9009\u62e9\u4e00\u6761\u7ebf\u6bb5\u9700\u8981 $p$ \u7684\u4ee3\u4ef7\u7684\u6700\u5927\u65b9\u6848\u3002\n\n\u6211\u4eec\u8003\u8651\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8bb0 $dp_i$ \u4e3a\u8003\u8651\u4e86\u524d $i$ \u6761\u7ebf\u6bb5\uff0c\u4e00\u5b9a\u8981\u9009\u62e9\u7b2c $i$ \u6761\u7ebf\u6bb5\u7684\u7b54\u6848\u3002\n\n\u6211\u4eec\u5148\u628a\u6240\u6709\u7ebf\u6bb5\u6309\u7167\u5de6\u7aef\u70b9\u6392\u5e8f\u3002\n\n\u5bf9\u4e8e\u4e00\u6761\u7ebf\u6bb5 $i$ \u7684\u5de6\u53f3\u7aef\u70b9\u662f $l,r$\uff0c\u8003\u8651\u4e0a\u4e00\u6761\u7ebf\u6bb5 $j$ \u7684\u53f3\u7aef\u70b9 $r'$\u3002\n\n+ \u5982\u679c $r'<l$\uff0c\u90a3\u4e48\u8fd9\u4e00\u6761\u7ebf\u6bb5\u7684\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f $r-l+1$\uff0c\u5373 $dp_i\\gets \\max(dp_i,dp_j+(r-l+1)-p)$\u3002\n\n+ \u5982\u679c $l\\le r'\\le r$\uff0c\u90a3\u4e48\u8fd9\u4e00\u6761\u7ebf\u6bb5\u7684\u8d21\u732e\u4e3a $r-r'$\uff0c\u5373 $dp_i\\gets \\max(dp_i,dp_j+(r-r')-p)$\u3002\n\n+ \u5982\u679c $r'>r$\uff0c\u90a3\u4e48\u4e0a\u4e00\u6761\u7ebf\u6bb5\u4e00\u5b9a\u5305\u542b\u4e86\u8fd9\u4e00\u6761\uff0c\u8fd9\u4e00\u6761\u7ebf\u6bb5\u4e00\u5b9a\u6ca1\u6709\u7528\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u56e0\u4e3a\u5de6\u7aef\u70b9\u4f9d\u6b21\u9012\u589e\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u628a\u5904\u7406\u8fc7\u7684\u7ebf\u6bb5\u53f3\u7aef\u70b9\u5904\u7684\u7b54\u6848\u5b58\u8fdb\u6570\u7ec4\u91cc\u9762\u5c31\u53ef\u4ee5\u67e5\u8be2\u5566\u3002\n\n\u5177\u4f53\u5730\uff0c\u6211\u4eec\u8bb0 $val_i$ \u4e3a\u53f3\u7aef\u70b9 $\\le i$ \u7684\u7b54\u6848\u3002\u6bcf\u6b21\u52a0\u5165\u7ebf\u6bb5\u7684\u65f6\u5019\uff0c\u7528\u8fd9\u4e00\u6761\u7ebf\u6bb5\u66f4\u65b0 $val_r$\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c$val_i$ \u6307\u53f3\u7aef\u70b9 $=i$ \u7684\u7b54\u6848\u3002\u5f53\u5de6\u7aef\u70b9\u66f4\u65b0\u5230 $l$ \u65f6\uff0c$i\\le l-1$ \u7684 $val_i$ \u7684\u7b54\u6848\u5df2\u7ecf\u66f4\u65b0\u5b8c\u6bd5\uff0c\u4e8e\u662f\u628a $i\\le l-1$ \u7684 $val_i$ \u66f4\u65b0\u4e00\u4e0b\uff0c\u53d8\u6210\u6210\u53f3\u7aef\u70b9 $\\le i$ \u7684\u7b54\u6848\u5c31\u53ef\u4ee5\u5566\uff0c\u4e5f\u5c31\u662f $val_i\\gets \\max(val_{i-1},val_i)$\u3002\n\n\u4ece\u800c\u7b2c\u4e00\u79cd\u60c5\u51b5\u7684\u7b54\u6848 $s_1$ \u662f $val_{l-1}-p$\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u5229\u7528\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u89e3\u51b3\u5566\u3002\n\n\u5177\u4f53\u5730\uff0c\u6211\u4eec\u8bb0 $a_k$ \u4e3a\u4e0a\u4e00\u6761\u7ebf\u6bb5\u7684\u53f3\u7aef\u70b9\u4e3a $k$ \u7684\u6700\u5927\u7b54\u6848\u3002\n\n\u8003\u8651\u4e00\u6761\u7ebf\u6bb5 $i$\uff0c\u8bb0\u5b83\u7684\u5de6\u53f3\u7aef\u70b9\u4e3a $l,r$\uff0c$dp_i=\\max\\limits_{k=l}^{r} a_k-k+r$\u3002\n\n\u6211\u4eec\u53d1\u73b0 $+r$ \u8fd9\u4e00\u9879\u5bf9\u4e8e\u6bcf\u4e2a $i$ \u662f\u56fa\u5b9a\u7684\uff0c\u975e\u5e38\u5bb9\u6613\u5904\u7406\u3002\n\n\u6211\u4eec\u53d1\u73b0 $-k$ \u8fd9\u4e00\u9879\u548c $k$ \u6709\u5173\uff0c\u4e0d\u597d\u5904\u7406\u3002\u4e8e\u662f\u6211\u4eec\u8bb0 $b_k=a_k-k$\uff0c\u4e8e\u662f $\\max\\limits_{k=l}^{r} a_k-k+r=\\max\\limits_{k=l}^{r} b_k+r$\uff0c\u7136\u540e\u628a $b_k$ \u5b58\u8fdb\u7ebf\u6bb5\u6811\u4e2d\u67e5\u8be2\u5c31\u53ef\u4ee5\u5566\u3002\n\n\u4ece\u800c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684\u7b54\u6848 $s_2$ \u662f $(\\max\\limits_{k=l}^{r} b_k)+r-p$\u3002\n\n\u6240\u4ee5 $dp_i=\\max(s_1,s_2)$\u3002\n\n\u5728\u8bb0\u5f55\u6bcf\u4e00\u4e2a $dp$ \u503c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u987a\u4fbf\u8bb0\u5f55\u8fbe\u5230\u8fd9\u4e2a $dp$ \u503c\u7684\u65b9\u6848\u9700\u8981\u9009\u62e9 $c_i$ \u6761\u7ebf\u6bb5\uff0c\u8fd9\u4e2a\u5f88\u5bb9\u6613\u5728\u53d6 $\\max$ \u7684\u65f6\u5019\u8bb0\u5f55\u4e0b\u6765\u3002\n\n\u5982\u679c\u8fbe\u5230\u6700\u5927\u7684 $dp$ \u503c\u9700\u8981\u7684\u7ebf\u6bb5\u4e2a\u6570 $<k$\uff0c\u6211\u4eec\u5c31\u52a0\u5927\u60e9\u7f5a $p$\uff0c\u5426\u5219\u51cf\u5c0f\u3002\n\n\u7531\u4e8e\u60e9\u7f5a\u662f\u4e2a\u5b9e\u6570\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5408\u9002\u7684 $eps$\uff0c\u5982\u679c\u592a\u5927\uff0c\u5c31\u4f1a\u5f97\u5230\u9519\u8bef\u7684\u7b54\u6848\uff0c\u56e0\u4e3a\u6211\u4eec\u505a\u4e86\u9519\u8bef\u7684\u51b3\u7b56\uff0c\u5982\u679c\u592a\u5c0f\uff0c\u4e8c\u5206\u6b21\u6570\u592a\u591a\uff0c\u5c31\u4f1a\u8d85\u8fc7\u65f6\u95f4\u9650\u5236\u3002\n\n\u6240\u4ee5\u6211\u4eec\u624b\u52a8\u8c03\u6574 $eps$\uff0c\u591a\u4ea4\u51e0\u6b21\u5c31\u8fc7\u5566\u3002\n\n\u5361\u5e38\u5c0f\u6280\u5de7\uff1a\u5148\u5bf9\u6240\u6709\u7684\u533a\u95f4\u7aef\u70b9\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u7136\u540e\u5c31\u4e0d\u7528\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u5566\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O(n\\log n\\log V)}$\uff0c\u5176\u4e2d $\\mathcal{V}$ \u662f\u503c\u57df\uff1b\u7a7a\u95f4\u590d\u6742\u5ea6 $\\mathcal{O(n)}$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<utility>\n#include<algorithm>\n#include<unordered_map>\n#define maxn 205000\n#define eps 0.01\nstruct sgt\n{\n\tstruct node\n\t{\n\t\tstd::pair<double,int> s;\n\t};\n\tnode a[530005];\n\tvoid pushup(int k)\n\t{\n\t\ta[k].s=std::max(a[k*2].s,a[k*2+1].s);\n\t}\n\tvoid update(int k,int x,std::pair<double,int> w,int l,int r)\n\t{\n\t\tif (l==r) return a[k].s=std::max(a[k].s,w),void();\n\t\tint mid=(l+r)/2;\n\t\tif (x<=mid) update(k*2,x,w,l,mid);\n\t\tif (mid<x) update(k*2+1,x,w,mid+1,r);\n\t\tpushup(k); \n\t}\n\tstd::pair<double,int> ask(int k,int x,int y,int l,int r)\n\t{\n\t\tif (a[k].s.second==-1000000000) return std::make_pair(-100000000000000.0,-100000000);\n\t\tif (x<=l&&r<=y) return a[k].s;\n\t\tint mid=(l+r)/2;\n\t\tstd::pair<double,int> s=std::make_pair(-100000000000000.0,-100000000);\n\t\tif (x<=mid) s=std::max(s,ask(k*2,x,y,l,mid));\n\t\tif (mid<y) s=std::max(s,ask(k*2+1,x,y,mid+1,r));\n\t\treturn s;\n\t}\n\tvoid pre()\n\t{\n\t\tclear();\n\t}\n\tvoid clear()\n\t{\n\t\tfor (int i=1;i<=530000;i++) a[i].s=std::make_pair(-1000000000000000.0,-1000000000);\n\t}\n};\nstruct node\n{\n\tint l,r;\n};\nsgt t;\nint n,k,maxl=0,g[200005],cnt,ncnt=0;\nnode f[100005];\nstd::pair<double,int> val[205005],dp[100005];\nstd::unordered_map<int,int> mp;\nstd::pair<double,int> calc(double k)\n{\n\tt.clear();\n\tint now=0;\n\tfor (int i=0;i<=205000;i++) val[i]=std::make_pair(-1000000000000000.0,-1000000000);\n\tval[0]=std::make_pair(0.0,0);\n\tt.update(1,0,std::make_pair(0.0,0),0,maxn);\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\twhile (now<f[i].l-1) ++now,val[now]=std::max(val[now-1],val[now]);\n\t\tstd::pair<double,int> s1=val[f[i].l-1];\n\t\tstd::pair<double,int> s2=t.ask(1,f[i].l,f[i].r,0,maxn);\n\t\ts1.first=s1.first+(g[f[i].r]-g[f[i].l]+1)-k,s2.first=s2.first+g[f[i].r]-k;\n\t\t++s1.second,++s2.second;\n\t\tdp[i]=std::max(s1,s2);\n\t\tval[f[i].r]=std::max(val[f[i].r],dp[i]);\n\t\tt.update(1,f[i].r,std::make_pair(dp[i].first-g[f[i].r],dp[i].second),0,maxn);\n\t}\n\tstd::pair<double,int> ans=std::make_pair(-1000000000000000.0,-1000000000);\n\tfor (int i=1;i<=n;i++) if (dp[i]>ans) ans=dp[i];\n\treturn ans;\n}\ndouble bs(double l,double r)\n{\n\tif (r-l<eps) return l;\n\tdouble mid=l+(r-l)/2.0;\n\tint s=calc(mid).second;\n\tif (s==k) return mid;\n\tif (k<s) return bs(mid,r);\n\treturn bs(l,mid);\n}\nint cmp(node x,node y){return x.l<y.l;}\nint main()\n{\n\tt.pre();\n\tscanf(\"%d%d\",&n,&k);\n\tk=n-k;\n\tint ss[200005];\n\tfor (int i=1;i<=n;i++) scanf(\"%d%d\",&f[i].l,&f[i].r),--f[i].r,ss[++ncnt]=f[i].l,ss[++ncnt]=f[i].r;\n\tfor (int i=1;i<=n;i++) maxl=std::max(maxl,f[i].r-f[i].l+1);\n\tstd::sort(ss+1,ss+ncnt+1);\n\tfor (int i=1;i<=ncnt;i++)\n\t{\n\t\tif (ss[i]==ss[i-1]&&i!=1) continue;\n\t\tmp[ss[i]]=++cnt;\n\t\tg[cnt]=ss[i];\n\t}\n\tfor (int i=1;i<=n;i++) f[i].l=mp[f[i].l],f[i].r=mp[f[i].r];\n\tstd::sort(f+1,f+n+1,cmp);\n\tdouble s=bs(0,maxl);\n\tstd::pair<double,int> sta=calc(s);\n\tprintf(\"%lld\\n\",(long long)(sta.first+s*k+0.5));\n\treturn 0;\n}\n```\n[\u8fd9\u91cc](https://www.luogu.com.cn/record/70463958) \u662f\u8bc4\u6d4b\u8bb0\u5f55\u3002\n\n\u611f\u8c22\u60a8\u7684\u9605\u8bfb\u3002\n",
        "postTime": 1646284337,
        "uid": 36957,
        "name": "RainFestival",
        "ccfLevel": 0,
        "title": "P4182"
    },
    {
        "content": "\u663e\u7136\u53ef\u4ee5\u5148\u628a\u88ab\u8986\u76d6\u6389\u7684\u533a\u95f4\u53bb\u6389\uff0c\u7136\u540e\u6392\u4e2a\u5e8f\uff0c\u5de6\u3001\u53f3\u7aef\u70b9\u5c31\u90fd\u662f\u5355\u8c03\u7684\n\n\u8bbef[i][j]\u8868\u793a\u524di\u4e2a\u533a\u95f4\u4e2d\u5220\u6389j\u4e2a\uff0c\u800c\u4e14\u94a6\u5b9ai\u4e0d\u80fd\u5220\u7684\u6700\u5927\u8986\u76d6\u957f\u5ea6\n\n\uff08\u5982\u679c\u4e0d\u94a6\u5b9a\uff0c\u5c31\u8981\u6709\u4e00\u4e2a\u5220\u6389\u7684\u72b6\u6001\uff0c\u90a3\u6211\u65e0\u6cd5\u786e\u5b9a\u524d\u9762\u7684\u5230\u5e95\u5230\u54ea\u662f\u6ca1\u5220\u7684\uff09\n\n\u90a3\u4e48\u6709f[i][j]=max{f[k][j\u2212(i\u2212k\u22121)]+R[i]\u2212max(L[i],R[k])},k<if[i][j]=max{f[k][j\u2212(i\u2212k\u22121)]+R[i]\u2212max(L[i],R[k])},k<i\n\u7a0d\u5fae\u7406\u89e3\u4e00\u4e0b\uff1ak\u662f\u6211\u4eec\u4e0b\u4e00\u6b21\u94a6\u5b9a\u8981\u9009\u7684\uff0c\u4e2d\u95f4\u7684\u533a\u95f4\u5c31\u90fd\u6254\u6389\uff0c\u7136\u540e\u6709\u4e24\u79cd\u60c5\u51b5\uff1ak\u548ci\u91cd\u5408\u6216\u4e0d\u91cd\u5408\uff0c\u90a3\u65b0\u589e\u52a0\u4e00\u4e2ai\u533a\u95f4\u591a\u8986\u76d6\u7684\u957f\u5ea6\u5c31\u8981\u4ecei\u7684\u5de6\u7aef\u70b9\u548ck\u7684\u53f3\u7aef\u70b9\u6311\u4e00\u4e2a\u8f83\u5927\u7684\u51cf\u4e00\u51cf\n\n\u590d\u6742\u5ea6O(nk2)O(nk2)\uff0c\u663e\u7136\u9700\u8981\u4f18\u5316\n\n\u73b0\u5728\u6211\u4eec\u8003\u8651f[i][j]\u5230\u5e95\u80fd\u4ece\u54ea\u4e9b\u72b6\u6001\u8f6c\u79fb\u8fc7\u6765\n\n\u8bbe\u80fd\u8f6c\u79fb\u5230f[i][j]\u7684\u72b6\u6001\u662ff[k][l]\uff0c\u7136\u540e\u6839\u636e\u4e0a\u9762\u7684\u5f0f\u5b50\uff0c\u6211\u4eec\u53d1\u73b0k-l=i-j-1 \uff0c\u5c31\u662f\u8bf4\u5f53i\u548cj\u56fa\u5b9a\u65f6\uff0cl\u53ea\u548ck\u6709\u5173\n\n\u800c\u4e14\u5728\u8fd9\u4e9b\u72b6\u6001\u4e2d\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u6bd4\u8f83\u5c0f\u7684k\uff0c\u5b83\u662f\u548ci\u533a\u95f4\u4e0d\u76f8\u4ea4\u7684\uff0c\u4e5f\u5c31\u662f\u5b83\u7684\u8d21\u732e\u53ea\u548c\u5b83\u7684f\u6709\u5173\n\n\u90a3\u6211\u4eec\u5c31\u5728\u8fd9\u4e9bk\u4e2d\u5148\u53d6\u4e00\u4e2a\u6700\u5927\u7684f[k][l]\uff0c\u7136\u540e\u52a0\u4e0ai\u533a\u95f4\u7684\u957f\u5ea6\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u9009\u7684\u7b54\u6848\n\n\u5bf9\u4e8e\u5269\u4e0b\u90a3\u4e9bk\uff0c\u5b83\u7684\u8d21\u732e\u5c31\u53d8\u6210\u4e86f[k][l]-R[k]\uff0c\u4e5f\u662f\u548ci\u65e0\u5173\u7684\n\n\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4e00\u4e9b\u5355\u8c03\u961f\u5217\uff0c\u6bcf\u4e2a\u5355\u8c03\u961f\u5217q[i]\u7ef4\u62a4k-l=i\u7684k,l\u7684\u6700\u5927\u8d21\u732e\n\n\u6211\u4eec\u6bcf\u6b21\u6c42f[i][j]\u7684\u65f6\u5019\uff0c\u5148\u628aq[i-j-1]\u4e2d\u961f\u5934\u8868\u793a\u7684\u533a\u95f4\u4e0d\u4e0ei\u76f8\u4ea4\u7684\u8e22\u51fa\u53bb\uff0c\u7136\u540e\u8fd9\u4e2a\u8981\u6c42\u7684\u6700\u5927\u503c\u5c31\u662f\u961f\u5934\uff0c\u7136\u540e\u518d\u628af[i][j]\u52a0\u5230q[i-j]\u91cc\u5c31\u5b8c\u4e8b\u4e86\n\n\u4e3a\u4e86\u65b9\u4fbf\u7edf\u8ba1\u7b54\u6848\uff0c\u6211\u4eec\u589e\u52a0\u4e00\u4e2a\u4ece1e9\u52301e9\u7684\u533a\u95f4\uff0c\u7136\u540e\u94a6\u5b9a\u5b83\u8981\u9009\u5c31\u53ef\u4ee5\u4e86\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n~~~\n#include<bits/stdc++.h>\n#define pa pair<int,int>\n#define ll long long\nusing namespace std;\nconst int maxn=100010,maxk=110;\n\ninline ll rd(){\n    ll x=0;char c=getchar();int neg=1;\n    while(c<'0'||c>'9'){if(c=='-') neg=-1;c=getchar();}\n    while(c>='0'&&c<='9') x=x*10+c-'0',c=getchar();\n    return x*neg;\n}\n\nstruct POS{\n    int l,r;\n}pos[maxn],p[maxn];\nint N,K;\nint f[maxn][maxk];\nint que[maxn][maxk],qh[maxn],qt[maxn],ma[maxn];\n\ninline bool cmp(POS a,POS b){\n    return a.l==b.l?a.r>b.r:a.l<b.l;\n}\n\nint main(){\n    int i,j,k;\n    //freopen(\"testdata.in\",\"r\",stdin);\n    N=rd(),K=rd();\n    for(i=1;i<=N;i++){\n        pos[i].l=rd(),pos[i].r=rd();\n    }sort(pos+1,pos+N+1,cmp);\n    int mm=0;\n    for(i=1,j=0;i<=N;i++){\n        if(mm<pos[i].r) p[++j]=pos[i],mm=pos[i].r;\n    }K-=N-j;N=j;\n    if(K<=0){\n        int ans=0;\n        for(i=1;i<=N;i++){\n            ans+=max(0,p[i].r-max(p[i-1].r,p[i].l));\n        }printf(\"%d\\n\",ans);\n    }else{\n        p[N+1].l=1e9,p[N+1].r=1e9;N++;\n        for(i=1;i<=N;i++){\n            for(j=0;j<=min(i-1,K);j++){\n                int ii=i-j-1;\n                while(qh[ii]<qt[ii]&&p[que[ii][qh[ii]]].r<=p[i].l){\n                    ma[ii]=max(ma[ii],f[que[ii][qh[ii]]][que[ii][qh[ii]]-ii]);qh[ii]++;\n                }int hh=que[ii][qh[ii]];\n                f[i][j]=max(ma[ii]+p[i].r-p[i].l,f[hh][hh-ii]+p[i].r-max(p[hh].r,p[i].l));\n                ii=i-j;int qq=que[ii][qt[ii]];\n                while(qh[ii]<qt[ii]&&f[qq][qq-ii]-p[qq].r<=f[i][j]-p[i].r){\n                    qt[ii]--;qq=que[ii][qt[ii]];\n                }que[ii][++qt[ii]]=i;if(!qh[ii]) qh[ii]++;\n            }\n        }\n        printf(\"%d\\n\",f[N][K]);\n    }\n    return 0;\n}\n~~~",
        "postTime": 1548579048,
        "uid": 115066,
        "name": "yang2018",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4182 \u3010[USACO18JAN]Lifeguards P\u3011"
    },
    {
        "content": "\u5355\u8c03\u961f\u5217\u4f18\u5316dp\n\ndp[i][j]=max(dp[x][y]+w(x,i))\n\nw(x,i)\u8868\u793ai\u63a5\u5728x\u540e\u7684\u8d21\u732e\n\n\u80fd\u8f6c\u79fb\u7684\u6761\u4ef6\u662fx-y=i-j-1\n\n\u8003\u8651w(x,i) \n\n\u82e5\u76f8\u4ea4\u5219\uff0cw(i,x)=len(i),\u7ef4\u62a4\u6240\u6709\u4e0d\u76f8\u4ea4\u7684\u5c31\u53ef\u4ee5.\n\n\u82e5\u4e0d\u76f8\u4ea4,w(i,x)=b[i].r-b[x].r\u3002 \u56e0\u4e3ai\u9012\u589e\uff0c\u6240\u4ee5\u6ee1\u8db3\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u7684\u6761\u4ef6\uff0c\u6bcf\u6b21\u5224\u65ad\u961f\u5c3e\u662f\u5426\u4e0e\u5f53\u524d\u7ebf\u6bb5\u76f8\u4ea4\uff0c\u4e0d\u76f8\u4ea4\u5c31\u5f39\u51fa\n\n\u6ce8\u610f\u8981\u53bb\u91cd\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#define pa pair<int,int>\nusing namespace std;\ninline int read(){int x=0,f=1,ch=getchar(); while(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();} while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();} return x*f;}\ninline void write(int x){if (x<0) putchar('-'),x=-x; if (x>=10) write(x/10); putchar(x%10+'0');}\ninline void writeln(int x){write(x); puts(\"\");}\nconst int N=1e5+5,KK=105;\nstruct line{\n\tint l,r;\n}b[N],a[N];\ndeque<pa> q[N];\nint mxr,ans,mx[N],n,K,tot,dp[N][KK];\ninline bool cmp(line A,line B){\n\treturn A.l==B.l?A.r>B.r:A.l<B.l;\n}\ninline void init(){\n\tn=read(); K=read();\n\tfor (int i=1;i<=n;i++) b[i]=(line){read(),read()};\n\tsort(b+1,b+1+n,cmp); a[++tot]=b[1];\n\tfor (int i=2;i<=n;i++) \n\t\tif (b[i].r>mxr) a[++tot]=b[i],mxr=a[i].r;\n\t\t\telse K--;\n}\ninline void solve(){\n\tK=max(K,0); n=tot;\n\tfor (int i=1;i<=n;i++){\n\t\tfor (int j=0;j<=K;j++){\n\t\t\tif (j>=i) break; \n\t\t\tint delta=i-j-1;\n\t\t\twhile (!q[delta].empty()&&a[q[delta].front().second].r<=a[i].l){\n\t\t\t\tint x=q[delta].front().second; q[delta].pop_front();\n\t\t\t\tmx[delta]=max(mx[delta],dp[x][x-delta]);\n\t\t\t}\n\t\t\tdp[i][j]=mx[delta]+a[i].r-a[i].l;\n\t\t\tif (!q[delta].empty()) dp[i][j]=max(dp[i][j],q[delta].front().first+a[i].r);\n\t\t\tint w=dp[i][j]-a[i].r; delta++;\n\t\t\twhile (!q[delta].empty()&&q[delta].front().first<=w) q[delta].pop_back();\n\t\t\tq[delta].push_back(make_pair(w,i));\n\t\t}\n\t}\n\tans=0;\n\tfor (int i=1;i<=n;i++) if (K-(n-i)>=0) ans=max(ans,dp[i][K-(n-i)]);\n\twriteln(ans);\n}\nint main(){\n\tinit(); solve();\n\treturn 0;\n}\n```",
        "postTime": 1544182953,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4182 \u3010[USACO18JAN]Lifeguards P\u3011"
    }
]