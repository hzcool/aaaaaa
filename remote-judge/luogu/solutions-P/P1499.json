[
    {
        "content": "#\u5177\u4f53\u770b\u6ce8\u91ca\uff01\uff01\uff01\n\n#\u5177\u4f53\u770b\u6ce8\u91ca\uff01\uff01\uff01\n\n#\u5177\u4f53\u770b\u6ce8\u91ca\uff01\uff01\uff01\n\n###**\u6b65\u9aa4\uff1a**\n\n**1. \u770b\u4ee3\u7801\n\n2. \u770b\u4ee3\u7801\n\n3. \u770b\u4ee3\u7801**\n\n```cpp\n//\u4e0d\u52a0\u6ce8\u91ca\u7684\u9898\u89e3\u90fd\u662f\u6d41\u6c13\n#include<iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <ctime>\n#include <cctype>\n#include <climits>\n#include <algorithm>\n#include <map>\n#include <queue>\n#include <vector>\n#include <string>\n#include <cstring>\n#include <sstream>\n#include <fstream>\nusing namespace std;\nconst int INF=66666666;\nstruct node {\n    int start,end;//start\uff1a\u51fa\u53d1\u65f6\u523b\uff0cend\uff1a\u5230\u8fbe\u65f6\u523b\n} car[305][305];//car[i][j]\uff1a\u4ecei\u5173\u53e3\u51fa\u53d1\u7684\u7b2cj\u8f86\u8f66\nint n,m;\nint dp[55][33000]={0};//dp[i][j]\uff1a\u5230\u8fbe\u7b2ci\u4e2a\u5173\u53e3\u8017\u65f6j\u79d2\u9047\u5230\u5de1\u903b\u8f66\u7684\u6700\u5c0f\u6b21\u6570\nint num[305]={0};//num[i]:\u4ece\u7b2ci\u4e2a\u5173\u53e3\u51fa\u53d1\u7684\u5de1\u903b\u8f66\u6570\nint change(int time)//\u4f20\u5165hhmmss\u683c\u5f0f\u7684\u65f6\u95f4\uff0c\u8fd4\u56de\u4ece6\u70b9\u5f00\u59cb\u5230\u8fd9\u4e2a\u65f6\u523b\u7684\u79d2\u6570\n{\n    int h,m,s;\n    h=time/10000;\n    time-=h*10000;\n    h-=6;\n    m=time/100;\n    time-=m*100;\n    s=time;\n    return (h*3600+m*60+s);\n}\nint changeBack(int T)//\u4f20\u51656\u70b9\u5f00\u59cb\u5230\u73b0\u5728\u7684\u79d2\u6570\uff0c\u8fd4\u56dehhmmss\u683c\u5f0f\u7684\u65f6\u95f4\u6570\u5b57\uff08\u4e0d\u542b\u524d\u5bfc0\uff09\n{\n    int h,m,s;\n    h=T/3600;\n    T-=h*3600;\n    h+=6;\n    m=T/60;\n    T-=m*60;\n    s=T;\n    return h*10000+m*100+s;\n}\nint main()\n{\n    freopen(\"patrol.in\",\"r\",stdin);\n    freopen(\"patrol.out\",\"w\",stdout);\n    scanf(\"%d %d\",&n,&m);\n    int n600=n*600;\n    int ni,Ti,ti;\n    memset(dp,50,sizeof(dp));\n    for(int i=0; i<m; i++) {\n        scanf(\"%d %d %d\",&ni,&Ti,&ti);\n        ni--;//\u56e0\u4e3a\u6570\u7ec4\u4ece0\u5f00\u59cb\n        Ti=change(Ti);\n        car[ni][num[ni]].start=Ti;\n        car[ni][num[ni]].end=ti+Ti;\n        num[ni]++;\n    }\n    dp[0][0]=0;\n    n--;//\u56e0\u6570\u7ec4\u4ece0\u5f00\u59cb\n    bool b=false;\n    for(int i=0; i<n; i++) {//\u679a\u4e3e\u5173\u53e3\n        for(int j=i*300,i600=i*600; j<=i600; j++) {//\u679a\u4e3e\u603b\u8017\u65f6\n            for(int k=300; k<=600; k++) {//\u679a\u4e3e\u5f53\u524d\u5173\u53e3\u8017\u65f6\n                int times=0,jk=j+k;\n                for(int p=0; p<num[i]; p++) {\n                    if((car[i][p].start>=j&&car[i][p].end>jk)||(car[i][p].start<=j&&car[i][p].end<jk))\n                        continue;//\u6ca1\u6709\u8d85\u8f66\n                    else\n                        times++;//\u8d85\u8f66\u6216\u540c\u65f6\u5230\u8fbe\n                }\n                dp[i+1][jk]=min(dp[i+1][jk],dp[i][j]+times);//dp\u65b9\u7a0b\n                if (dp[i+1][jk]==0) {//\u4f18\u5316\uff1adp[i][j]=0,\u5219dp[i][k](k>j)\u7686\u4e3a0.\n                    for (int p=jk+1,i602=i600+600;p<=i602;p++) {\n                        dp[i+1][p]=0;\n                    }    \n                    b=true;\n                    break;\n                }\n            }\n            if (b) break;\n        }\n        if (b) {\n            b=false;\n            continue;\n        }\n    }\n    int result=INF;\n    int minTime;\n    for(int i=n*300,n601=n600-600; i<=n601; i++) {//\u627e\u6700\u5c11\u7684\n        if(result>dp[n][i]) {\n            result=dp[n][i];\n            minTime=i;\n        }\n    }\n    int printTime=changeBack(minTime);\n    printf(\"%d\\n\",result);\n    if (printTime<100000) printf(\"0\");//\u8865\u524d\u5bfc0\n    printf(\"%d\\n\",printTime);\n    return 0;\n}\n```",
        "postTime": 1471857355,
        "uid": 5846,
        "name": "yyy2015c01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1499 \u3010\u516c\u8def\u5de1\u903b\u3011"
    },
    {
        "content": "\n    #include<bits/stdc++.h>\n    using namespace std;\n    #define all(x) (x).begin(), (x).end()\n    #define for0(a, n) for (int (a) = 0; (a) < (n); (a)++)\n    #define for1(a, n) for (int (a) = 1; (a) <= (n); (a)++)\n    const int INF =0x3f3f3f3f;\n    const int maxn=50;\n     const int Tmin=300;\n     const int Tmax=600;\n     const int maxt=6*3600+300*50;\n    int n,m;\n    int dp[maxn+3][maxt+3];\n    struct Node\n    {\n    int st,et;\n    Node(){}\n    Node(int st,int et):st(st),et(et){}\n    bool operator<(const Node & y)const\n    {\n\n        return st<y.st;\n\n    }\n\n    };\n     vector<Node >G[maxn+10];\n     inline void init()\n    {\n    for1(i,n)\n    {\n        G[i].clear();\n    }\n    }\n    void input()\n    {\n    int x,st,et;\n    string s;\n    for1(i,m)\n    {\n        cin>>x>>s>>et;\n        st=10*(s[0]-'0')+s[1]-'0';\n        st*=3600;\n        st+=  60* (10*(s[2]-'0')+s[3]-'0' ) ;\n        st+= 10*(s[4]-'0')+s[5]-'0';\n        et+=st;//\u6389\u4e86\n        G[x].push_back(Node(st,et));\n    }\n\n    for1(i,n)\n    {\n        sort(all(G[i]));\n    }\n\n    }\n\n    int cal(int st,int et,int x)\n    {\n    int p=lower_bound(all(G[x]),Node(st,0))-G[x].begin();\n    int cnt=0;\n    for(int i=p;i<G[x].size();i++)//G[x][i].st>=st\n    {\n        if(G[x][i].st==st&&G[x][i].et==et||G[x][i].st!=st&&G[x][i].et<=et)\n        {\n              cnt++;\n        }\n\n    }\n    p=upper_bound(all(G[x]),Node(st-1,0))-G[x].begin();\n\n    for(int i=0;i<p;i++)//G[x][i].st<st\n    {\n        if(G[x][i].et >=et )  cnt++;\n    }\n    return cnt;\n\n    }\n       \n       void work()\n    {\n\n    memset(dp,0x3f,(n+1)*sizeof dp[0]);\n    dp[1][6*3600]=0;\n    for1(i,n-1)\n    {\n        int st=6*3600+(i-1)*300;\n        int ed=6*3600+(i-1)*600;\n        for(int t=st;t<=ed;t++)\n        {\n            for(int add=Tmin;add<=Tmax;add++)\n            {\n                 int t2=t+add;\n                 int tmp=cal( t,t2,i  );\n                 dp[i+1][t2]=min(dp[i+1][t2],dp[i][t]+tmp);\n            }\n        }\n    }\n    int ans=INF,best=-1;\n    int st=6*3600+(n-1)*300;\n    int ed=6*3600+(n-1)*600;\n    for(int t=ed;t>=st;t--)\n    {\n        if(ans>=dp[n][t])\n        {\n            ans=dp[n][t];\n            best=t;\n        }\n    }\n    printf(\"%d\\n\",ans);\n    int hh,mm,ss;\n    ss=best%60;\n    best/=60;\n    mm=best%60;\n    best/=60;\n    hh=best;\n\n\n\n    printf(\"%02d%02d%02d\\n\",hh,mm,ss);\n    }\n    int main()\n    {\n    std::ios::sync_with_stdio(false);\n\n    int kase=0;\n    while(cin>>n>>m)\n    {\n        if(kase++)  putchar('\\n');\n\n        init();\n        input();\n        work();\n    }\n     return 0;\n    }\n     /*\n\n    \u7b2c\u4e8c\u8f86\u5de1\u903b\u8f66\n    3 2\n    1 060000 301\n    2 060300 600\n    6*3600+3*60=21600+180=21780\n    \u51fa\u53d1\u5230          22380\n    \u7b2c1\u7ad9\u5230\u8fbe\u65f6\u95f4  21600+300=21900\n    \u7b2c\u4e8c\u7ad9\u5230\u8fbe\u65f6\u95f4\u8303\u56f4   22200  22500\n    \u6837\u4f8b\u8f93\u51fa061301   21600+13*60+1=21600+781=22381\n    */\n\n",
        "postTime": 1527425721,
        "uid": 57629,
        "name": "\u795e\u79d8\u4eba\u54c8\u54c8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1499 \u3010\u516c\u8def\u5de1\u903b\u3011"
    }
]