[
    {
        "content": "\u8003\u8651\u5982\u679c\u7b2c\u4e00\u68f5\u6811\u7684\u6839\u662f $a$\uff0c\u7b2c\u4e8c\u68f5\u6811\u7684\u6839\u662f $b$\u3002\u4e0d\u59a8\u5047\u8bbe $a<b$\uff0c\u53e6\u4e00\u4e2a\u65b9\u5411\u5bf9\u79f0\u3002\n\n\u6b64\u65f6\u6211\u4eec\u4e3a\u4e86\u628a $b$ \u79fb\u52a8\u5230\u6839\uff0c\u6211\u4eec\u663e\u7136\u9700\u8981\u5c06 $a+1\\sim b-1$ \u7684\u6240\u6709\u70b9\u79fb\u52a8\u5230 $a,b$ \u4e4b\u95f4\uff0c\u5f62\u6210\u4e00\u6761 $a-(a+1)-(a+2)-\\cdots-(b-1)-b$ \u7684\u94fe\uff0c\u7136\u540e\u5c06 $b$ \u8f6c\u5230\u6839\u3002\n\n\u6b64\u65f6\u6811\u6839\u7684\u4e24\u4fa7\u662f\u72ec\u7acb\u5b50\u95ee\u9898\uff0c\u9012\u5f52\u505a\u5373\u53ef\u3002\n\n---\n\n\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\u662f\u6700\u4f18\u7684\uff1f\n\n\u8003\u8651\uff1a\n\n1. \u5982\u679c\u8003\u8651\u6811\u7684\u7236\u4eb2\u5e8f\u5217\uff0c\u5219\u9898\u76ee\u4e2d\u7684\u64cd\u4f5c\u4e00\u5b9a\u53ea\u4f1a\u540c\u65f6\u6539\u53d8\u4e2d\u5e8f\u904d\u5386\u4e0a\u76f8\u90bb\u7684\u4e24\u4e2a\u70b9\u7684\u7236\u4eb2\u3002\n1. \u590d\u4f4d\u6839\u5fc5\u987b\u8981\u6c42\u5f62\u6210\u4e00\u6761 $a-(a+1)-(a+2)-\\cdots-(b-1)-b$ \u7684\u94fe\uff0c\u4ece\u800c\u4e00\u5207\u4f1a\u6539\u53d8 $a,b$ \u4ee5\u53ca\u4e2d\u95f4\u7684\u4efb\u4f55\u4e00\u4e2a\u70b9\u7684\uff0c\u4e14\u4e0d\u5c5e\u4e8e\u6784\u5efa\u8fd9\u6761\u94fe\u7684\u8fc7\u7a0b\u7684\u7ed3\u6784\u6539\u53d8\u90fd\u5c06\u88ab\u8986\u76d6\uff0c\u6ca1\u6709\u5fc5\u8981\u3002\n1. \u5176\u4f59\u6539\u53d8\u4e0e\u6784\u5efa\u94fe\u7684\u8fc7\u7a0b\u72ec\u7acb\uff0c\u53ef\u4ee5\u4ea4\u6362\u5230\u6784\u5efa\u94fe\u540e\u9762\u3002\n\n---\n\n\u7136\u540e\u5c31\u662f\u8003\u8651\u5982\u4f55\u6784\u5efa\u8fd9\u6761\u94fe\u3002\n\n\u8fd9\u4e2a\u552f\u4e00\u6027\u5f88\u5f3a\uff1a\u4ece $a$ \u5f00\u59cb\u9012\u5f52\u5f80\u53f3\u8d70\u76f4\u5230\u8d70\u5230\u4e00\u4e2a $\\geq k$ \u7684\u70b9\uff0c\u8bbe\u8d70\u5230 $a-c_1-c_2-\\cdots-c_k$\u3002\u7136\u540e\u5c06 $c_1$ \u7684\u5de6\u5b50\u6811\u4fee\u6539\u6210\u4e00\u6761\u5de6\u94fe\uff0c\u7136\u540e\u5f80\u53f3\u8f6c\u76f4\u5230\u5de6\u5b50\u6811\u6d88\u5931\u3002\u7136\u540e\u5bf9 $c_2,\\cdots,c_k$ \u540c\u6837\u5904\u7406\u3002\n\n---\n\n\u7136\u540e\u518d\u8003\u8651\u5982\u4f55\u628a\u4e00\u4e2a\u5b50\u6811\u4fee\u6539\u6210\u5de6\u94fe/\u53f3\u94fe\u3002\uff08\u53f3\u94fe\u662f\u56e0\u4e3a\u9700\u8981\u5bf9\u79f0\uff09\n\n\u8fd9\u4e2a\u66f4\u76f4\u63a5\uff0c\u628a\u5de6\u5b50\u6811\u4fee\u6539\u6210\u5de6\u94fe\uff0c\u53f3\u5b50\u6811\u4fee\u6539\u6210\u53f3\u94fe\uff0c\u7136\u540e\u4f9d\u7167\u9700\u6c42\u5f80\u5de6/\u5f80\u53f3\u8f6c\u3002\n\n\u8fd9\u4e2a\u4fee\u6539\u6b21\u6570\u5c31\u53ef\u4ee5\u76f4\u63a5 dp \u4e86\u3002\u8bbe $f_{u,0/1}$ \u8868\u793a\u4fee\u6539\u6210\u5de6\u94fe/\u53f3\u94fe\u7684\u65b9\u6848\u6570\uff0c$s_u$ \u662f $u$ \u7684\u5b50\u6811\u7684\u5927\u5c0f\u3002\u8f6c\u79fb\uff1a\n\n- $f_{u,0}\\leftarrow f_{l,0}+f_{r,1}+s_l$\n- $f_{u,1}\\leftarrow f_{l,0}+f_{r,1}+s_r$\n\n\u5176\u4e2d $l,r$ \u662f $u$ \u7684\u5de6\u53f3\u5b69\u5b50\u3002\n\n---\n\n\u8003\u8651\u7b97\u7b54\u6848\u3002\n\n\u8003\u8651\u6211\u4eec\u590d\u4f4d\u6839\u4e4b\u540e\u5269\u4e0b\u7684\u662f\u5305\u542b\u6839\u7684\u4e00\u6761\u94fe\uff0c\u4e24\u5934\u63a5\u4e0a **\u539f\u672c\u5c31\u5728 $a$ \u4e2d\u5b58\u5728** \u7684\u5b50\u6811\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06 $a$ \u7684\u5f62\u6001\u8bb0\u4f5c\u4e00\u68f5\u5b50\u6811\u4e0a\u9762\u63a5\u4e00\u6761\u5de6\u94fe/\u53f3\u94fe\uff0c\u4e14\u8fd9\u4e2a\u94fe\u4e0a\u7684\u70b9\u662f\u4e00\u4e2a\u8fde\u7eed\u533a\u95f4\u3002\n\n\u7136\u540e\u6ce8\u610f\u5230\u4e0a\u9762\u90a3\u4e2a\u201c\u4ece $a$ \u5f00\u59cb\u9012\u5f52\u5f80\u53f3\u8d70\u76f4\u5230\u8d70\u5230\u4e00\u4e2a $\\geq k$ \u7684\u70b9\u201d\u7684\u8fc7\u7a0b\u4e0d\u4f1a\u591a\u6b21\u641c\u5230\u540c\u4e00\u4e2a\u70b9\uff0c\u4e8e\u662f\u76f4\u63a5\u66b4\u529b\u505a\uff0c\u590d\u6742\u5ea6\u5c31\u662f $O(n)$\uff0c\u5c31\u505a\u5b8c\u4e86\u3002\n\n```cpp\nconst int N = 500005;\nconst long long mod = 1000000007;\n\nint n, als[N], ars[N], bls[N], brs[N], alt[N], blt[N], art[N], brt[N], fa[N], fb[N], rta, rtb;\nlong long dpa[N][2], dpb[N][2];\n\ninline void Read() {\n    n = qread();\n    for (int i = 1;i <= n;i++) {\n        fa[i] = qread();\n        if (fa[i] != -1 && fa[i] < i) ars[fa[i]] = i;\n        else if (fa[i] != -1 && fa[i] > i) als[fa[i]] = i;\n        else rta = i;\n    }\n    for (int i = 1;i <= n;i++) {\n        fb[i] = qread();\n        if (fb[i] != -1 && fb[i] < i) brs[fb[i]] = i;\n        else if (fb[i] != -1 && fb[i] > i) bls[fb[i]] = i;\n        else rtb = i;\n    }\n}\n\ninline void DfsA(int u) {\n    alt[u] = art[u] = u;\n    dpa[u][0] = dpa[u][1] = 0;\n    if (als[u]) {\n        DfsA(als[u]);\n        alt[u] = min(alt[u], alt[als[u]]);\n        dpa[u][0] += dpa[als[u]][0];\n        dpa[u][1] += art[als[u]] - alt[als[u]] + 1 + dpa[als[u]][0];\n    }\n    if (ars[u]) {\n        DfsA(ars[u]);\n        art[u] = max(art[u], art[ars[u]]);\n        dpa[u][0] += art[ars[u]] - alt[ars[u]] + 1 + dpa[ars[u]][1];\n        dpa[u][1] += dpa[ars[u]][1];\n    }\n}\n\ninline void DfsB(int u) {\n    blt[u] = brt[u] = u;\n    dpb[u][0] = dpb[u][1] = 0;\n    if (bls[u]) {\n        DfsB(bls[u]);\n        blt[u] = min(blt[u], blt[bls[u]]);\n        dpb[u][0] += dpb[bls[u]][0];\n        dpb[u][1] += brt[bls[u]] - blt[bls[u]] + 1 + dpb[bls[u]][0];\n    }\n    if (brs[u]) {\n        DfsB(brs[u]);\n        brt[u] = max(brt[u], brt[brs[u]]);\n        dpb[u][0] += brt[brs[u]] - blt[brs[u]] + 1 + dpb[brs[u]][1];\n        dpb[u][1] += dpb[brs[u]][1];\n    }\n    dpb[u][0] %= mod; dpb[u][1] %= mod;\n}\n\ninline long long Solve(int nda, int sgl, int sgr, int flg, int ndb) {\n    if (sgl > sgr) {\n        sgl = sgr = -1;\n        flg = 0;\n    }\n    long long res = -1;\n    if (flg == 0) {\n        if (nda == ndb) {\n            long long ans = 0;\n            if (als[nda]) ans += Solve(als[nda], -1, -1, 0, bls[ndb]);\n            if (ars[nda]) ans += Solve(ars[nda], -1, -1, 0, brs[ndb]);\n            res = ans % mod;\n        } else if (nda < ndb) {\n            int u = nda;\n            long long ans = 0;\n            while (u < ndb) {\n                u = ars[u];\n                if (als[u]) ans += dpa[als[u]][0] + art[als[u]] - alt[als[u]] + 1;\n            }\n            int l = nda, r = u;\n            ans += ndb - nda;\n            if (als[nda]) ans += Solve(als[nda], l, ndb - 1, 2, bls[ndb]);\n            else ans += dpb[bls[ndb]][0];\n            if (ars[u]) ans += Solve(ars[u], ndb + 1, r, 1, brs[ndb]);\n            else ans += dpb[brs[ndb]][1];\n            res = ans % mod;\n        } else if (nda > ndb) {\n            int u = nda;\n            long long ans = 0;\n            while (u > ndb) {\n                u = als[u];\n                if (ars[u]) ans += dpa[ars[u]][1] + art[ars[u]] - alt[ars[u]] + 1;\n            }\n            int l = u, r = nda;\n            ans += nda - ndb;\n            if (als[u]) ans += Solve(als[u], l, ndb - 1, 2, bls[ndb]);\n            else ans += dpb[bls[ndb]][0];\n            if (ars[nda]) ans += Solve(ars[nda], ndb + 1, r, 1, brs[ndb]);\n            else ans += dpb[brs[ndb]][1];\n            res = ans % mod;\n        }\n    } else if (flg == 1) {\n        if (sgl <= ndb && ndb <= sgr) res = (ndb - sgl + dpb[bls[ndb]][0] + Solve(nda, ndb + 1, sgr, 1, brs[ndb])) % mod;\n        else {\n            int u = nda;\n            long long ans = 0;\n            while (u < ndb) {\n                if (als[u]) ans += dpa[als[u]][0] + art[als[u]] - alt[als[u]] + 1;\n                u = ars[u];\n            }\n            if (als[u]) ans += dpa[als[u]][0] + art[als[u]] - alt[als[u]] + 1;\n            u = ars[u];\n            if (u == 0) res = (ans + dpb[ndb][1]) % mod;\n            else res = (ans + Solve(u, sgl, fa[u], 1, ndb)) % mod;\n        }\n    } else {\n        if (sgl <= ndb && ndb <= sgr) res = (sgr - ndb + dpb[brs[ndb]][1] + Solve(nda, sgl, ndb - 1, 2, bls[ndb])) % mod;\n        else {\n            int u = nda;\n            long long ans = 0;\n            while (u > ndb) {\n                if (ars[u]) ans += dpa[ars[u]][1] + art[ars[u]] - alt[ars[u]] + 1;\n                u = als[u];\n            }\n            if (ars[u]) ans += dpa[ars[u]][1] + art[ars[u]] - alt[ars[u]] + 1;\n            u = als[u];\n            if (u == 0) res = (ans + dpb[ndb][0]) % mod;\n            else res = (ans + Solve(u, fa[u], sgr, 2, ndb)) % mod;\n        }\n    }\n    return (res % mod + mod) % mod;\n}\n```\n\n\n\n\n\n\n\n",
        "postTime": 1685093516,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P9103 [PA2020] Bardzo skomplikowany test"
    }
]