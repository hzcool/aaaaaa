[
    {
        "content": "\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n+m)$\u4e14\u4e0d\u9700\u8981$O(1)LCA$\n\n\u601d\u8def\u4e0e\u6211\u53d1\u7684[\u7b80\u5316\u7248\u9898\u76ee\u9898\u89e3](https://www.luogu.com.cn/blog/mikiwang/solution-p5836)\u7c7b\u4f3c\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u8be2\u95ee\u7684top\u5373\u53ef\u3002\u4f46\u7531\u4e8e\u8fd9\u91cc\u6709\u591a\u79cd\u989c\u8272\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u79bb\u7ebf\u8be2\u95ee\uff0c\u5bf9\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6302\u7684\u8be2\u95ee\u5206\u522b\u5904\u7406\u3002\n\n```\n#include<cstdio>\n#include<vector>\nusing std::vector;\ntypedef long long ll;\ntypedef long double ld;\nconst int N=1e5+10;\nvoid file(const char *str){\n    char in[100],out[100];\n    sprintf(in,\"%s.in\",str),sprintf(out,\"%s.out\",str);\n    freopen(in,\"r\",stdin),freopen(out,\"w\",stdout);\n}\n#define fast_io\n#ifdef fast_io\nconst int _IB=1e6;\nchar _ibuf[_IB],*_s,*_t;\n#define getchar()\\\n (_s==_t&&(_t=(_s=_ibuf)+fread(_ibuf,1,_IB,stdin),_s==_t)?EOF:*_s++)\n#endif\nll read(){\n    ll a=0;int op=1;char ch=getchar();\n    while(ch<'0'||'9'<ch){if(ch=='-')op=-1;ch=getchar();}\n    while('0'<=ch&&ch<='9'){a=(a<<3)+(a<<1)+(48^ch);ch=getchar();}\n    return a*op;\n}\nstruct L{\n    int to,next;\n};\nint head[N];\nL l[N<<1];\nint lcount;\nvoid add(int from,int to){\n    l[++lcount].to=to;\n    l[lcount].next=head[from];\n    head[from]=lcount;\n}\n#define REPL(S,I,T) for(int I=head[S],T;T=l[I].to,I;I=l[I].next)\nint n,m;\nint c[N];\nint top[N];\nint q[N];\nint ans[N];\nvector<int>mount[N];\nvoid dfs(int now=1,int f=0){\n    int buf=top[c[now]];\n    for(int i=0;i<(int)mount[now].size();i++){\n#define x mount[now][i]\n        if(~ans[x]){\n            ans[x]=(top[q[x]]!=ans[x]);\n        }else{\n            ans[x]=top[q[x]];\n        }\n#undef x\n    }\n    REPL(now,i,to)if(to!=f){\n        top[c[now]]=to;\n        dfs(to,now);\n    }\n    top[c[now]]=buf;\n}\nvoid input(){\n    n=read();\n    m=read();\n    for(int i=1;i<=n;i++)c[i]=read();\n    int p1,p2;\n    for(int i=1;i<n;i++){\n        p1=read();\n        p2=read();\n        add(p1,p2);\n        add(p2,p1);\n    }\n    for(int i=0;i<m;i++){\n        p1=read();\n        p2=read();\n        q[i]=read();\n        if(c[p1]==q[i]||c[p2]==q[i]){\n            ans[i]=1;\n        }else{\n            ans[i]=-1;\n            mount[p1].push_back(i);\n            mount[p2].push_back(i);\n        }\n    }\n}\nvoid ini(){\n}\nvoid solve(){\n    dfs();\n}\nvoid output(){\n    for(int i=0;i<m;i++)printf(\"%d\",ans[i]);\n}\nvoid test(){\n    input();\n    ini();\n    solve();\n    output();\n}\nvoid all(){\n    file(\"tmp\");\n    test();\n}\nint main(){\n    all();\n    return 0;\n}\n```\n\u5410\u69fd\u4e00\u53e5\uff1a\u4e00\u4e2a\u5199\u4e86$O(nlog^2n)$\u7b97\u6cd5\u7684\u4eba\u4e3a\u4ec0\u4e48\u4f1a\u6709\u81ea\u4fe1\u8bf4\u522b\u4eba\u6570\u636e\u7ed3\u6784\u5b66\u50bb\u4e86\uff1f",
        "postTime": 1579421885,
        "uid": 81705,
        "name": "\u5bc6\u671f\u671b",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5838 \u3010[USACO19DEC]Milk Visits(gold)\u3011"
    },
    {
        "content": "# \u725b\u5976\u4e4b\u65c5\n\n~~\u4f60\u6821\u63d0\u9ad8\u7ec4\u57fa\u7840\u8bad\u7ec3\u8003\u6811\u5256\u662f\u771f\u7684\u72e0\u3002~~\n## \u9898\u610f:\n\u7ed9\u4e00\u68f5\u6811\uff0c\u95ee\u6811\u4e0a\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u4e0a\u662f\u5426\u6709\u67d0\u79cd\u989c\u8272\u7684\u8282\u70b9\u3002\n## solution:\n\u6211\u4eec\u8003\u8651\u6c42\u70b9$u$\u5230\u70b9$v$\u7684\u8def\u5f84\u4e0a\u662f\u5426\u6709\u989c\u8272\u4e3a$c$\u7684\u8def\u5f84\u3002\n\n\u5f88naive\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u904d\u5386\u8fd9\u6761\u8def\u5f84 \u6211\u4eec\u9700\u8981\u6c42\u8fd9\u4e24\u4e2a\u70b9\u7684lca \u7136\u540e\u4ece\u4e24\u4e2a\u70b9\u5206\u522b\u904d\u5386\u5230lca\uff0c\u5e76\u4e14\u68c0\u67e5\u8def\u5f84\u4e0a\u662f\u5426\u6709\u989c\u8272\u4e3a$c$\u7684\u8282\u70b9\n\n\u8fd9\u6837\u5f88\u660e\u663e\uff0c\u590d\u6742\u5ea6\u662f$O(n^2+nlogn)$\u7684\uff0c\u5728\u4f7f\u7528\u6811\u5256\u4e4b\u540e\uff0c\u6211\u4eec\u505a\u5230\u4e86\u5c0f\u5e38\u6570\u6c42lca\uff0c\u4f46\u662f\u8fd9\u6837\u8fdc\u8fdc\u4e0d\u591f\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u8003\u8651\u4f18\u5316\u5bfb\u627e\u67d0\u79cd\u989c\u8272\u7684\u8282\u70b9\u7684\u65b9\u6cd5\uff0c\u6ce8\u610f\u5230\u5728\u91cd\u94fe\u4e0a\u7684dfn\u5e8f\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u4e8b\u5b9e\u4e0a\u6211\u4eec\u662f\u5728\u6bcf\u6761\u91cd\u94fe\u4e0a\u7684$[dfn[top[u]],dfn[u]]$\u533a\u95f4\u5185\u5bfb\u627e\u989c\u8272\u4e3a$c$\u7684\u8282\u70b9\u3002\n\n\u53ef\u4ee5\u5c06\u6240\u6709\u989c\u8272\u4e3a$c$\u7684\u8282\u70b9\u7684dfn\u5e8f\u5b58\u5230\u4e00\u4e2avector\u4e4b\u4e2d\uff0c\u7136\u540e\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u95ee\u4e00\u4e2a\u6570\u5217\u4e2d\uff0c\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u6570\uff0c\u5728$[dfn[top[u]],dfn[u]]$\u5185\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u6c42\u5927\u4e8e\u7b49\u4e8e$dfn[top[u]]$\u7684\u6700\u5c0f\u7684\u6570$x$ \u5224\u65ad$x < dfn[u]$\u662f\u5426\u6210\u7acb\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8fd9\u6837\u5bf9\u4e8e\u6bcf\u4e2a\u94fe\u4e0a\u505a\u5230\u4e86$O(logn)$\u7684\u5224\u65ad\u662f\u5426\u6709\u989c\u8272\u4e3a$c$\u7684\u8282\u70b9\u3002\n\n\u8fd9\u6837\u7684\u603b\u590d\u6742\u5ea6\u662f$O(nlog^2n)$\n\n\u4e8b\u5b9e\u4e0a\u8fd9\u4e2a\u7406\u8bba\u6700\u574f\u590d\u6742\u5ea6\u5f88\u96be\u88ab\u5361\u6ee1\n\n\u6700\u540e\u5e16\u4e00\u4e0b\u4ee3\u7801:\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\n \nint n,m,a[100005],head[100005],pnt[200005],nxt[200005],E = 0;\nint son[100005],siz[100005],fa[100005],top[100005],dfn[100005],rnk[100005],cnt = 0;\nint ans[100005],qwq = 0;\nvector <int> v[100005];\n \nvoid add_edge(int u,int v)\n{\n    pnt[E] = v;\n    nxt[E] = head[u];\n    head[u] = E++;\n}\n \nvoid dfs1(int u,int f)\n{\n    siz[u] = 1;\n    son[u] = -1;\n    for (int i = head[u]; i != -1; i = nxt[i])\n    {\n        int v = pnt[i];\n        if (v == f) continue;\n        fa[v] = u;\n        dfs1(v,u);\n        siz[u] += siz[v];\n        if (son[u] == -1 || siz[son[u]] < siz[v]) son[u] = v;\n    }\n}\n \nvoid dfs2(int u,int tp)\n{\n    top[u] = tp;\n    dfn[u] = ++cnt;\n    rnk[cnt] = u;\n    if (son[u] == -1) return ;\n    dfs2(son[u],tp);\n    for (int i = head[u]; i != -1; i = nxt[i])\n    {\n        int v = pnt[i];\n        if (v == fa[u] || v == son[u]) continue;\n        dfs2(v,v);\n    }\n}\n \nsigned main()\n{\n    memset(head,-1,sizeof(head));\n    scanf(\"%lld%lld\",&n,&m);\n    for (int i = 1; i <= n; i++)\n    {\n        scanf(\"%lld\",&a[i]);\n    }\n    for (int i = 1; i < n; i++)\n    {\n        int u,v;\n        scanf(\"%lld%lld\",&u,&v);\n        add_edge(u,v);\n        add_edge(v,u);\n    }\n    dfs1(1,1);\n    dfs2(1,1);\n    for (int i = 1; i <= cnt; i++)\n    {\n        v[a[rnk[i]]].push_back(i);\n    }\n    while (m--)\n    {\n        int a,b,c;\n        scanf(\"%lld%lld%lld\",&a,&b,&c);\n        int flag = 0;\n        while (top[a] != top[b])\n        {\n            if (dfn[top[a]] < dfn[top[b]]) swap(a,b);\n            vector <int> :: iterator it = lower_bound(v[c].begin(),v[c].end(),dfn[top[a]]);\n            if (it != v[c].end() && *it <= dfn[a])\n            {\n                flag = 1;\n                break;\n            }\n            a = fa[top[a]];\n        }\n        if (!flag)\n        {\n            if (dfn[a] > dfn[b]) swap(a,b);\n            vector <int> :: iterator it = lower_bound(v[c].begin(),v[c].end(),dfn[a]);\n            if (it != v[c].end() && *it <= dfn[b]) flag = 1;\n        }\n        ans[++qwq] = flag;\n    }\n    for (int i = 1; i <= qwq; i++)\n    {\n        printf(\"%lld\",ans[i]);\n    }\n    puts(\"\");\n    return 0;\n}\n```",
        "postTime": 1599134663,
        "uid": 68030,
        "name": "serverkiller",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5838 [USACO19DEC]Milk Visits G"
    },
    {
        "content": "[$\\Large\\texttt{P5838}$](https://www.luogu.com.cn/problem/P5838)\n\n[$\\small\\texttt{In My cnblog}$](https://www.cnblogs.com/RedreamMer/p/13768013.html)\n\n## \u524d\u8a00\n\n\u8fd9\u9053\u9898\u4f3c\u4e4e\u662f\u6211\u9047\u5230\u7684\u7b2c\u4e00\u9053\u7528 $\\texttt{tarjan}$ \u6c42 $\\texttt{LCA}$ **\u601d\u60f3**\u7684\u9898\u76ee\uff0c\u611f\u8c22\u4e00\u697c\u9898\u89e3\u795e\u4ed9\u7684\u70b9\u62e8\n\n\u4e0d\u4f1a$\\texttt{tarjan}$ \u6c42 $\\texttt{LCA}$ \u7684\u53ef\u4ee5\u53c2\u8003[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/RedreamMer/p/13708436.html)~~\uff08\u4e5f\u6ca1\u5565\u5fc5\u8981\uff09~~\n\n\n\n## \u9898\u610f\n\n\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u6bcf\u4e2a\u70b9\u6709\u70b9\u6743\uff0c\u6bcf\u6b21\u8be2\u95ee\u8282\u70b9 $n$ \u5230\u8282\u70b9 $m$ \u7684\u8def\u5f84\u4e0a\u662f\u5426\u6709\u70b9\u6743\u4e3a $p$ \u7684\u70b9\u3002\n\n$n,m \\le 10^5$\n\n\n\n## \u601d\u8def\n\n\u4ee5\u4e0b$[n,m]$\u5747\u8868\u793a\u4e3a $n$ \u5230 $m$ \u7684\u8def\u5f84\n\n\u89c2\u5bdf $n$ \u5230  $m$ \u7684\u8def\u5f84\uff0c\u82e5\u8def\u5f84\u4e0a\u6709\u70b9\u6743\u4e3a $p$ \u7684\u70b9\uff08\u6211\u4eec\u53ea\u8981\u627e\u5230\u4e00\u4e2a\u8fd9\u6837\u7684\u70b9\uff0c\u6240\u4ee5\u5c31\u5047\u8bbe\u8fd9\u4e2a\u70b9\u53ea\u6709\u4e00\u4e2a\uff09\uff0c\u90a3\u4e48\u53ef\u80fd\u5728 $[\\texttt{LCA}(n,m),n]$ \u4e0a\uff0c\u4e5f\u53ef\u80fd\u5728 $[\\texttt{LCA}(n,m),m]$ \u4e0a\u3002\n\n\u5982\u4f55\u8bb0\u5f55\u8fd9\u4e2a\u70b9\uff1f\n\n\u8bb0\u5f55\u6bcf\u4e2a\u8be2\u95ee\u5728 $[\\texttt{LCA}(n,m),n]$ \u4e0a\u6216\u8bb8\u6709\u4e9b\u56f0\u96be\uff0c\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u7ef4\u62a4 $DFS$ \u8bbf\u95ee\u5230 $n$ \u65f6 $[1,n]$ \u4e0a\u5f88\u597d\u7ef4\u62a4\uff0c\u5982\u4f55\u5229\u7528\u8d77\u6765\uff1f\n\n\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff0c\u82e5\u6709\u4e00\u4e2a\u70b9\u6743\u4e3a $p$ \u7684\u70b9\u5728 $[1,n]$ \u4e0a\uff0c\u4e14\u5b83\u662f\u70b9\u6743\u4e3a $p$ \u7684\u5728\u8fd9\u8def\u5f84\u4e0a\u6700\u6df1\u7684\uff0c\u82e5\u5b83\u4e0d\u5728 $[\\texttt{LCA}(n,m),n]$ \u4e0a\uff0c\u5219\u6ca1\u6709\u70b9\u6743\u4e3a $p$ \u7684\u5728 $[\\texttt{LCA}(n,m),n]$ \u4e0a~~(\u597d\u50cf\u53c8\u662f\u5e9f\u8bdd)~~\u3002\n\n\u5e76\u4e14\uff0c\u82e5\u8fd9\u4e2a\u6743\u503c\u4e3a $p$ \u7684\u8282\u70b9\u4e0d\u5728 $[\\texttt{LCA}(n,m),n]$ \u4e0a\uff0c\u4e5f\u4e0d\u5728 $[\\texttt{LCA}(n,m),m]$ \u4e0a\uff0c\u5219 $[1,n]$ \u548c $[1,m]$ \u4e0a\u7684\u6700\u6df1\u6743\u503c\u4e3a $p$ \u7684\u8282\u70b9\u662f**\u76f8\u540c\u7684**\uff0c **\u82e5\u4e0d\u540c\uff0c\u5219\u7b54\u6848\u4e3aTRUE**\n\n**\u56e0\u6b64\uff1a\u904d\u5386\u5230\u8282\u70b9 $n$ \uff0c\u53ea\u9700\u8bb0\u5f55 $[1,n]$ \u4e0a\uff0c\u6bcf\u79cd $C_i$ \u7684\u6700\u6df1\u70b9**\n\n\u53d1\u73b0\u8fd9\u4e24\u6761\u6027\u8d28\uff0c\u5c31\u53ef\u4ee5\u6109\u5feb\u505a\u9898\u4e86\uff0c\u56e0\u4e3a$\\forall C_i\\le10^5$ \uff0c\u5b8c\u5168\u53ef\u4ee5\u7ed9\u5f00\u4e00\u4e2a\u6876\uff08\u4e0d\u7528\u79bb\u6563\u5316\uff09\uff0c\u904d\u5386\u5230\u6bcf\u4e00\u4e2a\u8282\u70b9 $n$ \u65f6\uff0c\u7ef4\u62a4\u597d\u8fd9\u4e2a\u6876\uff0c\u904d\u5386\u5230\u70b9 $n$ \u65f6\uff0c\u5c06\u5173\u4e8e $n$ \u7684\u6240\u6709\u8be2\u95ee\u904d\u5386\u4e00\u904d\uff08\u5148\u79bb\u7ebf\u8be2\u95ee\uff09\uff0c\u82e5\u8be2\u95ee\u7b2c\u4e00\u6b21\u904d\u5386\u5230\uff0c\u6807\u8bb0\u6b21\u8be2\u95ee\uff0c\u5373 $[1,n]$ \u4e0a\u6df1\u5ea6\u6700\u4f4e\u3001\u70b9\u6743\u4e3a $p$ \u7684\u8282\u70b9\uff0c\u904d\u5386\u5230\u70b9 $m$ \u65f6\uff0c\u6bd4\u8f83\u6807\u8bb0\u7684\u70b9\u4e0e\u662f\u5426 $[1,m]$ \u4e0a\u4e2d\u6df1\u5ea6\u6700\u4f4e\u3001\u70b9\u6743\u4e3a $p$ \u7684\u8282\u70b9\u662f\u5426\u76f8\u540c\uff0c**\u4e0d\u540c\u5219\u4ee3\u8868\u5fc5\u5b9a\u6709\u4e00\u6761\u8def\u5f84\u4e0a\u6709\u8981\u627e\u7684\u70b9\u6743 $p$ \u7684\u8282\u70b9**\uff08\u6ce8\u610f\u7279\u5224\u8fd9\u4e2a\u70b9\u4e3a $\\texttt{LCA}(n,m)$ \uff09\u3002\n\n\u4e3a\u4e86\u7279\u5224 $\\texttt{LCA}(n,m)$\uff0c\u53ef\u4ee5\u5728\u6876\u91cc\u9762\u6807\u8bb0\u70b9\u6743\u4e3a $p$ \u7684\u8282\u70b9\u4e3a\u5b83\u5728 $[1,n]$ **\u8fd9\u6761\u94fe\u4e0a**\u513f\u5b50\u3002\n\n\u6ce8\u610f\u7279\u5224\u8be2\u95ee $n$ \u548c $m$ \u76f8\u7b49\u65f6 \u3002\n\n\u6709\u65f6\u5019\u770b\u4f3c\u5f88\u663e\u7136\u7684\u6027\u8d28\uff0c\u5374\u6709\u4ee4\u4eba\u610f\u60f3\u4e0d\u5230\u7684\u601d\u8def\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\texttt{O(N + 2M)}$ \u3002\n\n\u4e0d\u7ba1\u662f\u7801\u91cf\u8fd8\u662f\u6548\u7387\uff0c\u90fd\u8fdc\u8d85\u5927\u90e8\u5206\u9898\u89e3\u3002\n\n\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define PB push_back\nconst int N = 1e5;\ninline char nc()\n{\n        static char buf[1000000], *p1 = buf, *p2 = buf;\n        return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++;\n}\n#define getchar nc\ninline int read()\n{\n        int s = 0;\n        register bool neg = 0;\n        register char c = getchar();\n        for (; c < '0' || c > '9'; c = getchar())\n                neg |= (c == '-');\n        for (; c >= '0' && c <= '9'; s = s * 10 + (c ^ 48), c = getchar())\n                ;\n        s = (neg ? -s : s);\n        return s;\n}\n\nint a, b, s[N + 10], p[N + 10], ans[N + 10], top[N + 10];\nvector<int> st[N + 10], ask[N + 10];\n\ninline void dfs(int n, int fa)\n{\n        int pp = top[s[n]];\n        for (int i = 0; i < ask[n].size(); i++)\n        {\n                int x = ask[n][i];\n                if (ans[x] == -1)\n                        ans[x] = top[p[x]];\n                else\n                        ans[x] = (top[p[x]] != ans[x]);\n        }\n        for (int i = 0; i < st[n].size(); i++)\n        {\n                int v = st[n][i];\n                if (v == fa)\n                        continue;\n                top[s[n]] = v;\n                dfs(v, n);\n        }\n        top[s[n]] = pp;\n}\n\nsigned main()\n{\n        memset(ans, -1, sizeof(ans));\n        a = read();\n        b = read();\n        for (int i = 1; i <= a; i++)\n                s[i] = read();\n        int x, y, z;\n        for (int i = 1; i < a; i++)\n        {\n                x = read();\n                y = read();\n                st[x].PB(y);\n                st[y].PB(x);\n        }\n        for (int i = 1; i <= b; i++)\n        {\n                x = read();\n                y = read();\n                p[i] = read();\n                if (s[x] == p[i] || s[y] == p[i])\n                        ans[i] = 1;\n                ask[x].PB(i);\n                ask[y].PB(i);\n        }\n        dfs(1, 0);\n        for (int i = 1; i <= b; i++)\n                printf(\"%d\", ans[i]);\n        return 0;\n}\n```\n\n",
        "postTime": 1601808865,
        "uid": 184549,
        "name": "RedreamMer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5838 \u3010USACO19DEC\u3011Milk Visits G"
    },
    {
        "content": "**upd\uff1a\u672c\u4ee3\u7801\u6548\u7387\u662f$O(Nlog^3N)$\u3002**\n\n\u770b\u5230\u8fd9\u9898\u7684\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u5c31\u662f\uff1a\n\n**\u6811\u94fe\u5256\u5206+\u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811\uff08set\uff09**\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2aset\uff0c\u8bb0\u5f55\u8be5\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\u6709\u54ea\u51e0\u79cd\u5976\u725b\u3002\n\n\u6548\u7387\u5927\u6982\u662f$O(Nlog^3N)$\uff0c\u5438\u4e2a\u6c27\u5c31\u8fc7\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<set>\n#define N 100005\n\ninline void rd(int &x){\n\tx=0;char c=getchar();\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile(c>='0'&&c<='9')x=x*10+c-'0',c=getchar();\n} \n\nint n,m,a[N];\n\nint hd[N],_hd;\nstruct edge{\n\tint v,nxt;\n}e[N<<1];\ninline void addedge(int u,int v){\n\te[++_hd]=(edge){v,hd[u]};\n\thd[u]=_hd;\n}\n\nint fa[N],dep[N],sz[N],son[N];\ninline void dfs1(int u,int Fa){\n\tfa[u]=Fa;\n\tdep[u]=dep[Fa]+1;\n\tsz[u]=1;\n\tfor(int i=hd[u];i;i=e[i].nxt){\n\t\tint v=e[i].v;\n\t\tif(v==Fa)\n\t\t\tcontinue;\n\t\tdfs1(v,u);\n\t\tsz[u]+=sz[v];\n\t\tif(sz[v]>sz[son[u]])\n\t\t\tson[u]=v;\n\t}\n}\nint id[N],_id,pos[N],top[N];\ninline void dfs2(int u){\n\tid[u]=++_id;\n\tpos[_id]=u;\n\ttop[u]=u==son[fa[u]]?top[fa[u]]:u;\n\tif(son[u])\n\t\tdfs2(son[u]);\n\tfor(int i=hd[u];i;i=e[i].nxt){\n\t\tint v=e[i].v;\n\t\tif(v==fa[u]||v==son[u])\n\t\t\tcontinue;\n\t\tdfs2(v);\n\t}\n}\n\nstd::set<int> s[N<<2];\ninline void build(int p,int L,int R){\n\tfor(int i=L;i<=R;i++)\n\t\ts[p].insert(a[pos[i]]);\n\tif(L==R)\n\t\treturn;\n\tint mid=(L+R)>>1;\n\tbuild(p<<1,L,mid);\n\tbuild(p<<1|1,mid+1,R);\n}\ninline bool sch(int p,int L,int R,int l,int r,int x){\n\tif(L>r||R<l)\n\t\treturn 0;\n\tif(l<=L&&R<=r)\n\t\treturn s[p].count(x);\n\tint mid=(L+R)>>1;\n\treturn sch(p<<1,L,mid,l,r,x)||sch(p<<1|1,mid+1,R,l,r,x);\n}\n\ninline bool lca_sch(int u,int v,int x){\n\twhile(top[u]!=top[v]){\n\t\tif(dep[top[u]]<dep[top[v]])\n\t\t\tstd::swap(u,v);\n\t\tif(sch(1,1,n,id[top[u]],id[u],x))\n\t\t\treturn 1;\n\t\tu=fa[top[u]];\n\t}\n\tif(dep[u]<dep[v])\n\t\tstd::swap(u,v);\n\treturn sch(1,1,n,id[v],id[u],x);\n}\n\nint main(){\n//\tfreopen(\"milkvisits.in\",\"r\",stdin);\n//\tfreopen(\"milkvisits.out\",\"w\",stdout);\n\trd(n),rd(m);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(int i=1;i<n;i++){\n\t\tint u,v;\n\t\trd(u),rd(v);\n\t\taddedge(u,v);\n\t\taddedge(v,u);\n\t}\n\tdfs1(1,0);\n\tdfs2(1);\n\tbuild(1,1,n);\n\twhile(m--){\n\t\tint u,v,x;\n\t\trd(u),rd(v),rd(x);\n\t\tprintf(\"%d\",lca_sch(u,v,x));\n\t}\n\t\n\t#define w 0\n\treturn ~~('0')?(0^w^0):(0*w*0);\n}\n```\n",
        "postTime": 1576838148,
        "uid": 88652,
        "name": "Y25t",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5838 \u3010[USACO19DEC]Milk Visits(gold)\u3011"
    },
    {
        "content": "[**\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c**](https://www.cnblogs.com/MnZnOIerLzy/articles/17114627.html)\r\n\r\n# $\\texttt{Description}$\r\n\r\n\r\n**[\u6d1b\u8c37\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P5838 \"\u6d1b\u8c37\u9898\u76ee\u94fe\u63a5\")**\r\n\r\n> - \u6709\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u7b2c $i$ \u4e2a\u8282\u70b9\u6709\u989c\u8272 $a_i$\uff0c$q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee $u,v$ \u8282\u70b9\u4e4b\u95f4\uff08\u542b\uff09\u662f\u5426\u5b58\u5728\u989c\u8272\u4e3a $w$ \u7684\u8282\u70b9\u3002\r\n>\r\n> - $n,q\\le 10^5$\uff0c$1\\le a_i,w\\le n$\u3002\r\n\r\n# $\\texttt{Solution}$\r\n\r\n\u548c[**\u6d1b\u8c37 P3313**](https://www.luogu.com.cn/problem/P3313 \"\u6d1b\u8c37 P3313\") \u4e00\u6837\uff0c\u5bf9\u4e8e\u8fd9\u7c7b\u7ef4\u62a4\u989c\u8272\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528**\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811**\u6765\u89e3\u51b3\u3002\r\n\r\n\u9996\u5148\u8fdb\u884c**\u6811\u94fe\u5256\u5206**\u628a\u6811\u4e0a\u8def\u5f84\u95ee\u9898\u8f6c\u5316\u6210\u5e8f\u5217\u95ee\u9898\uff0c\u7136\u540e\u5bf9\u6bcf\u79cd\u989c\u8272\u5efa\u7acb\u7ebf\u6bb5\u6811\u3002\u7531\u4e8e\u662f\u5b58\u5728\u6027\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u8003\u8651\u5efa\u6811\u65f6\u5c06\u6bcf\u4e2a\u70b9\u6743\u503c\u8d4b\u6210 $1$\uff0c\u7ef4\u62a4\u533a\u95f4**\u6216\u548c**\u3002\r\n\r\n\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u5728\u989c\u8272 $c$ \u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\u4e0a\u8df3\u94fe\u67e5\u8be2\u5373\u53ef\u3002\r\n\r\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}((n+q)\\log^2n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n\\log n)$\uff0c\u53ef\u4ee5\u63a5\u53d7\u3002\r\n\r\n\r\n# $\\texttt{Code}$\r\n\r\n\u4ee3\u7801\u5b9e\u73b0\u65f6\u4e00\u4e9b\u5c0f\u7ec6\u8282\uff1a\r\n\r\n- \u6211\u4f7f\u7528\u6307\u9488\u5b9e\u73b0\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u6ce8\u610f\u5224\u5de6\u53f3\u513f\u5b50\u662f\u4e0d\u662f `NULL`\u3002\u4ee5\u53ca\u4fee\u6539\u7684\u65f6\u5019\u53c2\u6570\u4f20\u7684\u662f\u5730\u5740\uff0c\u5426\u5219\u4fee\u6539\u7684\u4e0d\u662f\u7ebf\u6bb5\u6811\u672c\u8eab\uff0c\u800c\u662f\u5f62\u53c2\u521b\u9020\u7684\u4e00\u4e2a\u526f\u672c\uff08\u4e2a\u4eba\u7406\u89e3\uff0c\u8f7b\u55b7\uff09\u3002\r\n\r\n- \u67e5\u8be2\u6216\u5408\u5e76\u5de6\u53f3\u513f\u5b50\u7684\u65f6\u5019\u5982\u679c\u9047\u5230\u4e86 $1$ \u5c31\u76f4\u63a5\u8fd4\u56de\uff0c\u56e0\u4e3a\u5df2\u7ecf\u8bf4\u660e\u5b58\u5728\u6027\u4e86\u3002\r\n\r\n[**\u8bc4\u6d4b\u8bb0\u5f55**](https://www.luogu.com.cn/record/102039319)\r\n\r\n\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\n#define N 100005\r\n#define ls x->lson\r\n#define rs x->rson\r\nusing namespace std;\r\nint n,q,a[N],h[N],t[N],d[N],f[N],sz[N],dfn[N];\r\nstruct node{\r\n    bool v;\r\n    node*lson,*rson;\r\n}*rt[N];\r\nvector<int>g[N];\r\nvoid dfs1(int u,int fa){\r\n    sz[u]=1;\r\n    for(int v:g[u]){\r\n        if(v^fa){\r\n            d[v]=d[u]+1;\r\n            dfs1(v,f[v]=u);\r\n            sz[u]+=sz[v];\r\n        }\r\n    }\r\n}\r\nvoid dfs2(int u,int fa){\r\n    for(int v:g[u]){\r\n        if(v^fa){\r\n            if((sz[v]<<1)>sz[u]){\r\n                t[h[u]=v]=t[u];\r\n            }else{\r\n                t[v]=v;\r\n            }\r\n            dfs2(v,u);\r\n        }\r\n    }\r\n}\r\nvoid dfs3(int u,int fa){\r\n    dfn[u]=++dfn[0];\r\n    if(h[u]){\r\n        dfs3(h[u],u);\r\n    }\r\n    for(int v:g[u]){\r\n        if((v^fa)&&(v^h[u])){\r\n            dfs3(v,u);\r\n        }\r\n    }\r\n}\r\nvoid add(node*&x,int l,int r,int k){\r\n    if(x==NULL){\r\n        x=new node;\r\n    }\r\n    if(l^r){\r\n        int m=(l+r)>>1;\r\n        if(k<=m){\r\n            add(ls,l,m,k);\r\n        }else{\r\n            add(rs,m+1,r,k);\r\n        }\r\n        x->v=0;\r\n        if(ls!=NULL){\r\n            x->v|=ls->v;\r\n        }\r\n        if(x->v){\r\n            return;\r\n        }\r\n        if(rs!=NULL){\r\n            x->v|=rs->v;\r\n        }\r\n    }else{\r\n        x->v=1;\r\n    }\r\n}\r\nbool query(node*x,int l,int r,int ql,int qr){\r\n    if(ql<=l&&r<=qr){\r\n        return x->v;\r\n    }\r\n    int m=(l+r)>>1;\r\n    bool v=0;\r\n    if(ql<=m&&ls!=NULL){\r\n        v|=query(ls,l,m,ql,qr);\r\n    }\r\n    if(v){\r\n        return 1;\r\n    }\r\n    if(qr>m&&rs!=NULL){\r\n        v|=query(rs,m+1,r,ql,qr);\r\n    }\r\n    return v;\r\n}\r\nbool chainquery(int x,int y,int c){\r\n    bool v=0;\r\n    while(t[x]^t[y]){\r\n        if(d[t[x]]<d[t[y]]){\r\n            swap(x,y);\r\n        }\r\n        v|=query(rt[c],1,n,dfn[t[x]],dfn[x]);\r\n        if(v){\r\n            return 1;\r\n        }\r\n        x=f[t[x]];\r\n    }\r\n    if(d[x]>d[y]){\r\n        swap(x,y);\r\n    }\r\n    return query(rt[c],1,n,dfn[x],dfn[y]);\r\n}\r\nint main(){\r\n    scanf(\"%d%d\",&n,&q);\r\n    for(int i=1;i<=n;++i){\r\n        scanf(\"%d\",a+i);\r\n    }\r\n    for(int i=1,u,v;i<n;++i){\r\n        scanf(\"%d%d\",&u,&v);\r\n        g[u].push_back(v);\r\n        g[v].push_back(u);\r\n    }\r\n    dfs1(1,0);\r\n    dfs2(t[1]=1,0);\r\n    dfs3(1,0);\r\n    for(int i=1;i<=n;++i){\r\n        add(rt[a[i]],1,n,dfn[i]);\r\n    }\r\n    for(int i=1,u,v,w;i<=q;++i){\r\n        scanf(\"%d%d%d\",&u,&v,&w);\r\n        if(rt[w]==NULL){\r\n            putchar(48);\r\n            continue;\r\n        }\r\n        printf(\"%d\",chainquery(u,v,w));\r\n    }\r\n}\r\n```\r\n",
        "postTime": 1676204289,
        "uid": 539211,
        "name": "\u849f\u84bb\u00b7\u5ed6\u5b50\u9633",
        "ccfLevel": 5,
        "title": "P5838 [USACO19DEC]Milk Visits G"
    },
    {
        "content": "\u8fd9\u2026\u2026\u4ec0\u4e48\u554a\u2026\u2026\u5927\u5bb6ds\u90fd\u5b66\u50bb\u4e86\u5417\uff1f\n\n\u8fd9\u9898\u2026\u2026\u662f\u600e\u4e48\u60f3\u5230\u4e3b\u5e2d\u6811\u7684\u554a\uff1f\n\n------------\n\u8bf4\u4e0b\u6211\u7684\u601d\u8def\u5427\uff1a\n\n\u9996\u5148\u9898\u610f\u5c31\u662f\u5224\u4e00\u6761\u8def\u5f84\u4e0a\u662f\u5426\u6709\u67d0\u4e2a\u70b9\u6743\u7684\u70b9\u3002\n\n\u663e\u7136\u6811\u5256\uff0c\u7136\u540e\u95ee\u9898\u5c31\u8f6c\u5230\u4e86\u5e8f\u5217\u4e0a\u3002\n\n\u53d1\u73b0\u54c1\u79cd\u90fd\u5728 $1$ \u5230 $n$ \u4e4b\u95f4\uff08\u5176\u5b9e\u5982\u679c\u4e0d\u662f\u8fd9\u6837\u7531\u4e8e\u672c\u9898\u4e0d\u5e26\u4fee\u4e5f\u53ef\u4ee5\u79bb\u6563\u5316\uff09\uff0c\u90a3\u6211\u4eec\u5c31\u5f00 $n$ \u4e2a `vector` \u6765\u628a\u6bcf\u4e00\u79cd\u7684\u6240\u6709\u725b\u5b58\u4e0b\u6765\u3002\n\n\u7136\u540e\u770b\u6811\u5256\u5e8f\u4e2d\u4e00\u4e2a\u533a\u95f4\u662f\u5426\u6709\u67d0\u4e00\u79cd\u725b\u5c31\u76f4\u63a5\u4e8c\u5206\u5c31\u884c\u4e86\u3002\n\n\u6700\u574f\u590d\u6742\u5ea6 $O(n\\log^2n)$\uff0c\u5e38\u6570\u5f88\u5c0f\uff0c\u800c\u4e14\u6839\u672c\u8dd1\u4e0d\u6ee1\u3002\n\n\u5e76\u4e14\u8fd9\u4e1c\u897f\u8fd8\u53ef\u4ee5\u5f3a\u5236\u5728\u7ebf\uff0c\u5e26\u4fee\u5c31\u6539\u6210 `set` \u5c31\u884c\u4e86\u3002\n\ncode\uff1a\n```cpp\n#include<algorithm>\n#include<vector>\n#include<cctype>\n#include<cstdio>\nusing namespace std;\ninline int readint(){\n    int x=0;\n    bool f=0;\n    char c=getchar();\n    while(!isdigit(c)&&c!='-') c=getchar();\n    if(c=='-'){\n        f=1;\n        c=getchar();\n    }\n    while(isdigit(c)){\n        x=x*10+c-'0';\n        c=getchar();\n    }\n    return f?-x:x;\n}\nconst int maxn=1e5+5;\nint n,m,t[maxn];\nvector<int> g[maxn];\nint fa[maxn],dep[maxn],size[maxn],hson[maxn];\nvoid dfs1(int u){\n\tdep[u]=dep[fa[u]]+1;\n\tsize[u]=1;\n\thson[u]=0;\n\tfor(int i=0;i<g[u].size();i++){\n\t\tint v=g[u][i];\n\t\tif(v==fa[u]) continue;\n\t\tfa[v]=u;\n\t\tdfs1(v);\n\t\tsize[u]+=size[v];\n\t\tif(size[v]>size[hson[u]]) hson[u]=v;\n\t}\n}\nint top[maxn],pos[maxn];\nvector<int> f;\nvoid dfs2(int u){\n\tpos[u]=f.size();\n\tf.push_back(u);\n\tif(hson[u]){\n\t\ttop[hson[u]]=top[u];\n\t\tdfs2(hson[u]);\n\t}\n\tfor(int i=0;i<g[u].size();i++){\n\t\tint v=g[u][i];\n\t\tif(v==fa[u]||v==hson[u]) continue;\n\t\ttop[v]=v;\n\t\tdfs2(v);\n\t}\n}\nvector<int> v[maxn];\nint main(){\n    #ifdef LOCAL\n    freopen(\"in.txt\",\"r\",stdin);\n    freopen(\"out.txt\",\"w\",stdout);\n    #endif\n    n=readint();\n    m=readint();\n    for(int i=1;i<=n;i++) t[i]=readint();\n    for(int i=1;i<n;i++){\n    \tint x,y;\n    \tx=readint();\n    \ty=readint();\n    \tg[x].push_back(y);\n    \tg[y].push_back(x);\n\t}\n\tfa[1]=0;\n\tdep[0]=0;\n\tsize[0]=0;\n\tdfs1(1);\n\ttop[1]=1;\n\tdfs2(1);\n\tfor(int i=0;i<n;i++) v[t[f[i]]].push_back(i);\n\twhile(m--){\n\t\tint a,b,c;\n\t\ta=readint();\n\t\tb=readint();\n\t\tc=readint();\n\t\tbool ok=0;\n\t\twhile(top[a]!=top[b]){\n\t\t\tif(dep[top[a]]<dep[top[b]]) swap(a,b);\n\t\t\tvector<int>::iterator it=lower_bound(v[c].begin(),v[c].end(),pos[top[a]]);\n\t\t\tif(it!=v[c].end()&&*it<=pos[a]) ok=1;\n\t\t\ta=fa[top[a]];\n\t\t}\n\t\tif(!ok){\n\t\t\tif(dep[a]<dep[b]) swap(a,b);\n\t\t\tvector<int>::iterator it=lower_bound(v[c].begin(),v[c].end(),pos[b]);\n\t\t\tif(it!=v[c].end()&&*it<=pos[a]) ok=1;\n\t\t}\n\t\tprintf(\"%d\",ok);\n\t}\n\tprintf(\"\\n\");\n    return 0;\n}\n```\n\n\n------------\n\u6240\u4ee5\u8bf4\u4ec0\u4e48\u5462\u2026\u2026ds\u4e0d\u8981\u5b66\u7684\u592a\u6b7b\uff0c\u80fd kiss \u5c31 kiss \u5427\uff08\u522b\u60f3\u6b6a\uff0c\u662f keep it simple and stupid\uff09\uff0c\u60f3\u592a\u590d\u6742\u53cd\u800c\u4e0d\u597d\uff0cp5826 \u4e0d\u662f\u5df2\u7ecf\u7ed9\u6211\u4eec\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u5417\uff1f",
        "postTime": 1577522009,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5838 \u3010[USACO19DEC]Milk Visits(gold)\u3011"
    },
    {
        "content": "\u8fd9\u9898\u4e00\u773c\u770b\u51fa\u4e86\u53ef\u4ee5\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4\u66b4\u529b\u5728\u7ebf\u7684\u505a\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log^2n)$\u3002\u65b9\u6cd5\u7c7b\u6bd4[\u5b9d\u77f3](https://www.luogu.com.cn/problem/P7518)\u3002\n\n\u540e\u6765\u5728\u60f3\u51fa\u4e86\u4e00\u4e2a $O(n \\log n)$ \u7684\u505a\u6cd5\uff0c\u4e0d\u9700\u8981\u4efb\u4f55\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u3002\n\n\u8fd9\u9898\u7528\u4e3b\u5e2d\u6811\u7684\u8bdd\uff0c\u4f1a\u53d1\u73b0\u6240\u6709\u67e5\u8be2\u90fd\u662f\u5df2\u77e5\u7684\uff0c\u4e0d\u4f1a\u6709\u4efb\u4f55\u6539\u53d8\uff0c\u4e14\u603b\u67e5\u8be2\u6b21\u6570\u662f\u5728 $O(m)$ \u7ea7\u522b\u7684\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u9700\u8981\u7684\u8be2\u95ee\u90fd\u5148\u5b58\u4e0b\u6765\uff0c\u7136\u540e\u4e00\u904d $dfs$ \u904d\u5386\u89e3\u51b3\u6240\u6709\u8be2\u95ee\uff0c\u74f6\u9888\u5728\u4e8e\u6c42 LCA\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define pb push_back\n#define F(i,a,b) for(int i=(a);i<=(b);++i)\n#define DF(i,a,b) for(int i=(a);i>=(b);--i)\nusing namespace std;\ninline int read(){char ch=getchar(); int w=1,c=0;\n\tfor(;!isdigit(ch);ch=getchar()) if (ch=='-') w=-1;\n\tfor(;isdigit(ch);ch=getchar()) c=(c<<1)+(c<<3)+(ch^48);\n\treturn w*c;\n}\nconst int N=1e5+10,M=1e5+10;\nint n,m,t[N],dep[N],fa[25][N],a[M],b[M],c[M],k[M],pos[3][M],kind[N];\nvector<int>v[N],qry[N],asw[N];\nvoid dfs(int x,int fa){\n\tdep[x]=dep[fa]+1;::fa[0][x]=fa;\n\tF(i,1,20)::fa[i][x]=::fa[i-1][::fa[i-1][x]];\n\tfor(int i:v[x])\n\t\tif(i!=fa)dfs(i,x);\n}\nint lca(int x,int y){\n\tif(dep[x]>dep[y])swap(x,y);\n\tDF(i,20,0)\n\t\tif(dep[fa[i][y]]>=dep[x])y=fa[i][y];\n\tif(x==y)return x;\n\tDF(i,20,0)\n\t\tif(fa[i][x]!=fa[i][y])x=fa[i][x],y=fa[i][y];\n\treturn fa[0][x];\n}\nvoid dfs2(int x,int fa){\n\tkind[t[x]]++;\n\tfor(int i:qry[x])asw[x].pb(kind[i]);\n\tfor(int i:v[x])\n\t\tif(i!=fa)dfs2(i,x);\n\tkind[t[x]]--;\n}\nsigned main(){\n\tn=read();m=read();\n\tF(i,1,n)t[i]=read();\n\tF(i,2,n){\n\t\tint x=read(),y=read();\n\t\tv[x].pb(y);\n\t\tv[y].pb(x);\n\t}\n\tdfs(1,0);\n\tF(i,1,m){\n\t\ta[i]=read(),b[i]=read(),c[i]=read();\n\t\tk[i]=lca(a[i],b[i]);\n\t\tpos[0][i]=qry[a[i]].size();\n\t\tqry[a[i]].pb(c[i]);\n\t\tpos[1][i]=qry[b[i]].size();\n\t\tqry[b[i]].pb(c[i]);\n\t\tpos[2][i]=qry[k[i]].size();\n\t\tqry[k[i]].pb(c[i]);\n\t}\n\tdfs2(1,0);\n\tF(i,1,m)\n\t\tputchar(asw[a[i]][pos[0][i]]+asw[b[i]][pos[1][i]]-asw[k[i]][pos[2][i]]*2+(t[k[i]]==c[i])?'1':'0');\n\treturn 0;\n}\n```\n",
        "postTime": 1621414609,
        "uid": 180242,
        "name": "orzdevinwang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5838 \u3010[USACO19DEC]Milk Visits(gold)\u3011"
    },
    {
        "content": "\n## \u6811\u94fe\u5256\u5206\n\n\u770b\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u597d\u50cf\u5404\u4f4d\u7684\u505a\u6cd5\u6bd4\u8f83\u590d\u6742\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e0b\u6211\u7684\u601d\u8def\uff0c\u5e0c\u671b\u53ef\u4ee5\u5e2e\u5230\u5404\u4f4d\u3002\n\n\u9996\u5148\u770b\u5230\u6ca1\u6709\u4fee\u6539\uff0c**\u8003\u8651\u79bb\u7ebf\u3002**\n\n\u770b\u5230\u662f\u94fe\u4e0a\u7684\u8be2\u95ee\uff0c**\u8003\u8651\u6811\u94fe\u5256\u5206\u3002**\n\n\u56e0\u6b64\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff0c$(u,v)$ \u7684\u82e5\u5e72\u4e2a\u533a\u95f4\u5185\u662f\u542b\u6709\u503c\u4e3a $k$ \u7684\u503c\u3002\n\n\u7136\u540e\u8003\u8651\u6570\u636e\u7ed3\u6784\u90e8\u5206\uff0c\u53ef\u4ee5\u8003\u8651\u4e3b\u5e2d\u6811\uff0c\u4f46\u662f\u8fc7\u4e8e\u590d\u6742\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u89e3\u51b3\u7684\u65b9\u5f0f\uff0c\u5982\u679c\u5728\u7ebf\uff0c\u5219\u9700\u8981\u540c\u65f6\u8003\u8651\u4e00\u4e2a\u7ebf\u6bb5\u6811\u533a\u95f4\u662f\u5426\u5305\u62ec\u5f88\u591a\u4e2a\u989c\u8272\uff0c\u5219\u4f1a\u6709\u5f88\u5927\u7684\u7a7a\u95f4\u5f00\u9500\u3002\n\n**\u533a\u95f4\u67e5\u8be2\uff0c\u5355\u70b9\u4fee\u6539**\n\n\u4f46\u662f\u82e5\u662f\u6839\u636e\u989c\u8272\u6392\u5e8f\u7136\u540e\u5728\u7ebf\u6bb5\u6811\u4e2d\u7ef4\u62a4\u5f53\u524d\u8be2\u95ee\u7684\u503c\u7684\u8bdd\uff0c\u5219\u4e0d\u9700\u8981\u8003\u8651\u6bd4\u5b83\u5c0f\u7684\u503c (\u7531\u4e8e\u5df2\u7ecf\u8be2\u95ee\u8fc7\u4e86)\uff0c\u4e5f\u4e0d\u9700\u8981\u8003\u8651\u6bd4\u4ed6\u5927\u7684\u503c (\u56e0\u4e3a\u8fd8\u6ca1\u6709\u8be2\u95ee)\uff0c\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u8be2\u95ee\u7684\u987a\u5e8f\u5728\u6ee1\u8db3\u5355\u8c03\u6027\u7684\u524d\u63d0\u4e4b\u4e0b\uff0c\u7ebf\u6bb5\u6811\u4e2d\u53ea\u9700\u8981\u7ef4\u62a4\u5f53\u524d\u989c\u8272\u7684\u6570\u503c\u3002\n\n## \u5219\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u505a\u6cd5:\n\n#### $O(n\\log^2 n)$\n\n### \u6811\u94fe\u5256\u5206\u8f6c\u6362\u6210\u533a\u95f4\u67e5\u8be2\n\n### \u628a\u8be2\u95ee\u6839\u636e\u989c\u8272\u5927\u5c0f\u6392\u5e8f\n\n### \u7ef4\u62a4\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u7ebf\u6bb5\u4e2d\u51fa\u73b0\u8fc7\u6700\u5927\u7684\u503c - \u5355\u70b9\u4fee\u6539\n\n\u7ebf\u6bb5\u6811 - \u5355\u70b9\u4fee\u6539\n```\nvoid update(int p,int pos,int cow) {\n    if (t[p].l==t[p].r) {\n        t[p].color = cow;\n        return;\n    }\n    t[p].color = cow;\n    int mid = (t[p].l+t[p].r)>>1;\n    if(pos<=mid) update(p*2,pos,cow);\n    if(pos>mid) update(p*2+1,pos,cow);\n}\n```\n\n\u7ebf\u6bb5\u6811 - \u533a\u95f4\u67e5\u8be2\n```\nbool query(int p,int x,int y,int cow) {\n    if (x<=t[p].l && t[p].r<=y) return (t[p].color == cow);\n    int mid = (t[p].l+t[p].r)>>1;\n    if(x<=mid) {\n        if (query(p*2,x,y,cow)) return true;\n    }\n    if(y>mid) {\n        if (query(p*2+1,x,y,cow)) return true;\n    }\n    return false;\n}\n```\n\n\u6811\u94fe\u5256\u5206\u67e5\u8be2\n```\nbool ask (int u, int v, int cow) {\n    int fu = top[u];\n    int fv = top[v];\n    while (fu!=fv) {\n        if (depth[fu]>depth[fv]) {\n            if (query(1,id[fu],id[u],cow)) return true;\n            u = fa[fu];\n            fu = top[u];\n        }\n        else {\n            if(query(1,id[fv],id[v],cow)) return true;\n            v = fa[fv];\n            fv = top[v];\n        }\n    }\n    if (query(1,min(id[u],id[v]),max(id[u],id[v]),cow)) return true;\n    return false;\n}\n```\n\n\u4e3b\u51fd\u6570\u6838\u5fc3\u4ee3\u7801 \n```\nsort(q+1,q+1+m,cmp);\nfor (int i=1;i<=m;i++) {\n    int col = q[i].color;\n    if (!color[col].size()) continue;\n    if (!vis[col]) {\n        for (int j=0;j<color[col].size();j++) {\n            int npos = color[col][j];\n            update(1,id[npos],col);\n        }\n        vis[col] = 1;\n    }\n    ans[q[i].id] = ask(q[i].x,q[i].y,col);\n}\n```",
        "postTime": 1600398788,
        "uid": 320309,
        "name": "KarL05",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5838 \u3010[USACO19DEC]Milk Visits G\u3011"
    },
    {
        "content": "\u62a2\u7b2c\u4e00\u7bc7\u9898\u89e3\n\n\n\u672c\u9898\u4f5c\u4e3a\u94f6\u7ec4$T3$\u52a0\u5f3a\u7248\uff0c\u786e\u5b9e\u52a0\u5f3a\u4e86\u4e0d\u5c11(\u96fe\n\n\n\u4ed4\u7ec6\u89c2\u5bdf\u95ee\u9898\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u8981\u89e3\u51b3\u7684\u5b9e\u9645\u4e0a\u662f\n\n\n>\u67e5\u8be2\u4e00\u6761\u94fe\u4e0a\u662f\u5426\u6709\u989c\u8272$C$\n\n\n\u66f4\u52a0\u826f\u5fc3\u7684\u662f\u672c\u9898\u4e0d\u5e26\u4fee\u6539\n\n\n\u8fd9\u4e0d\u662f$Count\\ on\\ tree$\u7684\u6539\u7f16\u5417\n\n\n\u76f4\u63a5$Dfs+\\text{\u4e3b\u5e2d\u6811}$\u5373\u53ef\n\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<=b;i++)\nusing namespace std;\nstruct node{\n\tint l,r;\n\tint val;\n}t[200005*20];\nint c[200005],root[200005];\nint n,m,tot=0;\nint build(int l,int r){\n\tint p=++tot;\n\tt[p].val=0;\n\tif(l==r)return p;\n\tint mid=(l+r)>>1;\n\tt[p].l=build(l,mid);\n\tt[p].r=build(mid+1,r);\n\treturn p;\n}\nint insert(int now,int l,int r,int where){\n\tint p=++tot;t[p]=t[now];\n\tif(l==r){\n\t\tt[p].val++;\n\t\treturn p;\n\t}\n\tint mid=(l+r)>>1;\n\tif(mid>=where)t[p].l=insert(t[now].l,l,mid,where);\n\telse t[p].r=insert(t[now].r,mid+1,r,where);\n\treturn p;\n}\nint ask(int p,int q,int x,int y,int l,int r,int where){\n\tif(l==r)return t[p].val+t[q].val-t[x].val-t[y].val;\n\tint mid=(l+r)>>1;\n\tif(mid>=where)return ask(t[p].l,t[q].l,t[x].l,t[y].l,l,mid,where);\n\treturn ask(t[p].r,t[q].r,t[x].r,t[y].r,mid+1,r,where);\n}\n#define N 100005\nint h[N],tt;\nstruct edge{\n\tint to,nxt;\n}e[N<<2];\nvoid add(int x,int y){\n\te[++tt].to=y;e[tt].nxt=h[x];h[x]=tt;\n}\nint f[N][20],mt,d[N];\nvoid dfs(int x,int fa){\n\td[x]=d[fa]+1;f[x][0]=fa;\n\trep(i,1,mt)f[x][i]=f[f[x][i-1]][i-1];\n\troot[x]=insert(root[fa],1,n,c[x]);\n\tfor(int i=h[x];i;i=e[i].nxt){\n\t\tif(e[i].to!=fa)dfs(e[i].to,x);\n\t}\n}\nint lca(int x,int y){\n\tif(d[x]<d[y])swap(x,y);\n\tfor(int i=mt;i>=0;i--)if(d[f[x][i]]>=d[y])x=f[x][i];\n\tif(x==y)return x;\n\tfor(int i=mt;i>=0;i--)if(f[x][i]^f[y][i])x=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\nint ans[N];\nint main()\n{\n\t//freopen(\"testdata(8).in\",\"r\",stdin);\n\t//freopen(\"testdata(8).out\",\"w\",stdout);\n\t//freopen(\"milkvisits.in\",\"r\",stdin);\n\t//freopen(\"milkvisits.out\",\"w\",stdout);\n\tscanf(\"%d%d\",&n,&m);\n\trep(i,1,n)scanf(\"%d\",&c[i]);\n\troot[0]=build(1,n);\n\trep(i,1,n-1){\n\t\tint x,y;scanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);add(y,x);\n\t}\n\tmt=log2(n);\n\tdfs(1,0);\n\trep(i,1,m){\n\t\tint x,y,z;scanf(\"%d%d%d\",&x,&y,&z);\n\t\tint L=lca(x,y);\n\t\tans[i]=(ask(root[x],root[y],root[L],root[f[L][0]],1,n,z)?1:0);\n\t}\n\trep(i,1,m)printf(\"%d\",ans[i]);\n\tputchar('\\n');\n\treturn 0;\n}\n\n```",
        "postTime": 1576765515,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5838 \u3010[USACO19DEC]Milk Visits(gold)\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u53d1\u73b0\u90fd\u662f\uff08\u6211\u4e0d\u4f1a\u7684\uff09\u5e73\u8861\u6811\uff0c\u4e3b\u5e2d\u6811\u548c\u795e\u4ed9\u79bb\u7ebf\u7ebf\u6027\u7b97\u6cd5\u7b49\uff0c\u8fd8\u6ca1\u6709\u5206\u5757\u9898\u89e3\uff0c\u5c31\u4ea4\u4e86\u8fd9\u4e00\u53d1\u3002\n\n\u9898\u76ee\u7684\u610f\u601d\u662f\u7ed9\u51fa\u4e00\u68f5\u6811\u548c\u6811\u4e0a\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743\uff0c\u6bcf\u6b21\u7ed9\u51fa\u6811\u4e0a\u7684\u4e24\u4e2a\u8282\u70b9$a$,$b$\uff0c\u6c42\u4e24\u8282\u70b9\u4e4b\u95f4\u7684\u7b80\u5355\u8def\u5f84\u4e0a\u6709\u6ca1\u6709\u8282\u70b9\u7684\u6743\u503c\u4e3a$c$\u3002\u6211\u7684\u601d\u8def\u662f\u7528\u6811\u5256\u628a\u6811\u4e0a\u64cd\u4f5c\u8f6c\u79fb\u5230\u5e8f\u5217\u4e0a\u6765\uff0c\u518d\u7528\u5206\u5757\u7ef4\u62a4\u3002\n\n\u5148\u8bf4\u5206\u5757\uff0c\u5206\u5757\u662f\u628a\u5e94\u8be5\u5e8f\u5217\u5e73\u5747\u5206\u6210$\\lceil\\frac{n}{\\lfloor\\sqrt{n}\\rfloor}\\rceil$\u4e2a\u957f\u5ea6\u4e3a$\\lfloor\\sqrt{n}\\rfloor$\u7684\u5757\u6765\u7ef4\u62a4\uff0c\u4e0d\u8fc7\u6700\u540e\u4e00\u4e2a\u5757\u4f1a\u77ed\u4e00\u70b9\u3002\u5728\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u8fb9\u89d2\u5757\u76f4\u63a5\u66b4\u529b\uff0c\u4e00\u4e2a\u6574\u5757\u76f4\u63a5\u4e8c\u5206\uff0c\u5355\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u4e3a$O(\\sqrt{n})$\u3002\n\n\u518d\u8bf4\u6811\u94fe\u5256\u5206,\u8fd9\u662f\u4e00\u4e2a\u901a\u8fc7\u628a\u6811\u5206\u6210\u51e0\u6761\u4e92\u4e0d\u76f8\u4ea4\u7684\u94fe\uff0c\u4ece\u800c\u8ba9\u5206\u5757\uff0c\u7ebf\u6bb5\u6811\u8fd9\u6837\u7528\u6765\u7ef4\u62a4\u5e8f\u5217\u7684\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u7528\u5728\u6811\u4e0a\u3002\u8fd9\u91cc\u7684\u6811\u5256\u662f\u8f7b\u91cd\u94fe\u5256\u5206\uff0c\u4f18\u5148\u904d\u5386\u8282\u70b9\u4e2d\u5b50\u6811\u6700\u5927\u7684\u513f\u5b50\uff0c\u7ed9\u6bcf\u4e2a\u8282\u70b9\u6807\u8bb0\u4e00\u4e0b$dfs$\u5e8f\uff0c\u7ef4\u62a4\u65f6\u6839\u636e$dfs$\u5e8f\u5f53\u505a\u5e8f\u5217\u7ef4\u62a4\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4ee3\u7801\u4e0d\u957f\uff0c\u4e0d\u523090\u884c\uff0c2.91$s$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\sqrt{n}\\log^2n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,a[100005],u,v,p[100005],sum[100005],top[100005];\nint son[100005],dep[100005],size[100005],f[100005];\nint begin[100005],end[100005],s[100005],block,cnt;\nvector<int>ve[100005];\nvoid dfs1(int now,int fa,int deep) {//\u9884\u5904\u7406 \n\tdep[now]=deep;\n\tf[now]=fa;\n\tsize[now]=1;\n\tint maxsize=0;\n\tfor(int i=0; i<ve[now].size(); i++) {\n\t\tint y=ve[now][i];\n\t\tif(y==fa)continue;\n\t\tdfs1(y,now,deep+1);\n\t\tif(size[y]>maxsize)maxsize=size[y],son[now]=y;\n\t\tsize[now]+=size[y];\n\t}\n\treturn;\n}\nvoid dfs2(int now,int _top) {\n\ttop[now]=_top;\n\tp[now]=++cnt;\n\tsum[cnt]=a[now];\n\tif(!son[now])return;\n\tdfs2(son[now],_top);//\u5148\u8bbf\u95ee\u91cd\u513f\u5b50 \n\tfor(int i=0; i<ve[now].size(); i++) {\n\t\tint y=ve[now][i];\n\t\tif(y==f[now]||y==son[now])continue;\n\t\tdfs2(y,y);\n\t}\n\treturn;\n}\nvoid build() {\n\tblock=sqrt(n);\n\tint total=0;\n\tfor(int i=1; i<=n; i++)s[i]=sum[i];\n\tfor(int i=1; i<=n; i+=block) {\n\t\ttotal++;\n\t\tbegin[total]=i;\n\t\tend[total]=min(n,i+block-1);\n\t\tsort(s+i,s+min(n,i+block-1)+1);//\u6392\u5e8f\uff0c\u4fbf\u4e8e\u4e8c\u5206 \n\t}\n\treturn;\n}\nbool find1(int l,int r,int k) {\n\tint numl=l/block+(l%block!=0),numr=r/block+(r%block!=0);\n\tif(numl==numr) {\n\t\tfor(int i=l; i<=r; i++)if(sum[i]==k)return true;\n\t\treturn false;\n\t}\n\tfor(int i=l; i<=end[numl]; i++)if(sum[i]==k)return true;\n\tfor(int i=begin[numr]; i<=r; i++)if(sum[i]==k)return true;\n\tfor(int i=numl+1; i<numr; i++) {\n\t\tint z=s[lower_bound(s+begin[i],s+end[i]+1,k)-s];//\u5757\u5185\u4e8c\u5206 \n\t\tif(z==k)return true;\n\t}\n\treturn false;\n}\nbool find2(int x,int y,int k) {\n\twhile(top[y]!=top[x]) {\n\t\tif(dep[top[x]]<dep[top[y]])swap(x,y);\n\t\tif(find1(p[top[x]],p[x],k))return true;\n\t\tx=f[top[x]];\n\t}\n\tif(dep[x]>dep[y])swap(x,y);\n\treturn find1(p[x],p[y],k);\n}\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1; i<=n; i++)scanf(\"%d\",&a[i]);\n\tfor(int i=1; i<n; i++) {\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tve[u].push_back(v);\n\t\tve[v].push_back(u);\n\t}\n\tdfs1(1,0,1);\n\tdfs2(1,1);\n\tbuild();\n\tint x,y,z;\n\twhile(m--) {\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tif(find2(x,y,z))printf(\"1\");\n\t\telse printf(\"0\");\n\t}\n}\n```\n",
        "postTime": 1591450650,
        "uid": 200044,
        "name": "JS_TZ_ZHR",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5838 \u3010[USACO19DEC]Milk Visits G\u3011"
    },
    {
        "content": "#### Part0. \u9898\u5916\u8bdd\n\u9996\u5148\uff0c\u5976\u725b\u793e\u4fdd\n\n\u7136\u540e\u56e0\u4e3a\u53bb\u966a\u5973\u670b\u53cb\u4e86\u6240\u4ee5\u6ca1\u6709\u6253\u8fd9\u573ausaco\uff08\u624b\u52a8\u6ed1\u7a3d\uff09\n\n\u56de\u5230\u5b66\u6821\u53d1\u73b0\u4e00\u5806\u540c\u5b66\u90fd\u5361\u5728\u91d1\u4e86\uff0c\u4e8e\u662f\u6211\u5c31\u95ee\u4e86\u4e0b\u9898\u3002\n\n\u89c9\u5f97\u662f\u4e09\u9053sb\u9898\uff0c\u5168\u90e8\u8ddf\u4ed6\u4eec\u53e3\u80e1\u4e86\u4e00\u904d\uff0c\u4ed6\u4eec\u8bf4\u505a\u4e0d\u51fa\u6765\u8fd9\u9053\u3002\n\n\u4e8e\u662f\u73b0\u5728\u6211\u6709\u65f6\u95f4\u4e86\u5c31\u628a\u53e3\u80e1\u5b9e\u73b0\u4e00\u4e0b~\n\n#### Part1.\u601d\u8def\n\n\u770b\u5230\u6811\u4e0a\u8def\u5f84\uff0c\u8003\u8651\u6811\u94fe\u5256\u5206\uff0c\u5c06\u4e00\u6761\u8def\u5f84\u62c6\u6210$\\log N$\u6761\u5e8f\u5217\u4e0a\u7684\u533a\u95f4\u3002\n\n\u63a5\u7740\uff0c\u8003\u8651\u539f\u95ee\u9898\u5728\u5e8f\u5217\u4e0a\u7684\u8f6c\u5316\u3002\n\n\u4e00\u6bb5\u5e8f\u5217\u4e2d\uff0c\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u6570\uff1f\n\n\u8fd9\u4e2a\u65f6\u5019\u6211\u770b\u5230\u5176\u5b83\u7684\u9898\u89e3\u5c31\u76f4\u63a5\u4e0a\u7ebf\u6bb5\u6811\u52a0set\u4e86\uff0c\u8fd9\u79cd\u5c31\u662f\u6570\u636e\u7ed3\u6784\u5b66\u50bb\u4e86\u7684\u5178\u8303\u3002\u6709\u7684\u65f6\u5019\u5f88\u591a\u7b80\u5355\u7684\u95ee\u9898\uff0c\u7528\u57fa\u7840\u77e5\u8bc6\u5c31\u80fd\u89e3\u51b3\uff0c\u4f46\u6211\u4eec\u53ea\u60f3\u7740\u786c\u4e0a\u6570\u636e\u7ed3\u6784\u3002\n\n\u6ce8\u610f\u5230\u6743\u503c\u8303\u56f4\u662f\u4e0e\u70b9\u7684\u4e2a\u6570\u8303\u56f4\u76f8\u540c\u7684\uff0c\u6211\u4eec\u7ed9\u6bcf\u4e2a\u6743\u503c\u5f00\u4e00\u4e2avector\uff0c\u6bcf\u4e2avector\u4e2d\u5b58\u8fd9\u4e2a\u6743\u503c\u5728\u5e8f\u5217\u4e0a\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n\n\u90a3\u4e48\uff0c\u8be2\u95ee\u4e00\u6bb5\u533a\u95f4$(l,r)$\u4e2d\u662f\u5426\u5b58\u5728$x$\uff0c\u53ea\u7528\u5728x\u7684vector\u4e2d\u628a$l$,$r$\u6254\u8fdb\u53bb\u4e8c\u5206\u5373\u53ef\u3002\u53ea\u8981\u5b58\u5728x\uff0c\u90a3\u4e48\u4e24\u4e2a\u6570\u4e8c\u5206\u7684\u7ed3\u679c\u5e94\u8be5\u4e0d\u76f8\u540c\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\u7684\u597d\u5904\u4e00\u4e2a\u662f\u597d\u5199\uff0c\u7b2c\u4e8c\u4e2a\u662f\u5b83\u4e0d\u4f46\u53ef\u4ee5\u5904\u7406\u662f\u5426\u5b58\u5728\uff0c\u8fd8\u53ef\u4ee5\u5904\u7406\u51fa\u73b0\u6b21\u6570\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(N \\log^2 N)$\uff0c\u6ce8\u610f\u5230\u8fd9\u4e24\u4e2a$\\log$\u5206\u522b\u662f\u6811\u94fe\u5256\u5206\u548c\u4e8c\u5206\u67e5\u627e\u7684$\\log$\uff0c\u5e38\u6570\u5f88\u5c0f\uff0c\u5438\u53e3\u6c27\u751a\u81f3\u80fd\u8279\u4e00\u90e8\u5206\u4e00\u53ealog\u7684\u4e3b\u5e2d\u6811\u3002\n\n#### Part2.Code\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define rep(i , a , b) for(int i = (a) ; i <= (b) ; ++i)\n#define irep(i , a , b) for(int i = (b) ; i >= (a) ; --i)\n#define IO ios::sync_with_stdio(false)\n#define ms(A) memset(A , 0 , sizeof A)\n#define msinf(A) memset(A , 0x3f , sizeof A)\ntypedef long long ll;\ntypedef pair <int , int> pii;\n\nconst int inf = 0x3f3f3f3f;\nconst ll infLL = 0x3f3f3f3f3f3f3f3fLL;\n\nconst int N = 100000 + 5;\n\nint n , m , A[N];\nint tot , ver[N << 1] , nxt[N << 1] , head[N];\nvector <int> p[N];\n\nint f[N] , dep[N] , sz[N] , son[N] , top[N] , num[N] , id[N];\n\ninline void add(int u , int v) {\n\tver[++tot] = v;\n\tnxt[tot] = head[u];\n\thead[u] = tot;\n}\n\nint dfs(int u , int fa) {\n\tsz[u] = 1; f[u] = fa; dep[u] = dep[fa] + 1;\n\tfor(int i = head[u] , v ; i ; i = nxt[i]) {\n\t\tif((v = ver[i]) == fa) continue;\n\t\tsz[u] += dfs(v , u);\n\t\tif(sz[son[u]] < sz[v]) son[u] = v;\n\t}\n\treturn sz[u];\n}\n\nvoid Get(int u , int tp) {\n\ttop[u] = tp;\n\tid[num[u] = ++num[0]] = u;\n\tif(son[u]) Get(son[u] , tp);\n\tfor(int i = head[u] , v ; i ; i = nxt[i]) {\n\t\tif((v = ver[i]) == f[u] || v == son[u]) continue;\n\t\tGet(v , v);\n\t}\n}\n\ninline bool query(int u , int v , int k) {\n\tbool ans = 0;\n\twhile(top[u] != top[v]) {\n\t\tif(dep[top[u]] < dep[top[v]]) swap(u , v);\n\t\tif(upper_bound(p[k].begin() , p[k].end() , num[u]) - lower_bound(p[k].begin() , p[k].end() , num[top[u]]))\n\t\t\treturn 1;\n\t\tu = f[top[u]];\n\t}\n\tif(dep[u] < dep[v]) swap(u , v);\n\treturn upper_bound(p[k].begin() , p[k].end() , num[u]) - lower_bound(p[k].begin() , p[k].end() , num[v]);\n}\n\nint main() {\n\tscanf(\"%d %d\" , &n , &m);\n\trep(i , 1 , n) scanf(\"%d\" , A + i);\n\trep(i , 1  , n - 1) {\n\t\tint u , v;\n\t\tscanf(\"%d %d\" , &u , &v);\n\t\tadd(u , v); add(v , u);\n\t}\n\tdfs(1 , 0); Get(1 , 1);\n\trep(i , 1 , n) p[A[id[i]]].push_back(i);\n\trep(i , 1 , m) {\n\t\tint u , v , k;\n\t\tscanf(\"%d %d %d\" , &u , &v , &k);\n\t\tprintf(\"%d\" , query(u , v , k));\n\t}\n\treturn 0;\n} \n```\n",
        "postTime": 1577524798,
        "uid": 55537,
        "name": "Parabola",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5838 \u3010[USACO19DEC]Milk Visits(gold)\u3011"
    },
    {
        "content": "\u849f\u84bb\u8868\u793a\u592a\u83dc\u4e86\u4e0d\u4f1a\u4e3b\u5e2d\u6811\n\n\u53ea\u80fd\u83dc\u83dc\u7684\u7528\u6811\u4e0a\u83ab\u961f \n\n\u8bb2\u8bb2\u6811\u4e0a\u83ab\u961f\u5427 \uff1a\n\n\u4f17\u6240\u5468\u77e5 \uff0c \n\n\u83ab\u961f\u4e00\u822c\u662f\u79bb\u7ebf\u5728\u5e8f\u5217\u4e0a\u7684 \n\n\u89e3\u51b3\u5173\u4e8e\u533a\u95f4\u548c\u989c\u8272\u7684\u95ee\u9898 \n\n\u540e\u4eba\u53c8\u5728\u6b64\u57fa\u7840\u4e0a\u5f04\u51fa\u5e26\u4fee\u7684\u83ab\u961f\n\n\u4f46\u662f\u8ddf\u672c\u9898\u65e0\u5173 \u6240\u4ee5\u4e0d\u8c08\n\n\u5982\u679c\u628a\u5e8f\u5217\u653e\u5728\u6811\u4e0a \u83ab\u961f\u4f3c\u4e4e\u6709\u4e0d\u53ef\u884c\u4e86 \n\n\u5229\u7528\u6811\u5256\u7684dfs\u5e8f\u662f\u65e0\u6cd5\u80dc\u4efb\u7684 \n\n\u8fd9\u4e2a\u65f6\u5019\u5c31\u6709\u4e00\u4e2a\u53eb**\u6b27\u62c9\u5e8f**\u7684\u73a9\u610f \n\n\u6b27\u62c9\u5e8f\u662f\u8fd9\u6837\u7ec4\u6210\u7684 \n\n1 . \u628a\u6839\u8282\u70b9\u52a0\u5165\u5e8f \uff08 \u8bb0\u4e3a$in$\uff09\n\n2 . \u8bbf\u95ee\u5b50\u6811 \n\n3 . \u53c8\u628a\u6839\u8282\u70b9\u52a0\u5165\u5e8f\u4e2d ( \u8bb0\u4e3a $out$ ) \n\n\u90a3\u4e48\u663e\u7136 \u4e00\u9897 \u8282\u70b9\u6570\u4e3an\u7684\u6811 \u6b27\u62c9\u5e8f\u957f\u5ea6\u4e3a 2*n \n\n\u56de\u770b\u9898\u76ee \u9898\u76ee\u7ed9\u51fa\u4e24\u4e2a\u70b9\n\n\u4e24\u4e2a\u8282\u70b9\u5bf9\u5e94\u7740\u6b27\u62c9\u5e8f\u7684\u56db\u4e2a\u7aef\u70b9 \n\n\u5982\u679c\u4e24\u4e2a\u8282\u70b9\u5728\u4e00\u6761\u94fe\u4e0a \u90a3\u4e48 \u533a\u95f4\u7aef\u70b9\u5c31\u662f$in_{x}$\u5230$in_{y}$\n\n\u5982\u679c\u4e24\u4e2a\u8282\u70b9\u4e0d\u5728\u4e00\u6761\u94fe\u4e0a \u90a3\u4e48 \u533a\u95f4\u7aef\u70b9\u5c31\u662f$out_{x}$\u5230$in_{y}$ \n\n\u800c\u4e14\u8fd9\u4e2a\u65f6\u5019 x y \u7684 lca \u4e0d\u5728\u533a\u95f4\u91cc \u4f46\u662f\u6839\u636e\u9898\u76ee\u8981\u6c42\u9700\u8981\u7edf\u8ba1\n\nx y \u7684 lca \u8fd8\u9700\u8981\u7279\u5224\u5904\u7406\n\n\u5728\u8fd9\u6bb5\u6570\u5217\u4e2d \u51fa\u73b02\u6b21\u7684\u6570\u4e0d\u662f\u8def\u5f84\u4e0a\u7684\u8282\u70b9 \n\n\u6211\u4eec\u53ea\u5173\u5fc3\u51fa\u73b01\u6b21\u7684\u8282\u70b9 \n\ncode : \n\n```cpp\n#include <bits/stdc++.h> \n#define MAX 100005 \n#define IL inline \n#define Rg register \nusing namespace std ; \nvector <int> v[MAX] ;   \nint son[MAX] , siz[MAX] , pre[MAX] , dep[MAX] , top[MAX] , Ans[MAX] ; \nint in[MAX] , a[MAX] , out[MAX] , n , m ,  tot , lis[MAX*2] , pos[MAX*2] , num[MAX] ;  \nstruct Node { \n\tint l , r , id , lca , c ; \n} Ask[MAX] ; bool vis[MAX] ;  \nbool cmp ( Rg Node A , Rg Node B ) { \n\tif( pos[A.l] == pos[B.l] ) return  A.r < B.r ;\n\treturn A.l < B.l ; \n}  \nIL void dfs1( int x , int fa ) { \n    siz[x] = 1 ;  dep[x] = dep[fa]+1 ; \tpre[x] = fa ; \n\tfor(Rg int i=0; i<v[x].size(); i++) {\n\t\tint u = v[x][i] ; if( u == fa ) continue ;\n\t\tdfs1( u , x ) ; siz[x] += siz[u] ;\n\t\tif( siz[son[x]] < siz[u] ) son[x] = u ;  \n\t}\n} \nIL void dfs2( int x ) { \n\tif( son[x] )  top[son[x]] = top[x] , dfs2( son[x] ) ; \n\tfor(Rg int i=0; i<v[x].size(); i++) {\n\t\tint u = v[x][i] ; \n\t\tif( u == pre[x] || u == son[x] ) continue ;\n\t\ttop[u] = u ; dfs2( u ) ;    \n\t}  \n} \nIL void dfs( int x ) { \n\tin[x] = ++tot ; lis[tot] = x ; \n\tfor(Rg int i=0; i<v[x].size(); i++) {\n\t\tint u = v[x][i] ; \n\t\tif( u == pre[x] ) continue ;\n\t\tdfs( u ) ; \n\t} out[x] = ++tot ; lis[tot] = x ;  \n} \nIL int Lca ( Rg int x , Rg int y ) { \n\tRg int fx = top[x] , fy = top[y] ;\n\twhile( fx != fy ) {\n\t\tif( dep[fx] < dep[fy] ) swap( x , y ) , swap( fx , fy ) ;\n\t\tx = pre[fx] ; fx = top[x]; \n\t} \n\tif( dep[x] > dep[y] ) swap( x , y ) ;\n\treturn x ; \n}   \nIL void Work( Rg int whe ) {   \n\tif( vis[lis[whe]] == 0 ) num[a[lis[whe]]]++ , vis[lis[whe]] = 1 ;    \n\t else num[a[lis[whe]]] -- , vis[lis[whe]] = 0 ; \n} \nsigned main() {  \n    Rg int x , y , z ; \n\tios::sync_with_stdio(false) ; \n\tcin.tie(0) ; cout.tie(0) ; \n\tcin >> n >> m ; \n\tfor(Rg int i=1; i<=n; i++) \n\t  cin >> a[i] ; \n\tfor(Rg int i=1; i<n; i++) { \n\t\tcin >> x >> y ; \n\t\tv[x].push_back(y) ;  \n\t\tv[y].push_back(x) ; \n\t} \n\tRg int Rot = rand()%n+1 , block = sqrt(2*n) ;  \n\tdfs1( Rot , 0 ) ; dfs2( Rot ) ; dfs( Rot ) ;   \n\tfor(Rg int i=1; i<=2*n; i++) \n\t  pos[i] = (i-1)/block+1 ; \n\tfor(Rg int i=1; i<=m; i++) { \n\t\tcin >> x >> y >> Ask[i].c ;  Ask[i].id = i ;  \n\t\tif( x == y ) { \n\t\t\tAsk[i].l = in[x] , Ask[i].r = in[x] ; \n\t\t\tAsk[i].lca = -1 ;  continue ; \n\t\t}  z = Lca( x , y ) ;  \n\t\tif( in[x] > in[y] ) swap( x , y ) ;   \n\t\tif( z == x ) Ask[i].l = in[x] , Ask[i].r = in[y] , Ask[i].lca = -1 ;  \n\t\t else Ask[i].l = out[x] , Ask[i].r = in[y] , Ask[i].lca = z ; \n\t}  sort( Ask+1 , Ask+1+m , cmp ) ;  \n\tRg int l = 1 , r = 0 ;   \n\tfor(Rg int i=1; i<=m; i++) {  \n\t\twhile( Ask[i].l < l ) Work( --l ) ;   \n\t\twhile( r < Ask[i].r ) Work( ++r ) ;  \n\t\twhile( l < Ask[i].l ) Work( l++ ) ;   \n\t\twhile( Ask[i].r < r ) Work( r-- ) ;     \n\t\tif( Ask[i].lca != -1 )  Work( in[Ask[i].lca] ) ;\n\t\tAns[Ask[i].id] = num[Ask[i].c] ;  \n\t\tif( Ask[i].lca != -1 )  Work( in[Ask[i].lca] ) ;\n\t} \n\tfor(Rg int i=1; i<=m; i++) \n\t if( Ans[i] == 0 ) cout << 0 ; \n\t  else cout << 1 ; cout << endl; \n\treturn 0 ; \n}\n```\n\no2 \u624d\u80fd\u8fc7 \u83ab\u961f\u5dee\u4e0d\u591a\u90fd\u662f\u5438\u6c27\u8dd1\u7684\u98de\u5feb\n\n\n\n\n\n",
        "postTime": 1577002583,
        "uid": 100114,
        "name": "hater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5838 \u3010[USACO19DEC]Milk Visits(gold)\u3011"
    },
    {
        "content": "### \u5199\u5728\u524d\u9762\n\u8fd9\u4efd\u4ee3\u7801\u5e76\u4e0d\u80fd\u591f\u76f4\u63a5AC\uff0c\u4f60\u6539\u6539\u5757\u957f\u5e94\u8be5\u662f\u53ef\u4ee5\u7684\uff0c \u4f46\u662f\u4f60\u6765\u53e3\u6c27\uff0c\u8dd1\u7684\u5c31\u8d3c\u5feb\u3002 \n\n\u53cc\u500d\u7ecf\u9a8c \uff1a[SP11985 GOT - Gao on a tree](https://www.luogu.com.cn/problem/SP11985)\n\n### \u6b63\u6587\n+ \u70b9\u6709\u70b9\u6743 \n+ \u67e5\u8be2\u6811\u4e0a\u4e24\u70b9\u8def\u5f84\u4e0a\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u70b9\u6743\u4e3a c \u7684\u70b9 \u3002\n\n\u56e0\u4e3a\u8fd9\u9053\u9898\u662f\u67e5\u8be2\u6811\u4e0a\u4e24\u70b9\u95f4\u7684\u8def\u5f84\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5f88\u663e\u7136\u80fd\u591f\u60f3\u5230\u6811\u94fe\u5256\u5206\u3002\u7136\u540e\u6211\u4eec\u5bf9 $id$ \u8fd9\u4e2a\u503c\u5efa\u7acb\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u4f46\u662f\u7ebf\u6bb5\u6811\u4e0d\u80fd\u591f\u533a\u95f4\u67e5\u8be2\u67d0\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u6211\u4eec\u5efa\u7acb\u5e73\u8861\u6811\uff0c\u4e5f\u5c31\u662f\u6811\u5957\u6811\uff0c\u90a3\u4e48\u8fd9\u65f6\u5019\u6211\u4eec\u53d1\u73b0\uff0c\u662f\u4e0d\u662f\u8fc7\u4e8e\u9ebb\u70e6\u4e86\uff0c\u53ea\u662f\u4e3a\u4e86\u67e5\u8be2\u4e00\u4e0b\u70b9\u662f\u5426\u5728\u8fd9\u6761\u8def\u5f84\u4e0a\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u5206\u5757\uff0c\u7ed9\u4e0b\u53d8\u91cf\u8bf4\u660e\uff1a\n\n+ $b_i$ \u5256\u5b8c\u4e4b\u540e\u6bcf\u4e00\u4e2a\u70b9\u5bf9\u5e94\u7684\u6743\u503c\uff0c\u8ba1\u7b97\u7684\u8bdd\uff0c\u5c31\u662f $b_{id_i} = a_i$\n\n\u90a3\u4e48\u6d41\u7a0b\u5c31\u4e3a : \n+ \u5148\u8fdb\u884c\u4e00\u4e0b\u6811\u94fe\u5256\u5206\uff0c\u5f97\u5230\u6211\u4eec\u7684 $b_i$ \u8fd9\u4e2a\u503c\uff0c\u7136\u540e\u6211\u4eec\u5efa\u7acb\u5206\u5757\u3002\n\n> \u5148\u8bf4\u660e\u4e00\u4e0b\uff0c\u6211\u7684\u5206\u5757\u5411\u6765\u6bd4\u8f83\u4e11\uff0c\u4f46\u662f\u5f88\u597d\u5199\uff0c\u9700\u8981\u5438\u6c27\u3002\n\n+ \u5206\u5b8c\u5757\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u67e5\u8be2\uff0c\u4e0d\u518d\u9700\u8981\u4ec0\u4e48\u5176\u4ed6\u7684 $nb$ \u64cd\u4f5c\u4e86\u3002 \n\n\n\u8fd9\u91cc\u7ed9\u4e00\u4e2a\u51fd\u6570 $find$ \uff0c\u76f8\u4fe1\u6709\u7684\u5927\u4f6c\u662f\u660e\u767d\u4ed6\u7684\uff0c\u56e0\u4e3a\u6211\u7684\u4e8c\u5206\u5199\u6302\u4e86\uff0c\u6240\u4ee5\u7528\u7684\u662f\u8fd9\u4e2a\n\n```\n/*\nBy : Zmonarch\n*/\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#define int long long\n#define qwq register\nconst int kmaxn = 1e6 + 10 ;\nconst int kmod = 998244353 ;\ninline int read() {\n\tint x = 0 , f = 1 ; char ch = getchar() ;\n\twhile(!isdigit(ch)) {if(ch == '-') f = - 1 ; ch = getchar() ;}\n\twhile( isdigit(ch)) {x = x * 10 + ch - '0' ; ch = getchar() ;}\n\treturn x * f ;\n}\nstd::vector<int> block[kmaxn] ; \nint n , m , tot , cnt , len; \nstruct node{\n\tint nxt , u , v , val ; \n}e[kmaxn << 1]; \nint h[kmaxn << 1] , siz[kmaxn] , id[kmaxn] , f[kmaxn] , top[kmaxn] , a[kmaxn] , b[kmaxn] , pos[kmaxn]; \nint dep[kmaxn] , son[kmaxn] , ans[kmaxn]; \ninline void add(int u , int v) {\n\te[++tot].nxt = h[u] ; \n\te[tot].u = u ; \n\te[tot].v = v ; \n\th[u] = tot ; \n}\ninline void dfs1(int u , int fa) {\n\tf[u] = fa ; siz[u] = 1 ; \n\tdep[u] = dep[fa] + 1 ; \n\tfor(qwq int i = h[u] ; i ; i = e[i].nxt) \n\t{\n\t\tint v = e[i].v ; \n\t\tif(v == fa) continue ; \n\t\tdfs1(v , u) ; \n\t\tsiz[u] += siz[v] ; \n\t\tif(siz[son[u]] < siz[v]) son[u] = v ; \n\t}\n}\ninline void dfs2(int u , int ftop) {\n\ttop[u] = ftop ; id[u] = ++ cnt ; \n\tif(son[u]) dfs2(son[u] , ftop) ; \n\tfor(qwq int i = h[u] ; i ; i = e[i].nxt) \n\t{\n\t\tint v = e[i].v ; \n\t\tif(v == f[u] || v == son[u]) continue ; \n\t\tdfs2(v , v) ; \n\t}\n}\ninline int query(int l , int r , int c) {\n\tint p = pos[l] , q = pos[r] ; \n\tfor(qwq int i = l ; i <= std::min(p * len , r) ; i++) \n\tif(b[i] == c) return 1 ; \n\tif(p != q) \n\t for(qwq int j = (q - 1) * len + 1 ; j <= r ; j++) \n\t  if(b[j] == c) return 1 ;\n\tfor(qwq int i = p + 1 ; i <= q - 1 ; i++) \n\t{\n\t\tstd::vector<int>::iterator x = std::find(block[i].begin() , block[i].end() , c);  \n\t\tif(x == block[i].end()) continue ;  \n\t\tif(x != block[i].end()) return 1 ;\n\t}\n\treturn 0 ; \n}\ninline int Query(int u , int v , int c) {\n\twhile(top[u] ^ top[v]) \n\t{\n\t\tif(dep[top[u]] < dep[top[v]]) std::swap(u , v) ; \n\t\tint fl = query(id[top[u]] , id[u] , c) ; \n\t\tif(fl == 1) return 1 ; \n\t\tu = f[top[u]] ; \n\t}\n\tif(dep[u] > dep[v]) std::swap(u , v) ; \n\treturn query(id[u] , id[v] , c);\n}\nsigned main() {\n\tn = read() , m = read() , len = sqrt(n) ; \n\tfor(qwq int i = 1 ; i <= n ; i++) a[i] = read() ; \n\tfor(qwq int i = 1 ; i <= n - 1 ; i++) \n\t{\n\t\tint u = read() , v = read() ; \n\t\tadd(u , v) ; add(v , u) ; \n\t}\n\tdfs1(1 , 0) ; dfs2(1 , 1) ; \n\tfor(qwq int i = 1 ; i <= n ; i++) b[id[i]] = a[i] ; \n\tfor(qwq int i = 1 ; i <= n ; i++)\n\t{\n\t\tpos[i] = (i - 1) / len + 1 ; \n\t\tblock[pos[i]].push_back(b[i]) ; \n\t}\n\tfor(qwq int i = 1 ; i <= pos[n] ; i++) \n\tstd::sort(block[i].begin() , block[i].end()) ; \n\tfor(qwq int i = 1 ; i <= m ; i++) \n\t{\n\t\tint u = read() , v = read() , c = read() ; \n\t\tans[i] = Query(u , v , c); \n\t}\n\tfor(qwq int i = 1 ; i <= m ; i++) \n\tprintf(\"%lld\" , ans[i]) ; \n\treturn 0 ;\n}\n```",
        "postTime": 1621175263,
        "uid": 174683,
        "name": "\u7ea2\u5c18\u4ed9",
        "ccfLevel": 0,
        "title": "P5838 [USACO19DEC]Milk Visits G \u9898\u89e3"
    },
    {
        "content": "\u8fd8\u662f\u90a3\u53e5\u8bdd\uff0c\u6811\u5256\u7684\u9898\u4e3a\u4ec0\u4e48\u8981\u7528\u6811\u5256\u6765\u505a\u5462\uff1f\n\n\u5728\u6b64\u63d0\u4f9b\u4e00\u79cdDFS\u5e8f\u7684\u89e3\u6cd5.\n\n## \u3010\u524d\u7f6e\u77e5\u8bc6\u3011\n- dfs\u5e8f\n\n## \u3010\u601d\u8def\u3011\n\u79bb\u7ebf\u3002\n\n\u5148\u628a\u6240\u6709\u8be2\u95ee\u6309\u8981\u6c42\u7684\u725b\u5976\u7684\u54c1\u79cd\u6392\u5e8f\uff0c\u7136\u540e\u7528dfs\u5e8f\u548c\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u6811\u4e0a\u67d0\u4e00\u6761\u8def\u5f84\u4e0a\u7684 **\u8be5\u54c1\u79cd\u5976\u725b** \u6570\u91cf\uff0c\u7136\u540e $O(logn)$ \u67e5\u8be2\uff0c\u6700\u540e\u8f93\u51fa\u5373\u53ef\u3002\n\n\u73b0\u5728\u8003\u8651\u600e\u4e48\u7528dfs\u5e8f\u7ef4\u62a4\u3002\n\n\u7531\u4e8e\u662f\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u6c42\u503c\uff0c\u800cdfs\u5e8f\u96be\u4ee5\u5904\u7406\u8def\u5f84\u4e0a\u7684\u95ee\u9898\uff0c\u8003\u8651\u8f6c\u5316\u6210\u5b50\u6811\u95ee\u9898\uff0c\u8fd9\u91cc\u8003\u8651\u4f7f\u7528\u524d\u7f00\u548c\u7684\u601d\u60f3\u3002\n\n\u4ee4\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u6743\u503c\u90fd\u8868\u793a **\u8fd9\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u7b26\u5408\u6761\u4ef6\u7684\u5976\u725b\u6570**\u3002 \n\n\u90a3\u4e48\u5355\u70b9\u4fee\u6539\u65f6\uff0c\u8fd9\u4e2a\u70b9\u4ee5\u53ca\u8fd9\u4e2a\u70b9\u5b50\u6811\u4e2d\u7684\u6240\u6709\u70b9\u90fd\u8981\u53d1\u751f\u6539\u53d8\uff0c\u8f6c\u5316\u6210\u4e86\u5b50\u6811\u95ee\u9898\uff0c\u5904\u7406\u4e00\u6761\u8def\u5f84\u4e0a\u7684\u95ee\u9898\u65f6\uff0c\u501f\u52a9 $LCA$ \u7136\u540e\u6c42 $f[u]-f[LCA] + f[v]-f[LCA]$ \u5373\u53ef\u3002\u53d1\u73b0\u4fee\u6539\u548c\u67e5\u8be2\u90fd\u662f $log$ \u7ea7\u7684\u3002\n\n\u800c\u4e14\u6bcf\u4e00\u53ea\u5976\u725b\u90fd\u53ea\u4f1a\u4fee\u6539\u4e00\u6b21\uff0c\u6bcf\u4e00\u4e2a\u4eba\u90fd\u53ea\u4f1a\u8be2\u95ee\u4e00\u6b21\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e5f\u662f\u5bf9\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u7528dfs\u5e8f\u5b8c\u6210\u4e86\u4e00\u9053\u6811\u5256\u7684\u9898\u76ee\u3002\n\n\u5b9e\u73b0\u7ec6\u8282\u8be6\u89c1\u4ee3\u7801\uff0c\u5927\u4f53\u601d\u8def\u5176\u5b9e\u4e5f\u5c31\u8fd9\u4e9b\u3002\n\n## \u3010\u4ee3\u7801\u3011\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\ntemplate <typename T>\ninline void read(T &x){\n    x = 0;int fu = 1;\n    char c = getchar();\n    while(c > 57 || c < 48){\n        if(c == 45) fu = -1;\n        c = getchar();\n    }\n    while(c <= 57 && c >= 48){\n        x = (x << 3) + (x << 1) + c - 48;\n        c = getchar();\n    }\n    x *= fu;\n}\ntemplate <typename T>\ninline void fprint(T x){\n    if(x < 0) putchar(45), x = -x;\n    if(x > 9) fprint(x / 10);\n    putchar(x % 10 + 48);\n}\ntemplate <typename T>\ninline void fprint(T x, char ch){\n    fprint(x);putchar(ch);\n}\n\nint n, m;\nstruct QUEST{\n    int u, v;\n    int c, id;\n    inline bool operator < (const QUEST &tmp) const{\n        return c < tmp.c;\n    }\n}q[100005];\n\nbitset <100005> app, ret;//app\u5b58\u8fd9\u4e00\u54c1\u79cd\u7684\u8be2\u95ee\u662f\u5426\u51fa\u73b0\u8fc7\uff0cret\u5b58\u7b54\u6848\nvector <int> vec[100005];//\u5b58\u6bcf\u4e00\u54c1\u79cd\u725b\u5976\u6709\u54ea\u4e9b\u5976\u725b\n\nint head[100005], nxt[200005], e[200005], cnt;\ninline void add(int u, int v){\n    nxt[++ cnt] = head[u];\n    head[u] = cnt;\n    e[cnt] = v;\n}\n//\u4ee5\u4e0b\u662fLCA\u4e0eDFS\u5e8f\u9884\u5904\u7406\nint dep[100005], fa[100005][25], dfn[100005], low[100005], tot;\nvoid build(int x, int pre){\n    dfn[x] = ++ tot;\n    for (register int i = head[x];i;i = nxt[i]){\n        if(e[i] == pre) continue;\n        dep[e[i]] = dep[x] + 1;\n        fa[e[i]][0] = x;\n        for (register int j = 1;j <= 20;j ++) fa[e[i]][j] = fa[fa[e[i]][j - 1]][j - 1];\n        build(e[i], x);\n    }\n    low[x] = tot;\n}\n\ninline int LCA(int x, int y){\n    if(dep[x] < dep[y]) swap(x, y);\n    for (register int i = 20;i >= 0;i --){\n        if(dep[fa[x][i]] >= dep[y]) x = fa[x][i];\n        if(dep[x] == dep[y]) break;\n    }\n    if(x == y) return x;\n    for (register int i = 20;i >= 0;i --){\n        if(fa[x][i] ^ fa[y][i]){\n            x = fa[x][i];\n            y = fa[y][i];\n        }\n    }\n    return fa[x][0];\n}\n//\u4ee5\u4e0b\u662f\u7ebf\u6bb5\u6811\n#define LSON rt << 1, l, mid\n#define RSON rt << 1 | 1, mid + 1, r\nLL sig[400005], lazy[400005];\ninline void pushup(int rt){sig[rt] = (sig[rt << 1] + sig[rt << 1 | 1]);}\ninline void update(int rt, int l, int r, LL val){\n    sig[rt] = sig[rt] + 1ll * (r - l + 1) * val;\n    lazy[rt] += val;\n}\ninline void pushdown(int rt, int l, int r){\n    if(lazy[rt]){\n        int mid = (l + r) >> 1;\n        update(LSON, lazy[rt]);\n        update(RSON, lazy[rt]);\n        lazy[rt] = 0;\n    }\n}\nvoid modify(int rt, int l, int r, int x, int y, LL z){\n    if(x <= l && r <= y) return update(rt, l, r, z);\n    pushdown(rt, l, r);\n    int mid = (l + r) >> 1;\n    if(x <= mid) modify(LSON, x, y, z);\n    if(y > mid) modify(RSON, x, y, z);\n    pushup(rt);\n}\n\nLL query(int rt, int l, int r, int x){\n    if(l == r && x == l) return sig[rt];\n    pushdown(rt, l, r);\n    int mid = (l + r) >> 1;\n    if(x <= mid) return query(LSON, x);\n    else return query(RSON, x);\n}\nint col[100005];\nint main(){\n    read(n);read(m);\n    for (register int i = 1;i <= n;i ++){\n        int x;read(x);col[i] = x;\n        vec[x].push_back(i);\n    }\n    for (register int i = 1;i < n;i ++){\n        int u, v;read(u);read(v);\n        add(u, v);add(v, u);\n    }\n    dep[1] = 1;build(1, 0);\n    for (register int i = 1;i <= m;i ++){\n        read(q[i].u);read(q[i].v);read(q[i].c);\n        q[i].id = i;app[q[i].c] = 1;\n    }\n    sort(q + 1, q + m + 1);\n    int it = 1;\n    for (register int i = 1;i <= n;i ++){\n        if(app[i]){\n            for (register int j = 0;j < (int)vec[i].size();j ++){\n                modify(1, 1, n, dfn[vec[i][j]], low[vec[i][j]], 1);\n            }\n            while(q[it].c == i && it <= m){\n                if(col[q[it].u] == i || col[q[it].v] == i){ret[q[it].id] = 1;it ++;continue;}//\u4e0d\u77e5\u9053\u7b97\u4e0d\u7b97\u4f18\u5316\u7684\u4f18\u5316\n                int lca = LCA(q[it].u, q[it].v);\n                if(col[lca] == i) {ret[q[it].id] = 1;it ++;continue;}\n                LL q1 = query(1, 1, n, dfn[lca]);\n                LL q2 = query(1, 1, n, dfn[q[it].u]);\n                LL q3 = query(1, 1, n, dfn[q[it].v]);\n                if(q2 - q1 + q3 - q1) ret[q[it].id] = 1;\n                it ++;\n            }\n            for (register int j = 0;j < (int)vec[i].size();j ++){\n                modify(1, 1, n, dfn[vec[i][j]], low[vec[i][j]], -1);\n            }\n        }\n    }\n    for (register int i = 1;i <= m;i ++) putchar(ret[i] + 48);\n    putchar(10);return 0;\n}\n```",
        "postTime": 1600345301,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5838 \u3010[USACO19DEC]Milk Visits G\u3011"
    },
    {
        "content": "\u601d\u8def\u6765\u81ea@[alpha1022](https://www.luogu.com.cn/user/75840)\n\n~~\u6211MHT\u5c31\u662f\u7206\u96f6\uff0c\u4ece\u8fd9\u91cc\u539f\u5730\u7206\u96f6\uff0c\u4e5f\u4e0d\u4f1a\u5b66\u4e00\u70b9\u6811\u5256~~  \n\n\u597d\u4e86\uff0c\u8fd9\u9898\u6709\u5f88\u591a\u6811\u5256\u7684\u89e3\u6cd5\uff0c\u4f46\u662f~~\u7237\u4e0d\u4f1a~~\u6211\u60f3\u8981\u8ffd\u6c42\u6781\u81f4\u7b80\u6d01\u2014\u2014\u90a3\u4e48\u6211\u5c31\u8bf4\u8bf4\u8fd9\u4f4d\u5927\u4f6c\u7684\u601d\u8def\u3002\n\n\u65e2\u7136\u53ef\u4ee5\u79bb\u7ebf\uff0c\u90a3\u5c31\u8981\u597d\u597d\u5229\u7528\uff0c\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u8be2\u95ee\u53ef\u4ee5\u5206\u6210\u4e09\u90e8\u5206\uff1a$u$\uff0c $v$\u548c$lca(u,v)$\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u628a\u6bcf\u4e00\u4e2a\u8be2\u95ee\u6302\u5728\u6811\u4e0a\uff0c\u5728dfs\u7684\u65f6\u5019\u6c42\u51fa\u4ece\u6839\u8282\u70b9\u5230\u8fd9\u4e09\u4e2a\u70b9\u7684\u989c\u8272\u5206\u522b\u7684\u4e2a\u6570\uff0c\u5e76\u628a\u6bcf\u4e00\u4e2a\u5f53\u524d\u70b9\u4e0a\u7684\u8be2\u95ee\u5904\u7406\u6389\n\n\u5f88\u660e\u663e\u662f$O(n+m)$\u7684\u3002\uff08\u611f\u8c22@wlzhouzhuan\u6307\u51fa\u95ee\u9898\uff0cLCA\u662f$O(n\\log n)$\uff09\u7684\uff0c\u4e0d\u8fc7\u5e0c\u671b\u60a8\u80fd\u53cb\u597d\u4ea4\u6d41\u3002\n\n```cpp\n#include <cstdio>\n#include <vector>\n#define N 100010\n#define gc getchar\n#define fo(i, a, b) for(int i = (a); i <= (b); ++i)\n#define fd(i, a, b) for(int i = (a); i >= (b); --i)\nusing namespace std;\nint n, q, ans[N], a[N], qaq[N], dep[N], f[N][20], sum[N];\nint head[N], len;\nstruct Edge\n{\n\tint v, x;\n}edge[N << 1];\nstruct Opt\n{\n\tint tp, id;\n};\nvector<Opt> p[N];\nvoid add(int u, int v)\n{\n\tedge[++len] = (Edge){v, head[u]};\n\thead[u] = len;\n}\nvoid dfs1(int u, int fat)\n{\n\tdep[u] = dep[fat] + 1;\n\tf[u][0] = fat;\n\tfo(i, 1, 19)\n\t\tf[u][i] = f[f[u][i - 1]][i - 1];\n\tfor(int i = head[u]; i; i = edge[i].x)\n\t{\n\t\tint v = edge[i].v;\n\t\tif(v == fat)\tcontinue ;\n\t\tdfs1(v, u);\n\t}\n}\nvoid dfs2(int u, int fat)\n{\n\t++sum[a[u]];\n\tint sz = p[u].size();\n\tfor(int i = 0; i < sz; ++i)\n\t{\n\t\tOpt t = p[u][i]; int tsc = qaq[t.id];\n\t\tif(t.tp == 1)\tans[t.id] += sum[tsc];\n\t\telse ans[t.id] += (a[u] == tsc) - (sum[tsc] << 1);\n\t}\n\tfor(int i = head[u]; i; i = edge[i].x)\n\t{\n\t\tint v = edge[i].v;\n\t\tif(v == fat)\tcontinue ;\n\t\tdfs2(v, u);\n\t}\n\t--sum[a[u]];\n}\nint lca(int u, int v)\n{\n\tif(dep[u] < dep[v]){int t = u; u = v; v = t;}\n\tfd(i, 19, 0)\n\t\tif(dep[f[u][i]] >= dep[v])\n\t\t\tu = f[u][i];\n\tif(u == v)\treturn u;\n\tfd(i, 19, 0)\n\t\tif(f[u][i] != f[v][i])\n\t\t\tu = f[u][i], v = f[v][i];\n\treturn f[u][0];\n}\nint main()\n{\n//\tfreopen(\"milkvisits.in\", \"r\", stdin);\n//\tfreopen(\"milkvisits.out\", \"w\", stdout);\n\tscanf(\"%d %d\", &n, &q);\n\tfo(i, 1, n)\tscanf(\"%d\", &a[i]);\n\tint u, v;\n\tfo(i, 2, n)\n\t{\n\t\tscanf(\"%d %d\", &u, &v);\n\t\tadd(u, v); add(v, u);\n\t}\n\tdfs1(1, 0);\n\tfo(i, 1, q)\n\t{\n\t\tscanf(\"%d %d %d\", &u, &v, &qaq[i]);\n\t\tint fkw = lca(u, v);\n\t\tp[u].push_back((Opt){1, i});\n\t\tp[v].push_back((Opt){1, i});\n\t\tp[fkw].push_back((Opt){-1, i});\n\t}\n\tdfs2(1, 0);\n\tfo(i, 1, q)\tprintf(\"%d\", ans[i] > 0);\n\treturn 0;\n}\n```",
        "postTime": 1588512995,
        "uid": 112395,
        "name": "Martin_MHT",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5838 \u3010[USACO19DEC]Milk Visits G\u3011"
    },
    {
        "content": "\u5927\u81f4\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u6709\u4e00\u4e2a\u989c\u8272\uff0c\u8be2\u95ee $q$ \u6b21 $u,v$ \u8def\u5f84\u4e0a\u662f\u5426\u6709\u989c\u8272\u4e3a $c$ \u7684\u7ed3\u70b9\u3002\n\n$1\\leq n,q\\leq 10^5$\u3002\n\n\u6211\u7b97\u6cd5\u5b66\u50bb\u4e86\uff0c\u8fd9\u9898\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c Tarjan \u6c42 LCA \u7684\u601d\u60f3\uff0c\u628a\u8be2\u95ee\u6302\u5728 $u,v$ \u4e0a\u518d dfs \u4e00\u904d\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n)$\uff0c\u5728\u7ebf\u3002\n\n\u5176\u4ed6\u9898\u89e3\u5df2\u7ecf\u6709\u8be6\u7ec6\u7684\u4ecb\u7ecd\u4e86\uff0c\u8fd9\u91cc\u518d\u8bb2\u4e24\u79cd\u5176\u5b83\u89e3\u51b3\u65b9\u6cd5\uff0c\u53ef\u80fd\u4f1a\u7565\u5fae\u590d\u6742\uff0c\u4f46\u662f\u53ef\u4ee5 ~~\u953b\u70bc\u4e00\u4e0b\u7801\u529b~~ \u62d3\u5c55\u4e00\u4e0b\u601d\u7ef4\u3002\n\n\u9996\u5148\u662f\u4e3b\u5e2d\u6811\uff0c\u70b9 $u$ \u4e0a\u7684\u5bf9\u5e94\u7684\u6811\u5c31\u662f\u6839\u5230 $u$ \u8def\u5f84\u4e0a\u989c\u8272\u5bf9\u5e94\u7684\u6876\uff0c\u5728 dfs \u7684\u65f6\u5019\u4ece\u7236\u4eb2\u7684\u7248\u672c\u7ee7\u627f\u8fc7\u6765\uff0c\u53ea\u4f1a\u4fee\u6539\u4e00\u4e2a\u70b9\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u4f7f\u7528\u4e3b\u5e2d\u6811\u6765\u7ef4\u62a4\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u5c31\u6c42\u51fa\u4e24\u4e2a\u70b9\u7684 LCA\uff0c\u628a\u8be2\u95ee\u62c6\u6210\u4e24\u6bb5\u6765\u67e5\u8be2\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log n)$\uff0c\u5728\u7ebf\u3002\n\n\u7136\u540e\u662f\u6811\u4e0a\u83ab\u961f\uff0c\u6a21\u62df\u8d5b\u9047\u5230\u8fd9\u9898\u65f6\u6211\u7531\u4e8e\u4e0d\u662f\u5f88\u4f1a\u6b63\u7ecf\u7684\u6811\u4e0a\u83ab\u961f\uff0c\u4f46\u662f\u5927\u6982\u77e5\u9053\u662f\u5728\u6b27\u62c9\u5e8f\u4e0a\u8dd1\u666e\u901a\u83ab\u961f\uff0c\u6b27\u62c9\u5e8f\u5c31\u662f\u5728 dfs \u8bbf\u95ee\u65f6\u52a0\u5165\u5e8f\u5217\uff0cdfs \u9000\u51fa\u65f6\u518d\u52a0\u5165\u4e00\u6b21\u5e8f\u5217\uff0c\u5206\u522b\u628a\u4e24\u6b21\u52a0\u5165\u65f6\u7684\u4e0b\u6807\u8bb0\u4e3a $in_u,out_u$\u3002\u663e\u7136\u5bf9\u4e8e $u$ \u662f $v$ \u7684\u7956\u5148\uff0c\u6709 $[out_u,in_v]$ \u4e2d\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u70b9\u5c31\u662f $u$ \u5230 $v$ \u8def\u5f84\u4e0a\u7684\u70b9\uff0c\u4e8e\u662f yy \u4e86\u4e00\u4e2a\u62c6\u8be2\u95ee\u6765\u505a\u7684\u65b9\u6cd5\uff0c\u4e5f\u5728\u65e0 O2 \u7684\u60c5\u51b5\u4e0b\u6700\u6162\u70b9 0.8s \u901a\u8fc7\u4e86\uff0c\u8017\u65f6\u5927\u6982\u662f\u4e3b\u5e2d\u6811\u505a\u6cd5\u7684\u4e24\u500d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\sqrt n)$\uff0c\u5e38\u6570\u8f83\u5927\uff0c\u79bb\u7ebf\u3002\n\n\u5f53\u7136\u8fd9\u90fd\u4e0d\u662f\u6700\u4f18\u89e3\u6cd5\uff0c\u4f46\u4e0d\u5931\u4e3a\u8d5b\u573a\u4e0a\u65e0\u8111\u8fc7\u9898\u7684\u601d\u8def\uff0c\u795d\u5927\u5bb6\u5728\u5404\u79cd\u6bd4\u8d5b\u4e2d\u90fd\u80fd\u6709\u81ea\u5df1\u7684\u529e\u6cd5\u901a\u8fc7\u4e00\u9053\u9053\u9898\u76ee\u3002",
        "postTime": 1631975395,
        "uid": 173685,
        "name": "\u6478\u9c7c\u9171",
        "ccfLevel": 8,
        "title": "P5838"
    },
    {
        "content": "\n\u9898\u610f\uff1a\n------------\n\u7ed9\u5b9a\u4e00\u68f5\u5e26\u70b9\u6743\u7684\u6811\uff0c\u8be2\u95ee\u6811\u4e0a\u8def\u5f84$(u,v)$\u662f\u5426\u5305\u542b\u70b9\u6743\u4e3a$c$\u7684\u8282\u70b9\u3002\n\n\u601d\u8def\n------------\n\u6ca1\u6709\u4fee\u6539\uff0c**\u8003\u8651\u79bb\u7ebf\u7b97\u6cd5**\u3002\n\n### \u6807\u7a0b\uff1a\n\n\u5f53\u904d\u5386\u5230$u$\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6570\u7ec4\u6216\u8005\u6808\u8bb0\u5f55\u4e0b\u8def\u5f84$(1,u)$\u4e0a\u6743\u503c\u4e3a$c$\u7684\u6700\u6df1\u8282\u70b9,\u8fd9\u91cc\u8bb0\u4e3a$top[c]$\u3002\u5982\u679c$top[c]$\u5728$(u,v)$\u8fd9\u6761\u8def\u5f84\u4e0a\u5219\u6210\u7acb\u3002\u8bbe$L$\u4e3a$LCA(u,v)$\uff0c\u5219\u5f53$top[c]$\u5728\u8def\u5f84$(L,u)$\u4e0a\u65f6\uff0c\u8be5\u8be2\u95ee\u7684\u7b54\u6848\u4e3a$1$\u3002\n\n\u6211\u4eec\u6709\u4e24\u79cd\u65b9\u6cd5\u5224\u65ad\u4e0a\u8ff0\u6761\u4ef6\uff0c\u6ce8\u610f\u5230$top[c]$\u5728\u94fe$(1,u)$\u4e0a\u7684\u5b50\u8282\u70b9$Y$\u4e0d\u662f$v$\u7684\u7956\u5148\uff0c\u7b49\u4ef7\u4e8e$top[c]$\u5728\u8def\u5f84$(L,u)$\u4e0a\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9884\u5904\u7406\u524d\u5e8f\u904d\u5386\u548c\u540e\u5e8f\u904d\u5386\u6765\u5b8c\u6210$O(1)$\u67e5\u8be2$Y$\u662f\u5426\u662f$v$\u7684\u7956\u5148\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(N+M)$\n\n### Tarjan:\n\n\u4e5f\u6709\u4e00\u79cd\u5b9e\u73b0\u66f4\u4e3a\u5de7\u5999\u7684\u505a\u6cd5\uff0c\u4e0d\u8fc7\u603b\u4f53\u601d\u8def\u4e0d\u53d8\u3002\u5bf9\u4e8e\u7b2c$i$\u4e2a\u8be2\u95ee$(u,v,c)$,\u6211\u4eec\u53d1\u73b0\u5982\u679c$(1,u)$\u4e0a\u548c$(1,v)$\u4e0a\u7684$top[c]$\u4e0d\u540c\u65f6\uff0c$(u,v)$\u4e0a\u4e00\u5b9a\u5b58\u5728\u70b9\u6743\u503c\u4e3a$c$\u3002\u5982\u679c$top[c]$\u76f8\u540c\uff0c\u5f53\u4e14\u4ec5\u5f53$top[c]=L$\u65f6,$(u,v)$\u4e0a\u5b58\u5728\u6743\u503c\u4e3a$c$\u7684\u70b9\u3002\n\n\u540c\u6837\u7684\uff0c\u5f53\u904d\u5386\u5230$u$\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9009\u62e9\u7528$top[c]$\u53bb\u5b58\u50a8$(1,u)$\u4e0a\u6743\u503c\u4e3a$c$\u7684\u6700\u6df1\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff08\u76f8\u5f53\u4e8e\u4e0a\u79cd\u505a\u6cd5\u7684$Y$\uff09\u3002\u5f53\u7b2c\u4e00\u6b21\u9047\u5230\u8be2\u95ee$i$\u65f6\uff0c$ans[i]=top[C[i]]$\u3002\u7b2c\u4e8c\u6b21\u5219$ans[i]=(ans[i]!=top[C[i]])$\u3002\uff08\u5224\u65ad$(1,u)$\u548c$(1,v)$\u4e0a\u7684$top[C[i]]$\u662f\u5426\u662f\u540c\u4e00\u70b9\uff09\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(N+M)$\n\n\u4ee3\u7801\n------------\n#### \u8fd9\u91cc\u63d0\u4f9b\u4e24\u79cd\u5173\u4e8e\u4ee5\u4e0a\u601d\u8def\u7c7b\u4f3c\u7684\u89e3\u6cd5\uff0c\u5206\u522b\u662f**Benq**\u5927\u795e\u5728\u5b98\u7f51\u4e0a\u7ed9\u51fa\u7684\u6807\u7a0b\u548c\u849f\u84bb\u5199\u7684\u4ee3\u7801QWQ\u3002\n\n\u6807\u7a0b\uff1a[Link](http://usaco.org/current/data/sol_milkvisits_gold_dec19.html)\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef pair<int,int> pi;\nconst int N=1e5+5;\nint n,m,T[N],C[N],ans[N],top[N],cnt,dat[N][2];\npi range[N];\nvector <int> v[N],query[N];\ninline void work(int x,int fa){//\u9884\u5904\u7406\u524d\u5e8f&\u540e\u5e8f\u904d\u5386\n    range[x].first=cnt++;\n    for(int i=0;i<v[x].size();i++){\n        int y=v[x][i];\n        if(y==fa)continue;\n        work(y,x);\n    }\n    range[x].second=cnt-1;\n}\ninline bool anc(int a,int b){//O(1)\u5224\u65ad\u7956\u5148\n    return range[a].first<=range[b].first&&range[b].second<=range[a].second;\n}\nvector <int> order;\nvector <pi> stor[N];\ninline void dfs(int x,int fa){\n    //\u6309\u989c\u8272\u5b58\u4e0b\u8def\u5f84[1,x]\u4e0a\u7684\u70b9\n    stor[T[x]].push_back({x,(int)order.size()}),order.push_back(x);\n    for(int i=0;i<query[x].size();i++){\n        int t=query[x][i];\n        if(!stor[C[t]].size())continue;\n        pi y=stor[C[t]].back();\n        if(y.first==x)ans[t]=1;//\u5982\u679c\u67e5\u8be2\u7684\u989c\u8272\u548cx\u70b9\u76f8\u540c\n        else{\n            int Y=order[y.second+1];//\u627e\u8be5\u70b9\u5728[1,x]\u4e0a\u7684\u513f\u5b50\n            //\u5982\u679c\u5b83\u4e0d\u4e3a\u53e6\u4e00\u70b9\u7684\u7956\u5148\n            if(!anc(Y,dat[t][0]+dat[t][1]-x))ans[t]=1;\n        }\n    }\n    for(int i=0;i<v[x].size();i++){\n        int y=v[x][i];\n        if(y==fa)continue;\n        dfs(y,x);\n    }\n    stor[T[x]].pop_back();order.pop_back();//\u5f39\u51fa\u6808\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&T[i]);\n    }\n    for(int i=1;i<n;i++){\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        v[x].push_back(y);\n        v[y].push_back(x);\n    }\n    work(1,0);\n    for(int i=1;i<=m;i++){\n        scanf(\"%d%d%d\",&dat[i][0],&dat[i][1],&C[i]);\n        int x=dat[i][0],y=dat[i][1];\n        query[x].push_back(i);\n        query[y].push_back(i);\n    }\n    dfs(1,0);\n    for(int i=1;i<=m;i++){\n        printf(\"%d\",ans[i]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n```\nTarjan\u505a\u6cd5:\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5;\nint n,m,T[N],C[N],ans[N],top[N];\nvector <int> v[N],query[N];\n//\u8bb0\u5f55[1,n]\u4e0a\u6bcf\u79cdCi\u6700\u6df1\u70b9\u7684\u513f\u5b50\ninline void dfs(int x,int fa){\n    int back=top[T[x]];\n    for(int i=0;i<query[x].size();i++){\n        int t=query[x][i];\n        if(ans[t]==-1){\n            ans[t]=top[C[t]];//\u7b2c\u4e00\u6b21\u6765\n        }else ans[t]=(ans[t]!=top[C[t]]);//\u5224\u65ad\u4e24\u70b9\u662f\u5426\u76f8\u540c\n    }\n    for(int i=0;i<v[x].size();i++){\n        int y=v[x][i];\n        if(y==fa)continue;\n        top[T[x]]=y;//\u5b58\u513f\u5b50\n        dfs(y,x);\n    }\n    top[T[x]]=back;//\u56de\u6eaf\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&T[i]);\n    }\n    for(int i=1;i<n;i++){\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        v[x].push_back(y);\n        v[y].push_back(x);\n    }\n    memset(ans,-1,sizeof(ans));\n    for(int i=1;i<=m;i++){\n        int x,y;\n        scanf(\"%d%d%d\",&x,&y,&C[i]);\n        if(T[x]==C[i]||T[y]==C[i])ans[i]=1;\n        query[x].push_back(i);\n        query[y].push_back(i);\n    }\n    dfs(1,0);\n    for(int i=1;i<=m;i++){\n        printf(\"%d\",ans[i]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n```\n",
        "postTime": 1607750501,
        "uid": 218501,
        "name": "ETHANK",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5838 \u3010[USACO19DEC]Milk Visits G\u3011"
    },
    {
        "content": "\u63a8\u8350\u4e00\u4e0b\u6211\u7684[\u535a\u5ba2](https://www.cnblogs.com/Purple-wzy/)\uff0c\u8fd9\u91cc\u670912\u6708\u6708\u8d5b\u7684\u5168\u90e812\u7bc7\u9898\u89e3~~\n\n####B Milk Visits\n\n[\u9898\u76ee](https://www.luogu.com.cn/problem/P5838)\n\n\u9898\u89e3\uff1a\n\n\u63d0\u4f9b\u4e00\u79cd\u66f4\u52a0\u5e73\u6c11\u5316\u7684\u505a\u6cd5---\u79bb\u7ebf\u3002\n\n\u6211\u4eec\u5c06\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743\u5f53\u505a\u4fee\u6539\uff0c\u548c\u67e5\u8be2\u4e2d\u6bcf\u4e2a\u4eba\u7684\u559c\u597d\u725b\u5976\u4e00\u8d77\u6392\u5e8f\uff0c\u6309\u70b9\u6743\u6392\u5e8f\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ea\u9700\u8981\u5728\u4e00\u68f5\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c\u4fee\u6539\u3001\u67e5\u8be2\u64cd\u4f5c\u4e86\u3002\u6bcf\u6b21\u5148\u6253\u4e2a\n\nlazytag\u6e05\u7a7a\n\n\u4e4b\u524d\u7684\u4fe1\u606f\uff0c\u7136\u540e\u5c06\u4e00\u4e2a\u70b9\u6743\u7684\u6240\u6709\u70b9\u63d2\u5165\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u67e5\u8be2\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u8fd8\u662f\u770b\u4ee3\u7801\u3002\n\n\u590d\u6742\u5ea6\uff1aO(nlog^2n)\n\n\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define re register int\n#define F(x,y,z) for(re x=y;x<=z;x++)\n#define FOR(x,y,z) for(re x=y;x>=z;x--)\n#define I inline void\n#define IN inline int\ntypedef long long ll;\nI read(int &res){\n    re g=1;register char ch=getchar();res=0;\n    while(!isdigit(ch)){\n        if(ch=='-')g=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch)){\n        res=(res<<3)+(res<<1)+(ch^48);\n        ch=getchar();\n    }\n    res*=g;\n}\nchar c[101000];\nstruct E{\n\tint to,nt;\n}e[202000];\nstruct Q{\n\tint x,y,p,id;\n\tfriend bool operator < (Q a,Q b){\n\t\treturn a.p==b.p?a.id<b.id:a.p<b.p;\n\t}\n}q[202000];\n#define T e[k].to\nchar sit;\nint n,m,now,ans[101000],a[100100],tr[404000],laz[404000],head[101000],fa[101000],X,Y,tot=-1,siz[101000],top[101000],son[101000],id[101000],dep[101000];\nI D_1(int x,int fat,int depth){\n\tsiz[x]=1;dep[x]=depth;son[x]=-1;fa[x]=fat;\n\tre maxi=-1;\n\tfor(re k=head[x];k!=-1;k=e[k].nt){\n\t\tif(T==fat)continue;\n\t\tD_1(T,x,depth+1);\n\t\tsiz[x]+=siz[T];\n\t\tif(maxi<siz[T])maxi=siz[T],son[x]=T;\n\t}\n}\nI D_2(int x,int fat,int topi){\n\ttop[x]=topi;id[x]=++tot;\n\tq[tot].x=x;q[tot].y=id[x];q[tot].p=a[x];q[tot].id=-1;\n\t//\u5c06\u6bcf\u4e2a\u70b9\u770b\u505a\u4fee\u6539\uff0cid\u4e3a\u8d1f\u662f\u4e3a\u4e86\u4f7f\u5176\u6392\u5e8f\u65f6\u6392\u5728\u67e5\u8be2\u524d\u9762 \n\tif(son[x]!=-1)D_2(son[x],x,topi);\n\tfor(re k=head[x];k!=-1;k=e[k].nt){\n\t\tif(T==fat||T==son[x])continue;\n\t\tD_2(T,x,T);\n\t}\n}\n#define all 1,1,n\n#define lt k<<1,l,mid\n#define rt k<<1|1,mid+1,r\nI modi(int k,int l,int r,int x){\n\tif(l==r){\n\t\ttr[k]=1;\n\t\treturn;\n\t}\n\tif(laz[k])tr[k<<1]=tr[k<<1|1]=laz[k]=0,laz[k<<1]=laz[k<<1|1]=1;\n\tre mid=(l+r)>>1;\n\tif(x<=mid)modi(lt,x);\n\telse modi(rt,x);\n\ttr[k]=tr[k<<1]|tr[k<<1|1];\n}\nIN ques_sum(int k,int l,int r,int x,int y){\n\tif(x>r||y<l)return 0;\n\tif(x<=l&&r<=y)return tr[k];\n\tif(laz[k])tr[k<<1]=tr[k<<1|1]=laz[k]=0,laz[k<<1]=laz[k<<1|1]=1;\n\tre mid=(l+r)>>1;\n\treturn ques_sum(lt,x,y)|ques_sum(rt,x,y);\n}\nIN ques(int x,int y){\n\tre res=0;\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]]<dep[top[y]])swap(x,y);\n\t\tres|=ques_sum(all,id[top[x]],id[x]);\n\t\tif(res)return 1;\n\t\tx=fa[top[x]];\n\t}\n\tif(dep[x]>dep[y])swap(x,y);\n\tres|=ques_sum(all,id[x],id[y]);\n\tif(res)return 1;\n\treturn 0;\n}\nint main(){\n\tfreopen(\"milkvisits.in\",\"r\",stdin);\n\tfreopen(\"milkvisits.out\",\"w\",stdout);\n\tread(n);read(m);\n\tF(i,1,n){\n\t\tread(a[i]);\n\t}\n\tmemset(head,-1,sizeof(head));\n\ttot=-1;\n\tF(i,1,n-1){\n\t\tread(X);read(Y);\n\t\te[++tot].to=Y;\n\t\te[tot].nt=head[X];\n\t\thead[X]=tot;\n\t\te[++tot].to=X;\n\t\te[tot].nt=head[Y];\n\t\thead[Y]=tot;\n\t}\n\tD_1(1,0,1);\n\ttot=0;\n\tD_2(1,0,1);\n\tF(i,1,m){\n\t\ttot++;\n\t\tread(q[tot].x);read(q[tot].y);read(q[tot].p);q[tot].id=i;\n\t}\n\tsort(q+1,q+1+tot);\n\tnow=q[1].p;\n\tF(i,1,tot){\n\t\tif(q[i].p>now)laz[1]=1,tr[1]=0,now=q[i].p;//\u70b9\u6743\u53d8\u5316\u65f6\uff0c\u6e05\u7a7a\u7ebf\u6bb5\u6811\uff0c\u6253\u61d2\u6807\u8bb0\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u5904\u7406\u65b9\u5f0f \n\t\tif(q[i].id<0)modi(all,q[i].y);\n\t\telse ans[q[i].id]=ques(q[i].x,q[i].y);\n\t}\n\tF(i,1,m){\n\t\tcout<<ans[i];\n\t}\n    return 0;\n}\n```",
        "postTime": 1576838506,
        "uid": 93453,
        "name": "Purple_wzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5838 \u3010[USACO19DEC]Milk Visits(gold)\u3011"
    },
    {
        "content": "### \u505a\u9898\u5168\u8fc7\u7a0b\n\n\u5f00\u4e86Gold\u4e4b\u540e\u626b\u4e86\u4e09\u9053\u9898\uff0c\u53d1\u73b0\u8fd9\u9053\u9898\u5c31\u662f\u6211AC Silver T3\u7684\u65f6\u5019\u60f3\u5230\u7684\u62d3\u5c55\u3002\n\n\u6309Ctrl+Z\u627e\u56de\u4ee3\u7801\u4e4b\u540e\uff0c\u5f00\u59cb\u60f3\u4fee\u6539\u65b9\u6cd5\u3002\n\n\u6211\u5f00\u59cb\u5728\u9ed1\u677f\u4e0a\u4e71\u6d82\u4e71\u753b\uff0c\u60f3\u7740Silver T3\u7684\u601d\u8def\u3002\n\n\u5230\u6839\u7684\u8def\u5f84\u2026\u2026LCA\u2026\u2026\u4fe1\u606f\u53ea\u5dee1\u2026\u2026\n\n\u7b49\u7b49\uff0c\u4fe1\u606f\u53ea\u5dee1\uff1f\n\n\u8dd1\u5230\u673a\u5b50\u524d\u5750\u4e0b\uff0c\u952e\u76d8\u58f0\u518d\u6b21\u54cd\u8d77\u3002\n\n---\n\n### \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6811\u4e0a\u7684\u70b9\u6709N\u79cd\u72b6\u6001\u3002\n\nQ\u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e24\u70b9\u95f4\u8def\u5f84\u6709\u6ca1\u6709\u4e00\u79cd\u72b6\u6001\u7684\u8282\u70b9\u3002\n\n---\n\n### \u505a\u6cd5\n\n\u5efa\u8bae\u5148\u89e3\u51b3\u8fd9\u9053\u9898\uff1a[\u8fd9\u91cc](https://www.luogu.com.cn/problem/P5836)\u3002\n\n\u8fd9\u662f\u672c\u4eba\u7684\u9898\u89e3\uff1a[\u8fd9\u91cc](https://www.luogu.com.cn/blog/tiger2005/solution-p5836)\u3002\u6211\u5c06\u5728\u8fd9\u7bc7\u9898\u89e3\u7684\u57fa\u7840\u4e0a\u5199\u3002\n\n\u5728\u4e0a\u9762\u7684\u9898\u4e2d\u53ea\u6709\u4e24\u79cd\u72b6\u6001\uff0c\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u62d3\u5c55\u5230N\u79cd\u72b6\u6001\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u7684\u662f\uff0c\u4e00\u4e2a\u8282\u70b9\u7684\u4fe1\u606f\u548c\u5176\u7236\u4eb2\u8282\u70b9\u7684\u4fe1\u606f\u53ea\u5dee\u4e00\u4e2a\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4e3b\u5e2d\u6811\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u4e3b\u5e2d\u6811\u50a8\u5b58\u6bcf\u4e00\u4e2a\u8282\u70b9\u5230\u6839\u8def\u5f84\u4e0a\u6bcf\u4e00\u79cd\u72b6\u6001\u7684\u8282\u70b9\u4e2a\u6570\u3002\u6bcf\u4e00\u6b21DFS\u7684\u65f6\u5019\uff0c\u5c06\u8be5\u8282\u70b9\u4ece\u7236\u4eb2\u8282\u70b9\u7684\u4fe1\u606f\u4e2d\u5c06\u8be5\u70b9\u7684\u72b6\u6001\u52a0\u4e0a1\u5c31\u884c\u4e86\u3002\n\n\u5269\u4e0b\u7684\u4e1c\u897f\u5c31\u548c\u7b80\u5316\u7684\u9898\u4e00\u6837\u4e86\u3002\u67e5\u8be2\u7684\u65f6\u5019\u53ea\u7528\u67e5\u8981\u6c42\u7684\u72b6\u6001\u3002\n\n\u590d\u6742\u5ea6\uff1a$O(NlogN+QlogN)$(\u524d\u9762\u662fDFS+\u4e3b\u5e2d\u6811\u4fee\u6539\uff0c\u540e\u9762\u662f\u8be2\u95ee\u65f6\u7684LCA\u67e5\u8be2+\u4e3b\u5e2d\u6811\u67e5\u8be2)\u3002\n\nCode:\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint N,M,PZ[100010];\nint qxx[200010][2],tt[100010],ll;\nint fa[100010],dep[100010];\nint bz[100010][20];\nint rt[100010];\nvoid ad(int u,int v){\n\tqxx[++ll][0]=v;\n\tqxx[ll][1]=tt[u];\n\ttt[u]=ll;\n}\nint c[4000010][2],nm[4000010],nn;\nint bld(int l,int r){\n\tif(l==r){\n\t\tnm[++nn]=(l == PZ[1] ? 1 : 0);\n\t\treturn nn;\n\t}\n\tint q=++nn;\n\tint m=(l+r)>>1;\n\tc[q][0]=bld(l,m);\n\tc[q][1]=bld(m+1,r);\n\treturn q;\n}\nint cng(int o,int l,int r,int p){\n\tif(l == r){\n\t\t++nn;\n\t\tnm[nn]=nm[o]+1;\n\t\treturn nn;\n\t}\n\tint q = ++nn;\n\tint m = (l+r)>>1;\n\tif(p<=m){\n\t\tc[q][0]=cng(c[o][0],l,m,p);\n\t\tc[q][1]=c[o][1];\n\t}\n\telse{\n\t\tc[q][0]=c[o][0];\n\t\tc[q][1]=cng(c[o][1],m+1,r,p);\n\t}\n\treturn q;\n}\nint che(int o,int l,int r,int p){\n\tif(l == r)\treturn nm[o];\n\tint m = (l+r)>>1;\n\tif(p<=m)\treturn che(c[o][0],l,m,p);\n\telse\treturn che(c[o][1],m+1,r,p);\n}\nvoid dfs(int u){\n\tif(u!=1)\n\t\trt[u]=cng(rt[fa[u]],1,N,PZ[u]);\n\tdep[u]=dep[fa[u]]+1;\n\tfor(int i=tt[u];i;i=qxx[i][1]){\n\t\tint v=qxx[i][0];\n\t\tif(v==fa[u])\tcontinue;\n\t\tfa[v]=u;\n\t\tdfs(v);\n\t}\n}\nint lca(int u,int v){\n\tif(dep[u]<dep[v])\tswap(u,v);\n\tfor(int i=17;i+1;i--)\n\t\tif(dep[bz[u][i]]>=dep[v])\tu=bz[u][i];\n\tif(u==v)\treturn u;\n\tfor(int i=17;i+1;i--)\n\t\tif(bz[u][i]!=bz[v][i])\tu=bz[u][i],v=bz[v][i];\n\treturn fa[u];\n}\nint main(){\n\tfreopen(\"milkvisits.in\",\"r\",stdin);\n\tfreopen(\"milkvisits.out\",\"w\",stdout);\n\tscanf(\"%d%d\",&N,&M);\n\trt[1]=bld(1,N);\n\tfor(int i=1;i<=N;i++)\tscanf(\"%d\",&PZ[i]);\n\tfor(int i=1,a,b;i<N;i++){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tad(a,b);ad(b,a);\n\t}\n\tfa[1]=1;dfs(1);\n\tfor(int i=1;i<=N;i++)\tbz[i][0]=fa[i];\n\tfor(int i=1;i<18;i++)\n\t\tfor(int j=1;j<=N;j++)\n\t\t\tbz[j][i]=bz[bz[j][i-1]][i-1];\n\tfor(int i=1,a,b,c;i<=M;i++){\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tint u=lca(a,b);\n\t\tint o=che(rt[a],1,N,c)+che(rt[b],1,N,c)-2*che(rt[u],1,N,c)+(PZ[u]==c);\n\t\tprintf(\"%d\",(bool)o);\n\t}\n\tfclose(stdin);\n\tfclose(stdout);\n\treturn 0;\n}\n```",
        "postTime": 1576771608,
        "uid": 60864,
        "name": "tiger2005",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5838 \u3010[USACO19DEC]Milk Visits(gold)\u3011"
    },
    {
        "content": "# \u7caa\u5757+\u719f\u7ec3\u5256\u7caa\n\n**\u524d\u8a00**\n\n\u63d0\u540d\u611f\u8c22\u5e2e\u6211\u8c03\u6211\u8fd9\u5768\u6076\u5fc3\u4ee3\u7801\u7684[@\u963f\u4e11\u795e\u4ed9](https://www.luogu.com.cn/user/364963)Orz\u3002\n\n\u611f\u89c9\u505a\u8fd9\u9053\u9898\u7684\u53ea\u6709\u6211\u6570\u636e\u7ed3\u6784\u5b66\u50bb\u4e86\u3002\n\n\u9898\u76ee\u94fe\u63a5\uff1a[$\\texttt{Link}$](https://www.luogu.com.cn/problem/P5838)\u3002\n\n**\u9898\u610f\u7b80\u8ff0**\n\n\u7ed9\u5b9a $n$ \u4e2a\u70b9\u5e26\u70b9\u6743\u7684\u6811\uff0c$m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u6761\u8def\u5f84 $u$ \u5230 $v$ \u4e0a\u6709\u6ca1\u6709\u70b9\u6743\u7b49\u4e8e $c$ \u7684\u70b9\u3002\n\n**\u9898\u76ee\u5206\u6790**\n\n\u53d1\u73b0\u662f\u6811\u5e76\u6709 $m$ \u6b21\u8be2\u95ee\uff0c\u5148\u4e0a\u6811\u5256\u3002\n\n\u7136\u540e\u53d1\u73b0\u8be2\u95ee\u633a\u96be\u641e\uff0c\u7528\u7ebf\u6bb5\u6811\u7684\u8bdd\u6211\u4e0d\u641e\uff0c\u6240\u4ee5\u7a81\u53d1\u5947\u60f3\u4e0a\u5206\u5757\n\n\u7528\u4e00\u4e2a\u7ecf\u5178 trick\uff0c\u5c06\u6bcf\u4e00\u5757\u91cd\u6784\u6392\u5e8f\uff0c\u8fd9\u6837\u6bcf\u4e00\u5757\u5c31\u5177\u6709\u4e86**\u53ef\u4e8c\u5206\u6027**\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5bf9\u4e8e\u96f6\u6563\u5757\u513f\u66b4\u529b\uff0c\u8be2\u95ee\u7684\u4e24\u4e2a\u7aef\u70b9\u5728\u540c\u4e00\u4e2a\u5757\u5185\u65f6\u8fd8\u662f\u6253\u66b4\u529b\uff0c\u800c\u5bf9\u4e8e\u5b8c\u6574\u5757\uff0c\u6211\u4eec\u8003\u8651**\u4e8c\u5206**\u5f97\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e $c$ \u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5224\u65ad\u4e00\u4e0b\u8fd9\u4e2a\u4f4d\u7f6e\u662f\u5426\u7b49\u4e8e $c$ \u5373\u53ef\u3002\n\n\u8bb2\u4e00\u4e0b\u6211\u72af\u7684\u9519\u8bef\uff0c\u8fd9\u4e5f\u662f @\u963f\u4e11 \u795e\u4ed9\u5e2e\u6211\u627e\u51fa\u6765\u7684\uff0c\u4e5f\u4e00\u5757\u513f\u5c06\u5bb9\u6613\u72af\u7684\u9519\u513f\u8bf4\u4e00\u4e0b\u5427\u3002\u5728\u67e5\u8be2\u96f6\u6563\u5757\u65f6\u5019\u8981\u8be2\u95ee\u6ca1\u6709\u62cd\u8fc7\u5e8f\u7684\u6570\u7ec4\uff0c\u5f53\u7136\u5b8c\u6574\u5757\u4e8c\u5206\u51fa\u7684\u4f4d\u7f6e\u9700\u8981\u5224\u65ad\u91cd\u6784\u6392\u5e8f\u540e\u7684\u6570\u7ec4\u662f\u5426\u5408\u6cd5\uff0c**\u56e0\u4e3a\u6392\u5b8c\u5e8f\u540e\u771f\u5b9e\u7684\u4f4d\u7f6e\u5e76\u4e0d\u5728\u91cd\u6784\u6570\u7ec4\u76f8\u5e94\u7684\u4f4d\u7f6e\u4e2d**\u3002\n\n\u7136\u540e\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u4f46\u4e5f\u4e0d\u77e5\u9053\u548b\u5730\uff0c\u8dd1\u5230\u4e86\u6700\u4f18\u89e3\u7b2c\u56db\u3002\n\n\u7136\u540e\u6211\u8fd9\u4e2a\u83dc\u9e21\u60f3\u5361\u6700\u4f18\u89e3~~\u75f4\u5fc3\u5984\u60f3~~\uff0c\u53d1\u73b0\u4e0d\u7ba1\u5757\u957f\u662f $\\sqrt{n}$ \u8fd8\u662f\u5176\u5b83\u90fd\u662f\u6700\u4f18\u89e3\u7b2c\u56db\uff0c\u4f46\u662f\u5b9e\u6d4b\u5f53\u5757\u957f\u7b49\u4e8e $1000$ \u65f6\u8dd1\u7684\u76f8\u5bf9\u4f1a\u6700\u5feb\u3002\n\n\u7b97\u4e00\u4e0b\u590d\u6742\u5ea6\uff1a\u6811\u5256\u4e3a $O(n\\log n)$\uff0c\u5206\u5757\u4e3a $O(\\sqrt{n}\\log \\sqrt{n})$\uff0c\u7136\u540e\u590d\u6742\u5ea6\u5c31\u662f $O(n\\sqrt n\\log(n+\\sqrt n))$\u3002\u540a\u6253 $O(n\\log^2 n)$\u3002\n\n$\\texttt{AC}$ \u94fe\u63a5\uff1a[$\\texttt{Link}$](https://www.luogu.com.cn/record/55574640)\n\n[$\\texttt{code}$](https://paste.ubuntu.com/p/96FmFQptt4/)\n\n$$\\texttt{The End.by UF}$$\n\n",
        "postTime": 1628671387,
        "uid": 360511,
        "name": "UperFicial",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5838 \u3010[USACO19DEC]Milk Visits G\u3011"
    }
]