[
    {
        "content": "##\u4f5c\u4e3a\u4e00\u4e2a\u52a8\u5f52\u521d\u5b66\u8005\uff0c\u611f\u89c9\u5404\u4f4d\u5927\u4f6c\u7684\u9898\u89e3\u592a\u8fc7\u9ebb\u70e6\uff08\u5176\u5b9e\u662f\u6211\u770b\u4e0d\u61c2\uff09\n\n#\u6211\u9886\u609f\u5230\u4e86\u771f\u6b63\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u76f8\u4fe1\u849f\u84bb\u4eec\u4e5f\u80fd\u770b\u61c2\uff08\u83ab\u540d\u81ea\u4fe1\uff09\n\n\u56e0\u4e3a\u662f\u4ece\u4e0a\u65b9\u548c\u4ece\u4e0b\u65b9\u4f20\u7eb8\u6761\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u76f8\u5f53\u4e8e\u4ece\u5de6\u4e0a\u89d2\u8fde\u7eed\u4f20\u4e24\u5f20\u7eb8\u6761\uff0c\u8def\u5f84\u4e0d\u91cd\u590d\uff0c\u6548\u679c\u76f8\u540c\u3002\n\n\u4ece\u5de6\u4e0a\u6765\u770b\u7684\u8bdd\u5c31\u53ea\u80fd\u5411\u53f3\u6216\u5411\u4e0b\u4f20\u7eb8\u6761\u3002\n\n##\u90a3\u4e48\u4e24\u5f20\u7eb8\u6761\u5728\u8fc7\u7a0b\u4e2d\u5c31\u4e00\u5b9a\u5728\u4e00\u6761\u659c\u7ebf\u4e0a\uff0c\u800c\u5728\u4e00\u6761\u659c\u7ebf\u4e0a\u7eb5\u5750\u6807\u4e0e\u6a2a\u5750\u6807\u76f8\u52a0\u76f8\u7b49\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/9892.png) \u5728\u5982\u56fe\u7684\u659c\u7ebf\u4e2d\uff0c\u4e24\u4e2a\u70b9\u7684\u548c\u90fd\u4e3a3.\n\n\u9996\u5148\u91cd\u8981\u7684\u5c31\u662f\u4e09\u7ef4F\u6570\u7ec4\u3002\n\n\u7b2c\u4e00\u7ef4\u5ea6\u7ef4\u62a4\u7684\u662f\u5728\u4f20\u7684\u8fc7\u7a0b\u4e2d\u7eb5\u5750\u6807\u4e0e\u6a2a\u5750\u6807\u7684\u548c\u3002\n\n#\u5728\u540c\u4e00\u659c\u7ebf\u4e0a\uff0c\u5269\u4e0b\u8868\u793a\u4e24\u4e2a\u70b9\u7684\u4ece\u5750\u6807\u5c31\u53ef\u4ee5\u8868\u793a\u8fd9\u4e24\u4e2a\u70b9\u7684\u4f4d\u7f6e\u3002\n\n\u7b2c\u4e8c\u7ef4\u5ea6\u7ef4\u62a4\u7684\u662f\u76f8\u5bf9\u5728\u5de6\u8fb9\u7684\u70b9\u7684\u7eb5\u5750\u6807\u3002\n\n\u7b2c\u4e09\u7ef4\u5ea6\u7ef4\u62a4\u7684\u662f\u76f8\u5bf9\u5728\u53f3\u8fb9\u7684\u70b9\u7684\u7eb5\u5750\u6807\u3002\n\n\u5f53\u67e5\u8be2\u4e00\u4e2a\u60c5\u51b5\u65f6\uff0c\u53ea\u6709\u56db\u79cd\u60c5\u51b5\u53ef\u4ee5\u5230\u4ed6\n\nF[sum][i][j]=max{F[sum-1][i][j]+F[k-1][i][j-1]+F[k-1][i-1][j]+F[k-1][i-1][j-1]\uff1b\n\n\u6700\u540e\u518d\u52a0\u4e0aa\u6570\u7ec4\u91cc\u5b58\u7684\u4e24\u4e2a\u70b9\u7684\u597d\u611f\u5ea6\u5373\u53ef\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int maxn=60;\nint a[maxn][maxn];\nint F[2*maxn][maxn][maxn];\nint main()\n{\n  int m,n;\n  scanf(\"%d%d\",&m,&n);\n  for(int i=1;i<=m;i++)\n    for(int j=1;j<=n;j++)\n      scanf(\"%d\",&a[i][j]);\n  //F[sum][i][j]=max{F[sum-1][i][j]...\n  memset(F,-1,sizeof(F));//\u8d4b\u521d\u503c\u4e3a-1 (\u539f\u56e0\u5728\u540e\u9762\uff09 \n  F[2][1][1]=0;//\u6700\u521d\u7684\u70b9\uff0c\u5728\u5de6\u4e0a\u89d2\uff0c\u597d\u611f\u5ea6\u4e3a0 \n  for(int k=3;k<m+n;k++)\n    for(int i=1;i<n;i++)\n      for(int j=i+1;j<=n;j++)\n      {\n        int s=F[k][i][j];\n        if(F[k-1][i][j]>s)s=F[k-1][i][j];\n        if(F[k-1][i-1][j]>s)s=F[k-1][i-1][j];\n        if(F[k-1][i][j-1]>s)s=F[k-1][i][j-1];\n        if(F[k-1][i-1][j-1]>s)s=F[k-1][i-1][j-1];\n        if(s==-1)continue;//\u5f53s\u4e3a-1\u65f6\uff0c\u8bf4\u660e\u56db\u79cd\u60c5\u51b5\u90fd\u4e0d\u80fd\u5230\u8be5\u70b9\uff0c\u6545\u4e0d\u5b58\u5728\u3002 \n        F[k][i][j]=s+a[k-i][i]+a[k-j][j];//\u8be5\u70b9\u7684\u503c\u4e3a\u6700\u5927\u7684\u524d\u4e00\u4e2a\u503c\u4e0e\u5f53\u524dF[k][i][j]\u8868\u793a\u4e24\u70b9\u7684\u503c\u7684\u548c\u3002 \n      }\n  printf(\"%d\",F[m+n-1][n-1][n]);//\u56e0\u4e3ai\u6c38\u8fdc\u5c0f\u4e8ej\uff0c\u6240\u4ee5\u53f3\u4e0b\u89d2\u7684\u70b9\u4e0d\u4f1a\u6c42\u5230\uff0c\n  //\u4f46\u662f\u5230\u53f3\u4e0b\u89d2\u53ea\u6709\u4e00\u79cd\u60c5\u51b5\uff0c\u5c31\u662f\u5728\u53f3\u4e0b\u89d2\u7684\u4e0a\u9762\u548c\u53f3\u4e0b\u89d2\u7684\u5de6\u8fb9\uff0c\u76f4\u63a5\u8f93\u51fa\u5c31\u597d\u4e86\u3002 \n  return 0;\n } \n```",
        "postTime": 1509366960,
        "uid": 26182,
        "name": "\u806a\u660e\u738b\u5fc5\u80dc",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "\u5b89\u5229\u4e00\u53d1\u81ea\u5df1\u7684\u535a\u5ba2\uff1a[http://www.cnblogs.com/OIerShawnZhou/](http://www.cnblogs.com/OIerShawnZhou/)\n\n\uff08\u6211\u5e73\u5e38\u5199\u7684\u9898\u89e3\u90fd\u4f1a\u5f80\u535a\u5ba2\u91cc\u53d1\uff0c\u6b22\u8fce\u5404\u4f4d\u5927\u4f6c\u524d\u6765\u62cd\u7816\uff09\n\n\n\u6d1b\u8c37AC100\u9898\u7eaa\u5ff5\u3002\n\n\u5176\u5b9e\u662f\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u68cb\u76d8\u5f62dp\uff0c\u6211\u80fd\u60f3\u5230\u7684\u6709\u4e24\u79cd\u505a\u6cd5\u3002\n\n\u7b2c\u4e00\u79cd\u505a\u6cd5\u662f\u56db\u7ef4dp\uff0c\u8fd9\u4e5f\u662f\u6700\u597d\u60f3\u7684\uff0c\u8bbef[i][j][k][l]\u4e3a\u4ece\u5c0f\u6e0a\u4f20\u5230\u5c0f\u8f69\u7684\u7eb8\u6761\u5230\u8fbe(i,j)\uff0c\u4ece\u5c0f\u8f69\u4f20\u7ed9\u5c0f\u6e0a\u7684\u7eb8\u6761\u5230\u8fbe(k,l)\u7684\u8def\u5f84\u4e0a\u53d6\u5f97\u7684\u6700\u5927\u7684\u597d\u5fc3\u7a0b\u5ea6\u548c\u3002\n\n\u5b8c\u5168\u53ef\u4ee5\u6362\u4e00\u4e2a\u601d\u8def\u60f3\uff0c\u5373\u6c42\u4ece\u7ed9\u5b9a\u7684\u8d77\u70b9\u51fa\u53d1\u8d70\u5230\u6307\u5b9a\u4f4d\u7f6e\u7684\u4e24\u6761\u6700\u77ed\u4e25\u683c\u4e0d\u76f8\u4ea4\u8def\u7ebf\u3002\n\n\u90a3\u4e48\u7279\u522b\u663e\u7136\uff0c\u8f6c\u79fb\u65b9\u7a0b\u662f f[i][j][k][l]=max( f[i][j-1][k-1][l] , f[i-1][j][k][l-1] , f[i][j-1][k][l-1] , f[i-1][j][k-1][l] )+a[i][j]+a[k][l]\u3002\n\n\u8981\u5c0f\u5fc3l\u7684\u679a\u4e3e\u8303\u56f4\uff0c\u5e94\u8be5\u662f\u4ecej+1\u5230m\uff0c\u53ea\u6709\u8fd9\u6837\uff0c\u5728\u679a\u4e3e\u7b2c\u4e8c\u6761\u8def\u7684\u65f6\u5019\u53ef\u4ee5\u63a7\u5236\u4e0b\u6807\u7684l\u4e0d\u4f1a\u548cj\u6709\u76f8\u7b49\u7684\u53ef\u80fd\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u4e24\u6761\u8def\u4e00\u5b9a\u4e0d\u76f8\u4ea4\uff08\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff09\n\n\u7531\u4e8e\u7ec8\u70b9\u7684\u503c\u662f0\uff0c\u6240\u4ee5\u76ee\u6807\u72b6\u6001\u5c31\u662ff[n][m-1][n-1][m]\u3002\n\n\u5982\u679c\u4f60\u4e0d\u60f3\u8fd9\u6837\u505a\uff0c\u90a3\u5c31\u8ba9l\u76f4\u63a5\u4ece1\u679a\u4e3e\uff0c\u4f46\u9700\u8981\u52a0\u4e00\u4e2a\u5224\u65ad\uff0c\u5224\u65ad\u5f53\u524d\u7684(i,j)\u548c(k,l)\u662f\u4e0d\u662f\u91cd\u5408\u4e86\uff0c\u5982\u679c\u91cd\u5408\u90a3\u5c31\u628af\u6570\u7ec4\u5bf9\u5e94\u7684\u8fd9\u4e2a\u5730\u65b9\u5728\u8f6c\u79fb\u540e\u51cf\u6389\u4e00\u4e2aa[i][j]\u6216\u8005a[k][l]\u3002\n\n\u539f\u6570\u636e\u6bd4\u8f83\u5f31\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n^2 \\* m^2)\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u8fc7\u3002\n\n\u7b2c\u4e8c\u79cd\u505a\u6cd5\u4e3a\u4e09\u7ef4dp\uff0c\u5982\u679c\u8fd9\u9053\u9898\u6570\u636e\u88ab\u52a0\u5f3a\u4e86\u4e00\u70b9\uff0c\u90a3\u5c31\u5e94\u8be5\u7528\u8fd9\u4e2a\u65b9\u6cd5\u3002\n\n\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u4e00\u4e2a\u89c4\u5f8b\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u8f6c\u79fb\uff0c\u8fd9\u4e24\u4f4d\u540c\u5b66\u7684\u7eb8\u6761\u8d70\u7684\u6b65\u6570\u603b\u662f\u76f8\u7b49\u7684\uff0c\u4e5f\u5c31\u662f\u5e94\u8be5\u603b\u6709i+j = k+l = step\uff0c\u6211\u4eec\u4ece\u8fd9\u91cc\u8003\u8651\u5165\u624b\uff0c\u7b80\u5316\u4e00\u4e0b\u90a3\u4e2a\u65b9\u7a0b\u3002\n\n\u6211\u4eec\u679a\u4e3e\u8d70\u7684\u6b65\u6570\uff0c\u540c\u65f6\u679a\u4e3e\u7b2c\u4e00\u4e2a\u4eba\u548c\u7b2c\u4e8c\u4e2a\u4eba\u7684\u6a2a\u5750\u6807\u6216\u8005\u7eb5\u5750\u6807\uff0c\u5bf9\uff0c\u53ea\u679a\u4e3e\u4e00\u4e2a\u5c31\u597d\uff0c\u53e6\u4e00\u4e2a\u53ef\u4ee5\u7b97\u51fa\u6765\u3002\n\n\u6211\u679a\u4e3e\u7684\u662f\u6a2a\u5750\u6807\u3002\n\n\u4f46\u8fd9\u6837\u505a\u7b2c\u4e00\u7ef4\uff08\u4e5f\u5c31\u662f\u679a\u4e3e\u6b65\u6570\u90a3\u4e00\u7ef4\uff09\u8981\u5f00\u4e24\u500d\u5927\u5c0f\uff08\u6b65\u6570\u6700\u5927\u6709n+m-1\uff09\uff0c\u5e76\u4e14\u9700\u8981\u52a0\u5165\u5224\u65ad\u91cd\u5408\u64cd\u4f5c\u3002\n\n\u4f18\u5316\u4e4b\u540e\u901f\u5ea6\u6bd4\u4e0a\u4e00\u4e2a\u5feb\u5f88\u591a\uff0c\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n^2\\*(n+m)).\n\n\u6cd5\u4e00\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#define maxn 55\nusing namespace std;\nint f[maxn][maxn][maxn][maxn],a[maxn][maxn];\nint n,m;\nint max_ele(int a,int b,int c,int d){\n    if (b>a)\n        a = b;\n    if (c>a)\n        a = c;\n    if (d>a)\n        a = d;\n    return a;\n}\nint main(){\n    cin >> n >> m;\n    for (int i=1;i<=n;i++)\n        for (int j=1;j<=m;j++) \n                cin >> a[i][j];\n    for (int i=1;i<=n;i++)\n        for (int j=1;j<=m;j++)\n            for (int k=1;k<=n;k++)\n                for (int l=j+1;l<=m;l++) \n                    f[i][j][k][l]=max_ele(f[i][j-1][k-1][l],f[i-1][j][k][l-1],f[i][j-1][k][l-1],f[i-1][j][k-1][l])+a[i][j]+a[k][l];\n    cout << f[n][m-1][n-1][m] << endl;\n    return 0;\n}\n```\n\u6cd5\u4e8c\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#define maxn 55\nusing namespace std;\nint f[2 * maxn][maxn][maxn];\nint a[maxn][maxn];\nint n,m;\n\nint max_ele(int a,int b,int c,int d){\n    if (b>a)\n        a = b;\n    if (c>a)\n        a = c;\n    if (d>a)\n        a = d;\n    return a;\n}\n\nint main(){\n    cin >> n >> m;\n    for (int i=1;i<=n;i++)\n        for (int j=1;j<=m;j++)\n            cin >> a[i][j];\n    for (int k=1;k<=n+m-1;k++)\n        for (int i=1;i<=n;i++)\n            for (int j=1;j<=n;j++){\n                if (k-i+1<1 || k-j+1<1) //\u8fd9\u91cc\u662f\u5224\u65ad\u7eb5\u5750\u6807\u7684\u5408\u6cd5\u6027\uff0c\u5982\u679c\u7eb5\u5750\u6807\u4e0d\u5408\u6cd5\u90a3\u5c31\u8df3\u8fc7\u53bb\n                    continue;\n                 f[k][i][j] = max_ele(f[k-1][i][j],f[k-1][i-1][j-1],f[k-1][i][j-1],f[k-1][i-1][j]) + a[i][k-i+1] + a[j][k-j+1];\n                if (i==j) //\u5224\u65ad\u91cd\u5408\u8def\u5f84\n                    f[k][i][j]-=a[i][k-i+1];\n            }\n\n\n    cout << f[n+m-1][n][n] << endl;\n    return 0;\n}\n```",
        "postTime": 1504803615,
        "uid": 20197,
        "name": "ShawnZhou",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "\u611f\u89c9\u5927\u5bb6\u90fd\u5f88\u559c\u6b22\u5199\u56db\u7ef4DP\u3002\n\n\u6211\u6765\u53d1\u4e2a\u4e09\u7ef4DP\uff08\u867d\u7136\u4e5f\u6ca1\u591a\u5c11\u533a\u522bQAQ..\uff09\u3002\n\n\n\u8fd9\u9898\u548c\u524d\u97621004\u65b9\u683c\u53d6\u6570\u4e00\u6bdb\u4e00\u6837\u3002\n\n\u9996\u5148\uff0c\u8981\u627e\u6765\u56de\u4e24\u6761\u8def\u5f84\uff0c\u8fd9\u6837\u8003\u8651\u592a\u9ebb\u70e6\uff0c\u628a\u5b83\u8f6c\u5316\u4e3a\u4e24\u4e2a\u4eba\u4ece1,1\u8fd9\u70b9\u4e00\u8d77\u8d70\uff0c\u4e00\u76f4\u8d70\u5230n,m\u8fd9\u70b9\u6240\u7ecf\u8fc7\u7684\u8def\u5f84\u3002\n\n\u5b9a\u4e49f[p][i][j]\u8868\u793a\u5f53\u524d\u8d70\u4e86p\u6b65\uff0c\u7b2c\u4e00\u4e2a\u4eba\u8d70\u5230\u7b2ci\u884c\uff0c\u7b2c\u4e8c\u4e2a\u4eba\u8d70\u5230\u7b2cj\u884c\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n\u663e\u7136\u4e24\u4e2a\u4eba\u7684\u5750\u6807\u90fd\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6765\uff0c\u7b2c\u4e00\u4e2a\u4eba\u662f(i,p-i+1)\uff0c\u7b2c\u4e8c\u4e2a\u4eba\u662f(j,p-j+1)\u3002\n\n\u8f6c\u79fb\u5c31\u8003\u8651\u4e24\u4e2a\u4eba\u7684\u4e0a\u4e00\u6b65\u662f\u600e\u6837\u8d70\u7684\u3002\n\nf[p][i][j] = max(max(f[p - 1][i][j], f[p - 1][i - 1][j]), max(f[p - 1][i][j - 1], f[p - 1][i - 1][j - 1])) + a[i][p - i + 1] + a[j][p - j + 1]\u3002\n\n\u7531\u4e8e\u4e24\u6761\u8def\u5f84\u7ecf\u8fc7\u540c\u4e00\u4e2a\u70b9\u7684\u4ef7\u503c\u53ea\u80fd\u7b97\u4e00\u6b21\uff0c\u6240\u4ee5\u5982\u679c\u5f53\u524di==j\uff08\u76f8\u5f53\u4e8e\u4e24\u4e2a\u4eba\u7684\u4f4d\u7f6e\u91cd\u5408\u4e86\uff09\uff0c\u6211\u4eec\u53ea\u80fd\u7b97\u4e00\u904d\u8be5\u70b9\u7684\u4ef7\u503c\u3002\n\n\u6240\u4ee5\u6574\u4e2a\u8f6c\u79fb\u5c31\u662f\u8fd9\u6837\u4e86\uff1a\n\nf[p][i][j] = max(max(f[p - 1][i][j], f[p - 1][i - 1][j]), max(f[p - 1][i][j - 1], f[p - 1][i - 1][j - 1]));\n\nf[p][i][j] += i == j ? a[i][p - i + 1] : a[i][p - i + 1] + a[j][p - j + 1];\n\n\u662f\u4e0d\u662f\u5f88\u7b80\u5355\u3002\u3002\n\n\n\u51e0\u4e2a\u6ce8\u610f\u4e8b\u9879\uff1a\n\n1.\u6570\u7ec4\u522b\u5f00\u5c0f\uff0cf[][][]\u7684\u7b2c\u4e00\u7ef4\u8981\u4e24\u500d\u7684n\u3002\n\n2.for()\u7684\u65f6\u5019\u8981\u6ce8\u610f\u56e0\u4e3a\u8fd9\u91cc\u7684i,j\u90fd\u662f\u884c\uff0c\u6240\u4ee5\u90fd\u8981\u679a\u4e3e\u5230n\uff0c\u4e0d\u8981\u4e60\u60ef\u6027\u5730\u5199\u6210n,m\u3002\n\n\n\u5b8c\u6574\u4ee3\u7801\uff0c\u7092\u9e21\u77ed\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nint f[110][60][60];\nint a[60][60];\n\nint main()\n{\n    int n, m;\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= n; i ++)\n        for (int j = 1; j <= m; j ++) scanf(\"%d\", &a[i][j]);\n    f[1][1][1] = a[1][1];\n    for (int p = 2; p <= n + m - 1; p ++)\n        for (int i = 1; i <= n && i <= p; i ++)\n            for (int j = 1; j <= n && j <= p; j ++){\n                if (i == 1 && j == 1) continue;\n                f[p][i][j] = max(max(f[p - 1][i][j], f[p - 1][i - 1][j]), max(f[p - 1][i][j - 1], f[p - 1][i - 1][j - 1]));\n                f[p][i][j] += i == j ? a[i][p - i + 1] : a[i][p - i + 1] + a[j][p - j + 1];\n            }\n    printf(\"%d\\n\", f[n + m - 1][n][n]);\n    return 0;\n}\n```",
        "postTime": 1502810712,
        "uid": 19722,
        "name": "fy0123",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "## \u4f20\u7eb8\u6761\u8be6\u89e3\uff1a\n\n\u849f\u84bb\u6700\u8fd1\u63a5\u5230\u4e86\u7ec3\u4e60DP\u7684\u901a\u77e5\uff0c\u4e8e\u662f\u8dd1\u6765\u8bd5\u70bc\u573a\u770b\u770b\uff1b\u53d1\u73b0\u6709\u70b9\u96be\uff08\u6bd5\u7adf\u662f\u849f\u84bb\u5417\uff09\u4fbf\u53bb\u7ffb\u4e86\u7ffb\u9898\u89e3\uff0c\u53ef\u600e\u4e48\u90fd\u770b\u4e0d\u61c2\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\u849f\u84bb\u53d1\u73b0\u9898\u89e3\u91cc\u90fd\u975e\u5e38\u8be6\u7ec6\u7684\u8bb2\u4e86\u8f6c\u79fb\u65b9\u7a0b\uff0c\u8bb2\u4e86\u964d\u7ef4\u4f18\u5316\uff0c\u4f46\u8fd9\u9898\u65b0\u9896\u4e4b\u5904\u5728\u4e8e\u5b83\u8d70\u4e86\u4e24\u6b21\uff0c\u53ef\u5927\u5bb6\u8c8c\u4f3c\u90fd\u6ca1\u6709\u91cd\u70b9\u53bb\u8bb2\u5982\u4f55\u53bb\u91cd\u554a\uff01\n\n\u867d\u7136\u53bb\u91cd\u5f88\u7b80\u6613\uff0c\u9650\u5236\u4e00\u4e2afor\u5faa\u73af\u7684\u8303\u56f4\u5c31\u884c\u4e86\uff0c\u4f46\u5982\u679c\u6ca1\u6ce8\u610f\u8fd9\u4e00\u70b9\uff0c\u5f88\u96be\u7406\u89e3\u3002\u8fd9\u91cc\u9898\u89e3\u51e0\u4e4e\u90fd\u662ffor\u5faa\u73af\u91cc\u5199\u4e86\u51e0\u4e2ak>j,\tj=i+1...\u7136\u540e\u90fd\u4e0d\u6ce8\u91ca\u4e00\u4e0b\u5c31\u5f00\u59cb\u72b6\u6001\u8f6c\u79fb\u4e86\u3002\n\n\u6240\u4ee5\uff0c\u672c\u9898\u89e3\u8bde\u751f\u4e86\uff1a\n\n### \u5199\u5728\u524d\u9762\uff1a\n\n[P1004 \u65b9\u683c\u53d6\u6570](https://www.luogu.org/problemnew/show/P1004)\n\n\u5982\u679c\u4f60\u89c9\u5f97\u6b64\u9898\u6709\u4e9b\u96be\u53ef\u4ee5\u5148\u53bb\u770b\u770b\u8fd9\u9053\u9898\uff0c\u4ed6\u7684\u9898\u9762\u76f8\u5bf9\u66f4\u7b80\u6d01\u6613\u61c2\uff0c\u6570\u636e\u8303\u56f4\u4e5f\u975e\u5e38\u5c0f\uff0c\u53ef\u4ee5\u53bb\u7ec3\u7ec3\u4e0e\u672c\u9898\u76f8\u540c\u7684\u56db\u7ef4\u7684\u89e3\u6cd5\u3002~~\u53cc\u500d\u7ecf\u9a8c\u554a\uff01~~\n\n## \u57fa\u7840\uff1a\n\n\u56db\u7ef4DP\uff0c\u590d\u6742\u5ea6O(n^4)\u5de6\u53f3\uff08\u7a7a\u95f4\u4e5f\u4e00\u6837\uff09\n\n\u7528f[i][j][p][q]\u8868\u793a\u7b2c\u4e00\u5f20\u7eb8\u6761\u4f20\u5230(i,j),\u7b2c\u4e8c\u5f20\u7eb8\u6761\u4f20\u5230(p,q)\u6240\u7d2f\u8ba1\u4e0b\u6765\u7684\u597d\u5fc3\u7a0b\u5ea6\u548c\u3002\u8f6c\u79fb\u65b9\u7a0b\u5176\u4ed6\u9898\u89e3\u5df2\u7ecf\u5f88\u8be6\u7ec6\u4e86\u5427\uff08\u8fd8\u662f\u7801\u4e00\u4e0b\u5427...\uff09:\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6b65\u6709\u56db\u79cd\u60c5\u51b5\uff1a\n\n1.\u7b2c\u4e00\u5f20\u7eb8\u6761\u5411\u4e0b\u4f20\uff0c\u7b2c\u4e8c\u5f20\u7eb8\u6761\u5411\u4e0b\u4f20\uff1b\n\n2.\u7b2c\u4e00\u5f20\u7eb8\u6761\u5411\u4e0b\u4f20\uff0c\u7b2c\u4e8c\u5f20\u7eb8\u6761\u5411\u53f3\u4f20\uff1b\n\n3.\u7b2c\u4e00\u5f20\u7eb8\u6761\u5411\u53f3\u4f20\uff0c\u7b2c\u4e8c\u5f20\u7eb8\u6761\u5411\u4e0b\u4f20\uff1b\n\n4.\u7b2c\u4e00\u5f20\u7eb8\u6761\u5411\u53f3\u4f20\uff0c\u7b2c\u4e8c\u5f20\u7eb8\u6761\u5411\u53f3\u4f20\uff1b\n\nf[i][j]=max(f[i-1][j][p-1][q] ,f[i-1][j][p][q-1] ,f[i][j-1][p-1][q] ,f[i-1][j][p][q-1])+v[i][j]+v[p][q];\n\n\u90a3\u4e48\u5982\u4f55\u5224\u91cd\u5462\uff1f\u8fd9\u91cc\u5176\u5b9e\u53ef\u4ee5\u4e0d\u5224\uff0c\u53ea\u8981\u4f60\u6ca1\u6709\u91cd\u590d\u60c5\u51b5\u5c31\u884c\u4e86\uff0c\u6240\u4ee5for\u5faa\u73af\u65f6\u6211\u4eec\u9650\u5236p>q\u5373\u53ef\u3002\n\n## \u63d0\u9ad8\uff1a\n\n\u4e09\u7ef4DP\uff0c\u590d\u6742\u5ea6O\uff08n^3)\uff08\u7a7a\u95f4\u4f1a\u591a\u4e00\u500d\uff09\n\n\u6211\u4eec\u53d1\u73b0\u6bcf\u4e00\u5f20\u7eb8\u6761\u6bcf\u4e00\u6b65\u8981\u4e48\u53ea\u8d70\u53f3\u8fb9\uff0c\u8981\u4e48\u53ea\u8d70\u4e0b\u8fb9\uff0c\u6240\u4ee5i+j=p+q;**\u4e8e\u662f\u6211\u4eecDP\u6bcf\u4e00\u6b65\uff08\u7528k\u8868\u793a\uff09\u7684\u60c5\u51b5** \uff0c\u7528**i\u8868\u793a\u7b2c\u4e00\u5f20\u7eb8\u5f80\u4e0b\u8d70\u4e86\u591a\u5c11\u6b65**\uff0c\u56e0\u4e3a\u679a\u4e3e\u4e86k=i+j\uff08\u5373\u8d70\u4e86\u591a\u5c11\u6b65\uff09\u6240\u4ee5\u53ef\u4ee5\u7528k-i\u6765\u4ee3\u66ffj\u3002\u7b2c\u4e8c\u5f20\u7eb8\u4e5f\u540c\u6837\u53ef\u4ee5\u7528k\u548cp\u8868\u793a\u51fa\u6765\u5750\u6807\u3002\u56e0\u4e3a\u679a\u4e3e\u7684\u662f\u6b65\u6570\uff08n+m-2\uff09\u6240\u4ee5\u7a7a\u95f4\u4f1a\u591a\u4e00\u500d\u3002\n\n\u4e8e\u662f F[k][i][p]=max{F[k-1][i][p]+F[k-1][i][p-1]+F[k-1][i-1][p]+F[k-1][i-1][p-1]\uff1b\n\n## \u8fdb\u9636\uff1a\n\n\u4e8c\u7ef4DP\uff0c\u590d\u6742\u5ea6\u548c\u4e09\u7ef4\u4e00\u6837\uff0c\u4f46\u7a7a\u95f4\u5c11\u4e86**\u5f88\u591a**\n\n\u5982\u679c\u4f60\u5bf9\u80cc\u5305\u638c\u63e1\u5f97\u8db3\u591f\u4f18\u79c0\uff08\u4e0d\u50cf\u6211\u90a3\u4e48\u83dc\uff09\uff0c\u4f60\u5c31\u80fd\u7528\u80cc\u5305\u601d\u60f3\u6765\u964d\u7ef4\u3002\u600e\u4e48\u505a\u5230\u7684\u5462\uff1f\n\n\u6211\u4eec\u4ece\u4e09\u7ef4DP\u7684\u72b6\u6001\u8f6c\u79fb\u5f0f\u4e2d\u53d1\u73b0\u5b83\u53ea\u548c\u4e0a\u4e00\u6b65\u6709\u5173\uff0c\u8fd8\u53ea\u7275\u626f\u5230P\uff0cP-1\uff0c\u6ca1\u7528\u5230P+1.\u6240\u4ee5\u6211\u4eec\u4ece\u540e\u5411\u524d\u63a8\uff0c\u8fd9\u6837\u4f60\u73b0\u5728\u7528\u7684\u4e8c\u7ef4\u6570\u7ec4\u5c31\u662f\u4e0a\u4e00\u6b65\u7684\uff0c\u5bf9P\u8fdb\u884c\u8986\u76d6\u4e5f\u4e0d\u4f1a\u4ea7\u751f\u540e\u6548\u6027\u3002\n\n\u90a3\u91cd\u70b9\u6765\u4e86\u8fd9\u53c8\u5982\u4f55\u53bb\u91cd\u5462\uff1f\u5176\u5b9e\u4f60\u53ea\u9700\u8981\u4fdd\u8bc1 p > i \u5c31\u884c\u4e86\uff0c\u56e0\u4e3a\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6709\u91cd\u590d\u60c5\u51b5\u51fa\u73b0\uff0c\u81ea\u7136\u4e5f\u4e0d\u9700\u8981\u53bb\u91cd\u4e86\u3002\n\n### \u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<iomanip>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\n#include<queue>\n#include<stack>\n#include<vector>\n#include<map>\n#include<set>\n\n#define ll long long\n#define db double\n#define inf 0x7fffffff\n#define init inline int\n\nusing namespace std;\n\nint f[201][201];\nint v[201][201];\nint n,m;\n\ninit qr(){\n\tchar ch;\n\twhile((ch=getchar())<'0'||ch>'9');\n\tint res=ch^48;\n\twhile((ch=getchar())>='0'&&ch<='9')\n\t\tres=res*10+(ch^48);\n\treturn res;\n}\n\ninit max(int a,int b,int c,int d){\n\ta=a>b?a:b;\n\tc=c>d?c:d;\n\treturn a>c?a:c;\n}\n\nint main(){\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n    n=qr(),m=qr();\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tv[i][j]=qr();\n    for(int k=3;k<=n+m;k++)\n\t\tfor(int i=n;i>=1;i--)\n\t\t\tfor(int p=n;p>i;p--)\n\t\t\t\tf[i][p]=max(f[i][p],f[i-1][p-1],f[i-1][p],f[i][p-1]),\n\t\t\t\tf[i][p]+=v[i][k-i]+v[p][k-p];\n\tprintf(\"%d\\n\",f[n-1][n]);\n\treturn 0;\n}\n\n```\n\n\u4e0d\u592a\u60f3\u6781\u7aef\u538b\u884c\u4e86\uff08\u7801\u5b57\u7d2f\u4e86\uff09\uff0c\u4ee3\u7801\u98ce\u683c\u5c31\u8fd9\u6837\u4e86\uff0c\u4e0d\u559c\u52ff\u55b7\uff0c\u8c22\u8c22\u4e86\u3002\n\n\u7136\u540e\u89e3\u91ca\u4e00\u4e0b\u8f93\u51fa f[n-1][n] \u662f\u56e0\u4e3aj>i\u7684\u53bb\u91cd\u9700\u8981\u3002",
        "postTime": 1540287285,
        "uid": 111334,
        "name": "\u706f\u82af\u7cd5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "\u524d4\u9875\u9898\u89e3\u90fd\u6ca1\u6709\u7528\u6eda\u52a8\u6570\u7ec4\u7684..\u78b0\u5230\u6211\u51fa\u7684[\u5927\u6559\u5ba4\u4e2d\u4f20\u7eb8\u6761](https://www.luogu.org/problemnew/show/T35377)\u5168\u5f97\u70b8\u3002\n\n\u601d\u8def\u5176\u5b83\u9898\u89e3\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u5c31\u662f\u770b\u6210\u540c\u65f6\u4ece\u5de6\u4e0a\u5f00\u59cb\u4f20\u4e24\u4e2a\u7eb8\u6761\uff0c\u7528f(i,j,k)\u8868\u793a\u8fd9\u4e00\u6b65\u7684\u6a2a\u7eb5\u5750\u6807\u4e4b\u548c\u4e3ai\uff0c\u7b2c\u4e00\u5f20\u7eb8\u6761\u7eb5\u5750\u6807\u4e3aj\uff0c\u7b2c\u4e8c\u5f20\u7eb8\u6761\u7eb5\u5750\u6807\u4e3ak\uff08\u56e0\u4e3a\u8def\u5f84\u4e0d\u91cd\u5408\uff0c\u6240\u4ee5j\u2260k\uff0c\u4e0d\u59a8\u4ee4j<k\uff09\u3002\u53ef\u4ee5\u770b\u51fa\u6bcf\u8d70\u4e00\u6b65\u7eb8\u6761\u7684\u6a2a\u7eb5\u5750\u6807\u4e4b\u548c\u90fd\u4f1a\u52a0\u4e00\uff0c\u6240\u4ee5i\u5176\u5b9e\u5c31\u662f\u4f20\u9012\u7684\u6b21\u6570+2.\n\n\u6bcf\u4e2a\u72b6\u6001\u53ef\u4ee5\u7531\u4ee5\u4e0b4\u79cd\u60c5\u51b5\u8f6c\u79fb\u800c\u6765\uff1a\n\n1. \u7b2c\u4e00\u5f20\u7eb8\u6761\u7531\u4e0a\u9762\uff0c\u7b2c\u4e8c\u5f20\u7eb8\u6761\u7531\u4e0a\u9762\nf(i,j,k)=max{f(i,j,k),f(i-1,j-1,k-1)+a[j][i-j]+a[k][i-k]}\n\n2. \u7b2c\u4e00\u5f20\u7eb8\u6761\u7531\u4e0a\u9762\uff0c\u7b2c\u4e8c\u5f20\u7eb8\u6761\u7531\u5de6\u8fb9\nf(i,j,k)=max{f(i,j,k),f(i-1,j-1,k)+a[j][i-j]+a[k][i-k]}\n\n3. \u7b2c\u4e00\u5f20\u7eb8\u6761\u7531\u5de6\u8fb9\uff0c\u7b2c\u4e8c\u5f20\u7eb8\u6761\u7531\u4e0a\u9762\nf(i,j,k)=max{f(i,j,k),f(i-1,j,k-1)+a[j][i-j]+a[k][i-k]}\n\n4. \u7b2c\u4e00\u5f20\u7eb8\u6761\u7531\u5de6\u8fb9\uff0c\u7b2c\u4e8c\u5f20\u7eb8\u6761\u7531\u5de6\u8fb9\nf(i,j,k)=max{f(i,j,k),f(i-1,j,k)+a[j][i-j]+a[k][i-k]}\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u6bcf\u79cd\u8f6c\u79fb\u90fd\u662f\u5728\u4e00\u5b9a\u60c5\u51b5\u4e0b\u624d\u80fd\u53d1\u751f\u7684\uff08\u6ca1\u6709\u8d8a\u754c\uff0c\u800c\u4e14\u7eb8\u6761\u6ca1\u6709\u91cd\u5408\uff09\u3002\u7531\u4e8e\u4e00\u5f00\u59cb\u6570\u7ec4\u4e2d\u90fd\u662f0\uff0c\u4e0d\u8fdb\u884c\u8d8a\u754c\u5224\u65ad\u4e5f\u65e0\u59a8\uff0c\u4f46\u662f\u7eb8\u6761\u91cd\u5408\u7684\u5224\u65ad\u5fc5\u987b\u6709\uff0c\u5373\u53ea\u6709k-1>j\u65f6\u624d\u80fd\u7531\u7b2c3\u79cd\u60c5\u51b5\u8f6c\u79fb.\n\n### \u7136\u540e\u91cd\u70b9\u6765\u4e86\n\n\u672c\u9898\u89e3\u548c\u524d4\u9875\u9898\u89e3\uff08\u6ca1\u5f80\u540e\u9762\u7ffb\u4e86orz\uff09\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u7528\u4e86\u6eda\u52a8\u6570\u7ec4\u3002\u5176\u5b9e\u5c31\u662f\u56e0\u4e3a\u8f6c\u79fb\u65f6\u53ea\u4f1a\u7531f(i-1,x,y)\u8f6c\u79fb\u800c\u6765\uff0c\u5728\u6570\u7ec4\u4e2d\u7701\u53bb\u4e86i\u8fd9\u4e00\u7ef4\uff0c\u8282\u7ea6\u4e86\u4e00\u4e9b\u7a7a\u95f4\u3002\u9700\u8981\u6ce8\u610f\u7684\u5c31\u662f\u7531\u4e8e\u72b6\u6001\u90fd\u662f\u7531\u66f4\u5c0f\u7684j\u548c/\u6216k\u8f6c\u79fb\u800c\u6765\uff0cj\u548ck\u90fd\u9700\u8981\u5012\u5e8f\u679a\u4e3e\uff0c\u9632\u6b62\u72b6\u6001\u5728\u8f6c\u79fb\u4e4b\u524d\u88ab\u4fee\u6539\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include <fstream>\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\n/*\n\u8fd9\u4e00\u90e8\u5206\u662f\u7528\u6765\u65b9\u4fbf\u5730\u8f6c\u6362\u6807\u51c6io\u548c\u6587\u4ef6io\uff0c\n\u53ea\u9700\u5728#include <iostream>\u524d\u52a0\u4e0a//\u5c31\u53ef\u4ee5\u8f6c\u6362\u4e3a\u6587\u4ef6io\n*/\n\n#ifndef _GLIBCXX_IOSTREAM //\u8fd9\u4e2a\u5728iostream\u5934\u6587\u4ef6\u4e2ddefine\u4e86\uff0c\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u5c31\u662f\u5982\u679c\u6ca1\u6709#include <iostream>\u5219\u6267\u884c\u4e0b\u9762\u7684\u8bed\u53e5\nifstream cin(\"0.in\");\nofstream cout(\"0.out\");\n#endif\n\nint n,m,f[210][210],a[210][210];\n\nint main()\n{\n    int i,j,k;\n    \n    cin>>n>>m;\n    \n    for (i=1;i<=n;++i)\n    {\n        for (j=1;j<=m;++j)\n        {\n            cin>>a[i][j];\n        }\n    }\n    \n    f[1][2]=a[1][2]+a[2][1];\n    \n    for (i=4;i<n+m;++i)\n    {\n        for (j=min(i-2,n);j>=1;--j) //\u6ce8\u610f\u8981\u5012\u5e8f\u679a\u4e3ej\u548ck\n        {\n            for (k=min(i-1,n);k>j;--k)\n            {\n                if (j>1)  //\u8fd9\u91cc\u7684\u6761\u4ef6\u5224\u65ad\u8c8c\u4f3c\u662f\u4e0d\u9700\u8981\u7684\uff0c\u4f46\u6211\u89c9\u5f97\u52a0\u4e0a\u66f4\u597d\n                {\n                    f[j][k]=max(f[j][k],f[j-1][k]);\n                }\n                if (j>1&&k>1)\n                {\n                    f[j][k]=max(f[j][k],f[j-1][k-1]);\n                }\n                if (k-1>j)\n                {\n                    f[j][k]=max(f[j][k],f[j][k-1]);\n                }\n                f[j][k]+=a[j][i-j]+a[k][i-k];\n            }\n        }\n    }\n    \n    cout<<f[n-1][n];\n    \n    return 0;\n}\n```",
        "postTime": 1531113956,
        "uid": 49742,
        "name": "ouuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "\u611f\u89c9\u5e94\u8be5\u5bf92\u6761\u8def\u5f84\u8d70\u5230\u4e00\u4e2a\u70b9\uff08\u91cd\u590d\u70b9\uff09\u5904\u7406\u65b9\u6cd5\u4e0d\u61c2  \n\u4e3e\u4f8b\u4e00\u4e2a\u56db\u7ef4dp\u7684\u91cc\u7684\u505a\u6cd5\uff08\u4e09\u7ef4\u7b49\u89e3\u6cd5\u7684\u5927\u4f6c\u4e0d\u8981\u5632\u7b11\uff09  \n\n\u9996\u5148\uff0c\u8d77\u70b9\u5230\u7ec8\u70b9\u8d70\u4e24\u6b21\u4e0e\u9898\u610f\u662f\u7b49\u6548\u7684\u3002  \n\u56db\u4f4ddp\u5f88\u5bb9\u6613\u60f3\uff0c\u4f46\u5bf9\u4e8e\u5927\u4f6c\u9898\u89e3\u91cc\u91cd\u590d\u70b9\u7684\u5904\u7406\uff0c\u849f\u84bb\u5b9e\u5728\u662f\u6709\u70b9\u4e0d\u592a\u660e\u767d\n\n\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u60f3\uff0c2\u6761\u8def\u5f84\u4e0d\u76f8\u4ea4\uff0c\u90a3\u4e48\u80af\u5b9a**\u4e00\u6761\u5728\u4e0a\u9762\uff0c\u4e00\u6761\u5728\u4e0b\u9762**\uff0c\u5982\u56fe\u662f\u968f\u4fbf\u753b\u76842\u6761\u8def\u5f84\n\n![](https://cdn.luogu.com.cn/upload/pic/30960.png)\n\n$i,j$\u662f\u7ea2\u8272\u8def\u5f84\u7684\u5750\u6807\uff0c$k, l$\u662f\u9ed1\u8272\u8def\u5f84\u7684\u5750\u6807\n\n\u90a3\u4e48\u5bf9\u4e8e$k$\uff0c\u6211\u4eec\u53ea\u9700\u679a\u4e3e$[i+1, m]$,$l$\u53ea\u9700\u679a\u4e3e$[1,j-1]$\u5373\u53ef  \n\u8fd9\u6837\u5c31\u4e0d\u7528\u5224\u91cd\u5566\n\n\u7531\u4e8e\u6700\u540edp\u4e0d\u5230\u7ec8\u70b9\uff0c\u4f46\u5176\u5b9e\u9ed1\u8272\u8def\u5f84\u8d70\u5230\u7ec8\u70b9\u4e0a\u65b9\u7684\u70b9\uff0c\u7ea2\u8272\u8def\u5f84\u8d70\u5230\u7ec8\u70b9\u5de6\u8fb9\u7684\u70b9\u5c31\u662f\u7b54\u6848,\u5373`f[m-1][n][m][n-1]`\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n#define INF = 0x3f3f3f3f\n\nint a[51][51], f[51][51][51][51];\nint m, n;\n\nint max(int i, int j, int k, int l){\n    int m = max(i, j), n = max(k, l);\n    return max(m, n);\n}\n\nint main()\n{\n    cin >> m >> n;\n    for(int i = 1; i <= m; i++){\n        for(int j = 1; j <= n; j++)\n        {\n            cin >> a[i][j];\n        }\n    }\n    f[1][1][1][1] = 0; //garbage\n    for(int i = 1; i <= m; i++){\n        for(int j = 1; j <= n; j++){\n            for(int k = i+1; k <= m; k++){\n                for(int l = 1; l < j; l++){\n                    f[i][j][k][l] = max(\n                        f[i][j-1][k][l-1],\n                        f[i][j-1][k-1][l],\n                        f[i-1][j][k-1][l],\n                        f[i-1][j][k][l-1]\n                    )+a[i][j]+a[k][l];\n                }\n            }\n        }\n    }\n    cout << f[m-1][n][m][n-1] << endl;\n    return 0;    \n}\n```\n\n\n\n\n",
        "postTime": 1535461644,
        "uid": 86777,
        "name": "\u7136\u800c\u5df2\u7ecf",
        "ccfLevel": 0,
        "title": "P1006 \u4f20\u7eb8\u6761 \u9898\u89e3"
    },
    {
        "content": "\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\n\n\n\u6bcf\u4e2a\u70b9\u62c6\u6210\u5165\u548c\u51fa\uff0c\u5165\u5411\u51fa\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a\u8be5\u70b9\u6743\u503c\u7684\u8fb9\n\n\u518d\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3aINF\uff0c\u8d39\u75280\u7684\u8fb9(\u9009\u8fc7\u5c31\u4e0d\u518d\u6709\u8d21\u732e)\n\n\u6bcf\u4e2a\u70b9\u7684\u51fa\u5411\u53f3\u548c\u4e0b\u7684\u5165\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3aINF\u8d39\u7528\u4e3a0\u7684\u8fb9\n\n\u8d85\u7ea7\u6e90\u8fde(1,1)\u7684\u5165\u4e00\u6761\u5bb9\u91cf\u4e3a2\uff0c\u8d39\u75280\u7684\u8fb9\uff0c\u70b9(n,m)\u7684\u51fa\u8fde\u5411\u8d85\u7ea7\u6c47\uff0c\u5bb9\u91cfINF\uff0c\u8d39\u75280\n\n\n\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\n\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstring>\n#include<ctype.h>\n#include<cstdio>\n#include<queue>\n#define N 50020\n#define INF 2147483647\nusing namespace std;\nconst int S=50001;\nconst int T=50002;\ninline int read(){\n    int x=0,f=1;char c;\n    do c=getchar(),f=c=='-'?-1:f; while(!isdigit(c));\n    do x=(x<<3)+(x<<1)+c-'0',c=getchar(); while(isdigit(c));\n    return x*f;\n}\nqueue<int>q;\nint n,m,x,cost,top=1;\nint d[N],fir[N];\nbool b[N];\nstruct Edge{\n    int to,nex,k,v;\n    Edge(int _=0,int __=0,int ___=0,int ____=0):to(_),nex(__),k(___),v(____){}\n}nex[250005];\ninline int GetNum(int x,int y){\n    return (x-1)*n+y;\n}\ninline bool spfa(){\n    for(int i=0;i<=n*m*2;i++)\n        d[i]=-INF,b[i]=false;\n    d[T]=-INF;\n    d[S]=0;q.push(S);\n    while(!q.empty()){\n        int x=q.front();q.pop();\n        b[x]=false;\n        for(int i=fir[x];i;i=nex[i].nex)\n            if(nex[i].k && d[nex[i].to]<d[x]+nex[i].v){///\u6700\u5927\u8d39\u7528\n                d[nex[i].to]=d[x]+nex[i].v;\n                if(!b[nex[i].to]) b[nex[i].to]=true,q.push(nex[i].to);\n            }\n    }\n    return d[T]!=-INF;\n}\nint dfs(int x,int v){\n    if(x==T || !v){\n        cost=cost+v*d[T];\n        return v;\n    }\n    b[x]=true;\n    int tmp=0;\n    for(int i=fir[x];i;i=nex[i].nex)\n        if(!b[nex[i].to] && d[nex[i].to]==d[x]+nex[i].v && nex[i].k){\n            int f=dfs(nex[i].to,min(v,nex[i].k));\n            v-=f;nex[i].k-=f;nex[i^1].k+=f;tmp+=f;\n            if(!v) break;\n        }\n    if(!tmp) d[x]=-INF;\n    return tmp;\n}\ninline void Dinic(){\n    while(spfa()) dfs(S,INF);\n}\ninline void add(int x,int y,int k,int v){\n    nex[++top]=Edge(y,fir[x],k,v);\n    fir[x]=top;\n}\nint main(){\n    m=read();n=read();\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=n;j++){\n            x=read();\n            add(GetNum(i,j),GetNum(i,j)+n*m,1,x);\n            add(GetNum(i,j)+n*m,GetNum(i,j),0,-x);\n            add(GetNum(i,j),GetNum(i,j)+n*m,INF,0);\n            add(GetNum(i,j)+n*m,GetNum(i,j),0,0);\n            if(i+1<=m){\n                add(GetNum(i,j)+m*n,GetNum(i+1,j),INF,0);\n                add(GetNum(i+1,j),GetNum(i,j)+n*m,0,0);\n            }\n            if(j+1<=n){\n                add(GetNum(i,j)+m*n,GetNum(i,j+1),INF,0);\n                add(GetNum(i,j+1),GetNum(i,j)+n*m,0,0);\n            }\n        }\n    add(S,GetNum(1,1),2,0);add(GetNum(1,1),S,0,0);\n    add(GetNum(m,n)+n*m,T,INF,0);add(T,GetNum(m,n)+n*m,0,0);\n    Dinic();\n    printf(\"%d\",cost);\nreturn 0;\n}\n\n```",
        "postTime": 1513774472,
        "uid": 21682,
        "name": "Duan2baka",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u4e5f\u4e0e\u5176\u4ed6\u4eba\u4e00\u6837\u7528\u7684\u662f\u4e09\u7ef4\u6570\u7ec4\uff0c\u5177\u4f53\u4e3a\u4ec0\u4e48\uff0c\u6211\u89c9\u5f97\u5176\u4ed6\u9898\u89e3\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u4f46\u662f\u6211\u7684\u65b9\u6cd5\u4e0e\u4ed6\u4eec\u4e0d\u76f8\u540c\uff0c\u4e5f\u7b97\u662f\u4e3a\u5927\u5bb6\u63d0\u4f9b\u4e00\u4e2a\u65b0\u7684\u601d\u8def\u3002\u5f53\u7136\uff0c\u6211\u4e5f\u662f\u8003\u8651\u4ece\u5de6\u4e0a\u89d2\u540c\u65f6\u4f20\u51fa2\u5f20\u7eb8\u6761\uff0c\u4e3a\u4e86\u4f7f\u8def\u5f84\u4e0d\u91cd\u590d\uff0c\u6211\u662f\u8fd9\u6837\u5904\u7406\u7684\uff0c\u6bcf\u6b21\u4f7f\u5f97x2<x1 \u90a3\u4e48\u4e24\u4e2a\u70b9\u4e00\u5b9a\u4e0d\u4f1a\u91cd\u590d\uff0c\u4f46\u662f\uff0c\u8003\u8651\u5230\u9012\u63a8\u65f6\u5019\uff0c\u53ef\u80fd\u6709\u8fd9\u6837\u7684\u60c5\u51b5\u4e24\u4e2a\u70b9\u540c\u65f6\u4ece\u540c\u4e00\u4e2a\u70b9\u8f6c\u79fb\u8fc7\u6765\uff08\u5373\u4ece\u4e00\u4e2ax1-1==x2\uff09\u7684\u70b9\u8f6c\u79fb\u8fc7\u6765\uff0c\u56e0\u4e3a\u6211\u4eec\u4e4b\u524d\u7b97\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u70b9\u6ca1\u6709\u7b97\u8fc7\uff0c\u6240\u4ee5\u8fd9\u4e2a\u72b6\u6001\u7684\u503c\u5c31\u662f0\uff0c\u4e0d\u5f71\u54cd\u8ba1\u7b97\u3002\u4f46\u662f\u4e24\u4e2a\u70b9\u5728\u7ec8\u70b9\u5904\u6c47\u5408\uff0c\u6240\u4ee5\u8981\u5199\u6210ans[m+n-1][n][n-1] \u6211\u76f8\u4fe1\uff0c\u5f53\u6570\u636e\u8db3\u591f\u5927\u7684\u65f6\u5019\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6548\u7387\u662f\u5f88\u9ad8\u7684\u3002\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <algorithm>\nusing namespace std;\nint a[60][60];\nint ans[120][60][60];\nint main(int argc, char *argv[]) {\n\tint m,n,tem;scanf(\"%d %d\",&m,&n);\n\tfor (int i=1;i<=m;i++)\n\t\tfor (int j=1;j<=n;j++) scanf(\"%d\",&a[i][j]);\n\tfor (int step=3;step<=m+n-1;step++)\n\t\tfor (int x1=1;x1<=n && x1<=step-1;x1++)\n\t\t\tfor (int x2=1;x2<=n && x2<=step-1 && x2<x1;x2++){\n\t\t\t\ttem=max(ans[step-1][x1][x2],ans[step-1][x1-1][x2-1]);\n\t\t\t\ttem=max(tem,ans[step-1][x1][x2-1]);\n\t\t\t\ttem=max(tem,ans[step-1][x1-1][x2]);\n\t\t\t\tans[step][x1][x2]=tem+a[step-x1][x1]+a[step-x2][x2];\n\t\t\t}\n\tprintf(\"%d\",ans[m+n-1][n][n-1]);\n}\n```\n\n\n------------\n# \u8bf4\u53e5\u5b9e\u5728\u8bdd\uff0c\u9996\u9875\u4e09\u4e2a\u9898\u89e3\u5728\u66f4\u5e7f\u6cdb\u7684\u60c5\u51b5\u4e0b\u662f\u9519\u7684\uff01\uff01\uff01\n\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u8bf4\u5462\uff1f\u5206\u6790\u4e00\u4e0b\uff1f\n\u6211\u4eec\u91cd\u65b0\u770b\u7b2c\u4e00\u79cd\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <algorithm>\nusing namespace std;\nint a[60][60];\nint ans[120][60][60];\nint main(int argc, char *argv[]) {\n\tint m,n,tem;scanf(\"%d %d\",&m,&n);\n\tfor (int i=1;i<=m;i++)\n\t\tfor (int j=1;j<=n;j++) scanf(\"%d\",&a[i][j]);\n\tfor (int step=3;step<=m+n-1;step++)\n\t\tfor (int x1=1;x1<=n && x1<=step-1;x1++)\n\t\t\tfor (int x2=1;x2<=n && x2<=step-1 && x2<x1;x2++){\n\t\t\t\ttem=max(ans[step-1][x1][x2],ans[step-1][x1-1][x2-1]);\n\t\t\t\ttem=max(tem,ans[step-1][x1][x2-1]);\n\t\t\t\ttem=max(tem,ans[step-1][x1-1][x2]);\n\t\t\t\tans[step][x1][x2]=tem+a[step-x1][x1]+a[step-x2][x2];\n\t\t\t}\n\tprintf(\"%d\",ans[m+n-1][n][n-1]);\n}\n```\n\u518d\u770b\u6392\u540d\u7b2c\u4e00\u7684\u4ee3\u7801\n\n\n------------\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#define maxn 55\nusing namespace std;\nint f[2 * maxn][maxn][maxn];\nint a[maxn][maxn];\nint n,m;\n\nint max_ele(int a,int b,int c,int d){\n\tif (b>a)\n\t\ta = b;\n\tif (c>a)\n\t\ta = c;\n\tif (d>a)\n\t\ta = d;\n\treturn a;\n}\n\nint main(){\n\tcin >> n >> m;\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=m;j++)\n\t\t\tcin >> a[i][j];\n\tfor (int k=1;k<=n+m-1;k++)\n\t\tfor (int i=1;i<=n;i++)\n\t\t\tfor (int j=1;j<=n;j++){\n\t\t\t\tif (k-i+1<1 || k-j+1<1) //\u8fd9\u91cc\u662f\u5224\u65ad\u7eb5\u5750\u6807\u7684\u5408\u6cd5\u6027\uff0c\u5982\u679c\u7eb5\u5750\u6807\u4e0d\u5408\u6cd5\u90a3\u5c31\u8df3\u8fc7\u53bb\n\t\t\t\t\tcontinue;\n\t\t\t\t f[k][i][j] = max_ele(f[k-1][i][j],f[k-1][i-1][j-1],f[k-1][i][j-1],f[k-1][i-1][j]) + a[i][k-i+1] + a[j][k-j+1];\n\t\t\t\tif (i==j) //\u5224\u65ad\u91cd\u5408\u8def\u5f84\n\t\t\t\t\tf[k][i][j]-=a[i][k-i+1];\n\t\t\t}\n\n\tcout << f[n+m-1][n][n] << endl;\n\treturn 0;\n}\n```\n\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\uff0c\u5f88\u591a\u4eba\u90fd\u7528\u5982\u679ci==j\u90a3\u4e48\u51cf\u53bb\u4e00\u4e2aa[i][k-i+1]\n\u8fd9\u6837\u771f\u7684\u8003\u8651\u5468\u5230\u4e86\u5417\uff1f\n\n\u6211\u4eec\u601d\u8003\uff0c\u65e0\u8bba\u54ea\u7bc7\u9898\u89e3\uff0c\u5728\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7684\u65f6\u5019\u6709\u8fd9\u6837\u4e48\u4e00\u6761f[k-1][i-1][j]\u4f46\u662f \u5982\u679ci-1==j\n\n\u4e0d\u5c31\u8bf4\u660e\u4e86\u8be5\u72b6\u6001\u662f\u4ece\u4e24\u4e2a\u91cd\u5408\u7684\u70b9\u8f6c\u79fb\u8fc7\u6765\u7684\u5417\uff1f\u8fd9\u6837\u4e0e\u540c\u4e00\u4e2a\u70b9\u8d70\u4e24\u6b21\u4e0d\u662f\u77db\u76fe\u4e86\u5417\uff1f\n\n\u4e3a\u4ec0\u4e48\u6d4b\u8bd5\u6570\u636e\u5374\u53ef\u4ee5\u901a\u8fc7\u5462\uff1f\n\n\u6211\u4eec\u9677\u5165\u4e86\u6df1\u6df1\u7684\u601d\u8003\u3002\n\n\u5f53\u7136\uff0c\u5728\u6240\u6709\u4eba\u7684\u7231\u5fc3\u503c\u662f\u6b63\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u79cd\u65b9\u6cd5\u663e\u7136\u6210\u7acb\uff0c\u56e0\u4e3a\u5728\u4e0a\u8ff0\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679ci-1==j\u90a3\u4e48f[k-1][i-1][j]\u6c38\u8fdc\u5c0f\u4e8e\u53e6\u5916\u7684\u4e09\u79cd\u60c5\u51b5\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\u62ff\u6837\u4f8b\u4e3e\u4f8b\u3002\n```\n3 3\n0 3 9\n2 8 5\n5 7 0\n```\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\n\u8003\u8651\u8d70\u5230\uff082\uff0c3\uff09\u548c\uff083\uff0c2\uff09\u968f\u4fbf\u53d6\u4e09\u4e2a\u72b6\u6001\u4e2d\u7684\u4e00\u4e2a\uff1a\n\n\uff080+3+9\uff09+\uff080+2+8\uff09\n\n\u4f46\u662ff[k-1][i-1][j]\u5462\uff1f\n\n\uff080+3+8\uff09+\uff080+2+8\uff09-8=\n\uff080+3+0\uff09+\uff080+2+8\uff09\u7531\u4e8e\u6b63\u6574\u6570 \u90a3\u4e489\u4e00\u5b9a\u5927\u4e8e0 \u6240\u4ee5\u8bf4\u8fd9\u79cd\u60c5\u51b5\u6c38\u8fdc\u5c0f\u4e8e\u5176\u4ed6\u7684\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u5728\u6b63\u6570\u6761\u4ef6\u4e0b\uff0c\u8be5\u60c5\u51b5\u4e0d\u53ef\u80fd\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u60c5\u51b5\u3002\n\n\u7b49\u7b49\uff0c\u4f46\u5728\u7231\u5fc3\u503c\u662f\u8d1f\u6570\u7684\u60c5\u51b5\u5462\uff1f\u9519\u4e86\uff01\u6211\u4eec\u7a0d\u5fae\u6539\u52a8\u4e00\u4e0b\u6570\u636e\n\n```cpp\n3 3\n0 3 -10\n2 8 5\n-19 7 0\n```\n\u7b2c\u4e8c\u6bb5\u4ee3\u7801\u5f97\u51fa\u7684\u7b54\u6848\u662f25\n\u800c\u6211\u7684\u4ee3\u5356\u5f97\u51fa\u7684\u7b54\u6848\u662f15\n\n\u800c\u901a\u8fc7\u7b14\u7b97\u6a21\u62df\uff0c\u6211\u7684\u7b54\u6848\u662f\u5bf9\u7684\uff0c\u56e0\u4e3a\u6b64\u65f6\uff0c\u7b2c\u4e8c\u6bb5\u4ee3\u7801\u5c31\u662f\u4ecef[k-1][i-1][j]\u8f6c\u79fb\u8fc7\u6765\u7684\uff0c\u4f20\u5230\u4e86\u540c\u4e00\u4e2a\u540c\u5b66\uff0c\u4e0e\u9898\u610f\u77db\u76fe\u3002\n\n\n\n------------\n\u4e3a\u4ec0\u4e48\u8981\u53d1\u8fd9\u7bc7\u9898\u89e3\uff0c\u4e0d\u662f\u8bf4\u660e\u6211\u6709\u591a\u5389\u5bb3\uff0c\u800c\u662f\u5e0c\u671b\u5927\u5bb6\u5bf9\u4ee3\u7801\u591a\u601d\u8003\uff0c\u627e\u51fa\u6f0f\u6d1e\u3002\u6211\u6ca1\u6709\u4efb\u4f55\u5192\u72af\u9996\u9875dalao\u7684\u60f3\u6cd5\uff0c\u8bf4\u4e0d\u5b9a\u4ed6\u4eec\u4e5f\u8003\u8651\u5230\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f46\u65e9\u65e9\u8003\u8651\u5230\u6b63\u6574\u6570\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u6ca1\u6709\u5728\u9898\u89e3\u91cc\u8bf4\u660e\uff0c\u4f46\u662f\u5982\u679c\u4f60\u662f\u4e00\u4e2a\u840c\u65b0\uff0c\u5374\u5f88\u5bb9\u6613\u88ab\u8bef\u5bfc\uff0c\u56e0\u4e3a\u52a8\u6001\u89c4\u5212\u4e2d\u7684\u8fb9\u754c\u6761\u4ef6\u6709\u65f6\u5019\u662f\u6709\u51b3\u5b9a\u6027\u4f5c\u7528\u7684\u3002\u4e00\u5b9a\u8981\u601d\u8003\u4ed6\u4eec\u4ee3\u7801\u91cc\u6ca1\u6709\u8bf4\u6e05\u7684\u90a3\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff01\u591a\u601d\u8003\uff0c\u6562\u4e8e\u8d28\u7591\uff0c\u662f\u79d1\u5b66\u9053\u8def\u7684\u5fc5\u7ecf\u4e4b\u8def\uff01\n",
        "postTime": 1573027129,
        "uid": 73409,
        "name": "josh00",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "Well Well Well\n\n\u4e0d\u77e5\u9053\u5927\u5bb6\u6709\u6ca1\u6709\u89c1\u8fc7\u6211\uff1f\u6211\u66fe\u5728\u51e0\u9053DP\u9898\u4e0b\u53d1DFS\u9898\u89e3\u2026\u2026\n\n\u8fd9\u6b21\u5f53\u7136\u8fd8\u662f\u8fd9\u6837\u5566\uff01\n\n\u8fd9\u6b21\u662f\u53d7\u5230\u4e86P1004\u7684[@\u6211\u5728\u5b66\u4e60](https://www.luogu.org/space/show?uid=42758)\u5927\u4f6c\u7684\u542f\u793a\uff08~~\u57fa\u672c\u4e00\u6837~~\uff09\u4ece\u800c\u6253\u51fa\u4e86\u8fd9\u7bc7DFS\u9898\u89e3\n\n\u5176\u5b9e\u5f88\u591aDP\u6570\u636e\u8303\u56f4\u90fd\u4e0d\u592a\u5927\uff0c\u6bd5\u7adf\u672c\u8eab\u5feb\u4e0d\u5230\u54ea\u91cc\u53bb\uff0c\u4e00\u822c\u5c31n\u00b2\u3002\u7136\u800c\u8bb0\u5fc6\u5316\u641c\u7d22\u4e5f\u8fd9\u4e48\u5feb\u2026\u2026\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\n#include<iomanip>\n#include<algorithm>\n#include<ctime>\n#define ll long long//\u5b9a\u4e49\u4e00\u4e0bll\u8868\u793along long\n#define ld long double\nusing namespace std;\nll read()//\u5feb\u901f\u8bfb\u5165\n{\n\tchar c=getchar();\n\tll s=0;\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile(c>='0'&&c<='9')\n\t{\n\t\ts=s*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn s;\n}\nll n,m,ans[52][52][52][52],a[52][52];//ans\u8868\u793a\u7eb8\u6761\u4f20\u5230x1y1\u548cx2y2\u7684\u624b\u4e0a\uff08\u6ce8\u610f\u4e00\u4e0b\u7eb8\u6761\u5f80\u56de\u4f20\u53ef\u4ee5\u770b\u505a\u6b63\u7740\u4f20\uff0c\u4e00\u6837\u7684\uff01\uff09\nll f(ll x1,ll y1,ll x2,ll y2)//DFS\n{\n\tif(x1==n&&x2==n&&y1==m&&y2==m)return 0;//\u5230\u7ec8\u70b9\u5c31\u8fd4\u56de\u4e86\n\tif(ans[x1][y1][x2][y2]!=-1)return ans[x1][y1][x2][y2];//\u5982\u679c\u8fd9\u4e24\u4e2a\u70b9\u641c\u8fc7\u4e86\u5c31\u8fd4\u56de\u5427\uff08\u526a\u679d\uff09\uff0c\u56e0\u4e3a\u6700\u4f18\u89e3\u5df2\u7ecf\u5f97\u5230\u4e86\uff0c\u81ea\u5df1\u7406\u89e3\u4e00\u4e0b~\n\tll kkk=0;\n\tif(x1<n&&x2<n)//\u5224\u65ad\u662f\u5426\u5230\u8fb9\u754c\n\t{\n\t\tif(a[x1+1][y1]!=-1&&a[x2+1][y2]!=-1)kkk=max(kkk,f(x1+1,y1,x2+1,y2)+a[x1+1][y1]+a[x2+1][y2]-a[x1+1][y1]*(x1==x2&&y1==y2));//DFS\uff0c\u540e\u9762\u2018-\u2019\u540e\u7684\u5224\u65ad\u662f\u5426\u8d70\u5230\u4e86\u4e00\u4e2a\u70b9\u4e0a\uff0c\u5982\u679c\u8d70\u5230\u4e00\u4e2a\u70b9\u4e0a\u5c31\u53bb\u91cd\n//\uff08\u8c8c\u4f3c\u4e0d\u80fd\u8d70\u5230\u4e00\u4e2a\u70b9\u4e0a\u6765\u7740\u2026\u2026\u4e0d\u8fc7\u6211\u597d\u50cf\u8fc7\u4e86\u2026\u2026\u4f60\u4eec\u81ea\u5df1\u770b\u7740\u6539\u6539\u5427\uff09\u4e0b\u540c\n\t}\n\tif(y1<m&&y2<m)\n\t{\n\t\tif(a[x1][y1+1]!=-1&&a[x2][y2+1]!=-1)kkk=max(kkk,f(x1,y1+1,x2,y2+1)+a[x1][y1+1]+a[x2][y2+1]-a[x1][y1+1]*(x1==x2&&y1==y2));\n\t}\n\tif(x1<n&&y2<m)\n\t{\n\t\tif(a[x1+1][y1]!=-1&&a[x2][y2+1]!=-1)kkk=max(kkk,f(x1+1,y1,x2,y2+1)+a[x1+1][y1]+a[x2][y2+1]-a[x1+1][y1]*(x1+1==x2&&y1==y2+1));\n\t}\n\tif(y1<m&&x2<n)\n\t{\n\t\tif(a[x1][y1+1]!=-1&&a[x2+1][y2]!=-1)kkk=max(kkk,f(x1,y1+1,x2+1,y2)+a[x1][y1+1]+a[x2+1][y2]-a[x1][y1+1]*(x1==x2+1&&y1+1==y2));\n\t}\n\tans[x1][y1][x2][y2]=kkk;\n\treturn kkk; \n}\nint main()\n{\n\tn=read();\n\tm=read();\n\tmemset(ans,-1,sizeof(ans));\n\tfor(ll i=1;i<=n;i++)\n\t{\n\t\tfor(ll o=1;o<=m;o++)\n\t\t{\n\t\t\ta[i][o]=read();\n\t\t}\n\t}\n\tcout<<f(1,1,1,1);//\u7b80\u6d01\u660e\u4e86~~~\n}\n```\n\u8003\u573a\u4e0a\u60f3\u4e0d\u51fa\u600e\u4e48DP\u65f6\u8bd5\u8bd5DFS\u5427\uff01\u7528\u597d\u8bb0\u5fc6\u5316\u526a\u679d\u540e\u65f6\u95f4\u5927\u5e45\u63d0\u5347\uff0c\u8fd8\u6709\u53ef\u80fd\u76f4\u63a5AC\u5662\uff01",
        "postTime": 1540829136,
        "uid": 48949,
        "name": "\u963f\u5c14\u8428\u65af",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problemnew/show/P1006)\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5750\u6807**\u5148\u884c\u540e\u5217**\u3002\n\n\u8bbe A = (1,  1) B  = (m, n)\n\n\u4e0d\u8003\u8651\u4e0d\u80fd\u4f20\u76f8\u540c\u540c\u5b66\n\n\u4eceA\u5230B\u518d\u4eceB\u5230A $\\sim$ \u4eceA\u540c\u65f6\u8003\u8651\u4e24\u6761\u8def\u5230B\n\n\u8bbe $i$\u4e3aA\u5230B\u7ebf\u8def1\u7684\u884c\u53f7\uff0c$j$\u4e3aA\u5230B\u7ebf\u8def2\u7684\u884c\u53f7\uff0c$k$\u4e3a\u5f53\u524d\u884c\u5217\u4e4b\u548c\n\n\u5bf9\u4e8e\u7ebf\u8def1\uff0c$(i, k-i)$ \u53ef\u4ece $(i-1, k-i)$ \u548c$(i, k-i-1)$ \u63a8\u5f97\n\n\u5bf9\u4e8e\u7ebf\u8def2\uff0c$(j, k-j)$ \u53ef\u4ece $(j-1, k-j)$ \u548c$(j, k-j-1)$ \u63a8\u5f97\n\n\u6545\u5bf9\u4e8e$dp(i, j, k)$\u6709\u56db\u79cd\u60c5\u51b5\u3002\n\n$dp(i, j, k) = a[i][k-i] + a[j][k -j] + max\\{ dp(i, j, k-1), dp(i-1,j-1,k-1), dp(i-1,j,k-1), dp(i-1,j-1,k-1)\\} $\n\n\u73b0\u5728\u6765\u8003\u8651\u91cd\u5408\u3002\u7ea2\u7eff\u4e3a\u4e24\u6761\u8def\u7ebf\uff0c\u84dd\u8272\u4e3a\u76f8\u4ea4\u90e8\u5206\u3002\n\n![20180612prev](https://cdn.luogu.com.cn/upload/pic/21013.png)\n\n\u7ecf\u8fc7\u53d8\u6362\uff0c\u53ef\u4ee5\u53d8\u6210\u8fd9\u6837\u3002\n\n![20180612prev](https://cdn.luogu.com.cn/upload/pic/21014.png)\n\n\u73b0\u5728\u95ee\u9898\u4e3b\u8981\u662f\u89e3\u51b3\u84dd\u8272\u683c\u5b50\uff0c\u7531\u4e8e\u4e24\u6761\u8def\u7ebf\u89c4\u5212\u540c\u65f6\u4ece\u5de6\u4e0a\u89d2\u5f00\u59cb\uff0c\u4ee3\u7801\u5b9e\u73b0\u65f6`k->i->j`\u4e09\u91cd\u5faa\u73af\u3002\n\n\u82e5$i=j$\u90a3\u4e48\u5c31\u662f\u6709\u91cd\u53e0\uff0c\u6b64\u65f6\u53ea\u8981\u628a\u591a\u7684\u4e00\u6b21\u51cf\u6389\u30022\n\n$\\because$ \u5bf9\u4e8e\u67d0\u4e00\u6761\u8def\u7ebf\u6765\u8bf4\uff0c\u8d70\u4e86\u4e00\u4e2a\u4ef7\u503c\u4e3a$0$\u7684\u683c\u5b50\u7684\u8def\u7ebf\u3002\n\n\u53c8 $\\because a_{i,j} \\ge 0 $\n\n$\\therefore$ \u5fc5\u5b9a\u6ca1\u6709\u4e00\u79cd\u4e0d\u76f8\u4ea4\u7684\u8def\u7ebf\u89c4\u5212\u6bd4\u8d77\u66f4\u52a3\u3002\n\n$\\therefore$ \u6b64\u91cd\u53e0\u7684\u65b9\u6848\u4e0d\u4f1a\u662f\u6700\u4f18\u65b9\u6848\uff0c\u5fc5\u5b9a\u4f1a\u5728\u52a8\u89c4\u4e2d\u820d\u5f03\u3002\n\n\u6bd4\u5982\u7eff\u8272\u8def\u7ebf\u53ef\u4ee5\u662f$(2,1)(3,1) (2,2)(3,3)(4,3)(5,3)(6,3)(6,4)(6,5)$\n\n```cpp\ncin >> m >> n;\nfor (register int i = 1; i <= m; ++i){\n    for (register int j = 1; j <= n; ++j){\n        cin >> a[i][j];\n    }\n}\nfor (register int k = 3; k <= m + n; ++k){\n    t1 = min(k-1, m);\n    for (register int i = 1; i <= t1; ++i){\n        t2 = min(k-1, m);\n        for (register int j = 2; j <= t2; ++j){\n            dp[i][j][k] = max(\n                dp[i-1][j][k-1],\n                dp[i-1][j-1][k-1],\n                dp[i][j-1][k-1],\n                dp[i][j][k-1]\n            ) + a[i][k-i] + a[j][k-j];\n            if (i == j) dp[i][j][k] -= a[i][k-i];\n       }\n    }\n}\ncout << dp[m][m][m+n];\n```\n\n",
        "postTime": 1528861680,
        "uid": 9903,
        "name": "Chaigidel",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u591a\u7ebf\u7a0bdp\u95ee\u9898\u7684a[i][0]\u548ca[0][j]\u5fc5\u987b\u4e3a0\uff0c\u6240\u4ee5\u521d\u59cb\u70b9\u4ecea[1][1]\u5f00\u59cb\u3002 \n\u9898\u76ee\u8981\u6c42\u4ece1,1\u5230m,n\u4e24\u6761\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84(\u56e0\u4e3a\u6bcf\u4e2a\u540c\u5b66\u6700\u591a\u53ea\u5e2e\u4e00\u6b21\u5fd9\uff0c\u6240\u4ee5\u4e24\u6761\u8def\u5f84\u4e0d\u4f1a\u76f8\u4ea4)\u7684\u6743\u503c\u548c\u6700\u5927\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u6709\u4e24\u4e2a\u4eba\u540c\u65f6\u4ece1,1\u5411m,n\u8d70\uff0c\u4e24\u4eba\u4e0d\u76f8\u4ea4\u3002\u7531\u4e8e\u4e24\u4eba\u53ef\u4ee5\u8d70\u6240\u6709\u7684\u683c\u5b50\uff0c\u6211\u4eec\u5206\u522b\u7528\uff0cx1,y1,x2,y2\u6765\u8868\u793a\u67d0\u4e00\u65f6\u523b\u4e24\u4eba\u7684\u4f4d\u7f6e\u3002\u6240\u4ee5\u6211\u4eec\u8981\u7528\u4e00\u4e2a\u56db\u7ef4\u6570\u7ec4\u6765\u8868\u793a\u51fa\u6240\u6709\u7684\u72b6\u6001\u3002 \n\u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0\n![](https://cdn.luogu.com.cn/upload/pic/22787.png)\n\u5982\u56fe\u6240\u793a\uff1a\u7531\u4e8e\u53ea\u80fd\u5411\u4e0b\u6216\u8005\u5411\u53f3\u8d70\uff0c\u6240\u4ee5(x1,y1),(x2,y2)\u5206\u522b\u53ef\u4ee5\u6709\u56fe\u4e2d\u9ec4\u8272\u90e8\u5206\u8d70\u4e00\u6b65\u5f97\u5230\uff0c\u4ece\u4e0a\u4e00\u6b65\u5230\u8fd9\u4e00\u6b65\u603b\u5171\u67094\u79cd\u60c5\u51b5\u3002\u6240\u4ee5\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a(a[][]\u5b58\u6743\u503c) \ndp[x1][y1][x2][y2]=max(dp[x1][y1-1][x2][y2-1],dp[x1][y1-1][x2-1][y2],dp[x1-1][y1][x2][y2-1],dp[x1-1][y1][x2-1][y2])+a[x1][y1]+a[x2][y2];\n\n\u53c8\u56e0\u4e3a\uff0c\u6bcf\u4e2a\u540c\u5b66\u6700\u591a\u53ea\u80fd\u5e2e\u5fd9\u4e00\u6b21\uff0c\u6240\u4ee5\u5f53\u4e24\u4eba\u8d70\u5230\u540c\u4e00\u70b9\u65f6\uff0c\u53ea\u80fd\u7ed9\u4e00\u4e2a\u4eba\u52a0\u8fd9\u4e2a\u70b9\u7684\u6743\u503c\uff0c\u4ee3\u7801\u53ef\u4ee5\u8fd9\u4e48\u6765\u5199\uff1a \n\u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0\n![](https://cdn.luogu.com.cn/upload/pic/22788.png)\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n^4)\uff1b \n\u4f18\u5316: \n\u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0 \n![](https://cdn.luogu.com.cn/upload/pic/22789.png)\n\u4ece(1,1)\u51fa\u53d1\u8d70\u6070\u597d\u9700\u89815\u6b65\u80fd\u5230\u8fbe\u7684\u70b9 \n\u4ed6\u4eec\u90fd\u5728\u4e00\u676145\u5ea6\u7684\u659c\u7ebf\u4e0a\uff0c\u4e14\u6ee1\u8db3x+y=7\u3002 \n\u66f4\u666e\u904d\u7684\uff0c\u5bf9\u4e8e\u6240\u6709\u6b65\u6570\u4e3as\u53ef\u4ee5\u5230\u8fbe\u7684\u5750\u6807\uff0cx+y=s+2\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u8d70\u7684\u6b65\u6570\u6765\u5212\u5206\u9636\u6bb5\uff0c\u901a\u8fc7\u4e0d\u540c\u7684\u6b65\u6570\uff0c\u628a\u8fd9\u4e2a\u9898\u76ee\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u4e0d\u540c\u7684\u9636\u6bb5\u3002\u6700\u540e\u4e00\u4e2a\u9636\u6bb5\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u70b9:(n,m)\u3002 \n\u901a\u8fc7\u7b80\u5316\u5047\u8bbe\u6240\u8d70\u6b65\u6570k,k=x1+y1=x2+y2 \n\u4f18\u5316\u65b9\u6848\u6709\u4e24\u79cd:\n\n\u53ef\u77e5x1+y1=x2+y2,\u6240\u4ee5y2=x1+y1-x2;\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u628adp[x1][y1][x2][y2]\u538b\u7f29\u6210dp[x1][y1][x2],\u6700\u540e\u7684y2\u901a\u8fc7\u53ef\u4ee5\u5f97\u51fa\uff0c\u80fd\u591f\u4f7f\u65f6\u95f4\u590d\u6742\u5ea6\u5c06\u4e3aO(n^3)\uff1b\n\u6211\u4eec\u4ee4k\u8868\u793a\u8d70\u8fc7\u7684\u6b65\u6570\uff0c\u6240\u4ee5\u6709x1+y1=k,x2+y2=k(\u521d\u59cb\u65f6k=1+1);\u77e5\u9053\u4e86k,x1,x2,\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053y1,y2\u4e86\u3002\u6240\u4ee5\u72b6\u6001\u53ef\u4ee5\u964d\u4f4e\u4e3a3\u7ef4\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a \ndp[k][x1][x2]=max(dp[k-1][x1-1][x2],dp[k-1][x1-1][x2-1],dp[k-1][x1][x2],dp[k-1][x1][x2-1])+a[x1][k-x1]+a[x2][k-x2];\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=55;\nint f[maxn][maxn][maxn][maxn];\nint a[maxn][maxn];\nint MAX(int a,int b,int c,int d)\n{\n\treturn max(max(a,b),max(c,d));\n}\nint main() {\n\tint m,n;\n\tcin>>m>>n;\n\tfor(int i=1; i<=m; i++)\n\t\tfor(int j=1; j<=n; j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t}\n\tint x1,y1,x2,y2;\n\tfor(int x1=1;x1<=m;x1++)\n\t    for(int y1=1;y1<=n;y1++)\n\t\t    for(int x2=1;x2<=m;x2++)\n\t\t\t    {\n\t\t\t    \ty2=x1+y1-x2;\n\t\t\t    \tif(y2<=0)\n\t\t\t    \tcontinue;\n\t\t\t    \tf[x1][y1][x2][y2]=MAX(f[x1-1][y1][x2-1][y2],f[x1-1][y1][x2][y2-1],f[x1][y1-1][x2][y2-1],f[x1][y1-1][x2-1][y2])+a[x1][y1]+a[x2][y2];\n\t\t\t    \tif(x1==x2&&y1==y2)\n\t\t\t    \tf[x1][y1][x2][y2]-=a[x1][y1];\n\t\t\t\t\t}\n\tcout<<f[m][n][m][n];\t\n}\n```",
        "postTime": 1531190382,
        "uid": 51674,
        "name": "calix_x",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "~~\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3~~\n\n\u597d\u50cf\u53ef\u4ee5\u7528\u8d39\u7528\u6d41\u6765\u505a\uff0c\u4f46\u662f\uff0c\u6211\u84bb\u554a \uff080~0\uff09\n\n### \u6240\u4ee5\u8fd9\u9053\u9898\u5c31\u7528DP\u6765\u505a\u4e86\uff01\uff01\uff01\n\n\u5206\u6790\u4e00\u4e0b\u9898\u610f\uff1a\n\n\u4e0d\u7ba1\u4ed6\u4f20\u8fc7\u6765\u4f20\u8fc7\u53bb\u8fd9\u4e9b\u82b1\u91cc\u80e1\u54e8\u7684\u64cd\u4f5c\uff0c\u5c31\u662f\u4e00\u4e2a\u5728\uff081,1\uff09\u70b9\u7684\u4eba\u53ea\u5141\u8bb8\u524d\u8fdb\uff0c\u4e0d\u5141\u8bb8\u540e\u9000\u7684\u5411\u5bf9\u89d2\u7ebf\uff08m,n\uff09\u7684\u4eba\u4f20\u4e24\u5f20\u7eb8\u6761\u5457\u3002\n\n\u4e00\u770b\u6570\u636e\u8303\u56f4\uff0c\u624d50 \u9996\u5148\u60f3\u5230\u6700\u66b4\u529b\u7684\u89e3\u6cd5\uff1a\u8bbe`dp[i][j][k][l]`\u662f\u7b2c\u4e00\u5f20\u7eb8\u6761\u5230\u8fbe(i,j)\uff0c\u7b2c\u4e8c\u5f20\u5230\u8fbe(k,l)\u65f6\u6700\u5927\u6743\u503c\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u7684\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662f\n```\ndp[i][j][k][l] = map[i][j] + map[k][l] + max(\n            dp[i - 1][j][k - 1][l],dp[i -1][j][k][l -1],\n            dp[i][j - 1][k -1][l],dp[i][j -1][k][l -1]);\n```\n\u70b9\u6743\u548c + \u4e24\u5f20\u7eb8\u6761\u4e24\u4e2a\u65b9\u5411\u7684\u70b9\u6743\u6700\u5927\u503c  \u4f46\u662f\u524d\u63d0\u662f\n```\ni!=k&&j\uff01=k\n```\n\u5426\u5219\u5c31\u662f\n```\nf[i][j][k][l] = map[i][j] + max(\n           f[i-1][j][k-1][l] , f[i-1][j][k][l-1] ,\n           f[i][j-1][k-1][l] , f[i][j-1][k][l-1]) ;\n```\n\u70b9\u6743\u53ea\u52a0\u4e00\u6b21\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u8bb2\u7684\u5f88\u6e05\u695a\u5c31\u4e0d\u52a0\u6ce8\u91ca\u4e86\uff09\n```\n#include <algorithm>\n#include <iostream>\n#include <cstdio>\n\n#define p(i,a,b) for(int i=a;i<=b;++i)\n\nusing namespace std ;\n\nint m,n;\nint map[53][53];\nint f[53][53][53][53];\n\ninline int maxx(int a, int b) {\n\treturn a > b ? a : b ;\n}\n\ninline int ma(int a , int b  , int c , int d) {\n\treturn maxx(maxx(a,b) , maxx(c , d) ) ;\n}\n\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tp(i,1,n)\n\tp(j,1,m)\n\tscanf(\"%d\",&map[i][j]);\n\n\tp(i,1,n)\n\tp(j,1,m)\n\tp(k,1,n)\n\tp(l,1,m)\n\tif(i == k)\n\t\tf[i][j][k][l] = ma(f[i-1][j][k-1][l] , f[i-1][j][k][l-1] ,\n        f[i][j-1][k-1][l] , f[i][j-1][k][l-1]) + map[i][j] ;\n\telse\n\t\tf[i][j][k][l] = ma(f[i-1][j][k-1][l] , f[i-1][j][k][l-1] ,\n     f[i][j-1][k-1][l] , f[i][j-1][k][l-1]) + map[i][j] + map[k][l] ;\n\n\tprintf(\"%d\\n\",f[n][m][n][m]);\n\treturn 0\n}\n``` \n\u65f6\u95f4\u590d\u6742\u5ea6 O(n^4)\n\u7a7a\u95f4\u590d\u6742\u5ea6 O(n^4\uff09\n\n-------------\n\u6211\u4eec\u53d1\u73b0\uff0c\u4f3c\u4e4e`i+j === k+l`\uff08\u6052\u6210\u7acb\uff09\n\u6240\u4ee5\u5c31\u53ef\u4ee5\u628a\u7b2c\u56db\u7ef4\u7ed9 ~~\u548c\u8c10~~ \u4f18\u5316\u6389\n\n\u4ee3\u7801\u5982\u4e0b\n```\t\n#include <algorithm>\n#include <iostream>\n#include <cstdio>\n\n#define p(i,a,b) for(int i=a;i<=b;++i)\n//\u8fd9\u662f\u4e2a\u4eba\u4e60\u60ef\n\nusing namespace std ;\n\nint m,n;\nint map[53][53];\n//map\u5b58\u56fe\nint f[53][53][53];\n/*\u5f00\u4e09\u7ef4\u6570\u7ec4\uff0c\u8fd9\u4e09\u7ef4\u7684\u610f\u4e49\u4e0e\u5f00\u56db\u7ef4\u7684\u65f6\u5019\u610f\u4e49\u76f8\u540c\uff0c\n\u7b2c\u56db\u4e2a\u7ef4\u5ea6\u5c31\u53ef\u4ee5\u53d8\u6210i+j-k\uff0c\u56e0\u4e3a\u7eb8\u6761\u4f20\u9012\u7684\u65b9\u5411\u4e0d\u8d70\u56de\u5934\u8def\uff0c\n\u6240\u4ee5\u4e24\u4e2a\u65b9\u5411\u7684\u6b65\u6570\u4e00\u6837\uff0c\u5c31\u5b8c\u5168\u53ef\u4ee5\u7528i+j\u4f5c\u4e3a\u8d70\u4e86\u7684sum\u6b65\uff0c\n\u51cf\u6389k\u5c31\u53ef\u4ee5\u6210\u4e86\u7b2c\u56db\u7ef4l*/\n\ninline int maxx(int a, int b) {\n\treturn a > b ? a : b ;\n}\n\ninline int ma(int a , int b  , int c , int d)\n//\u65b9\u4fbf\u56db\u4e2a\u6570\u7684\u5224\u65ad\u5927\u5c0f\n{\n\treturn maxx(maxx(a,b) , maxx(c , d) ) ;\n}\n\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tp(i,1,n)\n\tp(j,1,m)\n\tscanf(\"%d\",&map[i][j]);\n\t//\u8bfb\u5165\u6ca1\u5565\u8bf4\u7684\n\n\tp(i,1,n)\n\tp(j,1,m)\n\tp(k,1,n)\n\tif(i+j-k<0)\n\t\t//\u8981\u5224\u65ad\u6bcf\u79cd\u60c5\u51b5\u662f\u5426\u5408\u6cd5\uff0c\n\t\t//\u4e0d\u5408\u6cd5\u76f4\u63a5\u8df3\u8fc7\uff08\u56db\u7ef4\u7684\u65f6\u5019\u4e0d\u4f1a\u51fa\u73b0\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u6240\u4ee5\u5c31\u4e0d\u7528\u4e86\uff09\n\t\tcontinue ;\n\telse if(i == k)\n\t\t//\u5224\u65ad\u4e24\u6b21\u4f20\u7eb8\u6761\u662f\u5426\u540c\u65f6\u7ecf\u8fc7\u4e00\u4e2a\u70b9\n\t\tf[i][j][k] = ma(f[i-1][j][k-1] , f[i-1][j][k] ,\n\t\t                f[i][j-1][k-1] , f[i][j-1][k]) + map[i][j] ;\n\telse\n\t\tf[i][j][k] = ma(f[i-1][j][k-1] , f[i-1][j][k] ,\n\t\t                f[i][j-1][k-1] , f[i][j-1][k]) +\n\t\t             map[i][j] + map[k][i+j-k] ;\n\t//max\u51fd\u6570\u91cc\u7684\u5f0f\u5b50\u610f\u4e49\u5c31\u662f\u5411f[i][j][k]\n\t//\u8d70\u6765\u65f6\u7b2c\u4e00\u5f20\u7eb8\u6761\u6765\u7684\u4e24\u4e2a\u65b9\u5411\u4e0e\u7b2c\u4e8c\u5f20\u7684\u65b9\u5411\n\t//\u52a0\u4e0a\u7684\u662f\u8be5\u70b9\u7684\u70b9\u6743\u503c\uff0c\u5982\u679c\u4e24\u6b21\u7eb8\u6761\u8d70\u4e86\u540c\u4e00\u4e2a\u65b9\u5411\uff0c\n\t//\u90a3\u4e48\u70b9\u6743\u5c31\u53ea\u52a0\u4e00\u6b21\n\n\tprintf(\"%d\\n\",f[n][m][n]);\n\t//\u8f93\u51fa\u7684\u6700\u7ec8\u72b6\u6001\u5c31\u662ff[n][m][n]\n\treturn ~~(0-0);\n}\n```\n\u65f6\u95f4\u590d\u6742\u5ea6 O(n^3)\n\n\u7a7a\u95f4\u590d\u6742\u5ea6 O(n^3) \n\uff08\u697c\u4e0a\u5927\u4f6c\u4eec\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u662fO( 2 * n^3)\uff09 \uff0c \u6362\u4e86\u4e00\u79cd\u5f00\u52a8\u6001\u6570\u7ec4\u65b9\u6cd5\u5c31\u4f18\u5316\u4e86\u4e00\u4e2a\u5e38\u65702\n",
        "postTime": 1565308638,
        "uid": 149537,
        "name": "Atlicd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41....\n\n\u521a\u5b66\u4f1a\u8d39\u7528\u6d41,\u78b0\u89c1\u8fd9\u4e2a\u9898,\u611f\u89c9\u53ef\u4ee5\u7528\u8d39\u7528\u6d41\u5199,\u7528$G(i,j)$\u8868\u793a\u6743\u503c\n\n\u4e24\u4e2a\u4eba\u4e92\u76f8\u4f20,\u5b9e\u9645\u4e0a\u7b49\u4e8e\u4e00\u4e2a\u4eba\u540c\u65f6\u4f20\u4e862\u4e2a\u5230\u4e0b\u9762,\u4e8e\u662f\u7b80\u5316\u95ee\u9898,\n\n\u4e00\u5f00\u59cb\u6734\u7d20\u7684\u5efa\u4e86\u56fe,\u7ed3\u679c\u9519\u4e862\u4e2aCASE\n\n\u65b9\u5f0f\u5c31\u662f\u8d85\u7ea7\u6e90\u5411$(1,1)$\u8fde\u63a5\u4e00\u6761\u8d39\u75280,\u5bb9\u91cf2\u7684\u8fb9,\u8d85\u7ea7\u6c47\u70b9\u4e00\u4e2a\u9053\u7406,\u7136\u540e\u5c31\u7528\u5bb9\u91cf1.\u8d39\u7528\u4e3a$G(i,j)$\u6765\u6a21\u62df..\n\n\u5f53\u7136\u5b9e\u9645\u4e0a\u4ee5$(1,1)$\u548c$(n,m)$\u4e3a\u6e90\u70b9\u6c47\u70b9\u4e5f\u884c\n\n\u6700\u540e\u53d1\u73b0\u4f1a\u51fa\u73b0\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e2a\u70b9\u901a\u8fc7\u5927\u5c0f\u4e3a2\u7684\u6d41\u8fd9\u79cd\u60c5\u51b5,\u9898\u76ee\u5b9e\u9645\u4e0a\u662f\u9650\u5236\u6bcf\u4e2a\u70b9\u7684\u6700\u5927\u6d41\u91cf...\n\n\u6240\u4ee5\u8003\u8651\u62c6\u70b9,\u65b9\u6cd5\u5c31\u662f...\u6bcf\u4e00\u4e2a\u8fb9\u62c6\u6210\u5165\u70b9\u548c\u51fa\u70b9,\u5e76\u4ece\u5165\u70b9\u5230\u51fa\u70b9\u8fde1\u6761\u5ea6\u6570\u4e3a1,\u8d39\u7528\u4e3a$G(i,j)$\u7684\u8fb9\u5373\u53ef\n\n\u6ce8\u610f\u5982\u679c$(1,1)$\u4e0d\u662f\u6e90\u70b9\u65f6,\u5b83\u7684\u5165\u70b9\u5230\u51fa\u70b9\u7684\u8fb9\u5e94\u8be5\u662f\u5bb9\u91cf\u4e3a2,\u8d39\u7528\u4e3a0\u7684\n\n\u5177\u4f53\u64cd\u4f5c\u5c31\u662f:\n```cpp\nS=0,T=3*n*m;\nint gap=n*m+2;\nadd(S,1,2,0);\nadd(m*n,T,2,0);\nrep(i,1,n)rep(j,1,m){\n   int s=(i-1)*m+j;\n   if(j<m||i<n){\n\t\tif(i==1&&j==1) add(s,s+gap,2,0);\n        else add(s,s+gap,1,g[i][j]);\n        if(j<m) add(s+gap,s+1,1,0);\n        if(i<n) add(s+gap,s+m,1,0);\n    }\n}\n```\n\u5b8c\u6574\u4ee3\u7801(SPFA\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41,\u628adis\u521d\u59cb\u5316\u4e3a$-INF$,\u6e90\u70b9\u4e3a0,\u6539\u6389\u7b26\u53f7\u5373\u53ef)\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define IO ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)\n#define rep(ii,a,b) for(auto ii=a;ii<=b;ii++)\nusing namespace std;\nconst int maxn=1e5+10;\nconst int maxm=1e6+10;\nconst int INF=0x3f3f3f3f;\nint casn,n,m,k;\nint g[123][123];\nstruct node {\n    int pre,to,cap,cost,next;\n}e[maxm];\nint head[maxn],nume,inq[maxn],sum;\nint que[maxn],pre[maxn],dis[maxn];\nint S,T,ans;\ninline void addx(int a,int b,int c,int d){\n    e[++nume]={a,b,c,d,head[a]};\n    head[a]=nume;\n}\ninline void add(int a,int b,int c,int d){\n    addx(a,b,c,d);addx(b,a,0,-d);\n}\nbool spfa(){\n    rep(i,0,T) dis[i]=-INF;\n    int top=0,end=1;\n    dis[S]=que[0]=0;\n    while(top!=end){\n        int now=que[top++];top%=maxn;\n        for(int i=head[now];i;i=e[i].next){\n            if(e[i].cap&&dis[e[i].to]<dis[now]+e[i].cost){\n                pre[e[i].to]=i;\n                dis[e[i].to]=dis[now]+e[i].cost;\n                if(!inq[e[i].to]){\n                    inq[e[i].to]=true;\n                    que[end++]=e[i].to;end%=maxn;\n                }\n            }\n        }\n        inq[now]=false;\n    }\n    return dis[T]!=-INF;\n}\nvoid dfs(){\n    int d=INF;\n    for(int i=pre[T];i;i=pre[e[i].pre]) d=min(d,e[i].cap);\n    for(int i=pre[T];i;i=pre[e[i].pre]) {\n        e[i].cap-=d;\n        e[i^1].cap+=d;\n        ans+=e[i].cost*d;\n    }\n}\nint main(){\n//#define test\n#ifdef test\n    freopen(\"in.txt\",\"r\",stdin);freopen(\"out.txt\",\"w\",stdout);\n#endif\n\tIO;\n    cin>>n>>m;\n    rep(i,1,n){\n        rep(j,1,m){\n            cin>>g[i][j];\n        }\n    }\n    S=0,T=3*n*m;\n    int gap=n*m+2;\n    nume=1;\n    add(S,1,2,0);\n    add(m*n,T,2,0);\n    rep(i,1,n){\n        rep(j,1,m){\n            int s=(i-1)*m+j;\n            if(j<m||i<n){\n\t\t\t\tif(i==1&&j==1) add(s,s+gap,2,0);\n                else add(s,s+gap,1,g[i][j]);\n                if(j<m) add(s+gap,s+1,1,0);\n                if(i<n) add(s+gap,s+m,1,0);\n            }\n        }\n    }\n    ans=0;\n    while(spfa()) {\n        dfs();\n    }\n    cout<<abs(ans)<<endl;\n#ifdef test\n    fclose(stdin);fclose(stdout);system(\"out.txt\");\n#endif\n    return 0;\n}\n```\n\u5199\u5b8c\u53d1\u73b0\u4e0b\u9762\u8fd8\u6709\u4e00\u4e2a\u8d39\u7528\u6d41\u7684....\n\n\u4e0d\u8fc7\u5b9e\u9645\u4e0a\u51fa\u70b9\u548c\u5165\u70b9\u4e4b\u95f4\u9700\u8981\u4e00\u4e2a\u8fb9\u5373\u53ef.",
        "postTime": 1524670269,
        "uid": 24810,
        "name": "Nervending",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "\u601d\u8def\u8ddf\u65b9\u683c\u53d6\u6570\u4e00\u6837\uff0c\u505a\u8fc7\u4e00\u6b21\u6240\u4ee5\u8fd9\u6b21\u5f88\u5feb\u5c31\u6572\u51fa\u6765\u4e86\n\n\u7531\u4e8e\u6bcf\u4e2a\u540c\u5b66\u53ea\u5e2e\u5fd9\u4f20\u9012\u4e00\u6b21\uff0c\u6240\u4ee5\u4e24\u4e2a\u8def\u5f84\u7684\u70b9\u4e0d\u91cd\u5408\n\n\u53ef\u4ee5\u4ece\u5de6\u4e0a\u89d2\u52a8\u89c4\u5230\u53f3\u4e0b\u89d2\uff0cdp[i][j][k][l]\u8868\u793a \u4e24\u6761\u8def\u5f84\u5206\u522b\u662f i j\u8ddfk l\n\n\u6bcf\u6b21\u53ef\u4ee5\u5411\u4e0b\u8d70\u4e5f\u53ef\u4ee5\u5411\u53f3\u8d70\uff0c\u6240\u4ee5\u4e24\u6761\u8def\u5f84\u5171\u67094\u4e2a\u65b9\u5411\uff0c\u6c42\u51fa\u4e0a\u4e00\u4e2a\u72b6\u6001\u4e2d\u6700\u5927\u503c\uff0c\u518d\u52a0\u4e0a\u672c\u6b21\u4e2d\u4e24\u4e2a\u70b9\u7684\u503c\n\n\u518d\u6392\u9664\u70b9\u4e24\u4e2a\u70b9\u91cd\u5408\u7684\u60c5\u51b5\n\n\u6ce8\u610f\uff1a**\u4e24\u6761\u8def\u5f84\u662f\u540c\u65f6\u8d70\u7684 **\n\n ```cpp\n#include<iostream>\nusing namespace std;\nint m,n;\nint a[51][51];\nint dp[51][51][51][51];\nint main(){\n    freopen(\"2.txt\",\"r\",stdin);\n    cin>>m>>n;\n    for(int i=1;i<=m;i++){\n        for(int j=1;j<=n;j++)\n            cin>>a[i][j];\n    }\n    for(int i=1;i<=m;i++)\n    for(int j=1;j<=n;j++)\n    for(int k=1;k<=m;k++)\n    for(int l=1;l<=n;l++){\n        if(i+j == k+l){  //\u56e0\u4e3a\u6574\u4e2a\u52a8\u89c4\u7684\u65b9\u5411\u662f\u4ece\u5de6\u4e0a\u5230\u53f3\u4e0b\uff0c\u6240\u4ee5\u4e24\u6761\u8def\u7684\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\u6ee1\u8db3\u6b64\u8868\u8fbe\u5f0f \n            int t1,t2;\n            t1=max(dp[i-1][j][k-1][l],dp[i-1][j][k][l-1]); //\u6c42\u51fa\u6bcf\u6761\u8def\u6765\u81ea2\u4e2a\u65b9\u5411\u7684\u6700\u5927\u503c \n            t2=max(dp[i][j-1][k-1][l],dp[i][j-1][k][l-1]);\n            dp[i][j][k][l]=max(t1,t2)+a[i][j]+a[k][l];  //\u5728\u52a0\u4e0a\u5f53\u524d\u4e24\u4e2a\u70b9\u7684\u503c \n            if(i==k && j==l) dp[i][j][k][l]-=a[k][l];     //\u5982\u679c\u4e24\u4e2a\u70b9\u91cd\u590d,\u53ea\u80fd\u7528\u4e00\u4e2a\u70b9 \n        }\n    }\n    cout<<dp[m][n][m][n]; \n    return 0;\n} \n```",
        "postTime": 1494947036,
        "uid": 29645,
        "name": "qaqRose",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "\u9898\u76ee\u8981\u6c42\u662f\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\uff0c\u8fc7\u53bb\u4e00\u8d9f\u8fc7\u6765\u4e00\u8d9f\uff0c\u8fd9\u6837\u60f3\u8d77\u6765\u5c31\u6709\u4e9b\u9ebb\u70e6\uff0c\u4e0d\u5982\u770b\u6210\u540c\u65f6\u4ece\u5de6\u4e0a\u89d2\u5f80\u53f3\u4e0b\u89d2\u8d70\uff0c\u7136\u540e\u63a7\u5236\u8d70\u7684\u6b65\u6570\u76f8\u540c\uff0c\u4ece\u800c\u6765\u907f\u514d\u76f8\u4ea4\u7684\u60c5\u51b5\u3002\n\n\u6211\u4eec\u5b9a\u4e49f[x1][x2][step]\u4e3a\u5c0f\u6e0a\u4f20\u5230\u6a2a\u5750\u6807\u4e3ax1\u7684\u70b9\uff0c\u5c0f\u8f69\u4f20\u5230\u6a2a\u5750\u6807\u4e3ax2\u7684\u70b9\uff0c\u4f20\u4e86step\u6b21\u65f6\u7684\u6700\u5927\u597d\u5fc3\u7a0b\u5ea6\u3002\n\n\u7136\u540e\u8f6c\u79fb\u7684\u8bdd\uff0c\u5206\u4e3a\u56db\u7c7b\uff1a\n\n\u5c0f\u6e0a\u4ece\u5de6\u8fb9\u4f20\u6765\uff0c\u5c0f\u8f69\u4e5f\u4ece\u5de6\u8fb9\u4f20\u6765\u3002\n\n\u5c0f\u6e0a\u4ece\u4e0a\u8fb9\u4f20\u6765\uff0c\u5c0f\u8f69\u4e5f\u4ece\u4e0a\u8fb9\u4f20\u6765\u3002\n\n\u5c0f\u6e0a\u4ece\u5de6\u8fb9\u4f20\u6765\uff0c\u5c0f\u8f69\u4ece\u4e0a\u8fb9\u4f20\u6765\u3002\n\n\u5c0f\u6e0a\u4ece\u4e0a\u8fb9\u4f20\u6765\uff0c\u5c0f\u8f69\u4ece\u5de6\u8fb9\u4f20\u6765\u3002\n\n\u8be6\u7ec6\u770b\u4ee3\u7801\uff08\u9644\u8be6\u7ec6\u6ce8\u91ca\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;//n\u884cm\u5217 \nint a[55][55];//\u5b58\u77e9\u9635 \nint f[110][55][55];//f[i][j][k]\u8868\u793a\u5c0f\u6e0a\u4f20\u5230i\uff0c\u5c0f\u8f69\u4f20\u5230j\uff0c\u4f20\u4e86k\u6b21\u7684\u6700\u5927\u597d\u5fc3\u7a0b\u5ea6 \n//\u524d\u4e24\u7ef4\u5b58\u7684\u90fd\u662f\u6a2a\u5750\u6807x1,x2\u3002 \nint main()\n{\n\tcin>>m>>n;//\u8f93\u5165\u884c\u5217 \n\tfor(int i=0;i<m;i++)\n\t\tfor(int j=0;j<n;j++)\n\t\t\tcin>>a[i][j];//\u8f93\u5165\u77e9\u9635 \n\tf[0][0][0]=0;//\u5047\u5df4\u610f\u601d\u521d\u59cb\u5316\u4e00\u4e0b \n\tfor(int step=1;step<=n+m-2;step++)//\u679a\u4e3e\u6b65\u6570\uff0c\u628a\u6b65\u6570\u7684\u679a\u4e3e\u653e\u5728\u7b2c\u4e00\u5c42\uff0c\u65b9\u4fbf\u6392\u9664\u8d70\u5230\u4e00\u8d77\u7684\u60c5\u51b5//\u6ce8\u610f\u662fn+m-2\u6b65 \n\t\tfor(int x1=0;x1<m;x1++)//\u679a\u4e3e\u5c0f\u6e0a\u7eb8\u6761\u7684\u6a2a\u5750\u6807 \n\t\t\tfor(int x2=0;x2<m;x2++)//\u679a\u4e3e\u5c0f\u8f69\u7eb8\u6761\u7684\u6a2a\u5750\u6807 \n\t\t\t{\n\t\t\t\tint y1=step-x1;\n\t\t\t\tint y2=step-x2;//\u901a\u8fc7\u6b65\u6570\u548c\u6a2a\u5750\u6807\u6c42\u5f97\u7eb5\u5750\u6807 \n\t\t\t\tif(y1<0||y2<0)\n\t\t\t\t\tcontinue;//\u5982\u679c\u8d8a\u754c\u4e86\u8df3\u8fc7 \n\t\t\t\tif((x1==m-1&&x2==m-1&&step==n+m-2)||x1!=x2)//\u5982\u679c\u5230\u4e86\u6700\u540e\u4e00\u6b65\uff08\u5fc5\u987b\u8d70\u5230\u4e00\u8d77\uff09\u6216\u8005\u5728\u8def\u5f84\u4e0d\u4ea4\u53c9\u7684\u60c5\u51b5\u4e0b \n\t\t\t\t{\n\t\t\t\t\tif(x1&&x2)\n\t\t\t\t\t\tf[step][x1][x2]=f[step-1][x1-1][x2-1];//\u5c0f\u6e0a\u5c0f\u8f69\u90fd\u4ece\u4e0a\u9762\u4f20\u4e0b\u6765 \n\t\t\t\t\tif(x1) \n\t\t\t\t\t\tf[step][x1][x2]=max(f[step][x1][x2],f[step-1][x1-1][x2]);//\u5c0f\u6e0a\u4ece\u4e0a\u8fb9\u4f20\u8fc7\u6765\uff0c\u5c0f\u8f69\u4ece\u5de6\u8fb9\u4f20\u4e0b\u6765 \n\t\t\t\t\tif(x2)\n\t\t\t\t\t\tf[step][x1][x2]=max(f[step][x1][x2],f[step-1][x1][x2-1]);//\u5c0f\u6e0a\u4ece\u5de6\u8fb9\u4f20\u8fc7\u6765\uff0c\u5c0f\u8f69\u4ece\u4e0a\u8fb9\u4f20\u4e0b\u6765\n\t\t\t\t\tf[step][x1][x2]=max(f[step][x1][x2],f[step-1][x1][x2]);//\u90fd\u4ece\u5de6\u8fb9\u4f20\u8fc7\u6765 \n\t\t\t\t\tf[step][x1][x2]+=a[x1][y1]+a[x2][y2];//\u6700\u540e\u52a0\u4e0a\u4f20\u5230\u7684\u8fd9\u4e24\u4e2a\u70b9\u7684\u597d\u5fc3\u7a0b\u5ea6 \n\t\t\t\t}\n\t\t\t}\n\tcout<<f[n+m-2][m-1][m-1];//\u8f93\u51fa\u7b54\u6848//\u6ce8\u610f\u53ea\u6709n+m-2\u6b65 \n\treturn 0;\n}\n```",
        "postTime": 1540306625,
        "uid": 59097,
        "name": "\u5f20\u4ea6\u5f1b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "~~\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3~~\n\n\u597d\u50cf\u53ef\u4ee5\u7528\u8d39\u7528\u6d41\u6765\u505a\uff0c\u4f46\u662f\uff0c\u6211\u84bb\u554a \uff080~0\uff09  \n### \u6240\u4ee5\u8fd9\u9053\u9898\u5c31\u7528DP\u6765\u505a\u4e86\uff01\uff01\uff01\n\u5206\u6790\u4e00\u4e0b\u9898\u610f\uff1a\n\n\u4e0d\u7ba1\u4ed6\u4f20\u8fc7\u6765\u4f20\u8fc7\u53bb\u8fd9\u4e9b\u82b1\u91cc\u80e1\u54e8\u7684\u64cd\u4f5c\uff0c\u5c31\u662f\u4e00\u4e2a\u5728\uff081,1\uff09\u70b9\u7684\u4eba\u53ea\u5141\u8bb8\u524d\u8fdb\uff0c\u4e0d\u5141\u8bb8\u540e\u9000\u7684\u5411\u5bf9\u89d2\u7ebf\uff08m,n\uff09\u7684\u4eba\u4f20\u4e24\u5f20\u7eb8\u6761\u5457\u3002   \n\u4e00\u770b\u6570\u636e\u8303\u56f4\uff0c\u624d50 \u9996\u5148\u60f3\u5230\u6700\u66b4\u529b\u7684\u89e3\u6cd5\uff1a\u8bbe ```dp[i][j][k][l]``` \u662f\u7b2c\u4e00\u5f20\u7eb8\u6761\u5230\u8fbe(i,j)\uff0c\u7b2c\u4e8c\u5f20\u5230\u8fbe(k,l)\u65f6\u6700\u5927\u6743\u503c\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u7684\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662f\n```\ndp[i][j][k][l] = map[i][j] + map[k][l] + \nmax(dp[i - 1][j][k - 1][l],dp[i -1][j][k][l -1],\ndp[i][j - 1][k -1][l],dp[i][j -1][k][l -1]);\n```\n\u70b9\u6743\u548c + \u4e24\u5f20\u7eb8\u6761\u4e24\u4e2a\u65b9\u5411\u7684\u70b9\u6743\u6700\u5927\u503c  \u4f46\u662f\u524d\u63d0\u662f\n```\ni!=k&&j\uff01=k\n```\n\u5426\u5219\u5c31\u662f\n```\nf[i][j][k][l] = map[i][j] + max(f[i-1][j][k-1][l] , \nf[i-1][j][k][l-1] , f[i][j-1][k-1][l] , f[i][j-1][k][l-1]) ;\n```\n\u70b9\u6743\u53ea\u52a0\u4e00\u6b21\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u8bb2\u7684\u5f88\u6e05\u695a\u5c31\u4e0d\u52a0\u6ce8\u91ca\u4e86\uff09\n```\n#include <algorithm>\n#include <iostream>\n#include <cstdio>\n\n#define p(i,a,b) for(int i=a;i<=b;++i)\n\nusing namespace std ;\n\nint m,n;\nint map[53][53];\nint f[53][53][53][53];\ninline int maxx(int a, int b)\n{\n\treturn a > b ? a : b ;\n}\n\ninline int ma(int a , int b  , int c , int d)\n{\n\treturn maxx(maxx(a,b) , maxx(c , d) ) ;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tp(i,1,n)\n\tp(j,1,m)\n\tscanf(\"%d\",&map[i][j]);\n\t\n\tp(i,1,n)\n\tp(j,1,m)\n\tp(k,1,n)\n\tp(l,1,m)\n\t\tif(i == k)\n\t\t\tf[i][j][k][l] = ma(f[i-1][j][k-1][l] , f[i-1][j][k][l-1] , f[i][j-1][k-1][l] , f[i][j-1][k][l-1]) + map[i][j] ;\n\t\telse\n\t        f[i][j][k][l] = ma(f[i-1][j][k-1][l] , f[i-1][j][k][l-1] , f[i][j-1][k-1][l] , f[i][j-1][k][l-1]) + map[i][j] + map[k][l] ;\n\n    printf(\"%d\\n\",f[n][m][n][m]);\n    return 0\n}\n```\n\u65f6\u95f4\u590d\u6742\u5ea6 O(n^4)\n\u7a7a\u95f4\u590d\u6742\u5ea6 O(n^4\uff09\n\n-------------\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u4f3c\u4e4ei+j === k+l\uff08\u6052\u6210\u7acb\uff09   \n\u6240\u4ee5\u5c31\u53ef\u4ee5\u628a\u7b2c\u56db\u7ef4\u7ed9 ~~\u548c\u8c10~~ \u4f18\u5316\u6389   \n\n###code\n```\n#include <algorithm>\n#include <iostream>\n#include <cstdio>\n\n#define p(i,a,b) for(int i=a;i<=b;++i)\n//\u8fd9\u662f\u4e2a\u4eba\u4e60\u60ef \n\nusing namespace std ;\n\nint m,n;\nint map[53][53];\n//map\u5b58\u56fe \n/*\n\u5f00\u4e09\u7ef4\u6570\u7ec4\uff0c\u8fd9\u4e09\u7ef4\u7684\u610f\u4e49\u4e0e\u5f00\u56db\u7ef4\u7684\u65f6\u5019\u610f\u4e49\u76f8\u540c\uff0c\n\u7b2c\u56db\u4e2a\u7ef4\u5ea6\u5c31\u53ef\u4ee5\u53d8\u6210i+j-k\uff0c\n\u56e0\u4e3a\u7eb8\u6761\u4f20\u9012\u7684\u65b9\u5411\u4e0d\u8d70\u56de\u5934\u8def\uff0c\n\u6240\u4ee5\u4e24\u4e2a\u65b9\u5411\u7684\u6b65\u6570\u4e00\u6837\uff0c\n\u5c31\u5b8c\u5168\u53ef\u4ee5\u7528i+j\u4f5c\u4e3a\u8d70\u4e86\u7684sum\u6b65\uff0c\n\u51cf\u6389k\u5c31\u53ef\u4ee5\u6210\u4e86\u7b2c\u56db\u7ef4l\n*/\n\ninline int maxx(int a, int b)\n{\n\treturn a > b ? a : b ;\n}\n\ninline int ma(int a , int b  , int c , int d)\n//\u65b9\u4fbf\u56db\u4e2a\u6570\u7684\u5224\u65ad\u5927\u5c0f \n{\n\treturn maxx(maxx(a,b) , maxx(c , d) ) ;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tp(i,1,n)\n\tp(j,1,m)\n\tscanf(\"%d\",&map[i][j]);\n\t//\u8bfb\u5165\u6ca1\u5565\u8bf4\u7684 \n\n\tp(i,1,n)\n\tp(j,1,m)\n\tp(k,1,n)\n\tif(i+j-k<0)\n\t/*\u8981\u5224\u65ad\u6bcf\u79cd\u60c5\u51b5\u662f\u5426\u5408\u6cd5\uff0c\n    \u4e0d\u5408\u6cd5\u76f4\u63a5\u8df3\u8fc7\n    \uff08\u56db\u7ef4\u7684\u65f6\u5019\u4e0d\u4f1a\u51fa\u73b0\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u6240\u4ee5\u5c31\u4e0d\u7528\u4e86\uff09\n   */\n   continue ;\n   else\n   if(i == k)\n   //\u5224\u65ad\u4e24\u6b21\u4f20\u7eb8\u6761\u662f\u5426\u540c\u65f6\u7ecf\u8fc7\u4e00\u4e2a\u70b9 \n      f[i][j][k] = ma(f[i-1][j][k-1] , \n      f[i-1][j][k] , f[i][j-1][k-1] , \n      f[i][j-1][k]) + map[i][j] ;\n   else\n       f[i][j][k] = ma(f[i-1][j][k-1] , \n       f[i-1][j][k] , f[i][j-1][k-1] , \n       f[i][j-1][k]) + map[i][j] + map[k][i+j-k] ;\n       /*\n       max\u51fd\u6570\u91cc\u7684\u5f0f\u5b50\u610f\u4e49\u5c31\u662f\n       \u5411f[i][j][k]\u8d70\u6765\u65f6\u7b2c\u4e00\u5f20\u7eb8\u6761\u6765\u7684\u4e24\u4e2a\u65b9\u5411\u4e0e\u7b2c\u4e8c\u5f20\u7684\u65b9\u5411\n       */\n       /*\u52a0\u4e0a\u7684\u662f\u8be5\u70b9\u7684\u70b9\u6743\u503c\uff0c\n       \u5982\u679c\u4e24\u6b21\u7eb8\u6761\u8d70\u4e86\u540c\u4e00\u4e2a\u65b9\u5411\uff0c\n       \u90a3\u4e48\u70b9\u6743\u5c31\u53ea\u52a0\u4e00\u6b21 \n\t\t\t*/\n\n   printf(\"%d\\n\",f[n][m][n]);\n   //\u8f93\u51fa\u7684\u6700\u7ec8\u72b6\u6001\u5c31\u662ff[n][m][n] \n   return ~~(0-0);\t\n}\n```\n\u65f6\u95f4\u590d\u6742\u5ea6 O(n^3)\n\n\u7a7a\u95f4\u590d\u6742\u5ea6 O(n^3)   \n\uff08\u697c\u4e0a\u5927\u4f6c\u4eec\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u662fO( 2 * n^3)\uff09 \uff0c   \n\u6362\u4e86\u4e00\u79cd\u5f00\u52a8\u6001\u6570\u7ec4\u65b9\u6cd5\u5c31\u4f18\u5316\u4e86\u4e00\u4e2a\u5e38\u65702\n",
        "postTime": 1565241441,
        "uid": 149537,
        "name": "Atlicd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u4ece\uff081,1\uff09--\u300b\uff08m,n\uff09\u7684\u6240\u6709\u8def\u5f84\u4e0a\u627e\u4e0d\u4ea4\u53c9\u7684\u6700\u957f\u8def\u548c\u6b21\u957f\u8def\u3002\n\n\u9898\u89e3\uff1a\u6211\u4e00\u5f00\u59cb\u662f\u641c\u7d22 \u627e\u5230\u6700\u957f\u8def \u6807\u8bb0\u4e0d\u80fd\u8d70\u518d\u627e\u6b21\u957f\u8def \u7136\u540e\u53d1\u73b0\u6700\u957f\u8def\u628a\u6b21\u957f\u8def\u5835\u6b7b\n\n\u627e\u4e0d\u5230\u6b21\u957f\u8def\u4e86....\n\n\u54b3\u54b3 \u6b63\u8bdd....\n\n\u7136\u540e\u770b\u4e86\u4e0b\u9898\u89e3\u662f\u53cc\u7ebf\u7a0bdp.....f[x1][y1][x2][y2]\u662f\u5f53\u4e00\u6b21\u4f20\u7eb8\u6761\u5728(x1,y1)\u7b2c\u4e8c\u6b21\u5728(x2,y2)\u65f6\u7684\u6700\u5927\u503c\n\n\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\nint t=max(f[a][b-1][c][d-1],f[a][b-1][c-1][d]);\n\nint z=max(f[a-1][b][c][d-1],f[a-1][b][c-1][d]);\n\nf[a][b][c][d]=max(t,z)+loe[a][b]+loe[c][d];\n\n\u7136\u540e\u600e\u6837\u907f\u514d\u8def\u5f84\u4ea4\u53c9\u5462\uff0cdp\u8fc7\u7a0b\u8def\u5f84\u4f1a\u4ea4\u53c9\u7684\uff0c\u6211\u4eec\u628a\u4ea4\u53c9\u90e8\u5206\n\n\u6362\u8fc7\u6765\u8fd9\u6837\u6700\u5927\u503c\u8fd8\u662f\u4fdd\u6301\u4e0d\u53d8\u7684\uff0c\u90a3\u4ea4\u53c9\u70b9\u600e\u4e48\u529e\u5462\uff0c\u4e00\u4e2a\u70b9\u91cd\n\n\u590d\u63d0\u4f9b\u7684\u70ed\u5fc3\u503c\u5c31\u628a\u5b83\u91cd\u590d\u52a0\u7684\u51cf\u53bb\u3002\n\n\u53e6\u5916\u538b\u7f29\u6210\u4e09\u7ef4\u662f\u8fd9\u6837\u7684\uff0c\u5bf9\u4e8e\u6765\u5230(x,y)\uff0c\u90a3\u4e48\u5b83\u8d70\u7684\u6b65\u6570\u662f\uff08x-1\uff09+(y-1)\uff0c\u8fd9\u4e2a\u8ddd\u79bb\u53eb\u505a\u66fc\u54c8\u987f\u8ddd\u79bb\u3002\n\n\u7531\u4e8e(x1,y1)\u548c(x2,y2)\u662f\u540c\u65f6\u8fdb\u884c\u7684\uff0c\u6240\u4ee5x1+y1=x2+y2\uff0c\u6240\u4ee5y2=x1+y1-x2\uff0c\u5229\u7528\u8fd9\u4e2a\u7ed3\u8bba\u6211\u4eec\u5c31\u53ef\u4ee5\n\n\u53d8\u4e3af[x1][y1][x2]\u4e86\uff0cy2\u53cd\u6b63\u80fd\u63a8\u51fa\u6765\u561b\u3002\n\n\u63a8\u8350\u4e00\u4e2a[\u535a\u5ba2](http://http://blog.csdn.net/u011077606/article/details/43302987)\uff08\u4e0d\u662f\u6211\u7684\u554a\uff0c\u6211\u89c9\u5f97\u8fd9\u4e2a\u535a\u5ba2\u5f88\u597d\uff0c\n\n\u5199\u7684\u5f88\u6e05\u695a\uff09\n\n\u4ee3\u7801\n-\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n,m,loe[52][52],f[52][52][52][52];\nint main(){\n    scanf(\"%d%d\",&m,&n);\n    for(int i=1;i<=m;i++){\n        for(int j=1;j<=n;j++){\n            scanf(\"%d\",&loe[i][j]);\n        }\n    }\n    for(int a=1;a<=m;a++){\n        for(int b=1;b<=n;b++){\n            for(int c=1;c<=m;c++){\n                for(int d=1;d<=n;d++){\n                    int t=max(f[a][b-1][c][d-1],f[a][b-1][c-1][d]);\n                    int z=max(f[a-1][b][c][d-1],f[a-1][b][c-1][d]);\n                    f[a][b][c][d]=max(t,z)+loe[a][b]+loe[c][d];\n                    if(a==c&&b==d)f[a][b][c][d]-=loe[a][b];\n                }\n            }\n        }\n    }\n    printf(\"%d\\n\",f[m][n][m][n]);\n    return 0;\n}\n\n```",
        "postTime": 1503200868,
        "uid": 49431,
        "name": "xun\u85b0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "# \u7ba1\u7406\u5458\u5927\u5927\u6c42\u901a\u8fc7\n\n# \u4f8b\u9898\uff1a\nP1004\uff0cP1006\uff0cP3126,~~\uff08\u94fe\u63a5\u5c31\u4e0d\u8d34\u4e86\uff09~~\n\n\u65e2\u7136\u662f\u5de6\u4e0a\u5230\u53f3\u4e0b\uff0c\u53f3\u4e0b\u5230\u5de6\u4e0a\uff0c\u90a3\u5c31\u7b97\u505a\u5de6\u4e0a\u5230\u53f3\u4e0b\u4e24\u6b21\u5c31\u597d\u5566\u3002\n\n#### \u5b9a\u4e49\nf[step][i][j] \u8868\u793a\u5f53\u8d70\u5230\u6a2a\u7eb5\u5750\u6807\u548c\u4e3astep\u65f6\uff0c\u5728i\uff0cj\u8fd9\u4e24\u4e2a\u7eb5\u5750\u6807\u65f6\uff08step<=n+m-1\uff0ci<j(\u4fdd\u8bc1\u8def\u5f84\u4e0d\u91cd\u590d)\uff0ci<m,j<=m(m\u4e3a\u6700\u5927\u7eb5\u5750\u6807\uff09\uff09\u7684\u6700\u5927\u6536\u76ca\n\nQ\uff1astep\u8868\u793a\u4ec0\u4e48\u5462\uff1f\n\nA\uff1a\u56e0\u4e3a\u7eb5\u6a2a\u5750\u6807\u7684\u548c\u76f8\u540c\u7684\u70b9\u5728\u540c\u4e00\u6761\u659c\u7ebf\u4e0a\uff0c\u6240\u4ee5step\u679a\u4e3e\u7684\u5c31\u662f\u8fd9\u4e00\u6761\u659c\u7ebf\u4e0a\u7684\u6240\u6709\u70b9\n\nQ\uff1a\u4e3a\u4ec0\u4e48\u8fd9\u53ef\u884c\u5462\uff1f\n\nA\uff1a\u56e0\u4e3ai<j\uff0c\u6240\u4ee5\u6211\u4eec\u8d70\u8fc7\u7684\u8def\u5f84\u4e0d\u4f1a\u91cd\u590d\uff0c\u6ee1\u8db3\u9898\u610f\u3002\u518d\u6709\uff0c\u901a\u8fc7step\uff0c\u6211\u4eec\u80fd\u591f\u5f97\u5230\u6bcf\u4e2a\u70b9\u7684\u7eb5\u6a2a\u5750\u6807\uff0c\u56e0\u6b64\u53ef\u884c\u3002\n\n#### \u72b6\u6001\u8f6c\u79fb\n\n```cpp\n        memset(f,-1,sizeof(f));\n\tf[2][1][1]=0;\n\tfor(int k=3;k<n+m;k++)//n\u662f\u884c\uff0cm\u662f\u5217\n\t    for(int i=1;i<m;i++)\n\t        for(int j=i+1;j<=m;j++)\n\t        {\n\t        \tint s=f[k][i][j];\n\t        \ts=max(s,f[k-1][i][j]);\n\t        \ts=max(s,f[k-1][i][j-1]);\n\t        \ts=max(s,f[k-1][i-1][j]);\n\t        \ts=max(s,f[k-1][i-1][j-1]);\n\t\t        if(s==-1) continue;\n\t\t\tf[k][i][j]=s+a[k-j][j]+a[k-i][i]; \n\t\t}\n\tprintf(\"%d\",f[n+m-1][m-1][m]);\n```\nQ\uff1a\u8fd9\u4e9b\u65b9\u7a0b\u662f\u4ece\u54ea\u91cc\u63a8\u8fc7\u6765\u7684\u5462\uff1f\n\nA\uff1ak-1\uff08\u5c31\u4e0d\u8bf4\u4e86\u2026\u2026\u53ef\u4ee5\u7406\u89e3\uff09\u3002i\u4e0ej\uff0c\u56e0\u4e3a\u53ea\u80fd\u4ece\u4e0a\u9762\u548c\u5de6\u9762\u8f6c\u8fc7\u6765\uff08\u914d\u56fe\uff09\uff0c\u5e94\u8be5\u53ef\u4ee5\u7406\u89e3\n\n![](https://cdn.luogu.com.cn/upload/pic/58436.png)\n\n~~\u624b\u7ed8\uff0c\u52ff\u55b7~~\n\n#### \u7b54\u6848\u4f4d\u7f6e\n\n##### f[n+m-1][m-1][m]\n\nQ\uff1a\u8fd9\u4e2a\u4e1c\u897f\u5728\u54ea\u91cc\uff1f\n\nA\uff1a\u5c31\u5728\u53f3\u4e0b\u89d2\u7684\u5de6\u8fb9\u4e00\u4e2a\u548c\u4e0a\u8fb9\u4e00\u4e2a\n\n# P1004\u4ee3\u7801\n```cpp\n#include<cstdio>\n#define max(A,B) A<B?B:A\n#include<cstring>\nint n,m,a[60][60],f[200][60][60];\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t    for(int j=1;j<=m;j++)\n\t        scanf(\"%d\",&a[i][j]);\n\tmemset(f,-1,sizeof(f));\n\tf[2][1][1]=0;\n\tfor(int k=3;k<m+n;k++)\n\t    for(int i=1;i<m;i++)\n\t        for(int j=i+1;j<=m;j++)\n\t        {\n\t        \tint s=f[k][i][j];\n\t        \ts=max(s,f[k-1][i][j]);\n\t        \ts=max(s,f[k-1][i][j-1]);\n\t        \ts=max(s,f[k-1][i-1][j]);\n\t        \ts=max(s,f[k-1][i-1][j-1]);\n\t\t\t\tif(s==-1) continue;\n\t\t\t\tf[k][i][j]=s+a[k-j][j]+a[k-i][i]; \n\t\t\t}\n\tprintf(\"%d\",f[n+m-1][m-1][m]);\n\treturn 0;\n } \n```\n## \u9e2d\u7ef4\u540e\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#define max(A,B) A<B?B:A\n#include<cstring>\nint n,m,a[60][60],f[60][60];\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t    for(int j=1;j<=m;j++)\n\t        scanf(\"%d\",&a[i][j]);\n\tmemset(f,-1,sizeof(f));\n\tf[1][1]=0;\n\tfor(int k=3;k<m+n;k++)\n\t    for(int i=m-1;i>=1;i--)//\u6ce8\u610f\u8fd9\u91cc\u7684\u65b9\u5411\n\t        for(int j=m;j>=i+1;j--)\n\t        {\n\t        \tint s=f[i][j];\n\t        \ts=max(s,f[i][j]);\n\t        \ts=max(s,f[i][j-1]);\n\t        \ts=max(s,f[i-1][j]);\n\t        \ts=max(s,f[i-1][j-1]);\n\t\t\tif(s==-1) continue;\n\t\t\tf[i][j]=s+a[k-j][j]+a[k-i][i]; \n\t        }\n\tprintf(\"%d\",f[m-1][m]);\n\treturn 0;\n } \n```\n\n\u6b22\u8fce\u6765\u8e29\n[\u535a\u5ba2\u5730\u5740](https://www.luogu.org/blog/JohnJoeZHU/)",
        "postTime": 1557840677,
        "uid": 144523,
        "name": "JohnJoeZhu",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "\u4e0d\u80fd\u6bcf\u6b21\u9009\u6700\u5927\u7684\u8d70\uff08\u8d2a\u5fc3\uff09\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u5c0f\u7684\u540e\u9762\u63a5\u5927\u7684\uff0c\u6bd4\u5982\n\n0   1   99\n\n12 10 1\n\n\u7531\u4e8e\u53ea\u80fd\u60f3\u4e24\u4e2a\u65b9\u5411\u8d70\uff0c\u6240\u4ee5\u5230\u8fbe\u7ed3\u679c\u7684\u6b65\u6570\u662f\u56fa\u5b9a\u7684\uff08\u957f+\u5bbd-1\uff09\n\n\u4f46\u662f\u7528\u6b65\u6570\u4e0d\u80fd\u8868\u8fbe\u72b6\u6001\uff0c\u6240\u4ee5\u5c31\u7528\u5750\u6807\u8868\u793af[i][j]\u8868\u793a\u5728\uff08i\uff0cj\uff09\u6700\u5927\u7684\u548c\uff0c\u8f6c\u79fb\u65b9\u7a0b\u6709\u53cd\u65b9\u5411\u5f97\u6765\n\n\u8981\u6c42\u6765\u56de\u4e14\u8def\u7ebf\u4e0d\u80fd\u91cd\u5408\uff0c\u90a3\u4e48\u7528f[i][j][k][z]\u8868\u793a\u7b2c\u4e00\u6b21\u5728\uff08i\uff0cj\uff09\uff0c\u7b2c\u4e8c\u6b21\u5728\uff08k\uff0cz\uff09\u7684\u6700\u4f18\u89e3\n\n\u867d\u7136\u8d77\u59cb\u70b9\u4e0d\u540c\uff0c\u4f46\u65e0\u6240\u8c13\uff0c\u53ef\u4ee5\u770b\u4e3a\u76f8\u540c\u8d77\u59cb\u70b9\uff0c\u8fd8\u53ef\u4ee5\u538b\u7f29\u4e00\u7ef4\uff0c\u6bd5\u7adf\u7b2c\u4e00\u6b21\u548c\u7b2c\u4e8c\u6b21\u662f\u540c\u65f6\u8f6c\u6362\u7684\uff0c\u4ed6\u4eec\u7684\u6b65\u6570\u76f8\u540c\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<iomanip>\n#include<algorithm>\nusing namespace std;\nint m,n,a[51][51],f[51][51][51][51];\nint main()\n{\n    cin>>m>>n;\n    for(int i=1;i<=m;++i)\n     for(int j=1;j<=n;++j)\n      cin>>a[i][j];\n    for(int i=m;i>=1;--i)\n     for(int j=n;j>=1;--j)\n      for(int k=m;k>=1;--k)\n       for(int z=n;z>=1;--z)\n       f[i][j][k][z]=0;\n    for(int i=m;i>=1;--i)\n     for(int j=n;j>=1;--j)\n      for(int k=m;k>=1;--k)\n       for(int z=n;z>=1;--z)\n        {\n            if((i>1&&k>1)&&(i-1!=k-1||j!=z)) f[i-1][j][k-1][z]=max(f[i-1][j][k-1][z],f[i][j][k][z]+a[i-1][j]+a[k-1][z]);\n            if((i>1&&z>1)&&(i-1!=k||j!=z-1)) f[i-1][j][k][z-1]=max(f[i-1][j][k][z-1],f[i][j][k][z]+a[i-1][j]+a[k][z-1]);\n            if((j>1&&k>1)&&(i!=k-1||j-1!=z)) f[i][j-1][k-1][z]=max(f[i][j-1][k-1][z],f[i][j][k][z]+a[i][j-1]+a[k-1][z]);\n            if((j>1&&z>1)&&(i!=k||j-1!=z-1)) f[i][j-1][k][z-1]=max(f[i][j-1][k][z-1],f[i][j][k][z]+a[i][j-1]+a[k][z-1]);\n        }\n    cout<<f[2][1][1][2];\n    return 0;\n}\n```",
        "postTime": 1504148277,
        "uid": 43140,
        "name": "zhaoyifan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "\u9898\u89e3\u91cc\u8c8c\u4f3c\u5168\u90e8\u662f\u52a8\u89c4\uff0c\u8fd9\u91cc\u6765\u4e00\u53d1\u8d39\u7528\u6d41\n\n\u628a\u56fe\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\u5206\u6210\u4e24\u4e2a\uff0c\u5176\u6807\u53f7\u76f8\u8fde\uff0c\u4e2d\u95f4\u63a5\u4e0a\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u8fb9\u7684\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a\u597d\u611f\u5ea6\u7684\u76f8\u53cd\u6570\uff08\u6bd5\u7adf\u6700\u5c0f\u8d39\u7528\u6d41\uff09\n\n\u7136\u540e\u5728\u52a0\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\u4e0e\u5de6\u4e0a\u89d2\u76f8\u8fde\uff0c\u8d85\u7ea7\u6c47\u70b9\u4e0e\u53f3\u4e0b\u89d2\u76f8\u8fde\uff0c\u5bb9\u91cf\u90fd\u4e3a2\uff0c\u8d39\u7528\u90fd\u4e3a0\n\n\u7136\u540e\u5c06\u539f\u70b9\u4e0e\u76f8\u90bb\u7684\u70b9\u7684\u5206\u88c2\u70b9\u76f8\u8fde\uff0c\u5bb9\u91cf\u90fd\u4e3a1\uff0c\u8d39\u7528\u90fd\u4e3a0\n\n\n\u6bd4\u5982\u8bf4\u6837\u4f8b\u91cc\u9762\uff0c\u5efa\u51fa\u6765\u7684\u56fe\u53ef\u4ee5\u770b\u6210\u662f\u4e0b\u9762\u8fd9\u4e2a\u56fe\u7684\u6837\u5b50\uff1a\n\n\n![](http://i4.bvimg.com/609931/b0f589a2cc38cd3d.png)\n\n\u7136\u540e\u4e00\u6ce2\u8d39\u7528\u6d41\u8fc7\u53bb\u5c31\u597d\u4e86\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <queue>\n\n\nusing namespace std;\n\nnamespace my\n{\n    class edge\n    {\n    public:\n        int fr, to, iMaxFlow, cost, next;\n    };\n\n    class point\n    {\n    public:\n        point() : iMinCost(0){}\n        point(const point& pt) : rank(pt.rank), iMinCost(pt.iMinCost), iMaxFlow(pt.iMaxFlow){}\n        point(int _rank, int min, int max) : rank(_rank), iMinCost(min), iMaxFlow(max){}\n        int rank, iMinCost, iMaxFlow;\n    };\n\n    inline int min(const int& a, const int& b)\n    {\n        return a < b ? a : b;\n    }\n}\n\nconst int INF((1 << 31) - 1);\n\n\n\nmy::edge edgeAll[1000006];\nint iEnd;\nint iHead[100005];\nint iSource(0), iSink(1);\n\nvoid Add(int fr, int to, int MaxFlow, int cost)\n{\n    edgeAll[iEnd].fr = fr;\n    edgeAll[iEnd].to = to;\n    edgeAll[iEnd].iMaxFlow = MaxFlow;\n    edgeAll[iEnd].cost = cost;\n    edgeAll[iEnd].next = iHead[fr];\n    iHead[fr] = iEnd;\n    ++iEnd;\n}\n\ninline void AddOvonic(int fr, int to, int MaxFlow, int cost)\n{\n    Add(fr, to, MaxFlow, cost);\n    Add(to, fr, 0, -cost);\n}\n\nint iCx, iCy;\n\nint iPoint[102][102];\n\nbool bInQue[100005];\nint iDis[100005];\nint iPreEdge[100005];\nint SPFA()\n{\n    int ret(0);\n    queue<my::point> que;\n    for (int i(0); i <= iSink; ++i)\n    {\n        iDis[i] = INF;\n        iPreEdge[i] = -1;\n    }\n    iDis[iSource] = 0;\n    que.push(my::point(iSource, 0, INF));\n    while(!que.empty())\n    {\n        my::point pt(que.front());\n        que.pop();\n        bInQue[pt.rank] = false;\n        if (pt.rank == iSink)\n        {\n            ret = pt.iMaxFlow;\n        }\n        for (int i(iHead[pt.rank]); i != -1; i = edgeAll[i].next)\n        {\n            int& iDest = edgeAll[i].to;\n            if (edgeAll[i].iMaxFlow == 0)continue;\n            if (iDis[pt.rank] + edgeAll[i].cost < iDis[iDest])\n            {\n                iDis[iDest] = iDis[pt.rank] + edgeAll[i].cost;\n                iPreEdge[iDest] = i;\n                if (!bInQue[iDest])\n                {\n                    que.push(my::point(iDest, iDis[iDest], my::min(pt.iMaxFlow, edgeAll[i].iMaxFlow)));\n                    bInQue[iDest] = true;\n                }\n            }\n        }\n    }\n    return ret;\n}\n\nint MinCostMaxFlow()\n{\n    int ret(0);\n    while(1)\n    {\n        int iMaxFlow(SPFA());\n        if (iMaxFlow == 0)break;\n        ret += iDis[iSink] * iMaxFlow;\n        for (int i(iPreEdge[iSink]); i != -1; i = iPreEdge[edgeAll[i].fr])\n        {\n            edgeAll[i].iMaxFlow -= iMaxFlow;\n            edgeAll[i ^ 1].iMaxFlow += iMaxFlow;\n        }\n    }\n    return ret;\n}\n\nint main()\n{\n    scanf(\"%d%d\", &iCx, &iCy);\n    iSource = 2 * iCx * iCy;\n    iSink = iSource + 1;\n    int iCount(0);\n    for (int i(0); i != iCx; ++i)\n    {\n        for (int j(0); j != iCy; ++j)\n        {\n            iPoint[i][j] = iCount;\n            iCount += 2;\n        }\n    }\n    for (int i(0); i <= iSink; ++i)\n    {\n        iHead[i] = -1;\n    }\n    AddOvonic(iSource, iPoint[0][0] ^ 1, 2, 0);\n    AddOvonic(iPoint[iCx - 1][iCy - 1], iSink, 2, 0);\n    for (int i(0); i != iCx; ++i)\n    {\n        for (int j(0); j != iCy; ++j)\n        {\n            int iIn;\n            scanf(\"%d\", &iIn);\n            if ((i == 0 && j == 0) || (i == iCx - 1 && j == iCy - 1))\n            {\n                AddOvonic(iPoint[i][j] ^ 1, iPoint[i][j], 2, -iIn);\n                continue;\n            }\n            AddOvonic(iPoint[i][j] ^ 1, iPoint[i][j], 1, -iIn);\n        }\n    }\n    for (int i(0); i != iCx - 1; ++i)\n    {\n        for (int j(0); j != iCy - 1; ++j)\n        {\n            AddOvonic(iPoint[i][j], iPoint[i + 1][j] ^ 1, 1, 0);\n            AddOvonic(iPoint[i][j], iPoint[i][j + 1] ^ 1, 1, 0);\n        }\n    }\n    for (int i(0); i != iCx - 1; ++i)\n    {\n        AddOvonic(iPoint[i][iCy - 1], iPoint[i + 1][iCy - 1] ^ 1, 1, 0);\n    }\n    for (int i(0); i != iCy - 1; ++i)\n    {\n        AddOvonic(iPoint[iCx - 1][i], iPoint[iCx - 1][i + 1] ^ 1, 1, 0);\n    }\n    printf(\"%d\", -MinCostMaxFlow());\n    return 0;\n}\n```",
        "postTime": 1503979274,
        "uid": 33173,
        "name": "_J_C_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "- \u6b64\u9898\u53ef\u4ee5\u91c7\u7528\u4e09\u7ef4\u65b9\u6cd5 \u5177\u4f53\u4e3af[i][j][p] \u5176\u4e2di\u4e3a\u8d70\u7684\u6b65\u6570 \u56e0\u4e3a\u4e00\u4e2a\u4f20\u56de\u6765\u4e00\u4e2a\u4f20\u56de\u53bb \u6b64\u9898\u5c31\u76f8\u5f53\u4e8e\u4e00\u4eba\u4f20\u4e24\u4e2a\u5355\u5b50\u4f20\u8fc7\u53bb\u4e2d\u95f4\u4e0d\u91cd\u590d\n\n- \u636e\u6b64\u7279\u6b8a\u60c5\u51b5 \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 \u53ea\u6709\u6b65\u6570\u76f8\u540c\u65f6 \u4e24\u4e2a\u5355\u5b50\u624d\u80fd\u591f\u5728\u91cd\u590d\u4e00\u4e2a\u4eba\u4e2d\u51fa\u73b0\u8fd9\u4e5f\u662f\u4e09\u7ef4\u53ef\u4ee5\u884c\u7684\u539f\u56e0\n\n- \u7531\u4e8e\u4ece\u4e0a\u5230\u4e0b\u6b65\u6570\u65f6\u4e00\u5b9a\u7684 \u90a3\u4e48\u6b65\u6570\u786e\u5b9a\u7684\u60c5\u51b5\uff0c\u6a2a\u5750\u6807+\u7eb5\u5750\u6807\u4e3a\u5b9a\u503c=\u6b65\u6570\u52a01\uff1b\u8fd9\u6837 \u7eb5\u5750\u6807\u5c31\u53ef\u4ee5\u7701\u7565\uff1b\n\n- \u4ee3\u7801\u5982\u4e0b\n\n```cpp\n- #include<cstdio>\n#include<iostream>\nusing namespace std;\nint a[51][51],f[101][51][51];\nint main()\n{\n    int m,n;\n    scanf(\"%d%d\",&m,&n);\n    for(int i=1;i<=m;i++)\n     for(int j=1;j<=n;j++)\n      scanf(\"%d\",&a[i][j]);\n      for(int i=2;i<=m+n-1;i++)\n       for(int j=max(1,i-n+1);j<=min(m,i);j++)   //\u6b64\u6761\u4ef6\u662f\u5224\u65ad\u662f\u5426\u8d85\u754c \u5750\u6807\u603b\u4e0d\u80fd\u8d85\u51fa\u8303\u56f4\u5427 \n        for(int k=max(1,i-n+1);k<=min(m,i);k++)  // \u540c\u4e0a \n        {\n            f[i][j][k]=max(max(f[i-1][j][k],f[i-1][j-1][k]),max(f[i-1][j][k-1],f[i-1][j-1][k-1]))+a[j][i+1-j]+a[k][i+1-k];//\u8fd9\u91cc\u63d0\u4e00\u4e0b \u7528\u6b65\u6570\u4e0e\u5750\u6807\u7684\u5173\u7cfb\u77e5\u4e8c\u6c42\u4e00 \n            if(j==k) f[i][j][k]-=a[j][i+1-j]; //\u91cd\u590d\u5750\u6807\u65f6\u597d\u611f\u5ea6\u53ea\u80fd\u53d6\u4e00\u6b21 \u76f8\u5f53\u4e8e\u53ea\u8fc7\u4e86\u4e00\u6b21 \u4e3b\u8981\u662f\u8fd9\u9053\u9898\u4e24\u6761\u8def\u7ebf\u662f\u7edd\u5bf9\u4e0d\u4f1a\u4ea4\u53c9\u7684 \n        }\n        printf(\"%d\",f[n+m-1][m][m]);//\u6700\u540edp\u5b8c\u6210 \u6700\u4e0b\u7aef\u4e3a\u6700\u4f18\u89e3 \n        return 0;\n}\n```",
        "postTime": 1491657334,
        "uid": 26195,
        "name": "h4Nooo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "\u6765\u53d1\u9898\u89e3\n\n\n\u8fd9\u9053\u9898\u521a\u5f00\u59cb\u7684\u65f6\u5019\u5c31\u60f3\u5230\u7528 \u52a8\u6001\u89c4\u5212 \u7684\u65b9\u6cd5\u6765\u505a\uff0c\u4ee5\u4e3a\u53ea\u662f\u4e24\u6b21\u52a8\u6001\u89c4\u5212\uff0c\u7b2c\u4e8c\u6b21\u52a8\u6001\u89c4\u5212\u6392\u9664\u6389\u7b2c\u4e00\u6b21\u8d70\u8fc7\u7684\u70b9\u800c\u5df2\u3002\n\n\n\u4f46\u5b9e\u73b0\u4e86\u5355\u6761\u9053\u8def\u7684\u6700\u5927\u597d\u611f\u5ea6\u548c\u7684\u8ba1\u7b97\u4e4b\u540e\uff0c\u5374\u53d1\u73b0\u8fdc\u8fdc\u6ca1\u8fd9\u4e48\u7b80\u5355\uff0c\u4e24\u6761\u9053\u8def\u5982\u4f55\u4e0d\u4ea4\u53c9\u662f\u4e00\u4e2a\u95ee\u9898\u3002\n\n\n\u6700\u540e\u7528\u56db\u7ef4\u6570\u7ec4\u6765\u52a8\u6001\u89c4\u5212\u89e3\u51b3\u4e86\u8fd9\u5012\u9898\u3002\n\n\n\u8bbef[i][j][k][l]\u4e3a\u4ece (0, 0) \u4f4d\u7f6e\u7531\u4e24\u6761\u4e0d\u4ea4\u53c9\u7684\u7ebf\u8def\u8d70\u5230 (i, j)\uff0c(k, l) \u4f4d\u7f6e\u65f6\u7684\u6700\u5927\u597d\u611f\u5ea6\u548c\uff0c\u5219\u5b83\u7684\u4e0a\u4e00\u6b65\u53ef\u80fd\u6709\u56db\u79cd\u60c5\u51b5\uff1a\n\n\n\u7b2c\u4e00\u4e2a\u70b9\u7531\u4e0a\u8d70\u6765\uff0c\u7b2c\u4e8c\u4e2a\u70b9\u4e5f\u7531\u4e0a\u8d70\u6765\uff0c\u6b64\u65f6\u7684\u597d\u611f\u5ea6\u548c\u4e3af[i - 1][j][k - 1][l] + a[i][j] + a[k][l]\n\n\u7b2c\u4e00\u4e2a\u70b9\u7531\u4e0a\u8d70\u6765\uff0c\u7b2c\u4e8c\u4e2a\u70b9\u5219\u7531\u5de6\u8d70\u6765\uff0c\u6b64\u65f6\u7684\u597d\u611f\u5ea6\u548c\u4e3af[i - 1][j][k][l - 1] + a[i][j] + a[k][l]\uff0c\u4f46\u6b64\u65f6\u5e94\u8003\u8651\u7b2c\u4e00\u4e2a\u70b9\u7684\u4e0a\u65b9\u7684\u70b9\u662f\u5426\u4f1a\u4e0e\u7b2c\u4e8c\u4e2a\u70b9\u7684\u5de6\u65b9\u7684\u70b9\u91cd\u5408\uff0c\u5982\u679c\u91cd\u5408\u5219\u4e0d\u53ef\u53d6\n\n\u7b2c\u4e00\u4e2a\u70b9\u7531\u5de6\u8d70\u6765\uff0c\u7b2c\u4e8c\u4e2a\u70b9\u5219\u7531\u4e0a\u8d70\u6765\uff0c\u6b64\u65f6\u7684\u597d\u611f\u5ea6\u548c\u4e3af[i][j - 1][k - 1][l] + a[i][j] + a[k][l]\uff0c\u4f46\u6b64\u65f6\u5e94\u8003\u8651\u7b2c\u4e00\u4e2a\u70b9\u7684\u5de6\u65b9\u7684\u70b9\u662f\u5426\u4f1a\u4e0e\u7b2c\u4e8c\u4e2a\u70b9\u7684\u4e0a\u65b9\u7684\u70b9\u91cd\u5408\uff0c\u5982\u679c\u91cd\u5408\u5219\u4e0d\u53ef\u53d6\n\n\u7b2c\u4e00\u4e2a\u70b9\u7531\u5de6\u8d70\u6765\uff0c\u7b2c\u4e8c\u4e2a\u70b9\u4e5f\u7531\u5de6\u8d70\u6765\uff0c\u6b64\u65f6\u7684\u597d\u611f\u5ea6\u548c\u4e3af[i][j - 1][k][l - 1] + a[i][j] + a[k][l]\n\n\u53d6\u56db\u79cd\u60c5\u51b5\u4e2d\u7684\u6700\u5927\u8005\u5373\u53ef\u3002\n\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n\uff08\u51cf\u5c11\u4ee3\u7801\u590d\u5236\uff0c\u5171\u521b\u7f8e\u597d\u6d1b\u8c37\uff09\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nint f[51][51][51][51];// f[i][j][k][l] \u8868\u793a\u4ece (0, 0) \u4f4d\u7f6e\u7531\u4e24\u6761\u4e0d\u4ea4\u53c9\u7684\u7ebf\u8def\u8d70\u5230 (i, j)\uff0c(k, l) \u4f4d\u7f6e\u65f6\u7684\u6700\u5927\u597d\u611f\u5ea6\u548c\nint a[51][51];// \u597d\u611f\u5ea6\u6570\u7ec4\nint n,m;\nmain()\n{\n    scanf(\"%d%d\",&m,&n);\n    for (int i=1;i<=m;i++)\n        for (int j=1;j<=n;j++)\n            scanf(\"%d\",&a[i][j]);\n    for(int i = 1; i <= m; ++i)\n        {\n            for(int j = 1; j <= n; ++j)\n                {\n                    for(int k = 1; k <= m; ++k)\n                        {\n                            for(int l = 1; l <= n; ++l)\n                                {\n                                    // \u8fd8\u6ca1\u5230\u7ec8\u70b9\u524d\u4e0d\u80fd\u8d70\u5230\u540c\u4e00\u4e2a\u70b9\uff0c\u56e0\u6b64(i, j)\u4e0d\u80fd\u7b49\u4e8e(k, l)\n                                    // \u52a0\u4e0a\u5c0f\u4e8e\u5224\u65ad\u662f\u56e0\u4e3a\u5f53(i, j)\u8ddf(k, l)\u4e92\u6362\u65f6\uff0c\u6700\u5927\u597d\u611f\u5ea6\u503c\u5fc5\u5b9a\u4e00\u6837\uff0c\u4e0d\u5fc5\u91cd\u590d\u8ba1\u7b97\n                                    if((i < m || j < n) && i <= k && j <= l)\n                                    {\n                                        continue;\n                                    }\n                                    int num = 0;\n                                    // \u4e24\u4e2a\u70b9\u90fd\u7531\u4e0a\u8d70\u6765\u7684\u597d\u611f\u5ea6\n                                    num = max(num, f[i - 1][j][k - 1][l]);\n                                    // \u7b2c\u4e00\u4e2a\u70b9\u7531\u4e0a\u8d70\u6765\uff0c\u7b2c\u4e8c\u4e2a\u70b9\u4ece\u5de6\u8d70\u6765\uff0c\u5e76\u4e14\u4e24\u4e2a\u6765\u6e90\u70b9\u4e0d\u91cd\u5408\u65f6\u7684\u597d\u611f\u5ea6\n                                    if(i - 1 != k && j != l - 1)\n                                    {\n                                        num = max(num, f[i - 1][j][k][l - 1]);\n                                    }\n                                    // \u7b2c\u4e00\u4e2a\u70b9\u7531\u5de6\u8d70\u6765\uff0c\u7b2c\u4e8c\u4e2a\u70b9\u4ece\u4e0a\u8d70\u6765\uff0c\u5e76\u4e14\u4e24\u4e2a\u6765\u6e90\u70b9\u4e0d\u91cd\u5408\u65f6\u7684\u597d\u611f\u5ea6\n                                    if(i != k - 1 && j - 1 != l)\n                                    {\n                                        num = max(num, f[i][j - 1][k - 1][l]);\n                                    }\n                                    // \u4e24\u4e2a\u70b9\u90fd\u7531\u5de6\u8d70\u6765\u7684\u597d\u611f\u5ea6\n                                    num = max(num, f[i][j - 1][k][l - 1]);\n                                    // \u52a0\u4e0a\u5f53\u524d\u4e24\u70b9\u7684\u597d\u611f\u5ea6\uff0c\u5373\u4e3a\u8d70\u5230\u8fd9\u4e24\u70b9\u65f6\u7684\u6700\u5927\u597d\u611f\u5ea6\u548c\n                                    f[i][j][k][l] = num + a[i][j] + a[k][l];\n                                }\n                        }\n                }\n        }\n    printf(\"%d\\n\", f[m][n][m][n]);\n    return 0;\n}\n```",
        "postTime": 1463368420,
        "uid": 17689,
        "name": "\u8fdc\u822a\u4e4b\u66f2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "\u4e00\u9053\u975e\u5e38\u5178\u578b\u7684\u533a\u95f4dp  \n\u9898\u76ee\u8981\u6c42\u662f\u4ece\u5c0f\u6e0a\u5230\u5c0f\u8f69\u518d\u56de\u5230\u5c0f\u6e0a\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u59a8\u4ece\u5c0f\u6e0a\u5f00\u59cb\u6c42\u4e24\u6761\u4e0d\u91cd\u5408\u7684\u53bb\u5c0f\u8f69\u7684\u8def\u5f84\u3002  \n![](https://cdn.luogu.com.cn/upload/pic/71670.png)  \n\u5982\u56fe\uff0c\u5f53\u6211\u4eec\u627e\u5230\u4e86\u4e00\u6761\u8def\u5f84\u540e\uff0c\u90a3\u4e48\u8fd9\u5f20\u56fe\u5c31\u88ab\u5206\u6210\u4e86\u4e24\u90e8\u5206\uff0c\u6211\u4eec\u7684\u53e6\u4e00\u6761\u8def\u5f84\u53ea\u53ef\u80fd\u5b58\u5728\u4e8e\u5176\u4e2d\u7684\u4e00\u90e8\u5206\u4e2d\uff0c\u50cf\u8fd9\u6837\uff1a  \n![](https://cdn.luogu.com.cn/upload/pic/71674.png)  \n\u6211\u4eec\u53ef\u4ee5\u7528$f[x_1][y_1][x_2][y_2]$\u8868\u793a\u4e24\u6b21\u4f20\u9012\u5206\u522b\u5230$(x_1,y_1)$\u548c$(x_2,y_2)$\u662f\u80fd\u591f\u83b7\u5f97\u7684\u6700\u5927\u597d\u611f\u5ea6\u3002 \n\u4f46\u662f\uff0c\u8fd9\u4e2a\u6570\u7ec4\u7684\u7ef4\u5ea6\u592a\u9ad8\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5bf9\u4ed6\u964d\u7ef4\u3002  \n\u600e\u4e48\u964d\u7ef4\u5462\uff1f  \n~~\u6254\u4e00\u4e2a\u4e09\u5411\u7b94~~  \n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u5f53\u6211\u4eec\u8d70\u4e00\u6b65\uff0c\u90a3\u4e48x\u5750\u6807\u548cy\u5750\u6807\u4e4b\u95f4\u603b\u4f1a\u6709\u4e00\u4e2a\u6570\u52a0$1$\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528k\u6765\u8868\u793ax\u5750\u6807\u548cy\u5750\u6807\u7684\u548c\uff0c\u4ece\u800c\u901a\u8fc7y\u5750\u6807\u6765\u8ba1\u7b97\u51fax\u5750\u6807\u3002\u7531\u4e8ek\u5bf9\u4e8e\u4e24\u6761\u540c\u65f6\u5904\u7406\u7684\u8def\u5f84\u53ef\u4ee5\u662f\u516c\u5171\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528$f[k][y_1][y_2]$\u6765\u8868\u793a\u5f53\u524d\u72b6\u6001\u3002  \n\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e86\uff1a  \n$$f[k][i][j]=max(f[k-1][i][j],f[k-1][i-1][j]f[k-1][i][j-1]f[k-1][i-1][j-1])+map[k-i+1][i]+map[k-j+1][j]$$  \n\u6211\u4eec\u53ef\u4ee5\u6765\u770b\u4e00\u4e0b\u6211\u4eec\u5230\u5e95\u662f\u901a\u8fc7\u54ea\u4e9b\u72b6\u6001\u8f6c\u79fb\u5230\u5f53\u524d\u72b6\u6001\u7684\uff1a  \n![](https://cdn.luogu.com.cn/upload/pic/71682.png)  \ncode:  \n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#define ll long long\n#define INF 0x7fffffff\n#define re register\n#define qwq printf(\"qwq\\n\");\n\nusing namespace std;\n\nint read()\n{\n\tregister int x = 0,f = 1;register char ch;\n\tch = getchar();\n\twhile(ch > '9' || ch < '0'){if(ch == '-') f = -f;ch = getchar();}\n\twhile(ch <= '9' && ch >= '0'){x = x * 10 + ch - 48;ch = getchar();}\n\treturn x * f;\n}\n\nint n,m,map[205][205],f[205][205][205]; \n\nint cmp(int a,int b,int c,int d)\n{\n\ta = max(a,b);\n\tc = max(c,d);\n\treturn max(a,c);\n}\n\nint main()\n{\n\tm = read(); n = read();\n\tfor(int i = 1; i <= m; i++)\n\t\tfor(int j = 1; j <= n; j++)\n\t\t\tmap[i][j] = read();\n\tfor(int k = 1; k <= m + n; k++)\n\t\tfor(int i = 1; i <= min(k,n); i++)\n\t\t\tfor(int j = i + 1; j <= min(k,n); j++)\n\t\t\t\tf[k][i][j] = cmp(f[k - 1][i][j],f[k - 1][i - 1][j],f[k - 1][i][j - 1],f[k - 1][i - 1][j - 1]) + map[k - i + 1][i] + map[k - j + 1][j];\n\tf[n + m][n][n] = max(f[n + m - 1][n][n - 1],f[n + m - 1][n - 1][n]);\n\tprintf(\"%d\\n\",f[n + m][n][n]);\n    return 0;\n}\n```",
        "postTime": 1565668458,
        "uid": 150821,
        "name": "Azuree",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    },
    {
        "content": "\u540cP1004\u4e00\u6837\uff0c\u6838\u5fc3\u7b97\u6cd5\u662f\u591a\u7ebf\u7a0b\u52a8\u6001\u89c4\u5212\uff0c\u57fa\u672c\u601d\u8def\u5982\u4e0b\uff1a\n\n0. \u8bfb\u5165\u77e9\u9635\uff0c\u6ce8\u610f\u884c\u5217\u3002\n\n1. \u91c7\u7528\u4e00\u4e2a\u56db\u7ef4\u6570\u7ec4\u8bb0\u5f55\u5f53\u524d\u4e24\u6761\u8def\u8d70\u5230\u7684\u4f4d\u7f6e(x1,y1,x2,y2)\u65f6\u53d6\u5f97\u7684\u6700\u5927\u503c\uff0c\u521d\u59cb\u5316\u4e3a0\uff0c\u8868\u793a\u4e0d\u53ef\u80fd\u5230\u8fbe\u3002\n\n2. \u4e00\u4e2a\u56db\u91cd\u5faa\u73af\u679a\u4e3e\u4e24\u6761\u8def\u5206\u522b\u8d70\u5230\u7684\u4f4d\u7f6e\u3002\u7531\u4e8e\u6bcf\u4e2a\u70b9\u5747\u4ece\u4e0a\u6216\u5de6\u7ee7\u627f\u800c\u6765\uff0c\u6545\u5185\u90e8\u6709\u56db\u4e2aif\uff0c\u5206\u522b\u8868\u793a\u4e24\u4e2a\u70b9\u4ece\u4e0a\u4e0a\u3001\u4e0a\u5de6\u3001\u5de6\u4e0a\u3001\u5de6\u5de6\u7ee7\u627f\u6765\u65f6\uff0c\u52a0\u4e0a\u5f53\u524d\u4e24\u4e2a\u70b9\u6240\u53d6\u5f97\u7684\u6700\u5927\u503c\u3002\n\n3.\u8f93\u51fa\u53f3\u4e0b\u89d2\u5904\u7684\u6700\u5927\u503cf[n][m][n][m]\uff0c\u6ce8\u610f\u6362\u884c\u3002\n\n\u8fd9\u91cc\u8981\u7279\u522b\u6ce8\u610f**\u884c\u3001\u5217**\uff0c\u8fd9\u662f\u4e0eP1004\u7684\u4e00\u4e2a\u533a\u522b\uff0c\u4ee3\u7801\u4e2d\u6211\u662f\u628ax\u8f74\u653e\u5728\u5185\u5faa\u73af\u6765\u5904\u7406\u7684\u3002\n\n\u4e24\u4e2a\u540c\u5b66\u5206\u522b\u4ece\u81ea\u5df1\u7684\u8d77\u70b9\u5230\u5bf9\u65b9\u7684\u8d77\u70b9\u770b\u4e0a\u53bb\u5f88\u9ebb\u70e6\uff0c\u5176\u5b9e\u8ddf\u4e24\u4e2a\u540c\u5b66\u4ece\u4e00\u4f4d\u540c\u5b66\u7684\u8d77\u70b9\u8d70\u5230\u53e6\u4e00\u4f4d\u540c\u5b66\u7684\u8d77\u70b9\u662f\u7b49\u4ef7\u7684\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nint map[55][55],ans[55][55][55][55];\nint M_max(int a,int b,int c,int d)\n{\n    return max(max(max(a,b),c),d);\n}\nint main()\n{\n    int n,m;//m->y\n    cin>>m>>n;\n    for(int t1=1;t1<=m;t1++)//y\n        for(int t2=1;t2<=n;t2++)//x\n            cin>>map[t2][t1];//t2->x t1->y\n    for(int y1=1;y1<=m;y1++)\n        for(int x1=1;x1<=n;x1++)\n            for(int y2=1;y2<=m;y2++)\n                for(int x2=1;x2<=n;x2++)\n                {\n                    ans[x1][y1][x2][y2]=M_max(ans[x1-1][y1][x2-1][y2],ans[x1-1][y1][x2][y2-1],\n                                              ans[x1][y1-1][x2-1][y2],ans[x1][y1-1][x2][y2-1]);\n                    ans[x1][y1][x2][y2]+=map[x1][y1];\n                    if(x1!=x2||y1!=y2)\n                        ans[x1][y1][x2][y2]+=map[x2][y2];\n                }\n    cout<<ans[n][m][n][m]<<endl;\n}\n```",
        "postTime": 1503023800,
        "uid": 53833,
        "name": "Jeremy_Merle",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1006 \u3010\u4f20\u7eb8\u6761\u3011"
    }
]