[
    {
        "content": "\u8fd9\u9053\u9898\u4f3c\u4e4e\u8fd8\u662f ICPC 2003 \u51b3\u8d5b\u7684\u9898\u5462\uff0c\u4f46\u662f\u8fc7\u4e86 20 \u5e74\u73b0\u5728\u6765\u770b\u5c31\u662f\u4e00\u9053\u975e\u5e38\u7ecf\u5178\u7684 DP \u4e86\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u65e2\u7136\u662f\u505a DP \uff0c\u6211\u4eec\u5c31\u5e94\u8be5\u77e5\u9053\u4ed6\u7684\u51e0\u4e2a\u8981\u7d20\uff1a**\u9636\u6bb5\u3001\u72b6\u6001\u3001\u4ee5\u53ca\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u79fb**\u3002\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\u6765\u8bf4\uff0c\u5176\u72b6\u6001\u662f\u4ec0\u4e48\u5462\uff1f\u6211\u4eec\u9996\u5148\u60f3\u5230\u7684\u662f\u8f66\u7ad9\uff0c\u8fd8\u6709\u4e00\u4e2a\u5c31\u662f\u65f6\u95f4\uff0c\u65f6\u95f4\u662f\u5355\u5411\u6d41\u901d\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4 $dp_{i,j}$  \u6765\u8868\u793a\u65f6\u95f4   $i$ \u4f4d\u4e8e\u8f66\u7ad9 $j$ \u8981\u5728\u5730\u94c1\u7ad9\u7b49\u51e0\u5206\u949f\u8fd9\u4e2a\u72b6\u6001\u3002\n\n\u7136\u540e\u662f\u72b6\u6001\u8f6c\u79fb\u3002\u6700\u7ec8\u72b6\u6001 $dp_{T,N}$ \u6211\u4eec\u662f\u77e5\u9053\u7684\uff0c\u5b83\u4e00\u5b9a\u7b49\u4e8e 0\uff0c\u5426\u5219\u739b\u4e3d\u4e9a\u5c31\u4e0d\u80fd\u4e0e\u53e6\u4e00\u4e2a\u95f4\u8c0d\u78b0\u5934\u4e86\u3002\u90a3\u6211\u4eec\u5982\u4f55\u5c06 $dp_{T,N}$ \u8fd9\u4e2a\u72b6\u6001\u8f6c\u79fb\u5230  $dp_{0,1}$ \u8fd9\u4e2a\u72b6\u6001\u5462\uff1f\n\n\u5bf9\u4e8e\u4e00\u4e2a\u72b6\u6001\uff0c\u6211\u4eec\u53ea\u6709\u4e09\u79cd\u51b3\u7b56\uff1a\n\n1. \u539f\u5730\u7b49\u5f85\u4e00\u5206\u949f: $dp_{i,j} = dp_{i+1,j} + 1$\n\n2. \u5982\u679c\u6709\u5411\u5de6\u5f00\u7684\u8f66\uff0c\u6211\u4eec\u53ef\u4ee5\u4e58\u642d\u5411\u5de6\u7684\u8f66: $dp_{i,j} = \\min (dp_{i,j}, dp_{{i+t_j},{j+1}})$\n\n3. \u5982\u679c\u6709\u5411\u53f3\u5f00\u7684\u8f66\uff0c\u6211\u4eec\u53ef\u4ee5\u4e58\u642d\u5411\u53f3\u5f00\u7684\u8f66: $dp_{i,j} = \\min( dp_{i,j},  dp_{i+t_{j-1},j-1} )$ \n\n## \u4e00\u4e9b\u4ee3\u7801\u5b9e\u73b0\n\n\u5982\u4f55\u5224\u65ad\u662f\u5426\u6709\u5411\u5de6\u5411\u53f3\u5f00\u7684\u8f66\u5462\uff1f\u8f93\u5165\u65f6\u9884\u5904\u7406\u5373\u53ef\uff1a\n\n```cpp\n\twhile(M1--){//\u5411\u53f3\u5f00 \n\tint d = read(), tm = 0;\n\ttm = d;\n\tfor(int j = 1; j <= N; j++){\n\t\tpd[tm][j][0] = 1;\n\t\ttm += t[j];\n\t\t}\n\t}\n\tint M2 = read();\n\twhile(M2--){//\u5411\u5de6\u5f00 \n\t\tint d = read(), tm = 0;\n\t\ttm = d;\n\t\tfor(int j = N; j >= 1; j--){\n\t\t\tpd[tm][j][1] = 1;\n\t\t\ttm += t[j-1];\n\t\t}\n\t}\n```\n\nDP \u65f6\u53ef\u4ee5\u4ece\u540e\u5f80\u524d\u9012\u63a8\uff0c\u5176\u4e2d\u4e00\u4e9b\u53d8\u91cf\u540d\u53ef\u4ee5\u5230\u540e\u9762\u7684\u5b8c\u6574\u4ee3\u7801\u90a3\u53bb\u770b\u4e00\u4e0b\uff1a\n```cpp\nmemset(dp, 0x3f, sizeof(dp));\ndp[T][N] = 0;\nfor(int i = T-1; i >= 0; i--){\n\tfor(int j = 1; j <= N; j++){\n\t\tdp[i][j] = dp[i+1][j] + 1;\n\t\tif(j < N && pd[i][j][0] && i + t[j] <= T) dp[i][j] = min(dp[i][j], dp[i+t[j]][j+1]);//\u4e58\u642d\u5411\u53f3\u5f00\u7684\u8f66\n\t\tif(j > 1 && pd[i][j][1] && i + t[j-1] <= T) dp[i][j] = min(dp[i][j], dp[i + t[j-1]][j-1]);//\u4e58\u642d\u5411\u5de6\u5f00\u7684\u8f66\n\t\t\n\t}\n}\n```\n\n\u6700\u540e\u8f93\u51fa\u65f6\u8981\u6309\u4ed6\u7684\u683c\u5f0f\u8f93\u51fa\uff0c\u6ce8\u610f\u5224\u65ad\u662f\u5426\u53ef\u80fd\uff0c\u4e0d\u53ef\u80fd\u8981\u8f93\u51fa ```impossible ``` \u3002\n\n\u6211\u4eec\u6700\u7ec8\u8981\u7684\u662f $dp_{0,1}$ \u5373\u4ece 0 \u65f6\u523b\u5728 1 \u8f66\u7ad9\u5728\u5730\u94c1\u7ad9\u4e2d\u66b4\u9732\u591a\u957f\u65f6\u95f4\u624d\u80fd\u4e0e\u95f4\u8c0d\u78b0\u5934\n\n**\u5b8c\u6574\u4ee3\u7801**\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 50005\nusing namespace std;\ninline int read(){\n    int x = 0 , f = 1 ; char c = getchar() ;\n    while( c < '0' || c > '9' ) { if( c == '-' ) f = -1 ; c = getchar() ; } \n    while( c >= '0' && c <= '9' ) { x = x * 10 + c - '0' ; c = getchar() ; } \n    return x * f ;\n} \nint N, T;\nint t[80];//\u4ece\u7b2ci\u4e2a\u8f66\u7ad9\u5230\u7b2ci+1\u8f66\u7ad9\u9700\u8981\u591a\u957f\u65f6\u95f4\nint pd[2000][75][2];//\u5728i\u65f6\u523bj\u8f66\u7ad9\u662f\u5426\u6709\u5411\u53f3\u6216\u5de6\u5f00\u7684\u8f66\nint dp[2000][75];\nint cnt = 0;\nint main(){\n\twhile(N = read()){\n\t\tmemset(pd, 0, sizeof(pd)), memset(t, 0, sizeof(t));\n\t\tT = read();\n\t\tfor(int i = 1; i < N; i++) t[i] = read();\n\t\tint M1 = read();\n\t\twhile(M1--){//\u53f3\u5f00 \n\t\t\tint d = read(), tm = 0;\n\t\t\ttm = d;\n\t\t\tfor(int j = 1; j <= N; j++){\n\t\t\t\tpd[tm][j][0] = 1;\n\t\t\t\ttm += t[j];\n\t\t\t}\n\t\t}\n\t\tint M2 = read();\n\t\twhile(M2--){//\u5de6\u5f00 \n\t\t\tint d = read(), tm = 0;\n\t\t\ttm = d;\n\t\t\tfor(int j = N; j >= 1; j--){\n\t\t\t\tpd[tm][j][1] = 1;\n\t\t\t\ttm += t[j-1];\n\t\t\t}\n\t\t}\n\t\tmemset(dp, 0x3f, sizeof(dp));//\u56e0\u4e3a\u662f\u8981\u6c42\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u5c06dp\u521d\u59cb\u6210\u6781\u5927\u503c\n\t\tdp[T][N] = 0;\n\t\tfor(int i = T-1; i >= 0; i--){\n\t\t\tfor(int j = 1; j <= N; j++){\n\t\t\t\tdp[i][j] = dp[i+1][j] + 1;//\u7b49\u5f85\u4e00\u5206\u949f\uff0c\u5c31\u662f\u5728\u4e0b\u4e00\u523b\u4ecd\u5728\u8fd9\u4e2a\u8f66\u7ad9\n\t\t\t\tif(j < N && pd[i][j][0] && i + t[j] <= T) dp[i][j] = min(dp[i][j], dp[i+t[j]][j+1]);//\u4e58\u642d\u5411\u53f3\u5f00\u7684\u8f66\n\t\t\t\tif(j > 1 && pd[i][j][1] && i + t[j-1] <= T) dp[i][j] = min(dp[i][j], dp[i + t[j-1]][j-1]);//\u4e58\u642d\u5411\u5de6\u5f00\u7684\u8f66\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tcout << \"Case Number \" << ++cnt << \": \";\n\t\tif(dp[0][1] >= 0x3f) cout << \"impossible\" << endl;\n\t\telse cout << dp[0][1] << endl;\n\t}\n\t\n}\n```\n**\u5b8c**\n\n\n",
        "postTime": 1655514701,
        "uid": 311110,
        "name": "_djc_",
        "ccfLevel": 0,
        "title": "P2583 A Spy in the Metro"
    },
    {
        "content": " _\u5199\u4e86\u597d\u4e45\u7684\u4e00\u9053\u9898\uff0c \u7ec6\u5fc3\u5730\u7801\u4e86\u4e00\u6ce2\u9898\u89e3\uff0c \u5e0c\u671b\u7ba1\u7406\u5458\u5927\u5927\u80fd\u591f\u7ed9\u8fc7_\n \n\u8fd9\u9053\u9898\u7b97\u662f\u4e00\u9053\u7ebf\u6027dp\uff0c \u5173\u952e\u5728\u4e8e\u5bf9\u4e8e\u6570\u636e\u7684\u64cd\u4f5c\u4ee5\u53ca\u7ec6\u8282\u7684\u5904\u7406\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u5c06\u6709\u5173\u4e8e\u5217\u8f66\u53d1\u8f66\u65f6\u95f4\u7684\u6570\u636e\u5904\u7406\u6210\u5728\u5728\u54ea\u4e00\u65f6\u523b\uff0c\u54ea\u4e00\u7ad9\u4f1a\u6709\u5411\u54ea\u8fb9\u5f00\u8fc7\u53bb\u7684\u8f66\u3002\u5982\u6211\u4ee3\u7801\u6240\u5c55\u793a\u7684train[ 2 ][ j ][ i ]; \u8868\u793a\u7684\u662f\u5728i\u65f6\u523b\u7684\nj\u7ad9\u6709\u5411\u5de6\u6216\u5411\u53f3\uff080\u5411\u53f3\uff0c 1\u5411\u5de6)\u7684\u5217\u8f66\u3002\n\u5982\u6b64\uff0c\u5c31\u80fd\u591f\u5f88\u5bb9\u6613\u5730\u5bf9\u4e8e\u679a\u4e3e\u7684\u6bcf\u4e2a\u65f6\u523b i \uff0c \u679a\u4e3e\u6bcf\u4e2a\u8f66\u7ad9\u6765\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u6709\u4f53\u73b0\uff0c \u5404\u4f4d\u90fd\u77e5\u9053\u54ea\u91cc\u662f\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c \u8fd9\u91cc\u5c31\u4e0d\u8bb2\u4e86\u3002\n\n\u6211\u7684\u89e3\u6cd5\u662f\u5c06\u65f6\u523b i \u5012\u5e8f\u679a\u4e3e\uff0c \u5f53\u7136\u53ef\u4ee5\u6b63\u5e8f\uff0c \u53ea\u4e0d\u8fc7\u5728\u7ec6\u8282\u4e0a\u548c\u8fd9\u4e2a\u7a0d\u6709\u5dee\u522b\u3002\n\n------------\n\n```\n#include <bits/stdc++.h>\n#define met(x) memset(x, 0, sizeof(x))\n#define T 251\n#define N 51\nusing namespace std;\nconst int inf = 9999999;\nint n, t, m1, m2, d, station[N], f[T][N], num;\nbool train[2][N][70 * N * T];\ninline int read(){\n\tint s = 0, w = 1;\n\tchar ch = getchar();\n\twhile (!isdigit(ch)){\n\t\tif (ch == '-')\tw = -1;\n\t\tch = getchar(); \n\t}\n\twhile (isdigit(ch))\n\t\ts = s * 10 + ch - '0', ch = getchar();\n\treturn s * w;\n}\nvoid solve(){\n\tfor (int i = 1; i < n; i++)\tf[t][i] = inf;\n\tfor (int i = t - 1; i >= 0; i--)\n\t\tfor (int j = 1; j <= n; j++){\n\t\t\tf[i][j] = f[i + 1][j] + 1;\n\t\t\tif (j < n && train[0][j][i] && i + station[j] <= t)\n\t\t\t\tf[i][j] = min(f[i][j], f[i + station[j]][j + 1]);\n\t\t\tif (j > 1 && train[1][j][i] && i + station[j - 1] <= t)\n\t\t\t\tf[i][j] = min(f[i][j], f[i + station[j - 1]][j - 1]);\n\t\t}\n\tprintf(\"Case Number %d: \", ++num);\n\tif(f[0][1] < inf)\tcout << f[0][1];\n\telse cout << \"impossible\";\n\tcout << endl;\n}\nint main(){\n\twhile (1){\n\t\tn = read();\n\t\tif (n == 0)\tbreak;\n\t\tt = read(), met(f), met(train);\n\t\tfor (int i = 1; i < n; i++)\n\t\t\tstation[i] = read();\n\t\tm1 = read();\n\t\tfor (int i = 1; i <= m1; i++){\n\t\t\td = read();\n\t\t\tfor (int j = 1; j <= n; j++){\n\t\t\t\ttrain[0][j][d] = 1;\n\t\t\t\td += station[j];\n\t\t\t}\n\t\t}\n\t\tm2 = read();\n\t\tfor (int i = 1; i <= m2; i++){\n\t\t\td = read();\n\t\t\tfor (int j = n; j >= 1; j--){\n\t\t\t\ttrain[1][j][d] = 1;\n\t\t\t\td += station[j - 1];\n\t\t\t}\n\t\t}\n\t\tsolve();\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1537536646,
        "uid": 25729,
        "name": "\u4e0d\u8bb8\u96f7\u540c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2583 \u3010\u5730\u94c1\u95f4\u8c0d\u3011"
    },
    {
        "content": "## \u96f6. \u5b89\u5229\uff1a\n\n[\u5b89\u5229\u4e00\u4e0b\u6211\u7684\u535a\u5ba2\u3002](https://rsdbkhusky.github.io/)\n\n## \u4e00. \u601d\u8def\n\n#### 1. \u601d\u8003\u89e3\u6cd5\n\n- **\u65f6\u95f4** \u662f\u4e2a\u597d\u7684 DP \u9636\u6bb5\uff0c\u65f6\u95f4\u8f74\u4e0a\u9760\u540e\u53d1\u751f\u7684\u4e0d\u4f1a\u5f71\u54cd\u524d\u9762\u7684\u4e8b\uff0c\u53cd\u6620\u5230\u672c\u9898\u4e0a\u5c31\u662f Maria \u4e4b\u540e\u600e\u4e48\u8d70\u4e0d\u4f1a\u5f71\u54cd\u73b0\u5728\u7684\u6700\u4f18\u89e3\uff0c**\u7b26\u5408\u65e0\u540e\u6548\u6027**\u3002\n\n- Maria \u65e2\u53ef\u4ee5\u4e58\u5411\u4e1c\u7684\u5730\u94c1\uff0c\u53c8\u53ef\u4ee5\u4e58\u5411\u897f\u7684\u5730\u94c1\uff0c\u8fd8\u53ef\u4ee5\u5446\u7740\u4e0d\u52a8\u3002\u90a3\u4e48\u4e00\u79cd\u60c5\u51b5\u53ef\u4ee5\u7531\u591a\u79cd\u60c5\u51b5\u800c\u6765\uff0c\u591a\u79cd\u60c5\u51b5\u4e5f\u53ef\u4ee5\u53d1\u5c55\u6210\u4e00\u79cd\u60c5\u51b5\uff0c\u5404\u79cd\u60c5\u51b5\u4e92\u76f8\u4ea4\u7ec7\uff0c**\u7b26\u5408\u5b50\u95ee\u9898\u91cd\u53e0\u6027**\u3002\n\n\u6240\u4ee5\u8003\u8651 DP\u3002\n\n#### 2. \u524d\u7f00\u548c\u521d\u59cb\u5316\n\n   \u9898\u76ee\u7ed9\u51fa\u4e86\u7ad9\u7684\u65f6\u95f4\u95f4\u8ddd\u548c\u6bcf\u5217\u5730\u94c1\u53d1\u8f66\u65f6\u7684\u65f6\u95f4\uff08\u53ea\u4f1a\u4ece\u9996\u672b\u4e24\u7ad9\u53d1\u8f66\uff09\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5730\u94c1\u5728\u524d\u8fdb\u4e2d\u5230\u8fbe\u6bcf\u7ad9\u7684\u65f6\u95f4\u5c31\u662f\u4e2a\u524d\u7f00\u548c ~~\uff08\u5077\u5077\u70b9\u5f00\u6807\u7b7e\u6211\u4eec\u4e5f\u53ef\u4ee5\u770b\u5230\u524d\u7f00\u548c\uff09~~\uff0c\u5230\u8fbe\u67d0\u7ad9\u7684\u65f6\u95f4\u5c31\u662f\u524d\u9762\u6240\u6709\u7ad9\u65f6\u95f4\u95f4\u8ddd\u4e4b\u548c\uff0c\u5f53\u7136\u8fd8\u8981\u52a0\u4e0a\u53d1\u8f66\u65f6\u95f4\u3002\n\n#### 3. DP\n\n\u6211\u91c7\u7528\u7684\u662f **\u5237\u8868\u6cd5**\uff0c\u5f53\u7136\uff0c**\u586b\u8868\u6cd5** \u4e5f\u53ef\u4ee5\u3002\n\n1. \u6240\u9700\u6761\u4ef6\uff1a\n\n    - $stabet_i$\uff1a\u7ad9 $i-1$ \u4e0e\u7ad9 $i$ \u95f4\u76f8\u9694\u7684\u65f6\u95f4\u3002\n\n    - $canright_{i,j}(canleft_{i,j})$\uff1a$i$ \u65f6\u523b $j$ \u7ad9\u662f\u5426\u6709\u5f00\u5411\u672b\u7ad9\uff08\u9996\u7ad9\uff09\u7684\u706b\u8f66\u3002\n\n    - $d_{i,j}$\uff1a\u5f97\u5230 $i$ \u65f6\u523b\u5728 $j$ \u7ad9\u8fd9\u79cd\u72b6\u6001\u6700\u5c11\u7684\u505c\u7559\u65f6\u95f4\u3002\n\n\u901a\u8fc7\u524d\u7f00\u548c\u6211\u4eec\u5df2\u7ecf\u5f97\u5230 $canright$ \u4ee5\u53ca$canleft$ \u6570\u7ec4\u3002\u63a5\u4e0b\u6765\u5c31\u662f\u72b6\u6001\u8f6c\u79fb\u4e86\u3002\n\n2. \u521d\u59cb\u72b6\u6001\uff1a\n\n\u6613\u5f97\uff0c\u5e94\u521d\u59cb\u5316\u4e3a\uff1a $d_{i,j}=\\begin{cases}0~~~~~~~~~(i=0~\\land~j=1)\\\\\\infty~~~~~~~(else)       \\end{cases}$\n\n\u5176\u4e2d $\\infty$ \u4ee3\u8868\u65e0\u6cd5\u5230\u8fbe\u3002\n    \n3. \u72b6\u6001\u8f6c\u79fb\uff1a\n\n\u56e0\u4e3a\u672c\u9898\u7684\u9636\u6bb5\u4e4b\u95f4\u4e0d\u50cf\u666e\u901a\u76840/1\u80cc\u5305\u90a3\u6837\u53ea\u4f1a\u7531\u4e0a\u4e00\u9636\u6bb5\u8f6c\u79fb\u5230\uff0c\u800c\u662f\u4e5f\u4f1a\u7531\u5f88\u591a\u4e2a\u5355\u4f4d\u65f6\u95f4\u4e4b\u524d\u7684\u9636\u6bb5\u8f6c\u79fb\u5230\uff08\u7ad9\u4e0e\u7ad9\u4e4b\u95f4\u7684\u65f6\u95f4\u4e0d\u6b621\uff09\uff0c\u6240\u4ee5\u6211\u9009\u62e9\u591a\u7ef4\u6570\u7ec4\u800c\u975e\u6eda\u52a8\u6570\u7ec4\u3002\n\t\n\u9996\u5148\uff0c\u65e0\u8bba\u6b64\u523b\u6b64\u7ad9\u6709\u6ca1\u6709\u5730\u94c1\uff0c\u90fd\u53ef\u4ee5\u5728\u672c\u7ad9\u7b49\u5f85\uff0c\u8fd9\u662f\u666e\u904d\u7684\u8f6c\u79fb\uff1b\u53e6\u5916\uff0c\u5982\u679c\u6b64\u523b\u6b64\u7ad9\u6070\u597d\u6709\u5730\u94c1\uff0c\u53ef\u4ee5\u505a\u7279\u6b8a\u7684\u8f6c\u79fb\u3002\n\n**\u7efc\u4e0a\u6240\u8ff0\uff0c\u72b6\u8f6c\u65b9\u7a0b**\uff1a\uff08\u56e0\u4e3a\u662f\u5237\u8868\u6cd5\uff0c\u72b6\u8f6c\u65b9\u7a0b\u4e0d\u65b9\u4fbf\u5199\u5728\u4e00\u4e2a\u62ec\u53f7\u91cc\uff0c\u849f\u84bb\u5c31\u8fd9\u4e48\u5199\u4e86 qwq\uff09\n\n\uff08$\\operatorname{self}$ \u4ee3\u8868\u81ea\u5df1\uff09\n\n$d_{i,j}=\\min(\\operatorname{self},~d_{i-1,j}+1)~~~~~~~~~~~~(i>0)$\n\n$d_{i+stabet_{j+1},j+1}=\\min(\\operatorname{self},~d_{i,j})~~~~~~(canright_{i,j}=true)$\n\n$d_{i+stabet_j,j-1}=\\min(\\operatorname{self},~d_{i,j})~~~~~~~~(canleft_{i,j}=true)$\n\n4. \u7ed3\u679c\u72b6\u6001\uff1a\n\n$d_{T,n}$\n\n## \u4e8c. \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int MAXn = 50;\nconst int MAXT = 2000;\nconst int INF = 0x3f3f3f3f;\n\ntemplate <class T> \ninline void read(T &a) {\n    register char c;while (c = getchar(), c < '0' || c > '9');register T x(c - '0');while (c = getchar(), c >= '0' && c <= '9')x = (x << 1) + (x << 3) + c - '0';a = x;  \n}\n\nint n, T, stabet[MAXn + 10], rightcnt, leftcnt;\t\nbool canright[MAXT + 10][MAXn + 10], canleft[MAXT + 10][MAXn + 10];\t \nint d[MAXT + 10][MAXn + 10];\t\t\t\t\t\t\t\t\t\t\n\nint main() {\n\tint k = 0;\n\tread(n);\n\twhile (n) {\n\t\t++k;\n\t\tmemset(canright, 0, sizeof(canright));\t// \n\t\tmemset(canleft, 0, sizeof(canleft));\t//\u591a\u7ec4\u6570\u636e\u8981\u521d\u59cb\u5316\n\t\tmemset(d, 0x3f, sizeof(d));\t\t\t\t//\n\t\tread(T);\n\t\tfor (int i = 2; i <= n; ++i) {\n\t\t\tread(stabet[i]);\n\t\t}\n\t\tint time;\t\t\t\t\t\t\t\t//\n\t\tread(rightcnt);\t\t\t\t\t\t\t//\n\t\tfor (int i = 1; i <= rightcnt; ++i) {\t// \n\t\t\tread(time);\t\t\t\t\t\t\t//\n\t\t\tcanright[time][1] = 1;\t\t\t\t//\n\t\t\tfor (int j = 2; j <= n; ++j) {\t\t//\n\t\t\t\ttime += stabet[j];\t\t\t\t//\n\t\t\t\tcanright[time][j] = 1;\t\t\t//\n\t\t\t}\t\t\t\t\t\t\t\t\t//\n\t\t}\t\t\t\t\t\t\t\t\t\t//\u8fb9\u8bfb\u5165\u8fb9\u7528\u524d\u7f00\u548c\u8ba1\u7b97canright\u548ccanleft\u6570\u7ec4\n\t\tread(leftcnt);\t\t\t\t\t\t\t//\n\t\tfor (int i = 1; i <= leftcnt; ++i) {\t//\n\t\t\tread(time);\t\t\t\t\t\t\t//\n\t\t\tcanleft[time][n] = 1;\t\t\t\t//\n\t\t\tfor (int j = n - 1; j >= 1; --j) {\t//\n\t\t\t\ttime += stabet[j + 1];\t\t\t//\n\t\t\t\tcanleft[time][j] = 1;\t\t\t//\n\t\t\t}\t\t\t\t\t\t\t\t\t//\n\t\t}\t\t\t\t\t\t\t\t\t\t//\n\t\td[0][1] = 0;\n\t\tfor (int i = 0; i <= T; ++i) {\t\t\t\t\t\t\t\t\t\t\t\t//\n\t\t\tfor (int j = 1; j <= n; ++j) {\t\t\t\t\t\t\t\t\t\t\t//\n\t\t\t\tif (i)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\td[i][j] = min(d[i][j], \t\t\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t  d[i - 1][j] + 1);\t\t\t\t\t\t\t\t\t//\n\t\t\t\tif (canright[i][j])\t\t\t\t\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\td[i + stabet[j + 1]][j + 1] = min(d[i + stabet[j + 1]][j + 1], \t//\u52a8\u6001\u89c4\u5212 \n\t\t\t\t\t\t\t\t\t\t\t\t\t  d[i][j]\t\t\t\t\t  );//\n\t\t\t\tif (canleft[i][j])\t\t\t\t\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\td[i + stabet[j]][j - 1] = min(d[i + stabet[j]][j - 1], \t\t\t//\n\t\t\t\t\t\t\t\t\t\t\t\t  d[i][j]\t\t\t\t  );\t\t//\n\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n\t\tif (d[T][n] == INF) {\n\t\t\tprintf(\"Case Number %d: impossible\\n\", k);\n\t\t} else {\n\t\t\tprintf(\"Case Number %d: %d\\n\", k, d[T][n]);\n\t\t}\n\t\tread(n);\t\n\t}\t\n}\n```",
        "postTime": 1624421561,
        "uid": 392727,
        "name": "rsdbk_husky",
        "ccfLevel": 8,
        "title": "Luogu P2583 \u5730\u94c1\u95f4\u8c0d"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u5c31\u662f \u63d0\u9ad8+/\u7701\u9009- \u7684\u9898\uff0c\u611f\u89c9\u76f8\u5bf9\u6bd4\u8f83\u6c34\uff0c\u6570\u636e\u4e5f\u5c0f\uff0c\u641c\u7d22\u4e5f\u80fdA\u5427\uff0c\u8fd9\u91cc\u8bb2dp\u505a\u6cd5\n\n\u9996\u5148\u5b9a\u4e49\u72b6\u6001\uff0c\u5c31\u662f\u65f6\u95f4\u548c\u5730\u70b9\uff0c\u7528 f[i][j] \u8868\u793a\u5728 i \u65f6\uff0c j \u8f66\u7ad9\u7684\u6700\u5c11\u7b49\u5f85\u65f6\u95f4\n\n\u8f6c\u79fb\u65b9\u5f0f\u6700\u591a\u6709\u4e09\u79cd\uff1a\n\n1\u3001\u4ece\u4e0a\u4e00\u79d2\u8f6c\u79fb f[i][j]=min(f[i][j],f[i-1][j]);\n\n2\u3001\u6709\u5c5e\u4e8e M1 \u7684\u8f66\u5230\u7ad9\u4e86 f[i][j]=min(f[i][j],f[i- \u4e0a\u4e00\u7ad9\u5230\u8fd9\u4e00\u7ad9\u7684\u65f6\u95f4 ][j-1]);\n\n3\u3001\u6709\u5c5e\u4e8e M2 \u7684\u8f66\u5230\u7ad9\u4e86 f[i][j]=min(f[i][j],f[i- \u4e0b\u4e00\u7ad9\u5230\u8fd9\u4e00\u7ad9\u7684\u65f6\u95f4 ][j+1]);\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u8f6c\u79fb\u4e86\n\n\u590d\u6742\u5ea6 O(N\\*T)\n\n\u00b7\u00b7\u00b7\n    \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,p,t[55],m1,t1[55],m2,t2[55];\nint f[205][55];//\u5728i\u65f6\uff0c\u7b2cj\u4e2a\u8f66\u7ad9\u7b49\u5f85\u7684\u65f6\u95f4 \nbool vis[205][55][2];//\u5728 i \u65f6,\u7b2c j \u4e2a\u8f66\u7ad9\u662f\u5426\u6709\u8f66\u4ece k \u65b9\u5411\u6765 \nvoid init(){\n    memset(f,127,sizeof(f));\n    memset(vis,0,sizeof(vis));\n    memset(t,0,sizeof(t));\n    memset(t1,0,sizeof(t1));\n    memset(t2,0,sizeof(t2));\n}    \nvoid work(int num){\n    int tmp;\n    for(int i=1;i<=m1;i++){\n        tmp=t1[i];\n        for(int j=1;j<=n&&tmp<=p;j++){\n            vis[tmp][j][0]=1;\n            tmp+=t[j];\n        }\n    }\n    for(int i=1;i<=m2;i++){\n        tmp=t2[i];\n        for(int j=n;j>=1&&tmp<=p;j--){\n            vis[tmp][j][1]=1;\n            tmp+=t[j-1];\n        }\n    }\n    f[0][1]=0;\n    for(int i=1;i<=p;i++){\n        for(int j=1;j<=n;j++){\n            f[i][j]=min(f[i][j],f[i-1][j]+1);\n            if(vis[i][j][0]==1){\n                f[i][j]=min(f[i][j],f[i-t[j-1]][j-1]);\n            }\n            if(vis[i][j][1]==1){\n                f[i][j]=min(f[i][j],f[i-t[j]][j+1]);\n            }\n        }\n    }\n    if(f[p][n]<=p){\n        printf(\"Case Number %d: %d\\n\",num,f[p][n]);\n    }\n    else{\n        printf(\"Case Number %d: impossible\\n\",num);\n    }\n}\nint main(){\n    int num=1;\n    scanf(\"%d\",&n);\n    while(n!=0){\n        init();\n        scanf(\"%d\",&p);\n        for(int i=1;i<=n-1;i++){\n            scanf(\"%d\",&t[i]);\n        }\n        scanf(\"%d\",&m1);\n        for(int i=1;i<=m1;i++){\n            scanf(\"%d\",&t1[i]);\n        }\n        scanf(\"%d\",&m2);\n        for(int i=1;i<=m2;i++){\n            scanf(\"%d\",&t2[i]);\n        }\n        work(num++);\n        scanf(\"%d\",&n);\n    }\n}\n```\n\u00b7\u00b7\u00b7",
        "postTime": 1502283483,
        "uid": 33084,
        "name": "circlegg",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2583 \u3010\u5730\u94c1\u95f4\u8c0d\u3011"
    },
    {
        "content": " _\u67d0lch\u8001\u5e08\u6559\u7684\u65b9\u6cd5\uff0c\u4e00\u770b\u8fd9\u4e2a\u65b9\u6cd5\u8fd8\u6ca1\u6709\u4eba\u53d1\u9898\u89e3\u2026\u2026\u5c31\u6765\u8bd5\u8bd5\u4e86\u3002_ \n \n\u7528\u7684\u662f **\u5efa\u5206\u5c42\u56fe + \u6700\u77ed\u8def** \u7684\u65b9\u6cd5\u3002\u6574\u4e2a\u89e3\u9898\u6d41\u7a0b\u5927\u81f4\u5c31\u5206\u4e3a\u8fd9\u4e24\u4e2a\u6a21\u5757\u4e86\u3002\u8fd9\u4e2a\u529e\u6cd5\u53ef\u80fd\u4e0d\u662f\u6700\u5feb\u6700\u4f18\u79c0\u7684\uff0c\u4f46\u5b83\u4e5f\u8bb8\u662f **\u6700\u7f8e\u5999\u6700\u7075\u6d3b** \u7684\u3002\n\n**\u524d\u7f6e\u77e5\u8bc6\uff1a\u57fa\u7840\u56fe\u8bba\uff08\u56fe\u7684\u5b58\u50a8\u548c\u904d\u5386\u3001\u6700\u77ed\u8def\u6982\u5ff5\uff09\u3001\u57fa\u7840\u6570\u636e\u7ed3\u6784**\n\n\u81ea\u7136\uff0c\u524d\u63d0\u662f\u4f60\u5f97\u542c\u61c2\u9898\u610f\u2026\u2026\u9898\u76ee\u5927\u610f\u5373\u662f\u8bf4\u6709\u4e00\u4e9b\u5730\u94c1\u7ad9\u548c\u4e00\u4e9b\u6309\u73ed\u6b21\u5b89\u6392\u505c\u9760\u5404\u4e2a\u7ad9\u7684\u5730\u94c1\uff0c\u4f60\u8981\u4ece\u9996\u7ad9\u51fa\u53d1\u5728\u67d0\u7ea6\u5b9a\u65f6\u523b\u5230\u8fbe\u672b\u7ad9\uff0c\u6700\u5c0f\u5316 **\u201c\u5728\u8f66\u7ad9\u7b49\u5f85\u7684\u65f6\u95f4\u201d** \u3002\u4e5f\u5c31\u662f\u8bf4\u8981\u5c3d\u53ef\u80fd\u5730\u5b89\u6392\u591a\u5728\u5730\u94c1\u5185\u7684\u65f6\u95f4\uff0c\u6765\u6700\u5c0f\u5316\u51fa\u5730\u94c1\u5728\u8f66\u7ad9\u7b49\u5f85\u7684\u65f6\u95f4\u3002\n\n## \u4e00\u3001\u6784\u9020\u5206\u5c42\u56fe\n\n\u8fd9\u4e2a\u9898\u662f\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u4e2a\u6837\u5b50\u5f88\u72ec\u7279\u7684\u5206\u5c42\u56fe\u6a21\u578b\u7684\u3002\u6211\u4eec\u5148\u6765\u8003\u8651\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u8f93\u5165\u6570\u636e\u3002\n\n```\n3\n5\n1 2\n1\n1\n0\n\n0\n```\n\n\u8fd9\u662f\u4e00\u4e2a\u67093\u4e2a\u7ad9\u30011\u6b21\u53d1\u8f66\u7684\u60c5\u51b5\uff0c\u7ed3\u675f\u65f6\u523b\u4e3a5\uff0c\u52a0\u4e0at=0\u4e00\u5171\u662f6\u4e2a\u65f6\u523b\u3002\n\n#### \u2460 \u6784\u5efa\u5206\u5c42\u56fe\n\n\u6309\u7167\u9898\u610f\uff0c\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u4e2a\u6a2a\u5750\u6807\u4e3a\u8f66\u7ad9\u7f16\u53f7\u3001\u7eb5\u5750\u6807\u4e3a\u65f6\u523b\u7684\u70b9\u9635\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684\u5206\u5c42\u56fe\u3002\u7528t\u4ee3\u8868\u67d0\u4e2a\u65f6\u523b\uff0ci\u4ee3\u8868\u67d0\u4e2a\u8f66\u7ad9\u7f16\u53f7\u3002\uff08emmm\u6211\u627e\u4e0d\u5230\u56fe\u5e8a\u53ea\u597d\u770b\u7740\u5b57\u7b26\u8111\u8865\u4e86\uff09\n\n```\n   i= 1 2 3\n t= 0 * * *\n    1 * * *\n    2 * * *\n    3 * * *\n    4 * * *\n    5 * * *\n```\n\n\u5c06\u70b9\u8bb0\u4f5c(t, i)\u7684\u8bdd\uff0c\u8d77\u70b9\u5373\u662f\u521d\u59cb\u65f6\u523b\u9996\u4e2a\u8f66\u7ad9(t=0, i=1)\uff0c\u7ec8\u70b9\u662f\u7ed3\u675f\u65f6\u523b\u6700\u540e\u4e00\u4e2a\u8f66\u7ad9(t=5, i=3)\u5373\u9898\u610f\u4e2d\u7684(t=T, i=N)\u3002\n\n#### \u2461 \u8fde\u63a5\u8868\u793a\u7b49\u5f85\u7684\u8fb9\n\n\u5c06\u56fe\u4e0a\u7684\u6bcf\u5bf9\u4e0a\u4e0b\u76f8\u90bb\u7684\u70b9\u63a5\u4e00\u6761\u5355\u65b9\u5411\u5411\u4e0b\u3001\u8fb9\u6743\u4e3a1\u7684\u70b9\uff0c\u4ee3\u8868\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e2a\u65f6\u523b\u3001\u8fd9\u4e2a\u8f66\u7ad9\uff08\u5373(t, n)\uff09\u4e2d\u8fdb\u884c1\u5355\u4f4d\u65f6\u95f4\u7684\u7b49\u5f85\u800c\u8f6c\u79fb\u5230\u4e0b\u4e00\u65f6\u523b\u7684\u540c\u4e00\u8f66\u7ad9\uff08\u5373(t+1, n)\uff09\uff0c\u4ee3\u4ef7\u5c31\u662f1\u5355\u4f4d\u65f6\u95f4\u7684\u3001\u9898\u76ee\u6240\u8981\u6700\u5c0f\u5316\u7684\u201c\u5728\u8f66\u7ad9\u7b49\u5f85\u7684\u65f6\u95f4\u201d\u3002\n\n#### \u2462 \u8fde\u63a5\u5730\u94c1\u7684\u8fb9\n\n\u6211\u4eec\u8981\u53d1\u8f66\u4e86\uff01\u5bf9\u4e8e\u6bcf\u6b21\u7684\u5730\u94c1\uff0c\u5b83\u4ece\u7ed9\u5b9a\u7684\u65f6\u95f4\u4ece\u9996\u7ad9\u6216\u672b\u7ad9\u53d1\u51fa\uff0c\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u800c\u7ecf\u8fc7\u6bcf\u4e2a\u8f66\u7ad9\u3002\u6bd4\u5982\u4e0a\u9762\u7ed9\u51fa\u7684\u4f8b\u5b50\uff0c\u6839\u636e\u53d1\u8f66\u65f6\u95f4\u548c\u8fd0\u884c\u65f6\u6bb5\uff0c\u8f66\u7684\u8fd0\u884c\u8f68\u8ff9\u662f\uff1a\n\n```\n(t=1, i=1) -> (t=2, i=2) -> (t=4, i=3)\n```\n\n\u6211\u4eec\u4e5f\u8981\u7528\u5355\u5411\u8fb9\u6309\u7167\u4e0a\u9762\u7684\u987a\u5e8f\u8fde\u63a5\u8d77\u8f66\u9014\u7ecf\u7684\u70b9\uff08\u53ef\u4ee5\u7528\u4e0a\u9762\u7684\u70b9\u9635\u56fe\u8111\u8865\u4e00\u4e0b\u2026\u2026\uff09\u8f66\u90fd\u4f1a\u987a\u7740\u65f6\u95f4\u5f80\u4e0b\u65b9\u5f00\uff0c\u6709\u7684\u4ece\u5de6\u5230\u53f3\u6709\u7684\u4ece\u53f3\u5230\u5de6\uff0c\u4e0d\u8fc7\u8fd9\u4e9b\u8fb9\u7684 **\u8fb9\u6743\u5e94\u8be5\u662f0\uff01** \u56e0\u4e3a\u4f7f\u7528\u5730\u94c1\u8fdb\u884c\u8f6c\u79fb\u5e76\u4e0d\u662f\u9898\u76ee\u6240\u8981\u6700\u5c0f\u5316\u7684\u201c\u5728\u8f66\u7ad9\u7b49\u5f85\u7684\u65f6\u95f4\u201d\uff0c\u4f7f\u7528\u5730\u94c1\u8f6c\u79fb\u662f\u6ca1\u6709\u4ee3\u4ef7\u7684\u3002\n\n#### \u2463 \u5b9e\u73b0\u7ec6\u8282\uff1a\u7ed9\u70b9\u7f16\u53f7\n\n\u6709\u4e00\u4e2a\u7ec6\u8282\u95ee\u9898\u5c31\u662f\u5982\u4f55\u7ed9\u8fd9\u4e9b\u70b9\u7f16\u53f7\u3002\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u4e8c\u7ef4\u70b9\u9635\uff0c\u800c\u56fe\u8bba\u8981\u6c42\u7684\u70b9\u7684\u7f16\u53f7\u53ea\u6709\u4e00\u4e2a\u6570\u5b57\u3002\n\n\u90a3\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6620\u5c04\u7684\u6280\u5de7\u6765\u628a\u4e00\u4e2a\u8868\u793a\u70b9\u9635\u4e2d\u70b9\u7684\u201c\u6570\u5bf9\u201d(t, i)\u6620\u5c04\u4e0a\u4e00\u4e2a\u72ec\u4e00\u65e0\u4e8c\u7684\u70b9\u7f16\u53f7\u3002\u5f53\u7136\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u7528\u5b83\u5728\u70b9\u9635\u4e2d\u7684\u987a\u5e8f\u7f16\u53f7 t*N+i \u8868\u793a\u3002\u6784\u9020\u51fd\u6570Map()\u6765\u5b9e\u73b0\u6620\u5c04\u7684\u8ba1\u7b97\u3002\u6211\u4eec\u5c06\u6620\u5c04\u4e4b\u540e\u7684\u4efb\u610f\u70b9\u7684\u7f16\u53f7\u79f0\u4e3aver\u3002\n\n```cpp\nint Map(int t, int i)\n{\n\treturn t * N + i;\n}\n```\n\n\u8fd9\u9053\u9898\u5f88\u5bb9\u6613\u641e\u6df7t\u3001i\u3001ver\u7684\u5173\u7cfb\u3002\u8bf7\u5728\u6253\u4ee3\u7801\u65f6\u7559\u610f\u3002\n\n\u5c31\u8fd9\u6837\uff0c\u6211\u4eec\u6784\u5efa\u4e86\u4e00\u4e2a\u8fb9\u6743\u53ea\u67090\u548c1\u7684\u5206\u5c42\u56fe\u3002\u63a5\u4e0b\u6765\u8981\u505a\u7684\u5c31\u662f\u8dd1\u6700\u77ed\u8def\u6c42(t=0, n=1)\u5230(t=T, i=N)\u7684\u6700\u77ed\u201c\u8ddd\u79bb\u201d\u4e86\u3002\u8fd9\u4e2a\u201c\u8ddd\u79bb\u201d\u7ecf\u8fc7\u4e0a\u9762\u7684\u5efa\u8fb9\uff0c\u5df2\u7ecf\u88ab\u5b9a\u4e49\u4e3a\u201c\u5728\u8f66\u7ad9\u7b49\u5f85\u7684\u65f6\u95f4\u201d\u3002\n\n## \u4e8c\u3001\u6c42\u6700\u77ed\u8def\n\n\u5176\u5b9e\u7528Dijkstra\u3001SPFA\u4e4b\u7c7b\u7684\u90fd\u53ef\u4ee5\u8dd1\uff0c\u4e0d\u8fc7\u9274\u4e8e\u8fd9\u662f\u4e2a\u8fb9\u6743\u53ea\u67090\u62161\u7684\u7279\u6b8a\u56fe\uff0c\u6211\u4ecb\u7ecd\u4e00\u4e0b\u6b63\u9002\u7528\u4e8e\u8fd9\u79cd\u60c5\u51b5\u7684 O(N+M) \u6c42\u5355\u6e90\u6700\u77ed\u8def\u65b9\u6cd5\uff1a **01BFS** \uff0c\u6709\u5411\u56fe\u6216\u65e0\u5411\u56fe\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002\n\n01BFS\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u662f **\u53cc\u5411\u961f\u5217** \u3002\u89c1\u540d\u8bc6\u4eba\uff0c\u5c31\u662f\u4e00\u4e2a\u53ef\u4ee5\u4ece\u4e24\u7aef\u5165\u961f\u3001\u4ece\u4e24\u7aef\u9000\u961f\u7684\u4e00\u7ef4\u7ed3\u6784\u3002\n\n\u518d\u6765\u770b\u4e00\u4e2a\u4f8b\u201c\u56fe\u201d\u3002\n\n```\n[A]--0--[B]--1--[C]--1--[F]\n |\n 1\n |\n[D]--0--[E]\n```\n\n\u6c42\u4eceA\u70b9\u51fa\u53d1\u7684\u5355\u6e90\u6700\u77ed\u8def\u3002\n\n\u2460 \u521d\u59cb\u5316\u65f6\u5165\u961fA\u70b9\u3002\u961f\u5217\u662f\u8fd9\u6837\u7684\uff0c\u5165\u961f\u65f6\u987a\u5e26\u8bb0\u5f55\u5230\u8fbe\u6bcf\u4e2a\u70b9\u7684\u8ddd\u79bb\u3002\n\n```\nHead<- A(0)\n```\n\n\u2461 \u5c06\u961f\u5934A\u53d6\u51fa\uff0c\u7528\u4e8e\u7814 ~~\u2642~~ \u7a76\u3002\u73b0\u5728\u7684\u961f\u5217\u5982\u4e0b\uff0c\u7a7a\u4e86\u3002\n\n```\nHead<-\n```\n\n\u2462 \u6839\u636e\u56fe\uff0c\u7814\u7a76A\u53d1\u73b0\u4e86A\u8fde\u5411B\u548cD\u3002A\u5230B\u7684\u8ddd\u79bb\u662f0\uff0c\u56e0\u6b64\u5c06B\u4ece\u961f\u5934\u5165\u961f\uff1bA\u5230D\u7684\u8ddd\u79bb\u662f1\uff0c\u56e0\u6b64\u5c06D\u4ece\u961f\u5c3e\u5165\u961f\u3002\u73b0\u5728\u7684\u961f\u5217\u5982\u4e0b\u3002\n\n```\nHead<- B(0) D(1)\n```\n\n\u2463 A\u7814\u7a76\u5b8c\u4e86\u3002\u53d6\u51fa\u961f\u5934B\u8fdb\u884c\u7814\u7a76\u3002\n\n```\nHead<- D(1)\n```\n\u2026\u2026\n\n```\nHead<- D(1) C(1)     // \u7814\u7a76B\u53d1\u73b0C\nHead<- C(1)          // \u53d6\u51faD\u7814\u7a76\nHead<- E(1) C(1)     // \u7814\u7a76D\u53d1\u73b0E\nHead<- C(1)          // \u53d6\u51faE\u7814\u7a76\nHead<-               // \u53d6\u51faC\u7814\u7a76\nHead<- F(2)          // \u7814\u7a76C\u53d1\u73b0F\nHead<-               // \u53d6\u51faF\u7814\u7a76\n```\n\n\u597d\u50cf\u6709\u70b9\u592a\u7b80\u5355\u4e86\u3002\u4e0d\u8fc7\u6ca1\u5173\u7cfb\uff0c\u6839\u636e\u6211\u4e0b\u9762\u6307\u51fa\u7684\u4e00\u4e9b\u7ed3\u8bba\u53ef\u4ee5\u77e5\u905301BFS\u7684\u4e00\u4e9b\u7279\u70b9\u3002\n\n1. \u70b9\u51fa\u961f\u7684\u987a\u5e8f\u6309\u7167\u6700\u77ed\u8def\u957f\u9012\u589e\u3002\u6bcf\u4e2a\u70b9\u53ea\u5165\u961f\u4e00\u6b21\uff0c\u643a\u5e26\u7684\u8def\u5f84\u957f\u5ea6\u5373\u4e3a\u6700\u77ed\u8def\uff0c\u56e0\u800c\u5176\u590d\u6742\u5ea6\u662fO(N+M)\u3002\n2. 01BFS\u8dd1\u8d77\u6765\u5c31\u50cfBFS\uff0c\u6bcf\u5c42\u628a\u6240\u6709\u901a\u8fc7\"0\u8fb9\"\u591f\u5f97\u7740(\u201c\u8fde\u901a\u201d)\u7684\u52a0\u5230\u961f\u5934\u6765\u4f18\u5148\u8bbf\u95ee\uff0c\u901a\u8fc7\"1\u8fb9\"\u5ef6\u4f38\uff08\u201c\u6269\u5f20\u4e0b\u4e00\u5708\u201d\uff09\u51fa\u53bb\u7684\u70b9\u52a0\u5230\u961f\u5c3e\uff0c\u8bbf\u95ee\u5b8c\u6240\u67090\u8fb9\u8fde\u901a\u7684\u518d\u8fdb\u5165\u5f80\u5916\u901a\u8fc71\u8fb9\u8fde\u7684\u4e0b\u4e00\u90e8\u5206\u3002\n3. \u56e0\u4e3a01BFS\u662f\u4e00\u5708\u4e00\u5708\u5f80\u5916\u722c\u7684\uff0c\u6bcf\u6b21\u961f\u91cc\u6700\u591a\u53ea\u4f1a\u6709\u4e24\u79cd\u6700\u77ed\u8def\u957f\u7684\u70b9\uff0c\u4e14\u6700\u77ed\u8def\u957f\u76f8\u5dee1\u3002\n\n\u5927\u6982\u5e94\u8be5\u770b\u5f97\u61c2\u4e86\u5427\u2026\u2026\u770b\u4e0d\u61c2\u8bc4\u8bba\u4e00\u4e0b\uff0c\u6211\u6539\u8fdb\u3002\n\nC++ STL\u7684 <queue> \u91cc\u5c31\u6709\u53cc\u5411\u961f\u5217\u7684\u6570\u636e\u7ed3\u6784 std::deque \u3002\u8c8c\u4f3c\u8fd8\u633a\u5feb\uff0c\u6211\u90fd\u662f4ms\u5185\u8fc7\u7684\u3002\u9644\u8d60\u5176\u5e38\u7528\u7684\u51fd\u6570\uff1a\n\n```\nq.front() // \u8bbf\u95ee\u961f\u5934\nq.back() // \u8bbf\u95ee\u961f\u5c3e\nq.push_front(element) // \u4ece\u961f\u5934\u5165\u961f\nq.push_back(element) // \u4ece\u961f\u5c3e\u5165\u961f\nq.pop_front() // \u4ece\u961f\u5934\u51fa\u961f\nq.pop_back() // \u4ece\u961f\u5c3e\u51fa\u961f\nq.empty() // \u8fd4\u56de\u662f\u5426\u4e3a\u7a7a\n```\n\n\n\u6839\u636e\u8fd9\u79cd\u65b9\u5f0f\uff0c01BFS\u5b9e\u73b0\u4e86\u5355\u6e90\u6700\u77ed\u8def\u7684\u5bfb\u627e\u3002\u53ea\u9700\u8981\u7528\u5b83\u8dd1\u4e00\u6b21\u201c\u4e00\u3001\u201d\u6240\u6784\u9020\u51fa\u7684\u5206\u5c42\u56fe\uff0c\u5373\u53ef\u627e\u5230\u7b54\u6848\u3002\n\n## \u4e09\u3001\u4ee3\u7801\u5b9e\u73b0\n\n\u6709\u4e00\u4e9b\u5c0f\u6280\u5de7\u3002\u4e0d\u8fc7\u6211\u4e0d\u591a\u8bf4\u4e86\uff0c\u4ee3\u7801\u91cc\u6709\u6ce8\u91ca\u3002\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cstdlib>\n\n////// \u7b2c\u4e00\u90e8\u5206 \u901a\u7528\u3001\u5e38\u89c4\n\nconst int NN = 52;\nconst int TT = 2048;\nconst int MM = 52;\n\nint N, T, L, R; // L<-M1, R<-M2\nint pass[NN]; // \u5730\u94c1\u7ecf\u8fc7\u533a\u95f4\u6240\u9700\u7684\u65f6\u95f4\nint left[MM]; // \u4ece\u5de6\u4fa7\u51fa\u53d1\u7684\u65f6\u523b\u8868\nint right[MM]; // \u4ece\u53f3\u4fa7\u51fa\u53d1\u7684\u65f6\u523b\u8868\n\n////// \u7b2c\u4e8c\u90e8\u5206 \u6784\u9020\u5206\u5c42\u56fe\n\nconst int VV = NN*TT; // \u6700\u5927\u7684\u70b9\u6570\nconst int EE = NN*TT*4; // \u6700\u5927\u7684\u8fb9\u6570\n\n// \u8fd4\u56de\u5bf9\u5e94(t, i)\u7684\u70b9\u7f16\u53f7\nint Map(int t, int i)\n{\n\treturn t * N + i;\n}\n/* \u9006\u6620\u5c04\uff0c\u4e0d\u8fc7\u6ca1\u7528\u4e0a\nint RMapT(int ver)\n{\n\treturn ver / N;\n}\n\nint RMapI(int ver)\n{\n\treturn (ver % N == 0) ? N : ver % N;\n}\n*/\n// \u8fd9\u91cc\u7528\u7684\u662f\u90bb\u63a5\u8868\nint fstlne[VV], nxtlne[EE], lneto[EE], lnev[EE];\nint lneP;\n\nvoid AddEdge(int u, int v, int w)\n{\n\t++lneP;\n\tnxtlne[lneP] = fstlne[u];\n\tlneto[lneP] = v;\n\tlnev[lneP] = w;\n\tfstlne[u] = lneP;\n}\n\n////// 3. 01BFS\n\nstruct State {\n\tint ver; // \u70b9\u7f16\u53f7\n\tint val; // \u9644\u5e26\u7684\u6700\u77ed\u8def\u503c\n\tState() : ver(0), val(0) {}\n\tState(int ver_, int val_) : ver(ver_), val(val_) {}\n};\n\nbool vis[VV]; // \u6807\u8bb0\u5df2\u7ecf\u8bbf\u95ee\u8fc7(\u5165\u961f)\u7684\u70b9\nint dis[VV]; // \u5165\u961f\u65f6\u8bb0\u5f55\u6700\u77ed\u8def\nstd::deque<State> q;\n\nint main()\n{\n\tint caseNo = 0;\n\twhile (1)\n\t{\n\t\t\n\t\t////// 1. \u901a\u7528\u3001\u5e38\u89c4\n\t\t\n\t\tscanf(\"%d\", &N);\n\t\tif (N == 0)\n\t\t\tbreak;\n\t\tcaseNo++;\n\t\t\n\t\tscanf(\"%d\", &T);\n\t\tfor (int i=1; i<=N-1; i++)\n\t\t\tscanf(\"%d\", &pass[i]);\n\t\tscanf(\"%d\", &L);\n\t\tfor (int i=1; i<=L; i++)\n\t\t\tscanf(\"%d\", &left[i]);\n\t\tscanf(\"%d\", &R);\n\t\tfor (int i=1; i<=R; i++)\n\t\t\tscanf(\"%d\", &right[i]);\n\t\t\n\t\t////// 2. \u6784\u9020\u5206\u5c42\u56fe\n\t\t\n\t\t// \u521d\u59cb\u5316\n\t\tlneP = 0;\n\t\tfor (int t=0; t<=T; t++)\n\t\t\tfor (int i=1; i<=N; i++)\n\t\t\t\tfstlne[Map(t, i)] = 0;\n\t\t\n\t\t// \u8fde\u63a5\u8868\u793a\u7b49\u5f85\u7684\u8fb9\n\t\tfor (int t=0; t<=T-1; t++)\n\t\t\tfor (int i=1; i<=N; i++)\n\t\t\t\tAddEdge(Map(t, i), Map(t+1, i), 1);\n\t\t\n\t\t// \u8fde\u63a5\u5730\u94c1\u7ecf\u8fc7\u7684\u8fb9\uff0c\u5176\u5b9e\u5c31\u662f\u6a21\u62df\u5f00\u8f66\u7ecf\u8fc7\u54ea\u91cc\n\t\tfor (int k=1; k<=L; k++)\n\t\t{\n\t\t\tint t = left[k];\n\t\t\t// \u6ce8\u610f t+pass[i]<=T\uff0c\u5b83\u907f\u514d\u5730\u94c1\u5f00\u51fa\u65f6\u95f4\u8303\u56f4\u53d8\u5f97\u591a\u4f59\u3002\n\t\t\tfor (int i=1; i<=N-1 && t+pass[i]<=T; i++)\n\t\t\t{\n\t\t\t\tAddEdge(Map(t, i), Map(t+pass[i], i+1), 0);\n\t\t\t\tt += pass[i];\n\t\t\t}\n\t\t}\n\t\tfor (int k=1; k<=R; k++)\n\t\t{\n\t\t\tint t = right[k];\n\t\t\tfor (int i=N-1; i>0 && t+pass[i]<=T; i--)\n\t\t\t{\n\t\t\t\tAddEdge(Map(t, i+1), Map(t+pass[i], i), 0);\n\t\t\t\tt += pass[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\t////// 3. 01BFS\n\t\t\n\t\t// \u521d\u59cb\u5316\n\t\twhile (!q.empty())\n\t\t\tq.pop_front();\n\t\tfor (int i=1; i<=N*(T+1); i++)\n\t\t\tvis[i] = false;\n\t\tq.push_front(State(Map(0, 1), 0));\n\t\tvis[Map(0, 1)] = true;\n\t\tdis[Map(0, 1)] = 0;\n\t\t\n\t\t// \u8dd1\u6700\u77ed\u8def\uff0c\u4e00\u65e6(T, N)\u5165\u961f\u4e86\u9a6c\u4e0a\u53ef\u4ee5\u5b8c\u7ed3\n\t\twhile (!q.empty() && !vis[Map(T, N)])\n\t\t{\n\t\t\tState now = q.front();\n\t\t\tq.pop_front();\n\t\t//\tprintf(\"Get %d<%d,%d>,%d\\n\",\n\t\t//\t\tnow.ver, RMapT(now.ver), RMapI(now.ver), now.val);\n\t\t\t\n\t\t\tfor (int e=fstlne[now.ver]; e; e=nxtlne[e])\n\t\t\t{\n\t\t\t\tif (!vis[lneto[e]])\n\t\t\t\t{\n\t\t\t\t//\tprintf(\"  Detect %d<%d,%d>,%d\\n\",\n\t\t\t\t//\t\tlneto[e], RMapT(lneto[e]), RMapI(lneto[e]), now.val + lnev[e]);\n\t\t\t\t\tif (lnev[e] == 0)\n\t\t\t\t\t\tq.push_front(State(lneto[e], now.val + 0));\n\t\t\t\t\telse\n\t\t\t\t\t\tq.push_back(State(lneto[e], now.val + 1));\n\t\t\t\t\tvis[lneto[e]] = true;\n\t\t\t\t\tdis[lneto[e]] = now.val + lnev[e];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// \u8f93\u51fa\n\t\tprintf(\"Case Number %d: \", caseNo);\n\t\tif (vis[Map(T, N)])\n\t\t\tprintf(\"%d\\n\", dis[Map(T, N)]);\n\t\telse\n\t\t\tputs(\"impossible\");\n\t}\n\t\n\treturn 0;\n}\n\n```\n\n\u8fd9\u9053\u9898\u4e00\u4e2a\u201c\u4f18\u7f8e\u201d\u7684\u5730\u65b9\u662f\u5b83\u6570\u636e\u5206\u7ec4\u3002\u8fd9\u6837\u7684\u8bdd\u4f60\u5fc5\u987b\u628a\u4f60\u80fd\u60f3\u5230\u7684\u9700\u8981\u91cd\u65b0\u521d\u59cb\u5316\u7684\u6570\u7ec4\u521d\u59cb\u5316\uff08\u6211\u5c31\u8c03\u4e86\u534a\u5929\uff09\u3002\n\n\u4ee5\u4e0a\uff0c\u7ed3\u675f\u3002\n",
        "postTime": 1566047678,
        "uid": 114344,
        "name": "MusicmanJuly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2583 \u3010\u5730\u94c1\u95f4\u8c0d\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662fDAG\u4e0aDP\u3002\n\n\u6211\u4eec\u7528dp\u7684\u7b2c\u4e00\u7ef4\u8868\u793a\u73b0\u5728\u5728\u54ea\u4e2a\u8f66\u7ad9\uff0c\u7b2c\u4e8c\u7ef4\u8868\u793a\u73b0\u5728\u51e0\u70b9\u3002\u518d\u5b9a\u4e00\u4e2ahTrain\u6570\u7ec4\u7b2c\u4e00\u7ef4\u8868\u793a\u5728\u8fd9\u4e2a\u65f6\u523b\uff0c\u7b2c\u4e8c\u7ef4\u8868\u793a\u5728\u54ea\u4e2a\u8f66\u7ad9\uff0c\u7136\u540e\u7b2c\u4e09\u7ef4\u662f\u6709\u6ca1\u6709\u5411\u5de6\u53f3\u5f00\u7684\u3002\u8fd8\u6709\u4e00\u4e2at\u6570\u7ec4\u8868\u793a\u4ecei\u7ad9\u5230\u4e0b\u4e00\u7ad9\u9700\u8981\u7684\u65f6\u95f4\u3002\n\n\u6240\u4ee5\u8fd9\u6574\u4e2a\u95ee\u9898\u53d8\u6210\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u7684\u95ee\u9898\uff1a\u5f53\u524d\u65f6\u95f4\u548c\u73b0\u5728\u6240\u5728\u7684\u8f66\u7ad9\u3002\n\n\u9884\u5904\u7406\u65f6\u5019\u5bf9\u4e8em1\uff0c\u8f93\u5165\u8fdb\u6765$d_i$\u4ece1\u5faa\u73af\u5230n\u679a\u4e3e\u8f66\u7ad9j\uff0c\u5982\u679cd\u5927\u4e8e\u4e86\u78b0\u5934\u65f6\u523b\uff0c\u90a3\u4e48\u76f4\u63a5\u8df3\u51fa\uff0c\u5426\u5219\u628ad\u65f6\u523b\uff0cj\u8f66\u7ad9\uff0c\u5f80\u53f3\u5f00\u7684\u8f66\u6807\u4e3atrue\uff0c\u7136\u540ed\u52a0\u8fd9\u4e2a\u8f66\u7ad9\u82b1\u8d39\u7684\u65f6\u95f4\u3002\u5bf9\u4e8em2\uff0c\u8f93\u5165\u8fdb\u6765$e_i$\u4ecen\u5faa\u73af\u52301\u679a\u4e3e\u8f66\u7ad9j\uff0c\u5982\u679ce\u5927\u4e8e\u4e86\u78b0\u5934\u65f6\u523b\uff0c\u90a3\u4e48\u76f4\u63a5\u8df3\u51fa\uff0c\u5426\u5219\u628ae\u65f6\u523b\uff0cj\u8f66\u7ad9\uff0c\u5f80\u5de6\u5f00\u7684\u8f66\u6807\u4e3atrue\uff0c\u7136\u540ee\u52a0\u8fd9\u4e2a\u8f66\u7ad9\u82b1\u8d39\u7684\u65f6\u95f4\u3002\u628adp\u6570\u7ec4\u5f00\u59cb\u521d\u59cb\u5316\u4e00\u4e2a\u65f6\u95f4\u8282\u70b9\uff0c\u82e5\u5230\u4e86\uff0c\u5c31\u4e0d\u884c\uff0c\u540e\u9762\u5224\u65ad\u65b9\u4fbf\u3002\u5e76\u4e14\u521d\u59cb\u5316\u6700\u540e\u7ec8\u70b9\u4e0d\u8bb8\u7b49\u5f85\n\n\u8fd9\u6837\u679a\u4e3e\u65f6\u95f4\u548c\u8f66\u7ad9\uff0c\u7b2c\u4e00\u79cd\u7b56\u7565\u662f\u7ad9\u7740\u4e0d\u52a8\uff0c\u4e8e\u662f$dp[i][j]=dp[i+1][j]+1$\u3002\u7136\u540e\u5bf9\u4e8e\u5411\u53f3\u548c\u5411\u5de6\u5206\u522b\u9700\u8981\u5224\u65ad\u5728\u8303\u56f4\u4e4b\u5185\uff0c\u5e76\u4e14\u6709\u706b\u8f66\uff0c\u7136\u540e\u81ea\u5df1\u548c\u8fd9\u4e2a\u8f66\u7ad9\u52a0\u4e0a\u8dd1\u4e86$ti[j]$\u6b65\u548c\u4e0b\u4e00\u4e2a\u65f6\u95f4\u9636\u6bb5\u53d6min\u3002\u5de6\u9762\u540c\u7406\uff0c\u5224\u65ad\u5b8c\u6761\u4ef6\u4e4b\u540e\u81ea\u5df1\u548c\u8f66\u7ad9\u52a0$ti[j-1]$\u8fd8\u6709\u524d\u4e00\u4e2a\u65f6\u95f4\u6bb5\u53d6min\u3002\u6700\u540e\u5224\u65ad\u5982\u679c$dp[0][1]$\u4f4d\u4e0a\u6bd4\u521d\u59cb\u5316\u7684\u5927\uff0c\u90a3\u4e48\u80af\u5b9a\u4e0d\u53ef\u80fd\uff0c\u5219\u8f93\u51faimpossible\uff0c\u5426\u5219\u8f93\u51fa$dp[0][1]$\u3002\n\n\n\u501f\u52a9\u6ce8\u91ca\uff1a\n\n```\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nint ti[55], hTrain[2005][55][2];\nint dp[2005][55];\n\nint kase;\n\nint main() {\n    int n, t;\n    while (true) {\n        cin >> n >> t;\n        kase++;\n        memset(hTrain, 0, sizeof(hTrain));//\u5fc5\u987b\u6e05\u96f6\n        if (n == 0) break;\n        for (int i = 1; i <= n - 1; ++i) {\n            cin >> ti[i];\n        }\n        int m1;\n        cin >> m1;\n        for (int i = 0; i < m1; ++i) {//\u9884\u5904\u7406\u5411\u53f3\n            int d;\n            cin >> d;\n            for (int j = 1; j <= n; ++j) {\n                if (d > t) {\n                    break;\n                }\n                hTrain[d][j][0] = 1;\n                d += ti[j];\n            }\n        }\n        int m2;\n        cin >> m2;\n        for (int i = 0; i < m2; ++i) {//\u9884\u5904\u7406\u5411\u5de6\n            int e;\n            cin >> e;\n            for (int j = n; j >= 1; --j) {\n                if (e > t) {\n                    break;\n                }\n                hTrain[e][j][1] = 1;\n                e += ti[j - 1];\n            }\n        }\n        for (int j = 0; j < n; ++j) {//\u521d\u59cb\u5316dp\u6570\u7ec4\n            dp[t][j] = 5000;\n        }\n        dp[t][n] = 0;\n        for (int i = t - 1; i >= 0; --i) {//time\n            for (int j = 1; j <= n; ++j) { //which station\n                dp[i][j] = dp[i + 1][j] + 1;\n                if (j < n && i + ti[j] <= t && hTrain[i][j][0]) { //right\n                    dp[i][j] = min(dp[i][j], dp[i + ti[j]][j + 1]);\n                }\n                if (j > 1 && i + ti[j - 1] <= t && hTrain[i][j][1]) { //left\n                    dp[i][j] = min(dp[i][j], dp[i + ti[j - 1]][j - 1]);\n                }\n            }\n        }\n        if (dp[0][1] >= 5000) {//\u5224\u65ad\n            printf(\"Case Number %d: impossible\\n\", kase);\n        } else {\n            printf(\"Case Number %d: %d\\n\", kase, dp[0][1]);\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1594906682,
        "uid": 298325,
        "name": "Marshadow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2583 \u3010\u5730\u94c1\u95f4\u8c0d\u3011"
    },
    {
        "content": "\u6211\u770b\u9898\u89e3\u90fd\u662f\u7528\u7684\u52a8\u6001\u89c4\u5212\u89e3\u51b3\u8fd9\u9053\u9898\u7684\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\n# **\u63d0\u4f9b\u4e00\u79cd\u4e0d\u7528\u52a8\u6001\u89c4\u5212\u7684\u7b80\u5355\u65b0\u7684\u89e3\u9898\u601d\u8def\uff01\u5bf9dp\u5934\u75bc\u7684\u5b69\u5b50\u53ef\u4ee5\u770b\u8fd9\u91cc\u3002\u3002**\n\u800c\u8fd9\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528**\u56fe\u8bba**\u7684\u601d\u60f3\u89e3\u51b3\u6b64\u7c7b\u95ee\u9898\n\n**\u6211\u4eec\u5148\u89e3\u51b3\u70b9\u7684\u95ee\u9898**\n\n\u6211\u4eec\u628a\u4ed6\u7684\u6bcf\u4e00\u4e2a\u72b6\u6001\u4f5c\u4e3a\u4e00\u4e2a\u56fe\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u800c\u72b6\u6001\u5219\u6709**\u65f6\u95f4\u548c\u7a7a\u95f4**\u7684\u533a\u522b\uff1b\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5f53\u4ed6\u5728\u65f6\u95f40\u5728\u4e00\u53f7\u8f66\u7ad9\uff0c\u4e3a\u4e00\u53f7\u70b9\uff0c\u5728\u65f6\u95f41\u5728\u4e00\u53f7\u8f66\u7ad9\u5219\u4e3a\u4e8c\u53f7\u70b9\uff0c\u800c\u5f53\u4ed6\u5728\u65f6\u95f4x\u5728n\u53f7\u8f66\u7ad9\uff0c\u4e3an*\uff08T+1\uff09+x\u53f7\u70b9\uff1b\n\n**\u90a3\u4e48\u6211\u4eec\u70b9\u7684\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\uff0c\u4e0b\u9762\u89e3\u51b3\u8fb9\u7684\u95ee\u9898**\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5982\u679c\u5c06\u8981\u6c42\u7684\u201c\u7b49\u5f85\u65f6\u95f4\u201d\u4f5c\u4e3a\u56fe\u4e2d\u7684\u8fb9\u6743\uff0c\u90a3\u4e48**\u72b6\u6001\u65f6\u95f4\u4ee5\u53ca\u7a7a\u95f4**\uff08\u70b9\uff09\u7684\u8f6c\u79fb\u53ea\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\n\n1.\u5728\u539f\u5730\u7b49\u5f85\uff0c\u65f6\u95f4+1,\u56e0\u4e3a\u8be5\u65f6\u95f4\u7b49\u5f85\uff0c**\u6240\u4ee5\u8fb9\u6743\u4e3a1\n\u8fb9\u6743\u4e3a0**\uff1b\n\n2.\u5750\u6b63\u5411\u8f66\u8d70\uff0c\u7a7a\u95f4+1\uff0c\u65f6\u95f4+\u5728\u8f66\u4e0a\u7684\u65f6\u95f4\uff0c\u56e0\u4e3a\u8be5\u65f6\u95f4\u5728\u8f66\u4e0a\uff0c\u6240\u4ee5\u4e0d\u7b97\u7b49\u5f85\u65f6\u95f4\uff0c**\u6240\u4ee5\u8fb9\u6743\u4e3a1\n\u8fb9\u6743\u4e3a0**\uff1b\n\n3.\u5750\u53cd\u5411\u8f66\uff0c\u7a7a\u95f4-1\uff0c\u5176\u4ed6\u540c\u7406\u6b63\u5411\u8f66\uff1b\n\n**\u8fd9\u6837\u6211\u4eec\u56fe\u5c31\u5efa\u7acb\u5b8c\u6210\u4e86\uff0c\u73b0\u5728\u89e3\u51b3\u600e\u6837\u6c42\u7b54\u6848\u7684\u95ee\u9898**\n\n\u6211\u4eec\u53d1\u73b0\u5982\u679c\u628a\u8981\u6c42\u7684\u7b49\u5f85\u65f6\u95f4\u4f5c\u4e3a\u8fb9\u6743\uff0c\u90a3\u4e48\u6211\u4eec\u4ece0\u65f6\u95f41\u7ad9\u70b9\u7684\u8282\u70b9\u8dd1\u5230t\u65f6\u95f4n\u7ad9\u70b9\u7684\u56fe\u8bba\u6700\u77ed\u8def\u4e0d\u5c31\u662f\u6700\u7ec8\u7684\u7b54\u6848\u561b\uff1f\n\n\u4f46\u662f\u8fd9\u91cc\u8981\u6ce8\u610f\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5982\u679c\u8dd1spfa\u6216\u8005dj\u590d\u6742\u5ea6\u4f1a\u660e\u663e\u9ad8\u4e8edp\u590d\u6742\u5ea6\uff0c\u56e0\u4e3a\u8282\u70b9\u4f1a\u53cd\u590d\u8fdb\u51fa\u6765\u66f4\u65b0\uff0c**\u663e\u7136\u8fd9\u5e76\u4e0d\u662f\u6700\u4f18\u7684\u505a\u6cd5**\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u8fd9\u91cc\u5f15\u5165\n**\u201c01bfs\u201d\u7684\u6700\u77ed\u8def\u505a\u6cd5\uff1b**\n\n01bfs\u662f\u7528\u6765\u89e3\u51b3\u56fe\u91cc\u8fb9\u6743\u53ea\u67091\u62160\u7684\u590d\u6742\u5ea6\u4f4e\u7684\u505a\u6cd5\uff1b\n\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u6240\u5efa\u56fe\u7684\u8fb9\u6743\u4e5f\u5c31\u662f\u7b49\u5f85\u65f6\u95f4\u53ea\u67090\u62161\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u752801bfs\u89e3\u51b3\uff1b\n\n\u73b0\u5728\u8bb2\u89e3\u4e00\u4e0b01bfs\uff1a\u5bf9\u4e8e\u8fb9\u6743\u53ea\u67090\u62161\u7684\u56fe\uff0c\u6211\u4eec\u4ece\u8d77\u70b9\u5f00\u59cb\u627e\uff0c\u666e\u901abfs\u4e4b\u6240\u4ee5\u4e0d\u884c\u7684\u539f\u56e0\u662f\u4f60\u53ef\u80fd\u5148\u901a\u8fc7\u8fb9\u6743\u4e3a1\u7684\u8fb9\u627e\u5230\u4e86\u8be5\u8282\u70b9\u6807\u51favis=1\uff1b\n\u4f46\u662f\u4e8b\u5b9e\u4e0a\u53ef\u80fd\u6709\u8fb9\u6743\u4e3a0\u7684\u8fb9\u4e5f\u53ef\u4ee5\u901a\u5411\u8be5\u70b9\u53ea\u4e0d\u8fc7\u540e\u626b\u5230\u8fd9\u6761\u8fb9\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u53cc\u7aef\u961f\u5217\uff0c\u662f0\u5c31\u4ece\u9ad8\u524d\u9762\u52a0\uff0c1\u5728\u540e\u9762\u52a0\uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5148\u626b0\u7684\u8fb9\uff0c\u4ece\u800c\u4fdd\u8bc1\u6b63\u786e\u6027\uff1b\n\n\u6700\u540e\u8f93\u51fa\u6700\u77ed\u8def\u5373\u53ef\uff1b\n\n**\u6ce8\u610f\uff1a\u8be5\u56fe\u8bba\u505a\u6cd5\u56e0\u4e3a\u752801bfs\u6c42\u7684\uff0c\u6bcf\u4e2a\u8fb9\u548c\u70b9\u53ea\u626b\u4e86\u4e00\u6b21\uff0c\u590d\u6742\u5ea6O\uff08m+n\uff09\u7684\uff0c\u6240\u4ee5\u4ed6\u7684\u672c\u8d28\u5c31\u662fdp\uff0c\u53ea\u4e0d\u8fc7\u5e76\u4e0d\u9700\u8981dp\u5f0f\u5b50\u63a8\u5bfc\u8f6c\u79fb\uff0c\u4e8c\u8005\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u5dee\u4e0d\u5927**\n\n\u4ee3\u7801\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u6709\u5751\uff0c\u6211\u4f1a\u5c3d\u91cf\u5907\u6ce8\uff0c\u8fd8\u6709\u4e0d\u61c2\u7684\u53ef\u4ee5\u79c1\u804a\u95ee\u6211\n\u4e0a\u4ee3\u7801\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<deque>\nusing namespace std;\ndeque <int> deq;//\u53cc\u7aef\u961f\u5217\nint n,t,a[70],m1,m2,fir[100010],cnt,ans,ji,d[100010],vis[100010],sum1[100010],sum2[100010];\nstruct ren{\n\tint e,nexty,w;\n}bian[100000000];\nvoid addedge(int ss,int ee,int ww){\n\tcnt++;\n\tbian[cnt].e=ee;\n\tbian[cnt].nexty=fir[ss];\n\tbian[cnt].w=ww;\n\tfir[ss]=cnt;\n}\nvoid bfs(int u){//01bfs\n\tdeq.clear();//\u6bcf\u6b21\u6e05\u7a7a\u961f\u5217\n\tmemset(d,0,sizeof(d));\n\tmemset(vis,0,sizeof(vis));\n\tdeq.push_front(u);\n\tvis[u]=1;\n\twhile(deq.size()!=0){\n\t\tint p=deq.front();\n\t\tdeq.pop_front();\n\t\tfor(int x=fir[p];x;x=bian[x].nexty){\n\t\t\tint en=bian[x].e;\n\t\t\tif(vis[en]==0){\n\t\t\t\tvis[en]=1;//\u6807\u8bb0\n\t\t\t\td[en]=d[p]+bian[x].w;\n\t\t\t\tif(en==(n-1)*(t+1)+t+1){ans=d[en];break;}\n                //\u5982\u679c\u641c\u5230\u7ec8\u70b9\u76f4\u63a5\u9000\u51fa\n\t\t\t\tif(bian[x].w==0)deq.push_front(en);\n                //\u8fb9\u6743\u4e3a0\u653e\u5728\u524d\u9762\uff1b\n\t\t\t\telse deq.push_back(en);\n\t\t\t}\n\t\t}\n\t\tif(ans!=3000)break;\n\t}\n}\nint main(){\n\twhile(1){//\u8f93\u5165\n\t\tcin>>n;\n\t\tif(n==0)break;\n\t\tji++;cnt=0;ans=3000;\n\t\tmemset(sum1,0,sizeof(sum1));\n\t\tmemset(sum2,0,sizeof(sum2));\n\t\tmemset(fir,0,sizeof(fir));\n\t\tcin>>t;\n\t\tfor(int i=1;i<n;i++)cin>>a[i];\n\t\tfor(int i=1;i<n;i++)sum1[i]=sum1[i-1]+a[i];\n        //\u8bb0\u5f55\u4ece\u8d77\u70b9\u51fa\u53d1\u5230\u6bcf\u4e00\u4e2a\u7ad9\u70b9\u7684\u603b\u65f6\u95f4\n\t\tfor(int i=n-1;i>=1;i--)sum2[i]=sum2[i+1]+a[i];\n\t\tcin>>m1;\n\t\tfor(int i=1;i<=m1;i++){\n\t\t\tint sta;\n\t\t\tcin>>sta;\n\t\t\tsta=sta+1;\n\t\t\tfor(int j=0;j<n-1;j++)\n\t\t\tif(sta+sum1[j+1]<=t+1)\n\t\t\taddedge(j*(t+1)+sta+sum1[j],(j+1)*(t+1)+sta+sum1[j+1],0);\t\n            //\u52a0\u5165\u6b63\u5411\u8d70\u7684\u8fb9\n\t\t}\n\t\tcin>>m2;\n\t\tfor(int i=1;i<=m2;i++){\n\t\t\tint sta;\n\t\t\tcin>>sta;\n\t\t\tsta+=1;\n\t\t\tfor(int j=n-1;j>=1;j--)\n\t\t\tif(sta+sum2[j]<=t+1)\n\t\t\taddedge(j*(t+1)+sta+sum2[j+1],(j-1)*(t+1)+sta+sum2[j],0);\n            //\u52a0\u5165\u53cd\u5411\u8d70\u7684\u8fb9\n\t\t}\n\t\tfor(int i=0;i<n;i++)\n\t\t    for(int j=1;j<=t;j++)\n\t\t    addedge(i*(t+1)+j,i*(t+1)+j+1,1);\n            //\u52a0\u5165\u539f\u5730\u7b49\u5f85\u7684\u8fb9\n\t\tbfs(1);\n\t\tif(ans!=3000)cout<<\"Case Number \"<<ji<<\": \"<<ans<<endl;\n\t\telse cout<<\"Case Number \"<<ji<<\": \"<<\"impossible\"<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1566635786,
        "uid": 126465,
        "name": "\u7130\u706b\u4fca\u4fca",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2583 \u3010\u5730\u94c1\u95f4\u8c0d\u3011"
    },
    {
        "content": "\u6570\u636e\u8d3c\u5c0f\u3002\u3002\u3002xjb\u641c\u4e5f\u80fdA\u5427\u3002\u3002\u3002\n\n\u7528f\u5b58\u65f6\u95f4\u4e3ai\u65f6\u5230\u7b2cj\u4e2a\u8f66\u7ad9\u6700\u5c0f\u7b49\u5f85\u65f6\u95f4\n\n\u6240\u4ee5f[i][j]=min{f[i-1][j]\uff08\u4e0a1s\u4e5f\u5728\u8f66\u7ad9j\u7b49\uff09,f[i-pass[j-1]][j-1]\uff08\u4ece\u4e0a\u4e00\u4e2a\u8f66\u7ad9\u4e58\u5411\u524d\u7684\u8f66\u6765\u7684\uff09,f[i-pass[j]][j+1]\uff08\u4ece\u4e0b\u4e00\u4e2a\u8f66\u7ad9\u4e58\u5411\u540e\u7684\u8f66\u6765\u7684\uff09}\n\n\u5982\u679cf[t][n]<=t\u8f93\u51faf[t][n]\n\n\u5426\u5219\u8f93\u51faimpossible\n\n```cpp\n# include<iostream>\n# include<cstdio>\n# include<cstring>\nusing namespace std;\nint n,t,m1,m2,tot;\nint pass[51],d1[51],d2[51];\nint f[201][51];\nbool use[201][51][2];\nint main()\n{\n    while(cin>>n&&n)\n    {\n        memset(use,0,sizeof(use));\n        memset(f,1,sizeof(f));\n        memset(pass,0,sizeof(pass));//\u8bb0\u5f97pass\u6e050\uff0c\u4e0d\u7136\u8f6c\u79fbj-1\u53ef\u80fd\u51fa\u9519\n        f[0][1]=0;\n        cin>>t;\n        for(int i=1;i<n;i++)\n          cin>>pass[i];\n        cin>>m1;\n        int sum=0;\n        for(int i=1;i<=m1;i++)\n          {\n              cin>>d1[i];\n              sum+=d1[i];\n              for(int j=1;j<=n;j++)\n                if(sum<=t)\n              {\n                    use[sum][j][0]=1;//\u5373\u5728\u7b2csum\u79d2\u7b2cj\u4e2a\u8f66\u7ad9\u6709\u5411\u524d\u7684\u8f66\u7ecf\u8fc7\n                    sum+=pass[j];\n              }\n              else break;\n              sum=0;\n          }\n        cin>>m2;\n        for(int i=1;i<=m2;i++)\n          {\n              cin>>d2[i];\n              sum+=d2[i];\n            for(int j=n;j>=1;j--)\n              if(sum<=t)\n              {\n                  use[sum][j][1]=1;//\u5373\u5728\u7b2csum\u79d2\u7b2cj\u4e2a\u8f66\u7ad9\u6709\u5411\u540e\u7684\u8f66\u7ecf\u8fc7\n                  sum+=pass[j-1];\n              }\n              else break;\n              sum=0;\n          }\n        for(int i=1;i<=t;i++)\n          for(int j=1;j<=n;j++)\n            {\n                f[i][j]=min(f[i][j],f[i-1][j]+1);\n                if(use[i][j][0])\n                f[i][j]=min(f[i][j],f[i-pass[j-1]][j-1]);\n                if(use[i][j][1])\n                f[i][j]=min(f[i][j],f[i-pass[j]][j+1]);\n            }\n        cout<<\"Case Number \"<<++tot<<\": \";\n        if(f[t][n]<=t) cout<<f[t][n]<<endl;\n        else cout<<\"impossible\"<<endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1508476521,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2583 \u3010\u5730\u94c1\u95f4\u8c0d\u3011"
    },
    {
        "content": "\u4e00\u9053DP\u9898\u76ee\uff0cdp[i][j]\u8868\u793a\u5230\u8fbe\u7b2ci\u4e2a\u57ce\u5e02\u7684\u65f6\u5019 \uff0c\u65f6\u95f4\u4e3aj\u7684\u7b49\u5f85\u65f6\u95f4\u6700\u5c11\u662f\u591a\u5c11\uff0c\u7136\u540e\u8f6c\u79fb\u65b9\u7a0b\u5373\u53ef\u3002\n\n```cpp\n#include<cstdio>  \n#include<algorithm>  \nusing namespace std;  \nint a[100];  \nint d1[100][100],d2[100][100];  \nint m1,m2;  \nint dp[100][400];  \nint main(){  \n    int n;  \n    int T=1;  \n    while(scanf(\"%d\",&n)&&n!=0){  \n        int t;  \n        scanf(\"%d\",&t);  \n        for(int i=1;i<=n-1;i++){  \n            scanf(\"%d\",&a[i]);  \n        }  \n        scanf(\"%d\",&m1);  \n        for(int i=1;i<=m1;i++){  \n            scanf(\"%d\",&d1[1][i]);  \n        }  \n        sort(d1[1]+1,d1[1]+m1+1);  \n        scanf(\"%d\",&m2);  \n        for(int i=1;i<=m2;i++){  \n            scanf(\"%d\",&d2[n][i]);  \n        }  \n        sort(d2[n]+1,d2[n]+m2+1);  \n        dp[0][1]=0;  \n        for(int i=1;i<=m1;i++){  \n            for(int j=1;j<=n-1;j++){  \n                d1[j+1][i]=d1[j][i]+a[j];  \n            }  \n        }  \n        for(int i=1;i<=m2;i++){  \n            for(int j=n-1;j>=1;j--){  \n                d2[j][i]=d2[j+1][i]+a[j];  \n            }  \n        }  \n        for(int i=0;i<=t;i++){  \n            for(int j=1;j<=n;j++) dp[j][i]=t+1;  \n        }  \n        dp[1][0]=0;  \n        for(int j=0;j<=t;j++){  \n            for(int i=1;i<=n;i++){  \n                if(dp[i][j]<=t){  \n                    int k;  \n                    for(k=1;k<=m1;k++){  \n                        if(d1[i][k]>=j) break;  \n                    }  \n                    if(d1[i][k]-j+dp[i][j]<dp[i+1][j+a[i]+d1[i][k]-j]&&k<=m1)  \n                    dp[i+1][j+a[i]+d1[i][k]-j]=d1[i][k]-j+dp[i][j];  \n                    for(k=1;k<=m2;k++){  \n                        if(d2[i][k]>=j) break;  \n                    }  \n                    if(k<=m2&&d2[i][k]-j+dp[i][j]<dp[i-1][j+a[i-1]+d2[i][k]-j])  \n                    dp[i-1][j+a[i-1]+d2[i][k]-j]=d2[i][k]-j+dp[i][j];  \n                }  \n            }  \n        }  \n        for(int i=1;i<=t;i++){  \n            if(dp[n][i]<t){  \n                dp[n][t]=min(dp[n][i]+t-i,dp[n][t]);  \n            }  \n        }  \n        if(dp[n][t]<=t)  \n        printf(\"Case Number %d: %d\\n\",T++,dp[n][t]);  \n        else printf(\"Case Number %d: impossible\\n\",T++);  \n    }  \n}\n```",
        "postTime": 1442721343,
        "uid": 8066,
        "name": "wzmszjw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2583 \u3010\u5730\u94c1\u95f4\u8c0d\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u5728\u6211\u8fd8\u5728\u5f88\u5c0f\u767d\u7684\u65f6\u5019\u770b\u89c1\uff0c\u5218\u4f73\u6c5d\u7684\u4e66\u770b\u89c1\u7684\uff0c\u90a3\u65f6\u5019\u770b\u89c1\u8fd8\u4ee5\u4e3a\u7279\u522b\u96be\uff0c\u73b0\u5728\u505a\u591a\u4e86DP\u770b\u6765\u5176\u5b9e\u4e5f\u86ee\u6c34\u4e86\uff0c\u9996\u5148\uff0c\u4e00\u822c\u505adp\u90fd\u662f\u770b\u54ea\u4e2a\u6570\u636e\u8303\u56f4\u5c0f\u4e00\u70b9\u5c31\u53ef\u4ee5\u8003\u8651\u4ece\u54ea\u91cc\u5f00\u59cb\u8bbe\u8ba1\u72b6\u6001\u3002\u867d\u7136\u8fd9\u9898\u90fd\u633a\u5c0f\u7684\n\u9898\u76ee\u91cc\u9762\u51fa\u73b0\u4e00\u4e2a\u6570\u636e\u5c31\u662f\u65f6\u95f4\uff0c\u65f6\u95f4\u662f\u4e00\u4e2a\u5929\u7136\u7684\u7ebf\u6027\u5e8f\uff0c\u53ef\u4ee5\u5341\u5206\u7b80\u5355\u7684\u5229\u7528\u65f6\u95f4\u53bb\u5b8c\u6210\u7ebf\u6027\u8f6c\u79fb\uff0c\u6211\u4eec\u518d\u6765\u770b\u4e00\u770b\u4ed6\u8981\u8981\u6c42\u7684\u4ec0\u4e48\uff0cT\u65f6\u95f4\u540e\u5728\u8f66\u7ad9n\u7684\u6700\u5c11\u7b49\u5f85\u65f6\u95f4\uff0c\u5728\u666e\u901a\u7684DP\uff08\u4e0d\u662f\u90a3\u79cd\u7279\u522b\u9a9a\u6c14\u7684\u8981\u641e\u4f60\u7684\uff09\uff0c\u90fd\u662f\u53ef\u4ee5\u4ece\u9898\u76ee\u5165\u624b\u5165\u8bbe\u8ba1\u72b6\u6001\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u8bbe\u8ba1f[i][j]\uff0c\u8868\u793a\u7b2ci\u79d2\u7684\u65f6\u5019\u4f60\u4eba\u5728\u7b2cj\u7ad9\u6240\u7b49\u5f85\u7684\u6700\u5c11\u65f6\u95f4\uff0c\u5176\u5b9e\u6211\u4e00\u5f00\u59cb\u5728\u8bbe\u8ba1\u8fd9\u4e2a\u72b6\u6001\u7684\u65f6\u5019\u60f3\u7740\uff0c\u5728\u8f66\u4e0a\u79fb\u52a8\u53bb\u4e0b\u4e00\u7ad9\u7684\u65f6\u5019\u600e\u4e48\u8868\u793a\u72b6\u6001\uff1f\u540e\u6765\u8003\u8651\u4e0b\uff0c\u5176\u5b9e\u5b8c\u5168\u4e0d\u7528\u53bb\u8868\u793a\u5728\u8f66\u4e0a\u7684\u72b6\u6001\uff0c\u6211\u5c31\u53ea\u8868\u793a\u4ed6\u5230\u8fbe\u4e86\u8f66\u7ad9\u90a3\u4e2a\u65f6\u5019\u7684\u72b6\u6001\uff08\u8bf4\u8bdd\u83ab\u540d\u7684\u786c\u6c14\uff09\uff01\uff01\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u4e0d\u8868\u793a\uff1f\u56e0\u4e3a\u6211\u53ef\u4ee5\u4ece\u4e00\u4e2a\u72b6\u6001\u63a8\u51fa\u53e6\u4e00\u4e2a\u72b6\u6001\uff0c\u4e5f\u5c31\u662f\u4ecef[i][j]\u76f4\u63a5\u63a8\u51faf[k][z]\uff0ckz\u662f\u65b0\u7684\u65f6\u95f4\uff0c\u65b0\u7684\u8f66\u7ad9\uff0c\u8fd9\u6837\u5c31\u5b8c\u5168\u4e0d\u7528\u8868\u793a\u8f66\u5728\u8def\u4e0a\u7684\u72b6\u6001\u4e86\uff08\u4ece\u73b0\u5728\u63a8\u5411\u672a\u6765\uff09\u3002\n\u63a5\u4e0b\u6765\u8003\u8651f[i][j]\u600e\u4e48\u5411\u672a\u6765\u8f6c\u79fb\u3002\n\n    (1)\u7b49\u5f85\u4e00\u5206\u949f\u5565\u4e8b\u4e0d\u5e72\uff0c\u4e3a\u4ec0\u4e48\u662f\u4e00\u5206\u949f\uff0c\u56e0\u4e3a\u4f60\u7b49\u4efb\u610f\u5206\u949f\u90fd\u53ef\u4ee5\u7531\u4e00\u5206\u949f\u63a8\u51fa\u6765\uff01\uff01\n    (2)\u8fd9\u4e2a\u65f6\u5019\u6709\u8d70\u5411\u5de6\u8fb9\u7684\u8f66\u8f66\uff0c\u6211\u4eec\u4e0a\u8f66\u3002\n    (3)\u8fd9\u4e2a\u65f6\u5019\u6709\u8d70\u5411\u53f3\u8fb9\u7684\u8f66\u8f66\uff0c\u6211\u4eec\u4e0a\u8f66\u3002\n\n\u77e5\u9053\u600e\u4e48\u8f6c\u79fb\u4e86\u5b9e\u9645\u4e0a\u4e5f\u5c31\u53ea\u5269\u4e0b\u6700\u540e\u4e00\u4e2a\u95ee\u9898\u4e86\uff0c \u6211\u4eec\u600e\u4e48\u77e5\u9053\u8fd9\u4e2a\u65f6\u95f4\uff0c\u8fd9\u4e2a\u8f66\u7ad9\u6709\u8f66\uff08\u4e0d\u7ba1\u6709\u591a\u5c11\u8f86\uff0c\u6211\u53ea\u8981\u6709\u4e00\u8f86\u5c31\u884c\uff09\uff1f\u6211\u662f\u9009\u62e9\u770b\u4ed6\u6570\u636e\u6709\u70b9\u5c0f\uff0c\u5c31\u66b4\u529b\u7684\u5f00\u4e24\u4e2a\u4e8c\u7ef4\u6570\u7ec4 toleft[i][j]\u548ctoright[i][j],\u4ed6\u4eec\u4e3a1\u5c31\u8868\u793ai\u65f6\u95f4\u7684j\u7ad9\u6709\u4e00\u4e2a\u8f66\u8f66\u3002\u600e\u4e48\u6c42\u51fa\u8fd9\u4e2abool\u7c7b\u578b\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5728\u8bfb\u5165\u8f66\u8f66\u7684\u65f6\u5019\u5427\u6bcf\u8f86\u8f66\u8d70\u5b8c\u5168\u7a0b\u8def\u8fc7\u6bcf\u4e2a\u7ad9\u7684\u65f6\u95f4\u66b4\u529b\u6c42\u51fa\u6765\u8bb0\u5f55\u5c31\u53ef\u4ee5\u4e86\uff0c\u771f\u7684\u5341\u5206\u66b4\u529b\u3002\u3002\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<stack>\n#include<algorithm>\n#include<cstring>\n#include<queue>\n#include<vector>\n#include<time.h>\n#include<string>\n#include<cmath>\n#include <ctime>\n#include<bitset>\n#include <cctype>\n#define debug cout<<\"*********degug**********\";\n#define signed long long\n#define RE register\n#define yn yn_\nusing namespace std;\nconst long long max_ = 10000 + 7;\nconst int mod = 1e9 + 9;\nconst int inf = 1e9;\nconst long long INF = 1e18;\nint read() {\n\tint s = 0, f = 1;\n\tchar ch = getchar();\n\twhile (ch<'0' || ch>'9') {\n\t\tif (ch == '-')\n\t\t\tf = -1;\n\t\tch = getchar();\n\t}\n\twhile (ch >= '0'&&ch <= '9') {\n\t\ts = s * 10 + ch - '0';\n\t\tch = getchar();\n\t}\n\treturn s * f;\n}\ninline int min(int a, int b) {\n\treturn a < b ? a : b;\n}\ninline int max(int a, int b) {\n\treturn a > b ? a : b;\n}\nint n, T,toleft[max_][100], toright[max_][100],f[max_][100],se[max_],rstar[max_],lstar[max_],rn,ln;\nint main() {\n\tfor(int flag = 1; 1;flag++){\n\t\tcin >> n;\n\t\tif (n == 0)break;\n\t\tT = read();\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tse[i] = read();\n\t\t}\n\t\tmemset(toright, 0, sizeof(toright));\n\t\tmemset(toleft, 0, sizeof(toleft));\n\t\trn = read();\n\t\tfor (int i = 1; i <= rn; i++) {\n\t\t\trstar[i] = read();\n\t\t\tint t = rstar[i]; toright[t][1] = 1;\n\t\t\tfor (int j = 1; j < n; j++) {\n\t\t\t\ttoright[t + se[j]][j + 1] = 1;\n\t\t\t\tt = t + se[j];\n\t\t\t}\n\t\t}\n\t\tln = read();\n\t\tfor (int i = 1; i <= ln; i++) {\n\t\t\tlstar[i] = read();\n\t\t\tint t = lstar[i];\n\t\t\ttoleft[t][n] = 1;\n\t\t\tfor (int j = n -  1; j >= 1 ; j--) {\n\t\t\t\ttoleft[t + se[j]][j] = 1;\n\t\t\t\tt = t + se[j];\n\t\t\t}\n\t\t}\n\t\tmemset(f, 123, sizeof(f));\n\t\tf[0][1] = 0;\n\t\tfor (int i = 0; i < T; i++) {\n\t\t\tfor (int j = 1; j <= n; j++) {\n\t\t\t\t//F[I][J], \u5728\u7b2ci\u79d2\u65f6\u4eba\u5728\u7b2cj\u7ad9\uff0c\u6240\u7b49\u5f85\u7684\u6700\u5c11\u65f6\u95f4\n\t\t\t\t//\u7b49\u4e00\u5206\u949f\n\t\t\t\tf[i + 1][j] = min(f[i + 1][j], f[i][j] + 1);\n\t\t\t\t//\u5750\u4e0a\u5411\u53f3\n\t\t\t\tif (toright[i][j] && j != n) {\n\t\t\t\t\tf[i + se[j]][j + 1] = min(f[i + se[j]][j + 1], f[i][j]);\n\t\t\t\t}\n\t\t\t\t//\u5750\u4e0a\u5411\u5de6\n\t\t\t\tif (toleft[i][j] && j != 1) {\n\t\t\t\t\tf[i + se[j - 1]][j - 1] = min(f[i + se[j - 1]][j - 1], f[i][j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (f[T][n] > T) {\n\t\t\tprintf(\"Case Number %d: impossible\\n\", flag);\n\t\t}\n\t\telse {\n\t\t\tprintf(\"Case Number %d: %d\\n\", flag, f[T][n]);\n\t\t}\n\t\t\n\t\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1578191189,
        "uid": 156874,
        "name": "Boxxxxxx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2583 \u3010\u5730\u94c1\u95f4\u8c0d\u3011"
    },
    {
        "content": "\u6211\u6765\u53d1\u4e00\u4e2aPascal\u9898\u89e3\u5427\u3002\u3002\u3002\n\n\u8fd9\u9053\u9898\u5176\u5b9e\u548cUVA1025 A Spy in the Metro\u662f\u540c\u4e00\u9053\u9898\uff0c\u53ef\u4ee5\u7528\u52a8\u6001\u89c4\u5212\u6765\u89e3\u51b3\u3002\n\n\u7531\u4e8eDP\u65b9\u7a0b\u662f\u849f\u84bb\u81ea\u5df1\u60f3\u51fa\u6765\u7684\uff0c\u6240\u4ee5\u6bd4\u5927\u4f6c\u4eec\u96be\u770b\u4e00\u4e9b\u3002\n\n\u72b6\u6001\u662f\u4e8c\u7ef4\u7684\uff0cf[i][j]\u8868\u793a\u5728\u7b2ci\u65f6\u523b\u5230\u8fbe\u7b2cj\u4e2a\u8f66\u7ad9\u6240\u9700\u8981\u7b49\u5f85\u7684\u6700\u77ed\u65f6\u95f4\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n\u53ea\u5bf9\u5411\u56de\u5f00\u7684\u8f66\u8fdb\u884c\u8003\u8651\uff0c\u5148\u6c42\u51fa\u6700\u65e9\u5230\u8fbe\u672c\u7ad9\u7684\u8f66\uff0c\u8fd9\u6837\u624d\u80fd\u4f7f\u7b49\u5f85\u7684\u65f6\u95f4\u5c3d\u53ef\u80fd\u5f97\u5c11\uff0c\u849f\u84bb\u7528\u4e86\u4e00\u91cd\u5faa\u73af\u3002\u3002\u3002\n\n\u8bbe\u7b49\u5f85\u65f6\u95f4\u4e3atot\u3002\n\n\u7136\u540e\u679a\u4e3e\u4e0b\u4e00\u6b21\u5f00\u5f80\u54ea\u4e00\u7ad9\uff0c\u5f00\u5f80\u7b2ck\u7ad9\u5230\u8fbe\u7684\u65f6\u95f4\u4e3ai+tot+time[k]-time[j].\n\nf[i+tot+time[k]-time[j]][k]:=min(f[i+tot+time[k]-time[j]][k],f[i][j]+tot); \uff081<=k<j\uff09\n\n\u5411\u7ec8\u70b9\u5f00\u7684\u8f66\u4e5f\u662f\u5982\u6b64\uff1a\n\nf[i+tot+time[k]-time[j]][k]:=min(f[i+tot+time[k]-time[j]][k],f[i][j]+tot); (j<k<=n)\n\n\u5927\u529f\u544a\u6210\u5566\u3002\n\nPascal Code\uff1a\n\n```cpp\nuses math;//\u8c03\u7528\u6570\u5b66\u5e93\nvar\n  f:array[0..505,0..505]of int64;\n  a,b:array[0..505]of longint;\n  time:array[0..505]of longint;\n  n,m,i,j,k,g_o,come,o,x:longint;\n  inf,tot,ans:int64;\nbegin\n  inf:=1000000007;\n  repeat\n    readln(n);\n    if n=0 then\n      exit;\n    inc(o);\n    readln(m);\n    for i:=2 to n do\n    begin\n      read(x);\n      time[i]:=time[i-1]+x;//\u524d\u7f00\u548c\n    end;\n    readln;\n    readln(g_o);\n    for i:=1 to g_o do\n      read(a[i]);\n    readln;\n    readln(come);\n    for i:=1 to come do\n      read(b[i]);\n    readln;\n    for i:=0 to m do\n      for j:=0 to n do\n        f[i][j]:=inf;\n    f[0][1]:=0;//\u521d\u59cb\u5316\n    for i:=0 to m do\n      for j:=1 to n do\n      begin\n        if f[i][j]=inf then//\u82e5f[i][j]\u4e0d\u5b58\u5728\uff0c\u4ee5\u4e0b\u90fd\u662f\u65e0\u610f\u4e49\u7684\n          continue;\n        tot:=inf;\n        for k:=1 to come do\n        begin\n          if i>b[k]+time[n]-time[j] then\n            continue;\n          tot:=min(tot,b[k]+time[n]-time[j]-i);\n        end;//\u8ba1\u7b97tot\n        if tot<>inf then\n        begin\n          for k:=j-1 downto 1 do\n            if i+tot+time[j]-time[k]<=m then\n              f[i+tot+time[j]-time[k]][k]:=min(f[i+tot+time[j]-time[k]][k],f[i][j]+tot);//\u5411\u56de\u5f00\n        end;\n        tot:=inf;\n        for k:=1 to g_o do\n        begin\n          if i>a[k]+time[j] then\n            continue;\n          tot:=min(tot,a[k]+time[j]-i);\n        end;\n        if tot<>inf then\n        begin\n          for k:=j+1 to n do\n            if i+tot+time[k]-time[j]<=m then\n              f[i+tot+time[k]-time[j]][k]:=min(f[i+tot+time[k]-time[j]][k],f[i][j]+tot);//\u5411\u7ec8\u70b9\u5f00\n        end;\n      end;\n    ans:=inf;\n    for i:=0 to m do\n      ans:=min(ans,f[i][n]+m-i);//\u9009\u62e9\u6700\u4f18\u65b9\u6848\n    if ans=inf then\n      writeln('Case Number ',o,': impossible') else\n      writeln('Case Number ',o,': ',ans);\n  until false;\nend.\n```",
        "postTime": 1535431296,
        "uid": 10341,
        "name": "GK0328",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2583 \u3010\u5730\u94c1\u95f4\u8c0d\u3011"
    },
    {
        "content": "**\u9898\u76ee\u63cf\u8ff0**\n\n\u7279\u5de5\u739b\u5229\u4e9a\u88ab\u9001\u5230S\u5e02\u6267\u884c\u4e00\u4e2a\u7279\u522b\u5371\u9669\u7684\u4efb\u52a1\u3002\u5979\u9700\u8981\u5229\u7528\u5730\u94c1\u5b8c\u6210\u4ed6\u7684\u4efb\u52a1\uff0cS\u5e02\u7684\u5730\u94c1\u53ea\u6709\u4e00\u6761\u7ebf\u8def\u8fd0\u884c\uff0c\u6240\u4ee5\u5e76\u4e0d\u590d\u6742\u3002\n\n\u739b\u5229\u4e9a\u6709\u4e00\u4e2a\u4efb\u52a1\uff0c\u73b0\u5728\u7684\u65f6\u95f4\u4e3a0\uff0c\u5979\u8981\u4ece\u7b2c\u4e00\u4e2a\u7ad9\u51fa\u53d1\uff0c\u5e76\u5728\u6700\u540e\u4e00\u7ad9\u7684\u95f4\u8c0d\u78b0\u5934\u3002\u739b\u5229\u4e9a\u77e5\u9053\u6709\u4e00\u4e2a\u5f3a\u5927\u7684\u7ec4\u7ec7\u6b63\u5728\u8ffd\u8e2a\u5979\uff0c\u5979\u77e5\u9053\u5982\u679c\u4e00\u76f4\u5446\u5728\u4e00\u4e2a\u8f66\u7ad9\uff0c\u5979\u4f1a\u6709\u5f88\u5927\u7684\u88ab\u6293\u7684\u98ce\u9669\uff0c\u8eb2\u5728\u8fd0\u884c\u7684\u5217\u8f66\u4e2d\u662f\u6bd4\u8f83\u5b89\u5168\u7684\u3002\u6240\u4ee5\uff0c\u5979\u51b3\u5b9a\u5c3d\u53ef\u80fd\u5730\u5446\u5728\u8fd0\u884c\u7684\u5217\u8f66\u4e2d\uff0c\u5979\u53ea\u80fd\u5f80\u524d\u6216\u5f80\u540e\u5750\u8f66\u3002\n\n\u739b\u5229\u4e9a\u4e3a\u4e86\u80fd\u51c6\u65f6\u4e14\u5b89\u5168\u7684\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u8f66\u7ad9\u4e0e\u5bf9\u65b9\u78b0\u5934\uff0c\u9700\u8981\u77e5\u9053\u5728\u5728\u8f66\u7ad9\u6700\u5c0f\u7b49\u5f85\u65f6\u95f4\u603b\u548c\u7684\u8ba1\u5212\u3002\u4f60\u5fc5\u987b\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5f97\u5230\u739b\u4e3d\u4e9a\u6700\u77ed\u7684\u7b49\u5f85\u65f6\u95f4\u3002\u5f53\u7136\uff0c\u5230\u4e86\u7ec8\u70b9\u7ad9\u4e4b\u540e\u5982\u679c\u65f6\u95f4\u8fd8\u6ca1\u6709\u5230\u89c4\u5b9a\u7684\u65f6\u523b\uff0c\u5979\u53ef\u4ee5\u5728\u8f66\u7ad9\u91cc\u7b49\u7740\u5bf9\u65b9\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u7b49\u5f85\u7684\u65f6\u523b\u4e5f\u662f\u8981\u7b97\u8fdb\u53bb\u7684\u3002\n\n\u8fd9\u4e2a\u57ce\u5e02\u6709n\u4e2a\u8f66\u7ad9\uff0c\u7f16\u53f7\u662f1-n\uff0c\u706b\u8f66\u662f\u8fd9\u4e48\u79fb\u52a8\u7684\uff1a\u4ece\u7b2c\u4e00\u4e2a\u8f66\u7ad9\u5f00\u5230\u6700\u540e\u4e00\u4e2a\u8f66\u7ad9\u3002\u6216\u8005\u4ece\u6700\u540e\u4e00\u7ad9\u53d1\u8f66\u7136\u540e\u5f00\u4f1a\u6765\u3002\u706b\u8f66\u5728\u6bcf\u7279\u5b9a\u4e24\u7ad9\u4e4b\u95f4\u884c\u9a76\u7684\u65f6\u95f4\u662f\u56fa\u5b9a\u7684\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5ffd\u7565\u505c\u8f66\u7684\u65f6\u95f4\uff0c\u739b\u5229\u4e9a\u7684\u901f\u5ea6\u6781\u5feb\uff0c\u6240\u4ee5\u4ed6\u53ef\u4ee5\u8fc5\u901f\u4e0a\u4e0b\u8f66\u5373\u4f7f\u4e24\u8f86\u8f66\u540c\u65f6\u5230\u7ad9\u3002\n\n**\u8f93\u5165\u8f93\u51fa\u683c\u5f0f**\n\n\u8f93\u5165\u683c\u5f0f\uff1a\n\u8f93\u5165\u6587\u4ef6\u5305\u542b\u591a\u7ec4\u6570\u636e\uff0c\u6bcf\u7ec4\u6570\u636e\u90fd\u75317\u884c\u7ec4\u6210\n\n\u7b2c1\u884c\uff1a\u4e00\u4e2a\u6b63\u6574\u6570N\uff082<=N<=50\uff09\u8868\u793a\u7ad9\u7684\u6570\u91cf\n\n\u7b2c2\u884c\uff1a\u4e00\u4e2a\u6b63\u6574\u6570T\uff080<=T<=200\uff09\u8868\u793a\u9700\u8981\u7684\u78b0\u5934\u65f6\u95f4\n\n\u7b2c3\u884c\uff1a1-\uff08n-1\uff09\u4e2a\u6b63\u6574\u6570\uff080<ti<70\uff09\u8868\u793a\u4e24\u7ad9\u4e4b\u95f4\u5217\u8f66\u7684\u901a\u8fc7\u65f6\u95f4\n\n\u7b2c4\u884c\uff1a\u4e00\u4e2a\u6574\u6570M1\uff081<=M1<=50\uff09\u8868\u793a\u79bb\u5f00\u7b2c\u4e00\u4e2a\u8f66\u7ad9\u7684\u706b\u8f66\u7684\u6570\u91cf\n\n\u7b2c5\u884c\uff1aM1\u4e2a\u6b63\u6574\u6570\uff1ad1\uff0cd2\u2026\u2026dn\uff0c\uff080<=d<=250\u4e14di<di+1\uff09\u8868\u793a\u6bcf\u4e00\u5217\u706b\u8f66\u79bb\u5f00\u7b2c\u4e00\u7ad9\u7684\u65f6\u95f4\n\n\u7b2c6\u884c\uff1a\u4e00\u4e2a\u6b63\u6574\u6570M2\uff081<=M2<=50\uff09\u8868\u793a\u79bb\u5f00\u7b2cN\u7ad9\u7684\u706b\u8f66\u7684\u6570\u91cf\n\n\u7b2c7\u884c\uff1aM2\u4e2a\u6b63\u6574\u6570\uff1ae1,e2\u2026\u2026eM2,(0<=e<=250\u4e14ei<ei+1)\u8868\u793a\u6bcf\u4e00\u5217\u706b\u8f66\u79bb\u5f00\u7b2cN\u7ad9\u7684\u65f6\u95f4\n\n\u6700\u540e\u4e00\u884c\u6709\u4e00\u4e2a\u6574\u65700\u3002\n\n\u8f93\u51fa\u683c\u5f0f\uff1a\n\u5bf9\u4e8e\u6bcf\u4e2a\u6d4b\u8bd5\u6848\u4f8b\uff0c\u6253\u5370\u4e00\u884c\u201cCase Number N: \u201d\uff08N\u4ece1\u5f00\u59cb\uff09\u548c\u4e00\u4e2a\u6574\u6570\u8868\u793a\u603b\u7b49\u5f85\u7684\u6700\u77ed\u65f6\u95f4\u6216\u8005\u4e00\u4e2a\u5355\u8bcd\u201cimpossible\u201d\u5982\u679c\u739b\u4e3d\u4e9a\u4e0d\u53ef\u80fd\u505a\u5230\u3002\u6309\u7167\u6837\u4f8b\u7684\u8f93\u51fa\u683c\u5f0f\u3002\n\n**\u8f93\u5165\u8f93\u51fa\u6837\u4f8b**\n\n\u8f93\u5165\u6837\u4f8b:\n\n\t4\n\t55\n\t5 10 15\n\t4\n\t0 5 10 20\n\t4\n\t0 5 10 15\n\t4\n\t18\n\t1 2 3\n\t5\n\t0 3 6 10 12\n\t6\n\t0 3 5 7 12 15\n\t2\n\t30\n\t20\n\t1\n\t20\n\t7\n\t1 3 5 7 11 13 17\n\t0\n\n\u8f93\u51fa\u6837\u4f8b:\n\n\tCase Number 1: 5\n\tCase Number 2: 0\n\tCase Number 3: impossible\n\n------------\n\u5047\u8bbe\u739b\u5229\u4e9a\u73b0\u5728\u5728\u7b2cj\u4e2a\u8f66\u7ad9\uff0c\u73b0\u5728\u7684\u65f6\u95f4\u4e3ai\uff0c\u90a3\u4e48\u5979\u6709\u4e24\u79cd\u9009\u62e9\uff1a\n\n1\u3001\u5728\u539f\u5730\u7b49\u5f85\uff1b2\u3001\u5982\u679c\u6709\u8f66\u7ecf\u8fc7\uff0c\u53ef\u4ee5\u9009\u62e9\u4e0a\u8f66\u3002\n\n\u90a3\u4e48\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u7528\u52a8\u6001\u89c4\u5212\uff1a\n\n\u4ee4dp[i][j]\u8868\u793a\u7b2ci\u5206\u949f\u65f6\uff0c\u739b\u5229\u4e9a\u5728\u7b2cj\u4e2a\u8f66\u7ad9\uff0c\u6240\u9700\u7b49\u5f85\u7684\u6700\u77ed\u65f6\u95f4\u3002\n\n\u5982\u679c\u5979\u9009\u62e9\u505c\u75591\u5206\u949f\uff0c\u90a3\u4e48\n\n\tdp[i+1][j]=dp[i][j]+1;\n    \n\u5982\u679c\u6709\u4e00\u8f86\u4ece1\u7ad9\u51fa\u53d1\u7684\u8f66\u7ecf\u8fc7\uff0c\u90a3\u4e48\u739b\u5229\u4e9a\u53ef\u4ee5\u4ecej\u7ad9\u5230\u8fbej+1\u7ad9\uff0c\u65f6\u95f4\u4f1a\u53d8\u6210i+t[j]\uff0c\u5373\n\n\tdp[i+t[j]][j+1]=dp[i][j];\n\n\u5982\u679c\u6709\u4e00\u8f86\u4ecen\u7ad9\u51fa\u53d1\u7684\u8f66\u7ecf\u8fc7\uff0c\u739b\u5229\u4e9a\u9009\u62e9\u4e0a\u8f66\uff0c\u5219\u540c\u7406\uff1a\n\n\tdp[i+t[j-1]][j-1]=dp[i][j];\n\n\u90a3\u4e48\u5173\u952e\u6765\u4e86\uff1a\u5982\u4f55\u5224\u65ad\u7b2ci\u5206\u949f\u67d0\u4e00\u8f66\u8f86\u662f\u5426\u7ecf\u8fc7j\u7ad9\uff1f\n\n\u5047\u8bbe\u6709\u4e00\u8f86\u8f66\u4ece1\u7ad9\u51fa\u53d1\uff0c\u53d1\u8f66\u65f6\u95f4\u4e3ad\uff0c\u90a3\u4e48\u5982\u679cd\u52a0\u4e0a\u4ece1\u7ad9\u51fa\u53d1\u540e\u5230\u8fbej\u7ad9\u7684\u65f6\u95f4\u7b49\u4e8ei\uff0c\u5219\u7ecf\u8fc7\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u7528\u524d\u7f00\u548c\u6570\u7ec4\u5b58\u4ece1\u7ad9\u51fa\u53d1\u5230\u8fbe\u67d0\u4e00\u7ad9\u6240\u9700\u7684\u65f6\u95f4\uff1a\n\n\tint f[70];\n    f[1]=0;\n    for(int i=1;i<n;i++)\n    \tf[i+1]=f[i]+t[i];\n\n\u90a3\u4e48\u5982\u679c  d+f[j]==i\uff0c\u5219\u8be5\u8f66\u6b64\u65f6\u7ecf\u8fc7\u3002\n\n\u53cd\u4e4b\uff0c\u5982\u679c\u8be5\u8f66\u4ecen\u7ad9\u51fa\u53d1\u5462\uff1f\u8fd9\u91cc\u7559\u7ed9\u8bfb\u8005\u601d\u8003~~\uff08\u5176\u5b9e\u662f\u63a9\u9970\u4f5c\u8005\u61d2\u5f97\u5199\uff09~~\n\n\u4e0a\u4ee3\u7801\u5566\uff1a\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\ninline void re(int &x)\n{\n\tx=0;bool flag=false;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tflag=c=='-';\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\tx=(x<<1)+(x<<3)+(c^'0');\n\t\tc=getchar();\n\t}\n\tif(flag)x=-x;\n\treturn ;\n}//\u672c\u849f\u84bb\u7684\u5feb\u8bfb\nint dp[550][70];\nint n,T;\nint m1,m2;\nint f[70],t[70],d[70],e[70];//\u5982\u9898\u76ee\u63cf\u8ff0\uff0cf\u662f\u524d\u7f00\u548c\u6570\u7ec4\nint now;\nint main()\n{\n\tre(n);//1\n\twhile(n)\n\t{\n\t\tre(T);//2\n\t\tf[1]=0;\n\t\tfor(int i=1;i<n;i++)\n\t\t{\n\t\t\tre(t[i]);//3\n\t\t\tf[i+1]=f[i]+t[i];//\u524d\u7f00\u548c\n\t\t}\n\t\t//1 to n\n\t\tre(m1);//4\n\t\tfor(int i=1;i<=m1;i++)\n\t\t\tre(d[i]);//5\n\t\t//n to 1\n\t\tre(m2);//6\n\t\tfor(int i=1;i<=m2;i++)\n\t\t\tre(e[i]);//7\n\t\tfor(int i=0;i<=T;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tdp[i][j]=9999;//\u9996\u5148\u8d4b\u4e00\u4e2a\u8f83\u5927\u7684\u503c\uff0c\u4fbf\u4e8e\u5224\u65ad\u662f\u5426\u80fd\u591f\u505a\u5230\n\t\tdp[0][1]=0;\n\t\tfor(int i=0;i<=T;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t{\n\t\t\t\tif(dp[i][j]==9999)continue;\n\t\t\t\tdp[i+1][j]=min(dp[i+1][j],dp[i][j]+1);//\u539f\u5730\u5446\u7740\n\t\t\t\tfor(int k=1;k<=m1;k++)//\u679a\u4e3e\u8f66\u8f86\n\t\t\t\t\tif(j<n&&f[j]+d[k]==i)//\u5224\u65ad\u662f\u5426\u53ef\u884c\n                    \tdp[i+t[j]][j+1]=min(dp[i+t[j]][j+1],dp[i][j]);\n\t\t\t\tfor(int k=1;k<=m2;k++)\n\t\t\t\t\tif(j>1&&f[n]-f[j]+e[k]==i)\n                    \tdp[i+t[j-1]][j-1]=min(dp[i+t[j-1]][j-1],dp[i][j]);\n\t\t\t}\n\t\tprintf(\"Case Number %d: \",++now);\n\t\tif(dp[T][n]<9999)printf(\"%d\\n\",dp[T][n]);\n\t\telse printf(\"impossible\\n\");\n\t\tre(n);//1\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1526095775,
        "uid": 54475,
        "name": "\u732a\u8111\u5b50",
        "ccfLevel": 10,
        "title": "P2583 \u5730\u94c1\u95f4\u8c0d"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\uff0c\u4e4d\u4e00\u770b\uff0c\u611f\u89c9\u597d\u96be\u554a\uff0cA\u6389\u4e4b\u540e\u7ffb\u4e86\u7ffb\u9898\u89e3\uff0c\u53d1\u73b0\u4e0b\u9762\u7684\u5927\u4f6c\u90fd\u8bf4\u7b80\u5355\n\n\u611f\u53d7\u5230\u6211\u81ea\u5df1\u662f\u6709\u591a\u4e48\u7684\u83dc\u9e21\u4e86\n\n\u9996\u5148\u6211\u611f\u89c9\u9700\u8981\u4e00\u70b9\u9884\u5904\u7406\uff0c\u8fd9\u6837\u4e0d\u7ba1\u540e\u9762\u7528\u4ec0\u4e48\u7b97\u6cd5\uff0c\u90fd\u4f1a\u597d\u641e\u4e00\u4e9b\u3002\n\n\u9884\u5904\u7406\u5982\u4e0b\uff1a   \u65b0\u5f00\u4e00\u4e2a\u6570\u7ec4dt[][][]\n\ndt[i][j][1]\u7b2ci\u79d2\uff0c\u7b2cj\u4e2a\u8f66\u7ad9\uff0c\u6709\u65e0\u5411\u7ec8\u70b9\u65b9\u5411\u7684\u8f66(\u6709:dt[i][j][1]=1,\u65e0:dt[i][j][1]=0)\n\ndt[i][j][0]\u7b2ci\u79d2\uff0c\u7b2cj\u4e2a\u8f66\u7ad9\uff0c\u6709\u65e0\u5411\u8d77\u70b9\u65b9\u5411\u7684\u8f66(\u6709:dt[i][j][0]=1,\u65e0:dt[i][j][0]=0)\n\n\u7136\u540e\u5199\u5b8c\u9884\u5904\u7406\uff0c\u89c9\u5f97\u5e94\u8be5\u662f\u52a8\u6001\u89c4\u5212\uff0c\u81f3\u4e8e\u6211\u4e3a\u5565\u53ef\u4ee5\u60f3\u5f97\u5230\uff0c\uff0c\u8fd9\u79cd\u7384\u5b66\u95ee\u98982333...\n\n\u7136\u540e\u5c31\u7740\u624b\u63a8\u65b9\u7a0bQwQ\uff0c\u6211\u60f3\u5230\u7528A[i][j]\u8868\u793a\u524di\u79d2\uff0c\u5230j\u53f7\u8f66\u7ad9\uff0c\u603b\u5171\u9700\u8981\u7b49\u5f85\u7684\u65f6\u95f4\n\n\u8fd9\u6837\u9700\u8981\u4e00\u70b9\u521d\u59cb\u5316\uff1aA[0][1]=0; \u7136\u540e\u5269\u4e0b\u7684\u90fd\u662f\u6b63\u65e0\u7a77; \u6700\u7ec8\u7b54\u6848\u4fdd\u5b58\u5728A[T][n]\u91cc\u3002\n\n\u72b6\u6001\u8bbe\u597d\u4e86\uff0c\u7136\u540e\uff1a\u8003\u8651\u7b2ci\u79d2\uff0c\u6211\u4eec\u5728\u7b2cj\u4e2a\u8f66\u7ad9\uff0c\u6211\u4eec\u662f\u5982\u4f55\u7ad9\u5230\u7b2cj\u4e2a\u8f66\u7ad9\u4e0a\u7684\u5462\uff1f\n\n\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\n\n\u4e00\uff1a \u7b2ci-Ti[j-1]\u79d2\u6070\u597d\u7b2cj-1\u4e2a\u8f66\u7ad9\u6709\u5f80\u7ec8\u70b9\u65b9\u5411\u7684\u8f66\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u8fd9\u4e2a\u8f66\u8fc7\u6765\n\n\u5373\uff1aA[i][j]=A[i-Ti[j-1]][j-1]  (\u8f6c\u79fb\u6761\u4ef6\uff1adt[i][j][1]==1)\n\n\u4e8c\uff1a \u7b2ci-Ti[j]\u79d2\u6070\u597d\u7b2cj+1\u4e2a\u8f66\u7ad9\u6709\u5f80\u8d77\u70b9\u65b9\u5411\u7684\u8f66\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u8fd9\u4e2a\u8f66\u8fc7\u6765\n\n\u5373\uff1aA[i][j]=A[i-Ti[j]][j+1]  (\u8f6c\u79fb\u6761\u4ef6\uff1adt[i][j][0]==1)\n\n\u4e09\uff1a \u524d\u4e24\u79cd\u60c5\u51b5\u5747\u4e0d\u6ee1\u8db3\uff0c\u90a3\u6211\u4eec\u662f\u600e\u4e48\u6765\u5230j\u8f66\u7ad9\u7684\u5462\uff1f\u80af\u5b9a\u662f\u5728\u7b2ci\u79d2\u4e4b\u524d\u6211\u4eec\u5c31\u5230\u8fbe\u4e86\n\nj\u8f66\u7ad9\uff0c\u7136\u540e\u4e00\u76f4\u5728\u7b49\uff0c\u7b49\u5230\u4e86\u7b2ci\u79d2\uff0c\u6240\u4ee5A[i][j]=A[i-1][j]+1;\n\n\u5bf9\u4e8e\u8fd9\u4e09\u79cd\u60c5\u51b5\uff0c\u53d6\u4e00\u4e2amin\uff0c\u4f5c\u4e3aA[i][j]\n\n\uff08\u6ce8\uff1a\u5f53\u7b2ci\u79d2j\u8f66\u7ad9\u6709\u53bb\u7ec8\u70b9\u7684\u8f66\uff0c\u90a3\u4e48j-1\u53f7\u8f66\u7ad9\u5728i-Ti[j-1]\u79d2\u80af\u5b9a\u4e5f\u6709\u8f66\u5566\uff09\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int Inf=0x3f3f3f3f;\nint M1,M2,n,T;\nint A[300][100];//dp\u6570\u7ec4\uff0c\u7528\u9014\u4e0a\u9762\u8bf4\u4e86 \nint Ti[100];//Ti[i]\u8868\u793a \u4ecei\u53f7\u8f66\u7ad9\u53bbi+1\u53f7\u8f66\u7ad9\u7684\u7528\u65f6 \nint d[100];//d[i]\u8868\u793a\u4ece\u8d77\u70b9\u51fa\u53d1\u7684\u7b2ci\u8f86\u8f66\u51fa\u53d1\u7684\u65f6\u95f4 \nint e[100];//e[i]\u8868\u793a\u4ece\u7ec8\u70b9\u51fa\u53d1\u7684\u7b2ci\u8f86\u8f66\u51fa\u53d1\u7684\u65f6\u95f4 \nint dt[300][100][2];//\u521d\u59cb\u5316\u6570\u7ec4\uff0c\u7528\u9014\u4e0a\u9762\u8bf4\u4e86 \ninline int read()//\u8bfb\u5165\u4f18\u5316 \n{\n    int fl=1,rt=0; char ch=getchar();\n    while(ch<'0'||ch>'9'){ if(ch=='-') fl=-1; ch=getchar(); }\n    while(ch>='0'&&ch<='9'){ rt=rt*10+ch-'0'; ch=getchar(); }\n    return fl*rt;\n}\ninline void read_ini() //\u8bfb\u5165\u6570\u636e \n{\n    T=read();\n    for(int i=1;i<=n-1;i++) Ti[i]=read();\n    M1=read();\n    for(int i=1;i<=M1;i++) d[i]=read();\n    M2=read();\n    for(int i=1;i<=M2;i++) e[i]=read();\n}\ninline void ini_station() //\u521d\u59cb\u5316\u6570\u7ec4 \n{\n    for(int i=1;i<=M1;i++) //\u73b0\u5728\u662f\u4ece\u8d77\u70b9\u51fa\u53d1\u7684\u7b2ci\u8f86\u8f66 \n    {\n        int k=1; //\u73b0\u5728\u5728\u7b2ck\u53f7\u5730\u94c1\u7ad9 \n        for(int j=d[i];j<=T;j+=Ti[k-1]) //\u7b2ci\u8f86\u8f66\u4e0d\u65ad\u5f80\u7ec8\u70b9\u524d\u8fdb,\u65f6\u95f4\u8d85T\u5c31\u4e0d\u7528\u7ba1\u4e86 \n        {\n            dt[j][k][1]=1;      \n            k++;\n            if(k>n) break ; //\u5230\u8fbe\u7ec8\u70b9\u4e86 \n        }\n    }\n    for(int i=1;i<=M2;i++)  //\u548c\u4e0a\u9762\u4e00\u4e2a\u9053\u7406\uff0c\u8fd9\u91cc\u5904\u7406\u7684\u662f\u4ece\u7ec8\u70b9\u53bb\u8d77\u70b9\u7684 \n    {\n        int k=n;\n        for(int j=e[i];j<=T;j+=Ti[k])\n        {\n            dt[j][k][0]=1;\n            k--;\n            if(!k) break ; \n        }\n    }\n}\ninline void Dynamic_programming() //\u52a8\u6001\u89c4\u5212\u8fc7\u7a0b \n{\n    A[0][1]=0;\n    for(int i=1;i<=T;i++)  //\u679a\u4e3e\u65f6\u95f4 \n    {\n        for(int j=1;j<=n;j++) //\u679a\u4e3e\u5728\u54ea\u4e2a\u5730\u94c1\u7ad9 \n        { \n            //\u4e09\u79cd\u72b6\u6001\u8f6c\u79fb\uff1a \n            A[i][j]=min(A[i][j],A[i-1][j]+1); \n            if(dt[i][j][1])\n            {\n                A[i][j]=min(A[i][j],A[i-Ti[j-1]][j-1]);\n            }\n            if(dt[i][j][0])\n            {\n                A[i][j]=min(A[i][j],A[i-Ti[j]][j+1]);\n            }\n        }\n    }\n}\nvoid print()\n{\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=0;j<=T;j++)\n        {\n            printf(\"%d \",dt[j][i][0]);\n        }\n        printf(\"\\n\");\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    int t=1;\n    while(n!=0)\n    {\n        memset(A,0x3f,sizeof(A));\n        memset(dt,0,sizeof(dt));\n        memset(Ti,0,sizeof(Ti));\n        read_ini();\n        ini_station();\n        //print();\n        Dynamic_programming();\n        //\u8f93\u51fa\u7b54\u6848\uff1a \n        if(A[T][n]==Inf)\n            printf(\"Case Number %d: impossible\\n\",t);\n        else \n            printf(\"Case Number %d: %d\\n\",t,A[T][n]);\n        scanf(\"%d\",&n); t++;\n    }\n    return 0;\n}\n``` \n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nRp++",
        "postTime": 1510046592,
        "uid": 21596,
        "name": "Forever\u4e36CIL",
        "ccfLevel": 6,
        "title": "P2583 \u5730\u94c1\u95f4\u8c0d"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u5728\u6c42\u8fd9\u4e2a\u4eba\u5728\u65f6\u95f4T\u5230\u8fben\u7ad9\u7684\u6700\u5c0f\u7b49\u5f85\u65f6\u95f4\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528dp\u3010i\u3011\u3010j\u3011\u8868\u793a\u8fd9\u4e2a\u4eba\u5728i\u65f6\u95f4\u5230\u8fbej\u7684\u6700\u5c0f\u7b49\u5f85\u65f6\u95f4\n\n\u90a3\u4e48\u8fd9\u4e2a\u72b6\u6001\u662f\u53ef\u4ee5\u7531j-1\u548cj+1\u63a8\u51fa\u6765\u7684\uff1b\n\n\u53ea\u9700\u8981\u679a\u4e3e\u706b\u8f66\u6570\u91cf\u5c31\u884c\u4e86\uff1b\n\ndp\u65b9\u7a0b\uff1a\n\ndp[i][j]=min(dp[i][j],dp[x[k]+sum[0][j-1]][j-1]+(i-x[k]-sum[0][j]));\n\ndp[i][j]=min(dp[i][j],dp[y[k]+sum[1][j+1]][j+1]+(i-y[k]-sum[1][j]));\n\n\u53e6\u5916\u5c31\u662f\u9884\u5904\u7406\u7684\u95ee\u9898\u4e86\n\n\u53ef\u4ee5\u7528sum\u30100\u3011\u3010i\u3011\u8868\u793a\u706b\u8f66\u4ece1\u7ad9\u5230i\u7ad9\u65f6\u95f4sum\u30101\u3011\u3010i\u3011\u662f\u4ecen\u7ad9\u5230i\u7ad9\u7684\u65f6\u95f4\n\n\u6bcf\u6b21\u6e05\u7a7a\uff01\uff01\uff01\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int maxn=1000+10;\nint n,T,m1,m2;\nint s[maxn],x[maxn],y[maxn],sum[2][maxn];\nint dp[maxn][maxn];\nint main()\n{\n    int cnt=0;\n    while(scanf(\"%d\",&n) && n)\n    {\n        scanf(\"%d\",&T);\n        memset(sum,0,sizeof(sum));memset(s,0,sizeof(s));\n        for(int i=1;i<n;i++) scanf(\"%d\",&s[i]);\n        for(int i=2;i<=n;i++)sum[0][i]=sum[0][i-1]+s[i-1];\n        for(int i=n-1;i>=1;i--)sum[1][i]=sum[1][i+1]+s[i];\n        scanf(\"%d\",&m1);for(int i=1;i<=m1;i++)scanf(\"%d\",&x[i]);\n        scanf(\"%d\",&m2);for(int i=1;i<=m2;i++)scanf(\"%d\",&y[i]);\n        memset(dp,0x3f,sizeof(dp));dp[0][1]=0;\n        for(int i=1;i<=T;i++)\n        {\n            for(int j=1;j<=n;j++)\n            {\n                dp[i][j]=dp[i-1][j]+1;\n                for(int k=1;k<=m1;k++)\n                if(i>=x[k]+sum[0][j] && j>1)\n                {\n                    dp[i][j]=min(dp[i][j],dp[x[k]+sum[0][j-1]][j-1]+(i-x[k]-sum[0][j]));\n                }\n                for(int k=1;k<=m2;k++)\n                if(i>=y[k]+sum[1][j] && j<n)\n                {\n                    dp[i][j]=min(dp[i][j],dp[y[k]+sum[1][j+1]][j+1]+(i-y[k]-sum[1][j]));\n                }\n            }\n        }\n        if(dp[T][n]>1e9)printf(\"Case Number %d: impossible\\n\",++cnt);\n        else printf(\"Case Number %d: %d\\n\",++cnt,dp[T][n]);\n    }\n}\n```",
        "postTime": 1505266445,
        "uid": 25365,
        "name": "zhouenji",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2583 \u3010\u5730\u94c1\u95f4\u8c0d\u3011"
    },
    {
        "content": "\u5730\u94c1\u95f4\u8c0d\uff1a\u65f6\u7a7aDP\n\n\u7279\u5de5\u739b\u5229\u4e9a\u88ab\u9001\u5230S\u5e02\u6267\u884c\u4e00\u4e2a\u7279\u522b\u5371\u9669\u7684\u4efb\u52a1\u3002\u5979\u9700\u8981\u5229\u7528\u5730\u94c1\u5b8c\u6210\u4ed6\u7684\u4efb\u52a1\uff0cS\u5e02\u7684\u5730\u94c1\u53ea\u6709\u4e00\u6761\u7ebf\u8def\u8fd0\u884c\uff0c\u6240\u4ee5\u5e76\u4e0d\u590d\u6742\u3002\n\n\u739b\u5229\u4e9a\u6709\u4e00\u4e2a\u4efb\u52a1\uff0c\u73b0\u5728\u7684\u65f6\u95f4\u4e3a0\uff0c\u5979\u8981\u4ece\u7b2c\u4e00\u4e2a\u7ad9\u51fa\u53d1\uff0c\u5e76\u5728\u6700\u540e\u4e00\u7ad9\u7684\u95f4\u8c0d\u78b0\u5934\u3002\u739b\u5229\u4e9a\u77e5\u9053\u6709\u4e00\u4e2a\u5f3a\u5927\u7684\u7ec4\u7ec7\u6b63\u5728\u8ffd\u8e2a\u5979\uff0c\u5979\u77e5\u9053\u5982\u679c\u4e00\u76f4\u5446\u5728\u4e00\u4e2a\u8f66\u7ad9\uff0c\u5979\u4f1a\u6709\u5f88\u5927\u7684\u88ab\u6293\u7684\u98ce\u9669\uff0c\u8eb2\u5728\u8fd0\u884c\u7684\u5217\u8f66\u4e2d\u662f\u6bd4\u8f83\u5b89\u5168\u7684\u3002\u6240\u4ee5\uff0c\u5979\u51b3\u5b9a\u5c3d\u53ef\u80fd\u5730\u5446\u5728\u8fd0\u884c\u7684\u5217\u8f66\u4e2d\uff0c\u5979\u53ea\u80fd\u5f80\u524d\u6216\u5f80\u540e\u5750\u8f66\u3002\n\n\u739b\u5229\u4e9a\u4e3a\u4e86\u80fd\u51c6\u65f6\u4e14\u5b89\u5168\u7684\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u8f66\u7ad9\u4e0e\u5bf9\u65b9\u78b0\u5934\uff0c\u9700\u8981\u77e5\u9053\u5728\u5728\u8f66\u7ad9\u6700\u5c0f\u7b49\u5f85\u65f6\u95f4\u603b\u548c\u7684\u8ba1\u5212\u3002\u4f60\u5fc5\u987b\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5f97\u5230\u739b\u4e3d\u4e9a\u6700\u77ed\u7684\u7b49\u5f85\u65f6\u95f4\u3002\u5f53\u7136\uff0c\u5230\u4e86\u7ec8\u70b9\u7ad9\u4e4b\u540e\u5982\u679c\u65f6\u95f4\u8fd8\u6ca1\u6709\u5230\u89c4\u5b9a\u7684\u65f6\u523b\uff0c\u5979\u53ef\u4ee5\u5728\u8f66\u7ad9\u91cc\u7b49\u7740\u5bf9\u65b9\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u7b49\u5f85\u7684\u65f6\u523b\u4e5f\u662f\u8981\u7b97\u8fdb\u53bb\u7684\u3002\n\n\u8fd9\u4e2a\u57ce\u5e02\u6709n\u4e2a\u8f66\u7ad9\uff0c\u7f16\u53f7\u662f1-n\uff0c\u706b\u8f66\u662f\u8fd9\u4e48\u79fb\u52a8\u7684\uff1a\u4ece\u7b2c\u4e00\u4e2a\u8f66\u7ad9\u5f00\u5230\u6700\u540e\u4e00\u4e2a\u8f66\u7ad9\u3002\u6216\u8005\u4ece\u6700\u540e\u4e00\u7ad9\u53d1\u8f66\u7136\u540e\u5f00\u4f1a\u6765\u3002\u706b\u8f66\u5728\u6bcf\u7279\u5b9a\u4e24\u7ad9\u4e4b\u95f4\u884c\u9a76\u7684\u65f6\u95f4\u662f\u56fa\u5b9a\u7684\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5ffd\u7565\u505c\u8f66\u7684\u65f6\u95f4\uff0c\u739b\u5229\u4e9a\u7684\u901f\u5ea6\u6781\u5feb\uff0c\u6240\u4ee5\u4ed6\u53ef\u4ee5\u8fc5\u901f\u4e0a\u4e0b\u8f66\u5373\u4f7f\u4e24\u8f86\u8f66\u540c\u65f6\u5230\u7ad9\u3002\n\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f Input/output\n\n\u8f93\u5165\u683c\u5f0f\uff1a\n\n\u8f93\u5165\u6587\u4ef6\u5305\u542b\u591a\u7ec4\u6570\u636e\uff0c\u6bcf\u7ec4\u6570\u636e\u90fd\u75317\u884c\u7ec4\u6210\n\n\u7b2c1\u884c\uff1a\u4e00\u4e2a\u6b63\u6574\u6570N\uff082<=N<=50\uff09\u8868\u793a\u7ad9\u7684\u6570\u91cf\n\n\u7b2c2\u884c\uff1a\u4e00\u4e2a\u6b63\u6574\u6570T\uff080<=T<=200\uff09\u8868\u793a\u9700\u8981\u7684\u78b0\u5934\u65f6\u95f4\n\n\u7b2c3\u884c\uff1a1-\uff08n-1\uff09\u4e2a\u6b63\u6574\u6570\uff080<ti<70\uff09\u8868\u793a\u4e24\u7ad9\u4e4b\u95f4\u5217\u8f66\u7684\u901a\u8fc7\u65f6\u95f4\n\n\u7b2c4\u884c\uff1a\u4e00\u4e2a\u6574\u6570M1\uff081<=M1<=50\uff09\u8868\u793a\u79bb\u5f00\u7b2c\u4e00\u4e2a\u8f66\u7ad9\u7684\u706b\u8f66\u7684\u6570\u91cf\n\n\u7b2c5\u884c\uff1aM1\u4e2a\u6b63\u6574\u6570\uff1ad1\uff0cd2\u2026\u2026dn\uff0c\uff080<=d<=250\u4e14di<di+1\uff09\u8868\u793a\u6bcf\u4e00\u5217\u706b\u8f66\u79bb\u5f00\u7b2c\u4e00\u7ad9\u7684\u65f6\u95f4\n\n\u7b2c6\u884c\uff1a\u4e00\u4e2a\u6b63\u6574\u6570M2\uff081<=M2<=50\uff09\u8868\u793a\u79bb\u5f00\u7b2cN\u7ad9\u7684\u706b\u8f66\u7684\u6570\u91cf\n\n\u7b2c7\u884c\uff1aM2\u4e2a\u6b63\u6574\u6570\uff1ae1,e2\u2026\u2026eM2,(0<=e<=250\u4e14ei<ei+1)\u8868\u793a\u6bcf\u4e00\u5217\u706b\u8f66\u79bb\u5f00\u7b2cN\u7ad9\u7684\u65f6\u95f4\n\n\u6700\u540e\u4e00\u884c\u6709\u4e00\u4e2a\u6574\u65700\u3002\n\n\u8f93\u51fa\u683c\u5f0f\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6d4b\u8bd5\u6848\u4f8b\uff0c\u6253\u5370\u4e00\u884c\u201cCase Number N: \u201d\uff08N\u4ece1\u5f00\u59cb\uff09\u548c\u4e00\u4e2a\u6574\u6570\u8868\u793a\u603b\u7b49\u5f85\u7684\u6700\u77ed\u65f6\u95f4\u6216\u8005\u4e00\u4e2a\u5355\u8bcd\u201cimpossible\u201d\u5982\u679c\u739b\u4e3d\u4e9a\u4e0d\u53ef\u80fd\u505a\u5230\u3002\u6309\u7167\u6837\u4f8b\u7684\u8f93\u51fa\u683c\u5f0f\u3002\n\n\u8f93\u5165\u8f93\u51fa\u6837\u4f8b Sample input/output\n\n\u6837\u4f8b\u6d4b\u8bd5\u70b9#1\n\n\u8f93\u5165\u6837\u4f8b\uff1a \u5728\u7ebfIDE\n\n4\n55\n5 10 15\n\n4\n0 5 10 20\n\n4\n0 5 10 15\n\n4\n18\n1 2 3\n5\n0 3 6 10 12\n\n6\n0 3 5 7 12 15\n\n2\n30\n20\n1\n20\n7\n1 3 5 7 11 13 17\n\n0\n\n\u8f93\u51fa\u6837\u4f8b\uff1a\n\nCase Number 1: 5\n\nCase Number 2: 0\n\nCase Number 3: impossible\n\n\u8bf4\u660e description\n\n\u7b2c\u4e00\u7ec4\u6837\u4f8b\u8bf4\u660e\uff0c\u59790\u5206\u949f\u65f6\u4e0a\u8f66\uff0c\u57283\u53f7\u7ad9\u4e0b\u8f66\uff0c\u7acb\u523b\u5750\u4e0a\uff080\u5206\u59cb\u53d1\uff0915\u5206\u5f00\u7684\u8f66\u56de\u53bb\uff0c\u52302\u53f7\u8f66\u7ad9\uff0c\u7acb\u523b\u5750\u4e0a\uff0820\u5206\u59cb\u53d1\uff0925\u5f00\u7684\u8f66\u5230\u7ec8\u70b9\uff0c50\u5206\u5230\uff0c\u8fd8\u9700\u8981\u7b49\u5f855\u5206\u949f\u3002\n\n\n\u601d\u8def\uff1a\u8fd9\u4e2a\u9898\u53ef\u4ee5\u770b\u51fa\u662fDP\uff0c\u4f46\u662f\u96be\u5904\u7406\u7684\u5c31\u662f\u5217\u8f66\u6709\u5f88\u591a\uff0c\u8fd8\u4ece\u4e24\u8fb9\u540c\u65f6\u5f00\u51fa\uff0c\u53d1\u8f66\u65f6\u95f4\u8fd8\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u5c31\u7ed9\u6211\u4eec\u8fdb\u884c\u65f6\u95f4\u548c\u7a7a\u95f4\u4e0a\u7684\u8f6c\u79fb\u9020\u6210\u4e86\u4e0d\u53d8\uff0c\u90a3\u4e48\u8fd9\u4e2a\u9898\u96be\u70b91\u5c31\u5728\u4e8e\u9884\u5904\u7406\uff0c\u5426\u5219\u4f60\u8fb9DP\u8fb9\u5904\u7406\u4f1a\u75af\u7684\uff01\n\n\n\u5728\u989d\u5916\u8bf4\u4e00\u4e2a\u6280\u5de7\uff1a\u9898\u76ee\u6709\u591a\u7ec4\u6570\u636e\uff0c\u7ed3\u5c3e\u6709\u4e2a0\uff0c\u4f46\u662f \u6bcf\u7ec4\u6570\u636e\u7684\u7b2c\u4e00\u4e2a N>=2 \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2aN\u7684\u5080\u5121\u53d8\u91cfC\uff0c\u6bcf\u6b21\u5148\u8bfb\u5165C\uff0c\u5982\u679cC=0\u90a3\u4e48\u8bf4\u660e\u6570\u636e\u7ed3\u675f\uff0c\u7a0b\u5e8f\u8df3\u51fa\uff1b\u5982\u679cC<>0\u90a3\u4e48C\u7684\u503c\u5b9e\u9645\u4e0a\u662fN\uff0c\u6211\u4eec\u5c31N:=C;\u518d\u7ee7\u7eed\u8bfb\u5165\u6570\u636e\u5c31\u53ef\u4ee5\u4e86\n\n\n\u8bb2\u4e00\u4e0b\u5982\u4f55\u9884\u5904\u7406\uff1a\u5f00\u4e00\u4e2a\u6570\u7ec4a\u3010i,j\u3011\u5f00\u59cb\u521d\u59cb\u5316\u4e3a0\uff0ca\u3010i,j\u3011=k\u8868\u793a\u7b2ci\u8f86\u5217\u8f66\uff0c\u5728\u65f6\u95f4\u70b9j\u7684\u65f6\u5019\u5230\u8fbe\u4e86k\uff0c\u76f8\u5f53\u4e8ea\u3010i,j\u3011\u4e2d\u8bb0\u5f55\u4e86\u6bcf\u8f86\u5217\u8f66\u7684\u65f6\u523b\u8868\u3002\u8fd9\u6837\u5728\u8fdb\u884cDP\u7684\u65f6\u5019\u5c31\u76f8\u5f53\u65b9\u4fbf\uff01\u5bf9\u4e8e\u672c\u9898\u6211\u662f\u628a\u4ece\u4e24\u8fb9\u5f00\u7684\u5217\u8f66\u5206\u5f00\u7528\u4e24\u4e2a\u6570\u7ec4a1\u548ca2\u5206\u522b\u5b58\u7684\uff0c\u5408\u8d77\u6765\u4e5f\u6ca1\u4ec0\u4e48\u5f71\u54cd\u3002\n\n\u5f53\u9884\u5904\u7406\u53cd\u5411\u5217\u8f66\u7684\u65f6\u523b\u8868\u7684\u65f6\u5019\uff0c\u7528\u524d\u7f00\u548c\u5199\u8d77\u6765\u6bd4\u8f83\u65b9\u4fbf\u3002\n\n\n\u5728\u8bb2\u4e00\u4e0b\u5982\u4f55DP\u4ee5\u53ca\u72b6\u6001\u8f6c\u79fb\u7684\u95ee\u9898\uff1a\n\n\u6211\u4eec\u5f00\u4e00\u4e2a\u6570\u7ec4f\u3010i,j\u3011\u4ee5\u7b2c\u4e00\u7ef4\uff08\u65f6\u95f4\uff09\u4e3a\u4e3b\u8f74\uff0c\u7b2c\u4e8c\u7ef4\uff08\u8f66\u7ad9\u6807\u53f7\uff09\u4e3a\u526f\u8f74\u8fdb\u884c\u8f6c\u79fb\n\n```cpp\nfor i:=0 to t do//\u679a\u4e3e\u65f6\u95f4\nfor j:=1 to n do//\u679a\u4e3e\u8f66\u7ad9\u6807\u53f7\nbegin\nfor k:=1 to m1+m2 do//\u65b9\u68481\uff1a\u627e\u4e00\u8f86\u8f66\u4e0a\u53bb\n```\nif \u5728\u65f6\u95f4i\u7684\u65f6\u5019\u7b2ck\u8f86\u7684\u5217\u8f66\u7ecf\u8fc7\u4e86j\u8f66\u7ad9 then\nfor h:=i+1 to t do//\u4e0a\u8f66\uff0c\u679a\u4e3e\u4e0b\u8f66\u7ad9\u70b9\n\nif \u7b2ck\u8f86\u5217\u8f66\u5728\u65f6\u95f4\u70b9h\u7684\u65f6\u5019\u5230\u4e86\u53e6\u4e00\u4e2a\u8f66\u7ad9 then//\u66f4\u65b0\u6b64\u8f66\u65f6\u523b\u8868\u4e0a\u5269\u4e0b\u7684\u8f66\u7ad9\u3002\n\nf[h,\u4e0b\u4e00\u7ad9]:=min(f[h,\u4e0b\u4e00\u7ad9],f[i,j]);\n\nf[i+1,j]:=min(f[i+1,j],f[i,j]+1)//\u65b9\u68482\uff1a\u5446\u5728\u8fd9\u91cc\u7b49\u3002\n\nend\uff1b\n\n\u65e0\u540e\u6548\u6027\u8bf4\u660e\uff1a\u6211\u4eec\u4ee5\u65f6\u95f4\u4e3a\u4e3b\u8f74\u5728\u5916\u5c42\u5faa\u73af\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u53ef\u80fd\u8ba9\u65f6\u95f4\u5012\u6d41\uff0c\u4e5f\u5c31\u662f\u5f53\u786e\u5b9a\u4e86i\u65f6\u523b\u7684f\u3010i\uff0c1..n\u3011\u4e4b\u540e\u6211\u4eec\u5c31\u8fdb\u5165\u4e86i+1\u65f6\u523b\uff0c\u8fd9\u4e5f\u662f\u6700\u4f18\u5b50\u7ed3\u6784\u7684\u4f53\u73b0\u3002\n\n\nAC\u4ee3\u7801\uff1a\n\n```delphi\n\nprogram exam1;\nvar tt:array[1..50]of longint;//\u8bb0\u5f55\u6bcf\u4e24\u7ad9\u4e4b\u95f4\u7684\u65f6\u95f4       \u6bd4\u5982tt[3] \u8bb0\u5f55\u4e862-3\u7684\u65f6\u95f4\nvar f:array[0..200,0..50]of longint;//DP\u6570\u7ec4\nvar a1,a2:array[1..50,0..200]of longint;//\u5217\u8f66\u65f6\u523b\u8868\nvar d,e:array[1..50]of longint;//\u53d1\u8f66\u65f6\u95f4\nttt:array[0..50]of longint;//\u524d\u7f00\u548c\nvar h,num,c,i,j,m1,m2,n,t,k,ans:longint;\nfunction min(q1,q2:longint):longint;\nbegin\nif q1<q2 then exit(q1)\nelse exit(q2);\nend;\n\nbegin\nread(c);//\u8bfb\u5165\u7b2c\u4e00\u7ec4\u7684N\u7684\u5080\u5121\n\nwhile c<>0 do\nbegin\ninc(num);//\u7ec4\u6570+1\nn:=c;//\u5c06\u5080\u5121\u503c\u8fd8\u7ed9N\nread(t);\n\nfillchar(tt,sizeof(tt),0);\nfillchar(ttt,sizeof(ttt),0);\nfillchar(d,sizeof(d),0);\nfillchar(e,sizeof(e),0);\nfillchar(a1,sizeof(a1),0);\nfillchar(a2,sizeof(a2),0);//\u5fc5\u987b\u8981\u6709\u7684\u521d\u59cb\u5316\n\nfor i:=2 to n do\nread(tt[i]);\nread(m1);\nfor i:=1 to m1 do\nread(d[i]);\nread(m2);\nfor i:=1 to m2 do\nread(e[i]);//\u672c\u7ec4\u6570\u636e\u8bfb\u5165\u5b8c\u6bd5\n\nread(c);//\u8bfb\u5165\u4e0b\u4e00\u7ec4\u6570\u636e\u7684N\u6216\u80050\n\nfor i:=2 to n do\nttt[i]:=ttt[i-1]+tt[i];//\u524d\u7f00\u548c       ttt[i]  \u8868\u793a\u4ece1\u5230i\u7684\u65f6\u95f4\n\nfor i:=1 to m1 do//\u8ba1\u7b97\u6b63\u5411\u5217\u8f66\u7684\u65f6\u523b\u8868\nif d[i]<=t then//\u5982\u679c\u53d1\u8f66\u65f6\u95f4\u5408\u6cd5\nbegin\na1[i,d[i]]:=1;//\u53d1\u8f66\u65f6\u523b \u6b64\u8f66\u5728\u53d1\u8f66\u7ad9\nfor j:=2 to n do//\u679a\u4e3e\u5230j\u53f7\u8f66\u7ad9\u7684\u65f6\u95f4\nif d[i]+ttt[j]<=t then//\u5982\u679c\u65f6\u95f4\u5408\u6cd5\na1[i,d[i]+ttt[j]]:=j;//\u8bb0\u5f55\u7b2ci\u5217\u8f66  \u5728\u65f6\u95f4d[i]+ttt[j]\u5230\u8fbe\u4e86j\u8f66\u7ad9\nend;\n\nfor i:=1 to m2 do//\u8ba1\u7b97\u53cd\u5411\u5217\u8f66\u7684\u65f6\u523b\u8868\nif e[i]<=t then//\u5982\u679c\u53d1\u8f66\u65f6\u95f4\u5408\u6cd5\nbegin\na2[i,e[i]]:=n;//\u53d1\u8f66\u65f6\u523b \u6b64\u8f66\u5728\u7ec8\u70b9\u7ad9\nfor j:=n-1 downto 1 do//\u679a\u4e3e\u5230j\u53f7\u8f66\u7ad9\u7684\u4e16\u95f4\u5b89\nif e[i]+ttt[n]-ttt[j]<=t then//\u5982\u679c\u65f6\u95f4\u5408\u6cd5\na2[i,e[i]+ttt[n]-ttt[j]]:=j;//\u8bb0\u5f55\u7b2ci\u5217\u8f66 \u5728\u65f6\u95f4e[i]+ttt[n]-ttt[j]\u5230\u4e86j\u8f66\u7ad9       ttt[n]-ttt[j]\u662f\u4ecen\u5230j\u7684\u65f6\u95f4\nend;\n\n\nfor i:=0 to t do for j:=1 to n do f[i,j]:=100000000;//\u521d\u59cb\u5316\nf[0,1]:=0;//\u521d\u59cb\u5316\n\nfor i:=0 to t do//\u65f6\u95f4\u4e3b\u8f74\nfor j:=1 to n do  //now is here       \u8f66\u7ad9\u526f\u8f74\nbegin\nfor k:=1 to m1 do //1che      \u679a\u4e3e\u6b63\u5411\u5217\u8f66\u7f16\u53f7k\nif a1[k,i]=j then       //1che is here    \u5982\u679c\u6b64\u65f6\uff08\u65f6\u523bi\uff09\u6b64\u8f66\uff08\u7b2ck\u4e2a\uff09\u5728\u8fd9\u91cc\uff08j\u8f66\u7ad9\uff09\nfor h:=i+1 to t do     //search next        \u4e0a\u8f66 \u8f6c\u79fb\u4ed6\u6240\u80fd\u5230\u7684\u5269\u4f59\u7684\u8f66\u7ad9\nif a1[k,h]<>0 then    //next is in station    \u5982\u679c\u7ecf\u8fc7\u4e86\u4e00\u4e2a\u8f66\u7ad9\nf[h,a1[k,h]]:=min(f[h,a1[k,h]],f[i,j]);      \u8f6c\u79fb\u4e4b\n\nfor k:=1 to m2 do //2che    \u679a\u4e3e\u53cd\u5411\u5217\u8f66\u7f16\u53f7k\nif a2[k,i]=j then     //\u5982\u679c\u6b64\u65f6\uff08\u65f6\u523bi\uff09\u6b64\u8f66\uff08\u7f16\u53f7k\uff09\u5728\u8fd9\u91cc\uff08j\u8f66\u7ad9\uff09\nfor h:=i+1 to t do    //\u8f6c\u79fb\u65f6\u523b\u8868\u4e0a\u5269\u4e0b\u7684\u8f66\u7ad9\nif a2[k,h]<>0 then   //\u5728h\u65f6\u523b\u7ecf\u8fc7\u4e86\u4e00\u4e2a\u8f66\u7ad9\nf[h,a2[k,h]]:=min(f[h,a2[k,h]],f[i,j]);//\u8f6c\u79fb\u4e4b\n\nf[i+1,j]:=min(f[i+1,j],f[i,j]+1);//\u9664\u4e86\u5750\u8f66\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u8fd9\u91cc\u7b491\u79d2\u949f\nend;\n\n\nans:=100000000;//\u5bfb\u627e\u7b54\u6848\nfor i:=0 to t do   //\u6211\u4eec\u53ef\u80fd\u57280..t\u4e2d\u7684\u591a\u4e2a\u65f6\u523b\u5230\u8fben\u8f66\u7ad9 \u6b64\u65f6f[i,n]\u4e2d\u8bb0\u5f55\u4e86\u8def\u4e0a\u6240\u9700\u8981\u7684\u7b49\u5f85\u65f6\u95f4\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u989d\u5916\u7b49t-i\u7684\u65f6\u95f4\u63a5\u4e0a\u5934\nif f[i,n]<>100000000 then  //\u5982\u679c\u65f6\u523bi\u5230\u8fbe\u8fc7n\nans:=min(ans,f[i,n]+t-i);//\u66f4\u65b0\u7b54\u6848\nwrite('Case Number ',num,': ');//\u8f93\u51fa\u9996\u90e8  \u6ce8\u610f\uff1a\u5192\u53f7\u540e\u9762\u6709\u4e2a\u7a7a\u683c\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\nif ans=100000000 then writeln('impossible')//\u5982\u679c\u7b54\u6848\u6ca1\u88ab\u66f4\u65b0\u8fc7 \u5219\u8868\u793a\u6211\u4eec\u65e0\u6cd5\u5728\u89c4\u5b9a\u65f6\u95f4\u5185\u5230\u8fben\nelse writeln(ans);\nend;\nend.\n\n```\n\n\u5e0c\u671b\u5728\u9898\u76ee\u4e2d\u63d0\u9192\u4e00\u4e0b\u90a3\u4e2a\u5192\u53f7\u540e\u9762\u5341\u5206\u9690\u853d\u7684\u7a7a\u683c\uff01\n",
        "postTime": 1442665818,
        "uid": 2266,
        "name": "\u51ef\u7279\u7433",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2583 \u3010\u5730\u94c1\u95f4\u8c0d\u3011"
    }
]