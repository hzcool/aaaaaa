[
    {
        "content": "### \u9898\u610f\n\n\u7565\u3002\n\n### \u524d\u8a00\n\n\u4f5c\u4e3a\u9a8c\u9898\u4eba\uff0c\u88ab\u51fa\u9898\u4eba\u7529\u4e86\u9505\u6765\u5199\u6807\u7a0b\uff0c\u5728\u5199\u6807\u7a0b\u7684\u65f6\u5019\u53d1\u73b0\u8fd9\u9898\u662f\u771f\u7684\u96be\u5199\u3002\n\n\u6240\u4ee5\u5728\u8bb2\u8fd9\u4e2a\u9898\u7684\u65f6\u5019\u4e0d\u4ec5\u6709\u51fa\u9898\u4eba\u7684\u4e00\u4e9b\u65b9\u6cd5\uff0c\u4e5f\u6709\u81ea\u5df1\u7684\u4f53\u4f1a\u3002\n\n\u67d0\u4e9b\u56fe\u662f\u84af\u7684\u795e\u4ed9 JV \u7684\u3002\n\n### \u9898\u89e3\n\n\u9996\u5148\u5c06 $2n\\times 2m$ \u7684\u65b9\u683c\u5212\u5206\u6210 $n\\times m$ \u4e2a $2\\times 2$ \u7684\u5c0f\u65b9\u683c\uff0c\u6ce8\u610f\u5230\u7531\u4e8e\u9650\u5236\u6761\u4ef6\uff0c\u6bcf\u4e2a $2\\times 2$ \u65b9\u683c\u91cc\u53ea\u80fd\u6446\u4e0a\u4e00\u4e2a\u653b\u57ce\u9524\uff0c\u7136\u540e\u6574\u4e2a\u56fe\u7684\u6446\u6cd5\u5fc5\u987b\u50cf\u8fd9\u6837\uff1a\n\n![](https://i.loli.net/2020/08/11/o8OqQvDksiWaXPz.jpg)\n\n\u63a5\u4e0b\u6765\u89c4\u5b9a\u4e00\u4e2a $2\\times 2$ \u7684\u65b9\u683c\u7684\u4e0a\u4e0b\u5de6\u53f3\uff0c\u5c31\u662f\u8fd9\u4e2a\u65b9\u683c\u5185\u653b\u57ce\u9524\u7684\u76f8\u5bf9\u4f4d\u7f6e\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u7b97\u8fd9\u4e2a\u6446\u6cd5\u7684\u65b9\u6848\u6570\u3002\u8003\u8651\u5212\u4e24\u6761\u5206\u754c\u7ebf\uff0c\u4e00\u6761\u5206\u5272\u4e0a\u53f3\u548c\u4e0b\u5de6\uff0c\u53e6\u4e00\u6761\u662f\u4e0a\u5de6\u548c\u4e0b\u53f3\uff0c\u5982\u4e0b\u56fe\uff1a\n\n![](https://i.loli.net/2020/08/11/O1MYHgXEwQ4CtlN.jpg)\n\n\u76f8\u5f53\u4e8e\u6211\u4eec\u53ea\u9700\u8981\u7b97\u51fa\u4e24\u6761\u5206\u754c\u7ebf\u7684\u5212\u6cd5\uff0c\u5c06\u8fd9\u4e24\u6761\u5206\u754c\u7ebf\u7684\u65b9\u6848\u6570\u4e58\u8d77\u6765\u5c31\u53ef\u4ee5\u5f97\u5230\u603b\u6570\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5212\u5206\u4e0a\u53f3\u548c\u4e0b\u5de6\u7684\u65b9\u6848\u6570\uff0c\u53e6\u4e00\u6761\u5206\u754c\u7ebf\u5982\u6cd5\u70ae\u5236\u4e00\u904d\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8fd9\u4e2a\u5206\u754c\u7ebf\u5176\u5b9e\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u4ece\u5de6\u4e0a\u89d2\u8d70\u5230\u53f3\u4e0b\u89d2\u7684\u65b9\u6848\u6570\uff0c\u6ce8\u610f\u5230\u6709\u4e00\u4e9b\u70b9\u56e0\u4e3a\u94a6\u5b9a\u653e\u7684\u4f4d\u7f6e\u7684\u9650\u5236\u662f\u4e0d\u80fd\u8d70\u7684\u3002\u5de6\u548c\u4e0b\u6240\u5728 $2\\times 2$ \u65b9\u683c\u7684\u5de6\u4e0b\u89d2\uff0c\u53f3\u548c\u4e0a\u6240\u5728 $2\\times 2$ \u65b9\u683c\u7684\u53f3\u4e0a\u89d2\u90fd\u662f\u4e0d\u80fd\u8d70\u5230\u7684\u3002\n\n\u63a5\u4e0b\u6765\u6ce8\u610f\u5230 $m$ \u5f88\u5927\uff0c\u56e0\u6b64\u8981\u4e00\u5217\u4e00\u5217\u6765\u8003\u8651\u3002\u6211\u4eec\u9996\u5148\u5c06\u53ef\u4ee5\u8d70\u7684\u70b9\u5212\u5206\u6210\u4e00\u4e9b\u77e9\u5f62\uff0c\u7136\u540e\u8003\u8651\u4f7f\u7528\u751f\u6210\u51fd\u6570\u3002\n\n\u5728\u77e9\u5f62\u7684\u5185\u90e8\uff0c\u4e0b\u4e00\u5217\u65b9\u6848\u6570\u6240\u5bf9\u5e94\u7684\u751f\u6210\u51fd\u6570\u5c31\u662f\u8fd9\u4e00\u884c\u7684\u751f\u6210\u51fd\u6570\u4e58\u4e0a $\\frac{1}{1-x}$\u3002\u800c\u5728\u77e9\u5f62\u7684\u8fb9\u754c\u5904\u5c31\u4e0d\u4e00\u5b9a\u4e86\u3002\n\n![](https://i.loli.net/2020/08/11/EBhlTOws4npCV2v.jpg)\n\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8e\u5de6\u8fb9\u7684\u77e9\u5f62\u7684\u53f3\u8fb9\u754c\u8f6c\u79fb\u5230\u53f3\u8fb9\u77e9\u5f62\u7684\u5de6\u8fb9\u754c\u7684\u65f6\u5019\uff0c\u5148\u5c06 $h_1\\sim h_2-1$ \u6b21\u9879\u7684\u7cfb\u6570\u6e05\u96f6\uff0c\u7136\u540e\u505a\u4e00\u904d\u524d\u7f00\u548c\uff0c\u518d\u5c06 $l_1+1\\sim l_2$ \u6b21\u9879\u7684\u7cfb\u6570\u5168\u90e8\u7528 $l_1$ \u6b21\u9879\u7684\u7cfb\u6570\u586b\u5145\u5c31\u597d\u4e86\u3002\n\n\u8fd9\u6837\uff0c\u7531\u4e8e\u77e9\u5f62\u6700\u591a\u6709 $n$ \u4e2a\uff0c\u7136\u540e\u6bcf\u4e00\u6b21\u64cd\u4f5c\u662f $O(n)$ \u7684\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$\u3002\n\n\u5927\u4f53\u64cd\u4f5c\u5c31\u8bb2\u5230\u8fd9\u91cc\uff0c\u63a5\u4e0b\u6765\u662f\u4ee3\u7801\u7ec6\u8282\u3002\n\n\u9996\u5148\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9\u5c31\u662f\u5230\u5e95\u54ea\u4e9b\u70b9\u662f\u4e0d\u80fd\u8d70\u7684\u3002\u8fd8\u662f\u4ee5\u5de6\u4e0b\u548c\u53f3\u4e0a\u7684\u5206\u754c\u7ebf\u4e3a\u4f8b\u5b50\uff0c\u6ce8\u610f\u5230\u5de6\u4e0b\u7684\u9650\u5236\u548c\u53f3\u4e0a\u7684\u9650\u5236\u5176\u5b9e\u662f\u4e00\u4e2a\u51f8\u5305\uff0c\u6240\u4ee5\u53ef\u4ee5\u6392\u4e2a\u5e8f\u7136\u540e\u5355\u8c03\u6808\u7ef4\u62a4\u4e00\u4e0b\u3002\n\n\u63a5\u4e0b\u6765\u6700\u9ebb\u70e6\u7684\u662f\u77e9\u5f62\u5212\u5206\uff0c\u8fd9\u91cc\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\u7684\u601d\u60f3\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u77e9\u5f62\uff0c\u6211\u4eec\u8bb0\u5f55\u4ed6\u7684\u5de6\u53f3\u7aef\u70b9\u548c\u4e0a\u4e0b\u8fb9\u754c\u3002\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u51f8\u5305\u4e0a\u7684\u70b9\u90fd\u4f1a\u9020\u6210\u77e9\u5f62\u7684\u8fb9\u754c\u66f4\u65b0\u3002\n\n\u7136\u540e\u5206 $3$ \u79cd\u60c5\u51b5\u4e0b\u4e00\u4e2a\u5de6\u7aef\u70b9\u548c\u4e0b\u4e00\u4e2a\u53f3\u7aef\u70b9\u7684\u4f4d\u7f6e\u5173\u7cfb\u3002\u8fd9\u91cc\u6709\u4e2a\u5c0f\u7ec6\u8282\uff0c\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u4e0a\u8fb9\u754c\u7684\u6539\u53d8\u6765\u8bf4\u4f4d\u7f6e\u7684\u66f4\u65b0\u5e94\u8be5\u662f\u5bf9\u5e94\u7684 $y$ \u5750\u6807\u51cf $1$\u3002\n\n\u6700\u540e\u5c31\u662f\u7ef4\u62a4\u8fd9\u4e2a\u591a\u9879\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u8bb0\u5f55\u5b9e\u9645\u7684\u591a\u9879\u5f0f\u800c\u662f\u8bb0\u5f55\u8fd9\u4e2a\u591a\u9879\u5f0f\u4e58\u4e0a $(1-x)^t$\uff0c\u7136\u540e\u5269\u4e0b\u7684\u5c31\u968f\u4fbf\u505a\u5c31\u597d\u4e86\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef unsigned int ul;\ntypedef long long int li;\ntypedef unsigned long long int ull;\nconst ll MAXN=2e5+51;\nstruct Point{\n\tli x1,y1,x2,y2;\n\tll dir;\n};\nstruct Point2{\n\tli x,y;\n\tinline bool operator <(const Point2 &rhs)const\n\t{\n\t\treturn x<rhs.x;\n\t}\n\tinline bool operator >(const Point2 &rhs)const\n\t{\n\t\treturn x>rhs.x;\n\t}\n};\nstruct Event{\n\tli y,lx,rx,lp,rp;\n};\nstruct Rect{\n\tli u,d,ly,ry;\n};\ninline ll getR(ll MOD)\n{\n\tul v=MOD;\n\treturn v*=2-MOD*v,v*=2-MOD*v,v*=2-MOD*v,v*=2-MOD*v,v;\n}\nPoint pt[MAXN];\nPoint2 pt2l[MAXN],pt2r[MAXN],pt3l[MAXN],pt3r[MAXN];\nEvent ev[MAXN];\nRect rect[MAXN];\nll n,kk,MOD,R,R2;\nli m,x,y,xt,yt;\ninline ul reduce(ull x)\n{\n\tull y=ul(x>>32)-ul((ull(ul(x)*R)*MOD)>>32);\n\treturn y+(MOD&-((ll)y<0));\n}\nstruct ModInt{\n\tul v;\n\tModInt()\n\t{\n\t\tv=0;\n\t}\n\tModInt(ul v)\n\t{\n\t\tthis->v=reduce(ull(v)*R2);\n\t}\n\tModInt(const ModInt &rhs)\n\t{\n\t\tthis->v=rhs.v;\n\t}\n\tinline ModInt operator -()\n\t{\n\t\tModInt res;\n\t\tres.v=(MOD&-(v!=0))-v;\n\t\treturn res;\n\t}\n\tinline ModInt &operator +=(const ModInt &rhs)\n\t{\n\t\treturn v+=rhs.v-MOD,v+=MOD&-(ll(v)<0),*this;\n\t}\n\tinline ModInt &operator -=(const ModInt &rhs)\n\t{\n\t\treturn v-=rhs.v,v+=MOD&-(ll(v)<0),*this;\n\t}\n\tinline ModInt &operator *=(const ModInt &rhs)\n\t{\n\t\treturn v=reduce(ull(v)*rhs.v),*this;\n\t}\n\tinline ll get()\n\t{\n\t\treturn reduce(v);\n\t}\n};\ninline ModInt operator +(const ModInt &x,const ModInt &y)\n{\n\treturn ModInt(x)+=y;\n}\ninline ModInt operator -(const ModInt &x,const ModInt &y)\n{\n\treturn ModInt(x)-=y;\n}\ninline ModInt operator *(const ModInt &x,const ModInt &y)\n{\n\treturn ModInt(x)*=y;\n}\nModInt r1,r2;\nModInt f[MAXN],inv[MAXN];\ninline li read()\n{\n    register li num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\ninline ModInt get(ModInt *f,ll x,li kk)\n{\n\tModInt res(0);\n\tstatic ModInt p[MAXN];\n\tfor(register int i=0;i<=x;i++)\n\t{\n\t\tp[i]=0;\n\t}\n\tp[0]=1,p[1]=(kk%=MOD);\n\tfor(register int i=2;i<=x;i++)\n\t{\n\t\tp[i]=p[i-1]*(ModInt)(kk-1+i)*inv[i];\n\t}\n\tfor(register int i=0;i<=x;i++)\n\t{\n\t\tres+=f[i]*p[x-i];\n\t}\n\treturn res;\n}\ninline void change(ModInt *f,ll x,li kk,ModInt val)\n{\n\tModInt v=val-get(f,x,kk);\n\tll sz=min((li)n,kk);\n\tstatic ModInt p[MAXN];\n\tfor(register int i=0;i<=n;i++)\n\t{\n\t\tp[i]=0;\n\t}\n\tp[0]=1,kk%=MOD;\n\tfor(register int i=1;i<=sz;i++)\n\t{\n\t\tp[i]=p[i-1]*ModInt(kk-i+1+MOD)*inv[i];\n\t}\n\tfor(register int i=0;i<=sz;i++)\n\t{\n\t\tp[i]=i&1?p[i]:p[i];\n\t}\n\tfor(register int i=0;i<=n;i++)\n\t{\n\t\tif(i+x<=n)\n\t\t{\n\t\t\tf[i+x]=f[i+x]+v*p[i];\n\t\t\tcontinue;\n\t\t}\n\t\tbreak;\n\t}\n}\ninline void clr(ModInt *f,ll x,li kk)\n{\n\tstatic ModInt p[MAXN],q[MAXN],r[MAXN];\n\tll sz=min((li)n,kk);\n\tfor(register int i=0;i<=n;i++)\n\t{\n\t\tp[i]=q[i]=r[i]=0;\n\t}\n\tfor(register int i=0;i<=sz;i++)\n\t{\n\t\tp[i]=get(f,i,kk);\n\t}\n\tq[0]=1,kk%=MOD;\n\tfor(register int i=1;i<=sz;i++)\n\t{\n\t\tq[i]=q[i-1]*ModInt(kk-i+1)*inv[i];\n\t}\n\tfor(register int i=0;i<=sz;i++)\n\t{\n\t\tq[i]=i&1?-q[i]:q[i];\n\t}\n\tfor(register int i=0;i<=x;i++)\n\t{\n\t\tfor(register int j=0;j<=sz;j++)\n\t\t{\n\t\t\tif(i+j<=n)\n\t\t\t{\n\t\t\t\tr[i+j]+=p[i]*q[j];\n                continue;\n\t\t\t}\n            break;\n\t\t}\n\t}\n\tfor(register int i=0;i<=n;i++)\n\t{\n\t\tf[i]=f[i]-r[i];\n\t}\n} \ninline void solve()\n{\n\tll lt=0,rt=0,lt3=0,rt3=0,lct=1,rct=1,rtx=1,u=0,d=0;\n\tModInt val=0;\n\tfor(register int i=1;i<=kk;i++)\n\t{\n\t\tif(pt[i].dir==1||pt[i].dir==2)\n\t\t{\n\t\t\tpt2l[++lt]=(Point2){(pt[i].x2+1)/2,(pt[i].y2+1)/2-1};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpt2r[++rt]=(Point2){(pt[i].x2+1)/2-1,(pt[i].y2+1)/2};\n\t\t}\n\t}\n\tsort(pt2l+1,pt2l+lt+1),sort(pt2r+1,pt2r+rt+1,greater<Point2>());\n\tpt3l[0].x=0,pt3l[0].y=-1,pt3r[0].x=0,pt3r[0].y=0x3f3f3f3f3f3f3f3f;\n\tfor(register int i=1;i<=lt;i++)\n\t{\n\t\tif(pt2l[i].y>pt3l[lt3].y)\n\t\t{\n\t\t\tpt3l[++lt3]=pt2l[i];\n\t\t}\n\t}\n\tfor(register int i=1;i<=rt;i++)\n\t{\n\t\tif(pt2r[i].y<pt3r[rt3].y)\n\t\t{\n\t\t\tpt3r[++rt3]=pt2r[i];\n\t\t}\n\t}\n\tfor(register int i=1;i<=rt3;i++)\n\t{\n\t\tpt3r[i].y--;\n\t}\n\treverse(pt3r+1,pt3r+rt3+1),u=0,d=lt3?pt3l[1].x-1:n;\n\tfor(register int i=0;i<=d;i++)\n\t{\n\t\tf[i]=ModInt(1);\n\t}\n\trect[1].u=u,rect[1].d=d,rect[1].ly=0;\n\twhile(1)\n\t{\n\t\tif(lct>lt3||rct>rt3)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif(pt3l[lct].y<pt3r[rct].y)\n\t\t{\n\t\t\trect[rtx].ry=pt3l[lct].y,d=lct<lt3?pt3l[lct+1].x-1:n;\n\t\t\trect[++rtx].u=u,rect[rtx].d=d,rect[rtx].ly=pt3l[lct++].y+1;\n\t\t}\n\t\tif(pt3l[lct].y>pt3r[rct].y)\n\t\t{\n\t\t\trect[rtx].ry=pt3r[rct].y,u=pt3r[rct].x+1;\n\t\t\trect[++rtx].u=u,rect[rtx].d=d,rect[rtx].ly=pt3r[rct++].y+1;\n\t\t}\n\t\tif(pt3l[lct].y==pt3r[rct].y)\n\t\t{\n\t\t\trect[rtx].ry=pt3l[lct].y,u=pt3r[rct].x+1;\n\t\t\td=lct<lt3?pt3l[lct+1].x-1:n;\n\t\t\trect[++rtx].u=u,rect[rtx].d=d,rect[rtx].ly=pt3l[lct++].y+1,rct++;\n\t\t}\n\t}\n\tfor(register int i=lct;i<=lt3;i++)\n\t{\n\t\trect[rtx].ry=pt3l[i].y,rect[++rtx].u=u;\n\t\trect[rtx].d=i<lt3?pt3l[i+1].x-1:n,rect[rtx].ly=pt3l[i].y+1;\n\t}\n\tfor(register int i=rct;i<=rt3;i++)\n\t{\n\t\trect[rtx].ry=pt3r[i].y,rect[++rtx].u=pt3r[i].x+1,rect[rtx].d=d;\n\t\trect[rtx].ly=pt3r[i].y+1;\n\t}\n\trect[rtx].ry=m;\n\tfor(register int i=2;i<=rtx;i++)\n\t{\n\t\tclr(f,rect[i].u-1,rect[i-1].ry);\n        val=get(f,rect[i-1].d,rect[i].ly);\n\t\tfor(register int j=rect[i-1].d+1;j<=rect[i].d;j++)\n\t\t{\n\t\t\tchange(f,j,rect[i].ly,val);\n\t\t}\n\t}\n}\nint main()\n{\n\tn=read(),m=read(),kk=read(),MOD=read();\n\tR=getR(MOD),R2=-ull(MOD)%MOD;\n\tfor(register int i=1;i<=kk;i++)\n\t{\n\t\tx=read(),y=read(),xt=read(),yt=read();\n\t\tif(x==xt&&y>yt)\n\t\t{\n\t\t\tswap(y,yt);\n\t\t}\n\t\tif(y==yt&&x>xt)\n\t\t{\n\t\t\tswap(x,xt);\n\t\t}\n\t\tpt[i]=(Point){x,y,xt,yt};\n\t\tif(y==yt&&x+1==xt)\n\t\t{\n\t\t\tpt[i].dir=1+2*((yt&1)^1);\n\t\t}\n\t\tif(x==xt&&y+1==yt)\n\t\t{\n\t\t\tpt[i].dir=2+2*(xt&1);\n\t\t}\n\t}\n\tinv[1]=ModInt(1);\n\tfor(register int i=2;i<=n;i++)\n\t{\n\t\tinv[i]=-ModInt(MOD/i)*inv[MOD%i];\n\t}\n\tsolve(),r1=get(f,n,m);\n\tfor(register int i=1;i<=kk;i++)\n\t{\n\t\tpt[i].y1=2*m-pt[i].y1+1,pt[i].y2=2*m-pt[i].y2+1;\n\t\tif(pt[i].dir&1)\n\t\t{\n\t\t\tpt[i].dir^=2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tswap(pt[i].y1,pt[i].y2);\n\t\t} \n\t}\n\tsolve(),r2=get(f,n,m),printf(\"%d\\n\",(r1*r2).get());\n}\n```",
        "postTime": 1596882536,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6750 \u3010\u300eMdOI R3\u300fPekka Bridge Spam\u3011"
    },
    {
        "content": "\u653e\u4e0a\u5b98\u65b9\u9898\u89e3\uff0c\u81ea\u8ba4\u4e3a\u8fd9\u9898\u8fd8\u662f\u4e0d\u9519\u7684\uff0c\u4e3b\u8981\u662f\u5bf9\u4e8e\u7ed3\u6784\u7684\u89c2\u5bdf\u800c\u4e0d\u662f\u63a8\u5f0f\u5b50\u3002\n\n**\u6027\u8d28 1**\n\n\u5c06\u8fd9\u4e2a\u56fe\u5206\u6210 $nm$ \u4e2a $2 \\times 2$ \u4e2a\u6b63\u65b9\u5f62\uff0c\u90a3\u4e48\u6bcf\u4e2a\u6b63\u65b9\u5f62\u4e2d\u6070\u597d\u6709\u4e00\u4e2a $1 \\times 2$\u3002\n\n\u8bc1\u660e\uff1a\u79f0 $S$ \u4e3a\u6240\u6709\u88ab $1 \\times 2$ \u8986\u76d6\u7684\u683c\u5b50\u7684\u96c6\u5408\uff0c\u90a3\u4e48 $|S|=2mn$\u3002\u6bcf\u4e2a\u8fd9\u6837\u7684 $2 \\times 2$ \u4e2d\u81f3\u591a\u6709\u4e24\u4e2a\u683c\u5b50\u5c5e\u4e8e $S$\u3002\n\n\u7136\u800c\u6240\u6709 $4mn$ \u4e2a\u683c\u5b50\u4e2d\uff0c\u6070\u597d\u6709\u4e00\u534a\u7684\u683c\u5b50\u5c5e\u4e8e $S$\u3002\u6240\u4ee5\u6bcf\u4e2a $2 \\times 2$ \u4e2d\u6070\u597d $2$ \u4e2a\uff0c\u6784\u6210\u4e00\u4e2a $1 \\times 2$\u3002\n\n\u4ece\u5de6\u4e0a\u89d2\u7684\u683c\u5b50\u5f00\u59cb\u4f9d\u6b21\u8003\u8651\uff0c\u53ef\u4ee5\u8bc1\u660e\u8fd9\u4e9b\u5c31\u662f\u6240\u6709\u7684\u653b\u57ce\u9524\u3002\n\n-----\n\n\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\uff0c\u79f0\u4e00\u4e2a\u4e0a\u8ff0\u7684\u5206\u5272\u4e2d\u7684 $2 \\times 2$ \u7684\u65b9\u683c\u4e3a **\u4e0a\uff0c\u4e0b\uff0c\u5de6\uff0c\u53f3** \u4e4b\u4e00\uff0c\u53d6\u51b3\u4e8e $1 \\times 2$ \u5728\u5b83\u4e2d\u7684\u4f4d\u7f6e\u3002\n\n**\u6027\u8d28 2**\n\n\u4e00\u4e2a **\u4e0a** \u7684\u65b9\u683c\u7684\u4e0a\u65b9\u7684\u65b9\u683c\u4e5f\u662f **\u4e0a** \u7684\uff0c\u53f3\u8fb9\u662f **\u4e0a** \u6216\u8005 **\u53f3**\uff0c\u5de6\u8fb9\u662f **\u4e0a** \u6216\u8005 **\u5de6**\u3002\u5176\u4ed6\u56db\u79cd\u65b9\u683c\u7c7b\u4f3c\u3002\n\n\u8bc1\u660e\u663e\u7136\u3002\n\n\u90a3\u4e48\uff0c\u7ed3\u5408\u4ee5\u4e0a\u4e24\u6761\u6027\u8d28\uff0c\u8fd9\u4e2a\u56fe\u5927\u6982\u662f\u957f\u8fd9\u6837\u7684\uff1a\n\n![1.jpg](https://i.loli.net/2020/08/11/o8OqQvDksiWaXPz.jpg)\n\n\u6ce8\u610f\u5230\uff0c\u5982\u679c\u73b0\u5728\u5c31\u8981\u63a8\u5f0f\u5b50\u7b49\u65b9\u6cd5\u8ba1\u7b97\u7684\u8bdd\uff0c\u8fd9\u4e2a\u751f\u6210\u51fd\u6570\u80af\u5b9a\u662f\u4e8c\u5143\u7684\u5f62\u5f0f\uff0c\u96be\u4ee5\u8ba1\u7b97\uff0c\u53ef\u4ee5\u7528\u77e9\u9635\u505a\u5230 $\\Theta(n^6 \\log m)$ \u7684\u590d\u6742\u5ea6\uff0c\u4e0d\u8be6\u7ec6\u8bf4\u660e\u3002\n\n\u8fd9\u4e00\u6b65\u9700\u8981\u6781\u9ad8\u7684\u6280\u5de7\uff0c\u76f8\u5f53\u4e8e\u56e0\u5f0f\u5206\u89e3\u4e86\u90a3\u4e2a\u96be\u4ee5\u523b\u753b\u7684\u4e8c\u5143\u751f\u6210\u51fd\u6570\u3002\n\n\u7528\u4e24\u6761\u8def\u5f84\u523b\u753b\u8fd9\u4e2a\u56fe\uff0c\u4e00\u6761\u4ece\u5de6\u4e0a\u5230\u53f3\u4e0b\uff0c\u4e00\u6761\u4ece\u5de6\u4e0b\u5230\u53f3\u4e0a\uff1a\n\n![1.jpg](https://i.loli.net/2020/08/11/O1MYHgXEwQ4CtlN.jpg)\n\n\u90a3\u4e48\u5206\u6210\u7684\u56db\u5757\u5c31\u6070\u597d\u662f **\u4e0a\uff0c\u4e0b\uff0c\u5de6\uff0c\u53f3**\u3002\n\n\u73b0\u5728\u8fd9\u9898\u53d8\u6210\uff1a\u5de6\u4e0a\u8d70\u5230\u53f3\u4e0b\uff0c\u6bcf\u6b21\u5411\u53f3\u6216\u8005\u5411\u4e0b\uff0c\u6709\u4e9b\u5730\u65b9\u4e0d\u80fd\u8d70\uff0c\u6c42\u65b9\u6cd5\u6570\u3002\n\n\u4e0d\u80fd\u8d70\u662f\u56e0\u4e3a\u6709 $k$ \u4e2a\u6307\u5b9a\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u8fd9\u4e9b\u4f1a\u9650\u5236\u8fd9\u6761\u8def\u5f84\u3002\n\n\u5f53\u7136\uff0c\u73b0\u5728\u8fd8\u6ca1\u6709\u660e\u786e\u8bf4\u660e\u54ea\u4e9b\u5730\u65b9\u4e0d\u80fd\u8d70\uff0c\u8fd9\u91cc\u8bf4\u6e05\u695a\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u4e3b\u8981\u8003\u8651\u5de6\u4e0a\u5230\u53f3\u4e0b\u7684\u8def\u5f84\u3002\n\n\u9650\u5236\u5c31\u662f\uff0c\u6240\u6709 **\u4e0b** \u7684\u65b9\u683c\u548c\u6240\u6709 **\u5de6** \u7684\u65b9\u683c\u548c\u5269\u4e0b\u4e24\u79cd\u65b9\u683c\u88ab\u8fd9\u6761\u8def\u5f84\u5206\u6210\u4e24\u534a\uff0c\u4e5f\u5c31\u662f\uff0c\u5982\u679c\u628a\u4e0b\u548c\u5de6\u770b\u6210 $1$\uff0c\u5176\u4f59\u770b\u6210 $2$\uff0c\u90a3\u4e48\u8fd9\u6761\u8def\u5f84\u5c06 $1$ \u4e0e $2$ \u5206\u6210\u4e24\u4e2a\u90e8\u5206\u3002\n\n\u73b0\u5728\u8ba9\u8fd9\u4e2a\u65b9\u683c\u8868\u5de6\u4e0b\u4e3a $(0,0)$\uff0c\u53f3\u4e0a\u4e3a  $(m,n)$\u3002\u5982\u679c\u4e00\u4e2a $1$ \u7c7b\u65b9\u683c\u7684\u5de6\u4e0b\u89d2\u4e3a $(p,q)$\uff0c\u90a3\u4e48\u8fd9\u6761\u8def\u5f84\u4e0d\u80fd\u7ecf\u8fc7\u4efb\u4f55 $x\\le p$ \u5e76\u4e14 $y \\le q$ \u7684\u70b9\uff0c\u5bf9\u4e8e $2$ \u7c7b\u65b9\u683c\u7c7b\u4f3c\u3002\u4e0b\u9762\u7684\u56fe\u8868\u660e\u4e86\u4e00\u79cd\u53ef\u80fd\u7684\u80fd\u8d70\u4e0e\u4e0d\u80fd\u8d70\u7684\u4f4d\u7f6e\u3002\n\n![1.jpg](https://i.loli.net/2020/08/11/FdgB7q1iZrxyXfR.jpg)\n\n\u8fd9\u91cc\uff0c\u7ea2\u8272\u7684\u70b9\u8868\u793a\u4e0d\u80fd\u8d70\u7684\u70b9\uff0c\u7eff\u8272\u7684\u7ebf\u662f\u4e00\u6761\u5408\u6cd5\u7684\u8def\u5f84\uff0c\u9ec4\u8272\u7684\u7ebf\u628a\u80fd\u8d70\u5230\u7684\u5730\u65b9\u5206\u6210\u4e86\u51e0\u4e2a\u77e9\u5f62\u3002\n\n\u77e9\u5f62\u672a\u5fc5\u8981\u6709\u957f\u4e0e\u5bbd\uff08\u53ef\u4ee5\u4e3a $0$\uff09\uff0c\u53ef\u80fd\u7528 $s\\times t$ \u7684\u70b9\u9635\uff08$ s,t \\ge 1$\uff09\u6765\u5f62\u5bb9\u66f4\u52a0\u5408\u9002\uff0c\u4e0b\u9762 **\u70b9\u9635** \u548c **\u77e9\u5f62** \u90fd\u4ee3\u8868\u8fd9\u4e2a\u610f\u601d\u3002\n\n\u8fd9\u4e9b\u77e9\u5f62\u662f\u6709\u7279\u6b8a\u8981\u6c42\u7684\uff0c\u4e0d\u96be\u53d1\u73b0\u4e0d\u80fd\u8d70\u7684\u5730\u65b9\u6784\u6210\u4e86\u4e24\u4e2a\u7b80\u5355\u591a\u8fb9\u5f62\uff0c\u8fd9\u4e24\u4e2a\u591a\u8fb9\u5f62\u7684\u8fb9\u6709\u6c34\u5e73\u7684\u548c\u7ad6\u76f4\u7684\uff0c\u7528\u7ad6\u76f4\u7684\u8fb9\u5206\u5272\u8fd9\u4e2a\u7f51\u683c\u56fe\u5f97\u5230\u4e86\u56fe\u4e2d\u6240\u793a\u7684\u77e9\u5f62\uff0c\u540e\u9762\u7684\u65b9\u6cd5\u4f1a\u8bf4\u660e\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u5206\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684\u56fe\u66f4\u597d\u7684\u7406\u89e3\u8fd9\u4e9b\u77e9\u5f62\u662f\u600e\u4e48\u523b\u753b\u51fa\u6765\u7684\u3002\n\n\u5f53\u7136\uff0c\u523b\u753b\u8fd9\u4e9b\u77e9\u5f62\u9700\u8981\u5c06\u6240\u6709\u653e\u597d\u7684\u5757\u6392\u5e8f\u5e76\u4e14\u5229\u7528\u5355\u8c03\u6808\u7ef4\u62a4\uff0c\u7ec6\u8282\u6bd4\u8f83\u591a\uff0c\u8fd9\u91cc\u4e0d\u7ec6\u8bf4\u3002\n\n\u8003\u8651\u6700\u57fa\u672c\u7684 `dp`  \u4ee5\u53ca\u4e00\u4e2a\u6ca1\u6709\u9650\u5236\u7684\u56fe\uff0c\u4ee4 $dp[i][j]$ \u4e3a\u5230 $(i,j)$ \u7684\u5408\u6cd5\u8def\u5f84\u6570\uff0c\u90a3\u4e48 $dp[i][j]=dp[i][j-1]+dp[i-1][j]$\u3002\n\n\u8fd9\u4e2a\u5f0f\u5b50\u53ef\u4ee5\u5316\u6210 $dp[i][j]=\\sum_{k=1}^jdp[i-1][k]$\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u524d\u7f00\u548c\u7684\u5f62\u5f0f\u3002\n\n\u6ce8\u610f\u5230\uff0c\u5982\u679c\u6309\u7167\u4e0a\u9762\u7684\u65b9\u5f0f\u5c06\u5408\u6cd5\u533a\u57df\u5212\u5206\u4e3a\u77e9\u5f62\uff0c\u90a3\u4e48\u6bcf\u4e2a\u957f\u4e3a $t$ \u7684\u70b9\u9635\u5c31\u76f8\u5f53\u4e8e\u505a $t-1$ \u6b21\u524d\u7f00\u548c\u3002\n\n\u6211\u4eec\u7528\u5230\u751f\u6210\u51fd\u6570\u7684\u77e5\u8bc6\uff0c\u5982\u679c\u5047\u8bbe\u7b2c $i$ \u5217\uff08\u6a2a\u5750\u6807\u4e3a $i$ \u7684\u6240\u6709\u70b9\uff09\u4ece\u4e0a\u5230\u4e0b\u7684 $dp[i][j](0 \\le j \\le n)$ \u6784\u6210\u751f\u6210\u51fd\u6570 $F_i(x)=\\sum dp[i][j]x^j$\uff0c\u5176\u4e2d $0 \\le i \\le m$\uff0c\u6211\u4eec\u6709\u9012\u63a8\u5f0f\uff1a\n\n$F_{i+1}(x)=\\frac{F_i(x)}{1-x}$\uff0c\u5982\u679c\u7b2c $i$ \u5217\u4e0e\u7b2c $i+1$ \u5217\u5728\u540c\u4e00\u4e2a\u77e9\u5f62\u5185\uff1b\n\n\u5982\u679c\u4e0d\u5728\u540c\u4e00\u4e2a\u77e9\u5f62\u5185\uff0c\u4e00\u5b9a\u5728\u76f8\u90bb\u4e24\u4e2a\u77e9\u5f62\u5185\uff0c\u8bbe\u8fd9\u4e24\u4e2a\u77e9\u5f62\u7684\u4e0a\u4e0b\u9ad8\u5ea6\u5206\u522b\u4e3a $h_1,l_1,h_2,l_2$\uff0c\u5982\u56fe\uff1a\n\n![1.jpg](https://i.loli.net/2020/08/11/EBhlTOws4npCV2v.jpg)\n\n\u90a3\u4e48\uff0c\u8fd9\u4e2a\u751f\u6210\u51fd\u6570\uff0c\u5c31\u662f\u5148\u4fdd\u7559\u539f\u6765 $F_i(x)$ \u5728 $h_2$ \u5230 $l_1$ \u6b21\u9879\u7684\u7cfb\u6570\uff0c\u7136\u540e\u5bf9\u5176\u505a\u524d\u7f00\u548c\uff0c\u4e3a $G_{i+1}(x)$\uff0c\u7136\u540e $F_{i+1}(x)$ \u7684\u7cfb\u6570\uff0c\u4e0d\u5927\u4e8e $l_1$ \u6b21\u9879\u7684\u4e0e $G_{i+1}(x)$ \u76f8\u540c\uff0c$l_1$ \u5230 $l_2$ \u6b21\u9879\u7528 $G_{i+1}(x)$ \u7684 $l_1$ \u6b21\u9879\u7cfb\u6570\u586b\u5145\u3002\n\n\u8fd9\u4e2a\u6bd4\u8f83\u96be\u4ee5\u7528\u5f0f\u5b50\u8fdb\u884c\u523b\u753b\uff0c\u6240\u4ee5\u53ea\u80fd\u901a\u8fc7\u6587\u5b57\u8fdb\u884c\u89e3\u91ca\u3002\n\n\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u6c42\u51fa\u6240\u6709\u7684 $F_i(x)$\uff0c\u56e0\u4e3a\u9700\u8981\u7684\u751a\u81f3\u53ea\u662f $F_m(x)$ \u7684\u4e00\u9879\u7cfb\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u6c42\u51fa\u6240\u6709\u77e9\u5f62\u4e24\u6761\u5bbd\u6240\u5728\u5217\u4ee3\u8868\u7684\u591a\u9879\u5f0f\uff0c\u76f8\u90bb\u591a\u9879\u5f0f\u4e4b\u95f4\u7684\u8f6c\u79fb\u53ef\u4ee5\u7528\u591a\u9879\u5f0f\u524d\u7f00\u548c\u4ee5\u53ca $NTT$ \u4f18\u5316\u5c31\u53ef\u4ee5\u5728 $n \\log n$ \u7684\u65f6\u95f4\u5185\u5b8c\u6210\uff0c\u7531\u4e8e\u77e9\u5f62\u4e00\u5171 $\\Theta(n)$ \u4e2a\u90a3\u4e48\u8fd9\u662f $n^2 \\log n$ \u7684\uff0c\u4f46\u662f\u8fd9\u4e0d\u591f\u4f18\u79c0\uff0c\u74f6\u9888\u5728\u6c42\u524d\u7f00\u548c\u4e0a\u3002\n\n\u5982\u679c\u4e0d\u7528\u505a\u524d\u7f00\u548c\uff0c\u5269\u4e0b\u7684\u64cd\u4f5c\u751a\u81f3\u662f $\\Theta(n)$ \u7684\u3002\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u7a0d\u5fae\u4e00\u822c\u4e00\u70b9\u7684\u95ee\u9898\uff1a\n\n\u7ef4\u62a4\u4e00\u4e2a\u591a\u9879\u5f0f\uff0c\u652f\u6301\u4e09\u79cd\u64cd\u4f5c\uff1a\n\n\uff081\uff09\u505a\u82e5\u5e72\u6b21\u524d\u7f00\u548c\uff1b\uff082\uff09\u67e5\u4e00\u9879\u7cfb\u6570\uff1b\uff083\uff09\u52a0\u4e0a\u4e00\u4e2a\u5355\u9879\u5f0f\u3002\n\n\uff08\u5728\u540c\u4e00\u4e2a\u77e9\u5f62\u5185\u7684\u8f6c\u79fb\u89c4\u7ea6\u4e3a\uff081\uff09\u64cd\u4f5c\uff0c\u76f8\u90bb\u77e9\u5f62\u8f6c\u79fb\u53ef\u4ee5\u67e5\u8be2 $h_1$ \u5230 $h_2$ \u6b21\u9879\u6240\u6709\u7cfb\u6570\u5e76\u4f9d\u6b21\u51cf\u6389\u5bf9\u5e94\u7684\u5355\u9879\u5f0f\uff0c\u7136\u540e\u518d\u505a\u4e00\u6b21\u524d\u7f00\u548c\uff0c\u7136\u540e\u67e5\u8be2 $l_1$ \u6b21\u9879\u7684\u7cfb\u6570\uff0c\u6700\u540e\u5728\u4f9d\u6b21\u67e5\u8be2 $l_1+1$ \u5230 $l_2$ \u6b21\u9879\u7684\u7cfb\u6570\uff0c\u628a\u4ed6\u4eec\u52a0\u4e0a\u4e0e $l_1$ \u6b21\u9879\u7684\u7cfb\u6570\u7684\u5dee\uff09\n\n\u6b64\u65f6\u89e3\u6cd5\u51e0\u4e4e\u547c\u4e4b\u6b32\u51fa\u4e86\uff1a\n\n\u7ef4\u62a4\u4e00\u4e2a\u591a\u9879\u5f0f $Q(x)$ \u4e0e\u4e00\u4e2a\u6574\u6570 $t\\ge 0$\uff0c\u6211\u4eec\u771f\u5b9e\u7684\u591a\u9879\u5f0f\u662f $\\dfrac{Q(x)}{(1-x)^t}$\uff0c\u90a3\u4e48\u5bf9\u4e8e\uff081\uff09\u64cd\u4f5c\u76f4\u63a5\u4fee\u6539 $t$\uff0c\u5bf9\u4e8e $2$ \u64cd\u4f5c\u53ef\u4ee5 $O(n)$ \u6c42\u51fa\u5377\u79ef\u7684\u4e00\u9879\uff0c\u5bf9\u4e8e $3$ \u64cd\u4f5c\u5c06\u8fd9\u4e2a\u5355\u9879\u5f0f\u4e58\u4ee5 $(1-x)^t$ \u540e\u52a0\u5230 $Q(x)$ \u4e0a\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\u3002\n\n\u4f5c\u4e3a\u4e00\u9053\u8fde `FFT` \u90fd\u4e0d\u7528\u7684\u591a\u9879\u5f0f\u9898\uff0c\u5feb\u6765\u4e3a\u826f\u5fc3\u7684\u51fa\u9898\u4eba\u70b9\u8d5e\u5427\uff01\n\nstd \u4f9b\u98df\u7528\uff0c\u611f\u8c22 Kubic,ix35,Karry5307 \u7684\u4ed8\u51fa\u3002\n\nstd \u8fdb\u884c\u9002\u5f53\u5361\u5e38\uff0c\u5176\u5b9e\u53ea\u52a0\u4e0a\u53d6\u6a21\u4f18\u5316\u5c31\u80fd AC\u3002\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 9005\n#define M 100005\n#define LIM 1000000\n#define ull unsigned long long\n#define ulll __uint128_t \n#define mod FM.reduce\n#define gc() (P1==P2 && (P2=(P1=buf)+fread(buf,1,LIM,stdin),P1==P2)?EOF:*P1++)\nchar buf[LIM],*P1,*P2; \nint n,c,p,cnt1,cnt2,ans,inv[N],st1[M],st2[M],L[M],R[M];\null m,d,ds[M],vl[N],z[N];struct Node {int x,v;ull y;}a1[M],a2[M],b1[M],b2[M];\null rd()\n{\n\tull res=0;char c=0;while(!isdigit(c)) c=gc();\n\twhile(isdigit(c)) res=(res<<1)+(res<<3)+(c&15),c=gc();return res;\n}\nstruct FastMod\n{\n\tull b,m;FastMod(ull b=2):b(b),m((ull)(((ulll)(1)<<64)/b)) {}\n    ull reduce(ull a) {ull q=(ull)(((ulll)(m)*a)>>64),r=a-q*b;return r>=b?r-b:r;}\n}FM;\nbool cmp1(Node x,Node y) {return x.y==y.y?x.x<y.x:x.y<y.y;}\nbool cmp2(Node x,Node y) {return x.y==y.y?x.x>y.x:x.y<y.y;}\nint qPt(int x)\n{\n\tint C=1;ull res=0;d=mod(d);\n\tfor(int i=0;i<=x;++i)\n\t{\n\t\tif(i) C=mod(mod((d+i-1)*C)*inv[i]);z[x-i]=mod(z[x-i]);\n\t\tres+=mod(1ull*C*z[x-i]);if(res>=9e18) res=mod(res);\n\t}return mod(res);\n}\nvoid upd(int l,int r,int v)\n{\n\tint C=1;d=mod(d);for(int i=l;i<=r;++i) vl[i]=0;\n\tfor(int i=0;i<=r;++i)\n\t{\n\t\tif(i) C=mod(mod((d+i-1)*C)*inv[i]);\n\t\tfor(int j=i<l?l:i;j<=r;++j)\n\t\t{\n\t\t\tif(z[j-i]>=p) z[j-i]=mod(z[j-i]);\n\t\t\tvl[j]+=mod(1ull*C*z[j-i]);if(vl[j]>=9e18) vl[j]=mod(vl[j]);\n\t\t}\n\t}C=1;for(int i=l;i<=r;++i) vl[i]=mod(vl[i]),vl[i]=v<vl[i]?v-vl[i]+p:v-vl[i];\n\tfor(int i=0,fl=1;i+l<=n && i<=d;++i,fl^=1)\n\t{\n\t\tif(i) C=mod(mod((d+p+1-i)*C)*inv[i]);\n\t\tfor(int j=l;j<=r && i+j<=n;++j)\n\t\t{\n\t\t\tz[i+j]+=fl?mod(1ull*C*vl[j]):p-mod(1ull*C*vl[j]);\n\t\t\tif(z[i+j]>=9e18) z[i+j]=mod(z[i+j]);\n\t\t}\n\t}\n}\nvoid slv(Node a[])\n{\n\tcnt1=cnt2=d=st1[0]=st2[0]=ds[0]=0;for(int i=0;i<=n;++i) z[i]=0;\n\tb1[++cnt1]=(Node) {-1,0,0};b2[++cnt2]=(Node) {n+1,0,m};\n\tfor(int i=1;i<=c;++i)\n\t\tif(a[i].v==1 || a[i].v==4) b1[++cnt1]=a[i],++b1[cnt1].y;\n\t\telse b2[++cnt2]=a[i],++b2[cnt2].x;\n\tsort(b1+1,b1+cnt1+1,cmp1);sort(b2+1,b2+cnt2+1,cmp2);\n\tfor(int i=cnt1;i>=1;--i)\n\t{\n\t\twhile(st1[0] && b1[i].x>=b1[st1[st1[0]]].x) --st1[0];\n\t\tst1[++st1[0]]=i;\n\t}\n\tfor(int i=1;i<=cnt2;++i)\n\t{\n\t\twhile(st2[0] && b2[i].x<=b2[st2[st2[0]]].x) --st2[0];\n\t\tst2[++st2[0]]=i;\n\t}for(int i=1;i<=st1[0];++i) ds[++ds[0]]=b1[st1[i]].y;\n\tfor(int i=1;i<=st2[0];++i) if(b2[st2[i]].y<m) ds[++ds[0]]=b2[st2[i]].y+1;\n\tds[++ds[0]]=0;ds[++ds[0]]=m;\n\tsort(ds+1,ds+ds[0]+1);ds[0]=unique(ds+1,ds+ds[0]+1)-ds-1;\n\tfor(int i=1,t1=st1[0],t2=1,t=0;i<=ds[0];++i)\n\t{\n\t\twhile(t1 && b1[st1[t1]].y<=ds[i]) --t1;L[i]=b1[st1[t1+1]].x+1;\n\t\twhile(t2<=st2[0] && b2[st2[t2]].y<ds[i]) ++t2;R[i]=b2[st2[t2]].x-1;\n\t\tif(!ds[i]) {for(int j=L[i];j<=R[i];++j) z[j]=1;continue;}\n\t\td+=ds[i]-ds[i-1]-1;upd(L[i-1],L[i]-1,0);++d;\n\t\tif(R[i-1]<R[i]) t=qPt(R[i-1]);upd(R[i-1]+1,R[i],t);\n\t}\n}\nint main()\n{\n\tn=rd();m=rd();c=rd();p=rd();FM=FastMod(p);\n\tfor(int i=1;i<=n;++i) inv[i]=i==1?1:mod(1ull*inv[p%i]*(p-p/i));\n\tfor(int i=1,x1,x2;i<=c;++i)\n\t{\n\t\tull y1,y2;x1=rd();y1=rd();x2=rd();y2=rd();\n\t\ta1[i]=(Node) {x1-1>>1,x1==x2?(x1&1?1:3):(y1&1?2:4),y1-1>>1};\n\t\tx1=(n<<1)-x1+1;x2=(n<<1)-x2+1;\n\t\ta2[i]=(Node) {x1-1>>1,x1==x2?(x1&1?1:3):(y1&1?2:4),y1-1>>1};\n\t}slv(a1);ans=qPt(n);slv(a2);printf(\"%llu\\n\",mod(1ull*ans*qPt(n)));\n    puts(\"I would not copy!\");return 0;\t\n}",
        "postTime": 1597155115,
        "uid": 254752,
        "name": "JohnVictor",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6750 \u3010\u300eMdOI R3\u300fPekka Bridge Spam\u3011"
    }
]