[
    {
        "content": "\u53d1\u4e2aO(n)\u7684\u9898\u89e3\n\n\u5148\u5199\u4e2adp\u65b9\u7a0bf[i]=f[j]+max(a[j+1]...a[i])(s[i]-s[j]<=m)\n\n\u5bf9\u4e8e\u8f6c\u79fb\u65b9\u7a0b\u53ef\u884c\u7684j\u4e14a[j+1]<=max(a[j+2]...a[i])\n\nf[j]+max(a[j+1]...a[i])\u4e0ef[j+1]+max(a[j+2]...a[i])\u540e\u534a\u6bb5\u76f8\u540c\n\n\u6613\u77e5f[j]<=f[j+1],\u6240\u4ee5\u524d\u8005\u66f4\u4f18\n\n\u63a8\u5e7f\u53ef\u5f97\u6700\u4f18\u8f6c\u79fb\u4e00\u5b9a\u5728a[q1]>a[q2]>a[q3]>a[q4]>...>a[qj]\u4e2d\n\nf[a[qj]]+a[q[j+1]]\u53d6\u5f97\uff08\u5bf9\u4e8ea[q1],\u6709f[st]+a[q1],st\u662f\u6700\u5927\u7684\u4f7fa[st]+...+a[i]>m\uff09\n\n\u5373\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u961f\u5217\uff0c\u5e76\u5bf9\u5355\u8c03\u961f\u5217\u4e2d\u503c\u53d6\u6700\u5927\u503c\n\n\u5373\u7ef4\u62a4\u4e00\u4e2a\u53ef\u67e5\u8be2\u6700\u5927\u503c\u7684\u53cc\u7aef\u961f\u5217\uff08\u5355\u8c03\u961f\u5217\u662f\u4e2a\u53cc\u7aef\u961f\u5217\uff09\n\n\u64cd\u4f5c\u662f\u7ef4\u62a4\u4e00\u4e2a\u4e2d\u70b9\uff0c\u5411\u4e24\u7aef\u7ef4\u62a4\u5355\u8c03\u6808\uff0c\u5982\u679c\u5de6\u53f3\u7aef\u70b9\u8d85\u8fc7\u4e2d\u70b9\u5c31\u91cd\u6784\u5355\u8c03\u6808\uff0c\n\n\u4ee5\u4e0a\u64cd\u4f5c\u662fO(1)\u7684\u8bc1\u660e\u6211\u653e\u5728U16395\u4e2d\n\nhttps://www.luogu.org/problemnew/show/U16395\n\n\u6240\u4ee5\u6bcf\u6b21\u5c31\u662f\u63d0\u51fa\u53cc\u7aef\u961f\u5217\u4e2d\u7684\u6700\u5c0f\u503c\u548cf[st]+a[q1]\u53d6\u6700\u5c0f\u503c\uff0c\u4e3af[i]\n\n\u505a\u5230O(1)\u8f6c\u6362\uff0c\u603b\u5171\u5c31\u662fO(n)\n\n```cpp\n#include<cstdio>\nusing namespace std;\n#define fo(a,b,c) for(int a=b;a<=c;a++)\n#define go(a,b,c) for(int a=b;a>=c;a--)\n#define min(a,b) ((a)<(b)?(a):(b))\nint read(){\n    int a=0,f=0;char c=getchar();\n    for(;c<'0'||c>'9';c=getchar())if(c=='-')f=1;\n    for(;c>='0'&&c<='9';c=getchar())a=a*10+c-'0';\n    return f?-a:a;\n}\nconst int N=1e5+1;\nint a[N],f[N],qu[N],qi[N],pst[N],qst[N],pt,qt,s=1,t,mid;\n//a\u6570\u5b57\uff0cf\u6700\u4f18\u89e3\uff0cqi\u5355\u964d\u961f\u5217\u5728a\u7684\u4e0b\u6807\uff0cqu\u5bf9qi\u6bcf\u4e2a\u7684f\u503c\uff0cpst\u5de6\u5355\u8c03\u6808\u5728qu\u7684\u4e0b\u6807\uff0cqst\u8868\u793a\u53f3\nvoid pushp(int x){\n    if(!pt||qu[pst[pt]]>qu[x])pst[++pt]=x;\n}//\u5de6\u7aef\u63d2\u5165\nvoid pushq(int x){\n    if(!qt||qu[qst[qt]]>qu[x])qst[++qt]=x; \n}//\u53f3\u7aef\u63d2\u5165\nvoid rebuild(){\n    mid=s+t>>1;pt=qt=0;\n    go(i,mid,s)pushp(i);\n    fo(i,mid+1,t)pushq(i);\n}//\u91cd\u6784\u5355\u8c03\u6808\nint main(){\n//f[i]=f[j]+max(a[j+1]...a[i])(s[i]-s[j]<=m)\u52a8\u5f52\u65b9\u7a0b\n    int n=read(),m=read(),st=1,sum=0;\n    fo(i,1,n){\n        sum+=a[i]=read();\n        while(sum>m)sum-=a[st++];//\u7ef4\u62a4st\n        while(s<=t&&a[qi[t]]<=a[i]){\n            if(qt&&qst[qt]==t)qt--;\n            if(pt&&pst[pt]==t)pt--;\n            if(--t<=mid)rebuild();\n}//\u7ef4\u62a4\u5355\u8c03\u961f\u5217\nqi[++t]=i;qu[t]=(s==t?f[st-1]:f[qi[t-1]])+a[i];pushq(t);//\u52a0\u5165\u5f53\u524d\u5143\u7d20\n        if(pst[pt]==s)pt--;\n        if(qst[qt]==s)qt--;//\u5c06a[q1]\u6392\u9664\uff08\u4e0d\u7b26\u5408f[a[qj]]+a[q[j+1]]\u89c4\u5f8b\uff09\n        while(s<=t&&qi[s]<st){\n            if(qt&&qst[qt]==s)qt--;\n            if(pt&&pst[pt]==s)pt--;\n            if(++s>mid)rebuild();\n}//\u5f39\u51fa\u8fc7\u671f\u5143\u7d20\n        f[i]=a[qi[s]]+f[st-1];\n        if(pt)f[i]=min(f[i],qu[pst[pt]]); \n        if(qt)f[i]=min(f[i],qu[qst[qt]]);//\u8f6c\u79fb\n    }\n    printf(\"%d\",f[n]);\n    return 0;\n}\n//input\n//6 6\n//3 5 1 2 4 1\n//output\n//13\n```",
        "postTime": 1512230584,
        "uid": 12668,
        "name": "Minclxc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1295 \u3010[TJOI2011]\u4e66\u67b6\u3011"
    },
    {
        "content": "# \u77e5\u8bc6\u70b9: \u7ebf\u6bb5\u6811\u4f18\u5316DP\n\n## [\u539f\u9898\u9762](https://www.luogu.com.cn/problem/P1295)\n\n\u53cc\u500d\u7ecf\u9a8c [P1848 [USACO12OPEN]Bookshelf G](https://www.luogu.com.cn/problem/P1848)\u3002  \n\u8fd9\u8fb9\u6709 dalao \u7684\u795e\u4ed9\u9898\u89e3\u3002\n\n\uff1f\u6211\u4e00\u5f00\u59cb\u4e3a\u4ec0\u4e48\u8981\u5199\u4e8c\u7ef4 DP  \n\n---\n\n## \u9898\u610f\u7b80\u8ff0\n\n>\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $h$\u3002  \n>\u5c06 $h$ \u5206\u6210\u82e5\u5e72\u6bb5\uff0c\u6ee1\u8db3\u6bcf\u6bb5\u6570\u5b57\u4e4b\u548c\u90fd\u4e0d\u8d85\u8fc7 $m$\u3002\n>\u6700\u5c0f\u5316\u6bcf\u6bb5\u7684\u6700\u5927\u503c\u4e4b\u548c\u3002  \n>$1\\le n\\le 10^5, 1\\le h_i\\le 10^9$\n\n---\n\n## \u5206\u6790\u9898\u610f\n\n\u6709\u4e2a\u975e\u5e38\u663e\u7136\u7684 DP \uff1a  \n\u8bbe $f_i$ \u8868\u793a\uff0c\u5df2\u7ecf\u5206\u597d $i$ \u4e2a\u6570\u5b57\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002  \n\u8f6c\u79fb\u65f6\u679a\u4e3e\u8fd9\u4e00\u6bb5\u7684\u5f00\u5934 $k$\uff0c\u5c06 $[k,i]$ \u4f5c\u4e3a\u65b0\u7684\u4e00\u6bb5\uff0c\u5219\u6709\uff1a  \n\n$$f_i = \\min\\left\\{f_{k-1} +\\max_{j=k}^{i}h_j\\right\\}\\ \\left(\\sum_{j=k}^{i}h_j\\le m\\right)$$  \n\n\u66b4\u529b DP \u590d\u6742\u5ea6 $O(n^2)$\uff0c\u671f\u671b\u5f97\u5206 $30\\text{pts}$\u3002  \n\u5b9e\u9645\u4e0a\u80fd\u6c34 $50\\text{pts}$\uff08\u5927\u96fe\n\n---\n\n\u8003\u8651\u4f18\u5316\u3002\n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684 $i$\uff0c\u5f53 $k$ \u5355\u589e\u65f6\uff0c$\\max\\limits_{j=k}^{i}h_j$ \u5355\u8c03\u4e0d\u589e\uff0c$f_{k-1}$ \u5355\u8c03\u4e0d\u964d\u3002  \n\u5f53\u679a\u4e3e\u5230 $i$ \u65f6\uff0c$f_{k-1}$ \u4e0d\u4f1a\u518d\u6539\u53d8\uff0c\u8003\u8651 $h_i$ \u5bf9 $\\max\\limits_{j=k}^{i}h_j$ \u7684\u5f71\u54cd\u3002  \n\n![\u6211\u6012\u6012](https://cdn.luogu.com.cn/upload/image_hosting/bowwdele.png)\n\n\u5982\u56fe\uff0c\u8bbe $i$ \u5de6\u4fa7\u7b2c\u4e00\u4e2a\u6ee1\u8db3 $h > h_i$ \u7684\u4f4d\u7f6e\u4e3a $pre_i$\uff0c\u663e\u7136 $\\max\\limits_{j=k}^{i}h_j(k> pre_i)$ \u90fd\u4f1a\u53d8\u4e3a $h_i$\u3002\n\n$\\max\\limits_{j=k}^{i}h_j$ \u53ef\u7528\u652f\u6301\u533a\u95f4\u8d4b\u503c\u7684\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u7ef4\u62a4\uff0c\u8f6c\u79fb $f_i$ \u65f6\uff0c\u9700\u8981\u8fdb\u884c\u533a\u95f4\u67e5\u8be2\u3002    \n\u8003\u8651\u7ebf\u6bb5\u6811\u3002\n\n---\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4f4d\u7f6e $k$ \u7684 $f_{k-1}$ \u548c $f_{k-1}+\\max\\limits_{j=k}^{i} h_j$\u3002  \n\u5f53\u679a\u4e3e\u5230\u4e00\u4e2a\u65b0\u7684 $h_i$ \u65f6\uff1a  \n1. \u5355\u70b9\u4fee\u6539\uff0c\u66f4\u65b0\u4f4d\u7f6e $k=i$ \u65f6\u7684 $f_{k-1}$\u3002\n2. \u6839\u636e $h_i$ \u66f4\u65b0\u533a\u95f4 $[pre_{i}+1,i]$ \u7684 $f_{k-1}+\\max\\limits_{j=k+1}^{i} h_j$\u3002  \n3. \u4e8c\u5206\u5f97\u5230 \u7b2c\u4e00\u4e2a\u4e0d\u6ee1\u8db3 $\\sum\\limits_{k}^{i}h_i\\le m$ \u7684\u4f4d\u7f6e $l$\uff0c\u5219 $k\\in [l+1,i]$\u3002  \n4. \u67e5\u8be2 $[l+1,i]$ \u4e2d\u6700\u5c0f\u7684 $f_{k-1} + \\max\\limits_{j=k}^{i}h_j$\u3002\n\n\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u671f\u671b\u5f97\u5206 $100\\text{pts}$\u3002\n\n---\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n//\u77e5\u8bc6\u70b9: \u7ebf\u6bb5\u6811\u4f18\u5316DP\n/*\nBy:Luckyblock\n*/\n#include <cstdio>\n#include <ctype.h>\n#include <cstring>\n#include <algorithm>\n#define ll long long\n#define ls (now<<1)\n#define rs (now<<1|1)\nconst int kMaxn = 1e5 + 10;\nconst ll kInf = 1e12 + 2077;\n//=============================================================\nstruct SegmentTree {\n  int L, R;\n  ll f, ans, tag;\n} t[kMaxn << 2];\nll n, m, h[kMaxn], w[kMaxn], sum[kMaxn], pre[kMaxn], f[kMaxn];\nll top, sta[kMaxn];\n//=============================================================\ninline ll read() {\n  ll f = 1, w = 0; char ch = getchar();\n  for (; !isdigit(ch); ch = getchar()) if (ch == '-') f = -1;\n  for (; isdigit(ch); ch = getchar()) w = (w << 3) + (w << 1) + (ch ^ '0');\n  return f * w;\n}\nvoid Pushup(int now) {\n  t[now].f = std :: min(t[ls].f, t[rs].f);\n  t[now].ans = std :: min(t[ls].ans, t[rs].ans);\n}\nvoid Pushdown(int now) {\n  t[ls].ans = t[ls].f + t[now].tag;\n  t[rs].ans = t[rs].f + t[now].tag;\n  t[ls].tag = t[rs].tag = t[now].tag;\n  t[now].tag = kInf;\n}\nvoid Build(int now, int L, int R) {\n  t[now].L = L, t[now].R = R;\n  if (L == R) {\n    t[now].f = t[now].ans = t[now].tag = kInf;\n    return ;\n  }\n  int mid = (L + R) >> 1;\n  Build(ls, L, mid), Build(rs, mid + 1, R);\n  Pushup(now);\n}\nll Query(int now, int L, int R) {\n  if (L <= t[now].L && t[now].R <= R) return t[now].ans;\n  if (t[now].tag != kInf) Pushdown(now); \n  int mid = (t[now].L + t[now].R) >> 1;\n  ll ret = kInf;\n  if (L <= mid) ret = std :: min(ret, Query(ls, L, R));\n  if (R > mid) ret = std :: min(ret, Query(rs, L, R));\n  return ret;\n}\nvoid Update(int now, int L, int R, ll val) {\n  if (L <= t[now].L && t[now].R <= R) {\n    t[now].ans = t[now].f + val;\n    t[now].tag = val;\n    return ;\n  }\n  if (t[now].tag != kInf) Pushdown(now);\n  int mid = (t[now].L + t[now].R) >> 1;\n  if (L <= mid) Update(ls, L, R, val);\n  if (R > mid) Update(rs, L, R, val);\n  Pushup(now);\n}\nvoid Modify(int now, int pos) {\n  if (t[now].L == t[now].R) {\n    t[now].ans = kInf;\n    t[now].f = f[pos - 1];\n    return ;\n  }\n  if (t[now].tag != kInf) Pushdown(now);\n  int mid = (t[now].L + t[now].R) >> 1;\n  if (pos <= mid) Modify(ls, pos);\n  else Modify(rs, pos);\n  Pushup(now);\n}\nvoid Prepare() {\n  n = read(), m = read();\n  for (int i = 1; i <= n; ++ i) {\n    h[i] = read();\n    sum[i] = sum[i - 1] + h[i];\n  }\n\n  sta[++ top] = 1;\n  for (int i = 2; i <= n; ++ i) {\n    while (top && h[sta[top]] < h[i]) top --;\n    if (top) pre[i] = sta[top];\n    sta[++ top] = i;\n  }\n  Build(1, 1, n);\n}\n//=============================================================\nint main() {\n  Prepare();\n  for (int i = 1; i <= n; ++ i) {\n    Modify(1, i);\n    if (pre[i] < i) Update(1, pre[i] + 1, i, h[i]);\n    int l = std ::lower_bound(sum, sum + i + 1, sum[i] - m) - sum;\n    if (l < i) f[i] = Query(1, l + 1, i);\n  }\n  printf(\"%lld\", f[n]);\n  return 0;\n}\n```\n",
        "postTime": 1594458619,
        "uid": 186186,
        "name": "\u7075\u4e4c\u8def\u7a7a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1295 \u3010[TJOI2011]\u4e66\u67b6\u3011"
    },
    {
        "content": "PS\uff1a\u4e4b\u524d\u7684\u9898\u89e3\uff0c\u6709\u4e00\u4e9b\u5c0f\u5c0f\u7684\u9519\u8bef\uff0c\u73b0\u5df2\u6539\u6b63\u3002\u671b\u89c1\u8c05\u3002\u3002\n\n\u8bb0F[i]\u4e3a\u653e\u5b8c\u7b2ci\u672c\u4e66\uff0c\u6240\u7528\u7684\u6700\u5c0f\u9ad8\u5ea6\u3002\n\n\nif(sum[i]-sum[j-1]<=m)  F[i]=min(F[j-1]+ max(a[j]~a[i]))\n\n\u53ef\u4ee5\u53d1\u73b0\uff0cF[i]\u662f\u5355\u8c03\u4e0a\u5347\u7684\u3002max(a[j]~a[i])\u662f\u5355\u8c03\u4e0b\u964d\u7684\u3002\n\n\u90a3\u4e48\uff0c\u6bcf\u4e00\u6b21\u52a0i\u8fdb\u53bb\uff0c\u5219\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4max\u503c\u3002      (\u62ff\u4e0d\u5230\u7684\u5c31\u5f39\u51fa)\n\n\n\u56e0\u4e3a\uff0cF[i]=F[j-1]+max\n\n\u5bf9\u4e8e\u4e00\u4e2a\u76f8\u540c\u7684max\u503c\uff0c\u6211\u4eec\u53ea\u9700\u8bb0\u4e00\u4e2a\u6700\u4f18\u7684j\u5373\u53ef\u3002  (j\u4e00\u5b9a\u662f\u53ef\u9009\u4e2d\u6700\u5c0f\u7f16\u53f7\u7684)\n\n\n\u90a3\u4e48\uff0c\u52a0\u5165i\uff0c\u4f1a\u5bf9\u7b54\u6848\u6709\u4ec0\u4e48\u53d8\u5316\u5462\uff1f\n\n\n\u4f8b\u5982\uff1a\n\n11 9 5 2 3 4 ai\n\nmax\u503c\uff1a\n\n11 9 5 --- 4 ai\n\n\u5047\u5982\u52a0\u5165ai=6\n\n\n\u90a3\u4e48 4 5 \u4f1a\u88ab\u5f39\u51fa\u30026\u52a0\u8fdb9\u540e\u9762\u3002\n\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5c06\u5b58\u5728\u5806\u4e2d\u7684max\u503c\u5bf9\u5e94\u4e3a4 5 \u7684\u5f39\u51fa\u3002\n\n\u52a0\u5165\u4e00\u4e2amax\u503c\u4e3a6\uff0c\u6700\u4f18j\u4e3a3\u7684\u5143\u7d20(3,6)    (\u5176\u5b9e\u5c31\u662f\u88ab\u5f39\u51fa\u7684\u6700\u5c0f\u7684j)\n\n\u56e0\u4e3amax\u503c\u4e3a4 5\u7684\u4f1a\u56e0\u4e3a6\u7684\u52a0\u5165\u800c\u53d8\u62106\u3002   (\u6700\u5c0f\u7684j\uff0c\u7b54\u6848\u6700\u4f18)\n\n\n\u7528\u5806\u6c42\u51fa\u6700\u4f18\u7684\u5143\u7d20(a,b)\uff0c\u4e5f\u5c31\u662ff[a-1]+b\n\n\n\u90a3\u600e\u4e48\u5b9e\u73b0\u5f39\u51fa\u4e0d\u4e3a\u5806\u9876\u7684\u5143\u7d20\u5462\uff1f\n\n\u8bb0\u4e24\u4e2a\u5806\uff0c\u4e00\u4e2aA\u5806\uff0c\u4e00\u4e2aB\u5806\u3002\n\n\u5220\u9664\u5143\u7d20(a,b)\u5c31\u628a(a,b)\u52a0\u8fdbB\u5806\u4e2d\u3002\n\n\u53d6A\u5806\u7684top\u65f6\uff0c\u82e5A.top=B.top\uff0c\u5219\u5c06A.top\u548cB.top\u540c\u65f6\u5f39\u51fa\uff0c\u76f4\u5230\u4e0d\u76f8\u7b49\u4e3a\u6b62\u3002\n\n\n\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\uff0c\u6bd4\u5982\u76f8\u540c\u7684max\u503c\u7684j\u62ff\u4e0d\u5230(sum[i]-sum[j-1]>m)\u4f46\u662f\u53c8\u5b58\u5728\u8fd9\u4e2amax\u503c\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e00\u6bb5\u7684\u76f8\u540cmax\u503c\u7684\u5143\u7d20\uff0c\u88ab\u622a\u4e86\u4e00\u90e8\u5206     (\u524d\u534a\u90e8\u5206\u62ff\u4e0d\u5230\uff0c\u800c\u540e\u534a\u90e8\u5206\u5374\u53ef\u4ee5)\n\n\n\u90a3\u4e48\uff0c\u53ea\u9700\u5224\u65ad\u73b0\u5728\u7684max\u961f\u5217\u7684\u5934\u7684j\u662f\u5426\u7b49\u4e8elast      (last\u662f\u6307sumi-sum[j-1]<=m\u65f6\u7684\u6700\u5c0fj\uff0c\u5728i\u80fd\u62ff\u5230\u7684\u6781\u9650)\n\n\u82e5\u4e0d\u7b49\uff0c\u5219\u961f\u5934\u52a0\u5165max(a[last]~a[i])\uff0c\u5806\u52a0\u5165\u65b0\u5143\u7d20(last,max(a[last]~a[i]))\n\n\nCODE:\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#define imin(a,b) ((a<b)?(a):(b))\n#define imax(a,b) ((a>b)?(a):(b))\nusing namespace std;\ntypedef long long ll;\nconst int N=100100;\nconst ll inf=1e9;\nconst int mp=17;\nint n,m;\nint d[N],la[N];\nint l,r;\nll sum[N],f[N],qx[N<<1],qy[N<<1];\nll h1[N],h2[N];\nint cnt1,cnt2;\nvoid add1(ll x) {\n    cnt1++; h1[cnt1]=x;    int now=cnt1;\n    while((now>1) && (h1[now>>1]>h1[now])) { swap(h1[now>>1],h1[now]); now>>=1;    }}\nvoid down1() {\n    h1[1]=h1[cnt1]; cnt1--;    int now=1;\n    while((now<<1)<=cnt1) {\n        int uw;    if((now<<1|1)>cnt1) uw=now<<1; else uw=(h1[now<<1]<h1[now<<1|1])?(now<<1):(now<<1|1);\n        if(h1[now]>h1[uw]) swap(h1[now],h1[uw]); else break; now=uw; }}\nvoid add2(int x) {\n    cnt2++; h2[cnt2]=x;    int now=cnt2;\n    while((now>1) && (h2[now>>1]>h2[now])) { swap(h2[now>>1],h2[now]); now>>=1; }}\nvoid down2() {\n    h2[1]=h2[cnt2]; cnt2--;    int now=1;\n    while((now<<1)<=cnt2) {\n        int uw; if((now<<1|1)>cnt2) uw=now<<1; else uw=(h2[now<<1]<h2[now<<1|1])?(now<<1):(now<<1|1);\n        if(h2[now]>h2[uw]) swap(h2[now],h2[uw]); else break; now=uw; }}\nll getans()\n{\n    while(cnt2 && h1[1]==h2[1]) down1(),down2();\n    return h1[1];\n}\nvoid read(int &x)\n{\n    x=0; char ch=getchar();\n    while(ch<'0' && ch>'9') ch=getchar();\n    while(ch>='0' && ch<='9')\n    {\n        x=(x<<3)+(x<<1)+ch-'0';\n        ch=getchar();\n    }\n}\nint main()\n{\n    read(n); read(m); sum[0]=0ll;\n    for(int i=1;i<=n;i++) read(d[i]),sum[i]=sum[i-1]+d[i];\n    int la=1; l=N; r=N-1;\n    for(int i=1;i<=n;i++)\n    {\n        while(sum[i]-sum[la-1]>m)\n        {\n            if(r>=l && qx[l]==la) add2(f[la-1]+qy[l]),l++;\n            la++;\n        }\n        if(l>r || qx[l]!=la)\n        {\n            l--;\n            if(la==i) qy[l]=d[i];\n            else qy[l]=imax(qy[l],d[i]);\n            qx[l]=la;\n            add1(f[la-1]+qy[l]);\n        }\n        int p=i;\n        while(r>=l && qy[r]<=d[i])\n        {\n            p=qx[r];\n            add2(f[qx[r]-1]+qy[r]);\n            r--;\n        }\n        qx[++r]=p; qy[r]=d[i];\n        add1(f[p-1]+d[i]);\n        f[i]=getans();\n    }\n    printf(\"%lld\\n\",f[n]);\n    return 0;\n}\n```",
        "postTime": 1510478532,
        "uid": 26932,
        "name": "kexinyu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1295 \u3010[TJOI2011]\u4e66\u67b6\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e00\u770b\u5230\u5c31\u77e5\u9053\u662f\u4e00\u4e2adp\uff0c\u8bbedp[i]\u8868\u793a1~i\u653e\u5230\u4e66\u67b6\u4e0a\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\n\n\u5219dp[i]=min{0<j<=i&&sum[i]-sum[j-1]<=m | max{j<=k<=i|height[k]}+dp[j-1]}\n\u663e\u7136\u8fd9\u4e2adp\u662fO(n^2)\u7684\uff0c\u4e00\u5b9a\u4f1a\u8d85\u65f6\uff0c\u4e8e\u662f\u601d\u8003\u4f18\u5316\u3002\n\n\u8003\u8651\u6570\u636e\u7ed3\u6784\uff1a\u9700\u8981\u80fd\u76f4\u63a5\u8bfb\u51fadp[i]\u7684\u503c\uff0c\u4f46\u662f\u7531\u4e8e\u6700\u5927\u503c\u4f1a\u968f\u65f6\u53d8\u52a8\uff0c\u6211\u4eec\u8981\u60f3\u529e\u6cd5\u7ef4\u62a4\u6700\u5927\u503c\u3002\n\n\u6ce8\u610f\u5230\u6bcf\u4e2a\u6570\u5b57\u53ea\u4f1a\u5bf9\u5b83\u524d\u9762\u7684\u503c\u7684\u6700\u5927\u503c\u9020\u6210\u5f71\u54cd\uff0c\u4e8e\u662f\u53ef\u4ee5\u4f7f\u7528\u5355\u8c03\u6808\u7edf\u8ba1\u6bcf\u4e2a\u6570\u6700\u5de6\u7aef\u53ef\u4ee5\u5ef6\u4f38\u5230\u54ea\u91cc\uff0c\u4e5f\u5c31\u662f\u8bf4\u6700\u591a\u80fd\u5230\u54ea\u91cc\u4f7f\u5f97\u6240\u6709\u6570\u5b57\u90fd\u4e0d\u5927\u4e8e\u5b83\u3002\n\n\u6709\u4e86\u5355\u8c03\u6808\u9884\u5904\u7406\u51fa\u7684\u5ef6\u4f38\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4dp\u3002\n\n\u5047\u8bbe\u5f53\u524d\u8ba1\u7b97\u5230i\uff0c\u5219\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9j\u8868\u793amax{j<k<=i|height[k]+dp[j]}\uff0c\u8003\u8651\u5982\u4f55\u66f4\u65b0\u3002\n\n\u66f4\u65b0\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u66f4\u65b0\u53f6\u5b50\u8282\u70b9\u7684dp\u503c\uff0c\u4e00\u79cd\u662f\u628a\u533a\u95f4[a,b]\u7684\u6700\u5927\u503c\u66f4\u65b0\u4e3at\uff0c\u4e5f\u5c31\u662f\u628a[a,b]\u5168\u90e8\u7f6e\u4e3at\u3002\n\n\u4e8e\u662f\uff0c\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e09\u4e2a\u503c\uff1a\n\n1.lazy\uff0c\u6807\u8bb0[a,b]\u7f6e\u4e3at\u7684\u64cd\u4f5c\n\n2.res\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5c31\u662fmax{j<k<=i|height[k]+dp[j]}\uff0c\u5426\u5219\u5c31\u8868\u793a\u6240\u6709\u513f\u5b50\u8282\u70b9\u4e2d\u4e0a\u8ff0\u503c\u6700\u5c0f\u7684\u90a3\u4e2a\n\n3.mn\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5c31\u8868\u793a\u53f6\u5b50\u8282\u70b9\u5bf9\u5e94\u7684dp\u503c\uff0c\u5426\u5219\u5c31\u8868\u793a\u6240\u6709\u513f\u5b50\u8282\u70b9\u4e2ddp\u503c\u7684\u6700\u5c0f\u503c\n\n\u4e8e\u662f\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u6295\u5165\u4f7f\u7528\u4e86\uff0c\n\n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u66f4\u65b0\uff0c\u76f4\u63a5\u81ea\u4e0b\u800c\u4e0a\u66f4\u65b0\u4e00\u904dmn\u503c\u5373\u53ef\uff1b\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u66f4\u65b0\uff0c\u81ea\u4e0a\u800c\u4e0bpushdown\uff0c\u6839\u636edp\u7684\u9012\u63a8\u516c\u5f0f\u53ef\u77e5res[i]=mn[i]+lazy[i]\u3002\n\n\u5177\u4f53\u5982\u4f55\u64cd\u4f5c\u5462\uff1f\n\n\u5355\u8c03\u6808\u9884\u5904\u7406\u4e4b\u540e\uff0c\u7531\u4e8e\u6709dp[0]=0\uff0c\u56e0\u6b64update1(0,0)\uff08\u8868\u793a\u57280\u4f4d\u7f6e\u5c06dp\u503c\u8bbe\u4e3a0\uff09\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2ai\uff0c\u8bb0\u5355\u8c03\u6808\u5ef6\u4f38\u503c\u4e3ak\uff0c\u6ee1\u8db3sum[i]-sum[j]<=m\u7684\u6700\u5c0f\u7684j\u8bb0\u4e3aa\uff0c\n\n\u9996\u5148update2(k,i,height[i])\uff08\u8868\u793a\u5c06\u533a\u95f4[k,i)\u7684\u6700\u5927\u503c\u7f6e\u4e3aheight[i]\uff0c\u6ce8\u610f\u533a\u95f4\u5de6\u95ed\u53f3\u5f00\uff01\uff09\n\n\u7136\u540e\u76f4\u63a5dp[i]=query(a,i)\uff08\u8868\u793a\u67e5\u8be2\u533a\u95f4[a,i)\u4e2dres\u7684\u6700\u5c0f\u503c\uff09\n\n\u6700\u540e\u518dupdate1(i,dp[i])\uff0c\u4e5f\u5c31\u662f\u628ai\u4f4d\u7f6e\u7684dp\u503c\u8bbe\u7f6e\u4e00\u904d\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u5355\u8c03\u6808\u9884\u5904\u7406O(n)\uff0c\u7ebf\u6bb5\u6811O(nlogn)\uff0c\u56e0\u6b64\u603b\u590d\u6742\u5ea6O(nlogn)\uff0c\u53ef\u4ee5AC\u5566\u3002\n\n\n\u4e0a\u6211\u4e11\u4e11\u7684\u4ee3\u7801\n\n\n```cpp\n<cpp>\n#include <bits/stdc++.h>\n#define INF 0x3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nconst int maxn = 100005, maxt = 262144;\nint dp[maxn], high[maxn], sta[maxn], sum[maxn], n, m;\nint lazy[maxt], mn[maxt], res[maxt], tn;\ninline void pushup(int x){\n    int ls = x * 2 + 1, rs = x * 2 + 2;\n    mn[x] = min(mn[ls], mn[rs]);\n    if(lazy[x] != 0) res[x] = mn[x] + lazy[x];\n    else res[x] = min(res[ls], res[rs]);\n}\ninline void pushdown(int x){\n    if(!lazy[x]) return;\n    int ls = x * 2 + 1, rs = x * 2 + 2;\n    lazy[ls] = lazy[rs] = lazy[x]; lazy[x] = 0;\n    res[ls] = lazy[ls] + mn[ls];\n    res[rs] = lazy[rs] + mn[rs];\n}\nvoid update1(int x, int s){\n    x += tn - 1;\n    mn[x] = s;\n    while(x > 0){\n        x = (x - 1) / 2;\n        mn[x] = min(mn[x], s);\n    }\n}\nvoid update2(int a, int b, int x, int l = 0, int r = tn, int k = 0){\n    if(a >= r || b <= l) return;\n    if(a <= l && b >= r){\n        lazy[k] = x;\n        res[k] = x + mn[k];\n        return;\n    }\n    pushdown(k);\n    update2(a, b, x, l, (l + r) / 2, k * 2 + 1);\n    update2(a, b, x, (l + r) / 2, r, k * 2 + 2);\n    pushup(k);\n}\nint query(int a, int b, int l = 0, int r = tn, int k = 0){\n    if(a >= r || b <= l) return INF;\n    if(a <= l && b >= r) return res[k];\n    pushdown(k);\n    return min(query(a, b, l, (l + r) / 2, k * 2 + 1),\n            query(a, b, (l + r) / 2, r, k * 2 + 2));\n}\nint main(){\n    scanf(\"%d%d\", &n, &m);\n    for(tn = 1; tn <= n; tn <<= 1);\n    memset(mn, 0x3f, sizeof(mn));\n    memset(res, 0x3f, sizeof(res));\n    update1(0, 0);\n    for(int i = 1, tp = 0, j = 0; i <= n; i++){\n        scanf(\"%d\", high + i);\n        sum[i] = high[i] + sum[i - 1];\n        while(tp > 0 && high[sta[tp - 1]] <= high[i]) tp--;\n        while(sum[i] - sum[j] > m) j++;\n        int lm = max(j, !tp ? 0 : sta[tp - 1]);\n        sta[tp++] = i;\n        update2(lm, i, high[i]);\n        dp[i] = query(j, i);\n        update1(i, dp[i]);\n    }\n    printf(\"%d\", dp[n]);\n    return 0;\n}\n</cpp>\n```",
        "postTime": 1511601737,
        "uid": 30575,
        "name": "waaadreamer",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1295 \u3010[TJOI2011]\u4e66\u67b6\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $h$\uff0c\u5c06 $h$ \u5206\u6210\u82e5\u5e72\u6bb5\uff0c\u6ee1\u8db3\u6bcf\u6bb5\u6570\u5b57\u4e4b\u548c\u90fd\u4e0d\u8d85\u8fc7 $m$\uff0c\u6700\u5c0f\u5316\u6bcf\u6bb5\u7684\u6700\u5927\u503c\u4e4b\u548c\u3002\n\n## \u601d\u8def\n\n\u8bbe $f[i]$ \u8868\u793a\u5c06\u5e8f\u5217\u7684\u524d $i$ \u4e2a\u6570\u5206\u6210\u82e5\u5e72\u6bb5\u7684\u6700\u5c0f\u503c\u3002\u90a3\u4e48\u53ef\u4ee5\u5f88\u5bb9\u6613\u5199\u51fa\u6734\u7d20\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$f[i]=\\min_{s[i]-s[j]<=m}(f[j]+\\max_{j<k \\leq i} h_k)$\u3002\u5176\u4e2d $s[i]$ \u8868\u793a\u5e8f\u5217 $h$ \u7684\u524d\u7f00\u548c\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u63a5\u8fd1 $O(n^2)$\uff0c\u8003\u8651\u4f18\u5316\u3002\n\n\u663e\u7136\u53ef\u4ee5\u7528\u4e8c\u5206\u67e5\u627e\u5728 $O(\\log n)$ \u7684\u65f6\u95f4\u91cc\u6c42\u51fa $\\min j$\u3002\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\u5c31\u53d8\u6210\u4e86\u5728\u4e00\u4e2a\u533a\u95f4\u5185\u6c42\u6700\u5c0f\u503c\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $f[i]$\uff0c\u968f\u7740 $j$ \u589e\u5927\uff0c$f[j]$ \u975e\u4e25\u683c\u5355\u8c03\u9012\u589e\uff0c$\\max h_k$ \u975e\u4e25\u683c\u5355\u8c03\u9012\u51cf\u3002\u800c\u968f\u7740 $i$ \u589e\u5927\uff0c$f[j]$ \u7684\u503c\u663e\u7136\u90fd\u4e0d\u4f1a\u6539\u53d8\uff0c\u800c $\\max h_k$ \u4f9d\u65e7\u5177\u6709\u5355\u8c03\u6027\u3002\u8bbe $pre[i]$ \u8868\u793a $h_i$ \u5de6\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u5927\u7684\u6570\u7684\u4e0b\u6807\u3002\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u5728 $O(n)$ \u65f6\u95f4\u5185\u9884\u5904\u7406\u51fa\u6765\u3002\u6bcf\u65b0\u63d2\u5165\u4e00\u4e2a $h_i$\uff0c$[pre[i]+1,i]$ \u8fd9\u6bb5\u533a\u95f4\u5185\u7684 $\\max h$ \u5c31\u4f1a\u88ab\u4fee\u6539\u6210 $h_i$\u3002\n\n\u4e8e\u662f\u672c\u9898\u53ef\u4ee5\u4f18\u5316\u7684\u5730\u65b9\u5c31\u662f\u533a\u95f4\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\u6700\u503c\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4 $f_j+\\max h$\u3002\u540c\u65f6\u6ce8\u610f\u5230\u53ea\u9700\u8981\u4fee\u6539 $\\max h$\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f4\u63a5\u5c06 $\\max h$ \u7c7b\u4f3c\u4e8e\u61d2\u6807\u8bb0\u6765\u7ef4\u62a4\u3002\u540c\u65f6\u4e5f\u9700\u8981\u8bb0\u5f55\u4e24\u4e2a\u6570\u7684\u548c\u3002\u9632\u6b62\u51fa\u9519\uff0c\u4e5f\u65b9\u4fbf\u4e0a\u4f20\u3002\n\n\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u89c1\u4ee3\u7801\u3002\n\n## code\uff1a\n\n```cpp\n#include<cstdio>\nusing namespace std;\nconst int N=1e5+10;\n#define int long long\nconst int INF=1e15+10;\nstruct tree{\n\tint l,r,mid;\n\tint f,h,val;//\u540c\u65f6\u4e5f\u9700\u8981\u8bb0\u5f55f\u7684\u4fe1\u606f\uff0c\u65b9\u4fbf\u533a\u95f4\u4fee\u6539 \n}tr[N<<2]; \nlong long s[N];\nint min(int a,int b){return a<b?a:b;}\nint f[N],h[N],n,m;\nvoid push_up(int p)\n{\n    tr[p].val=min(tr[p<<1].val,tr[p<<1|1].val);\n    tr[p].f=min(tr[p<<1].f,tr[p<<1|1].f);\n}\nvoid build_tree(int p,int l,int r)\n{\n\ttr[p].l=l,tr[p].r=r,tr[p].mid=(l+r)>>1;\n\tif(l==r)\n\t{\n\t\ttr[p].val=INF;//\u56e0\u4e3a\u6c42\u6700\u5c0f\u503c\uff0c\u5c31\u8d4b\u503c\u6210\u65e0\u7a77\u5927\u9632\u6b62\u51fa\u9519 \n\t\treturn ;\n\t}\n\tbuild_tree(p<<1,tr[p].l,tr[p].mid);\n\tbuild_tree(p<<1|1,tr[p].mid+1,tr[p].r);\n\tpush_up(p);\n}\nvoid push_down(int p)\n{\n\tif(tr[p].h)\n\t{\n\t\ttr[p<<1].val=tr[p<<1].f+tr[p].h;\n\t\ttr[p<<1|1].val=tr[p<<1|1].f+tr[p].h;\n\t\ttr[p<<1].h=tr[p<<1|1].h=tr[p].h;\n\t\ttr[p].h=0;\n\t}\n}\nvoid updata(int p,int l,int r,int h)\n{\n\tif(l<=tr[p].l&&tr[p].r<=r)\n\t{\n\t\ttr[p].h=h;\n\t\ttr[p].val=tr[p].f+h;\n\t\treturn ;\n\t}\n\tpush_down(p);\n\tif(l<=tr[p].mid) updata(p<<1,l,r,h);\n\tif(r>tr[p].mid) updata(p<<1|1,l,r,h);\n\tpush_up(p);\n}\nvoid insert(int p,int pos,int f)\n{\n\tif(tr[p].l==tr[p].r)\n\t{\n\t\ttr[p].f=f;\n\t\treturn ;\n\t}\n\tpush_down(p);\n\tif(pos<=tr[p].mid) insert(p<<1,pos,f);\n\telse insert(p<<1|1,pos,f);\n\tpush_up(p);\n}\nint query(int p,int l,int r)\n{\n\tif(l<=tr[p].l&&tr[p].r<=r) return tr[p].val;\n\tpush_down(p);\n\tint res=INF;\n\tif(l<=tr[p].mid) res=min(res,query(p<<1,l,r));\n\tif(r>tr[p].mid) res=min(res,query(p<<1|1,l,r));\n\treturn res;\n}\nint pre[N];\nint stk[N],top;\nsigned main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1;i<=n;i++) scanf(\"%lld\",&h[i]),s[i]=s[i-1]+h[i];\n\tbuild_tree(1,1,n);\n\th[0]=INF;\n\tfor(int i=n;i>=0;i--)\n\t{\n\t\twhile(top&&h[i]>h[stk[top]]) pre[stk[top--]]=i;\n\t\tstk[++top]=i;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tinsert(1,i,f[i-1]);//\u7ebf\u6bb5\u6811\u4e0a\u7684\u7b2c i \u4e2a\u70b9\u7684\u542b\u4e49\u662f\u5f53\u524d\u8fd9\u4e00\u6bb5\u4ee5\u7b2ci\u4e2a\u70b9\u4e3a\u5de6\u7aef\u70b9\uff0c\u6240\u4ee5\u5b58\u50a8\u7684\u4fe1\u606f\u5ba4f[i-1] \n\t\tint l=0,r=i;\n\t\twhile(l<r)\n\t\t{\n\t\t\tint mid=l+r>>1;\n\t\t\tif(s[i]-m<=s[mid]) r=mid;\n\t\t\telse  l=mid+1;\n\t\t}\n\t\tupdata(1,pre[i]+1,i,h[i]);\n\t\tf[i]=query(1,l+1,i); \n\t}\n\tprintf(\"%lld\\n\",f[n]);\n\treturn 0;\n}\n/*\n6 6\n3 5 1 2 4 1\n*/ \n```\n",
        "postTime": 1626949735,
        "uid": 288192,
        "name": "ListenSnow",
        "ccfLevel": 7,
        "title": "P1295 [TJOI2011]\u4e66\u67b6"
    },
    {
        "content": "### [\u53cc\u500d\u7ecf\u9a8c](https://www.luogu.com.cn/problem/P1848)\n\n\n### \u524d\u7f6e\u77e5\u8bc6\n\u5355\u8c03\u961f\u5217\uff0c`dp`\uff0c`ST` \u8868\n\n### \u601d\u8def\n\n\u9996\u5148 `dp` \u65b9\u7a0b\u662f $dp_i=\\min\\{dp_j+\\max\\{h_k\\}\\},\\sum\\limits_{k=j}^i w_k \\le m,j<k\\le i$\u3002\n\n\u8003\u8651\u53ef\u4ee5\u8f6c\u79fb\u5230 $dp_i$ \u7684\u4e24\u4e2a\u72b6\u6001 $dp_j+\\max\\{h_{j+1},h_{j+2}...h_i\\}$ \u548c $dp_{j+1}+\\max\\{h_{j+2},h_{j+3}...h_i\\}$\u3002\u663e\u7136 $dp_{j+1}\\ge dp_j$\uff0c\u6240\u4ee5 $dp_{j+1}$ \u80fd\u4f18\u4e8e $dp_j$ \u7684\u60c5\u51b5\u53ea\u6709 $\\max\\{h_{j+2},h_{j+3}...h_i\\}<\\max\\{h_{j+1},h_{j+2}...h_i\\}$\uff0c\u6240\u4ee5 $h_{j+1}$ \u4e3a $\\max\\{h_{j+1},h_{j+2}...h_i\\}$ \u65f6\u624d\u53ef\u80fd\u53d6 $dp_{j+1}+\\max\\{h_{j+2},h_{j+3}...h_i\\}$ \u3002\n\n\u63a5\u4e0b\u6765\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u4e00\u4e2a\u4e0b\u964d\u5e8f\u5217\uff0c\u5f39\u51fa\u8fc7\u671f\u4e0b\u6807\u3002\u6211\u4eec\u8bb0 $left_i$ \u4f7f $w_{left_i}+w_{left_i+1}...+w_i\\le m$ \u4e14 $w_{left_i-1}+w_{left_i}...+w_i>m$\uff0c\u5c0f\u4e8e $left_i$ \u7684\u4e0b\u6807\u53ef\u4ee5\u76f4\u63a5\u5f39\u51fa\u3002 $left_i$ \u53ef\u4ee5\u7528\u524d\u7f00\u548c\u7ef4\u62a4\u3002\u63a5\u4e0b\u6765\u5bf9\u6bcf\u4e2a\u5355\u8c03\u961f\u5217\u4e2d\u7684\u4e0b\u6807\u4e0e ${left_i}$\u66f4\u65b0\uff0c\u66f4\u65b0\u4e2d\u6c42 $h$ \u7684\u533a\u95f4\u6700\u5927\u503c\u53ef\u4ee5\u7528 `ST` \u8868\u5bb9\u6613\u5730\u7ef4\u62a4\u3002\n\n#### Update on 2022-10-3\n\n\u8fd9\u91cc\u5c31\u7ed3\u675f\u4e86\uff1f\u4e0d\uff01\n\n\u611f\u8c22 [@Sham_Devour](https://www.luogu.com.cn/user/365542) \u7684\u95ee\u9898\uff0c\u627e\u5230\u4e86\u8fd9\u4e2a\u505a\u6cd5\u7684\u9519\u8bef\u3002\n\n\u57fa\u4e8e\u968f\u673a\u6570\u5217\u7684\u5355\u8c03\u961f\u5217\u671f\u671b\u957f\u5ea6\uff0c\u8fd9\u4e2a\u505a\u6cd5\u5728\u5e73\u5747\u60c5\u51b5\u4e0b\u662f $\\Theta(n\\log n)$ \u7684\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u6784\u9020\u4e00\u4e2a\u9012\u51cf\u7684\u3001\u5bbd\u5ea6\u5168\u4e3a $1$ \u7684\u5e8f\u5217\u8ba9\u5355\u8c03\u961f\u5217\u957f\u5ea6\u53d8\u6210 $\\Theta(n)$ \u6765\u5361\u6389\u8fd9\u4e2a\u505a\u6cd5\u3002\n\n\u8fd9\u4e2a\u6570\u636e\u6709\u70b9\u592a\u6c34\u4e86\u2026\u2026\u8d21\u732e\u4e00\u4e2a\u6570\u636e\u751f\u6210\u5668\n\n```cpp\n#include <stdio.h>\n#include <stdlib.h>\n#define lld long long\ninline unsigned int randint() { return (rand() << 16) | rand(); }\ninline unsigned lld randlld() { return ((1ll * randint()) << 32) | randint(); }\ninline lld random(lld l, lld r) { return randlld() % (r - l + 1) + l; }\nint main() {\n\tint n = 100000;\n\tprintf(\"%d 1000000000\\n\", n);\n\tfor (int i = 1; i <= n; ++ i) printf(\"%lld %lld\\n\", n - i + 1, 1);\n}\n```\n\n\u6240\u4ee5\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u4e0b\u964d\u5e8f\u5217\u4e4b\u540e\uff0c\u6bcf\u6b21\u627e\u5230\u524d\u9762\u7b2c\u4e00\u4e2a\u6bd4\u5f53\u524d\u70b9\u66f4\u5927\u7684\u70b9\uff0c\u7528\u7ebf\u6bb5\u6811\u8fdb\u884c\u533a\u95f4\u4fee\u6539\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n\u6700\u540e\u8d34\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#define lld long long\nusing namespace std;\nconst int N = 100010;\nint n, m;\nlld w[N], h[N];\nlld sum[N];\nstruct node {\n\tint l, r;\n\tlld val, ans, tag;\n} tr[N << 2];\ninline void pushdown(int k) {\n//\tprintf(\"pushdown %d\\n\", k);\n\ttr[k << 1].tag = tr[k].tag;\n\ttr[k << 1 | 1].tag = tr[k].tag;\n\ttr[k].tag = 0;\n\ttr[k << 1].ans = tr[k << 1].val + tr[k << 1].tag;\n\ttr[k << 1 | 1].ans = tr[k << 1 | 1].val + tr[k << 1 | 1].tag;\n}\ninline void pushup(int k) {\n\ttr[k].val = min(tr[k << 1].val, tr[k << 1 | 1].val);\n\ttr[k].ans = min(tr[k << 1].ans, tr[k << 1 | 1].ans);\n}\ninline void build(int k, int l, int r) {\n\ttr[k].l = l, tr[k].r = r;\n\tif (l == r) {\n\t\ttr[k].ans = 0x3f3f3f3f3f3f3f3fll;\n\t\ttr[k].val = 0x3f3f3f3f3f3f3f3fll;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(k << 1, l, mid);\n\tbuild(k << 1 | 1, mid + 1, r);\n\tpushup(k);\n}\ninline void modify(int k, int p, lld x) {\n\tif (tr[k].l == tr[k].r) {\n\t\ttr[k].val = x;\n\t\ttr[k].ans = x + tr[k].tag;\n\t\treturn;\n\t}\n\tif (tr[k].tag) pushdown(k);\n\tint mid = (tr[k].l + tr[k].r) >> 1;\n\tif (p <= mid) modify(k << 1, p, x);\n\telse modify(k << 1 | 1, p, x);\n\tpushup(k);\n}\ninline lld query(int k, int l, int r) {\n\tif (l <= tr[k].l && tr[k].r <= r) {\n//\t\tprintf(\"tr[%d]:%d~%d\\n\", k, tr[k].l, tr[k].r);\n//\t\tprintf(\"tr[%d].tag = %lld\\n\", k, tr[k].tag);\n//\t\tprintf(\"tr[%d].val = %lld\\n\", k, tr[k].val);\n//\t\tprintf(\"tr[%d].ans = %lld\\n\", k, tr[k].ans);\n//\t\tprintf(\"Query %d(%d~%d) %d~%d:%lld\\n\", k, tr[k].l, tr[k].r, l, r, tr[k].ans);\n\t\treturn tr[k].ans;\n\t}\n\tif (tr[k].tag) pushdown(k);\n\tint mid = (tr[k].l + tr[k].r) >> 1;\n\tlld ans = 0x3f3f3f3f3f3f3f3fll;\n\tif (l <= mid) ans = min(ans, query(k << 1, l, r));\n\tif (mid < r) ans = min(ans, query(k << 1 | 1, l, r));\n\treturn ans;\n}\ninline void modify2(int k, int l, int r, lld x) {\n\tif (l <= tr[k].l && tr[k].r <= r) {\n\t\ttr[k].tag = x;\n\t\ttr[k].ans = tr[k].val + tr[k].tag;\n//\t\tprintf(\"tr[%d]:%d~%d\\n\", k, tr[k].l, tr[k].r);\n//\t\tprintf(\"tr[%d].tag = %lld\\n\", k, tr[k].tag);\n//\t\tprintf(\"tr[%d].val = %lld\\n\", k, tr[k].val);\n//\t\tprintf(\"tr[%d].ans = %lld\\n\", k, tr[k].ans);\n\t\treturn;\n\t}\n\tif (tr[k].tag) pushdown(k);\n\tint mid = (tr[k].l + tr[k].r) >> 1;\n\tif (l <= mid) modify2(k << 1, l, r, x);\n\tif (mid < r) modify2(k << 1 | 1, l, r, x);\n\tpushup(k);\n//\tprintf(\"tr[%d]:%d~%d\\n\", k, tr[k].l, tr[k].r);\n//\tprintf(\"tr[%d].tag = %lld\\n\", k, tr[k].tag);\n//\tprintf(\"tr[%d].val = %lld\\n\", k, tr[k].val);\n//\tprintf(\"tr[%d].ans = %lld\\n\", k, tr[k].ans);\n}\ninline int findpre(int x) {\n\tint l = 0, r = x, ans;\n\twhile (l <= r) {\n\t\tint mid = (l + r) >> 1;\n\t\tif (sum[x] - sum[mid] <= m){\n\t\t\tans = mid;\n\t\t\tr = mid - 1;\n\t\t} else l = mid + 1;\n\t}\n\treturn ans;\n}\nint head, tail, q[N << 1];\nvoid push(int x) {\n    while (head <= tail && h[q[tail]] < h[x]) -- tail;\n\tmodify2(1, head <= tail ? (q[tail] + 1) : 1, x, h[x]);\n    q[++ tail] = x;\n}\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; ++ i) {\n\t\tscanf(\"%lld%lld\", h + i, w + i);\n\t\tsum[i] = sum[i - 1] + w[i];\n\t}\n\tbuild(1, 1, n + 1);\n\tmodify(1, 1, 0);\n\tint mn = 0;\n\thead = 1, tail = 1;\n\tq[head] = 0;\n\tlld res;\n\tfor (int i = 1; i <= n; ++ i) {\n\t\tpush(i);\n\t\tres = query(1, findpre(i) + 1, i);\n\t\tmodify(1, i + 1, res);\n\t}\n\tprintf(\"%lld\\n\", res);\n}```",
        "postTime": 1625117876,
        "uid": 228486,
        "name": "SunsetSamsara",
        "ccfLevel": 7,
        "title": "P1295 [TJOI2011]\u4e66\u67b6 \u9898\u89e3"
    },
    {
        "content": "\u6765\u4e00\u53d1\u597d\u60f3\u7684\u9898\u89e3\uff1f\uff08\n\n\u8f6c\u79fb\u65b9\u7a0b\u5f88\u597d\u63a8\uff0c\u662f\n\n$$dp_i =\\min (dp_{j-1}+\\max_{k=j}^i h_k(1\\le j,\\sum_{k=j}^i h_k\\le m))$$\n\n\u56e0\u4e3a\u8fd9\u4e2a $h_i$ \u90fd\u662f\u6b63\u6574\u6570\uff0c\u6240\u4ee5 $j$ \u53ea\u80fd\u5728 $[p,i]$ \u8303\u56f4\u5185\uff0c$p$ \u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u4e8c\u5206\u5f97\u5230\u3002\n\n\u7136\u540e\u731c\u6d4b\u8fd9\u4e2a $\\max_{k=j}^i h_k$ \u7684\u53d6\u503c\u53ef\u80fd\u6bd4\u8f83\u5c11\uff0c\u56e0\u4e3a\u662f\u5355\u8c03\u7684\u6240\u4ee5\u4e5f\u53ef\u4ee5\u4e8c\u5206\u51fa\u6bcf\u4e2a\u53d6\u503c\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u8fd9\u91cc\u53ef\u4ee5\u5957\u4e00\u4e2a ST \u8868\u3002\n\n\u5173\u4e8e\u4ed6\u7684\u53d6\u503c\u4e2a\u6570\uff0c\u4e0d\u59a8\u4ece\u8003\u8651 hack \u7684\u65b9\u9762\u5165\u624b\uff1a\n\n\u4e3a\u4e86\u8ba9\u53d6\u503c\u5c3d\u91cf\u591a\uff0c\u80af\u5b9a\u6784\u9020\u4e00\u7ec4\u9012\u51cf\u7684\u5e8f\u5217\uff0c\u8fd9\u662f\u6700\u4f18\u7684\u3002\u56e0\u4e3a\u8fd9\u6837\u65e2\u80fd\u8ba9\u4e0d\u540c\u7684\u503c\u8fbe\u5230\u4e0a\u754c\uff0c\u53c8\u80fd\u8ba9\u548c\u5c3d\u91cf\u5c0f\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6839\u636e\u7b49\u5dee\u6570\u5217\u6c42\u548c\u7684\u7ecf\u9a8c\u6211\u4eec\u4f9d\u7136\u53d1\u73b0\u8fd9\u6837\u6784\u9020\u7684\u5e8f\u5217\u957f\u5ea6\u662f $O(\\sqrt m)$ \u7ea7\u522b\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u540c\u7684\u53d6\u503c\u4e2a\u6570\u6700\u591a\u662f $O(\\sqrt m)$ \u4e2a\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u5206\u522b\u8f6c\u79fb\uff0c\u8bbe\u8fd9\u4e00\u6bb5\u7684 $h$ \u7684\u6700\u5927\u503c\u4e3a $maxh$\uff0c\u518d\u628a\u5b83\u63d0\u51fa\u6765\uff0c\u8f6c\u79fb\u65b9\u7a0b\u5c31\u53d8\u6210\u4e86\n\n$$dp_i =\\min (dp_{j-1})+maxh$$\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u518d\u7528\u4e00\u4e2a ST \u8868\u7ef4\u62a4\u4e86\uff0c\u8981\u4f7f\u7528\u4e00\u4e2a trick \u5c31\u662f\u52a8\u6001\u4ece\u672b\u5c3e add \u7684 ST \u8868\u3002\n\n\u603b\u590d\u6742\u5ea6 $O(n\\sqrt m \\log n)$\uff0c\u5f53\u7136\u8fd9\u662f\u4e0a\u754c\uff0c\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n \\log^2 n)$\uff0c\u81ea\u8bc1\u4e0d\u96be\u3002\n\n~~\u66b4\u529b\u671f\u671b\u590d\u6742\u5ea6\u8fd8 $O(n)$ \u5462~~",
        "postTime": 1613032897,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1295 \u3010[TJOI2011]\u4e66\u67b6\u3011"
    },
    {
        "content": "\n\n### \u3010\u6742\u8a00\u3011\uff1a\n\n\u5b66\u957f\u8bb2\u7684\u9898\uff0c\u7b97\u662f\u505a\u4e2a\u89e3\u9898\u62a5\u544a\u3002\n\n\u5982\u679c\u53ea\u662f\u6309\u716730\u5206\u7684\u6253\u6cd5\u7684\u8bdd\uff0c\u53ef\u4ee5\u62ff\u523060\u5206\uff0c\u90a3\u4e48\u6309\u7406\u6210\u7ae0\uff0c\u5982\u679c\u6211\u5f00$O_2$\u5462\uff1f\u597d\u5bb6\u4f19\uff0c\u5361\u8fc7\u53bb\u4e86,\u4ee3\u7801\u5728\u540e\u9762\u653e\n\n### \u3010\u72b6\u6001\u8bbe\u8ba1\u3011\uff1a\n\u6211\u4eec\u8bbe$f_{i}$\u8868\u793a\u5df2\u7ecf\u653e\u597d\u4e86i\u672c\u4e66\u7684\u6700\u4f18\u89e3\n### \u3010\u72b6\u6001\u8f6c\u79fb\u3011\uff1a\n\u9996\u5148\u8fd9\u4e2a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u662f\u5f88\u597d\u63a8\u5f97\u3002\n$f_{i} = f_{j-1} + \\max\\limits_{sum_{i}-sum_{j} \\leq m} h_{k}$\u5176\u4e2d$k \\in [i,j]$,\u90a3\u4e48\u4f60\u5c31\u62ff\u5230\u4e8660\u5206\u7684\u9ad8\u5206 ~~\uff0c\u606d\u559c~~\n### \u3010\u4f18\u5316\u3011\uff1a\n\u771f\u7684\uff0c\u5f88\u795e\u5947\uff0c\u8003\u573a\u4e0a\u6253\u5b8c\u8dd1\u5c31\u884c\u4e86\uff0c$DP$\u7684\u4f18\u5316\u771f\u7684\u633a\u2026\u2026\uff08\u597d\uff09\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u6240\u6c42\u89e3\u7684\u5c31\u662f$max\\ h_i$,\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u53d6\u7684\u5f97$h_i$\u4e00\u5b9a\u4e0d\u4f1a\u589e\u52a0\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c$h_i$\u4e00\u5b9a\u4f1a\u9012\u51cf\uff08\u975e\u4e25\u683c\uff09\n\n\u6211\u4eec\u5728\u53d6\u5f97$h_i$\u7684\u65f6\u5019\u53cd\u6b63\u5c31\u90a3\u4e00\u4e2a\u533a\u95f4\uff0c\u53d6\u5f97\u7684\u4fbf\u80af\u5b9a\u4e0d\u4f1a\u662f\u589e\u52a0\u7684\u4e86\uff1b\n\n\u540c\u65f6\u6211\u4eec\u4e5f\u53d1\u73b0\uff0cf_{i-1}\u662f\u5355\u8c03\u4e0d\u964d\u7684\u3002\n\n\u90a3\u4e48\u600e\u4e48\u4f18\u5316\uff1f\n\n\u6211\u9009\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\uff0c\u56e0\u4e3a\u6211\u7684\u5355\u8c03\u961f\u5217\u2026\u2026~~\uff08\u5f88\u597d\uff0c\u7ec3\u4e00\u4e0b\u7ebf\u6bb5\u6811~~,\n\n\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u7684\u627e\u5230$h_{max}$\u7684\u65f6\u5019\u90fd\u8fdb\u884c\u4e86$j \\ -> \\ i $\u8fdb\u884c\u4e86\u679a\u4e3e\uff0c\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u5728\u8fd9\u91cc\u8fdb\u884c\u4fee\u6539\u3002\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\uff0c\u7528\u7ebf\u6bb5\u6811\u53bb\u7ef4\u62a4$h_{max}$\u5c31\u597d\u4e86\n\n\u540c\u65f6\uff0c\u5bf9\u4e8e$f_{i-1}$\u7684\u67e5\u8be2\uff0c\u5c31\u7528\u533a\u95f4\u67e5\u8be2\u53d6\u6700\u5c0f\u503c\u5373\u53ef\n\n### \u3010\u4ee3\u7801\u5b9e\u73b0\u3011\uff1a\n\n1.\u9884\u5904\u7406\n\n2.\u5efa\u6811\n\n3.\u8be2\u95ee\u6700\u5c0f\u503c\uff08$f_{i}$\uff09\n\n4.\u66f4\u65b0\uff0c\u4e5f\u5c31\u662f\u52a0\u4e0a$h_{max}$\n\n5.\u5355\u70b9\u4fee\u6539\u3002\u66f4\u65b0$f_j$\n\n6.$return \\ 0$\n\n### \u3010code\u3011\n```\n/*\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define ll long long\n#define N 100010\nusing namespace std;\nconst int mod = 1e9 + 7;\nconst int inf = 0x3f3f3f3f;\nint f[N], a[N], n, m;\nll sum[N];\ninline int read() \n{\n  char c = getchar(); int x = 0, f = 1;\n  for ( ; !isdigit(c); c = getchar()) if (c == '-') f = -1;\n  for ( ; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n  return x * f;\n}\nsigned main() \n{\n  n = read(), m = read();\n  for (int i = 1; i <= n; i++) \n    a[i] = read(), sum[i] = sum[i - 1] +  a[i];\n  \tmemset(f, inf, sizeof(f));\n\tf[0] = 0;\n   for (int i = 1; i <= n; i++) \n   {\n    int maxn = -1;\n    for (int k = i; k >= 1; k--) \n\t{\n      maxn = max(maxn, a[k]);\n      if (sum[i] - sum[k - 1] <= m) \n      {\n        f[i] = min(f[i], f[k - 1] + maxn); \t\n\t  }\n      else break;\n    }\n  }\n  cout << f[n] ;\n  return 0;\n}\n\n*/\n\u8fd9\u662f\u6ca1\u6709\u4f18\u5316\u7684\uff0c\u4e0b\u9762\u662f\u7ebf\u6bb5\u6811\u4f18\u5316\u4e86\u7684\n\u4e0a\u65b9\u4e3a\u6211\u5b66\u957f \u7075\u4e4c\u8def\u7a7a\uff0c\u4ed6\u7ed9\u6211\u4eec\u8bb2\u7684\u8fd9\u9053\u9898\uff0c\u8fd8\u662f_Desnity\u7528\u4ed6\u9898\u89e3\u7ed9\u6211\u4eec\u8bb2\u7684\u9898\uff0c\u53cd\u6b63\u5dee\u4e0d\u591a\u4e86\uff0c\u795e\u4f3c\n#include <iostream>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <string>\n#include <algorithm>\n#define int long long\nusing namespace std;\nconst int maxn = 1e5+10;\nconst long long inf = 1e10;\ninline int read()\n{\n\tint x=0,f=1;char ch = getchar();\n\twhile(!isdigit(ch)) { if(ch == '-') f = -1 ;ch = getchar();}\n\twhile(isdigit(ch)) { x = x * 10 + ch - '0' ;ch = getchar(); }\n\treturn x * f;\n}\nstruct Tree\n{\n\tint left,right,f,ans,flag;\n}tree[maxn<<2];\nint h[maxn],n,m;\nint f[maxn],sum[maxn];\nint sta[maxn],pre[maxn],top; \nvoid pushup(int now)\n{\n\ttree[now].f = min(tree[now<<1].f,tree[now<<1|1].f);\n\ttree[now].ans = min(tree[now<<1].ans,tree[now<<1|1].ans);\t\n}\nvoid pushdown(int now)\n{\n\ttree[now<<1].ans = tree[now<<1].f + tree[now].flag;\n\ttree[now<<1|1].ans = tree[now<<1|1].f + tree[now].flag;\n\ttree[now<<1].flag = tree[now<<1|1].flag = tree[now].flag;\n\ttree[now].flag = inf;\n}\nvoid build(int now,int left ,int right)\n{\n\ttree[now].left = left ;\n\ttree[now].right = right;\n\tif(left == right)\n\t{\n\t\ttree[now].f = tree[now].ans = tree[now].flag = inf;\n\t\treturn ;\n\t}\n\tint mid = left + right >> 1;\n\tbuild(now<<1 , left , mid);\n\tbuild(now<<1|1 , mid+1 , right);\n\tpushup(now);\n} \nint query(int now,int left,int right)\n{\n\tif(tree[now].left >= left && tree[now].right <=right)\n\t{\n\t\treturn tree[now].ans;\n\t}\n\tif(tree[now].flag != inf)\n\t{\n\t\tpushdown(now);\n\t}\n\tint mid = tree[now].left + tree[now].right >> 1;\n\tint ret = inf ;\n\tif(left <= mid)\n\t{\n\t\tret = min(ret , query(now<<1,left,right));\t\n\t}\n\tif(mid < right)\n\t{\n\t\tret = min(ret , query(now<<1|1,left,right));\n\t}\n\treturn ret ;\n}\nvoid updata(int now,int left,int right,int val)\n{\n\tif(tree[now].left >= left &&tree[now].right <= right)\n\t{\n\t\ttree[now].ans = tree[now].f + val ;\n\t\ttree[now].flag = val ;\n\t\treturn ;\n\t}\n\tif(tree[now].flag != inf)\n\t{\n\t\tpushdown(now);\n\t}\n\tint mid = tree[now].left + tree[now].right >> 1;\n\tif(left <= mid)\n\t{\n\t\tupdata(now<<1,left,right,val);\n\t}\n\tif(mid < right)\n\t{\n\t\tupdata(now<<1|1,left,right,val);\n\t}\n\tpushup(now);\n}\nvoid modify(int now,int pos)\n{\n\tif(tree[now].left == tree[now].right)\n\t{\n\t\ttree[now].ans = inf;\n\t\ttree[now].f = f[pos - 1] ;\n\t\treturn ;\n\t}\n\tif(tree[now].flag != inf) \n\t{\n\t\tpushdown(now);\n\t}\n\tint mid = tree[now].left + tree[now].right >> 1;\n\tif(pos <= mid)\n\t{\n\t\tmodify(now<<1,pos);\n\t}\n\telse \n\t{\n\t\tmodify(now<<1|1,pos);\n\t}\n\tpushup(now);\n}\nsigned main()\n{\n\tn = read() , m = read() ;\n\tfor(int i = 1 ; i <= n ; i++)\n\t{\n\t\th[i] = read();\n\t\tsum[i] = sum[i-1] + h[i];\n\t}\n\tsta[++top] = 1;\n\tfor(int i = 2 ; i <= n ; i++)\n\t{\n\t\twhile(top &&h[sta[top]] < h[i]) top --;\n\t\tif(top) pre[i] = sta[top];\n\t\tsta[++top] = i;\n\t}\n\tbuild(1,1,n);\n\tfor(int i = 1 ; i <= n ; i++)\n\t{\n\t\tmodify(1,i);\n\t\tif(pre[i] < i)\n\t\t{\n\t\t\tupdata(1 , pre[i]+1 , i , h[i]);\n\t\t}\n\t\tint l = lower_bound(sum , sum + i + 1,sum[i] - m) - sum; \n\t\tif(l < i)\n\t\t{\n\t\t\tf[i] = query(1,l + 1, i);\n\t\t}\n\t}\n\tprintf(\"%lld\",f[n]);\n\treturn 0;\n} \n```\n",
        "postTime": 1607597747,
        "uid": 174683,
        "name": "\u7ea2\u5c18\u4ed9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1295 \u3010[TJOI2011]\u4e66\u67b6\u3011"
    },
    {
        "content": "### \u7ebf\u6bb5\u6811+\u4e8c\u5206\n\n\uff08\u6570\u636e\u8303\u56f4\u53ea\u67091e5\uff0c\u4e3a\u4f55\u4e0d\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u6109\u5feb\u5730\u83bd\u8fc7\u53bb\u5462qwq\n\n\u9996\u5148\u5206\u6790\u9898\u610f\uff0c\u5f97\u5230DP\u65b9\u7a0b\n$$\nf_i=min(f_{j-1}+max(h_j\\sim h_i))\\ \\ (sum_{j\\sim i}\\le m)\n$$\n\u7528\u7ebf\u6bb5\u6811\u5b58$zn_j=f_{j-1}+max(h_j\\sim h_i))$\uff0c\u6c42$f_i$\u76f4\u63a5\u533a\u95f4\u6700\u5c0f\u503c\u5c31\u884c\u4e86\n\n\u8003\u8651\u600e\u4e48\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4$zn$\u7684\u503c\n\n\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u5b58\u8fd9\u4e2a\u533a\u95f4$zn$\u7684\u6700\u5c0f\u503c\uff0c$h$\u7684\u6700\u5927\u503c\u4ee5\u53ca$f$\u7684\u6700\u5927\u503c\n\n\u6bcf\u5f53$i$\u5411\u53f3\u79fb\u52a8\u4e00\u4f4d\uff0c\u5148\u8003\u8651\u5408\u6cd5\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u4f1a\u4e0d\u4f1a\u56e0\u4e3a$sum_{j\\sim i}>m$\u5411\u53f3\u79fb\u52a8\u3002\u7136\u540e\u56e0\u4e3a\u53f3\u7aef\u52a0\u5165\u4e86\u4e2a$h_i$\u5bfc\u81f4\u4e00\u4e9b$j$\u7684$max(h_j\\sim h_i)$\u53d8\u5927\uff0c\u53ef\u4ee5\u53d1\u73b0\u4ece \u6700\u9760\u53f3\u7684 \u6ee1\u8db3$h_j\\ge h_i$\u7684\u4f4d\u7f6e\u5f80\u53f3\uff0c\u8fd9\u4e2a\u503c\u90fd\u4f1a\u53d8\u4e3a$h_i$\uff0c\u53ef\u4ee5\u4e8c\u5206\u627e\u51fa\u90a3\u4e2a\u4f4d\u7f6e\u7136\u540e\u5728\u7ebf\u6bb5\u6811\u4e0a\u533a\u95f4\u4fee\u6539$h$\u7684\u503c\u3002\u6700\u540e\u522b\u5fd8\u4e86\u628a$zn_{i+1}$\u8d4b\u503c\u4e3a$f_i+h_{i+1}$\u3002\n\n\u4ee3\u7801\u5199\u8d77\u6765\u4e5f\u975e\u5e38\u7b80\u5355\n\n```cpp\n#include<map>\n#include<cmath>\n#include<ctime>\n#include<queue>\n#include<vector>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define qmin(x,y) (x=min(x,y))\n#define qmax(x,y) (x=max(x,y))\n#define mp(x,y) make_pair(x,y)\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\ninline int read(){\n\tint ans=0,fh=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-') fh=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t\tans=ans*10+ch-'0',ch=getchar();\n\treturn ans*fh;\n}\nconst int maxn=1e5+100;\nconst int inf=0x7fffffff;\nint n,m,h[maxn],zn[maxn<<2],fn[maxn<<2],hx[maxn<<2],lz[maxn<<2];\n#define lc (o<<1)\n#define rc (o<<1|1)\ninline void paint(int o,int z){\n\thx[o]=z,zn[o]=fn[o]+z,lz[o]=z;\n}\ninline void pushdown(int o){\n\tif(!lz[o]) return;\n\tpaint(lc,lz[o]),paint(rc,lz[o]),lz[o]=0;\n}\ninline void updata(int o){\n\tfn[o]=min(fn[lc],fn[rc]);\n\thx[o]=max(hx[lc],hx[rc]);\n\tzn[o]=min(zn[lc],zn[rc]);\n}\ninline void revise(int o,int l,int r,int ql,int qr,int qz){\n\tif(ql==l&&qr==r){paint(o,qz);return;}\n\tint mid=l+r>>1;pushdown(o);\n\tif(ql<=mid) revise(lc,l,mid,ql,min(qr,mid),qz);\n\tif(qr> mid) revise(rc,mid+1,r,max(ql,mid+1),qr,qz);\n\tupdata(o);\n}\ninline int gethx(int o,int l,int r,int ql,int qr){\n\tif(ql==l&&qr==r) return hx[o];\n\tint mid=l+r>>1,Ans=0;pushdown(o);\n\tif(ql<=mid) qmax(Ans,gethx(lc,l,mid,ql,min(qr,mid)));\n\tif(qr> mid) qmax(Ans,gethx(rc,mid+1,r,max(ql,mid+1),qr));\n\treturn Ans;\n}\ninline int getzn(int o,int l,int r,int ql,int qr){\n\tif(ql==l&&qr==r) return zn[o];\n\tint mid=l+r>>1,Ans=inf;pushdown(o);\n\tif(ql<=mid) qmin(Ans,getzn(lc,l,mid,ql,min(qr,mid)));\n\tif(qr> mid) qmin(Ans,getzn(rc,mid+1,r,max(ql,mid+1),qr));\n\treturn Ans;\n}\ninline void insert(int o,int l,int r,int qd,int qf,int qh){\n\tif(l==r){fn[o]=qf,hx[o]=qh,zn[o]=qf+qh;return;}\n\tint mid=l+r>>1;pushdown(o);\n\tif(qd<=mid) insert(lc,l,mid,qd,qf,qh);\n\telse insert(rc,mid+1,r,qd,qf,qh);\n\tupdata(o);\n}\ninline int getlx(int l,int r,int z){\n\tint Ans=r+1,R=r;r++;\n\twhile(l<r){\n\t\tint mid=l+r>>1;\n\t\tif(gethx(1,1,n,mid,R)<z)//\u5982\u679c\u533a\u95f4h\u6700\u5927\u503c\u5c0f\u4e8eh_i\u7684\u8bdd \n\t\t\tAns=r=mid;\n\t\telse l=mid+1;\n\t}\n\treturn Ans;\n}\nint main(){\n//\tfreopen(\"nh.in\",\"r\",stdin);\n//\tfreopen(\"zhy.out\",\"w\",stdout);\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++) h[i]=read();\n\tint sum=0;insert(1,1,n,1,0,h[1]);\n\tfor(int l=1,r=1;r<=n;r++){\n\t\tsum+=h[r];while(sum>m) sum-=h[l++];//\u5224\u65ad\u5de6\u7aef\u70b9\u662f\u5426\u5e94\u8be5\u53f3\u79fb \n\t\tint x=getlx(l,r-1,h[r]);//\u4e8c\u5206\u627e\u5230\u6ee1\u8db3h_j>h_i\u7684\u6700\u53f3\u7684j \n\t\tif(x<r) revise(1,1,n,x,r-1,h[r]);//\u5c06\u5b83\u4eec\u7684h\u7edf\u4e00\u4fee\u6539\u4e3ah_i \n\t\tint fr=getzn(1,1,n,l,r);//\u6c42\u51faf_i \n\t\tif(r==n) printf(\"%d\\n\",fr);//\u8f93\u51fa \n\t\telse insert(1,1,n,r+1,fr,h[r+1]);//zn_{i+1}=f_i+h_{i+1} \n\t}\n\treturn 0;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n```\n",
        "postTime": 1560849019,
        "uid": 53421,
        "name": "nianheng",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1295 \u3010[TJOI2011]\u4e66\u67b6\u3011"
    },
    {
        "content": "\n\n[\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1295)\n\n### \u9898\u76ee\u5927\u610f\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $h$\uff0c\u8bf7\u5c06 $h$ \u5206\u6210\u82e5\u5e72\u6bb5\uff0c\u6ee1\u8db3\u6bcf\u6bb5\u6570\u5b57\u4e4b\u548c\u90fd\u4e0d\u8d85\u8fc7 $m$\uff0c\u6700\u5c0f\u5316\u6bcf\u6bb5\u7684\u6700\u5927\u503c\u4e4b\u548c\u3002\n\n### \u89e3\u9898\u601d\u8def\n\u9996\u5148\u5206\u6790\u9898\u610f\uff0c\u5f97\u5230\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$f_i=min(f_{j-1}+max(h_j\\sim h_i))\\ \\ (\\sum\\limits_{k=j}^i h_k\\leq m)$$\n\n\u7528\u7ebf\u6bb5\u6811\u5b58 $z_j=f_{j-1}+max(h_j\\sim h_i))$\u3002\n\n\u6c42$f_i$ \u76f4\u63a5\u533a\u95f4\u6700\u5c0f\u503c\u5c31\u884c\u4e86\u3002\n\n\u8003\u8651\u600e\u4e48\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4 $z$ \u7684\u503c\u3002\n\n\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u5b58\u8fd9\u4e2a\u533a\u95f4 $z$ \u7684\u6700\u5c0f\u503c\uff0c$h$ \u7684\u6700\u5927\u503c\u4ee5\u53ca $f$ \u7684\u6700\u5927\u503c\u3002\n\n\u6bcf\u5f53 $i$ \u5411\u53f3\u79fb\u52a8\u4e00\u4f4d\uff0c\u5148\u8003\u8651\u5408\u6cd5\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u4f1a\u4e0d\u4f1a\u56e0\u4e3a $\\sum\\limits_{k=j}^i h_k>m$ \u5411\u53f3\u79fb\u52a8\u3002\n\n\u7136\u540e\u56e0\u4e3a\u53f3\u7aef\u52a0\u5165\u4e86\u4e2a $h_i$ \uff0c\u53ef\u4ee5\u53d1\u73b0\u5728\u533a\u95f4 $[j,i]$ \u91cc\uff0c\u4ece\u6700\u9760\u5de6\u7684\u6ee1\u8db3 $h_x\\le h_i$ \u7684\u4f4d\u7f6e $x$ \uff0c\u533a\u95f4 $[x,i-1]$ \u7684 $h$ \u90fd\u4f1a\u53d8\u4e3a $h_i$\uff0c\u53ef\u4ee5\u4e8c\u5206\u627e\u51fa\u90a3\u4e2a\u4f4d\u7f6e\u7136\u540e\u5728\u7ebf\u6bb5\u6811\u4e0a\u533a\u95f4\u4fee\u6539 $h$ \u7684\u503c\u3002\n\n\u6700\u540e\u522b\u5fd8\u4e86\u628a\u63d2\u5165\u65b0\u7684 $z$ \uff0c$f$ \u548c $h$ \u3002\n\n### AC CODE\n```cpp\n#include <bits/stdc++.h>\n#define _ 100005\nusing namespace std;\n\nint n, m;\nint sum;\nint a[_];\n\ninline int read()\n{\n    int ans = 0, fh = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9')\n    {\n        if (ch == '-')\n            fh = -1;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9')\n        ans = ans * 10 + ch - '0', ch = getchar();\n    return ans * fh;\n}\n\nstruct Tree\n{\n    int z, f, h, lazy;\n} tr[_ << 2];\n\nvoid push_up(int o)\n{\n    tr[o].h = max(tr[o << 1].h, tr[o << 1 | 1].h);\n    tr[o].f = min(tr[o << 1].f, tr[o << 1 | 1].f);\n    tr[o].z = min(tr[o << 1].z, tr[o << 1 | 1].z);\n}\n\nvoid push_down(int o)\n{\n    if (tr[o].lazy)\n    {\n        tr[o << 1].h = tr[o].lazy;\n        tr[o << 1].z = tr[o << 1].f + tr[o].lazy;\n        tr[o << 1].lazy = tr[o].lazy;\n        tr[o << 1 | 1].h = tr[o].lazy;\n        tr[o << 1 | 1].z = tr[o << 1 | 1].f + tr[o].lazy;\n        tr[o << 1 | 1].lazy = tr[o].lazy;\n        tr[o].lazy = 0;\n    }\n}\n\ninline void insert(int o, int l, int r, int d, int qf, int qh)\n{\n    if (l == r)\n    {\n        tr[o].f = qf;\n        tr[o].h = qh;\n        tr[o].z = qf + qh;\n        return;\n    }\n    int mid = (l + r) >> 1;\n    push_down(o);\n    if (d <= mid)\n        insert(o << 1, l, mid, d, qf, qh);\n    else\n        insert(o << 1 | 1, mid + 1, r, d, qf, qh);\n    push_up(o);\n}\n\ninline void revise(int o, int l, int r, int ql, int qr, int qz)\n{\n    if (ql <= l && qr >= r)\n    {\n        tr[o].h = qz;\n        tr[o].z = tr[o].f + qz;\n        tr[o].lazy = qz;\n        return;\n    }\n    int mid = (l + r) >> 1;\n    push_down(o);\n    if (ql <= mid)\n        revise(o << 1, l, mid, ql, qr, qz);\n    if (qr > mid)\n        revise(o << 1 | 1, mid + 1, r, ql, qr, qz);\n    push_up(o);\n}\n\ninline int geth(int o, int l, int r, int ql, int qr)\n{\n    if (ql <= l && qr >= r)\n        return tr[o].h;\n    int mid = (l + r) >> 1;\n    int Ans = 0;\n    push_down(o);\n    if (ql <= mid)\n        Ans = max(Ans, geth(o << 1, l, mid, ql, qr));\n    if (qr > mid)\n        Ans = max(Ans, geth(o << 1 | 1, mid + 1, r, ql, qr));\n    return Ans;\n}\n\ninline int getz(int o, int l, int r, int ql, int qr)\n{\n    if (ql <= l && qr >= r)\n        return tr[o].z;\n    int mid = (l + r) >> 1;\n    int Ans = INT_MAX;\n    push_down(o);\n    if (ql <= mid)\n        Ans = min(Ans, getz(o << 1, l, mid, ql, qr));\n    if (qr > mid)\n        Ans = min(Ans, getz(o << 1 | 1, mid + 1, r, ql, qr));\n    return Ans;\n}\n\ninline int getl(int l, int r, int z)\n{\n    int Ans = r + 1;\n    int R = r;\n    r++;\n    while (l < r)\n    {\n        int mid = (l + r) >> 1;\n        if (geth(1, 1, n, mid, R) < z)\n            Ans = r = mid;\n        else\n            l = mid + 1;\n    }\n    return Ans;\n}\n\nsigned main()\n{\n    n = read();\n    m = read();\n    for (int i = 1; i <= n; i++)\n        a[i] = read();\n    insert(1, 1, n, 1, 0, a[1]);\n    for (int l = 1, r = 1; r <= n; r++)\n    {\n        sum += a[r];\n        while (sum > m)\n            sum -= a[l++];\n        int x = getl(l, r - 1, a[r]);\n        if (x < r)\n            revise(1, 1, n, x, r - 1, a[r]);\n        if (r == n)\n            cout << getz(1, 1, n, l, r) << endl;\n        else\n            insert(1, 1, n, r + 1, getz(1, 1, n, l, r), a[r + 1]);\n    }\n    return 0;\n}\n```",
        "postTime": 1627483660,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "P1295 [TJOI2011]\u4e66\u67b6"
    },
    {
        "content": "## \u203b\u9898\u76ee\u5206\u6790\n\n> \u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $h$\uff0c\u8bf7\u5c06 $h$ \u5206\u6210\u82e5\u5e72\u6bb5\uff0c\u6ee1\u8db3\u6bcf\u6bb5\u6570\u5b57\u4e4b\u548c\u90fd\u4e0d\u8d85\u8fc7 $m$\uff0c\u6700\u5c0f\u5316\u6bcf\u6bb5\u7684\u6700\u5927\u503c\u4e4b\u548c\u3002\n\n~~\u4f17\u6240\u5468\u77e5~~\uff0c\u4e0d\u4f1a\u505a\u7684\u9898\u76ee\u5c31 $DP$\u3002\u5176\u5b9e $DP$ \u65b9\u7a0b\u633a\u597d\u60f3\u7684\uff0c\u8bbe $f_i$ \u4e3a\u5230\u7b2c $i$ \u4e2a\u6570\uff0c\u5206\u4e3a\u82e5\u5e72\u6bb5\u6240\u9700\u8981\u7684\u6700\u5c0f\u4ee3\u4ef7\uff1b\u8bbe $sum_{i}$ \u4e3a$h$ \u7684\u524d\u7f00\u548c\u3002\u6839\u636e\u9898\u610f\u53ef\u4ee5\u5f97\u5230\u8f6c\u79fb\uff1a\n\n$$f_i=\\min\\limits_{sum_i-sum_j\\leq m}\\left(f_j+\\max\\limits_{k=j+1}^{i}h_k\\right)$$\n\n\u8fd9\u4e2a\u5f0f\u5b50\u6709\u5f88\u591a\u79cd\u5904\u7406\u65b9\u6cd5\uff0c\u6700\u7b80\u5355\u7684\u76f4\u63a5 $CDQ$ \u5c31\u53ef\u4ee5\u4e86\uff0c\u7ebf\u6bb5\u6811\u9898\u89e3\u533a\u7684\u5927\u4f6c\u4e5f\u8bb2\u8fc7\u4e86\uff0c\u6211\u7ffb\u63d0\u4ea4\u8bb0\u5f55\u597d\u50cf\u770b\u89c1\u4e86\u6709\u7528\u5806\u5199\u7684\u3002\u5982\u679c\u7528\u5806\u7684\u8bdd\uff0c\u662f\u6ca1\u6709\u8003\u8651\u597d\u672c\u9898\u7684\u5355\u8c03\u6027\u3002\n\n\u672c\u6587\u8981\u63d0\u7684\u662f\u9898\u89e3\u533a\u7684\u90a3\u4e2a $O(n)$ \u505a\u6cd5\u3002\u7531\u4e8e\u8fd9\u4f4d\u5927\u4f6c\u7684\u9898\u89e3\u6709\u4e00\u70b9\u4e45\u8fdc\uff0c\u610f\u601d\u6a21\u7cca\u4e0d\u6e05\uff0c\u7136\u540e\u8fd8\u6709\u8bc1\u660e\u6ca1\u7ed9\u51fa\uff0c\u56e0\u6b64\u672c\u6587\u91cd\u63d0\u3002\n\n~~\u8fd9\u79cd\u505a\u6cd5\u5927\u6982\u53ef\u4ee5\u7406\u89e3\u4e3a\u7528\u5355\u8c03\u6027\u5bf9\u5806\u4f18\u5316\u5427\u2026\u2026~~\n\n## \u203b\u6027\u8d28\u5206\u6790\n\n> \u5f15\u7406\u4e00\uff1a$\\max\\limits_{k=j+1}^{i}h_k$ \u4e2d\uff0c\u968f\u7740 $k$ \u7684\u589e\u5927\uff0c\u5176\u503c\u5355\u8c03\u4e0d\u589e\u3002\n\n- \u8bc1\u660e\u663e\u7136\uff0c\u8fd9\u8fb9\u4e0d\u518d\u8d58\u8ff0\u3002\n\n> \u5f15\u7406\u4e8c\uff1a$f$ \u5355\u8c03\u4e0d\u964d\u3002\n\n- \u8003\u8651\u4ece\u9898\u76ee\u672c\u8eab\u51fa\u53d1\uff0c\u7531\u4e8e\u591a\u5206\u4e00\u6bb5\u5fc5\u7136\u8981\u8ba9\u4ee3\u4ef7\u52a0\u4e0a\u672c\u6bb5\u6700\u5927\u503c\uff0c\u6b64\u65f6\u4f1a\u4f7f\u5f97 $f_i$ \u589e\u5927\uff1b\u82e5\u5f53\u524d\u7684\u6570 $h_i$ \u548c\u524d\u9762\u4e00\u6bb5\u5206\u5728\u4e00\u8d77\uff08\u6ee1\u8db3\u6761\u4ef6\u7684\u8bdd\uff09\uff0c\u5219 $f_i$ \u4e0e\u524d\u9762\u76f8\u540c\u3002\u56e0\u6b64 $f$ \u662f\u5355\u8c03\u4e0d\u964d\u7684\u3002\n\n\n\n~~\u53c2\u8003 CSP-S 2020 T4~~\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8f6c\u79fb\u5206\u6210\u4e24\u6bb5\u3002\n\n1\u3001\u5bf9\u4e8e\u4e00\u4e2a\u5408\u6cd5\u7684 $j$\uff0c$h_{j+1}\\leq \\left(\\max\\limits_{k=j+2}^{i}h_k\\right)$\uff0c\u5219 $\\left(\\max\\limits_{k=j+1}^{i}h_k\\right)=\\left(\\max\\limits_{k=j+2}^{i}h_k\\right)$\uff1b\u53c8\u56e0\u4e3a $f$ \u5355\u8c03\u4e0d\u964d\uff0c$f_j\\leq f_{j+1}$\u5373\u5bf9\u4e8e\u8f6c\u79fb $f_j+\\left(\\max\\limits_{k=j+1}^{i}h_k\\right)\\leq f_{j+1}+\\left(\\max\\limits_{k=j+2}^{i}h_k\\right)$ \u3002\u6240\u4ee5\u6b64\u65f6\u4ece $j$ \u8f6c\u79fb\uff08$j+1$ \u5230 $i$ \u4e3a\u4e00\u6bb5\uff09\u6bd4\u4ece $j+1$ \u8f6c\u79fb\u66f4\u4f18\u3002\n\n\u90a3\u4e48\u6b64\u65f6\u5bf9\u4e8e $h$ \u7684\u4e00\u4e2a\u6781\u5c0f\u503c\u5c31\u53ef\u80fd\u6210\u4e3a\u8f6c\u79fb\u7684\u6700\u4f18\u89e3\u3002\u53c8\u7531\u4e8e $h$ \u5355\u8c03\u4e0d\u589e\uff0c\u6240\u4ee5\u53ef\u4ee5\u5bf9 $h$ \u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u7684\u961f\u5217\uff0c**\u961f\u5c3e**\u5373\u8f6c\u79fb\u7684\u53ef\u80fd\u6700\u4f18\u70b9\u3002\n\n2\u3001\u5bf9\u4e8e\u4e00\u4e2a\u5408\u6cd5\u7684 $j$\uff0c$h_{j+1}>\\left(\\max\\limits_{k=j+2}^{i}h_k\\right)$\uff0c\u53ef\u4ee5\u5305\u542b\u5728\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u5373\u6211\u4eec\u5047\u8bbe\u5355\u8c03\u961f\u5217 $q$\uff0c\u8bbe\u5de6\u53f3\u7aef\u70b9 $l,r$\uff0c\u5219\u6700\u4f18\u7684\u8f6c\u79fb\u4f1a\u5728 $q_{l,l+1,\\dots,r}$ \u4e4b\u4e2d\uff1b\u4e5f\u5373 $h_{q_l}>h_{q_{l+1}}>\\dots>h_{r}$ \u5f53\u4e2d\u8f6c\u79fb $f_i$\uff08\u4e0d\u53d6\u7b49\u662f\u56e0\u4e3a\u53d6\u7b49\u7684\u60c5\u51b5\u4e00\u5b9a\u9760\u524d\u7684\u66f4\u4f18\uff09\u3002\n\n\u5177\u4f53\u7684\u8bc1\u660e\u5927\u6982\u662f\u8fd9\u6837\u7684\uff1a\u7b2c\u4e00\u79cd\u60c5\u51b5\u7ef4\u62a4\u7684\u662f\u51fd\u6570\u7684\u6781\u5c0f\u503c\uff0c\u5176\u4e2d\u7a81\u51fa\u7684\u90e8\u5206\u4f1a\u88ab\u5305\u542b\u5728\u4e24\u4e2a\u76f8\u90bb\u7684\u6781\u5c0f\u503c\u5f53\u4e2d\uff0c\u4f46\u8fd9\u79cd\u8f6c\u79fb**\u5bf9\u961f\u5217\u4e2d\u7684 $q_l$ \u4e0d\u9002\u7528**\uff01\n\n\u56e0\u4e3a\u8fd9\u79cd\u60c5\u51b5\u5373\u4ece $q_l$ \u8f6c\u79fb\u5230 $i$\uff0c\u90a3\u4e48 $q_l$ \u4e4b\u524d\u7684\u4f4d\u7f6e\u5e94\u5f53\u4e3a\u7b2c\u4e00\u4e2a\u4f4d\u7f6e $st$ \u4f7f\u5f97 $h_i-h_{st}>m$\uff0c$f_i$ \u5c31\u66f4\u65b0\u4e3a $f_{st}+h_{ql}$\uff0c\u5426\u5219\u5c31\u8d8a\u754c\u4e86\u3002\n\n\u4f46\u7ef4\u62a4\u5355\u8c03\u961f\u5217\u7684\u65f6\u5019\u5c31\u53ef\u80fd\u4ea7\u751f\u4e00\u4e9b\u610f\u5916\u4f7f\u5f97\u4e00\u4e9b\u503c\u6ca1\u88ab\u66f4\u65b0\u5230\u3002\u6240\u4ee5\u53ef\u4ee5\u7ef4\u62a4\u5355\u8c03\u6808\u9632\u6b62\u6f0f\u6389\u60c5\u51b5\u3002\u5177\u4f53\u662f\u8fd9\u6837\u7684\uff0c\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u6709\u53ef\u80fd\u76f4\u63a5 $h_{j+1}$ \u81ea\u5df1\u4f5c\u4e3a\u4e00\u6bb5\u65b0\u7684\u6bb5\uff0c\u5e76\u5305\u542b\u4e4b\u540e\u7684\u6570\uff0c\u4e5f\u5c31\u4f1a\u5b58\u5728\u4e00\u6bb5\u8fde\u7eed\u76f8\u7b49\u7684 $f$\uff1b\u6216\u8005\u628a\u4e4b\u524d\u5e76\u4f5c\u4e00\u6bb5\uff0c\u8fd9\u5e76\u4e0d\u4f1a\u5f71\u54cd\u8f6c\u79fb\u3002\n\n\n- \u7efc\u4e0a\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u5355\u8c03\u4e0b\u964d\u7684\u4e00\u4e2a\u5355\u8c03\u961f\u5217\uff0c\u7528\u6765\u7ef4\u62a4\u4e0a\u5f0f\u4e2d\u7684 $\\max$ \u503c\uff1b\u7136\u540e\u7ef4\u62a4 $f$ \u7528\u5355\u8c03\u6808\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u590d\u6742\u5ea6\u53ef\u4ee5\u4ece\u961f\u5217\u4e2d\u70b9\u5f00\u59cb\u5411\u4e24\u7aef\u7ef4\u62a4\u4e24\u4e2a\u5355\u8c03\u4e0b\u964d\u7684\u6808\u7528\u4e8e\u4fdd\u5b58 $f$\u3002\u66f4\u65b0\u65f6\uff0c\u5982\u679c\u961f\u5217\u7aef\u70b9\u8d85\u8fc7\u4e86\u539f\u5148\u7684\u4e2d\u70b9\uff0c\u53ef\u4ee5\u8003\u8651\u91cd\u6784\u4e24\u4e2a\u5355\u8c03\u6808\u3002\n\n> \u6211\u4eec\u53d1\u73b0\uff0c\u5f53\u961f\u5217\u5143\u7d20\u8d8a\u591a\uff0c\u91cd\u6784\u5355\u8c03\u6808\u7684\u6b21\u6570\u4e5f\u5c31\u8d8a\u591a\uff0c\u4f46\u603b\u7684\u91cd\u6784\u6b21\u6570\u4e5f\u8d8a\u5c11\uff08\u4ec5\u5728\u5bf9\u961f\u5217\u5f39\u51fa\u8fc7\u671f\u5143\u7d20\u53ef\u80fd\u91cd\u6784\uff09\u3002\u53ef\u4ee5\u8003\u8651\u628a\u968f\u673a\u6570\u636e\u62c6\u6210\u51e0\u6bb5\u5355\u8c03\u4e0b\u964d\u7684\u5e8f\u5217\uff0c\u6700\u957f\u7684\u6700\u591a\u662f\u6700\u957f\u4e0b\u964d\u5b50\u5e8f\u5217\uff0c\u5047\u8bbe\u957f\u5ea6\u4e3a $p$\u3002\u5219\u6700\u591a\u91cd\u6784 $n/p$ \u6b21\uff0c\u6bcf\u6b21\u6700\u591a\u91cd\u6784 $p$ \u4e2a\u6570\uff0c\u5219\u590d\u6742\u5ea6\u6700\u591a $O(n/p\u00b7p)=O(n)$\u3002\u53d6\u5230\u6700\u5927\u65f6\uff0c\u5f53\u6700\u957f\u5b50\u5e8f\u5217\u5c3d\u91cf\u957f\uff0c\u4e5f\u5373 $h$ **\u4e25\u683c**\u5355\u8c03\u4e0b\u964d\u3002\u5f53\u7136\u5e76\u4e0d\u662f\u4e25\u683c\u5355\u8c03\u4e0b\u964d\u5c31\u53ef\u4ee5\u53d6\u5230\u6700\u5927\u503c\uff0c\u8fd8\u8981\u8003\u8651 $h$ \u548c $m$ \u4e4b\u95f4\u7684\u5173\u7cfb\u3002\n\n\uff08~~\u7eaf\u5c5e\u53e3\u80e1~~\uff09\n\n- \u5b9e\u9645\u4e0a\uff0c\u5728\u968f\u673a\u6570\u636e\u4e0b\u5747\u644a\u91cd\u6784\u662f $O(n/2)$ \u7684\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u5206\u6cbb\uff0c\u603b\u7684\u8282\u70b9\u6570\u662f\u7ebf\u6027\u7684\uff09\u3002\n\n\u90a3\u4e48\u8003\u8651 $h_i$\uff0c\u53ef\u4ee5 $st+1\\sim i$ \u5e76\u6210\u4e00\u6bb5\uff0c$f_i=f_{st}+h_{q_l}$\uff1b\u82e5\u5355\u8c03\u6808\u4e2d\u6709\u503c\uff0c\u5219\u53ef\u4ee5\u5728\u5176\u4ed6\u7684 $j>st$ \u5e76\u6210\u4e00\u6bb5 $h\\sim i$\uff0c\u53d6\u6700\u5c0f\u5373\u53ef\u3002\n\n\u53ef\u80fd\u6709\u4eba\u6709\u7591\u95ee\u8fd9\u91cc\u7684\u7b2c\u4e00\u79cd\u60c5\u51b5\u53bb\u54ea\u4e86\uff1f\u5176\u5b9e\u5728\u4e00\u5f00\u59cb\u7ef4\u62a4\u7b2c\u4e00\u79cd\u60c5\u51b5\u5c31\u76f4\u63a5\u6254\u5230\u5355\u8c03\u6808\u91cc\u5c31\u53ef\u4ee5\u4e86\uff0c\u53cd\u6b63\u6700\u540e\u662f\u7ef4\u62a4\u6700\u5c0f\u7684\u3002\uff08\u6839\u636e\u4e0a\u6587\u63d0\u5230\u7684\u5355\u8c03\u6027\uff0c\u663e\u7136\u662f\u6b63\u786e\u7684\uff09\n\n\uff08\u5982\u679c\u540e\u9762\u60f3\u5230\u66f4\u597d\u7684\u5bf9\u5355\u8c03\u6808\u7684\u89e3\u91ca\u6211\u4f1a\u56de\u6765\u8865\u5145\u7684\uff0c~~\u4e0d\u8fc7 $noip$ \u4e4b\u540e\u53ef\u80fd\u5c31 $AFO$ \u4e86~~\uff09\n\n**\u7efc\u4e0a\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a $O(n)$ \u7684\u7b97\u6cd5\u3002**\n\n## \u203b\u4ee3\u7801\n\n~~\u6211\u77e5\u9053\u4f60\u4eec\u53ea\u770b\u8fd9\u4e2a~~ \n\n```cpp\n/*\nBY xiejinhao\n2020-11-20 9:19 from XWSF\n*/\n\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1e5 + 10;\n\nint h[N], q[N], stk[2][N];\nint top[2], l = 1, mid, r;\nlong long f[N], tmpf[N];\n\n// stk[0/1]  \u5de6/\u53f3 \u6808\uff0c\u6307\u9488\u5bf9\u5e94 top[0/1]\n// q \u961f\u5217  h \u539f\u6570\u7ec4  tmpf \u5bf9\u5e94\u961f\u5217\u4e2d\u7684 f \u503c \n\nvoid push(int x, int i) {\n\tif(!top[i]) stk[i][++top[i]] = x;\n\telse if(tmpf[stk[i][top[i]]] > tmpf[x])\n\t\tstk[i][++top[i]] = x;\n}\n\nvoid rebuild() {\n\tmid = (l + r) >> 1, top[0] = top[1] = 0;\n\tfor(int i = mid; i >= l; i--) push(i, 0);\n\tfor(int i = mid + 1; i <= r; i++) push(i, 1);\n}\n\nint main() {\n\tint n, m, st = 1, sum = 0;\n\tscanf(\"%d %d\", &n, &m);\n\tfor(int i = 1; i <= n; i++) {\n\t\tscanf(\"%d\", h + i), sum += h[i];\n\t\twhile(sum > m) sum -= h[st++];\n\t\twhile(l <= r and h[q[r]] <= h[i]) {\n\t\t\tif(top[0] and stk[0][top[0]] == r) --top[0];\n\t\t\tif(top[1] and stk[1][top[1]] == r) --top[1];\n\t\t\tif(--r <= mid) rebuild();\n\t\t} // \u7ef4\u62a4\u5355\u8c03\u961f\u5217 \n\t\tif(l > r) tmpf[r + 1] = f[st - 1] + h[i];\n\t\telse tmpf[r + 1] = f[q[r]] + h[i];\n\t\tq[++r] = i, push(r, 1);\t\n\t\t\n\t\t// \u961f\u5934\u7684\u60c5\u51b5\u8981\u7279\u5224 \n\t\tif(stk[0][top[0]] == l) --top[0];\n\t\tif(stk[1][top[1]] == l) --top[1];\n\t\twhile(l <= r and q[l] < st) { \n\t\t\tif(++l > mid) rebuild();\n\t\t\t// \u540c\u6837\u7279\u5224\u961f\u5934 \n\t\t\tif(top[0] and stk[0][top[0]] == l) --top[0];\n\t\t\tif(top[1] and stk[1][top[1]] == l) --top[1];\n\t\t} // \u5f39\u51fa\u8fc7\u671f\u5143\u7d20 \n\t\t\n\t\tf[i] = f[st - 1] + h[q[l]]; // \u548c\u5f00\u5934\u5e76\u4e3a\u4e00\u6bb5\n\t\t// ---   \u4e0e\u5f00\u5934\u4e4b\u540e\u7684\u67d0\u4e2a\u6570\u5f00\u59cb\u5e76\u4e3a\u4e00\u6bb5   --- \n\t\tif(top[0]) f[i] = min(f[i], tmpf[stk[0][top[0]]]);\n\t\tif(top[1]) f[i] = min(f[i], tmpf[stk[1][top[1]]]);\n\t}\n\tprintf(\"%lld\\n\", f[n]);\n\treturn 0;\n}\n```\n\n\n\n------------\n\n## \u203b\u5199\u5728\u540e\u9762\n\n1\u3001**\u672c\u6587\u540c\u6b65\u53d1\u5e03\u5728\u6211\u7684\u535a\u5ba2\u56ed\uff1a[\u70b9\u6211](https://www.cnblogs.com/Ning-H/p/14010577.html)**\n\n~~2\u3001\u7ffb\u4e86\u4e0b\u63d0\u4ea4\u8bb0\u5f55\uff0c\u5404\u4f4d\u4ee5\u540e\u6284\u9898\u89e3\u7a0d\u5fae\u6539\u4e00\u4e0b\u884c\u561b~~\n\n~~3\u3001\u80fd\u70b9\u4e2a\u8d5e\u5417\uff08\u5149\u901f\u9003~~\n\n",
        "postTime": 1605791371,
        "uid": 196649,
        "name": "xiejinhao",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1295 \u3010[TJOI2011]\u4e66\u67b6\u3011"
    },
    {
        "content": "**\u9898\u76ee\u5206\u6790**\uff1a    \n\n\u9996\u5148 **<script type=\"math/tex\" id=\"MathJax-Element-218\">O(n^2)</script>** \u7684DP\u5f88\u597d\u63a8\uff0c\u8bb0f[i]\u8868\u793a\u4ee5\u7b2ci\u672c\u4e66\u4e3a\u67d0\u4e00\u5c42\u7ed3\u5c3e\u65f6\uff0c\u4e66\u67b6\u7684\u6700\u5c0f\u9ad8\u5ea6\u3002\u5f88\u660e\u663e\uff1a\n\n**<script type=\"math/tex; mode=display\" id=\"MathJax-Element-291\">f[i]=\\min(f[j]+\\max(a[j+1],a[j+2]\u2026\u2026a[i]))[a[j+1]+\u2026\u2026+a[i]<=m]</script>**\n\u5176\u4e2d\u5bf9\u4e8e\u6bcf\u4e00\u4e2ai\uff0cj\u7684\u6700\u5c0f\u503c\u662f\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6765\u7684\uff0c\u8bb0\u4e3aLeft[i]\uff0c\u5e76\u4e14Left\u6570\u7ec4\u5355\u8c03\u4e0d\u964d\u3002\n\n\u800c\u4e14\u5f88\u660e\u663ef\u503c\u4e5f\u662f\u5355\u8c03\u4e0d\u964d\u7684\u3002\u800c\u4e14\u82e5i\u56fa\u5b9a\uff0c\u968f\u7740j\u8d8a\u5c0f\uff0ca[j]~a[i]\u7684max\u503c\u4e5f\u662f\u5355\u8c03\u4e0d\u964d\u7684.\n\n\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u7528\u4e00\u4e2a\u53cc\u7aef\u961f\u5217\u5b58\u50a8\u4e86j1,j2,j3\u3002\u6211\u4eec\u53d1\u73b0j2~i\uff0cj3~i\u7684max\u503c\u5c0f\u4e8ea[i+1]\uff0c\u4e8e\u662f\u5c06\u5176\u5f39\u51fa\uff0c\u6700\u540e\u5c06f[j2]+a[i+1]\u52a0\u8fdb\u6765\u3002\u7136\u540e\u518d\u8003\u8651Left\u5bf9\u8f6c\u79fb\u7684\u9650\u5236\u3002\u6bd4\u5982j1\u5c0f\u4e8eLeft[i]\uff0c\u5c31\u8981\u5c06\u5176\u5f39\u51fa\u961f\u5217\uff0c\u4f46\u6700\u4f18\u7b54\u6848\u53ef\u80fd\u4f1a\u521a\u597d\u53d6\u5230Left[i]\uff0c\u6240\u4ee5\u8fd8\u8981\u8ba9\u5b83\u672c\u8eab\u8fdb\u5165\u961f\u5217\u3002\u540c\u65f6\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u961f\u5217\u91cc\u8d21\u732e\u7684\u6700\u5c0f\u503c\uff0c\u65f6\u95f4 **<script type=\"math/tex\" id=\"MathJax-Element-292\">O(n\\log(n))</script>**\u3002\n\n\u5199\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u6709\u4e00\u4e2a\u7ec6\u8282\u6ca1\u6709\u8003\u8651\u597d\uff0c\u5c31\u662f\u5982\u679cLeft[i]\u5df2\u7ecf\u5728\u961f\u5217\u91cc\u9762\uff0c\u5c31\u4e0d\u7528\u518d\u8fdb\u961f\u4e86\uff0c\u7136\u800c\u6211\u5224\u7684\u65f6\u5019\u6ca1\u6709\u8003\u8651head>tail\uff0c\u5373\u961f\u5217\u4e3a\u7a7a\u7684\u60c5\u51b5\uff0c\u5bfc\u81f4\u8d8a\u754c\u4e86\u3002\n  \n  ```cpp\n#include<iostream>\n#include<string>\n#include<cstring>\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<stdio.h>\n#include<algorithm>\nusing namespace std;\n\nconst int maxn=100100;\nconst int oo=1000000000;\n\nint tree[maxn<<2];\nint Left[maxn];\nint Max[maxn];\n\nstruct data\n{\n    int val,id,Time;\n} h[maxn];\nint sum[maxn];\nint temp;\n\nint que[maxn];\nint g[maxn];\nint head=1,tail=0;\n\nint f[maxn];\nint n,m;\n\nbool Comp1(data x,data y)\n{\n    return x.val<y.val;\n}\n\nbool Comp2(data x,data y)\n{\n    return x.Time<y.Time;\n}\n\nint Query(int root,int L,int R,int x,int y)\n{\n    if ( y<L || R<x ) return 0;\n    if ( x<=L && R<=y ) return tree[root];\n\n    int mid=(L+R)>>1;\n    int Left=root<<1;\n    int Right=Left|1;\n\n    int vl=Query(Left,L,mid,x,y);\n    int vr=Query(Right,mid+1,R,x,y);\n    return max(vl,vr);\n}\n\nvoid Update_max(int root,int L,int R,int x,int v)\n{\n    if (L==R)\n    {\n        tree[root]=v;\n        return;\n    }\n\n    int mid=(L+R)>>1;\n    int Left=root<<1;\n    int Right=Left|1;\n\n    if (x<=mid) Update_max(Left,L,mid,x,v);\n    else Update_max(Right,mid+1,R,x,v);\n    tree[root]=max(tree[Left],tree[Right]);\n}\n\nvoid Update(int root,int L,int R,int x,int v)\n{\n    if (L==R)\n    {\n        tree[root]=v;\n        return;\n    }\n\n    int mid=(L+R)>>1;\n    int Left=root<<1;\n    int Right=Left|1;\n\n    if (x<=mid) Update(Left,L,mid,x,v);\n    else Update(Right,mid+1,R,x,v);\n    tree[root]=min(tree[Left],tree[Right]);\n}\n\nint main()\n{\n    freopen(\"1295.in\",\"r\",stdin);\n    freopen(\"1295.out\",\"w\",stdout);\n\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1; i<=n; i++) scanf(\"%d\",&h[i].val),h[i].Time=i;\n\n    sort(h+1,h+n+1,Comp1);\n    temp=h[1].id=1;\n    for (int i=2; i<=n; i++)\n        if (h[i-1].val==h[i].val) h[i].id=temp;\n        else h[i].id=++temp;\n    sort(h+1,h+n+1,Comp2);\n\n    for (int i=1; i<=n; i++)\n    {\n        Max[i]=Query(1,1,temp,h[i].id,temp);\n        Update_max(1,1,temp,h[i].id,i);\n    }\n\n    sum[0]=0;\n    for (int i=1; i<=n; i++) sum[i]=sum[i-1]+h[i].val;\n    Left[1]=0;\n    for (int i=2; i<=n; i++)\n    {\n        Left[i]=Left[i-1];\n        while ( sum[i]-sum[ Left[i] ]>m ) Left[i]++;\n    }\n\n    for (int i=0; i<(n<<2); i++) tree[i]=oo;\n    Update(1,1,n+1,1,0);\n    que[++tail]=0;\n    g[tail]=0;\n\n    for (int i=1; i<=n; i++)\n    {\n        while ( head<=tail && que[tail]>=Max[i] )\n            Update(1,1,n+1,que[tail]+1,oo),tail--;\n        Update(1,1,n+1,Max[i]+1,f[ Max[i] ]+h[i].val);\n        tail++;\n        que[tail]=Max[i];\n        g[tail]=h[i].val;\n\n        int tp=oo;\n        while ( head<=tail && que[head]<Left[i] )\n            tp=g[head],Update(1,1,n+1,que[head]+1,oo),head++;\n        if ( tp<oo && ( que[head]!=Left[i] || head>tail ) )\n            head--,que[head]=Left[i],g[head]=tp,\n            Update(1,1,n+1,Left[i]+1,f[ Left[i] ]+tp);\n\n        f[i]=tree[1];\n        tail++;\n        que[tail]=i;\n        g[tail]=0;\n        Update(1,1,n+1,i+1,f[i]);\n    }\n\n    printf(\"%d\\n\",f[n]);\n    return 0;\n}\n```\n",
        "postTime": 1602340263,
        "uid": 324858,
        "name": "\u26a1114514_zzm\u26a1",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1295 \u3010[TJOI2011]\u4e66\u67b6\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\uff1a\n\n\u8f93\u5165\u4e24\u4e2a\u6b63\u6574\u6570n\uff0cm\uff0c\u5728\u8f93\u5165n\u4e2a\u6570\uff0c\u5c06\u8fd9n\u4e2a\u6570\u5206\u6210\u8fde\u7eed\u7684\u82e5\u5e72\u6bb5\uff0c\u6ee1\u8db3\u6bcf\u4e00\u6bb5\u4e4b\u548c\u4e0d\u8d85\u8fc7m\uff0c\u540c\u65f6\u4f7f\u5f97\u8fd9\u82e5\u5e72\u7ec4\u4e2d\uff0c\u6bcf\u7ec4\u7684\u6700\u5927\u503c\u4e4b\u548c\u6700\u5c0f\uff0c\u8f93\u51fa\u8fd9\u4e2a\u6700\u5c0f\u503c\u3002\n\n\u5bf9\u4e8e30%\u7684\u6570\u636e\uff0cn \u2264 1,000\u3002\n\n\u5bf9\u4e8e100%\u7684\u6570\u636e\uff0cn \u2264 100,000\uff0chi \u2264 10,000\uff0cm \u2264 1,000,000,000\u3002\n\n30%\u505a\u6cd5\uff1a\n\n\u6ca1\u5b66\u8fc7dp\u7684\u7ae5\u978b\u53ef\u4ee5\u79fb\u6b65\u5230\u5176\u4ed6\u9898\u76ee\u53bb\u4e86\u8fd9\u9053\u9898\u5e76\u4e0d\u90a3\u4e48\u9002\u5408\u4f60......\n\n30%\u7684\u6570\u636e\uff0cn<=1000,\u53ef\u4ee5\u53cc\u91cd\u5faa\u73af\u679a\u4e3e\u66f4\u65b0\uff0c\u8bbea\u6570\u7ec4\u4e3a\u9898\u76ee\u4e2d\u8bfb\u5165\u7684\u6570\u7ec4\uff0cf\u3010i\u3011\u4e3a\u8003\u8651\u5c06\u524di\u672c\u4e66\u90fd\u653e\u4e0b\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u660e\u663e\u53ef\u4ee5\u7531\u524d\u9762\u7684f\u3010j\u3011\u8f6c\u79fb\u8fc7\u6765\uff0c\u4e14\u8d21\u732e\u662f\u653e\u653ef\u3010j\u3011+max\uff08a\u3010k\u3011\uff08j+1<=k<=i\uff09\uff09\u3002 \u53ef\u4ee5\u5148\u505a\u4e2a\u524d\u7f00\u548c\uff0c\u4ee5\u4fbf\u4e8eO\uff081\uff09\u5224\u65adi\uff0c\u548cj\u4e4b\u95f4\u7684\u4e66\u7684\u603b\u91cf\u662f\u5426\u8d85\u8fc7m\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4ecei\u5f80\u524d\u626b\uff0c\u6bcf\u6b21\u8003\u8651\u5b8c\u4e00\u4e2aj\u5c31\u52a0\u4e0a\u554aa\u3010j\u3011\u3002\u590d\u6742\u5ea6O\uff08n^2\uff09,\u5b8c\u5168\u4e0d\u865a\u3002\n\n100%\u505a\u6cd5\uff1a\n\n\u8003\u8651\u572830%\u505a\u6cd5\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4f18\u5316\uff0c\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u5f88\u663e\u800c\u6613\u89c1\u7684\u7279\u70b9\uff0c\u5c31\u662ff\u6570\u7ec4\u7684\u503c\u662f\u5355\u8c03\u4e0d\u4e0b\u964d\u7684\uff0c\u56e0\u4e3a\u80fd\u653e\u4e0b\u524di+1\u672c\u4e66\u7684\u65b9\u6848\u90fd\u5fc5\u7136\u653e\u4e0b\u4e86\u524di\u672c\u4e66\uff0c\u82b1\u8d39\u81ea\u7136\u4e0d\u4f1a\u6bd4\u524di\u672c\u4e66\u7684\u5c11\u3002\u6240\u4ee5\u8fd9\u5c31\u53ef\u4ee5\u7528\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u7384\u5b66\u65b9\u6cd5\u6216\u8005\u6570\u636e\u7ed3\u6784\u7ef4\u62a4dp\u3002\u9996\u5148\u8981\u666e\u53ca\u4e00\u79cd\u5355\u8c03\u961f\u5217\u6c42\u533a\u95f4\u6700\u5c0f\u503c\u7684\u65b9\u6cd5\uff1a\u6bd4\u5982\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a6\u7684\u5e8f\u52171 5 2 1 4 3\uff0c\u6211\u4eec\u8981\u6c42\u51fa\u6bcf3\u4e2a\u6570\u7684\u6700\u5c0f\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u4e0b\u964d\u7684\u5e8f\u5217\u540c\u65f6\u7ef4\u62a4\u5b83\u7684\u4e0b\u6807\uff1a\u4e00\u5f00\u59cb\u5e8f\u5217\u4e3a\u7a7a\uff0c\u7136\u540e\u64cd\u4f5c\u52301\uff0c\n\n\u5e8f\u5217\uff1a\u00a0 \u503c\uff1a\u00a0 1\n\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u4e0b\u6807\uff1a 1\n\n\u7136\u540e\u64cd\u4f5c\u5230 5\uff0c\u8fd9\u65f6\u5019\u4ece\u961f\u5c3e\u5f80\u524d\u626b\uff0c\u626b\u5230\u7b2c\u4e00\u4e2a\u78b0\u5230\u5927\u4e8e\u5b83\u7684\u6570\u6216\u961f\u5217\u4e3a\u7a7a\u65f6\u505c\u6b62\uff1a\n\n\n\u5e8f\u5217\uff1a\u00a0 \u503c\uff1a\u00a0 5\n\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u4e0b\u6807\uff1a 2\n\n\uff085\u6bd41\u5927\uff0c\u5c061\u5f39\u51fa\u961f\u5217\uff0c\u961f\u5217\u4e3a\u7a7a\uff0c\u7136\u540e\u5c065\u52a0\u5165\u961f\u5217\uff09\n\n\u64cd\u4f5c\u52302\uff0c\n\n\u5e8f\u5217\uff1a\u00a0 \u503c\uff1a\u00a0 5\u00a0 \u00a0 \u00a02\n\n\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u4e0b\u6807\uff1a 2\u00a0 \u00a0 \u00a03\n\n\u64cd\u4f5c\u52301\uff1a\n\n\n\u5e8f\u5217\uff1a\u00a0 \u503c\uff1a\u00a0 5\u00a0 \u00a0 \u00a02\u00a0 \u00a0 \u00a01\n\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u4e0b\u6807\uff1a 2\u00a0 \u00a0 \u00a03\u00a0 \u00a0 \u00a04\n\n\u64cd\u4f5c\u52304,\n\n4\u6bd41\u5927\uff0c\u5c061\u5f39\u51fa\uff0c\u6bd42\u5927\uff0c\u518d\u5c062\u5f39\u51fa\uff0c\u5f53\u65b0\u52a0\u5165\u7684\u503c\u65e0\u6cd5\u5f39\u51fa\u5176\u4ed6\u6570\u5e76\u52a0\u5165\u961f\u5217\u4ee5\u540e\uff0c\u8fd8\u6709\u4e00\u6b65\u5f88\u91cd\u8981\u7684\u64cd\u4f5c\uff0c\u5c31\u662f\u5224\u65ad\u4e00\u4e0b\u961f\u5934\u7684\u6570\u7684\u4e0b\u6807\u662f\u5426\u6709\u8d85\u51fa\u6c42\u503c\u8303\u56f4\uff0c\u82e5\u73b0\u5728\u52a0\u5165\u4e86\u7b2ci\u4e2a\u6570\uff0c\u8003\u8651\u7684\u662f\u8fde\u7eedk\u4e2a\u6570\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u8fd9\u65f6\u8981\u8003\u8651\u7684\u662f\u7b2ci-k+1\u4e2a\u6570\u5230\u7b2ci\u4e2a\u6570\u7684\u6700\u5927\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u961f\u5934\u7684\u6570\u7684\u4e0b\u6807\u8981\u5c0f\u4e8ei-k+1\uff0c\u5c31\u8981\u5f39\u6389\uff0c\u8fd9\u65f65\u7684\u4e0b\u6807\u662f2\uff0c\u800c\u6211\u4eec\u5df2\u7ecf\u52a0\u5165\u7684\u7b2c5\u4e2a\u6570\uff0c\u4e5f\u5c31\u662f\u8003\u8651\u7684\u662f3\u52305\u7684\u6700\u5927\u503c\uff0c5\u7684\u4e0b\u6807\u8fc7\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f39\u6389\u3002\n\n\n\u5e8f\u5217\uff1a\u00a0 \u503c\uff1a\u00a0 4\n\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u4e0b\u6807\uff1a 5\n\n\u64cd\u4f5c\u52301:\n\n\n\u5e8f\u5217\uff1a\u00a0 \u503c\uff1a\u00a0 4\u00a0 \u00a0 \u00a01\n\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u4e0b\u6807\uff1a 5\u00a0 \u00a0 \u00a06\n\n\u8fd9\u65f6\uff0c\u6211\u4eec\u5c31\u53d1\u73b0\uff0c\u6bcf\u5728\u961f\u5217\u91cc\u52a0\u5165\u4e00\u4e2a\u6570\u65f6\uff0c\u9700\u89813\u6b65\u64cd\u4f5c\uff1a\n\n1.\u5148\u4ece\u961f\u5217\u7684\u5c3e\u90e8\u5f80\u524d\u4e00\u76f4\u5f39\u6389\u6bd4\u65b0\u52a0\u7684\u6570\u5c0f\u7684\u6570\n\n2.\u5c06\u65b0\u52a0\u7684\u6570\u52a0\u5165\u961f\u5c3e\n\n3.\u5224\u65ad\u961f\u5934\u7684\u6570\u662f\u5426\u9700\u8981\u5f39\u6389\n\n\u8fd9\u6837\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u5f53\u6211\u4eec\u63d2\u5165\u7b2ci\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4ee5\u7b2ci\u4e2a\u6570\u4e3a\u7ed3\u5c3e\u7684\u8fde\u7eedk\u4e2a\u6570\u7684\u6700\u5927\u503c\u4fbf\u662f\u5f53\u524d\u961f\u5934\u7684\u6570\u3002\n\n\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u662fO\uff08n\uff09\u7684\u5462\uff1f\u9996\u5148\uff0c\u201c3.\u5224\u65ad\u961f\u5934\u7684\u6570\u662f\u5426\u9700\u8981\u5f39\u6389\u201d\u8fd9\u4e00\u6b65\u6700\u591a\u53ea\u4f1a\u5f39\u4e00\u4e2a\u6570\uff0c\u7136\u540e\uff0c\u867d\u7136\u201c1.\u5148\u4ece\u961f\u5217\u7684\u5c3e\u90e8\u5f80\u524d\u4e00\u76f4\u5f39\u6389\u6bd4\u65b0\u52a0\u7684\u6570\u5c0f\u7684\u6570\u201d\u8fd9\u4e2a\u64cd\u4f5c\u4e00\u6b65\u53ef\u80fd\u4f1a\u5f39\u6389\u5f88\u591a\u4e2a\u6570\uff0c\u4f46\u662f\u4e00\u4e2an\u4e2a\u6570\u7684\u5e8f\u5217\uff0c\u4e00\u5171\u624dn\u4e2a\u6570\u8fdb\u5165\u5355\u8c03\u961f\u5217\uff0c\u989d\u6bcf\u5f39\u4e00\u4e2a\u6570\u961f\u5217\u91cc\u5c31\u5c11\u4e86\u4e00\u4e2a\u6570\uff0c\u6240\u4ee5\u867d\u7136\u63d2\u5165\u4e00\u4e2a\u6570\u53ef\u80fd\u4f1a\u5f39\u6389\u5f88\u591a\u4e2a\u6570\uff0c\u53ef\u662f\u5f39\u6389\u6570\u7684\u603b\u6570\u662f\u4e0d\u4f1a\u8d85\u8fc7n\u7684\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2aO\uff08n\uff09\u7684\u7b97\u6cd5\u3002\n\n\u7136\u540e\uff0c\u8fd9\u9053\u9898\u7684dp\u5c31\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217+\u7ebf\u6bb5\u6811\u7ef4\u62a4dp\u4e86\uff0c\u6211\u4eec\u8003\u8651\u679a\u4e3e\u5230\u4e86\u6c42f\u3010i\u3011\u7684\u503c\uff0c\u7531\u4e8ef\u6570\u7ec4\u5177\u6709\u5355\u8c03\u6027\uff0c\u6240\u4ee5\u5047\u8bbef\u3010j\u3011\u548cf\u3010k\u3011\u90fd\u53ef\u4ee5\u5bf9f\u3010i\u3011\u8fdb\u884c\u8d21\u732e\uff0c\u4e14\u7b2ck+1\u4e2a\u6570\u5230\u7b2ci\u4e2a\u6570\u7684\u6700\u5927\u503c\u548c\u7b2cj+1\u4e2a\u6570\u5230\u7b2ci\u4e2a\u6570\u7684\u6700\u5927\u503c\u76f8\u7b49\uff0c\u90a3\u6211\u4eec\u53ea\u9700\u8981\u53d6j\u548ck\u4e2d\u4e0b\u6807\u8f83\u5c0f\u7684\u5bf9i\u8fdb\u884c\u8d21\u732e\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u80fd\u8d21\u732e\u5230i\u7684\u6bcf\u79cd\u5230i\u7684\u6700\u5927\u503c\u4e0d\u540c\u7684j\u7684\u4e0b\u6807\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\u5c31\u53ef\u4ee5\u4e86\uff0c\u7136\u540e\u7528\u4e2a\u5355\u8c03\u961f\u5217\u7ef4\u62a4\uff0c\u64cd\u4f5c\u548c\u4e0a\u9762\u7c7b\u4f3c\uff0c\u800c\u7ebf\u6bb5\u6811\u662f\u7528\u6765\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u5355\u8c03\u961f\u5217\u4e2d\u7684j\u7684\u8d21\u732e\uff0c\u53ef\u4ee5\u5feb\u901f\u67e5\u8be2\u6700\u5c0f\u503c\u3002\u5177\u4f53\u8fd8\u6709\u4e9b\u7ec6\u8282\uff0c\u5c31\u7559\u7ed9\u8bfb\u8005\u4eec\u81ea\u5df1\u601d\u8003\u4e86\u3002\n\n\n\n# \u4ee3\u7801\u9644\u4e0a\uff1a\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <algorithm>\n#include <cstdio>\nusing namespace std;\nstruct dat\n{int val,wei,ff;};\ndat line[100005];\nint tre[500005],book[100005],qian[100005],f[100005],n,m,h,t,head,tail,s,p,ma;\nvoid jia(int wei,int val,int l,int r,int root)\n{\n\tif (l==r){tre[root]=val;return;}\n\tint mid=(l+r)/2;\n\tif (wei<=mid)jia(wei,val,l,mid,root*2);\n\telse jia(wei,val,mid+1,r,root*2+1);\n\ttre[root]=min(tre[root*2],tre[root*2+1]);\n}\nint fid(int h,int t,int l,int r,int root)\n{\n\tif (l==r){return tre[root];}\n\tif (h<=l && t>=r)return tre[root];\n\tint mid=(l+r)/2,mm=1000000007;\n\tif (h<=mid)mm=fid(h,t,l,mid,root*2);\n\tif (t>=mid+1) mm=min(mm,fid(h,t,mid+1,r,root*2+1));\n\treturn mm;\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&book[i]);\n\t}\n\th=1;head=1;tail=0;\n\twhile (t<n && s+book[t+1]<=m)\n\t{\n\t     t++;s+=book[t];qian[t]=1;ma=max(ma,book[t]);f[t]=ma;\n\t     while (tail>0 && book[t]>=line[tail].val)tail--;\n\t     tail++;line[tail].val=book[t];line[tail].wei=t;line[tail].ff=line[tail-1].wei;\n\t     jia(tail,f[line[tail-1].wei]+book[t],1,n,1);\n\t}\n\tfor (int i=t+1;i<=n;i++)\n\t{\n\t\ts+=book[i];\n\t\twhile (s>m){s-=book[h];h++;}\n\t\tqian[i]=h;\n\t}\n\t for (int i=t+1;i<=n;i++)\n\t {\n\t \twhile (line[head].wei<qian[i] && head<=tail){line[head].wei=0;head++;}\n\t \tif (line[head].ff<qian[i]-1){line[head].ff=qian[i]-1;jia(head,f[qian[i]-1]+line[head].val,1,n,1);}\n\t \twhile (tail>=head && book[i]>=line[tail].val){tail--;}\n\t \ttail++;line[tail].val=book[i];line[tail].wei=i;line[tail].ff=max(line[tail-1].wei,qian[i]-1);\n\t \tjia(tail,f[line[tail].ff]+book[i],1,n,1);\n\t \tf[i]=fid(head,tail,1,n,1);\n\t }\n\t cout<<f[n];\n}\n\n```\n\n",
        "postTime": 1570436166,
        "uid": 99858,
        "name": "DLYJ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1295 \u3010[TJOI2011]\u4e66\u67b6\u3011"
    }
]