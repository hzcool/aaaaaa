[
    {
        "content": "\u73b0\u8003\u8651\u5982\u679c\u6211\u4eec\u77e5\u9053\u4e86\u5bf9\u65b9\u5f53\u524d\u72b6\u6001\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a $n$ \u7684\u8282\u70b9\uff0c\u79f0\u4e4b\u4e3a\u4e00\u4e2a\u7cfb\u7edf\uff0c\u7b2c $i$ \u4e2a\u8282\u70b9\u8bbe\u5b9a\u4e3a\u6253\u8d25\u5bf9\u65b9 $i$ \u53f7\u8282\u70b9\u7684\u72b6\u6001\uff0c\u5e76\u4e14\u968f\u4e4b\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u70b9\uff0c\u5bf9\u7740\u8ba9\u4ed6\u5931\u8d25\u7740\u5361\u5c31\u884c\u4e86\uff08\n\n\u4f46\u662f\u6211\u4eec\u4e0d\u77e5\u9053\uff0c\u548b\u529e\u5462\uff1f\n\n\u4e00\u79cd\u60f3\u6cd5\u662f\u901a\u8fc7\u6709\u9650\u6b21\u5f04\u5230\u4e00\u4e2a\u786e\u5b9a\u7684\u4f4d\u7f6e\uff0c\u4f46\u663e\u7136\u4ed6\u7684\u6784\u9020\uff08\u4e5f\u8bb8\u6709\u5faa\u73af\u6027\u7b49\u7b49\uff09\u4e0d\u80fd\u8ba9\u6211\u4eec\u7684\u7edf\u4e00\u5316\u6210\u7acb\u3002\n\n\u8003\u8651\u5229\u7528\u6a21\u62df\u9000\u706b\u7c7b\u4f3c\u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u505a $500$ \u4e2a\u7cfb\u7edf\uff0c\u6bcf\u6b21\u968f\u673a\u4e00\u4e2a\u731c\u5f53\u524d\u72b6\u6001\u7684\u4f4d\u7f6e\uff0c\u4e00\u65e6\u5931\u8d25\uff0c\u5c31\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u7cfb\u7edf\uff0c\u8fd9\u6837\u5931\u8d25\u7684\u6982\u7387\u5728 $n = 100$ \u65f6\u662f $(\\frac{99}{100})^{500} \\approx 0.6 \\%$\uff0c\u8fd9\u4e2a\u4e1c\u897f\u611f\u89c9\u975e\u5e38\u7684\u5c0f\uff0c\u57fa\u672c\u4e0d\u53ef\u80fd\u53d1\u751f\u3002\n\n\u590d\u6742\u5ea6\u5927\u6982\u5c31\u662f $O(500n)$",
        "postTime": 1611587049,
        "uid": 161687,
        "name": "Remake",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6989 \u3010[NEERC2014]Epic Win!\u3011"
    },
    {
        "content": "## \u5206\u6790\n\n\u5947\u5947\u5999\u5999\u7684\u6784\u9020\u9898\u3002\n\n\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u786e\u5b9a\u4e86\u5bf9\u65b9\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6bcf\u4e00\u8f6e\u90fd\u4f5c\u51fa\u6253\u8d25\u5bf9\u65b9\u7684\u51b3\u7b56\uff0c\u800c\u4e14\u53ea\u8981\u6211\u4eec\u8fd9\u6837\u505a\u5bf9\u65b9\u7684\u51b3\u7b56\u80af\u5b9a\u5728 $n$ \u6b21\u4e4b\u5185\u8fdb\u5165\u5faa\u73af\uff0c\u6240\u6709\u6211\u4eec\u6700\u591a\u7528 $n$ \u4e2a\u70b9\u5c31\u80fd\u4e00\u76f4\u8d62\u4e0b\u53bb\u3002\n\n\u4f46\u662f\u6211\u4eec\u73b0\u5728\u4e0d\u786e\u5b9a\u5bf9\u65b9\u7684\u4f4d\u7f6e\uff0c\u4e0d\u59a8\u968f\u673a\u731c\u60f3\u4e00\u4e2a\uff0c\u6309\u7167\u8fd9\u4e2a\u731c\u60f3\u7684\u4f4d\u7f6e\u6784\u9020\u4e00\u4e9b\u70b9\u3002\u5982\u679c\u5bf9\u65b9\u6ca1\u6709\u6309\u7167\u6211\u4eec\u731c\u60f3\u7684\u65b9\u5f0f\u51b3\u7b56\u5c31\u8bf4\u660e\u6211\u4eec\u731c\u9519\u4e86\uff0c\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u731c\u60f3\uff08\u5982\u679c\u6ca1\u6709\u4e0b\u4e00\u4e2a\u731c\u60f3\u4e86\u5c31\u8f6c\u79fb\u5230\u7b2c\u4e00\u4e2a\uff09\u5373\u53ef\u3002\n\n\u8fd9\u6837\u505a\u4e3a\u4ec0\u4e48\u662f\u6b63\u786e\u7684\u5462\uff1f\u56e0\u4e3a\u53ea\u8981\u5bf9\u65b9\u5728\u524d $10^7$ \u6b21\u64cd\u4f5c\u5185\u88ab\u5f15\u5bfc\u5230\u73af\u4e0a\u5c31\u80fd\u6210\u529f\uff0c$10^7$ \u6b21\u64cd\u4f5c\u81f3\u5c11\u53ef\u4ee5\u8fdb\u884c $10^5$ \u6b21\u731c\u60f3\uff0c\u5168\u90fd\u731c\u4e0d\u4e2d\u7684\u6982\u7387\u975e\u5e38\u5c0f\u3002\n\n## \u5b9e\u73b0\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <random>\n\nusing namespace std;\n\nconst int N = 105, M = 50005;\nint n, tot, vis[N];\n\nstruct Node {\n  char op;\n  int r, p, s;\n} ppk[N], kkp[M];\n\nint main() {\n  ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n  cin >> n;\n  for (int i = 1; i <= n; i++)\n    cin >> ppk[i].op >> ppk[i].r >> ppk[i].p >> ppk[i].s;\n  mt19937 e(time(0));\n  uniform_int_distribution<int> rng{1, n};\n  while (true) {\n    int est = tot, r = rng(e), cur = r;\n    memset(vis, 0, sizeof(vis));\n    while (!vis[cur])\n      vis[cur] = est, est++,\n      cur = ppk[cur].op == 'R'   ? ppk[cur].p\n            : ppk[cur].op == 'P' ? ppk[cur].s\n                                 : ppk[cur].r;\n    if (est > 50000) break;\n    int qwq = vis[cur];\n    cur = r;\n    for (int i = tot + 1; i <= est; i++)\n      if (ppk[cur].op == 'R')\n        kkp[i].op = 'P', kkp[i].r = (i == est ? qwq : i) + 1,\n        kkp[i].p = kkp[i].s = est + 1, cur = ppk[cur].p;\n      else if (ppk[cur].op == 'P')\n        kkp[i].op = 'S', kkp[i].p = (i == est ? qwq : i) + 1,\n        kkp[i].r = kkp[i].s = est + 1, cur = ppk[cur].s;\n      else\n        kkp[i].op = 'R', kkp[i].s = (i == est ? qwq : i) + 1,\n        kkp[i].r = kkp[i].p = est + 1, cur = ppk[cur].r;\n    tot = est;\n  }\n  for (int i = 1; i <= tot; i++)\n    kkp[i].r = kkp[i].r > tot ? 1 : kkp[i].r,\n    kkp[i].p = kkp[i].p > tot ? 1 : kkp[i].p,\n    kkp[i].s = kkp[i].s > tot ? 1 : kkp[i].s;\n  cout << tot << endl;\n  for (int i = 1; i <= tot; i++)\n    cout << kkp[i].op << \" \" << kkp[i].r << \" \" << kkp[i].p << \" \" << kkp[i].s\n         << endl;\n  return 0;\n}\n\n```",
        "postTime": 1639725289,
        "uid": 253946,
        "name": "ClHg2",
        "ccfLevel": 7,
        "title": "\u300e\u9898\u89e3\u300f\u300eNEERC2014\u300fEpic Win!"
    },
    {
        "content": "\u5148\u819chehezhou\n\n## \u3010\u9898\u610f\u3011\n**\u8fd9\u662f\u4e00\u9053\u4f20\u7edf\u9898**\n\n\u7ed9\u4f60\u4e00\u4e2a\u73a9\u77f3\u5934\u526a\u5200\u5e03\u7684\u6709\u9650\u72b6\u6001\u81ea\u52a8\u673a\uff0c\u5176\u521d\u59cb\u72b6\u6001\u4e0d\u786e\u5b9a\uff0c\u8ba9\u4f60\u5199\u4e00\u4e2a\u76f8\u540c\u5f62\u5f0f\u4e14\u521d\u59cb\u72b6\u6001\u4e3a $1$ \u7684\u6709\u9650\u72b6\u6001\u81ea\u52a8\u673a\uff0c\u5e76\u5728 $1e9$ \u573a\u6bd4\u8d5b\u4e2d\u83b7\u5f97 $99\\%$ \u7684\u80dc\u7387\uff0c\u5e73\u5c40\u7b97\u4f60\u8f93\u3002\n## \u3010\u601d\u8def\u3011\n\u9996\u5148\u6211\u4eec\u8003\u8651\u521d\u59cb\u72b6\u6001\u786e\u5b9a\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\u8bf4\u521d\u59cb\u4e3a $1$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u663e\u7136\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u90fd\u53ef\u4ee5\u5bf9\u5e94\u7684\u53bb\u540a\u6253\u7535\u8111\uff0c\u5e76\u4e14\u7531\u4e8e\u6211\u4eec\u9009\u62e9\u7684\u7b56\u7565\u662f\u786e\u5b9a\u7684\uff0c\u7535\u8111\u7684\u540e\u7ee7\u72b6\u6001\u4e5f\u662f\u786e\u5b9a\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u9020\u4e00\u4e2a\u81ea\u52a8\u673a\u5bf9\u7535\u8111\u8fdb\u884c\u5168\u9762\u540a\u6253\uff0c\u79f0\u4e4b\u4e3a\u4e00\u4e2a \u201c\u540a\u6253\u81ea\u52a8\u673a\u201d\u3002\n\n\u4f46\u662f\u8fd9\u9053\u9898\u7684\u96be\u70b9\u5728\u4e8e\u521d\u59cb\u72b6\u6001\u4e0d\u786e\u5b9a\u3002\n\n\u8003\u8651\u6211\u4eec\u5148\u5047\u8bbe\u7535\u8111\u521d\u59cb\u72b6\u6001\u4e3a $1$ \uff0c\u82e5\u51fa\u73b0\u95ee\u9898\u4e86\u540e\u9762\u518d\u8fdb\u884c\u8c03\u6574\u3002\n\n\u7531\u4e8e\u6211\u4eec\u73b0\u6709\u7684\u81ea\u52a8\u673a\u5bf9\u7535\u8111\u5168\u9762\u540a\u6253\uff0c\u6bcf\u4e00\u4e2a\u70b9\u53ea\u7528\u4e86\u4e00\u6761\u51fa\u8fb9\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u4e24\u6761\u51fa\u8fb9\u5c31\u53ef\u4ee5\u88ab\u6211\u4eec\u7528\u6765\u8c03\u6574\u6211\u4eec\u81ea\u5df1\u7684\u51b3\u7b56\u3002\n\n\u663e\u7136\u5982\u679c\u6211\u4eec\u8981\u540a\u6253\u7535\u8111\u7684\u51b3\u7b56\uff0c\u65e0\u8bba\u7535\u8111\u7684\u8d77\u59cb\u70b9\u662f\u54ea\u4e00\u4e2a\uff0c\u6211\u4eec\u7684\u81ea\u52a8\u673a\u7684\u57fa\u7840\u7ed3\u6784\u90fd\u5e94\u8be5\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u8003\u8651\u5bf9\u81ea\u52a8\u673a\u8fdb\u884c\u5206\u5c42\uff0c\u6bcf\u4e00\u5c42\u5bf9\u5e94\u4e00\u4e2a\u4e0d\u540c\u7684\u8d77\u70b9\u6240\u5bf9\u5e94\u7684 \u201c\u540a\u6253\u81ea\u52a8\u673a\u201d \uff0c\u7136\u540e\u52a0\u4e00\u4e9b\u7528\u6765\u8c03\u6574\u7684\u51fa\u8fb9\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u600e\u4e48\u52a0\u5165\u8fd9\u4e00\u4e9b\u7528\u6765\u8c03\u6574\u7684\u51fa\u8fb9\u3002\n\n\u8003\u8651\u679a\u4e3e\u6bcf\u4e00\u4e2a\u7535\u8111\u7684\u8d77\u70b9\uff0c\u7136\u540e\u8dd1\u6211\u4eec\u73b0\u6709\u7684\u81ea\u52a8\u673a\uff0c\u4e0d\u65ad\u904d\u5386\u76f4\u5230\u6211\u4eec\u81ea\u52a8\u673a\u7684\u5f53\u524d\u7ed3\u70b9\u65e0\u6cd5\u5904\u7406\u7535\u8111\u7684\u8fd4\u56de\u503c\uff0c\u6216\u904d\u5386\u70b9\u6570\u8d85\u8fc7\u4e86\u73b0\u6709\u70b9\u6570\u3002\u540e\u8005\u8bf4\u660e\u51fa\u73b0\u4e86\u5faa\u73af\uff0c\u7535\u8111\u5df2\u7ecf\u88ab\u6211\u4eec\u5168\u9762\u540a\u6253\u4e86\uff0c\u63a5\u4e0b\u6765\u8003\u8651\u524d\u8005\u3002\n\n\u663e\u7136\u8fd9\u4e00\u5c40\u6211\u4eec\u662f\u8f93\u7684\uff0c\u56e0\u4e3a\u8d62\u7684\u8fb9\u4e00\u5b9a\u5728 \u201c\u540a\u6253\u81ea\u52a8\u673a\u201d \u4e2d\u88ab\u5efa\u7acb\u51fa\u6765\u4e86\uff0c\u6545\u6211\u4eec\u8981\u5efa\u4e00\u6761 \u201c\u8c03\u6574\u8fb9\u201d \u3002\n\n\u9996\u5148\u663e\u7136\u5f53\u524d\u8d77\u70b9\u7684\u60c5\u51b5\u6211\u4eec\u65e0\u6cd5\u5904\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u65b0\u5efa\u4e00\u5c42 \u201c\u540a\u6253\u81ea\u52a8\u673a\u201d \u5e94\u5bf9\u8fd9\u4e2a\u8d77\u70b9\u7684\u60c5\u51b5\uff0c\u7136\u540e\u540e\u9762\u7535\u8111\u7684\u6240\u6709\u64cd\u4f5c\u5c31\u4e00\u5b9a\u4f1a\u88ab\u6211\u4eec\u5168\u9762\u540a\u6253\u4e86\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u91c7\u7528 \u201c\u81ea\u6b3a\u6b3a\u4eba\u201d \u7684\u7b56\u7565\uff0c\u5373\u5047\u88c5\u6211\u4eec\u4e00\u76f4\u5728\u65b0\u7684\u90a3\u4e00\u5c42\u91cc\u9762\uff0c\u8003\u8651\u6211\u4eec\u4e0b\u4e00\u6b65\u8be5\u600e\u4e48\u505a\u3002\n\n\u663e\u7136\u6211\u4eec\u5e94\u8be5\u5206\u6790\u7535\u8111\u4e0b\u4e00\u6b65\u4f1a\u8d70\u5230\u54ea\u4e00\u4e2a\u7ed3\u70b9\uff0c\u7136\u540e\u6211\u4eec\u76f4\u63a5\u8fde\u4e00\u6761\u8fb9\u5230\u65b0\u5efa\u5c42\u7684\u5bf9\u5e94\u7ed3\u70b9\u5373\u53ef\uff0c\u540e\u9762\u5c31\u5fc5\u7136\u662f\u5168\u9762\u540a\u6253\u4e86\u3002\n\n\u8fd9\u6837\u5b50\u590d\u6742\u5ea6\u5e94\u8be5\u662f $O(n^3)$ \u7684\uff0c\u603b\u70b9\u6570\u662f $O(n^2)$ \u7684\uff0c\u663e\u7136\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n## \u3010\u4ee3\u7801\u3011\n\u53ea\u4fdd\u7559\u5173\u952e\u90e8\u5206\n```cpp\nint tot, layer;\nint n;\nint c[105][15], t[105];//\u7535\u8111\u7684\u81ea\u52a8\u673a\n//0, 2, 5 \u975e\u5e38\u7b26\u5408\u77f3\u5934\u526a\u5200\u5e03\u7684\u624b\u52bf\ninline int change(char x){//\u5b57\u7b26\u8f6c\u6570\u5b57\n    if(x == 'R') return 0;\n    if(x == 'S') return 2;\n    if(x == 'P') return 5;\n}\ninline char Change(int x){//\u6570\u5b57\u8f6c\u5b57\u7b26\n    if(x == 0) return 'R';\n    if(x == 2) return 'S';\n    if(x == 5) return 'P';\n}\ninline int dunkon(int x){//\u4ec0\u4e48\u53ef\u4ee5\u8fdb\u884c\u540a\u6253\n    if(x == 5) return 2;\n    if(x == 2) return 0;\n    if(x == 0) return 5;\n}\nint m[50005][15], mt[50005];//\u6211\u4eec\u7684\u81ea\u52a8\u673a\nint id[105][105];//\u6bcf\u4e00\u5c42\u7ed3\u70b9\u7684\u7f16\u53f7\ninline void newlayer(){//\u65b0\u5efa\u4e00\u5c42\u540a\u6253\u81ea\u52a8\u673a\n    ++ layer;\n    for (register int i = 1;i <= n;i ++){\n        id[layer][i] = ++ tot;\n        mt[tot] = dunkon(t[i]);\n    }\n    for (register int i = 1;i <= n;i ++) m[id[layer][i]][t[i]] = id[layer][c[i][mt[id[layer][i]]]];\n}\nvoid duel(int x){//\u4ee5 x \u4e3a\u8d77\u70b9\uff0c\u51b3\u6597\uff01\n    int u = 1, cnt = 0;\n    while(m[u][t[x]] && cnt <= tot){//\u4e00\u76f4\u5904\u7406\u76f4\u5230\u5230\u8fbe\u8fb9\u754c\n    \t//\u6ce8\u610f\u8fd9\u91cc\u5e76\u4e0d\u9700\u8981\u8003\u8651\u6211\u4eec\u5f53\u524d\u662f\u5426\u80fd\u8d62\uff0c\u56e0\u4e3a\u5e76\u4e0d\u9700\u8981\u4fdd\u8bc1\uff0c\u53ea\u8981\u6211\u4eec\u8fdb\u5165\u5faa\u73af\u5c31\u4e00\u5b9a\u662f\u5168\u9762\u540a\u6253\u7684\u72b6\u6001\n        //\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e0d\u540c\u8d77\u70b9\u53ef\u80fd\u4f1a\u6709\u76f8\u540c\u7684\u8fc7\u7a0b\n        int my = mt[u];\n        int cp = t[x];\n        u = m[u][cp];\n        x = c[x][my];\n        ++ cnt;\n    }\n    if(cnt > tot) return ;//\u540e\u8005\u76f4\u63a5\u9000\u51fa\uff08\u4e8b\u5b9e\u4e0a\u8fd9\u91cc\u6211 tot \u9519\u5199\u6210 n \u4e5f\u8fc7\u4e86\uff09\n    newlayer();//\u65b0\u5efa\u4e00\u5c42\n    m[u][t[x]] = id[layer][c[x][mt[u]]];//\u8fde\u5230\u65b0\u5efa\u5c42\u7684\u5bf9\u5e94\u7ed3\u70b9\uff0c\u8fd9\u662f\u5173\u952e\u6b65\u9aa4\uff0c\u9700\u8981\u4ed4\u7ec6\u7406\u89e3\u3002\n}\n\nint main(){\n    read(n);\n    for (register int i = 1;i <= n;i ++){\n        char ch;readc(ch);t[i] = change(ch);\n        read(c[i][0]);read(c[i][5]);read(c[i][2]);\n    }\n    newlayer();//\u4ee5 1 \u4e3a\u8d77\u70b9\u540a\u6253\n    for (register int st = 2;st <= n;st ++) duel(st);//\u679a\u4e3e\u8d77\u70b9\n    fprint(tot, 10);\n    for (register int i = 1;i <= tot;i ++){\n        char ch = Change(mt[i]);int res;\n        putcha(ch);putcha(32);\n        res = m[i][0];\n        if(!res) res = 1;\n        fprint(res, 32);\n        res = m[i][5];\n        if(!res) res = 1;\n        fprint(res, 32);\n        res = m[i][2];\n        if(!res) res = 1;\n        fprint(res, 10);\n    }\n}\n\n```",
        "postTime": 1609747734,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6989 \u3010[NEERC2014]Epic Win!\u3011"
    }
]