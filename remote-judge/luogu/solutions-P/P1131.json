[
    {
        "content": "\u9898\u610f\u8ba9\u6211\u4eec\u7528\u6700\u5c11\u7684\u4ee3\u4ef7\u628a\u53f6\u5b50\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u8c03\u6210\u76f8\u540c\n\n\u663e\u7136\uff0c\u6211\u4eec\u8c03\u6574\u9760\u8fd1\u6839\u8282\u70b9\u7684\u6811\u679d\uff0c\u5176\u4e0b\u53f6\u5b50\u8282\u70b9\u8ddd\u79bb\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u90fd\u4f1a\u589e\u52a0\uff0c\u6240\u4ee5\uff0c**\u8c03\u6574\u8d8a\u9760\u6839\u8282\u70b9\u7684\u6811\u679d\u8c03\u6574\u7684\u4ee3\u4ef7\u8d8a\u5c11**\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u4f5c\u56fe\uff0c\u6548\u679c\u76f4\u89c2\uff0c\u5728\u6b64\u6211\u4eec\u7528**\u8282\u70b9\u6df1\u5ea6**\u7c7b\u6bd4**\u8ddd\u79bb**\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u627e\u5230\u6700\u6df1\u7684\u53f6\u5b50\u8282\u70b9\n\n\u518d\u4ece**\u6700\u5c0f\u7684\u5b50\u6811**\u5f00\u59cb\uff0c\u628a\u6240\u6709\u5b50\u8282\u70b9\u8c03\u6574\u5230**\u540c\u4e00\u6df1\u5ea6**\uff0c\u518d\u8c03\u6574\u5b50\u6811\u4e0a\u9762\u7684\u6811\u679d\n\n\u7406\u89e3\u4e0d\u4e86\u7684\u8bdd\u770b\u8fd9\u4e2a\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/34776.png)\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u7528\u6700\u5c11\u7684\u4ee3\u4ef7\u628a\u6240\u6709\u53f6\u5b50\u8282\u70b9\u8c03\u6574\u5230\u540c\u4e00\u6df1\u5ea6\n\n\u6211\u4eec\u7406\u89e3\u4e86\u8fd9\u4e2a\u95ee\u9898\u5c31\u53ef\u4ee5\u8bbe\u8ba1dfs\u4e86\n\n\u6bcf\u6b21\u8c03\u6574\u7684\u4ee3\u4ef7\u90fd\u662f$dis[x]-(dis[ver[i]+edge[i])$\n\n\u628a\u5b83\u7d2f\u52a0\u5373\u53ef\n\n\u4e0b\u9762\u662f\u8be6\u7ec6\u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=500010;\nint head[N],ver[N],next[N],tot,n,st,edge[N];\nlong long ans,dis[N];\nvoid add(int x,int y,int z)//\u5efa\u56fe\n{\n\tver[++tot]=y;\n\tedge[tot]=z;\n\tnext[tot]=head[x];\n\thead[x]=tot;\n} \nvoid dfs(int x,int fa)\n{\n\tfor(int i=head[x];i;i=next[i])\n\t{\n\t\tint y=ver[i],z=edge[i];\n\t\tif(y==fa) continue;\n\t\tdfs(y,x);//\u7ee7\u7eed\u641c\u5b50\u6811\n\t\tdis[x]=max(dis[x],dis[y]+z);\u66f4\u65b0\u8fd9\u68f5\u5b50\u6811\u6839\u8282\u70b9\u548c\u53f6\u5b50\u8282\u70b9\u7684\u6700\u5927\u8ddd\u79bb\n\t}\n\tfor(int i=head[x];i;i=next[i])\n\t{\n\t\tint y=ver[i],z=edge[i];\n\t\tif(y==fa) continue;\n\t\tans+=dis[x]-(dis[y]+z);//\u7d2f\u52a0\u6bcf\u6b21\u8c03\u6574\u7684\u4ee3\u4ef7\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&st);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x,y,z;\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd(x,y,z);add(y,x,z);//\u6ce8\u610f\u53cc\u5411\u8fb9\n\t}\n\tdfs(st,0);\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1538218533,
        "uid": 74896,
        "name": "Mathison",
        "ccfLevel": 0,
        "title": "P1131 \u65f6\u6001\u540c\u6b65\u3010\u6811\u3011"
    },
    {
        "content": "\n\n# \u601d\u8def\n\u770b\u8f93\u5165\u6570\u636e\uff0c\u7531\u4e8en\u4e2a\u8282\u70b9\u53ea\u6709n-1\u6761\u8fb9\uff0c\u4e0d\u96be\u770b\u51fa\u8fd9\u662f\u4e00\u68f5\u6811\u3002\u6211\u4eec\u53ef\u4ee5\u53cd\u7740\u601d\u8003\uff0c\u5c31\u662f\u8ba9\u6240\u6709\u53f6\u5b50\u8282\u70b9\u540c\u65f6\u53d1\u51fa\u4fe1\u53f7\uff0c\u7136\u540e\u8fd9\u4e9b\u4fe1\u53f7\u540c\u65f6\u5230\u8fbe\u6839\u8282\u70b9\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u81ea\u4e0b\u800c\u4e0a\u7684\u8fdb\u884c\u7ef4\u62a4\uff0c\u4f7f\u5f97\u6bcf\u4e00\u8282\u70b9\u6240\u6709\u5b50\u8282\u70b9\u7684\u4fe1\u53f7\u540c\u65f6\u5230\u8fbe\u8be5\u8282\u70b9\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u5982\u4f55\u7ef4\u62a4\u3002\u6211\u4eec\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u641c\u7d22\uff0c\u641c\u7d22\u5230\u53f6\u5b50\u8282\u70b9\uff0c\u56de\u6eaf\u7684\u65f6\u5019\u8fdb\u884c\u7ef4\u62a4\uff0c\u5148\u7ef4\u62a4\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u5230\u8be5\u8282\u70b9\u6700\u5927\u8fb9\u6743\uff08\u8fb9\u6743\u4e3a**\u53f6\u5b50**\u8282\u70b9\u5230\u540c\u65f6\u5230\u8fbe\u5b83\u6240\u9700\u8981\u65f6\u95f4\uff09\u3002\u7136\u540e\u7ef4\u62a4\u7b54\u6848\uff0c\u7b54\u6848\u4e3a\u6700\u5927\u8fb9\u6743\u51cf\u53bb\u6240\u6709\u5230\u5b50\u8282\u70b9\u7684\u8fb9\u6743\u3002\u7136\u540e\u7ef4\u62a4\u7236\u8282\u70b9\u7684\u8fb9\u6743\uff0c\u7236\u8282\u70b9\u8fb9\u6743\u4e3a\u8be5\u8282\u70b9\u5b50\u8282\u70b9\u7684 \u6700\u5927\u8fb9\u6743+\u7236\u8282\u70b9\u5230\u8be5\u8282\u70b9\u7684\u65f6\u95f4\u3002\u7136\u540e\u5c31\u56de\u6eaf\uff0c\u91cd\u590d\u64cd\u4f5c\uff0c\u5230\u6839\u8282\u70b9\u4e3a\u6b62\u3002~~\u597d\u96be\u8bf4\u6e05\u695a\u554aQWQ  \u770b\u6ce8\u91ca\u66f4\u660e\u767d\u4e00\u70b9~~\n\n\u7136\u540e\u6211\u4eec\u8981\u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282\uff1a\n\n 1. \u4e00\u5b9a\u8981\u53cc\u5411\u52a0\u8fb9\uff0c\u662f\u65e0\u5411\u56fe\u3002\n 2.  \u65e2\u7136\u662f\u65e0\u5411\u56fe\uff0c\u7ef4\u62a4\u65f6\u4e0d\u8981\u628a\u5230\u7236\u8282\u70b9\u7684\u8fb9\u8ba1\u7b97\u4e86\u3002\n 3. \u7ef4\u62a4\u7684\u987a\u5e8f\u4e00\u5b9a\u4e0d\u80fd\u4e71\u3002\n 4. \u7b54\u6848\u8981\u7528long long \u5b58\u3002\n\n# \u4ee3\u7801\n\n```\n#include <bits/stdc++.h>\n#define MAXN 1000005\nusing namespace std;\nstruct Edge{int next,to,dis;} edge[MAXN];\nint n,s,a,b,t,maxn[MAXN],cnt,head[MAXN];  //maxn\u50a8\u5b58\u5230\u5b50\u8282\u70b9\u7684\u6700\u5927\u8fb9\u6743\nlong long ans;  //\u6ce8\u610f\uff0c\u7b54\u6848\u8981\u7528long long \u5b58\n\nvoid addedge(int from, int to, int dis)  \n{\n    edge[++cnt].next=head[from];\n    edge[cnt].to=to;\n    edge[cnt].dis=dis;\n    head[from]=cnt;\n}  //\u524d\u5411\u661f\u52a0\u8fb9\n\nvoid dfs(int x, int fa) //X\u4e3a\u5f53\u524d\u641c\u7d22\u8282\u70b9\uff0cfa\u4e3ax\u7684\u7236\u4eb2\u8282\u70b9\n{\n    for(int i=head[x]; i; i=edge[i].next)\n        if(edge[i].to!=fa) dfs(edge[i].to, x);\n    //\u8fd9\u4e00\u53e5\u4e00\u5b9a\u8981\u6700\u5148\uff0c\u5148\u641c\u7d22\u5230\u5e95\u5c42\uff0c\u56de\u6eaf\u65f6\u518d\u8fdb\u884c\u540e\u7eed\u5904\u7406\uff08\u4ece\u4e0b\u5411\u4e0a\u7ef4\u62a4\uff09\n    for(int i=head[x]; i; i=edge[i].next)\n        if(edge[i].to!=fa) maxn[x]=max(maxn[x], edge[i].dis);\n    //\u7ef4\u62a4\u5230\u5b50\u8282\u70b9\u7684\u6700\u5927\u8fb9\u6743\n    for(int i=head[x]; i; i=edge[i].next)\n    \tif(edge[i].to!=fa) ans+=(maxn[x]-edge[i].dis);\n    //\u7ef4\u62a4\u7b54\u6848\n    for(int i=head[fa]; i; i=edge[i].next)\n    \tif(edge[i].to==x) edge[i].dis+=maxn[x];\n    //\u8fd9\u4e00\u53e5\u4e0d\u80fd\u6f0f\uff0c\u66f4\u65b0\u7236\u8282\u70b9\u5230\u8be5\u8282\u70b9\u7684\u8fb9\u6743\n}//\u6ce8\u610f\u987a\u5e8f\u4e0d\u80fd\u4e71\n\nint main()\n{\n    scanf(\"%d%d\",&n,&s);\n    for(int i=1; i<=n-1; i++)\n    {\n        scanf(\"%d%d%d\",&a,&b,&t);\n        addedge(a, b, t);\n        addedge(b, a, t); //\u662f\u65e0\u5411\u56fe\uff0c\u53cc\u5411\u52a0\u8fb9\n    }\n    dfs(s, 0);\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1518336233,
        "uid": 56316,
        "name": "crazydave",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1131 \u3010\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "\u6b63\u89e3\uff1a\u6811\u5f62DP\n\n\u53ef\u4ee5\u8bc1\u660e\u8fd9n\u4e2a\u8282\u70b9\u7ec4\u6210\u4e00\u68f5\u6811\u3002\u4ee5\u4e0btime[i,j]\u8868\u793a\u4ece\u7b2ci\u4e2a\u8282\u70b9\u5230\u7b2cj\u4e2a\u8282\u70b9(i\u4e0ej\u4e4b\u95f4\u6709\u8fde\u8fb9)\u9700\u8981\u7684\u65f6\u95f4\u3002\n\n\u7528dp[i]\u8868\u793a\u4ece\u7b2ci\u4e2a\u8282\u70b9\u53d1\u51fa\u6fc0\u52b1\u7535\u6d41\uff0c\u5728i\u7684\u5b50\u6811\u91cc\u8fbe\u5230\u65f6\u6001\u540c\u6b65\u6700\u5c11\u9700\u8981\u64cd\u4f5c\u7684\u6b21\u6570\uff0c\n\nnum[i]\u8868\u793a\u4ece\u7b2ci\u4e2a\u8282\u70b9\u53d1\u51fa\u6fc0\u52b1\u7535\u6d41\uff0c\u5728i\u7684\u5b50\u6811\u91cc\u8fbe\u5230\u65f6\u6001\u540c\u6b65\u7684\u64cd\u4f5c\u6b21\u6570\u8fbe\u5230\u6700\u5c11\u65f6\uff0c\u4ece\u7b2ci\u4e2a\u8282\u70b9\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\u9700\u8981\u7684\u65f6\u95f4\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\nnum[i]=max{num[j]+time[i,j],j\u4e3ai\u7684\u5b50\u8282\u70b9}\n\ndp[i]=sigma{dp[j],j\u4e3ai\u7684\u5b50\u8282\u70b9}+sigma{num[i]-(num[j]+time[i,j]),j\u4e3ai\u7684\u5b50\u8282\u70b9}\n\n\u6700\u540e\u7ed3\u679c\u4e3adp[\u6fc0\u53d1\u5668\u6240\u5728\u8282\u70b9\u7684\u7f16\u53f7]\u3002\n",
        "postTime": 1499268395,
        "uid": 29936,
        "name": "xyz32768",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "/\\*\n\u542c\u8bf4\u8fd9\u9898\u8981\u7528\u6811\u5f62\u52a8\u5f52\uff1b\n\n\u4f46\u672c\u4eba\u662f\u4e2a\u849f\u84bb\uff1b\n\n\u4e0d\u4f1a........\uff1b\n\n\u6240\u4ee5\u5c31\u60f3\u4e86\u4e2a\u66b4\u529b\uff1b\n\n\u4ece\u6839\u8282\u70b9\uff08\u6fc0\u53d1\u5668\uff09\u5f00\u59cb\u641c\uff1b\n\n\u4e00\u76f4\u641c\u5230\u53f6\u5b50\u8282\u70b9\uff1b\u7136\u540e\u56de\u6eaf\uff1b\n\n\u56de\u6eaf\u7684\u8fc7\u7a0b\u4e2d\u5982\u679c\u9047\u5230\u6709\u51e0\u4e2a\u53f6\u5b50\u8282\u70b9\u5230\u8fd9\u4e00\u4e2a\u8282\u70b9\uff1b\n\n\u5c31\u7528\u9053\u5177\u628a\u4e0d\u8db3\u7684\u8865\u8db3\uff1b\u540c\u65f6\u8bb0\u5f55\u6709\u591a\u5c11\u4e2a\u5230\u8fbe\u8fd9\u4e2a\u70b9\u7684\u53f6\u5b50\u7ed3\u70b9\uff1b\n\n\u56e0\u4e3a\u4ee5\u540e\u8981\u66f4\u65b0\u7684\u8bdd\u8981\u628a\u4ee5\u524d\u5230\u8fd9\u4e2a\u70b9\u7684\u8def\u5f84\u4e0d\u8db3\u7684\u90fd\u8981\u8865\u8db3\uff1b\n\n\\*/\n```cpp\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#define maxn 504561\nusing namespace std;\nint head[maxn*2];\nlong long a[maxn*2];\nint n,m,s,num;\nlong long ans=0;\nbool vis[maxn];\nstruct point\n{int to,next,dis;}e[maxn*2];\nvoid add(int from,int to,int dis)\n{\n    e[++num].next=head[from];\n    e[num].to=to;\n    e[num].dis=dis;\n    head[from]=num;\n}\nvoid dfs(int u)\n{\n    vis[u]=1;\n    int cnt=0;\n    for(int i=head[u];i!=0;i=e[i].next)\n    {\n        int to=e[i].to;\n        if(!vis[to])\n        {\n                dfs(to);\n               if(a[to]+e[i].dis>a[u])\n               {\n                   ans+=(a[to]+e[i].dis-a[u])*cnt;\n                   cnt++;\n                   a[u]=a[to]+e[i].dis;\n               }\n               else\n               {\n                   ans+=a[u]-a[to]-e[i].dis;\n                   cnt++;\n               }\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&s);\n    for(int i=1;i<n;i++)\n    {int x,y,z;\n    scanf(\"%d%d%d\",&x,&y,&z);\n    add(x,y,z);add(y,x,z);}\n    memset(vis,0,sizeof(vis));\n    dfs(s);\n    printf(\"%lld\",ans);\n    return 0;\n}\n```",
        "postTime": 1509191910,
        "uid": 35364,
        "name": "LYang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "# \u611f\u89c9\u8fd9\u5e76\u4e0d\u662f\u4e00\u9053DP..\n\n## \u6211\u662f\u76f4\u63a5\u5efa\u4e86\u4e00\u4e2a\u6811\uff0c\u60f3\u60f3\u5c31\u8fc7\u4e86\u3002\n\n\n\u9996\u5148\u6211\u4eec\u4ee5\u6fc0\u53d1\u5668\u6765\u5efa\u4e00\u68f5\u6811\n\n\u7136\u540edfs\u627e\u51fa\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\n\nf[i]\u8868\u793ai\u70b9\u5b50\u6811\u4e0a\u53f6\u8282\u70b9\u7684\u6700\u5927\u8ddd\u79bb\n\n\u5728\u540c\u4e00\u4e2a\u5206\u652f\uff0c\u4ed6\u7684\u6240\u6709\u53f6\u8282\u70b9\u90fd\u5fc5\u987b\u8981\u662f**\u76f8\u540c**\u7684\uff0c\u800c\u4e14**\u4e0d\u80fd\u51cf\u5c11**\n\n\u6240\u4ee5\u627e\u51fa\u5176\u4e2d\u7684\u6700\u5927\u503c\uff0c\u5176\u4ed6\u7684\u589e\u52a0\u90a3\u4e48\u591a\n\n\u6700\u540e\u6c47\u603b\u5230\u6839\u8282\u70b9\u5c31\u662f\u6700\u540e\u7684\u7b54\u6848\n\n\n```cpp\n#include<cstdio>\n#define fmax(a,b) ((a)>(b)?(a):(b))\n\nstruct edge{\n    long long from,to,dis;\n    long long next;\n}e[1000010];\n\nlong long n,s,len,ans,vis[500010],f[500010],head[500010];\n\nlong long v_in(){\n    long long sum=0;\n    char ch=getchar();\n    while (ch<'0'||ch>'9') ch=getchar();\n    while (ch>='0'&&ch<='9'){\n        sum=sum*10+ch-'0';\n        ch=getchar();\n    }\n    return sum;\n}\n\nvoid add(long long u,long long v,long long w){//\u52a0\u8fb9\u5904\u7406 \n    e[++len].from=u;\n    e[len].to=v;\n    e[len].dis=w;\n    e[len].next=head[u];\n    head[u]=len;\n}\n\nvoid dfs1(long long u){\n    vis[u]=1;\n    for (long long i=head[u];i!=0;i=e[i].next){\n        long long v=e[i].to;\n        if (vis[v]==0){\n            dfs1(v);\n            f[u]=fmax(f[u],f[v]+e[i].dis);//\u6df1\u641c\u8ddd\u79bb \n        }\n    }\n}\n\nvoid dfs2(long long u){\n    vis[u]=1;\n    for (long long i=head[u];i!=0;i=e[i].next){\n        long long v=e[i].to;\n        if (vis[v]==0){\n            dfs2(v);\n            ans+=f[u]-f[v]-e[i].dis;//\u6211\u4eec\u8981\u4fdd\u8bc1\u6bcf\u68f5\u5b50\u6811\u7684\u6240\u6709\u53f6\u5b50\u8282\u70b9\u5230\u8be5\u70b9\u7684\u8ddd\u79bb\u76f8\u7b49\uff0c\u6240\u4ee5\u5fc5\u987b\u5c06\u4ed6\u4eec\u90fd\u4fee\u6539\u5230\u6700\u5927\u503c \n        }\n    }\n}\n\nint main(){\n    n=v_in();\n    s=v_in();\n    for (long long i=1;i<n;i++){\n        long long u=v_in(),v=v_in(),w=v_in();//\u8bfb\u5165\u8fb9\uff0c\u52a0\u65e0\u5411\u8fb9 \n        add(u,v,w);\n        add(v,u,w);\n    }\n    dfs1(s);//\u7b2c\u4e00\u904d\u6df1\u641c\u627e\u51fa\u6bcf\u4e2a\u70b9\u5b50\u6811\u8ddd\u79bb\u6700\u5927\u503c \n    for (int i=1;i<=n;i++) vis[i]=0;\n    dfs2(s);//\u7b2c\u4e8c\u904d\u6df1\u641c\u627e\u51fa\u9700\u8981\u4f7f\u7528\u7684\u6700\u5c0f\u503c \n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1507383458,
        "uid": 37781,
        "name": "\u6211\u4e0d\u662f\u67f3\u6a59\u6c41",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "### \u4e00\u7ef4\u6811\u5f62DP\n\n\u5176\u5b9e\u9898\u76ee\u662f\u8981\u6c42\u6211\u4eec\u5728\u67d0\u4e9b\u8fb9\u4e0a\u589e\u52a0\u4e00\u4e9b\u6743\u503c\uff0c\u4f7f\u5f97\u6839\u5230\u53f6\u5b50\u7684\u6bcf\u4e00\u6761\u94fe\u957f\u5ea6\u90fd\u76f8\u7b49\uff0c\u6c42\u589e\u52a0\u7684\u6743\u503c\u548c\u6700\u5c0f\u662f\u591a\u5c11\u3002\n\n\u4e0d\u96be\u60f3\u5230\u6211\u4eec\u628a\u5176\u4ed6\u7684\u94fe\u90fd\u5411\u6700\u957f\u94fe\u770b\u9f50\u5c31\u884c\u4e86\u3002\n\n\u4e8e\u662f\u6211\u5b9a\u4e49\u4e86\u4e00\u4e9b\u53d8\u91cf\uff1a\n\n- $f[i]$\uff1a\u8868\u793a\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u4e0a\u81f3\u5c11\u589e\u52a0\u591a\u5c11\u6743\u503c\u624d\u80fd\u5b8c\u6210\u7edf\u4e00\u3002\n- $maxn[i]$\uff1a\u8868\u793a\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u5230\u53f6\u8282\u70b9\u7684\u6700\u957f\u94fe\u957f\u5ea6\u3002\n- \u8fd8\u6709\u4e00\u4e9b\u53d8\u91cf\u4e0d\u9700\u8981\u5b9a\u4e49\u6210\u5168\u5c40\uff08\u7528\u4e8e\u5361\u5e38\uff0c\u4e3a\u4ec0\u4e48\u6ce5\u840c\u90fd\u4e0d\u5361\u5e38\u554aQAQ\uff09\u3002\u6bd4\u5982\uff1a\n  - $cnt$\uff1a\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u51fa\u53d1\u70b9\uff0c\u8fde\u63a5\u975e\u7236\u8282\u70b9\u7684\u8fb9\u6570\n  - $sum$\uff1a\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u5b50\u6811\u7684\u6240\u6709\u94fe\u957f\u5ea6\u603b\u548c\u3002\n\n\u7136\u540e\u8fd9\u9898\u5c31\u5f88\u6c34\u4e86\u3002\u52a8\u89c4\u65b9\u7a0b\u4e5f\u53ef\u4ee5\u5f88\u5feb\u7684\u5199\u51fa\u6765\uff1a\n\n$$f[u] = \\sum{(f[v]+maxn[u]-maxn[v]-w[u,v]}$$\n\n\uff08\u5176\u4e2d\u7684$w[u,v]$\u8868\u793a$u$\u548c$v$\u4e24\u70b9\u4e4b\u95f4\u7684\u8fb9\u7684\u6743\u503c\uff09\n\n\u4e3a\u4e86\u5361\u5e38\uff0c\u6211\u4eec\u7528\u4e0a\u9762\u7684\u53d8\u91cf\u5316\u7b80\u4e00\u4e0b\uff1a\n\n$$f[u]=\\sum{f[v]}+maxn[u] \\times cnt - sum$$\n\n\u7136\u540e\u4ee3\u7801\u5c31\u5199\u51fa\u4e86\u3002\n\n\u6ce8\u610f\uff1a\n\n- \u5f00LL\n- \u5efa\u53cc\u5411\u8fb9\u3002\n- \u5982\u679c\u679a\u4e3e\u8fb9\u7684\u65f6\u5019\u8fde\u5230\u4e86\u7956\u5148\uff0c``continue``\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long \nusing namespace std;\n\nconst int MaxN = 5e5 + 5;\nconst int MaxM = MaxN * 2;\nint n, s;\nstruct Edge {\n    int v, nxt, w;\n}edge[MaxM];\nint head[MaxN], k = 0;\nint maxn[MaxN], f[MaxN];\n\nvoid addedge(int u, int v, int w) //\u8fde\u8fb9\n{\n    edge[++k].v = v;\n    edge[k].w = w;\n    edge[k].nxt = head[u];\n    head[u] = k;\n}\n\nvoid insert(int u, int v, int w) //\u53cc\u5411\u8fb9\n{\n    addedge(u, v, w), addedge(v, u, w);\n}\n\nvoid dfs(int u, int fa) //dfs\n{\n    f[u] = 0; //\u521d\u503c\u4e3a0\n    maxn[u] = 0;\n    int sum = 0, cnt = 0;\n    for(int i = head[u]; i; i = edge[i].nxt) {\n        int v = edge[i].v;\n        if(v == fa) continue;\n        dfs(v, u); //\u5148\u9012\u5f52\u5904\u7406\u513f\u5b50\n        cnt++;\t//\u53d1\u51fa\u8fb9\u6570++\n        int w = edge[i].w; \n        f[u] += f[v]; //\u7d2f\u52a0\u5b50\u6811\u9700\u8981\u589e\u52a0\u7684\u6743\u548c\n        maxn[u] = max(maxn[v] + w, maxn[u]); //\u66f4\u65b0\u6700\u957f\u94fe\n        sum += maxn[v] + w; //\u66f4\u65b0\u5b50\u6811\u6743\u548c\u3002\u5b50\u6811\u5df2\u7ecf\u5b8c\u6210\u5927\u4e00\u7edf\u4e86\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u52a0\u4e0amaxn\u5c31\u884c\u4e86\u3002\n    }\n    f[u] += maxn[u] * cnt - sum; //\u8f6c\u79fb\n}\n\nsigned main()\n{\n    scanf(\"%lld%lld\", &n, &s);\n    for(int i = 1; i < n; i++) {\n        int u, v, w;\n        scanf(\"%lld%lld%lld\", &u, &v, &w);\n        insert(u, v, w);\n    }\n    dfs(s, 0);\n    /*\n    for(int i = 1; i <= n; i++) printf(\"%d \", f[i]);\n    printf(\"\\n\");\n    for(int i = 1; i <= n; i++) printf(\"%d \", maxn[i]);\n    */\n    printf(\"%lld\", f[s]);\n}\n```\n\n",
        "postTime": 1562811421,
        "uid": 92254,
        "name": "Social_Zhao",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "### \u8d2a\u5fc3+DFS\u505a\u6cd5\n\n\u548c\u5176\u4ed6\u9898\u89e3\u4e2d\u7684\u601d\u8def\u90fd\u4e0d\u592a\u4e00\u6837\uff0c\u9996\u5148\u6211\u4eec\u627e\u5230\u4e00\u4e2a\u79bb\u6839\u8282\u70b9\u6700\u8fdc\u7684\u8ddd\u79bb$dis$\u3002\u7136\u540e\u6211\u4eec\u7684\u76ee\u6807\u662f\u5c06\u6240\u6709\u53f6\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u90fd\u8c03\u6574\u6210$dis$\u3002\uff08\u8fd9\u4e2a\u5e94\u8be5\u6bd4\u8f83\u660e\u663e\uff0c\u4e0d\u53ef\u80fd\u66f4\u5c0f\uff0c\u66f4\u5927\u7684\u8bdd\u5c31\u4e0d\u6ee1\u8db3\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u7684\u8981\u6c42\uff09\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5047\u5982\u70b9$x$\u5411\u6240\u6709\u5b50\u8282\u70b9\u7684\u8fde\u8fb9\u4e0a\u7684\u64cd\u4f5c\u6b21\u6570\u7684\u6700\u5c0f\u503c\u4e3a$k$\uff0c\u90a3\u4e48\u8fd9\u4e2a$k$\u5176\u5b9e\u53ef\u4ee5\u8f6c\u79fb\u5230$x$\u5411\u7236\u8282\u70b9\u7684\u8fde\u8fb9\u4e0a\u3002\u4f8b\u5982\uff1a\n\n![Luogu](https://cdn.luogu.com.cn/upload/pic/59842.png)\n\n\u8fb9\u4e0a\u7684\u6570\u5b57\u8868\u793a\u8fd9\u6761\u8fb9\u4e0a\u8fdb\u884c\u4e86\u591a\u5c11\u6b21\u64cd\u4f5c\u3002\u5bf9\u4e8e$2$\u53f7\u70b9\u6765\u8bf4\uff0c\u5176\u6240\u6709\u5b50\u8282\u70b9\u5230\u5b83\u7684\u8fde\u8fb9\u64cd\u4f5c\u6b21\u6570\u6700\u5c0f\u503c\u662f$3$\uff0c\u90a3\u4e48\u8fd9\u4e2a$3$\u5c31\u53ef\u4ee5\u8f6c\u79fb\u5230$2$\u4e0e\u7236\u8282\u70b9$1$\u7684\u8fde\u8fb9\u4e0a\uff0c\u4ece\u800c\u6bcf\u4e2a\u5b50\u8282\u70b9\u7684\u64cd\u4f5c\u6b21\u6570\u90fd\u53ef\u4ee5\u51cf\u5c113\uff0c\u4ece\u800c\u8fbe\u5230\u51cf\u5c11\u64cd\u4f5c\u6b21\u6570\u7684\u76ee\u7684\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u7528$dp[x]$\u8868\u793a$x$\u8fde\u5411\u7236\u8282\u70b9\u7684\u8fb9\u7684\u64cd\u4f5c\u6b21\u6570\u3002\u901a\u8fc7dfs\uff0c\u641c\u5230\u53f6\u5b50\u8282\u70b9$p$\u65f6\u82e5\u5b83\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u4e3a$q$\uff0c\u5219$dp[p]=dis-q$\uff0c\u8868\u793a\u5176\u4e00\u5f00\u59cb\u7684\u8ddd\u79bb\u662f$q$\uff0c\u6700\u7ec8\u8981\u8fbe\u5230$dis$\uff0c\u63a5\u4e0b\u6765\u5728\u56de\u6eaf\u65f6\u6267\u884c\u8f6c\u79fb\uff1a\n\n$$dp[x]=\\min\\limits_{y\\in son(x)}(dp[y])$$\n\n\u8bbe$x$\u7684\u5b50\u8282\u70b9\u6709$cnt$\u4e2a\uff0c\u90a3\u4e48\u539f\u672c$cnt$\u4e2a$dp[x]$\u88ab\u8f6c\u79fb\u5230\u4e86\u4e00\u4e2a\u70b9$x$\u4e0a\uff0c\u6240\u4ee5\u7b54\u6848\u8981\u51cf\u5c11$dp[x]\\times (cnt-1)$\u3002\u6700\u7ec8\u56de\u6eaf\u5230\u6839\u8282\u70b9\u65f6\u5373\u4e3a\u7b54\u6848\u3002\n\n\u6ce8\u610f\u6839\u8282\u70b9\u65e0\u6cd5\u6267\u884c\u4e0a\u9762\u7684\u8f6c\u79fb\u65b9\u7a0b\uff0c\u56e0\u4e3a\u6839\u8282\u70b9\u6ca1\u6709\u518d\u5f80\u4e0a\u7684\u8fb9\u4e86\u3002\u4e0d\u8fc7\u518d\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\uff0c\u4f1a\u53d1\u73b0\u5982\u679c\u6267\u884c\u4e5f\u65e0\u59a8\uff0c\u56e0\u4e3a$dp[root]$\u5fc5\u7136\u662f$0$\uff0c\u56e0\u4e3a\u4e00\u5b9a\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u662f\u4e0d\u9700\u8981\u4efb\u4f55\u64cd\u4f5c\u7684\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int MAXN=500010;\nint n,s,x,y,z,tot,hd[MAXN],ver[MAXN*2],nx[MAXN*2];\nll edge[MAXN*2],dp[MAXN],ans,maxn;\nvoid add_edge(int x,int y,ll z) {    //\u5efa\u8fb9\n    ver[++tot]=y;\n    edge[tot]=z,nx[tot]=hd[x];\n    hd[x]=tot;\n    return;\n}\nvoid dfs1 (int x,int fa,ll dep) {    //\u8ba1\u7b97\u6700\u5927\u8ddd\u79bb\n    int cnt=0;\n    for (int i=hd[x];i;i=nx[i]) {\n        if (ver[i]==fa) {continue;}\n        dfs1(ver[i],x,dep+edge[i]);\n        cnt++;\n    }\n    if (cnt==0) {maxn=max(maxn,dep);}\n    return;\n}\nvoid dfs (int x,int fa,ll dep) {     //\u7b97\u7b54\u6848\n    ll minn=1e18,cnt=0;\n    for (int i=hd[x];i;i=nx[i]) {\n        if (ver[i]==fa) {continue;}\n        dfs(ver[i],x,dep+edge[i]);\n        cnt++,minn=min(minn,dp[ver[i]]);\n    }\n    if (cnt==0) {    //\u53f6\u5b50\u8282\u70b9\n        dp[x]=maxn-dep,ans+=maxn-dep;\n        return;\n    }\n    if (x!=s) {    //\u8fd9\u4e2aif\u53ef\u4ee5\u53bb\u6389\n        ans-=(cnt-1)*minn,dp[x]=minn;\n    }\n    return;\n}\nint main () {\n    scanf(\"%d%d\",&n,&s);\n    for (int i=1;i<=n-1;i++) {\n        scanf(\"%d%d%d\",&x,&y,&z);\n        add_edge(x,y,z),add_edge(y,x,z);\n    }\n    dfs1(s,0,0);\n    dfs(s,0,0);\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1559294276,
        "uid": 113546,
        "name": "ix35",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u663e\u7136\u65f6\u6001\u540c\u6b65\u4e4b\u540e\uff0c\u6700\u957f\u7684\u65f6\u95f4\u5373\u4e3a\u539f\u6811\u4e2d\u8ddd\u79bb\u6839\u8282\u70b9\u6700\u8fdc\u7684\u53f6\u5b50\u8282\u70b9\u7684\u8ddd\u79bb\u3002\u5176\u5b83\u7684\u70b9\u53ea\u9700\u8981\u53d8\u5230\u8ddf\u5b83\u4e00\u6837\u957f\u5373\u53ef\u3002\u4e00\u79cd\u5f88\u76f4\u89c2\u7684\u505a\u6cd5\uff0c\u4ee4 dis[u] \u8868\u793a u \u5230\u6839\u7684\u8ddd\u79bb\u3002\u4ee4 Max \u4e3a\u6700\u8fdc\u7684\u53f6\u5b50\u8282\u70b9\u5230\u6839\u7684\u8ddd\u79bb\uff0cw[u]=Max-dis[u] (\u5982\u679c u \u662f\u53f6\u5b50\u8282\u70b9) \u6216 w[u] = min(w[v]) (u\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0cv\u662fu\u7684\u513f\u5b50) \u3002\u8d2a\u5fc3\u7684\u60f3\uff0c\u5982\u679c\u8981\u628a\u4e24\u4e2a\u70b9\u90fd\u53d8\u7684\u540c\u6b65\uff0c\u90a3\u4e48\u80af\u5b9a\u5728\u5b83\u4eec\u7684 lca \u5904 +w[lca]\uff0c\u8fd9\u6837\u80af\u5b9a\u4e0d\u4e8f\u3002\u6240\u4ee5\u53ef\u4ee5yy\u51fa\u4e00\u79cd\u7b97\u6cd5\u3002\u4ece\u6839\u5f00\u59cbdfs\uff0c\u5047\u8bbe\u5f53\u524d\u8282\u70b9\u662fu\uff0c\u5c06 u \u7684\u6240\u6709\u5b50\u6811\u7684 w[v] - w[u]\uff0cans += w[u]\uff0c\u9012\u5f52\u5230\u5b50\u6811\uff0cdfs\u5e8f\u4e4b\u540e\uff0c\u76f8\u5f53\u4e8e\u533a\u95f4\u4fee\u6539\u548c\u5355\u70b9\u67e5\u8be2\uff0c\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002~~\u611f\u89c9\u81ea\u5df1\u90fd\u6ca1\u5199\u660e\u767d\u3002~~\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define maxn 500010\n#define ll long long\n#define INF 1000000000\nusing namespace std;\n\nint n, s;\nll ans;\n\nstruct Edge{\n    int to, next, w;\n}e[maxn << 1]; int sz, head[maxn];\ninline void add_edge(int u, int v, int w){\n    e[sz].to = v; e[sz].w = w;\n    e[sz].next = head[u]; head[u] = sz++;\n}\n\nll Bit[maxn];\ninline int lowbit(int x){return x & -x;}\n\ninline void add(int i, int v){\n    while(i <= n){Bit[i] += v; i += lowbit(i);}\n}\n\ninline int query(int i){int sum = 0;\n    while(i){sum += Bit[i]; i -= lowbit(i);}\n    return sum;\n}\n\nint in[maxn], out[maxn], w[maxn], cnt, Max, le[maxn], c;\nvoid dfs1(int u, int fa){\n    in[u] = ++cnt; bool f = 0;\n    for(int i = head[u]; ~i; i = e[i].next){\n        int v = e[i].to, _w = e[i].w;\n        if(v == fa) continue; f = 1;\n        w[v] = w[u] + _w; dfs1(v, u);\n    }\n    out[u] = cnt;\n    if(!f) le[++c] = u, Max = max(Max, w[u]);\n}\n\nvoid dfs2(int u, int fa){\n    int Min = INF; bool f = 0;\n    for(int i = head[u]; ~i; i = e[i].next){\n        int v = e[i].to; if(v == fa) continue; f = 1;\n        dfs2(v, u); Min = min(Min, w[v]); \n    }\n    if(f) w[u] = Min;\n}\n\nvoid dfs3(int u, int fa){\n    bool f = 0;\n    for(int i = head[u]; ~i; i = e[i].next){\n        int v = e[i].to, w = query(in[v]); if(v == fa) continue; f = 1;\n        add(in[v], -w); add(out[v] + 1, w); ans += w; dfs3(v, u);\n    }\n    if(!f) ans += query(in[u]);\n}\n\nint main(){ memset(head, -1, sizeof head);\n    scanf(\"%d%d\", &n, &s);\n    for(int i = 1; i < n; ++i){\n        int x, y, z; scanf(\"%d%d%d\", &x, &y, &z);\n        add_edge(x, y, z); add_edge(y, x, z);\n    }\n    dfs1(s, -1);\n    for(int i = 1; i <= c; ++i) w[le[i]] = Max - w[le[i]];  dfs2(s, -1);\n    for(int i = 1; i <= n; ++i) add(in[i], w[i]), add(in[i] + 1, -w[i]); dfs3(s, -1);\n    cout << ans;\n    return 0;\n}\n```",
        "postTime": 1519821702,
        "uid": 34531,
        "name": "DDOSvoid",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "\u65e2\u7136\u82cf\u795e\u8bf4\u8fd9\u662f\u6811\u578b\u80cc\u5305 \u90a3\u5b83\u5c31\u662f\u5427\n# \u6811\u578bDP+\u5206\u7ec4\u80cc\u5305\n\u6839\u636e\u6837\u4f8b\u5224\u65ad\u662f\u4e00\u68f5\u6811 \u901a\u8fc7\u753b\u56fe\u5f88\u5bb9\u6613\u5f97\u5230\u53ea\u8981\u6c42\u51fa\u6700\u957f\u94fe\u540e \u5bf9\u6bcf\u6761\u94fe\u8c03\u6574\u5373\u53ef\n\u8c03\u6574\u7684\u65f6\u5019 \u4ece\u4e0b\u5f80\u4e0a\u8c03\u6574\u5373\u53ef\n![](http://101.200.56.58/wp-content/uploads/2019/10/image-1.png)\n\u5411\u4e0b\u627e\u7684\u65f6\u5019\u8fdb\u884c\u4fee\u6539 \u627e\u5b8c\u4ee5\u6bcf\u4e2a\u8282\u70b9\u4ee5\u4e0b\u7684\u6700\u957f\u94fe \u8bb0\u5f55\u4fee\u6539\u503c\u5e76\u5c06\u6700\u5927\u503c\u56de\u6eaf\u4e0a\u53bb\n\u8be6\u7ec6\u7684\u770b\u4ee3\u7801\u5427\n# CODE\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nint wt[500100];\nstruct node\n{\n    int to,nex,w;\n}e[500100];\nint head[500100],N;\nint n,m;\nvoid add(int x,int y,int z)\n{\n    e[++N].to=y;\n    e[N].w=z;\n    e[N].nex=head[x];\n    head[x]=N;\n}\nint ans,val[500100],dp[500100];\nvoid dfs(int u,int fa)\n{\n\tfor(int i=head[u];i;i=e[i].nex)\n\t{\n\t\tint v=e[i].to;\n\t\tif(v!=fa)\n\t\t{\n\t\t\tdfs(v,u);\n\t\t\tdp[u]=max(dp[u],dp[v]+e[i].w);\n\t\t}\t\n    }\n    for(int i=head[u];i;i=e[i].nex)\n    {\n\t\tint v=e[i].to;\n\t\tif(v!=fa)\n\t\tans+=dp[u]-(dp[v]+e[i].w);\n\t}\n}\nsigned main()\n{\n    cin>>n;\n    int rt;\n    cin>>rt;\n    for(int i=1;i<=n-1;i++)\n    {\n        int x,y,z;\n        cin>>x>>y>>z;\n\t\tadd(x,y,z);\n\t\tadd(y,x,z); \n    }\n    dfs(rt,rt);\n    cout<<ans<<endl;\n}\n```\n",
        "postTime": 1572337219,
        "uid": 58064,
        "name": "COUPDETAT",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "\u6811\u5f62DP\u5417\uff1f\u5b8c\u5168~~\u4e0d\u4f1a~~\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u8981\u7528\u3002\n# \u8d2a\u5fc3\n\n### \u9996\u5148\u660e\u786e\u4e00\u4e2a\u6027\u8d28\uff1a\n>\u8981\u4f7f\u5f97\u6240\u6709\u53f6\u5b50\u7684\u6df1\u5ea6\u76f8\u540c\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u5b50\u6811\u7684\u6df1\u5ea6\u90fd\u5fc5\u987b\u76f8\u540c\u3002\n\n### \u8bc1\u660e\uff1a\n>\u53ef\u4ee5\u7528\u53cd\u8bc1\u6cd5\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u8282\u70b9x\uff0c\u5b83\u7684\u5b50\u6811\u7684\u6df1\u5ea6\u5404\u4e0d\u76f8\u540c\uff0c\u90a3\u8fd9\u4e9b\u5b50\u6811\u7684\u53f6\u8282\u70b9\u5230x\u7684\u8ddd\u79bb\u4e00\u5b9a\u4e0d\u540c\u3002\u90a3\u4e48\u8fd9\u4e9b\u4e0d\u540c\u7684\u8ddd\u79bb\u5206\u522b\u52a0\u4e0ax\u5230root\u7684\u8ddd\u79bb\u4e5f\u4e00\u5b9a\u4e0d\u540c\u3002  \n\n>\u4e0e\u9898\u76ee\u8981\u6c42\u4e0d\u7b26\uff0c\u6240\u4ee5\u8981\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\uff0c\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u6df1\u5ea6\u5fc5\u7136\u76f8\u540c\u3002  \n\n>\u8bc1\u6bd5\u3002\n\n### \u7b56\u7565\n\u65e2\u7136\u6211\u4eec\u8981\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u6240\u6709\u5b50\u6811\u6df1\u5ea6\u76f8\u540c\uff0c\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u7684\u5904\u7406\u6bcf\u4e2a\u70b9\uff0c\u628a\u6df1\u5ea6\u7528\u9053\u5177\u5f3a\u884c\u8865\u5230\u76f8\u540c\u3002\n\n\u5728dfs\u7684\u65f6\u5019\uff0c\u628a\u5f53\u524d\u641c\u7d22\u7684\u8fd9\u4e2a\u70b9\u7684\u5b50\u6811\u4e2d\u6700\u6df1\u7684\u6df1\u5ea6\u8bb0\u4e3amaxdeep\u3002\n\n\u4e4b\u540eans += \u2211(maxdeep - \u8fd9\u4e2a\u70b9\u7684\u5176\u5b83\u5b50\u6811\u7684\u6df1\u5ea6);\n\n\u7ec6\u8282\u770b\u4ee3\u7801\u5427\n\n### Code\n```\n#include<iostream>\n#include<cstdio>\n#include<cctype>\n#define int long long//\u4e0d\u5f00LL\u4f1a66\u5206\u7684\nusing namespace std;\n\nconst int MAXN = 500000 + 5;\n\nstruct Edge {\n\tint nxt;\n\tint to,w;\n} l[MAXN<<1];\n\nint n,root,ans;\nint head[MAXN],cnt;\nint maxdeep[MAXN];\n\ninline int rd() {\n\tint x=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)) {f=(ch=='-')?-1:1;ch=getchar();}\n\twhile(isdigit(ch)) {x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\n\ninline void add(int x,int y,int z) {\n\tcnt++;\n\tl[cnt].nxt = head[x];\n\tl[cnt].to = y;\n\tl[cnt].w = z;\n\thead[x] = cnt;\n\treturn;\n}\n\nvoid dfs(int x,int from) {\n\tint son = maxdeep[x];//\u63d0\u524d\u8bb0\u4e00\u4e0b\uff0c\u56e0\u4e3a\u4e0b\u9762\u66f4\u65b0\u8981\u7528\u5230\u539f\u6765maxdeep[x]\u7684\u503c\uff0c\u6240\u4ee5\u7528son\u6765\u8bb0\u6700\u5927\u7684\u6df1\u5ea6\n\tfor(int i = head[x];i;i = l[i].nxt) {\n\t\tif(l[i].to == from) continue;\n\t\tmaxdeep[l[i].to] = maxdeep[x] + l[i].w;\n\t\tdfs(l[i].to,x);\n\t\tson = max(son,maxdeep[l[i].to]);\n\t}\n\tmaxdeep[x] = son;\n\tfor(int i = head[x];i;i = l[i].nxt) {\n\t\tif(l[i].to == from) continue;\n\t\tans += maxdeep[x] - maxdeep[l[i].to];\n\t}\n\treturn;\n}\n\nsigned main() {\n\tscanf(\"%lld%lld\",&n,&root);\n\tint x,y,z;\n\tfor(register int i = 1;i < n;i++) {\n\t\tx = rd(), y = rd(), z = rd();\n\t\tadd(x,y,z), add(y,x,z);\n\t}\n\tdfs(root,-1);\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1540177648,
        "uid": 52200,
        "name": "Floatiy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "\u4ece\u6700\u4e0b\u9762\u5f80\u4e0a\u7406\u89e3\uff0c\u76f8\u540c\u7236\u4eb2\u7684\u4e24\u4e2a\u513f\u5b50\u7684\u8fb9\u4e00\u5b9a\u8981\u76f8\u540c\u7684\u8fb9\u6743\u3002\n\n\u7136\u540e\u5199\u4e2adfs\u5c31\u884c\u4e86\uff0c\u7b2c\u4e00\u7684\u795e\u728715ms %%%\n",
        "postTime": 1479279958,
        "uid": 20390,
        "name": "lwhllw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "\u8fd9\u9898\u597d\u50cf\u5f88\u6c34\u7684\u6837\u5b50QAQ\n\n\u8003\u8651\u6811\u4e0adp\uff0c\u8bbe$f_u$\u8868\u793au\u7684\u5b50\u6811\u65f6\u6001\u540c\u6b65\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c$dis_u$\u8868\u793au\u7684\u5b50\u6811\u65f6\u6001\u540c\u6b65\u540e\u7684\u5b50\u6811\u8fb9\u6743\u548c\n\n\u7136\u540e\u5199\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\n$$\\begin{cases}dis_u=max_{v\\in son(u)}dis_v+dist(u,v)\\\\f_u=\\sum_{v\\in son(u)}f_v+dis_u-dis_v-dist(u,v)\\end{cases}$$\n\n$dist(u,v)$\u8868\u793au\u5230v\u7684\u8ddd\u79bb\n\n\u56e0\u4e3a\u8fb9\u6743\u53ea\u80fd\u52a01\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u627e\u6700\u5927\u7684\u8fb9\u6765\u4f5c\u4e3a\u76f8\u540c\u7684\u8fb9\uff0c\u4e5f\u5c31\u662f\u513f\u5b50\u7684dis\u52a0\u4e0a\u8fd9\u6761\u8fb9\u53d6\u6700\u5927\u503c\n\n\u7136\u540e\u8d21\u732e\u7684\u8bdd\u9996\u5148\u8981\u628a\u6240\u6709\u513f\u5b50\u53d8\u76f8\u540c\u7684\u52a0\u8d77\u6765\uff0c\u7136\u540e\u518d\u628a\u6bd4dis\u5c0f\u7684\u8fb9\u7684\u8d21\u732e\u7b97\u4e0a\u5c31\u53ef\u4ee5\u4e86\n\n**Code**\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <vector>\nconst int N = 5e5;\nusing namespace std;\nstruct node\n{\n    int to,cost;\n};\nint n,s;\nlong long f[N + 5],dis[N + 5];\nvector <node> d[N + 5];\nvoid dfs(int u,int fa)\n{\n    vector <node>::iterator it;\n    int maxx = 0;\n    for (it = d[u].begin();it != d[u].end();it++)\n    {\n        int v = (*it).to,w = (*it).cost;\n        if (v == fa)\n            continue;\n        maxx = max(maxx,w);\n        dfs(v,u);\n        f[u] += f[v];\n        dis[u] = max(dis[v] + w,dis[u]);\n    }\n    for (it = d[u].begin();it != d[u].end();it++)\n    {\n        int v = (*it).to,w = (*it).cost;\n        if (v == fa)\n            continue;\n        f[u] += dis[u] - dis[v] - w;\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&s);\n    int u,v,w;\n    for (int i = 1;i < n;i++)\n    {\n        scanf(\"%d%d%d\",&u,&v,&w);\n        d[u].push_back((node){v,w});\n        d[v].push_back((node){u,w});\n    }\n    dfs(s,0);\n    cout<<f[s]<<endl;\n    return 0;\n}\n```",
        "postTime": 1572231672,
        "uid": 73231,
        "name": "eee_hoho",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "\n## Solution:\n\n\u9898\u76ee\u63cf\u8ff0\u5341\u5206\u5197\u957f\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u95ee\u4f60\u6700\u5c11\u589e\u52a0\u591a\u5c11\u6b21\u8fb9\u6743\uff0c\u4f7f\u5f97\u6240\u6709\u53f6\u5b50\u8282\u70b9\u5230\u6839\u8282\u70b9\u8ddd\u79bb\u76f8\u7b49\n\n\u6709\u4e00\u4e2a\u5341\u5206\u663e\u7136\u7684\u7ed3\u8bba\uff1a\u6700\u540e\u7684\u8ddd\u79bb\u4e3a\u4e0d\u589e\u52a0\u8fb9\u6743\u7684\u6700\u5927\u8ddd\u79bb\n\n\u5219\u6211\u4eec\u53ef\u8bbe$f[x]$\u8868\u793a$x$\u8282\u70b9\u4e0e$fa[x]$\u76f8\u8fde\u7684\u8fb9\u9700\u8981\u52a0\u591a\u5c11\u6743\u503c\n\n\u6613\u5f97\u72b6\u6001\u8f6c\u79fb\uff1a$f[x]=min\\{ f[v]|v\\in son_x \\}$\n\n\u6700\u540e\u5bf9\u6bcf\u4e2a\u70b9\u7edf\u8ba1\u7b54\u6848\uff1a$ans+=f[x]-f[fa[x]]$\n\n\u8981\u5f00long long\n\n## Code:\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=5e5+1;\nconst int inf=21474836470000;\nint n,rt,cnt,head[N];\nint ans,maxdis,dis[N],f[N];\nstruct Edge{int nxt,to,val;}edge[N<<1];\nvoid ins(int x,int y,int z){\n\tedge[++cnt].nxt=head[x];\n\tedge[cnt].to=y;head[x]=cnt;\n\tedge[cnt].val=z;\n}\nvoid getdis(int x,int fa){\n\tfor(int i=head[x];i;i=edge[i].nxt){\n\t\tint y=edge[i].to;\n\t\tif(y==fa) continue;\n\t\tdis[y]=dis[x]+edge[i].val;\n\t\tgetdis(y,x);maxdis=max(maxdis,dis[y]);\n\t}\n}\nvoid dfs(int x,int fa){\n\tf[x]=inf;int flag=0;\n\tfor(int i=head[x];i;i=edge[i].nxt){\n\t\tint y=edge[i].to;\n\t\tif(y==fa) continue;\n\t\tdfs(y,x);f[x]=min(f[x],f[y]);\n\t\tflag=1;\n\t}\n\tif(!flag) f[x]=maxdis-dis[x];\n}\nvoid calc(int x,int fa){\n\tans+=f[x]-f[fa];\n\tfor(int i=head[x];i;i=edge[i].nxt){\n\t\tint y=edge[i].to;\n\t\tif(y==fa) continue;\n\t\tcalc(y,x);\t\n\t}\n}\nint read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-f;ch=getchar();}\n\twhile(isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\nsigned main(){\n\tn=read(),rt=read();\n\tfor(int i=1;i<n;i++){\n\t\tint x=read(),y=read(),z=read();\n\t\tins(x,y,z),ins(y,x,z);\n\t}getdis(rt,0);\n\tdfs(rt,0);calc(rt,0);\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1567857338,
        "uid": 73702,
        "name": "DQYdqy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "## \u8d2a\u5fc3+\u52a8\u89c4\n\u8d2a\u5fc3\uff1a\n\n\u4ece\u5b50\u8282\u70b9\u5411\u4e0a\u5408\u5e76\uff0c \u4e00\u9897\u5b50\u6811\u7684\u5b50\u8282\u70b9\u5230$lca$\u7684\u8ddd\u79bb\u5fc5\u5b9a\u76f8\u7b49\uff0c \u5982\u679c\u4e0d\u76f8\u7b49\uff0c \u90a3\u4e48\u5219\u4e0d\u5b58\u5728\u5408\u6cd5\u7684\u89e3\u3002\n\n\u8bc1\u660e\uff1a \u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u4e3a\u4e00\uff0c \u663e\u7136\u5982\u679c\u5230\u8fbe$lca$\u90fd\u4e0d\u76f8\u7b49\u4e86\uff0c \u7531\u4e8e\u518d\u5411\u4e0a\u53ea\u5b58\u5728\u4e00\u6761\u8def\u5f84\u5230\u8fbe\u6839\u8282\u70b9\uff0c \u90a3\u4e48\u518d\u5411\u4e0a\u4fee\u6539\u7684\u65f6\u5019\u4f1a\u8fde\u7740\u4e24\u6761\u8def\u5f84\u4e00\u8d77\u4fee\u6539\uff0c \u540c\u52a0\u7684\u8bdd\u539f\u6765\u4e0d\u76f8\u7b49\uff0c \u52a0\u4e4b\u540e\u4e5f\u4e0d\u53ef\u80fd\u76f8\u7b49\u3002\n\n$dp$:\n\n\u6240\u4ee5\u4ece\u4e0b\u5230\u4e0a\u8003\u8651\u6bcf\u9897\u5b50\u6811\u8ba1\u7b97\u4ee5\u8be5\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u6700\u5c0f\u82b1\u8d39\uff0c \u56e0\u4e3a\u5728\u6b64\u4e4b\u524d\uff0c \u8be5\u8282\u70b9\u7684\u5b50\u8282\u70b9\u5df2\u7ecf\u8ba1\u7b97\u5b8c\u6bd5\u800c\u4e14\u4e00\u5b9a\u53d6\u7684\u662f\u5b50\u8282\u70b9\u5230\u8fbe\u53f6\u5b50\u7ed3\u70b9\u7684\u6700\u5927\u8def\u5f84\uff0c \u6240\u4ee5\u8ba1\u7b97\u8be5\u8282\u70b9\u7684\u65f6\u5019\u53ea\u9700\u8981\u7528\u8ba1\u7b97\u8fc7\u7684\u5b50\u8282\u70b9\u7684\u6700\u5927\u8def\u5f84\u52a0\u4e0a\u5230\u5b50\u8282\u70b9\u7684\u8fb9\u6743\u4e0e\u8be5\u8282\u70b9\u5230\u53f6\u8282\u70b9\u7684\u6700\u957f\u8def\u5f84\u6bd4\u8f83\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u6ce8\u610f\u8be5\u8282\u70b9\u9700\u8981\u4e0e\u5b50\u8282\u70b9\u5408\u5e76\uff0c \u5728$dp$\u7684\u65f6\u5019\u53ea\u9700\u8981\u52a0\u4e0a\u5b50\u8282\u70b9\u7684\u7b54\u6848\u5c31\u884c\u4e86\u3002\u5728\u6b64\u4e4b\u524d\u6bcf\u4e2a\u8282\u70b9\u5230\u53f6\u5b50\u7ed3\u70b9\u7684\u6700\u957f\u8def\u5f84\u53ef\u4ee5\u4e00\u6b21\u6811\u5f62$dp$\u9884\u5904\u7406\u51fa\u6765\u3002\n\n\u603b\u590d\u6742\u5ea6$O(n)$\n\n```cpp\n//RoRoyyy\n#include <cstdio>\n#include <iostream>\n\nusing namespace std;\ntypedef long long ll;\nconst int N = 5e5 + 5;\nint u[N], v[N], w[N], first[N], nxt[N], tot;\nll dp[N];\nll maxpath[N];\nint n, rt;\nvoid add(int x, int y, int z) {\n    u[++tot] = x, v[tot] = y, w[tot] = z;\n    nxt[tot] = first[x];\n    first[x] = tot; \n}\nvoid dfs1(int u, int fa) {\n    for(int i = first[u]; i; i = nxt[i]) {\n        int to = v[i];\n        if(to == fa) continue;\n        dfs1(to, u);\n        maxpath[u] = max(maxpath[u], maxpath[to] + w[i]);\n    }\n}\nvoid DP(int u, int fa) {\n    for(int i = first[u]; i; i = nxt[i]) {\n        int to = v[i];\n        if(to == fa) continue;\n        DP(to, u);\n        dp[u] += maxpath[u] - (maxpath[to] + w[i]);\n        dp[u] += dp[to];\n    }\n}\nint main() {\n    scanf(\"%d%d\", &n, &rt);\n    for(int i = 1; i < n; i++) {\n        int a, b, c;\n        scanf(\"%d%d%d\", &a, &b, &c);\n        add(a, b, c);\n        add(b, a, c);\n    }\n    dfs1(rt, rt);\n    DP(rt, rt);\n    printf(\"%lld\\n\", dp[rt]);\n    return 0;\n}\n```\n",
        "postTime": 1571967807,
        "uid": 111617,
        "name": "RoRoyyy",
        "ccfLevel": 0,
        "title": "p1131"
    },
    {
        "content": "\n# $Description$\n[\u9898\u9762](https://www.luogu.org/problem/P1131)\n\n\u7ed9\u4f60\u4e00\u9897\u6709\u6839\u6811\uff0c\u4f60\u53ea\u80fd\u589e\u52a0\u4e00\u6761\u8fb9\u7684\u8fb9\u6743\uff0c\u6700\u540e\u9700\u8981\u4f7f\u5f97\u6839\u5230\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u8ddd\u79bb\u76f8\u7b49\n\n# $Solution$\n\u4e00\u9053\u6709\u70b9\u8d2a\u5fc3\u610f\u5473\u7684$DP$\u9898\uff0c\u5047\u8bbe\u4e00\u5f00\u59cb\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u6700\u8fdc\u8ddd\u79bb\u4e3a$d$\uff0c\u8003\u8651\u5230\u53ea\u80fd\u52a0\u8fb9\u6743\u4e0d\u80fd\u51cf\u8fb9\u6743\uff0c**\u663e\u7136\u6700\u7ec8\u6839\u8282\u70b9\u5230\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u8ddd\u79bb$d2$\u4e00\u5b9a\u7b49\u4e8e$d$**\n\n**\u6240\u4ee5\u6574\u4e2a\u8fc7\u7a0b\u662f\u4e00\u4e2a\u5c06\u6bcf\u6761\u8def\u5f84\u957f\u5ea6\u201c\u5bf9\u9f50\u201d\u7684\u8fc7\u7a0b**\n\n\u6211\u4eec\u8fdb\u884c\u6811\u5f62$DP$\uff0c\u4ece\u53f6\u5b50\u8282\u70b9\u5230\u6839\u8282\u70b9\u8f6c\u79fb\u3002\u8bbe\u5f53\u524d\u8282\u70b9\u662f$u$,\u90a3\u4e48\u5fc5\u987b\u4fdd\u8bc1\u5411\u4e0a\u4f20\u9012\u65f6$u$\u5230\u5b83\u7684\u5b50\u6811\u5185\u7684\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u8ddd\u79bb\u76f8\u7b49\uff0c\u5426\u5219\u5c31\u6c38\u8fdc\u201c\u5bf9\u4e0d\u9f50\u201d\u4e86\u3002\n\n[![KUeccV.png](https://s2.ax1x.com/2019/10/24/KUeccV.png)](https://imgchr.com/i/KUeccV)\n\n\n\u5c31\u62ff\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u6765\u8bf4\uff0c\u5047\u5982$dis(a,u)!=dis(b,u)$\uff0c\u90a3\u4e48\u5bf9$u$\u4e0a\u9762\u7684\u8fb9($i$)\u65e0\u8bba\u600e\u4e48\u4fee\u6539\uff0c$a,b$\u5411\u4e0a\u7684\u8ddd\u79bb\u662f\u540c\u7b49\u589e\u5927\u7684\uff0c$dis(a,fa)$\u4e00\u5b9a\u4e0d\u7b49\u4e8e$dis(b,fa)$\uff08\u7c7b\u4f3c\u4e8e\u5206\u914d\u5f8b\uff09\n\n\u6211\u4eec\u4e3a\u786e\u4fdd\u7b54\u6848\u5408\u6cd5\uff0c\u4e00\u5b9a\u8981\u5728$u$\u8282\u70b9\u662f\u4fdd\u8bc1$dis(u,a)=dis(u,b)$\uff0c\u5373\u8ba9\u5b83\u5230\u5b50\u6811\u4e2d\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u8ddd\u79bb\u76f8\u7b49\uff0c\u6240\u4ee5\u53ef\u4ee5\u6539\u53d8$j\u3001k$\u53d8\u4f7f\u4ed6\u4eec\u5bf9\u9f50\uff0c**\u53ea\u9700\u8981\u90fd\u52a0\u6210$u$\u5230\u53f6\u5b50\u8282\u70b9\u8ddd\u79bb\u7684\u6700\u5927\u503c\u5373\u53ef**\u3002\n\n\u8fd9\u6837\u505a\u4e00\u5b9a\u80fd\u786e\u4fdd\u6700\u7ec8\u6240\u6709\u8ddd\u79bb\u76f8\u7b49\uff0c\u4e14\u6211\u4eec\u5728**\u5c3d\u53ef\u80fd\u5411\u4e0a\u7684\u8fb9**\uff08\u5982\u679c\u518d\u5f80\u4e0a\u5c31\u662f$i$\u8fb9\uff0c\u4fee\u6539\u4e0d\u80fd\u4f7f\u7b54\u6848\u5408\u6cd5\uff09\u4fee\u6539\uff0c\u7c7b\u4f3c\u4e8e\u5206\u914d\u7684\u601d\u60f3\uff0c\u4e00\u5b9a\u6bd4\u5728\u4e0b\u9762\u4fee\u6539\u82b1\u8d39\u7684\u4ee3\u4ef7\u66f4\u5c0f\u3002\uff08\u56e0\u4e3a\u5728\u4e0a\u9762$+2$\u7b49\u6548\u4e8e\u5bf9\u6bcf\u6761\u8def\u5f84$+2$\uff0c\u6240\u4ee5\u5728\u5408\u6cd5\u7684\u60c5\u51b5\u4e0b\u8d8a\u5f80\u4e0a\u8d8a\u4f18\uff09\n\n\u5728\u4ee3\u7801\u5b9e\u73b0\u4e0a\uff0c\u6211\u4eec\u5148\u8981\u9884\u5904\u7406\u6bcf\u4e2a\u8282\u70b9\u5230\u5b50\u6811\u4e2d\u7684\u53f6\u5b50\u7ed3\u70b9\u7684\u6700\u5927\u8ddd\u79bb$maxx[u]$\uff0c\u65b9\u4fbf\u540e\u9762\u5bf9\u9f50\u64cd\u4f5c\u8ba1\u7b97\u4ee3\u4ef7\u4f7f\u7528\uff0c\u5728\u56de\u6eaf\u7684\u65f6\u5019\u641e\u4e00\u4e0b\n\n\u7136\u540e\u518d\u6b21$dfs$\u505a\u6811\u5f62$dp$\u7edf\u8ba1\u7b54\u6848\u5373\u53ef(\u4e8b\u5b9e\u4e0a\u53ef\u4ee5\u653e\u4e00\u5757\uff0c\u4f46\u662f\u6211~~\u61d2\u5f97\u5199~~)\n\n**\u8bb0\u5f97\u5f00$long\\ long$**\n# $Code$\n```\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#define re register\n#define maxn 500010\n#define int long long\nusing namespace std;\ninline int read()\n{\n\tint x=0,f=1; char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nstruct Edge{\n\tint v,w,nxt;\n}e[maxn<<2];\nint to_l[maxn],tmp[maxn],cnt2,maxx[maxn];\nint max_dis,x,y,z,root,head[maxn],cnt,n,dp[maxn];\ninline void add(int u,int v,int w)\n{\n\te[++cnt].v=v;\n\te[cnt].w=w;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nvoid dfs1(int u,int fa)\n{\n\tfor(int i=head[u];i;i=e[i].nxt)\n\t{\n\t\tint ev=e[i].v;\n\t\tif(ev==fa) continue;\n\t\tdfs1(ev,u);\n\t\tmaxx[u]=max(maxx[ev]+e[i].w,maxx[u]);\n\t}\n}\nvoid dfs2(int u,int fa)\n{\n\tfor(int i=head[u];i;i=e[i].nxt)\n\t{\n\t\tint ev=e[i].v;\n\t\tif(ev==fa) continue;\n\t\tdfs2(ev,u);\n\t\tdp[u]+=(maxx[u]-(maxx[ev]+e[i].w));//\u8ba1\u7b97\u5bf9\u9f50\u9700\u8981\u7684\u82b1\u8d39 \n\t\tdp[u]+=dp[ev];//\u4e0d\u8981\u5fd8\u4e86\u628a\u5b50\u6811\u7684\u7b54\u6848\u4f20\u9012\u4e0a\u6765 \n\t}\n}\nsigned main()\n{\n\tn=read();\n\troot=read();\n\tfor(re int i=1;i<n;++i)\n\t{\n\t\tx=read(),y=read(),z=read();\n\t\tadd(x,y,z),add(y,x,z);\n\t}\n\tdfs1(root,0);//\u9884\u5904\u7406 \n\tdfs2(root,0);//DP  \u548c\u4e0a\u9762\u7684\u653e\u4e00\u4e2a\u51fd\u6570\u91cc\u4e5f\u884c\n\tprintf(\"%lld\\n\",dp[root]);\n\treturn 0;\n}\n\n```",
        "postTime": 1571903212,
        "uid": 127018,
        "name": "ZORO",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "\u9996\u5148\u8fd9\u5b8c\u5168\u662f\u4e00\u9053\u767d\u7ed9\u9898\uff0c\u672c\u4eba\u4f7f\u7528\u4e86\u5f52\u7eb3\u6cd5\n\n\u90a3\u4e48\u8bf4\u4e00\u4e0b\u601d\u8def\n\n\u9996\u5148\u5b9a\u4e49\u6df1\u5ea6\uff1a\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u7684\u8def\u5f84\u957f\u3002\n\n\u968f\u4fbf\u753b\u4e00\u68f5\u6811\uff0c\u89c2\u5bdf\u6700\u6df1\u5ea6\u6700\u6df1\u7684\u53f6\u8282\u70b9\uff0c\u53d1\u73b0\u597d\u50cf\u5bf9\u4e8e\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u8fb9\u90fd\u4e0d\u9700\u8981\u4fee\u6539\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u76ee\u6807\u662f\u8ba9\u5176\u4ed6\u53f6\u8282\u70b9\u6df1\u5ea6\u4e0e\u5b83\u4e00\u6837\uff0c\u800c\u4fee\u6539\u6700\u6df1\u53f6\u5b50\u8282\u70b9\u611f\u89c9\u4e0a\u4e0d\u4f1a\u6bd4\u4e0d\u4fee\u6539\u7ed3\u679c\u66f4\u4f18\uff0c\u6240\u4ee5\u5148\u4e0d\u52a8\u5b83\u3002\n\n\u5bf9\u4e8e\u6bd4\u8f83\u6d45\u7684\u53f6\u8282\u70b9\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539\u5b83\u5230\u6839\u8282\u70b9\u7684\u67d0\u4e9b\u8fb9\uff0c\u8ba9\u5b83\u7684\u6df1\u5ea6\u66f4\u6df1\u3002\u90a3\u4e48\u6539\u8d8a\u63a5\u8fd1\u6839\u8282\u70b9\u7684\u8fb9\u8d8a\u597d\u3002\u56e0\u4e3a\u5bf9\u4e8e\u8fd9\u4e00\u4e2a\u53f6\u8282\u70b9\u6765\u8bf4\uff0c\u4fee\u6539\u4efb\u610f\u4e00\u6761\u8fb9\u6216\u8005\u591a\u6761\u8fb9\u6548\u679c\u7b49\u4ef7\uff1b\u4f46\u662f\u5bf9\u4e8e\u5176\u4ed6\u53f6\u8282\u70b9\uff0c\u5982\u679c\u672c\u6b21\u4fee\u6539\u987a\u4fbf\u4fee\u6539\u4e86\u5b83\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\uff0c\u90a3\u4e48\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u4f1a\u6bd4\u5206\u522b\u4fee\u6539\u4e24\u4e2a\u53f6\u8282\u70b9\u7684\u8def\u5f84\u5c11\u3002\n\n\u8bf4\u767d\u4e86\u5c31\u662f\u5982\u679c\u6709\u4e00\u4e2a\u8282\u70b9\uff0c\u5b83\u6709\u4e24\u4e2a\u5b50\u6811\uff0c\u90a3\u4e48\u4fee\u6539\u8fd9\u4e00\u4e2a\u8282\u70b9\u4e0a\u65b9\u7684\u8fb9\u6548\u679c\u7b49\u4ef7\u4e8e\u4fee\u6539\u4e24\u4e2a\u5b50\u6811\u7684\u53f6\u8282\u70b9\u7684\u6df1\u5ea6\uff08\u4f7f\u53f6\u8282\u70b9\u7684\u6df1\u5ea6\u52a0\u5927\u5230\u6700\u5927\u6df1\u5ea6\uff09\uff0c\u4e14\u7b54\u6848\u5fc5\u7136\u6bd4\u5206\u522b\u6539\u4e24\u4e2a\u5b50\u6811\u4e0a\u7684\u8fb9\u8981\u597d\u3002\n\n\u6240\u4ee5\u8fd9\u65f6\u5019\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9node\u5b9a\u4e49\u4e00\u4e2a\u91cff(node)\uff0c\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u7684\u53f6\u8282\u70b9\u7684\u6df1\u5ea6\u4e0e\u6574\u4e2a\u6811\u7684\u6700\u5927\u6df1\u5ea6\u7684\u5dee\u503c\u7684\u6700\u5c0f\u503c\u3002\u663e\u7136\u8fd9\u73a9\u610f\u53ef\u4ee5\u7ee7\u627f\u3002\n\n\u5373\nf(node) = min(f(node), f(son(node)));\n\n\u4e3a\u4ec0\u8981\u8fd9\u4e2a\u91cf\uff1f\n\u7b54\uff1a\u5f52\u7eb3\u6cd5\u3002\u4f60\u753b\u4e00\u9897\u6811\u5c31\u660e\u767d\u4e86\uff0c\u771f\u7684\u3002\n\n\u597d\u5427\u539f\u56e0\u662f\u8fd9\u4e2a\u91cf\u5c31\u662f\u521a\u521a\u8bf4\u7684\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\u4e0a\u65b9\u4fee\u6539\u7684\u6700\u5927\u503c\u3002\n\u56e0\u4e3a\u5982\u679c\u8d85\u8fc7\u8fd9\u4e2a\u503c\uff0c\u5bf9\u8282\u70b9\u4e0a\u65b9\u7684\u8fb9\u52a0\u4e0a\u540e\uff0c\u5c31\u4f1a\u6709\u4e00\u4e9b\u53f6\u8282\u70b9\u6df1\u5ea6\u8d85\u8fc7\u6700\u5927\u503c\uff0c\u8fd9\u663e\u7136\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\n\n\u6240\u4ee5\u65e2\u7136\u53ef\u4ee5\u4fee\u6539\u4e86\uff0c\u90a3\u4e48\u8981\u4e0d\u8981\u7ee7\u7eed\u4f20\u9012\u8fd9\u4e2af(node)\u5462\uff1f\n\u7b54\uff1a\u8981\u3002\u56e0\u4e3a\u4fee\u6539\u8d8a\u9760\u8fd1\u6839\u8282\u70b9\u8d8a\u4f18\u3002\n\n\u5177\u4f53\u4ec0\u4e48\u65f6\u5019\u4fee\u6539\u5462\uff1f\n\u7b54\uff1a\u4e0d\u80fd\u7ee7\u627f\u4e86\u5c31\u4fee\u6539\n\n\u8fd9\u65f6\u5019\u5047\u5982\u8282\u70b9node\u6709\u4e24\u4e2a\u5b50\u8282\u70b9son1\uff0c son2\n\nf(son1) = 3\nf(son2) = 5\n\n\u90a3\u4e48\u6b64\u65f6f(node) = 3\n\n\u8fd9\u91cc\u53ea\u7ee7\u627f\u4e863\uff0c\u8868\u793a\u672a\u6765\u53ef\u80fd\u5728\u4e0a\u9762\u7684\u67d0\u6761\u8fb9\u52a03\u3002\u4f46\u89c2\u5bdfson2\uff0c\u5982\u679c\u4e0a\u9762\u52a0\u4e863\uff0c\u663e\u7136\u4e0d\u80fd\u6ee1\u8db3\u5b83\u7684\u9700\u6c42\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u6574\u4f53\u52a05\u624d\u80fd\u8ba9\u6df1\u5ea6\u8fbe\u5230\u6700\u5927\u6df1\u5ea6\u3002\n\n\u90a3\u548b\u529e\uff1f\n\n\u7b54\uff1a\u5728node\u8282\u70b9\u4e0e\u7236\u8282\u70b9\u7684\u8fde\u8fb9\u52a02\u3002\n\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\uff1f\u753b\u4e2a\u56fe\uff0c\u4e00\u76ee\u4e86\u7136\u3002\n\n\u597d\u4e86\u6240\u4ee5\u6211\u53c8\u5b9a\u4e49\u4e86\u4e00\u4e2a\u91cfs\uff0c\u8868\u793a\u4e00\u4e2a\u8282\u70b9\u5230\u5b83\u7236\u8282\u70b9\u7684\u8fde\u8fb9\u6240\u9700\u8981\u7684\u589e\u52a0\u7684\u503c\u3002\n\ndfs\u8ba1\u7b97s\uff0c\u7136\u540e\u7d2f\u52a0\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684s\n\n\u5b8c\u4e8b\u3002\n\n\u552f\u4e00\u6ce8\u610f\u6839\u8282\u70b9\u7684s\u6ca1\u6709\u610f\u4e49\uff0c\u56e0\u4e3a\u6839\u8282\u70b9\u6ca1\u6709\u7236\u8282\u70b9\uff0c\u6240\u4ee5\u6839\u8282\u70b9\u5355\u72ec\u5904\u7406\u3002",
        "postTime": 1571405945,
        "uid": 184681,
        "name": "cscy",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "~~\u8fd9\u771f\u7684\u662f\u6811\u5f62DP\u5417\uff1f\uff1f\uff1f~~\n\n\u8fd9\u9053\u9898\u53ea\u8981\u60f3\u6e05\u695a\u5c31\u5f88\u7b80\u5355\u4e86\n\n\u9996\u5148\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u5fc5\u987b\u8ba9\u4ed6\u6240\u6709\u7684\u5b50\u8282\u70b9\u90fd\u65f6\u6001\u540c\u6b65\n\n\u7136\u540e\u518d\u6765\u5904\u7406\u5b83\u672c\u8eab\n\n\u5927\u4f53\u601d\u8def\u5c31\u51fa\u6765\u4e86\n\n\u5148dfs\u5904\u7406\u5b50\u8282\u70b9\uff0c\u8bb0\u5f55\u6700\u5927\u5230\u8fbe\u65f6\u95f4\n\n\u7136\u540e\u7528\u5de5\u5177\u8865\u9f50\n\n\u7136\u540e\u5411\u4e0a\u4f20\u9012\u7b54\u6848\u5904\u7406\u5373\u53ef\n\n~~\u518d\u6b21\u5410\u69fd\uff0c\u8fd9\u771f\u7684\u662f\u6811\u5f62DP\uff1f\uff1f\uff1f~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<vector>\n#include<stack> \n#define M 2000000\n#define inf 0x3f3f3f3f\n#define LL long long\nusing namespace std;\nvector <LL> son[M];\nvector <LL> val[M];\nLL n,s,dis[M],maxx[M];\nLL ans;\ninline LL read(){\n\tLL x=0,f=1;char s=getchar();\n\twhile (!isdigit(s)){\n\t\tif (s=='-') f=-1;\n\t\ts=getchar();\n\t}\n\twhile (isdigit(s)){\n\t\tx=(x<<1)+(x<<3)+(s^48);\n\t\ts=getchar();\n\t}\n\treturn x*f;\n}\ninline LL dfs(LL rt,LL fa){\n\tLL cnt=0,all=0;\n\tfor (LL i=0;i<son[rt].size();i++){\n\t\tif (son[rt][i]==fa) continue;\n\t\tcnt+=dfs(son[rt][i],rt);\n\t\tmaxx[rt]=max(maxx[rt],val[rt][i]+maxx[son[rt][i]]);\n\t\tall+=val[rt][i]+maxx[son[rt][i]];\n\t}\n\treturn cnt+maxx[rt]*(son[rt].size()-1)-all;\n}\nsigned main(void)\n{\n\tn=read(),s=read();\n\tfor (LL i=1;i<=n-1;i++){\n\t\tLL a=read(),b=read(),t=read();\n\t\tson[a].push_back(b);son[b].push_back(a);\n\t\tval[a].push_back(t);val[b].push_back(t);\n\t}\n\tson[s].push_back(0);\n\tprintf(\"%lld\",dfs(s,0));\n\treturn 0;\n}\n\n```\n",
        "postTime": 1570279657,
        "uid": 78290,
        "name": "Polaris_Dane",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "~~[\u535a\u5ba2](https://tle666.github.io/2019/03/15/[ZJOI2009]%20%E6%97%B6%E6%80%81%E5%90%8C%E6%AD%A5/)\n\u98df\u7528\u66f4\u4f73~~\n\n# **Description**\n\n\u4e00\u68f5\u6709$N$\u4e2a\u7ed3\u70b9\uff0c\u5e26\u8fb9\u6743\u7684\u6709\u6839\u6811\uff0c\u6c42\u81f3\u5c11\u9700\u8981\u589e\u52a0\u591a\u5c11\u8fb9\u6743\u624d\u80fd\u4f7f\u6839\u7ed3\u70b9\u5230\u53f6\u5b50\u7ed3\u70b9\u7684\u6240\u6709\u8def\u5f84\u7684\u6743\u503c\u548c\u76f8\u540c\u3002\n\n\u5bf9\u4e8e$100\\%$\u7684\u6570\u636e\uff0c$N \\leq 500000$\uff0c\u8fb9\u6743$t_e \\leq 1000000$\u3002\n\n[\u9898\u76ee\u8fde\u63a5\u6233\u8fd9\u91cc](<https://www.luogu.org/problemnew/show/P1131>)\n\n# Solution\n\n\u6811\u5f62$DP$\u7684\u677f\u5b50\u9898\u3002\n\n\u4ee4$dp_x$\u4e3a\u53f6\u5b50\u7ed3\u70b9\u5230$x$\u7ed3\u70b9\u7684\u6700\u5927\u65f6\u95f4\u3002\n\n\u5219\u6709 $dp_x = \\max (dp_{son[x]} + dis_{x,\\ son[x]})$\n\n\u56e0\u6b64 $ans = \\sum (dp_x - dp_{son[x]} - dis_{x,\\ son[x]})$\n\n# **Code**\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <iostream>\nusing namespace std;\n#define MAXN 500500\n#define int long long\nint n, root, dp[MAXN], ans, fa[MAXN];\nbool vis[MAXN];\nstruct edge {\n    int v, w;\n    edge *next;\n} pool[MAXN << 1], *h[MAXN], *cnt = pool;\ninline void addedge(int u, int v, int w) {\n    edge *p = ++cnt, *q = ++cnt;\n    p->v = v, p->w = w, p->next = h[u], h[u] = p;\n    q->v = u, q->w = w, q->next = h[v], h[v] = q;\n}\ninline void dfs(int u) {\n    int v; vis[u] = true;\n    for(edge *p = h[u]; p; p = p->next)\n        if(!vis[v = p->v]) {\n            fa[v] = u, dfs(v);\n            dp[u] = max(dp[u], dp[v] + p->w);\n        }\n    for(edge *p = h[u]; p; p = p->next)\n        if((v = p->v) != fa[u])\n            ans += (dp[u] - dp[v] - p->w);\n}\nsigned main() {\n    int u, v, w;\n    scanf(\"%lld%lld\", &n, &root);\n    for(int i = 1; i < n; i++) {\n        scanf(\"%lld%lld%lld\", &u, &v, &w);\n        addedge(u, v, w);\n    } dfs(root);\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1552746281,
        "uid": 54628,
        "name": "eros1on",
        "ccfLevel": 0,
        "title": "[ZJOI2009] \u65f6\u6001\u540c\u6b65"
    },
    {
        "content": "\u8fd9\u4e00\u9053\u9898\u770b\u96be\u5ea6\u662f\u84dd\u9898\uff0c\u4f46\u6211\u611f\u89c9\u6ca1\u6709\u8fd9\u4e48\u96be\n\n\u770b\u5b8c\u8fd9\u9898\uff0c\u6211\u9a6c\u4e0a\u5c31\u60f3\u5230\u4e86\u8d2a\u5fc3\n\n\u5efa\u597d\u8fb9\u4ee5\u540e\u628a\u6574\u68f5\u6811\u521d\u59cb\u5316\u4e00\u4e0b\uff0c\u627e\u51fa\u53f6\u5b50\u8282\u70b9\uff0c\u5e76\u7b97\u51fa\u8def\u5f84\u957f\u5ea6\n\n\u7136\u540e\u5c31\u662f\u8fd9\u4e2a\u4ee3\u7801\u7684\u6838\u5fc3\u4e86\uff08\u5148\u8bb2\u601d\u8def\u518d\u8bb2\u4ee3\u7801\uff09\n\n\u5148\u4ece\u53f6\u5b50\u8282\u70b9\u7684\u4e0a\u4e00\u5c42\u5f00\u59cb\uff0c\u628a\u81ea\u5df1\u7684\u513f\u5b50\u4eec\uff08\u5373\u53f6\u5b50\u8282\u70b9\uff09\u53d8\u4e3a\u540c\u4e00\u4e2a\u503c\uff0c\u4e5f\u5c31\u662f\u53d8\u4e3a\u5176\u4e2d\u7684\u6700\u5927\u503c\n\n\u5e76\u628a\u8fd9\u4e2a\u6700\u5927\u503c\u4ed8\u7ed9\u8fd9\u4e2a\u70b9\uff0c\u540c\u65f6\u8fd9\u4e2a\u70b9\u548c\u5b83\u7684\u5b50\u6811\u53d8\u6210\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff08\u539f\u56e0\u662f\u5b83\u4eec\u7684\u65f6\u95f4\u5df2\u7ecf\u53d8\u5f97\u4e00\u6837\uff0c\u8ba9\u5b83\u4eec\u7684\u65f6\u95f4+1\u53ea\u9700\u8981\u628a\u901a\u5f80\u8fd9\u4e2a\u70b9\u7684\u8fb9\u7684\u65f6\u95f4+1\uff09\n\n\u7136\u540e\u7ee7\u7eed\u8fed\u4ee3\uff0c\u76f4\u5230\u628a\u8fd9\u4e2a\u6811\u53d8\u6210\u4e00\u4e2a\u70b9\u4e3a\u53ea\n\n\u8fd9\u6837\u53ef\u4ee5\u628a\u8d44\u6e90\u5229\u7528\u7684\u6700\u597d\uff0c\u65f6\u95f4\u662fO\uff08N )\n\n\u53c2\u8003\u4ee3\u7801 \uff08\u53ef\u4ee5\u52a0\u5f88\u591a\u4f18\u5316\uff09\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <iostream>\n \nusing namespace std ;\n \ninline int read() {\n\tint x = 0 ; char s = getchar() ;\n\twhile ( !isdigit ( s ) ) s = getchar() ;\n\twhile (  isdigit ( s ) ) x = (x<<1)+(x<<3)+s-48 , s = getchar() ;\n\treturn x ;\n}\n \ntypedef long long LL ;\n \nconst int N = 5e5 + 10 ;\n \nint n , S ;\nstruct edge {\n\tint v , w , nxt ;\n}e[N<<1] ; int tot , last[N] ; \ninline void add ( int u , int v , int w ) {\n\te[++tot] = (edge){ v , w , last[u] } ;\n\tlast[u] = tot ;\n\te[++tot] = (edge){ u , w , last[v] } ;\n\tlast[v] = tot ;\n}\n \nLL val[N] , ans = 0 ; bool mark[N] ;\n \nvoid init ( int u , int fa , LL s ) {\n\tbool bk = 0 ; mark[u] = 0 ;\n\tfor ( int i = last[u] ; i != -1 ; i = e[i].nxt ) {\n\t\tint v = e[i].v ; if ( v == fa ) continue ;\n\t\tinit ( v , u , s + LL(e[i].w) ) ; bk = 1 ;\n \t}\n\tif ( bk == 0 ) val[u] = s , mark[u] = 1 ;\n}\n \nLL dp[N] ;\nLL dfs ( int u , int fa ) {\n\tif ( mark[u] == 1 ) return val[u] ;\n\tif ( dp[u] != -1 ) return dp[u] ;\n\tLL maxx = 0 ;\n\tfor ( int i = last[u] ; i != -1 ; i = e[i].nxt ) {\n\t\tint v = e[i].v ; if ( v == fa ) continue ;\n\t\tmaxx = max ( maxx , dfs ( v , u ) ) ;\n\t}\n\tLL t ;\n\tfor ( int i = last[u] ; i != -1 ; i = e[i].nxt ) {\n\t\tint v = e[i].v ; if ( v == fa ) continue ;\n\t\tans = ans + ( t = maxx - dfs ( v , u ) ) ;\n\t}\n\treturn dp[u] = maxx ;\n}\n \nint main() {\n\tcin >> n >> S ; int u , v , w ;\n\tmemset ( last , -1 , sizeof (last )) , tot = -1 ;\n\tfor ( int i = 1 ; i < n ; i ++ ) {\n\t\tu = read() , v = read() , w = read() ;\n\t\tadd ( u , v , w ) ;\n\t}\n\tmemset ( dp , -1 , sizeof ( dp )) ;\n\tinit ( S , 0 , 0 ) ; \n\tLL t = dfs ( S , 0 ) ;\n\tcout << ans ; return 0 ;\n}\n\n```",
        "postTime": 1548317370,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "\u9996\u5148\u8fd9\u662f\u4e00\u68f5\u6811\u2026\u2026\u4e0d\u4f1a\u6709\u4eba\u770b\u4e0d\u51fa\u6765\u5427\u2026\u2026\n\n\u4e2a\u4eba\u89c9\u5f97LYang\u7684\u9898\u89e3\u867d\u7136\u5f88\u8be6\u7ec6\uff0c\u4f46\u662f\u4e2a\u4eba\u8fd8\u60f3\u518d\u591a\u8bf4\u4e00\u53e5\uff08\u53ef\u80fd\u6211\u592a\u83dc\u4e86\u770b\u4e0d\u61c2\u5927\u4f6c\u7684\u9898\u89e3\u5427\uff09 \u4e3a\u4ec0\u4e48\u6211\u4eec\u53ef\u4ee5\u5728\u9012\u5f52\u7684\u65f6\u5019\u76f4\u63a5\u628a\u53f6\u5b50\u8282\u70b9\u8865\u5168\uff1f\u56e0\u4e3a\u6211\u4eec\u5728\u66f4\u65b0\u6839\u8282\u70b9\u65f6\uff0c\u4e0b\u9762\u6240\u6709\u7684\u90fd\u4f1a\u968f\u4e4b\u66f4\u65b0\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u4e00\u9897\u5b50\u6811\u7684\u72b6\u6001\u8bb0\u5f55\u5728\u6839\u8282\u70b9\u2014\u2014\u2014\u2014\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5fc5\u987b\u4e14\u53ea\u9700\u8981\u4f7f\u6bcf\u4e00\u4e2a\u6839\u8282\u70b9\u7684\u6fc0\u52b1\u7535\u6d41\u5230\u5b50\u8282\u70b9\u7684\u65f6\u95f4\u90fd\u76f8\u540c\u5373\u53ef\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff0c\u8bb0\u4f4f\u4e0d\u8981\u5fd8\u5f00long long\n```\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int N=500001;\nint n,s,cnt,head[500001],val[500001];\nlong long ans;\nstruct edge{\n\tint to,dis,next;\n}e[N<<1];\ninline int read(){\n\tint a=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch>='0'&&ch<='9') a=a*10+ch-'0',ch=getchar();\n\treturn a;\n}\ninline void add(int x,int y,int dis){\n\te[++cnt].to=y;\n\te[cnt].next=head[x];\n\te[cnt].dis=dis;\n\thead[x]=cnt;\n\treturn;\n}\nvoid dfs(int now,int fa){\n\tint maxn=0;\n\tfor(int i=head[now];i;i=e[i].next){\n\t\tint v=e[i].to,dis=e[i].dis;\n\t\tif(fa==v) continue;\n\t\tdfs(v,now);\n\t\tmaxn=max(maxn,val[v]+dis);\n\t}\n\tfor(int i=head[now];i;i=e[i].next){\n\t\tint v=e[i].to,dis=e[i].dis;\n\t\tif(fa==v) continue;\n\t\tif(maxn>val[v]) ans+=maxn-val[v];\n\t}\n\tval[now]=maxn;\n\treturn;\n}\nint main(){\n\tn=read(),s=read();\n\tfor(int i=1,x,y,z;i<n;i++){\n\t\tx=read(),y=read(),z=read();\n\t\tadd(x,y,z),add(y,x,z);\n\t}\n\tdfs(s,0);\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\nc++\u5927\u6cd5\u597d",
        "postTime": 1540904463,
        "uid": 101204,
        "name": "meisr",
        "ccfLevel": 0,
        "title": "\u5173\u4e8eP1131\u9898\u89e3\u7684\u8865\u5145"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u6709\u70b9\u9a97\u4eba...\n\n\u901a\u8fc7\u89c2\u5bdf\u5f88\u5bb9\u6613\u53d1\u73b0\uff1a\u8003\u8651\u67d0\u4e00\u4e9b\u53f6\u8282\u70b9\u7684LCA\uff0c\u7531\u4e8e\u6839\u8282\u70b9\u5230\u8fd9\u4e2aLCA\u7684\u8ddd\u79bb\u552f\u4e00\uff0c\u6545\u8981\u6c42\u8fd9\u4e9b\u53f6\u8282\u70b9\u5230\u8fd9\u4e00LCA\u7684\u8ddd\u79bb\u90fd\u76f8\u7b49\n\n\u4e8e\u662f\u6211\u4eec\u4ec5\u9700dfs\uff0c\u627e\u5230\u6b21\u5e95\u5c42\u7684\u8282\u70b9\uff0c\u7136\u540e\u4f7f\u8fd9\u4e9b\u8282\u70b9\u7684\u5b50\u8282\u70b9\u5230\u8fd9\u4e9b\u8282\u70b9\u7684\u8ddd\u79bb\u90fd\u76f8\u7b49\u5373\u53ef\n\n\u518d\u5411\u4e0a\u56de\u6eaf\uff0c\u7b97\u6cd5\u5b8c\u5168\u76f8\u540c\uff0c\u4ec5\u9700\u628a\u4e0b\u9762\u7684\u8ddd\u79bb\u7d2f\u8ba1\u5230\u8be5\u8282\u70b9\u5411\u4e0a\u7684\u8fb9\u5373\u53ef\n\n\u7528\u56fe\u7406\u89e3\u4e00\u4e0b\uff1a\n\n\uff08\u56fe\u6302\u4e86\uff0c\u770b\u6211csdn\u5427\uff1ahttps://blog.csdn.net/lleozhang/article/details/82889647\uff09\n\n\u8d34\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#define ll long long\nusing namespace std;\nstruct Edge\n{\n\tint next;\n\tint to;\n\tint val;\n}edge[1000005];\nint head[500005];\nint dis[500005];\nint cnt=1;\nint f[500005];\nvoid add(int l,int r,int w)\n{\n\tedge[cnt].to=r;\n\tedge[cnt].next=head[l];\n\tedge[cnt].val=w;\n\thead[l]=cnt++;\n}\nvoid dfs(int x,int fx)//O(n)\n{\n\tf[x]=fx;\n\tfor(int i=head[x];i!=-1;i=edge[i].next)\n\t{\n\t\tint to=edge[i].to;\n\t\tif(to==fx)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tdfs(to,x);\n\t}\n}\nll tot=0;\nvoid dfs2(int rt,int frt)//O(n*log2n)\n{\n\tfor(int i=head[rt];i!=-1;i=edge[i].next)//O(n*log2n)\n\t{\n\t\tint to=edge[i].to;\n\t\tif(to==frt)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tdfs2(to,rt);\n\t}\n\tpriority_queue <int> M;\n\tfor(int i=head[rt];i!=-1;i=edge[i].next)//O(log2n)\n\t{\n\t\tint to=edge[i].to;\n\t\tif(to==frt)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tM.push(edge[i].val);\n\t}\n\tif(!M.empty())\n\t{\n\t\tint l=M.top();\n\t\tM.pop();\n\t\twhile(!M.empty())//O(n*log2n)\n\t\t{\n\t\t\tint l1=M.top();\n\t\t\tM.pop();\n\t\t\ttot+=(ll)l-l1;\n\t\t}\n\t\tfor(int i=head[frt];i!=-1;i=edge[i].next)\n\t\t{\n\t\t\tint to=edge[i].to;\n\t\t\tif(to==rt)\n\t\t\t{\n\t\t\t\tedge[i].val+=l;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tmemset(head,-1,sizeof(head));\n\tint n;\n\tscanf(\"%d\",&n);\n\tint rt;\n\tscanf(\"%d\",&rt);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x,y,v;\n\t\tscanf(\"%d%d%d\",&x,&y,&v);\n\t\tadd(x,y,v);\n\t\tadd(y,x,v);\n\t}\n\tdfs(rt,rt);\n\tdfs2(rt,rt);\n\tprintf(\"%lld\\n\",tot);\n\treturn 0;\n}\n```",
        "postTime": 1538138419,
        "uid": 66905,
        "name": "leozhang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u867d\u7136\u662f\u53ef\u4ee5\u7528dfs\u89e3\u51b3\uff0c\u4f46\u662f\u7528\u5230\u4e86\u52a8\u6001\u89c4\u5212\u7684\u601d\u60f3\uff1a\n\n1. \u65e0\u540e\u6548\u6027\n\n2. \u6700\u4f18\u5b50\u7ed3\u6784\n\n\u800cdfs\u5904\u7406\u7684\u5c31\u662f\u6700\u4f18\u5b50\u7ed3\u6784\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u9700\u8981\u540c\u65f6\u5230\u8fbe\uff0c\u6240\u4ee5\u4efb\u610f\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u516c\u5171\u7956\u5148\u5230\u8fd9\u4e24\u4e2a\u5b50\u8282\u70b9\u7684\u65f6\u95f4\u76f8\u7b49\uff0c\u6709\u4e86\u8fd9\u4e2a\u601d\u60f3\uff0c\u6211\u4eec\u518d\u5c06\u76ee\u5149\u653e\u5230\u4e24\u4e2a\u7236\u4eb2\u8282\u70b9\u76f8\u540c\u7684\u5b50\u8282\u70b9\u4e0a\uff0c\u8fd9\u4e2a\u5173\u7cfb\u4f9d\u7136\u6210\u7acb\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u8fd9\u5e73\u8861\u65f6\u95f4\u5c31\u662f\u7528\u65f6\u6700\u957f\u7684\u65f6\u95f4\uff0c\u9700\u8981\u7528\u7684\u9053\u5177\u6b21\u6570\u5c31\u662f\u8fd9\u4e2a\u65f6\u95f4\u51cf\u53bb\u5404\u4e2a\u513f\u5b50\u7684\u7528\u65f6\u603b\u548c\n\n\u53e6\u5916\uff0c\u6b64\u9898\u8fd8\u6709\u4e24\u4e2a\u5751\u70b9\uff08\u5982\u679c\u4f60\u6ca1\u6709\u8ba4\u771f\u7406\u89e3\u9898\u610f\uff09\uff1a\n\n- \u6570\u636e\u5e76\u6ca1\u6709\u8bf4\u660e\u524d\u4e00\u4e2a\u70b9\u662f\u540e\u4e00\u4e2a\u70b9\u7684\u7236\u4eb2\n\n- \u7ed3\u679c\u8fc7\u5927\uff0c\u9700\u8981long long\u50a8\u5b58\n\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstruct node\n{\n\tint next,to;\n\tint time;\t//\u8bb0\u5f55\u5f53\u524d\u7ebf\u8def\u7684\u65f6\u95f4\u5ef6\u8fdf \n\tlong long maxtime;\t//\u6700\u5927\u65f6\u95f4\u5ef6\u8fdf\uff0c\u5373\u5230\u6839\u8282\u70b9\u7684\u5ef6\u8fdf \n};\nint head[500010];\t//\u94fe\u8868\u50a8\u5b58 \nnode edge[1000010];\nbool vis[500010];\t//\u8bb0\u5f55\u5230\u8fc7\u7684\u70b9\uff0c\u4e3b\u8981\u662f\u8bb0\u5f55\u7956\u5148 \nint n,k,s;\nlong long cnt;\n\nvoid add(int come,int to,int cost)\n{\n\tk++;\n\tedge[k].to=to;\n\tedge[k].time=cost;\n\tedge[k].next=head[come];\n\thead[come]=k;\n}\nint dfs(int id)\n{\n\tvis[id]=1;\t//\u53ea\u662f\u5f53\u524d\u70b9\u4e0b\u6b21\u4e0d\u53ef\u4ee5\u8d70\uff0c\u5bf9\u4e8e\u8d70\u8fc7\u7684\u5b50\u8282\u70b9\u9700\u8981\u53d6\u6d88\u6807\u8bb0\uff0c\u539f\u56e0\u5728\u7b2c\u4e8c\u4e2afor\u5faa\u73af\u7684\u7edf\u8ba1\u65f6\u4f53\u73b0\n\tlong long maxn=0;\n\tif(head[id]==0)\n\treturn 0;\n\tfor(int i=head[id];i!=0;i=edge[i].next)\n\t{\n\t\tint v=edge[i].to;\n\t\tif(vis[v]==false)\n\t\t{\n\t\t\tedge[i].maxtime=edge[i].time+dfs(v);\n\t\t\tmaxn=max(maxn,edge[i].maxtime);\n\t\t}\n\t}\n\tfor(int i=head[id];i;i=edge[i].next)\n\t{\n\t\tint v=edge[i].to;\n\t\tif(vis[v]==false)\n\t\tcnt+=(maxn-edge[i].maxtime);\n\t}\n\tvis[id]=0;\n\treturn maxn;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&s);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x,y,w;\n\t\tscanf(\"%d%d%d\",&x,&y,&w);\n\t\tadd(x,y,w),add(y,x,w);\n\t}\n\tdfs(s);\n\tprintf(\"%lld\",cnt);\n\treturn 0;\n}\n```",
        "postTime": 1532179448,
        "uid": 61667,
        "name": "YitsuHolo",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "\u4e0d\u662f\u5f88\u61c2\u4e3a\u4ec0\u4e48\u662f\u6811\u5f62DP\uff0c\u611f\u89c9\u6211\u60f3\u7684\u5c31\u662f\u4e00\u4e2a\u8d2a\u5fc3\u554a\u3002\u3002\u3002\n\n\u4ee5\u4e0b\u4e3a\u8d2a\u5fc3\u611f\u6027\uff08\u975e\u7406\u6027\uff09\u7406\u89e3\uff1a\n\n\u5047\u8bbe\u5c06\u6240\u6709\u65f6\u6001\u8d2a\u5fc3\u7684\u8c03\u6574\u662f\u5bf9\u7684\uff0c\n\n\u90a3\u4e48\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684\u5404\u4e2a\u513f\u5b50\u65f6\u6001\u4e0d\u540c\uff0c\u90a3\u4e48\u5f3a\u884c\u7edf\u4e00\uff0c\n\n\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u5047\u8bbe\u662f\u5bf9\u7684\uff1f\n\n\u56e0\u4e3a\u89c2\u5bdf\u5230\u5728\u4e00\u4e2a\u70b9\u7684\u4e0a\u65b9+1\uff0c\u5bf9\u5b83\u7684\u5b50\u6811\u7684\u76f8\u5bf9\u5173\u7cfb\u7684\u6ca1\u6709\u5f71\u54cd\u7684\uff0c\n\n\u56e0\u6b64\u5b50\u6811\u91cc\u9762\u7684\u65f6\u6001\u540c\u6b65\u53ea\u80fd\u5728\u5185\u90e8\u505a\uff0c\u6240\u4ee5\u4e00\u6b65\u4e00\u6b65\u7edf\u4e00\u4e0a\u6765,\n\n\u800c\u4e14\u7531\u4e8e\u5982\u679c\u662f\u8981\u6539\u53d8\u4e24\u4e2a\u5b50\u6811\u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\u7684\u8bdd\uff0c\n\n\u56e0\u4e3a\u662f\u6574\u4e2a\u5b50\u6811\u7684\u4fee\u6539\uff0c\u540c\u65f6\u4e0d\u5f71\u54cd\u5230\u5176\u4ed6\u5b50\u6811\uff0c\u56e0\u6b64\u8fd9\u4e2a\u65f6\u5019\u5c31\u662f\u5728\u4e00\u4e2a\u70b9\u7684\u4e0a\u65b9+1\u4e86\uff0c\n\n\u540c\u65f6\u56e0\u4e3a\u6bcf\u6b21\u53ea\u8003\u8651\u5b50\u6811\u5185\u90e8\u7684\u5173\u7cfb\uff0c\u6240\u4ee5\u6574\u4e2a\u5b50\u6811\u7684\u4fee\u6539\u4f1a\u88ab\u5ef6\u540e\u5230\u4e0a\u4e00\u4e2a\u8282\u70b9\uff0c\n\n\u8fd9\u65f6\u4e24\u4e2a\u5b50\u6811\u4e4b\u95f4\u7684\u4fee\u6539\u5c31\u53d8\u6210\u4e86\u5b50\u6811\u5185\u90e8\u7684\u4fee\u6539\uff0c\u56e0\u6b64\u9012\u5f52\u4e0a\u53bb\u5373\u53ef\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n/*\u5047\u8bbe\u5c06\u6240\u6709\u65f6\u6001\u8d2a\u5fc3\u7684\u8c03\u6574\u662f\u5bf9\u7684\uff0c\n\u90a3\u4e48\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684\u5404\u4e2a\u513f\u5b50\u65f6\u6001\u4e0d\u540c\uff0c\u90a3\u4e48\u5f3a\u884c\u7edf\u4e00\uff0c\n\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u5047\u8bbe\u662f\u5bf9\u7684\uff1f\n\u56e0\u4e3a\u89c2\u5bdf\u5230\u5728\u4e00\u4e2a\u70b9\u7684\u4e0a\u65b9+1\uff0c\u5bf9\u5b83\u7684\u5b50\u6811\u7684\u76f8\u5bf9\u5173\u7cfb\u7684\u6ca1\u6709\u5f71\u54cd\u7684\uff0c\n\u56e0\u6b64\u5b50\u6811\u91cc\u9762\u7684\u65f6\u6001\u540c\u6b65\u53ea\u80fd\u5728\u5185\u90e8\u505a\uff0c\u6240\u4ee5\u4e00\u6b65\u4e00\u6b65\u7edf\u4e00\u4e0a\u6765,\n\u800c\u4e14\u7531\u4e8e\u5982\u679c\u662f\u8981\u6539\u53d8\u4e24\u4e2a\u5b50\u6811\u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\u7684\u8bdd\uff0c\n\u56e0\u4e3a\u662f\u6574\u4e2a\u5b50\u6811\u7684\u4fee\u6539\uff0c\u540c\u65f6\u4e0d\u5f71\u54cd\u5230\u5176\u4ed6\u5b50\u6811\uff0c\u56e0\u6b64\u8fd9\u4e2a\u65f6\u5019\u5c31\u662f\u5728\u4e00\u4e2a\u70b9\u7684\u4e0a\u65b9+1\u4e86\uff0c\n\u540c\u65f6\u56e0\u4e3a\u6bcf\u6b21\u53ea\u8003\u8651\u5b50\u6811\u5185\u90e8\u7684\u5173\u7cfb\uff0c\u6240\u4ee5\u6574\u4e2a\u5b50\u6811\u7684\u4fee\u6539\u4f1a\u88ab\u5ef6\u540e\u5230\u4e0a\u4e00\u4e2a\u8282\u70b9\uff0c\n\u8fd9\u65f6\u4e24\u4e2a\u5b50\u6811\u4e4b\u95f4\u7684\u4fee\u6539\u5c31\u53d8\u6210\u4e86\u5b50\u6811\u5185\u90e8\u7684\u4fee\u6539*/\n#define R register int\n#define AC 1001000\n#define D printf(\"line in %d\\n\",__LINE__);\n#define LL long long\nint n,root;\nint date[AC],Next[AC],Head[AC],value[AC],tot;\nLL ans,have;\nLL f[AC];//f[i]\u4ee3\u8868\u8282\u70b9i\u7684\u5b50\u6811\u5185\u7684\u65f6\u6001\u5df2\u7ecf\u88ab\u7edf\u4e00\u4e3a\u4e86f[i]\nbool z[AC],vis[AC];\ninline int read()\n{\n\tint x=0;char c=getchar();\n\twhile(c > '9' || c < '0') c=getchar();\n\twhile(c >= '0' && c <= '9') x=x*10+c-'0',c=getchar();\n\treturn x;\n}\n\ninline void add(int f,int w,int S)\n{\n\tdate[++tot]=w,Next[tot]=Head[f],value[tot]=S,Head[f]=tot;\n\tdate[++tot]=f,Next[tot]=Head[w],value[tot]=S,Head[w]=tot;\n}\n\ninline void pre()\n{\n\tR a,b,c;\n\tn=read(),root=read();\n\tfor(R i=1;i<n;i++)\n\t{\n\t\ta=read(),b=read(),c=read();\n\t\tadd(a,b,c);\n\t}\n}\n\nvoid DFS(int x)//\u5148\u7edf\u8ba1\u4e00\u4e0b\n{\n\tvis[x]=true;\n\tR now;\n\tbool done=false;\n\tfor(R i=Head[x]; i ;i=Next[i])\n\t{\n\t\tnow=date[i];\n\t\tif(vis[now]) continue;\n\t\tif(!done) done=true;\n\t\thave+=value[i];\n\t\tDFS(now);\n\t\thave-=value[i];\n\t}\n\tif(!done) f[x]=have;\n}\n\nvoid DP(int x)\n{\n\tz[x]=true;\n\tR now,cnt=0;\n\tfor(R i=Head[x]; i ;i=Next[i])\n\t{\n\t\tnow=date[i];\n\t\tif(z[now]) continue;\n\t\tDP(now);\n\t\tif(!f[x]) f[x]=f[now];\n\t\telse if(f[now] != f[x])\n\t\t{\n\t\t\tif(f[now] < f[x]) ans+=f[x] - f[now];\n\t\t\telse ans+=(f[now] - f[x]) * cnt,f[x]=f[now];\n\t\t}//error!!!\u56e0\u4e3af[now]\u53ea\u4ee3\u8868\u65b0\u904d\u5386\u5230\u7684\u5b50\u6811\uff0c\u800cf[x]\u5219\u53ef\u80fd\u4ee3\u8868\u5f88\u591a\u4e2a\u5b50\u6811\n\t\t++cnt;\n\t}//error!!!\u4e8e\u662f\u5982\u679c\u7edf\u8ba1\u8ba9\u5f88\u591a\u4e2a\u5b50\u6811\u66b4\u529b\u4fee\u6539\u4e0a\u6765\u7684\u4ee3\u4ef7\uff0c\u56e0\u4e3a\u8981\u4fee\u6539\u5f88\u591a\u8fb9\uff0c\u56e0\u6b64\u8981*cnt(f[x]\u4e2d\u7684\u5b50\u6811\u4e2a\u6570)\t\t\n}\n\nint main()\n{\n\tfreopen(\"in.in\",\"r\",stdin);\n\tpre();\n\tDFS(root);\n\tDP(root);\n\tprintf(\"%lld\\n\",ans);\n\tfclose(stdin);\n\treturn 0;\n}\n```",
        "postTime": 1523958605,
        "uid": 47136,
        "name": "ww3113306",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "\u770b\u6807\u7b7e\u662f\u4e2a\u6811\u5f62dp\uff0c\u7136\u800c\u60f3\u4e86\u534a\u5929\u8fde\u72b6\u6001\u662f\u4ec0\u4e48\u90fd\u6ca1\u60f3\u51fa\u6765\uff08~~\u597d\u50cf\u66b4\u9732\u4e86\u849f\u84bb\u672c\u8d28~~\uff09...\u4e8e\u662f\u5c31\u6012\u5199\u4e00\u53d1\u8d2a\u5fc3,\u7adf\u7136A\u6389\u4e86qwq\n\n\u9996\u5148\u80af\u5b9a\u8981\u7b97\u51fa\u6700\u8fdc\u7684\u8ddd\u79bb\u6fc0\u53d1\u5668\u7684\u53f6\u5b50\u8282\u70b9\u8ddd\u79bbsdd\uff0c\u7136\u540e\u5bf9\u4e8e\u5176\u4ed6\u53f6\u5b50\u8282\u70b9\uff0c\u663e\u7136\u8981\u589e\u52a0sdd-dix[x]\u3002\u8fd9\u4e9b\u589e\u52a0\u7684\u8ddd\u79bb\u663e\u7136\u662f\u8d8a\u5f80\u4e0a\u8d8a\u5212\u7b97\u7684\uff08\u56e0\u4e3a\u8d8a\u5f80\u4e0a\u53d7\u76ca\u7684\u53f6\u5b50\u8282\u70b9\u8d8a\u591a\u561b\uff09\u3002\n\n\u800c\u5bf9\u4e8e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u5047\u5982\u4ed6\u6709\u4e24\u4e2a\u513f\u5b50\uff0c\u4e00\u4e2a\u8981\u589e\u52a02\uff0c\u4e00\u4e2a\u8981\u589e\u52a03\uff0c\u90a3\u4e48\u8be5\u8282\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u6700\u591a\u53ea\u80fd\u589e\u52a02\uff08\u56e0\u4e3a\u4e0d\u7136\u7684\u8bdd\u5c31\u8981\u6709\u5b50\u8282\u70b9\u8d85\u589e\u4e86\uff09\uff0c\u90a3\u4e48\u90a3\u4e2a\u8981\u589e\u52a03\u7684\u8282\u70b9\u5c31\u8981\u589e\u52a01\uff0c\u7136\u540e\u8be5\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u589e\u52a02\uff0c\u4e24\u4e2a\u513f\u5b50\u5c31\u90fd\u7b26\u5408\u6761\u4ef6\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<bitset>\n#define LL long long\nusing namespace std;\nconst LL INF = 0x7ffffffffffff ;\nconst int N = 500000 + 10 ;\n\ninline LL read() {\n\tLL k = 0 , f = 1 ; char c = getchar() ;\n\tfor( ; !isdigit(c) ; c = getchar())\n\t  if(c == '-') f = -1 ;\n\tfor( ; isdigit(c) ; c = getchar())\n\t  k = k*10 + c-'0' ;\n\treturn k*f ;\n}\nstruct Edge {\n\tint to, next ; LL val ;\n}e[N<<1] ;\nint n, s, m ; LL ans = 0, sdd ; int head[N] ; LL dis[N] ;\ninline void add_edge(int x,int y,LL vv) {  // \u53cc\u5411\u8fb9 \n\tstatic int cnt = 0 ;\n\te[++cnt].to = y, e[cnt].next = head[x], head[x] = cnt, e[cnt].val = vv ;\n\te[++cnt].to = x, e[cnt].next = head[y], head[y] = cnt, e[cnt].val = vv ;\n}\n\ninline void bfs() {\n\tbitset<N>vis ; for(int i=1;i<=n;i++) dis[i] = INF ;\t\n\tqueue<LL>q ; q.push(s) ; vis[s] = 1, dis[s] = 0 ;\n\twhile(!q.empty()) {\n\t\tint x = q.front() ; q.pop() ;\n\t\tfor(int i=head[x];i;i=e[i].next) {\n\t\t\tint y = e[i].to ; if(vis[y]) continue ;\n\t\t\tdis[y] = dis[x]+e[i].val ; vis[y] = 1 ;\n\t\t\tq.push(y) ;\n\t\t}\n\t}\n}\nLL dfs(int x,int fa) {\n\tLL minn = INF, maxx = 0, tot = 0, num = 0 ;\n\tfor(int i=head[x];i;i=e[i].next) {\n\t\tint y = e[i].to ; if(y == fa) continue ;\n\t\tLL res = dfs(y,x) ; num++ ;\n\t\ttot += res, minn = min(res,minn) ;\n\t}\n\tif(!num) return sdd-dis[x] ;  // \u53f6\u5b50\u8282\u70b9 \n\tif(x == s) return tot ;\n\tans += tot - num*minn ;\n\treturn minn ;\n}\n\nint main() {\n\tn = read() ; s = read() ;\n\tfor(int i=1;i<n;i++) {\n\t\tint x = read(), y = read() ;\n\t\tadd_edge(x,y,read()) ; \n\t}\n\tbfs() ; sdd = 0 ;\n\tfor(int i=1;i<=n;i++) sdd = max(sdd,dis[i]) ;\n\tLL res = dfs(s,0) ; ans += res ;\n\tprintf(\"%lld\",ans) ;\n\treturn 0 ;\n}\n```",
        "postTime": 1522903095,
        "uid": 27388,
        "name": "zubizakeli",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "\u59a5\u59a5\u7684\u8d2a\u5fc3\u3002\u3002\u3002\n\u53ef\u4ee5\u5f88\u663e\u7136\u5730\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u6761\u8fb9\u8d8a\u9760\u8fd1\u6839\uff0c\u5ef6\u957f\u540e\u7684\u7ed3\u679c\u8d8a\u4f18\uff0c\u56e0\u4e3a\u4e00\u6761\u8fb9\u8d8a\u9760\u8fd1\u6839\u80fd\u5f71\u54cd\u7684\u53f6\u5b50\u8282\u70b9\u5c31\u8d8a\u591a\uff1b\n\u8fd8\u53ef\u4ee5\u5f88\u663e\u7136\u5730\u53d1\u73b0\uff0c\u5bf9\u4e8e\u8ddd\u79bb\u6839\u8282\u70b9\u6700\u8fdc\u7684\u53f6\u5b50\uff0c\u5ef6\u957f\u4ed6\u5230\u6839\u7684\u8ddd\u79bb\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff1b\n\u4e8e\u662f\u5bf9\u6bcf\u4e2a\u8282\u70b9\uff0c\u9884\u5904\u7406\u4ee5\u4e0b\u4fe1\u606f\uff1a\n\tdist[i]\u8868\u793ai\u5230\u6839\u7684\u8ddd\u79bb\uff1b\n\tmx[i]\u8868\u793a\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0cdist\u7684\u6700\u5927\u503c\uff1b\n\u5904\u7406\u4e4b\u540edfs\uff0c\u5bf9\u4e8e\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u627e\u51famaxdist=max{mx[j] | j\u662fi\u7684\u513f\u5b50}\uff0c\u5219\u5bf9mx[j]<maxdist\u7684\u8282\u70b9\uff0c\u8fb9<i,j>\u8981\u5ef6\u957fmaxdist-mx[j]\uff0c\u76f4\u63a5\u7b97\u5373\u53ef\uff1b\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nconst int maxn=1e6+5;\nstruct edge\n{\n\tint to,next,w;\n}e[maxn<<1];\nint first[maxn],np;\nlong long dist[maxn],mx[maxn];\nint n,s;\nvoid initial()\n{\n\tmemset(first,0,sizeof(first));\n\tmemset(dist,0,sizeof(dist));\n\tmemset(mx,0,sizeof(mx));\n\tnp=0;\n}\nvoid addedge(int u,int v,int w)\n{\n\te[++np]=(edge){v,first[u],w},first[u]=np;\n}\nvoid DFS(int i,int f)\n{\n\tmx[i]=dist[i];\n\tfor(int p=first[i];p;p=e[p].next)\n\t{\n\t\tint j=e[p].to,c=e[p].w;\n\t\tif(j==f) continue;\n\t\tdist[j]=dist[i]+c;\n\t\tDFS(j,i);\n\t\tmx[i]=max(mx[i],mx[j]);\n\t}\n}\nlong long calc(int i,int f)\n{\n\tlong long ret=0,maxdist=0;\n\tfor(int p=first[i];p;p=e[p].next)\n\t{\n\t\tint j=e[p].to;\n\t\tif(j==f) continue;\n\t\tmaxdist=max(maxdist,mx[j]);\n\t}\n\tfor(int p=first[i];p;p=e[p].next)\n\t{\n\t\tint j=e[p].to;\n\t\tif(j==f) continue;\n\t\tret+=maxdist-mx[j]+calc(j,i);\n\t}\n\treturn ret;\n}\nint main()\n{\n\tinitial();\n\tscanf(\"%d%d\",&n,&s);\n\tint u,v,w;\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\taddedge(u,v,w);\n\t\taddedge(v,u,w);\n\t}\n\tDFS(s,0);\n\tcout<<calc(s,0)<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1522295659,
        "uid": 70069,
        "name": "Colitas",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u672c\u6765\u4ee5\u4e3a\u662f\u4e2a\u56fe\u8bba\u3002\u3002\u3002\u5c31\u5199\u4e86\u4e2a\u6700\u77ed\u8def\u627e\u6700\u957f\u8fb9\u3002\u3002\u3002\u540e\u6765\u53d1\u73b0\u5176\u5b9e\u8d8a\u9760\u8fd1\u6839\u8282\u70b9\u7684\u52a0\u65f6\u5176\u5b9e\u662f\u8d8a\u6709\u5229\u7684\uff08\u5982\u679c\u4ece\u8fd9\u91cc\u5f80\u4e0b\u90fd\u8981\u52a0\u65f6\u7684\u8bdd\uff09\uff0c\u5f97\u51fa\u7ed3\u8bba\uff1a\u8fd9\u662f\u4e2a\u6811\u5f62DP\u3002\u72b6\u6001\uff1af[i]\u8868\u793a\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u7684\u65f6\u95f4\u7684\u6700\u5927\u503c\u3002\u8f6c\u79fbf[i]=max{f[i],f[v]+e[i].val}\uff08\u5f53i\u4e0ev\u6709\u4e00\u6761\u8fb9\u65f6\uff09dfs\u5373\u53ef\u6c42\u51fa\u6700\u5927\u503c\u3002\u518d\u8dd1\u4e00\u904ddfs\u6c42\u89e3\u7b54\u6848\uff0c\u65b9\u7a0b\u4e3aans+=f[x]-f[v]-e[i].val\u3002\uff08\u81f3\u4e8e\u6211\u672c\u4eba\u6ca1\u6cd5\u8bed\u8a00\u7279\u522b\u6e05\u695a\u7684\u89e3\u91ca\u660e\u767d\u8fd9\u4e2a\u65b9\u7a0b\u3002\u3002\u5927\u610f\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u679a\u4e3e\u4e0e\u5b83\u76f8\u8fde\u4e14\u4e0d\u662f\u4ed6\u7956\u5148\u7684\u70b9\uff0c\u8981\u5ef6\u957f\u7684\u65f6\u95f4\u5c31\u662f\u4ed6\u8fd9\u91cc\u7684\u6700\u5927\u503c\u51cf\u53bb\u4e0e\u4ed6\u76f8\u8fde\u7684\u6700\u5927\u503c\u548c\u4f20\u9001\u65f6\u95f4\uff0c\u8fd9\u4e2a\u5dee\u503c\u6709\u53ef\u80fd\u662f\u8d1f\u6570\uff09\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=500010;\nstruct edge {\n    int next,to,val;\n};\nedge e[2*MAXN];\nint head[MAXN],cnt;\nvoid addedge(int u,int v,int w) {\n    e[++cnt].next=head[u];\n    e[cnt].to=v;\n    e[cnt].val=w;\n    head[u]=cnt;\n}\nint f[MAXN],n;\nlong long ans;\nbool visit[MAXN];\nvoid dfs1(int x) {\n    visit[x]=true;\n    for (int i=head[x]; i; i=e[i].next) {\n        int v=e[i].to;\n        if (!visit[v]) {\n            dfs1(v);\n            f[x]=max(f[x],f[v]+e[i].val);\n        }\n    }\n}\nvoid dfs2(int x) {\n    visit[x]=true;\n    for (int i=head[x]; i; i=e[i].next) {\n        int v=e[i].to;\n        if (!visit[v]) {\n            dfs2(v);\n            ans+=f[x]-f[v]-e[i].val;\n        }\n    }\n}\nint main() {\n    int s;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&s);\n    for (int i=1; i<n; i++) {\n        int u,v,w;\n        scanf(\"%d%d%d\",&u,&v,&w);\n        addedge(u,v,w);\n        addedge(v,u,w);\n    }\n    dfs1(s);\n    memset(visit,0,sizeof(visit));\n    dfs2(s);\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1503046671,
        "uid": 22049,
        "name": "01407s",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "**\u3010\u89e3\u9898\u601d\u8def\u3011**\n\n\u5f88\u663e\u7136\uff0c\u5047\u8bbe\u7535\u8def\u677f\u7684\u6fc0\u53d1\u5668\u4e3a\u6839\u8282\u70b9\uff0c\u90a3\u4e48\u5bf9\u4e8e\u9898\u76ee\u4e2d\u7684\u6811\uff08\u7535\u8def\u677f\uff09\uff0c\u6211\u4eec\u663e\u7136\u8981\u5c3d\u91cf\u5728\u6df1\u5ea6\u8f83\u5c0f\u7684\u8fb9\u4e0a\u5c06\u901a\u8fc7\u65f6\u95f4\u589e\u52a0\u4e00\u4e9b\u5355\u4f4d\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ea\u8981\u589e\u52a0\u8fd9\u4e00\u6761\u8fb9\u7684\u901a\u8fc7\u65f6\u95f4\uff0c\u901a\u8fc7\u8fd9\u6761\u8fb9\u6240\u80fd\u5230\u8fbe\u7684\u6240\u6709\u7ec8\u6b62\u8282\u70b9\uff08\u53f6\u5b50\u8282\u70b9\uff09\u90fd\u80fd\u51cf\u5c11\u76f8\u5e94\u7684\u901a\u8fc7\u65f6\u95f4\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u600e\u6837\u8ba1\u7b97\u589e\u52a0\u7684\u901a\u8fc7\u65f6\u95f4\uff0c\u8bb0$dis[x]$\u8868\u793a\u4ece\u8282\u70b9$x$\u5230\u8fbe\u7ec8\u6b62\u8282\u70b9\u6240\u9700\u6700\u957f\u7684\u901a\u8fc7\u65f6\u95f4\uff0c\u5219\u8f6c\u79fb\u4e3a$dis[x]=Max{dis[x],dis[y]+cst[x][y]}$\uff08$y$\u4e3a$x$\u7684\u5b50\u8282\u70b9\uff0c$cst[x][y]$\u8868\u793a\u901a\u8fc7\u8fb9$x$->$y$\u6240\u9700\u7684\u65f6\u95f4\uff09\uff0c\u53ef\u7528$DFS$\u8ba1\u7b97\u3002\n\n\u901a\u8fc7$DFS$\u8ba1\u7b97\u5b8c\u6240\u6709$dis[x]$\u540e\uff0c\u5982\u679c\u5b58\u5728$dis[x]>dis[y]+cst[x][y]$\uff0c\u5219\u6211\u4eec\u5fc5\u987b\u5728\u8fb9$x$->$y$\u4e0a\u589e\u52a0$(dis[x]-dis[y]-cst[x][y])$\u5355\u4f4d\u7684\u65f6\u95f4\uff0c\u56e0\u4e3a\u6211\u4eec\u5982\u679c\u5728\u6df1\u5ea6\u6bd4\u8fb9$x$->$y$\u5c0f\u7684\u8fb9\u4e0a\u589e\u52a0\u65f6\u95f4\uff0c\u5219\u901a\u8fc7\u8282\u70b9$x$\u5230\u8fbe\u6240\u6709\u7ec8\u6b62\u8282\u70b9\u90fd\u8981\u589e\u52a0\u76f8\u540c\u7684\u65f6\u95f4\uff0c\u8fd9\u6837\u65e0\u8bba\u589e\u52a0\u591a\u5c11\u65f6\u95f4\uff0c\u8fd9\u4e9b\u7ec8\u6b62\u8282\u70b9\u6c38\u8fdc\u65e0\u6cd5\u8fbe\u5230\u65f6\u6001\u540c\u6b65\u3002\n\n\u8fd9\u91cc\u518d\u63d0\u4f9b\u4e00\u79cd\u5c06$DFS$\u53d8\u4e3a$BFS$\u7684\u5199\u6cd5\uff0c\u8bb0\u961f\u5217$Q$\uff0c$Q[i][0]$\u8868\u793a\u5f53\u524d\u904d\u5386\u5230\u7684\u8282\u70b9\uff0c$Q[i][1]$\u8868\u793a$Q[i][0]$\u7684\u7236\u8282\u70b9\uff0c$Q[i][2]$\u8868\u793a\u901a\u8fc7\u8fb9$Q[i][1]$->$Q[i][2]$\u6240\u9700\u7684\u65f6\u95f4\u3002\n\n\u7136\u540e\u6211\u4eec\u5c06\u6811\u6309$BFS$\u5e8f\u904d\u5386\u5b8c\u4e00\u904d\u540e\uff0c\u5c06\u961f\u5217\u4e2d\u5165\u961f\u8fc7\u7684\u6240\u6709\u5143\u7d20\u9006\u5e8f\u53d6\u51fa\u6765\u66f4\u65b0$dis[x]$\u7684\u503c\uff08\u5373$dis[Q[i][1]]=Max{dis[Q[i][1]],dis[Q[i][0]]+Q[i][2]}$\uff09\u5e76\u8ba1\u7b97\u7b54\u6848\u3002\u56e0\u4e3a\u5728$BFS$\u4e2d\u6bcf\u6269\u5c55\u4e00\u6b21\u8282\u70b9\u8868\u793a\u5728\u6811\u4e2d\u7684\u904d\u5386\u6df1\u5ea6\u52a0\u4e00\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u6700\u540e\u662f\u6309\u7167\u6df1\u5ea6\u4ece\u5927\u5230\u5c0f\u6765\u66f4\u65b0\u7684\uff0c\u5b9e\u9645\u4e0a\u6a21\u62df\u7684\u5c31\u662f$DFS$\u7684\u56de\u6eaf\u3002\n\n**\u3010\u4ee3\u7801\u3011**\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n\nusing namespace std;\ntypedef long long ll;\nconst int Maxn = 0x3f3f3f3f;\nconst int N = 5e5 + 5;\nll dis[N], Ans; int n, src, Q[N][3];\n\nstruct Edge\n{\n    int to; ll tim; Edge *nxt;\n}a[N << 1], *T = a, *lst[N];\n\ntemplate <class T> inline void CkMax(T &a, const T &b) {if (a < b) a = b;}\n\ninline int get()\n{\n    char ch; bool f = false; int res = 0;\n    while (((ch = getchar()) < '0' || ch > '9') && ch != '-');\n    if (ch == '-') f = true;\n     else res = ch - '0';\n    while ((ch = getchar()) >='0' && ch <= '9')\n        res = (res << 3) + (res << 1) + ch - '0';\n    return f? ~res + 1 : res;\n}\n\ninline void put(ll x)\n{\n    if (x < 0)\n      x = ~x + 1, putchar('-');\n    if (x > 9) put(x / 10);\n    putchar(x % 10 + 48);\n}\n\ninline void addEdge(const int &x, const int &y, const int &z)\n{\n    T->nxt = lst[x]; T->to = y; T->tim = (ll)z; lst[x] = T++;\n    T->nxt = lst[y]; T->to = x; T->tim = (ll)z; lst[y] = T++;  \n}\n\nint main()\n{\n    n = get(); src = get(); int x, v, y;\n    for (int i = 1; i < n; ++i)\n     x = get(), y = get(), addEdge(x, y, get());\n    int t = 0, w = 1; Q[1][0] = src;\n    while (t < w)\n    {\n        x = Q[++t][0]; v = Q[t][1];\n        for (Edge *e = lst[x]; e; e = e->nxt)\n        {\n            if ((y = e->to) == v) continue;\n            Q[++w][0] = y; Q[w][1] = x; Q[w][2] = e->tim; \n        }\n    }\n    for (int i = w; i >= 2; --i)\n     CkMax(dis[Q[i][1]], dis[Q[i][0]] + Q[i][2]);\n    for (int i = w; i >= 2; --i)\n     Ans += dis[Q[i][1]] - dis[Q[i][0]] - Q[i][2];\n    return put(Ans), 0;\n}\n```",
        "postTime": 1500085906,
        "uid": 17952,
        "name": "Log_x",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "\n[\u5e7f\u544a\u4ee5\u53ca\u5410\u69fd\u4ee5\u53carank1 15ms\u7684\u539f\u56e0](http://www.cnblogs.com/wawcac-blog/p/6943113.html)\n\n\u89e3\u9898\u601d\u8def\n\n\u8fdb\u884c\u4e00\u6ce2dfs\uff0c\u7528f[i]\u8bb0\u5f55\u7b2ci\u4e2a\u8282\u70b9\u5230\u8fbe\u6700\u8fdc\u53f6\u5b50\u8282\u70b9\u7684\u7528\u65f6(\u7528\u65f6\u6700\u957f\u7684\u53f6\u5b50\u8282\u70b9).\n\n\u4ece\u6bcf\u4e2a\u513f\u5b50v\u56de\u6eaf\u56de\u6765\u65f6\uff0c\u5982\u679c\u4ecev\u4e0b\u53bb\u5230\u8fbe\u6700\u8fdc\u53f6\u5b50\u8282\u70b9\u7528\u65f6\u66f4\u957f\uff0c\u90a3\u5c31\u66f4\u65b0f[u]\uff0cf[u]=max(f[u],f[v]+e[i].w)\uff0ce[i].w\u662f\u4eceu\u5230v\u7684\u7528\u65f6\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u904d\u5386\u5b8cu\u7684\u6240\u6709\u513f\u5b50\uff0c\u7b54\u6848\u5c31\u589e\u52a0sigma( f[u]-f[e[i].to]-f[e[i].w )\u3002\n\n\u5927\u6982\u5c31\u662f\u4ece\u53f6\u5b50\u5f00\u59cb\u4e00\u5c42\u5c42\u5730\u628a\u5144\u5f1f\u8282\u70b9\u7edf\u4e00\u4e86\uff0c\u518d\u5411\u4e0a\u7edf\u4e00\u8fd9\u4e2a\u8282\u70b9\u603b\u5171\u8981\u52a0\u591a\u5c11\u65f6\u95f4\uff0c\u4e00\u5c42\u5c42\u5411\u7236\u4eb2\u6c47\u603b\uff0c\u56de\u5230\u6839\u8282\u70b9\u5c31\u5f97\u5230\u4e86\u7b54\u6848\n\n\u6e90\u4ee3\u7801\n\n\n\n\n```cpp\n#include<stdio.h>\ninline int max(int a,int b)\n{\n    return a>b?a:b;\n}\ninline int read()\n{\n    int x=0;\n    char ch=getchar();\n    while (ch<'0'||ch>'9') ch=getchar();\n    while (ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n    return x;\n}\nint n,root;\nstruct edge{\n    int next,to;\n    int w;\n}e[1000010];\nint head[500010]={0},cnt=1;\ninline void add(int u,int v,int w)\n{\n    e[cnt].next=head[u];\n    e[cnt].to=v;\n    e[cnt].w=w;\n    head[u]=cnt++;\n}\nlong long f[500010]={0},ans=0;\nvoid dfs(int u,int fa)\n{\n    for(int i=head[u];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(v==fa) continue;\n        dfs(v,u);\n        f[u]=max(f[u],f[v]+e[i].w);\n    }\n    for(int i=head[u];i;i=e[i].next)\n        if(fa!=e[i].to)\n            ans+=f[u]-f[e[i].to]-e[i].w;\n}\nint main()\n{\n    n=read();root=read();\n    for(register int i=1,u,v,w;i<n;i++)\n        u=read(),v=read(),w=read(),add(u,v,w),add(v,u,w);\n    dfs(root,0);\n    printf(\"%lld\",ans);\n    return 0;\n}\n```",
        "postTime": 1496598331,
        "uid": 15429,
        "name": "wawcac",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "\u5176\u5b9e\u6211\u5f88\u60f3\u77e5\u9053\u8fd0\u884c\u65f6\u95f4\u524d\u51e0\u540d\u7684\u662f\u600e\u4e48\u505a\u7684\u3002\u3002\u3002\n\n\u6bd4\u5982\u4e00\u4e2a\u7ed3\u70b9\u6709\u82e5\u5e72\u513f\u5b50\uff0c\u513f\u5b50\u53ef\u4ee5\u9012\u5f52\u4e3a\u5b50\u95ee\u9898\u3002\u3002\u3002\n\n\u8bbef[x]\u8868\u793a\u53f6\u8282\u70b9\u5230x\u7684\u6700\u5927\u65f6\u95f4\n\n\u5219f[x]=f[son]+edge.v\n\n\u7b54\u6848\u5373 sigma f[x]-f[son]-edge.v\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<set>\n#include<ctime>\n#include<queue>\n#include<cmath>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nll ans;\nint n,root,cnt;\nint f[500005],last[500005];\nstruct edge{int to,next,v;}e[1000005];\nint read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nvoid insert(int u,int v,int w)\n{\n    e[++cnt].to=v;e[cnt].next=last[u];last[u]=cnt;e[cnt].v=w;\n    e[++cnt].to=u;e[cnt].next=last[v];last[v]=cnt;e[cnt].v=w;\n}\nvoid dfs(int x,int fa)\n{\n    for(int i=last[x];i;i=e[i].next)\n        if(e[i].to!=fa)\n        {\n            dfs(e[i].to,x);\n            f[x]=max(f[x],f[e[i].to]+e[i].v);\n        }\n    for(int i=last[x];i;i=e[i].next)\n        if(e[i].to!=fa)ans+=f[x]-f[e[i].to]-e[i].v;\n}\nint main()\n{\n    n=read();root=read();\n    for(int i=1;i<n;i++)\n    {\n        int u=read(),v=read(),w=read();\n        insert(u,v,w);\n    }\n    dfs(root,0);\n    printf(\"%lld\",ans);\n    return 0;\n}\n```",
        "postTime": 1474373535,
        "uid": 10154,
        "name": "wzh1120",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    },
    {
        "content": "\u8fd9\u9898\u770b\u8d77\u6765\u597d\u50cf\u5f88\u96be\u3002\u3002\u3002\n\n\u4f46\u8bfb\u61c2\u9898\u5374\u5f88\u7b80\u5355\uff08\u4e0d\u8981\u60f3\u7684\u592a\u590d\u6742\uff09\n\n\u9898\u610f\uff1a\u4ece\u67d0\u4e2a\u70b9\u5f00\u59cb\uff0c\u4f9d\u6b21\u904d\u5386\u70b9\uff0c\u76f4\u5230\u65e0\u6cd5\u524d\u8fdb\uff0c\u53ef\u4ee5\u4f7f\u67d0\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u901a\u8fc7\u65f6\u95f4+1\uff08\u96fe\uff09\uff0c\u6c42\u4f7f\u6240\u6709\u70b9\u90fd\u5230\u8fbe\u7ec8\u70b9\u6700\u5c11\u6539\u53d8\u51e0\u6b21\u901a\u8fc7\u65f6\u95f4\n\n\u4e00\u770b\u5c31\u662f\u6811\u5f62dp\uff08\u597d\u5427\u6211\u627f\u8ba4\u6211\u770b\u4e86\u6807\u7b7e\uff09\n\n\u56e0\u4e3a\u6539\u53d8\u7684\u8fb9\u8d8a\u9760\u8fd1\u6e90\u70b9\uff0c\u5bf9\u4ee5\u540e\u7684\u70b9\u5c31\u5f71\u54cd\u5c31\u8d8a\u5927\n\n\u5982\u679c\u6709\u591a\u6761\u8def\u90fd\u7ecf\u8fc7\u4e00\u4e2a\u70b9\uff0c\u5fc5\u987b\u5f3a\u5236\u4f7f\u7528\u65f6\u5c11\u7684\u8def+1\u76f4\u5230\u4e0e\u7528\u65f6\u6700\u957f\u7684\u8def\u7528\u65f6\u76f8\u7b49\n\n\u6240\u4ee5\u7528f\u50a8\u5b58\u5230\u8fbei\u70b9\u7528\u7684\u6700\u957f\u65f6\u95f4\n\n\u7136\u540edfs\u4e00\u904d\u6c42\u51faf\n\n##f[x]=max(f[x],f[c[i].y]+c[i].dis);\n\n\u518ddfs\u4e00\u904d\uff0c\u8fd9\u6b21\u5c31\u662f\u6b63\u513f\u516b\u7ecf\u7684\u6c42\u7b54\u6848\u4e86\n\nans\u5c31\u662f\u6240\u6709\u5f3a\u5236+1\u7684\u6b21\u6570\n\n##ans+=f[x]-(f[c[i].y]+c[i].dis);\n\nc[i].y\u5230x\u7684\u7528\u65f6\u8fd8\u8981\u52a0\u4e0a\u5b83\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\n\n\u62c6\u5f00\n##ans+=f[x]-f[c[i].y]-c[i].dis;\n\n\u8f93\u51faans\u5c31\u884c\u4e86\n\nPS\uff1a\u4f3c\u4e4e\u8981\u7528long long\uff0c\u7136\u800c\u4e0d\u77e5\u9053\u662f\u6211\u592a\u83dc\u4e86\u8fd8\u662fcodevs\u6570\u636e\u6076\u5fc3\uff0c\u5728codevs\u4f3c\u4e4e\u8981\u7528\u9ad8\u7cbe\u5ea6\uff08\u745f\u745f\u53d1\u6296\uff09\n\nc++\n```cpp\n# include<iostream>\n# include<cstdio>\n# include<cstring>\nusing namespace std;\nint n,s,num;\nlong long ans;\nstruct p{\n    int x,y,dis;\n}c[1000001];\nint h[500001];\nlong long f[500001];\nbool use[500001];\nvoid add(int x,int y,int dis)\n{\n    c[++num].x=h[x];\n    c[num].y=y;\n    c[num].dis=dis;\n    h[x]=num;\n}\nvoid dfs(int x)\n{\n    for(int i=h[x];i;i=c[i].x)\n      if(!use[c[i].y])\n      {\n          use[c[i].y]=1;\n          dfs(c[i].y);\n        use[c[i].y]=0;\n          f[x]=max(f[x],f[c[i].y]+c[i].dis);\n      }\n}\nvoid dfs1(int x)\n{\n    for(int i=h[x];i;i=c[i].x)\n      if(!use[c[i].y])\n      {\n          use[c[i].y]=1;\n          dfs1(c[i].y);\n          use[c[i].y]=0;\n          ans+=f[x]-f[c[i].y]-c[i].dis;\n      }\n}\nint main()\n{\n    cin>>n>>s;\n    for(int i=1;i<n;i++)\n      {\n          int x,y,dis;\n          cin>>x>>y>>dis;\n          add(x,y,dis);\n          add(y,x,dis);\n      }\n    use[s]=1;\n    dfs(s);\n    memset(use,0,sizeof(use));\n    use[s]=1;\n    dfs1(s);\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1507815612,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1131 \u3010[ZJOI2007]\u65f6\u6001\u540c\u6b65\u3011"
    }
]