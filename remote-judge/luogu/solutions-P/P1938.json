[
    {
        "content": "## \u4e00\u9053\u6700\u77ed\u8def~~\uff08\uff1f\uff09~~\u7684\u597d\u9898\uff01\uff01\n\n\u4e3a\u4ec0\u4e48\u8bf4\u8fd9\u9053\u9898\u597d\u5462\uff1f\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u70b9\uff1a\n\n**1. \u8fd9\u9053\u9898\u5b8c\u7f8e\u5730\u9700\u8981\u6211\u4eec\u5c06\u70b9\u6743\u8f6c\u6210\u8fb9\u6743\uff1a**\n\n>$Bessie$ \u9700\u8981\u53bb\u8fd9\u4e48\u591a\u57ce\u5e02\uff0c\u800c\u6bcf\u5ea7\u57ce\u5e02\u4ed6\u90fd\u8981\u8d5a $D$ \u7f8e\u5143\u3002\u90a3\u6211\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u5c06\u6bcf\u6761\u666e\u901a\u8fb9\u7684\u8fb9\u6743\u5c31\u8bbe\u7f6e\u6210 $D$ \u5462\uff1f\u8fd9\u4e24\u8005\u4e4b\u95f4\u662f\u7b49\u4ef7\u7684\u5440\u00b7\u00b7\u00b7\u00b7\u00b7\n>\n>\u90a3\u5bf9\u4e8e\u98de\u884c\u8fb9\u6765\u8bf4\uff0c\u540c\u7406\uff0c\u98de\u884c\u8fb9\u9700\u8981\u82b1\u8d39 $T$ \u7f8e\u5143\uff0c\u800c\u5230\u4e00\u4e2a\u57ce\u5e02\u53c8\u53ef\u4ee5\u8d5a $D$ \u7f8e\u5143\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u98de\u884c\u8fb9\u6743\u8bbe\u4e3a $D-T$\u3002\n>\n> \u8fd9\u6837\uff0c\u5b58\u56fe\u7684\u4e8b\u5c31\u89e3\u51b3\u4e86\n\n**2. \u53ea\u8981\u4f60\u8bfb\u61c2\u9898\u76ee\uff0c\u5c31\u4f1a\u53d1\u73b0\u8fd9\u9898\u538b\u6839\u4e0d\u662f\u6700\u77ed\u8def\uff0c\u662f\u6700\u957f\u8def\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7**\n> \u505a\u6700\u957f\u8def\u4e3b\u8981\u6709\u4e24\u79cd\u505a\u6cd5\uff08**\u4f1a\u7684\u53ef\u4ee5\u6311\u8fc7**\uff0c\u5176\u5b9e\u548c\u505a\u6700\u77ed\u8def\u7684\u601d\u60f3\u90fd\u4e00\u6837\uff09\uff1a\n>\n> $2.1$ \u505a\u6700\u77ed\u8def\u662f\u6211\u4eec\u662f\u73b0\u5c06 $dis$ \u6570\u7ec4\u8bbe\u4e3a\u65e0\u7a77\u5927\uff0c\u518d\u6bcf\u6b21\u66f4\u65b0\u6700\u5c0f\u503c\u3002\u53cd\u8fc7\u6765\uff0c\u6700\u957f\u8def\u5c31\u53ef\u4ee5\u5c06 $dis$ \u6570\u7ec4\u90fd\u8bbe\u4e3a $0$ ,\u518d\u6bcf\u6b21\u66f4\u65b0\u6700\u5927\u503c\u3002\n>\n> $2.2$ \u5c06\u6240\u6709\u8fb9\u6743\u90fd\u53d6\u53cd\u540e\uff0c\u518d\u6c42\u6700\u77ed\u8def\uff08\u81f3\u4e8e\u4e3a\u4ec0\u4e48\uff0c\u5728\u7eb8\u4e0a\u753b\u4e2a\u4e94\u5206\u949f\u5c31\u51fa\u6765\u4e86~ $QwQ$\uff09\n>\n> \u5982\u679c\u4f60\u8fd8\u4e0d\u61c2\u600e\u4e48\u6c42\u6700\u957f\u8def\uff0c\u51fa\u95e8\u5de6\u8f6c: [\u5b66\u56fe\u8bba\uff0c\u4f60\u771f\u7684\u4e86\u89e3\u6700\u77ed\u8def\u5417\uff1f](https://www.luogu.org/blog/wym483739/xue-tu-lun-ni-zhen-di-liao-xie-zui-duan-lu-ma-post) \n>\n> \u518d\u6765\u4e00\u9053\u6a21\u677f\u9898\uff1a[P1807 \u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09](https://www.luogu.org/problem/P1807)\n>\n>**\u6e29\u99a8\u63d0\u793a\uff1a$Dijskra$ \u7b97\u6cd5\u65e0\u6cd5\u5904\u7406\u8d1f\u6743\u73af\uff01**\n\n\n\u4e0b\u9762\u770b\u6211\u7684\u4ee3\u7801\uff0c\u5e94\u8be5\u5c31\u770b\u5230\u61c2\u4e86\uff1a\n```cpp\n#include <bits/stdc++.h>\n#define int long long\n#define M 1000\nusing namespace std;\n\nint tot=0, head[M], nex[M], to[M], dis[M];\nint d, m, n, f, s;                      //d, p, c, f, s\nint vis[M], w[M], cnt[M];\npriority_queue<int, vector<int>, greater<int> > q;  //\u5927\u6839\u5806\n\ninline int read()\n{\n    int re=0, f=1; char ch=getchar();\n    while(ch<'0' || ch>'9') {if(ch=='-') f=-1; ch=getchar();}\n    while(ch>='0' && ch<='9') {re=re*10+(ch-'0'); ch=getchar();}\n    return re*f;\n}\n\nvoid add_edge(int x,int y,int z)\n{\n    to[++tot]=y;\n    dis[tot]=z;\n    nex[tot]=head[x];\n    head[x]=tot;\n}\n\nvoid Spfa()\n{\n    q.push(s);\n    w[s]=d; vis[s]=1; cnt[s]++;\n    while(!q.empty())\n    {\n        int u=q.top(); q.pop();\n        vis[u]=0;\n        if(++cnt[u]>n) {printf(\"-1\\n\"); exit(0);}  \n        for(int i=head[u];i;i=nex[i])\n        {\n            int v=to[i];\n            if(w[v]<w[u]+dis[i])\n            {\n                w[v]=w[u]+dis[i];      //\u6211\u662f\u7528\u7b2c\u4e00\u79cd\u6c42\u6700\u957f\u8def\u7684\u7b97\u6cd5\u505a\u7684~qwq\n                if(!vis[v])\n                {\n                    q.push(v);\n                    vis[v]=1;\n                }\n            }\n        }\n    }\n}\n\nsigned main()\n{\n    d=read(); m=read(); n=read(); f=read(); s=read();\n    for(int i=1;i<=m;++i)\n    {\n        int x=read(), y=read();\n        add_edge(x,y,d);                      //\u5c06\u70b9\u6743\u8f6c\u6362\u4e3a\u8fb9\u6743\u3002\n    }\n    for(int i=1;i<=f;++i)\n    {\n        int x=read(), y=read(), z=read();\n        add_edge(x,y,d-z);\n    }\n    Spfa();\n    int ans=0;\n    for(int i=1;i<=n;++i) ans=max(ans,w[i]);\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n\n\n## $P.s$\n\u4e0b\u9762\u6211\u4e5f\u8d34\u4e0a\u4e86\u6d1b\u8c37P1807 \u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u7684\u6807\u79f0\u3010\u8fd9\u91cc\u6211\u662f\u7528\u7b2c\u4e8c\u79cd\u6c42\u6700\u957f\u8def\u7684\u65b9\u6cd5\u6c42\u7684\u3011\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N=120000;\nconst int INF=0x3f3f3f3f;\nll dis[N],to[N],nex[N],head[N];\nll n,m,ans,tot=0;\nll d[N],vis[N];\nvoid add_edge(int x,int y,int l)\n{\n    to[++tot]=y;\n    dis[tot]=l;\n    nex[tot]=head[x];\n    head[x]=tot;\n}\nqueue<int> q;\nvoid Spfa()\n{\n    q.push(1); vis[1]=1;\n    while(!q.empty())\n    {\n        ll u,v;\n        u=q.front(); q.pop(); vis[u]=0;\n        for(int i=head[u];i;i=nex[i])\n        {\n            v=to[i];\n            if(d[v]>d[u]+dis[i])\n            {\n                d[v]=d[u]+dis[i];\n                if(vis[v]==0) {vis[v]=1; q.push(v);}\n            }\n        }\n    }\n}\nint main()\n{\n    scanf(\"%lld%lld\",&n,&m);\n    if(m==0) {printf(\"-1\\n\"); return 0;}\n    for(int i=1;i<=m;++i)\n    {\n        ll x,y,l;\n        scanf(\"%lld%lld%lld\",&x,&y,&l);\n        l=0-l;\n        add_edge(x,y,l);              //minus\n    }\n    memset(d,0,sizeof(d));\n    d[1]=0;\n    Spfa();\n    if(d[n]==0) {printf(\"-1\\n\"); return 0;}\n    printf(\"%lld\\n\",-d[n]);\n    return 0;\n}\n```\n\n## \u6700\u540e,\u5728\u7ed9\u5927\u5bb6\u5e26\u6765\u4e00\u9053\u53cc\u500d\u7ecf\u9a8c $QwQ$\n\n\u4f20\u9001\u95e8\uff1a [P2648 \u8d5a\u94b1](https://www.luogu.org/problemnew/show/P2648)\n\n\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u60f3\u4e00\u4e0b\uff0c\u771f\u7684\u548c\u4e0a\u9898\u6ca1\u4ec0\u4e48\u533a\u522b\uff01\uff01\uff01\n\n#### \u4e0d\u4f1a\u505a\u7684\u8bf7\u5f80\u4e0b\u770b\uff1a\n\n\u7531\u4e8e\u8fd9\u9898\u6ca1\u6709\u89c4\u5b9a\u8d77\u59cb\u8282\u70b9\u4e3a\u90a3\u4e2a\uff0c\u90a3\u4e48\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u53bb\u679a\u4e3e\uff0c\u7136\u800c\uff0c\u8fd9\u590d\u6742\u5ea6\u4e0d\u7528\u7b97\u5c31\u77e5\u9053\u7528 $SPFA$ \u80af\u5b9a $T$ \u5230\u98de\uff01\u8fd9\u65f6\uff0c\u6211\u4eec\u5c31\u8981\u5f15\u8fdb\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\u3002\n\n>\u8d85\u7ea7\u6e90\u70b9\u5c31\u662f\u5728\u539f\u56fe\u4e4b\u5916\u518d\u8bbe\u4e00\u4e2a\u70b9\uff0c\u5e76\u5c06\u8fd9\u70b9\u8fde\u5411\u539f\u56fe\u4e2d\u6240\u6709\u7684\u8282\u70b9\u3002\n>\n>\u7136\u540e\uff0c\u6211\u4eec\u4ece\u8d85\u7ea7\u6e90\u70b9\u5f00\u59cb\u505a $SPFA$ \uff0c\u5c31\u7b49\u540c\u4e0e\u679a\u4e3e\u539f\u56fe\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u3002\n>\n>\u5728\u4e0d\u61c2\u5c31\u770b\u4e00\u4e0b\u8fd9\u5f20\u56fe\uff1a\n>\n>![](https://cdn.luogu.com.cn/upload/pic/67019.png)\n>\n>![](https://cdn.luogu.com.cn/upload/pic/67022.png)\n\n\u4ee3\u7801\u5c31\u770b[\u8fd9\u91cc]( https://www.luogu.org/paste/7g9jq0xe)\u5427\u3010\u53ef\u4ee5\u5c1d\u8bd5\u81ea\u5df1\u5199\u4e00\u4e0b\u3011\uff01\n\n### \u6700\u540e\u53ef\u522b\u5fd8\u4e86\u70b9\u8d5e $qwq$...",
        "postTime": 1565178790,
        "uid": 73362,
        "name": "Believe_R_",
        "ccfLevel": 5,
        "title": "P1938 [USACO09NOV]\u627e\u5de5\u5c31\u4e1aJob Hunt \u9898\u89e3"
    },
    {
        "content": "\u5982\u9898\uff0c\u53ef\u4ee5\u770b\u6210\u6c42\u6700\u957f\u8def\u7684\u95ee\u9898\n\n\u6c42\u6700\u957f\u8def\u6709\u8bb8\u591a\u65b9\u6cd5\uff0c\u5927\u5bb6\u4e5f\u53ef\u4ee5\u5728\u6d1b\u8c37\u641c\u4e00\u4e0b\u6700\u957f\u8def\n\n\u6211\u8bf4\u4e00\u79cd\u9898\u89e3\u91cc\u6ca1\u6709\u7684\u65b9\u6cd5\uff0c\u5c06\u516c\u8def\u7684\u8fb9\u6743\u770b\u4e3ad\uff0c\u5c06\u98de\u673a\u7684\u8fb9\u6743\u770b\u4e3ad-t\uff0c\u7136\u540e**\u5c06\u8fb9\u6743\u53d6\u53cd\uff0c\u4e0d\u5c31\u53d8\u6210\u6c42\u6700\u77ed\u8def\u7684\u95ee\u9898\u4e86\u5417\uff01\uff01\uff01**\n\n\u8fd9\u65f6\u8981\u6ce8\u610f\u8fb9\u6743\u53ef\u80fd\u5b58\u5728\u8d1f\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u9009\u62e9spfa\u6216bellman-ford\uff0c\u6211\u9009bellman-ford\uff0c\u6bd5\u7adf\u6570\u636e\u91cf\u4e0d\u5927\u554a(~~\u624d\u4e0d\u662f\u6211\u61d2~~)\n\n\u4f46\u662f\u3002\u3002\u3002\u8fd9\u7adf\u7136\u4e0a\u4e86\u6700\u4f18\u89e3\u7684\u7b2c\u4e00\u9875\u3002\u3002\u3002\n\n\u4e0b\u9762\u8d34\u4e0a\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int MaxN=99999999;\nint d,p,c,f,s;\nint first[221],next[501],dis[221];\nstruct Node{\n\tint u,v,w;\n}mapp[501];\nint main()\n{\n\tint i,j,pd,a,minn,x;\n\tscanf(\"%d%d%d%d%d\",&d,&p,&c,&f,&s);\n\tfor(i=1;i<=p;i++)\n\t{\n\t\tscanf(\"%d%d\",&mapp[i].u,&mapp[i].v);\n\t\tmapp[i].w=-d;         //\u6ce8\u610f\u5b58\u8fb9\n\t}\n\tfor(i=p+1;i<=p+f;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&mapp[i].u,&mapp[i].v,&a);\n\t\tmapp[i].w=a-d;        //\u6ce8\u610f\u5b58\u8fb9\n\t}\n\tfor(i=1;i<=c;i++)\n\t\tdis[i]=MaxN;\n\tdis[s]=0;\n\tfor(i=1;i<c;i++)\n\t{\n\t\tpd=false;   //\u52a0\u4e0apd\u53ef\u4ee5\u4f18\u5316bellman-ford\uff0c\u51cf\u5c11\u65e0\u7528\u529f\n\t\tfor(j=1;j<=p+f;j++)\n\t\t\tif(dis[mapp[j].v]>dis[mapp[j].u]+mapp[j].w)\n\t\t\t{\n\t\t\t\tpd=true;\n\t\t\t\tdis[mapp[j].v]=dis[mapp[j].u]+mapp[j].w;\n\t\t\t}\n\t\tif(pd==false) break;\n\t}\n    //\u5224\u8d1f\u73af\n\tpd=false;\n\tfor(j=1;j<=p+f;j++)\n\t\t\tif(dis[mapp[j].v]>dis[mapp[j].u]+mapp[j].w)\n\t\t\t{\n\t\t\t\tpd=true;\n\t\t\t\tdis[mapp[j].v]=dis[mapp[j].u]+mapp[j].w;\n\t\t\t}\n\tif(pd==true) \n\t{\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tminn=MaxN;\n\tfor(i=1;i<=c;i++)\n\t\tif(dis[i]<minn)\n\t\t{\n\t\t\tminn=dis[i];\n\t\t\tx=i;\n\t\t}\n\tprintf(\"%d\\n\",(-1)*dis[x]+d);//\u6700\u7ec8\u7684\u7b54\u6848\u8fd8\u8981\u52a0\u4e0a\u8d77\u70b9\u7684d\n\treturn 0;\n}\n```",
        "postTime": 1519542190,
        "uid": 52088,
        "name": "TOM_\u95eb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1938 \u3010[USACO09NOV]\u627e\u5de5\u5c31\u4e1aJob Hunt\u3011"
    },
    {
        "content": "\t\n\t\t\u9898\u4e2d\u8981\u6c42\u89e3\u7684\u662f\u94b1\u7684\u6700\u5927\u503c\uff0c\n    \t\u6211\u4eec\u5c31\u5c06\u901a\u5411\u5176\u4ed6\u57ce\u5e02\u7684\u6b65\u884c\u9053\u8def\u7684\u6743\u503c\u8bbe\u7f6e\u4e3a\u9898\u76ee\u4e2d\u6240\u7ed9\u7684\n    \u94b1\u7684\u6570\u91cf \n    \n    \t\u98de\u884c\u8def\u7684\u6743\u503c\u5c31\u8bbe\u7f6e\u4e3a\u8d5a\u94b1\u7684\u6570\u91cf-\u98de\u673a\u7968\n    \tdis[i]\u5c31\u7528\u76f8\u52a0\uff0c\u800c\u4e0d\u662f\u60f3\u51cf\n    \t\u56e0\u4e3a\u80fd\u968f\u65f6\u9000\u4f11\uff0c\u5219\u5728dijkstra\u4e4b\u540e\u7528\u5faa\u73af\u904d\u5386\u6700\u5927\u503c\u8f93\u51fa \n    \u4ee5\u4e0b\u4e3a\u4ee3\u7801\n    \n   ```c\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nint cnt=0; \nint d,p,c,f,s;\nstruct node//\u6807\u51c6\u7ed3\u6784 \n{\n\tint to;\n\tint next;\n\tint w;\n};\nint head[1010];\nnode edge[1010];\nbool book[1010];\nint cntt[1010];//\u5f53cnt[i]\u7684\u6b21\u6570==n\u6b21\u65f6\uff0c\u8f93\u51fa-1 \nint dis[1010];//\u5230\u8fbedis\u4e2a\u57ce\u5e02\u6700\u591a\u53ef\u4ee5\u8d5a\u591a\u5c11\u94b1\nstruct cmp\n{\n    bool operator()(int a,int b)\n    {\n        return dis[a]<dis[b];//\u5982\u679c\u8fd4\u56detrue\u5c31\u662fa\u6392\u5728b\u540e\u9762\n    }\n};\nvoid add(int u,int v,int ww)\n{\n\tedge[++cnt].to=v;\n\tedge[cnt].w=ww;//dis\u4e3a\u8d5a\u7684\u94b1\u76f8\u52a0\uff0c\u6700\u540e\u8f93\u51fadis\u6700\u9ad8\u7684 \n\tedge[cnt].next=head[u];\n\thead[u]=cnt;\n}\n\npriority_queue<int,vector<int>,cmp>q;\nint main()\n{\n\tscanf(\"%d%d%d%d%d\",&d,&p,&c,&f,&s);\n\t//d\u4e3a\u94b1\uff0cp\u4e3a\u8def\uff0cc\u4e3a\u57ce\u5e02\uff0cf\u4e3afly\uff0cs\u4e3a\u6bcf\u4e2a\u57ce\u5e02\u53ef\u4ee5\u83b7\u5f97\u7684\u94b1 \n\tfor(int i=1;i<=p;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd(u,v,d);//\u56e0\u4e3a\u6743\u503c\u76f8\u52a0\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\u6743\u503c\n\t\t//\u4e3a\u53ef\u4ee5\u8d5a\u7684\u94b1 \n\t}\n\tfor(int i=1;i<=f;i++)\n\t{\n\t\tint u,v,w;\n\t\tscanf(\"%d %d %d\",&u,&v,&w);\n\t\tadd(u,v,d-w);//\u8fd9\u91cc\u7684\u6743\u503c\n\t\t//\u662f\u8d5a\u7684\u94b1\u51cf\u53bb\u673a\u7968\u94b1\n\t\t//\u56e0\u4e3adis[i]\u81f3\u5c11\u90fd\u662f\u5927\u4e8e0\u7684\n\t\t//\u6240\u4ee5\u5c0f\u4e8e0\uff0c\u4e5f\u5c31\u662f\u6ca1\u94b1\u7684\u65f6\u5019\u4e0d\u4f1a\u6539\u53d8\u503c \n\t}\n\tq.push(s);\n\tbook[s]=1;\n\tdis[s]=d;\n\tcntt[s]++;\n\twhile(q.empty()==0)\n\t{\n\t\tint u=q.top();\n\t\tq.pop();\n\t\tbook[u]=0;\n\t\tcntt[u]++;\n\t\t//\u51fa\u961fcnt\u7d2f\u8ba1\u8d85\u8fc7n-1\u8bf4\u660e\u6709\u8d1f\u73af \n\t\tif(cntt[u]>n)\n\t\t//\u5224\u65ad\u65e0\u9650\u8d5a\u94b1\u60c5\u51b5 \n\t\t{\n\t\t//\u4e3a\u65b9\u4fbf\u5199>n,\u5b9e\u9645\u4e0a\u662f\u6b21\u6570>n-1\u65f6\u5c31\u8f93\u51fa-1 \n\t\t\tprintf(\"-1\"); \n\t\t\treturn 0;\n\t\t}\n\t\tfor(int i=head[u];i>0;i=edge[i].next)\n\t\t{\n\t\t//\u6807\u51c6\u7684spfa \n\t\t\tif(dis[edge[i].to]<dis[u]+edge[i].w)\n\t\t\t{\n\t\t\t\tdis[edge[i].to]=dis[u]+edge[i].w;\n\t\t\t\tif(book[edge[i].to]==0)\n\t\t\t\t{\n\t\t\t\t\tq.push(edge[i].to);\n\t\t\t\t\tbook[edge[i].to]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint maxx=0;\n\tfor(int i=1;i<=c;i++)\n\t{\n\t\tif(dis[i]>maxx)\n\t\t{\n\t\t\tmaxx=dis[i];//\u56e0\u4e3a\u53ef\u4ee5\u968f\u65f6\u9000\u4f11\uff0c\u6240\u4ee5\u8981\u5728\n\t\t\t//\u6240\u6709\u57ce\u5e02\u91cc\u627e\u5230\u6700\u5927\u503c \n\t\t}\n\t}\n\tprintf(\"%d\\n\",maxx);\n\t//for(int i=1;i<=c;i++)printf(\"%d \",dis[i]);\u68c0\u67e5\u503c\u6709\u6ca1\u6709\u95ee\u9898 \n\treturn 0;\n}\n```",
        "postTime": 1538203242,
        "uid": 112850,
        "name": "GLZP",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1938 \u3010[USACO09NOV]\u627e\u5de5\u5c31\u4e1aJob Hunt\u3011"
    },
    {
        "content": "\u6b64\u9898\u5f88\u9ebb\u70e6\u7684\u4e00\u70b9\u5c31\u662f\u8fd9\u5f20\u56fe\u65e2\u6709\u70b9\u6743\u53c8\u6709\u8fb9\u6743\uff0c\u8fd9\u5c31\u5bfc\u81f4\u6211\u4eec\u4e0d\u597d\u7528\u5e38\u89c1\u7684\u56fe\u8bba\u7b97\u6cd5\u89e3\u51b3\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u4e00\u79cd\u601d\u8def\uff1a\n\n\u65e0\u8bba\u7ecf\u8fc7\u7684\u662f\u514d\u8d39\u7ebf\u8def\u8fd8\u662f\u4ed8\u8d39\u7ebf\u8def\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u62ff\u5230\u51fa\u8fb9\u6240\u8fde\u7684\u70b9\u7684\u70b9\u6743\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8d70\u4e00\u6761\u8fb9\uff0c\u4f1a\u83b7\u5f97\u70b9\u6743-\u8fb9\u6743\u7684\u4ef7\u503c\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e00\u6761\u8fb9\u6240\u8fde\u5f97\u70b9\u7684\u70b9\u6743\u52a0\u5230\u8fb9\u6743\u4e2d\u3002\n\n\u90a3\u4e48\u6240\u6c42\u5c31\u662f\u8fd9\u5f20\u56fe\u7684\u6700\u957f\u8def\u3002\n\n\u7531\u4e8e\u56fe\u4e2d\u4f1a\u6709\u8d1f\u8fb9\u6743\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7528SPFA\u3002\n\n\u5728\u8003\u8651\u9898\u76ee\u4e2d\u8bf4\u7684\u8f93\u51fa-1\u7684\u60c5\u51b5\u3002\n\n\u5982\u679c\u5728\u6211\u4eec\u7684\u56fe\u4e2d\u5b58\u5728\u6b63\u73af\uff0c\u5219\u53ef\u4ee5\u65e0\u9650\u7684\u8d70\u4e0b\u53bb\uff0c\u5373\u8f93\u51fa-1\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u5728SPFA\u7684\u8fc7\u7a0b\u4e2d\u5224\u65ad\u6bcf\u4e2a\u70b9\u5165\u961f\u7684\u6b21\u6570\u662f\u5426\u5927\u4e8en-1\u6b21\u5c31\u884c\u4e86\u3002\n\n\u7b54\u6848\u5c31\u662f\u539f\u70b9\u5230\u6bcf\u4e2a\u70b9\u4e2d\u8def\u5f84\u957f\u5ea6\u6700\u957f\u7684\u90a3\u4e2a\n\n(PS\uff1a~~SPFA\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(\u7384\u5b66)\u6240\u4ee5\u9700\u8981\u5361\u5e38~~)\n\n\u4e0b\u9762\u7ed9\u51faAC\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>//\u4e0d\u5199\u4e07\u80fd\u5934\uff0c\u51cf\u5c0f\u5e38\u6570\n#include<queue> \n//\u4e0d\u5199namespace\u51cf\u5c11\u5e38\u6570\n#define INF 0x7ffffff\nint d,m,n,k,s;\nstruct node{\n\tint v,next;\n\tint w;\n}edge[1005];\nint len,head[505];\nint dis[505][505];//\u90bb\u63a5\u77e9\u9635\nint dist[505];//\u50a8\u5b58\u6700\u957f\u8def\nbool vst[505];//\u6807\u8bb0\nint tot[505];//\u6bcf\u4e2a\u70b9\u7684\u5165\u961f\u6b21\u6570\nbool err;\nint ans;\ninline void make_map(int u,int v,int w)//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\n{\n\tlen++;\n\tedge[len].next=head[u];\n\tedge[len].v=v;\t\n\tedge[len].w=w;\n\thead[u]=len;\n}\ninline void SPFA()//SPFA\n{\n\tfor (register int i=1;i<=n;i++)\n\t    dist[i]=-INF;\n\tstd::queue <int> q;\n\tdist[s]=d;\n\tvst[s]=1;\n\ttot[s]=1;\n\tq.push(s);\n\twhile (!q.empty())\n\t\t  {\n          int x=q.front();\n\t\t  q.pop();\n\t\t  vst[x]=0;\n\t\t  for (register int i=head[x];i;i=edge[i].next)\n\t\t\t  {\n\t\t\t  int y=edge[i].v;\n\t\t\t  int z=edge[i].w;\n\t\t\t  if (dist[y]<dist[x]+z)\n\t\t\t\t {\n\t\t\t\t tot[y]++;\n\t\t\t\t if (tot[y]>=n)//\u5224\u65ad\u56fe\u4e2d\u6709\u6ca1\u6709\u6b63\u73af\n\t\t\t\t     {\n\t\t\t\t\t printf(\"-1\");\n\t\t\t\t\t err=1;\n\t\t\t\t\t return ;\n\t\t\t\t\t }\n\t\t\t\t dist[y]=dist[x]+z;\n\t\t\t\t if (!vst[y])\n\t\t\t\t\t {\n\t\t\t\t\t vst[y]=1;\n\t\t\t\t\t q.push(y);\n\t\t\t\t\t }\n  \t\t\t\t }\n\t\t\t  }\n          }\n}\nint main(){\n\tscanf(\"%d%d%d%d%d\",&d,&m,&n,&k,&s);\n\tfor (register int i=1;i<=m;i++)\n\t\t{\n\t\tint u,v;\n\t    scanf(\"%d%d\",&u,&v);\n\t    dis[u][v]=d;\n        make_map(u,v,d);\n\t\t}\n\tfor (register int i=1;i<=k;i++)\n\t\t{\n\t\tint u,v,w;\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tif (!dis[u][v])//\u56e0\u4e3a\u53ef\u80fd\u6709\u91cd\u8fb9\uff0c\u5982\u679c\u6709\u514d\u8d39\u8def\u7ebf\u5c31\u4e0d\u8981\u5efa\u4ed8\u8d39\u8def\u7ebf\u4e86\n        //\u7528\u90bb\u63a5\u77e9\u9635\u5224\u65ad\u91cd\u8fb9\u6bd4\u8f83\u65b9\u4fbf\uff0c\u6240\u4ee5\u4e5f\u5b58\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635\n \t\t   make_map(u,v,d-w);\n\t\t}\n\tSPFA();\n\tif (err)\n\t   return 0;\n\tfor (register int i=1;i<=n;i++)//\u8f93\u51fa\n\t\tans=std::max(ans,dist[i]);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1570937514,
        "uid": 125443,
        "name": "Dawn_Sdy",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1938 \u3010[USACO09NOV]\u627e\u5de5\u5c31\u4e1aJob Hunt\u3011"
    },
    {
        "content": "## \u8fd9\u4e2a\u9898\u7684\u5173\u952e\u5c31\u662f\u5316\u70b9\u6743\u4e3a\u8fb9\u6743\n\n\u8fd9\u4e2a\u9898\u6709\u70b9\u6743\u3002\u7531\u4e8e\u6211\u4eec\u5bf9\u5904\u7406\u542b\u6709\u70b9\u6743\uff08\u5728\u6bcf\u4e2a\u57ce\u5e02\u8d5a\u5230\u7684\u94b1\uff09\u548c\u8fb9\u6743\uff08\u98de\u673a\u7968\u94b1\uff09\u7684\u56fe\u6bd4\u8f83\u964c\u751f\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u601d\u8003\u80fd\u5426\u5316\u70b9\u6743\u4e3a\u8fb9\u6743\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u4e2a\u70b9\u70b9\u6743\u90fd\u76f8\u540c\uff0c\u800c\u4e14\u98de\u673a\u7968\u94b1\u53ef\u4ee5\u5148\u6b20\u7740\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u4ee5\u5728\u6bcf\u4e2a\u57ce\u5e02\u8d5a\u5230\u7684\u94b1\u4e3a\u8fb9\u6743\uff1b\u5982\u679c\u6709\u98de\u673a\u822a\u7ebf\uff0c\u5c31\u4ee5\u5728\u6bcf\u4e2a\u57ce\u5e02\u8d5a\u5230\u7684\u94b1\u51cf\u53bb\u98de\u673a\u7968\u94b1\u4e3a\u8fb9\u6743\uff0c\u5efa\u56fe\u3002\u7136\u540e\u6211\u4eec\u5c31\u628a\u5b83\u8f6c\u5316\u6210\u4e86\u4e00\u4e2a\u5728\u6709\u5411\u56fe\u4e2d\u627e\u6700\u957f\u8def\u7684\u9898\u3002\n\n\u4f46\u662f\u6211\u53ea\u5b66\u8fc7\u6700\u77ed\u8def\u600e\u4e48\u627e\uff0c\u6240\u4ee5\u6211\u4f7f\u7528\u4e86\u5927\u6839\u5806\u3001\u8d1f\u8fb9\u6743\u548cspfa\u7b97\u6cd5\u6765\u5b9e\u73b0\u610f\u4e49\u4e0a\u7684\u627e\u201c\u6700\u77ed\u8def\u201d\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<queue>\n#include<vector>\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nint n,m,f,t,s,cnt;\nstruct Edge\n{\n\tint nst,to,dis;\n}edge[1000];\nint head[250],dis[250],vis[250],tim[250],maxx;\n//tim\u7528\u4e8e\u8bb0\u5f55\u7ecf\u5386\u8fc7\u8be5\u70b9\u7684\u6b21\u6570\uff0c\u9632\u6b62\u51fa\u73b0\u8d1f\u73af\nvoid add(int a,int b,int c)\n{\n\tedge[++cnt].nst=head[a];\n\tedge[cnt].to=b;\n\tedge[cnt].dis=t-c;\n\thead[a]=cnt;\n}\nvoid spfa()\n{\n\tmaxx=0;\n\tpriority_queue< pair<int,int> > q;\n\tdis[s]=t;\n\tvis[s]=1; \n\ttim[s]++;\n\tq.push(make_pair(t,s));\n\twhile(q.size())\n\t{\n\t\tint u=q.top().second,v=1;\n\t\tq.pop();\n\t\tvis[u]=0;\n\t\ttim[u]++;\n\t\tif(tim[u]>n)\n\t\t{\n\t\t\tprintf(\"-1\");\n\t\t\treturn;\n\t\t}\n\t\tfor(int i=head[u];i;i=edge[i].nst)\n\t\t{\n\t\t\tv=edge[i].to;\n\t\t\tif(dis[u]+edge[i].dis>dis[v])\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+edge[i].dis;\n\t\t\t\tif(!vis[v])\n\t\t\t\t{\n\t\t\t\t\tq.push(make_pair(-dis[v],v));\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\tif(maxx<dis[i])maxx=dis[i];\n\tprintf(\"%d\",maxx);\n}\nint main()\n{\n\tscanf(\"%d%d%d%d%d\",&t,&m,&n,&f,&s);\n\tint a,b,c;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tadd(a,b,0);\n\t}\n\tfor(int i=1;i<=f;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tadd(a,b,c);\n\t}\n\tspfa();\n\treturn 0;\n}\n```",
        "postTime": 1560432792,
        "uid": 105123,
        "name": "Protons",
        "ccfLevel": 0,
        "title": "P1938 \u627e\u5de5\u5c31\u4e1a \u9898\u89e3"
    },
    {
        "content": "###### \u6709\u70b9\u723d \u66b4\u641c90\u5206 o2\u5c31A\u4e86\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\nconst int N=500;\nint d,m,n,mh,start,tot,ans;\nint head[N];\nbool vis[N];\ninline int read(){\n\tregister int res=0;\n\tregister char ch;\n\twhile(isspace(ch=getchar()));\n\tdo res=res*10+ch-'0';\n\twhile(isdigit(ch=getchar()));\n\treturn res;\n}\nstruct pp{\n\tint to,nxt,dis;\n}a[N];\ninline void add(int u,int v,int di){\n\ta[++tot].nxt=head[u];\n\thead[u]=tot;\n\ta[tot].dis=di;\n\ta[tot].to=v;\n}\ninline void dfs(int u,int sum,int num){\n\tif(num>n){//\u53ef\u8d5a\u65e0\u9650\u94b1 \n\tans=-1;//\u6b8b\u9177\u7f6e-1 \n\treturn;\n\t}\n\tif(sum<0)return;//\u8d54\u4e86 \u4e0d \u8ddf\u672c\u5230\u4e0d\u4e86\u8fd9\u4e2a\u70b9 \n\tsum+=d;//\u5de5\u8d44 \n\tif(ans!=-1)\n\tans=max(ans,sum);\n\tfor(int i=head[u];i;i=a[i].nxt){\n\t\tint v=a[i].to;\n\t\tif(!vis[v]){\t\t\t\n\t\tvis[v]=1;\n\t\tdfs(v,sum-a[i].dis,num+1);//\u51cf\u53bb\u98de\u673a\u7968\u6216\u514d\u8d39\u8f66\u7968 \n\t\tvis[v]=0;\n\t\t}\n\t}\n}\nint main()\n{\n\tint x,y,dd;\n\td=read();m=read();n=read();mh=read();start=read();\n\twhile(m--){\n\t\tx=read();\n\t\ty=read();\n\t\tadd(x,y,0);\n\t}\n\twhile(mh--){\n\t\tx=read();\n\t\ty=read();\n\t\tdd=read();\n\t\tadd(x,y,dd);\n\t}\n\tdfs(start,0,1);\n\tcout<<ans<<endl;\n\treturn 0;\n} \n```\n",
        "postTime": 1552880792,
        "uid": 71844,
        "name": "\u6768\u94e0\u8fdc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1938 \u3010[USACO09NOV]\u627e\u5de5\u5c31\u4e1aJob Hunt\u3011"
    },
    {
        "content": "# \u62c6\u70b9\uff01\uff01\uff01\n\u56e0\u4e3a\u672c\u9898\u6709\u70b9\u6743($d$)\uff0c\u6240\u4ee5\u628a\u7b2c$i$\u4e2a\u70b9\u62c6\u6210$i$\u548c$i+c$\u4e24\u4e2a\u70b9\uff0c\u8fde\u4e00\u6761\u8fb9$(i,i+c,d)$\uff08\u4ece$i$\u5230$i+c$\uff0c\u8d39\u7528\u4e3a$d$\uff0c\u4e0b\u540c\uff09\uff0c\u628a\u539f\u6765\u8fde\u5230$i$\u7684\u8fb9\u8fd8\u8fde\u5230$i$\uff0c\u4ece$i$\u51fa\u53d1\u7684\u70b9\u6539\u4e3a\u4ece$i+c$\u51fa\u53d1\uff0c\u7136\u540e\u5bf9\u8fd9$2c$\u4e2a\u8dd1Floyd\u6c42\u6700\u957f\u8def\u5373\u53ef\u3002\uff08\u8fd9\u91cc\u7684\u201c\u8d39\u7528\u201d\u6307\u6536\u5165\uff09\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define FOR(i,a,b) for(int i=(a);i<=(b);i++)\t//\u5b8f\u7b80\u5316\u5faa\u73af\ninline int read(){\t//\u5feb\u8bfb\n\tchar c;\n\twhile((c=getchar())<48||c>57);\n\tint ret=c-48;\n\twhile((c=getchar())>47&&c<58) ret=ret*10+c-48;\n\treturn ret;\n}\nint d,p,c,f,s,g[500][500];\nint main(){\n\tscanf(\"%d%d%d%d%d\",&d,&p,&c,&f,&s);\n\tint n=c*2;\t//\u62c6\u70b9\u540e\u70b9\u7684\u603b\u6570\n\tFOR(i,1,n) FOR(j,1,n) g[i][j]=-1e9;\t//\u8d1f\u65e0\u7a77\u5927\n\tFOR(i,1,c) g[i][i+c]=d;\t//\u81ea\u5df1\u8fde\u5230\u81ea\u5df1\uff0c\u5373\u70b9\u6743\n\tFOR(i,1,p) g[read()+c][read()]=0;\t//\u8def\u7684\u8d39\u7528\u4e3a0\n\tFOR(i,1,f){\n        int a=read(),b=read(),x=read();\n        if(-x>g[a+c][b]) g[a+c][b]=-x;\t//\u822a\u7ebf\u7684\u8d39\u7528\u4e3a\u8d1f\u6570\n\t}\n\tFOR(k,1,n) FOR(i,1,n) FOR(j,1,n)\t//Floyd\u6700\u957f\u8def\n        if(g[i][j]<g[i][k]+g[k][j]) g[i][j]=g[i][k]+g[k][j];\n    int ans=-1e9;\n    FOR(i,1,n) if(g[s][i]>ans) ans=g[s][i];\t//\u627e\u6700\u5927\u503c\n    printf(\"%d\",ans);\t//\u534e\u4e3d\u7684\u8f93\u51fa\n\treturn 0;\n}\n```",
        "postTime": 1534860204,
        "uid": 25279,
        "name": "\u5317\u6d77_Beihai",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1938 \u3010[USACO09NOV]\u627e\u5de5\u5c31\u4e1aJob Hunt\u3011"
    },
    {
        "content": "# \u8fd9\u5176\u5b9e\u662f\u4e00\u4e2a\u6c42\u6700\u957f\u8def\u5f84\u7684\u9898\n\n## \u601d\u7ef4\u662f\u5dee\u5206\u7ea6\u675f\n\n~~#### \u7136\u800c\u672c\u849f\u84bb\u7b2c\u4e00\u5929\u5b66\u8fd9\u4e2a\u4e1c\u897fWA\u4e86\u4e09\u904d~~\n\n~~#### \u5931\u53bb\u4fe1\u5fc3.jpg~~\n\n\u5982\u679ca->b\u4e0d\u7528\u5750\u98de\u673a\uff0c\u90a3\u5c31\u5f53\u8def\u5f84\u662fd\n\n\u5982\u679ca->b\u8981\u5750\u98de\u673a\uff0c\u90a3\u8def\u5f84\u5c31\u5f53\u4f5cd-\u82b1\u6389\u7684\u94b1\n\n\u7136\u540e\u6c42\u51fa\u7684\u6700\u957f\u8def\u5f84\u5c31\u662f\u8d5a\u94b1\u6700\u591a\u7684\n\nWell,talk is cheap,show me the code.\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint d,p,c,f,s;\nqueue<int> q;//\u542c\u8bf4\u6570\u7ec4\u5904\u7406\u4f1a\u5feb\u4e00\u70b9\uff0c\u7136\u800c\u4eca\u5929\u88ab\u5b66\u957f\u6309\u5934\u7528\u961f\u5217QAQ\nint dis[25000],used[25000],go[25000];\nint head[100000],nxt[100000],cnt,var[100000],cost[100000];//\u6570\u7ec4\u53ef\u80fd\u4e0d\u7528\u5f00\u8fd9\u4e48\u5927\nbool flag;//\u5224\u65ad\u6709\u6ca1\u6709\u5f62\u6210\u73af\u7684\nvoid add(int x,int y,int z){//\u94fe\u8868\u4e0d\u89e3\u91ca\n\tcnt++;\n\tvar[cnt]=y;\n\tcost[cnt]=z;\n\tnxt[cnt]=head[x];\n\thead[x]=cnt;\n}\nvoid spfa(){\n\tq.push(s);\n\tused[s]=true;\n\tdis[s]=d;//\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u53ef\u4ee5\u5728\u672c\u5730\u6323\u94b1\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tused[u]=true;\n\t\tfor(int i=head[u];i;i=nxt[i]){\n\t\t\tint v=var[i],cos=cost[i];\n\t\t\tif(dis[v]<dis[u]+cos){\n\t\t\t\tdis[v]=dis[u]+cos;\n\t\t\t\tgo[v]++;//\u5b66\u957f\u8bf4go[v]=go[u]+1\u53ef\u4ee5\u8282\u7701\u65f6\u95f4\uff0c\u4f46\u662f\u8bf4\u4e0d\u6e05\uff0c\u5c31\u4e0d\u7528\u5566;\n\t\t\t\tif(go[v]>c){//\u5224\u65ad\u6709\u6ca1\u6709\u5f62\u6210\u73af\n\t\t\t\t\tflag=true;\n\t\t\t\t\treturn;//\u5f62\u6210\u5c31\u9000\u51fa\n\t\t\t\t}\n\t\t\t\tif(!used[v]){\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tused[v]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tused[u]=false;\n\t}\n}\nint main(){\n\tscanf(\"%d%d%d%d%d\",&d,&p,&c,&f,&s);\n\tint a,b,k;\n\tfor(int i=1;i<=p;i++){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tadd(a,b,d);//a->b\u4e0d\u7528\u5750\u98de\u673a\uff0c\u5f53\u8def\u5f84\u662fd\n\t}\n\tmemset(dis,-0x3f,sizeof(dis)); //\u8d4b\u4e00\u4e2a\u6781\u5c0f\u503c\uff0c\u56e0\u4e3a\u6709\u7684\u8def\u5f84\u6743\u503c<0\n\tfor(int i=1;i<=f;i++){\n\t\tscanf(\"%d%d%d\",&a,&b,&k);\n\t\tadd(a,b,d-k);//a->b\u8981\u5750\u98de\u673a\uff0c\u8def\u5f84\u4e3ad-k\n\t}\n \tspfa();\n\tint maxx=-0x3f;//maxx\u8fd8\u662f\u6781\u5c0f\u503c\n\tif(flag)cout<<\"-1\"<<endl;\n\telse{\n\t\tfor(int i=1;i<=c;i++){\n\t\t\tif(maxx<dis[i])maxx=dis[i];\n\t\t}\n\t\tcout<<maxx<<endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1534235680,
        "uid": 106960,
        "name": "\u5b51\u601d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1938 \u3010[USACO09NOV]\u627e\u5de5\u5c31\u4e1aJob Hunt\u3011"
    },
    {
        "content": "#\u849f\u84bb\u7684\u5f17\u6d1b\u4f0a\u5fb7\n\n\u8fd9\u9898\u597d\u50cf\u5f88\u5c11\u6709\u7528\u5f17\u6d1b\u4f0a\u5fb7\u6765\u505a\u7684\uff1f\n\n\u4f46\u662f\u7684\u786e\u53ef\u4ee5\u3002\n\n\u5728\u9646\u5730\u4e0a\u7684\u8def\u6743\u503c\u8bbe\u4e3ad\n\n\u5728\u7a7a\u4e2d\u7684\u8def\u6743\u503c\u8bbe\u4e3ad-\u8d39\u7528\n\n\u7136\u540e\u7528floyed\u8dd1\u6700\u957f\u8def\n\n\u4f46\u662f\u8dd1\u5b8c\u5bf9\u6bcf\u4e2af[i][j]\u90fd\u8981\u52a0\u4e0ad\uff0c\u56e0\u4e3a\u6ca1\u6709\u8ba1\u7b97\u8d77\u70b9\u8d5a\u7684\u94b1\n\n\u4e4b\u540e\u505a\u4e24\u4e2a\u5224\u65ad\uff0c\u5982\u679c\u67d0\u4e2a\u73af\u91cc\u6709\u8d77\u70b9\n\n\u6216\u8005\u8d77\u70b9\u80fd\u5230\u8fbe\u7684\u67d0\u4e2a\u70b9\u5728\u73af\u91cc\u9762\n\n\u5c31\u8f93\u51fa-1\n\n\u5982\u679c\u8fd9\u4e24\u79cd\u60c5\u51b5\u90fd\u4e0d\u5b58\u5728\u5c31\u76f4\u63a5\u770b\u4ece\u8d77\u70b9\u51fa\u53d1\u4ece\u54ea\u4e2a\u70b9\u7ed3\u675f\u94b1\u6700\u591a\n\n\u8f93\u51fa\u5c31\u884c\u4e86\n\nPS\uff1a\u5224\u65ad\u67d0\u4e2a\u73af\u662f\u5426\u8d5a\u94b1\u53ef\u4ee5\u8fd9\u4e48\u8ba1\u7b97\uff1a\n\n\u56e0\u4e3af[i][j]=d+d-\u8d39\u7528i\u5230j\n\nf[j][i]=d+d-\u8d39\u7528j\u5230i\n\n\u6240\u4ee5\u7528f[i][j]+f[j][i]-2\\*d\u662f\u5426\u5927\u4e8e0\u5c31\u80fd\u5224\u65ad\u8fd9\u4e2a\u73af\u80fd\u4e0d\u80fd\u8d5a\u94b1\u4e86\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define inv inline void\n#define ini inline int\n#define rint register int \nusing namespace std;\nint d,p,c,n,s,f[301][301];\nint main()\n{\n    scanf(\"%d%d%d%d%d\",&d,&p,&c,&n,&s);\n    for (rint i=1;i<=c;i++)\n        for (rint j=1;j<=c;j++)\n            f[i][j]=-1000000000;\n    for (rint i=1;i<=p;i++)\n    {\n        int x,y;scanf(\"%d%d\",&x,&y);\n        f[x][y]=d;\n    }\n    for (rint i=1;i<=n;i++)\n    {\n        int x,y,z;scanf(\"%d%d%d\",&x,&y,&z);\n        f[x][y]=max(f[x][y],d-z);\n    }\n    for (rint i=1;i<=c;i++) f[i][i]=0;\n    for (rint k=1;k<=c;k++)\n        for (rint i=1;i<=c;i++)\n            for (rint j=1;j<=c;j++)\n                if (i!=j && j!=k && i!=k)\n                    f[i][j]=max(f[i][j],f[i][k]+f[k][j]);\n    for (rint i=1;i<=c;i++)\n        for (rint j=1;j<=c;j++)\n            f[i][j]+=d;\n    for (rint i=1;i<=c;i++)\n        if (f[s][i]+f[i][s]-2*d>0 && i!=s)\n        {            \n            cout<<-1;\n            return 0;\n        }\n    for (rint i=1;i<=c;i++)\n        for (rint j=1;j<=c;j++)\n            if (i!=j && i!=s && j!=s)\n                if (f[s][i]>-2000000 && f[i][j]+f[j][i]-2*d>0)\n//350\u6761\u822a\u7ebf\uff0c\u4e00\u6761\u4e0d\u8d85\u8fc750000\u5143\uff0c\u5c31\u7b97\u518d\u4e8f\u672c\u4e5f\u4e0d\u4f1a\u4e8f\u8fc71.75\u5343\u4e07\n                {\n                    cout<<-1;\n                    return 0;\n                }\n    int ans=0;\n    for (rint i=1;i<=c;i++)\n        ans=max(ans,f[s][i]);\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1509968546,
        "uid": 43470,
        "name": "xMinh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1938 \u3010[USACO09NOV]\u627e\u5de5\u5c31\u4e1aJob Hunt\u3011"
    },
    {
        "content": "\u4e00\u9053\u88f8\u7684\u6700\u201c\u77ed\u201d\u8def \u5176\u5b9e\u5c31\u662f\u627e\u4e00\u6761\u6700\u957f\u8def \u7a0d\u7a0d\u6539\u4e86\u4e00\u4e0b\u800c\u5df2\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cstdlib>\nusing namespace std;\nint d,p,c,f,s,x,y,z,k=0;\nstruct node{\n    int to,next,w;\n}e[5000];\nint head[5000],dist[500],vis[500],du[500];\nint maxn=-1;\nint queue[10000],qhead=0,qtail=0;\nvoid add(int u,int v,int w)\n{\n    e[++k].next=head[u];\n    e[k].to=v;\n    e[k].w=w;\n    head[u]=k;\n}\nvoid spfa(int x)\n{\n    memset(vis,false,sizeof(vis));\n    memset(dist,-0x7f7f7f,sizeof(dist));\n    memset(du,0,sizeof(du));\n    dist[x]=d,vis[x]=true;\n    queue[++qtail]=x;\n    while(qhead<qtail)\n    {\n        int p=queue[++qhead];\n        vis[p]=false;\n        for(int i=head[p];i;i=e[i].next)\n        {\n            if(dist[e[i].to]<dist[p]-e[i].w+d)\n            {\n                dist[e[i].to]=dist[p]-e[i].w+d;\n                du[e[i].to]++;\n                if(du[e[i].to]>c){\n                    printf(\"-1\");\n                    exit(0);\n                }\n                if(!vis[e[i].to])\n                {\n                    queue[++qtail]=e[i].to;\n                    vis[e[i].to]=true;\n                }\n            }\n        }\n    }\n    for(int i=1;i<=c;i++) maxn=max(maxn,dist[i]);\n    printf(\"%d\",maxn);\n}\nint main()\n{\n    scanf(\"%d%d%d%d%d\",&d,&p,&c,&f,&s);\n    for(int i=1;i<=p;i++)\n    {\n       scanf(\"%d%d\",&x,&y);\n       add(x,y,0);    \n    }    \n    for(int i=1;i<=f;i++)\n    {\n       scanf(\"%d%d%d\",&x,&y,&z);\n       add(x,y,z);\n    }\n    spfa(s);\n    return 0;    \n}\n```",
        "postTime": 1478130223,
        "uid": 22060,
        "name": "Memorize",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1938 \u3010[USACO09NOV]\u627e\u5de5\u5c31\u4e1aJob Hunt\u3011"
    },
    {
        "content": "\n- \u56e0\u4e3a\u6709\u8fb9\u6743\uff0c\u8fd8\u662f\u6c42\u6700\u503c\uff0c\u60f3\u5230\u6700 ~~\u77ed~~ \u957f\u8def\uff0c\u53ef\u662f\u70b9\u6743\u4e0d\u597d\u5904\u7406\u5230\u6700\u957f\u8def\u7b97\u6cd5\u4e2d\u3002\u6240\u4ee5\uff0c\u60f3\u5230\u628a\u70b9\u6743\u653e\u5230\u8fb9\u6743\u4e2d\uff0c\u5373$ G_{i}.w = D - T_{i}$\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u8dd1\u6700\u957f\u8def\u4e86\n- \u81f3\u4e8e\u5982\u4f55\u8ba1\u7b97\u6700\u957f\u8def\uff0c\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u6cd5\u3002\u6cd5\u4e00\uff0c\u662f\u5c06\u6700\u957f\u8def\u8f6c\u5316\u4e3a\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u63d2\u5165\u8fb9\u6743\u65f6\uff0c\u76f4\u63a5\u53d6\u53cd\u5373\u53ef\uff1b\u6cd5\u4e8c\uff0c\u662f\u76f4\u63a5\u6539spfa\u4e2d\u5224\u65ad\u7684\u90e8\u5206\uff08\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801SPFA\u91cc\u7684\u5224\u65ad\uff09\n- \u8f93\u51fa$-1$\u7684\u60c5\u51b5\u5c31\u662f\u5f53\u6709**\u6b63\u73af**\u3002\u80af\u5b9a\u4f7f\u7528SPFA\uff0c\u8bb0\u5f55\u4e00\u4e2acnt\u6570\u7ec4\u4fdd\u5b58\u6bcf\u4e2a\u8282\u70b9\u5165\u961f\u6b21\u6570\uff0c\u82e5$cnt_{i} > n$\uff0c\u8bf4\u660e\u6709**\u6b63\u73af**\u3002\n- \u4ee3\u7801\uff1a\uff08SPFA\u7248\uff09\n\n\n\n```cpp\n# include <iostream>\n# include <cstdio>\n# include <queue>\n\nusing namespace std ;\n\nstruct Edge{\t\n\tint to , next , w ;\n} g[1005] ;\n\nint d , p , c , f , s ;\n\nint fte[225] , gsz , cnt[225] ;\n\nvoid addedge( int x , int y , int z )\n{\n\tg[++ gsz] = ( Edge ) { y , fte[x] , z } ;\n\tfte[x] = gsz ;\n}\nint dis[225] ;\nbool already[225] ;\nqueue < int > q ;\n\nbool spfa( int s )\n{\n\tfor ( int i = 1 ; i <= c ; i++ )\n\t\tdis[c] = -1e9 , already[i] = false ;\n\tdis[s] = d ;\n\talready[s] = 1 ;\n\tq.push( s ) ;\n\twhile ( ! q.empty() )\n\t{\n\t\tint x = q.front() ;\n\t\tcnt[x] ++ ;\n\t\tif ( cnt[x] > c )\n\t\t\treturn false ;\n\t\talready[x] = 0 ;\n\t\tq.pop() ;\n\t\tfor ( int i = fte[x] ; i ; i = g[i].next )\n\t\t{\n\t\t\tint y = g[i].to ;\n\t\t\tif ( dis[x] + g[i].w <= dis[y] ) //\u6ce8\u610f\uff0c\u8fd9\u91cc\u8981\u6539\u6210\u5927\u4e8e\u624d\u6539\uff0c\u5c0f\u4e8e\u7b49\u4e8e\u4e0d\u6539\n\t\t\t\tcontinue ;\n\t\t\tdis[y] = dis[x] + g[i].w ;\n\t\t\tif ( already[y] )\n\t\t\t\tcontinue ;\n\t\t\talready[y] = 1 ;\n\t\t\tq.push( y ) ;\n\t\t}\n\t}\n\treturn true ;\n}\n\nint main()\n{\n\tscanf(\"%d%d%d%d%d\" , &d , &p , &c , &f , &s) ;\n\tfor ( int i = 1 ; i <= p ; i++ )\n\t{\n\t\tint x , y ;\n\t\tscanf(\"%d%d\" , &x , &y) ;\n\t\taddedge( x , y , d ) ;\n\t}\n\tfor ( int i = 1 ; i <= f ; i++ )\n\t{\n\t\tint x , y , w ;\n\t\tscanf(\"%d%d%d\" , &x , &y , &w) ;\n\t\taddedge( x , y , d - w ) ;\n\t}\n\tif ( ! spfa( s ) )\n\t{\n\t\tputs(\"-1\") ;\n\t\treturn 0 ;\n\t}\n\tint ans = -1e9 ;\n\tfor ( int i = 1 ; i <= c ; i++ )\n\t\tans = max( ans , dis[i] ) ;\n\tprintf(\"%d\\n\" , ans) ;\n\treturn 0 ;\n}\n```\n",
        "postTime": 1577710810,
        "uid": 219868,
        "name": "xsap",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1938 \u3010[USACO09NOV]\u627e\u5de5\u5c31\u4e1aJob Hunt\u3011"
    },
    {
        "content": "# \u7b80\u5355\u7684 spfa\n\u9996\u5148\u601d\u8def\uff1a\u6709\u70b9\u6743\u6709\u8fb9\u6743\u6709\u4e24\u79cd\u5904\u7406\u6280\u5de7\uff1a\n\n1\u3001\u628a\u57ce\u5e02\u8d5a\u7684\u94b1\u52a0\u5230\u8def\u5f84\u91cc\u3002\u5982\u679c\u8def\u5f84\u662f\u514d\u8d39\u7684\uff0c\u90a3\u4e48\u8fd9\u6761\u8def\u5f84\u7684\u6743\u503c\u4e3ad\u3002\u5426\u5219\u8fd9\u6761\u8def\u5f84\u7684\u6743\u503c\u4e3a\u8fd9\u6761 d - \u8def\u4e0a\u7684\u82b1\u8d39\u3002\n\n2\u3001\u628a\u4e00\u4e2a\u70b9\u5206\u88c2\u4e3a\u4e24\u4e2a\u70b9\uff0c\u4e4b\u95f4\u7684\u8fb9\u7684\u8fb9\u6743\u4e3a d \u3002\n\n\u4e4b\u540e\u5c31\u662f\u7b80\u5355\u7684 spfa \u6a21\u677f\u3002\u6ce8\u610f\u5224\u6b63\u73af\u53ea\u9700\u5224\u65ad\u961f\u5217\u7684\u5165\u961f\u6b21\u6570\u662f\u5426 < n \u5373\u53ef\u3002\u76f4\u63a5\u4e0a\u4ee3\u7801\u3002\n```cpp\n#include<iostream>\n#include<cstring>\n#include<queue>\n#include<vector>\nusing namespace std;\nstruct node{\n\tint to;\n\tint zhi;\n};//\u7ed3\u6784\u4f53to\u4ee3\u8868\u76ee\u6807\u57ce\u5e02\uff0czhi\u4e3a\u8def\u5f84\u82b1\u8d39\nint d,p,c,f,s;\nvector <node> v[250];\nint inq[250],comeq[250],bu[250];//comeq\u5165\u961f\u6b21\u6570\uff0cbu\u4e3a\u94b1\u6570\uff0cinq\u662f\u5426\u5728\u961f\u5217\u91cc\nint bfs(){//spfa\u6a21\u677f\n\tqueue<int>q;\n\tq.push(s);\n\tinq[s] = 1;\n\tcomeq[s]++;\n\twhile(!q.empty()){\n\t\tint f = q.front();\n\t\tif (comeq[f] >= c) return 0;//\u5982\u679c\u5165\u961f\u8d85\u8fc7n-1\u6b21\uff0c\u6709\u73af\n\t\tq.pop();\n\t\tinq[f] = 0;\n\t\tfor (int i = 0; i < v[f].size();i++){\n\t\t\tint vfit = v[f][i].to;\n\t\t\tint vfiz = v[f][i].zhi;\n\t\t\tif (bu[f] + vfiz > bu[vfit]){\n\t\t\t\tbu[vfit] = bu[f] + vfiz;\n\t\t\t\tif (!inq[vfit]){\n\t\t\t\t\tq.push(vfit);\n\t\t\t\t\tinq[vfit] = 1;\n\t\t\t\t\tcomeq[vfit]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn 1;\n}\nint main(){\n\tcin >> d >> p >> c >> f >> s;\n\tmemset(inq,0,sizeof inq);\n\tmemset(comeq,0,sizeof comeq);\n\tmemset(bu,0,sizeof bu);\n\tfor (int i = 0; i < p; i++){\n\t\tint x,y;\n\t\tcin >> x >> y;\n\t\tnode tmp;\n\t\ttmp.to = y;\n\t\ttmp.zhi = d;\n\t\tv[x].push_back(tmp);\n\t}\n\tfor (int i = 0; i < f; i ++){\n\t\tint x,y,z;\n\t\tcin >> x >> y >> z;\n\t\tnode tmp;\n\t\ttmp.to = y;\n\t\ttmp.zhi = d-z;\n\t\tv[x].push_back(tmp);\n\t}//\u4e00\u5806\u8f93\u5165\n\tif(!bfs()){//\u7279\u5224\uff0c\u5982\u679c\u6709\u73af\uff0c\u76f4\u63a5\u8f93\u51fa-1\n\t\tcout << -1;\n\t\treturn 0;\n\t}\n\tint ans = 0;\n\tfor (int i = 1; i <= c; i++){\n\t\tans = max(ans,bu[i]);\n\t}\n\tcout << ans+d << endl;//\u6700\u540e\u7b54\u6848\u8bb0\u5f97+d\n\treturn 0;\n}\n```\n",
        "postTime": 1563626752,
        "uid": 127682,
        "name": "lg_zhou",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1938 \u3010[USACO09NOV]\u627e\u5de5\u5c31\u4e1aJob Hunt\u3011"
    },
    {
        "content": "[*\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c*](https://www.cnblogs.com/Lemir3/p/11061539.html)\n\n[*P1938 [USACO09NOV]\u627e\u5de5\u5c31\u4e1aJob Hunt*](https://www.luogu.org/problemnew/show/P1938)\n\n[*P2648 \u8d5a\u94b1*](https://www.luogu.org/problemnew/show/P2648)\n\n~~\u53cc\u500d\u7ecf\u9a8c,\u53cc\u500d\u5de5\u4e1a\u4ea7\u503c~~\n\n\u53c8\u662f\u7c7b\u4f3c\u7684\u9898\u5462.\n\n\u9898\u4e2d\u6709\u4e24\u79cd\u8fb9,\u4e00\u79cd\u662f\u8fb9\u6743\u4e3a0\u7684,\u5373\u9898\u4e2d\u7684\u6b65\u884c\u901a\u9053,\u4e00\u79cd\u662f\u8fb9\u6743\u4e3a\u8d1f\u6570\u7684,\u5373\u9898\u4e2d\u7684\u98de\u884c\u822a\u7ebf.\n\n\u7136\u540e\u6bcf\u4e2a\u70b9\u4e0a\u6709\u4e00\u4e2a\u6743\u503c.\n\n\u6240\u4ee5\u8bf4\u5927\u4f53\u4e0a\u5c31\u662f\u7528SPFA\u8dd1\u4e00\u904d\u6700\u957f\u8def.\n\n\u4f46\u662f\u663e\u800c\u6613\u89c1,\u8fd9\u9053\u9898\u4e2d\u5b58\u5728\u73af,\u4e3a\u4e86\u9632\u6b62\u8fd9\u4e2a\u4e0d\u9650\u8d5a\u94b1\u65f6\u95f4\u7684\u5976\u725b\u6210\u4e3a\u8d44\u4ea7\u9636\u7ea7,\u6211\u4eec\u8981\u5236\u88c1\u5b83.\n\n\u800c\u4e14\u5982\u679c\u5b58\u5728\u73af\u7684\u8bdd\u5c31\u4e00\u5b9a\u662f\u6b63\u6743\u7684\u73af.\n\n\u7136\u540e\u63a8\u7406\u4e00\u4e0b\u5c31\u53ef\u4ee5\u53d1\u73b0,\u4e00\u4e2a\u6709n\u4e2a\u70b9\u7684\u56fe\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u70b9,\u6700\u591a\u88ab\u904d\u5386n-1\u6b21(\u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u4e00\u4e2a\u83ca\u82b1\u56fe),\u5982\u679c\u904d\u5386\u7684\u6b21\u6570\u5927\u4e8en,\u5c31\u8bf4\u660e\u5b58\u5728\u73af\u4e86.\n\n\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u70b9\u88ab\u904d\u5386\u7684\u6b21\u6570\u5c31\u53ef\u4ee5\u4e86.\n\n\u4e4b\u540e\u662f\u7b2c\u4e8c\u9053\u9898,\u53ef\u4ee5\u4ece\u4efb\u610f\u4e00\u4e2a\u70b9\u5f00\u59cb\u8d5a\u94b1.\n\n\u6211\u4e00\u5f00\u59cb\u60f3\u7684\u662f\u8dd1n\u904dSPFA,\u8fd8\u597d\u6570\u636e\u6c34\u6ca1TLE.\n\n\u540e\u6765\u60f3\u4e86\u4e00\u4e0b,\u53ef\u4ee5\u5f00\u4e00\u4e2a\u865a\u6784\u7684\u70b9\u6765\u8fde\u63a5\u6240\u6709\u7684\u70b9,\u7136\u540e\u4ece\u8fd9\u4e2a\u70b9\u5f00\u59cb\u904d\u5386.\n\n\u6211\u5c31\u6ca1\u6709\u53bb\u4ee3\u7801\u5b9e\u73b0\u4e86.\n\n\u4e0b\u9762\u662f\u7b2c\u4e00\u9898\u7684\u4ee3\u7801,\u7b2c\u4e8c\u9898\u7684\u7a0d\u5fae\u6539\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86.\n\n```cpp\n\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nqueue<int>q;\n\nstruct edge\n{\n    int to,next,val;\n}e[510];\n\nint d,p,c,f,s,size,ans=-2147483647,cnt=1;\nint head[230],dis[230],in[230];\nbool flag[230];\n\nvoid edge_add(int,int,int);\nvoid SPFA();\n\nint main()\n{\n    memset(head,-1,sizeof(head));\n    scanf(\"%d%d%d%d%d\",&d,&p,&c,&f,&s);\n    for(int i=1;i<=p;i++)\n    {\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        edge_add(a,b,0);\n    }\n    for(int i=1;i<=f;i++)\n    {\n        int a,b,v;\n        scanf(\"%d%d%d\",&a,&b,&v);\n        edge_add(a,b,-v);\n    }\n    SPFA();\n    for(int i=1;i<=c;i++)ans=ans<dis[i]?dis[i]:ans;\n    printf(\"%d\\n\",ans);\nreturn 0;\n}\n\nvoid edge_add(int from,int to,int val)\n{\n    e[++size].to=to;\n    e[size].val=val;\n    e[size].next=head[from];\n    head[from]=size;\n}\n\nvoid SPFA()\n{\n    memset(flag,false,sizeof(flag));\n    memset(dis,-0x3f,sizeof(dis));\n    dis[s]=d;\n    q.push(s);\n    flag[s]=true;\n    while(!q.empty())\n    {\n        int from=q.front();\n        q.pop();\n        flag[from]=false;\n        for(int i=head[from];i!=-1;i=e[i].next)\n        {\n            int to=e[i].to;\n            int val=e[i].val;\n            if(dis[to]<dis[from]+val+d)\n            {\n                in[to]++;\n                if(in[to]>c)\n                {\n                    printf(\"-1\\n\");\n                    exit(0);\n                }\n                dis[to]=dis[from]+val+d;\n                if(flag[to]==false)\n                {\n                    q.push(to);\n                    flag[to]=true;\n                }\n            }\n        }\n    }\n}\n\n```",
        "postTime": 1561038171,
        "uid": 54986,
        "name": "lemir3",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1938 \u3010[USACO09NOV]\u627e\u5de5\u5c31\u4e1aJob Hunt\u3011"
    },
    {
        "content": "30min\u5207\u6389\n\n\u8fd9\u9898\u6ca1\u6709\u60f3\u8c61\u4e2d\u90a3\u4e48\u6c34\uff0c\u5f53\u4e00\u9053\u7ec3\u624b\u9898\u8fd8\u662f\u53ef\u4ee5\u7684\n\n\u8fd9\u9898\u6700\u4e3b\u8981\u7684\u601d\u8def\u5c31\u662f\u5316\u70b9\u6743\u4e3a\u8fb9\u6743\n\n\u56e0\u6b64\u8981\u6ce8\u610f\u521d\u59cb\u5316\u95ee\u9898\n\n\u7136\u540e\u5c31\u662f\u88f8\u7684\u6700\u957f\u8def+\u5224\u65ad\u6b63\u6743\u73af\uff08\u5982\u679c\u6709\u6b63\u6743\u73af\uff0c\u5c31\u53ef\u4ee5\u53cd\u590d\u6a2a\u8df3\u4e86\uff09\n\n\u4ee3\u7801\u601d\u8def\u633a\u6e05\u695a\u7684\uff0c\u4e5f\u6ca1\u5565\u7ec6\u8282\uff0c\u968f\u4fbf\u770b\u770b\u5427\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nint const maxn=240,maxm=510;\nstruct E\n{\n\tint to,next,w;\n\tE(int to=0,int next=0,int w=0):\n\t\tto(to),next(next),w(w){}\n}e[maxm<<1];\nint head[maxn],cost[maxn],cnt,maxx,sum[maxn],notle;\nint n,m1,m2,val,s;\nvoid add(int u,int v,int w)\n{\n\te[++cnt]=(E){v,head[u],w};\n\thead[u]=cnt;\n}\nvoid readin()\n{\n\tscanf(\"%d%d%d%d%d\",&val,&m1,&n,&m2,&s);\n\tfor(int x,y,i=1;i<=m1;i++)\n\t\tscanf(\"%d%d\",&x,&y),add(x,y,val);\n\tfor(int x,y,z,i=1;i<=m2;i++)\n\t\tscanf(\"%d%d%d\",&x,&y,&z),add(x,y,val-z);\n}\nint spfa()\n{\n\tstd::queue<int>q;\n\tq.push(s);\n\tcost[s]=val;\n\tmaxx=val;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[u];i!=-1;i=e[i].next)\n\t\t{\n\t\t\tint v=e[i].to,w=e[i].w;\n\t\t\tif(cost[v]<cost[u]+w)\n\t\t\t{\n\t\t\t\tif(++sum[v]>n)\n\t\t\t\t\treturn true;\n\t\t\t\tcost[v]=cost[u]+w,maxx=std::max(maxx,cost[v]),q.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint main()\n{\n\tmemset(head,-1,sizeof(head));\n\tmemset(cost,-0x1f,sizeof(head));\n\treadin();\n\tif(spfa())\n\t\tprintf(\"-1\");\n\telse\n\t\tprintf(\"%d\",maxx);\n\treturn 0;\n}\n```",
        "postTime": 1537581838,
        "uid": 55868,
        "name": "Panthera_AFO",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1938 \u3010[USACO09NOV]\u627e\u5de5\u5c31\u4e1aJob Hunt\u3011"
    },
    {
        "content": "\u4e00\u904ddfsO(n)\u89e3\u51b3\uff0cvis\u4e3a\u8bbf\u95ee\u6807\u8bb0\uff0cvisn\u4e3a\u5f53\u524d\u94fe\u7684\u8bbf\u95ee\u6807\u8bb0\uff0clast\u4e3a\u4ece\u8d77\u70b9\u8d70\u5230\u5f53\u524d\u8282\u70b9\u7684\u8d5a\u53d6\u8d39\u7528\uff0cnow\u4e3a\u4ece\u5f53\u524d\u8282\u70b9\u5f80\u4e0b\u8d70\u5f97\u5230\u7684\u6700\u5927\u8d5a\u53d6\u8d39\u7528\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#define mysister\nusing namespace std;\nconst int maxn=221;\nstruct tu\n{\n    int v,w;\n    tu(int a,int b):v(a),w(b){}\n};\nint d,p,c,f,s,vis[maxn],visn[maxn],now[maxn],a,b,w,last[maxn];\nvector<tu>g[maxn];\nvoid dfs(int u)\n{\n    for(int i=0;i<g[u].size();i++)\n    {\n      if(!vis[g[u][i].v])\n      {\n        visn[g[u][i].v]=vis[g[u][i].v]=1;\n        last[g[u][i].v]=g[u][i].w+last[u];\n        dfs(g[u][i].v);\n        last[g[u][i].v]=0;\n        visn[g[u][i].v]=0;\n        now[u]=max(now[u],now[g[u][i].v]+g[u][i].w);\n      }\n      else if(!visn[g[u][i].v])\n      {\n          now[u]=max(now[u],now[g[u][i].v]+g[u][i].w);\n      }\n      else if(u!=g[u][i].v&&last[u]-last[g[u][i].v]+g[u][i].w>0)//\u6709\u5927\u4e8e\u96f6\u7684\u73af\u5c31\u8f93\u51fa-1\n      {\n          printf(\"-1\");\n          exit(0);\n      }\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d%d%d\",&d,&p,&c,&f,&s);\n    for(int i=0;i<p;i++)\n    {\n      scanf(\"%d%d\",&a,&b);\n      g[a].push_back(tu(b,d));\n    }\n    for(int i=0;i<f;i++)\n    {\n      scanf(\"%d%d%d\",&a,&b,&w);\n      g[a].push_back(tu(b,d-w));\n    }\n    visn[s]=vis[s]=1;\n    dfs(s);\n    printf(\"%d\",now[s]+d);\n    return 0;\n}\n```",
        "postTime": 1505975782,
        "uid": 43178,
        "name": "\u7693\u82b7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1938 \u3010[USACO09NOV]\u627e\u5de5\u5c31\u4e1aJob Hunt\u3011"
    },
    {
        "content": "\n\n     \n     \n             \n        \n     \n             \n     \n     \n```cpp\n#include \"bits/stdc++.h\"\nusing namespace std;\nint conn[221][221];\nvector<int> v[221];\nint dis[221]; \nint main()\n{\n    int D,P,C,F,S;\n     cin>>D>>P>>C>>F>>S;\n     for(int i=0;i<P;++i)\n     {\n         int a,b;\n         cin>>a>>b;\n         conn[a][b]=D;\n         v[a].push_back(b);\n     }\n     for(int i=0;i<F;++i)\n     {\n         int a,b,t;\n         cin>>a>>b>>t;\n         if(conn[a][b]==0)//\u5df2\u7ecf\u6709\u8def\u4e86\uff0c\u80af\u5b9a\u4e0d\u5750\u98de\u673a \n        {\n             conn[a][b]=D-t;\n             v[a].push_back(b);\n        }\n     }\n     if(false)//\u672c\u6765\u8fd9\u4e2a\u6761\u4ef6\u662f\u7528\u6765\u68c0\u6d4b\u662f\u5426\u5305\u542b\u6743\u503c\u548c\u4e3a\u6b63\u7684\u73af\u7684\uff0c\u5148\u5199\u4e2afalse\u770b\u80fd\u8fc7\u51e0\u4e2acase..\u3002\u7ed3\u679c\u3002\u3002AC\u4e86\u3002\u3002\u6570\u636e\u592a\u5f31\u4e86\u3002\u3002 \n     {\n         cout<<-1<<endl;\n         return 0;\n     }\n     else\n     {\n         dis[S]=D;\n         queue<int> q;\n         q.push(S);\n         while(!q.empty())\n         {\n             int cur=q.front();\n             q.pop();\n//             cout<<\"cur=\"<<cur<<endl;\n            for(int i=0;i<v[cur].size();++i)\n            {\n                int to=v[cur][i];\n                if(dis[cur]+conn[cur][to]>dis[to])\n                {\n                    dis[to]=dis[cur]+conn[cur][to];\n                    q.push(to);\n                }\n             }    \n        }\n     }\n     int mx=0;\n     for(int i=1;i<=C;++i)\n     {\n         if(dis[i]>mx)\n         mx=dis[i];\n     }\n     cout<<mx<<endl;\n     return 0;\n}\n```",
        "postTime": 1472721536,
        "uid": 21038,
        "name": "pjl_zju",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1938 \u3010[USACO09NOV]\u627e\u5de5\u5c31\u4e1aJob Hunt\u3011"
    },
    {
        "content": "\u5148\u4e3a\u5927\u5bb6\u732e\u4e0a\u7ffb\u8bd1\u00b7\u00b7\u00b7\n\n\u6691\u5047\u7ed3\u675f\u4e86\uff0c\u6bd5\u4e1a\u4e86\u3002\u5976\u725b\u4eec\u6b63\u5728\u627e\u5de5\u4f5c\u3002\u519c\u573a\u4e3b\u7ea6\u7ff0\u77e5\u9053\u540e\uff0c\u9f13\u52b1\u5976\u725b\u4eec\u56db\u5904\u78b0\u78b0\u8fd0\u6c14\u3002\u800c\u4e14\u4ed6\u8fd8\u52a0\u4e86\u4e00\u6761\u8981\u6c42\uff1a\u4e00\u5934\u725b\u5728\u4e00\u4e2a\u57ce\u5e02\u6700\u591a\u53ea\u80fd\u8d5aD\uff081\u2264D\u22641000\uff09\u7f8e\u5143\uff0c\u7136\u540e\u5b83\u5fc5\u987b\u5230\u53e6\u4e00\u5ea7\u57ce\u5e02\u5de5\u4f5c\u3002\u5f53\u7136\uff0c\u5b83\u53ef\u4ee5\u5728\u522b\u5904\u5de5\u4f5c\u4e00\u9635\u5b50\u540e\u53c8\u56de\u5230\u539f\u6765\u7684\u57ce\u5e02\u518d\u6700\u591a\u8d5aD\u7f8e\u5143\u3002\u800c\u4e14\u8fd9\u6837\u7684\u5f80\u8fd4\u6b21\u6570\u6ca1\u6709\u9650\u5236\u3002\n\n\u57ce\u5e02\u95f4\u6709P\uff081\u2264P\u2264150\uff09\u6761\u5355\u5411\u8def\u5f84\u8fde\u63a5\uff0c\u5171\u6709C\uff082\u2264C\u2264220\uff09\u5ea7\u57ce\u5e02\uff0c\u7f16\u53f7\u4ece1\u5230C\u3002\u5976\u725b\u8d1d\u831c\u5f53\u524d\u5904\u5728\u57ce\u5e02S\uff081\u2264S\u2264C\uff09\u3002\u8def\u5f84i\u4ece\u57ce\u5e02A\\_i\u5230\u57ce\u5e02B\\_i\uff081\u2264A\\_i\u2264C\uff0c1\u2264B\\_i\u2264C\uff09\uff0c\u5728\u8def\u5f84\u4e0a\u884c\u8d70\u4e0d\u7528\u4efb\u4f55\u82b1\u8d39\u3002\n\n\u4e3a\u4e86\u5e2e\u52a9\u8d1d\u831c\uff0c\u7ea6\u7ff0\u8ba9\u5b83\u4f7f\u7528\u4ed6\u7684\u79c1\u4eba\u98de\u673a\u670d\u52a1\u3002\u8fd9\u9879\u670d\u52a1\u6709F\u6761\uff081\u2264F\u2264350\uff09\u5355\u5411\u822a\u7ebf\uff0c\u6bcf\u6761\u822a\u7ebf\u662f\u4ece\u57ce\u5e02J\\_i\u98de\u5230\u53e6\u4e00\u5ea7\u57ce\u5e02K\\_i\uff081\u2264J\\_i\u2264C\uff0c1\u2264K\\_i\u2264C\uff09\uff0c\u8d39\u7528\u662fT\\_i\uff081\u2264T\\_i\u226450000\uff09\u7f8e\u5143\u3002\u5982\u679c\u8d1d\u831c\u624b\u4e2d\u6ca1\u6709\u73b0\u94b1\uff0c\u53ef\u4ee5\u7528\u4ee5\u540e\u8d5a\u7684\u94b1\u6765\u4ed8\u673a\u7968\u94b1\u3002\n\n\u8d1d\u831c\u53ef\u4ee5\u9009\u62e9\u5728\u4efb\u4f55\u65f6\u5019\uff0c\u5728\u4efb\u4f55\u57ce\u5e02\u9000\u4f11\u3002\u5982\u679c\u5728\u5de5\u4f5c\u65f6\u95f4\u4e0a\u4e0d\u505a\u9650\u5236\uff0c\u8d1d\u831c\u603b\u5171\u53ef\u4ee5\u8d5a\u591a\u5c11\u94b1\u5462\uff1f\u5982\u679c\u8d5a\u7684\u94b1\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u9650\u5236\uff0c\u5c31\u8f93\u51fa-1\u3002\n\n\u3010\u8f93\u5165\u3011\n\n\u7b2c\u4e00\u884c\uff1a5\u4e2a\u7528\u7a7a\u683c\u5206\u5f00\u7684\u6574\u6570D\uff0cP\uff0cC\uff0cF\uff0cS\u3002\n\n\u7b2c2\u5230\u7b2cP+1\u884c\uff1a\u7b2ci+1\u884c\u5305\u542b2\u4e2a\u7528\u7a7a\u683c\u5206\u5f00\u7684\u6574\u6570\uff0c\u8868\u793a\u4e00\u6761\u4ece\u57ce\u5e02A\\_i\u5230\u57ce\u5e02B\\_i\u7684\u5355\u5411\u8def\u5f84\u3002\n\n\u63a5\u4e0b\u6765F\u884c\uff0c\u6bcf\u884c3\u4e2a\u7528\u7a7a\u683c\u5206\u5f00\u7684\u6574\u6570\uff0c\u8868\u793a\u4e00\u6761\u4ece\u57ce\u5e02J\\_i\u5230\u57ce\u5e02K\\_i\u7684\u5355\u5411\u822a\u7ebf\uff0c\u8d39\u7528\u662fT\\_i\u3002\n\n\u3010\u8f93\u51fa\u3011\n\n\u4e00\u4e2a\u6574\u6570\uff0c\u5728\u4e0a\u8ff0\u89c4\u5219\u4e0b\u6700\u591a\u53ef\u4ee5\u8d5a\u5230\u7684\u94b1\u6570\u3002\n\n\n\n\u597d\uff0c\u7136\u540e\u5c31\u662f\u601d\u8def\u4e86\n\n\u6211\u7684\u60f3\u6cd5\u662fBellman\\_ford\uff08\u677e\u5f1bing\uff09\n\n\u5173\u952e\u4ee3\u78011\n\n```cpp\ndist[S]=-D;\n    for(i=1;i<C;i++)\n    {\n        flag=true;\n        for(j=1;j<=C;j++)\n            for(k=1;k<=G[j].sum;k++)\n                if(dist[G[j].E[k].v]>dist[j]+G[j].E[k].w)\n                {\n                    dist[G[j].E[k].v]=dist[j]+G[j].E[k].w;\n                    flag=false;\n                }\n        if(flag)\n            break;\n    }\n    flag=true;\n    for(j=1;j<=C;j++)\n        for(k=1;k<=G[j].sum;k++)\n            if(dist[G[j].E[k].v]>dist[j]+G[j].E[k].w)\n            {\n                flag=false;\n                break;\n            }\n    if (flag==false)\n    {\n        cout<<-1;\n        return;\n    }\n    for(i=1;i<=C;i++)\n        s=min(s,dist[i]);\n    cout<<-s;\n```\nbellman\\_ford\u8fc7\u7a0b\u8bb0\u5f97dist\u8981memset\u6210\u65e0\u7a77\u5927(0x7f\u5373\u53ef)\n\n\u5173\u952e\u4ee3\u78012(\u8bfb\u5165)\n\n```cpp\nfor(i=1;i<=P;i++)\n    {\n        cin>>a>>b;\n        G[a].E[++G[a].sum].v=b;\n        G[a].E[G[a].sum].w=-D;\n    }\n    for(i=1;i<=F;i++)\n    {\n        cin>>a>>b>>w;\n        G[a].sum++;\n        G[a].E[G[a].sum].v=b;\n        G[a].E[G[a].sum].w=-D+w;\n    }\n```\n\u60f3\u5fc5\u5927\u5bb6\u90fd\u61c2\u4e86\u5427\uff0c\u795d\u5927\u5bb6AC\uff01\n",
        "postTime": 1430752638,
        "uid": 4151,
        "name": "fanhaotian",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1938 \u3010[USACO09NOV]\u627e\u5de5\u5c31\u4e1aJob Hunt\u3011"
    }
]