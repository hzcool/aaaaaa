[
    {
        "content": "### \u4e00\u4e36\u524d\u8a00\n\n\u8fd9\u9053\u9898\u53ef\u80fd\u662f\u672c\u849f\u84bb\u505a\u8fc7\u7684\u6700\u5de7\u7684\u6570\u636e\u7ed3\u6784\u9898\uff0c\u6ca1\u6709\u4e4b\u4e00qaq\u3002\n\n### \u4e8c\u4e36\u601d\u8def\n\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u8003\u8651\u8fd9\u6837\u4e00\u79cd\u505a\u6cd5\u3002\u9996\u5148\u5bf9\u4e8e$(l_1,r_1,l_2,r_2,v)$\u7684\u4fee\u6539\u64cd\u4f5c\uff0c\u53ef\u4ee5\u89c6\u4f5c\u6211\u4eec\u5728$l_1$\u884c\u65f6\u5bf9$l_2$\u5230$r_2$\u8fd9\u4e2a\u533a\u95f4$+v$\uff0c\u518d\u5728$r_1+1$\u884c\u65f6\u5bf9$l_2$\u5230$r_2$\u8fd9\u4e2a\u533a\u95f4$-v$\u3002\uff08\u8fd9\u6837\u6211\u4eec\u628a\u4e00\u4e2a\u4fee\u6539\u64cd\u4f5c\u5206\u89e3\u6210\u4e86\u4e24\u4e2a\u4fee\u6539\u64cd\u4f5c\uff09\n\n\u6211\u4eec\u8003\u8651\u4ece\u5c0f\u5230\u5927\u679a\u4e3e$L$\uff0c\u5e76\u5904\u7406\u6240\u6709$l_1=L$\u7684\u8be2\u95ee\u64cd\u4f5c\u3002\u7136\u540e\u6211\u4eec\u5148\u628a\u6240\u6709\u4fee\u6539\u64cd\u4f5c\u8fdb\u884c\u5206\u89e3\uff0c\u5e76\u4ece\u5c0f\u5230\u5927\u679a\u4e3e$R$\uff08\u679a\u4e3e\u7684\u65f6\u5019\u8981\u628a\u4fee\u6539\u64cd\u4f5c\u52a0\u8fdb\u53bb\uff09\u3002\u6211\u4eec\u53d6\u51fa\u6240\u6709$L=l_1,R=r_1$\u7684\u8be2\u95ee\u64cd\u4f5c\uff0c\u5e76\u5bf9$l_2$\u5230$r_2$\u8fd9\u4e2a\u533a\u95f4\u8fdb\u884c\u8be2\u95ee\u3002\n\n\u6211\u4eec\u8be2\u95ee\u7684\u662f\u4ec0\u4e48\u5462\uff1f\u53ef\u4ee5\u53d1\u73b0\uff0c\u5176\u5b9e\u6211\u4eec\u8be2\u95ee\u7684\u5176\u5b9e\u662f\u5386\u53f2\u6700\u5927\u503c\uff0c\u800c\u4fee\u6539\u64cd\u4f5c\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u52a0\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u7ef4\u62a4\u4e00\u4e2a\u53ef\u4ee5\u652f\u6301\u533a\u95f4\u5386\u53f2\u6700\u5927\u503c\u548c\u533a\u95f4\u52a0\u7684\u7ebf\u6bb5\u6811\u5373\u53ef\uff08CPU\u76d1\u63a7\u7b80\u5316\u7248\uff09\u3002\n\n~~\u7531\u4e8e\u8fd9\u4e2a\u4e1c\u897f\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u4e0d\u7ec6\u8bb2\u600e\u4e48\u7ef4\u62a4\u4e86~~\n\n\u6ce8\u610f\u4e00\u4e2a\u5c0f\u7ec6\u8282\uff0c\u82e5\u4e00\u4e2a\u65f6\u95f4\u70b9\u6709\u591a\u6b21\u4fee\u6539\uff0c\u8981\u5148\u52a0\u8d1f\u6570\u518d\u52a0\u6b63\u6570\uff0c\u4e0d\u7136\u5386\u53f2\u6700\u5927\u503c\u53ef\u80fd\u53ea\u52a0\u5165\u4e00\u4e2a\u65f6\u95f4\u70b9\u7684\u90e8\u5206\u64cd\u4f5c\uff0c\u8fd9\u6837\u662f\u4e0d\u5408\u6cd5\u7684\u3002\n\n\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O((n^2+q)logn)$\u7684\uff0c~~(\u597d\u50cf\u65f6\u95f4\u590d\u6742\u5ea6\u66f4\u9ad8\u4e86)~~\uff0c\u4f46\u53ef\u559c\u53ef\u8d3a\u7684\u662f\u6211\u4eec\u628a\u8be2\u95ee\u4ece\u4e24\u4e2a$log$\u53d8\u6210\u4e86\u4e00\u4e2a$log$\u3002\n\n\u8003\u8651\u5728\u8fd9\u4e2a\u7b97\u6cd5\u7684\u57fa\u7840\u4e0a\u7ee7\u7eed\u8fdb\u884c\u4f18\u5316\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\uff0c\u6211\u4eec\u8981\u5c06$1$\u5230$l_1-1$\u6240\u6709\u64cd\u4f5c\u63d2\u5165\uff08\u4e0d\u7ef4\u62a4\u5386\u53f2\u6700\u5927\u503c\uff09\uff0c\u5e76\u518d\u5c06$l_1$\u5230$r_1$\u7684\u64cd\u4f5c\u63d2\u5165\uff08\u5728\u63d2\u5165\u65f6\u8981\u7ef4\u62a4\u5386\u53f2\u6700\u5927\u503c\uff09\uff0c\u5e76\u533a\u95f4\u8be2\u95ee\u5386\u53f2\u6700\u5927\u503c\u3002\n\n\u8003\u8651**\u7ebf\u6bb5\u6811\u5206\u6cbb**\uff0c\u5047\u8bbe\u5f53\u524d\u7ebf\u6bb5\u6811\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\u4e3a$l,r$\uff0c$mid=(l+r)/2$\u3002\n\n\u5bf9\u4e8e\u6240\u6709$l<=l_1<=r_1<=r$\u7684\u8be2\u95ee\uff0c\u82e5$r_1<=mid$\u6216\u8005$l_1>mid$\u5219\u4ea4\u7ed9\u513f\u5b50\u5904\u7406\uff0c\u5426\u5219\u5c31\u5728\u5f53\u524d\u70b9\u5904\u7406\uff08\u4e0d\u80fd\u628a\u8be2\u95ee\u62c6\u6210$log$\u4e2a\uff0c\u4e0d\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f\u8981\u8d77\u98de\uff09\u3002\n\n\u6211\u4eec\u5047\u8bbe$1$\u5230$l-1$\u7684\u64cd\u4f5c\u5df2\u7ecf\u52a0\u5165\u5230\u7ebf\u6bb5\u6811\u4e2d\uff08\u6ce8\u610f\u533a\u5206\u7ef4\u62a4\u5386\u53f2\u6700\u5927\u503c\u7684\u7ebf\u6bb5\u6811\u548c\u7ebf\u6bb5\u6811\u5206\u6cbb\u7684\u7ebf\u6bb5\u6811\uff09\u3002\n\n\u8003\u8651\u5148\u5904\u7406\u53f3\u8fb9\u7684\u8d21\u732e\uff0c\u6240\u4ee5\u5148\u628a$l$\u5230$mid$\u7684\u64cd\u4f5c\u63d2\u5165\uff08\u4e0d\u6c42\u5386\u53f2\u6700\u5927\u503c\uff09\uff0c\u7136\u540e\u628a\u6240\u6709\u5f53\u524d\u70b9\u7684\u8be2\u95ee\u6309$r$\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5e76\u4f9d\u6b21\u63d2\u5165\u64cd\u4f5c\uff08\u6b64\u65f6\u5c31\u8981\u6c42\u5386\u53f2\u6700\u5927\u503c\u4e86\uff09\u548c\u8fdb\u884c\u8be2\u95ee\uff0c\u7136\u540e\u628a$mid+1$\u5230$r$\u7684\u64cd\u4f5c\u56de\u9000\uff0c\u5e76\u9012\u5f52\u53f3\u5b50\u6811\uff08\u4f9d\u7136\u6ee1\u8db3$1$\u5230$l-1$\u7684\u64cd\u4f5c\u5df2\u88ab\u52a0\u5165\uff09\u3002\n\n\n\u7136\u540e\u8003\u8651\u5904\u7406\u5de6\u8fb9\u7684\u8d21\u732e\uff0c\u6309$l$\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u7136\u540e\u8fdb\u884c\u7c7b\u4f3c\u7684\u64cd\u4f5c\u5e76\u9012\u5f52\u5de6\u5b50\u6811\u5373\u53ef\u3002\uff08\u8fd9\u4e2a\u5904\u7406\u7684\u987a\u5e8f\u4e0d\u662f\u56fa\u5b9a\u7684\uff0c\u4f60\u5148\u904d\u5386\u5de6\u5b50\u6811\u518d\u5904\u7406\u5de6\u8fb9\u7684\u8d21\u732e\u518d\u904d\u5386\u53f3\u5b50\u6811\u518d\u5904\u7406\u53f3\u8fb9\u7684\u8d21\u732e\u4e5f\u662f\u53ef\u4ee5\u7684\uff09\u3002\n\n\uff08\u524d\u9762\u90a3\u5806\u4e1c\u897f\u53ef\u80fd\u6709\u70b9\u5197\u6742\uff0c\u4f46\u5982\u679c\u7406\u89e3\u4e86\u524d\u9762\u7684\u8bdd\u518d\u770b\u770b\u4ee3\u7801\u5e94\u8be5\u5c31\u6ca1\u95ee\u9898\u4e86\uff09\n\n\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f$O(nlog^2n+qlogn)$\u4e86\n\n### \u4e09\u4e36\u4ee3\u7801\n\n\u56e0\u4e3alxl\u8c8c\u4f3c\u5e76\u4e0d\u5e0c\u671b\u6709\u4eba\u6284\u4ee3\u7801\u6240\u4ee5\u53bb\u4e86\u5934\u6587\u4ef6\u3002\n\n\n```cpp\n//W4P3R\n#define N 500010\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ninline ll read()\n{\n\tchar ch=getchar();\n\tll s=0,w=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){s=s*10+ch-'0';ch=getchar();}\n\treturn s*w;\n}\nll n,m,q,ans[N];\nstruct TREE{ll maxn,hmax,tag1,tag2,res;};\nstruct ask{ll id,l,r,x,y;}a[N];\nstruct node{ll l,r,val;};vector<node>v[N];\nvector<ask>que[N<<2];\nstruct Segement_Tree\n{\n\tTREE t[N<<2];\n\tinline void addtag(ll x,ll v1,ll v2)\n\t{\n\t\tt[x].hmax=max(t[x].maxn+v2,t[x].hmax);t[x].maxn+=v1;\n\t\tt[x].tag2=max(t[x].tag1+v2,t[x].tag2);t[x].tag1+=v1;\n\t}//\u7ef4\u62a4\u5386\u53f2\u6700\u5927\u503c\n\tinline void reset(ll x)\n\t{\n\t\taddtag(ls,t[x].tag1,t[x].tag2);addtag(rs,t[x].tag1,t[x].tag2);\n\t\tt[x].tag1=t[x].tag2=0;\n\t\tt[x].hmax=t[x].maxn;t[x].res=1;\n\t}//\u628a\u5386\u53f2\u6700\u5927\u503c\u91cd\u7f6e\u4e3a\u5f53\u524d\u6700\u5927\u503c\n\tinline void pushdown(ll x)\n\t{\n\t\tif(t[x].res){reset(ls);reset(rs);t[x].res=0;}\n\t\taddtag(ls,t[x].tag1,t[x].tag2),addtag(rs,t[x].tag1,t[x].tag2);\n\t\tt[x].tag1=t[x].tag2=0;\n\t}\n\tinline void pushup(ll x)\n\t{\n\t\tt[x].maxn=max(t[ls].maxn,t[rs].maxn);\n\t\tt[x].hmax=max(t[ls].hmax,t[rs].hmax);\n\t}\n\tvoid update(ll l,ll r,ll x,ll left,ll right,ll val)\n\t{\n\t\tif(l==left&&right==r){addtag(x,val,val);return ;}\n\t\tpushdown(x);\n\t\tif(right<=mid)update(l,mid,ls,left,right,val);\n\t\telse if(left>mid)update(mid+1,r,rs,left,right,val);\n\t\telse update(l,mid,ls,left,mid,val),update(mid+1,r,rs,mid+1,right,val);\n\t\tpushup(x);\n\t}\n\tll query(ll l,ll r,ll x,ll left,ll right)\n\t{\n\t\tif(l==left&&right==r)return t[x].hmax;\n\t\tpushdown(x);\n\t\tif(right<=mid)return query(l,mid,ls,left,right);\n\t\telse if(left>mid)return query(mid+1,r,rs,left,right);\n\t\telse return max(query(l,mid,ls,left,mid),query(mid+1,r,rs,mid+1,right));\n\t}\n}T;//\u7ef4\u62a4\u5386\u53f2\u6700\u5927\u503c\u7684\u7ebf\u6bb5\u6811\nvoid add(ll x,ll l,ll r,ask p)\n{\n\tif(p.l<=mid+1&&mid<=p.r){que[x].pb(p);return ;}//\u628a\u8be2\u95ee\u52a0\u5165\u5f53\u524d\u70b9\n\tif(p.r<=mid)add(ls,l,mid,p);\n\telse add(rs,mid+1,r,p);\n}\ninline ll cmp(node a,node b){return a.val<b.val;}\ninline ll cmp1(ask a,ask b){return a.r<b.r;}\ninline ll cmp2(ask a,ask b){return a.l>b.l;}\ninline void Up(ll x,ll opt)\n{\n\tif(opt==1){for(auto p:v[x]){T.update(1,n,1,p.l,p.r,p.val);}}\n\telse {REP(i,v[x].size()-1,0)T.update(1,n,1,v[x][i].l,v[x][i].r,-v[x][i].val);}\n}//1\u662f\u52a0\u5165\u64cd\u4f5c\uff0c-1\u662f\u56de\u9000\u64cd\u4f5c\nvoid Solve(ll x,ll l,ll r)\n{\n\tFOR(i,l,mid)Up(i,1);//\u628al\u5230mid\u7684\u64cd\u4f5c\u52a0\u5165\n\tll cnt=0,nowp=1;\n\tfor(auto p:que[x])a[++cnt]=p;//\u5c06\u8be2\u95ee\u6309r\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\tsort(a+1,a+cnt+1,cmp1);\n\twhile(nowp<=cnt&&a[nowp].r==mid)nowp++;//r=mid\u7684\u8be2\u95ee\u80af\u5b9a\u8ddf\u53f3\u8fb9\u7684\u4fee\u6539\u65e0\u5173\u5566\n\tFOR(i,mid+1,r)\n\t{\n\t\tUp(i,1);//\u52a0\u5165\u5f53\u524d\u4fee\u6539\n\t\tif(i==mid+1)T.reset(1);//1\u5230mid\u7684\u4fee\u6539\u64cd\u4f5c\u4e0d\u5e94\u8be5\u6c42\u5386\u53f2\u6700\u5927\u503c\n\t\twhile(a[nowp].r==i&&nowp<=cnt){ans[a[nowp].id]=max(ans[a[nowp].id],T.query(1,n,1,a[nowp].x,a[nowp].y));nowp++;}//\u6b63\u5e38\u7684\u8be2\u95ee\n\t}\n\tREP(i,r,mid+1)Up(i,-1);//\u56de\u9000\n\tif(l!=r)Solve(rs,mid+1,r);//\u904d\u5386\u53f3\u5b50\u6811\n\tcnt=0,nowp=1;\n\tfor(auto p:que[x])a[++cnt]=p;\n\tsort(a+1,a+cnt+1,cmp2);//\u5c06\u8be2\u95ee\u6309l\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n\twhile(nowp<=cnt&&a[nowp].l==mid+1)nowp++;//\u540c\u4e0a\n\tREP(i,mid,l)\n\t{\n\t\tif(i==mid)T.reset(1);\n\t\twhile(a[nowp].l==i&&nowp<=cnt){ans[a[nowp].id]=max(ans[a[nowp].id],T.query(1,n,1,a[nowp].x,a[nowp].y));nowp++;}\n\t\tUp(i,-1);\n\t}//\u540c\u4e0a\n\tif(l!=r)Solve(ls,l,mid);//\u904d\u5386\u5de6\u5b50\u6811\n}\nint main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tn=read(),m=read(),q=read();\n\tFOR(i,1,m)\n\t{\n\t\tll l=read(),x=read(),r=read(),y=read(),val=read();\n\t\tv[l].pb((node){x,y,val});\n\t\tv[r+1].pb((node){x,y,-val});\n\t}\n\tFOR(i,1,q)\n\t{\n\t\tll l=read(),x=read(),r=read(),y=read();\n\t\tadd(1,1,n,(ask){(ll)i,l,r,x,y});\n\t}\n\tFOR(i,1,n)sort(v[i].begin(),v[i].end(),cmp);\n\tSolve(1,1,n);\n\tFOR(i,1,q)printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n**\u5982\u679c\u4f60\u89c9\u5f97\u8fd9\u7bc7\u9898\u89e3\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u90a3\u4f60\u53ef\u4ee5\u70b9\u4e2a\u8d5e\u652f\u6301\u6211\u4e00\u4e0bqwq\u3002\u5982\u679c\u4f60\u5bf9\u9898\u89e3\u6709\u4efb\u4f55\u95ee\u9898/\u8ba4\u4e3a\u6211\u7684\u9898\u89e3\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u53ef\u4ee5\u79c1\u4fe1/\u5728\u8bc4\u8bba\u533a\u53d1\u51fa\u6765\uff0c\u5f53\u7136\u5982\u679c\u4f60\u5bf9\u6211\u7684\u9898\u89e3\u6709\u4efb\u4f55\u610f\u89c1/\u5efa\u8bae\u4e5f\u6b22\u8fce\u6307\u51fa\u3002\u6211\u4f1a\u5c3d\u6211\u5168\u529b\u628a\u6211\u9898\u89e3\u5199\u5230\u6700\u597d\u7684qwq**",
        "postTime": 1595391310,
        "uid": 72419,
        "name": "WAPER4EVER",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6109 \u3010[Ynoi2009]rprmq\u3011"
    },
    {
        "content": "\u7ec8\u4e8e\u81ea\u5df1\u628a EE Round2 \u8865\u5b8c\u4e86\uff0c\u8bf4\u5b9e\u8bdd\u73b0\u5728\u7801\u529b\u548c\u601d\u7ef4\u90fd\u4e0d\u884c\uff0c\u6bcf\u6b21\u90fd\u9700\u8981\u6bd4\u8d5b\u65f6\u95f4\u7684 2-3 \u500d\u65f6\u95f4\u624d\u80fd\u81ea\u5df1\u60f3\u51fa\u6765\u5e76\u8c03\u5b8c\uff0c\u602a\u4e0d\u5f97\u6211 div2 \u90fd\u6253\u4e0d\u8d77\u6765\u3002\n\n\u5b9e\u529b\u771f\u7684\u4e0d\u591f\u554a\uff0c\u5e0c\u671b\u7701\u9009\u7684\u65f6\u5019\u4e0d\u8981\u7559\u4e0b\u8fd9\u79cd\u9057\u61be\u554a\u3002\n\n\u5410\u69fd\uff1alxl \u5c45\u7136\u4e0d\u51fa\u5206\u5757\u4f5c\u4e3a\u538b\u8f74\u9898\u4e86\uff0c\u771f\u662f\u795e\u5947\u3002\n\n\u9996\u5148\u770b\u5230 $n,m$ \u548c $q$ \u4e0d\u540c\u9636\uff0c\u53ef\u4ee5\u5148\u731c\u731c\u590d\u6742\u5ea6\u3002\n\n\u521a\u5f00\u59cb\u6211\u4ee5\u4e3a\u662f\u6709\u6839\u53f7\u7684\uff0c\u4e0d\u8fc7\u600e\u4e48\u60f3\u8be2\u95ee\u4e00\u6b21\u6700\u5c11\u8981 $O(\\log n)$\uff0c\u611f\u89c9\u600e\u4e48\u5206\u5757\u90fd\u4e0d\u592a\u884c\u3002\u3002\u3002\u8fd9\u9898 $\\texttt{6s}$ \u662f\u7ed9\u5e38\u6570\u7684\uff0c\u4e0d\u662f\u7ed9 $O(q\\sqrt{n}\\log n)$ \u7684\u3002\u3002\u3002\n\n\u7136\u540e\u8be2\u95ee\u6b21\u6570\u4e00\u5b9a\u662f $O(q)$ \u7684\uff0c\u90a3\u4e48\u5f88\u81ea\u7136\u7684\u60f3\u5230\u4e86\u5206\u6cbb\uff0c\u7c7b\u4f3c\u732b\u6811\u3002\n\n\u6211\u4eec\u628a $x$ \u8f74\u4f5c\u4e3a\u5916\u5c42\u7ebf\u6bb5\u6811\uff0c$y$ \u8f74\u4f5c\u4e3a\u5185\u5c42\u7ebf\u6bb5\u6811\u3002\u8be2\u95ee\u5c31\u53ef\u4ee5\u6302\u5728\u5916\u5c42\u7ebf\u6bb5\u6811\u4e0a\u7684\u6df1\u5ea6\u6700\u5c0f\u533a\u95f4\u7684 $[l,r]$\uff0c\u4f7f\u5f97 $l\\le l_1\\le \\text{mid}+1,\\text{mid}\\le r_1\\le r$\uff0c\u8fd9\u6837\u6211\u4eec\u6bcf\u6b21\u9884\u5904\u7406 $[l,\\text{mid}]$ \u548c $[\\text{mid}+1,r]$ \u7684\u7b54\u6848\uff0c\u5c31\u53ef\u4ee5\u5feb\u901f\u5408\u5e76\u3002\n\n\u6211\u4eec\u628a\u64cd\u4f5c\u5dee\u5206\u6210\u5728 $l_1$ \u4f4d\u7f6e\u628a\u7ebf\u6bb5\u6811 $[l_2,r_2]+x$\uff0c\u5728 $r_1+1$ \u4f4d\u7f6e\u628a\u7ebf\u6bb5\u6811 $[l_2,r_2]-x$\uff0c\u8fd9\u6837\u5728\u4e00\u4e2a\u4f4d\u7f6e\u7684\u8be2\u95ee\u5c31\u53d8\u6210\u4e00\u4e2a\u524d\u7f00\u7684\u8be2\u95ee\u3002\n\n\u8fd9\u5c31\u610f\u5473\u7740\u5728\u8fdb\u5165\u533a\u95f4 $[l,r]$ \u65f6\uff0c\u6211\u4eec\u8981\u5148\u5904\u7406 $[1,l-1]$\uff0c\u7136\u540e\u8fb9\u52a0\u8fb9\u7b97\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u600e\u4e48\u5f04\u7b54\u6848\u3002\u77e9\u9635\u4e0d\u662f\u5f88\u76f4\u89c2\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u9898\u76ee\u6362\u4e00\u79cd\u8868\u8ff0\uff1a\n\n\u5148\u662f $m$ \u6b21\u64cd\u4f5c\uff0c\u5728\u65f6\u95f4 $[l_1,r_1]$ \u65f6\u4f1a\u5c06 $[l_2,r_2]+x$\u3002\n\n\u518d\u662f $q$ \u6b21\u8be2\u95ee\uff0c\u5728\u65f6\u95f4 $[l_1,r_1]$ \u65f6\u4f1a\u8be2\u95ee $\\text{max}\\in [l_2,r_2]$\u3002\n\n\u8fd9\u6837\u5728\u4e00\u6bb5\u65f6\u95f4\u7684\u7b54\u6848\u610f\u5473\u7740\u4ec0\u4e48\uff0c\u533a\u95f4\u5386\u53f2\u6700\u5927\u503c\uff01\n\n\u76f8\u5f53\u4e8e\u6211\u4eec\u8981\u7ef4\u62a4\u5386\u53f2\u6700\u5927\u503c\uff0c\u5e76\u4e14\u8981\u64a4\u9500\u4e00\u6bb5\u65f6\u95f4\u7684\u64cd\u4f5c\u3002\n\n\u53d1\u73b0\u64a4\u9500\u6bd4\u8f83\u96be\u64a4\u9500\uff0c\u628a\u7b54\u6848\u5b9a\u683c\u5728\u4e00\u4e2a\u65f6\u95f4\u91cd\u65b0\u5f00\u59cb\u4f1a\u6bd4\u8f83\u7b80\u5355\u3002\n\n\u6211\u4eec\u518d\u7ef4\u62a4\u4e00\u4e2a $\\text{reset}$ \u6807\u8bb0\uff0c\u76f8\u5f53\u4e8e\u628a\u5f53\u524d\u533a\u95f4\u5386\u53f2\u6700\u5927\u503c\u6539\u6210\u6700\u5927\u503c\uff0c\u52a0\u6cd5\u6807\u8bb0\u5386\u53f2\u6700\u5927\u503c\u6539\u6210\u6700\u5927\u503c\u3002\n\n\u4e24\u4e2a\u6807\u8bb0\uff0c\u597d\u50cf\u8981\u8003\u8651\u600e\u4e48\u4e0b\u4f20\u3002$\\text{reset}$ \u6807\u8bb0\u524d\u7684 $\\text{add}$ \u6807\u8bb0\u5fc5\u987b\u4e0b\u4f20\uff0c$\\text{reset}$ \u6807\u8bb0\u540e\u7684 $\\text{add}$ \u6807\u8bb0\u53ef\u4ee5\u7559\u5728\u90a3\u91cc\uff0c\u5e76\u4e14 $\\text{pushdown}$ \u7684\u65f6\u5019\u4f18\u5148\u4e0b\u4f20 $\\text{reset}$ \u6807\u8bb0\uff0c\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\u6807\u8bb0\u95ee\u9898\u3002\n\n\u8fd9\u65f6\u5019\u5c31\u6709\u4e00\u4e2a\u5c51\u9ad8\u9ad8\u5174\u5174\u5199\u5b8c\u8fc7\u4e86\u6837\u4f8b\uff0c\u4e00\u4ea4\u4e0a\u53bb\uff0c$100\\rightarrow 1$\u3002\n\n\u8fd9\u4e2a\u5c51\u60f3\u4e86\u5f88\u957f\u65f6\u95f4\uff0c\u53d1\u73b0\uff1a\u4e00\u4e2a\u65f6\u95f4\u4e0d\u6b62\u6709\u4e00\u4e2a\u64cd\u4f5c\uff01\n\n\u8fd9\u610f\u5473\u7740\u53ef\u80fd\u4f60\u5728\u8fd9\u4e2a\u65f6\u95f4\u5148 $+3$ \u518d $-1$\uff0c\u7ebf\u6bb5\u6811\u4e0a\u8be2\u95ee\u5386\u53f2\u6700\u5927\u503c\u662f $3$\uff0c\u4f46\u662f\u5b9e\u9645\u7b54\u6848\u662f $2$\u3002\n\n\u90a3\u600e\u4e48\u529e\u5462\uff1f\n\n\u8fd8\u9700\u8981\u5c06\u52a0\u6cd5\u64cd\u4f5c\u6309 $x$ \u6392\u5e8f\uff0c\u52a0\u8fdb\u53bb\u7684\u65f6\u5019\u4ece\u8d1f\u6570\u5f00\u59cb\uff0c\u51cf\u56de\u53bb\u7684\u65f6\u5019\u4ece\u6b63\u6570\u5f00\u59cb\u3002\u5176\u5b9e\u51cf\u56de\u53bb\u65e0\u6240\u8c13\uff0c\u53cd\u6b63\u90fd\u8981\u5b9a\u683c\u5728\u4e00\u4e2a\u65f6\u95f4\u3002\n\n\u7136\u540e\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\uff1a\n\n1. \u5728\u5904\u7406 $[l,\\text{mid}]$ \u7684\u7b54\u6848\u65f6\u8981\u5148\u5b9a\u683c\uff0c\u4f46\u5728\u5904\u7406 $[\\text{mid}+1,r]$ \u7684\u7b54\u6848\u65f6\u8981\u5728\u65f6\u95f4 $\\text{mid}+1$ \u8fd9\u4e9b\u64cd\u4f5c\u52a0\u5b8c\u540e\u518d\u5b9a\u683c\uff0c\u56e0\u4e3a\u65f6\u95f4 $\\text{mid}$ \u4e0d\u5305\u542b\u5728\u91cc\u9762\u3002\n\n2. \u5728\u5904\u7406 $[l,\\text{mid}]$ \u7684\u7b54\u6848\u65f6\u8981\u5148\u8be2\u95ee\u518d\u51cf\u56de\u53bb\uff0c\u5728\u5904\u7406 $[\\text{mid}+1,r]$ \u7684\u7b54\u6848\u65f6\u8981\u5148\u52a0\u4e0a\u53bb\u518d\u8be2\u95ee\u3002\n\n\u5927\u6982\u5c31\u8fd9\u4e48\u591a\u4e86\uff0c\u65f6\u95f4 $O(n\\log^2 n+q\\log n)$\u3002\u7ebf\u6bb5\u6811\u5e38\u6570\u8fd8\u6709\u4e00\u4e9b\uff0c\u76f4\u63a5 ++ \u597d\u50cf\u4e0d\u592a\u884c\u3002\n\n\u5bf9\u4e8e\u6211\u8fd9\u79cd\u5e38\u5e74\u4e0d\u7528\u5feb\u8bfb\u5feb\u8f93\u7684\u4eba\uff0c\u8981\u52a0\u4e2a\u5feb\u8bfb\u5feb\u8f93\u677f\u5b50\u3002\n\n\u7136\u540e\u5c31\u662f\u7ebf\u6bb5\u6811\u677f\u5b50\u8981\u5feb\u4e00\u4e9b\u3002\u3002\u3002\u6211\u7684\u4ee3\u7801 cpu \u76d1\u63a7\u65f6\u95f4\u662f\u6700\u4f18\u89e3\u7684\u516d\u500d\uff08\u4e0d\u5361\u5e38+\u4e0d\u5c01\u88c5\uff09\uff0c\u4e22\u4eba\u6b7b\u4e86\uff0c\u76f4\u63a5\u590d\u5236\u8fc7\u6765\u5c82\u4e0d $T$ \u98de\uff1f\n\n\u96be\u9053\u6211\u53bb\u505a\u8fd9\u9053\u9898\u4e4b\u524d\u8fd8\u8981\u518d\u53bb\u5199\u4e00\u904d cpu \u76d1\u63a7\u5e76\u5361\u5230\u6700\u4f18\u89e3\uff1f\n\n\u6211\u6bd4\u8f83\u61d2\uff0c\u76f4\u63a5\u53bb cpu \u76d1\u63a7\u90a3\u590d\u5236\u4e86\u4e00\u4efd\u6700\u4f18\u89e3\uff0c\u4e0b\u9762\u677f\u5b50\u7684\u90e8\u5206\u662f @iostream \u7684\u3002\n\n~~\u5e0c\u671b\u4ed6/\u5979\u770b\u5230\u8fd9\u91cc\u4e0d\u4f1a\u8bf4\u6211\u4fb5\u6743\u5c31\u884c\u4e86~~\n\n\u7a81\u7136\u60f3\u5230\u81ea\u5df1\u8be2\u95ee $=0$ \u7684\u5730\u65b9\u5fd8\u526a\u679d\u4e86\uff0c\u7b97\u4e86\uff0c\u80fd\u8fc7\u5c31\u884c\u3002\n\n~~Ynoi \u4e0d\u5361\u5e38\u771f\u597d\uff0c\u4e0d\u7528\u7279\u5730\u5728\u6df1\u591c\u4ea4\u9898\u4e86~~\n\n\u56e0 @noip \u8981\u6c42\uff0c\u4ee3\u7801\u5220\u4e86\uff0c\u6709\u9700\u8981\u79c1\u804a\u6211\u597d\u4e86\uff0c\u7f51\u8bfe\u7ed3\u675f\u524d\u6211\u90fd\u5728\u7ebf\u3002",
        "postTime": 1581990191,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6109 \u3010[Ynoi2009]rprmq\u3011"
    },
    {
        "content": "> \u9898\u76ee\u94fe\u63a5\uff1a[\\[Ynoi2009\\] rprmq](https://www.luogu.com.cn/problem/P6109)\n\n> **\u672c\u9898\u89e3\u540c\u6b65\u53d1\u5e03\u4e8e [My Blog](http://www.cxy07.blog/index.php/archives/287/)**\n\n\u9898\u610f\uff1a\n\n> \u6709\u4e00\u4e2a $n \\times n$ \u7684\u77e9\u9635 $A$\uff0c\u521d\u59cb\u5168\u662f $0$\uff0c\u6709 $m$ \u6b21\u4fee\u6539\u64cd\u4f5c\u548c $q$ \u6b21\u67e5\u8be2\u64cd\u4f5c\uff0c**\u5148\u8fdb\u884c\u6240\u6709\u4fee\u6539\u64cd\u4f5c\uff0c\u7136\u540e\u8fdb\u884c\u6240\u6709\u67e5\u8be2\u64cd\u4f5c**\u3002\n\n> \u4e00\u6b21\u4fee\u6539\u64cd\u4f5c\u4f1a\u7ed9\u51fa $l_1,l_2,r_1,r_2,x$\uff0c\u4ee3\u8868\u628a\u6240\u6709\u6ee1\u8db3 $l_1 \\le i \\le r_1$ \u4e14 $l_2 \\le j \\le r_2$ \u7684 $A_{i,j}$ \u5143\u7d20\u52a0\u4e0a\u4e00\u4e2a\u503c $x$\u3002\n\n> \u4e00\u6b21\u67e5\u8be2\u64cd\u4f5c\u4f1a\u7ed9\u51fa $l_1,l_2,r_1,r_2$\uff0c\u4ee3\u8868\u67e5\u8be2\u6240\u6709\u6ee1\u8db3 $l_1 \\le i \\le r_1$ \u4e14 $l_2 \\le j \\le r_2$ \u7684 $A_{i,j}$ \u5143\u7d20\u7684\u6700\u5927\u503c\u3002\n\n\n> $1\\le n,m\\le 5\\times 10^4,1\\le q \\le 5\\times 10^5$\u3002\n\n\n\u6216\u8bb8\u662f\u4e00\u4e2a\u5b9e\u73b0\u65b9\u5f0f\u6709\u4e00\u4e9b\u5c0f\u5dee\u522b\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u8003\u8651\u79bb\u7ebf\u5206\u6cbb\uff0c\u6bcf\u6b21\u8003\u8651\u8de8\u8fc7\u5206\u6cbb\u4e2d\u5fc3\u7684\u67e5\u8be2\u4e0e\u4fee\u6539\u3002\n\n\u5c06\u7b2c\u4e8c\u7ef4\u653e\u5728\u7ebf\u6bb5\u6811\u4e0a\uff0c\u7b2c\u4e00\u7ef4\u505a\u626b\u63cf\u7ebf\uff0c\u6bcf\u6b21\u4ece\u5206\u6cbb\u4e2d\u5fc3 $\\text{mid}$ \u5411\u5de6\u3001\u53f3\u8fdb\u884c\u62d3\u5c55\uff0c\u5982\u679c\u9047\u5230\u4e00\u4e2a\u77e9\u9635\u7684\u5f00\u59cb\uff0c\u6216\u4e00\u4e2a\u77e9\u9635\u7684\u7ed3\u675f\uff0c\u5c31\u5728\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c\u533a\u95f4\u4fee\u6539\u3002\n\n\u7531\u4e8e\u6211\u4eec\u9700\u8981\u7684\u662f\u201c\u77e9\u5f62 $\\max$\u201d\uff0c\u800c\u5728\u5206\u6cbb\u7684\u65f6\u5019\uff0c\u7b2c\u4e00\u7ef4\u53d8\u6210\u4e86\u65f6\u95f4\uff0c\u6240\u4ee5\u8fd9\u4e2a\u95ee\u9898\u5728\u8fd9\u91cc\u5c31\u662f\u7ebf\u6bb5\u6811\u5386\u53f2 $\\max$\u3002\n\n\u4e8e\u662f\u5bf9\u4e8e\u4e00\u4e2a\u8de8\u8fc7 $\\text{mid}$ \u7684\u8be2\u95ee\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u626b\u63cf\u7ebf\u5230\u4e86\u5de6\u7aef\u70b9\u5904\uff0c\u6216\u5230\u4e86\u53f3\u7aef\u70b9\u5904\u7684\u65f6\u5019\uff0c\u67e5\u8be2\u533a\u95f4\u5386\u53f2\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u8fd9\u4e00\u90e8\u5206\u4e2d\uff0c\u4e00\u4e2a\u5b9e\u73b0\u7684\u7ec6\u8282\u662f\u5f53\u626b\u63cf\u5b8c $\\text{mid}$ \u5de6\u4fa7\u65f6\uff0c\u9700\u8981\u5c06\u6574\u68f5\u7ebf\u6bb5\u6811\u7684\u72b6\u6001 $\\text{roll back}$ \u56de\u5230\u8fd8\u6ca1\u6709\u626b\u63cf\u5de6\u4fa7\u65f6\u7684\u72b6\u6001\uff0c\u7136\u540e\u518d\u8fdb\u884c\u53f3\u4fa7\u7684\u626b\u63cf\u7ebf\u3002\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u5bf9\u7ebf\u6bb5\u6811 $\\text{DFS}$\uff0c\u5c06\u6bcf\u4e00\u4e2a\u904d\u5386\u8fc7\u7684\u8282\u70b9\u7684\u6743\u503c\u8fdb\u884c\u56de\u6eda\u6765\u505a\u5230\u3002\n\n\u53e6\u4e00\u4e2a\u5bb9\u6613\u9519\u7684\u70b9\u662f\uff0c\u5982\u679c\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u540c\u65f6\u6709\u77e9\u5f62\u7684\u7ed3\u675f\u4e0e\u77e9\u5f62\u7684\u5f00\u59cb\uff08\u5373\u6709\u533a\u95f4\u52a0\u4e0e\u533a\u95f4\u51cf\u64cd\u4f5c\uff09\uff0c\u90a3\u4e48\u5e94\u8be5\u5148\u8fdb\u884c\u533a\u95f4\u51cf\u64cd\u4f5c\uff0c\u8fd9\u6837\u624d\u80fd\u4f7f\u5386\u53f2 $\\max$ \u4fdd\u6301\u6b63\u786e\u3002\n\n\u8fd9\u6837\u5355\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u5c31\u662f $\\mathcal{O}(\\log n)$ \u7684\uff0c$\\mathcal{O}(q\\log n)$ \u7684\u603b\u590d\u6742\u5ea6\u53ef\u4ee5\u63a5\u53d7\u3002\n\n\u4f46\u662f\u4fee\u6539\u7684\u590d\u6742\u5ea6\u5b9e\u9645\u4e0a\u662f\u4e0d\u592a\u5bf9\u7684\u3002\u5728\u4e00\u822c\u7684\u5206\u6cbb\u4e2d\uff0c\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u4fdd\u8bc1\u57fa\u4e8e\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u5728\u8fdb\u5165\u5206\u6cbb\u6811\u4e0b\u4e00\u5c42\u7684\u65f6\u5019\uff0c\u90fd\u53ea\u4f1a\u8fdb\u5165\u4e00\u8fb9\uff08\u4e00\u4e2a\u5206\u6cbb\u6811\u8282\u70b9\uff09\u3002\u7136\u800c\u5728\u8fd9\u91cc\uff0c\u4e00\u4e2a\u8de8\u8d8a\u4e86 $\\text{mid}$ \u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u540c\u65f6\u5411 $[\\text{L},\\text{mid}]$ \u4e0e $[\\text{mid+1},\\text{R}]$ \u8fdb\u884c\u9012\u5f52\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4efb\u610f\u4e00\u4e2a\u4fee\u6539\u5b9e\u9645\u4e0a\u662f\u5728\u5206\u6cbb\u7684\u65f6\u95f4\u7ef4\u5ea6\u7684\u4e00\u4e2a\u533a\u95f4\u4e0a\u5b58\u5728\u7684\uff0c\u800c\u5206\u6cbb\u7684\u7ed3\u6784\u672c\u8eab\u5c31\u7c7b\u4f3c\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u6240\u4ee5\u53ef\u4ee5\u8ba4\u4e3a\u4e00\u4e2a\u64cd\u4f5c\u662f\u5b58\u5728\u5728\u5206\u6cbb\u6811\u7684\u4e00\u4e2a\u533a\u95f4\u4e0a\u7684\u3002\n\n\u7531\u4e8e\u5206\u6cbb\u6811\u662f\u7ebf\u6bb5\u6811\u7ed3\u6784\uff0c\u800c\u64cd\u4f5c\u5b58\u5728\u5728\u5206\u6cbb\u6811\u7684\u533a\u95f4\u4e0a\uff0c\u8fd9\u8ba9\u6211\u4eec\u60f3\u5230\u201c\u7ebf\u6bb5\u6811\u5206\u6cbb\u201d\u3002\u7ebf\u6bb5\u6811\u5206\u6cbb\u7684\u601d\u60f3\u5c31\u662f\u5c06\u4e00\u4e2a\u5b58\u5728\u5728\u67d0\u4e2a\u65f6\u95f4\u6bb5\u7684\u4fee\u6539\u5212\u5206\u4e3a $\\log$ \u4e2a\u90e8\u5206\uff0c\u901a\u8fc7\u5728 $\\text{DFS}$ \u6574\u68f5\u7ebf\u6bb5\u6811\u7684\u65f6\u5019\uff0c\u7ef4\u62a4\u5f53\u524d\u7ebf\u6bb5\u6811\u8282\u70b9\u7684\u7956\u5148\u7684\u6240\u6709\u4fee\u6539\u64cd\u4f5c\uff0c\u6765\u4fdd\u8bc1\u590d\u6742\u5ea6\u3002\n\n\u4e8e\u662f\uff0c\u628a\u8fd9\u4e2a\u601d\u60f3\u5957\u5230\u672c\u9898\u4e0a\uff0c\u5c31\u53d8\u6210\u4e86\uff1a\u5982\u679c\u4e00\u4e2a\u64cd\u4f5c\u5b8c\u5168\u8986\u76d6\u4e86\u5f53\u524d\u7684\u5206\u6cbb\u533a\u95f4\uff0c\u5219\u628a\u4ed6\u770b\u4f5c\u4e00\u4e2a\u7c7b\u4f3c\u201c\u521d\u503c\u201d\u7684\u90e8\u5206\u3002\n\n\u56e0\u4e3a\u5728\u8fd9\u4e2a\u533a\u95f4\u4e2d\u8fd9\u6b21\u64cd\u4f5c\u6c38\u8fdc\u5b58\u5728\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5728\u8fdb\u5165\u533a\u95f4\u7684\u65f6\u5019\u5c06\u8be5\u64cd\u4f5c\u6267\u884c\uff0c\u5219\u5206\u6cbb\u6811\u7684\u5b50\u6811\u4e2d\u8fd9\u4e2a\u64cd\u4f5c\u5c31\u4e00\u76f4\u5b58\u5728\u4e86\u3002\n\n\u4ece\u800c\u4e00\u4e2a\u64cd\u4f5c\u88ab\u62c6\u5206\u6210\u4e86 $\\mathcal{O}(\\log n)$ \u6b21\u64cd\u4f5c\uff0c\u603b\u590d\u6742\u5ea6\u662f $\\mathcal{O}(m\\log^2n+q\\log n)$\u3002\n\n\u4e00\u4e2a\u7ec6\u8282\uff1a\u7531\u4e8e\u8fdb\u884c\u5206\u6cbb\u7684\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u9700\u8981\u8fdb\u884c\u72b6\u6001\u7684\u56de\u6eda\uff0c\u800c\u72b6\u6001\u7684\u4fee\u6539\u6b21\u6570\u662f $\\mathcal{O}(m\\log^2 n)$ \u7684\uff0c\u76f4\u63a5\u8bb0\u5f55\u7684\u8bdd\u7a7a\u95f4\u5c06\u4e0e\u65f6\u95f4\u540c\u9636\u3002\n\n\u4e0d\u8fc7\u5b9e\u9645\u4e0a\uff0c\u5373\u4f7f\u4fee\u6539\u6b21\u6570\u662f $\\mathcal{O}(n\\log^2 n)$\uff0c\u5176\u4fee\u6539\u7684\u5143\u7d20\u4e2a\u6570\u5374\u662f $\\mathcal{O}(n\\log n)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u628a\u53ef\u56de\u9000\u7684\u90e8\u5206\u8f83\u4e3a\u7cbe\u7ec6\u5730\u5b9e\u73b0\u6765\u4fdd\u8bc1\u7a7a\u95f4\u590d\u6742\u5ea6\u3002\n\n```cpp\n//Code By CXY07 - It's My Fiesta.\n#include<bits/stdc++.h>\nusing namespace std;\n\n//#define FILE\n//#define int long long\n#define randint(l, r) (rand() % ((r) - (l) + 1) + (l))\n#define abs(x) ((x) < 0 ? (-(x)) : (x))\n#define popc(x) __builtin_popcount(x)\n#define inv(x) qpow((x), mod - 2)\n#define lowbit(x) ((x) & (-(x)))\n#define ull unsigned long long\n#define pii pair<int, int>\n#define pb emplace_back\n#define LL long long\n#define mp make_pair\n#define scd second\n#define vec vector\n#define fst first\n#define endl '\\n'\n#define y1 _y1\n\nconst int MAXN = 5e4 + 10;\nconst int MAXQ = 5e5 + 10;\nconst int MAXD = 16;\nconst int INF = 2e9;\nconst double eps = 1e-6;\nconst double PI = acos(-1);\n//const int mod = 1e9 + 7;\n//const int mod = 998244353;\n//const int G = 3;\n//const int base = 131;\n\nstruct info {\n\tint l, r, x;\n\tinfo(int _l = 0, int _r = 0, int _x = 0) : l(_l), r(_r), x(_x) {}\n\tbool operator < (const info &b) const { return x < b.x; }\n};\n\nint n, m, q;\nLL Ans[MAXQ];\nvec<info> qp[MAXN], add[MAXN];\n\ntemplate<typename T> inline bool read(T &a) {\n\ta = 0; char c = getchar(); int f = 1;\n\twhile(c < '0' || c > '9') { if(c == '-') f = -1; c = getchar(); }\n\twhile(c >= '0' && c <= '9') { a = a * 10 + (c ^ 48); c = getchar(); }\n\treturn a *= f, true;\n}\n\ntemplate<typename A, typename ...B>\ninline bool read(A &x, B &...y) { return read(x) && read(y...); }\n\nstruct NODE {\n\tint l1, l2, r1, r2, x, id;\n\tvoid read(int i) { id = i, ::read(l1), ::read(l2), ::read(r1), ::read(r2); }\n}; vec<NODE> qs[MAXN << 2], mdf[MAXN << 2];\n\ninline LL max(const LL x, const LL y) { return x > y ? x : y; }\n\nnamespace SMT {\n\tint D;\n\tLL mx[MAXN << 2], hmx[MAXN << 2], tag[MAXN << 2], htag[MAXN << 2];\n\tLL mx_bak[MAXD][MAXN << 2], hmx_bak[MAXD][MAXN << 2];\n\tLL tag_bak[MAXD][MAXN << 2], htag_bak[MAXD][MAXN << 2];\n\tbool vis[MAXD][MAXN << 2];\n\tinline void pushup(const LL &x) {\n\t\tmx[x] = max(mx[x << 1], mx[x << 1 | 1]);\n\t\thmx[x] = max(hmx[x], mx[x]);\n\t}\n\tinline void push(const int &x, const LL &v, const LL &hv) {\n\t\thtag[x] = max(htag[x], tag[x] + hv); \n\t\ttag[x] = tag[x] + v;\n\t\thmx[x] = max(hmx[x], mx[x] + hv); \n\t\tmx[x] = mx[x] + v;\n\t}\n\tinline void pushdown(const LL &x) {\n\t\tpush(x << 1, tag[x], htag[x]);\n\t\tpush(x << 1 | 1, tag[x], htag[x]);\n\t\thtag[x] = 0; tag[x] = 0;\n\t}\n\tvoid save(int x) {\n\t\tif(!vis[D][x]) {\n\t\t\tvis[D][x] = true;\n\t\t\tmx_bak[D][x] = mx[x], hmx_bak[D][x] = hmx[x];\n\t\t\ttag_bak[D][x] = tag[x], htag_bak[D][x] = htag[x];\n\t\t}\n\t}\n\tvoid update(int x, int l, int r, int L, int R, int v) {\n\t\tsave(x);\n\t\tif(L <= l && r <= R) return push(x, v, v), void();\n\t\tint mid = (l + r) >> 1; \n\t\tsave(x << 1), save(x << 1 | 1); pushdown(x);\n\t\tif(L <= mid) update(x << 1, l, mid, L, R, v);\n\t\tif(R > mid) update(x << 1 | 1, mid + 1, r, L, R, v);\n\t\tpushup(x);\n\t}\n\tLL query(int x, int l, int r, int L, int R) {\n\t\tsave(x);\n\t\tif(L <= l && r <= R) return hmx[x];\n\t\tint mid = (l + r) >> 1; LL res = 0;\n\t\tsave(x << 1), save(x << 1 | 1); pushdown(x);\n\t\tif(L <= mid) res = max(res, query(x << 1, l, mid, L, R));\n\t\tif(R > mid) res = max(res, query(x << 1 | 1, mid + 1, r, L, R));\n\t\treturn res;\n\t}\n\tvoid clear(int x, int l, int r) {\n\t\tif(!vis[D][x]) return;\n\t\tvis[D][x] = false;\n\t\tif(l == r) return;\n\t\tint mid = (l + r) >> 1;\n\t\tclear(x << 1, l, mid), clear(x << 1 | 1, mid + 1, r);\n\t}\n\tvoid roll(int x, int l, int r) {\n\t\tif(!vis[D][x]) return;\n\t\tmx[x] = mx_bak[D][x], hmx[x] = hmx_bak[D][x];\n\t\ttag[x] = tag_bak[D][x], htag[x] = htag_bak[D][x];\n\t\tvis[D][x] = false;\n\t\tif(l == r) return;\n\t\tint mid = (l + r) >> 1;\n\t\troll(x << 1, l, mid), roll(x << 1 | 1, mid + 1, r);\n\t}\n}\n\nusing SMT::update;\nusing SMT::query;\nusing SMT::clear;\nusing SMT::roll;\nusing SMT::D;\n\nvoid solve(int _x, int vL, int vR, int dep) {\n\tif(vL > vR || !qs[_x].size()) return;\n\tint mid = (vL + vR) >> 1; NODE cur;\n\tfor(auto x : qs[_x]) {\n\t\tif(x.r1 < mid) qs[_x << 1].pb(x);\n\t\tif(x.l1 > mid) qs[_x << 1 | 1].pb(x);\n\t\tif(x.l1 <= mid && mid <= x.r1) {\n\t\t\tqp[x.l1].pb(info(x.l2, x.r2, x.id));\n\t\t\tqp[x.r1].pb(info(x.l2, x.r2, x.id));\n\t\t}\n\t}\n\tfor(auto x : mdf[_x]) {\n\t\tif(x.r1 < mid) {\n\t\t\tmdf[_x << 1].pb(x), add[x.r1].pb(info(x.l2, x.r2, x.x));\n\t\t\tif(vL < x.l1) add[x.l1 - 1].pb(info(x.l2, x.r2, -x.x));\n\t\t} else if(x.l1 > mid) {\n\t\t\tmdf[_x << 1 | 1].pb(x), add[x.l1].pb(info(x.l2, x.r2, x.x));\n\t\t\tif(x.r1 < vR) add[x.r1 + 1].pb(info(x.l2, x.r2, -x.x));\n\t\t} else if(x.l1 <= mid && mid <= x.r1) {\n\t\t\tadd[mid].pb(info(x.l2, x.r2, x.x));\n\t\t\tif(vL < x.l1) add[x.l1 - 1].pb(info(x.l2, x.r2, -x.x));\n\t\t\tif(x.r1 < vR) add[x.r1 + 1].pb(info(x.l2, x.r2, -x.x));\n\t\t}\n\t} D = dep; clear(1, 1, n);\n\tfor(int i = mid; i >= vL; --i) {\n\t\tsort(add[i].begin(), add[i].end());\n\t\tfor(auto x : add[i]) update(1, 1, n, x.l, x.r, x.x);\n\t\tfor(auto x : qp[i]) Ans[x.x] = max(Ans[x.x], query(1, 1, n, x.l, x.r));\n\t} roll(1, 1, n);\n\tfor(int i = mid; i <= vR; ++i) {\n\t\tsort(add[i].begin(), add[i].end());\n\t\tfor(auto x : add[i]) update(1, 1, n, x.l, x.r, x.x);\n\t\tfor(auto x : qp[i]) Ans[x.x] = max(Ans[x.x], query(1, 1, n, x.l, x.r));\n\t} roll(1, 1, n);\n\tfor(int i = vL; i <= vR; ++i) add[i].clear(), qp[i].clear();\n\tfor(auto x : mdf[_x]) {\n\t\tif(x.l1 < mid && mid <= x.r1) {\n\t\t\tif(x.l1 <= vL) update(1, 1, n, x.l2, x.r2, x.x);\n\t\t\telse { cur = x; cur.r1 = mid - 1; mdf[_x << 1].pb(cur); }\n\t\t}\n\t} solve(_x << 1, vL, mid - 1, dep + 1); D = dep; roll(1, 1, n);\n\tfor(auto x : mdf[_x]) {\n\t\tif(x.l1 <= mid && mid < x.r1) {\n\t\t\tif(x.r1 >= vR) update(1, 1, n, x.l2, x.r2, x.x);\n\t\t\telse { cur = x; cur.l1 = mid + 1; mdf[_x << 1 | 1].pb(cur); }\n\t\t}\n\t} solve(_x << 1 | 1, mid + 1, vR, dep + 1); D = dep; roll(1, 1, n);\n}\n\nsigned main () {\n#ifdef FILE\n\tfreopen(\"P6109.in\", \"r\", stdin);\n\tfreopen(\"P6109.out\", \"w\", stdout);\n#endif\n\tread(n), read(m), read(q); mdf[1].resize(m), qs[1].resize(q);\n\tfor(int i = 0; i < m; ++i) mdf[1][i].read(i), read(mdf[1][i].x);\n\tfor(int i = 0; i < q; ++i) qs[1][i].read(i + 1);\n\tsolve(1, 1, n, 0);\n\tfor(int i = 1; i <= q; ++i) printf(\"%lld\\n\", Ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1635736867,
        "uid": 53489,
        "name": "CXY07",
        "ccfLevel": 9,
        "title": "\u3010\u9898\u89e3\u3011[Ynoi2009] rprmq"
    },
    {
        "content": "\u9996\u5148\u56e0\u4e3a\u6211\u4eec\u5148\u4fee\u6539\u518d\u67e5\u8be2\uff0c\u8fd9\u4e2a\u95ee\u9898\u5b9e\u9645\u4e0a\u662f\u4e8c\u7ef4\u7684\u3002\n\n\u90a3\u4e48\u4e0d\u59a8\u8003\u8651\u5c06\u6574\u4e2a\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u7684\u6a2a\u8f74\u770b\u65f6\u95f4\u8f74\uff0c\u7eb5\u8f74\u770b\u6210\u5e8f\u5217\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u6709 $n$ \u4e2a\u7248\u672c\u7684\u5e8f\u5217\uff0c\u4fee\u6539\u5219\u662f\u5bf9\u4e00\u6bb5\u65f6\u95f4\u8f74\u4e0a\u7684\u5e8f\u5217\u7684\u4e00\u6bb5\u533a\u95f4\u5168\u90e8\u52a0\u4e0a\u4e00\u4e2a\u503c\uff0c\u67e5\u8be2\u7c7b\u4f3c\uff0c\u6c42\u6700\u5927\u503c\u3002\n\n\u5148\u8003\u8651\u4e00\u4e2a\u66b4\u529b\u7684\u60f3\u6cd5\uff0c\u6211\u4eec\u80fd\u5426\u7ef4\u62a4\u6240\u6709\u65f6\u523b\u7684\u5e8f\u5217\u5462\uff1f\n\n\u5148\u5206\u6790\u4fee\u6539\uff0c\u6211\u4eec\u8003\u8651\u626b\u63cf\u7ebf\u6389\u3002\u5c06\u4fee\u6539 $(l_1,r_1,l_2,r_2,x)$ \u770b\u505a\u5728 $l_1$ \u65f6\u523b\uff0c\u5bf9 $[l_2,r_2]$ \u6267\u884c\u533a\u95f4\u52a0 $x$\uff1b\u5728 $r_1+1$ \u65f6\u523b\uff0c\u5bf9 $[l_2,r_2]$ \u6267\u884c\u533a\u95f4\u51cf $x$\u3002\n\n\u7136\u540e\u518d\u8003\u8651\u4fee\u6539\uff0c\u7528\u7c7b\u4f3c\u7684\u601d\u8def\uff0c\u5047\u8bbe\u521d\u59cb\u7684\u5e8f\u5217\u662f $l_1$ \u65f6\u523b\u7684\u5e8f\u5217\uff0c\u90a3\u4e48\u6211\u4eec\u4ece $l_1$ \u5f00\u59cb\uff0c$r_1$ \u7ed3\u675f\u8fdb\u884c\u6bcf\u4e2a\u65f6\u523b\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u6bcf\u6b21\u6c42\u51fa $[l_2,r_2]$ \u7684\u6700\u5927\u503c\u3002\u67e5\u8be2\u8fd9\u4e48\u591a\u904d\u80af\u5b9a\u4e0d\u4f18\u7f8e\uff0c\u6ce8\u610f\u5230\u8fd9\u662f\u4e2a\u5386\u53f2\u6700\u5927\u503c\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u7528\u5409\u53f8\u673a\u7ebf\u6bb5\u6811\u505a\u3002\u6211\u4eec\u4e00\u6837\u7684\u628a\u8be2\u95ee\u6302\u5230\u65f6\u95f4\u8f74\u4e0a\uff0c\u6bcf\u6b21\u4ece\u6bcf\u4e2a\u65f6\u95f4\u5f00\u59cb\u505a\u4fee\u6539\uff0c\u5728\u67d0\u4e2a\u4f4d\u7f6e\u67e5\u8be2\u5373\u53ef\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u770b\u8d77\u6765\u53ef\u4ee5\u4f18\u5316\u7684\u66b4\u529b\u7684\u601d\u8def\u3002\u4e0d\u59a8\u8003\u8651\u4e00\u4e2a\u5f31\u5316\u7684\u95ee\u9898\uff0c\u8be2\u95ee\u90fd\u8de8\u8fc7\u540c\u4e00\u4e2a\u65f6\u95f4\u70b9\u3002\u5c06\u8be2\u95ee\u62c6\u6210\u4e24\u90e8\u5206\uff0c\u653e\u5728\u65f6\u95f4\u70b9 $l1,r1$ \u4e0a\u3002\u6211\u4eec\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u65f6\u95f4\u70b9\u5f00\u59cb\uff0c\u5411\u5de6/\u5411\u53f3\u4f9d\u6b21\u6267\u884c\u64cd\u4f5c\uff0c\u4e00\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\u5c31\u662f\u4e24\u6b21\u7684\u67e5\u8be2\u51fa\u7684\u6700\u5927\u503c\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e9b\u5206\u6cbb\u65b9\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u53ea\u9700\u8981\u4e0d\u91cd\u4e0d\u6f0f\u5730\u627e\u5230\u5206\u5272\u70b9\u4e14\u53ef\u4ee5\u4f18\u79c0\u5730\u56de\u7b54\u4e0a\u9762\u7684\u95ee\u9898\u5c31\u597d\u4e86\u3002\u4e8e\u662f\u8003\u8651\u732b\u6811\u5206\u6cbb\u3002\n\n\u6811\u4e0a\u7684\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u5b58\u4e0b\u5b50\u6811\u5185\u90fd\u4f1a\u6267\u884c\u7684\u64cd\u4f5c\uff0c\u4ee5\u53ca\u5f53\u524d\u7ed3\u70b9\u9700\u8981\u505a\u7684\u64cd\u4f5c\u3002\u8be2\u95ee\u5219\u6302\u5728\u7b2c\u4e00\u4e2a\u4e2d\u70b9\u5728\u8be2\u95ee\u95f4\u7684\u7ed3\u70b9\u3002\u5269\u4e0b\u7684\u5c31\u662f\u76f4\u63a5\u505a\u4e86\u3002\n\n\u6ce8\u610f\u5230\u8fd9\u6837\u7684\u8bdd\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u64cd\u4f5c\u548c\u67e5\u8be2\u53ea\u4f1a\u6267\u884c $O(\\log n)$ \u6b21\uff0c\u90a3\u4e48\u590d\u6742\u5ea6\u662f $O(n \\log^2n)$ \u7684\u3002\n\n\u6709\u4e00\u4e9b\u5c0f\u7ec6\u8282\uff0c\u6bd4\u5982\u4fee\u6539\u5e94\u8be5\u5148\u51cf\u518d\u52a0\uff08\u4e0d\u7136\u5386\u53f2\u6700\u5927\u503c\u4f1a\u51fa\u9519\uff09\uff0c\u4ee5\u53ca\u6bcf\u6b21\u7ebf\u6bb5\u6811\u7684\u590d\u539f\uff08\u6bcf\u4e2a\u7ed3\u70b9\u7684\u5386\u53f2\u6700\u5927\u503c\u53ca\u5176\u6807\u8bb0\u53d8\u4e3a\u5f53\u524d\u7684\u503c\u53ca\u6807\u8bb0\uff0c\u6ce8\u610f\u5230 `push_down` \u8981\u4e3b\u52a8\u4e0b\u653e\u76f4\u5230\u5b59\u5b50\u7ed3\u70b9\uff0c\u5373\u4e24\u5c42\u4e0b\u653e\uff09\uff0c\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801\u5b9e\u73b0\u3002\n\n```cpp\nvoid insmodify(LL l,LL r,LL now,LL x,LL y,LL id)\n{\n\tif(x<=l && r<=y)\treturn trm[now].push_back(id);\n\ttre[now].push_back(id);\n\tMm;\n\tif(x<=mid)\tinsmodify(l,mid,lc(now),x,y,id);\n\tif(mid<y)\tinsmodify(mid+1,r,rc(now),x,y,id);\n}\nvoid insquery(LL l,LL r,LL now,LL x,LL y,LL id)\n{\n\tMm;\n\tif(l==r || (x<=mid && mid<y))\treturn req[now].push_back(id);\n\tif(x<=mid)\tinsquery(l,mid,lc(now),x,y,id);\n\telse\tinsquery(mid+1,r,rc(now),x,y,id);\n}\nstruct segTree{\n\tstruct node{\n\t\tLL l,r;\n\t\tLL maxn;\n\t\tLL bmax;\n\t\tLL ta,tb;\n\t}tr[2000005];\n\tbool tag[2000005];\n\tinline void push_up(LL now){tr[now].bmax=max(tr[lc(now)].bmax,tr[rc(now)].bmax),tr[now].maxn=max(tr[lc(now)].maxn,tr[rc(now)].maxn);}\n\tinline void reset(LL u){tr[u].bmax=tr[u].maxn,tr[u].tb=tr[u].ta,tag[u]=true;}\n\tvoid push_tag(LL now,LL ta,LL tb,bool flag=false)\n\t{\n\t\tif(!flag && tr[now].l!=tr[now].r && tag[now])\tpush_down(now,true);\n\t\ttr[now].bmax=max(tr[now].bmax,tr[now].maxn+tb),tr[now].tb=max(tr[now].tb,tr[now].ta+tb),tr[now].maxn+=ta,tr[now].ta+=ta;\n\t}\n\tvoid push_down(LL now,bool flag=false)\n\t{\n\t\tif(tr[now].ta || tr[now].tb)\tpush_tag(lc(now),tr[now].ta,tr[now].tb,flag),push_tag(rc(now),tr[now].ta,tr[now].tb,flag),tr[now].ta=tr[now].tb=0;\n\t\tif(tag[now])\treset(lc(now)),reset(rc(now)),tag[now]=false;\n\t}\n\tvoid build(LL l,LL r,LL now)\n\t{\n\t\ttr[now].l=l,tr[now].r=r;\n\t\ttr[now].ta=tr[now].tb=0;\n\t\tif(l==r)\n\t\t{\n\t\t\ttr[now].maxn=tr[now].bmax=0;\n\t\t\treturn ;\n\t\t}\n\t\tMm;\n\t\tbuild(l,mid,lc(now)),build(mid+1,r,rc(now));\n\t\tpush_up(now);\n\t}\n\tvoid modify(LL now,LL x,LL y,LL k)\n\t{\n\t\tLL l=tr[now].l,r=tr[now].r;\n\t\tif(x<=l && r<=y)\treturn push_tag(now,k,k);\n\t\tpush_down(now);\n\t\tMm;\n\t\tif(x<=mid)\tmodify(lc(now),x,y,k);\n\t\tif(mid<y)\tmodify(rc(now),x,y,k);\n\t\tpush_up(now);\n\t}\n\tLL query(LL now,LL x,LL y)\n\t{\n\t\tLL l=tr[now].l,r=tr[now].r;\n\t\tif(x<=l && r<=y)\treturn tr[now].bmax;\n\t\tpush_down(now);\n\t\tMm;\n\t\tLL ret=0;\n\t\tif(x<=mid)\tret=max(query(lc(now),x,y),ret);\n\t\tif(mid<y)\tret=max(query(rc(now),x,y),ret);\n\t\treturn ret;\n\t}\n}segt;\nvector<LL> catQ[50005],add[50005],sub[50005];\nvoid Solve(LL now,LL l,LL r)\n{\n\tMm;\n\tfor(auto id:trm[now])\tsegt.modify(1,mdf[id].rp,mdf[id].rq,mdf[id].v);\n\tif(l^r)\tSolve(lc(now),l,mid),Solve(rc(now),mid+1,r);\n\tif(req[now].empty())\n\t{\n\t\tfor(auto id:trm[now])\tsegt.modify(1,mdf[id].rp,mdf[id].rq,-mdf[id].v);\n\t\treturn ;\n\t}\n\tfor(auto id:req[now])\tcatQ[qry[id].lp].push_back(id),catQ[qry[id].lq].push_back(id);\n\tfor(auto id:tre[now])\n\t{\n\t\tLL L=mdf[id].lp,R=mdf[id].lq;\n\t\tif(R<=mid)\n\t\t{\n\t\t\tadd[R].push_back(id);\n\t\t\tsub[max(L-1,l-1)].push_back(id);\n\t\t}\n\t\telse if(L>mid)\n\t\t{\n\t\t\tadd[L].push_back(id);\n\t\t\tsub[min(R+1,r+1)].push_back(id);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tadd[mid].push_back(id);\n\t\t\tadd[mid+1].push_back(id);\n\t\t\tsub[max(L-1,l-1)].push_back(id);\n\t\t\tsub[min(R+1,r+1)].push_back(id);\n\t\t}\n\t}\n\tsegt.reset(1);\n\tfor(LL i=mid;i>=l-1;--i)\n\t{\n\t\tfor(auto id:sub[i])\tsegt.modify(1,mdf[id].rp,mdf[id].rq,-mdf[id].v);\n\t\tfor(auto id:add[i])\tsegt.modify(1,mdf[id].rp,mdf[id].rq,mdf[id].v);\n\t\tif(i!=l-1)\tfor(auto id:catQ[i])\tans[id]=max(ans[id],segt.query(1,qry[id].rp,qry[id].rq));\n\t}\n\tsegt.reset(1);\n\tfor(LL i=mid+1;i<=r+1;++i)\n\t{\n\t\tfor(auto id:sub[i])\tsegt.modify(1,mdf[id].rp,mdf[id].rq,-mdf[id].v);\n\t\tfor(auto id:add[i])\tsegt.modify(1,mdf[id].rp,mdf[id].rq,mdf[id].v);\n\t\tif(i!=r+1)\tfor(auto id:catQ[i])\tans[id]=max(ans[id],segt.query(1,qry[id].rp,qry[id].rq));\n\t}\n\tfor(LL i=l;i<=r;++i)\tcatQ[i].clear();\n\tfor(LL i=l-1;i<=r+1;++i)\tsub[i].clear(),add[i].clear();\n\tfor(auto id:trm[now])\tsegt.modify(1,mdf[id].rp,mdf[id].rq,-mdf[id].v);\n}\n```",
        "postTime": 1648990872,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "1. \u4eba\u54c1rmq"
    },
    {
        "content": "**P6109** \u9898\u89e3\u3002\n\n\u96be\u5ea6\u4e3b\u8981\u96c6\u4e2d\u5728\u5b9e\u73b0\u4e0e\u60f3\u5230\u732b\u6811\u4e24\u4e2a\u73af\u8282\u3002\n\n~~\u6bd5\u7adf\u60f3\u5230\u732b\u6811\u8fd9\u4e2a\u9898\u5c31\u7ed3\u675f\u4e86\uff0c\u81f3\u5c11\u4e2a\u4eba\u662f\u8fd9\u6837\u7684\u3002~~\n\n---------------------------------------------------------\n\n\u8003\u8651\u95ee\u9898\u770b\u4f3c\u4e09\u7ef4\uff0c**\u4f46\u662f\u4fee\u6539\u64cd\u4f5c\u5168\u5728\u67e5\u8be2\u64cd\u4f5c\u524d\u9762\uff0c\u6240\u4ee5\u95ee\u9898\u662f\u4e8c\u7ef4\u7684\u3002**\n\n\u89c2\u5bdf $n \\leq 5 \\times 10 ^ 4,m \\leq 5 \\times 10 ^ 5$\uff0c\u731c\u6d4b\u6b63\u89e3\u590d\u6742\u5ea6\u662f $O(n \\log ^ 2 n + m \\log n)$ \u4e4b\u7c7b\u7684\uff0c\u81f3\u5c11 $n,m$ \u644a\u7684\u4e0d\u5e73\u8861\u3002\n\n\u8003\u8651\u82e5\u8be2\u95ee\u5f62\u5f0f\u662f\u4e00\u4e2a\u4e00\u7ef4\u4e3a\u524d\u7f00\u7684\u77e9\u5f62 $[(1,r),(L,R)]$\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6240\u6709\u4fee\u6539\u62c6\u5206\u6210 $(l,n,L,R,x)$ \u4ee5\u53ca $(r + 1,n,L,R,-x)$ \u7684\u5f62\u5f0f\uff0c\u5373**\u5c06\u7b2c\u4e00\u7ef4\u770b\u6210\u65f6\u95f4\u7ef4\uff0c\u7ef4\u62a4\u7b2c\u4e8c\u7ef4\u5728\u6bcf\u4e2a\u65f6\u523b\u65f6\u7684\u60c5\u51b5**\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u4e00\u7ef4\u524d\u7f00\u77e9\u5f62\uff0c\u8fd9\u4e1c\u897f\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u5386\u53f2\u6700\u503c\uff0c\u53ef\u4ee5\u901a\u8fc7\u5409\u53f8\u673a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7531\u4e8e\u5409\u53f8\u673a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u5386\u53f2\u7248\u672c\u662f\u57fa\u4e8e\u6bcf\u4e00\u6b21\u64cd\u4f5c\u7684\u5386\u53f2\u4fe1\u606f\uff0c\u53ef\u662f\u6211\u4eec\u5728\u8fd9\u9053\u9898**\u9700\u8981\u7684\u662f\u6bcf\u4e2a\u65f6\u523b\u7684\u5e8f\u5217\u4fe1\u606f\uff0c\u800c\u6bcf\u4e2a\u65f6\u523b\u53ef\u80fd\u5b58\u5728\u5f88\u591a\u6b21\u64cd\u4f5c**\u3002\u8003\u8651\u5230\u6211\u4eec\u7ef4\u62a4\u7684\u662f\u533a\u95f4\u6700\u5927\u503c\uff0c\u800c\u64cd\u4f5c\u53ea\u6709\u533a\u95f4\u52a0\u51cf\uff0c\u6240\u4ee5\u6211\u4eec\u8ba9\u4e00\u4e2a\u65f6\u523b\u52a0\u7684\u6570\u662f\u8d1f\u6570\u7684\u64cd\u4f5c\u5148\u8fdb\u884c\uff0c\u6b63\u6570\u7684\u64cd\u4f5c\u540e\u8fdb\u884c\uff0c\u624d\u53ef\u4ee5\u4fdd\u8bc1\u6700\u540e\u7ef4\u62a4\u7684\u4fe1\u606f\u662f\u6b63\u786e\u7684\u3002\u4e2a\u4eba\u5728\u8fd9\u91cc\u8c03\u4e86 1h \u5de6\u53f3\uff0c\u5e0c\u671b\u770b\u5230\u8fd9\u7bc7\u9898\u89e3\u7684\u540c\u5b66\u80fd\u7559\u4e2a\u5fc3\u3002\n\n\u4e00\u7ef4\u524d\u7f00\u77e9\u5f62\u80fd\u505a\uff0c\u4e00\u7ef4\u540e\u7f00\u77e9\u5f62\u4e00\u5b9a\u4e5f\u80fd\u505a\uff0c\u8003\u8651\u5230\u732b\u6811\u7684\u4f7f\u7528\u6761\u4ef6\uff1a\u652f\u6301\u5feb\u901f\u7684\u4e8c\u533a\u95f4\u5408\u5e76\uff0c\u5e76\u4e14\u5408\u5e76\u7684\u662f\u524d\u7f00\u4fe1\u606f\u4e0e\u540e\u7f00\u4fe1\u606f\uff0c\u4e8e\u662f\u76f4\u63a5\u5f80\u4e0a\u5957\u5c31\u597d\u4e86\u3002\n\n\u5bf9\u4e8e\u67e5\u8be2\uff0c\u663e\u7136\u653e\u5728 $[l,r]$ \u4e00\u4e2a\u732b\u6811\u8282\u70b9\u4e0a\u56de\u7b54\uff0c\u5e76\u4e14\u8be5\u8282\u70b9\u7684\u4e2d\u70b9\u88ab $[l,r]$ \u6240\u8de8\u8d8a\uff0c\u8be5\u67e5\u8be2\u7684\u7b54\u6848\u62c6\u6210\u4e86 $[l,mid]$ \u7684\u540e\u7f00\u4fe1\u606f\u4e0e $[mid + 1,r]$ \u7684\u524d\u7f00\u4fe1\u606f\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u533a\u95f4\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ecf\u8fc7\u7684\u8282\u70b9\u4e0d\u8d85\u8fc7 $O(\\log n)$ \u4e2a\u7684\u6027\u8d28\u3002\u82e5\u5f53\u524d\u4fee\u6539\u64cd\u4f5c\u7684 $[l,r]$ \u5b8c\u5168\u8986\u76d6\u4e86\u5de6/\u53f3\u8282\u70b9\uff0c\u5c31\u76f4\u63a5\u4e0d\u56de\u64a4\u8fd9\u4e2a\u4fee\u6539\u64cd\u4f5c\u7ee7\u7eed\u5411\u4e0b\u8d70\uff1b\u82e5\u672a\u5b8c\u5168\u8986\u76d6\u5de6/\u53f3\u8282\u70b9\u5c31\u770b\u4e0e\u5de6\u53f3\u8282\u70b9\u662f\u5426\u6709\u4ea4\uff0c\u5c06\u64cd\u4f5c\u62c6\u5f00\u7ee7\u7eed\u4e0b\u653e\u3002\n\n\u5728\u6bcf\u4e2a\u8282\u70b9\u524d\u7f00\u77e9\u5f62/\u540e\u7f00\u77e9\u5f62\u67e5\u8be2\u7684\u64cd\u4f5c\u5373\u53ef\u3002\u4e0d\u8fc7\u5728\u4e00\u4e2a\u8282\u70b9\u5f80\u4e0b\u8d70\u65f6\uff0c\u6211\u4eec\u8981\u56de\u64a4\u5f53\u524d\u8282\u70b9\u8fdb\u884c\u7684\u6240\u6709\u975e\u5b8c\u5168\u8986\u76d6\u4e0b\u8d70\u8282\u70b9\u7684\u4fee\u6539\u64cd\u4f5c\uff0c\u5e76\u6253\u4e0a\u4e00\u4e2a\u5c06\u5f53\u524d\u8282\u70b9\u5386\u53f2\u7248\u672c\u6700\u5927\u503c\u66f4\u65b0\u4e3a\u5f53\u524d\u8282\u70b9\u8282\u70b9\u6700\u5927\u503c\u7684\u6807\u8bb0\uff08\u5373\u5220\u9664\u5f53\u524d\u8282\u70b9\u7684\u6240\u6709\u5386\u53f2\u4fe1\u606f\uff0c\u56e0\u4e3a\u4e0b\u4e00\u4e2a\u8282\u70b9\u4e0d\u9700\u8981\u7528\u5230\u5f53\u524d\u8282\u70b9\u7684\u5386\u53f2\u6700\u503c\u4fe1\u606f\uff09\uff1b\u540c\u7406\uff0c\u5728\u5904\u7406\u5b8c\u4e00\u4e2a\u8282\u70b9\u8981\u56de\u6eaf\u65f6\uff0c\u6211\u4eec\u4e5f\u8981\u6253\u4e0a\u4e00\u4e2a\u5c06\u5f53\u524d\u8282\u70b9\u5386\u53f2\u7248\u672c\u6700\u5927\u503c\u66f4\u65b0\u4e3a\u5f53\u524d\u8282\u70b9\u6700\u5927\u503c\u7684\u6807\u8bb0\u3002\n\n\u5173\u4e8e\u8fd9\u4e2a\u6807\u8bb0\u600e\u4e48\u6253\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u5f53\u524d\u8282\u70b9\u4e0b\u653e\u5230\u513f\u5b50\uff0c\u513f\u5b50\u4e0b\u653e\u5230\u5b59\u5b50\uff0c\u8fdb\u884c\u4e24\u5c42\u4e0b\u653e\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u7b80\u77ed\u4f46\u5e38\u6570\u6781\u5927\u7684\u5b9e\u73b0\uff1a\n\n```cpp\ninline void upd(int p,int fa)\n{\n\tif(!t[fa].histag && !t[fa].tag) return;\n\tt[p].hismaxn = max(t[p].hismaxn , t[p].maxn + t[fa].histag);\n\tt[p].histag = max(t[p].histag , t[p].tag + t[fa].histag);\n\tt[p].maxn += t[fa].tag , t[p].tag += t[fa].tag;\n}\ninline void reg(int p,int fa)\n{\n\tupd(p , fa);\n\tt[p].hismaxn = t[p].maxn , t[p].histag = 0 , t[p].clr = 1;\n}\ninline void Upd(int p,int fa)//\u5bf9\u4e00\u4e2a\u70b9\u6253\u4e0a\u7236\u4eb2\u7684\u6807\u8bb0\uff0c\u6ce8\u610f\u5bf9\u6574\u4f53\u6253\u5386\u53f2\u4fe1\u606f\u5220\u9664\u65f6\u8981\u987a\u624b\u5199\u4e00\u4e2a Upd(1 , 0) \n{\n\tif(t[p].clr)//\u8868\u793a\u5f53\u524d\u662f\u5426\u6709\u5c06\u5f53\u524d\u8282\u70b9\u5386\u53f2\u7248\u672c\u6700\u5927\u503c\u66f4\u65b0\u4e3a\u5f53\u524d\u8282\u70b9\u6700\u5927\u503c\u7684\u6807\u8bb0\n\t{\n\t\treg(ls(p) , p);\n\t\treg(rs(p) , p);\n\t\tt[p].clr = t[p].tag = t[p].histag = 0;\n\t}\n\tupd(p , fa);\n}\ninline void push_down(int p)\n{\n\tUpd(ls(p) , p) , Upd(rs(p) , p);\n\tt[p].tag = t[p].histag = 0;\n}\nvoid Base()//\u5bf9\u6574\u4f53\u6253\u4e00\u4e2a\u5c06\u5f53\u524d\u5386\u53f2\u7248\u672c\u6700\u5927\u503c\u66f4\u65b0\u4e3a\u8282\u70b9\u6700\u5927\u503c\u7684\u6807\u8bb0\n{\n\tt[1].clr = 1 , t[1].hismaxn = t[1].maxn , t[1].histag = 0;\n\tUpd(1 , 0);\n}\n```\n\n\u6309\u7167\u4e0a\u8ff0\u64cd\u4f5c\u6a21\u62df\u9898\u610f\u5373\u53ef\u3002\n\n\u5b58\u5728 $O(n)$ \u7a7a\u95f4\u590d\u6742\u5ea6\u7684\u5b9e\u73b0\u65b9\u6cd5\uff0c\u4f46\u4e3a\u56fe\u65b9\u4fbf\u53ef\u4ee5\u5bf9\u6bcf\u5c42\u8282\u70b9\u5f00\u4e00\u4e2a vector \u5b58\u653e\u64cd\u4f5c\u3002\n\n\u5982\u679c\u88ab\u5361\u5e38\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u52a0\u5feb\u8bfb\uff0cinline\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log ^ 2 n + m \\log n)$\u3002",
        "postTime": 1647934170,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u8747\u5934\u5c0f\u5229\uff0c\u4e0d\u8981\u4e5f\u53ef"
    },
    {
        "content": "\u8003\u8651\u5bf9 $x$ \u8f74\u626b\u63cf\u7ebf\uff1a\u5f53\u626b\u5230\u77e9\u5f62\u7684 $l_x$ \u7684\u65f6\u5019\uff0c\u5c06 $[l_y,r_y]$ \u52a0\u4e0a $w$\uff0c\u800c\u5f53\u626b\u5230 $r_x+1$ \u7684\u65f6\u5019\uff0c\u5c06 $[l_y,r_y]$ \u51cf\u53bb $w$\uff1b\u76f8\u5f53\u4e8e\u5b9e\u65f6\u7ef4\u62a4\u4e86\uff0c\u626b\u63cf\u7ebf\u6240\u5728\u7684\u90a3\u4e00\u884c\u4e0a\u7684 $a$ \u503c.\n\n\u82e5\u8be2\u95ee\u4ec5\u6709\u4e00\u884c\uff0c\u5229\u7528\u7ebf\u6bb5\u6811\u76f4\u63a5\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c\u5373\u53ef.\n\n\u82e5\u8be2\u95ee\u5728 $x$ \u8f74\u4e0a\u662f\u4e00\u4e2a\u524d\u7f00\uff0c\u53ef\u4ee5\u518d\u7ef4\u62a4\u5386\u53f2\u6700\u5927\u503c\u4fe1\u606f\uff0c\u76f4\u63a5\u67e5\u8be2\u5386\u53f2\u6700\u5927\u503c\u5373\u53ef.\n\n\u8003\u8651\u5206\u6cbb\uff0c\u6309\u7167\u6307\u5b9a\u4f4d\u7f6e $\\lambda$ \u5212\u5206\uff0c\u8ba9\u7ebf\u6bb5\u6811\u4ece\u4f4d\u7f6e $\\lambda$ \u5f00\u59cb\u8bb0\u5f55\u5386\u53f2\u6700\u5927\u503c\uff1b\u8fd9\u6837\uff0c\u5bf9\u4e8e\u8be2\u95ee\u77e9\u5f62 $[l_x,r_x]$\uff0c\u5c31\u80fd\u591f\u5904\u7406\u6389 $[\\lambda,r_x]$ \u8fd9\u4e9b\u884c\u8fd9\u90e8\u5206\u7684\u8be2\u95ee.\n\n\u5229\u7528\u732b\u6811\u6765\u523b\u753b\u8fd9\u4e2a\u5206\u6cbb\uff0c\u5728 $x$ \u8f74\u4e0a\u5f00\u732b\u6811\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u7ed3\u70b9 $[l_x,r_x]$\uff0c\u4ee4\u5176\u4ece $l_x$ \u5f00\u59cb\u8bb0\u5f55\u5386\u53f2\u6700\u5927\u503c\uff0c\u4e00\u76f4\u8bb0\u5f55\u5230 $r_x$ \u4e3a\u6b62\uff1b\u6bcf\u4e2a\u8be2\u95ee\u77e9\u5f62 $[l_x,r_x]$\uff0c\u4f1a\u5728\u732b\u6811\u4e0a\u88ab\u53cd\u6620\u4e3a\uff0c\u4e00\u4e2a\u7ed3\u70b9\u4ee3\u8868\u533a\u95f4\u7684\u4e00\u6bb5\u540e\u7f00\u3001\u548c\u53e6\u4e00\u4e2a\u7ed3\u70b9\u4ee3\u8868\u533a\u95f4\u7684\u4e00\u6bb5\u524d\u7f00\uff0c\u4ee5\u8fd9\u4e2a\u524d\u7f00\u4e3a\u4f8b\uff0c\u76f8\u5f53\u4e8e\u626b\u63cf\u7ebf\u5728 $[l_x,i]$ \u8fd9\u4e9b\u65f6\u523b\u4e2d\uff0c\u5728 $[l_y,r_y]$ \u8fd9\u6bb5\u533a\u95f4\u4e0a\u7684\u5386\u53f2\u6700\u5927\u503c\uff1b\u7531\u4e8e\u8be5\u7ed3\u70b9\u6b63\u662f\u4ece $l_x$ \u5f00\u59cb\u8bb0\u5f55\u7684\uff0c\u5728 $i$ \u65f6\u523b\u5bf9\u8be5\u7ed3\u70b9\u4ee3\u8868\u7684\u7ebf\u6bb5\u6811\u8fdb\u884c\u67e5\u8be2\u5373\u53ef.\n\n\u5728\u5177\u4f53\u5b9e\u73b0\u4e2d\uff0c\u4e0d\u80fd\u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u53ef\u4ee5\u8003\u8651\u5bf9\u732b\u6811\u7684\u6bcf\u4e00\u5c42\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u5171\u8ba1 $\\log n+1$ \u68f5\uff1a\u626b\u63cf\u7ebf\u626b\u5230 $i$ \u65f6\uff0c\u5bf9\u4e8e\u6240\u6709\u6ee1\u8db3\u300c\u8be5\u5c42\u4e0a\u5b58\u5728\u7ed3\u70b9\uff0c\u5176\u5de6\u7aef\u70b9\u6070\u597d\u4e3a $i$\u300d\u7684\u5c42\uff0c\u8ba9\u8be5\u5c42\u4ee3\u8868\u7684\u7ebf\u6bb5\u6811\u201c\u5fd8\u8bb0\u5386\u53f2\u201d\uff0c\u5373\u5c06\u5386\u53f2\u6700\u5927\u503c\u6e05\u96f6\uff1b\u67e5\u8be2\u65f6\uff0c\u53ea\u5bf9\u67e5\u8be2\u533a\u95f4\u6240\u6302\u7ed3\u70b9\u6240\u5728\u5c42\uff0c\u4ee3\u8868\u7684\u90a3\u4e00\u68f5\u7ebf\u6bb5\u6811\u8fdb\u884c\u67e5\u8be2\u5373\u53ef.\n\n\u6b64\u9898\u65f6\u9650\u8f83\u7d27\uff0c\u7ef4\u62a4\u5386\u53f2\u6700\u5927\u503c\u6700\u597d\u4e0d\u5199\u77e9\u9635\u800c\u662f\u5199\u4e0b\u4f20\u6807\u8bb0\uff1b\u5bf9\u4e8e\u201c\u5fd8\u8bb0\u5386\u53f2\u201d\u7684\u64cd\u4f5c\uff0c\u53ea\u9700\u8981\u5bf9\u5e8f\u5217\u4e2d\u7684\u6240\u6709\u503c\u90fd\u52a0\u4e0a\u5145\u5206\u5927 $+\\Delta$\uff0c\u968f\u540e\u8be2\u95ee\u65f6\u518d $-\\Delta$ \u5373\u53ef\uff0c\u5373\u53ef\u8ba9\u4ee5\u524d\u7684\u5386\u53f2\u6700\u5927\u503c\u6e6e\u6ca1.\n\n\u8be5\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(m\\log^2 n+(n+q)\\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n\\log n)$.\n\n\u4ee3\u7801\u5b9e\u73b0(\u5177\u6709\u6781\u5176\u4e25\u91cd\u7684\u4e2a\u4eba\u98ce\u683c)\uff1ahttps://www.luogu.com.cn/paste/qn046lm7.",
        "postTime": 1647414713,
        "uid": 130897,
        "name": "\u7480\u74a8\u661f\u7a7a1",
        "ccfLevel": 9,
        "title": "\u6d1b\u8c37 P6109 \u9898\u89e3"
    },
    {
        "content": "\u600e\u4e48\u4e00\u7247\u7684\u7ebf\u6bb5\u6811\u5206\u6cbb\u554a\uff08\uff09\n\n---\n\u7ecf\u5178\u4e00\u7ef4\u5206\u6cbb\u9898\u3002\n\n\u5148\u4e00\u7ef4\u5206\u6cbb\u77e9\u5f62 $4-side$ \u53d8 $3-side$\uff0c\u7136\u540e\u76f4\u63a5\u5206\u6cbb\u5206\u754c\u5f80\u4e24\u8fb9\u505a\u626b\u63cf\u7ebf\u3002\u5dee\u5206\u533a\u95f4\u53d8\u6210 $2-side$ \u76f4\u63a5\u505a\u3002\n\n\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\u6240\u6c42\u7684\u5373\u662f\u53e6\u4e00\u7ef4\u7684\u533a\u95f4\u5386\u53f2\u6700\u5927\u503c\u3002\u7b80\u5355\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u53c2\u8003 [P4314 CPU \u76d1\u63a7](https://www.luogu.com.cn/problem/P4314)\u3002\n\n\u5b9e\u9645\u64cd\u4f5c\u4e2d\u9700\u8981\u63d0\u524d\u5904\u7406\u597d\u5230\u5f53\u524d\u5206\u754c\u7684\u524d\u7f00/\u540e\u7f00\u548c\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u5206\u5411\u5de6\u548c\u5411\u53f3\u5206\u522b\u5206\u6cbb\u5b9e\u73b0\uff0c\u91c7\u7528\u7c7b\u4f3c CDQ \u7684\u7ed3\u6784\u5373\u53ef\u3002\n\n\u8fc7\u7a0b\u4e2d\u8fd8\u9700\u8981\u4e00\u4e2a\u6e05\u7a7a\u5386\u53f2\u6700\u5927\u503c\uff08\u8d4b\u4e3a\u5f53\u524d\u503c\uff09\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u53e6\u52a0\u4e00\u4e2a $cov$ \u6807\u8bb0\u5b9e\u73b0\u3002\u6ce8\u610f\u8fd9\u4e2a $cov$ \u6253\u4e0a\u65f6\u52a0\u6cd5\u7684 $laz$ \u6807\u8bb0\u5fc5\u987b\u4e3a0\uff0c\u6240\u4ee5\u8981\u5148\u4e0b\u4f20\u5b50\u8282\u70b9**\u52a0\u6cd5**\u6807\u8bb0\u3002\u6ce8\u610f\u6b64\u5904\u4e0d\u5fc5\u5411\u4e0b\u9012\u5f52\uff0c\u76f4\u63a5\u4e0b\u4f20 $laz$ \u5e76\u4e0d\u5f71\u54cd\u6b63\u786e\u6027\uff0c\u56e0\u4e3a\u5386\u53f2\u6700\u5927\u503c\u6700\u7ec8\u90fd\u4f1a\u88ab\u6e05\u7a7a\u3002\n\n\u4ee5\u53ca\u8981\u5148\u52a0\u8d1f\u6570\u518d\u52a0\u6b63\u6570\uff0c\u5426\u5219\u53ef\u80fd\u5bfc\u81f4\u5386\u53f2\u6700\u5927\u503c\u9519\u8bef\u3002\n\n## Code\n\u4e0d\u5361\u5e38\u3002T \u4e86\u51e0\u4e4e\u90fd\u662f\u6b63\u786e\u6027\u95ee\u9898\u3002\n```cpp\ntypedef long long ll;\nstruct data{\n\tint l,r,x;\n\tdata(int a=0,int b=0,int c=0){\n\t\tl=a,r=b,x=c;\n\t}\n\tbool operator <(const data &v)const{\n\t\treturn x<v.x;\n\t}\n}u;\nvector<data>a[2][50010];\nvector<data>b[2][50010];\nbool lf[200010];\nstruct seg{\n\tll tr1[200010];\n\tll tr2[200010];\n\tll laz1[200010];\n\tll laz2[200010];\n\tbool cov[200010];\n\tvoid add(int id){\n\t\tif(lf[id]) return;\n\t\tint ls=id<<1,rs=id<<1|1;\n\t\ttr2[ls]=max(tr2[ls],tr1[ls]+laz2[id]);\n\t\ttr2[rs]=max(tr2[rs],tr1[rs]+laz2[id]);\n\t\ttr1[ls]+=laz1[id];\n\t\ttr1[rs]+=laz1[id];\n\t\tlaz2[ls]=max(laz2[ls],laz1[ls]+laz2[id]);\n\t\tlaz2[rs]=max(laz2[rs],laz1[rs]+laz2[id]);\n\t\tlaz1[ls]+=laz1[id];\n\t\tlaz1[rs]+=laz1[id];\n\t\tlaz1[id]=laz2[id]=0;\n\t}\n\tvoid pushdown(int id){\n\t\tint ls=id<<1;\n\t\tint rs=id<<1|1;\n\t\tif(cov[id]){\n\t\t\ttr2[ls]=tr1[ls];\n\t\t\ttr2[rs]=tr1[rs];\n\t\t\tadd(ls),add(rs);\n\t\t\tcov[ls]=cov[rs]=1;\n\t\t\tcov[id]=0;\n\t\t}\n\t\tadd(id);\n\t}\n\tvoid update(int id,int l,int r,int ul,int ur,int x){\n\t\tif(ul<=l&&r<=ur){\n\t\t\ttr1[id]+=x;\n\t\t\ttr2[id]=max(tr1[id],tr2[id]);\n\t\t\tlaz1[id]+=x;\n\t\t\tlaz2[id]=max(laz1[id],laz2[id]);\n\t\t\treturn;\n\t\t}\n\t\tpushdown(id);\n\t\tint mid=(l+r)>>1;\n\t\tif(ul<=mid) update(id<<1,l,mid,ul,ur,x);\n\t\tif(ur>mid) update(id<<1|1,mid+1,r,ul,ur,x);\n\t\ttr1[id]=max(tr1[id<<1],tr1[id<<1|1]);\n\t\ttr2[id]=max(tr2[id<<1],tr2[id<<1|1]);\n\t}\n\tll query(int id,int l,int r,int ql,int qr){\n\t\tif(ql<=l&&r<=qr) return tr2[id];\n\t\tpushdown(id);\n\t\tll ans=0;\n\t\tint mid=(l+r)>>1;\n\t\tif(ql<=mid) ans=max(ans,query(id<<1,l,mid,ql,qr));\n\t\tif(qr>mid) ans=max(ans,query(id<<1|1,mid+1,r,ql,qr));\n\t\treturn ans;\n\t}\n\tvoid cover(){\n\t\tpushdown(1);\n\t\ttr2[1]=tr1[1];\n\t\tcov[1]=true;\n\t}\n}tree[2];\nbool vis[2][500010];\nint p[500010][2];\nll ans[500010];\nint n,m,q;\nvoid build(int id,int l,int r){\n\tif(l==r){\n\t\tlf[id]=true;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(id<<1,l,mid);\n\tbuild(id<<1|1,mid+1,r);\n}\nvoid solve(int l,int r,int tp){\n\tif(l==r){\n\t\tfor(int i=0;i<a[tp][l].size();i++){\n\t\t\tu=a[tp][l][i];\n\t\t\ttree[tp].update(1,1,n,u.l,u.r,u.x);\n\t\t}\n\t\ttree[tp].cover();\n\t\tfor(int i=0;i<b[tp][l].size();i++){\n\t\t\tu=b[tp][l][i];\n\t\t\tif(vis[tp][u.x]) continue;\n\t\t\tans[u.x]=max(ans[u.x],tree[tp].query(1,1,n,u.l,u.r));\n\t\t\tvis[tp][u.x]=true;\n\t\t}\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\ttp==0?solve(l,mid,tp):solve(mid+1,r,tp);\n\tif(tp==0){\n\t\tfor(int i=mid+1;i<=r;++i){\n\t\t\tfor(int j=0;j<a[tp][i].size();++j){\n\t\t\t\tu=a[tp][i][j];\n\t\t\t\ttree[tp].update(1,1,n,u.l,u.r,u.x); \n\t\t\t}\n\t\t\tif(i==mid+1) tree[tp].cover();\n\t\t\tfor(int j=0;j<b[tp][i].size();++j){\n\t\t\t\tu=b[tp][i][j];\n\t\t\t\tif(vis[tp][u.x]||p[u.x][0]>mid) continue;\n\t\t\t\tans[u.x]=max(ans[u.x],tree[tp].query(1,1,n,u.l,u.r));\n\t\t\t\tvis[tp][u.x]=true;\n\t\t\t}\n\t\t}\n\t\tfor(int i=r;i>mid;--i)\n\t\tfor(int j=a[tp][i].size()-1;j>=0;--j){\n\t\t\tu=a[tp][i][j];\n\t\t\ttree[tp].update(1,1,n,u.l,u.r,-u.x);\n\t\t}\n\t}\n\telse{\n\t\tfor(int i=mid;i>=l;--i){\n\t\t\tfor(int j=0;j<a[tp][i].size();++j){\n\t\t\t\tu=a[tp][i][j];\n\t\t\t\ttree[tp].update(1,1,n,u.l,u.r,u.x); \n\t\t\t}\n\t\t\tif(i==mid) tree[tp].cover();\n\t\t\tfor(int j=0;j<b[tp][i].size();++j){\n\t\t\t\tu=b[tp][i][j];\n\t\t\t\tif(vis[tp][u.x]||p[u.x][1]<=mid) continue;\n\t\t\t\tans[u.x]=max(ans[u.x],tree[tp].query(1,1,n,u.l,u.r));\n\t\t\t\tvis[tp][u.x]=true;\n\t\t\t}\n\t\t}\n\t\tfor(int i=l;i<=mid;++i)\n\t\tfor(int j=a[tp][i].size()-1;j>=0;--j){\n\t\t\tu=a[tp][i][j];\n\t\t\ttree[tp].update(1,1,n,u.l,u.r,-u.x);\n\t\t}\n\t}\n\ttp==0?solve(mid+1,r,tp):solve(l,mid,tp);\n}\ninline int read(){\n\tchar ch=getchar();\n\tll s=0,w=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){s=s*10+ch-'0';ch=getchar();}\n\treturn s*w;\n}\nint main(){\n\tint l1,l2,r1,r2,x;\n\tn=read(),m=read(),q=read();\n\tfor(int i=1;i<=m;++i){\n\t\tl1=read(),l2=read(),r1=read(),r2=read(),x=read();\n\t\ta[0][l1].push_back(data(l2,r2,x));\n\t\ta[0][r1+1].push_back(data(l2,r2,-x));\n\t\ta[1][r1].push_back(data(l2,r2,x));\n\t\ta[1][l1-1].push_back(data(l2,r2,-x));\n\t}\n\tfor(int i=1;i<=q;++i){\n\t\tl1=read(),l2=read(),r1=read(),r2=read();\n\t\tb[0][r1].push_back(data(l2,r2,i));\n\t\tb[1][l1].push_back(data(l2,r2,i));\n\t\tp[i][0]=l1,p[i][1]=r1;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tsort(a[0][i].begin(),a[0][i].end());\n\t\tsort(a[1][i].begin(),a[1][i].end());\n\t}\n\tbuild(1,1,n);\n\tsolve(1,n,0);\n\tsolve(1,n,1);\n\tfor(int i=1;i<=q;++i)\n\tprintf(\"%lld\\n\",ans[i]);\n} \n```",
        "postTime": 1644933658,
        "uid": 90869,
        "name": "tylon2006",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6109 [Ynoi2009] rprmq1"
    },
    {
        "content": "\u5bf9\u4e8e\u4e00\u822c\u7684\u77e9\u5f62\u4fee\u3001\u77e9\u5f62\u67e5\u95ee\u9898\u53ef\u4ee5\u770b\u505a\u4e09\u7ef4\uff1a\u6a2a\u5750\u6807\u3001\u7eb5\u5750\u6807\u3001\u65f6\u95f4\u7ef4\u3002\u4f46\u662f\u672c\u9898\u6240\u6709\u67e5\u8be2\u90fd\u5728\u4fee\u6539\u4e4b\u540e\uff0c\u4e0d\u5b58\u5728\u65f6\u95f4\u7ef4\u3002\n\n\u9996\u5148\u77e9\u5f62 $max$ \u4e0d\u65b9\u4fbf\u5dee\u5206\u5904\u7406\uff0c\u4f46\u662f\u53ef\u4ee5\u8f7b\u677e\u7531\u4e00\u6bb5\u524d\u7f00\u77e9\u5f62\u548c\u4e00\u6bb5\u540e\u7f00\u77e9\u5f62\u5408\u5e76\uff0c\u56e0\u6b64\u8003\u8651\u5bf9\u5176\u4e2d\u4e00\u7ef4\u732b\u6811\u5206\u6cbb\uff0c\u8fd9\u91cc\u5047\u8bbe\u5bf9\u5217\u8fdb\u884c\u732b\u6811\u5206\u6cbb\u3002\n\n\u5bf9\u4e8e\u732b\u6811\u5206\u6cbb\u7684\u7b80\u5355\u89e3\u91ca\uff1a\n\n\u5176\u5b9e\u5c31\u662f\u5e8f\u5217\u4e0a\u7684\u70b9\u5206\u6cbb\u3002\u5f53\u6211\u4eec\u5904\u7406\u4f4d\u4e8e\u533a\u95f4 $[L,R]$ \u5185\u7684\u6240\u6709\u8be2\u95ee\uff08\u5373 $L\u2264l\u2264r\u2264R$ \u7684\u8be2\u95ee $[l,r]$\uff09\u65f6\uff0c\u5b9a\u4e49 $mid$ \u4e3a $[L,R]$ \u4e2d\u70b9\uff0c\u5219\u8be2\u95ee\u5206\u6210\u4e09\u7c7b\uff1a\u5305\u542b\u4e8e $[L,mid]$\u3001\u5305\u542b\u4e8e $[mid+1,r]$ \u548c\u8de8\u8fc7\u533a\u95f4\u4e2d\u70b9\u7684\u3002\u524d\u4e24\u7c7b\u5206\u6cbb\u4e0b\u53bb\u8ba1\u7b97\uff0c\u4ec5\u5904\u7406\u7b2c\u4e09\u7c7b\u5373\u53ef\u3002\u8bb0\u5f55\u5206\u6cbb\u7ed3\u6784\u4f1a\u5f62\u6210\u4e00\u9897\u7ebf\u6bb5\u6811\u3002\n\n\u5bf9\u4e8e\u8de8\u8fc7\u533a\u95f4\u4e2d\u70b9\u7684\u8be2\u95ee\uff0c\u53ef\u4ee5\u62c6\u6210 $[L,mid]$ \u7684\u4e00\u6bb5\u540e\u7f00\u533a\u95f4\u548c $[mid+1,r]$ \u7684\u4e00\u6bb5\u524d\u7f00\u533a\u95f4\uff0c\u4e24\u8fb9\u7b54\u6848\u53d6\u4e2a $max$ \u5373\u4e3a\u6700\u7ec8\u7b54\u6848\u3002\n\n\u8fd9\u9053\u9898\u6211\u4eec\u5bf9\u5217\u5206\u6cbb\uff0c\u67e5\u8be2\u82e5\u5e72\u53f3\u534a\u533a\u95f4\u7684\u524d\u7f00\u77e9\u5f62\u3001\u5de6\u534a\u533a\u95f4\u7684\u540e\u7f00\u77e9\u5f62\u3002\u8fd9\u91cc\u4ec5\u8bf4\u660e\u5982\u4f55\u7b97\u53f3\u534a\u533a\u95f4\u524d\u7f00\u77e9\u5f62\u7684\u8d21\u732e\uff08\u5de6\u534a\u533a\u95f4\u540e\u7f00\u77e9\u5f62\u540c\u7406\uff09\uff1a\n\n\u5bf9\u4fee\u6539\u5dee\u5206\uff0c\u626b\u63cf\u7ebf\u4ece\u5de6\u5230\u53f3\u626b\uff0c\u626b\u5230 $l2$ \u533a\u95f4 $[l1,r1]+1$\uff0c \u626b\u5230 $r2+1$ \u533a\u95f4 $[l1,r1]-1$\u3002\n\n\u8003\u8651\u67e5\u8be2\u540e\u7f00\u77e9\u5f62 $[l1,r1][mid+1,r2]$ \u7684\u610f\u4e49\uff1a**\u4ece $mid+1$ \u5f00\u59cb\u8bb0\u5f55\u7684\u533a\u95f4 $[l1,r1]$ \u5386\u53f2\u6700\u5927\u503c**\u3002\u56e0\u6b64\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u652f\u6301\u533a\u95f4\u52a0\u3001\u5386\u53f2\u6700\u5927\u503c\u67e5\u8be2\u3002\u9700\u8981\u4fdd\u8bc1\u4f4d\u4e8e $[1,mid]$ \u7684\u6240\u6709\u4fee\u6539\u90fd\u88ab\u52a0\u5165\u8fc7\uff0c\u5e76\u5728 $mid+1$ \u5904\u6253\u4e0a\u201c\u5386\u53f2\u4ece\u6b64\u5904\u5f00\u59cb\u201d\u7684\u6807\u8bb0\uff0c\u5b9e\u73b0\u65f6\u628a\u5386\u53f2\u503c\u90fd\u7f6e\u4e3a\u5f53\u524d\u503c\u5373\u53ef\u3002\u4e8e\u662f\u5148\u9012\u5f52\u5de6\u533a\u95f4\uff08\u4fdd\u7559\u4fee\u6539\uff09\uff0c\u518d\u5904\u7406\u8de8\u533a\u95f4\u8be2\u95ee\uff08\u64a4\u9500\u4fee\u6539\uff09\uff0c\u518d\u9012\u5f52\u53f3\u533a\u95f4\uff08\u4fdd\u7559\u4fee\u6539\uff09\u3002\n\n\u590d\u6742\u5ea6\u5206\u6790\uff1a\n\nn \u6b21\u77e9\u5f62\u4fee\u6539\uff0c\u6bcf\u6b21\u4fee\u6539\u90fd\u4f1a\u5728 $O(\\log n)$ \u4e2a\u5206\u6cbb\u8282\u70b9\u4e0a\u9020\u6210 $O(1)$ \u6b21\u7ebf\u6bb5\u6811\u533a\u95f4\u4fee\u6539\uff1b\n\nq \u6b21\u77e9\u5f62\u67e5\u8be2\uff0c\u6bcf\u6b21\u67e5\u8be2\u53ea\u4f1a\u5728\u4e00\u4e2a\u5206\u6cbb\u8282\u70b9\u4e0a\u5bfc\u81f4 $O(1)$ \u6b21\u7ebf\u6bb5\u6811\u67e5\u8be2\u3002\n\n\u56e0\u6b64\u603b\u590d\u6742\u5ea6 $O(n\\log^2n+q\\log n)$\u3002\n\n\u5b9e\u73b0\u7ec6\u8282\uff1a\n1. \u5bf9\u4e8e\u540c\u4e00\u65f6\u523b\u7684\u4fee\u6539\u8981**\u5148\u51cf\u540e\u52a0**\uff01\u7531\u4e8e\u6211\u4eec\u8bb0\u5f55\u7684\u662f\u5386\u53f2\u6700\u5927\u503c\uff0c\u53ef\u4ee5\u7406\u89e3\u6210\u5148\u52a0\u540e\u51cf\u4f1a\u5bfc\u81f4\u51fa\u73b0\u4e00\u4e2a\u5cf0\uff0c\u5cf0\u503c\u4e0d\u5728\u6700\u53f3\u7aef\uff0c\u800c\u5148\u51cf\u540e\u52a0\u5c31\u80fd\u4fdd\u8bc1\u5cf0\u503c\u51fa\u73b0\u5728\u6700\u53f3\u7aef\u3002\n\n2. \u6807\u8bb0\u95ee\u9898\uff1a\uff08\u4ee5\u4e0b\u7528 add \u8868\u793a\u52a0\u64cd\u4f5c\uff0creset \u8868\u793a\u201c\u91cd\u7f6e\u5386\u53f2\u201d\u64cd\u4f5c\uff09\n\n\t\u8003\u8651\u5bf9\u4e00\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\uff0c\u64cd\u4f5c\u4f9d\u6b21\u5f62\u6210\u4e00\u4e2a\u961f\u5217\uff1a\n    \n    add,add,add,......,reset,......,add,add,add\uff08\u961f\u5217\u4e2d\u53ea\u4f1a\u51fa\u73b0\u4e00\u4e2a reset\uff0c\u5426\u5219\u540e\u6765\u7684 reset \u4f1a\u4f7f\u524d\u9762\u7684\u5931\u6548\uff09\u3002\n    \n    \u5bf9\u8282\u70b9 reset \u65f6\u5c06\u524d\u9762\u7684 add \u7acb\u523b\u4e0b\u4f20\uff08\u4e0d\u4f1a\u51fa\u73b0 pushdown \u9012\u5f52\u7684\u60c5\u51b5\uff09\uff0c\u7ebf\u6bb5\u6811\u4e0a\u7684\u52a0\u6cd5\u6807\u8bb0\u4ec5\u8868\u793a\u540e\u9762\u7684 add\u3002\n    \n\tpushdown \u65f6\u5148\u4f20 reset \u6807\u8bb0\uff0c\u518d\u4f20\u4e24\u4e2a\u52a0\u6cd5\u6807\u8bb0\u3002\n\n3. \u5f00 long long\uff01\n\n```cpp\n#include<bits/stdc++.h>\n\n#define ll long long\n#define For(i,l,r) for(int i=(l);i<=(r);i++)\n#define INF 0x3f3f3f3f3f3f3f3f\n\nusing namespace std;\n\nnamespace ljh\n{\n\nnamespace IO\n{\n\tconst int SIZ=1<<20;\n\tchar ibuf[SIZ],*p1,*p2,obuf[SIZ],*p3=obuf;\n\t#define gc() (p1==p2&&(p2=(p1=ibuf)+fread(ibuf,1,SIZ,stdin),p1==p2)?EOF:*p1++)\n\tinline void pc(const char &c)\n\t{\n\t\tif(p3-obuf==SIZ) fwrite(obuf,1,SIZ,stdout),p3=obuf;\n\t\t*p3++=c;\n\t}\n\tinline int rd()\n\t{\n\t\tint x=0,f=1;\n\t\tchar ch=gc();\n\t\twhile(!isdigit(ch)){\n\t\t\tif(ch=='-') f=-1;\n\t\t\tch=gc();\n\t\t}\n\t\twhile(isdigit(ch)){\n\t\t\tx=x*10+ch-'0';\n\t\t\tch=gc();\n\t\t}\n\t\treturn x*f;\n\t}\n\tinline void ll_wr(ll x,char ch)\n\t{\n    \tif(x<0) x=-x,pc('-');\n\t\tstatic char st[22];\n\t\tint top=0;\n\t\tdo{\n\t\t\tst[top++]=x%10+'0',x/=10;\n\t\t}while(x);\n\t\twhile(top) pc(st[--top]);\n\t\tpc(ch);\n\t}\n}\n\nusing namespace IO;\n\nconst int N=1e5+5,M=5e5+5;\n\nint n,m,q;\nll ans[M];\n\nstruct modi{\n\tint l1,r1,l2,r2;\n\tll v;\n}a[N];\n\nstruct quer{\n\tint l1,r1,l2,r2,id;\n}q2[M],t2[M];\n\nstruct ope{\n\tint x,l,r;\n\tll v;\n\tint id;\n}q1[N];\nbool vis[N];\nint lq1,lq2;\n\nnamespace seg{\n\tstruct Tree{\n\t\tint l,r;\n\t\tll mx,hmx;\n\t\tll add,hadd;\n\t\tbool re;\n\t\t#define ls (p<<1)\n\t\t#define rs (p<<1|1)\n\t\t#define l(p) tree[p].l\n\t\t#define r(p) tree[p].r\n\t\t#define mx(p) tree[p].mx\n\t\t#define hmx(p) tree[p].hmx\n\t\t#define add(p) tree[p].add\n\t\t#define hadd(p) tree[p].hadd\n\t\t#define re(p) tree[p].re\n\t}tree[N<<2];\n\t\n\tvoid up(int p)\n\t{\n\t\tmx(p)=max(mx(ls),mx(rs)),hmx(p)=max(hmx(ls),hmx(rs));\n\t}\n\t\n\tvoid push_add(int p,ll v,ll hv)\n\t{\n\t\thmx(p)=max(hmx(p),mx(p)+hv),mx(p)+=v;\n\t\thadd(p)=max(hadd(p),add(p)+hv),add(p)+=v;\n\t}\n\t\n\tvoid push_re(int p)\n\t{\n\t\tif(add(p)){\n\t\t\tif(l(p)!=r(p)) push_add(ls,add(p),hadd(p)),push_add(rs,add(p),hadd(p));\n\t\t\tadd(p)=0;\n\t\t}\n\t\thmx(p)=mx(p),hadd(p)=0;\n\t\tre(p)=true;\n\t}\n\t\n\tvoid down(int p)\n\t{\n\t\tif(re(p)){\n\t\t\tpush_re(ls),push_re(rs);\n\t\t\tre(p)=false;\n\t\t}\n\t\tif(add(p)||hadd(p)){\n\t\t\tpush_add(ls,add(p),hadd(p)),push_add(rs,add(p),hadd(p));\n\t\t\tadd(p)=hadd(p)=0;\n\t\t}\n\t}\n\t\n\tvoid build(int p,int l,int r)\n\t{\n\t\ttree[p]={l,r,0,0,0,0,false};\n\t\tif(l==r) return ;\n\t\tint mid=(l(p)+r(p))>>1;\n\t\tbuild(ls,l,mid);\n\t\tbuild(rs,mid+1,r);\n\t}\n\t\n\tvoid change(int p,int l,int r,ll v)\n\t{\n\t\tif(l<=l(p)&&r>=r(p)){\n\t\t\tpush_add(p,v,max(0ll,v));\n\t\t\treturn ;\n\t\t}\n\t\tdown(p);\n\t\tint mid=(l(p)+r(p))>>1;\n\t\tif(l<=mid) change(ls,l,r,v);\n\t\tif(r>mid) change(rs,l,r,v);\n\t\tup(p);\n\t}\n\t\n\tll ask(int p,int l,int r)\n\t{\n\t\tif(l<=l(p)&&r>=r(p)) return hmx(p);\n\t\tdown(p);\n\t\tint mid=(l(p)+r(p))>>1;\n\t\tll res=-INF;\n\t\tif(l<=mid) res=ask(ls,l,r);\n\t\tif(r>mid) res=max(res,ask(rs,l,r));\n\t\treturn res;\n\t}\n}\n\nusing namespace seg;\n\nbool cmp1(ope a,ope b)\n{\n\treturn (a.x!=b.x)?(a.x<b.x):(a.v<b.v);\n}\n\nbool cmp2(ope a,ope b)\n{\n\treturn (a.x!=b.x)?(a.x<b.x):(a.v>b.v);\n}\n\nbool cmp3(quer a,quer b)\n{\n\treturn a.r2<b.r2;\n}\n\nbool cmp4(quer a,quer b)\n{\n\treturn a.l2<b.l2;\n}\n\nvoid solve1(int l,int r,int l1,int r1,int l2,int r2)\n{\n\tif(l==r){\n\t\tFor(i,l1,r1) change(1,q1[i].l,q1[i].r,q1[i].v);\n\t\tpush_re(1);\n\t\tFor(i,l2,r2) ans[q2[i].id]=max(ans[q2[i].id],ask(1,q2[i].l1,q2[i].r1));\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\t\n\t//\u4fee\u6539\u5e8f\u5217\u62c6\u5206\u6210\u5de6\u53f3\u4e24\u90e8\u5206 \n\tint it=0;\n\tFor(i,l1,r1) it+=q1[i].x<=mid;\n\tint mid1=l1+it-1;\n\t\n\t//\u67e5\u8be2\u5e8f\u5217\u62c6\u5206\u6210\u5de6\u53f3\u4e24\u90e8\u5206\n\tint it1=0,it2=0;\n\tFor(i,l2,r2) it1+=q2[i].r2<=mid,it2+=q2[i].l2>mid;\n\tint d1=l2-1,d2=d1+it1,d3=d2+it2;\n\tFor(i,l2,r2){\n\t\tif(q2[i].r2<=mid) t2[++d1]=q2[i];\n\t\telse if(q2[i].l2>mid) t2[++d2]=q2[i];\n\t\telse t2[++d3]=q2[i];\n\t}\n\tFor(i,l2,r2) q2[i]=t2[i];\n\t\n\tsolve1(l,mid,l1,mid1,l2,d1);\n\t\n\tbool flag=false;\n\tfor(int i=d2+1,j=mid1+1;i<=d3;i++){\n\t\twhile(j<=r1&&q1[j].x<=q2[i].r2){\n\t\t\tif(!flag&&q1[j].x>mid+1) push_re(1),flag=true;\n\t\t\tchange(1,q1[j].l,q1[j].r,q1[j].v);\n\t\t\tvis[q1[j].id]^=1;\n\t\t\t++j;\n\t\t}\n\t\tif(!flag) push_re(1),flag=true;\n\t\tans[q2[i].id]=max(ans[q2[i].id],ask(1,q2[i].l1,q2[i].r1));\n\t}\n\t\n\t//\u64a4\u9500\u64cd\u4f5c \n\tfor(int i=d2+1,j=mid1+1;i<=d3;i++){\n\t\twhile(j<=r1&&q1[j].x<=q2[i].r2){\n\t\t\tif(vis[q1[j].id]){\n\t\t\t\tvis[q1[j].id]=false;\n\t\t\t\tchange(1,q1[j].l,q1[j].r,-q1[j].v);\n\t\t\t}\n\t\t\t++j;\n\t\t}\n\t}\n\t\n\tsolve1(mid+1,r,mid1+1,r1,d1+1,d2);\n}\n\nvoid solve2(int l,int r,int l1,int r1,int l2,int r2)\n{\n\tif(l==r){\n\t\tFor(i,l1,r1) change(1,q1[i].l,q1[i].r,q1[i].v);\n\t\tpush_re(1);\n\t\tFor(i,l2,r2) ans[q2[i].id]=max(ans[q2[i].id],ask(1,q2[i].l1,q2[i].r1));\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\t\n\t//\u4fee\u6539\u5e8f\u5217\u62c6\u5206\u6210\u5de6\u53f3\u4e24\u90e8\u5206 \n\tint it=0;\n\tFor(i,l1,r1) it+=q1[i].x<=mid;\n\tint mid1=l1+it-1;\n\t\n\t//\u67e5\u8be2\u5e8f\u5217\u62c6\u5206\u6210\u5de6\u53f3\u4e24\u90e8\u5206 \n\tint it1=0,it2=0;\n\tFor(i,l2,r2) it1+=q2[i].r2<=mid,it2+=q2[i].l2>mid;\n\tint d1=l2-1,d2=d1+it1,d3=d2+it2;\n\tFor(i,l2,r2){\n\t\tif(q2[i].r2<=mid) t2[++d1]=q2[i];\n\t\telse if(q2[i].l2>mid) t2[++d2]=q2[i];\n\t\telse t2[++d3]=q2[i];\n\t}\n\tFor(i,l2,r2) q2[i]=t2[i];\n\t\n\tsolve2(mid+1,r,mid1+1,r1,d1+1,d2);\n\t\n\tbool flag=false;\n\tfor(int i=d3,j=mid1;i>=d2+1;i--){\n\t\twhile(j>=l1&&q1[j].x>=q2[i].l2){\n\t\t\tif(!flag&&q1[j].x<mid) push_re(1),flag=true;\n\t\t\tchange(1,q1[j].l,q1[j].r,q1[j].v);\n\t\t\tvis[q1[j].id]^=1;\n\t\t\t--j;\n\t\t}\n\t\tif(!flag) push_re(1),flag=true;\n\t\tans[q2[i].id]=max(ans[q2[i].id],ask(1,q2[i].l1,q2[i].r1));\n\t}\n\t\n\t//\u64a4\u9500\u64cd\u4f5c \n\tfor(int i=d3,j=mid1;i>=d2+1;i--){\n\t\twhile(j>=l1&&q1[j].x>=q2[i].l2){\n\t\t\tif(vis[q1[j].id]){\n\t\t\t\tvis[q1[j].id]=false;\n\t\t\t\tchange(1,q1[j].l,q1[j].r,-q1[j].v);\n\t\t\t}\n\t\t\t--j;\n\t\t}\n\t}\n\t\n\tsolve2(l,mid,l1,mid1,l2,d1);\n}\n\nvoid main()\n{\n\tn=rd(),m=rd(),q=rd();\n\tFor(i,1,m) a[i].l1=rd(),a[i].l2=rd(),a[i].r1=rd(),a[i].r2=rd(),a[i].v=rd();\n\tFor(i,1,q) q2[i].l1=rd(),q2[i].l2=rd(),q2[i].r1=rd(),q2[i].r2=rd(),q2[i].id=i;\n\t\n\t//\u524d\u7f00\u77e9\u5f62 \u2193 \n\tFor(i,1,m){\n\t\tq1[++lq1]={a[i].l2,a[i].l1,a[i].r1,a[i].v,i};\n\t\tif(a[i].r2+1<=n) q1[++lq1]={a[i].r2+1,a[i].l1,a[i].r1,-a[i].v,i};\n\t}\n\tsort(q1+1,q1+lq1+1,cmp1);\n\tsort(q2+1,q2+q+1,cmp3);\n\tbuild(1,1,n);\n\tsolve1(1,n,1,lq1,1,q);\n\t\n\t//\u540e\u7f00\u77e9\u5f62 \u2193 \n\tlq1=0;\n\tFor(i,1,m){\n\t\tq1[++lq1]={a[i].r2,a[i].l1,a[i].r1,a[i].v,i};\n\t\tif(a[i].l2-1>=1) q1[++lq1]={a[i].l2-1,a[i].l1,a[i].r1,-a[i].v,i};\n\t}\n\tsort(q1+1,q1+lq1+1,cmp2);\n\tsort(q2+1,q2+q+1,cmp4);\n\tbuild(1,1,n);\n\tsolve2(1,n,1,lq1,1,q);\n\t\n\tFor(i,1,q) ll_wr(ans[i],'\\n');\n\tfwrite(obuf,1,p3-obuf,stdout);\n}\n\n}\n\nint main()\n{\n\tljh::main();\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1674011025,
        "uid": 153139,
        "name": "\u98ce\u7fbd\u8dc3",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6109 [Ynoi2009] rprmq1"
    },
    {
        "content": "- \u6b64\u9898\u4e3a\u5f00\u6446\u8ba1\u5212 T2\u3002\n- [\u5386\u53f2\u6700\u503c\u677f\u5b50](https://www.luogu.com.cn/blog/luo1gu1zui1bang1/solution-p4314)\u3002\n- [\u732b\u6811\u5206\u6cbb\u677f\u5b50](https://www.luogu.com.cn/blog/luo1gu1zui1bang1/wc2022-tu-zi-qiu-zhang)\uff0c[\u6a21\u677f\u5b9e\u73b0](https://www.luogu.com.cn/record/80311805)\u3002\n\n**[\u9898\u610f](https://www.luogu.com.cn/problem/P6109)**\n- \u5bf9\u4e00\u4e2a\u65b9\u9635\u5148\u6267\u884c\u77e9\u5f62\u52a0\uff0c\u518d\u6267\u884c\u77e9\u5f62\u6700\u5927\u503c\u67e5\u8be2\u3002\n\n**\u5206\u6790**\n- \u65e2\u7136\u65f6\u95f4\u6233\u7ed9\u4e00\u67aa\u5d29\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5c1d\u8bd5\u628a\u65b9\u9635\u4e00\u7ef4\u53d8\u6210\u65f6\u95f4\u6233\u3002\n- \u90a3\u4e48\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6570\u5217\u5355\u70b9\u4fee\u6539\uff0c\u67e5\u8be2\u4ece\u67d0\u4e2a\u65f6\u6bb5\u7684\u5386\u53f2\u6700\u5927\u503c\u7684\u7ecf\u5178\u95ee\u9898\uff0c\u76f4\u63a5\u66b4\u529b\u8dd1\u5bf9\u65f6\u95f4\u6233\u8dd1\u732b\u6811\u5206\u6cbb\uff0c\u7528\u7ebf\u6bb5\u6811\u8bb0\u5f55\u5386\u53f2\u6700\u5927\u503c\u3002\n- \u5206\u6cbb\u4e2d\u5fc3\u5904\u7684\u5e8f\u5217\u5904\u7406\u7531\u6574\u4f53\u4e8c\u5206\u7684\u601d\u60f3\u53ef\u5f97\u590d\u6742\u5ea6\u6b63\u786e\uff0c\u603b\u590d\u6742\u5ea6\u5373\u4e3a $O(n\\log^2n+q\\log n)$\u3002\n- \u8fd9\u91cc\u6709\u4e00\u4e2a\u4e0e\u4f20\u7edf\u7684\u5386\u53f2\u6700\u503c\u4e0d\u540c\u7684\u6807\u8bb0\u662f\uff1a\u6709\u4e2a\u5c06\u5386\u53f2\u6700\u503c\u7f6e\u4e3a\u771f\u5b9e\u503c\u7684\u6807\u8bb0\uff08\u914d\u5957\u4e00\u4e2a\u8bb0\u5f55\u5728\u8fd9\u4e4b\u524d\u7684\u52a0\u6cd5\u7684\u6807\u8bb0\uff09\uff0c\u5b9e\u9645\u5b9e\u73b0\u7684\u65f6\u5019\u9700\u8981\u6ce8\u610f\uff0c[\u6570\u636e](https://www.luogu.com.cn/paste/t2vj0nxy)\u3002\n- \u6ce8\u610f\u76f8\u540c\u65f6\u95f4\u7684\u52a0\u6cd5\u6807\u8bb0\u8981\u5148\u51cf\u540e\u52a0\uff0c\u5426\u5219\u5b58\u5728\u51fa\u9519\u7684\u53ef\u80fd\uff0c[\u4ee3\u7801](https://www.luogu.com.cn/paste/921yojay)\u3002",
        "postTime": 1658235759,
        "uid": 260884,
        "name": "WeLikeStudying",
        "ccfLevel": 0,
        "title": "\u3010\u5f00\u6446\u8ba1\u5212 #1\u3011\u4eba\u54c1\u71c3\u7164\u53bb"
    }
]