[
    {
        "content": "\n\u5176\u5b9e\u5f88\u5bb9\u6613\u7406\u89e3\u5c31\u662f\u8be2\u95ee\u4e00\u6bb5\u533a\u95f4\u5185\u6709\u591a\u5c11\u6bb5\u4e0d\u540c\u7684\u533a\u95f4\n\n\u7136\u540e\u518d\u4ed4\u7ec6\u601d\u7d22\u4e00\u4e0b\u4f1a\u53d1\u73b0\uff1a\n\n1.\u53ea\u8981\u4e00\u4e2a\u533a\u95f4\u7684\u5f00\u5934\u5728\u4e00\u4e2a\u8282\u70b9i\u7684\u5de6\u8fb9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u5305\u542b\u5728\u533a\u95f41~i\u4e2d\u3002\n\n2.\u53ea\u8981\u4e00\u4e2a\u533a\u95f4\u7684\u5c3e\u90e8\u5728\u4e00\u4e2a\u8282\u70b9j\u7684\u5de6\u8fb9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u80af\u5b9a\u4e0d\u5c5e\u4e8ej\u4e4b\u540e\u7684\u6240\u6709\u533a\u95f4\n\n\u8fd9\u65f6\u5019\u5c31\u4e0d\u96be\u60f3\u5230\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff1a\n\n\u7b2c\u4e00\u4e2a\uff1a\u7ef4\u62a4\u8282\u70b9i\u4e4b\u524d\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u7684\u5f00\u5934\n\n\u7b2c\u4e8c\u4e2a\uff1a\u7ef4\u62a4\u8282\u70b9j\u4e4b\u524d\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u7684\u7ed3\u5c3e\n\n\u4e0d\u96be\u8bc1\u660e\u62ffsum[i]-sum[j]\u5f97\u5230\u7684\u5c31\u662fi~j\u4e2d\u95f4\u5730\u96f7\u7684\u4e2a\u6570(\u624b\u52a8\u6a21\u62df\u4e00\u6ce2\u5c31\u4e00\u6e05\u4e8c\u695a\u4e86)\n\n\n    \n    \n    \n    \n    \n    \n    \n    \n```cpp\n    #include<iostream>\n    #include<cstdlib>\n    #include<cstdio>\n    #include<cmath>\n    #include<cstring>\n    #include<iomanip>\n    #include<algorithm>\n    #include<stack>\n    #include<queue>\n    #define lst long long\n    #define rg register\n    #define N 100050\n    using namespace std;\n    int n,m;\n    lst ans;\n    int tou[N],wei[N];//tou\u5b58\u524d\u9762\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u7684\u5f00\u59cb\uff0c\u4ee5\u4e0b\u7b80\u79f0\u5934\u90e8\u6811\u72b6\u6570\u7ec4\n                      //wei\u5b58\u524d\u9762\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u7684\u5c3e\u90e8\uff0c\u4ee5\u4e0b\u7b80\u79f0\u5c3e\u90e8\u6811\u72b6\u6570\u7ec4\n                      //\u7c7b\u4f3c\u4e8e\u524d\u7f00\u548c\n    inline int read()//\u8bfb\u5165\u4f18\u5316\n    {\n        rg int s=0,m=1;rg char ch=getchar();\n        while(ch!='-'&&(ch<'0'||ch>'9'))ch=getchar();\n        if(ch=='-')m=-1,ch=getchar();\n        while(ch>='0'&&ch<='9')s=(s<<3)+(s<<1)+ch-'0',ch=getchar();\n        return s*m;\n    }\n    //\u4ee5\u4e0b\u662f\u6811\u72b6\u6570\u7ec4\u7684\u677f\u5b50\n    inline int lowbit(rg int kk)//lowbit\n    {\n        return kk&(-kk);\n    }\n    inline void add_tou(rg int kk)//\u52a0\u5165\u6811\u72b6\u6570\u7ec4\u7684\u5934\u90e8\u6570\u7ec4\n    {\n        while(kk<=n)\n        {\n            ++tou[kk];\n            kk+=lowbit(kk);\n        }\n    }\n    inline void add_wei(rg int kk)//\u52a0\u5165\u6811\u72b6\u6570\u7ec4\u7684\u5c3e\u90e8\u6570\u7ec4\n    {\n        while(kk<=n)\n        {\n            ++wei[kk];\n            kk+=lowbit(kk);\n        }\n    }\n    inline int sum_tou(rg int kk)//\u8ba1\u7b97\u8282\u70b9\u524d\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u7684\u5f00\u59cb\n    {\n        rg int s=0;\n        while(kk>0)\n        {\n            s+=tou[kk];\n            kk-=lowbit(kk);\n        }\n        return s;\n    }\n    inline int sum_wei(rg int kk)//\u8ba1\u7b97\u8282\u70b9\u524d\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\n    {\n        rg int s=0;\n        while(kk>0)\n        {\n            s+=wei[kk];\n            kk-=lowbit(kk);\n        }\n        return s;\n    }\n    int main()\n    {\n        n=read(),m=read();//\u8bfb\u5165\n        for(rg int i=1;i<=m;++i)\n        {\n            rg int sign=read();\n            rg int x=read(),y=read();//\u8bfb\u5165\n            if(sign==1)\n            {\n                add_tou(x);//\u52a0\u5165\u5934\u90e8\u6811\u72b6\u6570\u7ec4\n                add_wei(y);//\u52a0\u5165\u5c3e\u90e8\u6811\u72b6\u6570\u7ec4\n            }\n            else\n            {\n                ans=sum_tou(y)-sum_wei(x-1);//\u8fd0\u7528\u5df2\u7ecf\u8bc1\u660e\u7684\u89c4\u5f8b\u7ed3\u9898\n                printf(\"%d\\n\",ans);\n            }\n        }\n        return 0;\n    }\n```\n\u901a\u8fc7\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5927\u90e8\u5206\u7684\u6811\u72b6\u6570\u7ec4\u9898\u76ee\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u505a\uff0c\u4f46\u4e5f\u6709\u7ebf\u6bb5\u6811\u4e0d\u597d\u7ef4\u62a4\u7684\u9898\u76ee\uff0c\u8fd9\u5c31\u9700\u8981\u7075\u6d3b\u7684\u5229\u7528\u6811\u72b6\u6570\u7ec4\u7684\u6280\u5de7(\u867d\u7136\u9898\u89e3\u91cc\u4e5f\u6709\u7ebf\u6bb5\u6811\u6bd4\u8f83\u597d\u7406\u89e3\u7684)\n\u6211\u81ea\u8ba4\u4e3a\u6211\u7684\u4ee3\u7801\u8fd8\u662f\u86ee\u597d\u770b\u7684\uff0c\u53ea\u662f\u53d8\u91cf\u6709\u70b9\u4e11\uff0c\u4f46\u597d\u7406\u89e3\n",
        "postTime": 1515825170,
        "uid": 66596,
        "name": "eternal\u98ce\u5ea6",
        "ccfLevel": 0,
        "title": "\u8d2a\u5a6a\u5927\u9646\u7684\u60f3\u6cd5\u53ca\u9898\u89e3"
    },
    {
        "content": "\u975e\u5e38\u5999\u7684\u4e00\u9053\u9898\uff01\n\n\u62ff\u5230\u9898\u7684\u7b2c\u4e00\u611f\u89c9\uff1a\u5e26\u4fee\u83ab\u961f\uff1f\uff1f\u600e\u4e48\u662f\u4e2a\u84dd\u9898\uff1f\n\n\u7136\u540e\u4ed4\u7ec6\u60f3\u4e86\u60f3\uff0c\u5176\u5b9e\u8fd9\u9053\u9898\u6ca1\u6709\u8fd9\u4e48\u56f0\u96be\u3002\n\n\u501f\u52a9\u4e8e\u5dee\u5206\u7684\u601d\u60f3\uff0c\u6211\u4eec\u8003\u8651\u533a\u95f4$[l,r]$\u7684\u7b54\u6848\u662f\u4ec0\u4e48\u3002\n\n\u6bd4\u5982\u8bf4\u7ed9\u5b9a\u8fd9\u6837\u4e00\u4e2a\u67e5\u8be2\u7684\u533a\u95f4\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8v68fprm.png)\n\n\u6211\u4eec\u9996\u5148\u63d2\u5165\u4e00\u6bb5\u7ea2\u8272\u533a\u95f4\uff0c\u6b64\u65f6\u7b54\u6848\u6570\u4e3a1\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/z063n2pw.png)\n\n\n\u6211\u4eec\u518d\u63d2\u5165\u4e00\u6bb5\u533a\u95f4\u5462\uff1f\u7b54\u6848\u6570\u4e3a2.\n![](https://cdn.luogu.com.cn/upload/image_hosting/zyliaznx.png)\n\n\u6709\u4ec0\u4e48\u89c4\u5f8b\uff1f\u6211\u4eec\u5148\u7ea6\u5b9a\u4e00\u4e2a\u533a\u95f4\u9760\u5de6\u7684\u7aef\u70b9\u53eb\u533a\u95f4\u7684\u5f00\u5934\uff0c\u9760\u53f3\u7684\u4e3a\u533a\u95f4\u7684\u7ed3\u5c3e\u3002\n\n\u6211\u4eec\u7684\u7b54\u6848\u5176\u5b9e\u5c31\u662f\uff1a\n\n**R\u4e4b\u524d\u7684\u6240\u6709\u533a\u95f4\u5f00\u5934\u6570\uff08\u5305\u62ecR\uff09-L\u4e4b\u524d\u7684\u6240\u6709\u533a\u95f4\u7ed3\u5c3e\u6570\uff08\u4e0d\u5305\u62ecL\uff09**\n\n\u4e3a\u4ec0\u4e48\uff1f\u8de8\u8d8a$[l,r]$\u7684\u533a\u95f4\u4e00\u5b9a\u662f\u533a\u95f4\u5c3e\u5728$[l,r]$\u5185\u6216\u533a\u95f4\u5934\u5728$[l,r]$\u5185\uff0c\u6216\u4e24\u8005\u90fd\u5728\u533a\u95f4$[l,r]$\u5185\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8fd9\u6837\u4e00\u51cf\uff0c\u4f1a\u628a\u6240\u6709\u5b8c\u5168\u5728$[1...l]$\u533a\u95f4\u5185\u7684\u989c\u8272\u53bb\u6389\uff0c\u7559\u4e0b\u7684\u4e00\u5b9a\u5305\u542b\u5728$[l,r]$\u4e2d\u3002\n\n\u7136\u540e\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u4e24\u4e2a\u5355\u70b9\u4fee\u6539\u533a\u95f4\u67e5\u8be2\u7684\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n , m;\nconst int N = 1e5+ 10;\nint t[2][N];//0\u5f00\u5934 1\u7ed3\u5c3e \n\nvoid add(int x , int pos) {\n\twhile(x <= n) {\n\t\tt[pos][x] ++;\n\t\tx += x & (-x);\n\t}\n}\n\nint sum (int x , int pos) {\n\tint ans = 0;\n\twhile(x) {\n\t\tans += t[pos][x];\n\t\tx -= x & (-x);\n\t}\n\treturn ans;\n}\n\nint main () {\n\tscanf(\"%d %d\" , &n, &m);\n\twhile(m --) {\n\t\tint opt , l , r;\n\t\tscanf(\"%d %d %d\" , &opt , &l , &r);\n\t\tif(opt == 1) {\n\t\t\tadd(l , 0); add(r , 1);\n\t\t} else {\n\t\t\tint rans = sum(r , 0) - sum(l - 1 , 1);\n \t\t\tprintf(\"%d\\n\" , rans);\n\t\t}\n\t}\n\treturn 0;\n} \n```\n",
        "postTime": 1572857683,
        "uid": 134080,
        "name": "jins3599",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "\u8bf4\u5b9e\u8bdd\u8fd9\u9053\u9898\u8fd8\u662f\u975e\u5e38\u597d\u7684\uff0c\u56e0\u4e3a\u4ed6\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u79cd\u975e\u5e38\u5de7\u5999\u7684\u60f3\u6cd5\u2014\u2014\u5dee\u5206\uff01\n\n\u5f53\u65f6\u6211\u770b\u5230\u8fd9\u9053\u9898\u7684\u65f6\u5019\u6211\u5c31\u4e00\u76f4\u5728\u60f3\u6211\u5e94\u8be5\u5982\u4f55\u505a\u53bb\u7ef4\u62a4\u5f53\u524d\u533a\u95f4\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u7136\u540e\u5c31\u8fd9\u6837\u60f3\u554a\u60f3\uff0c\u53d1\u73b0\u8d8a\u60f3\u8d8a\u4e0d\u5bf9\uff0c\u8d8a\u60f3\u8d8a\u7206\u70b8\uff01\u7136\u540e\u6211\u7ed3\u5408\u4ee5\u524d\u505a\u7684\u51e0\u9053\u7ebf\u6bb5\u6811\u9898\uff0c\u6211\u60f3\u5982\u679c\u771f\u7684\u6709\u8fd9\u4e48\u96be\u7684\u8bdd\uff0c\u8fd9\u9053\u9898\u600e\u4e48\u53ef\u80fd\u624d\u662f\u4e00\u9053\u84dd\u9898\uff0c\u4e8b\u5b9e\u8bc1\u660e\u6211\u786e\u5b9e\u662f\u60f3\u9519\u4e86\uff01\n\n\u8fd9\u9053\u9898\u7684\u601d\u8def\u4e5f\u662f\u975e\u5e38\u7684\u7b80\u5355\u554a\uff01\u6211\u4eec\u53ea\u9700\u8981\u6bcf\u6b21\u57cb\u5730\u96f7\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6807\u8bb0\u4e00\u4e0b\u5f53\u524d\u533a\u95f4\u7684\u5f00\u5934\u548c\u7ed3\u5c3e\uff0c\u6211\u4eec\u67e5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u9700\u8981\u67e51\u5230\u5f53\u524d\u533a\u95f4\u7ed3\u5c3e\u4e2d\u5305\u542b\u4e86\u591a\u5c11\u4e2a\u5f00\u5934\uff08\u4e00\u4e2a\u5f00\u5934\u4ee3\u8868\u4e86\u4e00\u79cd\u5730\u96f7\uff09\u7136\u540e\u6211\u4eec\u67e51\u5230\u5f53\u524d\u533a\u95f4\u524d\u4e00\u4e2a\u4f4d\u7f6e\u5305\u542b\u4e86\u591a\u5c11\u4e2a\u7ed3\u5c3e\uff08\u4e00\u4e2a\u7ed3\u5c3e\u4ee3\u8868\u6211\u4eec\u4e00\u79cd\u5730\u96f7\u57cb\u5b8c\u4e86\uff0c\u5c31\u662f\u6211\u4eec\u770b\u524d\u9762\u6709\u51e0\u79cd\u5730\u96f7\u88ab\u57cb\u5b8c\u4e86\uff01\uff09\u7136\u540e\u628a\u8fd9\u4e2a\u505a\u5dee\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\u6709\u591a\u5c11\u79cd\u5730\u96f7\u662f\u51fa\u73b0\u5728\u5f53\u524d\u533a\u95f4\u4e2d\uff0c\u7136\u540e\u8fd9\u9053\u9898\u5c31\u6210\u529f\u7684\u88ab\u6211\u4eec\u8f6c\u5316\u6210\u4e86\u4e00\u4e2a\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u7684\u7ebf\u6bb5\u6811\u3002\n\n\u5982\u679c\u4e0a\u9762\u7684\u4e1c\u897f\u8fd8\u662f\u6ca1\u6709\u770b\u61c2\u7684\u8bdd\uff0c\u5927\u5bb6\u53ef\u4ee5\u7ed3\u5408\u4e0b\u9762\u8fd9\u4e2a\u793a\u610f\u56fe\u7406\u89e3\u4e00\u4e0b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/27401.png)\n\n\u6211\u4eec\u8fd9\u91cc\u5047\u8bbe\u7ea2\u8272\u7684\u4e09\u89d2\u5f62\u4e3a\u5f00\u59cb\u6807\u8bb0\uff08\u6709\u53ef\u80fd\u591a\u4e2a\u5f00\u59cb\u6807\u8bb0\u5728\u4e00\u8d77\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u4e2a\u6570\u5c31\u53ef\u4ee5\u4e86\uff01\uff09\u7eff\u8272\u7684\u4e3a\u7ed3\u675f\u6807\u8bb0\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u67e5\u8be2\u533a\u95f4\u524d\u9762\u90a3\u4e00\u6bb5\u7684\u7eff\u8272\u6807\u8bb0\u4e3a\u4e24\u4e2a\uff0c\u8868\u660e\u5728\u5230\u67e5\u8be2\u533a\u95f4\u4e4b\u524d\u5df2\u7ecf\u6709\u4e24\u79cd\u5730\u96f7\u57cb\u5b8c\u4e86\uff0c\u800c\u5305\u62ec\u67e5\u8be2\u533a\u95f4\u5728\u5185\u7684\u524d\u9762\u7684\u6240\u6709\u7684\u5f00\u59cb\u6807\u8bb0\uff0c\u51cf\u53bb\u7ed3\u675f\u6807\u8bb0\u5c31\u662f\u6211\u4eec\u8981\u77e5\u9053\u7684\u5728\u67e5\u8be2\u533a\u95f4\u5185\u51fa\u73b0\u7684\u5730\u96f7\u7684\u79cd\u6570\uff01\n\n\u76f8\u4fe1\u5927\u5bb6\u5e94\u8be5\u90fd\u61c2\u4e86\uff01\n\nAC code\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct sd{\n    int l,r,son[2],sta,end;\n}node[1000004];\nint root,n,m,cnt;\nvoid Buildtree(int &k,int l,int r)\n{\n    ++cnt;k=cnt;node[k].l=l;node[k].r=r;\n    if(l==r) return;\n    else\n    {\n        int mid=(l+r)/2;\n        Buildtree(node[k].son[0],l,mid);\n        Buildtree(node[k].son[1],mid+1,r);\n    }\n}\nvoid modify_sta(int k,int pos)\n{\n    if(node[k].l==node[k].r) node[k].sta++;\n    else\n    {\n        int mid=(node[k].l+node[k].r)/2;\n        if(pos<=mid) modify_sta(node[k].son[0],pos);\n        else modify_sta(node[k].son[1],pos);\n        node[k].sta=node[node[k].son[0]].sta+node[node[k].son[1]].sta;\n    }\n}\nvoid modify_end(int k,int pos)\n{\n    if(node[k].l==node[k].r) node[k].end++;\n    else\n    {\n        int mid=(node[k].l+node[k].r)/2;\n        if(pos<=mid) modify_end(node[k].son[0],pos);\n        else modify_end(node[k].son[1],pos);\n        node[k].end=node[node[k].son[0]].end+node[node[k].son[1]].end;\n    }\n}\nint query_end(int k,int l,int r)\n{\n    if(node[k].l==l&&node[k].r==r) return node[k].end;\n    else\n    {\n        int mid=(node[k].l+node[k].r)/2;\n        if(r<=mid) return query_end(node[k].son[0],l,r);\n        else if(l>mid) return query_end(node[k].son[1],l,r);\n        else return query_end(node[k].son[0],l,mid)+query_end(node[k].son[1],mid+1,r);\n    }\n}\nint query_sta(int k,int l,int r)\n{\n    if(node[k].l==l&&node[k].r==r) return node[k].sta;\n    else\n    {\n        int mid=(node[k].l+node[k].r)/2;\n        if(r<=mid) return query_sta(node[k].son[0],l,r);\n        else if(l>mid) return query_sta(node[k].son[1],l,r);\n        else return query_sta(node[k].son[0],l,mid)+query_sta(node[k].son[1],mid+1,r);\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    int a,b,c;\n    Buildtree(root,1,n);\n    for(int i=1;i<=m;++i)\n    {\n        scanf(\"%d%d%d\",&a,&b,&c);\n        if(a==1){modify_sta(root,b);modify_end(root,c);}\n        if(a==2){printf(\"%d\\n\",query_sta(root,1,c)-query_end(root,1,b-1));}\n    }\n}\n```\nBy njc",
        "postTime": 1533726924,
        "uid": 57884,
        "name": "Mudrob\u00f8t",
        "ccfLevel": 0,
        "title": "\u7ebf\u6bb5\u6811\u8111\u6d1e\u9898 P2184 \u8d2a\u5a6a\u5927\u9646"
    },
    {
        "content": "### \u770b\u5230\u5168\u662f\u7ebf\u6bb5\u6811\u6216\u8005\u6811\u72b6\u6570\u7ec4\u5199\u6cd5\uff0c\u5c31\u6765\u63d0\u4f9b\u4e00\u53d1\u5168\u7f51\u552f\u4e00$cdq$\u5206\u6cbb\u4e09\u7ef4\u504f\u5e8f\u89e3\u6cd5\u5427\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u8fd9\u4e2a\u9898\u7684\u67e5\u8be2\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4$l,r$\uff0c\u67e5\u8be2\u6709\u591a\u5c11\u4e2a\u4fee\u6539\u533a\u95f4$l_i,r_i$\u4e0e$l,r$\u6709\u4ea4\u96c6\n\n\u8f6c\u5316\u4e3a\u6570\u5b66\u8bed\u8a00\uff0c\u5c31\u662f**\u67e5\u8be2\u6ee1\u8db3$l_i<=r$\u4e14$r_i>=l$\u7684\u4fee\u6539\u4e2a\u6570**\n\n\u4e00\u4e2a\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\uff0c\u4f46\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u662f\u4e2a\u52a8\u6001\u63d2\u5165\u7684\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\n\n_(:\u0437\u300d\u2220)__\u4e00\u65f6\u4e0d\u77e5\u6240\u63aa\n\n\u518d\u60f3\u4e00\u60f3\uff0c\u4e0d\u59a8**\u628a\u65f6\u95f4\u53e6\u5f00\u4e00\u4e2a\u7ef4\u5ea6\u4f5c\u4e3a\u7b2c\u4e09\u7ef4**\uff0c\u7136\u540e\u5c31\u662f\u8fd9\u6837\u4e86\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u67e5\u8be2\uff0c\u6211\u4eec\u8981\u6c42\u51fa\u5b83\u4e4b\u524d\u6709\u591a\u5c11\u4e2a\u4fee\u6539\u533a\u95f4\u4e0e\u5176\u76f8\u4ea4\n\n\u6570\u5b66\u8bed\u8a00\uff1a\n\n**\u67e5\u8be2\u6ee1\u8db3$l_i<=r$\u4e14$r_i>=l$\u4e14$[l_i,r_i].time<[l,r].time$\u7684\u4fee\u6539\u4e2a\u6570**\n\n\u601d\u8def\u6e05\u6670\u660e\u4e86\uff0c\u800c\u4e14\u6572\u597d\u60f3\uff0c\u4f46\u662f\u5b9e\u73b0\u7ec6\u8282\u8fd8\u662f\u6bd4\u8f83\u9ebb\u70e6\u7684\uff08\u4e00\u90e8\u5206\u662f\u56e0\u4e3a\u6211\u7684\u5947\u8469$cdq$\u5199\u6cd5\uff09\uff0c\u5728\u4ee3\u7801\u6ce8\u91ca\u91cc\u89e3\u91ca\u4e00\u4e0b\uff08\u6a21\u677f\u8fd9\u79cd\u7684\u5c31\u4e0d\u89e3\u91ca\u4e86\uff09\n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst int maxn=1e5+10;\nstruct node{\n    int a,b,c,q,w;\n//a,b,c\u8868\u793a\u4e09\u4e2a\u7ef4\u5ea6\uff0cq\u8bb0\u5f55\u8fd9\u4e2a\u64cd\u4f5c\u662f\u4fee\u6539\u8fd8\u662f\u67e5\u8be2\n//w\u8868\u793a\u8fd9\u4e2a\u662f\u5426\u6709\u6548\uff08\u548cq\u5dee\u4e0d\u591a\uff0c\u67e5\u8be2\u662f\u4e0d\u9700\u8981\u7edf\u8ba1\u7684\uff0cw=0\uff1b\u4fee\u6539\u7684w=1\uff09\n}v[maxn];\nint n,m,cnt,tot,c[maxn],ans[maxn];\nbool vis[maxn];\nbool cmpx(const node &a,const node &b)\n{\n    return a.a==b.a?(a.b==b.b?a.c<b.c:a.b<b.b):a.a<b.a;\n}\nbool cmpy(const node &a,const node &b)\n{\n    return a.b==b.b?a.c<b.c:a.b<b.b;\n}\nint lowbit(int x)\n{\n    return x&-x;\n}\nvoid add(int x,int ch)\n{\n    while(x<=n)\n    {\n        c[x]+=ch;\n        x+=lowbit(x);\n    }\n}\nint sum(int x)\n{\n    int ret=0;\n    while(x)\n    {\n        ret+=c[x];\n        x-=lowbit(x);\n    }\n    return ret;\n}\nvoid cdq(int l,int r)\n{\n    if(l==r)\n        return;\n    int mid=l+r>>1;\n    cdq(l,mid),cdq(mid+1,r);\n    sort(v+l,v+mid+1,cmpy),sort(v+mid+1,v+r+1,cmpy);\n    int i=l,j=mid+1;\n    for(;j<=r;j++)\n    {\n        while(v[i].b<=v[j].b&&i<=mid)\n            add(v[i].c,v[i].w),i++;\n        if(v[j].q==2)\n        \tans[v[j].a]+=sum(n)-sum(v[j].c-1);\n            //\u7edf\u8ba1\u8d21\u732e\u5230ans\u6570\u7ec4\u4e2d\n    }\n    for(j=l;j<i;j++)\n        add(v[j].c,-v[j].w);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&v[i].q,&v[i].b,&v[i].c);\n        v[i].w=1;\n        if(v[i].q==2)\n        \tswap(v[i].b,v[i].c),v[i].w=0,vis[i]=1;\n            //\u6807\u8bb0\u6bcf\u4e2a\u64cd\u4f5c\u662f\u5426\u9700\u8981\u8f93\u51fa\n        v[i].a=i;\n    }\n    cdq(1,m);\n    //\u679a\u4e3e\u6bcf\u4e2a\u64cd\u4f5c\uff0c\u9700\u8981\u8f93\u51fa\u5c31\u8f93\u51fa\n    for(int i=1;i<=m;i++)\n    \tif(vis[i])\n        \tprintf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1537687993,
        "uid": 57045,
        "name": "communist",
        "ccfLevel": 7,
        "title": "P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "##\u6211\u770b\u89c1\u6ca1\u6709C++\u7684\u7ebf\u6bb5\u6811\u5199\u6cd5\uff0c\u6240\u4ee5\u6765\u53d1\u4e00\u6ce2\u9898\u89e3\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u4ee3\u7801\u7b80\u5355\u7684\u7ebf\u6bb5\u6811\uff0c\u4f46\u5176\u5b9e\u4e0d\u662f\u5f88\u5bb9\u6613\u60f3\u5230\u8fd9\u79cd\u601d\u8def\u3002\n\n\u7ebf\u6bb5\u6811\u8981\u7ef4\u62a4\u4e24\u4e2a\u4e1c\u897f\uff0c\u4e00\u4e2asuml\uff08\u8d77\u70b9\uff09\uff0csumr\uff08\u7ec8\u70b9\uff09\uff1b\n\n##\u63d2\u5165\uff1a\n\n\u63d2\u5165\u7684\u65f6\u5019\u53ea\u9700\u8981\u5728\u8d77\u70b9\u548c\u7ec8\u70b9sum++\uff08\u533a\u95f4\u7ef4\u62a4\uff0c\u5b9e\u9645\u662f\u70b9\u4fee\u6539\uff09\uff0c\u5982\u56fe\uff1a\n\n ![](https://cdn.luogu.com.cn/upload/pic/8041.png) \n\n##\u67e5\u8be2\uff1a\n\n\u67e5\u8be2x~y\u533a\u95f4\u7684\u65f6\u5019\u9700\u8981\u75281~y\u70b9\u7684suml-1~x\u70b9\u7684sumr\uff1b\n\n\u4e3a\u4ec0\u4e48\u8fd9\u6837\u67e5\u8be2\u5462\uff1f\u5927\u5bb6\u4ed4\u7ec6\u60f3\u60f3\uff0c\u7528\u7b14\u753b\u753b\uff0c\u8fd9\u662f\u4e2a\u533a\u95f4\u8986\u76d6\u95ee\u9898\uff0c\u5927\u5bb6\u4e00\u5b9a\u8981\u60f3\u901a\uff0c\u7ed3\u5408\u63d2\u5165\u6765\u60f3\u60f3\u3002\uff08\u8fd9\u91cc\u5c31\u4e0d\u8be6\u7ec6\u8bb2\u4e86\uff0c\u7ed3\u5408\u56fe\u7247\u770b\u770b\uff09\u3002\n\n#CODE\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define rs id<<1|1\n#define ls id<<1\nusing namespace std;\nconst int N=100000+10;\nstruct node\n{\n    int left,right,sumr,suml;\n}tree[N*4];\nint n,m;\nvoid build(int id,int l,int r)\n{\n    tree[id].left=l,tree[id].right=r;\n    if(l==r)return;\n    int mid=(l+r)>>1;\n    build(ls,l,mid),build(rs,mid+1,r);\n}\nvoid update(int id,int x)//\u4fee\u6539\u8d77\u70b9\n{\n    if(tree[id].left==tree[id].right)\n    {\n        tree[id].suml++;return;\n    }\n    if(x>tree[ls].right)update(rs,x);\n    else update(ls,x);\n    tree[id].suml=tree[ls].suml+tree[rs].suml;\n}\nvoid update2(int id,int x)//\u4fee\u6539\u7ec8\u70b9\n{\n    if(tree[id].left==tree[id].right)\n    {\n        tree[id].sumr++;return;\n    }\n    if(x>tree[ls].right)update2(rs,x);\n    else update2(ls,x);\n    tree[id].sumr=tree[ls].sumr+tree[rs].sumr;\n}\nint query(int id,int l,int r)//\u67e5\u8be2\u8d77\u70b9\n{\n    if(r<tree[id].left || tree[id].right<l)return 0;\n    if(l<=tree[id].left&&tree[id].right<=r)return tree[id].suml;\n    return query(ls,l,r)+query(rs,l,r);\n}\nint query2(int id,int l,int r)//\u67e5\u8be2\u7ec8\u70b9\n{\n    if(tree[id].left>r||tree[id].right<l)return 0;\n    if(tree[id].left>=l&&tree[id].right<=r)return tree[id].sumr;\n    return query2(ls,l,r)+query2(rs,l,r);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    build(1,1,n);//\u5efa\u6811\n    for(int i=1;i<=m;i++)\n    {\n        int x,y,z;\n        scanf(\"%d%d%d\",&x,&y,&z);\n        if(x==1)\n        {\n            update(1,y);update2(1,z);\n        }\n        if(x==2)\n        {\n            int s=query(1,1,z);\n            int t=query2(1,1,y-1);\n            printf(\"%d\\n\",s-t);//\u7ec8\u70b9\u7684sum-\u8d77\u70b9\u7684sum\n        }\n    }\n}\n```",
        "postTime": 1505554209,
        "uid": 25709,
        "name": "SNiFe",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "- \u9898\u76ee\u94fe\u63a5\uff1a\n\n   https://www.luogu.org/problemnew/show/P2184\n   \n- \u601d\u8def\uff1a\n\n   \u9996\u5148\u6211\u60f3\u5410\u69fd\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u73b0\u6709\u9898\u89e3\u4e2d\u7684\u505a\u6cd5\u90fd\u662f\u4e00\u6837\u7684\uff0c\u800c\u4e14\u8fd8\u6bd4\u8f83\u96be\u4ee5\u7406\u89e3;\n   \n   \u6211\u5c31\u8bb2\u4e0b\u6211\u7684\u505a\u6cd5\uff0c\u672c\u8d28\u4e0a\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u8ddf\u5bb9\u6613\u7406\u89e3.\n   \n   \u6839\u636e\u9898\u610f\u6bcf\u52a0\u4e00\u6b21\u5730\u96f7\u5c31\u591a\u4e00\u4e2a\u79cd\u7c7b\u5bf9\u5427\uff0c\u6211\u4eec\u7528\u4e00\u4e2acnt\u8bb0\u5f55\u52a0\u8fc7\u5730\u96f7\u7684\u6b21\u6570\uff0c\u540c\u65f6\u5206\u522b\u7528\u4e24\u4e2a\u6570\u7ec4\u8bb0\u5f55\u5de6\u53f3\u4e24\u4e2a\u7aef\u70b9\u7684\u4f4d\u7f6e\u3002\u7136\u540e\u67e5\u8be2[l,r]\u65f6\u5462\uff0c\u6211\u4eec\u5206\u522b\u67e5\u8be2[1,l-1]\u6709\u591a\u5c11\u4e2a\u53f3\u7aef\u70b9\uff0c[r+1,n]\u6709\u591a\u5c11\u4e2a\u5de6\u7aef\u70b9,\u7136\u540e\u8fd9\u4e24\u4e2a\u6570\u7684\u548c\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u5c31\u662f\u6709\u591a\u5c11\u6b21\u94fa\u5730\u96f7\u6ca1\u94fa\u5230\u6211\u4eec\u67e5\u8be2\u7684\u8fd9\u4e2a[l,r]\u533a\u95f4\u3002\n   \n   \u6700\u540ecnt-\u521a\u521a\u4e24\u6b21\u67e5\u8be2\u7684\u548c\u5c31\u662f\u6709\u591a\u5c11\u6b21\u5730\u96f7\u94fa\u5230\u4e86[l,r]\u8fd9\u4e2a\u533a\u95f4\uff0c\u8f93\u51fa\u5373\u53ef\uff0c\u5f53\u7136\uff0c\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e9b\u64cd\u4f5c\u3002\n   \n- \u4ee3\u7801\uff1a\n\n```\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cstring>\n#include <cctype>\nusing namespace std;\nconst int maxn=100005;\nint sum_r[maxn<<2],sum_l[maxn<<2],add[maxn<<2];\nint n,m;\nint L,R;\nvoid update_l(int now,int l,int r,int t){\n\tif(l==r){\n\t\tsum_l[now]++;\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tif(t<=mid)update_l(now<<1,l,mid,t);\n\telse update_l(now<<1|1,mid+1,r,t);\n\tsum_l[now]=sum_l[now<<1]+sum_l[now<<1|1];\n\treturn ;\n}\nvoid update_r(int now,int l,int r,int t){\n\tif(l==r){\n\t\tsum_r[now]++;\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tif(t<=mid)update_r(now<<1,l,mid,t);\n\telse update_r(now<<1|1,mid+1,r,t);\n\tsum_r[now]=sum_r[now<<1]+sum_r[now<<1|1];\n\treturn ;\n}\nint query_l(int now,int l,int r){\n\tif(L<=l&&r<=R){\n\t\treturn sum_l[now];\n\t}\n\tint mid=(l+r)>>1;\n\tint ans=0; \n\tif(L<=mid)ans+=query_l(now<<1,l,mid);\n\tif(mid<R)ans+=query_l(now<<1|1,mid+1,r);\n\treturn ans;\n}\nint query_r(int now,int l,int r){\n\tif(L<=l&&r<=R){\n\t\treturn sum_r[now];\n\t}\n\tint mid=(l+r)>>1;\n\tint ans=0; \n\tif(L<=mid)ans+=query_r(now<<1,l,mid);\n\tif(mid<R)ans+=query_r(now<<1|1,mid+1,r);\n\treturn ans;\n}\nint main()\n{\n\tint op,l,r;\n\tint cnt=0,tmp=0;\n\tscanf(\"%d %d\",&n,&m);\n\tfor(register int i=1;i<=m;i++){\n\t\tscanf(\"%d %d %d\",&op,&l,&r);\n\t\tif(op==1){\n\t\t\tupdate_l(1,1,n,l);\n\t\t\tupdate_r(1,1,n,r);\n\t\t\tcnt++;\n\t\t}\n\t\telse {\n\t\t\tL=r+1,R=n;\n\t\t\tif(L<=R)tmp+=query_l(1,1,n);\t\t\n\t\t\tL=1,R=l-1;\n\t\t\tif(L<=R)tmp+=query_r(1,1,n);\n\t\t    cout<<cnt-tmp<<endl;\n\t\t    tmp=0;\n\t\t}\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1524815044,
        "uid": 61382,
        "name": "Rye_Catcher",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "\u9996\u5148\u89c2\u5bdf\u9898\u76ee\u5b9e\u8d28\uff1a\n\n1.\u6254\u4e00\u4e2a\u533a\u95f4[l,r]\n\n2.\u67e5\u8be2\u6709\u591a\u5c11\u4e2a\u4e4b\u524d\u63d2\u5165\u8fc7\u7684\u533a\u95f4\u4e0e[l,r]\u6709\u4ea4\n\n\u56de\u5fc6\u6211\u4eec\u7ebf\u6bb5\u6811\u5982\u4f55\u5224\u65ad\u5f53\u524d\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4[l,r]\u4e0e\u8be2\u95ee\u533a\u95f4[L,R]\u6ca1\u6709\u4ea4\u96c6\n\n```cpp\nif (l>R||r<L)return 0;\n```\n\u6ca1\u6709\u4ea4\u96c6\u662fl>R||r<L\u90a3\u4e48\u6709\u4ea4\u96c6\u5c31\u662f!(l>R||r<L)=l<=R&&r>=L\n\n\u7136\u540e\u8fd9\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\n\n$$r>=L.l<=R$$\n\n(l,r\u4ee3\u8868\u4e4b\u524d\u63d2\u5165\u8fc7\u7684\u6240\u6709\u533a\u95f4,L,R\u4ee3\u8868\u67e5\u8be2\u533a\u95f4)\n\n\u7136\u540e\u8fd9\u4e2a\u73a9\u610f\u5982\u679c\u5728\u7ebf\u7684\u8bdd\u663e\u7136\u53ef\u4ee5\u76f4\u63a5\u6811\u5957\u6811\u76f4\u63a5\u7206\u641e\n\n\u53bbcdq\u5206\u6cbb\u79bb\u7ebf\u4f60\u5c31\u8981\u52a0\u4e00\u7ef4\u65f6\u95f4\u53d8\u6210\u4e09\u7ef4\u504f\u5e8f\u975e\u5e38\u4e0d\u723d\n\n\u4ec0\u4e48\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u7ebf\u6bb5\u6811\u505a\u6cd5\u6211\u592a\u83dc\u4e86\u4e0d\u4f1a\n\n\u7136\u540e\u6211\u5c31\u7528\u4e86\u4e2a$KDtree$\u7ef4\u62a4\u8fd9\u4e2a\u4e8c\u7ef4\u504f\u5e8f\n\n\u8981\u52a8\u6001\u63d2\u5165\uff0c\u66ff\u7f6a\u7f8a\u601d\u60f3\u91cd\u6784\u5373\u53ef\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing std::nth_element;\ntemplate<class type>inline const void read(type &in)\n{\n\tin=0;char ch=getchar();bool f=0;\n\twhile (ch<48||ch>57){if (ch=='-')f=1;ch=getchar();}\n\twhile (ch>47&&ch<58)in=(in<<3)+(in<<1)+(ch&15),ch=getchar();\n\tif (f)in=-in;\n}\ntemplate<class type>inline const void write(type out)\n{\n\tif (out>9)write(out/10);\n\tputchar(out%10+48);\n}\ntemplate<class type>inline const void writeln(type out)\n{\n\tif (out<0)out=-out,putchar('-');\n\twrite(out);\n\tputchar('\\n');\n}\ntemplate<class type>inline const type max(const type &a,const type &b)\n{\n\treturn a>b?a:b;\n}\ntemplate<class type>inline const type min(const type &a,const type &b)\n{\n\treturn a<b?a:b;\n}\nconst int N=1e5+10,inf=2147483647,K=2;\nint n,m;\nint f;\nstruct point\n{\n\tint d[K];\n\tinline point(const int &x=0,const int &y=0){d[0]=x;d[1]=y;}\n\tinline const bool operator<(const point &p)const\n\t{\n\t\treturn d[f]<p.d[f];\n\t}\n};\ntemplate<int k>class KD_Tree\n{\n\tprivate:\n\t\tstatic const double alpha=0.75;\n\t\tstruct tree\n\t\t{\n\t\t    int size;\n\t\t    tree *son[2];\n\t\t    point range,mx,mn;\n\t\t    inline const void pushup()\n\t\t    {\n\t\t    \tsize=son[0]->size+1+son[1]->size;\n\t\t    \tfor (int i=0;i<k;i++)\n\t\t    \t\tmn.d[i]=min(range.d[i],min(son[0]->mn.d[i],son[1]->mn.d[i])),\n\t\t    \t\tmx.d[i]=max(range.d[i],max(son[0]->mx.d[i],son[1]->mx.d[i]));\n\t\t    }\n\t\t    inline const bool at(const point &lower,const point &upper)\n\t\t    {\n\t\t    \tfor (int i=0;i<k;i++)\n\t\t    \t\tif (!(range.d[i]>=lower.d[i]&&range.d[i]<=upper.d[i]))\n\t\t    \t\t\treturn 0;\n\t\t    \treturn 1;\n\t\t    }\n\t\t    inline const bool in(const point &lower,const point &upper)\n\t\t    {\n\t\t    \tfor (int i=0;i<k;i++)\n\t\t    \t\tif (!(mn.d[i]>=lower.d[i]&&mx.d[i]<=upper.d[i]))\n\t\t    \t\t\treturn 0;\n\t\t    \treturn 1;\n\t\t    }\n\t\t    inline const bool out(const point &lower,const point &upper)\n\t\t    {\n\t\t    \tfor (int i=0;i<k;i++)\n\t\t    \t\tif (mn.d[i]>upper.d[i]||mx.d[i]<lower.d[i])\n\t\t    \t\t\treturn 1;\n\t\t    \treturn 0;\n\t\t    }\n\t\t    inline const bool unbalanced()\n\t\t    {\n\t\t    \treturn son[0]->size>size*alpha||son[1]->size>size*alpha;\n\t\t    }\n\t\t}*root,memory_pool[N],*tail,*null,*recycle[N];\n\t\tint top,flag,cnt;\n\t\tpoint a[N];\n\t\tinline const void init()\n\t\t{\n\t\t\ttail=memory_pool;\n\t\t\tnull=tail++;\n\t\t\troot=null->son[0]=null->son[1]=null;\n\t\t\tfor (int i=0;i<k;i++)null->mn.d[i]=inf,null->mx.d[i]=-inf;\n\t\t}\n\t\tinline tree *spawn(const point &x)\n\t\t{\n\t\t\ttree *p=top?recycle[--top]:tail++;\n\t\t\tp->size=1;\n\t\t\tp->range=p->mx=p->mn=x;\n\t\t\tp->son[0]=p->son[1]=null;\n\t\t\treturn p;\n\t\t}\n\t\tinline const void travel(tree *p)\n\t\t{\n\t\t\tif (p==null)return;\n\t\t\ttravel(p->son[0]);\n\t\t\ta[++cnt]=p->range;\n\t\t\trecycle[top++]=p;\n\t\t\ttravel(p->son[1]);\n\t\t}\n\t\tinline tree *build(int l,int r,int d)\n\t\t{\n\t\t\tif (l>r)return null;\n\t\t\tint mid=l+r>>1;f=d;\n\t\t\tnth_element(a+l,a+mid,a+r+1);\n\t\t\ttree *p=spawn(a[mid]);\n\t\t\tif (l==r)return p;\n\t\t\tp->son[0]=build(l,mid-1,(d+1)%k);\n\t\t\tp->son[1]=build(mid+1,r,(d+1)%k);\n\t\t\tp->pushup();\n\t\t\treturn p;\n\t\t}\n\t\tinline const void rebuild(tree *&p,int d)\n\t\t{\n\t\t\tcnt=0;\n\t\t\ttravel(p);\n\t\t\tp=build(1,cnt,d);\n\t\t}\n\t\tinline tree **insert(tree *&p,const point &x,int d)\n\t\t{\n\t\t\tif (p==null)return p=spawn(x),&null;\n\t\t\ttree **bad=insert(p->son[p->range.d[d]<x.d[d]],x,(d+1)%k);\n\t\t\tp->pushup();\n\t\t\tif (p->unbalanced())bad=&p,flag=d;\n\t\t\treturn bad;\n\t\t}\n\t\tinline const int query(tree *p,const point &x,const point &y)\n\t\t{\n\t\t\tif (p==null)return 0;\n\t\t\tif (p->out(x,y))return 0;\n\t\t\tif (p->in(x,y))return p->size;\n\t\t\treturn p->at(x,y)+query(p->son[0],x,y)+query(p->son[1],x,y);\n\t\t}\n\tpublic:\n\t\tinline KD_Tree(){init();}\n\t\tinline const void insert(int x,int y)\n\t\t{\n\t\t\ttree **bad=insert(root,point(x,y),flag=0);\n\t\t\tif (*bad==null)return;\n\t\t\trebuild(*bad,flag);\n\t\t}\n\t\tinline const int query(int x1,int y1,int x2,int y2)\n\t\t{\n\t\t\treturn query(root,point(x1,y1),point(x2,y2));\n\t\t}\n};\nKD_Tree<K>kdt;\nint main()\n{\n\tread(n);read(m);\n\tfor (int opt,l,r;m--;)\n\t\tif (read(opt),read(l),read(r),opt&1)kdt.insert(l,r);\n\t\telse writeln(kdt.query(-inf,l,r,inf));\n\treturn 0;\n}\n```",
        "postTime": 1571374919,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "#\u9898\u76ee\u94fe\u63a5\n\n[P2184 \u8d2a\u5a6a\u5927\u9646](https://www.luogu.org/problemnew/show/P2184)\n\n#\u601d\u8def\n\n\u6811\u72b6\u6570\u7ec4\u7684\u6a21\u677f\u9898\n\n>1.\u53ea\u8981\u4e00\u4e2a\u533a\u95f4\u7684\u5f00\u5934\u5728\u4e00\u4e2a\u8282\u70b9$i$\u7684\u5de6\u8fb9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u5305\u542b\u5728\u533a\u95f4$1~i$\u4e2d\u3002\n>\n>2.\u53ea\u8981\u4e00\u4e2a\u533a\u95f4\u7684\u5c3e\u90e8\u5728\u4e00\u4e2a\u8282\u70b9$j$\u7684\u5de6\u8fb9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u80af\u5b9a\u4e0d\u5c5e\u4e8e$j$\u4e4b\u540e\u7684\u6240\u6709\u533a\u95f4\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u641e\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u6765\u505a\n\n$tree_{head}[i]$\u7ef4\u62a4$i$\u4e4b\u524d\u7684\u5f00\u5934\u6570\u91cf\n\n$tree_{tail}[j]$\u7ef4\u62a4$j$\u4e4b\u524d\u7684\u7ed3\u5c3e\u6570\u91cf\n\n\u7ed3\u5408\u6837\u4f8b\u53ef\u4ee5\u770b\u51fa\u6765$tree_{head}[j]-tree_{tail}[i]$\u5373\u4e3ai-j\u4e4b\u95f4\u7684\u96f7\u79cd\u7c7b\u6570\n\n\u6837\u4f8b\u5206\u6790:\n\n>5 4\n>1 1 3\n>2 2 5\n>1 2 4\n>2 3 5\n\n>1\n>2\n\n![](https://i.loli.net/2019/07/01/5d1974f00575519008.bmp)\n\n\u5047\u8bbe\u8981\u6c422\u52303\u4e4b\u95f4\u7684\u96f7\u79cd\u7c7b\u6570,\u53ef\u4ee5\u770b\u51fa$tree_{tail}[1]=0$,$head_{tail}[3]=2$,\n\n\u6240\u4ee5\u4e0a\u8ff0\u7684\u7ed3\u8bba\u6210\u7acb\n\u53ef\u4ee5\u81ea\u5df1\u591a\u641e\u51e0\u7ec4\u6570\u636e\u770b\u770b\n\n#\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#include<stack>\n#include<vector>\n#include<map>\n#include<string>\n#include<cstring>\n#define ll long long int\n#define lowbit(x) x & -x\n#define N 100000\nusing namespace std;\ninline int read() {\n\tchar c = getchar();\n\tint x = 0, f = 1;\n\twhile(c < '0' || c > '9') {\n\t\tif(c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile(c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n\treturn x * f;\n}\nint head_tree[N*2],tail_tree[N*2],n,m;\nvoid update_head(int x) {\n\twhile(x<=n) {\n\t\t++head_tree[x];\n\t\tx+=lowbit(x);\n\t}\n}\nvoid update_tail(int x) {\n\twhile(x<=n) {\n\t\t++tail_tree[x];\n\t\tx+=lowbit(x);\n\t}\n}\nint find_head(int x) {\n\tint res=0;\n\twhile(x>0) {\n\t\tres+=head_tree[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn res;\n}\nint find_tail(int x) {\n\tint res=0;\n\twhile(x>0) {\n\t\tres+=tail_tree[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn res;\n}\nint main() {\n\tcin>>n>>m;\n\tfor(int i=1; i<=m; ++i) {\n\t\tint q,x,y;\n\t\tcin>>q>>x>>y;\n\t\tif(q==1) {\n\t\t\tupdate_head(x);\n\t\t\tupdate_tail(y);\n\t\t} else {\n\t\t\tcout<<find_head(y)-find_tail(x-1)<<\"\\n\";\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1561942172,
        "uid": 122557,
        "name": "pyyyyyy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "/\\*\u56e0\u4e3a\u653e\u70b8\u5f39\u7684\u65f6\u5019\u4e0d\u662f\u5c06\u524d\u9762\u653e\u7684\u70b8\u5f39\u8986\u76d6\uff0c\u800c\u662f\u7d2f\u52a0\uff0c\u6240\u4ee5\u4e0d\u662f\u7b80\u5355\u7684\u6c42\u6700\u5927\u503c\u6216\u8005\u6c42\u548c\u3002\u7136\u540e\u6211\u60f3\u5230\u4e86\u7528\u7ebf\u6bb5\u6811\uff0c\u5728\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e0b\u5f00\u4e00\u4e2a\u6570\u7ec4\uff0c\u8bb0\u5f55\u4e0b\u9762\u7684\u70b8\u5f39\u79cd\u7c7b\uff0c\u4f46\u662f\u60f3\u60f3\u5c31\u4f1aTLE\u6216\u8005RE\uff0c\u6240\u4ee5\u679c\u65ad\u653e\u5f03\uff0c\u5199\u6811\u72b6\u6570\u7ec4\uff08\u5176\u5b9e\u662f\u4ece\u4e00\u4e2a\u5b66\u957f\u90a3\u513f\u770b\u7684\uff09\u3002\n\n\uff08\u7c7b\u4f3c\u524d\u7f00\u548c\uff09\u56e0\u4e3a\u70b8\u5f39\u4e00\u653e\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u653e\u70b8\u5f39\u7684\u533a\u95f4\u7684\u8d77\u70b9l\u548c\u7ec8\u70b9r\uff0c\u8868\u793a[l..r]\u653e\u4e86\u4e00\u79cd\u70b8\u5f39\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u70b8\u5f39\u7684\u79cd\u7c7b\u7684\u603b\u6570\u7b49\u4e8e[1..r]\u7684\u70b8\u5f39\u79cd\u7c7b\u7684\u548c-[1..l-1]\u7684\u53f3\u7aef\u70b9\u6570\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u662f\u53f3\u7aef\u70b9\uff0c\u662f\u56e0\u4e3a\u67e5\u8be2\u533a\u95f4\u53ef\u80fd\u6709\u5f53\u524d\u8fd9\u79cd\u70b8\u5f39\uff0c\u5982\u679c\u51cf\u53bb\u7684\u662f\u5de6\u7aef\u70b9\uff0c\u90a3\u4e48\u5c31\u4f1a\u591a\u51cf\u4e86\u4e00\u79cd\uff0c\u4f7f\u7b54\u6848\u53d8\u5c0f\u3002\n\n\u6240\u4ee5\u70b8\u5f39\u79cd\u7c7b\u6570=L[1..r](1..r\u7684\u70b8\u5f39\u79cd\u7c7b)-R[1..l-1]\uff081..r\u7684\u53f3\u7aef\u70b9\u4e2a\u6570\uff09\\*/\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<stack>\n#include<algorithm>\n#define N 1000050\nusing namespace std;\nint n,m,q,l,r,sum,tree[N][2];    //tree[i][0]\u8868\u793a\u4ee5i\u4e3a\u5de6\u7aef\u70b9\u7684\u70b8\u5f39\u7684\u4e2a\u6570\uff0ctree[i][1]\u8868\u793a\u4ee5i\u4e3a\u53f3\u7aef\u70b9\u7684\u70b8\u5f39\u7684\u4e2a\u6570 \nint read()        //\u4e00\u5f00\u59cb\u8bfb\u5165\u4f18\u5316\u5199\u9519\u8fc7\u4e86\u6837\u4f8b\u5168\u90e8RE \n{\n    int sum=0,f=1;\n    char c=getchar();\n    for(;(c<'0'||c>'9')&&c!='-';c=getchar());\n    if(c=='-') f=-1,c=getchar();\n    for(;c>='0'&&c<='9';c=getchar())\n    {\n        sum=sum*10+c-'0';\n    }\n    return sum*f;\n}\nint lowbit(int x)    //\u627e\u6700\u540e\u4e00\u4e2a1\u7684\u4f4d\u7f6e \n{\n    return x&(-x);\n}\nvoid update(int x,int p)\n{\n    while(x<=n)\n    {\n        tree[x][p]++;\n        x+=lowbit(x);    //\u627e\u7238\u7238 \n    }\n}\nint query(int x,int p)\n{\n    int sum=0;\n    while(x>=1)\n    {\n        sum+=tree[x][p];\n        x-=lowbit(x);        //\u627e\u5144\u5f1f \n    }\n    return sum;\n}\nint main()\n{\n    n=read();m=read();\n    for(int i=1;i<=m;i++)\n    {\n        q=read();l=read();r=read();\n        if(q==1) update(l,0),update(r,1),sum++;        //\u6dfb\u52a0\u5de6\u53f3\u7aef\u70b9 \n        else printf(\"%d\\n\",query(r,0)-query(l-1,1));    //\u6c42\u70b8\u5f39\u79cd\u7c7b\u548c \n    }\n    return 0;\n}\n```",
        "postTime": 1501071445,
        "uid": 39886,
        "name": "Drifterming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "\u505a\u5b8c\u4e4b\u540e\u770b\u4e86\u770b\u9898\u89e3\uff0c\u624d\u53d1\u73b0\u548c\u6211\u7684\u505a\u6cd5\u90fd\u4e0d\u540c\u3002\u3002\u3002\n\n\u6211\u7528\u7684\u662f\u5341\u5206\u4f20\u7edf\u7684\u7ebf\u6bb5\u6811\uff0c\u6b7b\u677f\u5730\u7ef4\u62a4\uff08\u592a\u83dc\u60f3\u4e0d\u51fa\u7b80\u5355\u7684\u65b9\u6cd5\uff09\u3002\n\nNode\u662f\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u7684\u4fe1\u606f\u662fMsg\uff1a\n\n**num**\uff1a\u5f53\u524d\u8282\u70b9\u533a\u95f4\u7684\u5730\u96f7\u79cd\u6570\n\n**outl**\uff1a\u8d85\u51fa\u8282\u70b9\u533a\u95f4\u5de6\u8fb9\u7684\u5730\u96f7\u79cd\u6570\n\n**outr**\uff1a\u8d85\u51fa\u8282\u70b9\u533a\u95f4\u53f3\u8fb9\u7684\u5730\u96f7\u79cd\u6570\n\n\u8fd9\u6837\uff0c\u4e00\u822c\u7684\u533a\u95f4\u4fe1\u606f\u5c31\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u5408\u5e76\u4e86\uff1a\n```\n\tret.num=m1.num+m2.num-m1.outr;//m1.outr==m2.outl\n\tret.outl=m1.outl;\n\tret.outr=m2.outr;\n```  \n\u4f46\u662fpushDown\u53ef\u5c31\u6ca1\u6709\u90a3\u4e48\u7b80\u5355\u4e86\u3002\n\n\u4e3a\u4e86\u505a\u5230\u533a\u95f4\u88c5\u5730\u96f7\uff0c\u6211\u4e00\u5171\u6253\u4e865\u4e2a\u6807\u8bb0\uff1a\n\n**adds**\uff1a\u4e0eouts\u5bf9\u5e94\u7684\u61d2\u6807\u8bb0\n\n**addl**\uff1a\u4e0eoutl\u5bf9\u5e94\u7684\u61d2\u6807\u8bb0\n\n**addr**\uff1a\u4e0eoutr\u5bf9\u5e94\u7684\u61d2\u6807\u8bb0\n\n(\u4ee5\u4e0b\u6807\u8bb0\u5c24\u4e3a\u6ce8\u610f)\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u53ea\u7528\u524d\u4e09\u4e2a\u6807\u8bb0pushDown\uff0c\u628a\u6807\u8bb0\u76f4\u63a5\u4f20\u7ed9\u513f\u5b50\uff0c\u65e0\u6cd5\u89e3\u51b3\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u5c31\u662f\u533a\u95f4\u5728\u67e5\u8be2\u533a\u95f4\u7684\u6700\u5de6\u8fb9\u6216\u8005\u6700\u53f3\u8fb9\u3002\n\n\u5c31\u62ff\u5728'\u67e5\u8be2\u533a\u95f4\u6700\u5de6\u8fb9'\u7684\u8282\u70b9k\u6765\u8bf4\uff08\u7ed3\u5408add\u51fd\u6570\u4e2d\u7684\u4ee3\u7801\uff09\uff0c\u6b64\u65f6ql<k->l\u4e0d\u6210\u7acb(\u56e0\u4e3aql==k->l)\uff0c\u5bfc\u81f4addl\u6807\u8bb0+=0\uff0c\u800cpushDown\u53c8**\u76f4\u63a5\u628a\u6807\u8bb0\u5e94\u7528\u5230 _\u4e24\u4e2a_ \u513f\u5b50\u4e0a**\uff1ak\u7684\u5de6\u513f\u5b50\u7684addl+=0\uff0c\u66f4\u65b0\u6b63\u786e\uff0c\u800ck\u7684\u53f3\u513f\u5b50\u7684addl+=0\u5c31\u4e0d\u5bf9\u4e86\uff0c\u56e0\u4e3a\u6b64\u65f6ql<k->ch[1]\u6210\u7acb\u4e86\uff0c\u5e94\u4e3aaddl+=1\uff0c\u4e0e\u7236\u4eb2k\u4e0d\u7b26\u3002\n\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c\u6211\u4eec\u7279\u5730\u5f15\u5165\u4e24\u4e2a\u6807\u8bb0\uff1a\n\n**isL**\uff1a\u662f\u5426\u662f\u67e5\u8be2\u533a\u95f4\u6700\u5de6\u8fb9\u7684\u8282\u70b9\n\n**isR**\uff1a\u662f\u5426\u662f\u67e5\u8be2\u533a\u95f4\u6700\u53f3\u8fb9\u7684\u8282\u70b9\n\n\uff08\u672c\u6765\u662fbool\u7c7b\u578b\uff0c\u53ef\u662f\u4e5f\u53ef\u80fd\u6709\u4e0a\u9762\u7684isL/isR\u6807\u8bb0\u4f20\u4e0b\u6765\uff09\n\n\u5982\u679c\u51fa\u73b0isL\uff0c\u5c31\u628ak\u7684\u53f3\u513f\u5b50\u7684\u5de6\u8fb9\u8d85\u51fa\u79cd\u6570\u52a0\u56de\u6765\uff1b\n\n\u5982\u679c\u51fa\u73b0isR\uff0c\u5c31\u628ak\u7684\u5de6\u513f\u5b50\u7684\u53f3\u8fb9\u8d85\u51fa\u79cd\u6570\u52a0\u56de\u6765\u3002\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nint n,m;\nstruct Msg{\n\tint num,outl,outr;\n\tMsg(){num=outl=outr=0;}\n\tMsg(int a,int b,int c){num=a,outl=b,outr=c;}\n};\nMsg combine(Msg m1,Msg m2){//\u6709\u5e8f\u7684\u4fe1\u606f\u5408\u5e76\uff0c\u7528\u4e8epushUp\u4e0equery\u51fd\u6570\n\tMsg ret=Msg();\n\tret.num=m1.num+m2.num-m1.outr;\n\tret.outl=m1.outl;\n\tret.outr=m2.outr;\n\treturn ret;\n}\nstruct Node *null;\nstruct Node{\n\tNode *ch[2];\n\tMsg msg;\n\tint l,r,mid;\n\tint addl,addr,adds,isL,isR;\n\tNode(int ll,int rr){ch[0]=ch[1]=null;l=ll,r=rr,mid=ll+rr>>1;addl=addr=adds=isL=isR=0;msg=Msg();}\n\tvoid pushUp(){msg=combine(ch[0]->msg,ch[1]->msg);}\n\tvoid addLNode(int al){addl+=al;msg.outl+=al;}\n\tvoid addRNode(int ar){addr+=ar;msg.outr+=ar;}\n\tvoid addNode(int as){adds+=as;msg.num+=as;}\n\tvoid pushDown(){//\u53ea\u6709adds,addl,addr\u76f4\u63a5\u4f20\u7ed9\u4e24\u4e2a\u513f\u5b50\n\t\tif(isL){ch[1]->addLNode(isL);ch[0]->isL+=isL;isL=0;}\n\t\tif(isR){ch[0]->addRNode(isR);ch[1]->isR+=isR;isR=0;}\n\t\tif(adds){ch[0]->addNode(adds);ch[1]->addNode(adds);adds=0;}\n\t\tif(addl){ch[0]->addLNode(addl);ch[1]->addLNode(addl);addl=0;}\n\t\tif(addr){ch[0]->addRNode(addr);ch[1]->addRNode(addr);addr=0;}\n\t}\n}*root;\nvoid build(Node *&k){//build\u51fa\u7684\u662f\u7a7a\u7ebf\u6bb5\u6811\uff0c\u4e0d\u7528pushUp\n\tif(k->r==k->l)return;\n\tbuild(k->ch[0]=new Node(k->l,k->mid));\n\tbuild(k->ch[1]=new Node(k->mid+1,k->r));\n}\nvoid add(int ql,int qr,Node *&k=root){\n\tif(ql>k->r||qr<k->l)return;\n\tif(ql<=k->l&&qr>=k->r){//\u5230\u8fbe\u9700\u8981\u4fee\u6539\u7684\u533a\u95f4\n\t\tif(ql==k->l)++k->isL;\n\t\tif(qr==k->r)++k->isR;\n\t\tk->addLNode(ql<k->l);\n\t\tk->addRNode(qr>k->r);\n\t\tk->addNode(1);\n\t\treturn;\n\t}\n\tk->pushDown();\n\tadd(ql,qr,k->ch[0]),add(ql,qr,k->ch[1]);\n\tk->pushUp();\n}\nMsg query(int ql,int qr,Node *&k=root){\n\tif(ql<=k->l&&qr>=k->r)return k->msg;\n\tk->pushDown();\n\tif(qr<=k->mid)return query(ql,qr,k->ch[0]);\n\tif(ql>k->mid)return query(ql,qr,k->ch[1]);\n\treturn combine(query(ql,qr,k->ch[0]),query(ql,qr,k->ch[1]));\n}\nint main(){int O,l,r;\n\tscanf(\"%d%d\",&n,&m);\n\tnull=new Node(0,0);\n\tbuild(root=new Node(1,n));\n\twhile(m--){\n\t\tscanf(\"%d%d%d\",&O,&l,&r);\n\t\tif(O==1)add(l,r);\n\t\telse printf(\"%d\\n\",query(l,r).num);\n\t}\n}\n\n```",
        "postTime": 1533729019,
        "uid": 51189,
        "name": "Delva",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "\u6b64\u9898\u7531\u6211\u6821\u795e\u7287zzy\u8bb2\u89e3\uff0c\u4f46\u662f\u4ed6\u592a\u795e\u4e86\uff0c\u6211\u5c31\u5199\u7bc7\u9898\u89e3\u4ee3\u66ff\u4ed6\u5427\n\n**\u4e00\u4e0b\u53ea\u7ed9\u51fa\u601d\u8def\uff0c\u4ee3\u7801\u697c\u4e0b\u6709**\n\n\n**\u6211\u4eec\u770b\u9898\u76ee\u53ef\u4ee5\u5f97\u77e5\u8fd9\u662f\u4e00\u4e2a\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u7684\u95ee\u9898\uff08\u4f46\u4f3c\u4e4e\u53c8\u6709\u4e00\u70b9\u4e0d\u4e00\u6837\uff09**\n\n**\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff08\u4ee5\u4e0b\u7b80\u79f0add1\uff0csum1\uff0cadd2\uff0csum2\uff09**\n\n\n**\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u589e\u52a0\u7684\u533a\u95f4\uff0c\u7528add1\u5bf9\u5de6\u7aef\u70b9\u52a0\u4e00\uff0cadd2\u5bf9\u53f3\u7aef\u70b9\u52a0\u4e00**\n\n**\u5bf9\u4e8e\u67e5\u8be2\u6bcf\u4e2a\u533a\u95f4\u3010L\uff0cR\u3011**\n\n**\u7528sum1\u6c42\u51fa\u4ece   1~R   \u4e2d \u5de6\u7aef\u70b9 \u7684\u4e2a\u6570**\n\n**sum2\u6c42\u51fa\u4ece   1~L-1   \u4e2d\u53f3\u7aef\u70b9  \u7684\u4e2a\u6570**\n\n**\u7528  sum1-sum2 \uff08\u5373\u51cf\u53bb\u53f3\u7aef\u70b9\u4e0d\u5728\u3010L\uff0cR\u3011\u4e2d\u7684\u70b9\uff0c\u5c31\u662f\u4fee\u6539\u65f6\u6ca1\u6709\u5728\u3010L\uff0cR\u3011\u4e2d\u4fee\u6539\uff09\u53ef\u6c42\u51fa\u3010L,R\u3011\u4e2d\u7684\u79cd\u7c7b\u6570\u76ee**\n\n",
        "postTime": 1507209891,
        "uid": 18441,
        "name": "Drug__Lover",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "\u672c\u9898\u89e3\u540c\u6b65\u53d1\u5e03\u4e8e[\u4e2a\u4eba\u535a\u5ba2](https://www.cnblogs.com/lcezych/p/12181066.html)\n\n\u505a\u6cd5\uff1a\u5dee\u5206+\u7ebf\u6bb5\u6811\n\n\u9996\u5148\u770b\u5230\u9898\u76ee\u4e2d\u7684\u533a\u95f4\u4fee\u6539\uff0c\u663e\u7136\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811+\u5dee\u5206\u505a\uff0c\u4e8e\u662f\u5c31\u8bbe\u6bcf\u6b21\u533a\u95f4\u4fee\u6539\u7684\u5de6\u7aef\u70b9\u4e3a$1$\uff0c\u53f3\u7aef\u70b9\u4e3a$-1$\u3002\n\n\u8003\u8651\u600e\u4e48\u5229\u7528\u5df2\u6709\u7684\u5dee\u5206\u6570\u7ec4\u3002\n\n\u9996\u5148\u9898\u76ee\u6709\u4e00\u4e2a\u503c\u5f97\u8bf4\u660e\u7684\u5730\u65b9\u5c31\u662f\u4ed6\u4e00\u6b21\u64cd\u4f5c\u57cb\u4e0b\u7684\u5730\u96f7\u5e76\u4e0d\u4f1a\u8986\u76d6\u4e4b\u524d\u57cb\u4e0b\u7684\u5730\u96f7~~(\u6211\u5c31\u56e0\u4e3a\u8fd9\u4e2a\u6d6a\u8d39\u4e86\u4e00\u6b21\u63d0\u4ea4)~~\u3002\n\n\u9996\u5148\u5148\u770b\u4e00\u7ec4\u6570\u636e\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/p5g4dfzp.png)\n\n\u533a\u95f4\u5206\u522b\u4e3a$[1,3],[2,7],[5,6]$\uff0c\u67e5\u8be2\u533a\u95f4$[4,6]$\uff0c\u7ecf\u8fc7\u624b\u63a8\u5f97\u5230\u7b54\u6848\u5e94\u8be5\u662f$2$\u3002\n\n\u8ba9\u6211\u4eec\u770b\u770b$2$\u600e\u4e48\u8868\u793a\n\n\u533a\u95f4$[1,3]$\u662f\u5728\u5de6\u7aef\u70b9\u4e4b\u524d\u7ed3\u675f\u7684\uff0c\u6240\u4ee5\u5b83\u4e0d\u4f1a\u5bf9\u7b54\u6848\u9020\u6210\u5f71\u54cd\u3002\n\n\u533a\u95f4$[2,7]$\u662f\u8986\u76d6\u4e86\u6574\u4e2a\u8be2\u95ee\u533a\u95f4\uff0c\u663e\u7136\u4f1a\u4f7f\u7b54\u6848$+1$\u3002\n\n\u533a\u95f4$[5,6]$\u5728\u8be2\u95ee\u533a\u95f4\u5185\u5f00\u59cb\uff0c\u5728\u8be2\u95ee\u533a\u95f4\u5185\u7ed3\u675f\uff0c\u4e5f\u4f1a\u4f7f\u7b54\u6848$+1$\u3002\n\n\u7a0d\u5fae\u4e00\u601d\u8003\uff0c\u9996\u5148\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7ed3\u8bba\uff0c\u533a\u95f4\u5e76\u4e0d\u91cd\u8981\uff0c\u91cd\u8981\u7684\u662f\u7aef\u70b9\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5173\u5fc3\u6570\u91cf\u800c\u4e0d\u662f\u5177\u4f53\u7684\u6570\u3002\n\n\u90a3\u4e48\u663e\u7136\u5728\u8be2\u95ee\u533a\u95f4\u53f3\u7aef\u70b9\u4ee5\u524d\u7684\u5f00\u59cb\u6807\u8bb0(\u5305\u62ec\u53f3\u7aef\u70b9)\u4f1a\u4f7f\u7b54\u6848$+1$\uff0c\u5728\u8be2\u95ee\u533a\u95f4\u5de6\u7aef\u70b9\u4ee5\u524d\u7684\u7ed3\u675f\u6807\u8bb0(\u4e0d\u5305\u62ec\u5de6\u7aef\u70b9)\u4f1a\u4f7f\u7b54\u6848$-1$\u3002\n\n\u5230\u4e86\u8fd9\u91cc\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e86\u3002\u7ef4\u62a4\u4e24\u68f5\u7ebf\u6bb5\u6811\uff0c\u4e00\u68f5\u8868\u793a\u5f00\u59cb\u6807\u8bb0\uff0c\u8bb0\u4f5c$Tree1$\uff0c\u53e6\u4e00\u68f5\u8868\u793a\u7ed3\u675f\u6807\u8bb0\uff0c\u8bb0\u4f5c$Tree2$\u3002\u90a3\u4e48\u6bcf\u6b21\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u8bb0\u67e5\u8be2\u533a\u95f4\u4e3a$[l,r]$\u7b54\u6848\u5c31\u662f$Tree1[r]-Tree2[l-1]$\u3002\n\nac code\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 100005;\nint n, m;\nstruct Tree\n{\n\tint ad, ct;//add cut\n}tree[N << 2];\n\nvoid add1(int cnt, int l, int r, int x)\n{\n\tif(l == r)\n\t{\n\t\ttree[cnt].ad += 1;\n\t\treturn;\n\t}\n\tint mid = l + r >> 1;\n\tif(mid >= x) add1(cnt << 1, l, mid, x);\n\tif(mid < x) add1(cnt << 1 | 1, mid + 1, r, x);\n\ttree[cnt].ad = tree[cnt << 1].ad + tree[cnt << 1 | 1].ad;\n}\n\nvoid add2(int cnt, int l, int r, int x)\n{\n\tif(l == r)\n\t{\n\t\ttree[cnt].ct += 1;\n\t\treturn;\n\t}\n\tint mid = l + r >> 1;\n\tif(mid >= x) add2(cnt << 1, l, mid, x);\n\tif(mid < x) add2(cnt << 1 | 1, mid + 1, r, x);\n\ttree[cnt].ct = tree[cnt << 1].ct + tree[cnt << 1 | 1].ct;\n}\n\nint query1(int cnt, int l, int r, int nl, int nr)\n{\n\tif(l >= nl && r <= nr) return tree[cnt].ad;\n\tint mid = l + r >> 1, ans = 0;\n\tif(mid >= nl) ans += query1(cnt << 1, l, mid, nl, nr);\n\tif(mid < nr) ans += query1(cnt << 1 | 1, mid + 1, r, nl, nr);\n\treturn ans;\n}\n\nint query2(int cnt, int l, int r, int nl, int nr)\n{\n\tif(l >= nl && r <= nr) return tree[cnt].ct;\n\tint mid = l + r >> 1, ans = 0;\n\tif(mid >= nl) ans += query2(cnt << 1, l, mid, nl, nr);\n\tif(mid < nr) ans += query2(cnt << 1 | 1, mid + 1, r, nl, nr);\n\treturn ans;\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i = 1, q, l, r; i <= m; i ++)\n\t{\n\t\tscanf(\"%d%d%d\", &q, &l, &r);\n\t\tif(q == 1) add1(1, 1, n, l), add2(1, 1, n, r);\n\t\telse if(q == 2)\n\t\t{\n\t\t\tprintf(\"%d\\n\", query1(1, 1, n, 1, r) - query2(1, 1, n, 1, l - 1));\n\t\t}\n\t}\n}\n```\n\n",
        "postTime": 1578746532,
        "uid": 177510,
        "name": "\u5c0f\u849f\u84bb\u76ae\u76ae\u9c7c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "\u672c\u9898\u5728\u7ebf\u6bb5\u6811\u4e2d\u878d\u5165\u4e86\u5dee\u5206\u7684\u601d\u60f3   \n\u6211\u4eec\u6ce8\u610f\u5230\u6bcf\u6b21\u5e03\u4e0a\u7684\u5730\u96f7\u90fd\u548c\u524d\u4e00\u79cd\u4e0d\u540c  \n\u6240\u4ee5\u4e0d\u7528\u7ef4\u62a4\u5730\u96f7\u7684\u79cd\u7c7b  \n\u6211\u4eec\u53ef\u4ee5\u53ea\u7ef4\u62a4\u533a\u95f4\u5730\u96f7\u8d77\u7ec8\u70b9\u7684\u4e2a\u6570  \n\u8fd9\u6837\u6bcf\u6b21\u67e5\u8be2(1,1,l-1)\u548c(1,1,r)\uff0c\u5c31\u77e5\u9053\u6709\u591a\u5c11\u79cd\u5730\u96f7\u5728\u67e5\u8be2\u533a\u95f4\u4e4b\u524d\u5c31\u7ed3\u675f\u653e\u7f6e\u4e86  \n```cpp\n#include<bits/stdc++.h>\n#define lc (p<<1)\n#define rc (p<<1|1)\nusing namespace std;\nstruct Node{\n\tint l,r,sum1,sum2;\n}T[1000010];\nvoid build(int p,int l,int r){\n\tT[p].l=l;T[p].r=r;\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tbuild(lc,l,mid);\n\tbuild(rc,mid+1,r);\n}\nvoid pushup(int p){\n\tT[p].sum1=T[lc].sum1+T[rc].sum1;\n\tT[p].sum2=T[lc].sum2+T[rc].sum2;\n}\nvoid update1(int p,int q){\n\tif(T[p].l==T[p].r&&T[p].l==q){\n\t\tT[p].sum1++;return;\n\t}\n\tint mid=(T[p].l+T[p].r)>>1;\n\tif(q<=mid)update1(lc,q);\n\tif(q>mid)update1(rc,q);\n\tpushup(p);\n}\nvoid update2(int p,int q){\n\tif(T[p].l==T[p].r&&T[p].l==q){\n\t\tT[p].sum2++;return;\n\t}\n\tint mid=(T[p].l+T[p].r)>>1;\n\tif(q<=mid)update2(lc,q);\n\tif(q>mid)update2(rc,q);\n\tpushup(p);\n}\nint query1(int p,int ql,int qr){\n\tif(ql<=T[p].l&&T[p].r<=qr)return T[p].sum1;\n\tint mid=(T[p].l+T[p].r)>>1,ans=0;\n\tif(ql<=mid)ans+=query1(lc,ql,qr);\n\tif(qr>mid)ans+=query1(rc,ql,qr);\n\treturn ans;\n}\nint query2(int p,int ql,int qr){\n\tif(ql<=T[p].l&&T[p].r<=qr)return T[p].sum2;\n\tint mid=(T[p].l+T[p].r)>>1,ans=0;\n\tif(ql<=mid)ans+=query2(lc,ql,qr);\n\tif(qr>mid)ans+=query2(rc,ql,qr);\n\treturn ans;\n}\nint main(){\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tbuild(1,1,n);\n\tfor(int i=1;i<=m;++i){\n\t\tint t,l,r;\n\t\tscanf(\"%d%d%d\",&t,&l,&r);\n\t\tif(t==1)\n\t\t\tupdate1(1,l),update2(1,r);\n\t\tif(t==2)\n\t\t\tprintf(\"%d\\n\",query1(1,1,r)-query2(1,1,l-1));\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1565833680,
        "uid": 138543,
        "name": "\u6597\u795e_\u541b\u83ab\u7b11",
        "ccfLevel": 0,
        "title": "\u7ebf\u6bb5\u6811-3"
    },
    {
        "content": "\u9898\u89e3\u91cc\u5168\u662f\u7ebf\u6bb5\u6811\u548c\u6811\u72b6\u6570\u7ec4\uff0c\u7adf\u7136\u6ca1\u6709\u5199\u5206\u5757\u7684\uff1f\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u7684\u6838\u5fc3\u601d\u60f3\u5c31\u662f\uff1a\u5dee\u5206\u3002\u6211\u4e5f\u662f\u7b2c\u4e00\u6b21\u505a\u5dee\u5206\u9898\uff0c\u770b\u9898\u89e3\u91cc\u5404\u4f4d\u5927\u4f6c\u7684\u8bb2\u89e3\uff0c\u7ec8\u4e8e\u5f04\u61c2\u4e86\u3002\n\n\u5dee\u5206\u5c31\u662f\u5904\u7406\u6709\u591a\u79cd\u4fee\u6539\u7684\u95ee\u9898\u3002\u4f60\u4e0d\u9700\u8981\u8bb0\u5f55\u4e00\u6bb5\u533a\u95f4\uff0c\u53ea\u9700\u8981\u8bb0\u5f55\u5934\u5c3e\u6807\u8bb0\u5c31\u884c\u3002\u60f3\u8be2\u95ee\u4e00\u6bb5\u533a\u95f4\u5185\u6709\u591a\u5c11\u79cd\u4fee\u6539\uff0c\u53ea\u9700\u8981\u67e5\u8be21\u5230\u8be2\u95ee\u533a\u95f4\u672b\u5c3e\u7684\u5934\u6807\u8bb0\u4e2a\u6570\uff0c\u518d\u67e5\u8be21\u5230\u8be2\u95ee\u533a\u95f4\u5934\u6807\u8bb0\u524d\u4e00\u4e2a\u7684\u5c3e\u6807\u8bb0\u4e2a\u6570\uff0c\u505a\u4e00\u4e2a\u5dee\u5c31\u884c\u4e86\u3002\n\n\u60f3\u5230\u8fd9\u91cc\uff0c\u505a\u8fd9\u9053\u9898\u5c31\u53d8\u6210\u4e86\uff1a\u4f60\u9700\u8981\u5199\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u7ef4\u62a4\u5355\u70b9\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\u3002\n\n\u6811\u72b6\u6570\u7ec4\u80af\u5b9a\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u8fd9\u9053\u9898\u6ca1\u5fc5\u8981\u5199\uff0c\u8fd8\u5bb9\u6613\u9519\u3002\u90a3\u5199\u4ec0\u4e48\u5462\uff1f\uff08~~\u7ebf\u6bb5\u6811\u662f\u5565\uff0c\u8fd9\u8f88\u5b50\u90fd\u4e0d\u53ef\u80fd\u5199\u7ebf\u6bb5\u6811~~\uff09\n\n\u80af\u5b9a\u662f\u5199\u53c8\u77ed\u53c8\u597d\u8c03\u7684\u5206\u5757\u554a\uff01\n\n\u5206\u5757\u60f3\u5fc5\u5404\u4f4d\u5927\u4f6c\u5df2\u7ecf\u77e5\u9053\u4e86\uff0c\u5982\u679c\u4e0d\u77e5\u5230\u53ef\u4ee5\u53bb\u770b[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/mxrmxr/p/9912406.html)\u770b\u770b\u3002\n\n\u4e0b\u9762\u662f\u6211\u5341\u5206\u4e0d\u4f18\u79c0\u7684\u5206\u5757\u4ee3\u7801\uff1a\n\n```c\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<set>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#define rint register int\n#define N 100005\nusing namespace std;\n\ninline int read()\n{\n    char c=getchar();int x=0,f=1;\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    return x*f;\n}\n\ninline void write(int x)\n{\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n    return ;\n}\n \nint blo,n,m;\nint v1[N],v2[N],bl1[N],bl2[N],tag1[N],tag2[N];\n\ninline void add1(int l,int k)\n{\n    v1[l]+=k;tag1[bl1[l]]+=k;\n    return ;\n}\n \ninline void add2(int l,int k)\n{\n    v2[l]+=k;tag2[bl2[l]]+=k;\n\treturn ;\t\n} \n \ninline int query1(int l,int r)\n{\n    int ans=0;\n    for(rint i=l;i<=min(bl1[l]*blo,r);++i) ans+=v1[i];\n    if(bl1[l]!=bl1[r])\n    {\n        for(rint i=(bl1[r]-1)*blo+1;i<=r;++i) ans+=v1[i];\n    }\n    for(rint i=bl1[l]+1;i<=bl1[r]-1;++i) ans+=tag1[i];\n    return ans;\n}\n\ninline int query2(int l,int r)\n{\n    int ans=0;\n    for(rint i=l;i<=min(bl2[l]*blo,r);++i) ans+=v2[i];\n    if(bl2[l]!=bl2[r])\n    {\n        for(rint i=(bl2[r]-1)*blo+1;i<=r;++i) ans+=v2[i];\n    }\n    for(rint i=bl2[l]+1;i<=bl2[r]-1;++i) ans+=tag2[i];\n    return ans;\n}\n\nint main()\n{\n    n=read(),m=read();blo=sqrt(n);\n    for(rint i=1;i<=n;++i) v1[i]=0,v2[i]=0;\n    for(rint i=1;i<=n;++i) bl1[i]=(i-1)/blo+1,bl2[i]=(i-1)/blo+1;\n    for(rint i=1;i<=n;++i) tag1[bl1[i]]+=v1[i],tag2[bl2[i]]+=v2[i];\n    for(rint i=1;i<=m;++i)\n    {\n        int q=read(),l=read(),r=read();\n        if(q==1) add1(l,1),add2(r,1);\n        else write(query1(1,r)-query2(1,l-1)),puts(\" \");\n    }\n    return 0;\n}\n```",
        "postTime": 1541466225,
        "uid": 86478,
        "name": "mxr\u5df2\u6b7b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "\u8003\u8bd5\u7684\u65f6\u5019\u60f3\u5230\u4e86\u6b63\u89e3\u7136\u800c\u5fd8\u4e86l-1\u8c03\u5c31\u4ee5\u4e3a\u662f\u9519\u7684\u7136\u540e\u6539\u6210\u66b4\u529b\u3002\u3002\u3002\u4e8e\u662fRank1->inf\n\n\u8fd9\u9053\u9898\u663e\u7136\u53ef\u4ee5\u628a\u6bcf\u6b21\u57cb\u96f7\u8f6c\u5316\u6210\u65b0\u589e\u4e00\u6bb5\u533a\u95f4\uff0c\u67e5\u8be2\u5c31\u662f\u4e0e\u5b83\u6709\u4ea4\u96c6\u7684\u533a\u95f4\u4e2a\u6570\u3002\n\n\u663e\u7136\u8fd9\u4e1c\u897f\u53ef\u4ee5\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u9762\u6709\u591a\u5c11\u5de6\u7aef\u70b9\uff0c\u540e\u9762\u6709\u591a\u5c11\u53f3\u7aef\u70b9\uff0c\u505a\u4e2a\u5dee\u5c31\u597d\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nint n, m, l, r, opt, bomb = 0;\n\ninline int read() {\n\tregister int s = 0;\n\tregister char ch = getchar();\n\twhile (!isdigit(ch)) ch = getchar();\n\twhile (isdigit(ch)) s = (s << 1) + (s << 3) + (ch & 15), ch = getchar();\n\treturn s;\n}\n\ninline int lowbit(int x) {\n\treturn x & -x;\n}\n\nint tree1[100005], tree2[100005];\n\ninline void add1(int x) {\n\tint t = x;\n\twhile (t <= n) {\n\t\t++tree1[t];\n\t\tt += lowbit(t);\n\t}\n}\n\n\ninline int query1(int x) {\n\tint t = x, ret = 0;\n\twhile (t >= 1) {\n\t\tret += tree1[t];\n\t\tt -= lowbit(t);\n\t} return ret;\n}\n\ninline void add2(int x) {\n\tint t = x;\n\twhile (t <= n) {\n\t\t++tree2[t];\n\t\tt += lowbit(t);\n\t}\n}\n\n\ninline int query2(int x) {\n\tint t = x, ret = 0;\n\twhile (t >= 1) {\n\t\tret += tree2[t];\n\t\tt -= lowbit(t);\n\t} return ret;\n}\n\ninline int min_(int a, int b) {\n\treturn a < b ? a : b;\n}\n\nint main() {\n\tn = read(); m = read();\n\tmemset(tree1, 0, sizeof(tree1)); memset(tree2, 0, sizeof(tree2));\n\twhile (m--) {\n\t\topt = read(); l = read(); r = read();\n\t\tif (opt == 1) { ++bomb; add1(l); add2(r); }\n\t\telse printf(\"%d\\n\", query1(r) - query2(l - 1));\n\t} return 0;\n}\n```\n",
        "postTime": 1576562324,
        "uid": 98096,
        "name": "Smallbasic",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "\u8bbe\u8be2\u95ee\u4e3a$(l,r)$\uff0c\u67d0\u4e2a\u4fee\u6539\u4e3a$(L,R)$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4fee\u6539\u5bf9\u8fd9\u4e2a\u8be2\u95ee\u4ea7\u751f\u8d21\u732e\u5f53\u4e14\u4ec5\u5f53$L\\leq r \\&\\&R\\geq l$\uff0c\u8fd9\u4e2a\u5c31\u7b49\u4e8e$L\\leq r\\&\\&(1-[R<l])=(L\\leq r)-(L\\leq r\\&\\&R<l$\uff0c\u53c8\u56e0\u4e3a\u6709$L\\leq R<l\\leq r$\u6240\u4ee5\u76f4\u63a5\u5c31\u662f$(L\\leq r)-(R<l)$\uff0c\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\u5c31\u597d\u4e86\n\n\u5f53\u7136\u4e5f\u53ef\u4ee5\u4e09\u7ef4\u504f\u5e8f...\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N=2e6;\nint n,m;\nstruct BIT\n{\n    int a[N];\n    int query(int x){int ans=0;for(;x;x-=x&-x)ans+=a[x];return ans;}\n    void update(int x){for(;x<=n;x+=x&-x)a[x]++;}\n}s[2];\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        int opt,l,r;\n        scanf(\"%d%d%d\",&opt,&l,&r);\n        if(opt==1)s[0].update(l),s[1].update(r);\n        else printf(\"%d\\n\",s[0].query(r)-s[1].query(l-1));\n    }\n}\n```",
        "postTime": 1566306167,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "~~\u9898\u610f\u7279\u522b\u5bb9\u6613\u7406\u89e3\u9519~~\n\n\u5148\u7528\u901a\u4fd7\u7684\u8bed\u8a00\u89e3\u91ca\u4e00\u4e0b\u9898\u610f\uff1a\n\n\u73b0\u5728\u4f60\u6709$k$\u6761\u4e0d\u540c\u989c\u8272\u7684\u7ebf\u6bb5\n\n\u989c\u8272\u4ece$1$\u5230$k$,\u6309\u7167\u8fd9\u4e2a\u6b21\u5e8f\u4f9d\u6b21\u8986\u76d6\n\n\u4e4b\u540e\u7684\u989c\u8272\u4e0d\u4f1a\u8986\u76d6\u4e4b\u524d\u7684\u989c\u8272\n\n\u95ee$[l,r]$\u533a\u95f4\u4e2d\u6709\u51e0\u79cd\u4e0d\u540c\u7684\u989c\u8272\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u62c6\u5206\u6210\u4e24\u4e2a\u4e1c\u897f\n\n\u4e00\u4e2a\u662f$[1,r]$,\u4e00\u4e2a\u662f$[l,n]$\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u786e\u5b9a\u8fd9\u4e2a\u533a\u95f4\u5de6\u7aef\u70b9\u7684\u53f3\u8fb9\u548c\u53f3\u7aef\u70b9\u7684\u5de6\u8fb9\n\nStep 1:\u786e\u5b9a$[1,r]$\n\n\u53ef\u4ee5\u8003\u8651\u5982\u679c\u4e00\u6761\u7ebf\u6bb5\u7684\u5f00\u5934\u518d$r$\u7684\u5de6\u8fb9\uff0c\u90a3\u4e48$[1,r]$\u4e2d\u5c31\u5b58\u5728\u8fd9\u6761\u7ebf\u6bb5\u7684\u989c\u8272\n\nStep 2:\u786e\u5b9a$[l,n]$\n\n\u53ef\u4ee5\u8003\u8651\u5982\u679c\u4e00\u6761\u7ebf\u6bb5\u7684\u7ed3\u5c3e\u5728$l$\u7684\u5de6\u8fb9\uff0c\u90a3\u4e48$[l,n]$\u4e2d\u4e0d\u5b58\u5728\u8fd9\u6761\u7ebf\u6bb5\u7684\u989c\u8272\n\n\u56e0\u6b64\uff0c\u53ea\u8981\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u5206\u522b\u7ef4\u62a4\u4e00\u4e0b\n\n\u6709\u591a\u5c11\u6761\u7ebf\u6bb5\u7684\u5f00\u5934\u518d$r$\u7684\u5de6\u8fb9\n\n\uff0c\u6709\u591a\u5c11\u6761\u7ebf\u6bb5\u7684\u7ed3\u5c3e\u5728$l$\u7684\u5de6\u8fb9\u5373\u53ef\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(nlogn)$\n\ncode:\n\n```\n#include<bits/stdc++.h>\n\n#define N 100005\n#define rd(x) x=read()\n\nusing namespace std;\n\nint n,m;\nint t[N][2];\n\ninline int read()\n{\n    int f=1,x=0;char s=getchar();\n    while(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();}\n    while(s>='0'&&s<='9'){x=x*10+s-'0';s=getchar();}\n    return x*f;\n}\n \nint lowbit(int x){return x&(-x);}\nvoid update(int x,int p){while(x<=n)t[x][p]++,x+=lowbit(x); }\nint query(int x,int p){int sum=0;while(x>=1)sum+=t[x][p],x-=lowbit(x);return sum;}\n\nint main()\n{\n    rd(n),rd(m);\n    while(m--)\n    {\n    \tint opt,l,r;\n    \trd(opt),rd(l),rd(r);\n        if(opt==1)update(l,0),update(r,1);\n        else printf(\"%d\\n\",query(r,0)-query(l-1,1));\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1565837672,
        "uid": 53807,
        "name": "Erusel",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "   [\u535a\u5ba2\u4f20\u9001\u95e8\uff01](http://www.wjyyy.top/844.html)\n\n   \u4e00\u4e2a\u7c7b\u4f3c\u533a\u95f4\u67d3\u8272\u6c42\u79cd\u7c7b\u6570\u7684\u9898\u3002\uff08\u4e3a\u4ec0\u4e48\u5927\u5bb6\u5199\u7684\u548c\u6211\u90fd\u4e0d\u4e00\u6837\u3002\u3002\u3002\uff09\n   \n\u00a0 \u00a0\u4e00\u5f00\u59cb\u770b\u4e0a\u53bb\uff0c\u4e0d\u662f\u4e00\u4e2a\u7ebf\u6bb5\u6811\u533a\u95f4\u67d3\u8272\u7684\u9898\u5417\u3002\u3002\u3002\u624b\u73a9\u4e86\u4e00\u4e0b\u6837\u4f8b\u53d1\u73b0\u539f\u6765\u5730\u96f7\u662f\u53ef\u4ee5\u8986\u76d6\u7684\u554a\uff0c![\u7b11\u5bb9\u6e10\u6e10\u6d88\u5931](http://www.wjyyy.top/wp-content/uploads/2018/07/006HJgYYgy1fg626pydevg304w03ywei.gif)\u5f00\u59cb\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e2a\u9898\u3002\n\n\u00a0 \u00a0\u548c\u533a\u95f4\u67d3\u8272\u7c7b\u4f3c\uff0c\u800c\u56e0\u4e3a\u533a\u95f4\u67d3\u8272\uff08\u5982\u679c\u53ef\u8986\u76d6\uff09\u5728\u67e5\u8be2\u65f6\u5408\u5e76\u533a\u95f4\u8981\u770b**\u5de6\u5b69\u5b50\u7684\u6700\u53f3\u70b9**\u548c**\u53f3\u5b69\u5b50\u7684\u6700\u5de6\u70b9**\u662f\u5426\u4e00\u81f4\uff0c\u4e00\u81f4\u5219\u628a\u79cd\u7c7b-1**\u3010\u5bb9\u65a5\u539f\u7406\u3011**\u3002\u8fd9\u6837\u53ea\u7528\u591a\u7ef4\u62a4\u4e24\u4e2a\u53d8\u91cf+lazytag\u5c31\u53ef\u4ee5\u4e86\u3002\u4e0d\u8fc7\u8fd9\u4e2a\u9898\u4e0d\u80fd\u8986\u76d6\uff0c\u5c31\u8981\u60f3\u529e\u6cd5\u6362\u4e2a\u601d\u8def\u7ef4\u62a4\u3002\n\n\u00a0 \u00a0\u56e0\u4e3a\u8fd9\u4e2a\u9898\u7684\u5730\u96f7\u79cd\u7c7b\u53ea\u4f1a\u589e\u52a0\u4e0d\u4f1a\u51cf\u5c11\uff0c\u56e0\u6b64\u4e00\u65e6\u5de6\u5b69\u5b50\u7684\u6700\u53f3\u70b9\u548c\u53f3\u5b69\u5b50\u7684\u6700\u5de6\u70b9\u989c\u8272\uff08\u7f16\u53f7\uff09\u76f8\u540c\uff0c\u5b83\u4eec\u5c31\u6c38\u8fdc\u76f8\u540c\uff0c\u5bf9\u8fd9\u4e2a\u5bb9\u65a5\u4ea7\u751f1\u4e2a\u8d21\u732e\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u6700\u5de6\u70b9\u4e0e\u5de6\u76f8\u90bb\u533a\u95f4\u6700\u53f3\u70b9\u76f8\u540c\u989c\u8272\u7684\u4e2a\u6570\uff08\u6700\u5de6\u6216\u6700\u53f3\u4efb\u9009\u5176\u4e00\u7ef4\u62a4\uff0c\u6211\u5199\u7684\u662f\u6700\u5de6\uff09\u4f5c\u4e3a**\u91cd\u590d\u6807**\u8bb0\u3002\u5728\u7ebf\u6bb5\u6811\u533a\u95f4change\u65f6\uff0c\u4e00\u65e6\u51fa\u73b0\u8de8\u8d8a\u4e86\u4e24\u4e2a\u513f\u5b50\u7684\u4fee\u6539\uff0c\u90a3\u5c31\u8981\u628a\u53f3\u513f\u5b50\u7684\u5de6\u7aef\u70b9\u91cd\u590d\u6807\u8bb0++\u4e86\u3002\u540c\u6837\uff0clazytag\u5728\u6807\u8bb0\u4e0e\u4e0b\u653e\u65f6\uff0c\u5982\u679c**lazy\u4e0d\u7b49\u4e8e0**\uff0c\u4f9d\u7136\u8981\u628a\u53f3\u513f\u5b50\u7684\u5de6\u7aef\u70b9++\uff0c\u540c\u65f6\u7ef4\u62a4\u7684**lazyl\uff08\u4e0a\u9762\u4f20\u4e0b\u6765\u7684\u5de6\u7aef\u70b9tag\uff09**\u4e5f\u8981\u52a0\u4e0a\u53bb\uff0c\u5e76\u5ef6\u7eed\u5230\u5de6\u513f\u5b50\u4e0a\u3002\n   \n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#define ls (k<<1)\n#define rs (k<<1|1)\n#define mid (l+r>>1)\n#define Mid (t[k].l+t[k].r>>1)\nstruct node\n{\n    int l,r,v,lazy;\n    int ll,lazyl;\n    node(int l,int r)\n    {\n        this->l=l;//\u533a\u95f4\u4f4d\u7f6e\n        this->r=r;\n        ll=0;//\u5de6\u7aef\u70b9\u7684\u91cd\u590d\u6807\u8bb0\n        v=0;//\u533a\u95f4\u4e0d\u4e92\u76f8\u5e72\u6270\u7684\u989c\u8272\u79cd\u7c7b\n        lazy=0;\n        lazyl=0;\n    }\n    node()\n    {\n        ll=0;\n        v=0;\n        lazy=0;\n        lazyl=0;\n    }\n}t[410000];\nvoid build(int k,int l,int r)\n{\n    t[k]=node(l,r);\n    if(l==r)\n        return;\n    build(ls,l,mid);\n    build(rs,mid+1,r);\n}\nvoid pushdown(int k)//pushdown\u662f\u5173\u952e\n{\n    if(t[k].l==t[k].r)\n    {\n        t[k].lazy=0;\n        t[k].lazyl=0;\n        return;\n    }\n    t[ls].v+=t[k].lazy;\n    t[ls].ll+=t[k].lazyl;\n    t[ls].lazyl+=t[k].lazyl;\n    t[ls].lazy+=t[k].lazy;\n    t[rs].v+=t[k].lazy;\n    if(t[k].lazy)\n    {\n        t[rs].ll+=t[k].lazy;//\u6709\u65f6\u591a\u79cd\u989c\u8272\u4f1a\u4e00\u8d77\u4f20\u4e0b\u6765\n        t[rs].lazyl+=t[k].lazy;\n    }\n    t[rs].lazyl+=t[k].lazyl;\n    t[rs].lazy+=t[k].lazy;\n    t[k].lazy=0;\n    t[k].lazyl=0;\n}\nvoid change(int k,int l,int r,int x)\n{\n    if(t[k].l==l&&r==t[k].r)\n    {\n        t[k].lazy++;\n        t[k].v++;\n        return;\n    }\n    t[k].v++;\n    pushdown(k);\n    if(r<=Mid)\n        change(ls,l,r,x);\n    else if(l>Mid)\n        change(rs,l,r,x);\n    else\n    {\n        t[rs].ll++;//\u4fee\u6539\u53f3\u5b69\u5b50\u7684\u5de6\u7aef\u70b9\u91cd\u590d\u6807\u8bb0\n        t[rs].lazyl++;//\u5e76\u4e0b\u653e\u5230\u53f3\u5b69\u5b50\u7684\u5de6\u5b69\u5b50\u7684lazytag\n        change(ls,l,Mid,x);\n        change(rs,Mid+1,r,x);\n    }\n    return;\n}\nint ask(int k,int l,int r)\n{\n    pushdown(k);\n    if(t[k].l==l&&t[k].r==r)\n        return t[k].v;\n    if(r<=Mid)\n        return ask(ls,l,r);\n    else if(l>Mid)\n        return ask(rs,l,r);\n    else\n        return ask(ls,l,Mid)+ask(rs,Mid+1,r)-t[rs].ll;//\u51cf\u53bb\u91cd\u590d\u6807\u8bb0\n}\nint main()\n{\n    int n,m,op,l,r;\n    scanf(\"%d%d\",&n,&m);\n    build(1,1,n);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&op,&l,&r);\n        if(op==1)\n            change(1,l,r,i);\n        else\n            printf(\"%d\\n\",ask(1,l,r));\n    }\n    return 0;\n}\n```",
        "postTime": 1531383096,
        "uid": 63539,
        "name": "wjyyy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011\u7ebf\u6bb5\u6811 \u5bb9\u65a5"
    },
    {
        "content": "\u54e6\u3002\u3002\u4e00\u5f00\u59cb\u592a\u5355\u7eaf\u4e86\u9898\u76ee\u770b\u9519\n\n\u672c\u9898\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811/\u6811\u72b6\u6570\u7ec4\u89e3\uff0c\u697c\u4e0b\u5df2\u7ecf\u7528\u5927\u4f6c\u8bb2\u4e86\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\uff0c\u672c\u849f\u84bb\u5c31\u6765\u8bf4\u4e0b\u6811\u72b6\u6570\u7ec4\n\n\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a41..x\u4e4b\u95f4\u7684l\u6570\u91cf\u548cr\u6570\u91cf\n\n\u56e0\u4e3al\u663e\u7136\u5728r\u524d\u9762\uff0c\u6240\u4ee5\u8981\u6c42L\u5230R\u4e4b\u95f4\u7684\u79cd\u7c7b\uff0c\u5c31\u7b49\u4e8e1..R\u4e4b\u95f4\u51fa\u73b0\u7684\u5730\u96f7\u79cd\u7c7b-1..L\u4e4b\u95f4\u7ed3\u675f\u653e\u7f6e\u7684\u5730\u96f7\u79cd\u7c7b\n\n\u4e5f\u5c31\u662fans=numl[R]-numr[L]\n\n\u9644\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint f[1000001],f1[1000001];    int n,m,x,y,z;\ninline int lowbit(int t){return t&-t;}\ninline void add(int x,int y)\n{\n    for (int i=x;i<=n;i+=lowbit(i))    f[i]+=y;\n}\ninline int get(int x)\n{\n    int sum=0;\n    for (int i=x;i>0;i-=lowbit(i)) sum+=f[i];\n    return sum;\n}\ninline void add1(int x,int y)\n{\n    for (int i=x;i<=n;i+=lowbit(i))    f1[i]+=y;\n}\ninline int get1(int x)\n{\n    int sum=0;\n    for (int i=x;i>0;i-=lowbit(i)) sum+=f1[i];\n    return sum;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n      for(int i=1;i<=m;i++)\n      {\n          scanf(\"%d%d%d\",&x,&y,&z);\n          if(x==1)\n          {\n              add(y,1);\n              add1(z,1);\n          }\n          else\n          {\n              printf(\"%d\\n\",get(z)-get1(y-1));\n          }\n      }\n    return 0;\n}\n```",
        "postTime": 1487052772,
        "uid": 19028,
        "name": "VCVCVCFop_zz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "$$\\color{cornflowerblue}{\\mathcal{Treaker}}$$\n# \u6811\u72b6\u6570\u7ec4 + \u5dee\u5206\n\n\u8fd9\u9053\u9898\u5176\u5b9e\u770b\u8d77\u6765\u633a\u7b80\u5355\u7684\uff0c\u4f46\u662f\u505a\u8d77\u6765\u53d1\u73b0\u597d\u50cf\u4e0d\u662f\u90a3\u4e48\u597d\u505a\u3002\u3002\u3002\n\n\u6ce8\u610f\uff1a\u8fd9\u91cc\u7684\u96f7\u662f\u7d2f\u52a0\u7684\uff0c\u4e0d\u662f\u8986\u76d6\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\uff0c\u4ec0\u4e48\u6837\u7684\u96f7\u4f1a\u5728\u8fd9\u4e2a\u533a\u95f4\u51fa\u73b0\u3002\n\n\u4e00\u5b9a\u662f\uff0c\u5de6\u7aef\u70b9\u5728\u533a\u95f4\u53f3\u7aef\u70b9\u53ca\u5de6\u8fb9\uff0c\u53f3\u7aef\u70b9\u5728\u533a\u95f4\u5de6\u7aef\u70b9\u53ca\u53f3\u8fb9\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\uff0c\u5de6\u7aef\u70b9\u5206\u5e03\u5728\u533a\u95f4\u53f3\u7aef\u70b9\u53ca\u5de6\u8fb9\u7684\u96f7\u7684\u6570\u91cf\uff0c\u7136\u540e\u51cf\u53bb\u53f3\u7aef\u70b9\u5728\u533a\u95f4\u5de6\u7aef\u70b9\u7684\u5de6\u8fb9\u7684\u96f7\u7684\u6570\u91cf\uff0c\u5c31\u662f\u5206\u5e03\u5728\u8fd9\u4e00\u6bb5\u7684\u96f7\u7684\u6570\u91cf\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5dee\u5206\u4e00\u4e0b,\u53ea\u8bb0\u5f55\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u5373\u53ef\u3002\n\n\u81f3\u4e8e\u524d\u7f00\u548c\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002\u3002\n\n\u732e\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\ninline int read()\n{\n\tint x = 0 , f = 1; char ch = getchar();\n\twhile(ch < '0' || ch > '9') {if(ch == '-') f = -1; ch = getchar();}\n\twhile(ch >= '0' && ch <= '9') {x = (x << 3) + (x << 1) + ch - '0'; ch = getchar();}\n\treturn x * f;\n}\nconst int N = 1e5+5;\nint n , m;\nint suml[N] , sumr[N];\nstruct BIT\n{\n\tinline int lowbit(int x) {return x & (-x);}\n\tinline void add(int x,int *tr) {while(x <= n) tr[x] ++ , x += lowbit(x);}\n\tinline int ask(int x,int *tr) {int res = 0; while(x) res += tr[x] , x -= lowbit(x); return res;}\n\tinline void LOL()\n\t{\n\t\tn = read(); m = read();\n\t\tfor(int i = 1 , l , r , opt;i <= m;i ++)\n\t\t{\n\t\t\topt = read(); l = read(); r = read();\n\t\t\tif(opt & 1) add(l,suml) , add(r,sumr);\n\t\t\telse printf(\"%d\\n\",ask(r,suml) - ask(l - 1,sumr));\n\t\t}\n\t}\n}DNF;\nint main()\n{\n\tDNF.LOL();\n\treturn 0;\n}\n```\n",
        "postTime": 1572442777,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u76ee\u81ea\u5df1\u6ca1\u6709\u60f3\u51fa\u6765\uff0c\u770b\u7684\u697c\u4e0b\u5927\u4f6c\u63d0\u5230\u7528\u5dee\u5206\u548c\u7ebf\u6bb5\u6811\u624d\u610f\u8bc6\u5230\u7684\u3002\u6811\u72b6\u6570\u7ec4\u505a\u6cd5\uff1a\n        \u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\u3010A,B\u3011\u91cc\u9762\u6709\u51e0\u79cd\u5730\u96f7\u6211\u4eec\u53ef\u4ee5\u770b\u6210\u30101\uff0cB\u3011\u91cc\u9762\u5730\u96f7\u7684\u4e2a\u6570\u51cf\u53bb\u30101\uff0cA\u3011\u7684\u5730\u96f7\u4e2a\u6570\u3002\u5176\u4e2d\u51cf\u53bb\u7684\u65f6\u5019\u6211\u4eec\u5e94\u8be5\u4e0d\u5305\u542bA\u8fd9\u4e2a\u70b9\u3002\u95ee\u9898\u6765\u4e86\uff0c\u5730\u96f7\u4e2a\u6570\u600e\u4e48\u6807\u8bb0\u5462\uff1f\u5bf9\u4e8e\u9898\u76ee\u7ed9\u7684\u6bcf\u4e2a\u5730\u96f7\u533a\u95f4[m,n]\u3002\u6807\u8bb0\u6bcf\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u4e5f\u5c31\u662fm\u4f5c\u4e3a\u5f00\u59cb\uff0c\u8fd9\u6837\u30101\uff0cB\u3011\u5c31\u662f\u6c42\u5230B\u6709\u51e0\u4e2am\uff08\u5de6\u7aef\u70b9\uff09\u3002\u800c\n\u30101\uff0cA\u3011\u5c31\u662f\u6c42\u6709\u591a\u5c11\u4e2a\u53f3\u7aef\u70b9\u4e5f\u5c31\u662fn\u3002\u8fd9\u6837\u5f00\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u7b2c\u4e00\u4e2a\u7edf\u8ba1\u5de6\u7aef\u70b9\uff0c\u7b2c\u4e8c\u4e2a\u7edf\u8ba1\u53f3\u7aef\u70b9\u3002\u7136\u540e\u505a\u5dee\u5c31\u597d\u4e86\u3002\n```c\n#include<bits/stdc++.h>\n#define MAXN 100005\nusing namespace std;\n\nint n,m;\n\nint lowbit(int x)\n{\n    return (x&((-1)*x));\n}\n\nstruct BIT\n{\n    int c[MAXN];\n\n    void add(int x,int d)\n    {\n        while(x<=n)\n        {\n            c[x]+=d;\n            x+=lowbit(x);\n        }\n    }\n\n    int sum(int x)\n    {\n        int cnt=0;\n        while(x>0)\n        {\n            cnt+=c[x];\n            x-=lowbit(x);\n        }\n        return cnt;\n    }\n};\n\nBIT sa,sb;\nint op,L,R;\n\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d %d %d\",&op,&L,&R);\n        if(op==1)\n        {\n            sa.add(L,1);\n            sb.add(R,1);\n        }\n        else\n        {\n            printf(\"%d\\n\",sa.sum(R)-sb.sum(L-1));\n        }\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1570859757,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "\u770b\u5230\u9898\u76ee\uff0c\u89c9\u5f97\u4e0e\u67d3\u8272\u90a3\u9053\u9898\u5f88\u50cf\uff0c\u4f46\u8fd9\u9898\u662f\u53ef\u91cd\u53e0\u4e0d\u8986\u76d6\u7684\u3002\u53ef\u4ee5~~\u5f88\u5bb9\u6613~~\u60f3\u5230\u5dee\u5206\uff0c\u4f46\u6211\u592a\u83dc\u4e86\uff0c\u8fde\u5dee\u5206\u90fd\u60f3\u4e0d\u5230\uff0c\u4e8e\u662f\u8003\u8651\u533a\u95f4\u4fee\u6539\u533a\u95f4\u67e5\u8be2\u7ebf\u6bb5\u6811\u3002\n\nsum[i]:\u7ed3\u70b9i\u7684\u533a\u95f4\u7684\u5730\u96f7\u79cd\u6570\n\nh[i]:\u5b8c\u5168\u8986\u76d6i\u7684\u533a\u95f4\u7684\u5730\u96f7\u79cd\u6570\uff08\u5c31\u662fi\u7684\u533a\u95f4\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u5747\u6709\u8fd9h[i]\u79cd\u5730\u96f7\uff09\n\nlr[i]:\u5de6\u513f\u5b50\u4e0e\u53f3\u513f\u5b50\u90fd\u6709\u7684\u5730\u96f7\u79cd\u6570\n\n\u6613\u5f97pushup:sum[rt]=sum[lson]+sum[rson]-lr[rt]+h[rt];\n\n\u533a\u95f4\u4fee\u6539\uff1a\n\n1.\u6bcf\u6b21\u4fee\u6539\u503c\u5747\u4e3a\u4e00\uff1b\uff08\u56e0\u4e3a\u6bcf\u6b21\u52a0\u4e00\u79cd\uff09\n\n2.\u5b8c\u5168\u8986\u76d6i\u7684\u533a\u95f4\uff1a\u52a0h[i]\uff1b**(\u522b\u5fd8pushup)**\n\n3.\u4e0d\u5b8c\u5168\u8986\u76d6i\u7684\u533a\u95f4\uff1a\u5411\u4e0b\u9012\u5f52\uff0c\u82e5\u5de6\u53f3\u513f\u5b50\u5747\u6709\uff0c\u5219lr[i]++\uff1b**(\u522b\u5fd8pushup)**\n\n\u533a\u95f4\u8be2\u95ee\uff1a\n\n1.\u5b8c\u5168\u8986\u76d6i\u7684\u533a\u95f4\uff1a\u76f4\u63a5\u8fd4\u56desum[i]\uff1b\n\n2.\u4e0d\u5b8c\u5168\u8986\u76d6i\u7684\u533a\u95f4\uff1a\u5411\u4e0b\u9012\u5f52\u5e76\u7d2f\u52a0\uff0c\u82e5\u5de6\u53f3\u513f\u5b50\u5747\u6709\uff0c\u5219\u8fd4\u56de\u503c\u51cflr[i]\uff1b\n\n\u840c\u65b0\u6295\u7a3f\uff0c\u8bb2\u89e3\u4e0d\u5609\uff0c\u8bf7\u7ed3\u5408\u4ee3\u7801\u7406\u89e3\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define ls rt<<1,l,mid\n#define rs rt<<1|1,mid+1,r\n#define lson rt<<1\n#define rson rt<<1|1\nusing namespace std;\nconst int maxn=1000000;\nint h[maxn],lr[maxn],sum[maxn];\nint n,m,fa,tot,x,y,z;\nvoid change(int rt,int l,int r,int x,int y)\n{\n\tif (x<=l && r<=y)\n\t{\n\t\th[rt]++;\n\t\tsum[rt]=sum[lson]+sum[rson]-lr[rt]+h[rt];\n\t\treturn;\n\t}\n\tint bo1=0,bo2=0;\n\tif (x>r || y<l) return;\n\tint mid=l+r>>1;\n\tif (mid>=x) change(ls,x,y),bo1=1;\n\tif (mid<y) change(rs,x,y),bo2=1;\n\tif (bo1&&bo2) lr[rt]++;\n\tsum[rt]=sum[lson]+sum[rson]-lr[rt]+h[rt];\n}\nint ask(int rt,int l,int r,int x,int y)\n{\n\tif (x<=l && r<=y)\n\treturn sum[rt];\n\tif (x>r || y<l) return 0;\n\tint mid=l+r>>1;\n\tint ca=0,bo1=0,bo2=0;\n\tif (mid>=x) ca=ask(ls,x,y),bo1=1;\n\tif (mid<y) ca+=ask(rs,x,y),bo2=1;\n\tif (bo1&&bo2) ca-=lr[rt];\n\tca+=h[rt];\n\treturn ca;\n}\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tfa=1;\n\twhile (fa<n) fa*=2;\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%intd\",&x);//\u9632\u6284\n\t\tif (x==1)\n\t\t{\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tchange(1,1,fa,x,y);\n\t\t}\n\t\telse {\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tprintf(\"%d\\n\",ask(1,1,fa,x,y));\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n\n\uff08\u8bdd\u8bf4\u8fd9\u533a\u95f4\u4fee\u6539\u533a\u95f4\u67e5\u8be2\u7ebf\u6bb5\u6811\u7adf\u7136\u6ca1\u6709\u61d2\u6807\u8bb0\uff0c\u771f\u662f\u5947\u5999\uff09",
        "postTime": 1564921714,
        "uid": 32170,
        "name": "mzy2003",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "# ZKW\u7ebf\u6bb5\u6811\u505a\u6cd5\n\u7ffb\u4e86\u7ffb\u9898\u89e3\uff0c\u53d1\u73b0\u6ca1\u6709\u7528**ZKW\u7ebf\u6bb5**\u6811\u5199\u7684\uff0c\u4e8e\u662f\u6211\u51b3\u5b9a\u5199\u4e00\u7bc7ZKW\u9898\u89e3\u3002  \n\u8fd9\u4e2a\u9898\u7684\u601d\u8def\u5c31\u4e0d\u8be6\u7ec6\u8bb2\u4e86\uff0c\u524d\u9762\u9898\u89e3\u5df2\u7ecf\u8bb2\u5f97\u8be6\u7ec6\u4e86\uff0c\u6211\u5c31\u8865\u4e00\u4e0bZKW\u7684\u5199\u6cd5\u5427\u3002\n\nZKW\u7ebf\u6bb5\u6811\u548c\u6811\u72b6\u6570\u7ec4\u7c7b\u4f3c\uff0c\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff0c\u7528\u5faa\u73af\u6765\u5b9e\u73b0\uff0c\u6ca1\u6709\u7ebf\u6bb5\u6811\u4e00\u6837\u7684\u5de8\u5927\u5e38\u6570\uff0c\u800c\u4e14\uff0c\u4ee3\u7801**\u975e\u5e38\u597d\u5199\uff0c\u975e\u5e38\u597d\u5199\uff0c\u975e\u5e38\u597d\u5199**\u3002  \n\n\u5177\u4f53\u7ed9\u5927\u5bb6\u63a8\u8350\u4e00\u7bc7\u535a\u5ba2\u5427 \uff1a[zkw\u7ebf\u6bb5\u6811 \u4f20\u9001\u95e8](https://blog.csdn.net/keshuqi/article/details/52205884)  \n\u5982\u679c\u60f3\u8be6\u7ec6\u4e86\u89e3\u7684\uff0c\u5efa\u8bae\u53bb\u770b\u770bzkw\u7684\u300a**\u7edf\u8ba1\u7684\u529b\u91cf**\u300b  \n\n\n------------\n\n\u4ee3\u7801:\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5+7;\nint n,m;\n\nstruct ZKW_SegmentTree\n{\n\tint sumL[N<<4],sumR[N<<4],M; \n\t#define lc rot<<1\n\t#define rc rot<<1^1\n    \n//M = (1 << (int)log2(n) - 1); \u56e0\u4e3an\u5df2\u7ecf\u662f2\u7684\u6574\u6b21\u65b9\u4e86\uff0c\u6240\u4ee5M\u5c31\u662fn-1 \n\tvoid GetM() {M = n-1;}\n    \n//\tvoid Build() \u8fd9\u4e2a\u9898\u4e0d\u9700\u8981\u5efa\u6811 \u6240\u4ee5\u53ea\u9700\u8981\u6c42\u51fa\u6765M\u5373\u53ef \n//\t{\n//\t\tM = (1 << (int)(log2(n))) - 1;\n//\t\tmemset(sum, 0, sizeof(sum));\n//\t\tfor(int j = 1,i = 1 + M; i <= n + M; i++,j++)\n//\t\t\tsum[i] = arr[j];\n//\t\tfor(int rot = M; rot >= 1; rot--)\n//\t\t\tsum[rot] = sum[lc] + sum[rc]; \n//\t}\n\t\n\tvoid AddL(int rot) //\u4e24\u4e2aAdd \u4e24\u4e2aEnquiry \u8bb0\u5f55\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9 \n\t{\n\t\tsumL[rot+=M] ++;\n\t\tfor(rot>>=1; rot; rot>>=1)\n\t\t\tsumL[rot] = sumL[lc] + sumL[rc];\n\t}\n\t\n\tvoid AddR(int rot)\n\t{\n\t\tsumR[rot+=M] ++;\n\t\tfor(rot>>=1; rot; rot>>=1)\n\t\t\tsumR[rot] = sumR[lc] + sumR[rc];\n\t}\n\t\n\tint EnquiryL(int l, int r)\n\t{\n\t\tint ans = 0;\n\t\tfor(l += M-1, r += M+1; l^r^1; l>>=1, r>>=1) \n\t\t{\n\t\t\tif(~ l & 1) ans += sumL[l^1];\n\t\t\tif(  r & 1) ans += sumL[r^1];\n\t\t}\n\t\treturn ans;\n\t}\n\t\n\tint EnquiryR(int l, int r)\n\t{\n\t\tint ans = 0;\n\t\tfor(l += M-1, r += M+1; l^r^1; l>>=1, r>>=1) \n\t\t{\n\t\t\tif(~ l & 1) ans += sumR[l^1];\n\t\t\tif(  r & 1) ans += sumR[r^1];\n\t\t}\n\t\treturn ans;\n\t}\n}T;\n\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tif(n != 1 << (int)log2(n)) n = 1 << ((int)log2(n) + 1); //\u628an\u53d8\u62102\u7684\u6574\u6b21\u65b9 \n\tT.GetM();\n\tfor(int t1, t2, t3, i = 0; i < m; i++)\n\t{\n\t\tscanf(\"%d %d %d\", &t1, &t2, &t3);\n\t\tif(t1 == 1)\n\t\t\tT.AddL(t2),T.AddR(t3); \n\t\tif(t1 == 2)\n\t\t\tprintf(\"%d\\n\",T.EnquiryL(1,t3) - T.EnquiryR(1,t2)); //\u7b54\u6848\u4fbf\u662f\u8fd9\u4e2a\u4e86 \n\t}\n \treturn 0;\n}\n```\n",
        "postTime": 1564462977,
        "uid": 98971,
        "name": "\u8fdd\u89c4\u7528\u6237\u540d98971",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "**tips\uff1a\u8fd9\u9898\u7684\u6807\u7b7e\u662f\u9a97\u4eba\u7684\uff0c\u660e\u660e\u6811\u72b6\u6570\u7ec4\u6700\u65b9\u4fbf\uff08\u660e\u660e\u662f\u6211\u592a\u5f31233\uff09**\n \n \u6c42\u533a\u95f4\u3010i\uff0cj\u3011\u5185\u7684\u5730\u96f7\u6570\uff0c\u5176\u5b9e\u53ea\u8981\u7b97j\u4e4b\u524d\u7684\u5934\u7684\u4e2a\u6570\u51cf\u53bbi\u94b1\u7684\u5c3e\u7684\u4e2a\u6570\u3002\u4f46\u6709\u4e00\u70b9\u8981\u6ce8\u610f\uff1a**j\u662f\u5934\u7684\u8bdd\u4f1a\u4f7f\u5730\u96f7\u79cd\u6570+1\uff0c\u4f46i\u662f\u5c3e\u7684\u65f6\u5019\u4e0d\u4f1a\u6709\u5f71\u54cd**\n ```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint c1[500001],c2[500001],i,j,n,m,k,l,ans[500001],lans,t;\nvoid update(int x){\n  for (;x<=n;x+=x&-x)\n      c1[x]++;\n}\t//\u8bb0\u5f55\u5934\u7684\u4e2a\u6570  \nvoid updatealther(int x){\n  for (;x<=n;x+=x&-x)\n      c2[x]++;\n}\t  //\u8bb0\u5f55\u5c3e\u7684\u4e2a\u6570\uff08fgo\u73a9\u5bb6\u7684\u6076\u8da3\u5473\uff09\nint ask(int x){\n    int ans1=0;\n  \tfor (;x>0;x-=x&-x)\n      ans1+=c1[x];\n    return ans1;  \n} \nint askalther(int x){\n    int ans2=0;\n  \tfor (;x>0;x-=x&-x)\n      ans2+=c2[x];\n    return ans2;  \n} \nmain(){\n    cin>>n;\n    cin>>m;   \n    for (i=1;i<=m;i++) {\n        cin>>j>>k>>l;\n        if (j==1) {\n                   update(k);\n                   updatealther(l);\n        }\n        if (j==2) {\n            lans++;\n            ans[lans]=ask(l)-askalther(k-1);           \n        }\n    } \n    for (i=1;i<=lans;i++){\n        printf(\"%d\\n\",ans[i]);\n    }\n}\n\n",
        "postTime": 1554387882,
        "uid": 165483,
        "name": "\u536b\u5bab",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "### \u5514\u59c6\n\n\u8fd9\u9053\u9898\u672c\u6765\u6ca1\u6253\u7b97\u505a\u7684\uff0c\u540e\u6765\u662f\u8fd9\u4f4d [AK\u5de8\u4f6c](https://www.luogu.org/space/show?uid=119261) \u6559\u6211\u505a\u7684\uff0c\u63d0\u524d%\u4e00\u4e0b\n\n\u8a00\u5f52\u6b63\u4f20\uff0c\u6765\u505a\u8fd9\u9053\u9898\u7684\u4e00\u770b\u5c31\u77e5\u9053\u662f\u7ebf\u6bb5\u6811\u5427\u3002\u5148\u5f00\u59cb\u6211\u5c31\u6ca1\u770b\u6e05\u695a\uff0c\u53ea\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u540e\u6765\u624d\u53d1\u73b0\u662f\u95ee\u6709\u591a\u5c11\u79cd\u6811\u30022333\u4e8e\u662f\u5927\u4f6c\u5173\u952e\u65f6\u523b\u4f38\u51fa\u63f4\u624b\uff0c\u544a\u8bc9\u6211\u8981**\u4e24\u4e2a**\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u3002\u4e8e\u662f\u4e4e\uff0c\u8fd9\u7528\u4e24\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4ec0\u4e48\u5462\uff1f\u3002\u3002\u3002\u3002\u3002\u6211\u4eec\u5c31\u5f88\u5feb\u60f3\u5230\u4e86\u5dee\u5206\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u5728\u4e00\u6bb5\u533a\u95f4\u91cc\uff0c\u5730\u96f7\u7684\u79cd\u6570\u5c31\u7b49\u4e8e\u5230\u8fd9\u6bb5\u533a\u95f4\u7684**\u53f3\u7ed3\u70b9**\u4e3a\u6b62\u6709\u591a\u5c11\u4e2a\u8d4b\u503c\u65f6\u7684**\u5de6\u7ed3\u70b9**\uff0c\u51cf\u53bb\u5230\u8fd9\u4e2a\u533a\u95f4\u7684**\u5de6\u8282\u70b9**\u4e3a\u6b62\u6709\u591a\u5c11\u4e2a\u8d4b\u503c\u65f6\u7684**\u53f3\u8282\u70b9**![](https://cdn.luogu.com.cn/upload/pic/44184.png)\n\u5982\u56fe\uff0c\u9664\u4e86\u9ed1\u8272\u7684\u957f\u7ebf\u4ee5\u5916\uff0c\u5176\u4ed6\u6bcf\u79cd\u989c\u8272\u7684\u7ebf\u5404\u4ee3\u8868\u4e00\u79cd\u5730\u96f7\u3002\u73b0\u5728\u6211\u4eec\u8981\u67e5\u8be2\u9ed1\u8272\u65b9\u6846\u5185\u6709\u591a\u5c11\u79cd\u989c\u8272\u3002\u6309\u7167\u6211\u4eec\u4e4b\u524d\u63a8\u51fa\u7684\u89c4\u5f8b\uff0c\u5e94\u8be5\u4e00\u5171\u662f\u67094-1=3\u79cd\u3002\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u9886\u609f\u4e0b\u3002\n\n\u5514\u59c6\uff0c\u53c8\u5230\u4e86\u5927\u5bb6\u559c\u95fb\u4e50\u89c1\u7684\u8d34\u4ee3\u7801\u65f6\u95f4\u3002\u849f\u84bb\u7684\u7801\u98ce\u6709\u6bd2\uff0c\u8bf7\u5927\u4f6c\u4eec\u89c1\u8c05\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#define maxn 1000001\n#define ll long long\nusing namespace std;\nll n,m,ans1[maxn*2],tag1[maxn*2],ans2[maxn*2],tag2[maxn*2],b,c;\nvoid up1(ll p){\n     ans1[p]=ans1[p*2]+ans1[p*2+1];\n}\nvoid down1(ll l,ll r,ll p){\n     tag1[p*2]+=tag1[p];\n     ans1[p*2]+=tag1[p];\n     tag1[p*2+1]+=tag1[p];\n     ans1[p*2+1]+=tag1[p];\n     tag1[p]=0;\n}\nvoid up2(ll p){\n     ans2[p]=ans2[p*2]+ans2[p*2+1];\n}\nvoid down2(ll l,ll r,ll p){\n     tag2[p*2]+=tag2[p];\n     ans2[p*2]+=tag2[p];\n     tag2[p*2+1]+=tag2[p];\n     ans2[p*2+1]+=tag2[p];\n     tag2[p]=0;\n}\nvoid sta(ll l,ll r,ll p){\n     if ((r==b)&&(l==b)){ans1[p]++;\n               tag1[p]++;\n               return;\n               }\n     down1(l,r,p);\n     ll mid=(l+r)/2;\n     if (b>mid) sta(mid+1,r,p*2+1);else sta(l,mid,p*2);\n     up1(p);\n}\n\nvoid end(ll l,ll r,ll p){\n     if ((r==c)&&(l==c)){ans2[p]++;\n               tag2[p]++;\n               return;\n               }\n     down2(l,r,p);\n     ll mid=(l+r)/2;\n     if (c>mid) end(mid+1,r,p*2+1);else end(l,mid,p*2);\n     up2(p);\n}\nll search1(ll l,ll r,ll p){\n              ll sum=0;\n              if (r<=c) return ans1[p];\n              ll mid=(r+l)/2;\n              down1(l,r,p);\n              sum+=search1(l,mid,p*2);\n              if (c>mid) sum+=search1(mid+1,r,p*2+1);\n              return sum;\n}\nll search2(ll l,ll r,ll p){\n              ll sum=0;\n              if (r<b) return ans2[p];\n              ll mid=(r+l)/2;\n              down2(l,r,p);\n              sum+=search2(l,mid,p*2);\n              if (b-1>mid) sum+=search2(mid+1,r,p*2+1);\n              return sum;\n}\nint main(){\n    cin>>n>>m;\n    for(ll i=1;i<=m;i++){\n           ll a;\n           scanf(\"%lld\",&a);\n           if (a==1){scanf(\"%lld%lld\",&b,&c);\n                     sta(1,n,1);\n                     end(1,n,1);}\n           else {scanf(\"%lld%lld\",&b,&c);\n                 printf(\"%lld\\n\",search1(1,n,1)-search2(1,n,1));};\n    }\n    return 0;\n    //orz wlq       \n}\n```",
        "postTime": 1542812826,
        "uid": 118273,
        "name": "\u543e\u738b\u7f8e\u5982\u753b",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "\u771f\u662f\u4e00\u9053\u597d\u9898\u554a\uff01\uff01\uff01\n\n\u7b2c\u4e00\u773c\u770b\u8fd9\u9053\u9898\uff0c\u6211\u5c31\u5f00\u59cb\u601d\u8003\u4f20\u7edf\u7ebf\u6bb5\u6811\uff0c\u7136\u800c\u7ecf\u8fc7\u4e0d\u61c8\u7684\u52aa\u529b\u540e\uff0c\u6211...\u5931\u8d25\u4e86orz...\uff08\u597d\u50cf\u9898\u89e3\u6709\u5927\u4f6c\u5199\u7684\u7eaf\u7cb9\u7ebf\u6bb5\u6811%%%\n\n\u8fdb\u5165\u6b63\u9898\uff0c\u8fd9\u9053\u9898\u9700\u8981\u4e00\u4e9b\u4e0d\u5bfb\u5e38\u7684\u601d\u8def\uff0c\u7ecf\u5e38\u5199\u6811\u72b6\u6570\u7ec4\u52a0\u5dee\u5206\u7684\u5927\u4f6c\u53ef\u80fd\u5c31\u4e00\u773c\u79d2\u4e86\u5427orz\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u4e0d\u80fd\u8fdb\u884c\u533a\u95f4\u52a0\u548c\u7136\u540e\u8be2\u95ee\u533a\u95f4\u6700\u5927\u503c\u6216\u8005\u533a\u95f4\u548c\u4e4b\u7c7b\u7684\uff0c\u6709\u5f88\u591a\u4f8b\u5b50\u53ef\u4ee5hack\u6389\u8fd9\u4e2a\u60f3\u6cd5\u3002\u5728\u533a\u95f4\u7684\u601d\u8def\u5931\u6548\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u8003\u8651\u5355\u70b9\u4fee\u6539\uff0c\u7136\u540e\u7528\u7c7b\u4f3c\u5dee\u5206\u7684\u601d\u60f3\u5904\u7406\u8be2\u95ee\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u7ef4\u62a4\u4e24\u4e2asum,suml\u8868\u793a\u5de6\u7aef\u70b9\u7684sum\uff0csumr\u540c\u7406\uff1b\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u64cd\u4f5c1\uff0c\u6211\u4eec\u5c06l\u7aef\u70b9\u7684suml++\uff0cr\u7aef\u70b9\u7684sumr++\n\n\u5728\u7edf\u8ba1\u7b54\u6848\u65f6\uff0c\u6211\u4eec\u8003\u8651[1,r]\u7684\u6240\u6709\u5de6\u7aef\u70b9\uff0c\u8fd9\u4e9b\u70b9\u90fd\u53ef\u80fd\u4e3a\u7b54\u6848\u505a\u8d21\u732e\uff0c\u7136\u800c\u6211\u4eec\u8fd8\u8981\u5220\u9664\u90a3\u4e9b\u53f3\u7aef\u70b9\u5728l\u4e4b\u524d\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u5730\u96f7\u7684\u533a\u95f4\u4e0d\u5728[l,r]\u4e4b\u95f4\uff0c\u662f\u4e0d\u5408\u6cd5\u7684\n\n\u6709\u4ee5\u4e0a\u7684\u601d\u8def\u540e\uff0c\u6211\u4eec\u53ea\u8981\u7528\u652f\u6301\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u7684\u6570\u636e\u7ed3\u6784\u5373\u53ef\uff0c\u6811\u72b6\u6570\u7ec4\u5c31\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\n\n```\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<queue>\n#include<cmath>\nusing namespace std;\ninline int read()\n{\n\tint ans = 0,op = 1;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9')\n\t{\n\t\tif(ch == '-') op = -1; \n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9')\n\t{\n\t\t(ans *= 10) += ch - '0';\n\t\tch = getchar();\n\t}\n\treturn ans * op;\n}\nconst int maxn = 1e5 + 1;\nint lowerbit[maxn];\nint suml[maxn << 2],sumr[maxn << 2];\nint n,m;\nvoid addel(int x)\n{\n\twhile(x <= n)\n\t{\n\t\tsuml[x]++;\n\t\tx += lowerbit[x];\n\t}\n}\nint queryl(int x)\n{\n\tint ans = 0;\n\twhile(x)\n\t{\n\t\tans += suml[x];\n\t\tx -= lowerbit[x];\n\t}\n\treturn ans;\n}\nvoid adder(int x)\n{\n\twhile(x <= n)\n\t{\n\t\tsumr[x]++;\n\t\tx += lowerbit[x];\n\t}\n}\nint queryr(int x)\n{\n\tint ans = 0;\n\twhile(x)\n\t{\n\t\tans += sumr[x];\n\t\tx -= lowerbit[x];\n\t}\n\treturn ans;\n}\nint main()\n{\n\tn = read(),m = read();\n\tfor(int i = 1;i <= n;i++) lowerbit[i] = i & (-i);\n\twhile(m--)\n\t{\n\t\tint op = read(),l = read(),r = read();\n\t\tif(op == 1) addel(l),adder(r);\n\t\telse printf(\"%d\\n\",queryl(r) - queryr(l - 1));\n\t}\n}\n\t\t\n```",
        "postTime": 1541735440,
        "uid": 86721,
        "name": "L_M_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "\u9898\u610f\u6ca1\u8868\u8fbe\u6e05\u695a\uff0c\u8fd9\u9898\u5730\u96f7\u662f\u53ef\u4ee5\u540c\u65f6\u5b58\u5728\u4e8e\u540c\u4e00\u5730\u70b9\u7684\uff0c\u4e5f\u5c31\u662f\u4e0d\u88ab\u8986\u76d6\uff08\u8ba9\u6211\u51a5\u601d\u4e86\u5f88\u4e45\u5f88\u4e45\uff09\u3002\n\n\u89e3\u91ca\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u533a\u95f4\u52a0\u51cf\u7136\u540e\u6c42\u6700\u5927\u503c\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e24\u4e2a\u533a\u95f4\u4e0d\u60f3\u4ea4\uff0c\u8fd9\u6837\u4fbf\u6ca1\u6cd5\u901a\u8fc7\u6700\u5927\u6700\u5c0f\u503c\u7b97\u51fa\u7b54\u6848\uff08\u6211WA\u4e86\u4e24\u6b21\uff0c\u540e\u6765\u53d1\u73b0\u65f6\u3002\u3002\u3002\uff09\n\n\u6700\u7b80\u5355\u7684\u662f\u6811\u72b6\u6570\u7ec4\uff0c\u76f4\u63a5\u5b58\u4e24\u4e2a\uff0c\u7136\u540e\u524d\u7f00\u548c\u601d\u60f3\u89e3\u51b3\u3002\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\nint s[600006];\nint a[500006];\n\nint n,m;\n\nvoid update1(int r,int f)\n{\n    while(r<=n)\n    {\n        a[r]+=f;\n        r+=(r&(-r));\n    }\n}\n\nint get1(int l)\n{\n    int sum=0;\n    while(l>0)\n    {\n        sum+=a[l];\n        l-=(l&(-l));\n    }\n    return sum;\n}\n\nvoid update2(int r,int f)\n{\n    while(r<=n)\n    {\n        s[r]+=f;\n        r+=(r&(-r));\n    }\n}\n\nint get2(int l)\n{\n    int sum=0;\n    while(l>0)\n    {\n        sum+=s[l];\n        l-=(l&(-l));\n    }\n    return sum;\n}\n\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    int c,x,y;\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&c,&x,&y);\n        if(c==1)\n        {\n            update1(x,1);\n            update2(y,1);\n        }\n        else\n        {\n            printf(\"%d\\n\",get1(y)-get2(x-1));\n        }\n    }\n\n    return 0;\n}\n\n```",
        "postTime": 1538474823,
        "uid": 34663,
        "name": "redegg",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    },
    {
        "content": "\u8003\u8651\u5bb9\u65a5\uff0c\u533a\u95f4\u5185\u7684\u5730\u96f7\u79cd\u7c7b=\u603b\u7684\u6570\u91cf-\u53f3\u7aef\u70b9\u5728[1,l-1]-\u5de6\u7aef\u70b9\u5728[r+1,n]\n\n```cpp\n#include<cstdio>\n#define lowbit(x) x&(-x)\nusing namespace std;\ninline int read(){int x=0,f=1,ch=getchar(); while(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();} while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();} return x*f;}\ninline void write(int x){if (x<0) putchar('-'),x=-x; if (x>=10) write(x/10); putchar(x%10+'0');}\ninline void writeln(int x){write(x); puts(\"\");}\nconst int N=1e5+5;\nint n,m,bit1[N],bit2[N],All;\ninline void update(int bit[],int x){for (;x<=n;x+=lowbit(x)) bit[x]++;}\ninline int query(int bit[],int x){int ans=0; for (;x;x-=lowbit(x)) ans+=bit[x]; return ans;}\ninline int Query(int bit[],int l,int r){return query(bit,r)-query(bit,l-1);}\nint main(){\n\tn=read(); m=read();\n\tfor (int i=1;i<=m;i++){\n\t\tint opt=read(),l=read(),r=read();\n\t\tif (opt==1) update(bit1,l),update(bit2,r),All++;\n\t\t\telse writeln(All-Query(bit1,r+1,n)-Query(bit2,1,l-1));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1544681138,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2184 \u3010\u8d2a\u5a6a\u5927\u9646\u3011"
    }
]