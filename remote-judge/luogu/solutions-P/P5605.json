[
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\uff1a\n\n\u7ed9\u5b9a\u6b63\u6574\u6570 $m$\uff0c\u4fdd\u8bc1 $m = p^k$\uff08$p \\in \\mathbb{P} \\backslash \\{ 2 \\}$\uff0c$k \\ge 1$\uff0c$m \\le {10}^{18}$\uff09\u3002\n\n\u63a5\u4e0b\u6765\u7ed9\u51fa $n$ \u7ec4\u72ec\u7acb\u7684\u8be2\u95ee\uff0c\u6bcf\u7ec4\u8be2\u95ee\u7ed9\u5b9a\u4e24\u4e2a\u6b63\u6574\u6570 $x, y$\uff08$1 \\le x, y < m$ \u4e14 $x, y \\perp m$\uff09\uff0c\u8be2\u95ee\u662f\u5426\u5b58\u5728\u975e\u8d1f\u6574\u6570 $a$ \u6ee1\u8db3 $x^a \\equiv y \\pmod{m}$\u3002\n\n### \u9898\u89e3\uff1a\n\n\u56e0\u4e3a $m$ \u662f\u5947\u8d28\u6570\u7684\u6b21\u5e42\uff0c\u6240\u4ee5\u4e00\u5b9a\u5b58\u5728**\u539f\u6839** $g$\uff08\u6ee1\u8db3 $g$ \u7684 $0$ \u5230 $\\varphi(m) - 1$ \u6b21\u5e42\u53ef\u4ee5\u7ec4\u6210\u6a21 $m$ \u7684\u7b80\u5316\u5269\u4f59\u7cfb\uff0c\u5373\u4e0d\u91cd\u590d\u4e0d\u9057\u6f0f\u5730\u904d\u5386\u4e86\u6240\u6709\u53ef\u80fd\u7684\u503c\uff09\u3002\n\n\u8bb0 $\\mathrm{ind}_g\\,a$ \u4e3a\u6ee1\u8db3 $g^k \\equiv a \\pmod{m}$\uff0c\u4e14 $0 \\le k < \\varphi(m)$ \u7684 $k$\uff0c\u5373 $a$ \u6a21 $m$ \u5bf9\u539f\u6839 $g$ \u7684**\u6307\u6807**\u3002\u53ef\u4ee5\u770b\u4f5c\u662f\u4ee5 $k$ \u4e3a\u81ea\u53d8\u91cf\u7684 $f_g(k) = g^k \\bmod m$ \u7684\u53cd\u51fd\u6570\u3002\n\n\u5173\u4e8e\u6307\u6807\u6709\u8fd0\u7b97\u6cd5\u5219\uff1a$\\mathrm{ind}_g(ab) \\equiv \\mathrm{ind}_g\\,a + \\mathrm{ind}_g\\,b \\pmod{\\varphi(m)}$\uff0c\u76f8\u5f53\u4e8e\u5bf9\u6570\u51fd\u6570\uff0c\u53ef\u4ee5\u628a\u6a21\u610f\u4e49\u4e0b\u7684\u4e58\u6cd5\u5316\u4e58\u4e3a\u52a0\u3002\n\n\u540c\u65f6\u6211\u4eec\u6709\u96c6\u5408 $S_a = \\{ a^0, a^1, a^2, a^3, \\ldots \\}$ \u4e3a $a$ \u7684\u6b21\u5e42\u7ec4\u6210\u7684\u96c6\u5408\u3002\u663e\u7136\u96c6\u5408\u5185\u7684\u6570\u7684\u6307\u6807\u5747\u662f $\\mathrm{ind}_g\\,a$ \u7684\u500d\u6570\uff08\u6a21 $\\varphi(m)$ \u610f\u4e49\u4e0b\uff09\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u6709 $|S_a| = \\dfrac{\\varphi(m)}{\\gcd(\\mathrm{ind}_g\\,a, \\varphi(m))}$\uff0c\u4e14 $S_a$ \u4e2d\u7684\u6570\u7684\u6307\u6807\u90fd\u662f $\\gcd(\\mathrm{ind}_g\\,a, \\varphi(m))$ \u7684\u500d\u6570\u3002\n\n\u7279\u522b\u5730\uff0c$S_a$ \u7684\u5927\u5c0f\u88ab\u79f0\u4e3a $a$ \u6a21 $m$ \u7684**\u9636**\uff0c\u8bb0\u4f5c $\\mathrm{ord}\\,a$\uff0c\u540c\u65f6\u5b83\u4e5f\u7b49\u4ef7\u4e8e\u6ee1\u8db3 $a^k \\equiv 1 \\pmod{m}$ \u7684\u6700\u5c0f\u6b63\u6574\u6570 $k$\u3002\n\n\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u7ed3\u5408\u4e0a\u8ff0\u7ed3\u8bba\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a\u82e5\u5b58\u5728\u975e\u8d1f\u6574\u6570 $a$ \u6ee1\u8db3 $x^a \\equiv y \\pmod{m}$ \u5f53\u4e14\u4ec5\u5f53 $\\mathrm{ord}\\,b \\mid \\mathrm{ord}\\,a$\u3002\n\n\u63a5\u4e0b\u6765\u8f6c\u5316\u4e3a\u6c42\u9636\u7684\u95ee\u9898\u3002\u9636\u90fd\u662f $\\varphi(m)$ \u7684\u56e0\u6570\uff0c\u5c06 $\\varphi(m)$ \u5206\u89e3\u8d28\u56e0\u6570\u5e76\u8bd5\u9664\u5373\u53ef\u3002\n\n\u4f7f\u7528 Pollard-Rho \u7b97\u6cd5\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u5feb\u901f\u5e42\u65f6\u9700\u8981\u4f7f\u7528 `__int128`\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u671f\u671b $\\mathcal{O}(\\mathcal{T}(\\mathrm{Pollard-Rho}) + n \\: \\omega(m) \\log m)$\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <random>\n#include <chrono>\n#include <algorithm>\n\nstd::mt19937 rng(std::chrono::steady_clock::now().time_since_epoch().count());\ntemplate<typename T> inline T range(T l, T r) { return std::uniform_int_distribution<T>(l, r)(rng); }\n\ntypedef long long LL;\ntypedef __int128 LLL;\n\ninline LL qPow(LL b, LL e, LL m) {\n\tif (!m) {\n\t\t#define Lim 0x3f3f3f3f3f3f3f3f\n\t\tLL a = 1;\n\t\tfor (; e; e >>= 1, b = Lim / b >= b ? b * b : Lim)\n\t\t\tif (e & 1) a = Lim / a >= b ? a * b : Lim;\n\t\treturn a;\n\t\t#undef Lim\n\t}\n\tLL a = 1;\n\tfor (; e; e >>= 1, b = (LLL)b * b % m)\n\t\tif (e & 1) a = (LLL)a * b % m;\n\treturn a;\n}\ninline LL Abs(LL x) { return x < 0 ? -x : x; }\nLL Gcd(LL a, LL b) { return b ? Gcd(b, a % b) : a; }\n\nLL Mod, Phi, Prime; int Alpha;\ninline LL KthRt(LL X, int K) {\n\tLL V = pow(X, 1. / K);\n\twhile (qPow(V, K, 0) <= X) ++V;\n\twhile (qPow(V, K, 0) > X) --V;\n\treturn V;\n}\nvoid Get(LL X) {\n\tAlpha = 1;\n\tfor (int i = 2; i <= 59; ++i) if (qPow(KthRt(X, i), i, 0) == X) Alpha = i;\n\tPrime = KthRt(X, Alpha);\n}\n\nLL Prs[65]; int Prc;\ninline bool MillerRabin(LL x, LL b) {\n\tLL k = x - 1;\n\twhile (k) {\n\t\tLL cur = qPow(b, k, x);\n\t\tif (cur != 1 && cur != x - 1) return 0;\n\t\tif (k & 1 || cur == x - 1) return 1;\n\t\tk >>= 1;\n\t} return 1;\n}\ninline bool isPrime(LL x) {\n\tif (x == 46856248255981ll || x < 2) return 0;\n\tif (x == 2 || x == 3 || x == 7 || x == 61 || x == 24251) return 1;\n\treturn MillerRabin(x, 2) && MillerRabin(x, 3) && MillerRabin(x, 7) && MillerRabin(x, 61) && MillerRabin(x, 24251);\n}\ninline LL Func(LL x, LL b, LL m) { return ((LLL)x * x + b) % m; }\ninline LL PollardRho(LL x) {\n\tLL s = 0, t = 0, c = range(1ll, x - 1), val = 1;\n\tint stp = 0, goal = 1;\n\tfor (goal = 1; ; goal <<= 1, s = t, val = 1) {\n\t\tLL d;\n\t\tfor (stp = 1; stp <= goal; ++stp) {\n\t\t\tt = Func(t, c, x);\n\t\t\tval = (LLL)val * Abs(t - s) % x;\n\t\t\tif (stp % 127 == 0)\n\t\t\t\tif ((d = Gcd(val, x)) > 1) return d;\n\t\t}\n\t\tif ((d = Gcd(val, x)) > 1) return d;\n\t}\n}\nvoid Factorize(LL Num) {\n\tif (isPrime(Num)) { Prs[++Prc] = Num; return ; }\n\tLL d = Num;\n\twhile (d == Num) d = PollardRho(Num);\n\tFactorize(d), Factorize(Num / d);\n}\n\ninline LL ord(LL x) {\n\tLL ans = Phi;\n\tfor (int i = 1; i <= Prc; ++i) if (qPow(x, ans / Prs[i], Mod) == 1) ans /= Prs[i];\n\treturn ans;\n}\n\nint main() {\n\tint Q;\n\tscanf(\"%lld%d\", &Mod, &Q);\n\tGet(Mod);\n\tPhi = Mod / Prime * (Prime - 1);\n\tFactorize(Phi);\n\tstd::sort(Prs + 1, Prs + Prc + 1);\n\tint T = 0, cnt = 0; LL lst = 0;\n\tfor (int i = 1; i <= Prc; ++i) {\n\t\tif (Prs[i] != lst) {\n\t\t\tif (lst) {\n\t\t\t\tint k = 31 - __builtin_clz(cnt);\n\t\t\t\tPrs[++T] = qPow(lst, cnt - (1 << k) + 1, 0);\n\t\t\t\tfor (int j = 1; j <= k; ++j) Prs[++T] = qPow(lst, 1 << (k - j), 0);\n\t\t\t}\n\t\t\tlst = Prs[i], cnt = 0;\n\t\t} ++cnt;\n\t} {\n\t\tint k = 31 - __builtin_clz(cnt);\n\t\tPrs[++T] = qPow(lst, cnt - (1 << k) + 1, 0);\n\t\tfor (int j = 1; j <= k; ++j) Prs[++T] = qPow(lst, 1 << (k - j), 0);\n\t} Prc = T;\n//\tprintf(\"Phi = %lld = \", Phi);\n//\tfor (int i = 1; i <= Prc; ++i) printf(\"%lld%s\", Prs[i], i == Prc ? \"\\n\" : \" * \");\n\twhile (Q--) {\n\t\tLL A, B;\n\t\tscanf(\"%lld%lld\", &A, &B);\n\t\tA = ord(A), B = ord(B);\n\t\tputs(A % B ? \"No\" : \"Yes\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1572232126,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5605 \u3010\u5c0fA\u4e0e\u4e24\u4f4d\u795e\u4ed9\u3011"
    },
    {
        "content": "\u795e\u4ed9\u9898\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u9996\u5148\u6307\u6807\u80af\u5b9a\u662f\u6c42\u4e0d\u51fa\u6765\u7684\uff0cBSGS\u80af\u5b9a\u4e0d\u80fd\u60f3\n\n\u6211\u4eec\u4e24\u8fb9\u5206\u522b\u53d6\u4ee5\u539f\u6839\u4e3a\u5e95\u6570\u7684\u79bb\u6563\u5bf9\u6570\uff0c\u65b9\u7a0b\u53ef\u5316\u4e3a\uff1a\n\n$$alog_gx \\equiv log_gy$$\n\n\u4ee4$log_gx=x',log_gy=y'$\n\n\u5219\u6709\u65b9\u7a0b\n\n$$ax' \\equiv y'(mod\\ \\phi(m))$$\n\n\u53ef\u5316\u4e3a\uff1a\n\n$$ax'-b\\phi(m) \\equiv y'$$\n\n\u6839\u636e\u88f4\u8700\u5b9a\u7406\uff0c\u5219$gcd(x',\\phi(m))|y'$\uff0c\u800c\u8fd9\u7b49\u4ef7\u4e8e$gcd(x',\\phi(m))|gcd(y',\\phi(m))$\n\n\u6240\u4ee5\u73b0\u5728\u5173\u952e\u5c31\u662f\u6c42$gcd(x',\\phi(m))$\n\n\u6211\u4eec\u627e\u5230$x$\u7684\u9636$a$\uff0c\u5373\u6700\u5c0f\u7684$a$\u4f7f\u5f97$x^a \\equiv 1 (mod\\ m)$\n\n\u4ee4$x=g^i$\uff08\u5176\u5b9e\u8fd9\u91cc\u7684$i$\u5c31\u662f$x'$)\uff0c\u5219\u6709$g^{ia} \\equiv 1 (mod\\ m)$\n\n\u56e0\u4e3a$g$\u7684\u9636\u662f$\\phi(m)$\uff0c\u6240\u4ee5$phi(m)|ia$\n\n\u8bbe$ia=k\\phi(m)$\uff0c\u7531\u4e8ea\u662f\u6700\u5c0f\u7684\u6574\u6570\u4f7f\u5f97k\u4e5f\u4e3a\u6574\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f97\u51fa$a=\\frac{lcm(i,\\phi(m))}{i}$\uff0c\u56e0\u6b64$a=\\phi(m)/gcd(\\phi(m),i)$\n\n\u6240\u4ee5$gcd(\\phi(m),i)=\\frac{\\phi(m)}{a}$\n\n\u8fd9\u6837\u5c31\u6c42\u51fa$gcd(x',\\phi(m))$\u4e86\uff0c\u5bf9$y'$\u4e5f\u540c\u7406\n\n\u6240\u4ee5\u6c42\u51fa\u9636\u5c31\u53ef\u4ee5\u5feb\u901f\u5224\u65ad\uff0c\u4f7f\u7528\u8bd5\u9664\u6cd5\u5373\u53ef\u5728log\u65f6\u95f4\u5185\u6c42\u51fa\n\n\u611f\u8c22@rushcheyo\u795e\u4ed9\u7684\u6307\u5bfcQwQ\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define rg register\n#define RP(i,a,b) for(register int i=a;i<=b;++i)\n#define DRP(i,a,b) for(register int i=a;i>=b;--i)\n#define fre(z) freopen(z\".in\",\"r\",stdin),freopen(z\".out\",\"w\",stdout)\ntypedef long long ll;\ntypedef double db;\n#define lll __int128\ntemplate<class type_name> inline type_name qr(type_name sample)\n{\n    type_name ret=0,sgn=1;\n    char cur=getchar();\n    while(!isdigit(cur))\n        sgn=(cur=='-'?-1:1),cur=getchar();\n    while(isdigit(cur))\n        ret=(ret<<1)+(ret<<3)+cur-'0',cur=getchar();\n    return sgn==-1?-ret:ret;\n}\n\nll max_factor;\n\ninline ll gcd(ll a,ll b)\n{\n    if(b==0)\n        return a;\n    return gcd(b,a%b);\n}\n\ninline ll qp(ll x,ll p,ll mod)\n{\n    ll ans=1;\n    while(p)\n    {\n        if(p&1)\n            ans=(lll)ans*x%mod;\n        x=(lll)x*x%mod;\n        p>>=1;\n    }\n    return ans;\n}\n\ninline bool mr(ll x,ll b)\n{\n    ll k=x-1;\n    while(k)\n    {\n        ll cur=qp(b,k,x);\n        if(cur!=1 && cur!=x-1)\n            return false;\n        if((k&1)==1 || cur==x-1)\n            return true;\n        k>>=1;\n    }\n    return true;\n}\n\ninline bool prime(ll x)\n{\n    if(x==46856248255981ll || x<2)\n        return false;\n    if(x==2 || x==3 || x==7 || x==61 || x==24251)\n        return true;\n    return mr(x,2)&&mr(x,61);\n}\n\ninline ll f(ll x,ll c,ll n)\n{\n    return ((lll)x*x+c)%n;\n}\n\ninline ll PR(ll x)\n{\n    ll s=0,t=0,c=1ll*rand()%(x-1)+1;\n    int stp=0,goal=1;\n    ll val=1;\n    for(goal=1;;goal<<=1,s=t,val=1)\n    {\n        for(stp=1;stp<=goal;++stp)\n        {\n            t=f(t,c,x);\n            val=(lll)val*abs(t-s)%x;\n            if((stp%127)==0)\n            {\n                ll d=gcd(val,x);\n                if(d>1)\n                    return d;\n            }\n        }\n        ll d=gcd(val,x);\n        if(d>1)\n            return d;\n    }\n}\nlong long p,o,fa[105],num;\ninline void fac(ll x)\n{\n\tif(x<2)\n\t\treturn;\n    if(prime(x))\n    {\n    \tfa[++o]=x;\n      \treturn;\n    }\n    ll p=x;\n    while(p>=x)\n        p=PR(x);\n    fac(p),fac(x/p);\n}\nlong long m,tot,x,y,phi,i,j;\nint main()\n{\n\tcin>>m>>tot;\n\tfac(m);\n\tp=fa[1];\n\tphi=m/p*(p-1);\n\tnum=o;\n\t--o;\n\tfac(p-1);\n\tsort(fa+1,fa+1+o);\n\twhile(tot--)\n\t{\n\t\tscanf(\"%lld %lld\",&x,&y);\n\t\tll tmp=phi;\n\t\tfor(i=1;i<=o;)\n\t\t{\n\t\t\tfor(j=i;j<=o&&fa[i]==fa[j];j++)\n\t\t\t{\n\t\t\t\tif(qp(x,tmp/fa[i],m)==1)\n\t\t\t\t\ttmp/=fa[i];\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(;j<=o&&fa[i]==fa[j];j++);\n\t\t\ti=j;\n\t\t}\n\t\tll t=phi;\n\t\tfor(i=1;i<=o;)\n\t\t{\n\t\t\tfor(j=i;j<=o&&fa[i]==fa[j];j++)\n\t\t\t{\n\t\t\t\tif(qp(y,t/fa[i],m)==1)\n\t\t\t\t\tt/=fa[i];\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(j=i;j<=o&&fa[i]==fa[j];j++);\n\t\t\ti=j;\n\t\t}\n\t\ttmp=phi/tmp;\n\t\tt=phi/t;\n\t\tif(t%tmp==0)\n\t\t\tputs(\"Yes\");\n\t\telse\n\t\t\tputs(\"No\");\n\t}\n}\n```\n",
        "postTime": 1572234269,
        "uid": 13185,
        "name": "\u53cc\u7ba1\u8367\u5149\u706f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5605 \u3010\u5c0fA\u4e0e\u4e24\u4f4d\u795e\u4ed9\u3011"
    },
    {
        "content": "> I. [P5605 \u5c0f A \u4e0e\u4e24\u4f4d\u795e\u4ed9](https://www.luogu.com.cn/problem/P5605)\n>\n> [\u6570\u8bba\u5b66\u4e60\u7b14\u8bb0](https://www.cnblogs.com/alex-wei/p/Number_Theory.html)\u3002\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a[Pollard-rho & Miller-Rabin](https://www.cnblogs.com/alex-wei/p/Number_Theory_II.html)\u3002\n\n\u6ce8\u610f\u5230\u6a21\u6570 $p$ \u662f\u5947\u8d28\u6570\u7684\u5e42\uff0c\u5b58\u5728\u539f\u6839 $g$\u3002\n\n\u5c1d\u8bd5\u5c06 $x$ \u548c $y$ \u8868\u793a\u6210 $g ^ X$ \u548c $g ^ Y$ \u7684\u5f62\u5f0f\uff0c\u5219\u6839\u636e\u6b27\u62c9\u5b9a\u7406\uff0c$x ^ a \\equiv y\\pmod p$ \u7b49\u4ef7\u4e8e\u65b9\u7a0b $Xa\\equiv Y\\pmod {\\varphi(p)}$\u3002\n\n\u6839\u636e\u88f4\u8700\u5b9a\u7406\uff0c\u540e\u8005\u5b58\u5728\u89e3\u7684\u5145\u8981\u6761\u4ef6\u662f $\\gcd(X, \\varphi(p)) \\mid Y$\uff0c\u8fd9\u7b49\u4ef7\u4e8e $\\gcd(X, \\varphi(p)) \\mid \\gcd(Y, \\varphi(p))$\u3002\n\n\u6839\u636e\u9636\u7684\u6027\u8d28 $\\delta_p(g ^ k) = \\dfrac {\\delta_p(g)}{\\gcd(\\delta_p(g), k)}$\uff0c\u6211\u4eec\u53d1\u73b0 $\\delta_p(x) = \\dfrac {\\varphi(p)} {\\gcd(\\varphi(p), X)}$\uff08\u5176\u5b9e\u8fd9\u5f88\u597d\u7406\u89e3\uff0c\u5728\u957f\u4e3a $\\varphi(p)$ \u7684\u73af\u4e0a\u6bcf\u4e00\u6b65\u8d70 $X$ \u957f\u5ea6\uff0c\u5219\u9700\u8981 $\\dfrac {\\varphi(p)}{\\gcd(\\varphi(p), X)}$ \u6b65\u624d\u80fd\u56de\u5230\u539f\u6765\u7684\u4f4d\u7f6e \uff09\uff0c\u56e0\u6b64\u8be5\u6761\u4ef6\u53c8\u7b49\u4ef7\u4e8e $\\delta_p(y)\\mid \\delta_p(x)$\u3002\n\n\u76f4\u63a5 $\\mathrm{polylog}$ \u6c42\u9636\u5373\u53ef\uff0c\u5728\u6700\u5f00\u59cb\u9700\u8981\u4f7f\u7528 Pollard-rho \u5206\u89e3 $\\varphi(p)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log ^ 2p + p ^ {0.25})$\u3002\n\n\u901a\u8fc7\u672c\u9898\uff0c\u6211\u4eec\u5f97\u5230\u8fd9\u6837\u7684\u7ed3\u8bba\uff1a\u5bf9\u4e8e\u5947\u8d28\u6570\u7684\u5e42 $p$ \u548c $x, y\\perp p$\uff0c$x ^ a\\equiv y\\pmod p$ \u6709\u89e3\u5f53\u4e14\u4ec5\u5f53 $\\delta_p(y)\\mid \\delta_p(x)$\u3002\n\n- \u6839\u636e\u9636\u7684\u6027\u8d28\uff0c\u5bf9\u4e8e $a = k\\delta_p(x)$\uff0c\u5fc5\u7136\u6709 $x ^ a \\equiv 1\\pmod p$\u3002\u56e0\u6b64\u8003\u8651\u9996\u5148\u4ee4 $a = \\varphi(p)$\uff0c\u7136\u540e\u5bf9\u4e8e $\\varphi(p)$ \u7684\u6bcf\u4e2a\u8d28\u56e0\u5b50 $q$\uff0c\u7528 $a$ \u4e0d\u65ad\u8bd5\u9664 $q$ \u76f4\u5230 $a$ \u65e0\u6cd5\u6574\u9664 $q$ \u6216 $x ^ {\\frac a q} \\not\\equiv 1\\pmod p$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nmt19937 rnd(time(0));\nint rd(int l, int r) {return rnd() % (r - l + 1) + l;}\nlong long ksm(__int128 a, long long b, long long p) {\n\tlong long s = 1;\n\twhile(b) {\n\t\tif(b & 1) s = s * a % p;\n\t\ta = a * a % p, b >>= 1;\n\t}\n\treturn s;\n}\nbool Miller_Rabin(long long n) {\n\tif(n < 3 || n % 2 == 0) return n == 2;\n\tlong long r = n - 1, d = 0;\n\twhile(r & 1 ^ 1) r >>= 1, d++;\n\tfor(int i = 1; i <= 15; i++) {\n\t\tlong long a = rd(0, 1e9) % (n - 2) + 2, v = ksm(a, r, n);\n\t\tif(v == 1) continue;\n\t\tfor(int j = 0; j <= d; j++) {\n\t\t\tif(j == d) return 0;\n\t\t\tif(v == n - 1) break;\n\t\t\tv = (__int128) v * v % n;\n\t\t}\n\t}\n\treturn 1;\n}\nlong long Pollard_rho(long long n) {\n\tlong long c = rd(0, 1e9) % (n - 1) + 1, s = 0, t = 0, prod = 1;\n\tfor(int i = 1; ; s = t, i <<= 1)\n\t\tfor(int j = 1; j <= i; j++) {\n\t\t\tt = ((__int128) t * t + c) % n, prod = (__int128) prod * abs(s - t) % n;\n\t\t\tif((j % 127 == 0 || j == i) && __gcd(prod, n) > 1) return __gcd(prod, n);\n\t\t}\n}\n\nmap <long long, bool> mp;\nvoid factorize(long long n) {\n\tif(n == 1) return;\n\tif(Miller_Rabin(n)) return mp[n] = 1, void();\n\tlong long p = Pollard_rho(n);\n\twhile(p == n) p = Pollard_rho(n);\n\twhile(n % p == 0) n /= p;\n\tfactorize(p), factorize(n);\n}\nlong long m, T, phi, x, y, dx, dy;\nint main() {\n\tcin >> m >> T, factorize(m);\n\tphi = m / mp.begin() -> first * (mp.begin() -> first - 1);\n\tmp.clear(), factorize(phi);\n\twhile(T--) {\n\t\tcin >> x >> y, dx = dy = phi;\n\t\tfor(auto it : mp) {\n\t\t\twhile(dx % it.first == 0 && ksm(x, dx / it.first, m) == 1) dx /= it.first;\n\t\t\twhile(dy % it.first == 0 && ksm(y, dy / it.first, m) == 1) dy /= it.first;\n\t\t}\n\t\tif(dx % dy) puts(\"No\");\n\t\telse puts(\"Yes\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1648345734,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "P5605 \u5c0f A \u4e0e\u4e24\u4f4d\u795e\u4ed9"
    }
]