[
    {
        "content": "[\u65e5\u5e38\u5b89\u5229\u535a\u5ba2](https://endsah.cf)\n\n# $\\text{Foreword}$\n\n**\u8fd9\u91cc\u4e0d\u662f\u6b63\u89e3\uff01\uff01\uff01 \u8fd9\u91cc\u4e0d\u662f\u6b63\u89e3\uff01\uff01\uff01**\n\n\u867d\u8bf4\u5982\u6b64\uff0c\u622a\u6b62\u5230\u6b64\u7bc7\u9898\u89e3\u53d1\u51fa\u65f6\u95f4\uff0c\u6211\u7684\u7a0b\u5e8f\u4ecd\u662f\u6700\u4f18\u89e3\u7b2c\u4e00\u3002~~\u5e76\u4e14\u62c9\u4e86\u539f\u5148\u7b2c\u4e00\u8fd8\u4e0d\u5c11~~\n\n\u5176\u5b9e\u539f\u672c\u53ea\u662f\u60f3\u8bd5\u8bd5\u80fd\u4e0d\u80fd\u8fc7\u6389[[NOI2003]\u6587\u672c\u7f16\u8f91\u5668](https://www.luogu.org/problemnew/show/P4008)\u7684\uff0c\u8fc7\u4e86\u4e4b\u540e\u542c\u540c\u5b66\u8bf4\u8fd9\u8fb9\u6709\u4e2a\u5e26\u7ffb\u8f6c\u52a0\u5f3a\u7248\uff0c\u4e8e\u662f\u5c31\u6765\u8bd5\u4e86\u8bd5...\n\n\u7136\u540e\u5c31A\u4e86\uff1f\u7136\u540e\u5c31\u6700\u4f18\u89e3\u7b2c\u4e00\uff1f\uff1f\uff1f\n\n\u6ee1\u8138\u95ee\u53f7.jpg\n\n# $\\text{Solution}$\n\n\u9898\u610f\u5c31\u4e0d\u89e3\u91ca\u4e86...\u8d64\u88f8\u88f8\u7684\u6570\u636e\u7ed3\u6784\n\n\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u5404\u7c7b\u64cd\u4f5c\uff0c\u6bd4\u5982 $\\text{Splay\u3001FHQ}$\u3001\u5757\u72b6\u94fe\u8868$\\cdots$\n\n\u8fd9\u4e9b\u6211\u90fd\u4e0d\u518d\u8d58\u8ff0\uff0c\u524d\u9762\u4e5f\u6709\u4eba\u8bb2\u4e86\u3002\n\n\u4f46\u5982\u679c\u771f\u7684\u5230\u4e86\u8003\u573a\u4e0a\uff0c\u8fd9\u4e9b\u590d\u6742\u53c8\u96be\u8c03\u7684\u6570\u636e\u7ed3\u6784\u65e0\u7591\u4f1a\u8017\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u3002\n\n\u518d\u8ba4\u771f\u7684\u770b\u770b\u6570\u636e\u8303\u56f4\uff1a\n\n> $\\text{MOVE}$ \u64cd\u4f5c\u4e0d\u8d85\u8fc7 $50000$ \u4e2a\uff0c$\\text{INSERT, DELETE, ROTATE}$ \u64cd\u4f5c\u7684\u603b\u4e2a\u6570\u4e0d\u8d85\u8fc7 $6000$\uff0c$\\text{GET}$ \u64cd\u4f5c\u4e0d\u8d85\u8fc7 $20000$ \u4e2a\uff0c $\\text{PREV, NEXT}$ \u64cd\u4f5c\u7684\u603b\u4e2a\u6570\u4e0d\u8d85\u8fc7 $20000$\u3002\n\n\u66b4\u529b\uff0c\u771f\u7684\u5c31\u4f1a $\\text{TLE}$ \u5417\uff1f\n\n\u5982\u679c\u5f00\u542f $O_2$\uff0c$\\text{vector}$ \u5e26\u6765\u7684\u6781\u81f4\u901f\u5ea6\uff0c\u8fd8\u662f\u503c\u5f97\u6211\u4eec\u4e00\u8bd5\u7684\u3002\n\n\u5176\u5b9e\u6700\u91cd\u8981\u7684\u8fd8\u662f\uff0c**\u592a\u597d\u7801\u4e86**\uff01\n\n\u8bb0\u5f53\u524d\u5149\u6807\u4f4d\u7f6e\u4e3a $pos$\uff0c\u5f53\u524d\u6587\u672c\u4e3a $T$\uff0c\u4e34\u65f6\u6587\u672c\u4e3a $temp$\u3002\u90a3\u4e48\u5404\u4e2a\u64cd\u4f5c\u5206\u522b\u4e3a\uff1a\n\n$\\text{Move}\\ k$\uff1a`pos = k;`\n\n$\\text{Insert}\\ n\\ s$\uff1a\u5c06 $s$ \u6bcf\u4e2a\u5b57\u7b26\u4f9d\u6b21\u8bfb\u5165\u653e\u5165 $temp$\uff0c\u7136\u540e`T.insert(T.begin() + pos, temp.begin(), temp.end());`\n\n$\\text{Delete}\\ n$\uff1a`T.erase(T.begin() + pos, T.begin() + pos + n);`\n\n$\\text{Rotate}\\ n$\uff1a`std::reverse(T.begin() + pos, T.begin() + pos + n);`\n\n$\\text{Get}$\uff1a`putchar(T[pos]);`\n\n$\\text{Prev}$\uff1a`--pos;`\n\n$\\text{Next}$\uff1a`++pos;`\n\n\u6709\u6ca1\u6709\u76f4\u89c2\u611f\u53d7\u5230\u7801\u91cf\uff1f\n\n\u4e8e\u662f\u82b1 $\\text{20min}$ \u65f6\u95f4\u7801\u5b8c\u4e4b\u540e\uff0c\u6211\u6ee1\u6000\u7740\u5e0c\u671b\u4e00\u4ea4...\n\n...\u5f53\u7136\u662f\u56e0\u4e3a\u7ec6\u8282\u95ee\u9898\u7206\u96f6\u4e86- -\uff08\u56e0\u7528\u4e86`assert`\uff0c\u5168\u90e8 $\\text{RE}$\uff09\n\n\u60f3\u8be6\u89c1\u7ec6\u8282\u600e\u4e48\u5904\u7406\u7684\uff0c\u8bf7\u770b\u4ee3\u7801\uff08\u5728\u4e0b\u9762\uff09- -\n\n[$\\Huge\\text{Code}$](https://www.luogu.org/paste/knyyi070)\n\n$\\text{Thanks for your consideration!}$",
        "postTime": 1549946331,
        "uid": 91252,
        "name": "EndSaH",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4567 \u3010[AHOI2006]\u6587\u672c\u7f16\u8f91\u5668\u3011"
    },
    {
        "content": "[\u5728\u535a\u5ba2\u67e5\u770b](https://www.cnblogs.com/chenxiaoran666/p/BZOJ1269.html)\n\n**\u5927\u81f4\u9898\u610f\uff1a** \u8ba9\u4f60\u7ef4\u62a4\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6709\u63d2\u5165\u5b57\u7b26\u4e32\u3001\u5220\u9664\u533a\u95f4\u3001\u53cd\u8f6c\u533a\u95f4\u548c\u8f93\u51fa\u5355\u4e2a\u5b57\u7b26\u64cd\u4f5c\u3002\n\n### $Splay$\n\n\u8fd9\u5e94\u8be5\u662f\u4e00\u9053\u6bd4\u8f83\u7b80\u5355\u7684$Splay$\u9898\uff08\u867d\u7136\u56e0\u4e3a\u5404\u79cd\u7ec6\u8282\u6211\u8c03\u4e86\u5f88\u4e45\uff09\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u4e00\u4e2a\u53d8\u91cf$k$\u6765\u8bb0\u5f55\u5149\u6807\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u7528$Splay$\u7ef4\u62a4\u3002\n\n\u5173\u4e8e\u7528$Splay$\u7ef4\u62a4\u533a\u95f4\u8be6\u89c1\u8fd9\u7bc7\u535a\u5ba2\u4e2d\u5173\u4e8e\u7ef4\u62a4\u5e8f\u5217\u7684\u90e8\u5206\uff1a[\u7b80\u6790\u5e73\u8861\u6811\uff08\u4e09\uff09\u2014\u2014\u6d45\u8c08Splay](https://www.cnblogs.com/chenxiaoran666/p/Splay.html#\u6a21\u677f2\u6d1b\u8c373391\u6a21\u677f\u6587\u827a\u5e73\u8861\u6811)\u3002\n\n\u4e0b\u9762\u662f\u5bf9\u5404\u64cd\u4f5c\u5b9e\u73b0\u7684\u7b80\u5355\u6982\u62ec\uff0c\u5177\u4f53\u5b9e\u73b0\u89c1\u4ee3\u7801\u3002\n\n#### $Move$\u64cd\u4f5c\n\n\u66f4\u65b0$k$\u5373\u53ef\u3002\n\n#### $Insert$\u64cd\u4f5c\n\n\u9996\u5148\uff0c\u5c06\u7ed9\u4f60\u7684\u5b57\u7b26\u4e32\u5148\u5efa\u6210\u4e00\u68f5\u6811\uff0c\u8bb0\u5176\u6839\u4e3a$p$\u3002\n\n\u7136\u540e\uff0c\u5c06\u7b2c$k-1$\u4e2a\u8282\u70b9$Splay$\u5230\u6839\uff0c\u7b2c$k+1$\u4e2a\u8282\u70b9$Splay$\u5230\u6839\u7684\u53f3\u513f\u5b50\uff0c\u6b64\u65f6\u6839\u8282\u70b9\u7684\u53f3\u513f\u5b50\u7684\u5de6\u513f\u5b50\u5c31\u662f\u7b2c$k$\u4e2a\u8282\u70b9\u3002\n\n\u518d\u5c31\u53ef\u4ee5\u5c06$p$\u4f5c\u4e3a\u8fd9\u4e2a\u8282\u70b9\u7684\u53f3\u513f\u5b50\u4e86\uff08\u5343\u4e07\u6ce8\u610f\uff0c\u8981\u5148$PushDown$\u8fd9\u4e2a\u8282\u70b9\u518d\u64cd\u4f5c\uff0c\u4e0d\u7136\u4f1a\u65cb\u8f6c\u5b50\u6811\uff09\u3002\n\n\u4f46\u8fd8\u8981\u6ce8\u610f\u7ef4\u62a4$Size$\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5c06$p$\u76f4\u63a5\u65cb\u5230\u6839\u5373\u53ef\u3002\n\n#### $Delete$\u64cd\u4f5c\n\n\u8bbe\u5220\u9664\u7684\u533a\u95f4\u4e3a$[l,r]$\u3002\n\n\u5219\u5c06\u7b2c$l-1$\u4e2a\u8282\u70b9$Splay$\u5230\u6839\uff0c\u7b2c$r+1$\u4e2a\u8282\u70b9$Splay$\u5230\u6839\u7684\u53f3\u513f\u5b50\uff0c\u7136\u540e\u5c06\u6839\u8282\u70b9\u7684\u53f3\u513f\u5b50\u7684\u5de6\u513f\u5b50\u8d4b\u503c\u4e3a$0$\uff0c\u5e76$PushUp$\u6839\u8282\u70b9\u7684\u53f3\u513f\u5b50\u548c\u6839\u5373\u53ef\u3002\n\n#### $Rotate$\u64cd\u4f5c\n\n\u5b9e\u9645\u4e0a\u6211\u611f\u89c9\u8fd9\u4e2a\u64cd\u4f5c\u5e94\u53eb$Reverse$\u64cd\u4f5c\u3002\u3002\u3002\n\n\u548c$Delete$\u64cd\u4f5c\u5dee\u4e0d\u591a\u5427\uff0c\u53ea\u4e0d\u8fc7\u662f\u628a\u6e05\u96f6\u6539\u6210\u7ffb\u8f6c\uff0c\u4e14\u4e0d\u7528$PushUp$\u7f62\u4e86\u3002\n\n#### $Get$\u64cd\u4f5c\n\n\u5c06\u7b2c$k-1$\u4e2a\u8282\u70b9$Splay$\u5230\u6839\uff0c\u7b2c$k+1$\u4e2a\u8282\u70b9$Splay$\u5230\u6839\u7684\u53f3\u513f\u5b50\uff0c\u6b64\u65f6\u6839\u8282\u70b9\u7684\u53f3\u513f\u5b50\u7684\u5de6\u513f\u5b50\u5c31\u662f\u7b2c$k$\u4e2a\u8282\u70b9\u3002\n\n\u8fd4\u56de\u5176\u6743\u503c\u5373\u53ef\u3002\n\n#### $Prev$\u64cd\u4f5c\n\n$--k$\u5373\u53ef\u3002\n\n#### $Next$\u64cd\u4f5c\n\n$++k$\u5373\u53ef\u3002\n\n### \u5173\u4e8e\u6b64\u9898\u7684\u4e00\u4e9b\u5751\u70b9\n\n1. \u8fd9\u53ef\u80fd\u662f\u6211\u7684$Splay$\u7684\u95ee\u9898\uff0c\u4e00\u5f00\u59cb\u5728\u5e8f\u5217\u7684\u524d\u540e\u9700\u5404\u52a0\u4e24\u4e2a\u800c\u4e0d\u662f\u4e00\u4e2a\u5b57\u7b26\u4f5c\u4e3a\u8f85\u52a9\u5b57\u7b26\u3002\n2. \u6570\u636e\u6709\u6bd2\u3002\u867d\u7136\u9898\u76ee\u4e2d\u7684\u5408\u6cd5\u5b57\u7b26\u96c6\u4e0d\u5305\u62ec\u56de\u8f66\u7b26\uff0c\u4f46\u6570\u636e\u91cc\u7684\u786e\u6709\uff0c\u6240\u4ee5\u8bfb\u5165\u5b57\u7b26\u4e32\u65f6\u5e94\u8bfb\u5165$n$\u4e2a\u5b57\u7b26\u3002\n3. \u4f9d\u7136\u662f\u56de\u8f66\u7684\u95ee\u9898\uff0c\u5982\u679c\u67e5\u8be2\u65f6\u5f97\u5230\u7684\u7b54\u6848\u662f\u56de\u8f66\u7b26\uff0c\u5219\u4e0d\u80fd\u518d\u6362\u884c\u3002\n4. \u4e0d\u8981\u6f0f\u6389\u4efb\u4f55\u4e00\u4e2a$PushUp$\u548c$PushDown$\uff0c\u7262\u8bb0\uff1a\u591a\u5199\u4e0d\u4f1a$WA$\uff01\u8fd9\u70b9\u5e38\u6570\u4e0d\u4f1a$TLE$\uff01\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define Tp template<typename Ty>\n#define Ts template<typename Ty,typename... Ar>\n#define Reg register\n#define RI Reg int\n#define Con const\n#define CI Con int&\n#define I inline\n#define W while\n#define swap(x,y) (x^=y^=x^=y)\n#define hl_AK_NOI true\nusing namespace std;\nclass FastIO\n{\n    private:\n        #define FS 100000\n        #define tc() (A==B&&(B=(A=FI)+fread(FI,1,FS,stdin),A==B)?EOF:*A++)\n        #define tn(x) (x<<3)+(x<<1)\n        #define D isdigit(c=tc())\n        char c,*A,*B,FI[FS];\n    public:\n        I FastIO() {A=B=FI;}\n        Tp I void read(Ty& x) {x=0;W(!D);W(x=tn(x)+(c&15),D);}\n        Ts I void read(Ty& x,Ar&... y) {read(x),read(y...);}\n        I void reads(string& x) {x=\"\";W(isspace(c=tc()));W(x+=c,!isspace(c=tc())&&~c);}\n        I void readc(char& x) {x=tc();}\n}F;\nclass Splay//Splay\n{\n    private:\n        #define PU(x) (O[x].Sz=O[O[x].S[0]].Sz+O[O[x].S[1]].Sz+1)//\u4e0a\u4f20\u5b50\u6811\u4fe1\u606f\uff0c\u66f4\u65b0Size\n        #define Re(x) (swap(O[x].S[0],O[x].S[1]),O[x].R^=1)//\u7ffb\u8f6c\u4e00\u4e2a\u5b50\u6811\n        #define PD(x) (O[x].R&&(Re(O[x].S[0]),Re(O[x].S[1]),O[x].R=0))//\u4e0b\u4f20\u7ffb\u8f6c\u6807\u8bb0\n        #define Wh(x) (O[O[x].F].S[1]==x)//\u67e5\u8be2\u662f\u7236\u8282\u70b9\u7684\u54ea\u4e00\u4e2a\u513f\u5b50\n        #define Co(x,y,d) (O[O[x].F=y].S[d]=x)//\u8fde\u63a5\u4e24\u4e2a\u8282\u70b9\n        #define Sp(x,y) (S(GV((x)-1),rt),S(GV((y)+1),O[rt].S[1]),O[O[rt].S[1]].S[0])//\u62a0\u51fa\u4e00\u4e2a\u533a\u95f4\n        static const int SZ=2097152;int rt,tot;struct node {char V;int Sz,R,F,S[2];}O[SZ+5];\n        I void Ro(CI x,int& k)//Rotate\u64cd\u4f5c\n        {\n            RI f=O[x].F,p=O[f].F,d=Wh(x);PD(p),PD(f),PD(x),(f^k?O[p].S[Wh(f)]:k)=x,\n            O[x].F=p,Co(O[x].S[d^1],f,d),Co(f,x,d^1),PU(f),PU(x);\n        }\n        I void S(CI x,int& k) {RI f;W(x^k) f=O[x].F,f^k&&(Ro(Wh(x)^Wh(f)?x:f,k),0),Ro(x,k);PU(x);}//Splay\u64cd\u4f5c\n        I int GV(RI rk)//\u6c42\u51fa\u6392\u540d\u4e3ak\u7684\u8282\u70b9\u7684\u7f16\u53f7\n        {\n            RI x=rt;W(hl_AK_NOI)//hl_AK_NOI=true\n            {\n                if(PD(x),O[O[x].S[0]].Sz>=rk) x=O[x].S[0];//\u5982\u679c\u5de6\u513f\u5b50Size\u5927\u4e8e\u7b49\u4e8erk\uff0c\u8bf4\u660e\u7b54\u6848\u5728\u5de6\u5b50\u6811\uff08\u8bb0\u5f97\u5148PushDown\uff09\n                else if(rk-=O[O[x].S[0]].Sz+1) x=O[x].S[1];//\u5982\u679crk\u51cf\u53bb\u5de6\u513f\u5b50\u4e0e\u5f53\u524d\u8282\u70b9\u7684Size\u548c\u540e\u5927\u4e8e0\uff0c\u5c31\u8bf4\u660e\u7b54\u6848\u5728\u53f3\u5b50\u6811\n                else return x;//\u5426\u5219\uff0c\u8bf4\u660e\u7b54\u6848\u5728\u5f53\u524d\u8282\u70b9\n            }\n        }\n    public:\n    \tI void Init() {rt=Build(0,3,\"\u20ac\u20ac\u20ac\u20ac\");}//\u521d\u59cb\u5316\uff08\u597d\u4e0d\u5bb9\u6613\u627e\u5230\u7684\u4e00\u4e2a\u65e2\u80fd\u663e\u793a\u53c8\u4e0d\u5728\u5408\u6cd5\u5b57\u7b26\u96c6\u5185\u7684\u5b57\u7b26\uff09\n        int Build(CI l,CI r,Con string& s)//\u5efa\u6811\n        {\n            RI x=++tot,t,mid=l+r>>1;O[x].V=s[mid],//\u4e8c\u5206\n            l^mid&&(t=Build(l,mid-1,s),Co(t,x,0)),r^mid&&(t=Build(mid+1,r,s),Co(t,x,1));//\u5904\u7406\u4e24\u4e2a\u513f\u5b50\n            return PU(x),x;//\u8fd4\u56de\u5f53\u524d\u8282\u70b9\u7f16\u53f7\n        }\n        I void Insert(CI x,CI p) {RI k=Sp(x+2,x+2);PD(k),Co(p,k,1),S(p,rt);}//\u63d2\u5165\n        I void Delete(CI x,CI y) {Sp(x+2,y+2)=0,PU(O[rt].S[1]),PU(rt);}//\u5220\u9664\n        I void Rever(CI x,CI y) {RI k=Sp(x+2,y+2);Re(k);}//\u7ffb\u8f6c\n        I char Query(CI x) {return O[Sp(x+2,x+2)].V;}//\u8be2\u95ee\n}S;\nint main()\n{\n    RI Qtot,i,x,k=0;Reg string op,s;Reg char c;S.Init(),F.read(Qtot);W(Qtot--)\n    {\n        F.reads(op);switch(op[0])\n        {\n            case 'M':F.read(x),k=x;break;//\u79fb\u52a8\u5149\u6807\n            case 'I'://\u63d2\u5165\n                for(F.read(x),s=\"\",i=0;i^x;++i) F.readc(c),s+=c;//\u6ce8\u610f\u5e94\u8bfb\u5165n\u4e2a\u5b57\u7b26\n                S.Insert(k,S.Build(0,x-1,s));\n            break;\n            case 'D':F.read(x),S.Delete(k+1,k+x);break;//\u5220\u9664\n            case 'R':F.read(x),S.Rever(k+1,k+x);break;//\u7ffb\u8f6c\n            case 'G':putchar(c=S.Query(k+1)),c^'\\n'&&putchar('\\n');break;//\u8be2\u95ee\uff0c\u6ce8\u610f\u7279\u5224\u56de\u8f66\n            case 'P':--k;break;case 'N':++k;break;//\u524d\u79fb\u548c\u540e\u79fb\n        }\n    }return 0;\n}\n```\n\n",
        "postTime": 1551944187,
        "uid": 28382,
        "name": "TheLostWeak",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4567 \u3010[AHOI2006]\u6587\u672c\u7f16\u8f91\u5668\u3011"
    },
    {
        "content": "$Splay$\u88f8\u9898\u3002\u3002\n\n\u548c$NOI$\u90a3\u9053\u6587\u672c\u7f16\u8f91\u5668\u5dee\u4e0d\u591a\uff0c\u5c31\u662f\u591a\u4e86\u4e2a\u7ffb\u8f6c\u3002\n\n\u5751\u70b9\uff1a\n\n1\u3001\u56de\u8f66\u7b97\u6587\u672c\u5185\u5bb9\uff0c\u5e76\u4e14\u53ef\u80fd\u4f5c\u4e3a\u7b54\u6848\u8f93\u51fa\uff0c\u6b64\u65f6\uff0c\u4e0d\u9700\u8981\u518d\u53e6\u5916\u8f93\u51fa\u4e00\u4e2a\u56de\u8f66\u3002\n\n2\u3001\u81f3\u4e8e\u524d\u9762\u7684\u9898\u89e3\u8bf4\u7684\u6570\u636e\u6709\u540d\u79f0\u4e0d\u5bf9\u7684\u64cd\u4f5c\uff0c\u5b9e\u6d4b\u5e76\u6ca1\u6709\uff0c\u653e\u5fc3\u8dd1\u5c31\u597d\u4e86\u3002\n\n\u8981\u6ce8\u610f\u7684\u5730\u65b9\n\n$NOI$\u90a3\u9053\u6587\u672c\u7f16\u8f91\u5668\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bb0\u5f55\u5149\u6807\u7684\u4e0b\u6807\u3002\u4f46\u672c\u9898\u6700\u597d\u522b\u90a3\u4e48\u505a\uff0c\u56e0\u4e3a\u7ffb\u8f6c\u64cd\u4f5c\u7684\u5b58\u5728\uff0c\u82e5\u76f4\u63a5\u5bf9\u4e0b\u6807$splay$\uff0c\u4f1a\u5bfc\u81f4\u6709\u4e9b\u61d2\u6807\u8bb0\u53d1\u751f\u9519\u8bef\u3002\u6240\u4ee5\u672c\u9898\u5e94\u8be5\u8bb0\u5f55\u5149\u6807\u5728\u5e73\u8861\u6811\u4e2d\u662f\u7b2c\u51e0\u5927\uff0c\u6bcf\u6b21\u901a\u8fc7\u627e\u7b2c$k$\u5927\u6765\u627e\u5230\u4ed6\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\ninline int read(){\n    int s = 0, w = 1;\n    char ch = getchar();\n    while(ch < '0' || ch > '9'){if(ch == '-')w = -1;ch = getchar();}\n    while(ch >= '0' && ch <= '9') s = s * 10 + ch - '0',ch = getchar();\n    return s * w;\n}\nconst int MAXINSERTLEN = 2100000;\nstruct SplayTree{\n    char val;\n    int ch[2], fa, size, lazy;\n}t[MAXINSERTLEN];\nchar str[MAXINSERTLEN], s[MAXINSERTLEN];\nint num, root, n, len;\nvoid pushup(int u){\n    t[u].size = t[t[u].ch[0]].size + t[t[u].ch[1]].size + 1;\n}\nvoid pushdown(int u){\n\tif(t[u].lazy){\n\t  t[t[u].ch[0]].lazy ^= 1;\n\t  t[t[u].ch[1]].lazy ^= 1;\n\t  swap(t[u].ch[0], t[u].ch[1]);\n\t  t[u].lazy = 0; \n    }\n}\nvoid rotate(int x){\n    int y = t[x].fa; int z = t[y].fa; int k = t[y].ch[1] == x;\n    t[z].ch[t[z].ch[1] == y] = x; t[x].fa = z;\n    t[y].ch[k] = t[x].ch[k ^ 1]; t[t[x].ch[k ^ 1]].fa = y;\n    t[x].ch[k ^ 1] = y; t[y].fa = x;\n    pushup(y); pushup(x);\n}\nvoid Splay(int x, int goal){\n    while(t[x].fa != goal){\n      int y = t[x].fa; int z = t[y].fa;\n      if(z != goal)\n        (t[z].ch[0] == y) ^ (t[y].ch[0] == x) ? rotate(x) : rotate(y);\n      rotate(x);\n    }\n    if(goal == 0) root = x;\n}\nint build(int l, int r){\n    int id = ++num;\n    int mid = (l + r) >> 1;\n    t[id].val = str[mid];\n    if(mid > l){\n      t[id].ch[0] = build(l, mid - 1);\n      t[t[id].ch[0]].fa = id;\n    }\n    if(mid < r){\n      t[id].ch[1] = build(mid + 1, r);\n      t[t[id].ch[1]].fa = id;\n    }\n    pushup(id);\n    return id;\n}\ninline int findKth(int k){\n    int u = root;\n    while(1){\n      pushdown(u);\n      if(t[t[u].ch[0]].size >= k) u = t[u].ch[0];\n      else if(t[t[u].ch[0]].size == k - 1) return u;\n      else k -= t[t[u].ch[0]].size + 1, u = t[u].ch[1];\n    }\n}\nchar opt;\nint cur;\nint main(){\n    n = read();\n    root = cur = ++num; t[num].val = 1;\n    t[++num].fa = cur; t[num].val = 1;\n    t[cur].ch[1] = num; t[num].size = 1; t[cur].size = 2;\n    for(int i = 1; i <= n; ++i){\n       scanf(\"%s\", s); opt = s[0];\n       if(opt == 'I'){\n         len = read();\n         for(int i = 1; i <= len; ++i)\n            str[i] = getchar();\n         Splay(findKth(cur), 0);\n         Splay(findKth(cur + 1), root);\n         t[t[root].ch[1]].ch[0] = (len = build(1, len));\n         t[len].fa = t[root].ch[1];\n         Splay(t[t[root].ch[1]].ch[0], 0);\n       }\n       else if(opt == 'G'){\n       \t int ans = findKth(cur + 1);\n       \t putchar(t[ans].val);\n         if(t[ans].val != '\\n') putchar('\\n');\n       }\n       else if(opt == 'M')\n         cur = read() + 1;\n       else if(opt == 'P')\n         --cur;\n       else if(opt == 'N')\n         ++cur;\n       else if(opt == 'D'){\n         len = read();\n         Splay(findKth(cur), 0);\n         Splay(findKth(t[t[root].ch[0]].size + 2 + len), root);\n         t[t[root].ch[1]].ch[0] = 0;\n       }\n       else if(opt == 'R'){\n         len = read();\n         Splay(findKth(cur), 0);\n         Splay(findKth(t[t[root].ch[0]].size + 2 + len), root);\n         t[t[t[root].ch[1]].ch[0]].lazy ^= 1;\n       }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1547387216,
        "uid": 61834,
        "name": "Huami360",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4567 \u3010[AHOI2006]\u6587\u672c\u7f16\u8f91\u5668\u3011"
    },
    {
        "content": "[\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P4567)\n\n\u6bd2\u7624\u9898\u3002\n\n\u4e00\u770b\u9898\u9762:**\u8fd9\u4e0d\u662fSplay/Treap\u4e71\u641e\u9898\u5417?**\n\n\u4e8e\u662f\u4e4e\u4e71\u641e28,WA\u4e24\u9875\u591a\u2026\u2026\n\n\u603b\u7ed3\u4e86\u4e00\u4e0b,\u672c\u9898\u7684\u5751\u4e3b\u8981\u5728\u8f93\u5165,\u4e5f\u5c31\u662f**\u6570\u636e\u6709\u4e9b\u4e0d\u4e25\u8c28**\u3002\n\n\u9898\u76ee\u4e2d\u5173\u4e8e\u6587\u672c\u7684\u5b9a\u4e49\n\n```\n\u6587\u672c\uff1a\u75310\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u6784\u6210\u7684\u5e8f\u5217\u3002\u8fd9\u4e9b\u5b57\u7b26\u7684ASCII\u7801\u5728\u95ed\u533a\u95f4[32, 126]\u5185\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e9b\u5b57\u7b26\u5747\u4e3a\u53ef\u89c1\u5b57\u7b26\u6216\u7a7a\u683c\u3002\n```\n\n\u4e8b\u5b9e\u8bc1\u660e,**\u56de\u8f66\u4e5f\u7b97\u6587\u672c\u5185\u5bb9**\u3002\n\n\u6309\u7167\u8fd9\u6837\u5b9a\u4e49\u7684\u8bdd,\u6837\u4f8b\u662f\u6ca1\u95ee\u9898\u7684\u3002\n\n\u8f93\u51fa\u56de\u8f66\u7684\u65f6\u5019\u4e0d\u7528\u8f93\u51fa\u4e24\u4e2a\u56de\u8f66,\u53ea\u8981\u4e00\u4e2a\u5373\u53ef(\u89c1\u4ee3\u7801)\u3002\n\n\u5269\u4e0b\u7684\u4e00\u4e2a\u5751:\u6570\u636e\u4e2d\u6709**\u540d\u79f0\u4e0d\u5bf9\u7684\u64cd\u4f5c**,\u5e94\u5f53\u5ffd\u7565\u3002\n\n\u5176\u4f59\u5c31\u662f\u533a\u95f4\u6811\u57fa\u672c\u64cd\u4f5c,\u4ec0\u4e48\u63d2\u5165\u5220\u9664\u7ffb\u8f6c\u4e4b\u7c7b\u3002\n\n\u533a\u95f4\u6811\u6a21\u677f\u89c1:[P3391 \u3010\u6a21\u677f\u3011\u6587\u827a\u5e73\u8861\u6811\uff08Splay\uff09](https://www.luogu.org/problemnew/show/P3391)\n\n**Code:**\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#define MaxNum 2000010\nusing namespace std;\nint m,len;\nchar ord[10];\nstruct Node\n{int l,r,c,g;char x;bool tag;};\nstruct Fhq_Treap\n{\n  int tn,root,p;\n  bool liv;\n  Node a[MaxNum];\n  inline void ladd(int num){\n    if (a[num].tag){\n      a[a[num].r].tag^=1;\n      a[a[num].l].tag^=1;\n      swap(a[num].l,a[num].r);\n      a[num].tag=0;\n    }\n  }\n  inline void up(int num)\n  {a[num].c=a[a[num].l].c+a[a[num].r].c+1;}\n  inline void create(int x)\n  {\n    a[++tn].x=x;\n    a[tn].g=(rand()<<4)^rand();\n    a[tn].c=1;\n  }\n  int marge(int x,int y){\n    if (!x||!y)return x+y;\n    if (a[x].g<a[y].g){\n      ladd(x);a[x].r=marge(a[x].r,y);\n      up(x);return x;\n    }else{\n      ladd(y);a[y].l=marge(x,a[y].l);\n      up(y);return y;\n    }\n  }\n  void split(int num,int to,int &x,int &y){\n    if (!num)x=y=0;\n    else {\n      ladd(num);\n      int mid=a[a[num].l].c+1;\n      if (to>mid)\n       {x=num;split(a[x].r,to-mid,a[x].r,y);}\n      else {y=num;split(a[y].l,to,x,a[y].l);}\n      up(num);\n    }\n  }\n  void push(int len){\n    getchar();\n    int l,mid=0,r;\n    for (int j=0;j<len;j++){\n      create(getchar());\n\t  mid=marge(mid,tn);\n    }split(root,p,l,r);\n  \troot=marge(marge(l,mid),r);\n  }\n  void change(int len){\n  \tint l,mid,r;\n  \tsplit(root,p+len,l,r);\n  \tsplit(l,p,l,mid);\n  \ta[mid].tag^=1;\n  \troot=marge(marge(l,mid),r);\n  }\n  void del(int len){\n  \tint l,mid,r;\n  \tsplit(root,p+len,l,r);\n  \tsplit(l,p,l,mid);\n  \troot=marge(l,r);\n  }\n  void get(){\n  \tint x,mid,y;\n    split(root,p+1,x,y);\n  \tsplit(x,p,x,mid);\n  \tif (a[mid].x!='\\n')\n\t  putchar(a[mid].x);\n\tputchar('\\n');\n  \troot=marge(marge(x,mid),y);\n  }\n}t;\nint main()\n{\n  scanf(\"%d\",&m);\n  t.p=1;\n  for (int i=1;i<=m;i++){\n    scanf(\"%s\",ord);\n    if (ord[0]=='I'){\n      scanf(\"%d\",&len);\n      t.push(len);\n    }else if (ord[0]=='M'){\n      scanf(\"%d\",&t.p);t.p++;\n    }else if (ord[0]=='N')t.p++;\n    else if (ord[0]=='P')t.p--;\n    else if (ord[0]=='D'){\n      scanf(\"%d\",&len);\n      t.del(len);\n    }else if (ord[0]=='G')t.get(); \n    else if (ord[0]=='R'){\n      scanf(\"%d\",&len);\n      t.change(len);\n    }\n  }return 0;\n}\n```",
        "postTime": 1544854054,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4567 \u3010[AHOI2006]\u6587\u672c\u7f16\u8f91\u5668\u3011"
    },
    {
        "content": "# \u6ce8\u610f\uff0c\u975e\u6b63\u89e3\n###### rope\u5927\u6cd5\u597d\n\n[\u5982\u679c\u4f60\u4e0d\u4f1arope](http://iwo.im/?q=C%2B%2B%20rope)\n\u4e4b\u540e\u6211\u4f1a\u5199\u4e00\u7bc7rope\u7684\u535a\u5ba2\u7684(~~\u5495\u5495\u5495~~)\n### Part 1\n\u6211\u4eec\u5148\u770b\u770b\u6709\u54ea\u4e9b\u64cd\u4f5c\u80fd\u76f4\u63a5(\u6216\u8005\u7a0d\u7ecf\u601d\u8003)\u89e3\u51b3\n- Move ${\\color{lightgreen}\\text{OK}}$\n- Insert ${\\color{lightgreen}\\text{OK}}$\n- Delete ${\\color{lightgreen}\\text{OK}}$\n- Rotate ${\\color{red}\\text{NO}}$\n- Get ${\\color{lightgreen}\\text{OK}}$\n- Prev ${\\color{lightgreen}\\text{OK}}$\n- Next ${\\color{lightgreen}\\text{OK}}$\n\n\u8fd9\u4e48\u770b\u6765\u597d\u50cf\u53ea\u6709$rotate$\u6709\u4e00\u70b9\u95ee\u9898(~~\u5c0f\u58f0bb~~)\n### Part 2\n\u5173\u4e8e\u5149\u6807\uff1a\n\n\u6211\u4eec\u6a21\u62df\u4e00\u4e2acnt\u4ee3\u8868\u5149\u6807\uff0c\u7528\u4ee5\u6267\u884cMove\u3001Prev\u3001Next\u53caGet\u6307\u4ee4\uff0c\u5982\u4e0b\n```cpp\nreader>>k//\u6162\u8bfbqwq\nif (inst[0] == 'M')cnt = k;\n```\n```cpp\nelse if (inst[0] == 'P'/* == \"Prev\"*/)cnt --;\nelse if (inst[0] == 'N'/* == \"Next\"*/)cnt ++;\n```\n### Part 3\n\u5173\u4e8e\u63d2\u5165\u5220\u9664\uff1a\n```cpp\nreader>>k;\n......OTHER CODES.....\nelse if (inst[0] == 'I'){\n\tfor (register int i = 0;i < k;i ++){\n\t\tgoal[i] = getchar();\n\t}\n\tgoal[k] = '\\0';\n\ta.insert(cnt, goal);//a\u5c31\u662f\u6211\u4eec\u7684rope\n}\n```\n\n\u4f46\u662f\u4e3a\u4e86\u4fbf\u4e8erotate\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u518d\u6765\u4e00\u4e2a\u5012\u7740\u8bb0\u5f55\u7684rope b\uff0c\u56e0\u6b64\u63d2\u5165\u8bed\u53e5\u5e94\u8be5\u8fd9\u6837\uff1a\n```cpp\nreader>>k;\n......OTHER CODES.....\nelse if (inst[0] == 'I'){\n\tregister int length = a.size();\n\tfor (register int i = 0;i < k;i ++){\n\t\tbac[k - i - 1] = goal[i] = getchar();//bac\u662f\u5f53\u524dS\u53cd\u8fc7\u6765\u7684char\u6570\u7ec4\n\t}\n\tgoal[k] = bac[k] = '\\0';\n\ta.insert(cnt, goal);\n\tb.insert(length - cnt, bac);\n}\n```\n\u540c\u7406\uff0c\u5220\u9664\u64cd\u4f5c\u5982\u4e0b\n```cpp\nelse if (inst[0] == 'D'){\n\tregister int length = a.size();\n\ta.erase(cnt, k);\n\tb.erase(length - cnt - k, k);\n}\n```\n### Part 4\n\u73b0\u5728\u5269\u4e0b\u7684\u5c31\u662f\u6076\u5fc3\u7684$rotate$\u4e86\n\n\u7531\u4e8erope\u91cc\u9762\u7684\u94fe\u5f0f\u64cd\u4f5c\u4f7f\u5f97\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u5220\u9664\u518d\u63d2\u5165\uff0c\u800cSTL\u81ea\u5e26\u7684\u51fd\u6570\u5e38\u6570\u53c8\u592a\u5927\u3002\u6240\u4ee5\u6211\u4eec\u8981\u6362\u6761\u8def\u5b50\u3002\n\n\u6700\u5f00\u59cb\u6211\u7684\u60f3\u6cd5\u5176\u5b9e\u662f\u628arotate\u6362\u6210Get\u3001Next\u3001Delete\u8fd9\u4e09\u4e2a\u6307\u4ee4\u7684\u7ec4\u5408\uff0c\u6bcf\u4e00\u6b21\u4eceb\u4e2dGet\u4e00\u4e2a\u5230\u4e34\u65f6\u7684char\u6570\u7ec4\u4e2d\u7136\u540e\u518dNext\uff0c\u91cd\u590dK\u6b21\uff0c\u6700\u540e\u518d\u63d2\u56de\u53bb\u3002\n###### \u611f\u89c9\u8fd9\u6837\u5e94\u8be5\u80fd\u6162\u5230\u98de\u8d77\n\u6240\u4ee5\u60f3\u4e86\u60f3\u89c9\u5f97\u5e94\u8be5\u989d\u5916\u6765\u4e00\u4e2a\u4e34\u65f6\u7684rope tmp\uff0c\u7528substr\u65b9\u6cd5\u4e00\u7cfb\u5217\u778e\u64cd\u4f5c\uff0c\u8be6\u89c1\u4ee3\u7801\uff0c\u611f\u89c9\u5e94\u8be5\u633a\u597d\u7406\u89e3\uff1a\n```cpp\nelse if (inst[0] == 'R'){\n\tregister int length = a.size();\n\ttmp = a.substr(cnt, k);//\u53d6\u51fa\u6765\n\ta = a.substr(0, cnt) + b.substr(length - cnt - k, k) + a.substr(cnt + k, length - cnt - k);//\u4e24\u7aef\u4e0d\u53d8\uff0c\u4e2d\u95f4\u628ab\u5bf9\u5e94\u4f4d\u7f6e\u79fb\u8fc7\u6765\n\tb = b.substr(0, length - cnt - k) + tmp + b.substr(length - cnt, cnt);//\u4e00\u6837qwq\n}\n```\n\u55ef o\\(\\*\uffe3\u25bd\uffe3\\*\\)o \u5c31\u9171\\~\n### Part 5\n\u5feb\u4e50\u7684\u653e\u7801\u65f6\u95f4\uff1a\n```cpp\n#include <cstdio>\n#include <ext/rope>\n\nconst int N = 1<<22 + 7;\nint n, k, cnt;\nchar now, inst[N], goal[N], bac[N];\nstruct readers{\n\tchar now;\n\tbool state;\n\treaders operator >>(int &goal){\n\t\tgoal = 0;\n\t\tstate = true;\n\t\twhile (now = getchar(), now < 48 || now > 57)state = now^45;\n\t\twhile (48 <= now && now <= 57){\n\t\t\tgoal = (goal<<1) + (goal<<3) + (now^48);\n\t\t\tnow = getchar();\n\t\t}\n\t\tif (!state)goal = -goal;\n\t\treturn *this;\n\t}\n}reader;\n__gnu_cxx::rope<char> a, b, tmp;\n\nint main(){\n\treader>>n;\n\twhile (n --){\n\t\t/*bef:*/scanf(\"%s\", inst);\n//\t\tif (inst[0] == 10)goto bef;\n//\t\tprintf(\"inst:\"), puts(inst);\n\t\tif (inst[0] == 'I'/*\"Insert\"*/ || inst[0] == 'M'/* == \"Move\"*/ || inst[0] == 'D'/* == \"Delete\"*/ || inst[0] == 'R'/* == \"Rotate\"*/){\n\t\t\treader>>k;\n\t\t\tif (inst[0] == 'M')cnt = k;\n\t\t\telse if (inst[0] == 'I'){\n\t\t\t\tregister int length = a.size();\n\t\t\t\tfor (register int i = 0;i < k;i ++){\n\t\t\t\t\tbac[k - i - 1] = goal[i] = getchar();\n\t\t\t\t}\n\t\t\t\tgoal[k] = bac[k] = '\\0';\n\t\t\t\ta.insert(cnt, goal);\n\t\t\t\tb.insert(length - cnt, bac);\n\t\t\t}else if (inst[0] == 'D'){\n\t\t\t\tregister int length = a.size();\n\t\t\t\ta.erase(cnt, k);\n\t\t\t\tb.erase(length - cnt - k, k);\n\t\t\t}else if (inst[0] == 'R'){\n\t\t\t\tregister int length = a.size();\n\t\t\t\ttmp = a.substr(cnt, k);\n\t\t\t\ta = a.substr(0, cnt) + b.substr(length - cnt - k, k) + a.substr(cnt + k, length - cnt - k);\n\t\t\t\tb = b.substr(0, length - cnt - k) + tmp + b.substr(length - cnt, cnt);\n\t\t\t}\n\t\t}else if (inst[0] == 'P'/* == \"Prev\"*/)cnt --;\n\t\telse if (inst[0] == 'N'/* == \"Next\"*/)cnt ++;\n\t\telse if (inst[0] == 'G'/* == \"Get\"*/){\n\t\t\tputchar(a[cnt]);\n\t\t\tif (a[cnt] != 10)putchar(10);\n\t\t}\n\t}\t\n\treturn 0;\n}\n```\n\u672c\u6765\u662f\u60f3\u6316\u4e2a\u5751\u7684\uff0c\u60f3\u8ba9\u4f60\u4eec\u4f53\u9a8c\u4e00\u4e0b\u521a\u5f00\u59cb\u6211\u7528string\u7684\u75dbqwq\n\n### Part 6\n\u8fd8\u6709\u4e00\u70b9\uff0c\u53ef\u80fd\u6709\u4eba\u4e0d\u662f\u5f88\u6e05\u695aGet\u64cd\u4f5c\u90a3\u91cc\uff0c\u56e0\u4e3a\n\n${\\color{red}\\text{\u6362\u884c\u7b26\u4e5f\u662f\u53ef\u89c1\u5b57\u7b26\u554aqwq}}$(\u8be6\u60c5\u8bf7\u89c1**\u8f93\u5165\u683c\u5f0f**)\n\n\u4f46\u662f\u8f93\u51fa\u7684\u65f6\u5019\u53ea\u8f93\u51fa\u4e00\u884c\uff0c\u6240\u4ee5\u5982\u679c\u5df2\u7ecf\u8f93\u51fa\u4e86\u6362\u884c\u7684\u8bdd\u5c31\u4e0d\u80fd\u518d\u6765\u6362\u884c\u4e86qwq",
        "postTime": 1573013039,
        "uid": 125531,
        "name": "HansLimon",
        "ccfLevel": 0,
        "title": "TJ 2 P4567"
    },
    {
        "content": "## \u9898\u89e3 P4567 \u3010[AHOI2006]\u6587\u672c\u7f16\u8f91\u5668\u3011\n\n### \u3010\u9898\u610f\u3011\n\u5bf9\u4e8e\u4e00\u4e2a\u521d\u59cb\u7684\u7a7a\u4e32\uff0c\u6709\u5982\u4e0b\u51e0\u79cd\u64cd\u4f5c\uff1a\n1. \u63d2\u5165\uff1b\n2. \u5220\u9664\uff1b\n3. \u7ffb\u8f6c\uff1b\n4. \u79fb\u52a8\u5149\u6807\uff1b\n5. \u67e5\u8be2\u3002\n\n\u6211\u4eec\u8981\u5b9e\u73b0\u8fd9\u4e9b\u64cd\u4f5c\u3002\n\n### \u3010\u5206\u6790\u3011\n\u770b\u5230\u6709\u63d2\u5165\u3001\u5220\u9664\u3001\u53cd\u8f6c\uff0c\u5c31\u80fd\u9a6c\u4e0a\u60f3\u5230\u7528\u5e73\u8861\u6811\uff08\u5728\u6b64\u4f7f\u7528**fhq_treap**\uff09\u3002\u6211\u4eec\u6765\u4e00\u4e2a\u4e00\u4e2a\u7684\u89e3\u51b3\u8fd9\u4e9b\u64cd\u4f5c\u3002\n\n**\u8bbe\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u4e3a$p$\uff0c\u64cd\u4f5c\u957f\u5ea6\u4e3a$m$**\u3002\n\n**1. \u63d2\u5165**\n\n\u8981\u5728$p$\u5904\u63d2\u5165\u4e00\u4e2a\u957f\u5ea6\u4e3a$m$\u5b57\u7b26\u4e32$s$\u3002\n\n\u9996\u5148\u6211\u4eec\u5148\u6309\u7167$p$\u4e3a\u5927\u5c0f\uff0c\u5206\u88c2\u6210\u4e24\u68f5\u5b50\u6811$x, y$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4f9d\u6b21\u5408\u5e76$x, s$\u548c$y$\u5373\u53ef\u3002\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u4e00\u4e2a\u5b57\u7b26\u4e00\u4e2a\u5b57\u7b26\u7684\u63d2\u5165\uff08\u4e0d\u7136\u4f1aTLE\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u7528[\u7b1b\u5361\u5c14\u6811](https://blog.csdn.net/code92007/article/details/94591571)\u5148\u628a$s$\u5efa\u6210\u4e00\u4e2atreap\u3002\n```cpp\nint build(int m)\n{\n\tchar ch;\n\twhile(m)\n\t{\n\t\tif((ch=getchar())=='\\n' || ch=='\\r')\n\t\t\tcontinue; //\u5ffd\u7565\u6362\u884c\u7b26\n\t\tm--;\n\t\tint cnt=newnode(ch),lst=0;\n\t\twhile(top && t[sk[top]].key>=t[cnt].key) //\u5355\u8c03\u6808\u7ef4\u62a4\n\t\t{\n\t\t\tupdate(sk[top]);\n\t\t\tlst = sk[top--];\n\t\t}\n\t\tif(top)\n\t\t\tt[sk[top]].r = cnt;\n\t\tt[cnt].l = lst;\n\t\tsk[++top] = cnt;\n\t}\n\twhile(top)\n\t\tupdate(sk[top--]);\n\treturn sk[1]; //\u6811\u6839\n}\n\nvoid insert(int p,int m)\n{\n\tint x,y;\n\tsplit(root,p,x,y); //\u6309p\u7684\u5927\u5c0f\u5206\u88c2\n\troot = merge(merge(x,build(m)),y); //\u5408\u5e76\n}\n```\n\n**2. \u5220\u9664**\n\n\u666e\u901a\u5e73\u8861\u6811\u7684\u5220\u9664\u65b9\u6cd5\u5373\u53ef\u3002\n\n```cpp\nvoid remove(int p,int m)\n{\n\tint x,y,z;\n\tsplit(root,p,x,y); \n\tsplit(y,m,y,z); //y\u5c31\u662f\u8981\u5220\u9664\u7684\u533a\u95f4(\u5b50\u6811)\n\troot = merge(x,z);\n}\n```\n\n**3. \u7ffb\u8f6c**\n\n\u53ef\u4ee5\u53c2\u8003[\u6587\u827a\u5e73\u8861\u6811](https://www.luogu.com.cn/problem/P3391)\u3002\n\n\u6211\u4eec\u53ea\u9700\u5bf9\u9700\u8981\u64cd\u4f5c\u7684\u533a\u95f4\uff08\u5b50\u6811\uff09\u7684\u6811\u6839\u6253\u4e0a\u61d2\u6807\u8bb0\uff08\u7c7b\u4f3c\u4e8e\u7ebf\u6bb5\u6811\uff09\u3002\u6ce8\u610f\u61d2\u6807\u8bb0\u8981\u4e0b\u4f20\u3002\n\n```cpp\nvoid pushdown(int now)\n{\n\tif(t[now].laz)\n\t{\n\t\tswap(t[now].l,t[now].r); //\u7ffb\u8f6c, \u5373\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\n\t\tt[t[now].l].laz ^= 1;\n\t\tt[t[now].r].laz ^= 1;\n\t}\n\tt[now].laz = 0;\n}\n\nvoid reverse(int p,int m)\n{\n\tint x,y,z;\n\tsplit(root,p,x,y);\n\tsplit(y,m,y,z);\n\tt[y].laz ^= 1; //y\u5c31\u662f\u8981\u7ffb\u8f6c\u7684\u533a\u95f4(\u5b50\u6811)\n\troot = merge(merge(x,y),z);\n}\n```\n\n**4. \u79fb\u52a8\u5149\u6807**\n\n\u53ea\u9700\u5bf9$p$\u8fdb\u884c\u4fee\u6539\u5373\u53ef\u3002\n\n**5. \u67e5\u8be2**\n\n\u7c7b\u4f3c\u4e8e\u53cd\u8f6c\uff0c\u5206\u88c2\u51fa\u67e5\u8be2\u533a\u95f4\uff08\u5b50\u6811\uff09$y$\uff0c\u8f93\u51fa\u503c\u5373\u53ef\u3002\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\u3002\n```cpp\n/*\nluogu P4567\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\nint q,l;\nint cnt,root;\nint top,sk[2100000];\nstruct fhqtreap{\n\tint l,r;\n\tint siz,laz;\n\tint key;\n\tchar v;\n}t[2100000];\n\nint newnode(char v)\n{\n\tt[++cnt].v = v;\n\tt[cnt].siz = 1;\n\tt[cnt].key = rand();\n\treturn cnt;\n}\n\nvoid update(int now)\n{\n\tt[now].siz = t[t[now].l].siz+t[t[now].r].siz+1;\n}\n\nvoid pushdown(int now)\n{\n\tif(t[now].laz)\n\t{\n\t\tswap(t[now].l,t[now].r);\n\t\tt[t[now].l].laz ^= 1;\n\t\tt[t[now].r].laz ^= 1;\n\t}\n\tt[now].laz = 0;\n}\n\nvoid split(int now,int siz,int &x,int &y)\n{\n\tif(!now)\n\t{\n\t\tx = y = 0;\n\t\treturn;\n\t}\n\tpushdown(now);\n\tif(t[t[now].l].siz+1<=siz)\n\t{\n\t\tx = now;\n\t\tsplit(t[now].r,siz-t[t[now].l].siz-1,t[now].r,y);\n\t}\n\telse\n\t{\n\t\ty = now;\n\t\tsplit(t[now].l,siz,x,t[now].l);\n\t}\n\tupdate(now);\n}\n\nint merge(int x,int y)\n{\n\tif(!x || !y)\n\t\treturn x+y;\n\tif(t[x].key>=t[y].key)\n\t{\n\t\tpushdown(x);\n\t\tt[x].r = merge(t[x].r,y);\n\t\tupdate(x);\n\t\treturn x;\n\t}\n\telse\n\t{\n\t\tpushdown(y);\n\t\tt[y].l = merge(x,t[y].l);\n\t\tupdate(y);\n\t\treturn y;\n\t}\n}\n\nint build(int m)\n{\n\tchar ch;\n\twhile(m)\n\t{\n\t\tif((ch=getchar())=='\\n' || ch=='\\r')\n\t\t\tcontinue;\n\t\tm--;\n\t\tint cnt=newnode(ch),lst=0;\n\t\twhile(top && t[sk[top]].key>=t[cnt].key)\n\t\t{\n\t\t\tupdate(sk[top]);\n\t\t\tlst = sk[top--];\n\t\t}\n\t\tif(top)\n\t\t\tt[sk[top]].r = cnt;\n\t\tt[cnt].l = lst;\n\t\tsk[++top] = cnt;\n\t}\n\twhile(top)\n\t\tupdate(sk[top--]);\n\treturn sk[1];\n}\n\nvoid insert(int p,int m)\n{\n\tint x,y;\n\tsplit(root,p,x,y);\n\troot = merge(merge(x,build(m)),y);\n}\n\nvoid remove(int p,int m)\n{\n\tint x,y,z;\n\tsplit(root,p,x,y);\n\tsplit(y,m,y,z);\n\troot = merge(x,z);\n}\n\nvoid reverse(int p,int m)\n{\n\tint x,y,z;\n\tsplit(root,p,x,y);\n\tsplit(y,m,y,z);\n\tt[y].laz ^= 1;\n\troot = merge(merge(x,y),z);\n}\n\nvoid get(int p,int m)\n{\n\tint x,y,z;\n\tsplit(root,p,x,y);\n\tsplit(y,m,y,z);\n\tcout<<t[y].v;\n\tif(t[y].v!='\\n' && t[y].v!='\\r')\n\t\tcout<<endl;\n\troot = merge(merge(x,y),z);\n}\n\nint main()\n{\n\tsrand(time(NULL));\n\tcin>>q;\n\twhile(q--)\n\t{\n\t\tstring oper;\n\t\tcin>>oper;\n\t\tif(oper==\"Insert\")\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tinsert(l,x);\n\t\t}\n\t\telse if(oper==\"Delete\")\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tremove(l,x);\n\t\t}\n\t\telse if(oper==\"Move\")\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tl = x;\n\t\t}\n\t\telse if(oper==\"Prev\")\n\t\t\tl--;\n\t\telse if(oper==\"Next\")\n\t\t\tl++;\n\t\telse if(oper==\"Rotate\")\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\treverse(l,x);\n\t\t}\n\t\telse if(oper==\"Get\")\n\t\t\tget(l,1);\n\t}\n\t\n\treturn 0;\n}\n```\n\n\u795d\u5927\u5bb6AC\u6109\u5feb\uff01",
        "postTime": 1581058618,
        "uid": 123298,
        "name": "kouylty",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4567 \u3010[AHOI2006]\u6587\u672c\u7f16\u8f91\u5668\u3011"
    },
    {
        "content": "emmmmmmmmmm\u2026\u2026\u4f3c\u4e4e\u6ca1\u4eba\u5199\u9898\u89e3\u2026\u2026\n\n\u90a3\u6211\u5c31\u6765\u8865\u4e00\u7bc7\u597d\u4e86\u3002\n\n\u5176\u5b9e\u5c31\u662f\u4e2a Splay \u677f\u5b50\u9898\uff0c\u672c\u8eab\u6ca1\u4ec0\u4e48\u7279\u522b\u96be\u7684\u5730\u65b9\uff0c\u57fa\u672c\u7c98\u4e0a\u677f\u5b50\u5c31\u5dee\u4e0d\u591a\u4e86\u3002\n\n\u53e6\u5916\u6837\u4f8b\u91cc\u9762 `Insert 7` \u4e0b\u9762\u90a3\u4e2a `editor`\uff0c\u524d\u9762\u5176\u5b9e\u6709\u4e2a\u7a7a\u683c\uff0c\u4e0d\u7136\u5c31\u53ea\u6709\u516d\u4e2a\u5b57\u7b26\u4e86\u2026\u2026\n\n\u5269\u4e0b\u7684\u76f4\u63a5\u770b\u4ee3\u7801\u5427\u3002\n\n```cpp\n/* \u5047\u88c5\u8fd9\u91cc\u6709\u5934\u6587\u4ef6 */\n\nchar str[MAXN]; // \u7528\u6765\u653e\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u7684\u6570\u7ec4\nint pos = 1;    // \u7528\u6765\u8bb0\u5f55\u5149\u6807\u4f4d\u7f6e\n\nstruct Node {\n    Node *ch[2];\n    int s, flip;\n    char v;\n\n    int cmp(int k) const {\n        int d = k - ch[0]->s;\n        if (d == 1) return -1;\n        return d <= 0 ? 0 : 1;\n    }\n    void maintain() {\n        s = ch[0]->s + ch[1]->s + 1;\n    }\n    void pushdown() {\n        if (flip) {\n            flip = 0;\n            swap(ch[0], ch[1]);\n            ch[0]->flip = !ch[0]->flip;\n            ch[1]->flip = !ch[1]->flip;\n        }\n    }\n};\n\nNode *null = new Node();\nNode *root;\n\n/////////////////// \u4ee5\u4e0b\u4e3a Splay \u5e38\u89c4\u64cd\u4f5c ///////////////////\n\nvoid rotate(Node* &o, int d) {\n    Node *k = o->ch[d^1];\n    o->ch[d^1] = k->ch[d];\n    k->ch[d] = o;\n    o->maintain();\n    k->maintain();\n    o = k;\n}\n\nvoid splay(Node* &o, int k) {\n    o->pushdown();\n    int d = o->cmp(k);\n    if (d == 1) {\n        k -= o->ch[0]->s + 1;\n    }\n    if (d != -1) {\n        Node *p = o->ch[d];\n        p->pushdown();\n        int d2 = p->cmp(k);\n        int k2 = (d2 == 0 ? k : k - p->ch[0]->s - 1);\n        if (d2 != -1) {\n            splay(p->ch[d2], k2);\n            if (d == d2) {\n                rotate(o, d^1);\n            } else {\n                rotate(o->ch[d], d);\n            }\n        }\n        rotate(o, d^1);\n    }\n}\n\nNode* merge(Node *left, Node *right) {\n    splay(left, left->s);\n    left->ch[1] = right;\n    left->maintain();\n    return left;\n}\n\nvoid split(Node *o, int k, Node* &left, Node* &right) {\n    splay(o, k);\n    left = o;\n    right = o->ch[1];\n    o->ch[1] = null;\n    left->maintain();\n}\n\nNode* build(int l, int r) {\n    if (l >= r) return null;\n    int mid = (l + r) / 2;\n    Node *n = build(l, mid);\n    Node *o = new Node();\n    o->v = str[mid];\n    o->flip = o->s = 0;\n    o->ch[0] = n;\n    o->ch[1] = build(mid + 1, r);\n    o->maintain();\n    return o;\n}\n\n/////////////////// \u4ee5\u4e0a\u4e3a Splay \u5e38\u89c4\u64cd\u4f5c ///////////////////\n\n\nvoid insert(int n) { // \u63d2\u5165\n    Node *tmp = build(0, n);\n    Node *left, *right;\n    split(root, pos, left, right);\n    root = merge(merge(left, tmp), right);\n}\n\n\nvoid erase(int n) { // \u5220\u9664\n    Node *left, *mid, *right, *o;\n    split(root, pos, left, o);\n    split(o, n, mid, right);\n    root = merge(left, right);\n}\n\nvoid flip(int k) { // \u53cd\u8f6c\n    Node *left, *mid, *right, *o;\n    split(root, pos, left, o);\n    split(o, k, mid, right);\n    mid->flip ^= 1;\n    root = merge(merge(left, mid), right);\n}\n\nint main() {\n    char op[10];\n    int n, k;\n    root = build(0, 1);\n\n    scanf(\"%d\", &n);\n    while (n--) {\n        scanf(\"%s\", op);\n        switch (op[0]) {\n            case 'M': scanf(\"%d\", &k); pos = k + 1; break;\n            case 'D': scanf(\"%d\", &k); erase(k); break;\n            case 'R': scanf(\"%d\", &k); flip(k); break;\n            case 'P': pos--; break;\n            case 'N': pos++; break;\n            case 'G':\n                splay(root, pos + 1);\n                // \u8fd9\u91cc\u5982\u679c\u76f4\u63a5 printf(\"%c\\n\", root->v) \u7684\u8bdd\u5c31\u53ea\u6709 28 \u5206\u4e86\n                putchar(root->v);\n                if (root->v != '\\n') putchar('\\n');\n                break;\n            case 'I':\n                scanf(\"%d\", &k);\n                getchar();\n                for (int i = 0; i < k; i++) {\n                    str[i] = getchar();\n                }\n                str[k] = '\\0';\n                insert(k);\n                break;\n            default: break;\n        }\n    }\n\n    return 0;\n}\n```",
        "postTime": 1543488351,
        "uid": 79213,
        "name": "_liet",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4567 \u3010[AHOI2006]\u6587\u672c\u7f16\u8f91\u5668\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.com.cn/problem/P4567)\u770b\u9898\u76ee\u3002  \n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5e73\u8861\u6811\u7684\u6a21\u677f\u9898\u3002\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u975e\u65cb$Treap$\u3002\u7531\u4e8e\u8fd9\u9053\u9898\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u7684\u662f\u6587\u672c\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u8003\u8651\u6587\u5b57\u4e4b\u95f4\u7684\u76f8\u5bf9\u987a\u5e8f\uff0c\u56e0\u6b64\u4e4b\u540e\u6240\u6709\u5bf9\u4e8e\u6811\u7684$split$\u64cd\u4f5c\u6307\u7684\u90fd\u662f\u6309\u7167\u6392\u540d\u8fdb\u884c$split$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e0d\u96be\u60f3\u5230\u7528\u4e00\u4e2a\u53d8\u91cf$p$\u5b58\u4e0b\u6765\u5149\u6807\u524d\u9762\u4e00\u4e2a\u5b57\u7b26\u7684\u4e0b\u6807\uff08\u4e0b\u6807\u4ece$1$\u5f00\u59cb\uff09\u3002\u4e0b\u9762\u8003\u8651\u5bf9\u4e8e\u9898\u76ee\u4e2d\u5404\u4e2a\u64cd\u4f5c\u7684\u5904\u7406\uff1a  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$1.Move,Prev,Next$\uff1a\u5bf9\u4e8e\u8fd9\u4e09\u4e2a\u64cd\u4f5c\uff0c\u4fee\u6539$p$\u5373\u53ef\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$2.Delete$\uff1a\u8bbe\u6587\u672c\u4e3a$S$\u3002\u628a\u6811\u5206\u6210\u4e09\u4e2a\u90e8\u5206\uff0c\u4e00\u4e2a\u4e3a$x$\u6811\uff0c\u5bf9\u5e94$[1,p]$\u7684\u6587\u672c\uff1b\u4e00\u4e2a\u4e3a$y$\u6811\uff0c\u5bf9\u5e94\u8981\u5220\u9664\u7684$(p,p+n]$\u7684\u6587\u672c\uff1b\u8fd8\u6709\u4e00\u4e2a\u4e3a$z$\u6811\uff0c\u5bf9\u5e94$(p+n,|S|]$\u7684\u6587\u672c\u3002\u4e8e\u662f\u4e4e$y$\u6811\u5c31\u662f\u8981\u5220\u9664\u7684\u90e8\u5206\u3002\u6211\u4eec\u76f4\u63a5\u5c06$x$\u6811\u548c$z$\u6811\u5408\u6210\u65b0\u6811\u5373\u53ef\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$3.Rotate$\uff1a\u540c\u4e0a\uff0c\u628a\u9700\u8981\u4fee\u6539\u7684\u90e8\u5206\u63d0\u51fa\u6765\uff0c\u6253\u6807\u8bb0\u3002\u7136\u540e\u5728\u62c6\u5206\u3001\u4fee\u6539\u7684\u64cd\u4f5c\u7684\u65f6\u5019\u4e0b\u4f20\u6807\u8bb0\u5373\u53ef\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$4.Get$\uff1a\u76f8\u5f53\u4e8e\u6c42\u6587\u672c\u4e2d\u7b2c$p+1$\u5c0f\u7684\u503c\u3002\u5957\u677f\u5b50\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$5.Insert$\uff1a\u5148\u628a\u4e66\u5206\u6210\u4e24\u4e2a\u90e8\u5206\uff0c\u4e00\u4e2a\u4e3a$x$\u6811\uff0c\u5bf9\u5e94$[1,p]$\uff1b\u53e6\u4e00\u4e2a\u4e3a$z$\u6811\uff0c\u5bf9\u5e94$(p,|S|]$\u3002\u4e0b\u9762\u6709\u4e24\u79cd\u5904\u7406\u65b9\u6cd5\u3002\u4e00\u79cd\u662f\u628a\u8981\u63d2\u5165\u7684\u4e32\u66b4\u529b\u4e00\u4e2a\u4e00\u4e2a\u5b57\u7b26\u5730\u63d2\u5165\u5230$x$\u6811\uff0c\u7136\u540e\u5408\u5e76$x$\u548c$z$\uff0c\u65f6\u95f4\u662f\u53ef\u4ee5\u8fc7\u7684\uff0c\u4f46\u662f\u663e\u7136\u6548\u7387\u5f88\u4f4e\uff1b\u53e6\u4e00\u79cd\u662f\u5bf9\u4e8e\u8981\u63d2\u5165\u7684\u4e32\u5efa\u7acb\u4e00\u9897$y$\u6811\uff0c\u518d\u628a$x,y,z$\u5408\u5e76\u8d77\u6765\u3002~~\u56e0\u4e3a\u6211\u5f88\u61d2\uff0c~~ \u6211\u7528\u7684\u7b2c\u4e00\u79cd\u65b9\u6cd5\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7531\u4e8e\u51fa\u9898\u4eba\u5f88\u6076\u5fc3\uff0c\u63d2\u5165\u7684\u65f6\u5019\u6709\u53ef\u80fd\u51fa\u73b0\u6362\u884c\u7b26\u4e5f\u9700\u8981\u63d2\u5165\uff0c\u6240\u4ee5\u9700\u8981\u4e25\u683c\u5730\u6309\u7167\u8f93\u5165\u7684$n$\u6765\u63d2\u5165\u800c\u4e0d\u662f\u7528$scanf$\u4e4b\u7c7b\u7684\u3002\u540c\u65f6\uff0c\u5982\u679c$Get$\u9700\u8981\u8f93\u51fa\u6362\u884c\u7b26\uff0c\u5c31\u53ea\u9700\u8981\u8f93\u51fa\u4e00\u4e2a\u3002    \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7136\u540e\u4f60\u5c31\u53d1\u73b0\u8fd9\u9053\u9ed1\u9898\u5c31\u88ab\u8fd9\u6837\u6109\u5feb\u5730~~\u6c34\u8fc7\u53bb~~\u89e3\u51b3\u4e86\u3002  \n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n\n#define random myRandom\n\nconst int MAXSIZ = 1024 * 1024 * 2 + 5;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n    x = 0;char s = getchar();int f = 1;\n    while( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n    while( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n    x *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n    if( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n    if( 9 < x ){ write( x / 10 ); }\n    putchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\nvoid swapp( _T &x, _T &y ) { _T t = x; x = y, y = t; }\n\nint ch[MAXSIZ][2], aux[MAXSIZ], siz[MAXSIZ];\nchar val[MAXSIZ], S[MAXSIZ];\nbool rot[MAXSIZ];\nint nsiz, mpos = 0, rt;\n\nvoid srd() { int a, *aa = &a; srand( ( unsigned long long ) aa ); }\nint random() { return rand() * rand(); }\nint newNode( const char c ) { aux[++ nsiz] = random(), siz[nsiz] = 1, val[nsiz] = c, rot[nsiz] = false; return nsiz; }\nvoid upt( const int u ) { siz[u] = siz[ch[u][0]] + siz[ch[u][1]] + 1; }\nvoid swp( const int u ) { swapp( ch[u][0], ch[u][1] ), rot[u] ^= 1; }\nvoid normalize( const int u )\n{\n\tif( ! rot[u] ) return ;\n\tswp( ch[u][0] ), swp( ch[u][1] );\n\trot[u] = false;\n}\n\nvoid splitRnk( const int u, const int k, int &x, int &y )\n{\n\tif( ! u ) { x = y = 0; return ; }\n\tnormalize( u );\n\tif( k <= siz[ch[u][0]] ) y = u, splitRnk( ch[u][0], k, x, ch[u][0] );\n\telse x = u, splitRnk( ch[u][1], k - siz[ch[u][0]] - 1, ch[u][1], y );\n\tupt( u );\n}\n\nint merg( const int u, const int v )\n{\n\tif( ! u || ! v ) return u + v;\n\tif( aux[u] < aux[v] ) { normalize( u ), ch[u][1] = merg( ch[u][1], v ), upt( u ); return u; }\n\telse { normalize( v ), ch[v][0] = merg( u, ch[v][0] ), upt( v ); return v; }\n}\n\nvoid insert( const char *buf )\n{\n\tint l = strlen( buf ), y;\n\tsplitRnk( rt, mpos, rt, y );\n\tfor( int i = 0 ; i < l ; i ++ ) rt = merg( rt, newNode( buf[i] ) );\n\trt = merg( rt, y );\n}\n\nvoid del( const int length )\n{\n\tint x, y;\n\tsplitRnk( rt, mpos, rt, x ), \n\tsplitRnk( x, length, x, y );\n\trt = merg( rt, y );\n}\n\nvoid rotate( const int length )\n{\n\tint x, y;\n\tsplitRnk( rt, mpos, rt, x ), splitRnk( x, length, x, y );\n\tswp( x ), rt = merg( merg( rt, x ), y );\n}\n\nchar Get()\n{\n\tint u = rt, k = mpos + 1;\n\twhile( true )\n\t{\n\t\tnormalize( u );\n\t\tif( k <= siz[ch[u][0]] ) u = ch[u][0];\n\t\telse if( k <= siz[ch[u][0]] + 1 ) return val[u];\n\t\telse k -= siz[ch[u][0]] + 1, u = ch[u][1];\n\t}\n}\n\nint main()\n{\n\tsrd();\n\tchar op[10];\n\tint N, k;\n\tread( N );\n\twhile( N -- )\n\t{\n\t\tscanf( \"%s\", op );\n\t\tif( op[0] == 'M' ) { read( mpos ); }\n\t\tif( op[0] == 'I' )\n\t\t{\n\t\t\tread( k );\n\t\t\tfor( int i = 0 ; i < k ; i ++ ) S[i] = getchar();\n\t\t\tinsert( S );\n\t\t\tfor( int i = 0 ; i < k ; i ++ ) S[i] = '\\0';\n\t\t}\n\t\tif( op[0] == 'D' ) read( k ), \n\t\tdel( k );\n\t\tif( op[0] == 'R' ) read( k ), rotate( k );\n\t\tif( op[0] == 'G' ) \n\t\t{\n\t\t\tchar tmp; putchar( tmp = Get() );\n\t\t\tif( tmp ^ '\\n' ) putchar( '\\n' );\n\t\t}\n\t\tif( op[0] == 'P' ) mpos --;\n\t\tif( op[0] == 'N' ) mpos ++;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1575867566,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[AHOI2006]\u6587\u672c\u7f16\u8f91\u5668"
    },
    {
        "content": "\u4e3a\u4e86\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff0c\u4f60\u53ef\u4ee5\u524d\u5f80\u6211\u7684\u535a\u5ba2\uff1a[https://www.cnblogs.com/zhylj/p/10381075.html](https://www.cnblogs.com/zhylj/p/10381075.html)\n\n### \u9898\u76ee\n\n\u8fd9\u4e9b\u65e5\u5b50\uff0c\u53ef\u53ef\u4e0d\u548c\u5361\u5361\u4e00\u8d77\u73a9\u4e86\uff0c\u539f\u6765\u53ef\u53ef\u6b63\u5e9f\u5bdd\u5fd8\u98df\u7684\u60f3\u505a\u4e00\u4e2a\u7b80\u5355\u800c\u9ad8\u6548\u7684\u6587\u672c\u7f16\u8f91\u5668\u3002\u4f60\u80fd\u5e2e\u52a9\u4ed6\u5417\uff1f\u4e3a\u4e86\u660e\u786e\u4efb\u52a1\u76ee\u6807\uff0c\u53ef\u53ef\u5bf9\u201c\u6587\u672c\u7f16\u8f91\u5668\u201d\u505a\u4e86\u4e00\u4e2a\u62bd\u8c61\u7684\u5b9a\u4e49\uff1a \n\n- `Move k`\uff1a\u5c06\u5149\u6807\u79fb\u52a8\u5230\u7b2c $k$ \u4e2a\u5b57\u7b26\u4e4b\u540e\uff0c\u5982\u679c $k=0$ , \u5c06\u5149\u6807\u79fb\u5230\u6587\u672c\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e4b\u524d\u3002(**\u6ce8\u610f\u662f cur = k \u4e0d\u662f cur += k**)\n- `Insert n \uff08\u6362\u884c\uff09 S`\uff1a\u5728\u5149\u6807\u540e\u63d2\u5165\u957f\u5ea6\u4e3an\u7684\u5b57\u7b26\u4e32S\uff0c\u5149\u6807\u4f4d\u7f6e\u4e0d\u53d8\uff0c$n\\ge 1\u200b$\u3002\n- `Delete n`\uff1a\u5220\u9664\u5149\u6807\u540e\u7684 $n$ \u4e2a\u5b57\u7b26\uff0c\u5149\u6807\u4f4d\u7f6e\u4e0d\u53d8\uff0c$n\\ge 1$\u3002\n- `Rotate n`\uff1a\u53cd\u8f6c\u5149\u6807\u540e\u7684 $n\u200b$ \u4e2a\u5b57\u7b26\uff0c\u5149\u6807\u4f4d\u7f6e\u4e0d\u53d8\uff0c$n\\ge 1\u200b$\u3002\n- `Get`\uff1a\u8f93\u51fa\u5149\u6807\u540e\u7684\u4e00\u4e2a\u5b57\u7b26\uff0c\u5149\u6807\u4f4d\u7f6e\u4e0d\u53d8\u3002\n- `Prev`\uff1a\u5149\u6807\u524d\u79fb\u4e00\u4e2a\u5b57\u7b26\u3002\n- `Next`\uff1a\u5149\u6807\u540e\u79fb\u4e00\u4e2a\u5b57\u7b26\u3002\n\n\u4e0b\u9762\u662f\u51e0\u4e2a\u5b9a\u4e49\uff1a\n\n- \u6587\u672c\uff1a\u75310\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u6784\u6210\u7684\u5e8f\u5217\u3002\u8fd9\u4e9b\u5b57\u7b26\u7684 ASCII \u7801\u5728\u95ed\u533a\u95f4 [32, 126] \u5185\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e9b\u5b57\u7b26\u5747\u4e3a\u53ef\u89c1\u5b57\u7b26\u6216\u7a7a\u683c\u3002\n- \u5149\u6807\uff1a\u5728\u4e00\u6bb5\u6587\u672c\u4e2d\u7528\u4e8e\u6307\u793a\u4f4d\u7f6e\u7684\u6807\u8bb0\uff0c\u53ef\u4ee5\u4f4d\u4e8e\u6587\u672c\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e4b\u524d\uff0c\u6587\u672c\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e4b\u540e\u6216\u6587\u672c\u7684\u67d0\u4e24\u4e2a\u76f8\u90bb\u5b57\u7b26\u4e4b\u95f4\u3002\n- \u6587\u672c\u7f16\u8f91\u5668\uff1a\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u5bf9\u4e00\u6bb5\u6587\u672c\u548c\u8be5\u6587\u672c\u4e2d\u7684\u4e00\u4e2a\u5149\u6807\u8fdb\u884c\u5982\u4e0b\u4e03\u6761\u64cd\u4f5c\u7684\u7a0b\u5e8f\u3002\u5982\u679c\u8fd9\u6bb5\u6587\u672c\u4e3a\u7a7a\uff0c\u6211\u4eec\u5c31\u8bf4\u8fd9\u4e2a\u6587\u672c\u7f16\u8f91\u5668\u662f\u7a7a\u7684\u3002 \n\n\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff1a\n\n1. \u5efa\u7acb\u4e00\u4e2a\u7a7a\u7684\u6587\u672c\u7f16\u8f91\u5668\u3002\n2. \u4ece\u8f93\u5165\u6587\u4ef6\u4e2d\u8bfb\u5165\u4e00\u4e9b\u64cd\u4f5c\u6307\u4ee4\u5e76\u6267\u884c\u3002\n3. \u5bf9\u6240\u6709\u6267\u884c\u8fc7\u7684 Get \u64cd\u4f5c\uff0c\u5c06\u6307\u5b9a\u7684\u5185\u5bb9\u5199\u5165\u8f93\u51fa\u6587\u4ef6\u3002\n\n### \u5206\u6790\n\n\u53d1\u73b0\u4e00\u5806\u4eba\u7684 Splay \u662f\u7528 split \u548c merge \u505a\u7684, \u7136\u800c\u6211\u89c9\u5f97\u65e2\u7136\u5199\u4e86 Splay, \u4e3a\u4ec0\u4e48\u4e0d\u7528 Splay \u5462?\n\n~~\u8bd5\u56fe\u63a9\u76d6\u6211\u4e0d\u4f1a\u5199\u8fd9\u4e24\u64cd\u4f5c\u7684\u4e8b\u5b9e~~\n\n\u91cd\u70b9\u5728 Delete/Insert/Rotate \u64cd\u4f5c\u4e0a.(\u4e0b\u65b9 $c$ \u4e3a\u5149\u6807\u7684\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e)\n\n- Insert n S: \u628a $c - 1$ \u548c $c$ \u5206\u522b\u65cb\u8f6c\u5230\u6839\u8282\u70b9\u548c\u6839\u8282\u70b9\u7684\u53f3\u5b69\u5b50, \u6b64\u65f6\u6839\u8282\u70b9\u7684\u53f3\u5b69\u5b50\u7684\u5de6\u5b69\u5b50\u5c31\u4ee3\u8868\u4e86\u533a\u95f4 $(c-1, c)$, \u663e\u7136\u8be5\u533a\u95f4\u4e3a\u7a7a, \u7528\u4e4b\u524d\u7684\u5efa\u6811\u53bb\u505a\u5c31\u53ef\u4ee5\u4e86.\n- Delete n: \u628a $c - 1$ \u548c $c + n$ \u65cb\u8f6c\u5230\u6839\u8282\u70b9\u7684\u53f3\u5b69\u5b50, \u6b64\u65f6\u6839\u8282\u70b9\u7684\u53f3\u5b69\u5b50\u7684\u5de6\u5b69\u5b50\u5c31\u4ee3\u8868\u4e86\u533a\u95f4 $(c - 1, c + n )$, \u5373 $[c, c + n - 1]$, \u968f\u4fbf\u5220\u9664\u5373\u53ef.\n- Rotate n: \u628a $c - 1$ \u548c $c + n$ \u65cb\u8f6c\u5230\u6839\u8282\u70b9\u7684\u53f3\u5b69\u5b50, \u6b64\u65f6\u6839\u8282\u70b9\u7684\u53f3\u5b69\u5b50\u7684\u5de6\u5b69\u5b50\u5c31\u4ee3\u8868\u4e86\u533a\u95f4 $(c - 1, c + n )$, \u5373 $[c, c + n - 1]$, \u968f\u4fbf\u7ffb\u8f6c\u5373\u53ef.\n\n\u7136\u540e\u968f\u4fbf\u5199\u5199\u5c31\u597d\u4e86, \u4f3c\u4e4e\u4e5f\u6ca1\u6709\u8003\u8651\u8ba8\u8bba\u4e2d\u8bf4\u7684\u6bd2\u7624\u8f93\u5165\u5c31\u8fc7\u4e86...\n\n### \u4ee3\u7801\n\n\u8dd1\u7684\u4f3c\u4e4e\u8fd8\u5f88\u5feb? ($1.8\\ s$).\n\n```cpp\n#include <bits/stdc++.h>\n\n#define fa(x) t[x].fa\n#define siz(x) t[x].siz\n#define val(x) t[x].val\n#define tag(x) t[x].tag\n#define child(x, y) t[x].child[y]\n#define rt t[1].child[1]\n\nconst int kMaxSize = 2e6 + 5;\n\nstruct node {\n\tint child[2], fa, siz; char val; bool tag;\n} t[kMaxSize];\nint cnt = 2;\ninline void Cnct(int c, int f, int p) {fa(c) = f; child(f, p) = c;}\ninline void Updata(int x) {siz(x) = siz(child(x, 0)) + siz(child(x, 1)) + 1;}\ninline bool Which(int x) {return x == child(fa(x), 1);}\ninline int NewNode(char val, int fa) {fa(cnt) = fa; val(cnt) = val; return cnt++;}\nvoid PushTag(int x) {\n\tif(tag(x)) {\n\t\tchild(x, 0) ^= child(x, 1) ^= child(x, 0) ^= child(x, 1);\n\t\ttag(child(x, 0)) ^= 1; tag(child(x, 1)) ^= 1;\n\t\ttag(x) = false;\n\t}\n}\nvoid Rotate(int &x) {\n\tint gfa = fa(fa(x)); bool p = Which(x), pfa = Which(fa(x));\n\tCnct(child(x, p ^ 1), fa(x), p); Cnct(fa(x), x, p ^ 1); Cnct(x, gfa, pfa);\n\tUpdata(child(x, p ^ 1)); Updata(x);\n}\nvoid Splay(int cur, int to = 1) {\n\tfor(; fa(cur) != to; Rotate(cur)) {\n\t\tif(fa(fa(cur)) != to)\n\t\t\tWhich(cur) == Which(fa(cur)) ? Rotate(fa(cur)) : Rotate(cur);\n\t}\n}\nvoid Build(int &cur, int fa, int l, int r, std::string &a) {\n\tif(l <= r) {\n\t\tint mid = (l + r) >> 1;\n\t\tcur = NewNode(a[mid], fa);\n\t\tBuild(child(cur, 0), cur, l, mid - 1, a);\n\t\tBuild(child(cur, 1), cur, mid + 1, r, a);\n\t\tUpdata(cur);\n\t}\n}\nvoid Output(int cur = rt) {\n\tif(!cur) return;\n\tPushTag(cur);\n\tOutput(child(cur, 0));\n\tif(val(cur)) printf(\"%c\", val(cur));\n\tOutput(child(cur, 1));\n}\nint FindKth(int k) {\n\tfor(int cur = rt, tot = 0; ; tot++) {\n\t\tPushTag(cur);\n\t\tif(k == siz(child(cur, 0)) + 1) return cur;\n\t\telse if(k <= siz(child(cur, 0))) cur = child(cur, 0);\n\t\telse k -= siz(child(cur, 0)) + 1, cur = child(cur, 1);\n\t}\n}\nvoid Reverse(int x, int n) {\n\tSplay(FindKth(x - 1)); Splay(FindKth(x + n), rt);\n\ttag(child(child(rt, 1), 0)) ^= 1;\n}\nvoid Insert(int x, int ptr) { \n\tSplay(FindKth(x - 1)); Splay(FindKth(x), rt);\n\tCnct(ptr, child(rt, 1), 0);\n\tUpdata(child(rt, 1)); Updata(rt);\n}\nvoid Delete(int x, int n) {\n\tSplay(FindKth(x - 1)); Splay(FindKth(x + n), rt);\n\tchild(child(rt, 1), 0) = 0;\n\tUpdata(child(rt, 1)); Updata(rt);\n}\n\nusing std::cout;\nusing std::cin;\n\nint q, curt = 2; std::string s;\nint main() {\n\tstd::ios::sync_with_stdio(false);\n\tcin >> q;\n\ts[1] = s[2] = 0;\n\tBuild(rt, 1, 1, 2, s);\n\twhile(q--) {\n\t\tstd::string opt, str; int n;\n\t\tcin >> opt;\n\t\tif(opt == \"Move\") {\n\t\t\tcin >> n;\n\t\t\tif(n == 0) curt = 2;\n\t\t\telse curt = n + 2;\n\t\t} else if(opt == \"Insert\") {\n\t\t\tcin >> n;\n\t\t\tcin.ignore();\n\t\t\tgetline(cin, str);\n\t\t\tstr = \" \" + str;\n\t\t\tint ptr;\n\t\t\tBuild(ptr, 1, 1, n, str);\n\t\t\tInsert(curt, ptr);\n\t\t} else if(opt == \"Delete\") {\n\t\t\tcin >> n;\n\t\t\tDelete(curt, n);\n\t\t} else if(opt == \"Rotate\") {\n\t\t\tcin >> n;\n\t\t\tReverse(curt, n);\n\t\t} else if(opt == \"Get\") {\n\t\t\tint ptr = FindKth(curt);\n\t\t\tSplay(ptr);\n\t\t\tcout << val(ptr) << std::endl;\n\t\t} else if(opt == \"Prev\") curt--;\n\t\telse if(opt == \"Next\") curt++;\n\t}\n\treturn 0;\n\n}\n```",
        "postTime": 1550153800,
        "uid": 34238,
        "name": "zhylj",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4567 \u3010[AHOI2006]\u6587\u672c\u7f16\u8f91\u5668\u3011"
    }
]