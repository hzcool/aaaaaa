[
    {
        "content": "## \u601d\u8def\uff1a\n\u8fd9\u9053\u9898\u6c42\u51fa\u7b54\u6848\u5e94\u8be5\u4e0d\u96be\uff0c\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u62c6\u6210Ai\u548cBi\u4e24\u4e2a\u70b9\uff0c\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u5bb9\u91cf\u4e3a1\uff0c\u8fb9\u6743\u4e3a1\uff0c**\uff08\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u53ea\u80fd\u9009\u4e00\u6b21\uff0c\u6bcf\u9009\u4e00\u4e2a\u70b9\u53ef\u4ee5\u5bf9\u7b54\u6848\u9020\u62101\u7684\u8d21\u732e\uff09**\n**\uff08\u82e5i\u4e3a1\u6216n\u5bb9\u91cf\u5e94\u4e3a2\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u70b9\u53ef\u4ee5\u9009\u4e24\u6b21\uff09**\n\n\u5bf9\u4e8e\u6bcf\u6761\u4eceu\u5230v\u7684\u8fb9\uff0c\u8ba9Bu\u5411Av\u5efa\u4e00\u6761\u5bb9\u91cf\u4e3a1\uff0c\u8fb9\u6743\u4e3a0\u7684\u8fb9**\uff08\u56e0\u4e3a\u6bcf\u6761\u8fb9\u53ea\u80fd\u9009\u4e00\u6b21\uff0c\u9009\u8fb9\u5e76\u4e0d\u4f1a\u5bf9\u7b54\u6848\u9020\u6210\u5f71\u54cd\uff09**\n\n\u6700\u540e\u4ece\u6e90\u70b9\u5411A1\u5efa\u4e00\u6761\u5bb9\u91cf\u4e3a2\uff0c\u8fb9\u6743\u4e3a0,\u7684\u8fb9\n\n\u4eceBn\u5411\u6c47\u70b9\u5efa\u4e00\u6761\u5bb9\u91cf\u4e3a2\uff0c\u8fb9\u6743\u4e3a0\u7684\u8fb9\n\n\u8dd1**\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41**\u5373\u53ef\n\n\u95ee\u9898\u662f\u5982\u4f55\u8f93\u51fa\u57ce\u5e02\u5462\uff1f\n\n\u6211\u7684\u601d\u8def\u662f\u8fdb\u884c\u4e24\u904ddfs\uff0c\n\n\u7b2c\u4e00\u6b21dfs\u627e\u5230\u4e00\u67611\u5230n\u6240\u6709\u8fb9\u7684flow\u90fd\u4e3a0\u7684\u8def\u5f84\u6b63\u5e8f\u8f93\u51fa\uff0c\n\n\u7b2c\u4e8c\u6b21dfs\u627e\u5230\u53e6\u4e00\u67611\u5230n\u6240\u6709\u8fb9\u7684flow\u90fd\u4e3a0\u7684\u8def\u5f84\u5012\u5e8f\u8f93\u51fa\uff08\u8fd9\u6b21n\u4e0d\u8f93\u51fa\uff09\n\n\u8fd8\u662f\u6709\u4e00\u5b9a\u5751\u70b9\u7684\uff0c\u5177\u4f53\u770b\u4ee3\u7801\u5427\n\n## \u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<cmath>\n#include<queue>\n#include<map>\n#define inf 0x7fffffff/2\n#define eps 1e-6\n#define N 100010\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ninline ll read()\n{\n\tchar ch=getchar();\n\tll s=0,w=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){s=s*10+ch-'0';ch=getchar();}\n\treturn s*w;\n}\nint n,m;\nmap<string,int>ma;\nstruct edge\n{\n\tint next,to,fl,v;\n}e[N<<1];\nint head[N],cnt=1;\nint dist[N],pre[N],vis[N],minn[N];\nqueue<int>Q;\nint s,t,val,flag[N],check;\nstring ss[N];\ninline void add_edge(int from,int to,int fl,int v){e[++cnt].to=to;e[cnt].next=head[from];e[cnt].fl=fl;e[cnt].v=v;head[from]=cnt;}\nvoid update(int x,int flow)\n{\n\te[pre[x]].fl-=flow;\n\te[pre[x]^1].fl+=flow;\n\tif(e[pre[x]^1].to)update(e[pre[x]^1].to,flow);\n}\ninline int spfa()\n{\n\tmemset(vis,0,sizeof(vis));while(!Q.empty())Q.pop();\n\tfor(register int i=1;i<=t;i++)dist[i]=-inf;\n\tminn[s]=inf;dist[s]=0;Q.push(s);vis[s]=1;\n\twhile(!Q.empty())\n\t{\n\t\tint x=Q.front();Q.pop();vis[x]=0;\n\t\tfor(register int i=head[x];i;i=e[i].next)\n\t\t{\n\t\t\tif(dist[e[i].to]<dist[x]+e[i].v&&e[i].fl)\n\t\t\t{\n\t\t\t\tdist[e[i].to]=dist[x]+e[i].v;\n\t\t\t\tpre[e[i].to]=i;\n\t\t\t\tminn[e[i].to]=min(minn[x],e[i].fl);\n\t\t\t\tif(!vis[e[i].to])\n\t\t\t\t{\n\t\t\t\t\tvis[e[i].to]=1;\n\t\t\t\t\tQ.push(e[i].to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(dist[t]==-inf)return -inf;\n\tupdate(t,minn[t]);val+=minn[t];\n\treturn minn[t]*dist[t];\n}\ninline int EK()\n{\n\tint sum=0;\n\twhile(1)\n\t{\n\t\tint x=spfa();\n\t\tif(x==-inf)return sum;\n\t\tsum+=x;\n\t}\n}//\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\nvoid dfs1(int x)\n{\n\tcout<<ss[x]<<endl;//\u7b2c\u4e00\u904ddfs\u6b63\u5e8f\u8f93\u51fa\n\tvis[x]=1;//\u4e0d\u8ba9\u7b2c\u4e8c\u6b21dfs\u518d\u627e\u5230\u8fd9\u4e2a\u70b9\n\tfor(register int i=head[x];i;i=e[i].next)\n\t{\n\t\tif(e[i].to>n&&e[i].to<=2*n&&e[i].fl==0){dfs1(e[i].to-n);break;}//\u7b2c\u4e00\u6b21dfs\u53ea\u627e\u4e00\u6761\u8def\u5f84\uff0c\u627e\u5230\u5c31break\n\t}\n}\nvoid dfs2(int x)\n{\n\tvis[x]=1;\n\tfor(register int i=head[x];i;i=e[i].next)\n\t{\n\t\tif(e[i].to>n&&e[i].to<=2*n&&e[i].fl==0&&!vis[e[i].to-n]){dfs2(e[i].to-n);}//\u4e0d\u8d70\u7b2c\u4e00\u6b21\u8def\u5f84\u8d70\u8fc7\u7684\u70b9\n\t}\n\tcout<<ss[x]<<endl;//\u7b2c\u4e8c\u6b21dfs\u5012\u5e8f\u8f93\u51fa\n}//vis[n]\u5728\u7b2c\u4e00\u6b21dfs\u5df2\u7ecf\u8bbe\u4e3a1\uff0c\u4e0d\u4f1a\u8f93\u51fa\u7b2c\u4e8c\u6b21\nint main()\n{\n\tn=read(),m=read();t=n*2+1;\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tcin>>ss[i];ma[ss[i]]=i;\n\t}\n\tfor(register int i=1;i<=m;i++)\n\t{\n\t\tstring s1,s2;\n\t\tcin>>s1>>s2;\n\t\tint x=ma[s1],y=ma[s2];\n\t\tif(x>y)swap(x,y);//\u8ba9\u897f\u8fb9\u7684\u70b9\u5411\u4e1c\u8fb9\u5efa\u8fb9\n        if(x==1&&y==n)check=1;//\u5982\u679c\u6709\u76f4\u63a51-n\u7684\u8def\u5f84\n\t\tadd_edge(x,y+n,1,0);add_edge(y+n,x,0,0);\n\t}\n\tadd_edge(s,n+1,inf,0);add_edge(n+1,s,0,0);\n\tadd_edge(n,t,inf,0);add_edge(t,n,0,0);\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tif(i!=1&&i!=n)add_edge(i+n,i,1,1),add_edge(i,i+n,0,-1);\n\t\telse add_edge(i+n,i,2,1),add_edge(i,i+n,0,-1);\n\t}\n    //\u5bf9\u4e8e\u6211\u7684\u4ee3\u7801,1-n\u662fBi,n+1-2*n\u662fAi\n\tint maxflow=EK();\n\tif(val==2)printf(\"%d\\n\",maxflow-2);//1\u548cn\u88ab\u91cd\u590d\u8ba1\u7b97\uff0c\u5e94\u8be5\u51cf\u53bb\n\telse if(val==1&&check){printf(\"%d\\n\",2);cout<<ss[1]<<endl<<ss[n]<<endl<<ss[1]<<endl;return 0;}//\u5982\u679c\u67091-n\u76f4\u63a5\u7684\u8def\u5f84\u5373\u4f7f\u53ea\u67091\u6761\u4e5f\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\n\telse {printf(\"No Solution!\\n\");return 0;}\n\tmemset(vis,0,sizeof(vis));\n\tdfs1(1);dfs2(1);//\u8f93\u51fa\u57ce\u5e02\n\treturn 0;\n}\n```\n\n\n**\u5982\u679c\u8ba4\u4e3a\u6211\u8fd9\u7bc7\u9898\u89e3\u5bf9\u4f60\u6709\u5e2e\u52a9\u7684\u53ef\u4ee5\u7ed9\u6211\u70b9\u4e00\u4e0b\u8d5eqwq\u3002\u5982\u679c\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u6216\u8005\u8ba4\u4e3a\u6211\u7684\u9898\u89e3\u6709\u4ec0\u4e48\u95ee\u9898\u7684\u8bdd\uff0c\u8bf7\u52a1\u5fc5\u79c1\u4fe1\u6211\uff0c\u611f\u6fc0\u4e0d\u5c3d\uff01\u6211\u4f1a\u52aa\u529b\u628a\u6211\u7684\u9898\u89e3\u5199\u5f97\u6700\u597d\u7684!**",
        "postTime": 1547565114,
        "uid": 72419,
        "name": "WAPER4EVER",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2770 \u3010\u822a\u7a7a\u8def\u7ebf\u95ee\u9898\u3011"
    },
    {
        "content": "\u8bf4\u4e00\u70b9\u5b9e\u73b0\u4e0a\u7684\u5c0f\u7ec6\u8282\u5427\u3002\u4e3b\u8981\u5185\u5bb9\u662f\u300c\u8ddf\u5176\u4ed6\u9898\u89e3\u4e0d\u4e00\u6837\u7684\u4e1c\u897f\u300d\u3002\n\n\u53d1\u73b0\u5927\u5bb6\u5728\u505a\u8fd9\u4e2a\u9898\u7684\u65f6\u5019\uff0c\u90fd\u662f\u7279\u5224\u7684\u300c\u662f\u5426\u5b58\u5728\u4e00\u6761\u76f4\u63a5\u8fde\u901a $1$ \u548c $n$\u300d \u7684\u8def\u5f84\uff0c\u7136\u540e\u76f4\u63a5\u8f93\u51fa\u3002\u9996\u5148\u8fd9\u4e48\u505a\uff0c\u8f83\u4e3a\u9ebb\u70e6(\u867d\u7136\u4e5f\u5c31\u53ea\u591a\u4e86\u4e00\u4e24\u4e8c\u4e09\u884c)\uff0c\u5176\u6b21\u6b63\u786e\u6027\u6709\u5f85\u8003\u7a76\u3002\n\n\u8fd9\u4e2a\u5730\u65b9\u5c31\u9700\u8981\u601d\u8003\uff0c\u4e3a\u4ec0\u4e48\u5927\u5bb6\u7684\u5b9e\u73b0\u9700\u8981\u7279\u5224\u8fd9\u4e2a\u7ec6\u8282\uff1f\u539f\u56e0\u662f\u5047\u8bbe\u53ea\u6709 $1\\leftrightarrow n$ \u8fd9\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48\u8fd9\u6761\u8def\u9700\u8981\u8d70\u4e24\u6b21\u3002\u4f46\u662f\u8fde\u8fb9 $(u,v)$ \u7684\u65f6\u5019\u5927\u5bb6\u90fd\u662f\u5199\u7684 `add(u',v,1,0)`\uff0c\u5bfc\u81f4\u53ea\u80fd\u8d70\u4e00\u6b21\u3002\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u7531\u4e8e\u8fd9\u662f\u4e2a\u57fa\u7840\u9898\uff0c\u6240\u4ee5\u6bcf\u4e2a\u7ec6\u8282\u90fd\u9700\u8981\u5199\u7684\u5341\u5206\u5408\u7406\uff0c\u4f46\u8fd9\u4e2a\u5730\u65b9\u663e\u7136\u5c31\u4e0d\u5408\u7406\u3002\n\n\u7f51\u7edc\u6d41\u9898\u8bb2\u7a76\u5bf9\u7740\u9650\u5236\u627e`flow`\uff0c\u5bf9\u7740\u4ee3\u4ef7\u627e`cost`\u3002\u8fd9\u4e2a\u9898\u76ee\u91cc\u663e\u7136\u53ea\u9650\u5236\u4e86\u4e00\u4e2a\u70b9\u81f3\u591a\u8d70\u4e00\u6b21\uff0c\u4f46\u662f\u6ca1\u9650\u5236\u4e00\u6761\u8fb9\u81f3\u591a\u8d70\u4e00\u6b21\u2014\u2014\u867d\u7136\u672c\u8d28\u4e0a\uff0c\u6ca1\u5565\u5f88\u5927\u533a\u522b\uff0c\u56e0\u4e3a\u70b9\u81f3\u591a\u4e00\u6b21\u51b3\u5b9a\u4e86\u8fb9\u81f3\u591a\u4e00\u6b21\u2014\u2014\u4f46\u662f\u8fd9\u4ece\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u51b3\u5b9a\u4e86\u5bf9\u8fd9\u4e2a\u9898\u5efa\u6a21\u7684\u7406\u89e3\u7a0b\u5ea6\u3002\u6240\u4ee5\u6211\u8ba4\u4e3a\uff0c\u4e3a\u4e86\u66f4\u597d\u5730\u5b9e\u73b0\u300c\u7f51\u7edc\u6d4124\u9898\u300d\u7684\u7f51\u7edc\u6d41\u6559\u5b66\u4efb\u52a1\uff0c\u5e94\u8be5\u5728\u8fde\u8fb9 $(u,v)$ \u65f6\u5982\u662f\u5199\uff1a\n\n```cpp\nadd(u',v,Inf,0)\n```\n\n\u8fd9\u6837\u6709\u4e24\u4e2a\u597d\u5904\uff1a\n\n1\u3001\u53ea\u9700\u8981\u7279\u5224\u65e0\u89e3\uff0c\u6839\u672c\u4e0d\u9700\u8981\u90a3\u4e9b\u65e0\u804a\u7684\u5224\u6765\u5224\u53bb\u5224\u6d41\u91cf\u591a\u5c11\uff0c\u5f71\u54cd\u4ee3\u7801\u7684\u7f8e\u89c2\u548c\u7b80\u7ec3\u3002\n\n2\u3001\u4f53\u73b0\u4e86\u8fd9\u4e2a\u9898\u5efa\u6a21\u7684\u672c\u8d28\u610f\u4e49\u3002\u56e0\u4e3a\u5df2\u7ecf\u6709\u62c6\u70b9\u4fdd\u8bc1\u4e86\u9898\u76ee\u4e2d\u7684\u8981\u6c42\u7684\u9650\u5236\uff0c\u5982\u679c\u518d\u786c\u751f\u751f\u52a0\u4e0a\u4e00\u4e2a\u300c\u8fb9\u4e5f\u81f3\u591a\u8d70\u4e00\u6b21\u300d\uff0c\u5c31\u662f\u5728\u65e0\u4e2d\u751f\u6709\u3001\u6697\u5ea6\u9648\u4ed3(\u96fe)\u3002\u800c\u7cbe\u51c6\u7684\u5efa\u6a21\u662f\u7f51\u7edc\u6d41\u5b66\u4e60\u9636\u6bb5\u6240\u5fc5\u987b\u638c\u63e1\u7684\u4e1c\u897f\u3002\n\n```cpp\nint main(){\n    cnt = -1 ;\n    cin >> _n >> _m ;\n    x = _n * 2 ; y = 1 + _n ;\n    _s = 0 ; _t = _n + _n + 1 ;\n    memset(head, -1, sizeof(head)) ;\n    add(_s, 1, 2, 0) ; add(x, _t, 2, 0) ;\n    add(1, y, 2, -1) ; add(_n, x, 2, -1) ;\n    for (int i = 1 ; i <= _n ; ++ i)\n        cin >> s, rt[t[s] = i] = s ;\n    for (int i = 1 ; i <= _n ; ++ i)\n        add(i, i + _n, 1, -1) ;\n    for (int i = 1 ; i <= _m ; ++ i){\n        cin >> s >> ss ;\n        int p = t[s] ;\n        int q = t[ss] ;\n        if (p > q) swap(p, q) ;\n        //cout << p << \" \" << q << endl ;\n        add(p + _n, q, I, 0) ;\n    }\n    buc[1] = 1 ;\n    n = _t + 1 ; ek() ;\n    if (!ret)\n        return puts(\"No Solution!\"), 0 ;\n    cout << -res - 2 << endl ;\n    dfs(1, l) ; cout << rt[1] << endl ;\n    for (int i = 0 ; i < l ; ++ i)\n        cout << rt[ans[i]] << '\\n' ; l = 0 ;\n    for (int i = 0 ; i <= cnt ; ++ i)\n        if (ct(i) == -1 && !fw(i) && !buc[fr(i)])\n            ans[++ l] = fr(i) ;\n    sort(ans + 1, ans + l + 1, comp) ;\n    for (int i = 1 ; i <= l ; ++ i)\n        cout << rt[ans[i]] << '\\n' ;\n    return cout << rt[1] << endl, 0 ;\n}\n\n```\n\nbtw\uff0c\u5176\u5b9e\u53ea\u9700\u8981dfs\u4e00\u904d\u5373\u53ef\u3002\u7531\u4e8e\u8bbf\u95ee\u8fc7\u7a0b\u4e00\u5b9a\u662f\u5355\u8c03\u7684\uff0c\u6240\u4ee5\u5c06\u8d70\u5b8c\u4e00\u904d\u540e\u90a3\u4e9b\u6ca1\u8d70\u8fc7\u7684\u8282\u70b9\u6392\u5e8f\u8f93\u51fa\u5373\u53ef\u3002",
        "postTime": 1584409704,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "P2770 \u8bf4\u4e00\u70b9\u5173\u4e8e\u6b64\u9898\u7684\u5c0f\u7ec6\u8282"
    },
    {
        "content": "\n# **\u3010\u9898\u89e3\u3011\u3010\u7f51\u7edc\u6d4124\u9898\u3011\u822a\u7a7a\u8def\u7ebf\u95ee\u9898 [P2770] [Loj6122]**\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Xing-Ling/p/11405914.html)\n\n**\u4f20\u9001\u95e8\uff1a[\u822a\u7a7a\u8def\u7ebf\u95ee\u9898 $[P2770]$](https://www.luogu.org/problem/P2770) [$[Loj6122]$](https://loj.ac/problem/6122)**\n\n## **\u3010\u9898\u76ee\u63cf\u8ff0\u3011**\n\n\u7ed9\u51fa\u4e00\u5f20\u6709\u5411\u56fe\uff0c\u6bcf\u4e2a\u70b9\uff08\u9664\u4e86\u8d77\u70b9 $1$\uff09\u6bcf\u6761\u8fb9\u90fd\u53ea\u80fd\u7ecf\u8fc7\u4e00\u6b21\uff0c\u6c42\u51fa\u4ece $1$ \u5230 $n$ \u5728\u56de\u5230 $1$ \u7684\u4e00\u6761\u8def\u5f84\uff0c\u4f7f\u5f97\u7ecf\u8fc7\u7684\u70b9\u4e2a\u6570\u6700\u5927\uff0c\u5e76\u8f93\u51fa\u8def\u5f84\u3002\n\n\n**\u3010\u6570\u636e\u8303\u56f4\u3011**\n\n$100\\%$ $n \\leqslant 100$\n\n-------\n\n## **\u3010\u5206\u6790\u3011**\n\n\u8fd9\u662f\u4e00\u9053\u7f51\u7edc\u7624\u9898\u76ee\u3002\n\n\u90a3\u4e48\uff0c\u5982\u4f55\u5efa\u6a21\u5462\uff1f\n\n### **\u3010\u5efa\u6a21\u3011**\n\n\u4fd7\u8bdd\u8bf4\u5f97\u597d\u554a\uff1a**\u7f51\u7edc\u7624\uff0c\u7f51\u7edc\u7624\uff0c\u7f51\u7edc\u5efa\u6a21\u6700\u6bd2\u7624\u3002**\n\u7a0d\u5fae\u4e00\u4e0d\u6ce8\u610f\u8e29\u5230\u4e86\u5751\u5c31 $GG$ \u3002\n\n\u628a\u9898\u610f\u8f6c\u6362\u4e00\u4e0b\uff0c\u5b9e\u9645\u4e0a\u662f\u6c42\u4ece $1$ \u5230 $n$ \u7684\u4e24\u6761\u4e92\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84\u3002\n\u9650\u5236\u6761\u4ef6\u662f\u9664\u8d77\u70b9\u3001\u7ec8\u70b9\u5916\u7684\u6bcf\u6761\u8fb9\u3001\u6bcf\u4e2a\u70b9\u53ea\u80fd\u7ecf\u8fc7\u4e00\u6b21\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8fdb\u884c**\u62c6\u70b9**\uff0c\u628a**\u70b9\u53ef\u4ee5\u7ecf\u8fc7\u7684\u6700\u5927\u6b21\u6570**\u4f5c\u4e3a**\u70b9\u5185\u90e8\u7684\u6d41\u91cf**\uff0c**\u8282\u70b9\u6570**\u4f5c\u4e3a\u70b9**\u5185\u90e8\u7684\u8d39\u7528**\uff0c\u6700\u540e\u7528 $MCMF$ \u6c42\u4e00\u4e2a\u6700\u5927\u6d41\u6700\u5927\u82b1\u8d39\u3002\n\n\u6c42\u51fa\u7684**\u6700\u5927\u6d41**\u5c31\u662f**\u6240\u627e\u5230\u7684\u8def\u5f84\u6570**\uff0c\u5982\u679c\u5b83\u5c0f\u4e8e\u7b49\u4e8e $1$\uff0c\u5c31\u8bf4\u660e\u627e\u4e0d\u5230\u8fd9\u6837\u4e00\u6761\u8def\u5f84\u3002\n\u4f46\u6709\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\u9700\u8981\u7279\u5224\uff1a\u8d77\u70b9\u3001\u7ec8\u70b9\u53ea\u6709\u4e00\u6761\u8fb9\u76f8\u8fde\uff0c\u8fd9\u65f6\u5019\u867d\u7136\u53ea\u80fd\u627e\u5230\u4e00\u6761\u8def\u5f84\uff0c\u53ef $1$ \u80fd\u76f4\u901a $n$ \u5e76\u76f4\u63a5\u56de\u6765\uff0c\u662f\u5408\u6cd5\u7684\u8def\u5f84\u3002\n\n\u7136\u540e\u5c31\u662f **\u7f8e** $(sang)$ **\u5999** $(xin)$ **\u7edd** $(bing)$ **\u4f26** $(kuang)$ \u7684\u5efa\u56fe\u4e86\uff1a\n\n\u9996\u5148\u628a\u6bcf\u4e2a\u70b9\u62c6\u4e3a**\u5165\u70b9**\u548c**\u51fa\u70b9**\uff0c\u5e76\u8fde\u4e00\u6761**\u6d41\u91cf**\uff08**\u53ef\u7ecf\u8fc7\u6b21\u6570**\uff09\u4e3a $1$\uff0c\u8d39\u7528\uff08**\u8282\u70b9\u6570**\uff09\u4e3a $1$ \u7684\u8fb9\uff0c\u8d77\u70b9\u3001\u7ec8\u70b9\u8981\u5355\u72ec\u62c6\uff0c**\u6d41\u91cf**\u8bbe\u4e3a $2$ \u3002\n\n\u800c\u5bf9\u4e8e\u8f93\u5165\u7684\u8fb9 $(x,y)$\uff0c\u8981\u628a $x$ \u7684**\u51fa\u70b9**\u4e0e $y$ \u7684**\u5165\u70b9**\u76f8\u8fde\uff08\u5176\u5b9e\u662f\u4e2a\u5f88\u7b80\u5355\u7684\u9053\u7406\uff0c\u4e00\u5f00\u59cb\u6b7b\u6d3b\u60f3\u4e0d\u660e\u767d\uff0c\u800c\u5927\u4f6c\u4eec\u7684\u9898\u89e3\u57fa\u672c\u90fd\u6ca1\u8bb2\uff0c\u53ef\u80fd\u662f\u89c9\u5f97\u592a\u7b80\u5355\u4e86\u5427\uff0c\u6211\u592a\u84bb\u4e86\u3002\u3002\u3002\uff09\u3002\n\n### **\u3010\u6c42\u7b54\u6848\u3011**\n\n\u7b54\u6848\u5206\u4e09\u79cd\u60c5\u51b5\uff1a\n\n$(1).$ \u5f53**\u6700\u5927\u6d41**\u7b49\u4e8e $2$ \u65f6\uff0c**\u6700\u5927\u82b1\u8d39**\u51cf $2$ \u5373\u4e3a\u53ef\u7ecf\u8fc7\u7684\u6700\u5927\u8282\u70b9\u6570\uff0c\u51cf $2$ \u662f\u56e0\u4e3a\u8d77\u70b9\u3001\u7ec8\u70b9\u90fd\u7ecf\u8fc7\u4e86\u4e24\u6b21\u3002\n\n$(2).$ \u5f53\u5904\u4e8e\u4e0a\u8ff0 $1$ \u76f4\u901a $n$ \u7684\u60c5\u51b5\u65f6\uff0c\u7b54\u6848\u4e3a $2$\uff0c\u8def\u5f84\u4e3a\uff1a\u8d77\u70b9\u2192\u7ec8\u70b9\u2192\u8d77\u70b9\u3002\n\n$(3).$ \u5176\u4ed6\u60c5\u51b5\u5747\u4e3a\u65e0\u89e3\u3002\n\n\u53e6\u5916\uff0c\u60c5\u51b5 $(1)$ \u4e2d\u8f93\u51fa\u8def\u5f84\u65f6\u5199\u4e24\u4e2a $dfs$ \u904d\u5386**\u6ee1\u6d41\u8fb9**\uff1a\n\n\u7b2c\u4e00\u6b21\u968f\u4fbf\u8dd1\uff0c\u8bb0\u5f55\u4e0b\u8dd1\u8fc7\u7684\u8282\u70b9\u7f16\u53f7\uff0c\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u65f6\u5019\u53ea\u80fd\u8dd1\u51fa\u4e00\u6761\u8def\uff0c\u6240\u4ee5\u627e\u5230\u8def\u540e\u8981\u7acb\u9a6c $break$\u3002 \n\n\u7b2c\u4e8c\u6b21\u8df3\u8fc7\u8fd9\u4e9b\u8282\u70b9\u627e\u5269\u4e0b\u90a3\u6761\u8def\u5f84\uff0c\u7531\u4e8e**\u6700\u5927\u6d41**\uff08**\u6240\u627e\u5230\u7684\u8def\u5f84\u6570**\uff09\u6700\u591a\u4e3a $2$\uff0c\u6240\u4ee5\u8fd9\u91cc\u662f\u5426 $break$ \u90fd\u65e0\u6240\u8c13\uff08\u53ef\u80fd\u4f1a\u5feb\u4e00\u4e22\u4e22\u5427\uff09\u3002\n\n## **\u3010Code\u3011**\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<string>\n#include<cstdio>\n#include<queue>\n#include<map>\n#define LL long long\n#define Re register int\nusing namespace std;\nconst int N=103,M=40000,inf=2e9;\nint x,y,o=1,n,m,h,t,st,ed,flag,cyf[N],pan[N],pre[N],dis[N],head[N];LL maxcost,maxflow;\nstruct QAQ{int w,to,next,flow;}a[M<<1];queue<int>Q;string CH,ch[N];map<string,int>ip;\ninline void add(Re x,Re y,Re z,Re w){a[++o].flow=z,a[o].w=w,a[o].to=y,a[o].next=head[x],head[x]=o;}\ninline void add_(Re a,Re b,Re flow,Re w){add(a,b,flow,w),add(b,a,0,-w);}\ninline int SPFA(Re st,Re ed){\n    for(Re i=0;i<=ed;++i)dis[i]=-inf,pan[i]=0;\n    Q.push(st),pan[st]=1,dis[st]=0,cyf[st]=inf;\n    while(!Q.empty()){\n    \tRe x=Q.front();Q.pop();pan[x]=0;\n    \tfor(Re i=head[x],to;i;i=a[i].next)\n            if(a[i].flow&&dis[to=a[i].to]<dis[x]+a[i].w){//\u6700\u957f\u8def \n            \tdis[to]=dis[x]+a[i].w,pre[to]=i;\n            \tcyf[to]=min(cyf[x],a[i].flow);//\u6700\u5c0f\u6b8b\u4f59\u7f51\u7edc \n            \tif(!pan[to])pan[to]=1,Q.push(to);\n            }\n    }\n    return dis[ed]!=-inf;\n}\ninline void EK(Re st,Re ed){\n    while(SPFA(st,ed)){\n    \tRe x=ed;maxflow+=cyf[ed],maxcost+=(LL)cyf[ed]*dis[ed];\n    \twhile(x!=st){\n            Re i=pre[x];\n            a[i].flow-=cyf[ed];\n            a[i^1].flow+=cyf[ed];\n            x=a[i^1].to;\n    \t}\n    }\n}\ninline void dfs1(Re x){\n    pan[x]=1;//\u8bb0\u5f55\u4e00\u4e0b\u7b2c\u4e00\u6b21\u9009\u7684\u70b9\uff0c\u7b2c\u4e8c\u6b21\u5c31\u4e0d\u9009\u5b83\u4eec\u4e86\n    cout<<ch[x-n]<<endl;//\u7b2c\u4e00\u6b21\u6b63\u5e8f\u8f93\u51fa\u3002\u8bb0\u5f97\u51cfn\n    for(Re i=head[x],to;i;i=a[i].next)\n    \tif((to=a[i].to)<=n&&!a[i].flow){dfs1(to+n);break;}//\u51fa\u70b9x>n\u5230\u5165\u70b9to<=n,\u518d\u4eceto\u7684\u51fa\u70b9\u641c\u4e0b\u53bb\n}\ninline void dfs2(Re x){\n    for(Re i=head[x],to;i;i=a[i].next)\n    \tif((to=a[i].to)<=n&&!a[i].flow&&!pan[to+n])dfs2(to+n);//\u51fa\u70b9x>n\u5230\u5165\u70b9to<=n,\u518d\u4eceto\u7684\u51fa\u70b9\u641c\u4e0b\u53bb \n    cout<<ch[x-n]<<endl;//\u7b2c\u4e8c\u6b21\u5012\u5e8f\u8f93\u51fa\u3002\u8bb0\u5f97\u51cfn \n}\nint main(){\n    cin>>n>>m;st=1,ed=n<<1;\n    for(Re i=1;i<=n;++i)cin>>ch[i],ip[ch[i]]=i;\n    for(Re i=2;i<n;++i)add_(i,n+i,1,1);//1~n\u8868\u793a\u5165\u70b9\uff0cn+1~2n\u8868\u793a\u51fa\u70b9 \n    add_(1,1+n,2,1),add_(n,n+n,2,1);//\u8d77\u70b9\u548c\u4e2d\u70b9\u53ef\u4ee5\u7ecf\u8fc7\u4e24\u6b21 \n    while(m--){\n    \tcin>>CH;x=ip[CH];\n    \tcin>>CH;y=ip[CH];\n    \tif(x>y)swap(x,y);\n    \tflag|=x==1&&y==n; \n    \tadd_(x+n,y,1,0);//\u521a\u4ecex\u7684\u51fa\u70b9\u51fa\u6765\uff0c\u63a5\u4e0b\u6765\u8fde\u5230y\u7684\u5165\u70b9 \n    }\n    EK(st,ed);\n    if(maxflow==2)printf(\"%d\\n\",maxcost-2);//\u627e\u5230\u4e86\u4e24\u6761\u8def \n    else if(maxflow==1&&flag){//\u53ea\u6709\u4e00\u6761\u4ece1\u76f4\u901an\u7684\u8fb9 \n    \tprintf(\"2\\n\");\n    \tcout<<ch[1]<<endl<<ch[n]<<endl<<ch[1]<<endl;//\u8fd9\u91cc\u8981\u8f93\u51fa\u4e09\u4e2a \n    \treturn 0;\n    }\n    else return !printf(\"No Solution!\\n\");\n    for(Re i=1;i<=n+2;++i)pan[i+n]=0;\n    dfs1(1+n),dfs2(1+n);//\u6839\u636e\u8fb9\u7684\u6b8b\u4f59\u7f51\u7edc\u6765\u5224\u65ad\u662f\u5426\u9009\u4e86\u8be5\u8fb9\uff0c\u6240\u4ee5\u4ece\u51fa\u70b9\u5f00\u59cb\u641c\uff0c\u8fd9\u91cc\u5bb3\u6211\u8c03\u4e86\u4e00\u4e2a\u591a\u5c0f\u65f6\n}\n```\n\n",
        "postTime": 1566648956,
        "uid": 110985,
        "name": "\u8fb0\u661f\u51cc",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2770 \u3010\u822a\u7a7a\u8def\u7ebf\u95ee\u9898\u3011"
    },
    {
        "content": "\u6211\u4eec\u7684\u4efb\u52a1\u662f\u5728\u56fe\u4e0a\u627e\u4e24\u6761\u53ea\u5728\u8d77\u70b9\u548c\u7ec8\u70b9\u76f8\u4ea4\u7684\u8def\u5f84\u3002\n\n\u5c06\u70b9 $x$ \u62c6\u5206\u6210 $x_1,x_2$\u3002\u5bf9\u4e8e\u9664\u4e86\u8d77\u70b9\u548c\u7ec8\u70b9\u4e4b\u5916\u7684\u5176\u4ed6\u70b9\uff0c\u8fde $x_1 \\to x_2$\uff0c\u6d41\u91cf\u4e3a $1$\uff08\u53ea\u5141\u8bb8\u7ecf\u8fc7\u4e00\u6b21\uff09\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\u800c\u5bf9\u4e8e\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u8fde $x_1 \\to x_2$\uff0c\u6d41\u91cf\u4e3a $2$\uff08\u8981\u7ecf\u8fc7\u4e24\u6b21\uff09\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n\u5bf9\u4e8e $u \\to v$ \u8fd9\u6837\u4e00\u6761\u8def\u5f84\uff0c\u8fde\u4e00\u6761 $u_2 \\to v_1$\uff0c\u6d41\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\u3002\n\n\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\u3002\u5982\u679c\u6700\u5927\u6d41\u7b49\u4e8e $2$ \u5219\u6709\u89e3\u3002\u8d39\u7528\u5373\u4e3a\u7ecf\u8fc7\u7684\u57ce\u5e02\u6570\u3002\n\n\u7279\u522b\u5730\uff0c\u5f53\u6700\u5927\u6d41\u7b49\u4e8e $1$ \u65f6\uff0c\u53ef\u80fd\u5b58\u5728\u4e00\u6761 $s \\to t \\to s$ \u7684\u8def\u5f84\uff0c\u9700\u8981\u7279\u5224\u8fd9\u79cd\u60c5\u51b5\u3002\n\n\u8f93\u51fa\u65b9\u6848\u7684\u8bdd\uff0c\u76f4\u63a5\u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a DFS \u4e24\u6b21\u5bfb\u627e\u8def\u5f84\u5373\u53ef\u3002\u6ce8\u610f\u7b2c\u4e8c\u6b21 DFS \u7684\u65f6\u5019\u9700\u8981\u5012\u5e8f\u8f93\u51fa\u3002\n\n```cpp\n#include <cstring>\n#include <iostream>\n#include <string>\n#include <map>\n#include <queue>\n#define INF 0x3f3f3f3f\nusing namespace std;\nmap<string,int> m1;\nmap<int,string> m2;\nstruct edge\n{\n int v,w,c,next;\n}e[80005];\nstruct node\n{\n int v,e;\n}p[205];\nint head[205],dis[205],vis[205];\nint n,m,s,t,cnt=1,maxw,minf;\nvoid addedge(int u,int v,int w,int c)\n{\n e[++cnt].v=v;\n e[cnt].w=w;\n e[cnt].c=c;\n e[cnt].next=head[u];\n head[u]=cnt;\n}\nbool spfa()\n{\n queue<int> q;\n memset(dis,INF,sizeof(dis));\n dis[s]=0,vis[s]=1;\n q.push(s);\n while(!q.empty())\n {\n  int u=q.front();\n  q.pop();\n  vis[u]=0;\n  for(int i=head[u];i;i=e[i].next)\n   if(e[i].w&&dis[u]-e[i].c<dis[e[i].v])\n   {\n    dis[e[i].v]=dis[u]-e[i].c;\n    p[e[i].v].v=u;\n    p[e[i].v].e=i;\n    if(!vis[e[i].v])\n    {\n     vis[e[i].v]=1;\n     q.push(e[i].v);\n    }\n   }\n }\n return dis[t]!=INF;\n}\nvoid dfs1(int u)\n{\n vis[u]=1;\n cout<<m2[u-n]<<endl;\n for(int i=head[u];i;i=e[i].next)\n  if(e[i].v<=n&&!e[i].w)\n  {\n   dfs1(e[i].v+n);\n   break;\n  }\n}\nvoid dfs2(int u)\n{\n for(int i=head[u];i;i=e[i].next)\n  if(e[i].v<=n&&!vis[e[i].v+n]&&!e[i].w)\n   dfs2(e[i].v+n);\n cout<<m2[u-n]<<endl;\n}\nint main()\n{\n bool flag=false;\n cin>>n>>m;\n s=1,t=2*n;\n for(int i=1;i<=n;i++)\n {\n  string str;\n  cin>>str;\n  m1[str]=i;\n  m2[i]=str;\n  if(i==1||i==n)\n  {\n   addedge(i,i+n,2,0);\n   addedge(i+n,i,0,0);\n  }\n  else\n  {\n   addedge(i,i+n,1,0);\n   addedge(i+n,i,0,0);\n  }\n }\n for(int i=1;i<=m;i++)\n {\n  string s,t;\n  cin>>s>>t;\n  int u=m1[s],v=m1[t];\n  if(u==1&&v==n)flag=true;\n  addedge(u+n,v,1,1);\n  addedge(v,u+n,0,-1);\n }\n while(spfa())\n {\n  int minw=INF;\n  for(int i=t;i!=s;i=p[i].v)\n   minw=min(minw,e[p[i].e].w);\n  for(int i=t;i!=s;i=p[i].v)\n  {\n   e[p[i].e].w-=minw;\n   e[p[i].e^1].w+=minw;\n  }\n  maxw+=minw;\n  minf+=minw*dis[t];\n }\n if(maxw!=2&&!flag)cout<<\"No Solution!\"<<endl;\n else if(maxw!=2&&flag)\n {\n  cout<<2<<endl;\n  cout<<m2[1]<<endl<<m2[n]<<endl<<m2[1]<<endl;\n }\n else\n {\n  cout<<-minf<<endl;\n  dfs1(n+1);\n  dfs2(n+1);\n }\n return 0;\n}\n```\n",
        "postTime": 1578588369,
        "uid": 22030,
        "name": "StudyingFather",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2770 \u3010\u822a\u7a7a\u8def\u7ebf\u95ee\u9898\u3011"
    },
    {
        "content": "\u770b\u7f51\u4e0a\u7684\u9898\u89e3\u90fd\u662f\u7528\u7f51\u7edc\u6d41\u5199\u7684\u3002\u96be\u9053\u5c31\u6211\u4e00\u4e2a\u4eba\u60f3\u5230dp\u5417 qwq (\u9003\n\n\u3000**\u9898\u89e3\uff1a**\n\u3000\u3000\n  \t\n    \t\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u9898\u610f\u8f6c\u5316\u6210\u4ece\u6700\u5de6\u8fb9\u7684\u70b9\u8d70\u4e24\u6761\u4e0d\u76f8\u4ea4\u7684\u8def\u7ebf\u5230\u8fbe\u6700\u53f3\u8fb9\u7684\u70b9\uff0c\u4e14\u4f7f\u7ecf\u8fc7\u7684\u70b9\u6700\u591a\u3002\u6807\u7a0b\u662f\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u3002\n\n\t\t\u4e3a\u4e86\u9650\u6d41\uff0c\u6211\u4eec\u628a\u6bcf\u4e2a\u70b9i\u62c6\u6210\u4e24\u4e2a\u70b9xi,yi\uff0cx1->y1\u3001xn->yn\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a2\uff0c\u8d39\u7528\u4e3a1\u7684\u8fb9\uff0c\u5176\u4ed6\u70b9xi->yi\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a1\u7684\u8fb9\u3002\u82e5\u6709i->j\u53ef\u8fbe\uff08i<j\uff09\uff0c\u5219\u8fdeyi->xj\u3002\u6700\u540e\u6c42x1->yn\u7684\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\u3002\u82e5\u6700\u5927\u6d41\u7b49\u4e8e2\uff0c\u5219\u6709\u89e3\uff0c\u4e3a\u6700\u5927\u8d39\u7528-2\uff08\u56e0\u4e3a\u8d77\u70b9\u548c\u7ec8\u70b9\u91cd\u590d\u8ba1\u7b97\u4e86\uff09\uff1b\u5426\u5219\u65e0\u89e3\u3002\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u624b\u52a8\u5206\u5272\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n \n\t\t\u7136\u800c\uff0c\u5176\u5b9e\u8fd9\u9898\u8fd8\u6709\u53e6\u4e00\u79cd\u89e3\u6cd5\uff01\uff01\uff01\n\n\t\t\u6211\u4eec\u8bbedpi,j\u8868\u793a\u4e24\u6761\u8def\u7ebf\u5206\u522b\u8d70\u5230\u4e86i\u70b9\u548cj\u70b9\u3002\u4e14\u53ea\u5f80>max\uff08i,j\uff09\u7684\u70b9\u8f6c\u79fb\u3002\n\n\t\t\u6709\u540c\u5b66\u53ef\u80fd\u4f1a\u95ee\uff1a\u90a3\u5982\u679ci<j-1,\u800c\u4e14\uff08i+1,j\uff09\u8fd9\u4e2a\u72b6\u6001\u8981\u7531\uff08i,j\uff09\u8f6c\u79fb\u8fc7\u6765\u600e\u4e48\u529e\u5462\uff1f\n\n\t\t\u5176\u5b9e\u5b8c\u5168\u4e0d\u7528\u62c5\u5fc3\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\uff08i+1,j\uff09\u8fd9\u4e2a\u72b6\u6001\u53ef\u4ee5\u7531(i+1,j-x\uff09\u7684\u72b6\u6001\u8f6c\u79fb\u8fc7\u6765\u3002\n\n\t\t\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u60f3\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u6700\u7ec8\u7b54\u6848\u8981\u7ecf\u8fc7\u54ea\u4e9b\u70b9\uff0c\u7532\u548c\u4e59\u73b0\u5728\u540c\u65f6\u7ad9\u5728\u8d77\u70b9\uff0c\u5bf9\u4e8e\u4e0b\u4e00\u4e2a\u8981\u7ecf\u8fc7\u7684\u70b9\uff0c\u82e5\u5728\u7532\u7684\u8def\u7ebf\u4e0a\uff0c\u5c31\u8ba9\u7532\u8d70\u5230\u8be5\u70b9\uff0c\u5728\u4e59\u7684\u8def\u7ebf\u4e0a\u5c31\u8ba9\u4e59\u8d70\u5230\u8be5\u70b9\u3002\u6240\u4ee5\u53ea\u5f80\u6700\u53f3\u8fb9\u7684\u70b9\u7684\u53f3\u8fb9\u8d70\u4e5f\u662f\u53ef\u4ee5\u8d70\u51fa\u6700\u4f18\u89e3\u7684\u3002\n        \n ```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<map>\n#define LL long long\n#define RI register int\nusing namespace std;\nconst int INF = 0x7ffffff ;\nconst int N = 100 + 10 ;\n\ninline int read() {\n\tint k = 0 , f = 1 ; char c = getchar() ;\n\tfor( ; !isdigit(c) ; c = getchar())\n\t  if(c == '-') f = -1 ;\n\tfor( ; isdigit(c) ; c = getchar())\n\t  k = k*10 + c-'0' ;\n\treturn k*f ;\n}\nint n, m ; bool road[N][N] ; int dp[N][N], pre[N][N], typ[N][N], hh[N], gg[N] ; \nmap<int,string>p ;\nmap<string,int>pp ;\n\nint dfs(int x,int y) {  // \u627e\u6700\u4f18\u89e3 \n\tif(dp[x][y]) return dp[x][y] ;\n\tif(x+y == 1) return 0 ; \n\tint mm = min(x,y) ;\n\tfor(int i=0;i<mm;i++) {\n\t\tif(road[i][x]) {\n\t\t\tdp[y][x] = dp[x][y] = max(dp[x][y],dfs(i,y)+1) ;\n\t\t}\t\t\n\t\tif(road[i][y]) {\n\t\t\tdp[y][x] = dp[x][y] = max(dp[x][y],dfs(i,x)+1) ;\n\t\t}\t\n\t}\n\tif(!dp[x][y]) return -INF ;  // \u8fd4\u56de\u8d1f\u65e0\u7a77\u5f88\u5173\u952e\uff0c\u4e0d\u7136\u82e5\u4ece\uff081\uff0cx\uff09[x>1]\u51fa\u53d1\u8d70\u7684\u70b9\u66f4\u591a\u7684\u8bdd\u6700\u540e\u7edf\u8ba1\u7684\u7b54\u6848\u5c31\u4f1a\u51fa\u9519 \n\treturn dp[x][y] ;\n}\nint tot = 0 ;\nvoid dfss(int x,int y) {  // \u5bfb\u627e\u65b9\u6848 \n\thh[++tot] = x, gg[tot] = y ;\n\tif(x+y == 1) return ;\n\tint mm = min(x,y) ;\n\tfor(int i=0;i<mm;i++) {\n\t\tif(dp[i][y] == dp[x][y]-1 && road[i][x]) {  // \u4e0d\u80fd\u53ea\u5224\u65addp\u503c\uff0c\u53ea\u6709i,x\u4e24\u4e2a\u70b9\u8054\u901a\u624d\u80fd\u4ece\uff08i,y)\u8f6c\u79fb \n\t\t\tdfss(i,y) ; return ;\n\t\t}\n\t\tif(dp[x][i] == dp[x][y]-1 && road[i][y]) {\n\t\t\tdfss(x,i) ; return ;\n\t\t}\n\t}\n}\n\n\nint main() {\n\tn = read(), m = read() ; string s ;\n\tfor(int i=1;i<=n;i++) {\n\t\tcin>>s ; p[i] = s ; pp[s] = i ;\n\t}\n\tfor(int i=1;i<=m;i++) {\n\t\tstring s1, s2 ; cin>>s1>>s2 ;\n\t\tint x = pp[s1], y = pp[s2] ;\n\t\troad[x][y] = road[y][x] = 1 ;\n\t\tif(x == 1) road[0][y] = road[y][0] = 1 ;\n\t\telse if(y == 1) road[0][x] = road[x][0] = 1 ;\n\t}\n\tdfs(n,n) ;\n\tif(!dp[n][n]) { printf(\"No Solution!\") ; return 0 ; }\n\tprintf(\"%d\\n\",dp[n][n]) ;\n\tfor(int i=1;i<n;i++) if(dp[i][n] == dp[n][n]-1) { dfss(i,n) ; break ; }\n\tsort(hh+1,hh+tot+1) ; sort(gg+1,gg+tot+1) ;\n\tint sz1 = unique(hh+1,hh+tot+1) - (hh+1) ;\n\tint sz2 = unique(gg+1,gg+tot+1) - (gg+1) ;\n\tcout<<p[1]<<\"\\n\" ;\n\tfor(int i=1;i<=sz1;i++) if(hh[i] > 1) cout<<p[hh[i]]<<\"\\n\" ;\n\tfor(int i=sz2;i;i--) if(gg[i] > 1) cout<<p[gg[i]]<<\"\\n\" ; cout<<p[1]<<\"\\n\" ;\n\treturn 0 ;\n}\n```\n\n\uff08~~\u6211\u624d\u4e0d\u4f1a\u8bf4\u6211\u662f\u56e0\u4e3a\u60f3\u4e0d\u51fa\u600e\u4e48\u5efa\u6a21\u624d\u5199\u7684dp qwq~~\uff09",
        "postTime": 1522553131,
        "uid": 27388,
        "name": "zubizakeli",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2770 \u3010\u822a\u7a7a\u8def\u7ebf\u95ee\u9898\u3011"
    },
    {
        "content": "# \u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\n\n\u9898\u610f\u5373\u662f\u6c421~n\u7684\u4e24\u6761\u4e0d\u76f8\u4ea4\u8def\u5f84\uff0c\u4f7f\u5f97\u8def\u5f84\u7ecf\u8fc7\u7684\u70b9\u603b\u6570\u6700\u591a\u3002\n\n\u7531\u4e8e\u822a\u7ebf\u4e0d\u80fd\u91cd\u53e0\uff0c\u6240\u4ee5\u6bcf\u4e2a\u70b9\u53ea\u80fd\u7ecf\u8fc7\u4e00\u6b21(\u6700\u540e\u4e00\u4e2a\u70b9\u548c\u7b2c\u4e00\u4e2a\u70b9\u6700\u591a\u4e24\u6b21)\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u6ee1\u8db3\u8fd9\u4e2a\u8981\u6c42\u7684\u56fe\u6c42\u4e00\u6b21\u6700\u5927\u6d41\uff0c\u5f97\u5230\u7684\u80af\u5b9a\u662f\u6d41\u91cf\u5c0f\u4e8e\u7b49\u4e8e2\u7684\u6d41\u3002\n\n\u8fd9\u6837\uff0c\u6839\u636e\u6ee1\u6d41\u7684\u8fb9\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\u5230\u5e95\u8fd9\u4e2a\u6d41\u5bf9\u5e94\u7684\u7ecf\u8fc7\u4e86\u54ea\u51e0\u4e2a\u70b9\u3002\n\n\u53c8\u56e0\u4e3a\u8981\u6c42\u70b9\u6570\u6700\u591a\uff0c\u6211\u4eec\u6c42\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n(\u4ee3\u7801\u8f83\u4e3a\u5197\u957f\u53ef\u80fd\u6ca1\u6709\u4ec0\u4e48\u53c2\u8003\u4ef7\u503c)\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <map>\n\n#define MX 80001\n#define oo 12312312\n#define S 1\n#define T (n<<1)\n\nusing namespace std;\n\ntypedef struct edge_t\n{\n\tint u,v,c,w;\n}edge;\nedge e[MX];\nint fst[MX],nxt[MX],lnum;\nint n,m,check;\nmap<string,int>mp;\nstring name[1001];\n\nvoid addeg(int nu,int nv,int nc,int nw)\n{\n\tnxt[++lnum]=fst[nu];\n\tfst[nu]=lnum;\n\te[lnum]=(edge){nu,nv,nc,nw};\n}\n\nvoid input()\n{\n\tstring str1,str2;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>str1;\n\t\tmp[str1]=i;\n\t\tname[i]=str1;\n\t\taddeg(i,n+i,1,1);\n\t\taddeg(n+i,i,0,-1);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>str1>>str2;\n\t\tint a=mp[str1],b=mp[str2];\n\t\tif(a>b)swap(a,b);\n\t\tif(a==1&&b==n)check=1;\n\t\taddeg(a+n,b,1,1),addeg(b,a+n,0,-1);\n\t}\n\taddeg(1,n+1,1,1),addeg(n+1,1,0,-1);\n\taddeg(n,n*2,1,1),addeg(n*2,n,0,-1);\n}\n\nvoid init()\n{\n\tmemset(fst,0xff,sizeof(fst));\n\tlnum=-1;\n}\n\nint q[MX],pre[MX],dis[MX],inq[MX];\nint spfa(int *flow,int *cost)\n{\n\tint h=0,t=1,x,y;\n\tmemset(dis,0x9f,sizeof(dis));\n\tmemset(inq,0,sizeof(inq));\n\tmemset(pre,0,sizeof(pre));\n\tq[++h]=S;\n\tdis[S]=0;\n\tpre[S]--;\n\tinq[S]=1;\n\twhile(h>=t)\n\t{\n\t\tx=q[(t++)%MX];\n\t\tinq[x]=0;\n\t\tfor(int i=fst[x];i!=-1;i=nxt[i])\n\t\t{\n\t\t\ty=e[i].v;\n\t\t\tif(e[i].c&&dis[y]<dis[x]+e[i].w)\n\t\t\t{\n\t\t\t\tdis[y]=dis[x]+e[i].w;\n\t\t\t\tpre[y]=i;\n\t\t\t\tif(!inq[y])\n\t\t\t\t{\n\t\t\t\t\tq[(++h)%MX]=y;\n\t\t\t\t\tinq[y]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(dis[T]<0)return 0;\n\tint now=pre[T],mxf=+oo,cst=0;\n\twhile(now!=-1)\n\t{\n\t\tmxf=min(mxf,e[now].c);\n\t\tcst+=e[now].w;\n\t\tnow=pre[e[now].u];\n\t}\n\tnow=pre[T];\n\twhile(now!=-1)\n\t{\n\t\te[now].c-=mxf;\n\t\te[now^1].c+=mxf;\n\t\tnow=pre[e[now].u];\n\t}\n\t*flow+=mxf;\n\t*cost+=cst*mxf;\n\treturn 1;\n}\n\nint ans[1001];int anum=0;\nvoid out(int x)\n{\n\tans[++anum]=x;\n\tfor(int i=fst[x];i!=-1;i=nxt[i])\n\t\tif(e[i].c==0&&e[i].w>=0)\n\t\t{\n\t\t\tout(e[i].v);\n\t\t\te[i].c=1;\n\t\t\treturn;\n\t\t}\n}\n\nint main()\n{\n\tint cost=0,flow=0;\n\tinit();\n\tinput();\n\twhile(spfa(&flow,&cost));\n\tif(flow==0||(flow==1&&!check)){printf(\"No Solution!\\n\");return 0;}\n\telse if(flow==1&&(flow==1&&check)){cout<<2<<endl<<name[1]<<endl<<name[n]<<endl<<name[1]<<endl;return 0;}\n\telse\n\t{\n\t\tprintf(\"%d\\n\",cost/2-1);\n\t\tout(S);\n\t\tfor(int i=1;i<=anum;i++)if(ans[i]<=n)cout<<name[ans[i]]<<endl;\n\t\tanum=0;\n\t\tout(S);\n\t\tfor(int i=anum-2;i>=1;i--)if(ans[i]<=n)cout<<name[ans[i]]<<endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1512027867,
        "uid": 41155,
        "name": "totorato",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2770 \u3010\u822a\u7a7a\u8def\u7ebf\u95ee\u9898\u3011"
    },
    {
        "content": "## \u822a\u7a7a\u8def\u7ebf\u95ee\u9898\n\ntag\uff1a\u6bcf\u4e2a\u70b9\u53ea\u80fd\u7ecf\u8fc7\u4e00\u6b21\n\n\u89e3\u51b3\u65b9\u6848\uff1a\u62c6\u70b9\n\n\u9006\u5411\u601d\u7ef4\u4e00\u4e0b\uff1a\u4ece\u897f\u5230\u4e1c\u7684\u4e00\u6761\u8def\u5f84==\u4ece\u4e1c\u5230\u897f\u7684\u4e00\u6761\u8def\u5f84\n\n\u90a3\u4e48\u9898\u76ee\u5c31\u8f6c\u5316\u6210\u4e86\uff1a\u627e\u51fa\u4ece\u4e1c\u5411\u897f\u4e24\u6761\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84\u3002\n\n$Q$:\u70b9\u6700\u591a\uff1f\n\n$A$:\u90a3\u5c31\u8d39\u7528\u6d41\u5440\u3002\n\n$Q$:\u53ea\u80fd\u4e24\u6761\u8def\u5f84\uff1f\n\n$A$:\u90a3\u5c31\u62c6\u8d77\u70b9$S->S'$,\u8fb9\u6743\u4e3a2\uff0c\u8d39\u7528\u4e3a0\u3002\n\n> \u8fde\u8fb9\u6307\u5357\uff1a\n\n> add(x,x',1);\n\n> add(x',y,1);\n\n> add(S,S',2);\n\n$Q$:\u8f93\u51fa\u65b9\u6848\uff1f\n\n$A$:$dfs$\u4e24\u6b21\u3002\n\n$Q$:\u57ce\u5e02\u540d\u79f0\u600e\u4e48\u5904\u7406\uff1f\n\n$A$:```map```\u4e00\u4e0b\n\n$Q$:\u4ee3\u7801\uff1f\n\n$A$:\u6ca1\u6709\uff01\n\n$Q$:\u90a3\u4f60\u9505\u4e86\u600e\u4e48\u529e\uff1f\n\n$A$:\u79c1\u4fe1!$uid:81372$",
        "postTime": 1564014750,
        "uid": 81372,
        "name": "guodong",
        "ccfLevel": 0,
        "title": "\u822a\u7a7a\u8def\u7ebf\u95ee\u9898"
    },
    {
        "content": "\u6253\u5e7f\u544a\uff1a[blog](https://www.cnblogs.com/bztMinamoto/p/9508234.html)\n\n\u611f\u89c9\u697c\u4e0b\u5927\u4f6c\u4eec\u8bf4\u7684\u597d\u7b80\u6d01\u2026\u2026\n\n\u5b8c\u4e86\u8fd9\u9898\u597d\u5389\u5bb3\u2026\u2026\u5b57\u7b26\u4e32\u4ec0\u4e48\u7684\u597d\u9ebb\u70e6\u2026\u2026\n\n\u8981\u6c42\u4ece$1$\u5230$n$\u7684\u8def\u5f84\uff0c\u4e0d\u91cd\u590d\uff0c\u7ecf\u8fc7\u8fb9\u6570\u6700\u591a\n\n\u6bcf\u4e00\u4e2a\u70b9\u62c6\u6210\u4e24\u4e2a\uff0c$A_i,B_i$\uff0c\u7136\u540e$A_i$\u5230$B_i$\u8fde\u5bb9\u91cf\u4e3a$1$\uff0c\u8d39\u7528\u4e3a$1$\u7684\u8fb9\uff0c\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u53ea\u88ab\u9009\u4e00\u6b21\n\n\u7136\u540e$1$\u548c$n$\u7684\u8bdd\u8981\u5bb9\u91cf\u4e3a$2$\n\n\u7136\u540e\u6709\u8fde\u8fb9\u7684\u8bdd\uff0c$B_i$\u5411$A_j$\u8fde\u8fb9\uff0c\u5bb9\u91cf$1$\uff0c\u8d39\u7528$1$\n\n\u8981\u9009\u7684\u70b9\u6700\u591a\uff0c\u90a3\u4e48\u5c31\u662f\u8981\u8d39\u7528\u6700\u5927\uff0c\u6240\u4ee5\u8dd1\u4e00\u4e2a\u6700\u5927\u8d39\u7528\u6d41\n\n\u7136\u540e\u627e\u65b9\u6848\u7684\u8bdd\uff0c\u76f4\u63a5dfs\uff0c\u7136\u540e\u6b63\u7740\u548c\u5012\u7740\u8f93\u51fa\n\n\u6709\u51e0\u4e2a\u7ec6\u8282\uff0c\u5199\u5728\u4ee3\u7801\u91cc\u4e86\n```\n//minamoto\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<map>\n#define inf 0x3f3f3f3f\nusing namespace std;\nconst int N=5005,M=500005;\nint ver[M],Next[M],head[N],edge[M],flow[M],tot=1;\nint dis[N],disf[N],Pre[N],last[N],vis[N],maxflow,maxcost;\nint n,m,s,t;bool check=0;\nqueue<int> q;\nmap<string,int> mp;\nstring name[N];\ninline void add(int u,int v,int f,int e){\n\tver[++tot]=v,Next[tot]=head[u],head[u]=tot,flow[tot]=f,edge[tot]=e;\n\tver[++tot]=u,Next[tot]=head[v],head[v]=tot,flow[tot]=0,edge[tot]=-e;\n}\nbool spfa(){\n\tmemset(dis,0xef,sizeof(dis));\n\tq.push(s),dis[s]=0,disf[s]=inf,Pre[t]=-1;\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();vis[u]=0;\n\t\tfor(int i=head[u];i;i=Next[i]){\n\t\t\tint v=ver[i];\n\t\t\tif(flow[i]&&dis[v]<dis[u]+edge[i]){\n\t\t\t\tdis[v]=dis[u]+edge[i],last[v]=i,Pre[v]=u;\n\t\t\t\tdisf[v]=min(disf[u],flow[i]);\n\t\t\t\tif(!vis[v]) vis[v]=1,q.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn ~Pre[t];\n}\nvoid dinic(){\n\twhile(spfa()){\n\t\tint u=t;maxflow+=disf[t],maxcost+=disf[t]*dis[t];\n\t\twhile(u!=s){\n\t\t\tflow[last[u]]-=disf[t];\n\t\t\tflow[last[u]^1]+=disf[t];\n\t\t\tu=Pre[u];\n\t\t}\n\t}\n}\nint ans[1005];int num=0;\nvoid out(int u){\n\tans[++num]=u;\n\tfor(int i=head[u];i;i=Next[i]){\n\t\tif(flow[i]==0&&edge[i]>=0){\n\t\t\tout(ver[i]);\n\t\t\tflow[i]=1;\n\t\t\treturn;\n\t\t}\n\t}\n}\nint main(){\n\t//freopen(\"testdata.in\",\"r\",stdin);\n\tstring s1,s2;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i){\n\t\tcin>>s1;\n\t\tmp[s1]=i;\n\t\tname[i]=s1;\n\t\tadd(i,i+n,1,1);\n\t}\n\tfor(int i=1;i<=m;++i){\n\t\tcin>>s1>>s2;\n\t\tint a=mp[s1],b=mp[s2];\n\t\tif(a>b) swap(a,b);\n\t\tif(a==1&&b==n) check=1;\n\t\tadd(a+n,b,1,1);\n\t}\n\tadd(1,n+1,1,1),add(n,n+n,1,1);\n\ts=1,t=n+n;\n\tdinic();\n\tif(!maxflow||(maxflow==1&&!check)) return puts(\"No Solution!\"),0;\n\tif(maxflow==1&&check){cout<<2<<'\\n'<<name[1]<<'\\n'<<name[n]<<'\\n'<<name[1]<<'\\n';return 0;}\n\tprintf(\"%d\\n\",maxcost/2-1);\n\t//\u8fd9\u91cc\u7684\u6700\u591a\u57ce\u5e02\u6570\u662f\u8fd9\u4e2a\n\t//\u56e0\u4e3a\u8003\u8651\u5982\u679c\u8fb9\u8fde\u6210\u4e00\u4e2a\u73af\uff0c\u8fb9\u6570\u7b49\u4e8e\u70b9\u6570\n\t//\u7136\u540e\u6bcf\u4e2a\u70b9\u62c6\u6210\u4e24\u4e2a\uff0c\u9664\u4ee5\u4e8c\n\t//\u7136\u540e\u56e0\u4e3as'\u548ct'\u88ab\u91cd\u590d\u4e86\u4e24\u6b21\uff0c\u51cf\u53bb1 \n\tout(s);\n\tfor(int i=1;i<=num;++i) if(ans[i]<=n) cout<<name[ans[i]]<<'\\n';\n\tnum=0;\n\tout(s);\n\tfor(int i=num-2;i;--i) if(ans[i]<=n) cout<<name[ans[i]]<<'\\n';\n\t//\u6700\u540e\u4e24\u4e2a\u80af\u5b9a\u662ft\u548ct'\uff0c\u4e0d\u7528\u7ba1 \n\treturn 0;\n}\n```",
        "postTime": 1534771607,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2770 \u3010\u822a\u7a7a\u8def\u7ebf\u95ee\u9898\u3011"
    },
    {
        "content": "**upd\uff1a\u4ee3\u7801\u5df2\u7ecf\u66f4\u6539\uff0c\u5e94\u8be5\u6ca1\u6709\u9519\u4e86\u5427\u2026\u2026\u6211\u597d\u83dc\u554a**\n\n**\u524d\u7f6e\u6280\u80fd**\uff1aHDU3376 Matrix Again\n\n\u6240\u4ee5\u770b\u5230\u8fd9\u4e2a\u9898\uff0c\u6211\u4eec\u4e5f\u4f1a\u60f3\u7740\u7528\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u89e3\u51b3\uff0c\u56e0\u4e3a\u4ece\u8d77\u70b9\u98de\u5230\u7ec8\u70b9\u518d\u98de\u56de\u6765\uff0c\u5c31\u7b49\u4e8e\u4ece\u8d77\u70b9\u98de\u4e24\u6b21\u5230\u7ec8\u70b9\u4e14\u8fd9\u4e24\u6b21\u98de\u884c\u9664\u4e86\u8d77\u70b9\u7ec8\u70b9\u4e4b\u5916\u6ca1\u6709\u8bbf\u95ee\u8d85\u8fc7\u4e00\u6b21\u7684\u70b9\u3002\n\n\n\u8003\u8651\u62c6\u70b9\u9650\u6d41\uff0c\u9664\u8d77\u70b9\u7ec8\u70b9\u4ee5\u5916\u7684\u70b9\u5bb9\u91cf\u662f1\uff08\u82b1\u8d39\u4ee3\u8868\u8fb9\u6743\uff09\uff0c\u8d77\u70b9\u7ec8\u70b9\u5bb9\u91cf\u662f2\u3002\n\n\n\u8f93\u51fa\u65b9\u6848\u7684\u8bdd\uff0c\u6211\u662fdfs\u4e24\u904d\u627e\u51fa\u4e24\u6761\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u8def\u5f84\uff0c\u7136\u540e\u5206\u522b\u6b63\u7740\u5012\u7740\u8f93\u51fa\u3002\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <string>\n#include <queue>\n#include <map>\nusing namespace std;\nint n, m, hea[205], cnt, uu, vv, minCost, ss, tt, dis[205], pre[205], maxFlow;\nint opt[2][105], tot[2];\nconst int oo=0x3f3f3f3f;\nbool vis[205];\nqueue<int> d;\nstring qaq, qwq, ovo[105];\nmap<string,int> a;\nstruct Edge{\n\tint too, nxt, val, cst;\n}edge[40005];\nvoid add_edge(int fro, int too, int val, int cst){\n\tedge[cnt].nxt = hea[fro];\n\tedge[cnt].too = too;\n\tedge[cnt].val = val;\n\tedge[cnt].cst = cst;\n\thea[fro] = cnt++;\n}\nvoid addEdge(int fro, int too, int val, int cst){\n\tadd_edge(fro, too, val, cst);\n\tadd_edge(too, fro, 0, -cst);\n}\nbool spfa(){\n\tmemset(dis, 0x3f, sizeof(dis));\n\tmemset(pre, -1, sizeof(pre));\n\td.push(ss);\n\tvis[ss] = true;\n\tdis[ss] = 0;\n\twhile(!d.empty()){\n\t\tint x=d.front();\n\t\td.pop();\n\t\tvis[x] = false;\n\t\tfor(int i=hea[x]; i!=-1; i=edge[i].nxt){\n\t\t\tint t=edge[i].too;\n\t\t\tif(dis[t]>dis[x]+edge[i].cst && edge[i].val>0){\n\t\t\t\tdis[t] = dis[x] + edge[i].cst;\n\t\t\t\tpre[t] = i;\n\t\t\t\tif(!vis[t]){\n\t\t\t\t\tvis[t] = true;\n\t\t\t\t\td.push(t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[tt]!=oo;\n}\nvoid mcmf(){\n\twhile(spfa()){ \n\t\tint tmp=oo;\n\t\tfor(int i=pre[tt]; i!=-1; i=pre[edge[i^1].too])\n\t\t\ttmp = min(tmp, edge[i].val);\n\t\tfor(int i=pre[tt]; i!=-1; i=pre[edge[i^1].too]){\n\t\t\tedge[i].val -= tmp;\n\t\t\tedge[i^1].val += tmp;\n\t\t\tminCost += tmp * edge[i].cst;\n\t\t}\n\t\tmaxFlow += tmp;\n\t}\n}\nvoid dfs(int x, int o){\n\topt[o][++tot[o]] = x;\n\tfor(int i=hea[x]; i!=-1; i=edge[i].nxt){\n\t\tint t=edge[i].too;\n\t\tif(i&1)\tcontinue;\n\t\tif(edge[i^1].val){\n\t\t\tedge[i^1].val--;\n\t\t\tdfs(t, o);\n\t\t\treturn ;\n\t\t}\n\t}\n}\nint main(){\n\tmemset(hea, -1, sizeof(hea));\n\tcin>>n>>m;\n\tfor(int i=1; i<=n; i++){\n\t\tcin>>qaq;\n\t\tovo[i] = qaq;\n\t\ta[qaq] = i;\n\t}\n\tss = 0; tt = 2 * n + 1;\n\taddEdge(ss, 1, 2, 0);\n\taddEdge(2*n, tt, 2, 0);\n\taddEdge(1, 1+n, 1, -1);\n\taddEdge(n, n+n, 1, -1);\n\tfor(int i=1; i<=m; i++){\n\t\tcin>>qaq>>qwq;\n\t\tuu = a[qaq]; vv = a[qwq];\n\t\tif(uu>vv)\tswap(uu, vv);\n\t\taddEdge(uu+n, vv, oo, 0);\n\t}\n\tfor(int i=1; i<=n; i++)\n\t\taddEdge(i, i+n, 1, -1);\n\tmcmf();\n\tif(maxFlow==0){\n\t\tcout<<\"No Solution!\"<<endl;\n\t\treturn 0;\n\t}\n\tcout<<(-minCost-2)<<endl;\n\tdfs(1, 0);\n\tdfs(1, 1);\n\tfor(int i=1; i<=tot[0]; i++)\n\t\tif(opt[0][i]>=1 && opt[0][i]<=n)\n\t\t\tcout<<ovo[opt[0][i]]<<endl;\n\tbool flag=false;\n\tfor(int i=tot[1]; i>=1; i--)\n\t\tif(opt[1][i]>=1 && opt[1][i]<=n){\n\t\t\tif(!flag){\n\t\t\t\tflag = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcout<<ovo[opt[1][i]]<<endl;\n\t\t}\n\treturn 0;\n}\n```",
        "postTime": 1516752421,
        "uid": 44733,
        "name": "poorpool",
        "ccfLevel": 0,
        "title": "\u822a\u7a7a\u8def\u7ebf\u95ee\u9898"
    }
]