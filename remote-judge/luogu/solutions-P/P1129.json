[
    {
        "content": "\u770b\u5230\u4e0b\u9762\u90fd\u6709\u8be6\u7ec6\u7684\u4ee3\u7801\u4e5f\u6ca1\u4ec0\u4e48\u53ef\u89e3\u91ca\u7684\uff0c\u8bf4\u4e00\u4e0b\u63a8\u5bfc\u8fc7\u7a0b\u5427\n\n\u6700\u7ec8\u72b6\u6001\u662f\uff081,1\uff09\uff082\uff0c2\uff09...(n,n)\u90fd\u6709\u4e00\u4e2a\u70b9\n\n\u6211\u4eec\u628a\u70b9\u770b\u6210\u5339\u914d\u8fb9\u7684\u8bdd\uff0c\u5c31\u662f\u6bcf\u884c\u548c\u6bcf\u5217\u90fd\u505a\u5230\u4e86\u5339\u914d\n\n\u6362\u8a00\u4e4b\u5c31\u662fN\u4e2a\u884c\u548cN\u4e2a\u5217\u90fd\u6709\u5339\u914d\u65f6\uff0c\u4e00\u5b9a\u80fd\u8f6c\u6362\u6210\u6700\u7ec8\u72b6\u6001\n\n\u6240\u4ee5\u5c31\u5982S\u5411\u6bcf\u884c\u6240\u5bf9\u5e94\u7684\u70b9\u8fde\u8fb9\uff0c\u6bcf\u5217\u6240\u5bf9\u5e94\u7684\u70b9\u5411T\u8fde\u8fb9\n\n\u6bcf\u4e2a1\u7684\u5757\u5c31\u662f\u67d0\u884c\u548c\u67d0\u5217\u7684\u8fb9\n\n\u518d\u9006\u8fc7\u6765\u8f6c\u6362\u5230\u521d\u59cb\u72b6\u6001\uff0c\u6211\u4eec\u53d1\u73b0\u4ea4\u6362\u884c\u672c\u8d28\u5c31\u662f\u4ea4\u6362S\u5411\u8fd9\u4e24\u884c\u8fde\u7684\u8fb9\uff0c\u6240\u4ee5\u5339\u914d\u6570\u4e0d\u53d8\n\n\u540c\u7406\u4ea4\u6362\u5217\u4e5f\u662f\n\n\u6240\u4ee5\u53ea\u8981\u6309\u7167\u6700\u521d\u72b6\u6001\u5efa\u4e8c\u5206\u56fe\u8dd1\u6700\u5927\u6d41\uff0c\u5c31\u662f\u53ef\u80fd\u7684\u6700\u7ec8\u72b6\u6001\u7684\u6700\u5927\u6d41\n\n\u5f53\u4e14\u4ec5\u5f53\u6700\u5927\u6d41\u662fN\u7684\u65f6\u5019\u53ef\u4ee5\u8f6c\u6362\u5230\u6700\u7ec8\u72b6\u6001\n",
        "postTime": 1502006055,
        "uid": 25508,
        "name": "Night_Aurora",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "## \u8be6\u8c08\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u89e3\u6cd5 \u548c \u7f51\u7edc\u6d41 Dinic\u89e3\u6cd5\n#### 1.\u9898\u76ee\u5206\u6790\n#### 2.\u5308\u7259\u5229\u4e8c\u5206\u56fe\u5339\u914d\u89e3\u6cd5\n#### 3.Dinic\u7f51\u7edc\u6d41\u89e3\u6cd5\n\n\n------------\n\n## 1.\u9898\u76ee\u5206\u6790\n\n\u7531\u9898\u610f\u5f97\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9**\u4efb\u610f\u4e24\u884c**\u6216**\u4e24\u5217**\u8fdb\u884c\u4ea4\u6362\u64cd\u4f5c\u3002\u521d\u770b\u4f3c\u4e4e\u6ca1\u6709\u5934\u7eea\uff0c\u90a3\u5148\u6765\u5206\u6790\u4e00\u7ec4\u7b80\u5355\u6570\u636e\u3002\n\n```\n1\n0 0 1\n1 0 0\n0 1 0\n```\n\u6211\u4eec\u8003\u8651\u5c06\u6bcf\u4e00\u884c\u7684**\u884c\u6570**\u4e0e\u8be5\u884c**\u9ed1\u8272\u65b9\u5757**\u6240\u5728\u7684**\u5217\u6570**\u8fde\u4e00\u6761\u8fb9\u3002\n\n\u7136\u540e\u53ef\u4ee5\u5c06\u5b83\u8fdb\u884c\u5982**\u4e0b\u56fe**\u7684\u53d8\u5316\u5f97\u5230\u7b54\u6848\n\n![](http://wx1.sinaimg.cn/mw690/007BSLUzgy1fzj2ax77kuj30ro0n6jte.jpg)\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c**\u53f3\u56fe**\u4e2d\u7684**\u6bcf\u4e00**\u884c\u5217\u90fd**\u81f3\u5c11**\u6709\u4e00\u4e2a\u7b26\u5408\u7684\u5339\u914d\uff08\u663e\u7136\uff09\u3002\n\n\u8fdb\u800c\u6211\u4eec\u601d\u8003\uff0c\u662f\u5426\u662f**\u6bcf\u4e00\u884c\u5217**\u81f3\u5c11\u5b58\u5728\u4e00\u7ec4\u5408\u6cd5\u5339\u914d\u7684\u56fe\u5f62\u5408\u6cd5\u5462\uff1f\n#### \u7b54\u6848\u662f\u7684\n\n\u56e0\u4e3a\u4efb\u610f\u4e24\u884c\u6216\u8005\u4efb\u610f\u4e24\u5217\u4e4b\u95f4\u7684\u4ea4\u6362\u90fd\u4e0d\u4f1a\u7834\u574f\u4ed6\u4eec\u7684**\u5e73\u8861\u6027**\u3002\n#### \u4e5f\u5c31\u662f\u8bf4\uff0c\u4efb\u610f2\u4e2a\u9ed1\u8272\u65b9\u5757\uff0c\u5982\u679c\u5b83\u4eec\u521d\u59cb\u72b6\u6001\u65f6\u4e0d\u5728\u540c\u4e00\u884c\uff08\u5217\uff09\uff0c\u90a3\u4e48\u65e0\u8bba\u5982\u4f55\u4ea4\u6362\uff0c\u5b83\u4eec\u90fd\u4e0d\u4f1a\u5728\u540c\u4e00\u884c\uff08\u5217\uff09\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7b2c\u4e00\u79cd\u89e3\u6cd5 \u5308\u7259\u5229\u4e8c\u5206\u56fe\u5339\u914d\u89e3\u6cd5\u3002\n\n\n------------\n\n## 2.\u5308\u7259\u5229\u4e8c\u5206\u56fe\u5339\u914d\u89e3\u6cd5\n\n\n\u7ecf\u8fc7\u4e0a\u8ff0\u5206\u6790\uff0c\u4ea4\u6362\u64cd\u4f5c\u5e76**\u4e0d\u4f1a**\u5f71\u54cd\u56fe\u7684**\u6700\u5927\u5339\u914d**\uff0c\u6211\u4eec\u53ea\u9700\u5224\u65ad**\u6bcf\u4e00\u884c\u662f\u5426\u90fd\u53ef\u4ee5\u5408\u6cd5\u5339\u914d**\u5373\u53ef\u3002\n\n\u90a3\u4e48\u663e\u7136\u662f\u4e00\u9053\u677f\u5b50\u4f3c\u7684**\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d**\u3002\n\n**AC\u4ee3\u7801\uff1a**\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst  int  N = 400 + 15 ;//\u7a0d\u5fae\u5f00\u5927\u4e00\u70b9\u3002\n\nint  head[ N*N ] , to [ N*N ] , next[ N*N ] , tot = 1 ,ans = 0  ;\n\nint  match[ N ] ,  visit[ N ] , n , T  ;\n\ninline int read() //\u5feb\u8bfb\n{\n    int s = 0,w = 1;\n    char g = getchar();\n    while(g<'0'||g>'9'){if(g=='-')w*=-1;g = getchar();}\n    while(g>='0'&&g<='9'){s = s*10+g-'0';g = getchar();}\n    return s*w;\n}\n\nvoid  add( int  x , int  y ){ //\u524d\u5411\u661f\u5efa\u8fb9\n    tot++ ;\n    to[ tot ] = y ;\n    next[ tot ] = head[ x ] ;\n    head[ x ] = tot ;\n}\n\nbool  dfs( int  x ){ //\u5339\u914d\n    for( int  i = head[ x ] , y  ; i ; i = next[ i ] )\n        if( !visit[ y = to[ i ] ] ){\n            visit[ y ] = 1 ;\n            if( !match[ y ] || dfs(match[ y ] ) ){\n                match[ y ] = x ; return true ;\n            }\n        }\n    return  false ;\n}\n\nvoid  clear(){ //\u591a\u7ec4\u6570\u636e\uff0c\u6e05\u96f6\u521d\u59cb\u5316\n    T-- ;\n    ans = 0 ; \n    for( int  i = 1 ; i<= tot ; i++ )   //\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u907f\u514dmemset()\u6d6a\u8d39\u8fc7\u591a\u65f6\u95f4\n        to[ i ] = head[ i ] = next[ i ] = 0 ;\n    tot = 1 ;\n    for( int  i = 1 ; i <= 2*n ; i++ ){\n        match[ i ] = 0 ;\n    }\n}\n\nint  main()\n{\n    T = read() ;\n    while( T != 0 ){\n        n = read() ;\n        for( int  i = 1 ; i <= n ; i++)\n            for( int  j = 1 ;  j <= n ; j++ ){//\u8bfb\u5165\u5e76\u5efa\u8fb9\n                int  m1 = read() ;\n                if( m1 == 1 )\n                    add( i , j + n ) ;\n            }\n        for( int  i = 1 ; i <= n ; i++ ){\n            memset( visit , 0 , sizeof(visit) ) ;\n            if( dfs(i) )ans ++ ;\n        }\n        if( ans >= n )printf(\"Yes\\n\");//\u6709\u8db3\u591f\u7684\u5339\u914d\n        else printf(\"No\\n\");\n        clear();\n    }\n    return  0 ;\n}\n```\n\n**\u63d0\u793a\uff1a$clear()$ \u51fd\u6570\u4e2d\n\u6e05\u96f6\u65f6\u7528\u4e86\u591a\u5c11\u5c31\u6e05\u96f6\u591a\u5c11\uff0c\u6709\u6548\u8282\u7ea6\u56e0$memset()$\u6e05\u96f6\u7a7a\u6570\u7ec4\u800c\u6d6a\u8d39\u7684\u65f6\u95f4**\n\n\n\n------------\n\n## 3.Dinic\u7f51\u7edc\u6d41\u89e3\u6cd5\n\n\u5982\u679c\u5bf9**\u7f51\u7edc\u6d41**\u6ca1\u6709\u4e86\u89e3\u7684\u540c\u5b66\u53ef\u4ee5**\u53c2\u8003**[\u7f51\u7edc\u6d41\u521d\u6b65\u8be6\u89e3](https://www.luogu.org/blog/sswcdak/bi-ji-wang-lao-liu-chu-bu)\uff0c\u6216\u5176\u4ed6\u535a\u5ba2\u3002\n\n\n\u5bf9\u4e8e\u7f51\u7edc\u6d41**\u6709\u4e86\u89e3**\u7684\u540c\u5b66\u5c31\u53ef\u4ee5**\u5f00\u5fc3**\u5730\u7528\u8fd9\u9053\u9898**\u7ec3\u4e60\u7f51\u7edc\u6d41**\u4e86\u3002\n\n\u6211\u4eec\u518d\u6b21\u89c2\u5bdf\u4e4b\u524d\u5904\u7406\u7684\u56fe\u5f62\uff0c\u5982**\u4e0b\u56fe**\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u6c42\u89e3\u6700\u5927\u5339\u914d\u7684\u8fc7\u7a0b\u53ef\u4ee5\u6f14\u5316\u6210**\u5355\u8fb9\u5bb9\u91cf**\u4e3a $1$ \u7684**\u7f51\u7edc\u6d41**\u8fdb\u884c\u6c42\u89e3\u3002\n\n\n\n![](http://wx1.sinaimg.cn/mw690/007BSLUzgy1fzj2awrbr0j30nm0f7wg6.jpg)\n\n\u800c\u6211\u4eec\u505a\u7684\uff0c\u53ea\u9700\u5728**\u865a\u62df\u6e90\u70b9**\u548c**\u884c**\u4e4b\u95f4\u5efa\u7acb**\u5bb9\u91cf\u4e3a $1$** \u7684\u8fb9\uff0c\u5728\u5728**\u865a\u62df\u6c47\u70b9**\u548c**\u5217**\u4e4b\u95f4\u5efa\u7acb**\u5bb9\u91cf\u4e3a $1$ **\u7684\u8fb9\u5373\u53ef\u3002\n\n\u540c\u65f6\u5728\u8bfb\u5165\u65f6\u5efa\u7acb**\u884c\u5217**\u4e4b\u95f4**\u5bb9\u91cf\u4e3a $1$ **\u7684\u8fb9\u3002\n\n\u6700\u540e\u8dd1\u4e00\u904d**$Dinic$\u7b97\u6cd5**\u3002\n\n**$AC$\u4ee3\u7801**\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst  int  inf =  0x3f3f3f3 , N = 40000 + 19  ;\n\nint  head[ N*2 ] , d[ N*2 ] , to[ N*10*2 ] , w[ N*10*2 ] , next[ N*10*2 ]  ;\n\nint  n , s, t , tot = 1 , maxflow = 0 , T ;//maxflow\u8bb0\u5f55\u7b54\u6848 \n\ninline int read()\n{\n    int s = 0,w = 1;\n    char g = getchar();\n    while(g<'0'||g>'9'){if(g=='-')w*=-1;g = getchar();}\n    while(g>='0'&&g<='9'){s = s*10+g-'0';g = getchar();}\n    return s*w;\n}\n\nqueue<int> q ;//\u5e7f\u641c\u65f6\u91c7\u7528\u961f\u5217\n\nvoid  add( int  x , int  y , int  z ){\n    tot++; to[ tot ] = y , w[ tot ] = z , next[ tot ] = head[ x ] , head[ x ] = tot;\n    tot++; to[ tot ] = x , w[ tot ] = 0 , next[ tot ] = head[ y ] , head[ y ] = tot;\n}//\u5efa\u7acb\u8fb9\u548c\u53cd\u5411\u8fb9\uff0c\u6ce8\u610f\u53cd\u5411\u8fb9\u7684\u6d41\u91cf\u521d\u59cb\u4e3a 0 \n\nbool  bfs(){//\u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a\u6784\u9020\u5206\u5c42\u56fe\n    memset( d , 0 , sizeof(d) ) ; //\u5c06\u4e4b\u524d\u7684\u5206\u5c42\u6e050\uff0c\u7ee7\u7eed\u8dd1\u6b8b\u91cf\u7f51\u7edc\u627e\u53ef\u884c\u589e\u5e7f\u8def\n    while( q.size() ) q.pop() ; //\u961f\u5217\u6e05 0 ;\n    q.push( s ) ; d[ s ] = 1 ; //\u5c06\u6e90\u70b9\u52a0\u5165\u961f\u5217\uff0c\u5c42\u6570\u4e3a 1 \uff0c\u5f00\u59cb\u5e7f\u641c \n    while( q.size() ){\n        int  x = q.front() ; q.pop() ;\n        for( int  i = head[ x ] ; i ; i = next[ i ])\n            if( w[ i ] && !d[ to[i] ] ){//\u76ee\u6807\u8fb9\u7684\u6d41\u91cf\u4e0d\u4e3a0 \u4e14 \u4e3a\u88ab\u904d\u5386\u5206\u5c42\n                q.push( to[ i ] ) ;\n                d[ to [ i ] ] = d[ x ] + 1;\n                if( to[ i ] == t )return 1 ; //\u627e\u5230\u4e00\u6761\u53ef\u884c\u589e\u5e7f\u8def\n            }\n    }\n    return 0 ;//\u672a\u627e\u5230\uff0c\u4e0d\u5b58\u5728\u589e\u5e7f\u8def\n}\n\nint  dinic( int  x , int  flow ){ //\u5728\u5206\u5c42\u56fe\u4e0a\u8fdb\u884c\u589e\u5e7f\n    if( x == t )return flow ;//\u6e90\u70b9\u5373\u4f7f\u6c47\u70b9\uff0c\u6d41\u91cf\u4e0d\u9650\u91cf\n    int  rest = flow , k ;\n    for( int  i = head[ x ] ; i && rest ; i = next[ i ] )//\u5f53\u524d\u53ef\u6d41\u5165\u6700\u5927\u6d41\u91cf\u4e0d\u4e3a0 ,\n        if( w[ i ] && d[ to [ i ] ] == d[ x ] + 1 ){//\u76ee\u6807\u8def\u5f84\u6709\u5269\u4f59\u6d41\u91cf\uff0c\u4e14\u4e0d\u5b58\u5728\u73af\u4e4b\u7c7b\u795e\u5947\u7684\u4e1c\u897f\n        \tk = dinic( to[ i ] , min( rest , w[ i ] ) );//\u7ee7\u7eed\u641c\n        \tif( !k )d[ to [ i ] ] = 0 ; //\u526a\u679d\uff0c\u5982\u679c k(\u4e0b\u4e00\u5c42\u53ef\u6d41\u5165\u6d41\u91cf\u56fe\u4e3a 0 )\uff0ccut\n        \tw[ i ] -= k ; \n        \tw[ i ^ 1 ] += k ;//\u5360\u7528k\u6d41\u91cf\uff0c\u6ce8\u610f\u53cd\u8fb9\u8981\u52a0\u4e0ak\uff0c\u4e0d\u7136\u65e0\u6cd5\u9000\u56de\n        \trest -= k ; //\u5f53\u524d\u8282\u70b9\u7684\u5269\u4f59\u6c47\u5165\u6d41\u91cf-k;\n        }\n       return flow - rest ; //\u9012\u5f52\u5b8c\u6210\n}\n\nvoid  clear(){\n    T-- ; maxflow = 0 ;\n    for( int  i = 1 ; i<= tot ; i++ )\n        w[ i ] = to[ i ] = head[ i ] = next[ i ] = 0 ;\n    tot = 1 ;\n}\n\nint  main()\n{\n    T = read() ;\n    while( T != 0 )\n    {\n        n = read() ; s = 2*n + 1 ; t = 2*n + 2 ;\n        for( int  i = 1 ; i <= n ; ++i ){\n            add( s , i , 1 ); add( i + n , t , 1 ) ;\n        }\n        for( int  i = 1 ; i <= n ; ++i )\n            for( int  j = 1 ; j <= n ; j++ ){\n                int  x = read() ;\n                if( x ){\n                    add( i , j + n , 1 ) ; \n                }\n            }\n        int  flow = 0 ; \n        while( bfs() ){//\u5b58\u5728\u589e\u5e7f\u8def\n            while( flow = dinic ( s , inf ))maxflow += flow ; \n        }\n        if( maxflow >= n )printf(\"Yes\\n\");\n        else  printf(\"No\\n\");\n        clear() ;\n    }\n    return  0 ;\n}\n```\n\n**\u518d\u6b21\u63d0\u793a\uff1a$clear()$ \u51fd\u6570\u4e2d\n\u6e05\u96f6\u65f6\u7528\u4e86\u591a\u5c11\u5c31\u6e05\u96f6\u591a\u5c11\uff0c\u6709\u6548\u8282\u7ea6\u56e0$memset()$\u6e05\u96f6\u7a7a\u6570\u7ec4\u800c\u6d6a\u8d39\u7684\u65f6\u95f4**\n\n###  _\u672c\u6587\u5230\u6b64\u7ed3\u675f\uff0c\u82e5\u6709\u4e0d\u8db3\uff0c\u6073\u8bf7\u5927\u4f6c\u6307\u51fa\u3002_ \n\n ### _ \u5982\u679c\u4f60\u559c\u6b22\u6211\u7684\u6587\u7ae0\uff0c\u8bf7\u5927\u529b\u70b9\u8d5e\u652f\u6301\uff01\u611f\u8c22\u3002_ ",
        "postTime": 1548374346,
        "uid": 119937,
        "name": "\u4ffe\u65af\u9ea6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "![](https://cdn.luogu.com.cn/upload/pic/23073.png)\n\n\u8fd9\u662f\u4e00\u5e45\u4e8c\u5206\u56fe\uff0c\u9ed1\u8272\u7684\u70b9\u4ee3\u8868\u884c\uff0c\u84dd\u8272\u7684\u70b9\u4ee3\u8868\u5217\uff1b\n\n\u6211\u4eec\u7ed9\u6bcf\u4e00\u884c\u6bcf\u4e00\u5217\u4e00\u4e2aid,\u521d\u59cb\u72b6\u6001\u4e0bid[i]=i,\u4f8b\u5982\u521d\u59cb\u72b6\u6001\u4e0b\u7684\u7b2c\u4e00\u5217\u4e3a1\uff0c\u4ee5\u540e\u4e0d\u7ba1\u5b83\u53d8\u4e3a\u7b2c\u51e0\u5217\uff0c\u5b83\u7684id\u5c31\u662f1\uff0c\u56fe\u4e2d\u7684\u70b9\u8868\u793a\u7684\u662f\u884c\u6216\u5217\u7684id\uff1b\n\n\u5982\u679c\u7b2ci\u884c\u7b2cj\u5217\u662f1\uff0c\u5c31\u7ed9id[i]\u548cid[j]\u8fde\u4e00\u6761\u8fb9\uff1b\n\n![](https://cdn.luogu.com.cn/upload/pic/23074.png)\n\n\u8fd9\u662f\u5c06\u7b2c\u4e00\u5217\u548c\u7b2c\u4e09\u5217\u4ea4\u6362\u4ee5\u540e\u7684\u60c5\u51b5\uff0c\u7ea2\u8272\u7684\u662f\u88ab\u6539\u53d8\u7684\u8fb9\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u6837\u7684\u6539\u53d8\u53ea\u662f\u628a\u4e24\u4e2a\u8282\u70b9\u7684\u4f4d\u7f6e\u8c03\u6362\u4e86\u4e00\u4e0b\uff0c\u5176\u5b9e\u548c\u539f\u6765\u7684\u56fe\u662f\u4e00\u6837\u7684\uff0c\u53ea\u662f\u84dd\u8272\u8282\u70b93\u548c\u84dd\u8272\u8282\u70b91\u4f4d\u7f6e\u4e0d\u540c\u800c\u5df2\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u6837\u7684\u4ea4\u6362\u5e76\u4e0d\u6539\u53d8\u6574\u4f53\uff0c\u4e0d\u6539\u53d8\u6700\u5927\u5339\u914d\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u6309\u7167\u539f\u6765\u7684\u56fe\u627e\u6700\u5927\u5339\u914dans\uff0c\u82e5ans=n\uff0c\u5373yes,\u5426\u5219\uff0c\u5373no\uff1b\n\n~~\u56fe\u753b\u7684\u592a\u4e11\u8bf7\u89c1\u8c05~~\n\n\u4e0a\u4ee3\u7801\uff1a\n\n\n------------\n```\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int maxN=500;\nint n,ans,t;\nint matched[maxN+1];\nbool G[maxN+1][maxN+1],vis[maxN+1];\nbool dfs(int x)\n{\n    for(int i=1;i<=n;i++)\n            if(G[x][i]&&!vis[i])\n            {\n                vis[i]=true;\n                if(!matched[i]||dfs(matched[i]))\n                {\n                    matched[i]=x;\n                    return true;\n                }\n            }\n    return false;\n}\nint main()\n{\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        memset(matched,0,sizeof(matched));\n        memset(G,false,sizeof(G));\n        ans=0;\n        scanf(\"%d\",&n);\n        for(int i=1;i<=n;i++)\n           for(int j=1;j<=n;j++) scanf(\"%d\",&G[i][j]);\n        for(int i=1;i<=n;i++)\n        {\n            memset(vis,false,sizeof(vis));\n            ans+=dfs(i);\n        }\n        if(ans==n) printf(\"Yes\\n\");\n        else printf(\"No\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1531378787,
        "uid": 39144,
        "name": "cmwqf",
        "ccfLevel": 9,
        "title": "P1129\u77e9\u9635\u6e38\u620f"
    },
    {
        "content": "[\u67e5\u770b\u539f\u9898\u8bf7\u6233\u8fd9\u91cc](https://www.luogu.org/problem/P1129)  \n\u9996\u5148\uff0c\u9898\u76ee\u544a\u8bc9\u6211\u4eec\u6709\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a  \n1. \u884c\u4ea4\u6362\u64cd\u4f5c\uff1a\u9009\u62e9\u77e9\u9635\u7684\u4efb\u610f\u4e24\u884c\uff0c\u4ea4\u6362\u8fd9\u4e24\u884c\uff08\u5373\u4ea4\u6362\u5bf9\u5e94\u683c\u5b50\u7684\u989c\u8272\uff09  \n\n2. \u5217\u4ea4\u6362\u64cd\u4f5c\uff1a\u9009\u62e9\u77e9\u9635\u7684\u4efb\u610f\u4e24\u5217\uff0c\u4ea4\u6362\u8fd9\u4e24\u5217\uff08\u5373\u4ea4\u6362\u5bf9\u5e94\u683c\u5b50\u7684\u989c\u8272\n\n\u4f46\u662f\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u53ea\u9700\u8981\u8fdb\u884c\u5176\u4e2d\u7684\u4e00\u79cd\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\u3002\u5373\u6211\u4eec\u4e24\u79cd\u64cd\u4f5c\u6df7\u7740\u7528\u5176\u5b9e\u662f\u6ca1\u6709\u4ec0\u4e48\u6548\u679c\u7684\uff0c\u8fd9\u4e00\u70b9\u540e\u6587\u4f1a\u89e3\u91ca\u5230\u3002  \n\n\u5047\u8bbe\u6211\u4eec\u53ea\u4ea4\u6362\u884c\uff0c\u90a3\u4e48\u5982\u679c\u6709\u4e00\u884c\u662f\u8fd9\u6837\u7684\uff1a  \n$$0\\ 1\\ 0\\ 0$$\n\u90a3\u4e48\u5f88\u663e\u7136\uff0c\u8fd9\u4e00\u5217\u80fd\u4e14\u53ea\u80fd\u5728\u7b2c\u4e8c\u884c\u4e0a\u3002  \n\u518d\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a  \n$$0\\ 1\\ 1\\ 0$$\n\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u4e00\u884c\u65e2\u53ef\u4ee5\u653e\u5230\u7b2c\u4e8c\u884c\uff0c\u4e5f\u53ef\u4ee5\u653e\u5230\u7b2c\u4e09\u884c\u3002  \n\u6240\u4ee5\uff0c\u5982\u679c\u7b2ci\u884c\u9700\u8981\u5728\u7b2ck\u5217\u4e0a\u7684\u989c\u8272\u4e3a\u9ed1\u8272\uff08\u6570\u5b57\u4e3a1\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5c06i\u548ck\u8fde\u4e00\u6761\u8fb9\u3002\u6ce8\u610f\uff0c\u8fd9\u4e00\u6b65\u770b\u4e0a\u53bb\u662f\u884c\u548c\u5217\u5339\u914d\uff0c\u4f46\u5b9e\u9645\u4e0a\u5219\u662f\u8fb9\u548c\u8fb9\u8fdb\u884c\u5339\u914d\u2014\u2014\u7b2ci\u6761\u8fb9\u53ef\u4ee5\u653e\u5230\u7b2ck\u6761\u8fb9\u7684\u4f4d\u7f6e\u4e0a\u3002\u56e0\u4e3a\u5bf9\u4e8e\u4e00\u4e2a\u6b63\u65b9\u5f62\uff0c\u5176\u5de6\u4e0a-\u53f3\u4e0b\u7684\u5bf9\u89d2\u7ebf\u4f1a\u7ecf\u8fc7\u7b2ck\u6761\u8fb9\u7684\u7b2ck\u4e2a\u4f4d\u7f6e\u3002  \n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u53bb\u8dd1\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c\u82e5\u5339\u914d\u6570\u7b49\u4e8e\u8fb9\u6570\uff0c\u5219\u6709\u89e3\uff0c\u5426\u5219\u65e0\u89e3\u3002  \n\u4e3a\u4ec0\u4e48\u53ea\u8003\u8651\u4e00\u79cd\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\u5462\uff1f  \n![](https://cdn.luogu.com.cn/upload/pic/72296.png)  \n\u5982\u56fe\uff0c\u6211\u4eec\u53d1\u73b0\u7b2c3\u5217\u6ca1\u6709\u9ec4\u683c\uff0c\u7b2c2\u5217\u67092\u4e2a\u9ec4\u683c\uff0c\u4f46\u4ea4\u6362\u4e86\u7b2c2\u30013\u5217\u4ee5\u540e\uff0c\u7b2c2\u5217\u5c31\u6ca1\u6709\u9ec4\u683c\u4e86\u3002\u6240\u4ee5\u8bf4\uff0c\u5728\u8fdb\u884c\u4e00\u79cd\u64cd\u4f5c\u7684\u57fa\u7840\u4e0a\uff0c\u8fdb\u884c\u53e6\u4e00\u79cd\u64cd\u4f5c\u65e0\u975e\u662f\u62c6\u4e1c\u5899\uff0c\u8865\u897f\u5899\u3002  \ncode\uff1a  \n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#define ll long long\n#define INF 0x7fffffff\n#define re register\n#define qwq printf(\"qwq\\n\");\n\nusing namespace std;\n\nint read()\n{\n\tregister int x = 0,f = 1;register char ch;\n\tch = getchar();\n\twhile(ch > '9' || ch < '0'){if(ch == '-') f = -f;ch = getchar();}\n\twhile(ch <= '9' && ch >= '0'){x = x * 10 + ch - 48;ch = getchar();}\n\treturn x * f;\n}\n\nint n,cnt,x,tot,T,d[100005];\nint with[100005],pd[100005];\n\nstruct edge{\n\tint next,to,from;\n}e[200005];\n\nvoid add(int x,int y)\n{\n\te[++cnt].to = y;\n\te[cnt].from = x;\n\te[cnt].next = d[x];\n\td[x] = cnt;\n}\n\nint find(int u)\n{\n\tfor(int i = d[u]; i; i = e[i].next)\n\t{\n\t\tint v = e[i].to;\n\t\tif(!pd[v])\n\t\t{\n\t\t\tpd[v] = 1;\n\t\t\tif(with[v] == 0 || find(with[v]))\n\t\t\t{\n\t\t\t\twith[v] = u;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\nvoid cl()\n{\n\tfor(int i = 1; i <= cnt; i++) e[i].to = 0;\n\tcnt = 0;\n\ttot = 0;\n\tmemset(d,0,sizeof(d));\n\tmemset(with,0,sizeof(with));\n}\n\nint main()\n{\n\tT = read();\n\twhile(T--)\n\t{\n\t\tn = read();\n\t\tcl();\n\t\tfor(int i = 1; i <= n; i++)\n\t\t\tfor(int j = 1; j <= n; j++)\n\t\t\t{\n\t\t\t\tx = read();\n\t\t\t\tif(x) add(i,j);\n\t\t\t}\n\t\tfor(int i = 1; i <= n; i++) \n\t\t{\n\t\t\tmemset(pd,0,sizeof(pd));\n\t\t\tif(find(i)) tot++;\n\t\t}\n\t\tif(tot == n) printf(\"Yes\\n\");\n\t\telse printf(\"No\\n\");\n\t}\n    return 0;\n}\n```",
        "postTime": 1565863320,
        "uid": 150821,
        "name": "Azuree",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "[*\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c*](https://www.cnblogs.com/Lemir3/p/11104604.html)\n\n[*\u9898\u9762*](https://www.luogu.org/problemnew/show/P1129)\n\n\u8fd9\u9053\u9898\u795e\u554a.\n\n\u770b\u4e86\u4e00\u4e0b\u5348\u6ca1\u6709\u601d\u8def,\u611f\u89c9\u662f\u4e8c\u5206\u56fe\u6ca1\u6709\u6df1\u523b\u7406\u89e3,\u53c8\u91cd\u65b0\u770b\u4e86\u4e00\u904d\u84dd\u4e66\u4e0a\u7684\u4e8c\u5206\u56fe,\u8fd8\u6253\u4e86\u9053\u9898\u7ec3\u624b,\u7136\u800c\u8fd8\u662f\u6ca1\u6709\u60f3\u51fa\u8fd9\u9053\u9898...\n\n\u4e8e\u662f\u6070\u996d\u56de\u6765\u51b3\u5b9a\u770b\u4e0b\u9898\u89e3,\u604d\u7136\u5927\u609f.\n\n\u540c\u5fd7\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e00\u4e2a\u70b9\u770b\u505a\u4e00\u6761\u5339\u914d\u8fb9,\u628a\u5b83\u7684\u7684\u884c\u6570\u548c\u5217\u6570\u8fde\u4e00\u6761\u8fb9,\u4f1a\u53d1\u73b0\u6574\u5e45\u56fe\u662f\u4e00\u7ec4\u5339\u914d.\n\n\u5728\u4ea4\u6362\u884c\u548c\u5217\u7684\u65f6\u5019,\u76f8\u5f53\u4e8e\u5728\u5308\u7259\u5229\u7b97\u6cd5\u4e2d\u8fdb\u884c\u534f\u5546\u7684\u8fc7\u7a0b,\u6240\u4ee5\u5bf9\u6700\u5927\u5339\u914d\u4e0d\u53d8.\n\n\u5982\u679c\u4ea4\u6362\u540e\u53ef\u4ee5\u6709n\u4e2a\u53ca\u4ee5\u4e0a\u7684\u5339\u914d,\u5c31\u8bf4\u660e\u4e00\u5b9a\u53ef\u4ee5\u5b9e\u73b0\u9898\u610f.\n\n\u914d\u56fe\u5982\u4e0b(\u56fe\u91cc\u7684\u5b57\u4f53\u6709\u70b9\u5c0f\u8bf7\u89c1\u8c05):\n\n![\u914d\u56fe1.png](https://i.loli.net/2019/06/28/5d160027d19d712932.png)\n\n![\u914d\u56fe2.png](https://i.loli.net/2019/06/28/5d160027e78e354573.png)\n\n\u7136\u540e\u5c31\u662f\u8dd1\u4e00\u4e2a\u88f8\u7684\u5308\u7259\u5229,\u6c42\u51fa\u5339\u914d\u4e2a\u6570\u5c31\u53ef\u4ee5\u4e86.\n\n**\u4ee3\u7801:**\n\n```cpp\n\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n\nusing namespace std;\n\nstruct edge\n{\n    int to,next;\n}e[1000010];\n\nint t,n,size,CommunismParty_cnt;\nint head[1000010],match[1000010];\nbool flag[1000010];\n\ninline void EdgeAdd(int,int);\ninline void Hungary();\ninline bool find(int);\n\nint main()\n{\n    scanf(\"%d\",&t);\n    for(int _=1;_<=t;_++)\n    {\n        scanf(\"%d\",&n);\n        CommunismParty_cnt=0;\n        size=0;\n        memset(head,-1,sizeof(head));\n        memset(match,0,sizeof(match));\n        memset(e,0,sizeof(e));\n        for(int __=1;__<=n;__++)\n        {\n            for(int ___=1;___<=n;___++)\n            {\n                int CommunistYouthLeague_color;\n                scanf(\"%d\",&CommunistYouthLeague_color);\n                if(CommunistYouthLeague_color==1)\n                {\n                    EdgeAdd(__,___);\n                }\n            }\n        }\n        Hungary();\n        printf(\"%s\\n\",CommunismParty_cnt>=n?\"Yes\":\"No\");\n    }\nreturn 0;\n}\n\ninline void EdgeAdd(int from,int to)\n{\n    e[++size].to=to;\n    e[size].next=head[from];\n    head[from]=size;\n}\n\ninline void Hungary()\n{\n    for(int _=1;_<=n;_++)\n    {\n        memset(flag,false,sizeof(flag));\n        if(find(_)==true)\n        {\n            CommunismParty_cnt++;\n        }\n    }\n}\n\ninline bool find(int from)\n{\n    for(int _=head[from];_!=-1;_=e[_].next)\n    {\n        int to=e[_].to;\n        if(flag[to]==false)\n        {\n            flag[to]=true;\n            if(match[to]==0||find(match[to])==true)\n            {\n                match[to]=from;\n                return true;\n            }\n        }\n    }\nreturn false;\n}\n\n```\n",
        "postTime": 1561724465,
        "uid": 54986,
        "name": "lemir3",
        "ccfLevel": 5,
        "title": "\u5df4\u9ece\u516c\u793e\u793e\u5458\u9020\u8239\u5382Project1129\u7814\u5236\u6210\u529f"
    },
    {
        "content": "\u53d1\u4e00\u7bc7\u6211\u8ba4\u4e3a\u901a\u4fd7\u7684\u7406\u89e3\u65b9\u5f0f\u3002\n\n\u56e0\u4e3a\u4efb\u610f\u4e24\u884c\u90fd\u53ef\u4ee5\u4e92\u76f8\u4ea4\u6362\uff0c\n\n\u6240\u4ee5\uff0c\u5bf9\u4e8e\u4e00\u4e2a(i,j)\u4e0a\u76841\uff0c\n\n\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u662f\uff1a\n\n#### \u7528\u7b2ci\u884c\u7b2cj\u5217\u76841\u53bb\u4f5c\u4e3a\u7b2cj\u5217\u4e0a\u7684\u5bf9\u89d2\u7ebf\u4e0a\u76841\u3002\uff08\u901a\u8fc7\u4e0e\u7b2cj\u884c\u4ea4\u6362\uff0c\u8fbe\u5230\u76ee\u7684\u3002\uff09\n\n\u90a3\u4e48\u53ea\u8981\u662f\u80fd\u591f\u5b8c\u7f8e\u5339\u914d\u5c31\u7b49\u4ef7\u4e8e\u6bcf\u4e2a\u5bf9\u89d2\u7ebf\u4e0a\u76841\u90fd\u80fd\u901a\u8fc7\u548c\u67d0\u4e00\u884c\u4ea4\u6362\u7684\u65b9\u5f0f\u8fbe\u6210\u76ee\u7684\u3002\n\n\u8fd9\u662f\u6211\u8ba4\u4e3a\u7684\u5f88\u5bb9\u6613\u7406\u89e3\u7684\u3002\uff08\u53ef\u4ee5\u5c1d\u8bd5\u591a\u8bfb\u51e0\u904d\uff09\n\n\u5982\u679c\u5bf9\u4f60\u6709\u5e2e\u52a9\u7684\u8bdd\u8bf7\u70b9\u4e2a\u8d5e\u3002\n\n```cpp\n\n#include<cstdio>\n#include<cstring>\n#define LL long long\n#define Set(s,v) memset(s,v,sizeof(s))\nusing namespace std;\ninline LL read(){\n    LL ans=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-'){f=-1;}ch=getchar();}\n    while(ch>='0'&&ch<='9'){ans=(ans<<3)+(ans<<1)+(ch^48);ch=getchar();}\n    return ans*f;\n}\nvoid write(LL x){\n    if(x<0){putchar('-');x=-x;}\n    if(x>9){write(x/10);}\n    putchar(x%10|48);\n}\nstruct Edge{\n    int next,v;\n}edge[40005];\nint head[205],cnt;\nint mark[205],match[205],tim;\n\ninline void add(int u,int v){\n    cnt++;\n    edge[cnt].next=head[u];\n    edge[cnt].v=v;\n    head[u]=cnt;\n    return;\n}\ninline void flush(){\n    Set(head,0);\n    Set(mark,0);\n    Set(match,0);\n    tim=0;\n    cnt=0;\n    return;\n}\nint augment(int u){\n    for (int i=head[u];i;i=edge[i].next){\n        int v=edge[i].v;\n        if(mark[v]==tim) continue;\n        mark[v]=tim;\n        if(match[v]==0||augment(match[v])){\n            match[v]=u;\n            return true;\n        }\n    }\n    return false;\n}\ninline int hungarian(int n){\n    int res=0;\n    for (int i=1;i<=n;i++){\n        tim++;\n        if(augment(i)){\n            res++;\n        }\n    }\n    return res;\n}\n\nint main(){\n    int T=read();\n    while(T--){\n        flush();\n        int n=read();\n        for (int i=1;i<=n;i++){\n            for (int j=1;j<=n;j++){\n                int t=read();\n                if(t){\n                    add(i,j);\n                }\n            } \n        }\n        printf(\"%s\\n\",hungarian(n)==n?\"Yes\":\"No\");\n    }\n    return 0;\n}\n\n```",
        "postTime": 1559047468,
        "uid": 36107,
        "name": "yuy_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "### Solution\n\n\u5728\u6211\u770b\u5b8c\u8fd9\u9053\u9898\u4e00\u7b79\u83ab\u5c55\u6ca1\u6709\u601d\u8def\u7684\u65f6\u5019\uff0c\u6211\u5f00\u59cb~~\u73a9\u56fd\u9645\u8c61\u68cb~~\u624b\u6a21\u6837\u4f8b\uff0c\u7136\u540e\u53d1\u73b0\u4e86\u4e00\u4e2a\u5c0f\u7ed3\u8bba\uff1a**\u540c\u884c\u540c\u5217\u7684\u70b9\u65e0\u8bba\u7ecf\u8fc7\u591a\u5c11\u6b21\u53d8\u6362\u4ecd\u7136\u540c\u884c\u6216\u540c\u5217**\u3002\n\n\u6240\u4ee5\u9898\u76ee\u53ef\u8f6c\u5316\u4e3a\uff1a\u80fd\u4e0d\u80fd\u627e\u5230 $n$ \u4e2a\u4e92\u76f8\u4e0d\u540c\u884c\u540c\u5217\u7684\u70b9\u3002\n\n\u90a3\u6211\u4eec\u53ef\u4ee5\u5efa\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u5de6\u8fb9\u662f\u884c\uff0c\u53f3\u8fb9\u662f\u5217\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u662f\u9ed1\u8272\u7684\uff0c\u5c31\u4ece\u5de6\u8fb9\u8fde\u53f3\u8fb9\uff0c\u6c42\u6700\u5927\u5339\u914d\u770b\u7b49\u4e0d\u7b49\u4e8e $n$ \u3002\n\n\u5982\u679c\u4e0d\u7528\u7f51\u7edc\u6d41\u7684\u8bdd\uff0c\u53ea\u7528\u4e8c\u5206\u56fe\u7684\u505a\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^3)$ \u3002\n### \u4ee3\u7801\n\n```c++\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n\nusing namespace std;\nconst int N=400010;\nint to[N],nxt[N],head[N],cnt;\nint n,T;\n\ninline int read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-') f=-1;ch=getchar();}\n\twhile(isdigit(ch)){x=x*10+(ch^48);ch=getchar();}\n\treturn x*f;\n}\n\ninline void add(int u,int v){\n\tto[++cnt]=v;\n\tnxt[cnt]=head[u];\n\thead[u]=cnt;\n}\n\nint tim,vis[N],match[N];\nint dfs(int x){\n\tfor(int i=head[x];i;i=nxt[i]){\n\t\tint y=to[i];\n\t\tif(vis[y]==tim) continue;\n\t\tvis[y]=tim;\n\t\tif(!match[y]||dfs(match[y])){\n\t\t\tmatch[y]=x;return 1;\n\t\t}\n\t}\n\treturn 0;\n}//\u6700\u5927\u5339\u914d--\u5308\u7259\u5229\u7b97\u6cd5 \n\ninline void init(){\n\tmemset(head,0,sizeof(head));\n\tmemset(nxt,0,sizeof(nxt));\n\tmemset(to,0,sizeof(to));\n\tmemset(match,0,sizeof(match));\n\tcnt=0;\n}\n\nint main(){\n\tT=read();\n\twhile(T--){\n\t\tinit();\n\t\tn=read();\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++){\n\t\t\t\tint x=read();\n\t\t\t\tif(x){\n\t\t\t\t\tadd(i,j+n);add(j+n,i);\n\t\t\t\t}\n\t\t\t}\n\t\tint ans=0;\n\t\tfor(int i=1;i<=n;i++) tim++,ans+=dfs(i);\n\t\tif(ans==n) puts(\"Yes\");\n\t\telse puts(\"No\");\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1598363724,
        "uid": 272143,
        "name": "\u662f\u4e2a\u6c49\u5b50",
        "ccfLevel": 4,
        "title": "P1129 [ZJOI2007]\u77e9\u9635\u6e38\u620f"
    },
    {
        "content": "## \u4e8c\u5206\u56fe\u5339\u914d\n\n[P1129](https://www.luogu.org/problem/P1129)\n\n\u8fd9\u4e2a\u9898\u8fd8\u662f\u6709\u4e00\u5b9a\u5957\u8def\u7684\n\n\u5c06\u9ed1\u8272\u683c\u5b50\u6240\u5728\u7684\u884c\u548c\u5217\u8fde\u8fb9, \u8dd1\u4e00\u8fb9\u6700\u5927\u5339\u914d, \u5982\u679c\u662f\u5b8c\u7f8e\u5339\u914d\u5373\u53ef(\u6240\u6709\u70b9\u90fd\u662f\u5339\u914d\u70b9)\n\nwhy?\n\n\u5728\u5b8c\u7f8e\u5339\u914d\u7684\u60c5\u51b5\u4e0b\n\n\u5047\u5982 \u52171 -> \u884c5 , \u52174 -> \u884c1 (->\u8868\u793a\u5339\u914d) \n\n\u6211\u4eec\u5219\u53ef\u4ee5\u5c06\u884c5\u548c\u884c1\u6362\u4e00\u4e0b\u4f4d\u7f6e, \u8fd9\u6837\u4ea4\u6362 \u5217\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd,  \u5339\u914d\u53d8\u4e3a\u52171 -> \u884c1, \u52174 -> \u884c5\n\n\u540c\u7406, \u52172, \u52173, \u52174\u4e5f\u53ef\u4ee5\u901a\u8fc7\u548c\u522b\u4eba\u4ea4\u6362\u6765\u641e\u5230\u81ea\u5df1\u7684\u83dc\n\n\u8bc1\u6bd5\n\n\u4ee3\u7801:\n\n```c++\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N = 40005;\nint h[N], ne[N * 2], to[N * 2];\nint tot, T, n;\n\nvoid add(int x,int y) {\n\tne[++tot] = h[x];\n\th[x] = tot, to[tot] = y;\n}\n\nint read(void) {\n\tint x = 0;\n\tchar c = getchar();\n\twhile (!isdigit(c)) c = getchar();\n\twhile (isdigit(c)) {\n\t\tx = (x << 3) + (x << 1) + c - '0';\n\t\tc = getchar();\n\t}\n\treturn x;\n}\n\nint tim, vis[N], match[N];\n\nint dfs(int x) {\n\tfor (int i = h[x]; i; i = ne[i]) {\n\t\tint y = to[i];\n\t\tif (vis[y] == tim) continue;\n\t\tvis[y] = tim;\n\t\tif (!match[y] || dfs(match[y])) {\n\t\t\tmatch[y] = x; return 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nvoid pre(void) {\n\tmemset(h, 0, sizeof(h));\n\tmemset(ne, 0, sizeof(ne));\n\tmemset(to, 0, sizeof(to));\n\tmemset(match, 0, sizeof(match));\n\ttot = 0;\n}\n\nint main() {\n\tT = read();\n\twhile (T--) {\n\t\tpre();\n\t\tn = read();\n\t\tfor (int i = 1;i <= n; i++) \n\t\tfor (int j = 1;j <= n; j++) {\n\t\t\tint x = read();\n\t\t\tif (x) {\n\t\t\t\tadd(i, j + n); add(j + n, i);\n\t\t\t}\n\t\t}\n\t\tint ans = 0;\n\t\tfor (int i = 1;i <= n; i++) \n\t\ttim++, ans += dfs(i);\n\t\tif (ans == n) printf(\"Yes\\n\");\n\t\telse printf(\"No\\n\");\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1570018379,
        "uid": 122144,
        "name": "hs_black",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "\u8fd9\u9898\uff0c\u521d\u770b\u9898\u9762\u5b8c\u5168\u6ca1\u6709\u60f3\u6cd5\u3002\u3002\n\n\u770b\u4e86\u697c\u4e0b\u5927\u4f6c\u7684\u9898\u89e3\uff0c\u4e00\u753b\u56fe\uff0c\u987f\u65f6\u8305\u585e\u987f\u5f00\n\n~~\\*\u4e0d\u8981\u88ab\u9898\u9762\u5e72\u6270\uff08\u663e\u7136\u53ea\u8003\u8651\u9ed1\u683c\u5373\u53ef\uff09\u2014\u2014\u4efb\u610f\u884c\u95f4\u3001\u5217\u95f4\u90fd\u53ef\u4ee5\u4ea4\u6362\uff0c\u60f3\u60f3\u73a9\u9b54\u65b9\uff0c\u5b9e\u9645\u4e0a\u4f60\u60f3\u8ba9\u4e00\u4e2a\u683c\u5b50\u8dd1\u54ea\uff0c\u5c31\u80fd\u8ba9\u5b83\u8dd1\u54ea\uff08**\u4f46\u4f1a\u5bf9\u5176\u4ed6\u7684\u9020\u6210\u5f71\u54cd\uff01**\uff09\\*~~\n\n\u5f53\u7136\u5bf9\u4e8e\u672c\u9898\uff0c\u53ef\u4ee5\u80af\u5b9a\u7684\u662f\uff0c\u60f3\u8ba9\u67d0\u4e00\u884c\u5230\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u662f\u53ef\u4ee5\u529e\u5230\u7684\n\nSo\uff0c\u53ea\u8981\u8ba9\u6bcf\u884c\u6709\u4e00\u4e2a\u9ed1\u683c\u914d\u5bf9\uff0c\u4e14\u914d\u5bf9\u7684\u9ed1\u683c\u4e2d\uff0c\u6bcf\u5217\u6ca1\u6709\u91cd\u590d\u7684\u3002\u6ca1\u6709\u914d\u5bf9\u7684\u600e\u4e48\u529e\uff1f\u5c31\u5230\u5176\u4ed6\u884c\u201c\u501f\u201d\u5457\uff01\u8fd9\u6837\u6700\u540e\u5c06\u6bcf\u884c\u6392\u4e2a\u987a\u5e8f\uff0c\u4e0d\u5c31\u7b26\u5408\u5bf9\u89d2\u7ebf\u4e86\u5417\uff01\n\n\u90a3\u4e48\u5224\u65ad\u6210\u529f\u4e0e\u5426\u663e\u7136\u53ea\u8981\u770b\u770b\u6bcf\u884c\u80fd\u5426\u90fd\u6709\u5339\u914d\u2014\u2014\u4e8c\u5206\u5308\u7259\u5229\uff01\uff01\n\n```cpp\n    #include<cstdio>\n    #include<cstring>\n    using namespace std;\n    int T,n,lnk[205][205],p[205];bool vis[205];\n    int read(){\n        int ret=0;char ch=getchar();\n        while(ch<'0'||ch>'9') ch=getchar();\n        while(ch>='0'&&ch<='9') ret=ret*10+ch-'0',ch=getchar();\n        return ret;\n    }\n    bool DFS(int x){\n        for(int j=1;j<=lnk[x][0];j++)if(!vis[lnk[x][j]]){\n            vis[lnk[x][j]]=1;\n            if(!p[lnk[x][j]]||DFS(p[lnk[x][j]])){p[lnk[x][j]]=x;return 1;}\n        }\n        return 0;\n    }\n    int main(){\n        T=read();bool flg;\n        while(T--){\n            n=read();\n            for(int i=1;i<=n;i++){\n                p[i]=lnk[i][0]=0;\n                for(int j=1;j<=n;j++) if(read()) lnk[i][++lnk[i][0]]=j;\n            }\n            flg=1;\n            for(int i=1;i<=n;i++){\n                memset(vis,0,sizeof vis);\n                if(!DFS(i)){puts(\"No\"),flg=0;break;}\n            }\n            if(flg) puts(\"Yes\");\n        }\n        return 0;\n}\n```",
        "postTime": 1515488503,
        "uid": 36779,
        "name": "ff_666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u9898\u89e3\u90fd\u8fd9\u4e48\u590d\u6742\u7684\u611f\u89c9\u3002\u3002\u3002\n\n\u76f4\u63a5\u8fd9\u4e48\u60f3\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u5b58\u5728\u4e8e $(i,j)$ \u7684 $1$ \uff0c\u65e0\u8bba\u600e\u6837\u4ea4\u6362\u8fd9\u4e2a $1$ \u7684\u884c\uff0c\u6216\u8005\u4ea4\u6362\u5217\uff0c\u6700\u540e\u7684\u7ed3\u679c\u4e00\u5b9a\u662f\uff0c\u539f\u672c\u5b58\u5728\u4e8e\u8be5\u884c\u7684\u5143\u7d20\u4e00\u5b9a\u8fd8\u5728\u8be5\u884c\uff08\u53ea\u662f\u987a\u5e8f\u4e0d\u540c\uff09\uff0c\u539f\u672c\u5b58\u5728\u4e8e\u8be5\u5217\u4e0a\u7684\u5143\u7d20\u4e00\u5b9a\u8fd8\u5728\u8be5\u5217\uff08\u53ea\u662f\u987a\u5e8f\u4e0d\u540c\uff09\u3002\n\n\u56de\u5230\u9898\u76ee\uff0c\u8981\u6c42\u4e3b\u5bf9\u89d2\u7ebf\u4e0a\u90fd\u662f $1$\uff0c\u90a3\u4e48\u6bd4\u5982\u5df2\u7ecf\u5728 $(1,1)$ \u653e\u4e0a\u4e00\u4e2a $1$\u4e86\uff0c\u90a3\u4e48\u7b2c\u4e00\u884c\u4e0e\u7b2c\u4e00\u5217\u4e0a\u7684 $1$ \u5c31\u4e0d\u53ef\u80fd\u518d\u901a\u8fc7\u4efb\u4f55\u884c\u5217\u53d8\u6362\u5230\u5176\u5b83\u5bf9\u89d2\u7ebf\u4e0a\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u5bf9\u4e8e\u4e00\u4e2a $1$ \uff0c\u5982\u679c\u5b83\u653e\u5728\u4e00\u4e2a\u5bf9\u89d2\u7ebf\u4e0a\u505a\u8d21\u732e\uff0c\u90a3\u4e48\u5b83\u6240\u5728\u884c\u4e0e\u6240\u5728\u5217\u4e0a\u7684 $1$ \u90fd\u4e0d\u53ef\u80fd\u518d\u505a\u8d21\u732e\u3002\n\n\u8fdb\u800c\u672c\u9898\u5c31\u5f88\u5bb9\u6613\u7684\u8f6c\u5316\u6210\uff0c\u6c42\u8be5\u56fe\u4e0a\u6240\u6709\u7684 $1$\uff0c\u884c\u4e0d\u540c\u4e14\u5217\u4e0d\u540c\u7684\u6700\u591a\u80fd\u6709\u591a\u5c11\u4e2a\uff0c\u80fd\u8fbe\u5230 $n$ \u4e2a\u5373\u53ef $Yes$ \u3002  \n\n\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u5373\u53ef\u3002\n\n```cpp\n#include<set>\n#include<map>\n#include<queue>\n#include<stack>\n#include<cmath>\n#include<vector>\n#include<string>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define pb push_back\n#define first fi\n#define second se\n#define IO std::ios::sync_with_stdio(false)\ntypedef long long ll;\nconst int maxn = 100008;\nconst ll mod = 1e9+7;\nconst int inf = 0x3f3f3f3f;\nconst ll INF = 1e18 + 10;\nconst double eps = 1e-6;\nusing namespace std;\nint T,n;\nint cnt,head[maxn],cx[maxn];\nbool vis[maxn];\nstruct Edge{\n\tint to;\n\tint next;\n}edge[maxn<<2];\ninline void add(int u,int v){\n\tedge[++cnt].to=v;\n\tedge[cnt].next=head[u];\n\thead[u]=cnt;\n\treturn;\n}\nint dfs(int u){\n\tfor(int i=head[u];i;i=edge[i].next){\n\t\tint v=edge[i].to;\n\t\tif(!vis[v]){\n\t\t\tvis[v]=true;\n\t\t\tif(cx[v]==0||dfs(cx[v])){\n\t\t\t\tcx[v]=u;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint main()\n{\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\"%d\",&n);\n\t\tcnt=0;\n\t\tmemset(head,0,sizeof(head));\n\t\tmemset(cx,0,sizeof(cx));\n\t\tint x;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=1;j<=n;j++){\n\t\t\t\tscanf(\"%d\",&x);\n\t\t\t\tif(x) add(i,j);\n\t\t\t}\n\t\t}\n\t\tint ans=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tmemset(vis,0,sizeof(vis));\n\t\t\tans+=dfs(i);\n\t\t}\n\t\tif(ans>=n) printf(\"Yes\\n\");\n\t\telse printf(\"No\\n\");\n\t}\n}\n```\n",
        "postTime": 1583899045,
        "uid": 178665,
        "name": "\u5927\u5934\u51b2\u950b\u8f66\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u9700\u8981\u8ba9\u6211\u4eec\u6c42\u89e3\u5c06\u539f\u56fe\u7684\u884c\u6216\u5217\u8fdb\u884c\u4ea4\u6362\uff0c\u4f7f\u5f97\u7b2c\uff081\uff0c1\uff09\uff0c\u7b2c\uff082\uff0c2\uff09......\u7b2c\uff08n\uff0cn\uff09\u90fd\u4e3a\u9ed1\u683c\u5b50\n\n\u8ba9\u6211\u4eec\u8bbe\u60f3\u5bf9\u4e8e\u539f\u56fe\u7684\u7b2cj\u5217\uff0c\u5982\u679c\u5b83\u7684\u7b2ci\u884c\u4e3a\u4e00\u4e2a\u9ed1\u683c\u5b50\u7684\u8bdd\uff0c\u90a3\u4e48\u5c06\u5b83\u8f6c\u6362\u5230\u7b2cj\u884c\uff0c\u90a3\u4e48\u7b2c\uff08i\uff0ci\uff09\u4e2a\u683c\u5b50\u5c31\u4e3a\u9ed1\u8272\uff0c\u53cd\u4e4b\u5982\u679c\u7b2cj\u884c\u4e3a\u767d\u683c\u5b50\u7684\u8bdd\uff0c\u90a3\u4e48\u5c06\u5b83\u8f6c\u6362\u5230\u7b2cj\u884c\uff0c\u90a3\u4e48\u7b2c\uff08i\uff0ci\uff09\u4e2a\u683c\u5b50\u5c31\u4e3a\u767d\u8272\uff0c\u4e0d\u7b26\u5408\u9898\u76ee\u8981\u6c42\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u5217\uff0c\u53ef\u4ee5\u5c06\u5b83\u8f6c\u6362\u5230\u54ea\u4e00\u884c\u5462\uff1f\u5982\u679c\u5b83\u7684\u7b2ci\u884c\u4e3a\u9ed1\uff0c\u5c31\u53ef\u4ee5\u8f6c\u6362\u5230\u7b2ci\u5217\uff0c\u53cd\u4e4b\u5c31\u4e0d\u884c\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u5efa\u51fa\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u5de6\u53f3\u70b9\u96c6\u5404\u6709n\u4e2a\u70b9\uff0c\u5de6\u70b9\u96c6\u8868\u793a\u539f\u56fe\u7684\u6bcf\u4e00\u5217\uff0c\u53f3\u70b9\u96c6\u8868\u793a\u66f4\u6362\u987a\u5e8f\u540e\u7684\u6bcf\u4e00\u5217\uff0c\u5bf9\u4e8e\u683c\u5b50\uff08i\uff0cj\uff09\uff0c\u5982\u679c\u5b83\u662f\u9ed1\u7684\uff0c\u5c31\u5f80\u5de6\u70b9\u96c6\u7684i\u5230\u53f3\u70b9\u96c6\u7684j\u8fde\u4e00\u6761\u8fb9\uff0c\u5c31\u8868\u793a\u539f\u56fe\u7684\u7b2ci\u5217\u53ef\u4ee5\u66f4\u6362\u5230\u7b2cj\u5217\u53bb\u3002\n\n\u5bf9\u5176\u8fdb\u884c\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u5982\u679c\u521a\u597d\u7b49\u4e0en\uff0c\u5c31\u627e\u5230\u4e86\u53ef\u4ee5\u6ee1\u8db3\u6761\u4ef6\u7684\u89e3\n\n\u6211\u4eec\u6765\u770b\u4e0b\u9762\u8fd9\u4e2a4\u884c4\u5217\u7684\u56fe\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/p6by4cnh.png)\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5efa\u51fa\u4e00\u4e2a\u4e8c\u5206\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/cbfncpx8.png)\n\n\u6211\u4eec\u5bf9\u5176\u8fdb\u884c\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u5c31\u4f1a\u53d1\u73b0\uff0c\u8fd9\u4e2a\u56fe\u7684\u5339\u914d\u4e3a3\uff0c\u4e0d\u6ee1\u8db3\u8981\u6c42\u3002\n\n\u90a3\u4e48\u6709\u4eba\u5c31\u8981\u95ee\u4e86\uff0c\u4e0d\u662f\u8fd8\u53ef\u4ee5\u4ea4\u6362\u884c\u5417\uff1f\n\n\u5047\u8bbe\u5728\u521a\u521a\u90a3\u4e2a\u56fe\u4e2d\uff0c\u4ea4\u6362\u7b2c2\uff0c3\u884c\uff0c\u518d\u6309\u4e4b\u524d\u7684\u65b9\u6cd5\u8fdb\u884c\u5efa\u56fe\uff0c\u5c31\u80fd\u5efa\u51fa\u8fd9\u6837\u4e00\u4e2a\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/m3ovdqrk.png)\n\n\u4f46\u5982\u679c\u6211\u4eec\u5c06\u53f3\u70b9\u96c6\u7684\u7b2c2\uff0c3\u884c\u4ea4\u6362\uff0c\u5c31\u53d8\u6210\u4e86\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/cdg5fxgz.png)\n\n\u5176\u5b9e\u8ddf\u6211\u4eec\u7b2c\u4e00\u6b21\u5efa\u51fa\u6765\u7684\u56fe\u76f8\u6bd4\uff0c\u53ea\u67092\uff0c3\u53f7\u70b9\u5728\u7f16\u53f7\u4e0a\u53d1\u751f\u4e86\u4e92\u6362\uff0c\u56fe\u7684~~\u5f62\u6001\u7ed3\u6784\uff0c\u751f\u7406\u529f\u80fd~~\u90fd\u6ca1\u6709\u6539\u53d8\uff0c\u5bf9\u8fd9\u4e2a\u65b0\u7684\u56fe\u8fdb\u884c\u5339\u914d\uff0c\u4ecd\u7136\u65e0\u6cd5\u6539\u53d8\u7ed3\u679c\u3002\n\nAC\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,lj[1010][1010],p[1010],t[1010];\nint add(int x){\n\tfor(int y=1;y<=n;y++){\n\t\tif(p[y]==0&&lj[x][y]==1){\n\t\t\tp[y]=1;\n\t\t\tif(t[y]==0||add(t[y])==1){\n\t\t\t\tt[y]=x;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint main(){\n\tint T;\n\tcin>>T;\n\tfor(int q=1;q<=T;q++){\n\t\tcin>>n;\n\t\tmemset(lj,0,sizeof(lj));\n\t\tmemset(t,0,sizeof(t));\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=1;j<=n;j++){\n\t\t\t\tint x;\n\t\t\t\tscanf(\"%d\",&x);\n\t\t\t\tlj[i][j]=x;\n\t\t\t}\n\t\t}\n\t\tint ans=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tmemset(p,0,sizeof(p));\n\t\t\tif(add(i)){\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\tputs(ans==n?\"Yes\":\"No\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1579579970,
        "uid": 90176,
        "name": "xixiup",
        "ccfLevel": 0,
        "title": "P1129\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u521d\u770b\u597d\u50cf\u6ca1\u6709\u529e\u6cd5\u89e3\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6b21\u64cd\u4f5c\u90fd\u8981\u5e26\u52a8\u5f88\u591a\u5173\u952e\u7684\u8981\u7d20\uff08\u9ed1\u65b9\u5757\uff09\u8fd0\u52a8 ~~\u8981\u7d20\u8fc7\u591a~~\u3002\n\n\u4f46\u662f\u591a\u5206\u6790\u51e0\u7ec4\u6837\u4f8b\u5c31\u4f1a\u53d1\u73b0\uff1a\u5982\u679c\u8981\u586b\u5145\u5bf9\u89d2\u7ebf\u4e0a\u7684\u4e00\u4e2a\u9ed1\u65b9\u5757\uff0c\u90a3\u4e48**\u77e9\u9635\u4e2d\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u9ed1\u65b9\u5757\u5f53\u4e14\u4ec5\u5f53\u80fd\u901a\u8fc7\u79fb\u52a8\u5176\u6240\u5728\u884c\u6216\u6240\u5728\u5217\u4f7f\u8be5\u70b9\u5230\u8fbe\u5bf9\u89d2\u7ebf\u4e0a\u5f85\u586b\u5145\u7684\u76ee\u6807\u70b9**\u3002\u5f53\u6240\u6709\u76ee\u6807\u70b9\u80fd\u88ab\u540c\u65f6\u586b\u5145\u65f6\uff0c\u6b64\u77e9\u9635\u6709\u89e3\u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u5173\u952e\u70b9\uff08\u76ee\u6807\u70b9\u548c\u521d\u59cb\u56fe\u4e0a\u7684\u9ed1\u70b9\uff09\u7684\u884c\u548c\u5217\u90fd\u9700\u88ab\u8003\u8651\uff0c\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u5173\u952e\u70b9\u62c6\u51fa\u4e24\u4e2a\u5143\u7d20\uff1a\u884c\u548c\u5217\u3002\u7531\u4e8e\u5efa\u7acb\u4e86\u521d\u59cb\u72b6\u6001\u548c\u76ee\u6807\u72b6\u6001\uff0c\u53ef\u4ee5\u7528\u4e8c\u5206\u56fe\u5339\u914d\u6c42\u89e3\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u628a\u884c\u7528$1-n$\u8868\u793a\uff0c\u628a\u5217\u7528$n+1 - n+n$\u8868\u793a\uff0c\u5efa\u56fe\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#define maxn 205\nusing namespace std;\n\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') {x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\n\nstruct edge{\n\tint v,next;\n}e[maxn*maxn<<1];\n\nint head[maxn<<1],k;\n\ninline void add(int u,int v)\n{\n\te[k]=(edge){v,head[u]};\n\thead[u]=k++;\n}\n\nint n;\nbool vis[maxn<<1];\nint cyx[maxn<<1];\n\ninline bool findpath(int x)\n{\n\tfor(int i=head[x];~i;i=e[i].next)\n\t\tif(!vis[e[i].v])\n\t\t{\n\t\t\tvis[e[i].v]=true;\n\t\t\tif(!cyx[e[i].v]||findpath(cyx[e[i].v]))\n\t\t\t{\n\t\t\t\tcyx[e[i].v]=x;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\treturn false;\n}\n\ninline bool match()\n{\n\tmemset(cyx,0,sizeof(cyx));\n\tfor(int i=1;i<=2*n;i++)\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tif(!findpath(i)) return false;\n\t}\n\treturn true;\n}\n\nint main()\n{\n//\tfreopen(\"P1129.in\",\"r\",stdin);\n\tint t=read();\n\twhile(t--)\n\t{\n\t\tn=read();\n\t\tmemset(head,-1,sizeof(head));k=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tif(read()==1)\n\t\t\t\t{\n\t\t\t\t\tadd(i,j);\n\t\t\t\t\tadd(n+j,n+i);\n\t\t\t\t}\n\t\tif(match()) printf(\"Yes\\n\");\n\t\telse printf(\"No\\n\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1576834603,
        "uid": 224236,
        "name": "GoPoux4",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "### \u9898\u89e3\uff1a\n\n\u8bf4\u53e5\u95f2\u8bdd\uff1a\u7531\u4e8e\u4e00\u4e9b ** \u9519\u8bef\uff0c\u6211\u8c03\u4e8640\u591a\u5206\u949f\u3002\u3002\u3002\n\n\u4e00. \u5f88\u5bb9\u6613\u770b\u51fa\u8fd9\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u95ee\u9898.\n\n[\u4e0d\u61c2\u4e8c\u5206\u56fe\u5339\u914d\u7684\u7ae5\u978b\u770b\u8fd9\u91cc](https://www.luogu.org/blogAdmin/article/edit/163455)\n\n\u4e8c. \u5308\u7259\u5229\u7b97\u6cd5\n\n  1. \u4e00\u5f00\u59cb\uff0cF \u4e3a\u7a7a\u3002\n\n  2. \u679a\u4e3e V1 \u4e2d\u7684\u70b9 x\uff0c\u627e\u4ee5 x \u4e3a\u8d77\u70b9\u7684\u589e\u5e7f\u8def\uff0c\u627e\u5230\u4e86\u5c31\u589e\u5e7f\u3002\n\n  3. V1 \u4e2d\u7684\u70b9\u90fd\u5c1d\u8bd5\u589e\u5e7f\u4e00\u6b21\u540e\uff0c\u7b97\u6cd5\u7ed3\u675f\u3002\n\n\u5b9a\u7406\uff1a\u5982\u679c\u5728\u67d0\u4e00\u65f6\u523b\uff0c\u627e\u4e0d\u5230\u4ee5 x \u4e3a\u8d77\u70b9\u7684\u589e\u5e7f\u8def\uff0c\u5219\u589e\u5e7f\u51e0\u8f6e\u4e4b\u540e\u4ecd\u4e0d\u4f1a\u627e\u5230\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nm)\n\n\u4e0b\u9762\u5206\u6790\u4e00\u4e0b\u677f\u5b50\uff1a\n\n\n```\n#include<iostream>\n\nusing namespace std;\n\nconst int V=1000010;\nint N,M,E,ans;\nint edge[V],head[1010],nxt[V],tot;\nint dfn[2020],match[1010],x,y,ti;\n\nvoid add(int x,int y)//\u52a0\u8fb9\n{\n\tedge[++tot]=y;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n}\n\nint dfs(int x,int ti)//ti\u662f\u65f6\u95f4\u6233\n{\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint j=edge[i];\n\t\tif(dfn[j]!=ti)//\u8fd9\u4e00\u8f6e\u8fd8\u6ca1\u6709\u904d\u5386\u5230\n\t\t{\n\t\t\tdfn[j]=ti;\n\t\t\tif(!match[j]||dfs(match[j],ti))//\u6ca1\u6709\u548cj\u70b9\u5339\u914d\u7684\u70b9\u6216\u8005\u662f\u627e\u5230\u4e86\u4e00\u6761\u53ef\u589e\u5e7f\u7684\u8def\u5f84\n\t\t\t{\n\t\t\t\tmatch[j]=i;//i,j\u5339\u914d\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t\t\t  \n\t}\n\treturn 0;\n}\n\nint main()\n{\n\tcin>>N>>M>>E;\n\tfor(int i=1;i<=E;i++)\n\t{\n\t\tcin>>x>>y;\n\t\tif(x>N||y>M)  continue;\n\t\tadd(x,y);\n\t}\n\t\n\tfor(int i=1;i<=N;i++)\n\t\tif(dfs(i,++ti))  ans++;//\u627e\u5230\u4e86\u4e00\u6761\u589e\u5e7f\u8def\n\t\t\n\tcout<<ans<<endl;\n\t\n\treturn 0;\n}\n```\n\n\u6709\u4e86\u677f\u5b50\u4e4b\u540e\u5c31\u5f88\u597d\u505a\u4e86\uff0c\u6211\u4eec\u628a \u884c \u770b\u4f5c\u5de6\u8fb9\u70b9\u96c6\uff0c \u5217 \u770b\u4f5c\u53f3\u8fb9\u70b9\u96c6\uff0c\u8bfb\u5165\u65f6\u5982\u679c\u8be5\u683c\u5b50\u662f\u9ed1\u8272\u683c\u5b50\uff0c\u90a3\u4e48\u5c31\u4ecei\u5411j\u8fde\u4e00\u6761\u8fb9\uff0c\u8dd1\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u5373\u53ef.\n\n\u6b63\u786e\u6027\uff1a\u4efb\u610f2\u4e2a\u9ed1\u8272\u65b9\u5757\uff0c\u5982\u679c\u4e00\u5f00\u59cb\u4e0d\u5728\u540c\u4e00\u884c\u6216\u540c\u4e00\u5217\uff0c\u65e0\u8bba\u8fdb\u884c\u4ec0\u4e48\u64cd\u4f5c\uff0c\u5b83\u4eec\u59cb\u7ec8\u90fd\u4e0d\u4f1a\u5728\u540c\u4e00\u884c\uff08\u540c\u4e00\u5217\uff09.\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\uff08\u6211\u77e5\u9053\u5404\u4f4d\u5927\u4f6c\u4e5f\u4e0d\u9700\u8981\u4ee3\u7801\uff09\uff1a\n\n```\n#include<iostream>\n#include<cstring>\n\n#define N 210\n\nusing namespace std;\n\nint T,ma[N][N],vis[N],mat[N],ans,n;\n\nint match(int x)//\u627e\u589e\u5e7f\u8def \n{\n\tfor(int i=1;i<=n;i++)\n\t\tif(ma[x][i]&&!vis[i])//\u6ca1\u6709\u88abx\u70b9\u904d\u5386\u8fc7\u5e76\u4e14\u6709\u8fb9\u76f8\u8fde \n\t\t{\n\t\t\tvis[i]=1;//\u6807\u8bb0 \n\t\t\tif(!mat[i]||match(mat[i]))//\u8fd9\u4e2a\u70b9\u8fd8\u6ca1\u6709\u88ab\u5339\u914d\u6216\u8005\u80fd\u4ece\u5176\u5339\u914d\u70b9\u627e\u5230\u66ff\u6362\u8def \n\t\t\t{\n\t\t\t\tmat[i]=x;//\u5339\u914d \n\t\t\t\treturn 1;//\u627e\u5230\u589e\u5e7f\u8def \n\t\t\t}\n\t\t}\n\treturn 0;//\u6ca1\u6709\u627e\u5230\u589e\u5e7f\u8def \n}\n\nint main()\n{\n\tcin>>T;\n\t\n\twhile(T--)\n\t{\n\t\tmemset(mat,0,sizeof(mat));\n\t\tcin>>n; ans=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++)  cin>>ma[i][j];//\u8bfb\u5165\uff08\u76f8\u5f53\u4e8e\u8fde\u8fb9\uff09 \n\t\tfor(int i=1;i<=n;i++)\n\t\t\tmemset(vis,0,sizeof(vis)),ans+=match(i);//\u8bb0\u5f97\u8981\u521d\u59cb\u5316\u54e6 \n\t\tif(ans==n)  cout<<\"Yes\"<<endl;//\u80fd\u627e\u5230\u4e00\u7ec4\u89e3 \n\t\telse  cout<<\"No\"<<endl;\n\t}\n\t \n\treturn 0;\n} \n```\n\n### [Plus Ultra!!!](https://www.luogu.org/blog/OnePunchManGO/)",
        "postTime": 1567847203,
        "uid": 126136,
        "name": "Plus_Ultra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1129 \u3010\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "# [P1129 [ZJOI2007]\u77e9\u9635\u6e38\u620f](https://www.luogu.org/problemnew/show/P1129)\n\n\n\u884c\u5217\u89c6\u4e3a\u4e8c\u5206\u56fe\u5de6\u53f3\u90e8\u96c6\uff0c\u503c\u4e3a1\u7684\u70b9\u6240\u5728\u884c\u5217\u8fde\u8fb9\n\n\u53d1\u73b0\u4ea4\u6362\u884c\u5217\u5c31\u662f\u4ea4\u6362\u8282\u70b9\u7f16\u53f7\n\n\u4e14\u5bf9\u89d2\u7ebf\u4e0a\u6709\u7f16\u53f7\u8868\u73b0\u4e3a\u4e8c\u5206\u56fe\u5b8c\u5168\u5339\u914d\u4e14\u5de6\u8282\u70b9\u53ea\u4e0e\u76f8\u5e94\u7684\u53f3\u8282\u70b9\u5339\u914d\uff08\u5373i\u4e0ei+n)\n\n\u4f46\u5c31\u7b97\u4e0d\u6ee1\u8db3i\u4e0ei+n\u5339\u914d\u800c\u6ee1\u8db3\u5b8c\u5168\u5339\u914d\u6211\u4e5f\u53ef\u4ee5\u901a\u8fc7\u67d0\u4e9b\u4ea4\u6362\u8282\u70b9\u7f16\u53f7\u7684\u64cd\u4f5c\u5c06\u5176\u8f6c\u6362\u6210i\u4e0ei+n\u5339\u914d\n\n\u800c\u7b54\u6848\u53c8\u53ea\u8981\u6c42\u662f\u5426\u5b58\u5728\uff0c\u4e0d\u7ba1\u65b9\u6848\n\n\u6545\u6c42\u8be5\u7f51\u7edc \u7684\u6700\u5927\u6d41\uff0c\u770b\u662f\u5426\u7b49\u4e8en\u5373\u53ef\n\n\n## \u5efa\u8fb9\n\ns\u4e0e1~n\u8fde\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff0cn+1~n+n\u4e0et\u8fde\u5bb9\u91cf\u4e3a1\u7684\u8fb9\n\n\u503c\u4e3a1\u7684\u70b9\u5c06\u5176\u884c\uff08i\uff09\u5217\uff08j+n\uff09\u8fde\u5bb9\u91cf\u4e3a1\u7684\u8fb9\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int N=200+5,M=82000;\nconst int inf=0x7fffffff;\ntemplate<class T>inline void read(T &num){\n    char ch;\n    while(!isdigit(ch=getchar()));\n    num=ch-'0';\n    while(isdigit(ch=getchar()))num=num*10+ch-'0';\n}\n\nint hea[N<<1],to[M],nex[M],val[M],tot=1,n,s,t,dep[N<<1];\n\ninline void add_edge(const int x,const int y,const int w){\n//printf(\"%d --> %d(%d)\\n\",x,y,w);\n    to[++tot]=y,nex[tot]=hea[x],hea[x]=tot,val[tot]=w;\n}\n\nqueue<int> que;\nbool bfs(){\n//printf(\"\\nbfs()\\n\"); \n    memset(dep,0,sizeof(dep));\n    dep[s]=1;\n    while(que.size())que.pop();\n    que.push(s);\n    int x;\n    while(que.size()){\n     \tx=que.front();que.pop();\n//printf(\"hea[%d]=%d\\n\",x,hea[x]);\n        for(int i=hea[x];i;i=nex[i]){\n            int y=to[i];\n            if(val[i]&&!dep[y]){\n//printf(\"%d -> %d,t=%d\\n\",x,y,t); \n             \tdep[y]=dep[x]+1;\n                if(y==t)return true;\n                que.push(y);\n            }\n        }\n    }\n//printf(\"return 0\\n\");\n    return false;\n}\n\nint dfs(int x,int flow){\n//printf(\"dfs(%d,%d)\\n\",x,flow);\n    if(x==t)return flow;\n//printf(\"dfs(%d,%d)\\n\",x,flow);\n    int rest=flow,k;\n//printf(\"hea[%d]=%d\\n\",x,hea[x]);\n    for(int i=hea[x];i&&rest;i=nex[i]){\n        int y=to[i];\n        if(val[i]&&dep[y]==dep[x]+1){\n//printf(\"%d->%d,dep[%d]=%d,dep[%d]=%d\\n\",x,y,x,dep[x],y,dep[y]); \n            k=dfs(y,min(rest,val[i]));\n//printf(\"k=%d,min(%d,%d)=%d\\n\",k,rest,val[i],min(rest,val[i])); \n            if(k==0)dep[y]=0;\n            val[i]-=k;\n            val[i^1]+=k;\n            rest-=k;\n        }\n    }\n//printf(\"   rest=%d,return=%d\\n\",rest,flow-rest);\n    return flow-rest;\n}\n\nint dinic(){\n    int maxflow=0,flow;\n    while(bfs())while(flow=dfs(s,inf))maxflow+=flow;\n//printf(\"%d\\n\",maxflow); \n    return maxflow;\n}\n\nint T;\nint main(){\n//\tfreopen(\"squ.out\",\"w\",stdout);\n\tread(T);\n\tfor(int tt=1;tt<=T;++tt){\n\t\tmemset(hea,0,sizeof(hea));\n\t\tmemset(to,0,sizeof(to));\n\t\tmemset(nex,0,sizeof(nex));\n\t\tmemset(val,0,sizeof(val));\n\t\ttot=1;\n\t\tread(n);\n\t\ts=n*2+1,t=s+1;\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tfor(int j=1,k;j<=n;++j){\n\t\t\t\tread(k);\n\t\t\t\tif(k){\n\t\t\t\t\tadd_edge(i,j+n,1);\n\t\t\t\t\tadd_edge(j+n,i,0);\n\t\t\t\t}\n\t\t\t}\n\t\t\tadd_edge(s,i,1);\n\t\t\tadd_edge(i,s,0);\n\t\t\tadd_edge(i+n,t,1);\n\t\t\tadd_edge(t,i+n,0);\n\t\t}\n\t\tprintf(\"%s\\n\",dinic()==n?\"Yes\":\"No\");\n\t}\n    return 0;\n}\n\n```\n",
        "postTime": 1548819340,
        "uid": 106642,
        "name": "Ajsoabk",
        "ccfLevel": 0,
        "title": "P1129 [ZJOI2007]\u77e9\u9635\u6e38\u620f"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9898\uff0c\u7b2c\u4e00\u53cd\u5e94\u641c\u7d22\u3002\n\n\u5f88\u660e\u663e\u53c8\u96be\u5199\u53c8\u6ca1\u6709\u591a\u5c11\u5206\u3002\n\n\u5173\u4e8e\u8fd9\u79cd\u5173\u4e8e\u5750\u6807\u7684\u9898\u5c31\u60f3\u5230\u7f51\u7edc\u6d41\uff0c\u6bd5\u7adfn=200\n\n\u597d\u4e86\uff0c\u753b\u753b\u56fe\u731c\u60f3\u4e0b\n\n\u597d\u4f3c\u6b63\u5e38\u5750\u6807\u8fde\u56fe\u8dd1\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u53ea\u8981\u7b49\u4e8en\u5373\u53ef\n\n\u786e\u5b9e\u5982\u6b64\n\nwhy?\n\u597d\u4f3c\u5176\u4ed6\u9898\u89e3\u90fd\u6ca1\u8bf4\n\n\u56e0\u4e3a\u8fde\u56fe\u65f6\u6bd4\u4e24\u5217\u4ea4\u6362\u5c31\u76f8\u5f53\u4e8e\u628a\u8fd9\u4e24\u4e2a\u70b9\u7684\u7f16\u53f7(\u7f51\u7edc\u6d41\u5efa\u56fe\u4e2d)\u4ea4\u6362\uff0c\u6240\u8fde\u7684\u8fb9\u4e0d\u53d8\n\n\u5f88\u660e\u663e\u56e0\u6b64\u6a2a\u7eb5\u4e24\u5217\u4ea4\u6362\uff0c\u6700\u5927\u6d41\u662f\u4e0d\u4f1a\u53d8\u7684\n\n\u770b\u4e0b\u6700\u540e\u8981\u6c42\u662f\u8981n\u6761\u5339\u914d\n\n\u56e0\u6b64\u5982\u679c\u73b0\u5728\u7684\u56fe\u6ee1\u8db3n\u6761\u5339\u914d\n\n\u628a\u6a2a\u7eb5\u4e24\u5217\u4ea4\u6362\uff0c\u5c31\u662f\u628a\u7f16\u53f7\u6539\u4e0b\n\n\u4e00\u5b9a\u80fd\u6ee1\u8db3\n\n\u56e0\u4e3a\u591a\u7ec4\u6570\u636e\u8bb0\u5f97\u91cd\u7f6ehead\u4ee5\u53cacnt\n\n\n\u9644\u4e0a\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nstruct node\n{\n    int to,next,f;\n}    e[400005];\nint cnt=1,head[40055],s,t,dep[40055];\nusing namespace std;\ninline void insert(int u,int v,int f)\n{\n    e[++cnt].to=v;\n    e[cnt].next=head[u];\n    head[u]=cnt;\n    e[cnt].f=f;\n}\ninline int dfs(int now,int f)\n{\n    int ret=0;\n    if(now==t)    return f;\n    for(int i=head[now];i && f;i=e[i].next)\n    {\n        if(dep[e[i].to]==dep[now]+1 && e[i].f)\n        {\n            int d=dfs(e[i].to,min(f,e[i].f));\n            f-=d;e[i].f-=d;ret+=d;e[i^1].f+=d;\n        }\n    }\n    if(!ret)    dep[now]=-1;\n    return ret;\n}\ninline bool bfs()\n{\n    memset(dep,0,sizeof(dep));\n    queue<int>    q;\n    q.push(s);\n    dep[s]=1;\n    while(!q.empty())\n    {\n        int now=q.front();q.pop();\n        for(int i=head[now];i;i=e[i].next)\n        {\n            if(!dep[e[i].to] && e[i].f)\n            {\n                dep[e[i].to]=dep[now]+1;\n                q.push(e[i].to);\n            }\n        }\n    }\n    return dep[t];\n}\ninline int dinic()\n{\n    int ret=0;\n    while(bfs())    ret+=dfs(s,1e9+7);\n    return ret;\n}\nint main()\n{\n    int T,n,op;\n    scanf(\"%d\",&T);\n    while(T--)\n    {\n        memset(head,0,sizeof(head));\n        cnt=1;\n        scanf(\"%d\",&n);\n        s=0;t=2*n+1;\n        for(int i=1;i<=n;i++)\n        {\n            insert(s,i,1);\n            insert(i,s,0);\n            insert(i+n,t,1);\n            insert(t,i+n,0);\n        }\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=n;j++)\n            {\n                scanf(\"%d\",&op);\n                if(op==1)\n                {\n                    insert(i,j+n,1);\n                    insert(j+n,i,0);\n                }\n            }\n        int mxl=dinic();\n        if(mxl==n)    printf(\"Yes\\n\");\n        else    printf(\"No\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1504338870,
        "uid": 44250,
        "name": "Zzh20011004",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "\u4ea4\u6362\u4efb\u610f\u4e24\u884c\u6216\u662f\u4e24\u5217\uff0c\u7136\u540e\u6211\u4eec\u6700\u7ec8\u7684\u76ee\u6807\u662f\u8981\u8fbe\u5230\u8be5\u65b9\u9635\u7684\u4e3b\u5bf9\u89d2\u7ebf\u4e0a\u7684\u683c\u5b50\u5747\u4e3a\u9ed1\u8272(\u5373\u5de6\u4e0a\u89d2\u81f3\u53f3\u4e0b\u89d2)\u7684\u683c\u5b50\u5747\u4e3a\u9ed1\u8272\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u7684\u64cd\u4f5c\u80af\u5b9a\u662f\u5c06\u6bcf\u4e00\u884c\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684 1 \u79fb\u5230\u4e0a\u8ff0\u7684\u8fd9\u6761\u5bf9\u89d2\u7ebf\uff0c\u6700\u540e\u5224\u65ad\u80fd\u5426\u6210\u7acb\uff0c\u5728\u8fd9\u6837\u7684\u601d\u8def\u7684\u5f15\u5bfc\u4e0b\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u4e5f\u5c31\u662f\u82e5 $a(i)(j)=1$ \uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u5c06 $j$ \u4e0e $i$ \u76f8\u8fde\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5339\u914d\u3002\n\n\u5224\u65ad\u6bcf\u4e00\u884c\u80fd\u5426\u5408\u6cd5\u5339\u914d\u5373\u53ef\u3002\n\n#### \u4ee3\u7801\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#define F1(i,l,r) for(int i=l;i<=r;++i)\n#define F2(i,r,l) for(int i=r;i>=l;--i)\n#define sf(i) scanf(\"%d\",&i)\n#define pf(i) printf(\"%d\\n\",i)\n#define N 207\nusing namespace std;\n\nint n;\nint e[2*N][N],d[N];\nbool vis[N];\n\nbool find(int u){\n\tif(vis[u]) return 0;\n\tvis[u]=1;\n\tF1(v,1,n)\n\t\tif(e[u][v])\n\t\t\tif(!d[v]||find(d[v])){\n\t\t\t\td[v]=u;\n\t\t\t\treturn 1;\n\t\t\t}\n\treturn 0;\n}\n\nbool work(){\n\tF1(i,1,n){\n\t\tmemset(vis,0,sizeof(vis));\n\t\tif(find(i)) continue;\n\t\treturn 0;\n\t}\n\treturn 1;\n}\n\nint main(){\n\tint T;\n\tcin>>T;\n\twhile(T--){\n\t\tmemset(e,0,sizeof(e));\n\t\tmemset(d,0,sizeof(d));\n\t\tsf(n); \n\t\tF1(i,1,n)\n\t\t\tF1(j,1,n){\n\t\t\t\tint a;sf(a);\n\t\t\t\tif(a) e[j][i]=1;\n\t\t\t}\n\t\tif(work()) printf(\"Yes\\n\");\n\t\telse printf(\"No\\n\");\n\t}\n}\n```\n\n\u591a\u7ec4\u6570\u636e\u8bb0\u5f97\u6e05\u96f6\uff0c\u6211\u7b2c\u4e00\u6b21\u4ea4\u5c31\u56e0\u4e3ad\u6570\u7ec4\u6ca1\u6709\u6e05\u96f6\u7206\u96f6\u4e86\n",
        "postTime": 1600868462,
        "uid": 224831,
        "name": "\u725b\u86d9\u4e36\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "**\u601d\u8def\uff1a**  \n\n\u5c06\u9ed1\u8272\u683c\u5b50\u6240\u5728\u7684\u884c\u548c\u5217\u8fde\u8fb9, \u8dd1\u4e00\u8fb9\u6700\u5927\u5339\u914d, \u5982\u679c\u662f\u5b8c\u7f8e\u5339\u914d\u5373\u53ef(\u6240\u6709\u70b9\u90fd\u662f\u5339\u914d\u70b9)                 \n\n\u5728\u5b8c\u7f8e\u5339\u914d\u7684\u60c5\u51b5\u4e0b\n\n\u5047\u5982 \u52171 -> \u884c5 , \u52174 -> \u884c1 (->\u8868\u793a\u5339\u914d)\n\n\u6211\u4eec\u5219\u53ef\u4ee5\u5c06\u884c5\u548c\u884c1\u6362\u4e00\u4e0b\u4f4d\u7f6e, \u8fd9\u6837\u4ea4\u6362 \u5217\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd, \u5339\u914d\u53d8\u4e3a\u52171 -> \u884c1, \u52174 -> \u884c5\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N = 40005;\nint h[N], ne[N * 2], to[N * 2];\nint tot, T, n;\n\nvoid add(int x,int y) {\n\tne[++tot] = h[x];\n\th[x] = tot, to[tot] = y;\n}\n\nint read(void) {\n\tint x = 0;\n\tchar c = getchar();\n\twhile (!isdigit(c)) c = getchar();\n\twhile (isdigit(c)) {\n\t\tx = (x << 3) + (x << 1) + c - '0';\n\t\tc = getchar();\n\t}\n\treturn x;\n}\n\nint tim, vis[N], match[N];\n\nint dfs(int x) {\n\tfor (int i = h[x]; i; i = ne[i]) {\n\t\tint y = to[i];\n\t\tif (vis[y] == tim) continue;\n\t\tvis[y] = tim;\n\t\tif (!match[y] || dfs(match[y])) {\n\t\t\tmatch[y] = x; return 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nvoid pre(void) {\n\tmemset(h, 0, sizeof(h));\n\tmemset(ne, 0, sizeof(ne));\n\tmemset(to, 0, sizeof(to));\n\tmemset(match, 0, sizeof(match));\n\ttot = 0;\n}\n\nint main() {\n\tT = read();\n\twhile (T--) {\n\t\tpre();\n\t\tn = read();\n\t\tfor (int i = 1;i <= n; i++) \n\t\tfor (int j = 1;j <= n; j++) {\n\t\t\tint x = read();\n\t\t\tif (x) {\n\t\t\t\tadd(i, j + n); add(j + n, i);\n\t\t\t}\n\t\t}\n\t\tint ans = 0;\n\t\tfor (int i = 1;i <= n; i++) \n\t\ttim++, ans += dfs(i);\n\t\tif (ans == n) printf(\"Yes\\n\");\n\t\telse printf(\"No\\n\");\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1595257753,
        "uid": 324858,
        "name": "\u26a1114514_zzm\u26a1",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "# \u5199\u5728\u524d\u9762\uff1a\n\u5982\u60f3\u83b7\u53d6\u66f4\u4f73\u9605\u8bfb\u6548\u679c\uff0c\u8bf7\u70b9\u51fb[\u8fd9\u91cc](https://blog.csdn.net/kkkksc03/article/details/88854774)\uff0c\u4efb\u4f55\u7591\u95ee\u6b22\u8fce\u79c1\u4fe1\u4f5c\u8005\uff01\n\n# \u9898\u76ee\u94fe\u63a5\uff1ahttps://www.luogu.org/problemnew/show/P1129\n# \u5206\u6790\uff1a\n\u8fd9\u9053\u9898\u4e0d\u662f\u5f88\u597d\u60f3\uff0c\u4f46\u53ea\u8981\u60f3\u7684\u51fa\u6765\uff0c\u4ee3\u7801\u4e0d\u6210\u95ee\u9898\u3002\n\n### \u601d\u8def1\n\n\u4e3e\u51e0\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\n\n\u5bf9\u4e8e\u4efb\u4f55\u6570\u6765\u8bf4\uff0c\u540c\u4e00\u884c\u7684\u6c38\u8fdc\u5728\u540c\u4e00\u884c\uff0c\u540c\u4e00\u5217\u7684\u6c38\u8fdc\u5728\u540c\u4e00\u5217\n\n\u8fdb\u4e00\u6b65\u7814\u7a76\uff0c\u53d1\u73b0\u6240\u6709\u884c\u6240\u6709\u5217\u8981\u67091\uff0c\u4e14\u81f3\u5c11\u8981\u6709n\u4e2a1\u4e24\u4e24\u4e0d\u540c\u884c\u4e0d\u540c\u5217\n\n\u5bf9\u4e8e\u6bcf\u4e2a$1$\uff0c\u8bbe\u5750\u6807\u4e3a$(x,y)$\uff0c\u90a3\u4e48$x$\u884c\u5411$y$\u5217\u8fde\u8fb9\n\n\u5224\u65ad\u662f\u5426\u6709\u5b8c\u5168\u5339\u914d\uff08\u90fd\u80fd\u5339\u914d\u4e0a\uff09\uff0c\u80fd\u5339\u914d\u4e0a\u5c31\u53ef\u4ee5\n\n### \u601d\u8def2\n\n\u8fd9\u4e2a\u5c31\u662f\u6bd4\u8f83\u62d3\u5c55\u7684\u601d\u8def\u4e86\uff0c\u5982\u679c\u4f60\u5b66\u4e86\u9ad8\u7b49\u6570\u5b66\u7684\u8bdd\uff0c\u5e94\u8be5\u77e5\u9053\u6709\u4e2a\u53eb\u884c\u5217\u5f0f\u7684\u4e1c\u897f\uff08\u767e\u5ea6\u4e00\u4e0b\uff1f\uff09\uff0c\u6211\u4eec\u53ea\u9700\u5224\u65ad\u884c\u5217\u5f0f\u662f\u5426\u7b49\u4e8e0\uff08\u6bcf\u4e00\u4e2a\u77e9\u9635\u4e2d\u7684\u6570\u5b57\u90fd\u4e58\u4e0a\u9664\u53bb\u8fd9\u4e00\u884c\u8fd9\u4e00\u5217\u7684\u5176\u4ed6\u6240\u6709\u6570\uff09\uff0c\u5373\u53ef\u6c42\u5f97\u7b54\u6848\u3002\n\n#### PS\uff1a\u7531\u4e8e\u4f5c\u8005\u5bf9\u6b64\u4e86\u89e3\u6709\u9650\uff0c\u8bb2\u8ff0\u4e0d\u5bf9\u4e4b\u5904\u6b22\u8fce~~\u8e22~~\u63d0\u51fa\uff01\n\n# \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<cstring> \nusing namespace std;\nvector<int>e[205];\nint link[205];\nint vis[205];\nint t;\nint find(int x)\n{\n\tfor(int i=0;i<e[x].size();i++)\n\t{\n\t\tint p=e[x][i];\n\t\tif(vis[p]!=t)\n\t\t{\n\t\t\tvis[p]=t;\n\t\t\tif(!link[p]||find(link[p]))\n\t\t\t{\n\t\t\t\tlink[p]=x;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t} \n\treturn 0;\n}\nint main()\n{\n\tint T,n,tmp,cnt;\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tcnt=0;\n\t\tt=0;\n\t\t\n\t\tmemset(vis,0,sizeof(vis));\n\t\tmemset(link,0,sizeof(link));\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1;i<=n;i++)\n\t\te[i].clear();\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t{\n\t\t\t\tscanf(\"%d\",&tmp);\n\t\t\t\tif(tmp==1)\n\t\t\t\t{\n\t\t\t\t\te[i].push_back(j);\n\t\t\t\t}\n\t\t\t} \n\t\t} \n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tt++;\n\t\t\tif(find(i))\n\t\t\t{\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t\telse\n\t\t\tbreak;\n\t\t}\n\t\tif(cnt==n)\n\t\t{\n\t\t\tprintf(\"Yes\\n\");\n\t\t} \n\t\telse\n\t\tprintf(\"No\\n\");\n\t} \n\treturn 0;\n} \n```\n\n",
        "postTime": 1553690230,
        "uid": 45475,
        "name": "ShineEternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "\u6e05\u5317\u5b66\u5802\u9752\u5c9bDP\u56fe\u8bba\u7b14\u8bb0 DAY6  \n\u4e4d\u770b\u9898\u610f\u6839\u672c\u6ca1\u4ec0\u4e48\u601d\u8def\uff0c\u540e\u6765\u4ed4\u7ec6\u4e00\u60f3\u3002\u3002\u3002\u55ef\uff1f\uff1f\u884c\u5217\u4ea4\u6362\uff1f\uff1f\u5bf9\u89d2\u7ebf\u8981\u5168\u662f\u9ed1\u683c\u5b50\uff1f\uff1f\u60f3\u4e86\u4e00\u4f1a\u3002\u3002\u3002\u8fd9\u9898\u4e0d\u5308\u7259\u5229\u4e8c\u5206\u56fe\u5339\u914d\u4e48\u3002\u3002\u3002   \n\u628a\u9ed1\u683c\u5b50\u770b\u6210\u662f\u70b9\uff0c\u7ad6\u7740\u662f1~n\uff0c\u6a2a\u7740\u662f1~n\uff0c\u5982\u679c\u67d0\u5217\u7684\u67d0\u4e00\u884c\u7684\u70b9\u662f\u9ed1\u7684\uff0c\u5c31\u4e0e\u8fd9\u884c\u8fde\u4e00\u6761\u7ebf\uff0c\u800c\u4e14\u4e0d\u7ba1\u600e\u4e48\u4ea4\u6362\u90fd\u4e0d\u4f1a\u6539\u53d8\u989c\u8272\u72b6\u51b5\u3002   \n\u90a3\u8fd9\u4e0d\u5c31\u6210\u4e86\u5308\u7259\u5229\u7684\u88f8\u9898\u4e86\u5417\uff1f   \n  \u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\n  ```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<vector>\n#include<cstring> \nusing namespace std;\nint A[200010] , n , m , T , vis[200010] , ans , x; \nvector<int> vec[200010] ;\nbool find(int x){\n\tfor(int i = 0 ; i < vec[x].size() ; i++){\n\t\tif(!vis[vec[x][i]]){\n\t\t\tvis[vec[x][i]] = 1;\n\t\t\tif(!A[vec[x][i]] || find(A[vec[x][i]])){\n\t\t\t\tA[vec[x][i]] = x;//A\u8868\u793a\u5728\u53e6\u4e00\u4fa7\u7684\u5339\u914d\u70b9\n\t\t\t\treturn 1;//\u5339\u914d\u5230\u4e86\u5c31\u8fd4\u56detrue\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;//\u4e0d\u884c\u5c31\u7b97\u4e86\n}\nint main ( )  {\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\"%d\", &n);\n\t\tans = 0;\n\t\tfor(int i = 1 ; i <= n ; i++){\n\t\t\tvec[i].clear() , A[i] = 0;\n\t\t}\n\t\tfor(int i = 1 ; i <=n ; i++){\n\t\t\tfor(int j = 1 ; j <= n ;j++){\n\t\t\t\tscanf(\"%d\" , &x);\n\t\t\t\tif(x){\n\t\t\t\t\tvec[i].push_back(j);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = 1 ; i <= n ;i++){\n\t\t\tmemset(vis , 0 ,sizeof(vis));\n\t\t\tans += find(i);\n\t\t}\n\t\tputs(ans == n ? \"Yes\" : \"No\");\n\t}\n}\n```",
        "postTime": 1548999897,
        "uid": 39009,
        "name": "Time_grow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "\u8865\u4e00\u53d1\u9898\u89e3\u5427\uff0c\u8fd9\u9898\u4e0d\u662f\u88f8\u7684\u4e8c\u5206\u56fe\u5339\u914d\u5417\uff1f\n\n\u697c\u4e0a\u7684\u795e\u4ed9\u8bf4\u7684\u597d\uff0c\u5c31\u50cf\u6211\u4eec\u73a9\u9b54\u65b9\u4e00\u6837\uff0c\u6211\u4eec\u884c\u5217\u4e00\u5b9a\u53ef\u4ee5\u901a\u8fc7\u4e00\u5b9a\u7684\u8f6c\u6362\u8fbe\u6210\u76ee\u6807\uff01\u6240\u4ee5\u5462\uff0c\u65e0\u8111\u52a0\u8fb9\u5373\u53ef\uff01\n\n\u5bf9\u4e8e\u4e8c\u5206\u56fe\u5339\u914d\u95ee\u9898\uff0c\u53ef\u4ee5\u7528\u5308\u7259\u5229\u7b97\u6cd5\u6c42\u89e3\uff0c\u7136\u800c\u7b14\u8005\u7528\u7684\u662f\u6700\u5927\u6d41dinic\u7b97\u6cd5\uff01\n\n\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u5982\u4f55\u628a\u6b64\u95ee\u9898\u8f6c\u6362\u4e3a\u6700\u5927\u6d41\u3002\u6211\u4eec\u8981\u5b66\u4f1a\u62c6\u70b9\uff01\n\n\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u628a\u4e00\u4e2a\u70b9\u62c6\u6210\u4e24\u4e2a\u70b9\uff08\u4ee5\u9650\u5236\u6bcf\u4e2a\u70b9\uff08\u7269\u54c1\uff09\u7528\u4e00\u6b21\uff09\n\n\u8bb0\u5f55i\u62c6\u4e3ai,i+n\n\n\u6211\u4eec\u8981\u5355\u72ec\u5efa\u4e00\u4e2a\u6e90\u70b9\u548c\u6c47\u70b9\uff0c\u7136\u540e\u6e90\u70b9S\u5411i\u8fde\u8fb9\uff0ci+n\u5411T\u8fde\u8fb9\u5373\u53ef\uff01\n\nmemset(...sizeof(fir))\u5c45\u7136\u6253\u6210\u4e86memset(...sizeof(ecnt))\nT\u4e86\u597d\u591a\u53d1qwq\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1005, M = 100005, INF = 1e9;\nint n, ss, tt, l, r, ans, ecnt, depth[N], q[N], fir[N], cur[N], to[M], nxt[M], len[M], inv[M];\nbool vis[N];\ntemplate <class T> void rd(T &x) {\n\tchar c = getchar(); int f = 1; x = 0;\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') f = -1;\n\tfor (; isdigit(c); c = getchar()) x = x * 10 + c - '0';\n\tx *= f;\n}\nvoid ae(int u, int v, int w) {\n\tto[++ecnt] = v; nxt[ecnt] = fir[u]; len[ecnt] = w; inv[ecnt] = ecnt + 1; fir[u] = ecnt;\n\tto[++ecnt] = u; nxt[ecnt] = fir[v]; len[ecnt] = 0; inv[ecnt] = ecnt - 1; fir[v] = ecnt; \n}\nbool make_level() {\n\tint i; memset(vis, false, sizeof(vis));\n\tfor (i = ss; i <= tt; ++i) cur[i] = fir[i];\n\tvis[q[l = r = 1] = ss] = true; depth[ss] = 1;\n\twhile (l <= r) {\n\t\tint u = q[l++];\n\t\tfor (i = fir[u]; i; i = nxt[i]) {\n\t\t\tint v = to[i], w = len[i];\n\t\t\tif (!vis[v] && w) vis[q[++r] = v] = true, depth[v] = depth[u] + 1;\n\t\t}\n\t} \n\treturn vis[tt];\n}\nint dinic(int u, int lim) {\n\tif (u == tt) return lim;\n\tint i, ret = 0;\n\tfor (i = cur[u]; i; i = nxt[i]) {\n\t\tint v = to[i], w = len[i];\n\t\tif (depth[v] == depth[u] + 1 && w) {\n\t\t\tint tmp = dinic(v, min(w, lim));\n\t\t\tlen[i] -= tmp; len[inv[i]] += tmp;\n\t\t\tlim -= tmp; ret += tmp;\n\t\t\tif (!lim) {cur[u] = i; return ret;}\n\t\t}\n\t}\n\tcur[u] = 0; return ret;\n}\nvoid solve() {\n\tint i, j; memset(fir, ecnt = 0, sizeof(fir));\n\trd(n); ss = 0; tt = n << 1 | 1; ans = 0;\n\tfor (i = 1; i <= n; ++i)\n\t\tfor (j = 1; j <= n; ++j) {\n\t\t\tint x; rd(x);\n\t\t\tif (!x) continue;\n\t\t\tae(i, j + n, 1);\n\t\t}\n\tfor (i = 1; i <= n; ++i) ae(ss, i, 1), ae(i + n, tt, 1);\n\twhile (make_level()) ans += dinic(ss, INF);\n\tif (ans == n) puts(\"Yes\"); else puts(\"No\");\n}\nint main() {\n\tint T; rd(T);\n\twhile (T--) solve(); \n\treturn 0;\n}\n\n```",
        "postTime": 1546608404,
        "uid": 30817,
        "name": "muller",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "~~\u4e0d\u77e5\u9053\u600e\u4e48\u5f00\u5934~~\n\n\u4e8c\u5206\u56fe\u5339\u914d\u95ee\u9898\u3002\n\n~~\u53ef\u80fd\u662f\u7b97\u6cd5\u7ea7\u522b\u62c9\u9ad8\u4e86\u96be\u5ea6~~\n\n\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u4f1a\u53d1\u73b0\u4e00\u6761\u6027\u8d28\u3002\n\n>\u540c\u4e00\u5217\u7684\u9ed1\u5757\u6362\u4e0d\u51fa\u8fd9\u4e00\u5217\u3002\u884c\u4e5f\u4e00\u6837    \n \u6839\u636e\u9898\u76ee\u8981\u6c42\uff0c\u53ef\u4ee5\u5f97\u51fa:\u4e00\u884c\uff08\u6216\u4e00\u5217\uff09\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u9ed1\u5757\u53c2\u4e0e\u4e86\u5339\u914d\u3002\n \n$So$,\u5269\u4e0b\u7684\u4e8b\u4fbf\u662f\u505a\u4e8c\u5206\u56fe\u5339\u914d\u4e86\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<iostream>\n#include<queue>\nusing std::queue;\nusing std::min;\nconst int N=310;\nconst int inf=0x7fffffff;\nstruct node\n{\n    int p;\n    int f;\n    int nxt;\n};\nnode line[N*N*2];\nint head[N<<1],tail=-1;\nint cur[N<<1];\nint dis[N<<1];\nvoid add(int a,int b,int c)\n{\n    line[++tail].p=b;\n    line[tail].f=c;\n    line[tail].nxt=head[a];\n    head[a]=tail;\n    return ;\n}\nvoid init()\n{\n    memset(head,-1,sizeof(head));\n    tail=-1;\n}\nbool bfs(int s,int t)\n{\n    queue<int>q;\n    memset(dis,0,sizeof(dis));\n    dis[s]=1;\n    q.push(s);\n    while(!q.empty())\n    {\n        int pas=q.front();q.pop();\n        for(int i=head[pas];i!=-1;i=line[i].nxt)\n            if(!dis[line[i].p]&&line[i].f)\n            {\n                q.push(line[i].p);\n                dis[line[i].p]=dis[pas]+1;\n            }\n    }\n    for(int i=0;i<=t;i++)   cur[i]=head[i];\n    return dis[t];\n}\nint dfs(int now,int aim,int flow)\n{\n    if(now==aim||!flow) return flow;\n    int f,res=0;\n    for(int &i=cur[now];i!=-1;i=line[i].nxt)\n        if(dis[now]+1==dis[line[i].p]&&(f=dfs(line[i].p,aim,min(line[i].f,flow))))\n        {\n            res+=f;\n            line[i].f-=f;\n            line[i^1].f+=f;\n            flow-=f;\n            if(!flow)   return res;\n        }\n    return res;\n}\nint dinic(int s,int t)\n{\n    int res=0;\n    while(bfs(s,t))\n        res+=dfs(s,t,inf);\n    return res;\n}\nint main()\n{\n\t/*\n    * 0\u4e3a\u6e90\u70b9\uff0c2*n+1\u4e3a\u6c47\u70b9\n    * 1~n\u4e3a\u884c\uff0cn+1~2*n\u4e3a\u5217\n    */\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        init();\n        int n;\n        scanf(\"%d\",&n);\n        int a,b;\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=n;j++)\n            {\n                scanf(\"%d\",&a);\n                if(!a)  continue;\n                add(i,n+j,1);\n                add(n+j,i,0);\n            }\n        for(int i=1;i<=n;i++)\n        {\n            add(0,i,1);\n            add(i,0,0);\n            add(i+n,n*2+1,1);\n            add(n*2+1,i+n,0);\n        }\n        //\u82e5\u5339\u914d\u6570\u7b49\u4e8en\uff0c\u5219\u53ef\u4ee5\u5b8c\u6210\u6e38\u620f\n        if(dinic(0,2*n+1)==n)\n            printf(\"Yes\\n\");\n        else\n            printf(\"No\\n\");\n\n    }\n}\n\n```",
        "postTime": 1545126370,
        "uid": 28007,
        "name": "Lance1ot",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "\n\n\n    \n```cpp\n//\u9996\u5148\u6211\u4eec\u5f00\u4e00\u4e2amap[i][j] \n//\u5f53map[i][j]\u4e3a1\uff0c\u90a3\u4e48i\u4e0ej\u76f8\u540c \n//\u7528\u5308\u7259\u5229\u7b97\u6cd5(\u8fd9\u4e5f\u662f\u4e00\u79cd\u7384\u5b66\u7b97\u6cd5qaq)\u6c42\u6700\u5927\uff08\u53ef\u4ee5\u81ea\u884c\u767e\u5ea6\uff09 \n//\u5f53\u6700\u5927\u5339\u914d\u6570\u7b49\u4e8e\u5bf9\u89d2\u7ebf\u4e0a\u7684\u70b9\u6570\u5c31\u6210\u7acb\u5219\u5426\u5219\u4e0d\u884c \n//P.S.:\u505a\u4e86\u4e00\u4e9b\u7384\u5b66\u4fee\u6539\uff0c\u5982\u679c\u590d\u5236\u4f60\u4f1a\u6b7b\u7684\u5f88\u60e8 \uff01 \n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\ninline int read()\n{\n    char a=getchar();\n    int w=0;\n    while(a>='0'&&a<='9')\n        w=(a-48)+(w<<1)+(w<<3),a=getchar();\n    //cin.ignore();\n    return w;\n```\n}//\u5feb\u4e0d\u4e86\u591a\u5c11\u7684\u4f18\u5316\n```cpp\nint n;\nint cr[201];\nbool cb[201];\nint map[201][201];\nbool dfs(int a)\n{\n    for(int i=1;i<=n;i++)\n        if(map[a][i]==1&&!cb[i])\n        {\n            cb[i]=true;\n            if(cr[i]==0||dfs(cr[i]))\n            {\n                cr[i]=a;\n                return true;\n            }\n        }\n    return false;\n}\nint main()\n{\n    int T;\n    cin>>T;\n    while(T--){\n        cin>>n;\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=n;j++)\n                cin>>map[i][j];\n        memset(cr,0,sizeof(cr));\n        int ans=0;\n        for(int i=1;i<=n;i++)\n        {\n            memset(cb,false,sizeof(cb));\n            if(dfs(i))ans++;\n        }\n        if(ans==n)cout<<\"yes\"<<endl;\n            else cout<<\"no\"<<endl;\n    }\n}\n\n```",
        "postTime": 1509806415,
        "uid": 58692,
        "name": "zheng_liwen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "###\u9898\u89e3\n\n\n\u770b\u5230\u7684\u7b2c\u4e00\u773c\u4ee5\u4e3a\u662fdfs\uff0c\u8fd9\u4e2a\u6570\u636e\u663e\u7136\u4f1aT\uff0c\u7136\u540e\u60f3\u5230\u8fd9\u9053\u9898\u8ba9\u5411\u53f3\u4e0b\u7684\u5bf9\u89d2\u7ebf\u90fd\u4e3a\u9ed1\u8272\uff0c\u53ca\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u76f8\u7b49\u7684\u884c\u6570\u548c\u5217\u6570\u90fd\u9700\u8981\u4f7f\u4ed6\u4eec\u7684\u4ea4\u70b9\u662f\u9ed1\u8272\uff0c\u624d\u60f3\u51fa\u6765\u8fd9\u9053\u9898\u53ef\u4ee5\u641e\u4e00\u641e\u4e8c\u5206\u56fe\uff0c\u5177\u4f53\u65b9\u6848\u662f\u628a\u884c\u4e0e\u8fb9\u8fdb\u884c\u5339\u914d\uff0c\u56e0\u4e3a\u6bcf\u4e00\u884c\u548c\u6bcf\u4e00\u5217\u9700\u8981\u4e00\u4e00\u5bf9\u5e94\uff0c\u6240\u4ee5\u663e\u7136\u662f\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u5f53\u5339\u914d\u6570\u4e0en\u76f8\u7b49\u65f6\u5b58\u5728\u65b9\u6848\uff0c\u5426\u5219\u65e0\u89e3\u3002\n\n\n\u65e2\u7136\u662f\u4e8c\u5206\u56fe\uff0c\u6570\u636e\u4e0d\u662f\u5f88\u5c0f\uff0c\u4e8e\u662f\u5c31\u7528\u7f51\u7edc\u6d41\u6c34\u3002~~(\u7f51\u7edc\u6d41\u5927\u6cd5\u597d)~~\n\n\n\u5efa\u56fe\uff1aS\u8fde\u6bcf\u4e00\u4e2a\u6a2a\u884c\uff0c\u6bcf\u4e2a\u7eb5\u884c\u8fdeT\uff0c\u8f93\u5165\u65f6\u8981\u662f\u9ed1\u68cb\u5b50\u5219\u628a\u6a2a\u884c\u548c\u7eb5\u884c\u8fde\u4e0a\u3002\u6bcf\u6761\u8fb9\u8fb9\u6743\u4e3a1\u3002\n\n\n###\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 200005\n#define inf 214748347\nusing namespace std;\nint n,S,T,m,num_e=1,ans,TT;\nint head[maxn],dis[maxn];\nint a[205][205];\nstruct edge{\n    int to,nex,rest;\n}e[maxn];\nvoid add(int x,int y,int z){\n    e[++num_e].to=y;e[num_e].nex=head[x];head[x]=num_e;e[num_e].rest=z;\n    e[++num_e].to=x;e[num_e].nex=head[y];head[y]=num_e;e[num_e].rest=0;\n}\nbool bfs(){\n    memset(dis,0,sizeof(dis));\n    queue<int> q;\n    q.push(S);\n    dis[S]=1;\n    while(!q.empty()){\n        int x=q.front();q.pop();\n        for(int i=head[x];i;i=e[i].nex){\n            if(!dis[e[i].to]&&e[i].rest){\n                q.push(e[i].to);\n                dis[e[i].to]=dis[x]+1;\n            }\n        }\n    }\n    if(dis[T]) return true;\n    return false;\n}\nint dfs(int x,int minn){\n    if(x==T) return minn;\n    int sum=0,qaq=0;\n    for(int i=head[x];i;i=e[i].nex){\n        if(dis[e[i].to]==dis[x]+1&&e[i].rest){\n            qaq=dfs(e[i].to,min(minn-sum,e[i].rest));\n            sum+=qaq;\n            e[i].rest-=qaq;\n            e[i^1].rest+=qaq;\n            if(sum==minn) return sum;\n        }\n    }\n    if(!sum) dis[x]=0;\n    return sum;\n}\nint dinic(){\n    int anss=0;\n    while(bfs()) anss+=dfs(S,inf);\n    return anss;\n}\n\nint main(){\n    scanf(\"%d\",&TT);\n    while(TT--){\n        memset(head,0,sizeof(head));\n        scanf(\"%d\",&n);\n        num_e=1,S=0,T=n*2+1;\n        for(int i=1;i<=n;i++) add(S,i,1),add(i+n,T,1);\n        for(int i=1;i<=n;i++){\n            for(int j=1;j<=n;j++){\n                scanf(\"%d\",&a[i][j]);\n                if(a[i][j]) add(i,j+n,1);\n            }\n        }\n        if(dinic()==n) printf(\"Yes\\n\");\n        else printf(\"No\\n\");\n    }\n\n    return 0;\n}\n```",
        "postTime": 1505990022,
        "uid": 58489,
        "name": "\u4e1c\u5bfa\u4e36\u95f2\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "WA\u4e867\u6b21\uff0c\u624dA\uff0c\u8981\u53d1\u4e2a\u9898\u89e3\u53cd\u7701\u4e00\u4e0b\u3002\n\n\u8fd9\u9053\u9898\u6298\u78e8\u4e86\u6211\u4e09\u4e2a\u5c0f\u65f6\uff0cQAQ\n\n\u6211\u672c\u4eba\u4e0d\u559c\u6b22\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u6240\u4ee5\u6253\u4e86\u4e2adinic\u7f51\u7edc\u6d41\u5efa\u56fe\uff0c\u987a\u4fbf\u719f\u6089\u4e00\u4e0bdinic\uff0c\u8c01\u77e5\uff0c\u6211\u66fe\u7ecf\u7684dinic\u6a21\u677f\u4e2d\u6709\u4e00\u4e2a\u7edd\u4e16bug\uff0c\u4e00\u4e2a\u5c0f\u5c0f\u7684\u6570\u636e\u5c31\u80fd\u5f04\u6210\u6b7b\u5faa\u73af\uff0c\u53ef\u662f\u6211\u4e5f\u4e0d\u77e5\u9053\u90a3\u4e2a\u6a21\u677f\u600e\u4e48\u66fe\u5728\u843d\u8c37P3386\u4e0a\u8fc7\u4e86\n\n\u6d1b\u8c37\u6709\u6bd2\uff0c\u4e5f\u4e0d\u53d1\u6570\u636e\uff0c\u6211\u786c\u662f\u81ea\u5df1\u6162\u6162\u8bd5QAQ\n\n\u8fd9\u91cc\u5c31\u76f4\u63a5\u4e0a\u4ee3\u7801\uff0c\u4e2d\u95f4\u6709\u4e2a\u5730\u65b9\u6709\u53e5\u6ce8\u91ca\uff0c\u90a3\u4e2abug\uff0c\u90a3\u4e2abug\uff0c\u90a3\u4e2abug\u771f\u662f\u6709\u6bd2\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int N=401;\nconst int INF=0x3f3f3f3f;\nstruct Edge{\n    int to,next,cap;\n}e[10*N*N];\nint level[10*N*N],a[10*N*N];\nint n,T,EdgeCnt=0;\nqueue<int> Q;\nvoid addedge(int u,int v,int w){\n    int p=EdgeCnt;\n    e[p].to=v;e[p].next=a[u];e[p].cap=w;\n    a[u]=p;EdgeCnt++;\n}\nbool bfs(int S){\n    memset(level,0xff,sizeof(level));\n    Q.push(S);\n    level[S]=0;\n    while (!Q.empty()){\n        int u=Q.front();Q.pop();\n        int p=a[u];\n        while (p!=-1){\n            int v=e[p].to;\n            if (e[p].cap>0 && level[v]==-1){\n                level[v]=level[u]+1;\n                Q.push(v);\n            }\n            p=e[p].next;\n        }\n    }\n    return level[T]>-1;\n}\nint dfs(int u,int f){\n    if (u==T)return f;\n    int used=0;\n    int p=a[u];\n    while (p!=-1){\n        int v=e[p].to;\n        if (e[p].cap>0 && level[v]==level[u]+1){\n            int w=f-used;\n            w=dfs(v,min(w,e[p].cap));\n            e[p].cap-=w;\n            e[p^1].cap+=w;\n            used+=w;\n            if (used==f)return f;\n        }\n        p=e[p].next;\n    }\n    //if (used==0)level[T]=-1;\u6709\u6bd2\n    return used;\n}\nint main(){\n    int TT;\n    scanf(\"%d\",&TT);\n    while (TT--){\n        scanf(\"%d\",&n);\n        memset(a,0xff,sizeof(a));EdgeCnt=0;\n        for (int i=2;i<=n+1;i++)\n            for (int j=2;j<=n+1;j++){\n                int x;\n                scanf(\"%d\",&x);\n                if (x){\n                    addedge(i,n+j,1);\n                    addedge(n+j,i,0);\n                }\n            }\n        for (int i=2;i<=n+1;i++){\n            addedge(1,i,1);\n            addedge(i,1,0);\n        }\n        for (int i=2;i<=n+1;i++){\n            addedge(n+i,2*n+2,1);\n            addedge(2*n+2,n+i,0);\n        }\n        T=2*n+2;\n        int ans=0;\n        while (bfs(1)){\n            ans+=dfs(1,INF);\n        }\n        if (ans==n)printf(\"Yes\\n\");\n            else printf(\"No\\n\");\n    }\n    return 0;\n}\n```\n/\\*\n1\n7\n0 1 0 1 0 0 1\n\n1 1 0 0 0 1 0\n\n0 0 1 0 0 0 1\n\n0 1 0 0 1 1 0\n\n1 0 0 1 1 0 1\n\n0 1 1 1 0 1 1\n\n0 1 1 0 0 1 0\n\nYes\n\\*/",
        "postTime": 1502632398,
        "uid": 48966,
        "name": "707001933K",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "\u4e8c\u5206\u56fe\u7684\u57fa\u672c\u5efa\u6a21\uff1b\n\n\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u884c\u4e00\u4e2a\u5217\u53ea\u8981\u6709\u4e00\u4e2a\u70b9\u5c31\u597d\u5566\uff1b\n\n\u610f\u5473\u7740\u6211\u4eec\u6bcf\u4e00\u884c\u4e0a\u7684\u591a\u4e2a\u70b9\u5176\u5b9e\u6700\u591a\u53ea\u79fb\u52a8\u4e00\u9897\uff1b\n\n\u6240\u4ee5\u76f4\u63a5\u5927\u529b\u4e8c\u5206\u56fe\uff0ca[i,j]\u6709\u70b9i\u8fde\u63a5j;\n\n\u8868\u793ai\u884c\u53ef\u4ee5\u6709j\u5217\u79fb\u8fc7\u6765\uff1b\n\n\u6c42\u6700\u5927\u5339\u914d\u662f\u4e0d\u662fn\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=205;\nstruct cs{int to,nxt;}a[N*N*2];\nint head[N],ll,link[N];\nint n,m,x,ans;\nbool vi[N];\nvoid init(int x,int y){\n    a[++ll].to=y;\n    a[ll].nxt=head[x];\n    head[x]=ll;\n}\nbool dfs(int x){\n    for(int k=head[x];k;k=a[k].nxt)\n        if(!vi[a[k].to]){\n            vi[a[k].to]=1;\n            if(!link[a[k].to]||dfs(link[a[k].to])){\n                link[a[k].to]=x;return 1;\n            }\n        }return 0;\n}\nint main()\n{\n    scanf(\"%d\",&m);\n    while(m--){\n        ll=0;memset(head,0,sizeof head);\n        ans=0;memset(link,0,sizeof link);\n        scanf(\"%d\",&n);\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=n;j++){\n                scanf(\"%d\",&x);\n                if(x)init(i,j);\n            }\n        for(int i=1;i<=n;i++){\n            memset(vi,0,sizeof vi);\n            if(dfs(i))ans++;\n        }\n        if(ans==n)printf(\"Yes\\n\");else printf(\"No\\n\");\n    }\n}\n```",
        "postTime": 1495543126,
        "uid": 7442,
        "name": "\u5de8\u578b\u65b9\u5757",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "\u660e\u663e\u7684\u4e8c\u5206\u56fe \u7136\u800c\u6211\u559c\u6b22\u7528dinic\u7f51\u7edc\u6d41\u5199\uff08\u770b\u7740\u723d\uff09\n\n\n```cpp\nvar a:array[0..401,0..401] of longint;\n    boo:array[0..401] of boolean;\n    booo:array[0..401] of boolean;\n    dinic:array[0..401] of longint;\n    b,c,i,d,e,f,n,g,h,j,oo,ans:longint;\nfunction min(a1,a2:longint):longint;\nbegin\n  if a1<a2 then exit(a1);\n  exit(a2);\nend;\nprocedure dfs(i:longint);\nvar j,k,l:longint;\nbegin\n  for j:=1 to n+n+1 do\n  if not (boo[j]) and (a[i,j]>0) then\n  begin\n    dinic[j]:=dinic[i]+1;\n    boo[j]:=true;\n    dfs(j);\n  end;\nend;\nfunction bfs(i,o:longint):longint;\nvar j,k,l:longint;\nbegin\n  k:=0;\n  if i=(n+n+1) then exit(o);\n  for j:=1 to n+n+1 do\n  if (a[i,j]>0) and (not booo[j]) and  (dinic[i]=(dinic[j]-1)) then\n  begin\n    booo[j]:=true;\n    l:=bfs(j,min(o,a[i,j]));\n    a[i,j]:=a[i,j]-l;\n    a[j,i]:=a[j,i]+l;\n    o:=o-l;\n    k:=k+l;\n    booo[j]:=false;\n  end;\n  exit(k);\nend;\nbegin\n  oo:=10000000;\n  readln(b);\n  for b:=1 to b do\n  begin\n    ans:=0;\n    readln(n);\n    for i:=1 to n do\n      for j:=1 to n do\n      begin\n        read(g);\n        if g=1 then\n          inc(a[i,j+n]);\n      end;\n    for i:=1 to n do\n      inc(a[0,i]);\n    for i:=1 to n do\n      inc(a[i+n,n+n+1]);\n    for i:=1 to n+n+1 do\n      dinic[i]:=oo;\n    dfs(0);\n    while dinic[i]<>oo do\n    begin\n      ans:=ans+bfs(0,oo);\n      for i:=1 to n+n+1 do\n        dinic[i]:=oo;\n      fillchar(boo,sizeof(boo),false);\n      dfs(0);\n    end;\n      fillchar(boo,sizeof(boo),false);\n    if ans=n then\n      writeln('Yes') else writeln('No');\n    for i:=0 to n+n+1 do\n      for j:=0 to n+1+n do\n      a[i,j]:=0;\n  end;\nend.\n```",
        "postTime": 1489979997,
        "uid": 13437,
        "name": "\u849f\u84bbpks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u53ef\u4ee5\u7a0d\u5fae\u4f18\u5316\u4e00\u4e0b\uff0c\u6bcf\u6b21memset\u592a\u6162\u4e86\uff0c\u4f7f\u7528\u65f6\u95f4\u6233\u4f18\u5316\u3002\n\n\n\u987a\u4fbf\uff0c\u697c\u4e0b\uff0cN\u662f\u70b9\u6570\uff0c\u8fb9\u662fN^2\u7684\uff0c1000\u5f53\u7136\u4f1a\u7206\u3002\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define MAXN 500\n#define MAXM 80000\n#define X(x) (x)\n#define Y(x) ((x)+n)\nstruct Edge \n{\n    int to,nex;\n    Edge(){}\n    Edge(int _to, int _nex):to(_to),nex(_nex){}\n};\nEdge e[MAXM+5];\nint first[MAXN+5], match[MAXN+5], book[MAXN+5], tot, id, n, T, op;\ninline void Add(int a, int b)\n{\n    e[tot] = Edge(b,first[a]);\n    first[a] = tot++;\n    return;    \n} \nbool DFS(int x)\n{\n    for(register int u = first[x], v; u+1; u = e[u].nex)\n        if(book[v=e[u].to]-id)\n        {\n            book[v] = id;\n            if(!match[v] || DFS(match[v]))\n            {\n                match[v] = x, match[x] = v;\n                return true;\n            }\n        }\n    return false;\n}\ninline int Hungary()\n{\n    int ans = 0;\n    for(register int i = 1; i <= n; i++)\n        id++, ans += DFS(i);\n    return ans;\n}\nint main()\n{\n    for(scanf(\"%d\",&T); T--; puts(Hungary()-n ? \"No\" : \"Yes\"))\n    {\n        scanf(\"%d\",&n), tot = 0;\n        memset(first,-1,sizeof(first)), memset(match,0,sizeof(match));\n        for(register int i = 1, j; i <= n; i++)\n            for(j = 1; j <= n; j++)\n                if(scanf(\"%d\",&op), op) \n                    Add(X(i),Y(j)), Add(Y(j),X(i));\n    }\n     return 0;\n}\n```",
        "postTime": 1485325832,
        "uid": 16528,
        "name": "magolor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "\u672c\u9898\u662f\u4e00\u9053\u6700\u5927\u5339\u914d\u7684\u9898\uff08\u5e9f\u8bdd\uff09\uff0c\u7528\u5308\u7259\u5229\u7b97\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u3002\n\n\n\u9996\u5148\u9700\u8981\u6784\u9020\u56fe\uff0c\u4f7f\u7528\u5411\u524d\u661f\u65b9\u6cd5\uff1a\n\n```cpp\n\nvoid AddEdge(int u,int v){        //\u5229\u7528\u5411\u524d\u661f\u6784\u9020\u56fe \n    edges[++count].u = u;\n    edges[count].v = v;\n    edges[count].next = head[u];\n    head[u] = count;\n}\n\n```\n\u7136\u540e\u4f7f\u7528\u5308\u7259\u5229\u7b97\u6cd5\u6c42\u6700\u5927\u5339\u914d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n^2)\n\n```cpp\n\nbool dfs(int u){        //\u5308\u7259\u5229\u7b97\u6cd5 \u6700\u5927\u5339\u914d \n    for(int p = head[u]; p; p = edges[p].next){\n        int v = edges[p].v;\n        if(visited[v] == vis_cnt) continue;\n        visited[v] = vis_cnt;\n        if(!link[v]||dfs(link[v])){\n            link[v] = u;\n            return true;\n        }\n    }\n    return false;\n}\n\n```\n\n\u7136\u540e\u4e00\u4e2asolve()\u51fd\u6570\u89e3\u51b3\u95ee\u9898\uff1a\n\n```cpp\n\nvoid solve(){\n    memset(link,0,sizeof(link));\n    for(int i = 1; i <= n; i++){ vis_cnt++; dfs(i); }\n    for(int i = 1; i <= n; i++) if(!link[i]){ cout << \"No\" << endl; return ; }\n    cout << \"Yes\" << endl;\n}\n\n```\n\n\n\n**\u672c\u9898\u8d85\u7ea7\uff08\u6b64\u5904\u7701\u7565maxint+1\u4e2a\u201c\u8d85\u7ea7\u201d\uff09\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff1a\n\n\u6570\u7ec4\u4e00\u5b9a\uff08\u6b64\u5904\u7701\u7565maxint+1\u4e2a\u201c\u4e00\u5b9a\u201d\uff09\u8981\u5f00\u5927\u70b9\uff01\n\n\u522b\u770b\u7740N <= 200\u5c31\u653e\u5fc3\u4e86\uff0c\u6211\u5f001000\u90fd\u7206\u86cb\uff01\u6700\u540e\u5f00\u523060000\u624dAC\uff01**\n\n\n\u9644\u4ee3\u7801\uff1a\n\n\n\n\n\n\n\n\n    \n```cpp\n#include <iostream>\n#include <cstring>\n#define Size 1005\n#define MaxN 61005\nusing namespace std;\nstruct _edge{\n    int u,v,next;\n}edges[MaxN];\nint n,m,k,a,b,cnt = 0,visited[MaxN],link[MaxN],head[MaxN],count,t,vis_cnt = 0;\nvoid AddEdge(int u,int v){        //\u5229\u7528\u5411\u524d\u661f\u6784\u9020\u56fe \n    edges[++count].u = u;\n    edges[count].v = v;\n    edges[count].next = head[u];\n    head[u] = count;\n}\nbool dfs(int u){        //\u5308\u7259\u5229\u7b97\u6cd5 \u6700\u5927\u5339\u914d \n    for(int p = head[u]; p; p = edges[p].next){\n        int v = edges[p].v;\n        if(visited[v] == vis_cnt) continue;\n        visited[v] = vis_cnt;\n        if(!link[v]||dfs(link[v])){\n            link[v] = u;\n            return true;\n        }\n    }\n    return false;\n}\nvoid solve(){\n    memset(link,0,sizeof(link));\n    for(int i = 1; i <= n; i++){ vis_cnt++; dfs(i); }\n    for(int i = 1; i <= n; i++) if(!link[i]){ cout << \"No\" << endl; return ; }\n    cout << \"Yes\" << endl;\n}\nint main(){\n    ios::sync_with_stdio(false);\n    cin >> t;\n    while(t--){\n        count = 0;\n        memset(head,0,sizeof(head));\n        cin >> n;\n        for(int i = 1; i <= n; i++){\n            for(int j = 1; j <= n; j++){\n                int x;\n                cin >> x;\n                if(x) AddEdge(i,j);            //\u6784\u56fe \n            }\n        }\n        solve();\n    }\n    return 0;\n}\n```",
        "postTime": 1467079095,
        "uid": 17170,
        "name": "Deny_\u5c0f\u7530",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    },
    {
        "content": "\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\n\n\u5f53map[i][j]\u4e3a1\uff0c\u5373\u53ef\u89c6\u4e3ai->j\u53ef\u8fde\u6210\u4e00\u6761\u8fb9\n\n\u7528\u5308\u7259\u5229\u7b97\u6cd5\u6c42\u6700\u5927\u5339\u914d\n\n\u5f53\u6700\u5927\u5339\u914d\u6570\u7b49\u4e8e\u5bf9\u89d2\u7ebf\u4e0a\u7684\u70b9\u6570\uff08\u5373n\uff09\u5219\u8f93\u51faYes\uff0c\u5426\u5219\u8f93\u51faNo\n",
        "postTime": 1378994169,
        "uid": 293,
        "name": "IceZero",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1129 \u3010[ZJOI2007]\u77e9\u9635\u6e38\u620f\u3011"
    }
]