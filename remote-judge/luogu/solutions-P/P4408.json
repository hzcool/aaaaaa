[
    {
        "content": "\u81ea\u5df1\u4e3a\u8d2a\u5fc3\u7684\u5408\u7406\u6027\u7ea0\u7ed3\u4e86\u597d\u4e45\uff0c\u9898\u89e3\u91cc\u4e5f\u6ca1\u6709\u4e25\u8c28\u8bc1\u660e\uff0c\u6211\u6765\u5199\u4e00\u4e0b\u5427\u3002\n\n\u8d2a\u5fc3\u7684\u601d\u8def\uff1a\u627e\u76f4\u5f84\uff0c\u76f4\u5f84\u7aef\u70b9\u4e3aA,B,\u679a\u4e3eC\u70b9\u5219\u7b54\u6848\u4e3a$max(min(dis[A][k],dis[B][k])+dis[A][B])$\n\n\u7528\u53cd\u8bc1\u6cd5\u8bc1\u660e\u3002\n\n\u5047\u8bbe\u6709\u4e00\u79cd\u60c5\u51b5\uff0c\u5b58\u5728\u4e00\u6761\u975e\u76f4\u5f84\u8def\u5f84DE\uff0cC\u5148\u53bbD\u3001E\u4e2d\u8ddd\u79bb\u8f83\u5c0f\u70b9\uff0c\u518d\u8d70\u8fc7D\u3001E\u95f4\u8def\u5f84\uff0c\u6240\u5f97\u7684\u7b54\u6848\u6700\u5927\u3002\n\n\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\u3002\n\n## \u7b2c\u4e00\u79cd\u60c5\u51b5\uff0cAB\u4e0eDE\u6709\u4ea4\u70b9\u3002\nC\u4e0eAB\u76f4\u63a5\u76f8\u8fde\u7684\u60c5\u51b5\u5982\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/69903.png)\n\n\u6839\u636e\u76f4\u5f84\u5b9a\u4e49\u53ef\u77e5\u3000$d+e>a+b+c,d+e\\ge d+c,d+e\\ge e+a+b$\n\n\u6574\u7406\u53ef\u5f97\u3000\n\n$d+e>a+b+c$------[1]\n\n$e\\ge c$------[2],     \n\n$d\\ge a+b$------[3]\n\n\u6b64\u65f6C\u70b9\u5230A\u3001B\u70b9\u7684\u7b54\u6848$S1=d+e+min(e+b+f,d+b+f)=d+e+b+f+min(e,d)$\n\nC\u70b9\u5230D\u3001E\u70b9\u7684\u7b54\u6848$S2=a+b+c+min(f+a,f+b+c)=a+b+c+f+min(a,b+c)$\n\n$S1-S2=d+e-a-b-c+b+min(e,d)-min(a,b+c)=(d+e-a-b-c)+min(d,e)-min(a-b,c)$\n\n\u7531[1]\u5f97$d+e-a-b-c>0$\n\n\u5f53$a-b\\le c$\u65f6,$S1-S2=(d+e-a-b-c)+min(d,e)-(a-b)$\n\n\u7531[2]\u5f97$e>c\\ge a-b$,\u7531[3]\u5f97$d\\ge a+b\\ge a-b$\uff0c\u56e0\u6b64\u6b64\u65f6$S1-S2>0$\n\n\u5f53$a-b>c$\u65f6\uff0c$S1-S2=(d+e-a-b-c)+min(d,e)-c$\n\n\u7531[2]\u5f97$e\\ge c$,\u7531[3]\u5f97$d\\ge a+b\\ge a-b>c$\uff0c\u56e0\u6b64\u6b64\u65f6$S1-S2>0$\n\nC\u4e0eAB\u76f4\u63a5\u76f8\u8fde\u7684\u60c5\u51b5\u540c\u6837\u7c7b\u4f3c\u3002\n\n## \u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0cAB\u4e0eDE\u65e0\u4ea4\u70b9\u3002\n\n\u7531\u6811\u7684\u8054\u901a\u65e0\u73af\u6027\u53ef\u77e5AB\u4e0eDE\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u8def\u5f84\u76f8\u8fde\uff0cC\u4e0eDE\u76f4\u63a5\u76f8\u8fde\u7684\u60c5\u51b5\u5982\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/58646.png)\n\n\u7531\u76f4\u5f84\u7684\u5b9a\u4e49\u53ef\u77e5$a+b>d+e+f,a+b\\ge c+d+b,a+b\\ge a+c+e+f$\n\n\u6574\u7406\u53ef\u5f97\n\n$a+b>d+e+f$------[1]\n\n$a\\ge c+d$------[2]\n\n$b\\ge c+e+f$------[3]\n\n\u6b64\u65f6C\u5230A\u3001B\u7684\u7b54\u6848$S1=a+b+min(a+c+e+g,b+c+e+g)=a+b+c+e+g+min(a,b)$\n\nC\u5230D\u3001E\u7684\u7b54\u6848$S2=d+e+f+min(d+e+g,f+g)=d+e+f+g+min(d+e,f)$\n\n$S1-S2=a+b-d-e-f+c+e+min(a,b)-min(d+e,f)=(a+b-d-e-f)+min(a,b)-min(d-c,f-e-c)$\n\n\u7531[1]\u5f97$a+b-d-e-f>0$\n\n\u5f53$d-c\\le f-e-c$\u65f6,$S1-S2=(a+b-d-e-f)+min(a,b)-(d-c)$\n\n\u7531[2]\u5f97$a\\ge c+d>d-c$,\u7531[3]\u5f97$b\\ge c+e+f>f-e-c\\ge d-c$,\u56e0\u6b64\u6b64\u65f6$S1-S2>0$\n\n\u5f53$d-c>f-e-c$\u65f6,$S1-S2=(a+b-d-e-f)+min(a,b)-(f-e-c)$\n\n\u7531[2]\u5f97$a\\ge c+d>d-c>f-e-c$,\u7531[3]\u5f97$b\\ge c+e+f>f-e-c$,\u56e0\u6b64\u6b64\u65f6$S1-S2>0$\n\nC\u4e0e$c$\u76f4\u63a5\u76f8\u8fde\u6216\u4e0eAB\u76f4\u63a5\u76f8\u8fde\u7684\u60c5\u51b5\u7c7b\u4f3c\u3002\n\n\u7efc\u4e0a\uff0c\u5f53DE\u4e0d\u662f\u76f4\u5f84\u65f6\uff0c\u603b\u6709\u4e00\u6761C\u5230\u76f4\u5f84AB\u7684\u65b9\u6848\u4f7f\u7b54\u6848\u66f4\u5927\uff0c\u4e0e\u5047\u8bbeC\u5230DE\u7684\u65b9\u6848\u6700\u5927\u77db\u76fe\uff0c\u56e0\u6b64\u5047\u8bbe\u4e0d\u6210\u7acb\uff0c\u539f\u547d\u9898\u5f97\u8bc1\u3002\n\n\n------------\nupdate:\u4f7f\u7528\u4e86LaTeX\u683c\u5f0f\uff0c\u5bf9\u90e8\u5206\u5f0f\u5b50\u505a\u4e86\u5c0f\u6539\u52a8\uff0c\u5e0c\u671b\u7ba1\u7406\u5458\u7ed9\u8fc7",
        "postTime": 1557793355,
        "uid": 31381,
        "name": "C3H5ClO",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4408 \u3010[NOI2003]\u9003\u5b66\u7684\u5c0f\u5b69\u3011"
    },
    {
        "content": "$update2021.2.6:$\u89e3\u91ca\u4e86\u8bc4\u8bba\u533a\u7684$AC>AB$\u95ee\u9898\uff0c\u907f\u514d\u4e86\u5f15\u8d77\u8bef\u89e3.\n\n\u53d1\u73b0\u6709\u4e9b\u9898\u89e3\u8bb2\u7684\u7565\u6709\u95ee\u9898\uff0c\u4e0d\u77e5\u9053\u662f\u6ca1\u60f3\u6e05\u695a\u5c31\u6df7\u8fc7\u53bb\u4e86\u8fd8\u662f\u8bf4\u7684\u4e0d\u6e05\u695a\u8ba9\u4eba\u7406\u89e3\u504f\u5dee\uff0c\u6240\u4ee5\u5c31\u5199\u4e00\u7bc7\u9898\u89e3\u6765\u7ed9\u5927\u5bb6\u7ec6\u7ec6\u7406\u4e00\u4e0b\u8fd9\u4e2a\u9898\u7684\u601d\u8def\u3002\n\n\u9898\u610f\u867d\u7136\u8bf4\u5148\u53bb\u8c01\u5bb6\u518d\u53bb\u8c01\u5bb6\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u9700\u8981\u7ba1\u8fd9\u4e2a\uff0c\u56e0\u4e3a$A$\u3001$B$\u3001$C$\u4e09\u4e2a\u70b9\u6211\u4eec\u53ef\u4ee5\u4efb\u610f\u4e92\u76f8\u4ea4\u6362\u5b83\u4eec\u6240\u4ee3\u8868\u7684\u5bf9\u8c61\uff0c\u6240\u4ee5\u9898\u76ee\u8981\u6c42\u7684\u5c31\u662f\u5728\u4e00\u68f5**\u6811**\u4e0a\u627e\u52303\u4e2a\u70b9$A$\u3001$B$\u3001$C$\u4ee4$AB+BC$\u6700\u5927\uff0c\u540c\u65f6\u8981\u6ee1\u8db3$AC>AB$\u3002\n\n\u7531\u4e8e\u8fd9\u662f\u4e00\u68f5\u6811\uff0c\u5b83\u6ee1\u8db3\u975e\u5e38\u53ef\u7231\u7684\u6027\u8d28\uff0c\u5c31\u662f\u5982\u679c\u627e\u4e00\u4e2a\u70b9\u51fa\u53bb\u4e24\u6761\u8def\u5f84\u4f7f\u5b83\u4eec\u7684\u5408\u6700\u5927\uff0c\u90a3\u4e48\u4e00\u6761\u662f\u76f4\u5f84\u65f6\u4e00\u5b9a\u4f1a\u5b58\u5728\u4e00\u79cd\u6700\u5927\u7684\u65b9\u6848\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u8981\u627e\u7684\u4e24\u6761\u8def\u5f84\u5176\u4e2d\u4e00\u6761\u662f\u76f4\u5f84\uff08\u8bbe\u4e3a$AB$\uff09\uff0c\u7136\u540e\u679a\u4e3e\u5269\u4e0b\u7684\u70b9\uff0c\u627e\u5230\u4e00\u4e2a\u5230\u8fbe\u76f4\u5f84\u7aef\u70b9\u6700\u957f\u7684\u53e6\u4e00\u6761\u8def\u5f84\uff0c\u4e0d\u8fc7\u56e0\u4e3a\u9898\u76ee\u8981\u6ee1\u8db3\u4e00\u4e2a\u5148\u53bb\u8fd1\u7684\u70b9\u518d\u53bb\u8fdc\u7684\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u6bcf\u6b21\u679a\u4e3e\u7684\u65f6\u5019\uff08\u8bbe\u4e3a$C$\uff09\uff0c\u9009\u62e9$AC$\u548c$BC$\u7684\u8f83\u5c0f\u7684\u4e00\u6761\u8fb9\u4f5c\u4e3a\u53e6\u4e00\u6761\u8def\u5f84\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u82e5\u662f$AC$\u662f\u5c0f\u4e8e$BC$\u7684\uff0c\u5219\u9009\u62e9\u7684\u8def\u5f84\u662f$AC$\uff0c\u5b9e\u9645\u8d70\u7684\u8def\u7ebf\u662f$CA$+$AB$\uff0c\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u7684$CA<CB$\uff0c\u800c\u82e5\u662f\u9009\u62e9\u7684\u662f$BC$\uff0c\u5b9e\u9645\u8def\u7ebf\u662f$CB$+$BA$\uff0c\u4e5f\u7b26\u5408\u9898\u610f\u8981\u6c42\u7684$CB<CA$\u3002\n\n\u81f3\u6b64\uff0c\u5c31\u53ef\u4ee5\u5199\u51fa\u4ee3\u7801\u4e86\uff0c\u8dd12\u904ddfs\u627e\u51fa\u76f4\u5f84\uff0c\u518d\u5bf9\u76f4\u5f84\u8d77\u70b9\u548c\u7ec8\u70b9\u8dd1\u51fa\u5bf9\u6bcf\u4e2a\u70b9\u7684\u8def\u5f84\u957f\u5ea6\uff0c\u7136\u540e\u8ba1\u7b97\u7b54\u6848\u3002\n\n### $code:$\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int maxn=200010;\nstruct edge{\n    int to,next,w;\n}e[maxn<<1];\nint n,m,cnt;\nint dis1[maxn],dis2[maxn],last[maxn];\nint st,ed;\ninline void add(int u,int v,int w){\n    cnt++;\n    e[cnt].to=v;\n    e[cnt].next=last[u];\n    last[u]=cnt;\n    e[cnt].w=w;\n}\nvoid dfs1(int u,int fa){\n    for(int i=last[u];i;i=e[i].next){\n        int v=e[i].to;\n        if(v==fa) continue;\n        dis1[v]=dis1[u]+e[i].w;\n        if(dis1[v]>dis1[st]) st=v;\n        dfs1(v,u);\n    }\n}\nvoid dfs2(int u,int fa){\n    for(int i=last[u];i;i=e[i].next){\n        int v=e[i].to;\n        if(v==fa) continue;\n        dis2[v]=dis2[u]+e[i].w;\n        if(dis2[v]>dis2[ed]) ed=v;\n        dfs2(v,u);\n    }\n}\nvoid dfs3(int u,int fa){\n    for(int i=last[u];i;i=e[i].next){\n        int v=e[i].to;\n        if(v==fa) continue;\n        dis1[v]=dis1[u]+e[i].w;\n        dfs3(v,u);\n    }\n}\nvoid dfs4(int u,int fa){\n    for(int i=last[u];i;i=e[i].next){\n        int v=e[i].to;\n        if(v==fa) continue;\n        dis2[v]=dis2[u]+e[i].w;\n        dfs4(v,u);\n    }\n}\nsigned main(){\n    cin>>n>>m;\n    for(int i=1,u,v,w;i<=m;i++){\n        scanf(\"%lld %lld %lld\",&u,&v,&w);\n        add(u,v,w),add(v,u,w);\n    }\n    dfs1(1,0);\n    dfs2(st,0);\n    int ans=dis2[ed];\n    memset(dis1,0,sizeof(dis1)),memset(dis2,0,sizeof(dis2));\n    dfs3(st,0),dfs4(ed,0);\n    int tmp=0;\n    for(int i=1;i<=n;i++){//\u679a\u4e3e\u70b9C\n        int d=min(dis1[i],dis2[i]);\n        if(d>tmp) tmp=d;\n    }\n    ans+=tmp;\n    cout<<ans;\n}\n```",
        "postTime": 1549090811,
        "uid": 64611,
        "name": "\u4eba\u6b87\u7269\u5df2\u975e",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4408 \u3010[NOI2003]\u9003\u5b66\u7684\u5c0f\u5b69\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u6a21\u578b\u5e94\u8be5\u662f\u5f88\u6e05\u6670\u7684\uff0c\u51fa\u9898\u4eba\u4e3a\u4e86\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u589e\u52a0\u9898\u76ee\u7684\u96be\u5ea6\u5c31\u5728\u9898\u76ee\u91cc\u6dfb\u52a0\u4e86\u5f88\u591a\u5e9f\u8bdd  \n\u9898\u5e72\u662f\uff1a\u5728\u4e00\u68f5\u65e0\u6839\u6811\u4e0a\uff0c\u627e$A,B,C$\u4e09\u4e2a\u70b9\uff0c\u4f7f\u5f97$AB+BC(AC>BC)$\u6216$AC+AB(BC>AC)$\u6700\u5927\u3002  \n\u56e0\u4e3a\u9898\u76ee\u6ca1\u6709\u8981\u6c42\u8f93\u51fa\u70b9\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u5c06$A,B$\u5bf9\u6362\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u5f0f\u5b50\u5b9e\u9645\u4e0a\u662f\u540c\u4e00\u4e2a\u5f0f\u5b50  \n\u6211\u4eec\u53ea\u7528\u627e\u6700\u5927\u7684$AB+BC(AC>BC)$  \n\u7b80\u5355\u8d2a\u5fc3\u4e00\u4e0b\uff0c\u5148\u4ee4$AB$\u6700\u5927\uff0c\u7136\u540e\u518d\u627e\u4e00\u4e2a\u76f8\u5e94\u7684\u6700\u5927\u7684$BC$\uff0c\u5f3a\u8c03\u8981\u6ee1\u8db3$(AC>AB)$  \n\u6240\u4ee5\u6211\u4eec\u9996\u5148\u627e\u51fa\u4e00\u6761\u76f4\u5f84\uff0c\u7136\u540e\u679a\u4e3e\u9664\u7aef\u70b9\u5916\u7684\u70b9$C$\uff0c\u4f7f\u5f97$MIN(AC,BC)$\u6700\u5927\uff0c$Ans=$\u6811\u7684\u76f4\u5f84$+MIN(AC,BC)$  \n\u4e2a\u4eba\u611f\u89c9\u4ee3\u7801\u8fd8\u662f\u6bd4\u8f83\u53ef\u8bfb\u7684  \n\u8bb0\u5f97\u8981\u5f00$long long$  \n\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nstruct edge{\n\tint to;\n\tint next;\n\tint data;\n}e[2000000];\nint n,m,h[200005],pop=0;\nvoid add(int x,int y,int z){\n\tpop++;\n\te[pop].to=y;\n\te[pop].next=h[x];\n\th[x]=pop;\n\te[pop].data=z;\n}\nint d[200005],v[200005];\nqueue<int>q;\nint bfs(int s){\n\tmemset(d,0,sizeof(d));\n\tmemset(v,0,sizeof(v));\n\twhile(q.size())q.pop();\n\tq.push(s);v[s]=1;\n\tint Max=0,maX;\n\twhile(q.size()){\n\t\tint x=q.front(),y;q.pop();\n\t\tfor(int i=h[x];i;i=e[i].next){\n\t\t\tif(v[y=e[i].to])continue;\n\t\t\tv[y]=1;\n\t\t\td[y]=d[x]+e[i].data;\n\t\t\tq.push(y);\n\t\t\tif(d[y]>Max){\n\t\t\t\tMax=d[y];\n\t\t\t\tmaX=y;\n\t\t\t}\n\t\t}\n\t}\n\treturn maX;\n}\nsigned main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y,z;\n\t\tscanf(\"%lld%lld%lld\",&x,&y,&z);\n\t\tadd(x,y,z);add(y,x,z);\n\t}\n\tint l=bfs(1);\n\tint r=bfs(l);\n\tint k[200005];\n\tint ans=d[r];\n\tfor(int i=1;i<=n;i++)\n\t  k[i]=d[i];\n\tbfs(r);\n\tint M=0;\n\tfor(int i=1;i<=n;i++){\n\t\tM=max(M,min(d[i],k[i]));\n\t}\n\tprintf(\"%lld\\n\",ans+M);\n\treturn 0;\n}\n```",
        "postTime": 1548492968,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4408 \u3010[NOI2003]\u9003\u5b66\u7684\u5c0f\u5b69\u3011"
    },
    {
        "content": "\u9898\u76ee\u4e2d\u201c\u53ef\u4ee5\u4fdd\u8bc1\uff0c\u4efb\u4e24\u4e2a\u5c45\u4f4f\u70b9\u95f4\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u901a\u8def\u201d\u8bf4\u660e\u8f93\u5165\u6570\u636e\u662f\u4e00\u68f5\u6811\u3002\u663e\u7136\u6700\u4f18\u89e3\u9700\u8981\u4eceC\u5148\u8dd1\u5230A\u5728\u8dd1\u5230B.\u6216\u8005\u4eceC\u5148\u8dd1\u5230B\u5728\u8dd1\u5230A\u3002\n\n1. \u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u786e\u5b9aA,B\u70b9\uff0c\u90a3\u4e48AB\u662f\u5fc5\u8d70\u7684\uff0cCA,CB\u4f1a\u9009\u53d6\u5176\u4e2d\u5c0f\u7684\u4e00\u6bb5\u8d70\uff0c\u6240\u4ee5\u6211\u4eec\u7684C\u70b9\u8981\u6ee1\u8db3`min(CA,CB)`\u6700\u5927\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f7f\u7b54\u6848\u6700\u5927\u3002\n\n2. \u5982\u4f55\u786e\u5b9aA,B\u70b9\uff1f\u65e2\u7136AB\u662f\u5fc5\u8d70\u7684\uff0c\u90a3\u5f53\u7136\u8d8a\u957f\u8d8a\u597d\uff0c\u6240\u4ee5\u5c31\u662f\u6811\u7684\u76f4\u5f84\u4e86\u3002\u7531\u4e8e\u8fd9\u91cc\u53ea\u9700\u8981\u6c42\u6811\u76f4\u5f84\u7684\u7aef\u70b9\u548c\u603b\u957f\u800c\u4e0d\u7528\u6c42\u5177\u4f53\u8def\u7ebf\uff0c\u6211\u5c31\u9009\u62e9\u4e86DFS\u6765\u6c42\u3002\n\n3. \u7b80\u8981\u4ecb\u7ecd\u4e00\u4e0bDFS\u6c42\u76f4\u5f84\u7684\u65b9\u6cd5\uff1a\u968f\u610f\u9009\u53d6\u4e00\u4e2a\u70b9\uff0cDFS\u51fa\u79bb\u5b83\u8ddd\u79bb\u6700\u5927\u7684\u70b9\uff08\u8bbe\u4e3aP\uff09\uff0c\u518d\u4ee5P\u4e3a\u8d77\u70b9\uff0cDFS\u51fa\u79bb\u5b83\u8ddd\u79bb\u6700\u5927\u7684\u70b9\uff08\u8bbe\u4e3aQ\uff09\uff0cP\uff0cQ\u4e24\u70b9\u5c31\u662f\u6211\u4eec\u7684A\u548cB\u3002\n\n4. \u8bb0\u5f97\u5f00long long\n\n```cpp\n#include <bits/stdc++.h>\n#define MAX (200000 + 7)\n#define long long long\n#define uint unsigned\n#define add push_back\nusing namespace std;\n\nlong ans,ans2,fp[MAX],fq[MAX],*f;//fp\u4e3aP\u5230\u6bcf\u4e2a\u70b9\u7684\u8def\u5f84\uff0cfq\u540c\u7406 \nint N,M,P,Q,FA;//P,Q\u5c31\u662f\u6211\u4eec\u7684A\u548cB\u70b9 \n\nvector <int> Y[MAX],Z[MAX];\n\n#define y Y[x][p]\n#define z Z[x][p]\nvoid DFS(int x, long sum, int fa)\n{//DFS\u6c42\u51fa\u6811\u7684\u76f4\u5f84\uff0csum\u5c31\u662f\u5f53\u524d\u957f\u5ea6 \n\tif (sum >= ans)\n\t\tans = sum, FA = x;//ans\u5c31\u662f\u8bb0\u5f55\u7684\u6700\u8fdc\u8ddd\u79bb\uff0cFA\u5c31\u662f\u8bb0\u5f55\u6700\u8fdc\u7684\u70b9 \n\tfor (uint p = 0; p < Y[x].size(); p++)\n\t\tif (y != fa) DFS(y, sum+z, x);\n}\n\nvoid DFS2(int x, int fa)\n{//DFS2\u6c42\u4e00\u4e2a\u70b9\u5230\u6bcf\u4e2a\u70b9\u7684\u8ddd\u79bb \n\tfor (uint p = 0; p < Y[x].size(); p++)\n\t\tif (y != fa)\n\t\t{\n\t\t\tf[y] = f[x] + z;\n\t\t\tDFS2(y, x);\n\t\t}\n}\n#undef y\n#undef z\n\nint main()\n{\n\tscanf(\"%d%d\", &N, &M);\n\tfor (int i = 1 ,x,y,z; i < N; i++)\n\t{\n\t\tscanf(\"%d%d%d\", &x, &y, &z);\n\t\tY[x].add(y), Y[y].add(x);\n\t\tZ[x].add(z), Z[y].add(z);\n\t}\n\t\n\tDFS(1, 0, 0); P = FA; ans = 0;\n\tDFS(P, 0, 0); Q = FA;//\u4e24\u6b21DFS\u6c42\u51faP,Q\u548c\u76f4\u5f84\u957f\u5ea6 \n\tf = fp; DFS2(P, 0);\n\tf = fq; DFS2(Q, 0);//\u6c42\u51faP,Q\u5230\u6bcf\u4e2a\u70b9\u7684\u8def\u5f84 \n\tfor (int i = 1; i <= N; i++)\n\t\tans2 = max(ans2, min(fp[i], fq[i]));//ans2\u8bb0\u5f55min(CA,CB)\u4e2d\u7684\u6700\u5927\u503c \n\tprintf(\"%lld\\n\", ans + ans2);\n}\n```",
        "postTime": 1566976070,
        "uid": 73489,
        "name": "NyaRu_Official",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4408 \u3010[NOI2003]\u9003\u5b66\u7684\u5c0f\u5b69\u3011"
    },
    {
        "content": "# \u6811\u8bba\n\n### \u524d\u8a00\n\n\u6211\u662f\u50bb\u903c\uff0c\u6211\u5df2\u7ecf\u88ab\u81ea\u5df1\u6076\u5fc3\u5230\u4e86\u3002\n\n$\\texttt{LCA}$ \u548c\u76f4\u5f84\u5565\u7684\u90fd\u5199\u4e0d\u5bf9\uff0c$\\texttt{\\color{red}WA}$ \u4e86\u51e0\u4e4e\u4e00\u9875\u3002\n\n\u8fd9\u91cc\u611f\u8c22\u53d1\u73b0\u6211\u4ee3\u7801\u91cd\u5927 $\\text{bug}$ \u7684\u795e\u4ed9 $\\texttt{M\\color{red}atrixCascade}$\u3002\n\n\u9898\u76ee\u94fe\u63a5\uff1a[$\\text{Link}$](https://www.luogu.com.cn/problem/P4408)\n\n### \u9898\u76ee\u5927\u610f\n\n\u8fd9\u9898\u662f\u4e2a\u8bed\u6587\u9898\uff0c\u8fd8\u662f\u81ea\u5df1\u770b\u9898\u9762\u5427\u3002\n\n\u53ea\u4e0d\u8fc7\u9898\u76ee\u4e2d\u6709\u4e00\u53e5\u8bdd\u8981\u6ce8\u610f\n\n> \u53ef\u4ee5\u4fdd\u8bc1\uff0c\u4efb\u4e24\u4e2a\u5c45\u4f4f\u70b9\u95f4\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u901a\u8def\u3002\n\n\u8fd9\u5c31\u8bf4\u660e\u4e86\u7ed9\u5b9a\u7684\u56fe\u662f\u4e00\u68f5\u6811\uff0c\u6240\u4ee5\u7ed9\u7684 $m$ \u5b9e\u9645\u4e0a\u5c31\u662f $n-1$\u3002\n\n### \u9898\u76ee\u89e3\u6790\n\n\u4e0b\u6587\u5c06 $\\texttt{Chris}$ \u7684\u7236\u6bcd\u53eb\u505a $a$\u3002\n\n\u5047\u8bbe $AC<BC$\uff0c\u90a3\u4e48\u8bf4\u660e $a$ \u5148\u8981\u53bb $A$ \u518d\u53bb $B$\uff0c\u90a3\u4e48\u8def\u7a0b\u4e3a $\\operatorname{dis}(A,C)+\\operatorname{dis(A,B)}$\uff1b\n\n\u53cd\u4e4b\uff0c\u8def\u7a0b\u4e3a $\\operatorname{dis}(B,C)+\\operatorname{dis(A,B)}$\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u4e24\u79cd\u60c5\u51b5\u4e2d\u90fd\u6709 $\\operatorname{dis(A,B)}$\uff0c\u90a3\u4e48\u6211\u4eec\u4fbf\u53ef\u4ee5\u8ba9\u8fd9\u4e2a\u957f\u5ea6\u5c3d\u91cf\u5927\uff0c\u5728\u5c3d\u91cf\u5927\u7684\u57fa\u7840\u4e0a\u6765\u679a\u4e3e $C$ \u4ece\u800c\u66f4\u65b0\u7b54\u6848\u3002\n\n\u5f88\u663e\u7136 $A,B$ \u5c31\u662f\u6811\u7684\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\u3002\n\n$A,B$ \u786e\u5b9a\u4e86\uff0c\u53ea\u9700\u8981\u8ba9\u679a\u4e3e\u7684 $C$ \u5feb\u901f\u6c42\u5f97\u8ddd\u79bb\u3002\n\n\u7ed9\u4e00\u4e2a\u65e0\u8111\u505a\u6cd5\uff0c\u65e2\u7136\u662f\u5728\u6811\u4e0a\uff0c\u90a3\u4e48\u76f4\u63a5\u5c31\u5957\u6811\u4e0a\u8ddd\u79bb\uff1a$\\operatorname{dis}(u,v)=d_u+d_v-2d_{\\operatorname{lca}(u,v)}$\uff0c\u5176\u4e2d $d_i$ \u8868\u793a\u6839\u8282\u70b9\u5230 $i$ \u7684\u8ddd\u79bb\u3002\n\n\u7136\u540e\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u7136\u540e\u4f60\u6ca1\u5f00 $\\text{long long}$ \u53c8\u770b\u671b\u4e86\u4f60\u7684\u66fe\u66fe\u66fe\u7956\u7236\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\log n)$\uff0c\u6bd4\u5e38\u89c4\u505a\u6cd5\u591a\u4e2a $\\log$ \u662f\u56e0\u4e3a\u8981\u6c42 $\\text{LCA}$\u3002\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a$O(n)$\u3002\n\n[$code$](https://paste.ubuntu.com/p/GNW23CtpZy/)\n\n$$\\texttt{The End.by UF}$$",
        "postTime": 1621000098,
        "uid": 360511,
        "name": "UperFicial",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4408 \u3010[NOI2003] \u9003\u5b66\u7684\u5c0f\u5b69\u3011"
    },
    {
        "content": "## \u9898\u76ee\n[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P4408)\n## \u89e3\u8bf4\n\u5206\u4eab\u9898\u8bf4\u5b9e\u8bdd\u6700\u5f00\u59cb\u90fd\u6ca1\u4ec0\u4e48\u601d\u8def\uff0c\u4e4b\u524d\u7684\u5927\u90e8\u5206\u57fa\u672c\u90fd\u770b\u4e86\u4e00\u4e0b\u9898\u89e3\u542f\u53d1\u601d\u8def\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/prxtybsg.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u4f46\u8fd9\u9053\u9898\u6211\u53ef\u4ee5\u5927\u58f0\u800c\u9a84\u50b2\u5730\u8bf4\uff1a\u5b83  \u662f  \u6211  \u5b8c  \u5b8c  \u5168  \u5168  \u81ea  \u5df1  \u505a  \u51fa  \u6765  \u7684  \uff01\n\n~~\u5f53\u7136\uff0c\u4ee3\u4ef7\u5c31\u662fVjudge\u4e0aWA\u4e865\u904d\uff0c\u6d1b\u8c37\u4e0aWA\u4e861\u904d\uff0c\u5751\u6740\u4e86\u6211\u4e00\u8282\u534a\u8bfe\u7684\u65f6\u95f4\u3002~~\n\n\u90a3\u4e48\uff0c\u8f6c\u5230\u6b63\u9898\uff0c\u601d\u8def\u662f\u600e\u4e48\u6837\u7684\u5462\uff1f\n\n\u9996\u5148\u53ef\u89c1\u8fd9\u4e2a\u56fe\u662f\u4e00\u68f5\u6811\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e09\u4e2a\u70b9\uff0c\u6682\u65f6\u53ebABC\u5427\u3002\u5176\u4e2d\uff08A\u5230B\u7684\u8ddd\u79bb+C\u5230AB\u8ddd\u79bb\u4e2d\u8f83\u77ed\u7684\uff09\u8fd9\u4e00\u503c\u6700\u5c0f\u3002\n\n\uff08\u4ee5\u4e0bmaxdis\u4ee3\u8868\u6811\u7684\u76f4\u5f84\uff0cmaxv\u4ee3\u8868\u7b2c\u4e00\u904dDFS\u627e\u5230\u7684\u76f4\u5f84\u7aef\u70b9\uff0cEnd\u4ee3\u8868\u7b2c\u4e8c\u904dDFS\u627e\u5230\u7684\u53e6\u4e00\u4e2a\u7aef\u70b9\uff0cbj i\u4ee3\u8868\u70b9\u662f\u5426\u5728\u76f4\u5f84\u4e0a\uff0cans i \u4ee5\u53ca\u4e4b\u540e\u7684ans1 i \u4ee3\u8868\u8282\u70b9 i \u5230maxv\u7684\u8ddd\u79bb\uff0cans2 i \u4ee3\u8868\u8282\u70b9 i \u5230End\u7684\u8ddd\u79bb\uff0cb\u4ee3\u8868\u6700\u540e\u7684\u7b54\u6848\uff09\n\n\u5f88\u663e\u7136\u8fd9\u5c5e\u4e8e\u6811\u7684\u76f4\u5f84\u9898\u3002\u7528\u4e24\u904dDFS\u627e\u51fa\u6811\u7684\u4e24\u4e2a\u9876\u70b9\u2026\u2026\u4e4b\u540e\u5462\uff1f\u6211\u5728\u8fd9\u91cc\u7b2c\u4e00\u6b21\u5361\u4f4f\u4e86\u3002\n\n\u7531\u4e8e\u4e07\u6076\u7684\u6837\u4f8b\u5e26\u6765\u7684\u9519\u89c9\uff0c\u6211\u89c9\u5f97\u9898\u76ee\u8981\u6c42\u7684\u70b9\u4e00\u5b9a\u662f\u5728\u76f4\u5f84\u4e0a\u3002\u6240\u4ee5\u6211\u5c31\u7528\u4e86\u7b2c\u4e09\u904dDFS\uff0c\u627e\u51fa\u6765\u4e86\u6240\u6709\u76f4\u5f84\u4e0a\u7684\u70b9\uff0c\u5728\u7b2c\u4e8c\u904dDFS\u7684\u65f6\u5019\u987a\u5e26\u8ba1\u7b97\u51faans  i\uff0c\u4e4b\u540e\u5faa\u73af\u4e00\u904d\u627e\u5230\u7b54\u6848\u5c31\u884c\u3002\u5faa\u73af\u5927\u6982\u5c31\u662f\uff1a\n```cpp\nfor(int i=1;i<=n;i++) if(bj[i]==1&&i!=End&&i!=maxv) b=max(b,min(maxdis-ans[i],ans[i]));\n```\n\u7136\u540e\u5c31WA\u4e86\u3002\n\n\u4e4b\u540e\u5f88\u957f\u65f6\u95f4\u6211\u5c31\u5361\u5728\u4e86\u8fd9\u4e2a\u4ee3\u7801\u7684\u6846\u6846\u91cc\uff0c\u56e0\u4e3a\u6211\u4e00\u76f4\u575a\u5b9a\u5730\u8ba4\u4e3a\u8981\u6c42\u7684\u70b9\u5728\u76f4\u5f84\u4e0a\u3002\u5361\u4e86\u534a\u5929\u8fd8\u662f\u611f\u8c22\u6d1b\u8c37\u63d0\u4f9b\u7684\u4e00\u7ec4\u9519\u8bef\u6837\u4f8b\u8ba9\u6211\u604d\u7136\u5927\u609f\uff1a\n\n\u6211\u7684C\u4e3a\u4ec0\u4e48\u4e00\u5b9a\u8981\u5728\u76f4\u5f84\u4e0a\uff1f\uff01\n\n\u4e0b\u9762\u662f\u6d1b\u8c37\u7ed9\u7684\u6837\u4f8b\uff1a\n\n![\u51fa\u9519\u7684\u6837\u4f8b](https://cdn.luogu.com.cn/upload/image_hosting/86n1fe37.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u7b80\u6d01\u660e\u4e86\u4f46\u5f88\u6709\u8bf4\u670d\u529b\u3002\n\n\u663e\u7136\uff0c\u6811\u7684\u76f4\u5f84\u662f2-4\u62163-4\u3002\u7531\u4e8e\u8fd9\u4e24\u79cd\u6ca1\u6709\u5dee\u522b\u4e0b\u9762\u5c31\u75282-4\u4e3e\u4f8b\u3002\n\n\u5982\u679c\u6309\u7167\u4e4b\u524d\u7684\u60f3\u6cd5\uff0cC\u5728\u76f4\u5f84\u4e0a\uff0c\u90a3\u4e48\u6211\u7b97\u51fa\u6765\u7684\u7ed3\u679c\u662f4.\u4f46\u82e5\u6211\u4eec\u90093\u4f5c\u4e3aC\u5462\uff1f\n\n2\u52304\u7684\u8ddd\u79bb+3\u52302,4\u8ddd\u79bb\u4e2d\u8f83\u77ed\u7684=5\u3002\n\n\u4e5f\u5c31\u662f\u8bf4C\u4e0d\u4e00\u5b9a\u5728\u76f4\u5f84\u4e0a\u3002\n\n\u566b\uff0c\u597d\u4e86\uff0c\u5168\u5d29\u4e86\u3002\n\n\u4f46\u662f\u601d\u8def\u6b63\u786e\u4e86\u5e94\u8be5\u5c31\u6ca1\u4ec0\u4e48\u95ee\u9898\u4e86\u3002\u6211\u4eec\u5728\u7b2c\u4e8c\u904ddfs\u7684\u65f6\u5019\u987a\u5e26\u7b97\u51fa\u5404\u70b9\u5230maxv\u7684\u8ddd\u79bb\uff0c\u4e4b\u540e\u518dDFS\u4e00\u904d\u7b97\u51fa\u5404\u70b9\u5230End\u7684\u8ddd\u79bb\uff0c\u4e4b\u540e\u628a\u5404\u4e2a\u70b9\u904d\u5386\u4e00\u904d\u7b97min(ans1[i],ans2[i])+maxdis\u7684\u6700\u5927\u503c\u5373\u53ef\u3002\n## \u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<queue>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=200000+3;\nint n,m,tot,head[maxn],End,maxv;\nll maxdis,ans1[maxn],ans2[maxn];\nstruct node{\n    int to,next;\n    ll w;\n}e[2*maxn];\nvoid Add(int from,int to,ll w){\n    e[tot].w=w;\n    e[tot].to=to;\n    e[tot].next=head[from];\n    head[from]=tot;\n    tot++;\n}\nvoid dfs1(int u,int f,ll dis){//\u627e\u7b2c\u4e00\u4e2a\u7aef\u70b9 \n    if(maxdis<dis) {\n        maxv=u;\n        maxdis=dis;\n    }\n    for(int i=head[u];i;i=e[i].next){\n        int v=e[i].to;ll w=e[i].w;\n        if(v==f) continue;\n        dfs1(v,u,dis+w);\n    }\n}\nvoid dfs2(int u,int f,ll dis){//\u627e\u7b2c\u4e8c\u4e2a\u7aef\u70b9 \n    ans1[u]=dis;//\u987a\u5e26\u6c42\u51fa\u6240\u6709\u70b9\u5230maxv\u7684\u8ddd\u79bb \n    if(maxdis<dis) {\n        maxdis=dis;\n        End=u;\n    }\n    for(int i=head[u];i;i=e[i].next){\n        int v=e[i].to;ll w=e[i].w;\n        if(v==f) continue;\n        dfs2(v,u,dis+w);\n    }\n}\nvoid dfs3(int u,int f,ll dis){//\u6c42\u6240\u6709\u70b9\u5230End\u7684\u8ddd\u79bb \n    ans2[u]=dis;\n    for(int i=head[u];i;i=e[i].next){\n        int v=e[i].to;ll w=e[i].w;\n        if(v==f) continue;\n        dfs3(v,u,dis+w);\n    }\n}\nint main(){\n    int n,m;\n    tot=1;\n    cin>>n>>m;\n    for(int i=1;i<=m;i++){\n        int from,to;ll w;\n        cin>>from>>to>>w;\n        Add(from,to,w);\n        Add(to,from,w);\n    }\n    dfs1(1,-1,0);\n    maxdis=0;\n    dfs2(maxv,-1,0);\n    dfs3(End,-1,0);\n    ll b=-1;\n    for(int i=1;i<=n;i++) if(i!=End&&i!=maxv) b=max(b,min(ans1[i],ans2[i])+maxdis); \n    //\u627e\u6700\u4f73\u70b9 \n    cout<<b;\n    return 0;\n}\n```\n\u5e78\u751a\u81f3\u54c9\uff0c\u6b4c\u4ee5\u548f\u5fd7\u3002",
        "postTime": 1586355459,
        "uid": 239287,
        "name": "DarthVictor",
        "ccfLevel": 6,
        "title": "[NOI2003][\u6811\u7684\u76f4\u5f84]\u9003\u5b66\u7684\u5c0f\u5b69"
    },
    {
        "content": "Sol\n===\n\u8fd1\u671f\u5728\u5199Noi\u7684\u9898\uff0c\u770b\u5230\u6709\u84dd\u8272\u7684\u9898\u76ee~~\u8fd8\u4ee5\u4e3a\u662f\u6076\u641e\u7684~~\n\n\u6bd5\u7adf\u53ea\u6709\u8fd9\u4e48\u5c11\u7684\u4eba\u5207\n\n\u540e\u6765\u53d1\u73b0\uff0c~~\u8fd9\u4e0d\u662f\u50bb\u9898\u5417~~(\u5f15\u7528\u540c\u4e00\u673a\u623f\u4e2d\u7684\u795e\u725b)\n\n\u6c42\u6811\u7684\u76f4\u5f84\uff0c\u7136\u540e\u518d\u6c42\u5176\u4f59\u70b9\u5230\u76f4\u5f84\u4e24\u7aef(\u4e2d\u6700\u5c0f\u503c)\u7684\u6700\u5927\u503c\n\n\u9898\u89e3\n===\n\n\u9996\u5148\uff0c\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u7ed3\u8bba\n\u4eceA\u8d70\u5230B(\u6216\u4eceB\u8d70\u5230A)\u8981\u4f7f\u5f97\u6700\u957f\u7684\u8bdd\uff0c\u5c31\u662f\u6811\u7684\u76f4\u5f84\uff0c\u4e24\u904dbfs\u5c31ok\u4e86\n\u7136\u540e\u4eceC\u8d70\u5230A(\u6216B)\uff0c\u8981\u4f7f\u5f97\u6700\u957f\u7684\u8bdd\uff0c\u5c31\u66b4\u529b\u5224\u4e00\u4e0b\u5457\n\n\u5047\u8bbe\u4eceA\u8d70\u5230B\u6700\u5927\u503c\u4e3aa\uff0c\u4eceC\u8d70\u5230A\u6700\u5927\u503c\u4e3ab\n\u9898\u76ee\u8981\u6c42\u4f60\u4f7fa+b\u6700\u5927\n\u73b0\u5728\u4f60\u8ba9a\u6700\u5927\uff0c\u53c8\u8ba9b\u6700\u5927\n\u90a3a+b\u4e0d\u4e45\u6700\u5927\u4e86\n\n\u6240\u4ee5\u201c\u6c34\u9898\u201d\uff0c\u5c31\u76f4\u63a5\u4e0a\u4ee3\u7801\u4e86\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\n#define ll long long\n#define rg register\n#define inf 1e18\nconst int _=200100;\ninline int read()\n{\n\tchar ch='!';int z=1,num=0;\n\twhile(ch!='-'&&(ch<'0'||ch>'9'))ch=getchar();\n\tif(ch=='-')z=-1,ch=getchar();\n\twhile(ch<='9'&&ch>='0')num=(num<<3)+(num<<1)+ch-'0',ch=getchar();\n\treturn z*num;\n}\nint N,M;\nstruct hand{int to,next,w;}e[_<<1];\nint cnt,head[_];\ninline void link(int u,int v,int w)\n{\n\te[++cnt]=(hand){v,head[u],w};head[u]=cnt;\n\te[++cnt]=(hand){u,head[v],w};head[v]=cnt;\n}\nll disa[_],disb[_],d[_];\nbool vis[_];\nqueue<int>Q;\ninline int spfa(int S,ll d[])\n{\n\tfor(rg int i=1;i<=N;++i)d[i]=inf;\n\td[S]=0;Q.push(S);vis[S]=1;\n\twhile(!Q.empty())\n\t{\n\t\trg int u=Q.front();Q.pop();\n\t\tfor(rg int i=head[u];i;i=e[i].next)\n\t\t{\n\t\t\trg int v=e[i].to;\n\t\t\tif(d[v]>d[u]+e[i].w)\n\t\t\t{\n\t\t\t\td[v]=d[u]+e[i].w;\n\t\t\t\tif(!vis[v])\n\t\t\t\t{Q.push(v);vis[v]=1;}\n\t\t\t}\n\t\t}\n\t\tvis[u]=0;\n\t}\n\trg ll Max=0;rg int t=0;\n\tfor(rg int i=1;i<=N;++i)\n\t\tif(d[i]>Max)\n\t\t\tMax=d[i],t=i;\n\treturn t;\n}\nint main()\n{\n\tN=read();M=read();\n\tfor(rg int i=1;i<=M;++i)\n\t{\n\t\tint x=read(),y=read(),z=read();\n\t\tlink(x,y,z);\n\t}\n\trg int a,b;\n\ta=spfa(1,d);\n\tb=spfa(a,disa);\n\tspfa(b,disb);\n\trg ll ans=disa[b],Max=0;\n\tfor(rg int i=1;i<=N;++i)\n\t\tMax=max(Max,min(disa[i],disb[i]));\n\tprintf(\"%lld\\n\",ans+Max);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1526085122,
        "uid": 47901,
        "name": "\u9f99\u795e\u54c8\u8fea\u65af",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4408 \u3010[NOI2003]\u9003\u5b66\u7684\u5c0f\u5b69\u3011"
    },
    {
        "content": "\u5199\u4e00\u4e2aNOI\u7684\u6c34\u9898\u6a21\u677f \n\uff08\u5176\u5b9e\u662f\u56e0\u4e3a\u8981\u590d\u4e60\u6811\u7684\u76f4\u5f84\n\n\u9898\u76ee\u5927\u610f\uff1a\n\u7ed9\u4f60n\u4e2a\u70b9\uff0cm\u6761\u8fb9\uff0c\u6c42\u4e24\u70b9\uff08u\uff0cv\uff09\u4e4b\u95f4\u8ddd\u79bb\u4e0eu\u548cv\u5230\u4e00\u4e2a\u70b9\u7684\u6700\u5927\u8ddd\u79bb\u4e2d\u7684\u6700\u5c0f\u503c\u4e4b\u548c\u7684\u6700\u5927\u503c\uff08m==n-1\uff09\n\nmax(BC+min(AC,AB);\n\n\u5927\u591a\u6570\u4eba\u7684\u7b56\u7565\u90fd\u662f\u8d2a\u5fc3\n\n\u5148\u627e\u76f4\u5f84\uff0c\u7136\u540e\u518d\u627e\u4e00\u4e2a\u70b9\u5230\u4e24\u7aef\u7684\u6700\u5927\u503c\u4e2d\u7684\u6700\u5c0f\u503c\uff08\u6839\u636e\u9898\u5e72\n\n\u4f46\u662f\u8fd9\u79cd\u505a\u6cd5\u7684\u6b63\u786e\u6027\uff1f\n\n\u4e2a\u4eba\u7ea0\u7ed3\u4e86\u597d\u4e45\u597d\u4e45...\u4e00\u76f4\u89c9\u5f97\u662f\u6570\u636e\u6c34\uff1f\n\n\u5c31\u5728\u7f51\u4e0a\u4e00\u76f4\u641c \u540e\u6765\u627e\u5230\u4e00\u7bc7\u6587\u7ae0\n\n[\u8bc1\u660e\u70b9\u51fb\u6b64\u5904](http://blog.sina.com.cn/s/blog_72aa02bd0100y5vt.html)\n\n\u89e3\u51b3\u4e86\u8d2a\u5fc3\u7684\u95ee\u9898\u4e4b\u540e \u6211\u4eec\u6765\u5206\u6790 \u9996\u5148\u8981\u6c42\u51fa\u76f4\u5f84\n\n\u6811\u7684\u76f4\u5f84\u5c31\u662f\u6811\u4e0a\u4e24\u70b9\u7684\u6700\u5927\u8ddd\u79bb \n\n\u7136\u540e\u8fd9\u65f6\u5019\u89e3\u51b3\u7b2c\u4e8c\u4e2a\u95ee\u9898min\uff08AC,AB\uff09\u7684\u6700\u5927\u503c\n\n\u5176\u5b9e\u6211\u4e00\u5f00\u59cb\u662f\u8003\u8651\u6c42\u4e24\u70b9\u7684LCA\u7136\u540e\u4eceLCA\u5f00\u59cb\u904d\u5386\u6700\u8fdc\u8ddd\u79bb \u5176\u5b9e\u5e94\u8be5\u662f\u53ef\u884c\u7684 \u4f46\u662fLCA+\u6811\u7684\u76f4\u5f84 \u53ef\u80fd\u4f1a\u6302\u6389\n\n\u540e\u6765\u53d1\u73b0\u5176\u5b9e\u53ea\u9700\u8981\u679a\u4e3e\u5c31\u884c\u4e86.....\n\n\u4ece\u94fe\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u5f00\u59cb\u904d\u5386\n\n\u5173\u4e8e\u6c42\u76f4\u5f84\uff1f\n\n\u6211\u559c\u6b22\u7528BFS\u6c42 \u8fd9\u6837\u6bd4\u8f83\u6e05\u65b0 \n\n\u4f46\u662f\u6253BFS\u51fa\u73b0\u4e86\u5c0f\u4e2a\u95ee\u9898 \u5c31\u662f\u5982\u679c\u76f4\u5f84\u672c\u6765\u5c31\u662f\u4e00\u4e2a\u94fe\u72b6\uff08\u5982\u6837\u4f8b\n\n\u8fd9\u6837\u6211\u7b2c\u4e8c\u904dBFS \u7684\u65f6\u5019\u7ec8\u70b9\u4e0d\u4f1a\u66f4\u65b0  \u8fd9\u4e2a\u5361\u4e86\u597d\u4e45\n\n\u540e\u6765\u6211\u628a\u5224\u65ad\u6539\u6210\u4e86>=\u5c31\u6210\u529f\u8fc7\u4e86....\n\n\u653e\u4e0b\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=1e6;\nstruct edge{\n    int next,to,w;\n}e[N<<1];\nint head[N],cnt,dis[N],point,len,n,diss[N],disss[N],m,st,ed;\nbool vis[N];\ninline void add(int x,int y,int w){\n    e[++cnt].next=head[x];\n    e[cnt].to=y;\n    e[cnt].w=w;\n    head[x]=cnt;\n}\ninline void bfs(int x){\n    memset(dis,0,sizeof(dis));\n    memset(vis,0,sizeof(vis));\n    vis[x]=1;\n    queue<int>q;\n    q.push(x);\n    while(!q.empty()){\n        int u=q.front();\n        q.pop();\n        for(int i=head[u];i;i=e[i].next){\n            int v=e[i].to;\n            if(!vis[v]){\n                q.push(v);\n                dis[v]=dis[u]+e[i].w;\n                vis[v]=true;\n            }\t\n        }\t\t\n    }\n    for(int i=1;i<=n;i++){\n        if(dis[i]>=len){\n            len=dis[i];\n            point=i;\n        }\n    } \t\n}\ninline void dfs1(int x,int fa){\n    for(int i=head[x];i;i=e[i].next){\n        int y=e[i].to;\n        if(y==fa) continue;\n        diss[y]=diss[x]+e[i].w;\n        dfs1(y,x);\n    }\n}\ninline void dfs2(int x,int fa){\n    for(int i=head[x];i;i=e[i].next){\n        int y=e[i].to;\n        if(y==fa) continue;\n        disss[y]=disss[x]+e[i].w;\n        dfs2(y,x);\n    }\n}\nsigned main(){\n    scanf(\"%lld%lld\",&n,&m);\n    for(int i=1;i<=m;i++){\n        int u,v,w;\n        scanf(\"%lld%lld%lld\",&u,&v,&w);\n        add(u,v,w);\n        add(v,u,w);\n    }\t\n    bfs(1);\n    st=point; \n    bfs(point);\n    ed=point;\n    dfs1(st,0); \n    dfs2(ed,0);\n    int ans=0;\n    for(int i=1;i<=n;i++){\n        ans=max(ans,min(diss[i],disss[i]));\n    }\n    printf(\"%lld\",ans+len);\n    return 0;\n} \n```\n\n\u8bb0\u5f97\u5f00long long \n\n\u8fd8\u6709\u5c31\u662f\u653e\u4e00\u4e0b\u6c42\u6811\u7684\u76f4\u5f84\u7684\u6a21\u677f\n\nBFS\u7248\u672c\n```cpp\ninline void bfs(int x){\n    memset(dis,0,sizeof(dis));\n    memset(vis,0,sizeof(vis));\n    vis[x]=1;\n    queue<int>q;\n    q.push(x);\n    while(!q.empty()){\n        int u=q.front();\n        q.pop();\n        for(int i=head[u];i;i=e[i].next){\n            int v=e[i].to;\n            if(!vis[v]){\n                q.push(v);\n                dis[v]=dis[u]+e[i].w;\n                vis[v]=true;\n            }\t\n        }\t\t\n    }\n    for(int i=1;i<=n;i++){\n        if(dis[i]>=len){\n            len=dis[i];\n            point=i;\n        }\n    } \t\n}\n```\n\n\u6811\u5f62DP\u7248\uff1a\n\n```cpp\ninline void dp(int x){\n\tvis[x]=1;\n\tfor(int i=head[x];i;i=e[i].next){\n\t\tint y=e[i].to;\n\t\tif(vis[y]) continue;\n\t\tdp(y);\n\t\tans=max(ans,dis[x]+dis[y]+e[i].w);\n\t\tdis[x]=max(dis[x],dis[y]+e[i].w);\n\t}\n}\n```\n\u4e2a\u4eba\u8ba4\u4e3a\u4ee3\u7801\u53ef\u8bfb\u6027\u8fd8\u7b97\u662f\u53ef\u4ee5\u7684...\n\uff08~~\u9003~~",
        "postTime": 1561519133,
        "uid": 142373,
        "name": "Kendrick_Z",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4408 \u3010[NOI2003]\u9003\u5b66\u7684\u5c0f\u5b69\u3011"
    },
    {
        "content": "\u5927\u90e8\u5206\u601d\u8def\u597d\u50cf\u90fd\u662f\u5148\u627e\u76f4\u5f84\u7136\u540e\u518d\u627e\u8d77\u70b9\u3002\n\n\u6211\u63d0\u4f9b\u53e6\u4e00\u79cd\u601d\u8def\uff1a\u627e\u4e2d\u95f4\u70b9\u3002  \n\u53ef\u4ee5\u53d1\u73b0\u4e00\u79cd\u5408\u6cd5\u7684\u8def\u5f84\u5176\u5b9e\u5c31\u662f\u5728\u4e00\u4e2a\u70b9\u5904\u62c9\u51fa\u53bb\u4e09\u6761\u94fe(\u957f\u5ea6\u53ef\u4ee5\u4e3a0)\uff0c\u5176\u4e2d\u7b2c\u4e8c\u957f\u7684\u94fe\u957f\u5ea6\u7ffb\u500d\u3002\n\n\u7136\u540e\u5c31\u7528\u6811\u5f62DP+\u4e8c\u6b21\u626b\u63cf\u4e0e\u6362\u6839\u6cd5\u505a\u4e86\u3002\n\n\u6709\u4e00\u4e2a\u7ec6\u8282\u5c31\u662f\u8fd9\u4e09\u6761\u94fe\u4e0d\u80fd\u91cd\u590d\uff0c\u6240\u4ee5\u53ea\u53d6\u6bcf\u4e2a\u5b50\u6811\u7684\u6700\u957f\u94fe\u62ff\u6765\u66f4\u65b0\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\ntypedef long long LL;\nconst int N = 200010;\n\nstruct Edge {\n    int nex, v, len;\n}edge[N << 1]; int top;\n\nint n, e[N];\nLL f[N][3], t[7], ans;\n\ninline void add(int x, int y, int z) {\n    top++;\n    edge[top].v = y;\n    edge[top].len = z;\n    edge[top].nex = e[x];\n    e[x] = top;\n    return;\n}\n\nvoid DFS(int x, int fa) {\n    for(int i = e[x]; i; i = edge[i].nex) {\n        int y = edge[i].v;\n        if(y == fa) {\n            continue;\n        }\n        DFS(y, x);\n        for(int j = 0; j < 3; j++) {\n            if(f[x][j] < f[y][0] + edge[i].len) {\n                for(int k = 2; k > j; k--) {\n                    f[x][k] = f[x][k - 1];\n                }\n                f[x][j] = f[y][0] + edge[i].len;\n                break;\n            }\n        }\n    }\n    for(int i = 0; i < 3; i++) {\n        if(f[x][i] < 0) {\n            f[x][i] = 0;\n            break;\n        }\n    }\n    return;\n}\n\nvoid DFS_2(int x, int fa, LL dis) {\n    t[3] = dis;\n    for(int i = 0; i < 3; i++) {\n        t[i] = f[x][i];\n    }\n    std::sort(t, t + 4);\n    ans = std::max(ans, t[3] + t[2] + t[2] + t[1]);\n    LL a = t[3], b = t[2];\n    for(int i = e[x]; i; i = edge[i].nex) {\n        int y = edge[i].v;\n        if(y == fa) {\n            continue;\n        }\n        if(f[y][0] + edge[i].len == a) {\n            DFS_2(y, x, b + edge[i].len);\n        }\n        else {\n            DFS_2(y, x, a + edge[i].len);\n        }\n    }\n    return;\n}\n\nint main() {\n    memset(f, ~0x3f, sizeof(f));\n    int m;\n    scanf(\"%d%d\", &n, &m);\n    for(int i = 1, x, y, z; i <= m; i++) {\n        scanf(\"%d%d%d\", &x, &y, &z);\n        add(x, y, z);\n        add(y, x, z);\n    }\n\n    DFS(1, 0);\n    DFS_2(1, 0, 0ll);\n    printf(\"%lld\", ans);\n\n    return 0;\n}\n```",
        "postTime": 1543116027,
        "uid": 55600,
        "name": "huyufeifei",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4408 \u3010[NOI2003]\u9003\u5b66\u7684\u5c0f\u5b69\u3011"
    },
    {
        "content": "# P4408 \u9898\u89e3\n## \u9898\u610f\n\u627e\u6700\u957f\u6298\u8fd4\u8def\u5f84\u3002\n## \u89e3\u7b54\n\u9996\u5148\uff0c\u6211\u4eec\u5148\u4e0d\u8003\u8651\u5148\u53bb $B$ \u8fd8\u662f\u5148\u53bb $C$ \u3002\u6211\u4eec\u5148\u5047\u8bbe\u5148\u53bb $B$ \u3002\u90a3\u4e48 $B$ \u7684\u6700\u574f\u60c5\u51b5\u662f\u4ec0\u4e48\uff1f\u6811\u7684\u76f4\u5f84\uff01\uff08\u4e0d\u4f1a\u7684\u8bdd\u5148\u53bb\u5237[\u8fd9\u9053](https://www.luogu.com.cn/problem/SP1437)\uff0c\u90a3\u91cc\u4e5f\u6709\u6211\u7684\u9898\u89e3\uff09\u3002\u4e24\u6b21 $dfs$ \u6216\u8005\u8bb0\u5f55\u6700\u957f\u548c\u6b21\u957f\u8def\u5f84\u5373\u53ef\u3002\n\n\u73b0\u5728\u5047\u8bbe $B$ \u70b9\u5df2\u7ecf\u627e\u5b8c\u4e86\u3002\u90a3\u4e48\u6211\u4eec\u8fd8\u9700\u8981\u627e $C$ \uff0c\u600e\u4e48\u8ba9 $C$ \u6700\u8fdc\u5462\uff1f\u518d\u627e\u4e00\u6761**\u7b2c\u4e09\u957f**\u7684\u8def\u5f84\u5373\u53ef\u3002\n\n\u7b97\u6cd5\u53e3\u80e1\u5b8c\u6bd5\u3002\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u6709\u4e24\u4e2a\u601d\u8def\uff1a\n1. \u8bb0\u5f55\u524d\u4e09\u957f\u8def\u5f84\n2. \u8ba1\u7b97 $BC$ \u76f4\u5f84\uff0c\u679a\u4e3e $A$ \u3002\n\n### 1. \u8bb0\u5f55\u524d\u4e09\u957f\u8def\u5f84\n\u6211\u4eec\u53ea\u9700\u8981\u5728 $dfs$ \u7684\u65f6\u5019\u5148\u628a\u5f53\u524d\u6700\u4f18\u89e3\u8bb0\u5f55\u5230\u7b2c\u4e09\u957f\u8def\u5f84\u4e2d\uff0c\u7136\u540e\u4f9d\u6b21\u5411\u4e0a\u66f4\u65b0\u3002\n\n### Code:\n```cpp\n#include <bits/stdc++.h>\n#define N 200005\nusing namespace std;\n\ntypedef long long ll;\nstruct edge { ll t, w, nex; } edgs[N<<1];\nll n, m, edge_counter, head[N], kth_p[N][4], bestt[N];\n\nvoid add(ll u, ll v, ll w)\n{ edgs[++edge_counter] = (edge){v, w, head[u]}, head[u] = edge_counter; }\n\nvoid dfs_h(ll u, ll fa)\n{\n  kth_p[u][1] = kth_p[u][2] = kth_p[u][3] = 0;\n  for(ll i = head[u]; i; i = edgs[i].nex)\n  {\n    ll v = edgs[i].t, w = edgs[i].w;\n    if(v == fa) continue;\n    dfs_h(v, u);\n////////path\n    if(kth_p[u][3] >= kth_p[v][1] + w) continue;\n    kth_p[u][3] = kth_p[v][1]+w;\n////////third\n    if(kth_p[u][2] >= kth_p[u][3]) continue;\n    swap(kth_p[u][2], kth_p[u][3]);\n////////second\n    if(kth_p[u][1] >= kth_p[u][2]) continue;\n    swap(kth_p[u][1], kth_p[u][2]);\n////////first\n  }\n}\n\nvoid dfs_g(ll u, ll fa)\n{\n  for(ll i = head[u]; i; i = edgs[i].nex)\n  {\n    ll v = edgs[i].t, w = edgs[i].w;\n    if(v == fa) continue;\n    if(kth_p[u][1] == kth_p[v][1] + w) bestt[v] = w + max(bestt[u], kth_p[u][2]);\n////////v on u_greatest\n    else bestt[v] = w + max(bestt[u], kth_p[u][1]);\n    dfs_g(v, u);\n  }\n}\n\nint main()\n{\n  ////////need fix\n  return 0;\n}\n```\n### 2. \u8ba1\u7b97 $BC$ \u76f4\u5f84\uff0c\u679a\u4e3e $A$\n\u9996\u5148\uff0c\u6211\u4eec\u5148\u6c42\u4e00\u6b21\u76f4\u5f84\uff0c\u7136\u540e\u679a\u4e3e $A$ \u3002\u601d\u8def\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u4ee3\u7801\u5c31\u4e0d\u662f\u90a3\u4e48\u7b80\u5355\u4e86\u3002\u6211\u4eec\u9700\u8981\u5148\u6c42\u51fa $LCA$ \u3002\u7136\u540e~~\u4e00\u5806\u4e71\u641e~~\u6c42\u5f97\u7b54\u6848\u3002\n\n### Code:\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nconst ll N = 200009;\nll n, L, d[N], p[N][21];\nll timer, elr_in[N], elr_out[N];\nstruct edge { ll v, w, nex; } edgs[N<<1];\nll edges_counter, head[N];\n\nvoid addE(ll u, ll v, ll w)\n{\n  edgs[++edges_counter] = (edge){v, w, head[u]}, head[u] = edges_counter;\n  edgs[++edges_counter] = (edge){u, w, head[v]}, head[v] = edges_counter;\n}\n\nvoid dfs(ll u, ll fa)\n{\n  for(ll i = head[u]; i; i = edgs[i].nex)\n  {\n    ll v = edgs[i].v;\n    if(v == fa) continue;\n    d[edgs[i].v] = d[u] + edgs[i].w;\n    dfs(edgs[i].v, u);\n  }\n}\n\nvoid dfs_p_t(ll u, ll fa)\n{\n  elr_in[u] = ++timer;\n  p[u][0] = fa;\n  for(ll i = 1; i <= L; ++i)\n    p[u][i] = p[p[u][i-1]][i-1];\n  for(ll i = head[u]; i; i = edgs[i].nex)\n  {\n    ll v = edgs[i].v;\n    if(v == fa) continue;\n    d[edgs[i].v] = d[u] + edgs[i].w;\n    dfs_p_t(edgs[i].v, u);\n  }\n  elr_out[u] = ++timer;\n}\n\nvoid input()\n{\n  scanf(\"%lld\", &n);\n  for(ll i = 1, u, v, w; i < n; ++ i)\n  {\n    scanf(\"%lld%lld%lld\", &u, &v, &w);\n    addE(u, v, w);\n  }\n}\n\nbool isup(ll u, ll v)\n{\n  //...\n}\n\nll lca(ll u, ll v)\n{\n  //...\n}\n\nint main()\n{\n  return 0;\n}\n```\n\u5b8c\u7ed3\u6492\u82b1~\u987a\u4fbf\u6c42\u8d5e",
        "postTime": 1597216426,
        "uid": 291706,
        "name": "GspTools",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4408 \u3010[NOI2003]\u9003\u5b66\u7684\u5c0f\u5b69\u3011"
    },
    {
        "content": "\u9996\u5148\u8981\u660e\u786e\uff1a\n\n- \u9898\u76ee\u4e2d\u300c\u4efb\u4e24\u4e2a\u5c45\u4f4f\u70b9\u95f4\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u901a\u8def\u300d\u8bf4\u660e\u7ed9\u51fa\u7684\u662f\u4e00\u68f5\u6811\uff0c\u65e0\u987b\u518d\u81ea\u5df1\u6c42 MST\u3002\n\n- $a,b,c$ \u4e0d\u4f1a\u91cd\u5408\u3002\n\n\u663e\u7136\u53ef\u4ee5\u53d1\u73b0\uff0c$a,b$ \u4e24\u70b9\u4e00\u5b9a\u5728\u6811\u7684\u76f4\u5f84\u7684\u4e24\u7aef\u3002\u4e3a\u4ec0\u4e48\uff1f\n\n\u56e0\u4e3a\u5982\u679c\u53ea\u6709\u5728\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u624d\u80fd\u4fdd\u8bc1\u6211\u4eec\u9009\u62e9\u7684 $c$ \u5230\u8f83\u8fd1\u4f4d\u7f6e\u7684\u8ddd\u79bb\u548c $ab$ \u95f4\u7684\u8ddd\u79bb\u6700\u8fdc\u3002\u53ef\u4ee5\u81ea\u5df1\u753b\u56fe\uff0c\u6bd4\u8f83\u597d\u7406\u89e3\u3002\n\n\u786e\u5b9a\u4e86 $ab$ \u4e4b\u540e\uff0c\u9700\u8981\u518d\u786e\u5b9a $c$ \u70b9\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u5206\u522b\u4ece $a,b$ \u8dd1\u4e00\u4e2a\u6700\u77ed\u8def\uff0c\u7136\u540e\u7ebf\u6027\u679a\u4e3e\u8fd9\u4e2a\u4f4d\u7f6e $c$ \u5c31\u53ef\u4ee5\u3002\n\n\u7b54\u6848\u5c31\u662f $\\text{dis}(a,b)+\\max\\{\\min\\{\\text{dis}(a,c),\\text{dis}(b,c)\\}\\}$\u3002",
        "postTime": 1628146199,
        "uid": 281497,
        "name": "KEBrantily",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4408  \u3010[NOI2003] \u9003\u5b66\u7684\u5c0f\u5b69\u3011"
    },
    {
        "content": "\u4e0b\u5348\u8981\u8003\u8bd5\uff0c\u542c\u8bf4\u8003\u524d\u53d1\u9898\u89e3\u53ef\u4ee5\u6512\u70b9 RP\uff0c\u6240\u4ee5\u6765\u6512\u70b9 RP \u5148\u3002  \n\u95f2\u8bdd\u5c11\u8bf4\uff0c\u5207\u5165\u6b63\u9898\u2014\u2014  \n\n---\n\u9898\u76ee\u5927\u610f\uff1a  \n> \u7ed9\u4f60\u4e00\u4e2a\u65e0\u5411\u6811\uff0c\u6c42\u4efb\u610f $A,B,C$ \u4e09\u4e2a\u70b9\u6700\u5927\u4f7f\u5f97 $dis_{A,B} + dis_{B,C}$ \u6700\u5927\uff0c\u4e14 $dis_{A, C} > dis_{B, C}$\u3002\uff08$dis$ \u8868\u793a\u4e24\u70b9\u8ddd\u79bb\uff09  \n\n*\u9898\u76ee\u867d\u7136\u8bf4\u4e86\u987a\u5e8f\uff0c\u4f46\u662f\u6211\u4eec\u628a $A,B$ \u4e24\u70b9\u5bf9\u8c03\u5b9e\u9645\u4e0a\u4e0d\u5f71\u54cd\u4e0a\u9762\u7684\u5f0f\u5b50\u7ed3\u679c*  \n\n\u5fc5\u7136\u7684\uff0c\u5982\u679c\u8981\u8ba9\u8fd9\u4e2a\u5f0f\u5b50\u6700\u5927\u5316\u663e\u7136\u6709\u4e24\u4e2a\u70b9\u662f\u8be5\u6811\u7684\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\u3002\u6240\u4ee5\u8bf4\u6211\u4eec\u8981\u8003\u8651\u662f $A,B$ \u4e24\u70b9\u662f\u76f4\u5f84\u7aef\u70b9\u8fd8\u662f $B,C$ \u4e24\u70b9\u662f\u76f4\u5f84\u7aef\u70b9\u3002  \n\u663e\u7136\uff0c\u6211\u4eec\u7684\u884c\u8d70\u7ebf\u8def\u662f $C-B-A$\uff0c\u5982\u679c\u6211\u4eec\u5c06 $C,B$ \u4f5c\u4e3a\u76f4\u5f84\u7684\u4e24\u7aef\uff0c\u663e\u7136\u662f\u4e0d\u6210\u7acb\u7684\uff0c\u56e0\u4e3a\u76f4\u5f84\u662f\u6811\u4e2d\u6700\u957f\u7684\u70b9\u5bf9\uff0c$dis_{A,C}$ \u4e0d\u53ef\u80fd\u5728\u8be5\u60c5\u51b5\u4e0b\u5927\u4e8e $dis_{B, C}$\u3002\u90a3\u4e48 $A,B$ \u5fc5\u7136\u4e3a**\u76f4\u5f84\u7684\u4e24\u7aef**\u3002  \n\n---\n\u5f97\u5230\u4e86\u8fd9\u4e2a\u91cd\u8981\u7684\u7ed3\u8bba\u540e\uff0c\u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\u4e86\u4e00\u534a\u4e86\u3002  \n\u7528\u4e24\u6b21 dfs \u53ef\u4ee5\u65b9\u4fbf\u7684\u6c42\u51fa $A,B$ \u70b9\u5230\u6240\u6709\u70b9\u7684\u8ddd\u79bb\uff0c\u8fd9\u6b63\u597d\u53ef\u4ee5\u7528\u6765\u6c42 $C$ \u70b9\u3002  \n**\u6ce8\u610f\u76f4\u5f84\u7684\u4e24\u7aef\u53ea\u662f $A,B$ \u4e24\u70b9\u7684\u7b54\u6848\u5019\u9009\u96c6\u5408\uff0c\u4e5f\u5c31\u662f\u8bf4\u8d77\u70b9\u4e0d\u4e00\u5b9a\u662f $A$\uff0c\u7ec8\u70b9\u4e0d\u4e00\u5b9a\u662f $B$**  \n\u73b0\u5728\u4ec5\u4ec5\u5269\u4e0b $C$ \u70b9\u4e0d\u77e5\u9053\u4e86\uff0c\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u8fd9\u4e2a\u5f0f\u5b50\uff1a$dis_{A,C} > dis_{B,C}$\u3002  \n\u6211\u4eec\u679a\u4e3e\u6bcf\u4e2a\u70b9\u4f5c\u4e3a $C$\uff0c\u6211\u4eec\u77e5\u9053\u4e86\u5019\u9009\u96c6\u5408\u5230\u8fd9\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u6211\u4eec\u53d6\u5230\u8be5\u70b9\u8ddd\u79bb\u5c0f\u7684\u90a3\u4e2a\u505a $B$\uff0c\u56e0\u4e3a $dis_{A,C} > dis_{B,C}$\uff0c\u6211\u4eec\u53d6\u8fd9\u4e9b\u4e1c\u897f\u7684\u6700\u5927\u503c\uff0c\u5c31\u80fd\u5f97\u5230 $C-B$ \u7684\u8ddd\u79bb\u4e86\uff0c\u52a0\u4e0a\u76f4\u5f84\u8ddd\u79bb\uff0c\u4e5f\u5c31\u662f $dis_{A,B}$\uff0c\u5c31\u80fd\u5f97\u5230\u7b54\u6848\u3002  \n\u7531\u4e8e $T_i \\le 10^9$\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5f00 long long\u3002  \n\u4ee3\u7801\uff1a  \n\n```cpp\n//long long!\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#define MAXN 200000\n#define int long long\n#define QWQ printf(\"qwq\\n\"); \nusing namespace std;\nint max(int x, int y) {return ((x > y) ? (x) : (y));}\nint min(int x, int y) {return ((x < y) ? (x) : (y));}\nstruct node {\n\tint to, val;\n\tnode(int T, int V) {\n\t\tto = T, val = V;\n\t}\n};\nint disA[MAXN + 10], disB[MAXN + 10], disC[MAXN + 10], n, m;\nvector <node> gra[MAXN + 10];\n//dfsA\uff0cdfsB\uff0cdfsC \u90fd\u662f\u627e\u8ddd\u79bb\u3002  \n//A \u662f\u4ece\u4efb\u610f\u8282\u70b9\u51fa\u53d1\uff0cB \u662f\u4ece\u76f4\u5f84\u8d77\u70b9\u51fa\u53d1\uff0cC \u662f\u4ece\u76f4\u5f84\u672b\u5c3e\u51fa\u53d1\nvoid dfsA(int u, int fa) {\n\tfor(int p = 0; p < gra[u].size(); p++) {\n\t\tint v = gra[u][p].to;\n\t\tif(v != fa) {\n\t\t\tdisA[v] = disA[u] + gra[u][p].val;\n\t\t\tdfsA(v, u);\n\t\t}\n\t}\n} \nvoid dfsB(int u, int fa) {\n\tfor(int p = 0; p < gra[u].size(); p++) {\n\t\tint v = gra[u][p].to;\n\t\tif(v != fa) {\n\t\t\tdisB[v] = disB[u] + gra[u][p].val;\n\t\t\tdfsB(v, u);\n\t\t}\n\t}\n} \nvoid dfsC(int u, int fa) {\n\tfor(int p = 0; p < gra[u].size(); p++) {\n\t\tint v = gra[u][p].to;\n\t\tif(v != fa) {\n\t\t\tdisC[v] = disC[u] + gra[u][p].val;\n\t\t\tdfsC(v, u);\n\t\t}\n\t}\n} \nvoid calc() {//\u7b54\u6848\u6c42\u89e3\n\tdfsA(1, 0);//\u4ece\u4efb\u4e00\u70b9\u5f00\u59cb\u627e\u5230\u8d77\u70b9\n\tint st, ed, ans = 0, maxn = 0;\n\tfor(int p = 1; p <= n; p++) \n\t\tif(disA[p] > ans)\n\t\t\tans = disA[p], st = p;\n\tans = 0;\n\tdfsB(st, 0);//\u7b97\u8d77\u70b9\u5230\u6240\u6709\u70b9\u7684\u8ddd\u79bb\n\tfor(int p = 1; p <= n; p++)\n\t\tif(disB[p] > ans)\n\t\t\tans = disB[p], ed = p;\n   \t// ans \u662f\u76f4\u5f84\u957f\u5ea6\n\tdfsC(ed, 0);//\u7b97\u7ec8\u70b9\u5230\u6240\u6709\u70b9\u7684\u8ddd\u79bb\n\tfor(int p = 1; p <= n; p++)\n\t\tmaxn = max(maxn, min(disB[p], disC[p]));//\u7b97 C-B \u7684\u8ddd\u79bb\n\tprintf(\"%lld\\n\", maxn + ans);//\u8f93\u51fa\n}\nsigned main() {\n\tscanf(\"%lld%lld\", &n, &m);\n\tfor(int p = 1, x, y, z; p <= m; p++) {\n\t\tscanf(\"%lld%lld%lld\", &x, &y, &z);\n\t\tgra[x].push_back(node(y, z));\n\t\tgra[y].push_back(node(x, z));\n\t}\n\tcalc();\n}\n```\n",
        "postTime": 1620192708,
        "uid": 298549,
        "name": "SIXIANG32",
        "ccfLevel": 5,
        "title": "\u9898\u89e3\u3010[NOI2003] \u9003\u5b66\u7684\u5c0f\u5b69\u3011"
    },
    {
        "content": "~~**\u4e0d\u5f00long long\u89c1\u7956\u5b97**\u662f\u4e07\u53e4\u4e0d\u53d8\u7684\u771f\u7406~~\n\n\u9996\u5148\u6765\u5206\u6790\u9898\u610f\uff1a\n\n1. \u4ece`\u8857\u9053\u4fe1\u606f\u4e0d\u4f1a\u91cd\u590d\u7ed9\u51fa`\uff0c\u6211\u4eec\u77e5\u9053\u4e86\u8fd9\u4e2a\u8f93\u5165\u6ca1\u6709\u91cd\u8fb9\u3002\u4ece`\u53ef\u4ee5\u4fdd\u8bc1\uff0c\u4efb\u4e24\u4e2a\u5c45\u4f4f\u70b9\u95f4\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u901a\u8def`\u77e5\u9053\uff0c\u6211\u4eec\u9762\u5bf9\u7684\u662f\u4e00\u9897\u6811\u3002\u56e0\u4e3a\u6811\u4fdd\u8bc1\u4e86\u8fd9\u6837\u7684\u6027\u8d28\uff0c\u6240\u4ee5\u5176\u5b9e\u8f93\u5165\u7684m\u5c31\u662fn-1\u3002\n\n2. \u4ece\u6570\u636e\u8303\u56f4`1\u2264Ti\u22641000000000`\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u4eec\u8981\u5f00long long\uff08\u56e0\u4e3a\u6700\u540e\u7684\u7b54\u6848\u4f1a\u5f88\u5927\uff09\u3002\n\n3. \u770bChris\u7684\u7236\u6bcd\u7684\u884c\u8d70\u65b9\u5f0f\uff0c\u5c31\u662f\u4f1a\u5148\u53bb\u627e\u8ddd\u79bbC\u70b9\u6700\u8fd1\u7684\u90a3\u4e2a\u70b9\uff08\u4e0d\u59a8\u8bbe\u6210A\uff09\uff0c\u7136\u540e\u5982\u679c\u4eba\u6ca1\u6709\u7684\u8bdd\u53bb\u627eB\u3002\u5bf9\u4e8e\u9898\u76ee\u6700\u957f\u65f6\u95f4\u7684\u8981\u6c42\uff0c\u80af\u5b9a\u662f\u4e0d\u80fd\u7b2c\u4e00\u6b21\u5c31\u627e\u5230\uff0c\u4ee5\u53caAB\u4e4b\u95f4\u7684\u8ddd\u79bb\u8981\u5c3d\u53ef\u80fd\u7684\u957f\u3002\u628a\u9898\u76ee\u62bd\u8c61\u51fa\u6765\uff0c\u53d8\u6210\u4e00\u53e5\u80fd\u88abOier\u4eec\u542c\u61c2\u7684\u8bdd\uff1a\n\n`\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u5728\u6811\u4e0a\u9762\u627e\u5230A\u3001B\u3001C\u4e09\u4e2a\u70b9\uff0c\u4f7f\u5f97AB\u4e4b\u95f4\u7684\u8def\u5f84\u52a0\u4e0aMIN\uff08AC\uff0cBC\uff09\u7684\u503c\u6700\u5927`\n\n\u8d2a\u5fc3\u7684\u8bc1\u660e\u53ea\u662f\u9884\u611f\u7684\uff0c\u8bc1\u660e\u8fc7\u7a0b\u8fd8\u662f\u770b\u770b@C3H5ClO\n\u795e\u4ed9\u7684\u9898\u89e3Orz%%%\n\n\u8fd9\u5e94\u8be5\u662f\u4e00\u4e2a\u6a21\u677f\u4e86\u5427\n\nCode\n```\n#include<iostream>//\u7b2c\u4e00\u6b21\u5f00int\u6ca1\u8fc7\uff0c\u4e00\u6c14\u4e4b\u4e0b\u628a\u6240\u6709\u7684int\u6362\u6210\u4e86longlong\uff0c\u7136\u540e\u8fc7\u4e86\uff08\n#include<cstdio>\n#include<queue>\n#include<cstring>\nusing namespace std;\nstruct side{\n\tlong long to,nxt,w;\n}e[400005];\nlong long head[200005],cnt=0;\nlong long n,m;\nbool vis[200005];\nlong long d1[200005],d2[200005];\nlong long diameter,maxx=0;//diameter\u662f\u76f4\u5f84\u7684\u610f\u601d\uff08\u6342\u8138\ninline void add(long long u,long long v,long long w)\n{\n\tcnt++;\n\te[cnt].to=v;\n\te[cnt].w=w;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\ninline long long bfs(long long start)\n{\n\tmemset(d1,0,sizeof(d1));//d1\u8868\u793a\u4ece\u67d0\u4e2a\u8d77\u70b9start\u51fa\u53d1\uff0c\u5230\u5404\u4e2a\u70b9\u7684\u8ddd\u79bb\n\tmemset(vis,0,sizeof(vis));\n\tqueue<long long> q;\n\tlong long maxn=0,node;\n\tq.push(start);\n\tvis[start]=1;\n\twhile(!q.empty())\n\t{\n\t\tlong long x=q.front();\n\t\tq.pop();\n\t\tfor(register long long i=head[x];i;i=e[i].nxt)\n\t\tif(!vis[e[i].to])\n\t\t{\n\t\t\tvis[e[i].to]=1;\n\t\t\td1[e[i].to]=d1[x]+e[i].w;\n\t\t\tq.push(e[i].to);\n\t\t\tif(d1[e[i].to]>maxn) //\u66f4\u65b0\u6700\u8fdc\u7684\u70b9\n\t\t\t{\n\t\t\t\tmaxn=d1[e[i].to];\n\t\t\t\tnode=e[i].to;\n\t\t\t}\n\t\t}\n\t}\n\treturn node;\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor(register long long i=0;i<m;i++)\n\t{\n\t\tlong long x,y,z;\n\t\tcin>>x>>y>>z;\n\t\tadd(x,y,z),add(y,x,z);\n\t}\n\tlong long l=bfs(1),r=bfs(l);//\u6c42\u5e26\u6743\u6811\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\n   \t//\u8fd9\u4e2ad1\u6570\u7ec4\u6210\u4e86\u4ecel\u5f00\u59cb\u5230\u5404\u4e2a\u70b9\u7684\u8ddd\u79bb\n\tdiameter=d1[r];//\u76f4\u5f84\u957f\u5ea6\n\tfor(register long long i=1;i<=n;i++) d2[i]=d1[i];//Copy\u4e00\u4e0b\n\tbfs(r);//\u8fd9\u4e2a\u4ece\u76f4\u5f84\u7684\u53e6\u5916\u4e00\u4e2a\u7aef\u70b9\u641c\u7d22\u8fc7\u540e\uff0c\u8fd9\u4e2ad1\u6570\u7ec4\u5c31\u6210\u4e86\u4ecer\u5f00\u59cb\u5230\u5404\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u8d2a\u5fc3\u4e86\n\tfor(register long long i=1;i<=n;i++) maxx=max(maxx,min(d1[i],d2[i]));//\u6c42\u6700\u5927\u7684\u6700\u5c0f\u503c\n\tcout<<diameter+maxx;\n\treturn 0;\n}\n```",
        "postTime": 1604470913,
        "uid": 231169,
        "name": "Laser_Crystal",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4408 \u3010[NOI2003]\u9003\u5b66\u7684\u5c0f\u5b69\u3011"
    },
    {
        "content": "\u672c\u6765\u60f3\u7684\u4e00\u4e2a$O(n^2)$\u7684\u66b4\u529b\n\n\u679a\u4e3e$C$,\u628a\u5b83\u8bb0\u4e3a\u6839\uff0c\u5728$dfs$\u679a\u4e3e$lca(A,B)$\n\n\u6c42\u51fa$fir_u,sec_u$\u8868\u793a\u4ee5$u$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u6700\u957f\u94fe\uff0c\u6b21\u957f\u94fe\n\n\u518d\u8bb0$d_u$\u4e3a\u6df1\u5ea6\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a$(C,lca(A,B))$\u7684\u7b54\u6848\u662f$fir_u+2sec_u+d_u$\n\n\n\u5176\u5b9e\u53ef\u4ee5\u53ea\u679a\u4e3e$lca(A,B)$\u8bb0\u4e3a$D$\u597d\u4e86\uff0c\u60f3\u8981\u77e5\u9053\u5728$fir_D,sec_D$\u5df2\u7ecf\u6709\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u4f18\u7684$C$\u5728\u54ea\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6c42\u51fa$fir_u,sec_u,thi_u$\uff0c\u524d\u4e09\u957f\u7684\u94fe\uff0c\u4ee5\u53ca$idfir_u$\u6700\u957f\u94fe\u5bf9\u5e94\u7684\u513f\u5b50\u7f16\u53f7\n\n\u7136\u540e\u518d$dfs$\uff0c\u5982\u679c\u8d70\u5230\u6700\u957f\u94fe\u91cc\u9762\uff0c\u5373$v=idfir_u$\uff0c\u5219\u987a\u4fbf\u4f20\u4e0b\u53bb$sec_u+l$\n\n\u5426\u5219\u4f20\u4e0b\u53bb$fir_u+l$\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9$u$\uff0c\u6211\u4eec\u77e5\u9053\u4e86$fir_u,sec_u,thi_u$\uff0c\u8fd8\u77e5\u9053\u4e86\u4ece\u4e0a\u9762\u4f20\u4e0b\u6765\u7684$d$\uff0c\u8fd9\u4e2a$d$\u4e0d\u53ea\u662f\u66b4\u529b\u91cc\u9762\u7684\u6df1\u5ea6\uff0c\u662f\u6839\u7684\u6700\u4f18\u60c5\u51b5\n\n\u7136\u540e$max(thi_u,d)$\u5c31\u662f\u6839\u5230\u70b9$u$\u7684\u6700\u4f18\u8ddd\u79bb\n\n\u7136\u800c\u6700\u7ec8\u7684\u7b54\u6848\u662f$sec_u$\u8981\u00d7\u4e2a2\uff0c\u8fd9\u4e2a$sec_u$\u662f\u4e2d\u95f4\u5927\u7684\n\n\u6240\u4ee5\u627e\u51fa\u4e2d\u95f4\u5927\u7684\u662f\u00d72\u7684\u90a3\u4e2a\n\nCode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 200010\n#define LL long long\nusing namespace std;\nstruct Edge{\n\tint to, next;\n\tLL len;\n}edge[maxn << 1];\nint num, head[maxn], n, m;\nLL fir[maxn], sec[maxn], thi[maxn], ans, deg[maxn], rt, idfir[maxn];\n\ninline int read(){\n\tint s = 0, w = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') w = -1;\n\tfor (; isdigit(c); c = getchar()) s = (s << 1) + (s << 3) + (c ^ 48);\n\treturn s * w;\n}\n\nvoid addedge(int x, int y, int z){ edge[++num] = (Edge){y, head[x], z}, head[x] = num; }\n\nvoid dfs(int u, int pre){\n\tfir[u] = sec[u] = thi[u] = 0;\n\tidfir[u] = 0;\n\tfor (int i = head[u]; i; i = edge[i].next){\n\t\tint v = edge[i].to;\n\t\tLL l = edge[i].len;\n\t\tif (v != pre){\n\t\t\tdfs(v, u);\n\t\t\tif (fir[v] + l > fir[u]){\n\t\t\t\tthi[u] = sec[u], sec[u] = fir[u], fir[u] = fir[v] + l, idfir[u] = v;\n//\t\t\t\tif (sec[v] + l > sec[u]) sec[u] = sec[v] + l;\n\t\t\t} else if (fir[v] + l > sec[u]) thi[u] = sec[u], sec[u] = fir[v] + l;\n\t\t\telse if (fir[v] + l > thi[u]) thi[u] = fir[v] + l;\n\t\t}\n\t}\n//\tans = max(ans, fir[u] + sec[u] + sec[u] + max(d, thi[u]));\n}\n\nvoid dfs1(int u, int pre, LL d){\n\tfor (int i = head[u]; i; i = edge[i].next){\n\t\tint v = edge[i].to;\n\t\tLL l = edge[i].len;\n\t\tif (v != pre){\n\t\t\tif (v == idfir[u]) dfs1(v, u, max(sec[u], d) + l);\n\t\t\telse dfs1(v, u, max(fir[u], d) + l);\n\t\t}\n\t}\n\tLL x = fir[u], y = sec[u], z = max(d, thi[u]);\n\tif (z > x) swap(z, x);\n\tif (y > x) swap(y, x);\n\tif (z > y) swap(z, y);\n\tans = max(ans, x + y + y + z);\n//  ans = max(ans, fir[u] + sec[u] + sec[u] + max(d, thi[u]));\n//\tprintf(\"%d %d %d %d %d\\n\", u, fir[u], sec[u], thi[u], d);\n}\n\nint main(){\n\tfreopen(\"pc.in\", \"r\", stdin);\n\tfreopen(\"pc.out\", \"w\", stdout);\n\tn = read(), m = read();\n\tfor (int i = 1; i <= m; ++i){\n\t\tint x = read(), y = read(), z = read();\n\t\taddedge(x, y, z), addedge(y, x, z);\n\t\t++deg[x], ++deg[y];\n\t}\n\tfor (int i = 1; i <= n; ++i) if (deg[i] > 1) rt = i;\n\tdfs(rt, 0);\n/*\tfor (int i = 1; i <= n; ++i){// printf(\"rt : %d\\n\", i);\n\t\tdfs(i, 0, 0);\n\t}*/\n\tdfs1(rt, 0, 0);\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1599392098,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4408 \u3010[NOI2003]\u9003\u5b66\u7684\u5c0f\u5b69\u3011"
    },
    {
        "content": "\u9898\u76ee\u4e2d\u8bf4\u5f97\u4e0d\u6e05\u695a\u7684\u5730\u65b9\uff1a\n1. $m=n-1$\uff0c\u5c31\u662f\u4e00\u68f5\u6811\uff0c\u4ece\u201c\u4efb\u4e24\u4e2a\u5c45\u4f4f\u70b9\u95f4\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u901a\u8def\u201d\u53ef\u4ee5\u770b\u51fa\n2. \u4e24\u70b9\u95f4\u7684\u8ddd\u79bb\u5c31\u662f\u6240\u7528\u65f6\u957f\n\n\u6839\u636e\u76f4\u5f84\u7684\u6700\u957f\u6027\uff0c\u4e24\u4e2a\u670b\u53cb\u7684\u5bb6\u5fc5\u7136\u5728\u76f4\u5f84\u4e24\u7aef\u3002\u53ef\u4ee5\u770b\u505a Chris \u5bb6\u4ece\u76f4\u5f84\u5916\u4e00\u70b9\u51fa\u53d1\uff0c\u8d70\u8d70\u8d70\uff0c\u521a\u8d70\u4e0a\u76f4\u5f84\u7684\u8fd9\u4e2a\u70b9\u8fd9\u662f\u5f88\u91cd\u8981\u7684\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u95ee\u9898\u8f6c\u5316\u6210\n> \u6c42\u65e0\u6839\u6811\u76f4\u5f84\u4e0a\u7684\u4e00\u70b9 $t$\uff0c\u4f7f\u5f97 $2\\min\\{dist(u,t),dist(t,v)\\}+\\max\\{dist(u,t),dist(t,v)\\}+d(t)$ \u6700\u5927\u3002\u5176\u4e2d\uff0c$u,v$ \u4e3a\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\uff0c$dist(p,q)$ \u4ee3\u8868 $p$ \u5230 $q$ \u7684\u8def\u5f84\u957f\uff0c$d(x)$ \u4ee3\u8868\u4ece\u76f4\u5f84\u4e0a\u4e00\u70b9 $x$ \u51fa\u53d1\uff0c\u4e0d\u7ecf\u8fc7\u76f4\u5f84\u4e0a\u7684\u5176\u4ed6\u70b9\uff0c\u6240\u80fd\u8d70\u7684\u6700\u8fdc\u8ddd\u79bb\u3002\n\n\u9898\u76ee\u5c31\u7b80\u5355\u4e86\uff0c\n1. \u9884\u5904\u7406\u51fa $d(u,\\cdots,v)$\uff0c\u590d\u6742\u5ea6 $O(n)$\n2. \u6c42\u76f4\u5f84\u957f\u53ca\u76f4\u5f84\u7684\u8282\u70b9\u5e8f\u5217 $route$\n3. $route$ \u4e0a\u679a\u4e3e $t$\uff0c$dist(u,t),dist(t,v)$ \u53ef $O(1)$ \u5f97\u5230\uff0c\u66f4\u65b0\u7b54\u6848\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=2e5+5;\nvector<int> route;\nvector<pair<int,int> >G[N];\nmap<int,int>e[N];\nvoid findfur(int x,int fa,int sum,int &len,int &v){\n    if(sum>len) len=sum,v=x;\n    for(int i=0;i<G[x].size();i++){\n        if(G[x][i].first^fa) findfur(G[x][i].first,x,sum+G[x][i].second,len,v);\n    }\n}\nbool flag=0;\nvoid dfs(int x,int fa,int target){\n    route.push_back(x);\n    if(target==x){flag=1;return;}\n    for(int i=0;i<G[x].size();i++){\n        if(G[x][i].first^fa) dfs(G[x][i].first,x,target);\n        if(flag) return;\n    }\n    route.pop_back();\n}\nint getdia(){\n    int u1,l1=0;findfur(1,0,0,l1,u1);\n    int u2,l2=0;findfur(u1,0,0,l2,u2);\n    dfs(u1,0,u2);\n    return l2;\n}\nbool vis[N];\nvoid ff(int x,int sum,int &len){\n    vis[x]=1;\n    if(sum>len) len=sum;\n    for(int i=0;i<G[x].size();i++){\n        int y=G[x][i].first,z=G[x][i].second;\n        if(!vis[y]) ff(y,sum+z,len);\n    }\n}\nsigned main()\n{\n    int n,m;\n    cin>>n>>m;\n    while(m--){\n        int u,v,w;\n        cin>>u>>v>>w;\n        G[u].push_back(make_pair(v,w));\n        G[v].push_back(make_pair(u,w));\n        e[u][v]=e[v][u]=w;\n    }\n    int d=getdia(),ans=0;\n    for(int i=0;i<route.size();i++)vis[route[i]]=1;\n    for(int i=0,sum=0,tmp,tmp2;i+1<route.size();i++){\n        tmp=min(sum,d-sum);\n        tmp2=0;ff(route[i],0,tmp2);\n        ans=max(ans,tmp*2+d-tmp+tmp2);\n        sum+=e[route[i]][route[i+1]];\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1614405815,
        "uid": 300078,
        "name": "pengyule",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4408 \u9003\u5b66\u7684\u5c0f\u5b69"
    },
    {
        "content": "#### \u601d\u8def\n\n\u6839\u636e\u9898\u610f\u53ef\u4ee5\u53d1\u73b0\u6784\u6210\u7684\u56fe\u662f\u4e00\u68f5\u6811\u3002\n\n\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\u884c\u8d70\u8def\u5f84\u662f\u4ece C \u5230\u8ddd\u79bb\u8f83\u8fd1\u7684 A \u6216 B \u70b9\uff0c\u518d\u8d70\u5b8c A-B \u8def\u5f84\uff0c\u6240\u4ee5\u5bf9\u4e8e A-B \u8def\u5f84\uff0c\u5176\u957f\u5ea6\u4e0e C \u7684\u4f4d\u7f6e\u662f\u65e0\u5173\u7684\uff0c\u6240\u4ee5\u4ed6\u6709\u4e00\u4e2a\u56fa\u5b9a\u7684\u4e0a\u9650\uff0c\u5728\u6839\u636e\u6811\u7684\u76f4\u5f84\u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u5c06\u5176 A-B \u786e\u5b9a\u4e3a\u6811\u7684\u76f4\u5f84\uff0c\u4e4b\u540e\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u5904\u7406\u51fa\u76f4\u5f84\u4e00\u7aef\u70b9 A \u4e0e\u6240\u6709\u70b9\u7684\u8ddd\u79bb\uff0c\u53e6\u4e00\u7aef\u70b9 B \u4e0e\u6240\u6709\u70b9\u7684\u8ddd\u79bb\uff0c\u679a\u4e3e\u4e00\u904d n \u66f4\u65b0\u7b54\u6848\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$ \u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define int long long \n\nconst int N=400070;\nstruct Tree{ int to,nxt,w; }e[N];\nint n,m,cnt,maxdis,maxu,A,B;\nint head[N],d[2][N];\nvoid dfs(int u,int fa,int dis){\n\tif(dis>maxdis) maxdis=dis,maxu=u;\n\tfor(int i=head[u],v;i;i=e[i].nxt){\n\t\tv=e[i].to;if(v==fa) continue;\n\t\tdfs(v,u,dis+e[i].w);\n\t}\n}\nvoid DFS(int u,int fa,int k){\n\tfor(int i=head[u],v;i;i=e[i].nxt){\n\t\tv=e[i].to;if(v==fa) continue;\n\t\td[k][v]=d[k][u]+e[i].w;\n\t\tDFS(v,u,k);\n\t}\n}\nvoid add(int from,int to,int val){e[++cnt].to=to,e[cnt].w=val,e[cnt].nxt=head[from],head[from]=cnt;}\nsigned main(){\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1,u,v,w;i<=m;++i){\n\t\tscanf(\"%lld%lld%lld\",&u,&v,&w);\n\t\tadd(u,v,w),add(v,u,w);\n\t}\n\tdfs(1,0,0),maxdis=0,A=maxu,dfs(A,0,0),B=maxu,DFS(A,0,0),DFS(B,0,1);\n\tint ans=0;\n\tfor(int i=1;i<=n;++i)\n\t\tans=std::max(ans,maxdis+std::min(d[0][i],d[1][i]));\n\tprintf(\"%lld\\n\",ans);\n}\n```",
        "postTime": 1605085251,
        "uid": 224831,
        "name": "\u725b\u86d9\u4e36\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4408 \u3010[NOI2003]\u9003\u5b66\u7684\u5c0f\u5b69\u3011"
    },
    {
        "content": "\u8d2a\u5fc3+\u56fe\u8bba\u9898\u76ee\u3002\n\n\u2460\u6c42\u6811\u7684\u76f4\u5f84\uff0c\u4f7f\u75282\u6b21\u641c\u7d22\u6216dp\u5373\u53ef\uff1b\n\n**\u2461\u6c42\u79bb\u6811\u7684\u76f4\u5f84\u7684\u4e24\u7aef\u70b9\u8f83\u8fd1\u8005\u6700\u8fdc\u7684\u70b9\uff0c\u5e76\u6c42\u51fa\u8ddd\u79bb\u3002**\n\n\u8bc1\u660e\u53ef\u4ee5\u7528\u53cd\u8bc1\u6cd5\uff0c\u52062\u79cd\u60c5\u51b5\uff1a\n\n1. B \u548c C\u4e0d\u662f\u6811\u7684\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\n\n\u53ea\u9700\u8981\u628aB\u548cC\u632a\u5230\u76f4\u5f84\u4e24\u7aef\u70b9\u4e0a\uff0c\u603b\u8ddd\u79bb\u4e00\u5b9a\u53d8\u957f\u3002\n\n2. A\u4e0d\u53d6\u6781\u503c\n\n\u540c\u6837\uff0c\u7528\u201c\u540c\u4e00\u6cd5\u201d\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nstruct nod{\n\tint to;\n\tlong long dis;\n};\nvector<nod> v[200007];\nint n, m;\nlong long ans = 0;\nlong long ans1 = 0;\nint best, best2;\nvoid dfs(int x, int fa, long long cur){\n\tif(v[x].size() == 1){\n\t\tif(cur > ans1){\n\t\t\tans1 = cur;\n\t\t\tbest = x;\n\t\t}\n\t}\n\tfor(int i = 0; i < v[x].size(); i++){\n\t\tif(v[x][i].to == fa) continue;\n\t\tdfs(v[x][i].to, x, cur + v[x][i].dis);\n\t}\n}\nvoid dfs2(int x, int fa, long long cur){\n\tif(v[x].size() == 1){\n\t\tif(cur > ans1){\n\t\t\tans1 = cur;\n\t\t\tbest2 = x;\n\t\t}\n\t}\n\tfor(int i = 0; i < v[x].size(); i++){\n\t\tif(v[x][i].to == fa) continue;\n\t\tdfs2(v[x][i].to, x, cur + v[x][i].dis);\n\t}\n}\nlong long f1[200007], f2[200007], f[200007];\nvoid dfs3(int x, int fa, long long cur){\n\tf1[x] = cur;\n\tfor(int i = 0; i < v[x].size(); i++){\n\t\tif(v[x][i].to == fa) continue;\n\t\tdfs3(v[x][i].to, x, cur + v[x][i].dis);\n\t}\n}\nvoid dfs4(int x, int fa, long long cur){\n\tf2[x] = cur;\n\tfor(int i = 0; i < v[x].size(); i++){\n\t\tif(v[x][i].to == fa) continue;\n\t\tdfs4(v[x][i].to, x, cur + v[x][i].dis);\n\t}\n}\nint main(){\n\tcin >> n >> m;\n\tfor(int i = 0; i < m; i++){\n\t\tint x, y, dis;\n\t\tcin >> x >> y >> dis;\n\t\tv[x].push_back({y, dis});\n\t\tv[y].push_back({x, dis});\n\t}\n\tdfs(1, -1, 0);\n\tans1 = 0;\n\tdfs2(best, -1, 0);//\u6c42\u76f4\u5f84\n\tdfs3(best, -1, 0);//\u6c42\u7aef\u70b91\u5230\u6240\u6709\u70b9\u8ddd\u79bb\n\tdfs4(best2, -1, 0);//\u6c42\u7aef\u70b92\u5230\u6240\u6709\u70b9\u8ddd\u79bb\n\tfor(int i = 1; i <= n; i++){\n\t\tf[i] = min(f1[i], f2[i]);\n\t\tans = max(ans, f[i]);\n\t}\n\tcout << ans + ans1 << endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1595234419,
        "uid": 297894,
        "name": "NaOH_Frog",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4408 \u3010[NOI2003]\u9003\u5b66\u7684\u5c0f\u5b69\u3011"
    },
    {
        "content": "## \u5206\u6790\n\u6211\u4eec\u8981\u4ece\u70b9C\u51fa\u53d1\u5148\u8d70\u5230\u70b9A\u518d\u8d70\u5230\u70b9B(CA<CB) \u6216\u8005\u662f \u4ece\u70b9C\u51fa\u53d1\u5148\u8d70\u5230\u70b9B\u518d\u8d70\u5230\u70b9A(CB<CA)\n\n\u5176\u5b9e\u8fd9\u4e24\u79cd\u60c5\u51b5\u662f\u4e00\u6837\u7684\uff0c\u56e0\u4e3aA\u3001B\u7684\u4f4d\u7f6e\u6211\u4eec\u4e0d\u786e\u5b9a\uff0c\u6240\u4ee5\u4e24\u70b9\u53ef\u4ee5\u4e92\u6362\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u9898\u76ee\u7b80\u5316\uff1a\n\n\u4e00\u53e5\u8bdd\u9898\u610f\uff1a\u5728\u4e00\u68f5\u6811\u4e0a\u627e\u4e09\u4e2a\u70b9A\u3001B\u3001C\u4f7f\u5f97AB+AC\u7684\u503c\u6700\u5927\uff08\u6ee1\u8db3AC<=BC\uff09\n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u8bf4\u662f\u4e00\u4e2a\u6a21\u677f\u9898\uff0c\u867d\u7136\u9898\u76ee\u4e2d\u53c8\u662f\u9003\u5b66\u53c8\u662f\u627e\u4eba\uff0c\u4f46\u5b9e\u9645\u4e0a\u662f\u8ba9\u4f60\u6c42\u6811\u7684\u76f4\u5f84\n\nAB\u7684\u6700\u5927\u503c\u5f88\u597d\u60f3\uff0c\u663e\u7136\u5c31\u662f\u6811\u7684\u76f4\u5f84\uff0c\u5728\u4e00\u68f5\u6811\u4e2d\u6ca1\u6709\u6bd4\u76f4\u5f84\u66f4\u957f\u7684\u8def\u7a0b\u4e86\n\n\u90a3\u4e48AC\u7684\u6700\u5927\u503c\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u5728dfs\u6c42\u6811\u7684\u76f4\u5f84\u7684\u65f6\u5019\u987a\u4fbf\u628a\u6bcf\u4e00\u4e2a\u70b9\u5230A\u3001B\u7684\u4ef7\u503c\u90fd\u6c42\u51fa\u6765\uff0c\u5728\u8fd9\u4e24\u4e2a\u4ef7\u503c\u4e2d\u53d6\u8f83\u5c0f\u503c\uff08\u56e0\u4e3a\u8981\u5148\u5230\u6bd4\u8f83\u8fd1\u7684\u70b9\uff09\n\n\u6700\u540e\u518d\u679a\u4e3e\u4e00\u904d\u6c42\u6700\u4f18\u51b3\u7b56\uff08\u6700\u5927\u503c\uff09\uff0c\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u8d2a\u5fc3\u7684\u601d\u60f3\n\u6700\u540e\u8981\u6ce8\u610f\u51e0\u4e2a\u7ec6\u8282\uff1a\n\n1\u3001\u5f00long long\uff0c\u5e76\u4e14\u8d4b\u503c\u4e3a\u65e0\u7a77\u5927\u65f6\u8981\u51998\u4e2a3f\uff1a0x3f3f3f3f3f3f3f3f\n\n2\u3001\u53cc\u5411\u8fb9\uff0c\u5f00\u6570\u7ec4\u65f6\u4e00\u5b9a\u8981\u4e582\n\n3\u3001\u6570\u7ec4\u4e0d\u80fd\u5f00\u5f97\u592a\u5927\n## \u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nconst int maxn=500010;//\u6570\u7ec4\u4e0d\u8981\u5f00\u5c0f\u4e86\ntypedef long long ll;//\u8bb0\u5f97\u5f00long long\nstruct asd{\n    ll from,to,next,val;\n}b[maxn];\nll n,m;\nll head[maxn],tot=1;\nvoid ad(ll aa,ll bb,ll cc){\n    b[tot].from=aa;\n    b[tot].to=bb;\n    b[tot].next=head[aa];\n    b[tot].val=cc;\n    head[aa]=tot++;\n}//\u52a0\u8fb9\u51fd\u6570\nll dis[maxn],disA[maxn],disB[maxn],A,B;\n//disA\u662f\u6bcf\u4e2a\u70b9\u5230\u7aef\u70b9A\u7684\u8ddd\u79bb,disB\u662f\uff0c\u6bcf\u4e2a\u70b9\u5230\u7aef\u70b9B\u7684\u8ddd\u79bb\n//A\u3001B\u4e3a\u7aef\u70b9A\u3001B\u7684\u7f16\u53f7\nll zhijing,jl=-0x3f3f3f3f3f3f3f3f,id=0;//\u5b9a\u4e49\u76f4\u5f84\nvoid dfs(ll now,ll fa){\n    for(ll i=head[now];i!=-1;i=b[i].next){\n        ll u=b[i].to;\n        ll da=b[i].val;\n        if(u==fa) continue;\n        dis[u]=dis[now]+da;\n        if(dis[u]>jl){\n            jl=dis[u];\n            id=u;\n        }\n        dfs(u,now);\n    }\n}//dfs\u6c42\u76f4\u5f84\nint main() {\n    scanf(\"%lld%lld\",&n,&m);\n    memset(head,-1,sizeof(head));\n    for(ll i=1;i<=m;i++){\n        ll aa,bb,cc;\n        scanf(\"%lld%lld%lld\",&aa,&bb,&cc);\n        ad(aa,bb,cc);\n        ad(bb,aa,cc);\n    }\n    dfs(1,0);//\u7b2c\u4e00\u904ddfs\u6c42A\u70b9\u6807\u53f7\n    A=id;\n    memset(dis,0,sizeof(dis));\n    id=0,jl=-0x3f3f3f3f3f3f3f3f;\n    dfs(A,0);//\u7b2c\u4e8c\u904ddfs\u6c42B\u70b9\u6807\u53f7\u4ee5\u53ca\u6bcf\u4e00\u4e2a\u70b9\u5230A\u70b9\u7684\u8ddd\u79bb\n    B=id,zhijing=jl;\n    id=0,jl=-0x3f3f3f3f3f3f3f3f;\n    for(ll i=1;i<=n;i++){\n        disA[i]=dis[i];\n    }\n    memset(dis,0,sizeof(dis));\n    dfs(B,0);//\u7b2c\u4e09\u904ddfs\u6c42\u6bcf\u4e00\u4e2a\u70b9\u5230B\u70b9\u7684\u8ddd\u79bb\uff0c\u6bcf\u6b21dfs\u4e4b\u524d\u4e0d\u8981\u5fd8\u4e86\u521d\u59cb\u5316\n    for(ll i=1;i<=n;i++){\n        disB[i]=dis[i];\n    }\n    ll ans=-0x3f3f3f3f3f3f3f3f;\n    for(ll i=1;i<=n;i++){\n        ans=max(ans,min(disA[i],disB[i]));\n    }//\u6c42\u6700\u6700\u4f18\u51b3\u7b56\n    printf(\"%lld\\n\",ans+zhijing);//\u8f93\u51fa\n    return 0;\n}\n```\n",
        "postTime": 1587526494,
        "uid": 316322,
        "name": "hzoi_liuchang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4408 \u3010[NOI2003]\u9003\u5b66\u7684\u5c0f\u5b69\u3011"
    },
    {
        "content": "# \u6811\u7684\u91cd\u5fc3\n\n\n\u5173\u4e8e\u6811\u7684\u91cd\u5fc3\uff0c\u6211\u8bf4\u8bf4\u6211\u7684\u7406\u89e3\uff1a\n\n## \u6982\u5ff5\n![upload successful](http://47.92.113.238:82/images/pasted-3.png)\n\n\n`\u6811\u7684\u91cd\u5fc3`\u4e5f\u53eb\u6811\u7684`\u8d28\u5fc3`\u3002\n\n\u627e\u5230\u4e00\u4e2a\u70b9,\u5176\u6240\u6709\u7684\u5b50\u6811\u4e2d`\u6700\u5927`\u7684\u5b50\u6811\u8282\u70b9\u6570`\u6700\u5c11`,\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5c31\u662f\u8fd9\u68f5\u6811\u7684\u91cd\u5fc3,\u5220\u53bb\u91cd\u5fc3\u540e\uff0c\u751f\u6210\u7684\u591a\u68f5\u6811\u5c3d\u53ef\u80fd\u5e73\u8861\u3002\n\n\u5176\u5b9e\u6211\u7684\u7406\u89e3\u5c31\u662f\uff08`\u4eba\u8bdd`\uff09\uff1a\u627e\u4e00\u4e2a\u70b9\uff0c\u628a\u8fd9\u4e2a\u70b9\u5220\u6389\u540e\uff0c\u8ba9\u5f97\u5230\u7684\u4e00\u5806\u5c0f\u68ee\u6797\u4e2d\u6700\u5927\u7684\u6570\u6700\u5c0f\u3002\n\n## \u6027\u8d28\n - \u5220\u6389\u8fd9\u4e2a\u70b9\u540e\uff0c\u5f97\u5230\u68ee\u6797\uff0c\u68ee\u6797\u4e2d\u7684\u6bcf\u4e00\u68f5\u6811\u7684\u5927\u5c0f$\\max\\left { A \\right }\\leq $$\\frac{n}{2}$($A\\epsilon$\u5f97\u5230\u7684\u68ee\u6797 $n$\u4e3a\u7ed3\u70b9\u603b\u6570)\uff1b\u9006\u5b9a\u7406\u5b58\u5728\u3002\n - \u4e24\u68f5\u6811\u63a5\u8d77\u6765\uff0c\u5f62\u6210\u7684\u6811\u7684\u91cd\u5fc3\u4e00\u5b9a\u5728\u539f\u6765\u4e24\u68f5\u6570\u7684\u91cd\u5fc3\u5f62\u6210\u7684\u8def\u5f84\u4e0a\u3002\n - \u4e00\u68f5\u6811\u6700\u591a\u6709\u4e24\u4e2a\u91cd\u5fc3\uff0c\u4e14\u76f8\u90bb\u3002\n - \u4e00\u68f5\u6811\u6dfb\u52a0\u6216\u8005\u5220\u9664\u4e00\u4e2a\u8282\u70b9\uff0c\u6811\u7684\u91cd\u5fc3\u6700\u591a\u53ea\u79fb\u52a8\u4e00\u6761\u8fb9\u7684\u4f4d\u7f6e\u3002\n - \u6811\u4e2d\u6240\u6709\u70b9\u5230\u67d0\u4e2a\u70b9\u7684\u8ddd\u79bb\u548c\u4e2d\uff0c\u5230\u91cd\u5fc3\u7684\u8ddd\u79bb\u548c\u662f\u6700\u5c0f\u7684\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u8ddd\u79bb\u548c\uff0c\u4ed6\u4eec\u7684\u8ddd\u79bb\u548c\u4e00\u6837\u3002\n \n## \u6c42\u6cd5\n~~\u8d3c\u7b80\u5355~~\n\u5230\u4e00\u4e2a\u8282\u70b9\u540e\uff0c\u627e\u4ed6\u7684\u513f\u5b50\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u548c\u53bb\u6389\u4ed6\u672c\u8eab\u8fd9\u68f5\u5b50\u6811\u540e\uff0c\u5269\u4e0b\u7684\u5927\u5c0f\u3002\u5982\u679c\u8fd9\u4e9b\u503c\u4e2d\u7684\u6700\u5927\u503c\u6700\u5c0f\uff0c\u8bb0\u5f55\u8282\u70b9\u66f4\u65b0\u7b54\u6848\u3002\n## \u6709\u4e00\u9053POJ\u7684\u6a21\u677f\u9898\n\n\u987a\u4fbf\u5efa\u8baeluogu\u7684\u7ba1\u7406\u8001\u5e08\u4eec\u52a0\u8fdb\u6765QAQ\n\n[\u539f\u9898](http://poj.org/problem?id=1655)\n```cpp\n/*!\n * FileName: poj-1655.cpp\n * This Problem is on poj. The ID of the problem is 1655. \n * Copyright(c) 2019 Shu_Yu_Mo\n * MIT Licensed\n * Luogu: https://www.luogu.org/space/show?uid=44615\n * Github: https://github.com/oldsuold/\n * Gitee: https://gitee.com/Shu_Yu_Mo/\n * These words were created by an amazing tool written by Shu_Yu_Mo.\n */\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstring>\n#include<iostream>\n#include<cmath>\n#include<vector>\n#include<queue>\n#include<algorithm>\n#define inf 0x7fffffff\nusing namespace std;\nconst int _N = 201000;\ninline int read()\n{\n    char c = getchar(); int sign = 1; int x = 0;\n    while(c > '9' || c < '0') { if(c=='-')sign = -1; c = getchar(); } \n    while(c <= '9' && c >= '0') { x *= 10; x += c - '0'; c = getchar(); }\n    return x * sign;\n}\nstruct edges{\n\tint node;\n\tint nxt;\n}edge[_N];\nint head[_N];\nint tot = 0;\nvoid add(int u, int v)\n{\n\tedge[++tot].nxt = head[u];\n\tedge[tot].node = v;\n\thead[u] = tot;\n}\nint n;\nint AnsId;\nint minSize = inf;\nint Size[_N];\nvoid dfs(int now, int parent)\n{\n\tint res = 0;\n\tSize[now] = 1;\n\tfor(register int i = head[now];i;i = edge[i].nxt)\n\t{\n\t\tint sonNode = edge[i].node;\n\t\tif(sonNode == parent) continue;\n\t\tdfs(sonNode, now);\n\t\tSize[now] += Size[sonNode];\n\t\tres = max(res, Size[sonNode]);\n\t}\n\tres = max(res, n - Size[now]);\n\tif(res == minSize)\n\t\tAnsId = min(AnsId, now);\n\telse if(res < minSize)\n\t\tAnsId = now, minSize = res;\n\treturn;\n}\nvoid doit()\n{\n\tmemset(Size, 0, sizeof(Size));\n\tminSize = inf;\n\tn = read();\n\tint k;\n\tmemset(head, 0, sizeof(head));\n\ttot = 0;\n\tfor(register int i = 1;i <= n - 1;i ++)\n\t{\n\t\tint tmpx = read(), tmpy = read();\n\t\tadd(tmpx, tmpy);\n\t\tadd(tmpy, tmpx);\n\t\tk = tmpx;\n\t}\n\tdfs(k, 0);\n\tprintf(\"%d %d\\n\", AnsId, minSize) ;\n}\nint main()\n{\n\tint T = read();\n\twhile(T--)\n\t{\n\t\tdoit();\n\t}\n    return 0;\n}\n\n```\n\n## \u90a3\u5173\u4e8e\u672c\u9898\u7684\u601d\u8def\u662f\n\n\u4e3a\u4e86\u8ba9\u5c0f\u5b69\u7684\u5988\u5988\u8d70\u7684\u6700\u8fdc\uff1a\n - \u627e\u4e00\u4e2a\u6700\u957f\u7684\u76f4\u5f84\uff0c\u76f4\u5f84\u4e24\u7aef\u5c31\u662f\u5c0f\u5b69\u4e24\u670b\u53cb\u7684\u5bb6\n - \u6c42\u51fa\u5728\u8fd9\u6761\u76f4\u5f84\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9\u5230\u53f6\u8282\u70b9\u7684\u6700\u957f\u8ddd\u79bb\uff0c\u5bf9\u5e94\u53f6\u8282\u70b9\u5c31\u662f\u5c0f\u5b69\u7684\u5bb6\n \n~~\u8fd9\u6837\u7684\u8bdd\uff0c\u5c0f\u5b69\u7684\u5988\u5988\u8d70\u7684\u8def\u5c31\u662f\u6700\u6700\u6700\u6700\u8fdc\u7684~~\n## Code\n```\n/*!\n * FileName: luogu-4408.cpp\n * This Problem is on luogu. The ID of the problem is 4408. \n * Copyright(c) 2019 Shu_Yu_Mo\n * MIT Licensed\n * Luogu: https://www.luogu.org/space/show?uid=44615\n * Github: https://github.com/oldsuold/\n * Gitee: https://gitee.com/Shu_Yu_Mo/\n * These words were created by an amazing tool written by Shu_Yu_Mo.\n */\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstring>\n#include<iostream>\n#include<cmath>\n#include<vector>\n#include<queue>\n#include<algorithm>\n#define inf 0x7fffffff\n#define int long long\nusing namespace std;\nconst int _N = 200100;\nconst int _M = _N;\ninline int read()\n{\n    char c = getchar(); int sign = 1; int x = 0;\n    while(c > '9' || c < '0') { if(c=='-')sign = -1; c = getchar(); } \n    while(c <= '9' && c >= '0') { x *= 10; x += c - '0'; c = getchar(); }\n    return x * sign;\n}\nvoid swap(int & x, int & y)\n{\n\tint t = x;\n\tx = y;\n\ty = t;\n}\nint n, m; \nstruct edges{\n    int node;\n    int w;\n    int nxt;\n}edge[_M << 1];\nint tot = 0;\nint head[_N];\nvoid add(int u, int v, int w)\n{\n    edge[++tot].nxt = head[u];\n    edge[tot].node = v;\n    edge[tot].w = w;\n    head[u] = tot;\n}\nbool vis[_N];\nint dist[_N];\nvoid dfs(int nowNode)\n{\n\tvis[nowNode] = true;\n\tfor(register int i = head[nowNode];i;i = edge[i].nxt)\n\t{\n\t\tif(vis[edge[i].node]) continue;\n\t\tdist[edge[i].node] = dist[nowNode] +  edge[i].w;\n\t\tdfs(edge[i].node);\n\t}\n}\nfloat r;\nint dist_[_N];\nint tot_ = 0;\nint MaxId2, MaxId;\nint MaxDeep = -inf;\nbool flag = false;\nint path[_N];\nbool inPath[_N];\nint path_w[_N];\nvoid dfsForPath(int k,int deepth, int w)\n{\n\tvis[k] = true;\n\tpath[deepth] = k;\n\tpath_w[deepth] = w;\n\tif(k == MaxId2) { MaxDeep = deepth;flag = true;return; }\n\tfor(register int i = head[k];i;i = edge[i].nxt)\n\t{\n\t\tint SonNode = edge[i].node;\n\t\tif(vis[SonNode]) continue;\n\t\tdfsForPath(SonNode, deepth + 1, edge[i].w); \n\t\tif(flag)return;\n\t}\n}\nint dfsLast(int k)\n{\n\tint longest = 0;\n\tvis[k] = true;\n\tfor(register int i = head[k];i;i = edge[i].nxt)\n\t{\n\t\tint SonNode = edge[i].node;\n\t\tif(inPath[SonNode] || vis[SonNode]) continue;\n\t\tlongest = max(longest, dfsLast(SonNode) + edge[i].w);\n\t}\n\treturn longest;\n}\nsigned main()\n{\t\n\tmemset(vis, false, sizeof(vis));\n\tn = read(), m = read();\n\tfor(register int i = 1;i <= m;i++)\n\t{\n\t\tint tmpx = read(), tmpy = read(), tmpz = read();\n\t\tadd(tmpx, tmpy, tmpz);\n\t\tadd(tmpy, tmpx, tmpz);\n\t}\n\tint MaxDis = 0;\n\tmemset(dist, 0, sizeof(dist));\n\tdfs(1);\n\tfor(register int i = 1;i <= n;i++)\n\t{\n\t\tif(dist[i] > MaxDis)\n\t\t{\n\t\t\tMaxDis = dist[i];\n\t\t\tMaxId = i;\n\t\t}\n\t}\n\tmemset(dist, 0, sizeof(dist));\n\tmemset(vis, false, sizeof(vis));\n\tdfs(MaxId);\n\tint MaxDis2 = 0;\n\tfor(register int i = 1;i <= n;i++)\n\t{\n\t\tif(dist[i] > MaxDis2)\n\t\t{\n\t\t\tMaxDis2 = dist[i];\n\t\t\tMaxId2 = i;\n\t\t}\n\t}\n\tmemset(vis, false, sizeof(vis));\n\tdfsForPath(MaxId, 1, 0);\n\tmemset(inPath, false, sizeof(inPath));\n\tfor(register int i = 1;i <= MaxDeep;i++)\n\t\tinPath[path[i]] = true;//\u6c42\u51fa\u6570\u7684\u6700\u957f\u76f4\u5f84\uff0c\u5e76\u6807\u8bb0\u6700\u957f\u76f4\u5f84\u4e0a\u7684\u70b9\u3002\n\tint ans = -inf;\n\tmemset(vis, 0, sizeof(vis));\n\tint now = 0;\n\tfor(register int i = 1;i <= MaxDeep;i++)\n\t{\n\t\tnow += path_w[i];\n\t\tint tmp = min(now, MaxDis2 - now);\n\t\tint kk = dfsLast(path[i]);//\u6c42\u6700\u957f\u76f4\u5f84\u4e0a\u7684\u70b9\u5230\u53f6\u8282\u70b9\u7684\u6700\u957f\u8ddd\u79bb\uff08\u4e0d\u8d70\u5728\u6700\u957f\u76f4\u5f84\u4e0a\u7684\u70b9\uff09\n\t\tans = max(ans, kk + tmp + MaxDis2);\n\t}\n\tprintf(\"%lld\", ans);\n\t\n    return 0;\n}\n/*\n4 3\n1 2 1\n2 4 1\n2 3 2\n\n*/\n```",
        "postTime": 1563245711,
        "uid": 44615,
        "name": "ShuYuMo",
        "ccfLevel": 8,
        "title": "\u3010luogu-4408\u3011\u3010NOI2003\u3011\u9003\u5b66\u7684\u5c0f\u5b69"
    },
    {
        "content": "**\u89e3\u6cd5**  \n\u601d\u8def\u975e\u5e38\u7b80\u5355\uff0c\u627e\u9053\u6811\u7684\u76f4\u5f84\uff0c\u7136\u540e\u7b54\u6848\u662f\u76f4\u5f84\u957f\u5ea6\u52a0\u4e0a**\u6700\u5927\u7684**min(dis[pos1], dis[pos2])\uff0cpos1\u548cpos2\u662f\u6307\u5b9a\u7684\u4efb\u610f\u4e00\u6761\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\uff0cdis\u662f\u8ddd\u79bb  \n**\u8bc1\u660e**  \n\u9274\u4e8e\u8fd9\u662f\u4e00\u68f5\u6811(\u539f\u9898\u9762\uff1a\u53ef\u4ee5\u4fdd\u8bc1\uff0c\u4efb\u4e24\u4e2a\u5c45\u4f4f\u70b9\u95f4\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u901a\u8def\u3002)  \n\u56e0\u6b64\uff0c\u6211\u4eec\u6700\u5927\u7684\u65b9\u6848\u5fc5\u7136\u5305\u542b\u4e00\u6761\u76f4\u5f84  \n\u53ef\u4ee5\u7a0d\u52a0\u601d\u8003\uff0c\u5982\u679c\u4e0d\u662f\u76f4\u5f84\u7684\u8bdd\u4e00\u5b9a\u80fd\u627e\u5230\u4e00\u79cd\u53d6\u76f4\u5f84\u7684\u65b9\u6cd5\u6bd4\u5b83\u66f4\u5927...  \n\u90a3\u4e48\u518d\u4efb\u610f\u627e\u53e6\u4e00\u4e2a\u70b9\uff0c\u56e0\u4e3a\u8981\u6ee1\u8db3\"\u5982\u679cA\u8ddd\u79bbC\u6bd4B\u8ddd\u79bbC\u8fd1\u8d70A\uff0c\u5426\u5219\u8d70B\"\uff0c\u6240\u4ee5\u4efb\u610f\u4e00\u4e2a\u70b9\u7684\u8d21\u732e\u4e3amin(dis[pos1], dis[pos2])\u3002  \n\u9898\u76ee\u8981\u6c42\u6700\u5927\u7684\uff0c\u6240\u4ee5\u53d6\u6700\u5927\u7684min(dis[pos1], dis[pos2])  \n**\u4ee3\u7801**  \n\u6811\u7684\u76f4\u5f84\u663e\u7136\u53ea\u9700\u8981\u4e00\u4e2aDFS,\u6c42\u89e3\u4e5f\u53ea\u9700\u8981\u4e00\u4e2aDFS,\u6240\u4ee5\u5171\u8ba1\u4e24\u4e2aDFS\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define ll long long \n\nusing namespace std;\n\nll read(){\n    ll x = 0; int zf = 1; char ch = ' ';\n    while (ch != '-' && (ch < '0' || ch > '9')) ch = getchar();\n    if (ch == '-') zf = -1, ch = getchar();\n    while (ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar(); return x * zf;\n}\n\nstruct Edge{\n\tint to, next;\n\tll dis;\n} edges[400005];\n\nint head[200005], edge_num;\n\nvoid addEdge(int u, int v, ll w){\n\tedges[++edge_num] = {v, head[u], w};\n\thead[u] = edge_num;\n}\n\nll dis[200005];\nll dis2[200005][2];\n\nvoid getDis(int u, int fa, ll vl){\n\tint v; dis[u] = ((u == fa) ? 0 : dis[fa] + vl);\n\tfor (int c_e = head[u]; c_e; c_e = edges[c_e].next){\n\t\tv = edges[c_e].to; if (v == fa) continue;\n\t\tgetDis(v, u, edges[c_e].dis);\n\t}\n}\n\nvoid getDis2(int u, int fa, ll vl, int op){\n\tint v; dis2[u][op] = ((u == fa) ? 0 : dis2[fa][op] + vl);\n\tfor (int c_e = head[u]; c_e; c_e = edges[c_e].next){\n\t\tv = edges[c_e].to; if (v == fa) continue;\n\t\tgetDis2(v, u, edges[c_e].dis, op);\n\t}\n}\n\nint main(){\n\tint n = read(), m = read();\n\tfor (int i = 1; i <= m; ++i){\n\t\tint u = read(), v = read(); ll w = read();\n\t\taddEdge(u, v, w), addEdge(v, u, w);\n\t}\n\tgetDis(1, 1, 0);\n\tint pos1; ll _max = -1;\n\tfor (int i = 1; i <= n; ++i)\n\t\tif (dis[i] > _max)\n\t\t\t_max = dis[i], pos1 = i;\n\tgetDis(pos1, pos1, 0);\n\tint pos2; _max = -1;\n\tfor (int i = 1; i <= n; ++i)\n\t\tif (dis[i] > _max)\n\t\t\t_max = dis[i], pos2 = i;\n\tgetDis2(pos1, pos1, 0, 0);\n\tgetDis2(pos2, pos2, 0, 1);\n\tll _max2 = -1;\n\tfor (int i = 1; i <= n; ++i)\n\t\t_max2 = max(_max2, ((dis2[i][0] > dis2[i][1]) ? dis2[i][1] : dis2[i][0]));\n\tprintf(\"%lld\", _max + _max2);\n\treturn 0;\n}\n```\n**\u5907\u6ce8**  \n\u6c42\u6811\u7684\u76f4\u5f84:\u4ece\u4efb\u610f\u4e00\u70b9\u5f00\u59cbDFS,\u627e\u5230\u6700\u8fdc\u70b9pos1,\u518d\u4ecepos1\u5f00\u59cbDFS\u627e\u5230\u6700\u8fdc\u70b9pos2,  \npos1\u548cpos2\u5373\u4e3a\u6811\u7684\u76f4\u5f84  \n\u8bc1\u660e\u7565(\u6613\u8bc1)",
        "postTime": 1560002213,
        "uid": 20462,
        "name": "lukelin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4408 \u3010[NOI2003]\u9003\u5b66\u7684\u5c0f\u5b69\u3011"
    },
    {
        "content": "2325131433448687~\n\n\u673a\u623f\u6a21\u62df\u8d5b\u7684\u4e00\u9898\uff0c\u8003\u573a\u4e0a\u6253\u4e86\u66b4\u529b\uff0c\u540e\u6765A\u6389\u4e86\u3002\u3002\u3002\n\n\u60f3\u6cd5\u5f88\u7c97\u66b4\uff0c\u5148\u627e\u51fa\u6811\u7684\u76f4\u5f84\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e2a\u70b9\u4f5c\u4e3aC\u70b9\uff0c\u6c42\u51famin(C->A,C->B)+A->B\uff08\u4e5f\u5c31\u662f\u76f4\u5f84\uff09\u3002\u3002\u3002\n\n\u521a\u5f00\u59cb\u6253\u4e86\u4e00\u4e2aO(n^2)\u66b4\u529b\uff0c\u4ea4\u4e0a\u53bbT\u4e86\u6700\u540e\u4e00\u4e2a\u70b9\uff0c\u540e\u6765\u53c8\u641e\u4e86\u4e2a\u524d\u7f00\u548c\u4f18\u5316\uff0c\u53d8\u6210\u4e86O(n*(n-\u76f4\u5f84))\uff0c\u4f46\u662f\u8fd8\u662f\u6ca1\u5feb\u591a\u5c11\u3002\u3002\u3002\u4e8e\u662f\u6211\u731c\u60f3\u6700\u540e\u4e00\u4e2a\u70b9\u662f\u3002\u3002\u3002\n\n\u83ca\u82b1\u56fe\uff01\n\n\u7136\u540e\u65e0\u803b\u7684\u7279\u5224\u4e86\u83ca\u82b1\u56fe\uff0c\u4ea4\u4e0a\u53bb\u5c31\u771f\u7684A\u4e86\u3002\u3002\u3002\n\n\u8fd9\u7bc7\u9898\u89e3\u7801\u91cf\u5f88\u5927\uff0c\u6253\u4e865\u4e2adfs(\u5929\u554a\u3002\u3002\u3002)\u3002\u3002\u3002\n\nCode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\nstruct Node\n{\n    int v;\n    long long c;\n    Node *next;\n}*h[200005],pool[400005];\nint vis[200005];//\u662f\u5426\u5728\u76f4\u5f84\u4e0a\nlong long qzh[200005];//\u76f4\u5f84\u4e0a\u7684\u524d\u7f00\u548c\u4f18\u5316\nint in[200005];//\u5165\u5ea6\uff0c\u5224\u83ca\u82b1\u56fe\u7528\u7684\uff08\u5927\u96fe\uff09\nint tot=0;\nvoid adde(int u,int v,long long c)\n{\n    Node *p=&pool[++tot];\n    p->v=v;\n    p->c=c;\n    p->next=h[u];\n    h[u]=p;\n}\nlong long max1924=0;\nint far=0;\nvoid dfs_FAR(int u,int fa,long long dis)//\u6c42\u76f4\u5f84\u7684\u7b2c\u4e00\u6b65\uff0c\u627e\u51fa\u79bb\u6811\u4e0a\u4e00\u4e2a\u70b9\u6700\u8fdc\u7684\u70b9\n{\n    if(max1924<dis)\n        max1924=dis,far=u;\n    for(Node *p=h[u];p;p=p->next)\n    {\n        if(p->v!=fa)\n        {\n            dfs_FAR(p->v,u,dis+p->c);\n        }\n    }\n}\nlong long dia=0;//diameter\u76f4\u5f84\nint diaa=0;\nint far1=0;//far1\u548cfar\u4e3a\u76f4\u5f84\u4e24\u4e2a\u7aef\u70b9\nvoid dfs_DIA(int u,int fa,long long dis)//\u7b2c\u4e8c\u6b65\uff0c\u6c42\u76f4\u5f84\n{\n    if(dia<dis)\n        dia=dis,far1=u;\n    for(Node *p=h[u];p;p=p->next)\n    {\n        if(p->v!=fa)\n        {\n            dfs_DIA(p->v,u,dis+p->c);\n        }\n    }\n}\nlong long distan=0;//\u4eceC\u5230A(\u6216B)\u7684\u8ddd\u79bb\nint flag=0;//\u8868\u793a\u6709\u6ca1\u6709\u5230\u8fbe\u76ee\u6807\u8282\u70b9\nvoid dfs_ANS(int u,int fa,long long dis,int end)//\u7b2c\u4e09\u6b65\uff0c\u627eC\u70b9\uff0c\u5bf9\u4e8e\u6bcf\u4e2aC\u70b9\uff0c\u6c42\u51fa\u5230far\u548cfar1\u7684\u8ddd\u79bb\n{\n    if(flag==1)\n        return;//\u5982\u679c\u5df2\u7ecf\u5230\u8fbe\u4e86\uff0c\u4e00\u76f4\u8fd4\u56de\n    if(u==end)\n    {\n        distan=dis;\n        flag=1;\n        return;\n    }\n    for(Node *p=h[u];p;p=p->next)\n    {\n        if(p->v!=fa)\n        {\n            dfs_ANS(p->v,u,dis+p->c,end);\n        }\n        if(flag==1)\n            return;\n    }\t\n}\nint tottime=0;//\u76f4\u5f84\u4e0a\u6709\u591a\u5c11\u4e2a\u70b9\nvoid dfs_QZH(int u,int fa,int time)//\u6c42\u51fa\u76f4\u5f84\u4e0a\u7684\u524d\u7f00\u548c\n{\n    tottime++;\n    for(Node *p=h[u];p;p=p->next)\n    {\n        if(vis[p->v]==1&&p->v!=fa)\n        {\n            qzh[time]=qzh[time-1]+p->c;\n            dfs_QZH(p->v,u,time+1);\n        }\n    }\n}\nint flag1924=0;\nvoid dfs_VIS(int u,int fa,int end)//\u6807\u8bb0\u6240\u6709\u5728\u76f4\u5f84\u4e0a\u7684\u70b9\n{\n    if(u==end)\n    {\n        vis[u]=1;\n        flag1924=1;\n        return;\n    }\n    for(Node *p=h[u];p;p=p->next)\n    {\n        if(p->v!=fa)\n        {\n            dfs_VIS(p->v,u,end);\n            if(flag1924==1)\n            {\n                vis[u]=1;\n                return;\n            }\t\n        }\n    }\n}\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u5230\u6b64\u4e3a\u6b62\uff0c5\u4e2adfs\u6253\u5b8c\u4e86\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nint main()\n{\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    int x,y;\n    long long c;\n    ~~~~~~~~ \u7279\u5224\u83ca\u82b1\u56fe ~~~~~~~~\n    long long da=0,db=0,dc=0;\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%lld\",&x,&y,&c);\n        in[x]++;\n        in[y]++;\n        if(c>da)\n            dc=db,db=da,da=c;\n        else if(c>db)\n            dc=db,db=c;\n        else if(c>dc)\n        \tdc=c;\n        adde(x,y,c);\n        adde(y,x,c);\n    }\n    int flag1823=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(in[i]==n-1)\n        {\n            flag1823=1;\n            break;\n        }\n    }\n    if(flag1823)\n    {\n        printf(\"%lld\",da+2*db+dc);\n        return 0;\n    }\n    ~~~~~~~~ \u6c42\u76f4\u5f84\u5f00\u59cb ~~~~~~~~\n    dfs_FAR(1,0,0);\n    dfs_DIA(far,0,0);\n    dfs_VIS(far,0,far1);\n    ~~~~~~~~ \u627eC\u70b9\u5f00\u59cb ~~~~~~~~\n    long long ans=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(vis[i]==1)\n            continue;//\u5982\u679c\u5728\u76f4\u5f84\u4e0a\u5c31\u6682\u65f6\u8df3\u8fc7\u4e0d\u641c\n        dfs_ANS(i,0,0,far);\n        long long disa=distan;\n        flag=0;\n        distan=0;\n        dfs_ANS(i,0,0,far1);\n        long long disb=distan;\n        flag=0;\n        distan=0;\n        ans=max(ans,min(disa,disb));\n    }\n    dfs_QZH(far,0,1);\n    long long mina=0;\n    for(int i=1;i<=tottime;i++)\n    {\n        mina=max(mina,min(dia-qzh[i],qzh[i]));//\u5f53\u76f4\u5f84\u4e0a\u7684\u70b9\u7684\u4f4d\u7f6e\u6700\u63a5\u8fd1\u76f4\u5f84\u7684\u4e2d\u70b9\u65f6\uff0c\u4e00\u5b9a\u6700\u4f18\n    }\n    printf(\"%lld\\n\",max(ans+dia,dia+mina));//\u8f93\u51fa\u6700\u540e\u7684\u7b54\u6848\n    return 0;\n}\n```",
        "postTime": 1547341385,
        "uid": 68675,
        "name": "xiaolou",
        "ccfLevel": 0,
        "title": "P4408\u9898\u89e3"
    },
    {
        "content": "[\u5b89\u5229\u4e00\u6ce2\u535a\u5ba2](https://www.cnblogs.com/cold-cold/p/10035649.html)\n\n\u6b64\u9898\u5f88\u5bb9\u6613\u770b\u51fa\u662f\u8981\u5148\u6c42\u6811\u7684\u76f4\u5f84\uff0c\u7136\u540e\u7684\u64cd\u4f5c\u6211\u4e00\u5f00\u59cb\u7684\u601d\u8def\u6709\u4e9b\u9519\u8bef\u3002\n\n\u4e00\u5f00\u59cb\u6211\u7684\u60f3\u6cd5\u662f\u5728\u76f4\u5f84\u4e0a\u627e\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u8d77\u70b9\uff0c\u5728dfs\u7684\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u4e0b\u76f4\u5f84\u7684\u8def\u5f84\u548c\u6743\u503croad\uff0c\n\n\u628aroad\u6570\u7ec4\u524d\u7f00\u548c\u5316\uff0c\u4e8e\u662f\u7b54\u6848\u5c31\u662flenth+max{min(lenth-road[i],road[i])};\n\n\u4f46\u662f\u5728WA\u6389\u4ee5\u540e\uff0c\u6211\u53d1\u73b0\u8d77\u70b9\u4e0d\u5728\u76f4\u5f84\u4e0a\u4e5f\u8bb8\u4f1a\u66f4\u597d\uff0c\u4e8e\u662f\u6211\u4eec\u7528SPFA\u6c42\u51fa\uff0c\u6bcf\u4e2a\u70b9\u5230\u76f4\u5f84\u4e24\u7aef\u7684\u8ddd\u79bb\n\n\u90a3\u4e48\u7b54\u6848\u5c31\u662flenth+max{min(dis[0][i],dis[1][i])};\n\n\u5b9e\u73b0\u5982\u4e0b\uff1a\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <map>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\ntypedef long long ll;\ninline ll read()\n{\n    register ll p(1),a(0);register char ch=getchar();\n    while((ch<'0'||ch>'9')&&ch!='-') ch=getchar();\n    if(ch=='-') p=-1,ch=getchar();\n    while(ch>='0'&&ch<='9') a=a*10+ch-48,ch=getchar();\n    return a*p;\n}\nconst int N=200010;\nint n,m,u,v,head[N],cnt=0,zq,zz,len=0,book[N];\nll ans=0,w,maxn=0,road[N],dis[2][N];\nstruct EDGE{int nxt,to;ll val;}e[N<<1];\nvoid add(int u,int v,ll w){e[++cnt]=(EDGE){head[u],v,w};head[u]=cnt;}\nvoid dfs(int u,int fa,ll siz)\n{\n    if(siz>maxn){maxn=siz;zq=u;}\n    for(int i=head[u],v=e[i].to;i;i=e[i].nxt,v=e[i].to) if(fa!=v) dfs(v,u,siz+e[i].val);\n}\nqueue<int> Q;\nvoid SPFA(int u,int pre)\n{\n    memset(dis[pre],0x3f,sizeof(dis[pre]));\n    memset(book,0,sizeof(book));\n    Q.push(u);dis[pre][u]=0;book[u]=1;\n    while(!Q.empty())\n    {\n        u=Q.front();Q.pop();book[u]=0;\n        for(int i=head[u],v=e[i].to;i;i=e[i].nxt,v=e[i].to)\n            if(dis[pre][v]>dis[pre][u]+e[i].val)\n            {\n                dis[pre][v]=dis[pre][u]+e[i].val;\n                if(!book[v]) Q.push(v);\n            }\n    }\n}\nint main()\n{\n    // freopen(\"input\",\"r\",stdin);\n    // freopen(\"output\",\"w\",stdout);\n    n=read(),m=read();\n    for(int i=1;i<=m;i++)\n    {\n        u=read(),v=read(),w=read();\n        add(u,v,w);add(v,u,w);\n    }\n    dfs(1,-1,0);zz=zq,maxn=0;\n    dfs(zq,-1,0);\n    SPFA(zz,0);SPFA(zq,1);\n    for(int i=1;i<=n;i++) ans=max(ans,min(dis[0][i],dis[1][i]));\n    printf(\"%lld\\n\",ans+maxn);\n    return 0;\n}\n\n```\n",
        "postTime": 1543417602,
        "uid": 48934,
        "name": "cold_cold",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4408 \u3010[NOI2003]\u9003\u5b66\u7684\u5c0f\u5b69\u3011"
    }
]