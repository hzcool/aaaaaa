[
    {
        "content": "\u8bbe\u629b\u7269\u7ebf\u65b9\u7a0b\u4e3a$y=ax^2+bx(a<0,b>0)$\uff0c\u6211\u4eec\u60f3\u8981\u6c42\u51fa\u4e00\u7ec4$a,b$\u4f7f\u5f97\u5b83\u5c3d\u53ef\u80fd\u6ee1\u8db3\u66f4\u591a\u7684\u8981\u6c42\u3002\u8fd9\u4e2a\u663e\u7136\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\u3002\n\n\u5982\u4f55check\u5f53\u524d\u7684$mid$\u662f\u5426\u5408\u6cd5\u5462\uff1f\u6bcf\u4e00\u4e2a\u9650\u5236\u6761\u4ef6\u5f62\u5982$y_{i_1}\\le ax_i^2+bx_i\\le y_{i_2}$\uff0c\u4e5f\u5c31\u662f$\\frac{y_{i_1}}{x_i}\\le x_ia+b\\le \\frac{y_{i_2}}{x_i}$\u3002\u628a$a,b$\u770b\u6210\u81ea\u53d8\u91cf\uff0c\u5b9e\u9645\u4e0a\u6bcf\u4e2a\u4e0d\u7b49\u5f0f\u5c31\u662f\u4e00\u4e2a\u534a\u5e73\u9762\uff0c\u6211\u4eec\u9700\u8981\u6c42\u51fa\u534a\u5e73\u9762\u4ea4\u3002\n\n\u9700\u8981\u638c\u63e1\u5411\u91cf\u3001\u53c9\u79ef\u7b49\u5c11\u91cf\u57fa\u7840\u7b97\u6cd5\uff08\u4e0d\u8fc7\u505a\u5230\u8fd9\u9898\u7684\u5927\u4f6c\u4eec\u80af\u5b9a\u4f1a\u4e86\uff09\uff0c\u53ef\u4ee5\u53c2\u8003[xzy\u5de8\u4f6c\u7684\u603b\u7ed3](https://www.cnblogs.com/xzyxzy/p/10033130.html)\u3002\n\n\u6709\u4e00\u79cd$O(n^2)$\u7684\u52a8\u6001\u63d2\u5165\u534a\u5e73\u9762\u7684\u505a\u6cd5\uff0c\u53ef\u4ee5\u901a\u8fc7\u539f\u9898\u6570\u636e\uff08\u76ee\u524d\u6700\u4f18\u89e3\u7b2c\u4e00\u7248\u5927\u90e8\u5206\u662f\u8fd9\u79cd\u5199\u6cd5\uff09\uff0c\u4e5f\u53ef\u4ee5\u53c2\u8003xzy\u5de8\u4f6c\u7684\u603b\u7ed3\u3002\n\n\u849f\u84bb\u6784\u9020\u4e86\u4e00\u7ec4\u8fb9\u6570\u5f88\u591a\u7684\u534a\u5e73\u9762\u4ea4\uff0c\u53ef\u4ee5\u5361\u6389\u8fd9\u79cd\u5199\u6cd5\uff0c\u76ee\u524drank1\u7684\u4ee3\u7801\u672c\u673a\u9700\u898120s\u4ee5\u4e0a\u3002\n\n\u4e00\u4e9bhack\u6570\u636e\u53ef\u4ee5\u4ece\u8fd9\u91cc\u4e0b\uff08\u90e8\u5206\u8f6c\u81ealiu_runda\uff09\n\n\u94fe\u63a5: https://pan.baidu.com/s/1Te0G-L2JrRu361qKAGorhQ\n\n\u63d0\u53d6\u7801: ea9m \n\n\u8c08\u4e00\u8c08\u6b63\u7ecf\u7684$O(n\\log n)$\u7684\u5b9e\u73b0\u5427\u3002\u4ee5\u4e0b\u5185\u5bb9\u4ece[\u849f\u84bb\u7684\u603b\u7ed3](https://www.cnblogs.com/flashhu/p/10258638.html)\u91cc\u39df\u7684\u3002\n\n\u6211\u4eec\u7528\u6709\u5411\u76f4\u7ebf\uff08\u4e00\u4e2a\u70b9\u548c\u4e00\u4e2a\u65b9\u5411\u5411\u91cf\uff09\u8868\u793a\u534a\u5e73\u9762\uff0c\u4ee5\u4e0b\u9ed8\u8ba4\u534a\u5e73\u9762\u5728\u6709\u5411\u76f4\u7ebf\u7684\u5de6\u4fa7\u3002\n\n\u5bf9\u6709\u5411\u76f4\u7ebf\u6309\u65b9\u5411\u5411\u91cf\u7684\u6781\u89d2\u6392\u5e8f\uff0c\u7ef4\u62a4\u4e00\u4e2a\u53cc\u7aef\u961f\u5217\uff0c\u5b58\u50a8\u5f53\u524d\u6784\u6210\u534a\u5e73\u9762\u7684\u76f4\u7ebf\u4ee5\u53ca\u76f8\u90bb\u4e24\u76f4\u7ebf\u7684\u4ea4\u70b9\u3002\n\n\u6bcf\u6b21\u52a0\u5165\u4e00\u6761\u6709\u5411\u76f4\u7ebf\uff0c\u5982\u679c\u961f\u9996/\u961f\u5c3e\u7684\u4ea4\u70b9\u5728\u76f4\u7ebf\u53f3\u4fa7\uff08\u7528\u53c9\u79ef\u5224\uff09\u5219\u5f39\u6389\u961f\u9996/\u961f\u5c3e\u7684\u76f4\u7ebf\u3002\n\n\u4e3a\u4ec0\u4e48\u8fd9\u6837\u662f\u5bf9\u7684\u5462\uff1f\u56e0\u4e3a\u52a0\u5165\u76f4\u7ebf\u7684\u5355\u8c03\u6027\uff0c\u6240\u4ee5\u8981\u88ab\u5f39\u51fa\u7684\u76f4\u7ebf\u4e00\u5b9a\u5728\u961f\u9996\u6216\u961f\u5c3e\u3002\u611f\u5174\u8da3\u7684\u8bdd\u53ef\u4ee5\u81ea\u5df1\u624b\u753b\u4e00\u4e9b\u4f8b\u5b50\u6765\u7406\u89e3\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u7ec6\u8282\uff1a\n1. \u52a0\u5165\u76f4\u7ebf\u65f6\uff0c\u5148\u5f39\u961f\u5c3e\uff0c\u518d\u5f39\u961f\u9996\u3002\n2. \u6700\u540e\u8fd8\u8981\u68c0\u67e5\u961f\u5c3e\u4ea4\u70b9\u662f\u5426\u5728\u961f\u9996\u76f4\u7ebf\u7684\u53f3\u4fa7\uff0c\u5982\u679c\u662f\u4e5f\u8981\u5f39\u6389\u3002\n3. \u7279\u5224\u5e73\u884c\u76f4\u7ebf\uff0c\u5728\u53f3\u4fa7\u7684\u8981\u5f39\u6389\u3002\n4. \u5982\u679c\u9898\u76ee\u7ed9\u51fa\u7684\u534a\u5e73\u9762\u4e0d\u4e00\u5b9a\u6709\u9650\u5236\u8fb9\u754c\uff0c\u5219\u5e94\u8be5\u624b\u52a8\u52a0\u5165\u4e00\u4e2aINF\u8fb9\u754c\u3002\n\n\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u74f6\u9888\u5728\u6392\u5e8f\uff0c\u56e0\u6b64\u9884\u5148\u5c06\u8fd9\u4e9b\u6709\u5411\u76f4\u7ebf\u6392\u597d\u5e8f\uff0c\u4e8c\u5206check\u65f6\u5ffd\u7565\u7f16\u53f7\u5927\u4e8emid\u7684\u76f4\u7ebf\u5c31\u53ef\u4ee5\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log n)$\u3002\n\n\u6ce8\u610f\u8fd9\u9898\u7684\u5750\u6807\u8303\u56f4\u662f$1e9$\u8303\u56f4\uff0c\u56e0\u6b64INF\u8bbe\u5230$1e10$\u4ee5\u4e0a\uff0cEPS\u8bbe\u5230$1e-10$\u4ee5\u4e0b\u3002\n```cpp\n#include<bits/stdc++.h>\n#define RG register\n#define I inline\n#define R RG int\n#define G if(++ip==ie)if(fread(ip=buf,1,SZ,stdin))\nusing namespace std;\ntypedef double DB;\nconst int SZ=1<<19,N=2e5+9;\nconst DB INF=1e11,EPS=1e-11;\nchar buf[SZ],*ie=buf+SZ,*ip=ie-1;\ninline int in(){\n\tG;while(*ip<'-')G;\n\tR x=*ip&15;G;\n\twhile(*ip>'-'){x*=10;x+=*ip&15;G;}\n\treturn x;\n}\nstruct Vec{\n\tDB x,y;\n\tI Vec(){}\n\tI Vec(DB a,DB b){x=a;y=b;}\n\tI Vec operator+(Vec a){return Vec(x+a.x,y+a.y);}\n\tI Vec operator-(Vec a){return Vec(x-a.x,y-a.y);}\n\tI Vec operator*(DB a){return Vec(x*a,y*a);}//\u6570\u4e58\n\tI DB operator^(Vec a){return x*a.y-y*a.x;}//\u53c9\u79ef\n}k[N];\nstruct Line{\n\tVec p,v;DB ang;int id;\n\tI Line(){}\n\tI Line(Vec a,Vec b,R c){p=a,v=b-a,ang=atan2(v.y,v.x),id=c;}\n\tI bool operator<(Line&a){return ang<a.ang;}\n\tI bool Right(Vec&a){return (v^(a-p))<-EPS;}\n\tI friend Vec Cross(Line&a,Line&b){//\u6c42\u76f4\u7ebf\u4ea4\u70b9\n\t\treturn a.p+a.v*((b.v^(b.p-a.p))/(b.v^a.v));\n\t}\n}a[N],q[N];\nint p=0,l=1,r,mid;\nbool HalfPlane(Line*a,Line*e){//\u6c42\u534a\u5e73\u9762\u662f\u5426\u6709\u4ea4\n\tR n=e-a,i=0,h=0,t=0;\n\twhile(a[i].id>mid)++i;\n\tfor(q[0]=a[i++];i<n;++i){\n\t\tif(a[i].id>mid)continue;\n\t\twhile(h<t&&a[i].Right(k[t-1]))--t;\n\t\twhile(h<t&&a[i].Right(k[h]))++h;\n\t\tif(a[i].ang!=q[t].ang)q[++t]=a[i];\n\t\telse if(a[i].Right(q[t].p))q[t]=a[i];\n\t\tif(h<t)k[t-1]=Cross(q[t-1],q[t]);\n\t}\n\twhile(h<t&&q[h].Right(k[t-1]))--t;\n\treturn t-h>1;\n}\nint main(){\n\tr=in();\n\tfor(R i=1;i<=r;++i){\n\t\tDB x=in(),y1=in(),y2=in();\n\t\ta[++p]=Line(Vec(0,y1/x),Vec(1,y1/x-x),i);\n\t\ta[++p]=Line(Vec(1,y2/x-x),Vec(0,y2/x),i);\n\t}//\u8fb9\u754c\u8981\u8bbeEPS\u4e0d\u80fd\u8bbe0\uff0c\u56e0\u4e3aa\u3001b\u4e3a0\u5747\u4e0d\u5408\u9898\u610f\n\ta[++p]=Line(Vec(-INF,EPS),Vec(-EPS,EPS),0);\n\ta[++p]=Line(Vec(-EPS,EPS),Vec(-EPS,INF),0);\n\ta[++p]=Line(Vec(-EPS,INF),Vec(-INF,INF),0);\n\ta[++p]=Line(Vec(-INF,INF),Vec(-INF,EPS),0);\n\tsort(a+1,a+p+1);\n\twhile(l<r){\n\t\tmid=(l+r+1)>>1;\n\t\tHalfPlane(a+1,a+p+1)?l=mid:r=mid-1;\n\t}\n\tcout<<l<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1547478693,
        "uid": 61325,
        "name": "FlashHu",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3222 \u3010[HNOI2012]\u5c04\u7bad\u3011"
    },
    {
        "content": "## [\u9898\u610f](https://www.luogu.com.cn/problem/P3222)\n\n\u8003\u8651\u4e8c\u5206\u7b54\u6848\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u662f\u5426\u5b58\u5728$(a,b)$\uff0c\u5bf9\u4e8e\u4efb\u610f$i\\in[1,mid]$\u6ee1\u8db3$ax_i^2+bx_i\\in[y_{1i},y_{2i}]$\u3002\n\n\u5c55\u5f00\u53ef\u5f97\uff1a  \n$\\frac{y_{1i}}{x_i}\\leqslant ax_i+b\\leqslant\\frac{y_{2i}}{x_i}$  \n\u5373\uff1a  \n$ax_i+b-\\frac{y_{1i}}{x_i}\\geqslant 0$  \n$ax_i+b-\\frac{y_{12}}{x_i}\\leqslant 0$\n\n\u5c06$a,b$\u5f53\u6210$x,y$\uff0c\u8fd9\u662f\u4e24\u6761\u76f4\u7ebf\uff0c\u6211\u4eec\u534a\u5e73\u9762\u4ea4\u5224\u65ad\u5373\u53ef\u3002\n\n~~\u7136\u540e\u8fd9\u9898\u5361\u7cbe\u5ea6\u5361\u4e86\u6211\u4e00\u4e0b\u5348\uff0c\u6211\u4e5f\u662f\u771f\u6709\u8010\u5fc3\u3002~~\n\ncode:\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define double long double\nconst int maxn=100010;\nconst double eps=1e-18;\nconst double inf=1e12;\nint n,m;\nstruct Point\n{\n    double x,y;\n    inline double len(){return sqrt(x*x+y*y);}\n    Point operator+(const Point a)const{return (Point){x+a.x,y+a.y};}\n    Point operator-(const Point a)const{return (Point){x-a.x,y-a.y};}\n    Point operator*(const double k){return (Point){x*k,y*k};}\n    Point operator/(const double k){return (Point){x/k,y/k};}\n    double operator*(const Point a)const{return x*a.y-y*a.x;}\n    double operator&(const Point a)const{return x*a.x+y*a.y;}\n};\ninline int dcmp(double x)\n{\n    if(fabs(x)<=eps)return 0;\n    return x<0?-1:1;\n} \ninline Point get(Point a,Point b){return b-a;}\nstruct Line\n{\n    Point p,v;int id;double theta;\n    bool operator<(const Line a)const\n    {\n        return !dcmp(theta-a.theta)?dcmp(get(p,v)*get(p,a.v))<0:dcmp(theta-a.theta)<0;\n    } \n}line[maxn<<1],tmp[maxn<<1],q[maxn<<1];\ninline Point getpoint(Line a,Line b)\n{\n    Point p1=a.p,p2=b.p,v1=a.v,v2=b.v;\n    v1=get(p1,v1),v2=get(p2,v2);\n    Point u=get(p1,p2);\n    return p2+v2*(u*v1)/(v1*v2);\n}\ninline bool check(Line a,Line b,Line c)\n{\n    Point p=getpoint(a,b);\n    return dcmp(get(c.p,c.v)*get(c.p,p))<0;\n}\ninline bool check_ans(int mid)\n{\n    int l=1,r=0,cnt=0;\n    for(int i=1;i<=m;i++)\n    \tif(line[i].id<=mid&&line[i].theta!=tmp[cnt].theta)tmp[++cnt]=line[i];\n    for(int i=1;i<=cnt;i++)\n    {\n        while(l<r&&check(q[r-1],q[r],tmp[i]))r--;\n        while(l<r&&check(q[l],q[l+1],tmp[i]))l++;\n        q[++r]=tmp[i];\n    }\n    while(l<r&&check(q[r-1],q[r],q[l]))r--;\n    while(l<r&&check(q[l],q[l+1],q[r]))l++;\n    return r-l+1>=3;\n}\nint main()\n{\n\t//freopen(\"test.in\",\"r\",stdin);\n\t//freopen(\"test.out\",\"w\",stdout);\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdouble x,y1,y2;scanf(\"%Lf%Lf%Lf\",&x,&y1,&y2);\n\t\tline[++m]=(Line){(Point){0,y1/x},(Point){1,y1/x-x},i,0};\n\t\tline[++m]=(Line){(Point){1,y2/x-x},(Point){0,y2/x},i,0};\n\t}\n\tline[++m]=(Line){(Point){-inf,eps},(Point){-eps,eps},0,0};\n\tline[++m]=(Line){(Point){-eps,eps},(Point){-eps,inf},0,0};\n\tline[++m]=(Line){(Point){-eps,inf},(Point){-inf,inf},0,0};\n\tline[++m]=(Line){(Point){-inf,inf},(Point){-inf,eps},0,0};\n\tfor(int i=1;i<=m;i++)line[i].theta=atan2(line[i].v.y-line[i].p.y,line[i].v.x-line[i].p.x);\n    sort(line+1,line+m+1);\n\tint l=1,r=n,res=0;\n\twhile(l<=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(check_ans(mid))res=mid,l=mid+1;\n\t\telse r=mid-1;\n\t}\n\tprintf(\"%d\\n\",res);\n\treturn 0;\n}\n```\n",
        "postTime": 1579005730,
        "uid": 145441,
        "name": "nofind",
        "ccfLevel": 6,
        "title": "P3222 [HNOI2012]\u5c04\u7bad(\u534a\u5e73\u9762\u4ea4)"
    },
    {
        "content": "\u4e0d\u96be\u53d1\u73b0\uff0c\u7bad\u7684\u8f68\u8ff9\u521a\u597d\u6ee1\u8db3\u4e00\u4e2a\u4e8c\u6b21\u51fd\u6570y=ax\u00b2+bx\u7684\u56fe\u8c61\uff0c\u4e14a<0,b>0,x>0\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u9776\u5b50\uff0c\u5982\u679c\u4e0b\u7aef\u7684\u7eb5\u5750\u6807\u4e3ay1\uff0c\u4e0a\u7aef\u7684\u7eb5\u5750\u6807\u4e3ay2\uff0c\u6a2a\u5750\u6807\u4e3ax(x>0)\uff0c\u82e5\u7bad\u7a7f\u8fc7\u9776\u5b50\uff0c\u5219\u5fc5\u5b9a\u6ee1\u8db3\uff1ay1<=ax\u00b2+bx<=y2,\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e0a\u9762\u5f97\u5230\u7684\u4e0d\u7b49\u5f0f\u8fdb\u884c\u5316\u7b80\uff0c\u5f97\uff1ay1/x<=ax+b<=y2/x\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u8bbexx=a,yy=b,aa=x,bb=y1/x,cc=y2/x\uff0c\u5219\u53ef\u5f97\uff1abb<=aaxx+yy<=cc\uff0c\u6211\u4eec\u53d6\u6700\u6781\u7aef\u7684\u503c\uff0c\u5373\uff1aaaxx+yy=b,aaxx+yy=c\uff0c\u8fdb\u4e00\u6b65\u5316\u7b80\uff0c\u5f97\uff1ayy=-aaxx+bb,yy=-aaxx+cc\u3002\u7531\u4e8eaa\u3001cc\u5df2\u77e5\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u662f\u4e24\u6761\u76f4\u7ebf\u7684\u89e3\u6790\u5f0f\uff0cxx\u3001yy\u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684a,b\uff0c\u90a3\u4e48\u6ee1\u8db3\u6761\u4ef6\u7684a\u4e0eb\u5373\u4e3a\u4e24\u76f4\u7ebf\u4e2d\u95f4\u7684\u70b9\u3002\n\n\u4e8c\u5206\u7b54\u6848\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u7ed9\u4f60\u82e5\u5e72\u4e2a\u534a\u5e73\u9762\uff0c\u5224\u65ad\u662f\u5426\u6709\u76f8\u4ea4\u7684\u90e8\u5206\u3002\u53ef\u4ee5\u901a\u8fc7\u534a\u5e73\u9762\u4ea4\u6765\u5b9e\u73b0\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\ninline int read()\n{\n    int x=0,w=0;char ch=getchar();\n    while(ch<'0'||ch>'9')w|=ch=='-',ch=getchar();\n    while(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    return w?-x:x;\n}\ninline void write(int x)\n{\n    if(x<0)putchar('-'),x=-x;\n    if(x>9)write(x/10);\n    putchar(x%10+48);\n}\ndouble maxx=1e10,minn=-1e10,eps=1e-10;\nstruct point{double x,y;}plist[200050];\nstruct segment\n{\n    point p1,p2;\n    double angle;int belong;\n         \n    segment(){}\n    segment(double x1,double y1,double x2,double y2){p1.x=x1;p1.y=y1;p2.x=x2;p2.y=y2;}\n    void get_angle (){ angle=atan2(p2.y-p1.y,p2.x-p1.x); }\n         \n}seg[200050],seg1[200050],sglist[200050];\nint head,tail,n,m,o,nn;\ninline double multi(point p1,point p2,point p0)\n{\n    double x1=p1.x-p0.x;\n    double x2=p2.x-p0.x;\n    double y1=p1.y-p0.y;\n    double y2=p2.y-p0.y;\n    return x1*y2-x2*y1;\n}\ninline point jd(segment sg1,segment sg2)\n{\n    double t1=multi(sg1.p1,sg2.p2,sg2.p1);\n    double t2=multi(sg1.p2,sg2.p2,sg2.p1);\n         \n    segment sg=sg1;\n    point p,p1,p2;\n    p1=sg.p1;p2=sg.p2;\n    p.x=(t1*p2.x-t2*p1.x)*1.0/(t1-t2);\n    p.y=(t1*p2.y-t2*p1.y)*1.0/(t1-t2);\n    return p;\n}\ninline bool satisfy(point p,segment sg)\n{\n    if(multi(p,sg.p2,sg.p1)<=eps)return 1;else return 0;\n}\ninline bool cmp(segment sg1,segment sg2)\n{\n    if(sg1.angle<sg2.angle)return 1;\n    if( fabs( sg1.angle-sg2.angle )<eps && satisfy(sg1.p1,sg2) )return 1;\n    return 0;\n}\nbool check()\n{\n    register int n=0;for(register int i=1;i<=nn;++i)if( seg[i].belong<=o&&( seg[i].angle>seg1[n].angle||!n ) )seg1[++n]=seg[i];\n      \n    sglist[1]=seg1[1];sglist[2]=seg1[2];\n    head=1;tail=2;\n         \n    for(register int i=3;i<=n;++i)\n    {\n        while( head<tail && !satisfy( jd( sglist[tail],sglist[tail-1] ),seg1[i] ) )tail--;\n        while( head<tail && !satisfy( jd( sglist[head],sglist[head+1] ),seg1[i] ) )head++;\n        sglist[++tail]=seg1[i];\n    }\n      \n    while( head<tail && !satisfy( jd( sglist[tail],sglist[tail-1] ),sglist[head] ) )tail--;\n    while( head<tail && !satisfy( jd( sglist[head],sglist[head+1] ),sglist[tail] ) )head++;\n      \n    if(tail-head+1<=2)return 0;return 1;\n}\nint main()\n{\n    m=read();nn=4;\n    seg[1]=segment(0,0,0,1),seg[1].get_angle(),seg[1].belong=0;\n    seg[2]=segment(0,0,1,0),seg[2].get_angle(),seg[2].belong=0;\n    seg[3]=segment(maxx,maxx,minn,maxx),seg[3].get_angle(),seg[3].belong=0;\n    seg[4]=segment(minn,maxx,minn,minn),seg[4].get_angle(),seg[3].belong=0;\n    double a,yy1,yy2;\n    for(register int i=1;i<=m;++i)\n    {\n        a=read(),yy1=read(),yy2=read();\n        double b=yy1*1.0/a,c=yy2*1.0/a;\n        seg[++nn]=segment(0,b,1,b-a),seg[nn].get_angle(),seg[nn].belong=i;\n        seg[++nn]=segment(1,c-a,0,c),seg[nn].get_angle(),seg[nn].belong=i;\n    }\n    sort(seg+1,seg+nn+1,cmp);\n    register int l=2,r=m,ans=1;\n    while(l<=r)\n    {\n        o=(l+r)>>1;\n        if(check())ans=o,l=o+1;\n        else r=o-1;\n    }\n    write(ans);\n    return 0;\n}\n```",
        "postTime": 1522671484,
        "uid": 30727,
        "name": "liaohaoping",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3222 \u3010[HNOI2012]\u5c04\u7bad\u3011"
    }
]