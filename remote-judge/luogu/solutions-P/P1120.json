[
    {
        "content": "\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u5199luogu\u535a\u5ba2\uff0c\u54ea\u91cc\u5199\u7684\u4e0d\u597d\u8bf7\u5927\u5bb6\u89c1\u8c05\u54e6 (^_^)\n\n\u6b64\u9898\u660e\u663e\u662f\u4e00\u9053\u641c\u7d22\u526a\u679d\u9898\u3002\u6211\u8be6\u7ec6\u8bf4\u4e00\u4e0b\u8fd9\u9898\u7684\u5168\u601d\u8def\uff0c\u4e0d\u8fc7\u7565\u957f\u3002\n\n### \u524d\u6392\u63d0\u793a\uff1a\u7b2c\u56db\u6761\u7684\u4f18\u53167\u8bb2\u7684\u662f\u90a3\u4e2a\u4e0d\u5c11\u4eba\u4e0d\u660e\u767d\u7684\u4f18\u5316\uff0c\u5982\u679c\u4f60\u53ea\u662f\u4e0d\u660e\u767d\u90a3\u4e2a\u4f18\u5316\u53ef\u4ee5\u7a7a\u964d\u3002\n\n---\n\n\u4e00\uff0c\u7ba1\u7406\u5458\u5df2\u7ecf\u5728\u9898\u76ee\u4e2d\u544a\u8bc9\u4f60\u8f93\u5165\u65f6\u53bb\u6389\u957f\u5ea6\u5927\u4e8e50\u7684\u6728\u68cd\u3002\n\n\u4e8c\uff0c\u60f3\u597d\u641c\u7d22\u4ec0\u4e48\u3002\u5f88\u660e\u663e\u6211\u4eec\u8981\u679a\u4e3e\u628a\u54ea\u4e9b\u68cd\u5b50\u62fc\u63a5\u6210\u539f\u6765\u7684\u957f\u68cd\uff0c\u800c\u539f\u59cb\u957f\u5ea6\uff08\u539f\u6765\u7684\u957f\u68cd\u7684\u957f\u5ea6\uff09\u90fd\u76f8\u7b49\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728dfs\u5916\u56f4\u679a\u4e3e\u62fc\u63a5\u540e\u7684\u6bcf\u6839\u957f\u68cd\u7684\u957f\u5ea6\u3002\u90a3\u679a\u4e3e\u4ec0\u4e48\u8303\u56f4\u5462\uff1f\n\n\u3000\u3000\u5176\u957f\u5ea6\u81f3\u5c11\u662f\u6700\u957f\u7684\u4e00\u6839\u6728\u68cd\uff0c\u6b64\u65f6\u6700\u957f\u7684\u8fd9\u6839\u6728\u68cd\u6070\u597d\u5355\u72ec\u7ec4\u6210\u539f\u6765\u7684\u957f\u68cd\u3002\u5982\u679c \u539f\u59cb\u957f\u5ea6 \u5c0f\u4e8e \u6700\u957f\u7684\u8fd9\u6839\u6728\u68cd\uff0c\u90a3\u4e48\u8fd9\u6839\u6700\u957f\u7684\u6728\u68cd\u5c31\u65e0\u6cd5\u81ea\u5df1\u6216\u4e0e\u5176\u5b83\u6728\u68cd\u7ec4\u6210\u539f\u6765\u7684\u957f\u68cd\u3002\n  \n\u3000\u3000\u5176\u957f\u5ea6\u81f3\u591a\u662f\u6240\u6709\u6728\u68cd\u7684\u957f\u5ea6\u4e4b\u548c\uff0c\u6b64\u65f6\u6240\u6709\u7684\u6728\u68cd\u62fc\u5728\u4e00\u8d77\u6070\u597d\u6210\u4e3a\u4e00\u6839\u539f\u6765\u7684\u957f\u68cd\u3002\u5982\u679c \u539f\u59cb\u957f\u5ea6 \u5927\u4e8e\u6240\u6709\u6728\u68cd\u7684\u957f\u5ea6\u4e4b\u548c\uff0c\u90a3\u4e48\u5373\u4f7f\u6240\u6709\u6728\u68cd\u62fc\u5728\u4e00\u8d77\u4e5f\u7ec4\u4e0d\u591f\u539f\u6765\u7684\u957f\u68cd\u4e86\u3002\n  \n\u3000\u3000\u8fd9\u4e48\u5927\u7684\u5faa\u73af\u5957dfs\u4f1a\u8d85\u65f6\u4e48\uff1f\u5f53\u7136\u4f1a\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5230\u5f53 \u539f\u59cb\u957f\u5ea6 \u4e0d\u80fd\u88ab \u6240\u6709\u6728\u68cd\u7684\u957f\u5ea6\u4e4b\u548c \u6574\u9664\u7684\u8bdd\uff0c\u8fd9\u4e9b\u6728\u68cd\u662f\u62fc\u4e0d\u51fa\u6574\u6570\u6839\u7684\uff08\u5982\u679c\u90fd\u62fc\u6210\u679a\u4e3e\u7684\u539f\u6765\u957f\u68cd\u7684\u957f\u5ea6\uff09\u3002\u56e0\u6b64\u5728\u5faa\u73af\u65f6\u628a\u5b83\u4eec\u5237\u6389\u3002\n  \n\u3000\u3000\u8fd9\u91cc\u501f\u9274\u4e86dalao\u7684\uff08\u5c0f\uff09\u4f18\u5316\uff0c\u5373\u539f\u59cb\u957f\u5ea6\u679a\u4e3e\u5230 \u6240\u6709\u6728\u68cd\u7684\u957f\u5ea6\u4e4b\u548c/2 \u5373\u53ef\uff0c\u56e0\u4e3a\u6b64\u65f6\u6240\u6709\u6728\u68cd\u6709\u53ef\u80fd\u62fc\u62102\u6839\u6728\u68cd\uff0c\u539f\u59cb\u957f\u5ea6\u518d\u5927\u7684\u8bdd\u5c31\u53ea\u80fd\u662f\u6240\u6709\u6728\u68cd\u62fc\u62101\u6839\u4e86\u3002\n  \n  \u4e09\uff0c\u8111\u8865\u4e00\u4e0b\u600e\u4e48\u641c\u3002\u8bbedfs(int k,int last,int rest)\uff0ck\u8868\u793a\u6b63\u5728\u62fc\u7b2c\u51e0\u6839\u539f\u6765\u7684\u957f\u68cd\uff0clast\u8868\u793a\u4f7f\u7528\u7684\u4e0a\u4e00\u6839\u6728\u68cd\uff08\u8f93\u5165\u7684\u77ed\u68cd\uff09\u7684\u7f16\u53f7\uff0crest\u8868\u793a\u5f53\u524d\u5728\u62fc\u7684\u957f\u68cd\u8fd8\u6709\u591a\u5c11\u957f\u5ea6\u672a\u62fc\u3002\u4e8e\u662f\u5faa\u73af\u679a\u4e3e\u4e0b\u4e00\u6839\u5c06\u8981\u4f7f\u7528\u7684\u6728\u68cd\u3002\n  \n  \u56db\uff0c~~\u4e0a\u9762\u7684\u505a\u6cd5\u4e0d\u8d85\u65f6\u8bf4\u660e\u4f60\u592a\u5f3a\u5927\u4e86\u3002~~\u4f60\u5f00\u59cb\u601d\u8003\u5bf9\u7a0b\u5e8f\u505a\u4e00\u4e9b\u4f18\u5316\u3002\uff08\u4e0b\u9762\u7684\u4f18\u5316\u8bf7\u6309\u987a\u5e8f\u60f3\uff09\n  \n  1. \u4e00\u6839\u957f\u6728\u68cd\u80af\u5b9a\u6bd4\u51e0\u6839\u77ed\u6728\u68cd\u62fc\u6210\u540c\u6837\u957f\u5ea6\u7684\u7528\u5904\u5c0f\uff0c\u5373\u77ed\u7684\u6728\u68cd\u53ef\u4ee5\u66f4\u7075\u6d3b\u7ec4\u5408\uff0c**\u6240\u4ee5\u5bf9\u8f93\u5165\u7684\u6240\u6709\u6728\u68cd\u6309\u957f\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f**\uff0c\u4ece\u957f\u5230\u77ed\u5730\u5c06\u6728\u68cd\u62fc\u5165\uff0c\u8fd9\u6837\u77ed\u6728\u68cd\u53ef\u4ee5\u66f4\u52a0\u7075\u6d3b\u5730\u63a5\u5728\u3002\n  \n\u3000\u5982\u679c\u4f60\u8fd8\u4e0d\u592a\u6e05\u695a\u201c\u7075\u6d3b\u201d\u7684\u542b\u4e49\uff0c\u8bf7\u5f62\u8c61\u8111\u8865\u4e00\u4e0b\u2014\u2014\u5982\u679c\u5148\u7528\u77ed\u6728\u68cd\uff0c\u90a3\u4e48\u9700\u8981\u5f88\u591a\u6839\u8fde\u7eed\u7684\u77ed\u6728\u68cd\u63a5\u4e0a\u4e00\u6839\u957f\u6728\u68cd\u624d\u80fd\u62fc\u6210\u4e00\u6839\u539f\u6765\u7684\u957f\u68cd\uff0c\u90a3\u4e48\u77ed\u6728\u68cd\u90fd\u7528\u4e86\u540e\uff0c\u5269\u4e0b\u4e86\u5927\u91cf\u957f\u6728\u68cd\uff0c\u62fc\u8d77\u6765\u5c31\u4e0d\u5982\u77ed\u6728\u68cd\u7075\u6d3b\uff0c\u66f4\u96be\u63a5\u51fa\u539f\u59cb\u957f\u5ea6\u3002\u800c\u5148\u7528\u957f\u6728\u68cd\uff0c\u6700\u540e\u518d\u7528\u77ed\u6728\u68cd\u8865\u5200\uff0c\u8fd9\u6837\u5c31\u5269\u4e0b\u4e86\u76f8\u5bf9\u8f83\u77ed\u7684\u6728\u68cd\uff0c\u80fd\u66f4\u52a0\u7075\u6d3b\u5730\u62fc\u63a5\u51fa\u539f\u59cb\u957f\u5ea6\u3002\n  \n  2. \u6839\u636e\u4f18\u53161\uff0c\u5c06\u8f93\u5165\u7684\u6728\u68cd\u4ece\u5927\u5230\u5c0f\u6392\u597d\u5e8f\u540e\uff0c\u5f53\u7528\u6728\u68cdi\u62fc\u5408\u539f\u59cb\u957f\u68cd\u65f6\uff0c\u4ece\u7b2ci+1\u6839\u6728\u68cd\u5f00\u59cb\u5f80\u540e\u641c\u3002\n  \n  3. \u5f53dfs\u8fd4\u56de\u62fc\u63a5\u5931\u8d25\uff0c\u9700\u8981\u66f4\u6362\u5f53\u524d\u4f7f\u7528\u7684\u6728\u68cd\u65f6\uff0c\u4e0d\u8981\u518d\u7528\u4e0e\u5f53\u524d\u6728\u68cd\u7684\u957f\u5ea6\u76f8\u540c\u7684\u6728\u68cd\uff0c\u56e0\u4e3a\u5f53\u524d\u6728\u68cd\u7528\u4e86\u4e0d\u884c\uff0c\u6539\u6210\u4e0e\u5b83\u76f8\u540c\u957f\u5ea6\u7684\u6728\u68cd\u4e00\u6837\u4e0d\u884c\u3002\u8fd9\u91cc\u6211**\u9884\u5904\u7406**\u51fa\u4e86\u6392\u5e8f\u540e**\u6bcf\u6839\u6728\u68cd\u540e\u9762\u7684\u6700\u540e\u4e00\u6839\u4e0e\u8fd9\u6839\u6728\u68cd\u957f\u5ea6\u76f8\u7b49\u7684\u6728\u68cd**\uff08\u7a0b\u5e8f\u4e2d\u7684next\u6570\u7ec4\uff09\uff0c\u5b83\u7684\u4e0b\u4e00\u6839\u6728\u68cd\u5c31\u662f\u7b2c\u4e00\u6839\u957f\u5ea6\u4e0d\u76f8\u7b49\u7684\u6728\u68cd\u4e86\u3002\n  \n\u3000\u8fd9\u4e2a\u9884\u5904\u7406\u53ef\u4ee5\u4f18\u5316\u65f6\u95f4\uff0c\u4e0d\u5fc5\u5728\u5faa\u73af\u4e2d\u6162\u6162\u5f80\u4e0b\u627e\u957f\u5ea6\u4e0d\u76f8\u7b49\u7684\u6728\u68cd\u3002\n  \n  4. \u53ea\u627e**\u6728\u68cd\u957f\u5ea6**\u4e0d\u5927\u4e8e**\u672a\u62fc\u957f\u5ea6rest**\u7684\u6240\u6709\u6728\u68cd\u3002\u6211\u770b\u5176\u4ed6\u5927\u90e8\u5206\u4eba\u7684\u505a\u6cd5\uff08\u5305\u62ec\u4e66\u4e0a\u7684\u554a\uff09\u90fd\u662f\u76f4\u63a5\u5728\u5faa\u73af\u4e2d\u5224\u65ad\uff0c\u4f46\u6211\u8ba4\u4e3a\u53ef\u4ee5\u6839\u636e\u6728\u68cd\u957f\u5ea6\u7684\u5355\u8c03\u6027\u6765**\u4e8c\u5206**\u627e\u51fa\u7b2c\u4e00\u4e2a**\u6728\u68cd\u957f\u5ea6**\u4e0d\u5927\u4e8e**\u672a\u62fc\u957f\u5ea6rest**\u3002\u5b83\u540e\u9762\u7684\u6728\u68cd\u4e00\u5b9a\u90fd\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u3002\n  \n  5. \u7528vis\u6570\u7ec4\u6807\u8bb0\u6bcf\u6839\u6728\u68cd\u662f\u5426\u7528\u8fc7\u3002\u53e6\u5916\u5728dfs\u56de\u6eaf\u7684\u65f6\u5019\u522b\u5fd8\u4e86\u53bb\u6389\u8fd9\u4e9b\u6807\u8bb0\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u6bcf\u6b21dfs\u4e4b\u524dmemset\u4e86\uff08memset\u7528\u591a\u7684\u8bdd\u901f\u5ea6\u53efTM\u6162\u4e86\uff09\uff01\n  \n### \u3000\u4f18\u53165\u7684\u4e60\u60ef\u53ef\u4ee5\u6cbf\u7528\u5230\u5404\u79cd\u7ade\u8d5b\n  \n  6. \u7531\u4e8e\u662f\u4ece\u5c0f\u5230\u5927\u679a\u4e3e \u539f\u59cb\u957f\u5ea6\uff0c\u56e0\u6b64\u7b2c\u4e00\u6b21\u53d1\u73b0\u7684\u7b54\u6848\u5c31\u662f\u6700\u5c0f\u957f\u5ea6\u3002dfs\u4e2d\u53ea\u8981\u53d1\u73b0\u6240\u6709\u7684\u6728\u68cd\u90fd\u51d1\u6210\u4e86\u82e5\u5e72\u6839\u539f\u957f\u5ea6\u7684\u957f\u68cd\uff08\u5bb9\u6613\u53d1\u73b0 **\u51d1\u51fa\u957f\u68cd\u7684\u6839\u6570=\u6240\u6709\u6728\u68cd\u7684\u957f\u5ea6\u4e4b\u548c/\u539f\u59cb\u957f\u5ea6**\uff09\uff0c\u7acb\u523b\u4e00\u5c42\u5c42\u9000\u51fadfs\uff0c\u4e0d\u7528\u6ede\u7559\uff0c\u9000\u5230dfs\u5916\u540e\u76f4\u63a5\u8f93\u51fa\u539f\u59cb\u957f\u5ea6\u5e76\u7ed3\u675f\u7a0b\u5e8f\u3002\n  \n  7. \u8fd8\u6709\u4e00\u4e2a\u96be\u60f3\u5374\u7279\u522b\u7279\u522b\u91cd\u8981\u7684\u4f18\u5316\uff1a\u5982\u679c**\u5f53\u524d\u957f\u68cd\u5269\u4f59\u7684\u672a\u62fc\u957f\u5ea6**\u7b49\u4e8e**\u5f53\u524d\u6728\u68cd\u7684\u957f\u5ea6**\u6216**\u539f\u59cb\u957f\u5ea6**\uff0c\u7ee7\u7eed\u62fc\u4e0b\u53bb\u65f6\u5374\u5931\u8d25\u4e86\uff0c\u5c31\u76f4\u63a5\u56de\u6eaf\u5e76\u6539\u4e4b\u524d\u62fc\u7684\u6728\u68cd\u3002\u6709\u4e9b\u4eba\u4e0d\u592a\u660e\u767d\u8fd9\u4e2a\u4f18\u5316\uff0c\u8fd9\u91cc\u7b80\u5355\u8bf4\u4e00\u4e0b\uff1a\n  \n\u3000**\u5f53\u524d\u957f\u68cd\u5269\u4f59\u7684\u672a\u62fc\u957f\u5ea6**\u7b49\u4e8e**\u5f53\u524d\u6728\u68cd\u7684\u957f\u5ea6**\u65f6\uff0c\u8fd9\u6839\u6728\u68cd\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\u663e\u7136\u662f\u62fc\u5230\u8fd9\uff08\u5982\u679c\u7528\u66f4\u591a\u77ed\u6728\u6839\u62fc\u5b8c\u5269\u4e0b\u7684\u8fd9\u6bb5\uff0c\u628a\u8fd9\u6839\u6728\u68cd\u7559\u5230\u540e\u9762\u663e\u7136\u4e0d\u5982\u628a\u66f4\u591a\u603b\u957f\u76f8\u7b49\u7684\u77ed\u6728\u68cd\u6254\u5230\u540e\u9762\uff09\u3002\u5982\u679c\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\u7ee7\u7eed\u62fc\u4e0b\u53bb\u5931\u8d25\u4e86\uff0c\u90a3\u80af\u5b9a\u662f\u4e4b\u524d\u7684\u6728\u68cd\u7528\u9519\u4e86\uff0c\u56de\u6eaf\u6539\u5373\u53ef\u3002$\\color{red}\\text{(update at 2019.7.24)}$\n \n\u3000**\u5f53\u524d\u957f\u68cd\u5269\u4f59\u7684\u672a\u62fc\u957f\u5ea6**\u7b49\u4e8e**\u539f\u59cb\u957f\u5ea6**\u65f6\uff0c\u8bf4\u660e\u8fd9\u6839\u539f\u6765\u7684\u957f\u68cd\u8fd8\u4e00\u70b9\u6ca1\u62fc\uff0c\u73b0\u5728\u6b63\u5728\u653e\u5165\u4e00\u6839\u6728\u68cd\u3002\u5f88\u660e\u663e\uff0c\u8fd9\u6839\u6728\u68cd\u8fd8\u6ca1\u6709\u8ddf\u5176\u5b83\u68cd\u5b50\u62fc\u63a5\uff0c\u5982\u679c\u73b0\u5728\u62fc\u4e0b\u53bb\u80fd\u6210\u529f\u8bdd\uff0c**\u5b83\u80af\u5b9a\u662f\u80fd\u7528\u4e0a\u7684\uff0c\u5373\u81ea\u7ec4\u6216\u4e0e\u5176\u5b83\u8fd8\u6ca1\u7528\u7684\u6728\u68cd\u62fc\u63a5**\u3002\u4f46\u7ee7\u7eed\u62fc\u4e0b\u53bb\u5374\u5931\u8d25\uff0c\u8bf4\u660e\u73b0\u5728\u8fd9\u6839\u6728\u68cd**\u4e0d\u80fd\u7528\u4e0a**\uff0c\u65e0\u6cd5\u5b8c\u6210\u62fc\u63a5\uff0c\u6240\u4ee5\u56de\u6eaf\u6539\u4e4b\u524d\u7684\u6728\u68cd\u3002\n  \n\u505a\u4e86\u8fd9\u4e48\u591a\u4f18\u5316\u53ef\u4ee5\u786e\u4fdd\u98de\u8dd1\u4e86\u2026\u2026\u641c\u7d22\u9898\u554a\uff0c\u6bcf\u62db\u4f18\u5316\u90fd\u8981\u5b66\uff0c\u5b66\u4e00\u62db\u8bf4\u4e0d\u5b9a\u7ade\u8d5b\u7684\u65f6\u5019\u5c31\u80fd\u8dd1\u7684\u5feb\u4e00\u70b9\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n    int x=0; bool f=1; char c=getchar();\n    for(;!isdigit(c);c=getchar()) if(c=='-') f=0;\n    for(; isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n    if(f) return x;\n    return 0-x;\n}\nint n,m,a[66],next[66],cnt,sum,len;\nbool used[66],ok; //used\u6570\u7ec4\u5373\u4f18\u53165\u7684vis\u6570\u7ec4\uff0c\u8bb0\u5f55\u6bcf\u6839\u6728\u68cd\u662f\u5426\u7528\u8fc7\uff1bok\u8bb0\u5f55\u662f\u5426\u5df2\u627e\u5230\u7b54\u6848\u3002 \nbool cmp(int a,int b){return a>b;}\nvoid dfs(int k,int last,int rest){ //k\u4e3a\u6b63\u5728\u62fc\u7684\u6728\u68cd\u7684\u7f16\u53f7\uff0clast\u4e3a\u6b63\u5728\u62fc\u7684\u6728\u68cd\u7684\u524d\u4e00\u8282\u7f16\u53f7\uff0crest\u4e3a\u8be5\u6728\u68cd\u8fd8\u672a\u62fc\u7684\u957f\u5ea6\n    int i;\n    if(!rest){ //\u672a\u62fc\u7684\u957f\u5ea6\u4e3a0\uff0c\u8bf4\u660e\u8fd9\u6839\u539f\u59cb\u957f\u68cd\u62fc\u5b8c\u4e86\uff0c\u51c6\u5907\u62fc\u4e0b\u4e00\u4e2a \n        if(k==m){ok=1; return;} //\u4f18\u53166\uff0c\u5168\u90e8\u62fc\u5b8c\u5e76\u7b26\u5408\u8981\u6c42\uff0c\u627e\u5230\u7b54\u6848\uff0c\u76f4\u63a5\u8fd4\u56de \n        \n        for(i=1;i<=cnt;i++) //\u627e\u4e00\u4e2a\u8fd8\u6ca1\u7528\u7684\u6700\u957f\u7684\u6728\u68cd\u6253\u5934\u5373\u53ef\u3002\u53cd\u6b63\u8981\u60f3\u5168\u90fd\u62fc\u63a5\u6210\u529f\uff0c\u6bcf\u6839\u6728\u68cd\u90fd\u5f97\u7528\u4e0a \n            if(!used[i]) break;\n        used[i]=1; \n        dfs(k+1,i,len-a[i]);\n        used[i]=0;\n        if(ok) return; //\u4f18\u53166\uff0c\u627e\u5230\u7b54\u6848\u5c31\u9000\u51fa \n    }\n    //\u4f18\u53164\uff0c\u4e8c\u5206\u627e\u7b2c\u4e00\u4e2a \u6728\u68cd\u957f\u5ea6\u4e0d\u5927\u4e8e\u672a\u62fc\u957f\u5ea6rest \u7684\u4f4d\u7f6e \n    int l=last+1, r=cnt, mid;\n    while(l<r){\n        mid=(l+r)>>1;\n        if(a[mid]<=rest) r=mid;\n        else l=mid+1;\n    }\n    for(i=l;i<=cnt;i++){\n        if(!used[i]){ //\u4f18\u53165\uff0c\u5224\u65ad\u6728\u68cd\u662f\u5426\u7528\u8fc7 \n            used[i]=1;\n            dfs(k,i,rest-a[i]);\n            used[i]=0;\n            if(ok) return; //\u4f18\u53166\uff0c\u627e\u5230\u7b54\u6848\u5c31\u9000\u51fa \n            \n            if(rest==a[i] || rest==len) return; //\u4f18\u53167 \n            i=next[i]; //\u4f18\u53163 \n            if(i==cnt) return;\n        }\n    }\n    //\u5230\u4e86\u8fd9\u91cc\uff0c\u8bf4\u660e\u8fd9\u65f6\u5019\u62fc\u4e0d\u6210\u5f53\u524d\u8fd9\u6839\u539f\u59cb\u6728\u68cd\u4e86\uff0c\u4f20\u56de\u5931\u8d25\u4fe1\u606f\u5e76\u4fee\u6539\u4e4b\u524d\u62fc\u7684\u6728\u68cd \n}\nint main(){\n    n=read();\n    int d;\n    for(int i=1;i<=n;i++){\n        d=read();\n        if(d>50) continue;\n        a[++cnt]=d;\n        sum+=d;\n    }\n    sort(a+1,a+cnt+1,cmp); //\u4f18\u53161\uff0c\u6728\u68cd\u6309\u957f\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f \n    //\u4f18\u53163\uff0c\u9884\u5904\u7406next\u6570\u7ec4 \n    next[cnt]=cnt;\n    for(int i=cnt-1;i>0;i--){\n        if(a[i]==a[i+1]) next[i]=next[i+1];\n        else next[i]=i;\n    }\n    for(len=a[1];len<=sum/2;len++){ //\u679a\u4e3e\u539f\u59cb\u957f\u5ea6 \n        if(sum%len!=0) continue; //\u5982\u679c\u4e0d\u80fd\u62fc\u51fa\u6574\u6570\u6839 \u5c31\u8df3\u8fc7 \n        m=sum/len; //\u4f18\u53166\u4e2d\u7684\u90a3\u4e2a\u8ba1\u7b97 \n        ok=0;\n        used[1]=1;\n        dfs(1,1,len-a[1]);\n        used[1]=0;\n        if(ok){printf(\"%d\\n\",len); return 0;} //\u4f18\u53166\uff0c\u8f93\u51fa\u7b54\u6848\uff0c\u9000 \n    }\n    printf(\"%d\\n\",sum); return 0;\n}\n```\n\n\u6709\u95ee\u9898\u53ef\u4ee5\u8bc4\u8bba",
        "postTime": 1530865717,
        "uid": 34031,
        "name": "Kaori",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "\u66b4\u641c\u7684\u601d\u8def\u5e76\u4e0d\u96be\u60f3\u5230\uff0c\u4e3b\u8981\u96be\u70b9\u662f\u5404\u79cd\u4f18\u5316\u3001\u5404\u79cd\u526a\u679d\uff1a\n\n1. \u9884\u5148\u5904\u7406\u51fa\u6240\u6709\u6728\u68cd\u7684\u603b\u957f\u5ea6\uff0c\u4e14\u4fdd\u8bc1\u679a\u4e3e\u7b54\u6848\u7684\u503c\u80fd\u88ab\u603b\u957f\u5ea6\u6574\u9664\u3002\n\n2. \u6bcf\u6839\u6728\u68cd\u7684\u957f\u5ea6\u53ef\u7528\u6876\u6765\u5b58\u50a8\uff0c\u5e76\u4e14\u9884\u5148\u5904\u7406\u51fa\u6700\u957f\u7684\u548c\u6700\u77ed\u7684\u6728\u68cd\u7684\u957f\u5ea6\uff0c\u641c\u7d22\u65f6\u4ece\u6700\u5927\u957f\u5ea6\u5230\u6700\u5c0f\u957f\u5ea6\u9012\u51cf\u679a\u4e3e\u3002\n\n3. \u82e5\u62fc\u63a5\u5f53\u524d\u6728\u68cd\u65f6\u5df2\u7528\u4e86\u4e00\u6839\u957f\u4e3aX\u7684\u6728\u68cd\uff0c\u5219dfs\u65f6\u4ece\u957f\u5ea6X\u5f00\u59cb\u641c\u7d22\u3002\n\n4. \u82e5\u67d0\u7ec4\u62fc\u63a5\u4e0d\u6210\u7acb\uff0c\u4e14\u6b64\u65f6 \u5df2\u62fc\u63a5\u7684\u957f\u5ea6\u4e3a0 \u6216 \u5f53\u524d\u5df2\u62fc\u63a5\u7684\u957f\u5ea6\u4e0e\u521a\u624d\u679a\u4e3e\u7684\u957f\u5ea6\u4e4b\u548c\u4e3a\u6700\u7ec8\u679a\u4e3e\u7684\u7b54\u6848 \u65f6\uff0c\u5219\u53ef\u76f4\u63a5\u8df3\u51fa\u5faa\u73af\uff0c\u56e0\u4e3a\u6b64\u65f6\u7ee7\u7eed\u679a\u4e3e\u5176\u5b83\u66f4\u5c0f\u7684\u503c\u65f6\uff0c\u663e\u7136\u53ef\u80fd\u60c5\u51b5\u66f4\u5c11\uff0c\u4e14\u540c\u6837\u51d1\u4e0d\u5b8c\u3002\n\n5. \u6ce8\u610f\u5e38\u6570\u4e0d\u8981\u592a\u5927\u3002\n\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\nconst int N = 70 ;\nint n , cnt , tot , maxn , minn , tm[ N ] /* 2 */ ; \nvoid dfs( int res , int sum , int target , int p ) {\n    if( res == 0 ) {\n        printf(\"%d\", target  );\n        exit( 0 );\n    }\n    if( sum == target ) {\n        dfs( res - 1 , 0 , target , maxn );\n        return;\n    }\n    for( int i = p ; i >= minn ; i -- ) { // 2  3 \n        if( tm[ i ] && i + sum <= target ) {\n            tm[ i ] -- ;\n            dfs( res , sum + i , target , i );\n            tm[ i ] ++ ;\n            if ( sum == 0 || sum + i == target )  //4\n                break;\n        }\n    }\n    return;\n}\nint main() {\n    scanf(\"%d\" , &n ) ;\n    minn = N ;\n    int temp;\n    while( n -- ) {\n        scanf(\"%d\" , &temp );\n        if( temp <= 50 ) {\n            cnt ++;\n            tm[ temp ] ++;\n            tot += temp;\n            maxn = maxn > temp ? maxn : temp ;   //1\n            minn = minn < temp ? minn : temp ;\n        }\n    }\n    temp = tot >> 1;\n    for( int i = maxn ; i <= temp ; i ++ ) {\n        if( tot % i == 0 ) {\n            dfs( tot / i , 0 , i , maxn );\n        }\n    }\n    printf(\"%d\" , tot );\n    return 0;\n}\n```",
        "postTime": 1513330843,
        "uid": 30042,
        "name": "\u6797\u5219\u5f90",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": " _\u9898\u76ee\u94fe\u63a5\uff1a _[P1120]_ _ (https://www.luogu.org/problemnew/show/P1120)\n \u672c\u849f\u84bb\u82b1\u4e86\u534a\u5929\u624d\u809d\u51fa\u6765\u8fd9\u9053\u9898\uff0c\u89c1\u5230AC\u65f6\u5185\u725b\u6ee1\u9762\u2026\u2026\n # \u9898\u76ee\u89e3\u91ca\n\u770b\u5230\u8fd9\u4e2a\u9898\u76ee\u4f60\u53ef\u80fd\u4f1a\u65e0\u4ece\u4e0b\u624b~~\uff08\u5176\u5b9e\u65e0\u4ece\u4e0b\u624b\u7684\u53ea\u662f\u6211\u81ea\u5df1\u800c\u5df2\uff09~~\uff0c\u4f46\u4eba\u5bb6\u7684\u6570\u636e\u8303\u56f4\u4e5f\u624d\u4e0d\u8fc765\u00d750\uff0c\u7528\u66b4\u641c\u5c31\u884c\u4e86\u3002\n\n \u81f3\u4e8e\u9898\u76ee\u4e2d\u7684\u201c\u820d\u53bb\u957f\u5ea6\u8d85\u8fc750\u7684\u5c0f\u6728\u68cd\u201d\u7684\u610f\u601d\u662f\uff0c\u4f60\u4e0d\u7528\u7406\u90a3\u4e9b\u8d85\u8fc750\u7684\u6570\u636e\uff0c\u76f4\u63a5\u6254\u6389\u5c31\u884c\u4e86\u3002\n \n \u90a3\u7a76\u7adf\u8be5\u600e\u4e48\u66b4\u641c\u5462\uff1f\u5f88\u660e\u663eBFS\u662f\u9876\u4e0d\u4f4f\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u7528\u6df1\u641c\u3002\u6211\u521a\u5f00\u59cb\u7684\u601d\u8def,\u5c31\u662f\u904d\u5386\u6240\u6709\u7684\u53ef\u80fd\u7ec4\u5408\u7684\u957f\u5ea6\uff0c\u7136\u540e\u518d\u5bf950\u6839\u6728\u68d2\u8fdb\u884c\u5168\u6392\u5e8f\uff0c\u6392\u5e8f\u8fc7\u7a0b\u4e2d\u518d\u8fdb\u884c\u526a\u679d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6~~\u4e5f\u4e0d\u8fc7\u5c31~~\u662fO(n!\\*m)~~\u800c\u5df2~~\uff0c65\uff01\\*m\u7684\u8bdd\u2026\u2026\u90a3\u80af\u5b9a\u4f1a\u7206\u70b8\u5566\uff01\u6240\u4ee5\u63a5\u4e0b\u6765\u6211\u5c31\u6765\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u4e00\u4e0b\u600e\u4e48\u526a\u679d\u3002**Here we go!**\n \n # \u5982\u4f55\u526a\u679d\n \uff08**\u540d\u8bcd\u8bf4\u660e\uff1a**\u539f\u957f\uff1a\u53ef\u80fd\u7684\u539f\u6728\u68cd\u957f\u5ea6\uff0c\u5c0f\u6728\u68cd/\u6728\u68cd/\u5927\u6728\u68cd\uff1a\u8fd8\u672a\u62fc\u63a5\u7684\u6728\u68cd\uff0c\u539f\u6728\u68cd\uff1a\u957f\u5ea6\u4e3a\u539f\u957f\u7684\u5df2\u7ecf\u62fc\u597d\u7684\u6728\u68cd\uff09\n ## 1\uff1a\u57fa\u7840\u526a\u679d\n I\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981**\u5bf9\u8fd9\u4e9b\u8fdb\u6765\u7684\u6570\u636e\u6392\u4e2a\u5e8f\uff0c\u5927\u7684\u5728\u524d\u5c0f\u7684\u5728\u540e\u3002**\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a~~\u6253\u602a\u7684\u65f6\u5019\u4e0d\u90fd\u662f\u5148\u5f00\u5927\u518dA\u4e00\u4e0b\u8865\u5200\u7684\u5417~~\u6392\u597d\u5e8f\u7684\u6570\u7ec4\u66f4\u65b9\u4fbf\u4f18\u53162\u7684\u64cd\u4f5c\uff0c\u800c\u4e14\u5c0f\u7684\u6728\u68d2\u7075\u6d3b\u6027\u66f4\u5f3a\uff0c\u653e\u5728\u524d\u9762\u53ef\u4ee5\u7ec4\u5408\u51fa\u975e\u5e38\u591a\u6ca1\u7528\u7684\u7ed3\u679c\uff0c\u4f60\u60f3\u60f3\u770b\u5927\u6728\u68d2\u90fd\u88ab\u4f60\u6254\u4e00\u8fb9\u53bb\u4e86\uff0c\u5c0f\u6728\u68cd\u7ed9\u7528\u5b8c\u4e86\uff0c\u5230\u65f6\u5019\u600e\u4e48\u62fc\u6210\u957f\u5ea6\u4e00\u6837\u7684\u6728\u68cd\uff1f\n \n II\u5176\u6b21\u6211\u4eec\u5f88\u5bb9\u6613\u4e5f\u53ef\u4ee5\u77e5\u9053\uff0c\u5982\u679c\u5c1d\u8bd5\u5c06\u4e00\u5c0f\u6bb5\u6728\u68d2\u62fc\u4e0a\u53bb\u5374\u6ca1\u6709\u6210\u529f\u7684\u8bdd\uff0c\u90a3\u4e48\u4ee5\u540e\u4e5f\u5c31**\u522b\u518d\u5c1d\u8bd5\u5176\u5b83\u7684\u957f\u5ea6\u76f8\u540c\u7684\u6728\u68d2**\u4e86\uff0c\u76f4\u63a5\u4e00\u4e2anxt\u6570\u7ec4\u8f6c\u5230\u4e0b\u4e00\u4e2a\u3002\u800cnxt\u6570\u7ec4\u4e5f\u662f\u53ea\u6709\u5728\u4f18\u5316I\u540e\u624d\u53ef\u4ee5\u5efa\u7acb\u7684\u3002\n \n III\u7ecf\u8fc7\u4e00\u756a~~\u54f2\u5b66~~\u5206\u6790\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u62fc\u597d\u7684\u6728\u68cd\u7684\u957f\u5ea6\u80af\u5b9a\u662f\u6240\u6709\u780d\u6210\u7684\u5c0f\u6728\u68cd\u957f\u5ea6\u4e4b\u548c\u7684\u56e0\u6570\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u904d\u5386\u6240\u6709\u7684\u539f\u957f\u65f6\uff0c\u5e94\u8be5**\u5224\u65ad\u6728\u68cd\u603b\u957f\u662f\u5426\u53ef\u4ee5\u6574\u9664\u539f\u957f\u3002**\n \n IV**\u4f7f\u7528vis\u6570\u7ec4\u6765\u5b58\u50a8\u662f\u5426\u4f7f\u7528\u8fc7\u67d0\u6728\u68cd**\uff0c\u800c\u64a4\u9500\u4f7f\u7528\u65f6\u8bb0\u5f97\u5c06vis\u6539\u6389\u3002\n ## 2\uff1a\u666e\u901a\u526a\u679d\n V\u6211\u4eec\u53ef\u4ee5\u6e05\u695a\u5f97\u77e5\u9053\uff0c\u6240\u6709\u7684\u6728\u68cd\u90fd\u662f\u8981\u7528\u6765\u62fc\u63a5\u7684\uff0c\u4e0d\u80fd\u8bf4\u4e22\u6389\u67d0\u4e00\u6839\u770b\u7740\u4e0d\u4e2d\u610f\u7684\u6728\u68cd\u3002\u6240\u4ee5\u5462\uff0c\u5f53\u4f60\u5df2\u7ecf\u62fc\u597d\u4e86\u4e00\u6839\u539f\u6728\u68cd\uff0c\u5f00\u59cb**\u5c1d\u8bd5\u62fc\u65b0\u7684\u4e00\u6839\u6728\u68cd\u65f6\uff0c\u8bf7\u9009\u62e9\u6700\u5927\u7684\u90a3\u6839\u8fd8\u6ca1\u7528\u6765\u62fc\u63a5\u7684\u6728\u68cd\uff0c**\u53cd\u6b63\u8fdf\u65e9\u8981\u7528\u4e0a\u3002\uff08\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u7528\u6700\u5927\u7684\u53c2\u89c1\u526a\u679dI\uff09\n \n VI\u5728\u62fc\u4e00\u6839\u539f\u6728\u68cd\u7684\u65f6\u5019\u6ce8\u610f\uff0c\u4e00\u5b9a\u8981**\u4ece\u6bd4\u4e0a\u4e00\u6839\u62fc\u8fdb\u6b64\u539f\u6728\u68cd\u7684\u6728\u68cd\u957f\u5ea6\u66f4\u5c0f\u7684\u6728\u68cd\u5f00\u59cb\u5c1d\u8bd5\u62fc\u63a5\u3002**\u4f60\u60f3\u60f3\u4f60\u66fe\u7ecf\u5c1d\u8bd5\u8fc7\u5c06\u4e00\u6839\u5927\u6728\u68cd\u62fc\u8fdb\u53bb\u53d1\u73b0\u62fc\u4e0d\u4e86\uff0c\u9009\u4e86\u4e00\u4e2a\u8f83\u5c0f\u7684\uff0c\u73b0\u5728\u53eb\u4f60\u9009\u4e0b\u4e00\u6839\uff0c\u4f60\u5374\u53c8\u9009\u4e86\u90a3\u6839\u5927\u6728\u68cd\u2026\u2026\uff08\u8b66\u544a\uff1a\u5f53\u4f60\u5f00\u59cb\u62fc\u4e00\u6839\u65b0\u7684\u539f\u6728\u68d2\u65f6\u8bf7\u4ece\u5934\u5f00\u59cb\u5c1d\u8bd5\u62fc\u63a5\uff09\n \n VII\u5f53\u4f60**\u8fd8\u5269\u6700\u540e\u4e00\u6839\u539f\u6728\u68d2\u6ca1\u6709\u62fc\u63a5\u65f6\u76f4\u63a5\u8fd4\u56de\u6210\u529f\u3002**\u56e0\u4e3a\u6839\u636eIII\u4f60\u5df2\u7ecf\u8fdb\u884c\u8fc7\u6574\u9664\u5224\u65ad\u4e86\uff0c\u5269\u4f59\u7684\u5c0f\u6728\u68d2\u7684\u957f\u5ea6\u603b\u548c\u5fc5\u5b9a\u5c31\u662f\u539f\u957f\uff0c\u800c\u4e14\u4e0d\u7ba1\u600e\u4e48\u62fc\u90fd\u6ca1\u95ee\u9898\u3002\n ## 3\uff1a\u8fdb\u9636\u526a\u679d\n VIII\u5982\u679c\u53d1\u73b0\u5728\u5b9e\u73b0V\u4e4b\u540e**\u6700\u5927\u7684\u90a3\u6839\u6728\u68cd\u65e0\u6cd5\u4e0e\u5176\u4ed6\u7684\u6728\u68cd\u62fc\u6210\u539f\u6728\u68cd\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u4e0a\u4e00\u7ea7\u62c6\u4e86\u4e0a\u4e00\u6839\u539f\u6728\u68cd\u91cd\u65b0\u62fc\uff0c**\u56e0\u4e3a\u5982\u679c\u4e0d\u8fd9\u4e48\u505a\u7684\u8bdd\u6700\u957f\u7684\u90a3\u6839\u6728\u68cd\u662f\u6c38\u8fdc\u65e0\u6cd5\u62fc\u6210\u539f\u6728\u68cd\u7684\u3002\n \n IX\u82e5\u4f60\u5728\u62fc\u4e00\u4e2a\u539f\u6728\u68d2\u65f6\u8fd8\u5269i\u4e2a\u5355\u4f4d\u7684\u957f\u5ea6\u6ca1\u62fc\u4e0a\u65f6\uff0c\u6070\u597d\u6709\u4e00\u6839\u957f\u5ea6\u5c31\u662fi\u7684\u6728\u68d2\uff0c\u90a3\u4e48\u4f18\u5148\u9009\u8fd9\u4e2a\uff08\u8fd9\u4e2a\u5728\u524d\u9762\u7684\u4f18\u5316\u91cc\u8bf4\u4e86\uff0c\u91cd\u70b9\u5728\u540e\u9762\uff09\uff0c\u4f46**\u5982\u679c\u8fd9\u6839\u6728\u68d2\u62fc\u8fdb\u53bb\u540e\u53d1\u73b0\u5269\u4f59\u7684\u6728\u68d2\u662f\u4e0d\u80fd\u7ec4\u5408\u6210\u539f\u6728\u68d2\u7684\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\u5931\u8d25\uff0c**\u56e0\u4e3a\u4f60\u8981\u6362\u8fd9\u6839\u6728\u68d2\u4e5f\u53ea\u80fd\u6362\u6210\u957f\u5ea6\u66f4\u5c0f\u7684\u51e0\u6bb5\uff0c\u4f7f\u5269\u4f59\u6728\u68d2\u7684\u7075\u6d3b\u6027\u53cd\u800c\u66f4\u4f4e\uff0c\u5c31\u66f4\u4e0d\u53ef\u80fd\u62fc\u6210\u539f\u6728\u68d2\u3002\u6240\u4ee5\u76f4\u63a5\u8fd4\u56de\u53bb\u91cd\u505a\u4e0a\u4e00\u6839\u539f\u6728\u68d2\u3002\n # \u4e0a\u4ee3\u7801\n \u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u5e94\u8be5\u5df2\u7ecf\u591f\u4e86\u5427\u3002\u81f3\u4e8e\u90a3\u4e9b\u5927\u795e\u526a\u679d\u6211\u662f\u4e0d\u4f1a\u7684\uff0c\u53cd\u6b63\u591f\u5199\u51fa\u8fd9\u9053\u9898\u5c31\u884c\u4e86\u3002\u90a3\u4e48\u5c31\u6709\u8bf7\u5404\u4f4d\u5ba2\u5b98\u6765\u770b\u4e00\u4e0b\u6211\u7684\u4ee3\u7801\u5427\uff0c\u732e\u4e11\u4e86~~\uff08555\u672c\u4eba\u849f\u84bb\u3010\u4e00\u8138\u5bb3\u7f9e\u3011555\u795e\u7287\u52ff\u55b7\u3010\u4e00\u8138\u5bb3\u6015\u3011\uff09~~\n ```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint line[65],len,nxt[65],end,sum;\nbool vis[65];\nbool cmp(const int a,const int b)\n{\n\treturn a>b;\n}\nbool perm(int pre,int fromp)\n{\n\tint i;\n\tif(pre%len==0)\n\t{\n\t\tif(sum-pre==len) return true;//\u4f18\u5316VII \n\t\tfor(i=2;i<=end && vis[i];i++) ;//\u4f18\u5316V \n\t\tvis[i]=true;\n\t\tif(perm(pre+line[i],2)) return true;\n\t\tvis[i]=false;//\u540e\u9762\u662felse\u4e0d\u8fd0\u884c\uff0c\u76f4\u63a5\u5230\u540e\u9762\u7684return false\uff1b\u8fd9\u5c31\u662f\u4f18\u5316VIII \n\t}\n    else for(;fromp<=end;fromp++)//\u4f18\u5316VI\uff0c\u76f4\u63a5\u4ece\u7ee7\u627f\u8fc7\u6765\u7684fromp\u5f00\u59cb\u904d\u5386 \n\t{\n       \tif(!vis[fromp])//\u4f18\u5316IV \n       \t{\n       \t\tif(pre%len+line[fromp]<=len)\n       \t\t{\n       \t\t\tvis[fromp]=true;\n   \t\t\t\tif(perm(pre+line[fromp],fromp)) return true;//fromp\u5373\u4e3a\u4f18\u5316VI\n\t\t\t\tvis[fromp]=false;\n\t\t\t\tif(pre%len+line[fromp]==len) return false;//\u4f18\u5316IX \n\t\t\t}\n\t\t\tfromp=nxt[line[fromp]];//\u4f18\u5316II \n\t\t}\n\t}\n    return false;\n}\n\nint main()\n{\n    int n,iA,in,maxi=0,cha=0,cun=0;\n    scanf(\"%d\\n\",&n);\n    for (iA=1;iA<=n;iA++)\n    {\n    \tscanf(\"%d\",&in);\n    \tif(in<=50)\n\t\t{\n\t\t\tmaxi=max(maxi,in);\n\t\t\tsum+=in;\n\t\t\tline[iA-cha]=in;\n\t\t}\n    \telse cha++;\n\t}\n\tsort(line+1,line+n-cha+1,cmp);//\u4f18\u5316I \n\tfor(iA=1;iA<=n-cha;iA++)\n\t\tif(line[iA]!=cun)\n\t\t{\n\t\t\tnxt[cun]=iA-1;\n\t\t\tcun=line[iA];\n\t\t}\n\tend=n-cha;vis[1]=true;nxt[line[end]]=end;\n\tfor(len=maxi;len<=sum/2;len++)\n\t{\n\t\tif(sum%len!=0) continue;//\u4f18\u5316III \n    \tif(perm(line[1],2)) break;\n\t}\n    if(len>sum/2) cout<<sum;\n    else cout<<len;\n    return 0;\n}\n```\n\u54b3\u54b3\u7801\u5b57\u7801\u7684\u597d\u8f9b\u82e6\uff0c\u795e\u7287\u52ff\u55b7\u54c7\uff0c\u87f9\u87f9\uff01\uff08~~\u5982\u679c\u60a8\u80fd\u70b9\u4e2a\u8d5e\u7684\u8bdd\u2026\u2026~~\u60f3\u4ec0\u4e48\u5462\u54b3\u54b3\uff09",
        "postTime": 1544256259,
        "uid": 153345,
        "name": "NoyXRY",
        "ccfLevel": 0,
        "title": "P1120\u5c0f\u6728\u68cd \u7ed3\u9898\u62a5\u544a"
    },
    {
        "content": "//\u672c\u9898\u89e3\u90e8\u5206\u501f\u9274\u697c\u4e0a\uff0c\u5148\u8868\u793a\u611f\u8c22\uff0c\u4e5f\u8bf7\u52ff\u6000\u7591\u6284\u88ad\n\n\n \n \n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int N=70;\nint n,a[N],cnt,maxn,maxnn;\nbool cmp(int x,int y){return x>y;}\nbool use[N];\ninline void dfs(int ans,int sum,int goal,int now){\n    if(sum*goal==maxn){printf(\"%d\\n\",goal); exit(0);}   //\u56e0\u4e3a\u516c\u56e0\u6570\u662f\u4ece\u5c0f\u5230\u5927\u6240\u4ee5\u8fd9\u91cc\u6709\u7b54\u6848\u76f4\u63a5\u9000\u51fa\n    if(ans==goal){dfs(0,sum+1,goal,1); return;}    //\u6ee1\u8db3\u957f\u5ea6 \u4e0b\u4e00\u7ec4 \u5982\u679c\u4e0d\u884c\u76f4\u63a5return\n    if(goal-ans<a[cnt])return;    //\u5982\u679c\u6700\u5c0f\u957f\u5ea6\u5927\u4e8e\u672c\u7ec4\u5269\u4f59\u957f\u5ea6return\n    for(register int i=now;i<=cnt;i++)\n        if(!use[i] && ans+a[i]<=goal){\n            use[i]=1;\n            dfs(ans+a[i],sum,goal,i+1);\n            use[i]=0;\n            if(ans+a[i]==goal || ans==0)break;   //\u5982\u679c\u80fd\u7ec4\u6210\u4e00\u7ec4\u5374\u4e0d\u53ef\u884c\u6216\u8005\u6709\u4e00\u7ec4\u884c\u4e0d\u901a\u76f4\u63a5\u9000\u51fa\n            while(a[i]==a[i+1])i++;\n        }\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(register int i=1;i<=n;i++){\n        int x;\n        scanf(\"%d\",&x);\n        if(x<=50){a[++cnt]=x; maxn+=a[cnt]; maxnn=max(a[cnt],maxnn);}\n    }\n    sort(a+1,a+cnt+1,cmp);    //\u6392\u5e8f\u4f18\u5316\n    for(register int i=maxnn;i<=maxn/2;i++)  //\u6700\u5c0f\u7684\u7b54\u6848\u5927\u4e8e\u7b49\u4e8e\u6700\u5927\u7684\u4e00\u6839\uff0c\u6240\u4ee5\u4ece\u6700\u5927\u7684\u4e00\u6839\u5f00\u59cb\n        if(maxn%i==0)dfs(0,0,i,1);    //\u5982\u679c\u662f\u603b\u548c\u7684\u516c\u56e0\u6570 \u90a3\u4e48dfs \n    printf(\"%d\\n\",maxn);\n    return 0;\n}\n```",
        "postTime": 1507280098,
        "uid": 30688,
        "name": "Code_Together",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "## \u9898\u76ee\u63cf\u8ff0\uff1a\n\n\u4e54\u6cbb\u6709\u4e00\u4e9b\u540c\u6837\u957f\u7684\u5c0f\u6728\u68cd\uff0c\u4ed6\u628a\u8fd9\u4e9b\u6728\u68cd\u968f\u610f\u780d\u6210\u51e0\u6bb5\uff0c\u76f4\u5230\u6bcf\u6bb5\u7684\u957f\u90fd\u4e0d\u8d85\u8fc7 50 \u3002\u73b0\u5728\uff0c\u4ed6\u60f3\u628a\u5c0f\u6728\u68cd\u62fc\u63a5\u6210\u539f\u6765\u7684\u6837\u5b50\uff0c\u4f46\u662f\u5374\u5fd8\u8bb0\u4e86\u81ea\u5df1\u5f00\u59cb\u65f6\u6709\u591a\u5c11\u6839\u6728\u68cd\u548c\u5b83\u4eec\u7684\u957f\u5ea6\u3002\u7ed9\u51fa\u6bcf\u6bb5\u5c0f\u6728\u68cd\u7684\u957f\u5ea6\uff0c\u7f16\u7a0b\u5e2e\u4ed6\u627e\u51fa\u539f\u59cb\u6728\u68cd\u7684\u6700\u5c0f\u53ef\u80fd\u957f\u5ea6\u3002\n## \u60f3\u6cd5\uff1a\n\n\u9996\u5148\u5728\u8bfb\u5165\u7684\u65f6\u5019\u5ffd\u7565\u6389\u957f\u5ea6\u5927\u4e8e50\u7684\u6728\u68cd\uff08\u6700\u91cd\u8981\uff09\uff0c\u987a\u4fbf\u8fd8\u8981\u8bb0\u5f55\u4e00\u4e0b\u6700\u77ed\u7684\u6728\u68cd\u548c\u6700\u957f\u7684\u6728\u68cd\u7684\u957f\u5ea6\uff08\u4e3a\u4e4b\u540e\u7684\u8fd0\u7b97\u526a\u679d\uff09\uff0c\u7136\u540e\u6309\u7167\u6728\u68cd\u7684\u957f\u5ea6\u505a\u4e00\u6b21\u6392\u5e8f\uff08\u56e0\u4e3a\u6728\u68cd\u957f\u5ea6\u90fd\u5c0f\u4e8e\u7b49\u4e8e50\uff0c\u672c\u4eba\u7528\u7684\u662f\u6876\u6392\u5e8f\uff09\uff0c\u63a5\u7740\u5c31\u53ef\u4ee5\u5f00\u59cb\u641c\u7d22\u4e86\u3002\n## \u641c\u7d22\u65f6\u7684\u7b56\u7565\uff1a\n\n1\u3001\u4ece\u6700\u957f\u7684\u6728\u68cd\u7684\u957f\u5ea6\u5f00\u59cb\uff0c\u679a\u4e3e\u539f\u5148\u6bcf\u6839\u6728\u68cd\u7684\u53ef\u80fd\u957f\u5ea6\uff0c\u4e00\u76f4\u5230\uff08\u526a\u679d\u4e00\uff1a\uff09 \u603b\u957f\u5ea6\u7684\u4e00\u534a\uff08\u5982\u679c\u539f\u5148\u6728\u68cd\u7684\u6570\u91cf\u4e0d\u4e3a1\uff0c\u5219\u539f\u5148\u6728\u68cd\u7684\u957f\u5ea6\u5fc5\u7136\u5c0f\u4e8e\u6240\u6709\u6728\u68cd\u603b\u957f\u5ea6\u7684\u4e00\u534a\uff09\u3002\uff08\u5c0f\u8d34\u58eb\uff1a\u5982\u679c\u679a\u4e3e\u5b8c\u540e\uff0c\u4ecd\u7136\u6ca1\u6709\u8f93\u51fa\u7b54\u6848\uff0c\u5219\u76f4\u63a5\u8f93\u51fa\u603b\u957f\u5ea6\u5373\u53ef\uff09\uff08\u56e0\u4e3a\u5982\u679c\u4e00\u76f4\u5230\u603b\u957f\u5ea6\u7684\u4e00\u534a\u90fd\u6ca1\u6709\u89e3\uff0c\u5219\u8bf4\u660e\u539f\u5148\u7684\u6728\u68cd\u5c31\u53ea\u6709\u4e00\u6839\u800c\u5df2\uff09\n\n2\u3001\u4ece\uff08\u526a\u679d\u4e8c\uff09\u6700\u957f\u7684\u6728\u68cd\u5f00\u59cb\u9009\u62e9\uff08\u5982\u4ece\u6700\u77ed\u7684\u6728\u68cd\u5f00\u59cb\u641c\u7d22\uff0c\u4f1a\u589e\u52a0\u56de\u6eaf\u6b21\u6570\uff0c\u5177\u4f53\u539f\u56e0\u7559\u7ed9\u8bfb\u8005\u81ea\u884c\u601d\u8003\uff09\uff0c\u9010\u4e00\u9012\u51cf\uff0c\u5982\u679c\u5f53\u524d\u5df2\u9009\u62e9\u7684\u6728\u68cd\u7684\u603b\u957f\u5ea6\u52a0\u4e0a\u76ee\u524d\u51c6\u5907\u9009\u62e9\u7684\u6728\u68cd\u7684\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e\u9700\u8981\u7684\u957f\u5ea6\uff0c\u5219\u5206\u522b\u641c\u7d22\u662f\u5426\u9009\u62e9\u9009\u62e9\u8be5\u6728\u68cd\u7684\u60c5\u51b5\uff08\u7c7b\u4f3c\u4e8e01\u80cc\u5305\uff09\n\n3\u3001\u5982\u679c\u5df2\u7ecf\u62fc\u51d1\u597d\u4e86\u6240\u6709\u7684\u6728\u68cd\uff0c\u5219\u76f4\u63a5\u8f93\u51fa\u5f53\u524d\u679a\u4e3e\u7684\u539f\u5148\u6728\u68cd\u957f\u5ea6\u5e76\u7ed3\u675f\u7a0b\u5e8f\uff08\u5982\u679c\u5df2\u627e\u5230\u6700\u4f18\u89e3\uff0c\u5219\u4e0d\u9700\u8981\u7ee7\u7eed\u641c\u7d22\uff09\uff1b\u5982\u679c\u5f53\u524d\u62fc\u51d1\u7684\u6728\u68cd\u7684\u957f\u5ea6\u6070\u597d\u7b49\u4e8e\u679a\u4e3e\u7684\u539f\u5148\u6728\u68cd\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u91cd\u65b0\u4ece\u6700\u957f\u7684\u6728\u68cd\u5f00\u59cb\u641c\u7d22\uff08\u6ce8\u610f\uff1a\u4e00\u5b9a\u662f\u4ece\u6700\u957f\u7684\u6728\u68cd\u5f00\u59cb\u641c\u7d22\uff0c\u4f46\u8981\u5224\u65ad\u5b83\u662f\u5426\u5df2\u88ab\u9009\u5b9a\uff0c\u5728\u6bcf\u6b21\u9009\u62e9\u7684\u65f6\u5019\u7528\u4e00\u4e2a bool \u51fd\u6570\u6807\u8bb0\u5373\u53ef\uff09\u3002\n\n4\u3001\u5177\u4f53\u60c5\u51b5\u89c1\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint num[500010],maxn,minn,sum;\n\nint max(int x,int y){\n\treturn x>y?x:y;\n}\n\nint min(int x,int y){\n\treturn x>y?y:x;\n}\n\nvoid dfs(int wait,int already,int need,int can){\t//\u4ece\u524d\u5f80\u540e\u4f9d\u6b21\u4e3a \u8fd8\u9700\u8981\u62fc\u51d1\u5f97\u5230\u7684\u6728\u68cd\u6570\u91cf \n\tint i;\t\t\t\t\t\t\t\t\t\t\t//\t\t\t\t\u5f53\u524d\u5df2\u7ecf\u62fc\u51d1\u5f97\u5230\u7684\u6728\u68cd\u7684\u957f\u5ea6 \n\tif(wait==0){\t//\u5982\u679c\u5df2\u7ecf\u5b8c\u6210\u6240\u6709\u7684\u6728\u68cd\u7684\u62fc\u51d1\uff0c\u5219\u76f4\u63a5\u8f93\u51fa\u7ed3\u679c\t\u9700\u8981\u5f97\u5230\u7684\u6728\u68cd\u7684\u957f\u5ea6 \n\t\tprintf(\"%d\",need);\t\t\t\t\t\t\t//\t\t\t\t\u5f53\u524d\u53ef\u4ee5\u4f7f\u7528\u7684\u6700\u957f\u6728\u68cd\u7684\u957f\u5ea6 \n\t\texit(0);\n\t}\n\tif(already==need){//\u5982\u679c\u5f53\u524d\u62fc\u51d1\u51fa\u7684\u6728\u68cd\u7684\u957f\u5ea6\u7b49\u4e8e\u9700\u8981\u5f97\u5230\u7684\u6728\u68cd\u7684\u957f\u5ea6\uff0c\u5219\u5f00\u59cb\u62fc\u51d1\u4e0b\u4e00\u6839 \n\t\tdfs(wait-1,0,need,maxn);\n\t\treturn ;\n\t}\n\tfor(i=can;i>=minn;i--)\n\t\tif(num[i] && i+already<=need){\n\t\t\tnum[i]--;\n\t\t\tdfs(wait,already+i,need,i);\n\t\t\tnum[i]++;\n\t\t\tif(already==0 || already+i==need)\n\t\t\t\treturn ;\n\t\t}\n}\n\t\nint main(){\n//\tfreopen(\"in.txt\",\"r\",stdin);\n\tint i,j,k,m,n,temp;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%d\",&k);\n\t\tif(k<=50){\t\t//\u5ffd\u7565\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e50\u7684\u6728\u68cd \n\t\t\tsum+=k;\n\t\t\tnum[k]++;\n\t\t\tminn=min(k,minn);\n\t\t\tmaxn=max(k,maxn);\n\t\t}\n\t}\n\ttemp=sum/2;\n\tfor(i=maxn;i<=temp;i++)\t\t\t//\u679a\u4e3e\u6bcf\u4e00\u79cd\u53ef\u80fd\u9009\u5b9a\u7684\u957f\u5ea6 \n\t\tif(sum%i==0)\n\t\t\tdfs(sum/i,0,i,maxn);\n\tprintf(\"%d\",sum);\n\treturn 0;\n}\n```",
        "postTime": 1532573307,
        "uid": 8595,
        "name": "FLASH_CM",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "~~\u867d\u8bf4\u8fd9\u6570\u636e\u52a0\u5f3a\uff0c\u4f46\u539f\u7248\u662f\u7d2b\u9898~~\uff0c[\u539f\u7248](https://www.luogu.org/problem/UVA307)\n\n~~\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u5f00\u59cb~~\n\n\u8fd9\u9898\u663e\u7136\u662f\u4e00\u9053\u641c\u7d22\u9898\uff08~~\u6807\u7b7e\u4e0a\u5199\u4e86~~\uff09\n\n# \u65e0\u4f18\u5316\u641c\u7d22\n\n\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u7b54\u6848\uff08~~\u6709\u4e2a\u5c0f\u4f18\u5316\uff0c\u5982\u679c\u548c\u4e0d\u80fd\u6574\u9664\u6b64\u7b54\u6848\u5c31\u8df3\u8fc7~~\uff09\n\n\u8bbe\u539f\u59cb\u6728\u68cd\u6839\u6570\u4e3acnt\uff08cnt=sum/len\uff09\n\n## \u4e09\u4e2a\u72b6\u6001\n\n1.\u5df2\u7ecf\u62fc\u597d\u7684\u6728\u68cd\u6839\u6570\n\n2.\u5f53\u524d\u957f\u5ea6\n\n3.\u4f7f\u7528\u60c5\u51b5\n\n\u6211\u4eec\u6bcf\u6b21\u641c\u7d22\u53ea\u9700\u627e\u5230\u5c1a\u672a\u4f7f\u7528\u7684\u6728\u68cd\uff08~~\u6765\u5c1d\u8bd5\u62fc\u63a5~~\uff09\uff0c\u6b64\u65f6\u641c\u7d22\u4e00\u4e0b\u65b0\u7684\u72b6\u6001\n\n## \u4e24\u4e2a\u8fb9\u754c\n\n1.\u6210\u529f\u62fc\u597d\uff08\u53ef\u4ee5\u8f93\u51fa\u7b54\u6848\u4e86\uff09\n\n2.\u65e0\u6cd5\u62fc\u63a5\uff08\u8fd4\u56de\u4e0a\u6b21\u62fc\u63a5\u72b6\u6001\uff09\n\n### \u65e0\u4f18\u5316\u641c\u7d22\u5b8c\u7ed3\u6492\u82b1\n\n\u867d\u4e0dAC,\u5374\u4e0d\u7528\u52a8\u8111\u5b50\u7684\u597d\u65b9\u6cd5\uff01\uff01\uff01\n\n# \u6709\u4f18\u5316\u641c\u7d22\n\n\u641c\u7d22\u7684\u4f18\u5316\uff08~~\u4f17\u6240\u7686\u77e5~~\uff09\n\n1.\u4f18\u5316\u641c\u7d22\u987a\u5e8f\uff08~~\u6b64\u9898\u9700\u8981~~\uff09\n\n2.\u6392\u9664\u7b49\u6548\u5197\u4f59\uff08~~\u6b64\u9898\u9700\u8981~~\uff09\n\n3.\u53ef\u884c\u6027\u526a\u679d\n\n4.\u6700\u4f18\u6027\u526a\u679d\n\n5.\u8bb0\u5fc6\u5316\u641c\u7d22\n\n## \u4f18\u5316\u641c\u7d22\u987a\u5e8f\uff01\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u957f\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u4f18\u5148\u5c1d\u8bd5\u4e00\u4e0b\u957f\u7684\u6728\u68cd\n\n~~\u53ef\u4ee5\u4f18\u5316\u7684\u539f\u56e0\uff1a~~\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/9hathyyu.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u5982\u56fe\u6240\u793a(~~\u867d\u7136\u6709\u70b9\u4e11~~)\n\n\u6211\u4eec\u4ece\u957f\u7684\u6728\u68cd\u5f00\u59cb\u5408\u5e76\u6216\u662f\u4ece\u77ed\u7684\u6728\u68cd\u5f00\u59cb\u5408\u5e76\u957f\u5ea6\u4e00\u81f4\uff0c\u56e0\u6b64\u53ea\u9700\u641c\u7d22\u5176\u4e2d\u4e00\u79cd\n\n## \u6392\u9664\u7b49\u6548\u5197\u4f59\n\n1.\u5047\u8bbe\u957f\u5ea6\u4e3ax\u7684\u6728\u68cd\u62fc\u63a5\u5931\u8d25\uff0c\u90a3\u4e48\u548c\u4e3ax\u7684\u4e00\u5806\u6728\u68cd\uff08\u4e00\u6839\u90fd\u662f\u5982\u6b64\uff09\u62fc\u63a5\u4e5f\u5fc5\u7136\u5931\u8d25\uff08\u72b6\u6001\u548c\u524d\u9762\u7684\u72b6\u6001\u4e00\u81f4\uff09\n\n2.\u5982\u679c\u5df2\u62fc\u597d\u7684\u6728\u68cd\u957f\u5ea6\u4e3ax\uff0c\u90a3\u4e48\u5982\u679c\u957f\u5ea6\u4e3ay\u7684\u65e0\u6cd5\u5411\u6b64\u62fc\u63a5\u3002\u4e0b\u4e00\u5806\u5df2\u62fc\u597d\u7684\u6728\u68cd\u5982\u679c\u957f\u5ea6\u4e5f\u4e3ax\uff0cy\u4e5f\u4e00\u5b9a\u4e0d\u80fd\u5411\u6b64\u62fc\u63a5\n\n3.\u7528\u4e00\u6839\u6728\u68cd\u603b\u6bd4\u7528\u4e00\u5806\u6728\u68cd\u597d\uff08~~\u641c\u7d22\u4e4b\u8d2a\u5fc3~~\uff09\n\n\u5b8c\u6574\u4ee3\u7801\uff1acode\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nll read()\n{\n\tll r=0,f=1;char c=getchar();\n\twhile((c<'0'||c>'9')&&(c!='-')) c=getchar();\n\tif(c=='-') f=-1,c=getchar();\n\twhile(c>='0'&&c<='9') r=r*10+c-'0',c=getchar();\n\treturn r*f; \n}\nll a[101],v[101],n,len,cnt;\nbool dfs(ll stick,ll cab,ll last)\n{\n\tif(stick>cnt) return true; \n\tif(cab==len) return dfs(stick+1,0,1);//\u5f80\u4e0b\u4e00\u4e2a\u641c \n\tll failess=0;\n\tfor(int i=last;i<=n;i++)\n\t if(!v[i]&&cab+a[i]<=len&&failess!=a[i])\n\t {\n\t \tv[i]=1;\n\t \tif(dfs(stick,cab+a[i],i+1)) return true;\n\t \tfailess=a[i];\n\t \tv[i]=0;\n\t \tif(cab==0||cab+a[i]==len) return false;\n\t }\n\t return false;\n}\nll cmp(ll a,ll b)\n{\n\treturn a>b;\n}\nint main()\n{\n//\tfreopen(\"data.in\",\"r\",stdin);\n//\tfreopen(\"data.out\",\"w\",stdout);\n\tn=read();\n\tll sum=0,val=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tll b=read();\n\t\tif(b>50) continue;\n\t\ta[i]=b;\n\t\tsum+=a[i];\n\t\tval=max(val,a[i]);\n\t}\n\tsort(a+1,a+n+1,cmp);\n\tfor(len=val;len<=sum;len++)\n\t{\n\t\tif(sum%len) continue;\n\t\tcnt=sum/len;\n\t\tmemset(v,0,sizeof(v));\n\t\tif(dfs(1,0,1)) break;\n\t}\n\tcout<<len<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1572832295,
        "uid": 138649,
        "name": "\u7237\uff0c\u65e0\u9650\u9738\u6c14",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "# \u5c0f\u6728\u68cd\uff08\u6570\u636e\u52a0\u5f3a\uff09\u3010\u9898\u89e3\u3011\n\u5176\u5b9e\uff0c\u8fd9\u9898\u7684\u96be\u5ea6\u5f88\u8ff7\uff08\u6211\u5148\u5728**POJ**\u4e0a\u505a\u7684\uff09\uff1b\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u6709\u4e00\u9053\u6570\u636e\u539f\u7248\u7684\u96be\u5ea6\u662f**\u7701\u9009**\n\n\u800c\u539f\u9898\uff08\u672c\u9898\uff09\u662f\u5f3a\u5316\u7684\uff0c\u96be\u5ea6\u5374\u662f**\u63d0\u9ad8+**      ~~\uff08\u8ff7\uff09~~\n\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u8fdb\u5165\u6b63\u9898\uff1b\n\n\n------------\n\u5176\u5b9e\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u4e2a\u641c\u7d22\uff0c\u5e76\u4e14\u7528\u4e0a\u4e86\u526a\u679d\u3002\n\n### \u5212\u91cd\u70b9\n\n\u6240\u8c13**\u526a\u679d**\uff0c\u5c31\u662f\u51cf\u5c0f\u641c\u7d22\u6811\u7684\u89c4\u6a21\u3002\u5c3d\u65e9\u6392\u9664\u641c\u7d22\u6811\u4e2d\u4e0d\u5fc5\u8981\u7684\u5206\u652f\u7684\u4e00\u79cd\u624b\u6bb5\u3002**\u5f62\u8c61\u5730\u770b**\uff0c\u5c31\u597d\u50cf\u526a\u6389\u4e86\u641c\u7d22\u6811\u7684\u679d\u6761\u3002\n\n\u8003\u8651\u4ee5\u4e0b\u526a\u679d\uff1a\n\n**1.\u9006\u5e8f\u641c\u7d22**\n\n\u628a\u6728\u68cd\u513f\u7684\u957f\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff1b\n\n**2.X+Y=Y+X(\u597d\u7406\u89e3\u5427\uff09**\n\n1\uff09\u76f8\u540c\u7684\u53ea\u641c\u4e00\u904d\uff1b\n\n2\uff09\u5982\u679c\u73b0\u5728\u5df2\u7ecf\u62fc\u6210\u7684\u957f\u5ea6\uff0c\u5728\u540e\u9762\u662f\u4e0d\u53ef\u80fd\u6210\u529f\u7684\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u8ba4\u5b9a\u8fd9\u4e2a\u5206\u652f\u662f\u5931\u8d25\u7684\u3002\u6240\u4ee5\u5982\u679c\u4e4b\u540e\u7684\u5206\u652f\u518d\u6b21\u9047\u89c1\u50cf\u8fd9\u6837\u7684\u957f\u5ea6\u3002\u6211\u4eec\u5c31\u76f4\u63a5\u628a\u4ed6\u7ed9\u8fd4\u56de\u5c31\u53ef\u4ee5\u4e86\u3002\n\n3\uff09\u5982\u679c\u521a\u5f00\u59cb\u62fc\u63a5\u6728\u68d2\u7684\u65f6\u5019\uff0c\u7b2c\u4e00\u6839\u5df2\u7ecf\u5bfc\u81f4\u4e86\u62fc\u63a5\u5931\u8d25\u3002\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u5224\u5b9a\u5f53\u524d\u7684\u5927\u5206\u652f\u662f\u4e0d\u53ef\u884c\u7684\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\uff0c~~\u662f\u56e0\u4e3a\u4ed6\u5728\u7b2c\u4e00\u6b21\u5df2\u7ecf\u4e0d\u884c\u5566~~\uff08\u5f00\u8f66\uff09\u3002\u90a3\u4e48\u5b83\u5728\u5176\u4ed6\u6728\u68d2\u4e2d\u4e5f\u662f\u4e0d\u53ef\u4ee5\u7684\u3002\n\n\u5176\u5b9e\u5927\u6982\u7684\u526a\u679d\u601d\u60f3\u4e5f\u5c31\u53ea\u8fd9\u4e9b\uff1b\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\uff1b\n\n\n------------\n**\u6df1\u641c\u4ee3\u7801**\n```c\nbool dfs(int now,int cab,int last)\n//now\u8868\u793a\u73b0\u5728\u5728\u62fc\u7684\u7b2cnow\u6839\u539f\u59cb\u6728\u68d2\n//cab\u8868\u793a\u7b2cnow\u6839\u6728\u68d2\u7684\u5f53\u524d\u957f\u5ea6\n//\u4e0a\u4e00\u6839\u5c0f\u6728\u68d2\u662flast\n{\n\tif(now>s) return 1;//\u6240\u6709\u7684\u6728\u68d2\u62fc\u5b8c\u4e86\n\tif(cab==l) return dfs(now+1,0,1);//l\u662f\u62fc\u5b8c\u7684\u957f\u5ea6\uff0cnow\u6839\u62fc\u597d\u4e86\n\tint f=0;//\u526a\u679d2\uff0c2\uff09\n\tfor(int i=last;i<=cnt;i++)//\u526a\u679d1\n\t{\n\t\tif(!k[i] && cab+a[i]<=l && f!=a[i])\n\t\t{\n\t\t\tk[i]=1;\n\t\t\tif(dfs(now,cab+a[i],i+1)) return 1;\n\t\t\tf=a[i];\n\t\t\tk[i]=0;//\u56de\u6eaf\n\t\t\tif(cab==0 || cab+a[i]==l) return 0;//cab+a[i]==l\u52a0\u4e0d\u52a0\u5e94\u8be5\u6ca1\u5f71\u54cd\n\t\t}\n\t}\n\treturn 0;//\u641c\u7d22\u5931\u8d25\n}\n```\n\n\n\n------------\n\n**\u4e3b\u51fd\u6570**\n\n```c\nint main()\n{\n\tint n;\n\twhile(cin>>n&&n)//\u8f93\u5165\n\t{\n\t\tmemset(a,0,sizeof(a));//\u521d\u59cb\u5316\n\t\tmemset(k,0,sizeof(k));\n\t\tcnt=0,v=0,sum=0,l,s;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tint x;\n\t\t\tcin>>x;\n\t\t\tif(x>50) continue;//\u9898\u610f\uff0c\u9632\u6b62\u6bd2\u7624\u6d4b\u8bd5\u70b9\n\t\t\ta[++cnt]=x;\n\t\t\tv=max(v,x);\n\t\t\tsum+=x;\n\t\t}\n\t\tsort(a+1,a+cnt+1);\n\t\treverse(a+1,a+cnt+1);//STL\u7ffb\u8f6c\u6570\u7ec4\n\t\tfor(l=v;l<=sum;l++)\n\t\t{\n\t\t\tif(sum%l) continue;\n\t\t\ts=sum/l;//\u539f\u59cb\u6728\u68d2\u957fl\uff0c\u5171cnt\u6839\uff0c\u6545\u6bcf\u6839\u957fsum/cnt\uff1b\n\t\t\tmemset(k,0,sizeof(k));\n\t\t\tif(dfs(1,0,1)) break;\n\t\t}\n\t\tcout<<l<<endl;//\u8f93\u51fa\u7b54\u6848\n\t}\n\treturn 0;//\u5b8c\u7f8e\u7ed3\u675f\n}\n```\n\n**\u5b8c\u6574\u4ee3\u7801**    ~~\uff08\u62ff\u8d70\u4e0d\u8c22\uff09~~\n\n```c\n#include<bits/stdc++.h>\nusing namespace std;\n\nint cnt=0,v=0,sum=0,l,s;\nint a[100],k[100];\n\nbool dfs(int now,int cab,int last)\n{\n\tif(now>s) return 1;\n\tif(cab==l) return dfs(now+1,0,1);\n\tint f=0;\n\tfor(int i=last;i<=cnt;i++)\n\t{\n\t\tif(!k[i] && cab+a[i]<=l && f!=a[i])\n\t\t{\n\t\t\tk[i]=1;\n\t\t\tif(dfs(now,cab+a[i],i+1)) return 1;\n\t\t\tf=a[i];\n\t\t\tk[i]=0;\n\t\t\tif(cab==0 || cab+a[i]==l) return 0;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint main()\n{\n\tint n;\n\twhile(cin>>n&&n)\n\t{\n\t\tmemset(a,0,sizeof(a));\n\t\tmemset(k,0,sizeof(k));\n\t\tcnt=0,v=0,sum=0,l,s;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tint x;\n\t\t\tcin>>x;\n\t\t\tif(x>50) continue;\n\t\t\ta[++cnt]=x;\n\t\t\tv=max(v,x);\n\t\t\tsum+=x;\n\t\t}\n\t\tsort(a+1,a+cnt+1);\n\t\treverse(a+1,a+cnt+1);\n\t\tfor(l=v;l<=sum;l++)\n\t\t{\n\t\t\tif(sum%l) continue;\n\t\t\ts=sum/l;\n\t\t\tmemset(k,0,sizeof(k));\n\t\t\tif(dfs(1,0,1)) break;\n\t\t}\n\t\tcout<<l<<endl;\n\t}\n\treturn 0;\n}\n```\n**\u6c42\u5ba1\u8fc7\uff0c\uff08\u636e\u8bf4\uff0c\u8003\u8bd5\u524d\u53d1\u9898\u89e3\u4f1anp++\uff09**\n\n\n\u7b2c\u4e00\u7bc7**\u7d2b\u9898**\u9898\u89e3 ~~\uff08\u592a\u4e0d\u5bb9\u6613\u4e86\uff09~~\uff0c\n\u6700\u540e**\u5b89\u5229**\u4e0b\u6211\u7684[\u535a\u5ba2](https://www.luogu.org/blog/lwhd/)\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1569916260,
        "uid": 181404,
        "name": "\u8def\u4eba_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "~~\u7ec8\u4e8eAC~~~\n\n\u7b2c\u4e00\u904d\u7684\u65f6\u5019\u6253\u7684\u66b4\u529b \u6ca1\u5f97\u591a\u5c11\u5206\n\n\u540e\u6765\u53d1\u73b0\u539f\u6765dfs~~+\u526a\u679d~~\u662f\u6b63\u89e3\n\n1.\u9898\u76ee\u4e2d\u8bf4\u4e86** >50\u7684\u81ea\u52a8\u5ffd\u7565**\n\n2.\u5148\u6392\u597d\u5e8f **\u76f4\u63a5\u4ece\u7b2c\u4e00\u4e2a\u5f00\u59cb\u641c\u7d22**\n\n3.**dfs(\u5269\u4e0b\u7684\u957f\u5ea6\uff0c\u7b2c\u51e0\u4e2a\u6728\u68cd\u5f00\u59cb\uff0c\u5df2\u7ecf\u6446\u597d\u4e86\u51e0\u7ec4) **\n\n4.\u526a\u679d\u4e00\uff1a**\u4fdd\u8bc1\u6728\u68cd\u603b\u957f\u5ea6sum\u80fd\u6574\u9664\u4f60\u5047\u8bbe\u7684\u957f\u5ea6**\n\n5.\u600e\u6837\u5c31\u80fd\u6c42\u51fa\u53ef\u4ee5\u6446\u591a\u5c11\u7ec4 \u7136\u540e\u5c31\u6709**\u9012\u5f52\u7ec8\u6b62\u6761\u4ef6**\u4e86\n\n6.\u5f53\u524d\u8fd9\u4e00\u6839\u5df2\u7ecf\u6446\u5b8c \u5269\u4e0b\u7684\u957f\u5ea6\u5e94\u8be5\u91cd\u65b0\u5f00\u59cb \u4e8e\u662f\u6211\u4eec\u5fc5\u987b\u8bb0\u5f55\u4e0b**\u5047\u8bbe\u7684\u957f\u5ea6**\n\n7.vis\u6570\u7ec4\u4fdd\u8bc1\u8fd9\u4e2a\u6570\u636e\u53ea\u80fd\u7528\u4e00\u6b21\n\n8.\u526a\u679d\u4e8c\uff1a**\u7528\u4e86\u5f53\u524d\u6728\u68cd\u540e\u65e0\u6cd5\u62fc\u597d  \u4f46\u662f\u5269\u4e0b\u7684\u6728\u68cd\u957f\u5ea6\u8fd8\u7b49\u4e8e\u5f53\u524d\u6728\u68cd\u957f\u5ea6 \u8df3\u51fa** \n\n9.\u526a\u679d\u4e09\uff1a**\u9996\u5148\uff1a\u80fd\u8fd0\u884c\u5230\u8fd9\u8868\u660e\u6700\u5927\u7684a[i]\u4e5f\u4e0d\u80fd\u6ee1\u8db3\u6761\u4ef6 \u7136\u540e\uff1a\u5982\u679clen==pp \u5373\u4e00\u7ec4\u65b0\u7684\u6728\u68cd \u90a3\u4e48\u4ee5\u540e\u7684\u4e5f\u4e0d\u80fd\u6ee1\u8db3\u6761\u4ef6**\n\n10.\u526a\u679d\u56db\uff1a**\u5f53\u524d\u957f\u5ea6\u4e0d\u884c \u5176\u4ed6\u957f\u5ea6\u4e5f\u4e0d\u884c **\n\n\uff08\u4ee3\u7801\u4e2d\u8fd8\u4f1a\u6709\u6ce8\u91ca \u6b22\u8fce\u6536\u770b\uff01\uff01\uff01 ~~\u671b\u901a\u8fc7~~\uff09\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<queue> \n#define MAXN 100005\n#define LL long long\n#define INF 2147483640\n#define MOD 100000007\n#define free(s) freopen(\"s.txt\",\"r\",stdin);\nusing namespace std;\nbool cmp(int x,int y)\n{\n\treturn x>y;\n}\nint n,t,sum=0,cnt=0,a[70],res,vis[70],pp;\nint dfs(int len,int sta,int now)// dfs(\u5269\u4e0b\u7684\u957f\u5ea6\uff0c\u7b2c\u51e0\u4e2a\u6728\u68cd\u5f00\u59cb\uff0c\u5df2\u7ecf\u6446\u597d\u4e86\u51e0\u7ec4) \n{\n\tif(now==res)\n\t\treturn 1;\n\tif(len==0)\n\t\tif(dfs(pp,1,now+1))// \u5f53\u524d\u8fd9\u4e00\u6839\u5df2\u7ecf\u6446\u5b8c \u5269\u4e0b\u7684\u957f\u5ea6\u5e94\u8be5\u91cd\u65b0\u5f00\u59cb \n\t\t\treturn 1;\n\tfor(int j=sta;j<=cnt;j++)\n\t\tif(!vis[j]&&a[j]<=len)\n\t\t{\n\t\t\tvis[j]=1; // \u4fdd\u8bc1\u70b9\u672a\u88ab\u7528\u8fc7 \n\t\t\tif(dfs(len-a[j],j+1,now)) // \u641c\u4e0b\u4e00\u4e2a\u70b9 \n\t\t\t\treturn 1;\n\t\t\tvis[j]=0;\n\t\t\tif(len==a[j]||len==pp)// \u9996\u5148\uff1a\u80fd\u8fd0\u884c\u5230\u8fd9\u8868\u660e\u6700\u5927\u7684a[i]\u4e5f\u4e0d\u80fd\u6ee1\u8db3\u6761\u4ef6 \u7136\u540e\uff1a\u5982\u679clen==pp \u5373\u4e00\u7ec4\u65b0\u7684\u6728\u68cd \u90a3\u4e48\u4ee5\u540e\u7684\u4e5f\u4e0d\u80fd\u6ee1\u8db3\u6761\u4ef6 \n\t\t\t\tbreak; // \u7528\u4e86\u5f53\u524d\u6728\u68cd\u540e\u65e0\u6cd5\u62fc\u597d  \u4f46\u662f\u5269\u4e0b\u7684\u6728\u68cd\u957f\u5ea6\u8fd8\u7b49\u4e8e\u5f53\u524d\u6728\u68cd\u957f\u5ea6 \u8df3\u51fa \n\t\t\twhile(a[j+1]==a[j]) // \u5f53\u524d\u957f\u5ea6\u4e0d\u884c \u5176\u4ed6\u957f\u5ea6\u4e5f\u4e0d\u884c \n\t\t\t\tj++;\n\t\t}\n\treturn 0;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&t);\n\t\tif(t<=50)\n\t\t{\n\t\t\tsum+=t;\n\t\t\ta[++cnt]=t;\n\t\t}\n\t}\n\tsort(a+1,a+1+cnt,cmp);\n\tfor(int i=a[1];i<=sum;i++)\n\t\tif(sum%i==0)\n\t\t{\n\t\t\tpp=i; // \u5168\u5c40\u8bb0\u5f55\u957f\u5ea6 \n\t\t\tres=sum/i;\n\t\t\tif(dfs(i,1,0))\n\t\t\t{\n\t\t\t\tprintf(\"%d\",i);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\treturn 0;\n}\n```",
        "postTime": 1525568511,
        "uid": 37427,
        "name": "\u66f9\u8001\u5e08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "emm\u8fd9\u9898\u4e3b\u8981\u662f\u52a0\u526a\u679d\uff0c\u52a0\u7684\u6211\u90fd\u5feb\u5410\u4e86\uff0c\u4ee5\u524d\u628aWA\u90fd\u526a\u51fa\u6765\u4e86\uff0c\u6655\u5012\u3002\u3002\n\n## \u526a\u679d\n\n1. \u627e\u5230\u7b54\u6848\u5c31\u7ec8\u6b62\u641c\u7d22\n2. \u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u957f\u5ea6\uff08\u7b54\u6848\uff09\u3002\n3. \u628a\u6728\u68cd\u7684\u957f\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5982\u679c\u591a\u9009\u53d6\u957f\u7684\u6728\u68cd\u62fc\uff0c\u5c31\u4f1a\u8ba9\u7528\u7684\u6728\u68cd\u8d85\u51fa\u62fc\u6210\u5927\u6728\u68cd\u5b50\u7684\u76ee\u6807\u957f\u5ea6\uff0c\u4ece\u800c\u53ef\u4ee5\u6392\u9664\u66f4\u591a\u7684\u65b9\u6848\u3002\n4. \u53ea\u641c\u7d22\u5230\u8981\u62fc\u6210\u7684\u5927\u6728\u68cd\u6570-1\uff0c\u4e3a\u4ec0\u4e48\u7559\u7ed9\u5927\u5bb6\u81ea\u5df1\u60f3\n5. \u9884\u5904\u7406\u6bcf\u4e00\u4e2a\u6728\u68cd\u4e0b\u4e00\u4e2a\u7684\u4e0e\u5b83\u4e0d\u540c\u957f\u5ea6\u7684\u6728\u68cd\u7684\u4f4d\u7f6e\uff0c\u5982\u6211\u5728\u679a\u4e3e\u4e2d\u7528\u5230\u4e86\u8fd9\u8ddf\u6728\u68cd\uff0c\u5c31\u76f4\u63a5\u679a\u4e3e\u8df3\u5230\u4e0b\u4e00\u4e2a\u7684\u4e0e\u5b83\u4e0d\u540c\u957f\u5ea6\u7684\u6728\u68cd\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u8fd9\u6839\u6728\u68cd\u5df2\u7ecf\u522b\u7528\u8fc7\uff0c\u90a3\u679a\u4e3e\u7684\u4f4d\u7f6e+1\u3002\n6. \u5982\u679c\u8fd9\u662f\u4e00\u6839\u5927\u6728\u68cd\u7684\u7b2c\u4e00\u6839\u6728\u68cd\u5982\u679c\u5c1d\u8bd5\u5931\u8d25\u4e86\uff0c\u90a3\u5c31\u4e0d\u53ef\u4ee5\u62fc\u6210\u5927\u6728\u68cd\u3002\u56e0\u4e3a\u8fd9\u662f\u57fa\u4e8e\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u52a0\u7684\u526a\u679d\uff0c\u7b2c\u4e00\u6839\uff08\u4e5f\u5c31\u662f\u6700\u957f\u7684\uff09\u6728\u68cd\u8bd5\u8fc7\u4e86\uff0c\u5982\u679c\u4e0d\u884c\uff0c\u90a3\u540e\u9762\u5c0f\u6728\u68cd\u4e00\u70b9\u4e00\u70b9\u8865\u4e0a\u53bb\uff0c\u62fc\u6210\u6728\u68d2\u7684\u53ef\u80fd\u8d8a\u6765\u8d8a\u5c11\uff0c\u751a\u81f3\u6ca1\u6709\uff0c\u6240\u4ee5\u4e0d\u53ef\u4ee5\u62fc\u6210\u3002\n7. \u5df2\u9009\u7684\u957f\u5ea6+\u679a\u4e3e\u5f85\u9009\u7684\u90a3\u4e2a\u957f\u5ea6\u4e4b\u548c\u6446\u4e0d\u6210\u90a3\u4e2a\u6728\u68d2\uff0c\u7167\u6837\u4e5f\u4e0d\u884c\uff0c\u4e0e\u7eb3\u97f3\u548c\u526a\u679d6\u5dee\u4e0d\u591a\u3002\n## code\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,mx=INT_MIN,val,ans=INT_MAX,tot;\nint stick[70],vis[70],sum,next[70];\nbool flag;\n\nbool cmp(int a,int b)\n{\n    return a>b;\n}\nvoid dfs(int now,int last,int g,int cur)/// now \u4ee3\u8868\u5f53\u524d\u62fc\u4e86\u51e0\u6839\u5c0f\u68d2\u5b50\uff0clast\u8868\u793a\u4ece\u7b2c\u51e0\u6839\u6728\u68cd\u5f00\u59cb\u679a\u4e3e\uff0cg\u8868\u793a\u6211\u8981\u62fc\u6210\u7684\u6bcf\u4e00\u6839\u68d2\u5b50\u7684\u957f\u5ea6\uff0ccur\u4ee3\u8868\u5f53\u524d\u62fc\u6bcf\u4e2a\u6728\u68cd\u7528\u7684\u957f\u5ea6\u3002\n{\n    if(now==val-1)\n    {\n        ans=min(ans,g);\n        flag=1;\n        return;\n    }\n    if(cur==g)\n    {\n        dfs(now+1,1,g,0);\n    }\n    for(int i=last;i<=tot;)\n    {\n        if(!vis[i]&&cur+stick[i]<=g)\n        {\n            vis[i]=1;\n            dfs(now,i+1,g,cur+stick[i]);\n            if(flag)return;\n            vis[i]=0;\n            if(cur==0||cur+stick[i]==g)return;\n            i=next[i];\n        }\n        else\n        {\n            i++;\n        }\n    }\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        int a;cin>>a;\n        if(a>50)continue;\n        stick[++tot]=a;\n        sum+=a;\n        mx=max(mx,a);\n    }\n    sort(stick+1,stick+tot+1,cmp);\n    for(int i=1;i<=n;i++)\n    {\n        int k;\n        for(k=i;stick[k]==stick[i];k++);\n        next[i]=k;\n    }\n    for(int i=mx;i<=sum;i++)\n    {\n        if(sum%i==0)\n        {\n            val=sum/i;\n            dfs(0,1,i,0);\n            if(flag)break;\n        }\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n\n\n\n```\n\n",
        "postTime": 1554700667,
        "uid": 66769,
        "name": "Ji_Kang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "# \u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011\n\n\n\u597d\u4e45\u6ca1\u6709\u5199\u8fc7\u9898\u4e86\uff0c\u7ec8\u4e8e\u6709\u65f6\u95f4\u5199\u4e86\u51e0\u9053\n\n\u8fd9\u9053\u9898\u5199\u641c\u7d22\u7684\u8fc7\u7a0b\u5176\u5b9e\u4e0d\u96be\uff0c\u96be\u5c31\u96be\u5728\u5982\u4f55\u526a\u679d\u7f29\u77ed\u65f6\u95f4\n\n\u9898\u76ee\u6240\u6c42\u7684\u662f\u6700\u5c0f\u6728\u68cd\u957f\u5ea6\uff0c\u56e0\u4e3a\u6728\u68cd\u957f\u5ea6\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u641c\u7d22\u7b54\u6848\n\n\u5728\u8f93\u5165\u7684\u65f6\u5019\u5148\u7d2f\u52a0\u6728\u68cd\u957f\u5ea6\u7684\u603b\u548c\uff0c\u56e0\u4e3a\u4e00\u6839\u6728\u68cd\u4e5f\u662f\u7b26\u5408\u6761\u4ef6\u7684\uff0c\u8fd9\u53ef\u80fd\u5c31\u662f\u7b54\u6848\n\n\uff08\u8bb0\u5f97\u5c06\u6728\u68cd\u957f\u5ea6\u5927\u4e8e50\u7684\u6570\u636e\u5ffd\u7565\uff09\n\n\u63a5\u7740\u5bf9\u6728\u68cd\u957f\u5ea6\u8fdb\u884c\u4e00\u4e2a\u4ece\u5927\u5230\u5c0f\u7684\u6392\u5e8f\uff0c\u56e0\u4e3a\u7b54\u6848\u80af\u5b9a\u5927\u4e8e\u7b49\u4e8e\u6728\u68cd\u957f\u5ea6\u7684\u6700\u5927\u503c\n\n\u518d\u5bf9\u7b54\u6848\u8fdb\u884c\u679a\u4e3e\uff0c\u679a\u4e3e\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u4f18\u5316\uff1a\u5982\u679c\u603b\u548c\u9664\u4ee5\u7b54\u6848\u6709\u4f59\u6570\uff0c\u6613\u77e5\u7b54\u6848\u9519\u8bef\n\n## \u91cd\u8981\u526a\u679d\uff1a\n\n1\u3001\u4f18\u5316\u987a\u5e8f\uff0cdfs\u5224\u65ad\u60c5\u51b5\u65f6\u4ece\u6700\u957f\u7684\u6728\u68cd\u679a\u4e3e\u5230\u6700\u77ed\u7684\u6728\n\u68cd\uff0c\u56e0\u4e3a\u80fd\u4e0e\u6700\u957f\u7684\u6728\u68cd\u7ec4\u6210\u5f53\u524d\u9700\u8981\u7684\u957f\u5ea6\u7684\u6728\u68cd\u7684\u4e2a\u6570\u663e\u7136\u8981\u6bd4\u957f\u5ea6\u77ed\u7684\u5c11\uff0c\u80fd\u51cf\u5c11\u5206\u679d\u6570\u3002\u56e0\u4e3a\u957f\u5ea6\u4e0d\u8d85\u8fc750\uff0c\u4e8e\u662f\u6ca1\u5fc5\u8981\u5bf9\u6728\u68cd\u957f\u5ea6\u5feb\u6392\uff0c\u800c\u662f\u76f4\u63a5\u6876\u6392\uff0c\u5e38\u6570\u5c0f\u4e14\u65b9\u4fbf\u5224\u65ad\u548c\u56de\u6eaf\u3002\n\n\n2\u3001\u6728\u68cd\u4e2a\u6570\u5e94\u8be5\u4e3a\u6574\u6570\uff0c\u6240\u4ee5\u679a\u4e3e\u7684\u957f\u5ea6\u5e94\u8be5\u80fd\u6574\u9664\u603b\u957f\u5ea6\u3002\n\n\n\n3\u3001\u82e5\u5f53\u524d\u641c\u7d22\u65f6\u5df2\u7ecf\u4f7f\u7528\u4e86\u957f\u5ea6\u4e3ax\u7684\u6728\u68cd\uff0c\u5219\u4e0b\u6b21\u76f4\u63a5\u4ece\u957f\u5ea6\u4e3ax\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\uff0c\u56e0\u4e3a\u663e\u7136\u6bd4x\u957f\u7684\u90fd\u4e0d\u53ef\u884c\u4e86\uff0c\u5426\u5219\u5f53\u524d\u5c31\u4e0d\u4f1a\u4f7f\u7528x\u4e86\u3002\n\n\n\n4\u3001\u82e5\u67d0\u6b21\u641c\u7d22\u62fc\u63a5\u65f6\uff0c\u5f53\u524d\u62fc\u597d\u7684\u957f\u5ea6\u4e3a0\u6216\u5f53\u524d\u957f\u5ea6\u52a0\u4e0a\u5148\u524d\u679a\u4e3e\u7684\u957f\u5ea6\u7b49\u4e8e\u9700\u8981\u957f\u5ea6\uff0c\u76f4\u63a5\u8df3\u51fa\u5faa\u73af\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u9012\u51cf\u679a\u4e3e\uff0c\u663e\u7136\u518d\u5f80\u540e\u641c\u4e0d\u80fd\u518d\u4ece\u90a3\u4e9b\u957f\u5ea6\u5c0f\u7684\u6728\u68cd\u4e2d\u62fc\u51fa\u5f53\u524d\u7684\u957f\u5ea6\u3002\n\n# \u9644\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\ninline int read()\n{\n    int sum=0;\n    char ch=getchar();\n    while(ch>57||ch<48) ch=getchar();\n    while(ch>=48&&ch<=57) sum=sum*10+ch-48,ch=getchar();\n    return sum;\n}\nbool cmp(int a,int b) { return a>b; }\nint n,mid,cnt,sum,res,ans;\nint a[71],vis[71];\nbool dfs(int len,int sta,int now) //dfs(\u5269\u4f59\u957f\u5ea6\uff0c\u6839\u6570\uff0c\u7ec4\u6570) \n{\n    if(now==res) return 1; //\u5982\u679c \u7ec4\u6570 \u4e0e \u5f53\u524d\u60c5\u51b5\u4e0b\u7ec4\u6570 \u76f8\u7b49\u8bc1\u660e\u65b9\u6848\u53ef\u884c \n    if(len==0) if(dfs(ans,1,now+1)) return 1; //\u5982\u679c\u5269\u4f59\u957f\u5ea6\u4e3a0\uff0c\u53ef\u4ee5\u5f00\u59cb\u4e0b\u4e00\u7ec4\u7684\u7ec4\u5408 \n    for(int i=sta;i<=cnt;++i)\n    {\n        if(!vis[i]&&a[i]<=len) //\u5982\u679c\u8fd9\u4e00\u6839\u5c1a\u672a\u4f7f\u7528\u5e76\u4e14\u5c0f\u4e8e\u5269\u4f59\u957f\u5ea6\u624d\u53ef\u4ee5\u4f7f\u7528 \n        {\n            vis[i]=1;\n            if(dfs(len-a[i],i+1,now)) return 1;\n            vis[i]=0;\n            if(len==ans||len==a[i]) break; // One Step\n            //\u5982\u679c\u5269\u4f59\u957f\u5ea6=\u7b54\u6848\u8bc1\u660e\u6240\u5269\u4e00\u6839\u90fd\u6bd4\u5b83\u957f\uff0c\u663e\u7136\u4e0d\u6210\u7acb \n            //\u5982\u679c\u5269\u4f59\u957f\u5ea6\u7b49\u4e8e\u5f53\u524d\u503c\uff0c\u56e0\u4e3a\u8fd8\u6709\u66f4\u5c0f\u7684\u6728\u68cd\u6240\u4ee5\u62fc\u4e0d\u5b8c\u4e5f\u4e0d\u6210\u7acb \n            while(a[i]==a[i+1]) ++i; //Two Step\n            //\u5982\u679c\u8fd9\u4e00\u6839\u4e0d\u6210\u7acb\uff0c\u90a3\u4e48\u957f\u5ea6\u548c\u5b83\u4e00\u6837\u7684\u80af\u5b9a\u4e5f\u4e0d\u6210\u7acb \n        }\n    }\n    return 0;\n}\nint main()\n{\n    n=read();\n    for(int i=1;i<=n;++i)\n    {\n        mid=read();\n        if(mid>50) continue;\n        a[++cnt]=mid,sum+=mid;\n    }\n    sort(a+1,a+cnt+1,cmp);//\u4ece\u5927\u5230\u5c0f\u6392\u5e8f \n    for(int i=a[1];i<=sum;++i)//\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u7b54\u6848 \n    {\n        if(sum%i) continue;//\u6709\u4f59\u6570\u80af\u5b9a\u4e0d\u662f\u6b63\u89e3 \n        res=sum/i;//\u5f53\u524d\u60c5\u51b5\u4e0b\u7ec4\u6570 \n        ans=i;\n        if(dfs(ans,1,0)) //\u5982\u679c\u65b9\u6848\u53ef\u884c\u8f93\u51fa\u7b54\u6848 \n        {\n            printf(\"%d\\n\",ans);\n            return 0;\n        }\n    }\n}\n```\n\n\n# \u4ee3\u7801\u4e8c\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define il inline\n#define ll long long\n#define N 100\nusing namespace std;\nint n,a[N],tmp[N],maxn,minn=N,cnt;\nil void dfs(int res,int now,int len,int p)\n{\n    if(!res){printf(\"%d\",len);exit(0);}\n    if(now==len){dfs(res-1,0,len,maxn);return;}\n    for(int i=p;i>=minn;i--)\n        if(tmp[i]&&i+now<=len){\n            tmp[i]--;\n            dfs(res,i+now,len,i);\n            tmp[i]++;\n            if(!now||now+i==len)break;\n        }\n    return;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    int x,sum=0;\n    while(n--){\n        scanf(\"%d\",&x);\n        if(x<=50){\n            a[++cnt]=x;\n            maxn=maxn>x?maxn:x;\n            minn=minn<x?minn:x;\n            tmp[x]++;sum+=x;\n        }\n    }\n    x=sum>>1;\n    for(int i=maxn;i<=x;i++)\n        if(sum%i==0)dfs(sum/i,0,i,maxn);\n    cout<<sum;\n    return 0;\n}\n```\n",
        "postTime": 1570244835,
        "uid": 99858,
        "name": "DLYJ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "[${\\color{orange}\\text{\u6b22\u8fce\u62dc\u8bbf\u6211\u8fd9\u4e2a\u849f\u84bb\u7684\u535a\u5ba2}}$](https://www.luogu.org/blog/wzc-wwwwd/)\n\n[P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011\u4f20\u9001\u95e8](https://www.luogu.org/problem/P1120)\n\n### \u6b64\u9898\u7b97\u6cd5:\u66b4\u641c\n\n\u7531\u4e8e\u9519\u8bef\u601d\u60f3\u592a\u591a\u4e86\uff0c\u9898\u89e3\u53ea\u8bb2\u6b63\u786e\u7b97\u6cd5\n\n>1.\u8f93\u5165\u6728\u68cd\u957f\u5ea6\uff0c\u7b97\u51fa\u5408\u6cd5\u6728\u68cd\u7684\u6570\u91cf$t$\uff0c\u957f\u5ea6\u548c$sum$\uff0c\u957f\u5ea6\u6700\u5927\u503c$maxn$\uff0c\u5e76\u5c06\u6728\u68cd\u6876\u6392\u5e8f\u3002\n\n>2.\u679a\u4e3e\u957f\u6728\u68cd\u957f\u5ea6$len$\uff0c$tot$\u8868\u793a\u62fc\u6210\u7684\u957f\u6728\u68cd\u6570\u91cf\u3002\u7136\u540e$dfs$\uff0c\u56db\u4e2a\u53c2\u6570\u4e2d$k$\u8868\u793a\u62fc\u5230\u7b2c\u51e0\u6839\u957f\u6728\u68cd\uff0c$rest$\u8868\u793a\u5f53\u524d\u62fc\u7684\u957f\u6728\u68cd\u5269\u4f59\u9700\u62fc\u957f\u5ea6\uff0c$lon$\u8868\u793a\u62fc\u4e00\u4e2a\u65b0\u957f\u6728\u68cd\u65f6\u679a\u4e3e\u6700\u957f\u7684\u5c0f\u6728\u68cd\u957f\u5ea6\uff0c$st$\u8868\u793a\u5728\u62fc\u67d0\u4e00\u4e2a\u957f\u6728\u68cd\u65f6\u4f9d\u6b21\u679a\u4e3e\u7684\u5c0f\u6728\u68cd\u957f\u5ea6\u3002\n\n>3.\u5982\u6587\u4e2d\u526a\u679d\uff0c$dfs$\u7684\u8fd4\u56de\u503c\u662f\u65b9\u6848\u662f\u5426\u53ef\u884c\uff0c\u7b2c\u4e00\u4e2a\u53ef\u884c\u7684\u65b9\u6848\u4e2d\uff0c$len$\u5c31\u662f\u7b54\u6848\u3002\n\n## \u4ee5\u4e0b\u662f\u4ee3\u7801\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,in[70],maxn;\nint t,a[70],sum,ans;\nint num[70],len,tot;\ninline int read(){\n    int f=1,dig=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){\n        if(ch=='-') f=-1; \n        ch=getchar();\n    } while(ch>='0'&&ch<='9'){\n        dig=(dig<<3)+(dig<<1)+ch-'0';\n        ch=getchar();\n    } return f*dig;\n} \n//lon\u8868\u793a\uff1a\u6bcf\u6b21\u8981\u62fc\u4e00\u4e2a\u65b0\u7684\u957f\u6728\u68cd\u65f6\uff0c\n//\u679a\u4e3e\u7684\u6700\u957f\u7684\u5c0f\u6728\u68cd\u7684\u957f\u5ea6\n//\uff08\u663e\u7136\uff0c\u8fd9\u4e2a\u503c\u662f\u975e\u9012\u589e\u7684\uff0c\u6bcf\u6b21\u5411\u4e0b\u679a\u4e3e\uff09 \n//st\u8868\u793a\uff1a\u5728\u62fc\u67d0\u4e00\u4e2a\u957f\u6728\u68cd\u65f6\uff0c\u4f9d\u6b21\u679a\u4e3e\u7684\u5c0f\u6728\u68cd\u957f\u5ea6\u3002\n//\uff08\u8fd9\u4e2a\u4e5f\u662f\u975e\u9012\u589e\u7684\uff0c\u6bcf\u6b21\u53ef\u4ee5\u4ecestart\u5411\u4e0b\u679a\u4e3e\uff09\u3002 \nbool dfs(int k,int rest,int lon,int st){\n\tif(k==tot+1) return 1;\n\tif(!rest) return dfs\n\t\t(k+1,len,lon,lon);\n\tst=min(st,rest);\n\tfor(int now=st;now;now--)\n\t\tif(num[now]){\n\t\t\tnum[now]--;\n\t\t\tint tmp;\n\t\t\tif(len==rest)\n\t\t\t\ttmp=now;\n\t\t\telse tmp=lon;\n\t\t\tif(dfs(k,rest-now,tmp,now))\n\t\t\t\treturn 1;\n\t\t\t//\u5982\u679cLen==rest\uff0c\u4ee3\u8868\u8fd9\u662f\u8fd9\u6839\u957f\u6728\u68cd\u7b2c\u4e00\u6b21\u62fc\uff0c\u66f4\u65b0\u4e00\u4e0blongest\u7684\u503c\u3002 \n\t\t\tnum[now]++;\n\t\t\tif(len==rest) break; \n\t\t\t/*\u8fd9\u4e2a\u8868\u793a\u957f\u6728\u68cd\u662f\u7b2c\u4e00\u6b21\u62fc\u3002 \n\t\t\t\u6ce8\u610f\uff0c\u76ee\u524d\u8fd9\u6839\u77ed\u6728\u68cdnow\u6700\u7ec8\u5fc5\u7136\u4f1a\u5c5e\u4e8e\u4e00\u4e2a\u957f\u6728\u68cd\u3002\n\t\t\t\u5982\u679c\u7b2c\u4e00\u6b21\u62fc\u65f6\u4e0d\u5408\u6cd5\uff0c\u8bf4\u660e\u8fd9\u6839\u77ed\u6728\u68cd\u6240\u5728\u7684\u957f\u6728\u68cd\u65e0\u6cd5\u88ab\u62fc\u51fa\uff0c\u53ef\u4ee5\u76f4\u63a5\u7ed3\u675f \u3002*/ \n\t\t\tif(now==rest) break;\n\t\t\t/*\u5982\u679c\u73b0\u5728\u5269\u4e0brest\uff0c\u800c\u4e14\u521a\u597d\u6709\u4e00\u6839\u957f\u5ea6\u4e3arest\u7684\u6728\u68cd\uff0c\u6211\u80af\u5b9a\u9009\u5b83\u6700\u4f18\uff1b\n\t\t\t\u6240\u4ee5\uff0c\u5982\u679c\u8bd5\u4e86\u5b83\u53d1\u73b0\u4e0d\u6210\u529f\uff0c\u4e00\u5b9a\u4e0d\u4f1a\u6210\u529f\u3002*/\n\t\t}\n\treturn 0;\n} int main(){\n//\tfreopen(\"1120.in\",\"r\",stdin);\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\tin[i]=read();\n\t\tif(in[i]<=50){\n\t\t\ta[++t]=in[i];\n\t\t\tsum+=a[t];\n\t\t\tmaxn=max(maxn,a[t]);\n\t\t}\n\t} if(!t){\n\t\tprintf(\"0\\n\");\n\t\treturn 0;\n\t} for(int i=1;i<=t;i++)\n\t\tnum[a[i]]++;\n\tfor(int i=maxn;i<=sum;i++){\n\t\tif(sum%i>0)\n\t\t\tcontinue;\n\t\tlen=i; tot=sum/i;\n\t\tif(dfs(1,len,maxn,maxn)){\n\t\t\tans=i;\n\t\t\tbreak;\n\t\t}\n\t} printf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n$\\colorbox{#f00000}{\\color{white}\\text{WA}}$\u6b64\u9898\u522b\u7070\u5fc3\uff0c\u518d\u505a\u51e0\u904d\u5c31$\\colorbox{#00d000}{\\color{white}\\text{AC}}$\u4e86\n\n\u8c22\u8c22\u5927\u5bb6! !\n",
        "postTime": 1566350423,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "### \u8fd9\u662f\u6211\u4e09\u4e2a\u5c0f\u65f6\u505a\u51fa\u6765\u7684\uff01\u4e0d\u662f\u56e0\u4e3a\u96be\u601d\u8003\uff01\u662f\u56e0\u4e3a\u7ec6\u8282\uff01\uff01\uff01\u54ed\u4e86\uff01\n\u9996\u5148\u6211\u4eec\u8fd8\u662f\u8fd0\u7528\u7684\u662f\u6df1\u641c\u7684\u65b9\u6cd5\uff0c\u91cc\u9762\u6211\u52a0\u4e0a\u4e86\u4e8c\u5206\u6cd5\u3002\n\u8fd9\u4e2a\u9898\u7684\u4e3b\u8981\u601d\u8def~~\u6211\u89c9\u5f97\u5176\u5b9e\u5f88\u7b80\u5355~~\n\u5206\u6790\u4e00\u4e0b\u8fd9\u9053\u9898\u76ee\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u7b54\u6848\u662f\u6709\u8303\u56f4\u7684\uff0c**\u5c31\u662f\u6700\u5c0f\u662f\u6700\u957f\u90a3\u6839\u5c0f\u6728\u68d2\uff0c\u6700\u5927\u662f\u6240\u6709\u5c0f\u6728\u68d2\u4e4b\u548c\uff01**\uff08\u5212\u91cd\u70b9\uff0c\u6572\u9ed1\u677f\uff09\n\u6211\u4eec\u7528\u4e00\u4e2anext\u6570\u7ec4\u6807\u8bb0\uff0c\u5982\u679c\u6709\u4e24\u6839\u4e00\u6837\u7684\u6728\u68d2\uff0c\u4e24\u6839\u7684\u60c5\u51b5\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7b97\u4e00\u4e2a\u5c31\u597d\u4e86\u3002\n\u6bcf\u4e00\u6b21\u6211\u4eec\u5224\u5b9a\u5b8c\u4e00\u6839\u6728\u68d2\u540e\uff0c\u6211\u4eec\u8981\u628a\u5b83\u6807\u8bb0\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u4f1a\u91cd\u590d\u8ba1\u7b97\u4e86!\n\u8fd8\u6709\u5728\u8f93\u5165\u7684\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u5224\u5b9a\uff0c\u56e0\u4e3a\u9898\u76ee\u4e2d\u7ed9\u51fa\u4e86\uff0c\u6240\u4ee5\u53ea\u8981\u8be5\u6839\u8d85\u8fc7\u4e8650\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u628a\u5b83\u62ff\u51fa\u6765\u4e86\uff01\n\u6211\u4eec\u8bbe\u4e00\u4e2a\u51fd\u6570\uff08nume\u8868\u793a\u8fd9\u4e2a\u662f\u7b2c\u51e0\u6839\u6728\u68d2\uff1blast\u662f\u4e0a\u4e00\u4e2a\u6728\u68d2\u7684\u7f16\u53f7\uff1brest\u662f\u8fd9\u6839\u5927\u6728\u68d2\u8fd8\u5269\u4e0b\u591a\u5c11\u8981\u62fc\uff09\n\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u5176\u5b9e\u4ece\u5927\u5230\u5c0f\u6392\u6bd4\u4ece\u5c0f\u5230\u5927\u7b80\u5355\uff0c\u56e0\u4e3a\u51e0\u6839\u5c0f\u7684\u80af\u5b9a\u4f1a\u6bd4\u4e00\u6839\u5927\u7684\u7075\u6d3b\uff0c\u6211\u4eec\u8fd9\u6837\u601d\u8003\u8fd9\u6839\u95ee\u9898\u5c31\u5f88\u7b80\u5355\u7684\u53ef\u4ee5\u5c06\u8fd9\u6839\u6728\u68d2\u62fc\u51fa\u6765\u3002\n\n\u6211\u4eec\u5c31\u5148\u5199\u4e2a\u5c0f\u4ee3\u7801\uff0c\u53eb\u4e8c\u5206\u7684\u5c0f\u53ef\u7231\uff1a(\u5c31\u662f\u8fd9\u4e2a\u5c0f\u53ef\u7231\u4e0d\u4f1a\u8ba9\u4f60\u7684\u4ee3\u7801\u70b8\u6389\u54e6\uff09\n\n------------\n```\nint l=last+1,r=coUnt,mid;\n\twhile(l<r)\n\t{\n\t\tmid=(l+r)/2;\n\t\tif(a[mid]<=rest)\n\t\t{\n\t\t\tr=mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl=mid+1;\n\t\t}\n\t}\n\n\n```\n------------\n\u7136\u540e\u6211\u4eec\u5224\u5b9a\u4e00\u4e0b\u8fd9\u4e2a\u5c0f\u6728\u68d2\u7684\u7ec4\u6210\uff0cm\u4ee3\u8868\u7684\u662f\u6211\u4eec\u8fd9\u79cd\u60c5\u51b5\u5206\u51fa\u7684\u5927\u6728\u68d2\u6839\u6570\uff0c**\u88c1\u679d\uff1a**\u5982\u679c\u7b49\u4e8e\u6211\u4eec\u5047\u8bbe\u7684\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u505c\u6b62\u4e86\u3002\n\u4e0b\u9762\u5c31\u662f\u6211\u7684\u4ee3\u7801\u4e86\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint a[70] ;\nint n , m , sum , next[70],len,coUnt;\nbool gg[70],pass;\nbool comp (int a,int b){return a>b;}\nvoid jj(int num , int last , int rest)\n{\n\tint i;\n\t\n\tint l=last+1,r=coUnt,mid;\n\twhile(l<r)\n\t{\n\t\tmid=(l+r)/2;\n\t\tif(a[mid]<=rest)\n\t\t{\n\t\t\tr=mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl=mid+1;\n\t\t}\n\t}\n\tif(!rest)\n\t{ \n\t\tif(num==m)\n\t\t{\n\t\t\tpass=1;\n\t\t\treturn ;\n\t\t}\n\t\tfor(i=1;i<=coUnt;i++)\n\t\t{ \n\t\t\tif(!gg[i]) break;\n\t\t} \n\t\tgg[i]=1;\n\t\tjj(num+1,i,len-a[i]);\n\t\tgg[i]=0;\n\t\tif(pass)\n\t\t{\n\t\t\treturn;\n\t\t} \n\t}\n\tfor(i=l;i<=coUnt;i++)\n\t{\n\t\tif(!gg[i])\n\t\t{\n\t\t\tgg[i]=1;\n\t\t\tjj(num,i,rest-a[i]);\n\t\t\tgg[i]=0;\n\t\t\tif(pass)\n\t\t\treturn ;\n\t\t\tif(rest==a[i]||rest==len)\n\t\t\treturn ;\n\t\t\ti=next[i];\n\t\t\tif(i==coUnt)\n\t\t\treturn ;\n\t\t}\n\t}\n}\nint main()\n{\n\tint llo;\n\tscanf(\"%d\", &n );\n\tfor(int i = 1 ; i <= n ; i++)\n\t{\n\t\tscanf(\"%d\",&llo);\n\t\tif(llo>50) continue;\n\t\ta[++coUnt]=llo;\t\t\n\t\tsum+=llo;\n\t}\n\tsort(a+1,a+coUnt+1,comp);\n\tnext[coUnt]=coUnt;\n\tfor(int i=coUnt-1;i>0;i--)\n\t{\n\t\tif(a[i]!=a[i+1])\n\t\t\tnext[i]=i;\n\t\telse\n\t\tnext[i]=next[i+1];\n\t}\n\tfor(len=a[1];len<=sum/2;len++)\n\t{ \n        if(sum%len!=0) \n\t\tcontinue; \n        pass=0;\n\t\tgg[1]=1;\n        m=sum/len; \n        jj(1,1,len-a[1]);\n        gg[1]=0;\n        if(pass)\n\t\t{\n\t\t\tprintf(\"%d\\n\",len);\n\t\t\treturn 0;\n\t\t} \t\t\n    }\n\tprintf(\"%d\\n\",sum);\n\treturn 0;\n\n}\n```",
        "postTime": 1547285314,
        "uid": 157483,
        "name": "\u7389\u7af9\u541b",
        "ccfLevel": 0,
        "title": "\u5c0f\u6728\u68d2"
    },
    {
        "content": "\u8fd9\u4e00\u9053\u9898\u4e00\u770b\u6570\u636e\uff0c\u5f88\u660e\u663e\u7684\u526a\u679d+\u6df1\u641c\u3002\n\n\u4e3b\u8981\u601d\u8def\uff1a\u679a\u4e3e\u6700\u7ec8\u5c0f\u6728\u68cd\u7684\u957f\u5ea6 \uff0c\u641c\u7d22\u80fd\u4e0d\u80fd\u62fc\u51faK\u6839\u4f46\u662f\u4f1a\u8d85\u65f6\u2026\u2026\u4e8e\u662f\u5c31\u9700\u8981\u526a\u679d\u3002\n\n\n### \u51e0\u4e2a\u6ce8\u610f\u70b9\uff1a\n\n1. \u539f\u8bdd\uff1a\u7ba1\u7406\u5458\u6ce8\uff1a\u8981\u628a\u8d85\u8fc7$50$\u7684\u957f\u5ea6\u81ea\u89c9\u8fc7\u6ee4\u6389\uff0c\u5751\u4e86\u5f88\u591a\u4eba\u4e86\uff01\n\n2. \u526a\u679d\u8981\u526a\u5230\u6781\u81f4\u3002\n\n## \u526a\u679d\u70b9\uff1a\n1. \u5982\u679c\u7b2c$i$\u4e2a\u68cd\u5b50\u4e0d\u80fd\u62fc\u6210\u5047\u8bbe\u7684\u957f\u5ea6\uff0c\u5219\u548c\u7b2c$i$\u4e2a\u68cd\u5b50\u76f8\u540c\u957f\u5ea6\u7684\u68cd\u5b50\u4e5f\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u53bb\u7684\uff01\uff08\u5f88\u660e\u663e\uff09 \n\n2. \u5c06\u6240\u6709\u9898\u76ee\u7ed9\u7684\u68cd\u5b50\u7684\u957f\u5ea6\u6309\u7167\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u6392\u5217\uff0c\u7136\u540e\u6309\u7167\u6b64\u987a\u5e8f\u8fdb\u884c\u6df1\u641c\u3002\uff08\u4e3a\u7684\u662f\u7ed9\u540e\u8fb9\u7684\u5c0f\u6728\u68cd\u66f4\u591a\u7684\u673a\u4f1a\uff0c\u51cf\u5c0f\u641c\u7d22\u6811\u7684\u5927\u5c0f\uff09\n\n3. \u66ff\u6362\u7b2c$i$\u6839\u68cd\u5b50\u7684\u7b2c\u4e00\u6839\u6728\u68d2\u662f\u6ca1\u7528\u7684\uff0c\u66ff\u6362\u7b2c$i$\u6839\u7684\u6700\u540e\u4e00\u6839\u68d2\u5b50\u4e5f\u662f\u6ca1\u7528\u7684\uff08\u8fd9\u4e00\u6839\u4e0d\u884c\uff0c\u5c06\u5176\u6362\u6210\u4e24\u6839\u5c0f\u6728\u68cd\u7684\u548c\u4e5f\u662f\u6ca1\u7528\u7684\uff09\n\n1. \u53ea\u9700\u679a\u4e3e\u603b\u548c\u7684\u56e0\u5b50\u3002\uff08\u56e0\u4e3a\u662f\u5206\u6210\u7b49\u957f\u7684\u6bb5\u6570\uff09\n\n4. \u5982\u679c\u67d0\u6b21\u62fc\u63a5\u9009\u62e9\u957f\u5ea6\u4e3a$S$\u7684\u6728\u68d2\uff0c\u5bfc\u81f4\u6700\u7ec8\u5931\u8d25\uff0c\u5219\u5728\u540c\u4e00\u4f4d\u7f6e\u5c1d\u8bd5\u4e0b\u4e00\u6839\u6728\u68d2\u65f6\uff0c\u8981\u8df3\u8fc7\u6240\u6709\u957f\u5ea6\u4e3a$S$\u7684\u6728\u68d2\u3002\uff08\u5f88\u663e\u7136\uff09\uff08~~\u8fd9\u4e00\u70b9\u6211\u6ca1\u6709\u7528\uff0c\u5f88\u53ef\u60dc\uff0c\u5982\u679c\u6709\u4e86\u8fd9\u4e2a\uff0c\u65f6\u95f4\u4f1a\u66f4\u5feb\u3002~~\uff09\n\n\u732e\u4e0a\u4ee3\u7801\uff1a\n\n```\n/*\u526a\u679d\u70b9\u4f1a\u5728\u4ee3\u7801\u540e\u7528\u3010x\u3011\u6807\u51fa*/\n#include<bits/stdc++.h>\nusing namespace std;\nint n,mg[100],tmp,top=1,tt=0;\n/*mg\u662f\u6728\u68cd\uff0ctmp\u662f\u8f6c\u5316\u7528\u53d8\u91cf\uff0ctop\u662f\u6728\u68cd\u4e2a\u6570+1\uff08\u5de6\u95ed\u53f3\u5f00\uff09\ntt\u662f\u603b\u957f\n*/\nbool vis[100];//\u5224\u65ad\u8be5\u6728\u68cd\u662f\u5426\u7528\u8fc7\nint cmp(int a,int b){\n\treturn a>b;//\u6bd4\u8f83\u51fd\u6570\n}\nbool dfs(int num/*\u5269\u51e0\u6839*/,int len/*\u5927\u68cd\u957f*/,int rest/*\u5269\u4f59\u957f*/,int last/*\u4e0a\u4e00\u6839\u68cd\u5b50*/){\n\n\tif((rest==0)&&(num==0)) return 1;//\u653e\u5b8c\u4e86\n    \n\tif(num==0) return 0;//\u653e\u5b8c\u4e86\u4f46\u8fd8\u6709\u5269\u4f59\n    \n\tif(rest==0) {//\u4e00\u6839\u5206\u5b8c\u4e86\n\t\trest=len;//\u5207\u5230\u4e0b\u4e00\u6839\n\t\tlast= 0;\n\t}//\u5f00\u59cb\u65b0\u7684\u4e00\u6839\n    \n\tfor(int i=last+1;i<top;i++){//\u4ece\u4e0a\u4e00\u4e2a\u957f\u5ea6\u5f80\u540e\u641c\uff0c\u4e5f\u662f\u526a\u679d\n\t\tif(vis[i]) continue;//\u4f7f\u7528\u8fc7\u4e86\uff0c\u76f4\u63a5\u8df3\u8fc7\n\t\tif(mg[i]>rest){//\u526a\u679d\u30101\u3011\n        while(mg[i]==mg[i+1]&&i<top) i++;//\u5207\u5230\u4e0b\u4e00\u6839\u4e0d\u540c\u957f\u7684\u6728\u68cd\n\t\tcontinue;\n\t\t}\n\t\tvis[i]=1;//\u6446\u4e0a\n\t\tif(dfs(num-1,len,rest-mg[i],i)) return 1;//\u5982\u679c\u5b83\u540e\u8fb9\u7684\u6728\u68cd\u53ef\u4ee5\u6446\u6210\uff0c\u90a3\u4e48\u5b83\u5c31\u53ef\u4ee5\n\t\tvis[i]=0;//\u62ff\u6389\n\t\tif((mg[i]==rest)||(len==rest)) break;//\u526a\u679d\u30103\u3011\n\t\twhile(mg[i]==mg[i+1]&&i<top) i++;//\u540c\u4e0a\n\t}\n\treturn 0;\n}\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&tmp);\n\t\tif(tmp<=50)//\u6309\u7167\u7ba1\u7406\u5458\u7684\u8bdd\u8bf4\uff0c\u7b5b\u4e00\u4e0b\n\t\t\tmg[top++]=tmp,tt+=tmp;\n\t}\n    \n\tsort(mg+1,mg+top,cmp);//\u964d\u5e8f\u6392\u5e8f\n    \n\tfor(int i=mg[1];i<=tt;i++){\n\t\tif(tt%i!=0) continue;//\u526a\u679d\u70b9\u30104\u3011\n\t\tif(dfs(top-1,i,i,0)){//\u627e\u5230\u6700\u5c0f\u957f\n        \t/*\n            \u56e0\u4e3a\u53ef\u884c\u6728\u68cd\u957f\u4e0d\u4e00\u5b9a\u8fde\u7eed\uff0c\n            \u6240\u4ee5\u8981\u4ece1\u6765\u5bfb\u627e\u6700\u5c0f\u503c\u3002\n            */\n\t\t\tprintf(\"%d\",i);\n\t\t\treturn 0;\n\t\t}\n\t}\n    \n\treturn 0;\n}\n```\n\n###### \u4ee5\u6b64\u7eaa\u5ff5\u6211\u90a3\u901d\u53bb\u7684$40$\u5206\u949f\u3002\u8c22\u8c22\u3002",
        "postTime": 1547281472,
        "uid": 138061,
        "name": "la_un_ty",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u6bd4\u697c\u4e0a\u7684dalao\u83dc\uff0c\u6240\u4ee5\u5199\u4e86\u4e00\u4e2a\u7ecf\u5178\u65b9\u6cd5\u8fd8\u63d0\u4e8614\u904d\u5199\u4e86\u4e00\u5929\u3002\u3002\u3002\n\u4e0d\u8fc7\u8fd9\u9053\u9898\u7528\u5230\u4e86\u76ee\u524d\u7684\u6240\u6709\u526a\u679d\u65b9\u6cd5\n\u5177\u4f53\u65b9\u6cd5\u5728\u4ee3\u7801\u4e2d\u3002\n          \n \u53e6\u9644\u672c\u4eba\u7684\u9519\u70b9\uff1a1. cmp\u4ece\u5927\u5230\u5c0f\u662fx>y;(\u6211\u4e3a\u4ec0\u4e48\u4f1a\u5199\u9519\u8fd8\u67e5\u4e0d\u51fa\u6765)   2.\u6ce8\u610f\u5de6\u95ed\u53f3\u5f00\u533a\u95f4  3.\u6ee450\u65f6top\u524d\u540e\u5efa\u8bae\u91cd\u8bb0\uff0c\u7528top\u6216\u8005top++\u90fd\u4f1a\u51fa\u9519\n \n\u4e2d\u95f4\u6709\u2605\u7684\u5730\u65b9\u662f\u53ef\u4ee5\u526a\u679d\u7684\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n//\u6574\u4f53\u601d\u8def\uff1a\u9996\u5148\uff0c\u4e2a\u4eba\u4e0d\u7406\u89e3\u7684\u5730\u65b9\u662f\u5c0f\u6728\u68cd\u7684\u6570\u91cf\u6ca1\u6709\u7ed9\u5b9a\uff0c\u8981\u9760\u679a\u4e3e\u6765\u4e00\u4e2a\u4e00\u4e2a\u8bd5\n// \u6240\u4ee5\u7b2c\u4e00\u904d\u8ba4\u4e3a\u9700\u8981\u4e8c\u5206\uff0c\u7136\u800c\u5e76\u4e0d\u662f\u4e8c\u5206\uff0c\u53ea\u8981\u76f4\u63a5\u8bd5\u5c31\u597d\u4e86 \n//  \u8bb0\u4f60\u5df2\u7ecf\u7528\u4e86\u591a\u5c11\u4e2a\u5c0f\u6728\u68cd\uff0c\u5f53\u7528\u5b8c\u65f6\u8df3\u51fa \u2460\u518d\u8bb0\u4e00\u4e2a\u5269\u4e0b\u4e86\u591a\u5c11\uff0c\u4e0d\u5269\u5e76\u4e14\u7528\u5b8c\u65f6\u5c31\u4e0d\u7528\u8bb0\u4e86 \n//  \u2461\u7136\u540e\u5c31\u662f\u5e38\u89c4\uff0c\u5982\u679c\u5c0f\u6728\u68cd\u6570\u91cf\u6ca1\u5b8c\uff0c\u4f46\u662f\u4e00\u6839\u6728\u68cd\u7684\u957f\u8bfb\u5b8c\u4e86\uff0c\u5c31\u4e0b\u6765\u4e00\u6839 \n//  \u56e0\u4e3a\u662f\u4e00\u4e2a\u4e00\u4e2a\u679a\u4e3e\u7684\uff0c\u6240\u4ee5\u4f1a\u5728\u6070\u597d\u53ef\u4ee5\u7684\u6570\u91cf\u7ed3\u675f\uff08\u5177\u4f53\u8bb2\u89e3\u5728\u4ee3\u7801\u4e2d\uff09 \n#include<bits/stdc++.h>\nusing namespace std;\nint a[109];\nbool used[109];\nint top=1,n;\nint length;//\u5176\u5b9e\u8fd9\u91cc\u53ef\u4ee5\u8bb0\u8fdbdfs\u4e2d \nbool comp(int x,int y)\n{\n\treturn x>y; //\u522b\u5199\u53cd \n}\nbool dfs(int tot,int rest,int last)//tot\u5df2\u7ecf\u62fc\u4e86\u51e0\u6839 rest\u662f\u5269\u4e0b\u7684\u603b\u957f\uff08\u4e00\u6839\uff09  length\u662f\u5df2\u7ecf\u62fc\u6210\u7684\u6700\u957f\u957f\u5ea6\n//\u2605last \u8bb0\u4e0a\u4e00\u4e2a\u6728\u68cd\u56e0\u4e3a\u6570\u7ec4\u662f\u4ece\u5927\u5f80\u5c0f\u6392\u7684\uff08\u89c1\u540e\u526a\u679d\uff09\uff0c\u6240\u4ee5 \u4ed6\u7684\u4e0b\u4e00\u6b21\u52a0\u6728\u68cd\u6ca1\u5fc5\u8981\u52a0\u6bd4\u4ed6\u5c0f\u7684\u6728\u68cd\u3002\u800c\u4e14\u4e0d\u7528\u8003\u8651\u4e00\u6837\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u4ece\u4ed6\u7684\u4e0b\u4e00\u4f4d\u5f00\u59cb\u52a0\u8fd9\u6837\u53ef\u4ee5\u6781\u5927\u7684\u63d0\u9ad8\u901f\u5ea6\uff08\u7ec8\u7ea7\u4f18\u5316\uff09\t\t\t\t\t               \n{\n\tif (tot == top && rest == 0)   return 1;//\u5982\u679c\u5c0f\u6728\u68cd\u6ca1\u4e86\uff0c\u5e76\u4e14\u957f\u5ea6\u591f\u4e86\uff0c\u8bf4\u660e\u8fd9\u5c31\u662f\u6b63\u786e\u7684\u6700\u5c0f\u957f\u5ea6\n\tif (tot == top)  return 0;//\u8fd9\u4e00\u6b65\u5176\u5b9e\u6ca1\u6709\u5fc5\u8981,\u56e0\u4e3a\u662f\u4e00\u4f4d\u4e00\u4f4d\u5224\u7684\uff0c\u4f46\u4e25\u8c28\u8d77\u89c1\u52a0\u4e0a\u4e86 \n\tif (rest == 0 ) rest = length,last=0;//\u5982\u679c\u603b\u957f\u62fc\u5b8c\u4e86\u4f46\u662f\u5c0f\u6728\u68cd\u8fd8\u6709\uff0c\u5c31\u518d\u6765\u4e00\u6839 \uff08\u9017\u53f7\u4ec5\u4e3a\u4e2a\u4eba\u559c\u597d\uff0c\u8c28\u614e\u4f7f\u7528\uff09 \n\tfor (int i = last+1; i < top; i++)//\u679a\u4e3e\u7a7a\u95f4\u4e2d\u7684\u5c0f\u6728\u68cd\uff0c\u770b\u54ea\u6839\u80fd\u7528 \n\t{\n\t\tif(used[i]) continue; //\u5982\u679c\u7528\u8fc7\u4e86\u7ee7\u7eed\u4e0b\u4e00\u7ec4 \n\t\tif(rest-a[i]<0) continue;//\u5982\u679c\u52a0\u5230\u6700\u540e\u4e00\u7ec4 \t\n\t\tused[i] = 1;//\u7ecf\u5178dfs \n\t\tif(dfs( tot+1, rest - a[i],i)) return 1;\n\t\tused[i] = 0;\n\t\tif(a[i]==rest || length==rest) break;//\u2605\u5934\u5c3e\u526a\u679d\n//\u96be\u70b9 \u8fd9\u91cc\u56e0\u4e3a\u5df2\u7ecf\u5728\u56de\u6eaf\u4e4b\u540e\uff0c\u6240\u4ee5\u77e5\u9053\u4e00\u5b9a\u662f\u5224\u9519\u8df3\u51fa\u6765\u7684\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u5224\u65ad\u5934\u4f4d\u548c\u5c3e\u4f4d\u4e24\u79cd\u60c5\u51b5\uff1a\n//\u56e0\u4e3a\u4ed6\u4eec\u5df2\u7ecf\u9519\u4e86\uff0c\u518d\u52a0\u4e0a\u4e24\u6bb5\u6bd4\u4ed6\u5c0f\u7684\u5408\u6210\u7684\u8bdd\u6548\u679c\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u53bb\u4e0a\u4e00\u884c\uff08\u53bb\u4e0a\u4e00\u4e2a\uff09\u91cd\u5224\uff1b \n\t\twhile(a[i]==a[i+1]) i++;//\u2605\u53bb\u91cd\u526a\u679d \u5982\u679c\u4e00\u6837\u7684\u8bdd\u8fdb\u4f4d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5ffd\u7565\u6389\u91cd\u590d\u7684\u60c5\u51b5 \n\t}\n\treturn 0; \n}\nint main()\n{\n\tint qi=0,he=0;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint tmp;\n\t\tcin>>tmp;\n\t\tif(tmp<=50)\n\t\t{\n\t\t\ta[top++]=tmp;\n\t\t}//\u8fd9\u91cc\u662f\u6ee450\u7684\u65b9\u6cd5\uff0c\u5148\u62ff\u4e00\u4e2atmp\u8bb0\u8f93\u5165\u7684\u6570\uff0c\u5224\u65ad\u662f\u5426\u5927\u4e8e50\uff0c\u4e0d\u662f\u5c31\u6254\uff0c\u662f\u5c31\u5b58\u5165a\u6570\u7ec4\u4e2d \n\t\t//he+=a[i];\n\t\t//qi=max(qi,a[i]); ////\u6211\u7684\u9519\u8bef\uff0c\u91cd\u6765\u4e00\u4e2afor\u4e3a\u601d\u8def\u7b80\u4fbf\t\n\t}\n\tfor(int i=1;i<top;i++)\n\t{\n\t\the+=a[i];\n\t\tqi=max(qi,a[i]);   \n\t}\n\t//cout<<\"qi==\"<<qi<<\" \"<<\"he==\"<<he<<endl;\n\t/*for(int j=1;j<top;j++)\n\t{\n\t\tcout<<a[j]<<\" \";\n\t}\n\tcout<<endl;*/\n\tsort(a+1,a+top,comp);//\u2605\u6700\u4f18\u5316\u526a\u679d \u4ece\u5927\u5230\u5c0f\u6392\u5e8f \n\t/*for(int j=1;j<top;j++)\n\t{\n\t\tcout<<a[j]<<\" \";\n\t}*/\n\t//cout<<endl;\n\tfor (int i = qi; i <= he;i++) //\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u957f\u5ea6\uff0c\u5982\u679c\u53ef\u4ee5\u5219\u8f93\u51fa\n\t                             \n\t{\n\t\tif(he%i!=0) continue; //\u2605\u91cd\u70b9  \u53ef\u80fd\u6027\u526a\u679d  \u957f\u6728\u68cd\u662f\u6574\u6839\u7684\uff0c\u6240\u4ee5\u6728\u68cd\u603b\u957f\u4e00\u5b9a\u6574\u9664\u5355\u4e2a\u957f\u6728\u68cd\u6570 \n\t\tlength=i;//\u56e0\u4e3a\u6ca1\u8bb0\u5728dfs\u4e2d\u6240\u4ee5\u5728\u8fd9\u91cc\u8d4b\u503c \n\t\tif (dfs(1,i,0))//\u4ece\u7b2c\u4e00\u6839\u6728\u68cd\u5f00\u59cb\uff0c\u8fd8\u6ca1\u51cf\u65f6\u5269\u4e0blength\u957f\u5ea6\u7684rest\u91cf\uff0c\u4ed6\u7684\u4e0a\u4e00\u4e2a\u5c31\u662f\u7b2c0\u4e2a \n\t\t{\n\t\t\tcout<<i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1547298449,
        "uid": 157496,
        "name": "ksydom",
        "ccfLevel": 0,
        "title": "\u7ecf\u5178\u4e8c\u5206\u526a\u679d"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u76ee\u8003\u5bdf\u4e24\u70b9\uff1a\n1. \u526a\u679d\n2. DFS\n\n\u4ee5\u4e0b\u662f\u5bf9\u9898\u76ee\u8fdb\u884c\u5206\u6790,\u5f97\u51fa\u80fd\u591f\u8fdb\u884c**\u526a\u679d**\u7684\u5730\u65b9\n1. \u201c**\u6bcf\u6bb5\u7684\u957f\u90fd\u4e0d\u8d85\u8fc750**\u201d \u201c**\u8d85\u8fc750\u7684\u957f\u5ea6\u81ea\u89c9\u8fc7\u6ee4\u6389**\u201d \u6240\u4ee5\u58f0\u660eint[51],\u65e2\u80fd\u4fdd\u5b58\u6570\u636e\u53c8\u80fd\u4f9b\u6876\u6392\u5e8f\u4f7f\u7528\n2. \u201c**\u4e54\u6cbb\u6709\u4e00\u4e9b\u540c\u6837\u957f\u7684\u5c0f\u6728\u68cd**\u201d \u6c42 \u201c**\u6700\u5c0f\u53ef\u80fd\u957f\u5ea6**\u201dans \u6240\u4ee5\u6240\u6709\u5c0f\u6728\u68cd\u957f\u5ea6\u548c\u4e00\u5b9a\u80fd\u88abans\u6574\u9664\n3. \u201c **\u53ef\u80fd\u957f\u5ea6**\u201d \u8303\u56f4\u662f\uff1a[\u6240\u6709\u5c0f\u6728\u68cd\u6700\u5927 , \u5c0f\u6728\u68cd\u957f\u5ea6\u548c]\n4. \u201c**\u6700\u5c0f\u957f\u5ea6**\u201d \u5f97\u5230\u6700\u5c0f\u957f\u5ea6\u7ed3\u675fDFS\n\n\u6240\u4ee5\u526a\u679d\u7b56\u7565\u662f\uff1a\n1. \u8bfb\u53d6\u6570\u636e\u65f6\uff0c\u6876\u6392\u5e8f+\u5ffd\u7565\u5927\u4e8e50\u7684\u6570\u636e+\u83b7\u53d6\u6240\u6709\u5c0f\u6728\u68cd\u7684\u6700\u5927\u3001\u6700\u5c0f\u3001\u6700\u957f\u5ea6\u7684\u548c\n```java\n        for (int i = 0; i < N; i++) {\n            in.nextToken();\n            int t = (int) in.nval;\n            if (t > 50) continue;\n            nums[t]++;\n            total += t;\n            s = Math.min(s, t);\n            e = Math.max(e, t);\n        }\n```\n\n\n2. \u4e0d\u80fd\u7528total\u6574\u9664\u7684\u53ef\u80fd\u957f\u5ea6i\uff0c\u4e0d\u8fdb\u884cdfs\u5c1d\u8bd5\n```java\n        for (int i = e; i < total; i++) {\n            if (total % i != 0) continue;\n            find(total / i, 0, i, e);\n            if (ans != 0) break;\n        }\n```\n\n\n3. \u4ece\u5c0f\u5230\u5927\u904d\u5386\u53ef\u80fd\u7684\u957f\u5ea6\uff0c\u4e00\u65e6\u627e\u5230\u7acb\u5373\u7ed3\u675f\n\n```java\n        if (cnt == 0) {\n            System.out.println(len);\n            System.exit(0);\n        }\n```\n\n\u5269\u4f59\u8981\u8003\u67e5\u7684\u5c31\u662f\u9012\u5f52\u904d\u5386dfs\u4e86\n\u4f7f\u7528\u9012\u5f52\u904d\u5386\u7684\u65b9\u5f0f\uff0c\u9009\u5b9a\u4e00\u4e2a\u957f\u5ea6i\uff0c\u9a8c\u8bc1\u5c0f\u6728\u68cd\u76f8\u52a0\u540e\u4e2d\u80fd\u5f97\u591a\u4e2a\u957f\u5ea6\u4e3ai\n```java\nprivate static void find(int cnt, int sum, int len, int max) {\n        if (cnt == 0) {\n            System.out.println(len);\n            System.exit(0);\n        }\n        if (sum == len) {\n            find(cnt - 1, 0, len, e);\n            return;\n        }\n        for (int i = max; i >= s; i--) {\n            if (nums[i] > 0 && i + sum <= len) {\n                nums[i]--;\n                find(cnt, sum + i, len, i);\n                nums[i]++;\n                if (sum == 0 || sum + i == len) break;\n            }\n        }\n    }\n```\n\n\u4e0b\u9762\u662f\u5b8c\u6574\u7684java\u4ee3\u7801\uff1a\n```java\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.StreamTokenizer;\n\npublic class Main {\n    private static final int[] nums = new int[51];\n    private static int ans = 0, s = 100, e = 0, total = 0;\n\n    public static void main(String[] args) throws Exception {\n        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));\n        in.nextToken();\n        int N = (int) in.nval;\n        for (int i = 0; i < N; i++) {\n            in.nextToken();\n            int t = (int) in.nval;\n            if (t > 50) continue;\n            nums[t]++;\n            total += t;\n            s = Math.min(s, t);\n            e = Math.max(e, t);\n        }\n        for (int i = e; i < total; i++) {\n            if (total % i != 0) continue;\n            find(total / i, 0, i, e);\n            if (ans != 0) break;\n        }\n        if (ans == 0) ans = total;\n        System.out.println(ans);\n    }\n\n    private static void find(int cnt, int sum, int len, int max) {\n        if (cnt == 0) {\n            System.out.println(len);\n            System.exit(0);\n        }\n        if (sum == len) {\n            find(cnt - 1, 0, len, e);\n            return;\n        }\n        for (int i = max; i >= s; i--) {\n            if (nums[i] > 0 && i + sum <= len) {\n                nums[i]--;\n                find(cnt, sum + i, len, i);\n                nums[i]++;\n                if (sum == 0 || sum + i == len) break;\n            }\n        }\n    }\n\n}\n\n```\n",
        "postTime": 1570366486,
        "uid": 236490,
        "name": "\u738b\u9e4fPRO",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "\n\n### \u9898\u76ee\u63cf\u8ff0\uff1a\n\u6bcf\u7ec4\u6570\u636e\u7ed9\u51faN\u6839\u5c0f\u6728\u68cd\uff0c\u628a\u5b83\u4eec\u62fc\u63a5\u6210\u82e5\u5e72\u6839\u957f\u5ea6\u76f8\u7b49\u7684\u6728\u68cd\uff0c\u6c42\u8be5\u957f\u5ea6\u7684\u6700\u5c0f\u503c\u3002\n\n### \u9898\u89e3\uff1a\n\u8fd9\u9898\u4f3c\u4e4e\u5c31\u662f\u66b4\u641c\u52a0\u526a\u679d\u4f18\u5316\uff0c\u4e0d\u8fc7\u526a\u679d\u6bd4\u8f83\u590d\u6742\u3002\n\u5148\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint a[100],v[100],n,len,cnt;\n               //\u6b63\u5728\u62fc \u5f53\u524d\u957f\u5ea6 \u4e0a\u4e00\u6839\u5c0f\u6728\u68cd \nbool dfs(int stick,int cab,int last){  \n\tif(stick>cnt) return true;      //\u6b63\u5728\u62fc\u7684\u5927\u4e8e\u603b\u6570 \u5373\u5168\u62fc\u5b8c\n    //\u8fd9\u4e00\u6839\u62fc\u5b8c\uff0c\u62fc\u4e0b\u4e00\u6839 \n\tif(cab==len) return dfs(stick+1,0,1); \n\tint fail=0;         //\u526a\u679d\uff081\uff09\n\tfor(int i=last;i<=n;i++){    //\u526a\u679d\uff082\uff09\n\t\tif(!v[i]&&cab+a[i]<=len&&fail!=a[i]){\n\t\t\tv[i]=1;     //\u526a\u679d(3)\n\t\t\tif(dfs(stick,cab+a[i],i+1)) return true;   //\u9012\u63a8\n\t\t\tfail=a[i];\n\t\t\tv[i]=0; \n            //\u526a\u679d(4)\n\t\t\tif(cab==0||cab+a[i]==len) return false;  \n\t\t}\n\t}\n\treturn false;\n}\n\nint main(){\n\twhile(cin>>n){\n\t\tint sum=0,val=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tcin>>a[i];\n\t\t\tif(a[i]>50){   //\u52a0\u5f3a\u7248\u8981\u628a\u8d85\u8fc750\u7684\u957f\u5ea6\u8fc7\u6ee4\u6389\n\t\t\t\ti--;\n\t\t\t\tn--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsum+=a[i];\n\t\t\tval=max(val,a[i]);\n\t\t}\n\t\tsort(a+1,a+n+1);\n\t\treverse(a+1,a+n+1);\n\t\tfor(len=val;len<=sum;len++){\n        //\u6728\u68cd\u957f\u5ea6\u5fc5\u5b9a\u662f\u957f\u5ea6\u548c\u7684\u7ea6\u6570\n\t\t\tif(sum%len) continue;    \n\t\t\tcnt=sum/len;      \n\t\t\tmemset(v,0,sizeof(v));\n\t\t\tif(dfs(1,0,1)) break;\n\t\t}\n\t\tcout<<len<<endl;\n\t}\n\treturn 0;\n}\n```\n4\u4e2a\u526a\u679d\uff1a\n(1) \u5bf9\u4e8e\u5f53\u524d\u539f\u59cb\u6728\u68d2\uff0c\u8bb0\u5f55\u6700\u8fd1\u4e00\u6b21\u5c1d\u8bd5\u62fc\u63a5\u7684\u6728\u68cd\u957f\u5ea6\u3002\u5982\u679c\u5206\u652f\u641c\u7d22\u5931\u8d25\u56de\u6eaf\uff0c\u4e0d\u518d\u5c1d\u8bd5\u5411\u8be5\u6728\u68cd\u4e2d\u62fc\u63a5\u5176\u4ed6\u76f8\u540c\u957f\u5ea6\u7684\u6728\u68cd\uff08\u5fc5\u5b9a\u4e5f\u4f1a\u5931\u8d25\uff09\n(2)\u4f7f\u52a0\u5165\u5c0f\u6728\u68cd\u7684\u957f\u5ea6\u9012\u51cf\n(3)\u7528vis\u6570\u7ec4\u6807\u8bb0\u6bcf\u6839\u6728\u68cd\u662f\u5426\u7528\u8fc7\u3002\u56e0\u4e3a\u5982\u679ccab==len\uff0clast\u4f1a\u91cd\u7f6e\u4e3a1\n(4)\u5982\u679c\u5f53\u524d\u957f\u68cd\u5269\u4f59\u7684\u672a\u62fc\u957f\u5ea6\u7b49\u4e8e\u5f53\u524d\u6728\u68cd\u7684\u957f\u5ea6\u6216\u539f\u59cb\u957f\u5ea6\uff0c\u7ee7\u7eed\u62fc\u4e0b\u53bb\u65f6\u5374\u5931\u8d25\u4e86(\u524d\u9762\u6ca1\u6709return true)\uff0c\u5c31\u76f4\u63a5\u56de\u6eaf\u5e76\u6539\u4e4b\u524d\u62fc\u7684\u6728\u68cd\u3002\n\n   \u5f53\u524d\u957f\u68cd\u5269\u4f59\u7684\u672a\u62fc\u957f\u5ea6\u7b49\u4e8e\u5f53\u524d\u6728\u68cd\u7684\u957f\u5ea6\u65f6\uff0c\u8fd9\u6839\u6728\u68cd\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\u663e\u7136\u662f\u62fc\u5230\u8fd9\uff08\u5982\u679c\u7528\u66f4\u591a\u77ed\u6728\u6839\u62fc\u5b8c\u5269\u4e0b\u7684\u8fd9\u6bb5\uff0c\u628a\u8fd9\u6839\u6728\u68cd\u7559\u5230\u540e\u9762\u663e\u7136\u4e0d\u5982\u628a\u66f4\u591a\u603b\u957f\u76f8\u7b49\u7684\u77ed\u6728\u68cd\u6254\u5230\u540e\u9762\uff09\u3002\u5982\u679c\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\u7ee7\u7eed\u62fc\u4e0b\u53bb\u5931\u8d25\u4e86\uff0c\u90a3\u80af\u5b9a\u662f\u4e4b\u524d\u7684\u6728\u68cd\u7528\u9519\u4e86\uff0c\u56de\u6eaf\u6539\u5373\u53ef\u3002\n   \n#### \u5199\u4f5c\u65f6\u95f4\uff1a\n2019-7-31\n\n### \u5e7f\u544a\n[CSDN\u535a\u5ba2](https://blog.csdn.net/WjNaG)",
        "postTime": 1566895633,
        "uid": 101319,
        "name": "WjNaG",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "### \u8fd9\u5c31\u662f\u4e00\u9053DFS~~(\u5927\u6cd5\u5e08)~~\n## \u4e0d\u8981\u60f3\u591a\u4e86\n# \u591a\u60f3\u60f3\u526a\u679d\uff01\n\n\u9644\u4e0a\u9898\u89e3\uff0c\u7a0b\u5e8f\u5185\u6709\u5f88\u8be6\u5c3d\u7684\u6ce8\u91ca(\u9488\u5bf9poj1011\u7684\uff0c\u5f53\u7136\u4e5f\u6709\u9488\u5bf9luogu\u7684\u4ee3\u7801\uff0c\u9644\u5728\u91cc\u9762\u4e86)\n\n```cpp\n/*\nPOJ 1011\n\u6728\u68d2\n**************************\n\u6728\u68d2\n\nTime Limit: 1000MS\nMemory Limit: 10000K\nTotal Submissions: 156283\nAccepted: 37378\n\nDescription\n\u4e54\u6cbb\u62ff\u6765\u4e00\u7ec4\u7b49\u957f\u7684\u6728\u68d2\uff0c\u5c06\u5b83\u4eec\u968f\u673a\u5730\u780d\u65ad\uff0c\u4f7f\u5f97\u6bcf\u4e00\u8282\u6728\u68cd\u7684\u957f\u5ea6\u90fd\u4e0d\u8d85\u8fc750\u4e2a\u957f\u5ea6\u5355\u4f4d\u3002\n\u7136\u540e\u4ed6\u53c8\u60f3\u628a\u8fd9\u4e9b\u6728\u68cd\u6062\u590d\u5230\u4e3a\u88c1\u622a\u524d\u7684\u72b6\u6001\uff0c\u4f46\u5fd8\u8bb0\u4e86\u521d\u59cb\u65f6\u6709\u591a\u5c11\u6728\u68d2\u4ee5\u53ca\u6728\u68d2\u7684\u521d\u59cb\u957f\u5ea6\u3002\n\u8bf7\u4f60\u8bbe\u8ba1\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5e2e\u52a9\u4e54\u6cbb\u8ba1\u7b97\u6728\u68d2\u7684\u53ef\u80fd\u6700\u5c0f\u957f\u5ea6\u3002\u6bcf\u4e00\u8282\u6728\u68cd\u7684\u957f\u5ea6\u90fd\u7528\u5927\u4e8e\u96f6\u7684\u6574\u6570\u8868\u793a\u3002\n\nInput\n\u8f93\u5165\u5305\u542b\u591a\u7ec4\u6570\u636e\uff0c\u6bcf\u7ec4\u6570\u636e\u5305\u62ec\u4e24\u884c\u3002\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u4e0d\u8d85\u8fc764\u7684\u6574\u6570\uff0c\n\u8868\u793a\u780d\u65ad\u4e4b\u540e\u5171\u6709\u591a\u5c11\u8282\u6728\u68cd\u3002\u7b2c\u4e8c\u884c\u662f\u622a\u65ad\u4ee5\u540e\uff0c\u6240\u5f97\u5230\u7684\u5404\u8282\u6728\u68cd\u7684\u957f\u5ea6\u3002\n\n\u5728\u6700\u540e\u4e00\u7ec4\u6570\u636e\u4e4b\u540e\uff0c\u662f\u4e00\u4e2a\u96f6\u3002\nOutput\n\u4e3a\u6bcf\u7ec4\u6570\u636e\uff0c\u5206\u522b\u8f93\u51fa\u539f\u59cb\u6728\u68d2\u7684\u53ef\u80fd\u6700\u5c0f\u957f\u5ea6\uff0c\u6bcf\u7ec4\u6570\u636e\u5360\u4e00\u884c\u3002\n\nSample Input\n\n9\n5 2 1 5 2 1 5 2 1\n4\n1 2 3 4\n0\n\nSample Output\n6\n5\n\n**************************\n\nluogu\u4e0a\u7684\u9898\u76ee\uff0c\u53ef\u80fd\u4f1a\u6709\u957f\u5ea6>50\u7684\u6728\u68cd\u5b58\u5728\uff0c\u6240\u4ee5\u4f60\u4eec\u81ea\u5df1\u8fc7\u6ee4\u4e0bqwq\n\u6211\u5c31\u9488\u5bf9\u8fd9\u9053POJ\u4e0a\u7684\u9898\u76ee\u5199\u4e2a\u9898\u89e3\n\n\u601d\u8def\u5dee\u4e0d\u591a\u561bqwq\n\u7ba1\u7406\u5458\u4e0d\u7ed9\u8fc7\u5c31\u718a\u4f60\u54c8VwV\n*/\n#include<bits/stdc++.h>\nusing namespace std;\nint n,lmark,ans,sum;\nint nd;//\u5f53\u524d\u679a\u4e3e\u5230\u7684\u6728\u68cd\u957f\u5ea6\nint a[66];//\u8bb0\u5f55\u6728\u68cd\u957f\u5ea6\nbool vis[66];//\u8bb0\u5f55\u6728\u68cd\u6709\u6ca1\u6709\u88ab\u7528\u8fc7\nbool cmp(int x,int y) {//\u6392\u5e8f\u6bd4\u8f83\u89c4\u5219\uff0c\u5c06\u6728\u68cd\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n\treturn x>y;\n}\nbool dfs(int num,int len) {//num\u8868\u793a\u8fd8\u6709num\u6839\u53ef\u4ee5\u7528,len\u8868\u793a\u8fd8\u6709len\u7684\u957f\u5ea6\u5c31\u6784\u9020\u62101\u6839\u5b8c\u6574\u7684\u4e86\n\tif(num==0&&len==0)//\u5982\u679c\u6728\u68cd\u5168\u90e8\u7528\u5b8c\u7136\u540e\u53c8\u6784\u9020\u597d\u4e86\u6728\u68cd\n\t\t//\u7531\u6211\u4eec\u524d\u9762\u662f\u8ba1\u7b97\u9664\u6cd5\uff0c\u6240\u4ee5\u5f53num==0\u65f6\uff0c\u6728\u68cd\u7684\u6839\u6570\u5b9a\u7136\u662f\u6700\u591a\u7684AwA\n\t\treturn 1;\n\tif(len==0)len=nd;//\u6784\u9020\u5b8c1\u6839\u4e86\uff0c\u5c31\u518d\u6765\u4e00\u6839\n\tint mark=1;//\u8bb0\u5f55\u5faa\u73af\u5f00\u59cb\u70b9\n\tif(len!=nd)mark=lmark+1;//\u5982\u679c\u4e0d\u662f\u4e00\u6839\u5168\u65b0\u7684\u5f00\u59cb\uff0c\u5c31\u628amark\uff08\u5faa\u73af\u5f00\u59cb\u70b9\uff09\u8bb0\u4e3almark+1(\u524d\u9762\u975e\u91cd\u590d\u6728\u68cd\u7684\u4f4d\u7f6e)\n\tfor(int i=mark; i<=n; i++)//\u526a\u679d\uff0c\u4ece\u524d\u9762\u975e\u91cd\u590d\u7684\u4f4d\u7f6e\u5f00\u59cb\u5faa\u73af (\u679a\u4e3e\u4e0e\u5f53\u524d\u6728\u68cd\uff08\u5df2\u6784\u6210\uff09\u8fdb\u884c\u5339\u914d\u7684\u6728\u68cd)\n\t\tif(vis[i]==0&&a[i]<=len) {//vis\u6570\u7ec4\u8bb0\u5f55\u8fd9\u4e2a\u6728\u68cd\u6709\u6ca1\u6709\u88ab\u7528\u8fc7\n\t\t\tif(i>1&&vis[i-1]==0&&a[i]==a[i-1])//\u526a\u679d\uff1b\u5f53\u51fa\u73b0\u91cd\u590d\u6728\u68cd\u65f6\uff0c\u76f4\u63a5\u8df3\u8fc7\n\t\t\t\t//\u53ef\u4ee5\u8bc1\u660e\uff0c\u5728\u91cd\u590d\u6728\u68cd\u4e2d\u4efb\u53d6\u4e00\u6839\uff0c\u4e0d\u5f71\u54cd\u7b54\u6848\u6700\u7ec8\u7ed3\u679c\n\t\t\t\t/*\n\t\t\t\tAn example\n\n\t\t\t\tInput\n\t\t\t\t6\n\t\t\t\t1 1 1 2 2 2\n\n\t\t\t\tOutput\n\t\t\t\t3\n\n\t\t\t\t\u53ef\u4ee5\u89c1\u5f97\uff0c\u53d6\u7b2c1\u6839\u548c\u53d6\u7b2c2\u6839\u548c\u53d6\u7b2c3\u6839\u548c\u540e\u9762\u7684\u957f\u5ea6\u4e3a2\u7684\u6728\u68cd\u8fdb\u884c\u5339\u914d\uff0c\u662f\u4e0d\u5f71\u54cd\u7a0b\u5e8f\u6700\u7ec8\u7ed3\u679c\u7684\n\t\t\t\t\u91cd\u590d\u7684\u53ea\u8ba1\u7b97\u7b2c\u4e00\u6839\n\t\t\t\t\u90a3\u4e48\u53ef\u4ee5\u51cf\u5c11\u8ba1\u7b97\u91cf\n\t\t\t\t\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u6392\u8fc7\u5e8f\u4e86\n\t\t\t\t\u90a3\u4e48\u5224\u65ad\u91cd\u590d\u5c31\u7b80\u5355\u4e86\n\t\t\t\t*/\n\t\t\t\tcontinue;\n\t\t\tvis[i]=1;//\u8bb0\u4e3a\u8be5\u6728\u68d2\u5df2\u7ecf\u7528\u8fc7\u4e86\n\t\t\tlmark=i;//\u6700\u540e\u7684\u4e0d\u91cd\u590d\u4f4d\u7f6e\n\t\t\tif(dfs(num-1,len-a[i]))//\u8003\u8651\u4e0b\u4e00\u6839\u6728\u68cd\n\t\t\t\treturn 1;\n\t\t\telse {\n\t\t\t\tvis[i]=0;//\u56de\u6eaf\n\t\t\t\tif(len==a[i]||len==nd)\n\t\t\t\t\treturn 0;//len==a[i]\u8bf4\u660e\u5f53\u524d\u6728\u68cd\u662f\u88ab\u5269\u4f59\u7684\n\t\t\t\t//len==nd\u662f\u6307\u5f53\u524d\u6728\u68cd \u65e0\u6cd5\u88ab\u5339\u914d\uff08\u5373\u4e0a\u9762\u7684dfs(num-1,len-a[i])\u65e0\u6cd5\u88ab\u89e6\u53d1\uff09\n\t\t\t\t//\u90a3\u4e48\u5f53\u524d\u7b54\u6848\u80af\u5b9a\u4e0d\u662f\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6848\n\t\t\t}\n\t\t}\n\treturn 0;\n}\nint main() {\n\twhile(scanf(\"%d\",&n),n) { //\u9488\u5bf9POJ\u7684\u54e6\n\t\t//\u5982\u679c\u662fluogu\u4e0a\u7684\u8bdd\n\t\t//\u5e94\u8be5\u4ecb\u6837\u5b50\u5199\n\t\t//scanf(\"%d\",&n);\n\t\tans=sum=0;\n\t\tfor(int i=1; i<=n; i++) {\n\t\t\tscanf(\"%d\",a+i);\n\t\t\tsum+=a[i];//sum\u7d2f\u8ba1\u603b\u957f\u5ea6\uff0c\u4e3a\u540e\u9762\u7684\u526a\u679d\u505a\u597d\u94fa\u57ab\n\t\t}//\u4e5f\u662f\u9488\u5bf9POJ\u7684\u548c\u853c\u6570\u636e\n\t\t//\u5bf9\u4e8eluogu\uff0c\u4f60\u5e94\u8be5\u8fd9\u6837\u5b50\u5199\n\t\t/*\n\t\t\tint cnt=n,n=0;\n\t\t\tfor(int i=1;i<=cnt;i++)\n\t\t\t{\n\t\t\t\tint x;\n\t\t\t\tscanf(\"%d\",&x);\n\t\t\t\tif(x<=50)a[++n]=x;\n\t\t\t}\n\t\t*/\n\t\tsort(a+1,a+n+1,cmp);//\u6392\u5e8f\uff0c\u4e3a\u53bb\u91cd\u505a\u597d\u94fa\u57ab\n\t\tfor(int i=a[1]; i<=sum/2; i++) {//\u526a\u679d;\u6bcf\u6839\u6728\u68cd\u7684\u957f\u5ea6\u53ea\u53ef\u80fdsum>=x>=min{a},\u4e14\u4e0d\u53ef\u80fd\u5728sum{a}/2-sum{a}\u4e4b\u95f4\n\t\t\t//\u5373\u82e5\u5728sum{a}/2-sum{a} \u4e4b\u95f4\u65f6\n\t\t\t//\u5b9a\u7136\u4f1a\u89e6\u53d1sun%i>0\u7684\u6761\u4ef6\n\t\t\t//\u51cf\u5c11\u8ba1\u7b97\u91cfqwq\n\t\t\tif(sum%i)continue;//\u526a\u679d\uff1b\u5982\u679c\u6728\u68cd\u7684\u603b\u957f\u5ea6\u65e0\u6cd5\u6574\u9664\u5f53\u524d\u679a\u4e3e\u7684\u957f\u5ea6\n\t\t\t//\u8bf4\u660e\u65e0\u8bba\u5982\u4f55\u90fd\u65e0\u6cd5\u6784\u6210\u5b8c\u6574\u7684\u6839\n\t\t\tmemset(vis,0,sizeof(vis));//\u628a\u6807\u8bb0\u6570\u7ec4\u6e05\u7a7a\n\t\t\tlmark=1;\n\t\t\tnd=i;//\u8bb0\u5f55\u4e0b\u6765\u679a\u4e3e\u5230\u7684\u957f\u5ea6\uff08\u6211\u61d2\u5f97\u5f00\u5168\u5c40\u53d8\u91cf\u4e862333\uff09\n\t\t\tif(dfs(n,i)) {\n\t\t\t\tans=i;\n\t\t\t\tbreak;//\u5982\u679c\u641c\u5230\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u4ece\u5c0f\u5230\u5927\u5faa\u73af\uff0c\u5982\u679c\u627e\u5230\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e2a\u89e3\u5b9a\u7136\u662f\u6700\u4f18\u89e3\n\t\t\t\t//\u76f4\u63a5\u8bb0\u5f55\u4e0bans\uff0c\u5c31\u53ef\u4ee5\u95ea\u4eba\u4e86\n\t\t\t}\n\t\t}\n\t\tif(ans)printf(\"%d\\n\",ans);//\u5982\u679cans\u6709\u88ab\u66f4\u65b0\u8fc7\uff08\u5373\u627e\u5230\u4e86\u6bd4\u6240\u6709\u7684\u51d1\u62101\u6839\u66f4\u597d\u7684\u7b54\u6848\uff09\uff0c\u90a3\u4e48\u8f93\u51fa\u66f4\u597d\u7684\u7b54\u6848\n\t\telse printf(\"%d\\n\",sum);//\u4e0d\u7136\u5c31\u628a\u6240\u6709\u62fc\u5230\u4e00\u8d77\n\t}\n\treturn 0;//\u5b8c\u7ed3\u6492fafa\n}\n```\n\n\u5176\u5b9e~~\u84dd\u4e66\uff08\u4fe1\u606f\u5b66\u5965\u8d5b\u4e00\u672c\u901a\u3010\u63d0\u9ad8\u7bc7\u3011\uff09~~\u4e0a\u9762\u6709\u66f4\u591a\u7684\u526a\u679d\n\n\u4f46\u662f\u4f3c\u4e4e\u6709\u4e9b\u526a\u679d\u5947\u5947\u602a\u602a\n\n\u662f\u9519\u7684\u5462qwq\n\n\n\u597d\u60f9\uff0c\u5c31\u5230\u8fd9\u91cc\u5566\u3002\n\n\t\t\t\t\t\t\t\t\u6211\u662f\u5206\u5272\u7ebf\n----\n\n----\n\n",
        "postTime": 1541038517,
        "uid": 58399,
        "name": "\u72f8\u72f8\u517b\u7684\u654f\u654f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "#### \u548c\u5404\u4f4d\u5927\u4f6c\u7684\u60f3\u6cd5\u63a5\u8fd1\uff0c\u526a\u679d\u4e5f\u5927\u4f53\u76f8\u540c\u3002\u4f46\u6211\u4fee\u6539\u4e86dfs\u4e2d\u7684\u53d8\u91cf\uff0c\u7528now\uff08\u5f53\u524d\u5df2\u62fc\u957f\u5ea6\uff09\u548cleft\uff08\u5269\u4f59\u6240\u9700\u957f\u5ea6\uff09\uff0c\u6216\u8bb8\u66f4\u597d\u7406\u89e3\u3002\n\n## P.S\uff1a\n#### \u6211\u8bf4\u4e00\u8bf4\u526a\u679d\u7684\u95ee\u9898\u3002\u5f00\u59cb\u6211\u89c9\u5f97\u4f20\u9012\u6700\u5927\u80fd\u7528\u7684\u6728\u68cd\u957f\u5ea6\uff08maxu\uff09\u662f\u591a\u4f59\u7684\uff0c\u4ece\u5269\u4f59\u957f\u5ea6\u5f00\u59cb\u904d\u5386\u5c31\u597d\u4e86\uff0c\u5373for\u4eceleft\u5230minl\uff08\u5269\u4f59\u6240\u9700\u957f\u5ea6\uff09\u5373\u53ef\uff0c\u590d\u6742\u5ea6\u53ef\u80fd\u8fd8\u80fd\u4e0b\u964d\uff08left<=maxu\u65f6\u904d\u5386\u6b21\u6570\u51cf\u5c11\uff0c\u8fd8\u5c11\u4e86\u4e00\u4e2a\u4f20\u503c\uff09\u3002\u5f53\u7136\uff0cT\u4e86\u3002\u540e\u6765\u4ed4\u7ec6\u4e00\u60f3\uff0c\u5f53\u62fc\u4e00\u6839\u65b0\u6728\u68cd\u65f6\uff0cleft\u5373\u4e3a\u6728\u68cd\u957f\u5ea6\uff0c\u5728\u67d0\u4e9b\u7279\uff08du\uff09\u6b8a\uff08liu\uff09\u6570\uff08ka\uff09\u636e\uff08fa\uff09\u4e2d\u8fdc\u5927\u4e8e\u6700\u5927\u53ef\u7528\u957f\u5ea6\u3002\u81ea\u7136\uff0c\u51c9\u4e86\u3002\u5e76\u4e14\uff0c\u5176\u5b9eleft<=maxu\u65f6\uff0c\u6709i<=left\u526a\u679d\u4fdd\u8bc1\u76f4\u63a5\u7565\u8fc7\u65e0\u6548\u90e8\u5206\u3002\n#### \u53e6\u5916\uff0c\u4ece\u5927\u5f80\u5c0f\u53d6\u4e5f\u662f\u663e\u7136\u7684\uff1a\u5982\u540c\u90a3\u4e2a\u8457\u540d\u7684\u9e21\u6c64\u6545\u4e8b\u2014\u2014\u5148\u653e\u77f3\u5934\u540e\u653e\u6c99\u5b50\uff0c\u5148\u5927\u5757\u540e\u96f6\u788e\u53ef\u4ee5\u4fdd\u8bc1\u5927\u5757\uff08\u957f\u6728\u68cd\uff09\u7684\u5904\u7406\uff0c\u800c\u4e0d\u5f71\u54cd\u96f6\u788e\uff08\u77ed\u6728\u68cd\uff09\u7684\u62fc\u51d1\u3002\n###### \u4ee5\u4e0a\uff08\u53ca\u4ee5\u4e0b\uff09\u5747\u4ece\u4e00~~\u8111\u56de\u8def\u6e05\u5947\u7684~~\u849f\u84bb\u89c6\u89d2\u8bf4\u660e\uff0c\u5927\u4f6c\u4eec\u8bf7\u89c1\u8c05\uff01\n```cpp\n#include<cstdio>\n#include<cstdlib>\nusing namespace std;\nint cnt[60]={},maxl=0,minl=51;//\u4e0d\u8d85\u8fc750\u7684\u6728\u68cd\u957f\u5ea6\uff08\u4f3c\u4e4e\uff09\u660e\u786e\u6697\u793a\u4e86\u6876\u6392\u5e8f\uff0cmaxl\u3001minl\u4e0d\u89e3\u91ca\ninline int read()\n{\n    int x=0;\n    char c=getchar();\n    while (c<'0'||c>'9')\n        c=getchar();\n    while (c>='0'&&c<='9')\n        x=(x<<3)+(x<<1)+c-'0',c=getchar();\n    return x;\n}//\u5feb\u8bfb\uff08\u6bd4\u5927\u4f6c\u4eec\u7684\u6162\uff09\ninline int max(int a,int b)\n{\n    return (a>b)?a:b;\n}\ninline int min(int a,int b)\n{\n    return (a<b)?a:b;\n}//\u624b\u5199min\u3001max\nvoid dfs(int rest,int now,int left,int maxu)//\u6838\u5fc3\u4e0e\u5404\u4f4d\u5927\u4f6c\u76f8\u4f3c\uff0c\u8f7b\u55b7\n{\n    if (!rest)\n    {\n        printf(\"%d\",now+left);\n        exit(0);\n    }\n    if (!left)\n    {\n        dfs(rest-1,0,now,maxl);//\u4e0d\u5269\u957f\u5ea6\u5219\u5f53\u524d\u957f\u5ea6\u4e3a\u6728\u68cd\u957f\u5ea6\n        return ;\n    }\n    for (int i=maxu;i>=minl;--i)\n        if (cnt[i]&&i<=left)\n        {\n            --cnt[i];\n            dfs(rest,now+i,left-i,i);\n            ++cnt[i];//\u56de\u6eaf\n            if (now==0||i==left)//now=0\u5373\u62fc\u4e00\u6839\u65b0\u6728\u68cd\uff0c\u53ea\u7528\u6700\u5927\u7684\u5c31\u884c\u4e86\n            \t\t\t\t\t//i==left\u5373\u5f53\u524d\u521a\u597d\u62fc\u6210\u4e00\u6839\u5b8c\u6574\u6728\u68cd\uff0c\u663e\u7136\u6700\u4f18\uff0c\u5269\u4f59\u4e0d\u7ba1\u3002\n                return ;\n        }\n}\nint main()\n{\n    int n=read(),sum=0,a;\n    for (int i=1;i<=n;++i)\n    {\n        a=read();\n        if (a>50)\n            continue;//\u6ce8\u610f\u5751\u70b9\n        maxl=max(maxl,a);\n        minl=min(minl,a);\n        ++cnt[a];\n        sum+=a;\n    }\n    for (int i=maxl;i<=(sum>>1);++i)\n        if (sum%i==0)//\u663e\u7136\u4e0d\u80fd\u6709\u975e\u6574\u6570\u6839\u6728\u68cd\n            dfs(sum/i,0,i,maxl);\n    printf(\"%d\",sum);//\u5982\u679c\u600e\u4e48\u51d1\u90fd\u4e0d\u884c\uff0c\u5c31\u4e00\u6839\u5427\n    return 0;\n}\n```",
        "postTime": 1538450763,
        "uid": 17973,
        "name": "1517460958dyc",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "## \u7b54\u6848\u53ef\u80fd\u7684\u8303\u56f4\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\uff0c\u7b54\u6848\u7684\u6700\u5c0f\u503c\u80af\u5b9a\u4e0d\u4f1a\u5c0f\u4e8e\u6728\u68cd\u957f\u5ea6\u7684\u6700\u5927\u503c\u3002\n\n\u5176\u6b21\uff0c\u5047\u8bbe\u628a\u6240\u6709\u5c0f\u6728\u68cd\u5168\u90fd\u62fc\u6210\u4e00\u6839\u6728\u68cd\uff0c\u957f\u5ea6\u4e3a\u6240\u6709\u6728\u68cd\u957f\u5ea6\u7684\u548c\uff0c\u7b54\u6848\u80af\u5b9a\u4e0d\u4f1a\u8d85\u8fc7\u8fd9\u4e2a\u548c\u3002\n\n---\n\n## \u4ec0\u4e48\u6837\u7684\u7b54\u6848\u53ef\u884c\n\n\u8bbe\u7b2c$i$\u6839\u6728\u68cd\u7684\u957f\u5ea6\u4e3a$a_i$\uff0c\u5219\u548c$s=a_1+a_2+a_{...}+a_n$\u3002\n\n\u8003\u8651\u679a\u4e3e\u62fc\u63a5\u540e\u7684\u6bcf\u6839\u6728\u68cd\u957f\u5ea6\u4e3a$m$\uff0c\u5f53$m|s$\u65f6\u53ef\u884c\u3002\n\n---\n\n## \u5bf9\u6570\u636e\u7684\u6392\u5e8f\n\n\u5728\u672c\u9898\u4e2d\uff0c\u5bf9\u6728\u68cd\u957f\u5ea6\u7684\u6392\u5e8f\u53ef\u4e0d\u4ec5\u8d77\u5230\u4f18\u5316\u641c\u7d22\u987a\u5e8f\u7684\u4f5c\u7528\uff0c\u8fd9\u662f\u7a0b\u5e8f\u4e00\u4e2a\u91cd\u8981\u526a\u679d\u7684\u57fa\u7840\u3002\n\n\u672c\u9898\u4e2d\u9700\u8981\u5bf9\u6728\u68cd\u7684\u957f\u5ea6\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff0c\u5177\u4f53\u539f\u56e0\u5c06\u5728\u4e0b\u9762\u89e3\u91ca\u3002\n\n---\n\n## \u907f\u514d\u4e0d\u53ef\u80fd\u60c5\u51b5\u4e0b\u7684\u91cd\u590d\u641c\u7d22\n\n\u5728\u672c\u9898\u7684\u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u539f\u5219\uff0c\u5373\u5f53$a_i=a_{i-1}$\u4e14\u7b2c$i-1$\u6839\u6728\u68cd\u6ca1\u6709\u88ab\u9009\u53d6\u7684\u60c5\u51b5\u4e0b\uff0c\u7b2c$i$\u6839\u4e5f\u4e0d\u9009\u53d6\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u5c1d\u8bd5\u5b8c\u6210\u4e00\u6839\u957f\u5ea6\u4e0d\u8d85\u8fc7\u6240\u679a\u4e3e\u7684$m$\u7684\u6728\u68cd\u65f6\uff0c\u662f\u6309\u7167\u4ece$1$\u5230$n$\u6bcf\u4e00\u6839\u8003\u8651\u7684\uff0c\u5f53\u5728\u8fc7\u7a0b\u4e2d\u653e\u5f03\u4e00\u6839\u6728\u68cd\u65f6\uff0c\u653e\u5f03\u7684\u662f\u548c\u8fd9\u4e00\u6839\u6728\u68cd\u6240\u6709\u76f8\u540c\u957f\u5ea6\u7684\u6728\u68cd\u3002\n\n---\n\n## \u6ee1\u8db3\u6761\u4ef6\u540e\u4e0d\u518d\u641c\u7d22\n\n\u8bbe\u5f53\u524d\u8003\u8651\u7b2c$i$\u6839\u6728\u68cd\uff0c\u8fd9\u4e00\u6839\u6728\u68cd\u5df2\u7ecf\u62fc\u63a5\u4e86$l$\u7684\u957f\u5ea6\uff0c\u5f53$l+a_i=m$\u65f6\uff0c\u4e0d\u518d\u641c\u7d22\u7b2c``i+1``\u5230\u7b2c``n``\u6839\u6728\u68cd\uff0c\u56e0\u4e3a\u4ed6\u4eec\u80af\u5b9a\u5728\u8fd9\u6839\u6728\u68cd\u4e2d\u4e0d\u7b26\u5408\u6761\u4ef6\u3002\n\n---\n\n## \u4ee3\u7801\u548c\u7ec6\u8282\n\ncode:\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define maxn 67\nint n,ans,h,a[maxn],m,ma,j=1;\nbool vis[maxn],flag=0;\nbool comp(int a,int b)\n{\n    return a>b;\n}//\u7528\u4e8esort\u7684\u6bd4\u8f83\u51fd\u6570\nvoid f(int u,int l,int c)//u\u4ee3\u8868\u5df2\u7ecf\u4f7f\u7528\u7684\u521d\u59cb\u6728\u68cd\u6570\u76ee\uff0cl\u4ee3\u8868\u5f53\u524d\u62fc\u7684\u6728\u68cd\u7684\u5f53\u524d\u957f\u5ea6\uff0cc\u4ee3\u8868\u4e0a\u4e00\u6b21\u9009\u62e9\u6728\u68cd\u7684\u4f4d\u7f6e+1\uff0c\u5373\u73b0\u5728\u9009\u62e9\u6728\u68cd\u65f6\u7684\u7f16\u53f7\u8d77\u59cb\n{\n    if(flag) return;//\u5982\u679c\u5df2\u7ecf\u627e\u5230\u4e00\u4e2a\u53ef\u884c\u89e3\uff0c\u7531\u4e8e\u662f\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u957f\u5ea6\uff0c\u6240\u4ee5\u4e00\u65e6\u627e\u5230\u53ef\u884c\u89e3\uff0c\u5c31\u4e00\u5b9a\u662f\u6240\u6c42\u7684\u6700\u4f18\u89e3\n    if(l==m)//\u5982\u679c\u5f53\u524d\u62fc\u7684\u8fd9\u6839\u6728\u68cd\u5df2\u7ecf\u6b63\u597d\u4e3a\u957f\u5ea6\u4e3am\u7684\u6728\u68cd\uff0c\u5373\u6211\u4eec\u8981\u62fc\u7684\u957f\u5ea6\n    {\n        if(u==n)//\u5982\u679c\u6728\u68cd\u5df2\u7ecf\u4f7f\u7528\u5b8c\u6bd5\uff0c\u5373\u627e\u5230\u53ef\u884c\u65b9\u6848\n        {\n            flag=1;//\u4f5c\u51fa\u6807\u8bb0\n            return;//\u8fd4\u56de\n        }\n        else\n        \tl=0,c=1;//\u5426\u5219\u5f00\u542f\u4e00\u6839\u65b0\u7684\u6728\u68cd\uff0c\u65b0\u7684\u6728\u68cd\u5f53\u524d\u957f\u5ea6\u4e3a1\uff0c\u6bcf\u4e00\u6839\u65b0\u7684\u6728\u68cd\u90fd\u4ece\u7b2c\u4e00\u4e2a\u5f00\u59cb\n    }\n    if(!l)//\u5982\u679c\u662f\u65b0\u7684\u6728\u68cd\n    {\n        int fff=0;\n        while(vis[++fff]);\n        vis[fff]=1;//\u627e\u5230\u7f16\u53f7\u6700\u5c0f\u4e14\u6ca1\u6709\u4f7f\u7528\u8fc7\u7684\u521d\u59cb\u6728\u68cd\uff0c\u5373\u5f53\u524d\u8fd8\u53ef\u7528\u7684\u6700\u77ed\u7684\u521d\u59cb\u6728\u68cd\uff0cfff\u4e3a\u8fd9\u6839\u6728\u68cd\u7684\u7f16\u53f7\n        f(u+1,l+a[fff],fff+1);//\u7ee7\u7eed\u5411\u4e0b\u641c\u7d22\n        vis[fff]=0;//\u56de\u6eaf\n        return;\n    }\n    for(int i=c;i<=n;i++)//\u4ece\u4e0a\u4e00\u4e2a\u9009\u62e9\u7684\u6728\u68cd\u4e0b\u4e00\u4e2a\u5f00\u59cb\u641c\u7d22\uff0c\u76f4\u5230\u7b2cn\u4e2a\n    {\n        if(!vis[i]&&a[i]+l<=m)//\u5982\u679c\u8fd9\u6839\u6728\u68cd\u6ca1\u6709\u7528\u8fc7\u4e14\u5728\u957f\u5ea6\u4e0a\u53ef\u884c\n        {\n            if(!vis[i-1]&&a[i]==a[i-1]) continue;//\u662f\u5426\u4e3a\u4e0d\u53ef\u80fd\u60c5\u51b5\u4e0b\u7684\u91cd\u590d\u641c\u7d22\uff0c\u5982\u679c\u662f\uff0c\u5219\u4e0d\u8003\u8651\u8fd9\u6839\u6728\u68cd\n            vis[i]=1;//\u7b26\u5408\u6761\u4ef6\uff0c\u7ee7\u7eed\u641c\u7d22\n            f(u+1,a[i]+l,i+1);\n            if(flag) return;//\u5982\u679c\u627e\u5230\u7b54\u6848\u5219\u76f4\u63a5\u8fd4\u56de\n            vis[i]=0;//\u56de\u6eaf\n            if(l+a[i]==m) break;//\u5982\u679c\u8fd9\u6839\u521d\u59cb\u6728\u68cd\u662f\u5f53\u524d\u5f62\u52bf\u4e0b\u7684\u53ef\u53d6\u7684\u6700\u957f\u503c\uff0c\u4e0d\u8003\u8651\u540e\u9762\u7684\u6728\u68cd\n        }\n    }\n}\nint main()\n{\n        scanf(\"%d\",&n);\n        for(register int i=1;i<=n;i++)\n        {\n            scanf(\"%d\",&a[j]);\n            if(a[j]<=50)\n            {\n                h+=a[j],ma=max(ma,a[j]);\n                j++;\n            }\n        }\n        n=--j;//\u8f93\u5165\u3001\u5ffd\u7565\u8d85\u8fc750\u7684\uff0c\u6c42\u548c\n        sort(a+1,a+n+1,comp);\n        for(register int i=ma;i<=h;i++)\n        {\n            if(h%i==0)//\u5982\u679c\u80fd\u591f\u6574\u9664\uff0c\u5219\u5f53\u524d\u957f\u5ea6\u53ef\u80fd\u5b58\u5728\u7b54\u6848\uff0c\u5f00\u59cb\u641c\u7d22\n            {\n                m=i;\n                f(0,0,1);\n                if(flag)\n                {\n                    printf(\"%d\\n\",i);\n                    break;\n                }\n            }\n        }\n}\n```\n",
        "postTime": 1527244300,
        "uid": 28910,
        "name": "\u89c8\u904d\u5343\u79cb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "\u603b\u5f97\u6765\u8bf4\u5c31\u662f\u526a\u679dDFS:\u679a\u4e3e\u6700\u5c0f\u957f\u5ea6,\u8fdb\u884c\u62fc\u51d1.\n\n\n\u51e0\u4e2a\u526a\u679d:\n\n1.    \u679a\u4e3e\u6700\u5c0f\u957f\u5ea6\u65f6(\u8bbe\u4e3alen),\u53ef\u5f97:min(\u5c0f\u6728\u68cd\u957f\u5ea6)<=len<=\u5c0f\u6728\u68cd\u603b\u957f,\u540c\u65f6(\u603b\u957f mod len=0).\n\n2.    \u5f53\u6bcf\u6b21\u63a5\u5165\u5c0f\u6728\u68cd\u540e,\u5927\u6728\u68cd\u672a\u8fbe\u5230\u8981\u6c42\u957f\u5ea6\u65f6,\u4e0b\u4e00\u4e2a\u63a5\u5165\u7684\u5c0f\u6728\u68cd\u53d6\u6bd4\u521a\u521a\u63a5\u5165\u7684\u5c0f\u6728\u68cd\u77ed\u7684\u5c0f\u6728\u68cd.\n\n3.    \u5f53\u4e00\u4e2a\u5c0f\u6728\u68cd\u63a5\u5165\u540e,\u5f53\u524d\u5904\u7406\u7684\u5927\u6728\u68cd\u521a\u597d\u8fbe\u5230\u8981\u6c42\u7684\u957f\u5ea6\u7684\u8bdd,\u6ca1\u5fc5\u8981\u7528\u66f4\u591a\u7684\u5c0f\u6728\u68cd\u4ee3\u66ff\u8fd9\u4e2a\u521a\u63a5\u5165\u7684\u5c0f\u6728\u68cd,\u56e0\u4e3a\u66f4\u77ed\u7684\u5c0f\u6728\u68cd\u6bd4\u5b83\u6709\u66f4\u5927\u7684\u9002\u7528\u6027(\u6240\u4ee5\u628a\u5b83\u4eec\u7559\u5728\u540e\u9762\u7528\u5fc5\u5b9a\u6bd4\u63a5\u5165\u8fd9\u91cc\u66f4\u597d).\n\n4.    \u5f53\u5904\u7406\u5b8c\u4e00\u4e2a\u5927\u6728\u68cd\u4e4b\u540e,\u63a5\u5165\u4e0b\u4e00\u4e2a\u5927\u6728\u68cd\u7684\u7b2c\u4e00\u6839\u5c0f\u6728\u68cd\u7528\u5269\u4e0b\u7684\u6700\u957f\u7684\u5c0f\u6728\u68cd.\n\n\n\u51e0\u4e2a\u5904\u7406:\n\n1.    \u679a\u4e3e\u6700\u5c0f\u957f\u5ea6\u65f6\u7531\u5c0f\u5230\u5927\u679a\u4e3e,\u627e\u5230\u7b2c\u4e00\u4e2a\u540e\u76f4\u63a5\u8f93\u51fa\u5c31\u53ef\u4ee5HALT\u4e86.\n\n2.    \u5c06\u6240\u6709\u6728\u68cd\u7531\u5927\u5230\u5c0f\u6392\u5e8f,\u4ee5\u4fbf\u526a\u679d.\n\n\n\u6ce8\u610f\u4e8b\u9879:\n\n\u9898\u76ee\u8bf4:\"\u76f4\u5230\u6bcf\u6bb5\u7684\u957f\u90fd\u4e0d\u8d85\u8fc750\",\u6240\u4ee5\u53bb\u6389\u8d85\u8fc750\u7684\u5c0f\u6728\u68cd\n",
        "postTime": 1380717007,
        "uid": 1187,
        "name": "AKB48",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "### \u5c0f\u6728\u68cd\n\n**\u6700\u4f18\u6027**\u526a\u679d\uff1a\n\n1.\u6728\u68cd\u539f\u6765\u7684\u957f\u5ea6\u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8e\u6240\u6709\u6728\u68cd\u4e2d\u6700\u957f\u7684\u90a3\u6839\uff0c\u5c0f\u4e8e\u7b49\u4e8e\u6728\u68cd\u7684\u957f\u5ea6\u548c\uff0c\u679a\u4e3e\u65f6\u53ea\u9700\u679a\u4e3e\u5230\u6728\u68cd\u957f\u5ea6\u548c\u7684\u4e00\u534a\uff0c\u56e0\u4e3a\u5982\u679c\u8d85\u8fc7\u4e00\u534a\uff0c\u90a3\u53ea\u80fd\u662f\u7531\u4e00\u6839\u539f\u6728\u68cd\u5207\u6210\u6240\u6709\u7684\u6728\u68cd\n\n\u200b                       2.\u8bbe\u6240\u6709\u6728\u68cd\u957f\u5ea6\u548c\u4e3asum\u5219\u539f\u957f\u5ea6\u4e00\u5b9a\u80fd\u88absum\u6574\u9664\n\n**\u53ef\u884c\u6027**\u526a\u679d\uff1a\n\n3.\u77ed\u7684\u6728\u68cd\u4e00\u5b9a\u6bd4\u957f\u5ea6\u66f4\u7075\u6d3b\uff0c\u6240\u4ee5\u5148\u4ece\u957f\u5230\u77ed\u6392\u5e8f\uff0c\u628a\u96be\u641e\u7684\u5148\u641e\u4e86\uff0c\u5176\u5b9e\u5f88\u591adp\u9898\u4e5f\u6709\u7740\u7c7b\u4f3c\u7684**\u8d2a\u5fc3**\u601d\u60f3\uff08\u6bd4\u5982\u6d1b\u8c37P4138\u6302\u9970\uff09\uff0c\u9700\u8981\u5148\u6392\u5e8f\u518d\u8fdb\u884c\u64cd\u4f5c\uff0c\u4e0d\u7136\u5c31\u53ef\u80fd\u4f1aWA\u3002\n\n\u200b                       4.\u4ece\u7b2c\u4e00\u6839\u957f\u5ea6\u5c0f\u4e8e\u6216\u7b49\u4e8e\u5f53\u524d\u6728\u68cd\u5269\u4f59\u957f\u5ea6\u7684\u5f00\u59cb\u641c\u7d22\uff08\u4e8c\u5206\u67e5\u627e\uff09\n\n\u200b                       5.\u9884\u5904\u7406\u51fa\u4e00\u4e2a\u6570\u7ec4\u8868\u793a\u8ddf\u5f53\u524d\u6728\u68cd\u957f\u5ea6\u76f8\u7b49\u7684\u6728\u68cd\u7684\u6700\u540e\u4e00\u6839\uff0c\u56e0\u4e3a\u5982\u679c\u5f53\u524d\u6728\u68cd\u641c\u4e0d\u51fa\u7ed3\u679c\uff0c\u7b49\u957f\u7684\u6728\u68cd\u4e5f\u540c\u6837\u641c\u4e0d\u51fa\u7ed3\u679c\uff08\u5982\u679c\u80fd\u641c\u51fa\u7ed3\u679c\uff0c\u90a3pd\u5c31\u4f1a\u4e3a1\uff0c\u4f1a\u76f4\u63a5\u8fd4\u56de\uff0c\u8fd9\u4e0e\u6df1\u641c\u7684\u6027\u8d28\u6709\u5173\uff09\n\n\u200b                      6.\u7528pd\u8bb0\u5f55\u662f\u5426\u5df2\u67e5\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u60c5\u51b5\uff0c\u82e5\u627e\u5230\uff0c\u7acb\u523b\u8fd4\u56de\n\n\u5c0f\u7ec6\u8282\uff1a\u6ce8\u610f\u641c\u7d22\u6811\u7684\u6027\u8d28\uff0c\u4e00\u5b9a\u8981**\u56de\u6eaf**\uff0c\u8bfb\u5165\u6570\u636e\u65f6\u8981\u8fc7\u6ee4\u6389\u957f\u5ea6\u5927\u4e8e50\u7684\u6728\u68cd\n\n```c++\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\nusing namespace std;\nint n,maxx,sum;\nint a[80],ans,pd=0,len;\nint pre[80],used[80];\nbool cmp(int x,int y)\n{\n    return x>y;\n}\nvoid dfs(int k,int rest,int last)\n{\n    if(pd)return ;\n    if(rest==0)\n    {\n        if(k==sum/len)\n        {\n            pd=1;return;\n        }\n        int cc=0;\n        for(int i=1;i<=n;i++)\n        {\n            if(!used[i])\n            {\n                cc=i;\n                used[i]=1;\n                break;\n            }\n        }\n        dfs(k+1,len-a[cc],cc);\n        used[cc]=0;//\u4e00\u5b9a\u8981\u8bb0\u5f97\u56de\u6eaf,\u300a\u4e00\u672c\u901a\u300b\u4e0a\u8fd9\u513f\u5fd8\u4e86\u56de\u6eaf\n        if(pd)return;\n    }\n    int l=last+1,r=n,cnt=n+1;\n    while(l<=r)//\u4f18\u53164\n    {\n        int mid=(l+r)>>1;\n        if(a[mid]<=rest)\n        {\n            cnt=mid;r=mid-1;\n        }\n        else l=mid+1;\n    }\n    for(int i=cnt;i<=n;i++)\n    {\n        if(!used[i])\n        {\n            used[i]=1;\n            dfs(k,rest-a[i],i);\n            used[i]=0;\n            if(pd)return;//\u4f18\u53166\n            if(rest==a[i])return;\n            i=pre[i];//\u4f18\u53165\n            if(i==n)return;\n        }\n    }\n}\nvoid solve()\n{\n    for(int i=maxx;i<=sum/2;i++)//\u4f18\u53161\n    {\n        len=i;\n        if(sum%i==0)//\u4f18\u53162\n        {\n            dfs(0,0,0);\n            if(pd==1)\n            {\n                ans=i;\n                return ;\n            }\n        }\n    }\n    return ;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    int tot=0;\n    for(int i=1;i<=n;i++)\n    {\n        int x;\n        scanf(\"%d\",&x);\n        if(x>50)continue;\n        a[++tot]=x;\n        maxx=max(maxx,x);\n        sum+=x;\n    }\n    n=tot;\n    sort(a+1,a+n+1,cmp);//\u4f18\u53163\n    ans=sum;\n    for(int i=1;i<=n;i++)\n    {\n        int j=i;\n        while(a[i]==a[j])j++;\n        pre[i]=j-1;\n    }\n    solve();\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1565512027,
        "uid": 101477,
        "name": "Akaina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "\u8c8c\u4f3c\u6211\u4eec\u5b66\u6821\u7684\u4eba\u88ab\u6211\u6380\u8d77\u4e86\u5c0f\u6728\u68cd\u7684\u6f6e\u6d41QAQ\n\n\u6211\u5c31\u5199\u4e00\u4e0b\u526a\u679d\u7684\u601d\u8def\u5427\u3002\n\n------------\n\u9898\u76ee\uff1a[ P1120 \u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d](https://www.luogu.org/problemnew/show/P1120)\n\n\u6211\u8fd9\u9898\u6211\u6de6\u4e86\u4e24\u5929\uff08\u591c\u534a\u679c\u7136\u5934\u8111\u4e0d\u6e05\u9192\uff09\n\n\u601d\u8def\u5982\u4e0b\uff1a\n\n       1. dfs\uff08\u8fed\u4ee3\u52a0\u6df1\uff09\u53c2\u6570\u610f\u4e49\uff1arest-\u5269\u4e0b\u7684\u7ec4\u6570\n                                now-\u5f53\u524d\u7ec4\u5269\u4f59\u957f\u5ea6\n                                 la-\u4ee5\u4e3alast\uff0c\u4e0a\u4e00\u6839\u641c\u5230\u7684\u5e8f\u53f7\n       2. \u5c06\u6728\u68cd\u957f\u5ea6\u6392\u4e2a\u5e8f\uff08\u968f\u4f60\u6b63\u5e8f\u9006\u5e8f\uff09\uff0c\u4ece\u5927\u5230\u5c0f\u653e\uff0c\u653e\u5230\u4e00\u7ec4\u7ed3\u675f\uff0c\u5c31\u5f00\u59cb\u4e0b\u4e00\u7ec4\u3002\n       3. \u5982\u679c\u5728dfs\u4e2d\uff0c\u5982\u679c\u653e\u5165\u8fd9\u4e00\u6839\u5c31\u5b8c\u6210\u4e86\u62fc\u63a5\uff0c\u4f46\u6700\u540e\u7684\u7ed3\u679c\u662f\u5931\u8d25\u7684\uff0c\u90a3\u4e48\u524d\u9762\u7684\u6289\u62e9\u6709\u95ee\u9898\uff0c\u56de\u7089\u91cd\u9020\u3002\n       4. \u6ee4\u9664\u591a\u6839\u6728\u68d2\u957f\u5ea6\u76f8\u540c\u7684\u60c5\u51b5\u3002\n       5. \u679a\u4e3e\u957f\u5ea6\u65f6\uff0c\u4ece\u6700\u5927\u7684\u5c0f\u6728\u68cd\u957f\u5ea6\u5f00\u59cb\uff0c\u5230\u603b\u957f\u5ea6\u7684\u4e00\u534a\u5373\u53ef\uff08\u5269\u4e0b\u4e00\u534a\u6ca1\u6709\u610f\u4e49\uff0c\u5176\u5b9e\u4f18\u5316\u610f\u4e49\u4e0d\u5927\uff09\u3002\n       6. \u6700\u540e\uff0c\u5438\u4e2a\u6c27\uff08O2\uff09\u3002\n       \n\n------------\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nint have[100];\nint num[100];\nint nlim;\nint n;\nint nans=0;\nint vis[100]; \nint Min=100;\nint Max=-1;\n\nvoid dfs(int rest,int now,int la){\n\t//cout<<rest<<endl;\n\tif(now==0)\n\t\tdfs(rest-1,nlim,n);\n\t\t\n\tif(rest==0){\n\t\tcout<<nans;\n\t\texit(0);\n\t}\n\t\n\tif(now<Min)\n\t\treturn;\n\t\n\tfor(register int i=la;i>=1;i--){\n\t\tif(vis[i]==0&&now-num[i]>=0){\n\t\t\t//have[i]--;\n\t\t\tvis[i]=1;\n\t\t\tdfs(rest,now-num[i],i-1);\n\t\t\tvis[i]=0;\n\t\t\tif(now-num[i]==0 || now==nlim)\n\t\t\t\tbreak;\n\t\t\twhile(num[i]==num[i-1])\n\t\t\t\ti--;\n\t\t\t//have[i]++;\n\t\t}\n\t} \n\t\n}\n\nint main(){\n\t\n\t\n\tcin>>n;\n\tint Tn=0;\n\tint sum=0;\n\t\n\tfor(int i=1;i<=n;i++){\n\t\tint a;\n\t\tcin>>a;\n\t\tif(a<=50){\n\t\t\tTn++;\n\t\t\tnum[Tn]=a;\n\t\t\thave[a]++;\n\t\t\tsum+=a;\n\t\t\tMin=min(Min,a);\n\t\t\tMax=max(Max,a);\n\t\t}\n\t}\n\tn=Tn;\n\tsort(num+1,num+1+n);\n\t//cout<<sum<<endl;\n\tfor(register int i=Max;i<=sum/2;i++){//i\u6bcf\u4e00\u6bb5\u957f\u5ea6 \n\t\tif(sum%i==0&&sum/i<=50){\n\t\t\tnans=i;\n\t\t\tnlim=i;\n\t\t\tdfs(sum/i,nlim,n);\n\t\t}\n\t}\n\tcout<<sum<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1539915816,
        "uid": 29304,
        "name": "DYI_ZJZGC",
        "ccfLevel": 0,
        "title": "\u5173\u4e8e\u5c0f\u6728\u68cd"
    },
    {
        "content": "\u524d\u8a00\uff1a\u8fd9\u9053\u9898\u5462\u7528\u5230\u4e86\u4e00\u5806\u4f18\u5316\uff0c\u6709\u4e00\u4e2a\u70b9\u5927\u4f6c\u4eec\u90fd\u8bb2\u5f97\u5f88\u542b\u84c4\uff0c\u8868\u793a\u5c0f\u7f16\u4e00\u770b\u5230\u65f6\u4e5f\u6ca1\u5f04\u61c2\uff0c\u8fd8\u597d\u8fd9\u6761\u662f\u5c0f\u7f16\u81ea\u5df1\u60f3\u51fa\u6765\u7684\uff0c\u53c8\u5bf9\u7167\u4e86\u4e00\u4e0b\uff0c\u662f\u4e00\u6837\u7684\u3002\u4e0d\u7136\u6050\u6015\u53c8\u8981\u61f5\u903c\u4e86\u3002\n\n\u6b65\u9aa4\uff1a\u679a\u4e3e\u62fc\u63a5\u6728\u68cd\u957f\u5ea6\uff0c\u5fc5\u987b\u628a\u6728\u68cd\u957f\u5ea6\u603b\u548c\u6574\u9664\uff08\u76f8\u4fe1\u5e94\u8be5\u5f88\u597d\u7406\u89e3\uff09\uff0c\u7136\u540e\uff0c\u5c31\u4e00\u4e2a\u4e00\u4e2a\u53bb\u8bd5\u5457\u3002\u3002\u3002\n\n\u597d\u4e86\uff0c\u5c0f\u7f16\u7ed9\u5927\u5bb6\u5e26\u6765\u7684\u51e0\u4e2a\u4f18\u5316\u89c1\u4e0b\uff1a\n\n1.\u6728\u68cd\u957f\u5ea6\u603b\u548c\u5fc5\u987b\u80fd\u88ab\u62fc\u63a5\u8d77\u6765\u7684\u6728\u68cd\u957f\u5ea6\u6574\u9664\n\n\uff08\u8981\u6392\u4e00\u4e0b\u5e8f\u3002\u4ece\u5927\u7684\u6765\u641c\uff0c\u641c\u8d77\u6765\u4e5f\u65b9\u4fbf\u3002\u8981\u662f\u6709\u849f\u84bb\u73b0\u5728\u4e0d\u61c2\u4e5f\u6ca1\u5173\u7cfb\uff0c\u4e0b\u9762\u4f1a\u61c2\u7684\u3002\uff09\n\n2.\u6392\u5e8f\uff08\u636e\u6709\u4f4d\u5927\u4f6c\u8bf4\uff0c\u662f\u4e3a\u4e86\u201c\u7075\u6d3b\u201d\uff0c\u6211\u89c9\u5f97\u4e5f\u5dee\u4e0d\u591a\uff0c\u5c31\u662f\u65b9\u4fbf\u641c\u7d22\uff0c\u65b9\u4fbf\u6392\u9664\uff09\n\n3.\u8bb0\u5f55\u603b\u548csum[]\uff08\u76ee\u7684\u8be6\u89c1\u7b2c6\u6761\uff09\n\n4.\u5c0f\u6728\u68cd\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\uff0c\n\n5.\u5fc5\u987b\u4ece\u4e0a\u4e00\u6b21\u9009\u7684\u6728\u68cd\u4e4b\u540e\u5f00\u59cb\u679a\u4e3e\n\n\uff08\u4e0a\u9762\u8fd9\u51e0\u6761\u662f\u7ed9\u849f\u84bb\u7684\uff0c\u5927\u4f6c\u5e94\u8be5\u77e5\u9053\uff09\n\n6.\u5982\u679c\u5269\u4e0b\u8981\u62fc\u7684\u957f\u5ea6\u5c0f\u4e8e\u5269\u4e0b\u6728\u68cd\u7684\u603b\u957f\u5ea6\uff0c\u90a3\u4e48\u5373\u4f7f\u5168\u90e8\u62fc\u8d77\u6765\u4e5f\u4e0d\u884c\uff0cpass\uff0c\u6240\u4ee5\u8fd9\u5c31\u662f\u8bb0\u5f55sum\u7684\u539f\u56e0\u3002\n\n7.\uff08\u8fd8\u4e0d\u53eb\u771f\u6b63\u6bd2\uff0c\u5c0f\u7f16\u770b\u4e86\u4e0b\u6570\u636e\u4e5f\u60f3\u5230\u4e86\uff09\u5982\u679c\u5269\u4f59\u7684\u7b2c\u4e00\u4e2a\u4e0d\u80fd\u62fc\u63a5\uff0c\u90a3\u4e48\u8fd9\u6839\u6728\u68cd\u80af\u5b9a\u4f1a\u5269\u4e0b\u6765\uff0c\u6240\u4ee5pass\uff08\u4e5f\u5c31\u662f\u697c\u4e0b\u5927\u4f6c\u8bf4\u7684\u5df2\u62fc\u63a5\u957f\u5ea6\u4e3a0\uff09\n\n8.\uff08\u5c0f\u7f16\u4e5f\u60f3\u4e86\u4e00\u4e0b\uff0c\u987a\u4fbf\u770b\u4e86\u4e00\u4e0b\u53d8\u91cf\u8f93\u51fa\u3002\u624d\u60f3\u5230\uff09\u5982\u679c\u67d0\u4eba\u73b0\u5728\u5df2\u7ecf\u62fc\u6210\u4e865\u7684\u957f\u5ea6\uff0c\u8981\u6c42\u957f\u5ea6\u662f8\uff0c\u800c\u624b\u5934\u4e0a\u6070\u597d\u67093\u6839\u6728\u68cd\uff0c1,2,3\uff0c\u90a3\u4e48\u90a3\u4eba\u4f18\u5148\u641c\u5230\u4e863\uff0c\u9ad8\u5174\u5730\u62fc\u4e86\u4e0a\u53bb\uff0c\u7136\u540e\u53d1\u73b0\u884c\u4e0d\u901a\uff0c\u90a3\u4e48\u6ca1\u6709\u5fc5\u8981\u518d\u63625+2+1\u4e86\uff0c\u56e0\u4e3a1+2\u6bd43\u66f4\u7075\u6d3b\u3002  \u4e5f\u5c31\u662f\u697c\u4e0b\u5927\u4f6c\u8bf4\u7684\u201c\u5f53\u524d\u5df2\u62fc\u63a5\u7684\u957f\u5ea6\u4e0e\u521a\u624d\u679a\u4e3e\u7684\u957f\u5ea6\u4e4b\u548c\u4e3a\u6700\u7ec8\u679a\u4e3e\u7684\u7b54\u6848\u201d\u3002\uff08\u5f53\u7136\uff0c\u6211\u76845,3,2,1\u53ea\u662f\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6307\u7684\u662f\u6570\u636e\u4e2d\u542b\u6709\u8fd9\u51e0\u4e2a\u6570\uff0c\u4e14\u6682\u65f6\u4ec5\u8003\u8651\u8fd9\u51e0\u4e2a\u6570\uff0c\u610f\u4f1a\u4e00\u4e0b\uff0c\u4f8b\u5982\u8bf48 6 5 5 5 5 3 3 2 \uff0c\u4e2d\u641c\u52308+6\u53d1\u73b0\u4e0d\u884c\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc78+3+3 @\u8bc4\u8bba\uff09\n\n\u597d\u4e86\uff0c\u4f18\u5316\u90fd\u8bb2\u5b8c\u4e86\uff0c\u5c0f\u7f16\u7684\u4ee3\u7801\uff08\u770b\u8d77\u6765\uff09\u6709\u70b9\u4e71\uff0c\u6240\u4ee5\u8fd8\u662f\u501f\u9274\u697c\u4e0b\u5927\u4f6c\u7684\u5427\u3002\u3002\u3002",
        "postTime": 1535691535,
        "uid": 16588,
        "name": "panhuachao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "# DFS\n\n\u975e\u5e38\u7ecf\u5178\u7684\u641c\u7d22\u9898\n--------\n\u4e5f\u6ca1\u6709\u4ec0\u4e48\u96be\u5ea6\uff0c\u53ea\u8981\u52a0\u526a\u679d\u57fa\u672c\u4e0a\u4ee3\u7801\u5c31\u53ef\u4ee5\u4e86\u3002\n```\n#pragma GCC optimize(2)//o2\u4f18\u5316 \n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6 \nusing namespace std;\nint n;\nint l;\nint a[100];\nint lmark;\nint vis[100];\nbool cmp(int x,int y){//\u4ee4\u6392\u5e8f\u4ece\u5927\u5230\u5c0f\u6392 \n\treturn x>y; \n}\nint dfs(int num,int len){\n\tif(num==0&&len==0)//\u5982\u679c\u65e0\u68cd\u53ef\u653e\u800c\u4e14\u5df2\u7ecf\u62fc\u5b8c\u4e00\u6574\u6839\uff0c\u5219\u8fd4\u56de1 \n\t\treturn 1;\n\tif(len==0)//\u5982\u679c\u62fc\u5b8c\u4e00\u6839\uff0c\u5219\u5f00\u59cb\u4e0b\u4e00\u6839\u3002 \n\t\tlen=l;\n \tint mark=1;\n \tif(len!=l)\n \t\tmark=lmark+1;//\u5982\u679c\u62fc\u5b8c\u5f53\u524d\u8fd9\u4e00\u6839\u8fd8\u8981>1\u4e2a\u5355\u4f4d\uff0c\u5219\u4ece\u4e0a\u4e00\u4e2a\u6728\u68cd\u7684\u4f4d\u7f6e\u52a01\u5f00\u59cb\u679a\u4e3e \n\tfor(int i=mark;i<=n;i++){//\u5faa\u73af\u679a\u4e3e\u6bcf\u4e00\u4e2a\u6728\u68d2 \n\t\tif(vis[i]==0&&a[i]<=len){//\u5982\u679c\u5f53\u524d\u7684\u6728\u68d2\u53ef\u4ee5\u4f7f\u7528\uff0c\u800c\u4e14\u4f7f\u7528\u540e\u4e0d\u4f1a\u8d85\u51fa\u679a\u4e3e\u7684\u957f\u5ea6\uff0c\u5c31\u4f7f\u7528\u3002 \n\t\t\tif(i>1)\n\t\t\t\tif(vis[i-1]==0&&a[i]==a[i-1])//\u526a\u679d \n\t\t\t\t\tcontinue;\n\t\t\tvis[i]=1;\n\t\t\tlmark=i;//\u66f4\u6539\u8d77\u59cb\u4f4d\u7f6e \n\t\t\tif(dfs(num-1,len-a[i]))//\u679a\u4e3e\u4e0b\u4e00\u6839\u6728\u68d2\uff0c\u5982\u679c\u8fd4\u56de\u503c=1\uff0c\u5219\u8fd4\u56de1\u3002 \n\t\t\t\treturn 1;\n\t\t\telse{//\u5426\u5219 \n\t\t\t\tvis[i]=0;\n\t\t\t\tif(len==a[i]||len==l)//\u5982\u679c\u5269\u4e0b\u7684\u957f\u5ea6=\u5f53\u524d\u679a\u4e3e\u7684\u957f\u5ea6\u6216\u8005=\u679a\u4e3e\u7684\u603b\u957f\u5ea6\uff0c\u8fd4\u56de0\uff1b \n\t\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint main(){\n\tint cnt;\n\tscanf(\"%d\",&cnt);//\u8f93\u5165 \n\t\tint sum=0;\n\t\tfor(int i=1;i<=cnt;i++){\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(x>50)//\u5982\u679c\u957f\u5ea6\u5927\u4e8e50\uff0c\u5219\u8fc7\u6ee4\u4e86 \n\t\t\t\tcontinue;\n\t\t\ta[++n]=x;\n\t\t\tsum+=a[n];//\u6c42\u603b\u548c \n\t\t}\n\t\tint ans=0;\n\t\tsort(a+1,a+1+n,cmp);//\u6392\u5e8f\u51fd\u6570 \n\t\tfor(l=a[1];l<=sum/2;l++){//\u679a\u4e3e\u957f\u5ea6\uff0c\u62fc\u8d77\u6765\u7684\u957f\u5ea6\u6700\u77ed\u662f\u6700\u957f\u7684\u4e00\u6839\u6728\u68cd\uff0c\u6700\u957f\u662f\u79bb\u603b\u957f\u6700\u8fd1\u7684\u56e0\u6570 \n \t\t\tif(sum%l)//\u5982\u679cl\u4e0d\u662f\u603b\u548c\u7684\u56e0\u6570\uff0c\u5219\u4e0d\u6267\u884c\u3002 \n\t\t \t\tcontinue;\n\t\t\tmemset(vis,0,sizeof(vis));//\u628avis\u6570\u7ec4\u6e05\u7a7a \n\t\t\tlmark=1;//\u4ece1\u5f00\u59cb\u679a\u4e3e \n\t\t\tif(dfs(n,l)){\n\t\t\t\tans=l;\n\t\t\t\tbreak;//\u5982\u679c\u8fd4\u56de\u503c\u4e3a1\uff0c\u5219\u9000\u51fa \n\t\t\t}\n\t\t}\n\t\tif(ans)//\u5982\u679cans!=0,\u90a3\u4e48\u5c31\u8f93\u51faans \n\t\t\tprintf(\"%d\\n\",ans);\n    return 0;\n}\n\t\t\n```",
        "postTime": 1531220806,
        "uid": 95440,
        "name": "\u7afa\u5b50\u8c6a",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "\u66b4\u529b\u641c\u7d22+\u526a\u679d\n\n\uff08\u8fd9\u9898\u7b80\u76f4\u795e\u7ea7\u526a\u679d\uff09\n\n\u7531\u4e8e200~1000ms\u5b9e\u5728\u5751\u4eba\uff08\u5b9e\u9645\u4e0a\u6700\u540eT\u7684\u51e0\u4e4e\u90fd\u662f500\u548c1000\u7684\u6570\u636e\uff09\n\n\u6240\u4ee5\u5361\u4e86\u6211\u5f88\u4e45\u2026\u2026\n\n```cpp\n#include <bits/stdc++.h>\n#pragma GCC optimize(3)//O3\u4e0e\u6211\u6c38\u4e0d\u79bb\n#define N 10010\nusing namespace std;\nint n,len[N],l,cnt,sum;\nbool used[N];\nbool mmp(int x,int y)\n{\n    return x>y;\n}\nvoid dfs(int x,int y,int lent,int goal,int now)//\u8bb0\u5f55\u5f53\u524d\u7684\u8fd9\u6839\u5c0f\u6728\u68cd\n{\n    if(x>sum/goal)\n    {\n        printf(\"%d\",goal);\n        exit(0);\n    }\n    if(goal-lent<len[cnt])\n        return;//\u5982\u679c\u8fde\u6700\u5c0f\u7684\u586b\u8fdb\u53bb\u90fd\u4f1a\u5927\u4e8e\u5f53\u524d\u7b54\u6848\u7684\u8bdd\u5c31\u56de\u6eaf\n    for(int i=now;i<=cnt;i++)//\u4ece\u5f53\u524d\u5f00\u59cb\u679a\u4e3e\uff0c\u56e0\u4e3a\u524d\u9762\u7684\u4e00\u5b9a\u88ab\u679a\u4e3e\u8fc7\u4e86\uff0c\u518d\u505a\u5c31\u662f\u6d6a\u8d39\u65f6\u95f4\n    {\n        if(!used[i]&&lent+len[i]<=goal)\n        {\n            used[i]=true;\n            lent+=len[i];\n            if(lent==goal)\n                dfs(x+1,1,0,goal,1);\n            else\n                dfs(x,y+1,lent,goal,i+1);\n            used[i]=false;\n            lent-=len[i];\n            if(lent+len[i]==goal||lent==0)\n                break;//\u5982\u679c\u8fd9\u4e00\u7ec4\u53ef\u4ee5\u51d1\u51fa\u5374\u4e0d\u662f\u6b63\u786e\u7b54\u6848\u6216\u8005\u7b2c\u4e00\u6839\u90fd\u65e0\u6cd5\u6ee1\u8db3\u5c31\u76f4\u63a5\u9000\u51fa\uff0c\u6ca1\u5fc5\u8981\u518d\u53bb\u679a\u4e3e\u66f4\u5c0f\u7684\u6765\u4ee3\u66ff\u5b83\uff0c\u56e0\u4e3a\u8fd9\u4e00\u6839\u603b\u662f\u8981\u88ab\u7528\u7684\u3002\n            while(len[i]==len[i+1])\n                i++;//\u8be5\u957f\u5ea6\u82e5\u4e0d\u53ef\u884c\uff0c\u5219\u540c\u6837\u957f\u5ea6\u7684\u4e5f\u4e0d\u53ef\u884c\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&l);\n        if(l>50)\n            continue;//\u4e00\u5b9a\u8981\u4f18\u5148\u8fc7\u6ee450+\u7684\u6570\u636e\n        len[++cnt]=l;\n        sum+=len[cnt];\n    }\n    sort(len+1,len+1+cnt,mmp);//\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u65b9\u4fbf\u641c\u7d22\u4e0e\u526a\u679d\n    for(int i=len[1];i<=sum/2;i++)\n        if(sum%i==0)\n            dfs(1,1,0,i,1);//\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u7b54\u6848\uff0c\u9047\u5230\u4e00\u4e2a\u53ef\u76f4\u63a5\u8df3\u51fa\n    printf(\"%d\",sum);\n    return 0;\n}\n```\n\u53c2\u8003\u4e86\u8bb8\u591a\u9898\u89e3\u5927\u4f6c\uff0c\u4ece9\u5206\u523021\u5206\u523033\u5206\u523036\u5206\u523063\u5206\u523066\u5206\u5230AC\u2026\u2026\n\n\u800c\u4e14\u8dd1\u7684\u5f88\u6162\n\n[1100ms](https://www.luogu.org/record/show?rid=5402366)\n\n\u9898\u89e3\u5f88\u5f31\u2026\u2026\u4e3b\u8981\u662f\u628a\u4e4b\u524d\u7684\u9898\u89e3\u7528\u6211\u80fd\u61c2\u7684\u8bed\u8a00\u518d\u7801\u4e86\u4e00\u904d\u2026\u2026\n",
        "postTime": 1516438502,
        "uid": 55454,
        "name": "DimensionTripper",
        "ccfLevel": 0,
        "title": "P1120 \u5c0f\u6728\u68cd\u3010\u6570\u636e\u52a0\u5f3a\u7248\u3011"
    },
    {
        "content": "//\u6211\u53d1\u8fd9\u7bc7\u9898\u89e3\u4e3b\u8981\u662f\u56e0\u4e3a\u6709\u5f88\u597d\u5f88\u5bb9\u6613\u7406\u89e3\u7684\u9898\u89e3\u88ab\u538b\u5728\u4e0b\u9762\u4e86\uff0c\u6211\u6765\u518d\u6b21\u7801\u4e00\u904d\u3002\n\n```cpp\n//\n//\u663e\u7136,dfs\u641c\u7d22\u7684\u662f\u6728\u68cd\u603b\u957f\u7684\u56e0\u6570\u3002 \n//\n//\u4e00\u5171\u67094\u4e2a\u4f18\u5316(\u4e0d\u7b97\u4e0a\u901f\u8bfb)\u3002\n//\n//   1. \u6211\u4eec\u641c\u7d22\u7684\u6728\u68cd\u957f\u5ea6\u5047\u8bbe\u662f\u5408\u6cd5\u7684,\u90a3\u4e48\u6bcf\u4e00\u7ec4\u8fbe\u5230\u4e86\u5f53\u524d\u957f\u5ea6\u7684\u6728\u68cd\u7ec4\u5408\uff0c\u4e00\u5b9a\u662f\u5b58\u5728\u7684\u3002\n//\u4f8b\u5982\u6837\u4f8b\uff1a5 2 1 5 2 1 5 2 1 \u6bd4\u5982\u8bf4\u6211\u641c\u7d22\u6728\u68cd\u603b\u957f\u7684\u56e0\u65706,\u6211\u4eec\u76ee\u524d\u641c\u7684\u6728\u68cd\u7ec4\u662f(5,1),\u5982\u679c\u8fd9\u4e2a6\u7684\u6728\u68cd\u957f\u5ea6\u662f\u5408\u6cd5\u7684\u8bdd,\u90a3\u4e48\u5fc5\u6709\u4e00\u7ec4\u6728\u68cd\u7ec4\u5408\u662f(5,1).\n//\u6240\u4ee5\u5f53\u6211\u4eec\u641c\u7d22\u7684\u6728\u68cd\u7ec4\u662f(5,1)\u4f46\u5728\u4e4b\u540e\u7684\u641c\u7d22\u4e2d\u641c\u4e0d\u51fa\u957f\u5ea6\u4e3a6\u7684\u6728\u68cd\u7ec4,\u90a3\u4e48\u8fd9\u4e2a\u6728\u68cd\u957f\u5ea6\u5c31\u662f\u975e\u6cd5\u7684\u3002\n//\u63a8\u5e7f\u5230\u6240\u6709\u957f\u5ea6,\u5373\u53ea\u8981\u5982\u679c\u5f53\u524d\u6728\u68cd\u7ec4\u8fbe\u5230\u4e86\u6728\u68cd\u957f\u5ea6,\u5374\u5728\u4e4b\u540e\u7684\u641c\u7d22\u4e2d\u7684\u6728\u68cd\u7ec4\u5e76\u4e0d\u80fd\u8fbe\u5230\u8fd9\u4e2a\u6728\u68cd\u957f\u5ea6,\u90a3\u4e48\u8fd9\u4e2a\u6728\u68cd\u957f\u5ea6\u5c31\u662f\u4e0d\u5408\u6cd5\u7684\u3002 \n//   \n//   2. sort\u6392\u5e8f\u4ece\u5927\u5230\u5c0f\u6539\u53d8\u641c\u7d22\u987a\u5e8f,\u53ef\u4ee5\u66f4\u5feb(\u56e0\u4e3a\u6211\u4eec\u4e00\u65e6\u627e\u5230\u5408\u6cd5\u6570\u636e\u5c31\u53ef\u4ee5\u9000\u51fa)\u3002 \n//\n//   3. \u6211\u4eec\u8981\u4ece\u4e0a\u6b21\u641c\u7d22\u7684\u7ec8\u70b9\u5f80\u540e\u641c\u7d22,\u6240\u6709\u7684\u539f\u7406\u90fd\u79bb\u4e0d\u5f00\u7b2c\u4e00\u70b9\u3002\n//   \n//   4.\u5982\u679c\u5f53\u524d\u8fd9\u4e2a\u6728\u68cd\u7ec4\u7684\u957f\u5ea6+\u5f53\u524d\u7684a[i] (a[i]\u4e3a\u6211\u4eec\u4e00\u5f00\u59cb\u8f93\u5165\u7684\u6bcf\u6839\u88ab\u780d\u788e\u7684\u6728\u68cd\u7684\u957f\u5ea6),\u8fd8\u4e0d\u80fd\u8fbe\u5230\u5f53\u524d\u6211\u4eec\u641c\u7d22\u7684\u6728\u68cd\u957f\u5ea6\n//      \u90a3\u4e48\u503c\u76f8\u540c\u7684a[i]\u90fd\u4e0d\u80fd\u4f7f\u8fd9\u4e2a\u6728\u68cd\u7ec4\u7684\u957f\u8fbe\u5230\u6728\u68cd\u7ec4\u957f\u5ea6,\u6211\u4eec\u7684sort\u6392\u5e8f\u4e5f\u4e3a\u8fd9\u70b9\u63d0\u4f9b\u4e86\u57fa\u7840\u3002\n//\n//  \u7531\u4e8e\u672c\u4eba\u672c\u8eab\u4ee3\u7801\u80fd\u529b\u548c\u50a8\u5b58\u7684\u77e5\u8bc6\u5c3a\u5ea6\u548c\u667a\u529b\u8303\u56f4\uff1a\n//  \u9898\u89e3\u6700\u6b63\u5e38\uff0c\u4ee3\u7801\u8fd9\u6b21\u4e0d\u662f\u5f88\u7b80\u6d01(\u672c\u4eba\u53d1\u9898\u89e3\u7684\u4e60\u60ef) \n#include<bits/stdc++.h>\n#define maxn 100+10+9+1\nusing namespace std;\nint m,n,ans,flag,maxnn,a[maxn],b[maxn],vis[maxn];\nbool q,pd[maxn];\nint cmp(int x,int y){\n    return x>y;\n}\ninline void ccin(int &x){\n    int k=1,kk=0;\n    char c;\n    c=getchar();\n    while(c<'0' || c>'9'){\n        if(c=='-') k=-1;\n        c=getchar();\n    }while(c>='0' && c<='9'){\n        kk=kk*10+c-'0';\n        c=getchar();\n    }x=kk*k;\n}                                                       //\u901f\u8bfb\u3002 \nvoid p(int x){\n    if(x==1){\n        b[n++]=1;\n        return ;\n    }\n      for(register int i=2;i<=x/2;i++)\n        if(x%i==0 && i>=maxnn) b[n+=1]=i;                //\u627e\u56e0\u6570\u3002\n}                                                        \nvoid dfs(int record,int sum,int step,int begin){        //record\u6211\u4eec\u641c\u7d22\u7684\u6728\u68cd\u957f\u5ea6,sum\u5f53\u524d\u7684\u6728\u68cd\u7ec4\u7684\u957f\u5ea6,step\u6211\u4eec\u6709\u51e0\u7ec4\u6728\u68cd\u7ec4\u7684\u957f\u5ea6\u8fbe\u5230\u4e86\u6211\u4eec\u641c\u7d22\u7684\u6728\u68cd\u957f\u5ea6,begin\u4e0a\u6b21\u641c\u7d22\u7684\u7ec8\u70b9\u3002 \n    if(q) return ;                                      //\u6211\u4eec\u627e\u5230\u7684\u8bdd\u5c31\u8df3\u6389\u3002 \n    if(step*record==flag){                              //\u5982\u679c\u6211\u4eec\u7684\u5408\u6cd5\u7684\u6728\u68cd\u7ec4\u6570\u7684\u6570\u91cf\u4e58\u4e0a\u6211\u4eec\u641c\u7d22\u7684\u6728\u68cd\u957f\u5ea6\u8fbe\u5230\u6728\u68cd\u603b\u957f\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u6839\u6728\u68cd\u957f\u5ea6\u5c31\u662f\u5408\u6cd5\u7684\u3002 \n        ans=record;                                     //\u7531\u4e8e\u6211\u4eec\u662f\u4ece\u5c0f\u7684\u6728\u68cd\u603b\u957f\u7684\u56e0\u6570\u5f00\u59cb\u641c\u7d22\u7684\uff0c\u90a3\u4e48ans\u53ea\u8981\u66f4\u65b0\u4e3a\u5f53\u524d\u7684\u6728\u68cd\u603b\u957f\u7684\u56e0\u6570\u5373\u53ef\uff0c\u5373record\u3002 \n        q=1;\n        return ;\n    }\n    if(sum==record) dfs(record,0,step+1,1);\n    for(register int i=begin;i<=m;i++){\n        if(!pd[i] && a[i] && a[i]+sum<=record){         //\u7531\u4e8e\u6211\u628a\u6bcf\u6b21\u6728\u68cd\u957f\u5ea6>50\u7684\u788e\u6728\u68cd\u957f\u8bbe\u4e3a 0\u6240\u4ee5\u591a\u52a0\u4e86\u5224\u65ad\u6761\u4ef6\u3002 \n                pd[i]=1;\n                dfs(record,sum+a[i],step,i+1);\n                pd[i]=0;\n                if(sum+a[i]==record || sum==0) break;    //\u4f18\u53161. \n                while(a[i]==a[i+1]){                    //\u4f18\u53164. \n                    i++;\n                }    \n            }\n        }\n    }                                                  \nint main(){\n    ccin(m);\n    for(register int i=1;i<=m;i++){\n    ccin(a[i]);\n    if(a[i]>50) a[i]=0;                                 //\u8fc7\u6ee4\u975e\u6cd5\u6570\u636e,\u8bbe\u4e3a0. \n    ans+=a[i];\n    maxnn=max(maxnn,a[i]);\n}\n  flag=ans;\n  p(ans);\n  sort(a+1,a+m+1,cmp);                                  //\u4f18\u53162. \n  for(register int i=1;i<=n;i++){\n    dfs(b[i],0,0,1);\n    if(q) break;                                        //\u7531\u4e8e\u6211\u4eec\u662f\u4ece\u5c0f\u7684\u56e0\u6570\u5f00\u59cb\u627e\u7684\u6240\u4ee5\u4e00\u627e\u5230\u5c31\u9000\u51fa\u3002 \n}\n      printf(\"%d\",ans);                                 //\u8f93\u51faans\u3002 \n    return 0;                                          //\u7ed9\u4e2a\u96f6\u81ea\u5df1\u4f53\u4f1a\u4ec0\u4e48\u610f\u601d\u3002 \n}\n```",
        "postTime": 1506138185,
        "uid": 55334,
        "name": "\u65f6\u5d0e\u72c2\u4e09\u8001\u516c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "\u672c\u9898 \u2248 poj1011\n\n\u9898\u89e3\uff1a\n\n\u9700\u8981\u6709\u6280\u5de7\u7684dfs\uff0c\u6ce8\u610f\u4e00\u4e9b\u5c0f\u7ec6\u8282\uff0c\u6211\u662f\u4e00\u904d\u8fc7\u7684\uff0c\u56e0\u4e3a\u6211\u60f3\u7684**\u6bd4\u8f83**\u5168\u9762\u3002\n\n\u672c\u7bc7\u9898\u89e3\u8d60\u9001\u6ce8\u91ca\uff0c\u4e3b\u8981\u601d\u8def\u90fd\u5728\u91cc\u9762\u4e86\uff0c\u4e0d\u61c2\u5f97\u770b\u6ce8\u91ca\u3002\n\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int size = 105;\nint sum,a[size],n,k;\nbool visited[size];\nint cmp(int a,int b){ return a > b; }\nint dfs(int len, int n, int stave, int now){            //len\u8868\u793a\u5f53\u524d\u6700\u5c0f\u53ef\u80fd\u957f\u5ea6\uff0cn\u5c31\u662f\u6728\u68d2\u4e2a\u6570\n                //stave\u8868\u793a\u5f53\u524d\u6728\u68d2\u4e2a\u6570\uff0cnow\u8868\u793a\u53ef\u4ee5\u518d\u62fc\u7684\u957f\u5ea6\n    if(stave == n&&now == 0) return len;            //\u6240\u6709\u6728\u68d2\u5df2\u5168\u90e8\u7528\u5b8c\uff0c\u5e76\u4e14\u5168\u62fc\u5b8c\u4e86\uff0c\u5373\u6210\u529f\n    if(!now) now = len;                    //\u62fc\u5b8c\u4e00\u4e2a\n    for(int i = 0; i < n; i++){\n        if(visited[i] == true) continue;        //\u5df2\u7ecf\u62fc\u8fc7\u4e86\n        if(a[i] > now) continue;                //\u56e0\u4e3aa[i]\u662f\u8981\u5339\u914d\u7684\u5bf9\u8c61\uff0c\u5b83\u6bd4\u5269\u4f59\u957f\u5ea6\u8fd8\u5927\uff0c\u80af\u5b9a\u4e0d\u53ef\u80fd\u5339\u914d\n                    //\u4e0d\u6ee1\u8db3\u9898\u610f\uff0ccontinue\n        visited[i] = true;\n        if(dfs(len,n,stave+1,now-a[i])) return len;\n```\n/\\*  \u4ee5\u4e0b\u4e3adfs\u4e0d\u6210\u529f\u5904\u7406\u7684\u4e8b\u60c5   \\*/\n\n\n\n\n```cpp\n        visited[i] = false;                        //\u56de\u6eaf\n        if(now == a[i]||now == len) break;\n            //\u526a\u679d2\uff1a\n            //\u7b2c\u4e00\u4e2a\u6761\u4ef6 now == a[i]\u610f\u601d\u4e3adfs\u4e86\u4e00\u5708\u53d1\u73b0\u6ca1\u6709\u4efb\u4f55\u6728\u68d2\u4e0e\u5b83\u5339\u914d\uff0cbreak\n            //\u7b2c\u4e8c\u4e2a\u6761\u4ef6 dfs\u4e86\u4e00\u904d\u53d1\u73b0\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528\uff0c\u4e5fbreak\n        while(a[i] == a[i+1]) i++;                //\u526a\u679d3\uff1a\u5982\u679c\u5f53\u524d\u4e0d\u6210\u529f\uff0c\u5219\u4e0e\u5f53\u524d\u76f8\u540c\u7684\u6570\u4e5f\u4e00\u6837\u4e0d\u80fd\u6210\u529f\n    }\n    return 0;\n}\nint main(int argc, char const *argv[]){\n    scanf(\"%d\",&n);\n    sum = 0;                //sum\u4e3a\u641c\u7d22\u7684\u4e0a\u9650\uff0c\u5373\u6700\u9ad8\u641c\u5230sum\u5c31\u505c\u6b62\n    for(int i = 0; i < n; i++){ scanf(\"%d\",&a[i]); if(a[i] > 50){ i--; n--; continue; } sum += a[i]; }\n    sort(a,a+n,cmp);                //\u526a\u679d\u4e00\uff0c\n    for(int i = 1; i <= sum; i++){\n        if(sum%i != 0) continue;            \n                    //\u8fd9\u79cd\u60c5\u51b5\u4e00\u5b9a\u4e0d\u884c\uff0c\u7b97\u662f\u4e00\u4e2a\u5c0f\u526a\u679d\uff0c\u56e0\u4e3a\u603b\u548c\u4e3asum\uff0c\u5982\u679c\u8fdei\u90fd\u4e0d\u80fd\u6574\u9664\u7684\u8bdd\uff0c\u66f4\u4e0d\u53ef\u80fd\u5206\u51fa\u6574\u6570\u4efd\n        memset(visited,false,sizeof(visited));\n        k = dfs(i,n,0,i);                        //\u8c03\u7528\u4e0d\u89e3\u91ca\uff0c\u53c2\u6570\u542b\u4e49\u4e0a\u9762\u6709\n        if(k) break;                //k\u975e\u96f6\uff0c\u5373\u6210\u529f\uff0c\u8df3\u51fa\u5faa\u73af\n    }\n    printf(\"%d\\n\",k);\n    return 0;\n}\n```\nPS\uff1a\u7531\u4e8e\u6211\u6c34\u5e73\u6709\u9650\uff0c\u5982\u679c\u6ce8\u91ca\u5199\u9519\u4e86\uff0c\u8bf7\u79c1\u4fe1@Deny\\_\u5c0f\u7530\uff0c\u611f\u8c22\u6307\u6b63\uff01\n\u53c2\u8003\u8d44\u6599\uff1ahttp://blog.csdn.net/xuezhongfenfei/article/details/8523380\n",
        "postTime": 1471520038,
        "uid": 17170,
        "name": "Deny_\u5c0f\u7530",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "\u9996\u5148\u5f88\u5751\u7684\u5c31\u662f\u6570\u636e\u4e2d\u6709\u5927\u4e8e50\u7684\uff0c\u8981\u8fc7\u6ee4\u6389\uff0c\u4e0d\u80fd\u8fdb\u5165\u7a0b\u5e8f\u7684\u8ba1\u7b97\u3002\n\n\u65e2\u7136\u8981\u6c42\u6700\u5c0f\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u4f7f\u5408\u5e76\u540e\u7684\u6728\u68cd\u5c3d\u91cf\u591a\uff0c\u8fd9\u662f\u4e00\u4e2a\u526a\u679d\uff0c\u6700\u603b\u548c\u5e76\u5269\u4f59\u7684\u6839\u6570\u662f1\u5230\u76ee\u524d\u5c0f\u4e8e50\u7684\u6839\u6570\u4e4b\u7c7b\uff0c\u7531\u4e8e\u8fd9\u4e2a\u8303\u56f4\u8f83\u5c0f\uff0c\u6240\u4ee5\u679a\u4e3e\u7ed3\u679c\u7684\u6728\u68cd\u6839\u6570\uff0c\u800c\u4e0d\u662f\u679a\u4e3e\u957f\u5ea6\uff0c\u7136\u540e\u63a5\u4e0b\u6765\u5224\u5b9a\u662f\u5426\u80fd\u6784\u6210\u6b64\u79cd\u6728\u68cd\u6839\u6570\u7684\u60c5\u51b5\uff0c\u91c7\u7528\u8fd9\u6837\u7684\u65b9\u6cd5\uff1a\u4e0d\u65ad\u6784\u5efa\u6307\u5b9a\u957f\u5ea6\u6728\u68cd\uff0c\u5982\u679c\u6700\u7ec8\u80fd\u6784\u5efa\u6240\u8981\u6c42\u7684\u6839\u6570\uff0c\u5c31\u8fd4\u56detrue\uff0c\u7136\u540e\u8f93\u51fa(\u56e0\u4e3a\u6839\u6570\u662f\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u7684\uff0c\u6240\u4ee5\u4e00\u6709\u7b54\u6848\u5c31\u8f93\u51fa)\uff0c\u603b\u7684\u6765\u8bf4\u662f\u4ee5\u4e0b\u601d\u8def\u3002\n\n1.\u679a\u4e3e\u706b\u67f4\u6839\u6570\uff0c\u5f80\u91cc\u9762\u586b\u5145\uff0c\u770b\u662f\u5426\u80fd\u6784\u6210\u679a\u4e3e\u7684\n\n2.\u4e3a\u65b9\u4fbf\u9012\u5f52\uff0c\u91c7\u7528have\u6570\u7ec4 \u8bb0\u5f55\u957f\u5ea6\u4e3a\u67d0\u4e00\u4e2a\u6570\u6709\u51e0\u6839\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u5f00\u5e03\u5c14\u578b\u6570\u7ec4\n\n3.\u6728\u67f4\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u65b9\u4fbf\u64cd\u4f5c\uff0c\u6bcf\u56de\u586b\u5145\u5c0f\u6728\u68cd\uff0c\u5148\u586b\u6700\u5927\u7684\u662f\u4f18\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u586b\u5145\u65b9\u6848\u53ef\u884c\u7684\u8bdd\uff0c\u90a3\u4e48\u6700\u7ec8\u6728\u67f4\u90fd\u4f1a\u88ab\u586b\u8fdb\u53bb\n\n4.\u5c0f\u4f18\u5316\uff1a\u5982\u679c\u8fd8\u80fd\u591f\u586b\u5145\u7684\u52a0\u4e0a\u5df2\u7ecf\u586b\u5145\u7684\u5c0f\u4e8e\u9700\u8981\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u5c31\u9000\u51fa\n\n\n\u6ce8\u610f\uff1a\u8981\u5904\u7406\u597d\u6570\u7ec4have\u7684\u56de\u6eaf\u548c\u66f4\u65b0\u95ee\u9898\n\n```delphi\n\nvar n,sum,max,i,t,ge,len,tot,w:longint;\n    q,a,have,have1:array[0..80]of longint;\nProcedure qsort(l,r:longint);\n var  i,j,x,y:longint;\n begin\n   i:=l; j:=r; x:=a[(l*2+r)div 3];\n   repeat\n     while a[i]>x do inc(i);\n     while a[j]<x do dec(j);\n     if i<=j then\n      begin\n        y:=a[i]; a[i]:=a[j]; a[j]:=y;\n        inc(i); dec(j);\n      end;\n   until i>j;\n   if i<r then qsort(i,r);\n   if l<j then qsort(l,j);\n end;\nFunction dfs(k,nowlen,num:longint):boolean;\n var i,j:longint;\n begin\n   if k=ge+1 then exit(true);\n   if len-nowlen>q[num] then exit(false);  //???\n   for i:=num to n do\n    if have[a[i]]>0 then\n    begin\n    if  a[i]+nowlen<len then\n     begin\n       dec(have[a[i]]);\n       if dfs(k,nowlen+a[i],i+1) then exit(true);\n       inc(have[a[i]]);\n     end\n     else\n    if a[i]+nowlen=len then\n     begin\n       dec(have[a[i]]);\n       for j:=1 to n do if have[a[j]]>0 then break;\n       dec(have[a[j]]);\n       if dfs(k+1,a[j],j+1) then exit(true);\n       inc(have[a[i]]);\n       inc(have[a[j]]);   //?????\n     end;\n    end;\n  exit(false);\n end;\nbegin\n   readln(n);  sum:=0; max:=0;  tot:=0;\n   for i:=1 to n do\n    begin\n      read(w);\n      if w<=50 then\n      begin\n       inc(tot); a[tot]:=w;\n       inc(sum,a[tot]);\n       inc(have[a[tot]]);\n       if max<a[tot] then max:=a[tot];\n      end;\n    end;\n   n:=tot;\n   qsort(1,n);\n   q[n]:=a[n];\n   for i:=n-1 downto 1 do q[i]:=q[i+1]+a[i];\n   t:=sum div max;\n   if t>n then t:=n;  //??\n   have1:=have;\n   if have[a[1]]=n then writeln(n)\n    else\n   begin\n     for i:=t downto 1 do\n      if (sum mod i)=0 then\n      begin\n        len:=sum div i;  ge:=i;\n        have:=have1;    // Geng Xin\n        dec(have[a[1]]);\n        if dfs(1,a[1],2) then\n         begin\n           writeln(len);\n           break;\n         end;\n      end;\n   end;\nend.\n\n```(pascal)",
        "postTime": 1441896987,
        "uid": 5729,
        "name": "zls6602488",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#define R register\n#define N 75\nusing namespace std;\nint n,cnt,tot,maxn,minn,tm[N],temp; \ninline bool cmp(int a,int b){return a>b;}\ninline int ri(){\n\tchar c=getchar();int x=0,w=1;\n\twhile(!isdigit(c)){if(c=='-')w=-1;c=getchar();}\n\twhile( isdigit(c)){x=(x<<3)+(x<<1)+c-48;c=getchar();}\n\treturn x*w;\n}\ninline void dfs(int res,int sum,int t,int p){\n//(\u5269\u4f59\u7684\u6839\u6570\uff0c\u5f53\u524d\u5df2\u51d1\u957f\u5ea6\uff0c\u5f53\u524d\u627e\u7684\u539f\u59cb\u6728\u68cd\u957f\u5ea6\uff0c\u5f53\u524d\u53ef\u6311\u9009\u7684\u6728\u68cd\u957f\u5ea6\u6700\u5927\u503c)\n\tif(!res){printf(\"%d\",t); exit(0);} //\u641c\u5b8c\u4e86 \u8f93\u51fat\n\tif(sum==t){dfs(res-1,0,t,maxn); return ;}//\u5982\u679c\u5f53\u524d\u51d1\u591f\u4e86res--\n\tfor(R int i=p;i>=minn;--i){//\u53ef\u6311\u9009\u7684\u5230\u6700\u5c0f\u503c\n\t\tif(tm[i]&&i+sum<=t){//\u5982\u679c\u8fd8\u6709\u8fd9\u4e2a\u6728\u68cd\u2014\u2014\u52a0\u4e0a\u4e4b\u524d\u5df2\u7ecf\u51d1\u597d\u7684\n        \t\t\t\t\t//\u8fd8\u5728t\u5185\n\t\t\ttm[i]--;//\u62ff\u6389\u5b83\n\t\t\tdfs(res,sum+i,t,i);//dfs....\u53ea\u4e0d\u8fc7\u8fd9\u65f6\u5019\u7684p\u4e3ai \u5269\u4e0b\u7684                               //\u6728\u68cd\u600e\u4e48\u80fd\u6bd4\u5f53\u524d\u7684\u8fd8\u5927\u5462\n\t\t\ttm[i]++;//\u53ca\u65f6\u8fd8\u56de\u53bb\u7ed9\u522b\u7684dfs\u7528\n\t\t\tif(!sum||sum+i==t)break;//\u4e4b\u524d\u7684dfs\u8ba9\u603b\u548c\u4e3a0\u4e86\uff0c\u6216\u8005\u51d1\t\t\t\t\t\t\t\t\t\t//\u591f\u4e86\uff0c\u76f4\u63a5break \u4f18\u5316\n\t\t}\t\n\t}\n\treturn ;\n}\n\t\nint main() {\n    n=ri();\n    minn=N;\n    for(R int i=1;i<=n;++i){\n        temp=ri();\n        if(temp<=50){//\u5982\u9898\u8f93\u5165\u5427--\n            cnt++;//\u7edf\u8ba1\u4e2a\u6570\n            tm[temp]++;//\u6709\u70b9\u6876\u6392\u610f\u601d\uff1f\uff1f\u4f18\u53161 \u4e0d\u7528\u6392\u5e8f\u4e86\n            tot+=temp;//\u8ba1\u5165\u603b\u548c\n            maxn=maxn>temp?maxn:temp;  \n\t\t\tminn=minn<temp?minn:temp;\n        }\n    }\n    temp=tot>>1;//\u4f18\u53162 \u53ea\u8981\u641c\u5230\u4e00\u534a\uff0c\u6700\u540e\u62fc\u7684\u6839\u6570\u4e0d\u662f<=2\u5c31\u662f1\u4e86\n    for(R int i=maxn;i<=temp;++i)//\u539f\u5148\u6728\u68cd\u957f\u5ea6\u80af\u5b9a>=\u5c0f\u6728\u68cd\u6700\u957f\u7684\n        if(tot%i==0)dfs(tot/i,0,i,maxn); //\u4f18\u53163 \u603b\u957f\u5fc5\u5b9a\u8981\u6574\u9664\u5b83\n    printf(\"%d\",tot);//dfs\u5b8c\u8fd8\u6ca1\u7ed3\u675f\u7684\u8bdd \u53ea\u6709\u4e00\u6839\u5c31\u8f93\u51fa\u8fd9\u4e2atot\u54af\n    return 0;\n}\n\n\n```\n\n",
        "postTime": 1542518576,
        "uid": 70207,
        "name": "\u665a\u5b89\u81ea\u5df1\u8bf4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "\u6781\u5176\u953b\u70bc\u641c\u7d22\u80fd\u529b..GG\n\n### \u641c\u7d22\u601d\u8def\n\n1. \u679a\u4e3e\u539f\u6728\u68cd\u957f\u5ea6\n2. \u641c\u7d22\u80fd\u62fc\u51fa\u7684\u6728\u68cd\n\n\u7ec8\u6b62\u6761\u4ef6\uff1a\u62fc\u51fa$L/l$\u6839\u6728\u68cd\n\n### \u526a\u679d\u601d\u8def\n\n1. \u679a\u4e3e\u957f\u5ea6\u4e3a$L/2$\n\n2. \u679a\u4e3e\u957f\u5ea6\u8981\u80fd\u88abL\u6574\u9664,\u5373:L%l = 0\n\n3. \u6700\u4f18\u89e3\u526a\u679d\uff1a\u5982\u679c\u627e\u5230\u4e00\u4e2a\u89e3\uff0c\u56e0\u4e3a\u957f\u5ea6\u662f\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\uff0c\u53ef\u4ee5\u76f4\u63a5\u9000\u51fa\n\n4. \u53ef\u884c\u6027\u526a\u679d\uff1a\u5982\u679c\u5f53\u524d\u6728\u68cd\u4e0d\u884c\uff0c\u540c\u6837\u957f\u5ea6\u7684\u6728\u68cd\u4e00\u5b9a\u4e0d\u884c\n\n5. \u53ef\u884c\u6027\u526a\u679d&&\u6700\u4f18\u89e3\u526a\u679d\uff1a$lnow - stick[i] >= 0$ \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u6728\u68cd\uff0c\u66f4\u5bb9\u6613\u627e\u5230\u7b54\u6848\u5e76\u4e14\u524d\u9762\u957f\u5ea6\u8fc7\u957f\u53ef\u4ee5\u7684\u76f4\u63a5\u8df3\u8fc7\u3002\n\n6. \u53ef\u884c\u6027\u526a\u679d\uff1a\u641c\u7d22\u5e38\u7528\uff0c\u53ea\u80fd\u7528\u4e00\u6b21\u7684\u60c5\u51b5\u4e0b\u7528last\u8bb0\u5f55\u4e0a\u4e00\u6b21\u9009\u62e9\uff0c\u4e0b\u4e00\u4e2a\u4ecelast+1\u5f00\u59cb\n\n7. \u5148\u8003\u8651\u4e00\u70b9\uff0c\u80fd\u7528\u957f\u6728\u68cd\u62fc\u51fa\u5408\u6cd5\u957f\u5ea6\u5c31\u5c3d\u91cf\u7528\u957f\u6728\u68cd\uff0c\u7c7b\u6bd4\u5c31\u662f\u586b\u6c34\u676f\u5148\u653e\u77f3\u5934\u518d\u653e\u6c99\u5b50\u3002\u57fa\u4e8e\u8fd9\u4e2a\u601d\u60f3\uff0c\u6211\u4eec\u641c\u7d22\u7684\u987a\u5e8f\u662f\u4ece\u5927\u5230\u5c0f\uff0c\u5373**\u540e\u9762\u641c\u5230\u7684\u4e00\u5b9a\u6bd4\u524d\u9762\u77ed**\uff1a\n\n   \u7136\u540e\u6211\u4eec\u6765\u770b\u4e0b\u9762\u7684\u4e24\u4e2a~~\u7384\u5b66~~\u526a\u679d\uff1a\n\n8. \u5f88\u5999\u7684\u526a\u679d1\uff1a$lnow = lm$\n\n   \u8fd9\u662f\u56e0\u4e3a**\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u540e\u5982\u679c\u8fd9\u6839\u957f\u6728\u68cd\u641c\u4e0d\u51fa\u6765**\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u8fd9\u6839\u6728\u68cd\u5e94\u8be5\u662f**\u5982\u679c\u524d\u9762\u62fc\u6210\u8fd9\u6837\uff0c\u540e\u7528\u8fd9\u6839\u957f\u6728\u68cd\u62fc\u51fa\u4e00\u6839*\u5408\u6cd5\u6728\u68cd*\u662f\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\uff01**\u56e0\u6b64\u76f4\u63a5\u56de\u6eaf\u3002\n\n9. \u5f88\u5999\u7684\u526a\u679d2\uff1a$lnow - stick[i] == 0$\n\n   \u8fd9\u662f\u56e0\u4e3a**\u5982\u679c\u8fd9\u6839\u6728\u68cd\u76f4\u63a5\u6ee1\u8db3\u4e00\u6839\u5408\u6cd5\u6728\u68cd\u4f46\u662f\u6ca1\u627e\u5230\u7b54\u6848**\u90a3\u4e48\u6211\u4eec\u8003\u8651**\u8fd9\u6839\u5408\u6cd5\u6728\u68cd**\u5e94\u8be5\u662f**\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\uff0c\u5373\u4f7f\u6362\u4e86\u77ed\u6728\u68cd\u62fc\u51fa\u8fd9\u6839\u5408\u6cd5\u6728\u68cd\uff0c\u4e5f\u4e00\u5b9a\u627e\u4e0d\u5230\u7b54\u6848**\n\n   ~~\u597d\u96be\u61c2\u6211\u8fc7\u4e86\u4e24\u5929\u5c31\u5fd8\u4e86\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u5199\u4e86\u8003\u8bd5\u5e94\u8be5\u601d\u7ef4\u96be\u5ea6\u6ca1\u8fd9\u4e48\u5927\u5427~~\n\n10. \u524d\u9762\u7b2c5\u70b9\u5982\u679c\u7528\u4e8c\u5206\u6548\u7387\u5728\u8fd9\u9898\u6781\u4f4e\uff0c\u8fd8\u4e0d\u5982\u624b\u52a8\u8df3(\u4e5f\u53ef\u80fd\u662f\u6211\u7528\u4e86stl\u7684\u9505)\u2026\u2026\u4e0b\u6b21\u6570\u636e\u8303\u56f4\u6ca1\u52301e5\u6211\u662f\u4e0d\u4f1a\u8003\u8651\u4e8c\u5206\u4f18\u5316\u641c\u7d22\u7684\u2026\u2026\n\n```cpp\n/*\nhttps://www.luogu.org/problemnew/show/P1120\nTitle:\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\nAlgorithm:Search\n*/\n#include <cstdio>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#define N 70\n#define mids(a,b) (a+(b-a)/2)\nusing namespace std;\ntypedef long long ll;\nll n,stick[N],l,r,mid,lm,b;//lm\u4e3a\u957f\u5ea6\u9650\u5236\nbool ans = false;\ninline ll min(ll a,ll b) {return a<b?a:b;}\ninline ll max(ll a,ll b) {return a>b?a:b;}\nbool vis[N];\nbool cmp(ll a,ll b){\n\treturn a>b;\n}\nvoid dfs(int com_num,ll lnow,int last){//\u5df2\u7ecf\u62fc\u51fa\u7684\u6570\u91cf\uff0c\u5269\u4f59\u62fc\u51fa\u7684\u957f\u5ea6\uff0c\u4e0a\u4e00\u4e2a\u641c\u7d22\u7684\u4f4d\u7f6e\n\tif(ans)return;\n\tif(com_num == r / lm){\n\t\tans = true;\n\t\treturn ;//\u627e\u5230\u4e00\u4e2a\u89e3\u5c31\u80fd\u9000\u51fa\n\t}\n\tif(lnow == 0){\n\t\tdfs(com_num+1,lm,0);//\u5f00\u59cb\u4e00\u6839\u65b0\u6728\u68cd\n\t\treturn ;\n\t}\n//\tll *x = upper_bound(stick+1,stick+1+b,lnow) - 1;\n\tfor(int i = last+1;i<=b;i++){\n\t\tif(!vis[i] && lnow - stick[i] >= 0){\n\t\t\tvis[i] = 1;dfs(com_num,lnow-stick[i],i);vis[i] = 0;\n\t\t\tif(ans || lnow == lm || lnow - stick[i] == 0)return;\n\t\t\twhile(stick[i] == stick[i+1])i++;\n\t\t}\n\t}\n}\nint rn(void) {\n\tint t = 0, f = 1;\n\tchar a = getchar();\n\tfor(; a < '0' || a > '9'; a=getchar()) {if(a == '-')f=-1;}\n\tfor(; a>='0' && a<= '9'; a=getchar()) {t = t * 10 + a - '0';}\n\treturn f*t;\n}\nint main() {\n//\tios::sync_with_stdio(false);\n\tn = rn();\n\tfor(int i=1; i<=n; i++) {\n\t\tint x = rn();\n\t\tif(x > 50)continue;\n\t\tstick[++b] = x;\n\t\tl = max(l,stick[b]),r += stick[b];\n\t}\n\tsort(1+stick,stick+1+b,cmp);\n\tfor(int i=l;i<=r/2+1;i++){\n\t\tif(r % i != 0)continue;\n\t\tlm = i;\n\t\tdfs(0,lm,0);\n\t\tif(ans){\n\t\t\tr = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tcout<<r<<endl;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1539521885,
        "uid": 7201,
        "name": "median_dxz",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "  \u672c\u4eba\u7b2c\u4e00\u7bc7\u89e3\u62a5\uff0c\u4e0d\u662f\u9898\u89e3\uff0c\u91cd\u590d\uff0c\u4e0d\u662f\u9898\u89e3\uff0c\u56e0\u4e3a\u672c\u4eba\u592a\u5f31\u4e86\uff0c\u6240\u4ee5\u65e0\u6cd5\u81ea\u5df1\u60f3\u51fa\u65b0\u89e3\u6cd5\uff0c\u5927\u90e8\u5206\u65f6\u95f4\u89e3\u62a5\u90fd\u662f\u5bf9\u9898\u89e3\u6574\u7406\u3002\u4ee5\u540e\u4f1a\u5bf9\u84dd\u9898~~\u6216\u8005\u7eff\u9898\uff0c\u53cd\u6b63\u6211\u90fd\u4e0d\u4f1a~~\u4ee5\u4e0a\u7684\u9898\u76ee\u505a\u89e3\u62a5\u3002\n  \n\n------------\n\n   ~~\u6bd2\u7624~~\u826f\u5fc3\u7ba1\u7406\u5458\u975e\u5e38~~\u6bd2\u7624~~\u826f\u5fc3\u5730\u5bf9\u672c\u9898\u67d0\u4e9b\u6570\u636e\u7684\u65f6\u95f4\u9650\u5236\u8fdb\u884c\u4fee\u6539\uff0c\u6df1\u5165\u7814\u7a76\u540e\u53d1\u73b0\u5176\u5b9e\u53ef\u4ee5\u5c06\u6240\u6709\u6570\u636e\u7684\u65f6\u9650\u6539\u6210200ms\uff08\u9003\u3002\n   \n   \u672c\u9898\u6709\u975e\u5e38\u591a\u7684\u526a\u679d\u6280\u5de7\n   \n   1.\u53ef\u4ee5\u5728\u5b9a\u4e49\u53d8\u91cfmaxn\uff0c\u5e76\u5728\u8f93\u5165\u7684\u65f6\u5019\u5bfb\u627e\u6700\u957f\u2642\u7684\u6728\u68cd\u957f\u5ea6\uff0c\u7136\u540e\u5b9a\u4e49\u53d8\u91cfans\uff0c\u6765\u8ba1\u7b97\u6240\u6709\u5c0f\u6728\u68cd\u603b\u548c\u957f\u5ea6\u3002\u6211\u4eec\u53ef\u4ee5\u53ea\u679a\u4e3emaxn\u5230ans/2\u95f4\u6728\u68cd\u957f\u5ea6\uff0c\u5927\u5927\u51cf\u5c11\u679a\u4e3e\u6570\u91cf\u3002\uff08\u53ef\u4ee5\u53ea\u679a\u4e3e\u4e00\u534a\u662f\u56e0\u4e3a\u5148dfs\u957f\u5ea6\uff0c\u5982\u679c\u627e\u4e0d\u5230\u4e00\u5b9a\u662f\u539f\u6765\u53ea\u6709\u4e00\u6839\u3002\uff08\u5f88\u663e\u7136\uff09\uff08\u9003\n   \n   2.\u5728dfs\u4e4b\u524d\u5148\u5224\u65ad\u8be5\u6570\u662f\u5426ans|i\uff0c\u5982\u679c\u662f\u518ddfs\uff0c\u51cf\u5c11\u4e86\u679a\u4e3e\u6570\u91cf\u3002\n   \n\n  \u4e8b\u5b9e\u4e0a\u53ea\u7528\u8fd9\u4e24\u4e2a\u526a\u679d\u65b9\u6cd5\u5c31\u53ef\u4ee5a\u6389\u8fd9\u9898\uff0c\u4e0d\u8fc7\u524d\u6587\u63d0\u5230\u53ef\u4ee5\u901a\u8fc7\u526a\u679d\u4f7f\u6700\u5927\u6570\u636e\u53ef\u4ee5\u5728200ms\u4e4b\u5185\u901a\u8fc7\uff0c\u63a5\u4e0b\u6765\u5148\u8d34\u4e0a\u8fd0\u7528\u524d\u4e24\u79cd\u65b9\u6cd5\u7684\u4ee3\u7801\u7136\u540e\u518d\u526a\u679d\u5230\u6bd2\u7624\u65f6\u95f4\n  ```cpp\n#include<bits/stdc++.h>\nusing namespace std; \nint n,tot=0,ans=0,maxn=0,minn=0x7fffffff;\nint num[3600]={0};\nvoid dfs(int last,int now,int need,int can){  //\u56db\u4e2a\u53d8\u91cf\u5206\u522b\u8868\u793a \u8fd8\u9700\u8981\u51e0\u6839\u6728\u68cd \n\tif(last==0){printf(\"%d\",need); exit(0);}                 // \u5df2\u7ecf\u51d1\u51fa\u6728\u68cd\u7684\u957f\u5ea6 \n\tif(now==need){dfs(last-1,0,need,maxn); return;}          // \u9700\u8981\u6728\u68cd\u957f\u5ea6 \n\tfor(int i=can;i>=minn;i--){                              //\u76ee\u524d\u53ef\u7528\u6700\u5927\u6728\u68cd\u957f \n\t\tif((num[i]!=0&&(i+now<=need))){                      //\u7b80\u5355\u7684dfs\u8fc7\u7a0b \n\t\t\tnum[i]--;\n\t\t\tdfs(last,now+i,need,i);\n\t\t\tnum[i]++;\n\t\t\tif(now==0||now+i==need) return;\n\t\t}\n\t} \n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){ \n\t\tint a; \n\t\tscanf(\"%d\",&a);\n\t    if(a<=50){\n\t    num[a]++; ans+=a;\n\t    maxn=max(a,maxn);           // \u5728\u8f93\u5165\u8fc7\u7a0b\u4e2d\u5904\u7406\u51fa\u6700\u5927\u7684\u6728\u68cd\u957f\u5ea6\u548c\u6700\u5c0f\u7684 \n\t    minn=min(a,minn);           //\u6728\u68cd\u957f\u5ea6\uff0c\u5b8c\u6210\u526a\u679d \n\t\t}\n\t}\n\tfor(int i=maxn;i<=ans/2;i++)  if(ans%i==0) dfs(ans/i,0,i,maxn);\n\tprintf(\"%d\",ans);\n\treturn 0;\n} \n```\n\n\n------------\n\n  \u63a5\u4e0b\u6765\u662f\u5c06\u6700\u5927\u6570\u636e\u526a\u679d\u5230200ms\u7684\u7384\u5b66\u526a\u679d\n\n   3.\u6839\u636e\u67d0\u8868\u60c5\u7b26\u5927\u4f6c\u7684\u7406\u8bba\uff0c\u4e00\u6839\u6bd4\u8f83\u957f\u7684\u68cd\u5b50\u5728\u672c\u9898\u662f\u4e0d\u5982\u4e00\u6839\u6bd4\u8f83\u77ed\u7684\u68cd\u5b50\u7684\uff0c\u76f4\u89c2\u7684\u611f\u53d7\u4e00\u4e0b\uff0c\u786e\u5b9e\u5982\u6b64\uff0c\u4f60\u957f\u5f52\u4f60\u957f\uff0c\u4f46\u662f\u4f60\u7684\u7075\u6d3b\u8fd0\u7528\u4e0a\u4e0d\u5982\u77ed\u7684\u68cd\u5b50\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u4e00\u904dsort\uff0c\u4f7f\u5f97\u8f83\u957f\u7684\u68cd\u5b50\u6392\u5230\u524d\u9762\u53bb\u3002\n   \n   4.\u7528\u8fc7\u7684\u68cd\u5b50\u957f\u5ea6\u76f8\u540c\u5c31\u4e0d\u8981\u518d\u7528\u4e00\u6b21~~\uff08\u6876\u88c5\u6570\u636e\u8868\u793a\u5176\u5b9e\u4e0a\u9762\u4e24\u4e2a\u4f18\u5316\u90fd\u6709\uff09~~\n   \n   5.\u975e\u5e38\u96be\u60f3\u5230\u7684\u4e00\u70b9\uff1a\uff1a\u5982\u679c\u5f53\u524d\u957f\u68cd\u5269\u4f59\u7684\u672a\u62fc\u957f\u5ea6\u7b49\u4e8e\u5f53\u524d\u6728\u68cd\u7684\u957f\u5ea6\u6216\u539f\u59cb\u957f\u5ea6\uff0c\u7ee7\u7eed\u62fc\u4e0b\u53bb\u65f6\u5374\u5931\u8d25\u4e86\uff0c\u5c31\u76f4\u63a5\u56de\u6eaf\u5e76\u6539\u4e4b\u524d\u62fc\u7684\u6728\u68cd\u3002\n   \u89e3\u91ca\u8d77\u6765\u5c31\u662f\uff0c\u4f60\u548c\u8981\u7684\u4e00\u6837\u957f\uff0c\u4f46\u662f\u4f60\u5374\u4e0d\u80fd\u81ea\u7ec4\uff0c\u4f60\u90fd\u4e0d\u80fd\u81ea\u7ec4\uff0c\u96be\u4e3a\u90a3\u4e9b\u6bd4\u4f60\u8fd8\u77ed\u7684\u6728\u68cd\u5e72\u561b\u5462\n   \n   \u4ee5\u4e0a\u5c31\u662fP1120 \u3010\u6570\u636e\u52a0\u5f3a\u7248\u3011~~\uff08\u81ed\u4e0d\u8981\u8138\u660e\u660e\u964d\u4f4e\u65f6\u9650\uff09~~\n   \n   \u4e2a\u4eba\u8ba4\u4e3a\u5982\u679c\u53ea\u662fa\u6389\u8fd9\u9898\u53ef\u80fd\u53ea\u6709\u3010\u666e\u53ca+/\u63d0\u9ad8\u3011\u7eff\u9898\u6c34\u51c6\uff0c\u4f46\u662f\u5982\u679c\u8981\u6c42\u5168\u90e8\u70b9\u90fd\u5728200ms\u4ee5\u5185\u7684\u8bdd\uff0c\u53ef\u80fd\u6709\u3010\u63d0\u9ad8+/\u7701\u9009-\u3011\uff0c\u5efa\u8bae\u7ba1\u7406\u5458\u518d\u52a0\u5f3a\u6570\u636e\uff08\u9003\n   \n   \u6700\u540e\u611f\u8c22 \uf8f5______\uf8f5 \u5927\u4f6c   \n    \u8fd8\u6709\u67d0\u9648\u5de8\u795e \n    \n   \u9644\u8bc4\u6d4b\u8bb0\u5f55\n   \n ##   \u6211\u7684\u8bc4\u6d4b:[\u8bc4\u6d4b\u8bb0\u5f55](https://www.luogu.org/record/show?rid=9693756)",
        "postTime": 1534227825,
        "uid": 106632,
        "name": "Rbrq",
        "ccfLevel": 0,
        "title": "P1120 \u5c0f\u6728\u68cd\u3010\u6570\u636e\u52a0\u5f3a\u7248\u3011"
    },
    {
        "content": "#\u8fd9\u771f\u7684\u662f\u4e00\u9053\u5f88\uff08e\uff09\u597d\uff08xin\uff09\u7684\u641c\u7d22\u9898\n\n##\u6570\u636e\u66f4\u65b0\u540e\u90fd\u6ca1\u6709P\u7684\uff0c\u90a3\u6211\u6765\u8865\u4e00\u53d1\n\n**\u849f\u84bb\u7684\u6211\u6539\u4e86\u4e00\u4e2a\u665a\u4e0a\uff0c\u52a0\u4e86\u65e0\u6570\u4e2a\u4f18\u5316\u3002\u3002\u3002**\n\n\u4e3b\u8981\u8bb2\u849f\u84bb\u7684\u6211\u7528\u4e86\u54ea\u4e9b\u4f18\u5316\uff1a\n\n1\uff1a\u53ea\u6709\u6728\u68cd\u957f\u5ea6\u603b\u548c\u7684\u56e0\u6570\u624d\u6709\u53ef\u80fd\u662f\u6700\u540e\u7684\u7b54\u6848\uff0c\u6240\u4ee5\u4e0d\u662f\u7684\u5c31\u4e0d\u7528\u53bb\u641c\u4e86\u3002\n\n2\uff1a\u5bf9\u6728\u68cd\u957f\u5ea6\u6309\u964d\u5e8f\u6392\u5e8f\u3002\n\n3\uff1a\u7528sum[i]\u8868\u793a\u7b2ci\u6839\u5230\u7b2cn\u6839\u6728\u68cd\u7684\u957f\u5ea6\u603b\u548c\uff0c\u5982\u679c\u5f53\u524d\u957f\u5ea6+sum[i]\u90fd<\u6211\u4eec\u627e\u7684\u6728\u68cd\u957f\u5ea6\u5c31\u8df3\u51fa\u5f53\u524d\u5faa\u73af\u3002\n\n4\uff1a\u7528f[i]\u8868\u793a\u7528\u8fd9\u4e9b\u6728\u68cd\u80fd\u5426\u62fc\u6210\u957f\u5ea6\u4e3ai\u7684\u6728\u68cd\uff0c\u5982\u679cnot f[\u6211\u4eec\u627e\u7684\u6728\u68cd\u957f\u5ea6-\u5f53\u524d\u957f\u5ea6-\u5f53\u524d\u8981\u63a5\u5165\u7684\u6728\u68cd\u957f\u5ea6]\u5c31\u8bf4\u660e\u8fd9\u79cd\u65b9\u6848\u4e0d\u884c\u3002\n\n5\uff1a\u7528last\u8bb0\u5f55\u6211\u4eec\u4e0a\u6b21\u63a5\u5165\u7684\u6728\u68cd\u957f\u5ea6\uff0c\u4e0b\u6b21\u5c1d\u8bd5\u63a5\u5165\u7684\u6728\u68cd\u957f\u5ea6\u548clast\u4e0d\u540c\u624d\u80fd\u63a5\u5165\uff0c\u5f53\u7136\u53ea\u662f\u4e24\u6b21\u5c1d\u8bd5\u63a5\u5165\u7684\u6728\u68cd\u5747\u4e3a\u7b2ck\u6839\u5c1d\u8bd5\u63a5\u5165\u7684\u3002\n\n6\uff1a\u6211\u4eec\u7528t\u8bb0\u5f55\u4e0a\u6b21\u53d6\u7684\u6728\u68cd\u7684\u7f16\u53f7\uff0c\u4e0b\u4e00\u4e2a\u5c1d\u8bd5\u63a5\u5165\u7684\u6728\u68cd\u7684\u7f16\u53f7\u5fc5\u987b\u662ft+1 to n\uff0c\u4e5f\u5c31\u662f\u4e0b\u4e00\u4e2a\u5c1d\u8bd5\u63a5\u5165\u7684\u6728\u68cd\u957f\u5ea6\u5fc5\u987b<\u524d\u4e00\u6b21\u63a5\u5165\u7684\u6728\u68cd\u957f\u5ea6\uff08\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u6309\u964d\u5e8f\u6392\u597d\u5e8f\u4e86\uff09\uff0c\u5982\u679c\u5982\u679c\u5f53\u524d\u63a5\u5165\u7684\u6728\u68cd\u957f\u5ea6+\u6211\u4eec\u4e4b\u524d\u63a5\u7684\u6728\u68cd\u957f\u5ea6\u603b\u548c=\u6211\u4eec\u627e\u7684\u6728\u68cd\u957f\u5ea6\uff0c\u90a3\u4e48t=0\u3002\n\n7\uff1a\u5982\u679c\u5f53\u524d\u63a5\u5165\u7684\u6728\u68cd\u957f\u5ea6+\u6211\u4eec\u4e4b\u524d\u63a5\u7684\u6728\u68cd\u957f\u5ea6\u603b\u548c=\u6211\u4eec\u627e\u7684\u6728\u68cd\u957f\u5ea6\uff0c\u5219\u76f4\u63a5exit\u6389\u3002\n\n8\uff1a\u5f53\u524d\u63a5\u5165\u7684\u6728\u68cd\u957f\u5ea6+\u6211\u4eec\u4e4b\u524d\u63a5\u7684\u6728\u68cd\u957f\u5ea6\u603b\u548c\u5fc5\u987b<=\u6211\u4eec\u627e\u7684\u6728\u68cd\u957f\u5ea6\u3002\n\n#\u2026\u2026\n\n\u5927\u6982\u4e3b\u8981\u5c31\u662f\u8fd9\u51e0\u4e2a\u4e86\uff0c\u5e0c\u671b\u5bf9\u50cf\u6211\u4e00\u6837\u7684\u849f\u84bb\u4eec\u6709\u5e2e\u52a9\u3002\u3002\u3002\n\nAC\u4ee3\u7801\uff1a\n\n```cpp\nvar \n  a,summ:array[0..65]of longint;\n  b:array[0..65]of boolean;\n  f:array[-10000..10000]of boolean;\n  n,m,i,j,sum,ans,x,last:longint;\nprocedure try(k,l,t,zz:longint);\nvar\n  i,last:longint;\n  begin\n    if (k>n)and(l=0) then \n      begin\n        writeln(ans);\n        halt;\n      end;\n    if k>n then exit;\n    last:=0;\n    for i:=zz to n do \n      begin\n      if l+summ[i]<ans then break;\n      if (not b[i])and(a[i]<>last){\u4f18\u53165}and(l+a[i]<=ans){\u4f18\u53168}and(f[ans-l-a[i]])and(a[i]<=t) then \n        begin\n          b[i]:=true;\n          if l+a[i]=ans then \n            begin\n              try(k+1,0,6666,1{\u4f18\u53166});\n              b[i]:=false;\n              exit;//\u4f18\u53167\n            end;\n          try(k+1,l+a[i],a[i],i+1{\u4f18\u53166});\n          b[i]:=false;\n          last:=a[i];\n          if l+a[i]=ans then exit;\n          if l=0 then exit;\n        end;   \n      end; \n  end;\nbegin\n  readln(n);\n  i:=0;\n  while i<n do\n    begin \n      inc(i);\n      read(x);\n      if x<=50 then \n        begin\n          inc(j);\n          a[j]:=x;\n          inc(sum,x);\n        end;\n    end;\n  n:=j;\n  f[0]:=true;\n  for i:=1 to n do \n    for j:=sum downto a[i] do \n      f[j]:=f[j] or f[j-a[i]]; //\u4f18\u53164\n  for i:=1 to n-1 do \n    for j:=i+1 to n do \n      if a[i]<a[j] then\n        begin\n          a[0]:=a[i];\n          a[i]:=a[j];\n          a[j]:=a[0];\n        end;//\u4f18\u53162\n  for i:=n downto 1 do \n    summ[i]:=summ[i+1]+a[i];//\u4f18\u53163\n  for i:=a[1] to sum do \n    if (sum mod i=0) then //\u4f18\u53161\n      begin\n        ans:=i;\n        try(1,0,6666,1);\n      end;\nend.\n```",
        "postTime": 1504147990,
        "uid": 25355,
        "name": "\u590f\u8272\u796d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "\u4e3b\u8981\u96be\u70b9\u5728\u4e8e\u5982\u4f55\u8fdb\u884cdfs\u7684\u526a\u679d\n\n\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\uff08\u4e0d\u4e8c\u5206\u4e5f\u4e0d\u4f1a\u8d85\u65f6\uff0c\u6211\u7684\u4ee3\u7801\u6ca1\u6709\u4e8c\u5206\uff09\uff0cdfs\u770b\u770b\u8fd9\u4e2a\u7b54\u6848\u53ef\u4e0d\u53ef\u884c\n\n\u867d\u7136\u6570\u636e\u5f88\u5c0f\uff0c\u76f4\u63a5dfs\u4e5f\u662f\u4f1a\u8d85\u65f6\u7684\uff0c\u6240\u4ee5\u9700\u8981\u52a0\u5165\u4e00\u4e9b\u526a\u679d\u3002\n\n1.\u4ecemax\uff08\u6700\u5927\u6728\u68cd\u957f\u5ea6\uff0c\u603b\u6728\u68cd\u957f\u5ea6/\u8981\u5206\u7684\u6bb5\u6570\uff09\u4e3a\u5de6\u9762\uff0c\u6240\u6709\u6728\u68cd\u957f\u5ea6\u4e3a\u53f3\u9762\u4e8c\u5206\u7b54\u6848\u3002\n\n2.\u6728\u68cd\u957f\u5ea6\u8981\u6392\u5e8f\uff0c\u65b9\u4fbf\u6bcf\u6b21dfs\u4ece\u5c0f\u5230\u5927\uff0c\u4e3a\u907f\u514d\u91cd\u590d\u641c\u7d22\uff08\u6bd4\u5982\u8bf42 3 4 \u548c2 4 3\uff09\u5b9a\u4e49\u4e00\u4e2apos\uff0c\u6bcf\u6b21\u679a\u4e3e\u4ecepos\u5f00\u59cb\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6392\u5e8f\u7684\u539f\u56e0\u4e4b\u4e00\u3002\n\n3.\u5982\u679c\u73b0\u5728\u641c\u7d22\u72b6\u6001\u7684\u5269\u4f59\u957f\u5ea6\u548c\u4e8c\u5206\u7b54\u6848\u7684\u957f\u5ea6\u76f8\u7b49\uff0c\u8fd8\u641c\u4e0d\u51fa\u7b54\u6848\uff0c\u8bf4\u660e\u6709\u6728\u68cd\u65e0\u89e3\uff0c\u76f4\u63a5break\u8df3\u51fa\u5faa\u73af\u3002\n\n4.\u5982\u679c\u73b0\u5728\u641c\u7d22\u72b6\u6001\u7684\u5269\u4f59\u957f\u5ea6\u548c\u5faa\u73af\u641c\u7d22\u5230\u6728\u68cd\u7684\u957f\u5ea6\u76f8\u7b49\uff0c\u90a3\u4e48\u4e0b\u4e00\u6b21dfs\u7684\u72b6\u6001\u59823\uff0c\u8fd8\u641c\u4e0d\u51fa\u7b54\u6848\uff0c\u8bf4\u660e\u6709\u6728\u68cd\u65e0\u89e3\uff0c\u76f4\u63a5break\u8df3\u51fa\u5faa\u73af\u3002\n\n5.\u5982\u679c\u8fd9\u4e2a\u957f\u5ea6\u7684\u6728\u68cd\u641c\u4e0d\u51fa\u7b54\u6848\uff0c\u76f8\u540c\u957f\u5ea6\u7684\u4e5f\u641c\u4e0d\u51fa\u7b54\u6848\u3002\n\n\u4e0b\u9762\u662f\u6ee1\u5206\u4ee3\u7801\uff08ac\u6570\u636e\u52a0\u5f3a\u7248\uff09\n\n\n\n\n```cpp\n#include<iostream>\n#include<iomanip>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nbool vis[101];\nint n,a[101],tot,all,len;\nint cmp(int x,int y)\n{\n    return x>y;\n}\nbool dfs(int now,int pos,int d)\n{\n    if(d==tot)\n    {\n        return 1;\n    }\n    if(now==0) \n    if(dfs(len,1,d+1)==1) return 1;\n    for(int i=pos;i<=n;++i)\n        if(vis[i]==0&&a[i]<=now)\n        {\n            vis[i]=1;\n            if(dfs(now-a[i],i+1,d)) return 1;\n            vis[i]=0;\n            if(now==a[i]||now==len) break;   //3,4\n            while(a[i+1]==a[i]) i++;        //5\n    }\n    return 0;\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;++i)\n    {\n        cin>>a[i];\n        if(a[i]>50)\n        {\n            i--;n--;\n        }\n        else all+=a[i];\n    }\n    sort(a+1,a+1+n,cmp);        //2\n    for(int i=a[1];i<=all;++i)  //1\n    {\n        if(all%i==0) \n        {   len=i;\n            tot=all/i;\n            if(dfs(len,1,0)==1)\n            {\n                cout<<len;\n                return 0;\n            }\n        }\n    }\n}\n```",
        "postTime": 1503836328,
        "uid": 43140,
        "name": "zhaoyifan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "PS\uff1a\u8fd9\u9053\u9898\u5f88\u5751\u554a\uff0c\u5751\u5bb3\u4e86\u62115\u4e2a\u5c0f\u65f6\uff0c\u539f\u56e0\u5c31\u662f\u6211\u521a\u5f00\u59cb\u53ea\u80fd\u8fc779\u5206\uff0c\u540e\u6765\u770b\u5176\u4ed6\u5927\u4f6c\u7684\u9898\u89e3\uff0c\u7136\u540e\u81ea\u5df1\u6570\u636e\uff0c\u548c\u5176\u4ed6\u4ee3\u7801\u8dd1\u51fa\u6765\u7684\u5bf9\uff0c\u53d1\u73b0\u6709\u4e00\u4e2a\u4e0d\u4e00\u6837\uff0c\u4e8e\u662f\u6211\u5c31\u5f00\u59cb\u627e\u95ee\u9898\uff0c\u7ed3\u679c\u8dd1\u51fa\u6765\u4e00\u6837\u4e86\uff0c\u4ea4\u4e0a\u53bb27\u5206\uff0c\u6700\u540e\u4ea4\u4e0a\u53bbAC\u4e86\uff0c\u8dd1\u81ea\u5df1\u7684\u6570\u636e\u53c8\u4e0d\u5bf9\u4e86\uff0c\u6700\u540e\u7adf\u53d1\u73b0\u662f\u9898\u89e3\u9519\u4e86\uff0c\u4ed6\u53ea\u5f00\u4e86101\u7684\u6570\u7ec4\uff0c\u800c\u6211\u7684\u6570\u636e\u521a\u597d\u662f102\u7684.........(\u5f53\u65f6\u6211\u7684\u5185\u5fc3\u662f\u5d29\u6e83\u7684\uff09\u3002\u3002\u3002\u3002\n\n\u7136\u540e\u5e9f\u8bdd\u4e0d\u591a\u8bf4\u4e86\uff0c\u6211\u7ed9\u5404\u4f4d\u8bb2\u8bb2\u6211\u6240\u7406\u89e3\u7684\u8fd9\u9053\u9898\uff1a\u9996\u5148\u4f60\u8981\u628a\u5927\u4e8e50\u7684\u8fc7\u6ee4\u6389\uff0c\u7136\u540e\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u7136\u540e\u641c\u7d22\u7b54\u6848\uff0c\u4ee3\u5165DFS\u5224\u65ad\u53ef\u884c\u6027\u3002DFS\u8fc7\u7a0b\u4e2d\u6709\u4e09\u4e2a\u91cd\u8981\u526a\u679d\uff0c\u4ee3\u7801\u4e2d\u6709\u6ce8\u91ca\uff0c\u6211\u4e3a\u4e86\u597d\u770b\u8fd8\u5199\u4e86\u4e00\u4e2ajudge\u51fd\u6570\uff0c\u4f46\u662fjudge\u51fd\u6570\u662f\u53ef\u4ee5\u548cDFS\u5408\u5e76\u5728\u4e00\u8d77\u7684\u3002\u5269\u4e0b\u7684\u6211\u4e0d\u591a\u8bf4\uff0c\u6211\u5728\u4ee3\u7801\u4e2d\u6709\u8be6\u7ec6\u6279\u6ce8\uff0c\u4e0b\u9762\u9644\u4e0a\u6211\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cstdlib>\nusing namespace std;\nconst int maxn=1005;\nint dist[maxn];//dist[i]\u8868\u793a\u7b2ci\u4e2a\u6728\u68d2\u7684\u957f\u5ea6 \nbool visit[maxn];//visit[i]\u8868\u793a\u7b2ci\u6839\u6728\u68d2\u662f\u5426\u4f7f\u7528\u8fc7 \nint sum=0/*\u5c0f\u6728\u68cd\u957f\u5ea6\u603b\u548c*/,maxlength=0/*\u6700\u5927\u5c0f\u6728\u68cd\u957f\u5ea6*/,len/*\u679a\u4e3e\u7b54\u6848*/,flag=0/*\u5224\u65ad\u662f\u5426\u627e\u5230\u7b54\u6848\u7684\u6807\u5fd7*/,s[maxn]/*\u540e\u7f00\u548c*/,n,num/*\u6700\u591a\u6709\u597d\u591a\u6839\u5927\u6728\u68cd*/;\nvoid judge(int);\nbool compare(int x,int y){return x>y;}\nvoid dfs(int cnt/*\u679a\u4e3e\u5230\u7b2c\u51e0\u6839\u5927\u6728\u68cd*/,int x/*\u5269\u4f59\u5927\u6728\u68cd\uff08\u7b54\u6848\uff09\u957f\u5ea6*/,int k/*\u7b2c\u51e0\u6839\u5c0f\u6728\u68cd\u957f\u5ea6*/)\n{\n    if(x==0){judge(cnt+1);return;}//\u679a\u4e3e\u5b8c\u4e00\u6b21\u5927\u6728\u68cd*/ \n    if(x<dist[n])return;//\u5224\u65ad\u53ef\u884c\u6027 \n    for(int i=k;i<=n;i++)\n    {\n        if(!visit[i] && dist[i]<=x)//\u5224\u65ad\u53ef\u884c\u6027 \n        {            \n            if(x>s[i])return;//\u5224\u65ad\u53ef\u884c\u6027 \n            visit[i]=1;\n            dfs(cnt,x-dist[i],i+1);\n            if(flag)return;//\u526a\u679d1 \n            visit[i]=0;\n            if(x==dist[i])return;//\u526a\u679d2 \n            for(;i<n;i++)\n            if(dist[i]!=dist[i+1])break;//\u526a\u679d3 \n        }\n    }\n}\nvoid judge(int cnt)\n{\n    if(len==sum||cnt==num)//\u5224\u65ad\u7b54\u6848 \n    {\n        flag=1;\n        return;\n    }\n    int i;\n    for(i=cnt;i<=n;i++)\n    {\n        if(!visit[i])break;\n    }    \n    visit[i]=1;\n    dfs(cnt,len-dist[i],i+1);\n    visit[i]=0;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    int temp,j=0;\n    for(int i=1;i<=n;i++) \n    {\n        scanf(\"%d\",&temp);\n        if(temp>50||temp==0) continue;//\u8fc7\u6ee4 \n        dist[++j]=temp;\n        sum+=temp;\n        if(maxlength<temp) maxlength=temp;\n    }n=j;\n    for (int i=n;i>=1;i--)s[i]=dist[i]+s[i+1];//\u540e\u7f00\u548c \n    sort(dist+1,dist+j+1,compare);//sort\u9ed8\u8ba4\u662f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n    for(len=maxlength;len<=sum;len++)\n    {\n        if(sum%len==0)//\u5224\u65ad\u53ef\u884c\u6027 \n        {     \n            num=sum/len;\n            memset(visit,0,sizeof(visit));\n            judge(1);\n            if(flag)\n            {\n                printf(\"%d\\n\",len);\n                return 0;\n            }\n        }\n    }\n}     \n\u7ed3\u675f\uff0c\u5e0c\u671b\u5927\u5bb6\u80fd\u6709\u6240\u83b7QAQ\u3002\u3002\u3002\u3002\n```",
        "postTime": 1503363155,
        "uid": 25709,
        "name": "SNiFe",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "\u6574\u4f53\u601d\u60f3\u5c31\u662f\u679a\u4e3e\u6728\u68cd\u957f\uff0c\u641c\u7d22\u662f\u5426\u80fd\u62fc\u51d1\u5f97\u5230\uff0c\u518d\u52a0\u4e0a**\u5404\u79cd\u526a\u679d**\uff1b\n\n\u526a\u679d\u5982\u4e0b\uff1a~~\uff08\u5c3d\u7ba1\u697c\u4e0b\u5df2\u7ecf\u8bb2\u8fc7\u4e86\uff0c\u849f\u84bb\u6211\u8fd8\u662f\u518d\u7801\u4e00\u904d\uff09~~\n\n1\u3001\u5c06\u6240\u6709\u6728\u68cd\u957f\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u4e00\u904d\uff0c\u5927\u7684\u53d6\u5b8c\u540e\u8fd8\u80fd\u53d6\u5230\u7684\u5269\u4f59\u7a7a\u95f4\u5c31\u76f8\u5bf9\u51cf\u5c11\uff0c\u540c\u65f6\u4e5f\u65b9\u4fbf\u5176\u4ed6\u526a\u679d\uff1b\n\n2\u3001\u82e5\u5f53\u524d\u6728\u68cd\u65e0\u6cd5\u5b8c\u6210\u62fc\u51d1\uff0c\u5219\u4e0e\u5176\u7b49\u957f\u7684\u6728\u68cd\u540c\u6837\u4e0d\u884c\uff0c\u53ef\u4ee5\u8df3\u8fc7\uff1b\n\n3\u3001\u82e5\u6728\u68cdX\u662f\u65e7\u4e00\u7ec4\u7684\u6700\u540e\u4e00\u6839\uff0c\u65e7\u4e00\u7ec4\u62fc\u5b8c\u540e\uff0c\u53d1\u73b0\u65b0\u4e00\u7ec4\u65e0\u6cd5\u5b8c\u6210\uff0c\u5c31\u4e0d\u9700\u8981\u518d\u679a\u4e3e\u6bd4\u6728\u68cdX\u5c0f\u7684\u6728\u68cd\u4e86\uff1b\n\n\uff08\u56e0\u4e3a\u6728\u68cdX\u662f\u201c\u5408\u9002\u201d\u7684\uff0c\u82e5\u6709\u6bd4X\u5c0f\u7684\u82e5\u5e72\u6728\u68cd\u80fd\u4ec5\u4ec5\u53d6\u4ee3X\uff0c\u4f46\u662fX\u5374\u76f8\u5bf9\u90a3\u51e0\u6839\u6728\u68cd\u7684\u53ef\u62fc\u51d1\u79cd\u7c7b\u8981\u5c11\uff0c\u66f4\u4e0d\u201c\u7075\u6d3b\u201d\uff0c\u663e\u7136\u4e0d\u5408\u7406\uff09\n\n4\u3001\u82e5\u5728\u65b0\u4e00\u7ec4\u7684\u62fc\u51d1\u4e2d\uff0c\u6700\u5927\u7684\u6728\u68cd\u65e0\u6cd5\u5b8c\u6210\uff0c\u5219\u63a5\u4e0b\u6765\u7684\u8fd9\u51e0\u7ec4\u90fd\u4e0d\u884c\uff08\u56e0\u4e3a\u90a3\u6839\u6700\u957f\u7684\u6728\u68cd\u662f\u8fdf\u65e9\u8981\u7528\u7684\uff09\uff1b\n\n\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n    int p[66],n,tmp,a,maxn=0,sum=0;    bool used[66];\n//p\u8bb0\u5f55\u957f\u5ea6\nbool cmp(int p,int y){    return(p>y);    }\n    \nbool dfs(int s,int k,int py,int l){  //s\u662f\u5f53\u524d\u5df2\u7ecf\u62fc\u51d1\u5f97\u5230\u7684\u957f\u5ea6\uff0ck\u662f\u679a\u4e3e\u8d77\u70b9\u7684\u5750\u6807\uff0cpy\u5df2\u7ecf\u5b8c\u6210\u7684\u6728\u68cd\u6570\uff0cl\u662f\u76ee\u6807\u957f\u5ea6\n    \n    if(k>n)return false;  //\u8fb9\u754c\n    \n    if(py>tmp)return true;  //\u8fb9\u754c\n    \n    for(int x=k;x<=n;x++){  //\u679a\u4e3e\u6728\u68cd\n        if(used[x]&&(s+p[x])<=l){\n        \n            used[x]=false;\n            \n            if(s+p[x]==l){\n                if(dfs(0,1,py+1,l))return true;    }  //\u641c\u7d22\u4e0b\u4e00\u7ec4           \n            else{\n                if(dfs(s+p[x],x+1,py,l))return true;}  //\u7ee7\u7eed\u627e\n            \n            used[x]=true;\n        \n            if(s+p[x]==l || s==0)break;  //\u526a\u679d3\u30014\n            while(p[x+1]==p[x])x++;  //\u526a\u679d2\n        }\n    }\n    return false;\n}\n\nint main(){\n    scanf(\"%d\",&n);    tmp=0;\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&a);\n        if(a>50)continue;  //\u5ffd\u7565\u957f\u5ea6\u5927\u4e8e50\u7684\u6728\u68cd\n        tmp++;    p[tmp]=a;\n        maxn=max(maxn,a),sum+=a;\n    }\n    n=tmp;\n    sort(p+1,p+n+1,cmp);  //\u89c11\n    \n    for(int i=maxn;i<=sum;i++){  //\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\uff0c\u7b54\u6848\u5927\u4e8e\u7b49\u4e8e\u6700\u5927\u6728\u68cd\u957f\uff0c\u4e14\u662f\u6240\u6709\u6728\u68cd\u603b\u548c\u7684\u56e0\u6570\uff1b\n        if(sum%i==0){\n            for(int j=1;j<=n;j++)used[j]=true;\n            tmp=sum/i;\n            for(int j=1;j<=n;j++)\n                if(p[j]==i)tmp--,used[j]=false;  //\u628a\u5df2\u7ecf\u7b26\u5408\u7684\u5355\u6839\u6728\u68cd\u53bb\u6389\uff0c\u6ca1\u4ec0\u4e48\u7528\u7684\u5c0f\u526a\u679d~~\u61d2\u5f97\u5220\u4e86~~\n                \n            if(dfs(0,1,1,i)){\n                printf(\"%d\",i);\n                return 0;\n            }    \n        }        \n    }\n    \n    return 0;\n}\n```\n\u65bd\u5de5\u5b8c\u6bd5\uff0c\u795d\u5927\u5bb6AC\uff01\n",
        "postTime": 1501994223,
        "uid": 9315,
        "name": "zhyh",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "dfs+\u526a\u679d\n\n1.\u5bf9\u6728\u68cd\u964d\u5e8f\u6392\u5e8f\uff0c\u679a\u4e3e\u539f\u957f\u4e3a\u603b\u957f\u7684\u7ea6\u6570\u3002\n\n\u679a\u4e3e\u6bcf1\u6839\u6728\u68cd\u65f6\uff0c\u526a\u679d\u5982\u4e0b\uff1a\n\n2.\u7b2c1\u6839\u9009\u6700\u957f\u7684\uff0c\u4e14\u4e0d\u5fc5\u6362\u3002\u56e0\u4e3a\u8fd9\u4e00\u6839\u8fdf\u65e9\u8981\u88ab\u9009\uff0c\u53ea\u9700\u679a\u4e3e1\u6b21\u3002\n\n3.\u91cd\u590d\u957f\u5ea6\u7684\u6728\u68cd\u679a\u4e3e1\u6839\u540e\u5931\u8d25\uff0c\u5176\u4f59\u7684\u90fd\u4e0d\u5fc5\u9009\u3002\n\n4.\u82e5\u5269\u4f59\u7684\u957f\u5ea6\u6bd4\u6700\u77ed\u7684\u8fd8\u8981\u77ed\uff0c\u9000\u51fa\u3002\n\n5.\u82e5\u5269\u4f59\u957f\u5ea6\u6bd4\u5269\u4e0b\u6728\u68cd\u4e4b\u548c\u8fd8\u8981\u5927\uff0c\u9000\u51fa\u3002\n\n6.\u4e0e2\u7c7b\u4f3c\uff0c\u82e5\u6700\u540e1\u6839\u5931\u8d25\u4e86\uff0c\u5373\u4f7f\u5b83\u53ef\u4ee5\u88ab\u5176\u5b83\u82e5\u5e72\u5c0f\u7684\u6728\u68cd\u66ff\u6362\uff0c\n\n\u957f\u6728\u68cd\u7684\u7528\u5904\u4e00\u5b9a\u6bd4\u77ed\u7684\u5c0f\u3002\u5373\u77ed\u7684\u4e24\u6839\u90fd\u65e0\u6cd5\u6210\u529f\uff0c\u957f\u7684\u66f4\u4e0d\u53ef\u80fd\u4e86\u3002\n\n\u6b64\u65f6\u8f7b\u677e\u8fc7\u6240\u6709\u6570\u636e\u3002\n\n\u4e3b\u8981\u601d\u60f3\uff1a\u4f18\u5148\u5c1d\u8bd5\u53ef\u80fd\u6027\u5c11\u7684\u6b65\u9aa4\uff0c\u907f\u514d\u5b9e\u8d28\u76f8\u540c\u7684\u641c\u7d22\u3002\n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nint i,j,n,a[101],s[101];\nint len,num;\nint tot,maxn;\nbool used[101],flag=0;\nvoid dfs(int, int, int);\nint comp(int a, int b)\n{\n    return a>b;\n}\nvoid fit(int cnt)\n{\n    if (len == tot || cnt == num) //\u5fc5\u5b9a\u6210\u529f\u6216\u5269\u4e0b1\u6839\u5df2\u5b9a\n    {\n        flag=1;\n        return;\n    }\n    int i;\n    for (i=cnt; i<=n; i++) \n      if (used[i]==0) break;\n    used[i]=1;\n    dfs(cnt,len-a[i],i+1);\n    used[i]=0; //\u56de\u6eaf \n}\nvoid dfs(int cnt, int leftlen, int p)\n{\n    if (leftlen==0)\n    {\n        fit(cnt+1);\n        return;\n    }\n    if (leftlen < a[n]) return;    //\u53ef\u884c\u6027 \n    for (int i=p; i<=n; i++)\n      if (a[i]<=leftlen && used[i]==0)\n      {\n        if (leftlen > s[i]) return; //\u53ef\u884c\u6027\n          used[i]=1;\n          dfs(cnt,leftlen-a[i],i+1);\n          if (flag) return;\n          used[i]=0;\n          if (leftlen == a[i]) return; //the last one\n          for (; i<n; i++) //\u526a\u679d3 \n          if (a[i]!=a[i+1]) break;\n      }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for (i=1; i<=n; i++)\n        scanf(\"%d\",&a[i]);\n    sort(a+1,a+n+1,comp);\n    for (i=1; i<=n; i++)\n      if (a[i]<=50) break;\n    //\u8fc7\u6ee4 \n    for (j=1; i<=n; j++,i++)\n      a[j]=a[i];\n    n=j-1;\n    for (i=1; i<=n; i++) \n    {\n        tot+=a[i];\n        maxn=max(maxn,a[i]);\n    }\n    for (i=n; i>=1; i--) \n      s[i]=a[i]+s[i+1];\n    for (len=maxn; len<=tot; len++)\n      if (tot%len==0)\n      {\n          memset(used,0,sizeof(used));\n          num=tot/len;\n          fit(1);\n          if (flag){\n              printf(\"%d\",len);\n              return 0;\n          }\n      }\n}\n```",
        "postTime": 1477655798,
        "uid": 19884,
        "name": "\u7fe0\u7af9\u53f6\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    },
    {
        "content": "\u505a\u4e86\u4e00\u4e0b\u5348\uff0c\u4f5c\u4e3a\u83dc\u9e21\u7684\u6211\u7ec8\u4e8eAC\u6389\u4ed6\u4e86\uff0c\u54c8\u54c8\uff0c\u53d1\u4e2a\u9898\u89e3\u795d\u8d3a\u4e00\u4e0b\uff1b\n\n\u5148\u6765\u4e2a\u4ee3\u7801\uff08\u5199\u7684\u4e0d\u597d\uff0c\u52ff\u55b7\uff09\n\n\n            \n    \n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\nint len[65];\nbool used[65];\nint sum,L,n=0,nn,last=0,x;\nint cmp(const void *a,const void *b)\n{\n    return *(int *)b-*(int *)a;\n}\nbool DFS(int m,int left)    //m\u4e3a\u5269\u4f59\u7684\u672a\u7528\u7684\u6728\u68d2\u6570\uff0cleft\u4e3a\u5f53\u524d\u6b63\u5728\u62fc\u63a5\u7684\u6728\u68d2\u548c\u5047\u5b9a\u7684\u6728\u68d2\u957f\u5ea6L\u6bd4\u8fd8\u7f3a\u5c11\u7684\u957f\u5ea6\n{\n    if(m==0&&left==0)\n        return true;\n    if(left==0)     //\u4e00\u6839\u521a\u521a\u62fc\u5b8c\u5f00\u59cb\u62fc\u65b0\u7684\u4e00\u6839\n        left=L;\n    x=0;\n    if (left!=L) x=last;          //\u8fd9\u4e2a\u70b9\u5f88\u91cd\u8981\uff0c\u8fd9\u4e5f\u662f\u5927\u591a\u6570\u4eba69\u5206\u7684\u539f\u56e0\uff0c\u7531\u4e8e\u8fd9\u4e2a\u9898\u7684\u6570\u636e\u8fc7\u4e8e\u5f3a\u5927\uff0c\u6240\u4ee5\u80fd\u51cf\u5c31\u5f97\u51cf\uff0c\u8fd9\u91cc\u7684\u610f\u601d\u662f\u5f53left\uff01=L\u65f6 \n    for(int i=x;i<n;++i)          //left\u4e00\u5b9a\u5df2\u7ecf\u88ab\u522b\u7684\u5c0f\u68cd\u51cf\u5c0f\u8fc7\uff0c\u800c\u6bd4\u90a3\u4e2a\u4e4b\u524d\u7684\u6728\u68cd\u8fd8\u8981\u5927\u7684\u6728\u68cd\u5f53\u7136\u5c31\u5f97\u628a\u4ed6\u6dd8\u6c70\u4e86\uff08PS\uff1b\u5c31\u662f\u8fd9\u4e2a\u70b9\u5361\u4e86\u6211\u4e00\u4e0b\u5348\uff09 \n    {\n        if(!used[i]&&len[i]<=left)\n        {\n            if (len[i]>left) continue;\n            if(i>0)\n            {\n                if(!used[i-1]&&len[i]==len[i-1])    //\u7b2c\u4e00\u6b21\u526a\u679d\uff1a\n                    continue;                        //\u5982\u679c\u5f53\u524d\u7684\u6ca1\u7528\u8fc7\u7684\u68d2\u5b50\u4e0d\u53ef\u7528\uff0c\u90a3\u4e48\u548c\u4ed6\u957f\u5ea6\u76f8\u540c\u7684\u672a\u4f7f\u7528\u7684\u68d2\u5b50\u4e5f\u4e0d\u53ef\u7528\uff0c\u76f4\u63a5\u8df3\u8fc7\n            }\n            used[i]=true;last=i;\n            if(DFS(m-1,left-len[i]))\n                return true;\n            else\n            {\n                used[i]=false;//\u8bf4\u660e\u4e0d\u80fd\u7528i\u4f5c\u4e3a\u7b2c\u4e00\u6761\uff0c\u90a3\u4e48\u8981\u62c6\u4ee5\u524d\u7684\u6728\u68d2\uff0ci\u8fd8\u53ef\u80fd\u7528\u5728\u4ee5\u524d\u7684\u6728\u68d2\u4e2d\uff0c\u6240\u4ee5\u56de\u6eaf\n                if (left==L&&used[i]==false) return false;\n                if(len[i]==left||left==L)  //\u91cd\u8981\u526a\u679d---\u5f88\u91cd\u8981\u5426\u5219\u4f1a\u8d85\u65f6\n                    return false;          //\u5c06\u5f00\u59cb\u641c\u7d22\u4e00\u652f\u957f\u4e3a L \u7684\u6728\u68cd\u65f6\uff0c\u6211\u4eec\u603b\u662f\u4ee5\u5f53\u524d\u6700\u957f\u7684\u672a\n            }                               //\u88ab\u4f7f\u7528\u7684 \u6728\u68cd\u5f00\u59cb\uff0c\u5982\u679c\u641c\u7d22\u4e0d\u6210\u529f\uff0c\u90a3\u4e48\u4ee5\u6bd4\u5b83\u77ed\u7684\u5f00\u59cb\n        }                                   //\u4e5f\u4e00\u5b9a\u4e0d\u80fd\u53d6\u5f97\u5168\u5c40\u7684\u6210\u529f\u3002\u56e0\u4e3a\u6bcf\u4e00\u652f\u9898\u76ee\u7ed9\u51fa\u7684\u6728\u68cd\u90fd\u8981\u88ab\u7528\u5230\u3002\n    }                                       //len[i]==left\u662f\u6307dfs\u4e86\u4e00\u8f6e\uff0clen[i]\u8fd9\u4e2a\u6b63\u5408\u9002\u7684\u90fd\u4e0d\u80fd\u7528\u5230\uff0c\u5c31\u4e0d\u9700\u8981\u8003\u8651\u7528\u6bd4\u4ed6\u5c0f\u7684\u51d1\u51faleft\u4e86 \n                                            //left==L\u662f\u6307\u641c\u7d22\u4e86\u4e00\u5927\u5708\uff0c\u4f46\u662f\u4ecd\u7136\u6ca1\u6709\u5408\u9002\u7684\u8ba9left\u53d8\u5316\uff0c\u5f53\u7136\u5c31\u4e0d\u5408\u9002\u4e86 \n    return false;    \n}\nint main()\n{\n        n=0;\n        int cs;\n        scanf(\"%d\",&nn);\n        sum=0;\n        for(int i=0;i<nn;++i)\n        {\n            scanf(\"%d\",&cs);\n            if (cs<=50){\n            len[n]=cs;\n            sum+=len[n];\n            n++;\n            }\n            else{\n            continue;}\n        }\n        qsort(len,n,sizeof(int),cmp);       //\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u4ece\u6700\u5927\u7684\u5f00\u59cb\u641c\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u90fd\u8981\u7528\u5230\uff0c\u6240\u4ee5\u5c31\u5148\u628a\u6700\u4e0d\u597d\u89e3\u51b3\u7684\u89e3\u51b3\u4e86\uff0c\u4e5f\u662f\u540e\u9762last\u7b49\u4f18\u5316\u7684\u57fa\u7840 \n        for(L=len[0];L<=sum/2;++L)          //\u82e5L>sum/2\u5219\u53ea\u6709\u4e00\u79cd\u53ef\u80fd\u5c31\u662f\u6240\u6709\u6728\u68d2\u53ea\u80fd\u62fc\u63a5\u6210\u4e00\u6839\u3002\n        {\n            if (sum%2==1&&L%2==0) continue;\n            if(sum%L)\n                continue;\n            memset(used,false,sizeof(used));\n            if(DFS(n,L))\n            {\n                printf(\"%d\\n\",L);\n                    break;\n            }\n        }\n        if(L>sum/2)\n            printf(\"%d\\n\",sum);\n    return 0;\n}\n```",
        "postTime": 1476436259,
        "uid": 22181,
        "name": "Alan_lcs",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1120 \u3010\u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d\u3011"
    }
]