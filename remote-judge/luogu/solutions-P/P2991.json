[
    {
        "content": "\u672c\u4eba\u8868\u793a\u4e00\u5f00\u59cb\u770b\u5230\u8fd9\u9053\u9898\u7684\u65f6\u5019\u5e76\u6ca1\u6709\u770b\u61c2\n\n\u6bd4\u5982\u8fd9\u53e5\n\n**\u5982\u679cBessie\u9009\u62e9\u4e86\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u5316\u5979\u7684\u5f00\u5fc3\u503c\uff0c\u90a3\u4e48\uff0c\u5979\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e00\u6b21\u51b2\u6d6a\u53ef\u4ee5\u5f97\u5230\u7684\u6700\u5927\u5f00\u5fc3\u503c\u662f\u591a\u5c11\uff1f**\n\n\u673a\u623f\u5927\u4f6c\u7ed9\u51fa\u7684\u89e3\u7b54\u662f:\n\n**\u5047\u8bbe\u4f60\u6709\u610f\u60f3\u8ba9Bessie\u7684\u6109\u60a6\u503c\u6700\u5c0f,\u9898\u76ee\u89c4\u5b9a\u4f60\u53ea\u80fd\u6539k\u6761\u8fb9,\u5728\u4f60\u4eec\u53cc\u65b9\u90fd\u505a\u51fa\u6700\u4f18\u51b3\u7b56\u7684\u60c5\u51b5\u4e0b,\u6240\u80fd\u5f97\u5230\u7684\u6109\u60a6\u503c\u662f\u591a\u5c11?**\n\n\u6211\u60f3\u8fd9\u4e0d\u662f\u535a\u5f08\u8bba\u5417(\u60ca\u5413)\n\n\u5176\u5b9e\u5e76\u4e0d\u662f\u5f88\u590d\u6742\n\n\u53cc\u65b9\u6700\u4f18\u7684\u610f\u601d\u5927\u6982\u5c31\u662f:\u5982\u679c\u5176\u4e2d\u4e00\u65b9\u7684\u64cd\u4f5c\u4e0d\u7b26\u5408\u8fd9\u4e2a\u6b65\u9aa4,\u90a3\u4e48\u53e6\u4e00\u65b9\u603b\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u6b65\u9aa4,\u4f7f\u5f97\u7ed3\u679c\u66f4\u52a0\u504f\u5411\u81ea\u5df1\u7684\u4e00\u65b9\n\n~~\u4f3c\u4e4e\u6709\u79cd\u547d\u4e2d\u6ce8\u5b9a\u7684\u611f\u89c9~~\n\n\n\u63a5\u4e0b\u6765\u5f00\u59cb\u89e3\u9898\u5427\n\n**\u72b6\u6001\u8bbe\u4e3a$f[k][i]$(0\u2264k\u2264K)**,\n\n\u8868\u793aBessie\u4ecei\u53f7\u8282\u70b9\u51fa\u53d1,\u5728k\u6b21\u5931\u8bef\u4e0b\u80fd\u591f\u5f97\u5230\u7684\u6700\u4f18\u503c\n\n\n\u56e0\u4e3aBessie\u4e00\u5b9a\u4f1a\u51b2\u5230n\u53f7\u8282\u70b9,\u6240\u4ee5\u6211\u4eec**\u4ee5$f[0][n]=0$\u4f5c\u4e3a\u5f00\u59cb\u72b6\u6001**\n\n\n\u8003\u8651$f[k][i]$\u7684\u8f6c\u79fb,\u5f53\u524d\u53ea\u53ef\u80fd\u6709\u4e24\u79cd\u51b3\u7b56:\n\n1.Bessie\u9009\u62e9\u6700\u4f18\u51b3\u7b56:\u6b64\u65f6\u5b83\u5e94\u8be5\u662f\u4ece$f[k][v]$(v\u4e3a\u4ee5u\u5f00\u59cb\u7684\u8fb9\u6307\u5411\u7684\u7ed3\u70b9)\u4e2d\u9009\u62e9\u4e00\u4e2a\u6700\u5927\u503c,\u7136\u540e\u9009\u62e9\u90a3\u4e2a\u65b9\u5411;\u5982\u679c\u5b83\u4e0d\u9009\u62e9\u90a3\u4e2a\u65b9\u5411\u7684\u8bdd,\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e4b\u540e\u7684k\u6b21\u4fee\u6539\u4f7f\u5f97\u5b83\u8fbe\u4e0d\u5230\u6bd4\u5f53\u524d\u66f4\u5927\u7684\u6109\u60a6\u503c;\u5373$a=max({f[k][v]})$\n\n2.\u6211\u4eec\u9009\u62e9\u6700\u4f18\u51b3\u7b56(\u5373\u8ba9Bessie\u8d70\u5411\u6109\u60a6\u503c\u6700\u5c0f\u7684\u9053\u8def),\u90a3\u4e48\u6211\u4eec\u80af\u5b9a\u4f1a\u4ece\n\nf[k-1][v](\u5df2\u7ecf\u7528\u4e86\u4e00\u6b21\u673a\u4f1a\u4e86)\u4e2d\u9009\u62e9\u4e00\u4e2a\u6700\u5c0f\u503c,\u7136\u540e\u8ba9Bessie\u8d70\u4e0a\u90a3\u6761\u4e0d\u5f52\u8def...\u5373$if(k>0)b=min({f[k-1][v]})$\n\n\u8fd9\u4e24\u79cd\u51b3\u7b56\u7684\u7ed3\u679c\u5e94\u8be5\u53d6\u6700\u5c0f\u503c,\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4ece\u4ec0\u4e48\u65f6\u5019\u8ba9BEssis\u6ed1\u7a3dw\n\n$f[k][u]=min(a,b)$\n\n\n**\u6700\u540e\u7b54\u6848\u5728$f[K][1]$**\n\n\u6700\u540e\u6ce8\u610f\u5f00long long\n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<queue>\n#define RG register\nusing namespace std;\ntypedef long long ll;\nconst int N=50010;\nconst int M=150010;\nconst ll inf=((1ll*1)<<60);\nll n,m,k;\nll head[N],to[M],nxt[M],val[M],cnt;\nll f[11][N];\nll d[N],x[N];\nbool vis[N];\nqueue<ll>Q;\ninline void add(ll u,ll v,ll w){\n    to[++cnt]=v;\n    val[cnt]=w;\n    nxt[cnt]=head[u];\n    head[u]=cnt;\n}\n\nll dfs_memory(ll u,ll s){//\u8bb0\u5fc6\u5316\u641c\u7d22(\u6b63\u63a8\u516c\u5f0f\u592a\u8fc7\u590d\u6742)\n    if(u==n)return 0;\n    if(f[s][u])return f[s][u];\n    RG ll maxn=0,minn=inf,v;\n    for(RG int i=head[u];i;i=nxt[i]){//\u7b2c\u4e00\u79cd\u60c5\u51b5\n        v=to[i];\n        maxn=max(maxn,dfs_memory(v,s)+val[i]);\n    }\n    if(s)\n        for(RG int i=head[u];i;i=nxt[i]){//\u7b2c\u4e8c\u79cd\u60c5\u51b5\n            v=to[i];\n            minn=min(minn,dfs_memory(v,s-1)+val[i]);\n        }\n    if(!s)f[s][u]=maxn;\n    else f[s][u]=min(maxn,minn);\n    //printf(\"f[%d][%d]=%d\\n\",s,u,f[s][u]);\n    return f[s][u];\n}\n\nint main()\n{\n    scanf(\"%lld%lld%lld\",&n,&m,&k);\n    for(RG ll i=1,u,v,w;i<=m;i++){\n        scanf(\"%lld%lld%lld\",&u,&v,&w);\n        add(u,v,w);\n    }\n    printf(\"%lld\\n\",dfs_memory(1,k));\n    return 0;\n}\n```",
        "postTime": 1514790953,
        "uid": 47641,
        "name": "fdfdf",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2991 \u3010[USACO10OPEN]\u6c34\u6ed1\u68afWater Slides\u3011"
    },
    {
        "content": "\u4e3b\u8981\u662f\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nlong long cnt,s[150001][3],o[50005],t[50005][11],m,n,k;\nvoid jia(int a,int b,int c)\n{\n    cnt++;\n    s[cnt][0]=b;\n    s[cnt][1]=c;\n    s[cnt][2]=o[a];\n    o[a]=cnt;//\u90bb\u63a5\u94fe\u8868\n}\nlong long dfs(long long num,long long k)\n{\n    if(t[num][k]!=0)//\u8bb0\u5fc6\u5316\u641c\u7d22\n    return t[num][k];\n    long long a=o[num];\n    while(a!=-1)\n    {\n        long long v=0;\n        v+=dfs(s[a][0],k)+s[a][1];\n        if(v>t[num][k])\n        t[num][k]=v;\n        a=s[a][2];\n    }\n    if(k>0)\n    {\n        a=o[num];\n        while(a!=-1)\n        {\n            long long v=dfs(s[a][0],k-1)+s[a][1];\n            if(v<t[num][k])\n            t[num][k]=v;\n            a=s[a][2];\n        }\n    }\n    return t[num][k];\n}\nint main()\n{\n    int i,j,k,a,b,c;\n    cin>>n>>m>>k;\n    memset(o,-1,sizeof(o));\n    for(i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&a,&b,&c);\n        jia(a,b,c);\n    }\n    dfs(1,k);\n    cout<<t[1][k];\n}\n```",
        "postTime": 1479188069,
        "uid": 24805,
        "name": "luaddict",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2991 \u3010[USACO10OPEN]\u6c34\u6ed1\u68afWater Slides\u3011"
    },
    {
        "content": "\u9898\u76ee\u89e3\u91ca\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u4f60\u9700\u8981\u9009\u62e9\u4e00\u6761\u8def\u5f84\u4ece1\u8d70\u5230v\uff0c\u5176\u4e2d\u5fc5\u987b\u6709k\u6761\u8fb9\u4f1a\u5931\u8bef\uff0c\u5373\u9009\u62e9\u5f53\u524d\u80fd\u9009\u62e9\u6700\u5c0f\u7684\u8fb9\uff0c\u6c42\u5728\u6b64\u6761\u4ef6\u4e0b\u7684\u6700\u5927\u8ddd\u79bb\u3002\n\n\u8003\u8651dp\uff0c\u8bbe $dp[i][j]$ \u8868\u793ai\u6b21\u5931\u8bef\u7684\u60c5\u51b5\u4e0b\u4ecej\u70b9\u5230n\u70b9\u7684\u6700\u5927\u8ddd\u79bb\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u72b6\u6001\u8f6c\u79fb\uff0c\u5e94\u4ece\u7ec8\u70b9\u5411\u8d77\u70b9\u8f6c\u79fb\uff1a\n# 1  \u5f53\u524d\u70b9\u5931\u8bef\n $dp[i][j]=min(dp[i-1][v]+link)$ \u5176\u4e2dv\u8868\u793a\u5f53\u524d\u70b9\u7684\u4e0b\u4e00\u4e2a\u70b9\uff0clink\u4e3a\u4e24\u70b9\u4e4b\u95f4\u7684\u8fb9\n# 2 \u5f53\u524d\u70b9\u4e0d\u5931\u8bef\n $dp[i][j]=min(dp[i][v]+link)$ ,\u5176\u4e2dv\u4e0elink\u7684\u542b\u4e49\u540c\u4e0a\n \n \u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u5c31\u5f88\u8f7b\u677e\u7684\u89e3\u51b3\u4e86\uff0c\u7531\u4e8e\u662f\u56fe\u4e0a\u7684dp\uff0c\u6240\u4ee5\u4e0d\u9009\u62e9\u76f4\u63a5\u9012\u63a8\uff0c\u7528\u8bb0\u641c\u6765\u5b8c\u6210\u3002\n \n\u6700\u540e\u7684\u7b54\u6848\u5373\u4e3a $dp[k][1]$ \n\u4ee5\u4e0b\u662f\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nconst int N = 1e6 + 5;\nint head[N], ver[N], nxt[N], cnt;\nll link[N];\nvoid add(int x,int y,ll z)\n{\n    nxt[++cnt] = head[x];\n    head[x] = cnt;\n    ver[cnt] = y;\n    link[cnt] = z;\n}\nll dp[15][N];\nll dfs(int k,int now)\n{\n    if(dp[k][now])\n        return dp[k][now];\n    for (int i = head[now]; i;i=nxt[i])\n    {\n        int v0 = ver[i];\n        dp[k][now] = max(dp[k][now], dfs(k, v0) + link[i]);\n    }\n    if(k)\n        for (int i = head[now]; i;i=nxt[i])\n        {\n            int v0=ver[i];\n            dp[k][now] = min(dp[k][now], dfs(k - 1, v0) + link[i]);\n        }\n    return dp[k][now];\n}\nint main()\n{\n    int n, m, k;\n    scanf(\"%d%d%d\", &n, &m, &k);\n    for (int i = 1; i <= m;i++)\n    {\n        int a, b;\n        ll c;\n        scanf(\"%d%d%lld\", &a, &b, &c);\n        add(a, b, c);\n    }\n    printf(\"%lld\\n\", dfs(k, 1));\n}\n```\n",
        "postTime": 1621219399,
        "uid": 278481,
        "name": "Link_Space",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 OF P2991"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u7528 dp \u6765\u89e3\u51b3\u3002\n\n\u8bbe $dp_{c,x}$ \u8868\u793a\u4ece $n$ \u8d70\u5230 $x$\uff0c\u5931\u8bef $c$ \u6b21\u7684\u6700\u5927\u5f00\u5fc3\u503c\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u9700\u8981\u8003\u8651\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- \u5931\u8bef\n\n\u6b64\u65f6\u5e94\u9009\u62e9\u6700\u4f18\u7b56\u7565\uff0c\u5373 $dp_{c,x}=\\max \\ (dp_{c-1,y}+edge_{x,y})$\u3002\n\n- \u4e0d\u5931\u8bef\n\n\u6b64\u65f6\u5e94\u9009\u62e9\u6700\u52a3\u7b56\u7565\uff0c\u5373 $dp_{c,x}=\\min \\ (dp_{c,y}+edge_{x,y})$\u3002\n\n## AC Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll N=5e4+1,M=1e5+5e4+1;\nll n,m,val,tot,ver[M],edge[M],nxt[M],head[N],f[11][N];\nvoid add(ll x,ll y,ll z)\n{\n\tver[++tot]=y;\n\tedge[tot]=z;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n}\nll dp(ll c,ll x)\n{\n\tif(f[c][x]) return f[c][x];\n\tfor(ll i=head[x];i;i=nxt[i])\n\t{\n\t\tll y=ver[i];     \n\t    f[c][x]=max(f[c][x],dp(c,y)+edge[i]);\n\t\t//if(c) f[c][x]=min(f[c][x],dp(c-1,y)+edge[i]);\n\t}\n\tfor(ll i=head[x];i;i=nxt[i])\n\t{\n\t\tll y=ver[i];     \n\t    //f[c][x]=max(f[c][x],dp(c,y)+edge[i]);\n\t\tif(c) f[c][x]=min(f[c][x],dp(c-1,y)+edge[i]);\n\t}\n\treturn f[c][x];\n}\nint main()\n{\n\tscanf(\"%lld%lld%lld\",&n,&m,&val);\n\tfor(ll i=1;i<=m;i++)\n\t{\n\t\tll x,y,z;\n\t\tscanf(\"%lld%lld%lld\",&x,&y,&z);\n\t\tadd(x,y,z);\n\t}\n\tf[0][n]=0;\n\tprintf(\"%lld\",dp(val,1));\n\treturn 0;\n}\n```",
        "postTime": 1659447490,
        "uid": 486484,
        "name": "Gaode_Sean",
        "ccfLevel": 6,
        "title": "P2991 \u9898\u89e3"
    }
]