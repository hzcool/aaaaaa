[
    {
        "content": "[\u51fa\u9898\u4eba\u9898\u89e3](http://olddrivertree.blog.uoj.ac/blog/4656)\n\n~~\u4f17\u6240\u5468\u77e5lxl\u662f\u4e2a\u6bd2\u7624\uff0cYnoi\u9053\u9053\u90fd\u662f\u795e\u4ed9\u9898~~\n\n\u9996\u5148\u5f97\u79bb\u6563\u5316\u3002\n\n\u5206\u5757\u540e\uff0c\u9884\u5904\u7406$F_{i,j}$\u8868\u793a\u7b2c$i\\sim j$\u5757\u7684\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\u3002\u6b64\u5904\u8981\u7528\u4e00\u4e2a\u6876\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(n)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\sqrt n)$\u3002\n\n\u7528vector\u6309\u987a\u5e8f\u5b58\u6bcf\u4e2a\u6570\u503c\u6240\u6709\u5143\u7d20\u7684\u51fa\u73b0\u4f4d\u7f6e\u3002\n\n\u518d\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u5728\u76f8\u5e94vector\u91cc\u7684\u4e0b\u6807$p$\u3002\n\n\u4ee5\u4e0a\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u662f$O(n)$\u7684\u3002\n\n\u8003\u8651\u8be2\u95ee\uff0c\u4e2d\u95f4\u7684\u76f4\u63a5\u4f7f\u7528\u9884\u5904\u7406\u51fa\u7684$F_{i,j}$\u7684\u503c\u5373\u53ef\u3002\u8bbe\u5f53\u524d\u7684\u7b54\u6848$ans=F_{i,j}$\u3002\n\n\u8003\u8651\u8fb9\u754c\u7684\u5143\u7d20\u3002\n\n\u663e\u7136\uff0c\u7531\u4e8e\u8fb9\u754c\u7684\u6570\u6700\u591a$2\\sqrt n$\u4e2a\uff0c\u6240\u4ee5\u6700\u591a\u4f7f\u5f97\u7b54\u6848\u589e\u52a0$2\\sqrt n$\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u68c0\u67e5\u8fd9\u4e9b\u8fb9\u89d2\u7684\u5143\u7d20\uff0c\u6bcf\u6b21\u5224\u65ad\u8fd9\u4e9b\u6570\u7684\u51fa\u73b0\u6b21\u6570\u80fd\u5426\u8fbe\u5230$ans+1$\u3002\n\n\u5bf9\u4e8e\u5de6\u8fb9\u7684\u8fb9\u89d2\u5143\u7d20$x$\uff0c\u6211\u4eec\u5728\u76f8\u5e94\u7684vector\u91cc\u627e\u5230\u4e0b\u6807\u4e3a$p_x+ans$\u7684\u5143\u7d20$y$\uff0c\u82e5$y\\leqslant r$\uff0c\u5219\u8bf4\u660e\u8be5\u6570\u503c\u5728\u8303\u56f4\u5185\u6709\u81f3\u5c11$ans+1$\u4e2a\u6570\uff0c\u66b4\u529b```++ans```\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u53f3\u8fb9\u7684\u8fb9\u89d2\u5143\u7d20$x$\uff0c\u6211\u4eec\u5728\u76f8\u5e94\u7684vector\u91cc\u627e\u5230\u4e0b\u6807\u4e3a$p_x-ans$\u7684\u5143\u7d20$y$\uff0c\u82e5$y\\geqslant l$\uff0c\u5219\u8bf4\u660e\u8be5\u6570\u503c\u5728\u8303\u56f4\u5185\u6709\u81f3\u5c11$ans+1$\u4e2a\u6570\uff0c\u66b4\u529b```++ans```\u5373\u53ef\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\u5bf9$O(\\sqrt n)$\u4e2a\u5143\u7d20\u68c0\u67e5\uff0c```++ans```\u7684\u6b21\u6570\u4e3a$O(\\sqrt n)$\u6b21\u3002\u6240\u4ee5\u67e5\u8be2\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(m\\sqrt n)$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6$O((n+m)\\sqrt n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\n\n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<vector>\n#include<cstring>\n#include<algorithm>\n#define siz 708\n#define N 500001\nclass istream{\n\tchar buf[20000003],*s;\n\tpublic:\n\t\tinline istream(){\n#ifndef ONLINE_JUDGE\n\t\t\tfreopen(\"input.txt\",\"r\",stdin);\n#endif\n\t\t\tfread(s=buf,1,20000003,stdin);\n\t\t\tfclose(stdin);\n\t\t}\n\t\tinline istream&operator>>(int&rhs){\n\t\t\tint f=rhs=0;\n\t\t\tfor(;!isdigit(*s);++s)f=*s=='-';\n\t\t\tfor(;isdigit(*s);)\n\t\t\trhs=(rhs<<3)+(rhs<<1)+(*s++^'0');\n\t\t\tif(f)rhs=-rhs;\n\t\t\treturn*this;\n\t\t}\n}cin;\nclass ostream{\n\tchar buf[5000005],*s;\n\tpublic:\n\t\tinline ostream(){s=buf;}\n\t\tinline ostream&operator<<(int rhs){\n\t\t\tif(rhs<0)*s++='-',rhs=-rhs;\n\t\t\tif(rhs==0){\n\t\t\t\t*s++='0';\n\t\t\t\treturn*this;\n\t\t\t}\n\t\t\tstatic int w;\n\t\t\tfor(w=1;w<=rhs;w*=10);\n\t\t\tfor(w/=10;w;w/=10)*s++=(rhs/w)^'0',rhs%=w;\n\t\t\treturn*this;\n\t\t}\n\t\tinline ostream&operator<<(const char&rhs){*s++=rhs;return*this;}\n\t\tinline~ostream(){\n\t\t\tfwrite(buf,1,s-buf,stdout);\n\t\t}\n}cout;\nint n,m,L[710],R[710],bel[N],blocks,mx[710][710],ans,tot[N],wz[N],a[N];\nvoid init(){\n\tblocks=(n-1)/siz+1;\n\tfor(int i=1;i<=blocks;++i)L[i]=R[i-1]+1,R[i]=i*siz;\n\tR[blocks]=n;\n\tfor(int i=1;i<=blocks;++i){\n\t\tmemset(tot,0,sizeof tot);\n\t\tfor(int j=L[i];j<=R[i];++j)bel[j]=i;\n\t\tfor(int j=i;j<=blocks;++j){\n\t\t\tint&F=mx[i][j];\n\t\t\tF=mx[i][j-1];\n\t\t\tfor(int k=L[j];k<=R[j];++k)\n\t\t\tF=std::max(F,++tot[a[k]]);\n\t\t}\n\t}\n}\nstd::vector<int>ls,v[N];\nint main(){\n\tls.push_back(-1);\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;ls.push_back(a[i++]))cin>>a[i];\n\tstd::sort(ls.begin(),ls.end());\n\tls.erase(std::unique(ls.begin(),ls.end()),ls.end());\n\tfor(int i=1;i<=n;++i)v[a[i]=std::lower_bound(ls.begin(),ls.end(),a[i])-ls.begin()].push_back(i),wz[i]=v[a[i]].size()-1;\n\tinit();\n\tmemset(tot,0,sizeof tot);\n\twhile(m--){\n\t\tint l,r;cin>>l>>r;\n\t\tl^=ans,r^=ans;\n\t\tans=0;\n\t\tif(bel[l]==bel[r]){\n\t\t\tfor(int i=l;i<=r;++i)ans=std::max(ans,++tot[a[i]]);\n\t\t\tfor(int i=l;i<=r;++i)tot[a[i]]=0;\n\t\t}else{\n\t\t\tans=mx[bel[l]+1][bel[r]-1];\n\t\t\tfor(int i=l;i<=R[bel[l]];++i){\n\t\t\t\tint it=wz[i];\n\t\t\t\twhile(it+ans<v[a[i]].size()&&v[a[i]][it+ans]<=r)++ans;\n\t\t\t}\n\t\t\tfor(int i=L[bel[r]];i<=r;++i){\n\t\t\t\tint it=wz[i];\n\t\t\t\twhile(it-ans>=0&&v[a[i]][it-ans]>=l)++ans;\n\t\t\t}\n\t\t}\n\t\tcout<<ans<<'\\n';\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1542795169,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5048 \u3010[Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology III\u3011"
    },
    {
        "content": "[_\u4f20\u9001\u95e8_-[Ynoi2019 \u6a21\u62df\u8d5b] Yuno loves sqrt technology III](https://www.luogu.com.cn/problem/P5048)\n## \u524d\u8a00\n\u5c0f\u6e05\u65b0\u5206\u5757\u9898\u3002\n\n\uff08\u611f\u89c9\u672c\u9898\u548c[\u84b2\u516c\u82f1](https://www.luogu.com.cn/problem/P4168)\u7684\u5dee\u522b\u5c31\u53ea\u6709\u84b2\u516c\u82f1\u80fd\u88ab\u66b4\u529b\u8279\uff0c\u8fd9\u9898\u4e0d\u884c\u4e86\uff09\n## \u9898\u610f\n\u533a\u95f4\u4f17\u6570\u51fa\u73b0\u6b21\u6570\uff0c**\u5f3a\u5236\u5728\u7ebf**\u3002\n## \u601d\u8def\n\u770b\u5230 $Ynoi$ \u9898 $+$ \u5f3a\u5236\u5728\u7ebf\u60f3\u5230\u4ec0\u4e48\uff1f\n\n\u8003\u8651\u5206\u5757\u3002\n\n\u9996\u5148\uff0c\u5982\u679c $l\\,r$ \u5728\u4e00\u4e2a\u5757\u5185\uff0c\u5219\u76f4\u63a5\u66b4\u529b\uff0c\u8fd9\u90e8\u5206\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m\\sqrt n)$.\n\n\u5bf9\u4e8e\u6574\u5757\u90e8\u5206\uff0c\u6211\u4eec\u66b4\u529b\u9884\u5904\u7406 $f_{bl,br}$ \u4ee3\u8868\u7b2c $bl$ \u4e2a\u5757\u4e0e\u7b2c $br$ \u4e2a\u5757\u5185\u7684\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\u3002\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\u4e3a\u5bf9\u4e8e\u6bcf\u4e2a $bl$ \u66b4\u529b\u8f6c\u79fb\u5230\u6240\u6709 $br$\uff0c\u5728\u4e2d\u9014\u8bb0\u5f55 $f_{bl,br}$\uff0c\u6b64\u5904\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt n+m)$\n\n\u5bf9\u4e8e\u6563\u5757\u90e8\u5206\uff0c\u6211\u4eec\u5957\u8def\u5730\u5bf9\u4e8e\u6bcf\u4e2a\u6570 $x$ \u7ef4\u62a4\u4e00\u4e2a $vector$ \u4fdd\u5b58\u4e3a $x$ \u7684\u6570\u7684\u4e0b\u6807\uff0c\u8bb0 $at_i$ \u4e3a\u7b2c $i$ \u4e2a\u6570\u5728\u7b2c $a_i$ \u4e2a $vector$ \uff08\u8bb0\u4f5c $in_{a_i}$\uff09\u4e2d\u7684\u4e0b\u6807\u3002\n\n\u5bf9\u4e8e\u5de6\u8fb9\u7684\u6563\u5757\u4e2d\u7684\u6bcf\u4e2a\u6570 $a_i$\uff0c\u627e\u5230\u6700\u5927\u7684 $ans$ \u6ee1\u8db3 ${in_{a_i}}_{at_i+ans}\\le r$\uff0c\u540c\u7406\uff0c\u53f3\u8fb9\u6563\u5757\u4e2d\u7684\u6bcf\u4e2a\u6570\u627e\u5230 $ans$ \u6ee1\u8db3 ${in_{a_i}}_{at_i-ans}\\ge l$\uff0c\u8fd9\u90e8\u5206\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\sqrt n)$.\n\n\u5bf9\u4e8e\u4e00\u6b21\u8be2\u95ee\uff0c\u5c06 $ans$ \u5148\u8bbe\u4e3a $f_{bl+1,br-1}$\uff0c\u518d\u66b4\u529b\u8df3\u5de6\u53f3\u6563\u5757\uff0c\u6ce8\u610f\u4e0d\u8981\u6570\u7ec4\u8d8a\u754c\u3002\n\n\u5bf9\u4e8e $a_i$ \u8f83\u5927\uff0c\u5148\u79bb\u6563\u5316\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5f3a\u5236\u5728\u7ebf\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+m)\\sqrt n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n~~\u4ee3\u7801\u6ca1\u52a0\u5f3a\u5236\u5728\u7ebf\uff0c\u4e0d\u8fc7\u4e5f\u6ca1\u5173\u7cfb\uff0c\u8fd9\u4e2a\u5e94\u8be5\u90fd\u4f1a\u81ea\u5df1\u52a0~~\n\n$Code:$\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=5e5+10,block=720;\nint a[N],lsh[N],at[N],belong[N],cnt[N],f[block][block],n,m,last;\nvector<int>in[N];\nstruct Block{\n\tint l,r;\n}b[block];\ninline int ask(int l,int r){\n\tint bl=belong[l],br=belong[r],ans=0;\n\tif(bl==br){\n\t\tfor(int i=l;i<=r;i++){\n\t\t\tans=max(ans,++cnt[a[i]]);\n\t\t}\n\t\tfor(int i=l;i<=r;i++){\n\t\t\tcnt[a[i]]=0;\n\t\t}\n\t}else{\n\t\tans=f[bl+1][br-1];\n\t\tfor(int i=l;i<=b[bl].r;i++){\n\t\t\tfor(int pos=at[i];pos+ans<in[a[i]].size()&&in[a[i]][pos+ans]<=r;ans++); \n\t\t}\n\t\tfor(int i=b[br].l;i<=r;i++){\n\t\t\tfor(int pos=at[i];pos-ans>=0&&in[a[i]][pos-ans]>=l;ans++); \n\t\t}\n\t}\n\treturn ans;\n}\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=lsh[i]=read();\n\t}\n\tsort(lsh+1,lsh+n+1);\n\tint sz=unique(lsh+1,lsh+n+1)-lsh;\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=lower_bound(lsh+1,lsh+sz,a[i])-lsh;\n\t\tin[a[i]].push_back(i);\n\t\tat[i]=in[a[i]].size()-1;\n\t}\n\tint c=0;\n\tfor(int i=1;i<=n;i+=block){\n\t\tc++;\n\t\tb[c].l=i;\n\t\tb[c].r=min(i+block-1,n);\n\t}\n\tfor(int i=1;i<=c;i++){\n\t\tint ans=0;\n\t\tfor(int j=b[i].l;j<=b[i].r;j++){\n\t\t\tbelong[j]=i;\n\t\t}\n\t\tfor(int j=i;j<=c;j++){\n\t\t\tfor(int k=b[j].l;k<=b[j].r;k++){\n\t\t\t\tans=max(ans,++cnt[a[k]]);\n\t\t\t}\n\t\t\tf[i][j]=ans;\n\t\t}\n\t\tfor(int j=i;j<=c;j++){\n\t\t\tfor(int k=b[j].l;k<=b[j].r;k++){\n\t\t\t\tcnt[a[k]]=0;\n\t\t\t}\n\t\t}\n\t}\n\twhile(m--){\n\t\tint l=read(),r=read();\n\t\twrite(ask(l,r));\n\t}\n    return 0;\n}\n/*\nTime:5.02s\nMemory:32.73MB\n*/\n```\n\u7b2c $8$ \u9053 $Ynoi$\uff0c\u7b2c $2$ \u9053 $\\textcolor{#0E1D69}{Ynoi}$ \uff0c\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u3002\n\n\u5e0c\u671b\u5728\u4e0b\u4e00\u9053 $Ynoi$ \u89c1\u5230\u4f60\uff0c\u518d\u89c1 $qwq$~",
        "postTime": 1613114689,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5048 \u3010[Ynoi2019 \u6a21\u62df\u8d5b] Yuno loves sqrt technology III\u3011"
    },
    {
        "content": "\u9898\u76ee\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\uff0c\u548c $m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u4e2d**\u4f17\u6570**\u6240\u51fa\u73b0\u7684\u6b21\u6570\u3002\u4f17\u6570\u5c31\u662f\u51fa\u73b0\u6700\u591a\u6b21\u7684\u6570\u5b57\u3002\n\n\u672c\u9898**\u5f3a\u5236\u5728\u7ebf**\uff0c\u6240\u4f7f\u7528\u7684\u63aa\u65bd\u5c31\u662f\u5c06\u8fd9\u6b21\u7684\u8f93\u5165\u5f02\u6216\u4e0a\u4e0a\u6b21\u7684\u7b54\u6848\u3002\u770b\u4e00\u773c\u6570\u636e\u8303\u56f4 $1 \\le n,m \\le 5 \\times 10^5$\uff0c\u56e0\u4e3a$\\sqrt 500000$ \u2248 $707$\uff0c\u6211\u4eec\u8003\u8651\u4f7f\u7528\u590d\u6742\u5ea6\u4e3a $O(\\sqrt n)$ \u7684\u5206\u5757\u7b97\u6cd5\u3002\u672c\u4eba\u8ba4\u4e3a\u6b64\u9898\u548c [P4168 [Violet]\u84b2\u516c\u82f1](https://www.luogu.com.cn/problem/P4168) \u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\u3002\n\n\u5206\u5757\u7684\u8001\u89c4\u77e9\uff0c\u5148\u79bb\u6563\u5316\uff0c\u521d\u59cb\u5316\u5757\u7684\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u548c\u7ef4\u62a4\u7684\u6570\u7ec4\u3002\n\n\u6211\u4eec\u4f7f\u7528 $Query_{i,j}$ \u8868\u793a\u533a\u95f4 $[i, j]$ \u4e2d\u4f17\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3002\u7528\u4e00\u4e2a $vector$ \u6765\u7ef4\u62a4\u4e00\u4e2a\u6570\u51fa\u73b0\u7684\u4f4d\u7f6e\u5e76\u4e14\u7528\u4e00\u4e2a\u6570\u7ec4 $ax$ \u5b58\u8fd9\u4e2a\u6570\u5bf9\u5e94 $vector$ \u91cc\u7684\u4f4d\u7f6e\u3002\n\n\u5bf9\u4e8e\u5206\u5757\u67e5\u8be2\u64cd\u4f5c\uff1a\n\n- \u5728\u76f8\u540c\u5757\u5185\u7684\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u7528\u5206\u5757\u66b4\u529b\u6c42\u89e3\u5c31\u884c\u3002\n\n- \u8003\u8651\u5176\u4ed6\u60c5\u51b5\uff0c\u5728\u5de6\u533a\u95f4\u8303\u56f4\u5185\u7684\u6570\u3002\u6211\u4eec\u6c42\u51fa\u4efb\u610f\u4e00\u4e2a\u6570 $i$ \u8981\u5bfb\u627e\u5728 $vector[ax[i]+res]$ \u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6570\u5b57\u3002\u5982\u679c\u8fd9\u4e2a\u6570\u5b57\u5c0f\u4e8e\u7b49\u4e8e $r$\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u5f80\u53f3\u79fb\uff0c\u6bcf\u6b21\u7b54\u6848\u52a0\u4e00\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230\u4f17\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n- \u5728\u53f3\u8303\u56f4\u5185\u7684\u6570\uff0c\u6211\u4eec\u6c42\u51fa\u4efb\u610f\u4e00\u4e2a\u6570 $i$ \u8981\u5bfb\u627e\u5728 $vector[ax[i]-res]$ \u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6570\u5b57\u3002\u5982\u679c\u8fd9\u4e2a\u6570\u5b57\u5927\u4e8e\u7b49\u4e8e $l$\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u5f80\u5de6\u79fb\uff0c\u6bcf\u6b21\u7b54\u6848\u52a0\u4e00\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230\u4f17\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3002\u8fd9\u4e2a\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u5927\u7ea6\u4e3a $O(\\sqrt n)$\u3002\n\n\u8fd9\u6837\u4e0b\u6765\uff0c\u603b\u590d\u6742\u5ea6\u5927\u7ea6\u4e3a $O(n \\sqrt n)$\u3002\n\n\u6ce8\u610f\u4e8b\u9879\uff1a\n\n- \u8fd9\u9898\u7ef4\u62a4\u7684 $Query$ \u6570\u7ec4\u9700\u8981\u5f00\u5230 $\\sqrt n$ \u90a3\u4e48\u5927\uff0c\u5927\u6982 $709$ \u5c31\u591f\u3002\n\n- \u8fd9\u9898\u867d\u7136\u6211\u6ca1\u6709\u600e\u4e48\u5361\uff0c\u4f46\u662f\u6709\u53ef\u80fd\u9700\u8981\u5361\u5e38\uff0c\u5efa\u8bae\u4f7f\u7528\u5feb\u8bfb\u6216\u8005cin\u4f18\u5316\u3002\n\n- \u521d\u59cb\u5316\u4e00\u4e2a\u6bcf\u4e2a\u7aef\u70b9\u6240\u5728\u7684\u4f4d\u7f6e\u7684\u6570\u7ec4\u4f1a\u6bd4\u51fd\u6570\u66f4\u5feb\u3002\n\n\u4ee3\u7801\uff1a\n\n```\n/* by JS\n * P5048 [Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology III */\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAXN = 500005;\n\nint n, m, a[MAXN], block, A[MAXN], sum, cnt[MAXN], Query[709][709], L[709], R[709], lans, ax[MAXN];\n\nnamespace IO {\n    const int SIZE = (1 << 20) + 1;\n    char ibuf[SIZE], *iS, *iT, obuf[SIZE], *oS = obuf, *oT = obuf + SIZE - 1;\n    char _st[55];\n    int _qr = 0;\n\n    inline char gc() {\n        return (iS == iT ? iT = (iS = ibuf) + fread(ibuf, 1, SIZE, stdin), (iS == iT ? EOF : *iS++) : *iS++);\n    }\n\n    inline void qread() {}\n\n    template<class T1, class ...T2>\n    inline void qread(T1 &IEE, T2 &... ls) {\n        register T1 __ = 0, ___ = 1;\n        register char ch;\n        while (!isdigit(ch = gc())) ___ = (ch == '-') ? -___ : ___;\n        do {\n            __ = (__ << 1) + (__ << 3) + (ch ^ 48);\n        } while (isdigit(ch = gc()));\n        __ *= ___;\n        IEE = __;\n        qread(ls...);\n        return;\n    }\n\n    inline void flush() {\n        fwrite(obuf, 1, oS - obuf, stdout);\n        oS = obuf;\n        return;\n    }\n\n    inline void putc_(char _x) {\n        *oS++ = _x;\n        if (oS == oT) flush();\n    }\n\n    inline void qwrite() {}\n\n    template<class T1, class ...T2>\n    inline void qwrite(T1 IEE, T2... ls) {\n        if (!IEE) putc_('0');\n        if (IEE < 0) putc_('-'), IEE = -IEE;\n        while (IEE) _st[++_qr] = IEE % 10 + '0', IEE /= 10;\n        while (_qr) putc_(_st[_qr--]);\n        qwrite(ls...);\n        return;\n    }\n\n    struct Flusher_ {\n        ~Flusher_() { flush(); }\n    } io_flusher;\n}\n\nusing namespace IO; //\u5feb\u8bfb\n\n/* a\uff1a\u539f\u5e8f\u5217\n * n, m\uff1a\u9898\u76ee\u4e2d\u7684\u6570\n * block\uff1a\u5757\u957f\n * sum\uff1a\u5757\u6570\n * L[i]\uff1ai\u8fd9\u5757\u5de6\u7aef\u70b9\u7684\u4f4d\u7f6e\n * R[i]\uff1ai\u8fd9\u5757\u53f3\u7aef\u70b9\u7684\u4f4d\u7f6e */\n\ninline int Max(const int &x, const int &y) { return x > y ? x : y; } //\u624b\u5199max\u66f4\u5feb\n\ninline void write(register int x) {\n    if (x == 0) putchar('0');\n    else {\n        register int st[33], tp = 0;\n        while (st[++tp] = x % 10, x /= 10);\n        while (putchar(st[tp] ^ 48), --tp);\n    }\n    putchar('\\n');\n} //\u5feb\u8f93\n\ninline int getposition(register int i) { return (i - 1) / block + 1; } // \u6240\u5728\u7684\u5757\n\nvector<int> vec[MAXN];\n\ninline int query(register int l, register int r) {\n    int res = 0;\n    int Ll = getposition(l), Rr = getposition(r);\n    if (Ll == Rr) {\n        for (register int i = l; i <= r; ++i) {\n            cnt[a[i]] = 0;\n        }\n        for (register int i = l; i <= r; ++i) {\n            cnt[a[i]]++;\n            res = Max(res, cnt[a[i]]);\n        }\n    } else {\n        res = Query[Ll + 1][Rr - 1];\n        for (register int i = l; i <= R[Ll]; ++i) {\n            register int p = ax[i];\n            register int v = p + res;\n            while (v < vec[a[i]].size() && vec[a[i]][v] <= r) {\n                res++;\n                v++;\n            }\n        }\n        for (register int i = L[Rr]; i <= r; ++i) {\n            register int p = ax[i];\n            register int v = p - res;\n            while (v >= 0 && vec[a[i]][v] >= l) {\n                res++;\n                v--;\n            }\n        }\n    }\n    return res;\n}\n\ninline void initblocks() {\n    for (register int i = 1; i <= sum; ++i) {\n        L[i] = R[i - 1] + 1;\n        R[i] = i * block;\n    }\n    R[sum] = n;\n    for (register int i = 1; i <= sum; ++i) {\n        memset(cnt, 0, sizeof(cnt));\n        for (register int j = i; j <= sum; ++j) {\n            Query[i][j] = Query[i][j - 1]; // l\u5230r-1\u533a\u95f4\u7684\u7b54\u6848\n            for (register int k = L[j]; k <= R[j]; ++k) {\n                cnt[a[k]]++;\n                Query[i][j] = Max(Query[i][j], cnt[a[k]]);\n            }\n        }\n    }\n}\n\ninline void solve() {\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    qread(n, m);\n    block = 800; // \u53ef\u4ee5\u8bbe\u5757\u957f\u4e3a\u4e00\u4e2a\u63a5\u8fd1sqrt(500000)\u7684\u6570\n    sum = getposition(n);\n    for (register int i = 1; i <= n; ++i) {\n        qread(a[i]);\n        A[i] = a[i];\n    }\n    sort(A + 1, A + n + 1);\n    register int uni = unique(A + 1, A + n + 1) - A - 1;\n    for (register int i = 1; i <= n; ++i) { // \u79bb\u6563\u5316\n        a[i] = lower_bound(A + 1, A + uni + 1, a[i]) - A;\n    }\n    for (register int i = 1; i <= n; ++i) {\n        vec[a[i]].emplace_back(i);\n        ax[i] = vec[a[i]].size() - 1;\n    }\n    initblocks();\n    while (m--) {\n        register int l, r;\n        qread(l, r);\n        l ^= lans;\n        r ^= lans;\n        register int ans = query(l, r);\n        write(ans);\n        lans = ans;\n    }\n}\n\nint main() {\n    solve();\n    return 0;\n}\n```\n",
        "postTime": 1604059062,
        "uid": 298325,
        "name": "Marshadow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5048 \u3010[Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology III\u3011"
    },
    {
        "content": "~~\u4e3a\u4ec0\u4e48\u6211\u611f\u89c9\u8fd9\u9898\u96be\u5ea6\u865a\u9ad8\u554a\u2026\u2026~~\n\n\u533a\u95f4\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\u2026\n\n~~\u8ba1\u7b97\u5668\u7b97\u4e00\u4e0b~~ $\\sqrt 500000 = 708$\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u9898\u7684\u7a81\u7834\u53e3\uff1f\n\n\u8003\u8651\u5206\u5757\u51fa\u6765[L,R]\u5757\u7684\u4f17\u6570\u51fa\u73b0\u4e2a\u6570 \u7528 $\\texttt{mx[L][R]}$ \u7ef4\u62a4\u5c31\u53ef\u4ee5\u4e86\n\n\u6bcf\u6b21\u8003\u8651\u4e00\u4e2aL\u2026 \u7136\u540eR\u6307\u9488\u4e00\u76f4\u5411\u53f3\u79fb\u4e0d\u65ad\u7684\u66f4\u65b0\u5230N \u8fd9\u6837\u5b50\u505a\u7684\u590d\u6742\u5ea6\u56e0\u4e3a\u6700\u591a\u6709 $\\sqrt n$ \u4e2a\u5757 \u6240\u4ee5\u590d\u6742\u5ea6\u5927\u6982\u662f $n\\sqrt n$ \u5b9e\u9645\u4e0a\u8fd8\u5c11\u4e00\u70b9\u2026\n\n\u7136\u540e\u6574\u5757\u7684\u60f3\u597d\u4e86\u2026\u2026\u5355\u72ec\u7684\u600e\u4e48\u5904\u7406\uff1f\n\n\u5206\u7c7b\u8ba8\u8bba\n\n1 $\\texttt{L}$\u548c$\\texttt{R}$ \u6240\u5728\u7684\u5757\u76f8\u540c \u90a3\u4e48\u5206\u5757\u7684\u5e38\u89c4\u66b4\u529b\u64cd\u4f5c\uff08\u8bb0\u5f97\u6e05\u7a7a\u2026\uff09\u590d\u6742\u5ea6\u4fdd\u8bc1\u662f $\\sqrt n$\u7684\n\n\n2 \u4e0d\u5728\u4e00\u4e2a\u5757\u7684\u8bdd \u8003\u8651\u7528\u4e00\u79cd\u5176\u4ed6\u65b9\u6cd5\u2026\u8bb0\u5f55\u4e00\u4e2a$\\texttt{v[i]}$\u5b58\u7684\u662f\u6bcf\u4e2a \u6570\u503c i \u7684\u51fa\u73b0\u4f4d\u7f6e \u518d\u8bb0\u5f55\u4e00\u4e2a $\\texttt{pos[i]}$ \u8868\u793a i \u8fd9\u4e2a\u6570\u503c\u5728\u5e8f\u5217\u91cc\u662f\u7b2c\u51e0\u6b21\u51fa\u73b0\u2026\uff08\u4e3b\u8981\u8fd8\u662f\u65b9\u4fbfvector\u7684\u64cd\u4f5c\u2026\uff09\n\u60a8\u5df2\u7ecf\u7edf\u8ba1\u51fa\u6765\u4e86 $\\texttt{L-R}$ \u7684\u6700\u591a\u6b21\u6570 \u80af\u5b9a\u662f\u4fdd\u5e95 $\\texttt{mx[L][R]}$ \u4e86 \u6839\u636e\u8fd9\u4e2a\u57fa\u7840 \u8fd9\u6837\u6307\u9488\u79fb\u52a8\u5c31\u76f8\u5bf9\u6765\u8bf4\u4fdd\u8bc1\u4e86\u590d\u6742\u5ea6\u2026\u6bcf\u6b21\u4e5f\u662f$\\sqrt n$\u7684\n\n\u8bb2\u4e0b\u5177\u4f53\u64cd\u4f5c \u8bb0\u5f55\u4e86\u8fd9\u4e2a $pos_i$ \u662f i \u5728 $a_i$ \u7b2c\u51e0\u4e2a\u51fa\u73b0 \u7136\u540e $v_{a_i}$\u662f\u8bb0\u5f55\u4e86\u6bcf\u4e2a $a_i$\u7684\u51fa\u73b0\u4f4d\u7f6e \u4e8e\u662f\u5c31\u53ef\u4ee5 \u5728\u5de6\u534a\u533a\u95f4\u7684\u65f6\u5019\u5224\u65ad\u662f\u5426$\\leq \\texttt{R}$ \u5728\u53f3\u534a\u533a\u95f4\u7684\u65f6\u5019\u5224\u65ad\u662f\u5426$\\ge\\texttt{L}$ \u5982\u679c\u6ee1\u8db3\u6761\u4ef6\u5c31\u52a0\u5927 \u5f53\u524d\u7684$\\texttt{ans}$ \u76f4\u5230\u4e0d\u6ee1\u8db3 \u80af\u5b9a\u662f\u6700\u4f18\u7684\u2026\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\nconst int N = 5e5 + 10 ;\nint n , m , a[N] , b[N] , bl[N] , unt = 0 , L[710] , R[710] , mx[710][710] , tot[N] , pos[N] ;\nvector < int > v[N] ;\ninline int query(int l , int r) { int ans = 0 ;\n  if(bl[l] == bl[r]) {\n    for(register int i = l ; i <= r ; i ++) tot[a[i]] = 0 ;\n    for(register int i = l ; i <= r ; i ++) ans = max(ans , ++ tot[a[i]]) ;\n    return ans ;\n  } ans = mx[bl[l] + 1][bl[r] - 1] ;\n  for(register int i = l ; i <= R[bl[l]] ; i ++) {\n    int it = pos[i] ; while(it + ans < v[a[i]].size() && v[a[i]][it + ans] <= r) ++ ans ;\n  }\n  for(register int i = L[bl[r]] ; i <= r ; i ++) {\n    int it = pos[i] ; while(it - ans >= 0 && v[a[i]][it - ans] >= l) ++ ans ;\n  } return ans ;\n}\nsigned main() {\n  // freopen(\"0.in\" , \"r\" , stdin) ;\n  ios :: sync_with_stdio(false) ;\n  cin.tie(0) ;cout.tie(0) ;\n  cin >> n >> m ;\n  for(register int i = 1 ; i <= n ; i ++) { cin >> a[i] ; b[i] = a[i] ; }\n  sort(b + 1 , b + n + 1) ;\n  int len = unique(b + 1 , b + n + 1) - b - 1 ;\n  for(register int i = 1 ; i <= n ; i ++) { a[i] = lower_bound(b + 1 , b + len + 1 , a[i]) - b ; }\n  for(register int i = 1 ; i <= n ; i ++) { v[a[i]].push_back(i) ; pos[i] = v[a[i]].size() ; pos[i] -- ; }\n  int unt = sqrt(n) ;\n  for(register int i = 1 ; i <= n ; i ++) bl[i] = (i - 1) / unt + 1 ;\n  for(register int i = 1 ; i <= bl[n] ; i ++) { L[i] = (i - 1) * unt + 1 ; R[i] = i * unt ; }\n  R[bl[n]] = n ;\n  for(register int i = 1 ; i <= bl[n] ; i ++) {\n    memset(tot , 0 , sizeof(tot)) ;\n    for(register int j = i ; j <= bl[n] ; j ++){\n      mx[i][j] = mx[i][j - 1] ;\n      for(register int k = L[j] ; k <= R[j] ; k ++) mx[i][j] = max(mx[i][j] , ++ tot[a[k]]) ;\n    }\n  }\n  int lastans = 0 ;\n  for(register int i = 1 ; i <= m ; i ++) {\n    int l , r ; cin >> l >> r ;\n    l ^= lastans ; r ^= lastans ;\n    if(l > r) swap(l , r) ;\n    cout << (lastans = query(l , r)) << '\\n' ;\n  }\n  return 0 ;\n}\n```",
        "postTime": 1573544031,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5048 \u3010[Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology III\u3011"
    },
    {
        "content": "## \u9898\u76ee\u63cf\u8ff0\n\n\u7ed9\u4f60\u4e00\u4e2a\u957f\u4e3a *n* \u7684\u5e8f\u5217 *a*\uff0c*m* \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\u7684\u4f17\u6570\u7684**\u51fa\u73b0\u6b21\u6570**\uff0c**\u5f3a\u5236\u5728\u7ebf**\u3002\n\n## Solution\n\n### An easy problem\n\n\u672c\u6587\u5c06\u4ee5\u4ece[\u6d1b\u8c37 P4168 [Violet]\u84b2\u516c\u82f1](https://www.luogu.com.cn/problem/P4168)\u7684\u8f6c\u6362\u89c6\u89d2\u6765\u89e3\u51b3\u8fd9\u9053\u9898\u3002\u84b2\u516c\u82f1\u8fd9\u9053\u9898\u4e0d\u4ec5\u6570\u636e\u8303\u56f4\u53cb\u597d\uff0c\u9898\u76ee\u80cc\u666f\u4e5f\u4e0d\u9519\u3002\n\n _**\u4ee5\u4e0b\u9ed8\u8ba4\u5757\u5927\u5c0f\u4e3a$\\sqrt n$**_ .\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u57fa\u672c\u7684\u5206\u5757\uff0c\u6c42\u4f17\u6570\u3002\n\n\u5148\u6765\u8ba8\u8bba\u4e00\u4e0b\u84b2\u516c\u82f1\u90a3\u9053\u9898\u662f\u600e\u4e48\u505a\u7684\uff1a\n\n\u9996\u5148\u79bb\u6563\u5316\u3002\n\n\u9884\u5904\u7406\u51fa\u4ece\u7b2c $i$ \u5757\u5230\u7b2c $j$ \u5757\u4e2d\u7684\u4f17\u6570 $zs_{i,j}$ \u3002\u53ef\u4ee5\u679a\u4e3e $i$ ,\u679a\u4e3e $j$ \uff0c\u518d\u679a\u4e3e\u5757\u5185\u5143\u7d20\u5f00\u4e00\u4e2a\u6876\u7edf\u8ba1\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt{n})$ \uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)+O(\\sqrt n\\times \\sqrt n)=O(n)$ \u3002\n\n\u9884\u5904\u7406\u51fa\u7b2c $1$ \u5757\u5230\u7b2c $i$ \u5757\u8fd9\u4e2a\u533a\u95f4$[1,i]$ \u4e2d\u6570\u5b57 $x$ \u51fa\u73b0\u7684\u6b21\u6570 $cnt_{i,x}$ \u3002\u53ef\u4ee5\u679a\u4e3e$i$\u540e\uff0c\u5148\u5c06 $(\\forall x)cnt_{i-1,x}$ \u62f7\u8d1d\u5230 $cnt_{i,x}$ \uff0c\u518d\u7edf\u8ba1\u5f53\u524d\u5757 $i$ \u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\sqrt n\\times (n+\\sqrt n))=O(n\\sqrt n)$ \uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt n)$ \u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee $(l,r)$ \uff0c\u8ba8\u8bba\u5176\u662f\u5426\u5728\u4e00\u4e2a\u5757\u5185\u3002\u82e5\u662f\u540c\u5757\uff0c\u5c31\u4f7f\u7528\u6876\u66b4\u529b\u7edf\u8ba1\u3002\u82e5\u4e0d\u5728\u4e00\u4e2a\u5757\u5185\uff0c\u5219\u5c06\u5176\u62c6\u4e3a\u4e24\u4e2a\u6563\u5757\u548c\u4e00\u4e2a\u6574\u5757\u3002\n\n\u9996\u5148\u7b54\u6848 $ans=zs_{i,j}$ \uff0c\u518d\u5411\u4e24\u8fb9\u62d3\u5c55\uff0c\u770b\u770b\u6563\u5757\u5185\u7684\u6570 $x$ \u662f\u5426\u53ef\u80fd\u6210\u4e3a\u6bd4 $ans$ \u51fa\u73b0\u6b21\u6570\u66f4\u5927\u7684\u6570\u3002\u5177\u4f53\u7684\uff0c\u6574\u5757\u4e2d $x$ \u51fa\u73b0\u7684\u6b21\u6570\u53ef\u4ee5\u7528\u4e4b\u524d\u9884\u5904\u7406\u51fa\u7684 $cnt_{j,x}-cnt_{i-1,x}$ \u8fd9\u79cd\u5f62\u5f0f\u8868\u793a\u3002\u6563\u5757\u4e2d\u7684 $x$ \u4f7f\u7528\u6876\u6765\u7edf\u8ba1\u5373\u53ef\u3002\n\n\u8be2\u95ee\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\sqrt n+2\\times \\sqrt n)=O(\\sqrt n)$ \u3002\n\n### Code\n\n```cpp\n//\u9884\u7f16\u8bd1\u90e8\u5206\u5df2\u7565\u53bb\n#define N 40010\n#define S 300\nint n,m,s,block,L[N],R[N],belong[N],zs[S][S],cnt[N],a[N],f[S][N],sum[N];\nint rys[N];\nint lastans;\nmap<int,int>ys;\nint main()\n{\n\tn=read();m=read();\n\ts=sqrt(n);\n\tblock=n/s;\n\tfor(int i=1;i<=s;i++)\n\t{\n\t\tL[i]=n/s*(i-1)+1;\n\t\tR[i]=n/s*i;\n\t}\n\tR[s]=n;\n\tfor(int i=1;i<=s;i++)\n\t{\n\t\tfor(int j=L[i];j<=R[i];j++)\n\t\t{\n\t\t\tbelong[j]=i;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i];\n\t\tys[a[i]]=0;\n\t}\n\tint rank=1;\n\tfor(map<int,int>::iterator it=ys.begin();it!=ys.end();it++)\n\t{\n\t\trys[rank]=it->first;\n\t\tit->second=rank;\n\t\trank++;\n\t}\n\tfor(int i=1;i<=n;i++) a[i]=ys[a[i]];\n//\tfor(int i=1;i<=n;i++) cout<<a[i]<<endl;\n\tfor(int i=1;i<=s;i++)\n\t{\n\t\tmemset(cnt,0,sizeof(cnt));\n\t\tfor(int j=i;j<=s;j++)\n\t\t{\n\t\t\tzs[i][j]=zs[i][j-1];\n\t\t\tfor(int k=L[j];k<=R[j];k++)\n\t\t\t{\n\t\t\t\tcnt[a[k]]++;\n\t\t\t\tif(cnt[a[k]]>cnt[zs[i][j]] || (cnt[a[k]]==cnt[zs[i][j]]&&a[k]<zs[i][j])) zs[i][j]=a[k];\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=s;i++)\n\t{\n\t\tfor(int j=1;j<=ys.size();j++) f[i][j]=f[i-1][j];\n\t\tfor(int j=L[i];j<=R[i];j++)\n\t\t{\n\t\t\tf[i][a[j]]++;\n\t\t}\n\t}\n\tfor(int t=1,x,y;t<=m;t++)\n\t{\n\t\tcin>>x>>y;\n\t\tx=(x+lastans-1)%n+1;\n\t\ty=(y+lastans-1)%n+1;\n\t\tif(x>y) x^=y^=x^=y;\n\t\tLL ans=0;\n\t\tif(belong[y]-belong[x]<=3)\n\t\t{\n\t\t\tfor(int i=x;i<=y;i++) sum[a[i]]=0;\n\t\t\tfor(int i=x;i<=y;i++)\n\t\t\t{\n\t\t\t\tsum[a[i]]++;\n\t\t\t\tif(sum[a[i]]>sum[ans] || (sum[a[i]]==sum[ans]&&a[i]<ans)) ans=a[i];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans=zs[belong[x]+1][belong[y]-1];\n\t\t\tsum[ans]=0;\n\t\t\tfor(int i=x;i<=R[belong[x]];i++)\n\t\t\t{\n\t\t\t\tsum[a[i]]=0;\n\t\t\t}\n\t\t\tfor(int i=L[belong[y]];i<=y;i++)\n\t\t\t{\n\t\t\t\tsum[a[i]]=0;\n\t\t\t}\n\t\t\tfor(int i=x;i<=R[belong[x]];i++)\n\t\t\t{\n\t\t\t\tsum[a[i]]++;\n\t\t\t\tif(f[belong[y]-1][a[i]]-f[belong[x]][a[i]]+sum[a[i]]>f[belong[y]-1][ans]-f[belong[x]][ans]+sum[ans] || (f[belong[y]-1][a[i]]-f[belong[x]][a[i]]+sum[a[i]]==f[belong[y]-1][ans]-f[belong[x]][ans]+sum[ans]&&a[i]<ans)) ans=a[i];\n\t\t\t}\n\t\t\tfor(int i=L[belong[y]];i<=y;i++)\n\t\t\t{\n\t\t\t\tsum[a[i]]++;\n\t\t\t\tif(f[belong[y]-1][a[i]]-f[belong[x]][a[i]]+sum[a[i]]>f[belong[y]-1][ans]-f[belong[x]][ans]+sum[ans] || (f[belong[y]-1][a[i]]-f[belong[x]][a[i]]+sum[a[i]]==f[belong[y]-1][ans]-f[belong[x]][ans]+sum[ans]&&a[i]<ans)) ans=a[i];\n\t\t\t}\n\t\t}\n\t\tcout<<(lastans=rys[ans])<<endl;\n\t}\n\treturn 0;\n}\n```\n\n### \u56de\u5230\u6b63\u9898\n\n\u84b2\u516c\u82f1\u7684\u6570\u636e\u8303\u56f4\u5341\u5206\u53cb\u597d\uff1a $n\\le 4\\times 10^4,m\\le 10^5$ \u3002\u6240\u4ee5\u6211\u4eec\u5b8c\u5168\u80fd\u591f\u5f00\u4e0b $cnt_{s,n}$ \u3002\n\n\u4f46\u662f[P5048 [Ynoi2019 \u6a21\u62df\u8d5b] Yuno loves sqrt technology III](https://www.luogu.com.cn/problem/P5048)\u7684\u6570\u636e\u8303\u56f4\u5c31\u4e0d\u90a3\u4e48\u53cb\u597d\u4e86\uff1a $n,m\\le 5\\times 10^5$ \u3002\n\n\u8fd9\u4e24\u9053\u9898\u6709\u8bb8\u591a\u7684\u5171\u540c\u70b9\uff1a\u533a\u95f4\u4f17\u6570\uff0c\u65e0\u4fee\u6539\uff0c\u8981\u79bb\u6563\u5316\uff0c\u6570\u636e\u8303\u56f4\u770b\u4e0a\u53bb\u662f\u6839\u53f7\u505a\u6cd5\u7684\u3002\n\n\u4f46\u662f\u4e5f\u6709\u4e00\u4e9b\u4e0d\u540c\u70b9\uff1a\u65e0\u6cd5\u9884\u5904\u7406\u524d\u7f00\u5757\u7684\u6876\uff08\u56e0\u4e3a\u7a7a\u95f4\u5f00\u4e0d\u4e0b\uff09\uff0c\u6c42\u7684\u662f\u4f17\u6570\u51fa\u73b0\u7684\u6b21\u6570\u800c\u975e\u4f17\u6570\u662f\u8c01\uff08\u5176\u5b9e\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u6c42\u51fa\u73b0\u6b21\u6570\u7684\u8bdd\u9700\u8981\u5904\u7406\u7684\u4fe1\u606f\u53ef\u4ee5\u5c11\u4e86\u70b9\uff09\n\n\u65e0\u6cd5\u5f00\u6876\uff0c\u90a3\u4e48\u53ef\u4ee5\u7528\u53e6\u4e00\u79cd\u65b9\u5f0f\u8868\u8fbe\u8fd9\u4e2a\u6876\u5417\uff1f\u53ef\u4ee5\u7684\u3002\n\n*\u9996\u5148\u79bb\u6563\u5316\uff0c\u9884\u5904\u7406 $zs_{i,j}$ \u5c31\u4e0d\u5fc5\u591a\u8d39\u9610\u8ff0\u4e86\u5427*\u3002\n\n\u4f7f\u7528 $n$ \u4e2a $vector$ \u4e2d\u5b58\u653e\u4e0b\u6807\uff0c $vector_{x,i}$ \u8868\u793a\u6570x\u7b2ci\u6b21\u51fa\u73b0\u7684\u4e0b\u6807\u3002\u7531\u4e8e\u662f $vector$ \uff0c\u6240\u4ee5\u603b\u7a7a\u95f4\u4f9d\u7136\u662f $O(n)$ \u7684\u3002\n\n\u518d\u8bb0 $p_i$ \u8868\u793a $i$ \u8fd9\u4f4d\u4e0a\u7684\u6570 $x$ \u5728\u5176 $vector_{x}$ \u4e2d\u5728\u7b2c\u51e0\u4f4d\u3002\n\n\u663e\u7136\u9884\u5904\u7406\u8fd9\u4e2a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n)$ \u7684\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u6211\u4eec\u8fd8\u662f\u7c7b\u4f3c\u4e8e\u4e0a\u9762\u7684\u90a3\u6837\uff0c\u540c\u5757\u66b4\u529b\u7edf\u8ba1\u5373\u53ef\uff1b\n\n\u5426\u5219\u4f9d\u7136\u5c06\u5176\u62c6\u5206\u3002\u9996\u5148 $ans=zs_{i,j}$ *\uff08\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684 $zs_{i,j}$ \u4e0d\u518d\u662f $[i,j]$ \u5757\u5185\u7684\u4f17\u6570\uff0c\u800c\u662f\u5176\u51fa\u73b0\u7684\u6b21\u6570\uff09*\uff0c\u5728\u8003\u8651\u4e24\u8fb9\u7684\u6563\u5757\u4e2d\uff0c\u6570 $x$ \u7684\u51fa\u73b0\u6b21\u6570\u80fd\u5426\u66f4\u65b0 $ans$ \u3002\n\n\u6bd4\u5982\uff0c\u73b0\u5728\u6b63\u5728\u8003\u8651\u5728\u5de6\u4fa7\u6563\u5757\u7684\u4e0b\u6807\u4e3a$i$\u7684\u6570$x$\u80fd\u5426\u66f4\u65b0$ans$\u3002 $p_i$ \u662f$i$\u4e4b\u524d\u6709\u591a\u5c11\u4e2a $x$ \uff0c\u90a3\u4e48\u81f3\u5c11\u8981\u5b58\u5728\u7b2c $ans+p_i$ \u4e2a$x$ \uff0c\u4e14 $ans+p_i$ \u8981\u5728$[l,r]$\u7684\u6570\u636e\u8303\u56f4\u4ee5\u5185\uff0c\u7b54\u6848\u5c31\u53ef\u4ee5\u88ab\u66f4\u65b0\uff0c`ans++`\u3002\n\n\u82e5\u5728\u53f3\u4fa7\u5219\u540c\u7406\u3002\n\n### Code\n\n```c++\n//\u9884\u7f16\u8bd1\u90e8\u5206\u5df2\u7565\u53bb\n#define N 500010\n#define S 800\nint n,m,s,block,L[N],R[N],belong[N],zs[S][S],cnt[N],a[N],sum[N],pos[N];\nvector<int>vec[N];\nint lastans;\nmap<int,int>ys;\nint main()\n{\n//\tfreopen(\"5048.in\",\"r\",stdin);\n//\tfreopen(\"5048-hsh.out\",\"w\",stdout);\n\tn=read();m=read();\n\ts=sqrt(n);\n\tblock=n/s;\n\tfor(int i=1;i<=s;i++)\n\t{\n\t\tL[i]=n/s*(i-1)+1;\n\t\tR[i]=n/s*i;\n\t}\n\tR[s]=n;\n\tfor(int i=1;i<=s;i++)\n\t{\n\t\tfor(int j=L[i];j<=R[i];j++)\n\t\t{\n\t\t\tbelong[j]=i;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tys[a[i]=read()]=0;\n\t}\n\tint rank=1;\n\tfor(map<int,int>::iterator it=ys.begin();it!=ys.end();it++)\n\t{\n\t\tit->second=rank;\n\t\trank++;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta[i]=ys[a[i]];\n\t\tvec[a[i]].push_back(i);\n\t\tpos[i]=vec[a[i]].size()-1;\n\t}\n//\tfor(int i=1;i<=n;i++) cout<<a[i]<<endl;\n\tfor(int i=1;i<=s;i++)\n\t{\n\t\tmemset(cnt,0,sizeof(cnt));\n\t\tfor(int j=i;j<=s;j++)\n\t\t{\n\t\t\tzs[i][j]=zs[i][j-1];\n\t\t\tfor(int k=L[j];k<=R[j];k++)\n\t\t\t{\n\t\t\t\tcnt[a[k]]++;\n\t\t\t\tzs[i][j]=max(zs[i][j],cnt[a[k]]);\n\t\t\t}\n\t\t}\n\t}\n\tint ans=0;\n\tfor(int t=1,x,y;t<=m;t++)\n\t{\n\t\tx=read();\n\t\ty=read();\n\t\tx^=ans;\n\t\ty^=ans;\n\t\tif(x>y) swap(x,y);\n\t\tans=0;\n\t\tif(belong[y]-belong[x]<=3)\n\t\t{\n\t\t\tfor(int i=x;i<=y;i++) sum[a[i]]=0;\n\t\t\tfor(int i=x;i<=y;i++)\n\t\t\t{\n\t\t\t\tsum[a[i]]++;\n\t\t\t\tans=max(ans,sum[a[i]]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans=zs[belong[x]+1][belong[y]-1];\n\t\t\tfor(int i=x,now;i<=R[belong[x]];i++)\n\t\t\t{\n\t\t\t\tnow=pos[i];\n\t\t\t\twhile(now+ans<vec[a[i]].size()&&vec[a[i]][now+ans]<=y) ans++;         \n\t\t\t}\n\t\t\tfor(int i=L[belong[y]],now;i<=y;i++)\n\t\t\t{\n\t\t\t\tnow=pos[i];\n\t\t\t\twhile(now-ans>=0&&vec[a[i]][now-ans]>=x) ans++;\n\t\t\t}\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}\n```\n\n## \u5c0f\u8282\n\n\u5206\u5757\u6a21\u677f\u9898\u7684\u8bad\u7ec3\u5c31\u5230\u6b64\u5b8c\u7ed3\u4e86\u3002\n\n\u4f46\u662f\u5206\u5757\u7684\u7384\u5b66\u7f8e\u5999\u4f18\u96c5~~\u66b4\u529b~~\u4e4b\u5904\u4e0d\u4ec5\u4ec5\u4e8e\u6b64\u3002\n\n\u6bd4\u5982\u6839\u53f7\u5e73\u8861\u7b49\u3002\n\n\u6bd4\u5982[P5048 [Ynoi2019 \u6a21\u62df\u8d5b] Yuno loves sqrt technology III](https://www.luogu.com.cn/problem/P5048)\u8fd9\u9053\u9898\u5176\u5b9e\u8fd8\u53ef\u4ee5\u4e8c\u5206\u67e5\u627e\u6700\u540e\u4e00\u4e2a $\\le r$ \u7684\u6570\uff0c\u4f7f\u5f97\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u4e3a $O(NT+MN/T*\\log t)\\stackrel{T=\\sqrt{N\\log N}}{\\longrightarrow}O(N\\sqrt{N\\log N})$ [^1]\u7ea7\u522b\u7684\u3002\n\n\u5927\u6982\u662f\u56e0\u4e3a\u8fd9\u53ea\u662f **Ynoi** \u7684\u6a21\u62df\u8d5b\u5427\uff0c\u5c31\u6ca1\u6709\u90a3\u4e48\u5361\u65f6\u95f4\u3002\n\n\u4f46\u662f\u9047\u5230\u6bd2\u7624\u9898\uff0c\u6839\u53f7\u5e73\u8861\u662f\u4e00\u79cd\u5f88\u91cd\u8981\u7684\u5361\u5e38\u65b9\u6cd5\u3002\n\n\u4ee5\u540e\u9047\u5230\u4e86\u5361\u5e38\u5206\u5757\u7684\u8bdd\u53ef\u4ee5\u8bb0\u5f55\u4e00\u4e0b\u3002\n\n\n[^1]: \u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357 0x44",
        "postTime": 1616038755,
        "uid": 188769,
        "name": "Vanilla_chan",
        "ccfLevel": 6,
        "title": "\u6d1b\u8c37 P5048 [Ynoi2019 \u6a21\u62df\u8d5b] Yuno loves sqrt technology III"
    },
    {
        "content": "~~\u5148\u819c\u62dc\u4e00\u4e0b\u697c\u4e0a\u7684\u5de8\u4f6c\uff0c\u4ed6\u4eec\u592a\u5de8\u4e86~~\n\n\u5206\u5757\uff0c\uff08~~\u4e0d\u7528\u8bb2\u4e86~~\uff09\u3002\n\n\u79bb\u6563\u5316\uff08~~\u66f4\u4e0d\u7528\u8bb2\u4e86~~\uff09\n\n\u628a\u4e00\u4e2a\u6570\u6240\u6709\u7684\u51fa\u73b0\u4f4d\u7f6e\u7528\u4e00\u4e2a$vector$\u5b58\u4e00\u4e0b\n\n\u7136\u540e\u7528$pos$\u628a$vector$\u5185\u7684\u4e0b\u6807\u5168\u90e8\u5b58\u8d77\u6765\n\n\u628a$i$~$j$\u5757\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\u5b58\u5728$F$\u6570\u7ec4\u4e2d\n\n~~\u8bf6\u5466\u5988\u8036\uff0c\u7ec8\u4e8e\u53ef\u4ee5\u67e5\u8be2\u4e86~~\n\n\u6211\u4eec\u66b4\u529b\u67e5\u8be2\u4e24\u8fb9\uff0c\u770b\u770b\u4ed6\u4eec\u7684\u51fa\u73b0\u6b21\u6570\uff1a\n\n\u5177\u4f53\u662f\u8fd9\u6837\uff1a\n\n\u5de6\u8fb9\uff1a\u5982\u679c\u5f53\u524d\u7684$ans$+$posx$\u5728$vector$\u4e2d\u7684\u6570 $<=$ $r$ \u90a3\u4e48$++ans$\n\n\u53f3\u8fb9\uff1a\u5982\u679c\u5f53\u524d\u7684$ans$-$posx$\u5728$vector$\u4e2d\u7684\u6570 $>=$ $l$ \u90a3\u4e48$++ans$\n\n\u7136\u540e\u5c31\u597d\u4e86\u3002\n\n```\n\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#define Rint register int\nusing namespace std;\ntemplate <typename T> inline void read(T &x) {\n    x=0;T w=1,ch=getchar();\n    while(!isdigit(ch)&&ch!='-') ch=getchar();\n    if(ch=='-') w=-1,ch=getchar();\n    while(isdigit(ch)) x=x*10+ch-'0',ch=getchar();\n    x*=w;\n}\ntemplate <typename T> inline void write_(T x) {\n    if(x<0) x=-x,putchar('-');\n    if(x>=10) write_(x/10);\n    putchar(x%10+'0');\n}\nconst int maxn=5e5+10;\nconst int siz=708;\nint ans=0,sum[maxn],f[710][710],low[710],high[710],id[maxn],n,m,pos[maxn],a[maxn];\nint cnt;\nvector<int>s,val[maxn];\nint main() {\n    read(n);read(m);\n    s.push_back(-1);\n    for (Rint i=1;i<=n;++i) {\n        read(a[i]);\n        s.push_back(a[i]);\n    }\n    sort(s.begin(),s.end());\n    s.erase(unique(s.begin(),s.end()),s.end());\n    for (Rint i=1;i<=n;++i) {\n        a[i]=lower_bound(s.begin(),s.end(),a[i])-s.begin();\n        val[a[i]].push_back(i);\n        pos[i]=val[a[i]].size()-1; \n    }\n    cnt=(n-1)/siz+1;\n    for (Rint i=1;i<=cnt;++i) {\n        low[i]=high[i-1]+1;\n        high[i]=i*siz;\n    }\n    high[cnt]=n;\n    for (Rint i=1;i<=cnt;++i) {\n        memset(sum,0,sizeof(sum));\n        for (Rint j=low[i];j<=high[i];++j) id[j]=i;\n        for (Rint j=i;j<=cnt;++j) {\n            int&res=f[i][j];\n            res=f[i][j-1];\n            for (Rint k=low[j];k<=high[j];++k) {\n                ++sum[a[k]];\n                res=max(res,sum[a[k]]);\n            }\n        }\n    }\n    memset(sum,0,sizeof(sum));\n    while(m--) {\n        int l,r;\n        read(l);read(r);\n        l^=ans;r^=ans;\n        ans=0;\n        if(id[l]==id[r]) {\n            for (Rint i=l;i<=r;++i) {\n                ++sum[a[i]];\n                ans=max(ans,sum[a[i]]);\n            }\n            for (Rint i=l;i<=r;++i) sum[a[i]]=0;\n        }\n        else {\n            ans=f[id[l]+1][id[r]-1];\n            for (Rint i=l;i<=high[id[l]];++i) {\n                int res=pos[i];\n                while((res+ans)<val[a[i]].size()&&val[a[i]][res+ans]<=r) ++ans;\n            }\n            for (Rint i=low[id[r]];i<=r;++i) {\n                int res=pos[i];\n                while((res-ans)>=0&&val[a[i]][res-ans]>=l) ++ans;\n            }\n        }\n        write_(ans);putchar('\\n');\n    }\n    return 0;\n}\n```",
        "postTime": 1546076619,
        "uid": 78187,
        "name": "zjjcth330",
        "ccfLevel": 0,
        "title": "\u9898\u89e3"
    },
    {
        "content": "[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/Memory-of-winter/p/10126812.html)\n\n\u5148\u819c\u4e00\u4e0b[mrsrz](https://www.luogu.org/space/show?uid=6813)\uff0c\u4ed6\u592a\u5f3a\u5566\uff01\n\n**\u9898\u76ee\u5927\u610f\uff1a**\u6709$n(n\\leqslant5\\times10^5)$\u4e2a\u6570\uff0c$m(m\\leqslant5\\times10^5)$\u4e2a\u8be2\u95ee\uff0c\u6bcf\u4e2a\u8be2\u95ee\u95ee\u533a\u95f4$[l,r]$\u4e2d\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\n\n**\u9898\u89e3\uff1a**\u5206\u5757\uff0c\u8bbe\u5757\u5927\u5c0f\u4e3a$S$\uff0c\u5148\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u4e24\u4e24\u5757\u4e4b\u95f4\u7684\u4f17\u6570\u51fa\u73b0\u6b21\u6570\uff0c\u590d\u6742\u5ea6$O(\\Big(\\dfrac n S\\Big)n)$\u3002\u8be2\u95ee\u65f6\u5148\u628a\u7b54\u6848\u8bbe\u6210\u6574\u5757\u5185\u7684\u7b54\u6848\uff0c\u7136\u540e\u5bf9\u4e24\u8fb9\u5269\u4e0b\u7684\u6700\u591a$2S$\u4e2a\u5143\u7d20\u8fdb\u884c\u8ba8\u8bba\u3002\n\n\u96be\u70b9\u5728\u5982\u4f55\u5feb\u901f\u6c42\u51fa\u4e00\u4e2a\u5143\u7d20\u5728\u533a\u95f4\u5185\u51fa\u73b0\u6b21\u6570\uff0c\u5148\u60f3\u5230\u7684\u662f\u4e3b\u5e2d\u6811\uff0c\u4f46\u662f\u591a\u4e86\u4e00\u4e2a$\\log_2$\uff0c\u5e76\u8fc7\u4e0d\u53bb\u3002\u53ef\u4ee5\u628a\u6bcf\u79cd\u6570\u51fa\u73b0\u7684\u4f4d\u7f6e\u7528$vector$\u5b58\u4e0b\u6765\uff0c\u5e76\u4e14\u5bf9\u6bcf\u4e2a\u6570\u5b58\u4e00\u4e2a\u5b83\u5728$vector$\u4e2d\u7684\u4f4d\u7f6e\uff0c\u7b2c$i$\u4e2a\u6570\u7684\u4f4d\u7f6e\u662f$ret_i$\uff0c\u5047\u8bbe\u73b0\u5728\u7684\u7b54\u6848\u4e3a$ans$\uff0c\u6b63\u5728\u5904\u7406\u5de6\u8fb9\u7684\u591a\u4f59\u5143\u7d20\uff0c\u5904\u7406\u5230\u7b2c$i$\u4e2a\uff0c\u53ef\u4ee5\u770b\u8fd9\u4e2a\u6570\u503c\u7684$vector$\u4e2d\uff0c\u7b2c$ret_i+ans$\u4f4d\u662f\u5426\u5c0f\u4e8e$r$\uff0c\u82e5\u5c0f\u4e8e\uff0c\u5219\u8fd9\u4e2a\u6570\u81f3\u5c11\u51fa\u73b0\u4e86$ans+1$\u6b21\uff0c\u66f4\u65b0\u7b54\u6848\u3002\u53f3\u8fb9\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002\n\n\u53d1\u73b0$ans$\u6700\u591a\u81ea\u589e$2S$\u6b21\uff0c\u6240\u4ee5\u4e00\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u662f$O(2S)$\u7684\uff0c\u603b\u590d\u6742\u5ea6\u4e3a$O(2Sm+\\Big(\\dfrac n S\\Big)n)$\uff0c\u5f53$S$\u7565\u5c0f\u4e8e$\\sqrt n$\u65f6\u6700\u4f18\uff08\u5176\u5b9e\u662f\u6211\u4e0d\u600e\u4e48\u7b97\uff09\n\n\n\n\n**C++ Code\uff1a**\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cctype>\n#include <vector>\n\nnamespace std {\n    struct istream {\n#define M (1 << 24 | 3)\n        char buf[M], *ch = buf - 1;\n        inline istream() {\n#ifndef ONLINE_JUDGE\n            freopen(\"input.txt\", \"r\", stdin);\n#endif\n            fread(buf, 1, M, stdin);\n        }\n        inline istream& operator >> (int &x) {\n            while (isspace(*++ch));\n            for (x = *ch & 15; isdigit(*++ch); ) x = x * 10 + (*ch & 15);\n            return *this;\n        }\n#undef M\n    } cin;\n    struct ostream {\n#define M (1 << 24 | 3)\n        char buf[M], *ch = buf - 1;\n        int w;\n        inline ostream& operator << (int x) {\n            if (!x) {\n                *++ch = '0';\n                return *this;\n            }\n            for (w = 1; w <= x; w *= 10);\n            for (w /= 10; w; w /= 10) *++ch = (x / w) ^ 48, x %= w;\n            return *this;\n        }\n        inline ostream& operator << (const char x) {*++ch = x; return *this;}\n        inline ostream& operator << (const char *x) {\n            while (*x) *this << *x++;\n            return *this;\n        }\n        inline ~ostream() {\n#ifndef ONLINE_JUDGE\n            freopen(\"output.txt\", \"w\", stdout);\n#endif\n            fwrite(buf, 1, ch - buf + 1, stdout);\n        }\n#undef M\n    } cout;\n}\n\n#define maxn 500010\nconst int BSZ = 610, BNUM = maxn / BSZ + 10;\n\nint cnt[maxn];\nint MAX[BNUM][BNUM];\nint L[maxn], R[maxn], bel[maxn];\n\nint n, m, Bnum;\nint w[maxn], v[maxn];\n\nstd::vector<int> list[maxn];\nint ret[maxn];\nint main() {\n\tstd::cin >> n >> m;\n\tfor (int i = 1; i <= n; i++) {\n\t\tstd::cin >> w[i];\n\t\tv[i] = w[i];\n\t\tbel[i] = (i - 1) / BSZ + 1;\n\t}\n\n\tconst int tot = (std::sort(v + 1, v + n + 1), std::unique(v + 1, v + n + 1) - v - 1);\n\tfor (int i = 1; i <= n; i++) {\n\t\tw[i] = std::lower_bound(v + 1, v + tot + 1, w[i]) - v;\n\t\tret[i] = list[w[i]].size();\n\t\tlist[w[i]].push_back(i);\n\t}\n\n\tBnum = bel[n];\n\tfor (int i = 1; i <= Bnum; i++) {\n\t\tL[i] = (i - 1) * BSZ, R[i] = L[i] + BSZ - 1;\n\t}\n\tL[1] = 1, R[Bnum] = n;\n\tfor (int i = 1; i <= Bnum; i++) {\n\t\t__builtin_memset(cnt, 0, sizeof cnt);\n\t\tint Max = 0, now = i;\n\t\tfor (int j = L[i]; j <= n; j++) {\n\t\t\tcnt[w[j]]++;\n\t\t\tMax = std::max(Max, cnt[w[j]]);\n\t\t\tif (j == R[now]) {\n\t\t\t\tMAX[i][now] = Max;\n\t\t\t\tnow++;\n\t\t\t}\n\t\t}\n\t}\n\n\tint ans = 0;\n\twhile (m --> 0) {\n\t\tint l, r;\n\t\tstd::cin >> l >> r;\n\t\tl ^= ans, r ^= ans;\n\t\tconst int lb = bel[l], rb = bel[r];\n\t\tans = 0;\n\t\tif (lb == rb) {\n\t\t\tfor (int i = l; i <= r; i++) {\n\t\t\t\tconst int W = w[i], sz = list[W].size(), pos = ret[i];\n\t\t\t\twhile (pos + ans < sz && list[W][pos + ans] <= r) ans++;\n\t\t\t}\n\t\t} else {\n\t\t\tif (lb + 1 < rb) ans = MAX[lb + 1][rb - 1];\n\t\t\tfor (int i = l; i <= R[lb]; i++) {\n\t\t\t\tconst int W = w[i], sz = list[W].size(), pos = ret[i];\n\t\t\t\twhile (pos + ans < sz && list[W][pos + ans] <= r) ans++;\n\t\t\t}\n\t\t\tfor (int i = L[rb]; i <= r; i++) {\n\t\t\t\tconst int W = w[i], pos = ret[i];\n\t\t\t\twhile (pos >= ans && list[W][pos - ans] >= l) ans++;\n\t\t\t}\n\t\t}\n\t\tstd::cout << ans << '\\n';\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1544946369,
        "uid": 22072,
        "name": "Memory_of_winter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5048 \u3010[Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology III\u3011"
    },
    {
        "content": "\u9996\u5148\u5bf9 $(a_i,i)$ \u8fd9\u4e9b\u5bf9\u5f62\u6210\u4e00\u4e2a\u6570\u7ec4\u5e76\u4e14\u6392\u5e8f\uff0c\u6392\u5e8f\u5b8c\u8bb0\u5f55 $i$ \u5728\u6392\u597d\u7684\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u3002\n\n\u8fd9\u4e5f\u5c31\u662f $pre[i]$ \u548c $nxt[i]$ \u6570\u7ec4\u7684\u4e00\u4e2a\u52a0\u5f3a\u7ed3\u6784\uff1a\u53ef\u4ee5 $O(1)$ \u67e5\u8be2\u4efb\u4f55\u4e00\u4e2a\u4f4d\u7f6e\u7684 $pre^k[i]$ \u4e0e $nxt^k[i]$\uff0c\u5982\u679c\u5b83\u4eec\u5b58\u5728\u3002\u627e\u5230 $i$ \u6240\u5728\u4f4d\u7f6e\u5f80\u524d\u6216\u8005\u5f80\u540e\u5bfb\u627e $k$ \u4f4d\u5373\u53ef\u3002\n\n---\n\n\u5e8f\u5217\u5206\u5757\uff0c\u5148\u5bf9\u5757\u533a\u95f4\u8ba1\u7b97\u7b54\u6848\u3002\u5b9a\u5757\u5927\u5c0f\u4e3a $B$\u3002\n\n\u9996\u5148\uff0c\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u7b54\u6848\u4e0d\u53ef\u80fd\u8d85\u8fc7\u5757\u5185\u7684\u7b54\u6848\u52a0\u4e0a\u96f6\u788e\u5927\u5c0f\uff0c\u5426\u5219\u5757\u5185\u7b54\u6848\u4e0d\u53ef\u80fd\u6b63\u786e\u3002\u9884\u5904\u7406\u5757\u5185\u7b54\u6848\u5c31\u6309\u7167\u901a\u5e38 $O(n^2/B)$ \u65b9\u6cd5\u505a\u3002\n\n\u5bf9\u4e00\u4e2a\u533a\u95f4\uff0c\u5982\u679c\u5df2\u7ecf\u6709\u5757\u5185\u7b54\u6848\uff0c\u53ea\u53ef\u80fd\u6709\u96f6\u788e\u90e8\u5206\u7684\u503c\u5bf9\u7b54\u6848\u8d21\u732e\u3002\u4e8e\u662f\u5bf9\u96f6\u788e\u90e8\u5206\u91cc\u9762\u6240\u6709\u7684\u503c\u90fd\u904d\u5386\u4e00\u8fb9\uff0c\u67e5\u770b\u8fd9\u4e2a\u503c\u4f1a\u4e0d\u4f1a\u66f4\u65b0\u7b54\u6848\uff0c\u6216\u8005\u6709\u6ca1\u6709\u5728\u533a\u95f4\u91cc\u81f3\u5c11\u51fa\u73b0 $ans+1$ \u6b21\u5982\u679c\u5f53\u524d\u7b54\u6848\u662f $ans$\u3002\n\n\u7b2c\u4e00\u4e2a\u89c2\u5bdf\u662f\u5982\u679c\u904d\u5386\u5de6\u8fb9\u96f6\u788e\u90e8\u5206\uff0c\u53ea\u9700\u8981\u8003\u8651\u503c\u7684\u53f3\u8fb9\uff1b\u5982\u679c\u662f\u53f3\u8fb9\u96f6\u788e\u90e8\u5206\uff0c\u53ea\u9700\u8981\u8003\u8651\u503c\u7684\u5de6\u8fb9\u3002\u6bd5\u7adf\u5982\u679c\u5728\u5b83\u524d\u9762\u5df2\u7ecf\u51fa\u73b0\u4e86\u4e00\u6837\u7684\u503c\u904d\u5386\u5230\u8fd9\u91cc\u5c31\u6ca1\u8d21\u732e\u4e86\u3002\n\n\u8fd9\u91cc\u6211\u4eec\u5728\u524d\u9762\u6784\u9020\u51fa\u6765\u7684\u6570\u7ec4\u5c31\u6709\u7528\u5566\uff01\u5982\u679c $pre^{ans}[i]$ \u6216\u8005 $nxt^{ans}[i]$\uff08\u770b\u662f\u4ece\u90a3\u4e2a\u96f6\u788e\u90e8\u5206\u904d\u5386\uff09\u5728 $[l,r]$ \u91cc\u9762\uff0c$a_i$ \u5728 $[l,r]$ \u91cc\u51fa\u73b0\u81f3\u5c11 $ans+1$ \u6b21\uff0c\u66f4\u65b0 $ans$\u3002\n\n\u6ce8\u610f\u66f4\u65b0\u5b8c\u4e5f\u5e94\u8be5\u7ee7\u7eed\u770b $ans+2$\uff0c$ans+3$ \u7b49\u7b49\u662f\u5426\u6709\u53ef\u80fd\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^2/B+qB)$ \u56e0\u4e3a\u8be2\u95ee\u7684\u65f6\u5019 $ans$ \u6700\u591a\u4f1a\u66f4\u65b0 $B$ \u6b21\u3002$B=O(n/\\sqrt{q})$ \u8fbe\u5230 $O(n\\sqrt{q})$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n// writer: w33z8kqrqk8zzzx33\n#include <bits/stdc++.h>\nusing namespace std;\n\n// begin fast read template by CYJian (source: https://www.luogu.com.cn/paste/i11c3ppx)\n\nnamespace io {\n\tconst int __SIZE = (1 << 21) + 1;\n\tchar ibuf[__SIZE], *iS, *iT, obuf[__SIZE], *oS = obuf, *oT = oS + __SIZE - 1, __c, qu[55]; int __f, qr, _eof;\n\t#define Gc() (iS == iT ? (iT = (iS = ibuf) + fread (ibuf, 1, __SIZE, stdin), (iS == iT ? EOF : *iS ++)) : *iS ++)\n\tinline void flush () { fwrite (obuf, 1, oS - obuf, stdout), oS = obuf; }\n\tinline void gc (char &x) { x = Gc(); }\n\tinline void pc (char x) { *oS ++ = x; if (oS == oT) flush (); }\n\tinline void pstr (const char *s) { int __len = strlen(s); for (__f = 0; __f < __len; ++__f) pc (s[__f]); }\n\tinline void gstr (char *s) { for(__c = Gc(); __c < 32 || __c > 126 || __c == ' ';)  __c = Gc();\n\t\tfor(; __c > 31 && __c < 127 && __c != ' '; ++s, __c = Gc()) { *s = __c; } *s = 0; }\n\ttemplate <class I> inline bool gi (I &x) { _eof = 0;\n\t\tfor (__f = 1, __c = Gc(); (__c < '0' || __c > '9') && !_eof; __c = Gc()) { if (__c == '-') __f = -1; _eof |= __c == EOF; }\n\t\tfor (x = 0; __c <= '9' && __c >= '0' && !_eof; __c = Gc()) { x = x * 10 + (__c & 15), _eof |= __c == EOF; x *= __f; } return !_eof; }\n\ttemplate <class I> inline void print (I x) { if (!x) pc ('0'); if (x < 0) pc ('-'), x = -x;\n\t\twhile (x) { qu[++ qr] = x % 10 + '0',  x /= 10; } while (qr) pc (qu[qr --]); }\n\tstruct Flusher_ {~Flusher_(){flush();}}io_flusher_;\n} using io::pc; using io::gc; using io::pstr; using io::gstr; using io::gi; using io::print;\n\n// end fast read template by CYJian\n\n#define iter(i, a, b) for(int i=(a); i<(b); i++)\n#define rep(i, a) iter(i, 0, a)\n#define rep1(i, a) iter(i, 1, (a)+1)\n#define fi first\n#define se second\n#define pb push_back\n \n#define ll long long\n#define pii pair<int, int>\n//#define int ll\nconst int MOD = 1000000007;\n\nconstexpr int B = 666;\nconstexpr int N = 500000;\n\nint n, q;\nint ar[500005], loc[500005], tmp[500005];\nint ans[N/B+5][N/B+5];\npii dt[500005];\n\nsigned main() {\n    ios_base::sync_with_stdio(false); cin.tie(0);\n    gi(n), gi(q);\n    {\n        map<int, int> t;\n        rep(i, n) {\n            int v; gi(v);\n            if(!t.count(v)) t[v] = i;\n            ar[i] = t[v];\n            dt[i] = {ar[i], i};\n        }\n        sort(dt, dt+n);\n        rep(i, n) loc[dt[i].se] = i;\n        for(int l=0,b=0; l<n; l+=B,b++) {\n            memset(tmp, 0, sizeof tmp);\n            int cans = 0;\n            iter(r, l, n) {\n                cans = max(cans, ++tmp[ar[r]]);\n                if(r%B==B-1) ans[b][r/B] = cans;\n            }\n        }\n    }\n    int la = 0;\n    while(q--) {\n        int l, r, cans = 0; gi(l), gi(r);\n        l ^= la; r ^= la; l--; r--;\n        if(l/B == r/B)\n            iter(i, l, r+1)\n                while(loc[i]+cans < n && dt[loc[i]+cans].fi == ar[i] && dt[loc[i]+cans].se <= r) \n                    cans++;\n        else {\n            int nl = l + (l%B?B-l%B:0), nr = r - (r+1)%B; cans = ans[nl/B][nr/B];\n            iter(i, l, nl)\n                while(loc[i]+cans < n && dt[loc[i]+cans].fi == ar[i] && dt[loc[i]+cans].se <= r) \n                    cans++;\n            iter(i, nr+1, r+1)\n                while(0 <= loc[i]-cans && dt[loc[i]-cans].fi == ar[i] && l <= dt[loc[i]-cans].se)\n                    cans++;\n        }\n        print(la = cans); pc('\\n');\n    }\n    \n}\n\n```",
        "postTime": 1602492640,
        "uid": 220037,
        "name": "w33z8kqrqk8zzzx33",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5048 \u3010[Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology III\u3011"
    },
    {
        "content": "\u5410\u69fd\uff1a\u611f\u89c9\u672c\u9898\u6700\u591a\u7d2b\u3002\n\n------------\n\n\u8003\u8651\u5206\u5757\uff0c\u8bbe\u5757\u957f\u4e3a $S$\u3002\n\n\u79bb\u6563\u5316\u5e8f\u5217\u4e4b\u540e\uff0c\u8bbe $f_{i,j}$ \u8868\u793a\u7b2c $i,i+1,\\dots,j$ \u5757\u7684\u4f17\u6570\u51fa\u73b0\u6b21\u6570\uff0c\u53ef\u4ee5\u5728 $O((\\dfrac{n}{S})^2\\times S))=O(\\dfrac{n^2}{S})$ \u65f6\u95f4\u5185\u9884\u5904\u7406\u51fa\u6765\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\u5148\u628a\u6574\u6bb5\u7684\u7b54\u6848\u7b97\u51fa\u6765\uff0c\u8003\u8651\u96f6\u788e\u90e8\u5206\u600e\u4e48\u7b97\u3002\n\n\u8bbe\u76ee\u524d\u7b97\u51fa\u7684\u4f17\u6570\u7684\u51fa\u73b0\u6570\u91cf\u4e3a $ans$\u3002\n\n\u6b64\u65f6\u4f20\u7edf\u7684\u505a\u6cd5\u662f\u503c\u57df\u5206\u5757\u67e5\u8be2\u8fd9\u4e2a\u6570\u5728\u4e00\u4e2a\u533a\u95f4\u4e2d\u51fa\u73b0\u6b21\u6570\uff0c\u4f46\u662f\u6211\u4eec\u8981\u7b97\u7684\u6bd4\u8fd9\u4e2a\u5f31\u5f88\u591a\uff0c\u53ea\u8981\u5224\u65ad\u8fd9\u4e2a\u6570\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u51fa\u73b0\u6b21\u6570\u4e3a $ans+1$ \u5373\u53ef\u3002\n\n\u90a3\u6211\u4eec\u53ea\u8981\u5bf9\u6bcf\u4e2a\u503c\u5f00\u4e2a vector\uff0c\u6309\u987a\u5e8f\u7ef4\u62a4\u8fd9\u4e2a\u503c\u5bf9\u5e94\u7684\u6240\u6709\u4e0b\u6807\uff0c\u7136\u540e\u5224\u65ad\u5de6\u8fb9\u96f6\u788e\u65f6\u6211\u4eec\u53ea\u8981\u5224\u65ad\u5728\u53f3\u8fb9 $ans$ \u4e2a\u662f\u5426\u5728 $[l,r]$ \u4e2d\uff0c\u5224\u65ad\u53f3\u8fb9\u96f6\u788e\u65f6\u6211\u4eec\u53ea\u8981\u5224\u65ad\u5728\u5de6\u8fb9 $ans$ \u4e2a\u662f\u5426\u5728 $[l,r]$ \u4e2d\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\dfrac{n^2}{S}+mS)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n\u53d6 $S=\\dfrac{n}{\\sqrt m}$ \u53ef\u5f97\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt m)$\u3002\n\n~~\u4e00\u70b9\u4e5f\u4e0d\u5361\u5e38\uff0c\u4e60\u60ef\u6027\u5f00\u4e2a\u8bba\u6587\u9e3d\u5feb\u8bfb\u5c31\u8fc7\u4e86\u3002~~\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nstruct IO_Tp {\n    const static int _I_Buffer_Size = 2 << 23;\n    char _I_Buffer[_I_Buffer_Size], *_I_pos = _I_Buffer;\n\n    const static int _O_Buffer_Size = 2 << 23;\n    char _O_Buffer[_O_Buffer_Size], *_O_pos = _O_Buffer;\n\n    IO_Tp() { fread(_I_Buffer, 1, _I_Buffer_Size, stdin); }\n    ~IO_Tp() { fwrite(_O_Buffer, 1, _O_pos - _O_Buffer, stdout); }\n\n    IO_Tp &operator>>(int &res) {\n    \tint f=1;\n        while (!isdigit(*_I_pos)&&(*_I_pos)!='-') ++_I_pos;\n        if(*_I_pos=='-')f=-1,++_I_pos;\n        res = *_I_pos++ - '0';\n        while (isdigit(*_I_pos)) res = res * 10 + (*_I_pos++ - '0');\n        res*=f;\n        return *this;\n    }\n\n    IO_Tp &operator<<(int n) {\n    \tif(n<0)*_O_pos++='-',n=-n;\n        static char _buf[10];\n        char *_pos = _buf;\n        do\n            *_pos++ = '0' + n % 10;\n        while (n /= 10);\n        while (_pos != _buf) *_O_pos++ = *--_pos;\n        return *this;\n    }\n\n    IO_Tp &operator<<(char ch) {\n        *_O_pos++ = ch;\n        return *this;\n    }\n} IO;\nconst int N=500005,S=715;\nint n,m,bl,num,a[N],b[N],L[S],R[S],f[S][S],tot[N],pl[N];\nvector<int>v[N];\nint query(int l,int r){\n\tint ret=0;\n\tif(b[l]==b[r]){\n\t\tfor(int i=l;i<=r;i++)ret=max(ret,++tot[a[i]]);\n\t\tfor(int i=l;i<=r;i++)tot[a[i]]=0;\n\t\treturn ret;\n\t}\n\tret=f[b[l]+1][b[r]-1];\n\tfor(int i=l;i<=R[b[l]];i++)while(pl[i]+ret<v[a[i]].size()&&v[a[i]][pl[i]+ret]<=r)ret++;\n\tfor(int i=L[b[r]];i<=r;i++)while(pl[i]-ret>=0&&v[a[i]][pl[i]-ret]>=l)ret++;\n\treturn ret;\n} \nint main(){\n\tIO>>n>>m;\n\tfor(int i=1;i<=n;i++)IO>>a[i],b[i]=a[i];\n\tsort(b+1,b+n+1);\n\tnum=unique(b+1,b+n+1)-b-1;\n\tfor(int i=1;i<=n;i++)a[i]=lower_bound(b+1,b+num+1,a[i])-b,pl[i]=v[a[i]].size(),v[a[i]].push_back(i);\n\tbl=sqrt(n);\n\tfor(int i=1;i<=n;i++)b[i]=(i-1)/bl+1;\n\tnum=b[n];\n\tfor(int i=1;i<=num;i++)L[i]=R[i-1]+1,R[i]=i*bl;\n\tR[num]=n;\n\tfor(int i=1;i<=num;i++){\n\t\tmemset(tot,0,sizeof(tot));\n\t\tfor(int j=i;j<=num;j++){\n\t\t\tf[i][j]=f[i][j-1];\n\t\t\tfor(int k=L[j];k<=R[j];k++)f[i][j]=max(f[i][j],++tot[a[k]]);\n\t\t}\n\t}\n\tmemset(tot,0,sizeof(tot));\n\tfor(int lastans=0;m--;){\n\t\tint l,r;\n\t\tIO>>l>>r;\n\t\tl^=lastans,r^=lastans;\n\t\tIO<<(lastans=query(l,r))<<'\\n';\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1604483381,
        "uid": 121027,
        "name": "Spasmodic",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5048 \u3010[Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology III\u3011"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u533a\u95f4\u4f17\u6570\u51fa\u73b0\u6b21\u6570\u5f3a\u5236\u5728\u7ebf\u3002\n\n## \u9898\u89e3\n\n\u4e09\u4e2a YLST \u4e2d\u6bd4\u8f83\u6e05\u65b0\u7684\u4e00\u4e2a\u5206\u5757\u3002\n\n\n\u6bd4\u8f83\u91cd\u70b9\u7684\u5730\u65b9\u5728\u4e8e\u8be2\u95ee\u6563\u5757\u7684\u5904\u7406\u3002\n\n\u5148\u79bb\u6563\u5316\u4e00\u4e0b\u5e8f\u5217\u3002\n\n\u6211\u4eec\u9996\u5148\u9884\u5904\u7406\u51fa\u6765\u4e00\u4e2a vector \u6570\u7ec4 `fur[i]`\uff0c`fur[i]` \u91cc\u9762\u4f9d\u6b21\u5b58\u7684\u662f\u6240\u6709 `isa[i]`\uff08\u5373\u8fd9\u4e2a\u5e8f\u5217\uff0c\u8be6\u89c1\u4ee3\u7801\uff09\u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u518d\u9884\u5904\u7406\u4e00\u4e2a `pos[i]` \u8868\u793a\u5728\u5f53\u524d\u7b2c $i$ \u4f4d\u65f6 `fur[i]` \u7684\u5927\u5c0f\u4e5f\u5c31\u662f\u4e00\u5171\u51fa\u73b0\u4e86\u591a\u5c11\u4e2a `isa[i]`\u3002\u7531\u4e8e vector \u7684\u4e0b\u6807\u662f\u4ece $0$ \u5f00\u59cb\u7684\uff0c\u6240\u4ee5\u6240\u6709\u7684 `pos[i]` \u90fd\u9700\u8981\u51cf\u4e2a\u4e00\u3002\n\n\u7136\u540e\u8be2\u95ee\u5904\u7406\u6574\u5757\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5148\u5047\u8bbe\u5f53\u524d\u8be2\u95ee\u7684\u533a\u95f4\u662f `[opl,opr]`\uff0c\u7136\u540e\u628a\u5f53\u524d\u8be2\u95ee\u7684\u7b54\u6848 `res` \u5148\u7f6e\u4e3a `App[bel[opl] + 1][bel[opr] - 1]`\u3002\n\n\u7136\u540e\u6765\u8003\u8651\u6563\u5757\uff0c\u5728\u5904\u7406\u51fa\u7684 vector \u6570\u7ec4\u4e2d\u5224\u65ad\u5373\u53ef\u3002\n\n\u8bbe\u6563\u5757\u5904\u7406\u5230\u6570 `isa[i]`\uff0c\u90a3\u4e48\u5982\u679c\u5b58\u5728 `pos[i] + res <= fur[isa[i]].size() - 1` \u4e14 `fur[isa[i]][pos[i] + res] <= opr`\uff0c\u90a3\u4e48\u5219\u8bf4\u660e\u8fd9\u4e2a\u6570\u51fa\u73b0\u4e86\u81f3\u5c11 `res + 1` \u6b21\uff0c\u5c06 `res` \u52a0\u4e00\u5373\u53ef\u3002\n\n\u7531\u4e8e `res` \u6700\u591a\u52a0\u4e0d\u8d85\u8fc7 $\\Theta(2\\sqrt{n})$ \u6b21\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f\u5bf9\u7684\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n\nusing namespace std;\n\nconst int MAXN = 5e5 + 5, MAXM = 720 + 5;\n\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n#define getchar( ) ( p1 == p2 && ( p2 = ( p1 = buf ) + fread( buf, 1, 1 << 21, stdin ), p1 == p2 ) ? EOF : *p1 ++ )\n\ntemplate<typename _T>\nvoid read( _T &x ){\n\tx = 0; char c = getchar( ); _T f = 1;\n\twhile( c < '0' || c > '9' ){ if( c == '-' )\tf = -1; c = getchar( ); }\n\twhile( c >= '0' && c <= '9' ){ x = ( x << 3 ) + ( x << 1 ) + ( c & 15 ); c = getchar( ); }\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x ){\n\tif( x < 0 ){ putchar( '-' ); x = -x; }\n\tif( x > 9 ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\nvoid swapp( _T &one, _T &another ){ int temp = one; one = another; another = temp; }\n\ntemplate<typename _T>\n_T MIN( _T one, _T another ){ return one > another ? another : one; }\n\ntemplate<typename _T>\n_T MAX( _T one, _T another ){ return one > another ? one : another; }\n\nint N, M;\nint cube, each, kase, isa[MAXN], cnt[MAXN], pos[MAXN], vis[MAXN], bel[MAXN];\nint lps[MAXM], rps[MAXM], App[MAXM][MAXM];\nvector<int> disc, fur[MAXN];\n\nint getID( int x ){ return lower_bound( disc.begin( ), disc.end( ), x ) - disc.begin( ) + 1; }\n\nvoid build( ){\n\tmemset( cnt, 0, sizeof( cnt ) );\n\tfor( int i = 1; i <= cube; ++ i ){\n\t\tkase ++;\n\t\tfor( int j = i; j <= cube; ++ j ){\n\t\t\tApp[i][j] = App[i][j - 1];\n\t\t\tfor( int k = lps[j]; k <= rps[j]; ++ k ){\n\t\t\t\tif( vis[isa[k]] != kase )\tcnt[isa[k]] = 0;\n\t\t\t\tcnt[isa[k]] ++; App[i][j] = MAX( App[i][j], cnt[isa[k]] );\n\t\t\t\tvis[isa[k]] = kase;\n\t\t\t}\n\t\t}\n\t}\n\tmemset( cnt, 0, sizeof( cnt ) );\n}\n\nint query( int opl, int opr ){\n\tif( bel[opl] == bel[opr] ){\n\t\tint res = 0; kase ++;\n\t\tfor( int i = opl; i <= opr; ++ i ){\n\t\t\tif( vis[isa[i]] != kase )\tcnt[isa[i]] = 0;\n\t\t\tcnt[isa[i]] ++; res = MAX( res, cnt[isa[i]] );\n\t\t\tvis[isa[i]] = kase;\n\t\t}\n\t\treturn res;\n\t}\n\tint res = 0;\n\tres = App[bel[opl] + 1][bel[opr] - 1];\n\tfor( int i = opl; i <= rps[bel[opl]]; ++ i ){\n\t\tint lim = fur[isa[i]].size( ) - 1;\n\t\twhile( pos[i] + res <= lim && fur[isa[i]][pos[i] + res] <= opr )\tres ++;\n\t}\n\tfor( int i = lps[bel[opr]]; i <= opr; ++ i ){\n\t\twhile( pos[i] - res >= 0 && fur[isa[i]][pos[i] - res] >= opl )\tres ++;\n\t}\n\treturn res;\n}\n\nsigned main( ){\n\tread( N ); read( M ); each = 720; cube = ( N - 1 ) / each + 1;\n\tfor( int i = 1; i <= N; ++ i ){ read( isa[i] ); disc.push_back( isa[i] ); }\n\tsort( disc.begin( ), disc.end( ) );\n\tdisc.erase( unique( disc.begin( ), disc.end( ) ), disc.end( ) );\n\tfor( int i = 1; i <= N; ++ i ){\n\t\tisa[i] = getID( isa[i] );\n\t\tfur[isa[i]].push_back( i );\n\t\tpos[i] = fur[isa[i]].size( ) - 1;\n\t}\n\tfor( int i = 1; i <= cube; ++ i ){\n\t\tlps[i] = rps[i - 1] + 1; rps[i] = rps[i - 1] + each;\n\t\tif( i == cube )\trps[i] = N;\n\t\tfor( int j = lps[i]; j <= rps[i]; ++ j )\tbel[j] = i;\n\t}\n\tbuild( );\n\tint Ans = 0, opl, opr;\n\twhile( M -- > 0 ){\n\t\tread( opl ); read( opr ); opl ^= Ans; opr ^= Ans;\n\t\tAns = 0; if( opl > opr )\tswapp( opl, opr );\n\t\twrite( Ans = query( opl, opr ) ); putchar( '\\n' );\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1602465946,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5048 \u3010[Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology III\u3011"
    },
    {
        "content": "\u5176\u5b9e\u672c\u849f\u84bb\u81ea\u5df1\u60f3\u4e86\u4e00\u4f1a\u540e\u4fbf\u6709\u4e86\u4e00\u4e9b\u601d\u8def\uff0c\u4f46\u5b9e\u73b0\u65b9\u9762\u8fd8\u662f\u8fd8\u662f~~\u5b66\u4e60\u4e86~~$\\text{dllxl}$\u7684\u505a\u6cd5\u7684\n\n\u5f3a\u5236\u5728\u7ebf\u5bfc\u81f4\u4e00\u4e9b\u79bb\u7ebf\u505a\u6cd5\u6ca1\u6709\u529e\u6cd5\u89e3\u51b3\uff08\u5982\u83ab\u961f\uff09\uff0c\u6211\u4eec\u8003\u8651\u5206\u5757\uff0c\u9884\u5904\u7406\u51fa\u7b2cl\u5230\u7b2cr\u4e2a\u5757\u7684\u4f17\u6570\u6b21\u6570\uff0c\u518d\u628a\u96f6\u6563\u5757\u7684\u6570\u4e00\u4e2a\u4e00\u4e2a\u66f4\u65b0\u7b54\u6848\u3002\n\n\u6211\u4eec\u7528\u4e00\u4e2avector\u5b58\u67d0\u4e2a\u503c\u7684\u4e0b\u6807\u5e8f\u5217\uff0c\u8bbe\u5f53\u524d\u7b54\u6848\u662fans\uff0c\u5982\u679c\u5f53\u524d\u70b9\u5728\u5de6\u8fb9\uff0c\u5b83\u7684\u540eans+1\u4e2a\u5143\u7d20\u5728r\u5185\uff0c\u5219\u66f4\u65b0\u7b54\u6848\uff0c\u53f3\u8fb9\u5219\u53cd\u4e4b\u3002\n\n~~\u7136\u800c\u4eca\u5929\u6211\u662f\u6765\u6559\u5927\u5bb6\u5361\u5e38\u7684~~\n\n[\u5173\u4e8e\u8fd9\u4e2a\u9898\u7684\u63d0\u4ea4\u8bb0\u5f55](https://www.luogu.com.cn/record/list?user=199750&pid=P5048&page=1)~~\u771f\u7684\u5361\u7684\u6211\u5fc3\u6001\u7206\u70b8~~\n\n~~\u597d\u50cf\u4ea4\u4e86\u4e00\u6b21\u9898\u89e3\u90fd\u6ca1\u8fc7\uff1f~~ ~~\u4e0d\u8981\u5c01\u6211~~\n\n\u597d\u4e86\uff0c\u6b63\u6587\u5f00\u59cb\uff0c\u9996\u5148\u4e86\u89e3\u4e00\u4e0b\u8fd9\u4e2a[**\u706b\u8f66\u5934**](https://www.luogu.com.cn/paste/dva7qsuu)\n\n\u8fd9\u662f\u4e2a\u597d\u4e1c\u897f\uff0c\u53ef\u4ee5\u8ba9\u4f60$n^2$\u8fc7\u767e\u4e07\uff08\u96fe\n\n\u4f46\u52a0\u4e86\u8fd9\u4e2a\u597d\u50cf\u8fd8\u662fT\u5b8c\u4e86\uff1f\n\n\u6ca1\u4e8b\uff0c\u6211\u4eec\u8fd8\u6709IO\u4f18\u5316\n\n\u4e0b\u9762\u662f\u6211~~\u7a83~~\u4e86\u673a\u623f\u5927\u4f6c\u7684IO\u4f18\u5316\n\n```cpp\nnamespace quick {\n#define tp template<typename Type>\n    namespace in {\n        inline char getc() {\n            static char buf[1<<21],*p1=buf,*p2=buf;\n            return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;\n        }\n        inline int read(char *s) {\n            *s=getc();\n            while(isspace(*s)) {*s=getc();if(*s==EOF) return 0;}\n            while(!isspace(*s)&&*s!=EOF) {s++;*s=getc();}\n            *s='\\0'; return 1;\n        }\n        tp inline int read(Type &x) {\n            x=0;bool k=false;char c=getc();\n            while(!isdigit(c)) {k|=(c=='-');c=getc();if(c==EOF) return 0;}\n            while(isdigit(c)) {x=(x<<1)+(x<<3)+(c^48);c=getc();}\n            x*=(k?-1:1); return 1;\n        }\n        template <typename Type,typename... Args>\n        inline int read(Type &t,Args &...args) {\n            int res=0;\n            res+=read(t);res+=read(args...);\n            return res;\n        }\n    }\n    using in::read;\n    namespace out {\n        char buf[1<<21];int p1=-1;const int p2=(1<<21)-1;\n        inline void flush() {\n            fwrite(buf,1,p1+1,stdout);\n            p1=-1;\n        }\n        inline void putc(const char &c) {\n            if(p1==p2) flush();\n            buf[++p1]=c;\n        }\n        inline void write(char *s) {\n            while(*s!='\\0') putc(*s),s++;\n        }\n        tp inline void write(Type x) {\n            static char buf[30];int p=-1;\n            if(x<0) {putc('-');x=-x;}\n            if(x==0) putc('0');\n            else for(;x;x/=10) buf[++p]=x%10+48;\n            for(;p!=-1;p--) putc(buf[p]);\n        }\n        inline void write(char c) {putc(c);}\n        template <typename Type,typename... Args>\n        inline void write(Type t,Args ...args) {\n            write(t);write(args...);\n        }\n    }\n    using out::write;\n    using out::flush;\n    tp inline Type max(const Type a,const Type b) {\n        if(a<b) return b;\n        return a;\n    }\n    tp inline Type min(const Type a,const Type b) {\n        if(a<b) return a;\n        return b;\n    }\n    tp inline void swap(Type &a,Type &b) {\n        a^=b^=a^=b;\n    }\n    tp inline Type abs(const Type a) {\n        return a>=0?a:-a;\n    }\n#undef tp\n}\nusing namespace quick;\n```\n\n\u76f4\u63a5read\uff0cwrite\u5c31ok\u4e86\n\n\u8fd8\u6709\u4e00\u4e2a**\u5f88\u5173\u952e\u5f88\u5173\u952e**\u7684\u4f18\u5316\uff08\u6572\u9ed1\u677f\n\n\u8fd9\u662f\u6211\u4eec\u5728\u8ba1\u7b97\u7b2ci\u4e2a\u5757\u5230\u7b2cj\u4e2a\u5757\u7684\u4ee3\u7801\uff0c$\\text{kmx[][]}$\u5c31\u662f\u90a3\u4e2a\u6570\u7ec4\uff0ctot\u662f\u5757\u603b\u6570\u3002\n```cpp\n    for(int i=1;i<=tot;++i)\n    {\n        for(int j=i;j<=tot;++j)\n        {\n            kmx[i][j]=kmx[i][j-1];\n            for(int k=kn[j-1]+1;k<=kn[j];++k)\n                kmx[i][j]=max(kmx[i][j],++vis[al[k]]);\n        }\n        memset(vis,0,sizeof(vis));\n    }\n```\n\u4f46\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u7b2c\u4e00\u4e2a\u5757\u4e0e\u6700\u540e\u4e00\u4e2a\u5757\u6839\u672c\u7528\u4e0d\u4e0a\uff0c\u6240\u4ee5\u53ef\u4ee5\u6539\u6210\n```cpp\n    for(int i=2;i<tot;++i)\n    {\n        for(int j=i;j<tot;++j)\n        {\n            kmx[i][j]=kmx[i][j-1];\n            for(int k=kn[j-1]+1;k<=kn[j];++k)\n                kmx[i][j]=max(kmx[i][j],++vis[al[k]]);\n        }\n        memset(vis,0,sizeof(vis));\n    }\n```\n\u5927\u7ea6\u53ef\u4ee5\u5feb0.1s\u3002\n\n\u8fd8\u6709\u8981\u7528memset\uff0c\u5b83\u7edd\u5bf9\u6bd4\u5176\u4ed6\u65b9\u5f0f\u90fd\u5feb\uff08\u81f3\u5c11\u8fd9\u4e2a\u9898\u662f\u7684\uff09\u3002\n\n\u8fd8\u6709max\u4e0d\u8981\u7528STL\uff0c\u81ea\u5df1\u624b\u5199\u8981\u5feb\u4e00\u70b9\u3002\n\n~~\u8fd8\u6709lxl\u662f\u771f\u7684dio~~\n\n### \u5b8c\u6574\u4ee3\u7801\n\n```cpp\ninline int max(const int &a,const int &b)\n{\n    return a>b?a:b;\n}\n\nint main()\n{\n    int t,pre=0;\n    read(n,t);\n    for(int i=1;i<=n;++i)\n        read(a[i]),b[i]=a[i];\n    tot=(n-1)/mxn+1;\n    for(int i=1;i<=tot;++i)\n        kn[i]=kn[i-1]+tot;\n    kn[tot]=n;\n    // tot=(n-1)/mxn+1;\n    // for(int i=1;i<=tot;++i)\n    //     kn[i]=kn[i-1]+mxn;\n    // kn[tot]=n;\n    for(int i=1;i<=tot;++i)\n        for(int j=kn[i-1]+1;j<=kn[i];++j)\n            bel[j]=i;\n    sort(b+1,b+n+1);\n    m=unique(b+1,b+n+1)-b-1;\n    for(int i=1;i<=n;++i)\n        al[i]=lower_bound(b+1,b+m+1,a[i])-b;\n    for(int i=2;i<tot;++i)\n    {\n        for(int j=i;j<tot;++j)\n        {\n            kmx[i][j]=kmx[i][j-1];\n            for(int k=kn[j-1]+1;k<=kn[j];++k)\n                kmx[i][j]=max(kmx[i][j],++vis[al[k]]);\n        }\n        memset(vis,0,sizeof(vis));\n    }\n    for(int i=1;i<=n;++i)\n    {\n        pos[al[i]].push_back(i);\n        vps[i]=pos[al[i]].size()-1;\n    }\n    int l,r;\n    while(t--)\n    {\n        read(l,r);\n        l^=pre;r^=pre;\n        int pl=bel[l],pr=bel[r];\n        if(pl==pr)\n        {\n            int nowans=0;\n            for(int i=l;i<=r;++i)\n                nowans=max(nowans,++vis[al[i]]);\n            for(int i=l;i<=r;++i)\n                vis[al[i]]=0;\n            write(nowans,'\\n');\n            pre=nowans;\n        }\n        else\n        {\n            int nowans=kmx[pl+1][pr-1];\n            for(int i=l;i<=kn[pl];++i)\n            {\n                int siz=pos[al[i]].size();\n                while(vps[i]+nowans<siz&&pos[al[i]][vps[i]+nowans]<=r) ++nowans;\n            }\n            for(int i=kn[pr-1]+1;i<=r;++i)\n                while(vps[i]-nowans>=0&&pos[al[i]][vps[i]-nowans]>=l) ++nowans;\n            write(nowans,'\\n');\n            pre=nowans;\n        }\n    }\n    return 0;\n}\n```\n### \u540e\u8bb0\n\u9996\u5148\u6211\u7684\u4ee3\u7801\u4e0d\u4e00\u5b9a\u5728\u5168\u5929\u5019\u90fd\u80fd\u8fc7\uff08\u4f46\u4f60\u51cc\u6668\u4ea4\u662f\u80af\u5b9a\u80fd\u8fc7\uff09\uff0c\u53e6\u5916\u5982\u679c\u4f60\u8ba4\u771f\u8bfb\u4e86\u6211\u7684\u4ee3\u7801\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u6211\u7528\u7684\u662f\u56fa\u5b9a\u5757\u957fmxn=708\uff0c\u4f46\u6211\u5728\u521d\u59cb\u5316\u5757\u7684\u65f6\u5019\u662f\u8fd9\u4e48\u5199\u7684\n```cpp\n    tot=(n-1)/mxn+1;\n    for(int i=1;i<=tot;++i)\n        kn[i]=kn[i-1]+tot;\n    kn[tot]=n;\n```\nkn\u662f\u5757\u7684\u53f3\u7aef\u70b9\uff0c\u5b9e\u9645\u4e0a\u5e94\u662f\n```cpp\n    tot=(n-1)/mxn+1;\n    for(int i=1;i<=tot;++i)\n        kn[i]=kn[i-1]+mxn;\n    kn[tot]=n;\n```\n\u4f46\u4e0a\u9762\u7684\u5199\u6cd5\u7adf\u7136AC\u4e86\uff0c\u800c\u4e14\u6bd4\u4e0b\u9762\u7684\u5feb\uff0c~~\u8fd9\u4e5f\u7b97\u7384\u5b66\u5361\u5e38\u5417~~\n\n\u5e0c\u671b\u6709\u5927\u4f6c\u80fd\u89e3\u91ca\n\n\u5b8c\u7ed3\u6492\u82b1\uff01",
        "postTime": 1594127467,
        "uid": 199750,
        "name": "\u8bd5\u8bd5\u4e8b\u5b9e\u4e0a\u5417",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5048 \u3010[Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology III\u3011"
    },
    {
        "content": "\u53c8\u662f\u4e00\u9053\u795e\u4ed9\u9898...\n\n\u7167\u65e7\u5206\u5757\uff0c\u4f46\u8fd9\u505a\u6cd5\u611f\u89c9\u8d77\u6765\u8fd8\u662f\u5f88\u8be1\u5f02\u7684...\n\n# noteskey\n\n\n# build\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u6574\u4e2a\u6570\u5217\u5206\u5757\uff0c\u7136\u540e\u79bb\u6563\uff0c\u628a\u6240\u6709\u503c\u4e3a x \u7684\u4f4d\u7f6e\u4e22\u5230 val[x] \u91cc\u9762\u53bb\uff0c\u5e76\u9884\u5904\u7406\u51e0\u4e2a\u5757\u5408\u5e76\u8d77\u6765\u7684\u4f17\u6570\u51fa\u73b0\u6b21\u6570\n\n# query\n\n\u67e5\u8be2\u7684\u65f6\u5019\u5148\u5904\u7406\u4e2d\u95f4\u7684\u51e0\u4e2a\u5927\u5757\uff0c\u7136\u540e\u5c31\u6bcf\u6b21\u5eb7\u5eb7\u4ee5\u5de6\u53f3\u96f6\u6563\u4f4d\u7f6e\u4e3a\u8fb9\u754c\uff0c\u8fd9\u4e2a\u6570\u6700\u591a\u51fa\u73b0\u591a\u5c11\u6b21\uff0c\u66f4\u65b0\u7b54\u6848\n\n\n# code \n\n\u4ee3\u7801\u8fd8\u662f\u6bd4\u8f83\u77ed\u7684\uff0c\u4e5f\u4e0d\u5361\u5e38\uff0c\u86ee\u826f\u5fc3\u7684\u9898\u76ee $QWQ$ %%% $ dl ~lxl$\n\n```\n//by Judge\n#include<bits/stdc++.h>\n#define fp(i,a,b) for(register int i=(a),I=(b)+1;i<I;++i)\nusing namespace std;\nconst int M=5e5,bl=888;\ntypedef int arr[M+3];\ntypedef int ARR[bl+3];\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline bool cmax(int& a,int b){return a<b?a=b,1:0;}\ninline int read(){ int x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} char sr[1<<21],z[20];int CCF=-1,Z;\ninline void Ot(){fwrite(sr,1,CCF+1,stdout),CCF=-1;}\ninline void print(int x,char chr='\\n'){\n    if(CCF>1<<20)Ot();if(x<0)sr[++CCF]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++CCF]=z[Z],--Z);sr[++CCF]=chr;\n}  int n,m,cnt,ans; vector<int> s,val[M+3];\nARR f[bl+3],L,R; arr a,id,pos,sum;\ninline void init(){ cnt=(n-1)/bl+1;\n\tfp(i,1,cnt) L[i]=R[i-1]+1,R[i]=i*bl;\n\tR[cnt]=n; fp(i,1,cnt){\n\t\tmemset(sum,0,sizeof sum);\n\t\tfp(j,L[i],R[i]) id[j]=i;\n\t\tfp(j,i,cnt){\n\t\t\tint& res=f[i][j];\n\t\t\tres=f[i][j-1];\n\t\t\tfp(k,L[j],R[j])\n\t\t\t\t++sum[a[k]],\n\t\t\t\tcmax(res,sum[a[k]]);\n\t\t}\n\t}\n}\nint main(){\n\tn=read(),m=read();\n\ts.push_back(-1);\n\tfp(i,1,n) s.push_back(a[i]=read());\n\tsort(s.begin(),s.end()),\n\ts.erase(unique(s.begin(),s.end()),s.end());\n\tfp(i,1,n){\n\t\ta[i]=lower_bound(s.begin(),s.end(),a[i])-s.begin(),\n\t\tval[a[i]].push_back(i),pos[i]=val[a[i]].size()-1;\n\t}\n\tfor(init();m;print(ans),--m){\n\t\tint l=read()^ans,r=read()^ans; ans=0;\n\t\tif(id[l]==id[r]) fp(i,l,r)\n\t\t\tfor(int res=pos[i];(res+ans)<val[a[i]].size()&&val[a[i]][res+ans]<=r;++ans);\n\t\telse{ ans=f[id[l]+1][id[r]-1];\n\t\t\tfp(i,l,R[id[l]]) for(int res=pos[i];(res+ans)<val[a[i]].size()&&val[a[i]][res+ans]<=r;++ans);\n\t\t\tfp(i,L[id[r]],r) for(int res=pos[i];(res-ans)>=0&&val[a[i]][res-ans]>=l;++ans);\n\t\t}\n\t} return Ot(),0;\n}\n```\n\n\uff08\u624b\u52a8\u683c\u5f0f\u5316\u597d\u8f9b\u82e6\uff0c\u4ee3\u7801\u538b\u884c\u4e0d\u662f\u7f6a\u554a...\uff09\n",
        "postTime": 1554596109,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5048 \u3010[Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology III\u3011"
    },
    {
        "content": "~~\u542c\u8bf4\u5728 NOI Online \u90a3\u4e00\u5929\u5199\u9898\u89e3\u4f1a\u8003\u597d~~\n\n\u849f\u84bb\u7684\u7b2c\u4e00\u9053\u9ed1\u9898~\n\n### \u89e3\u9898\u601d\u8def\n\n\u9996\u5148\u8fd9\u9898\u80af\u5b9a\u662f\u8981\u79bb\u6563\u5316\u7684\u3002\n\n\u5176\u6b21\uff0c\u4f17\u6240\u5468\u77e5\uff0c\u5206\u5757\u7684\u601d\u60f3\u5c31\u662f\u96f6\u6563\u66b4\u529b\uff0c\u5757\u5185\u5feb\u901f\u5904\u7406\u3002\n\n\u90a3\u5148\u60f3\u8fd9\u9898\u600e\u4e48\u5feb\u901f\u5904\u7406\u5462\uff1f\n\n\u6211\u4eec\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4 $f_{ij}$ \u6765\u5b58\u5757 $i$ \u5230 \u5757 $j$ \u4f17\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u9884\u5904\u7406\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5f00\u4e00\u4e2a\u6876\u3002\n\n```cpp\nfor(int i=1;i<=len;i++){\n\tfor(int j=i;j<=len;j++){\n\t\tf[i][j]=f[i][j-1];\n\t\tfor(int k=st[j];k<=ed[j];k++) f[i][j]=max(f[i][j],++sum[a[k]]);\n\t}\n\tfor(int j=st[i];j<=n;j++) if(sum[a[j]]) sum[a[j]]=0;\n}\n```\n\n\u5176\u4e2d $len$ \u662f\u5757\u6570\uff0c$st$ \u548c $ed$ \u5206\u522b\u4ee3\u8868\u5757\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c$sum$ \u5c31\u662f\u90a3\u4e2a\u6876\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u6982\u662f $O(n\\sqrt{n})$?\n\n\u67e5\u8be2\u7684\u65f6\u5019\u5982\u679c\u67e5\u8be2\u533a\u95f4\u5728\u540c\u4e00\u5757\u5185\u7684\uff0c\u66b4\u529b\u5f00\u6876\u6c42\u533a\u95f4\u4f17\u6570\u51fa\u73b0\u6b21\u6570\u5373\u53ef\u3002\n\n\u4f46\u5bf9\u4e8e\u5728\u4e0d\u540c\u5757\u7684\u3002\n\n\u5148 $O(1)$ \u67e5\u8be2 $bel[l]+1$ \u5757\u5230 $bel[r]-1$ \u5757\u7684\u533a\u95f4\u4f17\u6570\uff0c\u5373 $f_{bel[l]+1,bel[r]-1}$\uff0c\u4ee4\u5176\u4e3a $maxn$\u3002\n\n\u6211\u4eec\u7528\u4e00\u4e2a $p$ \u6570\u7ec4\u6c42\u7b2c $i$ \u4e2a\u6570\u4e4b\u524d\u6709\u591a\u5c11\u4e2a $a_i$\uff0c\u5f00\u4e00\u4e2a\u5411\u91cf\uff08vector\uff09 $pos$ \u6765\u5b58\u6bcf\u4e2a $a_i$ \u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n\n\n\u90a3\u4e48\u67e5\u8be2\u5de6\u96f6\u6563\u5757\u7684\u65f6\u5019\u5982\u679c $maxn+p_i < pos_{a_i}.size()$\uff0c\u5373 $maxn$ \u52a0\u4e0a $[1,i-1]$ \u4e2d $a_i$ \u51fa\u73b0\u7684\u6b21\u6570\u8981\u5c0f\u4e8e\u8fd9\u4e2a\u6570\u51fa\u73b0\u7684\u603b\u6b21\u6570\u4e14\u5728\u67e5\u8be2\u533a\u95f4 $[l,r]$ \u4e2d\u6709 $maxn+p_i$ \u8fd9\u4e48\u591a\u4e2a $a_i$ \uff0c\u90a3\u4e48 $maxn++$\u3002\n\n\u67e5\u8be2\u53f3\u96f6\u6563\u5757\u7684\u65f6\u5019\u76f8\u5f53\u4e8e\u662f\u4e0a\u9762\u53cd\u8fc7\u6765\uff0c\u5982\u679c $p_i-maxn\u2265 0$ \u4e14 $pos_{a_i}[{p_i-maxn}]>=l$ \uff0c\u5c31\u662f\u8bf4\u5982\u679c\u8fd9\u4e2a\u6570\u5728 $[l,i-1]$ \u8fd9\u4e2a\u533a\u95f4\u5185\u6709\u6570\u51fa\u73b0\u591a\u4e8e $maxn$ \u6b21\uff0c\u90a3\u4e48 $maxn++$\u3002\n\n\u6700\u540e\u8fd4\u56de $maxn$\u3002\n\n\u603b\u4f53\u6765\u8bf4\uff0c\u8fd9\u9053\u9898\u7684\u601d\u7ef4\u96be\u5ea6\uff08\u5bf9\u6211\u800c\u8a00\uff09\u8fd8\u662f\u633a\u96be\u7684\uff0c\u4f46\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u8fd9\u9898\u7684\u89e3\u6cd5\u4e5f\u662f\u5f88\u5999\u7684\u3002\n\n### AC\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#include<vector>\nusing namespace std;\nconst int N=5e5+1,blocks=710;\nint n,m,lastans,len; \nint a[N],b[N],st[blocks],ed[blocks],bel[N];\nint p[N],f[blocks][blocks],sum[N];\nvector<int> pos[N];\ninline int read(){\n\tint s=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch>='0'&&ch<='9') s=(s<<1)+(s<<3)+ch-'0',ch=getchar();\n\treturn s;\n}\ninline void init(){\n\tlen=ceil((double)n/blocks);\n\tfor(register int i=1;i<=len;i++) st[i]=ed[i-1]+1,ed[i]=i*blocks;\n\ted[len]=n;\n\tfor(int i=1;i<=len;i++) for(int j=st[i];j<=ed[i];j++) bel[j]=i;\n\tfor(int i=1;i<=len;i++){\n\t\tfor(int j=i;j<=len;j++){\n\t\t\tf[i][j]=f[i][j-1];\n\t\t\tfor(int k=st[j];k<=ed[j];k++) f[i][j]=max(f[i][j],++sum[a[k]]);\n\t\t}\n\t\tfor(int j=st[i];j<=n;j++) if(sum[a[j]]) sum[a[j]]=0;\n\t}\n}\ninline int ask(int l,int r){\n\tint qa=bel[l],qb=bel[r];\n\tif(qa==qb){\n\t\tint maxn=0;\n\t\tfor(int i=l;i<=r;i++) maxn=max(maxn,++sum[a[i]]);\n\t\tfor(int i=l;i<=r;i++) if(sum[a[i]]) sum[a[i]]=0;\n\t\treturn maxn;\n\t}\n\tint maxn=f[qa+1][qb-1];\n\tfor(int i=l;i<=ed[qa];i++) while(maxn+p[i]<pos[a[i]].size()&&pos[a[i]][maxn+p[i]]<=r) maxn++;\n\tfor(int i=st[qb];i<=r;i++) while(p[i]-maxn>=0&&pos[a[i]][p[i]-maxn]>=l) maxn++;\n\treturn maxn; \n}\nsigned main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++) a[i]=read(),b[i]=a[i];\n\tsort(b+1,b+n+1);\n\tint num=unique(b+1,b+n+1)-b-1;\n\tfor(int i=1;i<=n;i++) a[i]=lower_bound(b+1,b+num+1,a[i])-b,pos[a[i]].push_back(i),p[i]=pos[a[i]].size()-1;\n\tinit();\n\twhile(m--){\n\t\tint l,r;\n\t\tl=read(),r=read();\n\t\tl^=lastans,r^=lastans;\n\t\tif(l>r) swap(l,r);\n\t\tlastans=ask(l,r);\n\t\tprintf(\"%lld\\n\",lastans);\n\t}\n}\n```\n",
        "postTime": 1616822258,
        "uid": 209808,
        "name": "\u94f6\u6cb3AI",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P5048  [Ynoi2019 \u6a21\u62df\u8d5b] Yuno loves sqrt technology III"
    },
    {
        "content": "[\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5048)\n\nqwq \u611f\u89c9\u8ddf~~\u5f88\u591a\u5e74\u524d~~\u505a\u8fc7\u7684[\u4e00\u9053\u9898](https://www.cnblogs.com/ET2006/p/12730542.html)\u601d\u8def\u5dee\u4e0d\u591a\u7f62\uff0c\u7ed3\u679c\u6211\u7adf\u7136\u6ca1\u60f3\u8d77\u90a3\u9053\u9898\uff1f\uff01\uff01\u6240\u4ee5\u8bf4\u6211 wtcl/wq\n\n\u9996\u5148\u5c06 $a_i$ \u79bb\u6563\u5316\u3002\n\n\u5982\u679c\u5141\u8bb8\u79bb\u7ebf\u90a3\u663e\u7136\u4e00\u904d\u83ab\u961f\u5c31\u80fd\u89e3\u51b3\uff0c\u590d\u6742\u5ea6 $n\\sqrt{n}$\u3002\n\n\u90a3\u5982\u679c\u5f3a\u5236\u5728\u7ebf\u600e\u4e48\u529e\u5462\uff1f\n\n~~\u65e2\u7136\u79bb\u7ebf\u90fd\u53ea\u80fd\u505a\u5230 $n\\sqrt{n}$\uff0c\u90a3\u5728\u7ebf\u80af\u5b9a\u81f3\u5c11 $n\\sqrt{n}$ \u54af~~\n\n\u8003\u8651\u5c06\u539f\u5e8f\u5217\u5206\u5757\uff0c\u6211\u4eec\u9884\u5904\u7406\u5904 $mx_{i,j}$ \u8868\u793a\u7b2c $i$ \u5757\u5f00\u5934\u5230\u7b2c $j$ \u5757\u7ed3\u5c3e\u7684\u533a\u95f4\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u503c\u7684\u51fa\u73b0\u6b21\u6570\u3002\u8fd9\u4e2a\u663e\u7136\u53ef\u4ee5 $n\\sqrt{n}$ \u6c42\u51fa\uff0c\u5177\u4f53\u6765\u8bf4\u679a\u4e3e\u5f00\u5934\u7684\u5757 $i$ \u5e76\u5b9e\u65f6\u7ef4\u62a4\u4e00\u4e2a\u6876 $cnt_i$\uff0c\u7136\u540e\u4e00\u904d\u5411\u540e\u626b\u63cf\u4e00\u904d\u66f4\u65b0\u7b54\u6848\u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u600e\u6837\u6c42\u51fa\u7b54\u6848\uff1a\n\n- \u5982\u679c $l,r$ \u5728\u540c\u4e00\u5757\u4e2d\u90a3\u76f4\u63a5\u66b4\u529b\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $\\sqrt{n}$\u3002\n- \u5982\u679c $l,r$ \u4e0d\u5728\u540c\u4e00\u5757\u4e2d\uff0c\u6211\u4eec\u638f\u51fa\u6c42\u5f97\u7684 $mx$ \u6570\u7ec4\uff0c\u5148\u4ee4 $ans=mx_{bel_l+1,bel_r-1}$\uff0c\u4e5f\u5c31\u662f $[l,r]$ \u4e2d\u95f4\u6574\u5757\u7684\u7b54\u6848\u3002\u7136\u540e\u8003\u8651\u8fb9\u89d2\u5143\u7d20\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u3002\u6211\u4eec\u5bf9\u6bcf\u4e2a\u503c $v$ \u5f00\u4e00\u4e2a ```std::vector<int>``` $pos$ \u7ef4\u62a4\u5176\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u8bb0 $p_i$ \u4e3a $i$ \u5728 $pos_{a_i}$ \u4e2d\u7684\u4f4d\u7f6e\u3002\u5bf9\u4e8e\u5de6\u8fb9\u7684\u8fb9\u89d2\u5143\u7d20 $i\\in[l,R[bel[r]]]$\uff0c\u5982\u679c $i$ \u80fd\u4f7f\u7b54\u6848\u53d8\u5f97\u66f4\u4f18\uff0c\u90a3\u4e48 $a_i$ \u5728 $[l,r]$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u5e94\u5f53\u5927\u4e8e $ans$\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c$pos[a[i]][p[i]+ans]\\leq r$\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u5f80\u53f3\u79fb\uff0c\u6bcf\u6b21\u7b54\u6848\u52a0\u4e00\uff0c\u76f4\u5230 $pos[a[i]][p[i]+ans]>r$\u3002\u5bf9\u4e8e\u53f3\u8fb9\u7684\u8fb9\u89d2\u5143\u7d20\u4e5f\u540c\u7406\uff0c\u4e0d\u96be\u53d1\u73b0\u8fb9\u89d2\u5143\u7d20\u6700\u591a $2\\sqrt{n}$ \u4e2a\uff0c\u6545 $ans$ \u6700\u591a\u81ea\u589e $2\\sqrt{n}$ \u6b21\uff0c\u6545\u67e5\u8be2\u590d\u6742\u5ea6 $\\sqrt{n}$\u3002\n\n\u603b\u590d\u6742\u5ea6 $n\\sqrt{n}$\uff0c\u53ea\u8981\u5e38\u6570\u7a0d\u5fae\u5c0f\u4e00\u70b9\u5373\u53ef\u901a\u8fc7\u672c\u9898\u65f6\u9650\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\nnamespace fastio{\n\t#define FILE_SIZE 1<<23\n\tchar rbuf[FILE_SIZE],*p1=rbuf,*p2=rbuf,wbuf[FILE_SIZE],*p3=wbuf;\n\tinline char getc(){return p1==p2&&(p2=(p1=rbuf)+fread(rbuf,1,FILE_SIZE,stdin),p1==p2)?-1:*p1++;}\n\tinline void putc(char x){(*p3++=x);}\n\ttemplate<typename T> void read(T &x){\n\t\tx=0;char c=getchar();T neg=0;\n\t\twhile(!isdigit(c)) neg|=!(c^'-'),c=getchar();\n\t\twhile(isdigit(c)) x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\t\tif(neg) x=(~x)+1;\n\t}\n\ttemplate<typename T> void recursive_print(T x){if(!x) return;recursive_print(x/10);putc(x%10^48);}\n\ttemplate<typename T> void print(T x){if(!x) putc('0');if(x<0) putc('-'),x=~x+1;recursive_print(x);}\n\tvoid print_final(){fwrite(wbuf,1,p3-wbuf,stdout);}\n}\nconst int MAXN=5e5;\nconst int MAX_BLK=710; \nint n,qu,a[MAXN+5],key[MAXN+5],uni[MAXN+5],num;\nint blk,blk_cnt,L[MAX_BLK+5],R[MAX_BLK+5],bel[MAXN+5];\nint mx[MAX_BLK+5][MAX_BLK+5],cnt[MAXN+5];\nvector<int> pos[MAXN+5];int p[MAXN+5];\nint main(){\n\tscanf(\"%d%d\",&n,&qu);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]),key[i]=a[i];\n\tsort(key+1,key+n+1);key[0]=-1;\n\tfor(int i=1;i<=n;i++) if(key[i]!=key[i-1]) uni[++num]=key[i];\n\tfor(int i=1;i<=n;i++) a[i]=lower_bound(uni+1,uni+num+1,a[i])-uni;\n\tblk=(int)pow(n,0.5);blk_cnt=(n-1)/blk+1;\n\tfor(int i=1;i<=blk_cnt;i++){\n\t\tL[i]=(i-1)*blk+1;R[i]=min(i*blk,n);\n\t\tfor(int j=L[i];j<=R[i];j++) bel[j]=i;\n\t}\n\tfor(int i=1;i<=blk_cnt;i++){\n\t\tmemset(cnt,0,sizeof(cnt));int ret=0;\n\t\tfor(int j=i;j<=blk_cnt;j++){\n\t\t\tfor(int k=L[j];k<=R[j];k++){\n\t\t\t\tcnt[a[k]]++;chkmax(ret,cnt[a[k]]);\n\t\t\t} mx[i][j]=ret;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) pos[a[i]].pb(i),p[i]=pos[a[i]].size()-1;\n\tint ans=0;memset(cnt,0,sizeof(cnt));\n\twhile(qu--){\n\t\tint l,r;scanf(\"%d%d\",&l,&r);l^=ans;r^=ans;ans=0;\n\t\tif(bel[l]==bel[r]){\n\t\t\tfor(int i=l;i<=r;i++) cnt[a[i]]++;\n\t\t\tfor(int i=l;i<=r;i++) chkmax(ans,cnt[a[i]]);\n\t\t\tfor(int i=l;i<=r;i++) cnt[a[i]]--;\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t} else {\n\t\t\tans=mx[bel[l]+1][bel[r]-1];\n\t\t\tfor(int i=l;i<=R[bel[l]];i++){\n\t\t\t\tint cur=p[i];\n\t\t\t\twhile(cur+ans<pos[a[i]].size()&&pos[a[i]][cur+ans]<=r)\n\t\t\t\t\t++ans;\n\t\t\t}\n\t\t\tfor(int i=L[bel[r]];i<=r;i++){\n\t\t\t\tint cur=p[i];\n\t\t\t\twhile(cur-ans>=0&&pos[a[i]][cur-ans]>=l)\n\t\t\t\t\t++ans;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t}\n\treturn 0;\n}\n/*\n10 1\n1 2 3 3 2 3 3 1 1 2\n4 10\n*/\n```\n\n",
        "postTime": 1614408313,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5048\u3010[Ynoi2019 \u6a21\u62df\u8d5b] Yuno loves sqrt technology III\u3011"
    },
    {
        "content": "\u6b64\u9898\u6211\u4eec\u53d1\u73b0\u4ed6\u5f88\u6076\u81ed\u7684\u5361\u4e86\u6211\u4eec\u7684\u5206\u5757\u7a7a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5c3d\u91cf\u7528\u4e00\u4e9b\u7ebf\u6027\u7684\u7ef4\u62a4\u65b9\u6cd5\u4ee5\u53ca\u5927\u5757\u4e4b\u95f4\u7684\u4fe1\u606f\u3002        \n\n\u9996\u5148\u5bf9\u4e8e\u533a\u95f4\u4f17\u6570\u8fd9\u7c7b\u4fe1\u606f\u7ef4\u62a4\uff0c\u6211\u4eec\u901a\u5e38\u90fd\u662f\u5f00\u6570\u7ec4\u5b58\uff0c\u800c\u6570\u7ec4\u5927\u5c0f\u4e5f\u4e00\u822c\u4e0e\u503c\u57df\u6709\u5173\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u79bb\u6563\u5316\u538b\u7a7a\u95f4\u3002\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u5982\u4f55\u5feb\u901f\u5728\u679a\u4e3e\u5230\u4e00\u4e2a\u6570\u65f6\uff0c\u60f3\u77e5\u9053\u4ed6\u662f\u5426\u5728\u8fd9\u4e2a\u533a\u95f4\u51fa\u73b0\u4e86\u8d85\u8fc7 res \u6b21\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u5f00 vector \uff0c\u5c06\u5176\u547d\u4e3a v \u3002\u5bf9\u4e8e\u6bcf\u4e2a ```v[i]``` \u8868\u793a\u7684\u5c31\u662f\u503c\u4e3a i \u7684\u6570\u5728\u539f\u5e8f\u5217\u51fa\u73b0\u4f4d\u7f6e\u7684\u96c6\u5408\uff0c\u63a5\u7740\u6211\u4eec\u6b63\u5e8f\u63d2\u5165\u4f7f\u5176\u62cd\u597d\u5e8f\u3002         \n\n\u6211\u4eec\u5728\u7ef4\u62a4\u4e00\u4e2a ```pto[i]``` \u8868\u793a\u5e8f\u5217\u4e2d\u7b2c i \u4e2a\u6570\u5728\u5bf9\u5e94\u7684 vector \u4e2d\u5728 vector \u7684\u4e0b\u6807\uff0c\u8fd9\u4e9b\u4e1c\u897f\u5168\u662f\u7ebf\u6027\u7a7a\u95f4\u590d\u6742\u5ea6\u3002        \n\n\u63a5\u7740\u6211\u4eec\u80af\u5b9a\u8fd8\u662f\u5206\u5757\u8001\u5957\u8def\uff1a\u8fb9\u89d2\u5757\u52a0\u6574\u4f53\u5757\u3002           \n\n\u9996\u5148\u8fb9\u89d2\u5757\u597d\u50cf\u6709\u70b9\u96be\u4e0b\u624b\uff0c\u6211\u4eec\u4e0d\u59a8\u4ece\u6574\u4f53\u5757\u7684\u89d2\u5ea6\u4e0b\u624b\uff1a\u6211\u4eec\u8bb0\u5f55 ```F[i][j]``` \u8868\u793a\u8fd9\u4e2a\u5757\u533a\u95f4\u7684\u533a\u95f4\u4f17\u6570\u51fa\u73b0\u6b21\u6570\uff0c\u8fd9\u4e2a\u662f\u4e00\u4e2a\u5f88\u7b80\u5355\u7684 $O(n \\sqrt n)$ \u66b4\u529b\uff0c\u6211\u4eec\u5148\u66b4\u529b\u4e24\u5c42\u5faa\u73af\u679a\u4e3e\u533a\u95f4\uff0c\u63a5\u7740\u7531\u4e8e\u4e00\u4e2a\u5757\u957f\u662f $O(\\sqrt n)$ \u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u5c31 $O(n \\sqrt n)$ \u3002        \n\n\u518d\u63a5\u7740\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u96f6\u89d2\u5757\u5373\u53ef\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728 vector \u91cc\u9762\u7528 ```pto[i]``` \u5224\u65ad\u5f53\u524d\u7b54\u6848\u662f\u5426\u592a\u5c0f\uff0c\u5177\u4f53\u800c\u8a00\u6211\u4eec\u628a\u6574\u5757\u7684\u7b54\u6848\u53eb\u505a res \u7528 ```pto[i] - res``` \u548c ```pto[i] + res``` \u6254\u8fdb vector \u91cc\u9762\u770b\u662f\u5426\u8fd8\u5c5e\u4e8e\u8fd9\u4e2a\u533a\u95f4\uff0c\u7531\u4e8e\u6211\u4eec\u5269\u4e0b\u6ca1\u8003\u8651\u7684\u6570\u7684\u4e2a\u6570\u88ab\u4e25\u683c\u63a7\u5236\u5728 $2\\sqrt n$ \u4ee5\u5185\uff0c\u6240\u4ee5\u8fd9\u4e2a check \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u5c31\u63a7\u5236\u5728 $O(\\sqrt n)$  \u4e4b\u5185\u3002        \n\n\u96be\u5ea6\u8bc4\u5206\u865a\u9ad8\uff0c\u81f3\u5c11\u548c Ynoi \u5927\u5206\u5757\u7cfb\u5217\u4e0d\u80fd\u76f8\u63d0\u5e76\u8bba\u5427\uff0c\u4e0d\u8fc7\u8fd8\u662f\u5f88\u6709\u4ef7\u503c\u7684\u4e00\u9053\u9898\u3002          \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst int Len = 6e5 + 5 , SIZE = 720;\nint n,m,a[Len],lsh[Len],cnt,L[SIZE],R[SIZE],pos[Len],pto[Len],bucket[Len],t,F[SIZE][SIZE];\nvector<int> v[Len];\nint Qry(int l,int r)\n{\n\tint LL = pos[l] , RR = pos[r];\n\tif(LL == RR)\n\t{\n\t\tint maxn = 0;\n\t\tfor(int i = l ; i <= r ; i ++) bucket[a[i]] = 0;\n\t\tfor(int i = l ; i <= r ; i ++){bucket[a[i]] ++ ; maxn = max(maxn , bucket[a[i]]);}\n\t\treturn maxn;\t\n\t}\t\n\tint Ans = F[LL + 1][RR - 1];\n\tfor(int i = l ; i <= R[LL] ; i ++)\n\t{\n\t\tint lst = v[a[i]].size();\n\t\twhile(pto[i] + Ans < lst && v[a[i]][pto[i] + Ans] <= r) Ans ++;\n\t}\n\tfor(int i = L[RR] ; i <= r ; i ++)\n\t\twhile(pto[i] - Ans >= 0 && v[a[i]][pto[i] - Ans] >= l) Ans ++; \n\t\t\n\tfor(int i = L[RR] ; i <= r ; i ++)\n\t{\n\t\tint lst = v[a[i]].size();\n\t\twhile(pto[i] + Ans < lst && v[a[i]][pto[i] + Ans] <= r) Ans ++;\n\t}\n\tfor(int i = l ; i <= R[LL] ; i ++)\n\t\twhile(pto[i] - Ans >= 0 && v[a[i]][pto[i] - Ans] >= l) Ans ++; \n\treturn Ans;\n} \nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tlsh[i] = a[i];\n\t}\n\tsort(lsh + 1 , lsh + 1 + n);\n\tcnt = unique(lsh + 1 , lsh + 1 + n) - lsh - 1;\n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\ta[i] = lower_bound(lsh + 1 , lsh + 1 + cnt , a[i]) - lsh;\n\t\tv[a[i]].push_back(i);\n\t\tpto[i] = v[a[i]].size() - 1;\n\t}\n\tt = sqrt(n);\n\tfor(int i = 1 ; i <= t ; i ++) L[i] = (i - 1) * t + 1 , R[i] = i * t;\n\tR[t] = n;\n\tfor(int i = 1 ; i <= t ; i ++)\n\t\tfor(int j = L[i] ; j <= R[i] ; j ++) pos[j] = i;\n\tint maxn = 0;\n\tfor(int i = 1 ; i <= t ; i ++)\n\t{\n\t\tfor(int j = i ; j <= t ; j ++)\n\t\t{\n\t\t\tfor(int k = L[j] ; k <= R[j] ; k ++){bucket[a[k]] ++ ; maxn = max(maxn , bucket[a[k]]);}\n\t\t\tF[i][j] = maxn;\n\t\t}\n\t\tmemset(bucket , 0 , sizeof bucket);\n\t\tmaxn = 0;\n\t}\n\tint lstans = 0;\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\tint l , r ; scanf(\"%d %d\",&l,&r);\n\t\tl = l ^ lstans , r = r ^ lstans;\n\t\tif(l > r) swap(l , r);\n\t\tlstans = Qry(l , r);\n\t\tprintf(\"%d\\n\",lstans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1614062569,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 \t[Ynoi2019 \u6a21\u62df\u8d5b] Yuno loves sqrt technology III"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5048)\n\n## \u9898\u610f\n\n- \u7ed9\u5b9a\u5e8f\u5217\uff0c\u8981\u6c42\u5728\u7ebf\u67e5\u8be2 $[l,r]$ \u4e2d\u4f17\u6570\u51fa\u73b0\u6b21\u6570\u3002\n\n## Sol\n\n\u770b\u5230 $\\text{Ynoi}$ \u8003\u8651\u5206\u5757\u3002\uff08\n\n\u5e38\u89c4\u5957\u8def\uff0c\u5148\u9884\u5904\u7406\u6bcf\u7ec4\u8fde\u7eed\u5757\u5185\u7684\u7b54\u6848\u3002\n\n\u5171 $\\sqrt n$ \u4e2a\u5757\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u4f5c\u4e3a\u5de6\u7aef\u70b9\u6709 $O(n)$ \u7684\u5904\u7406\uff0c\u9884\u5904\u7406 $O(n\\sqrt n)$\u3002\n\n\u8003\u8651\u8be2\u95ee\u64cd\u4f5c\u3002\n\n\u5bf9\u4e8e\u56ca\u62ec\u5728\u5176\u4e2d\u7684\u5757\uff0c\u53ef\u4ee5\u76f4\u63a5\u62ff\u6765\u7528\u3002\n\n\u5269\u4f59\u8fb9\u754c\u4e0a\u6700\u591a $2\\sqrt n$ \u4e2a\u5143\u7d20\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u8fb9\u754c\u5143\u7d20\u8fdb\u884c\u67e5\u8be2\u3002\n\n\u7136\u9e45\u73b0\u5728\u5df2\u7ecf $O(m\\sqrt n)$ \u4e86\uff0c\u4f3c\u4e4e\u67e5\u8be2\u9700\u8981\u5f88\u5c0f\u7684\u590d\u6742\u5ea6\u624d\u884c\u8bf6qaq\u3002\n\n\u8003\u8651\u5229\u7528\u4e0a\u9762\u5df2\u5904\u7406\u7684\u7b54\u6848\u3002\n\n\u5bf9\u4e00\u4e2a\u5143\u7d20\uff0c\u8003\u8651\u5b83\u5411\u53f3\u7b54\u6848\u4f4d\u7684\u540c\u503c\u5143\u7d20\u662f\u5426\u5728\u7b54\u6848\u533a\u95f4\u5185\u3002\n\n\u7531\u4e8e\u6bcf\u6b21\u66f4\u65b0\u7b54\u6848\u4f1a $+1$\uff0c\u800c\u7b54\u6848\u6700\u591a\u4f1a $+2\\sqrt n$\uff0c\u4e8e\u662f\u66f4\u65b0\u7b54\u6848\u590d\u6742\u5ea6\u4e5f\u4e3a $\\sqrt n$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8fd8\u9700\u8003\u8651 $O(1)$ \u89e3\u51b3\u67e5\u8be2\u540c\u503c\u5143\u7d20\u7684\u4f4d\u7f6e\u3002\n\n\u8003\u8651 $\\text{vector}$ \u8bb0\u5f55\u540c\u503c\u5143\u7d20\u4f4d\u7f6e\uff0c\u518d\u968f\u4fbf\u62ff\u4e2a\u4e1c\u897f\u8bb0\u8be5\u6570\u5728 $\\text{vector}$ \u4e2d\u4f4d\u7f6e\u5373\u53ef\u3002\u8bb0\u5f97\u79bb\u6563\u5316\u3002\n\n\u603b\u590d\u6742\u5ea6 $(n+m)\\sqrt n$\n\n### $\\text{Code}$\n\n```cpp\n// wish to get better qwq\n\n#include<bits/stdc++.h>\n#define re register int\n#define pb push_back\n\nusing namespace std;\ntypedef long long ll;\n\ntemplate <typename T> inline void rd(T &x){\n\tint fl=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') fl=-fl;\n\tfor(;isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n\tx*=fl;\n}\nvoid wr(int x){\n\tif(x<0) x=-x,putchar('-');\n\tif(x<10) putchar(x+'0');\n\tif(x>9) wr(x/10),putchar(x%10+'0');\n}\n\ninline int mx(int x,int y){return x<y?y:x;}\n\n// ---------- IO ---------- //\n\nconst int N=5e5+5,SQ=735;\nint n,m,sum[SQ][SQ],a[N],b[N],ans,sub[N],len=SQ-5,cnt[N];\nvector<int> ran[N];\n\n// ---------- Sqrt ---------- //\n\ninline int block(int x){return (x-1)/len+1;}\ninline int L(int x){return (x-1)*len+1;}\ninline int R(int x){return x*len;}\n\ninline void init(){\n\tint lst=block(n);\n\tfor(re i=1;i<=lst;i++){\n\t\tmemset(cnt,0,sizeof(cnt));\n\t\tfor(re j=i;j<=lst;j++){\n\t\t\tsum[i][j]=sum[i][j-1];\n\t\t\tint qaq=L(j),qwq=R(j);\n\t\t\tfor(re k=qaq;k<=qwq;k++) sum[i][j]=mx(sum[i][j],++cnt[a[k]]);\n\t\t}\n\t}\n}\n\ninline int query(int l,int r){\n\tint tot=0;\n\tif(block(l)==block(r)){\n\t\tfor(re i=l;i<=r;i++) cnt[a[i]]=0;\n\t\tfor(re i=l;i<=r;i++) tot=mx(tot,++cnt[a[i]]);\n\t\treturn tot;\n\t}\n\ttot=sum[block(l)+1][block(r)-1];\n\tint qaq=R(block(l));\n\tfor(re i=l;i<=qaq;i++){\n\t\tint nw=sub[i]+tot;\n\t\twhile(nw<ran[a[i]].size()&&ran[a[i]][nw]<=r) tot++,nw++;\n\t}\n\tqaq=L(block(r));\n\tfor(re i=qaq;i<=r;i++){\n\t\tint nw=sub[i]-tot;\n\t\twhile(nw>=0&&ran[a[i]][nw]>=l) tot++,nw--;\n\t}\n\treturn tot;\n}\n\n// ---------- Operation ---------- //\n\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\trd(n);rd(m);\n\tfor(re i=1;i<=n;i++) rd(a[i]),b[i]=a[i];\n\tsort(b+1,b+n+1);\n\tfor(re i=1;i<=n;i++) a[i]=lower_bound(b+1,b+n+1,a[i])-b,ran[a[i]].pb(i),sub[i]=ran[a[i]].size()-1;\n\tinit();\n\tfor(re i=1,u,v;i<=m;i++){\n\t\trd(u);rd(v);\n\t\tu^=ans;v^=ans;\n\t\twr(ans=query(u,v));puts(\"\");\n\t}\n\treturn 0;\n}\n\n// ---------- Main ---------- //\n```\n\n~~\u6539\u8fdb\u4e86\u7801\u98ce\u679c\u7136\u66f4\u597d\u770b\u4e86qwq~~",
        "postTime": 1605707365,
        "uid": 83999,
        "name": "Demoe",
        "ccfLevel": 7,
        "title": "[Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology III \u9898\u89e3 \u5206\u5757"
    }
]