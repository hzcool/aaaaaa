[
    {
        "content": "**\u9898\u89e3\uff1a** \u5b66\u8fc7\u9762\u5411\u5bf9\u8c61\u7684\u540c\u5b66\u5c31\u53ef\u4ee5\u77e5\u9053\uff0c\u6309\u9898\u76ee\u8981\u6c42\u8bbe\u8ba1\u5355\u9879\u5f0f\u7c7b\u548c\u591a\u9879\u5f0f\u7c7b\uff0c\u5b9a\u4e49\u4ed6\u4eec\u7684\u4e00\u7cfb\u5217\u884c\u4e3a\uff0c\u7136\u540e\u8ba9\u4ed6\u4eec\u81ea\u5df1\u81ea\u52a8\u5b8c\u6210\u3002\u8fd9\u6837\u662f\u6700\u7701\u4e8b\u7684\u3002\n\n------------\n\n\u5176\u4e2d\u52a0\u6cd5\u4e58\u6cd5\u4ee5\u53ca\u5408\u5e76\u540c\u7c7b\u9879\u7684\u601d\u8def\u90fd\u5f88\u7b80\u5355\uff0c\u5728\u4ee3\u7801\u7684\u6ce8\u91ca\u91cc\u5199\u7684\u5f88\u6e05\u695a\u3002\n\n\u91cd\u70b9\u8bf4\u4e00\u4e0b\u600e\u4e48toString\u548cfromString\uff0c\u8fd9\u5e94\u8be5\u662f\u6211\u89c9\u5f97\u8fd9\u9053\u9898\u6709\u63d0\u9ad8+\u7684\u96be\u5ea6\u7684\u539f\u56e0\u3002\n\n------------\n\n### toString\n\u9996\u5148\u662ftoString\uff0c\u6211\u7684\u5904\u7406\u65b9\u6cd5\u662f\uff0c\u8ba9\u5355\u9879\u5f0f\u6bcf\u6b21\u628a\u81ea\u5df1\u8f6c\u6210\u5e26\u52a0\u51cf\u7b26\u53f7\u7684string\u8fd4\u56de\uff0c\u591a\u9879\u5f0f\u5c31\u8c03\u7528\u6bcf\u4e2a\u5355\u9879\u5f0f\u7684toString\u62fc\u63a5\uff0c\u6700\u540e\u52a0\u70b9\u7279\u5224\u3002\n\n\u5176\u4e2d\u6709\u4e00\u4e9b\u9700\u8981\u6ce8\u610f\u7684\uff1a\n- \u5f53\u5355\u9879\u5f0f\u4e0d\u662f\u5e38\u6570\u9879\u65f6\uff0c\u7cfb\u6570\u7684+1\u548c-1\u662f\u4e0d\u8f93\u51fa1\u7684\u3002\n- \u53d8\u91cf\u7684\u6307\u6570\u53ef\u4ee5\u662f\u8d1f\u7684\u3002\n- \u7cfb\u6570\u4e3a0\uff0c\u4e0d\u8f93\u51fa\u3002\n- \u5f53\u591a\u9879\u5f0f\u4e2d\u6ca1\u6709\u5355\u9879\u5f0f\uff0c\u8f93\u51fa0\u3002\n- \u5f53\u591a\u9879\u5f0f\u7684\u5f00\u5934\u662f+\u53f7\uff0c\u5219\u53bb\u6389+\u53f7\u3002\n- \u5408\u5e76\u540c\u7c7b\u9879\uff0c\u5e76\u6309\u9898\u76ee\u8981\u6c42\u6392\u5e8f\u3002\n\n------------\n\n### fromString\n\u7136\u540e\u662f\u5de8\u5751\u7684fromString\uff0c\u8c03\u4e86\u4e00\u665a\u4e0a\u3002\n\n\u5176\u4e2d\u6709\u4e00\u4e9b\u9700\u8981\u6ce8\u610f\u7684\uff1a\n- \u9047\u5230\u8fd0\u7b97\u7b26\u548c\u6570\u5b57\u65f6\u53ef\u4ee5\u4e00\u76f4\u8bfb\u5230\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u6216\u8005\u8fd0\u7b97\u7b26\u6216\u8005\u5b57\u7b26\u4e32\u5c3e\uff0c\u8fd9\u4e9b\u90fd\u5c5e\u4e8e\u7cfb\u6570\u3002\u9047\u5230\u5b57\u6bcd\u8868\u793a\u540e\u9762\u6709\u6307\u6570\uff0c\u5426\u5219\u662f\u5e38\u6570\u9879\u3002\n- \u6ca1\u6709\u9047\u5230\u6570\u5b57\u76f4\u63a5\u9047\u5230\u5b57\u6bcd/\u9047\u5230\u8fd0\u7b97\u7b26\u540e\u76f4\u63a5\u9047\u5230\u5b57\u6bcd\uff0c\u7cfb\u6570\u662f\u6697\u542b\u7684\u7edd\u5bf9\u503c1\u3002\n- \u53ef\u80fd\u540c\u4e2a\u5355\u9879\u5f0f\u4e2d\u5b58\u5728\u91cd\u590d\u7684\u5b57\u6bcd\uff0c\u4f8b\u5982AGAA\u8868\u793aA^3G\uff0c\u6ca1\u6709\u8bd5\u8fc7\uff0c\u53ef\u80fd\u6709\u3002\n- \u9047\u5230\u5b57\u6bcd\u540e\u7acb\u523b\u5224\u65ad\u4e0b\u4e00\u4e2a\u662f\u4e0d\u662f^\u7b26\uff0c\u82e5\u662f\u5219\u53ef\u4ee5\u4e00\u76f4\u8bfb\u5230\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u6216\u8005\u8fd0\u7b97\u7b26\u6216\u8005\u5b57\u7b26\u4e32\u5c3e\uff0c\u8fd9\u4e9b\u90fd\u5c5e\u4e8e\u6307\u6570\uff0c\u5c0f\u5fc3\u8d1f\u6307\u6570\u3002\n- \u9047\u5230\u8fd0\u7b97\u7b26/\u5b57\u7b26\u4e32\u672b\u5c3e\u8981\u7acb\u523b\u4fdd\u5b58\u5f53\u524d\u7684\u5355\u9879\u5f0f\u3002\n- \u4e00\u76f4\u8bfb\u5165\u6570\u5b57\u65f6\u591a\u52a0\u76841\u8981\u51cf\u56de\u6765\uff0c\u5426\u5219\u4f1a\u8df3\u8fc7\u4e00\u4e2a\u5b57\u7b26\u3002\n\n------------\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nstruct Mo {\n    //\u5355\u9879\u5f0f\u7531\u4e24\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a\u5e26\u7b26\u53f7\u7684\u7cfb\u6570+\u5b57\u6bcd\u548c\u5e26\u7b26\u53f7\u7684\u6307\u6570\n    ll xs;          //\u5355\u9879\u5f0f\u7684\u7cfb\u6570\n    ll zs[256];     //\u5355\u9879\u5f0f\u7684\u6307\u6570\n\n    Mo() {\n        xs=0;\n        memset(zs,0,sizeof(zs));\n    }\n\n    //\u5355\u9879\u5f0f\u7684\u5c0f\u4e8e\u5e8f\uff0c\u6309\u9898\u76ee\u8981\u6c42\uff0c\u4eceA\u5230Z\uff0c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n    bool operator<(Mo &m) {\n        for(int i='A'; i<='Z'; i++) {\n            if(zs[i]!=m.zs[i]) {\n                return zs[i]<m.zs[i];\n            } else {\n                continue;\n            }\n        }\n        //\u4e3a\u786e\u5b9a\u4e25\u683c\u7684\u5c0f\u4e8e\u5e8f\uff0c\u89c4\u5b9a\u6307\u6570\u76f8\u540c\u7684\u6309\u7cfb\u6570\u6392\u5217\n        return xs<m.xs;\n    }\n\n    //\u6307\u793a\u4e24\u4e2a\u5355\u9879\u5f0f\u80fd\u5426\u5408\u5e76\u540c\u7c7b\u9879\n    bool canMerge(Mo &m) {\n        //\u80fd\u591f\u5408\u5e76\uff0c\u524d\u63d0\u662f\u6307\u6570\u90fd\u76f8\u540c\n        for(int i='A'; i<='Z'; i++) {\n            if(zs[i]!=m.zs[i]) {\n                return false;\n            } else {\n                continue;\n            }\n        }\n        return true;\n    }\n\n    //\u5355\u9879\u5f0f\u7684\u4e58\u6cd5\uff0c\u7cfb\u6570\u76f8\u4e58\uff0c\u5bf9\u5e94\u6307\u6570\u76f8\u52a0\n    Mo operator*(Mo &m) {\n        Mo ret;\n        ret.xs=xs*m.xs;\n        for(int i='A'; i<='Z'; i++) {\n            ret.zs[i]=zs[i]+m.zs[i];\n        }\n        return ret;\n    }\n\n    //\u5355\u9879\u5f0f\u7684\u5e26\u7b26\u53f7\u8f93\u51fa\uff0c\u5373\u4f7f\u5728\u591a\u9879\u5f0f\u7684\u5f00\u5934\u4e5f\u8f93\u51fa\u7b26\u53f7\n    string toString() {\n        if(xs==0) {\n            //\u591a\u9879\u5f0f\u4e0d\u5e94\u8be5\u6709\u7cfb\u6570\u4e3a0\u7684\u5355\u9879\u5f0f\uff0c\u90fd\u8fdb\u5165\u8fd9\u91cc\u4e86\u76f4\u63a5RE\u5427\uff0c\u4e3a0\u7684\u9879\u5728\u8bfb\u5165\u548c\u52a0\u6cd5\u7684\u65f6\u5019\u5e94\u88ab\u6d88\u9664\n            exit(-1);\n            return \"\";\n        }\n\n        string ans=\"\";\n        char tmp[25];   //\u7528\u6765\u628a\u6570\u5b57\u8f6c\u6210\u5b57\u7b26\u4e32\n\n        if(xs>0) {\n            //\u7cfb\u6570\u4e3a\u6b63\uff0c\u52a0\u5165\u5355\u9879\u5f0f\u524d\u7684\u52a0\u53f7\n            ans+=\"+\";\n            if(xs>1) {\n                //\u975e1\u7684\u7cfb\u6570\u5fc5\u987b\u6253\u5370\n                sprintf(tmp,\"%lld\",xs);\n                ans+=string(tmp);\n            }\n        } else {\n            //\u8d1f\u6570\u81ea\u5e26\u7b26\u53f7\uff0c\u4f46-1\u4e0d\u8f93\u51fa\u90a3\u4e2a1\uff0c\u5c31\u5355\u8f93\u51fa\u4e00\u4e2a\u8d1f\u53f7\n            if(xs==-1) {\n                ans+=\"-\";\n            } else {\n                //\u975e-1\u7684\u7cfb\u6570\u5fc5\u987b\u6253\u5370\n                sprintf(tmp,\"%lld\",xs);\n                ans+=string(tmp);\n            }\n        }\n\n        int nozs=1;     //\u6307\u793a\u8fd9\u4e2a\u591a\u9879\u5f0f\u662f\u5426 \u6ca1\u6709\u6307\u6570\u975e\u96f6\n\n        for(int i='A'; i<='Z'; i++) {\n            if(zs[i]!=0) {\n                nozs=0; //\u6709\u6307\u6570\u975e\u96f6\n                //\u6307\u6570\u975e0\uff0c\u8f93\u51fa\u8be5\u5b57\u6bcd\n                ans+=(char)(i);\n                if(zs[i]!=1) {\n                    //\u6307\u6570\u975e1\uff0c\u989d\u5916\u8f93\u51fa\u6307\u6570\uff0c\u8d1f\u6570\u4e5f\u4e00\u6837\u53ef\u4ee5\u8f93\u51fa\n                    ans+=\"^\";\n                    sprintf(tmp,\"%lld\",zs[i]);\n                    ans+=string(tmp);\n                }\n            }\n        }\n\n        if(nozs) {\n            //\u6ca1\u6709\u6307\u6570\u975e\u96f6\uff0c\u8fd9\u4e2a\u662f\u5e38\u6570\u9879\n            if(abs(xs)==1)\n                //\u5e38\u6570\u9879\u7684\u6b63\u8d1f1\u8981\u8f93\u51fa\n                ans+=\"1\";\n        }\n        return ans;\n    }\n};\n\nstruct Poly {\n    //\u5b58\u653e\u5355\u9879\u5f0f\u7684\u5411\u91cf\n    vector<Mo> v;\n\n    Poly() {}\n\n    //\u52a0\u6cd5\uff0c\u4e24\u4e2a\u591a\u9879\u5f0f\u7684\u5355\u9879\u5f0f\u5806\u5728\u4e00\u8d77\uff0c\u5408\u5e76\u540c\u7c7b\u9879\n    Poly operator+(Poly p) {\n        Poly ret;\n        for(auto vi:v) {\n            ret.v.push_back(vi);\n        }\n        for(auto vi:p.v) {\n            ret.v.push_back(vi);\n        }\n\n        ret.Merge();\n        return ret;\n    }\n\n    //\u4e58\u6cd5\uff0c\u4e8c\u7ef4\u904d\u5386\u6bcf\u4e2a\u5355\u9879\u5f0f\uff0c\u4e58\u5728\u4e00\u8d77\uff0c\u7136\u540e\u5806\u5728\u4e00\u8d77\u5408\u5e76\u540c\u7c7b\u9879\n    Poly operator*(Poly p) {\n        Poly ret;\n        for(auto vi:v) {\n            for(auto vpi:p.v) {\n                ret.v.push_back(vi*vpi);\n            }\n        }\n        ret.Merge();\n        return ret;\n    }\n\n    //\u5408\u5e76\u540c\u7c7b\u9879\u5e76\u6392\u5e8f\n    void Merge() {\n        //\u4e34\u65f6\u5411\u91cfvt\n        vector<Mo> vt;\n        for(auto &vi:v) {\n            //\u904d\u5386\u73b0\u6709\u7684\u6bcf\u4e2a\u9879\uff0c\u5728\u4e34\u65f6\u5411\u91cf\u4e2d\u627e\u5b83\u5df2\u7ecf\u63d2\u5165\u7684\u540c\u7c7b\u9879\uff0c\u82e5\u627e\u5230\u53ef\u4ee5\u5408\u5e76\u7684\u9879\uff0c\u7cfb\u6570\u76f8\u52a0\n            int suc=0;\n            for(auto &vti:vt) {\n                if(vti.canMerge(vi)) {\n                    vti.xs+=vi.xs;\n                    suc=1;\n                    break;\n                }\n            }\n            if(suc==0) {\n                //\u6ca1\u6709\u540c\u7c7b\u9879\uff0c\u5219\u63a5\u5728\u4e34\u65f6\u5411\u91cf\u7684\u540e\u9762\n                vt.push_back(vi);\n            }\n        }\n\n        v.clear();\n        //\u6e05\u7a7a\u539f\u5411\u91cf\n        for(auto vti:vt) {\n            //\u904d\u5386\u4e34\u65f6\u5411\u91cf\uff0c\u53bb\u9664\u7cfb\u6570\u4e3a0\u7684\u9879\n            if(vti.xs) {\n                v.push_back(vti);\n            }\n        }\n        //\u6392\u5e8f\uff0c\u6309\u5355\u9879\u5f0f\u5b9a\u4e49\u7684\u987a\u5e8f\u6392\u5e8f\n        sort(v.begin(),v.end());\n    }\n\n    //\u8fd4\u56de\u4e00\u6574\u4e2a\u6392\u5e8f\u597d\u7684\u591a\u9879\u5f0f\uff0c\u5e76\u81ea\u52a8\u53bb\u9664\u6700\u524d\u9762\u7684\u6b63\u53f7\n    string toString() {\n        //\u591a\u9879\u5f0f\u4e2d\u6ca1\u6709\u5355\u9879\u5f0f\uff0c\u8fd4\u56de\u4e00\u4e2a0\n        if(v.size()==0)\n            return \"0\";\n        Merge();   //\u5408\u5e76\u540c\u7c7b\u9879\u5e76\u6392\u5e8f\n        string ans=\"\";\n        for(auto vi:v)\n            ans+=vi.toString();\n\n        //\u524d\u9762\u5df2\u7ecf\u4fdd\u8bc1\u591a\u9879\u5f0f\u81f3\u5c11\u6709\u4e00\u4e2a\u5355\u9879\u5f0f\uff0c\u800c\u4e14\u5b83\u81f3\u5c11\u4f1a\u8f93\u51fa\u4e00\u4e2a\u8d1f\u53f7\uff0c\u6545\u53ef\u4ee5ans[0]\n\n        //\u53bb\u9664\u5f00\u5934\u591a\u4f59\u7684+\u53f7\n        if(ans[0]=='+') {\n            ans=ans.substr(1,ans.length()-1);\n        }\n\n        return ans;\n    }\n\n    void fromString(string s) {\n        int n=s.length();\n\n        ll xs=0;        //\u5e26\u7b26\u53f7\u7cfb\u6570\n        ll zs[256];     //\u5e26\u7b26\u53f7\u6307\u6570\n        memset(zs,0,sizeof(zs));\n\n        for(int i=0; i<=n; i++) {\n            if(i==n) {\n                //\u5230\u8fbe\u5b57\u7b26\u4e32\u7ed3\u5c3e\uff0c\u4fdd\u5b58\u6700\u540e\u4e00\u4e2a\u5355\u9879\u5f0f\n                addMo(xs,zs);\n                return;\n            }\n            if(s[i]=='+'||s[i]=='-'||isdigit(s[i])) {\n                //\u9047\u5230\u6570\u5b57\uff0c\u5904\u7406\u5230\u76f4\u5230\u9047\u5230\u4e0b\u4e00\u4e2a\u5b57\u6bcd\u6216\u8005\u8fd0\u7b97\u7b26\u6216\u8005\u7ed3\u5c3e\n                //\u7b97\u6cd5\u7684\u903b\u8f91\u4fdd\u8bc1\u9047\u5230\u7684\u5fc5\u5b9a\u662f\u7cfb\u6570\u800c\u4e0d\u662f\u6307\u6570\n\n                //\u4fdd\u5b58\u6700\u540e\u4e00\u4e2a\u5355\u9879\u5f0f\n                addMo(xs,zs);\n\n                int flag=1;\n                if(!isdigit(s[i])) {\n                    //\u5f53\u524d\u9047\u5230\u7684\u662f\u7b26\u53f7\n                    //cerr<<\"+\"<<endl;\n                    if(s[i]=='-')\n                        flag=-1;\n                    i++;\n                    //\u6307\u5411\u7b26\u53f7\u7684\u4e0b\u4e00\u4e2a\u5b57\u7b26\n                    if(i==n) {\n                        //\u5230\u8fbe\u5b57\u7b26\u4e32\u7ed3\u5c3e\uff0c\u4fdd\u5b58\u6700\u540e\u4e00\u4e2a\u5355\u9879\u5f0f\uff1f\n                        //\u7b26\u53f7\u540e\u9762\u90fd\u6ca1\u6709\u4e1c\u897f\uff0c\u7cfb\u6570\u662f0\uff0c\u4e0d\u7528\u6dfb\u52a0\u5355\u9879\u5f0f\n                        return;\n                    }\n\n                    if(isdigit(s[i])) {\n                        //\u4e0b\u4e00\u4e2a\u662f\u663e\u5f0f\u6307\u5b9a\u7684\u6570\u5b57\uff0c\u5904\u7406\u5230\u7b2c\u4e00\u4e2a\u975e\u6570\u5b57\n                        while(isdigit(s[i])) {\n                            xs=10ll*xs+(s[i]-'0');\n                            i++;\n                            if(i==n) {\n                                //\u5230\u8fbe\u5b57\u7b26\u4e32\u7ed3\u5c3e\uff0c\u4fdd\u5b58\u6700\u540e\u4e00\u4e2a\u5355\u9879\u5f0f\uff0c\u4e5f\u5c31\u662f\u5e38\u6570\u9879\uff0c\u5f53\u7136\u8981\u6ce8\u610f\u7b26\u53f7\n                                xs*=flag;\n                                addMo(xs,zs);\n                                return;\n                            }\n                        }\n                        //\u73b0\u5728s[i]\u662f\u975e\u6570\u5b57\uff0c\u4e0b\u6b21for\u4f1ai++\uff0c\u8fd9\u91cc\u8865\u507f--\n                        i--;\n                        //\u4fdd\u5b58\u7b26\u53f7\n                        xs*=flag;\n                    } else {\n                        //\u7b26\u53f7\u540e\u9762\u4e0d\u662f\u6570\u5b57\uff0c\u7cfb\u6570\u662f\u9690\u542b\u76841\n                        xs=1;\n                        //\u73b0\u5728s[i]\u662f\u975e\u6570\u5b57\uff0c\u4e0b\u6b21for\u4f1ai++\uff0c\u8fd9\u91cc\u8865\u507f--\n                        i--;\n                        //\u4fdd\u5b58\u7b26\u53f7\n                        xs*=flag;\n                    }\n                } else {\n                    //\u6ca1\u6709\u9047\u5230\u7b26\u53f7\u5c31\u76f4\u63a5\u9047\u5230\u6570\u5b57\uff0c\u662f\u591a\u9879\u5f0f\u7684\u5f00\u5934\n                    while(isdigit(s[i])) {\n                        xs=10ll*xs+(s[i]-'0');\n                        i++;\n                        if(i==n) {\n                            //\u5230\u8fbe\u5b57\u7b26\u4e32\u7ed3\u5c3e\uff0c\u4fdd\u5b58\u6700\u540e\u4e00\u4e2a\u5355\u9879\u5f0f\uff0c\u4e5f\u5c31\u662f\u5e38\u6570\u9879\uff0c\u5f53\u7136\u8981\u6ce8\u610f\u7b26\u53f7\uff0c\u867d\u7136\u4e00\u5b9a\u662f+1\n                            xs*=flag;\n                            addMo(xs,zs);\n                            return;\n                        }\n                    }\n                    //\u73b0\u5728s[i]\u662f\u975e\u6570\u5b57\uff0c\u4e0b\u6b21for\u4f1ai++\uff0c\u8fd9\u91cc\u8865\u507f--\n                    i--;\n                    //\u4fdd\u5b58\u7b26\u53f7\uff0c\u867d\u7136\u4e00\u5b9a\u662f+1\n                    xs*=flag;\n                }\n            } else if(isalpha(s[i])) {\n                //\u9047\u5230\u5b57\u6bcd\uff0c\u5904\u7406\u5230\u76f4\u5230\u9047\u5230\u4e0b\u4e00\u4e2a\u5b57\u6bcd\u6216\u8005\u8fd0\u7b97\u7b26\u6216\u8005\u7ed3\u5c3e\n                //\u6ca1\u6709\u9047\u5230\u8fd0\u7b97\u7b26\u548c\u6570\u5b57\u5c31\u9047\u5230\u591a\u9879\u5f0f\u5f00\u5934\u7684\u5b57\u6bcd\uff0c\u7cfb\u6570\u4e3a1\n                if(xs==0)\n                    xs=1;\n                //\u4fdd\u5b58\u8fd9\u4e2a\u5b57\u6bcd\uff0c\u540d\u5b57\u53eb\u505ac\n                int c=s[i];\n                //cout<<(char)(c)<<\"!!!\"<<endl;\n                //\u6307\u5411\u4e0b\u4e00\u4e2a\u5b57\u7b26\n                i++;\n                if(i==n) {\n                    //\u5230\u8fbe\u5b57\u7b26\u4e32\u7ed3\u5c3e\uff0c\u4fdd\u5b58\u6700\u540e\u4e00\u4e2a\u5355\u9879\u5f0f\n                    //\u5148\u628a\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u76841\u6b21\u65b9\u52a0\u4e0a\n                    zs[c]++;\n                    addMo(xs,zs);\n                    return;\n                }\n                if(s[i]=='^') {\n                    //\u662f\u6307\u6570\u7b26\u53f7\uff0c\u8bf4\u660e\u8981\u7ee7\u7eed\u5904\u7406\n                    i++;\n                    //\u6307\u5411\u4e0b\u4e00\u4e2a\u6570\u5b57\u6216\u8005\u7b26\u53f7\n\n                    int flag=1;\n                    if(!isdigit(s[i])) {\n                        //\u5f53\u524d\u9047\u5230\u7684\u662f\u7b26\u53f7\n                        if(s[i]=='-')\n                            flag=-1;\n                        i++;\n                        //\u6307\u5411\u7b26\u53f7\u7684\u4e0b\u4e00\u4e2a\u5b57\u7b26\n                        if(i==n) {\n                            //\u5230\u8fbe\u5b57\u7b26\u4e32\u7ed3\u5c3e\uff0c\u4f60\u7b26\u53f7\u540e\u9762\u5c45\u7136\u6ca1\u6709\u6570\uff1f\u90a3\u5c31\u8ba4\u4e3a\u6307\u6570\u662f0\u5427\uff0c\u820d\u5f03\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\uff0c\u4fdd\u5b58\u5355\u9879\u5f0f\n                            addMo(xs,zs);\n                            return;\n                        }\n\n                        ll tzs=0;\n                        if(isdigit(s[i])) {\n                            //\u4e0b\u4e00\u4e2a\u662f\u663e\u5f0f\u6307\u5b9a\u7684\u6570\u5b57\uff0c\u5904\u7406\u5230\u7b2c\u4e00\u4e2a\u975e\u6570\u5b57\n                            while(isdigit(s[i])) {\n                                tzs=10ll*tzs+(s[i]-'0');\n                                i++;\n                                if(i==n) {\n                                    //\u5230\u8fbe\u5b57\u7b26\u4e32\u7ed3\u5c3e\uff0c\u4fdd\u5b58\u6700\u540e\u4e00\u4e2a\u5355\u9879\u5f0f\n                                    //\u4fdd\u5b58\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u7684\u6307\u6570\uff0c\u8bb0\u5f97\u4e58\u4e0a\u7b26\u53f7\n                                    zs[c]+=tzs*flag;\n                                    addMo(xs,zs);\n                                    return;\n                                }\n                            }\n                            //\u73b0\u5728s[i]\u662f\u975e\u6570\u5b57\uff0c\u4e0b\u6b21for\u4f1ai++\uff0c\u8fd9\u91cc\u8865\u507f--\n                            i--;\n                            //\u4fdd\u5b58\u7b26\u53f7\n                            tzs*=flag;\n                            //\u4fdd\u5b58\u6307\u6570\n                            zs[c]+=tzs;\n                        } else {\n                            //\u7b26\u53f7\u540e\u9762\u4e0d\u662f\u6570\u5b57\uff0c\u7cfb\u6570\u662f\u9690\u542b\u76841\n                            tzs=1;\n                            //\u73b0\u5728s[i]\u662f\u975e\u6570\u5b57\uff0c\u4e0b\u6b21for\u4f1ai++\uff0c\u8fd9\u91cc\u8865\u507f--\n                            i--;\n                            //\u4fdd\u5b58\u7b26\u53f7\n                            tzs*=flag;\n                            //\u4fdd\u5b58\u6307\u6570\n                            zs[c]+=tzs;\n                        }\n                    } else {\n                        //\u6ca1\u6709\u9047\u5230\u7b26\u53f7\u5c31\u76f4\u63a5\u9047\u5230\u6570\u5b57\uff0c\u662f\u6b63\u7684\u6307\u6570\n                        //cerr<<\"...\\n\"<<endl;\n                        ll tzs=0;\n                        while(isdigit(s[i])) {\n                            tzs=10ll*tzs+(s[i]-'0');\n                            i++;\n                            if(i==n) {\n                                //\u5230\u8fbe\u5b57\u7b26\u4e32\u7ed3\u5c3e\uff0c\u4fdd\u5b58\u6700\u540e\u4e00\u4e2a\u5355\u9879\u5f0f\uff0c\u4e5f\u5c31\u662f\u5e38\u6570\u9879\uff0c\u5f53\u7136\u8981\u6ce8\u610f\u7b26\u53f7\uff0c\u867d\u7136\u4e00\u5b9a\u662f+1\n                                tzs*=flag;\n                                zs[c]+=tzs;\n                                addMo(xs,zs);\n                                return;\n                            }\n                        }\n                        //\u73b0\u5728s[i]\u662f\u975e\u6570\u5b57\uff0c\u4e0b\u6b21for\u4f1ai++\uff0c\u8fd9\u91cc\u8865\u507f--\n                        i--;\n                        //\u4fdd\u5b58\u7b26\u53f7\uff0c\u867d\u7136\u4e00\u5b9a\u662f+1\n                        tzs*=flag;\n                        //\u4fdd\u5b58\u6307\u6570\n                        zs[c]+=tzs;\n                    }\n                } else {\n                    //\u9047\u5230\u4e86\u5b57\u6bcd\u6216\u8fd0\u7b97\u7b26\uff0c\u4fdd\u5b58\u6307\u6570\u5e76\u8865\u507f--\n                    zs[c]++;\n                    i--;\n                }\n            }\n        }\n    }\n\n    //\u5411\u591a\u9879\u5f0f\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5355\u9879\u5f0f\n    void addMo(ll &xs,ll *zs) {\n        if(xs==0)\n            return;\n        Mo m;\n        m.xs=xs;\n        memcpy(m.zs,zs,sizeof(m.zs));\n        v.push_back(m);\n        xs=0;\n        //\u4e0d\u80fdsizeof(zs)\uff0c\u56e0\u4e3a\u8fd9\u91cczs\u4e0d\u662f\u6570\u7ec4\u800c\u53ea\u662f\u4e00\u4e2a\u6307\u9488\n        memset(zs,0,sizeof(ll)*256);\n    }\n};\n\nchar s[10005],t[10005],n;\n\nint main() {\n#ifdef Yinku\n    freopen(\"Yinku.in\",\"r\",stdin);\n#endif // Yinku\n\n    fgets(s,10000,stdin);\n    n=strlen(s);\n\n    for(int i=0,j=0; i<=n; i++) {\n        if(i==n) {\n            t[j]='\\0';\n        }\n        if(s[i]!=' '&&s[i]!='\\n') {\n            t[j++]=s[i];\n        }\n    }\n\n    Poly A;\n    A.fromString(string(t));\n\n    fgets(s,10000,stdin);\n    n=strlen(s);\n\n    for(int i=0,j=0; i<=n; i++) {\n        if(i==n) {\n            t[j]='\\0';\n        }\n        if(s[i]!=' '&&s[i]!='\\n') {\n            t[j++]=s[i];\n        }\n    }\n\n    Poly B;\n    B.fromString(string(t));\n\n#ifdef Yinku\n    cout<<A.toString()<<endl;\n    cout<<B.toString()<<endl;\n#endif // Yinku\n\n    Poly C=A+B;\n    Poly D=A*B;\n    cout<<C.toString()<<endl;\n    cout<<D.toString()<<endl;\n}\n\n```\n",
        "postTime": 1556446003,
        "uid": 177859,
        "name": "Yinku2017",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2281 \u3010[HNOI2003]\u591a\u9879\u5f0f\u7684\u52a0\u6cd5\u548c\u4e58\u6cd5\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u6bd4\u8f83\u7cdf\u7684\u9898\u76ee\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5355\u9879\u5f0f\u7528\u4e00\u4e2aint\u4fdd\u5b58\u7cfb\u6570\uff0c26\u4e2aint\u4fdd\u5b58\u5bf9\u5e94\u6bcf\u4e2a\u4ee3\u6570\u7684\u6307\u6570\n\n\u7136\u540e\u591a\u9879\u5f0f\u5c31\u53ef\u4ee5\u8f6c\u6362\u6210\u5f88\u591a\u4e2a\u5355\u9879\u5f0f\u4e86\n\n\u591a\u9879\u5f0f\u52a0\u6cd5\u5c31\u662f\u628a\u4e24\u4e2a\u591a\u9879\u5f0f\u7684\u5355\u9879\u5f0f\u5408\u5e76\u5230\u4e00\u5757\n\n\u518d\u628a\u6307\u6570\u90fd\u76f8\u7b49\u7684\u5355\u9879\u5f0f\u5408\u5e76\u8d77\u6765\uff0c\u5e76\u5220\u9664\u7cfb\u6570\u4e3a0\u7684\u5355\u9879\u5f0f\n\n\u5bf9\u4e8e\u5224\u65ad\u4e24\u4e2a\u5355\u9879\u5f0f\u7684\u6307\u6570\u662f\u5426\u76f8\u7b49\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7c7b\u4f3c\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u7b97\u6cd5\n\n\u5224\u65ad\u4e24\u4e2a\u5355\u9879\u5f0f\u7684\u6307\u6570\u54c8\u5e0c\u662f\u5426\u76f8\u540c\uff0c\u5728\u5224\u65ad\u4e24\u4e2a\u5355\u9879\u5f0f\u6307\u6570\u662f\u4e0d\u662f\u4e00\u6837\n\n\u5bf9\u4e8e\u4e58\u6cd5\uff0c\u76f4\u63a5\u4e8c\u7ef4\u679a\u4e3e\u5355\u9879\u5f0f\u7136\u540e\u4e58\u8d77\u6765\u52a0\u5230\u65b0\u7684\u591a\u9879\u5f0f\u5c31\u884c\u4e86\n\n\u6240\u4ee5\u8fd9\u9053\u9898\u6700\u96be\u7684\u662f\u8bfb\u5165\u65b9\u9762....\n\n\u8bfb\u5165\u8fd9\u4e1c\u897f\u6ca1\u4ec0\u4e48\u597d\u8bb2\u7684\uff0c\u5c31\u662f\u8003\u7f16\u7a0b\u5e95\u529b\n\n---\n## \u6700\u540e\u8981\u8bf4\u7684\u662f\u6570\u636e\u6709\u70b9\u5751\n\n## \u524d\u4e09\u4e2a\u70b9\u7684\u591a\u9879\u5f0f\u5f00\u5934\u6709\u871c\u6c41\u2018+\u2019\u53f7\n\n## \u5927\u90e8\u5206\u70b9\u7684\u591a\u9879\u5f0f\u91cc\u9762\u6709\u5206\u5f0f\uff0c\u5c31\u662f\u6307\u6570\u4f4d\u4e3a\u8d1f\u6570\n\n\u7136\u540e\u8fd9\u9053\u9898\u5c31\u6ca1\u6709\u4ec0\u4e48\u5176\u4ed6\u8981\u8bf4\u7684\u4e86\n\n\u4ee3\u7801:\n\n\u5feb\u4e09\u767e\u884c\u7684\u4ee3\u7801\u8d34\u4e0a\u6709\u70b9\u4e0d\u7f8e\u89c2\uff0c\u5c31\u653e[\u94fe\u63a5](http://paste.ubuntu.com/25800768/)\u5427\n",
        "postTime": 1508759279,
        "uid": 25508,
        "name": "Night_Aurora",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2281 \u3010[HNOI2003]\u591a\u9879\u5f0f\u7684\u52a0\u6cd5\u548c\u4e58\u6cd5\u3011"
    },
    {
        "content": "### 1. \u591a\u9879\u5f0f\u5b58\u50a8\u65b9\u5f0f\r\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5355\u9879\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u957f\u5ea6\u4e3a $27$ \u7684\u6570\u7ec4\u6765\u8bb0\u5f55\u3002\u5177\u4f53\u6765\u8bf4\uff0c**\u7b2c\u4e00\u4e2a\u6570\u5b57\u8bb0\u5f55\u7cfb\u6570\uff08\u5982\u679c\u662f\u8d1f\u6570\u7cfb\u6570\u4e5f\u662f\u8d1f\u6570\uff09\uff0c\u540e\u9762\u7684 $26$ \u4e2a\u6570\u5b57\u5206\u522b\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u6bcd\u7684\u6307\u6570**\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u8f93\u51fa\u7684\u65f6\u5019\u662f\u6709\u5e8f\u7684\u3002\r\n\r\n### 2. \u5408\u5e76\u540c\u7c7b\u9879\u65b9\u6cd5\r\n\u9996\u5148**\u628a\u8fd9\u4e2a\u591a\u9879\u5f0f\u7684\u6240\u6709\u9879\u5b58\u50a8\u8fdb\u4e00\u4e2a $\\verb|vector|$ \u4e2d**\uff0c\u63a5\u4e0b\u6765\u8fdb\u884c\u5982\u4e0b\u6b65\u9aa4\uff1a  \r\n1. \u53d6\u51fa\u7b2c\u4e00\u4e2a\u6570\u7ec4\uff08\u5355\u9879\u5f0f\uff09\u3002  \r\n1. \u5411\u540e\u6bd4\u8f83\uff0c\u5982\u679c\u6709\u5355\u9879\u5f0f\u4e0e\u53d6\u51fa\u7684\u5355\u9879\u5f0f\u53ef\u4ee5\u5408\u5e76\uff0c\u5c31\u628a\u5b83\u6807\u8bb0\u5220\u9664\uff0c\u540c\u65f6\u8fdb\u884c\u5408\u5e76\u64cd\u4f5c\u3002  \r\n1. \u628a\u7b2c\u4e00\u4e2a\u5355\u9879\u5f0f\u52a0\u5165\u7b54\u6848\u5f53\u4e2d\u5e76\u5220\u9664\u3002  \r\n1. \u5982\u679c $\\verb|vector|$ \u4e2d\u7684\u5355\u9879\u5f0f\u4e2a\u6570\uff08\u5143\u7d20\u4e2a\u6570\uff09$\\ge 2$\uff0c\u5c31\u7ee7\u7eed\u6267\u884c\u7b2c 1. \u6b65\u3002  \r\n##### \u7528\u4ee3\u7801\u6765\u5b9e\u73b0\u5c31\u662f\u8fd9\u6837\uff1a\r\n```cpp\r\nvoid hebing() {\r\n    int del[155], cnt = 0;\r\n    while(pl.size() >= 1) {\r\n        cnt = 0;\r\n        vector<int> x = pl[0];\r\n        for(int i = 1;i < pl.size();++i)\r\n            if(check(x, pl[i])) x[0] += pl[i][0], del[++cnt] = i;\r\n        ans1.push_back(x);\r\n        pl.erase(pl.begin());\r\n        for(int i = 1;i <= cnt;++i) pl.erase(pl.begin()+del[i]-i);\r\n        for(int i = 0;i < ans1.size();++i)\r\n            if(ans1[i][0] == 0) ans1.erase(ans1.begin()+i);\r\n    }\r\n    return;\r\n}\r\n```\r\n\r\n### 3. \u8f93\u51fa\u987a\u5e8f\uff08sort \u6761\u4ef6\uff09\r\n\u9898\u76ee\u8bf4\u6309\u5b57\u6bcd\u8868\u987a\u5e8f\u4ece\u5c0f\u5230\u5927\u6392\u5217\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bd4\u8f83\u4e24\u4e2a\u5355\u9879\u5f0f $\\verb|first|$ \u548c $\\verb|second|$ \u65f6\uff0c\u6bd4\u8f83\u65b9\u6cd5\u9075\u5faa\u4ee5\u4e0b\u89c4\u5219\uff1a  \r\n$\r\n\\sum_{i=1}^{26} f(i) = \\begin{cases}\r\n\\text{first[i] > second[i]}, &1\\\\\r\n\\text{first[i] < second[i]}, &-1\\\\\r\n\\text{first[i] = second[i]}, &0\\\\\r\n\\end{cases}\r\n$  \r\n\u53ea\u8981 $f(i)\\neq 0$\uff0c\u5c31\u76f4\u63a5\u6682\u505c\u6bd4\u8f83\uff0c\u8f93\u51fa\u7ed3\u679c\u3002\u8fd9\u6837\u603b\u80fd\u6bd4\u51fa\u4e00\u4e2a\u4e0d\u4e00\u6837\u7684\uff08\u56e0\u4e3a\u5982\u679c\u4e00\u6837\u5c31\u53ef\u4ee5\u5408\u5e76\u4e86\uff09\u3002  \r\n\u5b9e\u73b0\u8d77\u6765\u4e5f\u6bd4\u8f83\u7b80\u5355\uff1a\r\n```cpp\r\nbool cmp(vector<int> a, vector<int> b) {\r\n    for(int i = 1;i <= 26;++i) {\r\n        if(a[i] < b[i]) return true;\r\n        if(a[i] > b[i]) return false;\r\n    }\r\n}\r\n```\r\n\u4f60\u5b66\u4f1a\u4e86\u5417\uff1f",
        "postTime": 1662470868,
        "uid": 459188,
        "name": "zrt090604",
        "ccfLevel": 4,
        "title": "\u63d0\u4f9b\u4e00\u79cd\u65b0\u7684\u89e3\u9898\u601d\u8def"
    }
]