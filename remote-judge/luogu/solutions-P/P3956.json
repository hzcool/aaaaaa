[
    {
        "content": "### update on 2020.2.16\n\u770b\u5230\u8bc4\u8bba\u533a\u6709\u540c\u5b66\u5bf9\u6392\u7248\u7684\u5efa\u8bae\uff0c\u6545\u5bf9\u6587\u7ae0\u6392\u7248\u8fdb\u884c\u4e00\u4e9b\u4f18\u5316\uff0c\u4f7f\u672c\u9898\u89e3\u7b26\u5408\u73b0\u884c\u9898\u89e3\u89c4\u8303\u3002\n\n## \u5199\u5728\u524d\u9762\n\u8fd9\u662f\u672c\u849f\u84bb\u4e00\u5e74\u524d\u53d1\u7684\u9898\u89e3\uff0c\u56e0\u6b64\u6709\u4e9b\u5730\u65b9\u8bb2\u7684\u4e0d\u662f\u7279\u522b\u6e05\u695a\uff0c\u4ee3\u7801\u4e5f\u6bd4\u8f83\u5197\u957f\u3002\u5176\u5b9e\u8fd9\u4e00\u9898\u6ca1\u6709\u5fc5\u8981\u5c06\u5176\u8f6c\u6362\u4e3a\u56fe\u8bba\u6a21\u578b\uff0c\u5728\u4e0a\u9762\u8dd1\u6700\u77ed\u8def\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4f18\u5148\u961f\u5217\u4f18\u5316\u7684 `BFS` \u3002\n\n`NOIP2017`\u666e\u53ca\u7ec4\u6bd4\u8d5b\uff0c\u662f\u6211\u53c2\u52a0\u7684\u7b2c\u4e00\u6b21\u590d\u8d5b\uff0c\u5f53\u65f6\u6211\u592a\u83dc\u4e86\uff08\u867d\u7136\u8bf4\u73b0\u5728\u7684\u6211\u4e5f\u8fd8\u662f\u5f88\u83dc\uff09\uff0c\u8fd9\u4e00\u9898\u6700\u66b4\u529b\u7684 `dfs` \u90fd\u5199\u4e0d\u5bf9\uff0c\u4e0d\u77e5\u600e\u4e48\u62ff\u5230\u4e86`20`\u5206\uff0c\u5176\u4f59\u7684\u6d4b\u8bd5\u70b9 `WA`+`TLE` \uff0c\u5728\u8003\u573a\u4e0a\u65f6\u95f4\u51e0\u4e4e\u5168\u7528\u6765\u6c2a\u8fd9\u4e00\u9898\uff0c\u7ed3\u679c\u6700\u540e\u4e00\u9898\u60f3\u51fa`50`\u5206 `DP` \u6ca1\u8c03\u5b8c\uff0c`220`\u6eda\u7c97\u3002\u8003\u573a\u4e0a\u4e3b\u8981\u7ea0\u7ed3\u4e8e\u5982\u4f55\u5904\u7406\u9b54\u6cd5\uff0c\u56e0\u6b64\u8003\u540e\u548c[\u540c\u5b66](https://www.luogu.com.cn/user/28910)\u60f3\u5230\u4e86\u8fd9\u6837\u4e00\u79cd\u4ee3\u66ff\u9b54\u6cd5\u7684\u7b97\u6cd5\u3002\n\n\u8fd9\u4e00\u6b21\u4fee\u6539\uff0c\u5c06\u5bf9\u539f\u9898\u89e3\u4e2d\u89e3\u91ca\u7684\u4e0d\u662f\u5f88\u6e05\u695a\u7684\u5730\u65b9\u4f5c\u8f83\u4e3a\u6e05\u6670\u7684\u89e3\u91ca\uff0c\u5e76\u4e14\u4fee\u6539\u4e86\u6700\u540e\u7684\u53c2\u8003\u7a0b\u5e8f\uff0c\u63d0\u4f9b\u672c\u98982\u79cd\u505a\u6cd5\u3002\n\n\u81f3\u4e8e\u672c\u9898\u7684\u4e3b\u6d41\u7b97\u6cd5\uff08 `dfs` +\u8bb0\u5fc6\u5316\u4f18\u5316\uff09\uff0c\u5176\u5b9e\u4ece\u6700\u77ed\u8def\u7684\u89d2\u5ea6\u4e0a\u6765\u8bb2\u662f\u57fa\u4e8e `dfs` \u5b9e\u73b0\u7684 `SPFA` \uff08\u6ca1\u9519\uff0c\u5c31\u662f\u90a3\u4e2a~~\u6b7b\u4e86\u53c8\u6d3b\u4e86\u7684`SPFA`~~\uff09,\u5982\u679c\u8fd9\u4e00\u9898\u6570\u636e\u8303\u56f4\u6269\u5927\uff0c\u5e76\u4e14\u505a\u4e00\u4e9b\u7279\u6b8a\u6784\u9020\uff0c\u662f\u53ef\u4ee5\u88ab\u5361\u6389\u7684\u3002\n\n\u53e6\u5916\uff0c\u672c\u849f\u84bb\u4e0d\u5efa\u8bae\u4f7f\u7528\u57fa\u4e8e `dfs` \u5b9e\u73b0\u7684 `SPFA` \uff0c\u56e0\u4e3a\u8fd9\u5176\u5b9e\u662f\u6700\u597d\u5361\u6389\u4e86 `SPFA` \u3002\n\n----\n\n### \u9898\u610f\u5206\u6790\u4e0e\u8f6c\u5316\n\n> \u7ed9\u4f60\u4e00\u4e2a\u68cb\u76d8\uff0c\u6709\u4e00\u4e9b\u683c\u5b50\u88ab\u67d3\u6210\u4e86\u4e24\u79cd\u989c\u8272\u3002\u4f60\u53ef\u4ee5\u4ece\u4e00\u4e2a\u6709\u989c\u8272\u7684\u683c\u5b50\u8d70\u5411\u53e6\u4e00\u4e2a\u6709\u989c\u8272\u7684\u683c\u5b50\uff0c\u82e5\u4e24\u4e2a\u683c\u5b50\u989c\u8272\u76f8\u540c\uff0c\u5219\u4e0d\u4ed8\u51fa\u4ee3\u4ef7\uff0c\u5426\u5219\u4ed8\u51fa $1$ \u70b9\u4ee3\u4ef7\u3002\n\n\u5982\u679c\u9898\u76ee\u5c31\u5230\u8fd9\u91cc\uff0c\u76f8\u5f53\u4e8e\u4ee3\u4ef7\u4e3a $0$ \u6216\u8005 $1$ \u7684\u56db\u4e2a\u65b9\u5411\u7684\u8d70\u8ff7\u5bab\uff0c\u53ef\u4ee5\u4f7f\u7528\u53cc\u7aef\u961f\u5217 `BFS` \u5b9e\u73b0\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(m^2)$\n\n\n> \u53e6\u5916\uff0c \u4f60\u53ef\u4ee5\u82b1\u8d39 $2$ \u4e2a\u91d1\u5e01\u65bd\u5c55\u9b54\u6cd5\u8ba9\u4e0b\u4e00\u4e2a\u65e0\u8272\u683c\u5b50\u6682\u65f6\u53d8\u4e3a\u4f60\u6307\u5b9a\u7684\u989c\u8272\u3002\u4f46**\u8fd9\u4e2a\u9b54\u6cd5\u4e0d\u80fd\u8fde\u7eed\u4f7f\u7528**\uff0c \u800c\u4e14\u8fd9\u4e2a\u9b54\u6cd5\u7684\u6301\u7eed\u65f6\u95f4\u5f88\u77ed\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u8fd9\u4e2a\u9b54\u6cd5\uff0c\u8d70\u5230\u4e86\u8fd9\u4e2a\u6682\u65f6\u6709\u989c\u8272\u7684\u683c\u5b50\u4e0a\uff0c\u4f60\u5c31\u4e0d\u80fd\u7ee7\u7eed\u4f7f\u7528\u9b54\u6cd5\uff1b \u53ea\u6709\u5f53\u4f60\u79bb\u5f00\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u8d70\u5230\u4e00\u4e2a\u672c\u6765\u5c31\u6709\u989c\u8272\u7684\u683c\u5b50\u4e0a\u7684\u65f6\u5019\uff0c\u4f60\u624d\u80fd\u7ee7\u7eed\u4f7f\u7528\u8fd9\u4e2a\u9b54\u6cd5\uff0c\u800c\u5f53\u4f60\u79bb\u5f00\u4e86\u8fd9\u4e2a\u4f4d\u7f6e\uff08\u65bd\u5c55\u9b54\u6cd5\u4f7f\u5f97\u53d8\u4e3a\u6709\u989c\u8272\u7684\u683c\u5b50\uff09\u65f6\uff0c\u8fd9\u4e2a\u683c\u5b50\u6062\u590d\u4e3a\u65e0\u8272\u3002\n\n\u5982\u679c\u5c31\u6309\u7167\u9898\u610f\u6765**\u76f4\u63a5\u641c\u7d22**\u7684\u8bdd\u4f1a\u6bd4\u8f83\u9ebb\u70e6\uff08\u672c\u849f\u84bb\u5f53\u5e74\u5c31\u662f\u8fd9\u6837\u5199\u6302\u4e86\u7684\uff09\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u7a0d\u5fae\u8f6c\u5316\u4e00\u4e0b\u3002\n\n\uff08\u6ce8\uff1a\u4e0b\u9762\u7684\u5206\u6790\u8fc7\u7a0b\u4e0d\u59a8**\u53ea\u8003\u8651\u4e00\u79cd\u989c\u8272**\uff0c\u56e0\u4e3a\u989c\u8272\u4e0d\u540c\u5e26\u6765\u7684\u4ee3\u4ef7\u7684\u53d8\u5316\u548c\u9b54\u6cd5\u7684\u8f6c\u5316\u6ca1\u6709\u592a\u5927\u5173\u7cfb\uff09\n\n\u6211\u4eec\u73b0\u5728\u7ad9\u5728\u4e00\u4e2a\u65bd\u4e86\u9b54\u6cd5\u7684\u683c\u5b50\u4e0a(\u79f0\u4e3a `via` )\uff0c\u6211\u4eec\u4e0a\u4e00\u6b65\u7684\u683c\u5b50\u79f0\u4e3a `now` \uff0c\u4e0b\u9762\u6211\u4eec\u601d\u8003\u4e0b\u4e00\u6b65\u80fd\u8d70\u5230\u7684\u683c\u5b50\u6709\u54ea\u4e9b\uff08\u79f0\u4e3a `next` \uff09\u3002\n\n\u56e0\u4e3a\u9b54\u6cd5\u4e0d\u80fd\u8fde\u7528\uff0c\u5e76\u4e14\u5982\u679c\u6211\u4eec\u8d70\u56de\u4e0a\u4e00\u6b65\u7684\u683c\u5b50\uff0c\u7ed3\u679c\u4e00\u5b9a\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u7684\u53ea\u6709\u5982\u4e0b\u7684\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/71445.png)\n\n\u5176\u4e2d\u84dd\u8272\u7684\u683c\u5b50\u53ef\u80fd\u6210\u4e3a `next` \uff08**\u524d\u63d0\uff0c\u5728\u672a\u4f7f\u7528\u9b54\u6cd5\u7684\u60c5\u51b5\u4e0b\u8fd9\u4e9b\u683c\u5b50\u672c\u6765\u6709\u8272**\uff09\u3002\n\n\u77e5\u9053\u4e86 `next` \u53ef\u80fd\u7684\u51b3\u7b56\u96c6\u5408\uff0c\u6211\u4eec\u4e0b\u9762\u6765\u770b\u5982\u4f55\u628a\u9b54\u6cd5**\u7b49\u4ef7\u8f6c\u6362**\u6389\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/32552.png)\n\n\u5982\u56fe\uff0c\u53ef\u4ee5\u5c06\u683c\u5b50 `via` \u65bd\u52a0\u9b54\u6cd5\uff0c\u4ece `now` \u8d70\u5411 `next` \uff0c\u5b9e\u73b0\u4e86\u5411**\u53f3\u4e0b\u65b9**\u7684\u8f6c\u79fb\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/32553.png)\n\n\u5982\u56fe\uff0c\u53ef\u4ee5\u5c06\u683c\u5b50 `via` \u65bd\u52a0\u9b54\u6cd5\uff0c\u4ece `now` \u8d70\u5411 `next` \uff0c\u5b9e\u73b0\u4e86\u5411**\u5de6\u4e0b\u65b9**\u7684\u8f6c\u79fb\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/32554.png)\n\n\u5982\u56fe\uff0c\u53ef\u4ee5\u5c06\u683c\u5b50 `via` \u65bd\u52a0\u9b54\u6cd5\uff0c\u4ece `now` \u8d70\u5411 `next` \uff0c\u5b9e\u73b0\u4e86\u5411**\u4e0b\u8fde\u8df3$2$\u683c**\u7684\u8f6c\u79fb\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/32555.png)\n\n\u5982\u56fe\uff0c\u53ef\u4ee5\u5c06\u683c\u5b50 `via` \u65bd\u52a0\u9b54\u6cd5\uff0c\u4ece `now` \u8d70\u5411 `next` \uff0c\u5b9e\u73b0\u4e86\u5411**\u53f3\u8fde$2$\u683c**\u7684\u8f6c\u79fb\u3002\n\n\u540c\u7406\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5411**\u5de6\u4e0a\u65b9**\uff0c\u5411**\u53f3\u4e0a\u65b9**\uff0c\u5411**\u4e0a\u8fde\u8df3$2$\u683c**\uff0c\u5411**\u5de6\u8fde\u8df3$2$\u683c**\u7684\u8f6c\u79fb\u3002\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u5f97\u5230**\u4f7f\u7528\u9b54\u6cd5**\u53ef\u4ee5\u8f6c\u79fb\u5230\u7684\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/32556.png)\n\n\u7efc\u5408\u4e00\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7ed3\u8bba\uff1a\u4ece `now` \u8fd9\u4e2a\u683c\u5b50\u51fa\u53d1\uff0c\u4f7f\u7528\u6216\u4e0d\u4f7f\u7528\u9b54\u6cd5\u53ef\u4ee5\u8d70\u5230\u7684**\u6709\u8272\u683c\u5b50**\u7684\u60c5\u51b5\u5982\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/32558.png)\n\n\u5176\u4e2d\u7eff\u8272\u683c\u5b50\u56e0\u4e3a\u4f7f\u7528\u9b54\u6cd5\uff0c\u4e0d\u9700\u8981\u82b1\u8d39\u4ee3\u4ef7\uff0c\u84dd\u8272\u7684\u683c\u5b50\u56e0\u4e3a\u4f7f\u7528\u4e00\u6b21\u9b54\u6cd5\uff0c\u9700\u8981\u989d\u5916\u82b1\u8d39 $2$ \u70b9\u4ee3\u4ef7\u3002\uff08\u540c\u6837\uff0c\u8fd9\u91cc\u4e0d\u8003\u8651\u683c\u5b50\u5b9e\u9645\u989c\u8272\u5bf9\u4ee3\u4ef7\u7684\u5f71\u54cd\uff09\n\n\u4e5f\u8bb8\u6709\u540c\u5b66\u4f1a\u95ee\u4e86\uff0c\u5982\u679c\u51fa\u73b0\u4e0b\u56fe\u4e2d\u7684\u8fd9\u79cd\u60c5\u51b5\u5462\uff1f\n\n![](https://cdn.luogu.com.cn/upload/pic/71453.png )\n\n\u663e\u7136\u4ece `now` \u51fa\u53d1\u5148\u5411\u53f3\u8d70\u540e\u5411\u4e0b\u8d70\u662f\u66f4\u4f18\u7684\uff0c\u4f46\u662f\u6309\u7167\u6211\u4eec\u521a\u521a\u6240\u8ff0\u7684\u65b9\u6cd5\uff0c\u5bf9 `now` \u8fd9\u4e2a\u683c\u5b50\u8ba8\u8bba\uff0c\u53f3\u4e0b\u89d2\u7684\u6709\u8272\u683c\u5b50 `B` \u4f1a\u88ab\u8ba4\u4e3a\u8981\u4f7f\u7528\u9b54\u6cd5\uff0c\u51ed\u7a7a\u591a\u51fa\u4e86$2$\u70b9\u4ee3\u4ef7\uff0c\u6211\u4eec\u521a\u521a\u7684\u65b9\u6cd5\u80fd\u5f97\u5230\u6700\u4f18\u89e3\u5417\uff1f\n\n\u8bd5\u95ee\uff1a `now` \u53f3\u9762\u7684\u683c\u5b50 `A` \u662f\u4e0d\u662f\u6709\u8272\u683c\u5b50\uff1f\n\n\u65e2\u7136 `A` \u662f\u6709\u8272\u683c\u5b50\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u4f1a\u5bf9 `A` \u8ba8\u8bba\uff0c `now` \u53ef\u4ee5\u4e0d\u82b1\u8d39\u4ee3\u4ef7\u5230\u8fbe `A` \uff0c `A` \u53c8\u53ef\u4ee5\u4e0d\u82b1\u8d39\u4ee3\u4ef7\u5230\u8fbe `B` \uff0c\u56e0\u6b64 `now` \u5230 `B` \u683c\u5b50\u7684\u4ee3\u4ef7\u6700\u7ec8\u4f1a\u88ab `now->A->B` \u7684\u8def\u5f84\u53d6\u4ee3\uff0c\u4e0d\u4f1a\u51fa\u73b0\u4e22\u5931\u6700\u4f18\u89e3\u7684\u60c5\u51b5\u3002\n\n\u8fd9\u65f6\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff1a\u666e\u901a\u7684 `BFS` \u4f3c\u4e4e\u5b9e\u73b0\u4e0d\u4e86\u8fd9\u79cd\u7b54\u6848\u66f4\u65b0\uff0c\u5177\u4f53\u7684\u5206\u6790\u4e0e\u89e3\u6cd5\u5c06\u5728\u4e0b\u6587\u8bb2\u89e3\u3002\n\n----\n\n#### \u73b0\u5728\u6211\u4eec\u5148\u628a\u989c\u8272\u52a0\u4e0a\u53bb\uff1a\n\n1. \u4e0e\u9b54\u6cd5\u65e0\u5173\u7684$4$\u79cd\u8f6c\u79fb\uff0c\u540c\u8272\u4ee3\u4ef7\u4e0d\u53d8\uff0c\u5f02\u8272\u4ee3\u4ef7\u52a0 $1$ \u3002\n2. \u6d89\u53ca\u9b54\u6cd5\u7684$8$\u79cd\u8f6c\u6362\uff0c\u5982\u679c\u989c\u8272\u76f8\u540c\uff0c\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/32560.png)\n\n\u5f53\u683c\u5b50 `via` \u53d8\u6210\u9ec4\u8272\u7684\u683c\u5b50\u7684\u65f6\u5019\uff0c\u4ed8\u51fa\u7684\u4ee3\u4ef7\u6700\u5c0f\uff0c\u4e00\u5171\u4e3a$2$\u4e2a\u4ee3\u4ef7\u3002\n\n\u5982\u679c\u989c\u8272\u4e0d\u540c\uff0c\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/32561.png)\n\n\u5f53\u683c\u5b50 `via` \u53d8\u6210\u9ec4\u8272\u6216\u8005\u7ea2\u8272\u7684\u65f6\u5019\uff0c\u4ed8\u51fa\u7684\u4ee3\u4ef7\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4e00\u5171\u4e3a$3$\u4e2a\u4ee3\u4ef7\u3002\n\n----\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u5c06\u9898\u76ee\u8f6c\u5316\u4e3a\u5982\u4e0b\uff1a\n\n> \u4f60\u9700\u8981\u4ece$(1,1)$\u8d70\u5230$(m,m)$\uff0c\u4f60\u53ea\u80fd\u8d70\u5728\u6709\u989c\u8272\u7684\u683c\u5b50\u4e2d\uff0c\u5e76\u4e14\u4f7f\u5f97\u4f60\u6240\u82b1\u8d39\u7684\u4ee3\u4ef7\u6700\u5c0f\u3002\n\n> \u5f53\u4f60\u7ad9\u5728\u4e00\u4e2a\u6709\u989c\u8272\u7684\u683c\u5b50\u4e0a\u7684\u65f6\u5019\uff0c\u4f60\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b$2$\u79cd\u64cd\u4f5c\uff1a\n> 1. \u5411\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u524d\u884c\u3002\n> 2. \u5411\u5de6\u4e0a\u3001\u5de6\u4e0b\u3001\u53f3\u4e0a\u3001\u53f3\u4e0b\u3001\u5411\u4e0a\u8fde\u8df3$2$\u683c\u3001\u5411\u4e0b\u8fde\u8df3$2$\u683c\u3001\u5411\u5de6\u8fde\u8df3$2$\u683c\u3001\u5411\u53f3\u8fde\u8df3$2$\u683c\u524d\u884c\u3002\n\n> \u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f\u64cd\u4f5c $2$ \uff0c\u4f60\u5c06\u989d\u5916\u4ed8\u51fa $2$ \u70b9\u4ee3\u4ef7\u3002\n\n> \u5728\u4e00\u6b21\u64cd\u4f5c\u4e2d\uff0c\u5982\u679c\u4f60**\u8fd9\u6b21\u64cd\u4f5c\u7684\u8d77\u70b9\u683c\u5b50\u4e0e\u7ec8\u70b9\u683c\u5b50**\u989c\u8272\u4e0d\u540c\uff0c\u4f60\u5c06\u4ed8\u51fa$1$\u70b9\u4ee3\u4ef7\u3002\n\n\u5b8c\u4e86\u5417\uff1f\n\n**\u663e\u7136\u6ca1\u6709\uff01**\n\n\u5982\u679c$(m,m)$\u6ca1\u6709\u989c\u8272\u600e\u4e48\u529e\uff1f\n\n\u56e0\u4e3a\u9b54\u6cd5\u4e0d\u80fd\u8fde\u7eed\u4f7f\u7528\uff0c\u6240\u4ee5\u53ea\u53ef\u80fd\u4ece$(m,m-1)$\uff0c$(m-1,m)$\u8f6c\u79fb\u3002\n\n1. \u5982\u679c\u90fd\u6ca1\u6709\u989c\u8272\uff0c\u5c31\u4e0d\u53ef\u80fd\u5230\u8fbe$(m,m)$\u3002\n2. \u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u6709\u989c\u8272\uff0c\u76f8\u5f53\u4e8e$(m,m)$\u53d8\u5316\u4e3a\u6709\u989c\u8272\u7684\u90a3\u4e2a\u683c\u5b50\u7684\u989c\u8272\uff0c\u603b\u4ee3\u4ef7\u4e3a$2$\u3002\n3. \u5982\u679c$2$\u4e2a\u90fd\u6709\u989c\u8272\uff0c\u8f6c\u79fb\u603b\u4ee3\u4ef7\u90fd\u662f$2$\uff0c\u6700\u540e\u505a\u4e00\u4e0b\u6bd4\u8f83\u5c31\u53ef\u4ee5\u4e86\u3002\n\n----\n\n## \u7b97\u6cd5\u5206\u6790\n\u4e0b\u9762\u6211\u4eec\u4e3b\u8981\u7814\u7a76 `BFS` \u7684\u5b9e\u73b0\u3002\n\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5c06\u9898\u610f\u8f6c\u5316\u4e3a\u7ecf\u5178\u7684\u8d70\u8ff7\u5bab\u6a21\u578b\uff0c\u89e3\u51b3\u7684\u7ecf\u5178\u65b9\u6cd5\u662f `BFS` \uff0c\u4f46\u662f\u53c8\u6709\u6240\u4e0d\u540c\u3002\u6bcf\u4e00\u6b21\u62d3\u5c55\u7684\u4ee3\u4ef7\u4e0d\u4e00\u5b9a\u76f8\u540c\uff0c\u6b64\u65f6\u53ef\u80fd\u51fa\u73b0\u5982\u4e0b\u7684\u60c5\u51b5\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/39190.png)\n\n~~\u56e0\u4e3a\u4e0d\u6ee1\u8db3\u4e09\u89d2\u5f62\u4e0d\u7b49\u5f0f\uff0c\u6240\u4ee5\u4ece\u5b9e\u9645\u6765\u8bb2\u8fd9\u91cc\u4e0d\u5e94\u8be5\u753b\u6210\u4e09\u89d2\u5f62\u3002\u4f46\u56e0\u4e3a\u8fd9\u5f20\u56fe\u7b80(wo)\u660e(bi)\u76f4(jiao)\u89c2(lan)\uff0c\u6240\u4ee5\u8fd9\u5f20\u56fe\u5c31\u4e0d\u91cd\u753b\u4e86\u3002~~\n\n\u663e\u7136\uff0c\u6700\u77ed\u8def\u5f84\u5e94\u8be5\u662f `1->2->3` \uff0c\u800c\u5982\u679c\u6211\u4eec\u7528\u4e00\u822c\u7684\u961f\u5217\u5b9e\u73b0\u5bbd\u641c\uff0c\u5c31\u4f1a\u5f97\u5230\u9519\u8bef\u7684\u7b54\u6848\u3002\n\n\u6211\u4eec\u5148\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff1a\u4e3a\u4ec0\u4e48\u7ecf\u5178\u7684\u8d70\u8ff7\u5bab\u6a21\u578b\u53ef\u4ee5\u76f4\u63a5\u666e\u901a\u961f\u5217 `BFS` \uff1f\n\n\u4e0d\u96be\u5f97\u51fa\uff1a\u5728\u8fd9\u6837\u7684 `BFS` \u4e2d\uff0c\u6bcf\u4e00\u6b21\u6269\u5c55\u7684\u4ee3\u4ef7\u90fd\u76f8\u7b49**\u4e14\u4e3a\u6b63\u6570**\uff0c**\u540e\u8fdb\u5165\u961f\u5217\u7684\u72b6\u6001\u4e00\u5b9a\u4e0d\u5982\u5148\u8fdb\u5165\u961f\u5217\u7684\u72b6\u6001\u4f18**\uff08\u5148\u8fdb\u5165\u961f\u5217\u7684\u72b6\u6001\u7684\u4ee3\u4ef7 $\\le$ \u540e\u8fdb\u5165\u961f\u5217\u7684\u72b6\u6001\u7684\u4ee3\u4ef7\uff09\u3002\n\n\u57fa\u4e8e\u8fd9\u6837\u7684\u5355\u8c03\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\uff1a\u7b2c\u4e00\u6b21\u8bbf\u95ee\u5230\u67d0\u4e00\u4e2a\u72b6\u6001\u65f6\uff0c\u4e00\u5b9a\u662f\u8fd9\u4e2a\u72b6\u6001\u7684\u6700\u4f18\u60c5\u51b5\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u8d2a\u5fc3\u601d\u60f3\u3002\u6211\u4eec\u628a\u8fd9\u79cd\u601d\u60f3\u5e94\u7528\u5230\u66f4\u5177\u6709\u666e\u904d\u6027\u7684\u60c5\u51b5\u4e2d\uff1a\u4ee3\u4ef7\u4e0d\u4e00\u5b9a\u76f8\u7b49\u3002\n\n\u73b0\u5728\u6211\u4eec\u6709$2$\u79cd\u89e3\u51b3\u65b9\u6cd5\uff1a\n- \u666e\u901a\u961f\u5217+\u8fed\u4ee3\u601d\u60f3(~~\u5df2\u7ecf\u6b7b\u6389\u7684`SPFA`~~)\n\n\u6211\u4eec\u65e0\u6cd5\u4fdd\u8bc1\u7b2c\u4e00\u6b21\u8bbf\u95ee\u5230\u67d0\u4e00\u4e2a\u72b6\u6001\u7684\u6700\u4f18\u6027\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u5c06**\u88ab\u4f18\u5316\u7684\u72b6\u6001**\u4e0d\u65ad\u538b\u5165\u961f\u5217\u4e2d\uff0c\u76f4\u5230\u6240\u6709\u72b6\u6001\u90fd\u662f\u6700\u4f18\u7684\u3002\u8fd9\u79cd\u7b97\u6cd5\u6700\u574f\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8fbe\u5230 $O(n^2)$ \uff08n\u4e3a\u72b6\u6001\u79cd\u6570\uff09\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u4e3a $O(n)$ \u3002\n- \u4f18\u5148\u961f\u5217( `Dijkstra` )\n\n\u6211\u4eec\u53ea\u8981\u6ee1\u8db3\u6bcf\u4e00\u6b21\u90fd\u4ece\u72b6\u6001\u961f\u5217\u4e2d\u53d6\u51fa\u6700\u5c0f\u4ee3\u4ef7\u7684\u72b6\u6001\uff0c\u5373\u53ef\u6ee1\u8db3\u7b2c\u4e00\u6b21\u8bbf\u95ee\u6700\u4f18\u6027\u3002\u4f18\u5148\u961f\u5217\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u79cd\u64cd\u4f5c\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log_2n)$ \u3002\n\n\u6709\u4e00\u79cd\u6bd4\u8f83\u5f62\u8c61\u5730\u89e3\u91ca\uff0c\u6211\u4eec\u53ef\u4ee5\u628a `BFS` \u7684\u68cb\u76d8\u770b\u4f5c\u56fe\uff0c\u5373 `Dijkstra` \u7528\u6765\u89e3\u51b3\u6700\u77ed\u8def\u3002\u628a\u8fd9\u4e2a\u56fe **\u201c\u62ce\u8d77\u6765 \u201d**\uff0c\u6700\u521d\u62ce\u7740\u8d77\u70b9\uff0c\u7136\u540e\u627e\u5f53\u524d\u6700\u9ad8\u7684\u4e14\u6ca1\u6709\u88ab\u62ce\u8fc7\u7684\u7ed3\u70b9\uff0c\u4f5c\u4e3a\u4e0b\u4e00\u6b21\u62ce\u8d77\u6765\u7684\u7ed3\u70b9\uff0c\u5982\u6b64\u4e0d\u65ad\u53bb\u62ce\uff0c\u76f4\u5230\u628a\u7ec8\u70b9\u7ed3\u70b9\u62ce\u8d77\u6765\uff0c\u8fd9\u6837\u62ce\u5c31\u53ef\u4ee5\u627e\u5230\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\n\u6ce8\u610f\uff0c\u4f7f\u7528\u4f18\u5148\u961f\u5217\u4f18\u5316\u7684 `BFS` \u4e0d\u80fd\u5904\u7406**\u6709\u8d1f\u6570\u4ee3\u4ef7**\u7684\u60c5\u51b5\uff0c\u53cd\u4f8b\u5982\u4e0b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/71455.png)\n\n\u6211\u4eec\u8981\u4ece `S` \u8d70\u5230 `T` \uff0c\u7b2c\u4e00\u6b65\u5c31\u53ef\u4ee5\u627e\u5230\u6240\u8c13\u7684\u6700\u5c0f\u4ee3\u4ef7$2$\uff0c `A` \u867d\u7136\u4e5f\u5728\u961f\u5217\u4e2d\uff0c\u4f46\u662f$10$\u7684\u4ee3\u4ef7\u6bd4$2$\u5927\uff0c\u56e0\u6b64\u4e0d\u4f1a\u88ab\u53d6\u51fa\u3002\n\n\u4f46\u5b9e\u9645\u4e0a\uff0c `S` \u8d70\u5230 `T` \u7684\u6700\u5c0f\u4ee3\u4ef7\u662f$-90$\uff0c\u8def\u5f84\u4e3a `S->A->T` ,\u6211\u4eec\u5f97\u5230\u4e86\u9519\u8bef\u7684\u7b54\u6848\u3002\n\n----\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u6210\u529f\u8df3\u51fa\u4e86\u547d\u9898\u4eba\u6316\u7ed9\u6211\u4eec\u7684\u7684\u601d\u7ef4\u9677\u9631\uff0c\u6ca1\u6709\u76f4\u63a5\u6309\u7167\u9898\u610f\u641c\u7d22\uff0c\u800c\u662f\u5c06\u9898\u610f\u8f6c\u5316\uff0c\u7b80\u5316\u95ee\u9898\uff0c\u5927\u5927\u964d\u4f4e\u4e86\u4ee3\u7801\u5b9e\u73b0\u590d\u6742\u5ea6\u3002\uff08\u542c\u8bf4\u76f4\u63a5\u6309\u7167\u9898\u610f `dfs` \u4f1a\u70b8\u6808\u7a7a\u95f4\uff0c\u867d\u7136 `NOIP` \u5f00\u5927\u6808\u7a7a\u95f4\uff0c\u4f46\u662f\u4f60\u5728\u8dd1\u5927\u6837\u4f8b\u7684\u65f6\u5019\u770b\u5230\u7a0b\u5e8f\u62a5 `RE` \u8fd8\u627e\u4e0d\u5230\u54ea\u513f\u9519\u4e86\uff0c\u5bf9\u63a5\u4e0b\u6765\u505a\u9898\u7684\u5fc3\u6001\u4f1a\u6709\u5f88\u5927\u5f71\u54cd\uff09\n\nupdate on 2020.2.16. `CSP-S 2019` \u7684\u65f6\u5019\uff0c\u6211\u7684\u51e0\u4e2a\u540c\u5b66\u56e0\u4e3a\u4e0d\u4f1a\u5f00\u5927\u6808\u7a7a\u95f4 `Day1T2` \u6ca1\u6cd5\u6d4b\u5927\u6837\u4f8b\uff0c\u4e22\u5206\u4e25\u91cd\uff0c\u4e14\u5f71\u54cd\u5230 `Day2` \u7684\u53d1\u6325\u3002\n\n----\n\n### \u4ee3\u7801\u5b9e\u73b0\n1.  `BFS` +\u4f18\u5148\u961f\u5217\u4f18\u5316\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define inf 0x3f3f3f3f\ntemplate <typename Tp>\nvoid read(Tp &x){\n\tchar c=getchar();x=0;int f=1;\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}x*=f;\n}//\u5feb\u901f\u8bfb\u5165\uff0c\u4e0d\u89e3\u91ca\nstruct node{\n\tint x,y,c,w; \n\tbool operator <(node b)const{//const\u4e0d\u53ef\u4e22 \n\t\treturn w>b.w;\n\t}//\u56e0\u4e3aSTL\u4e2d\u4f18\u5148\u961f\u5217\u9ed8\u8ba4\u53d6\u51fa\u6700\u5927\u7684\u5143\u7d20 \n\t //\u6240\u4ee5\u8fd9\u91cc\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u4fdd\u8bc1\u6bcf\u6b21\u53d6\u51fa\u7684\u662f\u6700\u5c0f\u4ee3\u4ef7\u7684 \n};\npriority_queue<node>q;//node\u7c7b\u578b\u5fc5\u987b\u5b9a\u4e49< \nint dx[]={0,1,0,-1,1,1,-1,-1,0,2,0,-2};//12\u65b9\u5411\u53ca\u9b54\u6cd5\u4ee3\u4ef7 \nint dy[]={1,0,-1,0,1,-1,1,-1,2,0,-2,0};\nint dw[]={0,0,0,0,2,2,2,2,2,2,2,2};\nint a[105][105],dis[105][105];//a\u5b58\u50a8\u68cb\u76d8\u4e0a\u683c\u5b50\u7684\u989c\u8272 \nint n,m;\nvoid bfs(){\n\tmemset(dis,0x3f,sizeof(dis));dis[1][1]=0;\n\tq.push((node){1,1,a[1][1],dis[1][1]});\n\tnode cur,nxt;\n\twhile(!q.empty()){\n\t\tcur=q.top();q.pop();\n\t\tif(dis[cur.x][cur.y]<cur.w)continue;\n\t\tfor(int i=0;i<12;i++){//\u61d2\u60f0\u5220\u9664 \n\t\t\tnxt.x=cur.x+dx[i];\n\t\t\tnxt.y=cur.y+dy[i];\n\t\t\tnxt.w=cur.w+dw[i];\n            if(nxt.x<=0||nxt.x>m||nxt.y<=0||nxt.y>m)continue;//\u4fdd\u8bc1\u5728\u68cb\u76d8\u8303\u56f4\u5185\n\t\t\tnxt.c=a[nxt.x][nxt.y];\n\t\t\tif(!nxt.c)continue;\n\t\t\tif(cur.c!=nxt.c)nxt.w++;//\u786e\u5b9a\u4e0b\u4e00\u6b65\u7684\u4fe1\u606f \n\t\t\tif(dis[nxt.x][nxt.y]>nxt.w){\n\t\t\t\tdis[nxt.x][nxt.y]=nxt.w;\n\t\t\t\tq.push(nxt);\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tint x,y,c;\n\tread(m);read(n);\n\tfor(int i=1;i<=n;i++){\n\t\tread(x);read(y);read(c);\n\t\ta[x][y]=c+1;\n\t}//\u8fd9\u91ccc+1\uff0c\u4e3a\u4e86\u65b9\u4fbf\u533a\u5206\u65e0\u8272\u683c\u5b50 \n\tbfs();\n\tif(!a[m][m]){//\u5904\u7406(m,m)\u65e0\u8272\u60c5\u51b5 \n\t\tint ans=min(dis[m][m-1],dis[m-1][m])+2;\n\t\tif(ans>=inf)puts(\"-1\");\n\t\telse printf(\"%d\\n\",ans);\n\t}\n\telse{\n\t\tif(dis[m][m]==inf)puts(\"-1\");\n\t\telse printf(\"%d\\n\",dis[m][m]);\n\t}\n\treturn 0;\n}\n```\n\n2. \u6700\u77ed\u8def\uff08 `Dijkstra` \uff09\n\n\u6ce8\uff1a\u4e0b\u9762\u7684\u53c2\u8003\u7a0b\u5e8f\u4f7f\u7528 `zkw\u7ebf\u6bb5\u6811` \u4ee3\u66ff\u4f18\u5148\u961f\u5217\uff0c `zkw\u7ebf\u6bb5\u6811` \u77ed\u5c0f\u7cbe\u608d\uff0c\u5e38\u6570\u8f83\u5c0f\uff0c\u5e76\u4e14\u652f\u6301\u76f4\u63a5\u5355\u70b9\u4fee\u6539\uff0c\u4e0d\u9700\u8981\u4f18\u5148\u961f\u5217\u7684\u61d2\u60f0\u5220\u9664\u6cd5\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define maxn 100005\n#define maxm 2000005\n#define inf 0x3f3f3f3f\ntemplate <typename Tp>\nvoid read(Tp &x){\n\tchar c=getchar();x=0;int f=1;\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}x*=f;\n}//\u5feb\u901f\u8bfb\u5165\uff0c\u4e0d\u89e3\u91ca \nstruct Edge{\n\tint f,t,w,nxt;\n}edge[maxm];\nint head[maxn],etot=1;//\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u5b58\u56fe\u65f6\u8fb9\u6570\u521d\u503c\u8bbe\u4e3a\u4e00\u4e2a\u5947\u6570 \nvoid add_edge(int f,int t,int w){//\u8fd9\u6837\u53ef\u4ee5\u5229\u7528\u4f4d\u8fd0\u7b97\u6210\u5bf9\u53d8\u5316\u627e\u5230\u53cd\u5411\u8fb9 \n\tedge[++etot]=(Edge){f,t,w,head[f]};\n\thead[f]=etot;\n}//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe \n//--------\u4ee5\u4e0b\u5185\u5bb9\u4e3a zkw\u7ebf\u6bb5\u6811\n//\u4e3b\u8981\u601d\u8def\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4dis\n//dis1\u6570\u7ec4\u8868\u793a\u5728\u7ebf\u6bb5\u6811\u4e2d\u7684dis\n//tr\u6570\u7ec4\u8bb0\u5f55\u5f53\u524d\u6700\u5c0fdis\u5bf9\u5e94\u7684\u8282\u70b9\u7f16\u53f7 \n//\u6709\u5173zkw\u7ebf\u6bb5\u6811\uff0c\u53ef\u4ee5\u53c2\u8003\u6d1b\u8c37\u65e5\u62a5\u7684\u8bb2\u89e3\uff0c\u8fd9\u91cc\u4e0d\u591a\u8bf4 \nint tr[maxn<<2],dis1[maxn<<2],bt;\nint n,m,S,T;\nvoid build(){\n\tfor(bt=1;bt<=n+1;bt<<=1);//bt\u521d\u59cb\u5316\uff0czkw\u7ebf\u6bb5\u6811\u7684\u521d\u59cb\u64cd\u4f5c \n\tfor(int i=1;i<=n;i++)tr[i+bt]=i;//tr\u6570\u7ec4\u521d\u59cb\u5316 \n\tmemset(dis1,0x3f,sizeof(dis1));//dis1\u6570\u7ec4\u521d\u59cb\u5316 \n\t//\u56e0\u4e3a\u8fd9\u91ccdis\u521d\u503c\u90fd\u662finf\uff0c\u6240\u4ee5\u53ef\u4ee5\u8fd9\u6837\u76f4\u63a5\u8d4b\u503c \n}\nvoid modify(int x,int val){\n\tdis1[x]=val;x+=bt;//\u5355\u70b9\u4fee\u6539 \n\tfor(x>>=1;x;x>>=1){//\u4ee5\u4e0b\u662fzkw\u7ebf\u6bb5\u6811\u5e38\u89c4\u64cd\u4f5c \n\t\tif(dis1[tr[x<<1]]<dis1[tr[(x<<1)|1]])tr[x]=tr[x<<1];\n\t\telse tr[x]=tr[(x<<1)|1];\n\t}\n}//\u5176\u5b9e\u4e0a\u9762\u7684\u5185\u5bb9\u5e76\u4e0d\u662f\u5f88\u957f\uff0c\u53ea\u662f\u6ce8\u91ca\u6bd4\u8f83\u591a \nint dis[maxn];\nvoid dijkstra(){\n\tmemset(dis,0x3f,sizeof(dis));\n\tbuild();//build()\u4e0d\u53ef\u5fd8 \n\tdis[S]=0;modify(S,0);//\u6e90\u70b9\u66f4\u65b0 \n\tint x,y,w;\n\tfor(int j=1;j<=n;j++){//\u8fd9\u91cctr[1]\u7ef4\u62a4\u7684\u662f[1,n]dis\u7684\u6700\u5c0f\u503c\u7684\u8282\u70b9\u7f16\u53f7\uff0c\u6240\u4ee5\u76f4\u63a5\u8c03\u7528 \n\t\tx=tr[1];modify(x,inf);//\u8fd9\u91cc\u5c06x\u8bbe\u4e3a\u6781\u5927\u503c\uff0c\u6765\u53d6\u4ee3\u5220\u9664\u64cd\u4f5c \n\t\tfor(int i=head[x];i;i=edge[i].nxt){\n\t\t\ty=edge[i].t;w=edge[i].w;\n\t\t\tif(dis[y]>dis[x]+w){//dijkstra\u677e\u5f1b\u64cd\u4f5c \n\t\t\t\tdis[y]=dis[x]+w;\n\t\t\t\tmodify(y,dis[y]);//\u76f4\u63a5\u66f4\u65b0 \n\t\t\t}\n\t\t}\n\t}\n}\nint dx[]={0,1,0,-1,1,1,-1,-1,0,2,0,-2};//12\u65b9\u5411\u53ca\u9b54\u6cd5\u4ee3\u4ef7 \nint dy[]={1,0,-1,0,1,-1,1,-1,2,0,-2,0};\nint dw[]={0,0,0,0,2,2,2,2,2,2,2,2};\nint a[105][105],cnt[105][105];\nstruct node{\n\tint x,y,c;\n}b[maxn];\n//a\u5b58\u50a8\u68cb\u76d8\u4e0a\u683c\u5b50\u7684\u989c\u8272 \n//cnt\u8868\u793a\u68cb\u76d8\u4e0a\u7684\u683c\u5b50\u5bf9\u5e94\u7684\u8282\u70b9\u7f16\u53f7 \nvoid preprocess(){//\u5efa\u56fe \n\tint x,y,c,xx,yy,ww;\n\tfor(int i=1;i<=n;i++){\n\t\tx=b[i].x;y=b[i].y;c=b[i].c;\n\t\tfor(int j=0;j<12;j++){\n\t\t\txx=x+dx[j];yy=y+dy[j];ww=dw[j];\n\t\t\tif(a[xx][yy]){\n\t\t\t\tif(a[xx][yy]!=c)ww++;\n\t\t\t\tadd_edge(i,cnt[xx][yy],ww);\n\t\t\t}\n\t\t}\n\t}//\u8fd9\u4e00\u6bb5\u5728\u4e0a\u6587\u9898\u89e3\u4e2d\u8bb2\u7684\u6bd4\u8f83\u8be6\u7ec6\uff0c\u8fd9\u91cc\u4e0d\u518d\u591a\u8bf4 \n\tS=cnt[1][1];\n}\nint main(){\n\tint mm,x,y,c;\n\tread(mm);read(n);\n\tfor(int i=1;i<=n;i++){\n\t\tread(x);read(y);read(c);\n\t\ta[x][y]=c+1;cnt[x][y]=i;\n\t\tb[i]=(node){x,y,c+1};\n\t}//\u8fd9\u91ccc+1\uff0c\u4e3a\u4e86\u65b9\u4fbf\u533a\u5206\u65e0\u8272\u683c\u5b50 \n\tpreprocess();\n\tdijkstra();//\u56e0\u4e3a\u5728\u56fe\u8bba\u4e2dm\u5e38\u4ee3\u8868\u7684\u542b\u4e49\u662f\u8fb9\u6570 \n\tif(!a[mm][mm]){//\u6240\u4ee5\u7528mm\u53d6\u4ee3\u539f\u9898\u76ee\u4e2d\u7684m\uff0c\u5373\u68cb\u76d8\u5927\u5c0f \n\t\tint ans=min(dis[cnt[mm][mm-1]],dis[cnt[mm-1][mm]])+2;\n\t\tif(ans>=inf)puts(\"-1\");\n\t\telse printf(\"%d\\n\",ans);\n\t}//(m,m)\u6ca1\u6709\u989c\u8272\u7684\u7279\u5224 \n\telse{\n\t\tif(dis[cnt[mm][mm]]==inf)puts(\"-1\");\n\t\telse printf(\"%d\\n\",dis[cnt[mm][mm]]);\n\t}\n\treturn 0;\n}\n```\n\n\u9644\uff1a\u5361\u6389\u672c\u9898 `dfs` +\u8bb0\u5fc6\u5316\u4f18\u5316(\u5373 `SPFA` )\u7684\u505a\u6cd5\uff1a\u6570\u636e\u8303\u56f4\u4fee\u6539\u4e3a $m\\le 1000,n\\le 100000$ \uff0c\u56e0\u4e3a\u672c\u9898\u662f\u68cb\u76d8\uff0c\u672c\u8eab\u5c31\u662f\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u7f51\u683c\u56fe\u7684\u4e1c\u897f\uff0c\u518d\u52a0\u4e00\u4e9b\u6bd4\u8f83\u9760\u8fd1\u7684\u6709\u8272\u683c\u5b50\uff08\u53ea\u80fd\u8bf4\u63a5\u8fd1\u83ca\u82b1\u56fe\uff0c\u56e0\u4e3a\u8fd9\u4e00\u9898\u4e00\u4e2a\u70b9\u51fa\u5ea6\u6700\u591a\u4e3a$12$\uff09\uff0c\u518d\u52a0\u4e00\u4e9b\u94fe\u72b6\u6709\u8272\u683c\u5b50\uff08\u6b21\u4f18\u89e3\u957f\u94fe\uff09\uff0c\u7406\u8bba\u4e0a\u6765\u8bb2\u5927\u90e8\u5206\u53ef\u4ee5\u5361\u6389\u4e86\u3002",
        "postTime": 1536585113,
        "uid": 35871,
        "name": "ZigZagKmp",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u4e00\u770b\u5230\u8fd9\u9898\u5c31\u60f3\u5230\u4e86BFS qwq\n\n~~\u867d\u7136\u540e\u6765\u60f3\u5230DFS\u975e\u5e38\u7b80\u5355~~\n\n\u4f46\u6211\u575a\u6301\u7528\u5e7f\u641c\uff08\u82b1\u4e866\u4e2a\u5c0f\u65f6~\u5624\u5624\u5624\uff09\n\n\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u4ea4\u9898\u89e3\n\u652f\u6301\u4e00\u4e0b\u54e6 jwj jwj jwj\n\n------------\n\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nint x,y,money,color,tin,h,m,n,p[1001][1001],tot[1001][1001];\nbool vis[1000][1000],judge=0;\nstruct d\n{\n\tint x;\n\tint y;\n\tint money;\n\tint color;//0\u4e3a\u7a7a\uff0c1\u4ee3\u8868\u7ea2\u8272\uff0c2\u4e3a\u4ee3\u8868\u9ec4\u8272\n\tbool mogic;//1\u4e3a\u5df2\u4f7f\u7528\u9b54\u6cd5\uff0c0\u4e3a\u6ca1\u6709\n} qwq[1000000];\nvoid jwj(int aa,int bb)//\u8ba8\u8bba\u4e09\u79cd\u60c5\u51b5\n{\n    judge=0;//\u7528\u6765\u5224\u5b9atin\u662f\u5426\u6539\u53d8\n\tif(p[aa][bb]==2)\n\t{\n\t\tif(color==2)\n\t\t{\n\t\t\ttin++,judge=1;\n\t\t\tqwq[tin].x=aa;\n\t\t\tqwq[tin].y=bb;\n\t\t\tqwq[tin].money=money;\n\t\t\tqwq[tin].color=2;\n\t\t\tqwq[tin].mogic=0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttin++,judge=1;\n\t\t\tqwq[tin].x=aa;\n\t\t\tqwq[tin].y=bb;\n\t\t\tqwq[tin].money=money+1;\n\t\t\tqwq[tin].color=2;\n\t\t\tqwq[tin].mogic=0;\n\t\t}\n\t}\n\tif(p[aa][bb]==1)\n\t{\n\t\tif(color==2)\n\t\t{\n\t\t\ttin++,judge=1;\n\t\t\tqwq[tin].x=aa;\n\t\t\tqwq[tin].y=bb;\n\t\t\tqwq[tin].money=money+1;\n\t\t\tqwq[tin].color=1;\n\t\t\tqwq[tin].mogic=0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttin++,judge=1;\n\t\t\tqwq[tin].x=aa;\n\t\t\tqwq[tin].y=bb;\n\t\t\tqwq[tin].money=money;\n\t\t\tqwq[tin].color=1;\n\t\t\tqwq[tin].mogic=0;\n\t\t}\n\t}\n\tif(p[aa][bb]==0)\n\t{\n\t\tif(qwq[h].mogic==0)\n\t\t{\n\t\t\ttin++,judge=1;\n\t\t\tqwq[tin].x=aa;\n\t\t\tqwq[tin].y=bb;\n\t\t\tqwq[tin].money=money+2;\n\t\t\tqwq[tin].color=color;\n\t\t\tqwq[tin].mogic=1;\n\t\t}\n\t}\n}\nvoid bfs(int a1,int b1,int c1,int color1)\n{\n\ttin++;\n\tqwq[tin].x=a1;\n\tqwq[tin].y=b1;\n\tqwq[tin].money=c1;\n\tqwq[tin].color=color1;\n\tqwq[tin].mogic=0;\n\tvis[1][1]=1;\n\ttot[1][1]=0;//tot[x][y]\u662f\u8d70\u5230p[x][y]\u7684\u6700\u5c11\u82b1\u8d39\n\twhile(h<tin)\n\t{\n\t\th++;\n\t\tx=qwq[h].x;\n\t\ty=qwq[h].y;\n\t\tmoney=qwq[h].money;\n\t\tcolor=qwq[h].color;\n\t\tif(x-1>=1)//\u4e0a\n\t\t{\n\t\t\tjwj(x-1,y);//judge\u7528\u6765\u8868\u660e\u8be5\u70b9\u662f\u5426\u53ef\u4ee5\u88ab\u8bbf\u95ee\n\t\t\tif(vis[x-1][y]==0&&judge)//\u6ca1\u8bbf\u95ee\u8fc7\u7684\n\t\t\t{\n\t\t\t\tvis[x-1][y]=1;\n\t\t\t\ttot[x-1][y]=qwq[tin].money;\n\t\t\t}\n\t\t\telse if(vis[x-1][y]!=0&&judge)\n\t\t\t{\n\t\t\t\tif(qwq[tin].money<tot[x-1][y])//\u8bbf\u95ee\u8fc7\u4f46\u8fd9\u6b21\u7684\u503c\u66f4\u5c0f\u7684\n\t\t\t\t{\n\t\t\t\t\ttot[x-1][y]=qwq[tin].money;//\u66f4\u65b0\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttin--;//\u65e0\u6cd5\u66f4\u65b0\uff0c\u56de\u9000\n\t\t\t\t}\n\t\t\t}\n\t\t}     \n\t\tif(y-1>=1)//\u5de6\n\t\t{\n\t\t\tjwj(x,y-1);\n\t\t\tif(vis[x][y-1]==0&&judge)\n\t\t\t{\n\t\t\t\tvis[x][y-1]=1;\n\t\t\t\ttot[x][y-1]=qwq[tin].money;\n\t\t\t}\n\t\t\telse if(vis[x][y-1]!=0&&judge)\n\t\t\t{\n\t\t\t\tif(qwq[tin].money<tot[x][y-1])\n\t\t\t\t{\n\t\t\t\t\ttot[x][y-1]=qwq[tin].money;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttin--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(x+1<=m)//\u4e0b\n\t\t{\n\t\t\tjwj(x+1,y);\n\t\t\tif(vis[x+1][y]==0&&judge)\n\t\t\t{\n\t\t\t\tvis[x+1][y]=1;\n\t\t\t\ttot[x+1][y]=qwq[tin].money;\n\t\t\t}\n\t\t\telse if(vis[x+1][y]!=0&&judge)\n\t\t\t{\n\t\t\t\tif(qwq[tin].money<tot[x+1][y])\n\t\t\t\t{\n\t\t\t\t\ttot[x+1][y]=qwq[tin].money;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttin--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(y+1<=m)//\u53f3\n\t\t{\n\t\t\tjwj(x,y+1);\n\t\t\tif(vis[x][y+1]==0&&judge)\n\t\t\t{\n\t\t\t\tvis[x][y+1]=1;\n\t\t\t\ttot[x][y+1]=qwq[tin].money;\n\t\t\t}\n\t\t\telse if(vis[x][y+1]!=0&&judge)\n\t\t\t{\n\t\t\t\tif(qwq[tin].money<tot[x][y+1])\n\t\t\t\t{\n\t\t\t\t\ttot[x][y+1]=qwq[tin].money;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttin--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tint x,y,c;\n    cin>>m>>n;\n    for(int i=1;i<=n;i++)\n    {\n    \tcin>>x>>y>>c;\n    \tp[x][y]=c+1;//0\u4e3a\u7a7a\uff0c1\u4ee3\u8868\u7ea2\u8272\uff0c2\u4e3a\u4ee3\u8868\u9ec4\u8272\n\t}\n\tbfs(1,1,0,p[1][1]);\n\tif(vis[m][m])\n\t{\n\t\tcout<<tot[m][m];\n\t}\n\telse\n\t{\n\t\tcout<<-1;\n\t}\n} \n```",
        "postTime": 1537699111,
        "uid": 117409,
        "name": "logicYZL",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "#\u65b9\u6cd5\uff1a\u8bb0\u5fc6\u5316\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff08MBFS)\n\n##\u601d\u8def\uff1a\n\n\u9996\u5148\u770b\u5230\u4ece\u4e00\u4e2a\u70b9\u8dd1\u5230\u53e6\u5916\u4e00\u4e2a\u70b9\uff0c\u7b2c\u4e00\u53cd\u5e94\u5c31\u662f\u641c\u7d22\u4e86\u3002\u53ef\u4ee5\u4f7f\u7528DFS\u6216BFS\uff0c\u8fd9\u91cc\u9009\u7528BFS\u3002\n\nBFS\u9700\u8981\u4f7f\u7528\u961f\u5217\u4fdd\u5b58\u5f85\u67e5\u627e\u7684\u683c\u5b50\uff0c\u8fd9\u91cc\u8fd8\u8981\u660e\u786e\u90fd\u9700\u8981\u4fdd\u5b58\u54ea\u4e9b\u4fe1\u606f\uff0c\u5750\u6807\uff08x,y) \u3001\u5f53\u524d\u6b65\u6570\u548c\u5f53\u524d\u683c\u5b50\u989c\u8272\u3002\n\n\u683c\u5b50\u989c\u8272\u662f\u5b58\u5728map\u6570\u7ec4\u4e2d\u7684\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u6709\u5728\u961f\u5217\u4e2d\u4fdd\u5b58\u989c\u8272\u5462\uff1f\u56e0\u4e3a\u7a7a\u767d\u7684\u683c\u5b50\u662f\u53ef\u4ee5\u53d8\u8272\u7684\u3002\u6240\u4ee5\u8981\u5c06\u5176\u989c\u8272\u5b58\u8fdb\u961f\u5217\uff0c\u800c\u539f\u8272\u9700\u8981\u4fdd\u7559\u4f5c\u4e3a\u9a8c\u8bc1\u3002\n\n\u672c\u9898\u7684\u601d\u7ef4\u96be\u70b9\u5728\u4e8e\u5c06\u54ea\u4e9b\u683c\u5b50\u5165\u961f\u53ca\u5982\u4f55\u5165\u961f\u95ee\u9898\uff0c\u4e3a\u4e86\u4f18\u5316\u641c\u7d22\uff0c\u4f7f\u7528val\u6570\u7ec4\u6765\u8bb0\u5fc6\u5f53\u524d\u683c\u5b50\u9700\u8981\u7684\u6b65\u6570\u3002\n\n\u4ece\u5f53\u524d(x,y)\u51fa\u53d1\u56db\u4e2a\u65b9\u5411(dx,dy)\u5224\u65ad\uff0c\u5f85\u8003\u67e5\u7684\u683c\u5b50\u662f\u5426\u8d8a\u754c\uff0c\u5982\u4e0d\u8d8a\u754c\u8fdb\u5165\u8003\u67e5\u3002\u4e00\u5171\u5206\u56db\u79cd\u60c5\u51b5\uff1a\n\n1\u3001(x,y) \u4e0e(dx,dy) \u539f\u6765\u90fd\u662f\u7ea2\u6216\u9ec4\u7684\u3002\u8fd9\u6837\u76f8\u540c\u989c\u8272\u6b65\u6570+0\uff0c\u4e0d\u7528\u989c\u8272\u6b65\u6570+1\uff1b\n\n2\u3001(x,y)\u539f\u6765\u662f\u6709\u7ea2\u6216\u9ec4 (dx,dy)\u662f\u767d\u8272\u7684\u3002\u8fd9\u6837\u9700\u8981\u65bd\u5c55\u4e00\u6b21\u9b54\u6cd5\u6539\u53d8\u989c\u8272\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u8d2a\u5fc3\uff0c\u6539\u53d8\u7684\u989c\u8272\u548c\u5f53\u524d\u989c\u8272\u76f8\u540c\uff1b\n\n3\u3001(x,y)\u539f\u6765\u662f\u767d\u8272\u7684 (dx,dy)\u662f\u7ea2\u6216\u9ec4\u7684\u3002\u56e0\u4e3a\u5165\u961f\u683c\u5b50\u80af\u5b9a\u662f\u66fe\u7ecf\u6709\u989c\u8272\u7684\uff0c\u6240\u4ee5\u5224\u65ad(x,y)\u88ab\u6d82\u7684\u989c\u8272\u548c(dx,dy)\u7684\u989c\u8272\u589e\u52a0\u6b65\u6570\u5373\u53ef\uff1b\n\n2\u3001(x,y) \u4e0e(dx,dy) \u539f\u6765\u90fd\u662f\u767d\u8272\u7684\u3002\u56e0\u4e3a\u9b54\u6cd5\u65e0\u6cd5\u8fde\u7eed\u4f7f\u7528\uff0c\u6240\u4ee5\uff0c\u8fd9\u79cd\u60c5\u51b5\u8d70\u4e0d\u4e86\uff1b\n\n\n##\u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <queue>\n#include <cstring>\nusing namespace std;\nint map[105][105],val[105][105];\nstruct node{\n    int x,y,c,v;\n};\nqueue<node>q;\nint main() {\n    int m,n,di[4][2]={0,1,1,0,0,-1,-1,0},ans=0x7f7f7f7f;\n    memset(map,-1,sizeof(map));\n    memset(val,0x7f,sizeof(val));\n    cin>>m>>n;\n    for(int i=0;i<n;i++){\n        int x,y,c;\n        cin>>x>>y>>c;\n        map[x][y]=c;\n    }\n    q.push((node){1,1,map[1][1],0});\n    val[1][1]=0;\n    while(!q.empty()){\n        int x=q.front().x,y=q.front().y,c=q.front().c,v=q.front().v;\n        if(v>ans){\n            q.pop();\n            continue;\n        }\n        if(x==m&&y==m){\n            ans=min(ans,v);\n            q.pop();\n            continue;\n        }\n        for(int k=0;k<4;k++){\n            int dx=x+di[k][0],dy=y+di[k][1];\n            if(dx>0&&dy>0&&dx<=m&&dy<=m){\n                int bc=map[x][y],dc=map[dx][dy],mv=val[dx][dy],dv;\n                if(dc>=0&&bc>=0){\n                    dv=v+(dc==bc?0:1);\n                    if(mv>dv){\n                        q.push((node){dx,dy,dc,dv});\n                        val[dx][dy]=dv;\n                    }\n                }else if(dc<0&&bc>=0){\n                    if(mv>v+2){\n                        q.push((node){dx,dy,bc,v+2});\n                        val[dx][dy]=v+2;\n                    }\n                }else if(dc>=0&&bc<0){\n                    dv=v+(c==dc?0:1);\n                    if(mv>dv){\n                        q.push((node){dx,dy,dc,dv});\n                        val[dx][dy]=dv;\n                    }\n                }\n            }\n        }\n        q.pop();\n    }\n    if(ans==0x7f7f7f7f){\n        cout<<\"-1\"<<endl;\n    }else {\n        cout<<ans<<endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1510668607,
        "uid": 31086,
        "name": "ingu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\n```cpp\n//\u68cb\u76d8\u3002\u3002\n//\u6211\u53ef\u80fd\u662f\u4e2azz\n//\u6253\u8fd9\u4e2a\u9898\u6253\u4e861\u4e0b\u5348\u3002\u3002\u3002\u3002\u3002\n//\u4e0a\u6765\u5148\u778ejb\u641c\u4e86\u4e00\u6ce2\uff0c\u641c\u4e8665\u3002\u3002\u3002\uff08\u8fd8WA\u4e86\u51e0\u4e2a\u70b9\u3002\u3002\u3002\u3002\uff09\u7136\u540e\u5c31\u7070\u6e9c\u6e9c\u7684\u6362\u7528DP\u3002\u3002\n//\u4ee5\u4e0a\u90fd\u662f\u5e9f\u8bdd\n//\u597d\u5427\uff0c\u53ef\u80fd\u5f80\u4e0b\u4e5f\u662f\u5e9f\u8bdd\u3002\u3002\u3002\n//\u770b\u5230\u6ca1\u4eba\u7528DP\uff08\u597d\u5427\uff0c\u697c\u4e0b\u5c31\u662f\uff0c\u6211\u773c\u778e\uff09\n//\u90a3\u81f3\u5c11\u6ca1\u4eba\u7528\u56db\u7ef4\u7684\u5bf9\u5427\u3002\u3002\u3002\uff08\u4e0d\u8fc7\u80fd\u7528\u4e8c\u7ef4\u6211\u95f2\u7684\u86cb\u75bc\u975e\u8981\u7528\u56db\u7ef4\uff09\n//f[i][j][k][l]\u8868\u793a\u5230\uff08i,j\uff09\u70b9\u989c\u8272\u4e3ak\u65f6\u7684\u6700\u5c0f\u91d1\u5e01\u82b1\u8d39\u6570\u3002\u3002\u3002\u7136\u540e\u90a3\u4e2al\u5c31\u662f\u4e0a\u4e00\u6b21\u7528\u6ca1\u7528\u9b54\u6cd5\n//\u901a\u8fc7\u56db\u4e2a\u65b9\u5411\u66f4\u65b0\n//\u7136\u540e\u60f3\u5fc5\u5404\u4f4ddalao\u5c31\u77e5\u9053DP\u8be5\u600e\u4e48\u6574\u4e86\n//\u54e6\uff0c\u5bf9\u4e86\uff0c\u8fd8\u6709\u4e2a\u5751\u70b9\uff0c\u5c31\u662f\u8981\u5728DP\u65f6\u5faa\u73af4\u904d\uff0c\u56e0\u4e3a\u53ef\u80fd\u6709\u597d\u51e0\u4e2a\u65b9\u5411\u80fd\u66f4\u65b0f\uff08\u5c31\u8fd9\u4e2a\u5751\u70b9\u5c31\u8ba9\u6211\u572895\u5361\u4e86\u597d\u4e45\u3002\u3002\u3002\uff09\n//\u7136\u540e\u653e\u4e0b\u4ee3\u7801\u5427\u3002\u3002\u3002\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int M = 205;\nconst int inf = 210000000 ;\nint w[M][M];\nint m,n,x,y,z;\nint ans=210000000;\nint f[M][M][3][2];\nint main()\n{\n//    freopen(\"chess.out\",\"w\",stdout);\n    int i,j,k,l;\n    scanf(\"%d%d\",&m,&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&z);\n        w[x][y]=z+1;\n    }\n    memset(f,127/3,sizeof(f));\n    f[1][1][w[1][1]][1]=0;\n    int T=4;\n    while(T--)\n    for(i=1;i<=m;i++)\n      for(j=1;j<=m;j++)\n      {\n          if(i==1&&j==1) continue;\n          if(w[i][j])\n          {\n            for(k=1;k<=2;k++)\n            for(l=0;l<=1;l++)\n              if(w[i][j]==k)\n              {\n                  int temp=f[i][j][k][1];\n                  f[i][j][w[i][j]][1]=min(f[i-1][j][k][l],min(f[i][j-1][k][l],min(f[i][j+1][k][l],f[i+1][j][k][l])));\n                  f[i][j][w[i][j]][1]=min(temp,f[i][j][k][1]);\n              }\n              else\n              {\n                  int temp=f[i][j][w[i][j]][1];\n                  f[i][j][w[i][j]][1]=min(f[i-1][j][k][l],min(f[i][j-1][k][l],min(f[i][j+1][k][l],f[i+1][j][k][l])))+1;\n                  f[i][j][w[i][j]][1]=min(temp,f[i][j][w[i][j]][1]);\n              }\n        }\n        else\n        for(int k=1;k<=2;k++)\n        {\n            int temp=f[i][j][k][0];\n            f[i][j][k][0]=min(f[i-1][j][k][1],min(f[i][j-1][k][1],min(f[i][j+1][k][1],f[i+1][j][k][1])))+2;\n            f[i][j][k][0]=min(temp,f[i][j][k][0]);\n        }\n      }\n    ans=min(ans,min(f[m][m][1][1],min(f[m][m][1][0],min(f[m][m][2][1],f[m][m][2][0]))));\n    if(ans==inf)\n    printf(\"-1\\n\");\n    else\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1513328462,
        "uid": 53884,
        "name": "beretty",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u672c\u6765\u662f\u60f3\u7528DFS\u6253\u66b4\u529b\uff0c\u6ca1\u60f3\u5230\u526a\u679d\u540e\u8dd1\u7684\u8fd8\u662f\u5f88\u5feb\u7684~~\u5168\u662f0ms\u5450~~\n\n\n**\u7206\u641c\u4f1a\u8d85\u65f6**\uff0c\u6240\u4ee5\u52a0\u4e0a**\u8bb0\u5fc6\u5316\u526a\u679d**\u4f18\u5316\n\n1.\u7528d\u6570\u7ec4\u8bb0\u5f55\u5230\u8fbei\uff0cj\u65f6\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u6bcf\u6b21\u641c\u7d22\u524d\u5224\u65ad\u82b1\u8d39\u662f\u5426\u5c0f\u4e8ed\uff0c\u5426\u5219\u4e0d\u641c\n\n2.\u7528bl\u5e03\u5c14\u7c7b\u578b\u6570\u7ec4\u8bb0\u5f55i\uff0cj\u662f\u5426\u8d70\u8fc7\uff0c\u8d70\u8fc7\u7684\u4e0d\u641c\n\n3.\u53d8\u8272\u65f6\u53d8\u4e3a\u4e0e\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u76f8\u540c\u7684\u989c\u8272\u5219\u82b1\u8d39\u6700\u5c0f\n\n4.\u989c\u8272\u5b58\u50a8\u65f6\u6709\u989c\u8272\u7684\u75281\u548c2\uff0c\u65e0\u8272\u5b58\u4e3a0\u6bd4\u8f83\u597d\u5224\u65ad\n\n\n~~\u5728\u8003\u573a\u4e0a\u505a\u5b8c\u4e86\u9e21\u51bb\u5230\u628a\u6587\u4ef6\u64cd\u4f5c\u5199\u9519\u4e86TAT\uff0c\u6c34\u6761\u9898\u89e3\u5427\u00a0o(T\u03c9T)o\u00a0~~\n\n\n```cpp\n//\u6df1\u641c\uff1a\u6bcf\u6b21\u5411\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u641c\n//\u4e3a\u907f\u514d\u8d85\u65f6\uff0c\u52a0\u4e0a\u8bb0\u5fc6\u5316\u526a\u679dd\u548cbl \n\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n\nusing namespace std;\n\nint i,m,n,j,k,q,p,w;\nint a[1100][1100];//\u4fdd\u5b58\u4f4d\u7f6e\u989c\u8272\nint f[4]={0,0,1,-1},ff[4]={1,-1,0,0};//\u56db\u4e2a\u641c\u7d22\u65b9\u5411\uff0c\u5206\u522b\u8868\u793a\u6a2a\u7eb5\u5750\u6807\u53d8\u5316\u503c \nint minn=0x7fffffff;//\u82b1\u8d39\u6700\u5c0f\u503c \nint d[1100][1100];//\u526a\u679d1\uff1a\u4fdd\u5b58\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u82b1\u8d39\u6700\u5c0f\u503c \nbool bl[1100][1100];//\u526a\u679d2\uff1a\u4fdd\u5b58\u6bcf\u4e2a\u4f4d\u7f6e\u662f\u5426\u8d70\u8fc7 \n\nvoid search(int x,int y,int c,int color)\n//x\uff0cy\u4e3a\u5f53\u524d\u4f4d\u7f6e\u5750\u6807 \uff0cc\u4e3a\u5f53\u524d\u6240\u82b1\u91d1\u5e01\uff0ccolor\u4e3a\u5f53\u524d\u4f4d\u7f6e\u989c\u8272 \n{\n    if((x==n)&&(y==n))//\u5df2\u641c\u5230\u53f3\u4e0b\u89d2\uff0c\u5373\uff08n,n) \n    {\n        minn=min(c,minn);//\u7528min\u4fdd\u5b58\u5230(n,n)\u7684\u6700\u5c0f\u82b1\u8d39 \n        return;\n    }\n    \n    for(int i=0;i<4;i++)//\u5411\u56db\u4e2a\u65b9\u5411\u641c\u7d22 \n    {\n        int p=x+f[i],q=y+ff[i];//\u79fb\u52a8\u540e\u5230\u8fbe\u7684\u4f4d\u7f6e \n        if((p<=n)&&(p>0)&&(q<=n)&&(q>0))//\u5224\u65ad\u641c\u7d22\u4f4d\u7f6e\u5408\u6cd5\uff0c\u672a\u8d85\u51fa\u8fb9\u754c \n        if(bl[p][q])//\u5224\u65ad\u641c\u7d22\u4f4d\u7f6e\u672a\u8d70\u8fc7\n        if(a[x][y]||a[p][q])//\u5224\u65ad\u641c\u7d22\u4f4d\u7f6e\u548c\u5f53\u524d\u4f4d\u7f6e\u81f3\u5c11\u5176\u4e2d\u4e00\u4e2a\u6709\u989c\u8272 \n        {\n            if(a[p][q]==0)//\u5982\u679c\u641c\u7d22\u4f4d\u7f6e\u6ca1\u6709\u989c\u8272\uff0c\u53d8\u8272\u4e3a\u5f53\u524d\u989c\u8272\n            {\n                if(c+2<d[p][q])//\u526a\u679d\uff1a\u82b1\u8d392\u91d1\u5e01\u548c\u539f\u672c\u5230\u6b64\u7684\u6700\u5c0f\u82b1\u8d39 \n                { \n                    bl[p][q]=0;//\u5c06\u6b64\u4f4d\u7f6e\u8bbe\u4e3a\u5df2\u8d70 \n                    d[p][q]=c+2,search(p,q,c+2,color);//\u66f4\u65b0\u641c\u7d22\u4f4d\u7f6e\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u9012\u5f52 \n                    bl[p][q]=1;//\u56de\u6eaf \n                } \n            }\n            else//\u641c\u7d22\u4f4d\u7f6e\u6709\u989c\u8272 \n            {\n                if((color==a[p][q])&&(c<d[p][q]))//\u641c\u7d22\u4f4d\u7f6e\u4e0e\u539f\u4f4d\u7f6e\u989c\u8272\u76f8\u540c\uff0c\u4e14\u82b1\u8d39\u51cf\u5c11\n                { \n                    bl[p][q]=0;//\u5c06\u6b64\u4f4d\u7f6e\u8bbe\u4e3a\u5df2\u8d70 \n                    d[p][q]=c,search(p,q,c,color);//\u66f4\u65b0\u641c\u7d22\u4f4d\u7f6e\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u9012\u5f52\n                    bl[p][q]=1;//\u56de\u6eaf \n                } \n                else if((c+1<minn)&&(c+1<d[p][q])) //\u641c\u7d22\u4f4d\u7f6e\u4e0e\u539f\u4f4d\u7f6e\u989c\u8272\u4e0d\u540c        \n                { \n                    bl[p][q]=0;//\u5c06\u6b64\u4f4d\u7f6e\u8bbe\u4e3a\u5df2\u8d70 \n                    d[p][q]=c+1,search(p,q,c+1,a[p][q]);//\u66f4\u65b0\u641c\u7d22\u4f4d\u7f6e\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u9012\u5f52\n                    bl[p][q]=1;//\u56de\u6eaf\n                }\n            }\n        }\n    }\n}\n\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    \n    for(i=1;i<=n;i++)\n        for(j=1;j<=n;j++) d[i][j]=0x7fffffff,a[i][j]=0,bl[i][j]=1;\n    \n    for(i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&q,&p,&w);\n        a[q][p]=w+1; //\u628a\u6709\u989c\u8272\u5206\u522b\u5b58\u4e3a1\uff0c2 \u3002\u65e0\u8272\u5b58\u4e3a0 \n    }\n    \n    bl[1][1]=0;//\u5f00\u59cb\u4f4d\u7f6e\u8bbe\u4e3a\u8d70\u8fc7 \n    \n    search(1,1,0,a[1][1]);\n    \n    if(minn==0x7fffffff) printf(\"-1\");//\u6ca1\u6709\u627e\u5230\u8f93\u51fa-1 \n    else printf(\"%d\",minn);\n    \n    return 0;\n}\n```",
        "postTime": 1511324786,
        "uid": 50562,
        "name": "ZUTTER_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "~~\u597d\u5427\u672c\u6765\u8fd9\u9898\u53ef\u4ee5\u7528\u6700\u77ed\u8def\u8dd1\u5b8c\u7684\uff0c\u7ed3\u679c\u6211\u786c\u662f\u6253\u4e861.5\u5c0f\u65f6\u7684dfs\u3002\u3002\u3002~~\n\n### \u5176\u5b9e\u8fd9\u9898\u5e76\u6ca1\u6709\u90a3\u4e48\u96be\uff0c\u6784\u9020\u4e00\u4e2a\u65e0\u5411\u56fe\u518d\u8dd1\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n\u6211\u7528\u7684dj\u8dd1\u6700\u77ed\u8def\n\n\u95ee\u9898\u6765\u4e86\n\n\u5982\u679c\uff08n,n\uff09\u662f\u65e0\u8272\u7684\uff0c\u90a3\u4e48\u56fe\u4e0a\u5c31\u6ca1\u6709\u8fd9\u4e2a\u70b9\n\n\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u53d8\u91cfflag\u8bb0\u5f55\u70b9\uff08n,n\uff09\u662f\u5426\u6709\u989c\u8272\n\n\u82e5flag==0\uff0c\u5219\u5728\u5730\u56fe\u4e0a\u65b0\u52a0\u4e00\u4e2a\u70b9\u3002\n\n\u70b9\u4e0e\u70b9\u95f4\u7684\u8def\u7a0b\u60c5\u51b5\uff1a\n\n1. \u76f8\u90bb\u4e14\u989c\u8272\u76f8\u540c\uff0cz[i][j]=0;\n\n2. \u76f8\u90bb\u4e14\u989c\u8272\u4e0d\u540c\uff0cz[i][j]=1;\n\n3. \u76f8\u9694\u4e00\u683c\u4e14\u989c\u8272\u76f8\u540c\uff0cz[i][j]=2;\n\n4. \u76f8\u9694\u4e00\u683c\u4e14\u989c\u8272\u4e0d\u540c\uff0cz[i][j]=3;\n\n### \u2234\u70b9i\u4e0e\u70b9j\u7684\u8ddd\u79bb=\u5176\u989c\u8272\u5dee\u7684\u7edd\u5bf9\u503c+\u4f4d\u7f6e\u5dee\uff08\u662f\u5426\u4f7f\u7528\u819c\u6cd5\uff09\n\u5373\n```cpp\n\n\t\tif(abs(x[i]-x[j])+abs(y[i]-y[j])==1)\n\t\t{\n\t\t\tz[i][j]=z[j][i]=abs(col[i]-col[j]);\n\t\t}\n\t\tif(abs(x[i]-x[j])+abs(y[i]-y[j])==2)\n\t\tz[i][j]=z[j][i]=2+abs(col[i]-col[j]);\n\t\t\n```\n\n\u732e\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nbool f[1002];\nint n,m,x[1002],y[1002],z[1002][1002],col[1002],sta,en,flag,s[1002];\nvoid dj(int k)\t\n{\n\ts[k]=0;\n\tint maxn,t;\n\tfor(int i=1;i<=m;i++)\n\t{\n    \tmaxn=99999999;\n    \tfor(int j=1;j<=m;j++)                 \n    \t{\n        \tif(f[j]==0&&s[j]<maxn)\n       \t\t{\n            \tmaxn=s[j];\n\t\t\t\tt=j;\n        \t}\n    \t}\n    \tf[t]=1;\n    \tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\ts[j]=min(s[t]+z[t][j],s[j]);\n\t\t}\n\t}\n}\nint main()\n{\n  \t//freopen(\"chess.in\",\"r\",stdin);\n  \t//freopen(\"chess.out\",\"w\",stdout);\n  \tmemset(z,1,sizeof(z));\n  \tmemset(s,1,sizeof(s));\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&x[i],&y[i],&col[i]);\n\t\tif(x[i]==1&&y[i]==1)\n\t\t{\n\t\t\tsta=i;\n\t\t}\n\t\tif(x[i]==n&&y[i]==n)\n\t\t{\n\t\t\tflag=1;\n\t\t\ten=i;\n\t\t}\n\t}\n\tif(flag==0)\n\t{\n\t\ten=m+1;\n\t\tx[en]=y[en]=n;\n\t}\n\tfor(int i=1;i<m;i++)\n\t{\n\t\tfor(int j=i+1;j<=m;j++)\n\t\t{\n\t\t\tif(abs(x[i]-x[j])+abs(y[i]-y[j])==1)\n\t\t\t{\n\t\t\t\tz[i][j]=z[j][i]=abs(col[i]-col[j]);\n\t\t\t}\n\t\t\tif(abs(x[i]-x[j])+abs(y[i]-y[j])==2)\n\t\t\tz[i][j]=z[j][i]=2+abs(col[i]-col[j]);\n\t\t}\n\t}\n\tif(flag==0)\n\t{\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tif(abs(x[i]-x[en])+abs(y[i]-y[en])==1)\n\t\t\t{\n\t\t\t\tz[i][en]=z[en][i]=2;\n\t\t\t}\n\t\t}\n\t\tm++;\n\t}\n\tdj(sta); \n\tif(s[en]<16843009)\n\tcout<<s[en];\n\telse\n\tcout<<-1;\n\t\n\t\n\t\n\treturn 0;\n}\n\n```\n",
        "postTime": 1538453328,
        "uid": 116368,
        "name": "BinDir0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u662f\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684**\u8bb0\u5fc6\u5316**\u3002\u3002\n\n\u8003\u573a\u4e0a10\u5206\u949fA\u4e86\u3002\n\n\u4f46\u662f\u597d\u50cfT4\u9519\u4e86\u3002\u3002\n\n\n\u597d\u4e86\u8bb2\u601d\u8def\uff1a\n\n\u6df1\u641c(i,j)\u8868\u793a(i,j)\u4f4d\u7f6e\uff0cc\u662f\u5f53\u524d\u989c\u8272\uff0cnow\u662f\u5f53\u524d\u82b1\u8d39\u91d1\u5e01\u6570\uff0cfl\u8868\u793a\u5f53\u524d\u80fd\u5426\u4f7f\u7528\u9b54\u6cd5\u3002\n\n\u4e00\u4e2a\u5c0f\u8d2a\u5fc3\uff1a\u9b54\u6cd5\u8981\u628a\u53d8\u7684\u989c\u8272\u548c\u5f53\u524d\u4e00\u6837\u3002(\u81ea\u5df1\u60f3)\n\n\u7136\u540e\u8be6\u89c1\u4ee3\u7801\n\n\n\n\n\n\n    \n    \n    \n\n    \n```cpp\n#include\"cstdio\"\n#include\"iostream\"\n#include\"cmath\"\n#include\"cstring\"\nusing namespace std;\nint map[1005][1005];\nint f[1005][1005];\nint m,n;\nvoid dfs(int i,int j,int c,bool fl,int now)\n{\n    if(i>m||i<1||j<1||j>m)return;\n    f[i][j]=now;//\u4e00\u79cd\u8bb0\u5fc6\u5316\u5199\u6cd5\uff0c\u4e0d\u65ad\u66f4\u65b0(\u5176\u5b9e\u4e5f\u76f8\u5f53\u4e8e\u526a\u679d)\n        //\u4e0d\u7528\u9b54\u6cd5\n    if(now+abs(c-map[i-1][j])<f[i-1][j]&&map[i-1][j]!=-1)dfs(i-1,j,map[i-1][j],1,now+abs(c-map[i-1][j]));\n    if(now+abs(c-map[i][j-1])<f[i][j-1]&&map[i][j-1]!=-1)dfs(i,j-1,map[i][j-1],1,now+abs(c-map[i][j-1]));\n    if(now+abs(c-map[i+1][j])<f[i+1][j]&&map[i+1][j]!=-1)dfs(i+1,j,map[i+1][j],1,now+abs(c-map[i+1][j]));\n    if(now+abs(c-map[i][j+1])<f[i][j+1]&&map[i][j+1]!=-1)dfs(i,j+1,map[i][j+1],1,now+abs(c-map[i][j+1]));\n    if(fl==1)//\u7528\n    {\n        if(now+2<f[i-1][j]&&map[i-1][j]==-1)dfs(i-1,j,c,0,now+2);\n        if(now+2<f[i][j-1]&&map[i][j-1]==-1)dfs(i,j-1,c,0,now+2);\n        if(now+2<f[i+1][j]&&map[i+1][j]==-1)dfs(i+1,j,c,0,now+2);\n        if(now+2<f[i][j+1]&&map[i][j+1]==-1)dfs(i,j+1,c,0,now+2);\n    }\n    return;\n}\nint main()\n{\n    memset(map,-1,sizeof(map));\n    scanf(\"%d%d\",&m,&n);\n    int x,y,c;\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&c);\n        map[x][y]=c;\n    }\n    memset(f,127,sizeof(f));//\u975e\u5e38\u5927\u7684\u8be1\u5f02\u503c\n    int s=f[m][m];\n    dfs(1,1,map[1][1],1,0);\n    if(f[m][m]==s)f[m][m]=-1;\n    cout<<f[m][m]<<endl;\n    return 0;\n}\n```",
        "postTime": 1510455948,
        "uid": 27601,
        "name": "\u7267\u6fd1\u84dd\u8389\u6816",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u672c\u4eba\u662f\u4e00\u4e2a\n\n** _ \u5783\u573e_**\n\n\u6211\u81ea\u5df1\u90fd\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\u8981\u53d1\u8fd9\u4e48\u96be\u7684\u9898\n\n~~\u5373\u4f7f\u6b7b\u4e5f\u8981\u6b7b\u597d\u770b\u70b9~~\n\n\u8fd9\u9053\u9898\u7528DFS\u83ab\u540d\u6709\u79cd\u6a21\u62df\u7684\u611f\u89c9\uff0c\u4e3b\u8981\u5c31\u662f\uff08\u8bfb\u5165\u4ee5\u540e\uff09DFS\u5224\u65ad\u989c\u8272\uff0c\u4ee5\u53ca\u6bd4\u8f83\u91d1\u5e01\uff0c\u5224\u65ad\u662f\u5426\u8d70\u5230\u7ec8\u70b9\uff0c\u52a0\u4e0a\u4e00\u4e9b\u5224\u65ad\u91cd\u590d\u7684\u65f6\u95f4\u4f18\u5316\n\n~~\u7b49\u7b49\uff0c\u4ee3\u7801\u91cc\u9762\u5199\u7684\u4e00\u6e05\u4e8c\u695a\uff0cBB\u8fd9\u4e48\u591a\u5e72\u561b\uff1f~~\n\n\u7ecf\u8bd5\u9a8c\u5f97\uff1a\u5c06\u900f\u660e\u53d8\u6210\u4e0a\u4e00\u6b65\u989c\u8272\u7edd\u5bf9\u4e0d\u4f1a\u4e8f\n\n\u89c1\u7b11\u4e86\n\n```cpp\n//\u8fd9\u662fDFS\u7684\u505a\u6cd5\uff08\u4e5f\u662f\u6211\u552f\u4e00\u4f1a\u7684\uff09 \n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\n//-1\u4e3a\u900f\u660e\uff0c2\u4e3a\u53d8\u51fa\u6765\u7684\uff0c\u5176\u4f59\u4e0d\u53d8 \u3002 \nusing namespace std;\nint m,n;\nint a[101][101];//\u539f\u56fe\nint b[101][101];//\u94b1\u6570\nint c[101][101];//\u5224\u65ad\u662f\u5426\u8d70\u8fc7\uff0c\u4ee5\u9632\u73af\uff08\u867d\u7136\u4e0d\u77e5\u9053\u54ea\u6709\uff09 \nint fx[5]={0,1,-1,0,0};\nint fy[5]={0,0,0,1,-1};//\u56db\u4e2a\u65b9\u5411\nvoid dfs(int x,int y,int z){\n//x,y\u4e3a\u5750\u6807\uff0cz\u4e3a\u4e0a\u4e00\u683c\u7684\u53d8\u6210\u7684\u989c\u8272\uff0c-1\u4e3a\u6ca1\u53d8\u8fc7 \n    if(x<1||y<1||x>m||y>m){\n        return;\n    }//\u5224\u65ad\u8d8a\u754c \n    int i;\n    for(i=1;i<=4;i++) {\n        int q;//\u8fd9\u4e2a\u683c\u5b50\u82b1\u7684\u94b1 \n        int new_x, new_y, new_z=-1;//\u65b0\u7684\u5750\u6807\uff0c\u4ee5\u53ca\u53d8\u6210\u7684\u989c\u8272\uff0c-1\u4e3a\u6ca1\u53d8 \n        new_x = x+fx[i];\n        new_y = y+fy[i];//\u56db\u4e2a\u65b9\u5411\u8d70 \n        if(new_x<1||new_y<1||new_x>m||new_y>m||c[new_x][new_y]==1){\n        // \u5224\u65ad\u8d8a\u754c\u6216\u4e4b\u524d\u8d70\u8fc7 \n            continue;\n        }\n        if(z!=-1){//\u82e5\u53d8\u8fc7\u8272 \n            if(a[new_x][new_y]!=-1){//\u4e0b\u4e00\u6b65\u4e0d\u4e3a\u900f\u660e \n                if(z!=a[new_x][new_y]){\n                    q=1;//\u989c\u8272\u4e0d\u76f8\u7b49\n                }else{\n                    q=0;//\u989c\u8272\u76f8\u7b49\n                }\n            }else{\n                continue;//\u4e24\u6b65\u900f\u660e\u5219\u8df3\u8fc7 \n            }\n        }else{//\u4e0a\u4e00\u6b65\u4e0d\u662f\u900f\u660e \n            if(a[new_x][new_y]==-1){//\u8fd9\u6b65\u4e3a\u900f\u660e \n                q=2;//\u53d8\u8272 \n                new_z=a[x][y];//\u5f53\u524d\u989c\u8272\u53d8\u6210\u4e0a\u4e00\u6b65\u989c\u8272\n            }else{//\u4e0d\u4e3a\u900f\u660e \n                if(a[x][y]!=a[new_x][new_y]){//\u989c\u8272\u76f8\u540c \n                    q=1;\n                }else{//\u989c\u8272\u4e0d\u76f8\u540c \n                    q=0;\n                }\n            }\n        }\n        \n        if(b[new_x][new_y]>b[x][y]+q){//\u66f4\u65b0\u82b1\u91d1\u5e01\u6700\u5c0f\u503c \n            b[new_x][new_y]=b[x][y]+q;\n            c[x][y]=1;\n            dfs(new_x,new_y,new_z);\n            c[x][y]=0;//\u4e0d\u7528\u6211\u89e3\u91ca\u4e86\u5427  \n        } \n    }\n}\n\nint main(){\n    cin>>m>>n;//\u8f93\u5165\u77e9\u9635\u8fb9\u957f\u4e0e\u989c\u8272\u6570\u76ee \n    for(int i=0;i<101;i++){\n        for(int j=0;j<101;j++){\n            b[i][j]=20000;//\u521d\u59cb\u5316\n        }\n    }\n    b[1][1]=0;//\u521d\u59cb\u5316 \n    for(int i=1;i<=m;i++) {\n        for(int j=1;j<=m;j++) {\n            a[i][j] = -1;//\u5148\u5168\u90e8\u4e3a\u900f\u660e \n        }\t\n    }\n    for(int i=1;i<=n;i++){\n        int x,y,k;//\u5b9a\u4e49\u5750\u6807\uff0c\u989c\u8272\n        cin>>x>>y>>k;// \u8fd9\u4e00\u884c\u8c01\u9700\u8981\u89e3\u91ca\u8bf7\u81ea\u884c\u9762\u58c1 \n        a[x][y]=k;// \u8fd9\u4e00\u884c\u540c\u4e0a \n    }\n    c[1][1]=1;//\u53d8\u6210\u8d70\u8fc7\u7684 \n    dfs(1,1,-1);//\u5f00\u59cbDFS \n    if(b[m][m]==20000){//\u5982\u679c\u6ca1\u53d8\u5316\u8fc7 \n        cout<<-1<<endl;\n    }else{//\u5426\u5219 \n        cout<<b[m][m]<<endl;//\u8f93\u51fa\u6700\u5c11\u82b1\u8d39\u91d1\u5e01\u503c \n    }\n    return 0;\n}\n```\n\n\u52b3\u8bf7\u5404\u4f4ddalao\u8bc4\u4ef7\u4e00\u4e0b\u6211\u7684\u4ee3\u7801\uff0c",
        "postTime": 1548988464,
        "uid": 147595,
        "name": "Dancing_Wave",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u5f88\u65e9\u4ee5\u524d\u5c31\u7528$DFSAC$\u6b64\u9898\uff0c\u73b0\u5728\u8001\u5e08\u8bb2\u56fe\u8bba\u7559\u8fd9\u9053\u9898\u4f5c\u4e1a\uff0c\u5c31\u53c8\u6765\u5199\u4e86\u4e00\u4e0b\n\n\u672c\u9898\u91c7\u7528~~\u7384\u5b66~~\u90bb\u63a5\u8868\u5b58\u8fb9\u5927~~fa\u2642~~\u6cd5+$Dijkstra$\n\n```\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <queue>\n\nusing namespace std;\n\nconst int INF = 0x3fffffff;\nconst int MAX_M = 109;\n\nconst int dx[] = {-1, 0, 1, 0};\nconst int dy[] = {0, -1, 0, 1};\n\nint m;                   // \u68cb\u76d8\u5bbd\u5ea6\nint chart[MAX_M][MAX_M]; // \u68cb\u76d8\u989c\u8272\uff080/1/2\uff09\nint dis[MAX_M][MAX_M];   // \u6bcf\u4e2a\u683c\u5b50\u8bb0\u4f5c\u4e00\u4e2a\u8282\u70b9\u3002\u7531\u4e8e\u683c\u5b50\u662f\u4e8c\u7ef4\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u7528\u4e8c\u7ef4\u6570\u7ec4\u6bd4\u8f83\u65b9\u4fbf\u3002\n                         // \u601d\u8003\uff1a\u5982\u679c\u8981\u4f7f\u7528\u4e00\u7ef4\u6570\u7ec4\uff0c\u8fd9\u91cc\u7684\u6570\u7ec4\u5927\u5c0f\u5e94\u8be5\u662f\u591a\u5c11\uff1f\u4e0b\u9762\u7684\u7a0b\u5e8f\u8be5\u5982\u4f55\u4fee\u6539\uff1f\n\nstruct edge_t {\n\tint x, y;   // \u8fb9\u7684\u7ec8\u70b9\n\tint weight; // \u8fb9\u7684\u6743\u503c\n\t\n\tedge_t(int x_, int y_, int weight_):\n\t\tx(x_), y(y_), weight(weight_) {\t}\n};\n\n// priority_queue\u6240\u9700\u8981\u7684\u8f85\u52a9\u7c7b\u578b\nstruct queue_element {\n\tint x, y;\n\tint dis_value;\n\t\n\tqueue_element(int x_, int y_, int dis_value_):\n\t\tx(x_), y(y_), dis_value(dis_value_) { }\n\t\t\n\tbool operator <(const queue_element &other) const {\n\t\treturn dis_value > other.dis_value;\n\t}\n};\n\nvector<edge_t> edges[MAX_M][MAX_M]; // \u4e34\u63a5\u8868\n\n// \u5224\u65ad\u5750\u6807\u662f\u5426\u5728\u68cb\u76d8\u5185\nbool xy_valid(int x, int y) {\n\treturn 1<=x && x<=m && 1<=y && y<=m;\n}\n\n// \u589e\u52a0\u4e00\u6761 (x0,y0) ~> (x1,y1) \u6743\u503c\u4e3aweight\u7684\u8fb9\nvoid add_edge(int x0, int y0, int x1, int y1, int weight) {\n\tedges[x0][y0].push_back(edge_t(x1, y1, weight));\n}\n\n// \u6dfb\u52a0 (x,y) \u8fde\u5230\u5b83\u7684\u90bb\u5c45\u4eec\u7684\u8fb9\nvoid add_neighbors(int x, int y) {\n\tif (chart[x][y] == 0) {\n\t\treturn;\n\t}\n\t\n\tfor (int i=0; i<4; ++i) {\n\t\tint tx = x + dx[i];\n\t\tint ty = y + dy[i];\n\t\tif (!xy_valid(tx, ty)) {\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif (chart[tx][ty] != 0) {\n\t\t\t// \u76f8\u90bb\u70b9\n\t\t\tadd_edge(x, y, tx, ty, chart[x][y]==chart[tx][ty] ?0 :1);\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tfor (int j=0; j<4; ++j) {\n\t\t\tint ux = tx + dx[j];\n\t\t\tint uy = ty + dy[j];\n\t\t\tif (!xy_valid(ux, uy) || (x==ux && y==uy) || chart[ux][uy] == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\t// \u76f8\u90bb\u70b9\u7684\u76f8\u90bb\u70b9\n\t\t\tadd_edge(x, y, ux, uy, chart[x][y]==chart[ux][uy] ?2 :3);\n\t\t}\n\t}\n}\n\n// \u6a21\u677f\nvoid dijkstra() {\n\tpriority_queue<queue_element> q;\n\tq.push(queue_element(1, 1, 0));\n\tfor (int i=1; i<=m; ++i) {\n\t\tfor (int j=1; j<=m; ++j) {\n\t\t\tdis[i][j] = INF;\n\t\t}\n\t}\n\t\n\twhile (!q.empty()) {\n\t\tqueue_element t = q.top();\n\t\tq.pop();\n\t\tif (dis[t.x][t.y] != INF) {\n\t\t\tcontinue;\n\t\t}\n\t\tdis[t.x][t.y] = t.dis_value;\n\t\t\n\t\tfor (vector<edge_t>::const_iterator e = edges[t.x][t.y].begin(); e != edges[t.x][t.y].end(); ++e) {\n\t\t\tq.push(queue_element(e->x, e->y, t.dis_value + e->weight));\n\t\t}\n\t}\n}\n\nint main() {\n\t// \u8f93\u5165\n\tint n; \n\tcin >>m >>n;\n\tfor (int i=0; i<n; ++i) {\n\t\tint x, y, c;\n\t\tcin >>x >>y >>c;\n\t\tchart[x][y] = c+1;\n\t}\n\t\n\t// \u601d\u8003\uff1a\n\t// chart[m][m]==0\u65f6\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\n\t// \u4e3a\u4ec0\u4e48\u4e0b\u9762\u8fd9\u6837\u505a\u53ef\u4ee5\u89e3\u51b3\uff1f\n\t// \u8fd8\u53ef\u4ee5\u600e\u6837\u89e3\u51b3\uff1f\n\t++m;\n\tchart[m-1][m] = 1;\n\tchart[m][m-1] = 2;\n\t\n\t// \u5efa\u56fe\n\tfor (int i=1; i<=m; ++i) {\n\t\tfor (int j=1; j<=m; ++j) {\n\t\t\tadd_neighbors(i, j);\n\t\t}\n\t}\n\t\n\t// \u6c42\u5230(1,1)\u7684\u6700\u77ed\u8def\u5f84\n\tdijkstra();\n\n\t// \u8f93\u51fa\n\tint ans = min(dis[m-1][m], dis[m][m-1]);\n\tcout <<(ans==INF ?-1 :ans) <<endl;\n}\n\n```\n\n\u6211\u77e5\u9053\u6709\u4e9b\u5730\u65b9\u5f88\u795e\u5947\n\n\u6240\u4ee5\u4e0b\u9762\u6211\u6765\u8bb2\u89e3\u4e00\u4e0b\n\n~~Dijkstra\u592a\u57fa\u7840\u4e86\u5c31\u4e0d\u8bb2\u4e86\u5427~~\n\n# 1.\u4ee3\u7801\u5b9e\u73b0\n\n## \u90bb\u63a5\u8868&$vector$\n\n\u987e\u540d\u601d\u4e49\uff0c\u4e00\u4e2a\u70b9\u540e\u9762\u8ddf\u7740\u4e00~~\u5927\u5768~~\u4e2a\u94fe\u8868\u7528\u6765\u5b58\u8fb9\n\n\u663e\u7136\u8fd9\u9700\u8981\u7528\u5230\u94fe\u8868\n\n~~\u4f46\u662f\u624b\u6253\u597d\u9ebb\u70e6\u5440~~\n\n\u4e8e\u662f\u6211\u4eec\u53d1\u73b0 $STL$ \u6709\u4e00\u4e2a\u53eb\u505a$list$\u7684\u4e1c\u897f\n\n\u4e0d\u7528\u624b\u6253\u94fe\u8868\n\n\u4f46\u662f\u8fd9\u73a9\u610f\u513f\u5b9e\u5728\u662f\u592a\u9e21\u808b\u4e86\n\n\u800c\u6070\u597d\u6211\u4eec\u53c8\u6709\u66f4\u597d\u4f7f\u7684\u6570\u636e\u7ed3\u6784\n\n\u6240\u4ee5\u6211\u4eec\u4f9d\u7136\u4e0d\u7528\u4ed6\n\n~~C++\u771f\u662f\u4e00\u95e8\u96be\u5b66\u7684\u8bed\u8a00~~![](https://i.loli.net/2018/08/11/5b6eca17075cd.jpg)\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u7528\u4ec0\u4e48\u5462\uff1f\n\n\u6709\u8bf7\u5927\u9b54\u738b\u51fa\u573a\uff01\u3010\u638c\u58f0\u3011\n\n\u8fd9\u4e2a\u4e1c\u897f\u53ebvector~~\u86e4\uff1f\u524d\u5411\u661f\u662f\u4ec0\u4e48~~\n\n\u5173\u4e8e\u4ed6\u7684\u4ecb\u7ecd\u5f88\u591a\n\n\u5728\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\n\n\u62ff\u4ed6\u5c31\u53ef\u4ee5\u5b9e\u73b0$list$\u6240\u6709\u57fa\u672c\u64cd\u4f5c\uff08\u590d\u6742\u5ea6\u4e0d\u7ba1\n\n## \u4f18\u5316$Dijkstra$\n\n\u4f17\u6240\u5468\u77e5\n\n$Dijkstra$\u590d\u6742\u5ea6\u4e3a$O(N^2)$\n\n\u800c\u4e14\u662f\u5b9e\u6253\u5b9e\u7684$O(N^2)$\n\n\u90a3\u4e48$n$\u5de8\u5927\u65e0\u6bd4\u600e\u4e48\u529e\uff1f\n\n![](https://i.loli.net/2018/08/12/5b6fd12ac0062.jpg)\n\n\u76f8\u4fe1\u5927\u5bb6\u90fd\u77e5\u9053$STL$\u91cc\u6709\u4e2a\u4e1c\u897f\u53eb\u505a$queue$\n\n~~\u867d\u7136queue\u4e5f\u53ef\u4ee5\u7528vector\u4ee3\u66ff~~\n\n\u4f46\u662f\u8fd9\u91cc\u9762\u6709\u4e00\u4e2a\u9006\u5929\u7684\u4e1c\u897f\u53eb\u505a$priority\\_queue$\uff08\u4f18\u5148\u961f\u5217\uff09\n\n\u8fd9\u4e2a\u4e1c\u897f\u662f\u771f\u7684\u597d\u7528\uff0c\u81ea\u52a8\u6392\u5e8f\n\n\u7528\u5b83\u6765\u4f18\u5316$Dijkstra$\u518d\u5408\u9002\u4e0d\u8fc7\u5566\n\n\u4f46\u662f\u8fd9\u4e2a\u73a9\u610f\u4e5f\u6709\u4ed6\u4e0d\u53cb\u5584\u7684\u4e00\u9762\uff0c\u4e0d\u652f\u6301\u5728\u7ebf\u4fee\u6539\n\n\u4f7f\u7528$dis$\u6570\u7ec4\u7ef4\u62a4\u96c6\u5408\uff0c\u66f4\u65b0\u6700\u5c0f\u503c\uff0c\u53ef\u4ee5\u627e\u5230\u5143\u7d20\u76f4\u63a5\u4fee\u6539\n\n\u4f46\u662f\u4f60\u628a\u5b83\u6254\u8fdb$priority\\_queue$\uff0c\u5f53\u573a\u6b47\u83dc\n\n\u4f60\u90fd\u627e\u4e0d\u5230\u8fd9\u4e2a\u5143\u7d20\n\n\u90a3\u600e\u4e48\u529e\u5462\uff1f\n\n~~C++\u771f\u662f\u4e00\u95e8\u96be\u5b66\u7684\u8bed\u8a00~~![](https://i.loli.net/2018/08/11/5b6eca17075cd.jpg)\n\n\u6211\u4eec\u4e0d\u7ba1\u4ed6\uff0c\u7167\u65e7\u6254\u65b0\u5143\u7d20\u8fdb\u53bb\uff0c\u4f46\u662f\u8981\u591a\u5f00\u4e00\u4e2a\u6570\u7ec4\u6807\u8bb0\u8fd9\u4e2a\u4e1c\u897f\u5410\u6ca1\u5410\u51fa\u6765\uff0c\u5982\u679c\u4e0b\u4e00\u4f1a\u5410\u51fa\u6765\u4e86\u5df2\u7ecf\u5410\u8fc7\u7684\u76f4\u63a5\u6254\u6389\u5c31\u884c\u4e86\n\n\u8bf4\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u53d1\u73b0\u77e5\u9053\u8ddd\u79bb\u7684\u540c\u65f6\uff0c\u8fd8\u8981\u77e5\u9053\u8282\u70b9\u7f16\u53f7\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u6254\u7ed9$priority\\_queue$\u7684\u5e94\u8be5\u662f\u4e00\u7ec4\u6570\u636e\n\n\u6709\u7684\u5927\u4f6c\u8bf4\uff1a\u7528$pair$\n\n\u4f46\u662f\u6253\u5b8c\u7a0b\u5e8f\u5927\u6982\u662f\u8fd9\u4e2a\u6837\uff1a\n\n```\nxxx.first...xxx.second\nxxx.first\nxxx.second\nxxx.first\nxxx.first\nxxx.second\nxxx.first...xxx.second\n```\n\nW T F \uff1f\n\n\u9b3c\u77e5\u9053fist\u548csecond\u662f\u4ec0\u4e48\u4e1c\u897f\u5440\n\n\u6240\u4ee5\u6211\u4eec\u4e0d\u7528$pair$\n\n\u81ea\u5df1\u5199\u7ed3\u6784\u4f53\n\n```\nstruct queue_element\n{\n\tint x,y,dis_value;\n\tqueue_element(int x_,int y_,int dis_value_):\n\t\tx(x_),y(y_),dis_value(dis_value_){}//\u8d4b\u503c\uff0c\u6ca1\u6709\u4e3a\u4ec0\u4e48\uff0c\u80cc\u8fc7\n};\n```\n\n~~C++\u771f\u662f\u4e00\u95e8\u96be\u5b66\u7684\u8bed\u8a00~~![](https://i.loli.net/2018/08/11/5b6eca17075cd.jpg)\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0$priority\\_queue$\u4e0d\u8ba4\u8fd9\u73a9\u610f\n\n\u4ed6\u4e0d\u4f1a\u6bd4\u8f83\n\n\u6211\u4eec\u8981\u91cd\u8f7d  $<$\uff08\u4e0d\u505a\u6ce8\u91ca\uff0c\u81ea\u884c\u7406\u89e3\uff09\n\n```\nbool operator < (const queue_element &other) const\n\t{\n\t\treturn dis_value>other.dis_value;\n\t}\n```\n\n\u7136\u540e\u5c31\u6ca1\u95ee\u9898\u4e86\n\n# 2.\u5b58\u8fb9\u601d\u60f3\n\n\u8fd9\u662f\u4e00\u4e2a\u683c\u5b50\u56fe\uff0c\u600e\u4e48\u628a\u5b83\u8f6c\u5316\u6210\u666e\u901a\u56fe\u5462\n\n\u4e0d\u96be\u60f3\u5230\u7528\u683c\u5b50\u505a\u70b9\uff0c\u76f8\u90bb\u683c\u5b50\u540c\u8272\u8fb9\u6743\u4e3a0\uff0c\u5f02\u8272\u8fb9\u6743\u4e3a1\uff0c\u65e0\u8272\u4e0d\u8fde\u8fb9\n\n\u4f46\u662f\uff0c~~\u819c\u2642~~\u9b54\u6cd5\u600e\u4e48\u529e\uff1f\n\n\u8003\u8651\u5230\u9b54\u6cd5\u7528\u5b8c\u4ee5\u540e\u5c31\u4f1a\u6d88\u5931\uff0c\u76f8\u5f53\u4e8e\u8017\u8d392\u62163\u91d1\u5e01\u8d70\u4e24\u6b65\u3002\u90a3\u4e48\u5bf9\u4e8e\u521a\u624d\u6ca1\u6709\u8fde\u8fb9\u7684\u683c\u5b50\uff0c\u5c06\u4e0e\u65e0\u8272\u683c\u5b50\u76f8\u90bb\u7684\u6709\u8272\u683c\u5b50\u4e0e\u5f53\u524d\u683c\u5b50\u8fde\u8fb9\uff0c\u540c\u8272\u8fb9\u6743\u4e3a2\uff0c\u5f02\u8272\u8fb9\u6743\u4e3a3\n\n\u63a5\u4e0b\u6765\u53c8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u7ec8\u70b9\u65e0\u8272\uff0c\u90a3\u4e48\u4ed6\u5c31\u4e0d\u4f1a\u88ab\u8fde\u8fb9\uff0c\u90a3\u4e48\u6c38\u8fdc\u4e5f\u65e0\u6cd5\u5230\u8fd9\u4e2a\u70b9\uff0c\u6240\u4ee5\u8981\u9884\u5904\u7406\uff0c\u628a$m+1$\uff0c\u7136\u540e\u628a\u7ec8\u70b9\u53f3\u8fb9\u3001\u4e0b\u8fb9\u7684\u683c\u5b50\u5206\u522b\u6d82\u6210\u7ea2\u8272\u3001\u9ec4\u8272\uff0c\u5c31OK\u4e86\n\n~~\u7136\u540e\u7231\u548b\u641e\u548b\u641e~~\n\n### \u4e3b\u8981\u5c31\u662f\u8fd9\u4e9b\u4e86\n\n\u7eaf\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nconst int INF=0x3fffffff;\nconst int MAX_M=109;\nconst int dx[]={-1,0,1,0};\nconst int dy[]={0,-1,0,1};\nint m;\nint dis[MAX_M][MAX_M];\nint chart[MAX_M][MAX_M];\nstruct edge_t\n{\n\tint x,y,weight;\n\tedge_t(int x_,int y_,int weight_):\n\t\tx(x_),y(y_),weight(weight_){}\n};\nstruct queue_element\n{\n\tint x,y,dis_value;\n\tqueue_element(int x_,int y_,int dis_value_):\n\t\tx(x_),y(y_),dis_value(dis_value_){}\n\tbool operator < (const queue_element &other) const\n\t{\n\t\treturn dis_value>other.dis_value;\n\t}\n};\nvector<edge_t> edges[MAX_M][MAX_M];\nbool xy_valid(int x,int y)\n{\n\treturn 1<=x&&x<=m&&1<=y&&y<=m;\n}\nvoid add_edge(int x0,int y0,int x1,int y1,int weight)\n{\n\tedges[x0][y0].push_back(edge_t(x1,y1,weight));\n}\nvoid add_neighbors(int x,int y)\n{\n\tif(chart[x][y]==0)\n\t\treturn;\n\tfor(int i=0;i<4;++i)\n\t{\n\t\tint tx=x+dx[i],ty=y+dy[i];\n\t\tif(!xy_valid(tx,ty))\n\t\t\tcontinue;\n\t\tif(chart[tx][ty]!=0)\n\t\t{\n\t\t\tadd_edge(x,y,tx,ty,chart[x][y]==chart[tx][ty]?0:1);\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int j=0;j<4;++j)\n\t\t{\n\t\t\tint ux=tx+dx[j],uy=ty+dy[j];\n\t\t\tif(!xy_valid(ux,uy)||(ux==x&&uy==y)||chart[ux][uy]==0)\n\t\t\t\tcontinue;\n\t\t\tadd_edge(x,y,ux,uy,chart[x][y]==chart[ux][uy]?2:3);\n\t\t}\n\t}\n}\nvoid dijkstra()\n{\n\tpriority_queue<queue_element> q;\n\tq.push(queue_element(1,1,0));\n\tfor(int i=1;i<=m;++i)\n\t\tfor(int j=1;j<=m;++j)\n\t\t\tdis[i][j]=INF;\n\twhile(!q.empty())\n\t{\n\t\tqueue_element t=q.top();\n\t\tq.pop();\n\t\tif(dis[t.x][t.y]!=INF)\n\t\t\tcontinue;\n\t\tdis[t.x][t.y]=t.dis_value;\n\t\tfor(vector<edge_t>::const_iterator e=edges[t.x][t.y].begin();e!=edges[t.x][t.y].end();++e)\n\t\t\tq.push(queue_element(e->x,e->y,t.dis_value+e->weight));\n\t}\n}\nint main()\n{\n\tint n;\n\tcin>>m>>n;\n\tfor(int i=0;i<n;++i)\n\t{\n\t\tint x,y,c;\n\t\tcin>>x>>y>>c;\n\t\tchart[x][y]=c+1;\n\t}\n\t++m;\n\tchart[m-1][m]=1;\n\tchart[m][m-1]=2;\n\tfor(int i=1;i<=m;++i)\n\t\tfor(int j=1;j<=m;++j)\n\t\t\tadd_neighbors(i,j);\n\tdijkstra();\n\tint ans=min(dis[m-1][m],dis[m][m-1]);\n\tcout<<(ans==INF?-1:ans)<<'\\n';\n\treturn 0;\n}\n```\n\n## \u518d\u89c1",
        "postTime": 1549969052,
        "uid": 85682,
        "name": "\u7edd\u9876\u6211\u4e3a\u5cf0",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u867d\u7136\u4e0d\u6562\u79f0\u81ea\u5df1dalao\uff0c\u4f46\u662f\u5176\u4ed6\u9898\u89e3\u7684DP\u597d\u50cf\u90fd\u662f\u9519\u7684\u8bf6qaq\u2026\u2026\n\u56e0\u4e3aDP\u7684\u9012\u63a8\u65b9\u5411\u662f\u4ece\u5de6\u4e0a\u5f80\u53f3\u4e0b\u63a8\u7684\uff0c\u65e0\u6cd5\u8003\u8651\u4ece\u53f3\u8fb9\u6216\u8005\u4e0b\u8fb9\u8d70\u5230\u5f53\u524d\u4f4d\u7f6e\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u53ea\u8fdb\u884c\u4e00\u6b21DP\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u5f97\u5230\u6700\u4f18\u89e3\u3002\u90a3\u4e48\uff0c\u8fdb\u884c\u7b2c\u4e8c\u6b21DP\u7684\u65f6\u5019\uff0c\u53f3\u8fb9\u548c\u4e0b\u8fb9\u7684\u70b9\u5df2\u7ecf\u662f\u88ab\u66f4\u65b0\u8fc7\u7684\u4e86\uff0c\u56e0\u6b64\u7b2c\u4e8c\u6b21DP\u5c31\u4f1a\u8003\u8651\u5230\u5411\u5de6\u8d70\u4e00\u6b21\u6216\u8005\u5411\u4e0a\u8d70\u4e00\u6b21\u7684\u60c5\u51b5\u4e86\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u53ea\u8981\u8fdb\u884cm\u6b21DP\u5c31\u53ef\u4ee5\u628a\u6240\u6709\u7684\u60c5\u51b5\u90fd\u8003\u8651\u5230\u4e86\u3002\n\u4ee3\u7801\u6709\u70b9\u6076\u5fc3\uff0c\u867d\u7136\u6709\u5f88\u591a\u8f6c\u79fb\u662f\u53ef\u4ee5\u4e0d\u7528\u5199\u7684\uff0c\u4f46\u662f\u4e3a\u4e86\u6574\u9f50\u8fd8\u662f\u5199\u4e0a\u4e86qwq\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#define MAX(a,b) (((a)>(b))?(a):(b))\n#define MIN(a,b) (((a)<(b))?(a):(b))\nusing namespace std;\nint n,m;\nint map[105][105];\nint f[105][105][3][3];//i,j\u5750\u6807,k\u5f53\u524d\u683c\u5b50\u989c\u8272\uff0cl=1\u5230\u5f53\u524d\u70b9\u7528\u9b54\u6cd5\uff0cl=0\u5230\u5f53\u524d\u70b9\u6ca1\u7528\u9b54\u6cd5 \n\nint main()\n{\n\tmemset(map,-1,sizeof(map));\n\tmemset(f,63,sizeof(f));\n\tscanf(\"%d%d\",&m,&n);\n\tint maxx=f[m][m][0][0];\n\tint x,y;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tscanf(\"%d\",&map[x][y]);\n\t}\t\n\tf[1][1][map[1][1]][0]=0;\n\tfor(int k=1;k<=m;k++)\n\tfor(int i=1;i<=m;i++)\n\tfor(int j=1;j<=m;j++)\n\t{\n\t\tif(map[i][j]==1)//\u5f53\u524d\u70b9\u662f\u9ec4\u8272 \n\t\t{\n\t\t\tf[i][j][1][0]=MIN(f[i][j][1][0],MIN(f[i-1][j][1][0],MIN(f[i-1][j][1][1],MIN(f[i-1][j][0][0]+1,f[i-1][j][0][1]+3))));\n\t\t\tf[i][j][1][0]=MIN(f[i][j][1][0],MIN(f[i][j-1][1][0],MIN(f[i][j-1][1][1],MIN(f[i][j-1][0][0]+1,f[i][j-1][0][1]+3))));\n\t\t\tf[i][j][1][0]=MIN(f[i][j][1][0],MIN(f[i+1][j][1][0],MIN(f[i+1][j][1][1],MIN(f[i+1][j][0][0]+1,f[i+1][j][0][1]+3))));\n\t\t\tf[i][j][1][0]=MIN(f[i][j][1][0],MIN(f[i][j+1][1][0],MIN(f[i][j+1][1][1],MIN(f[i][j+1][0][0]+1,f[i][j+1][0][1]+3))));\n\t\t}\n\t\tif(map[i][j]==0)//rednow\n\t\t{\n\t\t\tf[i][j][0][0]=MIN(f[i][j][0][0],MIN(f[i-1][j][0][0],MIN(f[i-1][j][0][1],MIN(f[i-1][j][1][0]+1,f[i-1][j][1][1]+3))));\n\t\t\tf[i][j][0][0]=MIN(f[i][j][0][0],MIN(f[i][j-1][0][0],MIN(f[i][j-1][0][1],MIN(f[i][j-1][1][0]+1,f[i][j-1][1][1]+3))));\n\t\t\tf[i][j][0][0]=MIN(f[i][j][0][0],MIN(f[i+1][j][0][0],MIN(f[i+1][j][0][1],MIN(f[i+1][j][1][0]+1,f[i+1][j][1][1]+3))));\n\t\t\tf[i][j][0][0]=MIN(f[i][j][0][0],MIN(f[i][j+1][0][0],MIN(f[i][j+1][0][1],MIN(f[i][j+1][1][0]+1,f[i][j+1][1][1]+3))));\n\t\t}\n\t\telse //whitenow\n\t\t{\n\t\t\tf[i][j][1][1]=MIN(f[i][j][1][1],MIN(f[i][j][1][0]+2,MIN(f[i-1][j][1][0]+2,f[i-1][j][0][0]+3)));\n\t\t\tf[i][j][1][1]=MIN(f[i][j][1][1],MIN(f[i][j][1][0]+2,MIN(f[i][j-1][1][0]+2,f[i][j-1][0][0]+3)));\n\t\t\tf[i][j][1][1]=MIN(f[i][j][1][1],MIN(f[i][j][1][0]+2,MIN(f[i+1][j][1][0]+2,f[i+1][j][0][0]+3)));\n\t\t\tf[i][j][1][1]=MIN(f[i][j][1][1],MIN(f[i][j][1][0]+2,MIN(f[i][j+1][1][0]+2,f[i][j+1][0][0]+3)));\n\t\t\tf[i][j][0][1]=MIN(f[i][j][0][1],MIN(f[i][j][0][0]+2,MIN(f[i-1][j][0][0]+2,f[i-1][j][1][0]+3)));\n\t\t\tf[i][j][0][1]=MIN(f[i][j][0][1],MIN(f[i][j][0][0]+2,MIN(f[i][j-1][0][0]+2,f[i][j-1][1][0]+3)));\n\t\t\tf[i][j][0][1]=MIN(f[i][j][0][1],MIN(f[i][j][0][0]+2,MIN(f[i+1][j][0][0]+2,f[i+1][j][1][0]+3)));\n\t\t\tf[i][j][0][1]=MIN(f[i][j][0][1],MIN(f[i][j][0][0]+2,MIN(f[i][j+1][0][0]+2,f[i][j+1][1][0]+3)));\n\t\t}\n\t}\n\tint min=MIN(f[m][m][0][1],MIN(f[m][m][0][0],MIN(f[m][m][1][0],f[m][m][1][1])));\n\tif(min==maxx)min=-1;printf(\"%d\",min);\n}\n```",
        "postTime": 1535440067,
        "uid": 33199,
        "name": "\u5f20\u66dc\u73ba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u770b\u89c1\u6ca1\u4eba\u7528\u4f18\u5148\u961f\u5217\u6211\u5c31\u5148\u6765\u5566\uff01\n\u6211\u7528bfs\n\u5148\u4e0a\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<string>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nstruct node{//\u5b9a\u4e49\u961f\u5217\u5143\u7d20\n    int money=0;\n    int x;\n    int y;\n    bool magic=true;\n    friend bool operator < (node a,node b){//\u4e0d\u7528\u7ba1\u8fd9\u662f\u4ec0\u4e48\u53cd\u6b63\u7528\u4e86\u4f18\u5148\u961f\u5217\u5c31\u8981\u7528\u8fd9\u4e2a\u6765\u8868\u793a\u6392\u5e8f\u89c4\u5f8b\uff08\u4e5f\u5c31\u662f\u4f18\u5148\u987a\u5e8f\uff09\n    \treturn a.money > b.money;//\u4ee5\u91d1\u5e01\u5c0f\u53f7\u8c01\u5c0f\u8c01\u5728\u524d\u9762\uff0c\u6ce8\u610f\u5982\u679c\u662f\u60f3\u8981\u8fbe\u5230a<b\u90a3\u4e48\u5c31\u8981\u5199b>a\n    }\n};  \nint book[109][109];//\u7279\u522b\u6ce8\u610f\u56e0\u4e3a\u4f7f\u7528\u4e86\u4f18\u5148\u961f\u5217\u90a3\u4e48\uff0c\u6bcf\u6b21\u7684\u7b2c\u4e00\u4e2a\u5c31\u662f\u6700\u5c0f\u7684\u90a3\u4e2a\u6240\u4ee5\u5c31\u53ef\u4ee5\u50cf\u5e73\u5e38\u4e00\u6837\u6253bfs\u4e86\nint nx[4]={0,0,1,-1};//\u65b9\u5411x\nint ny[4]={-1,1,0,0};//\u65b9\u5411y\nint m,n;\nint plat[109][109];//\u50a8\u5b58\u5730\u56fe\nint flag=-1;\nvoid bfs(){\n    priority_queue <node> q;//\u5b9a\u4e49\u4e00\u4e2a\u4f18\u5148\u961f\u5217\n    node first;\n    first.x=1,first.y=1;\n    q.push(first);\n    book[1][1]=1;//\u521d\u59cb\u5316\n    while(q.empty()==false){\n        node now;\n        now=q.top();//\u5728\u4f18\u5148\u961f\u5217\u4e2d\u53d6\u7b2c\u4e00\u4e2a\u7528\u67d0\u67d0\u67d0.top()\n        q.pop();\n        if(now.x==m&&now.y==m){//\u6ee1\u8db3\u5c31\u8df3\u51fa\u56e0\u4e3a\u4f18\u5148\u961f\u5217\n            flag=now.money;\n            return;\n        }\n        for(int i=0;i<4;i++){\n            int tx=now.x+nx[i];//\u5411\u4e0b\u4e00\u6b65\u5ef6\u4f38\n            int ty=now.y+ny[i];\n            if(tx<1||ty<1||tx>m||ty>m)continue;//\u8fb9\u754c\u5224\u65ad\n            if(book[tx][ty]==1)continue;//\u8d70\u8fc7\u5224\u65ad\n            if(plat[tx][ty]==-1&&now.magic==false)continue;//\u662f\u7a7a\u683c\u4f46\u4e0d\u80fd\u7528\u9b54\u6cd5\u5224\u65ad\n            if(plat[tx][ty]!=-1){//\u6709\u8272\u65b9\u5757\u5224\u65ad\n                node next;\n                next.magic=true;\n                next.x=tx,next.y=ty;\n                if(plat[tx][ty]==plat[now.x][now.y])next.money=now.money;//\u540c\u8272\n                else next.money=now.money+1;//\u4e0d\u540c\u8272\n                q.push(next);//\u5165\u961f\n                book[tx][ty]=1;//\u6807\u8bb0\n            }\n            if(plat[tx][ty]==-1){//\u7a7a\u683c\u4f46\u53ef\u4ee5\u7528\u9b54\u6cd5\n                node next;\n                next.x=tx,next.y=ty;\n                next.magic=false;\n                next.money=now.money+2;\n                plat[tx][ty]=plat[now.x][now.y];\n                q.push(next);\n                book[tx][ty]=1;//\u540c\u4e0a\n            }\n        }\n    }\n}\nint main(){\n    cin>>m>>n;\n    memset(plat,-1,sizeof(plat));\n    for(int i=1;i<=n;i++){\n        int x1,y1,c;\n        cin>>x1>>y1>>c;\n        plat[x1][y1]=c;\n    }\n    bfs();\n    cout<<flag;//\u8f93\u51fa flag\u5df2\u8d4b\u503c-1\u6240\u4ee5\u5728bfs\u4e2d\u6ca1\u8d4b\u503c\u90a3\u5c31\u76f4\u63a5\u662f-1\u4e86\n} \n```",
        "postTime": 1535014359,
        "uid": 40352,
        "name": "Tazo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u5927\u5bb6\u6709\u90a3\u4e48\u559c\u6b22\u6df1\u641c\u5417\u3002\u3002\u3002\n\n\u5bf9\u4e8e\u6b64\u9898\uff0c`DFS`\u548c`BFS`\u5dee\u8ddd\u4e0d\u5927\uff0c\u4f46\u662f\u4e00\u822c\u683c\u5b50\u91cc\u79fb\u52a8\u7684\u9898`BFS`\u5e94\u8be5\u597d\u4e9b\uff0c\u4e0d\u5bb9\u6613\u88ab\u5361\u3002\n\n- \u6211\u4eec\u6bcf\u4e00\u4e2a\u70b9\u7684\u4e0a\u4e0b\u5de6\u53f3\uff0c\u5982\u679c\u989c\u8272\u76f8\u540c\uff0c\u90a3\u4e48`f[ix][iy] = f[x][y]`\uff0c\u5426\u5219`f[ix][iy] = f[x][y] + 1`\u3002\u5982\u679c\u662f\u7a7a\u7684\u8bdd\uff0c\u90a3\u4e48\u628a\u5b83\u7684\u989c\u8272\u67d3\u4f5c\u5f53\u524d\u5757\u7684\u989c\u8272\u5373\u53ef\uff0c`f[ix][iy] = f[x][y] + 2`\uff08\u56e0\u4e3a\u5982\u679c\u6700\u7ec8\u8def\u5f84\u91cc\u7ecf\u8fc7\u8be5\u7a7a\u683c\u4e24\u7aef\u7684\u989c\u8272\u4e0d\u540c\uff0c\u90a3\u4e48\u628a\u7a7a\u683c\u586b\u6210\u7ea2\u9ec4\u90fd\u53ef\u4ee5\uff0c\u8fd9\u91cc\u5c31\u9009\u62e9\u53d8\u4e3a\u5f53\u524d\u5757\uff09\u3002\n\n- \u56e0\u4e3a\u7b2c\u4e00\u6b21\u8d70\u5230\u4e0d\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\uff0c\u6240\u4ee5\u4e0d\u80fd\u8fdb\u884c`O(N)`\u7684\u5e7f\u641c\uff0c\u53ef\u4ee5\u7c7b\u6bd4`Dijistra`\u4f7f\u7528\u4f18\u5148\u961f\u5217\uff0c\u4e5f\u53ef\u4ee5\u7c7b\u6bd4`SPFA`\u5141\u8bb8\u591a\u6b21\u5165\u961f\u66f4\u65b0\u66f4\u4f18\u7684\u89e3\uff0c\u8fd9\u91cc\u4f7f\u7528\u540e\u8005\u3002\n\n- \u4e0d\u80fd\u4ece\u7a7a\u683c\u8df3\u5230\u7a7a\u683c\uff0c\u6240\u4ee5\u7a7a\u683c\u7684\u79fb\u52a8\u9700\u8981\u7279\u6b8a\u5904\u7406\uff08\u56e0\u6b64\u79fb\u52a8\u4e5f\u4e0d\u9700\u8981\u5224\u65ad\u8fb9\u754c\uff09\n\n- \u56e0\u4e3a\u7a7a\u683c\u65e2\u53ef\u4ee5\u5468\u56f4\u4efb\u610f\u4e00\u4e2a\u683c\u5b50\u8df3\u8fc7\u6765\uff0c\u5b83\u7684\u989c\u8272\u6709\u591a\u79cd\u53ef\u80fd\uff0c\u4e0d\u80fd\u5728\u8df3\u5b83\u7684\u65f6\u5019\u5c31\u76f4\u63a5\u6539\u53d8\u5b83\u7684\u989c\u8272\uff0c\u5426\u5219\u4ee5\u540e\u9047\u5230\u66f4\u4f18\u7684\u89e3\u65f6\u4f1a\u51fa\u9519\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u5c06\u70b9\u8fdb\u961f\u65f6\u989d\u5916\u4fdd\u5b58\u8fd9\u4e2a\u70b9\u7684\u989c\u8272\u548c\u6b65\u6570\uff08\u4ece\u5468\u56f4\u4e0d\u540c\u683c\u5b50\u8df3\u8fc7\u6765\u7684\u7b54\u6848\u4e5f\u53ef\u80fd\u4e0d\u540c\uff09\uff0c\u4f46\u662f\u90a3\u4e2a\u7528\u6765\u5b58\u50a8`[x][y]`\u7b54\u6848\u7684\u6570\u7ec4\u4ecd\u7136\u53ef\u4ee5\u4fdd\u7559\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define inf 0x3f3f3f3f\nusing std::queue;\n\nconst int dx[] = {0, 0, 1, -1};\nconst int dy[] = {1, -1, 0, 0};\n\nint N, M, a[107][107], f[107][107];\n\nstruct Node {int x, y, c, z;};\n//c\u4ee3\u8868\u6211(x,y)\u4e34\u65f6\u7684\u989c\u8272\uff08\u5982\u679c\u672c\u6765\u662f\u767d\u7684\uff09\uff0cz\u4ee3\u8868\u8d70\u5230(x, y)\u7684\u5f53\u524d\u6700\u4f18\u89e3\u3002 \nqueue <Node> Q;\n\nint main()\n{\n\tscanf(\"%d%d\", &N, &M);\n\tfor (int i = 1, x, y, z; i <= M; i++)\n\t\tscanf(\"%d%d%d\", &x, &y, &z), a[x][y] = z + 1;//\u8f93\u5165\u989c\u8272\u4e3a0, 1\uff0c\u4f460\u5e94\u5b58\u50a8\u7a7a\u683c\u3002 \n\t\n\tmemset(f, 0x3f, sizeof f), f[1][1] = 0;\n\tQ.push(Node{1, 1, a[1][1], 0});//\u521d\u59cb\u5316 \n\twhile (Q.size())\n\t{\n\t\tNode tn = Q.front(); Q.pop();\n\t\tint x = tn.x, y = tn.y, c = tn.c, z = tn.z;\n\t\tfor (int d = 0; d < 4; d++)\n\t\t{\n\t\t\tint ix = x + dx[d], iy = y + dy[d];\n\t\t\tif (a[ix][iy])//\u4e0b\u4e00\u683c\u4e0d\u662f\u7a7a\u683c\n\t\t\t{ \n\t\t\t\tint p = z + (a[ix][iy] != c);// (a[ix][iy] != c)\u5373\u989c\u8272\u4e0d\u540c \n\t\t\t\tif (f[ix][iy] > p)\n\t\t\t\t\tf[ix][iy] = p, Q.push(Node{ix, iy, a[ix][iy], p});//p\u76f4\u63a5\u653e\u5165\u961f\u5217\uff0c\u4f46f\u4e5f\u5e94\u66f4\u65b0 \n\t\t\t}\n\t\t\telse if (a[x][y])//\u4e0b\u4e00\u683c\u662f\u7a7a\u683c\uff0c\u4f46\u5f53\u524d\u683c\u4e0d\u662f\u7a7a\u683c \n\t\t\t{\n\t\t\t\tint p = f[x][y] + 2;//\u67d3\u8272\u4ee3\u4ef7\u4e3a2 \n\t\t\t\tif (f[ix][iy] > p)\n\t\t\t\t\tf[ix][iy] = p, Q.push(Node{ix, iy, a[x][y], p});//\u628a\u7a7a\u683c\u6682\u65f6\u67d3\u4e3a\u5f53\u524d\u683c\u989c\u8272\uff0c\u800c\u4e0d\u662f\u66f4\u65b0a\u6570\u7ec4 \n\t\t\t}\n\t\t\t//\u8fd9\u4e00\u683c\u662f\u7a7a\u683c\uff0c\u4e0b\u4e00\u683c\u4e5f\u662f\u7a7a\u683c\uff0c\u6ca1\u6cd5\u8df3 \n\t\t}\n\t}\n\tprintf(\"%d\\n\", f[N][N]!=inf ? f[N][N] : -1);\n}\n```",
        "postTime": 1571295465,
        "uid": 73489,
        "name": "NyaRu_Official",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u672c\u7b97\u6cd5\u662f\u5f53\u65f6\u51fa\u4e86\u8003\u573a\u53ea**\u4e09**\u5206\u949f\u540e\uff0c\u548c\u540c\u5b66\u8111\u888b\u4e00\u62cd\u60f3\u51fa\u6765\u7684\uff0c**\u7ffb\u4e86\u51e0\u4e4e\u6240\u6709\u9898\u89e3\uff0c\u6ca1\u6709\u53d1\u73b0\u76f8\u540c\u89e3\u6cd5\u7684**\uff0c\u73b0\u5728\u628a\u5b83\u5199\u51fa\u6765\uff0c\u4ee5\u796d\u5960\u901d\u53bb\u7684NOIP2017\uff0c\u8fce\u63a5\u5df2\u81f3\u7684NOIP2018.\n\n---\n\n## \u641c\u7d22\n\n\u5f88\u663e\u7136\uff0c\u8fd9\u662f\u4e00\u9053\u641c\u7d22\u9898\u3002\n\n\u6211\u4eec\u8003\u8651\u7528\u4e8c\u5143\u7ec4$(x,y)$\u4ee3\u8868\u5f53\u524d\u641c\u7d22\u5230\u7684\u683c\u5b50\uff0c\u9644\u5e26\u53c2\u6570$q$\u4e3a\u5df2\u7ecf\u4f7f\u7528\u7684\u91d1\u5e01\uff0c$flag$\u4ee3\u8868\u4e0a\u4e00\u6b21\u6709\u6ca1\u6709\u4f7f\u7528**\u819c**\u6cd5\u3002\n\n\u8fd9\u79cd\u641c\u7d22\u53ef\u80fd\u662f\u5927\u90e8\u5206\u4eba\u770b\u5230\u9898\u76ee\u5c31\u60f3\u5230\u7684\u7b97\u6cd5\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u6211\u6700\u540e\u63d0\u4ea4\u7684\u5c31\u662f\u8fd9\u79cd\u7206\u641c\uff0c55\u5206\uff0cTLE\u3002\n\n\u8fd9\u79cd\u8981\u5206\u5f88\u591a\u7c7b\u8ba8\u8bba\uff0c\u5e76\u4e14\u5bf9\u4e8e$flag$\u7684\u5904\u7406\u975e\u5e38\u8ba8\u538c\u3002\n\n---\n\n## \u5982\u4f55\u8f6c\u6362\u819c\u6cd5\n\n\u4e0a\u9762\u63d0\u5230\u7684\u7206\u641c\uff0c\u662f\u5bf9$(x,y)$\u5468\u56f4\u56db\u4e2a\u70b9\u4e0d\u65ad\u8fdb\u884c\u62d3\u5c55\uff0c\u5230\u4e86\u7ec8\u70b9\u5c31\u8bb0\u5f55\u7b54\u6848\u3002\n\n\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/39182.png)\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u88ab\u547d\u9898\u4eba\u7275\u7740\u9f3b\u5b50\u8d70\u4e86\u3002\n\n### \u547d\u9898\u4eba\u8bf4\uff0c\u8981\u6709\u819c\u6cd5\u3002\u6211\u4eec\u5c31\u8981\u8bf4\uff0c\u4e0d\u8981\u6709\u819c\u6cd5\u3002\n\n\u8003\u8651\u819c\u6cd5\uff0c\u672c\u8d28\u4e0a\u662f\u5141\u8bb8\u8fd9\u4e2a\u4eba\u4ece\u8fd9\u4e2a\u70b9\u8d70\u5230\u8ddd\u79bb\u4e3a\u4e24\u683c\u7684**\u6709\u989c\u8272**\u683c\u5b50\u91cc\uff0c\u4ee3\u4ef7\u4e3a\u5728\u8d70\u5230\u76f8\u540c\u6216\u4e0d\u540c\u989c\u8272\u7684\u683c\u5b50\u4e0a\u7684\u4ee3\u4ef7+2\u3002\n\n\u5373\uff0c\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/39181.png)\n\n\u4e0a\u56fe\u4e2d\u7eff\u8272\u683c\u5b50\u5c31\u662f\u8ddd\u79bb\u4e3a1\u7684\u683c\u5b50\uff0c\u84dd\u8272\u683c\u5b50\u5c31\u662f\u8ddd\u79bb\u4e3a2\u7684\u683c\u5b50\u3002\n\n**\u8bf7\u6ce8\u610f\uff0c\u65e0\u8bba\u662f\u4e0a\u56fe\u4e2d\u84dd\u8272\u6216\u8005\u7eff\u8272\u683c\u5b50\uff0c\u90fd\u5fc5\u987b\u5728\u539f\u6765\u7684\u68cb\u76d8\u4e2d\u662f\u6709\u989c\u8272\u7684**\n\n\u81f3\u6b64\uff0c\u819c\u6cd5\u5168\u90e8\u8f6c\u79fb\u5b8c\u6bd5\u3002\n\n---\n\n## \u6700\u7ec8\u641c\u7d22\u7b97\u6cd5\n\n\u6211\u4eec\u6700\u7ec8\u5f62\u6210\u4e86\u8fd9\u6837\u7684\u4e00\u4e2a\u7b97\u6cd5\uff1a\n\n\u901a\u8fc7$dfs$\uff0c\u641c\u7d22\u6bcf\u4e00\u4e2a\u683c\u5b50\uff0c\u53ef\u4ee5\u5411\u5468\u56f4**\u5341\u4e8c**\u4e2a\u65b9\u5411\u62d3\u5c55\u3002\n\n---\n\n## \u526a\u679d\n\n\u8fd9\u6837\u8fc7\u4e0d\u53bb\u7684QAQ\u3002\n\n\u8bbe$opt_{i,j}$\u4ee3\u8868\u5230$(i,j)$\u65f6\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u521d\u503c\u4e3a$INF$\u3002\n\n\u5982\u679c\u6211\u641c\u8fdb\u53bb\u7684\u65f6\u5019\uff0c$opt_{i,j}<=q$\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u5373\u53ef\u3002\n\n---\n\n## \u4ee3\u7801\n\n### \u6211\u9519\u4e86QAQ\uff0c\u4e4b\u540e\u8fd8\u662f\u4e56\u4e56\u5199\u589e\u91cf\u6570\u7ec4\u5427\u3002\u3002\u3002\n\ncode:\n\n```cpp\n#include<iostream>\n#include<cstdio>\n\nusing namespace std;\n\n#define maxm 107\nint m,n,x,y,c,color[maxm][maxm],ans=0x7fffffff,opt[maxm][maxm];\nbool vis[maxm][maxm];\nint min(int a,int b)\n{\n\treturn a>b?b:a;\n}\nvoid f(int x,int y,int q)\n{\n\tif(opt[x][y]&&opt[x][y]<=q) return;\n\topt[x][y]=q; \n\tif(x==m&&y==m){\n\t\tans=min(ans,q);\n\t\treturn;\n\t}\n\tif(x==m-1&&y==m||x==m&&y==m-1&&!color[m][m])\n\t{\n\t\tans=min(ans,q+2);\n\t\treturn;\n\t}\n\tvis[x][y]=0;\n\tif(vis[x][y-1]&&color[x][y-1]){\n\t\tif(color[x][y]==color[x][y-1]){\n\t\t\tf(x,y-1,q);\n\t\t}\n\t\telse{\n\t\t\tf(x,y-1,q+1);\n\t\t}\n\t}\n\tif(vis[x][y+1]&&color[x][y+1]){\n\t\tif(color[x][y]==color[x][y+1]){\n\t\t\tf(x,y+1,q);\n\t\t}\n\t\telse{\n\t\t\tf(x,y+1,q+1);\n\t\t}\n\t}\n\tif(vis[x-1][y]&&color[x-1][y]){\n\t\tif(color[x][y]==color[x-1][y]){\n\t\t\tf(x-1,y,q);\n\t\t}\n\t\telse{\n\t\t\tf(x-1,y,q+1);\n\t\t}\n\t}\n\tif(vis[x+1][y]&&color[x+1][y]){\n\t\tif(color[x][y]==color[x+1][y]){\n\t\t\tf(x+1,y,q);\n\t\t}\n\t\telse{\n\t\t\tf(x+1,y,q+1);\n\t\t}\n\t}//\u4ee5\u4e0b\u4e3a\u819c\u6cd5\u8f6c\u5316\u6765\u76848\u4e2a\u65b9\u5411 \n\tif(vis[x+1][y+1]&&color[x+1][y+1]){\n\t\tif(color[x][y]==color[x+1][y+1]){\n\t\t\tf(x+1,y+1,q+2);\n\t\t}\n\t\telse{\n\t\t\tf(x+1,y+1,q+3);\n\t\t}\n\t}\n\tif(vis[x+1][y-1]&&color[x+1][y-1]){\n\t\tif(color[x][y]==color[x+1][y-1]){\n\t\t\tf(x+1,y-1,q+2);\n\t\t}\n\t\telse{\n\t\t\tf(x+1,y-1,q+3);\n\t\t}\n\t}\n\tif(vis[x-1][y+1]&&color[x-1][y+1]){\n\t\tif(color[x][y]==color[x-1][y+1]){\n\t\t\tf(x-1,y+1,q+2);\n\t\t}\n\t\telse{\n\t\t\tf(x-1,y+1,q+3);\n\t\t}\n\t}\n\tif(vis[x-1][y-1]&&color[x-1][y-1]){\n\t\tif(color[x][y]==color[x-1][y-1]){\n\t\t\tf(x-1,y-1,q+2);\n\t\t}\n\t\telse{\n\t\t\tf(x-1,y-1,q+3);\n\t\t}\n\t}\n\tif(vis[x][y+2]&&color[x][y+2]){\n\t\tif(color[x][y]==color[x][y+2]){\n\t\t\tf(x,y+2,q+2);\n\t\t}\n\t\telse{\n\t\t\tf(x,y+2,q+3);\n\t\t}\n\t}\n\tif(vis[x][y-2]&&color[x][y-2]){\n\t\tif(color[x][y]==color[x][y-2]){\n\t\t\tf(x,y-2,q+2);\n\t\t}\n\t\telse{\n\t\t\tf(x,y-2,q+3);\n\t\t}\n\t}\n\tif(vis[x+2][y]&&color[x+2][y]){\n\t\tif(color[x][y]==color[x+2][y]){\n\t\t\tf(x+2,y,q+2);\n\t\t}\n\t\telse{\n\t\t\tf(x+2,y,q+3);\n\t\t}\n\t}\n\tif(vis[x-2][y]&&color[x-2][y]){\n\t\tif(color[x][y]==color[x-2][y]){\n\t\t\tf(x-2,y,q+2);\n\t\t}\n\t\telse{\n\t\t\tf(x-2,y,q+3);\n\t\t}\n\t}\n\tvis[x][y]=1;\n}\nvoid read(int &x)\n{\n\tx=0;int fh;char ch=1;\n\twhile(ch!='-'&&(ch>'9'||ch<'0')) ch=getchar();\n\tif(ch=='-'){\n\t\tfh=-1;\n\t\tch=getchar();\n\t}\n\telse fh=1;\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<1)+(x<<3)+ch-'0';\n\t\tch=getchar();\n\t}\n\tx*=fh;\n}\nint mian()\n{\n\tread(m);read(n);\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tread(x);read(y);read(c);\n\t\tcolor[x][y]=c+1;\n\t}\n\tfor(register int i=1;i<=m;i++)\n\t{\n\t\tfor(register int j=1;j<=m;j++)\n\t\t\tvis[i][j]=1;\n\t}\n\tf(1,1,0);\n\tif(ans==0x7fffffff) puts(\"-1\");\n\telse printf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1540268729,
        "uid": 28910,
        "name": "\u89c8\u904d\u5343\u79cb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "JS\u7701\u91cc\u51ac\u4ee4\u8425\u590f\u4ee4\u8425\u8bb2\u6df1\u641c\u90fd\u8bb2\u5230\u4e86\n\n\u4eca\u5929\u4e0a\u5348\u6d4b\u8bd5\u7684\u9898\uff0c15\u5206\uff0c\u56e0\u4e3a\u526a\u679d\u6ca1\u526a\u5e72\u51c0\uff0c\u5c11\u4e86\u4e2a\u7b49\u4e8e\u53f7\uff0c\u4e8e\u662f\u672c\u6765\u80fd\u62ff\u5230\u7684\u5206\u4e5f\u6ca1\u62ff\u5230\uff0c\u5509\n\n#### \u4e3b\u8981\u601d\u60f3dfs+\u526a\u679d\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint m,n;//\u4f9d\u7167\u9898\u76ee\nint a[107][107];//\u5b58\u989c\u8272\nint vis[107][107];//\u5b58\u6765\u5230\u8fd9\u4e2a\u70b9\u6700\u5c11\u82b1\u7684\u91d1\u5e01\nint dx[4]={1,0,-1,0};//\u589e\u91cf\u6570\u7ec4\nint dy[4]={0,1,0,-1};//\u589e\u91cf\u6570\u7ec4\nint ans=0x3f3f3f3f;//\u7b54\u6848\nvoid dfs(int x,int y,int mon,bool use){//\u5750\u6807\uff0c\u6240\u7528\u91d1\u5e01\uff0c\u80fd\u5426\u7528\u9b54\u6cd5\n\tif(x==m&&y==m){//\u5230\u4e86\u7ec8\u70b9\n\t\tans=min(ans,mon);//\u53d6\u6700\u5c0f\u503c\n\t\treturn;\n\t}//\u5c31\u662f\u4e0b\u9762\u8fd9\u4e2a\u7b49\u4e8e\u53f7\n\tif(mon>=vis[x][y])return;//\u5982\u679c\u5230\u4e86\u8fd9\u4e2a\u70b9\uff0c\u4f46\u6240\u82b1\u91d1\u5e01\u5df2\u7ecf\u5927\u4e8e\u7b49\u4e8e\u6700\u5c0f\u4ee3\u4ef7\u4e86\uff0c\u820d\u53bb\n\telse vis[x][y]=mon;//\u4e0d\u7136\u66f4\u65b0\u6700\u5c0f\u4ee3\u4ef7\n\tif(mon>ans)return;//\u5982\u679c\u5df2\u7ecf\u6bd4\u5f53\u524d\u6700\u5c0f\u7b54\u6848\u5927\u4e86\uff0c\u820d\u53bb\n    \t//\u6309\u7406\u8bf4\uff0c\u8fd9\u91cc\u5e94\u8be5\u4e5f\u6dfb\u4e00\u4e2a\u7b49\u4e8e\u53f7\uff0c\u4f46\u662f\u6ca1\u88ab\u5361\u5230\n\tfor(int i=0;i<4;i++){\n\t\tint xx=x+dx[i];//\u65b0\u5750\u6807\n\t\tint yy=y+dy[i];//\u65b0\u5750\u6807\n\t\tif(xx>=1&&xx<=m&&yy>=1&&yy<=m){//\u5728\u68cb\u76d8\u5185\n\t\t\tif(a[xx][yy]!=-1){//\u65b0\u70b9\u6709\u989c\u8272\n\t\t\t\tif(a[x][y]==a[xx][yy])dfs(xx,yy,mon,false);//\u4e0e\u73b0\u5728\u7684\u70b9\u989c\u8272\u76f8\u540c\n\t\t\t\telse dfs(xx,yy,mon+1,false);//\u989c\u8272\u4e0d\u540c\n\t\t\t}\n\t\t\telse \n\t\t\t\tif(use==false){//\u80fd\u7528\u9b54\u6cd5\n\t\t\t\t\ta[xx][yy]=a[x][y];//\u6539\u4e3a\u5f53\u524d\u70b9\u7684\u989c\u8272\n\t\t\t\t\tdfs(xx,yy,mon+2,true);//\u9b54\u6cd5\u4e0d\u80fd\u7528\u4e86\n\t\t\t\t\ta[xx][yy]=-1;//\u8bb0\u5f97\u8981\u6539\u56de\u6765\n\t\t\t\t}\n\t\t\t\telse continue;//\u73b0\u5728\u4e0d\u80fd\u7528\u9b54\u6cd5\n\t\t}\n\t}\n\treturn;\n}\nint main(){\n\tmemset(a,-1,sizeof(a));//memset\u53ea\u80fd\u8d4b0\u6216-1\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5728\u8bfb\u5165\u989c\u8272\u7684\u65f6\u5019\u505a\u5904\u7406\n\tmemset(vis,0x3f,sizeof(vis));//\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u5c0f\u4ee3\u4ef7\u5148\u8d4b\u4e3a\u65e0\u7a77\u5927\n\tcin>>m>>n//\u8bfb\u5165;\n\tfor(int i=1;i<=n;i++){\n\t\tint x,y,c;//\u6309\u7167\u9898\u610f\n\t\tcin>>x>>y>>c;\n\t\ta[x][y]=c;\n\t}\n\tdfs(1,1,0,false);//\u4ece\u4e03\u70b9\u51fa\u53d1\n\tif(ans!=0x3f3f3f3f)cout<<ans<<endl;//\u7b54\u6848\u88ab\u66f4\u65b0\u8fc7\u4e86\n\telse cout<<-1<<endl;//\u7b54\u6848\u6ca1\u6709\u88ab\u66f4\u65b0\u8fc7\uff0c\u65e0\u89e3\n\treturn 0;\n}\n```\n\n\u4ee5\u540e\u5927\u5bb6\u5199\u7a0b\u5e8f\u4e00\u5b9a\u8981\u6ce8\u610f\u7b49\u4e8e\u53f7\uff0c\u8fd8\u6709mn\u6709\u6ca1\u6709\u53cd",
        "postTime": 1572163109,
        "uid": 164840,
        "name": "zhaowangji",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "**\u89e3\u9898\u601d\u8def\uff1a** \u4f7f\u7528dfs\u6c42\u6700\u77ed\u8def\uff0c\u4e2d\u95f4\u7279\u5224\u7a7a\u767d\u683c\u5b50\u60c5\u51b5\u3002\u8be6\u7ec6\u89e3\u91ca\u8bf7\u770b\u4ee3\u7801\u3002\n\n**AC Code\uff1a**\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()//\u5feb\u8bfb \n{\n    int x=0,k=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-') k=-1;c=getchar();}\n    while(c>='0'&&c<='9') x=(x<<3)+(x<<1)+(c^48),c=getchar();\n    return x*k;\n}\nint m,n,g[110][110],ans[110][110];\nint dx[]={1,0,-1,0};//x\u5750\u6807\u7684\u56db\u4e2a\u65b9\u5411\nint dy[]={0,-1,0,1};//y\u5750\u6807\u7684\u56db\u4e2a\u65b9\u5411\nvoid dfs(int x,int y,int f)//\u4ece(x,y)\u51fa\u53d1\u8fdb\u5165\u4e0b\u4e00\u6b65\u641c\u7d22\uff0cf\u4e3a1\u8868\u793a(x,y)\u6709\u8272\uff0c0\u8868\u793a\u65e0\u8272 \n{\n\tfor(int i=0;i<4;i++)//\u4ece(x,y)\uff0c\u641c\u7d22\u4e0b\u4e00\u4e2a\u683c\u5b50 \n\t{\n\t\tint nx=x+dx[i],ny=y+dy[i];//\u5f53\u524d\u7b56\u7565\u4ece(x,y)\u8d70\u5230\u5f53\u524d\u683c(nx,ny) \n\t\tif(nx>=1&&nx<=m&&ny>=1&&ny<=m)//\u5982\u679c\u5f53\u524d\u683c\u5b50\u7684\u5750\u6807\u6ca1\u6709\u8d8a\u754c\u8bb0\u5f55\u76f8\u5173\u4fe1\u606f \n\t\t{\n\t\t\tint s=-1;//\u7528s\u4e34\u65f6\u8bb0\u5f55\u4ece\u4e0a\u4e00\u683c\u5230\u5f53\u524d\u683c\u9700\u8981\u82b1\u7684\u91d1\u5e01\u6570 \n\t\t\tif(g[x][y]==g[nx][ny]&&g[nx][ny]!=0) s=0;//\u5982\u679c\u5f53\u524d\u683c\u5b50\u8ddf\u524d\u4e00\u683c\u989c\u8272\u76f8\u540c\uff08\u975e\u65e0\u8272\uff09 \n\t\t\telse //\u5982\u679c\u5f53\u524d\u683c\u8ddf\u4e0a\u4e00\u683c\u7684\u989c\u8272\u4e0d\u540c\uff0c\u6216\u5f53\u524d\u683c\u4e3a\u65e0\u8272 \n\t\t\t{\n\t\t\t\tif(g[nx][ny]) s=1;//\u5982\u679c\u5f53\u524d\u683c\u6709\u8272\u4e14\u8ddf\u524d\u4e00\u683c\u989c\u8272\u4e0d\u540c\u5219\u4e34\u65f6\u8bb0\u5f55\u8981\u82b1\u4e00\u4e2a\u91d1\u5e01 \n\t\t\t\tif(!g[nx][ny]&&f) s=2;//\u5f53\u524d\u683c\u6ca1\u6709\u989c\u8272\u4e14\u524d\u4e00\u683c\u662f\u6709\u8272\u7684\uff0c\u53ef\u4f7f\u7528\u9b54\u6cd5\uff0c\u4e34\u65f6\u8bb0\u5f55\u4e3a\u4e24\u4e2a\u91d1\u5e01 \n\t\t\t}\n\t\t\tif(s==-1) continue;//\u5982\u679c\u524d\u4e00\u683c\u662f\u65e0\u8272\u7684\uff0c\u5f53\u524d\u683c\u5b50\u4e5f\u65e0\u8272\uff0c\u5219\u672c\u6b21\u65e0\u6cd5\u5230\u8fbe\uff0c\u8df3\u8fc7 \n\t\t\tif(ans[x][y]+s<ans[nx][ny]||!ans[nx][ny])//\u5982\u679c\u5f53\u524d\u683c\u5b50\u5df2\u7ecf\u5230\u8fbe\u8fc7\uff0c\u4e14\u65b0\u7684\u8d70\u6cd5\u82b1\u8d39\u91d1\u5e01\u6570\u66f4\u5c11 \n\t\t\t{\n\t\t\t\tans[nx][ny]=ans[x][y]+s;//\u66f4\u65b0\u5f53\u524d\u82b1\u8d39\u91d1\u5e01\u66f4\u5c11\u7684\u8d70\u6cd5 \n\t\t\t\tif(s==2)//\u5982\u679c\u5f53\u524d\u683c\u5b50\u662f\u65e0\u8272\u7684\uff0c\u4e34\u65f6\u53d8\u8272\u8d70\u5230\u5f53\u524d\u683c\u5b50\uff0c\u9700\u7528\u7279\u6b8a\u65b9\u6cd5\u8bb0\u5f55\u989c\u8272\u4fe1\u606f \n\t\t\t\t{\n\t\t\t\t\tg[nx][ny]=g[x][y];//\u628a\u5f53\u524d\u683c\u5b50\u4e34\u65f6\u53d8\u8272\u7684\u989c\u8272\u8bb0\u5f55\u4e0b\u6765 \n\t\t\t\t\tdfs(nx,ny,0);//\u4ece\u5f53\u524d\u683c\u5b50(nx,ny)\u5f00\u59cb\u8fdb\u884c\u4e0b\u4e00\u6b65\u641c\u7d22\uff0c\u4e14\u8981\u628af\u7f6e\u62100 \n\t\t\t\t\tg[nx][ny]=0;//\u672c\u6b21\u8d70\u8fc7\u4e4b\u540e\uff0c\u52a1\u5fc5\u8981\u5c06\u5f53\u524d\u683c\u5b50\u7684\u989c\u8272\u6062\u590d\u6210\u65e0\u8272 \n\t\t\t\t}\n\t\t\t\telse dfs(nx,ny,1);//\u82e5\u5f53\u524d\u683c\u5b50\u662f\u6709\u8272\u7684\u5e38\u89c4\u683c\u5b50\uff0c\u5c31\u76f4\u63a5\u8fdb\u884c\u4e0b\u4e00\u6b65\u641c\u7d22 \n\t\t\t}\n\t\t}\n\t}\n}\nint main(void)\n{\n\tm=read(),n=read();//m*m\u7684\u65b9\u683c\u68cb\u76d8\u4e0a\u6709n\u4e2a\u5404\u81ea\u5e26\u6709\u989c\u8272\u7684\u683c\u5b50\uff08\u7ea2\u8272\u6216\u9ec4\u8272\uff09 \n\tfor(int i=0;i<n;i++)//n\u884c\u7ed9\u51fa\u4e86n\u4e2a\u683c\u5b50\u4e0a\u7684\u989c\u8272\u4fe1\u606f \n\t{\n\t\tint x,y,z;\n\t\tx=read(),y=read(),z=read();//\u5750\u6807\u4e3a(x,y)\u7684\u683c\u5b50\u4e0a\u7684\u989c\u8272\u4e3az\uff080\u4e3a\u7ea2\u8272\uff0c1\u4e3a\u9ec4\u8272\uff09 \n\t\tg[x][y]=z+1;//g[x][y]\u4e3a1\u8868\u793a(x,y)\u4e0a\u7684\u989c\u8272\u4e3a\u7ea2\u8272\uff0c\u4e3a2\u8868\u793a\u4e3a\u9ec4\u8272\uff0c\u4e3a0\u8868\u793a\u4e3a\u65e0\u8272 \n\t}\n\tans[1][1]=1;//ans[i][j]\u8868\u793a\u5230\u8fbe\u5750\u6807(i,j)\u4e0a\u9700\u8981\u82b1\u8d39\u7684\u91d1\u5e01\u6570+1\uff0c\u6700\u540e\u7ed3\u679c\u8981-1 \n\tdfs(1,1,1);//\u4ece\u5de6\u4e0a\u89d2\u5750\u6807(1,1)\u51fa\u53d1\u5f00\u59cb\u641c\u7d22\uff0c\u5bfb\u627e\u5230\u8fbe\u53f3\u4e0b\u89d2\u7684\u6700\u4f73\u89e3 \n\tprintf(\"%d\",ans[m][m]-1);//\u8f93\u51fa\u53f3\u4e0b\u89d2\u7684\u6570\u5b57-1 \n}\n```\nPS\uff1a\u4ece\u6211\u4eec\u8001\u5e08\u5904\u8f6c\u8f7d",
        "postTime": 1569423666,
        "uid": 123808,
        "name": "\u5e7b\u4e4b\u9668\u68a6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u56de\u5fc6\u8d77\u6211\u7b2c\u4e00\u6b21\u53c2\u52a0\u7684noip\u590d\u8d5b\uff0c\u8fd8\u662f\u633a\u611f\u52a8\u7684\u3002\u5728\u6211\u6253\u4ee3\u7801\u4e4b\u524d\uff0c\u6211\u60f3\u5411\u4f60\u4eec\u5206\u4eab\u4e00\u4e0b\u7ecf\u9a8c\uff1a\n\n\u6211\u5411\u6765\u4fe1\u606f\u5965\u8d5b\u6210\u7ee9\u4e0d\u592a\u597d\uff0c\u6309\u7167\u4ee5\u524d\u6c34\u5e73\u4ec5\u80fd\u62ff\u4e09\u7b49\u5956\uff0c\u751a\u81f3\u8fde\u521d\u8d5b\u7684\u8fc7\u4e0d\u4e86\u3002\u4f46\u662f\uff0c\u6211\u5728\u6d1b\u8c37\u4e0a\u523b\u82e6\u5237\u9898\uff0c\u7f51\u4e0a\u627e\u521d\u8d5b\u9898\u3002\u6709\u5fd7\u8005\uff0c\u4e8b\u7adf\u6210\uff0c\u7834\u91dc\u6c89\u821f\uff0c\u767e\u4e8c\u79e6\u5173\u7ec8\u5c5e\u695a\uff1b\u82e6\u5fc3\u4eba\uff0c\u5929\u4e0d\u8d1f\uff0c\u5367\u85aa\u5c1d\u80c6\uff0c\u4e09\u5343\u8d8a\u7532\u53ef\u541e\u5434\uff01\uff01\uff01\uff01\uff01\u73b0\u5728\u56de\u60f3\u8d77\u6765\uff0c\u6211\u5341\u5206\u611f\u52a8\u3002\u63a5\u4e0b\u6765\u662f\u6211\u8fd9\u9053\u9898\u7684noip\u7b2c\u4e00\u6b21\u7684\u6e90\u7a0b\u5e8f\uff0c40\u5206\uff0c\u867d\u7136\u4e00\u7b49\u5956\u7ebf\u662f255\u5206\uff0c\u4f46\u4e8c\u7b49\u5956\u5df2\u7ecf\u8db3\u591f\u8ba9\u6211\u611f\u52a8\u4e86\u3002\u8c22\u8c22\u6211\u7684\u52aa\u529b\uff0c\u8c22\u8c22\u6d1b\u8c37\uff0c\u8c22\u8c22\u7f51\u7edc\uff01\uff01\uff01\n\n\u539f\u6765\u60f3\u6cd5\u5c31\u662f\u88f8\u641c\uff0c\u641c\u5230\u5c31\u8fd4\u56de\uff0c\u770b\u4ee3\u7801\n\n```cpp\n#include<iostream>\nusing namespace std;\nint fx[4][2]={{0,1},{1,0},{0,-1},{-1,0}},jb,m,n,a[102][102];\nbool mapp[102][102],mf,qs;\nvoid dfs(int x,int y)\n{\n    if(x==m&&y==m)\n    {\n        cout<<jb;\n        qs=1;//\u627e\u5230\u4e86\uff0c\u4e0d\u627e\u4e86\uff0c\u6211\u7684\u6c34\u5e73\u6709\u9650\n        return;\n    }\n    mapp[x][y]=1;\n    int xx,yy;\n    for(int i=0;i<4;i++)\n    {\n        xx=x+fx[i][0];\n        yy=y+fx[i][1];\n        if(xx>=1&&xx<=m&&yy>=1&&yy<=m&&!mapp[xx][yy])//\u6ca1\u6709\u8d8a\u754c\n        {\n            if(a[xx][yy]==a[x][y]&&!qs)\n            {\n                mf=0;\n                dfs(xx,yy);\n            }\n            if(a[xx][yy]!=a[x][y]&&a[xx][yy]!=0&&!qs)\n            {\n                mf=0;\n                jb++;\n                dfs(xx,yy);\n                jb--;\n            }\n            if(a[xx][yy]==0&&!mf&&!qs)\n            {\n                mf=1;//\u53d8\u8272\n                jb+=2;\n                a[xx][yy]=a[x][y];\n                dfs(xx,yy);\n                a[xx][yy]=0;\n                jb-=2;\n                mf=0;\n            }\n        }\n    }\n}\nvoid color(int l)\n{\n    int x,y,c;\n    for(int i=1;i<=l;i++)\n    {\n        cin>>x>>y>>c;\n        a[x][y]=c+1;\n    }\n}\nint main()\n{\n    cin>>m>>n;\n    color(n);\n    dfs(1,1);\n    if(!qs) cout<<\"-1\";\n    return 0;\n}\n```\n\u6211\u7684\u590d\u8d5b240\u5206\uff0c\u4e0d\u7b97\u9ad8\uff0c\u4f46\u5bf9\u6211\u6765\u8bf4\u8fdb\u6b65\u5f88\u5927\u3002\u540e\u6765\u7ecf\u8fc7\u4e00\u7cfb\u5217\u601d\u8003\uff0c\u5f97\u51fa\u4e86\u526a\u679d\u4f18\u5316\uff0c\u5c31AC\u4e86\u3002\n\n\u90a3\u4e2a\u526a\u679d\u5c31\u662f\uff0c\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u683c\u70b9\u6240\u9700\u8981\u82b1\u8d39\u7684\u91d1\u5e01\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u88ab\u591a\u6b21\u904d\u5386\uff0c\u5982\u679c\u82b1\u8d39\u591a\uff0c\u90a3\u4e48\u5c31return\uff1b\n\n```cpp\n#include<iostream>\n#include<string.h>\nusing namespace std;\nint ans=1e9,m,a[102][102],fx[4][2]={{0,1},{1,0},{0,-1},{-1,0}},f[102][102];\nbool mapp[102][102];\nvoid dfs(int x,int y,bool t,int cost)//\u6a2a\u5750\u6807\uff0c\u7eb5\u5750\u6807\uff0c\u662f\u5426\u662f\u53d8\u8272\u8fc7\u6765\u7684\uff0c\u82b1\u8d39\uff08\u8fd9\u56db\u4e2a\u53c2\u6570\u4ee3\u8868\uff09\n{\n    if(cost>=f[x][y])\n     return;//\u526a\u679d\n    f[x][y]=cost;\n    if(x==m&&y==m)\n    {\n        ans=min(ans,cost);\n        return;\n    }\n    mapp[x][y]=1;\n    int xx,yy;\n    for(int i=0;i<4;i++)\n    {\n        xx=x+fx[i][0];\n        yy=y+fx[i][1];\n        if(xx<1||xx>m||yy<1||yy>m||mapp[xx][yy])\n         continue;\n        if(a[xx][yy]==0)\n        {\n            if(!t) \n             continue;\n            else\n            {\n             a[xx][yy]=a[x][y];\n             dfs(xx,yy,0,cost+2);\n             a[xx][yy]=0;\n            }\n        }\n        else\n         a[xx][yy]==a[x][y]?dfs(xx,yy,1,cost):dfs(xx,yy,1,cost+1);\n    }\n    mapp[x][y]=0;\n}\nint main()\n{\n    int n,x,y,c;\n    cin>>m>>n;\n    memset(f,0x2f,sizeof(f));\n    for(int i=1;i<=n;i++)\n    {\n        cin>>x>>y>>c;\n        a[x][y]=c+1;\n    }\n    dfs(1,1,1,0);\n    if(ans>20000)\n     ans=-1;\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1537358946,
        "uid": 54712,
        "name": "Forestcgl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u6211\u6765\u4e2a\u5e7f\u641c\u7684\n\n\u3010\u9898\u89e3\u3011\n\n1\u3001    \u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u9700\u8981\u6c42\u51fa\u5230\u8fbe(m,m)\u70b9\u7684\u6700\u5c0f\u91d1\u5e01\u6570\uff0c\u6700\u5c0f\u91d1\u5e01\u4e0d\u4ee3\u8868\u8d70\u7684\u6b65\u6570\u6700\u5c0f\uff0c\u6240\u4ee5\u4e0d\u7ba1\u7528\u6df1\u641c\u8fd8\u662f\u5e7f\u641c\uff0c\u90fd\u9700\u8981\u641c\u51fa\u6240\u6709\u7684\u60c5\u51b5\u3002\n\n2\u3001    \u6839\u636e\u9898\u610f\uff0c\u6bcf\u8d70\u4e00\u6b65\u4f1a\u8fdb\u5165\u4e00\u4e2a\u683c\u5b50\uff0c\u4e0b\u4e00\u6b65\u7684\u64cd\u4f5c\u5206\u522b\u662f\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u56db\u79cd\u9009\u62e9\u5bf9\u4e8e\u6bcf\u4e2a\u683c\u5b50\u53ea\u548c\u4e00\u4e0b\u51e0\u79cd\u60c5\u51b5\u76f8\u5173\uff1a\n\n\uff081\uff09    \u4e0b\u4e00\u4e2a\u683c\u5b50\u662f\u6709\u989c\u8272\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u683c\u5b50\u4e0d\u80fd\u88ab\u9b54\u6cd5\u6539\u53d8\uff0c\u8fdb\u5165\u7684\u4ee3\u4ef7\u662f\u5982\u679c\u548c\u672c\u683c\u989c\u8272\u76f8\u540c\uff0c\u4e0d\u82b1\u8d39\u91d1\u5e01\uff1b\u5982\u679c\u548c\u672c\u683c\u989c\u8272\u4e0d\u540c\u5219\u52a0\u4e00\u4e2a\u91d1\u5e01\uff1b\u9b54\u6cd5\u72b6\u6001\u4e0d\u7ba1\u539f\u6765\u5982\u4f55\uff0c\u4e0b\u4e00\u6b21\u5c31\u6062\u590d\u6210\u5141\u8bb8\u4f7f\u7528\u3002\n\n\uff082\uff09    \u4e0b\u4e00\u4e2a\u683c\u5b50\u662f\u65e0\u989c\u8272\u7684\u90a3\u4e48\u9700\u8981\u8fdb\u5165\u5c31\u5fc5\u987b\u4f7f\u7528\u9b54\u6cd5\uff0c\u5f53\u524d\u53ef\u4ee5\u4f7f\u7528\u9b54\u6cd5\uff0c\u5982\u679c\u4f7f\u7528\u9b54\u6cd5\uff0c\u90a3\u5c31\u628a\u4e0b\u4e00\u4e2a\u683c\u5b50\u53d8\u6210\u548c\u672c\u683c\u4e00\u6837\u7684\u989c\u8272\uff0c\u603b\u5171\u82b1\u8d392\u4e2a\u91d1\u5e01\uff1b\u5982\u679c\u4f7f\u7528\u9b54\u6cd5\u5427\u4e0b\u4e00\u4e2a\u683c\u5b50\u53d8\u6210\u548c\u672c\u683c\u4e0d\u4e00\u6837\u7684\u989c\u8272\uff0c\u603b\u5171\u82b1\u8d393\u4e2a\u91d1\u5e01\uff0c\u4f46\u5c31\u7b97\u518d\u540e\u7eed\u53ef\u4ee5\u4e0d\u82b1\u8d39\u91d1\u5e01\uff0c\u603b\u82b1\u8d39\u5e76\u6ca1\u6709\u6bd4\u672c\u683c\u82b1\u4e24\u4e2a\u91d1\u5e01\u597d\uff0c\u6240\u4ee5\u8fd9\u79cd\u60c5\u51b5\u820d\u53bb\uff1b\u5982\u679c\u4e0d\u4f7f\u7528\u9b54\u6cd5\uff0c\u672c\u683c\u5c31\u4e0d\u80fd\u8fdb\u5165\u3002\u7528\u8fc7\u9b54\u6cd5\u540e\uff0c\u9b54\u6cd5\u72b6\u6001\u5c31\u53d8\u6210\u4e0b\u6b21\u4e0d\u80fd\u7528\u3002\n\n3\u3001    \u901a\u8fc7\u4ee5\u4e0a\u5206\u6790\uff0c\u6211\u4eec\u5f97\u77e5\u5f53\u524d\u5750\u6807(x,y),\u5f53\u524d\u989c\u8272\uff0c\u5f53\u524d\u9b54\u6cd5\u72b6\u6001\u3001\u5f53\u524d\u82b1\u8d39\u7684\u91d1\u5e01\u6570\u4e3a\u672c\u9898\u9700\u8981\u7684\u72b6\u6001\u53d8\u91cf\uff0c\u6574\u4e2a\u6c42\u89e3\u8fc7\u7a0b\u5c31\u662f\u72b6\u6001\u53d8\u91cf\u7684\u8f6c\u79fb\u8fc7\u7a0b\u3002\u5176\u4e2d\u5750\u6807\u503c\u3001\u56fa\u6709\u7684\u989c\u8272\u4e3a\u56fa\u6709\u7684\u72b6\u6001\uff0c\u5982\u679c\u5f53\u524d\u7684\u4e2a\u4e3a\u56fa\u6709\u989c\u8272\u7684\u683c\uff0c\u672c\u683c\u82b1\u8d39\u6700\u5c0f\u4e00\u5b9a\u5bf9\u540e\u7eed\u7684\u89e3\u66f4\u6709\u5229\uff1b\u5982\u679c\u4e3a\u65e0\u989c\u8272\u683c\uff0c\u4e0b\u4e00\u4e2a\u72b6\u6001\u4e00\u5b9a\u662f\u56fa\u6709\u989c\u8272\u683c\uff0c\u5982\u679c\u672c\u683c\u82b1\u8d39\u6700\u5c0f\u4e0b\u4e00\u4e2a\u683c\u989c\u8272\u4e0d\u540c\u548c\u672c\u683c\u591a\u4e00\u4e2a\u82b1\u8d39\u4e0b\u4e00\u4e2a\u989c\u8272\u76f8\u540c\u7684\u4ee3\u4ef7\u76f8\u540c\uff0c\u6240\u4ee5\u6700\u5c0f\u82b1\u8d39\u8fd8\u662f\u5bf9\u540e\u7eed\u7684\u89e3\u66f4\u6709\u5229\uff0c\u6211\u4eec\u7528f[x][y]\u6765\u8bb0\u5f55\u67d0\u5750\u6807\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u5982\u679c\u5df2\u662f\u6700\u4f18\uff0c\u5c31\u5ffd\u7565\uff1b\u5982\u679c\u4e0d\u662f\u6700\u4f18\uff0c\u5c31\u6309\u6700\u4f18\u66f4\u65b0\u5e76\u6309\u6b64\u66f4\u65b0\u7ee7\u7eed\u641c\u7d22\u3002\n\n4\u3001    \u590d\u6742\u5ea6\uff0c\u517110000\u4e2a\u683c\u5b50\uff0c\u6709f[x][y]\u7684\u526a\u679d\u6761\u4ef6\uff0c\u56fa\u5b9a\u683c\u70b91000\u4e2a\uff0c\u590d\u6742\u5ea6\u4e0d\u5927\u4e8eO(8n);\u4e00\u4e0b\u4ee3\u7801\u7528\u5e7f\u641c\u5b9e\u73b0\u3002\n\n\u3010\u4ee3\u7801\u3011\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n  int x,y,c,can,v;  //\u683c\u70b9\u72b6\u6001\uff1a\u5750\u6807\u3001\u4e34\u65f6\u989c\u8272\u3001\u80fd\u5426\u7528\u9b54\u6cd5\u3001\u82b1\u8d39 \n}cur;\nint n,m,ans;\nint a[105][105],f[105][105];//a\u4e3a\u8f93\u5165 f\u5b58\u50a8\u6bcf\u683c\u6700\u5c0f\u82b1\u8d39 \nqueue<node> q;\nvoid expand(int x,int y){   //\u8be5\u51fd\u6570\u4f5c\u7528\u662f\u6269\u5c55\u4e00\u4e2a\u683c\u70b9 \n  int v;    \n  if((x<1)||(x>m)||(y<1)||(y>m)) return;  //\u8d8a\u754c\u5ffd\u7565 \n  if(a[x][y]!=-1){                        //\u56fa\u6709\u989c\u8272\u82b10\u4e2a\u62161\u4e2a\u91d1\u5e01 \n      v=(a[x][y]==cur.c)?cur.v:cur.v+1;\n    if(v<f[x][y]) f[x][y]=v,q.push((node){x,y,a[x][y],1,v});\n    return;   \n  }\n  if(cur.can==0) return;                 //\u9b54\u6cd5\u4e0d\u80fd\u4f7f\u7528 \n  v=cur.v+2;               //\u4f7f\u7528\u9b54\u6cd5\u5c06\u7a7a\u683c\u6539\u9020\u6210\u548ccur\u683c\u989c\u8272\u76f8\u540c \n  if(v<f[x][y]) f[x][y]=v,q.push((node){x,y,cur.c,0,v});\n}\nint main(){\n  cin>>m>>n;\n  memset(a,255,sizeof(a));//-1\u7a7a\u683c 0\u7ea2\u8272 1\u9ec4\u8272 \n  memset(f,127,sizeof(f));//\u521d\u503c\u4e3a0x7f7f7f7f \n  for(int i=0;i<n;i++){\n      int x,y,c;\n      cin>>x>>y>>c;\n      a[x][y]=c;\n  }\n  f[1][1]=0;\n  q.push((node){1,1,a[1][1],1,0});\n  while(!q.empty()){      //\u5e7f\u641c \n      cur=q.front();q.pop();\n      expand(cur.x-1,cur.y);\n      expand(cur.x+1,cur.y);\n      expand(cur.x,cur.y-1);\n      expand(cur.x,cur.y+1);\n  }\n  if(f[m][m]<20000) cout<<f[m][m]<<endl; \n  else cout<<-1<<endl;\n  return 0;  \n}\n\n```",
        "postTime": 1510541281,
        "uid": 68745,
        "name": "zhjshell",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u4f5c\u4e3a\u4e00\u4e2a**\u5168\u5b87\u5b99\u7b2c\u4e00\u849f\u84bb**\uff0c\u80fd\u8fc7\u8fd9\u9053\u9898\u76ee\u771f\u7684\u662f\u4fa5\u5e78\u3002  \n\u672c**\u849f\u84bb**\u91c7\u7528\u7684\u65b9\u6cd5\u662fDFS\uff0c\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u6765\u526a\u679d\n\n\u600e\u4e48\u60f3\u5230\u8bb0\u5fc6\u5316\u7684\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u53d1\u73b0\u672c\u9898\uff0c\u6bcf\u4e2a\u70b9\u6240\u7528\u7684\u91d1\u5e01\u90fd\u662f\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6765\u7684\uff0c\u82e5\u662f\u5728\u8ba1\u7b97\u65f6\u91cd\u590d\u8d70\u5230\u4e86\u8fd9\u4e2a\u70b9\uff0c\u4f46\u662f\u73b0\u5728\u8d70\u8fc7\u6765\u7684\u4ee3\u4ef7\u6bd4\u539f\u6765\u7684\u5927\u7684\u8bdd\uff0c\u8fd9\u6761\u8def\u5c31\u4e0d\u9700\u8981\u518d\u8d70\u4e86\uff0c\u8fd9\u6837\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u8ba1\u7b97\u91cf\uff08\u672a\u5f00O2 0ms~~(\u867d\u7136\u4e00\u5806Dalao\u90fd\u662f0ms)~~\uff09\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u672c\u9898\u4e2d\uff0c~~\u819c~~\u9b54\u6cd5\u4e0d\u80fd\u8fde\u7eed\u65bd\u5c55\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u4f20\u7edf\u7684DFS\u7684\u57fa\u7840\u4e0a\u52a0\u4e00\u4e2a\u53c2\u6570\uff0c\u7528\u6765\u8868\u793a\u4e0a\u4e00\u6b65\u662f\u5426\u4f7f\u7528\u8fc7~~\u819c~~\u9b54\u6cd5\u3002\n\n\u4ee3\u7801\u5f88\u7b80\u5355\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read() {\n\tint X=0,w=0;\n\tchar ch=0;\n\twhile(!isdigit(ch)) {\n\t\tw|=ch=='-';\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)) X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n\treturn w?-X:X;\n}\ninline double dbread() {\n\tdouble X=0,Y=1.0;\n\tint w=0;\n\tchar ch=0;\n\twhile(!isdigit(ch)) {\n\t\tw|=ch=='-';\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)) X=X*10+(ch^48),ch=getchar();\n\tch=getchar();\n\twhile(isdigit(ch)) X+=(Y/=10)*(ch^48),ch=getchar();\n\treturn w?-X:X;\n}\ninline void write(int x) {\n\tif(x<0) putchar('-'),x=-x;\n\tif(x>9) write(x/10);\n\tputchar(x%10+'0');\n}\n```\n# \u4e0a\u9762\u90a3\u4e9b\u90fd\u662f\u6211\u7684\u6a21\u677fAwA\n```cpp\nint m,n;//m,n\u5982\u9898\u610f\nint mapp[111][111];//\u5730\u56fe\u989c\u8272\uff0c\u7528\u6570\u5b57\u8868\u793a\u4e0d\u540c\u7684\u989c\u8272\nint minmon[111][111];//\u6700\u5c0f\u4ee3\u4ef7\uff08\u8bb0\u5fc6\u5316\u6570\u7ec4\uff09\nint mv[4][2]= {{1,0},{0,1},{0,-1},{-1,0}};//\u4f4d\u79fb\u6570\u7ec4\nbool check(int x,int y) {//\u68c0\u67e5\u70b9\u662f\u5426\u5728\u68cb\u76d8\u5185\n\tif(x<1||y<1||x>m||y>m)return 0;\n\treturn 1;\n}\nint incm(int scol,int x,int y) {//\u4ecescol\u8fd9\u4e2a\u989c\u8272\u8d70\u5230\u70b9x,y\u9700\u8981\u7684\u4ee3\u4ef7\n\tif(mapp[x][y]==-1)return 2;//\u65bd\u5c55\u819c\u6cd5\u53d8\u8272\n\tif(mapp[x][y]==scol)return 0;//\u540c\u8272\n\treturn 1;//\u4e0d\u540c\u8272\n}\nvoid dfs(int x,int y,int mon,int use) {\n    //x,y\u8868\u793a\u5f53\u524d\u5750\u6807,mon\u8868\u793a\u8d70\u5230\u8fd9\u91cc\u7684\u4ef7\u503c,use\u8868\u793a\u4e0a\u4e00\u6b65\u5230\u8fd9\u91cc\u662f\u5426\u4f7f\u7528\u4e86\u819c\u6cd5\uff08\u819c\u62dc\u5927\u4f6c\u4e4b\u6cd5\uff09\n\tint sx,sy,nmon;//sx,sy\u8868\u793a\u6269\u5c55\u8282\u70b9\u7684\u5750\u6807,nmon\u8868\u793a\u8d70\u5230sx,sy\u7684\u4ef7\u503c,wuse\u8868\u793a\u4e0b\u4e00\u6b65\u662f\u5426\u4f7f\u7528\u819c\u6cd5\n\tif(mon>=minmon[x][y])return;//\u8bb0\u5fc6\u5316\uff0c\u5982\u679c\u5f53\u524d\u5230x,y\u4ef7\u503c\u6bd4\u4e4b\u524d\u641c\u5230\u7684\u5230x,y\u7684\u4ef7\u503c\u8fd8\u5927\uff0c\u90a3\u4e48\u5f53\u7136\u4e0d\u662f\u6700\u4f18\u89e3\uff0c\u7b49\u4e8e\u4e5f\u53ef\u4ee5\u51cf\u53bb\uff0c\u56e0\u4e3a\u7b49\u4e8e\u7684\u8bdd\u80fd\u6269\u5c55\u7684\u8282\u70b9\u662f\u76f8\u540c\u7684\uff0c\u4e0d\u9700\u518d\u505a\u4e00\u6b21\n\tminmon[x][y]=mon;//\u5426\u5219\u66f4\u65b0\u5f53\u524d\u503c\n\tif(x==m&&y==m)return;//\u5230\u8fbe\u76ee\u7684\u5730\uff0c\u4e0d\u9700\u8981\u518d\u5f80\u4e0b\u641c\u7d22\n\tfor(int i=0; i<4; i++) {//\u5411\u56db\u4e2a\u65b9\u5411\u6269\u5c55\u8282\u70b9\n\t\tsx=x+mv[i][0];//\u4f4d\u79fb\n\t\tsy=y+mv[i][1];//\u4f4d\u79fb\n\t\tint cstep=mapp[x][y];//\u4e0b\u4e00\u6b65\u7684\u989c\u8272\n\t\tnmon=mon+incm(cstep,sx,sy);//\u4e0b\u4e00\u6b65\u7684\u4ee3\u4ef7\uff08\u8fd9\u4e00\u6b65\u7684\u4ee3\u4ef7+\u4ece\u8fd9\u4e00\u6b65\u8d70\u5230\u4e0b\u4e00\u6b65\u7684\u4ee3\u4ef7\uff09\n\t\tif(check(sx,sy)) {//\u5982\u679c\u70b9\u5728\u68cb\u76d8\u5185\n\t\t\tbool flag=0;//\u662f\u5426\u65bd\u5c55\u819c\u6cd5\n            if(nmon==mon+2)//\u5982\u679c\u4e0b\u4e00\u6b65\u7684\u4ee3\u4ef7\u8981\u5728\u8fd9\u4e00\u6b65\u7684\u57fa\u7840\u4e0a+2\uff08\u65bd\u5c55\u819c\u6cd5\uff09\n\t\t\t\tif(use)continue;//\u5982\u679c\u4e0a\u4e00\u6b65\u5df2\u7ecf\u65bd\u5c55\u8fc7\u819c\u6cd5\uff0c\u5c31\u653e\u5f03\u8fd9\u79cd\u8d70\u6cd5(\u4e0d\u80fd\u8fde\u7eed\u65bd\u5c55\u819c\u6cd5)\n\t\t\t\telse flag=1,mapp[sx][sy]=cstep;//\u4e0a\u4e00\u6b65\u6ca1\u6709\u65bd\u5c55\u8fc7\u819c\u6cd5\uff0c\u8bb0\u5f55\uff1a\u4e0b\u4e00\u6b65\u4f7f\u7528\u4e86\u819c\u6cd5\n\t\t\t\tdfs(sx,sy,nmon,flag);//\u6269\u5c55\u4e0b\u4e00\u6b65\n\t\t\tif(flag)mapp[sx][sy]=-1;//\u5982\u679c\u4f7f\u7528\u4e86\u819c\u6cd5\uff0c\u8981\u56de\u6eaf\uff08\u8d70\u5b8c\u8fd9\u4e00\u6b65\u53c8\u4f1a\u53d8\u6210\u6ca1\u6709\u989c\u8272\uff09\n\t\t}\n\t}\n}\nint main() {\n\tios::sync_with_stdio(false);\n\tm=read();\n\tn=read();\n\tint x,y,t;\n\tmemset(mapp,-1,sizeof(mapp));//\u521d\u59cb\u5316\uff0c\u5c06map\u6570\u7ec4\u521d\u59cb\u5316\u4e3a-1(\u6ca1\u6709\u989c\u8272)\n\tmemset(minmon,0x7f,sizeof(minmon));//\u521d\u59cb\u5316\uff0c\u8bb0\u5fc6\u5316\u6570\u7ec4\u91cd\u7f6e\u4e3a\u6781\u5927\u503c\n\twhile(n--) {\n\t\tx=read();\n\t\ty=read();\n\t\tt=read();\n\t\tmapp[x][y]=t;\n\t}\n\tdfs(1,1,0,0);\n\tif(minmon[m][m]>20000)write(-1);//\u5982\u679c\u7ed3\u679c\u5927\u4e8e100*100*2\uff08\u6bcf\u4e00\u6b65\u90fd\u65bd\u5c55\u819c\u6cd5\uff08\u4e8b\u5b9e\u4e0a\u5e76\u4e0d\u53ef\u80fd\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc20000\u5c31\u662f\u6781\u5927\u503c\u4e86\uff09\uff09\n\telse\n\t\twrite(minmon[m][m]);//\u8f93\u51fa\n\treturn 0;//\u597d\u4e60\u60ef\u54e6\n}\n```\n\n\u4e3a\u4ec0\u4e48\u672c\u9898\u4e0d\u9700\u8981\u6807\u8bb0visit\u6570\u7ec4\u5462\uff1f\u56e0\u4e3a\u672c\u9898\u4e2d\u6709\u8bb0\u5fc6\u5316\uff0c\u54ea\u6015\u4f60\u4e24\u4e2a\u65b9\u5757\u662f\u540c\u79cd\u989c\u8272\uff0c\u6211\u4eec\u5728\u526a\u679d\u65f6\u5199\u7684\u662f **>=** \u6240\u4ee5\u76f8\u540c\u7684\u6b65\u6570\u662f\u4f1a\u88ab\u51cf\u6389\u54d2\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u51fa\u73b0\u91cd\u590d\u7684\u60c5\u51b5\uff01\uff01\n\n\u624b\u6253\u5f88\u7d2f\uff0c\u5e0c\u671b\u7ed9\u8fc7\uff0c\u8c22\u8c22\u7ba1\u7406\u5458\u54e5\u54e5\u59d0\u59d0\uff01",
        "postTime": 1527570171,
        "uid": 58399,
        "name": "\u72f8\u72f8\u517b\u7684\u654f\u654f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "# \u201c\u68cb\u76d8\u201d \u6df1\u641c+\u8bb0\u5fc6\u5316\n\n###### \u8fd9\u9053\u9898\u4e00\u5f00\u59cb\u7528\u6df1\u641c\u505a\u867d\u7136\u7b54\u6848\u662f\u5bf9\u7684\uff0c\u4f46\u662f\u4ea4\u4e0a\u53bb\u5c31WA\u4e86\u2026\u2026\n\n###### so\uff0c\u6211\u5f00\u59cb\u7528\u6280\u5de7\uff0c\u6bd4\u5982\u4e4b\u524d\u8001\u5e08\u5728\u505aBFS\u63d0\u53ca\u7684\u6574\u578b\u6807\u8bb0\u6570\u7ec4\uff08\u540d\u8bcd\uff1a\u8bb0\u5fc6\u5316\u641c\u7d22\uff09\u5206\u522b\u5728\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u6807\u8bb0\u8d70\u7684\u91d1\u5e01\u6570\uff0c\u5047\u5982\u7b2c\u4e8c\u6b21\u8d70\u5230\u90a3\u513f\u7684\u89e3\u4e0d\u6bd4\u4e4b\u524d\u4f18\uff0c\u90a3\u4e48\u5c31exit\uff01\uff01\uff08\u7701\u65f6\u5927\u6cd5\uff09\n\n\u8be6\u60c5\u770b\u4ee3\u7801\uff1a\n\n\n\n```cpp\n    var\n            ans,m,n,x1,y1,c,j,i:longint;\n            way:array[1..4,1..2]of longint=((0,1),(1,0),(-1,0),(0,-1));\n            a:array[1..100,1..100]of longint;//\u8fd9\u662f\u6807\u8bb0\u989c\u8272\u6ef4!!\n            f:array[1..100,1..100]of longint;//\u521a\u624d\u63d0\u53ca\u7684\u7701\u65f6\u95f4\u6570\u7ec4\n            b:array[1..100,1..100]of boolean;//\u4f9d\u7136\u4f7f\u7528\u4e00\u4e2a\u5e03\u5c14\u6807\u8bb0\u6570\u7ec4,\u4f7f\u5176\u4e0d\u8d70\u56de\u5934\u8def!(important!)\n    procedure dg(x,y,t,s:longint;d:boolean);//\u54b3\u54b3,\u89e3\u91ca\u4e00\u4e0b\u54c8,\u8fd9\u513f\u7684'd'\u662f\u5224\u65ad\u80fd\u5426\u4f7f\u7528\u9b54\u6cd5\u7684!\n            var\n                    xx,yy,i:longint;\n            begin\n                    if t>=ans then exit;{\u51e0\u4e2a\u5224\u65ad,\u57fa\u672c\u4f18\u5316}\n                    if t>=f[x,y] then exit;\n                    if (x=m)and(y=m)then\n                    begin\n                            ans:=t;\n                            exit;\n                    end;\n                    f[x,y]:=t;{\u8fd9\u4e2a\u662f\u628a\u5f53\u524d\u7684\u89e3\u8d4b\u503c\u3002\u4ee5\u4fbf\u6bd4\u8f83\uff01}\n                    for i:=1 to 4 do//\u57fa\u672c\u7684\u6df1\u641c\u5faa\u73af\n                    begin\n                            xx:=x+way[i,1];//\u8bd5\u63a2\u4f4d\u7f6e(\u56db\u9762\u54e6!)\n                            yy:=y+way[i,2];\n                            if (xx>0)and(xx<=m)and(yy>0)and(yy<=m)and(b[xx,yy]=true)and(((a[xx,yy]=-1)and(d))or(a[xx,yy]<>-1)) then{\u5224\u65ad\u8d70\u5230\u8fd9\u91cc\u662f\u5426\u5408\u6cd5(\u5177\u4f53\u6839\u636e\u9898\u610f)}\n                            begin\n                                    b[xx,yy]:=false;\n                                    if (a[xx,yy]=-1) then\n                                    begin\n                                            dg(xx,yy,t+2,a[x,y],false);\n                                    end\n                                    else\n                                    begin\n                                    if s<>a[xx,yy] then\n                                    begin\n                                             dg(xx,yy,t+1,a[xx,yy],true);\n                                    end else dg(xx,yy,t,a[xx,yy],true);\n                                    end;\n                                    b[xx,yy]:=true;\n                            end;\n                    end;\n            end;//\u901a\u8fc7\u5408\u6cd5\u7c7b\u578b\u8fdb\u884c\u4e0b\u4e00\u6b65\u63aa\u65bd\n    begin{\u989d\uff0c\u4e3b\u7a0b\u5e8f\uff0c\u8ddf\u9898\u6253\u7684\uff0c\u4e0d\u9700\u8981\u591a\u52a0\u89e3\u91ca\u4e86\u5427\uff1f}\n            for i:=1 to 100 do\n            begin\n                    for j:=1 to 100 do\n                    begin\n                            a[i,j]:=-1;\n                            f[i,j]:=maxlongint;\n                            b[i,j]:=true;\n                    end;\n            end;\n            readln(m,n);\n            for i:=1 to n do\n            begin\n                    readln(x1,y1,c);\n                    a[x1,y1]:=c;\n            end;\n            ans:=maxlongint;\n            b[1,1]:=false;\n            dg(1,1,0,a[1,1],true);\n            if ans=maxlongint then writeln(-1)\n                              else writeln(ans);\n    end.\n```\n###### \u6253\u5b8c\u540e\uff0c\u6211\u5174\u594b\u5730\u70b9\u51fb\u4ea4\u4ed8\uff0c\u54c7\uff01100\u5206\uff08\u6211\u8fd8\u4ee5\u4e3a\u8fd8\u4e0d\u591f\u4f18\u5316\u4ec0\u4e48\u7684\u2026\u2026\u591a\u7591\u66f9\u64cd)\n### \uff08//\u6342\u8138\\\\\uff09\n",
        "postTime": 1513154822,
        "uid": 60327,
        "name": "moyu_028",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u4ecb\u4e8epascal\u8fd8\u6ca1\u6709\u56fe\u8bba\u7684\u7684\u9898\u89e3\uff0c\u6240\u4ee5\u6211\u5c31\u6765\u4e00\u6ce2\uff1a\n\n\u601d\u8def\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u4e0b\u9762C\u548cC++\u7684\u5927\u4f6c\u4eec\u4e5f\u5df2\u7ecf\u505a\u8fc7\u8be6\u7ec6\u7684\u53d9\u8ff0\uff0c\u5728\u6b64\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\uff1a\n\n\u66b4\u529b\u5c06\u6bcf\u4e24\u4e2a\u6709\u989c\u8272\u7684\u70b9\u4e4b\u95f4\u8fdb\u884c\u5224\u65ad\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u76f8\u90bb\uff0c\u6216\u66fc\u54c8\u987f\u8ddd\u79bb (|x1-x2|+|y1-y2|)\u4e3a2\uff0c\u90a3\u4e48\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u91d1\u5e01\u6570\u5219\u4e3a\u4e00\u6761\u8fb9(\u4e92\u76f8\u80fd\u591f\u8d70\u5230)\uff1b\u7136\u540e\u8dd1\u4e00\u904ddijkstra\u5c31\u53ef\u4ee5\u4e86\u3002\u6ce8\u610f\uff0ca[1,1]\u4e0d\u4e00\u5b9a\u7b2c\u4e00\u4e2a\u8f93\u5165(\u5f53\u7136NOIP\u6570\u636e\u5f88\u6c34\uff0c\u6240\u6709\u7684a[1,1]\u90fd\u662f\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684)\uff0ca[m,m]\u4e0d\u4e00\u5b9a\u6709\u989c\u8272(\u4e0d\u713650\u5206)\uff0ca[m,m]\u4e0d\u4e00\u5b9a\u6700\u540e\u4e00\u4e2a\u8f93\u5165(\u4e0d\u713670\u5206)\u3002\u8fd9\u9053\u9898\u76ee\u751f\u52a8\u5f62\u8c61\u5730\u544a\u8bc9\u6211\u4eecNOIP\u7684\u6570\u636e\u662f\u6709\u591a\u4e48\u7684\u6c34\uff0c\u8fd9\u4e48\u591a\u81f4\u547d\u7684\u9519\u8bef\u90fd\u80fd\u62ff\u5206\uff0c\u800c\u4e14\u8fd8\u4e0d\u4f4e\uff0c\u6240\u4ee5\u6b64\u6807\u7a0b\u4ec5\u4f9b\u53c2\u8003\uff0c\u5927\u4f6c\u4eec\u968f\u4fbfhack\u3002\n\n\u00b7\u00b7\u00b7pascal\n\n\n```cpp\nvar a:array[0..1001,1..2] of longint;//\u6709\u989c\u8272\u7684\u70b9\n    b:array[0..1001] of longint//\u4ec0\u4e48\u989c\u8272\n    c:array[0..1001,0..1001] of longint;//\u56fe\n    q:array[0..1001] of boolean;//\u6709\u6ca1\u6709\u5904\u7406\u8fc7\u8fd9\u4e2a\u70b9\n    c1:array[0..1001,0..1001] of boolean;//\u4e24\u4e2a\u70b9\u4e4b\u95f4\u6709\u6ca1\u6709\u8fb9\n    dis:array[0..1001] of longint;//\u5230\u8fd9\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\n    i,j,m,n,k,w,f1:longint; f:boolean;\nbegin\n assign(input,'chess.in'); reset(input);\n assign(output,'chess.out'); rewrite(output);\n  readln(m,n); f:=true;\n  for i:=1 to n do//\u8f93\u5165\n  begin\n    readln(a[i,1],a[i,2],b[i]);\n    if (a[i,1]=m)and(a[i,2]=m) then\n    begin\n      f:=false;\n      f1:=i;//\u5224\u65ad[m,m]\u6709\u6ca1\u6709\u8f93\u5165\n    end;\n  end;\n  for i:=1 to n do\n  for j:=1 to n do\n  begin\n    if abs(a[i,1]-a[j,1])+abs(a[i,2]-a[j,2])=1 then//\u4e24\u4e2a\u70b9\u76f8\u90bb\n    begin\n        if b[i]=b[j] then w:=0//\u76f8\u540c\u5219\u8ddd\u79bb\u4e3a1\n                     else w:=1;//\u4e0d\u76f8\u540c\u5219\u8ddd\u79bb\u4e3a2\n      c[i,j]:=w; c1[i,j]:=true;//\u6807\u6ce8\n    end;\n  if abs(a[i,1]-a[j,1])+abs(a[i,2]-a[j,2])=2 then//\u4e24\u4e2a\u70b9\u4e4b\u95f4\u9700\u8981\u7528\u9b54\u6cd5\n    begin\n      if b[i]=b[j] then w:=2//\u76f8\u540c\u5219\u8ddd\u79bb\u4e3a2\n                   else w:=3;//\u4e0d\u76f8\u540c\u5219\u8ddd\u79bb\u4e3a3\n      c[i,j]:=w; c1[i,j]:=true; //\u6807\u6ce8\n    end;\n  end;\n  if f then//\u5982\u679c[m,m]\u6ca1\u6709\u8f93\u5165\u8fc7\n  begin\n    n:=n+1;\n    for i:=1 to n-1 do\n    if abs(a[i,1]-m)+abs(a[i,2]-m)=1 then//\u662f\u5426\u76f8\u90bb\n    begin\n      c[i,n]:=2; c1[i,n]:=true;\n    end;\n    f1:=n;\n  end;\n  for i:=1 to n do q[i]:=true;\n  for i:=0 to n do dis[i]:=maxlongint;\n  dis[1]:=0;//\u7b2c\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u4e3a0\n  for i:=1 to n-1 do//\u88f8\u7684dijkstra\uff0c\u4e0d\u61c2\u7684\u81ea\u884c\u767e\u5ea6\n  begin\n    k:=0;\n    for j:=1 to n do\n    if (q[j])and(dis[j]<dis[k]) then k:=j;\n    if k=0 then break;\n    q[k]:=false;\n    for j:=1 to n do\n    if (c1[k,j])and(dis[k]+c[k,j]<dis[j]) then\n    dis[j]:=dis[k]+c[k,j];\n  end;\n  if dis[f1]=maxlongint then writeln(-1)\n                        else writeln(dis[f1]);//\u8f93\u51fa\n  close(input); close(output);\nend.\n\u00b7\u00b7\u00b7\n```",
        "postTime": 1513399776,
        "uid": 38384,
        "name": "I_promise",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u5df2\u7ecf2\u5e74\u4e86\uff0c\u8fd92\u5e74\u90fd\u6ca1\u518d\u770b\u8fd9\u9053\u9898\uff0c\u5982\u4eca\u5fc3\u8840\u6765\u6f6e\uff0c\u6765\u770b\u770b\u66fe\u7ecf\u7684\u81ea\u5df1\u6709\u591a\u83dc\u3002\n\n\u597d\uff0c\u5207\u5165\u6b63\u9898\u3002\u4e00\u76f4\u5728\u542c\u4eba\u8bb2\uff0c\u8fd9\u9053\u9898\u7528bfs\uff0c\u6240\u4ee5\uff0c\u5c31\u6ca1\u591a\u60f3dfs\u4e4b\u7c7b\u7684\u76f4\u63a5\u5c31\u4e0a\u4e86bfs\u3002\u9898\u76ee\u4e2d\u8a00\u82e5\u4e0b\u4e00\u6b65\u662f\u7a7a\u7684\u8bdd\uff0c\u5c31\u53ea\u80fd\u53d8\u8272\uff0c\u4e14\u4e0d\u80fd\u8fde\u7eed\u53d8\u8272\uff0c\u6240\u4ee5\u6211\u4eec\u8bbe\u4e00\u4e2amagic\u6570\u7ec4\uff0c1\u4e3a\u80fd\u4f7f\u7528\u9b54\u6cd5\uff0c0\u4e3a\u4e0d\u80fd\u4f7f\u7528\u3002\u7136\u540e\u53ef\u884c\u6027\u5224\u65ad\uff1a\n\n1.\u82e5\u8d85\u754c\uff0c\u8fd4\u56de1\uff1b\n\n2.\u82e5\u8d70\u8fc7\uff0c\u8fd4\u56de1\uff1b\n\n3.\u82e5\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u4e3a\u7a7a\uff0c\u5f53\u524d\u53c8\u4e0d\u80fd\u4f7f\u7528\u9b54\u6cd5\uff0c\u8fd4\u56de1\uff1b\n\n\u5426\u5219\uff0c\u8fd4\u56de0\uff1b\n\n\u7136\u540e\u5206\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u662f\u4e0d\u662f\u7a7a\u6765\u8ba8\u8bba\n\n1.\u82e5\u4e0d\u4e3a\u7a7a\u4e14\u5f53\u524d\u4e0e\u4e4b\u76f8\u540c\uff0cstep\u7ee7\u627f\uff1b\n\n2.\u82e5\u4e0d\u4e3a\u7a7a\u4e14\u5f53\u524d\u4e0e\u4e4b\u4e0d\u540c\uff0cstep++\uff1b\n\n3.\u82e5\u4e3a\u7a7a\uff0c\u628a\u4ed6\u53d8\u6210\u5f53\u524d\u989c\u8272\uff0cstep+=2\uff1b\n\n\u5927\u81f4\u601d\u8def\u5c31\u662f\u8fd9\u6837\uff0c\u4ee3\u7801\u4e2d\u6211\u628acolor=0\u6539\u6210\u4e862\n\n\u8fd9\u6837\u65b9\u4fbf\u5224\u65ad\u4e00\u4e9b\uff08\u4e2a\u4eba\u89c2\u70b9\uff09\n\ncode\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int maxn=110;\n\nbool vis[maxn][maxn];\nint c[maxn][maxn],n,m;\nint dx[4]={0,0,1,-1};\nint dy[4]={-1,1,0,0};\n\nstruct node\n{\n    int x;\n    int y;\n    bool magic=1;\n    int step=0;\n    friend bool operator < (node n1,node n2)\n    {\n        return n1.step > n2.step;\n    }\n};\n\nbool judge(node cur,int x,int y)\n{\n\tif(x<1||y<1||x>m||y>m) return 1;\n\tif(vis[x][y]) return 1;\n\tif(c[x][y]==0&&cur.magic==0) return 1;\n\treturn 0;\n}\n\nint bfs()\n{\n\tpriority_queue<node>q;\n\tnode first;\n\tfirst.x=1;\n\tfirst.y=1;\n\tfirst.step=0;\n\tvis[1][1]=1;\n\tq.push(first);\n\twhile(!q.empty())\n\t{\n\t\tnode cur=q.top();\n\t\tq.pop();\n\t\tif(cur.x==m&&cur.y==m)\n\t\treturn cur.step;\n\t\tfor(int i=0;i<4;i++)\n\t\t{\n\t\t\tint nx=cur.x+dx[i];\n\t\t\tint ny=cur.y+dy[i];\n\t\t\tif(judge(cur,nx,ny)) continue;\n\t\t\tif(c[nx][ny])\n\t\t\t{\n\t\t\t\tnode nxt;\n\t\t\t\tnxt.x=nx;\n\t\t\t\tnxt.y=ny;\n\t\t\t\tnxt.magic=1;\n\t\t\t\tif(c[nx][ny]==c[cur.x][cur.y]) nxt.step=cur.step;\n\t\t\t\telse nxt.step=cur.step+1;\n\t\t\t\tq.push(nxt);\n\t\t\t\tvis[nx][ny]=1;\n\t\t\t}\n\t\t\tif(!c[nx][ny])\n\t\t\t{\n\t\t\t\tnode nxt;\n\t\t\t\tnxt.x=nx;\n\t\t\t\tnxt.y=ny;\n\t\t\t\tnxt.magic=0;\n\t\t\t\tnxt.step=cur.step+2;\n\t\t\t\tc[nx][ny]=c[cur.x][cur.y];\n\t\t\t\tq.push(nxt);\n\t\t\t\tvis[nx][ny]=1;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&m,&n);\n\tmemset(vis,0,sizeof vis);\n\tmemset(c,0,sizeof c);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint col,x,y;\n\t\tscanf(\"%d%d%d\",&x,&y,&col);\n\t\tif(!col) col=2;\n\t\tc[x][y]=col;\n\t}\n\tprintf(\"%d\",bfs());\n\treturn 0;\n}\n```\n",
        "postTime": 1567603069,
        "uid": 86970,
        "name": "StephenYoung",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6709\u8fd9\u4e48\u591a\u4eba\u53d1\u9898\u89e3\u554a\uff0c\u6211\u4e5f\u6765\u51d1\u4e00\u51d1\u70ed\u95f9\u3002\n\n\u5f88\u660e\u663e\uff0c\u4e00\u4e2a\u666e\u901a\u7684BFS\n```\n\tint x,y,z;\n\tscanf(\"%d%d\",&n,&ge);\n\tfor(int i=1;i<=ge;++i){\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\ta[x][y]=z+1;\n\t}\n```\n\u8fd9\u4e00\u6bb5\u662f\u8f93\u5165\uff0c\u50a8\u5b58\u4ed6\u4eec\u7684\u989c\u8272\uff0c\u5728\u8fd9\u91cc\uff0c\u6211\u5c06\u4e24\u79cd\u989c\u8272\u5206\u522b\u75281\u30012\u8868\u793a\uff08\u4e3a\u4e86\u65b9\u4fbf\u5c06\u6ca1\u56fe\u8272\u7684\u75280\u6765\u8868\u793a\uff09\uff0c\u6240\u4ee5\u989c\u8272\u7684\u5730\u65b9+1\u3002a\u6570\u7ec4\u5b58\u7684\u662f\u5730\u56fe\u4e0a\u54ea\u91cc\u7684\u989c\u8272\u662f\u4ec0\u4e48\u6837\u7684\u3002\n```\n\tstruct edge{\n\t\tint xx,yy,money,color;\n\t\tbool use;\n\t\tfriend bool operator <(const edge &xxx,const edge &yyy){\n\t\t\treturn xxx.money>yyy.money;\n    \t}\n\t};\n```\n\u5bf9\u4e8e\u6211\u8fd9\u79cd\u849f\u84bb\u6765\u8bf4\uff0cBFS\u5c31\u79bb\u4e0d\u5f00\u7ed3\u6784\u4f53\u3002xx\u3001yy\uff1a\u8868\u793a\u4f4d\u7f6e\uff0cmoney\uff1a\u5728\u8fd9\u4e00\u4e2a\u70b9\u7528\u4e86\u591a\u5c11\u94b1\uff0ccolor\uff1a\u6240\u5728\u70b9\u989c\u8272\uff0cuse\u8fd9\u4e2a\u70b9\u7684\u6709\u6ca1\u6709\u653e\u8fc7\u9b54\u6cd5\uff080\u53ca\u6ca1\u6709\uff0c1\u53ca\u6709\uff09\n\n\u7ed3\u6784\u4f53\u4e2d\u6700\u91cd\u8981\u7684\u5c31\u662foperator\u91cd\u8f7d\u8fd0\u7b97\u7b26\u4e86,\u9700\u6ce8\u610f\u5b83\u7684\u7528\u6cd5\uff08\u5b9e\u6d4b\u65e0\u8bef\uff09\n```\nvoid BFS(){\n\tpriority_queue<edge> Q;//\u4f18\u5148\u961f\u5217 \n\tedge e;\n\t//\u7b2c\u4e00\u4e2a\u70b9\u521d\u59cb\u5316 \n\te.xx=e.yy=1,e.money=e.use=0;\n\te.color=a[1][1];\n\tQ.push(e);\n\tb[1][1]=1;\n\twhile(!Q.empty()){\n\t\tedge t;\n\t\tt=Q.top();Q.pop();\n\t\tfor(int i=0;i<4;++i){//\u56db\u4e2a\u65b9\u5411 \n\t\t\tedge news;\n\t\t\tnews.xx=t.xx+wx[i],news.yy=t.yy+wy[i];\n\t\t\tif(news.xx<1||news.yy<1||news.xx>n||news.yy>n||b[news.xx][news.yy])\n\t\t\t\tcontinue;\n\t\t\tnews.use=!t.use;//\u4e0a\u4e00\u683c\u6ca1\u7528\u5219\u8fd9\u4e00\u683c\u7528\uff0c\u4e0a\u4e00\u683c\u7528\u9b54\u6cd5\u5219\u8fd9\u4e00\u683c\u4e0d\u7528 \n\t\t\tif(a[news.xx][news.yy]==0){//\u770b\u4e00\u4e0b\u8fd9\u4e00\u4e2a\u662f\u4e0d\u662f\u6ca1\u6709\u989c\u8272 \n\t\t\t\t//\u5982\u679c\u6ca1\u6709\u989c\u8272 \n\t\t\t\tif(news.use)//\u5982\u679c\u8fd9\u4e00\u683c\u7528\u9b54\u6cd5\t\t\n\t\t\t\t\tnews.money=t.money+2,news.color=t.color,news.use=1;\n\t\t\t\telse continue;//\u4e0d\u80fd\u7528\u9b54\u6cd5\uff0c\u8df3\u8fc7\u3002 \n\t\t\t}\n\t\t\telse{\n\t\t\t\t//\u6709\u989c\u8272 \n\t\t\t\tif(news.use)\n\t\t\t\t\tnews.use=0;//\u5982\u679c\u8fd9\u4e00\u683c\u8981\u7528\u9b54\u6cd5\uff0c\u5219\u6ca1\u5fc5\u8981\u7528\uff08\u53cd\u6b63\u6709\u989c\u8272\u4e86\uff09 \n\t\t\t\tif(a[news.xx][news.yy]==t.color)//\u989c\u8272\u76f8\u540c\u4e0d\u8981\u94b1 \n\t\t\t\t\tnews.money=t.money,news.color=a[news.xx][news.yy];\n\t\t\t\telse//\u4e0d\u76f8\u540c\u8981\u94b1 \n\t\t\t\t\tnews.money=t.money+1,news.color=a[news.xx][news.yy];\n\t\t\t}\n\t\t\tb[news.xx][news.yy]=1;//\u8d70\u8fc7\u4e86\u4e0d\u80fd\u8d70 \n\t\t\tif(news.xx==n&&news.yy==n){//\u5230\u8fbe \n\t\t\t\tprintf(\"%d\\n\",news.money);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tQ.push(news);//\u5165\u961f \n\t\t}\n\t}\t\n\tprintf(\"-1\\n\");\n}\n```\n\u8fd9\u4e00\u6bb5\u4ee3\u7801\u5c31\u662f\u6838\u5fc3\u90e8\u5206\uff0c\u56db\u4e2a\u65b9\u5411\u5206\u522b\u8d70\uff0cb\u6570\u7ec4\u5b58\u6709\u6ca1\u6709\u5230\u8fc7\u3002\uff08\u5176\u5b83\u6211\u5df2p\u4e86\u6ce8\u91ca\uff0c\u8bf7\u8bf8\u4f4ddalao\u81ea\u884c\u5ba1\u9605\uff09\n\n# CODE\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 105\nint a[N][N],n,ge;\nconst int wx[5]={0,0,1,-1};\nconst int wy[5]={1,-1,0,0};\nbool b[N][N];\nstruct edge{\n\tint xx,yy,money,color;\n\tbool use;\n\tfriend bool operator <(const edge &xxx,const edge &yyy){\n\t\treturn xxx.money>yyy.money;\n    }\n};\nvoid BFS(){\n\tpriority_queue<edge> Q;\n\tedge e;\n\te.xx=e.yy=1,e.money=e.use=0;\n\te.color=a[1][1];\n\tQ.push(e);\n\tb[1][1]=1;\n\twhile(!Q.empty()){\n\t\tedge t;\n\t\tt=Q.top();Q.pop();\n\t\tfor(int i=0;i<4;++i){\n\t\t\tedge news;\n\t\t\tnews.xx=t.xx+wx[i],news.yy=t.yy+wy[i];\n\t\t\tif(news.xx<1||news.yy<1||news.xx>n||news.yy>n||b[news.xx][news.yy])\n\t\t\t\tcontinue;\n\t\t\tnews.use=!t.use;\n\t\t\tif(a[news.xx][news.yy]==0){\n\t\t\t\tif(news.use)\t\t\n\t\t\t\t\tnews.money=t.money+2,news.color=t.color,news.use=1;\n\t\t\t\telse continue;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(news.use)\n\t\t\t\t\tnews.use=0;\n\t\t\t\tif(a[news.xx][news.yy]==t.color)\n\t\t\t\t\tnews.money=t.money,news.color=a[news.xx][news.yy];\n\t\t\t\telse\n\t\t\t\t\tnews.money=t.money+1,news.color=a[news.xx][news.yy];\n\t\t\t}\n\t\t\tb[news.xx][news.yy]=1;\n\t\t\tif(news.xx==n&&news.yy==n){\n\t\t\t\tprintf(\"%d\\n\",news.money);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tQ.push(news);\n\t\t}\n\t}\t\n\tprintf(\"-1\\n\");\n}\nint main(){\n\tint x,y,z;\n\tscanf(\"%d%d\",&n,&ge);\n\tfor(int i=1;i<=ge;++i){\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\ta[x][y]=z+1;\n\t}\n\tBFS();\n\treturn 0;\n} \n```\n\u4f46\u662f\u8fd9\u6837\u5c31\u771f\u7684\u53ef\u4ee5\u4e86\u5417\uff1f\u5982\u679c\u4f60\u548c\u4e0a\u9762\u7684\u7a0b\u5e8f\u51e0\u4e4e\u4e00\u6837\uff0c\u4f60\u5c31\u53ea\u670995\u5206\u3002\n\n\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u6f0f\u4e86\u8d77\u70b9\u662f\u91cd\u70b9\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u8981\u52a0\u4e0a\u4e00\u6bb5\uff1a\n```\n\tif(n==1){\n\t\tprintf(\"0\\n\");\n\t\treturn 0;\n\t}\n```\n\u8c22\u8c22",
        "postTime": 1566309238,
        "uid": 154334,
        "name": "Garrison",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "### \u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u4e0d\u662f\u5f88\u5e38\u89c1\u4f46\u975e\u5e38\u6613\u61c2\u7684\u505a\u6cd5\uff1a\n\n\u9996\u5148\u6309\u7167\u6b63\u5e38\u601d\u8def\u80af\u5b9a\u662fdfs\u56db\u4e2a\u53d8\u91cf\u6bcf\u6b21\u5224\u65ad\u9b54\u6cd5\u80fd\u4e0d\u80fd\u7528\u4e4b\u7c7b\u7684\n\n\u4f46\u6211\u4eec\u624d\u4e0d\u6309\u7167\u5957\u8def\u8d70\u5462QWQ\n\n\uff08\u501f\u7528\u524d\u9762dalao\u7684\u4e00\u5f20\u56fe\uff09\n\n![](https://cdn.luogu.com.cn/upload/pic/32558.png)\n\n\u5176\u5b9e\u4ed6\u5df2\u7ecf\u8bb2\u7684\u5f88\u660e\u767d\u4e86(\u53ea\u662f\u4ee3\u7801\u5199\u7684\u6709\u70b9\u8ba9\u672c\u849f\u84bb\u770b\u4e0d\u61c2\uff09\n\n\u8003\u8651\u4e00\u4e0b\u4f7f\u7528\u9b54\u6cd5\u4e4b\u540e\u7684\u60c5\u51b5\uff0c\u4e0d\u5c31\u662f\u53ef\u4ee5\u901a\u8fc7\u5bf9\u7eff\u8272\u65b9\u5757\u65bd\u5c55\u9b54\u6cd5\uff0c\u518d\u5230\u8fbe\u56fe\u4e2d\u7684\u84dd\u8272\u65b9\u5757\u5417\u3002\n\n\u90a3\u4e48\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u628a\u9b54\u6cd5\u8fd9\u4e2a\u529f\u80fd\u7701\u53bb\uff0c\u518d\u628a\u53ef\u4ee5\u79fb\u52a8\u7684\u5730\u65b9\u589e\u52a0\u523012\u4e2a\u65b9\u5411\u5462\uff08\u56fe\u4e2d\u6709\u8272\u683c\u5b50\uff09\uff1f\n\n\u6700\u540e\u63d0\u4e00\u70b9\uff1a\u8bb0\u5f97\u52a0\u4e0a\u526a\u679d\n\n\u76f8\u4fe1\u5927\u5bb6\u5e94\u8be5\u61c2\u4e86\uff0c\u8bdd\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\uff0c\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u770b\u6ce8\u91ca\u5427\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint m,n,xa,ya,c,a[101][101],ans=23333333;\nint vis[101][101];\nint q[101][101];\nint fx[12]={0,0,0,0,1,1,1,-1,-1,-1,2,-2},fy[12]={1,-1,2,-2,-1,0,1,-1,0,1,0,0},fq[12]={0,0,2,2,2,0,2,2,0,2,2,2};\n//a\u5b58\u5730\u56fe,q\u8bb0\u5fc6\u5316\uff0cvis\u8bb0\u5f55\u8bbf\u95ee\u8fc7\u6ca1\uff0cfx,fy,fq\u4e09\u4e2a\u6570\u7ec4\u65b9\u4fbf\u641c\u7d22\uff0cfq\u662f\u8981\u52a0\u7684\u91d1\u5e01\u6570\nvoid dfs(int x,int y,int sum){//x,y\u5b58\u5750\u6807\uff0csum\u5b58\u94b1\u6570\n    if(q[x][y]&&q[x][y]<=sum) return;\n    q[x][y]=sum;//\u55ef\uff0c\u5e94\u8be5\u5f88\u597d\u61c2\n    if(x==m&&y==m){\n        ans=min(sum,ans);\n        return;\n    }//\u641c\u5230\u4e86\n    if(((x==m-1&&y==m)||(y==m-1&&x==m))&&a[m][m]==0){  //\u7ec6\u8282\u6765\u4e86\uff1a\u5982\u679c\u5728\u7ec8\u70b9\u7684\u5de6\u8fb9\u6216\u8005\u4e0a\u8fb9\u4e00\u683c\uff0c\u5219\u8981\u7279\u6b8a\u5224\u65ad\uff0c\u5426\u5219\u6839\u636e12\u5411\u641c\u7d22\u7684\u539f\u5219\u8d70\u4e0d\u5230\n        ans=min(sum+2,ans);\n        return;\n    }\n    vis[x][y]=1;\n    for(int i=0;i<12;i++){\n        int nx=x+fx[i],ny=y+fy[i];\n        if(nx<1||nx>m||ny<1||ny>m||vis[nx][ny]==1) continue;//\u4e0d\u89e3\u91ca\u4e86\u554a\n        if(a[nx][ny]==a[x][y]) dfs(nx,ny,sum+fq[i]);//\u5982\u679c\u540c\u8272\u5c31\u76f4\u63a5\u52a0\n        else if(a[nx][ny]&&a[nx][ny]!=a[x][y]) dfs(nx,ny,sum+fq[i]+1);//\u5f02\u8272\u5c31\u52a0\u4e00\n    }\n    vis[x][y]=0;\n}\nint main(){\n\tcin>>m>>n;\n    for(int i=1;i<=n;i++){\n        cin>>xa>>ya>>c;\n        a[xa][ya]=c+1;\n    }\n    dfs(1,1,0);//\u4ece\u5750\u6807\uff081\uff0c1\uff09\u51fa\u53d1\uff0c\u521d\u59cb\u4ef7\u683c\u4e3a0\n    if(ans==23333333) cout<<\"-1\";\n    else cout<<ans;\n\treturn 0;\n}//\u4e3b\u7a0b\u5e8f\u5e94\u8be5\u597d\u7406\u89e3\n```\n\u7ba1\u7406\u5458\u5927\u5927\u6c42\u8fc7\uff0c\u8f9b\u8f9b\u82e6\u82e6\u5199\u7684QWQ\n",
        "postTime": 1564583122,
        "uid": 123936,
        "name": "hfee",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u6309\u7167\u8fd9\u4e2a\u9898\u76ee\u7684\u6570\u636e\u89c4\u6a21\uff0cDFS+\u526a\u679d\u5c31\u80fd\u591f\u8fc7\u8fd9\u9053\u9898\n\n\u7528dfs(x,y,c,r)\u8868\u793a\u79fb\u52a8\u5230(x,y)\u989c\u8272\u4e3ac\u65f6\u6d88\u8017\u4ee3\u4ef7r\u7684\u6700\u5c0f\u503c\n\n\u6ce8\uff1a1,2\u8868\u793a\u7ea2\uff0c\u9ec4\uff1b3,4\u8868\u793a\u7ea2\uff0c\u9ec4**\u4e14\u4e0a\u4e00\u6b21\u4f7f\u7528\u9b54\u6cd5**\uff08\u53ef\u4ee5\u7701\u6389\u4e00\u4e2a\u53c2\u6570233333\uff09\n\n\u5e76\u4e14\u6ce8\u610f\u526a\u679d\uff08\u88f8\u7684DFS\u597d\u50cf55\u5206\uff09\n1. \u8bb0\u5f55\u5230\u8fbe\u7ec8\u70b9\u7684\u4ee3\u4ef7ans\uff0c\u5f53r>ans\u65f6\u76f4\u63a5return\u6389\uff08\u53ea\u7528\u8fd9\u4e2a60\u5206\uff09\n1. \u8bb0\u5f55\u5230\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u6700\u5c0f\u4ee3\u4ef7mark[i][j],\u5f53r>=\u8fd9\u4e2a\u503c\u4e5f\u53ef\u4ee5return\u6389\uff08**\u7b49\u53f7\u5343\u4e07\u4e0d\u8981\u6f0f\uff01\uff01\uff01**\uff0c\u4e0d\u6253\u7b49\u53f7\u53ea\u670970\u5206\uff0c\u6253\u4e86\u7b49\u53f7\u53ef\u4ee5AC\uff09\n\n\n------------\n\n\n\u4e0b\u9762\u662f\u6211\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nint dx[]={1,-1,0,0};//\u5199\u5e38\u91cf\u6570\u7ec4\u6bd4\u8f83\u7b80\u5355\nint dy[]={0,0,1,-1};\nint map[105][105];//\u8fd9\u91cc\u5176\u5b9e\u649e\u6807\u8bc6\u7b26\u4e86\uff0c\u867d\u7136\u5173\u7cfb\u4e0d\u5927\uff0c\u8fd8\u662f\u4e0d\u8fd9\u4e48\u4e0b\u4e3a\u5999\nint mark[105][105];\nbool used[105][105];//\u4f60\u4eec\u5e94\u8be5\u4f1a\u671b\u6587\u751f\u4e49\u5427\nint ans=2000000000;//\u8db3\u591f\u5927\u5440\nint m;\nvoid dfs(int x,int y,int c,int r)\n{\n    if(x==m && y==m && r<ans)\n    {\n        ans=r;\n        return;\n    }\n    if(r>=mark[x][y]) return;\n    mark[x][y]=r;\n    for(int i=0;i<4;i++)\n    {\n        int xx=x+dx[i];\n        int yy=y+dy[i];\n        int cc=map[xx][yy];\n        if(!used[xx][yy])\n        {\n            used[xx][yy]=true;\n            if(c>=3 && cc!=0)\n            {\n                if((c+cc)%2==0) dfs(xx,yy,cc,r);//\u540e\u6765\u60f3\u60f3\u53ef\u4ee5\u4f4d\u8fd0\u7b97\u554a\n                else dfs(xx,yy,cc,r+1);\n            }\n            else if(c==1 || c==2)\n            {\n                if(cc==1 || cc==2)\n                {\n                    if(c+cc==3) dfs(xx,yy,cc,r+1);\n                    else dfs(xx,yy,cc,r);\n                }\n                else dfs(xx,yy,c+2,r+2);\n            }\n            used[xx][yy]=false;\n        }\n    }\n}\nint main()\n{\n    int n;\n    cin>>m>>n;\n    memset(mark,0x7f,sizeof(mark));//\u521d\u59cb\u4e00\u4e2a\u975e\u5e38\u975e\u5e38\u5927\u7684\u6570\n    for(int i=0;i<=m+1;i++)\n        used[0][i]=used[m+1][i]=used[i][0]=used[i][m+1]=true;//C++\u53ef\u4ee5\u8fde\u7b49233\n    for(int i=1;i<=n;i++)\n    {\n        int x,y,s;\n        scanf(\"%d%d%d\",&x,&y,&s);//\u8fd9\u91cc\u5e94\u8be5\u53ef\u4ee5\u5feb\u4e00\u70b9\uff0c\u4f46\u4f3c\u4e4e\u4e0d\u662f\u91cd\u70b9\n        map[x][y]=s+1;//\u5728\u8fd9\u91cc\u8f6c\u5316\u4e00\u4e0b\uff0c\u81f3\u5c11\u6211\u770b\u4e0a\u53bb\u6bd4\u8f83\u8212\u670d\n    }\n    used[1][1]=true;\n    dfs(1,1,map[1][1],0);\n    if(ans==2000000000) cout<<-1;\n    else cout<<ans;\n    return 0;\n}\n```\n\u597d\u5566\uff0c\u8fd9\u9053\u62112017\u5e74\u8003\u8bd5\u7684\u65f6\u5019\u7528\u4e86\u8fd9\u4e48\u4e00\u53e5\uff08\u53bb\u5e74\u6211\u8fd8\u662fP\u515a\uff0c\u4f46\u662f\u4eca\u5e74\u6211\u8f6c\u4e8623333\uff09\n```pascal\nwriteln(-1);//\u5176\u5b9e\u5c31\u662fcout<<-1;\uff08\u5176\u4ed6\u53e5\u5b50\u7701\u7565\uff09\n```\n\u5f97\u4e865\u5206\u7684\u8fd9\u9053\u9898\u76ee\uff08\u8fd9\u79cd\u65b9\u6cd5\u6211\u5728\u6d1b\u8c37\u6ca1\u8bd5\u8fc7\uff0c\u4f60\u4eec\u4e0d\u5efa\u8bae\u53bb\u8bd5\uff09\u5c31\u8bf4\u5230\u8fd9\u91cc\uff0c\u5e0c\u671b\u4f60\u4eec\u80fd\u591f\u6709\u6240\u6536\u83b7\uff01\n",
        "postTime": 1540095409,
        "uid": 137016,
        "name": "fightAloneCy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "###**\u5206\u6790**\n\n- ~~\u5728\u8003\u573a\u4e0a\u4e71\u641e\u4e86\u4e2aDP\u2026\u2026~~\n\n- \u9996\u5148\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u8fd9\u91cc\u7684\u65bd\u5c55\u9b54\u6cd5\u5b9e\u9645\u4e0a\u5c31\u76f8\u5f53\u4e8e\u4ece\u4e00\u4e2a\u6709\u989c\u8272\u7684\u65b9\u5757\u8d70\u5230\u53e6\u4e00\u4e2a\u4e0e\u5176\u8ddd\u79bb\u4e3a2\u7684\u6709\u989c\u8272\u7684\u65b9\u5757\n\n- \u90a3\u4e48\u7531\u4e8e\u8fd9\u9898\u76f2\u76ee\u5730\u5f80\u4e0b\u548c\u5f80\u53f3\u8d70\u663e\u7136\u6ca1\u6709\u6b63\u786e\u6027\uff0c\u6211\u4e00\u5f00\u59cb\u7684\u60f3\u6cd5\u662f\u8bbe$f[k][i][j]$\u8868\u793a\u8d70\u4e86$k$\u6b65\u5230\u65b9\u5757$(i, j)$\u6240\u82b1\u8d39\u7684\u6700\u5c11\u91d1\u5e01\uff0c\u8f6c\u79fb\u5c31\u662f\u4ece\u4e00\u4e2a\u70b9\u8d70\u5230\u53e6\u4e00\u4e2a\u70b9\u52a0\u4e0a\u82b1\u8d39\u7684\u91d1\u5e01\uff0c\u4e0d\u8fc7\u8fd9\u6837\u7684\u65f6\u7a7a\u590d\u6742\u5ea6\u90fd\u6709\u4e9b\u96be\u4ee5\u627f\u53d7\u2026\u2026\n\n- \u4f46\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a\u6240\u6709\u7684\u201c\u884c\u8d70\u201d\u663e\u7136\u90fd\u662f\u5728\u6709\u989c\u8272\u7684\u65b9\u5757\u4e4b\u95f4\u8fdb\u884c\n\n- \u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5c31\u7ed9\u6240\u6709\u6709\u989c\u8272\u7684\u65b9\u5757\u7f16\u53f7\uff0c\u8bbe$f[k][i]$\u8868\u793a\u8d70\u4e86$k$\u6b65\u5230\u7f16\u53f7\u4e3a$i$\u7684\u65b9\u5757\u6240\u82b1\u8d39\u7684\u6700\u5c11\u91d1\u5e01\uff0c\u63a5\u7740\u9884\u5148\u628a\u6240\u6709\u8ddd\u79bb\u4e3a1\u548c2\u7684\u6210\u5bf9\u6709\u989c\u8272\u7684\u65b9\u5757\u5b58\u4e0b\u6765\uff0c\u76f4\u63a5\u5728\u8f6c\u79fb\u4e2d\u4f7f\u7528\u5373\u53ef\n\n- \u8fd9\u6837$f$\u6570\u7ec4\u4e0d\u7528\u5f00\u5f88\u5927\uff0c\u65f6\u7a7a\u590d\u6742\u5ea6\u5c31\u6bd4\u8f83\u4f18\u79c0\u4e86\n\n- ~~\u51fa\u4e86\u8003\u573a\u540e\u624d\u53d1\u73b0\u5efa\u4e2a\u56fe\u8dd1\u4e2a\u6700\u77ed\u8def\u5c31\u6ca1\u4e86\u2026\u2026~~\n\n###**\u4ee3\u7801**\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n\nusing namespace std;\n\nconst int Maxn = 0x3f3f3f3f;\nconst int N = 1005;\nconst int dx[] = {1, -1, 0, 0},\n          dy[] = {0, 0, 1, -1};\n\nint f[N][N], a[N][N], x[N], y[N], z[N];\nint n, m, pN, qN, Ans = Maxn;\n\nstruct Link\n{\n    int x, y, z;\n}p[N << 4], q[N << 4];\n\ninline void CkMin(int &x, int y)\n{\n    if (x > y) x = y;\n}\n\ninline int Abs(int x)\n{\n    return x < 0 ? -x : x;\n}\n\ninline int Tag(int x, int y)\n{\n    return x != y ? 1 : 0;\n}\n\ninline void Init()\n{\n    for (int i = 1; i <= n; ++i)\n        for (int j = 1; j <= n; ++j)\n        if (i != j)\n        {\n            int tmp = Abs(x[i] - x[j]) + Abs(y[i] - y[j]);\n            if (tmp == 1) \n            {\n                ++pN; p[pN].x = i; p[pN].y = j;\n                p[pN].z = Tag(a[x[i]][y[i]], a[x[j]][y[j]]);\n            }\n            else if (tmp == 2)\n            {\n                ++qN;\n                int dx = a[x[i]][y[i]], dy = a[x[j]][y[j]];\n                q[qN].x = i; q[qN].y = j;\n                q[qN].z = Tag(dx, 0) + Tag(dy, 0) + 2;\n                CkMin(q[qN].z, Tag(dx, 1) + Tag(dy, 1) + 2);\n            }\n        }\n}\n\nint main()\n{\n//    freopen(\"chess.in\", \"r\", stdin);\n//    freopen(\"chess.out\", \"w\", stdout);\n    \n    scanf(\"%d%d\", &m, &n);\n    for (int i = 1; i <= m; ++i)\n        for (int j = 1; j <= m; ++j)\n            a[i][j] = -1;\n    for (int i = 1; i <= n; ++i)\n    {\n        scanf(\"%d%d%d\", &x[i], &y[i], &z[i]); \n        a[x[i]][y[i]] = z[i];\n    }\n            \n    if (a[1][1] == -1)\n    {\n        puts(\"-1\");\n        fclose(stdin); fclose(stdout);\n        return 0;\n    }\n    \n    Init();\n    memset(f, Maxn, sizeof(f));\n    for (int i = 1; i <= n; ++i)\n        if (x[i] == 1 && y[i] == 1)\n        {\n            f[1][i] = 0;\n            break;\n        }\n    \n    int lim = 1000; CkMin(lim, m * m);\n    \n    for (int k = 1; k < lim; ++k)\n    {\n        for (int i = 1; i <= pN; ++i)\n        if (f[k][p[i].y] != Maxn) \n            CkMin(f[k + 1][p[i].x], f[k][p[i].y] + p[i].z);\n\n        for (int i = 1; i <= qN; ++i)\n        if (f[k][q[i].y] != Maxn)\n            for (int j = 0; j <= 1; ++j)\n                CkMin(f[k + 2][q[i].x], f[k][q[i].y] + q[i].z);\n    }\n\n    if (a[m][m] != -1)\n    {\n        for (int i = 1; i <= n; ++i)\n            if (x[i] == m && y[i] == m)\n            {    \n                for (int k = m + m - 1; k <= lim; ++k)\n                    CkMin(Ans, f[k][i]);\n                break;\n            }\n    }\n    else //\u5982\u679c\u65b9\u5757(m,m)\u65e0\u8272\u8981\u53e6\u5916\u5904\u7406 \n    {\n        for (int i = 1; i <= n; ++i)\n            if (x[i] + y[i] == m + m - 1)\n                for (int k = m + m - 2; k <= lim; ++k)\n                    CkMin(Ans, f[k][i] + 2);\n    }\n    \n    printf(\"%d\\n\", Ans == Maxn ? -1 : Ans);\n        \n//    fclose(stdin); fclose(stdout);\n    return 0;\n}\n```",
        "postTime": 1511531804,
        "uid": 17952,
        "name": "Log_x",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u672c\u9898\u6211\u4eec\u53ef\u4ee5BFS\uff0c\u8bb0\u5f55\u72b6\u6001\uff1a\n\nx,y \u8868\u793a\u5f53\u524d\u5750\u6807\uff1b\n\ncost \u8868\u793a\u5f53\u524d\u7684\u82b1\u8d39;\n\nmagic \u8868\u793a\u4e0a\u4e00\u6b65\u662f\u5426\u7528\u4e86\u9b54\u6cd5,\u5982\u679c\u7528\u4e86,magic\u6807\u8bb0\u4e3a\u4e0a\u4e00\u6b65\u628a\u8fd9\u4e2a\u683c\u5b50\u53d8\u6210\u4e86\u4ec0\u4e48\u989c\u8272,\u5426\u5219magic\u6807\u8bb0\u4e3a-1;**\uff08\u8fd9\u4e2a\u5f88\u5173\u952e\uff01\uff09**\n\n\u7136\u540e\uff0c\u5bbd\u641c\u65f6\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4ans[][]\u6765\u7ef4\u62a4\u6bcf\u4e2a\u683c\u5b50\u7684Ans\uff0c**\uff08\u521d\u59cb\u5316\u4e3aINT\\_MAX\uff09**\n\n\u6700\u540e\u6211\u4eec\u8f93\u51faans[m][m] \u6216 -1 \u4f5c\u4e3a\u7b54\u6848\u3002\n\n\n\u590d\u6742\u5ea6\u5206\u6790:\n\nBFS O\uff08M^2 \\* k\uff09\n\n\n\u5570\u55e6\u51e0\u53e5\uff0c\u636e\u8bf4\u6709\u7684\u4eba\u7528\u4e86\u56fe\u8bba\u4e2d\u7684SPFA\u6765\u505a\u8fd9\u4e00\u9898\uff0c\u6211\u8ba4\u4e3a\u8fd9\u5b8c\u5168\u4e0d\u5fc5\u8981\u3002\n\n\u56e0\u4e3a:\n\nSPFA \u5efa\u8fb9\u5c31\u8981 O(m^2) \u800c\u4e14\u5e38\u6570\u56e0\u5b50\u5f88\u5927\uff0c\n\n\u800c\u4e14\u518d\u8dd1\u4e00\u904dO\uff08m^2 \\* k\uff09 \u592a\u6162\u4e86\uff0c\u6740\u9e21\u7109\u7528\u725b\u5200\u3002\n\n\n\u7a0b\u5e8f:\n\n```cpp\n#include <bits/stdc++.h>\n#define maxm 500\nusing namespace std;\ninline int read(){ // \u8bfb\u5165\u4f18\u5316  ~~\uff08\u6ca1\u7528\u554aQWQ\uff09~~\n    int x = 0,f = 1; char c = getchar();\n    while (c < '0' || c > '9') {if (c == '-') f = -1;c = getchar();}\n    while (c <='9' && c >='0') {x = x * 10 + c - '0';c = getchar();}\n    return x * f;\n}\nint c[maxm+10][maxm+10],n,m; // \u8bb0\u5f55\u989c\u8272\u548c\u77e9\u9635\u89c4\u6a21\nint ans[maxm+10][maxm+10]; //ans\u6570\u7ec4\nstruct ZT{int x,y,magic,cost;}; // \u72b6\u6001\u8bb0\u5f55\uff0c\u89c1\u4e0a\u5206\u6790\nqueue <ZT> Q; // STL\u961f\u5217\nint tx[4] = {0,-1,0,1},ty[4] = {-1,0,1,0}; // \u5750\u6807\u589e\u91cf\nbool Try(int x,int y){ // \u4e00\u4e2a\u5c0f\u5224\u65ad\n    return  x<=m && y <= m && x>=1 && y >= 1;\n}\nint main(){\n    m = read(); n = read(); //\u8bfb\u5165\n    for (int i = 1; i <= m; ++i)\n        for (int j = 1; j <= m; ++j) c[i][j] = -1,ans[i][j] = -1;\n    for (int i = 1; i <= n; ++i){\n        int X = read(),Y = read(),C = read();\n        c[X][Y] = C;  // \u8bfb\u5165\u989c\u8272\n    }\n    ZT tmp; tmp.x = 1; tmp.y = 1; tmp.cost = 0; tmp.magic=-1; //\u7b2c\u4e00\u4e2a\u72b6\u6001\n    Q.push(tmp);\n    int Ans=-1;\n    while ( !Q.empty() ){ // \u5bbd\u641c\n        tmp = Q.front();\n        if (tmp.x == m && tmp.y == m){ // \u8d70\u5230\u7ec8\u70b9\n            if (Ans==-1) Ans = tmp.cost;\n            else Ans = min(Ans,tmp.cost);\n        }\n        for (int i = 0; i <= 3; ++i){ // \u56db\u4e2a\u65b9\u5411\n            int nx = tmp.x+ tx[i],ny = tmp.y  + ty[i];\n            if (Try(nx,ny)){ // \u5728\u68cb\u76d8\u4e2d\n                if (c[nx][ny] != -1){ // \u4e0d\u7528\u9b54\u6cd5\n                    ZT New;\n                    New.x = nx;New.y = ny; // \u8ba1\u7b97\u5750\u6807\n                    New.magic = -1; // \u6807\u8bb0\n                    New.cost = (c[tmp.x][tmp.y] == c[nx][ny]) ? tmp.cost : (tmp.cost+1); //\u8ba1\u7b97\u82b1\u8d39\n                    if (tmp.magic == c[nx][ny]) --New.cost; // \u7279\u5224\u4e0a\u4e00\u6b65\u6709\u6ca1\u6709\u7528\u9b54\u6cd5\n                    if (New.cost<ans[nx][ny] || ans[nx][ny] == -1)Q.push(New); \n                    if (ans[nx][ny] == -1) ans[nx][ny] = New.cost;//\u5982\u679c\u53ef\u4ee5\u66f4\u65b0ans\uff0c\u5c31\u66f4\u65b0\n                    else ans[nx][ny] = min(ans[nx][ny],New.cost);\n                }\n                else if (tmp.magic == -1){ // \u7528\u9b54\u6cd5\uff0c\u6761\u4ef6:\u4e0a\u4e00\u6b65magic\u6807\u8bb0\u4e3a-1\n                    ZT New;//\u540c\u7406\u53ef\u5f97\n                    New.x = nx;New.y = ny;  //\u5750\u6807\n                    New.magic = c[tmp.x][tmp.y]; //\u989c\u8272\u6807\u8bb0magic\n                    New.cost = tmp.cost+2; // \u82b1\u8d39\n                    if (New.cost<ans[nx][ny] || ans[nx][ny] == -1)Q.push(New);\n                    if (ans[nx][ny] == -1) ans[nx][ny] = New.cost; // ans\u7684\u66f4\u65b0\u548c\u8bb0\u5f55\n                    else ans[nx][ny] = min(ans[nx][ny],New.cost);\n                }\n            }\n        }\n        Q.pop();\n    }\n    printf(\"%d\\n\",Ans); // \u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1511357031,
        "uid": 52518,
        "name": "s_r_f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u4f5c\u4e3a\u4e00\u4e2apascal\u849f\u84bb\uff0c\u8fd9\u9053\u9898\u5982\u540c(\u5929\u6253\u96f7\u5288\uff09DP\u4e00\u6837\u96be\uff0c\u6211\u521a\u5f00\u59cb\u8fd8\u4ee5\u4e3a\u662fDP\n\n\u4e8e\u662f\u5199\u4e86128\u7684\u4ee3\u7801\uff0c\u53ea\u670940\u5206\uff0c\n\n\u4e3a\u4ec0\u4e48\uff1f\n\n\u56e0\u4e3a\u4ed6\u6709\u56db\u4e2a\u65b9\u5411\uff0cDP\u4e00\u5411\u53ea\u80fd\u770b\u5230\u4e24\u4e2a\u65b9\u5411\u3002\u3002\u3002\uff08QAQ\uff09\n\n\u4e8e\u662f\u5f00\u59cb\u6a21\u62df\u6df1\u641c\u8bb0\u5fc6\u5316\n\n\u4e11\u964b\u4ee3\u7801\uff1a\n\n```cpp\nvar\n  x,y,k,n,m,i,j:longint;\n  a,f:array[0..1010,0..1010] of longint;\nprocedure try(dq,x,y,ma:longint;cannot:boolean);\nvar\n  i,j:longint;\nbegin\n  if (x>n) or (x<1) or (y>n) or (y<1) then\n    exit;\n  f[x,y]:=dq;\n  if (abs(ma-a[x+1,y])+dq<f[x+1,y]) and (a[x+1,y]<>-1) then\n  try(abs(ma-a[x+1,y])+dq,x+1,y,a[x+1,y],false);\n  if (abs(ma-a[x,y+1])+dq<f[x,y+1]) and (a[x,y+1]<>-1) then\n  try(abs(ma-a[x,y+1])+dq,x,y+1,a[x,y+1],false);\n  if (abs(ma-a[x-1,y])+dq<f[x-1,y]) and (a[x-1,y]<>-1) then\n  try(abs(ma-a[x-1,y])+dq,x-1,y,a[x-1,y],false);\n  if (abs(ma-a[x,y-1])+dq<f[x,y-1]) and (a[x,y-1]<>-1) then\n  try(abs(ma-a[x,y-1])+dq,x,y-1,a[x,y-1],false);//\u8fd9\u4e9b\u5f88\u660e\u786e\u4e86\uff0c\u627e\u6761\u6700\u4f18\u8def\u5f84\u8ba1\u7b97\u603b\u5206\n  if (not cannot) then\n  begin\n    if (2+dq<f[x+1,y]) and (a[x+1,y]=-1) then\n    try(dq+2,x+1,y,ma,true);\n    if (2+dq<f[x-1,y]) and (a[x-1,y]=-1) then\n    try(dq+2,x-1,y,ma,true);\n    if (2+dq<f[x,y+1]) and (a[x,y+1]=-1) then\n    try(dq+2,x,y+1,ma,true);\n    if (2+dq<f[x,y-1]) and (a[x,y-1]=-1) then\n    try(dq+2,x,y-1,ma,true);//\u627e\u5230\u6700\u4f18\u8def\u5f84+\u9b54\u6cd5\u91d1\u5e012\u4e2a\n  end;\nend;\nbegin\n  for i:=0 to 1010 do\n    for j:=0 to 1010 do\n       a[i,j]:=-1;\n  readln(n,m);\n  for i:=1 to m do\n  begin\n    readln(x,y,k);\n    a[x,y]:=k;\n  end;\n  for i:=0 to n+1 do\n    for j:=0 to n+1 do\n      f[i,j]:=988;\n  try(0,1,1,a[1,1],false);\n  if f[n,n]=988 then writeln(-1) else//\u5982\u679c\u65e0\u6cd5\u901a\u8fc7\n  writeln(f[n,n]);\nend.\n```",
        "postTime": 1510837272,
        "uid": 9262,
        "name": "taoyc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u5ba3\u4f20 [Blog](https://chaigidel.coding.me/)\n\n\n\u65e2\u7136\u6d1b\u8c37\u7684\u6c11\u95f4\u6570\u636e\u8fc7\u4e86\uff0c\u90a3\u6211\u5c31\u6765\u53d1\u4e00\u6ce2\u9898\u89e3\u3002\n\n\u987a\u5e26\u5199\u4e2a[\u6e38\u8bb0](https://chaigidel.coding.me/2017/11/11/NOIP%E6%99%AE%E5%8F%8A%E6%B8%B8%E8%AE%B0-%E8%80%83%E5%9C%BA%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/)\n\n\n\u672c\u4eba\u7528\u7684\u662fDFS\uff0c\u8003\u573a\u4e0aBFS\u6ca1\u60f3\u51fa\u6765\u3002\n\n\n\u9996\u5148\u6211\u4eec\u8981\u77e5\u9053\u663e\u7136\u904d\u5386\u5230\u4e00\u4e2a\u70b9\u7684\u6b65\u6570\u5c0f\u4e0d\u610f\u5473\u8fd9\u4e2a\u70b9\u7684\u8d39\u7528\u5c0f\u3002\u6240\u4ee5\u5fc5\u987b\u904d\u5386\u5b8c\u6240\u6709\u60c5\u51b5\u540e\u624d\u53ef\u4ee5\u9000\u51fa\u3002\n\n\n\u4e8e\u662f\u7528\u4e00\u4e2a `book[M][M][color]` \u6765\u5b58 \u663e\u7136 `color` \u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u56e0\u4e3a `-1` \u5e76\u4e0d\u80fd\u7ad9\u4eba\u3002\n\n\n\u6211\u7528 `a` \u5b58\u56fe\uff0c`ans` \u5b58\u89e3\u3002\u5177\u4f53\u770b\u4ee3\u7801\u3002\n\n\n\u63d0\u793a\uff1a\u590d\u5236\u9898\u89e3\u4f1a\u7206\u70b8\u3002\n\n\n\u82e5\u9898\u89e3\u6709\u95ee\u9898\u7ba1\u7406\u5458\u5220\u4e86\u5427\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\nconst int INF = 2100000000;\nconst int MAXM = 101;\nconst int dir[4][2] = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}}; //\u7528\u6765\u904d\u5386\u65b9\u5411\nint n, m, ans = INF;\nint book[MAXM][MAXM][2], a[MAXM][MAXM];\nusing std::cerr;\nusing std::endl;\nstruct node{\n    int x, y, money;\n};\nvoid dfs(const int x, const int y, const int color, const int money){\n\n    if (x == m && y == m){\n        cerr << money;\n        return;\n    }\n    node now;\n    for (int i=0; i<4; ++i){ // \u904d\u5386\u65b9\u5411\n        now.x = x + dir[i][0];\n        now.y = y + dir[i][1];\n        if (now.x < 1 || now.y < 1 || now.x > m || now.y > m) continue; // \u8fb9\u754c\u60c5\u51b5\n        if (a[x][y] == -1 && a[now.x][now.y] == -1) continue; // \u4e0d\u80fd\u8fde\u7eed\u7528\u9b54\u6cd5\n        if (a[now.x][now.y] == -1){ // \u6b64\u65f6 a[x][y] \u5fc5\u7136\u4e0d\u53ef\u80fd\u4e3a -1\n            if (color == 0){\n                if (book[now.x][now.y][0] > money + 2){ // \u6539\u989c\u8272 +2 \u8981\u6ee1\u8db3 money+2 \u5c0f\u66f4\u65b0\u624d\u6709\u610f\u4e49\uff0c\u4e0d\u7136\u6b7b\u5faa\u73af\n                    book[now.x][now.y][0] = money + 2;\n                    dfs(now.x, now.y, 0, money + 2);\n                }\n                if (book[now.x][now.y][1] > money + 3){ // \u6539\u989c\u8272 +2 \u8d70\u8fc7\u53bb +1\n                    book[now.x][now.y][1] = money + 3;\n                    dfs(now.x, now.y, 1, money + 3);\n                }\n                continue;\n            }\n            if (color == 1){\n                if (book[now.x][now.y][0] > money + 3){\n                    book[now.x][now.y][0] = money + 3;\n                    dfs(now.x, now.y, 0, money + 3);\n                }\n                if (book[now.x][now.y][1] > money + 2){\n                    book[now.x][now.y][1] = money + 2;\n                    dfs(now.x, now.y, 1, money + 2);\n                }\n                continue;\n            }\n            continue;\n        }\n        if (color == a[now.x][now.y] && book[now.x][now.y][color] > money){ //\u989c\u8272\u76f8\u540c\u76f4\u63a5\u8d70\n            book[now.x][now.y][color] = money;\n            dfs(now.x, now.y, color, money);\n            continue;\n        }\n        if (color != a[now.x][now.y] && book[now.x][now.y][a[now.x][now.y]] > money+1){ //\u989c\u8272\u4e0d\u540c\u8d39\u7528 +1\n            book[now.x][now.y][a[now.x][now.y]] = money + 1;\n            dfs(now.x, now.y, a[now.x][now.y], money + 1);\n            continue;\n        }\n    }\n}\nint main(){\n    int x, y, c;\n    using namespace std;\n    cin >> m >> n;\n    std::memset(a, -1, sizeof(a));\n    for (int i=1;i<=m;++i) for (int j=1;j<=m;++j) book[i][j][0] = book[i][j][1] = INF;\n    for (int i=0; i<n; ++i){\n        scanf(\"%d%d%d\", &x, &y, &c);\n        a[x][y] = c;\n    }\n    book[1][1][a[1][1]] = 0;\n    dfs(1, 1, a[1][1], 0);\n    if (ans == INF) ans = -1;\n    cout << ans;\n    return 0;\n}\n\n```",
        "postTime": 1510413742,
        "uid": 9903,
        "name": "Chaigidel",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u3010~~\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u77e5\u9053\u4e86\u8981\u7528\u9b54\u6cd5\u5bf9\u6297\u9b54\u6cd5~~\u3011\n\n\u5f88\u660e\u663e\uff0c\u6570\u636e\u633a\u5c0f\u7684\n\n\u9996\u5148\uff0c\u8981\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\uff0c\u53ef\u80fd\u7684\u6709\u5f88\u591a\u6761\u8def\u5f84\uff0c\u82b1\u7684\u91d1\u5e01\u6570\u90fd\u6709\u5927\u6709\u5c0f\u3002\u5f53\u7136\uff0c\u662f\u8981\u627e\u5230\u82b1\u8d39\u6700\u5c11\u91d1\u5e01\u7684\u8def\uff0c\u8fd9\u5f88\u5bb9\u6613\u770b\u51fa\u6765\u3002\n\n\u4f46\u662f\uff0c\u8981\u526a\u679d\u54e6,,,\u5c31\u662f\u5df2\u7ecf\u82b1\u4e86\u6bd4\u5f53\u65f6\u6700\u5c11\u91d1\u5e01\u8fd8\u591a\u7684\u91d1\u5e01\u7684\u8def\u5f84\u5c31\u53ef\u4ee5\u526a\u6389\u4e86\u54c8\u3002\n\n\u5176\u5b9e\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u53ef\u4ee5\u526a\u679d\u3002\u4ece\u8d77\u70b9\u5230\u7ed3\u5c3e\uff0c\u6253\u4e2a\u6bd4\u65b9\u3002\u4e00\u6761\u8def\u7528x\u91d1\u5e01\uff0c\u4e00\u6761\u8def\u7528y\u91d1\u5e01\u3002\u5df2\u7ecf\u8d70\u5b8c\u4e86a\uff0cb\u8fd8\u6ca1\u8d70\u3002\n\n\u8fd9\u65f6\u5019\u5176\u5b9e\u53ef\u4ee5\u5728\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u4f5c\u6bd4\u8f83\uff0c\u5982\u679c\u8fd9\u4e2a\u4f4d\u7f6e\u6bd4a\u5df2\u7ecf\u5927\u4e86\u5c31\u53ef\u4ee5\u526a\u6389\u4e86\u3002\n\n~~\u5176\u5b9e\u3002\u3002\u8fd9\u9053\u9898\u662f\u6211\u5f88\u4e45\u4ee5\u524d\u505a\u7684\u9898\u89e3\uff0c\u4f46\u662f\u4e0a\u4f20\u6ca1\u8fc7\uff0c\u73b0\u5728\u53c8\u91cd\u65b0\u601d\u8003\u4e86\u4e00\u4e0b\uff0c\u53ef\u80fd\u7b80\u4ecb\u548c\u4ee3\u7801\u6709\u4e00\u4e22\u4e22\u4e0d\u540c\u3002\u3002~~\n\n## \u7ee7\u7eed\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6 \nusing namespace std;\nint m,n,minsum=INT_MAX;//\u8fd9\u91cc\u6700\u5c0f\u503c\u8981\u5b9a\u4e49\u6210INT_MAX \nint qp[102][102],cost[102][102];//qp\u662f\u68cb\u76d8\u7684\u610f\u601d,cost\u662f\u6bcf\u4e2a\u4f4d\u7f6e\u82b1\u8d39\u6700\u5c11\u7684\u91d1\u94b1\u6570 \nint dir[4][2]={{-1,0},{1,0},{0,-1},{0,1}};//\u5b9a\u4e49\u4e0a\u4e0b\u5de6\u53f3\u65b9\u5411\u7684\u6570\u7ec4,\u8fd9\u91cc\u7528\u4e00\u7ef4\u6570\u7ec4\u4e5f\u53ef\u4ee5 \nbool book[102][102];\n```\n\u8fd9\u5c31\u662f\u5148\u5b9a\u4e49\u4e86\u4e00\u4e0b\u6570\u636e\u5565\u7684\n```cpp\nvoid dfs(int x,int y,int color,int s)//\u505a\u4e86\u4e00\u4e2a\u4ee5x,y\u5750\u6807,\u989c\u8272\u4ee5\u53ca\u6240\u7528\u91d1\u5e01\u7684\u51fd\u6570dfs \n{\n\tif(x==m-1&&y==m-1) //\u5f53\u5728\u53f3\u4e0b\u89d2\u65f6 \n\t{\n\t\tminsum=min(minsum,s);//\u6bd4\u8f83\u6700\u5c0f\u503c\u548c\u5f53\u65f6\u7684\u6240\u7528\u91d1\u5e01 \n\t\treturn;\n\t}\n\tfor(int i=0;i<4;i++)//\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u53cd\u5411\u8fdb\u884c\u5faa\u73af \n\t{\n\t\tint nx,ny;\n\t\tnx=x+dir[i][0]; //\u8fd9\u91cc\u5c31\u662f\u628a\u4f4d\u7f6e\u8d70\u4e0b\u4e00\u6b65 \n\t\tny=y+dir[i][1];\n\t\tif(nx<0||nx>m-1||ny<0||ny>m-1) //\u5224\u65ad\u662f\u5426\u8d8a\u754c \n\t\t\tcontinue;\n\t\tif(!book[nx][ny]&&(qp[nx][ny]>0||qp[x][y]>0))//\u5224\u65ad\u662f\u5426\u8d70\u8fc7\u5e76\u4e14\u6709\u989c\u8272 \n\t\t{\n\t\t\tif(qp[nx][ny]==0)//\u5f53\u73b0\u5728\u7684\u4f4d\u7f6e\u6ca1\u989c\u8272 \n\t\t\t{\n\t\t\t\tif(s+2<minsum&&s+2<cost[nx][ny])//\u5224\u65ad\u662f\u5426\u6bd4\u6700\u5c0f\u503c\u5c0f\u5e76\u4e14\u6bd4\u8fd9\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6700\u5c0f\u82b1\u8d39\u5c0f \n\t\t\t\t{\n\t\t\t\t\tbook[nx][ny]=true;//\u540e\u9762\u90fd\u662f\u8fd9\u4e2a\u6a21\u677f\u4e86 \n\t\t\t\t\tcost[nx][ny]=s+2;//\u6700\u5c0f\u503c\u53d8\u5316\u4e3as+2 \u5e94\u4e3a\u989c\u8272\u4e0d\u540c\uff0c\u8981\u7528\u9b54\u6cd5 \n\t\t\t\t\tdfs(nx,ny,color,s+2);//dfs \n\t\t\t\t\tbook[nx][ny]=false;//\u628a\u4f4d\u7f6e\u53d8\u56defalse \n\t\t\t\t}\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tif(qp[nx][ny]==color&&s<cost[nx][ny])//\u5224\u65ad\u51fa\u662f\u5426\u662f\u540c\u8272 \n\t\t\t\t{\n\t\t\t\t\tbook[nx][ny]=true;\n\t\t\t\t\tcost[nx][ny]=s;//\u540c\u8272\u4e0d\u7528\u91d1\u5e01 \n\t\t\t\t\tdfs(nx,ny,color,s);//\u6240\u4ee5\u8fd9\u91cc\u662fs \n\t\t\t\t\tbook[nx][ny]=false;\n\t\t\t\t}\n\t\t\t\tif(qp[nx][ny]!=color&&s+1<cost[nx][ny]&&s+1<minsum)//\u5224\u65ad\u662f\u5426\u662f\u5f02\u8272 \n\t\t\t\t{\n\t\t\t\t\tbook[nx][ny]=true;\n\t\t\t\t\tcost[nx][ny]=s+1;//\u8981\u4e00\u4e2a\u91d1\u5e01 \n\t\t\t\t\tdfs(nx,ny,qp[nx][ny],s+1);//\u8fd9\u91cc\u4e00\u5b9a\u8981\u5199\u6210qp[nx][ny]!!\u6211\u9519\u8fc7\u4e00\u6b21 \n\t\t\t\t\tbook[nx][ny]=false;\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t} \n\t}\n}\n```\ndfs\n\u7136\u540e\u4e3b\u7a0b\u5e8f\n```cpp\nint main()\n{\n\t//freopen(\"chess.in\",\"r\",stdin);NOIP\u4ece\u6211\u7ec3\u8d77 \n\t//freopen(\"chess.out\",\"w\",stdout); \u597d\u4e60\u60ef\u8981\u517b\u6210 \n\tcin>>m>>n;\n\tfor(int i=0;i<m;i++)\n\t\tfor(int j=0;j<m;j++)\n\t\t{\n\t\t\tcost[i][j]=INT_MAX;//\u521d\u59cb\u5316 \n\t\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tint a,b; //\u5b9a\u4e49a,b(\u5750\u6807) \n\t\tcin>>a>>b;//\u56e0\u4e3a\u6211\u7684\u8d77\u59cb\u4f4d\u7f6e\u662f0\u800c\u4e0d\u662f1 \n\t\tcin>>qp[a-1][b-1];//\u8bfb\u5165\u989c\u8272 \n\t\tqp[a-1][b-1]++;//0\u53d81,1\u53d82 \n\t}\n\tbook[0][0]=true;//\u5c06book\u6570\u7ec4\u8d4b\u503c \n\tdfs(0,0,qp[0][0],0);//DFS!!! \n\tif(minsum==INT_MAX) cout<<\"-1\"<<endl;//\u8f93\u51fa \n\telse cout<<minsum<<endl;\n\t//fclose(stdin);\n\t//fclose(stdout);\u518d\u6b21\u5f3a\u8c03\u517b\u6210\u597d\u4e60\u60ef \n\treturn 0;\n}\n```\n~~\u53cd\u6b63\u4e2d\u95f4\u4e5f\u6ca1\u8bf4\u5565\u8bdd\u8981copy\u7684\u76f4\u63a5\u62c9\u5c31\u884c\u4e86~~\n\n\n",
        "postTime": 1564989707,
        "uid": 65880,
        "name": "All_Might",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u6765\u81ea\u849f\u84bb\u7684DFS\u9898\u89e3\uff1a\n\u9996\u5148\u9898\u76ee\u7684\u53d8\u5316\u5f88\u591a\uff0c\u5904\u7406\u65f6\u6bd4\u8f83\u590d\u6742\uff08\u56e0\u4e3a\u6211\u662f\u849f\u84bb\uff09\uff0c\u6ce8\u610f\u7ec6\u8282\u4e5f\u5f88\u91cd\u8981\u3002\n\u5355\u7eaf\u7684DFS\u7a0b\u5e8f\u65f6\u95f4\u4e0d\u884c\uff0c\u6240\u4ee5\u8981\u91c7\u7528\u526a\u679d\u7684\u65b9\u6cd5\u3002\n\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nint m,n,a1,b1,c1,minn=999999999;\nint a[101][101]={0},e,c[101][101]={0};//a\u6570\u7ec4\u662f\u5b58\u653e\u68cb\u76d8\u7684\uff0cc\u6570\u7ec4\u662f\u6807\u8bb0\u76ee\u524d\u5230\u67d0\u4e2a\u70b9\u7684\u6700\u4f18\u89e3\u3002\nbool b[101][101]={0},d[101][101]={0};//b\u6570\u7ec4\u662f\u6807\u8bb0\u662f\u5426\u5728\u76ee\u524d\u8def\u5f84\u4e0a\u8d70\u8fc7\u7684\u70b9\uff0cd\u6570\u7ec4\u662f\u6807\u8bb0\u68cb\u76d8\u4e2d\u7684\u67d0\u4e2a\u70b9\u662f\u5426\u66fe\u7ecf\u5230\u8fbe\u8fc7\u3002\nint q1[5]={0,1,-1,0,0},w1[5]={0,0,0,1,-1};//\u65b9\u5411\u6570\u7ec4\nint dfs(int xz,int yz,int o,int ans)//xz\uff0cyz\u4e3a\u5750\u6807\uff0co\u8868\u793a\u4e0a\u4e00\u4f4d\u7f6e\u662f\u5426\u7528\u8fc7\u6539\u53d8\u65e0\u8272\u65b9\u5757\u7684\u9b54\u6cd5\uff0cans\u8bb0\u5f55\u76ee\u524d\u82b1\u8d39\u7684\u91d1\u5e01\n{\n\tint f=0;\n\tif(xz==m&&yz==m)//\u8fbe\u5230\u76ee\u6807\uff0c\u5224\u65ad\u7b54\u6848\u662f\u5426\u66f4\u4f18\n\t{\n\t\tif(minn>ans)\n\t\t{\n\t\t\tminn=ans;\n\t\t\t++e;//\u8bf4\u660e\u9898\u76ee\u6709\u89e3\uff0c\u6700\u540e\u8f93\u51fa\u65f6\u5224\u65ad\u7528\n\t\t}\n\t\tif(o==1)a[xz][yz]=0;//\u5982\u679c\u6700\u540e\u4e00\u4e2a\u70b9\u662f\u65e0\u8272\u7684\uff0c\u8fd4\u56de\u524d\uff0c\u8981\u628a\u4ed6\u989c\u8272\u6539\u56de\u6765\u3002\n\t\treturn 0;\n\t}\n\tif(d[xz][yz]==0||c[xz][yz]>ans)//d\u6570\u7ec4\u5224\u65ad\u4ed6\u662f\u5426\u5230\u8fc7\uff0c\u4ece\u6ca1\u5230\u8fc7\u5c31\u628a\u72b6\u6001\u66f4\u65b0\u4e00\u4e0b\u3002\u5982\u679c\u5230\u8fc7\u4e14\u76ee\u524d\u8282\u70b9\u7684\u6b65\u6570\u66f4\u4f18\uff0c\u4e5f\u66f4\u65b0\u72b6\u6001\uff0c\u5426\u5219return0\uff0c\u56e0\u4e3a\u7ee7\u7eed\u4e0b\u53bb\u6ca1\u610f\u4e49\uff08\u526a\u679d\uff09\u3002\n\t{\n\t\tc[xz][yz]=ans;\n\t\td[xz][yz]=1;\n\t}\n\telse\n\t{\n\t\tif(o==1)//\u8fd4\u56de\u524d\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u539f\u672c\u65e0\u8272\uff0c\u90a3\u4e48\u8981\u5c06\u989c\u8272\u6539\u6210\u65e0\u8272\n\t\ta[xz][yz]=0;\n\t\treturn 0;\n\t}\n\tint i,j,q,w;//w\u8bb0\u5f55\u82b1\u51e0\u5757\u94b1\uff0cq\u8bb0\u5f55\u662f\u5426\u7528\u4e86\u9b54\u6cd5\u6539\u53d8\u8fc7\u65e0\u8272\u65b9\u5757\n\tfor(int x=1;x<=4;x++)//\u56db\u4e2a\u65b9\u5411\u641c\u7d22\n\t{\n\t\tq=0,w=0;\n\t\ti=xz+q1[x];\n\t\tj=yz+w1[x];\n\t\tif(i>0&&j>0&&i<=m&&j<=m&&b[i][j]==0)//\u5224\u65ad\u662f\u5426\u8d8a\u754c\u6216\u76ee\u524d\u7684\u8def\u5f84\u4e2d\u8d70\u8fc7\n\t\t{\n\t\t\tb[i][j]=1;\n\t\t\tif(a[i][j]!=a[xz][yz])\n\t\t\t{\n\t\t\t\tif(a[i][j]!=0)//\u5982\u679c\u989c\u8272\u4e0d\u540c\uff0c\u4e14\u4e0b\u4e00\u4e2a\u70b9\u6709\u8272\u90a3\u4e48\u82b1\u4e00\u5757\n\t\t\t\t{\n\t\t\t\t\tw=1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(o==1)\u5982\u679c\u672c\u8eab\u5df2\u7ecf\u5728\u539f\u672c\u65e0\u8272\u65b9\u5757\u4e0a\uff0c\u5c31\u4e0d\u80fd\u518d\u5230\u65e0\u8272\u7684\u65b9\u5757\u4e86\n\t\t\t\t\t{\n\t\t\t\t\t\tb[i][j]=0;\n\t\t\t\t\t\tcontinue;//\u76f4\u63a5\u8df3\u51fa\u5faa\u73af\n\t\t\t\t\t}\n\t\t\t\t\tq=1;\n                    w=2;\n                    a[i][j]=a[xz][yz];//\u5c06\u65e0\u8272\u65b9\u5757\u989c\u8272\u7f6e\u6210\u76ee\u524d\u65b9\u5757\u7684\u989c\u8272\n\t\t\t\t}\n\t\t\t}\n\t\t\tdfs(i,j,q,ans+w);\n\t\t\tb[i][j]=0;\n\t\t}\n\t}\n\tif(o==1)a[xz][yz]=0;//\u5982\u679c\u8fd9\u4e2a\u70b9\u539f\u672c\u65e0\u8272\uff0c\u8981\u5c06\u4ed6\u6539\u56de\u65e0\u8272\u72b6\u6001\n\treturn 0;\n}\nint main()\n{\n\tcin>>m>>n;\n\tfor(int x=1;x<=n;x++)\n\t{\n\t\tcin>>a1>>b1>>c1;\n\t\ta[a1][b1]=c1+1;//\u6b64\u5904\u52a0\u4e00\u610f\u601d\u662f\uff0c\u6ca1\u6709\u989c\u8272\u7684\u5730\u65b9\u6807\u8bb0\u96f6\uff0c\u597d\u533a\u5206\u3002\n\t}\n\tb[1][1]=1;//\u5f00\u59cb\u7684\u70b9\u81ea\u5df1\u8981\u6807\u8bb0\uff0c\u8bf4\u660e\u8d70\u8fc7\u4e86\n\tdfs(1,1,0,0);\n\tif(e>0) \n\tcout<<minn;\n\telse\n\tcout<<-1;//e==0\uff0c\u8bf4\u660e\u9898\u76ee\u65e0\u89e3\uff0c\u8f93\u51fa-1\n}\n```\n",
        "postTime": 1551500410,
        "uid": 34666,
        "name": "bestcow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "# \u65b9\u6cd5\uff1adfs+\u526a\u679d\n```cpp\n//\n//  main.cpp\n//  P3956\n//\n//  Created by lightdream on 2018/11/5.\n//  Copyright \u00a9 2018 lightdream. All rights reserved.\n//\n\n#include<bits/stdc++.h>\nusing namespace std;\nint a[105][105],money[105][105],m,n,flag,nx,ny,f1;\nint dx[4]={1,0,-1,0},dy[4]={0,1,0,-1};//4\u4e2a\u65b9\u5411\nvoid dfs(int x,int y,int nc,int c,int mo,int f1){//x\u3001y\u662f\u5750\u6807\uff0cnc\u662f\u8be5\u683c\u5b50\u7684\u989c\u8272\uff0cc\u662f\u4e0a\u4e00\u4e2a\u683c\u5b50\u7684\u989c\u8272\uff0cmo\u662f\u901a\u8fc7\u8fd9\u6761\u8def\u7ebf\u8d70\u5230\u8fd9\u4e2a\u683c\u5b50\u7684\u82b1\u8d39\uff0cf1\u8868\u793a\u5df2\u7ecf\u7528\u8fc7\u4e00\u6b21\u9b54\u6cd5\n    if(nc==0&&f1)return;//\u4e0d\u80fd\u8fde\u7eed\u4e24\u6b21\u4f7f\u7528\u9b54\u6cd5\n    f1=0;\n    if(nc==0){//\u53d8\u8272\n        mo+=2;\n        nc=c;\n        f1=1;\n    }\n    else if(nc!=c)mo+=1;//\u989c\u8272\u4e0d\u4e00\u6837\n    if(mo>=money[x][y])//\u5982\u679c\u7528\u8fd9\u79cd\u65b9\u6cd5\u8d70\u5230\u8fd9\u4e2a\u683c\u5b50\u7684\u82b1\u8d39\u5927\u4e8e\u7b49\u4e8e\u4e0a\u6b21\u8d70\u5230\u8fd9\u91cc\u7684\u82b1\u8d39\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u526a\u6389\n        return;\n    money[x][y]=mo;//\u5426\u5219\u628a\u8fd9\u6b21\u7684\u82b1\u8d39\u662f\u6700\u5c11\u82b1\u8d39\n    if(x==m&&y==m){//\u8d70\u5230\u7ec8\u70b9\n        flag=1;\n        return;\n    }\n    for(int i=0;i<4;i++){\n        nx=x+dx[i];ny=y+dy[i];\n        if(nx>=1&&ny>=1&&nx<=m&&ny<=m){\n            dfs(nx,ny,a[nx][ny],nc,mo,f1);\n        }\n    }\n}\nint main(){\n    memset(money,0x3f,sizeof(money));//\u521d\u59cb\u5316\u4e3a\u65e0\u7a77\u5927\n    cin>>m>>n;\n    while(n--){\n        int t1,t2,t3;\n        cin>>t1>>t2>>t3;\n        t3=t3==0?2:t3;//0\u8868\u793a\u7a7a\u8272\uff0c1\u30012\u662f\u4e24\u79cd\u989c\u8272\n        a[t1][t2]=t3;\n    }\n    dfs(1,1,a[1][1],a[1][1],0,0);\n    if(flag)\n        cout<<money[m][m];\n    else cout<<\"-1\";\n    return 0;\n}\n\n```",
        "postTime": 1541394836,
        "uid": 96952,
        "name": "Soohti",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "### \u5148\u8bf4\u8bf4\u8fd9\u9053\u9898\u7684\u66b4\u529b\uff1a\n\tdfs(i,j,1/2)\u8868\u793a\u5f53\u524d\u4f4d\u4e8ei,j\uff0c\u989c\u8272\u4e3a1/2\uff0c\u5230\u8fbe\u7ec8\u70b9\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u7136\u540e\u5f80\u56db\u5468\u641c\u7d22\u5373\u53ef\u3002\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u70b9\u662f\u5426\u6709\u989c\u8272\u63a8\u65ad\u51fa\u73b0\u5728\u662f\u5426\u4f7f\u7528\u4e86\u9b54\u6cd5\uff0c\u4e8e\u662f\u5c31\u77e5\u9053\u4e0b\u4e00\u6b21\u662f\u5426\u80fd\u4f7f\u7528\u9b54\u6cd5\u4e86\u3002\n    \n------------\n\n### \u66b4\u529b\u7a0b\u5e8f\u592a\u96be\u5199\uff0c\u4e8e\u662f\u4e4e\u5c31\u5199ZJ\uff1a\n\n\t\u53d1\u73b0\u641c\u7d22\u5230\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4e0b\u4e00\u6b21\u8c03\u7528\u76f8\u540c\u7684\u4f4d\u7f6e\u7684\u518d\u641c\u7d22\uff0c\u5982\u679c\u641c\u7d22\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u7528\u8fc7\u7684\u6b21\u6570\u6bd4\u4e4b\u524d\u8981\u591a\uff0c\u641c\u7d22\u4e0b\u53bb\u80af\u5b9a\u4e0d\u4f18\u3002\n\t\u4e8e\u662f\u4e4e\u6211\u4eec\u53ef\u4ee5\u8bb0\u4e00\u4e2aans[x][y]\uff0c\u8868\u793a\u641c\u7d22\u5230(x,y)\u65f6\u7684\u4e4b\u524d\u8d70\u8fc7\u7684\u6700\u5c0f\u6b65\u6570\u3002\u7b2c\u4e8c\u6b21\u8c03\u7528\u76f8\u540c\u4f4d\u7f6e\u7684\u51fd\u6570\u53ea\u6709\u5728\u6b65\u6570\u5c0f\u4e8eans[x][y]\u65f6\u624d\u7ee7\u7eed\u9012\u5f52\u3002\n    \u8fd9\u6837\u6bcf\u4e2a\u4f4d\u7f6e\u53ea\u4f1a\u88ab\u66f4\u65b0(m^2)\u6b21(\u56e0\u4e3a\u6700\u957f\u7684\u8def\u5f84\u662f(m^2)\u7ea7\u522b\u7684)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(m^4)\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u4e0a\u754c\u5f88\u4e0d\u6ee1\uff0c\u6240\u4ee5\u80fd\u8fc7\u3002\n\n------------\n\n#### ZJ\u53c2\u8003\u4ee3\u7801\uff1a\n```\n\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define fr(a , b , c) for(ll a = b;a <= c;a++)\n\nconst ll maxn = 101;\nll ans[maxn][maxn] , color[maxn][maxn];\nll dir[4][2] ={{0,1} , {1,0} , {0,-1} , {-1,0}};\nll m , n;\n\nvoid dfs(ll x , ll y , ll len , bool can){ //len\u4e3a\u73b0\u5728\u7684\u4ee3\u4ef7\uff0ccan\u4e3a\u73b0\u5728\u80fd\u4e0d\u80fd\u7528\u9b54\u6cd5 \n    if(len >= ans[x][y]) return ;//\u4e00\u5b9a\u8981\u6ce8\u610f\u7528>=\uff0c\u5426\u5219\u4f1a\u9677\u5165\u6b7b\u9012\u5f52\uff01\uff01\uff01 \n    ans[x][y] = len;//\u4fdd\u5b58 \n    fr(i , 0 , 3){\n        ll tx = x+dir[i][0] , ty = y+dir[i][1];\n        if(tx>m || ty>m || tx<1 || ty<1) continue ;\n        if(!color[tx][ty]){\n            if(can){\n                color[tx][ty] = color[x][y];\n                dfs(tx , ty , len+2 ,0);\n                color[tx][ty] = 0;\n            }\n        }\n        else if(color[tx][ty] == color[x][y])\n        \tdfs(tx , ty , len , 1);\n        else\t\n        \tdfs(tx , ty , len+1 , 1);\n    }\n}\nint main(){\n//\tfreopen(\"chess.in\" , \"r\" , stdin);\n//\tfreopen(\"chess.out\" , \"w\" , stdout);\n    scanf(\"%lld%lld\" , &m , &n);\n    fr(i , 1 , n){\n    \tll x , y , c;\n    \tscanf(\"%lld%lld%lld\" , &x , &y , &c);\n    \tcolor[x][y] = c+1;\n\t}\n\tfr(i , 1 , m) fr(j , 1 , m) ans[i][j] = 1000001;\n    dfs(1 , 1 , 0 , 1);\n    if(ans[m][m] == 1000001) printf(\"-1\");\n    else printf(\"%lld\" , ans[m][m]);\n    return 0;\n}\n```",
        "postTime": 1540221893,
        "uid": 65971,
        "name": "mrgogoup",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "# NOIP2017 T3 80\u5206\u7684\u770b\u8fd9\u91cc\n\n\u6211\u4e0d\u77e5\u9053\u4f60\u4eec\u662f\u4e0d\u662f\u8fd9\u4e2a\u95ee\u9898\uff0c\u53cd\u6b63\u6211Wa\u56db\u4e2a\u70b9\uff0c\u539f\u56e0\u662f\u5199\u7740\u5199\u7740\u5fd8\u4e86\u9898\u76ee\u4e2d\u7684\u9b54\u6cd5\u4e0d\u80fd\u8fde\u7528\u2026\u2026\n\n\u7136\u540e\u5c45\u7136\u8fd8\u80fd80\u5206\uff0c\u8bf4\u660e\u6570\u636e\u662f\u6709\u591a\u6c34\uff08\u6211\u4eec\u5b66\u6821\u6709\u4e2a\u5927\u4f6c\uff0c\u53ea\u8003\u8651\u4e86\u5411\u53f3\u5411\u4e0b\u7684\u60c5\u51b5\uff0c\u7136\u540e95\u2026\u2026\uff09\n\n\u6211\u7528\u7684\u662fdfs\u52a0\u4e00\u4e2a\u6700\u4f18\u6027\u526a\u679d\uff08\u597d\u50cf\u66f4\u5e94\u8be5\u53eb\u8bb0\u5fc6\u5316\u2026\u2026\u6211\u849f\uff09\uff0c\u5177\u4f53\u8bf4\uff0c\u6211\u4eec\u5f88\u660e\u663e\u770b\u51fa\u53ef\u4ee5\u7528\u4e00\u4e2avis[i][j]\uff0c\u8868\u793a\u5230i\u884cj\u5217\u7684\u6700\u5c0f\u82b1\u8d39\u3002\n\n\u6211\u4eec\u7528arr\u6570\u7ec4\u5b58\u5730\u56fe\u30020\u8868\u793a\u4e0d\u53ef\u5230\u8fbe\uff0c1\u8868\u793a\u9700\u8981\u82b1\u9b54\u6cd5\u624d\u80fd\u5230\u8fbe\uff0c2\uff0c3\u8868\u793a\u4e24\u79cd\u989c\u8272\u3002\u518d\u7528\u4e00\u4e2a\u201cif1\u201d\u6570\u7ec4\u5b58\u8fd9\u4e2a\u4f4d\u7f6e\u662f\u5426\u771f\u7684\u662f1\u3002\u8fd9\u79cd\u65b9\u6cd5\u8981\u5c0f\u5fc3\u8fd9\u4e2a\u6570\u636e\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/30473.png )\n\n\u8fd9\u65f6\u4f1a\u51fa\u73b0\u8fde\u7eed\u7528\u9b54\u6cd5\uff0c\u8981\u7528if1\u7279\u5224\u3002\n\n\u7c98\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint m,n;\nshort int arr[105][105];\nbool if1[105][105];\nint dx[]={0,1,0,-1,0};\nint dy[]={0,0,1,0,-1};\nbool flag=0;\nint vis[105][105]={0};\nvoid init()\n{\n\tcin>>m>>n;\n\tint i,j;\n\tfor(i=1;i<=m;i++)\n\tfor(j=1;j<=m;j++)\n\tvis[i][j]=2147483647;\n\tint x,y,c;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tcin>>x>>y>>c;\n\t\tarr[x][y]=c+2;\n\t\tif1[x][y]=0;\n\t\tif(arr[x-1][y]<2)\n\t\tarr[x-1][y]=if1[x-1][y]=1;\n\t\tif(arr[x][y-1]<2)\n\t\tarr[x][y-1]=if1[x][y-1]=1;\n\t\tif(arr[x][y+1]<2)\n\t\tarr[x][y+1]=if1[x][y+1]=1;\n\t\tif(arr[x+1][y]<2)\n\t\tarr[x+1][y]=if1[x+1][y]=1;//0no 1ke 2red 3yellow;\n\t}\n}\nvoid f(int x,int y,int coin)\n{\n\tint i;\n\tif(coin>=vis[x][y])//\u4e3a\u4ec0\u4e48\u662f>=\u800c\u4e0d\u662f>\u5462\uff1f\n    //\u56e0\u4e3a\u5982\u679c\u662f>\uff0c\u8d70\u5230\u76f8\u540c\u989c\u8272\u65f6\uff0c\u4f1a\u5f80\u56de\u8d70\uff0c\u4ece\u800c\u65e0\u9650\u9012\u5f52\n\treturn;\n\tvis[x][y]=coin;\n\tif(x==m&&y==m)\n\tflag=1;\n\tint x1=x,y1=y;\n\tfor(i=1;i<=4;i++){\n\t\tx+=dx[i];\n\t\ty+=dy[i];\n\t\tif(arr[x][y]!=0&&x>=1&&x<=m&&y>=1&&y<=m){\n\t\t\tif(arr[x][y]==1&&if1[x1][y1]==0){\n\t\t\t\tarr[x][y]=arr[x1][y1];\n\t\t\t\tf(x,y,coin+2);\n\t\t\t\tarr[x][y]=1;\n\t\t\t}\n\t\t\tif(arr[x][y]>1){\n\t\t\t\tif(arr[x][y]!=arr[x1][y1])\n\t\t\t\tf(x,y,coin+1);\n\t\t\t\telse\n\t\t\t\tf(x,y,coin);\n\t\t\t}\n\t\t}\n\t\tx-=dx[i];\n\t\ty-=dy[i];\n\t}\n}\nint main(){\n \tfreopen(\"chess.in\",\"r\",stdin);\n \tfreopen(\"chess.out\",\"w\",stdout);\n\tinit();\n\tf(1,1,0);\n\tif(flag==0)\n\tprintf(\"-1\\n\");\n\telse\n\tprintf(\"%d\\n\",vis[m][m]);\n \tfclose(stdin);\n \tfclose(stdout);\n\treturn 0;\n}\n```",
        "postTime": 1535188021,
        "uid": 52487,
        "name": "Kai_Admin",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "## \u3010\u603b\u4f53\u601d\u8def\u3011\n\n1\u3001\u5b58\u56fe\n\n2\u3001\u7528BFS\u904d\u5386\u6bcf\u4e2a\u70b9\uff0c\u5b58\u50a8\u6bcf\u4e2a\u70b9\u7684\u6700\u5c0f\u82b1\u8d39\n\n3\u3001\u8f93\u51fa\u7b54\u6848\n\n## \u3010\u4ee3\u7801\u5b9e\u73b0\u3011\n\n\n\n```cpp\n    #include<bits/stdc++.h>\n    using namespace std;\n    int col[101][101];//\u5b58\u56fe\u7684\u989c\u8272\uff0c1\u4ee3\u8868\u9ec4\u8272\uff0c0\u4ee3\u8868\u7ea2\u8272\n    struct bloc\n    {\n        int x,y,color;//x\u3001y\u8868\u793a\u4f4d\u7f6e\uff0ccolor\u8868\u793a\u5f53\u524d\u70b9\u88ab\u6d82\u989c\u8272\uff08\u82e5\u5b58\u56fe\u662f\u5c31\u6709\u989c\u8272\uff0c\u5219\u81ea\u52a8\u8868\u793a\u539f\u989c\u8272\uff09\n    };\n    queue <bloc> q;//\u65b0\u5efa\u4e00\u4e2a\u961f\u5217\n    int f[101][101][2],dx[4]={1,-1,0,0},dy[4]={0,0,1,-1};//f[x][y][z]\u8868\u793a\u8d70\u5230\uff08x,y\uff09\u8fd9\u4e2a\u70b9\uff0c\u6d82\u7684\u989c\u8272\u4e3az\u65f6\u6240\u7528\u91d1\u5e01\u6700\u5c0f\u503c\uff08-1\u8868\u793a\u672a\u8d70\u5230\u8fc7\uff09\n    bool vis[101][101][2];//\u7c7b\u4f3cSPFA\u7684\u5224\u91cd\n    int main()\n    {\n        int n,m;\n        scanf(\"%d%d\",&n,&m);\n        memset(col,-1,sizeof(col));\n        for (int i=1;i<=m;i++)\n        {\n            int x,y;\n            scanf(\"%d%d\",&x,&y);\n            scanf(\"%d\",&col[x][y]);\n        }\n        memset(f,-1,sizeof(f));//\u521d\u59cb\u5316\n        bloc xx;\n        xx.x=1,xx.y=1,xx.color=col[1][1];\n        f[1][1][col[1][1]]=0;//\u521d\u59cb\u4e3a0\n        q.push(xx);\n        memset(vis,false,sizeof(vis));\n        while (!q.empty())//\u5f53\u961f\u5217\u4e2d\u6709\u5143\u7d20\u65f6\u6267\u884c\n        {\n            bloc e=q.front(),s;\n            q.pop();//\u5f39\u51fa\u961f\u9996\n            vis[e.x][e.y][e.color]=false;//\u6807\u8bb0\n            for (int i=0;i<4;i++)\n            {\n                s.x=e.x+dx[i],s.y=e.y+dy[i],s.color=col[s.x][s.y];//\u8868\u793a\u65b0\u72b6\u6001\n                if (s.x<1||s.x>n||s.y<1||s.y>n) continue;//\u82e5\u8d8a\u754c\uff0c\u8df3\u8fc7\n                if (s.color==-1)//\u82e5\u65e0\u8272\n            {\n            s.color=e.color;//\u7ecf\u8bc1\u660e\u53ef\u5f97\uff0c\u82e5\u5f53\u524d\u70b9\u65e0\u8272\uff0c\u5c06\u5b83\u7684\u989c\u8272\u6d82\u4e3a\u4e0e\u524d\u4e00\u4e2a\u70b9\u76f8\u540c\u65f6\u4e00\u5b9a\u662f\u6700\u4f18\u7b54\u6848\uff0c\u6240\u4ee5\u76f4\u63a5\u6d82\u4e3ae.color\n            if (col[e.x][e.y]==-1) continue;//\u9898\u76ee\u4e2d\u8bf4\u201c\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u8fd9\u4e2a\u9b54\u6cd5\uff0c\u8d70\u5230\u4e86\u8fd9\u4e2a\u6682\u65f6\u6709\u989c\u8272\u7684\u683c\u5b50\u4e0a\uff0c\u4f60\u5c31\u4e0d\u80fd\u7ee7\u7eed\u4f7f\u7528\u9b54\u6cd5\u201d\uff0c\u6240\u4ee5\u82e5\u524d\u4e00\u4e2a\u70b9\u548c\u5f53\u524d\u70b9\u5747\u4e3a\u65e0\u8272\uff0c\u5219\u8df3\u51fa\n            if (f[e.x][e.y][e.color]+2<f[s.x][s.y][s.color]||f[s.x][s.y][s.color]==-1)//\u82e5\u7b54\u6848\u53ef\u4ee5\u88ab\u66f4\u65b0\n            {\n                f[s.x][s.y][s.color]=f[e.x][e.y][e.color]+2;\n                if (!vis[s.x][s.y][s.color])//\u5224\u91cd\n                {\n                    vis[s.x][s.y][s.color]=true;\n                    q.push(s);//\u538b\u5165\u961f\u5217\n                }\n            }\n        }\n        else//\u82e5\u6709\u989c\u8272\n        {\n            if (col[s.x][s.y]==e.color)//\u989c\u8272\u76f8\u540c\n            {\n                if (f[e.x][e.y][e.color]<f[s.x][s.y][s.color]||f[s.x][s.y][s.color]==-1) \n                {\n                    f[s.x][s.y][s.color]=f[e.x][e.y][e.color];\n                    if (!vis[s.x][s.y][s.color])\n                    { \n                        vis[s.x][s.y][s.color]=true;\n                        q.push(s);\n                    }\n                }\n            }\n            else//\u82e5\u989c\u8272\u4e0d\u540c\n            {\n                if (f[e.x][e.y][e.color]+1<f[s.x][s.y][s.color]||f[s.x][s.y][s.color]==-1) \n                {\n                    f[s.x][s.y][s.color]=f[e.x][e.y][e.color]+1;\n                    if (!vis[s.x][s.y][s.color])\n                    {\n                        vis[s.x][s.y][s.color]=true;\n                        q.push(s);\n                    }\n                }\n            }\n        }\n        if (f[n][n][0]==-1||f[n][n][1]==-1) cout << max(f[n][n][0],f[n][n][1]);//\u82e5\u7ec8\u70b9\u6709\u989c\u8272\uff0c\u5219\u8f93\u51fa\u8f83\u5927\u503c\n        else cout << min(f[n][n][0],f[n][n][1]);//\u8f93\u51fa\u8f83\u5c0f\u503c\n        return 0;\n    }\n\n```",
        "postTime": 1514267808,
        "uid": 24072,
        "name": "reputation",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u00b7\u4f60\u53d1\u73b0\u73b0\u5728\u4ea4\u8fd9\u9898\u7684\u9898\u89e3\u597d\u50cf\u6709\u70b9\u665a\u4e86\n\n\u00b7\u4f60\u7528\u4e86\u8bb0\u5fc6\u5316dfs\n\n\u00b7\u6bcf\u6b21\u8d70\u4e00\u683c\u65f6\u5206\u4f7f\u7528\u9b54\u6cd5\u548c\u4e0d\u4f7f\u7528\u9b54\u6cd5\u4e24\u79cd\u60c5\u51b5\n\n\u00b7\u5efa\u8bae\u4f7f\u7528\u9b54\u6cd5\u65f6\u628a\u9762\u524d\u90a3\u4e00\u5757\u53d8\u4e3a\u811a\u4e0b\u90a3\u4e00\u5757\u7684\u989c\u8272\uff1a\n\n\u00b71.\u5f53\u4e24\u5cb8\u989c\u8272\u4e0d\u4e00\u6837\u65f6\uff0c\u989d\u5916\u82b1\u4e00\u4e2a\u91d1\u5e01\n\n\u00b72.\u5f53\u4e24\u5cb8\u989c\u8272\u4e00\u6837\u65f6\uff0c\u4e0d\u989d\u5916\u82b1\u91d1\u5e01\n\n```cpp\n    #include<cstdio>\n    using namespace std;\n    int n,m,mp[102][102],mmr[102][102],stp[4][2]={{1,0},{-1,0},{0,1},{0,-1}};\n    void dfs(int x,int y,int s,bool mfed)\n    {\n        if(s<mmr[x][y])mmr[x][y]=s;\n        else return;\n        if(x==n&&y==n)return;\n        int tmp=mp[x][y];\n        mp[x][y]=-2;\n        for(int i=0;i<4;i++)\n        {\n            if(x+stp[i][0]<1||x+stp[i][0]>n||y+stp[i][1]<1||y+stp[i][1]>n)continue;\n            if(mp[x+stp[i][0]][y+stp[i][1]]>=0)\n            {\n                if(tmp!=mp[x+stp[i][0]][y+stp[i][1]])s++;\n                dfs(x+stp[i][0],y+stp[i][1],s,false);\n                if(tmp!=mp[x+stp[i][0]][y+stp[i][1]])s--;\n            }\n            if(!mfed&&mp[x+stp[i][0]][y+stp[i][1]]==-1)\n            {\n                mp[x+stp[i][0]][y+stp[i][1]]=tmp;\n                dfs(x+stp[i][0],y+stp[i][1],s+2,true);\n                mp[x+stp[i][0]][y+stp[i][1]]=-1;\n            }\n        }\n        mp[x][y]=tmp;\n    }\n    int main()\n    {\n        for(int i=0;i<102;i++)\n          for(int j=0;j<102;j++)mp[i][j]=-1,mmr[i][j]=50000;\n        scanf(\"%d%d\",&n,&m);\n        for(int i=0;i<m;i++)\n        {\n            int tmpx,tmpy;\n            scanf(\"%d%d\",&tmpx,&tmpy);\n            scanf(\"%d\",&mp[tmpx][tmpy]);\n        }\n        dfs(1,1,0,false);\n        printf(\"%d\",mmr[n][n]==50000?-1:mmr[n][n]);\n        return 0;\n}\n```",
        "postTime": 1513081049,
        "uid": 52914,
        "name": "MornEveGlow",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u90fd\u662fC\u515a\uff0c\u8eab\u4e3a\u4e00\u4e2a\u8d44\u6df1P\u515a\u7684\u5c4c\u4e1d\uff0c\u6211\u6253\u7b97\u5199\u8fd9\u7bc7\u9898\u89e3\n\n\u8fd9\u9898\u662f\u7b2c\u4e09\u9898\uff0c\u4e5f\u4e0d\u662f\u5f88\u96be\uff08\u5bf9\u4e8e\u795e\u7287\uff09\uff0c\u8fd9\u662f\u4e00\u9898\u5e7f\u641c\uff0c\u6709\u4e9b\u4eba\u770b\u5230\u9b54\u6cd5\u5c31\u6015\u4e86\uff0c\u5176\u5b9e\u9b54\u6cd5\u5f88\u597d\u89e3\u51b3\uff0c\u589e\u52a0\u4e00\u4e2a\u6570\u7ec4\u5c31\u53ef\u4ee5\u4e86\uff0c\u8be6\u7ec6\u89c1\u4ee3\u7801\u3002\n\n\u4eba\u6c11\u559c\u95fb\u4e50\u89c1\u7684\u6392\u4ee3\u7801\u6765\u4e86\uff1a\n```\nconst e:array[1..4,1..2] of longint=((1,0),(0,1),(-1,0),(0,-1));//\u5e7f\u641c\u7684\u56db\u4e2a\u65b9\u5411\nvar n,m,i,x,y,z,xx,w,t:longint;\na,g,f:array[0..1000,0..1000] of longint;f\u4fdd\u5b58\u6700\u77ed\u8def\uff0cg\u4fdd\u5b58\u9b54\u6cd5\u540e\u7684\u989c\u8272\uff0ca\u4fdd\u5b58\u4e00\u5f00\u59cb\u7684\u989c\u8272\nb,c:array[0..1000000] of longint;//\u5e7f\u641c\u65f6\u7684\u5750\u6807\u4fdd\u5b58\nfunction pd(x,y,xx,yy:longint):longint;//\u5224\u65ad\u9700\u8981\u591a\u5c11\u91d1\u5e01\nbegin\nif (a[x,y]=0)and(a[xx,yy]=0) then exit(3);//\u5982\u679c\u90fd\u6ca1\u6709\u989c\u8272\nif (a[x,y]=a[xx,yy])or(a[x,y]=0)and(g[x,y]=a[xx,yy]) then exit(0)//\u5982\u679c\u989c\u8272\u76f8\u540c\uff0c\u6216\u8005\u6539\u53d8\u540e\u989c\u8272\u76f8\u540c\nelse if a[xx,yy]=0 then exit(2)//\u5982\u679c\u5f53\u524d\u6709\u989c\u8272\uff0c\u8d70\u5230\u7684\u70b9\u6ca1\u6709\u989c\u8272\nelse exit(1);//\u5269\u4e0b\u7684\u60c5\u51b5\u5c31\u662f\u6709\u989c\u8272\u4e14\u4e0d\u76f8\u7b49\nend;\nbegin//\u4e3b\u7a0b\u5e8f\u5f00\u59cb\nreadln(n,m);//\u8bfb\u5165\nfor i:=1 to m do\n  begin\n  readln(x,y,z);a[x,y]:=z+1;//\u6807\u8bb0\u989c\u8272\n  end;\nt:=1;w:=1;b[t]:=1;c[t]:=1;fillchar(f,sizeof(f),63);f[1,1]:=0;//\u5e7f\u641c\u521d\u59cb\u5316\uff08f\u768463\u4fdd\u5b58\u4e86maxlongint div 2\u5de6\u53f3\u7684\u6570\uff09\nwhile t<=w do//\u5982\u679c\u6ca1\u6709\u5168\u90e8\u505a\u5b8c\n  begin\n  for i:=1 to 4 do\n    begin\n    x:=b[t]+e[i,1];y:=c[t]+e[i,2];//\u8981\u8d70\u5230\u7684\u70b9\n    xx:=pd(b[t],c[t],x,y);//xx\u4fdd\u5b58\u91d1\u5e01\u6570\u91cf\n    if xx=3 then continue;//\u5982\u679c\u662f3\uff0c\u8bc1\u660e\u90fd\u6ca1\u6709\u989c\u8272\uff0c\u9000\u51fa\n    if (x>=1)and(x<=n)and(y>=1)and(y<=n)and(f[x,y]>f[b[t],c[t]]+xx) then//\u5728\u8303\u56f4\u5185\uff0c\u5e76\u4e14\u8d70\u5230\u7684\u70b9\u7684\u91d1\u5e01\u6570\u91cf\u6bd4\u5f53\u524d\u8fd9\u4e2a\u70b9\u5230\u8fbe\u90a3\u4e2a\u70b9\u591a\n      begin\n      w:=w+1;b[w]:=x;c[w]:=y;//\u4fdd\u5b58\u5750\u6807\n      f[x,y]:=f[b[t],c[t]]+xx;//\u4fdd\u5b58\u91d1\u5e01\n      if xx=2 then g[x,y]:=a[b[t],c[t]];//\u5982\u679c\u662f2\uff0c\u8bc1\u660e\u8981\u6539\u53d8\u8fd9\u4e2a\u989c\u8272\uff0c\u5219\u6539\u53d8\n      end;\n    end;\n  t:=t+1;//\u505a\u4e0b\u4e00\u4e2a\n  end;\nif f[n,n]=f[0,0] then writeln(-1)//\u5982\u679c\u8d70\u4e0d\u5230\uff0c\u8f93\u51fa-1\nelse writeln(f[n,n]);//\u5426\u5219\u8f93\u51fa\u6700\u77ed\u8def\nend.\n```\n\u6b64\u4ee3\u7801\u4ec5\u4f9b\u53c2\u8003\uff0c\u4e0d\u8981\u6284\u88ad\u54e6~~\n\u795e\u7287\u8bf7\u8def\u8fc7~~\n",
        "postTime": 1512880492,
        "uid": 77612,
        "name": "_\u6276\u7b19_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956"
    },
    {
        "content": "~~\u8003\u573a\u4e0a\u7528\u6df1\u641c\u5374\u6ca1\u60f3\u5230\u8bb0\u5fc6\u5316 \u53ea\u670955\u5206~~\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\n\n#define MAX 1e9\n\nint m, n;\nint Chess[1001][1001]; //\u68cb\u76d8\uff0c0\u8868\u793a\u65e0\u8272 \n\nint dir[4][2] = {{0,1},{1,0},{-1,0},{0,-1}};\nint f[1001][1001]; //\u8bb0\u5fc6\u5316\uff1af[i][j]\u8868\u793a\u5230(i, j) \u7684\u6700\u5c0f\u82b1\u8d39 \n\nvoid DFS(int a, int b, int sum, bool can_flog) { //\u5750\u6807(a,b), \u82b1\u8d39-sum, \u80fd\u5426\u4f7f\u7528\u9b54\u6cd5-can_flog \n    if(a < 1 || a > m || b < 1 || b > m) return;\n    if(sum >= f[a][b]) return; //\u6839\u636e\u8bb0\u5fc6\u5316 \u526a\u679d \n    f[a][b] = sum;\n    if(a == m && b == m) return;\n    for(int i=0; i<4; i++) {\n        int next_x = a + dir[i][0];\n        int next_y = b + dir[i][1];\n        if(next_x < 1 || next_x > m || next_y < 1 || next_y > m) continue;\n        if(Chess[next_x][next_y] == 0) {\n            if(!can_flog) continue;\n            Chess[next_x][next_y] = Chess[a][b]; //\u628a\u4e0b\u4e00\u4e2a\u683c\u5b50\u53d8\u4e3a\u5f53\u524d\u683c\u5b50\u7684\u989c\u8272 \n            DFS(next_x, next_y, sum + 2, false); //\u4e0d\u80fd\u518d\u7528\u9b54\u6cd5\u4e86\uff0ccan_flog = false \n            Chess[next_x][next_y] = 0; //\u8bb0\u5f97\u56de\u6eaf \n        } else { \n            if(Chess[next_x][next_y] != Chess[a][b]) DFS(next_x, next_y, sum + 1, true);\n            else if(Chess[next_x][next_y] == Chess[a][b]) DFS(next_x, next_y, sum, true);\n        }\n    }\n\n}\nint main() {\n    int x, y, color;\n    cin >> m >> n;\n    for(int i=1; i<=m; i++)\n        for(int j=1; j<=m; j++)\n            f[i][j] = MAX;\n    for(int i=1; i<=n; i++) {\n        cin >> x >> y >> color;\n        Chess[x][y] = color + 1;\n    }\n    DFS(1, 1, 0, true);\n    if(f[m][m] == MAX) f[m][m] = -1; //\u65e0\u6cd5\u5230\u8fbe \n    cout << f[m][m] << endl;\n    return 0;\n}\n```",
        "postTime": 1512387267,
        "uid": 20375,
        "name": "hongzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u5728noip\u8003\u573a\u4e0a\u672c\u6765\u4ee5\u4e3a\u53ea\u80fd\u9a97\u66b4\u529b\u5206\uff0c\u6ca1\u60f3\u5230\u6700\u540eA\u4e86\uff1b\n\n\u672c\u849f\u84bb\u7684\u505a\u6cd5\u6bd4\u8f83\u7b80\uff08zhi\uff09\u5355\uff08zhang\uff09\uff1a\u8bb0\u5fc6\u5316\u6df1\u641c\uff08\u8003\u573a\u4e0a\u672c\u6765\u662f\u60f3\u6253\u5e7f\u641c\u7684\uff0c\u4f46\u6211\u6df1\u641c\u7a33\u4e00\u70b9\u5c31\u8fd9\u6837\u6253\u4e86\uff09\uff1b\n\n\u5177\u4f53\uff1a\u6bcf\u4e2a\u70b9\u5f00\u4e2af\u6570\u7ec4\uff0c\u8bb0\u5f55\u5f53\u524d\u4f4d\u7f6e\u5230\u8fd9\u4e2a\u70b9\u7684\u6700\u4f18\u503c\uff0c\u5982\u679c\u5927\u4e8e\u7b49\u4e8e\u5c31\u8df3\u51fa\uff0c\u5426\u5219\u66f4\u65b0\u7ee7\u7eed\u505a\uff1b\n\n\u6df1\u641c\u7684\u8fc7\u7a0b\u4e2d\u5f00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u662f\u5426\u65e0\u8272\uff0c\u5982\u679c\u65e0\u8272\u8981\u6ce8\u610f\u4e0b\u4e2a\u8d70\u7684\u70b9\u4e0d\u80fd\u6709\u8272\uff0c\u5982\u679c\u4e0b\u4e2a\u70b9\u8981\u8d70\u65e0\u8272\u7684\u683c\u5b50\uff0c\u8fd9\u91cc\u53ef\u4ee5\u91c7\u53d6\u4e00\u4e2a\u8d2a\u5fc3\u7684\u7b56\u7565\uff1a\u628a\u90a3\u4e2a\u683c\u5b50\u7684\u989c\u8272\u8bbe\u7f6e\u6210\u5f53\u524d\u8fd9\u4e2a\u683c\u5b50\u7684\u989c\u8272\uff1b\n\n\u8981\u6ce8\u610f\u7684\u662f\uff1a\u8d70\u7684\u8fc7\u7a0b\u4e2d\u662f\u53ef\u4ee5\u5411\u56db\u4e2a\u65b9\u5411\u8d70\u7684\uff0c\u5e76\u4e14\u8981\u56de\u6eaf\uff08\u6211\u4e00\u4e2adalao\u540c\u5b66\u5c31\u5fd8\u4e86\u56de\u6eaf\u624d\u62ff\u4e8640\uff09\uff1b\n\n\u9644\u849f\u84bb\u4e11\u964b\u7684\u4ee3\u7801\u3002\u3002\u3002\n\n```cpp\nvar n,m,i,j,k,l,x,y,z:longint;\n    a:array[0..101,0..101] of longint;\n    b:array[0..101,0..101] of boolean;\n    f:array[0..101,0..101] of longint;\nprocedure try(x,y,z,kk:longint);\nbegin\n  if (x>m)or(y>m)or(x<1)or(y<1) then exit;\n  if b[x,y] then exit;\n  if z>=f[x,y] then exit;\n  if (x=m)and(y=m) then\n  begin\n    if z<k then k:=z;\n    exit;\n  end;\n  f[x,y]:=z;\n  inc(l);\n  b[x,y]:=true;\n  if a[x,y]=1 then\n  begin\n    if a[x+1,y]=1 then try(x+1,y,z,1) else\n    if a[x+1,y]=2 then try(x+1,y,z+1,1) else\n    if kk=1 then\n    begin\n      a[x+1,y]:=1;\n      try(x+1,y,z+2,0);\n      a[x+1,y]:=0;\n    end;\n    if a[x,y+1]=1 then try(x,y+1,z,1) else\n    if a[x,y+1]=2 then try(x,y+1,z+1,1) else\n    if kk=1 then\n    begin\n      a[x,y+1]:=1;\n      try(x,y+1,z+2,0);\n      a[x,y+1]:=0;\n    end;\n    if a[x-1,y]=1 then try(x-1,y,z,1) else\n    if a[x-1,y]=2 then try(x-1,y,z+1,1) else\n    if kk=1 then\n    begin\n      a[x-1,y]:=1;\n      try(x-1,y,z+2,0);\n      a[x-1,y]:=0;\n    end;\n    if a[x,y-1]=1 then try(x,y-1,z,1) else\n    if a[x,y-1]=2 then try(x,y-1,z+1,1) else\n    if kk=1 then\n    begin\n      a[x,y-1]:=1;\n      try(x,y-1,z+2,0);\n      a[x,y-1]:=0;\n    end;\n  end else\n  if a[x,y]=2 then\n  begin\n    if a[x+1,y]=1 then try(x+1,y,z+1,1) else\n    if a[x+1,y]=2 then try(x+1,y,z,1) else\n    if kk=1 then\n    begin\n      a[x+1,y]:=2;\n      try(x+1,y,z+2,0);\n      a[x+1,y]:=0;\n    end;\n    if a[x,y+1]=1 then try(x,y+1,z+1,1) else\n    if a[x,y+1]=2 then try(x,y+1,z,1) else\n    if kk=1 then\n    begin\n      a[x,y+1]:=2;\n      try(x,y+1,z+2,0);\n      a[x,y+1]:=0;\n    end;\n    if a[x-1,y]=1 then try(x-1,y,z+1,1) else\n    if a[x-1,y]=2 then try(x-1,y,z,1) else\n    if kk=1 then\n    begin\n      a[x-1,y]:=2;\n      try(x-1,y,z+2,0);\n      a[x-1,y]:=0;\n    end;\n    if a[x,y-1]=1 then try(x,y-1,z+1,1) else\n    if a[x,y-1]=2 then try(x,y-1,z,1) else\n    if kk=1 then\n    begin\n      a[x,y-1]:=2;\n      try(x,y-1,z+2,0);\n      a[x,y-1]:=0;\n    end;\n  end;\n  b[x,y]:=false;\nend;\nbegin\n  assign(input,'chess.in');\n  assign(output,'chess.out');\n  reset(input);\n  rewrite(output);\n  k:=maxlongint div 3;\n  read(m,n);\n  for i:=1 to m do\n    for j:=1 to m do f[i,j]:=maxlongint;\n  for i:=1 to n do\n  begin\n    read(x,y,z);\n    a[x,y]:=z+1;\n  end;\n  try(1,1,0,1);\n  if k=maxlongint div 3 then write(-1) else\n  write(k);\n  close(input);\n  close(output);\nend.\n```",
        "postTime": 1511881193,
        "uid": 17035,
        "name": "DFSlover",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "# \u7279\u522b\u9e23\u8c22@yali\\_hzy\n\n~~\u8fd9\u4eba\u5f3a\u8feb\u7684~~\n\n\u4fd7\u8bdd\u8bf4\u5f97\u597d\uff1a\n\n$$Your_Score=\\sum^{+infty}_{i =1}i \\times Your_RP$$\n\n\n-----\n\n\u8fd9\u9898\u5c31\u662f\u7528\u6765\u9a97\u5206\u7684\u3002\n\n\n\u4e3a\u4ec0\u4e48\u600e\u4e48\u8bf4\uff1f\n\n\n\u6211\u8003\u573a\u4e0a\u9a97\u4e86$95pts$\n\n\n----\n\n#\u5bf9\u4e8e$n \\le 5$\n\n\u76f4\u63a5\u7206\u641c**dfs**\n\n\n#\u5bf9\u4e8e$n > 5$\n\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9$(x, y)$\uff0c\u6211\u4eec\u8bb0$SUM(x, y)$\u4e3a\u5230\u5f53\u524d\u6700\u5c0f\u7684\u82b1\u8d39\u3002\n\n\u53ea\u8981\u5f53\u524d\u82b1\u8d39\u8d85\u8fc7\u4e86$SUM(x, y)$\uff0c\u5c31**return**\n\n\n> \u53ef\u5199\u53c8\u53ef\u8bfb\n\n----\n\n# Code\n```cpp\n#define REP(i, s, e) for(register int i = s; i <= e ;i++)\n#define chkmin(a, b) a = min(a, b);\n\n#include <bits/stdc++.h>\n\nusing namespace std;\nconst int maxn = 105, inf = 1e9;\n\nint n, m, ans;\nint a[maxn][maxn], SUM[maxn][maxn];\n\nint d[][2] = {{1, 0}, {0, 1}, {0, -1}, {0, 1}};\n\nbool flag, vis[maxn][maxn];\n\nnamespace cheat{\n    inline void dfs(int x, int y, int now, int use, int sum) {\n        if (flag) return;\n        if (sum >= ans) return;\n        if (x == n && y == n) {\n            chkmin(ans, sum);\n            return;\n        }\n        REP(i, 0, 3) {\n            if (flag) return;\n            int tx = x + d[i][0];\n            int ty = y + d[i][1];\n            if (tx < 1 || tx > n || ty < 1 || ty > n) continue;\n            if (a[tx][ty]) {\n                if (a[tx][ty] == now && !vis[tx][ty]) {\n                    vis[tx][ty] = 1;\n                    dfs(tx, ty, now, 0, sum);\n                    vis[tx][ty] = 0;\n                }\n                else if (!vis[tx][ty]) {\n                    vis[tx][ty] = 1;\n                    dfs(tx, ty, a[tx][ty], 0, sum + 1);\n                    vis[tx][ty] = 0;\n                }\n            }\n            if (flag) return;\n            if (!a[tx][ty] && !use) {\n                REP(j, 1, 2) {\n                    a[tx][ty] = j;\n                    int res = 0;\n                    if (a[x][y] != a[tx][ty]) res++;\n                    if (!vis[tx][ty]) {\n                        vis[tx][ty] = 1;\n                        dfs(tx, ty, a[tx][ty], 1, sum + 2 + res);\n                        vis[tx][ty] = 0;\n                        a[tx][ty] = 0;\n                    }\n                }\n                a[tx][ty] = 0;\n            }\n        }\n        return;\n    }\n\n}\n\ninline void dfs(int x, int y, int now, int use, int sum) {\n    chkmin(SUM[x][y], sum);\n    if (flag) return;\n    if (sum >= ans) return;\n    if (x == n && y == n) {\n        chkmin(ans, sum);\n        return;\n    }\n    REP(i, 0, 3) {\n        if (flag) return;\n        int tx = x + d[i][0];\n        int ty = y + d[i][1];\n        if (tx < 1 || tx > n || ty < 1 || ty > n) continue;\n        if (a[tx][ty]) {\n            if (a[tx][ty] == now && (n <= 5 || (sum < SUM[tx][ty] && n > 5))) dfs(tx, ty, now, 0, sum);\n            else if (n <= 5 || (n > 5 && sum + 1 < SUM[tx][ty])) dfs(tx, ty, a[tx][ty], 0, sum + 1);\n        }\n        if (flag) return;\n        if (!a[tx][ty] && !use) {\n            REP(j, 1, 2) {\n                a[tx][ty] = j;\n                int res = 0;\n                if (a[x][y] != a[tx][ty]) res++;\n                if (n <= 5 || (n > 5 && sum + 2 + res < SUM[tx][ty])) dfs(tx, ty, a[tx][ty], 1, sum + 2 + res);\n                a[tx][ty] = 0;\n            }\n            a[tx][ty] = 0;\n        }\n    }\n    return;\n}\n\nint main() {\n//    freopen(\"chess2.in\", \"r\", stdin);\n//    freopen(\"chess.out\", \"w\", stdout);\n    cin >> n >> m;\n    REP(i, 1, n)\n        REP(j, 1, n)\n            SUM[i][j] = inf;\n    while (m--) {\n        register int x, y, z;\n        scanf(\"%d%d%d\", &x, &y, &z);\n        a[x][y] = z + 1;\n    }\n    ans = inf;\n    if (n <= 5) {vis[1][1] = 1;cheat::dfs(1, 1, a[1][1], 0, 0);}\n    else dfs(1, 1, a[1][1], 0, 0);\n    if (!flag) printf(\"%d\", ans ^ inf ? ans : -1);\n    return 0;\n}\n```\n\n---\n\n# \u6ce8 \uff1a\u672c\u4ee3\u7801\u53ef\u4ee5\u8f7b\u677e**hack**\uff0c\u8bf7\u4e0d\u8981\u5b66\u4e60\uff0c\u4ec5\u4f9b\u5a31\u4e50\u3002\n",
        "postTime": 1511699803,
        "uid": 18215,
        "name": "CraZYali",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\n#\u8bb0\u5fc6\u5316DFS\n\n#\n##\u8fd9\u9898\u4e2a\u4eba\u89c9\u5f97\u7528\u8bb0\u5fc6\u5316DFS\u7684\u96be\u70b9\u5c31\u662f\u5982\u4f55\u526a\u679d\uff08\u7ec8\u6b62\u6761\u4ef6\uff09\n\n\n\n```cpp\ndis[x][y] \u8868\u793a\u5f53\u524d\u4ece(1,1)\u5230(x,y)\u7684\u6700\u5c0f\u82b1\u8d39\nans \u8868\u793a\u5f53\u524d\u4ece(1,1)\u5230(x,y)\u7684\u82b1\u8d39\nnext \u8868\u793a\u5f53\u524d(x,y)\u5230(m,m)\u7684\u6700\u5c0f\u82b1\u8d39\n(x0,y0) \u8868\u793a\u5728\u67d0\u6761\u8def\u5f84\u4e2d\u5230\u8fbe(x,y)\u7684\u4e0a\u4e00\u6b65\u5230\u8fbe\u70b9\n(x1,y1) \u8868\u793a\u4e0e(x,y)\u7684\u90bb\u63a5\u70b9\n```\n##\u4e00\u79cd\u9519\u8bef\u526a\u6cd5:\nif(ans>dis[x][y]) return;\n\n\u5982\u679c\u5f53\u524dans\u5927\u4e8edis[x][y]\uff0c\u5c31\u8bf4\u660edis[x][y]\u4e0d\u80fd\u88ab\u66f4\u65b0\uff0c\u5219ans+next>dis[m][m]\u4e00\u5b9a\u6210\u7acb\uff0c\u56e0\u6b64\u518d\u8d70\u4e0b\u9762\u7684(x,y)\u5230(m,m)\u7684\u8def\u5f84\u4e5f\u6ca1\u6709\u610f\u4e49\u3002\n\n\u5982\u679c\u5f53\u524dans\u7b49\u4e8edis[x][y]\uff0c\u4e0d\u80fd\u5c06\u5176\u526a\u53bb\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\n\n\n(x,y)\u4e3a\u65e0\u8272\uff0c\u4ece(1,1)\u5230(x,y)\u6709\u82b1\u8d39\u76f8\u540c\u7684\u82e5\u5e72\u6761\u8def\u5f84\u3002(x,y)\u88ab\u65bd\u5c55\u9b54\u6cd5\u6240\u53d8\u6210\u7684\u989c\u8272\u4e3a(x0,y0)\u7684\u989c\u8272\u65f6\u6700\u4f18\uff0c\u56e0\u6b64(x0,y0)\u7684\u989c\u8272\u51b3\u5b9a\u4e86(x,y)\u7684\u989c\u8272\uff0c\u800c(x,y)\u7684\u989c\u8272\u53c8\u51b3\u5b9a\u4e86next\uff0c\u6240\u4ee5\u5728ans\u7b49\u4e8edis[x][y]\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u6761\u8def\u5f84\u4ecd\u6709\u6bd4\u524d\u8def\u5f84\u66f4\u4f18\u7684\u53ef\u80fd\uff0c\u4e0d\u80fd\u5c06\u5176\u526a\u53bb\u3002\uff08\u8fd9\u79cd\u60c5\u51b5\u662f\u4e0d\u5b58\u5728\u7684\uff0c\u5728\u6ee1\u8db3ans\u7b49\u4e8edis[x][y]\u7684\u60c5\u51b5\u4e0b\u6240\u6709\u7684(x0,y0)\u989c\u8272\u5fc5\u5b9a\u76f8\u540c\uff09\n\n\n\u7136\u800c\u4e5f\u4f1a\u6709\u7279\u6b8a\u60c5\u51b5\u3002\u5f53(x,y)\u4e0e(x1,y1)\u989c\u8272\u76f8\u540c\uff0c\u4e14dis[x1][y1]\u7b49\u4e8edis[x][y]\uff0c\u505c\u4e0d\u6389\u3002\n\n\n#\u6b63\u89e3\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int cx[4]={-1,1,0,0}; //\u79fb\u52a8\u7684x,y\u53d8\u5316\nconst int cy[4]={0,0,-1,1};\nint m,n,xx,yy,c,cc[105][105],dis[105][105];\nvoid dfs(int x,int y,int ans,int bz){ //(x,y)\u4e3a\u5f53\u524d\u683c,ans\u4e3a\u5f53\u524d\u82b1\u8d39,bz\u4e3a\u6240\u5b9e\u65bd\u9b54\u6cd5\u7684\u989c\u8272\n    if(x<1||x>m||y<1||y>m||ans>=dis[x][y]) return; //\u7ec8\u6b62\u6761\u4ef6\n    dis[x][y]=min(dis[x][y],ans); //\u66f4\u4f18\u9009\u62e9\n    for(int i=0;i<4;i++){\n        int x1=x+cx[i],y1=y+cy[i];\n        if(!cc[x][y]&&!cc[x1][y1]) continue;//\u4e24\u683c\u90fd\u65e0\u8272\uff0c\u505c\u6b62\n        if(cc[x][y]&&!cc[x1][y1]) dfs(x1,y1,ans+2,cc[x][y]); //\u8d70\u5230\u65e0\u8272\u7684\u683c\u5b50\u4e0a\uff0c\u65bd\u9b54\u6cd5\u4e3a\u5f53\u524d\u683c\u989c\u8272\n        else if(cc[x][y]&&cc[x1][y1]&&cc[x1][y1]!=cc[x][y]) dfs(x1,y1,ans+1,0); //\u8d70\u5230\u4e0d\u540c\u989c\u8272\u7684\u683c\u5b50\u4e0a\n        else if(cc[x][y]==cc[x1][y1]&&cc[x][y]&&cc[x1][y1]) dfs(x1,y1,ans,0); //\u8d70\u5230\u76f8\u540c\u989c\u8272\u7684\u683c\u5b50\u4e0a\n        else if(!cc[x][y]&&cc[x1][y1]&&bz) if(bz!=cc[x1][y1]) dfs(x1,y1,ans+1,0); else dfs(x1,y1,ans,0);//\u5f53\u524d\u683c\u88ab\u65bd\u9b54\u6cd5\u65f6\u7684\u4e24\u79cd\u60c5\u51b5\n    }\n}\nint main(){\n    scanf(\"%d%d\",&m,&n);\n    for(int i=0;i<n;i++) scanf(\"%d%d%d\",&xx,&yy,&c),cc[xx][yy]=c+1; //\u989c\u8272++\u4ee5\u65b9\u4fbf\u5224\u65ad\u65e0\u8272\n    for(int i=0;i<105;i++)\n    for(int j=0;j<105;j++) dis[i][j]=2100000000;  //\u5168\u90e8\u7f6eoo\uff0c\u4ee5\u5224\u65ad\u662f\u5426\u6709\u8def\u5f84\u80fd\u5230\u8fbe(m,m)\u548c\u907f\u514d0\u7684\u5e72\u6d89\n    dfs(1,1,0,0); //\u8d77\u70b9(1,1)\uff0c\u5f53\u524d\u82b1\u8d390\uff0c\u6ca1\u65bd\u9b54\u6cd5\n    if(dis[m][m]!=2100000000) printf(\"%d\",dis[m][m]); //\u8d70\u5230\u4e86(m,m)\u8f93\u51fa\u82b1\u8d39\n    else printf(\"%d\",-1); //\u8d70\u4e0d\u5230(m,m)\uff08oo\u6ca1\u6709\u88ab\u91cd\u7f6e\uff09\uff0c\u8f93\u51fa-1\n}\n```\n\u849f\u84bb\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u5982\u6709\u4e0d\u8db3\u8bf7\u591a\u8c05\u89e3~\n",
        "postTime": 1511433890,
        "uid": 52824,
        "name": "wuyou03",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u4e4b\u524d\u5148\u7528dfs\u548c\u8bb0\u5fc6\u5316\u8fc7\u4e86\u4e00\u6b21\uff0c\u7136\u540e\u60f3\u8bd5\u8bd5bfs\uff0c\u4e0d\u662f\u5f88\u719f\u7ec3\uff0c\u9898\u89e3\u91cc\u4e5f\u6ca1\u6709c\u8bed\u8a00\u7684bfs\uff0c\u5c31\u53ea\u80fd\u81ea\u5df1\u60f3\uff0c\u6709\u597d\u51e0\u4e2a\u5751\u7684\u5730\u65b9\uff0c\u5927\u6982\u662f\u6211\u592a\u5f31\u4e86\uff0c\u4e0d\u8fc7\uff0c\u7ec8\u4e8e\u8fc7\u4e86\uff0c\u771f\u662f\u597d\u5f00\u5fc3\uff01\n\n\u4e3b\u8981\u5c31\u662f\u8fd9\u91cc\u7684bfs\u4e0d\u662f\u627e\u6700\u5c0f\u8def\uff0c\u6240\u4ee5\u4e0d\u80fd\u6807\u8bb0\uff01\uff01\uff01\n\n\u7136\u540e\u8981\u6ce8\u610fhead\u548ctail\u7684\u5173\u7cfb\uff0c\u961f\u5217\u6bd4\u7528dfs\u62bd\u8c61\n\n\u518d\u5c31\u662f\u5728\u7528\u5b8c\u9b54\u6cd5\u540e\u8981\u8bb0\u5f97\u628amagic\u6539\u56de1\uff0c\u8fd9\u4e2a\u6211\u8c03\u4e86\u597d\u4e45\u624d\u53d1\u73b0\n\n\u6700\u540e\u5c31\u653e\u4ee3\u7801\u5427\uff0c\u6ce8\u91ca\u90fd\u5728\u91cc\u9762\u4e86~\n\n\n\n\n    \n    \n                \n\n\n\n\n\n \n```cpp\n#include<stdio.h>\ntypedef struct Node\n{\n    int x;//\u6a2a\u5750\u6807\n    int y;//\u7eb5\u5750\u6807\n    int s;//\u8bb0\u5f55\u94b1\u6570 \n    int c;//\u8bb0\u5f55\u989c\u8272 \n    int magic;//\u8bb0\u5f55\u9b54\u6cd5 \n}node; \nint f[101][101];//\u8bb0\u5f55\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u6700\u5c0f\u6d88\u8d39 \nint map[101][101]={-1};    //\u5b58\u50a8\u5730\u56fe \nint main()\n{        \n    int next[4][2]={{0,1},{1,0},{0,-1},{-1,0}};//\u53f3\u4e0b\u5de6\u4e0a\uff0c\u89c4\u5b9a\u6309\u6b64\u987a\u5e8f\u8fdb\u884c\u641c\u7d22\n    int i,j,k,n,m,t1,t2,t3;\n    int tx,ty;//tx\uff0cty\u4e3a\u73b0\u5728\u5750\u6807 \n    int min=99999999;\n    node q[101*101];\n//    int book[101][101]={0};\n    int head,tail;\n    //\u8bfb\u5165\u68cb\u76d8\u4fe1\u606f \n    //m\u4e3a\u8fb9\u957f\uff0cn\u4e3a\u6709\u989c\u8272\u683c\u5b50\u6570 \n    scanf(\"%d %d\",&m,&n);\n    for(i=1;i<=m;i++)\n    {\n        for(j=1;j<=m;j++)\n        {\n            q[m*(i-1)+j].c=-1;\n            q[m*(i-1)+j].s=0;\n            q[m*(i-1)+j].magic=1; \n            map[i][j]=-1;        //-1\u8868\u793a\u65e0\u8272 \n            f[i][j]=99999;\n        }    \n    } \n    f[1][1]=0; \n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d %d %d\",&t1,&t2,&t3);\n        map[t1][t2]=t3;\n//        q[m*(t1-1)+t2].c=t3;\n    }\n    //\u521d\u59cb\u5316\u961f\u5217\n    head=1;\n    tail=1;\n    q[tail].x=1;\n    q[tail].y=1;\n    q[tail].c=map[1][1];\n    q[tail].s=0;\n    q[tail].magic=1;//1\u8868\u793a\u80fd\u7528\uff0c0\u5219\u4e0d\u80fd \n    tail++;\n    if(m>1)    //\u5730\u56fe\u8fb9\u957f\u5927\u4e8e1 \n    {\n        while(head<tail)\n        {\n            for(k=0;k<4;k++)\n            {\n                tx=q[head].x+next[k][0];\n                ty=q[head].y+next[k][1];\n                //\u5224\u65ad\u662f\u5426\u8d8a\u754c\n                if(tx>m||ty>m||tx<1||ty<1)\n                {\n                    continue;\n                } \n                //\u5224\u65ad\u662f\u5426\u662f\u65e0\u8272\u683c\u5b50\uff0c\u662f\u5426\u5df2\u7ecf\u8d70\u8fc7\n                //\u5982\u679c\u4e0d\u662f\u65e0\u8272\u683c\u5b50 \n                if(map[tx][ty]!=-1) \n                {\n                    if(map[tx][ty]!=q[head].c)\n                    {\n                        q[tail].s=q[head].s+1;\n                    }\n                    else\n                    {\n                        q[tail].s=q[head].s;\n                    }\n                    if(q[tail].s<f[tx][ty])\n                    {\n                        f[tx][ty]=q[tail].s;\n                    }\n                    else continue;\n                    q[tail].x=tx;\n                    q[tail].y=ty;\n                    q[tail].c=map[tx][ty];\n                    q[tail].magic=1;\n                    tail++;     \n                }    \n                //\u5982\u679c\u662f\u65e0\u8272\u4e14\u8fd8\u80fd\u7528\u9b54\u6cd5 \n                if(map[tx][ty]==-1&&q[head].magic==1)\n                {\n                    q[tail].c=q[head].c;\n                    q[tail].s=q[head].s+2;\n                    if(q[tail].s<f[tx][ty])\n                    {\n                        f[tx][ty]=q[tail].s;\n                    }\n                    else continue;\n                    q[tail].magic=0;\n                    q[tail].x=tx;\n                    q[tail].y=ty;\n                    tail++;\n                } \n                if(tx==m&&ty==m)\n                {\n                    if(q[tail].s<min)\n                    min=q[tail-1].s;\n                }\n            }\n            head++;\n        }\n    }\n    else min=0;\n    if(min>99999) printf(\"-1\");\n    else\n    printf(\"%d\",min);\n    return 0;    \n}\n\n```",
        "postTime": 1511420080,
        "uid": 65248,
        "name": "\u788e\u7af9\u843d\u68cb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u5728\u66b4\u529b\u4e2d\u5c31\u662f\u4e00\u4e2a\u8bb0\u5f55MAGIC\u662f\u5426\u4f7f\u7528\u8fc7\u4ee5\u53cacolor\u662f\u4ec0\u4e48\u4e24\u4e2a\u5143\u7d20\uff0c\n\n\u4e0d\u80fd\u53ea\u901a\u8fc7nx\u548cny\u6765\u8bb0\u5fc6\u5316\uff0c\u56e0\u4e3a\u4e00\u4e2a\u70b9\u8fd8\u5305\u62ec\u5b83\u88abMAGIC\u548c\u6539\u8fc7\u7684\u989c\u8272\u3002\n\n\u8bb0\u5fc6\u5316\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u53ea\u6709\u5728\u786e\u4fdd\u53ef\u4ee5\u8d70\u4e14\u5c0f\u7684\u60c5\u51b5\u4e0b\u5728\u8d70\u8fc7\u53bb\uff0c\u901f\u5ea6\u975e\u5e38\u5feb\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint f[201][201][2][2]={0}, w[4][2] = {{0,1}, {0,-1}, {-1,0}, {1,0}},ans,vis[201][201],a[201][201];\nint n,m;\nint baoli(int nx,int ny,bool magic,int color,int t=0)\n{\n    if (nx<1||ny<1||nx>n||ny>n) return 10000000;\n    if (nx==n&&ny==n) return 0;\n    \n    if (f[nx][ny][magic][color]<=t) return 10000000;\n    f[nx][ny][magic][color]=t;\n    if (vis[nx][ny]) return 10000000;\n    vis[nx][ny]=1;\n    int MAX=10000000;\n    for(int i=0;i<=3;i++)//\u65b9\u5411\u6570\u7ec4\u8fdb\u884c\u641c\u7d22\n    {\n        int X = nx+w[i][0], Y = ny+w[i][1];\n        if (magic==0)\n            if (a[X][Y]==-1) MAX=min(baoli(X,Y,1,color,t+2)+2,MAX);\n            else if (color==a[X][Y]) MAX=min(baoli(X,Y,0,a[X][Y],t),MAX);\n                  else MAX=min(baoli(X,Y,0,a[X][Y],t+1)+1,MAX);\n        else\n            if (a[X][Y]!=-1)\n                if (color==a[X][Y]) MAX=min(baoli(X,Y,0,a[X][Y],t),MAX);\n                else MAX=min(baoli(X,Y,0,a[X][Y],t+1)+1,MAX);\n    }\n    vis[nx][ny]=0;\n    return MAX;\n}\nint main()\n{\n    memset(a,-1,sizeof(a));\n    memset(f,0x3f3f3f,sizeof(f));\n    cin>>n>>m;\n    int q,w,e;\n    for (int i=1;i<=m;i++)\n        cin>>q>>w>>e,a[q][w]=e;\n    int ans=baoli(1,1,0,a[1][1]);\n    if (ans>500000) cout<<-1;\n    else cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1511340716,
        "uid": 19996,
        "name": "Ally_unstoppable",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u9996\u5148\u611f\u8c22yg\u5927\u795e\u548cH\u5927\u795e\u5bf9\u6211\u7684\u6307\u5bfc.\n\n\u8fd9\u9898\u5728\u8003\u573a\u4e0a\u5199\u4e86\u4e2aDFS,\u7ed3\u679c\u5c45\u7136\u6ca1\u52a0visited\u6570\u7ec4,\u7136\u540e\u5c31\u65e0\u9650RE............\n\n\u5176\u5b9e\u8fd9\u9898\u5e76\u4e0d\u9700\u8981\u7528\u5230SPFA\u8fd9\u79cd\u6c42\u6700\u77ed\u8def\u7684\u7b97\u6cd5,\u76f4\u63a5\u4e00\u4e2a\u8bb0\u641c\u641e\u5b9a.\n\n\u95f2\u8bdd\u5c11\u53d9,\u4e0a\u4ee3\u7801:\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\n#include<algorithm>\n#include<ctime>\n#include<queue>\nusing namespace std;\n//\u666e\u53ca\u7ec4T3 \u68cb\u76d8 \u9898\u89e3\nconst int M=1005;\nlong long m,n,x1,y11,c1,w[M][M],i,j,f[4][2]={{0,1},{0,-1},{1,0},{-1,0}},ans=1000000000000ll,fx[M][M];//f\u662f\u65b9\u5411\u6570\u7ec4,fx\u662f\u8bb0\u5fc6\u5316,w\u662f\u989c\u8272\u6570\u7ec4\nbool v[M][M],vis[M][M];//v\u662f\u5224\u5f53\u524d\u683c\u5b50\u662f\u4e0d\u662f\u4e0a\u4e00\u6b21\u53d8\u989c\u8272\u7684,vis\u662f\u662f\u5426\u8bbf\u95ee\u8fc7\u6570\u7ec4\nvoid dfs(int x,int y,long long money){\n    int k;\n    if(ans<=money){\n        return;\n    }\n    //\u8fd9\u91cc\u52a0\u4e86\u4e2a\u6700\u4f18\u6027\u526a\u679d,\u4e0d\u8fc7\u4f3c\u4e4e\u6ca1\u6709\u5feb\u591a\u5c11\n    if(fx[x][y]<=money&&fx[x][y]!=-1){\n        return;\n    }\n    //\u8bb0\u641c,\u5982\u679c\u5f53\u524d\u6240\u7528\u94b1\u6570\u6bd4\u4e4b\u524d\u641c\u5230\u7684\u8fd8\u5c0f,\u5c31\u4e0d\u641c\n    if(x<1||y<1||x>m||y>m){\n        return;\n    }\n    //\u5982\u679c\u8d8a\u754c\u4e5f\u4e0d\u641c\n    if(x==m&&y==m){\n        ans=money<ans?money:ans;\n        return;\n    }\n    //\u5982\u679c\u5230\u8fbe\u4e86\u53f3\u4e0b\u89d2\u5c31\u66f4\u65b0\u7b54\u6848\n    for(k=0;k<4;k++){\n        //\u679a\u4e3e\u6bcf\u4e2a\u65b9\u5411\n        if((x+f[k][0])>=1&&(x+f[k][0])<=m&&(y+f[k][1])>=1&&(y+f[k][1])<=m){\n            //\u9996\u5148\u5224\u65ad\u6709\u6ca1\u6709\u8d8a\u754c\n            if(w[x][y]!=-1&&w[x+f[k][0]][y+f[k][1]]!=-1&&w[x][y]==w[x+f[k][0]][y+f[k][1]]&&!vis[x+f[k][0]][y+f[k][1]]){\n                //\u518d\u5224\u65ad\u641c\u5230\u7684\u4e24\u4e2a\u683c\u5b50\u662f\u5426\u90fd\u662f\u6709\u8272\u7684,\u5e76\u4e14\u4e24\u4e2a\u683c\u5b50\u989c\u8272\u76f8\u540c\u4e14\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\n                vis[x+f[k][0]][y+f[k][1]]=true;//\u6253\u4e0a\u8bbf\u95ee\u6807\u8bb0\n                fx[x][y]=money;//\u8bb0\u5fc6\u5316,\u56e0\u4e3a\u4e4b\u524d\u5df2\u7ecf\u7279\u5224\u8fc7,\u6240\u4ee5\u5f53\u524dmoney\u503c\u4e00\u5b9a\u5c0f\u4e8efx[x][y]\n                dfs(x+f[k][0],y+f[k][1],money);//\u4e24\u4e2a\u683c\u5b50\u989c\u8272\u76f8\u540c,money\u4e0d\u53d8\n                vis[x+f[k][0]][y+f[k][1]]=false;//\u53bb\u9664\u8bbf\u95ee\u6807\u8bb0\n            }\n        }\n    }\n    for(k=0;k<4;k++){\n        //\u679a\u4e3e\u6bcf\u4e2a\u65b9\u5411\n        if((x+f[k][0])>=1&&(x+f[k][0])<=m&&(y+f[k][1])>=1&&(y+f[k][1])<=m){\n            //\u9996\u5148\u5224\u65ad\u6709\u6ca1\u6709\u8d8a\u754c\n            if(w[x][y]!=-1&&w[x+f[k][0]][y+f[k][1]]!=-1&&w[x][y]!=w[x+f[k][0]][y+f[k][1]]&&!vis[x+f[k][0]][y+f[k][1]]){\n                //\u518d\u5224\u65ad\u641c\u5230\u7684\u4e24\u4e2a\u683c\u5b50\u662f\u5426\u90fd\u662f\u6709\u8272\u7684,\u5e76\u4e14\u4e24\u4e2a\u683c\u5b50\u989c\u8272\u4e0d\u540c\u4e14\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\n                vis[x+f[k][0]][y+f[k][1]]=true;//\u6253\u4e0a\u8bbf\u95ee\u6807\u8bb0\n                fx[x][y]=money;//\u8bb0\u5fc6\u5316,\u56e0\u4e3a\u4e4b\u524d\u5df2\u7ecf\u7279\u5224\u8fc7,\u6240\u4ee5\u5f53\u524dmoney\u503c\u4e00\u5b9a\u5c0f\u4e8efx[x][y]\n                dfs(x+f[k][0],y+f[k][1],money+1);//\u4e24\u4e2a\u683c\u5b50\u989c\u8272\u4e0d\u540c,\u9700\u8981\u82b1\u4e00\u679a\u91d1\u5e01\n                vis[x+f[k][0]][y+f[k][1]]=false;//\u53bb\u9664\u8bbf\u95ee\u6807\u8bb0\n            }\n        }\n    }\n    for(k=0;k<4;k++){\n        //\u679a\u4e3e\u6bcf\u4e2a\u65b9\u5411\n        if((x+f[k][0])>=1&&(x+f[k][0])<=m&&(y+f[k][1])>=1&&(y+f[k][1])<=m){\n            //\u9996\u5148\u5224\u65ad\u6709\u6ca1\u6709\u8d8a\u754c\n            if(w[x+f[k][0]][y+f[k][1]]==-1&&!v[x][y]&&!vis[x+f[k][0]][y+f[k][1]]){\n                //\u518d\u5224\u65ad\u641c\u5230\u7684\u683c\u5b50\u662f\u5426\u662f\u65e0\u8272\u7684,\u4e14\u521a\u521a\u6ca1\u6709\u65bd\u5c55\u8fc7\u9b54\u6cd5\u4e14\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\n                w[x+f[k][0]][y+f[k][1]]=w[x][y];//\u65bd\u5c55\u9b54\u6cd5,\u4f7f\u5f53\u524d\u641c\u5230\u7684\u683c\u5b50\u4e0e\u6b64\u65f6\u7684\u683c\u5b50\u989c\u8272\u76f8\u540c\n                v[x+f[k][0]][y+f[k][1]]=true;//\u5df2\u7ecf\u65bd\u5c55\u8fc7\u9b54\u6cd5\u4e86\n                vis[x+f[k][0]][y+f[k][1]]=true;//\u6253\u4e0a\u8bbf\u95ee\u6807\u8bb0\n                fx[x][y]=money;//\u8bb0\u5fc6\u5316,\u56e0\u4e3a\u4e4b\u524d\u5df2\u7ecf\u7279\u5224\u8fc7,\u6240\u4ee5\u5f53\u524dmoney\u503c\u4e00\u5b9a\u5c0f\u4e8efx[x][y]\n                dfs(x+f[k][0],y+f[k][1],money+2);//\u65bd\u5c55\u9b54\u6cd5\u9700\u8981\u4e24\u679a\u91d1\u5e01\n                w[x+f[k][0]][y+f[k][1]]=-1;//\u9b54\u6cd5\u5931\u6548\n                v[x+f[k][0]][y+f[k][1]]=false;//\u5c06\u6b64\u6807\u8bb0\u53bb\u9664\n                vis[x+f[k][0]][y+f[k][1]]=false;//\u53bb\u9664\u8bbf\u95ee\u6807\u8bb0\n            }\n        }\n    }\n}\nint main(){\n    scanf(\"%lld%lld\",&m,&n);\n    memset(w,-1,sizeof(w));//\u4e00\u5f00\u59cb\u6240\u6709\u683c\u5b50\u90fd\u662f\u65e0\u8272\u7684\n    memset(v,false,sizeof(v));\n    memset(vis,false,sizeof(vis));\n    memset(fx,-1,sizeof(fx));//\u8bb0\u5fc6\u5316\u6570\u7ec4\u6e05\u7a7a\n    for(i=1;i<=n;i++){\n        scanf(\"%lld%lld%lld\",&x1,&y11,&c1);\n        w[x1][y11]=c1;//\u4e3a\u5f53\u524d\u683c\u5b50\u67d3\u8272\n    }\n    dfs(1,1,0);//\u521d\u59cb\u65f6\u5728\u5de6\u4e0a\u89d2,\u5750\u6807\u4e3a(1,1),\u6ca1\u6709\u82b1\u94b1\n    if(ans==1000000000000ll){\n        //\u5982\u679c\u4e0d\u80fd\u5230\u8fbe,\u8f93\u51fa-1\n        printf(\"-1\\n\");\n    }\n    else{\n        printf(\"%lld\\n\",ans);\n    }\n    //system(\"pause\");\n    return 0;\n}\n\n```",
        "postTime": 1510893764,
        "uid": 31021,
        "name": "Limerick",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\\_\u4e00\u4e2a\u63d0\u9ad8D1T2\u83ab\u540d\u70b8\u4e86\u7684\u849f\u84bb\u5199\u5199\u666e\u53ca\\_\n\n\u4e0d\u4f1a\u6253\u5220\u9664\u7ebf\n\n\u5176\u5b9e\u5f53\u6211\u53d1\u8fd9\u4efd\u9898\u89e3\u7684\u65f6\u5019\u53d1\u73b0\u697c\u4e0b\u6709\u66f4\u5999\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u5982\u679c\u52a0\u5165\u4e86\u4e0b\u9762\u7684\u601d\u60f3\u4f3c\u4e4e\u4f1a\u66f4\u5feb\u3002\n\n\u5efa\u56fe\u90e8\u5206\u662f\u6bcf\u4e2a\u70b9\u62c6\u6210\u4e24\u79cd\u989c\u8272\uff0c\u91c7\u7528\u5f02\u82721\u540c\u82720\uff0c\u7a7a\u767d\u70b9\u51fa\u8fb9\u540c\u82720\u5f02\u82721\uff0c\u5165\u8fb9\u540c\u82722\u5f02\u82723\n\n\u663e\u7136\u6bcf\u4e2a\u70b9\u51fa\u53d1\u6700\u591a\u4f1a\u6709\u65e0\u5411\u8fb94\u5bf9\uff08\u4e0a\u4e0b\u5de6\u53f3\uff09\uff0c\u7136\u540e\u70b9\u657010000\u4e2a\uff0c\u4e8e\u662f\u603b\u8fb9\u6570\uff08\u65e0\u5411\u8fb9\u7b97\u4e00\u6761\uff09\u4f1a\u670940000+\u6761\u3002\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4f20\u7edf\u6700\u77ed\u8def\uff1a\u53d1\u73b0\u5b83\u7684\u590d\u6742\u5ea6\u4e2d\u603b\u662f\u8981\u5e26\u4e2am\uff08\u8fb9\u6570\uff09\uff0c\u4e8e\u662f\u6211\u4eec\u5f88\u4e0d\u6109\u5feb\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651bfs\u3002\n\n\u91cd\u8981\u90e8\u5206\uff1a\n\n\u663e\u7136bfs\u6bcf\u4e2a\u70b9\u53ea\u9700\u8981\u8d70\u4e00\u904d\uff0c\u800c\u4e14\u7ec8\u70b9\u53ea\u4f1a\u88ab\u66f4\u65b0\u4e00\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6bd4\u5176\u4ed6\u7b97\u6cd5\u63d0\u524d\u7ed3\u675f\u3002\u4f46\u662f\u6211\u4eec\u7684\u8fb9\u6743\u4e0d\u662f1\u5982\u4f55\uff1f\n\n\u5bf9\u4e8e\u5927\u4e8e1\u7684\u5c06\u4e00\u6761\u8fb9\u62c6\u6210K\u4e2a\u70b9\uff0ck=\u8fb9\u6743-1\uff0c\u7136\u540e\u6bcf\u6761\u8fb9\u6743\u4e3a1\n\n\u5bf9\u4e8e\u8fb9\u6743\u4e3a0\u7684\u8fb9\uff0c\u663e\u7136\u76f8\u5f53\u4e8eu\u53ef\u4ee5\u76f4\u8fbev\uff0c\u4f46\u662f\u5982\u679c\u6211\u628av\u5165\u961f\u7136\u540ev\u7684\u51fa\u8fb9\u6bd4\u5176\u5b83\u70b9\u66f4\u665a\u66f4\u65b0v\u7684\u51fa\u8fb9\u600e\u4e48\u529e\uff1f\u663e\u7136bfs\u6bcf\u4e2a\u70b9\u53ea\u8d70\u4e00\u904d\u4ee5\u53ca\u7ec8\u70b9\u53ea\u66f4\u65b0\u4e00\u6b21\u5c31\u662f\u8981\u9760\u5165\u961f\u987a\u5e8f\uff08\u56e0\u4e3a\u961f\u5217\u4e2d\u7684\u70b9\u90fd\u662f\u6309\u7167\u6700\u77ed\u8def\u6392\u5e8f\u7684\uff0c\u76f8\u5f53\u4e8e\u5355\u8c03\u961f\u5217\uff09\uff0c\u5426\u5219\u5c31\u4f1a\u7b54\u6848\u9519\u8bef\uff08\u7834\u574f\u4e86\u961f\u5217\u7684\u5355\u8c03\u6027\uff09\u3002\n\n\u4e8e\u662f\u65e2\u7136\u6211\u4eec\u8981\u4fdd\u6301\u6709\u5e8f\u6027\u90a3\u5c31\u76f4\u63a5\u628a\u8fb9\u6743\u4e3a0\u7684u->v\u7684v\u76f4\u63a5\u63d2\u5165\u5230\u961f\u9996\u5373\u53ef\uff0c\u7136\u540ev\u9a6c\u4e0a\u5c31\u4f1a\u88ab\u66f4\u65b0\uff0c\u4e8e\u662f\u4e0a\u9762\u7684\u95ee\u9898\u89e3\u51b3\u4e86 \u3002\n\n\u4e0d\u96be\u53d1\u73b0\u5728\u6709\u89e3\u7684\u60c5\u51b5\u4e0b\u961f\u5217\u6269\u5c55\u8303\u56f4\u4f1a\u4e0d\u8d85\u8fc7\u9898\u4e2d\u6240\u7ed9\u7684m\u548c\u6700\u540e\u7684\u7b54\u6848\u7684\u6700\u5927\u503c\u3002\n\n\u671f\u671b\u590d\u6742\u5ea6O(kn\\*n)\uff0ck\u5728\u65e0\u89e3\u65f6\u6700\u5927\uff0c\u5426\u5219\u4e00\u822c\u60c5\u51b5\u4e0b\u4f1a\u56e0\u4e3abfs\u66f4\u65e9\u9000\u51fa\u800c\u53d8\u5c0f\uff08\u6bcf\u67613\u7684\u8fb9\u88ab\u62c6\u4e86\u4e4b\u540e\u6700\u591a3\u6761\u8fb9\uff0c\u6bcf\u4e2a\u7a7a\u70b9\u6700\u591a\u62d3\u5c554\u6761\u8fb9\uff09\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <cstring>\n#include <deque>\nusing namespace std;\n#define MAXN 105\n#define MAXM 100010\n#define MAXP 100100\nchar buf[1000001], *p1 = buf, *p2 = buf;\ninline char get_char(){\n    return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++;\n}\ninline int read(){\n    int num = 0;\n    char c;\n    while(isspace(c = get_char()));\n    while(num = num * 10 + c - 48, isdigit(c = get_char()));\n    return num;\n}\ninline int min(int a, int b){\n    int c = (a - b) >> 31;\n    return (a & c) | (b & ~ c);\n}\nint n, m, tot = 1, dis[MAXM];\nint beginx[MAXM], endx[MAXM], nxt[MAXM], h;\nbool has[MAXM], vis[MAXM];\nshort matrix[MAXN][MAXN];\ninline int Get_Pos(int i, int j){\n    return ((i - 1) * n + j - 1) << 1;\n}\ninline void add_edge(int u, int v, bool c){\n    nxt[++tot] = beginx[u], beginx[u] = tot, endx[tot] = v, has[tot] = c;\n    nxt[++tot] = beginx[v], beginx[v] = tot, endx[tot] = u, has[tot] = c;\n}\ninline void edge(int u, int v, int c){\n    int tmp = ++h;\n    switch(c){\n        case 2:\n            nxt[++tot] = beginx[u], beginx[u] = tot, endx[tot] = tmp, has[tot] = true;\n            nxt[++tot] = beginx[tmp], beginx[tmp] = tot, endx[tot] = v, has[tot] = true;\n            break;\n        case 3:\n            nxt[++tot] = beginx[u], beginx[u] = tot, endx[tot] = tmp, has[tot] = true;\n            nxt[++tot] = beginx[tmp], beginx[tmp] = tot, endx[tot] = tmp = ++h, has[tot] = true;\n            nxt[++tot] = beginx[tmp], beginx[tmp] = tot, endx[tot] = v, has[tot] = true;\n            break;\n    }\n}\ninline void add_edges(int u, int v, int c){\n    nxt[++tot] = beginx[u], beginx[u] = tot, endx[tot] = v, has[tot] = c;\n    edge(v, u, c + 2);\n}\ndeque<int> mession;\ninline void bfs(int s){\n    bool flag = matrix[n][n];\n    int tmp = Get_Pos(n, n) + matrix[n][n];\n    int tmp1 = Get_Pos(n, n) + 1, tmp2 = Get_Pos(n, n) + 2;\n    mession.push_back(s);\n    dis[s] = 0, vis[s] = true;\n    int u, v;\n    while(!mession.empty()){\n        u = mession.front(), mession.pop_front();\n        for(int i = beginx[u]; i; i = nxt[i]){\n            v = endx[i];\n            if(vis[v]) continue;\n            vis[v] = true;\n            dis[v] = dis[u] + has[i];\n            if(flag){\n                if(dis[tmp] != -1) return ;\n            } else if(dis[tmp1] != -1 && dis[tmp2] != -1) return ;\n            if(has[i] || mession.empty()) mession.push_back(v);\n            else mession.push_front(v);\n        }\n    }\n}\nint main(){\n    n = read(), m = read();\n    for(int i = 1; i <= m; i++){\n        int x = read(), y = read();\n        matrix[x][y] = read() + 1;\n    }\n    h = (n * n) << 1;\n    for(int i = 1; i <= n; i++){\n        for(int j = 1; j <= n; j++){\n            int tmp = matrix[i][j], t = Get_Pos(i, j) + tmp;\n            if(!tmp){\n                int tx = Get_Pos(i, j);\n                int tmp1 = matrix[i + 1][j], t1 = Get_Pos(i + 1, j) + tmp1, tmp2 = matrix[i][j + 1], t2 = Get_Pos(i, j + 1) + tmp2;\n                int tmp3 = matrix[i - 1][j], t3 = Get_Pos(i - 1, j) + tmp3, tmp4 = matrix[i][j - 1], t4 = Get_Pos(i, j - 1) + tmp4;\n                if(tmp1) add_edges(tx + tmp1, t1, 0), add_edges(tx + 3 - tmp1, t1, 1);\n                if(tmp2) add_edges(tx + tmp2, t2, 0), add_edges(tx + 3 - tmp2, t2, 1);\n                if(tmp3) add_edges(tx + tmp3, t3, 0), add_edges(tx + 3 - tmp3, t3, 1);\n                if(tmp4) add_edges(tx + tmp4, t4, 0), add_edges(tx + 3 - tmp4, t4, 1);\n                continue;\n            }\n            int tmp1 = matrix[i + 1][j], t1 = Get_Pos(i + 1, j) + tmp1, tmp2 = matrix[i][j + 1], t2 = Get_Pos(i, j + 1) + tmp2;\n            if(tmp1) add_edge(t, t1, !(tmp == tmp1));\n            if(tmp2) add_edge(t, t2, !(tmp == tmp2));\n        }\n    }\n    memset(dis, -1, sizeof(dis));\n    bfs(matrix[1][1]);\n    int tmp = Get_Pos(n, n);\n    if(matrix[n][n]) printf(\"%d\", dis[tmp + matrix[n][n]]);\n    else printf(\"%d\", min(dis[tmp + 1], dis[tmp + 2]));\n    return 0;\n}\n\n```",
        "postTime": 1510837515,
        "uid": 43464,
        "name": "Creeper_LKF",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\n\n\n```cpp\n//\u770b\u5230\u8fd9\u79cd\u9898\uff0c\u5f88\u5bb9\u6613\u60f3\u5230 dfs\n//\u4f46\u666e\u901a\u7684 dfs \u662f\u65e0\u7591\u4f1a TLE \u7684\n//\u5c1d\u8bd5\u52a0\u8bb0\u5fc6\u5316 \n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int dx[]={0,-1,0,1};    //\u5750\u6807\u504f\u79fb\u91cf \nconst int dy[]={-1,0,1,0};\nint n,m,x,y,c;\nint map[105][105];        //\u5b58\u989c\u8272 \nint f[105][105];        //f[i][j] \u4ece(1,1)\u5230(i,j)\u7684\u6700\u5c11\u82b1\u8d39 \nvoid dfs(int x,int y,int c){    //\u6df1\u641c\u5927\u6cd5 \n    // x,y \u4e3a\u5f53\u524d\u5750\u6807\n    // c \u4e3a\u4e0a\u4e00\u4e2a\u65b9\u5757\u7684\u989c\u8272 \n    for(int i=0;i<4;i++){    //\u5750\u6807\u504f\u79fb\u91cf \n        int nx=x+dx[i],ny=y+dy[i];\n        if(nx>m||nx<1||ny>m||ny<1)continue;    //\u5224\u8d8a\u754c \n        if(~map[nx][ny]/*map[nx][ny]!=-1*/){\n            if((~map[x][y]?map[x][y]:c)/*\u5f53\u524d\u6ca1\u989c\u8272\u5c31\u7528\u4e0a\u4e00\u4e2a\u65b9\u5757\u7684\u989c\u8272*/==map[nx][ny]){\n                if(f[nx][ny]>f[x][y])f[nx][ny]=f[x][y]/*\u66f4\u65b0\u6700\u5c11\u6d88\u8d39*/,dfs(nx,ny,map[nx][ny]);\n                //\u989c\u8272\u76f8\u7b49\u4e0d\u7528\u82b1\u94b1 \n            }else //\u989c\u8272\u4e0d\u76f8\u7b49\u82b1\u4e00\u5757 \n                if(f[nx][ny]>f[x][y]+1)f[nx][ny]=f[x][y]+1/*\u540c\u7406*/,dfs(nx,ny,map[nx][ny]);\n        }else{    //\u6ca1\u989c\u8272\u8981\u4f7f\u7528\u6cd5\u672f \n            if(map[x][y]==-1)continue;//\u4e0d\u80fd\u8fde\u7eed\u4f7f\u7528\u6cd5\u672f \n            else{    //\u6d88\u8d39\u4e24\u5757 \n                if(f[nx][ny]>=f[x][y]+2)f[nx][ny]=f[x][y]+2,dfs(nx,ny,map[x][y]);\n            }\n        }\n    }\n}\nint main(){\n    memset(map,-1,sizeof(map));    //\u6ca1\u989c\u8272\u4e3a -1 \n    memset(f,0x7f,sizeof(f));    //\u5148\u8d4b\u503c\u4e3a \"\u65e0\u9650\u5927\" \n    scanf(\"%d%d\",&m,&n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d%d%d\",&x,&y,&c);\n        map[x][y]=c;\n    }\n    f[1][1]=0,dfs(1,1,0);        //\u8d77\u70b9\u5230\u8d77\u70b9\u7684\u82b1\u8d39\u4e3a 0 \n    printf(\"%d\",f[m][m]!=0x7f7f7f7f?f[m][m]:-1);\n    //\u76f4\u63a5\u8f93\u51fa f[m][m] \u8d77\u70b9\u5230\u7ec8\u70b9 \n    //\"\u65e0\u9650\u5927\" \u8868\u793a\u8d70\u4e0d\u5230\u7ec8\u70b9\uff0c\u5c31\u8f93\u51fa -1 \n}\n```",
        "postTime": 1510637327,
        "uid": 48147,
        "name": "2016gdgzoiLZH",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u6bcf\u4e2a\u683c\u5b50\u770b\u4f5c\u4e00\u4e2a\u70b9\uff0c\u76f8\u90bb\u7684\u540c\u8272\u683c\u5b50\u8fde\u4e00\u6761\u8fb9\uff0c\u6743\u503c\u4e3a0\uff0c\u76f8\u90bb\u7684\u5f02\u8272\u683c\u5b50\u8fde\u4e00\u6761\u8fb9\uff0c\u6743\u503c\u4e3a1\uff0c\n\n\u628a\u65e0\u8272\u683c\u5b50\u62c6\u6210\u989c\u8272\u4e0d\u540c\u7684\u4e24\u4e2a\u70b9\uff0c\u5206\u522b\u548c\u65e0\u8272\u683c\u5b50\u76f8\u90bb\u7684\u6709\u8272\u683c\u5b50\u76f8\u8fde\uff0c\u540c\u8272\u6743\u503c\u4e3a2\uff0c\u5f02\u8272\u6743\u503c\u4e3a3\n\n\u7136\u540e\u5c31\u662f\u6700\u77ed\u8def\u95ee\u9898\u5566\n\n\u6d1b\u8c37\u6570\u636eAC\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <queue>\n#include <algorithm>\n#include <utility>\n#include <cstring>\n\nusing namespace std;\n\nconst int MAXM = 110;\nconst int INF = 0x3f3f3f3f;\n\nint dx[4] = {1, -1, 0, 0};\nint dy[4] = {0, 0, 1, -1};\n\nint d[MAXM][MAXM][2], clr[MAXM][MAXM];\nbool vis[MAXM][MAXM][2];\nint m, n;\n\nbool check_in(int x, int y)\n{\n    return x >= 1 && y >= 1 && x <= m && y <= m;\n}\n\ntypedef struct Node {\n    int x, y, d, c;\n    bool operator<(const Node &b)  const{\n        return d > b.d;\n    }\n    Node(int x, int y, int d, int c) {\n        this->x = x;\n        this->y = y;\n        this->d = d;\n        this->c = c;\n    }\n}Node;\n\npriority_queue<Node> que;\n\nint main()\n{\n    cin >> m >> n;\n    memset(clr, -1, sizeof(clr));\n    for (int i = 0; i < n; i++) {\n        int x, y, c;\n        cin >> x >> y >> c;\n        clr[x][y] = c;\n    }\n    memset(d, 0x3f, sizeof(d));\n    d[1][1][clr[1][1]] = 0;\n    d[1][1][clr[1][1]^1] = INF;\n    que.push(Node(1,1,0,clr[1][1]));\n    int ans = -1;\n    while (!que.empty()) {\n        Node cur = que.top();\n        que.pop();\n        int cx = cur.x, cy = cur.y, cd = cur.d, cc = cur.c;\n        if (vis[cx][cy][cc])\n            continue;\n        vis[cx][cy][cc] = true;\n        d[cx][cy][cc] = cd;\n        //cout << \"#\" << cx << \" \" << cy << \" \" << cc << \" \" << cd << endl;\n        if (cx == m && cy == m) {\n            ans = cd;\n            break;\n        }\n        for (int i = 0; i < 4; i++) {\n            int tx = cx + dx[i];\n            int ty = cy + dy[i];\n            int tc = clr[tx][ty];\n            if (!check_in(tx, ty))\n                continue;\n            if (tc == -1) {\n                if (clr[cx][cy] != -1 && !vis[tx][ty][cc]) {\n                    que.push(Node(tx, ty, cd+2, cc));\n                }\n                    \n            } else {\n                if (!vis[tx][ty][tc])\n                    que.push(Node(tx, ty, cd+(tc^cc), tc));\n            }\n        }\n    }\n    cout << ans << endl;\n    \n    return 0;\n}\n/*\n3 3\n1 1 1 \n2 2 1\n3 3 1\n:4\n\n3 3\n1 1 1 \n2 2 0\n3 3 1\n:6\n\n3 5\n1 1 1\n1 3 0\n2 2 1\n3 1 1\n3 3 1\n*/\n```",
        "postTime": 1510574301,
        "uid": 47409,
        "name": "gray_meerkat",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u8bb0\u5fc6\u5316\u641c\u7d22 \u7531\u4e8e\u6570\u636e\u5c0f\u53ef\u4ee5\u4e0d\u7528\u8003\u8651\u592a\u591a\n\n\u7528dis[i][j] \u8868\u793a\u5230\u5730\u56fe\u4e0a(i,j)\u6240\u7528\u7684\u6700\u5c0f\u91d1\u5e01\n\n\u8003\u573a\u4e0a\u6ca1\u8003\u8651\u5468\u5168 \u53ea\u8003\u8651\u4e865\u4e2a\u65b9\u5411\n\n\u6240\u4ee5\u4e3a\u4e86AC \u641c\u7d22\u8bf7\u5f8012\u4e2a\u65b9\u5411\u641c\n\n\u800c\u4e14**\u8981\u8bb0\u5f55\u4e0a\u4e00\u6b65\u6709\u6ca1\u6709\u7528\u6cd5\u672f\uff08\u91cd\u8981\uff09**\n\n\u5728\u4f7f\u7528\u6cd5\u672f\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u6570\u7ec4\u8d8a\u754c \u6240\u4ee5\u4e00\u5b9a\u8981\u7279\u5224\n\n\n    \n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint map[1001][1001],dis[1001][1001],m,n;;\nbool axor(int a,int b){ //\u5f02\u6216 \u7528\u4e8e\u989c\u8272\u4e0d\u540c\u65f6\u7684\u79fb\u52a8\u82b1\u8d391\u91d1\u5e01 \n            //\u5982\u679c\u76f4\u63a5\u7528a^b\u7684\u8bdd 1^2 \u5c31\u4f1a\u51fa\u9519\n    if(a==b)    return 0;\n    return 1;\n}\nvoid search(int x,int y,int cans,bool fs,int ys){//x-\u5f53\u524dx\u5750\u6807 y-\u540c\u7406 cans-\u5230\u8fbe\u5f53\u524d\u5750\u6807\u65f6\u6240\u7528\u7684\u91d1\u5e01 fs-\u4e0a\u4e00\u6b65\u662f\u5426\u4f7f\u7528\u4e86\u6cd5\u672f ys-\u5f53\u524d\u683c\u5b50\u7684\u989c\u8272\n    if(x>m||y>m)    return ; //\u8d85\u51fa\u68cb\u76d8\n    if(x<1||y<1)    return ; //\u8d85\u51fa\u68cb\u76d8\n    if(cans>=dis[x][y]) return; //\u904d\u5386\u5230\u5f53\u524d\u4f4d\u7f6e\u65f6\u5982\u679c\u6d88\u8017\u91d1\u5e01\u5927\u4e8e\u7b49\u4e8e\u6700\u5c0f\u6d88\u8017 \u9000\u51fa\n    else dis[x][y]=cans;//\u5982\u679c\u5c0f\u4e8e\u5c31\u5237\u65b0\u6700\u5c0f\u503c\n    if(map[x+1][y]) //\u53ef\u4ee5\u5f80\u53f3\u4fa7\u904d\u5386\n    search(x+1,y,cans+axor(ys,map[x+1][y]),0,map[x+1][y]); //axor\u5373\u5f02\u6216\u51fd\u6570\n    if(map[x-1][y]) //\u53ef\u4ee5\u5f80\u5de6\n    search(x-1,y,cans+axor(ys,map[x-1][y]),0,map[x-1][y]);\n    if(map[x][y+1]) //\u5f80\u4e0b\n    search(x,y+1,cans+axor(ys,map[x][y+1]),0,map[x][y+1]);\n    if(map[x][y-1]) //\u5f80\u4e0a\n    search(x,y-1,cans+axor(ys,map[x][y-1]),0,map[x][y-1]);\n    if(map[x+2][y]&&!fs) //\u53f3\u4fa7\u4e24\u683c\u6709\u989c\u8272 \u5e76\u6ca1\u7528\u6cd5\u672f \u5c31\u65bd\u5c55\u6cd5\u672f\n    search(x+1,y,cans+2,1,map[x][y]);\n    if(x>1) //\u786e\u4fdd\u5f80\u5de6\u7528\u6cd5\u672f\u65f6\u4e0d\u4f1a\u8d85\u51fa\u68cb\u76d8\n    if(map[x-2][y]&&!fs) //\u5f80\u5de6\u65bd\u6cd5\n    search(x-1,y,cans+2,1,map[x][y]);\n    if(map[x][y+2]&&!fs) //\u5f80\u4e0b\u65bd\u6cd5\n    search(x,y+1,cans+2,1,map[x][y]);\n    if(map[x][y-2]&&!fs) //\u5f80\u4e0a\u65bd\u6cd5\n    if(y>1)//\u786e\u4fdd\u4e0d\u4f1a\u8d85\u51fa\u68cb\u76d8\n    search(x,y-1,cans+2,1,map[x][y]);\n    if(map[x+1][y+1]&&!fs)//\u53f3\u4e0b\u683c\u5b50\u6709\u989c\u8272 \u5f80\u53f3\u6216\u5f80\u4e0b\u65bd\u6cd5\u662f\u7b49\u4ef7\u7684 \n    search(x+1,y,cans+2,1,map[x][y]);\n    if(map[x+1][y-1]&&!fs)//\u540c\u7406\n    search(x+1,y,cans+2,1,map[x][y]);\n    if(map[x-1][y-1]&&!fs) //\u540c\u7406\n    search(x-1,y,cans+2,1,map[x][y]);\n    if(map[x-1][y+1]&&!fs) //\u540c\u7406\n    search(x-1,y,cans+2,1,map[x][y]);\n}\nint main(){\n    scanf(\"%d%d\",&m,&n);\n    for(int i=1;i<=m;i++){//\u521d\u59cb\u5316\n        for(int j=1;j<=m;j++){\n            dis[i][j]=456789;\n        }\n    }\n    for(int i=1,u,v,c;i<=n;i++){\n        scanf(\"%d%d%d\",&u,&v,&c);\n        map[u][v]=c+1; //\u4e3a\u4e86\u65b9\u4fbf\u989c\u8272\u65e0\u8272\u548c\u6709\u8272\u7684\u683c\u5b50\u533a\u5206 \u6240\u4ee5+1\n    }\n    search(1,1,0,0,map[1][1]);\n```\n/\\*\n```cpp\n    for(int i=1;i<=m;i++){\n       for(int j=1;j<=m;j++){\n            cout<<\"\\t\"<<dis[i][j]<<\" \";//\u52a8\u6001\u8c03\u8bd5\n       }\n        cout<<\"\\n\";\n    }\n```\n\\*/\n    if(dis[m][m]==456789)   cout<<-1; //\u65e0\u6cd5\u5230\u8fbe\n\n    else cout<<dis[m][m];\n\n    return 0;\n\n}",
        "postTime": 1510553464,
        "uid": 47863,
        "name": "Imakf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u5f88\u597d\u5947\u8fd9\u4e3a\u4ec0\u4e48\u662fPJ T3\u3002\u3002\u3002\n\n\n\u9996\u5148\uff0c\u201d\u9b54\u6cd5\u201c\u5176\u5b9e\u7b49\u4ef7\u4e8e\u201d\u82b1\u8d392\u70b9\u989d\u5916\u4ee3\u4ef7\u8fde\u63a5\u4e24\u4e2a\u66fc\u54c8\u987f\u8ddd\u79bb\u4e3a2\u7684\u6709\u8272\u683c\u5b50\u201c\u3002\n\n\n\u90a3\u4e48\u5c31\u6309\u5982\u4e0b\u65b9\u5f0f\u5efa\u56fe\u5457\uff1a\n\n\n\u6bcf\u4e2a\u6709\u8272\u683c\u5b50\u4e3a\u4e00\u4e2a\u70b9\n\n\n\u66fc\u54c8\u987f\u8ddd\u79bb\u4e3a1\uff08\u4e5f\u5c31\u662f\u76f8\u90bb\uff09\u7684\u4e24\u4e2a\u70b9i, j\u5efa\u4e00\u6761\u8fb9\uff1a\u8fb9\u6743\u4e3acolor[i]==color[j]?0:1\n\n\n\u66fc\u54c8\u987f\u8ddd\u79bb\u4e3a2\u7684\u4e24\u4e2a\u70b9i, j\u5efa\u4e00\u6761\u8fb9\uff1a\u8fb9\u6743\u4e3acolor[i]==color[j]?2:3\n\n\n\u7136\u540e\u8dd1dijkstra\u3002\u3002\u3002V=1000\uff0cE=1000^2\uff08\u7b49\u4e0b\u597d\u50cf\u662f1000\\*12\uff09\uff0c\u600e\u4e48\u90fd\u4e0d\u4f1aTLE\u554a\u3002\u3002\u3002\n\n\n\u7b49\u7b49\uff0c\u6211\u4eec\u662f\u4e0d\u662f\u5ffd\u89c6\u4e86\u201c\u53ea\u51c6\u5bf9\u6709\u8272\u683c\u5b50\u4f7f\u7528\u9b54\u6cd5\u201d\uff1f\n\n\n\u8fd9\u597d\u50cf\u6ca1\u4ec0\u4e48\u5173\u7cfb\uff08\u5047\u5982\u6211\u4eec\u8fd9\u4e00\u6b21\u5bf9B\u4f7f\u7528\u9b54\u6cd5\u4ee5\u8fde\u63a5A\u548cC\uff0c\u5219A\u5230C\u7684\u82b1\u8d39\u81f3\u5c11\u662f2\uff1b\u800c\u5047\u5982\u4e0d\u4f7f\u7528\u9b54\u6cd5\u76f4\u63a5\u8d70B\uff0c\u5219\u82b1\u8d39\u6700\u591a\u4e3a2\uff09\n\n\n\u8d34\u4e00\u6bb5\u6781\u4e11\u7684\u4e0d\u5e26include\u7684\u4ee3\u7801\uff1a\n\n\n```cpp\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define rep1(i,n) for(int i=1;i<=(n);i++)\n#define MP make_pair\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\nconst int INF=1e9+7;\nvector<pii> G[1005];\nint n,m,st,ed,x[1005],y[1005],col[1005];\nint dist[1005];\nbool vis[1005];\nint ABS(int num){\n    return num<0?-num:num;\n}\nint main(){\n//    freopen(\"chess.in\",\"r\",stdin);\n//    freopen(\"chess.out\",\"w\",stdout);\n    scanf(\"%d%d\",&m,&n);\n    rep(k,n){\n        scanf(\"%d%d%d\",&x[k],&y[k],&col[k]);\n        if(x[k]==1&&y[k]==1)st=k;\n        if(x[k]==m&&y[k]==m)ed=k;\n    }\n    if(st==-1||ed==-1){\n        printf(\"-1\\n\");\n        return 0;\n    }\n    rep(i,n)rep(j,i){\n        int dis=ABS(x[i]-x[j])+ABS(y[i]-y[j]),cd=-1;\n        if(dis<=2){\n            cd=(col[i]==col[j])?0:1;\n            if(dis==2)cd+=2;\n            G[i].push_back(MP(j,cd));\n            G[j].push_back(MP(i,cd));\n        }\n    }\n    rep(k,n)dist[k]=INF;\n    priority_queue<pii> Q;\n    dist[st]=0;\n    Q.push(MP(0,st));\n    while(!Q.empty()){\n        pii out=Q.top();Q.pop();\n        int v=out.second,cd=-out.first;\n        if(vis[v])continue;\n        vis[v]=true;\n        rep(k,G[v].size()){\n            int u=G[v][k].first,nd=cd+G[v][k].second;\n            if(nd<dist[u]){\n                dist[u]=nd;\n                Q.push(MP(-nd,u));\n            }\n        }\n    }\n    if(dist[ed]==INF)printf(\"-1\\n\");\n    else printf(\"%d\\n\",dist[ed]);\n    return 0;\n}\n```",
        "postTime": 1510541407,
        "uid": 30853,
        "name": "djq_cpp",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "## \u8fd8\u662f\u7528\u6df1\u641c\u6765\u505a\n```cpp\n#include<bits/stdc++.h>//\u6109\u5feb\u7684\u5f00\u59cb\nusing namespace std;\n//\u7533\u660e\u7ed3\u6784\u4f53\uff1a\u65b9\u4f4d\nstruct fw{\n\tint h;\n\tint z;\n};\nint m,n,minn=20001,qp[101][101],zy[101][101];\nbool bj[101][101],jj;\nfw hz[10001],zf[5]={{0,0},{0,1},{0,-1},{1,0},{-1,0}};\nvoid dfs(int bh,int jb,bool mf)\n{\n\tint i,xh,xz;\n    //\u526a\u679d\uff0c\u5982\u679c\u91d1\u5e01\u5df2\u8fd1\u5927\u4e8e\u6700\u5c0f\u91d1\u5e01\u4e86,\u76f4\u63a5\u56de\u6eaf\n\tif(jb>=zy[hz[bh-1].h][hz[bh-1].z])\n\t{\n\t\treturn;\n\t}\n    //\u53cd\u4e4b\u5219\u8d4b\u503c\u65b0\u7684\u6700\u5c0f\n\tzy[hz[bh-1].h][hz[bh-1].z]=jb;\n    //\u9012\u5f52\u51fa\u53e3\n\tif(hz[bh-1].h==m&&hz[bh-1].z==m)\n\t{\n\t\tjj=1;\n\t\treturn;\n\t}\n    //\u679a\u4e3e\u683c\u5b50\n\tfor(i=1;i<=4;i++)\n\t{\n    //\u7b97\u51fa\u65b0\u6a2a\u548c\u65b0\u7eb5\n\t\txh=hz[bh-1].h+zf[i].h;\n\t\txz=hz[bh-1].z+zf[i].z;\n        //\u5224\u65ad\u6b64\u5730\u662f\u5426\u80fd\u8d70\n\t\tif(xh>=1&&xh<=m&&xz>=1&&xh<=m&&bj[xh][xz]==0)\n\t\t{\n        \t//\u82e5\u6b64\u4e2a\u6709\u989c\u8272\n\t\t\tif(qp[xh][xz]!=0)\n\t\t\t{\n            //\u6807\u8bb0\u76d2\u5b50\u3001\u653e\u5361\n\t\t\t\thz[bh].h=xh;\n\t\t\t\thz[bh].z=xz;\n\t\t\t\tbj[xh][xz]=1;\n                //\u82e5\u548c\u4e0a\u4e2a\u683c\u5b50\u989c\u8272\u4e0d\u540c\uff0c\u7528\u91d1\u5e01\n\t\t\t\tif(qp[hz[bh-1].h][hz[bh-1].z]!=qp[xh][xz])\n\t\t\t\t{\n                //\u9012\u5f52\u8c03\u7528\n\t\t\t\t\tdfs(bh+1,jb+1,1);\t\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdfs(bh+1,jb,1);\n\t\t\t\t}\n                \u56de\u6eaf\n\t\t\t\tbj[xh][xz]=0;\n\t\t\t}\n            //\u65e0\u8272\u683c\u5b50\n\t\t\telse\n\t\t\t{\n            //\u80fd\u6709\u9b54\u6cd5\u5219\u7528\n\t\t\t\tif(mf==1)\n\t\t\t\t{\n                //\u653e\u5361\u3001\u6807\u8bb0\n\t\t\t\t\thz[bh].h=xh;\n\t\t\t\t\thz[bh].z=xz;\n\t\t\t\t\tbj[xh][xz]=1;\n\t\t\t\t\tqp[xh][xz]=qp[hz[bh-1].h][hz[bh-1].z];\n                    //\u8c03\u7528\u9012\u5f52\n\t\t\t\t\tdfs(bh+1,jb+2,0);\n                    //\u56de\u6eaf\u68cb\u76d8\u548c\u6807\u8bb0\n\t\t\t\t\tbj[xh][xz]=0;\n\t\t\t\t\tqp[xh][xz]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\nint main()\n{\n\tint i,j,a,b,c;\n    //\u8f93\u5165\n\tcin>>m>>n;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tcin>>a>>b>>c;\n\t\tqp[a][b]=c+1;\n\t}\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tfor(j=1;j<=m;j++)\n\t\t{\n\t\t\tzy[i][j]=0x7ffffff;\n\t\t}\n\t}\u8d4b\u521d\u503c\n    //\u6807\u8bb0\u3001\u76d2\u5b50\u3001\u6700\u4f18\n\thz[1].h=1;\n\thz[1].z=1;\n\tbj[1][1]=1; \n\tdfs(2,0,1);\n    //\u5982\u679c\u5230\u4e86\u5c31\u8f93\u6700\u4f18\u3001\u6ca1\u5230\u5c31\u8f93\u51fa-1\n\tif(!jj)\n\t{\n\t\tcout<<-1;\n\t\treturn 0;\n\t}\n\tcout<<zy[m][m];\n\treturn 0;//\u5b8c\u7f8e\u7684\u7ed3\u675f\n}\n```\n",
        "postTime": 1575511941,
        "uid": 253527,
        "name": "GuideZombies",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "[My BLOG](https://blog.csdn.net/zsyzClb/article/details/84890958)\n\n\u53ef\u60dc\u5f53\u65f6\u6ca1\u6709\u8fdb\u590d\u8d5b\n\n\u8fd9\u4e00\u9053\u9898\u6211\u7528\u4e86\u5e7f\u5ea6\u4f18\u5148BFS\u6765\u505a\uff0c\u6ce8\u610f\u9898\u76ee\u8bf4\u7684\u6539\u53d8\u683c\u5b50\u989c\u8272\u7684\u6cd5\u672f\u4e0d\u80fd\u8fde\u7eed\u4f7f\u7528\n\n\u6ce8\u91ca\u653e\u5165\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <queue>\n \nusing namespace std ;\n \nconst int N = 110 ;\nint n , map[N][N] ;\n \nstruct node {\n\tint x , y , s , now ; //\u5982\u679c\u5f53\u524d\u683c\u5b50\u6709\u989c\u8272\uff0c\u90a3\u4e48now=-1\uff0c\u5426\u5219now==\u6539\u6210\u7684\u989c\u8272  \uff0c \u5750\u6807\uff08x,y) \u8d39\u7528s \n\tinline bool operator < ( const node &k ) const {\n\t\treturn  k.s < s  ;\n\t}\n} ;\npriority_queue < node > q ;\nint dis[N][N] ; //dis\u8bb0\u5f55\u6700\u5c0f\u82b1\u8d39 \n \nconst int dx[4] = { 0 , 0 , 1 , -1 } ;\nconst int dy[4] = { 1 , -1 , 0 , 0 } ;\n \nint main() {\n\tint t , x , y , c , s , now ; cin >> n >> t ;\n\tmemset ( map , -1 , sizeof(map) ) ;\n\twhile ( t-- ) {\n\t\tcin >> x >> y >> c ;\n\t\tmap[x][y] = c ;\n\t}\n\tmemset ( dis , 63 , sizeof(dis) ) ; dis[1][1] = 0 ;\n\tq.push( (node){ 1 , 1 , 0 , -1 } ) ;\n\twhile ( !q.empty() ) {\n\t\tx = q.top().x , y = q.top().y , \n\t\ts = q.top().s , now = q.top().now ; //\u5148\u628a\u8fd9\u56db\u4e2a\u8bb0\u5f55\u4e0b\u6765 \n\t\tq.pop() ; if ( x == n && y == n ) { cout << s << endl ; return 0 ; } //\u5230\u7ec8\u70b9\u5c31\u76f4\u63a5\u8f93\u51fa \n\t\tif ( s > dis[x][y] ) continue ; //\u526a\u679d \n\t\tfor ( int i = 0 ; i < 4 ; i ++ ) {\n\t\t\tint xx = x + dx[i] ; //\u65b0\u7684\u5750\u6807 \n\t\t\tint yy = y + dy[i] ;\n\t\t\tif ( !( 1<=xx && xx<=n && 1<=yy && yy<=n ) ) continue ; //\u5982\u679c\u8d85\u51fa\u8fb9\u754c \n\t\t\tif ( map[xx][yy] == -1 ) { //\u5982\u679c\u8fd9\u4e2a\u70b9\u662f\u7a7a\u683c \n\t\t\t\tif( now != -1 ) continue ; //\u5982\u679c\u6211\u662f\u4ece\u7a7a\u683c\u6765\u7684\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u5230\u8fd9\u4e2a\u683c\u5b50 \n\t\t\t\tfor ( int j = 0 ; j <= 1 ; j ++ ) { //\u662f\u628a\u8fd9\u4e2a\u683c\u5b50\u53d8\u62101\u597d\u8fd8\u662f0\u597d \n\t\t\t\t\tint ss = s + 2 ; //\u82b1\u8d39+2 \n\t\t\t\t\tss += ( j == map[x][y] ? 0 : 1 ) ; //\u5224\u65ad\u662f\u5426\u8981\u82b1\u8d391 \n\t\t\t\t\tif ( dis[xx][yy] > ss ) { //\u5982\u679c\u8fd9\u4e2a\u662f\u66f4\u4f18\u89e3\uff0c\u5c31\u5f80\u4e0b\u641c \n\t\t\t\t\t\tdis[xx][yy] = ss ;\n\t\t\t\t\t\tq.push( (node){ xx , yy , ss , j } ) ;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tint ss ; //\u5982\u679c\u4e0d\u662f\u7a7a\u683c \n\t\t\t\tif ( now == -1 ) ss = s + ( map[xx][yy] == map[x][y] ? 0 : 1 ) ; //\u6211\u4ece\u975e\u7a7a\u683c\u7684\u683c\u5b50\u6765 \n\t\t\t\telse ss = s + ( map[xx][yy] == now ? 0 : 1 ) ; //\u6211\u4ece\u7a7a\u683c\u7684\u683c\u5b50\u6765 \n\t\t\t\tif ( dis[xx][yy] > ss ) { //\u66f4\u65b0 \n\t\t\t\t\tdis[xx][yy] = ss ;\n\t\t\t\t\tq.push( (node){ xx , yy , ss , -1 } ) ;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout << \"-1\" << endl ; //\u8f93\u51fa \n\treturn 0 ;\n}\n\n```",
        "postTime": 1544240375,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u770b\u6210m^2\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u5411\u5b83\u76f8\u90bb\u7684\u70b9\u8fde\u4e00\u6761\u8fb9\uff08\u82e5\u4e24\u4e2a\u70b9\u90fd\u662f\u65e0\u8272\u5219\u4e0d\u80fd\u8fde\u8fb9\u3002\u7279\u522b\u5730\uff0c\u65e0\u8272\u7684\u70b9\u53ef\u4ee5\u62c6\u6210\u4e24\u4e2a\u70b9\u5206\u522b\u8fde\u8fb9\uff09\u6700\u540e\u95ee\u7b2c\u4e00\u4e2a\u70b9\u5230\u6700\u540e\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u3002\n\n\u5efa\u56fe+DJ\uff08\u5806\u4f18\u5316\uff09\n\n\u9644\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define N 101\n#define M 100001\n#define INF 99999999\nusing namespace std;\nconst int dir[4][2]={{-1,0},{0,1},{1,0},{0,-1}};\nstruct node{\n\tint u,v,c,last;\n};\nstruct heap{\n\tstruct temptype{\n\t\tint v,p;\n\t};\n\tint len,which[M];\n\ttemptype r[M];\n\tinline void Upwork(int p){\n\t\tif (p==1) return;\n\t\tif (r[p/2].v>r[p].v){\n\t\t\tswap(r[p/2],r[p]);\n\t\t\tswap(which[r[p/2].p],which[r[p].p]);\n\t\t\tUpwork(p/2);\n\t\t}\n\t\treturn;\n\t}\n\tinline void Downwork(int p){\n\t\tif (p*2>len) return;\n\t\tint k1=r[p*2].v,k2,w=p*2;\n\t\tif (p*2+1<=len) k2=r[p*2+1].v;\n\t\tif (k1>k2) w++;\n\t\tif (r[w].v<r[p].v){\n\t\t\tswap(r[w],r[p]);\n\t\t\tswap(which[r[w].p],which[r[p].p]);\n\t\t\tDownwork(w);\n\t\t}\n\t\treturn;\n\t}\n\tinline void Insert(int x,int y){\n\t\tr[++len].v=x;\n\t\tr[len].p=y;\n\t\twhich[y]=len;\n\t\tUpwork(len);\n\t\treturn;\n\t}\n\tinline void Putout(){\n\t\tr[1]=r[len--];\n\t\twhich[r[1].p]=1;\n\t\tDownwork(1);\n\t\treturn;\n\t}\n};\nint n,m,slen,id;\nint head[M];\nint g[N][N],q[N][N][3];\nint dis[M];\nheap h;\nnode s[M];\ntemplate <typename T> inline void read(T &x){\n\tx=0;char c=getchar();T sig=1;\n\tfor (;!isdigit(c);c=getchar()) if (c=='-') sig=-1;\n\tfor (; isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n\tx*=sig;\n}\ninline void put(int x,int y,int z){\n\ts[++slen].u=x;\n\ts[slen].v=y;\n\ts[slen].c=z;\n\ts[slen].last=head[x];\n\thead[x]=slen;\n\treturn;\n}\ninline void work(int x,int y,int idx,int co){\n\tint w;\n\tfor (int k=0;k<4;k++){\n\t\tint tx=x+dir[k][0];\n\t\tint ty=y+dir[k][1];\n\t\tif (tx<1||tx>n||ty<1||ty>n) continue;\n\t\tif (!g[x][y]&&!g[tx][ty]) continue;\n\t\tfor (int p=1;p<=2;p++){\n\t\t\tw=0;\n\t\t\tif (!g[tx][ty]) w=2;\n\t\t\tif (!q[tx][ty][p]) continue;\n\t\t\tif (co!=p) w++;\n\t\t\tput(idx,q[tx][ty][p],w);\n\t\t}\n\t}\n\treturn;\n}\nint main(){\n\tread(n);read(m);\n\tfor (int i=1;i<=m;i++){\n\t\tint x,y,co;\n\t\tread(x);read(y);read(co);\n\t\tg[x][y]=co+1;\n\t}\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=n;j++)\n\t\t\tif (g[i][j]) q[i][j][g[i][j]]=++id;\n\t\t\telse{\n\t\t\t\tq[i][j][1]=++id;\n\t\t\t\tq[i][j][2]=++id;\n\t\t\t}\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=n;j++)\n\t\t\tfor (int p=1;p<=2;p++)\n\t\t\t\tif (q[i][j][p]) work(i,j,q[i][j][p],p);\n\tfor (int i=1;i<=id;i++) dis[i]=INF;\n\tdis[1]=0;\n\tfor (int i=1;i<=id;i++) h.Insert(dis[i],i);\n\tfor (int i=1;i<id;i++){\n\t\tint k=h.r[1].p;\n\t\th.Putout();\n\t\tfor (int j=head[k];j;j=s[j].last){\n\t\t\tif (dis[k]+s[j].c<dis[s[j].v]){\n\t\t\t\tdis[s[j].v]=dis[k]+s[j].c;\n\t\t\t\th.r[h.which[s[j].v]].v=dis[s[j].v];\n\t\t\t\th.Upwork(h.which[s[j].v]);\n\t\t\t}\n\t\t}\n\t}\n\tint ans=INF;\n\tfor (int p=1;p<=2;p++) if (q[n][n][p]) ans=min(ans,dis[q[n][n][p]]);\n\tif (ans==INF) printf(\"%d\\n\",-1);\n\telse printf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1540517774,
        "uid": 72598,
        "name": "logwzc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "## \u8fd9\u4e0d\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684DFS+\u8bb0\u5fc6\u5316\u526a\u679d\u5417\u3002\u3002\u3002\n\n\u770b\u5230\u8d70\u68cb\u76d8\u8fd9\u79cd\u4e1c\u897f\u7b2c\u4e00\u65f6\u95f4\u5c31\u60f3\u5230DFS\u548cBFS\u8fd9\u79cd\u4e1c\u897f\uff0c\u4f46\u662f\u672c\u4ebaBFS\u5947\u5dee\u65e0\u6bd4\u3002\u3002\u3002so\u8fd8\u662fDFS\u597d\u591a\u4e86\n\n\u5f53\u7136\u76f4\u63a5\u66b4\u529bDFS...\u90a3\u80af\u5b9a\u4f1a\u6beb\u65e0\u4f8b\u5916\u5730\u6302\u6389\u7684\uff08TE\u5927\u6cd5\u597d\uff09so\u8bb0\u5fc6\u5316\u526a\u679d\u5c31\u51fa\u6765\u4e86\u554a\n\n\u7b97\u6cd5\u4e0d\u5c31\u51fa\u6765\u4e86\u5417\u3002\u3002\u3002\n\n\u4ee3\u7801\u5949\u4e0a\uff1a\n```cpp\n#include <iostream>\n#include <algorithm>\nconst int Inf = 1e9;\nconst int dx[4] = { 1,0,-1,0 };\nconst int dy[4] = { 0,1,0,-1 };\nconst int N = 110;\nint f[N][N];\nint m, n;\nint dist[N][N];\nvoid dfs(int x, int y, int coin, bool canUseMagic, int nowColor, bool prevMagic); //\u610f\u4e49\u4e0d\u7528\u6211\u8bf4\u4e86\u5427\u3002\u3002\u3002\nint main()\n{\n\tstd::fill(f[0], f[0] + N * N, -1);\n\tstd::fill(dist[0], dist[0] + N * N, Inf);\n\tint x, y, c;\n\tstd::cin >> m >> n;\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tstd::cin >> x >> y >> c;\n\t\tf[x - 1][y - 1] = c;\n\t}\n\tdfs(0, 0, 0, true, f[0][0], true);\n\tif (dist[m - 1][m - 1] == Inf)\n\t\tdist[m - 1][m - 1] = -1;\n\tstd::cout << dist[m - 1][m - 1] << std::endl;\n}\nvoid dfs(int x, int y, int coin, bool canUseMagic, int nowColor, bool prevMagic)\n{\n\tif (coin >= dist[x][y])\n\t\treturn;\n\tdist[x][y] = coin;\n\tif (x == m - 1 && y == m - 1)\n\t\treturn;\n\tif (!prevMagic)\n\t\tcanUseMagic = true;\n\tfor (int i = 0; i < 4; ++i)\n\t{\n\t\tint nx = x + dx[i];\n\t\tint ny = y + dy[i];\n\t\tif (nx >= 0 && nx < m && ny >= 0 && ny < m)\n\t\t{\n\t\t\tif (nowColor == f[nx][ny])\n\t\t\t\tdfs(nx, ny, coin, canUseMagic, nowColor, canUseMagic);\n\t\t\telse if (f[nx][ny] == -1 && canUseMagic)\n\t\t\t\tdfs(nx, ny, coin + 2, false, nowColor, true);\n\t\t\telse if (f[nx][ny] != -1)\n\t\t\t\tdfs(nx, ny, coin + 1, canUseMagic, f[nx][ny], canUseMagic);\n\t\t}\n\t}\n}\n```",
        "postTime": 1540392021,
        "uid": 124297,
        "name": "tomapo123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u53bb\u7406\u89e3\u9898\u76ee\u7684\u610f\u601d\u3002\u5927\u81f4\u7b80\u5316\u51fa\u9898\u76ee\u7684**\u76ee\u7684**\u548c**\u7ea6\u675f\u6761\u4ef6**\u3002\n\n- \u76ee\u7684\uff1a\u5047\u8bbe\u68cb\u76d8\u662f$M*M$\uff0c\u6c42\u4ece\u6700\u5de6\u4e0a\u89d2$(1, 1)$\u8d70\u5230\u68cb\u76d8\u7684\u6700\u53f3\u4e0b\u89d2$(M, M)$\u7684\u6700\u5c0f\u5f00\u9500\uff1f\n- \u4efb\u4f55\u65f6\u523b\u8d70\u7684\u683c\u5b50\u5fc5\u987b\u662f\u6709\u989c\u8272\u7684\uff0c\u9664\u975e\u7528\u9b54\u6cd5\u6539\u53d8\u8fd9\u4e2a\u683c\u5b50\u5373\u4e0b\u9762\u8fd9\u4e2a\u6761\u4ef6\n- \u53ef\u4ee5\u82b1\u8d39\u4e24\u4e2a\u91d1\u5e01\u8d70\u5230\u6ca1\u6709\u989c\u8272\u7684\u683c\u5b50\u4e0a\uff0c\u4f46\u662f\u4e0b\u6b21\u5fc5\u987b\u8d70\u5230\u6709\u989c\u8272\u7684\u683c\u5b50\u4e0a\u3002**\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u5f53\u524d\u683c\u5b50\u6ca1\u6709\u989c\u8272\uff0c\u90a3\u4e48\u4e0a\u4e00\u6b65\u8d70\u7684\u683c\u5b50\u4e00\u5b9a\u8981\u6709\u989c\u8272\u7684\u3002**  \n- \u989c\u8272\u76f8\u540c\u4e0d\u9700\u8981\u82b1\u8d39\u91d1\u5e01\uff0c\u4e0d\u76f8\u540c\u82b1\u8d39\u4e00\u4e2a\u91d1\u5e01\n\n\n\n1.\u95ee\u9898\u7b80\u5316\u6210\u6700\u7b80\u5355\u7684\u8ff7\u5bab\u95ee\u9898\u3002\u4ece(1,1) \u8d70\u5230(M,M) \u6700\u5c11\u8981\u8d70\u591a\u5c11\u6b65\u5462\uff1f\n\n\u975e\u5e38\u7b80\u5355\uff0c\u671d\u7740\u56db\u4e2a\u65b9\u5411\u53bb\u641c\u7d22\uff0c\u9047\u5230\u7ec8\u70b9\u7684\u65f6\u5019\u66f4\u65b0\u4e0b\u6700\u5c0f\u503c`ans`\u3002**\u6ce8\u610f\u4e0d\u8981\u8d70\u91cd\u590d\u7684\u8def\uff0c\u4e0d\u8981\u8d8a\u754c\u3002**\n\n```c++\n#include<bits/stdc++.h>\n#define UP(i,x,y) for(int i=x;i<=y;i++)\nusing namespace std;\n\nint checkerboard[101][101]={0};\nint book[101][101]={0}; \nint M,N;\nint ans = 0xffff;\n\nint dfs(int x, int y, int step){\n\t/* \u8fd9\u4e2a\u683c\u5b50\u6211\u53ef\u4ee5\u7ad9\u4e0a\u53bb\u5417\uff1f\uff1f\uff1f */ \n\t// \u51fa\u754c\u9650\u4e86\u5417\uff1f \u8d70\u8fc7\u5417\uff1f\n\tif(x>M || x<0 || y>M || y<0 || book[x][y]==1){\n\t\treturn 0;\n\t}\n\t\n\t// \u7ec8\u70b9\u5230\u4e86\u5417\uff1f\n\tif(x==M && y==M){\n\t\tans = min(ans, step+1);\n\t\treturn 0;\n\t}\n\t\n\t/* \u8fd9\u4e2a\u683c\u5b50\u6211\u53ef\u4ee5\u7ad9\u4e0a\u6765\uff01 \u5e76\u4e14\u6211\u4e0a\u6765\u5566 */ \n\tbook[x][y] = 1;\n\tdfs(x-1, y, step+1); \n\tdfs(x+1, y, step+1);\n\tdfs(x, y-1, step+1);\n\tdfs(x, y+1, step+1);\n\tbook[x][y] = 0;\n\treturn 0;\n}\n\nint main()\n{\n\tcin>>M;\n\tdfs(1, 1, 0);\n\tcout<<ans;\n\treturn 0;\n}\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\uff0c\u5728\u4e00\u4e2a\u8ff7\u5bab\u4e2d\u6bcf\u4e00\u4e2a\u683c\u5b50\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u8d70or\u4e0d\u8d70\u3002\u6240\u4ee5\u5982\u679c\u670910\u4e2a\u683c\u5b50\uff0c\u5c31\u6709$2^{10}$\u79cd\u60c5\u51b5\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(2^n)$\n\n\n\n2.\u5728\u4e0a\u9762\u95ee\u9898\u7684\u57fa\u7840\u4e0a\u52a0\u5165\u51e0\u4e2a\u6761\u4ef6\n\n- \u6bcf\u4e2a\u683c\u5b50\u4e0a\u90fd\u6709\u4e24\u79cd\u989c\u8272\n- \u989c\u8272\u76f8\u540c\u4e0d\u9700\u8981\u82b1\u8d39\u91d1\u5e01\uff0c\u4e0d\u76f8\u540c\u82b1\u8d391\u91d1\u5e01\n- \u4ece\u6700\u5de6\u4e0a\u89d2\u8d70\u5230\u68cb\u76d8\u7684\u6700\u53f3\u4e0b\u89d2\uff0c\u6c42\u82b1\u8d39\u7684\u6700\u5c11\u91d1\u5e01\u662f\u591a\u5c11\uff1f\n\n\u8f93\u5165\uff1a\n\n```\n5 9\n1 1 0\n1 2 0\n2 2 1\n2 3 1\n3 3 1\n3 4 0\n4 4 1\n4 5 1\n5 5 0\n```\n\n\u8f93\u51fa\uff1a\n\n```\n4\n```\n\n\u975e\u5e38\u7b80\u5355\u3002\u9996\u5148\u6211\u4eec\u5bf9\u8f93\u5165\u7684\u989c\u8272\u7279\u6b8a\u5316\u5904\u7406\uff0c0\u6539\u4e3a-1\uff0c1\u4f9d\u65e7\u662f1\uff0c\u5982\u679c\u6ca1\u6709\u989c\u8272\u5c31\u662f0\u3002\n\n\u7136\u540e\uff0c\u5728dfs\u51fd\u6570\u4e2d\u6211\u4eec\u52a0\u5165\u4e00\u4e2ac\u53d8\u91cf\uff0c\u5b83\u8868\u793a\u4e0a\u4e00\u6b21\u8d70\u7684\u683c\u5b50\u7684\u989c\u8272\u3002\u6211\u4eec\u6bd4\u8f83c\uff0c\u5982\u679c\u548c\u5f53\u524d\u683c\u5b50\u7684\u989c\u8272\u4e0d\u4e00\u6837\uff0c\u90a3\u4e48\u80af\u5b9a\u8981\u82b1\u8d39\u4e00\u4e2a\u91d1\u5e01\u4e86`ans+1`\u3002\n\n\u6700\u540e\u6211\u4eec\u8d70\u5230\u7ec8\u70b9\u65f6\u5019\uff0c\u66f4\u65b0\u4e0b\u6700\u5c0f\u7684\u5f00\u9500`ans`\u3002\n\n\u6700\u540e\u7684\u6700\u540e\u6211\u4eec\u5c31\u80fd\u627e\u5230\u6700\u5c0f\u503c\u4e86\u3002\n\n```c++\n#include<bits/stdc++.h>\n#define UP(i,x,y) for(int i=x;i<=y;i++)\nusing namespace std;\n\nint checkerboard[101][101]={0};\nint book[101][101]={0}; \nint M,N;\nint ans = 0xffff;\n\nint dfs(int x, int y, int c, int cost, int step){\n\t/* \u8fd9\u4e2a\u683c\u5b50\u6211\u53ef\u4ee5\u7ad9\u4e0a\u53bb\u5417\uff1f\uff1f\uff1f */ \n\t// \u51fa\u754c\u9650\u4e86\u5417\uff1f \u8d70\u8fc7\u5417\uff1f\n\tif(x>M || x<0 || y>M || y<0 || book[x][y]==1){\n\t\treturn 0;\n\t}\n\t// \u8fd9\u4e2a\u683c\u5b50\u6709\u989c\u8272\u5417\uff1f\n\tif(checkerboard[x][y] == 0){\n\t\treturn 0;\n\t}\n\t\n\t/* \u8fd9\u4e2a\u683c\u5b50\u6211\u53ef\u4ee5\u7ad9\u4e0a\u6765\uff01 \u5e76\u4e14\u6211\u4e0a\u6765\u5566 */ \n\tif(checkerboard[x][y] != c){\n\t\tcost += 1;\n\t}\n\t// \u7ec8\u70b9\u5230\u4e86\u5417\uff1f\n\tif(x==M && y==M){\n\t\tans = min(ans, cost);\n\t\treturn 0;\n\t}\n\tbook[x][y] = 1;\n\tdfs(x-1, y, checkerboard[x][y], cost, step+1); \n\tdfs(x+1, y, checkerboard[x][y], cost, step+1);\n\tdfs(x, y-1, checkerboard[x][y], cost, step+1);\n\tdfs(x, y+1, checkerboard[x][y], cost, step+1);\n\tbook[x][y] = 0;\n\treturn 0;\n}\nint main()\n{\n\tint x,y,z;\n\tcin>>M>>N;\n\tUP(i, 1, N){\n\t\tcin>>x>>y>>z;\n\t\tif(z==1){\n\t\t\tcheckerboard[x][y]=1;\n\t\t}\n\t\telse if(z==0){\n\t\t\tcheckerboard[x][y]=-1;\n\t\t}\n\t}\n\tdfs(1, 1, checkerboard[1][1], 0, 0);\n\tcout<<ans;\n\treturn 0;\n}\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u4e0a\u6b21\u4e00\u6837\u7684$O(2^n)$\n\n\n\n3.\u95ee\u9898\u518d\u5347\u7ea7\u3002\u5047\u5982\u683c\u5b50\u6ca1\u6709\u989c\u8272\u6211\u4eec\u4e5f\u80fd\u8d70\uff0c\u4f46\u662f\u8981\u82b12\u4e2a\u91d1\u5e01\u8d70\u4e0a\u53bb\uff0c\u5e76\u4e14\u4e0b\u4e00\u6b21\u7684\u683c\u5b50\u4e00\u5b9a\u8981\u6709\u989c\u8272\u3002\u90a3\u4e48\u4ece\u6700\u5de6\u4e0a\u89d2\u8d70\u5230\u68cb\u76d8\u7684\u6700\u53f3\u4e0b\u89d2\uff0c\u82b1\u8d39\u7684\u6700\u5c11\u91d1\u5e01\u662f\u591a\u5c11\uff1f\n\n\u975e\u5e38\u7b80\u5355\u3002\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u523b\u610f\u7684\u5728\u4ee3\u7801\u4e2d\u8003\u8651\u82b1\u8d39\u4e24\u4e2a\u91d1\u5e01\uff0c**\u7136\u540e\u6539\u53d8\u683c\u5b50\u7684\u989c\u8272**\u3002\u6709\u4e24\u4e2a\u5c0f\u6280\u5de7\uff1a\n\n- \u6211\u4eec\u53ea\u8981\u5224\u65ad\uff0c\u5982\u679c\u4e0a\u4e00\u4e2a\u683c\u5b50\u662f\u65e0\u8272\u7684\uff0c\u90a3\u4e48\u6211\u5f53\u524d\u4e00\u5b9a\u4e0d\u80fd\u662f\u65e0\u8272\u7684\u55bd\uff01\n\n- \u5982\u679c\u4e0a\u4e00\u4e2a\u683c\u5b50\u662f\u65e0\u8272\u7684\uff0c\u4e0a\u4e0a\u4e00\u4e2a\u683c\u5b50\u7684\u989c\u8272\u548c\u5f53\u524d\u7684\u683c\u5b50\u7684\u989c\u8272\u4e0d\u4e00\u6837\uff0c\u6211\u4eec\u8fd8\u662f\u8981\u82b1\u8d39\u4e00\u4e2a\u91d1\u5e01\u3002\u56e0\u4e3a\u3002\u3002\u3002\u81ea\u5df1\u753b\u56fe\u7406\u89e3\u5427\u3002\n\n\u6700\u540e\u4ee3\u7801\u9644\u4e0a50\u5206\u7684\u4ee3\u7801\u3002\u56e0\u4e3a\u80af\u5b9a\u4f1a\u8d85\u65f6\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u7ea6\u662f$O(2^n)$\n\n```c++\n#include<bits/stdc++.h>\n#define UP(i,x,y) for(int i=x;i<=y;i++)\nusing namespace std;\n\nint checkerboard[101][101]={0};\nint book[101][101]={0};\nint M,N;\nint ans = 0xffff;\nint ss = 0; // \u4e0a\u4e0a\u4e00\u6b21\u7684\u989c\u8272 \n\n// c\u8868\u793a\u4e0a\u4e00\u4e2a\u683c\u5b50\u7684\u989c\u8272 \nint dfs(int x, int y, int c, int cost, int step){\n    /* \u8fd9\u4e2a\u683c\u5b50\u6211\u53ef\u4ee5\u7ad9\u4e0a\u53bb\u5417\uff1f\uff1f\uff1f */ \n    // \u51fa\u754c\u9650\u4e86\u5417\uff1f \u8d70\u8fc7\u5417\uff1f\n    if(x>M || x<=0 || y>M || y<=0 || book[x][y]==1){\n        return 0;\n    }\n    if(c==0 && checkerboard[x][y]==0){\n        return 0;\n    }\n    \n    /* \u8fd9\u4e2a\u683c\u5b50\u6211\u53ef\u4ee5\u7ad9\u4e0a\u6765\uff01 \u5e76\u4e14\u6211\u4e0a\u6765\u5566 */ \n    if(checkerboard[x][y] == 0){\n        cost += 2;\n        ss = c;\n    }\n    else if(checkerboard[x][y] != c && c!=0){\n        cost += 1;\n    }\n    if(c==0){\n        if(ss!=checkerboard[x][y]){\n            cost+=1;\n        }\n    }  \n    // \u7ec8\u70b9\u5230\u4e86\u5417\uff1f\n    if(x==M && y==M){\n        ans = min(ans, cost);\n        \n        return 0;\n    }\n    book[x][y] = 1;\n    dfs(x-1, y, checkerboard[x][y], cost, step+1); \n    dfs(x+1, y, checkerboard[x][y], cost, step+1);\n    dfs(x, y-1, checkerboard[x][y], cost, step+1);\n    dfs(x, y+1, checkerboard[x][y], cost, step+1);\n    book[x][y] = 0;\n    return 0;\n}\n\nint main()\n{\n    int x,y,z;\n    cin>>M>>N;\n    UP(i, 1, N){\n        cin>>x>>y>>z;\n        if(z==1){\n            checkerboard[x][y]=1;\n        }\n        else if(z==0){\n            checkerboard[x][y]=-1;\n        }\n    }\n    dfs(1, 1, checkerboard[1][1], 0, 0);\n    if(M==1){\n        cout<<0;\n        return 0;\n    }\n    if(ans == 0xffff){\n        cout<<-1;\n        return 0;\n    }\n    cout<<ans;\n    return 0;\n}\n```\n\n\n\n4.\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u7528\u8bb0\u5fc6\u5316\u7684\u65b9\u6cd5\uff0c\u8bb0\u4f4f\u5230\u6bcf\u4e00\u4e2a\u70b9\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u4e0b\u6b21\u53d1\u73b0\u6bd4\u8fd9\u4e2a\u5927\u7684",
        "postTime": 1539857898,
        "uid": 6882,
        "name": "sundy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u7b97\u6cd5\u57fa\u672c\u601d\u8def\u662f\u6309\u7167**\u82b1\u8d39\u4ece\u5c0f\u5230\u5927**\u7684\u987a\u5e8f\u641c\u7d22\u6240\u6709\u80fd\u5230\u8fbe\u7684\u683c\u5b50\uff0c\u76f4\u5230\u641c\u7d22\u5230\u7ec8\u70b9\uff0c\u6b64\u65f6\u7684\u82b1\u8d39\u4fbf\u662f\u6700\u5c0f\u82b1\u8d39\u3002\u4e00\u5f00\u59cb\u4ece(1,1)\u5f00\u59cb\uff0c\u8fdb\u884c\u7b2c\u4e00\u8d9f\u641c\u7d22\uff0c\u641c\u7d22\u6240\u6709\u82b1\u8d390\u4e2a\u91d1\u5e01\u80fd\u5230\u8fbe\u7684\u683c\u5b50\uff1b\u63a5\u4e0b\u6765\u8fdb\u884c\u7b2c\u4e8c\u8d9f\u641c\u7d22\uff0c\u641c\u7d22\u6240\u6709\u82b1\u8d391\u4e2a\u91d1\u5e01\u80fd\u5230\u8fbe\u7684\u683c\u5b50\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u641c\u7d22\u5230\u7ec8\u70b9(m,m)\uff0c\u4fbf\u80fd\u5f97\u51fa\u6700\u5c0f\u7684\u82b1\u8d39\u3002\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\u82e5\u9047\u5230\u4e86\u5df2\u7ecf\u641c\u7d22\u8fc7\u7684\u683c\u5b50\uff0c\u53ef\u77e5\u6b64\u65f6\u7684\u82b1\u8d39\u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8e\u7b2c\u4e00\u6b21\u641c\u7d22\u5230\u6b64\u683c\u5b50\u7684\u82b1\u8d39\uff0c\u6545\u53ef\u76f4\u63a5\u8fd4\u56de\uff0c\u56e0\u6b64\u6bcf\u4e2a\u683c\u5b50\u53ea\u4f1a\u8d70\u4e00\u904d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(m^2)\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<stdio.h>\n#include<stdlib.h>\n#include<stdbool.h>\nstruct queue\n{\n\tint x,y,tag;\n\tstruct queue *next;\n}*head,*tail,*p;\nint map[101][101],key[102][102],m,color,cost;\nvoid find(int x,int y)\n{\n\tif(key[x][y])\n\t\treturn;\n\tif(x==m&&y==m)\n\t{\n\t\tif(map[x][y]==color)\n\t\t{\n\t\t    printf(\"%d\",cost);\n\t\t}\n\t\telse if(map[x][y]>-1)\n\t\t{\n    \t\tprintf(\"%d\",cost+1);\n\t\t}\n\t\telse\n\t\t{\n\t\t    printf(\"%d\",cost+2);\n\t\t}\n\t\twhile(head)\n\t\t{\n\t\t\tp=head;\n\t\t\thead=head->next;\n\t\t\tfree(p);\n\t\t}\n\t\texit(0);\n\t}\n\tkey[x][y]=true;\n\tif(map[x][y]==color)\n\t{\n\t\tfind(x,y+1);\n\t\tfind(x+1,y);\n\t\tfind(x,y-1);\n\t\tfind(x-1,y);\n\t}\n\telse\n\t{\n\t\tp=(struct queue*)malloc(sizeof(struct queue));\n\t\tp->x=x;\n\t\tp->y=y;\n\t\tp->tag=map[x][y]==-1?2:0;\n\t\tp->next=NULL;\n\t\ttail->next=p;\n\t\ttail=p;\n\t}\n}\nint main()\n{\n\tint n,i,j,x,y;\n\tbool b;\n\tstruct queue *end;\n\tscanf(\"%d%d\",&m,&n);\n\tif(m==1)\n\t{\n\t    printf(\"0\");\n\t    return 0;\n\t}\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tfor(j=1;j<=m;j++)\n\t\t{\n\t\t\tmap[i][j]=-1;\n\t\t\tkey[i][j]=false;\n\t\t}\n\t\tkey[i][0]=key[i][m+1]=key[0][i]=key[m+1][i]=true;\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tscanf(\"%d\",&map[x][y]);\n\t}\n\thead=tail=(struct queue*)malloc(sizeof(struct queue));\n\thead->x=1;\n\thead->y=1;\n\thead->tag=0;\n\thead->next=NULL;\n\tcost=0;\n\tcolor=map[1][1];\n\tdo\n\t{\n\t\tend=tail;\n\t\tdo\n\t\t{\n\t\t\tb=head!=end;\n\t\t\tif(head->tag==2)\n\t\t\t{\n\t\t\t\tif(head==tail)\n\t\t\t\t\thead->tag=1;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tp=head;\n\t\t\t\t\thead=head->next;\n\t\t\t\t\tp->tag=1;\n\t\t\t\t\tp->next=NULL;\n\t\t\t\t\ttail->next=p;\n\t\t\t\t\ttail=p;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tx=head->x;\n\t\t\ty=head->y;\n\t\t\tif(head->tag)\n\t\t\t{\n\t\t\t\tif(map[x][y+1]>-1)\n\t\t\t\t\tfind(x,y+1);\n\t\t\t\tif(map[x+1][y]>-1)\n\t\t\t\t\tfind(x+1,y);\n\t\t\t\tif(map[x][y-1]>-1)\n\t\t\t\t\tfind(x,y-1);\n\t\t\t\tif(map[x-1][y]>-1)\n\t\t\t\t\tfind(x-1,y);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfind(x,y+1);\n\t\t\t\tfind(x+1,y);\n\t\t\t\tfind(x,y-1);\n\t\t\t\tfind(x-1,y);\n\t\t\t}\n\t\t\tp=head;\n\t\t\thead=head->next;\n\t\t\tfree(p);\n\t\t}\n\t\twhile(b);\n\t\tcost++;\n\t\tcolor=!color;\n\t}\n\twhile(head);\n\tprintf(\"%d\",-1);\n\treturn 0;\n}\n```",
        "postTime": 1527926385,
        "uid": 100806,
        "name": "lyyi2003",
        "ccfLevel": 0,
        "title": "O(m^2)\u7b97\u6cd5"
    },
    {
        "content": "\n\n\n    \n    \n    \n    \n    \n    \n    \n    \n\n        \n\n        \n                \n                    \n\n\n             \n                \n                    \n                        \n                    \n\n                \n                    \n                    \n\n\n                \n                    \n                    \n    \n```cpp\n#include<stdio.h> \n#include<stdlib.h>\n//\u8c03\u8bd5\u524d\u4e00\u5b9a\u8981\u5148f12\u7f16\u8bd1\u3002 Continue\u8df3\u5230\u4e0b\u4e2a\u65ad\u70b9\n//add watch\u589e\u52a0\u53d8\u91cf\u7528\u6765\u89c2\u770b\u5176\u53d8\u5316\u60c5\u51b5 \ntypedef struct{\n    int x;\n    int y;\n    int color;\n    int flag; \n    bool isUseMagic; \n}node;\nint m,n;\nint chess[100][100];//\u68cb\u76d8 \nint isPass[100][100];\nint findPath(int x,int y);\nint main(void)\n{\n    FILE * fp,*fp2;\n    fp=fopen(\"chess.in.txt\",\"r\");\n    fp2=fopen(\"chess.out.txt\",\"w\");\n    if(fp2 == NULL) exit(1);\n    if(fp == NULL) exit(1);\n    fscanf(fp,\"%d%d\",&m,&n);\n    for(int i=1;i<=m;i++){\n        for(int j=1;j<=m;j++){\n            chess[i][j] = -1;//\u8868\u793a\u65e0\u8272 \n            isPass[i][j] = 0;\n        }\n    } \n    for(int i=1;i<=n;i++){\n        int x,y,value;\n        fscanf(fp,\"%d%d%d\",&x,&y,&value);\n        chess[x][y] = value;//\u7ed9\u65b9\u5757\u4e0a\u8272 \n    } \n    for(int i=1;i<m;i++){\n        for(int j=1;j<m;j++)\n        printf(\"%d \",chess[i][j]);\n        printf(\"\\n\"); \n    }\n//    printf(\"%d\",findPath(1,1)); \n    fprintf(fp2,\"%d\",findPath(1,1));\n    fclose(fp);\n    fclose(fp2);\n    return 0;\n}\nint findPath(int x,int y)\n{\n    node path[500];\n    int top = 0;\n    path[0].x = x;\n    path[0].y = y;\n    path[0].color = chess[x][y];//\u989c\u8272\u8bbe\u7f6e \n    path[0].isUseMagic = false;//\u6ca1\u6709\u4f7f\u7528\u9b54\u6cd5 \n    path[0].flag = 0;\n    isPass[x][y] = 1;//\u6807\u81f3\u4e3a\u7ecf\u8fc7 \n    top++;\n    int cost = 0;\n    int mincost =  INT_MAX; \n    while(top>=0){\n        node temp = path[top-1];\n        //\u6df1\u5ea6\u904d\u5386\u7684\u987a\u5e8f\uff0c\u5148\u53f3\u518d\u4e0b\u518d\u4e0a\u518d\u5de6\uff0c\u627e\u51fa\u6240\u9700\u91d1\u5e01\u6700\u5c0f\u7684\u8def\u5f84\u3002\n        //1.\u53f3\u8d70\n        if(temp.x == m && temp.y ==m){//\u8d70\u5230\u7ec8\u70b9 \n            if(cost<mincost)\n            mincost = cost;//\u5bfb\u627e\u82b1\u8d39\u6700\u5c11\u91d1\u5e01\u7684\u8def\u5f84 \n        }\n        if(temp.flag == 0){//flag=0\u8868\u793a\u8fd8\u6ca1\u5f80\u53f3\u8d70\u8fc7\u3002 \n             path[top-1].flag++;\n             if(temp.y+1<=m && isPass[temp.x][temp.y+1]==0)//\u5f80\u53f3\u8d70\u53ef\u884c \n             {\n                if(chess[temp.x][temp.y+1] != -1){//\u6709\u989c\u8272 \n                    path[top].x = temp.x;\n                    path[top].y = temp.y+1;\n                    path[top].color = chess[temp.x][temp.y+1];\n                    path[top].isUseMagic = false;\n                    path[top].flag = 0; \n                    isPass[temp.x][temp.y+1] = 1;//\u8868\u793a\u5df2\u7ecf\u7ecf\u8fc7 \n                    if(path[top].color != temp.color){//\u989c\u8272\u4e0d\u540c\u9700\u8981\u82b1\u8d391\u4e2a\u91d1\u5e01 \n                        cost++;\n                    }\n                        //\u5982\u679c\u989c\u8272\u76f8\u540c\u5219\u4e0d\u82b1\u8d39\u91d1\u5e01 \n                    top++;//\u8fdb\u5165\u4e0b\u4e00\u4e2a\u683c\u5b50 \n                }else{//\u6ca1\u6709\u989c\u8272 \n                    if(!temp.isUseMagic)//\u4e4b\u524d\u6ca1\u6709\u4f7f\u7528\u9b54\u6cd5\u624d\u80fd\u518d\u6b21\u4f7f\u7528\u9b54\u6cd5 \n                    {\n                        //\u7ecf\u8fc7\u8bc1\u660e\u80fd\u53d8\u8272\u4e00\u5b9a\u8981\u53d8\u6210\u540c\u8272\u7684\u3002\n                        path[top].x = temp.x;\n                        path[top].y = temp.y+1;\n                        path[top].color = temp.color; \n                        path[top].isUseMagic = true;\n                        isPass[temp.x][temp.y+1] = 1;\n                        path[top].flag = 0;\n                        cost += 2;//\u4f7f\u7528\u9b54\u6cd5\u82b1\u8d39\u76842\u4e2a\u91d1\u5e01 \n                        top++;//\u8fdb\u5165\u4e0b\u4e00\u4e2a\u683c\u5b50 \n                }\n             }\n             }\n        }\n        else if(temp.flag == 1) {//\u8868\u793a\u5df2\u7ecf\u6d4b\u8bd5\u8fc7\u73a9\u53f3\u8d70\uff0c\u73b0\u5728\u6d4b\u8bd5\u5f80\u4e0b\u8d70 \n            path[top-1].flag++;\n            if(temp.x+1 <= m && isPass[temp.x+1][temp.y]==0){//\u5f80\u4e0b\u8d70\u53ef\u884c \n                if(chess[temp.x+1][temp.y] != -1){//\u6709\u989c\u8272 \n                    path[top].x = temp.x+1;\n                    path[top].y = temp.y;\n                    path[top].color = chess[temp.x+1][temp.y];\n                    path[top].isUseMagic = false;\n                    path[top].flag = 0;\n                    isPass[temp.x+1][temp.y] = 1;//\u8868\u793a\u5df2\u7ecf\u7ecf\u8fc7 \n                    if(path[top].color != temp.color){//\u989c\u8272\u4e0d\u540c\u9700\u8981\u82b1\u8d391\u4e2a\u91d1\u5e01 \n                        cost++;\n                    }\n                        //\u5982\u679c\u989c\u8272\u76f8\u540c\u5219\u4e0d\u82b1\u8d39\u91d1\u5e01 \n                    top++;//\u8fdb\u5165\u4e0b\u4e00\u4e2a\u683c\u5b50 \n                }else{//\u6ca1\u6709\u989c\u8272 \n                    if(!temp.isUseMagic)//\u4e4b\u524d\u6ca1\u6709\u4f7f\u7528\u9b54\u6cd5\u624d\u80fd\u518d\u6b21\u4f7f\u7528\u9b54\u6cd5 \n                    {\n                        //\u7ecf\u8fc7\u8bc1\u660e\u80fd\u53d8\u8272\u4e00\u5b9a\u8981\u53d8\u6210\u540c\u8272\u7684\u3002\n                        path[top].x = temp.x+1;\n                        path[top].y = temp.y;\n                        path[top].color = temp.color; \n                        path[top].isUseMagic = true;\n                        isPass[temp.x+1][temp.y] = 1;\n                        path[top].flag = 0;\n                        cost += 2;//\u4f7f\u7528\u9b54\u6cd5\u82b1\u8d39\u76842\u4e2a\u91d1\u5e01 \n                        top++;//\u8fdb\u5165\u4e0b\u4e00\u4e2a\u683c\u5b50 \n                } \n                }\n             }\n        }\n        else if(temp.flag == 2){//\u5f80\u5de6\u505a\u6d4b\u8bd5 \n            path[top-1].flag++;\n            if(temp.y-1 >= 1 && isPass[temp.x][temp.y-1]==0){//\u5f80\u5de6\u8d70\u53ef\u884c\n//            printf(\"zhxing3\\n\"); \n                if(chess[temp.x][temp.y-1] != -1){//\u6709\u989c\u8272 \n                    path[top].x = temp.x;\n                    path[top].y = temp.y-1;\n                    path[top].color = chess[temp.x][temp.y-1];\n                    path[top].isUseMagic = false;\n                    path[top].flag = 0;\n                    isPass[temp.x][temp.y-1] = 1;//\u8868\u793a\u5df2\u7ecf\u7ecf\u8fc7 \n                    if(path[top].color != temp.color){//\u989c\u8272\u4e0d\u540c\u9700\u8981\u82b1\u8d391\u4e2a\u91d1\u5e01 \n                        cost++;\n                    }\n                        //\u5982\u679c\u989c\u8272\u76f8\u540c\u5219\u4e0d\u82b1\u8d39\u91d1\u5e01 \n                    top++;//\u8fdb\u5165\u4e0b\u4e00\u4e2a\u683c\u5b50 \n                }else{//\u6ca1\u6709\u989c\u8272 \n                    if(!temp.isUseMagic)//\u4e4b\u524d\u6ca1\u6709\u4f7f\u7528\u9b54\u6cd5\u624d\u80fd\u518d\u6b21\u4f7f\u7528\u9b54\u6cd5 \n                    {\n                        //\u7ecf\u8fc7\u8bc1\u660e\u80fd\u53d8\u8272\u4e00\u5b9a\u8981\u53d8\u6210\u540c\u8272\u7684\u3002\n                        path[top].x = temp.x;\n                        path[top].y = temp.y-1;\n                        path[top].color = temp.color; \n                        path[top].isUseMagic = true;\n                        isPass[temp.x][temp.y-1] = 1;\n                        path[top].flag = 0;\n                        cost += 2;//\u4f7f\u7528\u9b54\u6cd5\u82b1\u8d39\u76842\u4e2a\u91d1\u5e01 \n                        top++;//\u8fdb\u5165\u4e0b\u4e00\u4e2a\u683c\u5b50 \n                } \n                }\n             }\n        }else if(temp.flag == 3){//\u5f80\u4e0a\u8d70 \n            path[top-1].flag++;\n            if(temp.x-1 >= 1 && isPass[temp.x-1][temp.y]==0){//\u5f80\u4e0a\u8d70\u53ef\u884c \n                if(chess[temp.x-1][temp.y] != -1){//\u6709\u989c\u8272 \n                    path[top].x = temp.x-1;\n                    path[top].y = temp.y;\n                    path[top].color = chess[temp.x-1][temp.y];\n                    path[top].isUseMagic = false;\n                    isPass[temp.x-1][temp.y] = 1;//\u8868\u793a\u5df2\u7ecf\u7ecf\u8fc7 \n                    path[top].flag = 0;\n                    if(path[top].color != temp.color){//\u989c\u8272\u4e0d\u540c\u9700\u8981\u82b1\u8d391\u4e2a\u91d1\u5e01 \n                        cost++;\n                    }\n                        //\u5982\u679c\u989c\u8272\u76f8\u540c\u5219\u4e0d\u82b1\u8d39\u91d1\u5e01 \n                    top++;//\u8fdb\u5165\u4e0b\u4e00\u4e2a\u683c\u5b50 \n                }else{//\u6ca1\u6709\u989c\u8272 \n                    if(!temp.isUseMagic)//\u4e4b\u524d\u6ca1\u6709\u4f7f\u7528\u9b54\u6cd5\u624d\u80fd\u518d\u6b21\u4f7f\u7528\u9b54\u6cd5 \n                    {\n                        //\u7ecf\u8fc7\u8bc1\u660e\u80fd\u53d8\u8272\u4e00\u5b9a\u8981\u53d8\u6210\u540c\u8272\u7684\u3002\n                        path[top].x = temp.x-1;\n                        path[top].y = temp.y;\n                        path[top].color = temp.color; \n                        path[top].isUseMagic = true;\n                        isPass[temp.x-1][temp.y] = 1;\n                        path[top].flag = 0;\n                        cost += 2;//\u4f7f\u7528\u9b54\u6cd5\u82b1\u8d39\u76842\u4e2a\u91d1\u5e01 \n                        top++;//\u8fdb\u5165\u4e0b\u4e00\u4e2a\u683c\u5b50 \n                } \n                }\n             }\n        }else{//flag == 4\u8868\u793a\u4e0a\u4e0b\u5de6\u53f3\u90fd\u6d4b\u8bd5\u8fc7\u4e86\uff0c\u5219\u56de\u6eaf\u3002 \n            top--;\n            if(top==0)\n            break;\n            node front = path[top-1];\n            node behind = path[top];\n            if(behind.isUseMagic) \n            cost-=2;//\u4f7f\u7528\u9b54\u6cd5\u82b1\u8d39\u76842\u4e2a\u91d1\u5e01\u8981\u8fd4\u8fd8\n            if(front.color != behind.color)\n            cost--;//\u4e0d\u540c\u989c\u8272\u82b1\u8d39\u76841\u4e2a\u91d1\u5e01\u8981\u8fd4\u8fd8 \n            isPass[behind.x][behind.y] = 0;\n        }\n    }\n    if(mincost == INT_MAX)\n    mincost = -1;\n    return mincost;\n}\n```",
        "postTime": 1512639609,
        "uid": 67707,
        "name": "sangxiyuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u672c\u9898\u6c42\u6700\u5c0f\u8d39\u7528\uff0c\u53ef\u4ee5\u770b\u6210\u6700\u77ed\u8def\u5f84\uff0c\u53ea\u662f\u6700\u77ed\u8def\u5f84\u6709\u4e24\u79cd\u72b6\u6001\uff0c\u5230\u67d0\u4e2a\u70b9\u662f\u7ea2\u8272\uff0c\u6216\u8005\u662f\u9ec4\u8272\u3002\u4e8e\u662f\u7528\u52a8\u6001\u89c4\u5212\u7684\u65b9\u6cd5\u8bb0\u5f55\u3002\u7528\u7c7b\u4f3c\u4e8espfa\u7684\u7b97\u6cd5\uff0c\u6709\u66f4\u65b0\u5165\u961f\u3002\u89e3\u51fa\u4ece\u5de6\u4e0a\u89d2\uff0c\u5230\u53f3\u4e0b\u89d2\u4e3a\u7ea2\u8272\uff0c\u6216\u8005\u9ec4\u8272\u7684\u6700\u77ed\u8def\u5f84\uff0c\u53d6\u5176\u4e2d\u6700\u5c0f\u503c\u3002\u4e0d\u80fd\u5230\u8fbe\u8f93\u51fa-1.\u8fd8\u662f\u770b\u6ce8\u91ca\u5427\n\n\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<cstring>\n#include<queue>\nusing namespace std;\n//dp\u6570\u7ec4\u8868\u793a\u8d70\u5230\u70b9x,y\uff0c\u989c\u8272\u662f0,1\u7684\u65f6\u5019\u6700\u4f18\u503c\nint m, n, dp[110][110][2], x, y, c, dx[4] = {-1, 1, 0, 0}, dy[4] = {0, 0, -1, 1}, ditu[110][110];\nconst int inf = 100000000;\nqueue<int> qx, qy;\nbool visited[110][110];\nint min3(int a,int b,int c) {\n    int t;\n    t=min(a,b);\n    t=min(t,c);\n    return t;\n}\nint main() {\n    memset(ditu, -1, sizeof (ditu));\n    memset(dp, 127, sizeof (dp));\n    cin >> m>>n;\n    for (int i = 1; i <= n; i++) {\n        cin >> x >> y>>c;\n        ditu[x][y] = c;\n    }\n//\u5e7f\u641c\u521d\u59cb\u5316\n    qx.push(1), qy.push(1);\n    if (ditu[1][1] == 0) dp[1][1][0] = 0;\n    else dp[1][1][1] = 0;\n    while (!qx.empty()) {\n        int xx = qx.front(), yy = qy.front();\n        visited[xx][yy]=true;\n        qx.pop(), qy.pop();\n        for (int i = 0; i < 4; i++) {\n            if (xx + dx[i] > 0 && xx + dx[i] <= m && yy + dy[i] > 0 && yy + dy[i] <= m) {//4\u4e2a\u65b9\u5411\u53ef\u8d70\u7684\u8bdd\n                int prev1 = dp[xx + dx[i]][yy + dy[i]][1], prev0 = dp[xx + dx[i]][yy + dy[i]][0];//\u8bb0\u5f55\u539f\u6765\u7684\u503c\u7528\u6765\u6bd4\u5bf9\uff0c\u6709\u53d8\u5316\u5165\u961f\uff0c\u540cspfa\n//\u6709\u8272\u7684\u72b6\u6001\u65b9\u7a0b\n                if (ditu[xx+dx[i]][yy+dy[i]]==1)\n                    dp[xx + dx[i]][yy + dy[i]][1] = min3(dp[xx + dx[i]][yy + dy[i]][1], dp[xx][yy][1], dp[xx][yy][0] + 1);\n                if (ditu[xx+dx[i]][yy+dy[i]]==0)\n                    dp[xx + dx[i]][yy + dy[i]][0] = min3(dp[xx + dx[i]][yy + dy[i]][0], dp[xx][yy][0], dp[xx][yy][1] + 1); \n//\u65e0\u8272\u7684\u72b6\u6001\u65b9\u7a0b\n                if (ditu[xx+dx[i]][yy+dy[i]]<0 && ditu[xx][yy]>=0) {\n                    dp[xx + dx[i]][yy + dy[i]][1] = min3(dp[xx + dx[i]][yy + dy[i]][1], dp[xx][yy][1]+2, dp[xx][yy][0] + 3);\n                    dp[xx + dx[i]][yy + dy[i]][0] = min3(dp[xx + dx[i]][yy + dy[i]][0], dp[xx][yy][0]+2, dp[xx][yy][1] + 3);           \n                }\n//\u6709\u53d8\u5316\u5165\u961f\n                if (dp[xx+dx[i]][yy+dy[i]][1]<prev1 || dp[xx+dx[i]][yy+dy[i]][0]<prev0)\n                    qx.push(xx+dx[i]),qy.push(yy+dy[i]);\n            } \n        }\n    }\n    if (visited[m][m])\n        cout<<min(dp[m][m][0],dp[m][m][1])<<endl;\n    else \n        cout<<-1<<endl;\n    return 0;\n}\n```",
        "postTime": 1512457734,
        "uid": 6262,
        "name": "lieee",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u4fee\u6539\u4e00\u4e0b\u6211\u7684\u9898\u89e3\n\n\u8be6\u89c1\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<iomanip>\n#include<cstdio>\n#include<cstring> \n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint p[1005][1005],f[1005][1005],n,m,x,y,z;//p\u6570\u7ec4\u7528\u4e8e\u8bb0\u5f55\u5730\u677f\uff0cf\u3010i\u3011\u3010j\u3011\u8868\u793a\u5230\uff08i\uff0cj\uff09\u4f4d\u7f6e\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\nint main()\n{\n    //freopen(\"chess.in\",\"r\",stdin);\n    //freopen(\"chess.out\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<=n+2;i++)\n      for(int j=0;j<=n+2;j++) p[i][j]=0;//\u5728\u8fd9\u91cc\u6211\u4eec\u5904\u7406\u4e24\u5c42\u5916\u5708\u7684\u65e0\u8272\u60c5\u51b5\uff0c\u907f\u514d\u8d8a\u754c\u3002\n    for(int i=1;i<=m;i++) {\n    scanf(\"%d%d%d\",&x,&y,&z);\n    p[x][y]=(z==1?2:1);//\u9ec4\u7ea2\u533a\u5206\n    }\n    for(int i=0;i<=n+2;i++)\n      for(int j=0;j<=n+2;j++) f[i][j]=0x3ffffff;//\u6700\u5927\u503c\u9884\u5904\u7406\n    f[1][1]=0;//\u6ce8\u610f\u8d77\u70b9\u662f0\n    for(int i=1;i<=n;i++)\n    {\n     for(int j=1;j<=n;j++)\n     {\n         if(p[i][j]<1&&i!=n&&j!=n) continue;//\u5224\u65ad\u6709\u8272\u3002\n         if(p[i][j]<1&&i==n&&j==n) {f[i][j]=min(f[i-1][j],f[i][j-1])+2;\n             continue;//\u6700\u53f3\u4e0b\u89d2\u4e00\u683c\u4e3a\u7a7a\u65f6\uff0c\u7b80\u5355\u5224\u5b9a\n          }//\n        if(p[i-1][j-1]>0) f[i][j]=min(f[i][j],f[i-1][j-1]+2+(p[i-1][j-1]!=p[i][j]));\n        if(p[i+1][j+1]>0) f[i][j]=min(f[i][j],f[i+1][j+1]+2+(p[i+1][j+1]!=p[i][j]));\n        if(p[i-1][j+1]>0) f[i][j]=min(f[i][j],f[i-1][j+1]+2+(p[i-1][j+1]!=p[i][j]));\n        if(p[i+1][j-1]>0) f[i][j]=min(f[i][j],f[i+1][j-1]+2+(p[i+1][j-1]!=p[i][j]));//\u5bf9\u89d2\u7ebf\uff0c\u9b54\u6cd5\u4f18\u5148\u5224\u65ad\n         if(p[i][j-1]>0) f[i][j]=min(f[i][j],f[i][j-1]+(p[i][j-1]!=p[i][j]));\n         if(p[i-1][j]>0) f[i][j]=min(f[i][j],f[i-1][j]+(p[i-1][j]!=p[i][j]));\n         if(p[i][j+1]>=1) f[i][j]=min(f[i][j],f[i][j+1]+(p[i][j+1]!=p[i][j]));\n         if(p[i+1][j]>=1) f[i][j]=min(f[i][j],f[i+1][j]+(p[i+1][j]!=p[i][j]));//\u4e0a\u4e0b\u5de6\u53f3\uff08\u5177\u4f53\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u8d2a\u5fc3\u53ea\u8d70\u53f3\u4e0b\u6211\u4e0d\u6e05\u695a\uff09\n         if(i>=2)if(p[i-2][j]>=1) f[i][j]=min(f[i][j],f[i-2][j]+2+(p[i-2][j]!=p[i][j]));\n         if(j>=2)if(p[i][j-2]>=1) f[i][j]=min(f[i][j],f[i][j-2]+2+(p[i][j-2]!=p[i][j]));\n         if(i<n)if(p[i+2][j]>=1) f[i][j]=min(f[i][j],f[i+2][j]+2+(p[i+2][j]!=p[i][j]));\n         if(j<n)if(p[i][j+2]>=1) f[i][j]=min(f[i][j],f[i][j+2]+2+(p[i][j+2]!=p[i][j]));//\u630e\u683c\u76f4\u7ebf\u7248\u4e0a\u4e0b\u5de6\u53f3\uff0c\u5efa\u8bae\u52a0\u5224\n     }    \n     }\n     /*for(int i=1;i<=n;i++)\n     {\n       for(int j=1;j<=n;j++) cout<<setw(2)<<(f[i][j]==0x3ffffff?0:f[i][j]);\n       cout<<\"\\n\";\n       }\n       for(int i=1;i<=n;i++)\n       {\n           cout<<i<<\":\";\n        for(int j=1;j<=n;j++) cout<<setw(1)<<(p[i][j]==-1?0:p[i][j]);\n        cout<<\"\\n\";\n        }  */\n     cout<<(f[n][n]!=0x3ffffff?f[n][n]:-1)<<\"\\n\";\n    fclose(stdin);\n    fclose(stdout);\n    return 0;\n}\n```",
        "postTime": 1511657661,
        "uid": 40629,
        "name": "zzw4257",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "##\u8fd9\u79cd\u9898\u76ee\u5bf9\u6211\u8fd9\u79cd\u849f\u84bb\u6765\u8bf4\uff0c\u5df2\u7ecf\u7b97\u662f\u4e00\u4e2a\u96be\u9898\u4e86\u3002\u3002\n\n##\u7528\u7684\u662fbfs\u641c\u7d22\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u5230\u539f\u70b9\u7684\u6700\u5c0f\u4ee3\u4ef7\n\n##\u522b\u7684\u4e0d\u8bf4\u4e86\uff0c\u5177\u4f53\u7684\u89e3\u6790\u5728\u4ee3\u7801\u91cc\u6709\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 1<<27; \nconst int MAX_M=101;\nconst int MAX_N = 1001;\nint chess[MAX_M][MAX_M];//\u68cb\u76d8\uff0c1\u4ee3\u8868\u7ea2\u8272\uff0c2\u4ee3\u8868\u9ec4\u8272 \nint d[MAX_M][MAX_M]; //\u6bcf\u4e2a\u70b9\u5230\u8d77\u70b9[1,1]\u7684\u4ee3\u4ef7 \nint dx[]={0,-1,0,1,0};\nint dy[]={0,0,1,0,-1};\nint m; //\u68cb\u76d8\u5b9e\u9645\u7684\u884c\u548c\u5217 \nint n; //\u6709\u989c\u8272\u7684\u4e2a\u6570 \nstruct point{\n    int x,y;\n    int f_x,f_y; //\u6765\u81ea\u54ea\u4e2a\u5750\u6807\n    int d; //\u8ddd\u79bb\u8d77\u70b9\u7684\u4ee3\u4ef7 \n};\nqueue<point> que; //bfs\u6240\u9700 \nbool inchess(int x,int y)\n{\n    if(x>=1&&x<=m&&y>=1&&y<=m)\n        return true;\n    return false;     \n} \n//\u5224\u65ad\u4ece\u70b9(p.x,p.y)\u5230\u70b9(x,y)\u7684\u4ee3\u4ef7 \nint getcost(int x,int y,point p) \n{\n    int f_x = p.x,f_y=p.y;\n    if(chess[x][y]==0 && chess[f_x][f_y]==0) //\u90fd\u662f\u7a7a\u767d\n        return -1; //\u4e0d\u53ef\u8fbe\n    if(chess[x][y]==0) return 2;\n    if(chess[x][y]==chess[f_x][f_y]) return 0; //\u989c\u8272\u76f8\u7b49\n    if(chess[x][y]!=chess[f_x][f_y] && chess[f_x][f_y]!=0) return 1;\n    if(chess[f_x][f_y]==0 && chess[x][y] != chess[p.f_x][p.f_y]) return 1;\n    return 0;//\u76f8\u540c\u7684\u989c\u8272 \n}\nint main()\n{\n    //fill();\n    int ans=MAX; //\u6700\u77ed\u7684\u8def\u5f84\u4ee3\u4ef7 \n    cin>>m>>n;\n    for(int i=1;i<=m;i++) {fill(d[i],d[i]+m+1,MAX);fill(chess[i],chess[i]+m+1,0);}\n    for(int i=1;i<=n;i++){\n        int x,y,c;\n        cin>>x>>y>>c;\n        chess[x][y] = c+1; \n    }\n    point p,p2;\n    p.x =1; p.y=1; p.f_x=0;p.f_y=0; p.d = 0;\n    que.push(p);\n    d[1][1]=0; \n    while(!que.empty()){\n        p = que.front(); que.pop();\n        if(p.x==m && p.y==m ){\n            if(p.d<ans)\n                ans=p.d; //\u66f4\u65b0\u6700\u4f4e\u4ee3\u4ef7 \n            continue;\n        }\n        int x,y;\n        for(int i=1;i<=4;i++){\n            x=p.x+dx[i]; y=p.y+dy[i]; \n            if(inchess(x,y) && !(x==p.f_x && y==p.f_y)){//\u5728\u68cb\u76d8\u4ee5\u5185\uff0c\u5e76\u4e14\u4e0d\u80fd\u662f\u5f80\u56de\u7684\u8282\u70b9 \n                 int cost = getcost(x,y,p); \n                 if(cost==-1) continue;//\u7a7a\u767d\u5230\u7a7a\u767d\uff0c\u4e0d\u80fd\u5165\u961f\u5217 \n                 p2.x=x; p2.y=y; p2.f_x=p.x; p2.f_y=p.y;\n                 p2.d = p.d+cost;\n                 if(p2.d<d[x][y]) {\n                    d[x][y]=p2.d;\n                     que.push(p2);\n                     //cout<<p.x<<\",\"<<p.y<<\"-->\"<<x<<\",\"<<y<<\" d=\"<<p2.d<<endl;\n                }\n            }\n        }\n    }\n    if(ans!=MAX)     cout<<ans;\n    else cout<<-1;\n    return 0;\n}\n```",
        "postTime": 1511584755,
        "uid": 37403,
        "name": "Fike_L",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "**\u5bf9\u697c\u4e0b12\u5411BFS\u7684\u4f18\u5316\uff080ms\uff09\n\n\u56e0\u4e3a\u4e4b\u524d\u9898\u89e3\u6709bug\u91cd\u53d1\u4e00\u7bc7\n\n\u5f53\u4ece\u4e00\u4e2a\u683c\u5b50\u8d70\u5230\u76f8\u90bb\u6709\u8272\u683c\u5b50\u65f6\uff0c\u548c\u666e\u901a\u8ff7\u5bab\u6ca1\u6709\u533a\u522b\n\n\u56e0\u4e3a\u7a7a\u767d\u683c\u5b50\u7684\u5b58\u5728\uff0c\u4f7f\u5f97\u4e00\u4e2a\u683c\u5b50\u53ef\u4ee5\u8054\u901a\u66fc\u54c8\u987f\u8ddd\u79bb\uff08\u6a2a\u5750\u6807\u5dee\u7eb5\u5750\u6807\u5dee\u4e4b\u548c\uff09\u4e3a2\u7684\u6709\u8272\u683c\u5b50\n\n\u5f53\u8ddd\u79bb\u4e3a2\u7684\u4e24\u4e2a\u683c\u5b50\u989c\u8272\u76f8\u540c\u65f6\uff0c\u4ee3\u4ef7\u4e3a2\uff08\u9b54\u6cd52\u91d1\u5e01\uff09\uff0c\u989c\u8272\u4e0d\u540c\u65f6\uff0c\u4ee3\u4ef7\u4e3a3\uff08\u9b54\u6cd52\u91d1\u5e01+\u4e0d\u540c\u989c\u82721\u91d1\u5e01\uff09\n\n\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u641c\u7d22\uff0c\u53ea\u6709\u5728\u53ef\u4ee5\u66f4\u65b0\u67d0\u4e2a\u683c\u5b50\u5230\u8d77\u70b9\u6700\u5c0f\u4ee3\u4ef7\u65f6\u624d\u641c\u7d22\u90a3\u4e2a\u683c\u5b50\uff0c\u5982\u679c\u4e24\u683c\u5b50\u8ddd\u79bb\u4e3a2\uff0c\u53ea\u5728\u5b83\u4eec\u4e0d\u80fd\u88ab\u4e00\u4e2a\u6709\u8272\u683c\u5b50\u76f4\u63a5\u8054\u901a\u65f6\u641c\u7d22\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u8003\u573a\u4e0a\u5c31\u8fd9\u4e48\u5199\u7684\uff0c\u7136\u800c\u6ca1\u5199freopen\u524d\u529f\u5c3d\u5f03\n\n```cpp\n#include<iostream>\n#include<queue>\nusing namespace std;\nconst long long inf=1000000000000000000LL;\nint m,n,a[101][101],t1,t2,c;//a\u5b58\u683c\u5b50\u7684\u989c\u8272\uff0c0\u65e0\u8272\uff0c1,2\u662f\u4e24\u79cd\u4e0d\u540c\u989c\u8272\nqueue<int>qx,qy;//\u5b58\u641c\u7d22\u7684\u70b9\u7684\u5750\u6807\nlong long d[101][101];//\u5b58\u6bcf\u4e2a\u70b9\u5230\u8d77\u70b9\u7684\u8ddd\u79bb\nvoid bfs(int x,int y){//12\u4e2a\u65b9\u5411\uff08\u4e0a\u4e0b\u5de6\u53f3 \u5de6\u4e0a\u5de6\u4e0b\u53f3\u4e0a\u53f3\u4e0b \u4e0a\u4e0b\u5de6\u53f32\u683c\uff09\uff0c\u4e0d\u60f3\u770b\u76f4\u63a5\u8df3\u5230\u6700\u540e\n    if(x>1&&a[x-1][y]!=2){\n        if(a[x][y]==a[x-1][y]&&d[x][y]<d[x-1][y]){\n            d[x-1][y]=d[x][y];\n            qx.push(x-1);\n            qy.push(y);\n        }else if(d[x][y]+1<d[x-1][y]){\n            d[x-1][y]=d[x][y]+1;\n            qx.push(x-1);\n            qy.push(y);\n        }\n    }\n    if(x<m&&a[x+1][y]!=2){\n        if(a[x][y]==a[x+1][y]&&d[x][y]<d[x+1][y]){\n            d[x+1][y]=d[x][y];\n            qx.push(x+1);\n            qy.push(y);\n        }else if(d[x][y]+1<d[x+1][y]){\n            d[x+1][y]=d[x][y]+1;\n            qx.push(x+1);\n            qy.push(y);\n        }\n    }\n    if(y<m&&a[x][y+1]!=2){\n        if(a[x][y]==a[x][y+1]&&d[x][y]<d[x][y+1]){\n            d[x][y+1]=d[x][y];\n            qx.push(x);\n            qy.push(y+1);\n        }else if(d[x][y]+1<d[x][y+1]){\n            d[x][y+1]=d[x][y]+1;\n            qx.push(x);\n            qy.push(y+1);\n        }\n    }\n    if(y>1&&a[x][y-1]!=2){\n        if(a[x][y]==a[x][y-1]&&d[x][y]<d[x][y-1]){\n            d[x][y-1]=d[x][y];\n            qx.push(x);\n            qy.push(y-1);\n        }else if(d[x][y]+1<d[x][y-1]){\n            d[x][y-1]=d[x][y]+1;\n            qx.push(x);\n            qy.push(y-1);\n        }\n    }\n    if(x>1&&y>1&&a[x-1][y]==2&&a[x][y-1]==2&&a[x-1][y-1]!=2){\n        if(a[x][y]==a[x-1][y-1]&&d[x][y]+2<d[x-1][y-1]){\n            d[x-1][y-1]=d[x][y]+2;\n            qx.push(x-1);\n            qy.push(y-1);\n        }else if(d[x][y]+3<d[x-1][y-1]){\n            d[x-1][y-1]=d[x][y]+3;\n            qx.push(x-1);\n            qy.push(y-1);\n        }\n    }\n    if(x<m&&y>1&&a[x+1][y]==2&&a[x][y-1]==2&&a[x+1][y-1]!=2){\n        if(a[x][y]==a[x+1][y-1]&&d[x][y]+2<d[x+1][y-1]){\n            d[x+1][y-1]=d[x][y]+2;\n            qx.push(x+1);\n            qy.push(y-1);\n        }else if(d[x][y]+3<d[x+1][y-1]){\n            d[x+1][y-1]=d[x][y]+3;\n            qx.push(x+1);\n            qy.push(y-1);\n        }\n    }\n    if(x<m&&y<m&&a[x+1][y]==2&&a[x][y+1]==2&&a[x+1][y+1]!=2){\n        if(a[x][y]==a[x+1][y+1]&&d[x][y]+2<d[x+1][y+1]){\n            d[x+1][y+1]=d[x][y]+2;\n            qx.push(x+1);\n            qy.push(y+1);\n        }else if(d[x][y]+3<d[x+1][y+1]){\n            d[x+1][y+1]=d[x][y]+3;\n            qx.push(x+1);\n            qy.push(y+1);\n        }\n    }\n    if(x>1&&y<m&&a[x-1][y]==2&&a[x][y+1]==2&&a[x-1][y+1]!=2){\n        if(a[x][y]==a[x-1][y+1]&&d[x][y]+2<d[x-1][y+1]){\n            d[x-1][y+1]=d[x][y]+2;\n            qx.push(x-1);\n            qy.push(y+1);\n        }else if(d[x][y]+3<d[x-1][y+1]){\n            d[x-1][y+1]=d[x][y]+3;\n            qx.push(x-1);\n            qy.push(y+1);\n        }\n    }\n    if(x>2&&a[x-1][y]==2&&a[x-2][y]!=2){\n        if(a[x-2][y]==a[x][y]&&d[x][y]+2<d[x-2][y]){\n            d[x-2][y]=d[x][y]+2;\n            qx.push(x-2);\n            qy.push(y);\n        }else if(d[x][y]+3<d[x-2][y]){\n            d[x-2][y]=d[x][y]+3;\n            qx.push(x-2);\n            qy.push(y);\n        }\n    }\n    if(x<m-1&&a[x+1][y]==2&&a[x+2][y]!=2){\n        if(a[x+2][y]==a[x][y]&&d[x][y]+2<d[x+2][y]){\n            d[x+2][y]=d[x][y]+2;\n            qx.push(x+2);\n            qy.push(y);\n        }else if(d[x][y]+3<d[x+2][y]){\n            d[x+2][y]=d[x][y]+3;\n            qx.push(x+2);\n            qy.push(y);\n        }\n    }\n    if(y<m-1&&a[x][y+1]==2&&a[x][y+2]!=2){\n        if(a[x][y+2]==a[x][y]&&d[x][y]+2<d[x][y+2]){\n            d[x][y+2]=d[x][y]+2;\n            qx.push(x);\n            qy.push(y+2);\n        }else if(d[x][y]+3<d[x][y+2]){\n            d[x][y+2]=d[x][y]+3;\n            qx.push(x);\n            qy.push(y+2);\n        }\n    }\n    if(y>2&&a[x][y-1]==2&&a[x][y-2]!=2){\n        if(a[x][y-2]==a[x][y]&&d[x][y]+2<d[x][y-2]){\n            d[x][y-2]=d[x][y]+2;\n            qx.push(x);\n            qy.push(y-2);\n        }else if(d[x][y]+3<d[x][y-2]){\n            d[x][y-2]=d[x][y]+3;\n            qx.push(x);\n            qy.push(y-2);\n        }\n    }\n    qx.pop();\n    qy.pop();\n    if(!qx.empty())\n        bfs(qx.front(),qy.front());\n}\nint main(){\n    cin>>m>>n;\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=m;j++){\n            a[i][j]=2;\n            d[i][j]=inf;//\u5c06\u9664\u8d77\u70b9\u5916\u6bcf\u4e2a\u683c\u5b50\u5230\u8d77\u70b9\u4ee3\u4ef7\u90fd\u8bbe\u7f6e\u6210\u65e0\u9650\n        }\n    d[1][1]=0;//\u8d77\u70b9\u5230\u8d77\u70b9\u4e3a0\n    for(int i=1;i<=n;i++){\n        cin>>t1>>t2>>c;\n        a[t1][t2]=c;\n    }\n    qx.push(1);\n    qy.push(1);\n    bfs(1,1);//\u4ece\u8d77\u70b9\u5f00\u59cb\u641c\n    if(a[m][m]==2){//\u6ce8\u610f\uff0c\u5982\u679c\u7ec8\u70b9\u662f\u7a7a\u767d\uff0cBFS\u641c\u4e0d\u5230\uff0c\u9700\u8981\u7279\u5224\n        if(a[m-1][m]<2&&d[m-1][m]!=inf)d[m][m]=d[m-1][m]+2;//\u5982\u679c\u4e0e\u7ec8\u70b9\u76f8\u90bb\u7684\u683c\u5b50\u6709\u8272\u5e76\u4e14\u80fd\u8d70\u5230\uff0c\u90a3\u4e48\u7ec8\u70b9\u53ef\u4ee5\u5230\u8fbe\n        if(a[m][m-1]<2&&d[m][m-1]+2<d[m][m])d[m][m]=d[m][m-1]+2;\n    }\n    if(d[m][m]==inf)cout<<-1;//\u6ca1\u641c\u5230\u7ec8\u70b9\u4ee3\u8868\u65e0\u89e3\n    else cout<<d[m][m];\n}",
        "postTime": 1511522908,
        "uid": 35406,
        "name": "\u300c\u5df2\u6ce8\u9500\u300d",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u5bf9\u4e8ePascal\u6765\u8bf4\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u6df1\u641c+\u8bb0\u5fc6\u5316\uff0c\u5f88\u591a\u4eba\u770b\u5230\u9b54\u6cd5\u4e4b\u540e\u4f1a\u7acb\u9a6c\u5f03\u7597\uff0c\u5176\u5b9e\u9b54\u6cd5\u5e76\u4e0d\u96be\uff0c\u53ea\u9700\u5224\u65ad\u5f53\u524d\u6240\u5728\u4f4d\u7f6e\u4e0e\u76ee\u6807\u4f4d\u7f6e\u662f\u5426\u90fd\u4e3a\u767d\u8272\uff0c\u662f\u7684\u8bdd\u4e0d\u80fd\u7528\u9b54\u6cd5\uff0c\u5426\u5219\u76f4\u63a5\u6a21\u62df\uff0c\u6700\u540e\u5728\u9012\u5f52\u4e2d\u52a0\u4e0a\u8bb0\u5fc6\u5316\u5373\u53ef\uff08PS\uff1a\u9012\u5f52\u4e2d\u8981\u5f00\u4e00\u4e2a\u53d8\u91cf\uff0c\u8bb0\u5f55\u5f53\u524d\u683c\u5b50\u989c\u8272\uff09\u3002\n\n\u6700\u540e\u9001\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\nvar\n        fx:array[1..4,1..2]of longint=\n        ((1,0),(0,1),(-1,0),(0,-1));\n        map,a:array[1..1001,1..1001]of longint;\n        bz:array[1..1001,1..1001]of boolean;\n        n,m,i,k,s,x,y,z,ans:longint;\nprocedure dg(xx,yy,ys,anss:longint);\nvar\n        j,x2,y2:longint;\nbegin\n        if anss>=ans then exit;\n        if anss>=a[xx,yy] then exit;  //\u8bb0\u5fc6\u5316\u5224\u65ad\uff0c\u5982\u679c\u89e3\u5e76\u4e0d\u6bd4\u4e4b\u524d\u4f18\u7684\u8bdd\uff0c\u9000\u51fa\u3002\n        a[xx,yy]:=anss;  //\u8bb0\u5fc6\u5316\u8d4b\u503c\n        if (xx=n)and(yy=n)and(anss<ans) then\n        begin\n                ans:=anss;\n                exit;\n        end;\n        for j:=1 to 4 do\n        begin\n                x2:=xx+fx[j,1];\n                y2:=yy+fx[j,2];\n                if (x2<=n)and(x2>=1)and(y2<=n)and(y2>=1) then\n                begin\n                        if (bz[x2,y2]=false)and(map[xx,yy]+map[x2,y2]>0) then  // \u65e0\u6cd5\u4f7f\u7528\u9b54\u6cd5\u3002\n                        begin\n                                bz[x2,y2]:=true;  //\u6807\u8bb0\u8def\u7a0b\n                                if map[x2,y2]=0 then\n                                begin\n                                        dg(x2,y2,map[xx,yy],anss+2);  //\u4f7f\u7528\u9b54\u6cd5\u65f6\u7684\u9012\u5f52\n                                end\n                                else\n                                begin\n                                        dg(x2,y2,map[x2,y2],anss+abs(ys-map[x2,y2]));  //\u4e0d\u4f7f\u7528\u9b54\u6cd5\u7684\u9012\u5f52\n                                end;\n                                bz[x2,y2]:=false; //\u8fd8\u539f\n                        end;\n                end;\n        end;\nend;\nbegin\n        assign(input,'chess.in');\n        reset(input);\n        assign(output,'chess.out');\n        rewrite(output);\n        read(n,m);\n        for i:=1 to m do\n        begin\n                read(x,y,z);\n                map[x,y]:=z+1;\n        end;\n        bz[1,1]:=true;\n        fillchar(a,sizeof(a),127);\n        ans:=maxlongint;\n        dg(1,1,map[1,1],0);\n        if ans<>maxlongint then write(ans)\n        else if n=1 then write(0)  //\u7279\u5224\n        else write(-1);\n        close(input);\n        close(output);\nend.\n\n```",
        "postTime": 1511500912,
        "uid": 40149,
        "name": "liuhuanning",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    },
    {
        "content": "\u7528\u6df1\u641c\u52a0\u4e00\u4e2a\u526a\u679d\uff0c\u8dd1\u5f97\u6bd4\u6b63\u89e3\u8fd8\u5feb\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u8d2a\u5fc3\uff0c\u5982\u679c\u5f53\u524d\u989c\u8272\u6709\u8272\uff0c\u4e0b\u4e00\u4e2a\u65e0\u8272\uff0c\u5219\u65e0\u8272\u5757\u7684\u989c\u8272\u8ddf\u5f53\u524d\u989c\u8272\u76f8\u540c\n\n          \n\u7ea2 2\n\u65e0\u53d8\u6210\u7ea2\n\n\u7ea2  \u65e0                 \u9ec4 3\n\n\u7ea2 3\n\u65e0\u53d8\u6210\u9ec4\n\n\u9ec4 3\n\u663e\u7136\u65e0\u8272\u5757\u53d8\u6210\u7ea2\u8272\u5feb\u66f4\u4f18\u3002\u3002\u3002\n\n\u4e0b\u9762\u9644\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\nconst dx:array[1..4]of longint=(1,-1,0,0);\n      dy:array[1..4]of longint=(0,0,1,-1);\nvar f,a:array[1..100,1..100]of longint;\n    flag:array[1..100,1..100]of boolean;\n    x,y,c,n,m,oo,min,i,j:longint;\nprocedure dfs(x,y,col,ans:longint);\nvar i,xx,yy:longint;\nbegin\n  if (x=m)and(y=m) then\n  begin\n    if ans<min then min:=ans;\n    exit;\n  end;\n  if ans>=min then exit;\n  if ans>=a[x,y] then exit\n    else a[x,y]:=ans;\n  for i:=1 to 4 do\n  begin\n    xx:=x+dx[i];yy:=y+dy[i];\n    if (xx<1)or(xx>m)or(yy<1)or(yy>m)or(flag[xx,yy])or((f[x,y]=-1)and(f[xx,yy]=-1)) then continue;\n    flag[xx,yy]:=true;\n      if f[x,y]=-1 then dfs(xx,yy,f[x,y],ans+abs(f[xx,yy]-col))\n        else\n        begin\n          if f[xx,yy]=-1 then dfs(xx,yy,f[x,y],ans+2)\n            else dfs(xx,yy,f[x,y],ans+abs(f[xx,yy]-f[x,y]));\n        end;\n    flag[xx,yy]:=false;\n  end;\nend;\nbegin\n  readln(m,n);\n  oo:=m*m*2;\n  min:=oo;\n  for i:=1 to m do\n    for j:=1 to m do \n    begin\n    a[i,j]:=oo;\n    f[i,j]:=-1;\n    end;\n  for i:=1 to n do \n  begin\n    readln(x,y,c);\n    f[x,y]:=c;\n  end;\n  dfs(1,1,0,0);\n  if min=oo then writeln(-1)\n  else \n  writeln(min);\nend.\n```",
        "postTime": 1511059552,
        "uid": 29461,
        "name": "Gokotta",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3956 \u3010\u68cb\u76d8\u3011"
    }
]