[
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a$n\\times m$\u7684\u683c\u5b50\u4f5c\u4e3a\u751f\u547d\u6e38\u620f\u7684\u68cb\u76d8\uff0c\u95ee\u6709\u591a\u5c11\u79cd\u521d\u59cb\u72b6\u6001\u4f7f\u5f97\u751f\u547d\u4e0d\u4f1a\u706d\u7edd\u3002\n\n$\\texttt{Data Range:}n,m\\leq 5$\n### \u9898\u89e3\n\n\u770b\u5230\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\uff0c\u8ba9\u6211\u60f3\u8d77\u4e86\u586b\u6570\u6e38\u620f\uff0c\u6240\u4ee5\u8bf4\u6b63\u89e3\u80af\u5b9a\u662f\u6253\u8868\u5566qwq\u3002\n\n\u4f46\u662f\u600e\u4e48\u751f\u6210\u8fd9\u4e2a\u8868\u5462\uff1f\n\n\u7206\u641c\u6bcf\u79cd\u72b6\u6001\uff0c\u770b\u6bcf\u79cd\u72b6\u6001\u662f\u5426\u53ef\u884c\u3002\n\n\u53ef\u662f\u201c\u53ef\u884c\u201d\u7684\u5b9a\u4e49\u53c8\u662f\u4ec0\u4e48\u5462\uff1f\u9700\u8981\u7e41\u884d\u5230\u591a\u5c11\u4ee3\u624d\u88ab\u5224\u5b9a\u4e3a\u53ef\u884c\u5462\uff1f\n\n\u636e\u7edf\u8ba1\uff08\u5176\u5b9e\u662f\u6211\u968f\u4fbf\u5b9a\u4e86\u4e00\u4e2a\u4e0a\u754c\u7206\u641c\u8fc7\u4e86\uff09\uff0c\u5728$5\\times5$\u7684\u68cb\u76d8\u4e0a\u7684\uff0c\u6700\u957f\u5bff\uff08\u4f46\u4f1a\u6b7b\uff09\u7684\u751f\u547d\u7684\u5bff\u547d\u4e0d\u8d85\u8fc7$60$\u3002\n\n\u90a3\u5c31\u597d\u4e86\uff0c\u4e8e\u662f\u53ef\u4ee5\u77e5\u9053\u6bcf\u79cd\u72b6\u6001\u662f\u5426\u53ef\u884c\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u8fd9\u4e2a\u521d\u59cb\u5c40\u9762\u7e41\u884d$60$\u4ee3\uff0c\u770b\u6709\u6ca1\u6709\u6b7b\u5149\u5149\u3002\u4e8e\u662f\u5c31\u53ef\u4ee5\u5199\u51fa\u4ee3\u7801\u4e86qwq\n\n```cpp\n#include<bits/stdc++.h>\n#pragma GCC optimize(2)\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\nconst ll MAXN=15;\nll size,lived;\nmap<ll,ll>mp;\nchar x[MAXN][MAXN],y[MAXN][MAXN],k[MAXN][MAXN];\nll vx[8]={-1,-1,0,1,1,1,0,-1},vy[8]={0,1,1,1,0,-1,-1,-1};\ninline ll read()\n{\n\tregister int num=0,neg=1;\n\tregister char ch=getchar();\n\twhile(!isdigit(ch)&&ch!='-')\n    {\n\t\tch=getchar();\n    }\n\tif(ch=='-')\n    {\n\t\tneg=-1;\n\t\tch=getchar();\n    }\n\twhile(isdigit(ch))\n\t{\n\t\tnum=(num<<3)+(num<<1)+(ch-'0');\n\t\tch=getchar();\n\t}\n\treturn num*neg;\n}\ninline bool isin(ll num,ll minn,ll maxn)\n{\n\treturn num>=minn&&num<=maxn;\n}\ninline ll getN(ll x_,ll y_)\n{\n\tll res=0;\n\tfor(register int i=0;i<8;i++)\n\t{\n\t\tll xx=x_+vx[i],yy=y_+vy[i];\n\t\tif(isin(xx,0,size-1)&&isin(yy,0,size-1))\n\t\t{\n\t\t\tres+=(x[xx][yy]=='*');\n\t\t}\n\t}\n\treturn res;\n}\ninline void getNxt()\n{\n\tfor(register int i=0;i<size;i++)\n\t{\n\t\tfor(register int j=0;j<size;j++)\n\t\t{\n\t\t\tll n=getN(i,j);\n\t\t\tif(x[i][j]=='*')\n\t\t\t{\n\t\t\t\ty[i][j]=(n==2||n==3)?'*':'.';\n\t\t\t}\n\t\t\tif(x[i][j]=='.')\n\t\t\t{\n\t\t\t\ty[i][j]=(n==3)?'*':'.';\n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i=0;i<size;i++)\n\t{\n\t\tfor(register int j=0;j<size;j++)\n\t\t{\n\t\t\tx[i][j]=y[i][j];\n\t\t}\n\t}\n}\ninline void test()\n{\n\tll xt=1;\n\twhile(xt<60)\n\t{\t\n\t\txt++,getNxt();\n\t\t\n\t\tll k=0;\n\t\tfor(register int i=0;i<size;i++)\n\t\t{\n\t\t\tfor(register int j=0;j<size;j++)\n\t\t\t{\n\t\t\t\tif(x[i][j]=='*')\n\t\t\t\t{\n\t\t\t\t\tk=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!k)\n\t\t{\n\t\t\t// printf(\"The life died at generation %d\\n\",xt);\n\t\t\treturn;\n\t\t}\n\t}\n\t//puts(\"The life will never die!\");\n\tlived++;\n}\ninline void dfs(ll x_,ll y_)\n{\n\tif(x_==size&&!y_)\n\t{\n\t\tfor(register int i=0;i<size;i++)\n\t\t{\n\t\t\tfor(register int j=0;j<size;j++)\n\t\t\t{\n\t\t\t\tx[i][j]=k[i][j];\n\t\t\t}\n\t\t}\n\t\ttest();\n\t\treturn;\n\t}\n\tll xx=x_,yy=y_+1;\n\tif(yy==size)\n\t{\n\t\txx++,yy=0;\n\t}\n\tk[x_][y_]='.',dfs(xx,yy);\n\tk[x_][y_]='*',dfs(xx,yy);\n}\nint main()\n{\n\tsize=read();\n\tdfs(0,0);\n\tprintf(\"%d\\n\",lived);\n}\n```\n\u53ef\u662f\u8fd9\u6837$5\\times 5$\u7684\u534a\u4e2a\u5c0f\u65f6\u90fd\u8dd1\u4e0d\u5b8c\u3002\u6240\u4ee5\uff0c\u600e\u4e48\u4f18\u5316\u5462\uff1f\uff1f\n\n\u8003\u8651\u5230\u5982\u679c\u6709\u4e00\u4e2a\u72b6\u6001\u7e41\u884d\u8fc7\u540e\u5df2\u7ecf\u88ab\u8bc1\u660e\u662f\u6b7b\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u72b6\u6001\u4e5f\u80af\u5b9a\u662f\u6b7b\u7684\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u751f\u547d\u6e38\u620f\u7684\u4e00\u79cd\u72b6\u6001\u7e41\u884d\u540e\u53ea\u4f1a\u5f97\u5230\u4e00\u4e2a\u540e\u7ee7\u72b6\u6001\uff0c\u6240\u4ee5\u8bf4\u8fd9\u80af\u5b9a\u662f\u6210\u7acb\u7684\u3002\n\n\u540c\u7406\uff0c\u5982\u679c\u4e00\u4e2a\u72b6\u6001\u7e41\u884d\u8fc7\u540e\u88ab\u8bc1\u660e\u662f\u6d3b\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u72b6\u6001\u4e5f\u662f\u6d3b\u7684\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u7528\u72b6\u538b\u7684\u65b9\u6cd5\u628a\u4e00\u4e2a\u5c40\u9762\u538b\u7f29\u6210\u4e00\u4e2a\u4e0d\u8d85\u8fc7$2^{25}$\u7684\u6570\uff0c\u5f00\u4e24\u4e2a$\\texttt{map}$\u6765\u5b58\u5df2\u88ab\u8bc1\u660e\u662f\u6b7b\u7684\u548c\u6d3b\u7684\u7684\u72b6\u6001\u3002\n\n\u5728\u5224\u5b9a\u53ef\u884c\u7684\u65f6\u5019\uff0c\u5982\u679c\u5230\u8fd9\u4e00\u4ee3\u5df2\u7ecf\u88ab\u8bc1\u660e\u662f\u6b7b\u7684\uff0c\u90a3\u4e48\u539f\u6765\u7684\u72b6\u6001\u80af\u5b9a\u5c31\u662f\u6b7b\u7684\uff0c\u628a\u539f\u6765\u7684\u72b6\u6001\u52a0\u5165\u5230\u88ab\u8bc1\u660e\u662f\u6b7b\u7684\u7684\u72b6\u6001\u7684\u96c6\u5408\u91cc\u3002\n\n\u540c\u7406\uff0c\u5982\u679c\u8fd9\u4e00\u4ee3\u88ab\u8bc1\u660e\u662f\u6d3b\u7684\uff0c\u90a3\u4e48\u539f\u6765\u7684\u72b6\u6001\u80af\u5b9a\u4e5f\u662f\u6d3b\u7684\uff0c\u628a\u5b83\u52a0\u5165\u5230\u88ab\u8bc1\u660e\u662f\u6d3b\u7684\u7684\u96c6\u5408\u91cc\u3002\n\n\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u5c31\u4e0d\u7528\u5bf9\u6bcf\u4e00\u4e2a\u72b6\u6001\u90fd\u53bb\u7e41\u884d$60$\u4ee3\u6216\u8005\u7e41\u884d\u5230\u6b7b\uff0c\u65f6\u95f4\u4f18\u5316\u4e86\u5f88\u591a\uff0c$5\\times 5$\u5341\u5206\u949f\u5c31\u80fd\u8dd1\u5b8c\u4e86\u3002\n\n\u4e8e\u662f\u4e00\u4e2a\u4e00\u4e2a\u5c1d\u8bd5\uff0c\u5c31\u4f1a\u51fa\u73b0\u8fd9\u6837\u4e00\u4e2a\u8868\uff1a\n\n$$\\begin{matrix}0&0&0&0&0\\\\0&5&18&73&267\\\\0&18&150&1533&11398\\\\0&73&1533&31828&469972\\\\0&267&11398&469972&12785753\\end{matrix}$$\n\n\u4ee3\u7801\u7684\u8bdd\u5c31\u4e0d\u653e\u51fa\u6765\u4e86\uff0c\u8fd9\u91cc\u628a\u8868\u7684$\\texttt{generator}$\u653e\u51fa\u6765\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\nconst ll MAXN=15;\nll length,width,lived;\nunordered_map<ll,ll>mp,mp2;\nchar x[MAXN][MAXN],y[MAXN][MAXN],k[MAXN][MAXN];\nll vx[8]={-1,-1,0,1,1,1,0,-1},vy[8]={0,1,1,1,0,-1,-1,-1};\ninline ll read()\n{\n\tregister int num=0,neg=1;\n\tregister char ch=getchar();\n\twhile(!isdigit(ch)&&ch!='-')\n    {\n\t\tch=getchar();\n    }\n\tif(ch=='-')\n    {\n\t\tneg=-1;\n\t\tch=getchar();\n    }\n\twhile(isdigit(ch))\n\t{\n\t\tnum=(num<<3)+(num<<1)+(ch-'0');\n\t\tch=getchar();\n\t}\n\treturn num*neg;\n}\ninline bool isin(ll num,ll minn,ll maxn)\n{\n\treturn num>=minn&&num<=maxn;\n}\ninline ll getN(ll x_,ll y_)\n{\n\tll res=0;\n\tfor(register int i=0;i<8;i++)\n\t{\n\t\tll xx=x_+vx[i],yy=y_+vy[i];\n\t\tif(isin(xx,0,length-1)&&isin(yy,0,width-1))\n\t\t{\n\t\t\tres+=(x[xx][yy]=='*');\n\t\t}\n\t}\n\treturn res;\n}\ninline void getNxt()\n{\n\tfor(register int i=0;i<length;i++)\n\t{\n\t\tfor(register int j=0;j<width;j++)\n\t\t{\n\t\t\tll n=getN(i,j);\n\t\t\tif(x[i][j]=='*')\n\t\t\t{\n\t\t\t\ty[i][j]=(n==2||n==3)?'*':'.';\n\t\t\t}\n\t\t\tif(x[i][j]=='.')\n\t\t\t{\n\t\t\t\ty[i][j]=(n==3)?'*':'.';\n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i=0;i<length;i++)\n\t{\n\t\tfor(register int j=0;j<width;j++)\n\t\t{\n\t\t\tx[i][j]=y[i][j];\n\t\t}\n\t}\n}\ninline void test()\n{\n\tll xt=1,num=0;\n\twhile(xt<60)\n\t{\t\n\t\txt++,getNxt(),num=0;\n\t\tfor(register int i=0;i<length;i++)\n\t\t{\n\t\t\tfor(register int j=0;j<width;j++)\n\t\t\t{\n\t\t\t\tnum=(num<<1)+(x[i][j]=='*');\n\t\t\t}\n\t\t}\n\t\tif(mp2.find(num)!=mp2.end())\n\t\t{\n\t\t\tnum=0;\n\t\t\tfor(register int i=0;i<length;i++)\n\t\t\t{\n\t\t\t\tfor(register int j=0;j<width;j++)\n\t\t\t\t{\n\t\t\t\t\tnum=(num<<1)+(k[i][j]=='*');\n\t\t\t\t}\n\t\t\t}\n\t\t\tmp2[num]=1,lived++;\n\t\t\treturn;\n\t\t}\n\t\tif(mp.find(num)!=mp.end())\n\t\t{\n\t\t\t// printf(\"The life died at generation %d\\n\",xt);\n\t\t\tnum=0;\n\t\t\tfor(register int i=0;i<length;i++)\n\t\t\t{\n\t\t\t\tfor(register int j=0;j<width;j++)\n\t\t\t\t{\n\t\t\t\t\tnum=(num<<1)+(k[i][j]=='*');\n\t\t\t\t}\n\t\t\t}\n\t\t\tmp[num]=1;\n\t\t\treturn;\n\t\t}\n\t}\n\t//puts(\"The life will never die!\");\n\tnum=0;\n\tfor(register int i=0;i<length;i++)\n\t{\n\t\tfor(register int j=0;j<width;j++)\n\t\t{\n\t\t\tnum=(num<<1)+(k[i][j]=='*');\n\t\t}\n\t}\n\tmp2[num]=1,lived++;\n}\ninline void dfs(ll x_,ll y_)\n{\n\tif(x_==length&&!y_)\n\t{\n\t\tfor(register int i=0;i<length;i++)\n\t\t{\n\t\t\tfor(register int j=0;j<width;j++)\n\t\t\t{\n\t\t\t\tx[i][j]=k[i][j];\n\t\t\t}\n\t\t}\n\t\ttest();\n\t\treturn;\n\t}\n\tll xx=x_,yy=y_+1;\n\tif(yy==width)\n\t{\n\t\txx++,yy=0;\n\t}\n\tk[x_][y_]='.',dfs(xx,yy);\n\tk[x_][y_]='*',dfs(xx,yy);\n}\nint main()\n{\n\tlength=read(),width=read();\n\tmp[0]=1,dfs(0,0);\n\tprintf(\"%d\\n\",lived);\n}\n```",
        "postTime": 1562907789,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5457 \u3010[THUPC2018]\u751f\u751f\u4e0d\u606f\u3011"
    },
    {
        "content": "\u5728\u6211\u7684\u535a\u5ba2\u56ed\u770b\u6548\u679c\u66f4\u4f73\uff1a[\u70b9\u8fd9\u91cc](https://www.cnblogs.com/1000Suns/p/11173116.html)\n\n\u672c\u6765\u89c9\u5f97\u5c31\u4e00 SB \u9898\u6ca1\u5fc5\u8981\u5199\u9898\u89e3\u7684\uff0c\u4f46\u662f\u770b\u89c1\u552f\u4e00\u4e00\u7bc7\u9898\u89e3\u7684\u6253\u8868\u4ee3\u7801\u90a3\u4e48\u6162\uff0c\u8fd8\u662f\u5199\u4e00\u53d1\u5427\u3002\n\n\u9996\u5148 $n,m\\le 5$\uff0c\u8fd9\u662f\u53ef\u4ee5\u6253\u8868\u7684\u3002\n\n\u672c\u5730\u600e\u4e48\u5bf9\u4e8e\u4e00\u4e2a $n,m$ \u6c42\u7b54\u6848\uff1f\u6b64\u65f6\u867d\u7136\u590d\u6742\u5ea6\u4e0d\u9700\u8981\u592a\u4f18\uff0c\u4f46\u662f\u8fd8\u662f\u5f97\u591f\u5feb\u3002\n\n\u4e00\u4e2a\u60f3\u6cd5\u662f\u679a\u4e3e\u6bcf\u4e2a\u521d\u59cb\u72b6\u6001\uff0c\u4e0d\u505c\u6a21\u62df\u3002\u56e0\u4e3a\u603b\u72b6\u6001\u6570\u53ea\u6709 $O(2^{nm})$ \u79cd\uff0c\u6240\u4ee5\u4f1a\u51fa\u73b0\u5468\u671f\u3002\n\n \u5982\u679c\u538b\u7f29\u72b6\u6001\uff0c\u590d\u6742\u5ea6\u662f $O(4^{nm}nm)$\u3002\u592a\u5927\u4e86\u3002\n\n\u4f46\u662f\uff0c\u867d\u7136\u4e00\u4e2a\u72b6\u6001\u7684\u5468\u671f\u53ef\u80fd\u5f88\u957f\uff0c\u4f46\u662f\u5982\u679c\u4e00\u8d77\u8003\u8651\u6240\u6709\u72b6\u6001\u5462\uff1f\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u72b6\u6001 $S$\uff0c\u76f4\u63a5\u6a21\u62df\u5b83\u4e0b\u4e00\u8f6e\u4f1a\u53d8\u6210\u5565\uff08\u8bbe\u4e3a $T$\uff09\u3002\u90a3\u4e48\u8fde\u4e00\u6761 $S\\rightarrow T$ \u7684\u8fb9\u3002\n\n\u90a3\u4e48\u5c31\u662f\u95ee\u6709\u591a\u5c11\u4e2a\u8fb9\u8d70\u4e0d\u5230 $0$\u3002\n\n\u53ef\u4ee5\u5efa\u53cd\u56fe\uff0c\u8ba1\u7b97\u4ece $0$ \u80fd\u8d70\u5230\u591a\u5c11\u4e2a\u70b9\u3002\n\n\u590d\u6742\u5ea6 $O(2^{nm}nm)$\u3002\u9664\u4e86 $n=m=5$ \u7684\u70b9\u5927\u6982\u8981\u8dd1 10s\uff0c\u5176\u5b83\u7684\u90fd\u53ef\u4ee5 1s \u51fa\u3002\uff08\u90a3\u4f4d\u8981\u8dd1 10min\u2026\u2026\u6362\u6210\u6211\u6839\u672c\u5c31\u4e0d\u60f3\u7b49\u4e86\u2026\u2026\uff09\n\n\u4ee3\u7801\u5c31\u6ca1\u5fc5\u8981\u653e\u4e86\u3002",
        "postTime": 1563544114,
        "uid": 72118,
        "name": "AThousandSuns",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5457 \u3010[THUPC2018]\u751f\u751f\u4e0d\u606f\u3011"
    },
    {
        "content": "$\\mathbb{THUPC}$\u521d\u8d5b\u524d\u5199\u4e00\u7bc7\u9898\u89e3\u4ee5\u6c42$\\texttt{rp++}$\n\n\u521d\u89c1\u9898\u76ee\uff1a\u8fd9\u5b8c\u5168\u6ca1\u6709\u89c4\u5f8b\u53ef\u5faa\u554aqaq\uff0c\u6362\u4e00\u9898\u5427\uff08\n\n\u770b\u89c1\u6570\u636e\u8303\u56f4\uff1a\u61c2\u4e86\uff0c\u79bb\u7ebf\u8dd1\u7b54\u6848\u7136\u540e\u6253\u8868\n\n\u5199\u5b8c\u66b4\u529b\u540e\uff1a\u7b49\u4e86$\\texttt{5 min}$\u8fd8\u6ca1\u8dd1\u51fa\u6765\n\n\u4e8e\u662f\u6362\u4e86\u4e2a\u601d\u8def~~\u6253\u8868~~\u5c31\u8fc7\u4e86\n\n\n\u6211\u4eec\u77e5\u9053\u5bf9\u4e8e\u4e00\u4e2a01\u77e9\u9635$\\texttt{e}$\u6765\u8bf4\uff0c\u5b83\u7ecf\u8fc7\u4e00\u6b21\u53d8\u6362\u540e\u7684$\\texttt{e'}$\u662f\u552f\u4e00\u786e\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5**\u53cd\u5411\u5efa\u8fb9**\uff0c\u8fde\u4e00\u6761$\\texttt{e'}\\to\\texttt{e}$\u7684\u8fb9\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u77e5\u9053\u4e00\u79cd\u77e9\u9635\u5982\u679c\u6700\u7ec8\u706d\u7edd\u4e86\u90a3\u4e48\u6700\u540e\u5b83\u80af\u5b9a\u5f52\u4e8e\u865a\u65e0\uff08\u5e9f\u8bdd\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u6700\u7ec8\u7edf\u8ba1\u65f6\u4ece\u865a\u65e0\u77e9\u9635\u5f00\u59cb\u641c\u7d22\uff0c\u8bb0\u5f55\u641c\u7d22\u4e2d\u7ecf\u8fc7\u4e86\u54ea\u4e9b\u70b9\uff0c\u8fd9\u4e9b\u70b9\u663e\u7136\u662f\u6700\u7ec8\u4f1a\u5f52\u4e8e\u865a\u65e0\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u77e9\u9635\u603b\u6570\u51cf\u53bb\u641c\u7d22\u7ecf\u8fc7\u7684\u70b9\u603b\u6570\u5c31\u662f\u6211\u4eec\u6240\u6c42\u7684\u7b54\u6848\u4e86\u3002\n\n\u8003\u8651\u4f18\u5316\uff1a\n\n\u6734\u7d20\u7684\u65b9\u6cd5\u662f\u5199\u77e9\u9635$\\texttt{hash}$\u6216\u8005\u5f00$\\texttt{map}$\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\u4f1a\u8ba9\u65f6\u95f4\u590d\u6742\u5ea6\u591a\u4e00\u4e2a$\\log$\uff0c~~\u60a8\u5f88\u6709\u53ef\u80fd\u7b49\u4e0d\u53ca~~\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4e8c\u8fdb\u5236\u72b6\u538b\u628a\u6574\u4e2a\u77e9\u9635\u538b\u8fdb\u53bb\uff0c\u7531\u4e8e\u77e9\u9635\u4e2d\u7684\u6bcf\u4e2a\u70b9\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u6240\u4ee5\u603b\u60c5\u51b5\u6570\u53ea\u6709$2^{nm}$\u79cd\uff0c\u7a7a\u95f4\u5f00\u7684\u4e0b\u3002\n\n\u6240\u4ee5\u672c\u9898\u5c31\u505a\u5b8c\u4e86\uff0c$\\texttt{Generator}$\u590d\u6742\u5ea6$O(2^{nm}nm)$\uff0c$n=m=5$\u7684\u70b9\u4e5f\u5f88\u5feb\u5c31\u80fd\u8dd1\u5b8c$(20s)$\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nvector<int> v[(1 << 25) + 5];\nint now[6][6], ans[6][6], n, m, cnt;\nbool vis[(1 << 25) + 5];\nint to(int x) {\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n            now[i][j] = (bool)(x & (1 << ((i - 1) * m + j - 1)));\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++) {\n            int tmp = now[i - 1][j] + now[i - 1][j - 1] + now[i - 1][j + 1] +\n                      now[i][j + 1] + now[i][j - 1] + now[i + 1][j] +\n                      now[i + 1][j - 1] + now[i + 1][j + 1];\n            ans[i][j] = now[i][j];\n            if (now[i][j])\n                if (!(tmp == 2 || tmp == 3)) ans[i][j] = 0;\n            if (!now[i][j])\n                if (tmp == 3) ans[i][j] = 1;\n        }\n    int ANS = 0;\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n            ANS += ans[i][j] * (1 << ((i - 1) * m + j - 1));\n    return ANS;\n}\nvoid dfs(int dep) {\n    if (vis[dep]) return;\n    ++cnt;\n    vis[dep] = 1;\n    for (int i = 0; i < v[dep].size(); i++) dfs(v[dep][i]);\n}\nint main() {\n    cin >> n >> m;\n    for (int i = 1; i < (1 << (n * m)); i++) v[to(i)].push_back(i);\n    dfs(0);\n    cout << (1 << (n * m)) - cnt;\n}\n```\n\nAC\u7a0b\u5e8f\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint T, n, m;\nint main() {\n    cin >> T;\n    while (T--) {\n        cin >> n >> m;\n        if (n == 1 && m == 1) cout << \"0\\n\";\n        if (n == 1 && m == 2) cout << \"0\\n\";\n        if (n == 1 && m == 3) cout << \"0\\n\";\n        if (n == 1 && m == 4) cout << \"0\\n\";\n        if (n == 1 && m == 5) cout << \"0\\n\";\n        if (n == 2 && m == 1) cout << \"0\\n\";\n        if (n == 3 && m == 1) cout << \"0\\n\";\n        if (n == 4 && m == 1) cout << \"0\\n\";\n        if (n == 5 && m == 1) cout << \"0\\n\";\n        if (n == 2 && m == 2) cout << \"5\\n\";\n        if (n == 2 && m == 3) cout << \"18\\n\";\n        if (n == 2 && m == 4) cout << \"73\\n\";\n        if (n == 2 && m == 5) cout << \"267\\n\";\n        if (n == 3 && m == 2) cout << \"18\\n\";\n        if (n == 3 && m == 3) cout << \"150\\n\";\n        if (n == 3 && m == 4) cout << \"1533\\n\";\n        if (n == 3 && m == 5) cout << \"11398\\n\";\n        if (n == 4 && m == 2) cout << \"73\\n\";\n        if (n == 4 && m == 3) cout << \"1533\\n\";\n        if (n == 4 && m == 4) cout << \"31828\\n\";\n        if (n == 4 && m == 5) cout << \"469972\\n\";\n        if (n == 5 && m == 2) cout << \"267\\n\";\n        if (n == 5 && m == 3) cout << \"11398\\n\";\n        if (n == 5 && m == 4) cout << \"469972\\n\";\n        if (n == 5 && m == 5) cout << \"12785753\\n\";\n    }\n}\n```\n",
        "postTime": 1607606729,
        "uid": 223797,
        "name": "Remake_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5457 \u3010[THUPC2018]\u751f\u751f\u4e0d\u606f\u3011"
    }
]