[
    {
        "content": "\u4eba\u751f\u7b2c\u4e00\u9053\u7701\u9009/NOI-\uff08\u5176\u5b9e\u5e76\u6ca1\u6709\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u7801\u91cf\u6709\u70b9\u5927\u5427\uff09\u7684\u6811\u5f62Dp\uff0c\u770b\u7740\u9898\u89e3\u8fd8\u662f\u60f3\u4e86\u5f88\u4e45~~\uff08\u4e2a\u4eba\u8ba4\u4e3a\u5b98\u65b9\u7684SOL\u6709\u70b9\u626f\uff09~~\n\n-------------------\n\n\u697c\u4e0b\u63d0\u5230f[i][1]>=f[i][0]\uff0c\u6211\u4e5f\u6ca1\u6cd5\u8bc1\u660e\uff0c\u4f46\u8fd9\u5176\u5b9e\u672c\u8d28\u4e0a\u548c\u8fd9\u9053\u9898\u6ca1\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5224\u65ad\u6765\u89e3\u51b3\u3002\u800c\u4e14\uff0c\u697c\u4e0bdalao\u7684dfs\u91cc\u7adf\u7136\u662f\u4e00\u4e2afor\u8bed\u53e5\u7684\uff0c\u800c\u6211\u5199\u4e864\u4e2a\u2026\u2026\n\n\u9996\u5148\u6811\u5f62Dp\u662f\u5f88\u660e\u663e\u7684\uff0cf[i][0]\u8868\u793ai\u7684\u5b50\u6811\u4e2d\uff0ci\u4e0d\u53c2\u4e0e\u5339\u914d\u7684\u6700\u5927\u5339\u914d\u6570\uff0c\u540c\u6837f[i][1]\u8868\u793ai\u53c2\u4e0e\u5339\u914d\u7684\u6700\u5927\u5339\u914d\u6570\u3002\u8fd9\u6837\u7b2c\u4e00\u4e2a\u5b50\u95ee\u9898\u7684\u7b54\u6848\u5c31\u662fMax(f[1][0], f[1][1])\u3002\uff08\u9898\u76ee\u7ed9\u51fa\u7684\u662f\u65e0\u6839\u6811\uff0c\u6211\u4eec\u5c31\u628a1\u5f53\u6839\u5427\uff09\n\n\u5bf9\u4e8ef[i][0]\u7684\u8f6c\u79fb\u5f88\u7b80\u5355\uff0c\u65e2\u7136i\u4e0d\u53c2\u4e0e\u5339\u914d\uff0c\u90a3\u4e48f[i][0]\u5c31\u662f\u5b83\u7684\u6bcf\u68f5\u5b50\u6811\u7684\u6700\u5927\u5339\u914d\u4e4b\u548c\uff0c\u56e0\u4e3a\u663e\u800c\u6613\u89c1\uff0c\u4e24\u4e2a\u4e0d\u540c\u5b50\u6811\u5185\u7684\u8282\u70b9\u4e0d\u53ef\u80fd\u5339\u914d\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u5b50\u6811\u662f\u72ec\u7acb\u7684\u3002\u6240\u4ee5\uff0c\u5c31\u662f\u6240\u6709\u513f\u5b50v\u7684Max(f[v][0],f[v][1])\u7684\u603b\u548c\u3002\uff08\u5b50\u8282\u70b9\u53c2\u4e0d\u53c2\u4e0e\u90fd\u6ca1\u5173\u7cfb\uff09\n\n\u5bf9\u4e8ef[i][1]\uff0c\u60c5\u51b5\u7a0d\u7a0d\u590d\u6742\u4e00\u70b9\u3002\u7531\u4e8ei\u8282\u70b9\u6700\u591a\u53ea\u80fd\u88ab\u5339\u914d\u4e00\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u6765\u8003\u8651\u3002\u5bf9\u4e8e\u8282\u70b9u\uff0c\u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9v\u6765\u548c\u81ea\u5df1\u5339\u914d\uff0c\u5269\u4f59\u7684\u4ecd\u7136\u53d6\u6700\u5927\u503c\uff0c\u8fd9\u6837\u5269\u4f59\u7684\u6700\u5927\u503c\u5f88\u663e\u7136\u662ff[u][0]-Max(f[v][0],f[v][1])\uff0c\u5e76\u4e14\u9664\u4e86\u5b50\u8282\u70b9v\uff0cv\u7684\u5176\u4f59\u513f\u5b50\u4f9d\u7136\u662f\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u518d\u52a0\u4e0af[v][0]\u3002\u6240\u4ee5\u8f6c\u79fb\u65b9\u7a0b\u5373\u4e3af[u][1] = Max(f[u][1], f[u][0]-Max(f[v][0],f[v][1])+f[v][0]+1);\n\n\u7136\u540e\u8003\u8651\u7b2c\u4e8c\u4e2a\u5b50\u95ee\u9898\uff0c\u65b9\u6848\u6570\u600e\u4e48\u529e\uff1f\u4f9d\u7136Dp\u3002g[i][k]\u8868\u793a\u5bf9\u5e94\u7684f[i][k]\u7684\u65b9\u6848\u6570\u3002\u4f46\u6ce8\u610f\u4e86\uff0c\u7b54\u6848\u4e0d\u662fg[1][1]\uff0c\u56e0\u4e3a\u6709\u53ef\u80fdf[1][0]==f[1][1]\uff0c\u8fd9\u65f6\u5019\u6700\u5927\u503c\u6709\u4e24\u4e2a\uff0c\u6240\u4ee5\u7b54\u6848\u662fg[1][0]+g[1][1]\u3002\u5bf9\u4e8e\u5176\u4ed6\u60c5\u51b5\uff0c\u8f93\u51faf\u8f83\u5927\u7684\u90a3\u4e2a\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8fd8\u662f\u5148\u8003\u8651g[i][0]\u5982\u4f55\u8f6c\u79fb\uff0c\u5bf9\u4e8e\u8282\u70b9u\uff0c\u5b83\u7531\u4e8e\u662f\u7531\u5404\u4e2a\u5b50\u8282\u70b9\u8f6c\u79fb\u8fc7\u6765\u7684\uff0c\u6240\u4ee5\u603b\u7684\u65b9\u6848\u6570\u5c31\u662f\u5404\u4e2a\u5b50\u8282\u70b9\u6700\u5927\u503c\u65b9\u6848\u6570\u7684\u79ef\u3002\u8fd8\u662f\u4e00\u6837\uff0c\u9700\u8981\u7279\u5224\u4e00\u4e0bg[v][0] == g[v][1]\u7684\u60c5\u51b5\u3002\n\n\u6700\u96be\u7684\u4e5f\u5c31\u662fg[i][1]\u7684\u8f6c\u79fb\u4e86\u3002\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u5224\u65ad\u4e00\u4e0b\u54ea\u4e9b\u8282\u70b9\u4e0e\u6839\u5339\u914d\u4ee5\u540e\u4f1a\u8f6c\u79fb\u51fa\u6765\u6700\u5927\u503cf[u][1]\uff0c\u800c\u5224\u65ad\u8fd9\u4e2a\u53ea\u9700\u8981\u6309\u7167\u524d\u9762\u7684\u65b9\u7a0b\u518d\u63a8\u4e00\u904d\u770b\u770b\u662f\u5426\u76f8\u7b49\u5c31\u53ef\u4ee5\u4e86\u3002\u5373if(f[u][0]-Max(f[v][0],f[v][1])+f[v][0]+1 == f[u][1])\u3002\u800c\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u8fd8\u662f\u4eff\u7167\u524d\u9762\u7684\u601d\u7ef4\u8fc7\u7a0b\uff0c\u4f46\u662f\u6ce8\u610f\u65b9\u6848\u6570\u4e2d\u9664\u53bb\u4e00\u90e8\u5206\u4f7f\u7528\u9664\u6cd5\u800c\u4e0d\u662f\u51cf\u6cd5\uff08\u524d\u9762\u662f\u7531\u4e58\u6cd5\u8f6c\u79fb\u8fc7\u6765\u7684\uff09\uff0c\u52a0\u4e0a\u4e5f\u8981\u6539\u6210\u4e58\u4e0a\u3002\u5e76\u4e14\u8fd8\u662f\u8981\u7279\u5224f[v][0]==f[v][1]\u7684\u60c5\u51b5\u3002\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n\n\u60f3\u51fa\u4e0a\u9762\u8fd9\u4e9b\u5e76\u4e0d\u590d\u6742\uff0c\u800c\u6211\u5374\u5728g\u7684\u521d\u59cb\u5316\u4e0a\u5361\u4e86\u5c06\u8fd1\u4e00\u5c0f\u65f6\u3002\u4e00\u5f00\u59cb\u6211\u628a\u6bcf\u4e2ag[i][0]\u548cg[i][1]\u90fd\u521d\u59cb\u5316\u4e3a1\uff0c\u7ed3\u679c\u6302\u4e86\u3002\u8c03\u8bd5\u5343\u767e\u904d\u4e4b\u540e\u628ag[i][1]\u7684\u521d\u59cb\u5316\u5220\u6389\u4ee5\u540e\u7a81\u7136\u5c31\u5bf9\u4e86\u3002\u8fd9\u4e2a\u73b0\u5728\u6211\u662f\u8fd9\u6837\u7406\u89e3\u7684\uff0c\u56e0\u4e3a\u6211\u7684g[i][0]\u662f\u8981\u62ff\u53bb\u76f4\u63a5\u4e58\u7684\uff0c\u663e\u7136\u4e0d\u80fd\u5148\u8d4b\u62100\uff0c\u4e0d\u7136\u63a8\u51fa\u6765\u7684g[i][0]\u5c31\u5168\u662f0\u4e86\u3002\u5e76\u4e14g[i][1]\u662f\u52a0\u7684\uff0c\u521a\u5f00\u59cb\u5982\u679c\u5c31\u662f1\u5c31\u4f1a\u5f71\u54cd\u7ed3\u679c\u3002\u8fd9\u4e2a\u53ea\u4e0d\u8fc7\u662f\u4e00\u4e2a\u975e\u5e38\u7275\u5f3a\u7684\u7406\u89e3\uff0c\u5e0c\u671b\u5927\u795e\u80fd\u7ed9\u51fa\u8bc1\u660e\u2026\u2026\n\n\u53e6\u5916\u8fd9\u9053\u9898\u8981\u9ad8\u7cbe\u4e5f\u662f\u975e\u5e38\u5751\u7684\uff0c\u65e2\u7136\u9ad8\u7cbe\u6a21\u677f\u90a3\u4e48\u591a\uff0c\u6211\u4e5f\u4e0d\u597d\u610f\u601d\u76d7\u7248\u6743\uff0c\u9ad8\u7cbe\u4ee3\u7801\u5c31\u4e0d\u8d34\u4e86\u3002\n\n```cpp\n/*written by -=qxz=- */\n////////////////////////////////\u6b64\u5904\u7701\u7565200\u884c\nint n,u,m,v;\nvector <int> G[N];\nint f[N][2];\nBigInteger g[N][2];\ninline void AddEdge(int u, int v){\n\tG[u].push_back(v);\n}\nvoid DP(int u, int fa){\n\tint v,sz=G[u].size(),not_leaf=0;\n\tfor(int i = 0; i < sz; ++i){\n\t\tif(G[u][i] == fa) continue;\n\t\t++not_leaf;\n\t}\n\tg[u][0] = 1;\n\tif(!not_leaf){\n\t\treturn;\n\t} \n\tfor(int i = 0; i < sz; ++i){\n\t\tv = G[u][i];\n\t\tif(v == fa) continue;\n\t\tDP(v,u);\n\t\tf[u][0] += Max(f[v][0], f[v][1]);\n\t\tif(f[v][0] == f[v][1]) g[u][0] *= (g[v][0] + g[v][1]);\n\t\telse{\n\t\t\tif(f[v][0] > f[v][1]) g[u][0] *= g[v][0];\n\t\t\tif(f[v][1] > f[v][0]) g[u][0] *= g[v][1];\n\t\t}\n\t}\n\tf[u][1] = f[u][0];\n\tfor(int i = 0; i < sz; ++i){\n\t\tv = G[u][i];\n\t\tif(v == fa) continue;\n\t\tf[u][1] = Max(f[u][1], f[u][0]-Max(f[v][0],f[v][1])+f[v][0]+1);\n\t}\n\tfor(int i = 0; i < sz; ++i){\n\t\tv = G[u][i];\n\t\tif(v == fa) continue;\n\t\tif(f[u][0]-Max(f[v][0],f[v][1])+f[v][0]+1 == f[u][1]){\n\t\t\tif(f[v][0] == f[v][1] && g[v][0]+g[v][1] != 0){\n\t\t\t\tg[u][1] += g[u][0]/(g[v][0]+g[v][1])*g[v][0];\n\t\t\t} \n\t\t\telse{\n\t\t\t\tif(f[v][0] > f[v][1] && g[v][0] != 0){\n\t\t\t\t\tg[u][1] += g[u][0]/(g[v][0])*g[v][0];\n\t\t\t\t} \n\t\t\t\tif(f[v][1] > f[v][0] && g[v][1] != 0){\n\t\t\t\t\tg[u][1] += g[u][0]/(g[v][1])*g[v][0];\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n\tread(n);\n\tfor(int i = 1; i <= n; ++i){\n\t\tread(u);\n\t\tread(m);\n\t\tfor(int j = 1; j <= m; ++j){\n\t\t\tread(v);\n\t\t\tAddEdge(u,v);\n\t\t}\n\t}\n\tDP(1,0);\n\tprintf(\"%d\\n\",Max(f[1][0], f[1][1]));\n\tif(f[1][0] == f[1][1]) cout << g[1][0]+g[1][1];\n\telse{\n\t\tif(f[1][0] > f[1][1]) cout << g[1][0];\n\t\tif(f[1][1] > f[1][0]) cout << g[1][1];\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1526647227,
        "uid": 41095,
        "name": "inexistent",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1623 \u3010[CEOI2007]\u6811\u7684\u5339\u914dTreasury\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6211\u60f3\u7684\u65b9\u7a0b\u8ddfdalao\u4eec\u4e0d\u5927\u4e00\u6837\u554a\n\n\u5b9a\u4e49`f[3][MAXN]`\n\n`f[0][x]`\u4e3a\u4ee5`x`\u4e3a\u6839\u5b50\u6811\u4e0e\u513f\u5b50\u8fde\u7684\u6700\u5927\u5339\u914d\n\n`f[1][x]`\u4e3a\u4e0e`father`\u8fde\u7684\u6700\u5927\u5339\u914d\n\n`f[2][x]`\u4e3a\u72ec\u7acb\u65f6\u7684\u6700\u5927\u5339\u914d\n\n`f[0][x]`\u8f6c\u79fb\u5c31\u662f\u4ece\u513f\u5b50\u4e2d\u9009\u4e00\u4e2a\u4e0e\u7956\u5148\u8fde\u5176\u4ed6\u72ec\u7acb\u6216\u8fde\u513f\u5b50\n\n`f[1][x]`\u8f6c\u79fb\u513f\u5b50\u4eec\u53ef\u4ee5\u72ec\u7acb\u6216\u8fde\u513f\u5b50\uff0c\u9664\u6839\u8282\u70b9\u5916\u521d\u59cb\u4e3a1\n\n`f[2][x]`\u8f6c\u79fb\u513f\u5b50\u53ef\u4ee5\u4e0d\u9009\u6216\u8005\u8fde\u513f\u5b50\uff0c\u521d\u59cb\u4e3a0\n\n\u8ba1\u6570\u65f6\u6ce8\u610f\u52a0\u6cd5\u539f\u7406\u4e0e\u4e58\u6cd5\u539f\u7406\u7684\u8fd0\u7528\n\n\u987a\u4fbf\u8d21\u732e\u4e00\u4e2a\u538b\u4e5d\u4f4d\u9ad8\u7cbe\u677f\u5b50\n\n```cpp\n#include\"cstdio\"\n#include\"cstring\"\n#include\"iostream\"\n#include\"algorithm\"\nusing namespace std;\n\nconst int MAXN=1005;\nconst int MOD=1e9;\n\nint n,np,maxn,root;\nint fa[MAXN],h[MAXN];\nint f[3][MAXN];\nstruct rpg{\n\tint li,nx;\n}a[MAXN];\nstruct Big{\n\tlong long v[25];\n\t\n\tvoid reset(){memset(v,0,sizeof(v));v[0]=1;}\n\tvoid write(){printf(\"%lld\",v[v[0]]);for(int i=v[0]-1;i;--i) printf(\"%09lld\",v[i]);puts(\"\");}\n\tvoid pls(Big a,Big b){\n\t\treset();\n\t\tv[0]=max(a.v[0],b.v[0])+1;\n\t\tfor(int i=1;i<=v[0];++i){\n\t\t\tv[i]+=a.v[i]+b.v[i];\n\t\t\tif(v[i]>=MOD) v[i]-=MOD,++v[i+1];\n\t\t}if(!v[v[0]]&&v[0]>1) --v[0];\n\t\treturn;\n\t}\n\t\n\tvoid mul(Big a,Big b){\n\t\treset();\n\t\tv[0]=a.v[0]+b.v[0];\n\t\tfor(int i=1;i<=a.v[0];++i){\n\t\t\tfor(int j=1;j<=b.v[0];++j){\n\t\t\t\tv[i+j-1]+=a.v[i]*b.v[j];\n\t\t\t\tif(v[i+j-1]>=MOD) v[i+j]+=v[i+j-1]/MOD,v[i+j-1]%=MOD;\n\t\t\t}\n\t\t}while(!v[v[0]]&&v[0]>1) --v[0];\n\t\treturn;\n\t}\n}cnt[3][MAXN],ans;\n\nvoid add(int ls,int nx){a[++np]=(rpg){h[ls],nx};h[ls]=np;}\nvoid dfs(int x)\n{\n\tf[1][x]=(bool)fa[x];\n\tfor(int i=0;i<3;++i) cnt[i][x].reset();\n\tcnt[1][x].v[1]=cnt[2][x].v[1]=1;\n\tif(h[x]) cnt[0][x].v[1]=1;\n\tBig cl,ct;cl.reset();cl.v[1]=1;\n\tfor(int i=h[x];i;i=a[i].li){\n\t\tdfs(a[i].nx);\n\t\tif(f[0][a[i].nx]==f[2][a[i].nx]) ct.pls(cnt[0][a[i].nx],cnt[2][a[i].nx]),cl.mul(cl,ct);\n\t\tif(f[0][a[i].nx]>f[2][a[i].nx]) cl.mul(cl,cnt[0][a[i].nx]);\n\t\tif(f[0][a[i].nx]<f[2][a[i].nx]) cl.mul(cl,cnt[2][a[i].nx]);\n\t\tf[1][x]+=max(f[0][a[i].nx],f[2][a[i].nx]);\n\t\tf[2][x]+=max(f[0][a[i].nx],f[2][a[i].nx]);\n\t}cnt[1][x]=cnt[2][x]=cl;\n\tfor(int i=h[x];i;i=a[i].li){\n\t\tint mx=f[1][a[i].nx];\n\t\tBig clc=cnt[1][a[i].nx];\n\t\tfor(int j=h[x];j;j=a[j].li){\n\t\t\tif(a[j].nx==a[i].nx) continue;\n\t\t\tif(f[0][a[j].nx]==f[2][a[j].nx]) ct.pls(cnt[0][a[j].nx],cnt[2][a[j].nx]),clc.mul(clc,ct);\n\t\t\tif(f[0][a[j].nx]>f[2][a[j].nx]) clc.mul(clc,cnt[0][a[j].nx]);\n\t\t\tif(f[0][a[j].nx]<f[2][a[j].nx]) clc.mul(clc,cnt[2][a[j].nx]);\n\t\t\tmx+=max(f[0][a[j].nx],f[2][a[j].nx]);\n\t\t}if(f[0][x]<mx) f[0][x]=mx,cnt[0][x]=clc;\n\t\telse if(f[0][x]==mx) cnt[0][x].pls(cnt[0][x],clc);\n\t}return;\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i){\n\t\tint x,m;scanf(\"%d%d\",&x,&m);\n\t\twhile(m--){int y;scanf(\"%d\",&y);fa[y]=x;add(x,y);}\n\t}for(int i=1;i<=n;++i) if(!fa[i]) root=i;\n\tdfs(root);maxn=max(f[0][root],f[2][root]);\n\tif(f[0][root]>f[2][root]) ans=cnt[0][root];\n\tif(f[0][root]==f[2][root]) ans.pls(cnt[0][root],cnt[2][root]);\n\tif(f[0][root]<f[2][root]) ans=cnt[2][root];\n\tprintf(\"%d\\n\",maxn);ans.write();\n\treturn 0;\n}\n```\n\nNOIP2018 RP++",
        "postTime": 1541050996,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1623 \u3010[CEOI2007]\u6811\u7684\u5339\u914dTreasury\u3011"
    },
    {
        "content": "#### \u8fd9\u9898\u5f88\u50cfP1411\u6811+P1352\u6ca1\u6709\u4e0a\u53f8\u7684\u821e\u4f1a\u3002\n\n#### \u770b\u770b\u6570\u636e\u8303\u56f4\u5c31\u662f\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u95ee\u9898\uff0c\u5148\u8003\u8651\u4e00\u4e0b\u666e\u901a\u7684dp\u65b9\u6cd5\u3002\u6211\u4eec\u7c7b\u4f3c\u7684\u8bbedp[u][0]\u8868\u793a\u5728\u4ee5u\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u4e0d\u5339\u914du\u6240\u80fd\u5f97\u5230\u7684\u6700\u5927\u5339\u914d\u6570\uff0cdp[u][1]\u8868\u793a\u5728\u4ee5u\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0cu\u5df2\u7ecf\u5339\u914d\u4e86\u6240\u7b49\u5f97\u5230\u7684\u6700\u5927\u5339\u914d\u6570\uff0c\n\n#### \u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u6bd4\u8f83\u5bb9\u6613\u7684\u5f97\u5230\uff1a\n\n#### dp[u][1]=sigma(max(dp[v][1],dp[u][0]+dp[v][0]+1))\n\n#### dp[u][0]=sigma(max(dp[v][0],dp[v][1]))\n\n#### \u4f46\u662f\u7531\u4e8e\u6b64\u9898\u8f83\uff08\u6ca1\u6709\u4e0a\u53f8\u7684\u821e\u4f1a\uff09\u6765\u8bf4\uff0c\u6709\u4e00\u4e2a\u975e\u5e38\u7279\u6b8a\u7684\u5730\u65b9\uff0c\u5c31\u662f\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743\u90fd\u662f1\uff0c\u90a3\u4e48\u4e00\u822c\u6765\u8bf4\uff0cdp[u][1]\u662f\u4e0d\u4f1a\u5c0f\u4e8edp[u][0]\u7684\uff0c\u5373dp[u][1]>=dp[u][0]\u5bf9\u4e8e\u6bcf\u4e2au\u90fd\u662f\u6210\u7acb\u7684\u3002\u90a3\u4e48\u6211\u4eec\u4e0a\u9762\u7684dp[u][0]=max(dp[v][1])\n\n#### \u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u8bc1\u660e\uff1a\u6211\u4eec\u4e0d\u53d6u\uff0c\u8003\u8651u\u7684\u5b50\u6811\u4e2d\u4e00\u4e2a\u4eceu\u5230\u4e00\u4e2a\u53f6\u5b50\u7684\u8def\u5f84\uff0c\u4e3a\u4e86\u66f4\u597d\u7684\u8bc1\u660e\uff0c\u6211\u4eec\u9009\u62e9\u90a3\u6761\u6700\u957f\u7684\u8fb9\uff0c\u6211\u4eec\u7684\u8fd9\u4e2a\u5339\u914d\u6700\u5927\u7684\u65b9\u6848\uff0c\u5728\u8fd9\u4e2a\u8def\u5f84\u4e0a\u5fc5\u7136\u662f\u4e00\u6761\u9009\u4e86\u7684\u8fb9\uff0c\u63a5\u7740\u4e00\u6761\u4e0d\u9009\u7684\u8fb9\uff0c\u90a3\u6211\u4eec\u5bf9\u8fd9\u4e9b\u8fb9\u505a\u4e00\u4e2a\u4fee\u6539\uff1a\u628av\u548c\u5176\u4e00\u4e2a\u513f\u5b50\u8fde\u8fb9\uff0c\u7136\u540e\u628a\u9009\u4e86\u7684\u8fb9\u90fd\u5220\u6389\uff0c\u628a\u8fd9\u4e9b\u8fb9\u7684\u4e0b\u7aef\u70b9\u8fde\u5230\u4e0b\u4e00\u4e2a\u8fb9\u7684\u4e0a\u7aef\u70b9\uff0c\u90a3\u4e48\u5982\u679c\u8def\u5f84\u7684\u957f\u5ea6\u662f\u5076\u6570\uff0c\u6211\u4eec\u5c31\u4f1a\u5f97\u5230\u53e6\u4e00\u4e2a\u548cdp[v][0]\u5339\u914d\u6570\u76f8\u7b49\u7684\u65b9\u6848\uff0c\u5982\u679c\u8def\u5f84\u662f\u5947\u6570\uff0c\u6211\u4eec\u5f97\u5230\u7684\u5c31\u4f1a\u6bd4dp[v][0]\u591a1\u4e2a\u5339\u914d\u8fb9\uff0c\u53ef\u4ee5\u81ea\u5df1\u753b\u4e00\u4e2a\u56fe\u65b9\u4fbf\u7406\u89e3\u3002\n\n#### \u81f3\u4e8e\u65b9\u6848\u6570\uff0c\u5c31\u548c\u6c42\u4e00\u4e2a\u5e8f\u5217\u4e2d\u6700\u5927\u7684\u6570\u6709\u591a\u5c11\u4e2a\u4e00\u6837\uff0c\u6211\u4eec\u5148\u628adp[u][1],dp[u][0]\u641e\u51fa\u6765\uff0c\u7136\u540e\u5bf9\u4e8e\u5339\u914d\u6570\u76f8\u540c\u7684\u76f4\u63a5\u7528\u4e58\u6cd5\u539f\u7406\u641e\u4e00\u641e\u5c31\u884c\u4e86\u3002\n\n#### \u5177\u4f53\u7ed9\u4e2a\u8f6c\u79fb\u65b9\u7a0b\u5427\uff1a\u8bbeg[u][0]\u8868\u793a\u4e0d\u9009u\u7684\u80fd\u5f97\u5230\u6700\u5927\u5339\u914d\u7684\u65b9\u6848\u6570\uff0cg[u][1]\u7c7b\u4f3c\u3002\n\n#### \u90a3\u4e48\uff1a\u5bf9\u4e8eg[u][0]\uff0c\u5982\u679c\u67d0\u4e2adp[v][0]!=dp[v][1]\uff0c\u90a3\u4e48\u5c31\u628ag[u][0]\\*=g[v][1],\u5426\u5219\u5c31\u662fg[u][0]\\*=g[v][1]+g[v][0]\uff08\u8fd9\u6b65\u8fd8\u662f\u6bd4\u8f83\u597d\u7406\u89e3\u7684\uff09\n\n#### \u90a3\u4e48g[u][1]\u5c31\u5dee\u4e0d\u591a\u4e86\u3002\n\n#### \u6700\u540e\u8f93\u51fa\u7684\u65f6\u5019\u5c31\u548c\u8f6c\u79fb\u7684\u65f6\u5019\u641e\u4e00\u4e2a\u7c7b\u4f3c\u7684\u7279\u5224\uff0c\u5176\u4ed6\u7684\u5c31\u662f\u8981\u52a0\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u5c31\u884c\u4e86\u3002\n\n\n#### \u53c2\u8003\u4ee3\u7801\uff1a\n\n\n``` cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define re register\nusing namespace std;\nconst int N=1010;\nstruct Int{\n    static const int Bit=1e4;\n    int a[Bit],size;\n    inline void operator = (const int &x){\n        memset(a,0,sizeof(a));\n        a[size=1]=x;\n    }\n    inline Int operator + (const Int t){\n        Int c=*this;\n        int sz=max(c.size,t.size);\n        for (re int i=1;i<=sz;++i){\n            c.a[i]+=t.a[i];c.a[i+1]+=c.a[i]/Bit;c.a[i]%=Bit;\n        }\n        if (c.a[sz+1])sz++;\n        c.size=sz;\n        return c;\n    }\n    \n    inline Int operator * (const Int t){\n        int sz=size+t.size-1;\n        Int c;c=0;\n        for (re int i=1;i<=size;++i)\n            for (re int j=1;j<=t.size;++j)\n                c.a[i+j-1]+=a[i]*t.a[j];\n        for (re int i=1;i<=sz;i++)\n            c.a[i+1]+=c.a[i]/Bit,c.a[i]%=Bit;\n        if (c.a[sz+1])sz++;c.size=sz;\n        return c;\n    }\n    inline void out(){\n        printf(\"%d\",a[size]);\n        for (re int i=size-1;i;--i)\n            printf(\"%04d\",a[i]);\n    }\n}g[N][2];\nint dp[N][2],n,a[N],to[N],next[N],EdgeCnt=0;\ninline void operator *= (Int &a,Int b){a=a*b;}\ninline void operator += (Int &a,Int b){a=a+b;}\ninline int read(){\n    re int x=0,f=1;char ch=getchar();\n    while (ch<'0' || ch>'9'){if (ch=='-')f=-1;ch=getchar();}\n    while ('0'<=ch && ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*f;\n}\ninline void adde(int u,int v){\n    int &p=EdgeCnt;\n    to[++p]=v;next[p]=a[u];a[u]=p;\n}\ninline void dfs(int u){\n    g[u][0]=1;g[u][1]=1;\n    for (re int p=a[u];p;p=next[p]){\n        int v=to[p];\n        dfs(v);\n        if (dp[u][1]){\n            dp[u][1]+=dp[v][1];\n            if (dp[v][0]^dp[v][1])g[u][1]*=g[v][1];\n                else g[u][1]*=g[v][0]+g[v][1];\n        }\n        int t=dp[u][0]+dp[v][0]+1;\n        if (t>dp[u][1]){\n            dp[u][1]=t;g[u][1]=g[u][0]*g[v][0];\n        }else if (t==dp[u][1]){\n            g[u][1]+=g[u][0]*g[v][0];\n        }\n        dp[u][0]+=dp[v][1];\n        if (dp[v][0]^dp[v][1])g[u][0]*=g[v][1];\n            else g[u][0]*=g[v][0]+g[v][1];\n    }\n    if (!dp[u][1])g[u][1]=0;\n}\nint main(){\n    n=read();\n    for (int i=1;i<=n;++i){\n        int u=read(),sz=read();\n        for (int j=1;j<=sz;++j){\n            int v=read();\n            adde(u,v);\n        }\n    }\n    dfs(1);\n    printf(\"%d\\n\",dp[1][1]);\n    if (dp[1][1]^dp[1][0])g[1][1].out();\n        else (g[1][1]+g[1][0]).out();\n    return 0;\n}\n```",
        "postTime": 1505039878,
        "uid": 54916,
        "name": "I_AM_HelloWord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1623 \u3010\u6811\u7684\u5339\u914d\u3011"
    },
    {
        "content": "~~\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u9ad8\u7cbe\u8c03\u4e86\u4e00\u4e2a\u4e0b\u5348~~\n\n> \u505a\u6cd5:\u6811\u5f62DP+\u9ad8\u7cbe\n\n\u6211\u4eec\u5047\u8bbe$dp[i][0]$\u4e3a\u8bbf\u95ee\u7f16\u53f7\u4e3ai\u7684\u8282\u70b9\u65f6,\u4e0d\u4e0e\u7236\u4eb2\u914d\u5bf9\u65f6\u5176\u5b50\u6811\u4e0a\u7684\u6700\u5927\u5bf9\u5b50,$dp[i][1]$\u4e3a\u4e0e\u7236\u4eb2\u914d\u5bf9\u7684\u6700\u5927\u5bf9\u5b50\n\n\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\n\n$dp[i][1]=\\sum^{n}_{i=1}dp[j][0]$\n\n\u7531\u4e8e\u5bf9\u4e8e$dp[i][1]$\u6211\u4eec\u9700\u8981\u627e\u5230\u8ddf\u4ed6\u5339\u914d\u7684\u70b9,\u6240\u4ee5\u6211\u4eec\u8981\u627e\u5230$min\\{dp[j][0]-dp[j][1]-1\\}$\uff0c\u8bb0\u4e3a$mn$,\u518d\u7528$dp[i][1]-mn$\u8868\u793a$dp[i][0]$,\u5373\u4e0b\u9762\u7684\u65b9\u7a0b\n\n$dp[i][0]=dp[i][1]-min(0,min\\{dp[j][0]-dp[i][1]-1\\})$\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff1a**\u4e0a\u9762\u4e3a\u4ec0\u4e48\u8981\u5bf9$0$\u4e0e$min\\{dp[j][0]-dp[i][1]-1\\}$\u53d6min?**\n\n\u8fd9\u662f\u4e3a\u4e86\u9632\u6b62\u6211\u4eec\u5c06\u5f53\u524d\u8fd9\u4e2a\u70b9**\u4e0e\u4efb\u610f\u5b50\u8282\u70b9\u76f8\u8fde\u540e,\u53cd\u800c\u4e0d\u5982\u4e0d\u4e0e\u5b50\u8282\u70b9\u76f8\u8fde\u7684\u65b9\u6848**\uff0c\u7279\u5730\u8bbe\u7f6e\u7684$0$(\u5373\u8fd9\u4e2a\u70b9\u5373\u4e0d\u8fde\u7236\u8282\u70b9\uff0c\u4e5f\u4e0d\u8fde\u5b50\u8282\u70b9)\u3002\n\n\u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u51fa$dp[i][1]\\leq dp[i][0]$,\u6240\u4ee5\u6700\u540e\u53ea\u9700\u8981\u8f93\u51fa$dp[1][0]$\u5373\u53ef\n\n\u90a3\u4e48\u8ba9\u6211\u4eec\u6765\u6765\u770b\u770b\u7b2c\u4e8c\u4e2a\u95ee\u9898:\u6c42\u51fa\u65b9\u6848\u6570\n\n\u5bf9\u4e8e$f[i][0]$\u6211\u4eec\u8bb0\u4e3a\u6ee1\u8db3$dp[i][0]$\u7684\u65b9\u6848\u6570,$f[i][1]$\u6211\u4eec\u8bb0\u4e3a\u6ee1\u8db3$dp[i][1]$\u7684\u65b9\u6848\u6570\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528\u7c7b\u4f3c\u4e8e$dp[i]$\u7684\u601d\u60f3\u53bb\u5206\u6790\u3002\n\n\u5bf9\u4e8e\u6ee1\u8db3$dp[i][1]$\u7684\u65b9\u6848\u6570$f[i][1]$,\u90a3\u4e48\u5c31\u4e3a$f[j][0]$\u65b9\u6848\u6570\u76f8\u4e58(\u56e0\u4e3a\u5fc5\u5b9a\u662f\u4ece\u8fd9\u4e9b\u72b6\u6001\u8f6c\u79fb\u800c\u6765)\n\n\u5bf9\u4e8e\u6ee1\u8db3$dp[i][0]$\u7684\u65b9\u6848\u6570$f[i][0]$,\u6211\u4eec\u5c31\u9700\u8981\u627e\u51fa\u6ee1\u8db3$dp[j][0]-dp[j][1]-1==mn$\u7684\u6bcf\u4e00\u4e2aj\uff0c\u7136\u540e$f[i][0]+=f[i][1]\\div f[j][0]\\times f[j][1]$(\u8fd9\u91cc\u5e94\u8be5\u8fd8\u597d\u7406\u89e3,\u5c31\u76f8\u5f53\u4e8e\u628aj\u5339\u914di\uff0c\u4e0e\u4e0a\u9762\u76f8\u540c)\n\n\u6700\u540e\uff0c\u5982\u679c$mn==0$\uff0c\u5219\u8bf4\u660e$dp[i][0]==dp[i][1]$,\u6b64\u65f6\u6b64\u523b\u6211\u4eec\u53ef\u4ee5\u77e5\u9053$i$\u662f\u4e0d\u8ddf\u7236\u4eb2\u8282\u70b9\u8fde\u7684\u3002\u4f46\u662f\u56e0\u4e3a$mn==0$,\u5219\u6211\u4eec\u53ef\u4ee5\u77e5\u9053**\u5982\u679c\u5b83\u9009\u62e9\u4e86\u4e00\u4e2a\u5b50\u8282\u70b9\u8fde\u63a5\uff0c\u53cd\u800c\u65b9\u6848 \u4e0d\u4f18\u4e8e \u5b83\u4e0d\u4e0e\u5b50\u8282\u70b9\u8fde**\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u770b\u505a\u7236\u4eb2\u8282\u70b9\u5360\u7528\u4e86\u8fd9\u4e2a\u8282\u70b9(\u4f46\u5b9e\u9645\u4e0a\u6ca1\u6709\u5360\u7528)\uff0c\u8ba9\u5b50\u8282\u70b9\u76f8\u8fde,\u8fd9\u6837\u65e2\u5c31\u80fd\u4fdd\u8bc1\u65b9\u6848\u6700\u4f18\u4e86\u3002\n\n#### Code:\n\n```\n#include<cstdio>\n#include<vector>\nusing namespace std;\nconst int M=1000+5,base=1e8;\nvector<int>Edge[M];\nint n;\n \nstruct BigInt{\n    int sum[21];\n    void operator += (const BigInt &x){\n        sum[0]=max(sum[0],x.sum[0]);\n        for(int i=1; i<=sum[0]; i++){\n            sum[i]+=x.sum[i];\n            if(sum[i]>=base) sum[i+1]++,sum[i]-=base;\n        }\n        if(sum[sum[0]+1]>0) sum[0]++;\n    }\n    void operator *= (const BigInt &x){\n        long long A[21]={};\n        for(int i=1; i<=sum[0]; i++){\n            for(int j=1; j<=x.sum[0]; j++){\n                A[i+j-1]+=1ll*sum[i]*x.sum[j];\n            }\n        }\n        for(int i=1; i<=sum[0]+x.sum[0]; i++){\n            A[i+1]+=A[i]/base; A[i]%=base; sum[i]=A[i];\n        }\n        if(A[sum[0]+x.sum[0]]) sum[0]=sum[0]+x.sum[0];\n        else sum[0]=sum[0]+x.sum[0]-1;\n    }\n    void Print(){\n        printf(\"%d\",sum[sum[0]]);\n        for(int i=sum[0]-1; i>0; i--){\n            printf(\"%08d\",sum[i]);\n        }\n    }\n}f[M][2],f1[M],f2[M],fnow;//f1-->\u524d\u7f00\u7d2f\u4e58,f2-->\u540e\u7f00\u7d2f\u4e58,\u65b9\u4fbf\u63a5\u4e0b\u6765\u72b6\u6001\u8f6c\u79fb\u7684\u4e58\u6cd5(\u4e0d\u7528\u679a\u4e3e\u5b50\u70b9\u6216\u8005\u5199\u9ad8\u7cbe\u9664)\n \nint dp[M][2]; //dp[i][0]-->\u4e0d\u8ddf\u7236\u4eb2\u8fde, dp[i][1] --> \u8ddf\u7236\u4eb2\u8fde\n \nvoid dfs(int x){\n    int mn=0,sz=Edge[x].size();\n    f[x][0].sum[0]=f[x][1].sum[0]=f[x][1].sum[1]=1,f[x][0].sum[1]=0;\n    for(int i=0; i<sz; i++){\n        int y=Edge[x][i]; dfs(y);\n        dp[x][0]+=dp[y][0], dp[x][1]+=dp[y][0];\n        f[x][1]*=f[y][0];\n        mn=min(mn,dp[y][0]-dp[y][1]-1);\n    }\n    dp[x][0]-=mn;\n    f1[0].sum[0]=f1[0].sum[1]=f2[sz].sum[0]=f2[sz].sum[1]=1;\n    for(int i=0; i<sz; i++) f1[i+1]=f1[i],f1[i+1]*=f[Edge[x][i]][0];\n    for(int i=sz-1; i>=0; i--) f2[i]=f2[i+1],f2[i]*=f[Edge[x][i]][0];\n    for(int i=0; i<sz; i++){\n        int y=Edge[x][i];\n        if(dp[y][0]-dp[y][1]-1==mn){\n            fnow=f[y][1], fnow*=f1[i]; fnow*=f2[i+1]; f[x][0]+=fnow;\n        }\n    }\n    if(!mn) f[x][0]+=f[x][1];\n}\n \nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1,x,y,sz; i<=n; i++){\n        scanf(\"%d %d\",&x,&sz);\n        for(int j=1; j<=sz; j++){\n            scanf(\"%d\",&y);\n            Edge[x].push_back(y);\n        }\n    }\n    dfs(1);\n    printf(\"%d\\n\",dp[1][0]);\n    f[1][0].Print();\n    return 0;\n}\n```",
        "postTime": 1563446168,
        "uid": 81715,
        "name": "ppp204",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1623 \u3010[CEOI2007]\u6811\u7684\u5339\u914dTreasury\u3011"
    },
    {
        "content": "[Link](https://www.luogu.com.cn/problem/P1623)\n----------------\n\n### \u9898\u76ee\u63cf\u8ff0\n\u7ed9\u4e00\u68f5\u6811\uff0c\u4f60\u53ef\u4ee5\u5339\u914d\u6709\u8fb9\u76f8\u8fde\u7684\u4e24\u4e2a\u70b9\uff0c\u95ee\u4f60\u8fd9\u68f5\u6811\u7684\u6700\u5927\u5339\u914d\u662f\u591a\u5c11\uff0c\u5e76\u4e14\u8ba1\u7b97\u51fa\u6709\u591a\u5c11\u79cd\u6700\u5927\u5339\u914d\u3002\n\n### \u89e3\u6cd5\n\u5bb9\u6613\u60f3\u5230\u5c06\u8fb9\u7684\u5339\u914d\u8f6c\u6362\u5230\u70b9\u4e0a\u9762\uff0c\u7528 $dp_{u,0/1}$ \u8868\u793a\u4ee5\u8282\u70b9 $u$ \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2d\uff0c\u4e0d\u9009/\u9009 $u$ \u8282\u70b9\u6765\u5339\u914d\u5f97\u5230\u7684\u6700\u5927\u5339\u914d\u6570\u3002\n\n\u90a3\u4e48\u5f53 $u$ \u6ca1\u6709\u88ab\u9009\u65f6\uff0c\u5b50\u8282\u70b9\u9009\u4e0d\u9009\u90fd\u65e0\u6240\u8c13\n\n\u6211\u4eec\u4ee4\n$$f_u=max\\{dp_{u,0},dp_{u,1}\\}$$\n\u5219\u6709\n$$dp_{u,0}=\\sum_{v\\in son(u)} f_v$$\n\n\u82e5\u9009\u62e9 $u$\uff0c\u5219\u53ea\u6709\u88ab\u9009\u7684\u90a3\u6761\u8fb9\u7684\u90a3\u4e2a\u5b50\u8282\u70b9\u5fc5\u4e0d\u80fd\u9009\uff0c\u5176\u4ed6\u8282\u70b9\u9009\u4e0d\u9009\u65e0\u6240\u8c13\uff0c\u5219\n$$dp_{u,1}=max\\{dp_{u,0}-f_v+dp_{v,0}+1\\}$$\n\n\u7b2c\u4e00\u95ee\u8fd9\u6837\u505a\u5df2\u7ecf\u53ef\u4ee5\u4e86\uff0c\u96be\u70b9\u5728\u4e8e\u7b2c\u4e8c\u95ee\u2014\u2014\u8bb0\u5f55\u65b9\u6848\u3002\n\n\u7531\u7b2c\u4e00\u95ee\uff0c\u6211\u4eec\u5f97\u5230\u542f\u53d1\uff0c\u7528 $g_{u,0/1}$ \u8868\u793a\u4ee5\u8282\u70b9 $u$ \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2d\uff0c\u4e0d\u9009/\u9009 $u$ \u8282\u70b9\u6765\u5339\u914d\u5f97\u5230\u7684\u6700\u5927\u5339\u914d\u6570\u7684\u65b9\u6848\u6570\u3002\n\n\u82e5\u4e0d\u9009\u62e9 $u$ \u8282\u70b9\uff0c\u5219\u7531\u4e58\u6cd5\u539f\u7406\u5c06\u6240\u6709\u7684\u5b50\u8282\u70b9\u5bf9\u5e94\u7684\u65b9\u6848\u7684\u65b9\u6848\u6570\u4e58\u8d77\u6765\u5373\u53ef\n\n\u4ee4\n$$h_u=\\begin{cases}\ng_{u,0}, & dp_{u,0}>dp_{u,1} \\\\\ng_{u,0}+g_{u,1}, & dp_{u,0}=dp_{u,1}\\\\\ng_{u,1}, & dp_{u,0}<dp_{u,1}\n\\end{cases}$$\n\n\u5219\n$$g_{u,0}=\\prod_{v\\in son(u)} h_v$$\n\n\u800c\u5bf9\u4e8e $g_{u,1}$ \u6211\u4eec\u9700\u8981\u5728\u66f4\u65b0 $dp_{u,1}$ \u7684\u65f6\u5019\u540c\u65f6\u66f4\u65b0\u5b83\u3002\u5047\u8bbe\u6211\u4eec\u5f53\u524d\u9009\u7684\u8fb9\u4e3a $u\\to v$ \uff0c\u90a3\u4e48\u9664\u4e86 $v$ \u4e4b\u5916\u7684\u5176\u5b83\u5b50\u8282\u70b9\u90fd\u53ef\u4ee5\u4efb\u610f\u9009\uff0c\u800c\u4e0d\u9009 $v$ \u8282\u70b9\u5bf9\u5e94\u7684\u65b9\u6848\u6570\u4e3a $g_{v,0}$\uff0c\u90a3\u4e48\u603b\u7684\u65b9\u6848\u6570\u4e3a $g_{u,0}/h_v\\times g_{v,0}$\u3002\u82e5 $dp_{u,1}<dp_{u,0}-f_v+dp_{v,0}+1$\uff0c\u5373\n\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e2a\u66f4\u5927\u7684\u5339\u914d\uff0c\u90a3\u4e48\u76f4\u63a5\u5c06 $g_{u,1}$ \u66f4\u65b0\u4e3a $g_{u,0}/h_v\\times g_{v,0}$\uff1b\u82e5 $dp_{u,1}=dp_{u,0}-f_v+dp_{v,0}+1$\uff0c\u5373\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e2a\u548c\u6700\u5927\u5339\u914d\u65b9\u6848\u6570\u76f8\u540c\u7684\u65b9\u6848\uff0c\u90a3\u4e48\u5c06 $g_{u,1}$ \u7d2f\u52a0\u4e0a\u8fd9\u4e2a\u503c\u5373\u53ef\u3002\n\n```cpp\nfor(int i=head[u];i;i=e[i].next){\n    int v=e[i].to;\n    ll ret=dp[u][0]-f[v]+dp[v][0]+1;\n    ll tmp=g[u][0]/h[v]*g[v][0];\n    if(dp[u][1]<ret) dp[u][1]=ret,g[u][1]=tmp;\n    else if(dp[u][1]==ret) g[u][1]+=tmp;\n}\n```\n\n###Tips \n\u6211\u4eec\u53d1\u73b0\u6700\u540e\u7684\u65b9\u6848\u6570\u8d85\u8fc7\u4e86 $long long$\uff0c\u9700\u8981\u4e9b\u9ad8\u7cbe\u3002\u7136\u800c\u65b9\u7a0b\u4e2d\u5e26\u4e86\u9664\u6cd5QAQ\uff0c\u6b64\u65f6\u9700\u8981\u4e00\u4e9b\u8f6c\u6362\u3002\u89c2\u5bdf\u65b9\u7a0b\uff0c\u53d1\u73b0\u6240\u6c42\u503c\u662f\u4e00\u4e2a\u603b\u79ef\u9664\u4e0a\u4e2d\u95f4\u4e00\u4e2a\u6570\u7684\u5f62\u5f0f\uff0c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u628a\u5176\u8f6c\u6362\u4e3a\u4e00\u4e2a\u524d\u7f00\u79ef\u548c\u4e00\u4e2a\u540e\u7f00\u79ef\u76f8\u4e58\uff0c\u5b8c\u7f8e\u7684\u907f\u5f00\u4e86\u9664\u6cd5\u3002\uff08\u5982\u679c\u4f60\u4e0d\u60f3\u518d\u91cd\u8f7d\u51cf\u6cd5\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u628a\u5176\u8f6c\u6362\u4e3a\u524d\u7f00\u548c\u52a0\u540e\u7f00\u548c\uff09\n\n```cpp\n#include<stdio.h>\n#include<string.h>\n#include<vector>\nusing namespace std;\n#define N 1007\n\ninline int read(){\n    int x=0,flag=1; char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')flag=0;c=getchar();}\n    while(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+c-48;c=getchar();}\n    return flag? x:-x;\n}\n\ninline int max(int x,int y){return x>y? x:y;}\n\nstruct BigNum{\n    int n,s[207];\n    \n    BigNum(int x=0){\n        n=0;\n        memset(s,0,sizeof(s));\n        while(x) s[++n]=x%10,x/=10;\n    }\n    \n    BigNum operator *(const BigNum B){\n        BigNum c;\n        c.n=B.n+n-1;\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=B.n;j++){\n                c.s[i+j-1]+=s[i]*B.s[j];\n                c.s[i+j]+=c.s[i+j-1]/10;\n                c.s[i+j-1]%=10;\n            }\n        while(c.s[c.n+1]) c.n++;\n        while(c.n>=1&&(!c.s[c.n])) c.n--;\n        return c;\n    }\n    \n    BigNum operator +(const BigNum B){\n        BigNum c;\n        c.n=max(B.n,n);\n        for(int i=1;i<=c.n;i++){\n            c.s[i]+=s[i]+B.s[i];\n            c.s[i+1]=c.s[i]/10;\n            c.s[i]%=10;\n        }\n        while(c.s[c.n+1]) c.n++;\n        while(c.n>=1&&(!c.s[c.n])) c.n--;\n        return c;\n    }\n    \n    bool operator <(const BigNum B){\n        if(n!=B.n) return n<B.n;\n        for(int i=n;i>=1;i--)\n            if(s[i]!=B.s[i]) return s[i]<B.s[i];\n        return 0;\n    }\n    \n    bool operator ==(BigNum B){\n        return !(((*this)<B)|(B<(*this)));\n    }\n    \n    void print(){\n        if(!n) putchar('0');\n        else for(int i=n;i>=1;i--) putchar(s[i]+'0');\n        putchar('\\n');\n    }\n    \n}f[N],g[N][2],h[N],dp[N][2],pre[N],suf[N],pres[N],sufs[N];\n\nint n;\nbool vis[N];\nvector<int> G[N];\n\nvoid dfs(int u){\n    vis[u]=1,g[u][0]=BigNum(1);\n    for(int i=0;i<G[u].size();i++){\n        int v=G[u][i];\n        if(!vis[v]) dfs(v);\n        dp[u][0]=dp[u][0]+f[v];\n        g[u][0]=g[u][0]*h[v];\n    }\n    pre[0]=BigNum(1);\n    pres[0]=BigNum(0);\n    for(int i=0;i<G[u].size();i++)\n        pres[i+1]=pres[i]+f[G[u][i]],\n        pre[i+1]=pre[i]*h[G[u][i]];\n    suf[G[u].size()+1]=BigNum(1);\n    sufs[G[u].size()+1]=BigNum(0);\n    for(int i=G[u].size()-1;~i;i--)\n        sufs[i+1]=sufs[i+2]+f[G[u][i]],\n        suf[i+1]=suf[i+2]*h[G[u][i]];\n    for(int i=0;i<G[u].size();i++){\n        int v=G[u][i];\n        BigNum r(1);\n        BigNum ret=pres[i]+sufs[i+2]+dp[v][0]+r;\n        BigNum tmp=pre[i]*suf[i+2]*g[v][0];\n        if(dp[u][1]<ret) dp[u][1]=ret,g[u][1]=tmp;\n        else if(dp[u][1]==ret) g[u][1]=g[u][1]+tmp;\n    }\n    if(dp[u][0]<dp[u][1]) f[u]=dp[u][1],h[u]=g[u][1];\n    else if(dp[u][0]==dp[u][1]) f[u]=dp[u][0],h[u]=g[u][0]+g[u][1];\n    else f[u]=dp[u][0],h[u]=g[u][0];\n}\n\nsigned main(){\n    freopen(\"tree.in\",\"r\",stdin);\n    freopen(\"tree.out\",\"w\",stdout);\n    n=read();\n    for(int i=1;i<=n;i++){\n        int u=read(),op=read();\n        for(int i=1;i<=op;i++)\n            G[u].push_back(read());\n    }\n    BigNum ans(0),ret(1);\n    for(int i=1;i<=n;i++){\n        if(!vis[i]) dfs(i);\n        if(ans<f[i]) ans=f[i],ret=h[i];\n    }\n    ans.print(),ret.print(); \n}\n```",
        "postTime": 1603527266,
        "uid": 83337,
        "name": "wwlw",
        "ccfLevel": 7,
        "title": "CEOI2007 Treasury"
    },
    {
        "content": "\u8003\u573aA\u4e86\u7eaa\u5ff5\u4e00\u4e0b\u3002\n\n\u6700\u5927\u5339\u914d\u7684\u90e8\u5206\u5f88\u663e\u7136\uff0c\u6211\u4eec\u8bbe$\\text{f[i][0/1]}$\u8868\u793a\u7b2c$i$\u4e2a\u70b9\u662f\u5426\u548c\u4ed6\u7684\u7238\u7238\u5339\u914d\u3002\u56e0\u4e3a\u8fd9\u4e2a\u70b9\u548c\u4ed6\u7238\u7238\u5339\u914d\u4e4b\u540e\u4ed6\u7684\u513f\u5b50\u4e0d\u80fd\u548c\u5b83\u5339\u914d\uff0c\u6240\u4ee5\u6709\uff1a\n\n$$\\text{f[i][1]}=\\sum_{j\\in son_i}\\text{f[j][0]+1}$$\n\n$\\text{f[i][0]}$\u7684\u90e8\u5206\u8981\u9ebb\u70e6\u4e00\u70b9\uff0c\u6211\u4eec\u679a\u4e3e\u4ed6\u7684\u54ea\u4e2a\u513f\u5b50\u548c\u5b83\u5339\u914d\uff0c\u6216\u8005\u6839\u672c\u6ca1\u6709\u513f\u5b50\u548c\u5b83\u5339\u914d\u5373\u53ef\u3002\n\n\u81f3\u4e8e\u8ba1\u6570\u6211\u4eec\u5728dp\u7684\u65f6\u5019\u53e6\u5f00\u6570\u7ec4$\\text{g[i][0/1]}$\uff0cdp\u51fa$\\text{f}$\u4e4b\u540e\u679a\u4e3e\u7531\u90a3\u4e9b\u70b9\u8f6c\u79fb\u53ef\u4ee5\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c\uff0c\u518d\u7528\u4e58\u6cd5\u539f\u7406\u6216\u52a0\u6cd5\u539f\u7406\u8ba1\u6570\u5373\u53ef\u3002\n\n\u5177\u4f53\u7684\uff0c\u5bf9\u4e8e$\\text{g[i][1]}$\n\n$$\\text{g[i][1]}=\\prod_{j\\in son_i}\\text{g[j][0]}$$\n\n\u6211\u4eec\u8bbe$\\text{mx}=\\prod_{j\\in son_i}\\text{f[j][0]}$\uff0c\u5219\u5bf9\u4e8e$\\text{g[i][0]}$\n\n$$\\text{g[i][0]}=\\sum_{\\text{j\u662f\u6700\u4f18\u8f6c\u79fb\u70b9}}{\\text{mx} \\cdot \\text{g[j][1]}\\over \\text{g[j][0]}}$$\n\n\u6700\u540e\u8fd8\u8981\u5224\u513f\u5b50\u90fd\u4e0d\u548c\u5b83\u5339\u914d\u7684\u60c5\u51b5\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5927\u81f4\u601d\u8def\u5c31\u5df2\u7ecf\u8bb2\u5b8c\u4e86\u3002\u4f46\u662f\u8fd9\u9898\u8981\u6076\u5fc3\u7684\u5199\u9ad8\u7cbe\uff0c\u800c\u4e14\u5e26\u9664\u6cd5\u3002\n\n\u6240\u4ee5\u6211\u4eec\u80fd\u5426\u907f\u514d\u9ad8\u7cbe\u9664\u9ad8\u7cbe\uff1f\u6211\u662f\u6bcf\u6b21\u76f4\u63a5\u66b4\u529b\u91cd\u7b97\uff0c\u4f46\u662f\u88ab\u673a\u623f\u5927\u4f6c\u55b7\u4f1a\u88ab\u83ca\u82b1\u56fe\u4e0a\u6302\u5f88\u591a\u94fe\u5361\u3002\u5b9e\u9645\u4e0a\u53ef\u4ee5\u6bcf\u6b21\u989d\u5916\u8bb0\u4e00\u4e2a\u524d\u7f00\u79ef\u548c\u540e\u7f00\u79ef\u3002\n\n\u8fd8\u6709\u4e9b\u7ec6\u8282\u5c31\u770b\u4ee3\u7801\u5427\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <vector>\n\nusing namespace std;\n\nstruct BigInteger {\n\tint len;\n\tshort int ch[1005];\n\tBigInteger() { len = 0; memset(ch, 0, sizeof ch); }\n\tinline void print() {\n\t\tfor (int i = len; i; --i) printf(\"%d\", ch[i]);\n\t}\n\tinline void prepare(const int b) {\n\t\tint k = b; len = 0;\n\t\twhile (k) { ch[++len] = k % 10; k /= 10; }\t\t\n\t}\n};\n\ninline int max_(int a, int b) {\n\treturn a > b ? a : b;\n} \n\ninline BigInteger operator + (BigInteger a, BigInteger b) {\n\tBigInteger c; c.len = max_(a.len, b.len);\n\tfor (int i = 1; i <= c.len; ++i) {\n\t\tc.ch[i] += a.ch[i] + b.ch[i];\n\t\tif (c.ch[i] >= 10) c.ch[i + 1] += c.ch[i] / 10, c.ch[i] %= 10;\n\t} while (c.ch[c.len + 1] != 0) ++c.len;\n\treturn c;\n}\n\ninline BigInteger operator * (BigInteger a, int b) {\n\tBigInteger c; c.len = a.len;\n\tfor (int i = 1; i <= c.len; ++i) {\n\t\tc.ch[i] += a.ch[i] * b;\n\t\tif (c.ch[i] > 10) c.ch[i + 1] += c.ch[i] / 10, c.ch[i] %= 10;\n\t} while (c.ch[c.len + 1] != 0) ++c.len;\n\treturn c;\n}\n\ninline BigInteger operator << (BigInteger a, int c) {\n\tBigInteger b; b = a;\n\tfor (int i = b.len; i; --i) swap(b.ch[i], b.ch[i + c]);\n\tb.len += c;\n\treturn b;\n}\n\ninline BigInteger operator * (BigInteger a, BigInteger b) {\n\tBigInteger c; c.prepare(0);\n\tfor (int i = 1; i <= b.len; ++i) { \n\t\tc = c + ((a * b.ch[i]) << (i - 1));\n\t} return c;\n}\n\nvector<int> nxt[1005];\nint n, m, v, fr, f[1005][2], fa[1005], rt;\nBigInteger g[1005][2];\n\ninline void dfs(int now) {\n\tf[now][0] = 0; f[now][1] = (fa[now] != -1);\n\tg[now][1].prepare(1);\n\tvector<int> :: iterator it;\n\tint mx0 = 0, mx1 = 0;\n\tBigInteger gx0, gx1; gx0.prepare(1); gx1.prepare(1);\n\tfor (it = nxt[now].begin(); it != nxt[now].end(); ++it) {\n\t\tdfs(*it);\n\t\tf[now][1] += f[*it][0];\n\t\tgx1 = gx1 * g[*it][0];\n\t\tmx0 += f[*it][0];\n\t\tg[now][0].prepare(0);\n\t} g[now][1] = gx0 = gx1; f[now][0] = mx0;\n\tfor (it = nxt[now].begin(); it != nxt[now].end(); ++it)\n\t\tf[now][0] = f[now][0] > (mx0 - f[*it][0] + f[*it][1]) ? f[now][0] : (mx0 - f[*it][0] + f[*it][1]);\n\tfor (it = nxt[now].begin(); it != nxt[now].end(); ++it) {\n\t\tif(f[now][0] == (mx0 - f[*it][0] + f[*it][1])) {\n\t\t\tgx1.prepare(1);\n\t\t\tfor (vector<int> :: iterator iv = nxt[now].begin(); iv != nxt[now].end(); ++iv) {\n\t\t\t\tif (*iv == *it) gx1 = gx1 * g[*iv][1];\n\t\t\t\telse gx1 = gx1 * g[*iv][0];\n\t\t\t}\n\t\t\tg[now][0] = g[now][0] + gx1;\n\t\t}\n\t}if (f[now][0] == mx0) g[now][0] = g[now][0] + gx0;\n//\tcout << \"now = \" << now << endl;\n//\tcout << f[now][0] << ' ' << f[now][1] << endl;\n//\tcout << g[now][0] << ' ' << g[now][1] << endl;\n//\tcout << \"mx = \" << mx0 << ' ' << \"gx = \" << gx0 << endl; \n\t\n}\n\nint main() {\n\tscanf(\"%d\", &n); memset(fa, -1, sizeof fa);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tscanf(\"%d%d\", &fr, &m);\n\t\twhile (m--) {\n\t\t\tscanf(\"%d\", &v);\n\t\t\tnxt[fr].push_back(v);\n\t\t\tfa[v] = fr;\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; ++i)\n\t\tif (fa[i] == -1) {\n\t\t\trt = i; break;\n\t\t}\n\tdfs(rt);\n\tprintf(\"%d\\n\", f[rt][0]);\n\tg[rt][0].print();\n\treturn 0;\n}\n```\n",
        "postTime": 1603512335,
        "uid": 98096,
        "name": "Smallbasic",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1623 \u3010[CEOI2007]\u6811\u7684\u5339\u914dTreasury\u3011"
    },
    {
        "content": "\u4e2a\u4eba\u89c9\u5f97\u6811\u4e0a\u80cc\u5305\u7684\u505a\u6cd5\u66f4\u4e3a\u6613\u61c2\uff0c\u5e76\u4e14\u53ea\u9700\u8981\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\u548c\u4e58\u6cd5\u3002\n\n------------\n\n\u6211\u4eec\u4ee4 $f[i,j,0/1]$ \u8868\u793a $i$ \u7684\u5b50\u6811\u4e2d\u6709 $j$ \u4e2a\u5339\u914d\uff0c\u4e14 $i$ \u672c\u8eab\u6ca1\u6709/\u6709\u5339\u914d\u7684\u65b9\u6848\u6570\u3002\u518d\u4ee4 $g[i,0/1]$ \u8868\u793a\u6ca1\u6709/\u6709\u5339\u914d\u65f6\u7684\u6700\u5927\u5339\u914d\u6570\u3002\u663e\u7136\uff0c\u5f53\u5408\u5e76\u7236\u4eb2 $x$ \u548c\u513f\u5b50 $y$ \u65f6\uff0c\u5c31\u76f4\u63a5\u62ff $f[x]$ \u548c $f[y]$ \u505a\u4e00\u4e0b\u80cc\u5305\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff0c\u5f53\u7236\u4eb2\u548c\u513f\u5b50\u5747\u6ca1\u6709\u5339\u914d\u65f6\uff08\u5373 $f[x,?,0]$ \u4e0e $f[y,?,0]$\uff09\uff0c\u5b83\u53ef\u4ee5\u76f4\u63a5\u8f6c\u79fb\u5230 $f[x,?+?+1,1]$\uff0c\u5373\u5728\u7236\u5b50\u95f4\u4ea7\u751f\u4e00\u5bf9\u5339\u914d\uff08\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e0d\u7528\u8fd9\u4e00\u5bf9\u5339\u914d\uff09\u3002\u5176\u4f59\u60c5\u51b5\u4e0b\uff0c\u4ee5\u7236\u4eb2\u662f\u5426\u6709\u5339\u914d\u4e3a\u51c6\u3002\n\n\u8fd9\u91cc\u5148\u8d34\u51fa\u4f7f\u7528```long long```\u7684 $60$ \u5206\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nint n,g[1010][2];\nll f[1010][510][2],h[1010][2];\n//f[i,j,0/1]:the number of situations when there're j matchings in subtree i and i itself isn't/is matched; and g is the maximal matchings. h is an array for assistance.\nvector<int>v[1010];\nbool occ[1010];\nvoid dfs(int x){\n\tf[x][0][0]=1;\n\tfor(auto y:v[x]){\n\t\tdfs(y);\n\t\tint tmp0=g[x][0]+max(g[y][0],g[y][1]),tmp1=max(g[x][1]+max(g[y][0],g[y][1]),g[x][0]+g[y][0]+1);\n\t\tfor(int i=0;i<=tmp0;i++)h[i][0]=0;\n\t\tfor(int i=0;i<=tmp1;i++)h[i][1]=0;\n\t\tfor(int i=0;i<=g[x][0];i++)for(int j=0;j<=g[y][0];j++)h[i+j][0]+=f[x][i][0]*f[y][j][0],h[i+j+1][1]+=f[x][i][0]*f[y][j][0];\n\t\tfor(int i=0;i<=g[x][1];i++)for(int j=0;j<=g[y][0];j++)h[i+j][1]+=f[x][i][1]*f[y][j][0];\n\t\tfor(int i=0;i<=g[x][0];i++)for(int j=0;j<=g[y][1];j++)h[i+j][0]+=f[x][i][0]*f[y][j][1];\n\t\tfor(int i=0;i<=g[x][1];i++)for(int j=0;j<=g[y][1];j++)h[i+j][1]+=f[x][i][1]*f[y][j][1];\n\t\tfor(int i=0;i<=tmp0;i++)f[x][i][0]=h[i][0];\n\t\tfor(int i=0;i<=tmp1;i++)f[x][i][1]=h[i][1];\n\t\tg[x][0]=tmp0;\n\t\tg[x][1]=tmp1;\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1,x,y,z;i<=n;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\twhile(y--)scanf(\"%d\",&z),v[x].push_back(z),occ[z]=true;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(occ[i])continue;\n\t\tdfs(i);\n\t\tint mx=max(g[i][0],g[i][1]);\n\t\tll ret=0;\n\t\tif(mx==g[i][0])ret+=f[i][g[i][0]][0];\n\t\tif(mx==g[i][1])ret+=f[i][g[i][1]][1];\n\t\tprintf(\"%d\\n%lld\\n\",mx,ret);\n\t}\n\treturn 0;\n}\n```\n\n\u5269\u4e0b\u7684\u90e8\u5206\u9700\u8981\u9ad8\u7cbe\u5ea6\u3002\u4f46\u660e\u663e\uff0c\u4e0a\u8ff0\u7b97\u6cd5\u672c\u8eab\u590d\u6742\u5ea6\u5df2\u7ecf\u8fbe\u5230 $O(n^2)$\uff0c\u5047\u5982\u518d\u5957\u4e0a\u9ad8\u7cbe\u5ea6\u4e0d\u5927\u53ef\u80fd\u8fc7\u53bb\uff08\u6839\u636e\u6781\u4e0d\u9760\u8c31\u7684\u4f30\u7b97\uff0c\u9ad8\u7cbe\u5ea6\u6700\u5927\u53ef\u80fd\u4f1a\u6709 $2^{333}\\approx10^{100}$ \u7684\u4f4d\u6570\uff0c\u56e0\u4e3a\u8fd8\u8981\u7528\u4e58\u6cd5\uff0c\u6240\u4ee5\u5c31\u66f4\u4e0d\u9760\u8c31\u4e86\uff09\u3002\u5f53\u7136\uff0c\u6709\u80c6\u5927\u7684\u53ef\u4ee5\u5c1d\u8bd5\u7528FFT\u4f18\u5316\u80cc\u5305\u7684\u5377\u79ef\u548c\u9ad8\u7cbe\u5ea6\u7684\u5377\u79ef\uff0c\u4f46 $100,1000$ \u8fd9\u4e48\u70b9\u5927\u7684\u5377\u79ef\u53ef\u80fd\u7528\u4e0d\u7528FFT\u6548\u679c\u90fd\u6ca1\u5565\u533a\u522b\u3002\n\n\u90a3\u600e\u4e48\u529e\u5462\uff1f\n\n\u89c2\u5bdf\u5230\u6211\u4eec\u53ea\u9700\u8981\u6c42\u6700\u5927\u7684\u65b9\u6848\u6570\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u6700\u5927\u503c\u9644\u8fd1\u7684\u51e0\u4e2aDP\u503c\u5373\u53ef\u2014\u2014\u5269\u4f59\u7684DP\u503c\u65e0\u8bba\u600e\u4e48\u641e\u90fd\u4e0d\u53ef\u80fd\u6700\u7ec8\u6210\u4e3a\u6700\u5927\u503c\u3002\u4e8e\u662f\u8fd9\u6837\u641e\u6b63\u5e38DP\u7684\u590d\u6742\u5ea6\u5c31\u88ab\u4f18\u5316\u5230\u4e86 $O(n)$\u3002\u5957\u4e0a\u9ad8\u7cbe\u5ea6\uff0c\u4e0a\u9650\u7ea6\u662f $1000\\times 100^2=10^8$ \u7684\u3002\u4f46\u662f\u5f88\u677e\uff0c\u6240\u4ee5\u8dd1\u5f97\u5f88\u5feb\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nint n,g[1010][2];\nstruct Wint:vector<int>{\n\tWint(){clear();}\n\tWint(int x){clear();while(x)push_back(x%10),x/=10;}\n\tvoid operator ~(){\n\t\tfor(int i=0;i+1<size();i++)(*this)[i+1]+=(*this)[i]/10,(*this)[i]%=10;\n\t\twhile(!empty()&&back()>9){\n\t\t\tint tmp=back()/10;\n\t\t\tback()%=10;\n\t\t\tpush_back(tmp);\n\t\t}\n\t\twhile(!empty()&&!back())pop_back();\n\t}\n\tvoid operator +=(const Wint &x){\n//\t\tprint(),putchar('+'),x.print();\n\t\tif(size()<x.size())resize(x.size());\n\t\tfor(int i=0;i<x.size();i++)(*this)[i]+=x[i];\n\t\t~*this;\n//\t\tputchar('='),print(),putchar('\\n');\n\t}\n\tfriend Wint operator *(const Wint &x,const Wint &y){\n//\t\tx.print(),putchar('*'),y.print();\n\t\tWint z;\n\t\tif(!x.size()||!y.size())return z;\n\t\tz.resize(x.size()+y.size()-1);\n\t\tfor(int i=0;i<x.size();i++)for(int j=0;j<y.size();j++)z[i+j]+=x[i]*y[j];\n\t\t~z;\n//\t\tputchar('='),z.print(),putchar('\\n');\n\t\treturn z;\n\t}\n\tvoid print()const{\n\t\tif(empty()){putchar('0');return;}\n\t\tfor(int i=size()-1;i>=0;i--)putchar('0'+(*this)[i]);\n\t}\n}f[1010][510][2],h[1010][2];\n//f[i,j,0/1]:the number of situations when there're j matchings in subtree i and i itself isn't/is matched; and g is the maximal matchings. h is an array for assistance.\nvector<int>v[1010];\nbool occ[1010];\nvoid dfs(int x){\n\tf[x][0][0]=1;\n\tfor(auto y:v[x]){\n\t\tdfs(y);\n\t\tint tmp0=g[x][0]+max(g[y][0],g[y][1]),tmp1=max(g[x][1]+max(g[y][0],g[y][1]),g[x][0]+g[y][0]+1);\n\t\tfor(int i=0;i<=tmp0;i++)h[i][0]=0;\n\t\tfor(int i=0;i<=tmp1;i++)h[i][1]=0;\n\t\tfor(int i=max(0,g[x][0]-1);i<=g[x][0];i++)for(int j=max(0,g[y][0]-1);j<=g[y][0];j++)h[i+j][0]+=f[x][i][0]*f[y][j][0],h[i+j+1][1]+=f[x][i][0]*f[y][j][0];\n\t\tfor(int i=max(0,g[x][1]-1);i<=g[x][1];i++)for(int j=max(0,g[y][0]-1);j<=g[y][0];j++)h[i+j][1]+=f[x][i][1]*f[y][j][0];\n\t\tfor(int i=max(0,g[x][0]-1);i<=g[x][0];i++)for(int j=max(0,g[y][1]-1);j<=g[y][1];j++)h[i+j][0]+=f[x][i][0]*f[y][j][1];\n\t\tfor(int i=max(0,g[x][1]-1);i<=g[x][1];i++)for(int j=max(0,g[y][1]-1);j<=g[y][1];j++)h[i+j][1]+=f[x][i][1]*f[y][j][1];\n\t\tfor(int i=max(0,tmp0-1);i<=tmp0;i++)f[x][i][0]=h[i][0];\n\t\tfor(int i=max(0,tmp1-1);i<=tmp1;i++)f[x][i][1]=h[i][1];\n\t\tg[x][0]=tmp0;\n\t\tg[x][1]=tmp1;\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1,x,y,z;i<=n;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\twhile(y--)scanf(\"%d\",&z),v[x].push_back(z),occ[z]=true;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(occ[i])continue;\n\t\tdfs(i);\n\t\tint mx=max(g[i][0],g[i][1]);\n\t\tWint ret;\n\t\tif(mx==g[i][0])ret+=f[i][g[i][0]][0];\n\t\tif(mx==g[i][1])ret+=f[i][g[i][1]][1];\n\t\tprintf(\"%d\\n\",mx);\n\t\tret.print();\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1606829063,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1623 \u3010[CEOI2007]\u6811\u7684\u5339\u914dTreasury\u3011"
    }
]