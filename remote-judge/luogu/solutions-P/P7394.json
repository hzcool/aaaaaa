[
    {
        "content": "\u5b98\u65b9\u7684laji\u9898\u89e3\u3002\n\n\u6709\u4e00\u4e2a\u5f88\u663e\u7136\u6613\u89c1\u7684\u7ed3\u8bba\uff0c$y$ \u53ea\u6709\u53ef\u80fd\u662f\u5076\u6570\u3002\u4e8e\u662f\u4f60\u62ff\u5230\u4e86 $10 pts$ \u3002\n\n\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u5206\u4e24\u90e8\u5206\u8003\u8651\uff1a\n\n\u5982\u679c\u6ca1\u6709 $3$ \u64cd\u4f5c\uff0c\u8be5\u600e\u4e48\u505a\uff1f\n\n\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u8f6c\u5316\u4e00\u4e0b\u95ee\u9898\uff0c\u8be2\u95ee\u6811\u4e0a\u4e0e $x$ \u76f8\u540c\u6df1\u5ea6\u7684\u70b9\u4e2d\u4e0e $x$ \u7ed3\u70b9\u8ddd\u79bb\u4e3a $y$ \u7684\u70b9\u4e2d\u5f00\u7740\u7684\u706f\u7684\u4e2a\u6570\u5176\u5b9e\u5c31\u662f \u4e0e $x$ \u6df1\u5ea6\u76f8\u540c\u4e14\u4e0e $x$ \u7684 $LCA$ \u662f $x$  \u7684 $y/2$ \u7ea7\u7ec4\u5148\u3002\n\n\u63a5\u7740\u518d\u8003\u8651\u5982\u4f55\u7ef4\u62a4\u4e00\u9897\u5b50\u6811\u5185\u6df1\u5ea6\u4e3a $k$ \u7684\u5f00\u7740\u7684\u706f\u7684\u4e2a\u6570\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7ef4\u62a4 $dfs$ \u5e8f\uff0c\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u4e00\u5b9a\u662f\u5728 $dfs$ \u5e8f\u4e2d\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7ef4\u62a4\u8fd9\u4e00\u6bb5\u4e2d $dep$ \u4e0e $x$ \u76f8\u7b49\u4e2d\u5f00\u7740\u7684\u70b9\u7684\u4e2a\u6570\u3002\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u3001\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7b49\u4e1c\u897f\u76f4\u63a5\u7ef4\u62a4\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u8fd9\u4e00\u6bb5\u91cc\u6709\u4e00\u90e8\u5206\u8282\u70b9\u4e0e $x$ \u7684 $LCA$ \u662f $fa[x][y/2]$ \u7684\u5b50\u5b59\uff0c\u6240\u4ee5\u7b54\u6848\u5e94\u8be5\u662f $query(fa[x][y/2])-query(fa[x][y/2-1])$\u3002\n\n\u52a0\u4e0a $3$ \u64cd\u4f5c\u5176\u5b9e\u5c31\u662f\u4e2a\u5f3a\u884c\u4e8c\u5408\u4e00\u3002\u6211\u4eec\u4f1a\u53d1\u73b0\u5176\u5b9e\u56de\u5230\u7b2c $x$ \u4e2a\u65f6\u523b\u5c31\u662f\u4ece\u7b2c $x$ \u4e2a\u65f6\u523b\u8f6c\u79fb\u8fc7\u6765\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8fde\u8fb9\u540e\u5728\u6811\u4e0a\u8dd1 $dfs$ \u5373\u53ef\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$ \u3002",
        "postTime": 1613363018,
        "uid": 120911,
        "name": "Lynkcat",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 \u300cTOCO Round 1\u300dHistory"
    },
    {
        "content": "\u5b66\u6821[dd_d](https://www.luogu.com.cn/user/167999)\u7684\u6a21\u62df\u8d5b\uff0c\u8d5b\u65f6\u76f4\u63a5\u5bc4\u4e86\uff0c\u8d5b\u540e\u542c Ta \u8bb2\u4e86\u4e09\u904d\u624d\u4f1a Orz\u3002\n## \u9898\u9762\n\n```1 x``` \u5c06 $x$ \u4f4d\u7f6e\u4e0a\u7684\u706f\u6253\u5f00\u6216\u5173\u95ed\uff08\u539f\u6765\u5982\u679c\u6253\u5f00\u5c31\u5173\u95ed\uff0c\u5426\u5219\u6253\u5f00\uff09\u3002\n\n```2 x y``` \u8be2\u95ee\u6811\u4e0a\u4e0e $x$ \u76f8\u540c\u6df1\u5ea6\u7684\u70b9\u4e2d\u4e0e $x$ \u7ed3\u70b9\u8ddd\u79bb\u4e3a $y$ \u7684\u70b9\u4e2d\u5f00\u7740\u7684\u706f\u7684\u4e2a\u6570\u3002\n\n```3 x``` \u56de\u5230\u7b2c $x$ \u6b21\u4e8b\u4ef6\u53d1\u751f\u4e4b\u540e\u7684\u72b6\u6001\u3002\n## \u9898\u89e3\n\u5148\u4e0d\u8003\u8651\u64cd\u4f5c $3$ \u4f1a\u5728\u4e0b\u9762\u63d0\u5230\u3002\n\n* $10pts$ \u5728\u8003\u573a\u4e0a\u60f3\u51fa\u6765\u7684\u505a\u6cd5\uff0c\u56e0\u4e3a\u6811\u540c\u5c42\u7684\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u663e\u7136\u662f\u5076\u6570\uff0c\u5982\u4e0b\u56fe\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/mn94dfkm.png)\n\n\u624b\u73a9\u53d1\u73b0 $len_{2\\rightarrow3}=2,len_{6\\rightarrow7}=4,len_{5\\rightarrow8}=4\\dots$\n\n\u6240\u4ee5\u5f53\u64cd\u4f5c $2$ \u4e2d $y=0$ \u65f6\uff0c\u7b54\u6848\u5c31\u662f $0$\u3002\n\n* $20\\sim30pts$ $\\mathcal O(n^3)$ \u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u505a\u4e00\u904d\u641c\u7d22\uff0c\u627e\u51fa\u8ddd\u79bb\u7b49\u4e8e $y$ \u7684\u70b9\uff0c\u7edf\u8ba1\u7b54\u6848\uff0c\u5bf9\u4e8e\u64cd\u4f5c $1$ \u76f4\u63a5\u66b4\u529b\u4fee\u6539\u5373\u53ef\u3002\n\n* $50\\sim60pts$ $\\mathcal O(n^2)$ \u60f3\u5230 $20pts$ \u7684\u505a\u6cd5\u4ee5\u540e\u5c31\u5f88\u5bb9\u6613\u60f3\u5230 $60pts$ \u505a\u6cd5\u4e86\u5427\uff08~~\u5c31\u6211\u6ca1\u60f3\u5230~~\uff09\u3002\n\n\u5148\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u8d77\u70b9\u9884\u5904\u7406\u51fa\u6240\u6709\u70b9\u5230\u5b83\u7684\u8ddd\u79bb\uff0c\u6bcf\u6b21\u8be2\u95ee\u8fd9\u4e9b\u70b9\u3002\n\n* $100pts$ $\\mathcal O(n\\log n)$ \u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u53ef\u4ee5\u7528 ST \u8868 $f_{i,j}$ \u7ef4\u62a4 $i$ \u5411\u4e0a $j$ \u7ea7\u7684\u7956\u5148\uff0c\u533a\u95f4\u4fee\u6539\u67e5\u8be2\u5219\u53ef\u4ee5\u7528\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n## \u7ef4\u62a4\u65b9\u6cd5\n\u7531\u4e8e dfs \u5e8f\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u8fd9\u4e00\u6bb5\u4e2d\u6df1\u5ea6\u7b49\u4e8e $x$ \u7684\u70b9\u4e2d\u5f00\u7740\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u5148 $\\mathcal O(n)$ \u679a\u4e3e\u51fa\u6240\u6709\u5b50\u6811\u7684 dfs \u5e8f\u8d77\u70b9\u548c\u7ec8\u70b9\u3002\n\n\u7136\u540e\u7531\u4e8e\u5411\u4e0a\u7684\u8ddd\u79bb\u662f $y/2$ \u6240\u4ee5\u7edf\u8ba1 $x$ \u5411\u4e0a $y/2$ \u7ea7\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u4eae\u7740\u7684\u8282\u70b9\u6570\u5373\u53ef\u3002\n\n**\u4f46\u662f**\u76f8\u540c\u6df1\u5ea6\u7684\u8fd8\u6709\u5176\u4ed6\u5b50\u6811\uff0c\u5982\u4e0a\u56fe\u4e2d $4$ \u548c $4$ \u5728\u76f8\u540c\u6df1\u5ea6\uff0c\u5047\u8bbe $y=4$ \u4f46\u662f\u4ed6\u4eec\u7684\u8ddd\u79bb\u663e\u7136\u4e0d\u662f $4$\uff0c\u9700\u8981\u7edf\u8ba1\u7684\u662f $8$ \u548c $9$\uff0c\u6240\u4ee5\u5728\u7edf\u8ba1\u6df1\u5ea6\u65f6\u8fd8\u8981\u51cf\u53bb\u5b83\u5411\u4e0a $y/2-1$ \u7ea7\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u4eae\u7740\u7684\u8282\u70b9\u6570\uff1a\n$$ans\\leftarrow query(f_{x,y/2})-query(f_{x,y/2-1})$$\n$query$ \u8868\u793a\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7684\u8be2\u95ee\u64cd\u4f5c\u3002\n\n## \u64cd\u4f5c3\n\u6700\u540e\u5c31\u662f\u64cd\u4f5c $3$ \u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u56e0\u4e3a\u8981\u56de\u5230\u7b2c $x$ \u6b21\u6240\u4ee5\u8bb2\u6240\u6709\u8be2\u95ee\u79bb\u7ebf\uff0c\u628a\u64cd\u4f5c $3$ \u4e2d\u7684 $x$ \u548c $i$ \u8fde\u8fb9\uff0c\u5bf9\u4e8e\u5176\u4ed6\u64cd\u4f5c\u76f4\u63a5\u7531\u4e0a\u4e00\u6b21\u5411\u4e0b\u4e00\u6b21\u8fde\u8fb9\uff0c\u6700\u540e**\u4ece0\u5f00\u59cb**\u5bf9\u4e8e\u6bcf\u6761\u8fb9\u505a\u4e00\u904d dfs \u904d\u5386\u5e76\u8fdb\u884c\u64cd\u4f5c\uff0c\u64cd\u4f5c $3$ \u5c31\u8fce\u5203\u800c\u89e3\u4e86\u3002\n\n[Code](https://www.luogu.com.cn/paste/wwhildah)",
        "postTime": 1648179599,
        "uid": 262322,
        "name": "panyanppyy",
        "ccfLevel": 5,
        "title": "P7394"
    },
    {
        "content": "\u79bb\u7ebf\u64cd\u4f5c\u6811 + bfs\u5e8f + \u6811\u72b6\u6570\u7ec4\n\n\u9996\u5148\u53d1\u73b0\u8fd9\u9898\u8981\u6c42\u9000\u56de\u5230\u5386\u53f2\u7248\u672c\u800c\u672a\u8981\u6c42\u5f3a\u5236\u5728\u7ebf\uff0c\u800c\u4e14\u5bf9\u6811\u7684\u64cd\u4f5c\u4e5f\u662f\u53ef\u9006\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a\u6240\u6709\u64cd\u4f5c\u4e0e\u8be2\u95ee\u6309\u5f71\u54cd\u987a\u5e8f\u8fde\u6210\u4e00\u68f5\u64cd\u4f5c\u6811\u3002\u8fd9\u6837\u6bcf\u4e2a\u5bf9\u6bcf\u4e2a\u8be2\u95ee\u6709\u5f71\u54cd\u7684\u64cd\u4f5c\u662f\u64cd\u4f5c\u6811\u4e0a\u7684\u4e00\u4e2a\u524d\u7f00\u3002\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u64cd\u4f5c\u6811\u8fdb\u884c dfs\uff0c\u8fdb\u5165\u8282\u70b9\u65f6\u6267\u884c\u5bf9\u5e94\u7684\u64cd\u4f5c\uff0c\u9000\u51fa\u65f6\u5219\u64a4\u9500\u64cd\u4f5c\u3002\n\n\u7136\u540e\u8003\u8651\u8be2\u95ee\u7684\u7279\u70b9\uff0c\u5982\u679c $y$ \u4e3a\u5947\u6570\u65f6\uff0c\u7b54\u6848\u663e\u7136\u4e3a $0$\uff1b\u82e5\u4e3a\u5076\u6570\uff0c\u5219\u6ee1\u8db3\u6761\u4ef6\u7684\u8282\u70b9\u4e00\u5b9a\u662f $x$ \u7684 $\\frac{y}{2}$ \u7ea7\u7236\u4eb2\u7684 $\\frac{y}{2}$ \u7ea7\u513f\u5b50\uff0c\u4f46\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c$x$ \u7684 $\\frac{y}{2}-1$ \u7ea7\u7236\u4eb2\u7684 $\\frac{y}{2}-1$ \u7ea7\u513f\u5b50\u4e5f\u6ee1\u8db3\u524d\u8ff0\u6761\u4ef6\u4f46\u4e0d\u6ee1\u8db3\u8be2\u95ee\u6761\u4ef6\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u8be2\u95ee\u62c6\u6210\u4e24\u4e2a\u5f62\u5982\u300c$x$ \u7684 $k$ \u7ea7\u7236\u4eb2\u7684 $k$ \u7ea7\u513f\u5b50\u4e0a\u6743\u503c\u548c\u300d\u7684\u95ee\u9898\u3002\n\n\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff0c\u88ab\u62c6\u89e3\u540e\u7684\u8be2\u95ee\u6bcf\u6b21\u6d89\u53ca\u7684\u70b9\u662f\u539f\u6811 bfs \u5e8f\u4e0a\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u5177\u4f53\u8bc1\u660e\u4e5f\u4e0d\u96be\u3002\n\n\u7136\u540e\u95ee\u9898\u5c31\u88ab\u8f6c\u5316\u4e3a\u4e86 bfs \u5e8f\u4e0a\u5355\u70b9\u4fee\u6539\u533a\u95f4\u6c42\u548c\u95ee\u9898\uff0c\u53ef\u4ee5\u7528\u5e38\u6570\u5c0f\u7684\u6811\u72b6\u6570\u7ec4\u89e3\u51b3\u3002\n\n\u8003\u8651\u786e\u5b9a\u8be2\u95ee\u7684\u533a\u95f4\uff0c\u53ef\u4ee5\u5148\u628a\u8be2\u95ee\u79bb\u7ebf\uff0c\u7528 [[Cnoi2019]\u96ea\u677e\u679c\u6811](https://www.luogu.com.cn/problem/P5384) \u4e2d\u7684 dfs + \u5dee\u5206 \u7684\u65b9\u6cd5\u6c42\u51fa\u8be2\u95ee\u8282\u70b9\u7684 $k$ \u7ea7\u7236\u4eb2\u7684 $k$ \u7ea7\u513f\u5b50\u7684\u6570\u91cf\uff0c\u7136\u540e\u7528\u88ab dfs \u5230\u7684\u65f6\u95f4\u5dee\u786e\u5b9a\u8be5\u8282\u70b9\u5728\u533a\u95f4\u5185\u7684\u76f8\u5bf9\u4f4d\u7f6e\uff0c\u4ece\u800c\u786e\u5b9a\u8be2\u95ee\u7684\u533a\u95f4\uff0c\u8fd9\u90e8\u5206\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n+m)$\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003\u4e0b\u65b9\u7684\u4ee3\u7801\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n+m)$\u3002\n\n\u53c2\u8003\u4ee3\u7801(\u7565\u4e11\u52ff\u55b7) :\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N = 100000;\n\nvector<int> to[200005];\nint deep[200005];\nint id  [200005];       // bfs \u5e8f\nint stk [200005];\nint bin [200005];\n\nint que[200005][3];\nint len[200005];        // \u533a\u95f4\u957f\u5ea6\nint lef[200005];        // \u65f6\u95f4\u5dee\n\nvector<int> ct[200005];\nvector<int> q1[200005];\nvector<int> q2[200005];\n\nint val[200005];\nint ans[200005];\n\nnamespace BIT{\n    int c[100005], N = 100004;\n    int lowbit( int x ) { return x & -x; }\n    void modify( int x, int v ) { for( ;x < N; x += lowbit(x) ) c[x] += v; } \n    int query( int x ) { int r = 0; for( ; x; x -= lowbit(x) ) r += c[x]; return r; }\n}\n\nvoid dfs1( int x, int f ) {\n    deep[x] = deep[f] + 1; stk[ deep[x] ] = x;\n    for( auto Q : q1[x] ) if( que[Q][2] < deep[x] ) \n      { q2[ stk[ deep[x] - que[Q][2] ] ].push_back(Q); }\n    for( auto N : to[x] ) if( N ^ f ) dfs1( N, x );\n}\n\nvoid dfs2( int x, int f ) {\n    for( auto Q : q2[x] ) len[Q] -= bin[ deep[x] + que[Q][2] ];\n    bin[ deep[x] ] ++;\n    for( auto Q : q1[x] ) lef[Q] = len[Q] + bin[ deep[x] ];\n    for( auto N : to[x] ) if( N ^ f ) dfs2( N, x );\n    for( auto Q : q2[x] ) len[Q] += bin[ deep[x] + que[Q][2] ];\n}\n\nvoid dfs3( int x ) {\n    int y = que[x][1], z = N + x;\n    if( que[x][0] == 1 ) BIT::modify( id[y], val[y] ? -1 : 1 ), val[y] ^= 1;\n    if( que[x][0] == 2 ) if( len[x] )\n      { ans[x] += BIT::query( id[y] - lef[x] + len[x] ) - BIT::query( id[y] - lef[x] );\n        ans[x] -= BIT::query( id[y] - lef[z] + len[z] ) - BIT::query( id[y] - lef[z] ); }\n    for( auto N : ct[x] ) dfs3(N);\n    if( que[x][0] == 1 ) BIT::modify( id[y], val[y] ? -1 : 1 ), val[y] ^= 1;\n}\n\nvoid bfs() {\n    queue<int> Q; Q.push(1);\n    int cnt = 0;\n    while( Q.size() ) {\n        int x = Q.front(); Q.pop(); id[x] = ++ cnt;\n        for( auto N : to[x] ) if( !id[N] ) Q.push(N);\n    }\n}\n\nint main() {\n    int n, m; cin >> n;\n    for( int i = 1; i < n; i ++ )\n      { int u, v; cin >> u >> v;\n        to[u].push_back(v);\t\n        to[v].push_back(u); }\n    cin >> m;\n    for( int i = 1; i <= m; i ++ ) {\n        cin >> que[i][0];\n        if( que[i][0] == 1 or que[i][0] == 2 )\n          { ct[i - 1].push_back(i); }\n        if( que[i][0] == 1 ) cin >> que[i][1];\n        if( que[i][0] == 2 ) cin >> que[i][1] >> que[i][2];\n        if( que[i][0] == 3 ) \n          { int k; cin >> k; ct[k].push_back(i); }\n        if( que[i][0] == 2 ) if( que[i][2] % 2 == 0 ) \n          { q1[ que[i][1] ].push_back(i); \n            q1[ que[i][1] ].push_back(i + N);\n            que[i][2] /= 2;\n            que[i + N][1] = que[i][1];\n            que[i + N][2] = que[i][2] - 1; }\n    }\n    bfs(); dfs1( 1, 0 ); dfs2( 1, 0 ); dfs3(0);\n    for( int i = 1; i <= m; i ++ ) if( que[i][0] == 2 ) cout << ans[i] << \"\\n\";\n}\n```\n",
        "postTime": 1614073151,
        "uid": 213388,
        "name": "_bzy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7394 \u3010\u300cTOCO Round 1\u300dHistory\u3011"
    }
]