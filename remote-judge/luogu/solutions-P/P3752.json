[
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problemnew/show/P3752)\n\n\u672c\u9898\u6709\u4e24\u4e2a\u5751\u70b9\uff1a\n1. \u51fa\u73b0\\ \u3001-\u6216 ' \u89c6\u4e3a\u4e00\u4e2a\u5355\u8bcd\uff0c\u5b9e\u9645\u4e0a\u662f ' \u6216 - \u89c6\u4e3a\u5355\u8bcd\u7684\u6784\u6210\u5b57\u7b26\uff0c\u5176\u5b83\u5b57\u7b26\u4f5c\u4e3a\u5206\u9694\u7b26\u3002\n1. \u4e0b\u4e00\u4e2aN\u884c\u4f9d\u6b21\u5305\u542b\u8be5\u8bed\u8a00\u7684\u540d\u79f0\uff0c\u540e\u8ddf\u8be5\u8bed\u8a00\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u5355\u8bcd\uff0c\u8bcd\u548c\u8bcd\u4e4b\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002\u5b9e\u9645\u4e0a\u5206\u5272\u5355\u8bcd\u7684\u4e0d\u4ec5\u4ec5\u662f\u7a7a\u683c\uff0c\u4e5f\u6709\u522b\u7684\u7b26\u53f7\uff0c\u6240\u4ee5\u5982\u679c\u4f7f\u7528getline\u4f5c\u4e3a\u8bfb\u5165\u6d41\u4f1aWrong\uff0c\u5e94\u8be5\u7528\u9898\u76ee\u6240\u8bf4\u7684\u90a3\u79cd\u5206\u5272\u65b9\u5f0f\u6765\u8bfb\u5355\u8bcd\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nbool check(char c) {\n    return !islower(c) && !isupper(c) && c != '\\'' && c != '-';\n}\n\nvoid convert(string &s) {\n    for (auto &c : s)\n        if (isupper(c))\n            c += 'a' - 'A';\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    map <string, string> mp;\n    string s, a, b;\n    getline(cin, s);\n    stringstream ss(s);\n\n    int n;\n    ss >> n;\n    while (n--) {\n        getline(cin, s);\n        s += ' ';\n        a = \"\";\n        int flag = 0;\n        for (auto &c : s) {\n            if (check(c)) {\n                if (flag++ && b.size())\n                    convert(b), mp[b] = a;\n                b = \"\";\n            } else {\n                if (flag)\n                    b += c;\n                else\n                    a += c;\n            }\n        }\n    }\n    getline(cin, s);\n    while (getline(cin, s)) {\n        s += ' ';\n        a = \"\";\n        for (auto &c: s) {\n            if (check(c)) {\n                convert(a);\n                if (mp.count(a)) b = mp[a];\n                a = \"\";\n            } else {\n                a += c;\n            }\n        }\n        cout << b << '\\n';\n    }\n    return 0;\n}\n\n```",
        "postTime": 1531383012,
        "uid": 107660,
        "name": "w_____",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3752 \u3010\u8bed\u8a00\u666e\u67e5\u3011"
    },
    {
        "content": "upd:2021/3/29 \u4fee\u6539\u6392\u7248\n\n\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u4e00\u4e0b\u8bed\u8a00\u666e\u67e5\u8fd9\u9053\u9898,\u8fd9\u9053\u9898\u662f\u6211\u505a\u7684\u7b2c\u4e8c\u9053 \u666e\u53ca+/\u63d0\u9ad8 \u5bf9\u6211\u4e2a\u4eba\u6709\u6bd4\u8f83\u91cd\u8981\u7684\u610f\u4e49\u3002\n\n\u8fd9\u9053\u9898\u7684\u601d\u8def\u5176\u5b9e\u4e0d\u96be\uff0c\u5751\u70b9\u591a\u3002\u5751\u70b9\u5982\u4e0b\uff1a\n\n- \u51fa\u73b0 ``` ' - \" ``` \u89c6\u4e3a\u4e00\u4e2a\u5355\u8bcd,\u662f\u6307\u5f62\u5982 \n```aa'b aa-b aa\"b ``` \n\u7b49\u89c6\u4e3a\u540c\u4e00\u4e2a\u5355\u8bcd\u5b58\u50a8\u8bb0\u5f55\u3002\n\n- \u5206\u9694\u7b26 ``` . , ? ! ; ( ) ``` \u662f\u6307\u5f62\u5982 ``` aa.bb aa,bb aa?bb aa!bb ``` \u4f1a\u5c06 ```aa``` \u548c ```bb``` \u89c6\u4e3a\u4e24\u4e2a\u5355\u8bcd\u5206\u522b\u5b58\u50a8\u3002\n\n- \u5355\u8bcd\u5339\u914d\u4e0d\u5206\u5927\u5c0f\u5199\uff01\n\n---\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u601d\u8003\u8fd9\u9053\u9898\u7684\u505a\u6cd5\uff1a\n\u4e3b\u4f53\u7ed3\u6784\uff1amap<string,int>  (\u4e3b\u8981\u662f\u672c\u849f\u84bb\u4e0d\u4f1a\u5b57\u5178\u6811)\n\u4f7f\u7528string\u6620\u5c04\u5230int\uff0c\u5728\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4 $l$ \u5b58\u50a8\u8bed\u8a00\u540d\u79f0\uff0c\u8282\u7701\u7a7a\u95f4\u3002\n\n\u8bfb\u5165\u90e8\u5206(\u4e0d\u5206\u5927\u5c0f\u5199\uff0c\u53ea\u5b58\u5c0f\u5199)\n```cpp\nfor(int i=1;i<=n;i++){\n\t\tcin>>l[i]; //\u8bed\u8a00\u540d\u79f0\n\t\tm=\"\";\n\t\tflag=1;\n\t\tcin.get(c);\n\t\tdo{\n\t\t\tcin.get(c);\n\t\t\tif(c==' '){\n\t\t\t\tif(m==\"\")\n\t\t\t\t\tcontinue;\t\n\t\t\t\tv[m]=i;\n\t\t\t\tm=\"\";\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse if(c=='\\n'||c=='\\r'){ //\u8bfb\u5b8c\u6574\u884c\n\t\t\t\tv[m]=i;\n\t\t\t\tm=\"\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(c>='a'&&c<='z')//\u63a5\u4e0b\u6765\u662f\u5927\u5c0f\u5199\u8f6c\u6362\n\t\t\t\tm+=c;\n\t\t\telse if(c>='A'&&c<='Z')\n\t\t\t\tm+=(c-'A'+'a');\n            else m+=c;\n\t\t}while(1);\n\t}\n```\n\u67e5\u8be2\u4f7f\u7528map\u7684\u8fed\u4ee3\u5668\uff0c\u4e5f\u5f88\u65b9\u4fbf\u3002\n```cpp\n  //iter \u662f map<string,int>::iterator \u7c7b\u578b\n  iter=v.find(r);\n  if(iter!=v.end()){\n    cout<<l[iter->second]<<endl;//\u8f93\u51fa\u952e\u503c\u5bf9\u91cc\u7684\u503c\n   break;\n}\n```\n\n\u6240\u4ee5\u4ee3\u7801\u5982\u4e0b:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nmap<string,int>v;\nmap<string,int>::iterator iter;  \nstring l[101];\nint main(){\n\tios::sync_with_stdio(false);\n\tint n;\n\tchar c;\n\tstring m;\n\tcin>>n;\n\tbool flag=1;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>l[i];\n\t\tm=\"\";\n\t\tflag=1;\n\t\tcin.get(c);\n\t\tdo{\n\t\t\tcin.get(c);\n\t\t\tif(c==' '){\n\t\t\t\tif(m==\"\")\n\t\t\t\t\tcontinue;\t\n\t\t\t\tv[m]=i;\n\t\t\t\tm=\"\";\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse if(c=='\\n'||c=='\\r'){\n\t\t\t\tv[m]=i;\n\t\t\t\tm=\"\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(c>='a'&&c<='z')\n\t\t\t\tm+=c;\n\t\t\telse if(c>='A'&&c<='Z')\n\t\t\t\tm+=(c-'A'+'a');\n            else m+=c;\n\t\t}while(1);\n\t}\n\tstring k=\"\",r=\"\";\n\tbool fst=1;\n    while(getline(cin,k)){\n        if(k==string())\n            continue;\n        if(k[k.length()-1]=='\\r')    \n            k.erase(k.length()-1);\n\t\tfor(int i=0;i<k.length()&&k.length();i++){\n\t\t\tr=string();\n\t\t\twhile(k[i]!='!'&&k[i]!=' '&&k[i]!=','&&k[i]!='.'&&k[i]!='('&&k[i]!=')'&&k[i]!=';'&&i<k.length()){\n\t\t\t\tif(k[i]>='A'&&k[i]<='Z')\n\t\t\t\t\tr+=(k[i]-'A'+'a');\n\t\t\t\telse if(k[i]>='a'&&k[i]<='z')\n\t\t\t\t\tr+=(k[i]);\n                else r+=k[i];\n\t\t\t\ti++;\n\t\t\t}\n            if(r==string())\n                continue;\n\t\t\titer=v.find(r);\n\t\t\tif(iter!=v.end()){\n\t\t\t\tcout<<l[iter->second]<<endl;\n\t\t\t\tbreak;\n\t\t\t}\n            else;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1616043052,
        "uid": 387961,
        "name": "rickyxrc",
        "ccfLevel": 4,
        "title": "\u9898\u89e3P3752\u3010\u8bed\u8a00\u666e\u67e5\u3011"
    },
    {
        "content": "# \u9898\u610f\u7b80\u8ff0\n+ \u5148\u8f93\u5165\u4e00\u4e9b\u5355\u8bcd\u5e76\u544a\u8bc9\u4f60\u8fd9\u662f\u4ec0\u4e48\u8bed\u8a00\u3002\n+ \u7136\u540e\u518d\u7ed9\u4f60\u51e0\u6bb5\u53e5\u5b50\uff0c\u8ba9\u4f60\u627e\u51fa\u53e5\u5b50\u4e2d\u5355\u8bcd\u7684\u8bed\u8a00\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n\u601d\u8def\uff1a\n\n\u770b\u5230\u8fd9\u79cd\u5b57\u7b26\u4e32\u4e0e\u5176\u4ed6\u4e1c\u897f\u4e00\u4e00\u5bf9\u5e94\u7684\u9898\uff0c\u5c31\u80fd\u60f3\u5230\u7528 ```map``` \u3002\n\n\u6211\u4eec\u4ee4 ```dict[\"key\"]``` \u8868\u793a ```key``` \u5355\u8bcd\u6240\u5c5e\u8bed\u8a00\u7684\u7f16\u53f7\u3002\n\n\u8981\u7528\u7684\u4e1c\u897f\uff1a\n\n```cpp\nmap<string, int> dict;\nstring lans[101];\nint n;//\u8bed\u8a00\u6570\u91cf\nchar c;//\u8bfb\u5165\u7528\u5b57\u7b26\nstring m;//\u5355\u8bcd\u5b57\u7b26\u4e32\n```\n\n\u9996\u5148\uff0c\u8bfb\u5165 n \u884c\u3002\n\u5bf9\u4e8e\u6bcf\u4e00\u884c\uff1a\n- \u5c06\u5355\u8bcd\u5b57\u7b26\u4e32 ```m``` \u521d\u59cb\u5316\u4e3a\u7a7a\u3002\n- \u5982\u679c\u8bfb\u5230\u5b57\u6bcd\uff0c\u5c31\u628a\u5b57\u6bcd\u52a0\u5728 ```m``` \u540e\u9762\u3002\n- \u5982\u679c\u8bfb\u5230\u7a7a\u683c\uff0c\u5c06 ```m``` \u4f5c\u4e3a\u952e\u5b58\u5165 ```map``` \u4e2d\uff0c\u503c\u4e3a\u8fd9\u4e2a\u5355\u8bcd\u6240\u5c5e\u8bed\u8a00\u7684\u4e0b\u6807\u3002\n\n**\uff08\u6ce8\u610f\u5355\u8bcd\u7edf\u4e00\u8f6c\u4e3a\u5c0f\u5199\u5f62\u5f0f\uff0c\u56e0\u4e3a\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff09**\n```cpp\nfor(int i=1; i<=n; i++){\n        cin>>lans[i];\n        m=\"\";\n        cin.get(c);\n        while(1){\n            cin.get(c);\n            if(c==' '){//\u4e00\u4e2a\u5355\u8bcd\u7ed3\u675f\n                if(m==\"\") continue;//\u5355\u8bcd\u4e3a\u7a7a\uff0c\u820d\u53bb\n\n                dict[m]=i;//\u5b58\u50a8\u5355\u8bcd\u6240\u5c5e\u8bed\u8a00\u7684\u4e0b\u6807\n                m=\"\";//\u6e05\u7a7a\u5355\u8bcd\n                continue;\n            }\n\n            if(c=='\\n' || c=='\\r'){//\u4e00\u884c\u7ed3\u675f\uff08\u5f53\u524d\u8bed\u8a00\u8bfb\u5b8c\u4e86\uff09\n                dict[m]=i;//\u5b58\u50a8\n                m=\"\";//\u6e05\u7a7a\u5355\u8bcd\n                break;\n            }\n            \n            //\u8f6c\u6362\u5927\u5c0f\u5199\n            if(c>='a' && c<='z') m+=c;\n            else if(c>='A' && c<='Z') m+=(c-'A'+'a');\n            else m+=c;\n        }\n    }\n```\n\n\u7136\u540e\uff0c\u8bfb\u5165\u82e5\u5e72\u884c\uff08\u6ce8\u610f\u884c\u4e2d\u53ef\u80fd\u6709\u7a7a\u683c\uff0c\u6240\u4ee5\u8981\u7528 ```getline``` )\n\n\u6bcf\u884c\u4ee5\".\" \",\" \"?\" \"!\" \";\" \"(\" \")\" \u7a7a\u683c\u548c\u6362\u884c\u4f5c\u4e3a\u5206\u9694\u7b26\u5206\u51fa\u5355\u8bcd\uff08\u7528 ```check``` \u51fd\u6570\u5b9e\u73b0\uff09\u3002\n```cpp\nbool check(char x){\n    if(x!=' ' && x!='!' && x!='.' && x!='?' && x!=',' && x!=';' && x!='(' && x!=')') return true;//\u6ce8\u610f\uff01\u8981\u6309\u9898\u76ee\u6240\u7ed9\u65b9\u5f0f\u5206\u5272\u5b57\u7b26\n    return false;\n}\n```\n\n\u7136\u540e\u5728 ```map``` \u91cc\u67e5\u627e\uff0c\u5982\u679c\u627e\u5230\uff0c\u90a3\u5c31\u8f93\u51fa\u8bed\u8a00\u5e76\u6362\u884c\uff0c\u518d\u8bfb\u4e0b\u4e00\u884c\u3002\n```cpp\n\tstring inp=\"\",t=\"\";\n    while(getline(cin, inp)){\n        if(inp==string()) continue;//\u8bfb\u5165\u7a7a\u884c\uff0c\u820d\u53bb\n        if(inp[inp.length()-1]=='\\r') //\u6709\u5947\u602a\u7684\u5b57\u7b26\uff0c\u820d\u53bb\n        \tinp.erase(inp.length()-1);\n\n        \n        for(int i=0; i<inp.length() && inp.length(); i++){//\u5f00\u59cb\u641c\u4e86\n            t=\"\";//\u521d\u59cb\u5316\n            while(check(inp[i]/*\u68c0\u9a8c\u5206\u9694\u7b26*/)&& i<inp.length()){\n                if(inp[i]>='a' && inp[i]<='z') t+=inp[i];\n                else if(inp[i]>='A' && inp[i]<='Z') t+=(inp[i]-'A'+'a');\n                else t+=inp[i];//\u8f6c\u6362\u5927\u5c0f\u5199\n\n                i++;\n            }\n\n            if(t==\"\") continue;//\u7a7a\u5355\u8bcd\uff0c\u820d\u53bb\n\n            \n\t\t\tif(dict[t]!=0){//\u641c\u5230\u4e86\n\t\t\t\tcout<<lans[dict[t]]<<endl;//\u8f93\u51fa\u8bed\u8a00\u5e76\u6362\u884c\n\t\t\t\tbreak;//\u8bfb\u4e0b\u4e00\u884c\n\t\t\t}\n            \n        }\n    }\n```\n\n",
        "postTime": 1624794289,
        "uid": 356003,
        "name": "Xiaohuba",
        "ccfLevel": 7,
        "title": "\u7b2c\u4e00\u7bc7\u9898\u89e3"
    },
    {
        "content": "\u53d1\u4e00\u7bc7java\u5b57\u5178\u6811\u7684\u505a\u6cd5\u3002\n\n\u8fd9\u9053\u7684\u5751\u5f88\u591a\u3002\n\n\u7b2c\u4e00\uff1a\u8f93\u5165\u8bed\u8a00\u7684\u65f6\u5019\uff0c\u5b83\u53ea\u8bf4\u4e86\u662f\u5355\u8bcd\uff0c\u5e76\u4e0d\u4fdd\u8bc1\u662f\u4e00\u5b9a\u5927\u5199\u6216\u5c0f\u5199\uff0c\u4f46\u662f\u6709\u4e00\u70b9\u80af\u5b9a\u7684\u4ee5\u7a7a\u683c\u5206\u5272\uff0c\u6240\u4ee5\u4f7f\u7528\u5b57\u5178\u6811\u5b58\u50a8\u65f6\uff0c\u8981\u5f00\u6bd426\u5927\u7684\u7a7a\u95f4\uff0c\u6211\u8fd9\u91cc\u5f0035\u6765\u5904\u7406\uff0c\u5176\u4ed6\u7684\u5b57\u6bcd\uff1b\n\n\u7b2c\u4e8c\uff1a\u5b57\u7b26\u4e32\u7684\u6bd4\u8f83\u662f\u4e0d\u5206\u5927\u5c0f\u5199\u7684\uff0c\u800c\u4e14\u9700\u8981\u6309\u7167\u9898\u76ee\u7ed9\u7684\".\" \",\" \"?\" \"!\" \";\"\"(\"\")\"\u8fdb\u884c\u5206\u5272\uff0c\u8bb0\u5f97\u8fd8\u6709\u7a7a\u683c' '\uff1b\n\n\u7b2c\u4e09\uff1a\u5728\u6bd4\u8f83\u7684\u6700\u540e\uff0c\u56e0\u4e3a\u5728\u5199\u7684\u65f6\u5019\u6761\u4ef6\u662f\u5728\u627e\u5230\u5206\u5272\u7b26\u65f6\uff0c\u624d\u4f1a\u53bb\u5b57\u5178\u6811\u627e\uff0c\u4f46\u662f\u5982\u679c\u662f\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\uff0c\u5b83\u540e\u9762\u6ca1\u6709\u5206\u5272\u7b26\uff0c\u5c31\u4f1a\u5bfc\u81f4\uff0c\u6ca1\u5339\u914d\u6ca1\u8f93\u51fa\uff0c\u6240\u4ee5\u5728\u6700\u540e\u8fd8\u8981\u5224\u65ad\u662f\u5426\u627e\u5230\u4e86\uff0c\u6ca1\u627e\u5230\uff0c\u5c31\u76f4\u63a5\u628a\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u8f93\u51fa\u3002\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.util.HashMap;\n\npublic class Main {\n\n\t\n\tstatic Tree tree[] = new Tree[50000];// \u5b57\u5178\u6811\n\tstatic int tot = 0; //\u5185\u5b58\u6c60\n\tstatic int index = 26; //\u975ea-z\u5b57\u6bcd\u7684\u7279\u6b8a\u5904\u7406\u4e0b\u6807\u6c60\n\tstatic HashMap<Character, Integer> map = new HashMap<>();  //\u4fdd\u5b58\u975e\u7279\u6b8a\u5b57\u6bcd\u7684\u4e0b\u6807\n\n\tstatic class Tree {\n\t\tint next[] = new int[35]; // 0-25\u8868\u793a\u5c0f\u5199\uff0c\u5f00\u591a10\u4e2a\u662f\u9488\u5bf9\u53ef\u80fd\u51fa\u73b0\u7684\u975ea-z\u5b57\u6bcd\n\t\tint number;    // \u4fdd\u5b58\u8bed\u8a00\u7684\u4e0b\u6807\n\n\t}\n\n\tstatic void insert(char[] s, int num) {\n\t\tint p = 0;   //\u6839\u8282\u70b9\n\t\tint len = s.length;\n\t\tfor (int i = 0; i < len; i++) {\n\n\t\t\tint c;  \n\n\t\t\tif (s[i] >= 'a' && s[i] <= 'z')  //\u5982\u679c\u662fa-z\u5c31\u8ba1\u7b97\u7684\u51fac\n\t\t\t\tc = s[i] - 'a';\n\t\t\telse\n\t\t\t\tc = map.get(s[i]);  //\u5426\u5219\u5c31\u4ecemap\u53d6\n\n\t\t\tif (tree[p].next[c] == 0) {\n\t\t\t\ttree[p].next[c] = ++tot;\n\t\t\t\ttree[tot] = new Tree();\n\t\t\t}\n\t\t\tp = tree[p].next[c];\n\t\t}\n\n\t\ttree[p].number = num;\n\t}\n\n\tstatic int query(char[] s) {\n\t\tint p = 0;\n\n\t\tint len = s.length;\n\t\tfor (int i = 0; i < len; i++) {\n\t\t\tint c;\n\t\t\tif (s[i] >= 'a' && s[i] <= 'z')\n\t\t\t\tc = s[i] - 'a';\n\t\t\telse {\n\t\t\t\tc = map.get(s[i]);\n\n\t\t\t}\n\n\t\t\tif (tree[p].next[c] == 0)  //\u8be5\u60c5\u51b5\u662f\u8be5\u5355\u8bcd\u4e0d\u5b58\u5728\n\t\t\t\treturn 0;    \n\t\t\tp = tree[p].next[c];\n\t\t}\n\t\t\n\t\treturn tree[p].number;   //\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u53ef\u80fd\u4e3a0\uff0c\u5c31\u8868\u793a\u8fd9\u4e0d\u662f\u5355\u8bcd\u7ed3\u5c3e\uff0c\u5426\u5219\u5c31\u662f\u5355\u8bcd\u7ed3\u5c3e\n\n\t}\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\t\t\n\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); //\u8f93\u5165\n\t\tint n = Integer.parseInt(reader.readLine().trim());\n\t\ttree[0] = new Tree();  //\u521d\u59cb\u5316\u6839\u8282\u70b9\n\t\t\n\t\tString source[] = new String[n + 1]; //\u5b58\u50a8\u8bed\u8a00\n\t\t\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\t\n\t\t\tString temp[] = reader.readLine().trim().split(\" \");  //\u8bfb\u5165\n\t\t\t\n\t\t\tsource[i] = temp[0];  //\u6bcf\u4e00\u884c\u7684\u7b2c\u4e00\u4e2a\u4e3a\u8bed\u8a00\uff0c\u539f\u6837\u4fdd\u5b58\n\t\t\t\n\t\t\tfor (int j = 1; j < temp.length; j++) {\n\n\t\t\t\tchar s[] = temp[j].toLowerCase().toCharArray();\n\t\t\t\t\n\t\t\t\tfor (int k = 0; k < s.length; k++) {\n\t\t\t\t\tif (s[k] >= 'a' && s[k] <= 'z')  //\u5982\u679c\u662fa-z\u4e0d\u9700\u8981\u7279\u6b8a\u5904\u7406\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\n\t\t\t\t\t//\u975ea-z\n\t\t\t\t\tif (map.containsKey(s[k]))   //\u5b58\u5728\u8fc7\uff0c\u4e0d\u9700\u8981\u6dfb\u52a0\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\n\t\t\t\t\tmap.put(s[k], index++); //\u4e0d\u5b58\u5728\uff0c\u6dfb\u52a0\n\t\t\t\t}\n\t\t\t\tinsert(s, i);   //\u8bb0\u5f97\u63d2\u5165\n\t\t\t}\n\t\t}\n\t\t\n\t\treader.readLine();  //\u5355\u72ec\u7a7a\u4e00\u884c\n\t\t\n\t\tStringBuffer sb = new StringBuffer();\n\t\twhile (true) {\n\t\t\tString temp = reader.readLine();  //\u8bfb\u5165\n\t\t\tif (temp == null)  //\u7a7a\u884c\u9000\u51fa\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tString str = \"\";\n\t\t\tchar s[] = temp.toLowerCase().toCharArray();\n\t\t\t\n\t\t\tboolean find = false;  //\u627e\u5230\u6807\u8bb0\n\t\t\t\n\t\t\tfor (int i = 0; i < s.length; i++) {\n\t\t\t\t\n\t\t\t\t//\u5982\u679c\u662f\u5206\u5272\u7b26\uff0c\u5c31\u8981\u628a\u524d\u9762\u7684\u5b57\u7b26\u4e32\u62ff\u8fdb\u5b57\u5178\u6811\u5339\u914d\n\t\t\t\tif (s[i] == '.' || s[i] == ',' || s[i] == '?' || s[i] == '!' || s[i] == ';' || s[i] == '('\n\t\t\t\t\t\t|| s[i] == ')' || s[i] == ' ') {\n\t\t\t\t\t//\u957f\u5ea6\u4e3a0\uff0c\u5c31\u662f\u6ca1\u6709\u5b57\u7b26\u4e32\uff0c\u5c31continue\n\t\t\t\t\tif (str.length() == 0)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\n\t\t\t\t\t//\u67e5\u8be2\uff0c\u5982\u679c\u975e0\u5c31\u662f\u5b58\u5728\n\t\t\t\t\tint tag = query(str.toCharArray());\n\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\tif (tag == 0)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\n\t\t\t\t\tfind = true; \n\t\t\t\t\tsb.append(source[tag]).append(\"\\n\");\n\t\t\t\t\tbreak;   //\u627e\u5230\u5c31\u76f4\u63a5\u9000\u51fa\uff0c\u56e0\u4e3a\u6bcf\u4e00\u884c\u4e0d\u4f1a\u51fa\u73b0\u4e0d\u540c\u8bed\u8a00\n\n\t\t\t\t} else {\n\t\t\t\t\tstr += s[i];\n\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//\u7279\u6b8a\u5904\u7406\u6700\u540e\u7684\uff0c\u56e0\u4e3a\u6700\u540e\u53ef\u80fd\u6ca1\u6709\u5206\u5272\uff0c\u6709\u53ef\u80fd\u627e\u5230\u6700\u540e\u624d\u627e\u5230\uff0c\u6240\u4ee5\u8981\u52a0\u5165\u6700\u540e\u7684\uff0c\u5f53\u7136\u5982\u679c\u627e\u4e86\uff0c\u5c31\u76f4\u63a5\u8df3\u8fc7\n\t\t\tif (!find) {   \n\t\t\t\tint tag = query(str.toCharArray()); \n\t\t\t\tif (tag != 0) //\u5176\u5b9e\u8fd9\u5c31\u8bdd\u548c\u524d\u9762\u7684\u627e\u5b57\u5178\u6811\u90fd\u53ef\u4ee5\u5220\u6389\uff0c\u56e0\u4e3a\u9898\u76ee\u4e00\u5df2\u7ecf\u8bf4\u660e\u4e86\uff0c\u6709\u4e14\u53ea\u6709\u4e00\u79cd\uff0c\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\n\t\t\t\t\tsb.append(source[tag]).append(\"\\n\");\n\t\t\t}\n\n\t\t}\n\t\t\n\t\t//\u8f93\u51fa\n\t\tPrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n\t\tout.print(sb);\n\t\tout.flush();\n\t\tout.close();\n\n\t}\n}\n```\n",
        "postTime": 1589462201,
        "uid": 276618,
        "name": "\u82cf\u6253\u9752\u67e0\u6c34",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3752 \u3010\u8bed\u8a00\u666e\u67e5\u3011"
    }
]