[
    {
        "content": "~~\u9898\u5916\u8bdd\uff1a\u6709\u4eba\u8bf4\u6a21\u62df\u9000\u706b\u662f\u5bf9\u4e00\u9053\u597d\u9898\u7684\u4e0d\u656c\uff0c\u6211\u8bf4\u8981\u662f\u4f1a\u5199\u6b63\u89e3\u6211\u81ea\u7136\u4f1a\u8868\u793a\u51fa\u5bf9\u8be5\u9898\u7684\u656c\u610fQAQ~~  \n## \u9996\u5148\u58f0\u660e\uff01\u672c\u9898\u662f\u4e00\u9053\u6a21\u62df\u9000\u706b\u7684\u7ec3\u624b\u597d\u9898\uff01\n\u6a21\u62df\u9000\u706b\u7684\u6982\u5ff5\u8f83\u4e3a\u7b80\u5355\uff0c\u4e0d\u61c2\u7684\u540c\u5b66\u4eec\u53ef\u4ee5\u5148\u4e86\u89e3\u4e00\u4e0b[\u6b64\u7bc7\u6d1b\u8c37\u65e5\u62a5](https://m-sea.blog.luogu.org/qian-tan-SA)\u3002  \n\u672c\u9898\u867d\u4e3a\u9ed1\u9898\uff0c\u4f46\u5b9e\u5219\u6bd4[P1337 [JSOI2004]\u5e73\u8861\u70b9 / \u540a\u6253XXX](https://www.luogu.org/problemnew/show/P1337)\u7b80\u5355\u4e00\u4e9b\u3002\u6b64\u7bc7\u9898\u89e3\u4e0d\u5bf9\u6a21\u62df\u9000\u706b\u70b9\u7684\u6982\u5ff5\u8fc7\u591a\u8d58\u8ff0\uff0c\u5982\u6709\u4e0d\u61c2\u53ef\u4ee5\u770b\u4e00\u4e0b\u67d0\u4f4d\u673a\u623f\u5927\u4f6c~~\uff08\u5927\u673a\u4f6c\uff09~~\u7684[\u535a\u5ba2](https://ciyang.blog.luogu.org/solution-p2210)\u3002\u8fd9\u4f4d\u5927\u4f6c\u5bf9\u6a21\u62df\u9000\u706b\u672c\u8eab\u7684\u8bb2\u89e3\u591a\uff0c\u9002\u5408\u6a21\u62df\u9000\u706b\u5165\u95e8\u7684\u540c\u5b66\u4eec\u3002\u6b64\u7bc7\u9898\u89e3\u5bf9\u9898\u76ee\u672c\u8eab\u8bb2\u89e3\u591a\uff0c\u4ee5\u4fbf\u540c\u5b66\u4eec\u53ef\u4ee5\u5feb\u901f\u5b66\u4f1a\u5b9e\u9645\u5e94\u7528\u5e76\u53ef\u4ee5\u7c7b\u6bd4\u7528\u4e8e\u5176\u4ed6\u9898\u76ee\u3002\u8bf7\u540c\u5b66\u4eec\u5404\u53d6\u6240\u9700~  \n#### \u8bb2\u89e3\u5c3d\u5728\u6ce8\u91ca\u4e2d\u2014\u2014\n```cpp\n#include<cstdio>\n#define tin int//\u4ee5\u4e0b9\u884c\u9632\u624b\u6b8b\n#define itn int\n#define tni int\n#define nit int\n#define nti int\n#define pritnf printf\n#define scnaf scanf\n#define retrun return\n#define sizoef sizeof//\u4ee5\u4e0b9\u884c\u662f\u6211\u61d2 \n#define ld long double\n#define inl inline\n#define br break\n#define con continue\n#define mst(a,b) memset(a,b,sizeof(a))\n#define fora(x,a,b) for(re tni x=a;x<=b;++x)\n#define forb(x,a,b) for(re nit x=a;x>=b;--x)\n#define re register\n#define stt struct\n#define infa 0x3f3f3f3f\n#define infb 0x7fffffff\n#define infd 0x7f\n#define abss(x) ((x)>(0)?(x):(-1)*(x))\n#define maxx(a,b) ((a)>(b)?(a):(b))//Tips\uff1a\u5b9e\u6d4bmax()\u6bd4\u5927/\u5c0f\u4e8e\u8ba1\u7b97\u6162\u4e86\u4e0d\u6b62\u4e00\u70b9\uff0c\u6240\u4ee5\u81ea\u5df1\u5199~ \n#define minn(a,b) ((a)<(b)?(a):(b))\n#define pf(_) ((_)*(_))\ntypedef long long ll;\nusing namespace std;\nconst nit maxa=14;\nconst nit maxb=20;\nconst nit maxc=10;\n#include<cstring>\n#include<ctime>\n#include<cstdlib>\n#include<cmath>\n//\u4e0b\u9762\u662f\u56db\u4e2a\u53c2\u6570\uff0c\u81ea\u5df1\u5199\u6a21\u62df\u9000\u706b\u7684\u65f6\u5019\u591a\u8c03\u4e00\u8c03\uff0c\u8fd9\u4fbf\u662f\u6a21\u62df\u9000\u706b\u7cbe\u9ad3\u6240\u5728\u3002 \nconst double zhongzhishijian=0.998;//\u7ec8\u6b62\u65f6\u7684\u65f6\u95f4\uff0c\u4e0d\u4e00\u5b9a\u8981\u5f00\u8fd9\u4e48\u5927\uff01\uff08\u5efa\u8bae\u7406\u89e3\u4e00\u4e0b\uff0c\u8003\u8bd5\u65f6\u5361\u65f6\u9650\u4e13\u7528\uff09\nconst double zhongzhiwendu=1e-16;//\u7ec8\u6b62\u65f6\u7684\u6e29\u5ea6\uff08\u5faa\u73af\u8fb9\u754c\uff0c\u505c\u6b62\u6761\u4ef6\uff09\nconst double dertT=0.99;//\u6bcf\u6b21\u6e29\u5ea6\u53d8\u5316\u91cf\uff08\u6bcf\u6b21\u5faa\u73af\uff0c\u5f53\u524d\u6e29\u5ea6*\u8fd9\u4e2a\u6570\uff09 \nconst double chushiwendu=1e7;//\u521d\u59cb\u6e29\u5ea6\uff08\u4e0d\u4f1a\u6a21\u62df\u9000\u706b\u7684\u8bdd\u53ef\u4ee5\u7406\u89e3\u6210\u5bf9\u5faa\u73af\u53d8\u91cfT\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u8f83\u5927\u6570\uff09 \n\ntni n,f[maxa][4],p[maxa]={0},pp[maxa]={0},rc=0,lsc,x,y;\n/*\n\t\u5c0f\u849f\u84bb\u6700\u8ba8\u538c\u90a3\u4e9b\u9898\u89e3\u8d77\u4e00\u5806\u83ab\u540d\u5176\u5999\u7684\u5b57\u6bcd\u3001\u5355\u8bcd\u7b80\u79f0\u4f5c\u53d8\u91cf\u540d\uff0c\u7ecf\u5e38\u8ba9\u6211\u770b\u4e0d\u61c2\uff01QAQ\u6240\u4ee5\u8fd9\u91cc\u6781\u529b\u907f\u514d \n\tn\uff08Number of cows\uff09\uff1a\u6570\u636e\u603b\u6570\uff08\u725b\u7684\u5934\u6570\uff09\u3002 \n\tf\uff08friends\uff09[i][j]\uff1a\u8bb0\u5f55\u7b2ci\u5934\u725b\u7684\u7b2cj\u4e2a\u597d\u59ec\u53cb\u3002 \n\tp\uff08\u6700\u521d\u5730\u5740/\u4f4d\u7f6e\uff09[i]\uff1a\u5b58\u7b2ci\u5934\u725b\u7684\u4f4d\u7f6e\uff0c\u7528\u4e8e\u4f5c\u4e3a\u6bcf\u6b21\u5faa\u73af\u5f00\u59cb\u65f6\u5bf9pp[]\u8d4b\u503c\u7528\u7684\u6807\u51c6\u3002\n\tpp\uff08\u5f53\u524d\u5730\u5740/\u4f4d\u7f6e\uff09\uff1a\u8bb0\u5f55\u4e00\u6b21\u9000\u706b\u8fc7\u7a0b\uff08\u5faa\u73af\u8fc7\u7a0b\uff09\u4e2d\u725b\u4eec\u7684\u5b9e\u65f6\u4f4d\u7f6e\u3002\u6bcf\u9000\u706b\u4e00\u6b21\uff0c\u5b83\u5c31\u88abp[]\u91cd\u65b0\u8d4b\u4e00\u6b21\u503c\uff0c\u4e00\u70b9\u90fd\u4e0d\u81ea\u7531\uff08\u96fe\uff09\u3002 \n\trc\uff08Result Cost\uff09\uff1a\u6700\u7ec8\u7ed3\u679c\uff08\u5168\u5c40\u6700\u5c0f\u5316\u8d39\uff09\u3002 \n\tlsc\uff08\u4e34\u65f6c\uff08Lin Shi Cost\uff09\uff09\uff1a\u201c\u4e34\u65f6\u201d\u7528\u4e8e\u4e0e\u201c\u5168\u5c40\u5f53\u524d\u6700\u4f18\u503c\u201drc\u533a\u5206\u3002\u987e\u540d\u601d\u4e49\uff0c\u6bcf\u6b21\u5faa\u73af\u65f6\u88ab\u4e34\u65f6\u7b97\u51fa\u3001\u4f7f\u7528\u3001\u6bd4\u8f83\u3001\u629b\u5f03\uff08\u88ab\u8986\u76d6\uff09\u7684\u503c\u3002 \n*/ \n\ninl tni qh();//\uff08\u6c42\u548c\uff08Qiu He\uff09\uff1a\u7528\u4e8e\u4e00\u6b21\u9000\u706b\u4e2d\u6bcf\u6b21\u5faa\u73af\u6c42\u51fa\u5f53\u524d\u89e3\u7684\u4f18\u52a3\u60c5\u51b5\uff08\u5177\u4f53\u770b\u540e\u9762\u5566\uff09\uff09\u3002 \ninl void exc(tin x,tni y);//\u4ea4\u6362\u51fd\u6570\uff08EXChange\uff09\uff1a\u7528\u4e8e\u5c06\u7384\uff08\u968f\uff09\u5b66\uff08\u673a\uff09\u6c42\uff08\u5f97\uff09\u51fa\uff08\u5230\uff09\u7684\u4e24\u5934\u725b\u4f4d\u7f6e\u8fdb\u884c\u4ea4\u6362\u3002\ninl tni sj(tni a,tni b);//\u968f\u673a\uff08Sui Ji\uff09\uff1a\u7528\u4e8e\u79d1\u5b66\u5730\u5f97\u51fa\u7ed3\u679c\u7684\u51fd\u6570\u3002 \n\ntni mian()//\u4e3b\u51fd\u6570 \n{\n\tsrand(time(NULL));//\u6700\u57fa\u672c\u7684\u968f\u673a\u79cd\u5b50 \n\tsrand(rand()+19260817);//\u6765\u81ea\u4e1c\u65b9\u7684\u795e\u79d8\u529b\u91cf\u4fdd\u4f51\u6211 \n\tsrand(rand()+20021110);//\u6211 \u4fdd\u4f51 \u6211\u81ea\u5df1 \n\tsrand(rand());//\u6700\u540e\u7384\u5b66\u4e00\u6ce2 \n\t//\n\tscanf(\"%d\",&n);//\u8f93\u5165\u725b\u7684\u6570\u76ee \n\tfora(i,1,n)//\u5b8f\u5b9a\u4e49\u7684for\u5faa\u73af\u7f16\u5199\u65b9\u4fbf\uff0c\u610f\u4e3a\uff1a\u5faa\u73af\u53d8\u91cfi\u4ece1\uff08register int i=1;\uff09\u5faa\u73af\u81f3n\uff08i<=n;++i\uff09 \n\t{\n\t\tfora(j,1,3)\n\t\t{\n\t\t\tscanf(\"%d\",&f[i][j]);//\u8bfb\u5165\u597d\u59ec\u53cb \n\t\t}\n\t\tp[i]=i;//\u4e3a\u6807\u51c6\u4f4d\u7f6e\uff08\u521d\u59cb\u4f4d\u7f6e\uff09\u8d4b\u503c\uff08\u4e0d\u4f1a\u53d8\uff09 \n\t\tpp[i]=i;//\u4e3a\u4e00\u5f00\u59cb\u7684\u5373\u65f6\u4f4d\u7f6e\u8d4b\u521d\u503c\uff08\u8fd9\u91cc\u968f\u610f\uff0c\u7528\u90a3\u4e2a\u968f\u673a\u6253\u4e71\u51fd\u6570\u90fd\u884c\uff09\u2014\u2014\u662f\u201c\u8d4b\u521d\u503c\u201d\u4e0d\u662f\u201c\u8d4b\u503c\u201d\uff0c\u8bf4\u660e\u8fd9\u4e2a\u6570\u7ec4\u4f1a\u6539\u53d8\uff0c\u800c\u4e0a\u4e00\u4e2a\u4e0d\u4f1a\u3002 \n\t}\n\trc=qh();//\u7528\u5f53\u524d\u4f4d\u7f6epp\u8dd1\u4e00\u8fb9\u6c42\u548c\u51fd\u6570\uff0c\u5f97\u5230\u521d\u59cb\u89e3\uff0c\u7528\u4ee5\u4ee5\u540e\u88ab\u66ff\u6362\uff08\u672c\u9898\u6c42\u6700\u5c0f\u503c\uff0c\u5982\u679c\u521d\u503c\u8d4b\u4e3a\u96f6\uff0csrand\uff081......7\uff09\u4e5f\u6551\u4e0d\u4e86\u4f60\uff09\uff0c\u4e0erc=INF\u540c\u4f5c\u7528\u3002 \n\t//\n\twhile((clock()/(1.0*CLOCKS_PER_SEC))<=zhongzhishijian)//\u5361\u65f6\u4e13\u7528\uff0c\u672c\u4eba\u4e0d\u592a\u4f1a\u63cf\u8ff0\uff0c\u4e0d\u61c2\u7684\u53ef\u4ee5\u53c2\u89c1\u4e0a\u9762Ciyang\u7684\u535a\u5ba2 \n\t{\n\t\tlsc=rc;//\u6bcf\u6b21\u5faa\u73af\u7528\u4ee5\u4f5c\u4e3a\u4e34\u65f6\u503c\u7684lsc\uff0c \n\t\tfora(i,1,n)\n\t\t{\n\t\t\tpp[i]=p[i];\n\t\t}\n\t\t//\n\t\tfor(re double T=chushiwendu;T>=zhongzhiwendu;T*=dertT)//\u964d\u6e29\u8fc7\u7a0b\n\t\t{\n\t\t\tdo//\u968f\u673a\u751f\u6210\u4e00\u7ec4x\uff0cy\u4e24\u4e2a\u6570\uff0c\u8868\u793a\u4ea4\u6362pp\u6570\u7ec4\u4e2dx\uff0cy\u4f4d\u7f6e\u7684\u4e24\u5934\uff08\u5929\u9009\u4e4b\uff09\u725b \n\t\t\t{\n\t\t\t\tx=sj(1,n);//1-n\u7684\u968f\u673a\u6570\n\t\t\t\ty=sj(1,n);//1-n\u7684\u968f\u673a\u6570\uff0c\u53ef\u80fd\u7b49\u4e8ex \n\t\t\t}\n\t\t\twhile(x==y);//\u7406\u60f3\u72b6\u6001\u4e0bx\uff01=y\uff0c\u4f46\u8fd9\u6837\u7684\u6982\u7387\u8fd8\u662f\u6709\u7684\u4e0d\u662f\u5417\uff1f\u6240\u4ee5\u4e3a\u4e86\u4fdd\u9669\uff0c\u53ea\u8981\u76f8\u7b49\u5c31\u518d\u968f\u673a\u751f\u6210\u4e00\u7ec4\uff08\u5c31\u770b\u54ea\u4f4d\u6b27\u7687\u5728\u8fd9\u4e2a\u5730\u65b9\u5faa\u73af\u6b21\u6570\u592a\u591aTLE\u4e86\u00b7^v\u00b7^\uff09\u3002 \n\t\t\texc(x,y);//\u4ea4\u6362x\uff0cy\u4f4d\u7f6e\u7684\u4e24\u5934\uff08\u5929\u9009\u4e4b\uff09\u725b\u3002 \n\t\t\tlsc=qh();//\u6c42\u51fa\u4ea4\u6362\u540e\u7684\u82b1\u8d39\uff0c\u4ec5\u4f5c\u4e34\u65f6\u6bd4\u8f83\u4e4b\u7528\u3002\n\t\t\tif(lsc<=rc)//\u5982\u679c\u6bd4\u5168\u5c40\u6700\u4f18\u89e3\u90fd\u4f18\uff0c\u8fd8\u7b49\u4ec0\u4e48\uff0c\u5feb\u8d4b\u7ed9\u5168\u5c40\u6700\u4f18\u89e3\u554a\uff01 \n\t\t\t{\n\t\t\t\trc=lsc;\n\t\t\t}\n\t\t\t//\u5982\u679c\u5f53\u524d\u4e34\u65f6\u89e3\u6bd4\u6700\u4f18\u89e3\u5dee\uff0c\u6211\u4eec\u4e5f\u6682\u65f6\u4e0d\u80fd\u6254\uff01\u89c1\u4e0b-> \n\t\t\telse if((1.0*exp(rc-lsc))/T>(1.0*rand()/RAND_MAX))//\u4ee5\u4e00\u5b9a\u7684\u6982\u7387\u63a5\u53d7\u8f83\u5dee\u7684\u65b0\u89e3\uff0c\u5177\u4f53\u8bb2\u89e3\u89c1\u4e0a\u9762\u8d34\u7684Ciyang\u5927\u4f6c\u7684\u535a\u5ba2 \n\t\t\t{\n\t\t\t\texc(x,y);//\u6362\u56de\u53bb\uff08\u4e0d\u6362\u56de\u53bb\uff08\u5373\u63a5\u53d7\u547d\u8fd0\u7684\u5ba1\u5224\uff08\u8f83\u5dee\u7684\u65b0\u89e3\uff09\uff09\u7684\u6982\u7387\u4f1a\u8d8a\u6765\u8d8a\u4f4e\uff0c\u53ef\u4ee5\u81ea\u884c\u7406\u89e3\uff0cexp\u51fd\u6570\u7528\u6cd5\u89c1Ciyang\u5927\u4f6c\u7684\u535a\u5ba2\uff09 \n\t\t\t}\n\t\t}\n\t}\n\t//\n\tprintf(\"%d\\n\",rc/2);//\u4e3a\u4ec0\u4e48\u9664\u4ee5\u4e8c\uff1f\u5176\u5b9e\u6211\u4eec\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u4e00\u76f4\u5f97\u5230\u7684\u90fd\u662f\u7b54\u6848\u76842\u500d\u2014\u2014\u6bcf\u6761a-b\u7684\u8def\uff0c\u8ba1\u7b97a\u65f6\u7b97\u4e86\u4e00\u6b21\uff0c\u8ba1\u7b97b\u65f6\u53c8\u7b97\u4e86\u4e00\u6b21\uff08\u5b83\u597d\u59d4\u5c48\uff09\uff01 \n\treturn 0\uff1b//\u5b8c\u7f8e\u6536\u5b98 \n}\n\ninl void exc(tin x,tni y)//\u4e92\u6362\u57fa\u672c\u64cd\u4f5c \n{\n\ttni z=pp[x];\n\tpp[x]=pp[y];\n\tpp[y]=z;\n\t//\n\treturn;\n}\n\ninl tni sj(tni a,tni b)//\u540c\u4e3a\u57fa\u672c\u64cd\u4f5c \n{\n\treturn rand()%(b-a+1)+a;\n}\n\ninl tni qh()//sun\u662f\uff08\u6bcf\u6761\u8def\u88ab\u7b97\u4e24\u6b21\u7684\uff09\u82b1\u8d39\u548c\uff01 \n{\n\ttni sum=0;\n\tfora(i,1,n)\n\t{\n\t\tfora(j,1,3)\n\t\t{\n\t\t\tsum+=abss(pp[i]-pp[f[i][j]]);\n\t\t}\n\t}\n\t//\n\treturn sum;//\u5982\u679c\u4f60\u613f\u610f\uff0c\u5927\u53ef\u4ee5return sum/2;\u7136\u540e\u8f93\u51fa\u7684\u65f6\u5019\u4e0d/2~ \n}//\u672c\u4ee3\u7801\u5df2\u8fdb\u884c\u9632\u6284\u88ad\u5904\u7406\uff0c\u6b22\u8fce\u590d\u5236\u7c98\u8d34\u5e76\u987a\u5229CE\uff01\u00b7^v\u00b7^ \n```\n\u66ffCiyang\u5927\u4f6c\u505a\u4e86\u8fd9\u4e48\u591a\u5e7f\u544a\u2026\u2026QAQ  \n\u6302\u4e00\u6ce2\u53cb\u94fe\uff1a[Ciyang\u5927\u4f6c](https://www.luogu.org/space/show?uid=109815)  \n\u987a\u4fbf\u4e00\u63d0\uff0c\u7528\u672c\u9898\u89e3\u53c2\u6570\u8dd1\u51fa\u6765\u4f1a\u521a\u597d\u6bcf\u4e2a\u70b9\u5747\u4e3a1000ms\uff01\u5b9e\u9645\u4e0a\u8dd1\u4e2a200-300\u6b21\u5c31\u591f\u4e86\u3002",
        "postTime": 1540907099,
        "uid": 108024,
        "name": "ArachnidaKing",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2210 \u3010Haywire\u3011"
    },
    {
        "content": "## \u6b64\u9898\u4e00\u773c\u5c31\u770b\u51fa\u662f\u6a21\u62df\u9000\u706b\u6a21\u677f\u9898,\u5199\u4e2a\u6a21\u677f\u5c31\u8fc7\u4e86...\n### \u9898\u76ee\u5206\u6790\u4e0e\u601d\u8def:\n\u6b64\u9898\u8981\u8bbe\u7f6e N \u4e2a\u725b\u7684\u4f4d\u7f6e,\u4f7f\u6bcf\u4e2a\u725b\u4e0e\u4ed6\u76843\u4e2a\u670b\u53cb\u7684\u8ddd\u79bb\u4e4b\u548c\u6700\u5c0f,\u5e76\u4e14  N  \u4e2a\u725b\u7684\u4f4d\u7f6e\u662f 1 - N ,\u90a3\u4e48\u5f88\u5bb9\u6613\u60f3\u5230,\u6a21\u62df\u9000\u706b\u4e2d\u4ea4\u6362\u4e24\u4e2a\u725b\u7684\u4f4d\u7f6e,\u5e76\u968f\u6e29\u5ea6\u7684\u5927\u5c0f,\u51e0\u7387\u63a5\u53d7\u8f83\u5dee\u7684\u6392\u5217\u65b9\u5f0f\u5c31\u884c\u4e86.\n\u5982\u679c\u4e0d\u77e5\u9053[\u6a21\u62df\u9000\u706b](https://baike.baidu.com/item/%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB)\u662f\u4ec0\u4e48,\u53ef\u4ee5\u81ea\u884c\u770b\u4e00\u4e0b\u767e\u79d1   \n### \u5982\u679c\u8fd8\u4e0d\u61c2,\u6211\u7684\u51ed\u81ea\u5df1\u7684\u80fd\u529b\u89e3\u91ca(\u778e\u641e)\u4e00\u4e0b:   \n\u5148\u653e\u5f20\u4e00\u6b21\u6a21\u62df\u9000\u706b\u8fc7\u7a0b\u7684\u793a\u610f\u56fe(\u6765\u81eawikipedia)  \n![\u6a21\u62df\u9000\u706b](https://upload.wikimedia.org/wikipedia/commons/d/d5/Hill_Climbing_with_Simulated_Annealing.gif)     \n\n\u6b64\u52a8\u6001\u56fe\u7247\u5c31\u662f\u641c\u7d22\u6700\u4f18\u89e3(\u6700\u5927\u51fd\u6570\u503c),\u5728\u5f00\u59cb\u65f6\u5148\u968f\u4fbf\u8bbe\u7f6e\u4e00\u4e2a X \u5750\u6807,\u8ba1\u7b97\u51fd\u6570\u503c Y ,\u8bbe\u4e3a\u5f53\u524d\u6700\u4f18\u89e3.   \n\u6bd5\u7adf\u7b97\u6cd5\u540d\u4e3a\u6a21\u62df\u9000\u706b,\u987e\u540d\u601d\u4e49,\u90a3\u4e48\u8d77\u59cb\u7684\u6e29\u5ea6\u4e00\u5b9a\u5f88\u9ad8(~~\u4e0d\u7136\u600e\u4e48\u9000\u706b~~),\u6240\u4ee5\u6bcf\u6b21\u641c\u7d22\u65f6 X \u5750\u6807\u7684\u589e\u5927\u6216\u51cf\u5c11\u91cf\u53d8\u5316\u5f88\u5927.\u8ba4\u771f\u89c2\u5bdf\u8fd9\u5e45\u56fe\u7247\u4e0a\u6e29\u5ea6\u503c\u8f83\u9ad8\u65f6\u7684 X \u5750\u6807\u53d8\u5316\u91cf,\u4f1a\u53d1\u73b0\u6ce2\u52a8\u5f88\u5927.   \n\u5728\u6bcf\u6b21\u6539\u53d8 X \u5750\u6807\u540e,\u5c31\u8ba1\u7b97\u51fd\u6570\u503c Y \u5750\u6807,\u79f0\u4f5c\u5f53\u524d\u89e3.\u5982\u679c\u5f53\u524d\u89e3\u6bd4\u6700\u4f18\u89e3\u5927,\u5c31\u66f4\u65b0\u6700\u4f18\u89e3.\u5982\u679c\u5f53\u524d\u89e3\u4e0d\u5982\u6700\u4f18\u89e3,\u90a3\u4e48\u5c31\u4f1a\u4ee5\u4e00\u5b9a\u51e0\u7387\u63a5\u53d7.\u8fd9\u6837\u624d\u4f1a\u8df3\u51fa\u5f53\u524d\u5f53\u524d\u6700\u4f18\u89e3,\u624d\u53ef\u80fd\u627e\u5230\u66f4\u4f18\u89e3.   \n\u51e0\u7387\u63a5\u53d7\u7684\u51e0\u7387\u662f\u4e2a\u5f88\u7384\u5b66\u7684\u95ee\u9898,\u901a\u5e38\u60c5\u51b5,\u8bbe\u5f53\u524d\u6e29\u5ea6\u4e3a$ T $,\u5f53\u524d\u89e3\u4e3a$ k $,\u6700\u4f18\u89e3\u4e3a$ K_{max} $,\u6211\u4eec\u901a\u5e38\u7528\u8fd9\u6837\u4e00\u4e2a\u7384\u5b66\u516c\u5f0f...  \n```cpp\nexp((k-kmax)/T)<(double)rand()/RAND_MAX\n```\n\u6211\u5f53\u521d\u4e5f\u4e0d\u77e5\u9053[exp](https://baike.baidu.com/item/exp)\u7684\u610f\u4e49\u4f55\u5728,\u540e\u6765\u53d1\u73b0\u592a\u5999\u4e86!\u5982\u679c\u4e0d\u77e5\u9053exp\u662f\u5565,\u53ef\u4ee5\u81ea\u5df1\u770b\u4e00\u4e0b\u767e\u79d1,\u6211\u7a0d\u4f5c\u89e3\u91ca:\n exp\u51fd\u6570\u5728X < 0\u65f6, Y \u4e00\u5b9a\u4e3a 0 - 1 \u4e4b\u95f4\u7684\u5c0f\u6570\u4e14\u5355\u8c03\u9012\u589e,(double)rand()/RAND_MAX\u4e5f\u662f\u4e00\u4e2a 0 - 1 \u4e4b\u95f4\u7684\u5c0f\u6570.\u8fd9\u6837\u6e29\u5ea6\u8d8a\u5c0f,\u63a5\u53d7\u5f53\u524d\u8f83\u5dee\u89e3\u7684\u51e0\u7387\u8d8a\u4f4e.\n### \u6a21\u62df\u9000\u706b\u6700\u91cd\u8981\u7684\u4e09\u4e2a\u53c2\u6570,\u8d77\u59cb\u6e29\u5ea6,\u7ec8\u6b62\u6e29\u5ea6,\u6e29\u5ea6\u53d8\u5316\u901f\u5ea6\n\u8fd9\u4e09\u4e2a\u9700\u8981\u81ea\u5df1\u8bbe\u7f6e,\u8d77\u7740\u6539\u53d8\u51c6\u786e\u7387,\u7cbe\u5ea6,\u65f6\u95f4\u590d\u6742\u5ea6,\u8f83\u5dee\u89e3\u63a5\u53d7\u51e0\u7387\u7684\u4f5c\u7528,\u4f46\u8fd9\u4e2a\u9898\u6bd4\u8f83\u6c34,\u968f\u4fbf\u8bbe\u7f6e\u7684\u5dee\u4e0d\u591a\u5c31\u80fd\u8fc7\n### \u7406\u89e3\u4e86\u6a21\u62df\u9000\u706b,\u5c31\u53ef\u4ee5\u5f00\u59cb\u5199\u8fd9\u9053\u9898\u4e86.\n\u8fd9\u9053\u9898\u662f\u627e\u6700\u5c0f\u503c,\u4e5f\u662f\u4e00\u6837\u7684\u601d\u8def.\u53ea\u9700\u8981\u5199\u4e00\u4e2a\u7528\u6765\u6c42\u5f53\u524d\u7684\u5efa\u9020\u7ebf\u8def\u6240\u9700\u8981\u7684\u5e72\u8349\u5806\u7684\u51fd\u6570\u548c\u6a21\u62df\u9000\u706b\u8fc7\u7a0b\u51fd\u6570.\u7136\u540e\u4e00\u76f4\u641c,\u591a\u8dd1\u51e0\u6b21\u6a21\u62df\u9000\u706b\u5168\u8fc7\u7a0b\u5c31\u884c\u4e86\n### \u4ee3\u7801\u5b9e\u73b0:\n#### \u8bc4\u6d4b\u8be6\u60c5\n#### Accepted  100\n#### \u7528\u65f6: 1903ms / \u5185\u5b58: 848KB\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n#include <math.h>\n#include <queue>\n#include <map>\n#include <limits.h>\nusing namespace std;\nnamespace Ciyang {\n\tstruct q_instream {\n\t\ttemplate < typename classT >\n\t\tinline q_instream operator>>(classT &e) const {\n\t\t\te= 0;\n\t\t\tclassT f= 1, c= 0;\n\t\t\twhile(c < '0' || c > '9') {\n\t\t\t\tif(c == '-') f= -1;\n\t\t\t\tc= getchar();\n\t\t\t}\n\t\t\twhile(c >= '0' && c <= '9') e= e * 10 + c - '0', c= getchar();\n\t\t\treturn e= e * f, (*this);\n\t\t}\n\t} qin;\n    //\u8bfb\u5165\u4f18\u5316\n\tstruct q_outstream {\n\t\ttemplate < typename classT >\n\t\tinline q_outstream operator<<(const classT &e) const {\n\t\t\tif(e < 0) {\n\t\t\t\tputchar('-');\n\t\t\t\t(*this) << -e;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(e > 9) (*this) << (e / 10);\n\t\t\t\tputchar(e % 10 + '0');\n\t\t\t}\n\t\t\treturn (*this);\n\t\t}\n\t\tinline q_outstream operator<<(const char &c) const {\n\t\t\treturn putchar(c), (*this);\n\t\t}\n\t} qout;\n    //\u8f93\u51fa\u4f18\u5316\n}  // namespace Ciyang\nusing namespace Ciyang;\n//\u524d\u9762\u5168\u90e8\u4e3a\u8bfb\u5165\u8f93\u51fa\u4f18\u5316\nint n, f[13][3], pos[13], best_ans= INT_MAX;\ntemplate < typename T >\nT absi(T a) {\n//\u6c42\u7edd\u5bf9\u503c\u51fd\u6570,\u4e5f\u53ef\u4ee5\u7528\u81ea\u5e26\u7684abs.\n\treturn a > 0 ? a : -a;\n}\nint get_cost() {\n//\u6c42\u9700\u8981\u5e72\u8349\u5806\u6570\u91cf\u7684\u51fd\u6570\n\tint tmp_ans= 0;\n\tfor(int i= 1; i <= n; i++) {\n\t\tfor(int j= 0; j < 3; j++) {\n\t\t\ttmp_ans+= absi(pos[i] - pos[f[i][j]]);\n            //\u6bcf\u4e2a\u725b\u4e0e\u4e09\u4e2a\u670b\u53cb\u7684\u5750\u6807\u5dee\u7684\u7edd\u5bf9\u503c\u76f8\u52a0\n\t\t}\n\t}\n\treturn tmp_ans;\n    //\u5f97\u51fa\u5f53\u524d\u89e3\n}\nconst double BeginT= 10000, EndT= 1e-12, ChangeT= 0.99;\n//\u8d77\u59cb\u6e29\u5ea6,\u7ec8\u6b62\u6e29\u5ea6,\u6e29\u5ea6\u6539\u53d8\u901f\u5ea6\nvoid SA(int times) {\n//\u6a21\u62df\u9000\u706b\u8fc7\u7a0b\n\tint x, y, tmp_ans;\n\twhile(times--) {\n\t\tfor(double T= BeginT; T > EndT; T*= ChangeT) {\n\t\t\tdo {\n\t\t\t\tx= rand() % n + 1;\n\t\t\t\ty= rand() % n + 1;\n\t\t\t} while(x == y);\n\t\t\tswap(pos[x], pos[y]);\n            //\u4efb\u610f\u4ea4\u6362\u4e24\u4e2a\u725b\u7684\u4f4d\u7f6e\n\t\t\ttmp_ans= get_cost();\n            //\u6c42\u51fa\u5f53\u524d\u89e3\n\t\t\tif(tmp_ans <= best_ans) {\n\t\t\t\tbest_ans= tmp_ans;\n                //\u66f4\u4f18\u5c31\u66f4\u65b0\u7b54\u6848\n\t\t\t}\n\t\t\telse if(exp((best_ans - tmp_ans) / T) > (double)rand() / RAND_MAX) {\n            //\u6761\u4e0d\u63a5\u6536\u8f83\u5dee\u7684\u6761\u4ef6\n\t\t\t\tswap(pos[x], pos[y]);\n                //\u4e0d\u63a5\u53d7\u8f83\u5dee\u89e3,\u5c06\u4e24\u4e2a\u725b\u4f4d\u7f6e\u4ea4\u6362\u56de\u53bb\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\nint main() {\n\tsrand(time(0));\n    //\u968f\u673a\u79cd\u5b50,\u770b\u4eba\u54c1\n\tqin >> n;\n\tfor(int i= 1; i <= n; i++) {\n\t\tfor(int j= 0; j < 3; j++) {\n\t\t\tqin >> f[i][j];\n\t\t}\n\t\tpos[i]= i;\n        //\u8bbe\u7f6e\u6bcf\u4e2a\u725b\u7684\u521d\u59cb\u5750\u6807\u5c31\u662f\u81ea\u5df1\u7684\u7f16\u53f7\n\t}\n\tSA(275);\n\tqout << best_ans / 2 << '\\n';\n    //\u8ba1\u7b97\u65f6\u6bcf\u4e24\u4e2a\u725b\u7684\u8ddd\u79bb\u90fd\u7b97\u4e86\u90fd\u4e24\u904d\n\treturn 0;\n}\n```\n### \u5907\u6ce8:\u6a21\u62df\u9000\u706b275\u6b21\u5c31\u884c,\u8bd5\u4e86\u51e0\u904d\u90fd\u8fc7\u4e86,\u5982\u679cWA\u4e86\u5c31\u8c03\u5927\u70b9\u6b21\u6570\n#### \u5e0c\u671b\u66f4\u591a\u540c\u5b66\u80fd\u5207\u6389\u8fd9\u4e2a\u9ed1\u9898(\u7b80\u76f4\u662f\u6a21\u677f\u9898,\u611f\u89c9\u96be\u5ea6\u6700\u591a\u7d2b\u9898)\n#### \u5982\u679c\u60f3\u7ee7\u7eed\u7ec3\u4e60\u6a21\u62df\u9000\u706b,\u53ef\u4ee5\u505a[P1337 [JSOI2004]\u5e73\u8861\u70b9 / \u540a\u6253XXX](https://www.luogu.org/problemnew/show/P1337)",
        "postTime": 1540802681,
        "uid": 109815,
        "name": "Ciyang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2210 \u3010Haywire\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u773c\u9898\n\n\u72b6\u538bDP\uff1f\uff1f\uff1f~~\u5177\u4f53\u6ca1\u60f3\u51fa\u6765~~\n\n\u9000\u706b\uff1f\uff1f\uff1f~~\u7801\u91cf\u592a\u5927~~\n\nA*\uff1f\uff1f\uff1f~~\u7ffb\u4e86\u4e00\u4e0b\u9898\u89e3~~\n\n\u6570\u636e\u8303\u56f4\uff1a\n$n <= 12$\n\n\u5c11\u5e74\uff0c\u4f60\u53ef\u77e5\u9053\u6709\u4e00\u79cd\u7384\u5b66\u7684\u7334\u5b50\u7b97\u6cd5\n\n$Random Shuffle$\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <queue>\n#include <map>\n#include <stack>\n#include <algorithm>\n#include <iomanip>\n#include <set>\n\nusing namespace std;\n\nint n;\nint ans = 0x3f3f3f3f;\nbool used[14][14];\nint Ad[14], Bd[14];\nint aaa;\nint flag;\nstruct node\n{\n\tint x, y, z, num;\n} a[14];\n\ninline int Mi (int x, int y)\n{\n\tif (x < y) return x;\n\treturn y;\n}\n\ninline void MIN ()\n{\n\tint sum = 0;\n\tfor (int i = 1; i <= n; i ++)\n\t{\n\t\tif (used[Ad[i]][a[i].x] == 0 && used[a[i].x][Ad[i]] == 0)\n\t\t{\n\t\t\tsum += abs (i - Bd[a[i].x]);\n\t\t\tused[Ad[i]][a[i].x] = 1, used[a[i].x][Ad[i]] = 1;\n\t\t}\n\t\tif (used[Ad[i]][a[i].y] == 0 && used[a[i].y][Ad[i]] == 0)\n\t\t{\n\t\t\tsum += abs (i - Bd[a[i].y]);\n\t\t\tused[Ad[i]][a[i].y] = 1, used[a[i].y][Ad[i]] = 1;\n\t\t}\n\t\tif (used[Ad[i]][a[i].z] == 0 && used[a[i].z][Ad[i]] == 0)\n\t\t{\n\t\t\tsum += abs (i - Bd[a[i].z]);\n\t\t\tused[Ad[i]][a[i].z] = 1, used[a[i].z][Ad[i]] = 1;\n\t\t}\n\t}\n\t//if (flag != 1) if (sum == 13) for (int i = 1; i <= n; i ++) printf (\"%d \", Ad[i]), flag = 1;\n\tans = Mi (ans, sum);\n}\n\nsigned main ()\n{\n\tscanf (\"%d\", &n);\n\tfor (int i = 1; i <= n; i ++) scanf (\"%d%d%d\", &a[i].x, &a[i].y, &a[i].z), a[i].num = i;\n\tfor (int q = 1; q <= 233333; q ++)\n\t{\n\t\trandom_shuffle (a + 1, a + 1 + n);\n\t\tfor (int i = 1; i <= n; i ++) Ad[i] = a[i].num;//\u5f53\u524d\u4f4d\u7f6e\u662f\u4ec0\u4e48\u6570\n\t\tfor (int i = 1; i <= n; i ++) Bd[a[i].num] = i;//\u5f53\u524d\u6570\u5b57\u5728\u4ec0\u4e48\u4f4d\u7f6e \n\t\t/*if (Ad[1] == 3 && Ad[2] == 6 && Ad[3] == 5 && Ad[4] == 2 && Ad[5] == 4 && Ad[6] == 1)\n\t\t{\n\t\t\taaa = 1;\n\t\t}*/\n\t\tMIN ();\n\t\tmemset (used, 0, sizeof (used));\n\t}\n\tprintf (\"%d\", ans);\n}\n```\n\n\n",
        "postTime": 1572871757,
        "uid": 136006,
        "name": "s_Shot\u10e6Maki",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2210 \u3010Haywire\u3011"
    },
    {
        "content": "#### \u4eca\u5929\u8003\u8bd5\u7684\u4e00\u9053\u9898\u5440~~\u867d\u7136\u6ca1\u6709\u8fc7~~\n\n~~\u8001\u5e08\u7684\u65b9\u6cd5\u795e\u4f3c\u5df2\u53d1\u5e03\u67d0\u9898\u89e3~~\n\n\u4e0d\u8fc7\u6211\u770b\u6ca1\u6709\u89e3\u91ca\uff0c\u8fd8\u662f\u5199\u4e00\u7bc7\u9898\u89e3\n\n------------\n\u56e0\u4e3an<=12\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u538b\u7f29\u72b6\u6001\u4f18\u5316\u65f6\u95f4\n\n\u5b9a\u4e49 f [ k ]\u4e2dk\u7684\u4e8c\u8fdb\u5236\u4e0b\u7b2ci\u4f4d\u4e3a1 / 0\u8868\u793a\u7b2ci\u4e2a\u70b9\u5728 / \u4e0d\u5728\u96c6\u5408\u4e2d\uff0c\n\nf [ k ]\u672c\u8eab\u4fdd\u5b58\u7684\u662f\u5f53\u524d\u72b6\u6001k\u4e0b\u7684\u6700\u5c0f\u4ee3\u4ef7(\u8fd9\u4e2a\u4ee3\u4ef7\u6709\u70b9\u4e0d\u4e00\u6837)\n\n\u7531\u9898\u610f\u6211\u4eec\u53d1\u73b0\u5982\u679cf [ k ]\u4ec5\u9760\u5b58\u96c6\u5408k\u5185\u6240\u6709\u80fd\u8fde\u4e0a\u8fb9(\u5373\u4e24\u5934\u725b\u662f\u670b\u53cb)\u7684\u725b\u6240\u82b1\u8d39\u4ee3\u4ef7\u7684\u8bdd\uff0c\u72b6\u6001\u5e76\u4e0d\u597d\u8f6c\u79fb\n\n\u4e0d\u59a8\u52a0\u4e00\u4e2a\u6761\u4ef6\uff1aoutedge \u96c6\u5408k\u5411\u5916\u9700\u8981\u8fde\uff0c\u4f46\u8fd8\u6ca1\u6709\u8fde\u7684\u8fb9\u7684\u6761\u6570(\u5373\u4e00\u4e9b\u725b\u5728k\u5185\uff0c\u4f46\u662f\u670b\u53cb\u4e0d\u5728\uff0c\u8fde\u4e0d\u8d77)\uff1b\u8fd9\u65f6\u6211\u4eec\u7684\u4ee3\u4ef7\u8fd8\u8981\u52a0\u4e0a\u8fd9\u4e9b\u672a\u8fde\u7684\u8fb9\u5728\u5f53\u524d\u96c6\u5408\u4e2d\u7684\u8fd9\u4e00\u90e8\u5206\u7684\u4ee3\u4ef7\n\n\u5982 2 3 4\u2014\u2014\u2014\u20145 6 7 \uff1b\u5047\u8bbe2\u548c3\u8fde\u4e86\u4e00\u6761\u8fb9\uff0c2\u8fd8\u8981\u4e0e5\u8fde\u8fb9\uff1b\u90a3\u4ece\u53f3\u8fb9\u770b2\u8fde5\u7684\u8fb9\u5728\u76ee\u524d2 3 4\u5185\u7684\u957f\u5ea6(\u4e00\u90e8\u5206)\u5c31\u662f2\n\n\u90a3\u6211\u4eec\u73b0\u5728\u6765\u5206\u6790\u5982\u4f55\u8f6c\u79fb\uff1a\n\t\n   \t\t\u5bf9\u4e8e\u4e00\u4e2a\u5df2\u77e5\u6700\u5c0f\u4ee3\u4ef7\uff0c\u52a0\u4e0a\u4e00\u4e2a\u70b9\uff0c\u53ea\u9700\u8981\u6c42\u6ca1\u6709\u8fd9\u4e2a\u70b9\u7684\u6700\u4f18\u89e3\u52a0\u4e0a\u8fd9\u4e2a\u70b9\u52a0\u8fdb\u6765\u540e\u4ecd\u7136\u662f\u51fa\u8fb9\u7684\u6570\u91cf(+1)\u548c\u52a0\u8fdb\u6765\u8fd9\u4e2a\u70b9\u65b0\u589e\u7684\u51fa\u8fb9\u6570(+1)\uff0c\u4ee5\u53ca\u8fd9\u4e2a\u70b9\u80fd\u8fde\u56de\u53bb\u7684\u8fb9\u6570(+1)\n       \n\u62ec\u53f7\u5185\u8868\u793a\u7684\u662f\u6bcf\u4e00\u6761\u8fb9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u90fd\u662f1\n\n~~\u867d\u7136\u6709\u4ee3\u7801\u4e86\u4f46\u6211\u8fd8\u662f\u653e\u4e0a\u6765\u5427~~\n~~\u5404\u4f4d\u6a21\u62df\u9000\u706b\u5927\u4f6c\u90fd\u597d\u5f3a~~\n\n```cpp\n#include <bits/stdc++.h>\n#include <algorithm>\n#define ll long long\n#define Freopen(x) {freopen(#x\".in\",\"r\",stdin);freopen(#x\".out\",\"w\",stdout);}\nusing namespace std;\nvoid init(),solve(); \nint fri[15][5];\nint f[1<<13],n;\nint main()\n{\n\tinit();\n\tsolve();\n\treturn 0;\n}\nvoid init()\n{\n\t//Freopen(haywire)\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)\n\t\tfor(int j=0;j<3;j++)\n\t\t\tscanf(\"%d\",&fri[i][j]),\n\t\t\tfri[i][j]--;//\u8fd9\u6837\u65b9\u4fbf\u5904\u7406\n\treturn;\n}\nvoid solve()\n{\n\tmemset(f,0x3f,sizeof(f));\n\tf[0]=0;\n\tfor(int k=1;k<(1<<n);k++)//\u72b6\u6001\u538b\u7f29\u603b\u5171\u67091<<n\u79cd\u60c5\u51b5 \n\t{\n\t\tint outedge=0;//\u51fa\u8fb9\u6570\n\t\tfor(int i=0;i<n;i++)\n\t\t\tif(k&(1<<i))//\u5982\u679c\u7b2ci\u4e2a\u70b9\u5728\u96c6\u5408k\u5185 \n\t\t\t\toutedge+=3-((k>>fri[i][0])&1)-((k>>fri[i][1])&1)-((k>>fri[i][2])&1); //\u90a3\u4e48\u51fa\u8fb9\u5c31\u8981\u52a0\u4e0ai\u7684\u4e0d\u5728k\u4e2d\u670b\u53cb\u7684\u4e2a\u6570\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tif(k&(1<<i))//\u7b2ci\u4e2a\u70b9\u5728\u96c6\u5408k\u5185 \n\t\t\t{\n\t\t\t\tint c=outedge-3+((k>>fri[i][0])&1)+((k>>fri[i][1])&1)+((k>>fri[i][2])&1)\n\t\t\t\t//\u62eci\u70b9\u6709outedge\u6761\u8fb9\uff0c\u73b0\u5728\u5047\u8bbe\u6ca1\u6709i\uff0c\u628ai\u52a0\u8fdb\u6765 \n\t\t\t\t//\u4e0d\u5305\u62eci\u7684\u96c6\u5408\u5c31\u5c11\u4e863-((k>>fri[i][0])&1)-((k>>fri[i][1])&1)-((k>>fri[i][2])&1)\u6761\u8fb9\n                +((k>>fri[i][0])&1)+((k>>fri[i][1])&1)+((k>>fri[i][2])&1);\n\t\t\t\t//\u8fde\u4e0a\u539f\u6765\u7684\u96c6\u5408\u8fd8\u8981\u52a0\u4e0a \u4e0a\u884c\u7684\u4ee3\u4ef7\n\t\t\t\tf[k]=min(f[k],f[k&~(1<<i)]+c);\n                //\u6bcf\u6b21\u52a0\u4e00\u4e2a\u70b9\u7684\u4ee3\u4ef7\u5c31\u662f\u6240\u6709\u73b0\u5728\u51fa\u8fb9\u7684\u957f\u5ea6\u7684\u6570\u91cf(Ta\u7684\u957f\u5ea6\u52a0\u4e86\u4e00)\u548ci\u8fd9\u4e2a\u70b9\u8fde\u56dek\u96c6\u5408\u7684\u8fb9\u7684\u6570\u91cf(\u957f\u5ea6\u4e3a\u4e00)\n\t\t\t\t//printf(\"%d\\n\",f[k]);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",f[(1<<n)-1]);\n\treturn;\n}\n```\n\u7ba1\u7406\u5927\u5927\u8f9b\u82e6\u4e86:\uff09  ~~\u6240\u4ee5\u7ed9\u8fc7\u5427~~",
        "postTime": 1564923673,
        "uid": 38882,
        "name": "Develop",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2210 \u3010Haywire\u3011"
    },
    {
        "content": "\u849f\u84bb\u521a\u5b66\u6a21\u62df\u9000\u706b\uff0c\u6765\u5199\u4e00\u7bc7\u9898\u89e3\u3002\n\n\u9898\u76ee\u5927\u610f\uff1a\u6bcf\u4e2a\u70b9\u4e0e\u5176\u5b83\u4e09\u4e2a\u70b9\u9700\u8981\u8fde\u8fb9\uff0c\u8fde\u8fb9\u4ee3\u4ef7\u4e3a\u5b83\u4eec\u4f4d\u7f6e\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u3002\u6c42\u4e00\u4e2a\u6392\u5217\u4f7f\u5f97\u8fd9\u4e2a\u503c\u6700\u5c0f\u3002\n\n\u770b\u5230$n$\u90fd\u5f88\u5c0f\uff0c\u867d\u7136\u4e00\u822c\u4f1a\u60f3\u5230\u72b6\u538b\uff0c\u4f46\u662f\u8fd9\u9898\u4f3c\u4e4e\u4e0d\u662f\u4e00\u773c\u72b6\u538b\uff0c\u8003\u8651\u5176\u5b83\u7b97\u6cd5\u3002\n\n\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u968f\u673a\u4e00\u4e2a\u6570\u5217\uff0c\u6bcf\u6b21\u8ba1\u7b97\u4e00\u4e0b\u5b83\u7684\u7b54\u6848\uff0c\u6839\u636e\u4e00\u5b9a\u6b21\u6570\u7684\u91cd\u590d\uff0c\u4ece\u800c\u5f97\u51fa\u4e00\u4e2a\u53ef\u80fd\u7684\u6700\u4f18\u89e3\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u7528**\u6a21\u62df\u9000\u706b**\u3002\n\n\u8003\u8651\u4e00\u6b21\u968f\u673a\uff0c\u6211\u4eec\u505a\u51fa\u7684\u66f4\u6539\u662f\u4ea4\u6362\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u7684\u70b9\u3002\u90a3\u4e48\u6bcf\u4e00\u6b21\uff0c\u6211\u4eec\u7684\u7b54\u6848\u663e\u7136\u90fd\u4f1a\u6709\u4e00\u4e2a\u6539\u53d8\u3002\n\n\u8ba1\u7b97\u8fd9\u4e2a\u7b54\u6848\uff0c\u66b4\u529b\u5373\u53ef\uff1b\u7136\u540e\u8ba1\u7b97\u4e0e\u5f53\u524d\u7b54\u6848\u7684\u589e\u91cf\uff0c\u4ee5\u6b64\u5224\u65ad\u662f\u4e0d\u662f\u63a5\u53d7\u8fd9\u4e2a\u7b54\u6848\u3002\n\n\u4ee5\u6b64\u8fed\u4ee3\uff0c\u591a\u8fed\u4ee3\u51e0\u6b21\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nconst double h=0.996;\nint a[50][50];\nint ans;\nint pos[50];\nint calc(){\n\tint res=0;\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=3;++j)\n\t\t\t\tres+=abs(pos[i]-pos[a[i][j]]);\n\treturn res>>1;\n}\nvoid solve(){\n\tdouble T=6000;\n\twhile(T>1e-16){\n\t\tint x=rand()%n+1;\n\t\tint y=rand()%n+1;\n\t\tswap(pos[x],pos[y]);\n\t\tint Num=calc();\n\t\tif(Num<ans)ans=Num;\n\t\telse if(exp(ans-Num)/T<double(rand())/RAND_MAX)swap(pos[x],pos[y]);\n\t\tT*=h;\n\t}\n}\nvoid work(){\n\tfor(int i=1;i<=60;++i)solve();\n\tprintf(\"%d\\n\",ans);\n}\nint main(){\n\tsrand(time(0));\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",&a[i][1]);\n\t\tscanf(\"%d\",&a[i][2]);\n\t\tscanf(\"%d\",&a[i][3]);\n\t\tpos[i]=i;\n\t}\n\tans=2147483647;work();\n\treturn 0;\n}\n```\n~~\u8bdd\u8bf4\u8fd9\u771f\u662f\u9ed1\u9898\u5417\u2026\u2026~~",
        "postTime": 1584621462,
        "uid": 128591,
        "name": "Refined_heart",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2210 \u3010Haywire\u3011"
    },
    {
        "content": "# \u6d1b\u8c37P2210 [Haywire]\n\u600e\u4e48\u8bf4\u3002\u3002\u3002\u7b2c\u4e00\u6b21\u78b0\u89c1\u5982\u6b64\u7b80\u5355\u7684\u9ed1\u9898\u3002\u3002\u3002\n\n\u603b\u4e4b\uff0c\u4e00\u5f00\u59cb\u770b\u5230\u8fd9\u9053\u9898\uff0c\u6211\u7684\u8111\u6d77\u4e2d\u5c31\u95ea\u73b0\u4e86\u4e00\u79cd\u673a\uff08sha\uff09\u667a\uff08bi\uff09\u7684\u505a\u6cd5\uff1a\n### \u66b4\u529b\u679a\u4e3e \n\uff08\u6ca1\u9519\uff0c\u4f60\u6ca1\u6709\u542c\u9519\uff0c\u8fde\u662f\u66b4\u529b\u641c\u7d22\u90fd\u4e0d\u662f\uff0c\u5c31\u662f\u66b4\u529b\u679a\u4e3e\uff01\uff01\uff09\n\n\u65b9\u6cd5\u5982\u4e0b\uff0c\u9996\u5148\u679a\u4e3e1~N\u7684\u5168\u6392\u5217\uff08\u90fd\u70b9\u53ef\u6015\uff09\uff0c\u5c06\u6bcf\u4e2a\u6392\u5e8f\u7684\u7b54\u6848\u4f9d\u6b21\u8ba1\u7b97\uff0c\u7136\u540e\u5229\u7528\u4e00\u4e2aInt\u53d8\u91cf\u6765\u66f4\u65b0\u7b54\u6848\uff0c\u6700\u540e\u8f93\u51fa\u6700\u5c0f\u7684\u7b54\u6848\u3002\n\n\u5171\u670912\u4e2a\u6d4b\u8bd5\u70b9\uff08~~\u4e0d\u8981\u95ee\u6211\u662f\u600e\u4e48\u77e5\u9053\u7684\u3002\u3002~~\uff09\uff0c\u9884\u8ba1\u5f97\u520624/100\uff08\u5bf93\u4e2a\u70b9\uff09\uff0c\u5b9e\u9645\u5f97\u520649/100(\u8fd9\u4e2a\u9a9a\u64cd\u4f5c666\uff0c~~\u6ca1\u60f3\u5230\u6570\u636e\u7adf\u7136\u8fd9\u4e48\u6c34~~)\n\n\u4ee3\u7801\u5982\u4e0b\uff0849\u5206\uff09\uff1a\n\n```c\n#include \"bits/stdc++.h\"    //\u5934\u6587\u4ef6\u7adf\u7136\u53ef\u4ee5\u8fd9\u4e48\u5199666\nusing namespace std;  \nint n,ans=9999999;   \t//\u5f88\u5927\u5c31\u884c\nint py[13][4],now[13],used[13],ppp;\nbool rabbit[13],dianhua[13][13];\nint search(int);\nvoid cost();\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=3;j++)\t\n\t\t\tcin>>py[i][j];\n\tfor(int i=1;i<=n;i++) used[i]=i;\n\tsearch(1);  //\u4ece1\u5f00\u59cb\u6df1\u641c\n\tcout<<ans/2;\n\treturn 0;\n}\nint search(int steps){   //search\u51fd\u6570\u679a\u4e3e\u5168\u6392\u5217\n\tfor(int i=1;i<=n;i++){\n\t\tif(rabbit[i]==false){\n\t\t\trabbit[i]=true;\n\t\t\tnow[steps]=i;\n\t\t\tif(steps==n) cost();  //\u5982\u679c\u672c\u6b21\u6392\u5217\u5df2\u7ecf\u5b8c\u6210\uff0c\u8fdb\u5165cost\u51fd\u6570\u8fdb\u884c\u8ba1\u7b97\u7b54\u6848\n\t\t\telse search(steps+1);\n\t\t\trabbit[i]=false;\n\t\t}\n\t}\n}\nvoid cost(){   //\u5bf9\u4e8e\u6bcf\u4e2a\u6392\u5217P\uff0ccost\u51fd\u6570\u8ba1\u7b97\u8be5\u6392\u5217\u7684\u7b54\u6848\n\tint money=0;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=3;j++){\n\t\t\tfor(int f=1;f<=n;f++)\n\t\t\t\tif(now[f]==py[now[i]][j]){\n\t\t\t\t\tmoney=money+abs(used[i]-f);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t}\n\tans=min(ans,money); //\u53d8\u91cfans\u66f4\u65b0\u6700\u5c0f\u7684\u7b54\u6848\n}\n```\n\n\u4ee5\u4e0a\u7684\u4ee3\u7801\u4e2d\uff0csearch\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N!),cost\u51fd\u6570\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N^3),\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\n## O(N\uff01*N^3)\n\uff08\u53ef\u6015\u53ef\u6015\uff0c\u7b2c\u4e00\u6b21\u89c1\u5230\u5982\u6b64\u53ef\u6015\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff09\n\n\u6240\u4ee5\uff0c\u8fd9\u79cd\u65b9\u6cd5\uff0c\u662f\u4e0d\u884c\u7684\uff01\uff01\n\n\u4e8e\u662f\u6211\u9677\u5165\u4e86\u6df1\u6df1\u7684\u601d\u8003\uff08\u554a\u554a\u554a\u3002\u3002\u3002\u3002\uff09 \u5927\u7ea62\u5206\u949f\u4e4b\u540e\uff0c\u6211\u60f3\u5230\u4e86 \n### \u542f\u53d1\u5f0f\u641c\u7d22\u3002\n\u6ca1\u9519\uff0c\u542f\u53d1\u5f0f\u641c\u7d22\u3002\u7adf\u7136\u66b4\u529b\u641c\u7d22\u4e0d\u884c\uff0c\u90a3\u6211\u5c31\u4f18\u5316\u4e00\u4e0b\u5427\u3002\u3002\n\n\uff08\u697c\u4e0a\u7684\u4ec0\u4e48\u7b2c\u4e00\u884c\u53ea\u653e1\u6216\u8005N\u7684\u65b9\u6cd5\u6211\u5e76\u4e0d\u8d5e\u540c\uff0c\u9996\u5148\u8fd9\u4e2a\u505a\u6cd5\u53ea\u662f\u5c06O(N!)\u7684\u590d\u6742\u5ea6\u8f6c\u5316\u6210\u4e86O((N-1)!)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5176\u6b21\uff0c\u8fd9\u79cd\u505a\u6cd5\u53ef\u80fd\u5bfc\u81f4\u5728\u8ba1\u7b97\u65f6\u7531\u4e8e\u627e\u4e0d\u5230\u6700\u4f18\u6392\u5217\u800c\u5bfc\u81f4\u8f93\u51fa\u7684\u7b54\u6848\u9519\u8bef\uff09\n\n\u4e8e\u662f\uff0c\u4f18\u5316\u5427\u3002\u3002\u526a\u679d\u4f18\u5316\u3002\u3002\n\n\u9884\u8ba1\u5f97\u520684/100\uff0c\u5b9e\u9645\u5f97\u5206100/100\u3002\u3002\n\n\u597d\u5427\uff0c\u770b\u6765\u6570\u636e\u6bd4\u8f83\u6c34\u3002\u3002\uff08~~\u6211\u4eec\u6559\u7ec3\u51fa\u9898\u6211\u600e\u4e48\u5c31\u53ea\u670984\u5206~~\uff09\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```c\n#include <iostream>\n#include <fstream>\n#include <algorithm>\nusing namespace std;\nint N;\nint nbr[13][3];\nint best = 9999999, pos[13]; //best\u5f88\u5927\u5c31\u884c\u4e86\nvoid solve(int so_far,int cost_so_far,int pending_links, int pending_link_cost)\n{  if (so_far==N) {\n    best = min(best, cost_so_far);\n    return;\n  }  //\u5982\u679c\u6709\u66f4\u597d\u7684\u65b9\u6848\uff0c\u526a\u679d\u3002\n  if (cost_so_far + pending_link_cost >= best) return;  \n  so_far++;\n  for (int i=1;i<=N;i++) \n    if (pos[i]==0) {\n      pos[i] = so_far;\n      int added_cost = 0, new_pending_links = 3;\n      for (int j=0; j<3; j++)\n\t  if (pos[nbr[i][j]] != 0) { \n\t    added_cost += pos[i] - pos[nbr[i][j]];   \n\t    new_pending_links -= 2;   //\u5982\u679c\u4e0a\u4e00\u53ea\u725b\u5df2\u7ecf\u5b89\u88c5\u597d\u4e86\u7535\u8bdd\u7ebf\uff08\u5c31\u6682\u65f6\u53eb\u505a\u7535\u8bdd\u7ebf\u5427\uff09\u8fd9\u6761\u7ebf\u7684\u6743\u503c+2\n\t  }\n      solve(so_far,cost_so_far + added_cost,pending_links + new_pending_links,pending_link_cost + (pending_links + new_pending_links) - added_cost);  //\u8fdb\u5165\u4e0b\u4e00\u5c42\u51fd\u6570\u8fdb\u884c\u9012\u5f52\uff0c\u542f\u53d1\u5f0f\u5bfb\u627e\u6700\u4f18\u65b9\u6848\n        pos[i] = 0;\n    }\n}\nint main(void)\n{ \n  cin >> N;\n  for (int i=1; i<=N; i++) {\n    for (int j=0; j<3; j++) {\n      cin >> nbr[i][j];\n    }\n  }\n  solve(0, 0, 0, 0);\n  cout << best << \"\\n\"; //\u6109\u5feb\u5730\u8f93\u51fa\u7b54\u6848\n  return 0;\n}\n```\n\n\u597d\u7684\uff0c\u9898\u76ee\u5df2\u7ecfAC\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u7684\u5f81\u9014\u5e76\u6ca1\u6709\u5c31\u6b64\u7ed3\u675f\u3002\u3002\n\n\u6211\u4eec\u6559\u7ec3\u51fa\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u53ea\u80fd\u5f97\u523084\u5206\uff08\u8d85\u65f62\u4e2a\u70b9\uff09.\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u7ee7\u7eed\u5bf9\u7a0b\u5e8f\u8fdb\u884c\u4f18\u5316\u3002\n\n\u52a8\u6001\u89c4\u5212\uff1fDP\uff1f\u90fd\u8fc7\u4e0d\u4e86100%\u7684\u6570\u636e\u3002\u6211\u4eec\u8981\u7528\u7684\u662f\uff1a\n\n## ~~\u67d0\u79d1\u5b66\u7684\u7384\u5b66\u7b97\u6cd5~~\uff08\u72b6\u6001\u538b\u7f29DP\uff09\n\nNICE~~\n\n\u9884\u8ba1\u5f97\u5206100/100\uff0c\u5b9e\u9645\u5f97\u5206100/100\n\nAC\u65e0\u538b\u529b\u7092\u9e21\u6761\u70b8\u5929\u4ee3\u7801\uff1a\n\n```c\n#include <iostream>\n#include <cstdio>\n#include <algorithm>  //\u5c31\u662f\u4e0d\u7528\u80a5\u5b85\u4e07\u80fd\u5934\u6587\u4ef6~~\nusing namespace std;\n#define NMAX 12\n#define infinite 1000000000 //\u5b9a\u4e49\u65e0\u9650\u5927\u7684INF\nint dp[1 << NMAX];  //\u54e6\u3002\u3002\u9a9a\u64cd\u4f5c\u3002\u3002nice~~\nint main() {\n\tint n;\n\tscanf(\"%d\", &n); //\u8f93\u5165\n\tint nbr[13][3];\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d %d %d\", &nbr[i][0], &nbr[i][1], &nbr[i][2]);\n\t\tnbr[i][0]--;\tnbr[i][1]--;\tnbr[i][2]--;\n\t}\n\tdp[0] = 0;\n\tfor (int subset = 1; subset < (1 << n); subset++) {\n\t\tint pending_links = 0;\n\t\tfor (int i = 0; i < n; i++) {//\u8ba1\u7b97\u8fde\u51fa\u53bb\u7684\u7ebf\n\t\t\tif (subset & (1<<i)) {\n\t\t\t\tpending_links += 3-(((subset >> nbr[i][0]) & 1+((subset >> nbr[i][1]) & 1) +((subset >> nbr[i][2]) & 1));\n\t\t\t}\n\t\t}  //\u6bcf\u6b21\u628a\u7b54\u6848\u52a0\u4e0a\u5df2\u6709\u9009\u62e9\u4e2d\u7684\u6700\u4f18\u65b9\u6848\n\t\tdp[subset] = infinite;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (subset & (1 << i)) {\n\t\t\t\tint cost = pending_links - 3 + 2 * (((subset >> nbr[i][0]) & 1) +((subset >> nbr[i][1]) & 1) +((subset >>  nbr[i][2]) & 1));\n\t\t\t\tdp[subset] = min(dp[subset], dp[subset & ~(1<<i)] + cost);\n\t\t\t}//\u6bcf\u6b21\u5faa\u73af\u5bfb\u627e\u6700\u4f18\u8def\u5f84\u5e76\u514d\u9664\u526a\u679d\u5e26\u6765\u7684\u4e0d\u5fc5\u8981\u9ebb\u70e6\uff0c\u540c\u65f6\u66f4\u65b0\u7b54\u6848\u3002\n\t\t}\n\t}\n\tprintf(\"%d\\n\", dp[(1 << n) - 1]);\n}\n```\n\nOh..\n\nNice..\n\n\u597d\u4e86\uff0c\u9898\u89e3\u5230\u8fd9\u91cc\u5c31\u5168\u90e8\u7ed3\u675f\u4e86\u3002\u5e0c\u671b\u6211\u7684\u8fd9\u4e00\u4efd\u9898\u89e3\u80fd\u591f\u8ba9\u5927\u5bb6\u5b66\u5230\u66f4\u591a\u7684\u77e5\u8bc6\u3002\n\n## \u6700\u540e\u795d\u5927\u5bb6NOIP2018\u6109\u5febAK!!\n\n~~\u518d\u8865\u4e00\u53e5\u6211\u5176\u5b9e\u8fd8\u662f\u5f88\u849f\u84bb\u7684\u554a~~",
        "postTime": 1533734212,
        "uid": 108669,
        "name": "HNFMS_tomoo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2210 \u3010Haywire\u3011"
    },
    {
        "content": "# \u9898\u89e3\n\n\u8bf6\u5c45\u7136\u6ca1\u6709\u4eba\u5199\u968f\u673a\u9898\u89e3\uff1f\u6211\u4e5f\u6765\u6c34\u4e00\u6ce2~~\n\n## \u89e3\u6cd5\uff1a\u968f\u673a\u5316\u641c\u7d22\n\n\u5148\u89e3\u91ca\u4e00\u4e0b\u9898\u76ee\u610f\u601d\u5427\u3002\n\n\u7ed9\u51fa $n$ \u5934\u5976\u725b\u4ee5\u53ca\u5b83\u4eec\u7684 3 \u4e2a\u670b\u53cb\u3002\u6c42\u4e00\u4e2a\u6392\u5217\uff0c\u4f7f\u6bcf\u5bf9\u670b\u53cb\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e4b\u548c\u5c3d\u91cf\u5c0f\u3002\n\n## \u66b4\u529b - 49\u5206\n\n\u53ef\u4ee5\u770b\u51fa\u8fd9\u9898\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u7684\u6027\u8d28\uff0c\u96be\u4ee5DP\u3002\u770b\u5230 $n$ \u6bd4\u8f83\u5c0f\uff0c\u8003\u8651\u66b4\u641c\u3002\n\n\u5957\u4e0a\u66b4\u641c\u6a21\u677f~~  \u5199\u4e00\u4e2a $dfs$ \u751f\u6210\u5e8f\u5217\uff0c\u518d\u5199\u4e00\u4e2a $check$ \u7edf\u8ba1\u5e76\u66f4\u65b0\u7b54\u6848\u3002\n\n\u53ef\u4ee5\u5f88\u5bb9\u6613\u5199\u51fa $dfs$ \uff1a\n\n```cpp\nint b[MAXN];  //  \u7528 b \u6765\u4fdd\u5b58\u751f\u6210\u7684\u5e8f\u5217\nint pos[MAXN];  //  \u4e3a\u4e86\u65b9\u4fbf\u5462\uff0c\u4f7f\u7528\u4e00\u4e2a pos[i] \u6765\u8bb0\u5f55 i \u5728\u6392\u5217\u91cc\u51fa\u73b0\u7684\u4f4d\u7f6e\nbitset<MAXN> used;  //  \u7528 bitset \u6765\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u7528\u8fc7\nvoid dfs(int level) {\n    if(level > n) {\n        check();\n    }\n    else {\n        for(int i = 1; i <= n; i ++) {\n            if(!used[i]) {\n                used[i] = true;\n                b[level] = i;\n                pos[i] = level;\n                dfs(level + 1);\n                used[i] = false;\n            }\n        }\n    }\n}\n```\n\n$check$ \u5c31\u76f4\u63a5\u6839\u636e\u9898\u76ee\u63cf\u8ff0\u5199\u51fa\uff1a\n\n```cpp\n//  f[i][j] \u4e3a\u7b2c i \u53ea\u5976\u725b\u7684\u7b2c j \u4e2a\u670b\u53cb\nvoid check() {\n    int ans = 0;\n    for(int i = 1; i <= n; i ++) {\n        for(int j = 1; j <= 3; j ++) {\n            ans += abs(pos[f[b[i]][j]] - i);\n        }\n    }\n    min1 = min(min1, ans);  //  min1 \u662f\u8981\u8f93\u51fa\u7684\u7b54\u6848\n}\n```\n\n\u7136\u540e ...... [49\u5206](https://www.luogu.org/record/show?rid=11865635)\n\n~~\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c~~\u600e\u4e48\u5728\u65f6\u95f4\u9650\u5236\u5185\uff0c\u4f7f\u7528\u7b80\u5355\u7684\u65b9\u5f0fAC\u8fd9\u9898\uff1f\n\n\u796d\u51fa $std::rand()$ \uff01\n\n## \u968f\u673a\u641c\u7d22\n\n\u5982\u679c\u6211\u4eec\u968f\u673a\u751f\u6210\u4e00\u4e2a\u6392\u5217\uff0c\u518d\u7528 $check$ \u7edf\u8ba1\u7b54\u6848\uff0c\u4f1a\u600e\u6837\uff1f\n\n```cpp\nvoid gen() {\n    used.reset();\n    int a = rand() % n + 1;\n    for(int i = 1; i <= n; i ++) {\n        while(used[a]) {\n            a = rand() % n + 1;\n        }\n        used[a] = 1;\n        b[i] = a;\n        pos[a] = i;\n    }\n}\n```\n\nemmm.... \u4f60\u8499\u5bf9\u7b54\u6848\u7684\u6982\u7387\u8fd8\u4e0d\u5982\u8f93\u51fa\u6837\u4f8b\u3002\u3002\u3002\n\n\u90a3\u5982\u679c\u591a\u6b21\u751f\u6210\u6392\u5217\u5462\uff1f\n\n\u90a3\u4e48\u606d\u559c\u4f60\uff0c\u8fd9\u5c31\u662f\u6b63\u89e3\uff01\n\n\u4e0d\u505c\u751f\u6210\u6392\u5217\u5e76\u7edf\u8ba1\u7b54\u6848\uff0c\u76f4\u5230\u8fbe\u5230\u65f6\u9650\u3002\n\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u662f\u975e\u5e38\u5b9e\u7528\u7684\u7b97\u6cd5\u3002\n\n```cpp\nsrand(time(0));\nmin1 = INF;\nwhile(clock() - c <= 0.7 * CLOCKS_PER_SEC) {\n    gen();\n    check();\n}\ncout<<min1<<endl;\n```\n\n\u5c06\u8fd9\u4efd\u4ee3\u7801\u63d0\u4ea4\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\uff1a\n\n[Accept\uff01](https://www.luogu.org/record/show?rid=11870143)\n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 20;\nconst int INF = 2000000000;\nint n, f[MAXN][4];  //  friends\nint b[MAXN], pos[MAXN];\nbitset<MAXN> used;\nint min1;\nint read() {\n    int res = 0;\n    int get = getchar();\n    while(!isdigit(get))\n        get = getchar();\n    while(isdigit(get)) {\n        res = res * 10 + get - '0';\n        get = getchar();\n    }\n    return res;\n}\ninline void generate() {\n    used.reset();\n    int a = rand() % n + 1;\n    for(int i = 1; i <= n; i ++) {\n        while(used[a]) {\n            a = rand() % n + 1;\n        }\n        used[a] = 1;\n        b[i] = a;\n        pos[a] = i;\n    }\n}\nint ans;\ninline void check() {\n    ans = 0;\n    for(int i = 1; i <= n; i ++) {\n        for(int j = 1; j <= 3; j ++) {\n            ans += abs(pos[f[b[i]][j]] - i);\n        }\n    }\n    min1 = min(min1, ans);\n}\nint main() {\n    srand(time(0));\n    min1 = INF;\n    n = read();\n    for(int i = 1; i <= n; i ++) {\n        f[i][1] = read();\n        f[i][2] = read();\n        f[i][3] = read();\n    }\n    int c = clock();\n    while(clock() - c <= 0.998 * CLOCKS_PER_SEC) {\n        generate();\n        check();\n    }\n    cout<<min1 / 2<<endl;\n    return 0;\n}\n```\n\n",
        "postTime": 1540361723,
        "uid": 57525,
        "name": "longlongzhu123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2210 Haywire"
    },
    {
        "content": "# ~~\u8fd9\u4e2a\u9898\u5f88\u6c34~~\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P2210)\n\n\u5728C++\u51fd\u6570\u5e93\u5185\u6709\u4e00\u4e2a\u795e\u5947\u7684\u51fd\u6570 ~~\uff08\u6211\u4e0d\u4f1a\u8bf4\u662f\u56e0\u4e3a\u6211\u5fd8\u4e86\u5728\u54ea\u4e2a\u5934\u6587\u4ef6\u7684\uff0c\u5efa\u8bae\u5199\u4e07\u80fd\u5934\uff09~~ :\n```\nsrand(time(NULL))//\u5148\u751f\u6210\u968f\u673a\u79cd\u5b50\n\nrandom_shuffle()\n```\n\u5b83\u53ef\u4ee5\u4efb\u610f\u968f\u673a\u5e8f\u5217\uff0c\u7528\u6cd5\u548csort\u7c7b\u4f3c\uff0c\u533a\u95f4\u5de6\u95ed\u53f3\u5f00 ~~\uff08STL\u4e0d\u90fd\u662f\u8fd9niao xing\uff09~~ \uff0c\u7136\u540e\u73b0\u5728\u5c31\u53ef\u4ee5\u968f\u673a\u6253\u4e71\u5e8f\u5217\uff0c\u518d\u66f4\u65b0\u6700\u4f18\u89e3\uff0c\u6bd4\u6a21\u62df\u9000\u706b\u8981\u7b80\u5355\u8bb8\u591a ~~\u81f3\u5c11\u6bd4\u6a21\u62df\u9000\u8d27\uff0cDP\uff0cA* \u597d\u5199\u5427~~\n\n$ Code: $\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\n#define gc getchar()\ndouble st=clock();//\u5148\u521d\u59cb\u65f6\u95f4\nint n,ans=0x7fffffff;\nint a[100];\nint mp[100][100];\nint m[100][100];\n\ninline int read(){\n\tint r=0,l=1;char ch=gc;\n\twhile(!isdigit(ch)){if(ch=='-')l=-1;ch=gc;}\n\twhile(isdigit(ch)){r=(r<<3)+(r<<1)+ch-'0';ch=gc;}\n\treturn r*l;\n}\n\ndouble time(){//\u5224\u65ad\u8fd0\u884c\u65f6\u95f4\n\treturn (clock()-st)/1e6;\n}\n\ninline void solve(){//\u66b4\u529b\u6c42\u6b21\u533a\u95f4\u7684\u89e3\n\trandom_shuffle(a+1,a+n+1);//\u6253\u4e71\u5e8f\u5217\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=1;j<=n;++j){\n\t\t\tif(m[a[i]][a[j]])\n           \t\t   mp[a[i]][a[j]]=abs(i-j);\n\t\t}\n\t}\n\tint cnt=0;\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=n;++j)\n\t\t\tcnt+=mp[i][j];\n\tans=min(ans,cnt/2);//\u66f4\u65b0\u4e00\u4e0bans\n}\n\nint main(){\n\tsrand(time(NULL));\n\tn=read();\n\tfor(int i=1;i<=n;++i)a[i]=i;\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=3;++j)\n\t\t\tm[i][read()]=1;//\u5224\u65ad\u4e24\u5934\u725b\u662f\u4e0d\u662ffriend\n\twhile(time()<0.98)//\u6ce8\u610f\u5361\u65f6\u95f4\u591a\u8dd1\u51e0\u6b21\u3002\u5982\u679c\u4f60\u89c9\u7684\u5f97\u81ea\u5df1\u662f\u6b27\u7687\u53ef\u4ee5\u8c03\u5c0f\u4e00\u70b9\n      solve();\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1602040695,
        "uid": 335214,
        "name": "\u8363\u8000\u5357\u51a5",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2210 \u3010Haywire\u3011"
    },
    {
        "content": "dp\u4e86\u89e3\u4e00\u4e0b```\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n#define NMAX 12\n#define infinite 1000000000\nint dp[1 << NMAX];\nint main() {\n    //freopen(\"haywire.in\",\"r\",stdin);\n    //freopen(\"haywire.out\",\"w\",stdout);\n    int n;\n    scanf(\"%d\", &n);\n    int nbr[13][3];\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d %d %d\", &nbr[i][0], &nbr[i][1], &nbr[i][2]);\n        nbr[i][0]--;\tnbr[i][1]--;\tnbr[i][2]--;\n    }\n    dp[0] = 0;\n    for (int subset = 1; subset < (1 << n); subset++) {\n        int pending_links = 0;\n        for (int i = 0; i < n; i++) {//\u8ba1\u7b97\u94fe\u51fa\u53bb\u7684\u7ebf \n            if (subset & (1<<i)) {\n                pending_links += 3-(((subset >> nbr[i][0]) & 1) +\n                                 ((subset >> nbr[i][1]) & 1) +\n                                 ((subset >> nbr[i][2]) & 1));\n            }\n        }\n        dp[subset] = infinite;\n        for (int i = 0; i < n; i++) {\n            if (subset & (1 << i)) {\n                int cost = pending_links - 3 + 2 * (((subset >> nbr[i][0]) & 1) +\n                                           ((subset >> nbr[i][1]) & 1) +\n                                           ((subset >>  nbr[i][2]) & 1));\n                dp[subset] = min(dp[subset], dp[subset & ~(1<<i)] + cost);\n            }\n        }\n    }\n    printf(\"%d\\n\", dp[(1 << n) - 1]);\n}\n```",
        "postTime": 1533717539,
        "uid": 114642,
        "name": "\u8fdd\u89c4\u7528\u6237\u540d^F21#cA1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2210 \u3010Haywire\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u5427\u3002\u3002\u3002\u6709\u4e00\u79cd\u7384\u5b66\u89e3\u6cd5\n\n\u8fd9\u9898\u7684\u8981\u6c42\u7684\u5c31\u662f\u4e00\u4e2a\u6700\u5c0f\u5316\u7684\u987a\u5e8f\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u4e0d\u8fdb\u60f3\u5230\u4e86\u4e00\u79cd~~\u663e\u7136\u7684~~\u5199\u6cd5\n\n\u5c31\u662f`random_shuffle`\n\n>\u4ec0\u4e48\uff1f\u8fd9\u4e0d\u662f\u4e71\u641e\u7684\u975e\u6b63\u89e3\u5417\n\n\u7136\u800c\uff0c\u6b63\u5982\u4e00\u53e5\u8bdd\u8bf4\u7684\u597d\n\n>\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5982\u679c\u4f60\u65e0\u6cd5\u5c06\u4ed6\u5361\u5230\u9519\u8bef\uff0c\u90a3\u4e48\u4ed6\u5c31\u662f\u5bf9\u7684\n\n\u6240\u4ee5\uff0c\u5c31\u4ea7\u751f\u4e86\u4e0b\u9762\u7684~~\u79d1\u5b66~~\u968f\u673a\u5199\u6cd5\n\n\u968f\u673a\u5316\u987a\u5e8f\uff0c\u6a21\u62df\u8fc7\u7a0b\uff0c\u53d6ans\u6700\u5c0f\u503c\n\n## code\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\nconst int MAXN=20;\nvoid file(string s){freopen((s+\".in\").c_str(),\"r\",stdin);freopen((s+\".out\").c_str(),\"w\",stdout);}\nint read()\n{\n\tint f=1,a=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-'){\n\t\t\tf=-f;\n\t\t}\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\ta=a*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn a*f;\n}\nint n,ans=0x3f3f3f3f;\nint a[MAXN],fri[MAXN][MAXN];\nint main()\n{\n//  file(\"\");\n\tn=read();\n\tfor(int i=1;i<=n;++i){\n\t\tint x=read(),y=read(),z=read();\n\t\tfri[i][x]=fri[i][y]=fri[i][z]=1;\n\t\ta[i]=i;\n\t}\n\tfor(int i=1;i<=300000;++i){\n\t\trandom_shuffle(a+1,a+n+1);\n\t\tint re=0;\n\t\tfor(int j=1;j<=n;++j){\n\t\t\tfor(int k=j+1;k<=n;++k){\n\t\t\t\tint pos1,pos2;\n\t\t\t\tif(!fri[j][k]){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfor(int l=1;l<=n;++l){\n\t\t\t\t\tif(a[l]==j){\n\t\t\t\t\t\tpos1=l;\n\t\t\t\t\t}\n\t\t\t\t\tif(a[l]==k){\n\t\t\t\t\t\tpos2=l;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tre+=abs(pos1-pos2);\n\t\t\t}\n\t\t}\n\t\tans=min(ans,re);\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\n\n\u6559\u7ed9\u6211\u8fd9\u4e00\u5199\u6cd5\u7684lbn @expect \u592a\u5f3a\u4e86orzorz\n\n\u63a8\u8350\u4e00\u9053\u4e5f\u53ef\u4ee5\u8fd9\u6837~~\u79d1\u5b66\u89e3\u51b3~~\u968f\u673a\u5316\u4e71\u641e\u7684\u9898\u76ee\uff1a\n\n[P3959 \u5b9d\u85cf](https://www.luogu.org/problem/P3959)\n\n\u672c\u6587\u540c\u6b65\u53d1\u4e8e[\u6211\u7684cnblog](https://www.cnblogs.com/zhu-chen/p/11823218.html)\uff0c\u6b22\u8fce\u5404\u4f4d\u5927\u4f6c\u6765\u78be\u538b\u672c\u849f\u84bb",
        "postTime": 1573217519,
        "uid": 86815,
        "name": "littlejuruo",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2210 \u3010Haywire\u3011"
    },
    {
        "content": "\n```\n/*\nLGOJ P2210 Haywire \n\u7b97\u6cd5\uff1aA* \u542f\u53d1\u5f0f\u641c\u7d22 \n\u65f6\u7a7a\u9650\u5236\uff1a1000ms 128MB\n\u4e3b\u8981\u601d\u8def\uff1a\u66b4\u529b\u641c\u7d22\uff0c\u6bcf\u6b21\u5728\u641c\u7d22\u5f53\u4e2d\u4f30\u6d4b\u51fa\u4ee5\u540e\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u8fdb\u884c\u526a\u679d\u3002 \n*/ \n#include<bits/stdc++.h>\n#define INF 1e9\nusing namespace std;\nconst int MAXN=12+5;\nint f[MAXN][5],pos[MAXN],n,ans=INF; \nvoid Astar(int now,int nowcost,int goingto,int goingtocost)\n{\n\tif(now==n) { ans=min(ans,nowcost); return; }//\u5f53\u641c\u7d22\u5230\u7b2cn\u5934\u725b\u65f6\uff0c\u5b9e\u9645\u4e0a\u51b3\u5b9a\u7684\u662f\u7b2cn+1\u5934\u725b\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5return \n\tif(nowcost+goingtocost>=ans) { return; }//\u526a\u679d\uff0c\u5982\u679c\u73b0\u5728\u82b1\u8d39\u52a0\u6700\u5c11\u9884\u8ba1\u82b1\u8d39\u5927\u4e8e\u7b54\u6848\uff0c\u76f4\u63a5return \n\tnow++;//\u505a\u7684\u662f\u7b2cnow+1\u5934\u725b\u7684\u4f4d\u7f6e \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(pos[i]==0)\n\t\t{\n\t\t\tpos[i]=now;\n\t\t\tint addcost=0,newgoingto=3; //\u4e00\u5f00\u59cb\u5148\u5047\u8bbe\u5b83\u548c\u4ed6\u7684\u4e09\u4e2a\u670b\u53cb\u8ddd\u79bb\u90fd\u662f1\uff08\u8fd9\u662f\u6700\u597d\u60c5\u51b5\uff09 \n\t\t\tfor(int j=1;j<=3;j++)\n\t\t\t{\n\t\t\t\tif(pos[f[i][j]]!=0)\n\t\t\t\t{\n\t\t\t\t\taddcost+=now-pos[f[i][j]];\n\t\t\t\t\tnewgoingto-=2; //\u5df2\u7ecf\u786e\u5b9a\u4e86\u4e00\u5934\u725b\u4e0e\u5176\u670b\u53cb\u7684\u8ddd\u79bb\uff0c\u5c31\u5c06\u9884\u671f\u7684\u8ddd\u79bb-2\uff08\u56e0\u4e3a\u5df2\u7ecf\u7b97\u5728\u5df2\u82b1\u8d39\u91cc\u9762\u4e86\uff09 \n\t\t\t\t}\n\t\t\t}\n\t\t\tAstar(now,nowcost+addcost,goingto+newgoingto,goingtocost+goingto+newgoingto-addcost);\n\t\t\tpos[i]=0;//\u56de\u6eaf \n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=3;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&f[i][j]);\n\t\t}\n\t}\n\tmemset(pos,0,sizeof(pos));\n\tAstar(0,0,0,0);\n\tprintf(\"%d\\n\",ans); \n\treturn 0;\n}\n```",
        "postTime": 1544023412,
        "uid": 44355,
        "name": "funky_monkey",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2210 \u3010Haywire\u3011"
    },
    {
        "content": "\n~~\u660e\u5929\u5c31NOIP\u4e86\u6211\u8fd8\u5728\u8fd9\u91cc\u5b66\u7384\u5b66\u7b97\u6cd5\u771f\u7684\u662f\u8981\u6b7b\u554aQAQ~~\n\n### \u7b97\u4e86\u8fd8\u662f\u8d34\u4e0a\u4e00\u7bc7\u9898\u89e3\u5427qwq\uff0c\u6bd5\u7adf\u662f\u4eba\u751f\u4e2d\u7b2c\u4e00\u7bc7\u9ed1\u9898\u9898\u89e3qwq\uff0c\n\n### \u9996\u5148\u4e0d\u4f1a\u6a21\u62df\u9000\u706b\u7684\u6216\u8005\u4e0d\u4f1a\u539f\u7406\u7684\u8bf7\u51fa\u95e8\u53f3\u8f6c[\u6a21\u62df\u9000\u706b\u539f\u7406+\u4f7f\u7528](https://m-sea.blog.luogu.org/qian-tan-SA)\n\n### \u770b\u4e00\u4e0b\u9898\u76ee\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u9898\u5c31\u662f\u8ba9\u6211\u4eec\u5728\u6240\u6709\u7684\u7ec4\u5408\u4e2d\u627e\u51fa\u4e00\u4e2a\u6700\u4f18\u89e3\u6765\uff0c\u7b26\u5408\u6211\u4eec\u6a21\u62df\u9000\u706b\u7684\u4f7f\u7528\u6761\u4ef6\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u8003\u8651\u5982\u4f55\u786e\u5b9a\u6bcf\u4e00\u4e2a\u503c\u4e86\n\n\u5269\u4e0b\u7684\u6ce8\u610f\u7684\u5730\u65b9\u548c\u4e00\u4e9b\u505a\u6cd5\u5c31\u653e\u5728\u4ee3\u7801\u91cc\u4e86qwq\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<ctime>\n#include<cstdlib>\n#include<algorithm>\n#include<cmath>\n#define re register\n#define max(a,b) (a>b?a:b)\n#define min(a,b) (a<b?a:b)\n\nusing namespace std;\n\nint n;\nint a[15][4];\nint p[100],p1[101],linshi,x,y,dc;\n\nconst double starttem=1e9;\nconst double endtime=0.999;\nconst double changet=0.99;\nconst double endtem=1e-14;//mnth\u56db\u4f4d\u5927\u5927 \n\nint abss(int x)\n{\n \treturn x>0?x:x*-1;\n}\n\nint sum() //\u6c42\u548c \n{\n\tint ans=0;\n\tfor(re int i=1; i<=n; i++) \n\t\tfor(re int j=1; j<=3; j++) \n\t\t\tans+=abss(p1[i]-p1[a[i][j]]);\n\treturn ans;\n}\n\ninline void change(int x,int y) //\u4ea4\u6362\u4e24\u4e2a\u503c\n{\n\tint t=p1[x];\n\tp1[x]=p1[y];\n\tp1[y]=t;\n}\n\nint srandom(int a,int b) //\u975e\u914b\u7684\u6700\u540e\u4e00\u640f\n{\n\treturn rand()%(b-a+1)+a;\n} \n\nint main()\n{\n\tsrand(time(NULL));\n\tsrand(rand()+23333333);\n\tsrand(rand()+19260817);//\u4e1c\u65b9\u4e4b\u529b\u795d\u6211\u6210\u529f\n\tsrand(rand());//\u7384\u5b66\u56db\u8fde \n\tscanf(\"%d\",&n);\n\tfor(int i=1; i<=n; i++) \n\t{\n\t\tscanf(\"%d%d%d\",&a[i][1],&a[i][2],&a[i][3]);\n\t\tp[i]=i; //\u6c38\u8fdc\u4e0d\u53d8\u7684\u521d\u59cb\u4f4d\u7f6e \n\t\tp1[i]=i;//\u53d8\u5e7b\u83ab\u6d4b\u7684\u4f4d\u7f6e \n\t}\n\tdc=sum();//\u5148\u6c42\u521d\u59cb\u89e3 \n\twhile((clock()/(1.0*CLOCKS_PER_SEC))<=endtime)\n\t{\n\t\tfor(re int i=1; i<=n; i++) p1[i]=p[i]; //\u5148\u521d\u59cb\u5316\u597d\u521d\u503c\n\t\tfor(re double t=starttem; t>=endtem; t*=changet)\n\t\t{\t\n\t\t\tlinshi=dc;\n\t\t\tdo\n\t\t\t{\n\t\t\t\tx=srandom(1,n);\n\t\t\t\ty=srandom(1,n);\n\t\t\t}while(x==y); //\u73a9\u547d\u627e\u6b7b \n\t\t\tchange(x,y);\n\t\t\tlinshi=sum();\n\t\t\tif(linshi<=dc) dc=linshi; //\u770b\u770b\u662f\u5426\u6bd4\u539f\u5148\u7684\u66f4\u4f18 \n\t\t\telse if((exp(dc-linshi)*1.0/t>(rand()*1.0/RAND_MAX))) change(x,y); //\u7528\u4e00\u5b9a\u7684\u6982\u7387\u63a5\u53d7\u8be5\u89e3\uff08\u6bd5\u7adf\u6709\u6bd4\u4f60\u4f18\u7684\uff0c\u4f46\u662f\u4f60\u80af\u5b9a\u8981\u628a\u4e0d\u4f18\u7684\u6362\u56de\u53bb\u554aqwq \n\t\t}\n\t}\n\tprintf(\"%d\",dc/2);//\u56e0\u4e3a\u8ba1\u7b97\u4e86\u4e24\u6b21\uff0c\u6240\u4ee5\u8981\u96642\uff0c\u4f8b\u5982\u8ba1\u7b97a-b\u4f60\u7b97a\u7684\u65f6\u5019\u8ba1\u7b97\u4e86\u4e00\u6b21\u4f46\u4f60\u53c8\u5728b\u65f6\u5019\u53c8\u8ba1\u7b97\u4e86\u6240\u4ee5\u5fc5\u987b\u9664\u6389 \n}\n```\n### \u795d\u5927\u5bb6\u98df\u7528\u6109\u5febqwq",
        "postTime": 1541653076,
        "uid": 142007,
        "name": "\u857e\u59c6\u9171QvQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2210 \u3010Haywire\u3011"
    },
    {
        "content": "## \u6b64\u9898\u4e0e$NOIP$\u67d0\u9898\u5341\u5206\u7c7b\u4f3c\n\u63a8\u8350\u53bb$A$\u4e86[\u8fd9\u9898](https://www.luogu.com.cn/problem/P3959)\uff0c\u518d\u56de\u6765\u505a\u6b64\u9898\n\n## \u5177\u4f53\u601d\u8def\uff1a~~\u7334\u6392~~\n$random\\_shuffle$\uff0c\u6bcf\u6b21\u6253\u4e71\u5e8f\u5217\uff0c\u5224\u65ad\u6700\u5c0f\u503c\uff0c\u914d\u5408\n```cpp\nwhile((double)clock()/CLOCKS_PER_SEC<=1)\n```\n\u4e8e\u662f\u6709\u4e86\u672c\u9898\u6700\u6162\u505a\u6cd5\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define debug(x) cerr<<#x<<' '<<x<<endl\n#ifndef ONLINE_JUDGE\n\t#define fuck getchar\n#else\n\t#define fuck nc\n#endif\nchar nc(){\n  \tstatic char buf[1<<25],*p=buf,*q=buf;\n  \tif(p==q&&(q=(p=buf)+fread(buf,1,1<<25,stdin),p==q))return EOF;\n  \treturn *p++;\n}\ntemplate<class T>void read(T&x){\n\tshort f=1;x=0;\n\tchar ch=fuck();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-')f=-1;\n\t\tch=fuck();\n\t}while(isdigit(ch)){\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=fuck();\n\t}x*=f;\n}\ntemplate<class T>void write(T x){\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>=10)write(x/10);\n\tputchar(x%10+48);\n}\n\nint n;\nint a[13][3];\nint ord[13];\nint pos[13];\nint ans=INT_MAX;\nsigned main(){\n#ifndef ONLINE_JUDGE\n\tfreopen(\"testdata.in\",\"r\",stdin);\n#endif\n\tread(n);\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=0;j<3;j++)\n\t\tread(a[i][j]);\n\t}\n\tfor(int i=1;i<=n;i++)ord[i]=i;\n\twhile((double)clock()/CLOCKS_PER_SEC<=1){\n\t\trandom_shuffle(ord+1,ord+n+1);\n\t\tfor(int i=1;i<=n;i++)pos[ord[i]]=i;\n\t\tint res=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=0;j<3;j++)\n\t\t\tres+=abs(pos[a[i][j]]-pos[i]);\n\t\t}\n\t\tans=min(ans,res>>1);\n\t}\n\twrite(ans);\n}\n\n```\n",
        "postTime": 1607697563,
        "uid": 100325,
        "name": "peterwuyihong",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2210 \u3010Haywire\u3011"
    },
    {
        "content": "\u770b\u5230$n$\u975e\u5e38\u5c0f\uff0c\u6240\u4ee5\u5f88\u9002\u5408\u7528\u6a21\u62df\u9000\u706b\u6765\u505a\n\n\u5148\u8003\u8651\u5982\u679c\u4f4d\u7f6e\u786e\u5b9a\u4e86\u5982\u4f55\u6c42\u9700\u8981\u94fa\u591a\u5c11\u8349\n\n\u8bbe\uff1a$a_i$\u4e3a\u7b2c$i$\u5934\u5976\u725b\u6240\u5728\u7684\u4f4d\u7f6e\n\n\u5bf9\u4e8e\u7b2c$i$\u5934\u5976\u725b\uff0c\u5982\u679c\u4ed6\u7684\u670b\u53cb\u7684$a_j$\u5927\u4e8e$a_i$\uff0c\u5c31\u8981\u94fa$a_j-a_i$\u7684\u8349\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u4f7f$a_i=i$\uff0c\u7136\u540e\u7528\u6a21\u62df\u9000\u706b\u6bcf\u6b21\u968f\u673a\u4e24\u4e2a$x,y$\u4ea4\u6362$a_x$\u548c$a_y$\uff0c\u8c03\u8c03\u53c2\u6570\u5c31\u8fc7\u4e86\uff08~~\u6ca1\u6253\u968f\u673a\u6570\u79cd\u5b50\u90fd\u8fc7\u4e86~~\uff09\n\n## code\n```\n#include<bits/stdc++.h>\n#define maxn 20\nusing namespace std;\nint n,a[maxn],ans,now,lnk[205],x,tot,nxt[205],son[205];\ninline int read(){\n\tint ret=0;char ch=getchar();\n\twhile (ch<'0'||ch>'9') ch=getchar();\n\twhile (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret;\n}\ninline void add(int x,int y){nxt[++tot]=lnk[x];lnk[x]=tot;son[tot]=y;}\ninline int Work(){\n\tint sum=0;\n\tfor (int i=1;i<=n;i++)\n\tfor (int j=lnk[i];j;j=nxt[j]) if (a[son[j]]>a[i]) sum+=a[son[j]]-a[i];\n\treturn sum;\n}\ninline void SA(){\n\tdouble St=1e5,Tt=1e-14,Ct=0.917;\n\tfor (double T=St;T>Tt;T*=Ct){\n\t\tint x=rand()%n+1,y=rand()%n+1;\n\t\twhile (x==y) y=rand()%n+1;swap(a[x],a[y]);\n\t\tnow=Work();\n\t\tif (now<ans) ans=now;\n\t\telse if ((double)exp((ans-now)/T)<=(double)(rand())/RAND_MAX) swap(a[x],a[y]);\n\t}\n}\nint main(){\n\tsrand(2333);\n\tn=read();\n\tfor (int i=1;i<=n;i++) x=read(),add(i,x),x=read(),add(i,x),x=read(),add(i,x);\n\tfor (int i=1;i<=n;i++) a[i]=i;\n\tans=Work();for (int i=1;i<10;i++) SA();\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1603957925,
        "uid": 108047,
        "name": "LlLlCc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2210 \u3010Haywire\u3011"
    },
    {
        "content": "~~\u4eca\u5929\u521a\u8bb2\u6a21\u62df\u9000\u706b\uff0c\u5c31\u6765\u53d1\u7bc7\u9898\u89e3\u6c34\u79ef\u5206~~\n\n\u4f17\u6240\u5468\u77e5\u9000\u706b\u662f\u4e00\u79cd\u7384\u5b66\u7684\u968f\u673a\u7b97\u6cd5\uff0c\u4e0d\u8fc7\u5199\u5f97\u597d+rp\u9ad8\u4f1a\u6c34\u8fc7\u5f88\u591a\u9898\n\n\u5148\u770b\u4e00\u4e2a\u95ee\u9898\uff1a\u6c42\u4e00\u4e2a\u51fd\u6570f\u6700\u5927\u70b9\u3002\n\n\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6709\u79cd\u65b9\u6cd5\uff1a\u722c\u5c71\u6cd5\n\n\u987e\u540d\u601d\u4e49\u5c31\u662f\u60f3\u722c\u5c71\u4e00\u6837\u722c\u3002\u5148\u968f\u4fbf\u627e\u4e2a\u65b9\u5411\u8d70\uff0c\u5982\u679c\u589e\u9ad8\u5219\u63a5\u7740\u8d70\uff0c\u4e0d\u7136\u76f4\u63a5\u6362\u65b9\u5411\u3002\n\n\u8fd9\u6837\u722c\u5c71\u4f1a\u8d70\u5230\u6700\u8fd1\u7684\u4e00\u4e2a\u5cf0\u503c\uff0c\u4f46\u4e0d\u4f1a\u5f97\u5230\u6700\u4f18\u89e3\u3002\n\n\u6a21\u62df\u9000\u706b\u5176\u5b9e\u5c31\u662f\u722c\u5c71\u6cd5\u4f18\u5316\u3002\u5728\u4e0d\u589e\u9ad8\u7684\u65f6\u5019\uff0c\u4ee5\u4e00\u5b9a\u7684\u6982\u7387\u9009\u62e9\u8d70\u4e0b\u53bb\u6216\u6362\u65b9\u5411\u3002\n\n\u4e00\u822c\u8bbe\u5f53\u524d\u6700\u4f18\u89e3\u4e3a$ans$\uff0c\u5f97\u5230\u7684\u89e3\u4e3a$k$\uff0c\u8bbe\u4e00\u4e2a\u56e0\u5b50t\uff0c\u5f53\uff1a\n\n$$e^{k-ans\\over t}>{rand()\\over RANDMAX}$$\n\n\u65f6\u6362\u65b9\u5411\u3002\uff08\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u6211\u4e5f\u4e0d\u77e5\u9053\uff09\u3002\n\n\u81f3\u4e8et,\u56e0\u4e3a\u8d8a\u5230\u540e\u9762\u7b54\u6848\u8d8a\u7cbe\u786e\uff0ct\u4e5f\u4f1a\u4e0d\u65ad\u7f29\u5c0f\u3002\u5177\u4f53\u8303\u56f4\u548c\u7f29\u5c0f\u7a0b\u5ea6\u4f9d\u9898\u800c\u5b9a\u3001\n\n\u6765\u5f20wikepedia\u7684\u56fe\uff0c\u9000\u706b\u7684\u8fc7\u7a0b\u5927\u6982\u5c31\u662f\u8fd9\u6837\u7684\uff1a\n\n![](https://upload.wikimedia.org/wikipedia/commons/d/d5/Hill_Climbing_with_Simulated_Annealing.gif)\n\n\u7531\u4e8e\u662f\u968f\u673a\u7b97\u6cd5\uff0c\u9000\u706b\u7684\u503c\u6709\u5f88\u5927\u6982\u7387\u4e0d\u51c6\uff0crp\u5dee\u4e00\u70b9\u8fd8\u4f1a\u72060.\u4f46\u7531\u4e8e\u4ed6\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f4e\u4e14\u5177\u6709\u968f\u673a\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u8dd1\u51e0\u5343\u751a\u81f3\u4e0a\u4e07\u6b21\u9000\u706b\u5f97\u5230\u7b54\u6848\u3002\n\n\u56de\u5230\u8fd9\u9053\u9898\uff0c\u7528\u6362\u91d1\u5e01\u7684\u5957\u8def\uff0c\u6bcf\u6b21\u9000\u706b\u4ea4\u6362\u4e24\u4e2a\u5976\u725b\u7684\u4f4d\u7f6e\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\u81f3\u4e8e\u5176\u4ed6\u5177\u4f53\u7684\u4e1c\u897f\u5c31\u89c1\u4ee3\u7801\u5427\u3002\n\n~~\u4e8e\u662f\u6211\u4eec\u6709\u6c34\u8fc7\u4e86\u4e00\u9053\u9ed1\u9898~~:\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n\nusing namespace std;\n\nint n, fr[13][4], pos[13], ans = 0x3f3f3f3f;\n\ninline void SA() {\n\tdouble beg = 5000, end = 1e-10, tt = 0.9112;\n\tfor (double t = beg; t > end; t *= tt) {\n\t\tint x = (rand() % n) + 1, y = (rand() % n) + 1, mmm = 0;\n\t\tswap(pos[x], pos[y]);\n\t\tfor (int i = 1; i <= n; ++i)\n\t\t\tfor (int j = 1; j <= 3; ++j)\n\t\t\t\tmmm += abs(pos[i] - pos[fr[i][j]]);\n\t\tif (mmm < ans) ans = mmm;\n\t\telse if (exp((ans - mmm) / t) > (double)rand() / (double)RAND_MAX) swap(pos[x], pos[y]);\n\t}\n}\n\nint main() {\n\tsrand((unsigned)time(NULL)); scanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tpos[i] = i;\n\t\tfor (int j = 1; j <= 3; ++j)\n\t\t\tscanf(\"%d\", &fr[i][j]);\n\t}\n\tint t = 5000;\n\twhile (t--) SA();\n\tprintf(\"%d\", ans / 2); //\u6211\u7684\u505a\u6cd5\u6bcf\u961f\u662f\u7edf\u8ba1\u4e86\u4e24\u904d\uff0c\u8fd9\u91cc\u8981\u6ce8\u610f\n\treturn 0;\n}\n```\n",
        "postTime": 1576066661,
        "uid": 98096,
        "name": "Smallbasic",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2210 \u3010Haywire\u3011"
    },
    {
        "content": "# \u601d\u8def\n\n\u6211\u4eec\u5f88\u5bb9\u6613\u77e5\u9053\u7b2ci\u53f7\u5982\u679c\u653e\u7684k\u53f7\u5976\u725b\u548c1~i-1\u7684\u5976\u725b\u6709\u6700\u591a\u4e2a\u7684\u670b\u53cb\u90a3\u4e48\u628ak\u53f7\u5976\u725b\u653e\u5230i\u53f7\u4f4d\u7f6e\u5c31\u662f\u6700\u4f18\u7684\u3002\u7136\u540e\u56e0\u4e3a\u6211\u5417\u4e0d\u786e\u5b9a\u7b2c\u7b2c1\u4e2a\u4f4d\u7f6e\u7684\u5976\u725b\u6240\u4ee5\u679a\u4e3e\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86.\n\n~~\u6216\u8bb8\u662f\u6570\u636e\u592a\u6c34\u6ca1\u6709\u5361\u6211\u5427~~\n# 2.\u7a0b\u5e8f\n\n~~~cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nstruct rabbit\n{\n\tint a;\n\tint b;\n\tint c;\n}a[17];\n\nint b[17];\nint c[17];\nint d[17];\n\nint main()\n{\n\tint n,i,j,ans=0,k,minn=1000000000,kk;\n\tint ok;\n//\tfreopen(\"haywire.in\",\"r\",stdin);\n//\tfreopen(\"haywire.out\",\"w\",stdout);\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d%d%d\",&a[i].a,&a[i].b,&a[i].c);\n\tfor(k=1;k<=n;k++)//\u679a\u4e3e\u7b2c1\u4e2a\u4f4d\u7f6e\u653e\u7b2c\u51e0\u5934\u5976\u725b \n\t{\n\t\tfor(i=1;i<=n;i++)\n\t\t\td[i]=1,b[i]=0,c[i]=0;\n\t\tans=0;\n\t\tc[1]=k;\n\t\tc[2]=a[k].c;\n\t\tb[k]=1;\n\t\tb[c[2]]=2;\n\t\tfor(i=3;i<=n;i++)//\u7528\u8d2a\u5fc3\u83b7\u5f97\u7b2ci\u4f4d \n\t\t{\n\t\t\tok=0;\n\t\t\tfor(j=1;j<i;j++)\n\t\t\t{\n\t\t\t\tfor(kk=j+1;kk<i;kk++)\n\t\t\t\t{\n\t\t\t\t\tif(a[c[j]].a==a[c[kk]].a&&!b[a[c[j]].a])  {ok=a[c[j]].a;break;}//\u5982\u679c\u4ed6\u7684\u6709\u4e24\u4e2a\u670b\u53cb\u5728\u961f\u5217\u91cc\u90a3\u4e48\u5427\u4ed6\u653e\u5728\u961f\u5217\u91cc \n\t\t\t\t\tif(a[c[j]].a==a[c[kk]].b&&!b[a[c[j]].a])  {ok=a[c[j]].a;break;}\n\t\t\t\t\tif(a[c[j]].a==a[c[kk]].c&&!b[a[c[j]].a])  {ok=a[c[j]].a;break;}\n\t\t\t\t\tif(a[c[j]].b==a[c[kk]].a&&!b[a[c[j]].b])  {ok=a[c[j]].b;break;}\n\t\t\t\t\tif(a[c[j]].b==a[c[kk]].b&&!b[a[c[j]].b])  {ok=a[c[j]].b;break;}\n\t\t\t\t\tif(a[c[j]].b==a[c[kk]].c&&!b[a[c[j]].b])  {ok=a[c[j]].b;break;}\n\t\t\t\t\tif(a[c[j]].c==a[c[kk]].a&&!b[a[c[j]].c])  {ok=a[c[j]].c;break;}\n\t\t\t\t\tif(a[c[j]].c==a[c[kk]].b&&!b[a[c[j]].c])  {ok=a[c[j]].c;break;}\n\t\t\t\t\tif(a[c[j]].c==a[c[kk]].c&&!b[a[c[j]].c])  {ok=a[c[j]].c;break;}\n\t\t\t\t}\n\t\t\t\tif(ok) break;\n\t\t\t}\n\t\t\tif(ok)//\u5982\u679c\u5269\u4f59\u7684\u5976\u725b\u91cc\u9762\u6709\u4e24\u4e2a\u670b\u53cb\u5728\u961f\u5217\u91cc\u5c31\u4ee3\u8868\u627e\u5230\u4e86 \n\t\t\t{\n\t\t\t\tc[i]=ok;\n\t\t\t\tb[ok]=i;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor(j=1;j<i;j++)\n\t\t\t{\n\t\t\t\tif(!b[a[c[j]].a]) {ok=a[c[j]].a;break;}//\u5982\u679c\u4ed6\u7684\u6709\u4e00\u4e2a\u670b\u53cb\u5728\u961f\u5217\u91cc\u90a3\u4e48\u5427\u4ed6\u653e\u5728\u961f\u5217\u91cc \n\t\t\t\tif(!b[a[c[j]].b]) {ok=a[c[j]].b;break;}\n\t\t\t\tif(!b[a[c[j]].c]) {ok=a[c[j]].c;break;}\n\t\t\t}\n\t\t\tif(ok)//\u5982\u679c\u5269\u4f59\u7684\u5976\u725b\u91cc\u9762\u6709\u4e24\u4e2a\u670b\u53cb\u5728\u961f\u5217\u91cc\u5c31\u4ee3\u8868\u627e\u5230\u4e86\n\t\t\t{\n\t\t\t\tc[i]=ok;\n\t\t\t\tb[ok]=i;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor(j=1;j<=n;j++)//\u5982\u679c\u6ca1\u627e\u5230\u5c31\u968f\u4fbf\u9009\u4e00\u4e2a \n\t\t\t\tif(!b[j]) {ok=j;break;}\n\t\t\tc[i]=ok;\n\t\t\tb[ok]=i;\n\t\t}\n\t\tfor(i=1;i<=n;i++)//\u7edf\u8ba1\u7b54\u6848\n\t\t{\n\t\t\tans+=(b[a[c[i]].a]-i)*d[a[c[i]].a];\n\t\t\tans+=(b[a[c[i]].b]-i)*d[a[c[i]].b];\n\t\t\tans+=(b[a[c[i]].c]-i)*d[a[c[i]].c];\n\t\t\td[c[i]]=0;\n\t\t}\n\t\tminn=min(ans,minn);//\u53d6\u6700\u5c0f\u503c\n\t}\n\tprintf(\"%d\",minn);\n}\n}\n~~~",
        "postTime": 1569818226,
        "uid": 86266,
        "name": "AFOer_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2210 \u3010Haywire\u3011"
    },
    {
        "content": "# P2210 \u3010Haywire\u3011\n~~\u5361\u7740\u65f6\u9650\u8fc7\u9898\uff0c\u771f\u5f00\u5fc3\uff0c\u7c97\u6d45~~\u5b66\u4e60\u4e86\u968f\u673a\u5316\u7b97\u6cd5\uff0c\u8fc7\u4e86\u8fd9\u9053~~\u9ed1\u9898~~\n# \u9996\u5148\u5148\u770b\u4e00\u624b\u6734\u7d20\u7b97\u6cd5 57pts\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\ninline ll read() {\n    ll f=1,x=0;\n    char ch;\n    do {\n        ch=getchar();\n        if(ch=='-')f=-1;\n    } while(ch>'9'||ch<'0');\n    do {\n        x=x*10+ch-'0';\n        ch=getchar();\n    } while(ch>='0'&&ch<='9');\n    return f*x;\n}\n\nconst int MAX_N=15 + 5;\n\nint n,g[MAX_N][MAX_N],a[MAX_N];\n\nint ans=0x7fffffff;\n\ninline int calc(){\n    int res=0;\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=n;j++){\n            if(g[i][j]){\n                res+=abs(a[i]-a[j]);\t\n            }\n        }\n    }\n    return res/2;\n}\n\nint main(){\n    n=read();\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=3;j++){\n            g[i][read()]=1;\t\t\t\n        }\n        a[i]=i;\n    }\n    do{\n        ans=min(ans,calc());\n    }while(next_permutation(a+1,a+n+1));\n    printf(\"%d\",ans);\n    return 0;\n}\n\n```\n\n# \u968f\u673a\u5316\u7b97\u6cd5\uff0c\u4e00\u904dAC\uff0c~~\u770b\u6765\u4eca\u5929\u4e5f\u662f\u6b27\u6c14\u6ee1\u6ee1\u7684\u4e00\u5929~~\n\n\u770b\u5230T\u4e86\u8fd9\u4e48\u591a\u70b9\uff0c\u5185\u5fc3\u4e00\u53e5mmp\uff0c\u51d1\n\n\u7136\u540e\u7528\u968f\u673a\u5316\u7b97\u6cd5\u6765\u964d\u4f4e\u8fd9\u9053\u9898\u7684\u65f6\u95f4\u590d\u6742\u5ea6//\u5176\u5b9e\u6ca1\u964d\u4f4e\uff0c\u53ea..\n\n\u5148\u666e\u53ca\u4e00\u4e0b\nclock\uff08\uff09\u662f\u8ba1\u7b97\u65f6\u95f4\u7684\u597d\u5de5\u5177\n\n\u5148random_shuffel\u751f\u6210\u4e00\u4e2a\u6392\u5217\n\n\u7136\u540e\u57281000ms\u5185\u4e00\u76f4\u8fd9\u6837\uff0c\u4ece\u800c\u5927\u6982\u7387AC\u6b64\u9898\n\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\ninline ll read() {\n    ll f=1,x=0;\n    char ch;\n    do {\n        ch=getchar();\n        if(ch=='-')f=-1;\n    } while(ch>'9'||ch<'0');\n    do {\n        x=x*10+ch-'0';\n        ch=getchar();\n    } while(ch>='0'&&ch<='9');\n    return f*x;\n}\n\nconst int MAX_N=15 + 5;\n\nint n,g[MAX_N][MAX_N],a[MAX_N];\n\nint ans=0x7fffffff;\n\ninline int calc(){\n    int res=0;\n    //for(int i=1;i<=n;i++) cout<<a[i]<<\" \";\n    //cout<<\"\\n\";\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=n;j++){\n            if(g[i][j]){\n                res+=abs(a[i]-a[j]);\t\n            }\n        }\n    }\n    return res/2;\n}\n\nint main(){\n    \n    n=read();\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=3;j++){\n            g[i][read()]=1;\t\t\t\n        }\n        a[i]=i;\n    }\n    int c=clock();\n    while(clock()-c<=0.998 * CLOCKS_PER_SEC)\n    {\n        random_shuffle(a+1,a+n+1);\n        ans=min(ans,calc());\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n\n```\n# \u4e0b\u5348\u95f2\u7684\u6ca1\u4e8b\u5e72\uff0c\u53c8\u5b66\u4e86\u6a21\u62df\u9000\u706b\u548c\u722c\u5c71\u7b97\u6cd5\n\n\u6a21\u62df\u9000\u706b AC\u6b64\u9898\u7684\u5173\u952e\u4e4b\u4e00\u5c31\u662f\u8bbe\u5b9a\u597d\u521d\u59cb\u6e29\u5ea6\u548c\u7ec8\u6b62\u6e29\u5ea6\n\n~~\u7136\u5e76\u5375~~\n\n\u6709\u4e86\u7b2c\u4e8c\u7bc7\u7b97\u6cd5\u7684\u94fa\u57ab\uff0c\u6211\u4eec\u53ef\u4ee5\u7528clock()\u51fd\u6570\u6765\u9632\u6b62\u8d85\u65f6\uff0c\u8fd9\u6837~~\u5988\u5988\u518d\u4e5f\u4e0d\u4f1a\u62c5\u5fc3\u6211TLE~~\n\n\u4e0a\u4ee3\u7801\uff0c\u5177\u4f53\u53c8\u4e0d\u61c2\u7684\u53ef\u4ee5\u6765\u95ee\u6211\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\ninline ll read() {\n\tll f=1,x=0;\n\tchar ch;\n\tdo {\n\t\tch=getchar();\n\t\tif(ch=='-')f=-1;\n\t} while(ch>'9'||ch<'0');\n\tdo {\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t} while(ch>='0'&&ch<='9');\n\treturn f*x;\n}\n\nconst double delta_t=0.98;\n\ndouble T_MAX=1e5;//\u521d\u59cb\u6e29\u5ea6 \n\nconst double T_MIN=1e-16;//\u7ec8\u6b62\u6e29\u5ea6 \n\nconst int MAX_N=15 + 5;\n\nint n,g[MAX_N][MAX_N],a[MAX_N]; \n\ninline int calc(){\n\tint res=0;\n\t//for(int i=1;i<=n;i++) cout<<a[i]<<\" \";\n\t//cout<<\"\\n\";\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(g[i][j]){\n\t\t\t\tres+=abs(a[i]-a[j]);\t\n\t\t\t}\n\t\t}\n\t}\n\treturn res/2;\n}\n\nint ans;\n\nint main(){\n\tn=read();\n\tsrand(time(0));\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=3;j++){\n\t\t\tg[i][read()]=1;\t\t\t\n\t\t}\n\t\ta[i]=i;\n\t}\n\tans=calc();//\u5148\u5c06ans\u8d4b\u503c\u4e3a\u521d\u59cb\u5316\u72b6\u6001\n\tint c=clock(); \n\twhile(T_MAX>=T_MIN) \n\t{\n\t\tint x,y;\n\t\tif(clock()-c>=0.97 * CLOCKS_PER_SEC) break;\n\t\tdo{\n\t\t\tx=rand()%n+1;\n\t\t\ty=rand()%n+1;\n\t\t}while(x==y);\n\t\tswap(a[x],a[y]);\n\t\tint tmp_ans=calc();\n\t\tif(tmp_ans<=ans){\n\t\t\tans=tmp_ans;\n\t\t}\n\t\telse if(exp((ans-tmp_ans)/T_MAX)*RAND_MAX>rand()){\n\t\t\tswap(a[x],a[y]);\n\t\t}\n\t\tT_MAX*=delta_t;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n\n```",
        "postTime": 1563597911,
        "uid": 107377,
        "name": "Cryin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2210 \u3010Haywire\u3011"
    },
    {
        "content": "\u6a21\u62df\u9000\u706b\u6a21\u677f\u9898...\n \n\u6bcf\u6b21\u968f\u673a\u5c06\u4e24\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5976\u725b\u4ea4\u6362\u4f4d\u7f6e\n\n\u7136\u540e\u7b97\u51fa\u73b0\u5728\u6240\u9700\u7684\u5e72\u8349\u6570\u91cf\n\n\u5982\u679c\u6bd4\u7b54\u6848\u5c11\u5c31\u66f4\u65b0\n\n\u5426\u5219\u5c31\u4ee5\u4e00\u5b9a\u6982\u7387\u63a5\u53d7\u8fd9\u4e2a\u89e3\n\n\u7136\u540e\u3002\u3002\u591a\u968f\u673a\u51e0\u6b21\u5c31\u505a\u5b8c\u4e86\n\n```cpp\n#include <bits/stdc++.h>\n#define R register\n#define ll long long\n#define cmin(a, b) ((a < b) ? a : b)\n#define cmax(a, b) ((a < b) ? b : a)\nconst double delta = 0.999;\nconst int MaxN = 20;\nint n, ans = 0x3f3f3f3f;\ndouble t = 10000000.0;\nint pos[MaxN], fri[MaxN][4], g[MaxN][MaxN];\ninline int read()\n{\n    int x = 0;\n    char ch = getchar();\n    while (ch > '9' || ch < '0')\n        ch = getchar();\n    while (ch <= '9' && ch >= '0')\n        x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();\n    return x;\n}\ninline int calc()\n{\n    int ret = 0;\n    for (int i = 1; i <= n; i++)\n    {\n        ret += abs(pos[i] - pos[fri[i][1]]);\n        ret += abs(pos[i] - pos[fri[i][2]]);\n        ret += abs(pos[i] - pos[fri[i][3]]);\n    }\n    return ret / 2;\n}\ninline void SA()\n{\n    t = 1.0;\n    while (t > 1e-10)\n    {\n        int x = rand() % n + 1, y = rand() % n + 1;\n        std::swap(pos[x], pos[y]);\n        int tmp = calc();\n        int del = tmp - ans;\n        if (del < 0)\n            ans = tmp;\n        else if (exp(-del / t) * RAND_MAX <= rand())\n            std::swap(pos[x], pos[y]);\n        t *= delta;\n    }\n}\nint main()\n{\n    n = read();\n    srand(time(NULL));\n    for (int i = 1; i <= n; i++)\n    {\n        pos[i] = i;\n        for (int j = 1; j <= 3; j++)\n            fri[i][j] = read(), g[i][fri[i][j]] = 1, g[fri[i][j]][i] = 1;\n    }\n    for (int i = 1; i <= 100; i++)\n        SA();\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n\n```\n",
        "postTime": 1553948430,
        "uid": 61966,
        "name": "little_sun",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2210 \u3010Haywire\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u795e\u5751\uff01\uff01\n\n\u6211\u7684\u65b9\u6cd5\u662f\u679a\u4e3en\u5934\u725b\u7684\u6240\u6709\u6392\u5217\n\n\u4f46\u662f\u6709\u4e24\u4e2a\u4f18\u5316\uff1a\n\n\u4f18\u53161\uff1a\u7b2c\u4e00\u4f4d\u603b\u662f1\u6216n\uff0c\u8fd9\u6837\u5c31\u628a\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4e3aO ( ( n-1 ) ! )\n\n\u4f18\u53162\uff1a\u5f53n\u592a\u5927\u7684\u65f6\u5019\uff0c\u968f\u673a\u751f\u6210b\u6570\u7ec4\u7684\u6392\u5217\uff0c\u8fd9\u6837\u80fd\u52a0\u5feb\u4e0d\u5c11\uff0c\u4f46\u662f\u672a\u5fc5\u80fd\u5bf9\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,a[13][3],b[13],ans=2147000000,i;\ninline int min(int x,int y){  //\u5bb9\u6613\u6253\u7684\u51fd\u6570\u6700\u597d\u81ea\u5df1\u6253\uff0cSTL\u5e38\u6570\u592a\u5927\n    return x<y?x:y;\n}\nvoid calc(){  //\u5f53b\u6570\u7ec4\u786e\u5b9a\u540e\uff0c\u8ba1\u7b97\u7b54\u6848\uff0c\u66f4\u65b0ans\n    int s=0;\n    for (int i=1;i<=n;i++)\n         for (int j=0;j<3;j++) s+=abs(b[i]-b[a[i][j]]);\n    ans=min(ans,s);\n}\nint main(){\n    srand((unsigned)time(NULL)); //\u968f\u673a\u79cd\u5b50\n    cin>>n;\n    for (i=1;i<=n;i++) scanf(\"%d%d%d\",&a[i][0],&a[i][1],&a[i][2]),b[i]=i;\n    if (n<=9){\n        do{\n            calc();\n        }while (next_permutation(b+2,b+n+1));//\u5168\u6392\u5217\u51fd\u6570\n    }\n    else for (i=0;i<200000;i++) random_shuffle(b+2,b+n+1),calc();//\u968f\u673a\u751f\u6210\u6392\u5217\n    for (i=1;i<n;i++) b[i]=i+1;\n    b[n]=1;\n    if (n<=9){\n        do{\n            calc();\n        }while (next_permutation(b+1,b+n));\n    }\n    else for (i=0;i<200000;i++) random_shuffle(b+1,b+n),calc();\n    printf(\"%d\",ans>>1);\n}\n```\n\u8981\u6ce8\u610f\u4e00\u4e0b\uff0c\u968f\u673a\u751f\u6210\u6240\u679a\u4e3e\u7684\u8303\u56f4\u6700\u597d\u5728200000\u4ee5\u4e0a\uff0c\n\n\u6211\u572815W,10W\u90fd\u8bd5\u8fc7\u4e86\uff0c\u8fc7\u4e0d\u4e86\uff0c\u53ef\u89c120W\u4ee5\u4e0bAC\u51e0\u7387\u4e0d\u5927\n",
        "postTime": 1508677766,
        "uid": 60417,
        "name": "\u8fea\u514b\u75d2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2210 \u3010Haywire\u3011"
    }
]