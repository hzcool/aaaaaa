[
    {
        "content": "## [\u6625\u5b63\u6d4b\u8bd5 2023] \u5bc6\u7801\u9501\nupd: \u88ab\u6307\u51fa $k=3$ \u7684\u5199\u6cd5\u6709\u95ee\u9898\uff0c\u5df2\u7ecf\u6362\u4e0a\u4e86\u65b0\u5199\u6cd5\u3002\n\n$k=1,2$ \u7684\u601d\u8def\u975e\u5e38\u7b80\u5355\u3002\n\n\u6211\u4eec\u8003\u8651 $k=3$\uff0c\u9996\u5148\u663e\u7136\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\uff0c\u7136\u540e\u5728 $k=2$ \u7684\u65f6\u5019\uff0c\u6211\u4eec\u63d0\u5230\u4e86 $\\max,\\min$\uff0c\u6211\u4eec\u8003\u8651\u6269\u5c55\u4e00\u4e0b\u601d\u8def\u3002\u9996\u5148\u663e\u7136\u5168\u5c40\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u5728\u540c\u4e00\u884c\u4e2d\u7684\u60c5\u51b5\u4e00\u5b9a\u662f\u4e0d\u4f18\u7684\u3002\u6240\u4ee5\u6211\u4eec\u6765\u679a\u4e3e\u5b83\u4eec\u5206\u522b\u5728\u54ea\u4e24\u884c\u3002\u6ce8\u610f\uff0c\u8fd9\u91cc\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e9b\u5947\u602a\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\u6781\u503c\u4e0d\u6b62\u4e00\u4e2a\uff0c\u6216\u8005\u56e0\u4e3a\u5168\u5c40\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u5728\u540c\u4e00\u5217\u5bfc\u81f4\u65e0\u6cd5\u8fbe\u6210\u76ee\u6807\u3002\u4e0d\u8fc7\u56e0\u4e3a\u6211\u4eec\u8fd9\u6837\u653e\uff0c\u53ea\u662f\u5047\u8bbe\u67d0\u4e24\u884c\u7684\u6781\u503c\u662f\u7ed9\u5b9a\u503c\uff0c\u800c\u8fd9\u4e2a\u5047\u8bbe\u503c\u6bd4\u4e8b\u5b9e\u4e0a\u7684\u503c\u5e26\u6765\u7684\u9650\u5236\u4e00\u5b9a\u4e0d\u4f1a\u66f4\u677e\u3002\u6240\u4ee5\u53ea\u8981\u80fd\u5728\u8fd9\u6837\u7684\u9650\u5236\u4e0b\u627e\u5230\u89e3\uff0c\u4e00\u5b9a\u662f\u5408\u6cd5\u7684\uff0c\u5e76\u4e14\u7531\u4e8e\u6700\u7ec8\u89e3\u4e2d\u4e00\u5b9a\u53ef\u4ee5\u5b58\u5728\u5728\u4e0d\u540c\u884c\u7684 $\\max,\\min$\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u4e0d\u4f1a\u9057\u6f0f\u60c5\u51b5\u3002\n\n\u7136\u540e\u8bf4\u5b8c\u8fd9\u4e9b\u4e1c\u897f\u5269\u4e0b\u7684\u5c31\u5f88\u7b80\u5355\u4e86\u3002\u8003\u8651\u4e8c\u5206\u7684\u503c\u786e\u5b9a\u4e86\u8fd9\u4e24\u884c\u6570\u7684\u8303\u56f4\uff0c\u4ece\u800c\u6bcf\u4e00\u5217\u80fd\u5728\u4e0d\u786e\u5b9a\u7684\u7b2c\u4e09\u884c\u653e\u54ea\u4e2a\u6570\u4e5f\u662f\u53ef\u4ee5\u786e\u5b9a\u7684\u3002\u7136\u540e\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\uff0c\u6709 $n$ \u4e2a\u6570\uff0c\u6bcf\u4e2a\u6570\u53ef\u4ee5\u6709\u4e0d\u8d85\u8fc7 $3$ \u79cd\u7684\u9009\u62e9\uff0c\u95ee\u6781\u5dee\u80fd\u4e0d\u80fd\u4e0d\u8d85\u8fc7\u67d0\u4e2a\u6570\u3002\u8fd9\u5f53\u7136\u53ef\u4ee5\u7528\u5361\u724c\u6e38\u620f\u505a\uff0c\u4e0d\u8fc7\u6709\u4e00\u4e2a\u66f4\u5177\u6709\u6269\u5c55\u6027\u7684\u505a\u6cd5\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u6570 $x$\uff0c\u5b83\u5bf9\u4e8e $\\min$ \u7684\u9650\u5236\u662f $[x-k,x]$\uff0c\u5176\u4e2d $k$ \u662f\u6211\u4eec\u4e8c\u5206\u7684\u6781\u5dee\u3002\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u5217\u53ef\u80fd\u7684\u6570\uff0c\u6211\u4eec\u628a\u5b83\u5bf9\u5e94\u7684\u9650\u5236\u6c42\u5e76\u540e\u52a0\u5165\u7edf\u8ba1\u3002\u770b\u770b\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u70b9\u88ab $n$ \u4e2a\u9650\u5236\u540c\u65f6\u8986\u76d6\u5373\u53ef\u3002\u7ebf\u6bb5\u6c42\u5e76\u53ea\u9700\u6309\u7167 $l$ \u6392\u5e8f\u540e\u626b\u4e00\u904d\uff0c\u8986\u76d6\u6b21\u6570\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6c42\u89e3\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(kn\\log^2 a)$\u3002\n\n\u7136\u540e\u6211\u4eec\u6765\u770b\u770b $k=4$ \u7684\u60c5\u51b5\u3002\u94a6\u5b9a\u5b8c $\\max,\\min$ \u540e\u601d\u8def\u662f\u7c7b\u4f3c\u7684\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u6b21\u6211\u4eec\u5bf9\u4e8e $\\min$ \u7684\u9650\u5236\u53d8\u6210\u4e86 $2$ \u7ef4\u7684\u3002\u6a21\u4eff\u4e0a\u9762\u7684\u601d\u8def\uff0c\u6211\u4eec\u9700\u8981\u77e9\u9635\u5e76\u548c\u5728\u77e9\u9635\u5e76\u540e\u7684\u56fe\u5f62\u4e0a\u6574\u4f53 $+1$\u3002\u56e0\u4e3a\u77e9\u9635\u5e76\u4e4b\u540e\u4e0d\u50cf\u7ebf\u6bb5\u4f9d\u7136\u80fd\u4fdd\u6301\u4e00\u4e2a\u597d\u7ef4\u62a4\u7684\u5f62\u72b6\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u628a\u5e76\u540e\u7684\u56fe\u5f62\u62c6\u6210\u82e5\u5e72\u77e9\u5f62\uff0c\u7136\u540e\u518d\u7528\u626b\u63cf\u7ebf\u7ef4\u62a4\u77e9\u5f62\u52a0\u3002\u8fd9\u4e2a\u62c6\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5bb9\u65a5\u3002\u8003\u8651\u77e9\u9635\u96c6\u5408\u7684\u4e00\u4e2a\u5b50\u96c6 $S$\uff0c\u6211\u4eec\u6c42\u51fa\u8fd9\u4e2a\u96c6\u5408\u7684\u4ea4\uff0c\u5982\u679c $|S|$ \u4e3a\u5947\u6570\uff0c\u5c31\u77e9\u9635 $+1$\uff0c\u5426\u5219\u5c31 $-1$\uff0c\u539f\u56e0\u663e\u7136\u3002\u5982\u679c\u4f60\u8fd8\u4e0d\u592a\u7406\u89e3\u53ef\u4ee5\u770b\u770b\u8fd9\u5e45\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/xbkg3txj.png)\n\n\u84dd\u8272\uff0c\u7eff\u8272\uff0c\u9ec4\u8272\u77e9\u5f62\u76f4\u63a5\u52a0\uff0c\u7136\u540e\u7ea2\u8272\u77e9\u5f62\u51cf\uff0c\u5373\u53ef\u3002\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(k2^kn\\log^2 a)$\u3002\n\n\u6211\u4eec\u6765\u8003\u8651\u5176\u4ed6\u5e38\u6570\u66f4\u5c0f\u7684\u505a\u6cd5\u3002\u53d1\u73b0\u5728\u626b\u63cf\u7ebf\u77e9\u9635\u6c42\u5e76\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u8981\u505a\u7684\u4e8b\u60c5\u662f\u5bf9\u4e8e\u82e5\u5e72\u9ad8\u5ea6\u4e00\u6837\u7684\u77e9\u9635\u6c42\u5e76\u3002\u672c\u8d28\u4e0a\u5c31\u662f\u7ebf\u6bb5\u6c42\u5e76\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u629b\u5f03\u5bb9\u65a5\uff0c\u7528\u7c7b\u4f3c\u626b\u63cf\u7ebf\u7684\u601d\u8def\u6765\u505a\u8fd9\u4e2a\u4e1c\u897f\u3002\n\n\u8003\u8651\u628a\u6240\u6709\u7aef\u70b9\u90fd\u79bb\u6563\u5316\uff0c\u7136\u540e\u79bb\u6563\u5316\u540e\u76f8\u90bb\u7684\u4e24\u4e2a\u4f4d\u7f6e\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u77e9\u5f62\u7ed3\u6784\u662f\u76f8\u540c\u7684\uff0c\u53ef\u4ee5\u4e00\u8d77\u5904\u7406\u3002\uff08\u8fd8\u6709\u4e00\u79cd\u7406\u89e3\u601d\u8def\u5c31\u662f $k=3$ \u7684\u60c5\u51b5\u957f\u9ad8\u4e86\uff09\u627e\u5230\u5e94\u8be5\u52a0\u7684\u77e9\u5f62\u540e\uff0c\u540e\u9762\u5c31\u4e00\u6a21\u4e00\u6837\u4e86\uff0c\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u89c1\u4ee3\u7801\uff0c\u6216\u8005\u53ef\u4ee5\u770b\u770b\u8fd9\u5e45\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/wh9uwc4v.png)\n\n\u6211\u4eec\u5206\u522b\u628a\u7eff\u8272\u7ea2\u8272\u84dd\u8272\u9ec4\u8272\u4e00\u6761\u6761\u52a0\u8fdb\u53bb\u5373\u53ef\u3002\n\n\u4ee3\u7801\u4e2d\u662f\u628a $x,y$ \u5750\u6807\u4e00\u8d77\u79bb\u6563\u5316\uff0c\u8fd9\u6837\u5355\u6b21 `work4` \u7684\u7ebf\u6bb5\u6811\u4fee\u6539\u6b21\u6570\u662f $4nk$ \u7684\uff0c\u5982\u679c $x,y$ \u5206\u522b\u79bb\u6563\u5316\u53ef\u4ee5\u505a\u5230 $2nk$\uff0c\u4f46\u6211\u61d2\u5f97\u5199\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(nk\\log^2a)$\u3002\n```cpp\n#include <cstdio>\n#include <vector>\n#include <cassert>\n#include <algorithm>\nconst int N = 1e5 + 10; int a[5][N]; \nstd::vector<int> v3[N]; int d[N], mx, mn;\nstruct IO\n{\n    static const int N = 1 << 22;\n    char buf[N], pbuf[N], *p1 = buf, *p2 = buf, *pp = pbuf;\n    #define gc() (p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, N, stdin), p1 == p2) ? EOF : *p1++)  \n    template <typename T>\n    void read(T& x)\n    {\n        x = 0; char ch; int f = 0;\n        while ((ch = gc()) < '0' || ch > '9') f |= (ch == '-');\n        while (x = (x << 1) + (x << 3) + (ch ^ 48), (ch = gc()) >= '0' && ch <= '9') ;\n        if (f) x = ~x + 1;\n    }\n    void putc(char c)\n    {\n        if (pp - pbuf == N) fwrite(pbuf, 1, N, stdout), pp = pbuf;\n        *pp++ = c;\n    }\n    void puts(const char* s) { while (*s) putc(*s), ++s; putc('\\n'); }\n    template <typename T>\n    void print(T x)\n    {\n        static int st[20]; int tp = 0;\n        if (x < 0) putc('-'), x = ~x + 1;\n        do st[++tp] = x % 10, x /= 10; while (x);\n        while (tp) putc(st[tp--] + '0');\n    }\n    ~IO() { fwrite(pbuf, pp - pbuf, 1, stdout); }\n}io;\nstruct SegTree\n{\n    #define ls(k) (k << 1)\n    #define rs(k) (k << 1 | 1)\n    struct node{ int mx, tag, clr; }h[N << 2];\n    void pushup(int k) { h[k].mx = std::max(h[ls(k)].mx, h[rs(k)].mx); }\n    void add(int k, int v) { h[k].mx += v; h[k].tag += v; }\n    void clr(int k) { h[k].clr = 1; h[k].mx = h[k].tag = 0; }\n    void pushdown(int k)\n    {\n        if (h[k].clr) clr(ls(k)), clr(rs(k)), h[k].clr = 0;\n        if (h[k].tag) add(ls(k), h[k].tag), add(rs(k), h[k].tag), h[k].tag = 0;\n    }\n    void change(int k, int l, int r, int x, int y, int v)\n    {\n        if (x <= l && r <= y) return add(k, v);\n        int mid = (l + r) >> 1; pushdown(k);\n        if (x <= mid) change(ls(k), l, mid, x, y, v);\n        if (mid < y) change(rs(k), mid + 1, r, x, y, v);\n        pushup(k);\n    }\n    #undef ls\n    #undef rs\n}sgt;\nbool work3(int n, int k)\n{\n   \tsgt.clr(1);\n    for (int i = 1; i <= n; ++i)\n    {\n        std::pair<int, int> seg[3];\n        for (int j = 0; j < (int)v3[i].size(); ++j)\n            seg[j].first = std::max(mn, v3[i][j] - k), seg[j].second = v3[i][j];\n        std::sort(seg, seg + v3[i].size());\n\t\tsgt.change(1, mn, mx, seg[0].first, seg[0].second, 1);\n        ++d[seg[0].first]; --d[seg[0].second + 1];\n        for (int j = 1; j < (int)v3[i].size(); ++j) \n        {\n            if (seg[j].first > seg[j - 1].second)\n\t\t\t\tsgt.change(1, mn, mx, seg[j].first, seg[j].second, 1);\n            else if (seg[j - 1].second + 1 <= seg[j].second)\n\t\t\t\tsgt.change(1, mn, mx, seg[j - 1].second + 1, seg[j].second, 1);\n        }\n    }\n\treturn (sgt.h[1].mx == n);\n}\nbool check3(int n, int l, int r, int k)\n{\n    bool flg = 1; for (int i = 1; i <= n; ++i) v3[i].clear();\n    for (int i = 1; i <= n; ++i)\n    {\n        if (a[1][i] >= l && a[2][i] <= r) v3[i].push_back(a[3][i]);\n        if (a[2][i] >= l && a[3][i] <= r) v3[i].push_back(a[1][i]);\n        if (a[3][i] >= l && a[1][i] <= r) v3[i].push_back(a[2][i]);\n        if (v3[i].empty()) { flg = 0; break; }\n    }\n    if (flg && work3(n, k)) return true;\n    flg = 1; for (int i = 1; i <= n; ++i) v3[i].clear();\n    for (int i = 1; i <= n; ++i)\n    {\n        if (a[1][i] >= l && a[3][i] <= r) v3[i].push_back(a[2][i]);\n        if (a[2][i] >= l && a[1][i] <= r) v3[i].push_back(a[3][i]);\n        if (a[3][i] >= l && a[2][i] <= r) v3[i].push_back(a[1][i]);\n        if (v3[i].empty()) { flg = 0; break; }\n    }\n    if (flg && work3(n, k)) return true;\n    return false;\n}\nstd::vector<std::pair<int, int>> vec[N]; std::pair<int, int> v4[N][4]; int siz[N];\nint bkt[N * 16], tp, t[20], cnt; \nstd::vector<std::pair<int, int>> ad[20], dl[20];\nbool work4(int n, int k)\n{\n    tp = 0; int flg = 0;\n    for (int i = 1; i <= n; ++i)\n    {\n        cnt = 0;\n        for (int j = 0; j < siz[i]; ++j)\n        {\n            t[++cnt] = std::max(v4[i][j].first - k, mn);\n            t[++cnt] = std::max(v4[i][j].second - k, mn);\n            t[++cnt] = v4[i][j].first + 1; \n            t[++cnt] = v4[i][j].second + 1;\n        }\n        std::sort(t + 1, t + cnt + 1); cnt = std::unique(t + 1, t + cnt + 1) - t - 1;\n        for (int j = 1; j <= cnt; ++j) ad[j].clear(), dl[j].clear();\n        for (int j = 0; j < siz[i]; ++j)\n        {\n            int lef = std::lower_bound(t + 1, t + cnt + 1, std::max(v4[i][j].first - k, mn)) - t,\n                dw = std::lower_bound(t + 1, t + cnt + 1, std::max(v4[i][j].second - k, mn)) - t,\n                rig = std::lower_bound(t + 1, t + cnt + 1, v4[i][j].first + 1) - t,\n                up = std::lower_bound(t + 1, t + cnt + 1, v4[i][j].second + 1) - t;\n            ad[dw].emplace_back(lef, rig);\n            dl[up].emplace_back(lef, rig);\n        }\n        for (int j = 1; j <= cnt; ++j) d[j] = 0, bkt[++tp] = t[j];\n        for (int j = 1; j <= cnt; ++j)\n        {\n            int sum = 0, las = -1;\n            for (auto p : ad[j]) ++d[p.first], --d[p.second];\n            for (auto p : dl[j]) --d[p.first], ++d[p.second];\n            for (int k = 1; k <= cnt; ++k)\n            {\n                sum += d[k];\n                if (!sum)\n                {\n                    if (las == -1) continue;\n                    vec[t[j]].emplace_back(t[las], 1);\n                    vec[t[j]].emplace_back(t[k], -1);\n                    vec[t[j + 1]].emplace_back(t[las], -1);\n                    vec[t[j + 1]].emplace_back(t[k], 1);\n                    las = -1;\n                } else if (las == -1) las = k;\n            }\n        }\n    }\n    std::sort(bkt + 1, bkt + tp + 1);\n    tp = std::unique(bkt + 1, bkt + tp + 1) - bkt - 1;\n    for (int i = 1; i <= tp; ++i)\n    {\n        vec[bkt[i]].emplace_back(mn, 0);\n        vec[bkt[i]].emplace_back(mx + 1, 0);\n    }\n    sgt.clr(1);\n    for(int i = 1; i <= tp; ++i)\n    {\n        auto& v = vec[bkt[i]];\n        std::sort(v.begin(), v.end()); int sum = v[0].second;\n        for (int j = 1; j < (int)v.size(); ++j)\n        {\n            if (v[j - 1].first < v[j].first && sum)\n                sgt.change(1, mn, mx, v[j - 1].first, v[j].first - 1, sum);\n            sum += v[j].second;\n        }\n        if (sgt.h[1].mx == n) { flg = 1; break; }\n    }\n    for (int i = 1; i <= tp; ++i) vec[bkt[i]].clear();\n    return flg;\n}\nbool check4(int n, int l, int r, int k)\n{\n    bool flg = 1; \n    for (int i = 1; i <= n; ++i)\n    {\n        siz[i] = 0;\n        if (a[1][i] >= l && a[2][i] <= r) v4[i][siz[i]++] = std::make_pair(a[3][i], a[4][i]);\n        if (a[2][i] >= l && a[3][i] <= r) v4[i][siz[i]++] = std::make_pair(a[4][i], a[1][i]);\n        if (a[3][i] >= l && a[4][i] <= r) v4[i][siz[i]++] = std::make_pair(a[1][i], a[2][i]);\n        if (a[4][i] >= l && a[1][i] <= r) v4[i][siz[i]++] = std::make_pair(a[2][i], a[3][i]);\n        if (!siz[i]) { flg = 0; break; }\n    }\n    if (flg && work4(n, k)) return true;\n    flg = 1;\n    for (int i = 1; i <= n; ++i)\n    {\n        siz[i] = 0;\n        if (a[1][i] >= l && a[3][i] <= r) v4[i][siz[i]++] = std::make_pair(a[4][i], a[2][i]);\n        if (a[2][i] >= l && a[4][i] <= r) v4[i][siz[i]++] = std::make_pair(a[1][i], a[3][i]);\n        if (a[3][i] >= l && a[1][i] <= r) v4[i][siz[i]++] = std::make_pair(a[2][i], a[4][i]);\n        if (a[4][i] >= l && a[2][i] <= r) v4[i][siz[i]++] = std::make_pair(a[3][i], a[1][i]);\n        if (!siz[i]) { flg = 0; break; }\n    }\n    if (flg && work4(n, k)) return true;\n    flg = 1;\n    for (int i = 1; i <= n; ++i)\n    {\n        siz[i] = 0;\n        if (a[1][i] >= l && a[4][i] <= r) v4[i][siz[i]++] = std::make_pair(a[2][i], a[3][i]);\n        if (a[2][i] >= l && a[1][i] <= r) v4[i][siz[i]++] = std::make_pair(a[3][i], a[4][i]);\n        if (a[3][i] >= l && a[2][i] <= r) v4[i][siz[i]++] = std::make_pair(a[4][i], a[1][i]);\n        if (a[4][i] >= l && a[3][i] <= r) v4[i][siz[i]++] = std::make_pair(a[1][i], a[2][i]);\n        if (!siz[i]) { flg = 0; break; }\n    }\n    if (flg && work4(n, k)) return true;\n    return false;\n}\nint main()\n{ \n    int qwq, k; io.read(qwq); io.read(k);\n    while (qwq--)\n    {\n        int n; mx = 0, mn = 2e9; io.read(n);\n        for (int i = 1; i <= k; ++i)\n            for (int j = 1; j <= n; ++j) \n                io.read(a[i][j]), mx = std::max(mx, a[i][j]), mn = std::min(mn, a[i][j]);\n        if (k == 1) io.print(mx - mn);\n        else if (k == 2)\n        {\n            for (int i = 1; i <= n; ++i)\n                if (a[1][i] < a[2][i]) std::swap(a[1][i], a[2][i]);\n            int ans = 0;\n            for (int i = 1; i <= 2; ++i)\n            {\n                int mx = 0, mn = 2e9;\n                for (int j = 1; j <= n; ++j)\n                    mx = std::max(mx, a[i][j]), mn = std::min(mn, a[i][j]);\n                ans = std::max(ans, mx - mn);\n            }\n            io.print(ans);\n        }\n        else if (k == 3)\n        {\n            int l = 0, r = mx - mn, mid, ans = -1;\n            while (l <= r)\n            {\n                mid = (l + r) >> 1;\n                if (check3(n, mx - mid, mn + mid, mid)) ans = mid, r = mid - 1;\n                else l = mid + 1;\n            }\n            io.print(ans);\n        }\n        else if (k == 4)\n        {\n            int l = 0, r = mx - mn, mid, ans = -1;\n            while (l <= r)\n            {\n                mid = (l + r) >> 1;\n                if (check4(n, mx - mid, mn + mid, mid)) ans = mid, r = mid - 1;\n                else l = mid + 1;\n            }\n            io.print(ans);\n        }\n        io.puts(\"\");\n    }\n    return 0;\n}\n```",
        "postTime": 1678091283,
        "uid": 137603,
        "name": "zhiyangfan",
        "ccfLevel": 9,
        "title": "[\u6625\u5b63\u6d4b\u8bd5 2023] \u5bc6\u7801\u9501 \u9898\u89e3"
    },
    {
        "content": "[$\\text{Link}$](https://www.luogu.com.cn/problem/P9120)\n## \u9898\u610f\n\u6709\u4e00\u4e2a $k\\times n$ \u7684\u77e9\u9635\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5217\uff0c\u4f60\u53ef\u4ee5\u4efb\u610f\u65cb\u8f6c\uff0c\u6c42\u6bcf\u884c\u7684\u6781\u5dee\u7684\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\u3002\u591a\u7ec4\u6570\u636e\u3002\n\n$T\\ge 1$\uff0c$1\\le a_{i,j}\\le3\\times10^4$\uff0c$1\\le k\\le 4$\u3002\n\n\u5bf9\u4e8e $1\\le k\\le 3$\uff0c$1\\le n\\le 5\\times 10^4$\uff0c$\\sum n\\le 1.5\\times 10^5$\u3002\n\n\u5bf9\u4e8e $k=4$\uff0c$1\\le n\\le 10^4$\uff0c$\\sum n\\le 3\\times 10^4$\u3002\n\n## \u601d\u8def\n\u5bf9\u6bcf\u4e2a $k$ \u5904\u7406\u3002\n\n### $k=1$\n\u76f4\u63a5\u6c42\u6781\u5dee\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\sum nk)$\u3002\n\n### $k=2$\n\n\u8003\u8651\u5c06\u5c0f\u7684\u6570\u653e\u4e0a\u9762\uff0c\u5927\u7684\u6570\u653e\u4e0b\u9762\u3002\n\n\u601d\u8003\u4e00\u4e0b\u8fd9\u6837\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\uff1f\u8003\u8651\u5168\u5c40\u6700\u5c0f\u503c\u548c\u5168\u5c40\u6700\u5927\u503c\u6240\u5728\u7684\u884c\uff0c\u663e\u7136\u653e\u5728\u4e24\u884c\u4e0d\u52a3\u4e8e\u653e\u5728\u540c\u4e00\u884c\uff0c\u8bbe\u6700\u5c0f\u503c\u653e\u4e0a\u9762\uff0c\u6700\u5927\u503c\u653e\u4e0b\u9762\uff0c\u90a3\u4e48\u8981\u60f3\u8ba9\u4e0a\u9762\u7684\u6570\u5c3d\u91cf\u5c0f\uff0c\u4e0b\u9762\u7684\u6570\u5c3d\u91cf\u5927\uff0c\u5c31\u662f\u4e0a\u9762\u7684\u65b9\u6cd5\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\sum nk)$\u3002\n\n```cpp\nnamespace Sub12{\n\tconst int N=5e4+10;\n\tint n,a[3][N];\n\tinline void main(){\n\t\twhile(T--){\n\t\t\tn=read();\n\t\t\tfor(int i=1;i<=k;i++)\n\t\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\t\ta[i][j]=read();\n\t\t\tif(k==2){\n\t\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t\t\tif(a[1][i]>a[2][i])\n\t\t\t\t\t\tswap(a[1][i],a[2][i]);\n\t\t\t}\n\t\t\tint ans=0;\n\t\t\tfor(int i=1;i<=k;i++){\n\t\t\t\tint mn=3e4+10,mx=0;\n\t\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\t\tmn=min(mn,a[i][j]),mx=max(mx,a[i][j]);\n\t\t\t\tans=max(ans,mx-mn);\n\t\t\t}\n\t\t\twrite(ans),putc('\\n');\n\t\t}\n\t\tflush();\n\t}\n}\n```\n\n### $k=3$\n\n\u8ba9\u6700\u5927\u503c\u6700\u5c0f\uff0c\u53ef\u4ee5\u5148\u8003\u8651\u4e8c\u5206\u7b54\u6848\uff0c\u68c0\u9a8c\u7b54\u6848 $x$ \u662f\u5426\u53ef\u884c\u3002\n\n\u8003\u8651\u6cbf\u7528\u4e0a\u9762\u7684\u60f3\u6cd5\uff0c\u5148\u56fa\u5b9a\u5168\u5c40\u6700\u5c0f\u503c\u5728\u7b2c\u4e00\u884c\uff0c\u679a\u4e3e\u5168\u5c40\u6700\u5927\u503c\u5728\u7b2c\u51e0\u884c\u3002\n\n\u5bf9\u4e8e\u7b2c $i$ \u5217\uff0c\u6211\u4eec\u679a\u4e3e\u8f6c\u4e86\u51e0\u6b21\uff0c\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u6240\u5728\u4e24\u884c\u7684\u9650\u5236\uff08\u5373\u5728\u90a3\u4e00\u884c\u4e0a\u7684\u6570\u548c\u90a3\u4e00\u884c\u7684\u6700\u5c0f\u503c/\u6700\u5927\u503c\u76f8\u5dee\u8d85\u4e0d\u8d85\u8fc7 $x$\uff09\uff0c\u5982\u679c\u6ee1\u8db3\u9650\u5236\uff0c\u6211\u4eec\u8bbe\u5269\u4e0b\u4e00\u884c\u4e0a\u7684\u6570\u4e3a $a$\u3002\n\n\u5047\u8bbe\u6709\u4e00\u6761\u6570\u8f74\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 $a$ \u4f4d\u7f6e\u653e\u4e0a\u4e00\u4e2a\u989c\u8272\u4e3a $i$ \u7684\u70b9\uff08\u6bcf\u4e2a\u989c\u8272\u7684\u70b9\u663e\u7136\u53ea\u6709 $O(k)$ \u4e2a\uff09\uff0c\u6211\u4eec\u8981\u5224\u65ad\u5269\u4e0b\u4e00\u884c\u7684\u6781\u5dee\u662f\u5426\u53ef\u4ee5\u4e0d\u8d85\u8fc7 $x$\uff0c\u5c31\u662f\u95ee\u662f\u5426\u6709\u4e00\u6761\u957f\u5ea6\u4e3a $x$ \u7684\u7ebf\u6bb5\u8986\u76d6\u4e86\u6240\u6709 $n$ \u79cd\u989c\u8272\u3002\n\n\u6211\u4eec\u7ef4\u62a4 $[mn,mx]$ \u5185\u6bcf\u4e2a\u70b9\u4f5c\u4e3a\u5de6\u7aef\u70b9\u65f6\uff0c\u53ef\u4ee5\u8986\u76d6\u51e0\u79cd\u989c\u8272\uff0c\u5bf9\u4e8e\u6bcf\u79cd\u989c\u8272\uff0c\u5bf9\u4e8e\u5de6\u7aef\u70b9 $l$\uff0c\u5982\u679c $[l,l+x]$ \u5185\u6709\u8fd9\u4e2a\u989c\u8272\u7684\u70b9\u5c31\u53ef\u4ee5\u8ba9\u8fd9\u4e2a\u5de6\u7aef\u70b9\u52a0\u4e00\uff0c\u6211\u4eec\u8003\u8651\u5bf9\u6bcf\u4e2a\u8fd9\u4e2a\u989c\u8272\u7684\u70b9 $a$ \u5c06 $[a-x,a]$ \u5185\u7684\u5de6\u7aef\u70b9\u52a0\u4e00\u3002\n\n\u6ce8\u610f\u5230\u4e0d\u80fd\u91cd\u590d\u52a0\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u989c\u8272\uff0c\u6211\u4eec\u5f00\u4e2a `set` \u5b58\u8fd9\u4e2a\u989c\u8272\u5df2\u7ecf\u52a0\u5165\u4e86\u7684\u70b9\uff0c\u8bbe\u8981\u52a0\u5165 $a$\uff0c$a$ \u5728\u96c6\u5408\u5185\u7684\u524d\u9a71\u540e\u7ee7\u5206\u522b\u4e3a $p,q$\uff0c\u5219\u9700\u8981\u5c06 $[\\max(p+1,a-x),\\min(a,q-x-1)]$ \u52a0\u4e00\u3002\u6ce8\u610f\u5de6\u7aef\u70b9\u5927\u4e8e\u53f3\u7aef\u70b9\u7684\u65f6\u5019\u3002\n\n\u5dee\u5206\u5373\u53ef\uff0c\u5224\u65ad\u6700\u5927\u503c\u662f\u5426\u7b49\u4e8e $n$\uff0c\u6ce8\u610f\u5230\u4e0d\u80fd\u7ed9\u5355\u6b21\u590d\u6742\u5ea6\u5e26\u4e0a $v$\uff0c\u9700\u8981\u7ef4\u62a4\u6709\u54ea\u4e9b\u4f4d\u7f6e\u88ab\u52a0\u4e86\u3002\n\n\u7528\u5e76\u67e5\u96c6\u52a0\u4e0a\u6807\u8bb0\u6e05\u7a7a\u53ef\u505a\u5230\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\sum nk^2\\log v)$\u3002\n\n\u5b9e\u73b0\u7684\u4ee3\u7801\u7531\u4e8e\u6392\u5e8f\u6709\u4e8c $\\log$\u3002\n\n```cpp\nnamespace Sub3{\n\tconst int N=5e4+10,M=3e4+10;\n\tint n,a[3][N],mn,mx;\n\tstruct Delta{\n\t\tstruct File{\n\t\t\tint p,v;\n\t\t\tinline friend bool operator<(const File &a,const File &b){\n\t\t\t\treturn a.p<b.p;\n\t\t\t}\n\t\t}f[M];\n\t\tint f[M],top,nxt[],g[M];\n\t\tinline void clear(){\n\t\t\tfor(int i=1;i<=top;i++)\n\t\t\t\tg[f[i].p]=0;\n\t\t\ttop=0;\n\t\t}\n\t\tinline void add(int p,int v){\n\t\t\tif(!g[p]) g[p]=++top,f[top].p=p,f[top].v=0;\n\t\t\tf[g[p]].v+=v;\n\t\t}\n\t\tinline void modify(int l,int r,int v){\n\t\t\tif(l>r) return ;\n\t\t\tadd(r+1,-v),add(l,v);\n\t\t}\n\t\tinline int query(){\n\t\t\tint mx=0;\n\t\t\tsort(f+1,f+top+1);\n\t\t\tfor(int i=1,s=0;i<=top;i++){\n\t\t\t\ts+=f[i].v;\n\t\t\t\tmx=max(mx,s);\n\t\t\t}\n\t\t\treturn mx;\n\t\t}\n\t}tr;\n\tstruct node{\n\t\tint c,x;\n\t};\n\tmultiset<int>ip[N];\n\tvector<node>p;\n\tinline int pre(int col,int x){\n\t\tauto tmp=ip[col].upper_bound(x);\n\t\tif(tmp==ip[col].begin()) return 0;\n\t\treturn *(--tmp);\n\t}\n\tinline int nxt(int col,int x){\n\t\tauto tmp=ip[col].upper_bound(x);\n\t\tif(tmp==ip[col].end()) return 3e5;\n\t\treturn *tmp;\n\t}\n\tinline void add(int col,int x,int mid,int v){\n\t\tint pr=pre(col,x),nx=nxt(col,x);\n\t\tif(pr==x) return ;\n\t\ttr.modify(max({pr+1,x-mid,mn}),min(x,max(0,nx-mid-1)),v);\n\t\tip[col].insert(x);\n\t}\n\tinline void cl(int id){\n\t\tif(id==0){\n\t\t\tvector<node>op;\n\t\t\tswap(p,op);\n\t\t}else{\n\t\t\tmultiset<int>op;\n\t\t\tswap(ip[id],op);\n\t\t}\n\t}\n\tinline bool check(int mid){\n\t\tcl(0);\n\t\ttr.clear();\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tcl(i);\n\t\t\tfor(int j=0;j<=2;j++){\n\t\t\t\tint x=a[(0+j)%3][i],y=a[(1+j)%3][i],\n\t\t\t\t\tz=a[(2+j)%3][i];\n\t\t\t\tif(x-mn<=mid&&mx-y<=mid)\n\t\t\t\t\tp.push_back((node){i,z});\n\t\t\t}\n\t\t}\n\t\tfor(auto tmp:p){\n\t\t\tint col=tmp.c,x=tmp.x;\n\t\t\tadd(col,x,mid,1);\n\t\t}\n\t\tint tmp=tr.query();\n\t\tif(tmp==n) return 1;\n\t\tcl(0);\n\t\ttr.clear();\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tcl(i);\n\t\t\tfor(int j=0;j<=2;j++){\n\t\t\t\tint x=a[(0+j)%3][i],y=a[(1+j)%3][i],\n\t\t\t\t\tz=a[(2+j)%3][i];\n\t\t\t\tif(mx-x<=mid&&y-mn<=mid)\n\t\t\t\t\tp.push_back((node){i,z});\n\t\t\t}\n\t\t}\n\t\tfor(auto tmp:p){\n\t\t\tint col=tmp.c,x=tmp.x;\n\t\t\tadd(col,x,mid,1);\n\t\t}\n\t\ttmp=tr.query();\n\t\treturn tmp==n;\n\t}\n\tinline void main(){\n\t\twhile(T--){\n\t\t\tn=read();\n\t\t\tmn=3e4,mx=0;\n\t\t\tfor(int i=0;i<k;i++)\n\t\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\t\ta[i][j]=read(),\n\t\t\t\t\tmn=min(a[i][j],mn),\n\t\t\t\t\tmx=max(a[i][j],mx);\n\t\t\tint l=0,r=mx-mn,ans=3e4;\n\t\t\twhile(l<=r){\n\t\t\t\tint mid=l+r>>1;\n\t\t\t\tif(check(mid)) r=mid-1,ans=mid;\n\t\t\t\telse l=mid+1;\n\t\t\t}\n\t\t\twrite(ans),putc('\\n');\n\t\t}\n\t\tflush();\n\t}\n}\n```\n### $k=4$\n\n\u6cbf\u7528\u4e0a\u9762\u7684\u60f3\u6cd5\uff0c\u8bbe\u4e8c\u5206\u5230 $x$\uff0c\u5148\u56fa\u5b9a\u5168\u5c40\u6700\u5c0f\u503c\u5728\u7b2c\u4e00\u884c\uff0c\u679a\u4e3e\u5168\u5c40\u6700\u5927\u503c\u5728\u7b2c\u51e0\u884c\u3002\n\n\u5bf9\u4e8e\u7b2c $i$ \u5217\uff0c\u6211\u4eec\u679a\u4e3e\u8f6c\u4e86\u51e0\u6b21\uff0c\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u6240\u5728\u4e24\u884c\u7684\u9650\u5236\uff0c\u5982\u679c\u6ee1\u8db3\u9650\u5236\uff0c\u6211\u4eec\u8bbe\u5269\u4e0b\u4e24\u884c\u4e0a\u7684\u6570\u4e3a $a,b$\u3002\u6211\u4eec\u5728\u5e73\u9762\u4e0a $(a,b)$ \u4f4d\u7f6e\u653e\u4e00\u4e2a\u989c\u8272\u4e3a $i$ \u7684\u70b9\u3002\u5224\u65ad\u662f\u5426\u6709\u4e00\u4e2a $x\\times x$ \u7684\u77e9\u5f62\u80fd\u8986\u76d6 $n$ \u79cd\u989c\u8272\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u884c\u7ef4\u62a4\u6709\u54ea\u4e9b\u70b9\u3002\u8003\u8651\u679a\u4e3e\u77e9\u5f62\u7684\u4e0b\u8fb9\u754c $d$\uff0c\u4e0a\u8fb9\u754c\u5c31\u662f $d-x$\uff0c\u8003\u8651\u4e0b\u79fb\u4e0b\u8fb9\u754c\uff0c\u9700\u8981\u5220\u6389 $d-x$ \u884c\u7684\u6240\u6709\u70b9\uff0c\u52a0\u5165 $d+1$ \u884c\u7684\u6240\u6709\u70b9\u3002\u5220\u9664\u65b9\u6cd5\u548c\u52a0\u5165\u65b9\u6cd5\u7c7b\u4f3c\u3002\n\n\u540c\u6837\u7ef4\u62a4\u5de6\u8fb9\u754c $x$ \u5750\u6807\u4e3a $l$ \u7684\u65f6\u5019\u80fd\u8986\u76d6\u51e0\u79cd\u989c\u8272\uff0c\u9700\u8981\u52a8\u6001\u4fee\u6539\uff0c\u67e5\u8be2\u5168\u5c40\u6700\u5927\u503c\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u5b9e\u73b0\u4e0a\uff0c\u6211\u4eec\u4e0d\u80fd\u5e26\u4e0a $v$ \u7684\u590d\u6742\u5ea6\uff0c\u9700\u8981\u7ef4\u62a4\u6709\u54ea\u4e9b\u884c\u6709\u70b9\uff0c\u5f53\u524d\u4e0a\u4e0b\u8303\u56f4\u5185\u6709\u54ea\u4e9b\u884c\u6709\u70b9\uff0c\u53ef\u4ee5\u7528\u961f\u5217\u7ef4\u62a4\u3002\u6ce8\u610f\u6e05\u7a7a\u53ea\u80fd\u6e05\u7a7a\u6709\u70b9\u7684\u884c\uff0c\u7ebf\u6bb5\u6811\u4e5f\u4e0d\u80fd\u6574\u68f5\u6811\u641c\u7d22\u6e05\u7a7a\uff0c\u8981\u4e00\u6b65\u6b65\u64a4\u9500\u64cd\u4f5c\u3002\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u4ee3\u7801\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\sum nk^2\\log^2v)$\u3002\n\n```cpp\nnamespace Sub4{\n\tconst int N=1e4+10,M=3e4+10;\n\tint n,a[4][N],mn,mx;\n\tstruct Segment_Tree{\n\t\t#define ls (rt<<1)\n\t\t#define rs (rt<<1|1)\n\t\tint tag[M<<2],mx[M<<2];\n\t\tinline void pushup(int rt){\n\t\t\tmx[rt]=max(mx[ls],mx[rs]);\n\t\t}\n\t\tinline void pushadd(int rt,int v){\n\t\t\ttag[rt]+=v,mx[rt]+=v; \n\t\t}\n\t\tinline void pushdown(int rt){\n\t\t\tif(tag[rt]){\n\t\t\t\tpushadd(ls,tag[rt]);\n\t\t\t\tpushadd(rs,tag[rt]);\n\t\t\t\ttag[rt]=0;\n\t\t\t}\n\t\t}\n\t\tinline void modify(int rt,int l,int r,int L,int R,int v){\n\t\t\tif(L>R) return ;\n\t\t\tif(L<=l&&r<=R){\n\t\t\t\tpushadd(rt,v);\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tpushdown(rt);\n\t\t\tint mid=l+r>>1;\n\t\t\tif(L<=mid) modify(ls,l,mid,L,R,v);\n\t\t\tif(R>mid) modify(rs,mid+1,r,L,R,v);\n\t\t\tpushup(rt);\n\t\t}\n\t\tinline int query(){\n\t\t\treturn mx[1];\n\t\t}\n\t}tr;\n\tstruct node{\n\t\tint c,x;\n\t};\n\tmultiset<int>ip[N];\n\tvector<node>p[M];\n\tinline int pre(int col,int x){\n\t\tauto tmp=ip[col].upper_bound(x);\n\t\tif(tmp==ip[col].begin()) return 0;\n\t\treturn *(--tmp);\n\t}\n\tinline int nxt(int col,int x){\n\t\tauto tmp=ip[col].upper_bound(x);\n\t\tif(tmp==ip[col].end()) return 3e5;\n\t\treturn *tmp;\n\t}\n\tstruct DEL{\n\t\tint l,r,v;\n\t};\n\tvector<DEL>del;\n\tset<int>mdp,mbp;\n\tinline void add(int col,int x,int mid,int v){\n\t\tif(v==-1) ip[col].erase(ip[col].find(x));\n\t\tint pr=pre(col,x),nx=nxt(col,x);\n\t\ttr.modify(1,mn,mx,max({pr+1,x-mid,mn}),min(x,max(0,nx-mid-1)),v);\n\t\tdel.push_back((DEL){max({pr+1,x-mid,mn}),min(x,max(0,nx-mid-1)),-v});\n\t\tif(v==1) ip[col].insert(x);\n\t}\n\tinline void cl(int id){\n\t\tmultiset<int>op;\n\t\tswap(ip[id],op);\n\t}\n\tinline void CLEAR(){\n\t\tfor(auto tmp:del)\n\t\t\ttr.modify(1,mn,mx,tmp.l,tmp.r,tmp.v);\n\t\tvector<DEL>det;\n\t\tswap(del,det);\n\t\tfor(auto tmp:mdp){\n\t\t\tvector<node>mdq;\n\t\t\tswap(p[tmp],mdq);\n\t\t}\n\t\tset<int>mdq;\n\t\tswap(mdp,mdq);\n\t\tset<int>mbq;\n\t\tswap(mbp,mbq);\n\t}\n\tinline int beg(){\n\t\tif(mbp.empty()) return 1e9;\n\t\treturn *mbp.begin();\n\t}\n\tinline void dbeg(){\n\t\tmbp.erase(mbp.begin());\n\t}\n\tinline int nxt(int x){\n\t\tauto tmp=mdp.upper_bound(x);\n\t\tif(tmp==mdp.end()) return 3e5;\n\t\treturn *tmp;\n\t}\n\tinline bool check(int A,int B,int mid){\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tcl(i);\n\t\t\tfor(int j=0;j<=3;j++){\n\t\t\t\tint x=a[(0+j)%4][i],y=a[(1+j)%4][i],\n\t\t\t\t\tz=a[(2+j)%4][i],f=a[(3+j)%4][i];\n\t\t\t\tif(A) swap(y,z);\n\t\t\t\tif(B) swap(x,y);\n\t\t\t\tif(x-mn<=mid&&mx-y<=mid)\n\t\t\t\t\tp[z].push_back((node){i,f}),mdp.insert(z);\n\t\t\t}\n\t\t}\n\t\tmbp=mdp;\n\t\tfor(int i=beg();i<=mid;i=nxt(i)){\n\t\t\tfor(auto tmp:p[i]){\n\t\t\t\tint col=tmp.c,x=tmp.x;\n\t\t\t\tadd(col,x,mid,1);\n\t\t\t}\n\t\t}\n\t\tint tmp=tr.query();\n\t\tif(tmp==n) return CLEAR(),1;\n\t\tfor(int i=nxt(mid);i<=mx;i=nxt(i)){\n\t\t\tfor(auto tmp:p[i]){\n\t\t\t\tint col=tmp.c,x=tmp.x;\n\t\t\t\tadd(col,x,mid,1);\n\t\t\t}\n\t\t\tfor(int id=beg();id<=i-mid-1;id=beg()){\n\t\t\t\tfor(auto tmp:p[id]){\n\t\t\t\t\tint col=tmp.c,x=tmp.x;\n\t\t\t\t\tadd(col,x,mid,-1);\n\t\t\t\t}\n\t\t\t\tdbeg();\n\t\t\t}\n\t\t\tint tmp=tr.query();\n\t\t\tif(tmp==n) return CLEAR(),1;\n\t\t}\n\t\treturn CLEAR(),0;\n\t}\n\tinline bool check(int mid){\n\t\tint tmp=check(0,0,mid);\n\t\tif(tmp) return 1;\n\t\ttmp=check(0,1,mid);\n\t\tif(tmp) return 1;\n\t\ttmp=check(1,0,mid);\n\t\tif(tmp) return 1;\n\t\treturn 0;\n\t}\n\tinline void main(){\n\t\twhile(T--){\n\t\t\tn=read();\n\t\t\tmn=3e4,mx=0;\n\t\t\tfor(int i=0;i<k;i++)\n\t\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\t\ta[i][j]=read(),\n\t\t\t\t\tmn=min(a[i][j],mn),\n\t\t\t\t\tmx=max(a[i][j],mx);\n\t\t\tint l=0,r=mx-mn,ans=3e4;\n\t\t\twhile(l<=r){\n\t\t\t\tint mid=l+r>>1;\n\t\t\t\tif(check(mid)) r=mid-1,ans=mid;\n\t\t\t\telse l=mid+1;\n\t\t\t}\n\t\t\twrite(ans),putc('\\n');\n\t\t}\n\t\tflush();\n\t}\n}\n```\n\n[\u63d0\u4ea4\u8bb0\u5f55\uff087.39KB\uff09](https://www.luogu.com.cn/record/104652553)",
        "postTime": 1678770603,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P9120\u3010[\u6625\u5b63\u6d4b\u8bd5 2023] \u5bc6\u7801\u9501\u3011"
    },
    {
        "content": "\u5206\u56db\u79cd\u60c5\u51b5\u8003\u8651\uff1a\n\n- $k=1$\n\n\u8f93\u51fa\u6700\u5927\u503c\u51cf\u6700\u5c0f\u503c\u3002\n\n- $k=2$\n\n\u6ce8\u610f\u5230\u7b54\u6848\u7684\u4e0a\u754c\u4e3a\u6700\u5927\u503c\u51cf\u6700\u5c0f\u503c\uff0c\u8981\u60f3\u4f4e\u4e8e\u8fd9\u4e2a\u4e0a\u754c\u5c31\u5fc5\u987b\u8ba9\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u4e0d\u5728\u540c\u4e00\u884c\u3002\n\n\u4e0d\u59a8\u4ee4\u6700\u5927\u503c $mx$ \u5728\u7b2c\u4e00\u884c\uff0c\u6700\u5c0f\u503c $mn$ \u5728\u7b2c\u4e8c\u884c\uff0c\u4e8c\u5206\u6781\u5dee\u6700\u5927\u503c $mid$\u3002\u5bf9\u4e8e\u7b2c\u4e00\u884c\uff0c\u5224\u5b9a\u6761\u4ef6\u4e3a $mx-a_i\\le mid$\uff0c\u7b2c\u4e8c\u884c\u5219\u662f $a_i-mn\\le mid$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n- $k=3$\n\n\u73b0\u5728\u9664\u4e86\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u6240\u5728\u7684\u884c\u5916\u53c8\u591a\u51fa\u4e86\u4e00\u884c\u3002\u9996\u5148\u56fa\u5b9a\u6700\u5927\u503c\u5728\u7b2c\u4e00\u884c\uff0c\u901a\u8fc7\u8f6c\u9501\u7684\u65b9\u5f0f\u8c03\u6574\u6700\u5c0f\u503c\u6240\u5728\u7684\u884c\u53f7\uff0c\u5bf9\u6bcf\u4e2a\u884c\u53f7\u4f9d\u6b21\u5904\u7406\u3002\n\n\u540c\u6837\u4e8c\u5206\u6781\u5dee\u6700\u5927\u503c $mid$\u3002\u9664\u6700\u5927\u6700\u5c0f\u503c\u5916\u7684\u9501\u901a\u8fc7\u8f6c\u9501\u80fd\u5f97\u5230\u8fd9\u4e00\u884c\u7684\u6240\u6709\u53ef\u9009\u503c\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u53ef\u9009\u503c\uff0c\u6211\u4eec\u5e0c\u671b\u627e\u5230\u4e00\u4e2a\u957f\u5ea6 $\\le mid$ \u7684\u533a\u95f4\u4f7f\u5f97\u6bcf\u4e00\u628a\u9501\u90fd\u6709\u81f3\u5c11\u4e00\u4e2a\u53ef\u9009\u503c\u5728\u533a\u95f4\u5185\u3002\n\n\u5148\u5c06\u6240\u6709\u53ef\u9009\u503c\u6392\u5e8f\uff0c\u518d\u901a\u8fc7\u53cc\u6307\u9488\u6ed1\u52a8\u7a97\u53e3\u7684\u65b9\u5f0f\u4f9d\u6b21\u679a\u4e3e\u533a\u95f4\u3002\u8bbe $cnt_i$ \u4e3a\u6bcf\u4e00\u628a\u9501\u53ef\u9009\u503c\u5728\u533a\u95f4\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u90a3\u4e48\u5224\u5b9a\u6761\u4ef6\u5373\u4e3a $\\sum_{i=1}^n[cnt_i>0]=n$\u3002\u6bcf\u6b21\u79fb\u52a8\u6307\u9488\u65f6 $cnt$ \u7684\u53d8\u5316\u91cf\u662f $O(1)$ \u7684\uff0c\u5f88\u597d\u7ef4\u62a4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2n)$\u3002\n\n- $k=4$\n\n\u8fd8\u662f\u4e00\u6837\u4e8c\u5206 $mid$\uff0c\u4e0d\u8fc7\u8fd9\u79cd\u60c5\u51b5\u53ef\u9009\u503c\u53d8\u6210\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u70b9\u5bf9 $(x,y)$\u3002\n\n\u6211\u4eec\u653e\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u6765\u8003\u8651\u3002\u8bbe\u4e00\u79cd\u5408\u6cd5\u6784\u9020\u4e2d\u7b2c\u4e00\u7ef4\u7684\u6700\u5927\u503c\u4e3a $x_0$\uff0c\u7b2c\u4e8c\u7ef4\u6700\u5927\u503c\u4e3a $y_0$\uff0c\u90a3\u4e48\u70b9 $(x_0,y_0)$ \u5c31\u53ef\u4ee5\u8868\u793a\u4e00\u79cd\u65b9\u6848\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $(a,b)$\uff0c\u6700\u5927\u503c\u70b9\u5bf9\u5e94\u8be5\u5728 $x_0\\in[a,a+mid],y_0\\in[b,b+mid]$ \u7684\u6b63\u65b9\u5f62\u4e2d\u3002\u4e00\u628a\u9501\u6784\u6210\u7684\u5408\u6cd5\u70b9\u96c6\u5c31\u662f\u8fd9\u4e9b\u6b63\u65b9\u5f62\u7684\u5e76\u3002\n\n\u8003\u8651\u4f7f\u7528\u626b\u63cf\u7ebf\u8f6c\u5316\u4e3a\u6570\u8f74\u95ee\u9898\uff0c\u5408\u6cd5\u70b9\u96c6\u5728\u626b\u63cf\u7ebf\u4e0a\u7684\u6295\u5f71\u5c31\u53d8\u6210\u4e86\u82e5\u5e72\u4e2a\u533a\u95f4\u7684\u5e76\u3002\u6ce8\u610f\u6b63\u65b9\u5f62\uff0c\u4e5f\u5c31\u662f\u626b\u63cf\u7ebf\u4e2d\u7684\u533a\u95f4\u4e2a\u6570\u5bf9\u4e8e\u6bcf\u4e00\u628a\u9501\u662f $O(1)$ \u7684\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u628a\u9501\u5efa\u7acb\u4e00\u68f5\u73c2\u6735\u8389\u6811\u6765\u7ef4\u62a4\u533a\u95f4\u5e76\u3002\n\n\u5177\u4f53\u800c\u8a00\uff0c\u73c2\u6735\u8389\u6811\u7ef4\u62a4\u7684\u4e1c\u897f\u5f62\u5982 $(l,r,x)$\uff0c\u8868\u793a\u533a\u95f4 $[l,r]$ \u88ab\u8986\u76d6\u4e86 $x$ \u6b21\u3002\u6bcf\u6b21\u589e\u5220\u533a\u95f4\u65f6\uff0c\u66b4\u529b\u4fee\u6539\u8fd9\u4e9b\u4e09\u5143\u7ec4\u5373\u53ef\u3002\n\n\u6700\u540e\u7528\u4e00\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5f53\u524d\u6bcf\u4e2a\u4f4d\u7f6e\u88ab\u591a\u5c11\u7684\u5408\u6cd5\u70b9\u96c6\u5305\u542b\u3002\u8fd9\u68f5\u7ebf\u6bb5\u6811\u9700\u8981\u652f\u6301\u533a\u95f4\u52a0\u51cf\u548c\u533a\u95f4\u67e5\u8be2\u6700\u5927\u503c\u3002\u5982\u679c\u5b58\u5728\u4f4d\u7f6e\u88ab\u6240\u6709\u9501\u7684\u5408\u6cd5\u70b9\u96c6\u5305\u542b\uff0c\u90a3\u4e48\u5c31\u6709\u89e3\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2n)$\u3002\n\n- **\u7ec6\u8282\u95ee\u9898**\n\n1. \u591a\u6d4b\u6e05\u7a7a\uff1a\u6ce8\u610f\u6211\u4eec\u5f00\u7684\u662f\u503c\u57df\u7ebf\u6bb5\u6811\uff0c\u4e0d\u80fd\u76f4\u63a5\u66b4\u529b\u6e05\u7a7a\uff0c\u9700\u8981\u6253\u4e00\u4e2a\u6e05\u7a7a\u6807\u8bb0\u3002\u540c\u6837\u7684\uff0c\u626b\u63cf\u7ebf\u4e5f\u662f\u57fa\u4e8e\u503c\u57df\u7684\uff0c\u9700\u8981\u8bb0\u5f55\u54ea\u4e9b\u4f4d\u7f6e\u6709\u64cd\u4f5c\u3002\n2. \u5173\u4e8e\u6700\u5927\u6700\u5c0f\u503c\uff1a\u9700\u8981\u7279\u5224\u5b83\u4eec\u5728\u540c\u4e00\u628a\u9501\uff0c\u6216\u8005\u6700\u5927\u503c\u7b49\u4e8e\u6700\u5c0f\u503c\uff08\u4e5f\u5c31\u662f\u6240\u6709\u6570\u5747\u76f8\u540c\uff09\u7684\u60c5\u51b5\u3002\n3. \u5173\u4e8e\u8f6c\u9501\uff1a\u6ce8\u610f\u4e8c\u5206\u65f6\u4e0d\u8981\u53bb\u8f6c\u6700\u5927\u6700\u5c0f\u503c\u6240\u5728\u7684\u9501\u3002\n\n[Code](https://www.luogu.com.cn/paste/1x11d24y) ~~\uff0810KB\uff0c\u614e\u70b9\uff09~~",
        "postTime": 1678363149,
        "uid": 148913,
        "name": "Graphcity",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P9120 [\u6625\u5b63\u6d4b\u8bd5 2023] \u5bc6\u7801\u9501"
    },
    {
        "content": "\u597d\u9898\u3002\n\n\u4ee5\u4e0b\u9ed8\u8ba4 $k=4$\u3002$k=1,2$ \u90fd\u53ef\u4ee5\u7b80\u5355\u8d2a\u5fc3\u5728 $O(n)$ \u65f6\u95f4\u5185\u5f97\u51fa\u7b54\u6848\uff0c\u8fd9\u91cc\u4e0d\u591a\u89e3\u91ca\u3002$k=3$ \u540e\u9762\u4f1a\u8bb2\u3002\n\n\u8003\u8651\u4e8c\u5206\u7b54\u6848\uff0c\u7136\u540e\u5224\u65ad\u7b54\u6848\u662f\u5426\u53ef\u80fd\u4e3a $\\text{mid}$\u3002\n\n\u9996\u5148\u8003\u8651\u6574\u4e2a\u77e9\u5f62\u4e2d\u6700\u5927\u7684\u6570 $\\text{mx}$ \u548c\u6700\u5c0f\u7684\u6570 $\\text{mn}$\uff0c\u5047\u8bbe\u5b83\u4eec\u4e0d\u5728\u540c\u4e00\u884c\uff0c\u90a3\u4e48\u8003\u8651\u94a6\u5b9a $\\text{mx}$ \u5728\u7b2c\u4e00\u884c\uff0c\u679a\u4e3e $\\text{mn}$ \u5728 $2,3,4$ \u884c\u7684\u60c5\u51b5\uff08\u5728\u540c\u4e00\u884c\u80af\u5b9a\u4e0d\u4f18\uff09\uff0c\u73b0\u5728\u5047\u8bbe\u5728\u7b2c $2$ \u884c\u3002\u4e4b\u540e\u5bf9\u4e8e\u6bcf\u4e00\u5217\uff0c\u679a\u4e3e\u8fd9\u4e00\u5217\u6240\u6709\u53ef\u80fd\u7684\u6392\u5217\u65b9\u5f0f\uff08\u5373\u8f6c\u82e5\u5e72\u4e0b\uff09\uff0c\u5982\u679c\u8fd9\u4e00\u5217\u7684\u7b2c\u4e00\u884c\u4e0e $\\text{mx}$ \u7684\u5dee $\\le \\text{mid}$ \u5e76\u4e14\u7b2c\u4e8c\u884c\u4e0e $\\text{mn}$ \u7684\u5dee $\\le \\text{mid}$\uff0c\u8bf4\u660e\u8fd9\u4e00\u5217\u5728 $1,2$ \u884c\u6ee1\u8db3 $\\text{mid}$ \u7684\u9650\u5236\u3002\n\n\u8003\u8651\u5728\u5269\u4e0b\u7684\u4e24\u884c\uff0c\u6211\u4eec\u628a\u4e24\u884c\u7684\u6570\u62bd\u8c61\u6210\u4e00\u4e2a\u70b9 $(x,y)$ \u52a0\u5165\u96c6\u5408\u4e2d\uff0c\u5176\u4e2d $x$ \u662f\u8fd9\u5217\u7b2c\u4e09\u884c\u7684\u6570\uff0c$y$ \u662f\u7b2c\u56db\u884c\u7684\u3002\u5e76\u4e14\u628a\u540c\u4e00\u5217\u5728\u96c6\u5408\u91cc\u7684\u70b9\u90fd\u67d3\u4e0a\u540c\u4e00\u79cd\u989c\u8272\uff08\u4e00\u5217\u6709 $4$ \u4e2a\u6392\u5217\u65b9\u5f0f\uff0c\u4e5f\u5c31\u6709\u81f3\u591a $4$ \u4e2a\u70b9\uff09\u3002\u90a3\u4e48\u73b0\u5728\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\uff1a\u5728\u4e00\u4e2a\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e0a\uff0c\u6709\u4e00\u4e9b\u6709\u989c\u8272\u7684\u70b9\uff0c\u73b0\u5728\u95ee\u80fd\u5426\u627e\u5230\u4e00\u4e2a \u8fb9\u957f\u4e3a $\\text{mid}$ \u7684\u6b63\u65b9\u5f62\uff0c\u4f7f\u6bcf\u79cd\u989c\u8272\u90fd\u88ab\u8986\u76d6\u81f3\u5c11\u4e00\u4e2a\u70b9\uff08\u53ef\u4ee5\u81ea\u5df1\u60f3\u60f3\u4e3a\u4ec0\u4e48\uff09\u3002\u800c\u5bf9\u4e8e $k=3$\uff0c\u8fd9\u91cc\u5c31\u5c11\u6389\u4e00\u7ef4\uff0c\u53d8\u6210\u4e86\u6570\u8f74\u4e0a\u7684\u95ee\u9898\uff08\u5373\u6bcf\u4e2a\u70b9\u7eb5\u5750\u6807\u90fd\u4e3a $1$\uff09\u3002\n\n\u8003\u8651\u89e3\u51b3\u8f6c\u6362\u540e\u7684\u95ee\u9898\u3002\u6ce8\u610f\u5230\u503c\u57df\u4e3a $3e4$\uff0c\u8003\u8651\u679a\u4e3e\u6b63\u65b9\u5f62\u4e0a\u8fb9\u754c\uff0c\u5219\u4e0b\u8fb9\u754c\u5df2\u7ecf\u5b9a\u597d\u3002\u90a3\u4e48\u5bf9\u4e8e\u5939\u5728\u4e2d\u95f4\u7684\u70b9\uff0c\u6bcf\u4e2a\u70b9\uff08\u8bbe\u6a2a\u5750\u6807\u4e3a $x$\uff09\u5bf9 $[x-mid,x]$ \u8fd9\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u6709 $1$ \u7684\u8d21\u732e\u3002\u8fd9\u6837\u6700\u540e\u82e5\u6709\u5de6\u7aef\u70b9\u6743\u503c\u4e3a $n$\uff0c\u8bc1\u660e\u4ee5 $x$ \u4e3a\u5de6\u8fb9\u754c\u7684\u6a2a\u5750\u6807\uff0c\u5f53\u524d\u679a\u4e3e\u7684\u4e3a\u4e0a\u8fb9\u754c\u7684\u4e00\u4e2a\u6b63\u65b9\u5f62\uff0c\u5c31\u80fd\u8986\u76d6 $n$ \u4e2a\u4e0d\u540c\u989c\u8272\u7684\u70b9\u3002\n\u4e5f\u5c31\u662f\u5bf9\u4e8e\u5939\u5728\u4e2d\u95f4\u7684\u6bcf\u4e2a\u70b9\uff0c\u5728 $[x-mid,x]$ \u533a\u95f4\u52a0 $1$\uff0c\u6700\u540e\u770b\u662f\u5426\u6709\u4e00\u4e2a\u70b9\u7684\u503c\u4e3a $n$\uff0c\u5373\u5168\u5c40\u6700\u5927\u503c\u4e3a $n$\uff0c\u7528\u7ebf\u6bb5\u6811\u5f88\u597d\u7ef4\u62a4\u3002\u5c06\u4e0a\u8fb9\u754c\u79fb\u52a8\u5c31\u662f\u52a0\u5165\u4e00\u884c\u7684\u70b9\u5e76\u5220\u9664\u4e00\u884c\u7684\u70b9\uff0c\u603b\u5171\u4f1a\u52a0/\u5220 $2kn$ \u4e2a\u70b9\u3002\n\n\u4f46\u662f\u8fd9\u6837\u5f88\u660e\u663e\u662f\u9519\u7684\uff0c\u56e0\u4e3a\u540c\u79cd\u989c\u8272\u5bf9\u540c\u4e00\u4e2a\u5de6\u7aef\u70b9\u4e0d\u80fd\u6709\u91cd\u590d\u8d21\u732e\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u79cd\u989c\u8272\u7ef4\u62a4\u4e00\u4e2a $\\text{multiset}$ \u7ef4\u62a4\u4e4b\u524d\u4fee\u6539\u8fc7\u7684\u533a\u95f4\uff0c\u7136\u540e\u65b0\u52a0\u4e00\u4e2a\u533a\u95f4\u4fee\u6539\u65f6\u5c31\u628a\u5de6\u53f3\u7b2c\u4e00\u4e2a\u4e4b\u524d\u4fee\u6539\u8fc7\u7684\u533a\u95f4\u627e\u51fa\u6765\uff0c\u4f7f\u5de6\u53f3\u7aef\u70b9\u7f29\u77ed\u5230\u4e0d\u4f1a\u91cd\u590d\u8986\u76d6\u3002\n\n\u81f3\u6b64\uff0c\u6574\u4e2a\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u6bcf\u7ec4\u6570\u636e\u4e3a $O(nk\\log^2n)$\uff0c\u52c9\u5f3a\u80fd\u8dd1\u3002\u4f46\u662f\u7531\u4e8e\u8fd9\u9898\u7684 $T$ \u53ef\u4ee5\u8fbe\u5230\u5f88\u5927\uff0c\u6240\u4ee5\u4efb\u4f55\u6e05\u7a7a\u7684\u64cd\u4f5c\u90fd\u4e0d\u80fd\u6574\u4e2a\u6e05\u7a7a\uff0c\u53ea\u80fd\u628a\u4fee\u6539\u8fc7\u7684\u4e0b\u6807\u4f4d\u7f6e\u6e05\u7a7a\u3002\n\n\u56e0\u4e3a\u8fd9\u9898\u7ec6\u8282\u8bf8\u591a\uff0c\u52a0\u4e0a\u5f53\u65f6\u4ee5\u4e3a\u5f88\u5feb\u80fd\u5199\u5b8c\u5c31\u6ca1\u6ce8\u610f\u5b9e\u73b0\uff0c\u5199\u4e86 7.7k\uff0c\u4f18\u5316\u4e4b\u540e\u80af\u5b9a\u53ef\u4ee5\u77ed\u5f88\u591a\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int inf = 2e9;\ninline int read() {\n\tint s = 0,f = 1;char ch = getchar();\n\twhile (!isdigit(ch)) f = ch == '-' ? -1 : 1, ch = getchar();\n\twhile (isdigit(ch)) s = (s << 3) + (s << 1) + ch - '0', ch = getchar();\n\treturn s*f;\n}\nint n,k,a[5][50010],mx,mn,xx,xy,nx,ny;\nvoid roll(int c) {\n\tint t = a[k][c];\n\tfor (int i = k;i;i -- ) a[i][c] = a[i - 1][c];\n\ta[1][c] = t;\n}\nvoid lock(int r,int x,int c) {\n\twhile (x != r) roll(c), x = x % k + 1;\n}\nvector<pair<int,int> > vc[30010];\nstruct Seg {\n\tint l,r,mx,tag;\n}t[120010];\nvoid pushup(int x) {\n\tt[x].mx = max(t[x<<1].mx,t[x<<1|1].mx);\n}\nvoid build(int x,int l,int r) {\n\tt[x].l = l, t[x].r = r, t[x].mx = t[x].tag = 0;\n\tif (l == r) return;\n\tint mid = l + r >> 1;\n\tbuild(x<<1,l,mid), build(x<<1|1,mid+1,r);\n}\nvoid pushdown(int x) {\n\tt[x<<1].tag += t[x].tag, t[x<<1].mx += t[x].tag;\n\tt[x<<1|1].tag += t[x].tag, t[x<<1|1].mx += t[x].tag;\n\tt[x].tag = 0;\n}\nvoid modify(int x,int l,int r,int s) {\n\tif (l > r) return;\n\tif (t[x].l >= l && r >= t[x].r) {\n\t\tt[x].mx += s, t[x].tag += s;\n\t\treturn;\n\t}\n\tpushdown(x);\n\tint mid = t[x].l + t[x].r >> 1;\n\tif (mid >= l) modify(x<<1,l,r,s);\n\tif (mid < r) modify(x<<1|1,l,r,s);\n\tpushup(x);\n}\nvoid print() {\n\tfor (int i = 1;i <= k;i ++ , puts(\"\"))\n\t\tfor (int j = 1;j <= n;j ++ ) printf(\"%d \",a[i][j]);\n\tputs(\"\");\n}\nstruct node {\n\tint l,r;\n\tbool operator < (const node &x) const {\n\t\treturn r < x.r;\n\t}\n};\nmultiset<node> S[50010];\nset<int> rub;\nint b[50010],tot;\nbool solve(int mid) {\n\tint res = 0;\n\tif (k == 3) {\n//\t\t\tcout << vc[1].size() << endl;\n\t\tfor (int l = 0;l < vc[1].size();l ++ ) {\n\t\t\tint tl = vc[1][l].first,tj = vc[1][l].second,xl = max(tl - mid,1),xr = tl;\n//\t\t\t\tcout << tl << endl;\n\t\t\tif (!S[tj].size()) modify(1,xl,xr,1);\n\t\t\telse {\n\t\t\t\tauto x = S[tj].upper_bound({xl,xr});\n\t\t\t\tif (x != S[tj].end()) xr = min(xr,(*x).l - 1);\n\t\t\t\tif (x != S[tj].begin()) {\n\t\t\t\t\tx --;\n\t\t\t\t\txl = max(xl,(*x).r + 1);\n\t\t\t\t}\n\t\t\t\tmodify(1,xl,xr,1);\n\t\t\t}\n//\t\t\tcout << xl << ' ' << xr << endl;\n\t\t\tS[tj].insert({max(tl - mid,1),tl});\n\t\t}\n\t\tres = t[1].mx == n;\n\t\tfor (int l = 0;l < vc[1].size();l ++ ) {\n\t\t\tint tl = vc[1][l].first,tj = vc[1][l].second,xl = max(tl - mid,1),xr = tl;\n\t\t\tS[tj].erase(S[tj].find({max(tl - mid,1),tl}));\n\t\t\tauto x = S[tj].upper_bound({xl,xr});\n\t\t\tif (x != S[tj].end()) xr = min(xr,(*x).l - 1);\n\t\t\tif (x != S[tj].begin()) {\n\t\t\t\tx --;\n\t\t\t\txl = max(xl,(*x).r + 1);\n\t\t\t}\n\t\t\tmodify(1,xl,xr,-1);\n//\t\t\tcout << xl << ' ' << xr << endl;\n\t\t}\n\t\tvc[1].clear();\n\t\treturn res;\n\t}\n\telse {\n\t\tint r = tot;\n\t\tfor (int i = tot;i;i -- ) {\n\t\t\tfor (int l = 0;l < vc[b[i]].size();l ++ ) {\n\t\t\t\tint tl = vc[b[i]][l].first,tj = vc[b[i]][l].second,xl = max(tl - mid,1),xr = tl;\n//\t\t\t\tcout << tl << endl;\n\t\t\t\tif (!S[tj].size()) modify(1,xl,xr,1);\n\t\t\t\telse {\n\t\t\t\t\tauto x = S[tj].upper_bound({xl,xr});\n\t\t\t\t\tif (x != S[tj].end()) xr = min(xr,(*x).l - 1);\n\t\t\t\t\tif (x != S[tj].begin()) {\n\t\t\t\t\t\tx --;\n\t\t\t\t\t\txl = max(xl,(*x).r + 1);\n\t\t\t\t\t}\n\t\t\t\t\tmodify(1,xl,xr,1);\n\t\t\t\t}\n\t\t\t\tS[tj].insert({max(tl - mid,1),tl});\n\t\t\t}\n\t\t\twhile (b[r] - mid > b[i]) {\n\t\t\t\tfor (int l = 0;l < vc[b[r]].size();l ++ ) {\n\t\t\t\t\tint tl = vc[b[r]][l].first,tj = vc[b[r]][l].second,xl = max(tl - mid,1),xr = tl;\n\t//\t\t\t\tcout << tl << endl;\n\t\t\t\t\tS[tj].erase(S[tj].find({max(tl - mid,1),tl}));\n\t\t\t\t\tauto x = S[tj].upper_bound({xl,xr});\n\t\t\t\t\tif (x != S[tj].end()) xr = min(xr,(*x).l - 1);\n\t\t\t\t\tif (x != S[tj].begin()) {\n\t\t\t\t\t\tx --;\n\t\t\t\t\t\txl = max(xl,(*x).r + 1);\n\t\t\t\t\t}\n\t\t\t\t\tmodify(1,xl,xr,-1);\n\t\t\t\t}\n\t\t\t\tr --;\n\t\t\t}\n\t\t\tres = max(res,t[1].mx);\n\t\t}\n\t\twhile (r) {\n\t\t\tfor (int l = 0;l < vc[b[r]].size();l ++ ) {\n\t\t\t\tint tl = vc[b[r]][l].first,tj = vc[b[r]][l].second,xl = max(tl - mid,1),xr = tl;\n\t//\t\t\t\tcout << tl << endl;\n\t\t\t\tS[tj].erase(S[tj].find({max(tl - mid,1),tl}));\n\t\t\t\tauto x = S[tj].upper_bound({xl,xr});\n\t\t\t\tif (x != S[tj].end()) xr = min(xr,(*x).l - 1);\n\t\t\t\tif (x != S[tj].begin()) {\n\t\t\t\t\tx --;\n\t\t\t\t\txl = max(xl,(*x).r + 1);\n\t\t\t\t}\n\t\t\t\tmodify(1,xl,xr,-1);\n\t\t\t}\n\t\t\tr --;\n\t\t}\n\t\treturn res == n;\n\t}\n}\nbool check(int mid) {\n//\tcout << mid << endl;\n\tll ans = 0,res = 0;\n\tif (ny == xy) {\n\t\tif (k == 3) vc[1].push_back({a[nx ^ 1][ny],ny});\n\t\telse {\n\t\t\tif (nx == 2)\n\t\t\tvc[a[3][ny]].push_back({a[4][ny],ny}), rub.insert(a[3][ny]);\n\t\t\tif (nx == 3)\n\t\t\tvc[a[2][ny]].push_back({a[4][ny],ny}), rub.insert(a[2][ny]);\n\t\t\tif (nx == 4)\n\t\t\tvc[a[2][ny]].push_back({a[3][ny],ny}), rub.insert(a[2][ny]);\n\t\t}\n\t\tfor (int j = 1;j <= n;j ++ ) {\n\t\t\tif (j == ny) continue;\n\t\t\tfor (int i = 0;i < k;i ++ ) {\n\t\t\t\troll(j);\n//\t\t\t\tcout << a[1][xy] - a[1][j]  << ' ' << a[nx][j] - a[nx][ny] << endl;\n\t\t\t\tif (a[1][xy] - a[1][j] <= mid && a[nx][j] - a[nx][ny] <= mid) {\n//\t\t\t\tprint();\n\t\t\t\t\tif (k == 4) {\n\t\t\t\t\t\tif (nx == 2)\n\t\t\t\t\t\tvc[a[3][j]].push_back({a[4][j],j}), rub.insert(a[3][j]);\n\t\t\t\t\t\tif (nx == 3)\n\t\t\t\t\t\tvc[a[2][j]].push_back({a[4][j],j}), rub.insert(a[2][j]);\n\t\t\t\t\t\tif (nx == 4)\n\t\t\t\t\t\tvc[a[2][j]].push_back({a[3][j],j}), rub.insert(a[2][j]);\n\t\t\t\t\t}\n\t\t\t\t\telse vc[1].push_back({a[nx ^ 1][j],j});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (k == 4)\n\t\tfor (auto x : rub) b[++tot] = x;\n\t\tint res = solve(mid);tot = 0;\n\t\tif (k == 4)\n\t\tfor (auto x : rub) vc[x].clear();rub.clear();\n\t\treturn res;\n\t}\n//\tcout << 1;\n\tfor (int T = 2;T <= 3 + (k == 4);T ++ ) {\n\t\tlock(T,nx,ny);\n\t\tnx = T;\n\t\tfor (int i = 1;i <= k;i ++ )\n\t\t\tif (abs(a[i][xy] - a[i][ny]) > mid) goto bre;\n//\t\tprint();\n\t\tif (k == 4) {\n\t\t\tif (T == 2)\n\t\t\tvc[a[3][ny]].push_back({a[4][ny],ny}), rub.insert(a[3][ny]),\n\t\t\tvc[a[3][xy]].push_back({a[4][xy],xy}), rub.insert(a[3][xy]);\n\t\t\tif (T == 3)\n\t\t\tvc[a[2][ny]].push_back({a[4][ny],ny}), rub.insert(a[2][ny]),\n\t\t\tvc[a[2][xy]].push_back({a[4][xy],xy}), rub.insert(a[2][xy]);\n\t\t\tif (T == 4)\n\t\t\tvc[a[2][ny]].push_back({a[3][ny],ny}), rub.insert(a[2][ny]),\n\t\t\tvc[a[2][xy]].push_back({a[3][xy],xy}), rub.insert(a[2][xy]);\n\t\t}\n\t\telse vc[1].push_back({a[T ^ 1][xy],xy}), vc[1].push_back({a[T ^ 1][ny],ny});\n\t\tfor (int j = 1;j <= n;j ++ ) {\n\t\t\tif (j == ny || j == xy) continue;\n\t\t\tfor (int i = 0;i < k;i ++ ) {\n\t\t\t\troll(j);\n\t\t\t\tif (a[1][xy] - a[1][j] <= mid && a[T][j] - a[T][ny] <= mid) {\n\t\t\t\t\tif (k == 4) {\n\t\t\t\t\t\tif (T == 2)\n\t\t\t\t\t\tvc[a[3][j]].push_back({a[4][j],j}), rub.insert(a[3][j]);\n\t\t\t\t\t\tif (T == 3)\n\t\t\t\t\t\tvc[a[2][j]].push_back({a[4][j],j}), rub.insert(a[2][j]);\n\t\t\t\t\t\tif (T == 4)\n\t\t\t\t\t\tvc[a[2][j]].push_back({a[3][j],j}), rub.insert(a[2][j]);\n\t\t\t\t\t}\n\t\t\t\t\telse vc[1].push_back({a[T ^ 1][j],j});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (k == 4)\n\t\tfor (auto x : rub) b[++tot] = x;\n\t\tres = solve(mid);tot = 0;\n\t\tif (k == 4)\n\t\tfor (auto x : rub) vc[x].clear();rub.clear();\n\t\tif (res) return 1;\n\t\tbre:;\n\t}\n\treturn 0;\n}\nint main() {\n//\tfreopen(\"lock5.in\",\"r\",stdin);\n\tint T = read();\n\tk = read();\n\twhile (T -- ) {\n\t\tn = read();\n\t\tmx = 0,mn = inf,xx = 0,xy = 0,nx = 0,ny = 0;\n\t\tfor (int i = 1;i <= k;i ++ )\n\t\t\tfor (int j = 1;j <= n;j ++ ) {\n\t\t\t\ta[i][j] = read();\n\t\t\t\tif (mx < a[i][j]) mx = a[i][j], xx = i, xy = j;\n\t\t\t\tif (mn > a[i][j]) mn = a[i][j], nx = i, ny = j;\n\t\t\t}\n\t\tif (k == 1) {\n\t\t\tprintf(\"%d\\n\",mx - mn);\n\t\t\tcontinue;\n\t\t}\n\t\tif (k == 2) {\n\t\t\tint mx1 = 0,mx2 = 0,mn1 = inf,mn2 = inf;\n\t\t\tfor (int i = 1;i <= n;i ++ ) {\n\t\t\t\tif (a[1][i] > a[2][i]) swap(a[1][i],a[2][i]);\n\t\t\t\tmx1 = max(mx1,a[1][i]), mn1 = min(mn1,a[1][i]), mx2 = max(mx2,a[2][i]), mn2 = min(mn2,a[2][i]);\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",max(mx1 - mn1,mx2 - mn2));\n\t\t\tcontinue;\n\t\t}\n\t\tint f = xy == ny;\n\t\twhile (xx != 1) {\n\t\t\troll(xy), xx = xx % k + 1;\n\t\t\tif (f) nx = nx % k + 1;\n\t\t}\n\tbuild(1,1,mx);\n//\t\tprint();\n//\t\tcout << nx << ' ' << ny << ' ' << xx << ' ' << xy << endl;\n\t\tint l = 0,r = mx - mn;\n\t\twhile (l < r) {\n\t\t\tint mid = l + r >> 1;\n\t\t\tif (check(mid)) r = mid;\n\t\t\telse l = mid + 1;\n\t\t}\n\t\tprintf(\"%d\\n\",l);\n\t}\n\treturn 0;\n}\n/*\n19 3\n3\n20614 19730 1512\n10536 6776 21382\n7158 19188 5477\n*/\n```\n",
        "postTime": 1678449015,
        "uid": 94777,
        "name": "Jsxts_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P9120 \u5bc6\u7801\u9501"
    },
    {
        "content": "[\u6211\u7684\u535a\u5ba2](https://2745518585.github.io/post/NOI-spring-test-T4-solution/)\n\n## \u9898\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a $k$ \u884c $n$ \u5217\u7684\u77e9\u9635\uff08$k \\leq 4$\uff09\uff0c\u6bcf\u6b21\u53ef\u4ee5\u9009\u5b9a\u4e00\u5217\u8fdb\u884c\u4e00\u6b21\u5faa\u73af\u4f4d\u79fb\uff0c\u5b9a\u4e49 $c(i)$ \u4e3a\u4efb\u610f\u6b21\u64cd\u4f5c\u540e\u7b2c $i$ \u884c\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u4e4b\u5dee\uff0c\u6c42 $\\max c(i)$ \u7684\u6700\u5c0f\u503c\u3002\n\n## \u63d0\u793a\n\n\u5c1d\u8bd5\u4e8c\u5206\u7b54\u6848\u3002\n\n\u8003\u8651\u5168\u5c40\u6700\u5927\u503c\u4e00\u5b9a\u662f\u67d0\u4e00\u884c\u7684\u6700\u5927\u503c\uff0c\u5168\u5c40\u6700\u5c0f\u503c\u4e00\u5b9a\u662f\u67d0\u4e00\u884c\u6700\u5c0f\u503c\u3002\n\n\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u5728\u4e0d\u540c\u884c\u4e00\u5b9a\u4e0d\u52a3\u4e8e\u5728\u540c\u4e00\u884c\u3002\n\n## \u601d\u8def\n\n\u6700\u5927\u503c\u6700\u5c0f\uff0c\u8003\u8651\u4e8c\u5206\u7b54\u6848\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u5224\u5b9a $\\forall i,c(i)\\leq x$\u3002\u6211\u4eec\u6309 $k$ \u4ece\u5c0f\u5230\u5927\u89e3\u51b3\u3002\n\n$k=1$ \u663e\u7136\u7b49\u4e8e\u6700\u5927\u503c\u51cf\u6700\u5c0f\u503c\u3002\n\n\u5047\u5982\u6211\u4eec\u5df2\u7ecf\u94a6\u5b9a\u4e86\u67d0\u4e00\u884c\u7684\u6700\u5927\u503c $mx_i$\uff0c\u663e\u7136\u5728\u8fd9\u4e00\u884c\u7684\u6bcf\u4e00\u6570\u5e94\u8be5\u5927\u4e8e\u7b49\u4e8e $mx_i-x$\u3002\u4f46\u662f\u76f4\u63a5\u679a\u4e3e\u663e\u7136\u4e0d\u4f18\u3002\u6211\u4eec\u53d1\u73b0\u5168\u5c40\u6700\u5927\u503c $mx$ \u4e00\u5b9a\u662f\u67d0\u4e00\u884c\u7684\u6700\u5927\u503c\uff0c\u7531\u4e8e\u884c\u4e0e\u884c\u4e4b\u95f4\u6ca1\u6709\u533a\u522b\uff0c\u6211\u4eec\u76f4\u63a5\u94a6\u5b9a $mx_1 = mx$\u3002\n\n\u540c\u7406\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u53d1\u73b0\u5168\u5c40\u6700\u5c0f\u503c $mn$ \u4e5f\u4e00\u5b9a\u662f\u67d0\u4e00\u884c\u7684\u6700\u5c0f\u503c\u3002\u5982\u679c\u628a $mx$ \u548c $mn$ \u653e\u5728\u540c\u4e00\u884c\uff0c\u7b54\u6848 $mx-mn$ \u663e\u7136\u8fbe\u5230\u4e86\u4e0a\u754c\uff0c\u6240\u4ee5\u628a $mx$ \u548c $mn$ \u4e0d\u540c\u884c\u4e00\u5b9a\u4e0d\u52a3\u3002\u6240\u4ee5\u6211\u4eec\u94a6\u5b9a $mx_1 = mx,mn_2 = mn$\uff0c\u5c31\u53ef\u4ee5\u5224\u65ad\u6bcf\u4e00\u5217\u662f\u5426\u53ef\u80fd\u6ee1\u8db3\u9650\u5236\u3002\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u89e3\u51b3\u4e86 $k=2$\u3002\n\n\u5bf9\u4e8e $k=3$ \u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u94a6\u5b9a $mx_1 = mx$\uff0c\u4f46\u662f\u6700\u5c0f\u503c\u5728\u7b2c\u4e8c\u884c\u6216\u7b2c\u4e09\u884c\u5b9e\u9645\u4e0a\u662f\u4e0d\u540c\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u679a\u4e3e\u6700\u5c0f\u503c\u6240\u5728\u7684\u884c\uff0c\u4ee4\u5269\u4e0b\u6ca1\u6709\u94a6\u5b9a\u7684\u884c\u4e3a $i$\uff0c\u94a6\u5b9a\u6700\u5c0f\u503c\u4e3a $mn_i$\u3002\u5bf9\u4e8e\u67d0\u4e00\u5217\uff0c\u603b\u5171\u6709\u4e09\u79cd\u60c5\u51b5\uff0c\u9996\u5148\u8981\u53bb\u9664\u4e0d\u6ee1\u8db3\u5168\u5c40\u6700\u5927\u6700\u5c0f\u9650\u5236\u7684\u60c5\u51b5\uff0c\u8fd8\u8981\u6ee1\u8db3 $a_i \\leq mn_i + x$\uff0c\u5373\n$$\na_i-x \\leq mn_i \\leq a_i\n$$\n\u603b\u5171\u6709 $O(n)$ \u4e2a\u8fd9\u6837\u7684\u5f0f\u5b50\uff0c$mn_i$ \u5fc5\u987b\u8981\u6ee1\u8db3\u6bcf\u4e00\u5217\u81f3\u5c11\u6709\u4e00\u4e2a\u5f0f\u5b50\u6210\u7acb\u3002\u663e\u7136\u5982\u679c\u5b58\u5728\u8fd9\u6837\u4e00\u4e2a $mn_i$\uff0c\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u8fd9\u4e00\u884c\u7684\u6570\u6ee1\u8db3\u6bcf\u4e00\u5217\u81f3\u5c11\u6210\u7acb\u4e00\u4e2a\u5f0f\u5b50\uff08\u5373\u5411\u4e0a\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0a\u754c\uff09\u3002\u95ee\u9898\u8f6c\u5316\u4e3a\u6709 $n$ \u79cd\u533a\u95f4\uff0c\u6c42\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u70b9\u4f7f\u5f97\u6bcf\u79cd\u533a\u95f4\u90fd\u5b58\u5728\u4e00\u4e2a\u533a\u95f4\u5305\u542b\u8fd9\u4e2a\u70b9\u3002\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528\u626b\u63cf\u7ebf\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u5f53\u524d\u70b9\u88ab\u7b2c $i$ \u79cd\u533a\u95f4\u5305\u542b\u4e86\u591a\u5c11\u6b21\u5373\u53ef\u3002\n\n\u5bf9\u4e8e $k=4$ \u7684\u60c5\u51b5\uff0c\u6211\u4eec\u7528\u4e00\u6837\u7684\u65b9\u6cd5\uff0c\u53d1\u73b0\u53d8\u91cf\u53d8\u6210\u4e86\u4e24\u4e2a\uff0c\u5373\u6709 $O(n)$ \u7ec4\n\n$$\n\\left\\{\n\\begin{aligned}\na_i-x \\leq mn_i \\leq a_i\\\\\na_j-x \\leq mn_j \\leq a_j\n\\end{aligned}\n\\right.\n$$\n\n\u8fd9\u6837\u7684\u5f0f\u5b50\uff0c$mn_i$ \u4e0e $mn_j$ \u5fc5\u987b\u6ee1\u8db3\u6bcf\u4e00\u5217\u81f3\u5c11\u6709\u4e00\u7ec4\u5f0f\u5b50\u6210\u7acb\u3002\u8f6c\u6362\u8fc7\u6765\u5c31\u53d8\u6210\u4e86\u4e8c\u7ef4\u7684\uff0c\u6709 $n$ \u79cd\u77e9\u9635\uff0c\u6c42\u5e73\u9762\u4e0a\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u70b9\u4f7f\u5f97\u6bcf\u79cd\u77e9\u9635\u90fd\u5b58\u5728\u4e00\u4e2a\u77e9\u9635\u5305\u542b\u8fd9\u4e2a\u70b9\u3002\u540c\u6837\u8003\u8651\u626b\u63cf\u7ebf\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5f53\u524d\u9ad8\u5ea6\u7684\u4e00\u6761\u7ebf\u4e0a\u6bcf\u4e2a\u70b9\u88ab\u591a\u5c11\u79cd\u533a\u95f4\u8986\u76d6\uff0c\u548c\u8fd9\u4e2a\u7684\u5168\u5c40\u6700\u5927\u503c\uff0c\u4f46\u662f\u8fd9\u91cc\u4e0d\u597d\u53bb\u91cd\uff0c\u6211\u91c7\u7528\u7684\u6bd4\u8f83\u66b4\u529b\u7684\u65b9\u6cd5\uff1a\u7531\u4e8e\u6bcf\u79cd\u77e9\u9635\u6700\u591a\u53ea\u6709 $4$ \u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bb9\u65a5\u4e00\u4e0b\u53d8\u6210\u81f3\u591a $15$ \u4e2a\u77e9\u9635\u3002\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u88ab\u8986\u76d6\u7684\u533a\u95f4\u6570\u7684\u6700\u5927\u503c\u662f\u4e0d\u662f $n$ \u5373\u53ef\u3002\n\n## code\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int N=1000001;\nint n,m,k,q,mx,mn,a[N][4],e[N];\nstruct node\n{\n    int x1,x2,y1,y2;\n    node() {}\n    node(int x1,int x2,int y1,int y2):x1(x1),x2(x2),y1(y1),y2(y2) {}\n}b[N][4];\nstruct line\n{\n    int x1,x2,h,u;\n    line() {}\n    line(int x1,int x2,int h,int u):x1(x1),x2(x2),h(h),u(u) {}\n}c[N<<5];\nbool cmp(line a,line b)\n{\n    return a.h<b.h;\n}\nstruct tree\n{\n    int l,r,s,k;\n}T[N<<2];\nvoid pushup(int x)\n{\n    T[x].s=max(T[x<<1].s,T[x<<1|1].s);\n}\nvoid pushdown(int x)\n{\n    if(T[x].k==0) return;\n    T[x<<1].s+=T[x].k;\n    T[x<<1].k+=T[x].k;\n    T[x<<1|1].s+=T[x].k;\n    T[x<<1|1].k+=T[x].k;\n    T[x].k=0;\n}\nvoid build(int x,int l,int r)\n{\n    T[x].l=l;\n    T[x].r=r;\n    T[x].s=T[x].k=0;\n    if(l==r) return;\n    int z=l+r>>1;\n    build(x<<1,l,z);\n    build(x<<1|1,z+1,r);\n    pushup(x);\n}\nvoid add(int x,int l,int r,int k)\n{\n    if(l>r) return;\n    if(T[x].l>=l&&T[x].r<=r)\n    {\n        T[x].s+=k;\n        T[x].k+=k;\n        return;\n    }\n    pushdown(x);\n    int z=T[x].l+T[x].r>>1;\n    if(l<=z) add(x<<1,l,r,k);\n    if(r>z) add(x<<1|1,l,r,k);\n    pushup(x);\n}\nvoid add_node(int u,node p1=node(1,3e4,1,3e4),node p2=node(1,3e4,1,3e4),node p3=node(1,3e4,1,3e4),node p4=node(1,3e4,1,3e4))\n{\n    int x1=max(max(p1.x1,p2.x1),max(p3.x1,p4.x1));\n    int x2=min(min(p1.x2,p2.x2),min(p3.x2,p4.x2));\n    int y1=max(max(p1.y1,p2.y1),max(p3.y1,p4.y1));\n    int y2=min(min(p1.y2,p2.y2),min(p3.y2,p4.y2));\n    if(x1<=x2&&y1<=y2)\n    {\n        c[++q]=line(x1,x2,y1,u);\n        c[++q]=line(x1,x2,y2+1,-u);\n    }\n}\nbool check()\n{\n    q=0;\n    for(int i=1;i<=n;++i)\n    {\n        add_node(1,b[i][0]);\n        add_node(1,b[i][1]);\n        add_node(1,b[i][2]);\n        add_node(1,b[i][3]);\n        add_node(-1,b[i][0],b[i][1]);\n        add_node(-1,b[i][0],b[i][2]);\n        add_node(-1,b[i][0],b[i][3]);\n        add_node(-1,b[i][1],b[i][2]);\n        add_node(-1,b[i][1],b[i][3]);\n        add_node(-1,b[i][2],b[i][3]);\n        add_node(1,b[i][0],b[i][1],b[i][2]);\n        add_node(1,b[i][0],b[i][1],b[i][3]);\n        add_node(1,b[i][0],b[i][2],b[i][3]);\n        add_node(1,b[i][1],b[i][2],b[i][3]);\n        add_node(-1,b[i][0],b[i][1],b[i][2],b[i][3]);\n    }\n    sort(c+1,c+q+1,cmp);\n    build(1,1,m);\n    int x=1;\n    for(int i=1;i<=m;++i)\n    {\n        while(x<=q&&c[x].h==i)\n        {\n            add(1,c[x].x1,c[x].x2,c[x].u);\n            ++x;\n        }\n        if(T[1].s==n) return true;\n    }\n    return false;\n}\nint find(int x)\n{\n    return lower_bound(e+1,e+m+1,x)-e;\n}\nbool solve(int x)\n{\n    for(int i=1;i<=3;++i)\n    {\n        for(int j=1;j<=n;++j)\n        {\n            for(int k=0;k<=3;++k) b[j][k]=node(1,1,0,0);\n        }\n        for(int j=1;j<=n;++j)\n        {\n            for(int k=0;k<=3;++k)\n            {\n                if(mx-a[j][k]>x||a[j][(k+i)%4]-mn>x) continue;\n                int z1=0,z2=0;\n                if(i==1) z1=a[j][(k+2)%4],z2=a[j][(k+3)%4];\n                if(i==2) z1=a[j][(k+1)%4],z2=a[j][(k+3)%4];\n                if(i==3) z1=a[j][(k+1)%4],z2=a[j][(k+2)%4];\n                b[j][k]=node(find(max(1,z1-x)),find(z1),find(max(1,z2-x)),find(z2));\n            }\n        }\n        if(check()) return true;\n    }\n    return false;\n}\nnamespace Solve2\n{\n    bool solve(int x)\n    {\n        for(int i=1;i<=n;++i)\n        {\n            bool u=false;\n            for(int j=0;j<=1;++j)\n            {\n                if(mx-a[i][j]>x||a[i][(j+1)%2]-mn>x) continue;\n                u=true;\n            }\n            if(!u) return false;\n        }\n        return true;\n    }\n}\nnamespace Solve3\n{\n    int c[N],q;\n    struct str\n    {\n        int x,h,u;\n        str() {}\n        str(int x,int h,int u):x(x),h(h),u(u) {}\n    }b[N];\n    bool cmp(str a,str b)\n    {\n        return a.h<b.h;\n    }\n    bool check()\n    {\n        sort(b+1,b+q+1,cmp);\n        for(int i=1;i<=n;++i) c[i]=0;\n        int x=1,s=0;\n        for(int i=1;i<=m;++i)\n        {\n            while(x<=q&&b[x].h==i)\n            {\n                if(c[b[x].x]==0) ++s;\n                c[b[x].x]+=b[x].u;\n                if(c[b[x].x]==0) --s;\n                ++x;\n            }\n            if(s==n) return true;\n        }\n        return false;\n    }\n    bool solve(int x)\n    {\n        for(int i=1;i<=2;++i)\n        {\n            q=0;\n            for(int j=1;j<=n;++j)\n            {\n                for(int k=0;k<=2;++k)\n                {\n                    if(mx-a[j][k]>x||a[j][(k+i)%3]-mn>x) continue;\n                    int z=0;\n                    if(i==1) z=a[j][(k+2)%3];\n                    if(i==2) z=a[j][(k+1)%3];\n                    b[++q]=str(j,find(max(1,z-x)),1);\n                    b[++q]=str(j,find(z+1),-1);\n                }\n            }\n            if(check()) return true;\n        }\n        return false;\n    }\n}\nvoid abc()\n{\n    scanf(\"%d\",&n);\n    mx=1,mn=3e4;\n    m=0;\n    for(int i=0;i<=k-1;++i)\n    {\n        for(int j=1;j<=n;++j)\n        {\n            scanf(\"%d\",&a[j][i]);\n            e[++m]=a[j][i];\n            mx=max(mx,a[j][i]);\n            mn=min(mn,a[j][i]);\n        }\n    }\n    if(k==1)\n    {\n        printf(\"%d\\n\",mx-mn);\n        return;\n    }\n    sort(e+1,e+m+1);\n    m=unique(e+1,e+m+1)-e-1;\n    auto chk=[&](int x)\n    {\n        if(k==2) return Solve2::solve(x);\n        if(k==3) return Solve3::solve(x);\n        if(k==4) return solve(x);\n        return false;\n    };\n    int l=0,r=3e4;\n    while(l<r)\n    {\n        int z=l+r>>1;\n        if(chk(z)) r=z;\n        else l=z+1;\n    }\n    printf(\"%d\\n\",l);\n}\nint main()\n{\n    int T;\n    scanf(\"%d%d\",&T,&k);\n    while(T--) abc();\n    return 0;\n}\n```\n\n",
        "postTime": 1678419838,
        "uid": 291248,
        "name": "\u8d75\u60a6\u5c91",
        "ccfLevel": 7,
        "title": "NOI \u6625\u5b63\u6d4b\u8bd5 T4 \u5bc6\u7801\u9501\u9898\u89e3"
    },
    {
        "content": "\u66b4\u529b\u5bb9\u65a5\u590d\u6d3b\u4e4b\u8def\uff01\n\n# $k=1$\n\n\u8fd9\u4e2a\u4f60\u80af\u5b9a\u4f1a\u3002\n\n# $k=2$\n\n\u5927\u7684\u653e\u4e0a\u53bb\uff0c\u5c0f\u7684\u653e\u4e0b\u6765\u3002\u7b80\u5355\u8d2a\u5fc3\u3002\n\n# $k=3$\n\n\u8003\u8651\u4e8c\u5206\u7b54\u6848\u3002\n\n\u7136\u540e\u8003\u8651\u5224\u65ad\u662f\u5426\u5408\u6cd5\u3002\n\n\u4ee4\u5f53\u524d\u7b54\u6848\u4e3a $val$\u3002\n\n\u9996\u5148\u94a6\u5b9a\u6700\u5c0f\u503c\u5728\u7b2c\u4e00\u884c\u3002\n\n\u7136\u540e\u679a\u4e3e\u6700\u5927\u503c\u5728\u54ea\u4e00\u884c\u3002\n\n\u73b0\u5728\u6211\u4eec\u5c31\u786e\u5b9a\u4e86\u4e24\u884c\u53ef\u4ee5\u586b\u7684\u6570\u7684\u8303\u56f4\u3002\n\n\u5269\u4e0b\u4e00\u884c\u7684\u9009\u62e9\u5c31\u51fa\u6765\u4e86\u3002\n\n\u73b0\u5728\u95ee\u9898\u662f\u600e\u4e48\u5224\u65ad\u5269\u4e0b\u4e00\u884c\u662f\u5426\u5408\u6cd5\u3002\n\n\u8003\u8651\u628a\u662f\u5426\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a\u7b54\u6848\u7684\u533a\u95f4\u8986\u76d6\u6240\u6709\u70b9\u7684\u95ee\u9898\u8f6c\u53d8\u4e3a\u628a\u6bcf\u4e2a\u70b9 $x$ \u5bf9\u533a\u95f4 $[x,x+val]$ \u505a\u8d21\u732e\u3002\n\n\u7136\u540e\u770b\u6709\u6ca1\u6709\u70b9\u88ab\u8d21\u732e\u4e86 $n$ \u904d\u3002\n\n\u4f46\u662f\u540c\u4e00\u4e2a\u9009\u62e9\u7684\u70b9\u4f1a\u91cd\u590d\u8d21\u732e\u3002\n\n\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u5bb9\u65a5\u53bb\u9664\u91cd\u590d\u8d21\u732e\u3002\n\n\u8fd9\u91cc\u7531\u4e8e\u503c\u57df\u5f88\u5c0f\uff0c\u76f4\u63a5\u7528\u5dee\u5206\u7ef4\u62a4\u3002\n\n# $k=4$\n\n\u548c $k=3$ \u7684\u505a\u6cd5\u5dee\u4e0d\u591a\u3002\n\n\u4e00\u6837\u7684\u505a\u6cd5\uff0c\u628a\u6bcf\u4e2a\u70b9\u5bf9\u4e00\u4e2a\u6b63\u65b9\u5f62\uff0c\u7136\u540e\u66b4\u529b\u5bb9\u65a5\u3002\n\n\u4f46\u662f\u95ee\u9898\u53d8\u6210\u4e86\u4e8c\u7ef4\u6570\u70b9\u3002\u6240\u4ee5\u79bb\u7ebf\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u4f46\u662f\u88ab\u8d21\u732e $n$ \u6b21\u7684\u70b9\u6709 $V^2$ \u79cd\u60c5\u51b5\uff0c\u600e\u4e48\u529e\uff1f\n\n\u53d1\u73b0\u88ab\u8d21\u732e $n$ \u6b21\u7684\u70b9\u4e00\u5b9a\u662f\u88ab\u8d21\u732e\u6700\u591a\u7684\u70b9\uff0c\u6240\u4ee5\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u524d\u7f00\u548c\u6781\u503c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n# \u5361\u5e38\n\n\u4e0a\u9762\u7684\u505a\u6cd5\u590d\u6742\u5ea6\u662f $O(k^2 \\times 2^k \\times n \\times \\log^{k-2} (n \\times 2^k))$\u3002\n\n\u90a3\u4e48\u5f00\u59cb\u5361\u5e38\uff1a\n\n1. \u5927\u91cf\u4f7f\u7528\u4f4d\u8fd0\u7b97\u3002\n\n2. \u8bb0\u5f55\u6700\u5927\u8bbf\u95ee\u5230\u7684\u4f4d\u7f6e\uff0c\u51cf\u5c11\u5bf9\u6ca1\u6709\u8bbf\u95ee\u7684\u6570\u7ec4\u7684\u6e05\u7a7a\u3002\n\n3. \u56e0\u4e3a\u7ebf\u6bb5\u6811\u53ea\u7528\u7ef4\u62a4\u5355\u70b9\u4fee\u6539\uff0c\u6240\u4ee5\u4f7f\u7528\u975e\u9012\u5f52\u7ebf\u6bb5\u6811\u3002\n\n\u4e0a\u9762\u662f\u6838\u5fc3\u7684\u5361\u5e38\u601d\u8def\uff0c\u5269\u4e0b\u4e00\u4e9b\u5c0f\u4f18\u5316\u5c31\u770b\u4ee3\u7801\u5427\uff0815KB \u614e\u5165\uff09\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define max(a,b) (a>b?a:b)\n#define min(a,b) (a<b?a:b)\nusing namespace std;\nnamespace IO{\n    const int SIZE=1<<21;\n    static char ibuf[SIZE],obuf[SIZE],*iS,*iT,*oS=obuf,*oT=oS+SIZE-1;\n    int qr;\n    char qu[55],c;\n    bool f;\n    #define getchar() (IO::iS==IO::iT?(IO::iT=(IO::iS=IO::ibuf)+fread(IO::ibuf,1,IO::SIZE,stdin),(IO::iS==IO::iT?EOF:*IO::iS++)):*IO::iS++)\n    #define putchar(x) *IO::oS++=x,IO::oS==IO::oT?flush():0\n    #define flush() fwrite(IO::obuf,1,IO::oS-IO::obuf,stdout),IO::oS=IO::obuf\n    #define puts(x) IO::Puts(x)\n    template<typename T>\n    inline void read(T&x){\n        for(f=1,c=getchar();c<48||c>57;c=getchar())f^=c=='-';\n        for(x=0;c<=57&&c>=48;c=getchar()) x=(x<<1)+(x<<3)+(c&15); \n        x=f?x:-x;\n    }\n    template<typename T>\n    inline void write(T x){\n        if(!x) putchar(48); if(x<0) putchar('-'),x=-x;\n        while(x) qu[++qr]=x%10^48,x/=10;\n        while(qr) putchar(qu[qr--]);\n    }\n    inline void Puts(const char*s){\n        for(int i=0;s[i];++i)\n            putchar(s[i]);\n        putchar('\\n');\n    }\n    struct Flusher_{~Flusher_(){flush();}}io_flusher_;\n}\nusing IO::read;\nusing IO::write;\nconst int maxk = 5,maxn = 5e4+14,maxv=3e4+10;\nint a[maxn][maxk];\nint k;\nint ans(int j,int n){\n    int mx=0,mi=65535;\n    for(int i=1;i<=n;++i) mx=max(mx,a[i][j]),mi=min(mi,a[i][j]);\n    return mx-mi;\n}\nvector<int> ch[maxn];//\u5269\u4e0b\u4e00\u884c\u53ef\u80fd\u7684\u9009\u62e9\nint sum[maxv];//\u5dee\u5206\u6570\u7ec4\nint n;\nint lwx;\ninline void add(int l,int r,int val){//\u5dee\u5206\u6570\u7ec4\u4e0a\u4fee\u6539\n    r=min(r,maxv-7);\n    sum[l]+=val;\n    sum[r+1]-=val;\n    lwx=max(lwx,r+1);\n}\ninline void maintain(){//\u7edf\u8ba1\u5dee\u5206\u6570\u7ec4\n    for(register int i=1;i<=lwx;i=-~i) sum[i]+=sum[i-1];\n}\nbool check(int pos,int mx,int mi,int val){//\u6700\u5927\u503c\u653e\u5728\u7b2c 1 \u884c\uff0c\u6700\u5c0f\u503c\u653e\u5728\u7b2c pos \u884c k=3 \u6781\u503c\u4e3a val \u662f\u5426\u5408\u6cd5\n    for(register int i=0;i<=lwx;i=-~i) sum[i]=0;\n    lwx=0;\n    for(register int i=1;i<=n;i=-~i) ch[i].clear();\n    int r1=mx,l1=r1-val;\n    int l2=mi,r2=l2+val;\n    for(register int i=1;i<=n;i=-~i){\n        if(l1<=a[i][1]&&a[i][1]<=r1&&l2<=a[i][pos]&&a[i][pos]<=r2){//\u786e\u5b9a\u533a\u95f4\u7684\u884c\u586b\u7684\u6570\u5408\u6cd5\u5408\u6cd5\n            ch[i].push_back(a[i][((pos-2)^1)+2]);\n        }\n        a[i][1]=a[i][1]^a[i][2];\n        a[i][2]=a[i][1]^a[i][2];\n        a[i][1]=a[i][1]^a[i][2];\n        a[i][1]=a[i][1]^a[i][3];\n        a[i][3]=a[i][1]^a[i][3];\n        a[i][1]=a[i][1]^a[i][3];\n        //\u8f6c\u9501\u8c03\u6574\u6570\u7ec4\n        if(l1<=a[i][1]&&a[i][1]<=r1&&l2<=a[i][pos]&&a[i][pos]<=r2){//\u786e\u5b9a\u533a\u95f4\u7684\u884c\u586b\u7684\u6570\u5408\u6cd5\u5408\u6cd5\n            ch[i].push_back(a[i][((pos-2)^1)+2]);\n        }\n        a[i][1]=a[i][1]^a[i][2];\n        a[i][2]=a[i][1]^a[i][2];\n        a[i][1]=a[i][1]^a[i][2];\n        a[i][1]=a[i][1]^a[i][3];\n        a[i][3]=a[i][1]^a[i][3];\n        a[i][1]=a[i][1]^a[i][3];\n        if(l1<=a[i][1]&&a[i][1]<=r1&&l2<=a[i][pos]&&a[i][pos]<=r2){//\u786e\u5b9a\u533a\u95f4\u7684\u884c\u586b\u7684\u6570\u5408\u6cd5\u5408\u6cd5\n            ch[i].push_back(a[i][((pos-2)^1)+2]);\n        }\n        if(ch[i].size()==0) return false;\n        if(ch[i].size()==1){\n            add(ch[i][0],ch[i][0]+val,1);\n        }\n        else if(ch[i].size()==2){\n            add(ch[i][0],ch[i][0]+val,1);\n            add(ch[i][1],ch[i][1]+val,1);\n            int l=max(ch[i][0],ch[i][1]),r=min(ch[i][0]+val,ch[i][1]+val);\n            if(l<=r)\n                add(l,r,-1);\n            //\u5bb9\u65a5\u5904\u7406\n        }\n        else {\n            int l=min(ch[i][0],min(ch[i][1],ch[i][2])),r=mx;\n            add(l,r,1);\n        }\n    }\n    maintain();\n    for(register int i=1;i<=n;i=-~i){\n        if(ch[i].size()==0) continue;\n        for(register int u:ch[i])\n            if(sum[u]==n)//\u88ab\u6240\u6709\u533a\u95f4\u5305\u542b\uff0c\u4e5f\u5c31\u662f\u533a\u95f4 [u-val,u] \u5305\u542b\u6240\u6709\u70b9\n                return true;\n    }   \n    return false;\n}\nvector<int> wyb;\nint tree[65536+10][2];//sum ans \u548c\uff1a\u6700\u5927\u524d\u7f00\u548c \nvector< pair<int,int> > opt[maxn]; //pos:val\nint top;\ninline void add_p(pair<int,int> A,pair<int,int> B,int val){\n    B.first=min(B.first,top);\n    B.second=min(B.second,top);\n    opt[B.first].push_back(make_pair(B.second,val));\n    opt[A.first-1].push_back(make_pair(B.second,-val));\n    opt[B.first].push_back(make_pair(A.second-1,-val));\n    opt[A.first-1].push_back(make_pair(A.second-1,val));\n    wyb.push_back(B.first);\n    wyb.push_back(A.first-1);\n    //\u4e8c\u7ef4\u5dee\u5206 \n}\n//\u503c\u57df\u5e73\u79fb 1 \nvector< pair<int,int> > chifan[maxn];\nbool Check(int pos,int mx,int mi,int val){//\u6700\u5927\u503c\u653e\u5728\u7b2c 1 \u884c\uff0c\u6700\u5c0f\u503c\u653e\u5728\u7b2c pos \u884c k=4 \u6781\u503c\u4e3a val \u662f\u5426\u5408\u6cd5\n    for(int u:wyb) opt[u].clear();\n    wyb.clear();\n    top=mx+2;\n    memset(tree,0,sizeof(tree));\n    for(register int i=1;i<=n;i=-~i) chifan[i].clear();\n    int r1=mx,l1=r1-val;\n    int l2=mi,r2=l2+val;\n    int last;\n    for(register int i=1;i<=n;i=-~i){\n        if(l1<=a[i][1]&&a[i][1]<=r1&&l2<=a[i][pos]&&a[i][pos]<=r2){//\u786e\u5b9a\u533a\u95f4\u7684\u884c\u586b\u7684\u6570\u5408\u6cd5\u5408\u6cd5\n            if(pos==2){\n                chifan[i].push_back(make_pair(a[i][3],a[i][4]));\n            }\n            else if(pos==3){\n                chifan[i].push_back(make_pair(a[i][2],a[i][4]));    \n            }\n            else{\n                chifan[i].push_back(make_pair(a[i][2],a[i][3]));\n            }\n        }\n        a[i][1]=a[i][1]^a[i][2];\n        a[i][2]=a[i][1]^a[i][2];\n        a[i][1]=a[i][1]^a[i][2];\n        a[i][1]=a[i][1]^a[i][3];\n        a[i][3]=a[i][1]^a[i][3];\n        a[i][1]=a[i][1]^a[i][3];\n        a[i][1]=a[i][1]^a[i][4];\n        a[i][4]=a[i][1]^a[i][4];\n        a[i][1]=a[i][1]^a[i][4];\n        if(l1<=a[i][1]&&a[i][1]<=r1&&l2<=a[i][pos]&&a[i][pos]<=r2){//\u786e\u5b9a\u533a\u95f4\u7684\u884c\u586b\u7684\u6570\u5408\u6cd5\u5408\u6cd5\n            if(pos==2){\n                chifan[i].push_back(make_pair(a[i][3],a[i][4]));\n\n            }\n            else if(pos==3){\n                chifan[i].push_back(make_pair(a[i][2],a[i][4]));\n\n            }\n            else{\n                chifan[i].push_back(make_pair(a[i][2],a[i][3]));\n            }\n        }\n        a[i][1]=a[i][1]^a[i][2];\n        a[i][2]=a[i][1]^a[i][2];\n        a[i][1]=a[i][1]^a[i][2];\n        a[i][1]=a[i][1]^a[i][3];\n        a[i][3]=a[i][1]^a[i][3];\n        a[i][1]=a[i][1]^a[i][3];\n        a[i][1]=a[i][1]^a[i][4];\n        a[i][4]=a[i][1]^a[i][4];\n        a[i][1]=a[i][1]^a[i][4];\n        if(l1<=a[i][1]&&a[i][1]<=r1&&l2<=a[i][pos]&&a[i][pos]<=r2){//\u786e\u5b9a\u533a\u95f4\u7684\u884c\u586b\u7684\u6570\u5408\u6cd5\u5408\u6cd5\n            if(pos==2){\n                chifan[i].push_back(make_pair(a[i][3],a[i][4]));\n\n            }\n            else if(pos==3){\n                chifan[i].push_back(make_pair(a[i][2],a[i][4]));\n\n            }\n            else{\n                chifan[i].push_back(make_pair(a[i][2],a[i][3]));\n            }\n        }\n        a[i][1]=a[i][1]^a[i][2];\n        a[i][2]=a[i][1]^a[i][2];\n        a[i][1]=a[i][1]^a[i][2];\n        a[i][1]=a[i][1]^a[i][3];\n        a[i][3]=a[i][1]^a[i][3];\n        a[i][1]=a[i][1]^a[i][3];\n        a[i][1]=a[i][1]^a[i][4];\n        a[i][4]=a[i][1]^a[i][4];\n        a[i][1]=a[i][1]^a[i][4];\n        if(l1<=a[i][1]&&a[i][1]<=r1&&l2<=a[i][pos]&&a[i][pos]<=r2){//\u786e\u5b9a\u533a\u95f4\u7684\u884c\u586b\u7684\u6570\u5408\u6cd5\u5408\u6cd5\n            if(pos==2){\n                chifan[i].push_back(make_pair(a[i][3],a[i][4]));    \n            }\n            else if(pos==3){\n                chifan[i].push_back(make_pair(a[i][2],a[i][4]));        \n            }\n            else{\n                chifan[i].push_back(make_pair(a[i][2],a[i][3]));\n            }\n        }\n        //\u4e0b\u9762\u5f00\u59cb\u5bb9\u65a5\u5904\u7406\u8d21\u732e \n        if(chifan[i].size()==0) return false;\n        if(chifan[i].size()==1){\n            add_p(chifan[i][0],make_pair(chifan[i][0].first+val,chifan[i][0].second+val),1);\n        }\n        else if(chifan[i].size()==2){\n            add_p(chifan[i][0],make_pair(chifan[i][0].first+val,chifan[i][0].second+val),1);\n            add_p(chifan[i][1],make_pair(chifan[i][1].first+val,chifan[i][1].second+val),1);\n            pair<int,int> l=make_pair(max(chifan[i][0].first,chifan[i][1].first),max(chifan[i][0].second,chifan[i][1].second)),r=make_pair(min(chifan[i][0].first+val,chifan[i][1].first+val),min(chifan[i][0].second+val,chifan[i][1].second+val));\n            if(l.first<=r.first&&l.second<=r.second)\n                add_p(l,r,-1);              \n            //\u5bb9\u65a5\u5904\u7406\n        }\n        else if(chifan[i].size()==3){\n            add_p(chifan[i][0],make_pair(chifan[i][0].first+val,chifan[i][0].second+val),1);\n            add_p(chifan[i][1],make_pair(chifan[i][1].first+val,chifan[i][1].second+val),1);\n            add_p(chifan[i][2],make_pair(chifan[i][2].first+val,chifan[i][2].second+val),1);\n            pair<int,int> l=make_pair(max(chifan[i][0].first,chifan[i][1].first),max(chifan[i][0].second,chifan[i][1].second)),r=make_pair(min(chifan[i][0].first+val,chifan[i][1].first+val),min(chifan[i][0].second+val,chifan[i][1].second+val));\n            if(l.first<=r.first&&l.second<=r.second)\n                add_p(l,r,-1);\n            l=make_pair(max(chifan[i][0].first,chifan[i][2].first),max(chifan[i][0].second,chifan[i][2].second)),r=make_pair(min(chifan[i][0].first+val,chifan[i][2].first+val),min(chifan[i][0].second+val,chifan[i][2].second+val));\n            if(l.first<=r.first&&l.second<=r.second)\n                add_p(l,r,-1);\n            l=make_pair(max(chifan[i][1].first,chifan[i][2].first),max(chifan[i][1].second,chifan[i][2].second)),r=make_pair(min(chifan[i][1].first+val,chifan[i][2].first+val),min(chifan[i][1].second+val,chifan[i][2].second+val));\n            if(l.first<=r.first&&l.second<=r.second)\n                add_p(l,r,-1);\n            l=make_pair(max(chifan[i][0].first,max(chifan[i][1].first,chifan[i][2].first)),max(chifan[i][0].second,max(chifan[i][1].second,chifan[i][2].second))),r=make_pair(min(chifan[i][0].first+val,min(chifan[i][1].first+val,chifan[i][2].first+val)),min(chifan[i][0].second+val,min(chifan[i][1].second+val,chifan[i][2].second+val)));\n            if(l.first<=r.first&&l.second<=r.second)\n                add_p(l,r,1);\n        }\n        else{\n            add_p(chifan[i][0],make_pair(chifan[i][0].first+val,chifan[i][0].second+val),1);\n            add_p(chifan[i][1],make_pair(chifan[i][1].first+val,chifan[i][1].second+val),1);\n            add_p(chifan[i][2],make_pair(chifan[i][2].first+val,chifan[i][2].second+val),1);\n            add_p(chifan[i][3],make_pair(chifan[i][3].first+val,chifan[i][3].second+val),1);\n            pair<int,int> l=make_pair(max(chifan[i][0].first,chifan[i][1].first),max(chifan[i][0].second,chifan[i][1].second)),r=make_pair(min(chifan[i][0].first+val,chifan[i][1].first+val),min(chifan[i][0].second+val,chifan[i][1].second+val));\n            if(l.first<=r.first&&l.second<=r.second)\n                add_p(l,r,-1);\n            l=make_pair(max(chifan[i][0].first,chifan[i][2].first),max(chifan[i][0].second,chifan[i][2].second)),r=make_pair(min(chifan[i][0].first+val,chifan[i][2].first+val),min(chifan[i][0].second+val,chifan[i][2].second+val));\n            if(l.first<=r.first&&l.second<=r.second)\n                add_p(l,r,-1);\n            l=make_pair(max(chifan[i][1].first,chifan[i][2].first),max(chifan[i][1].second,chifan[i][2].second)),r=make_pair(min(chifan[i][1].first+val,chifan[i][2].first+val),min(chifan[i][1].second+val,chifan[i][2].second+val));\n            if(l.first<=r.first&&l.second<=r.second)\n                add_p(l,r,-1);\n            l=make_pair(max(chifan[i][0].first,chifan[i][3].first),max(chifan[i][0].second,chifan[i][3].second)),r=make_pair(min(chifan[i][0].first+val,chifan[i][3].first+val),min(chifan[i][0].second+val,chifan[i][3].second+val));\n            if(l.first<=r.first&&l.second<=r.second)\n                add_p(l,r,-1);\n            l=make_pair(max(chifan[i][1].first,chifan[i][3].first),max(chifan[i][1].second,chifan[i][3].second)),r=make_pair(min(chifan[i][1].first+val,chifan[i][3].first+val),min(chifan[i][1].second+val,chifan[i][3].second+val));\n            if(l.first<=r.first&&l.second<=r.second)\n                add_p(l,r,-1);\n            l=make_pair(max(chifan[i][2].first,chifan[i][3].first),max(chifan[i][2].second,chifan[i][3].second)),r=make_pair(min(chifan[i][2].first+val,chifan[i][3].first+val),min(chifan[i][2].second+val,chifan[i][3].second+val));\n            if(l.first<=r.first&&l.second<=r.second)\n                add_p(l,r,-1);\n            l=make_pair(max(chifan[i][0].first,max(chifan[i][1].first,chifan[i][2].first)),max(chifan[i][0].second,max(chifan[i][1].second,chifan[i][2].second))),r=make_pair(min(chifan[i][0].first+val,min(chifan[i][1].first+val,chifan[i][2].first+val)),min(chifan[i][0].second+val,min(chifan[i][1].second+val,chifan[i][2].second+val)));\n            if(l.first<=r.first&&l.second<=r.second)\n                add_p(l,r,1);\n            l=make_pair(max(chifan[i][1].first,max(chifan[i][2].first,chifan[i][3].first)),max(chifan[i][1].second,max(chifan[i][2].second,chifan[i][3].second))),r=make_pair(min(chifan[i][1].first+val,min(chifan[i][2].first+val,chifan[i][3].first+val)),min(chifan[i][1].second+val,min(chifan[i][2].second+val,chifan[i][3].second+val)));\n            if(l.first<=r.first&&l.second<=r.second)\n                add_p(l,r,1);\n            l=make_pair(max(chifan[i][0].first,max(chifan[i][2].first,chifan[i][3].first)),max(chifan[i][0].second,max(chifan[i][2].second,chifan[i][3].second))),r=make_pair(min(chifan[i][0].first+val,min(chifan[i][2].first+val,chifan[i][3].first+val)),min(chifan[i][0].second+val,min(chifan[i][2].second+val,chifan[i][3].second+val)));\n            if(l.first<=r.first&&l.second<=r.second)\n                add_p(l,r,1);\n            l=make_pair(max(chifan[i][0].first,max(chifan[i][1].first,chifan[i][3].first)),max(chifan[i][0].second,max(chifan[i][1].second,chifan[i][3].second))),r=make_pair(min(chifan[i][0].first+val,min(chifan[i][1].first+val,chifan[i][3].first+val)),min(chifan[i][0].second+val,min(chifan[i][1].second+val,chifan[i][3].second+val)));\n            if(l.first<=r.first&&l.second<=r.second)\n                add_p(l,r,1);\n            l=make_pair(max(chifan[i][0].first,max(chifan[i][1].first,max(chifan[i][2].first,chifan[i][3].first))),max(chifan[i][0].second,max(chifan[i][1].second,max(chifan[i][2].second,chifan[i][3].second)))),r=make_pair(min(chifan[i][0].first+val,min(chifan[i][1].first+val,min(chifan[i][2].first+val,chifan[i][3].first+val))),min(chifan[i][0].second+val,min(chifan[i][1].second+val,min(chifan[i][2].second+val,chifan[i][3].second+val))));\n            if(l.first<=r.first&&l.second<=r.second)\n                add_p(l,r,-1);\n        }\n    }\n    for(register int i=top;i>=0;i=-(-~(-~(~(i))))){\n        if(opt[i].size()==0) continue;\n        for(pair<int,int> u:opt[i]){\n            int x=u.first+32768;\n            tree[x][0]+=u.second;\n            tree[x][1]+=u.second;\n            x>>=1;\n            while(x!=0){\n                tree[x][0]=tree[x<<1][0]+tree[x<<1|1][0];\n                tree[x][1]=min(tree[x<<1][1],tree[x<<1][0]+tree[x<<1|1][1]);\n                x>>=1;\n            }\n        }\n        if(tree[1][0]-tree[1][1]>=n) return true;\n    }\n    return false;\n}\nvoid work(){\n    read(n);\n    int mx=0,mi=maxv;\n    for(register int i=1;i<=k;++i){\n        for(register int j=1;j<=n;++j){\n            read(a[j][i]);\n            mx=max(mx,a[j][i]);\n            mi=min(mi,a[j][i]);\n        }\n    }\n    if(k==1){\n        write(ans(1,n));\n        putchar('\\n');\n    }\n    else if(k==2){\n        for(register int i=1;i<=n;++i){\n            if(a[i][1]<a[i][2]) swap(a[i][1],a[i][2]);\n        }\n        write(max(ans(1,n),ans(2,n)));\n        putchar('\\n');\n    }\n    else if(k==3){\n        int l=-1,r=(mx-mi);\n        while(l+1<r){\n            int mid=(l+r)>>1;\n            if(check(2,mx,mi,mid)==true||check(3,mx,mi,mid)==true){\n                r=mid;\n            }\n            else{\n                l=mid;\n            }\n        }\n        write(r);\n        putchar('\\n');\n    }\n    else{\n        int l=-1,r=(mx-mi);\n        while(l+1<r){\n            int mid=(l+r)>>1;\n            if(Check(4,mx,mi,mid)==true||Check(3,mx,mi,mid)==true||Check(2,mx,mi,mid)==true){\n                r=mid;\n            }\n            else{\n                l=mid;\n            }\n        }\n        write(r);\n        putchar('\\n');\n    }\n    return ;\n}\nsigned main(){\n    int t;\n    read(t);\n    read(k);\n    while(t--) work();\n}\n```\n",
        "postTime": 1683937821,
        "uid": 520748,
        "name": "_ChiFAN_",
        "ccfLevel": 4,
        "title": "P9120 \u9898\u89e3"
    },
    {
        "content": "## P9120\n\n### \u5927\u610f\n\n\u7ed9\u5b9a $k \\times n$ \u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u4f60\u53ef\u4ee5\u4efb\u610f\u6b21\u8ba9\u4efb\u610f\u4e00\u5217\u5faa\u73af\u4f4d\u79fb\uff0c\u6c42\u6700\u540e\u6bcf\u884c\u6781\u5dee\u7684\u6700\u5927\u503c\u6700\u5c0f\u662f\u591a\u5c11\u3002\n\n### \u601d\u8def\n\n$k=1$ \u65f6\uff0c\u65e0\u6cd5\u66f4\u6539\u6570\u7ec4\uff0c\u8f93\u51fa\u6700\u5927\u503c\u51cf\u6700\u5c0f\u503c\u3002\n\n\u6700\u5927\u503c\u6700\u5c0f\uff0c\u4e8c\u5206\u6700\u5927\u7684\u6781\u5dee\uff0c\u5e76\u628a\u6574\u4e2a\u6570\u7ec4\u7684\u6700\u5927\u503c\u6362\u5230\u7b2c\u4e00\u884c\u3002  \n\u8bb0\u6574\u4e2a\u6570\u7ec4\u7684\u6700\u5927\u503c\u4e3a $X$\uff0c\u6700\u5c0f\u503c\u4e3a $Y$\uff0c\u4e8c\u5206\u7684\u503c\u4e3a $C$\uff0c\u503c\u57df\u4e3a $V$\u3002\n\n$k=2$ \u65f6\uff0c\u6700\u5c0f\u503c\u4e00\u5b9a\u5728\u7b2c\u4e8c\u884c\uff08\u5728\u7b2c\u4e00\u884c\u65f6\u4e0d\u5f71\u54cd\uff09\uff0c\u7b2c\u4e00\u884c\u7684\u53d6\u503c\u8303\u56f4\u662f $[X-C,X]$\uff0c\u7b2c\u4e8c\u884c\u7684\u53d6\u503c\u8303\u56f4\u662f $[Y,Y+C]$\u3002\n\n$k=3$ \u65f6\uff0c\u679a\u4e3e\u6700\u5c0f\u503c\u5728\u54ea\u4e00\u884c\uff0c\u540c\u6837\u53ef\u4ee5\u786e\u5b9a\u4e24\u884c\u7684\u53d6\u503c\u8303\u56f4\u3002  \n\u679a\u4e3e\u6bcf\u4e00\u5217\u5982\u4f55\u5faa\u73af\u4f4d\u79fb\uff0c\u627e\u51fa\u5bf9\u4e8e\u5269\u4e0b\u90a3\u4e00\u884c\uff0c\u6bcf\u4e00\u5217\u53ef\u4ee5\u53d6\u54ea\u4e9b\u503c\u3002  \n\u95ee\u9898\u53d8\u4e3a\u662f\u5426\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $C$ \u7684\u533a\u95f4\u4f7f\u5f97\u6bcf\u4e00\u5217\u6709\u81f3\u5c11\u4e00\u79cd\u53d6\u503c\u5728\u91cc\u9762\u3002  \n\u987a\u5e8f\u679a\u4e3e\u6700\u9760\u53f3\u5728\u91cc\u9762\u7684\u70b9\uff0c\u6ce8\u610f\u4e0d\u8981\u5199\u6210 $\\mathcal{O}(V)$\u3002\n\n$k=4$ \u65f6\uff0c\u7c7b\u6bd4\u4e0a\u9762\u505a\u6cd5\uff0c\u679a\u4e3e\u6700\u5c0f\u503c\u5728\u54ea\u4e00\u884c\uff0c\u6bcf\u4e00\u5217 $i$ \u8bb0\u5f55\u82e5\u5e72\u4e2a\u6570\u5bf9 $(x,y)$ \u8868\u793a\u7b2c\u4e00\u884c\uff08\u672a\u786e\u5b9a\u53d6\u503c\u8303\u56f4\u7684\u884c\uff0c\u4e0b\u540c\uff09\u548c\u7b2c\u4e8c\u884c\u5206\u522b\u53ef\u4ee5\u53d6\u7684\u503c\u3002  \n\u95ee\u9898\u53d8\u4e3a\u662f\u5426\u6709\u4e00\u4e2a\u8fb9\u957f\u4e3a $C$ \u7684\u6b63\u65b9\u5f62\u8986\u76d6\u6bcf\u4e00\u5217\u7684\u70b9\uff08\u6570\u5bf9\uff09\u81f3\u5c11\u4e00\u6b21\u3002  \n\u518d\u8fdb\u884c\u4e00\u4e0b\u8f6c\u5316\uff0c\u628a\u6bcf\u4e2a\u6570\u5bf9\u53d8\u4e3a\u4ee5\u5176\u4e3a\u5de6\u4e0b\u89d2\u8fb9\u957f\u4e3a $C$ \u989c\u8272\u4e3a $i$ \u7684\u6b63\u65b9\u5f62\uff0c\u662f\u5426\u6709\u4e00\u4e2a\u70b9\u540c\u65f6\u88ab\u6240\u6709\u989c\u8272\u7684\u6b63\u65b9\u5f62\u8986\u76d6\uff08\u8be5\u70b9\u76f8\u5f53\u4e8e\u539f\u95ee\u9898\u6b63\u65b9\u5f62\u7684\u53f3\u4e0a\u89d2\uff09\u3002\n\n![\u5982\u56fe\uff08\u56fe\u4e0d\u4f1a\u6302\u4e86\u5427\uff09](https://cdn.luogu.com.cn/upload/image_hosting/nyhm4p3c.png)\n\n\u53ea\u6709 $m$ \u79cd\u4e0d\u540c\u7684\u5faa\u73af\u4f4d\u79fb\uff0c\u5219\u6bcf\u5217\uff08\u6bcf\u79cd\u989c\u8272\uff09\u6700\u591a $m$ \u4e2a\u6b63\u65b9\u5f62\u3002  \n\u5148\u901a\u8fc7\u5bb9\u65a5\u628a\u6240\u6709\u76f8\u540c\u989c\u8272\u7684\u6b63\u65b9\u5f62\u7684\u5e76\u7528\u82e5\u5e72\u4e2a\u77e9\u5f62\u7684\u548c\u5dee\u8868\u793a\uff0c\u5c06\u540c\u989c\u8272\u7684\u5e76\u91cc\u9762\u70b9\u503c\u90fd\u52a0 $1$\uff0c\u6c42\u662f\u5426\u6709\u4f4d\u7f6e\u7b49\u4e8e $n$\u3002  \n\u7528\u626b\u63cf\u7ebf\u7ef4\u62a4\u8fd9\u4e2a\u5e73\u9762\uff08\u540e\u6709\u8be6\u7ec6\u505a\u6cd5\uff09\uff0c\u6bcf\u6b21\u66f4\u6539\u65f6\u770b\u6700\u5927\u503c\u662f\u5426\u4e3a $n$\u3002\n\n\u6b64\u505a\u6cd5\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(2^kn\\log n\\log V) $\uff0c\u9700\u8981\u975e\u5e38\u4f18\u79c0\u7684\u5e38\u6570\uff0c\u6211\u4e71\u6765\uff0c\u7406\u8bba\u80fd\u8fc7\u3002\n\n\u5728\u626b\u63cf\u7ebf\u5bf9\u4e8e\u4e00\u884c\u4fee\u6539\u65f6\u53ef\u4ee5\u5dee\u5206\u628a\u533a\u95f4\u6539\u62c6\u6210\u524d\u7f00\u6539\uff0c\u4fdd\u8bc1\u76f8\u540c\u7684\u53ea\u7528\u6570\u636e\u7ed3\u6784\u6539\u4e00\u6b21\uff0c\u8fd9\u6837\u5bb9\u65a5\u5f97\u5230\u7684 $2^k$ \u4e2a\u77e9\u5f62\u4f1a\u53d8\u4e3a $\\mathcal{O}(k)$ \u4e2a\u4e0d\u540c\u7684\u524d\u7f00\u6539\uff0c\u540c\u65f6\u51cf\u5c11\u7ebf\u6bb5\u6811\u5e38\u6570\u3002\n\n\u82e5\u662f\u8fd8\u8fc7\u4e0d\u53bb\uff0c\u53d1\u73b0\u6b63\u65b9\u5f62\u7684\u6570\u91cf\u548c $C$ \u6b63\u76f8\u5173\uff0c\u5373 $C$ \u8d8a\u5927\u6bcf\u6b21\u5224\u65ad\u65f6\u95f4\u8d8a\u591a\uff0c\u5c1d\u8bd5\u8c03\u6574\u4e8c\u5206\uff08\u6bd4\u5982\u524d\u51e0\u6b21\u6bcf\u6b21\u8df3 $\\frac34$ \u5904\uff09\u3002\n\n------------\n\n#### \u626b\u63cf\u7ebf\n\n$N$ \u6b21\u5c06\u4e00\u4e2a\u77e9\u5f62\u5185\u6240\u6709\u6574\u70b9\u52a0 $w_i$\uff0c\u5e76\u6c42\u6700\u540e\u5168\u5c40\u6700\u5927\u503c\u662f\u5426\u7b49\u4e8e $n$\u3002\n\n\u679a\u4e3e\u77e9\u5f62**\u8fb9\u7f18**\u7684 $y$ \u5750\u6807\uff0c\u6bcf\u4e2a\u77e9\u5f62\u770b\u6210\u5728\u4e0a\u8fb9\u754c\u88ab\u626b\u5230\u524d\u533a\u95f4\u52a0 $w_i$\uff0c\u5728\u4e0b\u8fb9\u754c\u88ab\u626b\u5230\u540e\u533a\u95f4\u51cf $w_i$\u3002  \n\u4e00\u6574\u884c\u6240\u6709\u533a\u95f4\u52a0\u7b97\u5b8c\u540e\u6c42\u5168\u5c40\u6700\u5927\u503c\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n// #define int long longs\n#define f(i,j,k) for(register int i=j;i<=k;++i)\n#define g(i,j,k) for(register int i=j;i>=k;--i)\nint n,m,s,l;\nconst int N=3e5+7;\nint a[N][5],b[N],c[N],d[N],u[N],v[N];\nint o,p,q,r,tot,cnt,all,ex,xx,yy,zz;\nvector<int>xw[N];\nstruct Dusk{\n\tstruct xds{\n\t\tint l,r,c,t;\n\t}a[N];\n\tvoid bt(int id,int l,int r){\n\t\ta[id]=(xds){l,r,0,0};\n\t\tif(l<r)bt(id<<1,l,(l+r)/2),bt(id<<1|1,(l+r)/2+1,r);\n\t}\n\tvoid add(int id,const register int&r,const register int&c){\n\t\tif(a[id].r<=r)return a[id].c+=c,a[id].t+=c,void();\n\t\tif(a[id<<1].r<r)add(id<<1|1,r,c);add(id<<1,r,c);\n\t\ta[id].c=max(a[id<<1].c,a[id<<1|1].c)+a[id].t;\n\t}\n}T;\nstruct Flametail{\n\tint a,b,c,d;\n\tinline bool operator<(const Flametail&y)const{return c==y.c?d<y.d:c<y.c;}\n\tinline Flametail operator*(const Flametail&y)const{return (Flametail){max(a,y.a),min(b,y.b),max(c,y.c),min(d,y.d)};}\n}ls;\nvector<Flametail>e[N],f[N];\nconst Flametail ____=(Flametail){1,N,1,N};\nvoid ycl(){cin>>m;T.bt(1,1,6e4);}\nint In(int l,int r,int x){return l<=x&&x<=r;}\nvoid rol(int i){f(j,1,m)a[i][j-1]=a[i][j];a[i][m]=a[i][0];}\nvoid su(int*a,int&n){sort(a+1,a+n+1);n=unique(a+1,a+n+1)-a-1;}\nvoid cg(int x,int w,int&ans){if(v[x])--ans;v[x]+=w;if(v[x])++ans;}\nvoid doing(){\n\tcin>>n;\n\tf(j,1,m)f(i,1,n)scanf(\"%d\",&a[i][j]);\n\ts=l=a[1][1];\n\tf(i,1,n)f(j,1,m)s=max(s,a[i][j]),l=min(l,a[i][j]);\n\tif(m==1)return printf(\"%d\\n\",s-l),void();/////////////////////////k=1//////////\n\tf(i,1,n){\n\t\tf(j,1,m)if(a[i][j]==s)p=1;\n\t\tif(p){\n\t\t\tf(j,1,m)swap(a[1][j],a[i][j]);\n\t\t\tbreak;\n\t\t}\n\t}\n\tf(j,1,m)if(a[1][j]==s)p=j;\n\tf(_,2,p)rol(1);\n\tregister int L=0,R=s-l,C;\n\tif(m==4){\n\t\tall=0;\n\t\tf(i,1,n)f(j,1,m)u[++all]=a[i][j];\n\t\tsu(u,all);\n\t}\n\twhile(L<R){\n\t\tC=(L+R)>>1;p=0;\n\t\tif(L+200<R)C=L+(R-L)/4*3;\n\t\tif(m==2){/////////////////////////////////////////////////////k=2//////////\n\t\t\tp=1;q=0;\n\t\t\tf(i,1,n){\n\t\t\t\tf(_,1,m){\n\t\t\t\t\tq|=(In(s-C,s,a[i][1])&&In(l,l+C,a[i][2]));\n\t\t\t\t\trol(i);\n\t\t\t\t}\n\t\t\t\tp&=q;q=0;\n\t\t\t}\n\t\t}else if(m==3){///////////////////////////////////////////////k=3//////////\n\t\t\tf(lp,2,3){\n\t\t\t\tq=tot=0;cnt=1;\n\t\t\t\tf(i,1,n)f(_,1,m){\n\t\t\t\t\tif(In(s-C,s,a[i][1])&&In(l,l+C,a[i][lp]))xw[b[++tot]=a[i][5-lp]].push_back(i);\n\t\t\t\t\trol(i);\n\t\t\t\t}\n\t\t\t\tsu(b,tot);\n\t\t\t\tf(i,1,tot){\n\t\t\t\t\tfor(int x:xw[b[i]])cg(x,1,q);\n\t\t\t\t\tfor(;b[cnt]+C<b[i];++cnt)for(int x:xw[b[cnt]])cg(x,-1,q);\n\t\t\t\t\tif(q==n)p=1;\n\t\t\t\t}\n\t\t\t\tf(i,cnt,tot)for(int x:xw[b[i]])cg(x,-1,q);\n\t\t\t\tf(i,1,n)f(j,1,m)xw[a[i][j]].clear();\n\t\t\t}\n\t\t}else{////////////////////////////////////////////////////////k=4//////////\n\t\t\tf(lp,2,4)if(!p){\n\t\t\t\ttot=0;\n\t\t\t\tf(i,1,n)e[i].clear();\n\t\t\t\tf(i,1,n)f(_,1,m){\n\t\t\t\t\tif(In(s-C,s,a[i][1])&&In(l,l+C,a[i][lp])){\n\t\t\t\t\t\tif(lp==2)xx=a[i][3],yy=a[i][4];\n\t\t\t\t\t\tif(lp==3)xx=a[i][2],yy=a[i][4];\n\t\t\t\t\t\tif(lp==4)xx=a[i][2],yy=a[i][3];\n\t\t\t\t\t\te[i].push_back((Flametail){xx,xx+C+1,yy,yy+C+1});\n\t\t\t\t\t}\n\t\t\t\t\trol(i);\n\t\t\t\t}\n\t\t\t\tf(i,1,n){\n\t\t\t\t\tex=e[i].size();cnt=(1<<ex)-1; \n\t\t\t\t\tf(S,1,cnt){\n\t\t\t\t\t\tls=____;zz=1;\n\t\t\t\t\t\tf(w,0,ex-1)if((S>>w)&1)ls=ls*e[i][w],zz=-zz;\n\t\t\t\t\t\tif(ls.a>=ls.b||ls.c>=ls.d)continue;\n\t\t\t\t\t\tf[ls.c].push_back((Flametail){ls.a,ls.b,-zz,0});\n\t\t\t\t\t\tf[ls.d].push_back((Flametail){ls.a,ls.b,zz,0});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tf(i,1,all)c[i]=u[i],c[i+all]=u[i]+C+1;\n\t\t\t\tinplace_merge(c+1,c+all+1,c+(tot=all*2)+1);o=0;\n\t\t\t\tf(i,1,tot)if(f[q=c[i]].size()){\n\t\t\t\t\tfor(auto w:f[q])d[b[++o]=w.a]-=w.c,d[b[++o]=w.b]+=w.c;\n\t\t\t\t\tf(i,1,o)if(d[r=b[i]])T.add(1,r,d[r]),d[r]=0;\n\t\t\t\t\tif(T.a[1].c==n)p=1;f[q].clear();o=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(p)R=C;\n\t\telse L=C+1;\n\t}\n\tprintf(\"%d\\n\",R);\n}\nsigned main(){\n\tint t;\n\tcin>>t;\n\tycl();\n\twhile(t--)doing();\n\treturn 0; \n}\n```",
        "postTime": 1679300173,
        "uid": 218376,
        "name": "IloveSurtr",
        "ccfLevel": 7,
        "title": "P9120"
    },
    {
        "content": "$k=1$ \u4f60\u662f\u4f1a\u7684\u3002\r\n\r\n$k=2$ \u6709\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u8d2a\u5fc3\uff0c\u7b54\u6848\u7684\u4e0a\u754c\u662f\u5168\u5c40\u6700\u5927\u503c\u51cf\u53bb\u6700\u5c0f\u503c\uff0c\u6211\u4eec\u4e0d\u60f3\u8981\u8fbe\u5230\u8fd9\u4e2a\u4e0a\u754c\uff0c\u6240\u4ee5\u5c3d\u53ef\u80fd\u7684\u5c06\u5927\u7684\u653e\u5230\u4e00\u6392\uff0c\u5c0f\u7684\u653e\u5230\u4e00\u6392\u3002\r\n\r\n\u8003\u8651 $k=3$ \u600e\u4e48\u505a\u3002\u7c7b\u4f3c\u4e0a\u9762\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u94a6\u5b9a\u6700\u5927\u503c\u653e\u5230\u7b2c\u4e00\u884c\uff0c\u6700\u5c0f\u503c\u653e\u5230\u7b2c\u4e8c\u884c\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u679a\u4e3e\u6781\u5dee\uff0c\u5c31\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u5217\uff0c\u5224\u65ad\u51fa\u6709\u51e0\u4e2a\u6570\u88ab\u632a\u5230\u7b2c\u4e09\u884c\u65f6\u662f\u5408\u6cd5\u7684\u3002\r\n\r\n\u8bb0 $x$ \u8868\u793a\u5f53\u524d\u679a\u4e3e\u5230\u7684\u6781\u5dee\uff0c$f_i$ \u8868\u793a\u5728\u7b2c\u4e09\u884c\u4e2d\uff0c\u6570\u503c\u4e3a $[i,i+x]$ \u7684\u6570\u7684\u4e2a\u6570\uff0c\u6211\u4eec\u5224\u65ad\u5408\u6cd5\u7684\u6761\u4ef6\u5373\u4e3a\u662f\u5426\u5b58\u5728\u4e00\u4e2a $f_i = n$\u3002\u8003\u8651\u5dee\u5206\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u53d6\u503c $y$\uff0c\u5b83\u7684\u8d21\u732e\u5230\u7684 $f_i$ \u5728 $[y-x,y]$ \u8fd9\u4e2a\u8303\u56f4\u5185\uff0c \u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4 $f_i$ \u5373\u53ef\u3002\u5c06\u679a\u4e3e\u6781\u5dee\u6539\u4e3a\u4e8c\u5206\u6781\u5dee\u5373\u53ef\u505a\u5230 $\\mathcal{O}(n \\log^2 A)$ \u7684\u590d\u6742\u5ea6\uff0c\u5176\u4e2d $A$ \u662f\u503c\u57df\u3002\r\n\r\n\u6ce8\u610f\u5230\u540c\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u4e0d\u540c\u53d6\u503c\u662f\u4e0d\u53ef\u4ee5\u8d21\u732e\u5230\u76f8\u540c\u7684\u4f4d\u7f6e\u4e0a\u7684\uff0c\u5199\u7684\u65f6\u5019\u8981\u6ce8\u610f\u3002\u8fd8\u6709\u6700\u5c0f\u503c\u5206\u522b\u653e\u7b2c\u4e8c\u884c\u4ee5\u53ca\u7b2c\u4e09\u884c\u7684\u7b54\u6848\u4e5f\u662f\u4e0d\u540c\u7684\uff0c\u8981\u90fd\u679a\u4e3e\u4e00\u904d\u3002\r\n\r\n\u4e0a\u8ff0\u505a\u6cd5\u7684\u63a8\u5e7f\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u5bf9\u4e8e $k=4$\uff0c\u65e0\u975e\u5c31\u662f\u5c06\u539f\u672c\u4e00\u7ef4\u7684\u9650\u5236\u53d8\u6210\u4e86\u4e24\u7ef4\uff0c\u5c06\u4e00\u7ef4\u7684\u5dee\u5206\u6362\u6210\u4e86\u77e9\u5f62\u4ea4\u72b6\u7269\u3002\r\n\r\n\u975e\u5e38\u76f4\u89c2\u7684\u60f3\u6cd5\u5c31\u662f\u76f4\u63a5\u5bf9\u4e8e\u8fd9\u4e9b\u77e9\u5f62\u505a\u4e00\u4e2a\u5bb9\u65a5\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u77e9\u5f62\u96c6\u5408\u7684\u5b50\u96c6\uff0c\u5982\u679c\u4ed6\u7684\u5927\u5c0f\u662f\u5947\u6570\uff0c\u90a3\u4e48\u8d21\u732e\u662f\u6b63\u7684\uff0c\u53cd\u4e4b\u5219\u662f\u8d1f\u7684\uff0c\u8fdb\u884c\u4e00\u4e2a\u533a\u95f4\u52a0\u5373\u53ef\u3002\u4f46\u662f\u8fd9\u4e2a\u505a\u6cd5\u4e0d\u592a\u6b63\u786e\uff0c\u6211\u53ea\u4f1a\u590d\u6742\u5ea6 $\\mathcal{O}(k^2 2^k n\\log^2 A)$ \u7684\u5199\u6cd5\uff0c\u611f\u89c9\u4e0d\u592a\u80fd\u8fc7\u3002\r\n\r\n\u8f6c\u6362\u4e00\u4e0b\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u6bcf\u6b21\u5bf9\u4e8e\u4e00\u6761\u7ebf\u6bb5\uff0c\u627e\u5230\u5b83\u6240\u8d21\u732e\u5230\u7684\u533a\u95f4\uff0c\u4e5f\u5c31\u662f\u627e\u5230\u8fd9\u4e2a\u8fd9\u6761\u7ebf\u6bb5\u5c5e\u4e8e\u7684\u77e9\u5f62\u7684\u9ad8\uff0c\u7136\u540e\u76f4\u63a5\u626b\u63cf\u7ebf\u5c31\u53ef\u4ee5\u4e86\u3002\r\n\r\n\u590d\u6742\u5ea6\u76f4\u63a5\u6d88\u53bb\u4e86\u4e00\u4e2a\u5bb9\u65a5\u7684\u590d\u6742\u5ea6\u548c\u4e00\u4e2a\u4e8c\u7ef4 BIT/\u7ebf\u6bb5\u6811 \u7684\u590d\u6742\u5ea6\uff0c\u975e\u5e38\u4f18\u79c0\uff0c\u590d\u6742\u5ea6 $\\mathcal{O}(nk\\log A)$\u3002\r\n\r\n[code](https://www.luogu.com.cn/paste/bcocitlm)\r\n\r\n\u5199\u4e86\u8fd1 8 \u4e2a k\u3002\u5b9e\u6d4b\u8dd1\u7684\u5e76\u4e0d\u7b97\u5feb\uff0c\u7528\u4e86 4 \u79d2\u591a\u3002",
        "postTime": 1679292039,
        "uid": 428089,
        "name": "HMZHMZHMZ",
        "ccfLevel": 7,
        "title": "P9120"
    }
]