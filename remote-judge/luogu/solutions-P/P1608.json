[
    {
        "content": "\nupdate 2022.2.17 \u56fe\u70b8\u4e86\n\nupdate 2022.8.20 \u4fee\u6539\u4e86\u4e00\u4e9b\u9519\u8bef\n## step 0 \u4e00\u4e9b\u5efa\u8bae\n\u505a\u6b64\u9898\u524d\u5efa\u8bae\u5148\u53bb\u505a [P1144 \u6700\u77ed\u8def\u8ba1\u6570](https://www.luogu.com.cn/problem/P1144) \u5e76\u4e14\u5efa\u8bae\u4f7f\u7528 Dijkstra \u7b97\u6cd5\u53bb\u5199\uff0c\u539f\u56e0\u5728 [\u8fd9\u4e2a\u5e16\u5b50](https://www.luogu.com.cn/discuss/407511) \u548c [\u8fd9\u4e2a\u5e16\u5b50](https://www.luogu.com.cn/discuss/407546) \u4e5f\u611f\u8c22\u8fd9\u4f4d\u5927\u4f6c\u7684\u4ed8\u51fa\u3002 ~~\u4e0d\u7136\u6211\u5c31\u8981\u62ffSPFA\u5199\u4e86\u3002~~\n## step 1 \u5751\n\u8fd9\u9053\u9898\u6709\u4e2a\u5751\uff0c\u90a3\u5c31\u662f\u5728\u8fd9\u53e5\u8bdd\u4e0a ```\n\u4e24\u4e2a\u4e0d\u540c\u7684\u6700\u77ed\u8def\u65b9\u6848\u8981\u6c42\uff1a\u8def\u5f84\u957f\u5ea6\u76f8\u540c\uff08\u5747\u4e3a\u6700\u77ed\u8def\u957f\u5ea6\uff09\u4e14\u81f3\u5c11\u6709\u4e00\u6761\u8fb9\u4e0d\u91cd\u5408\u3002```\n\n\u6211\u8ba4\u4e3a\u5e94\u8be5\u662f\u6240\u751f\u6210\u7684\u6700\u77ed\u8def\u5e8f\u5217\u4e0d\u5f97\u6709\u91cd\uff0c\u91cd\u590d\u7684\u4e0d\u52a0\u5165\u8ba1\u6570\uff0c\u8fd9\u91cc\u5c31\u8981\u6c42\u6211\u4eec\u53bb\u91cd\u8fb9\u4e86\uff0c\u4e0e [P1144 \u6700\u77ed\u8def\u8ba1\u6570](https://www.luogu.com.cn/problem/P1144) \u4e0d\u540c\uff0cP1144 \u662f\u5141\u8bb8\u5e8f\u5217\u6709\u91cd\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4e00\u7ec4\u6570\u636e\u3002\n\n\u8f93\u5165\uff1a\n\n```\n3 4\n1 2 2\n1 2 2\n2 3 1\n1 3 3\n```\n\u6240\u751f\u6210\u7684\u6700\u77ed\u8def\u5e8f\u5217\u4e3a\uff1a\n\n```\n1 2 3 (\u91cd\u8fb9\u4e2d\u7b2c\u4e00\u6761)\n1 2 3 (\u91cd\u8fb9\u4e2d\u7b2c\u4e8c\u6761)\n1 3\n```\n\u53ef\u4ee5\u770b\u5230\u5982\u679c\u53ea\u6309\u5b57\u9762\u7406\u89e3\u7684\u8bdd\u90a3\u7b54\u6848\u5e94\u8be5\u662f\uff1a3 3\uff0c\u56e0\u4e3a 1-2 \u8fd9\u6761\u8fb9\u6709\u4e24\u6761\u3002\n\n\u5982\u679c\u662f\u5e8f\u5217\u6307\u4e0d\u91cd\u624d\u4f1a\u662f\u6b63\u786e\u7b54\u6848\uff1a3 2\u3002\n## step 2 \u8ba1\u6570\u64cd\u4f5c\n\u6211\u4eec\u53ea\u9700\u8981\u5728\u8dd1 Dijkstra \u7b97\u6cd5\u662f\u52a0\u5165\u8ba1\u6570\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5982\u679c $dist[y] > dist[x]+e $ \u90a3\u4e48\u5c31\u8bf4\u660e\u627e\u5230\u4e86\u4f18\u7684\u8def\u5f84\uff0c\u5c06 $y$ \u7684\u8def\u5f84\u8ba1\u6570\u7528 $x$ \u7684\u8def\u5f84\u8ba1\u6570\u8986\u76d6\uff0c\u5e76\u5c06 $y$ \u7684 $dist$ \u503c\u66f4\u65b0\uff0c\u5373\u5b9e\u65bd  ```dist[y] = dist[x]+e``` \u548c  ```ans[y]=ans[x]``` \u64cd\u4f5c\u3002\n\n\u5982\u679c $dist[y] = dist[x]+e $ \u90a3\u4e48 $y$ \u8282\u70b9\u5c31\u52a0\u4e0a $x$ \u8282\u70b9\u7684\u8ba1\u6570 ,\u5373\u5b9e\u65bd ```ans[y]+=ans[x]``` \u64cd\u4f5c\u3002\n\n\u6b64\u5904\u7684 $y$ \u662f $x$ \u6240\u8fde\u8282\u70b9\uff0c$e$ \u4e3a\u8fde\u63a5 $x$ \u4e0e $y$ \u8fd9\u6761\u8fb9\u7684\u6743\u503c\u3002\n\n## step 3.1-1 \u8fed\u4ee3\u5668\u53bb\u91cd\n\n\u9009\u62e9\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e00\u6bb5\uff0c\u4f46\u4e2a\u4eba\u8ba4\u4e3a\u6709\u5173\u8fed\u4ee3\u5668\u7684\u77e5\u8bc6\u5927\u5bb6\u53ef\u4ee5\u53bb\u770b\u770b\uff0c\u6bd5\u7adf\u4ee5\u540e\u8bf4\u4e0d\u5b9a\u8981\u7528\u5230\uff1f\n\n\u6709\u5173\u4e8e\u8fed\u4ee3\u5668\uff08iterator\uff09\uff0c\u8fd9\u662f\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u6307\u9488\u7684\u4e1c\u897f\uff0c\u652f\u6301\u81ea\u589e\uff08```++```\uff09\u548c\u81ea\u51cf\uff08```--```\uff09\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\uff0c[\u6d1b\u8c37\u65e5\u62a5](https://www.luogu.com.cn/blog/poi/cpp-iterator)\u91cc\u6709\u5173\u4e8e\u8fd9\u4e2a\u7684\u4ecb\u7ecd\u3002\n\n\u7531\u4e8e\u849f\u84bb\u4e0d\u4f1a\u5199\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u6240\u4ee5\u76f4\u63a5\u7528\u4e86 STL \u81ea\u5e26\u7684 ```pair``` \u7c7b\u578b\uff0c\u5b83\u4f1a\u5148\u4ee5\u7b2c\u4e00\u5173\u952e\u5b57\u8fdb\u884c\u6bd4\u8f83\uff0c\u518d\u4ee5\u7b2c\u4e8c\u5173\u952e\u5b57\u8fdb\u884c\u6bd4\u8f83\uff0c\u6211\u4eec\u7528\u7b2c\u4e00\u5173\u952e\u5b57\u5b58\u8fb9\u7684\u53e6\u4e00\u7aef\u70b9\uff0c\u7528\u7b2c\u4e8c\u5173\u952e\u5b57\u5b58\u8fd9\u6761\u8fb9\u7684\u6743\u503c\uff0c\u518d\u4f7f\u7528 ```sort()``` \u51fd\u6570\u8fdb\u884c\u6392\u5e8f\uff0c\u56e0\u4e3a ```sort()``` \u9ed8\u8ba4\u4ece\u5c0f\u5230\u5927\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u91cd\u8fb9\u90fd\u6328\u5728\u4e00\u8d77\uff0c\u5e76\u4e14\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u67d0\u4e2a\u8282\u70b9\u6240\u4ee3\u8868\u7684\u8fb9\u4e00\u5b9a\u662f\u6240\u6709\u5176\u4ee3\u8868\u7684\u8fb9\u4e2d\u6743\u503c\u6700\u5c0f\u7684\uff0c\u8fd9\u6837\u6211\u4eec\u4fbf\u53ef\u4ee5\u6267\u884c\u5220\u9664\u64cd\u4f5c\uff0c\u5c06\u5728\u5176\u540e\u5e76\u4e0e\u5176\u7f16\u53f7\u76f8\u540c\u7684\u8fb9\u5168\u90e8\u5220\u9664\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\nfor(int i=1;i<=n;i++){\n\t\tsort(a[i].begin(),a[i].end());\n\t\tls=INT_MAX;\n\t\tfor(basic_string <pair<int,int> >::iterator it=a[i].begin();it!=a[i].end();++it){\n\t\t\tls3=*it;\n\t\t\tif(ls3.first!=ls)ls=ls3.first;\n\t\t\telse {//\u82e5\u662f\u76f8\u540c\u5219\u5220\u9664\uff0c\u5e76\u5c06\u8fed\u4ee3\u5668--\n\t\t\t\ta[i].erase(it);\n\t\t\t\t--it;\n\t\t\t}\n\t\t}\n\t}\n```\n\n\n## step 3.1-2 Code\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4ee3\u7801\u5b9e\u73b0\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/priority_queue.hpp>\n#define ll  long long\n#define ull unsigned long long\nusing namespace std;\nusing namespace __gnu_pbds;\ninline ll read(){\n   ll s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9')s=(s<<1)+(s<<3)+(ch^48),ch=getchar();\n   return s*w;\n}\ninline void print(ll ch){\n\tif (ch<0)ch=-ch,putchar('-');\n\tif (ch>9)print(ch/10);\n\tputchar(ch%10+'0');\n}\nint n,m,s;\nint dist[2010],ans[2010];\nbool v[2010];\n__gnu_pbds::priority_queue<pair<int,int>,greater<pair<int,int> >, pairing_heap_tag > w;//pbds \u4e2d\u7684\u5c0f\u6839\u5806 \nbasic_string <pair<int,int> > a[2010];//\u4e00\u4e2a\u548c vector \u5dee\u4e0d\u591a\u7684\u5bb9\u5668\nvoid dij(){//\u5806\u4f18\u5316 Dijkstra\n\tpair<int,int> x1;\n\tint x,y,e;\n\twhile(!w.empty()){\n\t\tx1=w.top();\n\t\tx=x1.second;\n\t\tw.pop();\n        if(v[x])continue;\n\t\tv[x]=1;\n\t\tfor(int i=0;i<a[x].size();i++){\n\t\t\ty=a[x][i].first;\n\t\t\te=a[x][i].second;\n\t\t\tif(dist[y]>dist[x]+e){\n\t\t\t\tdist[y]=dist[x]+e;\n\t\t\t\tans[y]=ans[x];//\u8986\u76d6 \n\t\t\t\tif(!v[y]){\n\t\t\t\t\tw.push(make_pair(dist[y],y));\t\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(dist[y]==dist[x]+e)ans[y]+=ans[x];//\u7d2f\u52a0 \n\t\t}\n\t}\n}\nint main()\n{\n\tn=read(),m=read(),s=1;\n\tint ls,ls1,ls2;\n\tpair<int,int> ls3;\n\tfor(int i=0;i<m;i++){\n\t\tls=read(),ls1=read(),ls2=read();\n\t\ta[ls]+=make_pair(ls1,ls2);//basic_string\u4e13\u5c5e\u6dfb\u52a0\u5143\u7d20\uff0c\u7406\u89e3\u6210 push_back() \u5373\u53ef \n\t}\n\tfor(int i=1;i<=n;i++){//\u8fd9\u91cc\u9700\u8981\u719f\u6089STL\u4e2d\u8fed\u4ee3\u5668\u7684\u4f7f\u7528 \n\t\tsort(a[i].begin(),a[i].end());\n\t\tls=INT_MAX;\n\t\tfor(basic_string <pair<int,int> >::iterator it=a[i].begin();it!=a[i].end();++it){\n\t\t\tls3=*it;\n\t\t\tif(ls3.first!=ls)ls=ls3.first;\n\t\t\telse {\n\t\t\t\ta[i].erase(it);\n\t\t\t\t--it;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tdist[i]=INT_MAX;\n\t}\n\tdist[s]=0;\n\tw.push(make_pair(dist[s],s));\n\tans[s]=1;\n\tdij();\n\tif(dist[n]==INT_MAX){//\u5982\u679c\u7b49\u4e8e\u539f\u6570\u503c\u5219\u8f93\u51fa No answer \n\t\tcout<<\"No answer\";\n\t\treturn 0;\n\t}\n\tprint(dist[n]);\n\tputchar(32);\n\tprint(ans[n]);\n\treturn 0;\n}\n```\n\u8fd0\u884c\u65f6\u95f4  ```basic_string```\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/74gz8657.png)\n\n\u8fd0\u884c\u65f6\u95f4  ```vector```\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/q8qg5w9z.png)\n\n\u5728\u6b64\u8865\u5145\u4e00\u53e5\uff0c\u5728\u63d2\u5165 1e8 \u4ee5\u4e0a\u7ea7\u522b\u6570\u636e\u65f6\u3002 ```basic_string``` \u5c06\u4f1a\u660e\u663e\u6162\u4e8e ```vector ``` \u3002\u5728\u5f00\u542f ``O2`` \u7684\u60c5\u51b5\u4e0b\u63d2\u5165 3e8 \u7684\u6570\u636e ```basic_string``` \u4f1a\u88ab\u5361\u5230 5000ms \u53ca\u4ee5\u4e0a\uff0c\u65e0\u8bba\u662f\u4f7f\u7528 ```+=X``` \u6216\u8005\u662f\u76f4\u63a5\u4f7f\u7528 ``` push_back ``` \uff0c\u800c ```vector``` \u82e5\u662f\u4f7f\u7528 ```push_back``` \u4f1a\u7a33\u5b9a\u5728 4000ms \u5de6\u53f3\uff0c\u4f7f\u7528 ``` emplace_back ``` \u66f4\u662f\u80fd\u7a33\u5b9a\u5728 3500ms \u5de6\u53f3\u3002\u4f46\u4e00\u822c\u7684\u9898\u76ee\u5e76\u4e0d\u4f1a\u4f7f\u7528 1e8 \u53ca\u4ee5\u4e0a\u5982\u6b64\u79bb\u8c31\u7684\u6570\u636e\uff0c\u6545\u6b64\u6211\u53c8\u6d4b\u8bd5\u4e86\u767e\u4e07\u5373 1e6 \u7ea7\u522b\u7684\u63d2\u5165\uff0c\u5728\u6b64\u65f6\u4e8c\u8005\u7684\u5dee\u522b\u4e5f\u4e0d\u5927\u4e86\uff0c\u4e0d\u5f00 O2 \u90fd\u662f\u7a33\u5b9a\u5728 250ms \u5de6\u53f3\uff0c\u5f00 O2 \u4e8c\u8005\u90fd\u7a33\u5b9a\u5728 30ms \uff0c\u6240\u4ee5\u5728\u4e0d\u90a3\u4e48\u79bb\u8c31\u7684\u6570\u636e\u60c5\u51b5\u4e0b\u4e24\u8005\u90fd\u662f\u80fd\u9009\u7528\u7684\u3002~~\u800c\u4e14 ```baisc_string ``` \u7684 ``` +=``` \u63d2\u5165\u8fd8\u633a\u8bf1\u4eba\u7684~~ \n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u6570\u636e\u4e0d\u79bb\u8c31\u65f6\u6309\u81ea\u5df1\u559c\u597d\u9009\u62e9\uff0c\u6bd4\u8f83\u79bb\u8c31\u7684\u8bdd\u8fd8\u662f\u7528 ```vector``` + ```emplace_back``` \u5427\u3002\u5728\u4ee5\u540e\u6211\u53ef\u80fd\u4f1a\u5728\u535a\u5ba2\u5bf9\u4e8c\u8005\u8fdb\u884c\u66f4\u7ec6\u81f4\u7684\u8ba8\u8bba\u3002~~\u4e5f\u53ef\u80fd\u4f1a\u5495\u5495\u5495~~\n## step 3.2-1 \u7528\u7a7a\u95f4\u6362\u65f6\u95f4\n\n\u8fd9\u6837\u5199\u5c31\u8ddf\u5199\u90bb\u63a5\u77e9\u9635\u5dee\u4e0d\u591a\u4e86\uff0c\u4f46\u662f\u6216\u8bb8\u53ef\u4ee5\u4f7f\u7528 ```short``` \u7c7b\u578b\uff0c\u56e0\u4e3a\u9898\u76ee\u4e2d $ 1\\le C \\le 10 $ \u800c\u5728\u8f93\u5165\u7684\u65f6\u5019\u4e0d\u9700\u8981\u52a0\u6216\u8005\u4e58\uff0c```short``` \u7c7b\u578b\u662f\u5b8c\u5168\u591f\u7528\u7684\uff0c\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u8fd8\u662f\u4f7f\u7528\u4e86 ```int``` \u7c7b\u578b\u3002\n\n\u9996\u5148\u6211\u4eec\u8981\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5176\u5b9e\u7528 11 \u53bb\u521d\u59cb\u5316\u5c31\u597d\u4e86\uff0c\u4e0d\u9700\u8981\u4f7f\u7528\u5230 32767 \u6216\u8005\u662f ```INT_MAX``` \uff0c\u8fd9\u91cc\u5efa\u8bae\u4f7f\u7528\u53cc\u91cd ```for``` \u5faa\u73af\u800c\u4e0d\u662f ```memset()``` \u7528\u4e86 ```memset()``` \u4f1a\u7a0d\u5fae\u6162\u70b9\uff0c\u5728\u5f00\u4e86 ```O2``` \u540e\u5bf9\u6bd4\u4f1a\u6bd4\u8f83\u660e\u663e\uff0c\u4e0d\u8fc7\u5728 $n$ \u8f83\u5927\u65f6\u8fd9\u4fe9\u5dee\u522b\u4e0d\u5927\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u548c\u5199\u90bb\u63a5\u77e9\u9635\u4e00\u6837\u4e86\uff0c\u5982\u679c $ qc_{r1,r2} \\le r3 $ \u90a3\u4e48\u5c31\u8df3\u8fc7\u5faa\u73af\uff0c\u5728\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u8bed\u53e5\uff1a\n\n```\nif(qc[ls][ls1]<=ls2)continue;\n```\n\n\n## step 3.2-2 Code\n\n```cpp\n#include<bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/priority_queue.hpp>\n#define ll  long long\n#define ull unsigned long long\nusing namespace std;\nusing namespace __gnu_pbds;//\u4ee5\u4e0a\u8bf7\u5ffd\u7565 \ninline ll read(){//\u5feb\u8bfb \n   ll s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9')s=(s<<1)+(s<<3)+(ch^48),ch=getchar();\n   return s*w;\n}\ninline void print(ll ch){//\u5feb\u8f93 \n\tif (ch<0)ch=-ch,putchar('-');\n\tif (ch>9)print(ch/10);\n\tputchar(ch%10+'0');\n}\nint n,m,s;\nint dist[2010],ans[2010],qc[2010][2010];\nbool v[2010];\n__gnu_pbds::priority_queue<pair<int,int>,greater<pair<int,int> >, pairing_heap_tag > w;//pbds \u4e2d\u7684\u5c0f\u6839\u5806 \nbasic_string <pair<int,int> > a[2010];//\u4e00\u4e2a\u548c vector \u5dee\u4e0d\u591a\u7684\u5bb9\u5668\uff0c\u4f46\u4f3c\u4e4e\u66f4\u5feb \nvoid dij(){//\u5806\u4f18\u5316 Dijkstra\n\tpair<int,int> x1;\n\tint x,y,e;\n\twhile(!w.empty()){\n\t\tx1=w.top();\n\t\tx=x1.second;\n\t\tw.pop();\n        if(v[x])continue;\n\t\tv[x]=1;\n\t\tfor(int i=0;i<a[x].size();i++){\n\t\t\ty=a[x][i].first;\n\t\t\te=a[x][i].second;\n\t\t\tif(dist[y]>dist[x]+e){\n\t\t\t\tdist[y]=dist[x]+e;\n\t\t\t\tans[y]=ans[x];//\u8986\u76d6 \n\t\t\t\tif(!v[y]){\n\t\t\t\t\tw.push(make_pair(dist[y],y));\t\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(dist[y]==dist[x]+e)ans[y]+=ans[x];//\u7d2f\u52a0 \n\t\t}\n\t}\n}\nint main()\n{\n\tn=read(),m=read(),s=1;\n\tint ls,ls1,ls2;\n\tfor(int i=0;i<=n;i++){\n\t\tfor(int j=0;j<=n;j++){\n\t\t\tqc[i][j]=INT_MAX;\n\t\t}\n\t}\n\tpair<int,int> ls3;\n\tfor(int i=0;i<m;i++){\n\t\tls=read(),ls1=read(),ls2=read();\n\t\tif(qc[ls][ls1]<=ls2)continue;\n\t\ta[ls]+=make_pair(ls1,ls2);//basic_string\u4e13\u5c5e\u6dfb\u52a0\u5143\u7d20\uff0c\u7406\u89e3\u6210 push_back() \u5373\u53ef \n\t\tqc[ls][ls1]=ls2;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tdist[i]=INT_MAX;\n\t}\n\tdist[s]=0;\n\tw.push(make_pair(dist[s],s));\n\tans[s]=1;\n\tdij();\n\tif(dist[n]==INT_MAX){//\u5982\u679c\u7b49\u4e8e\u539f\u6570\u503c\u5219\u8f93\u51fa No answer \n\t\tcout<<\"No answer\";\n\t\treturn 0;\n\t}\n\tprint(dist[n]);//\u8f93\u51fa\u7b54\u6848 \n\tputchar(32);\n\tprint(ans[n]);\n\treturn 0;\n}\n```\n\n\u8fd0\u884c\u65f6\u95f4 ```for``` :\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/z8bp7uwi.png)\n\n\n\u8fd0\u884c\u65f6\u95f4 ```memset()``` \uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/dv0m1fll.png)\n\n\u5982\u6709\u9519\u8bef\u548c\u4e0d\u8db3\uff0c\u6b22\u8fce dalao \u4eec\u6307\u51fa qwq\u3002\n",
        "postTime": 1644984299,
        "uid": 333709,
        "name": "_WRYYY_",
        "ccfLevel": 5,
        "title": "P1608 \u8def\u5f84\u7edf\u8ba1 \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1608)\n\n### 0x00 \u672c\u9898\u5751\u70b9\n\n\u8fd9\u9898\u4e0d\u80fd\u4f7f\u7528 `SPFA`\uff0c\u4f1a\u88ab\u5361\u6389 #1,#13\n\n>  \u5173\u4e8e SPFA\uff0c\u5b83\u6b7b\u4e86\u3002\n\n\u672c\u9898\u6211\u4eec\u53ef\u4ee5\u53c2\u8003[\u6700\u77ed\u8def\u8ba1\u6570](https://www.luogu.com.cn/problem/P1144)\uff0c\u4f46\u6700\u77ed\u8def\u8ba1\u6570\u53ef\u4ee5\u4f7f\u7528 `SPFA`\u3002~~\u6211\u7528\u7684\u5c31\u662f\u3002~~\n\n\u8fd8\u6709\u8fd9\u9898\u6700\u5927\u7684\u5751\u70b9\uff1a\n\n\u6709\u91cd\u8fb9\uff01\u6709\u91cd\u8fb9\uff01\uff01\u6709\u91cd\u8fb9\uff01\uff01\uff01\n\n### 0x01 \u601d\u8def\n\n\u672c\u9898\u53ef\u4ee5\u8fd9\u6837\u60f3\uff1a\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u6570\u5c31\u662f\u8fd9\u4e2a\u70b9\u524d\u8d74\u7684\u6700\u77ed\u8def\u6570\u4e4b\u548c\u3002\u56e0\u4e3a\u4ece\u4e0a\u4e00\u4e2a\u70b9\u8fc7\u6765\u90fd\u662f\u540c\u4e00\u6761\u8def\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u7b97\u6700\u77ed\u8def\u6570\u4ee3\u7801\uff1a\n\n```cpp\nif(dis[i]==dis[last]+vaule)\n{\n\tans[i]+=ans[last];\n}\n```\n\n\u4f46\u662f\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u6709\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u53d1\u73b0\u5f53\u524d\u6c42\u7684\u4e0d\u662f\u6700\u77ed\u8def\uff0c\u8981\u66f4\u65b0\uff0c\u90a3\u4e48\u6211\u4eec\u53c8\u5f97\u51fa\u66f4\u65b0\u6700\u77ed\u8def\u65f6\u66f4\u65b0\u7b54\u6848\u4ee3\u7801\uff1a\n\n```cpp\nif(dis[i]>dis[last]+vaule)\n{\n\tdis[i]=dis[last]+vaule;\n    ans[i]=ans[last];\n    q.push(make_pair(-dis[i],i));\n}\n```\n\n\u8fd9\u9898\u7684\u6838\u5fc3\u5c31\u641e\u5b9a\u4e86\u3002\n\n### 0x02 AC Code\n\n```cpp\n//by olkieler\n#include<bits/stdc++.h>\n#define int long long\n#define inf LLONG_MAX\n#define retrun return\n#define N 2005\n#define M 4000005\n#define mod 114514\nusing namespace std;\npriority_queue<pair<int,int> >q;\nstruct node\n{\n\tint next;\n\tint pointer;\n\tint vaule;\n};\nnode edge[M];\nint n,m,tot;\nbool vis[N];\nint c[N][N];\nint head[N];\nint dis[N];\nint ans[N];\ninline void add(int u,int v,int w)\n{\n\tedge[++tot].pointer=head[u];\n\tedge[tot].next=v;\n\tedge[tot].vaule=w;\n\thead[u]=tot;\n}\ninline void input()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v,w;\n\t\tcin>>u>>v>>w;\n\t\tif(!c[u][v])\n\t\t{\n\t\t\tc[u][v]=1;\n\t\t\tadd(u,v,w);\n\t\t}\n\t\tif(c[u][v])\n\t\t{\n\t\t\tfor(int i=head[u];i;i=edge[i].pointer)\n\t\t\t{\n\t\t\t\tif(edge[i].next==v)\n\t\t\t\t{\n\t\t\t\t\tedge[i].vaule=min(edge[i].vaule,w);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\ninline void init()\n{\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tdis[i]=inf;\n\t}\n\tans[1]=1;\n\tq.push(make_pair(0,1));\n}\ninline void dijkstra()\n{\n\twhile(!q.empty())\n\t{\n\t\tint ls=q.top().second;\n\t\tq.pop();\n\t\tif(vis[ls])\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tvis[ls]=1;\n\t\tfor(int i=head[ls];i;i=edge[i].pointer)\n\t\t{\n\t\t\tint y=edge[i].next;\n\t\t\tint z=edge[i].vaule;\n\t\t\tif(dis[y]>dis[ls]+z)\n\t\t\t{\n\t\t\t\tdis[y]=dis[ls]+z;\n\t\t\t\tq.push(make_pair(-dis[y],y));\n\t\t\t\tans[y]=0;\n\t\t\t}\n\t\t\tif(dis[y]==dis[ls]+z)\n\t\t\t{\n\t\t\t\tans[y]+=ans[ls];\n\t\t\t}\n\t\t}\n\t}\n}\ninline void output()\n{\n\tif(dis[n]==inf)\n\t{\n\t\tcout<<\"No answer\\n\";\n\t\tretrun;\n\t}\n\tcout<<dis[n]<<' '<<ans[n]<<'\\n';\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tinput();\n\tinit();\n\tdijkstra();\n\toutput();\n\treturn 0;\n}\n```",
        "postTime": 1656852061,
        "uid": 466525,
        "name": "olkieler",
        "ccfLevel": 0,
        "title": "P1608 \u8def\u5f84\u7edf\u8ba1 \u9898\u89e3"
    },
    {
        "content": "# **P1608 \u8def\u5f84\u7edf\u8ba1 \u9898\u89e3** \n\n\u4e0d\u559c\u6b22 dijkstra \u4f18\u5316\u7684\u540c\u5b66\u53ef\u4ee5\u770b\u8fc7\u6765\u3002\n\n\u524d\u7f6e\u77e5\u8bc6 \uff1a dijkstra \u4ee5\u53ca\u5176\u6027\u8d28\u7684\u8db3\u591f\u4e86\u89e3\u3002\n\n\u4e0d\u4f1a\u7684\u5de6\u8f6c [oiwiki](https://oiwiki.com/graph/shortest-path/)\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1608)\n\n[P1339 [USACO09OCT]Heat Wave G](https://www.luogu.com.cn/problem/P1339)\n\n\u8fd9\u4e00\u9053\u9898\u7684\u672c\u8d28\u5176\u5b9e\u5c31\u662f\u5728 dijkstra \u4e2d\u52a0\u4e00\u4e2a\u8ba1\u6570\u5c31\u53ef\u4ee5\u7684\uff0c\u4f46\u4e00\u4e9b\u9898\u89e3\u8bb2\u5f97\u4e0d\u662f\u7279\u522b\u6e05\u695a\u3002\n\n```cpp\n\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tif(minn+a[p][j]<dis[j])\n\t\t\t{\n\t\t\t\tdis[j]=minn+a[p][j];\n\t\t\t\tsum[j]=sum[p];\n\t\t\t}\n\t\t\telse if(dis[j]==dis[p]+a[p][j])\n\t\t\t\tsum[j]+=sum[p];\n\t\t}\n```\n\u6574\u4e2a\u4ee3\u7801\u7684\u6838\u5fc3\u5c31\u5728\u8fd9\u91cc\u3002\n\n\u9996\u5148 $j$ \u904d\u5386\u7684\u5c31\u662f\u5173\u4e8e $p$ \u8fde\u63a5\u7684\u8282\u70b9\uff0c\u5982\u679c\u6211\u5f53\u524d\u7684\u6700\u77ed\u8def\u53ef\u4ee5\u66f4\u65b0\uff0c\u8bc1\u660e $j$ \u8fd9\u4e2a\u70b9\u5c31\u662f\u5728\u5f53\u524d $p$ \u7684\u6700\u77ed\u8def\u5f80\u540e\u4e00\u6761\u8fb9\u3002 \u4f46\u5c31\u957f\u8fdc\u6765\u8bf4\uff0c$dis[j]$ \u4e0d\u4e00\u5b9a\u5c31\u662f\u4ece\u8d77\u70b9\u5230 $j$ \u7684\u4e00\u4e2a\u6700\u77ed\u8def,\u6240\u4ee5\u4ed6\u7684\u603b\u65b9\u6848\u6570\u5c31\u7ee7\u627f\u4e86\u4ed6\u539f\u5148\u7684 $sum[p]$ \u7684\u65b9\u6848\u79cd\u6570\u3002\n\n\u5176\u6b21\u5c31\u662f\u53e6\u5916\u4e00\u4e2a else \u4ed6\u5c31\u662f $p$ \u548c $j$ \u5b8c\u5b8c\u5168\u5168\u8fde\u901a\u4e86\u3002\n\n\u53ef\u4ee5\u786e\u5b9a\u5f53\u524d\u7684\u5c31\u662f\u6700\u77ed\u8def\uff0c\u76f4\u63a5\u52a0\u4e0a\u53bb\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4f46\u662f\u4f60\u53ef\u80fd\u4f1a\u6709\u8fd9\u6837\u7684\u7591\u95ee\uff0c\u5982\u679c $p$ \u8d70\u8fc7\u7684\u8def\u548c $j$ \u91cd\u590d\u4e86\uff0c\u4f1a\u4e0d\u4f1a\u591a\u7b97\uff1f\n\n\n\n\u5176\u5b9e\u662f\u4e0d\u4f1a\u7684\uff0c\u56e0\u4e3a\u6211\u6bcf\u6b21\u90fd\u662f\u6311\u6700\u4f18\u7684\u53bb\u8d70\uff0c\u6240\u4ee5 $sum[p]$ \u5c31\u662f\u6709\u4e00\u4e9b\u62d0\u5f2f\u7684\u5730\u65b9\u66f4\u65b0\u800c\u6765\u7684\uff0c\u6240\u4ee5\u4e0d\u91cd\u590d\u3002\n\n\u6ce8\u610f\u4e00\u5f00\u59cb\u8981\u5224\u91cd\u8fb9\u3002\n\n\n\u6240\u4ee5\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N =2037;\nconst int maxn=1e6+10;\nint a[N][N];\nint dis[maxn],vis[maxn],sum[maxn],n,m;\nvoid dijkstra(int s)\n{\n\tint minn,p;\n\tmemset(dis,0x3f3f3f3f,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tdis[s]=0;\n\tsum[s]=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tminn=1e6+10;\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tif(!vis[j]&&minn>dis[j])\n\t\t\t\tp=j,minn=dis[j];\n\t\t}\n\t\tvis[p]=1;\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tif(minn+a[p][j]<dis[j])\n\t\t\t{\n\t\t\t\tdis[j]=minn+a[p][j];\n\t\t\t\tsum[j]=sum[p];\n\t\t\t}\n\t\t\telse if(dis[j]==dis[p]+a[p][j])\n\t\t\t\tsum[j]+=sum[p];\n\t\t}\n\t}\n}\nint main()\n{\n\tmemset(a,1e6+10,sizeof(a));\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v,w;\n\t\tcin>>u>>v>>w;\n\t\tif(a[u][v]>w)\n\t\t\ta[u][v]=w;\n\t}\n\tdijkstra(1);\n\tif(dis[n]==0x3f3f3f3f)\n\t\tcout<<\"No answer\";\n\telse\n\t\tcout<<dis[n]<<\" \"<<sum[n];\n\treturn 0;\n}\n```\n\n[\u4e00\u4e2a\u6df1\u75db\u7684\u6559\u8bad](https://www.luogu.com.cn/record/72774516)\n\n\u6240\u4ee5\u540c\u5b66\u4eec\u4e00\u5b9a\u8981\u770b\u597d\u6570\u636e\u8303\u56f4\uff01\uff01\uff01\uff01\uff01\uff01\uff08\u624b\u52a8\u52a0\u611f\u53f9\u53f7\uff09\n\n",
        "postTime": 1648642760,
        "uid": 361141,
        "name": "_JF_",
        "ccfLevel": 0,
        "title": "P1608 \u8def\u5f84\u7edf\u8ba1"
    },
    {
        "content": "### \u7b80\u5316\u9898\u610f\n\n\u6c42 $1$ \u5230 $n$ \u7684\u6700\u77ed\u8def\u6570\u91cf\uff0c\u6ca1\u6709\u8f93\u51fa ``No answer``\u3002\n\n### \u601d\u8def\n\n\u6309\u7167\u539f\u6765 dijkstra \u6c42\u6700\u77ed\u8def\u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u6709\u5224\u65ad\u80fd\u5426\u66f4\u65b0\u7684\u4e09\u89d2\u4e0d\u7b49\u5f0f\uff1a\n\n$$dis[nx] \\ge dis[now] + w$$\n\n( $now$ \u4e3a\u5f53\u524d\u8282\u70b9\uff0c$nx$ \u4e3a\u5b83\u7684\u4e00\u4e2a\u90bb\u5c45\u8282\u70b9\uff0c$w$ \u4e3a\u4e24\u70b9\u4e4b\u95f4\u6743\u503c\uff09\uff1b\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53 $dis[nx] = dis[now] + w$ \u65f6\u8868\u793a\u51fa\u73b0\u4e86\u540c\u6837\u957f\u5ea6\u7684\u6700\u77ed\u8def\uff0c\u800c $dis[nx] > dis[now] + w$ \u65f6\u5219\u8868\u793a\u627e\u5230\u4e86\u66f4\u4f18\u7684\u6700\u77ed\u8def\u3002\n\n\u540c\u65f6\uff0c\u5982\u679c $now$ \u7684\uff08\u5176\u4e2d\u4e00\u4e2a\uff09\u524d\u9a71\u8282\u70b9 $pre$ \u7684\u6700\u77ed\u8def\u6709 $cnt[pre]$ \u6761\uff0c\u5bb9\u6613\u53d1\u73b0\u5982\u679c\u4e0d\u7b49\u5f0f\u7b26\u53f7\u4e3a\u7b49\u53f7\uff0c\u5219 ``cnt[now] += cnt[pre]`` \uff08\u7d2f\u79ef\uff09\uff0c\u4e3a\u5927\u4e8e\u53f7\u5219 ``cnt[now] = cnt[pre]`` \uff08\u8986\u76d6\uff09\u3002\n\n### Code:\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <queue>\n#include <cstring>\n \n#define N 2010\nusing namespace std;\n \nint n,m;\nstruct node\n{\n    int to,val;\n};\nvector <node> g[N];\nint dis[N],cnt[N];\nint chong[N][N];\nbool done[N];\nstruct edge\n{\n    int u,val;\n    bool operator < (const edge &x)const{\n        return val > x.val;\n    }\n};\nvoid dijkstra(int s)\n{\n    priority_queue <edge> q;\n    memset(dis,0x3f3f3f3f,sizeof(dis));\n    dis[s] = 0;\n    cnt[s] = 1;\n    q.push((edge){s,0});\n    while(!q.empty())\n    {\n        int t = q.top().u;\n        q.pop();\n        if(!done[t])\n        {\n            done[t] = 1;\n            for(int j = 0;j < g[t].size();j++)\n            {\n                int nx = g[t][j].to;\n                int ww = g[t][j].val;\n                if(dis[nx] > ww + dis[t])\n                {\n                    dis[nx] = ww + dis[t];\n                    cnt[nx] = cnt[t];\n                    q.push((edge){nx,dis[nx]});\n                }\n                else if(dis[nx] == ww + dis[t])\n                    cnt[nx] += cnt[t];\n            }\n        }\n    }\n    if(dis[n] == 0x3f3f3f3f)\n        printf(\"No answer\\n\");\n    else\n        printf(\"%d %d\",dis[n],cnt[n]);\n}\n \nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i = 1,a,b,c;i <= m;i++)\n    {\n        scanf(\"%d%d%d\",&a,&b,&c);\n        if(chong[a][b] == c)\n            continue;//\u5751\u70b9\uff0c\u91cd\u8fb9\u4e0d\u53c2\u4e0e\u8ba1\u7b97\uff0c\u4f46\u9898\u9762\u6ca1\u8bf4\u2026\u2026\u9700\u8981\u81ea\u5df1\u6839\u636e\u9898\u9762\u60c5\u5883\u7406\u89e3\u611f\u609f\u51fa\u6765\n        g[a].push_back((node){b,c});\n        chong[a][b] = c;\n    }\n    dijkstra(1);\n    return 0;\n}\n```",
        "postTime": 1644487522,
        "uid": 371968,
        "name": "ningago",
        "ccfLevel": 4,
        "title": "P1608 \u8def\u5f84\u7edf\u8ba1 \u9898\u89e3"
    },
    {
        "content": "# [P1608\u8def\u5f84\u7edf\u8ba1](https://www.luogu.com.cn/problem/P1608)\n\u672c\u849f\u84bb\u53d1\u4e00\u6ce2\u601d\u8def\u4e0e\u4f17\u4e0d\u540c\u7684\u89e3\u6cd5\u5427\uff01~~\u81ea\u5df1\u90fd\u89c9\u5f97\u9ebb\u70e6~~\n### \u9898\u610f\n\u7ed9\u5b9a\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u6c42 $1$ \u5230 $n$ \u7684\u6700\u77ed\u8def\u957f\u5ea6\u53ca\u6700\u77ed\u8def\u6570\u91cf\u3002\n### \u601d\u8def\n\u5982\u679c\u6211\u4eec\u5bf9\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u6c42 $1$ \u5230 $n$ \u7684\u8def\u5f84\u6761\u6570\uff0c\u95ee\u9898\u662f\u4e0d\u662f\u7b80\u5355\u591a\u4e86\u5462\uff1f\u4f46\u5f88\u53ef\u60dc\uff0c\u9898\u76ee\u7ed9\u6211\u4eec\u7684\u662f\u5e26\u6743\u7684\u6709\u73af\u56fe\uff0c\u600e\u4e48\u529e\uff1f\n\n\u8f6c\u6362\u5457\uff01\n\n\u600e\u4e48\u8f6c\u6362\u5462\uff1f\u5176\u5b9e\u5f88\u7b80\u5355\u3002\u53ea\u9700\u8981\u4fdd\u7559\u6784\u6210 $1$ \u5230\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8def\u5c31\u884c\u4e86\u3002\u5148\u7528 Dijkstra \u6c42\u5355\u6e90\u6700\u77ed\u8def\uff0c\u518d\u66b4\u529b\u7a77\u4e3e\u6bcf\u4e00\u6761\u8fb9\uff0c\u770b\u662f\u5426\u662f\u7ec4\u6210\u6700\u77ed\u8def\u7684\u4e00\u90e8\u5206\uff0c\u628a\u65b0\u56fe\u5efa\u51fa\u6765\u3002\u518d\u5728\u65b0\u56fe\u4e0a\u8dd1\u62d3\u6251\u6392\u5e8f\uff0c\u6c42\u5230\u7ec8\u70b9\u7684\u8def\u5f84\u6761\u6570\u5c31\u884c\u4e86\u3002\n\n\u7ed3\u675f\u4e86\uff1f\n\n\u5e76\u6ca1\u6709!\n\n\u672c\u9898\u6709\u4e00\u4e2a\u5de8\u5927\u5751\u70b9\uff0c\u524d\u9762\u7684\u5927\u4f6c\u4e5f\u63d0\u5230\u4e86\uff1a\n\n\u4e24\u4e2a\u4e0d\u540c\u7684\u6700\u77ed\u8def\u65b9\u6848\u8981\u6c42\uff1a\u8def\u5f84\u957f\u5ea6\u76f8\u540c\uff08\u5747\u4e3a\u6700\u77ed\u8def\u957f\u5ea6\uff09\u4e14\u81f3\u5c11\u6709\u4e00\u6761\u8fb9\u4e0d\u91cd\u5408\uff01\uff01\uff01\n\n\u6240\u4ee5\u5728\u5b58\u5b8c\u56fe\u540e\u8fd8\u8981\u53bb\u91cd\u3002\n### \u5b9e\u73b0\u65b9\u6cd5\u89c1\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\nusing namespace std;\ntypedef pair<int,int> P;\n//\u90bb\u63a5\u8868\u5b58\u56fe\nstruct Edge{\n    int to;\n    int next;\n}topoe[4000005];\nstruct Edge2{\n    int to;\n    int next;\n    int dis;\n//ex\u8868\u793a\u53bb\u91cd\u5b8c\u540e\u8fd8\u5b58\u4e0d\u5b58\u5728\n    bool ex;\n}e[4000005];\nint head[2005],topohead[2005],du[2005];\nint t[2005];\nint N,E;\nint dist[2005],num[2005];\nbool vis[2005];\nstatic inline void Add(const int& x,const int& y,const int& l){\n    static int cnt;\n    e[++cnt].to=y;\n    e[cnt].next=head[x];\n    e[cnt].dis=l;\n    head[x]=cnt;\n    e[cnt].ex=1;\n}\nstatic inline void Addtopo(const int& x,const int& y){\n    static int cnt;\n    topoe[++cnt].to=y;\n    topoe[cnt].next=topohead[x];\n    topohead[x]=cnt;\n    du[y]++;\n}\nstatic inline void Dijkstra(){\n    memset(dist,0x7f,sizeof(dist));\n    priority_queue<P,vector<P>,greater<P>> pq;\n    pq.push(make_pair(0,1));\n    dist[1]=0;\n    while(!pq.empty()){\n        int tp=pq.top().second;\n        pq.pop();\n        if(vis[tp]){\n            continue;\n        }\n        vis[tp]=1;\n        for(register int i=head[tp];i;i=e[i].next){\n//\u5982\u679c\u53bb\u91cd\u65f6\u88ab\u53bb\u6389\u5c31continue\n            if(!e[i].ex){\n                continue;\n            }\n            const int to=e[i].to;\n            if(dist[to]>dist[tp]+e[i].dis){\n                dist[to]=dist[tp]+e[i].dis;\n                pq.push(make_pair(dist[to],to));\n            }\n        }\n    }\n}\nstatic inline void Topo(){\n    queue<int> q;\n    q.push(1);\n    num[1]=1;\n    while(!q.empty()){\n        int ft=q.front();\n        q.pop();\n        for(register int i=topohead[ft];i;i=topoe[i].next){\n            const int to=topoe[i].to;\n            du[to]--;\n            num[to]+=num[ft];\n            if(du[to]==0){\n                q.push(to);\n            }\n        }\n    }\n}\nint main(){\n    scanf(\"%d %d\",&N,&E);\n    for(register int i=1;i<=E;i++){\n        int I,J,C;\n        scanf(\"%d %d %d\",&I,&J,&C);\n        Add(I,J,C);\n    }\n//\u53bb\u91cd\u8fb9\n    for(register int i=1;i<=N;i++){\n//t[x]\u8868\u793a\u4e0a\u4e00\u4e2a\u4ecei\u5230x\u7684\u8fb9\u7684\u7f16\u53f7\n        memset(t,0,sizeof(t));\n        for(register int j=head[i];j;j=e[j].next){\n            const int to=e[j].to;\n            if(t[to]){\n                if(e[t[to]].dis>e[j].dis){\n                    e[t[to]].ex=0;\n                    t[to]=j;\n                }else{\n                    e[j].ex=0;\n                }\n            }else{\n                t[to]=j;\n            }\n        }\n    }\n    Dijkstra();\n//\u679a\u4e3e\u8fb9\uff0c\u5efa\u65b0\u56fe\n    for(register int i=1;i<=N;i++){\n        for(register int j=head[i];j;j=e[j].next){\n            if(!e[j].ex){\n                continue;\n            }\n            const int to=e[j].to;\n//\u5982\u679c\u662f\u6700\u77ed\u8def\u4e00\u90e8\u5206\u5c31\u52a0\u5165\u65b0\u56fe\n            if(dist[to]==dist[i]+e[j].dis){\n                Addtopo(i,to);\n            }\n        }\n    }\n    Topo();\n    if(dist[N]==0x7f7f7f7f){\n        printf(\"No answer\\n\");\n    }else{\n        printf(\"%d %d\\n\",dist[N],num[N]);\n    }\n    return 0;\n}\n\n```\n\u849f\u84bb\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u6c42\u7ba1\u7406\u5458\u5927\u5927\u7ed9\u8fc7\u3002",
        "postTime": 1654003309,
        "uid": 491339,
        "name": "Justin999",
        "ccfLevel": 5,
        "title": "P1608\u8def\u5f84\u7edf\u8ba1 \u9898\u89e3"
    },
    {
        "content": "## \u539f\u9898\n\n[P1608 \u8def\u5f84\u7edf\u8ba1](https://www.luogu.com.cn/problem/P1608)\n\n---\n\n## \u601d\u8def\u6982\u8ff0\n\n### \u9898\u610f\u5206\u6790\n\n\u5e26\u6709\u5411\u8fb9\u5224\u91cd\u7684\u5355\u6e90\u6700\u77ed\u8def\u5f84\u4e0e\u6700\u77ed\u8def\u5f84\u8ba1\u6570\u3002\n\n### \u601d\u8def\u5206\u6790\n\n\u9996\u5148\u6392\u9664\u5df2\u7ecf\u6b7b\u6389\u7684SPFA\u3002\n\n\u8003\u8651Dijkstra\uff0c\u4f46\u7531\u4e8e\u9700\u8981\u5224\u91cd\u8fb9\uff0c\u6240\u4ee5\u76f4\u63a5\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\u3002\u7b14\u8005\u4e0d\u5efa\u8bae\u90bb\u63a5\u77e9\u9635\u5224\u91cd\u540e\u518d\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\uff08 $100\u219253$ \u8840\u7684\u6559\u8bad\uff09\u3002\n\n---\n\n## \u7b97\u6cd5\u5b9e\u73b0\n\n### \u5173\u4e8e\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\n\n\u7531\u4e8e\u6c42\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u540c\u4e00\u6761\u6709\u5411\u8fb9\u53ea\u9700\u8981\u4fdd\u7559\u8fb9\u6743\u6700\u5c0f\u7684\u4e00\u6761\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nfor(RI i=1,x,y,w;i<=m;++i)\n\t{\n\t\tcin >> x >> y >> w;\n\t\tdist[x][y]=min(dist[x][y],w);\n\t}\n```\n\n### Dijkstra\u7684\u7ebf\u6bb5\u6811\u5b9e\u73b0\n\n\u672c\u9898\u53ef\u4ee5\u7528\u5806\u4f18\u5316\uff0c\u4f46\u662f\u7b14\u8005\u51b3\u5b9a\u4ecb\u7ecdDijkstra\u7684\u7ebf\u6bb5\u6811\u5b9e\u73b0\u65b9\u5f0f\u3002\n\n\u4ece\u7b97\u6cd5\u539f\u7406\u5165\u624b\uff1aDijkstra\u7b97\u6cd5\u7684\u6d41\u7a0b\u662f\u6bcf\u6b21\u9009\u53d6\u79bb\u8d77\u70b9\u6700\u8fd1\u7684\u70b9\uff0c\u5e76\u641c\u7d22\u6240\u6709\u51fa\u8fb9\uff0c\u677e\u5f1b\u4e0e\u5176\u76f8\u8fde\u7684\u5176\u4ed6\u70b9\u3002\u6700\u540e\u5728\u677e\u5f1b\u64cd\u4f5c\u4e2d\u6c42\u5f97\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002\u800c\u6bcf\u6b21\u9009\u53d6\u6700\u8fd1\u70b9\u7684\u64cd\u4f5c\uff0c\u5c31\u662f\u7ebf\u6bb5\u6811\u7684\u4f18\u5316\u5bf9\u8c61\uff08\u4e0e\u5806\u4f18\u5316\u6548\u679c\u4e00\u81f4\uff09\u3002\n\n\u7ebf\u6bb5\u6811\u7684\u5b9e\u73b0\u4e0e\u5176\u4ed6\u6743\u503c\u7ebf\u6bb5\u6811\u6ca1\u6709\u592a\u5927\u5dee\u522b\u3002\u4f46\u7531\u4e8e\u6bcf\u6b21\u53ea\u8fdb\u884c\u5355\u70b9\u4fee\u6539\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u61d2\u6807\u8bb0\uff0c\u53ea\u9700\u8981\u533a\u95f4\u6700\u5c0f\u503c\u4e0a\u4f20\u3002\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u6b21\u53d6\u51fa\u6700\u8fd1\u70b9\u540e\u9700\u8981\u5c06\u8be5\u70b9\u4ece\u96c6\u5408\u4e2d\u5220\u9664\uff08\u5bf9\u5e94\u5806\u4f18\u5316\u4e2d\u7684\u51fa\u5806\uff09\u3002\u5728\u7ebf\u6bb5\u6811\u4e2d\uff0c\u5411\u53d6\u51fa\u7684\u4e0b\u6807\u4e0a\u4f20\u4e00\u4e2a\u6781\u5927\u503c\uff0c\u4f7f\u5176\u4e0d\u4f1a\u518d\u88ab\u4e0a\u4f20\uff0c\u5373\u8fbe\u5230\u7c7b\u4f3c\u6548\u679c\u3002\n\n### \u5173\u4e8e\u8def\u5f84\u8ba1\u6570\n\n\u6700\u77ed\u8def\u5f84\u8ba1\u6570\u8003\u8651\u4e24\u79cd\u60c5\u51b5\u3002\n\n\u4e3a\u65b9\u4fbf\u8868\u8ff0\uff0c\u8bbe\u5f53\u524d\u9009\u5b9a\u7684\u6700\u8fd1\u70b9\u4e3a $u$ \uff0c\u4e0e\u8d77\u70b9\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u4e3a $dis_u$ \uff1b\u641c\u7d22\u5230\u7684\u51fa\u8fb9\u4e3a $i$ \uff0c\u6743\u503c\u4e3a $w_i$ \uff1b\u8fb9\u7684\u53e6\u4e00\u7aef\u70b9 $v$ \uff0c\u4e0e\u8d77\u70b9\u6700\u77ed\u8def\u5f84\u957f\u5ea6 $dis_v$ \uff1b\u4e24\u70b9\u7684\u6700\u77ed\u8def\u5f84\u6570\u5206\u522b\u4e3a $cnt_u,cnt_v$\u3002\n\n\u5f53 $dis_v>w_i+dis_u$ \uff0c\u6b64\u65f6\u70b9 $v$ \u7684\u6700\u77ed\u8def\u5f84\u88ab\u66f4\u65b0\uff0c\u5176\u6700\u77ed\u8def\u5f84\u6570\u4e5f\u8981\u88ab\u5176\u524d\u9a71\u70b9 $u$ \u7684\u6700\u77ed\u8def\u5f84\u6570\u8986\u76d6\uff0c\u5373 $cnt_v=cnt_u$ \u3002\n\n\u5f53 $dis_v=w_i+dis_u$ \uff0c\u8bf4\u660e\u5728\u70b9 $u$ \u677e\u5f1b\u4e4b\u524d\uff0c\u70b9 $v$ \u5df2\u7ecf\u5b58\u5728\u957f\u5ea6\u76f8\u540c\u7684\u6700\u77ed\u8def\u5f84\uff0c\u6b64\u65f6\u5230\u8fbe\u70b9 $v$ \u7684\u6700\u77ed\u8def\u5f84\u5373\u4e3a\u5f53\u524d\u4e24\u4e2a\u70b9\u6700\u77ed\u8def\u5f84\u6570\u7684\u548c\uff0c\u5373 $cnt_v=cnt_u+cnt_v$ \u3002\n\n---\n\n## AC code\n\n\u56e0\u4e3a\u5b9e\u73b0\u592a\u70c2\uff0c\u4ee3\u7801\u51d1\u5408\u770b\u770b\u5c31\u884c\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<set>\n#include<ctime>\n#define RI register int\n#define RN register node\nusing namespace std;\nconst int maxn=2e3+10;\ntypedef struct node\n{\n\tint dis;\n\tint pos;\n};\ntypedef struct\n{\n\tint l,r;\n\tnode data;\n}tree;\ntree e[maxn<<2];\nint n,m,cnt;\nint fir[maxn],dis[maxn],dist[maxn][maxn],rec[maxn];\nbool v[maxn];\ninline node getmin(node x,node y);/*\u8fd4\u56de\u8ddd\u79bb\u6700\u5c0f\u7684\u7ed3\u70b9*/\ninline void push_up(int p);/*\u533a\u95f4\u6700\u5c0f\u503c\u4e0a\u4f20*/\ninline void build(int p,int l,int r);/*\u5efa\u6811*/\ninline void update(int p,node opt);/*\u4e0a\u4f20\u503c\uff08\u5728\u672c\u9898\u4e2d\u4e0a\u4f20\u6700\u5927\u6574\u6570 \u7c7b\u4f3c\u4e8e\u5806\u4f18\u5316\u4e2d\u7684\u51fa\u5806\uff09*/\ninline node query(int p,int l,int r);/*\u67e5\u8be2\u6700\u5c0f\u503c*/\ninline void dijkstra(int st);/*Dijkstra\u677f\u5b50*/\nint main()\n{\n\tios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n\tcin >> n >> m;\n\tmemset(dist,0x3f3f3f3f,sizeof(dist));\n\tfor(RI i=1,x,y,w;i<=m;++i)\n\t{\n\t\tcin >> x >> y >> w;\n\t\tdist[x][y]=min(dist[x][y],w);/*\u56e0\u4e3a\u9700\u8981\u5224\u91cd \u6240\u4ee5\u76f4\u63a5\u90bb\u63a5\u77e9\u9635\u5b58\u56fe*/ \n\t}\n\tdijkstra(1);\n\tif(dis[n]==0x3f3f3f3f) puts(\"No answer\");\n\telse cout << dis[n] << \" \" << rec[n];\t\n\treturn 0;\n}\ninline node getmin(node x,node y)\n{\n\tif(x.dis<y.dis) return x;\n\telse return y;\n}\ninline void push_up(int p)\n{\n\te[p].data=getmin(e[p<<1].data,e[p<<1|1].data);\n\treturn;\n}\ninline void build(int p,int l,int r)\n{\n\te[p].l=l;e[p].r=r;\n\tif(l==r) e[p].data=(node){0x3f3f3f3f,0};\n\telse\n\t{\n\t\te[p].data=(node){0x3f3f3f3f,0};\n\t\tRI mid=(l+r)>>1;\n\t\tbuild(p<<1,l,mid);build(p<<1|1,mid+1,r);\n\t\tpush_up(p);\n\t}\n\treturn;\n}\ninline void update(int p,node opt)\n{\n\tif(e[p].l>=opt.pos && e[p].r<=opt.pos) e[p].data=opt;\n\telse\n\t{\n\t\tRI mid=(e[p].l+e[p].r)>>1;\n\t\tif(mid>=opt.pos) update(p<<1,opt);\n\t\telse update(p<<1|1,opt);\n\t\tpush_up(p);\n\t}\n\treturn;\n}\ninline node query(int p,int l,int r)\n{\n\tif(e[p].l>=l && e[p].r<=r) return e[p].data;\n\telse\n\t{\n\t\tRI mid=(e[p].l+e[p].r)>>1;\n\t\tRN ret=(node){0x3f3f3f3f,1};\n\t\tif(mid>=l) ret=getmin(ret,query(p<<1,l,r));\n\t\tif(mid<r) ret=getmin(ret,query(p<<1|1,l,r));\n\t\treturn ret;\n\t}\n}\ninline void dijkstra(int st)\n{\n\tmemset(dis,0x3f3f3f3f,sizeof(dis));\n\tbuild(1,1,n);\n\tdis[st]=0;rec[st]=1;\n\tupdate(1,(node){0,st});\n\tfor(RI i=1;i<n;++i)\n\t{\n\t\tRN temp=query(1,1,n);update(1,(node){0x3f3f3f3f,temp.pos});\n\t\tif(v[temp.pos]) continue;\n\t\tv[temp.pos]=1;\n\t\tfor(RI j=1;j<=n;++j)\n\t\t\tif(dis[j]>dis[temp.pos]+dist[temp.pos][j])\n\t\t\t{\n\t\t\t\tdis[j]=dis[temp.pos]+dist[temp.pos][j];rec[j]=rec[temp.pos];/*\u6700\u5c0f\u6743\u503c\u66f4\u65b0 \u5f53\u524d\u7ed3\u70b9\u6700\u77ed\u8def\u5f84\u6570\u7b49\u4e8e\u5176\u524d\u9a71\u7684\u6700\u77ed\u8def\u5f84\u6570*/\n\t\t\t\tupdate(1,(node){dis[j],j});\n\t\t\t}\n\t\t\telse if(dis[j]==dis[temp.pos]+dist[temp.pos][j]) rec[j]+=rec[temp.pos];/*\u4e0d\u66f4\u65b0\u6700\u5c0f\u6743\u503c \u4f46\u662f\u66f4\u65b0\u6700\u77ed\u8def\u5f84\u6570*/\n\t}\n\treturn;\n}\n```",
        "postTime": 1653531920,
        "uid": 359751,
        "name": "Exiler",
        "ccfLevel": 6,
        "title": "P1608\u9898\u89e3"
    },
    {
        "content": "### \u4e0d\u5f00\u90bb\u63a5\u77e9\u9635\u548c\u4e0d\u4f1a\u8fed\u4ee3\u5668\u7684\u798f\u97f3\uff01\n\u770b\u5230\u9898\u89e3\u533a\u90fd\u662f\u7528\u8fed\u4ee3\u5668\u548c\u90bb\u63a5\u77e9\u9635\u7684\uff0c\u90a3\u6211\u8fd9\u4e2a\u7528 $STL$ \u7684\u849f\u84bb\u80af\u5b9a\u8981\u6765\u4e00\u53d1\u7684\u54a9\u3002\n## \u9898\u76ee\n\u6c42\u4ece $1\\sim n$ \u6700\u77ed\u8def\u7684\u957f\u5ea6\u548c\u6570\u91cf ~~\uff08\u4e00\u53e5\u8bdd\u9898\u610f\uff09~~\u3002\n## \u9898\u89e3\n\u697c\u4e0a\u7684\u5927\u4f6c\u90fd\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\uff0c~~\u90a3\u6211\u8fd8\u662f\u518d\u8bf4\u4e00\u904d\u5427~~\u3002\n\n$\\texttt{Spfa}$ \u6b7b\u4e86\uff0c\u7528 $\\texttt{Dijkstra}$\u3002\n\n\u5f53\u8f83\u77ed\u8def\u51fa\u73b0\u7684\u65f6\u5019\u80af\u5b9a\u8981\u8fdb\u884c\u4e00\u6b21\u677e\u5f1b\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\n```cpp\nif(g[v]>g[u]+w)g[v]=g[u]+w;\n```\n\u8003\u8651\u7528 $cnt_i$ \u8bb0\u5f55 $1\\sim i$ \u7684\u6700\u77ed\u8def\u6570\u91cf\uff0c\u7531\u4e8e $v$ \u662f\u7531 $u$ \u8f6c\u79fb\u8fc7\u6765\u7684\uff0c\u90a3\u4e48\u677e\u5f1b\u540e $cnt_v\\leftarrow cnt_u$\u3002\n\n\u7136\u9e45\u8fd9\u8fd8\u4e0d\u591f\uff0c\u4ed4\u7ec6\u60f3\u60f3\u5f53\uff1a```g[v]==g[u]+w``` \u7684\u60c5\u51b5\uff0c\u663e\u7136 $cnt$ \u4e0d\u8f6c\u79fb\u597d\u50cf\u4e0d\u5bf9\uff0c\u6bd5\u7adf\u957f\u5ea6\u4e00\u6837\uff0c\u4e5f\u662f\u4e00\u6761\u6700\u77ed\u8def\u3002\u90a3\u4e48\u5c31\u6709\u4e86\u4ee5\u4e0b\uff1a\n```cpp\nif(g[v]==g[u]+w)cnt[v]+=cnt[u]\n```\n## \u5b9e\u73b0\n\u5199\u5b8c\u4ee3\u7801\uff0c\u4e00\u4ea4\uff0c\u53ea\u6709 $60$\uff1f\n\n\u697c\u4e0a\u7684\u5927\u4f6c\u4e5f\u70b9\u660e\u4e86\u8fd9\u9898\u7684\u5751\u70b9\uff1a\n\n```\n\u4e24\u4e2a\u4e0d\u540c\u7684\u6700\u77ed\u8def\u65b9\u6848\u8981\u6c42\uff1a\u8def\u5f84\u957f\u5ea6\u76f8\u540c\uff08\u5747\u4e3a\u6700\u77ed\u8def\u957f\u5ea6\uff09\u4e14\u81f3\u5c11\u6709\u4e00\u6761\u8fb9\u4e0d\u91cd\u5408\u3002\n```\n### \u6709\u91cd\u8fb9\n\u770b\u89c1\u6709\u4eba\u7528\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\uff0c\u53ef\u4ee5\u6709\u6548\u907f\u514d\u91cd\u8fb9\u3002~~\u4f46\u6211\u4e0d,\u6211\u7528~~ $vector$ \u5b58\u56fe\u3002\n\n\u7528\u8fed\u4ee3\u5668\uff1f~~\u6211\u61d2~~\u3002\n\n**STL** \u5927\u6cd5\u597d\u3002\n\n\u5c06\u6570\u636e**\u6392\u5e8f\u540e**\uff0c\u5feb\u901f\u53bb\u91cd\u51fd\u6570\uff08\u91cd\u590d\u5c31\u4fdd\u7559\u7b2c\u4e00\u4e2a\uff09\uff1a```unique(a.begin(),a.end(),cmp)```\u3002\n\n```a.begin() a.end()``` \u662f $vector$ \u7684\u5934\u5c3e\u6307\u9488\uff0c\u8868\u793a\u4ece\u5934\u5230\u5c3e\uff08\u5e9f\u8bdd\uff09\u3002\n\n```cmp``` \u662f\u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u53ef\u4ee5\u5982\u679c\u91cd\u590d\uff0c\u5c31\u4f1a\u628a\u5b83\u653e\u5230\u6700\u540e\uff08**\u4e0d\u662f\u5220\u9664**\uff09\uff1a\n```cpp\nbool cmp(node x,node y){\n\treturn x.v==y.v;\n}\n```\n```unique``` \u8fd8\u6709\u4e00\u4e2a\u91cd\u70b9\u662f\u8fd4\u56de\u503c\uff0c\u5b83\u8fd4\u56de\u7684\u662f\u53bb\u91cd\u540e\u6570\u7ec4\u5e94\u8be5\u6709\u7684\u6700\u540e\u4e00\u4e2a\u6570\u7684\u8fed\u4ee3\u5668\uff08~~\u600e\u4e48\u53c8\u662f\u5b83~~\uff09\u3002\n\n\u7528 ```n=unique(a.begin(),a.end(),cmp)-a.begin()``` \u5c31\u80fd\u5f97\u5230\u53bb\u91cd\u540e\u957f\u5ea6\u4e86\uff0c\u5728 $vector$ \u4e2d ```.pop_back()``` \u591a\u4f59\u7684\u5c31\u884c\u4e86\uff08~~\u600e\u4e48\u66f4\u590d\u6742\u4e86\uff0c\u5e78\u597d\u4ee3\u7801\u4e0d\u957f~~\uff09\u3002\n\n[\u673a\u623f\u5927\u4f6c](https://www.luogu.com.cn/user/159686)%%%\u7ed9\u51fa\u4e86\u4e24\u79cd\u522b\u7684\u65b9\u6cd5\uff1a\n```cpp\na.erase(unique(a.begin(),a.end()),a.end());\na.resize(unique(a.begin(),a.end())-a.begin());\n```\n[Code](https://www.luogu.com.cn/paste/8no1srmb)",
        "postTime": 1645683005,
        "uid": 262322,
        "name": "panyanppyy",
        "ccfLevel": 5,
        "title": "P1608"
    },
    {
        "content": "\u9898\u76ee\uff1a[P1608](https://www.luogu.com.cn/problem/P1608)\n\n~~\u697c\u4e0b\u9898\u89e3\u6bd4\u8fd9\u4e2a\u8be6\u7ec6\u591a\u4e86\uff0c\u53ef\u662f\u56fe\u770b\u8d77\u6765\u592a\u590d\u6742\u3002\u849f\u84bb\u8ba4\u4e3a\u672c\u9898\u89e3\u8fd8\u662f\u7b80\u5355\u6613\u61c2\u7684\u3002~~\n\n\u7531\u4e8e $N$ \u6bd4\u8f83\u5c0f\uff0c\u56e0\u6b64\u4f7f\u7528\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\uff0c\u8fd9\u6837**\u65b9\u4fbf\u5904\u7406\u91cd\u8fb9**\uff08\u9898\u76ee\u8981\u6c42\u8fb9\u4e0d\u91cd\u5408\uff09\u3002\u6700\u77ed\u8def\u7b97\u6cd5\u4f7f\u7528 [\u5806\u4f18\u5316 dijkstra](https://www.luogu.com.cn/problem/P4779)\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651**\u4f7f\u7528 dp \u7684\u601d\u60f3**\u6765\u8ba1\u6570\u3002\u8bb0 $d_i$ \u4e3a $1$ \u5230 $i$ \u7684\u6700\u77ed\u8def\u957f\u5ea6\uff0c$cnt_i$ \u4e3a $1$ \u5230 $i$ \u7684\u6700\u77ed\u8def\u6570\u91cf\uff0c$u$ \u4e3a\u4e00\u6761\u8fb9\u7684\u8d77\u70b9\uff0c$v$ \u4e3a\u4e00\u6761\u8fb9\u7684\u7ec8\u70b9\uff0c$w$ \u4e3a\u8fb9\u6743\u3002\n- $d_u+w<d_v$\uff1a\u8fd9\u8bf4\u660e\u4e4b\u524d\u5230 $v$ \u7684**\u4e0d\u662f\u6700\u77ed\u8def**\uff0c\u9700\u8981\u6e05\u96f6\uff1b\u90a3\u4e48**\u5f53\u524d**\u7684\u6700\u77ed\u8def**\u53ea\u4ece $u$ \u8f6c\u79fb**\uff0c$cnt_v$ \u5c31\u5e94\u8be5\u7b49\u4e8e $cnt_u$\u3002\n- $d_u+w=d_v$\uff1a\u8fd9\u8bf4\u660e\u4ece\u4e00\u4e2a\u65b0\u7684\u70b9**\u518d\u6b21**\u5f97\u5230\u4e86**\u5f53\u524d**\u6700\u77ed\u8def\uff0c\u539f\u5148\u7684\u4f9d\u7136\u662f\uff0c\u90a3\u4e48 $cnt_v$ \u5c31\u52a0\u4e0a $cnt_u$\u3002\n\n\u4ee5\u4e0a\u662f\u672c\u9898\u91cd\u70b9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5373 dijkstra \u7684\u590d\u6742\u5ea6\uff0c\u4e3a $(n+m)\\times\\log{n}$\u3002\u7ec6\u8282\u89c1\u6ce8\u91ca\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2005;\nint n,m;\nint e[N][N];\nint d[N],cnt[N];\nbool vis[N];\nvoid dijkstra(){\n\tpriority_queue<pair<int,int>>q;\n\t#define mp make_pair\n\tmemset(d,0x3f,sizeof(d));\n\td[1]=0,cnt[1]=1; //\u4ece1\u52301\u7684\u6700\u77ed\u8def\u957f\u5ea6\u4e3a0\uff0c\u67091\u6761\n\tq.push(mp(-0,1));\n\twhile(!q.empty()){\n\t\tint u=q.top().second;\n\t\tq.pop(),\n\t\tif(vis[u])continue;\n\t\tvis[u]=1;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tint v=i,w=e[u][i]; //\u6ca1\u6709\u8fb9\u7684\u8bdd\uff0c\u8fb9\u6743\u4e3a\u6b63\u65e0\u7a77\uff0c\u81ea\u7136\u4e0d\u4f1a\u6210\u4e3a\u6700\u77ed\u8def\uff0c\u4e0d\u7528\u7279\u5224\n\t\t\tif(d[u]+w<d[v])d[v]=d[u]+w,q.push(mp(-d[v],v)),cnt[v]=cnt[u];\n\t\t\telse if(d[u]+w==d[v])cnt[v]+=cnt[u];\n\t\t}\n\t}\n}\nint main(){\n\tcin>>n>>m;\n\tmemset(e,0x3f,sizeof(e)); //\u90bb\u63a5\u77e9\u9635\u8fb9\u6743\u521d\u59cb\u5316\u4e3a\u6b63\u65e0\u7a77\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v,w;\n\t\tcin>>u>>v>>w;\n\t\te[u][v]=min(e[u][v],w); //\u6709\u91cd\u8fb9\uff0c\u53d6\u8f83\u5c0f\u7684\n\t}\n\tdijkstra();\n\tif(d[n]==0x3f3f3f3f)puts(\"No answer\"); //\u6700\u77ed\u8def\u8fd8\u662f\u521d\u59cb\u5316\u7684\u503c\uff0c\u8bf4\u660e\u4e0d\u8fde\u901a\n\telse cout<<d[n]<<\" \"<<cnt[n]<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1644475942,
        "uid": 437788,
        "name": "aqx_AK_xyf",
        "ccfLevel": 5,
        "title": "P1608 \u8def\u5f84\u7edf\u8ba1"
    },
    {
        "content": "\u5927\u5bb6\u597d\uff0c\u8fd9\u91cc\u662f\u849f\u84bb\u5929\u9e4f\u3002\r\n\r\n**\u4e3b\u4f53\u601d\u8def\uff1a\u88f8Dijkstra+\u77e9\u9635\u5b58\u56fe**  \u4e3a\u4ec0\u4e48\u4e0d\u7528SPFA\uff1f\u4f17\u6240\u5468\u77e5\uff0c\u5b83\u6b7b\u4e86\u3002  \r\n\u76f8\u4fe1\u5404\u4f4d\u5bf9\u4e8e\u6700\u77ed\u8def\u65e9\u5df2\u662f\u8f7b\u8f66\u719f\u8def\uff0c\u6545\u4e0d\u8fc7\u591a\u8d58\u8ff0\u3002\u800c\u9898\u76ee\u4e2d\u8fd8\u8981\u6c42\u8f93\u51fa\u6700\u77ed\u8def\u5f84\u7684\u6761\u6570\uff0c\u600e\u4e48\u529e\u5462\uff1f\r\n\r\n\u6211\u4eec\u5047\u8bbe\u8fd9\u6837\u4e00\u4e2a\u56fe\u7684\u5b58\u5728\uff1a  \r\n![](https://cdn.luogu.com.cn/upload/pic/54263.png)\r\n\r\n\u5728\u8fd9\u4e2a\u56fe\u4e2d\uff0c\u7531$A-D$\u7684\u6700\u77ed\u8def\u5f84\u5171\u6709\u4e09\u6761\uff0c\u5206\u522b\u662f$A-D,A-B-D,A-B-C-D$\uff0c\u957f\u5ea6\u90fd\u662f30  \r\n\u63a5\u4e0b\u6765\u6211\u4eec\u518d\u5bf9\u8fd9\u4e2a\u56fe\u641e\u4e8b\u60c5\uff1a  \r\n![](https://cdn.luogu.com.cn/upload/pic/54264.png)\r\n\r\n\u53ef\u4ee5\u770b\u5230\uff0c\u7531$A-E$\u7684\u6700\u77ed\u8def\u5f84\u8fd8\u662f\u4e09\u6761\uff0c\u957f\u5ea6\u662f40\u3002  \r\n\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u597d\u73a9\u7684\u7279\u6027\uff0c$A-E$\u7684\u6761\u6570\u5c31\u662f$A-D$\u7684\u6761\u6570\uff01\u522b\u7740\u6025\uff0c\u6211\u4eec\u518d\u7a0d\u52a0\u4fee\u6539\uff1a  \r\n![](https://cdn.luogu.com.cn/upload/pic/54267.png)\r\n\r\n\u73b0\u5728$A-F$\u7684\u6761\u6570\u662f1\u6761\uff0c\u8ddd\u79bb\u4e3a10\uff0c\u52a0\u5165$F-E$\u7684\u8ddd\u79bb(30)\u540e\uff0c\u8ddd\u79bb\u4e3a40\uff1b$A-D$\u7684\u6761\u6570\u662f3\u6761\uff0c\u8ddd\u79bb\u4e3a30\uff0c\u52a0\u5165$D-E$\u7684\u8ddd\u79bb(10)\u540e\uff0c\u8ddd\u79bb\u4e3a40\uff1b$A-E$\u7684\u6761\u6570\u662f4\u6761\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u7531\u4e8e$40=40$,$A-E$\u7684\u6761\u6570\u5c31\u662f$A-F,A-D$\u7684\u6761\u6570\u4e4b\u548c\u3002\u6211\u4eec\u518d\u53bb\u505a\u505a\u4fee\u6539\uff1a  \r\n![](https://cdn.luogu.com.cn/upload/pic/54268.png)\r\n\r\n\u6b64\u65f6\uff0c$A-G$\u7684\u6700\u77ed\u8def\u5f84\u6761\u6570\u662f1\u6761\uff0c\u52a0\u4e0a\u5173\u8054\u8fb9\u957f\u5ea6\u4e3a20\uff1b$A-F,A-D$\u7684\u6700\u77ed\u8def\u5f84\u6761\u6570\u5206\u522b\u662f1\u6761\u548c3\u6761\uff0c\u52a0\u4e0a\u5173\u8054\u8fb9\u957f\u5ea6\u4e3a40\uff1b\u7531\u4e8e$40=40>20$\uff0c\u6240\u4ee5$A-E$\u7684\u6700\u77ed\u8def\u5f84\u6761\u6570\u662f1\u6761\uff0c\u8ddd\u79bb\u4e3a20\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5f52\u7eb3\u4e00\u4e0b\uff1a\r\n\r\n**\u6c42\u8282\u70b9$n$\u7684\u6700\u77ed\u8ddd\u79bb\u6761\u6570\uff0c\u5148\u8981\u6c42\u5176\u8282\u70b9\u5173\u8054\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u8ddd\u79bb+\u5173\u8054\u8fb9\u7684\u957f\u5ea6\uff0c\u4e4b\u540e\u9009\u51fa\u6700\u77ed\u7684\uff0c\u5c06\u5b83\u4eec\u7684\u6700\u77ed\u8ddd\u79bb\u6761\u6570\u52a0\u548c\u3002\uff08\u597d\u9ebb\u70e6\u554a\uff09**\r\n\r\n\u8fd9\u662f\u4e2a\u597d\u4e1c\u897f\uff0c\u600e\u4e48\u7528\u5462\uff1f\r\n\r\n\u4f17\u6240\u5468\u77e5\uff0cdijsktra\u5728\u6c42\u6700\u77ed\u8def\u7684\u65f6\u5019\u4f1a\u66f4\u65b0\u8ddd\u79bb\uff0c\u6211\u4eec\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2apath\u6570\u7ec4\u5b58\u8def\u5f84\u6761\u6570\uff0c\u5728\u66f4\u65b0\u8ddd\u79bb\u7684\u65f6\u5019\u53ef\u4ee5\u76f4\u63a5\u5bf9\u8ddd\u79bb\u66f4\u65b0\u3002\u6838\u5fc3\u4ee3\u7801:\r\n```cpp\r\n//dijisktra\u66f4\u65b0\u8ddd\u79bb\u65f6\uff1a\r\nif(dis[j]>dis[u]+w)\r\n{\r\n\tdis[j]=dis[u]+w;\r\n\tpath[j]=path[u];//\u4e0d\u540c\u957f\u5ea6\u53d8\u6700\u77ed\r\n}\r\nelse if(dis[j]==dis[u]+w)\r\n\tpath[j]+=path[u];//\u76f8\u540c\u957f\u5ea6\u52a0\u548c\r\n```\r\n\u8f7b\u677e\u6109\u60a6\r\n\r\n\u4e0b\u9762\u662f\u5b8c\u6574\u7684\u4ee3\u7801\uff1a\r\n```cpp\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nint tu[2010][2010];//\u4e0d\u8981\u5728\u610f\u8fd9\u4e2a\u7ec6\u8282\r\nbool vis[2010]={0};\r\nint dis[2010],path[2010];\r\nint n,m,from,I,J,C;\r\nvoid dij(int a\uff09//\u5e38\u89c4\u7684dij\r\n{\r\n\tmemset(dis,0x3f,sizeof(dis));\r\n\tdis[a]=0;\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tint u,maxu=1e9;\r\n\t\tfor(int j=1;j<=n;j++)\r\n\t\t\tif(!vis[j]&&maxu>dis[j])\r\n\t\t\t{\r\n\t\t\t\tmaxu=dis[j];\r\n\t\t\t\tu=j;\r\n\t\t\t}\r\n\t\tvis[u]=1;\r\n\t\tfor(int j=1;j<=n;j++)\r\n\t\t{\r\n\t\t\tint w=tu[u][j];\r\n\t\t\tif(dis[j]>dis[u]+w)\r\n\t\t\t{\r\n\t\t\t\tdis[j]=dis[u]+w;\r\n\t\t\t\tpath[j]=path[u];//\u4e0d\u540c\u957f\u5ea6\u53d8\u6700\u77ed\r\n\t\t\t}\r\n\t\t\telse if(dis[j]==dis[u]+w)\r\n\t\t\t\tpath[j]+=path[u];//\u76f8\u540c\u957f\u5ea6\u52a0\u548c\r\n\t\t}\r\n\t}\r\n}\r\nint main()\r\n{\t\r\n\tmemset(tu,63,sizeof(tu));\r\n\tcin>>n>>m;\r\n\tfor(int i=0;i<m;i++)\r\n\t{\r\n\t\tcin>>I>>J>>C;\r\n\t\tif(tu[I][J]>C)\r\n\t\t{\r\n\t\t\ttu[I][J]=C;\t//\u6ce8\u610f\u6709\u5411\u56fe\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tdij(1);\r\n\tif(dis[n]==0x3f3f3f3f)//\u5982\u679c\u8fd8\u662f\u521d\u503c\uff0c\u8f93\u51fano ans\r\n\t\tcout<<\"No answer\"<<endl;\r\n\telse\r\n\t\tcout<<dis[n]<<\" \"<<path[n];\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1552787136,
        "uid": 109988,
        "name": "34ytw8ew7ft",
        "ccfLevel": 0,
        "title": "P1608 \u8def\u5f84\u7edf\u8ba1-\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u8981\u53bb\u91cd\u8fb9\uff0c\u6211\u4eec\u53d1\u73b0 $n$ \u548c $c$ \u7684\u8303\u56f4\u975e\u5e38\u7684\u5c0f\uff0c\u56e0\u6b64\u76f4\u63a5 $bol$ \u6570\u7ec4\u53bb\u91cd\u5c31\u884c $bol[x][y][c]$ \u5206\u522b\u4ee3\u8868\u7740\u4e00\u6761\u4ece $x$ \u5230 $y$ \u7684\u8fb9\u957f\u5ea6\u4e3a $c$\uff0c\u56e0\u4e3a\u6211\u4eec\u65e0\u6cd5\u4fdd\u8bc1\u8f93\u5165\u7684\u7b2c\u4e00\u6761\u662f\u6700\u77ed\u7684\u8fb9\uff0c\u6240\u4ee5\u8fd9\u6837\u6574\u662f ok \u7684\u3002\n\n\u5269\u4e0b\u7684\u5728\u4e0d\u540c $dij$ \u91cc\u9762\u52a0\u4e0a\u4e00\u4e2a\u8ba1\u6570\u7684\u6570\u7ec4 $shu$ \u5373\u53ef\u3002\n\n\u5728\u6c42\u6700\u77ed\u8def\u7684\u65f6\u5019\u987a\u9053\u8f6c\u79fb $shu$ \u5373\u53ef\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n\n\u4ee3\u7801\u91cc\u5199\u7684\u5f88\u6e05\u695a\u554a\uff01\n\n```cpp\n#include<bits/stdc++.h>\n#define pr pair<int,int>\nusing namespace std;\nconst int MA=2002;\nconst int MAXN=2000000005;\nint n,m,head[MA],cnt=0;\nstruct zh{\n\tint x,y,z;\n}a[MA*MA];\nvoid cun(int x,int y,int z){\n\ta[++cnt].x=head[x];a[cnt].y=y;a[cnt].z=z;head[x]=cnt;\n}\nint dis[MA],shu[MA];\nbool bel[MA],bol[MA][MA][12];\npriority_queue<pr,vector<pr>,greater<pr> > q; \nvoid dij(){\n\tfor(int i=1;i<=n;i++){\n\t\tdis[i]=MAXN;bel[i]=0;shu[i]=0;\n\t}\n\tshu[1]=1;\n\tdis[1]=0;q.push(make_pair(0,1));\n\twhile(q.empty()==0){\n\t\tint x=q.top().second;q.pop();\n\t\tif(bel[x]==1){\n\t\t\tcontinue;\n\t\t}\n\t\tbel[x]=1;\n\t\tfor(int i=head[x];i;i=a[i].x){\n\t\t\tint y=a[i].y,z=a[i].z;\n\t\t\tif(dis[y]==dis[x]+z){\n\t\t\t\tshu[y]+=shu[x];\n\t\t\t}\t\t\t\n\t\t\tif(dis[y]>dis[x]+z){\n\t\t\t\tdis[y]=dis[x]+z;shu[y]=shu[x];\n\t\t\t\tq.push(make_pair(dis[y],y));\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y,z;scanf(\"%d%d%d\",&x,&y,&z);\n\t\tif(bol[x][y][z]==0){\n\t\t\tcun(x,y,z);bol[x][y][z]=1;\n\t\t}\n\t}\n\tdij();\n\tif(dis[n]==MAXN){\n\t\tprintf(\"No answer\");return 0;\n\t}\n\tprintf(\"%d %d\",dis[n],shu[n]);\n\treturn 0;\n}\n```\n",
        "postTime": 1658891126,
        "uid": 393748,
        "name": "JoyJoyGang",
        "ccfLevel": 0,
        "title": "\u6700\u77ed\u8def\u8ba1\u6570\u6a21\u677f"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\uff1a\n\u6709 $N$ \u4e2a\u5730\u65b9\uff0c\u4ece $1$ \u5f00\u59cb\uff0c\u5728 $N$ \u7ed3\u675f\u3002\u8fd9\u4e9b\u9053\u8def\u90fd\u662f\u5355\u5411\u7684\uff0c\u4ece\u4e00\u4e2a\u5730\u65b9\u5230\u53e6\u4e00\u4e2a\u5730\u65b9\u8981\u82b1\u8d39\u94b1\uff0c\u73b0\u6c42\u4ece\u8d77\u59cb\u5730\u5230 $N$ \u5730\u7684\u6700\u5c11\u82b1\u8d39\u548c\u82b1\u8d39\u6700\u5c11\u7684\u8def\u5f84\u7684\u603b\u6570\u3002\n\n# \u5206\u6790\uff1a\n\u8fd9\u9053\u9898\u4e0d\u96be\u770b\u51fa\uff0c\u662f\u4e00\u9053\u6700\u77ed\u8def\u7684\u9898\uff0c\u4e0e [P1144 \u6700\u77ed\u8def\u8ba1\u6570](https://www.luogu.com.cn/problem/P1144) \u7c7b\u4f3c\uff0c\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u8981\u6c42\u6c42\u51fa\u6700\u5c11\u82b1\u8d39\u3002\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u90bb\u63a5\u8868\u5b58\u50a8\u56fe\u7684\u4fe1\u606f\uff0c\u63a5\u7740\u4f7f\u7528 dijkstra \u7b97\u6cd5\u6c42\u6700\u77ed\u8def\uff0c\u4ee5\u53ca\u6700\u5c11\u8def\u5f84\u7684\u603b\u6570\uff0c\u5e76\u4e14\u4f7f\u7528\u5927\u6839\u5806\u4f18\u5316\u3002~~\uff08\u81f3\u4e8e SPFA \uff0c\u5b83\u6b7b\u4e86\uff09~~\n\n### \u5173\u4e8e Dijkstra \u7b97\u6cd5\nDijkstra\u7b97\u6cd5\n\u6d41\u7a0b\u5982\u4e0b\uff1a\n\n1.  \u521d\u59cb\u5316 $ans_1=0$ ,\u5176\u4f59\u8282\u70b9\u7684 $ans$ \u503c\u4e3a\u6b63\u65e0\u7a77\u5927\u3002 \n    \n2.  \u627e\u51fa\u4e00\u4e2a\u672a\u88ab\u6807\u8bb0\u7684\u3001 $ans_x$ \u6700\u5c0f\u7684\u8282\u70b9 $x$ \uff0c\u7136\u540e\u6807\u8bb0\u8282\u70b9 $x$ \u3002\n    \n3. \u626b\u63cf\u8282\u70b9x\u7684\u6240\u6709\u51fa\u8fb9 $( x , y , z)$ \uff0c \u82e5 $ans_y > ans_x+z$ \uff0c\u5219\u4f7f\u7528 $ans_x + z$\u66f4\u65b0 $ans_y$ \u3002\n    \n4. \u91cd\u590d\u4e0a\u8ff0 $2 ~ 3$ \u4e24\u4e2a\u6b65\u9aa4\uff0c\u76f4\u5230\u6240\u6709\u8282\u70b9\u90fd\u88ab\u6807\u8bb0\u3002\n    \nDijkstra\u7b97\u6cd5\u57fa\u4e8e\u8d2a\u5fc3\u601d\u60f3\uff0c\u5b83\u53ea\u9002\u7528\u4e8e\u6240\u6709\u8fb9\u7684\u957f\u5ea6\u90fd\u662f\u975e\u8d1f\u6570\u7684\u56fe\u3002\u5f53\u8fb9\u957f $z$ \u90fd\u662f\u975e\u8d1f\u6570\u65f6\uff0c\u5168\u5c40\n\u6700\u5c0f\u503c\u4e0d\u53ef\u80fd\u518d\u88ab\u5176\u4ed6\u8282\u70b9\u66f4\u65b0\uff0c\u6545\u5728\u7b2c1\u6b65\u4e2d\u9009\u51fa\u7684\u8282\u70b9x\u5fc5\u7136\u6ee1\u8db3: $ans_x$ \u5df2\u7ecf\u662f\u8d77\u70b9\u5230 $x$ \u7684\u6700\u77ed\u8def\n\u5f84\u3002\u6211\u4eec\u4e0d\u65ad\u9009\u62e9\u5168\u5c40\u6700\u5c0f\u503c\u8fdb\u884c\u6807\u8bb0\u548c\u6269\u5c55\uff0c\u6700\u7ec8\u53ef\u5f97\u5230\u8d77\u70b9 $1$ \u5230\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\uff0c\u800c\u672c\u9898\u53ea\u9700\u5f97\u5230\u8d77\u70b9 $1$ \u5230 $N$ \u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u5373\u53ef\u3002\n\n\u77e5\u9053\u4e86\u8fd9\u4e2a\u4e4b\u540e\u505a\u8fd9\u9898\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u6839\u636e\u8fd9\u4e2a\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u6700\u77ed\u8def\u5f84\u957f\u5ea6\uff0c\u53ef\u662f\u672c\u9898\u8fd8\u8981\u6c42\u6700\u77ed\u8def\u5f84\u7684\u6570\u91cf\uff0c\u8fd9\u4e2a\u600e\u4e48\u6c42\u5462\uff1f\n\n\u5176\u5b9e\u6700\u77ed\u8def\u5f84\u6570\u91cf\u80fd\u5728\u6c42\u6700\u77ed\u8def\u5f84\u7684\u540c\u65f6\u5f97\u51fa\u3002\u5224\u65ad\u662f\u5426\u66f4\u65b0\u67d0\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u6709\u4e09\u79cd\u4e0d\u540c\u60c5\u51b5\uff0c\u5bf9\u6700\u77ed\u8def\u5f84\u6570\u4e5f\u6709\u4e0d\u540c\u7684\u66f4\u65b0\u8fed\u4ee3\u3002\n\n1.\u82e5 $ans_y > ans_x+z$\n\n\u8bf4\u660e\u627e\u5230\u4e86\u66f4\u4f18\u7684\u65b9\u6848\uff0c\u5c31\u628a $num_y$ \u66f4\u6362\u6210\u73b0\u5728\u65b0\u65b9\u6848\u7684\u6700\u77ed\u8def\u5f84\u6570\u3002\n\n2.\u82e5$ans_y > ans_x+z$\n\n\u8bf4\u660e\u8981\u518d\u6b21\u8bbf\u95ee\u8fd9\u4e2a\u70b9\uff0c\u8fd9\u65f6\u5c31 \u8ba9 $num_y$ \u52a0\u4e0a\u5176\u5165\u5ea6\u7684\u6700\u77ed\u8def\u5f84\u6570\u91cf\n\n3.\u82e5$ans_y < ans_x+z$\n\n\u8bf4\u660e\u6ca1\u6709\u66f4\u4f18\u7684\u65b9\u6848\uff0c\u5373\u65e0\u9700\u53d8\u5316 $num_y$ \u3002\n\n# Code\uff1a\n```cpp\n#include<bits/stdc++.h> \nusing namespace std;\nint head[1000005],ver[1000005],ed[1000005],net[1000005],ans[10000005],num[1000005];\nint n,m,s,tot,x,y,z,chong[10005][10005];\nbool flag[1000005]\npriority_queue< pair<int ,int > > q;;  //\u5927\u6839\u5806\uff0c\u7528\u4e8e\u4f18\u5316dijkstra\nvoid add(int x,int y,int z)   // \u90bb\u63a5\u8868\u5b58\u56fe\uff0c\u8868\u793a\u5efa\u7acb\u4e00\u6761\u7531 x \u6307\u5411 y\uff0c \u8fb9\u6743\u4e3a z \u7684\u8fb9\n{\n\tver[++tot]=y;\n\ted[tot]=z;\n\tnet[tot]=head[x];\n\thead[x]=tot;\n}\nvoid dijkstra()  // dijkstra\u6700\u77ed\u8def\u7b97\u6cd5\n{\n\tmemset(flag,0,sizeof(flag));\n\tans[1]=0;    //\u4ece 1 \u5f00\u59cb\n\tnum[1]=1;\n\tq.push(make_pair(0,1));   //\u5efa\u8fb9\n\twhile(!q.empty())\n\t{\n\tint sum=q.top().second;   //\u627e\u51fa\u5806\u9876\u5143\u7d20\n\tq.pop();\n\tif(flag[sum])\n\tcontinue;\n\tflag[sum]=1;\n\tfor(int i=head[sum];i;i=net[i]){\n\tint y=ver[i],z=ed[i];\n\tif(ans[y]>ans[sum]+z)   //\u5982\u679c\u53d1\u73b0\u66f4\u77ed\u7684\u8def\u5f84\u9009\u62e9\uff0c\u5c31\u66f4\u65b0\u70b9\u7684\u6700\u5c0f\u8def\u5f84\u6570\n\t{\n\t\tans[y]=ans[sum]+z; // ans\u6570\u7ec4\u5b58\u50a8\u6700\u5c11\u82b1\u8d39\n\t\tnum[y]=num[sum];   // num\u6570\u7ec4\u5b58\u50a8\u6700\u5c11\u8def\u5f84\u7684\u6570\u91cf\n\t\tq.push(make_pair(-ans[y],y));\n\t}\n\telse\n\tif(ans[y]==ans[sum]+z)\n\tnum[y]+=num[sum];  // \u957f\u5ea6\u76f8\u540c\u4fbf\u628a\u8fd9\u4e2a\u70b9\u7684\u6700\u5c11\u82b1\u8d39\u8def\u5f84\u6570\u52a0\u4e0a\u5b83\u5165\u5ea6\u7684\u6700\u5c11\u82b1\u8d39\u8def\u5f84  \n\t}\n\t}\n}\nint main()\n{\n\tios::sync_with_stdio(0);\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\tans[i]=2147483647;   //\u5c06\u7b54\u6848\u521d\u59cb\u5316\u6210\u4e00\u4e2a\u5f88\u5927\u7684\u6570\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>x>>y>>z;    //\u8f93\u5165\u8fb9\u7684\u4fe1\u606f\n\t\tif(chong[x][y]==z)  //\u5224\u65ad\u91cd\u8fb9\uff0c\u53bb\u91cd\u5904\u7406\n\t\tcontinue;\n\t\tadd(x,y,z);  //\u5efa\u8fb9\n\t\tchong[x][y]=z;\n\t}\n\tdij);\n\tif(ans[n]==2147483647)  //\u5982\u679c\u7b54\u6848\u6ca1\u6709\u53d8\u5316\uff0c\u8f93\u51fa No answer\n\tcout<<\"No answer\"<<'\\n';  \n\telse                   //\u5426\u5219\u8f93\u51fa\u7b54\u6848\n\tcout<<ans[n]<<' '<<num[n]<<'\\n';\n\treturn 0;\n}\n```\n",
        "postTime": 1656991349,
        "uid": 527992,
        "name": "kaceqwq",
        "ccfLevel": 0,
        "title": "P1608\u9898\u89e3"
    },
    {
        "content": "### \u9898\u5916\u8bdd\n\u5efa\u8bae\u5148\u5199\u8fd9\u9898 [P1144 \u6700\u77ed\u8def\u8ba1\u6570](https://www.luogu.com.cn/problem/P1144)\n\n\u53ef\u4ee5\u8bf4\u6b64\u9898\u4e3a P1144 \u52a0\u5f3a\u7248\u3002\n\n### \u601d\u8def\n\u5206\u4e3a\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\n1. \u6211\u4eec\u53ea\u9700\u8981\u5728 dijkstra \u4e2d\u68c0\u67e5\u662f\u5426\u4f1a\u66f4\u65b0\u70b9\uff0c\u5982\u679c\u66f4\u65b0\uff0c\u5219\u5c06\u88ab\u66f4\u65b0\u7684\u70b9\u7684\u6700\u5c11\u82b1\u8d39\u8def\u5f84\u6570\u8bbe\u4e3a $0$\u3002\n\n1. \u5982\u679c\u4e00\u4e2a\u70b9\u5230\u53e6\u4e00\u4e2a\u70b9\u7684\u82b1\u8d39\u521a\u597d\u4e3a\u5230\u8fbe\u7684\u70b9\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u5373\u518d\u6b21\u5230\u8fbe\u4e86\u90a3\u4e2a\u70b9\uff0c\u5230\u8fbe\u7684\u70b9\u7684\u6700\u5c0f\u82b1\u8d39\u8def\u5f84\u6570\u5c31\u4f1a\u52a0\u4e0a\u5b83\u5165\u5ea6\u7684\u6700\u5c11\u82b1\u8d39\u8def\u5f84\u3002\n\n### \u6838\u5fc3\u4ee3\u7801\n\u64cd\u4f5c\u4e00\uff1a\n```cpp\nif (d[y] > d[minn] + z) { //d \u6570\u7ec4\u4e3a\u6700\u5c0f\u82b1\u8d39\uff0c\u66f4\u65b0\u64cd\u4f5c\u3002\n\td[y] = d[minn] + z;\n\tq.push(make_pair(-d[y], y));\n\tans[y] = 0;\n}\n```\n\n\u64cd\u4f5c\u4e8c\uff1a\n\n```cpp\nif (d[y] == d[minn] + z) {\n\tans[y] += ans[minn];\n}\n```\n### \u5c0f\u5751\u70b9\n\u91cd\u8fb9\u53ea\u7b97\u8fb9\u6743\u6700\u5c0f\u7684\u5c31\u597d\u4e86\u3002",
        "postTime": 1656990143,
        "uid": 514850,
        "name": "Acerkaio",
        "ccfLevel": 4,
        "title": "P1608 \u8def\u5f84\u7edf\u8ba1"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u6c42\u4ece $1$ \u5230 $n$ \u7684\u6700\u77ed\u8def\u7684\u6570\u91cf\u3002\n\n## \u9898\u89e3\n\n\u5173\u4e8e `SPFA`\uff0c\u5b83\u6b7b\u4e86\u3002\u7528 `Dijkstra`\u3002\n\n\u9898\u76ee\u8981\u6c42\u6700\u77ed\u8def\u7684\u6570\u91cf\uff0c\u90a3\u5c31\u65b0\u5f00\u4e00\u4e2a\u6570\u7ec4 $s[i]$ \u8bb0\u5f55\u4ece $1$ \u5230 $i$ \u7684\u6700\u77ed\u8def\u6570\u91cf\u3002\n\n\u600e\u4e48\u66f4\u65b0\u8fd9\u4e2a\u6570\u7ec4\u7684\u503c\u5462\uff1f\n\n\u5206\u7c7b\u8ba8\u8bba\u3002\u5728\u677e\u5f1b\u65f6\u5982\u679c $d[v]>d[u]+w$\uff08$d[i]$ \u8bb0\u5f55\u4ece $1$ \u5230 $i$ \u7684\u6700\u77ed\u8def\u957f\u5ea6\uff0c$w$ \u4e3a\u8fb9\u6743\uff09\u8bf4\u660e\u4e4b\u524d\u7684\u4e0d\u662f\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u628a $s[v]$ \u66f4\u65b0\u4e3a $s[u]$\u3002\n\n\u5982\u679c $d[v]=d[u]+w$\uff0c\u8bf4\u660e\u53c8\u5f97\u5230\u4e86\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u628a $s[v]$ \u52a0\u4e0a $s[u]$\u3002\n\n\u4e0d\u8981\u5fd8\u4e86\u53ef\u80fd\u6709\u91cd\u8fb9\u3002\u8fd9\u91cc\u6211\u7528\u90bb\u63a5\u77e9\u9635\uff0c\u6bd4 `vector` \u65b9\u4fbf\u4e00\u4e9b\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst int N=2005;\nint n,m,d[N],v[N],s[N],e[N][N];\npriority_queue<pair<int,int>> q;\nvoid dijkstra()\n{\n\tmemset(d,0x3f,sizeof(d));\n\td[1]=0; s[1]=1;\n\tq.push(make_pair(0,1));\n\twhile(!q.empty())\n\t{\n\t\tint u=q.top().second;\n\t\tq.pop(); \n\t\tif(v[u]) continue;\n\t\tv[u]=1;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tint v=i,w=e[u][i];\n\t\t\tif(d[v]>d[u]+w)\n\t\t\t{\n\t\t\t\td[v]=d[u]+w;\n\t\t\t\ts[v]=s[u];\n\t\t\t\tq.push(make_pair(-d[v],v));\n\t\t\t}\n\t\t\telse if(d[v]==d[u]+w)\ts[v]+=s[u];\n\t\t}\n\t}\n}\nint main()\n{\n\tmemset(e,0x3f,sizeof(e));\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v,w;\n\t\tcin>>u>>v>>w;\n\t\te[u][v]=min(e[u][v],w);\n\t}\n\tdijkstra();\n\tif(d[n]==0x3f3f3f3f)\tcout<<\"No answer\";\n\telse\tcout<<d[n]<<\" \"<<s[n];\n\treturn 0;\n}\n```",
        "postTime": 1649047549,
        "uid": 356750,
        "name": "Emp7iness",
        "ccfLevel": 0,
        "title": "P1608 \u8def\u5f84\u7edf\u8ba1 \u9898\u89e3"
    }
]