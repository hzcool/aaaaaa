[
    {
        "content": "# \u5e7f\u544a\n\n[\u849f\u84bb\u7684blog](http://www.cnblogs.com/dedicatus545/p/8781237.html)\n\n# \u6b63\u6587\n\n\u9996\u5148\u6211\u4eec\u660e\u786e\u4e00\u70b9\uff1a\u8fd9\u9053\u9898\u4e0d\u662f\u8ba9\u4f60\u628a$n^2$\u4e2a\u6700\u5c0f\u5272\u8dd1\u4e00\u904d\u3010\u5e9f\u8bdd\u3011\n\n\u4f46\u662f\u6700\u5c0f\u5272\u8fc7\u7a0b\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u6700\u5c0f\u5272\u5e76\u6ca1\u6709\u522b\u7684\u6548\u7387\u66f4\u9ad8\u7684\u7b97\u6cd5(Stoer-Wagner\u4e4b\u7c7b\u7684\uff1f)\n\n\u90a3\u6211\u4eec\u5c31\u8981\u5c3d\u91cf\u627e\u529e\u6cd5\u51cf\u5c11\u505a\u6700\u5927\u6d41\uff08\u6c42\u6700\u5c0f\u5272\uff09\u7684\u6b21\u6570\n\n# \u6700\u5c0f\u5272\u6811\n\n\u5c31\u50cf\u6700\u5c0f\u751f\u6210\u6811\u4e00\u6837\uff0c\u6700\u5c0f\u5272\u4e5f\u6709\u81ea\u5df1\u7684\u751f\u6210\u6811\n\n\u6211\u4eec\u65b0\u5efa\u7acb\u4e00\u4e2a\u6709n\u4e2a\u70b9\uff0c\u6ca1\u6709\u8fb9\u7684\u65e0\u5411\u56fe\n\n\u6211\u4eec\u5728\u539f\u65e0\u5411\u56fe\u4e2d\u4efb\u9009\u4e24\u4e2a\u70b9S,T\uff0c\u6c42\u51faS-T\u6700\u5c0f\u5272\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728S-T\u4e2d\u95f4\u52a0\u4e00\u6761\u6743\u503c\u7b49\u4e8e\u6700\u5c0f\u5272\u503c\u5f97\u65e0\u5411\u8fb9\n\n\u7136\u540e\uff0c\u5206\u522b\u5bf9S\u5c5e\u4e8e\u7684\u70b9\u96c6\u5408\u548cT\u5c5e\u4e8e\u7684\u70b9\u96c6\u5408\u9012\u5f52\u505a\u4e0a\u9762\u7684\u8fc7\u7a0b\uff0c\u76f4\u5230\u5f53\u524d\u5904\u7406\u7684\u96c6\u5408\u53ea\u5269\u4e0b\u4e00\u4e2a\u70b9\u4e86\n\n\u73b0\u5728\uff0c\u5bf9\u4e8e\u8fd9\u68f5\u65b0\u6811\uff08\u663e\u7136\u662f\u4e00\u68f5\u6811\uff0c\u53ef\u4ee5\u81ea\u5df1\u9000\u4e00\u4e0b\u4e3a\u4ec0\u4e48\uff09\uff0c\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a\n\n\u6811\u4e0a\u4efb\u610f\u4e24\u4e2a\u70b9\u5728\u539f\u56fe\u4e2d\u7684\u5bf9\u5e94\u70b9\u4e4b\u95f4\u7684\u6700\u5c0f\u5272\u503c\u7b49\u4e8e\u8fd9\u4e24\u4e2a\u70b9\u7684\u6811\u4e0a\u8def\u5f84\u4e2d\u8fb9\u6743\u7684\u6700\u5c0f\u503c\n\n\u8bc1\u660e\uff1f\u6211\u4e5f\u4e0d\u77e5\u9053\u554a\uff01\n\n\u4f46\u662f\u8fd9\u4e2a\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u662f\u53ef\u4ee5\u4fdd\u8bc1\u7684\uff08\u4f60\u4e5f\u53ef\u4ee5\u611f\u6027\u7406\u89e3\u4e00\u4e0bqwq\uff09\n\n# \u505a\u6cd5\n\n\u6709\u4e86\u8fd9\u4e2a\u201c\u5927\u6740\u5668\u201d\u4ee5\u540e\uff0c\u8fd9\u9053\u9898\u4e5f\u5c31\u8fce\u5203\u800c\u89e3\u4e86~\n\n\u8fd9\u9053\u9898\u76ee\u7684\u70b9\u6570\u5f88\u5c0f\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u8981\u628a\u6240\u6709\u641e\u51fa\u6765\u7684\u6700\u5c0f\u5272\u503c\u4f9d\u6b64\u66f4\u65b0\u70b9\u5bf9\n\n\u5904\u7406\u8be2\u95ee\u7684\u65f6\u5019\u5c31\u628a\u6240\u6709\u7684\u70b9\u5bf9\u626b\u4e00\u904d\u8f93\u51fa\u5c31\u597d\u4e86\n\n# Code\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cassert>\n#define inf 1e9\nusing namespace std;\ninline int read(){\n\tint re=0,flag=1;\n\tscanf(\"%d\",&re);return re;\n\tchar ch=getchar();\n\twhile(ch>'9'||ch<'0'){\n\t\tif(ch=='-') flag=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') re=(re<<1)+(re<<3)+ch-'0',ch=getchar();\n\treturn re*flag;\n}\nint n,m,cnt,first[210],dep[210],cur[210],ans[160][160];\nstruct edge{\n\tint to,next,w,W;\n}a[10010];\ninline void add(int u,int v,int w){\n\ta[++cnt]=(edge){v,first[u],w,w};first[u]=cnt;\n\ta[++cnt]=(edge){u,first[v],w,w};first[v]=cnt;\n}\nbool bfs(int s,int t){\n\tint q[210],head=0,tail=1,i,u,v;\n\tfor(i=1;i<=n;i++) dep[i]=-1,cur[i]=first[i];\n\tq[0]=s;dep[s]=0;\n\twhile(head<tail){\n\t\tu=q[head++];\n\t\tfor(i=first[u];~i;i=a[i].next){\n\t\t\tv=a[i].to;\n\t\t\tif(~dep[v]||!a[i].w) continue;\n\t\t\tdep[v]=dep[u]+1;q[tail++]=v;\n\t\t}\n\t}\n\treturn ~dep[t];\n}\nint dfs(int u,int t,int limit){\n\tif(u==t||!limit) return limit;\n\tint i,v,f,flow=0;\n\tfor(i=first[u];~i;i=a[i].next){\n\t\tv=a[i].to;\n\t\tif(dep[v]==dep[u]+1&&(f=dfs(v,t,min(limit,a[i].w)))){\n\t\t\ta[i].w-=f;a[i^1].w+=f;\n\t\t\tflow+=f;limit-=f;\n\t\t\tif(!limit) return flow;\n\t\t}\n\t}\n\treturn flow;\n}\nint dinic(int s,int t){\n\tint re=0;\n\twhile(bfs(s,t)) re+=dfs(s,t,inf);\n\treturn re;\n}\nvoid clear(){\n\tfor(int i=0;i<=cnt;i++) a[i].w=a[i].W;\n}\nvoid init(){\n\tmemset(first,-1,sizeof(first));memset(a,0,sizeof(a));cnt=-1;\n\tmemset(ans,127,sizeof(ans));\n}\nint node[210],vis[210];\nvoid cut(int u){\n\tint i,v;vis[u]=1;\n\tfor(i=first[u];~i;i=a[i].next){\n\t\tv=a[i].to;\n\t\tif(a[i].w&&!vis[v]) cut(v);\n\t}\n}\nvoid solve(int l,int r){\n\tif(l==r) return;\n\tclear();int i,j,tmp,t[2][210]={0};\n\tmemset(vis,0,sizeof(vis));\n\ttmp=dinic(node[l],node[r]);\n\tcut(node[l]);\n\tfor(i=1;i<=n;i++)\n\t\tif(vis[i])\n\t\t\tfor(j=1;j<=n;j++)\n\t\t\t\tif(!vis[j])\n\t\t\t\t\tans[i][j]=ans[j][i]=min(ans[i][j],tmp);\n\tfor(i=l;i<=r;i++) t[vis[node[i]]][++t[vis[node[i]]][0]]=node[i];\n\tfor(i=l,j=1;j<=t[0][0];j++,i++) node[i]=t[0][j];\n\tfor(i=l+t[0][0],j=1;j<=t[1][0];j++,i++) node[i]=t[1][j];\n\tsolve(l,l+t[0][0]-1);solve(l+t[0][0],r);\n}\nint main(){\n\tint i,j,k,T=read(),t1,t2,t3,q;\n\twhile(T--){\n\t\tinit();\n\t\tn=read();m=read();\n\t\tfor(i=1;i<=m;i++) t1=read(),t2=read(),t3=read(),add(t1,t2,t3);\n\t\tfor(i=1;i<=n;i++) node[i]=i;\n\t\tsolve(1,n);\n\t\tq=read();\n\t\tfor(k=1;k<=q;k++){\n\t\t\tt1=read();int tmp=0;\n\t\t\tfor(i=1;i<=n;i++){\n\t\t\t\tfor(j=i+1;j<=n;j++) if(ans[i][j]<=t1) tmp++;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",tmp);\n\t\t}\n\t\tputs(\"\");\n\t}\n}\n```",
        "postTime": 1523355135,
        "uid": 27753,
        "name": "Orion545",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3329 \u3010[ZJOI2011]\u6700\u5c0f\u5272\u3011"
    },
    {
        "content": "## 1. \u524d\u7f6e\u77e5\u8bc6\n\n[\u6700\u5c0f\u5272\u6811\uff08Gomory-Hu Tree\uff09](https://www.luogu.com.cn/problem/P4897)\n\n\u5982\u679c\u4f60\u4e0d\u77e5\u9053\uff0c\u53ef\u4ee5\u770b [\u7f51\u7edc\u6d41](https://www.luogu.com.cn/blog/mydcwfy-342891/network-flow) \u6216 [\u6700\u5c0f\u5272\u6811](https://www.luogu.com.cn/blog/mydcwfy-342891/solution-p4897) \uff08 ~~\u90fd\u662f\u6211\u7684\u535a\u5ba2~~ \uff09\n\n\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u770b\u4e00\u4e0b\u4e0b\u9762\u7684\u89e3\u91ca\u3002\n\n## 2. \u6700\u5c0f\u5272\u6811\uff08Gomory-Hu Tree\uff09\n\n\uff08 ~~\u8fd9\u4e5f\u662f\u6765\u81ea\u6211\u7684\u535a\u5ba2~~ \uff09\n\n\u5f88\u660e\u663e\uff0c\u4e0d\u53ef\u80fd\u6bcf\u6b21\u6c42\u6700\u5c0f\u5272\uff08\u590d\u6742\u5ea6\u4e3a $O(n^4m)$\uff09\u3002\n\n\u6211\u4eec\u5c06\u4e00\u4e2a\u7f51\u7edc\u6d41\u7684\u56fe\u8f6c\u5316\u4e3a\u4e00\u68f5\u6811\uff0c\u5176\u4e2d\u539f\u56fe $u$ \u5230 $v$ \u7684\u6700\u5c0f\u5272\u5373\u4e3a\u8f6c\u5316\u5230\u6811\u4e0a\u3002\n\n\u6811\u7684\u4e00\u4e2a\u6027\u8d28\u662f\uff1a\u5220\u9664\u4e00\u6761\u8fb9\uff0c\u6811\u53d8\u5f97\u4e0d\u8fde\u901a\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u4efb\u610f\u9009 2 \u4e2a\u70b9 $s$ \u4e0e $t$\uff0c\u8dd1\u6700\u5c0f\u5272\uff08\u5373\u6700\u5927\u6d41\uff09\uff0c\u7136\u540e\u518d\u8fde\u4e00\u6761\u4ece $s$ \u5230 $t$ \u7684\u8fb9\u3002\n\n\u53c8 Dinic \u7b97\u6cd5\u6700\u540e\u4e00\u6b21 bfs \u76f8\u5f53\u4e8e\u6c42\u4e00\u4e2a\u6700\u5c0f\u5272\uff0c\u539f\u56fe\u5c31\u88ab\u5206\u4e3a\u4e86\u4e24\u90e8\u5206\u3002\n\n\u6700\u540e\u5206\u6cbb\u5c31\u53ef\u4ee5\u4e86\uff0c\u590d\u6742\u5ea6\u4e3a $O(n^3m)$\uff08Dinic \u8dd1\u4e0d\u6ee1\u7684\uff0c\u6240\u4ee5\u4e0d\u4f1a\u8d85\u65f6\uff09\u3002\n\n\u6309\u8fd9\u6837\u5efa\u51fa\u7684\u6811\uff0c\u5c31\u662f\u4e00\u68f5\u65e0\u6839\u6811\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u6709\u8da3\u7684\u6027\u8d28\uff1a$u$ \u5230 $v$ \u7684\u6700\u5c0f\u5272\u5c31\u662f\u6811\u4e0a\u4ece $u$ \u5230 $v$ \u7684\u6240\u6709\u8def\u5f84\u957f\u7684\u6700\u5c0f\u503c\u3002\n\n\u53ef\u4ee5\u611f\u6027\u5730\u7406\u89e3\u4e00\u4e0b\uff08 ~~\u4e3b\u8981\u662f\u592a\u83dc\u4e0d\u4f1a\u8bc1~~ \uff09\uff1a\u6700\u5c0f\u5272\u5373\u4e3a\u6700\u5c0f\u7684\u8def\u5f84\u957f\uff0c\u628a $u$ \u5230 $v$ \u7684\u4efb\u610f\u4e00\u6761\u8def\u5f84\u5207\u65ad\uff0c\u90fd\u662f\u5272\u3002\n\n## 3. \u56de\u5f52\u672c\u9898\n\n\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u3002\n\n\u76f4\u63a5\u9884\u5904\u7406\uff0c\u5c06\u6240\u6709\u7684\u70b9\u5bf9\u4e4b\u95f4\u7684\u6700\u5c0f\u5272\u6c42\u51fa\u6765\u3002\n\n\u6709\u4e00\u4e0b\u4e24\u79cd\u505a\u6cd5\u3002\n\n### 1\uff09 \u76f4\u63a5\u626b\u63cf\n\n\u7531\u4e8e\u51fa\u9898\u4eba\u6bd4\u8f83\u826f\u5fc3\uff0c\u8fd9\u4e2a\u9898\u7684 $Q$ \u6bd4\u8f83\u5c11\uff0c\u53ef\u4ee5\u901a\u8fc7 $O(Qn^2)$\uff0c\u8fd8\u662f\u53ef\u4ee5\u8fc7\u7684\u3002\n\n### 2\uff09 \u4f7f\u7528\u6709\u5e8f\u6392\u5217\n\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u5148\u5c06\u6240\u6709\u7684\u6700\u5c0f\u5272\u6392\u5e8f\u597d\uff0c\u6bcf\u6b21\u8be2\u95ee\uff0c\u76f4\u63a5\u67e5\u8be2\u5728\u6709\u5e8f\u6570\u5217\u4e2d\u7684\u4f4d\u7f6e\uff0c\u51cf\u4e0b\u6807\u5373\u53ef\u3002\n\n~~\u6211\u592a\u61d2\u4e86~~\uff0c\u4f7f\u7528\u4e86\u7b2c\u4e00\u79cd\u3002\n\n## 4. Code\n\n\u6ce8\u610f\u8981\u5efa\u53cc\u5411\u8fb9\uff0c\u5426\u5219\u5c31\u4e0d\u662f\u4e24\u8fb9\u90fd\u53ef\u4ee5\u88ab\u5272\u6389\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n#define ll long long\nusing namespace std;\n\nconst int N=1005,M=1e5+10;\nconst ll INF=1e15;\n\nint h[N],e[M],ne[M],idx;\nll w[M],ans[N][N];\nint cur[N],d[N],q[N],S,T,n,m;\nint node[N],tmp1[N],tmp2[N];\n\nvoid add(int a,int b,int c)\n{\n\te[idx]=b,ne[idx]=h[a],w[idx]=c,h[a]=idx++;\n\te[idx]=a,ne[idx]=h[b],w[idx]=0,h[b]=idx++;\n}\n\nbool bfs()\n{\n\tmemset(d,0,sizeof d);\n\tint hh=1,tt=1;\n\tq[1]=S;cur[S]=h[S];d[S]=1;\n\twhile (hh<=tt)\n\t{\n\t\tint x=q[hh++];\n\t\tfor (int i=h[x];~i;i=ne[i])\n\t\t\tif (!d[e[i]]&&w[i])\n\t\t\t{\n\t\t\t\td[e[i]]=d[x]+1;\n\t\t\t\tcur[e[i]]=h[e[i]];\n\t\t\t\tif (e[i]==T) return true;\n\t\t\t\tq[++tt]=e[i];\n\t\t\t}\n\t}\n\treturn false;\n}\n\nint findflow(int x,ll limit)\n{\n\tif (x==T) return limit;\n\tll flow=0;\n\tfor (int i=cur[x];~i&&flow<limit;i=ne[i])\n\t{\n\t\tcur[x]=i;\n\t\tif (d[e[i]]==d[x]+1&&w[i])\n\t\t{\n\t\t\tint t=findflow(e[i],min(w[i],limit-flow));\n\t\t\tif (!t) d[e[i]]=-1;\n\t\t\tw[i]-=t,w[i^1]+=t,flow+=t;\n\t\t}\n\t}\n\treturn flow;\n}\n\nvoid init()\n{\n\tfor (int i=0;i<idx;i+=2)\n\t\tw[i]=(w[i]+w[i^1]),w[i^1]=0;\n\treturn;\n}\n\nll dinic()\n{\n\tinit();\n\tll r=0,flow;\n\twhile (bfs()) while (flow=findflow(S,INF)) r+=flow;\n\treturn r;\n}\n\nvoid work(int l,int r)\n{\n\tif (l==r) return ;\n\tS=node[l],T=node[l+1];\n\tll t=dinic();\n    int s=node[l],tt=node[l+1];\n\tans[T][S]=ans[S][T]=t;\n//\tprintf(\"%d %d:%d\\n\",S,T,ans[S][T]);\n\tint cnt1=0,cnt2=0;\n\tfor (int i=l;i<=r;++i)\n\t\tif (d[node[i]]) tmp1[++cnt1]=node[i];\n\t\telse tmp2[++cnt2]=node[i];\n\tfor (int i=1;i<=cnt1;++i) node[i+l-1]=tmp1[i];\n\tfor (int i=1;i<=cnt2;++i) node[cnt1+l+i-1]=tmp2[i];\n\twork(l,l+cnt1-1);\n\twork(l+cnt1,r);\n\tfor (int i=1;i<=cnt1;++i)\n\t\tfor (int j=1;j<=cnt2;++j)\n\t\t{\n\t\t\tint ii=node[i+l-1],jj=node[j+cnt1+l-1];\n\t\t\tans[jj][ii]=ans[ii][jj]=min(min(ans[ii][s],ans[s][tt]),ans[tt][jj]);\n\t\t}\n\treturn;\n}\n\nint main()\n{\n    int Case=0;cin>>Case;\n    while (Case--)\n    {\n        memset(h,-1,sizeof h);\n        idx=0;\n        cin>>n>>m;\n        for (int i=1;i<=n;++i)\n            for (int j=1;j<=n;++j) ans[i][j]=INF;\n        int x,y;\n        ll z;\n        while (m--)\n        {\n            scanf(\"%d %d %lld\",&x,&y,&z);\n            add(x,y,z);add(y,x,z);\n        }\n        for (int i=0;i<=n;++i) node[i]=i;\n        work(1,n);\n        int que;cin>>que;\n        while (que--)\n        {\n            scanf(\"%lld\",&z);\n            int tot=0;\n            for (int i=1;i<=n;++i)\n                for (int j=1;j<=n;++j)\n                    if (ans[i][j]<=z) tot++;\n            printf(\"%d\\n\",tot/2);\n        }\n        puts(\"\");\n    }\n\treturn 0;\n}\n```\n\n",
        "postTime": 1620521108,
        "uid": 342891,
        "name": "mydcwfy",
        "ccfLevel": 9,
        "title": "P3329 \u9898\u89e3"
    },
    {
        "content": "\u591a\u6b21\u67e5\u8be2\u6700\u5c0f\u5272\uff0c\u4e0d\u4f1a\u5feb\u901f\u8ba1\u7b97\uff0c\u53ea\u4f1a $n^2$ \u8ba1\u7b97\u6700\u5c0f\u5272\uff0c\u4f46\u662f\u5355\u7ec4\u6570\u636e\u590d\u6742\u5ea6\u662f $\\mathcal{O}(n^4m+qn^2)$ \u7684\u600e\u4e48\u529e\uff1f\n\n\u5408\u7406\u60f3\u5230\u6700\u5c0f\u5272\u6811\u3002\n\n\u5927\u6982\u6709\u4e2a\u5b9a\u7406\uff1a\u4efb\u9009\u4e24\u4e2a\u70b9 $s,t$ \u8dd1\u6700\u5c0f\u5272\u4e3a $c$\uff0c\u7136\u540e\u5728\u4e00\u5f20\u65b0\u56fe\u4e0a\u8fde\u4e00\u6761\u8fb9 $(s,t)$\uff0c\u6743\u503c\u4e3a $c$\uff0c\u5e76\u4e14\u5bf9\u5206\u522b\u5728 $s$ \u548c $t$ \u8fde\u901a\u5757\u91cc\u7684\u70b9\u5206\u6cbb\u8ba1\u7b97\u5e76\u5efa\u56fe\uff0c\u5219\u5f97\u5230\u7684\u662f\u4e00\u68f5\u6811\uff0c\u800c\u4e14\u4e24\u70b9\u7684\u6700\u5c0f\u5272\u7b49\u4e8e\u6811\u4e0a\u8def\u5f84\u4e2d\u7684\u6700\u5c0f\u503c\u3002\n\n\u8fd9\u68f5\u6811\u79f0\u4e3a\u8fd9\u4e2a\u7f51\u7edc\u7684\u6700\u5c0f\u5272\u6811\u3002\n\n\u5229\u7528\u6811\u4e0a\u500d\u589e\u548c\u7c7b\u4f3c\u8dd1 `lca` \u7684\u65b9\u6cd5\u53ef\u4ee5\u5728\u5355\u6b21 $\\mathcal{O}(\\log n)$ \u7684\u65f6\u95f4\u5185\u8dd1\u51fa\u4e24\u70b9\u95f4\u7684\u6700\u5c0f\u5272\u3002\n\n\u9884\u5904\u7406\u7684\u590d\u6742\u5ea6\u662f $\\mathcal{O}(n^3m)$ \u7684\uff0c\u56e0\u4e3a\u4e00\u5171\u8981\u8dd1 $n$ \u6b21\u6700\u5c0f\u5272\u3002\n\n\u4f46\u662f\u663e\u7136\u8dd1\u4e0d\u6ee1\uff0c\u6240\u4ee5\u53ef\u8fc7\u3002\n\n\u9884\u5904\u7406\u51fa\u6765\u7136\u540e\u6bcf\u6b21 $\\mathcal{O}(n^2)$ \u67e5\u8be2\u5373\u53ef\u3002\n\n\u603b\u590d\u6742\u5ea6 $\\mathcal{O}(T(n^3m+n^2\\log n+qn^2))$\u3002\n\n```\n#include<bits/stdc++.h>\n#define N 159\n#define M 12009\n#define L 10\n#define INF 0x3f3f3f3f3f3f3f3f\nusing namespace std;\ntypedef long long ll;\ninline ll read() {\n    ll x=0,f=1;int c=getchar();\n    while(!isdigit(c)) {if(c=='-') f=-1;c=getchar();}\n    while(isdigit(c)) {x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    return x*f;\n}\nll t,n,m,q,f[N][N];\nnamespace Flow{\n    ll s,t,hd[N],tot=1,dst[N],nw[N],ans;\n    struct edge{ll t,w,nxt;} es[M];\n    void add(ll u,ll v,ll w){\n        es[++tot]=(edge){v,w,hd[u]},hd[u]=tot;\n        es[++tot]=(edge){u,0,hd[v]},hd[v]=tot;\n    }\n    void init(ll ss,ll tt){for(int i=2;i<=tot;i+=2) es[i].w=es[i].w+es[i^1].w,es[i^1].w=0;s=ss,t=tt;}\n    bool bfs(){\n        memset(dst,0x3f,sizeof(dst));\n        queue<ll> q;\n        q.push(s);\n        dst[s]=0;\n        nw[s]=hd[s];\n        while(!q.empty()){\n            ll x=q.front();q.pop();\n            for(int i=hd[x];i;i=es[i].nxt){\n                if(es[i].w>0&&dst[es[i].t]==INF){\n                    nw[es[i].t]=hd[es[i].t]; \n                    dst[es[i].t]=dst[x]+1;\n                    q.push(es[i].t);\n                    if(es[i].t==t) return 1;\n                }\n            }\n        }\n        return 0;\n    }\n    ll dfs(ll x,ll tot){\n        if(x==t) return tot;\n        ll sum=0,k;\n        for(int i=nw[x],v;i&&tot;i=es[i].nxt){\n            nw[x]=i;\n            v=es[i].t;\n            if(es[i].w>0&&dst[v]==dst[x]+1){\n                k=dfs(v,min(tot,es[i].w));\n                if(k==0) dst[v]=INF;\n                es[i].w-=k,es[i^1].w+=k;\n                tot-=k,sum+=k; \n            }\n        }\n        return sum;\n    }\n    ll dinic(){ll ans=0;while(bfs()) ans+=dfs(s,INF);return ans;}\n}\nnamespace tree{\n    ll hd[N],tot,id[N],t1[N],t2[N],d[N],fa[N][L],mn[N][L];\n    struct edge{ll t,w,nxt;} es[M];\n    void add(ll u,ll v,ll w){\n        es[++tot]=(edge){v,w,hd[u]},hd[u]=tot;\n        es[++tot]=(edge){u,w,hd[v]},hd[v]=tot;\n    }\n    void init(){for(int i=1;i<=n;i++) id[i]=i;memset(mn,0x3f,sizeof(mn));}\n    void build(ll l,ll r){\n        if(l==r) return;\n        Flow::init(id[l],id[l+1]);ll c=Flow::dinic();\n        add(id[l],id[l+1],c);\n        ll tt1=0,tt2=0;\n        for(int i=l;i<=r;i++){\n            if(Flow::dst[id[i]]<0x3f3f3f3f) t1[++tt1]=id[i];\n            else t2[++tt2]=id[i];\n        }\n        for(int i=l;i<l+tt1;i++) id[i]=t1[i-l+1];\n        for(int i=l+tt1;i<=r;i++) id[i]=t2[i-l-tt1+1];\n        build(l,l+tt1-1),build(l+tt1,r);\n    }\n    void dfs(ll x,ll f){\n        d[x]=d[f]+1,fa[x][0]=f;\n        for(int i=1;i<L;i++) fa[x][i]=fa[fa[x][i-1]][i-1],mn[x][i]=min(mn[x][i-1],mn[fa[x][i-1]][i-1]);\n        for(int i=hd[x],v;i;i=es[i].nxt){v=es[i].t;if(v!=f) mn[v][0]=es[i].w,dfs(v,x);}\n    }\n    void prep(){init(),build(1,n),dfs(1,0);}\n    ll query(ll u,ll v){\n        ll ans=INF;\n        if(d[u]<d[v]) swap(u,v);\n        for(int i=L-1;i>=0;i--) if(d[fa[u][i]]>=d[v]) ans=min(ans,mn[u][i]),u=fa[u][i];\n        if(u==v) return ans;\n        for(int i=L-1;i>=0;i--) if(fa[u][i]!=fa[v][i]) ans=min(ans,min(mn[u][i],mn[v][i])),u=fa[u][i],v=fa[v][i];\n        ans=min(ans,min(mn[u][0],mn[v][0]));return ans;\n    }\n}\nint main(){\n    //freopen(\"qaq.in\",\"r\",stdin);\n    //freopen(\"qaq.out\",\"w\",stdout);\n    t=read();\n    while(t--){\n        n=read(),m=read(),memset(Flow::hd,0,sizeof(Flow::hd)),Flow::tot=1;\n        memset(tree::hd,0,sizeof(tree::hd)),memset(tree::fa,0,sizeof(tree::fa)),tree::tot=0;\n        for(int i=1,u,v,w;i<=m;i++) u=read(),v=read(),w=read(),Flow::add(u,v,w),Flow::add(v,u,w);\n        tree::prep(),q=read();\n        for(int i=1;i<=n;i++) for(int j=1;j<=n;j++) f[i][j]=tree::query(i,j);\n        for(int i=1;i<=q;i++){\n            ll ans=0,w=read();\n            for(int i=1;i<=n;i++) for(int j=i+1;j<=n;j++) ans+=(f[i][j]<=w);\n            printf(\"%lld\\n\",ans);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1645878593,
        "uid": 278629,
        "name": "Rubidium_Chloride",
        "ccfLevel": 7,
        "title": "\u6700\u5c0f\u5272\u6811nb\u2014\u2014"
    },
    {
        "content": "\u9996\u5148\u660e\u786e\u6700\u5c0f\u5272\u6811\u7684\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4efb\u610f\u6811\u4e0a\u7684\u8fb9 $(u,v)$\uff0c\u5220\u9664\u56fe\u4e0a\u7684\u70b9 $u,v$\uff0c\u6811\u4e0a\u7684\u8fb9 $(u,v)$\uff0c\u4e4b\u540e\uff0c\u56fe\u4f1a\u5206\u6210\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u5728\u6811\u4e0a\u4e0e $u$ \u8fde\u901a\uff0c\u53e6\u4e00\u90e8\u5206\u5728\u6811\u4e0a\u4e0e $v$ \u8fde\u901a\uff0c\u6811\u4e0a\u8fb9 $(u,v)$ \u7684\u8fb9\u6743\u4e3a\u56fe\u4e0a $u,v$ \u4e4b\u95f4\u7684\u6700\u5c0f\u5272\u3002\n\n\u540c\u65f6\uff0c\u56fe\u4e0a\u4efb\u610f\u4e24\u70b9\u7684\u6700\u5c0f\u5272\u662f\u5b83\u4eec\u7684\u6811\u4e0a\u8def\u5f84\u8fb9\u6743\u6700\u5c0f\u503c\u3002\n\n\u4e8e\u662f\uff0c\u53ea\u8981\u5c06\u6811\u5efa\u51fa\u6765\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0 $O(1)$ \u67e5\u8be2\u6700\u5c0f\u5272\u5566\uff01\n\n\u95ee\u9898\u6765\u4e86\uff1a\u600e\u4e48\u5efa\u6811\uff1f\n\n\u4e8b\u5b9e\u4e0a\uff0c\u6700\u5c0f\u5272\u6811\u7684\u6027\u8d28\u544a\u8bc9\u6211\u4eec\uff0c\u5176\u5b9e\u53ea\u8981\u4e0d\u65ad\u52a0\u8fb9\u5c31\u53ef\u4ee5\u4e86\uff0c\u5177\u4f53\u505a\u6cd5\u662f\uff1a\n\n1. \u5b9a\u4e49 $solve(l,r)$ \u4e3a\u5c06\u533a\u95f4 $[l,r]$\u7684\u8282\u70b9\u5efa\u6811\uff1b\n2. \u6c42\u51fa $MinCut(a_l,a_r)$\uff1b\n3. \u5224\u65ad $[l,r]$ \u4e2d\u90a3\u4e9b\u70b9\u4e0e $a_l$ \u8fde\u901a\uff0c\u90a3\u4e9b\u70b9\u4e0e $a_r$ \u8fde\u901a\uff0c\u5e76\u5c06\u5176\u5212\u5206\u4e3a $[l,lc],[rc,r]$\uff0c\u53ef\u4ee5\u7528\u6700\u540e\u4e00\u6b21\u5e7f\u641c\u8282\u70b9\u662f\u5426\u88ab\u641c\u5230\u4e3a\u6807\u51c6\u5224\u65ad\uff1b\n4. \u9012\u5f52\uff1a$solve(l,lc),solve(rc,r)$\uff1b\n5. $n$ \u904d\u6df1\u641c\u6c42\u51fa\u6811\u4e0a\u4efb\u610f\u4e24\u70b9\u8def\u5f84\u4e0a\u7684\u6700\u5c0f\u8fb9\u6743\u3002\n\n\u7136\u540e\u67e5\u8be2\u5c31\u53ef\u4ee5\u5566\uff01\n\n##  code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=205,M=6005;\nchar buf[M+5],*p1,*p2,c;\n#define gc (p1==p2&&(p2=(p1=buf)+fread(buf,1,M,stdin),p1==p2)?EOF:*p1++)\ninline int read(){\n\tint an=0,f=1;while(!isdigit(c=gc))if(c=='-')f=-f;\n\tdo an=an*10+(48^c);while(isdigit(c=gc));return an*f;\n}\nint a[N],b[N],d[N],n,m,s,t,Q,q[N],l,r;\nvector<int>lk[N];\nint w[M],ed[M],cnt,now[N];\nstruct Eg{int u,v,w;}g[N];\nint ans[N][N],*add;\ninline bool bfs(){\n\tint i,x,y;\n\tfor(i=1;i<=n;++i)now[i]=d[i]=0;\n\tq[l=r=d[s]=1]=s;\n\twhile(l<=r){\n\t\tx=q[l++];\n\t\tfor(int i:lk[x])\n\t\t\tif(w[i]&&!d[y=ed[i]]){\n\t\t\t\td[q[++r]=y]=d[x]+1;\n\t\t\t\tif(y==t)return 1;\n\t\t\t}\n\t}return 0;\n}\nint Dinic(int x,int flow){\n\tif(x==t)return flow;int i,y,k,rest=flow;\n\tfor(int &g=now[x],sz=lk[x].size();g<sz;++g)\n\t\tif(w[i=lk[x][g]]&&d[y=ed[i]]==d[x]+1)\n\t\t\tif(k=Dinic(y,min(w[i],rest))){\n\t\t\t\tw[i]-=k,w[i^1]+=k;\n\t\t\t\tif(!(rest-=k))return flow;\n\t\t\t}\n\td[x]=0;\n\treturn flow-rest;\n}\ninline void solve(int l,int r){\n\tif(l>=r)return;int i,lc=l-1,rc=r+1;\n\ts=a[l],t=a[r],g[++cnt]={a[l],a[r]};\n\twhile(bfs())g[cnt].w+=Dinic(s,INT_MAX);\n\tfor(i=l;i<=r;++i)\n\t\tif(d[a[i]])b[++lc]=a[i];\n\t\telse b[--rc]=a[i];\n\tfor(i=l;i<=r;++i)a[i]=b[i];\n\tfor(i=1;i<=m;++i){\n\t\tw[i+i]+=(w[i+i+1]-w[i+i])>>1;\n\t\tw[i+i+1]=w[i+i];\n\t}solve(l,lc),solve(rc,r);\n}\nvoid dfs(int x,int ad,int pr){\n\tadd[x]=ad;int y;\n\tfor(int i:lk[x])\n\t\tif((y=ed[i])!=pr)\n\t\t\tdfs(y,min(ad,w[i]),x);\n}\nint main(){\n\tint ttt=read();\n\twhile(ttt--){\n\t\tn=read(),m=read(),cnt=0;\n\t\tint i,x,y;\n\t\tfor(i=1;i<=m;++i){\n\t\t\tx=read(),y=read();\n\t\t\tw[i+i]=w[i+i+1]=read();\n\t\t\ted[i+i]=x,lk[y].push_back(i+i);\n\t\t\ted[i+i+1]=y,lk[x].push_back(i+i+1);\n\t\t}\n\t\tfor(i=1;i<=n;++i)a[i]=i;\n\t\tsolve(1,n);\n\t\tfor(i=1;i<=n;++i)lk[i].clear();\n\t\tfor(i=1;i<=cnt;++i){\n\t\t\tw[i+i]=w[i+i+1]=g[i].w;\n\t\t\ted[i+i]=g[i].v,lk[g[i].u].push_back(i+i);\n\t\t\ted[i+i+1]=g[i].u,lk[g[i].v].push_back(i+i+1);\n\t\t}\n\t\tfor(x=1;x<=n;++x)\n\t\t\tadd=ans[x],dfs(x,INT_MAX,-1);\n\t\tQ=read();\n\t\tfor(i=1;i<=n;++i)lk[i].clear();\n\t\twhile(Q--){\n\t\t\tx=read(),cnt=0;\n\t\t\tfor(i=1;i<n;++i)\n\t\t\t\tfor(y=i+1;y<=n;++y)\n\t\t\t\t\tcnt+=ans[i][y]<=x;\n\t\t\tprintf(\"%d\\n\",cnt);\n\t\t}\n\t\tif(ttt)putchar('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1645683152,
        "uid": 502410,
        "name": "EnofTaiPeople",
        "ccfLevel": 0,
        "title": "P3329 [ZJOI2011]\u6700\u5c0f\u5272 \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u56fe\u662f\u9759\u6001\u7684\uff0c\u56e0\u6b64\u8be2\u95ee\u662f\u79bb\u7ebf\u7684\u3002\n\n\u9759\u6001\u56fe\u7684\u6700\u5c0f\u5272\u8be2\u95ee\uff0c\u5f88\u5bb9\u6613\u60f3\u5230[\u6700\u5c0f\u5272\u6811](https://www.luogu.com.cn/problem/P4897)\u3002\n\n\u6700\u5c0f\u5272\u6811\u6ee1\u8db3\u5982\u4e0b\u6027\u8d28\uff1a  \n\u4e24\u70b9\u95f4\u6700\u5c0f\u5272\u4e3a\u6700\u5c0f\u5272\u6811\u4e0a\u4e24\u70b9\u95f4\u8def\u5f84\u8fb9\u6743\u7684\u6700\u5c0f\u503c\u3002\n\n\u6211\u4eec\u8981\u6c42\u7684\u662f\uff1a  \n\u6709\u591a\u5c11\u4e2a\u70b9\u5bf9 $(s,t)$\uff0c\u5176\u6700\u5c0f\u5272\u4e0d\u8d85\u8fc7 $x$  \n\n\u90a3\u4e48\u5efa\u597d\u6700\u5c0f\u5272\u6811\u540e\uff0c\u663e\u7136\u6709\u4e24\u79cd\u505a\u6cd5\u5efa\u8868\uff1a\n- \u6811\u94fe\u5256\u5206 + \u66b4\u529b\u679a\u4e3e\u70b9\u5bf9 \u5efa\u8868\uff0c\u590d\u6742\u5ea6 $\\Theta(n^2\\log n)$  \n\t\u4f18\u70b9\uff1a\u7b80\u5355\u7c97\u66b4\uff0c\u4fbf\u4e8e\u60f3\u5230\u3002\n- \u4f7f\u7528 kruskal \u91cd\u6784\u6811\uff08[P4768 [NOI2018] \u5f52\u7a0b](https://www.luogu.com.cn/problem/P4768)\uff09  \n\t\u5177\u4f53\u5730\uff0c\u5c06\u6700\u5c0f\u5272\u6811\u4e0a\u8fb9\u6309\u8fb9\u6743\u6254\u8fdb\u5927\u6839\u5806\uff0c\u7136\u540e\u4f9d\u6b21\u53d6\u51fa\uff0c  \n    \u5728\u5e76\u67e5\u96c6\u4e0a\u5408\u5e76\u6bcf\u6761\u8fb9\u4e24\u7aef\u70b9\u6240\u5728\u96c6\u5408\u3002  \n    \u8bbe\u5408\u5e76\u4e24\u70b9 $(x,y)$ \u6240\u5728\u96c6\u5408\u5927\u5c0f\u5206\u522b\u4e3a $size_x,size_y$\uff0c  \n    \u90a3\u4e48\u80af\u5b9a\u6709 $size_x\\times size_y$ \u4e2a\u70b9\u5bf9\u6700\u5c0f\u5272\u4e3a\u8be5\u8fb9\u8fb9\u6743\u3002  \n    \u524d\u7f00\u548c\u8ba1\u7b97\u8d21\u732e\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $\\Theta(n\\log n)\\sim\\Theta(n\\alpha(n))$  \n    \u4f18\u70b9\uff1a\u90fd\u662f\u6570\u636e\u7ed3\u6784\uff0c\u76f4\u63a5\u84af\u4ee3\u7801\u5c31\u662f\u4e86\u3002\n    \n\u8868\u5efa\u597d\u540e\uff0c\u8be2\u95ee\u65f6\u5728\u8868\u4e0a\u4e8c\u5206\u5373\u53ef\u3002\n\n\u7b2c\u4e00\u79cd\u505a\u6cd5\u5df2\u7ecf\u6709\u4eba\u7ed9\u51fa\uff0c\u8fd9\u91cc\u7ed9\u51fa\u7b2c\u4e8c\u79cd\u505a\u6cd5\u7684\u4ee3\u7801\u3002\n```cpp\n/*\nThis code is made by wangrx\n2021.2.16 10:46\n*/\n#include<stdio.h>\n#include<string.h>\n#include<algorithm>\ntypedef long long ll;\ntypedef unsigned long long ull; \ntypedef unsigned int word;\ntypedef unsigned short hword;\ntypedef unsigned char byte;\nword n,m,begin,end;\ntemplate<typename type>\nstruct HEAP{//\u624b\u5199\u5806\n    type list[160];\n    word size;\n    inline HEAP(){size=0;}\n#define swap(a,b)(                              \\\n    list[0]=list[a],                            \\\n    list[a]=list[b],                            \\\n    list[b]=list[0])\n    inline void push(type in){\n        list[++size]=in;\n        for(register word i=size;i>1&&list[i]<list[i>>1];i>>=1)\n            swap(i,i>>1);\n    }\n    inline void pop(){\n        list[1]=list[size--];\n        for(register word i=1;i<<1<=size;swap(i,i>>1))\n            if(list[i<<1]<list[i])\n                if(i<<1<size&&list[i<<1|1]<list[i<<1]) i=i<<1|1;\n                else i<<=1;\n            else if(i<<1<size&&list[i<<1|1]<list[i]) i=i<<1|1;\n            else return;\n    }\n    inline type& top(){return list[1];}\n};\nstruct edge{//\u6700\u5c0f\u5272\u6811\u4e0a\u7684\u8fb9\n\thword x,y;\n\tword value;\n\tinline bool operator <(const edge &p){\n\t\treturn value>p.value;}\n}ed;\nHEAP<edge> heap;\nstruct READ{//\u5feb\u8bfb\u5feb\u5199\n\tchar c;\n\tinline READ(){c=getchar();}\n\ttemplate<typename type>\n\tinline READ& operator >>(register type& num){\n\t\twhile('0'>c||c>'9') c=getchar();\n\t\tfor(num=0;'0'<=c&&c<='9';c=getchar())\n\t\t\tnum=num*10+(c-'0');\n\t\treturn *this;\n\t}\n}cin;\nstruct queue{//\u961f\u5217\n\thword list[160],head,tail;\n\tinline void push(register hword in){\n\t\tlist[tail]=in;\n\t\tif(++tail==160) tail=0;\n\t}\n\tinline void pop(){\n\t\tif(++head==160) head=0;}\n\tinline hword top(){return list[head];}\n\tinline bool empty(){return head==tail;}\n}q;\nstruct flow_net{//\u7f51\u7edc\u6d41\u539f\u56fe\n\thword head[160],to[6010],next[6010];\n\thword floor[160],gap[160];\n\tword value[6010];\n\tinline flow_net(){//\u539f\u56fe\u8f93\u5165\n\t\tcin>>n>>m;\n\t\tfor(register hword i=1;i<=m;++i){\n\t\t\tcin>>to[i<<1]>>to[i<<1|1]>>value[i<<1];\n\t\t\tvalue[i<<1|1]=value[i<<1];\n\t\t\tnext[i<<1|1]=head[to[i<<1]];\n\t\t\tnext[i<<1]=head[to[i<<1|1]];\n\t\t\thead[to[i<<1]]=i<<1|1;\n\t\t\thead[to[i<<1|1]]=i<<1;\n\t\t}\n\t}\n\tinline bool bfs(){//\u5e7f\u641c\u5206\u5c42\n\t\tmemset(floor,0x7f,sizeof(floor));\n\t\tfloor[begin]=0,q.push(begin);\n\t\tfor(register word id;!q.empty();){\n\t\t\tid=q.top(),q.pop(),gap[id]=head[id];//gap\u4f18\u5316\n\t\t\tfor(register word i=head[id];i;i=next[i])\n\t\t\t\tif(value[i]&&floor[to[i]]>floor[id]+1)\n\t\t\t\t\tfloor[to[i]]=floor[id]+1,q.push(to[i]);\n\t\t}\n\t\treturn floor[end]!=0x7f7f;\n\t}\n\tinline word dfs(hword id,word min){//\u6df1\u641c\u589e\u5e7f\n\t\tif(id==end) return min;\n\t\tword ans=0,out;\n\t\t#define i gap[id]\n\t\tfor(;i&&min;i=next[i])\n\t\t\tif(value[i]&&floor[to[i]]==floor[id]+1){\n\t\t\t\tout=dfs(to[i],min<value[i]? min:value[i]);\n\t\t\t\tvalue[i]-=out,value[i^1]+=out;\n\t\t\t\tmin-=out,ans+=out;\n\t\t\t}\n\t\t#undef i\n\t\treturn ans;\n\t}\n};\nstruct gomory_hu_tree{\n\tflow_net flow;\n\tstruct union_{//kruskal \u91cd\u6784\u6811\u6240\u7528\u5e76\u67e5\u96c6\n\t\thword fa[160],size[160];\n\t\tinline union_(){\n\t\t\tfor(register hword i=1;i<=n;++i)\n\t\t\t\tfa[i]=i,size[i]=1;\n\t\t}\n\t\tinline hword find(hword id){\n\t\t\tif(fa[id]==id) return id;\n\t\t\treturn fa[id]=find(fa[id]);\n\t\t}//\u8def\u5f84\u538b\u7f29\n\t\tinline word merge(hword x,hword y){\n\t\t\tx=find(x),y=find(y);\n\t\t\tregister word ans=(word)(size[x])*size[y];//\u8ba1\u7b97\u8d21\u732e\n\t\t\tif(size[x]>size[y]) fa[y]=x,size[x]+=size[y];\n\t\t\telse fa[x]=y,size[y]+=size[x];//\u6309\u79e9\u5408\u5e76\n\t\t\treturn ans;\n\t\t}\n\t}_union;\n\tword ans[160],value[160];\n\tinline void build(word *num,hword size){//\u6700\u5c0f\u5272\u6811\u5efa\u6811\n\t\tif(size==1) return;\n\t\ted.x=begin=num[0];\n\t\ted.y=end=num[size-1];\n\t\ted.value=0;\n\t\twhile(flow.bfs()) ed.value+=flow.dfs(begin,0x7fffffff);\n\t\theap.push(ed);\n\t\t//\u627e\u6700\u5c0f\u5272\u7136\u540e\u5728\u6811\u4e0a\u8fde\u8fb9\uff08\u8fb9\u6254\u8fdb\u5927\u6839\u5806\u4e2d\uff09\n\t\tfor(register word i=1;i<=m;++i)\n\t\t\tflow.value[i<<1]=flow.value[i<<1|1]=\n\t\t\t(flow.value[i<<1]+flow.value[i<<1|1])>>1;//\u6062\u590d\u539f\u56fe\n\t\tregister hword l=0,r=size-1;\n\t\twhile(l<r){\n\t\t\twhile(l<r&&flow.floor[num[l]]!=0x7f7f) ++l;\n\t\t\twhile(l<r&&flow.floor[num[r]]==0x7f7f) --r;\n\t\t\tregister hword swap=num[l];\n\t\t\tnum[l]=num[r],num[r]=swap;\n\t\t}//\u5206\u5272\u70b9\u96c6\n\t\tl=flow.floor[num[l]]==0x7f7f? l:r;\n\t\tbuild(num,l),build(num+l,size-l);\n\t}\n\tinline void* operator new(size_t size,void *p){\n\t\treturn p;}\n\tinline gomory_hu_tree():flow(),_union(){\n\t\tfor(register hword i=1;i<=n;++i) ans[i]=i;\n\t\tbuild(ans+1,n);\n\t\twhile(heap.size){//kruskal \u91cd\u6784\u6811\u5efa\u8868\n\t\t\ted=heap.top(),value[heap.size]=ed.value;\n\t\t\tans[heap.size]=_union.merge(ed.x,ed.y);\n\t\t\theap.pop();\n\t\t}\n\t\tfor(register word i=1;i<=n;++i)\n\t\t\tans[i]+=ans[i-1];//\u524d\u7f00\u548c\u8ba1\u7b97\u603b\u8d21\u732e\n\t\tvalue[n]=0x80000000;\n\t}\n\tinline word operator()(word x){\n\t\tx=std::upper_bound(value,value+n+1,x)-value;//\u8be2\u95ee\u65f6\u4e8c\u5206\n\t\treturn ans[x-1];\n\t}\n}*tree;\nbyte pool[1<<16];\nint main(){\n\tbyte t;\n\tfor(cin>>t;t;--t){\n\t\ttree=new(pool) gomory_hu_tree;\n\t\tregister word q,x;\n\t\tfor(cin>>q;q;--q)\n\t\t\tcin>>x,printf(\"%u\\n\",(*tree)(x));\n\t\tputchar('\\n');\n\t\tmemset(pool,0,sizeof(pool));\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1612604497,
        "uid": 104726,
        "name": "wangrx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3329 \u3010[ZJOI2011]\u6700\u5c0f\u5272\u3011"
    },
    {
        "content": "\u524d\u7f6e\u77e5\u8bc6:[\u6700\u5c0f\u5272\u6811](https://www.luogu.com.cn/problem/P4897)\n\n\u5982\u679c\u4f60\u4f1a\u6700\u5c0f\u5272\u6811\uff0c\u90a3\u4e48\u8fd9\u9898\u5dee\u4e0d\u591a\u5c31\u662f\u4e00\u9053\u677f\u5b50\u9898\u4e86\u3002\u54ea\u6015$n$\u5f88\u5c0f\uff0c\u6211\u4eec\u4e5f\u4e0d\u80fd\u679a\u4e3e\u6240\u6709\u70b9\u5bf9\uff0c\u7136\u540e\u8dd1$n^2$\u6b21\u6700\u5c0f\u5272\u3002\u6211\u4eec\u8981\u77e5\u9053\u6bcf\u5bf9\u70b9\u4e4b\u95f4\u7684\u6700\u5c0f\u5272\uff0c\u663e\u7136\u53ef\u4ee5\u7528\u6700\u5c0f\u5272\u6811\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u53ea\u8dd1$n$\u6b21\u6700\u5c0f\u5272\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u6d4b\u8bd5\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5efa\u51fa\u6700\u5c0f\u5272\u6811\uff0c\u7136\u540e\u679a\u4e3e\u70b9\u5bf9\uff0c\u5728\u6700\u5c0f\u5272\u6811\u4e0a\u67e5\u8be2\u7b54\u6848\uff0c\u7136\u540e\u5c06\u7b54\u6848\u5b58\u5165\u6570\u7ec4\u3002\u9884\u5904\u7406\u51fa\u6240\u6709\u70b9\u5bf9\u7684\u6700\u5c0f\u5272\u4e4b\u540e\u6392\u5e8f\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u76f4\u63a5\u4e8c\u5206\u7b54\u6848\u5373\u53ef\uff08\u53cd\u6b63\u8dd1\u6700\u5c0f\u5272\u6811\u5c31\u6709$n^3m$\u7684\u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u5176\u5b9e\u66b4\u529b$qn^2$\u679a\u4e3e\u4e5f\u884c\uff09\u3002\n\n### **CODE**\n```cpp\n#include <cmath>\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define re register\n#define il inline\n#define isdigit(ch) (ch>=48&&ch<=57)\nconst int N=220;\nconst int M=3030;\nconst int inf=0x3f3f3f3f;\nil void read(int &x)\n{\n\tx=0;char ch=getchar();\n\twhile(!isdigit(ch)) ch=getchar();\n\twhile(isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n}\nvoid write(int x){if(x/10)write(x/10);putchar(x%10+48);}\nil void swap(int &a,int &b){re int tmp=a;a=b;b=tmp;}\nil int min(int a,int b){return a<b?a:b;}\nint T,n,m,q,k;\nnamespace dinic\n{\n\tint cnt=1,h[N],cur[N];\n\tstruct edge{int v,res,nxt;}e[M<<2];\n\til void add(int u,int v,int w){e[++cnt]=(edge){v,w,h[u]};h[u]=cnt;}\n\til void init()\n\t{\n\t\tfor(re int i=2;i<=cnt;i+=2)\n\t\t\te[i].res+=e[i^1].res,e[i^1].res=0;\n            \t//\u9000\u6d41\n\t}\n\tint dep[N];\n\til bool bfs(int s,int t)\n\t{\n\t\tfor(re int i=1;i<=n;++i) cur[i]=h[i],dep[i]=0;\n\t\tqueue<int>q;q.push(s);dep[s]=1;\n\t\twhile(!q.empty())\n\t\t{\n\t\t\tre int u=q.front();q.pop();\n\t\t\tfor(re int i=h[u],v;i;i=e[i].nxt)\n\t\t\t\tif(!dep[v=e[i].v]&&e[i].res)\n\t\t\t\t\tdep[v]=dep[u]+1,q.push(v);\n\t\t}\n\t\treturn dep[t]>0;\n\t}\n\tint dfs(int u,int flow,int t)\n\t{\n\t\tif(!flow||u==t)  return flow;\n\t\tint tmp=0,v,f;\n\t\tfor(re int i=cur[u];i;i=e[i].nxt)\n\t\t{\n\t\t\tcur[u]=i;\n\t\t\tif(dep[v=e[i].v]>dep[u]&&(f=dfs(v,min(flow-tmp,e[i].res),t)))\n\t\t\t{\n\t\t\t\te[i].res-=f;e[i^1].res+=f;\n\t\t\t\ttmp+=f;\n\t\t\t\tif(!(flow-tmp)) break;\n\t\t\t}\n\t\t}\n\t\treturn tmp;\n\t}\n\til int ans(int s,int t)\n\t{\n\t\tint res=0;init();\n\t\twhile(bfs(s,t)) res+=dfs(s,inf,t);\n\t\treturn res;\n\t}\n\til void clr()\n\t{\n\t\tcnt=1;\n\t\tmemset(h,0,sizeof(h));\n\t}\n}//dinic\u7684\u677f\u5b50\nnamespace GHT\n{\n\tint cnt=0,h[N];\n\tstruct edge{int v,w,nxt;}e[N<<1];\n\til void add(int u,int v,int w){e[++cnt]=(edge){v,w,h[u]};h[u]=cnt;}\n\tint node[N],tmp1[N],tmp2[N];\n\tvoid build(int l,int r)\n\t{\n\t\tif(l==r) return;\n\t\tre int u=node[l],v=node[l+1];\n\t\tre int w=dinic::ans(u,v);\n\t\tadd(u,v,w);\n\t\tadd(v,u,w);\n\t\tre int cnt1=0,cnt2=0;\n\t\tfor(re int i=l;i<=r;++i)\n\t\t{\n\t\t\tif(dinic::dep[node[i]]>0) tmp1[++cnt1]=node[i];\n            else tmp2[++cnt2]=node[i];\n\t\t}\n\t\tfor(re int i=l;i<=l+cnt1-1;++i) node[i]=tmp1[i-l+1];\n        for(re int i=l+cnt1;i<=r;++i) node[i]=tmp2[i-cnt1-l+1];\n\t\tbuild(l,l+cnt1-1);build(l+cnt1,r);\n\t}//\u5efa\u6811\uff0c\u677f\u5b50\u4e0d\u4f1a\u7684\u5efa\u8bae\u5148\u53bb\u5199\u6a21\u677f\u9898\n\tint lg;\n\tint fa[10][N],dep[N];\n\tint st[10][N];\n\tvoid dfs(int x,int f)\n\t{\n\t\tdep[x]=dep[f]+1;\n\t\tfa[0][x]=f;\n\t\tfor(re int i=1;i<=lg;++i)\n\t\t{\n\t\t\tfa[i][x]=fa[i-1][fa[i-1][x]];\n\t\t\tst[i][x]=min(st[i-1][fa[i-1][x]],st[i-1][x]);\n\t\t}\n\t\tfor(re int i=h[x],v;i;i=e[i].nxt)\n\t\t\tif(e[i].v^f)\n\t\t\t{\n\t\t\t\tst[0][e[i].v]=e[i].w;\n\t\t\t\tdfs(e[i].v,x);\n\t\t\t}\n\t}\n\til int query(int u,int v)\n\t{\n\t\tre int res=inf;\n\t\tif(dep[u]<dep[v]) swap(u,v);\n\t\tfor(re int i=lg;i>=0;--i)\n\t\t\tif(dep[fa[i][u]]>=dep[v])\n\t\t\t{\n\t\t\t\tres=min(res,st[i][u]);\n\t\t\t\tu=fa[i][u];\n\t\t\t}\n\t\tif(u==v) return res;\n\t\tfor(re int i=lg;i>=0;--i)\n\t\t\tif(fa[i][u]^fa[i][v])\n\t\t\t{\n\t\t\t\tres=min(res,st[i][u]);\n\t\t\t\tu=fa[i][u];\n\t\t\t\tres=min(res,st[i][v]);\n\t\t\t\tv=fa[i][v];\n\t\t\t}\n\t\tres=min(res,st[0][u]);\n\t\tres=min(res,st[0][v]);\n\t\treturn res;\n        \t//\u6811\u4e0a\u500d\u589e\u67e5\u8be2\u6700\u5c0f\u5272\n\t}\n\til void clr()\n\t{\n\t\tcnt=0;\n\t\tmemset(h,0,sizeof(h));\n\t\tmemset(fa,0,sizeof(fa));\n\t\tmemset(dep,0,sizeof(dep));\n\t\tmemset(st,0x3f,sizeof(st));\n\t\tfor(re int i=1;i<=n;++i) node[i]=i;\n        \t//\u521d\u59cb\u5316\u6700\u5c0f\u5272\u6811\n\t}\n}\nint st[N*N],top;\nint main()\n{\n\tread(T);\n\twhile(T--)\n\t{\n\t\tread(n),read(m);\n\t\tGHT::lg=log2(n)+1;\n\t\tGHT::clr();dinic::clr();\n\t\tfor(re int i=1,u,v,w;i<=m;++i)\n\t\t{\n\t\t\tread(u),read(v),read(w);\n\t\t\tdinic::add(u,v,w);\n\t\t\tdinic::add(v,u,0);\n\t\t\tdinic::add(v,u,w);\n\t\t\tdinic::add(u,v,0);//\u6ce8\u610f\u65e0\u5411\u56fe\n\t\t}\n\t\tGHT::build(1,n);\n\t\tGHT::dfs(1,0);//\u6784\u5efa\u6700\u5c0f\u5272\u6811\n\t\ttop=0;\n\t\tfor(re int i=1;i<n;++i)\n\t\t\tfor(re int j=i+1;j<=n;++j)\n\t\t\t\tst[++top]=GHT::query(i,j);//\u5c06\u6700\u5c0f\u5272\u5b58\u5165\u6570\u7ec4\u4e2d\n\t\tsort(st+1,st+top+1);\n\t\tread(q);\n\t\twhile(q--)\n\t\t{\n\t\t\tread(k);\n\t\t\tre int l=0,r=top,ans=0,mid;\n\t\t\twhile(l<=r)\n\t\t\t{\n\t\t\t\tmid=(l+r)>>1;\n\t\t\t\tif(st[mid]<=k) ans=mid,l=mid+1;\n\t\t\t\telse r=mid-1;\n\t\t\t}\n        \t\t//\u4e8c\u5206\u7b54\u6848\n\t\t\twrite(ans);puts(\"\");\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1597834335,
        "uid": 209454,
        "name": "watermonster",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3329 \u3010[ZJOI2011]\u6700\u5c0f\u5272\u3011"
    },
    {
        "content": "\u5982\u4f55\u540a\u6253 Gusfield\uff1f\u5feb\u4f7f\u7528 Gomory-Hu\uff01\n\n\u5177\u4f53\u7ec6\u8282\u53c2\u89c1[\u6211\u7684\u53e6\u4e00\u7bc7\u535a\u5ba2](/blog/_post/537433)\u3002\n\n\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u6c42\u51fa\u6700\u5c0f\u5272\u6811\u540e\u66b4\u529b\u626b\u4e00\u904d\u5373\u53ef\u3002\n\n\u5177\u4f53\u5230\u8fd9\u4e2a\u9898\u800c\u8a00\uff0c\u53ef\u4ee5\u8003\u8651\u4ece\u6bcf\u4e2a\u70b9\u5f00\u59cb\u641c\u7d22\u6574\u68f5\u6811\uff0c\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5bf9\u7b54\u6848\u3002\u67e5\u8be2\u7684\u65f6\u5019\u76f4\u63a5\u904d\u5386 $O(n^2)$ \u4e2a\u70b9\u5bf9\u5373\u53ef\u3002\u5355\u7ec4\u6570\u636e\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\tau+qn^2)$\uff08$\\tau$ \u4e3a\u6c42\u6700\u5c0f\u5272\u65f6\u95f4\u590d\u6742\u5ea6\uff09\uff0c\u4f46\u662f\u5e38\u6570\u633a\u5c0f\u7684\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0cGomory-Hu \u8f7b\u677e\u62ff\u5230\u6700\u4f18\u89e3\u3002\n```cpp\n#include<assert.h>\n#include<stdio.h>\n#include<stdlib.h>\n#include<vector>\nconst int N=2001,M=100001;\nbool vis[N],C[N][N];\nint f,s,t,len,las[N],nex[M],en[M],vol[M],he,ta,q[N],dis[N],cnt[N],maxfl,sh[N],fa[N],ans[N][N];\n#define addedg(e,d,g) (nex[len]=las[e],las[e]=len,en[len]=d,vol[len++]=g)\n#define addfl(e,d,g) (addedg(e,d,g),addedg(d,e,g))\nstd::vector<int>rs[N];\nstd::vector<std::pair<std::pair<int,int>,int>>T;\nbool bfs()\n{\n\tint x;\n\tfor(int i=he=ta=0;i<f;i++)\n\t\tvis[sh[i]]=0,cnt[sh[i]]=dis[sh[i]]=0;\n\tvis[q[ta++]=sh[t]]=1,dis[sh[t]]=0;\n\twhile(he<ta)\n\t{\n\t\tcnt[dis[x=q[he++]]]++;\n\t\tfor(int _:rs[x])\n\t\t\tfor(int i=las[_];~i;i=nex[i])\n\t\t\t\tif(!vis[sh[en[i]]])\n\t\t\t\t\tvis[sh[en[i]]]=1,dis[sh[en[i]]]=dis[x]+1,q[ta++]=sh[en[i]];\n\t}\n\tassert(sh[s]!=sh[t]);\n\treturn vis[sh[s]];\n}\nint dfs(int x,int fl)\n{\n\tif(x==sh[t])\n\t\treturn maxfl+=fl,fl;\n\tint d=0;\n\tfor(int _:rs[x])\n\t\tfor(int i=las[_],j;~i;i=nex[i])\n\t\t\tif(vol[i]&&dis[sh[en[i]]]==dis[x]-1)\n\t\t\t{\n\t\t\t\td+=j=dfs(sh[en[i]],vol[i]<fl-d?vol[i]:fl-d),vol[i]-=j,vol[i^1]+=j;\n\t\t\t\tif(d==fl)\n\t\t\t\t\treturn d;\n\t\t\t}\n\tcnt[dis[x]]--;\n\tif(!cnt[dis[x]])\n\t\tdis[sh[s]]=f;\n\treturn cnt[++dis[x]]++,d;\n}\nvoid tag(int x)\n{\n\tvis[x]=1;\n\tfor(int _:rs[x])\n\t\tfor(int i=las[_];~i;i=nex[i])\n\t\t\tif(vol[i^1]&&!vis[sh[en[i]]])\n\t\t\t\ttag(sh[en[i]]);\n\treturn;\n}\nint mf(int S,int T)\n{\n\ts=S,t=T;\n\tfor(int i=maxfl=0;i<len;i+=2)\n\t\tvol[i]=vol[i^1]=vol[i]+vol[i^1]>>1;\n\tif(bfs())\n\t\twhile(dis[sh[s]]<f)\n\t\t\tdfs(sh[s],1000000000);\n\tfor(int i=0;i<f;i++)\n\t\tvis[sh[i]]=0;\n\treturn tag(sh[t]),maxfl;\n}\nvoid GomoryHu(const std::vector<int>&R)\n{\n\tif(R.size()==1)\n\t{\n\t\tfor(int i=0;i<f;i++)\n\t\t\tC[R[0]][sh[i]]=1;\n\t\treturn;\n\t}\n\tstd::vector<int>R1,R2;\n\tbool v[N];\n\tint r1=R[0],r2=R[1],d=mf(r1,r2),tmp[N],rp,rpp;\n\tfor(int i=0;i<f;i++)\n\t\ttmp[i]=-1,v[i]=vis[i];\n\tfor(int i:R)\n\t\tif(vis[sh[i]])\n\t\t\tR2.emplace_back(i);\n\t\telse\n\t\t\tR1.emplace_back(i);\n\tfor(int i=0,k;i<f;i++)\n\t\tif(v[k=sh[i]]&&k!=r2)\n\t\t\tfor(int j=rs[k].size()-1;~j;j--)\n\t\t\t\ttmp[rs[k][j]]=sh[rs[k][j]],sh[rs[k][j]]=r2;\n\tfor(int i=0;i<f;i++)\n\t\trs[i].clear();\n\tfor(int i=0;i<f;i++)\n\t\trs[sh[i]].emplace_back(i);\n\tGomoryHu(R1);\n\tfor(int i=0;i<f;i++)\n\t\tif(~tmp[i])\n\t\t\tsh[i]=tmp[i],tmp[i]=-1;\n\tfor(int i=0;i<f;i++)\n\t\trs[i].clear();\n\tfor(int i=0;i<f;i++)\n\t\trs[sh[i]].emplace_back(i);\n\tfor(int i=0,k;i<f;i++)\n\t\tif(!v[k=sh[i]]&&k!=r1)\n\t\t\tfor(int j=rs[k].size()-1;~j;j--)\n\t\t\t\ttmp[rs[k][j]]=sh[rs[k][j]],sh[rs[k][j]]=r1;\n\tfor(int i=0;i<f;i++)\n\t\trs[i].clear();\n\tfor(int i=0;i<f;i++)\n\t\trs[sh[i]].emplace_back(i);\n\tGomoryHu(R2);\n\tfor(int i=0;i<f;i++)\n\t\tif(~tmp[i])\n\t\t\tsh[i]=tmp[i];\n\tfor(int i=0;i<f;i++)\n\t\trs[i].clear();\n\tfor(int i=0;i<f;i++)\n\t\trs[sh[i]].emplace_back(i);\n\tfor(int i:R1)\n\t\tif(C[i][r2])\n\t\t{\n\t\t\trp=i,C[i][r2]=0;\n\t\t\tbreak;\n\t\t}\n\tfor(int i:R2)\n\t\tif(C[i][r1])\n\t\t{\n\t\t\trpp=i,C[i][r1]=0;\n\t\t\tbreak;\n\t\t}\n\treturn T.emplace_back(std::make_pair(rp,rpp),d);\n}\nvoid getans(int x,int y)\n{\n\tfor(int i=las[y];~i;i=nex[i])\n\t\tif(en[i]!=fa[y])\n\t\t\tfa[en[i]]=y,ans[x][en[i]]=(ans[x][y]<vol[i]?ans[x][y]:vol[i]),getans(x,en[i]);\n\treturn;\n}\nint main()\n{\n\tint t,n,m,q,u,v,w;\n\tstd::vector<int>R;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d%d\",&n,&m),f=n,R.clear(),T.clear();\n\t\tfor(int i=0;i<f;i++)\n\t\t\tlas[i]=-1,R.emplace_back(i),sh[i]=i,rs[i].clear(),rs[i].emplace_back(i);\n\t\tfor(int i=0;i<f;i++)\n\t\t\tfor(int j=0;j<f;j++)\n\t\t\t\tC[i][j]=0;\n\t\twhile(m--)\n\t\t\tscanf(\"%d%d%d\",&u,&v,&w),addfl(u-1,v-1,w);\n\t\tGomoryHu(R);\n\t\tfor(int i=len=0;i<f;i++)\n\t\t\tlas[i]=-1;\n\t\tfor(auto j:T)\n\t\t\taddfl(j.first.first,j.first.second,j.second);\n\t\tfor(int i=0;i<f;i++)\n\t\t\tfa[i]=-1,ans[i][i]=1e9,getans(i,i);\n\t\tscanf(\"%d\",&q);\n\t\twhile(q--)\n\t\t{\n\t\t\tscanf(\"%d\",&w),m=0;\n\t\t\tfor(int i=1;i<n;i++)\n\t\t\t\tfor(int j=0;j<i;j++)\n\t\t\t\t\tif(ans[i][j]<=w)\n\t\t\t\t\t\tm++;\n\t\t\tprintf(\"%d\\n\",m);\n\t\t}\n\t\tif(t)\n\t\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1681659122,
        "uid": 335096,
        "name": "Eznibuil",
        "ccfLevel": 7,
        "title": "\u9898\u89e3\uff1aP3329 [ZJOI2011]\u6700\u5c0f\u5272"
    }
]