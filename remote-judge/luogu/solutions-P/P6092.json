[
    {
        "content": "\u5f88\u5bb9\u6613\u53d1\u73b0\u5982\u679c $a$ \u4e2a\u673a\u5668\u53ef\u4ee5\u5b8c\u6210\u6240\u6709\u4efb\u52a1\uff0c\n\u90a3\u4e48 $a + 1$ \u4e2a\u673a\u5668\u4e5f\u4e00\u5b9a\u53ef\u4ee5\u5b8c\u6210\u3002\n\n\u6240\u4ee5\uff0c\u672c\u9898\u6761\u4ef6\u5177\u6709\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u7528\u4e8c\u5206\u7b54\u6848\u7684\u505a\u6cd5\u53bb\u505a\u3002\n\n\u5177\u4f53\u5199\u6cd5\uff1a\n1. \u9996\u5148\u5148\u6253\u4e00\u4e2a\u6574\u6570\u4e8c\u5206\u7684\u6a21\u677f\u3002\n\n2. \u5bf9\u4e8e\u6838\u5fc3\u7684 `check` \u51fd\u6570\uff0c`check(x)` \u8981\u5224\u65ad\u5728\u53ea\u7528 $x$ \u4e2a\u673a\u5668\u7684\u60c5\u51b5\u4e0b\u80fd\u5426\u5b8c\u6210\u6240\u6709\u7684\u4efb\u52a1\u3002\n\n3. \u5173\u4e8e `check(x)` \u51fd\u6570\u7684\u5927\u4f53\u5b9e\u73b0\u65b9\u6848\uff1a\u9996\u5148\uff0c\u7ef4\u62a4\u5f53\u524d\u6bcf\u4e2a\u673a\u5668\u7684\u622a\u6b62\u65f6\u95f4\uff0c\u6bcf\u6b21\u4f7f\u7528\u6700\u65e9\u7ed3\u675f\u7684\u90a3\u4e2a\u673a\u5668\uff0c\u5982\u679c\u53d1\u73b0\u622a\u6b62\u65f6\u95f4\u8d85\u8fc7\u4e86\u5f53\u524d\u4efb\u52a1\u7684\u89c4\u5b9a\u622a\u6b62\u65f6\u95f4\uff0c\u90a3\u4e48 `return false`\uff0c\u5f53\u7136\uff0c\u4e3a\u4e86\u52a0\u5feb\u6bcf\u6b21\u67e5\u627e\u622a\u6b62\u65f6\u95f4\u6700\u65e9\u7684\u673a\u5668\uff0c\u6211\u4eec\u7528 `priority_queue` \u53bb\u7ef4\u62a4\u6bcf\u4e2a\u673a\u5668\u7684\u622a\u6b62\u65f6\u95f4\u5c31\u53ef\u4ee5\u4e86\uff0c\u5177\u4f53\u6bcf\u4e00\u884c\u4ee3\u7801\u4e3a\u4ec0\u4e48\u90a3\u6837\u5199\u4e0d\u660e\u767d\u7684\u89c1\u4ee3\u7801\u6ce8\u91ca\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1e6 + 10;\nint times[N];\nint n, d, m;\n\nbool check(int tot) {  // \u68c0\u67e5\u5728 tot \u4e2a\u673a\u5668\u7684\u60c5\u51b5\u4e0b\u662f\u5426\u5408\u6cd5\n    int ans = 0;\n    priority_queue<int, vector<int>, greater<int>> que;  // \u8bb0\u5f55\u5b8c\u6210\u4efb\u52a1\u7684\u622a\u6b62\u65f6\u95f4\n    for (int i = 1; i <= m; i++) {\n        if ((int)que.size() < tot) {\n            que.push(times[i] + 1);  // \u672a\u7528\u6ee1 tot \u4e2a\u673a\u5668\uff0c\u4f7f\u7528\u65b0\u7684\u673a\u5668\n            if (times[i] + 1 > times[i] + d) {  // \u8d85\u8fc7\u622a\u6b62\u65f6\u95f4\n                return false;\n            }\n        } else {\n            // \u7528\u6700\u65e9\u7528\u5b8c\u7684\u673a\u5668\u6765\u505a\u8fd9\u4e2a\u4efb\u52a1\n            int p = que.top();\n            que.pop();\n            int x = max(p + 1, times[i] + 1);\n            que.push(x);\n            if (x > times[i] + d + 1) {  // \u8d85\u8fc7\u622a\u6b62\u65f6\u95f4\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nint main() {\n    ios::sync_with_stdio(false), cin.tie(0); // cin, cout \u8bfb\u5165\u4f18\u5316\n    cin >> n >> d >> m;\n    for (int i = 1; i <= m; i++) {\n        cin >> times[i];  // \u8bfb\u5165\u6570\u636e\n    }\n    sort(times + 1, times + m + 1);  // \u63d0\u524d\u7ed3\u675f\u65e9\u7684\u4f18\u5148\u7ea7\u66f4\u9ad8\uff0c\u5148\u505a\n    int l = 0, r = 1e9 + 10;\n    while (l < r) {  // \u4e8c\u5206\u7b54\u6848\n        int mid = l + (r - l) / 2;\n        if (check(mid)) {\n            r = mid;\n        } else {\n            l = mid + 1;\n        }\n    }\n    cout << r << \"\\n\";\n    return 0;\n}\n```\n",
        "postTime": 1675174537,
        "uid": 482998,
        "name": "jeffstart",
        "ccfLevel": 0,
        "title": "P6092 [CEOI2012] \u5de5\u4f5c\u89c4\u5212 \u9898\u89e3"
    },
    {
        "content": "# P6092 [CEOI2012] \u5de5\u4f5c\u89c4\u5212  \u9898\u89e3\n\n## \u9898\u610f\u56de\u987e\n\n\u6709\u4e00\u4e2a\u4eba\u9700\u8981\u5b8c\u6210 $ m $ \u9879\u4efb\u52a1\uff0c\u6bcf\u9879\u4efb\u52a1\u7684\u83b7\u5f97\u65f6\u95f4\u4e3a $ a_i $\uff0c\u5728 $ a_i+d $ \u5929\u662f\u6700\u665a\u7684\u5b8c\u6210\u65f6\u95f4\uff0c\u4ed6\u53ef\u4ee5\u591a\u7ebf\u7a0b\u5de5\u4f5c\u3002\n\n\u6c42\u4ed6\u81f3\u5c11\u5f00\u51e0\u4e2a\u7ebf\u7a0b\u624d\u80fd\u5b8c\u6210\u6240\u6709\u5de5\u4f5c\u3002\n\n## \u5206\u6790\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\uff0c\u4ed6\u5982\u679c\u80fd $ x $ \u7ebf\u7a0b\u5b8c\u6210\u5de5\u4f5c\u5c31\u4e00\u5b9a\u80fd $ x+1 $ \u7ebf\u7a0b\u5b8c\u6210\u5de5\u4f5c\uff0c\u56e0\u6b64\u7ebf\u7a0b\u662f\u5177\u6709\u5355\u8c03\u6027\u7684\u3002\n\n\u6211\u4eec\u8003\u8651\u4e8c\u5206\uff0c\u628a\u6700\u4f18\u6027\u95ee\u9898\u8f6c\u5316\u4e3a\u5224\u5b9a\u6027\u95ee\u9898\uff0c\u5224\u5b9a\u7528 $ x $ \u4e2a\u7ebf\u7a0b\u80fd\u5426\u5b8c\u6210\u5de5\u4f5c\u3002\u6211\u4eec\u53d1\u73b0\u5982\u679c\u4e00\u4e2a\u66f4\u65e9\u5f00\u59cb\uff08\u4e5f\u66f4\u65e9\u7ed3\u675f\uff09\u7684\u5de5\u4f5c\u6bd4\u53e6\u4e00\u4e2a\u5de5\u4f5c\u5148\u505a\u662f\u66f4\u4f18\u7684\uff0c\u56e0\u4e3a\u505a\u66f4\u65e9\u7684\u5de5\u4f5c\u7684\u6700\u665a\u65f6\u95f4\u662f\u6bd4\u66f4\u665a\u7684\u5de5\u4f5c\u66f4\u65e9\u5230\u6765\u7684\uff0c\u4e4b\u540e\u66f4\u665a\u7684\u5de5\u4f5c\u88ab\u5b8c\u6210\u7684\u673a\u4f1a\u591a\u4e8e\u66f4\u65e9\u7684\u5de5\u4f5c\u3002\n\n\u6bcf\u6b21\u4e8c\u5206\u7b54\u6848\u65f6 $ O(n+m) $ \u8d2a\u5fc3\u5224\u5b9a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $ O((n+m) \\log n) $\uff0c\u53ef\u8fc7\u3002\n\n## AC \u4ee3\u7801\n\n```\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int N = 1e6 + 5;\nint n, d, m;\nint t[N];\nbool check(int x) {\n    int pos = 1;\n    for(int i = 1; i <= n + 1; i++) {\n        if(pos > m) {\n            return true;\n        }\n        for(int j = 1; j <= x; j++) {\n            if(t[pos] <= i && pos <= m) {\n                if(t[pos] + d < i) {\n                    return false;\n                }\n                pos++;\n            } else {\n                break;\n            }\n        }\n    }\n    return false;\n}\nint main() {\n    scanf(\"%d%d%d\", &n, &d, &m);\n    for(int i = 1; i <= m; i++) {\n        scanf(\"%d\", &t[i]);\n    }\n    sort(t + 1, t + m + 1);\n    int l, r, mid;\n    l = -1;\n    r = m + 1;\n    while(l + 1 < r) {\n        mid = (l + r) >> 1;\n        if(check(mid)) {\n            r = mid;\n        } else {\n            l = mid;\n        }\n    }\n    printf(\"%d\\n\", r);\n    return 0;\n}\n```\n\n## \u603b\u7ed3\u4e0e\u8bc4\u4ef7\n\n\u6821\u5185\u63d0\u9ad8\u6a21\u62df\u8d5b T1\uff0c\u6559\u7ec3\u8ba4\u4e3a\u9ec4\u9898\uff0c\u6d1b\u8c37\u8bc4\u84dd\uff08\n\n\u5f53\u65f6\u8d5b\u573a\u4e0a\u4e00\u773c\u5c31\u770b\u51fa\u6765\u4e86\uff0cAC \u7387\u5927\u7ea6\u5728 40% \uff5e 50% \u5de6\u53f3\u3002\uff08\u6bd5\u7adf\u662f\u7b7e\u5230\u9898\uff09",
        "postTime": 1684301389,
        "uid": 420998,
        "name": "Kevin0501",
        "ccfLevel": 7,
        "title": "P6092 \u9898\u89e3"
    },
    {
        "content": "~~\u8c8c\u4f3c\u662f\u4f60\u8c37\u9996A\u5462\uff0c\u6765\u5199\u4e00\u7bc7\u9898\u89e3~~\n\n\u663e\u7136\u82e5$x$\u53f0\u673a\u5668\u53ef\u4ee5\u5b8c\u6210\u6240\u6709\u4efb\u52a1\uff0c\u90a3\u4e48\u5927\u4e8e$x$\u53f0\u673a\u5668\u4e5f\u53ef\u4ee5\uff0c\u7b54\u6848\u5177\u6709\u5355\u8c03\u6027\uff0c\u6240\u4ee5\u8003\u8651\u4e8c\u5206\u7b54\u6848\n\n\u6bcf\u6b21\u4e8c\u5206\u51fa\u6765\u4e00\u4e2amid\u4e4b\u540e\u5c31\u4ece\u5934\u5230\u5c3e\u626b\u4e00\u904d\u68c0\u67e5\uff0c\u80fd\u591f\u5b8c\u6210\u7684\u5c31\u5f53\u5929\u5b8c\u6210\uff0c\u4e0d\u80fd\u7684\u8bdd\u5c31\u7559\u5230\u4e0b\u4e00\u5929\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u961f\u5217\u7ef4\u62a4\u672a\u5b8c\u6210\u7684\u4efb\u52a1\uff0c\u7531\u4e8e\u961f\u5217\u7684\u961f\u9996\u4e00\u5b9a\u662f\u6700\u65e9\u5165\u961f\u7684\uff0c\u6240\u4ee5\u8d2a\u5fc3\u4f18\u5148\u5904\u7406\u961f\u9996\u7684\u4efb\u52a1\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(mlogm)$\uff0c\u80fd\u8fc7\n\n$Code:$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int MAXV = 1e6 + 5;\nint n, d, m;\nint a[MAXV];\nvector<int> ord[MAXV];//\u5b58\u653e\u6bcf\u9879\u4efb\u52a1\u4e0b\u653e\u7684\u65f6\u95f4\nstruct node {\n    int num;\n    int time;\n};\n\nbool check(int x)\n{\n    queue<node> Q;\n    register int i;\n\n    int mach;//\u673a\u5668\u6570\n    for (i = 1; i <= n; ++i) {\n        mach = x;\n        while (!Q.empty()) {//\u5904\u7406\u6b8b\u4f59\u7684\u4efb\u52a1\n            node x = Q.front();\n            Q.pop();\n            int t = x.time;\n            if (t + d < i)//\u6765\u4e0d\u53ca\u5b8c\u6210\n                return false;\n            --mach;\n            if (!mach)//\u673a\u5668\u6570\u4e3a0\n                break;\n        }\n        if (!Q.empty()) {//\u53ef\u80fd\u662f\u673a\u5668\u6570\u4e0d\u591f\u9000\u51fa\u6765\u7684\uff0c\u9700\u8981\u518d\u68c0\u67e5\n            node x = Q.front();\n            if (x.time + d < i)\n                return false;\n        }\n\n        for (vector<int>::iterator it = ord[i].begin(); it != ord[i].end(); ++it) {\n            int v = *it;\n            if (mach)//\u8fd8\u6709\u673a\u5668\n                --mach;\n            else//\u5c06\u4efb\u52a1\u7559\u5230\u4e0b\u4e00\u6b21\u5b8c\u6210\n                Q.push((node) { v, i });\n        }\n    }\n\n    return true;\n}\n\nsigned main()\n{\n    scanf(\"%d%d%d\", &n, &d, &m);\n    register int i;\n\n    for (i = 1; i <= m; ++i) {\n        scanf(\"%d\", &a[i]);\n        ord[a[i]].push_back(i);//a[i]\u8fd9\u4e2a\u4efb\u52a1\u5728\u7b2ci\u6b21\u51fa\u73b0\u8fc7\n    }\n\n    int l = 1, r = m, mid, ans;\n    while (l <= r) {//\u666e\u901a\u4e8c\u5206\n        mid = l + r >> 1;\n        if (check(mid)) {\n            ans = mid;\n            r = mid - 1;\n        } else\n            l = mid + 1;\n    }\n\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\nPS:\n\n\u8c8c\u4f3c\u539f\u9898\u8fd8\u8981\u8f93\u51fa\u65b9\u6848\uff0c\u90a3\u6211\u4eec\u5c31\u628aans\u5e26\u5230check\u91cc\u9762\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u8dd1\u4e00\u8fb9\u5373\u53ef",
        "postTime": 1612003818,
        "uid": 235357,
        "name": "Luisvacson",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6092 \u3010[CEOI2012]\u5de5\u4f5c\u89c4\u5212 \u3011"
    },
    {
        "content": "## \u9898\u89e3\n\n\u53ef\u4ee5\u53bb\u770b\u770b\u8fd9\u9898\u7684[\u52a0\u5f3a\u7248](https://loj.ac/p/2851)\u3002\n\n\u9996\u5148\u6709\u7b54\u6848\u5177\u6709\u5355\u8c03\u6027\u3002\u673a\u5668\u8d8a\u591a\u663e\u7136\u8d8a\u6709\u53ef\u80fd\u5728\u89c4\u5b9a\u671f\u9650\u5185\u5b8c\u6210\u4efb\u52a1\u3002\u4e8e\u662f\u60f3\u5230\u4e8c\u5206\u7b54\u6848\uff0c\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u5224\u5b9a\u6027\u95ee\u9898\u3002\n\n\u6211\u4eec\u4e8c\u5206\u4e00\u4e2a $x$\uff0c\u8868\u793a\u5f53\u524d\u7684\u673a\u5668\u6570\u3002\u7136\u540e\u6211\u4eec\u6a21\u62df\u52a0\u5de5\u7684\u8fc7\u7a0b\uff0c\u6bcf\u8fc7\u4e00\u5929\u5c31\u628a\u5f53\u524d\u5e94\u8be5\u52a0\u5165\u7684\u4efb\u52a1\u52a0\u5165\u5230\u961f\u5217\u4e2d\u3002\u7136\u540e\u8d2a\u5fc3\u4e00\u6ce2\uff0c\u8d8a\u65e9\u63a5\u53d7\u7684\u4efb\u52a1\u5c31\u5e94\u8be5\u8d8a\u5148\u5b8c\u6210\u3002\n\n\u8fd8\u6709\u4e2a\u5c0f\u6280\u5de7\uff0c\u6211\u4eec\u4e0d\u5173\u5fc3\u8f93\u5165\u65f6\u6bcf\u4e2a\u4efb\u52a1\u7684\u987a\u5e8f\uff0c\u53ea\u5173\u5fc3\u8fd9\u4e00\u5929\u7684\u4efb\u52a1\u6709\u591a\u5c11\uff0c\u4e8e\u662f\u5f00\u4e2a\u6876 $d$\u3002 \u6bcf\u8bfb\u5165\u4e00\u4e2a $a_i$ \u5c31\u4ee4 $d_{a_i} \\gets d_{a_i}+1$\uff0c\u7136\u540e\u961f\u5217\u957f\u5ea6\u5c31\u4ece $m$ \u964d\u5230\u4e86 $n$\u3002\u603b\u7684\u590d\u6742\u5ea6\u4e3a $\\Theta(n \\log m)$\u3002\n\n\u52a0\u5f3a\u7248\u4e2d\u8fd8\u9700\u8981\u8f93\u51fa\u6bcf\u5929\u52a0\u5de5\u4efb\u52a1\u7684\u65b9\u6848\u3002\u4e5f\u5f88\u7b80\u5355\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u4efb\u52a1\u7684\u6b21\u5e8f\uff0c\u4e8c\u5206\u65f6\u5b58\u50a8\u5373\u53ef\u3002\u4f46\u6b64\u65f6\u4e0d\u80fd\u7528\u6876\u8bb0\u5f55\uff08\u56e0\u4e3a\u540c\u4e00\u5929\u7684\u5143\u7d20\u6b21\u5e8f\u6709\u5dee\u5f02\uff09\uff0c\u590d\u6742\u5ea6\u964d\u4e3a $\\Theta(m \\log m)$\u3002\n\n\u4e8c\u5206\u7684\u4e0a\u754c\u5e94\u8be5\u662f $m$\uff0c\u56e0\u4e3a\u6700\u574f\u60c5\u51b5\u662f\u6240\u6709\u4efb\u52a1\u90fd\u5728\u540c\u4e00\u5929\u4e14 $d=0$\u3002\n\n## \u4ee3\u7801\n\n\u672c\u9898\uff08P6092\uff09\u7684 $\\Theta(n \\log m)$ \u4ee3\u7801\uff1a\n\n```cpp\nbool check(int x){\n\tint now(0);\n\tF(i,1,n){\n\t\tnow=max(now+f[i]-x, 0);\n\t\tif(now>x*d) return false;\n\t}\n\treturn true;\n}\n\nvoid Solve(){\n\tread(n,d,m);\n\tF(i,1,m) read(a[i]), f[a[i]]++;\n\tint l=1, r=m, mid, ans(-1);\n\twhile(l<=r){\n\t\tmid=(l+r)>>1;\n\t\tif(check(mid)) r=mid-1,ans=mid;\n\t\telse l=mid+1;\n\t}\n\twrite(ans);\n}\n```\n\n\u4ee5\u53ca\u53ef\u4ee5\u8bb0\u5f55\u65b9\u6848\u7684 $\\Theta(m \\log m)$ \u4ee3\u7801\uff1a\n\n```cpp\nbool check(ll X){\n\tint l=1,r=0,x=X;\n\tF(i,1,n) b[i]=0;\n\tfor(int R=1; R<=n; R++){\n\t\tif(R<=n-d) b[++r]=f[R];\n\t\tx=X;\n\t\twhile(l<=r && x){\n\t\t\tif(b[l]-x<0){\n\t\t\t\tx-=b[l];\n\t\t\t\tb[l++]=0;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tb[l]-=x;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\twhile(b[l]==0 && l<=r) l++;\n\t\tif(r-l>=d) return false;\n\t}\n\tif(b[r]!=0) return false;\n\treturn true;\n}\n\nvoid Solve(){\n\tread(n,d,m);\n\tF(i,1,m) read(a[i]), f[a[i]]++;\n\tll l=1, r=m, mid, ans(-1);\n\twhile(l<=r){\n\t\tmid=(l+r)>>1;\n\t\tif(check(mid)) r=mid-1,ans=mid;\n\t\telse l=mid+1;\n\t}\n\twrite(ans);\n}\n/*\n10 2 12\n7 4 4 6 1 8 8 1 1 6 4 5 \n*/\n```",
        "postTime": 1674660212,
        "uid": 501865,
        "name": "TheSky233",
        "ccfLevel": 4,
        "title": "P6092 [CEOI2012] \u5de5\u4f5c\u89c4\u5212 \u9898\u89e3"
    }
]