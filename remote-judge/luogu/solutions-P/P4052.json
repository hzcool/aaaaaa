[
    {
        "content": "\u7b2c\u4e00\u6b21\u505a\u5728AC\u81ea\u52a8\u673a\u4e0a\u8dd1DP\u7684\u9898\u2026\u2026\n\n\u4e4b\u524d\u505a\u7684\u597d\u50cf\u90fd\u662f\u4e71\u641e\n\n\u5b66\u957f\u8bf4AC\u81ea\u52a8\u673a\u7684DP\u90fd\u975e\u5e38\u5957\u8def\n\n\u5927\u90e8\u5206f[i][j]\u8868\u793a\u5f53\u524d\u5728\u8282\u70b9j,\u4e14\u4e32\u957f\u4e3ai\u65f6\u7684\u60c5\u51b5\uff0c\n\n\u6709\u65f6\u518d\u52a0\u4e00\u7ef4\u8868\u793a\u8fd9\u4e2a\u72b6\u6001\u91cc\u9762\u5305\u542b\u4e86\u54ea\u4e9b\u4e1c\u897f\n\n\u800c\u4e14AC\u81ea\u52a8\u673a\u7684DP\u4f1a\u7ecf\u5e38\u8ba9\u4f60\u7528\u77e9\u9635\u4e58\u6cd5\u4f18\u5316\n\n \n\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e2a\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5c06AC\u81ea\u52a8\u673a\u5efa\u7acb\u51fa\u6765\uff0c\u7136\u540e\u641e\u4e00\u4e2a\u7b80\u5355\u7684\u5bb9\u65a5\n\n\u7528\u6240\u6709\u7684\u60c5\u51b5\u51cf\u53bb\u4e0d\u53ef\u8bfb\u7684\u60c5\u51b5\u3002\n\n\u90a3\u4e48\u90a3\u4e9b\u662f\u4e0d\u53ef\u8bfb\u7684\u60c5\u51b5\u5462\uff1f\u5f53\u7136\u5c31\u662f\u8dd1\u4e0d\u5230\u5355\u8bcd\u7ed3\u5c3e\u8282\u70b9\u7684\u60c5\u51b5\u55bd\u2026\u2026\n\n\u5b9a\u4e49f[i][j]\u8868\u793a\u5f53\u524d\u5728j\u70b9\u4e14\u4e32\u957f\u4e3ai\u65f6\u4e0d\u7ecf\u8fc7\u5355\u8bcd\u7ed3\u5c3e\u7684\u8def\u5f84\u6761\u6570\n\n\u7136\u540e\u4ece\u7236\u4eb2\u5f80\u513f\u5b50\u8f6c\u79fb\u5373\u53ef\n\n\u6ce8\u610f\u5982\u679c\u4e00\u4e2a\u5355\u8bcd\u7684\u540e\u7f00\u662f\u4e00\u4e2a\u53ef\u8bfb\u5355\u8bcd(\u5373fail\u6307\u9488\u6307\u5411\u53ef\u8bfb\u5355\u8bcd\u7684\u7ed3\u5c3e\u8282\u70b9)\n\n\u90a3\u4e48\u8fd9\u4e2a\u5355\u8bcd\u4e00\u5b9a\u4e5f\u662f\u53ef\u8bfb\u7684\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u5f80\u8fd9\u4e2a\u5355\u8bcd\u8d70\u4e86\n\n\u8bdd\u8bf4\u4e4b\u524d\u6211\u597d\u50cf\u505a\u8fc7\u7c7b\u4f3c\u7684\u4e0d\u8fc7\u6ca1\u6709\u5438\u53d6\u6559\u8badQvQ\u6d3b\u8be5WA\u597d\u4e45\n\n[\u4ee3\u7801](http://www.cnblogs.com/refun/p/8706911.html)",
        "postTime": 1522723108,
        "uid": 41890,
        "name": "Refun",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4052 \u3010[JSOI2007]\u6587\u672c\u751f\u6210\u5668\u3011"
    },
    {
        "content": "\u5728\u6211\u7684\u535a\u5ba2\u4e0a\u770b\u6548\u679c\u66f4\u4f73\uff1a[\u70b9\u8fd9\u91cc](https://www.cnblogs.com/1000Suns/p/10351847.html)\n\n---\n\u7b2c\u4e00\u9053\u5728AC\u81ea\u52a8\u673a\u4e0aDP\u7684\u9898\uff0c\u7eaa\u5ff5\u7eaa\u5ff5\u3002\n\n\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\u7b54\u6848\u5c31\u662f\u6240\u6709\u4e32\u7684\u4e2a\u6570\u51cf\u53bb\u4e0d\u5305\u542b\u53ef\u8bfb\u4e32\u7684\u4e32\u7684\u4e2a\u6570\u3002\n\n\u524d\u534a\u90e8\u5206\u662f $26^m$\u3002\u540e\u534a\u90e8\u5206\u4f7f\u7528DP\u6c42\u89e3\u3002\n\n\u9996\u5148\u5efa\u51fa\u53ef\u8bfb\u4e32\u7684AC\u81ea\u52a8\u673a\u3002\n\n\u4ee4 $dp[i][j]$ \u8868\u793a\u4e32\u957f\u4e3a $i$\uff0c\u5728AC\u81ea\u52a8\u673a\u4e0a\u8d70\u5230\u7f16\u53f7\u4e3a $j$ \u7684\u8282\u70b9\u7684\u5408\u6cd5\u4e32\u4e2a\u6570\u3002\n\n\u5982\u679c\u8d70\u5230 $j$ \u7684\u513f\u5b50 $k$ \u8fd9\u4e2a\u8282\u70b9\u7684\u4e32\u5408\u6cd5\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4ece $(i,j)$ \u8f6c\u79fb\u5230 $(i+1,ch[j][k])$\u3002\n\n$dp[i+1][ch[j][k]]+=dp[i][j](0\\le k<26)$\n\n\u521d\u59cb\u72b6\u6001 $dp[0][0]=1$\u3002\u7b54\u6848\u4e3a\u6240\u6709 $dp[m][i]$ \u7684\u6700\u5927\u503c\u3002\n\n\u53ef\u80fd\u770b\u5230\u8fd9\u91cc\uff0c\u4f60\u6700\u5927\u7684\u7591\u95ee\u5c31\u662f\uff1a\u5982\u4f55\u5224\u65ad\u8d70\u5230\u70b9 $j$ \u7684\u4e32\u662f\u5426\u5408\u6cd5\uff1f\u771f\u7684\u53ef\u884c\u5417\uff1f\n\n\u60f3\u4e00\u60f3\u5728AC\u81ea\u52a8\u673a\u7684fail\u7684\u6027\u8d28\u3002\u6211\u4eec\u5c31\u53ef\u4ee5\u53d1\u73b0\uff1a\u5982\u679c\u4ece\u70b9 $j$ \u4e0d\u505c\u6cbffail\u5f80\u4e0a\u8df3\uff0c\u7ecf\u8fc7\u7684\u6240\u6709\u70b9\uff08\u5305\u62ec $j$\uff09\u6ca1\u6709\u4e32\u5c3e\u7684\u8282\u70b9\uff0c\u90a3\u4e48 $j$ \u5408\u6cd5\uff0c\u5426\u5219\u4e0d\u5408\u6cd5\u3002\n\n\u8fd9\u4e2a\u5408\u6cd5\u6027\u53ef\u4ee5\u5728BFS\u6c42fail\u65f6\u987a\u5e26\u6c42\u51fa\u3002\n\n\uff08\u4ed4\u7ec6\u60f3\u4e00\u60f3\u5728AC\u81ea\u52a8\u673a\u4e0a\u8dd1\u5339\u914d\u7684\u672c\u8d28\u5c31\u660e\u767d\u4e86\uff09\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\sum|S|)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(\\sum|S|)$\uff0c\u5168\u90fd\u5e26\u4e00\u4e2a $26$ \u7684\u5e38\u6570\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mod=10007;\n#define FOR(i,a,b) for(int i=(a);i<=(b);i++)\n#define ROF(i,a,b) for(int i=(a);i>=(b);i--)\n#define MEM(x,v) memset(x,v,sizeof(x))\ninline int read(){\n    char ch=getchar();int x=0,f=0;\n    while(ch<'0' || ch>'9') f|=ch=='-',ch=getchar();\n    while(ch>='0' && ch<='9') x=x*10+ch-'0',ch=getchar();\n    return f?-x:x;\n}\nint n,m,cnt,q[6666],h,r,ch[6666][26],dp[111][6666],fail[6666];\nbool war[6666];    //war\u8868\u793a\u8282\u70b9\u662f\u5426\u4e0d\u5408\u6cd5\uff08\u4e0d\u5408\u6cd5\uff01\u4e0d\u5408\u6cd5\uff01\uff09\nchar str[111];\nvoid insert(char str[],int len){\n    int now=0;\n    FOR(i,1,len){\n        int p=str[i]-'A';\n        if(!ch[now][p]) ch[now][p]=++cnt;\n        now=ch[now][p];\n    }\n    war[now]=true;    //\u4e32\u5c3e\u4e0d\u5408\u6cd5\n}\nvoid build(){\n    h=1;r=0;\n    FOR(i,0,25) if(ch[0][i]) q[++r]=ch[0][i];\n    while(h<=r){\n        int u=q[h++];\n        FOR(i,0,25) if(ch[u][i]){\n            fail[ch[u][i]]=ch[fail[u]][i];\n            war[ch[u][i]]|=war[fail[ch[u][i]]];\n            //\u5982\u679cfail\u4e0d\u5408\u6cd5\uff0c\u81ea\u5df1\u4e5f\u4e0d\u5408\u6cd5\n            q[++r]=ch[u][i];\n        }\n        else ch[u][i]=ch[fail[u]][i];\n    }\n}\nint qpow(int a,int b){\n    int ans=1;\n    for(;b;b>>=1,a=a*a%mod) if(b&1) ans=ans*a%mod;\n    return ans;\n}\nint main(){\n    n=read();m=read();\n    FOR(i,1,n) scanf(\"%s\",str+1),insert(str,strlen(str+1));\n    build();\n    dp[0][0]=1;\n    FOR(i,0,m-1) FOR(j,0,cnt) FOR(k,0,25)\n        if(!war[ch[j][k]]) dp[i+1][ch[j][k]]=(dp[i+1][ch[j][k]]+dp[i][j])%mod;\n        //ch[j][k]\u5408\u6cd5\uff0c\u53ef\u4ee5\u8f6c\u79fb\n    int ans=qpow(26,m);\n    FOR(i,0,cnt) ans=(ans-dp[m][i]+mod)%mod;    //\u5bb9\u65a5\u4e00\u4e0b\n    printf(\"%d\\n\",ans);    //\u7b54\u6848\n}\n```",
        "postTime": 1549341676,
        "uid": 72118,
        "name": "AThousandSuns",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4052 \u3010[JSOI2007]\u6587\u672c\u751f\u6210\u5668\u3011"
    },
    {
        "content": "**\u535a\u5ba2\u4e2d\u6587\u7ae0\uff1a[\u9898\u89e3-\\[JSOI2007\\]\u6587\u672c\u751f\u6210\u5668](https://blog.csdn.net/KonnyWen/article/details/104238511)**\n\n### [\\[JSOI2007\\]\u6587\u672c\u751f\u6210\u5668](https://www.luogu.com.cn/problem/P4052)\n**\u8fd9\u9898\u5c31\u662f\u90a3\u79cd\u8457\u540d\u7684AC\u81ea\u52a8\u673a+dp\u9898\uff0c\u7b97\u6cd5\u552f\u4e00\uff0c\u5982\u679c\u4f60\u4e0d\u4f1aAC\u81ea\u52a8\u673a\uff0c\u51fa\u95e8\u5de6\u8f6c[\\[\u4f20\u9001\u95e8\\]](https://blog.csdn.net/KonnyWen/article/details/104226807)\u3002**\n\n\u8fd9\u9898\u5f53\u4e2d\u7684\u90a3\u4e9b\u5355\u8bcd\u5c31\u76f8\u5f53\u4e8eAC\u81ea\u52a8\u673a\u6a21\u677f\u4e2d\u7684\u6a21\u5f0f\u4e32\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u9898\u5f53\u4e2d\u662f\u8981\u6c42\u6ee1\u8db3\u201c\u5305\u542b\u81f3\u5c11\u4e00\u4e2a\u6a21\u5f0f\u4e32\u7684\u201d\u6587\u672c\u4e32\u800c\u5df2\u3002\n\n\u6240\u4ee5\u5148\u628a\u6a21\u5f0f\u4e32\u653e\u5230 $\\texttt{trie}$ \u6811\u4e0a\uff0c\u7136\u540e\u7528AC\u81ea\u52a8\u673a\u7684 $\\texttt{build()}$ \u51fd\u6570\u628a $fail$ \u6307\u9488\u6784\u9020\u51fa\u6765\uff0c\u5e76\u628a $ch[][]$ \u6570\u7ec4\u8fdb\u5316\u4e3a\u4e00\u6761\u6c38\u901a\u8def\uff0c\u4ee5\u4fbf\u907f\u514d\u6587\u672c\u4e32\u5339\u914d\u65f6\u4e00\u4e2a\u6a21\u5f0f\u4e32\u5230\u7ed3\u5c3e\u4e86\u6ca1\u6709\u5730\u65b9\u53ef\u8d70\u7684\u5c34\u5c2c\u3002\n\n**\u4ee5\u4e0a\u90fd\u662f\u5bf9\u6a21\u677f\u7684\u89e3\u8bf4\u3002** \u5bf9\u4e8e\u8fd9\u9898\uff0c\u6211\u4eec\u53d1\u73b0\u201c\u5305\u542b\u81f3\u5c11\u4e00\u4e2a\u201d\u8fd9\u6837\u7684\u7ea6\u675f\u6761\u4ef6\uff0c\u5c31\u60f3\u5230 **\u7b54\u6848$=$\u6574\u4f53$-$\u5269\u4f59**\uff0c\u5148\u6c42\u51fa\u4e00\u4e2a\u6a21\u5f0f\u4e32\u90fd\u4e0d\u5305\u542b\u7684\u6587\u672c\u4e32\u6570\uff0c\u7136\u540e\u6c42\u51fa\u6ca1\u6709\u7ea6\u675f\u6761\u4ef6\u4e0b\u6587\u672c\u4e32\u6709 $26^m$ \u79cd\uff0c\u5c31\u53ef\u4ee5\u5f97\u51fa\u7b54\u6848\u3002\n\n\u56e0\u4e3a\u8981\u6c42\u4e00\u4e2a\u6a21\u5f0f\u4e32\u90fd\u4e0d\u5305\u542b\u7684\u6587\u672c\u4e32\u6570\uff0c\u6240\u4ee5 $\\texttt{insert(s)}$ \u7684\u65f6\u5019\u5728\u6709\u5b57\u7b26\u4e32\u7ed3\u5c3e\u7684\u8282\u70b9 $x$ \u4e0a\u6ce8 $mk[x]=1$\uff0c\u5982\u4e0b\uff1a\n\n```cpp\nvoid insert(char*s){\n\tint n=strlen(s+1),p=1;\n\tfor(int i=1;i<=n;i++){\n\t\tint c=s[i]-'A'+1;\n\t\tif(!ch[p][c]) ch[p][c]=++cnt;\n\t\tp=ch[p][c];\n\t}\n\tmk[p]=1;\n}\n```\n\u53c8\u56e0\u4e3a\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u540e\u7f00\u662f\u6a21\u5f0f\u4e32\uff0c\u90a3\u4e48\u5b83\u4e5f\u4e0d\u80fd\u51fa\u73b0\u5728\u6587\u672c\u4e32\u4e2d\uff0c\u6240\u4ee5\u5728\u6784\u9020AC\u81ea\u52a8\u673a $fail$ \u6307\u9488\u7684\u65f6\u5019\u8981\u4ee4 $mk[x]|=mk[fail[x]]$\uff0c\u5982\u4e0b\uff1a\n\n```cpp\nvoid build(){\n\tfor(int i=1;i<=26;i++) ch[0][i]=1;\n\tqueue<int> q;while(q.size()) q.pop();q.push(1);\n\twhile(q.size()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int c=1;c<=26;c++)\n\t\t\tif(ch[x][c]) fa[ch[x][c]]=ch[fa[x]][c],mk[ch[x][c]]\n\t\t\t\t|=mk[fa[ch[x][c]]],q.push(ch[x][c]);\n\t\t\telse ch[x][c]=ch[fa[x]][c];\n\t}\n}\n```\n\n\u56e0\u4e3a\u8fd9\u9898\u7684\u6587\u672c\u4e32\u6ca1\u6709\u5b9e\u4f53\uff0c\u4e0d\u80fd\u901a\u8fc7AC\u81ea\u52a8\u673a\u4e0a $fail$ \u6307\u9488\u4e00\u8df3\u5b8c\u4e8b\uff0c\u6240\u4ee5\u6839\u636eAC\u81ea\u52a8\u673adp\u3002**\u8bbe $dp[i][j]$ \u8868\u793a\u957f\u5ea6\u4e3a $i$ \u4e14\u540e\u7f00\u5b57\u7b26\u4e3aAC\u81ea\u52a8\u673a\u4e0a\u8282\u70b9 $j$ \u7684\u6587\u672c\u4e32\u6570\u91cf**\uff0c\u53c8\u6587\u672c\u4e32\u4e2d\u4e0d\u80fd\u51fa\u73b0\u6a21\u5f0f\u4e32\uff0c\u6240\u4ee5\u6709\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n```cpp\nfor(int i=1;i<=m;i++)\n\tfor(int j=1;j<=t.cnt;j++)//\u5168\u70b9\u53c2\u4e0e\n\t\tfor(int c=1;c<=26;c++) //\u6cbf\u7740\u5b50\u8282\u70b9\u751f\u6210\u6587\u672c\u4e32\u4e0b\u4e00\u4e2a\u5b57\u6bcd\n\t\t\tif(!t.mk[t.ch[j][c]])  //\u907f\u5f00\u6a21\u5f0f\u4e32\n\t\t\t\tdp[i][t.ch[j][c]]=(dp[i][t.ch[j][c]]+dp[i-1][j])%mod;\n```\n\u5982\u679cAC\u81ea\u52a8\u673a\u8282\u70b9\u6570\u4e3a $cnt$\uff0c\u90a3\u4e48\u4e00\u4e2a\u6a21\u5f0f\u4e32\u90fd\u4e0d\u5305\u542b\u7684\u6587\u672c\u4e32\u6570\u5c31\u4e3a $\\sum\\limits_{i=1}^{cnt}dp[m][i]$\uff0c\u6240\u4ee5\u7b54\u6848\u5c31\u662f\uff1a\n\n$$(26^m-\\sum\\limits_{i=1}^{cnt}dp[m][i])\\mod 10007$$\n\n\u56e0\u4e3a\u6a21\u6570\u5c0f\uff0c\u53ea\u6709 $10007$\uff0c\u6240\u4ee5\u4e0d\u5fc5\u5f00 $\\texttt{long long}$\uff0c\u4f46\u5982\u679c\u4f60\u5fd8\u8bb0\u53d6\u6a21\u4e86\uff0c$\\texttt{long long}$ \u4e5f\u6551\u4e0d\u4e86\u4f60\u3002\u5982\u679c\u4f60\u61c2\u4e86\uff0c\u90a3\u4e48\u849f\u84bb\u5c31\u653e\u4ee3\u7801\u4e86\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=70;\nconst int M=110;\nconst int mod=1e4+7;\nclass Trie{\npublic:\n\tint ch[N*M][30],cnt;\n\tbool mk[N*M];\n\tTrie(){cnt=1;}\n\tvoid insert(char*s){\n\t\tint n=strlen(s+1),p=1;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tint c=s[i]-'A'+1;\n\t\t\tif(!ch[p][c]) ch[p][c]=++cnt;\n\t\t\tp=ch[p][c];\n\t\t}\n\t\tmk[p]=1;\n\t}\n};\nclass Acam:public Trie{\npublic:\n\tint fa[N*M];\n\tvoid build(){\n\t\tfor(int i=1;i<=26;i++) ch[0][i]=1;\n\t\tqueue<int> q;while(q.size()) q.pop();q.push(1);\n\t\twhile(q.size()){\n\t\t\tint x=q.front();q.pop();\n\t\t\tfor(int c=1;c<=26;c++)\n\t\t\t\tif(ch[x][c]) fa[ch[x][c]]=ch[fa[x]][c],mk[ch[x][c]]\n\t\t\t\t\t|=mk[fa[ch[x][c]]],q.push(ch[x][c]);\n\t\t\t\telse ch[x][c]=ch[fa[x]][c];\n\t\t}\n\t}\n}t;\nint n,m,dp[M][N*M],ans=1;\nchar s[M];\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%s\",s+1),t.insert(s);\n\tt.build();\n\tdp[0][1]=1;\n\tfor(int i=1;i<=m;i++) for(int j=1;j<=t.cnt;j++)\n\t\tfor(int c=1;c<=26;c++) if(!t.mk[t.ch[j][c]]) \n\t\t\tdp[i][t.ch[j][c]]=(dp[i][t.ch[j][c]]+dp[i-1][j])%mod;\n\tfor(int i=m,j=26;i;j=(j*j)%mod,i>>=1)\n\t\tif(i&1) ans=(ans*j)%mod;\n\tfor(int i=1;i<=t.cnt;i++) ans=(ans-dp[m][i]+mod)%mod;\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\u540e\u7eed\u5b66\u4e60\u63a8\u8350\u9898\u76ee\uff1a\n\n[\\[NOI2011\\]\u963f\u72f8\u7684\u6253\u5b57\u673a](https://www.luogu.com.cn/problem/P2414)\n\n[\\[SDOI2014\\]\u6570\u6570](https://www.luogu.com.cn/problem/P3311)\n\n[\\[JSOI2009\\]\u5bc6\u7801](https://www.luogu.com.cn/problem/P4045)\n\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**\n\n",
        "postTime": 1581248387,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4052 \u3010[JSOI2007]\u6587\u672c\u751f\u6210\u5668\u3011"
    },
    {
        "content": "\n**\u95ee\u9898\u4e00** \u5047\u8bbe\u53ea\u6709\u4e00\u4e2a\u5355\u8bcd\uff0c\u600e\u4e48\u505a\uff1f\n\n\u5bf9\u5355\u8bcd\u5de6\u4e2aKMP, \u8bbe$F[i,j]$\u4e3a\u5df2\u6784\u6210\u957f\u5ea6\u4e3a$i$,\u5355\u8bcd\u5339\u914d\u5230\u4f4d\u7f6e$j$\u7684,\u4e14\u6ca1\u6709\u4e00\u6b21\u5339\u914d\u5b8c\u5168\u7684\u65b9\u6848\u6570.\u663e\u7136,\u8f6c\u79fb\u65b9\u7a0b\u662f:\n\n$F[i,j] \\rightarrow F[i+1,j\\text{\u6216\u8005\u5176FAIL\u94fe\u7684\u67d0\u4e2a\u4f4d\u7f6e}+1]$\n\n\n\u6700\u7ec8\u7b54\u6848\u4e3a$26^m-F[m,*]$.(\u5f88\u663e\u7136\u7684\u8865\u96c6\u8f6c\u5316)\n\n**\u95ee\u9898\u4e8c** \u73b0\u5728\u6709\u5f88\u591a\u4e2a\u5355\u8bcd, \u600e\u4e48\u505a?\n\n\u591a\u4e2a\u5355\u8bcd\u7684\u505a\u6cd5, \u628a\u5355\u8bcd\u4eec\u505a\u6210Trie\u56fe, \u65b9\u7a0b\u4e5f\u5c31\u53d8\u6210:\n\n$F[i,j] \\rightarrow F[i+1,Trie[j].ch[c]]$\n\n(j\u6b64\u65f6\u4ee3\u8868 Trie\u56fe \u4e0a\u7684\u4e00\u4e2a\u8282\u70b9, \u5339\u914d\u5b8c\u5168\u6307\u7684\u5c31\u662f\u7ecf\u8fc7\u5e26\u6709end\u6807\u8bb0\u7684\u8282\u70b9.)\n\t\n~~\u8bf6,\u4e0d\u8df3FAIL\u94fe\u5566?~~ \u7b28,**Tire\u56fe**\u5df2\u7ecf\u628a\u8fd9\u4e2a\u8fc7\u7a0b\u4f18\u5316\u6389\u4e86\u4e86.\u5728\u6807\u51c6\u7684ACAM\u91cc,\u5982\u679c\u5f53\u524d\u8282\u70b9\u5b58\u5728\u513f\u5b50c,\u76f4\u63a5\u8f6c\u79fb\u8fc7\u53bb; \u4e0d\u7136,\u5c31\u5f97\u6761FAIL\u94fe.**\u4f46\u662f**,\u54b1\u4e0d\u662f\u6709\u8fd9\u6837\u4e00\u53e5\u8bdd\u5417?\n\t\n```cpp\nat void build():\n\tif(!Trie[x].ch[i]) Trie[x].ch[i]=Tire[Trie[x].fail].ch[i];\n```\n\t\n\u5de7\u5999\u5427?\n\n**\u6ce8\u610f** \u82e5\u4e00\u4e2a\u70b9\u7684 FAIL\u94fe \u91cc\u5b58\u5728\u67d0\u4e2a\u5355\u8bcd\u7684 end\u6807\u8bb0 ,\u663e\u7136\u8fd9\u4e2a\u70b9\u662fGG\u7684.\n (\u8fd9\u4e2a\u70b9\u4ee3\u8868\u4e00\u4e2a\u5b57\u4e32, FAIL\u94fe \u4e0a\u7684\u70b9\u4ee3\u8868\u7684\u5b57\u4e32\u8fd9\u4e2a\u5b57\u4e32\u7684\u540e\u7f00) \u8fd9\u4e2a\u6027\u8d28\u592a\u6709\u7528\u4e86.\n\n\u4ee3\u7801\u8865\u8d34\u4e86.\n\n",
        "postTime": 1535169604,
        "uid": 89742,
        "name": "Qura",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4052 \u3010[JSOI2007]\u6587\u672c\u751f\u6210\u5668\u3011"
    },
    {
        "content": "\u5408\u6cd5\u7684\u60c5\u51b5\u603b\u6570\u5e76\u4e0d\u597d\u6c42\uff0c\u8003\u8651\u6c42\u51fa\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\uff08\u5373\u4e0d\u5b58\u5728\u4e00\u4e2a\u5b50\u4e32\u7b49\u4e8e\u6a21\u5f0f\u4e32\uff09\uff0c\u6700\u540e\u7528\u603b\u6570\u51cf\u53bb\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u662f\u591a\u6a21\u5f0f\u4e32\u5339\u914d\u95ee\u9898\uff0c\u8003\u8651\u5728 AC \u81ea\u52a8\u673a\u4e0a\u6c42\u89e3\u3002\n\n\u8bbe $f(i,j)$ \u8868\u793a\u5f53\u524d\u51c6\u5907\u5339\u914d\u7b2c $i$ \u4e2a\u5b57\u7b26\uff0c\u4e14\u5f53\u524d\u5728 AC \u81ea\u52a8\u673a\u4e0a\u7684 $j$ \u8282\u70b9\u65f6\uff0c\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\u603b\u6570\u3002\n\n\u600e\u4e48\u8f6c\u79fb\uff1f\u4e0d\u80fd\u7ecf\u8fc7\u54ea\u4e9b\u8282\u70b9\uff1f\n\n\u663e\u7136\u7ec8\u6b62\u8282\u70b9\u662f\u4e0d\u80fd\u7ecf\u8fc7\u7684\u3002\u9664\u6b64\u4e4b\u5916\u5462\uff1f\u6ce8\u610f\u5230\u6211\u4eec\u7684\u5339\u914d\u8fc7\u7a0b\u4f1a\u4e0d\u505c\u5730\u8df3 fail \u6307\u9488\uff0c\u56e0\u6b64\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u80fd\u901a\u8fc7\u8df3\u82e5\u5e72\u6b21 fail \u6307\u9488\u5230\u8fbe\u4e00\u4e2a\u7ec8\u6b62\u8282\u70b9\uff0c\u5219\u8be5\u70b9\u4e5f\u662f\u4e0d\u80fd\u7ecf\u8fc7\u7684\u3002\n\n\u6c42\u6240\u6709\u4e0d\u80fd\u7ecf\u8fc7\u8282\u70b9\u7684\u5de5\u4f5c\uff0c\u53ef\u4ee5\u5728\u6c42 fail \u6307\u9488\u7684\u65f6\u5019\u987a\u4fbf\u5b8c\u6210\u3002\n\n```cpp\n// Problem : P4052 [JSOI2007]\u6587\u672c\u751f\u6210\u5668\n// Contest : Luogu\n// URL : https://www.luogu.com.cn/problem/P4052\n// Memory Limit : 125 MB\n// Time Limit : 1000 ms\n// Powered by CP Editor (https://github.com/cpeditor/cpeditor)\n\n#include <iostream>\n#include <string>\n#include <queue>\n#define MOD 10007\nusing namespace std;\nconst int sigma=26;\nint tr[6005][sigma],fail[6005],cnt;\nint vis[6005];\nint f[105][6005];\nint fpow(int x,int y)\n{\n int ans=1;\n while(y--)\n  ans=ans*x%MOD;\n return ans;\n}\nvoid insert(string s)\n{\n int u=0;\n for(auto c:s)\n {\n  if(!tr[u][c-'A'])\n   tr[u][c-'A']=++cnt;\n  u=tr[u][c-'A'];\n }\n vis[u]=1;\n}\nvoid build()\n{\n queue<int> q;\n for(int i=0;i<sigma;i++)\n  if(tr[0][i])q.push(tr[0][i]);\n while(!q.empty())\n {\n  int u=q.front();\n  q.pop();\n  for(int i=0;i<sigma;i++)\n  {\n   if(tr[u][i])\n   {\n    fail[tr[u][i]]=tr[fail[u]][i];\n    vis[tr[u][i]]|=vis[fail[tr[u][i]]];\n    q.push(tr[u][i]);\n   }\n   else\n    tr[u][i]=tr[fail[u]][i];\n  }\n }\n}\nint main()\n{\n int n,m;\n cin>>n>>m;\n int ans=fpow(26,m);\n for(int i=1;i<=n;i++)\n {\n  string s;\n  cin>>s;\n  insert(s);\n }\n build();\n f[0][0]=1;\n for(int i=0;i<m;i++)\n  for(int j=0;j<=cnt;j++)\n   for(int k=0;k<sigma;k++)\n    if(!vis[tr[j][k]])\n     f[i+1][tr[j][k]]=(f[i+1][tr[j][k]]+f[i][j])%MOD;\n for(int i=0;i<=cnt;i++)\n  ans=(ans-f[m][i]+MOD)%MOD;\n cout<<ans<<endl;\n return 0;\n}\n```",
        "postTime": 1595264254,
        "uid": 22030,
        "name": "StudyingFather",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4052 \u3010[JSOI2007]\u6587\u672c\u751f\u6210\u5668\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e9b\u6a21\u5f0f\u4e32\uff0c\u6c42\u957f\u5ea6\u4e3am\u7684\u6240\u6709\u6587\u672c\u4e32\u7684\u4e2a\u6570\uff0c\u4e14\u8be5\u6587\u672c\u4e32\u81f3\u5c11\u5305\u62ec\u4e00\u4e2a\u6a21\u5f0f\u4e32\uff0c\u7b54\u6848\u5bf910007\u53d6\u6a21\n\n## \u601d\u8def\n\n//\u6ca1\u6709\u8c03\u7528get_fail()\u8c03\u4e86\u4e00\u4e2a\u5c0f\u65f6\u6211\u6015\u4e0d\u662f\u795e\u4ed9....\n\n\u770b\u5230\u4e00\u5806\u5b57\u7b26\u4e32\u7684\u5339\u914d\u95ee\u9898\uff0c\u9996\u5148\u5c31\u53ef\u4ee5\u8003\u8651\u81ea\u52a8\u673a\u5168\u5bb6\u6876\u4e86......~~\u5f88\u5bb9\u6613~~\u53d1\u73b0\u7528AC\u81ea\u52a8\u673a\u770b\u8d77\u6765\u53ef\u505a\n\n\u5bf9\u6240\u6709\u4e32\u5efaAC\u81ea\u52a8\u673a\uff0c\u7136\u540e\u53d8\u6210trie\u56fe\uff0c\u4e00\u4e2a\u6587\u672c\u4e32\u53ea\u8981\u5305\u62ec\u4e86\u4e00\u4e2aend\u6807\u8bb0\u5c31\u8bf4\u660e\u5305\u62ec\u81f3\u5c11\u4e00\u4e2a\u4e32\u3002\u5728\u56fe\u4e0a\u8fd9\u6837\u7684\u7edf\u8ba1\u95ee\u9898\uff0c\u5bb9\u6613\u60f3\u5230\u662fdp\n\n\u4e8e\u662f\u5927\u591a\u6570\u9898\u89e3\u5230\u8fd9\u91cc\u5c31\u8fd0\u7528\u4e86\u4e00\u4e2a\u7ecf\u5178\u7684\u56db\u5b57\u6210\u8bed\n\n## \u6b63\u96be\u5219\u53cd\n\n~~\u624d\u602a~~\n\n\u867d\u7136\u6b63\u96be\u5219\u53cd\uff08\u6240\u6709\u4e32-\u4e0d\u5305\u542b\u4efb\u4e00\u4e2a\u7684\u4e32\uff09\u53ef\u505a\uff0c\u4f46\u662f\u6309\u7167\u6b63\u5e38\u7684\u601d\u8def\u6765\u8bf4\uff0c\u5219\u53cd\u9996\u5148\u8981\u6b63\u96be\uff0c\u7136\u800c\u5b83\u5e76\u4e0d\u96be......\u5bf9\u4e8e\u6211\u8fd9\u4e2a\u849f\u84bb\u6765\u8bf4\u5f88\u96be\u5c31\u6b64\u60f3\u5230\u53cd\u63a8\uff08\u4e2a\u4eba\u8ba4\u4e3a\u5426\u5b9a\u6b63\u7740\u505a\u4f1a\u8bef\u5bfc\u840c\u65b0\u6bd4\u5982\u672c\u4eba\uff09\n\n\u7528f[ i ][ j ][0 / 1]\u8868\u793a\u5230\u4e86i\u53f7\u70b9\uff0c\u5f53\u524d\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3aj\uff0c\u662f\u5426\u7ecf\u8fc7\u8fc7\u6709\u6807\u8bb0\u7684\u70b9\uff0c\u8fd9\u6837\u7684\u603b\u65b9\u6848\u6570\uff0c\u90a3\u4e48\u6700\u7ec8\u7684\u7b54\u6848\u5c31\u4e3asigma( f[ 0 ~ ndsum ][ m ][ 1 ] )\u3002\n\n\u8fd9\u6837\u9012\u63a8\u4e5f\u662f\u76f8\u5f53\u7b80\u5355\u7684\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u524d\u4e00\u4f4d\u5148\u88ab\u6c42\u51fa\u6765\uff0c\u6240\u4ee5\u5916\u5c42\u5faa\u73af\u5148\u679a\u4e3e\u5b57\u7b26\u4e32\u957f\u5ea6j\n\n```cpp\nif(is_end[now])//\u662f\u7ec8\u70b9\u5c31\u6ca1\u67090\u72b6\u6001 \n{\n\tf[now][i][1]=(f[now][i][1]+f[j][i-1][0]+f[j][i-1][1])%mod;\n}\nelse//\u4e0d\u662f\u7ec8\u70b9 \n{\n\tf[now][i][0]=(f[now][i][0]+f[j][i-1][0])%mod;\n\tf[now][i][1]=(f[now][i][1]+f[j][i-1][1])%mod;\n\t//f[now][i][1]\u4e0d\u4ecef[j][i-1][0]\u8f6c\u5316\u8fc7\u6765qwq \n}\n```\n\n\u518d\u52a0\u5165AC\u81ea\u52a8\u673a\u6a21\u677f\u5373\u53ef\u8f7b\u677e\u5207\u6389\uff08\uff09\n\nCode\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define N 6100\nusing namespace std;\nconst int mod = 10007;\nint n,m;\nint nxt[N][26],fail[N],is_end[N],ndsum;\nint f[N][105][2];//\u8d70\u4e86j\u6b65\u8d70\u5230\u4e86i\u70b9,\u662f\u5426\u6709\u7ecf\u8fc7\u5355\u8bcd \nchar s[N];\nvoid ad(char c[])\n{\n\tint now=0,len=strlen(c);\n\tfor(int i=0;i<len;++i)\n\t{\n\t\tint p=c[i]-'A';\n\t\tif(!nxt[now][p]) nxt[now][p]=++ndsum;\n\t\tnow=nxt[now][p];\n\t}\n\tis_end[now]=1;\n}\nvoid get_fail()\n{\n\tqueue<int> q;\n\tfor(int i=0;i<26;++i) if(nxt[0][i]) q.push(nxt[0][i]);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();q.pop();\n\t\tfor(int j=0;j<26;++j)\n\t\t{\n\t\t\tif(nxt[u][j])\n\t\t\t{\n\t\t\t\tq.push(nxt[u][j]);\n\t\t\t\tfail[nxt[u][j]]=nxt[fail[u]][j];\n\t\t\t\tis_end[nxt[u][j]]|=is_end[nxt[fail[u]][j]];\n\t\t\t}\n\t\t\telse nxt[u][j]=nxt[fail[u]][j];\n\t\t}\n\t}\n}\nvoid dp()\n{\n\tf[0][0][0]=1;\n\tfor(int i=1;i<=m;++i)//step\n\t{\n\t\tfor(int j=0;j<=ndsum;++j)//node\n\t\t{\n\t\t\tfor(int k=0;k<26;++k)//next\n\t\t\t{\n\t\t\t\tint now=nxt[j][k];\n\t\t\t\tif(is_end[now])//\u662f\u7ec8\u70b9\u5c31\u6ca1\u67090\u72b6\u6001 \n\t\t\t\t{\n\t\t\t\t\tf[now][i][1]=(f[now][i][1]+f[j][i-1][0]+f[j][i-1][1])%mod;\n\t\t\t\t}\n\t\t\t\telse//\u4e0d\u662f\u7ec8\u70b9 \n\t\t\t\t{\n\t\t\t\t\tf[now][i][0]=(f[now][i][0]+f[j][i-1][0])%mod;\n\t\t\t\t\tf[now][i][1]=(f[now][i][1]+f[j][i-1][1])%mod;\n\t\t\t\t\t//f[now][i][1]\u4e0d\u4ecef[j][i-1][0]\u8f6c\u5316\u8fc7\u6765qwq \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%s\",s);\n\t\tad(s);\n\t}\n\tget_fail();\n\tdp();\n\tint ans=0;\n\tfor(int i=0;i<=ndsum;++i) ans=(ans+f[i][m][1])%mod;\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\uff08\u5f53\u7136\u8fd9\u9053\u9898f\u7684\u7b2c\u4e8c\u7ef4\u663e\u7136\u662f\u53ef\u4ee5\u6eda\u6389\u76842333\uff09",
        "postTime": 1563192627,
        "uid": 115482,
        "name": "kkksx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4052 \u3010[JSOI2007]\u6587\u672c\u751f\u6210\u5668\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\uff0c\u4eba\u4eba\u90fd\u8bf4\u662fAC\u81ea\u52a8\u673a\u4e0adp\u7684\u5957\u8def\u677f\u5b50\uff0c\u4f46\u662f\u4ed6\u4eec\u7ed9\u7684\u5206\u6790\u849f\u84bb\u6b7b\u6d3b\u4e5f\u542c\u4e0d\u660e\u767d(\u53ef\u80fd\u662f\u521d\u5b66\u7684\u7f18\u6545.......)\n\n\u597d\u4e45\u7ec8\u4e8e\u641e\u61c2\u4e86\uff0c\u5199\u4e86\u8fd9\u7bc7\u9898\u89e3\u60f3\u9020\u798f\u8ddf\u6211\u4e00\u6837\u7684\u540c\u80de(~~\u5e94\u8be5\u53ea\u6709\u6211\u4e00\u4e2a\u4eba\u8fd9\u4e48\u83dc......~~)\n\n#### \u9898\u610f\u7b80\u5316\u3000\uff1a\n\u7ed9\u4f60$n$\u4e2a\u6a21\u5f0f\u4e32\uff0c\u4f60\u9700\u8981\u751f\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a$m$\u7684\u5b57\u7b26\u4e32\u4f7f\u5f97\u81f3\u5c11\u4e00\u4e2a\u6a21\u5f0f\u4e32\u53ef\u4ee5\u5339\u914d\u6210\u529f\uff0c\u95ee\u53ef\u884c\u7684\u751f\u6210\u65b9\u6848\u603b\u6570\u5bf910007\u53d6\u6a21\u3002\n\n\u591a\u4e32\u5339\u914d\uff0c\u8ba1\u6570\uff0c\u662fdp + AC\u81ea\u52a8\u673a.....(\u8fd9\u91cc\u8fd8\u662f\u86ee\u663e\u7136\u7684)\n\n\u4f46\u662f\u600e\u4e48\u505a?\n\n#### \u601d\u8def\n\u4ec0\u4e48\u6837\u7684\u5b57\u7b26\u4e32\u4f7f\u5f97\u81f3\u5c11\u4e00\u4e2a\u6a21\u5f0f\u4e32\u53ef\u4ee5\u5339\u914d\uff1f\u8fd9\u4e2a\u4e1c\u897f\u592a\u96be\u5904\u7406\u4e86\u3002\n\n\u6b63\u96be\u5219\u53cd --------- OI\u4e2d\u7684\u8457\u540d\u56db\u5b57\u6210\u8bed\n\n\u4e0d\u59a8\u8f6c\u5316\u4e3a\u6c42\u6ca1\u6709\u4e00\u4e2a\u6a21\u5f0f\u4e32\u53ef\u4ee5\u5339\u914d\u6210\u529f\u7684\u65b9\u6848\u6570\u4e3a$sum$\u3002(\u8865\u96c6\u8f6c\u6362)\n\n\u7136\u540e\u4e0d\u542b\u4e00\u4e2a\u6a21\u5f0f\u4e32\u7684\u5b57\u7b26\u4e32\u7684\u65b9\u6848\u5c31\u662f$26^m - sum$\n\n\u9996\u5148\u7528$n$\u4e2a\u6a21\u5f0f\u4e32\u6a21\u5f0f\u4e32\u5efa\u7acb\u4e00\u4e2aAC\u81ea\u52a8\u673a\n\n##### \u601d\u8003\u4ec0\u4e48\u65f6\u5019\u4f1a\u6709\u4e00\u4e2a\u6587\u672c\u4e32\u4f7f\u5f97\u6ca1\u6709\u4e00\u4e2a\u6a21\u5f0f\u4e32\u53ef\u4ee5\u5339\u914d\u6210\u529f\uff1f\n\n```cpp\n//\u8fd9\u662fAC\u81ea\u52a8\u673a\u8fdb\u884c\u5339\u914d\u7684\u4ee3\u7801\u3002\n//\u8fd9\u6bb5\u51fd\u6570\u5c06\u4f1a\u8f93\u51fa\u6709\u591a\u5c11\u4e2a\u6a21\u5f0f\u4e32\u4e0e\u6587\u672c\u4e32\u5339\u914d\u6210\u529f\nvoid GetAns()\n{\n\tint len = strlen(a),now = 0 , ans = 0;\n\tfor(int i = 0 ; i < len  ; i ++)\n\t{\n\t\tint num = a[i] - 'a';\n\t\tnow = AC[now].son[num];\n\t\tfor(int u = now ; AC[u].end != -1 && u ; u = AC[u].Fail)\n\t\t{\n\t\t\tans += AC[u].end;\n\t\t\tAC[u].end = -1;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn ;\n}\n```\n\u89c2\u5bdf\uff21\uff23\u81ea\u52a8\u673a\u83b7\u53d6\u7b54\u6848\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u53d1\u73b0:\n\n\u8bbf\u95ee\u5230\u4e00\u4e2a\u6587\u672c\u4e32\u91cc\u9762\u7684\u8282\u70b9\uff0c\u6211\u4eec\u5c31\u4f1a\u4e0d\u505c\u7684\u8df3\u8fd9\u4e2a\u70b9\u7684$Fail$\uff0c\u8fd9\u4e2a\u70b9\u7684$Fail$\u7684$Fail$ .......(\u8fd9\u4e2a\u5c31\u88ab\u79f0\u4e3a$Fail$\u94fe)\uff0c\u76f4\u5230\u8df3\u5230\u6839\u6216\u8005\u662f\u7b54\u6848\u5df2\u7ecf\u88ab\u8ba1\u7b97\u8fc7\u7684\u70b9(\u5df2\u7ecf\u88ab\u8df3\u8fc7\u4e86\uff0c\u518d\u5f80\u4e0b\u8df3\u5c31\u91cd\u590d\u4e86)\u3002\n\n\u7136\u540e\u7b54\u6848\u7d2f\u52a0\u4e0a\u4ee5\u8df3\u5230\u7684\u70b9\u4e3a\u7ed3\u5c3e\u7684\u6a21\u5f0f\u4e32\u7684\u4e2a\u6570\u3002\n\n\u5047\u8bbe$i$\u7684$Fail$\u6307\u9488\u6307\u5411\u70b9$j$\uff0c\u6839\u636e$Fail$\u6307\u9488\u7684\u5b9a\u4e49\u5c31\u4e3a\uff1a\uff34\uff52\uff49\uff45\u4e0a\u6839\u8282\u70b9\u5230$j$\u7684\u8def\u5f84\u5f62\u6210\u7684\u5b57\u7b26\u4e32\u662f\uff34\uff52\uff49\uff45\u4e0a\u6839\u8282\u70b9\u5230$i$\u7684\u8def\u5f84\u5f62\u6210\u7684\u5b57\u7b26\u4e32\u7684\u540e\u7f00\n\n\u90a3\u4e48\u8fd9\u6837\u5b50\u7b54\u6848\u662f\u663e\u7136\u53ef\u884c\u7684.\n\n\u90a3\u4e48\u6211\u4eec\u8981\u8ba9\u7b54\u6848\u4e3a0\uff0c\u600e\u4e48\u529e?\n\n\u90a3\u5c31\u662f\u5f53\u524d\u70b9\u4ee5\u53ca\u8df3\u5230\u7684\u70b9\u4e0a\uff0c\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u6a21\u5f0f\u4e32\u4ee5\u5b83\u4eec\u4e3a\u7ed3\u5c3e\uff0c\u6211\u4eec\u8981\u9009\u7684\u70b9\u662f\u8fd9\u4e9b\uff0c\u81f3\u4e8e\u5176\u4ed6\u7684\u70b9\uff0c\u6211\u4eec\u5219\u8981\"\u907f\u5f00\"\u3002\n\n#### \u8003\u8651\u5982\u4f55DP\n\n\u6839\u636e\u5957\u8def(\u6ca1\u529e\u6cd5\uff0c\u5957\u8def\u8fd8\u662f\u5f97\u77e5\u9053\u4e00\u4e0b\u7684)\uff0c\uff21\uff23\u81ea\u52a8\u673a\u4e0a\u7684\uff24\uff30\u4e00\u822c\u72b6\u6001\u7684\u8bbe\u7f6e\u662f\u8fd9\u6837\u5b50\u7684: $DP[i][j]$ <-----\u3000\u8868\u793aAC\u81ea\u52a8\u673a\u4e0a\u8d70$i$\u6b65\u4e14\u6700\u540e\u8d70\u7684\u4e00\u4e2a\u662f$j$\u7684\u7b54\u6848\n\n\u6839\u636e\u4e0a\u9762\u7684\u5206\u6790$DP[i][k] $\u5c31\u8981\u7d2f\u52a0\u4e0a $DP[i - 1][j]$ ($k$\u662f$j$\u7684\u513f\u5b50\uff0c\u540c\u65f6\u6ee1\u8db3$j$\u6ca1\u6709\u4e00\u4e2a\u6a21\u5f0f\u4e32\u4ee5\u5176$Fail$\u94fe\u4e0a\u7684\u70b9(\u5305\u62ec$j$)\u4e3a\u7ed3\u5c3e)\n\n\u6700\u540e\uff0c\u7edf\u8ba1\u51fa\u6765\u6240\u6709\u7684\u7b54\u6848$\\sum_{i = 0}^{i = cnt} {DP[m][i]}\u4e5f\u5c31\u662f\u4ee5\uff21\uff23\u81ea\u52a8\u673a\u4e0a\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u4e3a\"j\"\u7684\u7b54\u6848\uff0c\u540c\u65f6\u6587\u672c\u8981\u6c42\u957f\u5ea6\u4e3am$\n\n\u7b54\u6848\u5c31\u662f$(26^m - sum)$   $mod$   $10007$\n\n\u81f3\u6b64\u7ed3\u675f.\n\n\u6ce8\u610f\u4e00\u4e0b\u6a21\u610f\u4e49\u4e0b\u51cf\u6cd5\u8981\u52a0\u4e0a$Mod$\u9632\u6b62\u53d8\u6210\u8d1f\u6570,\u8be6\u89c1\u4ee3\u7801\u3002\n\n## Code\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m,cnt = 0;\nconst int MAXN = 6005,MAXM = 105,Mod = 10007;//\u5e38\u91cf\u8d4b\u503c\nchar s[1005];//\u7ed9\u5b9a\u7684\u6a21\u5f0f\u4e32\u7528\u8fd9\u4e2a\u5b58\nstruct node{\n\tint end,Fail;\n\tint son[26];\n}AC[MAXN];//AC\u81ea\u52a8\u673a\nint vis[MAXN];//\u5efa\u7acbFail\u6307\u9488\u7684\u65f6\u5019\u8981\u7528\u7684\u4e1c\u897f\nint f[MAXM][MAXN];//DP\u6570\u7ec4\nvoid build()\n{\n\tint len = strlen(s),now = 0;\n\tfor(int i = 0 ; i < len ; i ++)\n\t{\n\t\tint num = s[i] - 'A';\n\t\tif(AC[now].son[num] == 0)\n\t\t\tAC[now].son[num] = ++cnt;\n\t\tnow = AC[now].son[num];\n\t}\n\tAC[now].end = 1;\n}//\u5efa\u7acbAC\u81ea\u52a8\u673a\n\nvoid GetFail()\n{\n\tint now = 0 , head = 0 , tail = 0;\n\tfor(int i = 0 ; i < 26 ; i ++)\n\t\tif(AC[0].son[i])\n\t\t\ttail ++ , vis[tail] = AC[0].son[i];\n\twhile(head < tail)\n\t{\n\t\thead ++;\n\t\tint v = vis[head];\n\t\tfor(int i = 0 ; i < 26 ; i ++)\n\t\t{\n\t\t\tif(AC[v].son[i])\n\t\t\t{\n\t\t\t\tAC[AC[v].son[i]].Fail = AC[AC[v].Fail].son[i];\n\t\t\t\ttail ++;\n\t\t\t\tvis[tail] = AC[v].son[i];//\u666e\u901a\u7684\u5efa\u7acbAC\u81ea\u52a8\u673a\u5373\u53ef\n\t\t\t\tAC[AC[v].son[i]].end |= AC[AC[AC[v].son[i]].Fail].end;//\u8fd9\u91cc\u8fd0\u7528\u4e86\u6216\u8fd0\u7b97\u6765\u6c42\u51faFail\u94fe\u4e0a\u662f\u5426\u6709\u4e00\u4e2a\u70b9\u4e3a\u6a21\u5f0f\u4e32\u7684\u7ed3\u5c3e\n\t\t\t}\n\t\t\telse AC[v].son[i] = AC[AC[v].Fail].son[i];\n\t\t}\n\t}\n\treturn ;\n}\n\nint quick_power(int x,int y){\n\tint ans = 1 , op = x;\n\tif(y == 2)return x*x;\n\tif(x == 0)return 0;\n\twhile(y){\n\t\tif(y % 2 == 1)ans *= op , ans %= Mod;\n\t\top *= op , op %= Mod;\n\t\ty = y >> 1;\n\t}\n\treturn ans % Mod;\n}\n\nvoid DP()\n{\n\tf[0][0] = 1;\n\tfor(int i = 1 ; i <= m ; i ++)\n\t\tfor(int j = 0 ; j <= cnt ; j ++)\n\t\t\tif(!AC[j].end)//\u6211\u4eec\u663e\u7136\u4e0d\u80fd\u5bf9\u4e0d\u5408\u6cd5\u7684\u70b9\u8fdb\u884c\u52a8\u6001\u89c4\u5212\n\t\t\t{\n\t\t\t\tfor(int k = 0 ; k < 26 ; k ++)\n\t\t\t\tf[i][AC[j].son[k]] =( f[i][AC[j].son[k]] + f[i - 1][j] )% Mod;\n\t\t\t}\n\tint ans = 0;\n\tfor(int j = 0 ; j <= cnt ; j ++)\n\t\tif(!AC[j].end)ans += f[m][j],ans %= Mod;\n\tcout <<(quick_power(26,m) - ans + Mod )% Mod;//\u8fd9\u91cc\u8981\u52a0\u4e0aMod\uff0c\u4e0d\u7136\u4f1a\u6b7b\n}\n\nint main()\n{\n\tcin >> n >> m;\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tcin >> s;\n\t\tbuild();\n\t}\n\tGetFail();//\u8fd9\u91cc\u662f\u8fdb\u884c\u5efaFail\u7684\n\tDP();//\u8fd9\u91cc\u662f\u8fdb\u884cDP\u7684\n\treturn 0;\n}\n```",
        "postTime": 1603785972,
        "uid": 67817,
        "name": "MuYC",
        "ccfLevel": 6,
        "title": "P4052[JSOI2007]\u6587\u672c\u751f\u6210\u5668"
    },
    {
        "content": "\u4ee5\u4e0b\u662f\u5410\u69fd\uff0c\u53ef\u4ee5\u8df3\u8fc7\u3002\n---\n\u521a\u5f00\u59cb\u770b\u9898\u7684\u65f6\u5019\uff0c\u55ef\u3002\u3002\u8fd9\u4e0d\u548c[HNOI2008]GT\u8003\u8bd5\u4e00\u6a21\u4e00\u6837\u5417\uff0c\u5c31\u662f\u628akmp\u6362\u6210\u4e86ac\u81ea\u52a8\u673a\uff0c\uff08\u53cd\u6b63ac\u81ea\u52a8\u673a\u5c31\u662f\u653e\u5927\u7248\u7684kmp\u561b\uff09\u3002\n\u7136\u540e\u4fe1\u5fc3\u767e\u500d\u7684\u5f00\u59cb\u6572\u4ee3\u7801\uff0c\u81ea\u4fe1\u7684\u8fd0\u884c\u7a0b\u5e8f\uff0c\u54a6\uff0c\u600e\u4e48\u8fde\u6837\u4f8b\u90fd\u8fc7\u4e0d\u4e86\uff0c\u7136\u540e\u53d1\u73b0\u4e0d\u5bf9\u554a\uff0c\u5982\u679c\u53ea\u8003\u8651dp\u8f6c\u79fb\u7684\u6700\u540e\u72b6\u6001\uff0c\u90a3\u4e2d\u95f4\u7684\u5408\u683c\u7684\u5b57\u7b26\u4e32\u600e\u4e48\u7edf\u8ba1\u5462\u3002\u3002\n\u55ef\uff0c\u7ecf\u8fc7\u4e00\u4e9b\u601d\u8003\uff0c\u54e6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6700\u540e\u8003\u8651\u4e0d\u5408\u683c\u7684\u561b\uff0c\u8f6c\u79fb\u4e2d\u95f4\u9047\u5230\u5408\u683c\u7684\u8df3\u8fc7\u4e0d\u8f6c\u79fb\u5c31\u597d\u4e86\u3002\u3002\u55ef\uff0c\u611f\u89c9\u5f88\u6b63\u786e\u3002\u3002\n\u7136\u540e\u5728\u81ea\u4fe1\u4e00\u6ce2\u64cd\u4f5c\uff0c\u54a6\uff0c\u600e\u4e48\u8fd8\u662f\u8fc7\u4e0d\u4e86\u6837\u4f8b\u554a\u3002\u3002\n\u54e6\uff0c\u5faa\u73af\u961f\u5217\u5fd8\u4e86\u6e05\u7a7a\u3002\u3002\n\u54a6\uff0c\u6211\u597d\u50cf\u8fc7\u4e86\u6837\u4f8b\uff0c\u55ef\uff0c\u81ea\u4fe1\u4ea4\u4e00\u4ea4\u3002\n\u554a\uff0c\u600e\u4e48\u53ea\u6709\u4e09\u5341\u5206\u554a\u3002\u3002\n\u55ef\uff0c\u4e0b\u4e0d\u4e86\u6570\u636e\u3002\u3002\u627e\u4e00\u4e2a\u6807\u7a0b\u62cd\u4e00\u62cd\u3002\u3002\n\u55ef\uff0c\u8fd9\u4e2a\u6807\u7a0b\u600e\u4e48\u4e0d\u592a\u5bf9\u554a\uff0c\u7eb3\u5c3c\uff0c\u8fd9\u6807\u7a0b\u600e\u4e48\u8fc7\u4e0d\u4e86\u6837\u4f8b\u554a\u3002\n\u518d\u89c1\u3002\n\u7136\u540e\u518d\u627e\u4e86\u4e00\u4efd\u6807\u7a0b\u7ecf\u8fc7\u5404\u79cd\u5bf9\u62cd\u7ec8\u4e8e\u8fd8\u662f\u62cd\u51fa\u6765\u4e86\u554a\u3002\u3002\u3002\n\u6211\u5929\u771f\u7684\u4ee5\u4e3a\u5f53\u524d\u8282\u70b9\u662f\u5355\u8bcd\u7ed3\u5c3e\u8df3\u8fc7\u5c31\u597d\u4e86\uff0c\u7ed3\u679c\u5bf9\u62cd\u7740\u624d\u53d1\u73b0\uff1a\u54a6\uff0c\u8fd9\u4e2a\u8282\u70b9\u4ee5\u4e0a\u7684\u4e07\u4e00\u6709\u5408\u683c\u7684\u5355\u8bcd\u600e\u4e48\u529e\u5462\u3002\u3002\u55ef\uff0c\u53ef\u4ee5\u50cfAC\u81ea\u52a8\u673a\u6a21\u677f\uff08\u5177\u4f53\u89c1[LuoguP3838](https://www.luogu.org/problemnew/show/P3808)\uff09\u90a3\u6837\u4e00\u76f4\u8df3fail\u561b\uff0c\u7136\u540e\u7edf\u8ba1cnt\uff0c\u5982\u679ccnt>0\u7684\u8bdd\u4e0d\u5c31\u8bf4\u660e\u4e0a\u9762\u6709\u5417\uff0c\u55ef\uff0c\u6211\u771f\u806a\u660e\u3002\n\u6700\u540e\u7ec8\u4e8eA\u4e86\uff0c\u849f\u84bb\u8fd8\u662f\u5f88\u6fc0\u52a8\u7684\u3002\u3002\u3002\n\u7ed3\u679c\u4e00\u770b\u9898\u89e3\uff0c\u539f\u6765AC\u81ea\u52a8\u673a\u4e0aDP\u662f\u6709\u5957\u8def\u7684\u554a\u3002\u3002\u3002\u4e00\u53e3\u8001\u8840\u5dee\u70b9\u55b7\u51fa\u6765\u3002\n\n![image](http://img.itlun.cn/uploads/allimg/160617/1-16061G42141.jpg)\n\n\u4e0d\u8fc7\u6211\u7684\u505a\u6cd5\u548c\u4ed6\u4eec\u4e0d\u592a\u4e00\u6837\uff08\u6bd5\u7adf\u6211\u8981\u6162\u4e00\u4e9b\u554a\uff01\uff01\uff09\uff0c\u6211\u5c31\u5bfb\u601d\u5199\u7bc7\u9898\u89e3\u5427\uff0c\u4e0d\u7136\u5bf9\u4e0d\u8d77\u81ea\u5df1\u505a\u4e86\u8fd9\u4e48\u4e45\u3002\u3002\u3002\n\n---\n\n\u6240\u4ee5\u5bf9\u4e8e\u6211\u7684\u505a\u6cd5\uff0c\u4e3b\u8981\u6709\u4e09\u70b9\u3002\n\n## 1.\u521d\u59cb\u5316\u8f85\u52a9\u6570\u7ec4 g[j][k]\u3002\n\n\u6240\u4ee5\u7c7b\u4f3c\u4e8ekmp\u4e0a\u7684dp,\uff08\u6216\u8005\u6709\u70b9\u7c7b\u4f3cdp\u5957dp\uff09\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u8f6c\u79fb\u6570\u7ec4g[j][k]\u8868\u793a\n**\u7f16\u53f7\u4e3aj\u7684\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u5b57\u6bcd\u586bk\u4f1a\u8f6c\u79fb\u5230\u7684\u6700\u957f\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u7684\u70b9\u7684\u7f16\u53f7**   \u3002\n\n\u55ef\uff0c\u6211\u77e5\u9053\u4f60\u4eec\u80af\u5b9a\u4e0d\u77e5\u6240\u4e91\uff0c\u5176\u5b9e\u5c31\u662f\u6cbf\u7740fail\u6307\u9488\u5f80\u4e0a\u8df3\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u5230\u7684\u70b9\u3002\u3002\n\n\u8f6c\u79fb\u6570\u7ec4\u7684\u6784\u9020\u5f88\u7b80\u5355\uff0c\u5177\u4f53\u770b\u4ee3\u7801\u3002\n```cpp\ninline void init(int now){\n\tif(get(now)) vis[now]=true;//\u5173\u4e8e\u5408\u683c\u7684\u5b57\u7b26\u4e32\u7684\u9650\u5236\uff0c\u7b2c\u4e8c\u70b9\u8981\u8bb2\u3002\n\tfor(int i=0;i<26;++i){\n\t\tint u=now;\n\t\twhile(!tree[u].ch[i] && u) u=tree[u].fail;\n\t\tg[now][i]=tree[u].ch[i];\n\t}\n\tfor(int i=0;i<26;++i){\n\t\tint v=tree[now].ch[i];\n\t\tif(!v) continue;\n\t\tinit(v);\n\t}\n}\n```\n\n## 2.\u9650\u5236\u3002\uff08vis[i]\uff09\n\n\u56e0\u4e3a\u76f4\u63a5\u7edf\u8ba1\u5408\u683c\u7684\u4e2a\u6570\u4e0d\u597d\u7edf\u8ba1\uff0c\u6211\u4eec\u5c31\u53cd\u5411\u8003\u8651\uff0c\u7528\u603b\u65b9\u6848\u6570 pow(26,m)\u51cf\u53bb\u4e0d\u5408\u683c\u7684\u65b9\u6848\u6570\u5c31\u597d\u4e86\u3002\n\n\u4e0d\u5408\u683c\u7684\u65b9\u6848\u6570\u53ef\u4ee5\u5728\u8f6c\u79fb\u8fc7\u7a0b\u4e2d\u5224\u65ad\uff0c\u5982\u679c\u6709\u9650\u5236\u5c31\u4e0d\u8f6c\u79fb\uff0c\u6240\u4ee5\u5c31\u5f88\u597d\u7edf\u8ba1\u3002\n\n\u81f3\u4e8e\u4e00\u4e2a\u70b9\u662f\u5426\u6709\u9650\u5236\uff0c\u60f3\u4e00\u60f3AC\u81ea\u52a8\u673a\u6c42\u51fa\u73b0\u8fc7\u7684\u4e32\u7684\u4e2a\u6570\u7684\u65b9\u6cd5\uff0c\u5c31\u662f\u4e00\u4e2aget()\u51fd\u6570\u561b\u3002\u3002\u7136\u540e\u6211\u5c31\u539f\u5c01\u4e0d\u52a8\u7684\u642c\u4e86\u8fc7\u6765\u3002\uff08\u9003\u3002\n\n\u5982\u679c\u6c42\u51fa\u6765\u7684\u4e2a\u6570\u5927\u4e8e0\u5c31\u8bf4\u660e\u5339\u914d\u5230\u5f53\u524d\u8282\u70b9\u65f6\u5df2\u7ecf\u6709\u5355\u8bcd\u51fa\u73b0\u8fc7\u4e86\uff0c\u5c31\u628a\u8fd9\u4e2a\u8282\u70b9\u7684vis\u8d4b\u503c\u4e3atrue\u3002\u8868\u793a\u6709\u9650\u5236\uff0c\u72b6\u6001\u8f6c\u79fb\u65f6\u5c31\u4e0d\u8f6c\u79fb\u3002\n\n```cpp\ninline int get(int now){\n\tint res=0;\n\tfor(int i=now;i;i=tree[i].fail){\n\t\tif(tree[i].cnt) res+=tree[i].cnt;\n\t}\n\treturn res;\n}\n```\n\n\n## 3.\u72b6\u6001\u8f6c\u79fb\u3002f[cur][j]\n\n\u56e0\u4e3a\u6587\u672c\u7684\u6bcf\u4e00\u4f4d\u5728A-Z\u4e2d\u968f\u4fbf\u9009\uff0c\u6ca1\u6709\u9650\u5236\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a\u6784\u9020\u8fd9\u4e2a\u6587\u672c\u770b\u505a\u72b6\u6001\u7684\u8f6c\u79fb\uff0c\u6bcf\u6b21\u7684\u8f6c\u79fb\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u4e00\u4e2a\u8f6c\u79fb\u6570\u7ec4\u80fd\u591f\u4ee3\u8868\u6bcf\u6b21\u8f6c\u79fb\u7684\u60c5\u51b5\u3002\u7136\u540e\u8f6c\u79fbm\u6b21\u5c31\u597d\u4e86\u3002\uff08\u5f80\u5f80\u6709\u9898\u628an\u51fa\u5c0f\u4e00\u70b9\uff0c\u7136\u540em\u975e\u5e38\u5927\uff0c\u5c31\u53ef\u4ee5\u5957\u4e00\u4e2a\u77e9\u9635\u5feb\u901f\u5e42\uff09\u3002\n\nf[cur][j]\u8868\u793a**\u8f6c\u79fb\u5230\u7b2ccur\u6b65\uff08\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\uff09\u4ee5j\u7ed3\u5c3e\u7684\u4e0d\u5408\u683c\u7684\u65b9\u6848\u6570**\u3002\n\n\u6211\u89c9\u5f97\u8fd9\u4e48\u4e00\u8bf4\u5c31\u5f88\u88f8\u4e86\u3002\u3002dp\u8f6c\u79fb\u7684\u5e38\u89c4\u5957\u8def,\u6bd5\u7adf\u8f6c\u79fb\u6570\u7ec4\u90fd\u6c42\u51fa\u6765\u4e86\u3002\n\n```cpp\nint cur=1;\nf[cur][0]=1;\nfor(int i=1;i<=m;++i){\n\tcur^=1;\t\n\tmemset(f[cur],0,sizeof f[cur]);\t\n\tfor(int j=0;j<=idx;++j){\n\t\tif(vis[j]) continue;\n\t\tfor(int k=0;k<26;++k){\n\t\t\tif(vis[g[j][k]]) continue;\n\t\t\tf[cur][g[j][k]]+=f[cur^1][j];\n\t\t\tf[cur][g[j][k]]%=MO;\n\t\t}\n\t}\n}\n```\n---\n\u6700\u540e\u9644\u4e0a\u5b8c\u6574\u4ee3\u7801\u548c\u6570\u636e\u751f\u6210\u5668\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nconst int MAXN=10000+5;\nconst int MO=10007;\nstruct Trie{\n\tint ch[30],cnt,fail;\n}tree[MAXN];\nchar S[MAXN];\nint idx,f[2][MAXN],g[MAXN][26];\nbool vis[MAXN];\ninline void insert(){\n\tint len=strlen(S+1);\n\tint now=0;\n\tfor(int i=1;i<=len;++i){\n\t\tint c=S[i]-'A';\n\t\tif(!tree[now].ch[c]){\n\t\t\ttree[now].ch[c]=++idx;\n\t\t}\n\t\tnow=tree[now].ch[c];\n\t}\n\ttree[now].cnt++;\n}\n\nqueue <int> q;\n\ninline void get_fail(){\n\twhile(!q.empty()) q.pop();\n\tint now=0;tree[now].fail=0;\n\tfor(int i=0;i<26;++i){\n\t\tif(!tree[now].ch[i]) continue;\n\t\tint v=tree[now].ch[i];\n\t\ttree[v].fail=0;\n\t\tq.push(v);\n\t}\n\twhile(!q.empty()){\n\t\tnow=q.front();q.pop();\n\t\tfor(int i=0;i<26;++i){\n\t\t\tint u=tree[now].ch[i];\n\t\t\tif(!u) continue;\n\t\t\tq.push(u);int v=tree[now].fail;\n\t\t\twhile(v && !tree[v].ch[i]) v=tree[v].fail;\n\t\t\ttree[u].fail=tree[v].ch[i];\n\t\t}\n\t}\n}\n\ninline int get(int now){\n\tint res=0;\n\tfor(int i=now;i;i=tree[i].fail){\n\t\tif(tree[i].cnt) res+=tree[i].cnt;\n\t}\n\treturn res;\n}\n\ninline void init(int now){\n\tif(get(now)) vis[now]=true;\n\tfor(int i=0;i<26;++i){\n\t\tint u=now;\n\t\twhile(!tree[u].ch[i] && u) u=tree[u].fail;\n\t\tg[now][i]=tree[u].ch[i];\n\t}\n\tfor(int i=0;i<26;++i){\n\t\tint v=tree[now].ch[i];\n\t\tif(!v) continue;\n\t\tinit(v);\n\t}\n}\n\ninline int Pow(int k){\n\tint ans=1,tmp=26;\n\twhile(k){\n\t\tif(k&1) ans=(ans*tmp)%MO;\n\t\ttmp=(tmp*tmp)%MO;\n\t\tk>>=1;\n\t}\n\treturn ans;\n}\n\nint main(){\n\tint n,m;scanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%s\",S+1);\n\t\tinsert();\n\t}\n\tget_fail();\n\tinit(0);\n\tint cur=1;\n\tf[cur][0]=1;\n\tfor(int i=1;i<=m;++i){\n\t\tcur^=1;\t\n\t\tmemset(f[cur],0,sizeof f[cur]);\t\n\t\tfor(int j=0;j<=idx;++j){\n\t\t\tif(vis[j]) continue;\n\t\t\tfor(int k=0;k<26;++k){\n\t\t\t\tif(vis[g[j][k]]) continue;\n\t\t\t\tf[cur][g[j][k]]+=f[cur^1][j];\n\t\t\t\tf[cur][g[j][k]]%=MO;\n\t\t\t}\n\t\t}\n\t}\n\tint res=Pow(m),ans=0;\n\tfor(int i=0;i<=idx;++i){\n\t\tif(vis[i]) continue;\n\t\tans=(ans+f[cur][i])%MO;\n\t}\n\tprintf(\"%d\",(res-ans+MO)%MO);\n\treturn 0;\n}\n\n```\n---\n```cpp\n#include<stdlib.h>\n#include<string.h>\n#include<time.h>\n#include<stdio.h>\nint main(){\n\tsrand(time(0));\n\tint n=60,m=100;\n\tprintf(\"%d %d\\n\",n,m);\n\tfor(int i=1;i<=n;++i){\n\t\tint len=rand()%100+1;\n\t\tfor(int j=1;j<=len;++j){\n\t\t\tputchar(rand()%26+'A');\n\t\t}\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1533482885,
        "uid": 53898,
        "name": "jacktang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4052 [JSOI2007]\u6587\u672c\u751f\u6210\u5668"
    },
    {
        "content": "### \u7b97\u6cd5\nAC\u81ea\u52a8\u673a\u4e0a\u7684\u5957\u8defDP\n\n### \u601d\u8def\n\u6b63\u9762\u5904\u7406\u56f0\u96be\uff0c\u4e8e\u662f\u8003\u8651\u5bb9\u65a5\uff0c\u6c42\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\u6570\u3002\u8003\u8651\u4f7f\u7528AC\u81ea\u52a8\u673a\uff0c\u5219\u539f\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u6c42\u4f7f\u8fd9$m$\u4e2a\u5b57\u7b26\u4e32\u90fd\u5339\u914d\u4e0d\u4e0a\u7684\u5b57\u7b26\u4e32\u7684\u4e2a\u6570\u3002\u6240\u4ee5\uff0c\u5339\u914d\u8fc7\u7a0b\u4e2d\u7ecf\u8fc7\u7684\u70b9\uff0c\u5176$fail$\u94fe\u4e0a\u7684\u8282\u70b9\uff08\u5305\u62ec\u672c\u8eab\uff09\u90fd\u4e0d\u80fd\u6709\u7ed3\u675f\u8282\u70b9\u3002\n\n\u8bbe$dp(i,j)$\u8868\u793a\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u8d70$i$\u6b65\u5230$j$\u53f7\u8282\u70b9\u7684\u65b9\u6848\u6570\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\n$dp(i, j) = \\sum_{!t[k].num}dp(i - 1, k)$ \uff08t[k].num\u8868\u793ak\u53f7\u8282\u70b9\u7684fail\u94fe\u4e0a\u662f\u5426\u6709\u7ed3\u675f\u8282\u70b9\uff09\n\n### \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn = 5e4 + 10,mode = 1e4 + 7;\nint n,f[6010][6010],m,ans;\nstring a;\n\nstruct AC{\n\tint cnt;\n\tstruct Tree{\n\t\tint num,fail;\n\t\tint ch[30];\n\t}t[maxn];\n\tAC(){cnt = 0;}\n\n\tvoid build(string s){\n\t\tint len = s.size(); int now = 0;\n\t\tfor(int i = 0; i < len; ++ i){\n\t\t\tint c = s[i] - 'A';\n\t\t\tif(!t[now].ch[c]) t[now].ch[c] = ++cnt;\n\t\t\tnow = t[now].ch[c];\n\t\t}\n\t\tt[now].num = 1;\n\t}\n\n\tvoid get_fail(){\n\t\tqueue<int> q;\n\t\tfor(int i = 0; i < 26; ++ i)\n\t\t\tif(t[0].ch[i]){\n\t\t\t\tt[t[0].ch[i]].fail = 0;\n\t\t\t\tq.push(t[0].ch[i]);\n\t\t\t}\n\t\twhile(!q.empty()){\n\t\t\tint u = q.front(); q.pop();\n\t\t\tfor(int i = 0; i < 26; ++ i){\n\t\t\t\tint v = t[u].ch[i];\n\t\t\t\tif(v){\n\t\t\t\t\tt[v].fail = t[t[u].fail].ch[i];\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tt[v].num |= t[t[v].fail].num;\n\t\t\t\t}\n\t\t\t\telse t[u].ch[i] = t[t[u].fail].ch[i];\n\t\t\t}\n\t\t}\n\t}\n\n\tvoid DP(){\n\t\tf[0][0] = 1;\n\t\tfor(int i = 1; i <= m; ++ i)\n\t\t\tfor(int j = 0; j <= cnt; ++ j)\n\t\t\t\tif(!t[j].num){\n\t\t\t\t\tfor(int k = 0; k < 26; ++ k)\n\t\t\t\t\t\tf[i][t[j].ch[k]] = (f[i][t[j].ch[k]] + f[i - 1][j]) % mode;\n\t\t\t\t}\n\t\tfor(int i = 0; i <= cnt; ++ i)\n\t\t\tif(!t[i].num) ans += f[m][i], ans %= mode;\n\t}\n}ac;\n\nint ksm(int a, int b){  //\u9012\u5f52\u7248\u672c\u5feb\u901f\u5e42\n\tif(b == 1) return a;\n\tif(b == 0) return 1;\n\tif(b & 1) return ((a * ksm(a, b / 2)) % mode * ksm(a, b / 2)) % mode;\n\telse return (ksm(a, b / 2) * ksm(a, b / 2)) % mode;\n}\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin >> n >> m;\n\tfor(int i = 1; i <= n; ++ i){\n\t\tcin >> a;\n\t\tac.build(a);\n\t}\n\tac.get_fail(); ac.DP();\n\tcout << (ksm(26, m) - ans + mode) % mode << endl;\n\treturn 0;\n}\n```\n### \u5b89\u5229\n[\u8fd9\u7bc7\u535a\u5ba2\u5bf9AC\u81ea\u52a8\u673a\u4e0a\u7684DP\u8fdb\u884c\u4e86\u8f83\u4e3a\u5168\u9762\u7684\u603b\u7ed3](https://blog.csdn.net/dyx404514/article/details/13776025)\n",
        "postTime": 1603789256,
        "uid": 120351,
        "name": "When",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4052 \u3010[JSOI2007]\u6587\u672c\u751f\u6210\u5668\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u7b80\u5355\u7684$AC$\u81ea\u52a8\u673a\u4e0a\u7684$DP$\u95ee\u9898\u3002\u9002\u5408\u5165\u95e8\n\n[\u6587\u672c\u751f\u6210\u5668](https://www.luogu.org/problem/P4052)\n\n\u4e4d\u4e00\u770b\uff0c\u8fd9\u662f\u548c\u5b57\u7b26\u4e32\u3001\u8ba1\u6570\u6709\u5173\u7684\u9898\u3002\u4e8e\u662f\u5bb9\u6613\u8054\u60f3\u5230$AC$\u81ea\u52a8\u673a\u548c$DP$\u3002\u4f46\u662f\u5177\u4f53\u5982\u4f55\u505a\u5462\uff1f\u770b\u5230\u8fd9\u53e5\u8bdd\u201c\u5982\u679c\u4e00\u7bc7\u6587\u7ae0\u4e2d\u81f3\u5c11\u5305\u542b\u4f7f\u7528\u8005\u4eec\u4e86\u89e3\u7684\u4e00\u4e2a\u5355\u8bcd\u201d\uff0c\u5bb9\u6613\u8054\u60f3\u5230\u6b63\u96be\u5219\u53cd\u3002\u53ea\u8981\u6c42\u51fa\u6709\u591a\u5c11\u4e2a\u4e00\u4e2a\u8ba4\u8bc6\u7684\u5355\u8bcd\u90fd\u6ca1\u6709\u7684\u6587\u7ae0\u6570\u5373\u53ef\u3002\u66f4\u5177\u4f53\u7684\uff0c\u9996\u5148\u5efa\u7acb$AC$\u81ea\u52a8\u673a\uff0c\u7136\u540e\u8bbe$f[i][j]$\u8868\u793a\u5339\u914d\u5230\u81ea\u52a8\u673a\u4e0a\u7b2c$i$\u4e2a\u7ed3\u70b9\uff0c\u957f\u5ea6\u4e3a$j$\u7684\u5b57\u7b26\u4e32\u6709\u591a\u5c11\u4e2a\u3002\u521d\u59cb\u72b6\u6001\uff0c$f[root][0]=0$\u3002\u6bcf\u4e00\u6b21\u8f6c\u79fb\uff0c\u53ef\u4ee5\u4ece$f[i][j]->f[son[i][k]][j+1]$\uff0c\u5373\u4e3a\u6bcf\u6b21\u8d70\u5230\u4e00\u4e2a\u513f\u5b50\u4e0a\u3002\u4e00\u4e2a\u7ed3\u70b9\u53ef\u4ee5\u8d70\uff0c\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e2a\u8282\u70b9\u7684$fail$\u6307\u9488\uff0c\u4ee5\u53ca$fail$\u6307\u9488\u7684$fail$\u6307\u9488$ \\cdots\\cdots $\u90fd\u4e0d\u80fd\u662f\u4e00\u4e2a\u8ba4\u8bc6\u7684\u5355\u8bcd\u7684\u7ed3\u5c3e\u3002\n\n\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u7ed3\u675f\u4e86\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cstring>\n\nusing namespace std;\n\n//1.\u5e38\u91cf\u8bbe\u8ba1\nconst int maxWord = 70, maxLen = 110, maxNode = 70 * 110, mod = 10007;\n//2.\u53d8\u91cf\u7684\u5b9a\u4e49\uff08\u53d8\u91cf\u7c7b\u578b\uff09\nint wordN = 0, totNode = 0;\nqueue<int> que;\n//3.\u6570\u7ec4\u7684\u5b9a\u4e49\n//4.\u6570\u7ec4\u7684\u7a7a\u95f4\u5206\u914d\nint ch[maxNode][26] = {};\nint fail[maxNode] = {}, dp[maxNode][maxLen] = {};\nint createLen = 0;\nbool can[maxNode] = {};\nchar input[maxLen] = {};\n//5.\u53d8\u91cf\u7684\u521d\u59cb\u5316\n//6.\u51fd\u6570\u7684\u5b9a\u4e49\nvoid insert() {\n\tint now = 0, len = strlen(input + 1);\n\tfor (int fuI = 1; fuI <= len; ++fuI) {\n\t\tint erZi = input[fuI] - 'A';\n\t\tif (!ch[now][erZi]) ch[now][erZi] = ++totNode;\n\t\tnow = ch[now][erZi];\n\t}\n\tcan[now] = 0;\n}\nvoid buildFail() {\n\twhile (!que.empty()) que.pop();\n\tfor (int erZi = 0; erZi < 26; ++erZi) if (ch[0][erZi]) que.push(ch[0][erZi]);\n\twhile (!que.empty()) {\n\t\tint now = que.front();\n\t\tque.pop();\n\t\tfor (int id = 0; id < 26; ++id) {\n\t\t\tif (ch[now][id]) {\n\t\t\t\tfail[ch[now][id]] = ch[fail[now]][id];\n\t\t\t\tif (!can[fail[ch[now][id]]]) can[ch[now][id]] = 0;\n\t\t\t\tque.push(ch[now][id]);\n\t\t\t} else {\n\t\t\t\tch[now][id] = ch[fail[now]][id];\n\t\t\t}\n\t\t}\n\t}\n}\nvoid add(int &fir, int sec) {\n\tfir = (fir + sec) % mod;\n}\nvoid Minus(int &fir, int sec) {\n\tfir = ((fir - sec) % mod + mod) % mod;\n}\n\nint main()\n{\n\tfreopen(\"create.in\", \"r\", stdin);\n\tfreopen(\"create.out\", \"w\", stdout);\n\tscanf(\"%d%d\", &wordN, &createLen);\n\tfor (int node = 0; node <= 60 * 100; ++node) can[node] = 1;\n\tfor (int renShi = 1; renShi <= wordN; ++renShi) {\n\t\tscanf(\"%s\", input + 1);\n\t\tinsert();\n\t}\n\tbuildFail();\n\tdp[0][0] = 1;\n\tfor (int nowLen = 0; nowLen < createLen; ++nowLen) {\n\t\tfor (int node = 0; node <= totNode; ++node) {\n\t\t\tif (!(dp[node][nowLen] && can[node])) continue;\n\t\t\tfor (int sonId = 0; sonId < 26; ++sonId) {\n\t\t\t\tif (!can[ch[node][sonId]]) continue;\t//\u6ce8\u610f\u8fd9\u91cc\u8f6c\u79fb\u5230\u7684\u70b9\u4e5f\u8981\u5408\u6cd5\uff0c\u4e0d\u53ea\u662f\u66f4\u65b0\u522b\u4eba\u7684\u70b9\u8981\u5408\u6cd5\n\t\t\t\tadd(dp[ch[node][sonId]][nowLen + 1], dp[node][nowLen]);\n\t\t\t}\n\t\t}\n\t}\n\tint ans = 1;\n\tfor (int weiI = 1; weiI <= createLen; ++weiI) ans = (ans * 26) % mod;\n\tfor (int endNode = 0; endNode <= totNode; ++endNode) {\n\t\tMinus(ans, dp[endNode][createLen]);\n\t}\n\tprintf(\"%d\\n\", ans);\n\tfclose(stdin);\n\tfclose(stdout);\n\treturn 0;\n}\n```",
        "postTime": 1571049197,
        "uid": 75715,
        "name": "KokiNiwa",
        "ccfLevel": 0,
        "title": "[JSOI2007]\u6587\u672c\u751f\u6210\u5668"
    },
    {
        "content": "\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](http://www.cnblogs.com/noblex/p/8424762.html)## \n\n\u6211\u4e00\u5f00\u59cb\u4e5f\u4e0d\u4f1a\u505a\u8fd9\u9898\u7684\uff0c\u540e\u6765\u770b\u4e86\u5f88\u591a\u7f51\u4e0a\u7684\u9898\u89e3\uff0c\u7ec8\u4e8eAC\u4e86\u3002\uff08\u6211\u597d\u83dc\u554a\uff09\n\n\n------------\n\n\n\u4e3b\u8981\u53c2\u8003\uff1a[\u4f20\u9001\u95e8QWQ](http://blog.csdn.net/thchuan2001/article/details/57463291)\n\n\u76f4\u63a5\u641e\u975e\u5e38\u9ebb\u70e6\uff0c\u53cd\u6b63\u6211\u662f\u4e0d\u4f1a\u505a\u3002\u4e8e\u662f\u8003\u8651\u6c42\u53cd\uff0c\u5373\u6c42\u6709\u591a\u5c11\u4e0d\u5305\u542b\u4efb\u4f55\u5355\u8bcd\u7684\u6570\u91cf\u3002\u6700\u540e\u518d\u7528$ {26}^m $\u51cf\u53bb\u5c31ok\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u7edf\u8ba1\u3002\n\n\u4e8e\u662f\u5728$ AC $\u81ea\u52a8\u673a\u4e0a\u641e$ dp $\u3002\n\n\u7528 $ dp[i][j] $\u8868\u793a\u524d$ i $\u4e2a\u5b57\u7b26\u5728$ AC $\u81ea\u52a8\u673a\u4e0a\u4f4d\u7f6e\u4e3a$ j $\u7684\u65b9\u6848\u6570\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u5f97\u51fa$ dp[i+1][k]=dp[i+1][k]+dp[i][j] $\u5982\u679ck\u662f\u5408\u6cd5\u7684\u513f\u5b50\u3002\n\n\u6240\u4ee5\u8fd8\u8981\u5224\u65ad\u4e00\u4e0b\u5408\u6cd5\u6027\uff08\u5408\u6cd5\u6027 \u5373\uff1a\u4e0d\u662f\u4efb\u4f55\u4e00\u4e2a\u5355\u8bcd\u7684end\uff09\n\n \n \n \n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=6010, MOD=10007;\n\nint son[N][26], fail[N], end[N], newp, rt, q[N];\nint dp[1200][6010], n, m;\nchar s[N];\n\nint find(int cur,int i)\n{\n\tif(!cur) return rt;\n\tif(son[cur][i]) return son[cur][i];\n\treturn fail[son[cur][i]]=find(fail[cur],i);\n}\n\nint main()\n{\n\tfor (int i=0;i<26;i++) son[0][i]=1;\n\tnewp=rt=1;\n\tscanf(\"%d%d\",&n,&m);\n\t\n\t//Trie\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",s+1);\n\t\tint cur=rt, l=strlen(s+1);\n\t\tfor(int j=1;j<=l;j++)\n\t\t{\n\t\t\tif(!son[cur][s[j]-'A']) son[cur][s[j]-'A']=++newp;\n\t\t\tcur=son[cur][s[j]-'A'];\n\t\t}\n\t\tend[cur]=1;\n\t}\n\t\n\t//fail\n\tint l=1,r=1;q[1]=1;\n\tfor(;l<=r;l++)\n\t{\n\t\tfor(int i=0;i<26;i++)\n\t\tif(son[q[l]][i])\n\t\t{\n\t\t\tfail[son[q[l]][i]]=find(fail[q[l]],i);\n\t\t\tq[++r]=son[q[l]][i];\n\t\t}\n\t}\n\t\n\t//dp\n\tdp[1][1]=1; \n\tfor(int i=1;i<=m;i++)\n\tfor(int j=1;j<=newp;j++)\n\t{\n\t\tfor(int k=0;k<26;k++)\n\t\t{\n\t\t\tint cur=j, f=0;\n\t\t\twhile(cur)\n\t\t\t{\n\t\t\t\tif(end[son[cur][k]]) { f=1; break; }\n\t\t\t\tcur=fail[cur];\n\t\t\t}\n\t\t\tif(f) continue;\t//\u4e0d\u80fd\u653e \n\t\t\tcur=j;\n\t\t\twhile(!son[cur][k])\n\t\t\t{\n\t\t\t\tcur=fail[cur];  //\u4ecej\u5411fail[j]\u8df3\u76f4\u5230\u6709k\u513f\u5b50\n\t\t\t}\n            cur=son[cur][k];\n\t\t\tdp[i+1][cur]=(dp[i+1][cur]+dp[i][j])%MOD;\n\t\t}\n\t}\n\t\n\tint anss=1, ans=0;\n\tfor (int i=1;i<=m;i++) anss=(anss*26)%MOD;    //\u8f6c\u6362\n    for (int i=1;i<=newp;i++)\n    {\n        ans=(ans+dp[m+1][i])%MOD;    //\u6700\u7ec8\u7b54\u6848\u662f\u6240\u6709dp[m+1][x]\u7684\u548c\n    }\n\t\n\tprintf(\"%d\\n\",(anss-ans+MOD)%MOD); \n\treturn 0;\n}\n```\n\n ",
        "postTime": 1517932339,
        "uid": 36281,
        "name": "noble_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4052 \u3010[JSOI2007]\u6587\u672c\u751f\u6210\u5668\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P4052)\n\n\u8fd9\u662f\u4e00\u9053\u5341\u5206\u7ecf\u5178\u7684AC\u81ea\u52a8\u673a+dp\u7684\u9898\u76ee\n\n## \u5927\u610f\n\n\u6c42\u957f\u5ea6\u4e3am\u3001\u5b57\u7b26\u96c6\u4e3a\u5927\u5199\u5b57\u6bcd\u3001\u5305\u542b\u81f3\u5c11\u4e00\u4e2a\u6a21\u5f0f\u4e32\u7684\u6240\u6709\u5b57\u7b26\u4e32\u7684\u6570\u76ee\uff0c\u5bf9$1e4+7$\u53d6\u6a21\n\n## \u601d\u8def\n\n\u770b\u5230\u8fd9\u79cd\u5339\u914d\u7c7b\u7684\u4e1c\u897f\u53ef\u4ee5\u8003\u8651AC\u81ea\u52a8\u673a\u3002\u4f46\u76f4\u63a5\u6c42\u51fa\u7b54\u6848\u6bd4\u8f83\u590d\u6742\uff0c\u6211\u4eec\u8003\u8651\u8f6c\u6362\u4e3a\u5176\u8865\u96c6\u5373*\u4e0d\u5305\u542b\u4efb\u4f55\u4efb\u4f55\u4e00\u4e2a\u6a21\u5f0f\u4e32\u7684\u5b57\u7b26\u4e32\u6570\u76ee*.\n\n\u5bf9\u6a21\u5f0f\u4e32\u5efa\u7acbAC\u81ea\u52a8\u673a,\u5f53\u8282\u70b9\u4e3a ***\u5371\u9669\u8282\u70b9*** ,\u5373**\u7ed3\u675f\u8282\u70b9**\u6216\u8005**\u5176\u7956\u5148\u4e3a\u7ed3\u675f\u8282\u70b9**(\u56e0\u4e3a\u4e00\u4e2a\u5355\u8bcd\u7684\u540e\u7f00\u662f\u4e00\u4e2a\u53ef\u8bfb\u5355\u8bcd\u65f6,\u8fd9\u4e2a\u5355\u8bcd\u4e00\u5b9a\u53ef\u8bfb\u7684)\u90fd\u4e0d\u53ef\u4ee5,\u6240\u4ee5\u5bf9\u4e8e\u540e\u4e00\u79cd\u6709\u4ee5\u4e0b\u4ee3\u7801\n\n```cpp\ned[trie[x][i]]|=ed[fail[trie[x][i]]];\n```\n\n\n\n\u5047\u8bbe $f_{i,j}$ \u8868\u793a\u5df2\u7ecf\u5339\u914d\u5230$trie$\u56fe\u4e0a\u7684\u8282\u70b9$i$,\u957f\u5ea6\u4e3a $j$ \u7684\u4e0d\u5408\u6cd5\u5b57\u7b26\u4e32\u4e2a\u6570,\u6211\u4eec\u679a\u4e3e\u63a5\u4e0b\u6765\u7684\u5b57\u7b26,\u5373\u53ef\u5b9e\u73b0\u8f6c\u79fb,\u6709\u4ee5\u4e0bdp\u65b9\u7a0b\u5f0f\n\n$$f_{trie_{i,k},j}(trie_{i,k}\\notin ed)=\\sum_{i\\notin ed} f_{trie_{i},j-1}$$\n\n\u610f\u601d\u5c31\u662f\u8bf4\u5c06\u8fd9\u4e2a\u975e\u5371\u9669\u8282\u70b9\u7684\u7b54\u6848\u8f6c\u79fb\u5230\u5b83\u7684\u975e\u5371\u9669\u7684\u513f\u5b50\u4e0a\u53bb.\n\n## \u6ce8\u610f(\u6211\u6389\u7684\u5751)\n\n1. $Trie$\u7684\u5927\u5c0f\u4e3a\u5b57\u7b26\u4e32\u603b\u5927\u5c0f\u00d7\u5b57\u7b26\u96c6\u5927\u5c0f\n\n    ~~\u8fd9\u9664\u4e86\u6211\u8fd8\u4f1a\u6389\u5417~~\n\n2. \u6839\u8282\u70b9\u5728AC\u81ea\u52a8\u673a\u4e2d\u6709\u5b83\u7279\u6709\u7684\u542b\u4e49,\u4ed4\u7ec6\u601d\u8003\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint const MOD=1e4+7;\nint n,m,sum;\nint f[6001][1010];\nchar s[2000];\nstruct AC_Automaton{\n\tint trie[10010][30],fail[60010],ed[60010];\n\tint tot;\n\tqueue<int>q;\n\tvoid insert(){\n\t\tint len=strlen(s+1);int now=0;\n\t\tfor(int i=1;i<=len;i++){\n\t\t\tint x=s[i]-'A';\n\t\t\tif(!trie[now][x]){trie[now][x]=++tot;}\n\t\t\tnow=trie[now][x];\n\t\t}\n\t\ted[now]=1;\n\t}\n\tvoid getfail(){\n\t\tfor(int i=0;i<26;i++){\n\t\t\tif(trie[0][i]){\n\t\t\t\tfail[trie[0][i]]=0;\n\t\t\t\tq.push(trie[0][i]);\n\t\t\t}\n\t\t}\n\t\twhile(!q.empty()){\n\t\t\tint x=q.front();q.pop();\n\t\t\tfor(int i=0;i<26;i++){\n\t\t\t\tif(trie[x][i]){\n\t\t\t\t\tfail[trie[x][i]]=trie[fail[x]][i];\n\t\t\t\t\tq.push(trie[x][i]);\n\t\t\t\t\ted[trie[x][i]]|=ed[fail[trie[x][i]]];\n\t\t\t\t}else{\n\t\t\t\t\ttrie[x][i]=trie[fail[x]][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}ACA;\nint qpow(int x,int k){\n\tint ans=1;\n\twhile(k){\n\t\tif(k&1)ans=(ans*x)%MOD;\n\t\tk>>=1;\n\t\tx=x*x%MOD;\n\t}\n\treturn ans;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s\",s+1);\n\t\tACA.insert();\n\t}\n\tACA.getfail();\n\tfor(int i=0;i<26;i++){\n\t\tif(!ACA.ed[ACA.trie[0][i]])f[ACA.trie[0][i]][1]+=1;\n\t}\n\tfor(int i=2;i<=m;i++){\n\t\tfor(int j=0;j<=ACA.tot;j++){\n\t\t\tif(!ACA.ed[j]){\n\t\t\t\tfor(int k=0;k<26;k++){\n\t\t\t\t\tif(!ACA.ed[ACA.trie[j][k]])f[ACA.trie[j][k]][i]=(f[ACA.trie[j][k]][i]+f[j][i-1])%MOD;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int j=0;j<=ACA.tot;j++)if(!ACA.ed[j])sum=(sum+f[j][m])%MOD;\n\tprintf(\"%d\\n\",(qpow(26,m)-sum+MOD)%MOD);\n\treturn 0;\n}\n```\n",
        "postTime": 1603883273,
        "uid": 59623,
        "name": "fpjo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4052 \u3010[JSOI2007]\u6587\u672c\u751f\u6210\u5668\u3011"
    },
    {
        "content": "\u5410\u69fd\u90e8\u5206\u53ef\u4ee5\u4e0d\u770b\n\n------------\n\n\n\u6253\u6bd4\u8d5b\u7684\u65f6\u5019\u4e3a\u4e865\u5757\u94b1\u76f4\u63a5\u641e\u8fd9\u9898\u3002\u3002\u3002\n\n\n\u641e\u4e86\u534a\u5929\u641e\u51fa\u6765\u4e86\uff01\u4f46\u662f\u53c8\u4e0d\u653e\u5fc3\uff0c\u4e8e\u662f\u5404\u79cd\u8c03\u8bd5\u5404\u79cd\u5bf9\u62cd\n\n\n10\u5206\u949f\u540e\u611f\u89c9\u975e\u5e38\u5b8c\u7f8e\uff0c\u4e8e\u662f\u6109\u5feb\u5730\u4ea4\u4e86\u4e0a\u53bb\uff0c\u975e\u5e38\u6f02\u4eae\u76841A\uff01\n\n\n\u5fc3\u4e2d\u4e00\u9635\u72c2\u559c\uff0c\u6697\u60f35\u5757\u5230\u624b\u540e\u6b63\u597d\u80fd\u51b2B\u5e01\u770b\u4e00\u90e81\u6708\u65b0\u756a\n\n\n\u7ed3\u679c\u53d1\u73b0\u4e00\u5206\u949f\u4e4b\u524d\u6709\u4ebaA\u4e86\u3002\u3002\u3002\u3002\n\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\n\n\n\u4e07\u5ff5\u4ff1\u7070\uff0c\u6211\u89c9\u5f97\u6211\u5df2\u7ecf\u662f\u6761\u54b8\u9c7c\u4e86\u3002\u3002\u3002\n\n\n------------\n\n##\u56de\u5f52\u6b63\u9898\n\n\n\u8fd9\u9053\u9898\u636e\u8bf4\u51fa\u9898\u4eba\u7ed9\u51fa\u7684\u6b63\u89e3\u662f\u7ebf\u6bb5\u6811\u5957fhq treap\n\n\n\u6216\u8005\u542c\u8bf4\u674e\u8d85\u7ebf\u6bb5\u6811\u5b8c\u7f8e\u89e3\u51b3\uff1f\n\n\n\u7136\u800c\u849f\u84bb\u5e76\u4e0d\u4f1a\u674e\u8d85\u7ebf\u6bb5\u6811\uff0c\u6811\u5957\u6811\u53c8\u4e0d\u597d\u6253\uff0c\u600e\u4e48\u529e\u5462\uff1f\n\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u67e5\u8be2\uff0c\u5b83\u7684\u7b54\u6848\u4e00\u5b9a\u662f\u8fd9\u4e2a\u533a\u95f4\u7684\u5355\u8c03\u4e0a\u5347\u7684\u5355\u8c03\u6808\u7684\u5927\u5c0f\n\n\n\u800c\u5355\u8c03\u6808\u662f\u652f\u6301\u5408\u5e76\u64cd\u4f5c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5206\u5757\u641e\n\n\n\u5148\u5728\u6bcf\u4e2a\u5757\u4e2d\u9884\u5904\u7406\u51fa\u4e00\u4e2a\u5355\u8c03\u6808\uff0c\u590d\u6742\u5ea6O(n)\n\n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u56e0\u4e3a\u662f\u5355\u70b9\u4fee\u6539\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u4fee\u6539\uff0c\u91cd\u6784\u5b83\u6240\u5728\u5757\u5185\u7684\u5355\u8c03\u6808\uff0c\u590d\u6742\u5ea6O(sqrt(n))\n\n\n\u5bf9\u4e8e\u67e5\u8be2\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u7b97\u51fa\u5de6\u8fb9\u4e0d\u5728\u5757\u5185\u7684\u90e8\u5206\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u548c\u4e00\u4e2a\u6700\u5927\u503c\uff0c\u7136\u540e\u518d\u5728\u4e4b\u540e\u7684\u5b8c\u6574\u7684\u5757\u7684\u5355\u8c03\u6808\u4e2d\u4e8c\u5206\u4f4d\u7f6e\uff0c\u6c42\u51fa\u8fd9\u4e2a\u5757\u7684\u5355\u8c03\u6808\u4e2d\u6bd4\u4e4b\u524d\u7684\u6700\u5927\u503c\u5927\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u518d\u66f4\u65b0\u6700\u5927\u503c\uff0c\u590d\u6742\u5ea6O(2sqrt(n)+sqrt(n)logsqrt(n))\n\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u4e8c\u5206\u7684\u5927\u5c0f\u5e76\u4e0d\u662f\u5757\u7684\u5927\u5c0f\u800c\u662f\u5355\u8c03\u6808\u7684\u5927\u5c0f\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u7684\u603b\u590d\u6742\u5ea6\u6700\u5927\u662fO(nsqrt(n)logsqrt(n))\uff0c100000\u7684\u8bdd~~\u7406\u5e94\u8fc7\u4e0d\u4e86~~\u52c9\u5f3a\u80fd\u8fc7\n\n\n\u4e3a\u4ec0\u4e48\u80fd\u8fc7\u5462\uff0c\u4e00\u4e2a\u662f\u8fd9\u4e2a\u590d\u6742\u5ea6\u53ea\u662f\u4e0a\u754c\uff0c\u8fd8\u6709\u4e00\u4e2a\u5c31\u662f\u5206\u5757\u7684\u5927\u5c0f\u5e76\u4e0d\u662f\u6700\u4f18\uff0c\u4f46\u662f\u6211\u8003\u8bd5\u65f6\u61d2\u5f97\u7b97\u4e86\uff0c\u6240\u4ee5\u76f4\u63a5\u5206sqrt(n)\u4e86\n\n## \u4ee3\u7801\n\n    \n    \n    \n    \n    \n    \n    \n```cpp\n    //by \u51cf\u7ef4\n    #include<iostream>\n    #include<cstdio>\n    #include<cstring>\n    #include<queue>\n    #include<bitset>\n    #include<set>\n    #include<cmath>\n    #include<vector>\n    #include<set>\n    #include<map>\n    #include<ctime>\n    #include<algorithm>\n    #define ll long long\n    #define db double\n    #define inf 1<<30\n    #define maxn 200005\n    #define eps 1e-8\n    using namespace std;\n    inline int read()\n    {\n        int ret=0;bool fla=0;char ch=getchar();\n        while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();\n        if(ch=='-'){fla=1;ch=getchar();}\n        while(ch>='0'&&ch<='9'){ret=ret*10+ch-'0';ch=getchar();}\n        return fla?-ret:ret;\n    }\n    int n,m,num,ans,blo,a[maxn],bl[maxn],sta[2005][505],siz[2005];\n    inline void pre()\n    {\n        for(int i=1;i<=num;++i)\n        {\n            int l=(i-1)*blo+1,r=min(n,i*blo);\n            sta[i][++siz[i]]=a[l];\n            for(int j=l+1;j<=r;++j)\n            {\n                if(sta[i][siz[i]]>a[j]&&siz[i]>0)continue;\n                sta[i][++siz[i]]=a[j];\n            }\n        }\n    }\n    inline void chan(int x,int y)\n    {\n        a[x]=y;\n        int l=(bl[x]-1)*blo+1,r=min(n,bl[x]*blo);\n        siz[bl[x]]=0;\n        sta[bl[x]][++siz[bl[x]]]=a[l];\n        for(int j=l+1;j<=r;++j)\n        {\n            if(sta[bl[x]][siz[bl[x]]]>a[j]&&siz[bl[x]]>0)continue;\n            sta[bl[x]][++siz[bl[x]]]=a[j];\n        }\n    }\n    inline int query(int x,int v)\n    {\n        if(siz[x]==0)return 1;\n        int l=1,r=siz[x],ret=0;\n        while(l<=r)\n        {\n            int mid=(l+r)>>1;\n            if(sta[x][mid]<v)l=mid+1,ret=mid;\n            else r=mid-1;\n        }\n        return ret+1;\n    }\n    inline void ask(int x,int y)\n    {\n        int l=(bl[x])*blo+1,r=min(n,(bl[y]-1)*blo);\n        if(bl[x]==bl[y]||bl[x]+1==bl[y])\n        {\n            int mx=0;\n            for(int i=x;i<=y;++i)\n                if(a[i]>=mx)ans++,mx=a[i];\n        }else{\n            int mx=0;\n            for(int i=x;i<l;++i)\n                if(a[i]>=mx)ans++,mx=a[i];\n            for(int i=bl[x]+1;i<=bl[y]-1;++i)\n            {\n                int sz=query(i,mx);\n                if(sz<=siz[i])ans+=siz[i]-sz+1,mx=sta[i][siz[i]];\n            }\n            for(int i=r+1;i<=y;++i)\n                if(a[i]>=mx)ans++,mx=a[i];\n        }\n    }\n    int main()\n    {\n        //freopen(\"in.in\",\"r\",stdin);\n        //freopen(\"out1.out\",\"w\",stdout);\n        n=read(),m=read();\n        blo=sqrt(n);//blo=sqrt(n*log2(n));\n        for(int i=1;i<=n;++i)a[i]=read(),bl[i]=(i-1)/blo+1,num=bl[i];\n        pre();\n        for(int i=1,op,x,y;i<=m;++i)\n        {\n            op=read(),x=read(),y=read();\n            if(op==1){\n                ans=0;\n                ask(x,y);\n                printf(\"%d\\n\",ans);\n            }else chan(x,y);\n        }\n        return 0;\n    }\n\n```",
        "postTime": 1515215481,
        "uid": 35870,
        "name": "\u51cf\u7ef4",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4052 \u3010photo\u3011"
    },
    {
        "content": "\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u8fd9\u9053\u9898\uff1a\n\n\u9996\u5148\u5efa\u51fa $trie$ \u6811\uff0c\u518d\u5efa\u51fa **AC\u81ea\u52a8\u673a**\u3002\n\n\u8003\u8651\u5bb9\u65a5\uff0c\u5373\u603b\u6570 - \u4e0d\u53ef\u8bfb\u7684\u4e2a\u6570\u3002\n\n\u603b\u6570 = $26 ^ m$\uff0c\u53ef\u7528\u5feb\u901f\u5e42\u6c42\u89e3\u3002\n\n\u95ee\u9898\u53d8\u6210 \u4e0d\u53ef\u8bfb\u7684\u65b9\u6848 \u6709\u591a\u5c11\u4e2a\uff1f\n\n\u663e\u7136\uff0c\u5982\u679c\u4e00\u4e2a\u70b9 $u$\uff0c$fail[u]$ \u662f\u5371\u9669\u8282\u70b9\uff0c\u5219 $u$ \u4e5f\u662f\u5371\u9669\u8282\u70b9\u3002\n\n\n\u90a3\u4e48\u7528\u4e00\u4e2a $flag[u]$ \u8868\u793a $u$ \u662f\u5426\u662f\u5371\u9669\u8282\u70b9\uff0c$flag[u]$ \u53ef\u5728\u6c42 $fail$ \u65f6\u8f6c\u79fb\u3002\n\n\n\u8003\u8651 **\u52a8\u6001\u89c4\u5212**\uff0c\u8bb0 $dp[i][j]$ \u8868\u793a\u5728AC\u81ea\u52a8\u673a\u4e0a\u7ed3\u5c3e\u4e3a\u8282\u70b9 $j$\uff0c\u957f\u5ea6\u4e3a $i$ \u7684\u65b9\u6848\u6570\uff0c\u8f6c\u79fb\u65b9\u7a0b\u4e3a: \n\n$$dp[i][trie[j][k]] = dp[i][trie[j][k]] + dp[i - 1][j],flag[trie[j][k]] \\neq 0$$ \n\n\u6700\u540e\u65b9\u6848\u5c31\u662f\uff1a$\\sum\\limits_{i = 1}^{cnt} dp[m][i]$ \n\n\u6ce8\u610f\uff1a\u8981\u53d6\u6478\uff0c\u4e14\u5904\u7406\u53d6\u6478\u540e\u518d\u51cf\u4e3a\u8d1f\u6570\u7684\u60c5\u51b5\n\n\u5177\u4f53\u5b9e\u73b0\uff0c\u53ef\u770b\u4ee3\u7801\u3002\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\n\nconst int maxn = 6e4 + 10, mod = 1e4 + 7;\nint n, m, cnt = 1, trie[maxn][26], fail[maxn], dp[110][maxn];\nchar c[maxn][110];\nbool flag[maxn];\nqueue <int> q;\n\nvoid insert (int p) { // \u5efa\u7acb trie \u6811\n    int now = 1, len = strlen (c[p] + 1);\n    for (int i = 1; i <= len; ++i) {\n        int x = c[p][i] - 'A';\n        if (!trie[now][x]) trie[now][x] = ++ cnt;\n        now = trie[now][x];\n    }\n    flag[now] = 1;\n}\n\nvoid calc () { // \u6c42\u51fa fail \u4e0e flag \u6570\u7ec4\uff0c\u4fbf\u5efa\u51fa AC \u81ea\u52a8\u673a\n    for (int i = 0; i < 26; ++i) trie[0][i] = 1;\n    q.push (1); fail[1] = 0;\n    while (!q.empty()) {\n        int now = q.front(); q.pop();\n        for (int i = 0; i < 26; ++i) {\n            if (trie[now][i]) {\n                fail[trie[now][i]] = trie[fail[now]][i]; flag[trie[now][i]] |= flag[fail[trie[now][i]]];\n                q.push (trie[now][i]);\n            } else {\n                trie[now][i] = trie[fail[now]][i];\n            }\n        }\n    }\n}\n\nint query () { // \u6c42\u4e0d\u53ef\u884c\u65b9\u6848\n    dp[0][1] = 1;\n    for (int i = 1; i <= m; ++i) {\n        for (int j = 1; j <= cnt; ++j) {\n            for (int k = 0; k < 26; ++k) {\n                if (!flag[trie[j][k]]) dp[i][trie[j][k]] = (dp[i][trie[j][k]] + dp[i - 1][j]) % mod;\n            }\n        }\n    }\n    int ans = 0;\n    for (int i = 1; i <= cnt; ++i) {ans = (ans + dp[m][i]) % mod; cout << ans << endl;}\n    return ans;\n}\n\nint pow (int x, int y) { // \u5feb\u901f\u5e42\n    int res = 1;\n    while (y) {\n        if (y & 1) res = res * x % mod;\n        x = x * x % mod;\n        y >>= 1;\n    }\n    return res;\n}\n\nint main() {\n    scanf (\"%d%d\", &n, &m);\n    for (int i = 1; i <= n; ++i) {\n        scanf (\"%s\", c[i] + 1); insert (i); // \u63d2\u5165\n    }\n    calc ();\n    printf (\"%d\", (pow (26, m) - query() + mod) % mod); // \u5bb9\u65a5\n    return 0;\n}\n```",
        "postTime": 1627616367,
        "uid": 186091,
        "name": "wzy2021",
        "ccfLevel": 6,
        "title": "P4052\u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u770b\u5230\u8fd9\u5230\u9898\uff0c\u5f88\u5bb9\u6613\u60f3\u5230AC\u81ea\u52a8\u673a\uff0c\u4f46\u8fd9\u4e2a\u9898\u5b83\u6c42\u7684\u662f\u65b9\u6848\uff0c\u5e76\u4e14\u6ca1\u6709\u544a\u8bc9\u6211\u4eec\u6bcd\u4e32\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019\u6211\u5c31\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u7528\u641c\u7d22\u679a\u4e3e\u6bcf\u4e00\u79cd\u65b9\u6848\n\n\u90e8\u5206\u4ee3\u7801\n```cpp\nvoid dfs(int now, int j, bool flag)//now\u4ee3\u8868\u679a\u4e3e\u4e86\u7684\u6587\u7ae0\u957f\u5ea6\uff0cj\u4ee3\u8868AC\u81ea\u52a8\u673a\u7684\u4e0b\u6807\uff0cflag\u4ee3\u8868\u5f53\u524d\u7684\u6587\u7ae0\u662f\u5426\u5408\u6cd5\n{\n    if (now == m)\n    {\n        ans = (ans + flag) % MOD;\n        return;\n    }\n    for (int i = 0; i < 26; i++)\n    {\n        int t = tr[j][i];\n        bool is = true;\n        while (t)\n        {\n            if (cnt[t])\n            {\n                dfs(now + 1, tr[j][i], true);\n                is = false;\n                break;\n            }\n            t = net[t];\n        }\n        if (is)\n            dfs(now + 1, tr[j][i], flag);\n    }\n}\n```\n\u8fd9\u4e2a\u66b4\u641c\u53ea\u80fd\u768420\u5206\uff0c\u4e8e\u662f\u5c1d\u8bd5\u4f18\u5316\uff0c\u6539\u6210\u4e86\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u5c06\u4e4b\u524d\u641c\u8fc7\u7684\u72b6\u6001\u5b58\u8d77\u6765\n```cpp\nint dfs(int now, int j, bool flag)\n{\n    if (rec[now][j][flag])\n        return rec[now][j][flag];\n    if (now == m)\n        return flag;\n    int res = 0;\n    for (int i = 0; i < 26; i++)\n    {\n        int t = tr[j][i];\n        bool is = true;\n        while (t)\n        {\n            if (cnt[t])\n            {\n                res = (res + dfs(now + 1, tr[j][i], true)) % MOD;\n                is = false;\n                break;\n            }\n            t = net[t];\n        }\n        if (is)\n            res = (res + dfs(now + 1, tr[j][i], flag)) % MOD;\n    }\n    rec [now][j][flag] = res;\n    return res;\n}\n```\n\u4f46\u4e86\u8bb0\u5fc6\u5316\u4e4b\u540e\u4efb\u7136\u53ea\u80fd\u5f9770\u5206\uff0c\u7531\u4e8e\u6211tcl\uff0c\u5df2\u7ecf\u627e\u4e0d\u51fa\u5176\u4ed6\u5730\u65b9\u4f18\u5316\u4e86\uff0c\u6240\u4ee5\u5c31\u53ea\u80fd\u8003\u8651DP\u4e86\uff0c\u6709\u4e86\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u7ecf\u9a8c\uff0c\u90a3\u4e48DP\u5c31\u76f8\u5bf9\u597d\u60f3\u4e86\uff0c\u5b9a\u4e8e\u4e00\u4e2a\u4e09\u7ef4\u6570\u7ec4$f_{i,j,k}$,\u542b\u4e49\u540c\u4e0a\u9762\u7684\u641c\u7d22,i\u8868\u793a\u5f53\u524d\u7684\u6587\u7ae0\u957f\u5ea6,j\u8868\u793aAC\u81ea\u52a8\u673a\u7684\u4f4d\u7f6e,k\u8868\u793a\u6587\u7ae0\u662f\u5426\u5408\u6cd5,\u5177\u4f53\u7684\u8f6c\u79fb\u65b9\u7a0b\u653e\u5728\u4ee3\u7801\u91cc\u89e3\u91ca\n\n\u5b8c\u6574\u4ee3\u7801\n```\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int N = 1e5 + 5, MOD = 1e4 + 7;\n\nchar str[N];\nint tr[N][26], net[N], cnt[N], idx, ans, n, m;\nint f[105][N][2];\nqueue<int> q;\n\nvoid insert()\n{\n    int p = 0;\n    for (int i = 0; str[i]; i++)\n    {\n        int t = str[i] - 'A';\n        if (!tr[p][t])\n            tr[p][t] = ++idx;\n        p = tr[p][t];\n    }\n    cnt[p]++;\n}\n\nvoid build()\n{\n    for (int i = 0; i < 26; i++)\n        if (tr[0][i])\n            q.push(tr[0][i]);\n    while (!q.empty())\n    {\n        int t = q.front();\n        q.pop();\n        for (int i = 0; i < 26; i++)\n        {\n            int p = tr[t][i];\n            if (!p)\n                tr[t][i] = tr[net[t]][i];\n            else \n            {\n                net[p] = tr[net[t]][i];\n                q.push(p);\n            }\n        }\n    }\n}\n\nint main()\n{\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= n; i++)\n    {\n        scanf(\"%s\", &str);\n        insert();\n    }\n    build();//AC\u81ea\u52a8\u673a\u677f\u5b50,\u5c31\u4e0d\u89e3\u91ca\u4e86\n    f[0][0][0] = 1;//\u521d\u59cb\u72b6\u6001\n    for (int i = 0; i < m; i++)\n    {\n        for (int j = 0; j <= idx; j++)\n        {\n            for (int k = 0; k < 26; k++)\n            {\n                bool flag = false;\n                int p = tr[j][k];\n                while (p)\n                {\n                    if (cnt[p])\n                    {\n                        flag = true;\n                        break;\n                    }\n                    p = net[p];\n                }//\u5224\u65ad\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u5b57\u5178\u4e2d\u7684\u5355\u8bcd\n                if (flag)\n                    f[i + 1][tr[j][k]][1] = (f[i + 1][tr[j][k]][1] + f[i][j][0] + f[i][j][1]) % MOD;//\u5982\u679c\u5b58\u5728,\u5c31\u628a\u5f53\u524d\u4f4d\u7f6e\u7684\u6240\u6709\u65b9\u6848\u52a0\u4e0a\n                else //\u4e0d\u5b58\u5728\n                {\n                    f[i + 1][tr[j][k]][0] = (f[i + 1][tr[j][k]][0] + f[i][j][0]) % MOD;//\u52a0\u4e0a\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\n                    f[i + 1][tr[j][k]][1] = (f[i + 1][tr[j][k]][1] + f[i][j][1]) % MOD;//\u52a0\u4e0a\u5408\u6cd5\u7684\u65b9\u6848              \n                }\n            }\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i <= idx; i++)\n        ans = (ans + f[m][i][1]) % MOD;//\u5c06\u6240\u6709\u65b9\u6848\u52a0\u8d77\u6765        \n    printf(\"%d\", ans);\n    return 0;\n}\n```\n\n\n",
        "postTime": 1609816466,
        "uid": 277863,
        "name": "BzhH",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4052 \u3010[JSOI2007]\u6587\u672c\u751f\u6210\u5668\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.com.cn/problem/P4052)\u770b\u9898\u76ee\u3002  \n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7b2c\u4e00\u6b21\u9047\u5230\u81ea\u52a8\u673a\u4e0a\u9762\u8dd1$DP$\u7684\u9898\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u539f\u9898\u76ee\u770b\u8d77\u6765\u4e0d\u597d\u505a\uff0c\u4f46\u662f\u6709\u201c\u81f3\u5c11\u4e00\u4e2a\u201d\u8fd9\u4e2a\u6761\u4ef6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u60f3\u5230\u5bb9\u65a5\u4e00\u6ce2\uff0c\u7528\u603b\u65b9\u6848\u51cf\u53bb\u4e0d\u5408\u6cd5\u65b9\u6848\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u603b\u65b9\u6848\u5f88\u597d\u8ba1\u7b97\uff0c\u4e3a$26^m$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651\u8ba1\u7b97\u4e0d\u5408\u6cd5\u65b9\u6848\uff0c\u4e5f\u5c31\u662f\u91cc\u9762\u4e0d\u5305\u542b\u4efb\u4f55\u4e00\u4e2a\u5df2\u77e5\u5355\u8bcd\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6ca1\u6709\u4e00\u4e2a\u5355\u8bcd\u80fd**\u5339\u914d**\u5f97\u4e0a\u5b83\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u770b\u5230\u8fd9\u4e2a\u8bcd\u4f60\u5e94\u8be5\u5c31\u61c2\u4e86\uff0c\u8fd9\u9053\u9898\u5b9e\u9645\u4e0a\u8ddf\u5b57\u7b26\u4e32\u5339\u914d\u6709\u5173\u7cfb\u3002\u7531\u4e8e\u8fd9\u9053\u9898\u6709\u591a\u4e2a\u6a21\u5f0f\u4e32\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u5efa\u597d$AC$\u81ea\u52a8\u673a\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7136\u540e\u8003\u8651$DP$\u8ba1\u7b97\u4e0d\u5408\u6cd5\u65b9\u6848\uff1a  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$f(i,j)$\uff1a\u957f\u5ea6\u4e3a$i$\u3001\u5728\u81ea\u52a8\u673a\u4e0a\u4f1a\u5230\u8fbe\u72b6\u6001$j$\u7684\u4e0d\u5408\u6cd5\u5b57\u7b26\u4e32\u7684\u603b\u6570\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8bbe$nxt(i,j)$\u4e3a\u4ece\u72b6\u6001$i$\uff0c\u8d70\u8fc7$j$\u4e4b\u540e\u5230\u8fbe\u7684\u72b6\u6001\u3002\u8fd9\u4e2a\u53ef\u4ee5\u9884\u5904\u7406\u3002\u8f6c\u79fb\u6709\uff1a  \n$$\\forall k\\in['A','Z'],f(i+1,nxt(j,k))+=f(i,j)$$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\uff08\u6309\u7167\u4ece\u524d\u4e00\u4e2a\u72b6\u6001\u5f80\u540e\u8f6c\u79fb\u7684\u65b9\u6cd5\u6765\u7406\u89e3\u8fd9\u4e2a\u65b9\u7a0b\uff09  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8bbe$L=\\sum_{i=1}^nlen(s_i)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(26L^2+26mL)$\uff08\u524d\u4e00\u4e2a\u4e3a\u9884\u5904\u7406$nxt$\u7684\u65f6\u95f4\uff0c\u8fd9\u662f\u6211\u731c\u7684\uff0c\u56e0\u4e3a\u6839\u636e\u5e73\u65f6\u81ea\u52a8\u673a\u7684\u5b9e\u9645\u8fd0\u884c\u60c5\u51b5\u65f6\u95f4\u5e94\u8be5\u6bd4\u8fd9\u4e2a\u5c0f\u5f97\u591a\uff1b\u540e\u4e00\u4e2a\u4e3a$DP$\u7684\u65f6\u95f4\uff09\u3002  \n# \u4ee3\u7801\n```cpp\n#include <queue>\n#include <cstdio>\n#include <cstring>\n\nconst int mod = 10007;\nconst int MAXN = 65, MAXM = 105, MAXSIZ = MAXN * MAXM, MAXC = 26;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\nstd :: queue<int> q;\n\nint f[MAXM][MAXSIZ];\nint ch[MAXSIZ][MAXC], nxt[MAXSIZ][MAXC], fail[MAXSIZ];\nchar S[MAXM];\nint N, M, siz, rt = 1;\nbool ed[MAXSIZ];\n\nvoid init() { siz = 1; for( int i = 0 ; i < 26 ; i ++ ) ch[0][i] = 1; }\nint id( const char c ) { return c - 'A'; }\n\nint qkpow( int base, int indx )\n{\n\tint ret = 1;\n\twhile( indx )\n\t{\n\t\tif( indx & 1 ) ( ret *= base ) %= mod;\n\t\t( base *= base ) %= mod, indx >>= 1;\n\t}\n\treturn ret;\n}\n\nvoid insert( const char *s )\n{\n\tint len = strlen( s + 1 ), p = rt, indx;\n\tfor( int i = 1 ; i <= len ; i ++ )\n\t{\n\t\tindx = id( s[i] );\n\t\tif( ! ch[p][indx] ) ch[p][indx] = ++ siz;\n\t\tp = ch[p][indx];\n\t}\n\ted[p] = true;\n}\n\nvoid failBuild()\n{\n\twhile( ! q.empty() ) q.pop();\n\tq.push( rt );\n\tint u, v, p;\n\twhile( ! q.empty() )\n\t{\n\t\tu = q.front(), q.pop();\n\t\tfor( int i = 0 ; i < 26 ; i ++ )\n\t\t{\n\t\t\tv = ch[u][i], p = fail[u];\n\t\t\tif( ! v ) { ch[u][i] = ch[fail[u]][i]; continue; }\n\t\t\twhile( p && ! ch[p][i] ) p = fail[p];\n\t\t\tif( ch[p][i] ) fail[v] = ch[p][i];\n\t\t\tq.push( v ), ed[v] |= ed[fail[v]];\n\t\t}\n\t}\n}\n\nint desti( int cur, const char way )\n{\n\tint indx = id( way );\n\twhile( cur && ! ch[cur][indx] ) cur = fail[cur];\n\treturn ch[cur][indx];\n}\n\nint main()\n{\n\tinit();\n\tread( N ), read( M );\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t{ \n\t\tscanf( \"%s\", S + 1 );\n\t\tinsert( S );\n\t};\n\tfailBuild();\n\tfor( int i = 0 ; i <= siz ; i ++ )\n\t\tfor( int j = 0 ; j < 26 ; j ++ )\n\t\t\tnxt[i][j] = desti( i, j + 'A' );\n\tf[0][rt] = 1;\n\tfor( int i = 0 ; i < M ; i ++ )\n\t\tfor( int j = 1 ; j <= siz ; j ++ )\n\t\t\tfor( int k = 0 ; k < 26 ; k ++ )\n\t\t\t\tif( ! ed[nxt[j][k]] )\n\t\t\t\t\t( f[i + 1][nxt[j][k]] += f[i][j] ) %= mod;\n\tint tmp = 0;\n\tfor( int i = 1 ; i <= siz ; i ++ ) ( tmp += f[M][i] ) %= mod;\n\twrite( ( qkpow( 26, M ) - tmp + mod ) % mod ), putchar( '\\n' );\n\treturn 0;\n}\n```",
        "postTime": 1577182856,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[JSOI2007]\u6587\u672c\u751f\u6210\u5668"
    },
    {
        "content": "## \u9898\u610f\n\n\u6c42\u51fa\u957f\u5ea6\u4e3aM\u7684\u4efb\u610f\u5927\u5199\u5b57\u7b26\u4e32\u4e2d\uff0c\u5305\u542b\u81f3\u5c11\u4e00\u4e2a\u6a21\u5f0f\u4e32\u7684\u6570\u91cf\n\n## \u65b9\u6cd5\n\n## \u6c42XXX\u5305\u542b\u81f3\u5c11\u4e00\u4e2aYYY\u7684\u79cd\u7c7b=XXX\u7684\u79cd\u7c7b-\u4e0d\u542b\u4efb\u4f55YYY\u7684\u79cd\u7c7b\n\n\u6c42\u51fa\u957f\u5ea6\u4e3aM\u7684\u4efb\u610f\u5927\u5199\u5b57\u7b26\u4e32\u4e2d\uff0c\u4e0d\u5305\u542b\u4efb\u4f55\u6a21\u5f0f\u4e32\u7684\u6570\u91cf\uff1b\n\nAC\u81ea\u52a8\u673a\u4e0aDP\uff1b\n\n**\u5957\u8def\uff1a$f[i][j]$\u8868\u793a\u4e32\u7684\u957f\u5ea6\u4e3ai\uff0c\u5f53\u524d\u5728j\u8282\u70b9\u7684\u6570\u91cf\uff1b**\n\n\u8f6c\u79fb\uff1f\u679a\u4e3ej\u7684\u4e0b\u4e00\u4f4d\u586b\u4ec0\u4e48\uff0c\u8f6c\u79fb\u5230\u5bf9\u5e94\u7684\u8282\u70b9\uff1b\n\n## \u6ce8\u610f\n\n\u7ed3\u5c3e\u6807\u8bb0\u8981\u4e0b\u4f20\uff0c\u4e5f\u5c31\u662f\u5f53\u4e00\u4e2a\u70b9\u7684\u524d\u7f00\u662f\u4e00\u4e2a\u5355\u8bcd\u7684\u7ed3\u5c3e\u65f6\uff0c\u4e5f\u4e0d\u80fd\u9009\uff0c\u6240\u4ee5\u8981$val[v] |= val[fail[v]]$\uff1b\n\n\u4e0d\u8981\u50cf\u6211\u4e00\u6837\u7528\u4ec0\u4e48\u5947\u602a\u7684\u4e0b\u4f20\uff0cv\u7684\u524d\u7f00\u5c31\u662ffail[v]\uff1b\n\n## \u4ee3\u7801\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<vector>\n#include<map>\n#include<set>\n#include<list>\n#include<queue>\n#include<stack>\n#include<bitset>\n#include<deque>\nusing namespace std;\n#define ll long long\n#define inf 0x3f3f3f3f\n#define ri register int\n#define il inline\n#define fi first\n#define se second\n#define mp make_pair\n#define pi pair<int,int>\n#define mem0(x) memset((x),0,sizeof (x))\n#define mem1(x) memset((x),0x3f,sizeof (x))\n#define pb push_back\n#define gc getchar\ntemplate<class T>void in(T &x)\n{\n\tx = 0; bool f = 0; char c = gc();\n\twhile (c < '0' || c > '9') {if (c == '-') f = 1; c = gc();}\n\twhile ('0' <= c && c <= '9') {x = (x << 3) + (x << 1) + (c ^ 48); c = gc();}\n\tif (f) x = -x;\n}\n#undef gc\n#define N 10005\nint trie[N][26], cnt, fail[N];\nint val[N];\nint n;\nvoid insert(char *c) {\n\tri l = strlen(c), x = 0;\n\tfor (ri i = 0, t; i < l; i++) {\n\t\tt = c[i] - 'A';\n\t\tif (!trie[x][t]) trie[x][t] = ++cnt;\n\t\tx = trie[x][t];\n\t}\n\tval[x]++;\n}\nvoid getfail() {\n\tqueue<int>q;\n\tq.push(0);\n\tri x;\n\twhile (!q.empty()) {\n\t\tx = q.front();\n\t\tq.pop();\n\t\tfor (ri i = 0, v; i < 26; ++i)\n\t\t\tif ((v = trie[x][i])) {\n\t\t\t\tfail[v] = x ? trie[fail[x]][i] : 0;\n\t\t\t\tq.push(v);\n\t\t\t\tval[v] |= val[fail[v]];\n\t\t\t}\n\t\t\telse trie[x][i] = trie[fail[x]][i];\n\t}\n}\n#define md 10007\nint m;\nchar tc[N];\nint f[105][N];  // added is i,node is j\nsigned main() {\n\tin(n), in(m);\n\tfor (ri i = 1; i <= n; ++i) {\n\t\tscanf(\"%s\", tc);\n\t\tinsert(tc);\n\t}\n\tgetfail();\n\tf[0][0] = 1;\n\tfor (ri i = 1; i <= m; ++i) {\n\t\tfor (ri j = 0; j <= cnt; ++j) {\n\t\t\tif (!f[i - 1][j]) continue;\n\t\t\tfor (ri k = 0; k < 26; ++k) {\n\t\t\t\tif (val[trie[j][k]] == 0) {\n\t\t\t\t\t(f[i][trie[j][k]] += f[i - 1][j]) %= md;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t/*for (ri i = 0; i <= m; ++i) {\n\t\tfor (ri j = 0; j <= cnt; ++j) {\n\t\t\tprintf(\"%d \", f[i][j]);\n\t\t}\n\t\tputs(\"\");\n\t}*/\n\tint sum = 0;\n\tfor (ri i = 0; i <= cnt; ++i) (sum += f[m][i]) %= md;\n\tint ans = 1;\n\tfor (ri i = 1; i <= m; ++i) (ans *= 26) %= md;\n\tprintf(\"%d\", (ans - sum + md) % md);\n\treturn 0;\n}\n\n```",
        "postTime": 1531905155,
        "uid": 58302,
        "name": "i207M",
        "ccfLevel": 0,
        "title": "\u597d\u9898-AC\u81ea\u52a8\u673a\u4e0aDP-\u6587\u672c\u751f\u6210\u5668-\u89e3\u9898\u62a5\u544a"
    }
]