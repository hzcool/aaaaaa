[
    {
        "content": "\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u6211\u4eec\u8981\u7ef4\u62a4\u4ee5\u4e0b\u51e0\u4e2a\u4e1c\u897f\u3002\n\n$l,r$\uff1a\u8be5\u533a\u95f4\u7684\u5de6\uff08\u53f3\uff09\u7aef\u70b9\u3002\n\n$l_{val},r_{val}$\uff1a\u533a\u95f4\u6700\u5de6\uff08\u53f3\uff09\u7684\u7ad6\u8fb9\u7684\u6743\u503c\u3002\n\n$l_{max},r_{max}$\uff1a\u533a\u95f4\u6700\u5de6\uff08\u53f3\uff09\u7684\u7ad6\u8fb9\u53ca\u5176\u5de6\uff08\u53f3\uff09\u8fb9\u7684\u6240\u6709\u8fb9\u7684\u6700\u5927\u503c\u3002\n\n$heng_{max}$\uff1a\u533a\u95f4\u6a2a\u8fb9\u7684\u6700\u5927\u503c\u3002\n\n$sum$\uff1a\u7b54\u6848\u3002\n\n\u7136\u540e\u6211\u4eec\u5728\u5408\u5e76\u533a\u95f4\u7684\u65f6\u5019\uff0c\u5de6\u533a\u95f4\u7684\u6700\u53f3\u7ad6\u8fb9\u548c\u53f3\u533a\u95f4\u7684\u6700\u5de6\u7ad6\u8fb9\u548c\u4e2d\u95f4\u7684\u6a2a\u8fb9\u4f1a\u5f62\u6210\u4e00\u4e2a\u73af\uff0c\u7136\u540e\u6839\u636e\u4e0a\u9762\u7684\u7ef4\u62a4\u4fe1\u606f\u627e\u5230\u73af\u4e2d\u7684\u6700\u5927\u503c\uff0c\u53bb\u6389\u5373\u53ef\u3002\n\n\u7136\u540e\u6709\u4e00\u4e2a\u7ec6\u8282\uff1a\n\u5047\u5982\u6211\u4eec\u8981\u53bb\u6389\u73af\u4e0a\u7684\u6700\u5927\u8fb9\u6b63\u597d\u662f\u5de6\u533a\u95f4\u7684\u552f\u4e00\u4e00\u6761\u7ad6\u8fb9\uff0c\u90a3\u4e48\u5408\u5e76\u540e\u7684\u533a\u95f4\u7684\u6700\u5de6\u7ad6\u8fb9\u5c31\u4e0d\u80fd\u4ece\u5de6\u533a\u95f4\u53d6\u4e86\uff0c\u8981\u53d6\u53f3\u533a\u95f4\u7684\u6700\u5de6\u7ad6\u8fb9\uff0c\u540c\u65f6\u5408\u5e76\u540e\u7684\u533a\u95f4\u7684l_max\u4e5f\u8981\u6539\u3002\u6240\u4ee5\u6211\u4eec\u5728\u8bb0\u5f55\u4e00\u4e0b\u533a\u95f4\u91cc\u6709\u591a\u5c11\u6761\u7ad6\u8fb9\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u662f\u8fd9\u4e2a\u7279\u6b8a\u60c5\u51b5\u5373\u53ef\u3002\n\n\u53f3\u533a\u95f4\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u540c\u7406\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define max(x,y) (x>y?x:y) \nusing namespace std;\nint n,m,tot,x0,y0,x1,y1,l,r;\nchar ch[101];\nlong long w,heng[2][60001],shu[60001];\nstruct node{\n\tint l,r,tot,l_val,r_val;\n\tlong long l_max,r_max,sum,heng_max;\n\tvoid read(int x) {l=r=x;l_max=r_max=l_val=r_val=sum=shu[x];tot=1;heng_max=0;}\n}tree[250001];\nnode pushup(node x,node y)\n{\n\tnode now;\n\tnow.l=x.l;now.r=y.r;\n\tnow.heng_max=max(max(heng[0][x.r],heng[1][x.r]),max(x.heng_max,y.heng_max));\n\tint del=max(max(heng[0][x.r],heng[1][x.r]),max(x.r_max,y.l_max));\n\tnow.sum=x.sum+y.sum+heng[0][x.r]+heng[1][x.r]-del;now.tot=x.tot+y.tot;\n\tnow.l_val=x.l_val;now.r_val=y.r_val;\n\tnow.l_max=x.l_max;now.r_max=y.r_max;\n\tif (del==x.r_val)\n\t{\n\t\tnow.tot--;\n\t\tif (x.tot==1)\n\t\t{\n\t\t\tnow.l_val=y.l_val;\n\t\t\tnow.l_max=max(max(heng[0][x.r],heng[1][x.r]),max(x.heng_max,y.l_max));\n\t\t}\n\t}\n\telse if (del==y.l_val)\n\t{\n\t\tnow.tot--;\n\t\tif (y.tot==1)\n\t\t{\n\t\t\tnow.r_val=x.r_val;\n\t\t\tnow.r_max=max(max(heng[0][x.r],heng[1][x.r]),max(x.r_max,y.heng_max));\n\t\t}\n\t}\n\treturn now;\n}\nvoid build(int k,int l,int r)\n{\n\tif (l==r) \n\t{\n\t\ttree[k].read(l);\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(k*2,l,mid);build(k*2+1,mid+1,r);\n\ttree[k]=pushup(tree[k*2],tree[k*2+1]);\n}\nvoid update(int k,int l,int r,int x)\n{\n\tif (l==r&&l==x)\n\t{\n\t\ttree[k].read(x);\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif (x<=mid) update(k*2,l,mid,x);\n\telse update(k*2+1,mid+1,r,x);\n\ttree[k]=pushup(tree[k*2],tree[k*2+1]);\n}\nvoid change(int k,int l,int r,int x)\n{\n\tif (l==r&&l==x) return;\n\tint mid=(l+r)>>1;\n\tif (x<=mid) change(k*2,l,mid,x);\n\telse change(k*2+1,mid+1,r,x);\n\ttree[k]=pushup(tree[k*2],tree[k*2+1]);\n}\nnode query(int k,int l,int r,int x,int y)\n{\n\tif (x<=l&&r<=y) return tree[k];\n\tint mid=(l+r)>>1;\n\tif (y<=mid) return query(k*2,l,mid,x,y);\n\tif (x>mid) return query(k*2+1,mid+1,r,x,y);\n\treturn pushup(query(k*2,l,mid,x,y),query(k*2+1,mid+1,r,x,y));\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<n;i++) scanf(\"%lld\",&heng[0][i]);\n\tfor (int i=1;i<n;i++) scanf(\"%lld\",&heng[1][i]);\n\tfor (int i=1;i<=n;i++) scanf(\"%lld\",&shu[i]);\n\tgetchar();getchar();\n\tbuild(1,1,n);\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%s\",ch);\n\t\tif (ch[0]=='C')\n\t\t{\n\t\t\tscanf(\"%d%d%d%d%lld\",&x0,&y0,&x1,&y1,&w);\n\t\t\tgetchar();\n\t\t\tif (y0==y1) shu[y0]=w,update(1,1,n,y0);\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (y0>y1) swap(y0,y1);\n\t\t\t\theng[x0-1][y0]=w;\n\t\t\t\tchange(1,1,n,y0);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d%d\",&l,&r);getchar();\n\t\t\tprintf(\"%lld\\n\",query(1,1,n,l,r).sum);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1582103891,
        "uid": 157857,
        "name": "ImmortalWatcher",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5618 \u3010[SDOI2015]\u9053\u8def\u4fee\u5efa\u3011"
    },
    {
        "content": "\u6709\u5751\uff0c\u4f46\u662f\u4e0d\u96be\uff08\n\n\u770b\u5230\u9898\u7684\u7b2c\u4e00\u773c\u4f7f\u7528\u7ebf\u6bb5\u6811\uff0c\u5bf9\u533a\u95f4\u7ef4\u62a4\u4e24\u4e2a\u72b6\u6001\uff0c\u4e0a\u9762\u548c\u4e0b\u9762\u662f\u5426\u8fde\u901a\u3002\n\n\u7136\u540e\u4f60\u53d1\u73b0\u4f1a\u88ab\u73af\u7ed9 gank \u6389\u3002\n\n\u4e8e\u662f\u91cd\u65b0\u8bbe\u72b6\u6001\uff0c\u8bbe $w_{0/1,0/1}$ \u8868\u793a\u5de6\u53f3\u7aef\u70b9\u4e2d\uff0c\u4e0a\u4e0b\u8282\u70b9\u662f\u5426\u8fde\u901a\u3002\n\n\u8fd9\u4e2a\u76f8\u5f53\u597d\u8f6c\u79fb\uff0c\u53ea\u9700\u8981\u8003\u8651\u5408\u5e76\u7684\u4f4d\u7f6e\u662f\u5426\u5904\u4e8e\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u7136\u540e\u51b3\u5b9a\u52a0\u4e0a $x+y$ \u8fd8\u662f $\\min(x,y)$ \u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O(m\\log n)$ ~~\u6bd4\u90a3\u4e2a\u5728\u73af\u4e0a\u5220\u8fb9\u7684\u72b6\u6001\u4e0d\u77e5\u9053\u9ad8\u5230\u54ea\u91cc\u53bb\u4e86~~\n```cpp\n#include<cstdio>\n#include<cctype>\nconst int M=6e4+5;\nint n,m,w1[M],w2[M];\ninline char read_c(){\n\tchar s;while(!isalpha(s=getchar()));return s;\n}\ninline int read(){\n\tint n(0);char s;while(!isdigit(s=getchar()));while(n=n*10+(s&15),isdigit(s=getchar()));return n;\n}\ninline void write(int n){\n\tstatic char s[15];int top(0);while(s[++top]=n%10^48,n/=10);while(putchar(s[top]),--top);putchar(10);\n}\nstruct data{\n\tint w[2][2];\n\tinline int*operator[](const int&x){\n\t\treturn w[x];\n\t}\n}t[M<<2];\ninline int min(const int&a,const int&b){\n\treturn a>b?b:a;\n}\ninline data Merge(data a,const int&x,const int&y,data b){\n\tdata ans;\n\tans[0][0]=min(a[0][1]+b[1][0]+min(x,y),min(a[0][0]+b[1][0],a[0][1]+b[0][0])+x+y);\n\tans[1][0]=min(a[1][1]+b[1][0]+min(x,y),min(a[1][0]+b[1][0],a[1][1]+b[0][0])+x+y);\n\tans[0][1]=min(a[0][1]+b[1][1]+min(x,y),min(a[0][0]+b[1][1],a[0][1]+b[0][1])+x+y);\n\tans[1][1]=min(a[1][1]+b[1][1]+min(x,y),min(a[1][0]+b[1][1],a[1][1]+b[0][1])+x+y);\n\treturn ans;\n}\ninline void update(const int&u,const int&L,const int&R){\n\tconst int&mid=L+R>>1;t[u]=Merge(t[u<<1],w1[mid],w2[mid],t[u<<1|1]);\n}\ninline void Build(const int&u,const int&L=1,const int&R=n){\n\tif(L==R)return void(t[u][1][1]=read());\n\tconst int&mid=L+R>>1;Build(u<<1,L,mid);Build(u<<1|1,mid+1,R);update(u,L,R);\n}\ninline void Mdf(const int&u,const int&x,const int&w,const int&L=1,const int&R=n){\n\tif(L==R)return void(t[u][1][1]=w);\n\tconst int&mid=L+R>>1;x<=mid?Mdf(u<<1,x,w,L,mid):Mdf(u<<1|1,x,w,mid+1,R);update(u,L,R);\n}\ninline void Update(const int&u,const int&x,const int&L=1,const int&R=n){\n\tconst int&mid=L+R>>1;if(x!=mid)x<=mid?Update(u<<1,x,L,mid):Update(u<<1|1,x,mid+1,R);update(u,L,R);\n}\ninline data Qry(const int&u,const int&l,const int&r,const int&L=1,const int&R=n){\n\tif(l<=L&&R<=r)return t[u];\n\tconst int&mid=L+R>>1;if(r<=mid)return Qry(u<<1,l,r,L,mid);if(l>mid)return Qry(u<<1|1,l,r,mid+1,R);\n\treturn Merge(Qry(u<<1,l,r,L,mid),w1[mid],w2[mid],Qry(u<<1|1,l,r,mid+1,R));\n}\nsigned main(){\n\tn=read();m=read();for(int i=1;i<n;++i)scanf(\"%d\",w1+i);for(int i=1;i<n;++i)scanf(\"%d\",w2+i);Build(1);\n\tfor(int i=1;i<=m;++i){\n\t\tchar s=read_c();\n\t\tif(s=='C'){\n\t\t\tint x0,y0,x1,y1;x0=read();y0=read();x1=read();y1=read();\n\t\t\tif(y0==y1)Mdf(1,y0,read());else(x0==1?w1:w2)[min(y0,y1)]=read(),Update(1,min(y0,y1));\n\t\t}\n\t\tif(s=='Q'){\n\t\t\tint L,R;L=read();R=read();write(Qry(1,L,R)[1][1]);\n\t\t}\n\t}\n}\n```",
        "postTime": 1658719003,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u6570\u636e\u7ed3\u6784 \u7ebf\u6bb5\u6811 P5618\u9898\u89e3"
    },
    {
        "content": "\u9898\u9762\u5927\u610f\uff1a\u7ed9\u51fa\u4e24\u6392\u70b9\uff0c\u7ed9\u51fa\u540c\u4e00\u5217\u7684\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\u548c\u540c\u4e00\u884c\u76f8\u90bb\u7684\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\uff0c\u5b58\u5728\u5728\u7ebf\u64cd\u4f5c\u4fee\u6539\u548c\u67e5\u8be2\uff0c\u4fee\u6539\u662f\u67d0\u6761\u8fb9\u7684\u8fb9\u6743\uff0c\u67e5\u8be2\u662f\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u6700\u5c0f\u751f\u6210\u6811\u7684\u8fb9\u6743\u603b\u548c\u3002\n\nSolution\uff1a  \n\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u533a\u95f4\u7684\u60c5\u51b5\u3002\n\n$\\mathit{dp}_{1/0,1/0}$\uff1a\u533a\u95f4\u6700\u5de6\u7684\u7eb5\u8fb9\u8fde/\u4e0d\u8fde\u4e14\u53f3\u8fb9\u7684\u7eb5\u8fb9\u8fde/\u4e0d\u8fde\uff0c\u5e76\u5c06\u533a\u95f4\u5185\u7684\u8fd9\u4e9b\u70b9\u8fde\u6210\u4e00\u68f5\u6700\u5c0f\u751f\u6210\u6811\u6240\u9700\u7684\u6700\u5c0f\u8fb9\u6743\u3002\n\n\u4e0b\u9762\u8003\u8651\u8f6c\u79fb\uff1a\u5408\u5e76 $L$ \u548c $R$ \u4e24\u4e2a\u8282\u70b9\uff0c\u8bbe $L$ \u8868\u793a\u533a\u95f4\u5185\u6700\u53f3\u7684\u7eb5\u8fb9\u4e3a $y0$\uff0c$R$ \u8868\u793a\u533a\u95f4\u5185\u6700\u5de6\u7684\u7eb5\u8fb9\u4e3a $y1$\uff0c\u5b83\u4eec\u4e24\u4e2a\u76f8\u90bb\u533a\u95f4\u4e2d\u95f4\u7684\u4e24\u6761\u6a2a\u8fb9\u4e3a $x0$ \u548c $x1$\u3002\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\u662f\u8fde\u63a5\u4e00\u6761\u6a2a\u8fb9\uff0c\u5373\u5bf9\u4e8e\u6240\u6709\u7684 $(i,j,c1,c2\\in [0,1])$ \u90fd\u8981\u6267\u884c\u4ee5\u4e0b\u8f6c\u79fb\u3002  \n```\nU.dp[i][j]=min(U.dp[i][j],L.dp[i][c1]+R.[c2][j]+min(x0,x1));\n```\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\u662f $y0$ \u6216 $y1$ \u662f\u4fdd\u8bc1\u8fde\u63a5\u7684\u60c5\u51b5\u4e0b\uff0c\u62c6\u9664\u5176\u4e2d\u4e00\u6761\uff0c\u4e24\u6761\u6a2a\u8fb9\u90fd\u8fde\u3002   \n\u5373\u5bf9\u4e8e\u6240\u6709\u7684 $(i,j,c2\\in [0,1])$ \u90fd\u8981\u6267\u884c\u4ee5\u4e0b\u8f6c\u79fb\u3002 \n```\nU.dp[i][j]=min(U.dp[i][j],L.dp[i][1]+R.dp[c2][j]-y0+x0+x1);\n```\n\n\u5bf9\u4e8e\u6240\u6709\u7684 $(i,j,c1\\in [0,1])$ \u90fd\u8981\u6267\u884c\u4ee5\u4e0b\u8f6c\u79fb\u3002   \n```\nU.dp[i][j]=min(U.dp[i][j],L.dp[i][c1]+R.dp[1][j]-y1+x0+x1);\n```\n\n\u8fd8\u6709\u5c31\u662f\u8981\u8003\u8651 $L$ \u6216 $R$ \u662f\u53f6\u5b50\u8282\u70b9\uff08\u6700\u5de6\u7b49\u4e8e\u6700\u53f3\uff09\u3002\n\n\u8fd9\u6837\u4e00\u6765 ```pushup``` \u51fd\u6570\u5c31\u5199\u597d\u4e86 ~~\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u6572\u6a21\u677f~~\u3002\n\n### Don't talk much:\n```\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nconst int N=6e4+10,INF=1e9;\nstruct tree{\n\tint l,r;\n\tint dp[2][2];\n\tvoid init_INF(){\n\t\tmemset(dp,0x3f,sizeof dp);\n\t}\n}tr[N<<2];\nint col[N],row1[N],row2[N];//\u5bf9\u5e94\u4f4d\u7f6e\u7684\u6a2a\u8fb9\u3001\u7eb5\u8fb9\nvoid pushup(tree &U,tree &L,tree &R){\n\tU.l=L.l,U.r=R.r;\n\tint x0=row1[L.r],x1=row2[L.r];\n\tint y0=col[L.r],y1=col[R.l];\n\tbool leafL=L.l==L.r,leafR=R.l==R.r;\n\tU.init_INF();\n\tif(leafL&&leafR){//\u7279\u5224:\u5de6\u53f3\u90fd\u662f\u53f6\u5b50\u8282\u70b9\n\t\tU.dp[0][1]=x0+x1+y1;\n\t\tU.dp[1][0]=x0+x1+y0;\n\t\tU.dp[1][1]=y0+y1+min(x0,x1);\n\t\treturn;\n\t}\n\telse if(leafL){//\u7279\u5224:\u5de6\u513f\u5b50\u662f\u53f6\u5b50\u8282\u70b9\n\t\tU.dp[0][0]=x0+x1+min(R.dp[0][0],R.dp[1][0]);\n\t\tU.dp[0][1]=x0+x1+min(R.dp[0][1],R.dp[1][1]);\n\t\tU.dp[1][0]=y0+min(min(R.dp[0][0],R.dp[1][0])+min(x0,x1),\n\t\tx1+x0+R.dp[1][0]-y1);\n\t\tU.dp[1][1]=y0+min(min(R.dp[0][1],R.dp[1][1])+min(x0,x1),\n\t\tx1+x0+R.dp[1][1]-y1);\n\t\treturn;\n\t}\n\telse if(leafR){//\u7279\u5224:\u53f3\u513f\u5b50\u662f\u53f6\u5b50\u8282\u70b9\n\t\tU.dp[0][0]=x0+x1+min(L.dp[0][0],L.dp[0][1]);\n\t\tU.dp[1][0]=x0+x1+min(L.dp[1][0],L.dp[1][1]);\n\t\tU.dp[0][1]=y1+min(min(L.dp[0][0],L.dp[0][1])+min(x0,x1),\n\t\tx1+x0+L.dp[0][1]-y0);\n\t\tU.dp[1][1]=y1+min(min(L.dp[1][0],L.dp[1][1])+min(x0,x1),\n\t\tx1+x0+L.dp[1][1]-y0);\n\t\treturn;\n\t}\n\tfor(int i=0;i<2;i++)//\u6b63\u5e38\u8f6c\u79fb\n\tfor(int j=0;j<2;j++)\n\tfor(int c1=0;c1<2;c1++)\n\tfor(int c2=0;c2<2;c2++){\n\t\tint tp=L.dp[i][c1]+R.dp[c2][j]+min(x0,x1);\n\t\tU.dp[i][j]=min(U.dp[i][j],tp);\n\t\tif(c1){\n\t\t\tU.dp[i][j]=min(U.dp[i][j],tp-y0+max(x0,x1));\n\t\t}\n\t\tif(c2){\n\t\t\tU.dp[i][j]=min(U.dp[i][j],tp-y1+max(x0,x1));\n\t\t}\n\t}\n}\nvoid pushup(int u){\n\tpushup(tr[u],tr[u<<1],tr[u<<1|1]);\n}\nvoid build(int u,int l,int r){\n\ttr[u]=(tree){l,r};\n\tif(l==r){\n\t\ttr[u].init_INF();\n\t\ttr[u].dp[1][1]=col[l];\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tbuild(u<<1,l,mid);\n\tbuild(u<<1|1,mid+1,r);\n\tpushup(u);\t\n}\nvoid modify(int u,int x){\n\tif(tr[u].l==tr[u].r){\n\t\ttr[u].init_INF();\n\t\ttr[u].dp[1][1]=col[x];\n\t\treturn;\n\t}\n\tint mid=tr[u].l+tr[u].r>>1;\n\tif(mid>=x)\n\t\tmodify(u<<1,x);\n\telse\n\t\tmodify(u<<1|1,x);\n\tpushup(u);\n}\ntree query(int u,int l,int r){\n\tif(tr[u].l>=l&&tr[u].r<=r)\n\t\treturn tr[u];\n\tint mid=tr[u].l+tr[u].r>>1;\n\tif(mid>=r)return query(u<<1,l,r);\n\tif(mid<l)return query(u<<1|1,l,r);\n\ttree L=query(u<<1,l,r),R=query(u<<1|1,l,r),U;\n\tpushup(U,L,R);\n\treturn U;\n}\nint n,m;\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<n;i++)\n\t\tscanf(\"%d\",row1+i);\n\tfor(int i=1;i<n;i++)\n\t\tscanf(\"%d\",row2+i);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",col+i);\n\tbuild(1,1,n);\n\tchar opt[2];\n\tint x0,y0,x1,y1,w;\n\twhile(m--){\n\t\tscanf(\"%s\",opt);\n\t\tif(opt[0]=='C'){\n\t\t\tscanf(\"%d%d%d%d%d\",&x0,&y0,&x1,&y1,&w);\n\t\t\tif(x0!=x1){\n\t\t\t\tcol[y0]=w;\n\t\t\t\tmodify(1,y0);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(y0>y1)swap(y0,y1);\n\t\t\t\tif(x0==1)\n\t\t\t\t\trow1[y0]=w;\n\t\t\t\telse\n\t\t\t\t\trow2[y0]=w;\n\t\t\t}\n\t\t\tmodify(1,y0);//\u4fee\u6539\u4e86\u8fb9\u6743\u540e\u9700\u8981\u4ece\u6700\u6df1\u5230\u6839pushup\u4e00\u904d\n\t\t}\n\t\telse{\n\t\t\tscanf(\"%d%d\",&x0,&y0);\n\t\t\ttree tp=query(1,x0,y0);\n\t\t\tprintf(\"%d\\n\",min(min(tp.dp[0][0],tp.dp[0][1]),min(tp.dp[1][0],tp.dp[1][1])));\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1683260078,
        "uid": 338880,
        "name": "Aaron_wch",
        "ccfLevel": 7,
        "title": "[SDOI2015]\u9053\u8def\u4fee\u5efa"
    },
    {
        "content": "## \u9898\u76ee\u5206\u6790\n\n\u867d\u7136\u6570\u636e\u8303\u56f4\u53ea\u6709 $n\\le60000$\uff0c\u4f46\u662f\u5b8c\u5168\u53ef\u4ee5\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u505a\u3002\n\n\u9996\u5148\u8003\u8651\u90a3\u79cd\u72b6\u6001\u7684\u56fe\u5728\u5de6\u8fb9\u548c\u53f3\u8fb9\u52a0\u5165\u8282\u70b9\u548c\u8fb9\u4e4b\u540e\u53ef\u4ee5\u8fde\u901a\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u8fd9\u79cd\u56fe\u6709\u8fd9\u4e24\u4e2a\u6027\u8d28\uff1a\n\n- \u81f3\u5c11\u6709\u4e00\u6761\u8def\u5f84\uff0c\u7ecf\u8fc7\u6700\u5de6\u7aef\u548c\u6700\u53f3\u7aef\u4e2d\u7684\u70b9\u3002\n- \u6240\u6709\u70b9\u81f3\u5c11\u548c\u6700\u5de6\u7aef\u548c\u6700\u53f3\u7aef\u7684\u70b9\u8fde\u901a\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u5212\u5206\u6210\u4ee5\u4e0b\u51e0\u79cd\u72b6\u6001\uff1a\n\n1. \u6700\u5de6\u7aef\u4e24\u4e2a\u70b9\u4e0d\u8fde\u901a\uff0c\u6700\u53f3\u7aef\u4e24\u4e2a\u70b9\u4e0d\u8fde\u901a\uff0c\u53ea\u6709\u4e00\u6761\u7ecf\u8fc7\u6700\u5de6\u7aef\u548c\u6700\u53f3\u7aef\u4e2d\u7684\u70b9\u7684\u8def\u5f84\uff1b\n2. \u6700\u5de6\u7aef\u4e24\u4e2a\u70b9\u8fde\u901a\uff0c\u6700\u53f3\u7aef\u4e24\u4e2a\u70b9\u4e0d\u8fde\u901a\uff1b\n3. \u6700\u5de6\u7aef\u4e24\u4e2a\u70b9\u4e0d\u8fde\u901a\uff0c\u6700\u53f3\u7aef\u4e24\u4e2a\u70b9\u8fde\u901a\uff1b\n4. \u6700\u5de6\u7aef\u4e24\u4e2a\u70b9\u8fde\u901a\uff0c\u6700\u53f3\u7aef\u4e24\u4e2a\u70b9\u8fde\u901a\uff1b\n5. \u6700\u5de6\u7aef\u4e24\u4e2a\u70b9\u4e0d\u8fde\u901a\uff0c\u6700\u53f3\u7aef\u4e24\u4e2a\u70b9\u4e0d\u8fde\u901a\uff0c\u6709\u4e24\u6761\u7ecf\u8fc7\u6700\u5de6\u7aef\u548c\u6700\u53f3\u7aef\u4e2d\u7684\u70b9\u7684\u8def\u5f84\u3002\n\n\u5982\u56fe\uff1a\n\n![\u72b6\u6001](https://cdn.luogu.com.cn/upload/image_hosting/9ntoz8xy.png)\n\n\u7136\u540e\u5206\u7c7b\u8ba8\u8bba\u6bcf\u4e24\u79cd\u72b6\u6001\u7684\u8fde\u63a5\u65b9\u6cd5\u548c\u7ed3\u679c\u72b6\u6001\uff0c\u5982\u56fe\u6240\u793a\u7684\u51e0\u79cd\u60c5\u51b5\uff1a\n\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/kz3rm503.png)\n\n\u5269\u4f59\u60c5\u51b5\u89c1\u4ee3\u7801 pushup \u51fd\u6570\u3002\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u8bb0\u5f55\u4ee5\u4e0b\u4e1c\u897f\uff1a\n\n- $a,b$\uff1a\u533a\u95f4\u5de6\u7aef\u70b9\u548c\u53c8\u7aef\u70b9\u3002\n- $v1,v2,v3,v4,v5$\uff1a\u533a\u95f4\u4e2d\u6bcf\u79cd\u72b6\u6001\u6700\u5c0f\u8d39\u7528\u3002\n\n\u5bf9\u4e8e\u7ad6\u8fb9\u4fee\u6539\uff0c\u4fee\u6539\u5305\u542b\u9700\u8981\u4fee\u6539\u7684\u70b9\u7684\u533a\u95f4\uff1b\u5bf9\u4e8e\u6a2a\u8fb9\u4fee\u6539\uff0c\u53ea\u9700\u4fee\u6539\u5217\u6570\u8f83\u5c0f\u7684\u70b9\u5373\u53ef\u3002\n\n\u67e5\u8be2\u8f93\u51fa\u5bf9\u5e94\u533a\u95f4\u7684 $v4$ \u7684\u3002\n\n\u8fd9\u91cc\u6709\u4e2a\u5751\u70b9\uff1a\u8f93\u5165\u4fee\u6539\u64cd\u4f5c\u65f6\u53ef\u80fd\u628a\u5217\u6570\u5927\u7684\u70b9\u653e\u5728\u524d\u9762\uff0c\u8fd9\u65f6\u8981\u628a\u8f83\u5c0f\u7684\u70b9\u8bbe\u4e3a\u540e\u8f93\u5165\u7684\u70b9\u3002\n\n## \u793a\u4f8b\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N = 60005, INF = 2e9;\n\nint n, m;\nint x[N], y[N], z[N];\nstruct node{\n\tint a, b;\n\tLL v1, v2, v3, v4, v5;\n}t[N * 4];\n\nvoid pushup(node &u, node ls, node rs)\n{\n\tint p = x[ls.b], q = y[ls.b], c = p + q, d = min(p, q);\n\tu.v1 = u.v2 = u.v3 = u.v4 = u.v5 = INF;\n\tu.v1 = min(u.v1, ls.v1 + rs.v2 + c);\n\tu.v3 = min(u.v3, ls.v1 + rs.v4 + c);\n\tu.v1 = min(u.v1, ls.v1 + rs.v5 + c);\n\tu.v2 = min(u.v2, ls.v2 + rs.v2 + c);\n\tu.v4 = min(u.v4, ls.v2 + rs.v4 + c);\n\tu.v2 = min(u.v2, ls.v2 + rs.v5 + c);\n\tu.v1 = min(u.v1, ls.v3 + rs.v1 + c);\n\tu.v1 = min(u.v1, ls.v3 + rs.v2 + d);\n\tu.v3 = min(u.v3, ls.v3 + rs.v3 + c);\n\tu.v3 = min(u.v3, ls.v3 + rs.v4 + d);\n\tu.v3 = min(u.v3, ls.v3 + rs.v5 + c);\n\tu.v1 = min(u.v1, ls.v3 + rs.v5 + d);\n\tu.v2 = min(u.v2, ls.v4 + rs.v1 + c);\n\tu.v2 = min(u.v2, ls.v4 + rs.v2 + d);\n\tu.v4 = min(u.v4, ls.v4 + rs.v3 + c);\n\tu.v4 = min(u.v4, ls.v4 + rs.v4 + d);\n\tu.v4 = min(u.v4, ls.v4 + rs.v5 + c);\n\tu.v2 = min(u.v2, ls.v4 + rs.v5 + d);\n\tu.v1 = min(u.v1, ls.v5 + rs.v1 + c);\n\tu.v2 = min(u.v2, ls.v5 + rs.v2 + c);\n\tu.v1 = min(u.v1, ls.v5 + rs.v2 + d);\n\tu.v3 = min(u.v3, ls.v5 + rs.v3 + c);\n\tu.v4 = min(u.v4, ls.v5 + rs.v4 + c);\n\tu.v3 = min(u.v3, ls.v5 + rs.v4 + d);\n\tu.v5 = min(u.v5, ls.v5 + rs.v5 + c);\n\tu.v1 = min(u.v1, ls.v5 + rs.v5 + d);\n\tu.a = ls.a, u.b = rs.b;\n}\n\nvoid build(int u, int a, int b)\n{\n\tt[u].a = a, t[u].b = b;\n\tif(a == b)\n\t{\n\t\tt[u].v1 = t[u].v2 = t[u].v3 = INF;\n\t\tt[u].v5 = 0;\n\t\tt[u].v4 = z[a];\n\t\treturn ;\n\t}\n\tint mid = a + b >> 1, ls = u << 1, rs = ls | 1;\n\tbuild(ls, a, mid), build(rs, mid + 1, b);\n\tpushup(t[u], t[ls], t[rs]);\n}\n\nvoid modify(int u, int d)\n{\n\tif(t[u].a == t[u].b)\n\t{\n\t\tt[u].v1 = t[u].v2 = t[u].v3 = INF;\n\t\tt[u].v5 = 0;\n\t\tt[u].v4 = z[t[u].a];\n\t\treturn ;\n\t}\n\tint ls = u << 1, rs = ls | 1;\n\tif(t[ls].b >= d) modify(ls, d);\n\telse modify(rs, d);\n\tpushup(t[u], t[ls], t[rs]);\n}\n\nnode query(int u, int x, int y)\n{\n\tif(x <= t[u].a && t[u].b <= y) return t[u];\n\tint ls = u << 1, rs = ls | 1;\n\tif(t[ls].b >= x && t[rs].a <= y)\n\t{\n\t\tnode res;\n\t\tpushup(res, query(ls, x, y), query(rs, x, y));\n\t\treturn res;\n\t}\n\telse if(t[ls].b >= x) return query(ls, x, y);\n\telse return query(rs, x, y);\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i = 1; i < n; i ++ ) scanf(\"%d\", &x[i]);\n\tfor(int i = 1; i < n; i ++ ) scanf(\"%d\", &y[i]);\n\tfor(int i = 1; i <= n; i ++ ) scanf(\"%d\", &z[i]);\n\t\n\tbuild(1, 1, n);\n\twhile(m -- )\n\t{\n\t\tchar op[2];\n\t\tscanf(\"%s\", op);\n\t\tif(*op == 'Q')\n\t\t{\n\t\t\tint l, r;\n\t\t\tscanf(\"%d%d\", &l, &r);\n\t\t\tprintf(\"%lld\\n\", query(1, l, r).v4);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint ax, bx, ay, by, w;\n\t\t\tscanf(\"%d%d%d%d%d\", &ay, &ax, &by, &bx, &w);\n\t\t\tif(ax == bx)\n\t\t\t{\n\t\t\t\tz[ax] = w;\n\t\t\t\tmodify(1, ax);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(ax > bx) ax = bx;\n\t\t\t\tif(ay == 1) x[ax] = w;\n\t\t\t\telse y[ax] = w;\n\t\t\t\tmodify(1, ax);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1683096089,
        "uid": 636142,
        "name": "liyixi_i",
        "ccfLevel": 0,
        "title": "P5618 sdoi2015 \u9053\u8def\u4fee\u5efa\u9898\u89e3"
    }
]