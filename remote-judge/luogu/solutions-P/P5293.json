[
    {
        "content": "### \u9898\u610f\n\n\u6709\u70b9\u957f\uff0c\u5c31\u4e0d\u653e\u4e86\u3002\n\n\n### \u524d\u8a00\n\n2019 \u5e74 4 \u6708 7 \u65e5\uff0cHNOI2019 Day 2 \u8d5b\u573a\u4e0a\uff0c\u83dc\u9e21 Karry5307 \u6253\u4e86\u8fd9\u9898\u7684 50 \u5206\u90e8\u5206\u5206\u505a\u6cd5\uff0c\u53ef\u662f\u4e0b\u5348\u51fa\u6210\u7ee9\u7684\u65f6\u5019\u53d1\u73b0\u672c\u9898 boom 0\u3002\n\n2019 \u5e74 7 \u6708\uff0c\u83dc\u9e21 Karry5307 \u770b\u5230\u4e86 memset0 \u7684\u9898\u89e3\uff0c\u4f46\u662f\u7531\u4e8e\u592a\u83dc\uff0c\u5e76\u6ca1\u6709\u770b\u61c2\u3002\n\n2019 \u5e74 10 \u6708\uff0c\u83dc\u9e21 Karry5307 \u5b66\u4e60\u4e86\u5355\u4f4d\u6839\u53cd\u6f14\uff0c\u53ef\u662f\u5e76\u6ca1\u6709\u5b66\u51fa\u4ec0\u4e48\u6240\u4ee5\u7136\u3002\n\n2019 \u5e74 11 \u6708\uff0c\u83dc\u9e21 Karry5307 \u5b66\u4e60\u4e86 MTT\uff0c\u7b2c\u4e00\u6b21\u5931\u8d25\u4e86\uff0c\u4f46\u662f\u6700\u7ec8\u8fd8\u662f\u6210\u529f\u7684\u901a\u8fc7\u4e86 Luogu \u7684\u6a21\u677f\u9898\u3002\n\n2020 \u5e74 1 \u6708 21 \u65e5\uff0c\u83dc\u9e21 Karry5307 \u6210\u529f AC CF1286F\uff0c\u591a\u9879\u5f0f 16 \u9898\u53ea\u5269\u4e0b CF 901E \u4e86\uff0c\u4f46\u662f CF901E \u7531\u4e8e\u9700\u8981\u7528\u5230 Bluestein's Algorithm\uff0c\u6240\u4ee5\u4ed6\u653e\u5f03\u4e86\u3002\n\n2020 \u5e74 2 \u6708 27 \u65e5\uff0c\u83dc\u9e21 Karry5307 \u770b\u5230\u795e\u4ed9 x\u4e49x \u8ba8\u8bba\u6027\u80fd\u4f18\u5316\u90a3\u9898\uff0c\u53d1\u73b0 x\u4e49x \u4f1a Bluestein's Algorithm \u800c\u81ea\u5df1\u4e0d\u4f1a\u3002\n\n2020 \u5e74 3 \u6708 2 \u65e5\uff0c\u83dc\u9e21 Karry5307 \u6700\u7ec8\u8fd8\u662f\u5b66\u4e60\u4e86 Bluestein's Algorithm\uff0c\u5e76\u4e14\u5728 30min \u5207\u6389\u6b64\u9898\u3002\n\n\u4e00\u5e74\u524d\u6211\u5728 HNOI2019 \u7684\u8d5b\u573a\u4e0a\uff0c\u6298\u621f\u6c89\u6c99\u3002\u4e00\u5e74\u540e\uff0c\u6211\u4ece\u5012\u4e0b\u7684\u5730\u65b9\u722c\u8d77\u3002\n\n\u6211\u6210\u529f\u4e86\u3002\u6211\u4e0d\u518d\u662f\u4ee5\u524d\u7684\u90a3\u4e2a\u6211\u4e86\u3002\n\n### \u9898\u89e3\n\n\u9996\u5148\u6765\u770b\u4e00\u4e2a\u5f88\u50bb\u903c\u7684 $\\texttt{dp}$\u3002\n\n\u8003\u8651 $f_{i,j}$ \u8868\u793a\u8d70 $i$ \u6b65\u5230\u7b2c $j$ \u884c\u7684**\u4efb\u610f\u5408\u6cd5\u4f4d\u7f6e**\u7684\u65b9\u6848\u6570\uff0c$g_{i,j}$ \u8868\u793a\u8d70 $i$ \u6b65\u5230\u7b2c $j$ **\u884c**\u7684\u65b9\u6848\u6570\uff08\u6ce8\u610f\u8fd9\u91cc\u5e76\u6ca1\u6709\u94a6\u5b9a\u5728\u54ea\u4e2a\u4f4d\u7f6e\u4e0a\uff09\u3002\n\n\u8f6c\u79fb\u6bd4\u8f83\u663e\u7136\uff0c\u679a\u4e3e\u4e00\u4e0b\u4e0a\u4e00\u6b21\u5728\u54ea\u4e00\u884c\uff0c\u6709\n\n$$g_{i,j}=\\sum\\limits_{k=1}^{n}g_{i-1,k}w_{k,j}$$\n\n\u7136\u540e\u6ce8\u610f\u5230\u884c\u6570\u6bd4\u8f83\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u77e9\u9635\u4f18\u5316\u3002\n\n\u4e00\u5f00\u59cb\u521d\u59cb\u77e9\u9635\u662f $G_0=\\begin{pmatrix}1&0&0\\end{pmatrix}$\uff08\u76f8\u5f53\u4e8e\u767d\u5154\u5728\u7b2c\u4e00\u884c\uff09\uff0c\u8f6c\u79fb\u77e9\u9635\u662f\n\n$$S=\\begin{pmatrix}w_{1,1}&\\cdots&w_{1,n}\\\\\\vdots&\\ddots&\\vdots\\\\w_{n,1}&\\cdots&w_{n,n}\\end{pmatrix}$$\n\n\u6240\u4ee5 $G_i=\\begin{pmatrix}g_{i,1}&\\cdots&g_{i,n}\\end{pmatrix}=G_0S^i$\u3002\n\n\u90a3\u4e48 $f_{i,j}$ \u7b49\u4ef7\u4e8e\u767d\u5154\u5728 $1$ \u5230 $L$ \u4e2d\u9009\u62e9 $i$ \u4e2a\u7ecf\u8fc7\u70b9\u8fdb\u884c\u8df3\u821e\uff0c\u6240\u4ee5\u6709\n\n$$f_{i,j}=\\binom{L}{i}g_{i,j}$$\n\n\u6240\u4ee5\u6211\u4eec\u8981\u6c42\u7684\u662f\n\n$$ans_t=\\sum\\limits_{i=1}^{L}[i\\bmod k=t]f_{i,y}$$\n\n\u53d1\u73b0\u8fd9\u4e2a\u4e0d\u592a\u597d\u641e\u5b9a\uff0c\u6240\u4ee5\u79fb\u9879\u3002\n\n$$ans_t=\\sum\\limits_{i=1}^{L}[k\\mid (i-t)]f_{i,y}$$\n\n\u7136\u540e\u5c31\u662f\u5957\u8def\u5355\u4f4d\u6839\u53cd\u6f14\u3002\n\n$$ans_t=\\sum\\limits_{i=1}^{L}\\frac{f_{i,y}}{k}\\sum\\limits_{j=0}^{k-1}\\omega_{k}^{(i-t)j}$$\n\n\u7136\u540e\u628a $k$ \u63d0\u51fa\u6765\uff0c\u5355\u4f4d\u6839\u7684\u62ec\u53f7\u62c6\u6389\uff0c\u6709\n\n$$ans_t=\\frac{1}{k}\\sum\\limits_{i=1}^{L}f_{i,y}\\sum\\limits_{j=0}^{k-1}\\omega_{k}^{ij}\\omega_{k}^{-tj}$$\n\n\u4ea4\u6362\u4e00\u4e0b\u6c42\u548c\u7b26\u53f7\u5c31\u53ef\u4ee5\u628a\u5355\u4f4d\u6839\u63d0\u51fa\u6765\u4e86\uff0c\u987a\u4fbf\u628a\u4e4b\u524d\u7684 $\\texttt{dp}$ \u5f0f\u5b50\u4ee3\u8fdb\u6765\u6240\u4ee5\n\n$$ans_t=\\frac{1}{k}\\sum\\limits_{j=0}^{k-1}\\omega_{k}^{-tj}\\sum\\limits_{i=1}^{L}\\binom{L}{i}g_{i,y}\\omega_{k}^{ij}$$\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8981\u6c42\n\n$$R_t=\\frac{1}{k}\\sum\\limits_{j=0}^{k-1}\\omega_{k}^{-tj}\\sum\\limits_{i=1}^{L}\\binom{L}{i}G_0S^i\\omega_{k}^{ij}$$\n\n\u7684\u7b2c $y$ \u9879\uff0c\u4e5f\u5373\n\n$$R_t=\\frac{1}{k}\\sum\\limits_{j=0}^{k-1}\\omega_{k}^{-tj}G_0\\sum\\limits_{i=1}^{L}\\binom{L}{i}S^i\\omega_{k}^{ij}$$\n\n\u7136\u540e\u53d1\u73b0\u662f\u4e2a\u4e8c\u9879\u5f0f\u5b9a\u7406\u3002\u66f4\u52a0\u5f62\u5f0f\u5316\u7684\u6765\u8bb2\uff0c\u662f\u8fd9\u6837\u7684\n\n$$R_t=\\frac{1}{k}\\sum\\limits_{j=0}^{k-1}\\omega_{k}^{-tj}G_0\\sum\\limits_{i=1}^{L}\\binom{L}{i}(\\omega_{k}^{j}S)^i$$\n\n\u6240\u4ee5\n\n$$R_t=\\frac{1}{k}\\sum\\limits_{j=0}^{k-1}\\omega_{k}^{-tj}G_0(\\omega_{k}^{j}S+I)^L$$\n\n\u540e\u9762\u8fd9\u4e00\u5768\u53ef\u4ee5\u77e9\u9635\u5feb\u901f\u5e42\u3002\n\n\u8bbe $h_{j}=G_0(\\omega_{k}^{j}S+I)^L$ \u7684\u7b2c $y$ \u9879\uff0c\u90a3\u4e48\n\n$$ans_t=\\frac{1}{k}\\sum\\limits_{j=0}^{k-1}\\omega_{k}^{-tj}h_{j}$$\n\n\u5982\u679c\u719f\u6089\u4efb\u610f\u957f\u5ea6\u5faa\u73af\u5377\u79ef\u7684\u5957\u8def\u7684\u8bdd\u53ef\u4ee5\u8003\u8651 $\\texttt{Bluestein's Algorithm}$\u3002\n\n\u4f46\u662f\u5982\u679c\u628a $ij$ \u62c6\u6210 $\\frac{(i+j)^2}{2}-\\frac{j^2}{2}-\\frac{j^2}{2}$ \u7684\u8bdd\u4f1a\u51fa\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u5728\u6a21\u610f\u4e49\u4e0b\u6ca1\u6709\u4e8c\u6b21\u5269\u4f59\u3002\n\n\u6240\u4ee5\u8003\u8651\u628a $ij$ \u62c6\u6210 $\\binom{i+j}{2}-\\binom{i}{2}-\\binom{j}{2}$\u3002\n\n\u6bd4\u8f83\u663e\u7136\uff0c\u62c6\u5f00\u5c31\u53ef\u4ee5\u4e86\uff0c\u6240\u4ee5\u6709\n\n$$ans_t=\\frac{1}{k}\\sum\\limits_{j=0}^{k-1}\\omega_{k}^{-\\binom{t+j}{2}+\\binom{t}{2}+\\binom{j}{2}}h_{j}$$\n\n\u628a\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u4e1c\u897f\u63d0\u5230\u5916\u9762\u53bb\n\n$$ans_t=\\frac{\\omega_{k}^{\\binom{t}{2}}}{k}\\sum\\limits_{j=0}^{k-1}h_j\\omega_{k}^{\\binom{j}{2}}\\omega_k^{-\\binom{t+j}{2}}$$\n\n\u7136\u540e\u8bbe $f_j=h_j\\omega_{k}^{\\binom{j}{2}},g_j=\\omega_k^{-\\binom{t+j}{2}}$\uff0c\u6709\n\n$$ans_t=\\frac{\\omega_{k}^{\\binom{t}{2}}}{k}\\sum\\limits_{j=0}^{k-1}f_jg_{j+t}$$\n\n\u8fd9\u4e2a\u968f\u4fbf\u641e\u641e\u5c31\u53ef\u4ee5\u4e86\uff0c\u53ef\u4ee5\u500d\u957f\u4e5f\u53ef\u4ee5\u5148 reverse \u4e00\u4e0b\u5377\u5b8c reverse \u56de\u6765\uff0c\u6211\u8fd9\u91cc\u662f\u500d\u957f\u505a\u7684\u3002\n\n\u6ce8\u610f\u5230\uff0c\u5728\u6a21\u610f\u4e49\u4e0b\u7684\u5355\u4f4d\u6839\u662f\u539f\u6839\uff0c\u6240\u4ee5\u8981\u5148\u6c42\u51fa\u539f\u6839\uff0c\u6700\u540e MTT \u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long int ll;\ntypedef long double db;\nconst ll MAXN=524291;\nconst db PI=acos(-1);\nstruct Complex{\n\tdb re,im;\n\tComplex(db x=0,db y=0)\n\t{\n\t\tthis->re=x,this->im=y;\n\t}\n\tinline Complex conj()\n\t{\n\t\treturn Complex(re,-im);\n\t}\n};\nstruct Matrix{\n\tll num[5][5];\n\tMatrix()\n\t{\n\t\tmemset(num,0,sizeof(num));\n\t}\n\tinline ll* operator [](const ll &x)\n\t{\n\t\treturn num[x];\n\t}\n\tinline const ll* operator [](const ll &x)const\n\t{\n\t\treturn num[x];\n\t}\n};\nMatrix p,m;\nll n,kk,l,x,y,md,g,cnt,limit,zkdxl;\nll w[5][5];\nll rev[MAXN],pw[MAXN],f[MAXN],gg[MAXN],h[MAXN];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n} \ninline ll qpow(ll base,ll exponent,ll md)\n{\n\tll res=1;\n\twhile(exponent)\n\t{\n\t\tif(exponent&1)\n\t\t{\n\t\t\tres=res*base%md;\t\n\t\t}\t\n\t\tbase=base*base%md,exponent>>=1;\n\t}\t\n\treturn res;\n} \ninline Complex operator +(Complex x,Complex y)\n{\n\treturn Complex(x.re+y.re,x.im+y.im);\n}\ninline Complex operator -(Complex x,Complex y)\n{\n\treturn Complex(x.re-y.re,x.im-y.im);\n}\ninline Complex operator *(Complex x,Complex y)\n{\n\treturn Complex(x.re*y.re-x.im*y.im,x.re*y.im+x.im*y.re);\n}\ninline Complex operator /(Complex x,db y)\n{\n\treturn Complex(x.re/y,x.im/y);\n}\ninline Matrix id()\n{\n\tMatrix res;\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tres[i][i]=1;\n\t}\n\treturn res;\n}\ninline Matrix operator *(Matrix x,Matrix y)\n{\n\tMatrix res;\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tfor(register int j=1;j<=n;j++)\n\t\t{\n\t\t\tfor(register int k=1;k<=n;k++)\n\t\t\t{\n\t\t\t\tres[i][j]=(res[i][j]+x[i][k]*y[k][j]%md)%md;\n\t\t\t}\n\t\t}\n\t}\n\treturn res;\n}\ninline Matrix qpow(Matrix base,ll exponent)\n{\n\tMatrix res=id();\n\twhile(exponent)\n\t{\n\t\tif(exponent&1)\n\t\t{\n\t\t\tres=res*base;\n\t\t}\n\t\tbase=base*base,exponent>>=1;\n\t}\n\treturn res;\n}\ninline ll getG(ll x)\n{\n\tstatic ll q[10051];\n\tll top=0,flg=1;\n\tfor(register int i=2;i<=sqrt(x-1);i++)\n\t{\n\t\tif((x-1)%i==0)\n\t\t{\n\t\t\tq[++top]=i;\n\t\t\tif(i*i!=x-1)\n\t\t\t{\n\t\t\t\tq[++top]=(x-1)/i;\n\t\t\t}\n\t\t}\n\t}\t\n\tfor(register int i=2;;i++)\n\t{\n\t\tflg=1;\n\t\tfor(register int j=1;j<=top;j++)\n\t\t{\n\t\t\tif(qpow(i,q[j],x)==1)\n\t\t\t{\n\t\t\t\tflg=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flg)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\ninline void calcP(ll x)\n{\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tfor(register int j=1;j<=n;j++)\n\t\t{\n\t\t\tp[i][j]=w[i][j]*x%md;\n\t\t}\n\t\tp[i][i]++;\n\t}\n}\ninline ll comb(ll x)\n{\n\treturn x<=1?0:(x-1)*x/2;\n}\ninline void FFT(Complex *cp,ll cnt,ll inv)\n{\n\tll cur=0;\n\tComplex res,omg;\n\tfor(register int i=0;i<cnt;i++)\n\t{\n\t\tif(i<rev[i])\n\t\t{\n\t\t\tswap(cp[i],cp[rev[i]]);\n\t\t}\n\t}\n\tfor(register int i=2;i<=cnt;i<<=1)\n\t{\n\t\tcur=i>>1,res=Complex(cos(2*PI/i),inv*sin(2*PI/i));\n\t\tfor(register Complex *p=cp;p!=cp+cnt;p+=i)\n\t\t{\n\t\t\tomg=Complex(1,0);\n\t\t\tfor(register int j=0;j<cur;j++)\n\t\t\t{\n\t\t\t\tComplex t=omg*p[j+cur],t2=p[j];\n\t\t\t\tp[j+cur]=t2-t,p[j]=t+t2;\n\t\t\t\tomg=omg*res;\n\t\t\t}\n\t\t}\n\t}\n\tif(inv==-1)\n\t{\n\t\tfor(register int i=0;i<cnt;i++)\n\t\t{\n\t\t\tcp[i]=cp[i]/cnt;\n\t\t}\n\t}\n}\ninline void conv(ll cnt,ll *f,ll *g,ll *res)\n{\n\tComplex p,q,r,s;\n\tll t;\n\tll t0,t1,t2,t3;\n\tstatic Complex tmpf[MAXN],tmpg[MAXN],p0[MAXN],p1[MAXN],p2[MAXN],p3[MAXN];\n\tfor(register int i=0;i<cnt;i++)\n\t{\n\t\ttmpf[i]=Complex(f[i]&32767,f[i]>>15);\n\t\ttmpg[i]=Complex(g[i]&32767,g[i]>>15);\n\t}\n\tFFT(tmpf,cnt,1),FFT(tmpg,cnt,1);\n\tfor(register int i=0;i<cnt;i++)\n\t{\n\t\tt=(cnt-i)&(cnt-1);\n\t\tp=(tmpf[i]+tmpf[t].conj())*Complex(0.5,0);\n\t\tq=(tmpf[i]-tmpf[t].conj())*Complex(0,-0.5);\n\t\tr=(tmpg[i]+tmpg[t].conj())*Complex(0.5,0);\n\t\ts=(tmpg[i]-tmpg[t].conj())*Complex(0,-0.5);\n\t\tp0[i]=p*r,p1[i]=p*s,p2[i]=q*r,p3[i]=q*s;\n\t}\n\tfor(register int i=0;i<cnt;i++)\n\t{\n\t\ttmpf[i]=p0[i]+p1[i]*Complex(0,1);\n\t\ttmpg[i]=p2[i]+p3[i]*Complex(0,1);\n\t}\n\tFFT(tmpf,cnt,-1),FFT(tmpg,cnt,-1);\n\tfor(register int i=0;i<cnt;i++)\n\t{\n\t\tt0=(ll)(tmpf[i].re+0.5)%md,t1=(ll)(tmpf[i].im+0.5)%md;\n\t\tt2=(ll)(tmpg[i].re+0.5)%md,t3=(ll)(tmpg[i].im+0.5)%md;\n\t\tres[i]=(t0+(t1+t2)*32768%md+t3*1073741824ll%md)%md;\n\t}\n}\nint main()\n{\n\tn=read(),kk=read(),l=read(),x=read(),y=read(),md=read();\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tfor(register int j=1;j<=n;j++)\n\t\t{\n\t\t\tw[i][j]=read();\n\t\t}\n\t}\n\tg=qpow(getG(md),(md-1)/kk,md),pw[0]=1;\n\tfor(register int i=1;i<kk;i++)\n\t{\n\t\tpw[i]=pw[i-1]*g%md;\n\t}\n\tfor(register int i=0,omg=1;i<kk;i++,omg=omg*g%md)\n\t{\n\t\tcalcP(omg),p=qpow(p,l),gg[i]=p[x][y]*pw[comb(i)%kk]%md;\n\t}\n\tfor(register int i=0;i<=(kk<<1);i++)\n\t{\n\t\tf[i]=pw[(kk-comb(i)%kk)%kk];\n\t}\n\treverse(f,f+((kk<<1)|1)),cnt=1,limit=-1;\n\twhile(cnt<=((kk<<1)+kk+1))\n\t{\n\t\tcnt<<=1,limit++;\n\t}\n\tfor(register int i=0;i<cnt;i++)\n\t{\n\t\trev[i]=(rev[i>>1]>>1)|((i&1)<<limit);\n\t}\n\tconv(cnt,f,gg,h),zkdxl=qpow(kk,md-2,md);\n\tfor(register int i=0;i<kk;i++)\n\t{\n\t\tprintf(\"%lld\\n\",h[(kk<<1)-i]*zkdxl%md*pw[comb(i)%kk]%md);\n\t}\n}\n```",
        "postTime": 1583124211,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5293 \u3010[HNOI2019]\u767d\u5154\u4e4b\u821e\u3011"
    },
    {
        "content": "upd : \u628a\u6240\u6709 `C` \u7684\u7b26\u53f7\u6362\u6210\u4e86 `binom`\n\n## \u849f\u84bb\u8bed\n\u8fd9\u662f\u849f\u84bb\u7684\u7b2c $500$ \u9053 AC, \u7b2c $30$ \u9053\u9ed1\u9898, \u5199\u7bc7\u9898\u89e3\u796d\u4e00\u4e0b qwq\n\n\u5f00\u59cb\u5168 T \u4ee5\u4e3a\u662f\u81ea\u5df1\u6253\u6302\u4e86\uff0c \u7ed3\u679c\u5f00\u4e86 O2 \u5c31 AC \u4e86qwq\n## \u849f\u84bb\u89e3\n\u5047\u8bbe\u767d\u5154\u8df3\u4e86 $i$ \u6b21\u3002\n\n\u90a3\u4e48\u5982\u679c\u679a\u4e3e\u9009\u62e9\u8fd9 $i$ \u4e2a\u70b9\u8df3\u8fd9 $i$ \u6b21\u6709\u591a\u5c11\u9009\u62e9 $x$ \u5750\u6807\u7684\u65b9\u6848(\u767d\u5154\u6bcf\u4e00\u4e2a\u70b9\u5750\u6807\u4e3a $(x, y)$ )\u3002\n\n\u663e\u7136\u662f\u4ece $L$ \u4e2a\u4e2d\u9009\u62e9 $i$ \u4e2a\uff0c \u5c31\u662f $\\binom{L}{i}$\n\n\u5982\u679c\u8981\u6c42\u767d\u5154\u8df3\u4e86 $i$ \u6b21\u6709\u591a\u5c11 $(x, y)$ \u7684\u65b9\u6848\u6570 $f_i$\u3002\n\n\u800c $x, y$ \u662f\u4e92\u76f8\u4e0d\u5f71\u54cd\u7684, \u90a3\u4e48\u73b0\u5728\u53ea\u8981\u7b97\u8df3 $i$ \u6b21\u65f6\u8fd9 $i$ \u4e2a $y$ \u7684\u65b9\u6848\u4e2a\u6570\u4e86\u3002\n\n\u90a3\u4e48\u8003\u8651 $dp[i][y]$ \u8868\u793a\u9009\u62e9 $i$ \u4e2a\u70b9\u4e2d\u9009\u62e9 $y$ \u5750\u6807\u7684\u65b9\u6848\u4e2a\u6570\u3002\n\n$dp[i][j] = \\sum\\limits_{k=1}^{n} dp[i-1][k] * w[k][j]$\n\n\u663e\u7136\u7528\u77e9\u9635\u4f18\u5316\n\n\u73b0\u5728\u5b9a\u4e49 $W$ \u662f\u8f6c\u79fb\u77e9\u9635, \u53ef\u4ee5\u76f4\u63a5\u7528\u9898\u76ee\u4e2d\u7684 $w$\u3002\n\n$dp[i][y] = G * W^i$ \u7684\u7b2c $y$ \u9879\n\n\u90a3\u4e48 $f_i = \\binom{L}{i} * dp[i][y]$\n\n$$ans_t = \\sum\\limits_{i = 0}^L [i \\ mod \\ k = t] f_i$$\n\n$$= \\sum\\limits_{i=0}^L [k | (i - t)] f_i$$\n\n$$= \\sum\\limits_{i=0}^L f_i \\frac{1}{k} \\sum\\limits_{j = 0}^{k-1} \\omega_k^{j(i-t)}$$\n\n$$= \\frac{1}{k} \\sum\\limits_{i=0}^L f_i \\sum\\limits_{j = 0}^{k-1}(\\omega_k^{-it} \\omega_k^{ij})$$\n\n$$= \\frac{1}{k} \\sum\\limits_{j = 0}^{k-1}\\omega_k^{-jt} \\sum\\limits_{i=0}^L \\omega_{k}^{ij} f_i$$\n\n$$= \\frac{1}{k} \\sum\\limits_{j = 0}^{k-1}\\omega_k^{-jt} \\sum\\limits_{i=0}^L \\omega_{k}^{ij} \\binom{L}{i} * G * W^i \\ \\ \\text{\u7684\u7b2c $y$ \u9879}$$ \n\n$$= \\frac{1}{k} \\sum\\limits_{j = 0}^{k-1} G * \\omega_k^{-jt} \\sum\\limits_{i=0}^L (\\omega_{k}^{j})^i \\binom{L}{i} *   W^i \\ \\ \\text{\u7684\u7b2c $y$ \u9879}$$ \n\n\n$$= \\frac{1}{k} \\sum\\limits_{j = 0}^{k-1} G * \\omega_k^{-jt}(\\omega_{k}^{j} W+I)^L \\ \\ \\text{\u7684\u7b2c $y$ \u9879}$$ \n\n\u8bbe $h_i = G(\\omega_{k}^{j} W+I)^L  \\ \\ \\text{\u7684\u7b2c y  \u9879}$\n\n$$ans_t = \\frac{1}{k} \\sum\\limits_{i = 0}^{k-1} \\omega_k^{-it} h_i$$\n\n\n\u56e0\u4e3a $it = \\binom{i+t}{2} - \\binom{i}{2} - \\binom{t}{2}$\n\n$$ans_t = \\frac{1}{k} \\sum\\limits_{i = 0}^{k-1} \\omega_k^{- \\binom{i+t}{2} + \\binom{i}{2} + \\binom{t}{2}} h_i$$\n\n$$ans_t = \\frac{1}{k} \\sum\\limits_{i = 0}^{k-1} \\omega_k^{-\\binom{i+t}{2}} \\omega_{k}^{\\binom{t}{2}}\\omega_k^{\\binom{i}{2}} h_i$$\n\n$$ans_t = \\frac{\\omega_k^{\\binom{t}{2}}}{k}\\sum\\limits_{i = 0}^{k-1} \\omega_k^{-\\binom{i + t}{2}} \\omega_k^{\\binom{i}{2}} h_i$$\n\n\u8bbe $F(i) = \\frac{\\omega_k^{\\binom{i}{2}}}{k}$, $P(i) = \\omega_k^{\\binom{i}{2}} h_i, S(i) = \\omega_k^{-\\binom{i}{2}}$\n\n$$ans_t = F(t) \\sum\\limits_{i = 0}^{k - 1}P(i)S(i + t)$$\n\n\u63a5\u4e0b\u6765\u662f $reverse$ \u4e00\u4e0b $S, ans \\ \\ (S, ans\\text{\u957f\u5ea6\u4e3a}2k)$\n\n$$ans_{2k - t - 1} = F(t) \\sum\\limits_{i=0}^{k-1} P(i)S(2k - 1 - i - t)$$\n\n$$ans_t = F(2k - t - 1) \\sum\\limits_{i=0}^{k-1} P(i) S(t - i)$$\n\n\u7531\u4e8e $t > k - 1$, \u6240\u4ee5:\n\n$$ans_t = F(2k - t - 1) \\sum\\limits_{i=0}^{t} P(i) S(t - i)$$\n\n\u76f4\u63a5 $\\tt MTT$ \u5377\u5c31\u597d\u4e86\n\n## \u849f\u84bb\u7801\n```cpp\n#include<bits/stdc++.h>\n#define db long double\n#define N 800010\n#define ll long long\nusing namespace std;\nint n, k, L, x, y, mod, pp[N];\nstruct CP {\n\tdb x, y;\n\tCP (db xx = 0, db yy = 0) {\n\t\tx = xx, y = yy;\n\t}\n};\nint fac[123], cnt, omg, omk;\nvoid getfac(int x) {\n\tfor(int i = 2; i <= sqrt(x); i++) \n\t\tif(x % i == 0) {\n\t\t\tfac[++cnt] = i;\n\t\t\twhile(x % i == 0) x /= i;\n\t\t}\n}\nint qpow(int x, int y, int pmod) {\n\tint res = 1;\n\tif(x == 0) return 0;\n\tfor(; y; x = 1ll * x * x % pmod, y >>= 1) if(y & 1) res = 1ll * res * x % pmod;\n\treturn res;\n}\nbool cheak(int x) {\n\tfor(int i = 1; i <= cnt; i++) \n\t\tif(qpow(x, (mod - 1) / fac[i], mod) == 1) return 0;\n\treturn 1;\n}\nvoid find() {\n\tgetfac(mod - 1);\n\tfor(int i = 2; i < mod; i++) \n\t\tif(cheak(i)) {\n\t\t\tomg = i;\n\t\t\treturn;\n\t\t} \n}\ndb pi = acos(-1);\nCP operator + (CP aa, CP bb) {\n\treturn CP(aa.x + bb.x, aa.y + bb.y);\n}\nCP operator - (CP aa, CP bb) {\n\treturn CP(aa.x - bb.x, aa.y - bb.y);\n}\nCP operator * (CP aa, CP bb) {\n\treturn CP(aa.x * bb.x - aa.y * bb.y, aa.x * bb.y + aa.y * bb.x);\n}\nCP operator / (CP aa, db bb) {\n\treturn CP(aa.x / bb, aa.y / bb);\n}\nstruct Matrix {\n\tint a[4][4];\n} S;\nMatrix operator * (Matrix aa, Matrix bb) {\n\tMatrix res;\n\tfor(int i = 1; i <= n; i++) for(int j = 1; j <= n; j++) res.a[i][j] = 0;\n\tfor(int i = 1; i <= n; i++) \n\t\tfor(int j = 1; j <= n; j++) \n\t\t\tfor(int k = 1; k <= n; k++) \n\t\t\t\t(res.a[i][j] += 1ll * aa.a[i][k] * bb.a[k][j] % mod) %= mod;\n\treturn res;\n}\nMatrix operator * (Matrix aa, int bb) {\n\tMatrix res;\n\tfor(int i = 1; i <= n; i++) \n\t\tfor(int j = 1; j <= n; j++) \n\t\t\tres.a[i][j] = 1ll * aa.a[i][j] * bb % mod;\n\treturn res;\n}\nMatrix ps(Matrix aa) {\n\tMatrix res;\n\tfor(int i = 1; i <= n; i++) \n\t\tfor(int j = 1; j <= n; j++) \n\t\t\tres.a[i][j] = (aa.a[i][j] + (i == j)) % mod;\n\treturn res;\n}\nMatrix operator ^ (Matrix aa, int bb) {\n\tMatrix res;\n\tfor(int i = 1; i <= n; i++) for(int j = 1; j <= n; j++) res.a[i][j] = 0;\n\tfor(int i = 1; i <= n; i++) res.a[i][i] = 1;\n\tfor(; bb; aa = aa * aa, bb >>= 1) if(bb & 1) res = res * aa;\n\treturn res;\n}\nvoid FFT(CP *f, int len, int flag) {\n\tfor(int i = 0; i < len; i++) if(pp[i] < i) swap(f[pp[i]], f[i]);\n\tfor(int i = 2; i <= len; i <<= 1) {\n\t\tint FL = (i >> 1);\n\t\tCP ch(cos(2 * pi / i), flag * sin(2 * pi / i));\n\t\tfor(int j = 0; j < len; j += i) {\n\t\t\tCP now(1, 0);\n\t\t\tfor(int k = j; k < j + FL; k++) {\n\t\t\t\tCP Ga = f[k], Gb = f[k + FL] * now;\n\t\t\t\tf[k] = Ga + Gb, f[k + FL] = Ga - Gb, now = now * ch;\n\t\t\t}\n\t\t}\n\t}\n\tif(flag == -1) for(int i = 0; i < len; i++) f[i].x = f[i].x / len;\n}\nCP fa[N], fb[N], ga[N], gb[N], ssB[N], sB[N], B[N];\nvoid MTT(int *a, int *b, int *c, int len) {\n\tint flen;\n\tfor(flen = 1; flen <= len * 2; flen <<= 1);\n\tfor(int i = 0; i < flen; i++) pp[i] = ((pp[i >> 1] >> 1) | ((i & 1) * (flen >> 1)));\n\tfor(int i = 0; i < flen; i++) fa[i].x = (a[i] >> 15), fb[i].x = (a[i] & 32767);\n\tfor(int i = 0; i < flen; i++) ga[i].x = (b[i] >> 15), gb[i].x = (b[i] & 32767);\n\tFFT(fa, flen, 1), FFT(fb, flen, 1), FFT(ga, flen, 1), FFT(gb, flen, 1);\n\tfor(int i = 0; i < flen; i++) {\n\t\tssB[i] = fa[i] * ga[i];\n\t\tsB[i] = (fa[i] * gb[i]) + (fb[i] * ga[i]);\n\t\tB[i] = fb[i] * gb[i];\n\t}\n\tFFT(ssB, flen, -1), FFT(sB, flen, -1), FFT(B, flen, -1);\n\tfor(int i = 0; i < flen; i++) {\n\t\tll dssB = (ll)(ssB[i].x + 0.49) % mod;\n\t\tll dsB = (ll)(sB[i].x + 0.49) % mod;\n\t\tll dB = (ll)(B[i].x + 0.49) % mod;\n\t\tc[i] = (0ll + (dssB << 30) % mod + (dsB << 15) % mod + dB) % mod;\n\t}\n}\nint C(int x) {\n\treturn 1ll * x * (x - 1) / 2 % (mod - 1); \n}\nint h[N], F[N], P[N], s[N], ans[N];\nvoid init() {\n\tomk = qpow(omg, (mod - 1) / k, mod);\n\tint nyk = qpow(k, mod - 2, mod);\n\tfor(int i = 0; i < k; i++) {\n\t\th[i] = (ps((S * qpow(omk, i, mod))) ^ L).a[x][y];\n\t\tP[i] = 1ll * qpow(omk, C(i), mod) * h[i] % mod;\n\t}\n\tk <<= 1;\n\tfor(int i = 0; i < k; i++) {\n\t\tF[i] = 1ll * qpow(omk, C(i), mod) * nyk % mod;\n\t\ts[i] = qpow(omk, mod - 1 - C(i), mod);\n\t}\n\treverse(s, s + k);\n\tMTT(P, s, ans, k);\n\t// for(int t = 0; t < k; t++) \n\t\t// for(int i = 0; i <= t; i++) \n\t\t\t// (ans[t] += 1ll * P[i] * s[t - i] % mod) %= mod;\n\treverse(ans, ans + k);\n\tfor(int i = 0; i < (k >> 1); i++) ans[i] = 1ll * ans[i] * F[i] % mod, printf(\"%d\\n\", ans[i]);\n}\nint main() {\n\tscanf(\"%d%d%d%d%d%d\", &n, &k, &L, &x, &y, &mod), find();\n\tfor(int i = 1; i <= n; i++) \n\t\tfor(int j = 1; j <= n; j++) \n\t\t\tscanf(\"%d\", &S.a[i][j]);\n\tinit();\n\treturn 0;\n}\n```",
        "postTime": 1599217781,
        "uid": 173660,
        "name": "zhoukangyang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5293 \u3010[HNOI2019]\u767d\u5154\u4e4b\u821e\u3011"
    },
    {
        "content": "\u516c\u5f0f\u6e32\u67d3\u53ef\u80fd\u4f1a\u6709\u95ee\u9898\uff0c\u8bf7\u5728\u535a\u5ba2\u4e2d\u67e5\u770b\n\n\u5f88\u663e\u7136\uff0c\u8bbe\u7b54\u6848\u5e8f\u5217\u4e3a $a$ \u5219\u6709\n\n$$\na_t=\\sum_{i=0}^L\\binom{L}{i}w^i_{x,y}[i\\operatorname{mod}k=t]\n$$\n\n\u7531\u5355\u4f4d\u6839\u53cd\u6f14\n\n$$\n[n|k]=\\frac{1}{n}\\sum_{i=0}^{n-1}\\omega_n^{ki}\n$$\n\n\u5e26\u5165\u7b54\u6848\u5f0f\u5b50\u5c31\u6709\n\n$$\na_t=\\sum_{i=0}^L\\binom{L}{i}w_{x,y}^i\\frac{1}{k}\\sum_{j=0}^{k-1}\\omega_k^{(i-t)j}\n$$\n\n\u6211\u4eec\u4ea4\u6362\u6c42\u548c\u987a\u5e8f\n\n$$\na_t=\\frac{1}{k}\\sum_{j=0}^{k-1}\\omega_k^{-tj}\\sum_{i=0}^L\\binom{L}{i}w_{x,y}^i\\omega_k^{ij}\n$$\n\n\u540e\u9762\u7684\u90e8\u5206\u7528\u4e8c\u9879\u5f0f\u5b9a\u7406\u5f97\n\n$$\na_t=\\frac{1}{k}\\sum_{j=0}^{k-1}\\omega_k^{-tj}(\\omega_k^jw+e)^L_{x,y}\n$$\n\n\u6211\u4eec\u8003\u8651\u591a\u9879\u5f0f\n\n$$\nf(x)=\\frac{1}{k}\\sum_{j=0}^{k-1}x^j(\\omega_k^jw+e)^L_{x,y}\n$$\n\n\u90a3\u4e48\u6709\n\n$$\na_t=f(\\omega_k^{-t})\n$$\n\n\u5355\u4f4d\u6839\u7684\u6c42\u503c\u53ef\u4ee5\u7528 `FFT` \u5feb\u901f\u6c42\u51fa\uff0c\u4f46\u524d\u63d0\u662f\u5728\u9879\u6570\u4e3a $2$ \u7684\u6574\u6570\u6b21\u5e42\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6211\u4eec\u8981\u505a\u4efb\u610f\u957f\u5ea6\u7684 `DFT` \u90a3\u4e48\u5c31\u9700\u8981\u7528 `Bluestein's Algorithm` \u5177\u4f53\u7ec6\u8282\u5982\u4e0b\n\n\u8003\u8651 `DFT` \u7684\u5f62\u5f0f\n\n$$\ny_j=\\sum_{i=0}^{n-1}a_i(\\omega_n^j)^i\n$$\n\n\u6839\u636e $ij=\\binom{i+j}{2}-\\binom{i}{2}-\\binom{j}{2}$ \u53ef\u4ee5\u5f97\u5230\n\n$$\ny_j=\\omega_n^{-\\binom{j}{2}}\\sum_{i=0}^{n-1}a_i\\omega_n^{-\\binom{i}{2}}\\omega_n^{\\binom{i+j}{2}}\n$$\n\n\u5982\u679c\u8bbe\n\n$$\nf=\\sum_{i=0}^{n-1}a_i\\omega_n^{-\\binom{i}{2}}x^i\n$$\n\n$$\ng=\\sum_{i=0}^{2n-2}\\omega_n^{\\binom{2n-2-i}{2}}x^i\n$$\n\n\u5219\n\n$$\ny_j=\\omega_n^{-\\binom{j}{2}}[x^{2n-2-j}]{(f\\times g)}\n$$\n\n\u800c\u540e\u8005\u5c31\u662f\u4e00\u4e2a\u666e\u901a\u7684\u5377\u79ef\n\n\u63a5\u7740\uff0c\u6211\u4eec\u8003\u8651 `IDFT`\n\n$$\nc_j=\\frac{1}{n}\\sum_{i=0}^{n-1}a_i\\omega_n^{-ij}\n$$\n\n\u5176\u5b9e\u4e0e\u4e0a\u9762\u540c\u7406\uff0c\u53ea\u4e0d\u8fc7\u662f\u7b26\u53f7\u53d8\u4e86\u7f62\u4e86\n\n\u82e5\u6211\u4eec\u8003\u8651\u6a21 $p$ \u610f\u4e49\u4e0b\u7684\u539f\u6839 $g$\uff0c\u7528 $g^{\\frac{p-1}{k}}$ \u6765\u4ee3\u66ff $\\omega_k$ \u7684\u8bdd\uff0c\u5c31\u7528\u62c6\u7cfb\u6570 `FTT` \u5373\u53ef\n\n\u8ba1\u7b97\u4e00\u4e0b\u603b\u590d\u6742\u5ea6\u4e3a $\\operatorname{O}(\\Delta+kn^3\\log L+k\\log k)$ \u6700\u524d\u9762\u662f\u6c42\u539f\u6839\u7684\u590d\u6742\u5ea6\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cctype>\n#include <vector>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\ntypedef long long i64;\ntypedef double f64;\ninline int read(int f = 1, int x = 0, char ch = ' ')\n{\n    while(!isdigit(ch = getchar())) if(ch == '-') f = -1;\n    while(isdigit(ch)) x = x*10+ch-'0', ch = getchar();\n    return f*x;\n}\nconst int N = 3, K = 1<<18|5; const f64 PI = acos(-1);\nint n, k, kinv, L, x, y, P, gn, g[K], f[K];\nstruct Mat\n{\n    i64 A[N][N];\n    Mat() { memset(A, 0, sizeof(A)); }\n    i64* operator [] (const int i) { return A[i]; }\n    friend Mat operator * (Mat A, Mat B)\n    {\n        Mat C;\n        for(int i = 0; i < n; ++i)\n            for(int j = 0; j < n; ++j)\n                for(int k = 0; k < n; ++k)\n                    C[i][j] = (C[i][j]+A[i][k]*B[k][j]%P)%P;\n        return C;\n    }\n    friend Mat operator * (int k, Mat A)\n    {\n        for(int i = 0; i < n; ++i)\n            for(int j = 0; j < n; ++j)\n                A[i][j] = k*A[i][j]%P;\n        return A;       \n    }\n    friend Mat operator + (Mat A, Mat B)\n    {\n        for(int i = 0; i < n; ++i)\n            for(int j = 0; j < n; ++j)\n                A[i][j] = (A[i][j]+B[i][j])%P;\n        return A;\n    }\n    void set() { for(int i = 0; i < n; ++i) A[i][i] = 1; }\n    friend Mat operator ^ (Mat A, int b)\n    {\n        Mat ret; ret.set();\n        for( ; b; b >>= 1, A = A*A) if(b&1) ret = ret*A;\n        return ret;\n    }\n}w, e;\ni64 qpow(i64 a, int b) { i64 ret = 1; for( ; b; b >>= 1, a = a*a%P) if(b&1) ret = ret*a%P; return ret; }\nvoid groot()\n{\n    vector<int> p; int n = P-1;\n    for(int i = 2, t = sqrt(n); i <= n; ++i)\n        if(n%i == 0) { p.push_back(i); while(n%i == 0) n /= i; }\n    if(n != 1) p.push_back(n);\n    for(gn = 1; ; ++gn)\n    {\n        int i = 0; for( ; i < p.size()&&qpow(gn, (P-1)/p[i]) != 1; ++i);\n        if(i == p.size()) break;\n    }\n    gn = qpow(gn, (P-1)/k), g[0] = 1;\n    for(int i = 1; i < k; ++i) g[i] = 1ll*g[i-1]*gn%P;\n}\nnamespace Bluestein\n{\nstruct C\n{\n    f64 a, b;\n    C(f64 a = 0, f64 b = 0):a(a), b(b) {};\n    friend C operator + (C a, C b) { return C(a.a+b.a, a.b+b.b); }\n    friend C operator - (C a, C b) { return C(a.a-b.a, a.b-b.b); }\n    friend C operator * (C a, C b) { return C(a.a*b.a-a.b*b.b, a.a*b.b+a.b*b.a); }\n    C operator ~ () { return C(a, -b); }\n}w[K], S[K], T[K];\nint lim, rev[K], C2[K];\nvoid prepare(int ti)\n{\n    for(lim = 1; lim <= ti; lim <<= 1);\n    for(int i = 0, j = 0; i < lim; ++i)\n    {\n        w[i] = C(cos(2*PI*i/lim), sin(2*PI*i/lim)), rev[i] = j;\n        for(int k = lim>>1; (j ^= k) < k; k >>= 1);\n    }\n}\nstruct Poly\n{\n    vector<int> A; vector<C> B;\n    int& operator [] (const int i) { return A[i]; }\n    void set(int ti) { A.resize(ti+1); }\n    int ti() { return A.size()-1; }\n    void clear() { return B.clear(); } \n    void init() \n    { \n        int n = ti(); B.resize(n+1); \n        for(int i = 0; i <= n; ++i) B[i] = C(A[i]>>15, A[i]&32767);\n    }\n    void FFT(int t)\n    {\n        if(!t)\n        {\n            B.resize(lim); for(int i = 0; i < lim; ++i) if(i < rev[i]) swap(B[i], B[rev[i]]);\n            for(int mid = 1; mid < lim; mid <<= 1)\n                for(int j = 0, len = mid<<1; j < lim; j += len)\n                    for(int k = 0, p = 0, q = lim/len; k < mid; ++k, p += q)\n                    {\n                        C x = B[j+k], y = w[p]*B[j+k+mid];\n                        B[j+k] = x+y, B[j+k+mid] = x-y;\n                    }\n        }\n        else\n        {\n            reverse(++B.begin(), B.end()), FFT(0); C v(1.0/lim, 0);\n            for(int i = 0; i < lim; ++i) B[i] = B[i]*v;\n        }\n    } \n    friend Poly operator * (Poly A, Poly B)\n    {\n        int n = A.ti(), m = B.ti(); prepare(n+m), A.init(), B.init();\n        A.FFT(0), B.FFT(0); C p, q, a, b, c, d;\n        for(int i = 0; i < lim; ++i)\n        {\n            p = A.B[i], q = ~A.B[i?lim-i:0], a = (p+q)*C(0.5, 0), b = (p-q)*C(0, -0.5);\n            p = B.B[i], q = ~B.B[i?lim-i:0], c = (p+q)*C(0.5, 0), d = (p-q)*C(0, -0.5);\n            S[i] = a*c+b*d*C(0, 1), T[i] = a*d+b*c;\n        }\n        for(int i = 0; i < lim; ++i) A.B[i] = S[i], B.B[i] = T[i];\n        A.FFT(1), B.FFT(1), A.set(n+m);\n        for(int i = 0; i <= n+m; ++i)\n        {\n            i64 a = A.B[i].a+0.5, b = B.B[i].a+0.5, c = A.B[i].b+0.5;\n            A[i] = (a%P*(1<<30)+b%P*(1<<15)+c)%P, A[i] = (A[i]+P)%P;\n        }\n        A.clear(), B.clear(); return A;\n    }\n};\nvoid solve(int *a, int n)\n{\n    Poly F, G; F.set(n-1), G.set((n-1)<<1);\n    for(int i = 1; i < (n-1)<<1; ++i) C2[i+1] = (C2[i]+i)%n;\n    for(int i = 0; i < n; ++i) F[i] = 1ll*a[i]*g[C2[i]?n-C2[i]:0]%P;\n    for(int i = 0; i <= (n-1)<<1; ++i) G[i] = g[C2[(n-1)*2-i]];\n    F = F*G; for(int i = 0; i < n; ++i) a[i] = 1ll*g[C2[i]?n-C2[i]:0]*F[(n-1)*2-i]%P;\n}\n}\nint main()\n{\n    n = read(), k = read(), L = read(), x = read()-1, y = read()-1, P = read();\n    kinv = qpow(k, P-2), e.set(), groot();\n    for(int i = 0; i < n; ++i) for(int j = 0; j < n; ++j) w[i][j] = read();\n    for(int i = 0; i < k; ++i) f[i] = kinv*((g[i]*w+e)^L)[x][y]%P;   \n    Bluestein::solve(f, k);\n    for(int i = 0; i < k; ++i) printf(\"%d\\n\", f[i?k-i:0]);\n    return 0;\n}\n```",
        "postTime": 1582383200,
        "uid": 123514,
        "name": "CTime_Pup_314",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5293 \u3010[HNOI2019]\u767d\u5154\u4e4b\u821e\u3011"
    },
    {
        "content": "\u5148\u819c\u4e00\u53d1memset0\uff0c\u4f46\u662fmemset0\u6709\u4e9b\u5730\u65b9\u5199\u7684\u4e0d\u662f\u5f88\u6e05\u695a\uff0c\u53ea\u6709\u4ed6\u8fd9\u6837\u7684\u5de8\u4f6c\u624d\u80fd\u77e5\u9053\u662f\u5565\u610f\u601d\uff08\u6211\u8fd9\u79cd\u5f31\u7684\u5c31\u8981\u95eeN\u904d\uff09\uff08\u8bf4\u5f97\u597d\u50cf\u6211\u5199\u7684\u5f88\u6e05\u695a\u4e00\u6837\uff09\uff0c\u6240\u4ee5\u6211\u518d\u6c34\u4e00\u7bc7\n\n\u663e\u7136$n=3$\u5c31\u662f$n=1$\u7684\u6269\u5c55\u7248\u672c\uff0c\u5148\u6765\u770b\u770b$n=1$\u600e\u4e48\u505a\u3002\n\n\u4ee4$W=w[1][1]$\uff0c\u663e\u7136\u7b54\u6848\u662f\uff1a$ans_t=\\sum_{i\\mod k=t}^{L}W^i\\binom{L}{i}$\n\n$=\\sum_{i=0}^{L}[k|(i-t)]W^i\\binom{L}{i}$\n\n\u8fd9\u65f6\u7528\u4e00\u4e2a\u5355\u4f4d\u6839\u53cd\u6f14\u3002\n\n\u56de\u987e\u4e00\u4e0b\uff0c\u5355\u4f4d\u6839\u662ffft\u65f6\u7528\u5230\u7684\u4e1c\u897f\uff0c$\\omega_{n}=\\cos\\frac{2\\pi}{n}+\\sin\\frac{2\\pi}{n}i$\uff0c\u5728\u819c$p$\u610f\u4e49\u4e0b\uff0c\u6c42\u51fa$p$\u7684\u539f\u6839$g$\uff0c$\\omega_{n}=g^{\\frac{p-1}{n}}$\u3002\n\n\u6709\u4e00\u4e9b\u5355\u4f4d\u6839\u7684\u6027\u8d28\uff1a\n\n$\\omega_n^i=\\omega_n^{i\\mod n}$\n\n$\\omega_n^i=-\\omega_n^{i+\\frac{n}{2}}$\n\n\u5355\u4f4d\u6839\u53cd\u6f14\u662f\u8fd9\u4e2a\u4e1c\u897f\uff1a\n\n$\\frac{1}{n}\\sum_{i=0}^{n-1}(\\omega_n^k)^i=[n|k]$\u3002\n\n\u8bc1\u660e\u5206\u7c7b\u8ba8\u8bba\uff1a\u5982\u679c$n|k$\uff0c\u6839\u636e\u4e0a\u9762\u6027\u8d28$\\omega_n^k=\\omega_n^0=1$\uff1b\u5426\u5219\u8fd9\u662f\u4e00\u4e2a\u7b49\u6bd4\u6570\u5217\uff0c\u516c\u6bd4\u4e3a$\\omega_{n}^k$\uff0c\u6c42\u548c\u4e3a$\\frac{1-\\omega_n^{kn}}{1-\\omega_n^k}$\uff0c\u4e0a\u9762\u7684\u8fd9\u4e2a\u4e1c\u897f\u662f$0$\u3002\n\n\u5c06\u5355\u4f4d\u6839\u53cd\u6f14\u5957\u8fdb\u4e0a\u9762\u5f0f\u5b50\uff0c\u4ee3\u66ff$[k|(i-t)]$\u3002\n\n$=\\sum_{i=0}^{L}\\frac{1}{k}\\sum_{j=0}^{k-1}(\\omega_k^{i-t})^jW^i\\binom{L}{i}$\n\n$=\\frac{1}{k}\\sum_{j=0}^{k-1}\\omega_k^{-tj}\\sum_{i=0}^{L}W^i\\omega_k^{ij}\\binom{L}{i}$\n\n\u540e\u9762\u8fd9\u4e2a\u5f0f\u5b50\u548ct\u6ca1\u4ec0\u4e48\u5173\u7cfb\u4e86\uff0c\u53ef\u4ee5\u7edf\u4e00\u8ba1\u7b97\uff0c\u597d\u50cf\u8fd9\u662f\u4e2a\u4e8c\u9879\u5f0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u7b97\uff1a\n\n$=\\frac{1}{k}\\sum_{j=0}^{k-1}\\omega_k^{-tj}\\sum_{i=0}^{L}\\binom{L}{i}(W\\omega_k^j)^i1^{n-i}$\n\n$=\\frac{1}{k}\\sum_{j=0}^{k-1}\\omega_k^{-tj}(\\omega_k^jW+1)^L$\n\n\u540e\u9762\u8fd9\u4e1c\u897f\u53ea\u548cj\u6709\u5173\u7cfb\uff0c\u53ef\u4ee5\u63d0\u524d\u968f\u4fbf\u7b97\u51fa\u6765\uff0c\u8bb0\u4e3a$c_j$\n\n$=\\frac{1}{k}\\sum_{j=0}^{k-1}\\omega_k^{-tj}c_j$\n\n\u7136\u540e\u795e\u4ed9\u4e00\u6ce2\u64cd\u4f5c\uff0c$-tj=\\binom{t}{2}+\\binom{j}{2}-\\binom{t+j}{2}$\n\n$=\\frac{1}{k}\\sum_{j=0}^{k-1}\\omega_k^{\\binom{t}{2}+\\binom{j}{2}-\\binom{t+j}{2}}c_j$\n\n$=\\frac{1}{k}\\omega_k^{\\binom{t}{2}}\\sum_{j=0}^{k-1}\\omega_k^{\\binom{j}{2}-\\binom{t+j}{2}}c_j$\n\n$=\\frac{1}{k}\\omega_k^{\\binom{t}{2}}\\sum_{j=0}^{k-1}\\omega_k^{\\binom{j}{2}}c_j\\cdot \\omega_k^{-\\binom{t+j}{2}}$\n\n\u8fd9\u5c31\u662f\u4e2a\u591a\u9879\u5f0f\u4e58\u6cd5\u4e86\uff0c\u6ce8\u610ft+j\u90a3\u4e2a\u591a\u9879\u5f0f\u76f4\u63a5reverse\u4e00\u4e0b\uff0c\u6211\u771f\u7684\u8d8a\u5b66\u8d8a\u8822\u4e86\uff0c\u4e0d\u77e5\u9053\u8fd9\u4e2a\u600e\u4e48\u641e\u81ea\u95ed1h\n\n\u7136\u540e\u56e0\u4e3a\u6a21\u6570\u4e0d\u662fntt\u6a21\u6570\u8fd8\u8981\u7528MTT\n\n\u597d\u7684$n=1$\u505a\u5b8c\u4e86\uff0c$n=3$\u5b9e\u9645\u4e0a\u5c31\u662f\u628a$n=1$\u7684$W$\u6362\u6210\u4e86\u8f93\u5165\u7684\u77e9\u9635\u3002\u4e8e\u662f\u53ea\u8981\u4fee\u6539\u4e00\u4e0b$c_i$\u7684\u6c42\u6cd5\uff0c\u5148\u7b97\u51fa$(Begin\\cdot(\\omega_k^jW)+I)^L$\uff0cBegin\u5c31\u662f\u521d\u59cb\u77e9\u9635\uff0c\u53ea\u6709$1,x$\u5904\u662f1\uff0c\u518d\u53d6\u6700\u7ec8\u7ed3\u679c\u9700\u8981\u53d6\u7684$1,y$\u5904\u7684\u503c\u5c31\u884c\u4e86\n\n\n```cpp\n#include<bits/stdc++.h>\n#define il inline\n#define vd void\ntypedef long long ll;\nil ll gi(){\n    ll x=0,f=1;\n    char ch=getchar();\n    while(!isdigit(ch)){\n        if(ch=='-')f=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))x=x*10+ch-'0',ch=getchar();\n    return x*f;\n}\nconst double pi=acos(-1);\nint m,k,n,x,y,mod,G;\nstruct matrix{\n    int s[3][3];matrix(){memset(s,0,sizeof s);}\n};\nmatrix I;\nint omega[65539];\nil matrix operator+(const matrix&a,const matrix&b){\n    matrix ret;\n    for(int i=0;i<3;++i)\n        for(int j=0;j<3;++j){\n            ret.s[i][j]=a.s[i][j]+b.s[i][j];\n            if(ret.s[i][j]>=mod)ret.s[i][j]-=mod;\n        }\n    return ret;\n}\nil matrix operator*(const matrix&a,const matrix&b){\n    matrix ret;\n    for(int j=0;j<3;++j)\n        for(int i=0;i<3;++i)\n            for(int k=0;k<3;++k)\n                ret.s[i][k]=(ret.s[i][k]+1ll*a.s[i][j]*b.s[j][k])%mod;\n    return ret;\n}\nil matrix operator*(const matrix&a,const int&b){\n    matrix ret;\n    for(int i=0;i<3;++i)\n        for(int j=0;j<3;++j)\n            ret.s[i][j]=1ll*a.s[i][j]*b%mod;\n    return ret;\n}\nmatrix w;\nint A[262147],B[262147];\nil int pow(int x,int y){\n    int ret=1;\n    while(y){\n        if(y&1)ret=1ll*ret*x%mod;\n        x=1ll*x*x%mod;y>>=1;\n    }\n    return ret;\n}\nil matrix pow(matrix x,int y){\n    matrix ret=I;\n    while(y){\n        if(y&1)ret=ret*x;\n        x=x*x;y>>=1;\n    }\n    return ret;\n}\nil int getrt(int x){\n    static int p[50],o=0;\n    for(int i=2,y=x-1;i<=y;++i)\n        if(y%i==0){\n            p[++o]=i;\n            while(y%i==0)y/=i;\n        }\n    for(int g=2;;++g){\n        bool yes=1;\n        for(int j=1;j<=o;++j)if(pow(g,(mod-1)/p[j])==1){yes=0;break;}\n        if(yes)return g;\n    }\n}\ntypedef std::complex<double> cp;\nint rev[262147];cp omg[262147];\ncp A1[262147],A2[262147],B1[262147],B2[262147];\nil vd fft(cp*A,int n){\n    for(int i=0;i<n;++i)if(rev[i]>i)std::swap(A[i],A[rev[i]]);\n    for(int o=1;o<n;o<<=1)\n        for(cp*p=A;p!=A+n;p+=o<<1)\n            for(int i=0;i<o;++i){\n                cp t=omg[n/(o<<1)*i]*p[i+o];\n                p[i+o]=p[i]-t,p[i]+=t;\n            }\n}\nint ans[262147];\nint main(){\n#ifdef XZZSB\n    freopen(\"in.in\",\"r\",stdin);\n    freopen(\"out.out\",\"w\",stdout);\n#endif\n    I.s[0][0]=I.s[1][1]=I.s[2][2]=1;\n    m=gi(),k=gi(),n=gi(),x=gi()-1,y=gi()-1,mod=gi();\n    omega[0]=1;omega[1]=pow(G=getrt(mod),(mod-1)/k);\n    for(int i=2;i<k;++i)omega[i]=1ll*omega[1]*omega[i-1]%mod;\n    for(int i=0;i<m;++i)for(int j=0;j<m;++j)w.s[i][j]=gi();\n    for(int i=0;i<(k<<1|1);++i)A[i]=omega[(k-1ll*i*(i-1)/2%k)%k];\n    matrix begin;begin.s[0][x]=1;\n    for(int i=0;i<k;++i)B[i]=1ll*omega[1ll*i*(i-1)/2%k]*(begin*pow(w*omega[i]+I,n)).s[0][y]%mod;\n    std::reverse(B,B+k+1);\n    int N=1,lg=0;while(N<(k*3+5))N<<=1,++lg;\n    for(int i=0;i<N;++i)omg[i]=(cp){cos(i*pi*2/N),sin(i*pi*2/N)};\n    for(int i=0;i<N;++i)rev[i]=(rev[i>>1]>>1)|((i&1)<<lg-1);\n    for(int i=0;i<N;++i)A1[i]=A[i]&32767,A2[i]=A[i]>>15;\n    for(int i=0;i<N;++i)B1[i]=B[i]&32767,B2[i]=B[i]>>15;\n    fft(A1,N),fft(B1,N);fft(A2,N),fft(B2,N);\n    for(int i=0;i<N;++i){\n        cp _A1=A1[i],_A2=A2[i],_B1=B1[i],_B2=B2[i];\n        A1[i]=_A1*_B1;A2[i]=_A2*_B2;\n        B1[i]=_A1*_B2;B2[i]=_A2*_B1;\n    }\n    for(int i=0;i<N;++i)omg[i]=(cp){cos(i*pi*2/N),-sin(i*pi*2/N)};\n    fft(A1,N),fft(B1,N);fft(A2,N),fft(B2,N);\n    for(int i=0;i<N;++i)A1[i]/=N;\n    for(int i=0;i<N;++i)A2[i]/=N;\n    for(int i=0;i<N;++i)B1[i]/=N;\n    for(int i=0;i<N;++i)B2[i]/=N;\n    for(int i=0;i<N;++i)A[i]=((ll)(A1[i].real()+0.5)%mod+1073741824ll*(((ll)(A2[i].real()+0.5))%mod)%mod+32768ll*(((ll)(B1[i].real()+0.5))%mod)%mod+32768ll*(((ll)(B2[i].real()+0.5))%mod)%mod)%mod;\n    int invk=pow(k,mod-2);\n    for(int i=0;i<k;++i)printf(\"%lld\\n\",1ll*A[i+k]*invk%mod*omega[1ll*i*(i-1)/2%k]%mod);\n    return 0;\n}\n```",
        "postTime": 1554803111,
        "uid": 23118,
        "name": "\u03bb\u1d09\u028d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5293 \u3010[HNOI2019]\u767d\u5154\u4e4b\u821e\u3011"
    },
    {
        "content": "### \u524d\u8a00\n\n~~\u6211\u662f\u5361\u8001\u5e08\uff0c\u6211 10min IP \u8d4b\uff0c30min \u8d3a\u767d\u5154\u4e4b\u821e\uff01~~\n\n\u8054\u8d5b\u524d\u5355\u8d70\u4e00\u4e2a\u591a\u9879\u5f0f\u9893\u5e9f\u8bb0\u5f55\u3002\n\n\u521a\u5b66\u7684 CZT\uff0c\u8d81\u7740\u70ed\u4e4e\u8fc7\u6765\u5207\u767d\u5154\u4e4b\u821e\u5e76\u5199\u7bc7\u9898\u89e3\u3002\n\n---\n### \u601d\u8def\n\n\u8bbe $f_{i,j}$ \u8868\u793a\u767d\u5154\u9009 $i$ \u4e2a\u843d\u811a\u70b9\uff0c\u6700\u540e\u4e00\u6b65\u6240\u5bf9\u5e94\u7684\u7b2c\u4e8c\u7ef4\u5750\u6807\u662f $j$ \u7684\u65b9\u6848\u6570\uff0c\u800c\u53e6\u8bbe $g$ \u4f7f $f_{i,j}=\\binom Lig_{i,j}$\uff0c\u5373 $g$ \u8868\u793a\u9009\u5b8c $i$ \u4e2a\u843d\u811a\u70b9\u540e\u7684\u7b54\u6848\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5f97\u5230\u4e00\u4e2a\u5f88 naive \u7684 dp \u5f0f\uff1a\n\n$$g_{i,j}=\\sum_kg_{i-1,k}w_{k,j}$$\n\n\u8fd9\u4e2a\u663e\u7136\u53ef\u4ee5\u77e9\u9635\u4f18\u5316\u3002\n\n\u8bb0 $\\vec g_i=(g_{ij})_ {1\\times n}$\uff0c\u90a3\u4e48 $\\vec g_i=\\vec g_{i-1}\\cdot W$\uff0c\u5176\u4e2d $W_{n\\times n}$ \u4e3a\u7ed9\u5b9a\u7684\u77e9\u9635\u3002\n\n\u90a3\u4e48\uff0c$g_{i,j}=(W^i)_ {x,j}$\u3002\n\n\u6216\u8005\u8bf4\uff0c**$\\vec g_i$ \u662f $W^i$ \u7684\u7b2c $x$ \u4e2a\u884c\u5411\u91cf**\u3002\n\n\u90a3\u4e48\uff0c\u7c7b\u4f3c\u7684\uff0c$f_{i,j}=\\binom Li g_{i,j}=\\binom Li(W^i)_ {x,j}$\u3002\n\n\u8bbe $w_k=g^{p-1\\over k}$\uff0c\u5373 $w_k$ \u4e3a $k$ \u6b21\u5355\u4f4d\u6839\uff08$g$ \u662f $p$ \u4e00\u4e2a\u539f\u6839\uff09\u3002\n\n\u4f5c\u5355\u4f4d\u6839\u53cd\u6f14\u3002\n\n$$ans_t=\\sum_m[k\\mid m-t]f_{m,y}\n\\\\=\\sum_mf_{m,y}\n{\\sum\\limits_{i=0}^{k-1}w_k^{i(m-t)}\\over k}\n\\\\=\\dfrac1k\\sum_{i=0}^{k-1}w_k^{-it}\\sum_mw_k^{im}f_{m,y}\n\\\\=\\dfrac1k\\sum_{i=0}^{k-1}w_k^{-it}\\sum_mw_k^{im}\\binom Lm(W^m)_ {x,y}\n\\\\=\\dfrac1k\\sum_{i=0}^{k-1}w_k^{-it}(\\sum_m\\binom Lm(w_k^iW)^m)_ {x,y}\n\\\\=\\dfrac1k\\sum_{i=0}^{k-1}w_k^{-it}((I_n+w_k^iW)^L)_ {x,y}$$\n\n\uff08\u6700\u540e\u8fd9\u6b65\u9006\u7528\u4e86\u4e00\u6b21\u4e8c\u9879\u5f0f\u5b9a\u7406\uff0c$I_n$ \u4e3a $n$ \u9636\u5355\u4f4d\u77e9\u9635\uff09\n\n\u5bf9\u6bcf\u4e2a $i$\uff0c\u77e9\u9635\u5feb\u901f\u5e42\u6c42\u51fa $h_i=((I_n+w_k^iW)^L)_ {x,y}$\u3002\n\n$$ans_t=\\dfrac1k\\sum_{i=0}^{k-1}w_k^{-it}h_i$$\n\n\u6765\u5427\uff0cCZT\uff01\n\n\u7531\u4e8e $it=\\binom{i+t}2-\\binom i2-\\binom t2$\uff0c\u56e0\u6b64\u6211\u4eec\u6709\n\n$$ans_t=\\dfrac1k\\sum_{i=0}^{k-1}w_k^{-it}h_i\n\\\\=\\dfrac{w_k^\\binom t2}k\\sum_{i=0}^{k-1}w_k^{-\\binom{i+t}2}(h_iw_k^{\\binom i2})$$\n\n\u4e00\u6b21\u5dee\u5377\u79ef\u3002\n\n---\n### \u5173\u4e8e\u5dee\u5377\u79ef\n\n~~\u4e0d\u4f1a\u5427\u4e0d\u4f1a\u5427\u90fd\u7206\u5207\u767d\u5154\u4e4b\u821e\u4e86\u80af\u5b9a\u4f1a CZT \u554a\uff0c\u4f1a CZT \u8fd8\u4e0d\u4f1a\u5dee\u5377\u79ef\u5417\u3002~~\n\n\u9274\u4e8e\u6709\u7684\u9898\u89e3\u4e2d\u53ea\u8bb2\u4e86 reverse \u65b9\u6cd5\u6c42\u5dee\u5377\u79ef\u800c\u6ca1\u6709\u8bb2\u8ff0\u5dee\u5377\u79ef\u7684\u786e\u5207\u6982\u5ff5\uff0c\u8865\u5145\u4e00\u4e0b\u3002\n\n\u6570\u5217 $\\{a_n\\}$ \u4e0e $\\{b_n\\}$ \u7684\u5dee\u5377\u79ef $\\{c_n\\}$ \u8868\u8ff0\u4e3a\uff1a\n\n$$\\forall0\\le k\\le n,c_k=\\sum_ia_{i+k}b_i$$\n\n\u505a\u6cd5\u5c31\u662f\u8bbe $d_i=b_{n-i}$\uff0c\u518d\u5047\u8bbe $a$ \u4e0e $d$ \u7528 FFT \u5377\u6210 $C$\uff0c\u90a3\u4e48 $c_k=\\sum\\limits_ia_{i+k}d_{n-i}=C_{n+k}$\u3002\n\n\u76f4\u89c2\u6765\u770b\uff0c\u5c31\u662f**\u628a $b$ \u7ffb\u8f6c\u4e86\u540e\u4e0e $a$ \u5377\u8d77\u6765\uff0c\u518d\u628a\u7cfb\u6570\u5e73\u79fb\u3002**\n\n---\n### \u590d\u6742\u5ea6\u5206\u6790\n\n\u6c42\u5355\u4f4d\u6839\uff1a$O(\\ ^4\\!\\!\\!\\!\\sqrt p\\log\\log p)$\u3002\n\n\u9884\u5904\u7406\u5355\u4f4d\u6839\u5e42\u6b21\uff1a$\\Theta(k+\\log p)$\u3002\n\n\u77e9\u9635\u5feb\u901f\u5e42\uff1a$\\Theta(kn^3\\log L)$\u3002\n\n\u5377\u79ef\uff1a$\\Theta(k\\log k)$\u3002\n\n---\n### Code\n\n\u5199\u7684\u56db\u6b21 FFT\uff0c\u548c KarryS307 \u7684\u6bd4\u4e86\u6bd4\uff0c\u6211\u7684\u8fd8\u5feb\u4e00\u70b9\uff1f\n\n\u4ee3\u7801\u8f83\u957f\uff0c\u653e[\u526a\u8d34\u677f](https://www.luogu.com.cn/paste/djs2axb0)\u4e86\u3002\n",
        "postTime": 1634736928,
        "uid": 105050,
        "name": "myee",
        "ccfLevel": 7,
        "title": "5293"
    },
    {
        "content": "\u53d1\u4e00\u4e2a\u6ca1\u6709\u4ec0\u4e48\u9519\u8bef\u800c\u4e14\u683c\u5f0f\u6b63\u5e38\u7684\u9898\u89e3\u3002\u3002\u3002\n\n\u6709\u4e00\u4e2a\u7b80\u5355\u7684$dp$\u5927\u5bb6\u5e94\u8be5\u90fd\u4f1a\uff1a\n\n\u8bbe$f_{i,j}$\u4e3a\u8d70$i$\u6b65\u5230\u7b2c$j$\u884c**\u4efb\u610f\u5408\u6cd5\u4f4d\u7f6e**\u7684\u65b9\u6848\u6570\u3002\n\n\u8bbe$g_{i,j}$\u4e3a\u8d70$i$\u6b65\u5230\u7b2c$j$\u884c(**\u4ec5\u4ec5\u662f\u884c**)\u7684\u65b9\u6848\u6570\u3002\n\n\u6709\n\n$$g_{i,j}=\\sum_{k}g_{i-1,k}w_{k,j}$$\n\n\u5f88\u663e\u7136\u662f\u77e9\u9635\u5427$...$\n\n\u6211\u4eec\u4e0d\u59a8\u4ee4$n=3,x=1$\n\n\u8bbe$M=\\begin{bmatrix}1 & 0 & 0\\end{bmatrix},S=\\begin{bmatrix}w_{1,1} & w_{1,2} & w_{1,3}  \\\\w_{2,1} & w_{2,2} & w_{2,3}  \\\\w_{3,1} & w_{3,2} & w_{3,3}  \\\\ \\end{bmatrix}$\n\n\u5176\u4ed6\u662f\u540c\u7406\u7684\u3002\n\n\u663e\u800c\u6613\u89c1\uff0c$G_i=M\\times S^i(G$\u4e3a\u5f53\u524d\u7684\u77e9\u9635\uff0c$F=\\begin{bmatrix}g_{i,1}&g_{i,2}&g_{i,3}\\end{bmatrix})$\n\n\u90a3\u4e48$f_{i,j}$\u7b49\u4ef7\u4e8e\u767d\u5154\u5728$1,...,L$\u4e2d\u9009$i$\u4e2a\u7ecf\u8fc7\u70b9\u8fdb\u884c\u8df3\u821e\u3002\n\n$$\\therefore f_{i,j}=C_{L}^{i}g_{i,j}$$\n\n\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\n\n$$ans_t=\\sum_{i=1}^{L}[i\\ \\text{mod}\\ k=t]f_{i,y}$$\n\n\u663e\u800c\u6613\u89c1\u7684[\u5355\u4f4d\u6839\u53cd\u6f14](https://www.luogu.org/blog/wohaocaia/dan-wei-gen-fan-yan-xiao-jie)\u3002\n\n$$ans_t=\\sum_{i=0}^{L}[k|(i-t)]f_{i,y}$$\n\n$$=\\sum_{i=0}^{L}f_{i,y}\\frac 1k\\sum_{j=0}^{k-1}\\omega_{k}^{(i-t)j}$$\n\n$$=\\frac 1k\\sum_{i=0}^{L}f_{i,y}\\sum_{j=0}^{k-1}\\omega_{k}^{(i-t)j}$$\n\n$$=\\frac 1k\\sum_{i=0}^{L}f_{i,y}\\sum_{j=0}^{k-1}\\omega_{k}^{ij}\\omega_{k}^{-tj}$$\n\n$$=\\frac 1k\\sum_{i=0}^{L}\\omega_{k}^{-tj}C_{L}^{i}g_{i,y}\\sum_{j=0}^{k-1}\\omega_{k}^{ij}$$\n\n\u518d\u628a\u77e9\u9635\u4ee3\u5165\u8fdb\u53bb\u3002\n\n$$=\\frac 1k\\sum_{i=0}^{L}\\omega_{k}^{-tj}C_{L}^{i}MS^i\\sum_{j=0}^{k-1}\\omega_{k}^{ij}\\ \\ \\text{\u7684\u7b2cy\u9879}$$\n\n$$=\\frac 1k\\sum_{j=0}^{k-1}\\omega_{k}^{-tj}M\\sum_{i=0}^{L}S^iC_{L}^{i}(\\omega_{k}^{j})^i\\ \\ \\text{\u7684\u7b2cy\u9879}$$\n\n\u548c[PYXFIB](https://www.luogu.org/blog/wohaocaia/ti-xie-bzoj3328pyxfib)\u4e00\u6837\u7684\u5957\u8def\uff0c\u6839\u636e\u77e9\u9635\u7684\u4e8c\u9879\u5f0f\u5b9a\u7406\uff08\u4e0d\u4f1a\u7684\u53ef\u4ee5\u70b9\u8fdb\u9898\u89e3\u770b\u4e00\u770b\uff09\uff0c\u8bbe\u5355\u4f4d\u77e9\u9635\u4e3a$I$\n\n$$I=\\begin{bmatrix}1 & 0 & 0\\\\0 & 1 & 0\\\\0 & 0 & 1 \\end{bmatrix}$$\n\n\u7531\u4e8e$I$\u548c\u4efb\u610f\u77e9\u9635\u5747\u6ee1\u8db3\u4ea4\u6362\u5f8b\uff0c\u5219\u6709\n\n$$ans_t=\\frac 1k\\sum_{j=0}^{k-1}\\omega_{k}^{k-tj}M(\\omega_k^jS+I)^L\\ \\ \\text{\u7684\u7b2cy\u9879}$$\n\n\u73b0\u5728\u95ee\u9898\u6765\u4e86\uff0c\u540e\u9762\u8fd9\u4e00\u5768\u6211\u4eec\u53ef\u4ee5\u7528\u77e9\u9635\u5feb\u901f\u5e42\u6765\u6c42\u3002\u4f46\u662f\u524d\u9762\u8fd9\u4e2a\u597d\u50cf\u5f88\u96be\u5904\u7406\u3002\u3002\u3002\n\n\u8bbe$h_j=M(\\omega_k^jS+I)^L\\ \\ \\text{\u7684\u7b2cy\u9879}$\n\n$$ans_t=\\frac 1k\\sum_{j=0}^{k-1}\\omega_{k}^{-tj}h_j$$\n\n\u6211\u4eec\u9700\u8981\u5feb\u901f\u6c42\u51fa\u8fd9$k$\u4e2a\u503c$(ans_0,ans_1,..,ans_{k-1})$\u3002\n\n\u731c\u4e00\u731c\u5c31\u662f\u4e00\u4e2a\u5377\u79ef\uff0c\u4f46\u662f\u600e\u4e48\u5377\u5462\uff1f\n\n\u6709\u4e00\u4e2a\u4e1c\u897f\u53eb\u505a Bluestein's Algorithm \u60f3\u5fc5\u5927\u5bb6\u90fd\u542c\u8fc7\u5427$...$\n\n\u5b83\u662f\u628a$ij$\u62c6\u6210$-\\frac {i^2}2-\\frac {j^2}2+\\frac {(i+j)^2}2$\n\n\u4f46\u662f~~\u7ffb\u4e86\u7ffbmemset0\u7684\u9898\u89e3~~\u53d1\u73b0\u5355\u4f4d\u6839\u4e0d\u4e00\u5b9a\u6709\u4e8c\u6b21\u5269\u4f59\uff0c\u53ea\u80fd\u628a$-tj$\u62c6\u6210\n\n\n$$C_t^2+C_j^2-C_{t+j}^2$$\n\n\u9a8c\u8bc1\u4e00\u4e0b\n\n$$=\\frac {t(t-1)+j(j-1)-(t+j)(t+j-1)}2$$\n\n$$=-\\frac {2tj}2$$\n\n$$=-tj$$\n\n\u4ee3\u5165\u4ee5\u540e\u5c31\u53ef\u4ee5\u5f97\u5230\n\n$$ans_t=\\frac 1k\\sum_{j=0}^{k-1}\\omega_{k}^{C_t^2+C_j^2-C_{t+j}^2}h_j$$\n\n$$=\\frac {\\omega_{k}^{C_t^2}}k\\sum_{j=0}^{k-1} h_j\\omega_{k}^{C_j^2}\\cdot\\omega_{k}^{-C_{t+j}^2}$$\n\n\u8fd8\u770b\u4e0d\u51fa\u6765\u5417\uff1f\u7ee7\u7eed\u53d8\u5f62\u3002\n\n$$=\\frac {\\omega_{k}^{C_t^2}}k\\sum_{j=0}^{k-1} h_j\\omega_{k}^{C_j^2}\\cdot \\frac 1{\\omega_{k}^{C_{t+j}^2}}$$\n\n\u8bbe\n\n$$f_i=h_i\\omega_{k}^{C_i^2},g_i=\\frac 1{\\omega_{k}^{C_{i}^2}}$$\n\n\u5219\n\n$$ans_t=\\frac {\\omega_{k}^{C_t^2}}k\\sum_{j=0}^{k-1}f_j\\cdot g_{j+t}$$\n\n\u5269\u4e0b\u7684\u5c31\u662f[$\\text{[ZJOI2014]\u529b}$](https://www.luogu.org/problemnew/show/P3338) \u4e86\u3002\n\n\u53d1\u73b0\u5927\u5bb6\u5377\u7684\u90fd\u548c\u6211\u4e0d\u4e00\u6837\u3002\u6211\u662f\u628a\u8bbe$f'_i=f_{2k-i}$\uff0c\u7136\u540e\u518d\u5377\u79ef\u3002\n\n\u7531\u4e8e\u6a21\u6570\u5947\u7279\u4ee5\u53ca\u51fa\u9898\u4eba\u6bd2\u7624\uff0c\u9700\u8981\u7528\u4e09\u6a21\u6570 NTT \u6216\u8005 MTT \u3002\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define int long long\nusing namespace std;\n#ifdef Fading\n#define gc getchar\n#endif\n#ifndef Fading\ninline char gc(){\n    static char now[1<<16],*S,*T;\n    if (T==S){T=(S=now)+fread(now,1,1<<16,stdin);if (T==S) return EOF;}\n    return *S++;\n}\n#endif\ninline ll read(){\n    register ll x=0,f=1;char ch=gc();\n    while (!isdigit(ch)){if(ch=='-')f=-1;ch=gc();}\n    while (isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=gc();}\n    return (f==1)?x:-x;\n}\ndouble pi=acos(-1);\nll a[400002],c[400002],b[400002],n,K,L,X,Y,ljc,xx,yy,r[400002];\nstruct Complex{\n    double x,y;\n    Complex(double xx=0,double yy=0)\n    {x=xx,y=yy;}\n}A[400002],B[400002],C[400002],D[400002],w[400002];\nll WW[4][4];\nstruct matrix{\n    ll x[4][4];\n    inline void clear(){\n    \tfor (int i=1;i<=n;i++){\n    \t\tfor (int j=1;j<=n;j++){\n    \t\t\tx[i][j]=0;\n            }\n        }\n    }\n}aa,one,M;\ninline matrix mul(matrix a,matrix b){\n    matrix c;\n    c.clear();\n    for (int i=1;i<=n;i++){\n        for (int j=1;j<=n;j++){\n            for (int k=1;k<=n;k++){\n                c.x[i][j]=(c.x[i][j]+a.x[i][k]*b.x[k][j])%ljc;\n            }\n        }\n    }\n    return c;\n}\ninline matrix mfast_pow(matrix a,ll b){\n    matrix t=one;\n    while (b){\n        if (b&1LL) t=mul(t,a);\n        a=mul(a,a);b>>=1;\n    }\n    return t;\n}\ninline void init_one(){\n    for (int i=1;i<=n;i++) one.x[i][i]=1;\n}\ninline void init_a(ll xx){\n    for (int i=1;i<=n;i++){\n        for (int j=1;j<=n;j++){\n            aa.x[i][j]=1LL*WW[i][j]*xx%ljc;\n        }\n        aa.x[i][i]++; \n    }\n}\ninline ll fast_pow(int a,int b,int p){\n    ll t=1;\n    while (b){\n        if (b&1) t=1LL*t*a%p;\n        b>>=1;a=1LL*a*a%p;\n    }\n    return t;\n}\nll q[10010],gen;\ninline ll G(ll s){\n    q[0]=0;\n    for (ll i=2;i*i<=s-1;i++){\n        if ((s-1)%i==0){\n            q[++q[0]]=i;\n            if (i*i!=s-1) q[++q[0]]=(s-1)/i;\n        }\n    }\n    for (ll i=2;;i++){\n        bool flag=1;\n        for (ll j=1;j<=q[0]&&flag;j++) if (fast_pow(i,q[j],s)==1) flag=0;\n        if (flag) return i;\n    }\n    return -1;\n}\ninline Complex operator + (const Complex &a,const Complex &b){\n    return Complex(a.x+b.x,a.y+b.y);\n}\ninline Complex operator - (const Complex &a,const Complex &b){\n    return Complex(a.x-b.x,a.y-b.y);\n}\ninline Complex operator * (const Complex &a,const Complex &b){\n    return Complex(a.x*b.x-a.y*b.y,a.x*b.y+a.y*b.x);\n}\ninline void swap(Complex &a,Complex &b){\n    Complex t=a;a=b;b=t;\n}\ninline void FFT(Complex f[],int id,int lim){\n    for (int i=0;i<lim;i++){\n        if (i>r[i]) swap(f[r[i]],f[i]);\n    }\n    for (int len=1;len<lim;len<<=1){\n    \tComplex gen(cos(pi/len),id*sin(pi/len));\n        for (int i=0;i<lim;i+=len<<1){\n            Complex *f1=f+i,*f2=f1+len;\n            for (int j=0;j<len;j++){\n            \tComplex WW=w[lim/len*j];\n            \tif (id==-1) WW.y=-WW.y;\n                Complex x=f1[j],y=f2[j]*WW;\n                f1[j]=x+y;f2[j]=x-y;\n            }\n        }\n    }\n    if (id==1) return;\n    for (int i=0;i<lim;i++) f[i].x=fabs(f[i].x/lim+0.5);\n}\nconst int sqq=32768;\nint lim,len;\ninline void MTT(int *a,int *b,int *c,int n,int m){\n    lim=1,len=0;\n    while (lim<=(n+m)) lim<<=1,len++;\n    for (int i=0;i<lim;i++) r[i]=(r[i>>1]>>1)|((i&1)<<(len-1));\n    for (int i=0;i<lim;i++){\n        A[i].x=A[i].y=B[i].x=B[i].y=C[i].x=C[i].y=D[i].x=D[i].y=0;\n    }\n    for (int len=1;len<lim;len<<=1){\n    \tfor (int j=0;j<len;j++){\n    \t\tw[lim/len*j]=(Complex){cos(j*pi/len),sin(j*pi/len)};\n        }\n    }\n    for (int i=0;i<n;i++) A[i].x=a[i]/sqq,B[i].x=a[i]%sqq;\n    for (int i=0;i<m;i++) C[i].x=b[i]/sqq,D[i].x=b[i]%sqq;\n    FFT(A,1,lim);FFT(B,1,lim);FFT(C,1,lim);FFT(D,1,lim);\n    Complex tmp1,tmp2;\n    for (int i=0;i<lim;i++){\n    \ttmp1=A[i]*C[i];tmp2=D[i]*B[i];\n        B[i]=B[i]*C[i]+A[i]*D[i];A[i]=tmp1;D[i]=tmp2;\n    }\n    FFT(A,-1,lim);FFT(B,-1,lim);FFT(D,-1,lim);\n    for (int i=0;i<lim;i++){\n    \tc[i]=(c[i]+(ll)(A[i].x)*sqq%ljc*sqq%ljc)%ljc;\n    \tc[i]=(c[i]+(ll)(B[i].x)*sqq%ljc)%ljc;\n    \tc[i]=(c[i]+(ll)(D[i].x))%ljc;\n    }\n}\ninline ll getC(ll n){\n    if (n<=1) return 0;\n    return 1LL*(n-1)*n/2;\n}\nll Gen[100001];\nsigned main(){\n    n=read(),K=read(),L=read(),X=read(),Y=read(),ljc=read();\n    for (int i=1;i<=n;i++){\n    \tfor (int j=1;j<=n;j++){\n    \t\tWW[i][j]=read();\n        }\n    }\n    init_one();\n    gen=fast_pow(G(ljc),(ljc-1)/K,ljc);\n    Gen[0]=1;\n    for (int i=1;i<K;i++) Gen[i]=Gen[i-1]*gen%ljc;\n    for (ll i=0,w=1;i<K;i++,w=w*gen%ljc){\n        init_a(w);\n        aa=mfast_pow(aa,L);\n        b[i]=1LL*aa.x[X][Y]*Gen[getC(i)%K]%ljc;\n    }\n    for (ll i=0;i<((K<<1)|1);i++){\n        a[i]=Gen[(K-getC(i)%K)%K];\n    } \n    reverse(a,a+(K<<1)+1);\n    MTT(a,b,c,((K<<1)|1),K);\n    ll KKK=fast_pow(K,ljc-2,ljc);\n    for (ll i=0;i<K;i++){\n        printf(\"%lld\\n\",1LL*c[2*K-i]*KKK%ljc*Gen[getC(i)%K]%ljc);\n    }\n}\n```",
        "postTime": 1560168784,
        "uid": 20309,
        "name": "Fading",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5293 \u3010[HNOI2019]\u767d\u5154\u4e4b\u821e\u3011"
    },
    {
        "content": "## \u9898\u610f\n\u6709\u4e00\u5f20\u9876\u70b9\u6570\u4e3a $(L+1)\\times n$ \u7684\u6709\u5411\u56fe\uff0c\u9876\u70b9\u7528\u4e8c\u5143\u7ec4$(u,v)$\uff08$0\\le u\\le L,v\\le 1\\le n$\uff09\u8868\u793a\u3002\n\n\u5728\u8fd9\u4e2a\u77e9\u5f62\u4e2d\uff0c\u524d\u9762\u7684$(u_1,v_1)$\u53ef\u4ee5\u5230\u540e\u9762\u7684$(u_2,v_2)$\uff0c\u4e14\u6709$w[v_1][v_2]$\u6761\u8def\u3002\n\n\u4ece$(0,x)$\u51fa\u53d1\uff0c\u5230\u7b2c\u4e8c\u7ef4\u4e3a$y$\u7684\u9876\u70b9\uff0c\u5bf9\u4e8e$x\\in[0,k-1]$\uff0c\u6709\u591a\u5c11\u6761\u8d70\u4e86$m(m\\bmod k=x)$\u6b65\u7684\u8def\u7ebf\u3002\n\n\uff08\u611f\u89c9\u8d8a\u89e3\u91ca\u8d8a\u4e71\uff09\n## \u9898\u89e3\n\u8fd9\u4e2a\u5c51\u6ca1\u6709\u5b66\u8fc7\u77e9\u9635\u8868\u8ff0\u4e0d\u4e25\u8c28\u8bf7\u89c1\u8c05\u3002\n\n\u8bb0$g_{i,j}$\u4e3a\u8d70\u4e86$i$\u6b65\u5230\u7b2c\u4e8c\u7ef4\u4e3a$j$\u7684\u9876\u70b9\u7684\u65b9\u6848\u6570\uff0c\u6709\uff1a\n\n$$g_{i,j}=\\sum_{k=1}^ng_{i-1,k}w_{k,j}$$\n\n\u4e0d\u96be\u60f3\u5230\u77e9\u9635\u4f18\u5316\u3002\n\n\u6211\u4eec\u82e5\u8bb0\n$$G_i=(g_{i,1},g_{i,2},\\ldots,g_{i,n})$$\n\n$$\nG_0=(\\underbrace{0,\\ldots,0}_{x-1},1,\\underbrace{0,\\ldots,0}_{n-x})\n$$\n$$\nS=\n\\begin{pmatrix}\nw_{1,1}&\\cdots&w_{1,n}\\\\\n\\vdots&\\ddots&\\vdots\\\\\nw_{n,1}&\\cdots&w_{n,n}\n\\end{pmatrix}\n$$\n\u6709\uff1a$G_i=G_{i-1}\\times S$\uff0c\u5373$G_i=G_0\\times S^i$\n\n\u4f46\u6b64\u65f6\u6211\u4eec\u6ca1\u6709\u8003\u8651\u767d\u5154\u5154\u6bcf\u6b21\u8d70\u4e86\u51e0\u6b65\u3002\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u8003\u8651$i$\u6b65\u8d70\u4e86\u90a3\u4e9b\u5217\u3002\u5b9e\u9645\u4e0a\u5c31\u662f\u5728$L$\u4e2a\u4f4d\u7f6e\u4e0a\u9009\u4e86$i$\u4e2a\u4f4d\u7f6e~~\u5531~~\u8df3\uff0c\u4e5f\u5c31\u662f$\\tbinom{L}{i}g_{i,j}=\\tbinom{L}i(G_0S^i)_{1,y}$\n\n\u90a3\u4e48\u6b64\u65f6\u6211\u4eec\u5df2\u7ecf\u8868\u793a\u51fa\u8df3\u4e86$i$\u7684\u65b9\u6848\u6570\u3002\u6765\u8003\u8651\u7b54\u6848\uff0c\u5217\u51fa\u5f0f\u5b50\u5f00\u59cb\u4e71\u63a8\uff1a\n$$ans_t=\\sum_{i=0}^L[i\\bmod k=t]\\tbinom{L}{i}g_{i,y}$$\n$[i\\bmod k=t]$\u7b49\u4ef7\u4e8e$i=t+k\\times a$\uff0c\u5373$[k|(i-t)]$\n$$ans_t=\\sum_{i=0}^L[k|(i-t)]\\tbinom{L}{i}g_{i,y}$$\n\u7136\u540e\u5c31\u662f\u795e\u5947\u7684\u5355\u4f4d\u6839\u53cd\u6f14\u3002\u5148\u4e0a\u516c\u5f0f\uff1a\n$$\\forall k,[n|k]=\\frac{1}{n}\\sum_{i=0}^{n-1}\\omega_n^{ik}$$\n\u7b80\u5355\u8bc1\u660e\u4e00\u4e0b\uff1a\n- \u5f53$[n|k]$\u65f6$\\omega_n^{ik}=\\omega^0=1$\uff0c\u663e\u7136\u539f\u5f0f\u7b49\u4e8e$1$\n- \u5426\u5219\uff0c\u5c31\u662f\u4e00\u4e2a\u7b49\u6bd4\u6570\u5217\u6c42\u548c$\\dfrac{1}{n}\\times \\dfrac{\\omega_n^{nk}-\\omega_n^0}{\\omega_n^k-1}=0$\n\u628a\u8fd9\u4e2a\u7b80\u5355\u7684\u67ff\u5b50\u5e26\u8fdb\u53bb\uff1a\n$$ans_t=\\sum_{i=0}^L\\frac{1}{k}\\tbinom{L}{i}g_{i,y}\\sum_{j=0}^{k-1}\\omega_{k}^{(i-t)j}$$\n\u6709\u4e00\u8bf4\u4e00\u62ec\u53f7\u770b\u7740\u5f88\u96be\u53d7\uff0c\u56e0\u6b64\u62c6\u5f00\u6765\u3002\n$$ans_t=\\frac{1}{k}\\sum_{i=0}^L\\tbinom{L}{i}g_{i,y}\\sum_{j=0}^{k-1}\\omega_{k}^{ij}\\omega_{k}^{-tj}$$\n\u4ea4\u6362\u6c42\u548c\u987a\u5e8f\u5c31\u662f\u4f20\u7edf\u827a\u80fd\u4e86\u3002\n$$ans_t=\\frac{1}{k}\\sum_{j=0}^{k-1}\\omega_{k}^{-tj}\\sum_{i=0}^L\\tbinom{L}{i}g_{i,y}\\omega_{k}^{ij}$$\n\u628a\u6211\u4eec\u63a8\u51fa\u6765\u7684$g_{i,y}$\u5e26\u8fdb\u53bb\u3002\n$$ans_t=\\frac{1}{k}\\sum_{j=0}^{k-1}\\omega_{k}^{-tj}\\sum_{i=0}^L\\tbinom{L}{i}\\omega_{k}^{ij}\\times(G_0S^i)_{1,y}$$\n\u77e9\u9635\u90a3\u90e8\u5206\u4e8b\u5b9e\u4e0a\u4e5f\u53ef\u4ee5\u5148\u63d0\u53d6\u516c\u56e0\u5f0f\u518d\u6c42\u548c\u518d\u53d6\u4e0b\u6807\uff0c\u5373\uff1a\n$$ans_t=\\frac{1}{k}\\sum_{j=0}^{k-1}\\omega_{k}^{-tj}(G_0\\sum_{i=0}^L\\tbinom{L}{i}\\omega_{k}^{ij}\\times S^i)_{1,y}$$\n$$ans_t=\\frac{1}{k}\\sum_{j=0}^{k-1}\\omega_{k}^{-tj}(G_0\\sum_{i=0}^L\\tbinom{L}{i}(\\omega_{k}^{j}\\times S)^i)_{1,y}$$\n\u77e9\u9635\u8fd9\u4e00\u4e32\u67ff\u5b50\u4e0d\u7981\u8ba9\u4eba\u8054\u60f3\u5230**\u4e8c\u9879\u5f0f\u5b9a\u7406**\uff0c\u6211\u4eec\u5982\u679c\u8bb0\u5355\u4f4d\u77e9\u9635\u4e3a$I$\u6709\uff1a\n$$ans_t=\\frac{1}{k}\\sum_{j=0}^{k-1}\\omega_{k}^{-tj}(G_0\\sum_{i=0}^L\\tbinom{L}{i}(\\omega_{k}^{j}\\times S)^iI^{L-i})_{1,y}$$\n\u4e8e\u662f\u6b64\u65f6\u7684\u5e42\u5f62\u5f0f\u5c31\u663e\u800c\u6613\u89c1\u4e86\u3002\n$$ans_t=\\frac{1}{k}\\sum_{j=0}^{k-1}\\omega_{k}^{-tj}(G_0(\\omega_k^jS+I)^L)_{1,y}$$\n\u5982\u679c\u6211\u4eec\u8bb0$f_i=(G_0(\\omega_k^iS+I)^L)_{1,y}$\uff0c\u5c31\u53ef\u4ee5\u5427\u7b54\u6848\u5199\u6210\u6bd4\u8f83\u7b80\u5355\u7684\u5f62\u5f0f\u3002\n$$ans_t=\\frac{1}{k}\\sum_{j=0}^{k-1}\\omega_{k}^{-tj}f_j$$\n\u8fd9\u4e2a$\\omega_{k}^{-tj}$\u5c31\u8981\u7528\u5230`Bluestein's Algorithm`\u8fd9\u4e2a\u542c\u8d77\u6765\u975e\u5e38\u9ad8\u5927\u4e0a\u5b9e\u9645\u4e0a\u5e76\u4e0d\u96be\u7684\u4e1c\u897f\u3002\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u628a$ij$\u62c6\u6389\uff0c\u53d8\u6210\u4e0e$i,j$\u4e00\u6b21\u5173\u7cfb\uff0c\u7136\u540e\u5c31\u53ef\u4ee5`\u5377`\u4e86\u3002\n\n\u4f46\u8fd9\u9898$ij=\\frac{(i+j)^2}{2}-\\frac{i^2}{2}-\\frac{j^2}{2}$\u672c\u9898\u4f3c\u4e4e\u4e0d\u592a\u884c\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u51fa\u73b0$\\frac{1}{2}$\u6b21\u4f46\u5355\u4f4d\u6839\u53ef\u80fd\u6ca1\u6709\u4e8c\u6b21\u5269\u4f59\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u53e6\u4e00\u79cd\u5947\u602a\u7684\u65b9\u6cd5\uff1a\n$ij=\\tbinom{i+j}{2}-\\tbinom{i}{2}-\\tbinom{j}{2}$\uff0c\u6b63\u786e\u6027\u62c6\u5f00\u6765\u5c31\u884c\u4e86\u3002\u8fd9\u6837\u5c31\u5168\u90e8\u662f\u6574\u6570\u4ece\u800c\u907f\u514d\u4e86\u4e8c\u6b21\u5269\u4f59\u3002\n\n\u90a3\u4e48\u5e26\u8fdb\u53bb\uff1a\n$$ans_t=\\frac{1}{k}\\sum_{j=0}^{k-1}\\omega_{k}^{-\\tbinom{t+j}{2}+\\tbinom{t}{2}+\\tbinom{j}{2}}f_j$$\n\u6574\u7406\u4e00\u4e0b\u3002\n$$ans_t=\\frac{\\omega_{k}^\\tbinom{t}{2}}{k}\\sum_{j=0}^{k-1}\\omega_{k}^{-\\tbinom{t+j}{2}}\\times \\omega_{k}^\\tbinom{j}{2}f_j$$\n\u5982\u679c\u6211\u4eec\u8bb0$c_{k+t}=\\dfrac{ans_tk}{\\omega_{k}^\\tbinom{t}{2}}$\uff0c$a_i=\\omega_{k}^{-\\tbinom{i}{2}}$,$b_{t-i}=\\omega_{k}^\\tbinom{i}{2}f_i$\n$$c_{k+t}=\\sum_{i=0}^{k-1}a_{t+i}b_{k-i}$$\n`MTT`\u968f\u4fbf\u5377\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\u4e0d\u8fc7\u6ce8\u610f$a$\u9700\u8981\u500d\u957fQwQ\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nnamespace in{\n\tchar buf[1<<21],*p1=buf,*p2=buf;\n\tinline int getc(){return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;}\n\ttemplate <typename T>inline void read(T& t){\n\t\tt=0;int f=0;char ch=getc();while (!isdigit(ch)){if(ch=='-')f = 1;ch=getc();}\n\t    while(isdigit(ch)){t=t*10+ch-48;ch = getc();}if(f)t=-t;\n\t}\n\ttemplate <typename T,typename... Args> inline void read(T& t, Args&... args){read(t);read(args...);}\n}\nnamespace out{\n\tchar buffer[1<<21];int p1=-1;const int p2 = (1<<21)-1;\n\tinline void flush(){fwrite(buffer,1,p1+1,stdout),p1=-1;}\n\tinline void putc(const char &x) {if(p1==p2)flush();buffer[++p1]=x;}\n\ttemplate <typename T>void write(T x) {\n\t\tstatic char buf[15];static int len=-1;if(x>=0){do{buf[++len]=x%10+48,x/=10;}while (x);}else{putc('-');do {buf[++len]=-(x%10)+48,x/=10;}while(x);}\n\t\twhile (len>=0)putc(buf[len]),--len;\n\t}\n}\ntypedef std::complex<double>complex;\nconst int N=4e6+10;const double PI=acos(-1);const complex I=complex(0,1);\nint rev[N];complex Wn[N];int M,mod;\nint ksm(int x,int y) {\n\tint re=1;\n\tfor(;y;y>>=1,x=1LL*x*x%mod)if(y&1)re=1LL*re*x%mod;\n\treturn re;\n}\ninline long long num(complex x){double d=x.real();return d<0?(long long)(d-0.5)%mod:(long long)(d+0.5)%mod;}\nstruct poly{\n\tstd::vector<complex>a0,a1;\n\tint size(){return a0.size();}\n    void resize(int n){a0.resize(n);a1.resize(n);}\n\tvoid set(int x,long long y){\n\t\ty%=mod;\n\t\ta0[x]=y/M;\n\t\ta1[x]=y%M;\n\t}\n\tlong long get(int x){return (M*M*num(a0[x].real())%mod +\n\t\t\t\tM*(num(a0[x].imag())+num(a1[x].real()))%mod+num(a1[x].imag()))%mod;}\n\tlong long val(int x){return (long long)(M*a0[x].real()+a1[x].real()+mod)%mod;}\n};\npoly operator+(poly a,poly b){\n    int n=std::max(a.size(),b.size());a.resize(n),b.resize(n);\n    for(int i=0;i<n;i++)a.set(i,a.val(i)+b.val(i));return a;\n}\npoly operator-(poly a,poly b){\n    int n=std::max(a.size(),b.size());a.resize(n),b.resize(n);\n    for(int i=0;i<n;i++)a.set(i,a.val(i)-b.val(i));return a;\n}\ninline poly one(){poly a;a.resize(1);a.set(0,1);return a;}\ninline int ext(int n){int k=0;while((1<<k)<n)k++;return k;}\ninline void init(int k){\n\tint n=1<<k;\n\tfor(int i=0;i<n;i++)\n\t\trev[i]=(rev[i>>1]>>1)|((i&1)<<(k-1));\n\tfor(int i=0;i<n;i++)\n\t\tWn[i]={cos(PI/n*i),sin(PI/n*i)};\n}\nvoid FFT(std::vector<complex>&A,int n,int t){\n\tif(t<0)for(int i=1;i<n;i++)if(i<(n-i))std::swap(A[i],A[n-i]);\n\tfor(int i=0;i<n;i++)\n\t\tif(i<rev[i])std::swap(A[i],A[rev[i]]);\n\tfor(int m=1;m<n;m<<=1)\n\t\tfor(int i=0;i<n;i+=m<<1)\n\t\t\tfor(int k=i;k<i+m;k++){\n\t\t\t\tcomplex W=Wn[1ll*(k-i)*n/m];\n\t\t\t\tcomplex a0=A[k],a1=A[k+m]*W;\n\t\t\t\tA[k]=a0+a1;A[k+m]=a0-a1; \n\t\t\t}\n\tif(t<0)for(int i=0;i<n;i++)A[i]/=n;\n}\nvoid MTT(poly &A,int n,int t){\n\tfor(int i=0;i<n;i++)A.a0[i]=A.a0[i]+I*A.a1[i];\n\tFFT(A.a0,n,t);\n\tfor(int i=0;i<n;i++)A.a1[i]=std::conj(A.a0[i?n-i:0]);\n\tfor(int i=0;i<n;i++){\n\t\tcomplex p=A.a0[i],q=A.a1[i];\n\t\tA.a0[i]=(p+q)*0.5;A.a1[i]=(q-p)*0.5*I;\n\t}\n}\ninline poly operator*(poly a,poly b){\n    int n=a.size()+b.size()-1,k=ext(n);\n    a.resize(1<<k),b.resize(1<<k),init(k);\n    MTT(a,1<<k,1);MTT(b,1<<k,1);\n\tfor(int i=0;i<(1<<k);i++){\n\t\tcomplex p=a.a0[i]*b.a0[i]+I*a.a1[i]*b.a0[i];\n\t\tcomplex q=a.a0[i]*b.a1[i]+I*a.a1[i]*b.a1[i];\n\t\ta.a0[i]=p,a.a1[i]=q;\n\t}\n    FFT(a.a0,1<<k,-1);FFT(a.a1,1<<k,-1);a.resize(n);\n\tlong long tmp;for(int i=0;i<n;i++)\n\t\ttmp=a.get(i),a.set(i,tmp);\n\treturn a;\n}\nstruct modint{\n    int x;\n    modint(int o=0){x=o;}\n    modint &operator = (int o){return x=o,*this;}\n    modint &operator +=(modint o){return x=x+o.x>=mod?x+o.x-mod:x+o.x,*this;}\n    modint &operator -=(modint o){return x=x-o.x<0?x-o.x+mod:x-o.x,*this;}\n    modint &operator *=(modint o){return x=1ll*x*o.x%mod,*this;}\n    modint &operator ^=(int b){\n        modint a=*this,c=1;\n        for(;b;b>>=1,a*=a)if(b&1)c*=a;\n        return x=c.x,*this;\n    }\n    modint &operator /=(modint o){return *this *=o^=mod-2;}\n    modint &operator +=(int o){return x=x+o>=mod?x+o-mod:x+o,*this;}\n    modint &operator -=(int o){return x=x-o<0?x-o+mod:x-o,*this;}\n    modint &operator *=(int o){return x=1ll*x*o%mod,*this;}\n    modint &operator /=(int o){return *this *= ((modint(o))^=mod-2);}\n\ttemplate<class I>friend modint operator +(modint a,I b){return a+=b;}\n    template<class I>friend modint operator -(modint a,I b){return a-=b;}\n    template<class I>friend modint operator *(modint a,I b){return a*=b;}\n    template<class I>friend modint operator /(modint a,I b){return a/=b;}\n    friend modint operator ^(modint a,int b){return a^=b;}\n    friend bool operator ==(modint a,int b){return a.x==b;}\n    friend bool operator !=(modint a,int b){return a.x!=b;}\n    bool operator ! () {return !x;}\n    modint operator - () {return x?mod-x:0;}\n\tmodint &operator++(int){return *this+=1;}\n};\nstruct Mat{\n\t//\u77e9\u9635\n\tint n,m;modint val[5][5]; \n\tmodint*operator[](const int x){return val[x];}\n\tfriend Mat operator*(Mat A,modint B){\n\t\tfor(int i=1;i<=A.n;i++)for(int j=1;j<=A.m;j++)A[i][j]*=B;\n\t\treturn A;\n\t}\n\tfriend Mat operator*(Mat A,Mat B){\n\t\tstatic Mat C;if(A.m!=B.n)exit(11);\n\t\tC.n=A.n,C.m=B.m;\n\t\tfor(int i=1;i<=C.n;i++)\n\t\t\tfor(int j=1;j<=C.m;j++){\n\t\t\t\tC[i][j]=0;\n\t\t\t\tfor(int k=1;k<=A.m;k++)\n\t\t\t\t\tC[i][j]+=A[i][k]*B[k][j];\n\t\t\t}\n\t\treturn C;\n\t}\n\tfriend Mat operator+(Mat A,Mat B){\n\t\tif(A.n!=B.n||A.m!=B.m)exit(12);\n\t\tfor(int i=1;i<=A.n;i++)for(int j=1;j<=A.m;j++)A[i][j]+=B[i][j];\n\t\treturn A;\n\t}\n\t\n};\nint n,k,L,x,y;\nMat _1,S,G0;\nmodint w[N];\nMat operator^(Mat A,int B){\n\tMat tmp=_1;\n\twhile(B){\n\t\tif(B&1)tmp=tmp*A;\n\t\tA=A*A;B>>=1;\n\t}return tmp;\n}\nmodint getG(int x){\n\tstatic int p[50],o=0;\n\tfor(int i=2,y=x-1;i<=y;i++)\n\t\tif(y%i==0){\n\t\t\tp[++o]=i;\n\t\t\twhile(y%i==0)y/=i;\n\t\t}\n\tfor(int i=2;;i++){\n\t\tbool flag=true;\n\t\tfor(int j=1;j<=o;j++)if((modint(i)^((mod-1)/p[j]))==1){flag=false;break;}\n\t\tif(flag)return i;\n\t}\n}\n#define C2(x) (1ll*(x)*(x-1)/2) \nsigned main(){\n\t//freopen(\"1.in\",\"r\",stdin);\n\tin::read(n,k,L,x,y,mod);M=sqrt(mod);\n\t_1.n=_1.m=n;for(int i=1;i<=n;i++)_1[i][i]=1;\n\tS.n=S.m=n;for(int i=1;i<=n;i++)for(int j=1;j<=n;j++)in::read(S[i][j]);\n\tG0.n=1;G0.m=n;G0[1][x]=1;\n\tw[0]=1;w[1]=getG(mod)^((mod-1)/k);\n\tfor(int i=2;i<=k;i++)w[i]=w[i-1]*w[1];\n\t//out::write(getG(mod).x);\n\tpoly a,b;a.resize(2*k);b.resize(k+1);\n\tfor(int i=0;i<2*k;i++)a.set(i,w[(k-C2(i)%k)%k].x);\n\t//for(int i=0;i<2*k;i++)std::cout<<a.val(i)<<\" \";std::cout<<std::endl;\n\tfor(int i=0;i<k;i++)b.set(k-i,(w[C2(i)%k]*(G0*((S*w[i]+_1)^L))[1][y]).x);\n\t//for(int i=0;i<k;i++)std::cout<<b.val(i)<<\" \";std::cout<<std::endl;\n\tpoly c=a*b;\n\tfor(int i=0;i<k;i++)out::write((c.val(k+i)*w[C2(i)%k]/k).x),out::putc('\\n');\n\tout::flush();\n\treturn 0;\n}\n```",
        "postTime": 1609909683,
        "uid": 174304,
        "name": "jun\u5934\u5409\u5409",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5293 \u3010[HNOI2019]\u767d\u5154\u4e4b\u821e\u3011"
    },
    {
        "content": "\u6211\u4eec\u5148\u6765\u8003\u8651\uff0c\u5982\u679c\u7ed9\u5b9a $m$\uff08\u957f\u5ea6\uff09\uff0c\u600e\u4e48\u6c42\u65b9\u6848\u6570\u3002\n\n\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u628a\u6a2a\u7740\uff08\u4e8c\u5143\u7ec4\u7684\u7b2c\u4e00\u7ef4\uff09\u7684\u5355\u72ec\u8003\u8651\uff0c\u5373\u6211\u4eec\u8981\u5728 $L$ \u4e2a\u6a2a\u5750\u6807\u5185\u9009\u51fa $m$ \u4e2a\u7ecf\u8fc7\u7684\u6a2a\u5750\u6807\uff0c\u8fd9\u90e8\u5206\u7684\u65b9\u6848\u4e3a $\\dbinom{L}{m}$\uff1b\u7136\u540e\u8003\u8651\u7eb5\u5750\u6807\uff0c\u5f53 $n=1$ \u7684\u65f6\u5019\u663e\u7136\u662f $w_{1,1}^m$\uff0c\u5f53 $n>1$ \u65f6\uff0c\u5982\u679c\u4e0a\u4e00\u6b65\u5728 $a$\uff0c\u53d1\u73b0\u4f1a\u7ed9\u4e0b\u4e00\u6b65\u7684 $1-n$ \u5206\u522b\u8d21\u732e $w_{a,1},w_{a,2},\\dots,w_{a,n}$\uff0c\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u77e9\u9635\u4e58\u6cd5\u7684\u5f62\u5f0f\uff0c\u8bb0 $W$ \u4e3a\n$$\n\\begin{bmatrix}\nw_{1,1}  & \\dots & w_{1,n}\\\\\n\\vdots  & \\ddots &  \\vdots \\\\\nw_{n,1}  & \\dots & w_{n,n}\n\\end{bmatrix}\n$$\n\u5373\u7b2c\u4e8c\u7ef4\u7684\u90bb\u63a5\u77e9\u9635\uff0c\u4e3a\u4e86\u9632\u6b62\u53d8\u91cf\u91cd\u590d\uff0c\u6211\u4eec\u8bb0\u9898\u76ee\u4e2d\u7684 $x,y$ \u4e3a $a,b$\uff0c\u90a3\u4e48 $\\dbinom{L}{m}W^m_{a,b}$ \u5c31\u662f\u7b54\u6848\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u7528\u591a\u9879\u5f0f\u6765\u8868\u793a\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u5373\u6211\u4eec\u6784\u9020\u4e00\u4e2a\u7cfb\u6570\u4e3a\u77e9\u9635\u7684\u591a\u9879\u5f0f\uff1a\n$$\nF(x)=(I+Wx)^L\n$$\n\u5176\u4e2d $I$ \u662f\u5355\u4f4d\u77e9\u9635\uff0c\u5219 $\\left([x^m]F(x)\\right)_{a,b}$ \u5c31\u662f\u7b54\u6848\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u9898\u76ee\u8981\u6c42\u7684\u662f\u6240\u6709\u6a21 $k$ \u7b49\u4e8e $t$ \u7684 $m$ \u7684\u7b54\u6848\u4e4b\u548c\uff0c\u5373\n$$\n\\sum\\limits_{m\\equiv t\\pmod k}\\left([x^m]F(x)\\right)_{a,b}\n$$\n\u90a3\u4e48\u6211\u4eec\u5c31\u662f\u8981\u6c42\n$$\nans_t=\\sum\\limits_{m\\equiv t\\pmod k}\\left([x^m]F(x)\\right)_{a,b}\n$$\n\u6839\u636e\u5355\u4f4d\u6839\u53cd\u6f14\u7684\u7b80\u5355\u63a8\u5e7f\uff0c\u53ef\u4ee5\u5f97\u5230\n$$\n\\begin{aligned}\nans_t&=\\sum\\limits_{m\\equiv t\\pmod k}\\left([x^m]F(x)\\right)_{a,b}\\\\\n&=\\frac{1}{k}\\sum\\limits_{j=0}^{k-1}w_k^{-tj}F(w_k^j)_{a,b}\n\\end{aligned}\n$$\n\u63a8\u5bfc\u8fc7\u7a0b\u53ef\u4ee5\u770b[\u8fd9\u91cc](https://s1rius.gitee.io/2020/07/28/\u5355\u4f4d\u6839\u53cd\u6f14/#more)\uff0c\u6ce8\u610f\u5355\u4f4d\u6839\u53cd\u6f14\u5bf9\u77e9\u9635\u4e5f\u662f\u6210\u7acb\u7684\uff08\u4f3c\u4e4e\u53ea\u9700\u8981\u6ee1\u8db3\u6570\u4e58\u5bf9\u52a0\u6cd5\u6709\u5206\u914d\u5f8b\u5c31\u53ef\u4ee5\uff09\u3002\n\n\u663e\u7136 $F(w_k^j)_{a,b}$ \u53ef\u4ee5\u901a\u8fc7\u77e9\u9635\u5feb\u901f\u5e42\u6765\u6c42\uff08\u628a\u90bb\u63a5\u77e9\u9635\u4e58\u4e0a $w_k^j$ \u518d\u52a0\u4e0a\u5355\u4f4d\u77e9\u9635\u7684 $L$ \u6b21\u65b9\uff09\uff0c\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\u6211\u4eec\u8981\u5bf9\u6bcf\u4e2a $0\\leqslant t\\leqslant k-1$ \u90fd\u6c42\u51fa $ans_t$\u3002\n\n\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u4efb\u610f\u57fa IDFT \u7684\u5f62\u5f0f\uff0c\u5e76\u4e14\u4e0d\u4e00\u5b9a\u5b58\u5728 $2k$ \u6b21\u5355\u4f4d\u6839\uff0c\u6211\u4eec\u8003\u8651\u4f7f\u7528 Bluestein's Algorithm \u7684\u5f62\u5f0f\u4e8c\uff0c\u5373\u628a $-tj$ \u62c6\u6210 $\\dbinom{t}{2}+\\dbinom{j}{2}-\\dbinom{t+j}{2}$\uff0c\u90a3\u4e48\u5e26\u5165\u5e76\u5316\u7b80\uff1a\n$$\n\\begin{aligned}\nans_t&=\\frac{1}{k}\\sum\\limits_{j=0}^{k-1}w_k^{-tj}F(w_k^j)_{a,b}\\\\\n&=\\frac{1}{k}\\sum\\limits_{j=0}^{k-1}w_k^{\\binom{t}{2}+\\binom{j}{2}-\\binom{t+j}{2}}F(w_k^j)_{a,b}\\\\\n&=\\frac{w_k^{\\binom{t}{2}}}{k}\\sum\\limits_{j=0}^{k-1}w_k^{\\binom{j}{2}-\\binom{t+j}{2}}F(w_k^j)_{a,b}\\\\\n\\end{aligned}\n$$\n\u8bbe $A(x)=\\sum\\limits_iw_k^{\\binom{i}{2}}F(w_k^j)_{a,b}x^i$\uff0c$B(x)=\\sum\\limits_iw_k^{-\\binom{i}{2}}x^i$\u540e\u9762\u662f\u4e00\u4e2a\u5dee\u4e00\u5b9a\u7684\u5377\u79ef\u5f62\u5f0f\uff0c\u53ef\u4ee5\u901a\u8fc7\u53cd\u8f6c $B$ \u6c42\u89e3\u3002\n\n\u7531\u4e8e\u8fd9\u9898\u4e0d\u4e00\u5b9a\u662f NTT \u6a21\u6570\uff0c\u6240\u4ee5\u9700\u8981\u81ea\u5df1\u627e\u5230\u539f\u6839\u7136\u540e\u5199\u4e00\u4e2a MTT\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint F[400005],G[400005],H[400005],g,n,k,l,a,b,p;\nnamespace poly\n{\n    long double const pi=acos(-1);\n    struct comp\n    {\n        long double r,i;\n        comp(){r=i=0;}\n        comp(long double x,long double y){r=x,i=y;}\n        comp conj(){return comp(r,-i);}\n        friend comp operator +(comp x,comp y){return comp(x.r+y.r,x.i+y.i);}\n        friend comp operator -(comp x,comp y){return comp(x.r-y.r,x.i-y.i);}\n        friend comp operator *(comp x,comp y){return comp(x.r*y.r-x.i*y.i,x.i*y.r+x.r*y.i);}\n    };\n    typedef long long ll;\n    int r[400005];\n    comp a[400005],b[400005],c[400005],d[400005];\n    void fft(comp *f,int n,int op)\n    {\n        for(int i=1;i<n;i++)r[i]=(r[i>>1]>>1)+((i&1)?(n>>1):0);\n        for(int i=1;i<n;i++)if(i<r[i])swap(f[i],f[r[i]]);\n        for(int len=2;len<=n;len<<=1)\n        {\n            int q=len>>1;\n            comp wn=comp(cos(pi/q),op*sin(pi/q));\n            for(int i=0;i<n;i+=len)\n            {\n                comp w=comp(1,0);\n                for(int j=i;j<i+q;j++,w=w*wn)\n                {\n                    comp d=f[j+q]*w;\n                    f[j+q]=f[j]-d;\n                    f[j]=f[j]+d;\n                }\n            }\n        }\n    }\n    void mtt(int *f,int *g,int *h,int n,int p)\n    {\n        for(int i=0;i<n;i++)\n            a[i].r=(f[i]>>15),a[i].i=(f[i]&32767),\n            c[i].r=(g[i]>>15),c[i].i=(g[i]&32767);\n        fft(a,n,1),fft(c,n,1);\n        for(int i=1;i<n;i++)b[i]=a[n-i].conj();\n        b[0]=a[0].conj();\n        for(int i=1;i<n;i++)d[i]=c[n-i].conj();\n        d[0]=c[0].conj();\n        for(int i=0;i<n;i++)\n        {\n            comp \n            aa=(a[i]+b[i])*comp(0.5,0),\n            bb=(a[i]-b[i])*comp(0,-0.5),\n            cc=(c[i]+d[i])*comp(0.5,0),\n            dd=(c[i]-d[i])*comp(0,-0.5);\n            a[i]=aa*cc+comp(0,1)*(aa*dd+bb*cc),b[i]=bb*dd;\n        }\n        fft(a,n,-1),fft(b,n,-1);\n        for(int i=0;i<n;i++)\n        {\n            int \n            aa=(ll)(a[i].r/n+0.5)%p,\n            bb=(ll)(a[i].i/n+0.5)%p,\n            cc=(ll)(b[i].r/n+0.5)%p;\n            h[i]=((1ll*aa*(1<<30)+1ll*bb*(1<<15)+cc)%p+p)%p;\n        }\n    }\n}\nusing poly::mtt;\nint pw(int x,int y)\n{\n    int res=1;\n    while(y)\n    {\n        if(y&1)res=1ll*res*x%p;\n        x=1ll*x*x%p;\n        y>>=1;\n    }\n    return res;\n}\ninline int mod(int x){return x>=p?x-p:x;}\nint get(int x)\n{\n    vector<int>v;\n    int t=p-1;\n    for(int i=2;i*i<=t;i++)\n    {\n        if(!(t%i))\n        {\n            v.push_back(i);\n            while(!(t%i))t/=i;\n        }\n    }\n    for(int i=2;i<=p-1;i++)\n    {\n        bool flag=1;\n        for(int j=0;j<v.size();j++)\n            if(pw(i,(p-1)/v[j])==1){flag=0;break;}\n        if(flag)return i;\n    }\n}\nstruct matrix\n{\n    int s[4][4];\n    matrix(){memset(s,0,sizeof(s));}\n    friend matrix operator *(matrix a,matrix b)\n    {\n        matrix tmp;\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=n;j++)\n                for(int k=1;k<=n;k++)\n                    tmp.s[i][j]=mod(tmp.s[i][j]+1ll*a.s[i][k]*b.s[k][j]%p);\n        return tmp;\n    }\n    friend matrix operator *(int a,matrix b)\n    {\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=n;j++)\n                b.s[i][j]=1ll*b.s[i][j]*a%p;\n        return b;\n    }\n    friend matrix operator +(matrix a,matrix b)\n    {\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=n;j++)\n                b.s[i][j]=mod(a.s[i][j]+b.s[i][j]);\n        return b;\n    }\n}W,I;\nmatrix pw2(matrix x,int y)\n{\n    matrix res=I;\n    while(y)\n    {\n        if(y&1)res=res*x;\n        x=x*x;\n        y>>=1;\n    }\n    return res;\n}\nint main()\n{\n    scanf(\"%d%d%d%d%d%d\",&n,&k,&l,&a,&b,&p);\n    g=get(p);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            scanf(\"%d\",&W.s[i][j]);\n    for(int i=1;i<=n;i++)I.s[i][i]=1;\n    int wk=pw(g,(p-1)/k),w=1;\n    for(int i=0;i<k;i++,w=1ll*w*wk%p)\n        F[i]=1ll*pw(wk,(1ll*i*(i-1)/2)%k)*pw2(w*W+I,l).s[a][b]%p;\n    for(int i=0;i<(k<<1);i++)\n        G[i]=1ll*pw(wk,(p-1-(1ll*i*(i-1)/2%k)));\n    reverse(G,G+(k<<1));\n    int lim=1,inv=pw(k,p-2);\n    while(lim<(k<<1)+1)lim<<=1;\n    mtt(F,G,H,lim,p);\n    reverse(H,H+(k<<1));\n    for(int i=0;i<k;i++)printf(\"%lld\\n\",1ll*inv*H[i]%p*pw(wk,(1ll*i*(i-1)/2)%k)%p);\n    return 0;\n}\n```\n\n",
        "postTime": 1596677524,
        "uid": 96912,
        "name": "AzusaCat",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5293 \u3010[HNOI2019]\u767d\u5154\u4e4b\u821e\u3011"
    },
    {
        "content": "\u611f\u89c9\u6bd4\u60f3\u8c61\u4e2d\u7684\u7b80\u5355\u591a\u4e86\u3002\u3002\u3002\u9664\u4e86\u6bd4\u8f83\u7f1d\u5408\u4e4b\u5916\u6ca1\u4ec0\u4e48\u96be\u70b9\u3002\u3002\u3002\n\n\u663e\u7136\u6709 DP\uff1a\n\n\u8bbe $f[t][i][k]$ \u8868\u793a\u76ee\u524d\u5728\u7b2c $t$ \u884c $i$ \u5217\uff0c\u8d70\u7684\u6b65\u6570\u5bf9 $k$ \u53d6\u6a21\u7684\u65b9\u6848\u6570\uff0c$g[t][i][k]=\\sum_{j=0}^{i}f[t][j][k]$\u3002\n\n\u663e\u7136\u6709 $f[t][i][k]=\\sum_{x=1}^{n}g[x][i-1][k-1\\bmod K]\\times w[p][q]$\n\n\u76f4\u63a5\u628a $k$ \u7684\u7ef4\u5ea6\u770b\u6210\u591a\u9879\u5f0f\uff0c\u663e\u7136\u662f\u4e00\u4e2a\u5faa\u73af\u5377\u79ef\uff0c\u6709\uff1a\n$$f[q][i](x)=\\sum_{p=1}^{n}g[p][i-1](x)\\times w[p][q](x)$$\n$$g[q][i](x)=g[q][i-1](x)+\\sum_{p=1}^{n}g[p][i-1](x)\\times w[p][q](x)$$\n\u5bf9\u4e8e\u5faa\u73af\u5377\u79ef\u6700\u597d\u7684\u529e\u6cd5\u662f FFT\uff0c\u6ce8\u610f\u5230 $k\\mid(p-1)$ \u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u5355\u4f4d\u6839\uff1a\n$$g[q][i](\\omega_k^t)=g[q][i-1](\\omega_k^t)+\\sum_{p=1}^{n}g[p][i-1](\\omega_k^t)\\times w[x][t](\\omega_k^t)$$\n\u53ea\u9700\u8981\u5728\u6700\u5f00\u59cb\u7684\u65f6\u5019\u5bf9\u6240\u6709\u76f8\u5173\u7684\u4e1c\u897f\u505a\u4e00\u904d\u957f\u5ea6\u4e3a $k$ \u7684 FFT \u5373\u53ef\uff0c\u8fd9\u91cc\u4f7f\u7528 Z \u53d8\u6362\u5373\u53ef\u3002\n\n\u7ee7\u7eed\uff0c\u6bcf\u6b21\u5bf9 $\\omega_k^t$ \u76f8\u540c\u7684\u90e8\u5206\u505a\uff1a\n$$g_q[i]=g_q[i-1]+\\sum_{p=1}^{n}g_p[i-1]\\times w[p][q]$$\n\u8fd9\u91cc\u5c31\u6709\u5e38\u7cfb\u6570\u9f50\u6b21\u7ebf\u6027\u9012\u63a8\u7684\u5f71\u5b50\u4e86\u3002\n\n\u8fd9\u91cc\u7a0d\u5fae\u63a8\u4e00\u4e0b\u53ef\u4ee5\u7528\u5e38\u7cfb\u6570\u9f50\u6b21\u7ebf\u6027\u9012\u63a8\uff0c\u6216\u8005\u5077\u61d2\u7528\u77e9\u5feb\u4e5f\u884c\u3002\n\n\u590d\u6742\u5ea6 $O(k\\log k+kn^3\\log L)$\uff0c\u7a33\u7684\u3002\n\n\u4ee5\u53ca\u8fd9\u9898\u4efb\u610f\u6a21\u6570\u9700\u8981 MTT\uff0c\u4e0d\u61c2\u4e3a\u4ec0\u4e48\u9700\u8981\u5355\u4f4d\u6839\u53cd\u6f14\u3002\n\n\u6ce8\u610f\u5230\u8fb9\u754c\u6761\u4ef6\u662f $f[x][0][0]=1$\uff0c\u90a3\u4e48\u663e\u7136\u6709 $f[t][0](w_k^t)=[t=x]$\u3002\n\n\u800c $w[x][y](w_k^t)$ \u5f88\u663e\u7136\u662f\u4e00\u4e2a\u7c7b\u4f3c $c^t\\times w[x][y]$ \u7684\u4e1c\u897f\uff0c\u53ef\u4ee5\u4f7f\u7528 $c^{tL}\\times w^L$ \u53ea\u7b97\u4e00\u6b21\u77e9\u5feb\uff0c\u590d\u6742\u5ea6\u80fd\u591f\u88ab\u4f18\u5316\u5230 $O(k\\log k+n^3\\log L)$\u3002\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<cmath>\n#define IMP(lim,act) for(int qwq=(lim),i=0;i^qwq;++i)act\ntypedef double db;\nconst db Pi=acos(-1);\nconst int M=1<<16|5;\ninline int read(){\n\tint n(0);char s;while(!isdigit(s=getchar()));while(n=n*10+(s&15),isdigit(s=getchar()));return n;\n}\ninline void write(int n){\n\tstatic char s[15];int top(0);while(s[++top]=n%10^48,n/=10);while(putchar(s[top]),--top);putchar(10);\n}\nstruct Barrett{\n\ttypedef unsigned long long ull;\n\ttypedef __uint128_t LL;\n\tull B,m;\n\tBarrett(const ull&m=2):m(m),B((LL(1)<<64)/m){}\n\tfriend inline ull operator%(const ull&a,const Barrett&mod){\n\t\tull r=a-mod.m*(LL(mod.B)*a>>64);return r>=mod.m?r-mod.m:r;\n\t}\n}mod;\nint n,k,L,x,y,g,P,W[3][3],f[M];\nint w1,c[M<<1],ic[M<<1],F[M<<1],G[M<<1],H[M<<1];\ninline void swap(int&a,int&b){\n\tint c=a;a=b;b=c;\n}\ninline int qpow(int a,int b){\n\tint ans(1);for(;b;b>>=1,a=1ll*a*a%mod)if(b&1)ans=1ll*ans*a%mod;return ans;\n}\ninline int findg(int P){\n\tstatic int p[10];int len(0),phi=P-1;\n\tfor(int i=2;i*i<=phi;++i)if(!(phi%i)){\n\t\tp[++len]=i;while(!(phi%i))phi/=i;\n\t}\n\tif(phi^1)p[++len]=phi;\n\tint g=2;\n\twhile(true){\n\t\tbool typ(true);\n\t\tfor(int i=1;i<=len;++i)if(qpow(g,(P-1)/p[i])==1){\n\t\t\ttyp=false;break;\n\t\t}\n\t\tif(typ)return g;++g;\n\t}\n\treturn-1;\n}\nstruct complex{\n\tdb x,y;\n\tcomplex(const db&x=0,const db&y=0):x(x),y(y){}\n\tinline complex operator+(const complex&it)const{\n\t\treturn complex(x+it.x,y+it.y);\n\t}\n\tinline complex operator-(const complex&it)const{\n\t\treturn complex(x-it.x,y-it.y);\n\t}\n\tinline complex operator*(const complex&it)const{\n\t\treturn complex(x*it.x-y*it.y,x*it.y+y*it.x);\n\t}\n}buf[M<<2],*w[20];\ninline int Getlen(const int&n){\n\tint len(0);while((1<<len)<n)++len;return len;\n}\ninline void swap(complex&a,complex&b){\n\tcomplex c=a;a=b;b=c;\n}\ninline int Get(const db&x){\n\treturn((long long)floor(x+.5))%mod;\n}\ninline void init(const int&n){\n\tconst int&m=Getlen(n);complex*now=buf;w[m]=now;now+=1<<m;\n\tIMP(1<<m,w[m][i]=complex(std::cos(i*Pi/(1<<m)),std::sin(i*Pi/(1<<m))));\n\tfor(int k=m-1;k>=0&&(w[k]=now,now+=1<<k);--k)IMP(1<<k,w[k][i]=w[k+1][i<<1]);\n}\ninline void DFT(complex*f,const int&M){\n\tconst int&n=1<<M;\n\tfor(int len=n>>1,d=M-1;d>=0;--d,len>>=1)for(int k=0;k^n;k+=len<<1){\n\t\tcomplex*W=w[d],*L=f+(k),*R=f+(k|len),x,y;IMP(len,(x=*L,y=*R)),*L++=(x+y),*R++=*W++*(x-y);\n\t}\n}\ninline void IDFT(complex*f,const int&M){\n\tconst int&n=1<<M;\n\tfor(int len=1,d=0;d^M;++d,len<<=1)for(int k=0;k^n;k+=len<<1){\n\t\tcomplex*W=w[d],*L=f+(k),*R=f+(k|len),x,y;IMP(len,(x=*L,y=*W++**R)),*L++=(x+y),*R++=(x-y);\n\t}\n\tIMP(n,(f[i].x/=n,f[i].y/=n));for(int i=1;(i<<1)<n;++i)swap(f[i],f[n-i]);\n}\ninline void MTT(int*f,int*g,int*h,const int&n,const int&m,const int&LEN){\n\tstatic complex Q[M<<1],P[M<<1],T[M<<1];const int&len=Getlen(LEN);\n\tIMP(n,(Q[i].x=f[i]&32767,P[i].x=f[i]>>15));IMP(m,T[i]=complex(g[i]&32767,g[i]>>15));\n\tDFT(Q,len);DFT(P,len);DFT(T,len);IMP(1<<len,(Q[i]=Q[i]*T[i],P[i]=P[i]*T[i]));IDFT(Q,len);IDFT(P,len);\n\tIMP(LEN,h[i]=(Get(Q[i].x)+(1ll*Get(Q[i].y+P[i].x)<<15)+(1ll*Get(P[i].y)<<30))%mod);\n\tIMP(1<<len,Q[i]=P[i]=T[i]=0);\n}\ninline void czt_init(const int&n){\n\tc[0]=ic[0]=1;c[1]=w1=qpow(g=findg(P),(P-1)/n);ic[1]=qpow(c[1],P-2);\n\tfor(int i=2;i^n+n-1;++i)c[i]=1ll*c[i-1]*c[1]%mod;for(int i=2;i^n;++i)ic[i]=1ll*ic[i-1]*ic[1]%mod;\n\tfor(int i=1;i^n+n-1;++i)c[i]=1ll*c[i-1]*c[i]%mod;for(int i=1;i^n;++i)ic[i]=1ll*ic[i-1]*ic[i]%mod;\n\tIMP(n+n-1,G[i]=c[i]);\n}\ninline void CZT(int*f,const int&n,const bool&typ){\n\tIMP(n,F[n-i]=1ll*f[i]*ic[i])%mod;\n\tMTT(F,G,H,n+1,n+n-1,n+n);IMP(n,f[i]=1ll*H[n+i]*ic[i]%mod);IMP(n+n,F[i]=H[i]=0);\n\tif(typ)for(int i=1;(i<<1)<n;++i)swap(f[i],f[n-i]);const int&k=qpow(n,P-2);IMP(n,f[i]=1ll*f[i]*k%mod);\n}\nnamespace MATRIX{\n\tconst int S=3;\n\tstruct Matrix{\n\t\tint a[S][S];\n\t\tMatrix(){\n\t\t\tfor(int i=0;i^n;++i)for(int j=0;j^n;++j)a[i][j]=0;\n\t\t}\n\t\tinline Matrix&I(){\n\t\t\tfor(int i=0;i^n;++i)for(int j=0;j^n;++j)a[i][j]=i==j;return*this;\n\t\t}\n\t\tinline int*operator[](const int&x){\n\t\t\treturn a[x];\n\t\t}\n\t\tinline Matrix operator*(Matrix b){\n\t\t\tstatic long long c[S][S];Matrix ans;\n\t\t\tfor(int i=0;i^n;++i)for(int j=0;j^n;++j)for(int k=0;k^n;++k)c[i][j]+=1ll*a[i][k]*b[k][j];\n\t\t\tfor(int i=0;i^n;++i)for(int j=0;j^n;++j)ans[i][j]=c[i][j]%mod,c[i][j]=0;return ans;\n\t\t}\n\t\tinline Matrix pow(int b){\n\t\t\tMatrix ans,base=*this;ans.I();for(;b;b>>=1,base=base*base)if(b&1)ans=ans*base;return ans;\n\t\t}\n\t};\n}\nsigned main(){\n\tMATRIX::Matrix m;\n\tn=read();k=read();L=read();x=read()-1;y=read()-1;mod=Barrett(P=read());init(k<<1);czt_init(k);\n\tfor(int i=0;i^n;++i)for(int j=0;j^n;++j)W[i][j]=read();for(int x=0;x^n;++x)for(int y=0;y^n;++y)m[x][y]=W[x][y];\n\tfor(int i=0;i^k;++i){\n\t\tfor(int x=0;x^n;++x)++m[x][x];f[i]=m.pow(L)[x][y];for(int x=0;x^n;++x)--m[x][x];\n\t\tfor(int x=0;x^n;++x)for(int y=0;y^n;++y)m[x][y]=1ll*m[x][y]*w1%mod;\n\t}\n\tCZT(f,k,true);IMP(k,write(f[i]));\n}\n```",
        "postTime": 1656489146,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u591a\u9879\u5f0f Z\u53d8\u6362 P5293\u9898\u89e3"
    },
    {
        "content": "\u4e0b\u9762\u7684 $x$ \u548c $y$ \u5747\u662f\u5355\u7eaf\u7684\u4e0b\u6807\uff0c$X$ \u548c $Y$ \u624d\u662f\u662f\u8f93\u5165\u7ed9\u5b9a\u7684 $x$ \u548c $y$\u3002\n\n\u9996\u5148 $\\rm dp$ \u4e00\u624b\uff0c\u8bbe $dp_{x,y,z}$ \u4e3a\u7528 $z$ \u6b65\u5230 $(x,y)$ \u53f7\u70b9\u7684\u65b9\u6848\u6570\u3002\n\n\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\u662f\uff1a\n\n$$dp_{x,y,z}=\\sum\\limits_{i=1}^{x-1}\\sum\\limits_{j=1}^ndp_{i,j,z-1}w_{j,y}$$\n\n\u590d\u6742\u5ea6\u7206\u70b8\uff0c\u4f18\u5316\u7684\u4e00\u822c\u60f3\u6cd5\u662f\u8bbe\u4e00\u4e2a\u524d\u7f00\u548c\u6570\u7ec4 $pre_{x,y,z}=\\sum\\limits_{i=0}^xdp_{i,y,z}$\uff0c\u6709\uff1a\n\n$$dp_{x,y,z}=\\sum\\limits_{i=1}^npre_{x-1,i,z-1}w_{i,y}$$\n\n\u65e2\u7136\u90fd\u7528\u4e86 $pre$ \u6570\u7ec4\u4e86\uff0c\u5e72\u8106\u76f4\u63a5\u8f6c\u79fb\uff1a\n\n$$pre_{x,y,z}=pre_{x-1,y,z}+\\sum\\limits_{i=1}^npre_{x-1,i,z-1}w_{i,y}$$\n\n\u6ce8\u610f\u5230\u7531\u4e8e\u6c42\u7b54\u6848\u65f6\u7ef4\u5ea6 $z$ \u662f\u6a21 $k$ \u610f\u4e49\u4e0b\u7684\uff0c\u90a3\u4e48\u8f6c\u79fb\u8fc7\u7a0b\u4e2d\u7684 $z$ \u4e5f\u53ef\u4ee5\u4e3a\u6a21 $k$ \u610f\u4e49\u4e0b\u7684\u3002\n\n\u4e5f\u5373\u8bbe $mpre_{x,y,z}=\\sum\\limits_{k|i-z}pre_{x,y,i}$\uff0c\u90a3\u4e48\uff1a\n\n$$mpre_{x,y,z}=pre_{x-1,y,z}+\\begin{cases}\\sum\\limits_{i=1}^nmpre_{x-1,i,z-1}w_{i,y}&z>0\\\\\\sum\\limits_{i=1}^nmpre_{x-1,i,k-1}w_{i,y}&z=0\\end{cases}$$\n\n\u7b2c $i$ \u4e2a\u7b54\u6848\u5c31\u662f $mpre_{L,Y,i}$\uff08\u4ee5 $0$ \u5f00\u59cb\u8ba1\u6570\uff09\uff0c\u521d\u59cb\u72b6\u6001\u4e3a $mpre_{0,X,0}=1$\u3002\n\n\u5230\u8fd9\u5c31\u662f 20pts\u3002\n\n\u53d1\u73b0 $k$ \u7684\u8303\u56f4\u6bd4\u8f83\u80fd\u63a5\u53d7\uff0c\u6240\u4ee5\u8bbe\u4e00\u4e2a\u591a\u9879\u5f0f\u628a\u7b2c\u4e09\u7ef4\u538b\u8fdb\u53bb\uff1a\n\n$$f_{x,y}=\\sum\\limits_{i=0}^{k-1}mpre_{x,y,i}x^i$$\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u96c6\u4f53\u8f6c\u79fb\uff08\u5047\u8bbe $n=3$\uff09\uff1a\n\n$$\\begin{bmatrix}f_{i,1}\\\\f_{i,2}\\\\f_{i,3}\\end{bmatrix}=\\begin{bmatrix}f_{i-1,1}\\\\f_{i-1,2}\\\\f_{i-1,3}\\end{bmatrix}\\begin{bmatrix}w_{1,1}x+1&w_{1,2}x&w_{1,3}x\\\\w_{2,1}x&w_{2,2}x+1&w_{2,3}x\\\\w_{3,1}x&w_{3,2}x&w_{3,3}x+1\\end{bmatrix}$$\n\n\u8fd9\u91cc\u7684\u591a\u9879\u5f0f\u4e58\u6cd5\u662f\u4e0b\u6807\u6a21 $k$ \u610f\u4e49\u4e0b\u7684\u5faa\u73af\u5377\u79ef\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u4e0b\u9762\u8bbe\u53f3\u8fb9\u90a3\u4e2a\u77e9\u9635\u4e3a $s_{x,y}=w_{x,y}x+[x=y]$\u3002\n\n\u6709\uff1a\n\n$$\\begin{bmatrix}f_{i,1}\\\\f_{i,2}\\\\f_{i,3}\\end{bmatrix}=\\begin{bmatrix}f_{0,1}\\\\f_{0,2}\\\\f_{0,3}\\end{bmatrix}s^i$$\n\n\u8981\u6c42\u7684\u7b54\u6848\u5c31\u662f $f_{L,Y}$\uff0c\u521d\u59cb\u72b6\u6001\u662f $f_{0,X}=1$\uff0c$f_{0,x}=0(x\\neq X)$\u3002\n\n\u90a3\u4e48\u7b54\u6848\u5c31\u662f $s^L$ \u8fd9\u4e2a\u77e9\u9635\u7684\u7684\u7b2c $X$ \u884c\u7b2c $Y$ \u5217\u7684\u591a\u9879\u5f0f\u7684\u7cfb\u6570\u3002\n\n\u4e0d\u8fc7\u5373\u4f7f $n$ \u5947\u5c0f\u65e0\u6bd4\uff0c\u76f4\u63a5\u505a\u77e9\u9635\u5feb\u901f\u5e42\u5957 `FFT` \u8fd8\u662f\u4f1a\u70b8\u5230\u98de\u8d77\u3002\n\n\u7531\u4e8e\u6211\u4eec\u662f\u8981\u6c42\u4e00\u4e2a\u591a\u9879\u5f0f\uff0c\u6240\u4ee5\u4e00\u4e2a\u60f3\u6cd5\u662f\u9009\u4e00\u4e9b\u70b9\uff0c\u628a\u5b83\u4ee3\u8fdb\u53bb\u7528\u77e9\u9635\u5feb\u901f\u5e42\u7b97\u70b9\u503c\uff0c\u7136\u540e\u518d\u7528 `IFFT` \u6216\u591a\u70b9\u6c42\u503c\u7b49\u65b9\u6cd5\u628a\u5b83\u63d2\u56de\u6765\u3002\n\n\u4f46\u662f\u8fd9\u91cc\u8981\u505a\u7684\u662f\u5faa\u73af\u5377\u79ef\u800c\u4e0d\u662f\u4e00\u822c\u52a0\u6cd5\u5377\u79ef\uff0c\u6240\u4ee5\u968f\u4fbf\u9009\u70b9\u4f1a\u51fa\u95ee\u9898\u3002\n\n\u6ce8\u610f\u5230 `FFT` \u672c\u8d28\u4e0a\u4e5f\u662f\u5faa\u73af\u5377\u79ef\uff0c\u8fd9\u63d0\u793a\u6211\u4eec\u9009\u5355\u4f4d\u6839\u3002\n\n\u4e5f\u5373\u5bf9\u4e8e $0\\le i<k$\uff0c\u9009\u5355\u4f4d\u6839 $x=\\omega_k^i$ \u4ee3\u5165 $s$ \u77e9\u9635\u5185\u8fdb\u884c\u77e9\u9635\u5feb\u901f\u5e42\u6c42\u7b54\u6848\u591a\u9879\u5f0f\u70b9\u503c\uff0c\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u5728\u5faa\u73af\u5377\u79ef\u610f\u4e49\u4e0b\u7531\u70b9\u503c\u8fd8\u539f\u56de\u6765\u7684\u591a\u9879\u5f0f\u4e5f\u662f\u6b63\u786e\u7684\u3002\n\n\u6c42\u70b9\u503c\u590d\u6742\u5ea6 $O(n^3k\\log L)$\uff0c\u524d\u9762\u7684\u6c42\u539f\u6839\u590d\u6742\u5ea6\u5ffd\u7565\u4e0d\u8ba1\u3002\n\n\u73b0\u5728\u6211\u4eec\u6709\u591a\u9879\u5f0f\u70b9\u503c\u4e86\uff0c\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u8fd8\u539f\u591a\u9879\u5f0f\u3002\n\n\u7531\u4e8e $k$ \u4e0d\u662f $2$ \u7684\u5e42\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5 `INTT`\u3002\n\n\u4f46\u662f\u770b `INTT` \u7684\u8fc7\u7a0b\uff1a\n\n> \u628a\u70b9\u503c\u6362\u6210\u7cfb\u6570\uff0c$\\omega_n^1$ \u6362\u6210 $\\omega_n^{-1}$\uff0c\u7136\u540e\u505a\u4e00\u904d `NTT`\uff0c\u518d\u628a\u7b54\u6848\u9664 $n$ \u5373\u53ef\u3002\n\n\u5176\u5b9e\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u505a\u6cd5\u7684\u6b63\u786e\u6027\u8bc1\u660e\u662f\u548c $n$ \u662f $2$ \u7684\u5e42\u8fd9\u4e2a\u6027\u8d28\u65e0\u5173\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a\u8fd9\u4e2a\u505a\u6cd5\u76f4\u63a5\u5957\u8fc7\u6765\u7528\u3002\n\n\u6362\u53e5\u8bdd\u8bf4\u8bbe\u63d2\u51fa\u6765\u7b2c $i$ \u4e2a\u70b9\u503c\u4e3a $d_i$\uff0c\u4e5f\u5373 $d_i=f_{L,Y}(\\omega_k^i)$\uff0c\u90a3\u4e48\u6709\uff1a\n\n$$mpre_{L,Y,i}=\\frac1k\\sum\\limits_{j=0}^{k-1}d_j(\\omega_k^{-i})^j$$\n\n\u8fd9\u4e2a\u4e1c\u897f\u7684\u505a\u6cd5\u53ef\u4ee5\u53bb\u770b [\u8fd9\u4e2a\u9898](https://www.luogu.com.cn/problem/P6800)\u3002\n\n\u7531\u4e8e\u8fd9\u91cc\u662f\u6a21 $p$ \u610f\u4e49\u4e0b\u7684\u8fd0\u7b97\uff0c\u800c\u4e14\u7528\u590d\u6570\u4f1a\u7206\u7cbe\u5ea6\uff0c\u6240\u4ee5\u5355\u4f4d\u6839 $\\omega_k^i$ \u5b9e\u9645\u4e0a\u662f\u539f\u6839 $g^{\\frac{p-1}ki}$\uff0c\u9898\u76ee\u4fdd\u8bc1\u7684 $k|p-1$ \u5c31\u662f\u8fd9\u6837\u7528\u7684\u3002\n\n\u8fd8\u8981\u6ce8\u610f\u8981\u7528 `MTT` \u6216\u4e09\u6a21 `NTT`\uff0c\u8fd9\u4e2a\u90e8\u5206\u590d\u6742\u5ea6 $O(k\\log k)$\uff0c\u603b\u590d\u6742\u5ea6 $O(k\\log k+n^3k\\log L)$\u3002\n\n\u7136\u540e\u8fd9\u4e2a\u9898\u5c31\u6ca1\u4e86\uff0c\u5176\u5b9e\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u505a\u6cd5\u7684\u672c\u8d28\u548c\u76f4\u63a5\u63a8\u5f0f\u5b50\u7684\u505a\u6cd5\u7684\u672c\u8d28\u4e00\u6a21\u4e00\u6837\u3002\n",
        "postTime": 1646219864,
        "uid": 336630,
        "name": "dcmfqw",
        "ccfLevel": 0,
        "title": "\u767d\u5154\u4e4b\u821e\u9898\u89e3"
    },
    {
        "content": "## \u524d\u8a00\n\n[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.luogu.com.cn/blog/wangrx/solution-p5293)\n\n> \u6211\u6210\u529f\u4e86\u3002\u6211\u4e0d\u518d\u662f\u4ee5\u524d\u7684\u90a3\u4e2a\u6211\u4e86\u3002  \n> \u2014\u2014\u2014\u2014 by Karry5307\n\n\u5f53\u5e74\u4e0e $\\mathsf{A\\color{red}krry}$ \u4e00\u540c\u53c2\u52a0 HNOI2019\uff0c\u7136\u540e 30pts \u6eda\u7c97\uff0c\u81ea\u95ed\u4e86 QAQ\u3002\n\n\u5b66\u4e60\u4e86\u5355\u4f4d\u6839\u53cd\u6f14\u540e\uff0c\u82b1\u4e86 1h\uff0c\u7ec8\u4e8e\u5207\u6389\u8fd9\u9898\u3002\n\n~~\u5373\u4fbf\u5b66\u4e86\u5355\u4f4d\u6839\u53cd\u6f14\uff0c\u8fd9\u9898\u8fd8\u662f\u5f88\u6bd2\u7624\u3002~~\n\n## \u9898\u89e3\n\n### 25pts\n\u8003\u8651 dp\u3002\n\n\u8bbe $f_{u,v,m}$ \u8868\u793a\u8df3 $m$ \u6b65\u5230 $(u,v)$ \u7684\u65b9\u6848\u603b\u6570\uff0c\u5219\u6709\n\n$$f_{0,x,0}=1,f_{u,v,m}=\\sum_{u_0=0}^{u-1}\\sum_{v_0=1}^nf_{u_0,v_0,m-1}w_{v_0,v}$$\n\n\u8fd9\u4e2a $\\displaystyle\\sum_{v_0=1}^n$ \u5bf9\u751f\u6210\u51fd\u6570\u5f88\u4e0d\u53cb\u597d\u3002  \n\u67e5\u770b\u6570\u636e\u8303\u56f4\uff0c\u53d1\u73b0 $1\\le n\\le 3$ \u3002\u4e8e\u662f\u8003\u8651\u77e9\u9635\u5feb\u901f\u5e42\uff1a\n\n$$\n\\vec{f}_{u,m}=\\begin{bmatrix}f_{u,1,m}&f_{u,2,m}&\\cdots&f_{u,n,m}\\end{bmatrix}\\\\\nW=\\begin{bmatrix}\nw_{1,1}&w_{1,2}&\\cdots&w_{1,n}\\\\\nw_{2,1}&w_{2,2}&\\cdots&w_{2,n}\\\\\n\\vdots&\\vdots&\\vdots&\\vdots\\\\\nw_{n,1}&w_{n,2}&\\cdots&w_{n,n}\n\\end{bmatrix}\\\\\n\\begin{matrix}\n\\\\\nf_{0,x,0}=1\\\\f_{0,v,0}=0&(v\\not=x)\\\\\n\\vec{f}_{u,0}=\\vec{0}&(u>0)\\\\\n\\end{matrix}\\\\\n\\vec{f}_{u,m}=\\displaystyle\\sum_{u_0=0}^{u-1}\\vec{f}_{u_0,m-1}W\n$$\n\n\u77e9\u9635\u4e58\u6cd5 $\\times$ \u5173\u4e8e\u77e9\u9635\u52a0\u6cd5 $+$ \u6ee1\u8db3\u5206\u914d\u5f8b\uff0c\u56e0\u800c $W$ \u4f1a\u5728\u53f3\u8fb9\u7d2f\u79ef\u3002\n\n\u8bbe $\\displaystyle(\\sum\\ ^{(0)}f)(x)=f(x),(\\sum\\ ^{(m)} f)(x)=\\sum_{x_0=0}^{x-1}(\\sum\\ ^{(m-1)}f)(x_0)$\uff0c\u5219\u6709\n\n$$\u03f5(x)=\\begin{cases}\n\t1&(x=0)\\\\0&(x\\not=0)\n\\end{cases},\\vec{f}_{u,m}=(\\sum\\ ^{(m)}\u03f5)(u)\\vec{f}_{0,0}W^m$$\n\n$\\displaystyle(\\sum\\ ^{(m)}\u03f5)(u)$ \u4f7f\u7528\u6709\u9650\u5fae\u79ef\u5206,\u53d1\u73b0\u5c31\u662f $\\dfrac{u^{\\underline{m}}}{m!}=\\dbinom{u}{m}$ \u3002\n\n\u8bbe $m\\bmod k=t$ \u65f6\u7684\u7b54\u6848\u4e3a $ans_t$\uff0c\u5219   \n$$ans_t=(\\sum_{m=0}^L[m\\bmod k=t]\\binom{L}{m}\\vec{f}_{0,0}W^m)_y$$\n\n\u7528\u8fd9\u4e2a\u67ff\u5b50\u76f4\u63a5 $\\Theta(Ln^3)$ \u9012\u63a8\uff0c\u53ef\u4ee5\u5f97\u5230 25 pts \u7684\u6210\u7ee9\u3002\n\n### 100 pts\n\n\u82e5\u53bb\u6389 $[m\\bmod k=t]$ \u7684\u9650\u5236\uff0c\u5219\u6709 \n$$\\sum_{m=0}^L\\binom{L}{m}\\vec{f}_{0,0}W^m=\\vec{f}_{0,0}\\sum_{m=0}^L\\binom{L}{m}W^m=\\vec{f}_{0,0}(W+I)^m$$\n\u5176\u4e2d $I$ \u4e3a\u5355\u4f4d\u77e9\u9635\u3002\n\n\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a\n$$[n|k]=\\dfrac{1}{n}\\sum_{i=0}^{n-1}\\omega_n^{ik}$$\n\u5176\u4e2d $\\omega_n$ \u4e3a $n$ \u6b21\u5355\u4f4d\u6839\uff0c\u8fd9\u4e2a\u7ed3\u8bba\u88ab\u79f0\u4e3a\u5355\u4f4d\u6839\u53cd\u6f14\u3002  \n\n\u5176\u5b9e\u5f88\u597d\u7406\u89e3\uff0c\u82e5 $n|k$\uff0c\u5219 $\\omega_{n}^{ik}=1$ \u3002  \n\u5426\u5219\u5c31\u662f\u4e2a\u7b49\u6bd4\u6570\u5217\u6c42\u548c\uff0c$\\displaystyle\\sum_{i=0}^{n-1}\\omega_n^{ik}=\\frac{\\omega_n^{nk}-1}{\\omega_n^k-1}=\\frac{0}{\\omega_n^k-1}=0$ \u3002\n\n\u7531\u4e8e\u6a21\u6570\u4e3a\u8d28\u6570\uff0c\u4e14\u4e3a $k$ \u7684\u500d\u6570\uff0c\u53ef\u4ee5\u7528\u6700\u5c0f\u539f\u6839\u6c42\u51fa $\\omega_k$ \u3002\n\n\u539f\u6839\u5224\u522b\u6cd5\uff1a  \n\u82e5\u5bf9\u4e8e $\\varphi(p)$ \u7684\u4efb\u610f\u8d28\u56e0\u5b50 $a$\uff0c$g^\\frac{\\varphi(p)}{a}\\equiv 1\\pmod{p}$\uff0c\u5219 $g$ \u4e3a $p$ \u7684\u539f\u6839\u3002  \n\u6700\u5c0f\u539f\u6839\u4e0d\u8d85\u8fc7 $p^{0.25}$\u3002$p$ \u4e3a\u8d28\u6570\u65f6\uff0c$\\varphi(p)=p-1$ \u3002\n\n$[m\\bmod k=t]=[k|(m-t)]$\uff0c\u5957\u5355\u4f4d\u6839\u53cd\u6f14\u7684\u7ed3\u8bba\uff0c\u5f97\u5230\n\n$$\nans_t=(\\sum_{m=0}^L\\frac{1}{k}\\sum_{i=0}^{k-1}\\omega_k^{i(m-t)}\\binom{L}{m}\\vec{f}_{0,0}W^m)_y\\\\\nans_t=\\frac{1}{k}(\\sum_{i=0}^{k-1}\\sum_{m=0}^L\\omega_k^{im}\\omega_k^{-it}\\binom{L}{m}\\vec{f}_{0,0}W^m)_y\\\\\nans_t=\\frac{1}{k}\\sum_{i=0}^{k-1}\\omega_k^{-it}(\\vec{f}_{0,0}\\sum_{m=0}^L\\binom{L}{m}\\omega_k^{im}W^m)_y\\\\\nans_t=\\frac{1}{k}\\sum_{i=0}^{k-1}\\omega_k^{-it}(\\vec{f}_{0,0}(\\omega_k^iW+I)^L)_y\n$$\n\n\u7528\u77e9\u9635\u5feb\u901f\u5e42 $\\Theta(k\\log L)$ \u6c42\u51fa $g_i=(\\vec{f}_{0,0}(\\omega_k^iW+I)^L)_y$ \u3002\u4e8e\u662f\u6709 \n\n$$ans_t=\\frac{1}{k}\\sum_{i=0}^{k-1}\\omega_k^{-it}g_i$$\n\n\u6b64\u65f6\u5df2\u7ecf\u53ef\u4ee5\u591a\u70b9\u6c42\u503c\u4e86\uff0c\u4f46\u7531\u4e8e\u662f MTT\uff0c\u4f1a\u88ab\u5361\u5e38\u3002\n\n\u8fd9\u65f6\uff0c\u53ef\u4ee5\u628a $it$ \u62c6\u6210 $\\dfrac{1}{2}((t+i)^{\\underline{2}}-t^{\\underline{2}}-i^{\\underline{2}})=\\dbinom{t+i}{2}-\\dbinom{t}{2}-\\dbinom{i}{2}$\uff0c\u90a3\u4e48\n\n$$ans_t=\\frac{1}{k}\\sum_{i=0}^{k-1}\\omega_k^{\\binom{t}{2}+\\binom{i}{2}-\\binom{t+i}{2}}g_i=\\frac{\\omega_k^\\binom{t}{2}}{k}\\sum_{i=0}^{k-1}\\omega_k^\\binom{i}{2}g_i\\omega_k^\\binom{t+i}{2}$$\n\n\u8bbe $h_i=\\omega_k^\\binom{k-1-i}{2}[0\\le i\\le k-1],s_i=\\omega^\\binom{i}{2}_kg_i$\uff0c\u5219 \n$$\\sum_{i=0}^{k-1}\\omega_k^\\binom{i}{2}g_i\\omega_k^\\binom{t+i}{2}=\\sum_{i=0}^{k-1}s_ih_{(k-1-t-i)\\bmod k}$$\n$$=\\sum_{i=0}^{k-t-1}s_ih_{k-t-1-i}+\\sum_{i=k-t}^{k-1}s_ih_{(k-1-t-i)\\bmod k}$$\n$$=(s\\times h)_{k-1-t}+\\sum_{i=k-t}^{k-1}s_{i}h_{2k-1-t-i}$$\n$$=(s\\times h)_{k-1-t}+\\sum_{i=0}^{2k-1-t}s_ih_{2k-1-t-i}$$\n$$=(s\\times h)_{k-1-t}+(s\\times h)_{2k-1-t}$$\n\n\u4e8e\u662f\u4e00\u6b21\u5377\u79ef $\\Theta(k\\log k)$ \u5373\u53ef\u6c42\u5f97\u3002  \n\u6700\u7ec8\u590d\u6742\u5ea6 $\\Theta(k(\\log L+\\log k))$ \u3002\n\n### code\n```cpp\n/* \nthis code is made by wangrx\n2021.4.7 15:03\n*/\n#include<stdio.h>\n#include<string.h>\n#include<cmath>\ntypedef double db;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef unsigned int word;\ntypedef unsigned char byte;\nstruct READ{//\u5feb\u8bfb\n\tchar c;\n\tinline READ(){c=getchar();}\n\ttemplate<typename type>\n\tinline READ& operator >>(register type& num){\n\t\twhile('0'>c||c>'9') c=getchar();\n\t\tfor(num=0;'0'<=c&&c<='9';c=getchar())\n\t\t\tnum=num*10+(c-'0');\n\t\treturn *this;\n\t}\n}cin;\nword mod;\ninline ull pow(register ull a,register word b){\n\tregister ull ans=1;\n\tfor(;b;b>>=1){\n\t\tif(b&1) (ans*=a)%=mod;\n\t\t(a*=a)%=mod;\n\t}\n\treturn ans;\n}//\u5feb\u901f\u5e42\nstruct complex{\n\tdb real,imag;\n\tinline complex(){}\n\tinline complex(const complex& p){\n\t\treal=p.real,imag=p.imag;}\n\tinline complex(db a,db b=0){real=a,imag=b;}\n\tinline complex operator ~(){\n\t\treturn complex(real,-imag);}\n\tinline complex operator +(const complex &p){\n\t\treturn complex(real+p.real,imag+p.imag);}\n\tinline complex operator -(const complex &p){\n\t\treturn complex(real-p.real,imag-p.imag);}\n\tinline complex operator *(const complex &p){\n\t\treturn complex(real*p.real-imag*p.imag,\n\t\t\treal*p.imag+imag*p.real);}\n\tinline void operator +=(const complex &p){\n\t\treal+=p.real,imag+=p.imag;}\n};//\u590d\u6570\u7c7b\n#define mx 17\n#define mx_ 16\nstruct FFT{\n\tcomplex root[1<<mx],inv[1<<mx],eax[1<<mx],ebx[1<<mx];\n\tword realid[1<<mx];\n\tinline FFT(){\n\t\tfor(register word i=0,head;head=i,i<1<<mx;++i)\n\t\t\tfor(register byte floor=0;floor<mx;++floor,head>>=1)\n\t\t\t\trealid[i]=realid[i]<<1|(head&1);\n\t\troot[1<<mx_]=inv[1<<mx_]=1;\n\t\tfor(register word i=1;i<1<<mx_;++i){\n\t\t\t#define PI std::acos(-1.0)/(1<<mx_)\n\t\t\troot[1<<mx_|i]=complex(std::cos(PI*i),std::sin(PI*i));\n\t\t\tinv[1<<mx_|i]=~root[1<<mx_|i];\n\t\t\t#undef PI\n\t\t}\n\t\tfor(register word i=(1<<mx_)-1;i;--i)\n\t\t\troot[i]=root[i<<1],inv[i]=inv[i<<1];\n\t}\n\t#define fftfor(size)\t\\\n\t\tfor(register word floor=1;floor<1u<<(size);floor<<=1)\t\t\t\\\n\t\t\tfor(register word head=0;head<1u<<(size);head+=floor<<1)\t\\\n\t\t\t\tfor(register word i=0;i<floor;++i)\n\t#define fft(num,root)(\t\t\t\t\t\t\\\n\t\tnum2=num[head|i|floor]*root[i|floor],\t\\\n\t\tnum[head|i|floor]=num[head|i]-num2,\t\t\\\n\t\tnum[head|i]+=num2)\n\t#define id(size,i) (realid[i]>>(mx-(size)))\n\t#define FOR(size) for(register word i=0;i<1u<<(size);++i)\n\t#define cover(eax,ecx,edx)(\t\\\n\t\tnum1=eax[i]+eax[((1u<<size)-i)&~(1u<<size)],\t\\\n\t\tnum2=eax[i]-eax[((1u<<size)-i)&~(1u<<size)],\t\\\n\t\tecx[i]=complex(num1.real/2,num2.imag/2),\t\\\n\t\tedx[i]=complex(num1.imag/2,-num2.real/2))\n\tcomplex ecx[1<<mx],edx[1<<mx],eex[1<<mx],efx[1<<mx];\n\tinline void operator()(word size,\n\t\tword *f,word *g,word *f_times_g){//MTT\n\t\tFOR(size){\n\t\t\tregister word head=id(size+1,i);\n\t\t\teax[head]=complex(f[i]>>16,f[i]&0xffff);\n\t\t\tebx[head]=complex(g[i]>>16,g[i]&0xffff);\n\t\t\thead=id(size+1,i+(1u<<size));\n\t\t\teax[head]=ebx[head]=0;\n\t\t}\n\t\t++size;\n\t\tregister complex num1,num2;\n\t\tfftfor(size) fft(eax,root),fft(ebx,root);\n\t\tFOR(size) cover(eax,ecx,edx),cover(ebx,eex,efx);\n\t\tnum1=complex(0,1);\n\t\tFOR(size){\n\t\t\tregister word head=id(size,i);\n\t\t\teax[head]=ecx[i]*eex[i]+num1*edx[i]*efx[i];\n\t\t\tebx[head]=ecx[i]*efx[i]+num1*edx[i]*eex[i];\n\t\t}\n\t\tfftfor(size) fft(eax,inv),fft(ebx,inv);\n\t\tFOR(size){\n\t\t\tregister ull out=0;\n\t\t\tout=(ull)(eax[i].real/(1u<<size)+0.5)%mod;\n\t\t\tout=(ull)(ebx[i].real/(1u<<size)+0.5)%mod+(out%mod<<16)%mod;\n\t\t\tout=(ull)(ebx[i].imag/(1u<<size)+0.5)%mod+out%mod;\n\t\t\tout=(ull)(eax[i].imag/(1u<<size)+0.5)%mod+(out%mod<<16)%mod;\n\t\t\tf_times_g[i]=out%mod;\n\t\t}\n\t}\n\t#undef fftfor\n\t#undef fft\n\t#undef id\n\t#undef cover\n}fft;\nword L,begin,end;\ntemplate<word n,word m>\nstruct matrix{//\u77e9\u9635\n\tword num[n][m];\n\tinline matrix(){\n\t\tmemset(this,0,sizeof(matrix));}\n\tinline matrix(const matrix& p){\n\t\tmemcpy(this,&p,sizeof(matrix));}\n\tinline word* operator[](word id){\n\t\treturn num[id];}\n\tinline void operator *=(ull x){\n\t\tfor(register word i=0;i<n;++i)\n\t\t\tfor(register word j=0;j<m;++j)\n\t\t\t\tnum[i][j]=x*num[i][j]%mod;\n\t}\n\tinline void operator +=(const matrix &p){\n\t\tfor(register word i=0;i<n;++i)\n\t\t\tfor(register word j=0;j<m;++j)\n\t\t\t\tif((num[i][j]+=p.num[i][j])>=mod)\n\t\t\t\t\tnum[i][j]-=mod;\n\t}\n\ttemplate<word l>\n\tinline matrix<n,l> operator *(const matrix<m,l> &p){\n\t\tmatrix<n,l> ans;\n\t\tfor(register word i=0;i<n;++i)\n\t\t\tfor(register word j=0;j<l;++j)\n\t\t\t\tfor(register word k=0;k<m;++k)\n\t\t\t\t\tif((ans[i][j]+=(ull)(num[i][k])\n\t\t\t\t\t\t*p.num[k][j]%mod)>=mod)\n\t\t\t\t\t\t\tans[i][j]-=mod;\n\t\treturn ans;\n\t}\n\tinline matrix operator +(const matrix &p){\n\t\tmatrix out(*this);return out+=p,out;}\n\tinline matrix operator *(ull x){\n\t\tmatrix out(*this);return out*=x,out;}\n};\ntemplate<word n>\nstruct vector:matrix<1,n>{//\u5411\u91cf\n\tinline vector():matrix<1,n>(){}\n\tinline vector(const vector& p){\n\t\tmemcpy(this,&p,sizeof(vector));}\n\tinline vector(const matrix<1,n> &p){\n\t\tmemcpy(this,&p,sizeof(vector));}\n\tinline word& operator[](word id){\n\t\treturn matrix<1,n>::num[0][id];}\n};\nword size_,n,g;\ninline void getg(){//\u6c42\u6700\u5c0f\u539f\u6839\n\tword prime[32],size=0;\n\tprime[0]=1,size=0;\n\tfor(g=mod-1;(g&1)^1;g>>=1)\n\t\tif(prime[size]!=2)\n\t\t\tprime[++size]=2;\n\tfor(register ull i=3;i*i<=g;i+=2)\n\t\tfor(;g%i==0;g/=i) \n\t\t\tif(prime[size]!=i)\n\t\t\t\tprime[++size]=i;\n\tif(g!=1&&prime[size]!=g)\n\t\tprime[++size]=g;\n\t//\u5206\u89e3 mod-1 \u8d28\u56e0\u6570\n\tfor(g=2;g<mod;++g){\n\t\tregister word i;\n\t\tfor(i=1;i<=size;++i)\n\t\t\tif(pow(g,(mod-1)/prime[i])==1)\n\t\t\t\tbreak;\n\t\tif(i==size+1) return;\n\t}//\u539f\u6839\u5224\u522b\u6cd5\n}\nword eax[1<<mx],ebx[1<<mx],ecx[1<<mx];\ntemplate<byte size>\ninline void getans(){\n\tif(size<size_) return getans<size+1>();\n\tmatrix<size,size> value,I;\n\tfor(register word i=0;i<size;I[i][i]=1,++i)\n\t\tfor(register word j=0;j<size;++j)\n\t\t\tcin>>value[i][j];\n\tregister ull num1=pow(g,(mod-1)/n);\n\tregister ull num2=1;\n\t--begin,--end;\n\tfor(register word i=0;i<n;++i){\n\t\tmatrix<size,size> a=value*num2+I;\n\t\tvector<size> ans;\n\t\tans[begin]=1;\n\t\tfor(register word b=L;b;b>>=1){\n\t\t\tif(b&1) ans=ans*a;\n\t\t\ta=a*a;\n\t\t}//\u77e9\u9635\u5feb\u901f\u5e42\n\t\teax[i]=ans[end],ebx[i]=num2;//\u6c42\u5355\u4f4d\u6839\n\t\tnum2=num1*num2%mod;\n\t}\n\tfor(register ll i=0;i<n;++i){\n\t\tecx[i]=ebx[i*(i-1)/2%n];\n\t\teax[i]=(ull)(eax[i])*ecx[i]%mod;\n\t}\n\tfor(register word i=0;i<n;++i)\n\t\tebx[n-1-i]=pow(ecx[i],mod-2);\n\tfor(size_=0;1u<<size_<n;++size_);\n\tfft(size_,eax,ebx,eax);//\u5377\u79ef\u6c42\u7b54\u6848\n\tnum1=pow(n,mod-2);\n\tfor(register word i=0;i<n;++i)\n\t\tprintf(\"%llu\\n\",num1*ecx[i]%mod*(eax[n-1-i]+mod-eax[n+n-1-i])%mod);\n}\ntemplate<>\ninline void getans<4>(){\n\tperror(\"getans err\");}\nint main(){\n\tcin>>size_>>n>>L>>begin>>end>>mod;\n\tgetg(),getans<1>();\n\treturn 0;\n}\n\n```\n",
        "postTime": 1617763329,
        "uid": 104726,
        "name": "wangrx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5293 [HNOI2019]\u767d\u5154\u4e4b\u821e"
    },
    {
        "content": "\u9996\u5148\uff0c\u4e00\u4e2a\u77e9\u9635\u5feb\u901f\u5e42\u7684\u5e38\u89c4\u5e94\u7528\u662f\u6765\u8ba1\u7b97\u4e00\u4e2a\u56fe\u91cc\u9762\u957f\u5ea6\u6070\u597d\u4e3a $k$ \u7684 $x\\rightarrow y$ \u8def\u5f84\u6570\u91cf\u3002\n\n\u5047\u8bbe\u5728\u8fd9\u9053\u9898\u76ee\u91cc\u94fe\u63a5\u77e9\u9635\u4e3a $D$\u3002\u90a3\u4e48 $m$ \u6b65\u9aa4\u7684 $x\\rightarrow y$ \u8def\u5f84\u6570\u91cf\u662f $\\binom Lm (D^m)_{x,y}$\uff1b\u4e8c\u9879\u5f0f\u7cfb\u6570\u662f\u4ece\u9009\u62e9\u7b2c\u4e00\u7ef4\u662f\u4ec0\u4e48\u3002\n\n\u73b0\u5728\u53ef\u4ee5\u63a8\u5f0f\u5b50\u4e86\uff1a\n\n$$a_t=\\sum_{m=0}^L\\binom Li(D^m)_{x,y}[m\\bmod k=t]$$  \n$$a_t=\\sum_{m=0}^L\\binom Li(D^m)_{x,y}[k|m-t]$$\n\n\u5047\u8bbe\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e2a $p$ \u7684\u539f\u6839\uff0c\u90a3\u4e48\u4e45\u53ef\u4ee5\u5355\u4f4d\u6839\u53cd\u6f14\uff1a\n\n$$a_t=\\sum_{m=0}^L\\binom Li(D^m)_{x,y}\\sum_{i=0}^{k-1}\\omega_k^{i(m-t)}$$\n$$a_t=\\sum_{m=0}^L\\binom Li(D^m)_{x,y}\\sum_{i=0}^{k-1}\\omega_k^{im}\\omega_k^{-it}$$\n$$a_t=\\sum_{i=0}^{k-1}\\omega_k^{-it}\\sum_{m=0}^L\\binom Li(D^m)_{x,y}\\omega_k^{im}$$\n\n\u4ee5\u4e0b\u6839\u636e\u4e00\u4e9b\u77e9\u9635\u7684\u6027\u8d28\u3002\n\n$$a_t=\\sum_{i=0}^{k-1}\\omega_k^{-it}\\sum_{m=0}^L\\binom Li((\\omega_k^iD)^m)_{x,y}$$\n\n\u53cd\u4e8c\u9879\u5f0f\u5b9a\u7406\n\n$$a_t=\\sum_{i=0}^{k-1}\\omega_k^{-it}((\\omega_k^iD+I)^m)_{x,y}$$\n\n\u5bf9 $i=0,1,\\dots,k-1$ \u5904\u7406\u51fa\u6765 $r_i=((\\omega_k^iD+I)^m)_{x,y}$\uff1a\n\n$$a_t=\\sum_{i=0}^{k-1}\\omega_k^{-it}r_i$$\n\n$$a_t=\\sum_{i=0}^{k-1}r_i((\\omega_k^{-1})^t)^i$$\n\n\u8fd9\u4e2a\u7b49\u4ef7\u4e8e\u6709\u4e00\u4e2a\u591a\u9879\u5f0f \n\n$$P(x)=\\sum_{i=0}^{k-1}r_ir^i$$\n\n\u7136\u540e\u53c8 $a_t=P((\\omega_k^{-1})^t)$\u3002\u591a\u70b9\u6c42\u503c\uff1f~~\u663e\u7136\u70b8\u4e0a\u5929~~ \u53ef\u4ee5\u7528\u4e00\u4e2a\u53eb CZT\uff08\u601d\u60f3\u662f\u62c6\u5f00 $it$\uff09\u7684\u4e1c\u897f\u6765 $O(N\\log N)$ \u7684\u4e00\u4e2a\u591a\u9879\u5f0f\u4e58\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u4e1c\u897f\u3002\u73b0\u5728\u65f6\u95f4\u590d\u6742\u5ea6 $O(kn^3\\log L+k\\log k+\\log^7p)$\uff08\u4ece\u5de6\u5230\u53f3\uff1a\u5904\u7406 $r_i$\uff0c\u505a CZT\uff0c\u627e\u539f\u6839\uff09~~\u5b9e\u9645\u662f O(\u53ef\u8fc7\uff09~~\n\n\u4ee3\u7801\uff1a\n\n```\n// writer: w33z8kqrqk8zzzx33\n#include <bits/stdc++.h>\nusing namespace std;\n\n// begin fast read template by CYJian (source: https://www.luogu.com.cn/paste/i11c3ppx)\n\nnamespace io {\n\tconst int __SIZE = (1 << 21) + 1;\n\tchar ibuf[__SIZE], *iS, *iT, obuf[__SIZE], *oS = obuf, *oT = oS + __SIZE - 1, __c, qu[55]; int __f, qr, _eof;\n\t#define Gc() (iS == iT ? (iT = (iS = ibuf) + fread (ibuf, 1, __SIZE, stdin), (iS == iT ? EOF : *iS ++)) : *iS ++)\n\tinline void flush () { fwrite (obuf, 1, oS - obuf, stdout), oS = obuf; }\n\tinline void gc (char &x) { x = Gc(); }\n\tinline void pc (char x) { *oS ++ = x; if (oS == oT) flush (); }\n\tinline void pstr (const char *s) { int __len = strlen(s); for (__f = 0; __f < __len; ++__f) pc (s[__f]); }\n\tinline void gstr (char *s) { for(__c = Gc(); __c < 32 || __c > 126 || __c == ' ';)  __c = Gc();\n\t\tfor(; __c > 31 && __c < 127 && __c != ' '; ++s, __c = Gc()) *s = __c; *s = 0; }\n\ttemplate <class I> inline bool gi (I &x) { _eof = 0;\n\t\tfor (__f = 1, __c = Gc(); (__c < '0' || __c > '9') && !_eof; __c = Gc()) { if (__c == '-') __f = -1; _eof |= __c == EOF; }\n\t\tfor (x = 0; __c <= '9' && __c >= '0' && !_eof; __c = Gc()) x = x * 10 + (__c & 15), _eof |= __c == EOF; x *= __f; return !_eof; }\n\ttemplate <class I> inline void print (I x) { if (!x) pc ('0'); if (x < 0) pc ('-'), x = -x;\n\t\twhile (x) qu[++ qr] = x % 10 + '0',  x /= 10; while (qr) pc (qu[qr --]); }\n\tstruct Flusher_ {~Flusher_(){flush();}}io_flusher_;\n} using io::pc; using io::gc; using io::pstr; using io::gstr; using io::gi; using io::print;\n\n// end fast read template by CYJian\n\n#define iter(i, a, b) for(int i=(a); i<(b); i++)\n#define rep(i, a) iter(i, 0, a)\n#define rep1(i, a) iter(i, 1, (a)+1)\n#define log(a) cerr<<\"\\033[32m[DEBUG] \"<<#a<<'='<<(a)<<\" @ line \"<<__LINE__<<\"\\033[0m\"<<endl\n#define all(a) a.begin(), a.end()\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n \nusing ll=long long;\nusing pii=pair<int, int>;\n//#define int ll\nint p = 1000000007;\n\nint qpow(int b, int e, int MOD) {\n\tint ans = 1;\n\twhile(e) {\n\t\tif(e & 1) ans = 1ll * ans * b % MOD;\n\t\tb = 1ll * b * b % MOD;\n\t\te >>= 1;\n\t}\n\treturn ans;\n}\n\nint generator (int p) {\n    vector<int> fact;\n    int phi = p-1,  n = phi;\n    for (int i=2; i*i<=n; ++i)\n        if (n % i == 0) {\n            fact.push_back (i);\n            while (n % i == 0)\n                n /= i;\n        }\n    if (n > 1)\n        fact.push_back (n);\n\n    for (int res=2; res<=p; ++res) {\n        bool ok = true;\n        for (size_t i=0; i<fact.size() && ok; ++i)\n            ok &= qpow (res, phi / fact[i], p) != 1;\n        if (ok)  return res;\n    }\n    return -1;\n}\n\ntemplate<typename T, int S>\nstruct mat {\n\tT dat[S][S];\n\tvoid init() { rep(i, S) rep(j, S) dat[i][j] = 0; }\n\tT* operator[](int a) { return dat[a]; }\n\tT const* operator[](int a) const { return dat[a]; }\n\tmat mult(const mat&b) const {\n\t\tmat ans; ans.init(); rep(i, S) rep(j, S) rep(k, S) ans[i][k]=(ans[i][k]+dat[i][j]*b[j][k])%p;\n\t\treturn ans;\n\t}\n};\n\nusing matt=mat<ll, 3>;\n\nmatt qpow(const matt& b, const ll&e) {\n\tif(e==1) return b;\n\tif(!(e&1)) return qpow(b.mult(b),e>>1);\n\treturn qpow(b,e-1).mult(b);\n}\n\nmatt ini;\nint w, iw, n;\n\nint calc(int x, int y, int L, int j) {\n\tmatt h; h.init();\n\tll v = qpow(w, j, p);\n\trep(i, n) rep(j, n) h[i][j] = (v * ini[i][j] + (i==j)) % p;\n\treturn qpow(w, 1ll * j * (j-1) / 2 % (p - 1), p) * qpow(h, L)[x][y] % p;\n}\n\nnamespace mootootoo {\n\tusing cd=std::complex<long double>;\n\tconst long double PI=acos(-1.0);\n\n\tint rev[262144];\n\tlong double ang[20][2];\n\tcd w[20][2][262144];\n\n\tvoid constructrev(int n) {\n\t\t\tfor(int i=1, j=0; i < n; i++) {\n\t\t\t\t\tint bit = n >> 1;\n\t\t\t\t\tfor(; j & bit; bit >>= 1) j ^= bit;\n\t\t\t\t\tj ^= bit;\n\t\t\t\t\trev[i] = j;\n\t\t\t}\n\t\t\tfor(int l=1; (1<<l)<=n; l++) {\n\t\t\t\t\trep(inv, 2) {\n\t\t\t\t\t\t\tang[l][inv] = (2*inv-1)*2*PI/(1<<l);\n\t\t\t\t\t\t\tcd re(cos(ang[l][inv]), sin(ang[l][inv]));\n\t\t\t\t\t\t\tw[l][inv][0] = cd(1.0);\n\t\t\t\t\t\t\trep1(i, (1<<(l-1))) w[l][inv][i] = w[l][inv][i-1] * re;\n\t\t\t\t\t}\n\t\t\t}\n\t}\n\n\tvoid fft(cd* v, int n, bool inv) {\n\t\t\trep(i, n) if(i < rev[i]) swap(v[i], v[rev[i]]);\n\t\t\tfor(int l=1; (1<<l)<=n; l++) {\n\t\t\t\t\tfor(int i=0; i<n; i+=(1<<l)) {\n\t\t\t\t\t\t\tint p = i+(1<<(l-1));\n\t\t\t\t\t\t\titer(j, i, p) {\n\t\t\t\t\t\t\t\t\tcd a = v[j], b = v[j+(1<<(l-1))]*w[l][inv][j-i];\n\t\t\t\t\t\t\t\t\tv[j] = a+b; v[j+(1<<(l-1))] = a-b;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tif(inv) rep(i, n) v[i] /= n;\n\t}\n\n\tcd a1[65536*4], b1[65536*4];\n\tcd a2[65536*4], b2[65536*4];\n\tcd r1[65536*4], r2[65536*4], r3[65536*4];\n\tint Av[65536*4], Bv[65536*4];\n\tll ans[65536*4];\n\n\tvoid mult(const int& as, const int& bs, const int& C, const int& P) {\n\t\t\tint n = as+bs-1;\n\t\t\twhile(n - (n & (-n))) n += (n & (-n));\n\t\t\tconstructrev(n);\n\t\t\trep(i, as) {\n\t\t\t\t\ta1[i] = cd(Av[i] % C);\n\t\t\t\t\ta2[i] = cd(Av[i] / C);\n\t\t\t}\n\t\t\trep(i, bs) {\n\t\t\t\t\tb1[i] = cd(Bv[i] % C);\n\t\t\t\t\tb2[i] = cd(Bv[i] / C);\n\t\t\t}\n\t\t\tfft(a1, n, 0); fft(a2, n, 0); fft(b1, n, 0); fft(b2, n, 0);\n\t\t\trep(i, n) r1[i] = a1[i]*b1[i];\n\t\t\trep(i, n) r2[i] = (a1[i]*b2[i]+a2[i]*b1[i]);\n\t\t\trep(i, n) r3[i] = a2[i]*b2[i];\n\t\t\tfft(r1, n, 1); fft(r2, n, 1); fft(r3, n, 1);\n\t\t\tint V = C*C%P;\n\t\t\trep(i, n) ans[i] = (((ll)round(r1[i].real())%P)+C*((ll)round(r2[i].real()))%P+V*((ll)round(r3[i].real())%P))%P;\n\t}\n}\n\nsigned main() {\n    ios_base::sync_with_stdio(false); cin.tie(0);\n    int k, L, x, y; cin >> n >> k >> L >> x >> y >> p;\n\tx--; y--;\n\tint g = generator(p);\n\tw = qpow(g, (p-1)/k, p);\n\tiw = qpow(w, p-2, p);\n\tini.init();\n\trep(i, n) rep(j, n) cin >> ini[i][j];\n\trep(i, 2*k) mootootoo::Av[i] = qpow(iw, 1ll * i * (i-1) / 2 % (p - 1), p);\n\trep(i, k) mootootoo::Bv[k-1-i] = calc(x, y, L, i);\n\t//rep(i, 2*k) rep(j, 2*k) mootootoo::ans[i+j] = (mootootoo::ans[i+j] + 1ll * mootootoo::Av[i] * mootootoo::Bv[j]) % p;\n\tmootootoo::mult(2*k, 2*k, 1<<15, p);\n\tint ik = qpow(k, p-2, p);\n\trep(i, k) cout << mootootoo::ans[k-1+i] * ik % p * qpow(w, 1ll * i * (i-1) / 2 % (p-1), p) % p << endl;\n}\n\n```",
        "postTime": 1595858372,
        "uid": 220037,
        "name": "w33z8kqrqk8zzzx33",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5293 \u3010[HNOI2019]\u767d\u5154\u4e4b\u821e\u3011"
    },
    {
        "content": "### Description\n\n\u6709\u4e00\u5f20\u9876\u70b9\u6570\u4e3a $(L+1)\\times n$ \u7684\u6709\u5411\u56fe\u3002\u8fd9\u5f20\u56fe\u7684\u6bcf\u4e2a\u9876\u70b9\u7531\u4e00\u4e2a\u4e8c\u5143\u7ec4 $(u,v)$ \u8868\u793a $(0\\le u\\le L,1\\le v\\le n)$\u3002\u8fd9\u5f20\u56fe\u4e0d\u662f\u7b80\u5355\u56fe\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u9876\u70b9 $(u_1,v_1),(u_2,v_2)$\uff0c\u5982\u679c $u_1<u_2$\uff0c\u5219\u4ece $(u_1,v_1)$ \u5230 $(u_2,v_2)$ \u4e00\u5171\u6709 $w(v_1,v_2)$ \u6761\u4e0d\u540c\u7684\u8fb9\uff0c\u5982\u679c $u_1\\ge u_2$ \u5219\u6ca1\u6709\u8fb9\u3002\n\n\u767d\u5154\u5c06\u5728\u8fd9\u5f20\u56fe\u4e0a\u4e0a\u6f14\u4e00\u652f\u821e\u66f2\u3002\u767d\u5154\u521d\u59cb\u65f6\u4f4d\u4e8e\u8be5\u6709\u5411\u56fe\u7684\u9876\u70b9 $(0,x)$\u3002\n\n\u767d\u5154\u5c06\u4f1a\u8df3\u82e5\u5e72\u6b65\u3002\u6bcf\u4e00\u6b65\uff0c\u767d\u5154\u4f1a\u4ece\u5f53\u524d\u9876\u70b9\u6cbf\u4efb\u610f\u4e00\u6761\u51fa\u8fb9\u8df3\u5230\u4e0b\u4e00\u4e2a\u9876\u70b9\u3002\u767d\u5154\u53ef\u4ee5\u5728\u4efb\u610f\u65f6\u5019\u505c\u6b62\u8df3\u821e\uff08\u4e5f\u53ef\u4ee5\u6ca1\u6709\u8df3\u5c31\u76f4\u63a5\u7ed3\u675f\uff09\u3002\u5f53\u5230\u8fbe\u7b2c\u4e00\u7ef4\u4e3a $L$ \u7684\u9876\u70b9\u5c31\u4e0d\u5f97\u4e0d\u505c\u6b62\uff0c\u56e0\u4e3a\u8be5\u9876\u70b9\u6ca1\u6709\u51fa\u8fb9\u3002\n\n\u5047\u8bbe\u767d\u5154\u505c\u6b62\u65f6\uff0c\u8df3\u4e86 $m$ \u6b65\uff0c\u767d\u5154\u4f1a\u628a\u8fd9\u53ea\u821e\u66f2\u7ed9\u8bb0\u5f55\u4e0b\u6765\u6210\u4e3a\u4e00\u4e2a\u5e8f\u5217\u3002\u5e8f\u5217\u7684\u7b2c $i$ \u4e2a\u5143\u7d20\u4e3a\u5b83\u7b2c $i$ \u6b65\u7ecf\u8fc7\u7684\u8fb9\u3002\n\n\u95ee\u9898\u6765\u4e86\uff1a\u7ed9\u5b9a\u6b63\u6574\u6570 $k$ \u548c $y\\ (1\\le y\\le n)$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $t\\ (0\\le t<k)$\uff0c\u6c42\u6709\u591a\u5c11\u79cd\u821e\u66f2\uff08\u5047\u8bbe\u5176\u957f\u5ea6\u4e3a $m$\uff09\u6ee1\u8db3 $m \\bmod k=t$\uff0c\u4e14\u767d\u5154\u6700\u540e\u505c\u5728\u4e86\u5750\u6807\u7b2c\u4e8c\u7ef4\u4e3a $y$ \u7684\u9876\u70b9\uff1f\n\n\u4e24\u652f\u821e\u66f2\u4e0d\u540c\u5b9a\u4e49\u4e3a\u5b83\u4eec\u7684\u957f\u5ea6\uff08$m$\uff09\u4e0d\u540c\u6216\u8005\u5b58\u5728\u67d0\u4e00\u6b65\u5b83\u4eec\u6240\u8d70\u7684\u8fb9\u4e0d\u540c\u3002\n\n\u8f93\u51fa\u7684\u7ed3\u679c\u5bf9 $p$ \u53d6\u6a21\u3002\n\n\u5bf9\u4e8e\u5168\u90e8\u6570\u636e\uff0c$p$ \u4e3a\u4e00\u4e2a\u8d28\u6570\uff0c$10^8<p<2^{30}$\uff0c$1\\le n\\le 3$\uff0c$1\\le x\\le n$\uff0c$1\\le y\\le n$\uff0c$0\\le w(i,j)<p$\uff0c$1\\le k\\le 65536$\uff0c$k$ \u4e3a $p-1$ \u7684\u7ea6\u6570\uff0c$1\\le L\\le 10^8$\u3002\n\n### Solution\n\n\u6570\u636e\u8303\u56f4\u5df2\u7ecf\u5728\u63d0\u793a\u4f7f\u7528\u5355\u4f4d\u6839\u53cd\u6f14\u4e86\u3002\n\n\u6bcf\u6b21\u6dfb\u52a0\u4e00\u5217\u65f6\uff0c\u53ef\u4ee5\u9009\u62e9\u4e0d\u52a8\u6216\u8005\u8df3\u8fc7\u53bb\u3002\u6240\u4ee5\u4e58\u4e0a\u8f6c\u79fb\u77e9\u9635$I+W$\uff08$I$\u662f\u5355\u4f4d\u77e9\u9635\uff0c$w$\u662f\u9898\u76ee\u7ed9\u51fa\u7684\u6570\u7ec4\u6784\u6210\u7684\u77e9\u9635\uff09\u3002\n\n\u6784\u9020\u4ee5\u77e9\u9635\u4e3a\u53d8\u91cf\u7684\u751f\u6210\u51fd\u6570\uff0c$f(x)=(I+Wx)^L$\u3002\u6240\u6c42\u5373\u4e3a\n\n$$Ans_t=\\sum_{i \\mod k \\equiv t}f(x)[x^i]$$\n\n\u5957\u5355\u4f4d\u6839\u53cd\u6f14\u7684\u5f0f\u5b50\n\n$$\n\\begin{matrix}\nAns_t & = &\\frac{1}{k}\\sum_{i=0}^{k-1}f(\\omega_{k}^i)(\\omega_{k}^i)^{k-t}\\\\\n & = & \\frac{1}{k}\\sum_{i=0}^{k-1}f(\\omega_{k}^i)\\omega_{k}^{-it}\\\\\n &=&\\frac{1}{k}\\sum_{i=0}^{k-1}f(\\omega_{k}^i)\\omega_{k}^{\\binom{i+t}{2}-\\binom{i}{2}-\\binom{t}{2}}\\\\\n &=&\\frac{\\omega_{k}^{-\\binom{t}{2}}}{k}\\sum_{i=0}^{k-1}\\omega_{k}^{\\binom{i+t}{2}}f(\\omega_{k}^i)\\omega_{k}^{-\\binom{i}{2}}\\\\\n\\end{matrix}\n$$\n\n\u540e\u534a\u90e8\u5206\u662f\u4e00\u4e2a\u5377\u79ef\u7684\u5f62\u5f0f\uff0c\u9884\u5904\u7406$f$\u540e$MTT$\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nconst int maxn = 5, maxk = 65540;\n\ninline int gi()\n{\n\tchar c = getchar();\n\twhile (c < '0' || c > '9') c = getchar();\n\tint sum = 0;\n\twhile ('0' <= c && c <= '9') sum = sum * 10 + c - 48, c = getchar();\n\treturn sum;\n}\n\nint n, k, L, x, y, G, mod;\nint wk[maxk], f[maxk << 3], g[maxk << 3], h[maxk << 3];\n\ninline int add(int a, int b) {return a + b >= mod ? a + b - mod : a + b;}\ninline int sub(int a, int b) {return a >= b ? a - b : a - b + mod;}\n\ninline int fpow(int x, int k)\n{\n\tint res = 1;\n\twhile (k) {\n\t\tif (k & 1) res = (ll)res * x % mod;\n\t\tk >>= 1; x = (ll)x * x % mod;\n\t}\n\treturn res;\n}\n\nstruct matrix\n{\n\tint n, m, a[maxn][maxn];\n\tmatrix(int _n = 0, int _m = 0) {n = _n; m = _m; memset(a, 0, sizeof(a));}\n\n\tint* operator [] (int x) {return a[x];}\n\t\n\tmatrix operator * (matrix b) {\n\t\tmatrix ans(n, b.m);\n\t\tfor (int i = 1; i <= n; ++i)\n\t\t\tfor (int j = 1; j <= b.m; ++j)\n\t\t\t\tfor (int k = 1; k <= m; ++k)\n\t\t\t\t\tans[i][j] = (ans[i][j] + (ll)a[i][k] * b[k][j]) % mod;\n\t\treturn ans;\n\t}\n\n\tmatrix operator + (matrix b) {\n\t\tmatrix ans(n, m);\n\t\tfor (int i = 1; i <= n; ++i)\n\t\t\tfor (int j = 1; j <= m; ++j)\n\t\t\t\tans[i][j] = add(a[i][j], b[i][j]);\n\t\treturn ans;\n\t}\n\t\n\tmatrix operator * (int b) {\n\t\tmatrix ans(n, m);\n\t\tfor (int i = 1; i <= n; ++i)\n\t\t\tfor (int j = 1; j <= m; ++j)\n\t\t\t\tans[i][j] = (ll)a[i][j] * b % mod;\n\t\treturn ans;\n\t}\n\t\n} S, w, I;\n\ninline matrix fpow(matrix x, int k)\n{\n\tmatrix res = I;\n\twhile (k) {\n\t\tif (k & 1) res = res * x;\n\t\tx = x * x; k >>= 1;\n\t}\n\treturn res;\n}\n\nnamespace poly\n{\n\n\tconst double pi = acos(-1);\n\tstruct cpx\n\t{\n\n\t\tdouble a, b;\n\t\tinline cpx() {a = b = 0;}\n\t\tinline cpx(long double x, long double y) {a = x; b = y;}\n\t\tinline cpx operator + (const cpx &x) const { return cpx(a + x.a, b + x.b); }\n\t\tinline cpx operator - (const cpx &x) const { return cpx(a - x.a, b - x.b); }\n\t\tinline cpx operator * (const cpx &x) const { return cpx(a * x.a - b * x.b, a * x.b + b * x.a); }\n\t\tinline cpx conj() {\treturn cpx(a, -b); }\n\t\n\t} a[maxk << 3], b[maxk << 3], a1[maxk << 3], b1[maxk << 3], w[maxk << 3];\n\tint n, L, R[maxk << 3];\n\t\n\tvoid FFT(cpx *a, int f)\n\t{\n\t\tfor (int i = 0; i < n; ++i) if (i < R[i]) swap(a[i], a[R[i]]);\n\t\tcpx wn, t;\n\t\tfor (int i = 1; i < n; i <<= 1)\n\t\t\tfor (int j = 0; j < n; j += (i << 1))\n\t\t\t\tfor (int k = 0; k < i; ++k) {\n\t\t\t\t\twn = w[n / i * k];\n\t\t\t\t\tif (f == -1) wn.b = -wn.b;\n\t\t\t\t\n\t\t\t\t\tt = wn * a[j + i + k];\n\t\t\t\t\ta[j + i + k] = a[j + k] - t;\n\t\t\t\t\ta[j + k] = a[j + k] + t;\n\t\t\t\t}\n\t}\n\n\tvoid mul(int *A, int *B, int l1, int l2, int *C)\n\t{\n\t\tfor (n = 1; n < l1 + l2 - 1; n <<= 1) ++L;\n\t\t--L;\n\t\tfor (int i = 0; i < n; ++i) R[i] = (R[i >> 1] >> 1) | ((i & 1) << L);\n\t\tfor (int i = 0; i < n; ++i) w[i] = cpx(cos(pi * i / n), sin(pi * i / n));\n\n\t\tcpx ca, cb, da1, da2, db1, db2;\n\t\n\t\tfor (int i = 0; i < n; ++i) a[i] = cpx(A[i] & 32767, A[i] >> 15), b[i] = cpx(B[i] & 32767, B[i] >> 15);\n\t\tFFT(a, 1); FFT(b, 1);\n\t\tfor (int i = 0, k; i < n; ++i) {\n\t\t\tk = (n - i) & (n - 1);\n\t\t\tca = a[k].conj(); cb = b[k].conj();\n\t\t\tda1 = (a[i] + ca) * cpx(0.5, 0); da2 = (a[i] - ca) * cpx(0, -0.5);\n\t\t\tdb1 = (b[i] + cb) * cpx(0.5, 0); db2 = (b[i] - cb) * cpx(0, -0.5);\n\t\t\ta1[i] = da1 * db1 + (da1 * db2 + da2 * db1) * cpx(0, 1);\n\t\t\tb1[i] = da2 * db2;\n\t\t}\n\n\t\tFFT(a1, -1); FFT(b1, -1);\n\t\tfor (int i = 0, v1, v2, v3; i < n; ++i) {\n\t\t\tv1 = (ll)(a1[i].a / n + 0.5) % mod;\n\t\t\tv2 = (ll)(a1[i].b / n + 0.5) % mod;\n\t\t\tv3 = (ll)(b1[i].a / n + 0.5) % mod;\n\t\t\tC[i] = (((ll)v3 << 30ll) + ((ll)v2 << 15ll) + v1) % mod;\n\t\t\tif (C[i] < 0) C[i] += mod;\n\t\t}\n\t}\n\t\n}\n\t\nint calcg(int p)\n{\n\tint phi = p - 1;\n\tfor (int i = 2; ; ++i) {\n\t\tint flg = 0;\n\t\tfor (int j = 2; j * j <= phi && !flg; ++j)\n\t\t\tif (phi % j == 0) {\n\t\t\t\tflg |= fpow(i, j) == 1;\n\t\t\t\tif (j * j != phi) flg |= fpow(i, phi / j) == 1;\n\t\t\t}\n\t\tif (!flg) return i;\n\t}\n\texit(-1);\n}\n\nint main()\n{\n\tfreopen(\"dance.in\", \"r\", stdin);\n\tfreopen(\"dance.out\", \"w\", stdout);\n\t\n\tn = gi(); k = gi(); L = gi(); x = gi(); y = gi(); mod = gi();\n\tS.n = 1; S.m = w.n = w.m = I.n = I.m = n; S[1][x] = 1;\n\tfor (int i = 1; i <= n; ++i)\n\t\tfor (int j = 1; j <= n; ++j) w[i][j] = gi();\n\tfor (int i = 1; i <= n; ++i) I[i][i] = 1;\n\n\tG = calcg(mod); wk[0] = 1; wk[1] = fpow(G, (mod - 1) / k);\n\tfor (int i = 2; i <= k; ++i) wk[i] = (ll)wk[i - 1] * wk[1] % mod;\n\t\n\tfor (int i = 0; i < k; ++i) f[i] = (ll)(S * fpow(w * wk[i] + I, L))[1][y] * wk[(ll)i * (i - 1) / 2 % k] % mod;\n\tfor (int i = 0; i <= (k << 1); ++i) g[(k << 1) - i] = wk[k - (ll)i * (i - 1) / 2 % k];\n\t\n\tpoly::mul(f, g, k, (k << 1) + 1, h);\n\n\tfor (int inv = fpow(k, mod - 2), i = 0; i < k; ++i) printf(\"%lld\\n\", (ll)h[(k << 1) - i] * inv % mod * wk[(ll)i * (i - 1) / 2 % k] % mod);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1577849837,
        "uid": 119899,
        "name": "dsidsi",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5293 \u3010[HNOI2019]\u767d\u5154\u4e4b\u821e\u3011"
    },
    {
        "content": "\u849f\u84bb\u5e76\u4e0d\u4f1a\u5355\u4f4d\u6839\u53cd\u6f14\uff0c\u4f46\u662f\u4ece\u6734\u7d20\u7684DP\u4e5f\u80fd\u63a8\u51fa\u6765\u4e00\u6837\u7684\u4e1c\u897fqwq\n\n(\u5982\u679c\u56fe\u7247\u65e0\u6cd5\u663e\u793a\u53ef\u4ee5\u53bbhttps://yutong.site/?p=1388)\n\n![](https://i.loli.net/2019/04/25/5cc08e6ab8cf3.png)\n\n\n\n\u9898\u5916\u8bdd:\u6d1b\u8c37\u4ec0\u4e48\u65f6\u5019\u80fd\u652f\u6301\u591a\u884cLatex\u554aqwq..\n\n```cpp\n#include <assert.h>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <vector>\n// #include\nusing int_t = long long int;\nusing std::cin;\nusing std::cout;\nusing std::endl;\nusing real_t = double;\nusing cpx_t = struct complex;\nconst int_t LARGE = 5e5;\nconst real_t PI = acos(-1);\nstruct complex {\n    real_t real, imag;\n    complex(real_t a = 0, real_t b = 0) : real(a), imag(b) {}\n    complex operator+(const complex& rhs) const {\n        return complex{real + rhs.real, imag + rhs.imag};\n    }\n    complex operator-(const complex& rhs) const {\n        return complex{real - rhs.real, imag - rhs.imag};\n    }\n    complex operator*(const complex& rhs) const {\n        return complex{real * rhs.real - imag * rhs.imag,\n                       real * rhs.imag + imag * rhs.real};\n    }\n    complex& operator*=(const complex& rhs) {\n        *this = (*this) * rhs;\n        return *this;\n    }\n    complex conj() .{ return complex{real, -imag}; }\n};\nvoid transform(cpx_t* A, int size2, int arg);\nvoid poly_mul(const int* A, int n, const int* B, int m, int* A0, int p);\n// void transformX(int* A, int len, int g, int mod);\nvoid transformNTT(int* A, int size2, int arg, int mod, int g);\nstd::vector<int> poly_dc_mul(const std::vector<int>& A);\nvoid poly_inv(const int* A, int n, int* result);\nvoid poly_div(const int* A, int n, const int* B, int m, int* R);\nstd::vector<int> poly_eval(const std::vector<int>& poly,\n                           const std::vector<int>& vals);\nvoid transformX(int* A0, int len, int g);\nint power(int_t base, int_t index, int_t mod) {\n    int result = 1;\n    // base = (base % mod + mod) % mod;\n    index = (index % (mod - 1) + mod - 1) % (mod - 1);\n    while (index) {\n        if (index & 1) result = (int_t)result * base % mod;\n        index >>= 1;\n        base = (int_t)base * base % mod;\n    }\n    assert(result >= 0);\n    return result;\n}\nint_t mod;\nstruct Matrix {\n    int_t n;\n    int_t data[4][4];\n    int_t* operator[](int_t r) { return data[r]; }\n    int_t at(int_t r, int_t c) const { return data[r][c]; }\n    Matrix(int_t n) {\n        this->n = n;\n        memset(data, 0, sizeof(data));\n    }\n    Matrix operator*(const Matrix& rhs) const {\n        Matrix result(n);\n        for (int_t i = 1; i <= n; i++) {\n            for (int_t j = 1; j <= n; j++) {\n                for (int_t k = 1; k <= n; k++) {\n                    result[i][j] =\n                        (at(i, k) * rhs.at(k, j) % mod + mod + result[i][j]) %\n                        mod;\n                }\n            }\n        }\n        return result;\n    }\n    Matrix pow(int_t index) const {\n        Matrix base = *this, result(n);\n        for (int_t i = 1; i <= n; i++) result[i][i] = 1;\n        while (index) {\n            if (index & 1) result = result * base;\n            base = base * base;\n            index >>= 1;\n        }\n        return result;\n    }\n};\nint_t n, k, l, x, y;\nint_t mat[4][4];\nMatrix makeMatrix(int_t x0) {\n    Matrix result(n);\n    for (int_t i = 1; i <= n; i++)\n        for (int_t j = 1; j <= n; j++) {\n            result[i][j] = x0 * mat[i][j] % mod;\n            if (i == j) result[i][j] += 1;\n            result[i][j] %= mod;\n        }\n    return result;\n}\nstd::ostream& operator<<(std::ostream& os, const Matrix& mat) {\n    for (int_t i = 1; i <= mat.n; i++) {\n        for (int_t j = 1; j <= mat.n; j++) {\n            os << mat.at(i, j) << \" \";\n        }\n        cout << endl;\n    }\n    return os;\n}\nint flips[20][LARGE];\nconst auto flip = [=](int x, int size2) {\n    int result = 0;\n    for (int i = 1; i < size2; i++) {\n        result |= (x & 1);\n        x >>= 1;\n        result <<= 1;\n    }\n    return result | (x & 1);\n};\nint main() {\n    for (int i = 1; i < 19; i++) {\n        for (int j = 1; j < (1 << i); j++) flips[i][j] = flip(j, i);\n    }\n    cin >> n >> k >> l >> x >> y >> mod;\n    for (int_t i = 1; i <= n; i++)\n        for (int_t j = 1; j <= n; j++) cin >> mat[i][j];\n    Matrix M0(n);\n    static int A[LARGE + 1];\n    M0[1][x] = 1;\n    int_t g = 2;\n    std::vector<int_t> divs;\n    int_t px = mod - 1;\n    assert(px % k == 0);\n    for (int_t i = 2; i * i <= px; i++) {\n        if (px % i == 0) {\n            divs.push_back(i);\n            if (i * i != px) divs.push_back(px / i);\n        }\n    }\n    for (; g <= mod - 2; g++) {\n        bool ok = true;\n        for (int_t x : divs) {\n            if (power(g, x, mod) == 1 && x != mod - 1) {\n                ok = false;\n                break;\n            }\n        }\n        if (ok) break;\n    }\n    for (int_t i = 0; i < k; i++) {\n        int_t gx = power(g, (mod - 1) / k * i, mod);\n        auto T = makeMatrix(gx);\n        A[i] = (M0 * T.pow(l))[1][y];\n    }\n    transformX(A, k, g);\n    const int_t leninv = power(k, mod - 2, mod);\n    for (int_t i = 0; i < k; i++) printf(\"%lld\\n\", A[i] * leninv % mod);\n    return 0;\n}\nvoid transformX(int* A0, int len, int g) {\n    const auto C2 = [](int_t n) -> int_t { return n * (n - 1) / 2; };\n    int root = power(g, (mod - 1) / len, mod);\n    static int A[LARGE + 1], B[LARGE + 1], A1[LARGE + 1];\n    for (int i = 0; i <= len * 2; i++) {\n        A[i] = power(root, -C2(i), mod);\n    }\n    for (int i = 0; i < len; i++) {\n        B[i] = (int_t)A0[i] * power(root, C2(i), mod) % mod;\n    }\n    std::reverse(B, B + len + 1);\n    poly_mul(A, len * 2, B, len, A1, mod);\n    for (int i = 0; i < len; i++)\n        A0[i] = (int_t)A1[i + len] % mod * power(root, C2(i), mod) % mod;\n}\nvoid poly_mul(const int* A, int n, const int* B, int m, int* A0, int p) {\n    int size2 = 0;\n    while ((1 << size2) < n + m + 1) size2++;\n    int len = (1 << size2);\n    const int px = 3e4;\n    static cpx_t C[LARGE + 1], D[LARGE + 1], G[LARGE + 1], Px[LARGE + 1];\n    for (int i = 0; i < len; i++) {\n        if (i <= n) {\n            C[i] = cpx_t{A[i] / px};\n            D[i] = cpx_t{A[i] % px};\n        } else {\n            C[i] = D[i] = cpx_t();\n        }\n        if (i <= m) {\n            G[i] = cpx_t{B[i] / px, B[i] % px};\n        } else {\n            G[i] = cpx_t{0, 0};\n        }\n    }\n    transform(C, size2, 1);\n    transform(D, size2, 1);\n    transform(G, size2, 1);\n    for (int_t i = 0; i < len; i++) {\n        C[i] = C[i] * G[i];\n        D[i] = D[i] * G[i];\n    }\n    transform(C, size2, -1);\n    transform(D, size2, -1);\n\n    const auto make = [=](real_t x) -> int_t {\n        assert(x / len >= -1);\n        return (x / len) + 0.5;\n    };\n    for (int i = 0; i <= n + m; i++) {\n        A0[i] = ((int_t)make(C[i].real) % p * px % p * px % p +\n                 (int_t)make(C[i].imag + D[i].real) % p * px % p +\n                 make(D[i].imag) % p) %\n                p;\n    }\n}\nvoid transform(cpx_t* A, int size2, int arg) {\n    int len = (1 << size2);\n\n    for (int i = 0; i < len; i++) {\n        int x = flips[size2][i];\n        if (x > i) std::swap(A[i], A[x]);\n    }\n    for (int i = 2; i <= len; i *= 2) {\n        for (int j = 0; j < len; j += i) {\n            for (int k = 0; k < i / 2; k++) {\n                auto u = A[j + k],\n                     t = cpx_t(cos(2 * PI / i * k), sin(2 * PI / i * k) * arg) *\n                         A[j + k + i / 2];\n                A[j + k] = u + t;\n                A[j + k + i / 2] = u - t;\n            }\n        }\n    }\n}\n\n```",
        "postTime": 1556123399,
        "uid": 56891,
        "name": "officeyutong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5293 \u3010[HNOI2019]\u767d\u5154\u4e4b\u821e\u3011"
    },
    {
        "content": "\u4e4b\u524d\u683c\u5f0f\u70b8\u4e86...\n\n> \u7ed9\u5b9a\u4e00\u5f20$(L+1)*n(L\u5927,n\u5c0f)$\u7684\u7f51\u683c\u56fe,\u6c42\u4ece$(0,x)$\u5230$(?,y)$\u7ecf\u8fc7$i$\u6b65($i\\in\\{x|x\\equiv r\\bmod k\\}$)\u7684\u65b9\u6848\u6570,\u6a21\u6570\u4efb\u610f\n\n\u9996\u5148\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u6c42\u548c\u5f15\u7406(\u5355\u4f4d\u6839\u53cd\u6f14)\n$$\n\\Large \\frac{1}{n} \\sum_{i=0}^{n-1}\\omega_n^{ki} = [n|k]\n$$\n\n### Step1\n\n\u9996\u5148\u5927\u80c6$dp$\n\n\u8bbe$f_{i,j}$\u8868\u793a\u4e0d\u7ba1\u5217\u7684\u5230\u8d70$i$\u6b65(\u4ece\u7b2c$x$\u884c)\u5230$j$\u884c\u65b9\u6848\u6570\n\n\u7b54\u6848\u662f(\u7d2f\u8ba1\u4e0a\u9009\u5217\u7684\u65b9\u6848$\\binom{L}{i}$)\n$$\n\\large \\begin{aligned}\n&ans=\\sum_{i=0}^L[i\\equiv r\\bmod k]\\binom{L}{i}f_{i,y}\\\\\n&=\\sum_{i=0}^L[k|i-r]\\binom{L}{i}f_{i,y}\\\\\n&=\\sum_{i=0}^L\\binom{L}{i}f_{i,y}\\frac{1}{k}\\sum_{j=0}^{k-1} \\omega_k^{(i-r)j}\\\\\n\\end{aligned}\n$$\n\n\n\u5219$f_{i,j}=\\sum\\limits_{k}f_{i-1,k}*w_{k,j}$,\u8bbe$A$\u4e3a$w$\u7684\u751f\u6210\u77e9\u9635:$\\large A=\\begin{bmatrix}w_{0,0}&\\cdots&w_{0,n-1}\\\\&\\cdots\\\\w_{n-1,0}&\\cdots&w_{n-1,n-1}\\end{bmatrix}$\n\n\u53ef\u4ee5\u53d1\u73b0$f_{i,?}$\u7684\u751f\u6210\u77e9\u9635$F_i=F_0A^i=A^i$\n\n\u7136\u540e\u5c31\u6709$f^{x\u51fa\u53d1\u60c5\u51b5\u4e0b}_{i,y}=A^i_{x,y}$(\u8fd9\u4e2a\u6ca1\u95ee\u9898\u5427\uff0c\u770b\u4e00\u4e0b\u539f\u672c\u9012\u63a8\u5b9a\u4e49\u5373\u53ef)\n$$\n\\large \\begin{aligned}\n&ans=\\sum_{i=0}^{L}\\binom{L}{i}A^i_{x,y}\\frac{1}{k}\\sum_{j=0}^{k-1} \\omega_k^{(i-r)j}\\\\\n&=\\frac{1}{k}\\sum_{i=0}^{k-1}\\omega_k^{-ir}\\sum_{j=0}^{L}\\binom{L}{j}(A^j)_{x,y}\\times \\omega^{ij}_k\\end{aligned}$$\n//\u8fd9\u91cc\u662f\u4e8c\u9879\u5f0f\u53cd\u6f14\u6807\u51c6\u5f0f\u5b50\n$$\n\\large\\begin{aligned}\n&=\\frac{1}{k}\\sum_{i=0}^{k-1}\\omega_k^{-ir}(w^i_kA+I)^L_{x,y}\\\\\n&=\\frac{1}{k}\\sum_{i=0}^{k-1}a_i\\omega_k^{-ir}\n\\end{aligned}\n$$\n\n### Step2\n\n\u77e9\u9635\u5feb\u901f\u5e42\u6c42$a_i$\n\n### Step3\n\nBluestein's Algorithm($\\text{CTZ})$\u7684\u6838\u5fc3\n$$\n\\large ab = \\binom{a+b}{2} - \\binom{a}{2} - \\binom{b}{2}\n$$\n\n(\u53e6\u4e00\u4e2a\u62c6\u6cd5\u662f$ab=\\frac{(a+b)^2}{2}-\\frac{(a)^2}{2}-\\frac{(b)^2}{2}$\u4f46\u90a3\u6837\u4f1a\u7528\u5230$\\omega_{2n}^k$\u4e4b\u7c7b\u7684\u4e1c\u897f\uff0c\u53ef\u80fd\u4e0d\u5b58\u5728)\n\n$$\n\\large\n\\begin{aligned}\nans=\\frac{1}{k}\\sum_{i=0}^{k-1}a_i\\omega_k^{-\\binom{i+r}{2} + \\binom{i}{2} + \\binom{r}{2}}\\\\\n=\\frac{1}k\\omega_k^{r \\choose 2}\\sum_{i=0}^{k-1}\\omega_k^{i \\choose 2}a_i\\omega_k^{-{r+i \\choose 2}}\n\\end{aligned}\n$$\n\n//\u8001\u6280\u5de7\u7ffb\u8f6c\u8f6c\u5377\u79ef\n$$\n\\large\\begin{aligned}\nf_i=\\omega_k^{i \\choose 2},g_i=a_i\\omega_k^{-{r+i \\choose 2}}\\\\\n\\therefore ans=\\frac{\\omega_k^{r\\choose 2}}k[x^{k+r}](f^Rg)\\\\(f^R_{k-i}=\\omega_k^{i \\choose 2})\\\\\n\\end{aligned}\n$$\n\u76f4\u63a5$\\mathtt{MTT}$\u5377\u5c31\u53ef\u4ee5\u4e86\n\n```cpp\n#include<bits/stdc++.h>\n#define INF 0x3f3f3f3f\n#define N 262145\nusing namespace std;\ntypedef long long ll;\ntypedef double ld;//\u7279\u522b\u5361 \nint rev[N],n,K,L,x,y,mod,wk[N],f[N],g[N],h[N];\nconst ld PI=acos(-1);\ninline ll Mod(ll x,ll p=mod){return x>=p?x-p:x;}\ninline int qpow(int a,int b){}\n//-----------------------------------------------------------------\u539f\u6839--------------------------------------------------------------------\ninline char Checkg(int v){}\ninline int Getg(void){}\n//-----------------------------------------------------------------\u77e9\u9635\u4e58\u6cd5--------------------------------------------------------------------\nstruct Matrix{\n\tint a[3][3];\n\tMatrix(){}\n\tinline void Set(void){}\n\tinline Matrix operator*(Matrix b){}\n\tinline Matrix operator^(int k){}\n\tinline Matrix Make(int b){}\n}I,s;\n//-----------------------------------------------------------------MTT--------------------------------------------------------------------\nstruct cp{}a[N],b[N],c[N],d[N],W[19][1<<19];\ninline void Getinv(int len){}\ninline void Init(void){}\ninline void Mul(int *f,int *g,int n,int *ans){}\nsigned main(void){\n\tint i,j,inv;scanf(\"%d%d%d%d%d%d\",&n,&K,&L,&x,&y,&mod),--x,--y;I.Set();Init();\n\tfor(i=0;i<n;++i)for(j=0;j<n;++j)scanf(\"%d\",&s.a[i][j]);\n\tfor(*wk=wk[K]=1,wk[1]=qpow(Getg(),(mod-1)/K),i=2;i<K;++i)wk[i]=1ll*wk[i-1]*wk[1]%mod;\n\tfor(i=0;i<K;++i)f[K-1-i]=1ll*wk[1ll*i*(i-1)/2%K]*((s.Make(wk[i]))^L).a[x][y]%mod;\n\tfor(i=0;i<2*K-1;++i)g[i]=wk[K-1ll*i*(i-1)/2%K];\n\tMul(f,g,K*3-1,h);\n\tfor(inv=qpow(K,mod-2),i=0;i<K;++i)printf(\"%d\\n\",1ll*h[K-1+i]*inv%mod*wk[1ll*i*(i-1)/2%K]%mod);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1596014058,
        "uid": 40629,
        "name": "zzw4257",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5293 \u3010[HNOI2019]\u767d\u5154\u4e4b\u821e\u3011"
    }
]