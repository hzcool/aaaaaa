[
    {
        "content": "\u7b2c\u4e00\u4e2a\u6b63\u5b97\u8fc7\u7684\u5927\u5206\u5757 qwq\n\nlxl \u5728\u4ed6\u7684\u535a\u5ba2\u91cc\u8bf4\u4e86\u5b58\u5728\u5e8f\u5217\u5206\u5757\u65b9\u6cd5\u7136\u540e\u6211\u4e0d\u4f1a\u6839\u53f7\u5206\u6cbb\u6240\u4ee5\u3002\u3002\u3002\n\n\u8003\u8651\u5e8f\u5217\u5206\u5757\uff0c\u6bcf\u4e00\u5757\u91cc\u9762\u7ef4\u62a4\u67d0\u4e2a\u503c\u7684\u7b2c\u4e00\u4e2a\u51fa\u73b0\u4f4d\u7f6e\uff0c\u67d0\u4e00\u4e2a\u503c\u7684\u6700\u540e\u4e00\u4e2a\u51fa\u73b0\u4f4d\u7f6e\uff0c\u548c\u4e24\u4e2a\u503c\u4e4b\u95f4\u5728\u5757\u5185\u6700\u5c0f\u8ddd\u79bb\u3002\n\n\u5982\u679c\u76f4\u63a5\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u5757\u9700\u8981 $O(n^2)$ \u4e2a\u4fe1\u606f\uff0c\u5185\u5b58\u70b8\u3002\u6ce8\u610f\u4e00\u4e2a\u5757\u91cc\u9762\u6700\u591a\u6709 $O(\\sqrt n)$ \u4e2a\u4e92\u5f02\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u4e2a\u5757\u7ef4\u62a4\u79bb\u6563\u5316\uff0c\u53ea\u9700\u8981\u7ef4\u62a4 $O(n)$ \u4e2a\u4fe1\u606f\u4e86\u3002\n\n\u73b0\u5728\u8be2\u95ee\u5c31\u53ef\u4ee5\u6a21\u62df\uff0c\u8003\u8651\u600e\u4e48\u4fee\u6539\u3002\u5982\u679c\u5728\u4e00\u4e2a\u5757\u60f3\u628a x \u4fee\u6539\u6210 y\uff0c\u6709\u4e09\u4e2a\u60c5\u51b5\uff1a\n\n - x \u4e0d\u51fa\u73b0\uff0c\u53ef\u4ee5\u8df3\u8fc7\uff1b\n - y \u4e0d\u51fa\u73b0\uff0c\u53ef\u4ee5\u4fee\u6539 x \u7684\u79bb\u6563\u5316\u503c\uff0c\u8ddd\u79bb\u4fe1\u606f\u4e0d\u9700\u8981\u4fee\u6539\uff1b\n - x \u548c y \u90fd\u51fa\u73b0\u3002\u5728\u8fd9\u91cc\u53ef\u4ee5\u66b4\u529b\u66f4\u65b0\u5f71\u54cd\u7684\u8ddd\u79bb\uff08\u6700\u591a\u6709 $O(\\sqrt n)$ \u4e2a\uff09\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6b21\u66b4\u529b\u66f4\u65b0\u8fd9\u4e2a\u5757\u91cc\u4e92\u5f02\u503c\u6570\u91cf\u51cf\u4e00\u3002\u6bcf\u4e00\u4e2a\u5757\u5c01\u9876\u66b4\u529b\u4fee\u6539 $O(\\sqrt n)$ \u6b21\uff0c\u5bf9\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8d21\u732e\u4ec5\u4ec5\u662f $O(n^{3/2})$\u3002\n\n\u7136\u540e\u5c31\u597d\u4e86\u4e48\uff1f\u5feb\u4e50\u7684\u63d0\u4ea4\u4e0a\u53bb\uff0c30 \u5206\uff0c~~\u90fd\u8dd1\u4e0d\u8fc7\u66b4\u529b\u3002~~\n\n\u5f00\u59cb\u5361\u5e38\u3002\n\n - \u4f18\u5316 1\uff1a\u4f18\u5316\u9884\u5904\u7406\u5e38\u6570\u3002\n - \u4f18\u5316 2\uff1a\u76f4\u63a5\u7528\u6570\u7ec4\uff0c\u4e0d\u8981\u7528 struct \u52a0\u5927\u5e38\u6570\u3002\n - \u4f18\u5316 3\uff1a\u51cf\u5c11\u6570\u7ec4\u8bbf\u95ee\u6b21\u6570\uff0c\u67e5\u627e\u8ddd\u79bb\u7684\u65f6\u5019\u4fdd\u8bc1\u7b2c\u4e00\u4f4d\u5c0f\u4e8e\u7b2c\u4e8c\u7ef4\uff0c\u4e0d\u8981\u66f4\u65b0\u592a\u591a\u6b21\u3002\n - \u4f18\u5316 4\uff1a\u91cd\u65b0\u6392\u5217\u79bb\u6563\u5316\u6570\u7ec4\u7ef4\u5ea6\u3002\n - \u4f18\u5316 5\uff1a\u778e\u8c03\u5757\u957f\uff0c\u9009 250\u3002\n\n\u7136\u540e\u5c31\u7ec8\u4e8e\u597d\u4e86\u3002",
        "postTime": 1603003522,
        "uid": 220037,
        "name": "w33z8kqrqk8zzzx33",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5397 \u3010[Ynoi2018]\u5929\u964d\u4e4b\u7269\u3011"
    },
    {
        "content": "[lxl\u7684\u535a\u5ba2](http://olddrivertree.blog.uoj.ac/blog/5213)\u8bb2\u7684\u633a\u6e05\u695a\u4e86\u3002\n\n\u5982\u679c\u4e0d\u7ba1\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u80fd\u60f3\u5230\u7684**\u6700\u66b4\u529b**\u7684\u505a\u6cd5\u662f\u4ec0\u4e48\uff1f\n\n\u7528vector\u5bf9\u4e8e\u6bcf\u4e2a\u503c\u7ef4\u62a4\u51fa\u73b0\u7684\u4f4d\u7f6e\uff08\u4ece\u5c0f\u5230\u5927\uff09\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u66b4\u529b\u5f52\u5e76\uff0c\u4fee\u6539\u4e5f\u662f\u66b4\u529b\u5f52\u5e76\u3002\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u83b7\u5f9760\u5206\u7684\u6210\u7ee9\uff08\u968f\u673a\u6570\u636e\u4e0b\u8dd1\u7684\u633a\u5feb\u7684qwq\uff09\uff0c~~\u7136\u540e\u5c31\u53ef\u4ee5\u770b\u522b\u4eba\u7684AC\u4ee3\u7801\u4e86~~ \u3002\n\n\u518d\u770b\u770b\u8fd9\u9898\u3002\u66b4\u529b\u65f6\u95f4\u590d\u6742\u5ea6\u9519\u8bef\u7684\u539f\u56e0\u662f\u90a3\u4e2a\u4f4d\u7f6e\u7684\u96c6\u5408\u592a\u5927\u4e86\uff08\u6309lxl\u7684\u53eb\u6cd5\uff0c\u53eb\u505a\u9644\u5c5e\u96c6\u5408\uff09\u3002\u90a3\u5c31\u628a\u90a3\u4e2a\u96c6\u5408\u5f04\u5c0f\u4e00\u70b9\u561b\uff0c\u90a3\u591a\u5927\u53ef\u4ee5\u63a5\u53d7\u5462\uff1f~~\u8fd9\u662fYnoi\u554a\uff0c\u5f53\u7136\u662f\u6839\u53f7~~ \u3002\n\n\u4e8e\u662f\u5c31\u60f3\u5230\u4e86 **\u6839\u53f7\u5206\u6cbb** \u3002\n\n\u8bbe $siz[x]$ \u8868\u793a $x$ \u5728\u96c6\u5408\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff0c$siz[x]>lim$ \u7684\u79f0\u4f5c\u5927\u70b9\uff08$lim$ \u662f\u9608\u503c\uff09\uff0c \u5426\u5219\u79f0\u4e3a\u5c0f\u70b9\u3002\n\n\u4f46\u662f\u600e\u4e48\u7ef4\u6301\u9644\u5c5e\u96c6\u5408\u7684\u5927\u5c0f\u5728 $lim$ \u4ee5\u5185\u5462\uff1f\u8003\u8651\u5728\u9644\u5c5e\u96c6\u5408\u5927\u5c0f\u8d85\u8fc7 $lim$ \u7684\u65f6\u5019\u76f4\u63a5 $O(n)$ \u66b4\u529b\u5904\u7406\u8fd9\u4e2a\u5927\u70b9\uff08\u663e\u7136\u662f\u4e2a\u5927\u70b9\uff0c\u5c0f\u70b9\u7684\u9644\u5c5e\u96c6\u5408\u4e0d\u53ef\u80fd\u8d85\u8fc7 $lim$\uff09\u5230\u6240\u6709\u503c\u7684\u7b54\u6848\uff0c\u8bbe\u4e3a $ans[x][y]$ \uff0c $x$ \u662f\u5927\u70b9\uff0c $y$ \u662f\u6bcf\u4e2a\u503c\uff0c\u7136\u540e\u6e05\u7a7a $y$ \u9644\u5c5e\u96c6\u5408\uff0c\u4e8e\u662f\u5c31\u4fdd\u8bc1\u4e86\u6240\u6709\u9644\u5c5e\u96c6\u5408\u5927\u5c0f\u4e0d\u8d85\u8fc7 $lim$ \u3002\u540e\u6587\u628a\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4f5c\u66b4\u529b\u91cd\u6784\u3002\n\n\u663e\u7136 \uff0c$ans$ \u7684\u7b54\u6848\u5e76\u4e0d\u5305\u62ec\u9644\u5c5e\u96c6\u5408\u5185\u7684\u7b54\u6848\u3002\n\n\u63a5\u4e0b\u53bb\u7684\u8ba8\u8bba\u9ed8\u8ba4 $siz[x]<siz[y]$ \uff0c\u56e0\u4e3a\u6709\u79cd\u6280\u5de7\u53ef\u4ee5\u4f7f\u5f97\u4fdd\u8bc1 $siz[x]<siz[y]$ \uff0c\u8ba8\u8bba\u7ed3\u675f\u4e86\u4f1a\u8bb2\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\uff0c\u628a $x$ \u53d8\u6210 $y$ \uff1a\n\n+ \u5982\u679c $x,y$ \u5747\u4e3a\u5c0f\u70b9\uff0c\u7531\u4e8e\u51fa\u73b0\u6b21\u6570\u5c0f\u4e8e $lim$ \uff0c\u76f4\u63a5\u66b4\u529b\u628a $x$ \u5f52\u5e76\u8fdb $y$ \u7684\u9644\u5c5e\u96c6\u5408\uff0c\u5982\u679c\u5927\u4e8e $lim$ \u5c31\u628a $y$ \u8bbe\u6210\u5927\u70b9\uff0c\u66b4\u529b\u91cd\u6784 $y$ \uff0c\u7531\u4e8e\u5927\u70b9\u663e\u7136\u6700\u591a $\\dfrac{n}{lim}$ \u4e2a\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e0d\u4f1a\u8d85\u8fc7 $\\dfrac{n}{lim}$ \u6b21\u3002\n\n+ \u82e5 $x$ \u4e3a\u5c0f\u70b9\uff0c $y$ \u4e3a\u5927\u70b9\n\n  \u76f4\u63a5\u628a $x$ \u5e76\u5165 $y$ \u7684\u9644\u5c5e\u96c6\u5408\u5373\u53ef\uff0c$y$ \u7684\u9644\u5c5e\u96c6\u5408\u5927\u5c0f\u5982\u679c\u8d85\u8fc7 $lim$ \u5219\u66b4\u529b\u91cd\u6784$y$ \u3002\n\n  \u663e\u7136\u5927\u70b9\u7684\u4e2a\u6570\u4e0d\u4f1a\u8d85\u8fc7 $\\dfrac{n}{lim}$ \uff0c\u53c8\u53d1\u73b0\u9644\u5c5e\u96c6\u5408\u5143\u7d20\u6570\u91cf\u603b\u548c\u4e0d\u8d85\u8fc7 $n$ \uff0c\u6240\u4ee5\u66b4\u529b\u91cd\u6784\u6b21\u6570\u4e0d\u4f1a\u8d85\u8fc7 $\\dfrac{n}{lim}$ \u3002\n\n+ \u82e5 $x,y$ \u5747\u4e3a\u5927\u70b9\uff0c\u663e\u7136\u53ef\u4ee5\u66b4\u529b\u91cd\u6784 $y$ \uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8fc7\u7a0b\u4f7f\u5f97 $siz[y]$ \u81f3\u5c11\u589e\u5927 $lim$ \uff0c\u4e0d\u4f1a\u8d85\u8fc7 $\\dfrac{n}{lim}$ \u6b21\u3002\n\n\u7efc\u4e0a\uff0c\u4fee\u6539\u7684\u590d\u6742\u5ea6\u88ab\u63a7\u5236\u5728\u4e86 $O(\\dfrac{nm}{lim})$ \u3002\n\n\n\n\u5bf9\u4e8e\u67e5\u8be2 $x,y$  \u7684\u6700\u8fd1\u8ddd\u79bb\uff1a\n\n+ \u5982\u679c $x,y$ \u5747\u4e3a\u5c0f\u70b9\uff0c\u66b4\u529b\u5f52\u5e76 $x,y$ \u7684\u9644\u5c5e\u96c6\u5408\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(lim)$ \u3002\n+ \u5982\u679c $x$ \u4e3a\u5c0f\u70b9\uff0c $y$ \u4e3a\u5927\u70b9\uff0c\u66b4\u529b\u5f52\u5e76 $x,y$ \u7684\u9644\u5c5e\u96c6\u5408\uff0c\u518d\u4e0e $ans[y][x]$ \u53d6 $\\min$ \u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(lim)$ \u3002\n+ \u5982\u679c $x,y$ \u5747\u4e3a\u5927\u70b9\uff0c\u66b4\u529b\u5f52\u5e76 $x,y$ \u7684\u9644\u5c5e\u96c6\u5408\uff0c\u518d\u4e0e $ans[x][y],ans[y][x]$ \u53d6 $\\min$ \uff0c\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u77e5\u9053 $x,y$ \u54ea\u4e2a\u9760\u540e\u3002\u88ab\u91cd\u6784\uff0c\u6240\u4ee5 $ans[x][y],ans[y][x]$ \u5fc5\u987b\u90fd\u8981\u53d6 $\\min$ \u3002 \u65f6\u95f4\u590d\u6742\u5ea6 $O(lim)$ \u3002\n\n\u7efc\u4e0a\uff0c\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u662f $O(m\\cdot lim)$ \u3002\n\n\u5982\u4f55\u4fdd\u8bc1 $siz[x]<siz[y]$ \u5462\uff1f\u6211\u4eec\u52a0\u4e2a\u6570\u7ec4 $F[i]$ \u8868\u793a $i$ \u8fd9\u4e2a\u503c\u5b9e\u9645\u662f\u591a\u5c11\uff0c\u521d\u59cb\u5316 $F[i]=i$ \u3002\n\n\u5982\u679c\u8981\u4ea4\u6362 $x,y$ \u90a3\u4e48 $F[x]=y,F[y]=x$ \u5373\u53ef \u3002\n\n\n\n$lim$ \u53d6 $\\sqrt n$ \u5373\u53ef\uff0c\u5b9e\u6d4b $lim=500$ \u66f4\u5feb\uff0c\u4e0d\u8fc7\u8fd9\u9898\u5e76\u4e0d\u5361\u5e38\u3002\n\n**\u6ce8\u610f\u4e8b\u9879**\n\n+ \u65f6\u523b\u8bb0\u7740 $ans$ \u662f\u4e0d\u5305\u62ec\u9644\u5c5e\u96c6\u5408\u7684\u7b54\u6848\uff0c\u4e0d\u7136\u4ee3\u7801\u4f1a\u51fa\u4e00\u5806bug\u3002\n+ \u66b4\u529b\u91cd\u6784\u7684\u65f6\u5019\u8981\u626b $2$ \u904d\uff0c\u4ece\u524d\u5230\u540e\u518d\u4ece\u540e\u5230\u524d\u3002\n+ \u66b4\u529b\u91cd\u6784\u5b8c\u8bb0\u5f97\u6e05\u7a7a\u9644\u5c5e\u96c6\u5408\u3002\n+ \u51fa\u9898\u4eba\u597d\u50cf\u6ca1\u5361\uff0c\u5f3a\u5236\u5728\u7ebf\u89e3\u5bc6\u4ee5\u540e\u4ee5\u53ca\u539f\u6765\u7684\u6570\u7ec4\u90fd\u6ca1\u6709 $0$ \u51fa\u73b0\uff0c\u4f46\u662f\u5efa\u8bae\u4e0d\u8981\u6f0f\u6389 $0$ \u7684\u60c5\u51b5\u3002\n+ **\u6700\u5751\u7684\u4e00\u70b9\u4e86\uff1avector \u7684 clear \u5e76\u4e0d\u91ca\u653e\u7a7a\u95f4**\u3002\n\n\u6240\u4ee5\u6e05\u7a7avector\u5e94\u8be5\u8fd9\u4e48\u5199\uff1a\n\n```cpp\nvoid fyyAKCTS() {\n    /*your code*/\n    vector<int>fyyAKIOI;\n\tv[x].swap(fyyAKIOI);\n}\n```\n\n\n\n\u56e0\u4e3a $fyyAKIOI$ \u662f\u4e2a\u5c40\u90e8\u53d8\u91cf\uff0c\u5230\u4e86 $fyyAKCTS$ \u51fd\u6570\u7684\u53f3\u5927\u62ec\u53f7\u4f1a\u88ab\u91ca\u653e\u7a7a\u95f4\uff0c\u800c\u6b64\u65f6\u7531\u4e8e $fyyAKIOI$ \u539f\u672c\u7a7a\u7684\uff0c$\\operatorname{swap}$ \u4ee5\u540e $v[x]$ \u5c31\u662f\u7a7a\u7684\u4e86\uff0c\u4e8e\u662f\u6210\u529f\u6e05\u7a7a\u4e86vector\u5e76\u91ca\u653e\u4e86\u7a7a\u95f4 ~~\u8fd8\u56e0\u4e3a\u5c1b\u4e86fyy\u52a0\u4e86rp~~ \u3002\n\ncode\uff1a\n\n```cpp\nconst int N=100009;\nconst int M=320;\nconst int inf=0x3f3f3f3f;\nint n,m,a[N],lastans;\nint lim,siz[N],ans[M][N],id[N],F[N],tot;\nvector<int>v[N];\nvoid build(int x,int Id=0) {\n\tid[x]=Id?Id:++tot;\n\tint t=id[x];\n\tmemset(ans[t],0x3f,sizeof(ans[t]));\n\tfor(int i=1,j=inf;i<=n;++i)\n\t\tif(a[i]==x)j=0;\n\t\telse ans[t][a[i]]=min(ans[t][a[i]],++j);\n\tfor(int i=n,j=inf;i;--i)\n\t\tif(a[i]==x)j=0;\n\t\telse ans[t][a[i]]=min(ans[t][a[i]],++j);\n\tvector<int>fyyAKIOI;\n\tans[t][x]=0,v[x].swap(fyyAKIOI);\n}\nvoid merge(int x,int y) {\n\tint i=0,j=0,sx=v[x].size(),sy=v[y].size();\n\tvector<int>res;\n\twhile(i<sx&&j<sy)res.push_back(v[x][i]<v[y][j]?v[x][i++]:v[y][j++]);\n\twhile(i<sx)res.push_back(v[x][i++]);\n\twhile(j<sy)res.push_back(v[y][j++]);\n\tv[y]=res;\n}\nint merge_(int x,int y) {\n\tint i=0,j=0,sx=v[x].size(),sy=v[y].size(),res=inf;\n\tif(!sx||!sy)return inf;\n\twhile(i<sx&&j<sy)res=min(v[x][i]<v[y][j]?v[y][j]-v[x][i++]:v[x][i]-v[y][j++],res);\n\tif(i<sx)res=min(res,abs(v[x][i]-v[y][sy-1]));\n\tif(j<sy)res=min(res,abs(v[x][sx-1]-v[y][j]));\n\treturn res;\n}\nint query(int x,int y) {\n\tx=F[x],y=F[y];\n\tif(!siz[x]||!siz[y])return -1;\n\tif(x==y)return 0;\n\tif(siz[x]>siz[y])x^=y^=x^=y;\n\tif(siz[y]<=lim)return merge_(x,y);\n\telse if(siz[x]<=lim)return min(ans[id[y]][x],merge_(x,y));\n\telse return min(merge_(x,y),min(ans[id[x]][y],ans[id[y]][x]));\n}\nvoid change(int x,int y) {\n\tint x_=F[x],y_=F[y];\n\tif(!siz[x_]||x_==y_)return;\n\tif(siz[x_]>siz[y_])F[y]=x_,F[x]=n+1,x_^=y_^=x_^=y_;\n\telse F[x]=n+1;\n\tif(x_>n||y_>n)return;\n\tx=x_,y=y_;\n\tif(siz[y]<=lim) {\n\t\tif(siz[x]+siz[y]<=lim) {\n\t\t\tfor(int i:v[x])a[i]=y;\n\t\t\tfor(int i=1;i<=tot;++i)ans[i][y]=min(ans[i][y],ans[i][x]);\n\t\t\tmerge(x,y);\n\t\t} else {\n\t\t\tfor(int i=1;i<=n;++i)if(a[i]==x)a[i]=y;\n\t\t\tbuild(y);\n\t\t}\n\t} else if(siz[x]<=lim) {\n\t\tif(siz[x]+v[y].size()<=lim) {\n\t\t\tfor(int i:v[x])a[i]=y;\n\t\t\tfor(int i=1;i<=tot;++i)ans[i][y]=min(ans[i][y],ans[i][x]);\n\t\t\tmerge(x,y);\n\t\t} else {\n\t\t\tfor(int i=1;i<=n;++i)if(a[i]==x)a[i]=y;\n\t\t\tbuild(y,id[y]);\n\t\t}\n\t} else {\n\t\tfor(int i=1;i<=n;++i)if(a[i]==x)a[i]=y;\n\t\tbuild(y,id[y]);\n\t}\n\tvector<int>fyyAKIOI;\n\tsiz[y]+=siz[x],siz[x]=0,v[x].swap(fyyAKIOI);\n}\nsigned main() {\n\tn=rd(),m=rd(),lim=sqrt(n);\n\tfor(int i=1;i<=n;++i)++siz[a[i]=rd()],v[a[i]].push_back(i),F[i]=i;\n\tfor(int i=0;i<=n;++i)if(siz[i]>lim)build(i);\n\twhile(m--) {\n\t\t int opt=rd(),x=rd()^lastans,y=rd()^lastans;\n\t\tif(opt==1)change(x,y);\n\t\telse {\n\t\t\tlastans=query(x,y);\n\t\t\tif(~lastans)printf(\"%d\\n\",lastans);\n\t\t\telse lastans=0,puts(\"Ikaros\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n\n~~\u7531\u4e8e\u7528\u4e86fyyAKIOI\u8fd8AC\u4e86\uff0c\u8bf4\u660efyy\u771f\u7684AKIOI\u4e86~~\n\n",
        "postTime": 1598158758,
        "uid": 123384,
        "name": "tommy0221",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5397 \u3010[Ynoi2018]\u5929\u964d\u4e4b\u7269\u3011"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/P5397)\n\n\u505a\u6cd5\u4ecd\u662f\u6839\u53f7\u5206\u6cbb\uff0c\u76f8\u6bd4\u5176\u4ed6\u9898\u89e3\u907f\u514d\u4e86\u5197\u4f59\u7684\u5206\u7c7b\u8ba8\u8bba\uff0c\u4f7f\u5f97\u601d\u8def\u548c\u4ee3\u7801\u90fd\u7b80\u6d01\u8bb8\u591a\n\n\u8bb0\u4e00\u4e2a\u6570 $x$ \u7684\u51fa\u73b0\u6b21\u6570\u4e3a $siz[x]$\n\n\u4f7f\u7528\u6570\u7ec4 `mp` \u5efa\u7acb\u771f\u5b9e\u6570\u503c\u4e0e\u4ee3\u7801\u4e2d\u6570\u503c\u7684\u6620\u5c04\uff08\u503c $x$ \u5728\u4ee3\u7801\u4e2d\u5e94\u4e3a $mp[x]$\uff09\uff0c\u8fd9\u5141\u8bb8\u6211\u4eec\u5728\u64cd\u4f5c $1$ \u4e2d\u4ee4 $siz[x]\\le siz[y]$\uff08\u82e5\u4e0d\u7136\uff0c`swap(mp[x],mp[y])` \u5373\u53ef\u7b49\u4ef7\u4e8e\u5c06 $y$ \u53d8\u6210 $x$\uff09\n\n\u8bbe\u5b9a\u9608\u503c $B$\uff0c\u628a\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u4f4d\u7f6e\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\u4e3b\u8981\u96c6\u5408 $S$ \u548c\u9644\u5c5e\u96c6\u5408 $P$\uff0c\u5176\u4e2d $|S|>B,|P|\\le B$\u3002\u79f0 $S\\ne\\varnothing$ \u7684\u6570\u4e3a\u5927\u6570\uff0c\u5426\u5219\u4e3a\u5c0f\u6570\n\n\u5bb9\u6613\u53d1\u73b0\u5927\u6570\u53ea\u6709 $\\frac{n}{B}$ \u4e2a\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e8c\u7ef4\u6570\u7ec4 `ans` \u4fdd\u5b58\u6bcf\u4e2a\u5927\u6570\u53ea\u8003\u8651 $S$ \u96c6\u5bf9\u5176\u4ed6\u6570\u7684\u7b54\u6848\uff0c\u8fd9\u90e8\u5206\u65f6\u7a7a\u590d\u6742\u5ea6\u4e3a $O(\\frac{n^{2}}{B})$\u3002\u518d\u4f7f\u7528 `vector` \u4fdd\u5b58\u6bcf\u4e2a\u6570\u7684 $P$ \u96c6\n\n\u4fee\u6539\u65f6\u5148\u66f4\u65b0\u6bcf\u4e2a\u5927\u6570\u5bf9 $y$ \u7684\u7b54\u6848\uff0c\u7136\u540e\u5408\u5e76 $P$ \u96c6\uff0c\u5206\u4e24\u7c7b\u8ba8\u8bba\uff1a\n\n- $x$ \u4e3a\u5927\u6570\uff1a$O(n)$ \u4fee\u6539\u6240\u6709 $x$ \u4e3a $y$\uff0c\u91cd\u6784 $y$\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0d\u4f1a\u51fa\u73b0\u8d85\u8fc7\u5927\u6570\u4e2a\u6570\u6b21\uff0c\u590d\u6742\u5ea6\u4e3a $O(\\frac{n^{2}}{B})$\n- $x$ \u4e3a\u5c0f\u6570\uff1a\u901a\u8fc7 $P$ \u4fee\u6539\u6240\u6709 $x$ \u4e3a $y$\uff0c\u82e5 $|P_{y}|>B$ \u5219\u91cd\u6784 $y$\u3002\u590d\u6742\u5ea6\u4e3a $O(nB)$\n\n\u8be2\u95ee\u65f6\u5148\u8003\u8651 $P_{x},P_{y}$ \u4e2d\u4f4d\u7f6e\u7684\u7b54\u6848\uff0c\u82e5 $x,y$ \u4e2d\u6709\u5927\u6570\u518d\u7528 $ans$ \u66f4\u65b0\u7b54\u6848\n\n\u7531\u4e8e\u5e38\u6570\u5f71\u54cd\uff0c$B$ \u5e94\u7565\u5927\u4e8e $\\sqrt{n}$\uff0c\u65f6\u7a7a\u590d\u6742\u5ea6 $O(n\\sqrt{n})$\n\n\u5e76\u4e0d\u5361\u5e38\u56e0\u6b64\u5077\u61d2\u7528\u4e86 `std::merge`\n\n```cpp\nconst int N = 1e5+5, B = 500, BN = N/B+5;\nint n,m,ind,lstans,a[N],mp[N],id[N],ans[BN][N];\nVI p[N];\n\nvoid build(int x) { // calculate ans, clear p[x]\n\tif( !id[x] ) id[x] = ++ind; int u = id[x];\n\t// the value is x, the index of x is u\n\tmemset(ans[u],0x3f,sizeof ans[u]), ans[u][x] = 0;\n\tFor(i,1,n, len = N)\n\t\tif( a[i] == x ) len = 0;\n\t\telse ckmin(ans[u][a[i]],++len);\n\trFor(i,n,1, len = N)\n\t\tif( a[i] == x ) len = 0;\n\t\telse ckmin(ans[u][a[i]],++len);\n\tVI().swap(p[x]);\n}\n\nvoid merge(VI &res,const VI &a,const VI &b) {\n\tVI c; c.resize(sz(a)+sz(b)); merge(all(a),all(b),c.begin());\n\tres = c;\n}\nvoid mdf(int &x,int &y) {\n\tif( x == y || !x ) return;\n\tif( !y ) return y = x, x = 0, void();\n\tif( id[x] ) swap(x,y);\n\tFor(i,1,ind) ckmin(ans[i][y],ans[i][x]);\n\tif( id[x] ) { // x is a big number\n\t\tFor(i,1,n) if( a[i] == x ) a[i] = y;\n\t\tbuild(y);\n\t} else {\n\t\tfor(int i : p[x]) a[i] = y;\n\t\tmerge(p[y],p[x],p[y]);\n\t\tif( sz(p[y]) > B ) build(y);\n\t}\n\tVI().swap(p[x]), x = 0;\n}\n\nint qry(const int &x,const int &y) {\n\tif( !x || !y ) return -1; if( x == y ) return 0;\n\tint res = N;\n\tVI pp; merge(pp,p[x],p[y]);\n\tRep(i,1,sz(pp)) if( a[pp[i]] != a[pp[i-1]] ) ckmin(res, pp[i]-pp[i-1]);\n\t// better method: www.luogu.com.cn/blog/123384/solution-p5397\n\t// in function `merge_(int,int)`\n\tif( id[x] ) ckmin(res,ans[id[x]][y]);\n\tif( id[y] ) ckmin(res,ans[id[y]][x]);\n\treturn res;\n}\n\nsigned main() {\n\tread(n,m); For(i,1,n) read(a[i]), mp[a[i]] = a[i], p[a[i]].pb(i);\n\tFor(i,1,n) if( sz(p[i]) > B ) build(i);\n\twhile( m-- ) {\n\t\tint op,x,y; read(op,x,y); x^=lstans,y^=lstans;\n\t\tif( op == 1 ) mdf(mp[x],mp[y]);\n\t\telse {\n\t\t\tlstans = qry(mp[x],mp[y]);\n\t\t\tif( ~lstans ) write(lstans); else lstans = 0, put(\"Ikaros\");\n\t\t}\n\t}\n\treturn ocl();\n}\n```",
        "postTime": 1644195086,
        "uid": 236866,
        "name": "401rk8",
        "ccfLevel": 9,
        "title": "P5397 [Ynoi2018] \u5929\u964d\u4e4b\u7269 \u9898\u89e3"
    },
    {
        "content": "[\u540c\u6b65\u53d1\u8868\u5728\u535a\u5ba2](https://foreverlasting1202.github.io/)\n\n\u6839\u53f7\u5206\u6cbb\u3002\n\n\u4e4b\u524d\u5c31\u5728$51nod$\u4e0a\u770b\u5230\u8fd9\u9053\u9898\u5566\uff0c\u60f3\u60f3\u90a3\u662f\u4e00\u5e74\u524d\u5462\uff0c\u90a3\u4e2a\u65f6\u5019\u8fd8\u662f\u592a\u83dc\uff0c\u6240\u4ee5\u4e0d\u4f1a\u3002\u7ed3\u679c\u7a81\u7136\u5728\u8fd9\u91cc\u770b\u5230\u8fd9\u9053\u9898\uff0c\u4e8e\u662f\u8865\u4e86\u4e00\u4e0b\uff08\u867d\u7136\u57fa\u672c\u4e0a\u8fd8\u662f\u527d\u7684\uff09\u3002\n\n\u9996\u5148\u770b\u8fd9\u4e2a\u67e5\u8be2\u64cd\u4f5c\u3002\u5982\u679c\u6211\u4eec\u5c06\u6240\u6709\u503c\u7684\u4f4d\u7f6e\u6309\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u8bb0\u5f55\u4e0b\u6765\uff0c\u90a3\u4e48\u76f4\u63a5\u66b4\u529b\u67e5\u8be2\u5c31\u662f$sz[x]+sz[y]$\uff0c\u5176\u4e2d$sz[x]$\u8868\u793a$x$\u8fd9\u4e2a\u503c\u51fa\u73b0\u7684\u6b21\u6570\u3002\u8003\u8651\u5982\u4f55\u4f18\u5316\u8fd9\u4e2a\u5927\u66b4\u529b\u3002\u4e8e\u662f\u5c31\u53ef\u4ee5\u7528\u6839\u53f7\u5206\u6cbb\u7684\u60f3\u6cd5\u5566\u3002\u6211\u4eec\u8bbe\u4e00\u4e2a\u9608\u503c\u4e3a$lim$\uff0c\u7528\u8fd9\u4e2a\u9608\u503c\u6765\u8ba8\u8bba\u3002\n\n$1$\u3001$sz[x],sz[y]<=lim$\n\t\n\u76f4\u63a5\u66b4\u529b\u67e5\u8be2\u3002\n\n$2$\u3001$sz[x]>=lim$\n\n\u53ef\u4ee5\u9884\u5904\u7406\u51fa$x$\u4e0e\u5176\u4ed6\u6240\u6709\u503c\u7684\u6700\u5c0f\u8ddd\u79bb\uff0c\u7136\u540e\u76f4\u63a5$O(1)$\u67e5\u8be2\u3002\u9884\u5904\u7406\u7684\u590d\u6742\u5ea6\u662f$O(\\frac {n}{lim} \\ast n)$\n\n\u4e8e\u662f\u53ef\u4ee5\u628a$lim$\u8bbe\u4e3a$sqrt(n)$\uff0c\u8fd9\u663e\u7136\u662f\u6700\u4f18\u7684\u3002\n\n\u4f46\u5982\u679c\u52a0\u5165\u4e86\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u6bcf\u4e00\u6b21\u4fee\u6539\u4e4b\u540e\u8fd8\u66b4\u529b\u91cd\u65b0\u9884\u5904\u7406\uff0c\u5e94\u8be5\u9700\u8981\u4e00\u4e2a\u4e1c\u897f\u6765\u4f18\u5316\u8fd9\u4e2a\u9884\u5904\u7406\u3002\n\n\u6211\u4eec\u5148\u7814\u7a76\u4e00\u4e0b\u4fee\u6539\u7684\u64cd\u4f5c\u3002\n\n\u9996\u5148\uff0c\u663e\u7136$x,y$\u662f\u7b49\u4ef7\u7684\u4e24\u4e2a\u503c\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ea4\u6362\u3002\n\n$1$\u3001$sz[x],sz[y]<=lim$\n\n\u76f4\u63a5\u66b4\u529b\u5408\u5e76\u4e24\u4e2a\u7684\u4f4d\u7f6e\u96c6\u5408\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f$O(lim+lim)$\u3002\n\n$2$\u3001$sz[x],sz[y]>=lim$\n\n\u76f4\u63a5\u66b4\u529b\u91cd\u6784\uff0c\u91cd\u65b0\u9884\u5904\u7406\u51fa$y$\u5230\u6240\u6709\u5176\u4ed6\u503c\u7684\u6700\u5c0f\u8ddd\u79bb\u3002\u4e00\u6b21\u91cd\u6784\u7684\u590d\u6742\u5ea6\u662f$O(n)$\u7684\uff0c\u4f46\u6700\u591a\u91cd\u6784$O(\\frac {n}{lim})$\u6b21\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\u590d\u6742\u5ea6\u662f$O(n\\ast \\frac {n}{lim})$\u3002\n\n$3$\u3001$sz[x]>=lim,sz[y]<=lim$\n\n\u8fd9\u91cc\u5c31\u4e0d\u597d\u5904\u7406\u4e86\uff0c\u76f4\u63a5\u91cd\u6784\u4e5f\u4e0d\u5bf9\uff0c\u66b4\u529b\u5408\u5e76\u4e5f\u4e0d\u5bf9\u3002\u6211\u4eec\u53d1\u73b0\u628a$y$\u5408\u5e76\u8fdb$x$\u4e2d\u7684\u5747\u644a**\u4f4d\u7f6e**\u6570\u662f$O(n)$\u7684\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$sz>=lim$\u7684\u6570\u7ef4\u62a4\u4e00\u4e2a\u65b0\u7684\u96c6\u5408$psz$\uff0c\u518d\u7ef4\u62a4\u4e00\u4e2a$ans[A][B]$\u6570\u7ec4\uff0c\u8868\u793a\u6240\u6709$sz>=lim$\u7684\u6570$A$\u5230\u6240\u6709\u5176\u4ed6\u6570$B$**\u53bb\u9664**\u5728$psz$\u91cc\u7684\u6700\u5c0f\u8ddd\u79bb\u3002\u6bcf\u6b21\u5c06$y$\u5408\u5e76\u5165$x$\u7684\u65f6\u5019\uff0c\u6211\u4eec\u76f4\u63a5\u8ba9\u5b83\u5408\u5e76\u5165$psz[x]$\u4e2d\uff0c\u7136\u540e\u7528$ans[A][y]$\u53bb\u66f4\u65b0$ans[A][x]$\u3002\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u5c31\u53d8\u5f97\u5f88\u597d\u770b\u4e86\u3002\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f$O(lim+lim)$\u7684\u3002\u5982\u679c\u5408\u5e76\u540e$psz$\u7684\u5927\u5c0f\u8d85\u8fc7$lim$\uff0c\u5219\u66b4\u529b\u91cd\u65b0\u5904\u7406$x$\u5230\u5176\u4ed6\u6240\u6709\u6570\u7684\u6700\u5c0f\u8ddd\u79bb\u3002\u8fd9\u6837\u7684\u91cd\u6784\u5f0f$O(n)$\u7684\uff0c\u4f46\u6700\u591a\u8fdb\u884c$O(\\frac {n}{lim})$\u6b21\uff0c\u6240\u4ee5\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f$O(n\\ast \\frac {n}{lim})$\u3002\u8fd9\u6837\u540c\u65f6\u4e5f\u4fdd\u8bc1$psz$\u7684\u5927\u5c0f\u59cb\u7ec8\u5c0f\u4e8e$lim$\u3002\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u67e5\u8be2\u5c31\u5bb9\u6613\u8bb8\u591a\u4e86\u3002\n\n$1$\u3001$sz[x],sz[y]<=lim$\n\n\u4f9d\u7136\u66b4\u529b\u5408\u5e76\uff0c\u590d\u6742\u5ea6$O(lim+lim)$\u3002\n\n$2$\u3001$sz[x],sz[y]>=lim$\n\n\u5408\u5e76$psz[x]$\u4e0e$psz[y]$\uff0c\u518d\u52a0\u4e0a$ans$\u91cc\u7684\u7b54\u6848\u5c31\u662f\u771f\u5b9e\u7b54\u6848\u3002\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f$O(lim+lim)$\u3002\n\n$3$\u3001$sz[x]>=lim,sz[y]<=lim$\n\n\u4e0e\u4e0a\u8ff0\u4e00\u6837\uff0c\u6ca1\u533a\u522b\u3002\n\n\u6240\u4ee5\u603b\u7684\u590d\u6742\u5ea6\u5c31\u662f$\\sum_{i=1}^n (lim+\\frac {n}{lim})$\uff0c\u53d6$lim=sqrt(n)$\u65f6\u6700\u4f18\u3002\n\n\u4e8e\u662f\u5c31\u505a\u5b8c\u4e86\u3002\n\ncode\uff08\u57fa\u672c\u527d\u7684\uff09:\n```cpp\n//2019.5.18 by ljz\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register int\n#define LL long long\n#define inf 0x3f3f3f3f\n#define eps 1e-10\n#define RG register\ninline int read() {\n    res s=0,ch=getchar();\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return s;\n}\ninline LL Read() {\n    RG LL s=0;\n    res ch=getchar();\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return s;\n}\ninline void swap(res &x,res &y) {\n    x^=y^=x^=y;\n}\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\ntypedef vector<int> vec;\nconst int N=1e5+10;\nconst int BB=500;\nnamespace MAIN {\n    vec v[N];\n    int n,m,block,st[N],top,bigx=1,ans[N/BB+10][N],id[N],big[N],tim,a[N],sz[N],psz[N],lastans,ys[N];\n    inline int newnode(){\n        return top?st[top--]:++bigx;\n    }\n    inline void init(const res &B){\n        for(res i=1;i<=n;i++)ans[B][i]=inf;\n        for(res i=1,now=inf;i<=n;i++)\n            if(id[i]==tim)now=0;\n            else ans[B][a[i]]=min(ans[B][a[i]],++now);\n        for(res i=n,now=inf;i;i--)\n            if(id[i]==tim)now=0;\n            else ans[B][a[i]]=min(ans[B][a[i]],++now);\n    }\n    inline void bigbuild(const res &val){\n        big[val]=newnode(),tim++;\n        for(res i=1;i<=n;i++)if(a[i]==val)id[i]=tim;\n        init(big[val]),ans[big[val]][val]=0;\n    }\n    inline void rebuild(const res &A,const res &B){\n        tim++;\n        if(big[A])st[++top]=big[A];\n        for(res i=1;i<=n;i++)if(a[i]==A||a[i]==B)id[i]=tim,a[i]=B;\n        psz[B]=0,init(big[B]);\n    }\n    inline void merge(const res &A,const res &B){\n        res i=sz[A],j=sz[B]<block?sz[B]:psz[B],k=i+j;\n        RG vec tmp=v[B];\n        v[B].resize((k<<1)+10);\n        while(i&&j)v[B][k--]=(v[A][i]>tmp[j]?v[A][i--]:tmp[j--]);\n        while(i)v[B][k--]=v[A][i--];\n        while(j)v[B][k--]=tmp[j--];\n    }\n    inline void modify(res x,res y){\n        res A=ys[x],B=ys[y];\n        if(A==B||!sz[A])return;\n        if(sz[A]>sz[B])swap(A,B),swap(x,y),ys[y]=0,ys[x]=B;\n        else ys[x]=0;\n        if(!A||!B)return;\n        if(sz[B]<block){\n            if(sz[A]+sz[B]<block){\n                merge(A,B);\n                for(res i=1;i<=bigx;i++)ans[i][B]=min(ans[i][B],ans[i][A]);\n                for(res i=1;i<=sz[A];i++)a[v[A][i]]=B;\n            }\n            else {\n                big[B]=newnode(),tim++;\n                for(res i=1;i<=sz[B];i++)id[v[B][i]]=tim;\n                for(res i=1;i<=sz[A];i++)id[v[A][i]]=tim,a[v[A][i]]=B;\n                init(big[B]);\n            }\n        }\n        else\n        if(sz[A]<block){\n            if(psz[B]+sz[A]<block){\n                merge(A,B);\n                for(res i=1;i<=bigx;i++)ans[i][B]=min(ans[i][B],ans[i][A]);\n                for(res i=1;i<=sz[A];i++)a[v[A][i]]=B;\n                psz[B]+=sz[A];\n            }\n            else rebuild(A,B);\n        }\n        else rebuild(A,B);\n        sz[B]+=sz[A],sz[A]=0;\n    }\n    inline int merge_ans(const res &A,const res &B){\n        res i=1,j=1,sa=sz[A],sb=sz[B],ret=inf;\n        if(sz[A]>=block)sa=psz[A];\n        if(sz[B]>=block)sb=psz[B];\n        if(!sa||!sb)return inf;\n        while(i<=sa&&j<=sb)ret=min(ret,v[A][i]<v[B][j]?v[B][j]-v[A][i++]:v[A][i]-v[B][j++]);\n        if(i<=sa)ret=min(ret,abs(v[A][i]-v[B][sb]));\n        if(j<=sb)ret=min(ret,abs(v[A][sa]-v[B][j]));\n        return ret;\n    }\n    inline int query(res x,res y){\n        res A=ys[x],B=ys[y];\n        if(A==B)return sz[A]?0:-1;\n        if(!sz[A]||!sz[B])return -1;\n        if(sz[A]>sz[B])swap(x,y),swap(A,B);\n        if(sz[B]<block)return merge_ans(A,B);\n        if(sz[A]<block)return min(ans[big[B]][A],merge_ans(A,B));\n        return min(min(ans[big[A]][B],ans[big[B]][A]),merge_ans(A,B));\n    }\n    inline void MAIN(){\n        n=read(),m=read(),block=BB;\n        for(res i=1;i<=n;i++)sz[a[i]=read()]++,ys[i]=i;\n        for(res i=1;i<=n;i++)\n            if(sz[i]>=block)bigbuild(i),v[i].resize(10);\n            else v[i].resize(sz[i]+10),sz[i]=0;\n        for(res i=1;i<=n;i++)if(sz[a[i]]<block)v[a[i]][++sz[a[i]]]=i;\n        while(m--){\n            res opt=read(),x=read()^lastans,y=read()^lastans;\n            if(opt==1)modify(x,y);\n            else {\n                res ret=query(x,y);\n                if(ret==-1)puts(\"Ikaros\"),lastans=0;\n                else printf(\"%d\\n\",lastans=ret);\n            }\n        }\n    }\n}\nint main() {\n//    srand((unsigned)time(NULL));\n//    freopen(\"graph.in\",\"r\",stdin);\n//    freopen(\"graph.out\",\"w\",stdout);\n    MAIN::MAIN();\n    return 0;\n}\n```\n",
        "postTime": 1558149565,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010Ynoi2018\u3011\u5929\u964d\u4e4b\u7269"
    },
    {
        "content": "[$\\text{Link}$](https://www.luogu.com.cn/problem/P5397)\n\n\u8fd9\u662f\u4e00\u7bc7\u5206\u5757\u9898\u89e3\uff01\n## \u9898\u610f\n\u7ed9\u4f60\u4e00\u4e2a\u957f\u4e3a $n$ \u5e8f\u5217\u7684 $a$\uff0c\u652f\u6301\u64cd\u4f5c\u5171 $q$ \u6b21\uff1a\n1. \u5c06\u6240\u6709\u7b49\u4e8e $x$ \u7684\u6570\u4fee\u6539\u4e3a $y$\uff0c\u5373 $\\forall i\\in[1,n]\\land a_i=x$\uff0c\u6267\u884c $a_i\\gets y$\u3002\n2. \u67e5\u8be2\u5e8f\u5217\u4e2d $x$ \u4e0e $y$ \u51fa\u73b0\u4f4d\u7f6e\u4e24\u4e24\u4e4b\u5dee\u7684\u6700\u5c0f\u503c\uff0c\u5373\u6c42 $\\displaystyle\\min_{a_i=x}\\min_{a_j=y}|i-j|$\u3002\n\n**\u65f6\u95f4 500ms**\uff0c$1\\le n,q,a_i\\le 10^5$.\n## \u601d\u8def\n\u524d\u7f6e\u77e5\u8bc6\uff1a[P4119 [Ynoi2018] \u672a\u6765\u65e5\u8bb0 - \u7b2c\u4e00\u5206\u5757](https://www.luogu.com.cn/problem/P4119)\u3002\n\n\u7b2c\u56db\u5206\u5757\u3002\n\n\u5927\u5bb6\u90fd\u77e5\u9053\u6807\u7b97\u662f\u6839\u53f7\u5206\u6cbb\uff0c\u4f46\u6211\u4e0d\u4f1a\uff01\n\n\u4e8e\u662f\u6211\u4eec\u4f7f\u7528\u5e8f\u5217\u5206\u5757\uff01\n\n\uff08\u8bf4\u5b9e\u8bdd\u8fd8\u662f\u6211\u7b2c\u4e00\u9053\u81ea\u5df1\u5199\u51fa\u6765\u7684\u5927\u5206\u5757\uff0c\u867d\u7136\u96be\u5ea6\u4e0d\u5927\uff09\n****\n\u5148\u5ffd\u7565\u4fee\u6539\u64cd\u4f5c\uff0c\u8003\u8651\u67e5\u8be2\u5206\u4e3a\u5757\u5185\u4e0e\u5757\u95f4\u4e24\u90e8\u5206\u8d21\u732e\u3002\n\n\u5757\u95f4\u8d21\u732e\u7edf\u8ba1\u53ea\u4e0e\u6bcf\u4e2a\u5757\u5185\u7b2c\u4e00\u6b21\u4e0e\u6700\u540e\u4e00\u6b21\u51fa\u73b0 $x,y$ \u7684\u4f4d\u7f6e\u6709\u5173\uff0c\u6240\u4ee5**\u7ef4\u62a4\u6bcf\u4e2a\u6570\u5728\u6bcf\u4e00\u5757\u4e2d\u7b2c\u4e00\u6b21\u548c\u6700\u540e\u4e00\u6b21\u7684\u51fa\u73b0\u4f4d\u7f6e**\uff0c\u5206\u522b\u8bb0\u4e3a $fir_{i,j},sec_{i,j}$\uff0c\u5176\u4e2d $i$ \u662f\u5757\uff0c$j$ \u662f\u6570\u3002\u53ef\u77e5\u8fd9\u91cc\u7a7a\u95f4\u662f $O(n\\sqrt n)$ \u7684\u3002\n\n\u8003\u8651\u5757\u5185\u8d21\u732e\u76f4\u63a5\u7ef4\u62a4\u6bcf\u4e24\u4e2a\u6570\u4e4b\u95f4\u5728\u8be5\u5757\u7684\u7b54\u6848\u663e\u7136\u4f1a\u7206\u7a7a\u95f4\u3002\u5728\u7b2c\u4e00\u5206\u5757\u6211\u4eec\u77e5\u9053\uff0c**\u7531\u4e8e\u5757\u5185\u7684\u6570\u53ea\u4f1a\u6709 $O(\\sqrt n)$ \u79cd\uff0c\u53ef\u4ee5\u5bf9\u5757\u5185\u8fdb\u884c\u79bb\u6563\u5316**\uff0c\u5373\u5bf9\u6bcf\u4e2a\u5757 $i$ \u4e2d\u51fa\u73b0\u8fc7\u7684\u6570 $j$\uff0c\u8bb0\u5f55 $inp_{i,j}$\uff0c\u6ee1\u8db3 $inp_{i,j}\\le \\sqrt n$ \u4e14 $\\forall j\\ne k,inp_{i,j}\\ne inp_{i,k}$\u3002\u540c\u65f6\uff0c\u8bb0\u5f55\u5176\u9006 $ind_{i,j}$ \u4f7f\u5f97 $ind_{i,inp_{i,j}}=j$\u3002\u8fd9\u65f6\u518d\u8bb0\u5f55 $ins_{i,j,k}$ \u8868\u793a $ind_{i,j}$ \u4e0e $ind_{i,k}$ \u5728\u5757\u4e2d\u7684\u7b54\u6848\u3002\u53ef\u77e5\u8fd9\u91cc\u7a7a\u95f4\u4e5f\u662f $O(n\\sqrt n)$ \u7684\u3002\n\n\u67e5\u8be2\u65f6\u5757\u95f4\u4e0e\u5757\u5185\u5206\u5f00\u7b97\u3002\u5757\u5185\u5c31\u662f\u6bcf\u4e2a\u6709 $x$ \u4e14\u6709 $y$ \u7684\u5757 $i$ \u4e2d\uff0c$ins_{i,inp_{i,x},inp_{i,y}}$ \u7684\u6700\u5c0f\u503c\u3002\u5757\u95f4\u5219\u626b\u6bcf\u4e2a\u5757\uff0c\u8bb0\u5f55\u4e0a\u4e2a $x,y$ \u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u7528 $fir$ \u8ba1\u7b97\u7b54\u6848\uff0c$sec$ \u66f4\u65b0\u5373\u53ef\u3002\n****\n\u73b0\u5728\u52a0\u4e0a\u4e86\u4fee\u6539\u64cd\u4f5c\u3002\n\n\u9996\u5148\u6211\u4eec\u77e5\u9053\u8981\u5bf9\u6bcf\u4e2a\u5757\u8003\u8651\u3002\n\n\u7b2c\u4e00\u5206\u5757\u4e2d\uff0c\u6211\u4eec\u4e5f\u89c1\u8fc7\u8fd9\u4e2a\u73a9\u610f\u3002\u5177\u4f53\u5730\uff0c\u5206\u7c7b\u8ba8\u8bba\uff1a\n1. \u5757\u4e2d\u65e0 $x$\uff1a\u76f4\u63a5\u8df3\u8fc7\uff1b\n2. \u5757\u4e2d\u6709 $x$ \u65e0 $y$\uff1a\u4ee4 $ind_{i,inp_{i,x}}=y,inp_{i,y}=inp_{i,x},inp_{i,x}=0$\uff1b\n3. \u5757\u4e2d\u6709 $x$ \u6709 $y$\uff1a\u4ee4\u6bcf\u4e2a\u5757\u7684\u52bf\u80fd\u4e3a\u5757\u4e2d\u4e0d\u540c\u6570\u7684\u4e2a\u6570\uff0c\u521d\u59cb\u65f6\uff0c\u6bcf\u4e2a\u5757\u7684\u52bf\u80fd\u662f $O(\\sqrt n)$ \u7684\uff0c\u6bcf\u6b21\u8fdb\u884c\u6b64\u7c7b\u4fee\u6539\u90fd\u4f1a\u5c06\u52bf\u80fd\u51cf\u4e00\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u5c06\u6bcf\u6b21\u6b64\u7c7b\u4fee\u6539\u7684\u65f6\u95f4\u63a7\u5236\u5728 $O(\\sqrt n)$ \u5373\u53ef\u3002\u663e\u7136\u5730\uff0c\u4ee4 $fir_{i,y}=\\min(fir_{i,x},fir_{i,y}),sec_{i,y}=\\max(sec_{i,x},sec_{i,y}),ins_{i,t,y}=\\min(ins_{i,t,x},ins_{i,t,x})$ \u5373\u53ef\u3002\n\n\u81f3\u6b64\uff0c\u4fee\u6539\u90e8\u5206\u505a\u5230\u4e86 $O(n\\sqrt n)$\u3002\u4e8e\u662f\u6211\u4eec\u5728\u65f6\u7a7a\u5747\u4e3a $O(n\\sqrt n)$ \u7684\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u4e86\u6b64\u9898\u3002\n****\n\u4f46\u662f\uff0c\u7531\u4e8e\u5e38\u6570\u8f83\u5927\uff0c\u6211\u4e0d\u7ecf\u4efb\u4f55\u5e38\u6570\u5904\u7406\u7684\u4ee3\u7801\u53ea\u80fd\u5f97\u5230 $16$ \u5206\u3002\n\n\u4e8e\u662f\u6211\u4eec\u9700\u8981\u4f18\u5316\uff08\u91cd\u8981\u7684\u6211\u4f1a\u6807\u7c97\uff09\uff1a\n1. **\u5bf9\u4e8e\u7a7a\u95f4\u5e38\u6570\u7684\u4f18\u5316** \uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c$inp$ \u4e0e $ins$ \u7684\u503c\u90fd\u662f\u5728 $\\sqrt n$ \u4ee5\u5185\u7684\u3002\u8003\u8651\u7528 `short` \u5b58\u4e0b\u5b83\u4eec\u3002\n\n\u4f46\u662f $fir$ \u4e0e $sec$ \u7684\u503c\u662f $O(n)$ \u7684\uff0c\u4e0d\u80fd\u7528 `short` \u5b58\uff08\u6211\u77e5\u9053\u53ef\u4ee5\u5c06\u5176\u8f6c\u5316\u81f3 $O(\\sqrt n)$\uff0c\u4f46\u5176\u5bf9\u65f6\u95f4\u5e38\u6570\u4e0d\u5229\uff09\uff0c\u4e8e\u662f\u7528 $fir_{i,inp_{i,x}}$ \u4ee3\u66ff $fir_{i,x}$\uff0c\u4fbf\u53ef\u5c06\u8fd9\u90e8\u5206\u7a7a\u95f4\u4f18\u5316\u81f3 $O(n)$\u3002\n\n\u5176\u5b9e\u6211\u4eec\u4e0d\u9700\u8981\u4e13\u95e8\u5f00 $vis_{i,x}$ \u8868\u793a\u5757 $i$ \u4e2d\u662f\u5426\u6709 $x$\uff0c\u7528 $inp$ \u5224\u65ad\u5373\u53ef\u3002\n\n2. \u9009\u62e9\u5408\u9002\u7684\u5757\u957f\uff1a\u5178\u4e2d\u5178\uff0c\u6b64\u65f6\u5757\u957f\u9009 $350$ \u53ef\u5f97 $26$ \u5206\u3002\u6700\u7ec8\u5361\u5e38\u65f6\u6211\u7684\u5757\u957f\u4e3a $255$\u3002\n3. **\u4e09\u89d2\u5f62\u5b58\u50a8 $ins$** \uff1a\u5373\u53ea\u5b58\u50a8 $ins_{i,x,y}(x\\le y)$\uff0c\u6b64\u65f6\u4fbf\u53ef\u5f97\u5230 $38$ \u5206\u3002\n4. \u9002\u5f53\u964d\u4f4e\u9884\u5904\u7406\u5e38\u6570\uff1a\u5982\u51cf\u5c11\u8017\u65f6 $O(n)$ \u7684\u5faa\u73af\uff0c\u6b64\u65f6\u4fbf\u53ef\u5f97\u5230 $44$ \u5206\u3002\n5. **$inp$ \u6570\u7ec4\u7684\u987a\u5e8f** \uff1a\u7528 $inp_{x,i}$ \u4ee3\u66ff $inp_{i,x}$\uff0c\u8bbf\u95ee\u8fde\u7eed\u4e86\u8bb8\u591a\uff0c\u6b64\u65f6\u53ef\u5f97 $80$ \u5206\u3002\n6. \u9002\u5f53\u964d\u4f4e\u91cd\u6784\u5e38\u6570\uff1a\u51cf\u5c11\u5faa\u73af\u5373\u53ef\uff0c\u6b64\u65f6\u53ef\u5f97 $86$ \u5206\u3002\n7. **\u91cd\u6784\u5206\u6bb5\u5faa\u73af** \uff1a\u7531\u4e8e\u8bb0\u5f55\u4e86 $ins_{i,x,y}(x\\le y)$\uff0c\u6211\u4eec\u5728\u91cd\u6784\u65f6\u5c06\u5faa\u73af\u6309\u7167\u4e0e $inp_{x,i}$ \u548c $inp_{y,i}$ \u7684\u5173\u7cfb\u5212\u5206\u4e3a\u4e09\u6bb5\uff0c\u800c\u4e0d\u662f\u4e00\u6bb5\u5e76\u5b9e\u65f6\u5224\u65ad\u5927\u5c0f\u5173\u7cfb\uff0c\u6b64\u65f6\u53ef\u5f97 $96$ \u5206\u3002\n8. \u5bf9\u67e5\u8be2\u7684\u7279\u5224\uff1a\u7279\u5224 $x=y$ \u7684\u60c5\u51b5\u4fbf\u53ef\u901a\u8fc7\u70b9 $28$\uff0c\u5f97\u5230 $98$ \u5206\uff0c\u4f46\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u3002\n9. **$ins$ \u538b\u7f29\u5b58\u50a8\u65b9\u5f0f** \uff1a\u82e5\u5c06\u540e\u4e24\u4f4d\u538b\u7f29\u9700\u7528\u5230\u5927\u91cf\u4e58\u6cd5\u64cd\u4f5c\uff0c\u8017\u8d39\u65f6\u95f4\u591a\u3002\u8003\u8651\u538b\u7f29\u524d\u4e24\u7ef4\uff0c\u8003\u8651\u5230\u7b2c\u4e8c\u7ef4\u5c0f\u4e8e\u5757\u957f\uff0c\u5219\u4ee4 $ins_{p+x,y}$ \u8868\u793a $ins_{i,x,y}$\uff0c\u5176\u4e2d $p$ \u4e3a\u5757 $i$ \u7684\u5de6\u7aef\u70b9\u51cf\u4e00\u3002\n10. **\u9884\u5904\u7406\u5e38\u6570\u518d\u524a\u51cf** \uff1a\u4e0d\u8981\u5728 $O(n)$ \u7684\u5faa\u73af\u4e2d\u4f7f\u7528\u5224\u65ad\uff0c\u9884\u5148\u5bf9\u6240\u6709\u6709\u7528\u7684\u90e8\u5206\u8fdb\u884c `memset`\uff0c\u53ea\u9700\u5faa\u73af\u53d6 $\\min$\u3002\u6b64\u65f6\u53ef\u5f97 $100$ \u5206\u3002\n\n\u4f7f\u7528\u4e86\u4e0a\u8ff0\u5361\u5e38\u65b9\u5f0f\u540e\uff0c\u4ec5\u9700\u5fae\u8c03\u5757\u957f\u5373\u53ef\u901a\u8fc7\u3002\n\n\u63d0\u4e00\u53e5\uff0c\u901a\u8fc7\u79bb\u7ebf\u9010\u5757\u5904\u7406\uff08\u8fd9\u91cc\u5757\u95f4\u8be2\u95ee\u5e73\u51e1\uff0c\u4e5f\u53ef\u9010\u5757\u5904\u7406\uff09\u53ef\u5c06\u7a7a\u95f4\u590d\u6742\u5ea6\u964d\u81f3 $O(n)$\uff0c\u4f46\u662f\u6709\u5f3a\u5236\u5728\u7ebf\u3002\n****\n\u4ee3\u7801\u975e\u5e38\u597d\u5199\uff0c\u4ee5\u4e0b\u4ee3\u7801\u4ec5\u4f9b\u53c2\u8003\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nnamespace IO{//by cyffff\n\t\n}\nconst int N=1e5+10,sq=255,nq=N/sq+10;\nint n,q,blk,last,a[N],b[N],bl[nq],br[nq],bel[N],tp[nq];\nint fir[N],sec[N],ind[N];\nshort inp[N][nq],ins[N][sq];\ninline int site(int x,int y){\n\tif(x>y) swap(x,y);\n\treturn x*sq+y;\n}\ninline void init(int l,int r){\n\tint d=bel[l],p=l-1;\n\tvector<int>vec;\n\tfor(int i=l;i<=r;i++)\n\t\tvec.push_back(a[i]);\n\tsort(vec.begin(),vec.end());\n\tvec.resize(unique(vec.begin(),vec.end())-vec.begin());\n\ttp[d]=vec.size();\n\tfor(int i=l;i<=r;i++)\n\t\tb[i]=lower_bound(vec.begin(),vec.end(),a[i])-vec.begin()+1,\n\t\tind[p+b[i]]=a[i],inp[a[i]][d]=b[i];\n\tfor(int i=l;i<=r;i++)\n\t\tsec[p+b[i]]=i;\n\tfor(int i=r;i>=l;i--)\n\t\tfir[p+b[i]]=i;\n\tfor(int i=1;i<=tp[d];i++)\n\t\tmemset(ins[p+i],64,tp[d]+1<<1);\n\tfor(int i=l;i<=r;i++)\n\t\tfor(int j=i+1;j<=r;j++){\n\t\t\tint A=min(b[i],b[j]),B=max(b[i],b[j]);\n\t\t\tins[p+A][B]=min(ins[p+A][B],(short)(j-i));\n\t\t}\n}\ninline void rebuild(int l,int r,int x,int y){\n\tint d=bel[l],p=l-1;\n\tint inpx=inp[x][d],inpy=inp[y][d];\n\tfir[p+inpy]=min(fir[p+inpy],fir[p+inpx]),sec[p+inpy]=max(sec[p+inpy],sec[p+inpx]);\n\tfir[p+inpx]=sec[p+inpx]=0,inp[x][d]=0;\n\tif(inpx>inpy){\n\t\tfor(int i=1;i<=inpy;i++)\n\t\t\tins[p+i][inpy]=min(ins[p+i][inpy],ins[p+i][inpx]);\n\t\tfor(int i=inpy+1;i<=inpx;i++)\n\t\t\tins[p+inpy][i]=min(ins[p+inpy][i],ins[p+i][inpx]);\n\t\tfor(int i=inpx+1;i<=tp[d];i++)\n\t\t\tins[p+inpy][i]=min(ins[p+inpy][i],ins[p+inpx][i]);\n\t}else{\n\t\tfor(int i=1;i<=inpx;i++)\n\t\t\tins[p+i][inpy]=min(ins[p+i][inpy],ins[p+i][inpx]);\n\t\tfor(int i=inpx+1;i<=inpy;i++)\n\t\t\tins[p+i][inpy]=min(ins[p+i][inpy],ins[p+inpx][i]);\n\t\tfor(int i=inpy;i<=tp[d];i++)\n\t\t\tins[p+inpy][i]=min(ins[p+inpy][i],ins[p+inpx][i]);\n\t}\n}\nint main(){\n\tn=read(),q=read();\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=read();\n\tfor(int i=1;i<=n;i+=sq){\n\t\tblk++;\n\t\tbl[blk]=i,br[blk]=min(i+sq-1,n);\n\t\tfor(int j=bl[blk];j<=br[blk];j++)\n\t\t\tbel[j]=blk;\n\t\tinit(bl[blk],br[blk]);\n\t}\n\twhile(q--){\n\t\tint opt=read(),x=read()^last,y=read()^last;\n\t\tif(opt==2){\n\t\t\tint ans=n+1,lasx=-1e9,lasy=-1e9;\n\t\t\tif(x==y){\n\t\t\t\tfor(int i=1;i<=blk;i++)\n\t\t\t\t\tif(inp[x][i]) ans=0;\n\t\t\t\tif(ans==n+1) puts(\"Ikaros\"),last=0;\n\t\t\t\telse printf(\"%d\\n\",last=ans);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor(int i=1;i<=blk;i++){\n\t\t\t\tint inpx=0,inpy=0,p=bl[i]-1;\n\t\t\t\tif(inpx=inp[x][i]) ans=min(ans,fir[p+inpx]-lasy);\n\t\t\t\tif(inpy=inp[y][i]) ans=min(ans,fir[p+inpy]-lasx);\n\t\t\t\tif(inpx&&inpy) ans=min(ans,(int)ins[p+min(inpx,inpy)][max(inpx,inpy)]);\n\t\t\t\tif(inpx) lasx=sec[p+inpx];\n\t\t\t\tif(inpy) lasy=sec[p+inpy];\n\t\t\t}\n\t\t\tif(ans==n+1) puts(\"Ikaros\"),last=0;\n\t\t\telse printf(\"%d\\n\",last=ans);\n\t\t}else{\n\t\t\tif(x==y) continue;\n\t\t\tfor(int i=1;i<=blk;i++){\n\t\t\t\tint t=inp[x][i],p=bl[i]-1;\n\t\t\t\tif(!t) continue;\n\t\t\t\tif(!inp[y][i])\n\t\t\t\t\tind[p+t]=y,inp[x][i]=0,inp[y][i]=t;\n\t\t\t\telse\n\t\t\t\t\trebuild(bl[i],br[i],x,y);\n\t\t\t}\n\t\t}\n//\t\tlast=0;\n\t}\n\tflush();\n}\n```\n\u518d\u89c1 qwq~",
        "postTime": 1646813578,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5397\u3010[Ynoi2018] \u5929\u964d\u4e4b\u7269\u3011"
    },
    {
        "content": "[P5397 [Ynoi2018]\u5929\u964d\u4e4b\u7269](https://www.luogu.com.cn/problem/P5397)\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://zybuluo.com/xiaoziyao/note/1747932)\n\n## \u9898\u610f\n- \u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a$n$\u7684\u5e8f\u5217$a$\uff0c\u4e00\u5171$m$\u4e2a\u64cd\u4f5c\uff1a\n- \u64cd\u4f5c$1$\uff1a\u628a\u5e8f\u5217\u91cc**\u6240\u6709**\u503c\u4e3a$x$\u7684\u6570\u6539\u4e3a$y$\uff1b\n- \u64cd\u4f5c$2$\uff1a\u6c42\u5e8f\u5217\u4e2d\u503c\u4e3a$x$\u7684\u4f4d\u7f6e\u548c\u503c\u4e3a$y$\u7684\u4f4d\u7f6e\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\uff0c\u5982\u679c\u627e\u4e0d\u5230\u8fd9\u6837\u7684\u4f4d\u7f6e\u8f93\u51fa```Ikaros```\u3002\n- **\u5f3a\u5236\u5728\u7ebf**\uff0c\u6bcf\u6b21\u8f93\u5165\u7684$x$\u548c$y$\u9700\u8981\u5f02\u6216\u4e0a\u4e00\u6b21\u7684\u7b54\u6848\uff0c\u5982\u679c\u8fd9\u662f\u7b2c\u4e00\u6b21\u8f93\u51fa\u6216\u4e0a\u4e00\u6b21\u8f93\u51fa```Ikaros```\uff0c\u5219\u4e0d\u9700\u8981\u5f02\u6216\u3002\n- \u6570\u636e\u8303\u56f4\uff1a$1\\leqslant n=m\\leqslant 10^5$\uff0c\u5176\u4ed6\u6240\u6709\u6570\u5728$[1,n]$\u5185\u3002\n\n## \u5206\u6790\nlxl\u7684\u6bd2\u7624\u5927\u5206\u5757\u7cfb\u5217\uff0c\u5f11\u5c3d\u7834\u51c0\u7684\u7b2c\u56db\u5206\u5757\uff08\u597d\u4e2d\u4e8c\u5440\uff09\u3002\n\n\u5148\u8f6c\u6362\u9898\u610f\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u503c\u90fd\u6709\u4e00\u4e2a\u4f4d\u7f6e\u96c6\u5408\uff0c\u652f\u6301\u5408\u5e76\u96c6\u5408\uff08\u89c2\u5bdf\u9898\u610f\u5f88\u5bb9\u6613\u770b\u51fa\u6765\u64cd\u4f5c$1$\u7b49\u4ef7\u4e8e\u5408\u5e76\u96c6\u5408\uff09\uff0c\u67e5\u8be2\u4e24\u4e2a\u96c6\u5408\u4e2d\u5dee\u503c\u6700\u5c0f\u7684\u503c\u3002\n\n\u6211\u4eec\u5148\u8003\u8651\u4e24\u4e2a\u66b4\u529b\u505a\u6cd5\n\n- \u7ef4\u62a4\u6bcf\u4e00\u4e2a\u503c\u7684\u6240\u6709\u4f4d\u7f6e\uff0c\u4fee\u6539\u5c31\u628a\u6574\u4e2a\u4f4d\u7f6e\u96c6\u5408\u5408\u5e76\uff0c\u67e5\u8be2\u5c31\u66b4\u529b\u679a\u4e3e\u4f4d\u7f6e\u3002\n- \u9884\u5904\u7406\u6bcf\u4e00\u4e2a\u503c\u79bb\u6240\u6709\u5176\u4ed6\u503c\u7684\u6700\u77ed\u8ddd\u79bb\uff08\u8fd9\u91cc\u7684\u9884\u5904\u7406\u53ef\u4ee5\u901a\u8fc7\u4ece\u524d\u5230\u540e\u626b\u4e00\u904d\uff0c\u4ece\u540e\u5230\u524d\u626b\u4e00\u904d\uff0c\u505a\u5230$O(n)$\u7684\u5b9e\u73b0\uff09\uff0c\u4fee\u6539\u65f6$O(n)$\u66b4\u529b\u91cd\u6784\uff0c\u67e5\u8be2$O(1)$\u67e5\u8be2\u3002\n\n\u4f46\u5f88\u663e\u7136\u8fd9\u4f1a\u65f6\u7a7a\u53cc\u7206\u70b8\uff0c\u8003\u8651**\u6839\u53f7\u5206\u6cbb**\u6765\u5e73\u8861\u4e24\u79cd\u66b4\u529b\u7684\u590d\u6742\u5ea6\u3002\n\n\u6211\u4eec\u5148\u5bf9\u7b2c\u4e00\u4e2a\u66b4\u529b\u8fdb\u884c\u4f18\u5316\uff0c\u6765\u964d\u4f4e\u4e00\u4e0b\u590d\u6742\u5ea6\uff1a\n\n\u6211\u4eec\u7528$\\text{vector}$\u7ef4\u62a4\u6240\u6709\u7684\u4f4d\u7f6e\uff0c\u5e76\u5728\u5176\u4e2d\u4ece\u5c0f\u5230\u5927\u6392\u5217\uff0c\u5408\u5e76\u65f6\u53ef\u4ee5\u5f52\u5e76\u505a\u5230$O(n)$\uff0c\u66b4\u529b\u679a\u4e3e\u4f4d\u7f6e\u53ef\u4ee5\u7528\u4e24\u4e2a\u6307\u9488\u4e0d\u65ad\u63a8\u8fdb\uff0c\u5229\u7528\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u5355\u8c03\u6027\u627e\u51fa\u6bcf\u6b21\u6700\u8fd1\u7684\u4e24\u4e2a\u4f4d\u7f6e\u66f4\u65b0\u7b54\u6848\uff0c\u4e5f\u53ef\u4ee5\u505a\u5230$O(n)$\u3002\n\n\u8bbe$size_x$\u4e3a$x$\u8fd9\u4e2a\u503c\u5728\u5e8f\u5217\u91cc\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5e76\u89c4\u5b9a\u4e00\u4e2a**\u9608\u503c**$lim$\uff0c\u8fdb\u884c\u6839\u53f7\u5206\u6cbb\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a$x$\uff0c\u6211\u4eec\u4fdd\u5b58\u4e00\u4e2a\u7c7b\u4f3c\u7f13\u5b58\u7684$v_x$\uff08$\\text{vector}$\u578b\uff09\uff0c$\\text{lxl}$\u535a\u5ba2\u91cc\u53eb\u5b83\u9644\u5c5e\u96c6\u5408\uff0c$v$\u96c6\u5408\u9700\u8981\u4fdd\u5b58**\u5728\u4e0a\u4e00\u6b21\u91cd\u6784\u540e\u6240\u6709\u4fee\u6539\u64cd\u4f5c\u4e2d\u52a0\u5165\u7684\u65b0\u4f4d\u7f6e**\uff0c\u5e76\u901a\u8fc7\u7ef4\u62a4\u4fdd\u8bc1\u5b83\u7684\u5927\u5c0f\u4e0d\u5927\u4e8e$lim$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(n\\cdot lim)$\u3002\n\n\u5bf9\u4e8e\u6240\u6709\u4f4d\u7f6e\u96c6\u5408\u5927\u4e8e$lim$\u7684$x$\uff0c\u6211\u4eec\u5728\u6bcf\u4e00\u6b21\u91cd\u6784\u90fd\u9884\u5904\u7406\u5b83\u91cc\u9762\u6bcf\u4e2a\u503c\u79bb\u5176\u4ed6\u503c\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u8bbe\u4e3a$ans_{x,y}$\uff08\u4f4d\u7f6e\u96c6\u5408$x$\u79bb\u503c$y$\u7684\u6700\u77ed\u8ddd\u79bb\uff09\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6837\u7684$x$\u4e0d\u8d85\u8fc7$\\frac{n}{lim}$\u4e2a\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a$O(n\\cdot lim)$\u3002\n\n\u73b0\u5728\u8bb2\u4e00\u8bb2\u5177\u4f53\u64cd\u4f5c\uff1a\n\n\u5bf9\u4e8e\u4fee\u6539\uff08\u6ce8\u610f\uff0c\u8fd9\u91cc\u6211\u4eec**\u53ef\u4ee5\u8fdb\u884c\u4e00\u5b9a\u7684\u64cd\u4f5c\u5c06$x$\u4e0e$y$\u4ea4\u6362**\uff0c\u56e0\u6b64\u4e0d\u59a8\u8bbe$size_x\\leqslant size_y$\uff09\n\n- \u5f53$size_x\\leqslant lim,size_y\\leqslant lim$\u65f6\n- - \u82e5$size_x+size_y\\leqslant lim$\uff0c\u6211\u4eec\u5c31\u66b4\u529b\u5408\u5e76$x$\u548c$y$\u7684$v$\u96c6\u5408\uff0c\u6bcf\u4e00\u6b21\u590d\u6742\u5ea6\u4e3a$O(lim)$\uff0c\u603b\u590d\u6742\u5ea6\u4e3a$O(m\\cdot lim)$\u3002\n- - \u82e5$size_x+size_y>lim$\uff0c\u90a3\u4e48\u6211\u4eec\u9884\u5904\u7406$ans$\uff0c\u5e76\u6e05\u7a7a$v$\u96c6\u5408\uff0c\u5f88\u5bb9\u6613\u53d1\u73b0\u8fd9\u6837\u7684\u64cd\u4f5c\u4e0d\u8d85\u8fc7$\\frac{n}{lim}$\u6b21\uff0c\u800c\u6bcf\u4e00\u6b21\u9884\u5904\u7406$ans$\u662f$O(n)$\uff0c\u56e0\u6b64\u603b\u590d\u6742\u5ea6\u662f$O(\\frac{n^2}{lim})$\u3002\n- \u5f53$size_x\\leqslant lim,size_y>lim$\u65f6\n- - \u82e5$size_x+v[y].size()\\leqslant lim$\uff0c\u6211\u4eec\u66b4\u529b\u628a$x$\u52a0\u5165\u5230$y$\u7684$v$\u96c6\u5408\u4e2d\uff0c\u603b\u590d\u6742\u5ea6$O(m\\cdot lim)$\u3002\n- - \u82e5$size_x+v[y].size()>lim$\uff0c\u91cd\u6784$y$\u7684$ans$\u96c6\u5408\uff0c\u52a0\u5165$x$\u548c$v[y]$\u7684\u8d21\u732e\uff0c\u5e76\u6e05\u7a7a$y$\u7684$v$\u96c6\u5408\uff0c\u64cd\u4f5c\u6570\u663e\u7136\u4e0d\u8d85\u8fc7$\\frac{n}{lim}$\uff0c\u590d\u6742\u5ea6\u4e3a$O(\\frac{n^2}{lim})$\u3002\n- \u5f53$size_x>lim,size_y>lim$\u65f6\uff0c\u76f4\u63a5\u66b4\u529b\u5c06$x$\u7684\u6240\u6709\u4f4d\u7f6e\u5408\u5e76\u5230$y$\u4e0a\u9762\uff0c\u5355\u6b21\u590d\u6742\u5ea6$O(n)$\uff0c\u603b\u590d\u6742\u5ea6$O(\\frac{n^2}{lim})$\uff0c\u7406\u7531\u540c\u4e0a\u3002\n\n\u5bf9\u4e8e\u67e5\u8be2\uff08\u67e5\u8be2\u7684$x$\u548c$y$\u987a\u5e8f\u4e0d\u5f71\u54cd\u7b54\u6848\uff0c\u56e0\u6b64\u8bbe$size_x\\leqslant size_y$\uff09\n\n- \u5f53$size_x\\leqslant lim,size_y\\leqslant lim$\u65f6\uff0c\u6211\u4eec\u91c7\u7528\u4e0a\u8ff0\u66b4\u529b$1$\u6765\u8ba1\u7b97\u7b54\u6848\uff0c\u590d\u6742\u5ea6\u4e3a$O(lim)$\uff0c\u603b\u590d\u6742\u5ea6$O(m\\cdot lim)$\u3002\n- \u5f53$size_x\\leqslant lim,size_y>lim$\u65f6\uff0c\u91c7\u7528\u4e0a\u8ff0\u66b4\u529b\u8ba1\u7b97$x$\u7684\u4f4d\u7f6e\u96c6\u5408\u548c$y$\u7684$v$\u96c6\u5408\u7684\u7b54\u6848\uff0c\u540c\u65f6\u522b\u5fd8\u4e86\u52a0\u4e0a$ans[y]$\u7684\u8d21\u732e\uff0c\u603b\u590d\u6742\u5ea6$O(m\\cdot lim)$\u3002\n- \u5f53$size_x>lim,size_y>lim$\u65f6\uff0c\u91c7\u7528\u4e0a\u8ff0\u66b4\u529b\u8ba1\u7b97$x$\u548c$y$\u7684$v$\u96c6\u5408\u7684\u7b54\u6848\uff0c\u52a0\u4e0a$ans[x]$\u548c$ans[y]$\u7684\u8d21\u732e\uff0c\u603b\u590d\u6742\u5ea6$O(m\\cdot lim)$\u3002\n\n\u6545\u7a0b\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(\\frac{n^2}{lim}+m\\cdot lim)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a$O(n\\cdot lim)$\uff0c\u56e0\u4e3a$n=m$\uff0c\u6240\u4ee5$lim=\\sqrt{n}$\u7684\u590d\u6742\u5ea6\u6700\u4f18\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\sqrt{n})$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(n\\sqrt{n})$\u3002\n\n\n## \u4ee3\u7801\n```\n#include<stdio.h>\n#include<vector>\n#include<string.h>\n#include<math.h>\n#define inf 0x3f3f3f3f\nusing namespace std;\nconst int maxn=1000005,maxt=505;\nint n,m,lastans,lim,tot;\nint a[maxn],val[maxn],size[maxn],id[maxn],ans[maxt][maxn];\nvector<int>v[maxn];\ninline int abs(int x){\n\treturn x<0? -x:x;\n}\nvoid build(int x){//\u91cd\u6784\u5757\n\tint dis;\n\tif(id[x]==0)\n\t\tid[x]=++tot;\n\tmemset(ans[id[x]],0x3f,sizeof(ans[id[x]]));\n\tv[x].clear();\n\tdis=inf;\n\tfor(int i=1;i<=n;i++){\n\t\tif(a[i]==x)\n\t\t\tdis=0;\n\t\telse dis++;\n\t\tans[id[x]][a[i]]=min(ans[id[x]][a[i]],dis);\n\t}\n\tdis=inf;\n\tfor(int i=n;i>=1;i--){\n\t\tif(a[i]==x)\n\t\t\tdis=0;\n\t\telse dis++;\n\t\tans[id[x]][a[i]]=min(ans[id[x]][a[i]],dis);\n\t}\n}\nvoid init(){//\u521d\u59cb\u5316\n\tlim=sqrt(n);\n\tfor(int i=1;i<=n;i++)\n\t\tval[i]=n+1;\n\tfor(int i=1;i<=n;i++)\n\t\tsize[a[i]]++,v[a[i]].push_back(i),val[a[i]]=a[i];\n\tfor(int i=1;i<=n;i++)\n\t\tif(size[i]>lim)\n\t\t\tbuild(i);\n}\nvoid merge(int x,int y){//\u5408\u5e76\u4e24\u4e2a\u9644\u5c5e\u96c6\u5408\n\tvector<int>res;\n\tfor(int i=0,j=0;i<v[x].size()||j<v[y].size();){\n\t\tif(j>=v[y].size()||(i<v[x].size()&&v[x][i]<v[y][j]))\n\t\t\tres.push_back(v[x][i]),i++;\n\t\telse res.push_back(v[y][j]),j++;\n\t}\n\tv[y]=res;\n}\nvoid updateA(int x,int y){//\u66b4\u529b1\n\tfor(int i=0;i<v[x].size();i++)\n\t\ta[v[x][i]]=y;\n\tfor(int i=1;i<=tot;i++)\n\t\tans[i][y]=min(ans[i][y],ans[i][x]);\n\tmerge(x,y);\n}\nvoid updateB(int x,int y){//\u66b4\u529b2\n\tfor(int i=1;i<=n;i++)\n\t\tif(a[i]==x)\n\t\t\ta[i]=y;\n\tbuild(y);\n}\nvoid update1(int x,int y){//\u4fee\u6539-\u5206\u7c7b\u8ba8\u8bba1\n\tif(size[x]+size[y]<=lim)\n\t\tupdateA(x,y);\n\telse updateB(x,y);\n}\nvoid update2(int x,int y){//\u4fee\u6539-\u5206\u7c7b\u8ba8\u8bba2\n\tif(size[x]+v[y].size()<=lim)\n\t\tupdateA(x,y);\n\telse updateB(x,y);\n}\nvoid update3(int x,int y){//\u4fee\u6539-\u5206\u7c7b\u8ba8\u8bba3\n\tupdateB(x,y);\n}\nvoid update(int x,int y){//\u4fee\u6539\n\tif(size[val[x]]==0||val[x]==val[y])\n\t\treturn ;\n\tint px=val[x],py=val[y];\n\tif(size[val[x]]>size[val[y]])\n\t\tval[y]=val[x],swap(px,py);\n\tval[x]=n+1,x=px,y=py;\n\tif(x==n+1||y==n+1)\n\t\treturn ;\n\tif(size[x]<=lim&&size[y]<=lim)\n\t\tupdate1(x,y);\n\tif(size[x]<=lim&&size[y]>lim)\n\t\tupdate2(x,y);\n\tif(size[x]>lim&&size[y]>lim)\n\t\tupdate3(x,y);\n\tsize[y]+=size[x],size[x]=0;\n\tv[x].clear();\n}\nint calc(int x,int y){//\u5408\u5e76\u4e24\u4e2a\u5757\u7684\u9644\u5c5e\u96c6\u5408\n\tint i=0,j=0,res=inf;\n\tif(size[x]==0||size[y]==0)\n\t\treturn inf;\n\twhile(i<v[x].size()&&j<v[y].size()){\n\t\tif(v[x][i]<v[y][j])\n\t\t\tres=min(res,v[y][j]-v[x][i]),i++;\n\t\telse res=min(res,v[x][i]-v[y][j]),j++;\n\t}\n\treturn res;\n}\nint query1(int x,int y){//\u67e5\u8be2-\u5206\u7c7b\u8ba8\u8bba1\n\treturn calc(x,y);\n}\nint query2(int x,int y){//\u67e5\u8be2-\u5206\u7c7b\u8ba8\u8bba2\n\treturn min(ans[id[y]][x],calc(x,y));\n}\nint query3(int x,int y){//\u67e5\u8be2-\u5206\u7c7b\u8ba8\u8bba3\n\treturn min(min(ans[id[x]][y],ans[id[y]][x]),calc(x,y));\n}\nint query(int x,int y){//\u67e5\u8be2\n\tx=val[x],y=val[y];\n\tif(x==n+1||y==n+1||size[x]==0||size[y]==0)\n\t\treturn -1;\n\tif(x==y)\n\t\treturn 0;\n\tif(size[x]>size[y])\n\t\tswap(x,y);\n\tif(size[x]<=lim&&size[y]<=lim)\n\t\treturn query1(x,y);\n\tif(size[x]<=lim&&size[y]>lim)\n\t\treturn query2(x,y);\n\tif(size[x]>lim&&size[y]>lim)\n\t\treturn query3(x,y);\n\treturn -1;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tinit();\n\tfor(int i=1;i<=m;i++){\n\t\tint t,x,y;\n\t\tscanf(\"%d%d%d\",&t,&x,&y);\n\t\tx^=lastans,y^=lastans;\n\t\tif(t==1)\n\t\t\tupdate(x,y);\n\t\tif(t==2){\n\t\t\tint res=query(x,y);\n\t\t\tif(res==-1)\n\t\t\t\tlastans=0,puts(\"Ikaros\");\n\t\t\telse lastans=res,printf(\"%d\\n\",res);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1603944488,
        "uid": 35754,
        "name": "Verdandi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5397 \u3010[Ynoi2018]\u5929\u964d\u4e4b\u7269\u3011"
    },
    {
        "content": "\u524d\u6392\u63d0\u9192\uff1a\u8fd9\u4e2a\u4eba\u5b9e\u5728\u5361\u4e0d\u52a8\u4e86\uff0c\u4ee3\u7801\u53ea\u80fd\u5f97 82pts\uff08\u5747\u5728 [700ms \u4ee5\u5185](https://www.luogu.com.cn/record/111176562)\uff09\uff0c\u4ec5\u4f5c\u601d\u8def\u53c2\u8003\u3002\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5397)\n\n\u5f11\u5c3d\u7834\u51c0\u7b2c\u56db\u5206\u5757\u3002\n\n\u5148\u9010\u5757\u8003\u8651\u8be2\u95ee\uff0c\u6211\u4eec\u624b\u73a9\u4e00\u4e0b\u4f1a\u53d1\u73b0\u8fd9\u6837\u4e00\u4e2a\u6027\u8d28\uff1a\u53ea\u6709\u5757\u5185\u6700\u8fd1\u7684\u548c\u6700\u65e9\uff08\u665a\uff09\u51fa\u73b0\u7684 $x,y$ \u4f1a\u5bf9\u7b54\u6848\u505a\u8d21\u732e\uff0c\u663e\u7136\u9009\u5176\u4ed6\u7684\u603b\u662f\u4e0d\u591f\u4f18\u3002\n\n\u4e8e\u662f\u8bb0\u5f55\u5982\u4e0b\u4e09\u4e2a\u4fe1\u606f\uff1a\n\n$ey_{i,j}$ \u8868\u793a\u7b2c $i$ \u4e2a\u5757\u4e2d\u503c $j$ \u6700\u65e9\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n\n$ls_{i,j}$ \u8868\u793a\u7b2c $i$ \u4e2a\u5757\u4e2d\u503c $j$ \u6700\u665a\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n\n$nr_{i,j,k}$ \u8868\u793a\u7b2c $i$ \u4e2a\u5757\u4e2d\u503c $i,j$ \u7684\u6700\u8fd1\u8ddd\u79bb\u3002\n\n\u524d\u4e24\u4e2a\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46 $nr$ \u6570\u7ec4\u4e0d\u53ef\u80fd\u5b58\u4e0b $n^2\\sqrt{n}$ \u4e2a\u5143\u7d20\uff0c\u7a7a\u95f4\u65f6\u95f4\u90fd\u70b8\u3002\u53d1\u73b0 $nr$ \u662f\u5206\u5757\u8ba1\u7b97\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u5757\u79bb\u6563\u5316\u3002\u7531\u4e8e\u4e00\u5757\u6700\u591a $\\sqrt{n}$ \u4e2a\u4e0d\u540c\u503c\uff0c\u6240\u4ee5\u6709 $i,j\\leq\\sqrt{n}$\uff0c\u5185\u5b58\u53ca\u65f6\u95f4\u538b\u7f29\u81f3 $n\\sqrt{n}$\u3002\u4e3a\u4e86\u5feb\u901f\u53d6\u51fa\u67d0\u6743\u503c\u5728\u67d0\u4e2a\u5757\u91cc\u7684\u79bb\u6563\u5316\u503c\uff0c\u518d\u8bb0\u4e00\u4e2a $P_{i,j}$ \u8868\u793a\u7b2c $i$ \u4e2a\u5757\u4e2d\u5168\u5c40\u503c $j$ \u7684\u79bb\u6563\u503c\u3002\u540c\u65f6 $ey,ls$ \u7684\u7a7a\u95f4\u4e5f\u56e0\u6b64\u964d\u5230\u4e86 $n$\u3002\n\n\u8be2\u95ee\u6709\u4e86\u9884\u5904\u7406\u7684\u652f\u6491\uff0c\u53ef\u4ee5\u76f4\u63a5\u6a21\u62df\uff08\u5177\u4f53\u89c1\u4ee3\u7801\uff0c\u5f88\u597d\u7406\u89e3\uff09\u3002\n\n------------\n\n\u8003\u8651\u9010\u5757\u4fee\u6539\uff0c\u5206\u4e09\u79cd\u60c5\u51b5\u3002\n\n1. $x$ \u4e0d\u5b58\u5728\uff1a\u76f4\u63a5\u8df3\u8fc7\uff08$\\Theta(1)$\uff09\u3002\n1. $y$ \u4e0d\u5b58\u5728\uff1a\u5c06 $P_{i,x}$ \u7684\u503c\u79fb\u5230 $P_{i,y}$ \u91cc\uff0c\u76f8\u5f53\u4e8e\u5c06\u5176\u53d6\u4ee3\uff0c\u6b64\u65f6 $ey,ls,nr$ \u663e\u7136\u90fd\u6ca1\u6709\u53d8\u5316\uff08$\\Theta(1)$\uff09\u3002\n1. $x,y$ \u90fd\u5b58\u5728\uff1a$ey_{i,P_{i,y}}$ \u5bf9 $ey_{i,P_{i,x}}$ \u53d6\u6700\u5c0f\u503c\uff0c$ls_{i,P_{i,y}}$ \u5bf9 $ls_{i,P_{i,x}}$ \u53d6\u6700\u5927\u503c\u3002\u5bf9\u4e8e $nr$\uff0c\u76f4\u63a5\u5bf9\u6240\u6709\u4e0d\u540c\u503c\u66b4\u529b\u4fee\u6539\uff08$\\Theta(\\sqrt{n})$\uff09\u3002\u7136\u800c\u8fd9\u5e76\u4e0d\u4f1a\u9020\u6210\u6bcf\u4e00\u6b21\u4fee\u6539\u7684\u590d\u6742\u5ea6\u9000\u5316\u4e3a $\\Theta(n)$\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5757\u91cc\u53ea\u6709 $\\sqrt{n}$ \u4e2a\u4e0d\u540c\u503c\uff0c\u4fee\u6539\u4e00\u6b21\u5c11\u4e00\u4e2a\uff0c\u81f3\u591a $\\sqrt{n}$ \u6b21\u540e\u5c31\u88ab\u4fee\u6539\u5b8c\u4e86\uff0c\u5269\u4e0b\u7684\u53ea\u6709\u60c5\u51b5 $1,2$\uff0c\u800c\u5b83\u4eec\u90fd\u662f $\\Theta(1)$ \u7684\u3002\n\n\u5269\u4e0b\u7684\u4fbf\u662f\u5361\u5e38\uff0c\u5361\u5e38\uff0c\u5361\u5e38\u3002\u8be6\u89c1\u5176\u4ed6\u9898\u89e3\uff0c\u8fd9\u91cc\u53ea\u80fd\u4fdd\u8bc1\u6b63\u786e\u6027\u4e86 ![](//\u56fe.tk/s)\u3002\n\nCode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+10,M=350,B=N/M+10;\nint n,m,len,cnt;\nstruct node{int e,p,No;}a[N];\nint st[B],ed[B],ey[B][M],ls[B][M],nr[B][M][M],P[N][B],ct[B],ans;\nbool cmp1(node x,node y){return x.p<y.p;}\nbool cmp2(node x,node y){return x.No<y.No;}\ninline int read() \n{\n    int x=0,f=1;\n    char c=getchar();\n    while (c<'0' || c>'9')if(c=='-')f=-1,c=getchar();\n    while (c>='0' && c<='9')x=x*10+c-'0',c=getchar(); \n    return x*f;\n}\n \ninline void print(int x) \n{\n    if(x<0)putchar('-'),x=-x;\n    if(x>9)print(x/10);\n    putchar(x%10+'0');\n    return;\n}\nvoid init()\n{\n    len=M-5;cnt=n/len+bool(n%len);\n    for(int i=1,j=1;i<=n;i+=len,j++)st[j]=ed[j-1]+1,ed[j]=i+len;\n    ed[cnt]=min(n,ed[cnt]);\n    for(int i=1;i<=cnt;i++)\n    {\n        sort(a+st[i],a+ed[i]+1,cmp1);\n        a[st[i]].e=1;P[a[st[i]].p][i]=a[st[i]].e;\n        for(int j=st[i]+1;j<=ed[i];j++)\n        {\n            if(a[j].p!=a[j-1].p)a[j].e=a[j-1].e+1;else a[j].e=a[j-1].e;\n            P[a[j].p][i]=a[j].e;\n        }\n        ct[i]=a[ed[i]].e;\n        sort(a+st[i],a+ed[i]+1,cmp2);\n    }\n    memset(nr,0x3f,sizeof(nr));\n    for(int i=1;i<=cnt;i++)\n    {\n        for(int j=st[i];j<=ed[i];j++)if(!ey[i][a[j].e])ey[i][a[j].e]=j;\n        for(int j=ed[i];j>=st[i];j--)if(!ls[i][a[j].e])ls[i][a[j].e]=j;\n        for(int j=st[i];j<=ed[i];j++)\n            for(int k=j+1;k<=ed[i];k++)\n            {\n                int Min=min(a[j].e,a[k].e),Max=max(a[j].e,a[k].e);\n                nr[i][Min][Max]=min(nr[i][Min][Max],k-j);\n            }\n    }\n    return;\n}\nint query(int x,int y)\n{\n    int ret=nr[0][0][0],EX,EY,LX=-1e9,LY=-1e9;\n    if(x==y)\n    {\n        for(int i=1;i<=cnt;i++)if(P[x][i])return 0;\n        return -1;\n    }\n    for(int i=1;i<=cnt;i++)ret=min(ret,nr[i][min(P[x][i],P[y][i])][max(P[x][i],P[y][i])]);\n    for(int i=1;i<=cnt;i++)\n    {\n        if(EX=ey[i][P[x][i]])ret=min(ret,EX-LY);\n        if(EY=ey[i][P[y][i]])ret=min(ret,EY-LX);\n        if(EX)LX=ls[i][P[x][i]];if(EY)LY=ls[i][P[y][i]];\n    }\n    return ret>=n?-1:ret;\n}\nvoid modify(int x,int y)\n{\n    for(int i=1;i<=cnt;i++)\n        if(!P[x][i])continue;\n        else if(!P[y][i])P[y][i]=P[x][i],P[x][i]=0;\n        else\n        {\n            int X=P[x][i],Y=P[y][i];\n            if(X>Y)\n            {\n                for(int j=1;j<=Y;j++)\n                    nr[i][j][Y]=min(nr[i][j][Y],nr[i][j][X]);\n                for(int j=Y+1;j<=X;j++)\n                    nr[i][Y][j]=min(nr[i][Y][j],nr[i][j][X]);\n                for(int j=X+1;j<=ct[i];j++)\n                    nr[i][Y][j]=min(nr[i][Y][j],nr[i][X][j]);\n            }\n            else\n            {\n                for(int j=1;j<=X;j++)\n                    nr[i][j][Y]=min(nr[i][j][Y],nr[i][j][X]);\n                for(int j=X+1;j<=Y;j++)\n                    nr[i][j][Y]=min(nr[i][j][Y],nr[i][X][j]);\n                for(int j=Y+1;j<=ct[i];j++)\n                    nr[i][Y][j]=min(nr[i][Y][j],nr[i][X][j]);\n            }\n            ey[i][Y]=min(ey[i][X],ey[i][Y]);ls[i][Y]=max(ls[i][X],ls[i][Y]);\n            ey[i][X]=ls[i][X]=0;P[x][i]=0;\n        }\n    return;\n}\nsigned main()\n{\n    n=read();m=read();\n    for(int i=1;i<=n;i++)a[i].p=read(),a[i].No=i;\n    init();\n    for(int i=1;i<=m;i++)\n    {\n        int op,x,y;\n        op=read();x=read()^ans;y=read()^ans;\n        if(op==1){if(x!=y)modify(x,y);}\n        else if((ans=query(x,y))==-1)puts(\"Ikaros\"),ans=0;else print(ans),putchar('\\n');\n    }\n    return 0;\n}\n```",
        "postTime": 1684830750,
        "uid": 939998,
        "name": "Sheez",
        "ccfLevel": 0,
        "title": "P5397 [Ynoi2018] \u5929\u964d\u4e4b\u7269"
    },
    {
        "content": "**P5397 sol**\n\n\u4e00\u767e\u5e74\u524d\u7684\u5b9e\u73b0\uff0c\u4e00\u767e\u5e74\u540e\u6765\u8d3a\u3002\n\n\u4e00\u4e2a\u6bd4\u8f83 trick \u7684\u53e3\u80e1\uff1a\u5148\u8003\u8651\u9759\u6001\u95ee\u9898\uff0c\u6839\u636e\u989c\u8272\u6839\u53f7\u5206\u6cbb\uff0c\u67e5\u8be2\u65f6\u7684\u989c\u8272 $c_1,c_2$\uff0c\u5982\u679c $|c_1|,|c_2| < B$ \u5c31\u76f4\u63a5\u5f52\u5e76\u6392\u5e8f\u67e5\u8be2\uff1b\u5982\u679c $\\max(|c_1|,|c_2|) \\geq B$\uff0c\u63d0\u524d\u9884\u5904\u7406\u51fa\u6765\u6240\u6709\u6ee1\u8db3 $|c| \\geq B$ \u7684 $c$ \u548c\u5176\u4ed6\u989c\u8272\u7684\u7b54\u6848\uff0c\u76f4\u63a5\u626b\u4e00\u904d\u5e8f\u5217\u5373\u53ef\u3002\n\n\u8003\u8651\u6709\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u5b9e\u9645\u989c\u8272\u5bf9\u5e94\u4ee3\u8868\u989c\u8272\u7684\u6620\u5c04\uff1b\u90a3\u4e48\u5728\u5408\u5e76\u65f6\u5c31\u53ef\u4ee5\u5f3a\u5236\u94a6\u5b9a $|c|$ \u5c0f\u7684\u5411 $|c|$ \u5927\u7684\u5408\u5e76\u3002\n\n\u8ba8\u8bba\u88ab\u5408\u5e76\u8005\u3002\u82e5 $|c| \\geq B$ \u90a3\u4e48\u76f4\u63a5\u5408\u5e76\u7136\u540e\u91cd\u6784\u5408\u5e76\u597d\u7684\u65b0\u989c\u8272\u96c6\u5408\u5bf9\u4e8e\u5176\u5b83\u6240\u6709\u989c\u8272\u7684\u8d21\u732e\u5373\u53ef\u3002\n\n\u82e5 $|c| < B$\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5957\u8def\u3002\u5c06\u4e00\u4e2a\u989c\u8272\u7684\u96c6\u5408\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u79f0\u4e3a\u201c\u5927\u90e8\u5206\u201d\u548c\u201c\u5c0f\u90e8\u5206\u201d\u3002\u5927\u90e8\u5206\u7ef4\u62a4\u7684\u662f $|c| > B$\uff1b\u5c0f\u90e8\u5206\u7528\u6765\u7ef4\u62a4\u5728\u5408\u5e76\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u591a\u6b21\u5408\u5e76\uff0c\u5408\u5e76\u6765\u7684 $\\sum |c| < B$ \u7684\u60c5\u51b5\uff0c\u8fd9\u90e8\u5206\u7684\u60c5\u51b5\u662f\u597d\u7ef4\u62a4\u7684\uff0c\u5c06\u5b83\u4eec\u5173\u4e8e\u6240\u6709\u5927\u989c\u8272\u7684\u7b54\u6848\u8fdb\u884c\u5408\u5e76\u5373\u53ef\uff0c\u8fd9\u662f $O(\\frac{n}{B})$ \u7684\u3002\n\n\u540c\u65f6\u5408\u5e76\u65f6\u4f18\u5148\u5c06\u5408\u5e76\u7684\u6570\u52a0\u5165\u5230\u5c0f\u90e8\u5206\u4e2d\uff0c\u5982\u679c\u5c0f\u90e8\u5206\u7684 $\\sum |c| > B$ \u5c31\u91cd\u6784\u8be5\u989c\u8272\u3002\n\n\u67e5\u8be2\u65f6\u5c06\u8d21\u732e\u62c6\u6210\u4e24\u8005\u989c\u8272\u96c6\u5408\u7684\u5927\u90e8\u5206\u5173\u4e8e\u5927\u90e8\u5206\uff0c\u5927\u90e8\u5206\u5173\u4e8e\u5c0f\u90e8\u5206\u548c\u5c0f\u90e8\u5206\u5173\u4e8e\u5c0f\u90e8\u5206\uff0c\u524d\u4e24\u8005\u90fd\u662f\u88ab\u6570\u7ec4\u76f4\u63a5\u7ef4\u62a4\u4e86\uff0c\u4e24\u4e2a\u5c0f\u90e8\u5206\u76f4\u63a5\u8dd1\u5f52\u5e76\u5373\u53ef\u3002\n\n\u53d6 $B = \\sqrt n$\uff0c\u65f6\u7a7a\u590d\u6742\u5ea6 $O(n \\sqrt n)$\u3002\n\n\u9274\u4e8e\u6b64\u9898\u53ef\u80fd\u4f1a\u88ab\u5361\u5e38\uff0c\u82e5\u4f60\u653e\u5f03\u601d\u8003\u53ef\u4ee5\u53c2\u8003[\u8fd9\u7bc7\u9898\u89e3](https://www.luogu.com.cn/blog/Rings/sol-p5397)\u7684\u5b9e\u73b0\u3002",
        "postTime": 1674890444,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u6ce2\u7279\u51fa\u751f\u4e8e\u91cd\u5e86\u5e02\u7684\u5927\u5b66\u57ce\u2014\u5b89\u5a1c\u5821\uff0c\u7236\u4eb2\u662f\u4f4d\u519b\u5b98\u3002"
    },
    {
        "content": "[$\\text{\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c}$](https://www.cnblogs.com/mfeitveer/p/16005691.html)\n\n\u849f\u84bb\u505a\u7684\u7b2c\u4e00\u9053\u9ed1\u8272\u7684 $\\text{Ynoi}$\uff0c\u5199\u4e00\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u3002\n\n### \u9898\u610f\n\n\u7b2c\u56db\u5206\u5757\u3002\n\n\u4f60\u9700\u8981\u5b9e\u73b0 $m$ \u4e2a\u64cd\u4f5c\uff0c\u64cd\u4f5c\u6709\u4e24\u79cd\uff1a\n\n1. \u628a\u5e8f\u5217\u4e2d\u6240\u6709\u503c\u4e3a $x$ \u7684\u6570\u7684\u503c\u53d8\u6210 $y$\u3002\n2. \u627e\u51fa\u4e00\u4e2a\u4f4d\u7f6e $i$ \u6ee1\u8db3 $a_i=x$\uff0c\u627e\u51fa\u4e00\u4e2a\u4f4d\u7f6e $j$ \u6ee1\u8db3 $a_j=y$\uff0c\u4f7f\u5f97 $|i-j|$ \u6700\u5c0f\uff0c\u5e76\u8f93\u51fa $|i-j|$\u3002\n\n### \u601d\u8def\n\n\u8003\u8651\u5982\u4f55\u5199\u4e00\u4e2a\u66b4\u529b\u3002\n\n\u7528\u4e00\u4e2a $\\text{vector}$ \u628a\u6240\u6709\u4f4d\u7f6e\u8bb0\u5f55\u4e0b\u6765\uff0c\u7136\u540e\u6bcf\u6b21\u67e5\u8be2\u7528\u7c7b\u4f3c\u5f52\u5e76\u7684\u5199\u6cd5\u66b4\u529b\u67e5\u8be2\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u7528\u6839\u53f7\u5206\u6cbb\u8fdb\u884c\u4f18\u5316\u3002\n\n\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u8fdb\u884c\u6839\u53f7\u5206\u6cbb\u3002\n\n\u5927\u4f53\u601d\u8def\u662f\u5bf9\u4e8e\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u9600\u503c\u7684\u9884\u5904\u7406\u7b54\u6848\uff0c\u67e5\u8be2\u65f6\u76f4\u63a5\u67e5\u3002\n\n\u5bf9\u4e8e\u51fa\u73b0\u6b21\u6570\u5c0f\u4e8e\u9600\u503c\u7684\u76f4\u63a5\u66b4\u529b\u5f52\u5e76\u3002\n\n**\u4fee\u6539**\n\n\u9996\u5148\u6709\u4e00\u4e2a\u5c0f\u7684 $\\text{trick}$\uff0c\u5c31\u662f\u6211\u4eec\u53d1\u73b0 $x$ \u548c $y$ \u5176\u5b9e\u662f\u7b49\u4ef7\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4ea4\u6362\u4ed6\u4eec\u3002\n\n\u8003\u8651\u8ba9 $siz_x<siz_y$\u3002\n\n1. \u82e5\u4e24\u4e2a\u90fd\u5927\u4e8e\u9600\u503c\u3002\n\n\u6211\u4eec\u76f4\u63a5 $O(n)$ \u66b4\u529b\u5408\u5e76\uff0c\u7531\u4e8e\u6bcf\u4e00\u6b21\u5408\u5e76\u90fd\u4f1a\u51cf\u5c11\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u9600\u503c\u7684\u6570\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt n)$\n\n2. \u82e5\u4e00\u4e2a\u5927\u4e8e\u9600\u503c\uff0c\u4e00\u4e2a\u5c0f\u4e8e\u9600\u503c\u3002\n\n\u6211\u4eec\u8003\u8651\u5bf9\u6bcf\u4e00\u4e2a\u5927\u4e8e\u9600\u503c\u7684\u7ef4\u62a4\u4e00\u4e2a\u9644\u52a0\u96c6\u5408\u3002\n\n\u6211\u4eec\u5c06\u5c0f\u4e8e\u9600\u503c\u7684\u52a0\u5165\u5230\u9644\u52a0\u96c6\u5408\u4e2d\uff0c\u5728\u8fd9\u91cc\uff0c\u518d\u6b21\u8003\u8651\u6839\u53f7\u5206\u6cbb\u3002\n\n\u5982\u679c\u9644\u52a0\u96c6\u5408\u7684\u5927\u5c0f\u5c0f\u4e8e\u9600\u503c\uff0c\u90a3\u4e48\uff0c\u6b64\u90e8\u5206\u590d\u6742\u5ea6\u4e3a $O(m\\sqrt n)$\u3002\n\n\u5982\u679c\u9644\u52a0\u96c6\u5408\u7684\u5927\u5c0f\u5927\u4e8e\u9600\u503c\uff0c\u6211\u4eec\u5c31\u5168\u90e8\u66b4\u529b $O(n)$ \u7edf\u8ba1\u7b54\u6848\uff0c\u8fd9\u91cc\u6700\u591a\u4f1a\u66b4\u529b\u91cd\u6784 $O(\\sqrt n)$ \u6b21\u3002\n\n\u6240\u4ee5\uff0c\u6b64\u90e8\u5206\u590d\u6742\u5ea6\u4e3a $O(m\\sqrt n)$\u3002\n\n3. \u82e5\u4e24\u4e2a\u90fd\u5c0f\u4e8e\u9600\u503c\n\n\u6211\u4eec\u5c06\u4e24\u4e2a\u96c6\u5408\u5408\u5e76\uff0c\u5728\u8fd9\u91cc\uff0c\u5982\u7b2c\u4e8c\u70b9\u4e00\u6837\u8003\u8651\u6839\u53f7\u5206\u6cbb\u3002\n\n\u5982\u679c\u96c6\u5408\u7684\u5927\u5c0f\u5c0f\u4e8e\u9600\u503c\uff0c\u90a3\u4e48\uff0c\u6b64\u90e8\u5206\u590d\u6742\u5ea6\u4e3a $O(m\\sqrt n)$\u3002\n\n\u5982\u679c\u96c6\u5408\u7684\u5927\u5c0f\u5927\u4e8e\u9600\u503c\uff0c\u6211\u4eec\u5c31\u5168\u90e8\u66b4\u529b $O(n)$ \u7edf\u8ba1\u7b54\u6848\uff0c\u8fd9\u91cc\u6700\u591a\u4f1a\u66b4\u529b\u91cd\u6784 $O(\\sqrt n)$ \u6b21\u3002\n\n\u6240\u4ee5\uff0c\u6b64\u90e8\u5206\u590d\u6742\u5ea6\u4e3a $O(m\\sqrt n)$\u3002\n\n**\u67e5\u8be2**\n\n\u67e5\u8be2\u6bd4\u4e0a\u9762\u7684\u4fee\u6539\u6709\u7b80\u5355\u591a\u4e86\uff0c\u6bd5\u7adf\u7b54\u6848\u4ec0\u4e48\u90fd\u9884\u5904\u7406\u5b8c\u4e86\u3002\n\n1. \u82e5\u4e24\u4e2a\u90fd\u5927\u4e8e\u9600\u503c\u3002\n\n\u5219\u67e5\u8be2\u9884\u5904\u7406\u7684\u7b54\u6848\uff0c\u5e76\u4e14\u5c06\u4e24\u4e2a\u9644\u52a0\u96c6\u5408\u8fdb\u884c\u5f52\u5e76\u8ba1\u7b97\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(m \\sqrt n)$\u3002\n\n2. \u82e5\u4e00\u4e2a\u5927\u4e8e\u9600\u503c\uff0c\u4e00\u4e2a\u5c0f\u4e8e\u9600\u503c\u3002\n\n\u540c\u6837\u67e5\u8be2\u9884\u5904\u7406\u7684\u7b54\u6848\uff0c\u5e76\u4e14\u5c06\u9644\u52a0\u96c6\u5408\u548c\u96c6\u5408\u8fdb\u884c\u5f52\u5e76\u8ba1\u7b97\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(m \\sqrt n)$\u3002\n\n3. \u82e5\u4e24\u4e2a\u90fd\u5c0f\u4e8e\u9600\u503c\n\n\u76f4\u63a5\u5f52\u5e76\u8ba1\u7b97\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\sqrt n)$\u3002\n\n\u7531\u4e8e $m,n$ \u540c\u9636\uff0c\u6240\u4ee5\u7efc\u4e0a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt n)$\n\n\u4ee3\u7801\u5b9e\u6d4b\u9600\u503c\u53d6 $500$ \u8dd1\u5f97\u6700\u5feb\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 100010;\nconst int base = 320;\n\nint n , m , top , len , lastans , a[N] , stk[N] , siz[N] , rel[N] , sum[base][N];\n\nvector<int> f[N];\n\ninline int read()\n{\n    int asd = 0 , qwe = 1; char zxc;\n    while(!isdigit(zxc = getchar())) if(zxc == '-') qwe = -1;\n    while(isdigit(zxc)) asd = asd * 10 + zxc - '0' , zxc = getchar();\n    return asd * qwe;\n}\n\ninline void cl(vector<int> &now)\n{\n    vector<int> ne;\n    now.swap(ne);\n}\n\ninline int calc(vector<int> x , vector<int> y)\n{\n    int len1 = x.size() , len2 = y.size() , ans = 100010;\n    for(int i = 0 , j = 0;i < len1;i++)\n    {\n        if(j < len2) ans = min(ans , abs(y[j] - x[i]));\n        while(j < len2 && y[j] < x[i]) ans = min(ans , x[i] - y[j++]);\n        if(j < len2) ans = min(ans , abs(y[j] - x[i]));\n    }\n    return ans;\n}\n\ninline void solve(vector<int> &x , vector<int> &y)\n{\n    vector<int> ne;\n    int i , j , len1 = x.size() , len2 = y.size() , ans = 100010;\n    for(i = 0 , j = 0;i < len1;i++)\n    {\n        while(j < len2 && y[j] < x[i]) ne.push_back(y[j++]);\n        ne.push_back(x[i]);\n    }\n    while(j < len2) ne.push_back(y[j++]);\n    y = ne , cl(x);\n}\n\ninline void update(int r , int id = 0)\n{\n    stk[r] = stk[r] ? stk[r] : ++top; int x = stk[r];\n    memset(sum[x] , 0x3f , sizeof sum[x]);\n    for(int i = 1 , j = N;i <= n;i++)\n        if(a[i] == r) j = 0; else sum[x][a[i]] = min(sum[x][a[i]] , ++j);\n    for(int i = n , j = N;i >= 1;i--)\n        if(a[i] == r) j = 0; else sum[x][a[i]] = min(sum[x][a[i]] , ++j);\n    cl(f[r]);\n}\n\nint main()\n{\n    n = read() , m = read() , memset(sum , 0x3f , sizeof sum) , len = 500;\n    for(int i = 1;i <= n;i++) a[i] = read() , rel[i] = i;\n    for(int i = 1;i <= n;i++) f[a[i]].push_back(i) , siz[a[i]]++;\n    for(int i = 1;i <= n;i++) if(f[i].size() > len) update(i);\n    \n    for(int i = 1;i <= m;i++)\n    {\n        int opt = read() , x = read() ^ lastans , y = read() ^ lastans;\n        if(opt == 1)\n        {\n            int l = rel[x] , r = rel[y];\n            if(siz[l] == 0 || l == r) continue;\n            if(siz[l] > siz[r]) rel[y] = l , swap(l , r) , rel[x] = n + 1;\n            else rel[x] = n + 1; if(l > n || r > n) continue;\n            \n            if(siz[r] <= len)\n            {\n                if(siz[l] + siz[r] <= len)\n                {\n                    for(int j : f[l]) a[j] = r;\n                    for(int j = 1;j <= top;j++) sum[j][r] = min(sum[j][r] , sum[j][l]);\n                    solve(f[l] , f[r]);\n                }\n                else\n                {\n                    for(int i = 1;i <= n;i++) if(a[i] == l) a[i] = r;\n                    update(r);\n                }\n            }\n            else if(siz[l] <= len)\n            {\n                if(siz[l] + f[r].size() <= len)\n                {\n                    for(int j : f[l]) a[j] = r;\n                    for(int j = 1;j <= top;j++) sum[j][r] = min(sum[j][r] , sum[j][l]);\n                    solve(f[l] , f[r]);\n                }\n                else\n                {\n                    for(int i = 1;i <= n;i++) if(a[i] == l) a[i] = r;\n                    update(r);\n                }\n            }\n            else\n            {\n                for(int i = 1;i <= n;i++) if(a[i] == l) a[i] = r;\n                update(r);\n            }\n\n            cl(f[l]) , siz[r] += siz[l] , siz[l] = 0;\n        }\n        else\n        {\n            int l = rel[x] , r = rel[y];\n            if(!siz[l] || !siz[r]) lastans = -1;\n            else if(l == r) lastans = 0;\n            else\n            {\n                if(siz[l] > siz[r]) swap(l , r);\n                if(siz[r] <= len) lastans = calc(f[l] , f[r]);\n                else if(siz[l] <= len) lastans = min(sum[stk[r]][l] , calc(f[l] , f[r]));\n                else lastans = min({sum[stk[r]][l] , sum[stk[l]][r] , calc(f[l] , f[r])});\n            }\n            if(lastans == -1) puts(\"Ikaros\") , lastans = 0;\n            else printf(\"%d\\n\" , lastans);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1647258953,
        "uid": 320933,
        "name": "Mfeitveer",
        "ccfLevel": 0,
        "title": "P5397 [Ynoi2018] \u5929\u964d\u4e4b\u7269 \u9898\u89e3"
    },
    {
        "content": "\u5927\u5206\u5757\u6700\u4f18\u89e3\uff0c\u7eaa\u5ff5\u4e00\u4e0b qwq\u3002\n\n**\u9898\u610f\uff1a** \u5bf9\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5e8f\u5217\u64cd\u4f5c $m$ \u6b21\uff0c\u5c06\u7b49\u4e8e $x$ \u7684\u6570\u4fee\u6539\u4e3a $y$\uff0c\u6216\u67e5\u8be2\u5e8f\u5217\u91cc\u7b49\u4e8e $x$ \u7684\u6570\u4e0e\u7b49\u4e8e $y$ \u7684\u6570\u7684\u6700\u8fd1\u8ddd\u79bb\u3002\n\n**Solution:**\n\n\u7b2c\u4e00\u773c\u611f\u89c9\u548c\u524d\u4e24\u4e2a\u5927\u5206\u5757\u5dee\u4e0d\u591a\uff0c~~\u6253\u5e76\u67e5\u96c6\u5c31\u5b8c\u4e8b\u4e86~~\uff0c\u770b\u4e86\u770b\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u611f\u89c9\u4e0d\u53ef\u884c\u3002\n\n\u67e5\u8be2\u663e\u7136\u53ef\u4ee5\u8bb0\u5f55\u4e0b\u4e24\u4e2a\u6570\u4f4d\u7f6e\u7684\u96c6\u5408\uff08**\u6709\u5e8f\u7684**\uff09\uff0c\u7136\u540e\u8df3\u53cc\u6307\u9488\uff0c\u8fd9\u663e\u7136\u662f\u4e2a\u66b4\u529b\uff08$O(n)$\uff09\uff0c\u6216\u8005\u66b4\u529b\u8bb0\u5f55\u6bcf\u4e2a\u6570\u4e0e\u5176\u5b83\u6570\u7684\u7b54\u6848\uff0c\u7136\u540e\u8fd9\u91cc $O(1)$ \u67e5\u8be2\uff0c\u8fd9\u66f4\u66b4\u529b\u4e86\uff08\u9884\u5904\u7406\u5c31\u662f $O(n^2)$\uff09\u3002~~\u7136\u540e\u5c31\u662f\u672c\u9898\u6700\u7cbe\u9ad3\u7684\u4e00\u70b9\uff1a~~ \u770b\u89c1\u6570\u636e\u8303\u56f4 $10^5$ \u548c\u51fa\u9898\u4eba\u7684\u540d\u5b57\uff0c\u731c\u60f3 std \u590d\u6742\u5ea6\u4e3a $O(n\\sqrt n)$\uff0c\u800c\u4e14 $500ms$ \u8981\u6c42\u6211\u4eec\u5fc5\u987b\u5c0f\u5e38\u6570\u3002\n\n\u65e2\u7136\u5e26\u6839\u53f7\u800c\u4e14\u4e0a\u8ff0\u4e24\u4e2a\u66b4\u529b\u6ca1\u4e00\u4e2a\u548c\u5206\u5757\u6709\u5173\uff0c\u6240\u4ee5\u76f4\u89c9\u544a\u8bc9\u6211\u4eec\u662f**\u6839\u53f7\u5206\u6cbb**\uff0c\u4ee5\u7b2c\u4e00\u4e2a\u66b4\u529b\u7684\u96c6\u5408\u5927\u5c0f\u4e3a\u5206\u6cbb\u5bf9\u8c61\uff0c\u6211\u4eec\u5047\u8bbe\u9608\u503c\u4e3a $lim=\\sqrt n$\uff0c\u64cd\u4f5c\u7684\u4e24\u4e2a\u6570\u4e3a $x,y$\uff0c\u5176\u51fa\u73b0\u6b21\u6570\u5206\u522b\u4e3a $siz_x,siz_y$\u3002\n\n$siz_x,siz_x\\ge lim$\uff0c\u7ef4\u62a4\u5b83\u4e0e\u5176\u5b83\u6570\u7684\u6700\u8fd1\u8ddd\u79bb $ans_{id_x,y}$\uff0c$id_x$ \u4e3a $x$ \u7684\u7279\u5b9a\u7f16\u53f7\uff08\u4e0d\u7136\u7a7a\u95f4\u5c31 $O(n^2)$ \u4e86\uff09\uff1a\n\n- \u4fee\u6539\u65f6\uff0c\u8fd9\u79cd\u64cd\u4f5c\u663e\u7136\u4e0d\u5927\u4e8e $O(\\frac{n}{lim})$ \u4e2a\uff0c\u4e8e\u662f\u66b4\u529b\u5408\u5e76 $ans_{id_x,i},ans_{id_y,i}$\u5c31\u884c\u4e86\u3002\n- \u67e5\u8be2\u65f6\u76f4\u63a5 $O(1)$ \u67e5 $\\min\\{ans_{id_x,y},ans_{id_y,x}\\}$\u3002\n\n$siz_x,siz_y<lim$ \u7684\u6570\uff0c\u7ef4\u62a4\u5b83\u5728\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\u96c6\u5408 $vec_x,vec_y$\uff0c\u67e5\u8be2\u548c\u4fee\u6539\u90fd\u53ef\u4ee5\u66b4\u529b\uff1a\n\n- \u4fee\u6539\u5c31\u50cf\u5f52\u5e76\u6392\u5e8f\u5408\u5e76\u90a3\u6837\u8df3\u53cc\u6307\u9488\uff0c\u4e3a\u4e86\u7ef4\u62a4\u597d $ans$ \u6570\u7ec4\uff0c\u8fd9\u91cc\u8981\u904d\u5386\u4e00\u904d $ans_{i,x},ans_{i,y}$\u3002\n- \u67e5\u8be2\u5c31~~\u50cf\u4fee\u6539\u2191\u90a3\u6837~~\u8df3\u53cc\u6307\u9488\u3002\n\n\u5982\u679c $siz_x,siz_y$ \u6709\u4e00\u4e2a $\\ge lim$\uff0c\u6211\u4eec\u5904\u7406\u4e00\u4e0b\uff0c\u8ba9 $siz_x\\le siz_y$ \u5373 $siz_x<lim,siz_y\\ge lim$\uff0c\u7528\u4e00\u4e2a\u8f85\u52a9\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\u6bcf\u4e00\u4e2a\u6570\u5bf9\u5e94\u7684\u662f\u5e8f\u5217\u91cc\u7684\u54ea\u4e2a\u6570\uff0c\u8fd9\u4e1c\u897f\u6b63\u5e38\u5730\u5904\u7406\u5373\u53ef\u3002\n\n- \u4fee\u6539\uff0c\u91cd\u6784 $ans_{id_y,i}$ \u8981\u6302\uff0c\u5408\u5e76 $vec_x,vec_y$ \u4e5f\u8981\u6302\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5bf9\u6bcf\u4e2a $siz_p\\ge lim$ \u7684 $p$ \u7ef4\u62a4\u4e00\u4e2a $vec_p$\uff08\u4e0d\u7ef4\u62a4\u51fa\u73b0\u7684\u4e0b\u6807\u96c6\u5408\u5c31\u884c\u4e86\uff09\uff0c\u5982\u679c $vec_x.size()+vec_y.size()<lim$\uff0c\u90a3\u5c31\u5c06 $vec_x$ \u5408\u5e76\u8fdb $vec_y$\uff0c\u53cd\u4e4b\u5c31\u91cd\u6784 $ans_{id_y,i}$\u3002\n\n\u6bcf\u6b21\u4fee\u6539\u65f6\u8bb0\u5f97\u628a\u5e8f\u5217\u66f4\u65b0\u3002\n\n**Code**\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate<typename zqw>void qr(zqw &x) {\n\tbool f=x=0;\n\tchar c=getchar();\n\twhile(!isdigit(c)) f|=c=='-',c=getchar();\n\twhile(isdigit(c)) x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\tx=f?~(x-1):x;\n\treturn ;\n}\nconst int N=100005,lim=400;\nint pos[N],id,ans[lim][N],a[N],n,m,srz[N],siz[N],op,x,y,_x,_y,lstans;\nvector<int> vec[N];\nvoid build(int x) {\n\tif(!pos[x]) pos[x]=++id;\n\tmemset(ans[pos[x]],0x7f,sizeof(ans[pos[x]]));\n\tfor(auto &lxl:vec[x]) a[lxl]=x;\n\tint lst=0x7f7f7f7f;\n\tfor(int i=1;i<=n;i++) {\n\t\tif(a[i]==x) lst=0;\n\t\telse lst++;\n\t\tans[pos[x]][a[i]]=min(ans[pos[x]][a[i]],lst);\n\t}\n\tlst=0x7f7f7f7f;\n\tfor(int i=n;i>=1;i--) {\n\t\tif(a[i]==x) lst=0;\n\t\telse lst++;\n\t\tans[pos[x]][a[i]]=min(ans[pos[x]][a[i]],lst);\n\t}\n\tvec[x].clear();\n\treturn ;\n}\nvoid update1(int x,int y) {\n\tvector<int> tmp;\n\tint x1=0,x2=0;\n\twhile(x1<vec[x].size()||x2<vec[y].size()) {\n\t\tif(x1==vec[x].size()) tmp.push_back(vec[y][x2++]);\n\t\telse if(x2==vec[y].size()) tmp.push_back(vec[x][x1++]);\n\t\telse if(vec[x][x1]<vec[y][x2]) tmp.push_back(vec[x][x1++]);\n\t\telse tmp.push_back(vec[y][x2++]);\n\t}\n\tvec[y]=tmp;\n\tfor(int i=1;i<=id;i++) ans[i][y]=min(ans[i][x],ans[i][y]);\n}\nvoid update2(int x,int y) {\n\tfor(int i=1;i<=n;i++) ans[pos[y]][i]=min(ans[pos[y]][i],ans[pos[x]][i]);\n\treturn ;\n}\nint ask(int x,int y) {\n\tint i=0,j=0,tmp=0x7f7f7f7f;\n\twhile(i<vec[x].size()&&j<vec[y].size()) {\n\t\ttmp=min(tmp,abs(vec[y][j]-vec[x][i]));\n\t\tif(vec[x][i]<vec[y][j]) i++;\n\t\telse j++;\n\t}\n\treturn tmp;\n}\nint main() {\n\tqr(n),qr(m);\n\tfor(int i=1;i<=n;i++) srz[i]=n+1;\n\tfor(int i=1;i<=n;i++) {\n\t\tqr(a[i]);\n\t\t++siz[a[i]],srz[a[i]]=a[i];\n\t\tvec[a[i]].push_back(i);\n\t}\n\tfor(int i=1;i<=n;i++) if(siz[i]>=lim) build(i),vec[i].clear();\n\tfor(int i=1;i<=m;i++) {\n\t\tqr(op),qr(x),qr(y),x^=lstans,y^=lstans,_x=srz[x],_y=srz[y];\n\t\tif(op^2) {\n\t\t\tif(_x==_y||siz[_x]==0) continue;\n\t\t\tif(siz[_x]>siz[_y]) srz[y]=srz[x],swap(_x,_y);\n\t\t\tsrz[x]=n+1,x=_x,y=_y;\n\t\t\tif(siz[x]<lim) {\n\t\t\t\tfor(auto &lxl:vec[x]) a[lxl]=y;\n\t\t\t\tif(siz[y]<lim) {\n\t\t\t\t\tif(siz[x]+siz[y]>=lim) build(y);\n\t\t\t\t\telse update1(x,y);\n\t\t\t\t}else {\n\t\t\t\t\tif(siz[x]+vec[y].size()>=lim) build(y);\n\t\t\t\t\telse update1(x,y);\n\t\t\t\t}\n\t\t\t}else {\n\t\t\t\tfor(int j=1;j<=n;j++) (a[j]==x)&&(a[j]=y);\n\t\t\t\tbuild(y);\n\t\t\t}\n\t\t\tsiz[y]+=siz[x],siz[x]=0,vec[x].clear();\n\t\t}else {\n\t\t\tx=_x,y=_y;\n\t\t\tif(x==n+1||y==n+1||siz[x]==0||siz[y]==0) {\n\t\t\t\tlstans=0;\n\t\t\t\tprintf(\"Ikaros\\n\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(siz[x]>siz[y]) swap(x,y);\n\t\t\tif(x==y) lstans=0;\n\t\t\telse {\n\t\t\t\tif(siz[x]<lim) {\n\t\t\t\t\tif(siz[y]<lim) lstans=ask(x,y);\n\t\t\t\t\telse lstans=min(ans[pos[y]][x],ask(x,y));\n\t\t\t\t}else lstans=min(min(ans[pos[y]][x],ans[pos[x]][y]),ask(x,y));\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",lstans);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1646445056,
        "uid": 383791,
        "name": "Others",
        "ccfLevel": 7,
        "title": "P5397 \u9898\u89e3"
    },
    {
        "content": "## P5397 [Ynoi2018] \u5929\u964d\u4e4b\u7269 \u9898\u89e3\n\n~~\u4e00\u4e2a\u7279\u5224\u6ca1\u52a0\u8c03\u4e86\u4e00\u6574\u5929\u6574\u4e2a\u4eba\u90fd\u81ea\u95ed\u4e86~~\n\n\u9996\u7bc7 Ynoi \u9898\u89e3+\u6700\u4f18\u89e3\u796d\u4e00\u4e0b\u3002\n\n[P5397 [Ynoi2018] \u5929\u964d\u4e4b\u7269](https://www.luogu.com.cn/problem/P5397)\n\n### \u9898\u610f\n\n\u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217\uff0c\u652f\u6301\u628a\u6240\u6709\u7684\u4e00\u4e2a\u6570\u4fee\u6539\u4e3a\u53e6\u4e00\u4e2a\u6570\uff0c\u652f\u6301\u67e5\u8be2\u4e24\u6570\u51fa\u73b0\u4f4d\u7f6e\u5750\u6807\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u7684\u6700\u5c0f\u503c\uff0c$n,m,a_i\\leq 10^5$\u3002\n\n### \u6734\u7d20\u601d\u8def\n\n\u8fd9\u9898\u601d\u8def\u4e0d\u662f\u5f88\u96be\u60f3\uff08\u5927\u6982\uff09\uff0c\u53ef\u4ee5\u770b\u51fa\u662f\u4e2a\u6839\u53f7\u5206\u6cbb\u3002\u5177\u4f53\u6765\u8bb2\u53ef\u4ee5\u628a\u6570\u5206\u4e3a\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u6839\u53f7\u7684\u548c\u5c0f\u4e8e\u7b49\u4e8e\u6839\u53f7\u6b21\u7684\uff0c\u6211\u4eec\u5206\u522b\u79f0\u5176\u4e3a\u5927\u6570\u548c\u5c0f\u6570\u3002\n\n\u7136\u540e\u9996\u5148\u53ef\u4ee5\u60f3\u5230\u7ef4\u62a4\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u8fd9\u6837\u5bf9\u4e8e\u67e5\u8be2\u4e24\u4e2a\u5c0f\u6570\u7684\u60c5\u51b5\u53ef\u4ee5\u76f4\u63a5\u7ebf\u6027\u5f52\u5e76\u5f97\u5230\u7ed3\u679c\uff0c\u5355\u6b21\u590d\u6742\u5ea6 $O(\\sqrt n)$\u3002\n\n\u63a5\u7740\u5bf9\u4e8e\u5927\u6570\uff0c\u56e0\u4e3a\u5b83\u6700\u591a\u53ea\u6709\u6839\u53f7\u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u5bf9\u6bcf\u4e2a\u5927\u6570\u9884\u5904\u7406\u5176\u5bf9\u4e8e\u5176\u5b83\u6240\u6709\u6570\u7684\u7b54\u6848\uff0c\u6b63\u53cd\u626b\u4e24\u6b21\u5e8f\u5217\u5373\u53ef\uff0c\u5355\u6b21\u590d\u6742\u5ea6 $O(n)$\u3002\n\n\u6709\u4e86\u8fd9\u4e9b\u6211\u4eec\u5c31\u53ef\u4ee5\u5904\u7406\u6ca1\u6709\u4fee\u6539\u7684\u60c5\u51b5\u4e86\uff0c\u90a3\u5047\u8bbe\u6709\u4fee\u6539\u7684\u8bdd\u3002\u5c0f\u6570\u5c0f\u6570\u5408\u5e76\uff0c\u7ed3\u679c\u662f\u5c0f\u6570\u5c31\u4e0d\u7ba1\uff0c\u5927\u6570\u5c31\u66b4\u529b\u66f4\u65b0\u3002\u5927\u6570\u5927\u6570\u5408\u5e76\u4ecd\u7136\u662f\u66b4\u529b\u66f4\u65b0\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5927\u6570\u6700\u591a\u88ab\u5408\u5e76\u4e00\u6b21\uff0c\u6240\u4ee5\u5747\u644a\u4e0b\u6765\u4ecd\u7136\u662f\u6839\u53f7\u7684\u590d\u6742\u5ea6\u3002\n\n\u73b0\u5728\u6700\u5927\u7684\u95ee\u9898\u662f\u4e00\u4e2a\u5c0f\u6570\u548c\u4e00\u4e2a\u5927\u6570\u7684\u5408\u5e76\uff0c\u5982\u679c\u6bcf\u6b21\u5f80\u4e00\u4e2a\u5927\u6570\u91cc\u9762\u5408\u5e76\u4e00\u4e2a\u5927\u5c0f\u4e3a\u4e00\u7684\u5c0f\u6570\u6bcf\u6b21\u90fd\u66b4\u529b\u8dd1\u5c31\u70b8\u6389\u4e86\uff0c\u6240\u4ee5\u8003\u8651\u4f18\u5316\u3002\n\n### \u6df1\u5165\u5206\u6790\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7ed9\u6bcf\u4e2a\u5927\u6570\u4e00\u4e2a \u201c\u9644\u5c5e\u96c6\u201d\uff0c\u91cc\u9762\u4ecd\u7136\u50a8\u5b58\u5f53\u524d\u6570\u7684\u4e00\u4e9b\u51fa\u73b0\u4f4d\u7f6e\uff0c\u4e0d\u8fc7\u9700\u8981\u4fdd\u8bc1\u5176\u5927\u5c0f\u4e0d\u8d85\u8fc7 $\\sqrt n$\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u5408\u5e76\u65f6\u628a\u5c0f\u6570\u653e\u8fdb\u5927\u6570\u7684\u9644\u5c5e\u96c6\u91cc\u9762\uff0c\u7b49\u5230\u9644\u5c5e\u96c6\u5927\u5c0f\u8d85\u8fc7 $\\sqrt n$ \u65f6\u518d\u53bb\u66b4\u529b\u8dd1\u4e00\u6b21\u7b54\u6848\u3002\n\n\u90a3\u8fd9\u65f6\u6211\u4eec\u7ed9\u5927\u6570\u9884\u5904\u7406\u51fa\u7684\u7b54\u6848\u4e0b\u4e2a\u65b0\u7684\u5b9a\u4e49\uff0c\u5373\u201c\u8be5\u6570\u4e0d\u5728\u9644\u5c5e\u96c6\u5185\u7684\u5143\u7d20\u548c\u5176\u4ed6\u6570\u7684\u7b54\u6848\u201d\u3002\u8fd9\u6837\u7ef4\u62a4\u4e0d\u6210\u95ee\u9898\uff0c\u5728\u67e5\u8be2\u65f6\u53ea\u9700\u8981\u5355\u72ec\u5904\u7406\u4e00\u4e0b\u9644\u5c5e\u96c6\u5185\u5143\u7d20\u7684\u8d21\u732e\u5373\u53ef\u3002\u4e0d\u8fc7\u7ec6\u8282\u6709\u4ebf\u70b9\u591a\u3002\n\n### \u5b9e\u73b0\u7ec6\u8282\n\n+ \u5bf9\u4e8e\u6bcf\u4e2a\u5b9e\u9645\u7684\u6570\u90fd\u7ef4\u62a4\u4e00\u4e2a $id_x$\uff0c\u8868\u793a\u5b9e\u9645\u7684\u6570\u5bf9\u5e94\u7684\u5e8f\u5217\u6570\u53ca\u5176\u51fa\u73b0\u4f4d\u7f6e\u3001\u7b54\u6848\u7684\u96c6\u5408\u7f16\u53f7\u3002\u8fd9\u6837\u5982\u679c\u6709\u7c7b\u4f3c\u628a $x$ \u6539\u6210 $y$ \u4f46 $y$ \u4e0d\u5b58\u5728\u7684\u64cd\u4f5c\u65f6\u5c31\u53ea\u9700\u8981 $id_x=id_y$ \u5373\u53ef\u3002\u5408\u5e76\u65f6\u56e0\u4e3a\u5927\u5c0f\u5173\u7cfb\u800c\u8fdb\u884c\u7684\u4ea4\u6362\u4e5f\u65b9\u4fbf\u4e86\u5f88\u591a\u3002\n+ \u9644\u5c5e\u96c6\u5408\u548c\u51fa\u73b0\u4f4d\u7f6e\u96c6\u5408\u53ef\u4ee5\u4e00\u6982\u800c\u8bba\uff0c\u5747\u7528 $p$ \u8868\u793a\u3002\n+ \u5173\u4e8e\u4fee\u6539\u548c\u67e5\u8be2\u5bf9\u4e8e\u5927\u5c0f\u96c6\u5408\u7684\u5224\u65ad\u4e2a\u4eba\u611f\u89c9\u73b0\u6709\u9898\u89e3\u6709\u4e9b\u5197\u4f59\uff1a\n  + \u4fee\u6539\u64cd\u4f5c\u53ea\u9700\u8981\u4fdd\u8bc1 $x$ \u4e3a\u8f83\u5c0f\u6570\uff0c\u5148\u5224\u4e00\u4e0b\u90fd\u662f\u5927\u6570\u7684\u60c5\u51b5\uff0c\u5426\u5219\u76f4\u63a5\u5224\u65ad\u66f4\u65b0\u540e $y$ \u7684 $p$ \u96c6\u5408\u5927\u5c0f\u662f\u5426\u8d85\u8fc7 $\\sqrt n$ \u5373\u53ef\u3002\n  + \u67e5\u8be2\u64cd\u4f5c\u65e0\u8bba\u5982\u4f55\u90fd\u8981\u8003\u8651 $p$ \u96c6\u5408\uff0c\u90a3\u4e48\u5c31\u5148\u7528\u6765\u66f4\u65b0\u7b54\u6848\uff0c\u7136\u540e\u770b $x,y$ \u54ea\u4e2a\u662f\u5927\u6570\u5c31\u66f4\u65b0\u4e00\u4e0b\u3002\n\n### \u6700\u540e\n\n\u5173\u4e8e\u6c42\u4e24\u4e2a $p$ \u96c6\u5408\u7b54\u6848\u7684 `query0` \u51fd\u6570\uff0c\u4e00\u5b9a\u8981\u52a0 `if(!sx||!sy)return inf;`\uff01\u672c\u6765\u89c9\u5f97\u5982\u679c\u6709\u7a7a\u96c6\u5408\u4e0d\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u4f46\u5b9e\u9645\u4e0a\u6700\u540e\u90a3\u4e2a\u5269\u4f59\u6570\u5224\u65ad\u662f\u4e0d\u4f1a\u5224\u65ad\u53e6\u4e00\u4e2a\u96c6\u5408\u7684\u5927\u5c0f\u7684\uff0c\u4e0d\u52a0\u53ef\u80fd\u53d1\u751f UB\u3002~~\u8fd9\u73a9\u610f\u8c03\u6211\u4e00\u6574\u5929\u3002~~ \n\n\u53e6\u5916\u5757\u957f\u5927\u5c0f\u4e0d\u4e00\u5b9a\u662f\u4e25\u683c\u7684 $\\sqrt n$\uff0c\u8bd5\u4e86\u8bd5\u53d1\u73b0 $650$ \u662f\u4e00\u4e2a\u6bd4\u8f83\u9002\u5408\u7684\u5757\u957f\u3002\n\n### \u8d34\u4ee3\u7801\n\n\u4ee3\u7801\u6ca1\u6709\u9632\u6284\u53ef\u4ee5\u653e\u5fc3\u5bf9\u62cd\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tchar c;int f=1,res=0;\n\twhile(c=getchar(),!isdigit(c))if(c=='-')f*=-1;\n\twhile(isdigit(c))res=res*10+c-'0',c=getchar();\n\treturn res*f;\n}\nconst int N=1.2e5,L=650,inf=0x3f3f3f3f;\nint n,m,a[N],lst=0;\nint cnt[N],id[N];\nvector<int> ans[N],p[N],bid;\n/*\n\u53d8\u91cf\u89e3\u91ca:\n\tcnt:\u5e8f\u5217\u6570\u7684\u51fa\u73b0\u6b21\u6570\n\tid:\u5b9e\u9645\u6570\u5bf9\u5e94\u7684\u5e8f\u5217\u6570\n\tans:\u5927\u6570\u7684\u975e\u9644\u5c5e\u96c6\u5408\u90e8\u5206\u5bf9\u5176\u4ed6\u6570\u7684\u8d21\u732e\n\tp:\u5927\u6570\u7684\u9644\u5c5e\u96c6\u5408\u6216\u8005\u5c0f\u6570\u7684\u51fa\u73b0\u4f4d\u7f6e \n\tbid:\u5927\u6570\u96c6\u5408\n\u5176\u4e2d ans,p,bid \u4ee3\u8868\u7684\u5927\u6570\u3001\u5c0f\u6570\u5747\u662f\u5e8f\u5217\u6570 \n*/\ninline void umin(int &x,int y)\n\t{if(y<x)x=y;}\n//\u66f4\u65b0\u5927\u6570\u7b54\u6848 t\u8868\u793a\u662f\u5426\u662f\u4e00\u4e2a\u65b0\u7684\u5927\u6570 \ninline void calc(int ix,bool t){\n\tif(t)bid.push_back(ix),ans[ix].resize(n+5);\n\tfor(int i=1;i<=n;++i)\n\t\tans[ix][i]=inf;\n\tfor(int i=1,j=inf;i<=n;++i){\n\t\tif(a[i]==ix)j=0;\n\t\tumin(ans[ix][a[i]],j++);\n\t}\n\tfor(int i=n,j=inf;i;--i){\n\t\tif(a[i]==ix)j=0;\n\t\tumin(ans[ix][a[i]],j++);\n\t}p[ix].resize(0);\n}\ninline void init(){\n\tfor(int i=1;i<=n;++i)\n\t\tif(cnt[i]>L)\n\t\t\tcalc(i,true);\n}\n//\u5408\u5e76\u4e24\u4e2a p \u96c6\u5408 \ninline void merge0(int ix,int iy){\n\tint i=0,j=0;\n\tvector<int> res;\n\tint sx=p[ix].size(),sy=p[iy].size();\n\twhile(i<sx&&j<sy){\n\t\tif(p[ix][i]<p[iy][j])\n\t\t\tres.push_back(p[ix][i++]);\n\t\telse res.push_back(p[iy][j++]);\n\t}\n\twhile(i<sx)res.push_back(p[ix][i++]);\n\twhile(j<sy)res.push_back(p[iy][j++]);\n\tp[iy]=res;\n}inline void merge1(int ix,int iy)//\u4ec5\u5bf9p\u96c6\u5408\u4f4d\u7f6e\u4fee\u6539 \n\t{for(int i:p[ix])a[i]=iy;}\ninline void merge2(int ix,int iy){//\u5bf9\u5168\u5c40\u4f4d\u7f6e\u4fee\u6539 \n\tfor(int i=1;i<=n;++i)\n\t\tif(a[i]==ix)a[i]=iy;\n}inline void uans(int ix,int iy){//\u628aix\u9644\u5230iy\u4e0a\u66f4\u65b0\u5bf9\u5176\u4ed6\u5927\u6570\u7684\u7b54\u6848 \n\tfor(int i:bid)\n\t\tumin(ans[i][iy],ans[i][ix]);\n}\ninline void cg(int x,int y){\n\tint &ix=id[x],&iy=id[y];\n\tif(!cnt[ix]||ix==iy)return;\n\tif(!cnt[iy])\n\t\t{iy=ix,ix=0;return;}\n\tif(!ix||!iy)return; \n\tif(cnt[ix]>cnt[iy])swap(ix,iy);\n\tif(cnt[ix]>L&&cnt[iy]>L)\n\t\tmerge2(ix,iy),calc(iy,false);\n\telse{\n\t\tuans(ix,iy);\n\t\tif(cnt[ix]+p[iy].size()<=L)\n\t\t\tmerge1(ix,iy),merge0(ix,iy);\n\t\telse \n\t\t\tmerge2(ix,iy),calc(iy,cnt[iy]<=L&&cnt[iy]+cnt[ix]>L);\n\t\t\t//\u540e\u9762\u90a3\u4e00\u4e32\u662f\u5728\u5224\u65adiy\u662f\u5426\u4f1a\u6210\u4e3a\u4e00\u4e2a\u65b0\u7684\u5927\u6570 \n\t}\n\tcnt[iy]+=cnt[ix];cnt[ix]=0;\n\tp[ix].resize(0);ix=0;\n}\n//\u6c42ix\u548ciy\u7684p\u96c6\u5408\u7684\u7b54\u6848 \ninline int query0(int ix,int iy){\n\tint res=inf,i=0,j=0;\n\tint sx=p[ix].size(),sy=p[iy].size();\n\tif(!sx||!sy)return inf;//\u8fd9\u53e5\u7279\u5224\u4e00\u5b9a\u8981\u52a0\uff01\uff01 \n\twhile(i<sx&&j<sy){\n\t\tif(p[ix][i]<p[iy][j])\n\t\t\tumin(res,p[iy][j]-p[ix][i++]);\n\t\telse umin(res,p[ix][i]-p[iy][j++]);\n\t}\n\twhile(i<sx)umin(res,abs(p[ix][i++]-p[iy][sy-1]));\n\twhile(j<sy)umin(res,abs(p[iy][j++]-p[ix][sx-1]));\n\treturn res;\n}\ninline int solve(int x,int y){\n\tint ix=id[x],iy=id[y];\n\tif(!cnt[ix]||!cnt[iy])return inf;\n\tif(x==y)return 0;\n\tint res=query0(ix,iy);\n\tif(cnt[iy]>L)umin(res,ans[iy][ix]);\n\tif(cnt[ix]>L)umin(res,ans[ix][iy]);\n\treturn res;\n}\nint main(){\n\tn=read();m=read();\n\tfor(int i=1;i<=n;++i){\n\t\tint x=a[i]=read();\n\t\tid[x]=x;++cnt[x];\n\t\tp[x].push_back(i);\n\t}init();\n\tfor(int i=1;i<=m;++i){\n\t\tint op=read();\n\t\tint x=read()^lst,y=read()^lst;\n\t\tif(op==1)\n\t\t\tcg(x,y);\n\t\telse if(op==2){\n\t\t\tlst=solve(x,y);\n\t\t\tif(lst<inf)printf(\"%d\\n\",lst);\n\t\t\telse puts(\"Ikaros\"),lst=0;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1636074739,
        "uid": 206258,
        "name": "SDNetFriend",
        "ccfLevel": 7,
        "title": "P5397 [Ynoi2018] \u5929\u964d\u4e4b\u7269 \u9898\u89e3"
    },
    {
        "content": "\u6bd2\u7624\u5361\u5e38\u9898\u3002\n\n\u8003\u8651\u5206\u5757\u3002\u5148\u60f3\u67e5\u8be2\u3002\n\n\u5bf9\u4e8e\u5757\u7684\u5185\u90e8\uff0c\u6bcf\u4e2a\u5757\u9884\u5904\u7406 $dis_{i,j,k}$\uff0c\u8868\u793a\u7b2c $i$ \u4e2a\u5757\u5185\uff0c$j$ \u5230 $k$ \u7684\u6700\u77ed\u8ddd\u79bb\u3002\u8fd9\u91cc\u5f97\u628a $j,k$ \u5728\u5757\u5185\u79bb\u6563\u5316\uff0c\u56e0\u4e3a\u5757\u957f $O(\\sqrt{n})$\uff0c\u6700\u591a\u51fa\u73b0 $O(\\sqrt n)$ \u4e2a\u503c\uff0c\u7a7a\u95f4\u662f $O(n\\sqrt n)$ \u7684\u3002\n\n\u5bf9\u4e8e\u5757\u5230\u5757\uff0c\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e\u540c\u4e00\u4e2a\u503c\uff0c\u4ec5\u6bcf\u4e2a\u5757\u6700\u9760\u5de6\u7684\u4f4d\u7f6e\u548c\u6700\u9760\u53f3\u7684\u4f4d\u7f6e\u624d\u53ef\u80fd\u662f\u4f18\u7684\u3002\u6240\u4ee5\u7ef4\u62a4 $L_{i,j}$ \u548c $R_{i,j}$ \u5206\u522b\u8868\u793a\u7b2c $i$ \u4e2a\u5757\uff0c\u503c\u4e3a $j$ \u6700\u65e9\u51fa\u73b0\u4f4d\u7f6e\u548c\u6700\u665a\u51fa\u73b0\u4f4d\u7f6e\u3002\u6bcf\u4e2a\u5757\u626b\u4e00\u904d\uff0c\u8d2a\u5fc3\u7b97\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u60f3\u60f3\u4fee\u6539\u3002\u5bf9\u4e8e $x$ \u53d8\u6210 $y$ \u7684\u4fee\u6539\uff0c\u904d\u5386\u6240\u6709\u6574\u5757\u3002\n\n- \u82e5\u5f53\u524d\u5757\u6ca1\u51fa\u73b0 $x$\uff0c\u76f4\u63a5\u8df3\u8fc7\u3002\n\n- \u82e5\u5f53\u524d\u5757\u6ca1\u51fa\u73b0 $y$\uff0c\u76f4\u63a5\u5c06 $x$ \u5bf9\u5e94\u7684\u79bb\u6563\u503c\u4f20\u7ed9 $y$\u3002\n\n- \u82e5\u5f53\u524d $x,y$ \u5747\u51fa\u73b0\uff0c\u66b4\u529b\u66f4\u65b0\u5173\u4e8e $x,y$ \u6240\u6709\u4fe1\u606f\u3002\u56e0\u4e3a\u6bcf\u6b21\u8fd9\u6837\u4fee\u6539\u90fd\u4f1a\u4f7f\u5757\u5185\u7684\u989c\u8272\u5c11\u4e00\uff0c\u6bcf\u6b21\u4fee\u6539 $O(\\sqrt n)$\uff0c\u6700\u591a\u4fee\u6539 $O(\\sqrt n)$ \u6b21\uff0c\u5171 $O(\\sqrt n)$ \u4e2a\u5757\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f $O(n\\sqrt n)$\u3002\n\n\u5047\u8bbe $n,q$ \u540c\u7ea7\uff0c\u65f6\u7a7a\u590d\u6742\u5ea6\u90fd\u662f $O(n\\sqrt n)$ \u7684\u3002\n\n\u96be\u70b9\u5728\u4e8e\u5361\u5e38\u3002\u51e0\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u4f18\u5316\u3002\n\n1. \u8868\u793a\u771f\u5b9e\u503c\u548c\u79bb\u6563\u503c\u6620\u5c04\u5173\u7cfb\u7684 $vis$ \u6570\u7ec4\u548c $dis$ \u6570\u7ec4\u5927\u5c0f\u90fd\u662f $O(n\\sqrt n)$ \u7684\uff0c\u4e14\u503c\u57df\u90fd\u662f $O(\\sqrt n)$\uff0c\u53ef\u4ee5\u5f00 `short`\uff0c\u7a7a\u95f4\u5e38\u6570\u80fd\u5c11\u4e00\u534a\uff0c\u6548\u679c\u660e\u663e\u3002\n\n2. \u5185\u5b58\u8bbf\u95ee\u4e00\u5b9a\u8981\u8fde\u7eed\u3002\u5185\u5b58\u8bbf\u95ee\u8fde\u7eed\u5bf9\u5e38\u6570\u5f71\u54cd\u5de8\u5927\u3002\u4ee4 $vis$ \u6570\u7ec4\u7b2c\u4e00\u7ef4\u8868\u793a\u503c\uff0c\u7b2c\u4e8c\u7ef4\u8868\u793a\u5757\u7684\u7f16\u53f7\u3002\u5176\u4ed6\u6570\u7ec4\u90fd\u4ee5\u5757\u7f16\u53f7\u4e3a\u7b2c\u4e00\u7ef4\u3002\n\n3. $L,R$ \u6570\u7ec4\u4ee5\u79bb\u6563\u503c\u4e3a\u7b2c\u4e8c\u7ef4\uff0c\u8fd9\u6837\u7a7a\u95f4\u662f $O(n)$ \u7684\u3002\n\n4. $dis_{i,j,k}$ \u4fdd\u8bc1 $j<k$\uff0c\u4e14\u5c3d\u91cf\u5c11\u8c03\u7528 $dis$\uff0c\u56e0\u4e3a\u5b83\u5185\u5b58\u8bbf\u95ee\u76f8\u5f53\u4e0d\u8fde\u7eed\u3002\u53ef\u4ee5\u628a $i,j$ \u538b\u6210\u4e00\u7ef4\uff0c\u6539\u4e3a $s_i+j$\uff0c\u6211\u89c9\u5f97\u6548\u679c\u4e0d\u5927\u3002\n\n5. \u968f\u7f18\u8c03\u8c03\u5757\u957f\uff0c\u6211\u662f $370$\u3002\n\n6. \u7528 C++20\uff0c\u53ea\u6709\u4e00\u4e24\u4e2a\u70b9\u5dee\u51e0\u5341\u6beb\u79d2\u53ef\u4ee5\u591a\u4ea4\u51e0\u53d1\uff0c\u5229\u7528\u8bc4\u6d4b\u673a\u6ce2\u52a8\uff0c\u6216\u8005\u5229\u7528 O2 \u6027\u8d28\u6765\u4e00\u4e9b\u65e0\u8c13\u7684\u5faa\u73af\uff08\u6211\u611f\u89c9\u4f1a\u5feb\uff0c\u53ef\u80fd\u662f\u5047\u7684\uff09\u3002\n\n\u6211\u534a\u4e2a\u5c0f\u65f6\u4ea4\u4e86\u56db\u9875\uff0c\u8981\u6709\u6301\u4e4b\u4ee5\u6052\u7684\u8010\u5fc3\u3002",
        "postTime": 1684301548,
        "uid": 365107,
        "name": "Terac",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5397 [Ynoi2018] \u5929\u964d\u4e4b\u7269"
    },
    {
        "content": "\u7b2c $300$ \u7bc7\u9898\u89e3\u5f53\u7136\u8981\u5199\u4e2a\u6709\u610f\u601d\u7684\u9898\u3002\n\nlxl \u7ed9\u51fa\u7684\u6807\u7b54\u662f\u6839\u53f7\u5206\u6cbb\uff0c\u4e0d\u8fc7\u4e5f\u6709\u5e8f\u5217\u5206\u5757\u7684\u505a\u6cd5\uff0c\u53ea\u4e0d\u8fc7\u975e\u5e38\u9700\u8981\u5361\u5e38\u3002\n\n\u6211\u4eec\u5148\u5bf9\u5e8f\u5217\u5206\u5757\u3002\u63a5\u7740\u6211\u4eec\u8003\u8651\u600e\u4e48\u5904\u7406\u8be2\u95ee\u3002\n\n\u663e\u7136\u8be2\u95ee\u7684\u7ed3\u679c\u6709\u4e24\u79cd\uff1a\n\n1. \u5728\u5757\u5185\u7684\u7b54\u6848\u3002\u8fd9\u79cd\u53ef\u4ee5\u901a\u8fc7\u9884\u5904\u7406 $dis_{i,j,k}$ \u8868\u793a\u7b2c $i$ \u5757\u4e2d $j$ \u5230 $k$ \u7684\u6700\u5c0f\u8ddd\u79bb\u3002\u5373\u6211\u4eec\u6bcf\u4e00\u5757\u66b4\u529b $O((\\sqrt n)^2)$ \u679a\u4e3e\uff0c\u663e\u7136\u9884\u5904\u7406\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\sqrt n)$\u3002\u56e0\u4e3a\u6bcf\u4e00\u5757\u6700\u591a\u53ea\u6709 $O(\\sqrt n)$ \u4e2a\u4e0d\u540c\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u5757\u7684\u6570\u79bb\u6563\u5316\uff0c\u8fd9\u6837\u7a7a\u95f4\u590d\u6742\u5ea6\u4e5f\u53ef\u4ee5\u964d\u4f4e\u5230 $O(n \\sqrt n)$\u3002\n\n2. \u6a2a\u8de8\u591a\u5757\u7684\u7b54\u6848\u3002\u6211\u4eec\u4ece\u524d\u5f80\u540e\u6bcf\u5757\u641c\u7d22\uff0c\u5982\u679c\u8fd9\u4e00\u5757\u6709 $x$\uff0c\u90a3\u4e48\u80af\u5b9a\u8981\u5728\u524d\u9762\u63a5\u4e00\u4e2a $y$\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u5757\u5904\u7406 $f_{i,x}$ \u548c $e_{i,x}$ \u8868\u793a $i$ \u5757\u4e2d $x$ \u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u3002\u90a3\u4e48\u524d\u9762\u6211\u4eec\u60f3\u6c42\u7684\u5c31\u53ef\u4ee5\u8f7b\u677e\u7b97\u51fa\u4e86\u3002\n\n\u4e24\u79cd\u7b54\u6848\u53d6 $\\min$ \u5373\u53ef\u3002\n\n\u800c\u8f83\u96be\u7684\u5219\u662f\u4fee\u6539\uff1a\n\n\u6211\u4eec\u5047\u8bbe\u6709\u4e00\u5757 $i$\uff0c\u8981\u628a\u6240\u6709 $x$ \u6539\u4e3a $y$\u3002\n\n1. \u5982\u679c\u5757\u4e2d\u6ca1\u6709 $x$\uff0c\u90a3\u4e48\u8df3\u8fc7\u3002\n\n2. \u5982\u679c\u5757\u4e2d\u6ca1\u6709 $y$\uff0c\u90a3\u4e48\u6211\u4eec\u628a $y$ \u5728 $i$ \u5757\u4e2d\u79bb\u6563\u5316\u7684\u503c\u6539\u4e3a $x$\u3002\n\n3. \u5982\u679c\u5373\u6709 $x$ \u4e5f\u6709 $y$\u3002\u6211\u4eec\u5148\u66f4\u65b0 $y$ \u7684 $f$ \u548c $e$\uff0c\u7136\u540e\u66b4\u529b\u679a\u4e3e $k$\uff0c\u7528 $dis_{i,x,k}$ \u66f4\u65b0 $dis_{i,y,k}$\u3002\u7531\u4e8e\u79bb\u6563\u5316\u8fc7\uff0c\u8fd9\u4e00\u6b65\u662f $O( \\sqrt n)$ \u7684\u3002\n\n\u4f60\u53ef\u80fd\u4f1a\u95ee\u8fd9\u6700\u540e\u4e00\u6b65\u7684\u590d\u6742\u5ea6\u597d\u50cf\u662f\u9519\u8bef\u7684\u3002\u4f46\u5b9e\u9645\u4e0a\uff0c\u5bf9\u4e8e\u67d0\u4e00\u5757\uff0c\u5982\u679c\u4e00\u76f4\u662f $3$ \u64cd\u4f5c\uff0c\u90a3\u4e48\u6700\u591a\u7ecf\u8fc7 $O(\\sqrt n)$ \u6b21\uff0c\u8fd9\u4e2a\u5757\u5185\u6570\u5c31\u4f1a\u5168\u90e8\u4e00\u6837\uff0c\u6b64\u65f6\u53ea\u6709\u53ef\u80fd\u8fdb\u5165 $1$ \u548c $2$ \u4e86\u3002\u90a3\u4e48\u8fd9\u4e00\u5757\u5bf9\u590d\u6742\u5ea6\u7684\u8d21\u732e\u662f $O(n)$\uff0c\u6240\u6709\u5757\u4e5f\u5c31\u53ea\u6709 $O(n \\sqrt n)$ \u4e86\u3002\n\n\u81f3\u6b64\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a $O(n \\sqrt n)$ \u65f6\u95f4\uff0c$O(n \\sqrt n)$ \u7a7a\u95f4\u7684\u505a\u6cd5\u3002\n\n\u7136\u800c\u4ea4\u4e0a\u53bb\uff0cT \u4e86\u4e00\u7247\u3002\u4e8e\u662f\u9700\u8981\u5361\u5e38\u3002\n\n\u51e0\u4e2a\u5361\u5e38\u6280\u5de7\uff1a\n\n1. \u4fdd\u8bc1\u6570\u7ec4\u5185\u5b58\u8bbf\u95ee\u8fde\u7eed\u3002\u6211\u7684\u4ee3\u7801\u4e2d\u6709 $v_{i,j}$ \u8868\u793a $i$ \u5757\u4e2d $j$ \u79bb\u6563\u5316\u7ed3\u679c\u3002\u800c\u5c06\u5176\u6539\u4e3a $v_{j,i}$ \u540e\u5feb\u4e86\u8bb8\u591a\uff0c$f$ \u548c $e$ \u540c\u7406\u3002\n\n2. \u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u5faa\u73af\u3002\n\n3. \u8c03\u5757\u957f\u3002\u7ecf\u5c1d\u8bd5\uff0c\u6211\u7684\u4ee3\u7801\u7684\u6700\u4f18\u5757\u957f\u7ea6\u5728 $200$ \u5de6\u53f3\u3002\n\n4. Fread \u5feb\u8bfb\u3002\n\n5. \u9009\u4e2a\u4eba\u5c11\u7684\u65f6\u95f4\u4ea4\u3002\n\n\u7136\u540e\u7ed9\u4e00\u4e2a\u4ea4\u4e86\u51e0\u5341\u6b21\u8fc7\u4e86\u4e00\u6b21\uff0c\u518d\u4ea4\u53c8\u4f1a T \u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <cmath>\n#include <cstring>\nusing namespace std;\n\nconst int N = 1e5 + 5, blo = 203, M = 494;\n\n#define get(x) ((x) / blo + 1)\n\n#define BF_SIZE 100000\nbool IOerr = 0;\ninline char nc() {\n\tstatic char buf[BF_SIZE], * p1 = buf + BF_SIZE, * pend = buf + BF_SIZE;\n\tif (p1 == pend) {\n\t\tp1 = buf;\n\t\tpend = buf + fread(buf, 1, BF_SIZE, stdin);\n\t\tif (pend == p1) { IOerr = 1; return -1; }\n\t}\n\treturn *p1++;\n}\ninline bool bla(char ch) { return ch == ' ' || ch == '\\n' || ch == '\\r' || ch == '\\t'; }\ninline int read()\n{\n\tchar ch;\n\tint x = 0;\n\twhile (bla(ch = nc()));\n\tif (IOerr) { return 0; }\n\tfor (x = ch - '0'; (ch = nc()) >= '0' && ch <= '9'; x = (x << 1) + (x << 3) + ch - '0');\n\treturn x;\n}\n\nint n, m, a[N];\nint b[N], idx;\nshort v[N][M];\nint f[N][M], e[N][M];\nshort dis[M][blo + 1][blo + 1];\nint L, R;\n#define gl(i) (((i) - 1) * blo)\nconst short INF = 32765;\n\ninline int query(int& x, int& y)\n{\n\tint lx = 0, ly = 0, ans = 10000000;\n\tfor (int i = L; i <= R; i = -~i)\n\t{\n\t\tif (ans == 1) return ans;\n\t\tif (v[x][i] && v[y][i])\n\t\t{\n\t\t\tans = min(ans, (int)dis[i][v[x][i]][v[y][i]]);\n\t\t}\n\t\tif (v[x][i] && ly)\n\t\t{\n\t\t\tans = min(ans, f[v[x][i]][i] - ly);\n\t\t}\n\t\tif (v[y][i] && lx)\n\t\t{\n\t\t\tans = min(ans, f[v[y][i]][i] - lx);\n\t\t}\n\t\tif (v[x][i]) lx = e[v[x][i]][i];\n\t\tif (v[y][i]) ly = e[v[y][i]][i];\n\t}\n\treturn ans;\n}\n\ninline void modify(int& x, int& y)\n{\n\tif (x == y) return;\n\tfor (int i = 1; i <= R; i = -~i)\n\t{\n\t\tint xx(v[x][i]), yy(v[y][i]);\n\t\tif (!xx) continue;\n\t\tif (!yy)\n\t\t{\n\t\t\tv[y][i] = v[x][i];\n\t\t\tv[x][i] = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tf[yy][i] = min(f[yy][i], f[xx][i]);\n\t\t\te[yy][i] = max(e[yy][i], e[xx][i]);\n\t\t\tf[xx][i] = e[xx][i] = 0;\n\t\t\tfor (int j = 1; j <= blo; j = -~j)\n\t\t\t{\n\t\t\t\tdis[i][yy][j] = dis[i][j][yy] = min(dis[i][j][yy], dis[i][j][xx]);\n\t\t\t\tdis[i][xx][j] = dis[i][j][xx] = INF;\n\t\t\t}\n\t\t\tdis[i][yy][xx] = dis[i][xx][yy] = INF;\n\t\t\tv[x][i] = 0;\n\t\t}\n\t}\n}\n\ninline void write(int x)\n{\n\tif (x > 9) write(x / 10);\n\tputchar(x % 10 + '0');\n}\n\nint main()\n{\n\tmemset(dis, 0x3f, sizeof dis);\n\tn = read(), m = read();\n\tfor (int i = 1; i <= n; i++) a[i] = read();\n\tL = 1, R = get(n);\n\tint nl(1);\n\tint nr(blo - 1);\n\tidx = 0;\n\tfor (int j(nl); j <= nr; j = -~j) b[++idx] = a[j];\n\tsort(b + 1, b + idx + 1);\n\tfor (int j(nl); j <= nr; j = -~j)\n\t{\n\t\tint na = lower_bound(b + 1, b + idx + 1, a[j]) - b;\n\t\tv[a[j]][1] = na;\n\t\tif (!f[na][1]) f[na][1] = j;\n\t\te[na][1] = j;\n\t\tdis[1][na][na] = 0;\n\t}\n\tfor (int j(nl); j <= nr; j = -~j)\n\t{\n\t\tfor (int k(j + 1); k <= nr; k++)\n\t\t{\n\t\t\tint nx(v[a[j]][1]), ny(v[a[k]][1]), g(min(dis[1][nx][ny], (short)(k - j)));\n\t\t\tdis[1][nx][ny] = g;\n\t\t\tdis[1][ny][nx] = g;\n\t\t}\n\t}\n\tfor (int i = 2; i <= R; i++)\n\t{\n\t\tint nl(gl(i));\n\t\tint nr(gl(i + 1) - 1);\n\t\tif (nr > n) nr = n;\n\t\tidx = 0;\n\t\tfor (int j = nl; j <= nr; j++) b[++idx] = a[j];\n\t\tsort(b + 1, b + idx + 1);\n\t\tfor (int j(nl); j <= nr; j++)\n\t\t{\n\t\t\tint na(lower_bound(b + 1, b + idx + 1, a[j]) - b);\n\t\t\tv[a[j]][i] = na;\n\t\t\tif (!f[na][i]) f[na][i] = j;\n\t\t\te[na][i] = j;\n\t\t\tdis[i][na][na] = 0;\n\t\t}\n\t\tfor (int j(nl); j <= nr; j = -~j)\n\t\t{\n\t\t\tfor (int k(j + 1); k <= nr; k = -~k)\n\t\t\t{\n\t\t\t\tint nx(v[a[j]][i]), ny(v[a[k]][i]), g(min(dis[i][nx][ny], (short)(k - j)));\n\t\t\t\tdis[i][nx][ny] = g;\n\t\t\t\tdis[i][ny][nx] = g;\n\t\t\t}\n\t\t}\n\t}\n\tint lans = 0;\n\twhile (m--)\n\t{\n\t\tint opt(read()), x(read()), y(read());\n\t\tx ^= lans, y ^= lans;\n\t\tif (opt == 2)\n\t\t{\n\t\t\tint res(query(x, y));\n\t\t\tif (res > n)\n\t\t\t{\n\t\t\t\tprintf(\"Ikaros\\n\");\n\t\t\t\tlans = 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\twrite(lans = res);\n\t\t\t\tputchar('\\n');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmodify(x, y);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1679528161,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "P5397 [Ynoi2018] \u5929\u964d\u4e4b\u7269"
    },
    {
        "content": "\u989c\u8272\u5f88\u96be\u53d7\uff0c\u5c06\u989c\u8272\u76f8\u540c\u7684\u70b9\u5212\u5206\u4e3a\u7b49\u4ef7\u7c7b\uff0c\u4f7f\u6bcf\u4e2a\u7b49\u4ef7\u7c7b\u6709\u8272\u3002\n\n\u4e00\u79cd\u66b4\u529b\u505a\u6cd5\u662f\uff0c\u6bcf\u6b21\u626b\u63cf\u7b49\u4ef7\u7c7b\u4e2d\u7684\u5e97\uff0c\u590d\u6742\u5ea6\u548c\u70b9\u6570\u76f8\u5173\u3002\n\n\u8003\u8651\u6839\u53f7\u5206\u6cbb\u3002\u53d6\u9608\u503c $B$\uff0c\u79f0\u5927\u5c0f $<B$ \u7684\u7c7b\u4e3a\u5c0f\u7c7b\uff0c\u5426\u5219\u4e3a\u5927\u7c7b\u3002\u9700\u8981\u9884\u5904\u7406 $\\text{pr}_t(i)$\uff0c$\\text{nx}_t(i)$ \u8868\u793a\u70b9 $i$ \u5230\u7b2c $t$ \u79cd\u5927\u7c7b\u7684\u524d\u9a71\u3001\u540e\u7ee7\u3002\n\n\u6709\u65f6\u9700\u8981\u904d\u5386\u5c0f\u7c7b\u7684\u5143\u7d20\uff0c\u56e0\u6b64\u5b58\u50a8\u6bcf\u4e2a\u5c0f\u7c7b\u7684\u6709\u5e8f\u5143\u7d20\u3002\n\n\u5bf9\u4e8e\u5408\u5e76\u64cd\u4f5c\uff1a\n\n- \u5c0f\u7c7b\u548c\u5c0f\u7c7b\u5408\u5e76\uff1a\n\t- \u76f4\u63a5\u5c06\u4e24\u4e2a\u6570\u7ec4\u5f52\u5e76\u3002\u5c0f\u7c7b\u6700\u591a\u6709 $B$ \u4e2a\u5143\u7d20\uff0c\u56e0\u6b64\u6bcf\u4e2a\u5143\u7d20\u6700\u591a\u88ab\u5f52\u5e76 $B$ \u6b21\u3002\n\t- \u82e5\u5c0f\u7c7b\u6210\u4e3a\u5927\u7c7b\uff1a\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a\u5927\u7c7b\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\u5904\u7406\u524d\u9a71\u540e\u7ee7\u3002\u4e00\u6b21 $O(n)$\uff0c\u6700\u591a $O(n/B)$ \u6b21\u3002\n- \u5c0f\u7c7b\u548c\u5927\u7c7b\u5408\u5e76\uff1a\n\t- \u5c0f\u7c7b\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u53ef\u80fd\u4f1a\u5f71\u54cd\u5468\u8fb9\u4e00\u4e2a\u533a\u95f4\u7684\u524d\u9a71\u3001\u540e\u7ee7\uff0c\u64cd\u4f5c\u4e3a\u533a\u95f4\u63a8\u5e73\uff08\u7531\u4e8e\u63a8\u5e73\u7684\u533a\u95f4\u5fc5\u7136\u76f8\u7b49\uff0c\u7b49\u4ef7\u4e8e\u533a\u95f4\u52a0\u51cf\uff09\u3002\n   - \u8fd8\u9700\u8981\u66f4\u65b0\u5bf9\u5e94\u5927\u7c7b\u4e4b\u95f4\u7684\u9884\u5904\u7406\u6570\u7ec4\u3002\n   - \u63a8\u5e73\u4f1a\u53d1\u751f $O(n)$ \u6b21\u3002\n- \u5927\u7c7b\u548c\u5927\u7c7b\u5408\u5e76\uff1a\n\t- \u66b4\u529b\u66f4\u6539\u6240\u5c5e\u7b49\u4ef7\u7c7b\uff0c\u66b4\u529b\u91cd\u5efa\u5927\u7c7b\u3002\n\t- \u6bcf\u6b21 $O(n)$\uff0c\u6700\u591a $O(n/B)$ \u6b21\u3002\n\n\u5bf9\u4e8e\u67e5\u8be2\u64cd\u4f5c\uff1a\n\n- \u5c0f\u7c7b\u548c\u5c0f\u7c7b\u67e5\u8be2\uff1a\n\t- \u76f4\u63a5\u53cc\u6307\u9488\u626b\u3002\n- \u5c0f\u7c7b\u548c\u5927\u7c7b\u67e5\u8be2\uff1a\n\t- \u5bf9\u6bcf\u4e2a\u5c0f\u7c7b\u7684\u5143\u7d20\u67e5\u8be2\u5176\u5bf9\u5e94\u5927\u7c7b\u7684\u524d\u9a71\u540e\u7ee7\u3002\n\t- \u67e5\u8be2\u5171\u6709 $O(qB)$ \u6b21\u3002\n- \u5927\u7c7b\u548c\u5927\u7c7b\u67e5\u8be2\n\t- \u5df2\u9884\u5904\u7406\u7ed3\u679c\u3002\n\n\u63a8\u5e73\u548c\u67e5\u8be2\u590d\u6742\u5ea6\u4e0d\u5e73\u8861\uff0c\u7528 $O(\\sqrt n)$ \u4fee\u6539 $O(1)$ \u67e5\u8be2\u7684\u5206\u5757\u5e73\u8861\u590d\u6742\u5ea6\u3002\n\n\u5927\u529b\u5361\u5e38\u5373\u53ef\u901a\u8fc7\u3002\n\n*TO BE UPDATED: \u600e\u6837\u5361\u5e38\u3002*",
        "postTime": 1677663661,
        "uid": 120324,
        "name": "Yansuan_HCl",
        "ccfLevel": 7,
        "title": "[\u9898\u89e3] P5397 [Ynoi2018] \u5929\u964d\u4e4b\u7269"
    },
    {
        "content": "\u503c\u57df\u548c\u5e8f\u5217\u957f\u5ea6\u540c\u9636\uff0c\u7a7a\u95f4\u5f88\u53cb\u597d\uff0c~~\u51fa\u9898\u4eba\u53eb noip~~\uff0c\u8003\u8651\u6839\u53f7\u505a\u6cd5\u3002\n\n\u53d1\u73b0\u64cd\u4f5c\u662f\u5168\u5c40\u7684\uff0c\u5982\u679c\u7528\u5e8f\u5217\u5206\u5757\u672a\u514d\u6709\u4e9b\u9ebb\u70e6\uff0c\u800c\u4e14\u7b54\u6848\u4f3c\u4e4e\u4e0d\u662f\u5f88\u597d\u7ef4\u62a4\uff0c\u5148\u6765\u601d\u8003\u4e00\u4e0b\u66b4\u529b\u3002\n\n\u7528 `vector` \u628a\u6bcf\u4e2a $a_i$ \u5bf9\u5e94\u7684 $i$ \u5b58\u4e0b\u6765\uff0c\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u76f4\u63a5\u7528\u53cc\u6307\u9488\u66b4\u529b\u5408\u5e76\uff0c\u67e5\u8be2\u64cd\u4f5c\u4e5f\u662f\u7528\u53cc\u6307\u9488\u76f4\u63a5\u67e5\u8be2\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u6709\u70b9\u50cf\u5f52\u5e76\u6392\u5e8f\u4e2d\u5408\u5e76\u4e24\u4e2a\u5e8f\u5217\u7684\u8fc7\u7a0b\uff0c\u8d34\u4e00\u4e0b\u66b4\u529b\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\n//#define int long long\n#define mem(a,x) memset(a,x,sizeof(a))\n#define re register\n#define il inline\nusing namespace std;\ntypedef long long LL;\nconst int N=5e5+5;\nil int qr(){\n\tint s=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0' || ch>'9') (ch=='-'?f=-1:1),ch=getchar();\n\twhile(ch>='0' && ch<='9') s=s*10+ch-'0',ch=getchar();\n\treturn s*f;\n}\nil void qw(int x){\n\tif(x<0) putchar('-'),x=-x;\n\tif(x>9) qw(x/10);\n\tputchar(x%10+'0');\n}\nint n=qr(),m=qr(),a[N],idx,ans;\nvector<int>pos[N];\nvoid upd(int x,int y){\n\tint pre=0,sx=pos[x].size(),sy=pos[y].size(),i=0,j=0;\n\tvector<int>res,emp;\n\twhile(i<sx && j<sy){\n\t\tif(pos[x][i]<pos[y][j]) res.push_back(pos[x][i++]);\n\t\telse res.push_back(pos[y][j++]);\n\t}\n\twhile(i<sx) res.push_back(pos[x][i++]);\n\twhile(j<sy) res.push_back(pos[y][j++]);\n\tpos[x].swap(emp),pos[y]=res;\n}\nint query(int x,int y){\n\tint i=0,j=0,sx=pos[x].size(),sy=pos[y].size(),res=n;\n\tif(!sx || !sy) return -1;\n\twhile(i<sx && j<sy){\n\t\tres=min(res,abs(pos[x][i]-pos[y][j]));\n\t\tif(pos[x][i]<pos[y][j]) i++;\n\t\telse j++;\n\t}\n\tif(i<sx) res=min(res,abs(pos[x][i]-pos[y][sy-1]));\n\tif(j<sy) res=min(res,abs(pos[y][j]-pos[x][sx-1]));\n\treturn res;\n}\nint main(){\n\tfor(re int i=1;i<=n;i++) a[i]=qr(),pos[a[i]].push_back(i);\n\twhile(m--){\n\t\tint op=qr(),x=qr()^ans,y=qr()^ans;\n\t\tif(op==1) upd(x,y);\n\t\telse{\n\t\t\tans=query(x,y);\n\t\t\tif(ans==-1) ans=0,printf(\"Ikaros\");\n\t\t\telse qw(ans);\n\t\t\tputchar('\\n');\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u53d1\u73b0\u4e00\u4e2a\u4e8b\u60c5\uff0c\u5f53 $pos_x,pos_y$ \u7684\u5927\u5c0f\u5f88\u5c0f\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u5b9e\u9645\u4e0a\u662f\u5f88\u5feb\u7684\uff0c\u76f8\u53cd\u4f1a\u8dd1\u5f97\u5f88\u6162\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u7528\u4e00\u4e2a\u9608\u503c\u6765\u5224\u65ad\u4e00\u4e0b\u8fd9\u4e2a $pos_x,pos_y$ \u5230\u5e95\u662f\u5927\u4e86\u8fd8\u662f\u5c0f\u4e86\uff0c\u4e0d\u96be\u60f3\u5230\u6839\u53f7\u5206\u6cbb\u3002\n\n\u5f53\u4e00\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u8d85\u8fc7 $lim$\uff0c\u5373\u6211\u4eec\u7684\u9608\u503c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6784\u9020\u4e00\u4e2a\u5355\u72ec\u7684\u4e1c\u897f\u5b58\u653e\u8fd9\u4e2a\u7b54\u6848\u3002\n\n\u7528 $ans_{i,j}$ \u6765\u5b58\u50a8 $i$ \u8fd9\u4e2a\u6570\u548c\u5176\u5b83\u6570\u76f4\u63a5\u4ea7\u751f\u7684\u6700\u5c0f\u8ddd\u79bb\uff0c\u4e0d\u8fc7\u8fd9\u6837\u7684\u8bdd\u7a7a\u95f4\u5c31\u662f $n^2$\uff0c\u65e0\u6cd5\u63a5\u53d7\uff0c\u90a3\u4e48 $i$ \u53ef\u4ee5\u4e13\u95e8\u8bbe\u7f6e\u6210\u5e8f\u53f7\uff0c\u8fd9\u4e2a\u5e8f\u53f7\u7684\u6570\u91cf\u80af\u5b9a\u662f\u4e0d\u4f1a\u8d85\u8fc7 $\\frac{n}{lim}$ \u7684\uff0c\u8fd9\u5f88\u663e\u7136\u3002\n\n\u7a7a\u95f4\u7684\u95ee\u9898\u4e5f\u5c31\u89e3\u51b3\u4e86\u3002\n\n\u8d34\u4e00\u4e0b\u6784\u9020\u4e00\u4e2a\u5757\u7684\u4ee3\u7801\u3002\n\n```cpp\nvoid restr(int x){\n\tif(!id[x]) id[x]=++idx;\n\tmem(ans[id[x]],inf);\n\tfor(int &i:pos[x]) a[i]=x;\n\tpos[x].clear();\n\tint pre=inf;\n\tfor(re int i=1;i<=n;i++){\n\t\tif(a[i]==x) pre=0;\n\t\telse pre++;\n\t\tans[id[x]][a[i]]=min(ans[id[x]][a[i]],pre);\n\t}\n\tpre=inf;\n\tfor(re int i=n;i;i--){\n\t\tif(a[i]==x) pre=0;\n\t\telse pre++;\n\t\tans[id[x]][a[i]]=min(ans[id[x]][a[i]],pre);\n\t}\n}\n```\n\n\u63a5\u7740\u6765\u601d\u8003\u4fee\u6539\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u53d1\u73b0\u4e00\u4ef6\u4e8b\u60c5\uff0c\u968f\u7740\u4fee\u6539\u6b21\u6570\u7684\u589e\u52a0\uff0c\u6570\u7684\u79cd\u7c7b\u662f\u5355\u8c03\u4e0d\u589e\u7684\uff0c\u8fd9\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u59d1\u4e14\u5148\u4e0d\u8c08\u3002\n\n\u56e0\u4e3a\u662f\u5408\u5e76\u4e24\u79cd\u6570\uff0c\u5047\u8bbe $sz_x\\le sz_y$\uff0c\u4ee4 $x$ \u7684\u51fa\u73b0\u6b21\u6570\u5c0f\u4e8e $y$ \u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u56e0\u4e3a\u4ece\u67d0\u79cd\u60c5\u51b5\u4e0a\u6765\u8bb2\uff0c\u628a $x$ \u53d8\u6210 $y$\uff0c\u672c\u8d28\u4e0a\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u662f\u628a $y$ \u53d8\u6210 $x$\n\n\u5206\u7c7b\u8ba8\u8bba\u3002\n\n* $sz_x\\le lim$\n\n\u5148\u5c06\u6240\u6709 $x$ \u7684\u503c\u4fee\u6539\u4e3a $y$\u3002\n\n\u518d\u7ee7\u7eed\u8ba8\u8bba $sz_y$ \u7684\u60c5\u51b5\u3002\n\n$sz_y\\le lim$\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff1a\u5f53 $sz_x+sz_y\\le lim$ \u65f6\u76f4\u63a5\u66b4\u529b\u5408\u5e76\u4e24\u4e2a\u5757\u5373\u53ef\uff1b\u5426\u5219\uff0c\u8bf4\u660e\u4e24\u4e2a\u5757\u53ef\u4ee5\u7ec4\u6210\u4e00\u4e2a\u65b0\u7684\u5757\uff0c\u76f4\u63a5\u91cd\u6784 $y$ \u7684\u5757\u5373\u53ef\u3002\n\n$sz_y>lim$\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff1a\u6211\u4eec\u9996\u5148\u5f15\u5165\u4e00\u4e2a\u9644\u5c5e\u5757\u7684\u6982\u5ff5\uff0c\u6bd4\u5982\u6211\u4eec\u4e00\u4e2a\u6570\u6709 $x\\times lim+k(k<lim)$\uff0c\u800c\u4e14\u8fd9 $k$ \u4e2a\u6570\u90fd\u662f\u5408\u5e76\u4e0a\u53bb\u7684\uff0c\u5f53\u53c8\u6709\u65b0\u7684 $j$ \u4e2a\u6570\u5408\u5e76\u4e0a\u53bb\uff0c\u80fd\u8ba9 $k+j>lim$\uff0c\u6211\u4eec\u5c31\u8ba9\u8fd9 $k+j$ \u4e2a\u6570\u52a0\u5165\u5757\u7684\u91cd\u6784\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u590d\u6742\u5ea6\uff0c\u8fd9\u4e2a\u9644\u5c5e\u5757\u7528 $pos$ \u5b58\u50a8\uff0c\u5982\u679c $sz_x$ \u548c $y$ \u7684\u9644\u5c5e\u5757\u7684\u5927\u5c0f $>lim$\uff0c\u7136\u4e48\u53ef\u4ee5\u76f4\u63a5\u9009\u62e9\u91cd\u6784 $y$ \u7684\u5757\uff0c\u5426\u5219\u5c31\u628a $pos_x$ \u548c $y$ \u7684\u9644\u5c5e\u5757\u8fdb\u884c\u5408\u5e76\n\n* $sz_x> lim$\n\n\u8fd9\u79cd\u60c5\u51b5\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u628a\u6240\u6709\u662f $x$ \u7684\u503c\u4fee\u6539\u4e3a $y$\uff0c\u7136\u540e\u5bf9 $y$ \u8fdb\u884c\u5757\u7684\u91cd\u6784\u3002\n\n\u597d\u4e86\uff0c\u8be5\u89e3\u51b3\u4e0a\u9762\u6240\u8bf4\u7684\u4fee\u6539\u7684\u590d\u6742\u5ea6\u662f $\\Theta(n)$ \u7684\u8fd9\u4e2a\u95ee\u9898\u4e86\uff0c\u5176\u5b9e\u5f88\u597d\u60f3\uff0c\u6211\u4eec\u9700\u8981\u91cd\u6784\u5757\u65f6\u4ec5\u5f53\u4e2a\u6570\u5927\u4e8e\u4e86\u9608\u503c\uff0c\u6240\u4ee5\u603b\u7684\u4fee\u6539\u7684\u590d\u6742\u5ea6\u662f $\\frac{n^2}{lim}$\uff0c\u90a3\u4e48\u5747\u644a\u4e0b\u6765\u53ef\u4ee5\u770b\u6210\u662f $n\\sqrt n$ \u7ea7\u522b\u7684\u3002\n\n\u6700\u540e\u6765\u89e3\u51b3\u67e5\u8be2\u7684\u95ee\u9898\uff0c\u67e5\u8be2\u4e5f\u5f88\u597d\u89e3\u51b3\uff0c\u8ddf\u4fee\u6539\u5176\u5b9e\u662f\u7c7b\u4f3c\u7684\uff0c\u4f9d\u7136\u662f\u8ba8\u8bba $sz_x$ \u548c $sz_y$ \u7684\u5927\u5c0f\uff0c\u7136\u540e\u6839\u636e\u6c42\u5f97\u7684\u6570\u7ec4 $ans$ \u53d6\u6700\u5c0f\u503c\u3002\n\n```cpp\n#include<bits/stdc++.h>\n//#define int long long\n#define mem(a,x) memset(a,x,sizeof(a))\n#define re register\n#define il inline\nusing namespace std;\ntypedef long long LL;\nconst int N=1e5+5;\nconst int inf=0x3f3f3f3f;\nil int qr(){\n\tint s=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0' || ch>'9') (ch=='-'?f=-1:1),ch=getchar();\n\twhile(ch>='0' && ch<='9') s=s*10+ch-'0',ch=getchar();\n\treturn s*f;\n}\nil void qw(int x){\n\tif(x<0) putchar('-'),x=-x;\n\tif(x>9) qw(x/10);\n\tputchar(x%10+'0');\n}\nint n=qr(),m=qr(),a[N],sz[N],sk[N],id[N],ans[400][N],lst,idx;\nconst int Lim=350;\nvector<int>pos[N];\nvoid upd1(int x,int y){\n\tint pre=0,sx=pos[x].size(),sy=pos[y].size(),i=0,j=0;\n\tvector<int>res;\n\twhile(i<sx && j<sy){\n\t\tif(pos[x][i]<pos[y][j]) res.push_back(pos[x][i++]);\n\t\telse res.push_back(pos[y][j++]);\n\t}\n\twhile(i<sx) res.push_back(pos[x][i++]);\n\twhile(j<sy) res.push_back(pos[y][j++]);\n\tpos[y]=res;\n\tfor(re int i=1;i<=idx;i++) ans[i][y]=min(ans[i][y],ans[i][x]);\n}\nvoid upd2(int x,int y){\n\tfor(re int i=1;i<=n;i++) ans[id[y]][i]=min(ans[id[y]][i],ans[id[x]][i]);\n}\nint ask(int x,int y){\n\tint i=0,j=0,sx=pos[x].size(),sy=pos[y].size(),res=inf;\n\tif(!sx || !sy) return inf;\n\twhile(i<sx && j<sy){\n\t\tres=min(res,abs(pos[x][i]-pos[y][j]));\n\t\tif(pos[x][i]<pos[y][j]) i++;\n\t\telse j++;\n\t}\n\tif(i<sx) res=min(res,abs(pos[x][i]-pos[y][sy-1]));\n\tif(j<sy) res=min(res,abs(pos[y][j]-pos[x][sx-1]));\n\treturn res;\n}\nvoid restr(int x){\n\tif(!id[x]) id[x]=++idx;\n\tmem(ans[id[x]],inf);\n\tfor(int &i:pos[x]) a[i]=x;\n\tpos[x].clear();\n\tint pre=inf;\n\tfor(re int i=1;i<=n;i++){\n\t\tif(a[i]==x) pre=0;\n\t\telse pre++;\n\t\tans[id[x]][a[i]]=min(ans[id[x]][a[i]],pre);\n\t}\n\tpre=inf;\n\tfor(re int i=n;i;i--){\n\t\tif(a[i]==x) pre=0;\n\t\telse pre++;\n\t\tans[id[x]][a[i]]=min(ans[id[x]][a[i]],pre);\n\t}\n}\nint query(int x,int y){\n\tx=sk[x],y=sk[y];\n\tif(!x || !y || !sz[x] || !sz[y]) return inf;\n\tif(x==y) return 0;\n\tif(sz[x]>sz[y]) swap(x,y);\n\tif(sz[x]<=Lim){\n\t\tif(sz[y]<=Lim) return ask(x,y);\n\t\treturn min(ask(x,y),ans[id[y]][x]);\n\t}\n\treturn min(min(ans[id[x]][y],ans[id[y]][x]),ask(x,y));\n}\nvoid upd(int x,int y){\n\tint _x=sk[x],_y=sk[y];\n\tif(_x==_y || !sz[_x]) return ;\n\tif(sz[_x]>sz[_y]) sk[y]=sk[x],swap(_x,_y);\n\tsk[x]=0,x=_x,y=_y;\n\tif(sz[x]<=Lim){\n\t\tfor(int &i:pos[x]) a[i]=y;\n\t\tif(sz[y]<=Lim){\n\t\t\tif(sz[x]+sz[y]>Lim) restr(y);\n\t\t\telse upd1(x,y);\n\t\t}\n\t\telse{\n\t\t\tif(sz[x]+pos[y].size()>Lim) restr(y);\n\t\t\telse upd1(x,y);\n\t\t}\n\t}\n\telse{\n\t\tfor(re int i=1;i<=n;i++) if(a[i]==x) a[i]=y;\n\t\trestr(y);\n\t}\n\tsz[y]+=sz[x],sz[x]=0,pos[x].clear();\n}\nint main(){\n\tfor(re int i=1;i<=n;i++) a[i]=qr(),sk[a[i]]=a[i],sz[a[i]]++,pos[a[i]].push_back(i);\n\tfor(re int i=1;i<=n;i++) if(sz[i]>Lim) restr(i);\n\twhile(m--){\n\t\tint op=qr(),x=qr()^lst,y=qr()^lst;\n\t\tif(op==1) upd(x,y);\n\t\telse{\n\t\t\tlst=query(x,y);\n\t\t\tif(lst==inf) lst=0,printf(\"Ikaros\");\n\t\t\telse qw(lst);\n\t\t\tputchar('\\n');\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1676728989,
        "uid": 364122,
        "name": "BigJoker",
        "ccfLevel": 6,
        "title": "ZRY-P5397\uff08\u7b2c\u56db\u5206\u5757\uff09"
    },
    {
        "content": "\u5bf9\u6bcf\u79cd\u989c\u8272\u7ef4\u62a4\u6709\u591a\u5c11\u4f4d\u7f6e\u4ee5\u53ca\u8fd9\u4e9b\u4f4d\u7f6e\u5728\u54ea\uff0c\u7136\u540e\u6839\u53f7\u5206\u6cbb\u3002\u5bf9\u4e8e\u989c\u8272 $x$\uff0c\u82e5 $sz(x)<\\sqrt{n}$ \u5219\u7528 ```vector``` \u5b58\u4f4d\u7f6e\uff08\u6709\u5e8f\uff09\u79f0\u4f5c\u5c0f\u56e2\uff0c\u5426\u5219 $sz(x)>\\sqrt{n}$\uff0c\u7528 ```bool``` \u6570\u7ec4\u5b58\u54ea\u4e9b\u4f4d\u7f6e\u4e0a\u6709\u5143\u7d20\uff0c\u79f0\u4f5c\u5927\u56e2\u3002\n\n\u67e5\u8be2\u64cd\u4f5c\u6d89\u53ca\u5c0f\u5c0f\u3001\u5927\u5c0f\u3001\u5927\u5927\u7684\u67e5\u8be2\u3002\n\n- \u5bf9\u4e8e\u5c0f\u5c0f\uff0c\u76f4\u63a5\u5f52\u5e76\u4e24\u4e2a\u6709\u5e8f\u5217\u3002\n- \u5bf9\u4e8e\u5c0f\u5927\uff0c\u679a\u4e3e\u5c0f\u5757\u91cc\u7684\u5143\u7d20 $i$\uff0c\u5728\u5927\u5757\u4e2d\u67e5\u8be2\u4e0e $i$ \u6700\u8fd1\u7684\u5143\u7d20\uff0c\u56e0\u4e3a\u5c0f\u56e2\u5927\u5c0f\u4e3a $O(\\sqrt{n})$\uff0c\u5219\u9700\u8981\u5bf9\u5927\u56e2\u4e2d\u7684 ```bool``` \u6570\u7ec4\u5206\u5757\uff0c\u4f7f\u5f97\u5355\u6b21\u67e5\u8be2 $i$ \u7684\u6700\u8fd1\u503c\u4e3a $O(1)$\u3002\n\n\u8bb0 $bid(x)$ \u4e3a $x$ \u6240\u5728\u7684\u5757\u7684\u7f16\u53f7\uff0c$br(b)$ \u4e0e $bl(b)$ \u5206\u522b\u8868\u793a\u5757 $b$ \u7684\u53f3\u7aef\u70b9\u548c\u5de6\u7aef\u70b9\u3002\n\n\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u53ea\u6709 ```bool``` \u6570\u7ec4\u662f\u4e0d\u591f\u7684\uff0c\u8fd8\u9700\u8981\u7ef4\u62a4\u6570\u7ec4 $bpre,bpst,pre,pst$\uff0c\u5176\u4e2d $bpre(b)$ \u8868\u793a\u5757 $b$ \u524d\u9762\u6700\u8fd1\u7684\u6709\u5143\u7d20\u7684\u5757\u7684\u7f16\u53f7\uff0c$bpst(b)$ \u8868\u793a\u5757 $b$ \u540e\u9762\u6700\u8fd1\u7684\u6709\u5143\u7d20\u7684\u5757\u7684\u7f16\u53f7\uff0c$pre(x)$ \u8868\u793a\u5728\u5757 $bid(x)$\u4e2d\u5728 $x$ \u524d\u6700\u8fd1\u7684\u5143\u7d20\u4f4d\u7f6e\uff0c$pst(x)$ \u8868\u793a\u5728\u5757 $bid(x)$ \u4e2d\u5728 $x$ \u540e\u6700\u8fd1\u7684\u5143\u7d20\u4f4d\u7f6e\u3002\n\n\u82e5 $bpre(b),pre(x)$ \u4e0d\u5b58\u5728\u5219\u5b9a\u4e49\u4e3a $0$\uff0c\u82e5 $bpst(b),pst(x)$ \u4e0d\u5b58\u5728\u5219\u5b9a\u4e49\u4e3a $inf$\u3002\u82e5 $bpre(b)=b$ \u6216 $bpst(b)=b$ \u5219\u8bf4\u660e\u5757 $b$ \u5185\u6709\u5143\u7d20\uff0c\u82e5 $pre(x)=x$ \u6216 $pst(x)=x$ \u5219\u8bf4\u660e\u4f4d\u7f6e $x$ \u4e0a\u6709\u5143\u7d20\uff0c\u4e8e\u662f ```bool``` \u6570\u7ec4\u4e5f\u53ef\u4ee5\u4e0d\u8981\u4e86\u3002\n\n\u67e5\u8be2\u4f4d\u7f6e $x$ \u7684\u7b54\u6848\u65f6\uff0c\u5206\u522b\u627e\u5230\u5728 $x$ \u524d\u6700\u8fd1\u7684\u6570\u548c\u5728 $x$ \u540e\u6700\u8fd1\u7684\u6570\uff0c\u4ee5\u524d\u8005\u4e3a\u4f8b\uff0c\u5148\u5224\u65ad $pre(x)$ \u662f\u5426\u4e3a $0$\uff0c\u82e5\u662f\u5219\u8bf4\u660e\u5728\u8fd9\u4e2a\u5757\u4e2d\u6ca1\u6709\u6bd4 $x$ \u524d\u7684\u5143\u7d20\u4e86\uff0c\u627e\u5230\u4e0a\u4e00\u4e2a\u6709\u5143\u7d20\u7684\u5757\uff0c\u4e5f\u5c31\u662f $bpre(b-1)$\uff0c\u518d\u901a\u8fc7 $pre(br(bpre(b-1)))$ \u5f97\u5230\u5728 $x$ \u524d\u79bb $x$ \u6700\u8fd1\u7684\u5143\u7d20\u3002\n\n\u8fd9\u4e2a\u8fc7\u7a0b\u662f $O(1)$ \u7684\u3002\n\n- \u5bf9\u4e8e\u5927\u5927\uff0c\u5219\u9700\u8981\u5728\u6bcf\u4e2a\u5927\u56e2\u4e2d\u591a\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4\uff0c\u8bb0\u5f55\u8fd9\u4e2a\u5927\u56e2\u4e0e\u5176\u5b83\u5927\u56e2\u4e4b\u95f4\u7684\u7b54\u6848\uff0c\u7136\u540e $O(1)$ \u67e5\u8868\u56de\u7b54\u3002\n\n\u5177\u4f53\u7684\uff0c\u4ee4 $vl(i,j)$ \u8868\u793a\u7f16\u53f7\u4e3a $i$ \u4e0e $j$ \u7684\u56e2\u4e4b\u95f4\u7684\u7b54\u6848\u3002\n\n\u5408\u5e76\u64cd\u4f5c\u4e5f\u6d89\u53ca\u5c0f\u5c0f\u3001\u5927\u5c0f\u3001\u5927\u5927\u3002\n\n- \u5bf9\u4e8e\u5c0f\u5c0f\uff0c\u76f4\u63a5\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u5217\uff0c\u5408\u5e76\u540e\u82e5\u5927\u5c0f\u8d85\u8fc7\u4e86 $\\sqrt{n}$ \u5219\u5c06\u5b83\u53d8\u6210\u4e00\u4e2a\u65b0\u7684\u5927\u56e2 $i$\uff0c\u53d8\u6210\u5927\u56e2\u65f6\u9700\u8981\u6c42\u51fa\u5927\u56e2 $i$ \u4e0e\u5176\u5b83\u5927\u56e2 $j$ \u4e4b\u95f4\u7684\u7b54\u6848 $vl(i,j)$ \u53ca $vl(j,i)$\u3002\n- \u5bf9\u4e8e\u5c0f\u5927\uff0c\u5c06\u5c0f\u56e2\u91cc\u7684\u5143\u7d20\u63d2\u5165\u5230\u5927\u56e2 $i$ \u91cc\uff0c\u63d2\u5165\u65f6 $O(\\sqrt{n})$ \u4fee\u6539\u5206\u5757\u6570\u7ec4 $bpre,bpst,pre,pst$\uff0c\u540c\u65f6\u66f4\u65b0 $vl(i,j)$ \u548c $vl(j,i)$\u3002\n- \u5bf9\u4e8e\u5927\u5927\uff0c\u5219\u76f4\u63a5\u5408\u5e76\u4e24\u4e2a\u5927\u56e2\u7684 $bpre,bpst,pre,pst,vl$ \u6570\u7ec4\u3002\n\n\u518d\u6765\u5206\u6790\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5c0f\u56e2\u7684\u5927\u5c0f\u4e0d\u8d85\u8fc7 $\\sqrt{n}$\uff0c\u5927\u56e2\u7684\u4e2a\u6570\u4e0d\u8d85\u8fc7 $\\sqrt{n}$\u3002\n\n\u67e5\u8be2\u5c0f\u5c0f\u65f6\u7528\u5f52\u5e76\uff0c\u5355\u6b21 $O(\\sqrt{n})$\uff0c\u67e5\u8be2\u5c0f\u5927\u65f6\u679a\u4e3e\u4e86\u5c0f\u5757\u91cc\u7684\u5143\u7d20\uff0c\u5355\u6b21 $O(\\sqrt{n})$\uff0c\u67e5\u8be2\u5927\u5927\u65f6\u76f4\u63a5\u67e5\u8868\uff0c\u5355\u6b21 $O(1)$\u3002\n\n\u5408\u5e76\u5c0f\u5c0f\u65f6\u7528\u5f52\u5e76\uff0c\u5355\u6b21 $O(\\sqrt{n})$\u3002\u4f46\u53ef\u80fd\u8fd8\u8981\u5c06\u5c0f\u56e2\u53d8\u6210\u5927\u56e2 $i$\uff0c\u6b64\u65f6\u9700\u8981\u679a\u4e3e\u5c0f\u56e2\u91cc\u7684\u5143\u7d20 $x$ \u5e76\u5728\u6bcf\u4e2a\u5927\u56e2 $j$ \u91cc\u67e5\u8be2 $x$ \u7684\u7b54\u6848\u5e76\u66f4\u65b0 $vl(i,j),vl(j,i)$\uff0c\u6700\u591a\u6709 $\\sqrt{n}$ \u6b21\u5c0f\u56e2\u53d8\u5927\u56e2\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt{n})$\u3002\n\n\u5408\u5e76\u5c0f\u5927\u6d89\u53ca\u5230\u5f80\u67d0\u4e2a\u5927\u56e2\u91cc\u63d2\u5165\u67d0\u4e2a\u5143\u7d20\uff0c\u8fd9\u4e2a\u63d2\u5165\u7684\u603b\u6b21\u6570\u4e0d\u8d85\u8fc7 $n$\uff0c\u6bcf\u6b21\u63d2\u5165\u65f6\u9700\u8981 $O(\\sqrt{n})$ \u7ef4\u62a4\u5206\u5757\u6570\u7ec4\u548c $vl$ \u8868\u3002\n\n\u5408\u5e76\u5927\u5927\u65f6\u9700\u8981\u5408\u5e76\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u7ec4 $pre,pst$\uff0c\u5355\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\uff0c\u603b\u5408\u5e76\u6b21\u6570\u4e0d\u8d85\u8fc7 $\\sqrt{n}$\u3002\n\n\u7efc\u4e0a\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt{n})$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e5f\u4e3a $O(n\\sqrt{n})$\u3002\n\n\u5728\u5b9e\u73b0\u7a0b\u5e8f\u65f6\uff0c\u4e3a\u4e86\u65b9\u4fbf\u5408\u5e76\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u79cd\u989c\u8272 $x$ \u7ef4\u62a4\u5176\u5bf9\u5e94\u7684\u56e2\u7f16\u53f7 $team(x)$\uff0c\u4e0d\u5b58\u5728\u5219\u7f6e\u4e3a $-1$\u3002\u8fd9\u6837\u5728\u5c06\u989c\u8272 $x$ \u53d8\u6210\u989c\u8272 $y$ \u65f6\uff0c\u82e5 $team(x)=-1$ \u8bf4\u660e\u989c\u8272 $x$ \u6ca1\u6709\u5143\u7d20\uff0c\u5408\u5e76\u64cd\u4f5c\u53ef\u4ee5\u5ffd\u7565\u3002\u5f53 $x$ \u5bf9\u5e94\u7684\u662f\u5927\u56e2\uff0c\u800c $y$ \u5bf9\u5e94\u7684\u662f\u5c0f\u56e2\u65f6\uff0c\u5148\u4ea4\u6362 $team(x)$ \u548c $team(y)$\uff0c\u518d\u5c06\u5c0f\u56e2\u5408\u5e76\u5230\u5927\u56e2\u4e0a\u53bb\u3002\n\n\u5927\u56e2\u7684\u64cd\u4f5c\u5e38\u6570\u8fdc\u5927\u4e8e\u5c0f\u56e2\u7684\u64cd\u4f5c\u5e38\u6570\uff0c\u589e\u5927\u5c0f\u56e2\u53d8\u5927\u56e2\u7684\u9600\u503c\u53ef\u4ee5\u51cf\u5c11\u5927\u56e2\u6570\u91cf\uff0c\u51cf\u5c11\u65f6\u95f4\u5e38\u6570\u4e0e\u7a7a\u95f4\u5e38\u6570\uff0c\u5b9e\u73b0\u65f6\u7528\u7684\u662f $3\\sqrt{n}$ \u505a\u4e3a\u9600\u503c\u3002\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <string.h>\n#include <iostream>\n#include <assert.h>\n#include <vector> \n#include <cmath>\nusing namespace std;\n\n#define re register\n#define sf scanf\n#define pf printf\n#define nl() putchar('\\n')\n#define _for(i, a, b) for(re int i = (a); i < (b); ++i)\n#define _rfor(i, a, b) for(re int i = (a); i <= (b); ++i)\n#define _dfor(i, b, a) for(re int i = (b); i >= (a); --i)\n#define inf 0x7fffffff\n#define maxn 100005\n#define maxb 1000\n\nint rdnt(){\n\tre int x = 0, sign = 1;\n\tre char c = getchar();\n\twhile (c < '0' || c > '9') { if (c == '-') sign = -1; c = getchar(); }\n\twhile (c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (c ^ 48), c = getchar();\n\treturn x * sign;\n}\n\ntemplate<class T>\ninline void umx(T &x, const T &y){ if (y > x) x = y; }\ntemplate<class T>\ninline void umi(T &x, const T &y){ if (y < x) x = y; }\n\nint n, m, sqr, mxb, bcnt = 0, col_mp[maxn], big[maxn];\nvector<int> vec[maxn];\nbool yes[maxb];\n\n#define bid(x) ((x-1)/sqr+1)\n#define bl(b) (((b)-1)*sqr+1)\n#define br(b) (min(n, (b)*sqr))\nstruct Block{\n\tint sz, pre[maxn], pst[maxn], bpre[maxb], bpst[maxb], vl[maxb];\n\tvoid init(){\n\t\tsz = 0;\n\t\t_rfor(i, 0, n+1) pre[i] = 0, pst[i] = inf;\n\t\t_rfor(i, 0, mxb+1) bpre[i] = 0, bpst[i] = inf, vl[i] = inf;\n\t}\n\tvoid ins(int x){\n\t\tint b = bid(x); ++sz;\n\t\tassert(pre[x] < x && pst[x] > x);\n\t\t_rfor(i, x, br(b)) if (pre[i] < x) pre[i] = x; else break;\n\t\t_dfor(i, x, bl(b)) if (pst[i] > x) pst[i] = x; else break;\n\t\t_rfor(i, b, mxb) if (bpre[i] < b) bpre[i] = b; else break;\n\t\t_dfor(i, b, 1) if (bpst[i] > b) bpst[i] = b; else break;\n\t}\n\tint qry(int x){\n\t\tint b = bid(x), ans = inf;\n\t\tif (pre[x] > 0) umi(ans, x-pre[x]);\n\t\telse if (b > 1 && bpre[b-1] > 0) umi(ans, x-pre[br(bpre[b-1])]);\n\t\tif (pst[x] < inf) umi(ans, pst[x]-x);\n\t\telse if (b < mxb && bpst[b+1] < inf) umi(ans, pst[bl(bpst[b+1])]-x);\n\t\tassert(ans > 0);\n\t\treturn ans;\n\t}\n} blk[205];\n             \nvoid ins(int b, int x){\n\tassert(yes[b]);\n\tblk[b].ins(x);\n\t_rfor(i, 1, bcnt){\n\t\tif (i == b || !yes[i]) continue;\n\t\tint tmp = blk[i].qry(x);\n\t\tumi(blk[i].vl[b], tmp);\n\t\tumi(blk[b].vl[i], tmp);\n\t}\n}\n\nvoid build(int x){\n\tint y = ++bcnt; yes[y] = true; blk[y].init();\n\tfor(auto i : vec[x]) assert(i), ins(y, i);\n\tvector<int> ttt; vec[x].swap(ttt);\n}\n\nvoid merge_ss(int x, int y){\n\tassert(x != y);\n\tstatic int tmp[maxn];\n\tint sx = vec[x].size(), sy = vec[y].size(), i = 0, j = 0, k = 0;\n\twhile(i < sx || j < sy){\n\t\tif (j == sy || (i < sx && vec[x][i] < vec[y][j])) assert(vec[x][i]), tmp[k++] = vec[x][i++];\n\t\telse assert(vec[y][j]), tmp[k++] = vec[y][j++];\n\t}\n\tvec[x].clear();\n\t_for(_, 0, k) vec[x].push_back(tmp[_]);\n\tvector<int> ttt; vec[y].swap(ttt);\n}\n\nint qry_ss(int x, int y){\n\tassert(x != y);\n\tint sx = vec[x].size(), sy = vec[y].size(), i = 0, j = 0, ans = inf;\n\twhile(i < sx && j < sy){\n\t\tassert(vec[x][i] != vec[y][j]);\n\t\tif (vec[x][i] < vec[y][j]) umi(ans, vec[y][j]-vec[x][i]), ++i;\n\t\telse umi(ans, vec[x][i]-vec[y][j]), ++j;\n\t}\n\tassert(ans > 0);\n\treturn ans;\n}\n\nvoid merge_bs(int x, int y){\n\tfor(auto i : vec[y]) ins(x, i);\n\tvector<int> ttt; vec[y].swap(ttt);\n}\n\nint qry_bs(int x, int y){\n\tassert(yes[x]);\n\tint ans = inf;\n\tfor(auto i : vec[y]) assert(i), umi(ans, blk[x].qry(i));\n\tassert(ans > 0);\n\treturn ans;\n}\n\nvoid merge_bb(int x, int y){\n\tassert(x >= 1 && x <= bcnt);\n\tassert(y >= 1 && y <= bcnt);\n\tassert(x != y);\n\tblk[x].sz += blk[y].sz;\n\t_rfor(i, 1, n){\n\t\tumx(blk[x].pre[i], blk[y].pre[i]);\n\t\tumi(blk[x].pst[i], blk[y].pst[i]);\n\t}\n\t_rfor(i, 1, mxb){\n\t\tumx(blk[x].bpre[i], blk[y].bpre[i]);\n\t\tumi(blk[x].bpst[i], blk[y].bpst[i]);\n\t}\n\t_rfor(i, 1, bcnt){\n\t\tif (i == x || i == y || !yes[i]) continue;\n\t\tumi(blk[x].vl[i], blk[y].vl[i]);\n\t\tblk[i].vl[x] = blk[x].vl[i];\n\t\tblk[i].vl[y] = inf;\n\t}\n\tyes[y] = false;\n}\n\nint qry_bb(int x, int y){\n\tassert(x != y);\n\tassert(blk[x].vl[y] == blk[y].vl[x]);\n\tassert(blk[x].vl[y] > 0 && blk[x].vl[y] < inf);\n\treturn blk[x].vl[y];\n}\n\nint main(){\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"sample.in\", \"r\", stdin);\n\tfreopen(\"sample.out\", \"w\", stdout);\n\t#endif\n\t\n\t//ll szof = sizeof(blk) + 8*sizeof(int)*maxn;\n\t//pf(\"szof:%lld\\n\", szof>>20);\n\t//return 0;\n\tn = rdnt(); m = rdnt(); sqr = sqrt(n+0.5)*3; mxb = bid(n);\n\t//pf(\"n:%d m:%d sqr:%d mxb:%d\\n\", n, m, sqr, mxb);\n\t//return 0;\n\tstatic int a[maxn];\n\t_rfor(i, 0, n+1) col_mp[i] = -1, vec[i].clear();\n\t_rfor(i, 1, n){\n\t\ta[i] = rdnt(); assert(a[i] >= 1 && a[i] <= n);\n\t\tcol_mp[a[i]] = a[i];\n\t\tvec[a[i]].push_back(i);\n\t}\n\t_rfor(i, 1, n) if (~col_mp[i] && vec[i].size() > sqr) build(i), big[i] = bcnt;\n\t\n\tint lst_ans = 0;\n\t_rfor(_, 1, m){\n\t\t//lst_ans = 0;\n\t\tint opt = rdnt(),\n\t\t\tox = rdnt()^lst_ans, oy = rdnt()^lst_ans,\n\t\t\tx = col_mp[ox], y = col_mp[oy];\n\t\tif (opt == 1){\n\t\t\tif (x == -1 || y == -1){ if (~x) swap(col_mp[ox], col_mp[oy]); }\n\t\t\telse{\n\t\t\t\tif (x == y) continue;\n\t\t\t\tif (!big[x] && !big[y]){\n\t\t\t\t\tmerge_ss(y, x);\n\t\t\t\t\tif (vec[y].size() > sqr) build(y), big[y] = bcnt;\n\t\t\t\t\tcol_mp[ox] = -1;\n\t\t\t\t}\n\t\t\t\telse if (!big[x] || !big[y]){\n\t\t\t\t\tif (big[x]) swap(col_mp[ox], col_mp[oy]), swap(x, y);\n\t\t\t\t\tmerge_bs(big[y], x);\n\t\t\t\t\tcol_mp[ox] = -1;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tassert(yes[big[x]] && yes[big[y]]);\n\t\t\t\t\tmerge_bb(big[y], big[x]);\n\t\t\t\t\tyes[big[x]] = false;\n\t\t\t\t\tcol_mp[ox] = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (opt == 2){\n\t\t\tif (x == -1 || y == -1) pf(\"Ikaros\\n\"), lst_ans = 0;\n\t\t\telse if (x == y) pf(\"0\\n\"), lst_ans = 0;\n\t\t\telse{\n\t\t\t\tif (!big[x] && !big[y]){\n\t\t\t\t\tlst_ans = qry_ss(x, y);\n\t\t\t\t}\n\t\t\t\telse if (!big[x] || !big[y]){\n\t\t\t\t\tif (big[y]) swap(x, y);\n\t\t\t\t\tassert(yes[big[x]]);\n\t\t\t\t\tlst_ans = qry_bs(big[x], y);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tassert(yes[big[x]] && yes[big[y]]);\n\t\t\t\t\tlst_ans = qry_bb(big[x], big[y]);\n\t\t\t\t}\n\t\t\t\tpf(\"%d\\n\", lst_ans);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 0;\n}\n```",
        "postTime": 1648863859,
        "uid": 474113,
        "name": "MoYuFang",
        "ccfLevel": 7,
        "title": "\u3010P5397 [Ynoi2018] \u5929\u964d\u4e4b\u7269\u3011\u9898\u89e3"
    },
    {
        "content": "### P5397 \u5929\u964d\u4e4b\u7269\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c\u6709 $m$ \u6b21\u64cd\u4f5c\u3002\n\n- \u628a\u5e8f\u5217\u4e2d\u6240\u6709\u503c\u4e3a $x$ \u7684\u6570\u7684\u503c\u53d8\u6210 $y$\u3002\n- \u627e\u51fa\u4e00\u4e2a\u4f4d\u7f6e $i$ \u6ee1\u8db3 $a_i=x$\uff0c\u627e\u51fa\u4e00\u4e2a\u4f4d\u7f6e $j$ \u6ee1\u8db3 $a_j=y$\uff0c\u4f7f\u5f97 $|i-j|$ \u6700\u5c0f\uff0c\u5e76\u8f93\u51fa $|i-j|$\u3002\n\n$1 \\leq n,m,a_i\\leq 10^5$\uff0c\u65f6\u9650 $500\\text{ms}$\uff0c\u7a7a\u9650 $256\\text{MB}$\u3002\n\n#### sol\n\n\u300c\u5f11\u5c3d\u7834\u51c0\u7b2c\u56db\u5206\u5757\u300d\u3002\n\n\u96be\u5ea6\u8bc4\u5206\uff1a$6$\u3002\n\n\u5148\u5206\u6790\u4e00\u4e0b\u9898\u610f\uff0c\u7531\u4e8e\u8fd9\u91cc\u4fee\u6539\u548c\u67e5\u8be2\u90fd\u662f\u5168\u5c40\u7684\uff0c\u6240\u4ee5\u5e76\u4e0d\u9700\u8981\u5e8f\u5217\u5206\u5757\u3002\n\n\u8003\u8651\u4ece\u503c\u57df\u5165\u624b\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u503c\u7ef4\u62a4\u4e00\u4e2a\u4e0b\u6807\u96c6\u5408\uff0c\u652f\u6301\u5408\u5e76\u96c6\u5408\uff0c\u67e5\u8be2\u4e24\u96c6\u5408\u4e2d\u5dee\u503c\u6700\u5c0f\u7684\u4e0b\u6807\u3002\n\n\u5148\u8003\u8651\u4e24\u79cd\u66b4\u529b\u505a\u6cd5\uff1a\n\n* \u9884\u5904\u7406\u6bcf\u4e00\u4e2a\u503c\u79bb\u5176\u4ed6\u6240\u6709\u503c\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u4ece\u524d\u5230\u540e\u626b\u4e00\u904d\uff0c\u518d\u4ece\u540e\u5230\u524d\u626b\u4e00\u904d\uff0c\u53ef\u505a\u5230 $\\mathcal O(n)$ \u7684\u5b9e\u73b0\u3002\u5bf9\u4e8e\u4fee\u6539\uff0c\u76f4\u63a5 $\\mathcal O(n)$ \u66b4\u529b\u91cd\u6784\uff1b\u67e5\u8be2 $\\mathcal O(1)$ \u67e5\u8be2\u3002\n* \u7ef4\u62a4\u6bcf\u4e00\u4e2a\u503c\u7684\u6240\u6709\u4f4d\u7f6e\uff0c\u4fee\u6539\u5c31\u628a\u6574\u4e2a\u4f4d\u7f6e\u96c6\u5408\u5408\u5e76\uff0c\u67e5\u8be2\u5c31\u66b4\u529b\u679a\u4e3e\u4f4d\u7f6e\u3002\n\n\u8fd9\u663e\u7136\u4f1a\u65f6\u7a7a\u7206\u70b8\uff0c\u8003\u8651\u7528\u6839\u53f7\u5206\u6cbb\u6765\u5e73\u8861\u4e24\u79cd\u66b4\u529b\u7684\u590d\u6742\u5ea6\u3002\n\n\u5177\u4f53\u6765\u8bb2\u53ef\u4ee5\u628a\u6570\u5206\u4e3a\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u6839\u53f7\u7684\u548c\u5c0f\u4e8e\u7b49\u4e8e\u6839\u53f7\u6b21\u7684\uff0c\u6211\u4eec\u5206\u522b\u79f0\u5176\u4e3a\u5927\u6570\u548c\u5c0f\u6570\u3002\n\n\u7136\u540e\u9996\u5148\u53ef\u4ee5\u60f3\u5230\u7ef4\u62a4\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u8fd9\u6837\u5bf9\u4e8e\u67e5\u8be2\u4e24\u4e2a\u5c0f\u6570\u7684\u60c5\u51b5\u53ef\u4ee5\u76f4\u63a5\u7ebf\u6027\u5f52\u5e76\u5f97\u5230\u7ed3\u679c\uff0c\u5355\u6b21\u590d\u6742\u5ea6 $\\mathcal O(\\sqrt n)$\u3002\n\n\u63a5\u7740\u5bf9\u4e8e\u5927\u6570\uff0c\u56e0\u4e3a\u5b83\u6700\u591a\u53ea\u6709\u6839\u53f7\u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u7528\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u5bf9\u6bcf\u4e2a\u5927\u6570\u9884\u5904\u7406\u5176\u5bf9\u4e8e\u5176\u5b83\u6240\u6709\u6570\u7684\u7b54\u6848\uff0c\u6b63\u53cd\u626b\u4e24\u6b21\u5e8f\u5217\u5373\u53ef\uff0c\u9884\u5904\u7406\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n)$\uff0c\u5355\u6b21\u67e5\u8be2\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(1)$\u3002\n\n\u518d\u770b\u4fee\u6539\uff0c\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\n\n* \u5c0f\u6570\u5c0f\u6570\u5408\u5e76\uff0c\u7ed3\u679c\u662f\u5c0f\u6570\u5c31\u4e0d\u7ba1\uff0c\u5927\u6570\u5c31\u66b4\u529b\u66f4\u65b0\uff0c\u5355\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(\\sqrt n)$\u3002\n\n* \u5927\u6570\u5927\u6570\u5408\u5e76\u4ecd\u7136\u662f\u66b4\u529b\u66f4\u65b0\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5927\u6570\u6700\u591a\u88ab\u5408\u5e76\u4e00\u6b21\uff0c\u6240\u4ee5\u5355\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u7136\u662f $\\mathcal O(\\sqrt n)$\u3002\n\n* \u4e00\u4e2a\u5c0f\u6570\u548c\u4e00\u4e2a\u5927\u6570\u7684\u5408\u5e76\uff0c\u5982\u679c\u6bcf\u6b21\u5f80\u4e00\u4e2a\u5927\u6570\u91cc\u9762\u5408\u5e76\u4e00\u4e2a\u5927\u5c0f\u4e3a\u4e00\u7684\u5c0f\u6570\u6bcf\u6b21\u90fd\u66b4\u529b\u8dd1\u5c31\u70b8\u6389\u4e86\uff0c\u6240\u4ee5\u8003\u8651\u4f18\u5316\u3002\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7ed9\u6bcf\u4e2a\u5927\u6570\u518d\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408\uff0c\u91cc\u9762\u4ecd\u7136\u50a8\u5b58\u5f53\u524d\u6570\u7684\u4e00\u4e9b\u51fa\u73b0\u4f4d\u7f6e\uff0c\u4e0d\u8fc7\u9700\u8981\u4fdd\u8bc1\u5176\u5927\u5c0f\u4e0d\u8d85\u8fc7 $\\sqrt n$\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u5408\u5e76\u65f6\u628a\u5c0f\u6570\u653e\u8fdb\u5927\u6570\u7684\u96c6\u5408\u91cc\u9762\uff0c\u7b49\u5230\u96c6\u5408\u5927\u5c0f\u8d85\u8fc7 $\\sqrt n$ \u65f6\u518d\u53bb\u66b4\u529b\u8dd1\u4e00\u6b21\u7b54\u6848\u3002\u90a3\u8fd9\u65f6\u6211\u4eec\u5bf9\u5927\u6570\u9884\u5904\u7406\u51fa\u7684\u7b54\u6848\u5c31\u6709\u4e86\u65b0\u7684\u5b9a\u4e49\uff0c\u5373\u201c\u8be5\u6570\u4e0d\u5728\u96c6\u5408\u5185\u7684\u5143\u7d20\u548c\u5176\u4ed6\u6570\u7684\u7b54\u6848\u201d\u3002\u6700\u540e\u5728\u67e5\u8be2\u65f6\u53ea\u9700\u8981\u5355\u72ec\u5904\u7406\u4e00\u4e0b\u96c6\u5408\u5185\u5143\u7d20\u7684\u8d21\u732e\u5373\u53ef\uff0c\u5355\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(\\sqrt n)$\u3002\n\n\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O((n+m)\\sqrt{n})$\uff0c\u603b\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n\\sqrt n)$\u3002\n\n$\\text{7.27s / 124.45MB / 5.36KB C++20 O2}$\u3002\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <vector>\n\nnamespace Fread\n{\n    const int SIZE = 1 << 21;\n    char buf[SIZE], *S, *T;\n    inline char getchar()\n    {\n        if (S == T)\n        {\n            T = (S = buf) + fread(buf, 1, SIZE, stdin);\n            if (S == T)\n                return '\\n';\n        }\n        return *S++;\n    }\n}\nnamespace Fwrite\n{\n    const int SIZE = 1 << 21;\n    char buf[SIZE], *S = buf, *T = buf + SIZE;\n    inline void flush()\n    {\n        fwrite(buf, 1, S - buf, stdout);\n        S = buf;\n    }\n    inline void putchar(char c)\n    {\n        *S++ = c;\n        if (S == T)\n            flush();\n    }\n    struct NTR\n    {\n        ~NTR()\n        {\n            flush();\n        }\n    } ztr;\n}\n\n#ifdef ONLINE_JUDGE\n#define getchar Fread::getchar\n#define putchar Fwrite::putchar\n#endif\n\ninline int read()\n{\n    int x = 0, f = 1;\n    char c = getchar();\n    while (c < '0' || c > '9')\n    {\n        if (c == '-')\n            f = -1;\n        c = getchar();\n    }\n    while (c >= '0' && c <= '9')\n    {\n        x = x * 10 + c - '0';\n        c = getchar();\n    }\n    return x * f;\n}\n\ninline void write(int x)\n{\n    if (x < 0)\n    {\n        putchar('-');\n        x = -x;\n    }\n    if (x > 9)\n        write(x / 10);\n    putchar(x % 10 + '0');\n}\n\ninline int max(int x, int y)\n{\n    return x > y ? x : y;\n}\n\ninline int min(int x, int y)\n{\n    return x < y ? x : y;\n}\n\nconst int N = 100007, M = 320, inf = 0x3f3f3f3f;\n\nint n, m, a[N], lastans;\n\nint lim, siz[N], ans[M][N], id[N], F[N], tot;\n\nstd::vector<int> v[N];\n\ninline void build(int x, int Id = 0)\n{\n    id[x] = Id ? Id : ++tot;\n    int t = id[x];\n    memset(ans[t], 0x3f, sizeof ans[t]);\n    for (int i = 1, j = inf; i <= n; ++i)\n        if (a[i] == x)\n            j = 0;\n        else\n            ans[t][a[i]] = min(ans[t][a[i]], ++j);\n    for (int i = n, j = inf; i; --i)\n        if (a[i] == x)\n            j = 0;\n        else\n            ans[t][a[i]] = min(ans[t][a[i]], ++j);\n    std::vector<int> ddd;\n    ans[t][x] = 0, v[x].swap(ddd);\n}\n\ninline void merge(int x, int y)\n{\n    int i = 0, j = 0, sx = v[x].size(), sy = v[y].size();\n    std::vector<int> res;\n    while (i < sx && j < sy)\n        res.push_back(v[x][i] < v[y][j] ? v[x][i++] : v[y][j++]);\n    while (i < sx)\n        res.push_back(v[x][i++]);\n    while (j < sy)\n        res.push_back(v[y][j++]);\n    v[y] = res;\n}\n\ninline int merge_(int x, int y)\n{\n    int i = 0, j = 0, sx = v[x].size(), sy = v[y].size(), res = inf;\n    if (!sx || !sy)\n        return inf;\n    while (i < sx && j < sy)\n        res = min(v[x][i] < v[y][j] ? v[y][j] - v[x][i++] : v[x][i] - v[y][j++], res);\n    if (i < sx)\n        res = min(res, abs(v[x][i] - v[y][sy - 1]));\n    if (j < sy)\n        res = min(res, abs(v[x][sx - 1] - v[y][j]));\n    return res;\n}\n\ninline int query(int x, int y)\n{\n    x = F[x], y = F[y];\n    if (!siz[x] || !siz[y])\n        return -1;\n    if (x == y)\n        return 0;\n    if (siz[x] > siz[y])\n        x ^= y ^= x ^= y;\n    if (siz[y] <= lim)\n        return merge_(x, y);\n    else if (siz[x] <= lim)\n        return min(ans[id[y]][x], merge_(x, y));\n    else\n        return min(merge_(x, y), min(ans[id[x]][y], ans[id[y]][x]));\n}\n\ninline void change(int x, int y)\n{\n    int x_ = F[x], y_ = F[y];\n    if (!siz[x_] || x_ == y_)\n        return;\n    if (siz[x_] > siz[y_])\n        F[y] = x_, F[x] = n + 1, x_ ^= y_ ^= x_ ^= y_;\n    else\n        F[x] = n + 1;\n    if (x_ > n || y_ > n)\n        return;\n    x = x_, y = y_;\n    if (siz[y] <= lim)\n    {\n        if (siz[x] + siz[y] <= lim)\n        {\n            for (int i : v[x])\n                a[i] = y;\n            for (int i = 1; i <= tot; ++i)\n                ans[i][y] = min(ans[i][y], ans[i][x]);\n            merge(x, y);\n        }\n        else\n        {\n            for (int i = 1; i <= n; ++i)\n                if (a[i] == x)\n                    a[i] = y;\n            build(y);\n        }\n    }\n    else if (siz[x] <= lim)\n    {\n        if (siz[x] + v[y].size() <= lim)\n        {\n            for (int i : v[x])\n                a[i] = y;\n            for (int i = 1; i <= tot; ++i)\n                ans[i][y] = min(ans[i][y], ans[i][x]);\n            merge(x, y);\n        }\n        else\n        {\n            for (int i = 1; i <= n; ++i)\n                if (a[i] == x)\n                    a[i] = y;\n            build(y, id[y]);\n        }\n    }\n    else\n    {\n        for (int i = 1; i <= n; ++i)\n            if (a[i] == x)\n                a[i] = y;\n        build(y, id[y]);\n    }\n    std::vector<int> clea;\n    siz[y] += siz[x], siz[x] = 0, v[x].swap(clea);\n}\n\nsigned main()\n{\n    n = read(), m = read(), lim = sqrt(n);\n    for (int i = 1; i <= n; ++i)\n        ++siz[a[i] = read()], v[a[i]].push_back(i), F[i] = i;\n    for (int i = 0; i <= n; ++i)\n        if (siz[i] > lim)\n            build(i);\n    while (m--)\n    {\n        int opt = read(), x = read() ^ lastans, y = read() ^ lastans;\n        if (opt == 1)\n            change(x, y);\n        else\n        {\n            lastans = query(x, y);\n            if (~lastans)\n                write(lastans), putchar('\\n');\n            else\n                lastans = 0, putchar('I'), putchar('k'), putchar('a'), putchar('r'), putchar('o'), putchar('s'), putchar('\\n');\n        }\n    }\n    return 0;\n}\n```\n\n\n\n\n\n",
        "postTime": 1643184803,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "P5397 \u5929\u964d\u4e4b\u7269"
    }
]