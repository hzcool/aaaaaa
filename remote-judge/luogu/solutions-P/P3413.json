[
    {
        "content": "## ~~\u7b80\u5355~~\u7684\u6570\u4f4dDP\uff08\u4f20\u53cd\u53c2\u6570\u6d3b\u8be5WA\u7206\uff09\n\n\u56de\u6587\u4e32\u7684\u9898\u90fd\u4e0d\u4f1a\u505aEmmm\u3002\n\n\u770b\u5230\u9898\u76ee\u9996\u5148\u61f5\u903c\u7684\uff0c\u56de\u6587\u4e32\uff1f\u8fd9\u600e\u4e48\u5b58\u554a\uff1f\u8fd9\u4e48\u8f6c\u79fb\u554a\uff1f\n\n\u7136\u540e\uff0c\u8111\u56de\u8def\u6e05\u5947\u7684\u6211\uff08\u8fd9\u662f\u6b63\u5e38\u7684\u60f3\u6cd5\u5427\uff1f\uff1f\uff09\u5c31\u60f3\u5230\u4e86\u662f\u4e0d\u662f\u53ef\u4ee5\u53d6\u8865\u96c6\uff0c\u6bd5\u7adf\u662f\u6570\u5b57\u3002\n\n-------------------------\n\n### \u4e00\u53e5\u8bdd\uff1a**\u6b63\u96be\u5219\u53cd**\n\n\u4e00\u4e2a\u6570\u5982\u679c\u524d\u9762\u5305\u542b\u4e86\u56de\u6587\u4e32\uff0c\u4ee5\u540e\u7684\u72b6\u6001\u4e5f\u65e0\u6cd5\u786e\u5b9a\u3002\n\n\u7136\u540e\u5c31\u60f3\u5230\u4e86\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u6570\u5b8c\u5168\u4e0d\u542b\u56de\u6587\u4e32\u3002\n\n\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\uff0c**\u53d1\u73b0\u5f53\u4e00\u4e2a\u6570\u7684\u4efb\u610f\u4e00\u4f4d\u90fd\u4e0d\u548c\u524d\u4e24\u4f4d\u7684\u6570\u5b57\u76f8\u540c\u65f6\uff0c\u8fd9\u4e2a\u6570\u5c31\u4e0d\u542b\u56de\u6587\u4e32\u3002**\n\n\u624b\u63a8\u4e86\u4e00\u4e0b\u4e24\u4e2a\u6837\u4f8b\uff0c\u53d1\u73b0\u597d\u50cf\u6ca1\u95ee\u9898\u3002\n\n\u4e8e\u662f\u5c31\u6253\u8d77\u6765\u4e86\u3002\n\n\u8bbe$f[pos][pre][gpre]$ \u8868\u793a\u5728$pos$\u4f4d\u65f6\u524d\u4e00\u4f4d\u662f$pre$\u524d\u4e24\u4f4d\u662f$gpre$\u7684\u975e\u56de\u6587\u4e32\u6570\u3002\n\n\u548c\u666e\u901a\u7684\u6570\u4f4dDP\u4e00\u6837\u8f6c\u79fb\u3002\n\n--------------\n\n### code\u8fc7\u7a0b\u4e2d\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898+\u7ec6\u8282\uff1a\n\n#### 1.\n\n100%\u6570\u636e\u67091000\u4f4d\uff0c\u8fd9\u663e\u7136\u7206\u4e86\u3002\u4f46\u662f\u6ca1\u4e8b\uff0c\u8fd9\u8fd8\u65b9\u4fbf\u4e86\uff0c\u4e0d\u7528\u62c6\u6570\u4f4d\u4e86\u3002\u76f4\u63a5\u5b57\u7b26\u4e32\u8bfb\u5165\u3002\uff08\u4e0d\u8981\u5fd8\u4e86\u7ffb\u8f6c\u8fc7\u6765\uff01\uff01\uff01\uff01\uff09\n\n#### 2.\n\n\u90fd\u77e5\u9053\u6570\u4f4dDP\u4e2d\u6700\u540e\u6c42\u7b54\u6848\u8fd8\u7528\u4e86\u524d\u7f00\u548c\u7684\u601d\u60f3\u3002\u5982\u4e0b\uff1a\n\n$$ans=sum[r]-sum[l-1]$$\n\n\u90a3\u6211\u4eec\u5982\u4f55\u5904\u7406\u4e00\u4e2a1000\u4f4d\u7684\u6570\u5b57\u90a3\uff1f\n\n\u5bf9\u4e8e $l-1$ \u8fd9\u4e2a\u64cd\u4f5c\u8fd8\u8981\u5199\u4e2a\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u5417\uff1f\n\n\u4e8b\u5b9e\u662f\uff1a\u4e0d\u7528\uff01\uff01\uff01\uff01\n \n\u53ef\u4ee5\u76f4\u63a5\u6c42\u51fa $sum[l]$ \u548c $sum[r]$ \u7136\u540e\u7279\u6b8a\u5224\u65ad\u4e00\u4e0b $l$ \u8fd9\u4e2a\u5de6\u8fb9\u754c\u5408\u4e0d\u5408\u6cd5\u5c31\u884c\u4e86\uff0c\u4e0d\u7528\u518d\u5199\u9ad8\u7cbe\u4e86\u3002\n\n#### 3.\n\n\u7531\u4e8e\u53d6\u8865\u96c6\u4e86\u5417\uff0c\u6240\u4ee5\u6700\u540e\u8981\u62ff$r-l+1$\u518d\u51cf\u53bb\u975e\u56de\u6587\u4e32\u6570\u624d\u662f\u7b54\u6848\uff0c\u53ef\u662f$r-l+1$\u592a\u5927\u4e86\u3002\u3002\u3002\n\n\u53c8\u8981\u5199\u9ad8\u7cbe\u4e86\u5417emmm\uff1f\uff1f\uff1f\n\n\u5f53\u7136\u4e0d\u7528\uff0c\u53ef\u4ee5\u76f4\u63a5\u5bf9$l$\u548c$r$\u53d6\u6a21\uff0c\u7136\u540e\u76f8\u51cf\uff0c\u5f97\u51fa\u6765\u7684\u7ed3\u679c\u4e0e$(r-l)mod(1e9+7)$\u4e00\u81f4\u3002\n\n#### 4.\n\n\u8f6c\u79fb\u65f6\u6ce8\u610f\u4e00\u4e0b\u524d\u5bfc0\uff0c\u4e0d\u8981\u8ba9\u524d\u5bfc0\u6210\u4e3a\u5408\u6cd5\u7684pre\u6216gpre\uff08\u5c31\u662f\u4e0d\u8981\u7528\u5f53\u524d\u4f4d\u53bb\u5339\u914d\u524d\u9762\u4e0d\u5b58\u5728\u7684\u6570\uff09\u3002\n\n\u4e3e\u4e2a\u6817\u5b50\uff1a100\u4ee5\u5185\uff0c\u653e\u5230\u7b2c\u4e09\u4f4d\uff0c\u82e5\u7b2c\u4e8c\u4f4d\u4e3a\u7a7a\uff08\u6b64\u65f6\u7b2c\u4e8c\u4f4d\u5e94\u8d4b\u4e3a-1\uff09\uff0c\u7b2c\u4e09\u4f4d\u76840\u4e5f\u662f\u5408\u6cd5\u89e3\u3002\n\n#### 5.\n\n\u4e00\u5b9a\u4e0d\u8981\u4f20\u53cd\u53c2\u6570\uff08\u8c03\u4e86\u6211\u4e00\u65e9\u4e0aQAQ\uff09\u3002\n\n\u8fd8\u6709\u4e0d\u8981\u5fd8\u5f00 $ long long $\n\n### Think twice , code once. \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nconst long long mod=1e9+7;\nconst long long maxn=1001;\nusing namespace std;\nstring l,r;\nlong long len[maxn];\nlong long f[maxn][10][10];\nlong long dfs(long long pos,long long pre,long long gpre,bool lim,bool zero)\n{\n\tif(pos==0) return 1;\n\tif(f[pos][pre][gpre]!=-1&&!lim&&!zero&&pre!=-1&&gpre!=-1) return f[pos][pre][gpre];\n\tlong long up=lim?len[pos]:9;\n\tlong long ans=0;\n\tfor(long long i=0;i<=up;i++)\n\t{\n\t\tif(i!=pre&&i!=gpre&&!zero)\n\t\t\tans=(ans+dfs(pos-1,i,pre,lim&&i==len[pos],0))%mod;\n\t\telse if(zero)\n\t\t\tans=(ans+dfs(pos-1,(i==0&&zero)?-1:i,-1,lim&&i==len[pos],i==0&&zero))%mod;\n\t}\n\tif(!lim&&!zero&&pre!=-1&&gpre!=-1) return f[pos][pre][gpre]=ans;\n\treturn ans;\n}\nlong long slove()\n{\n\tlong long s=l.length();\n\tfor(long long i=0;i<s;i++)\n\t\tlen[s-i]=l[i]-'0';\n\tlong long ans1=dfs(s,-1,-1,1,1);\n\ts=r.length();\n\tfor(long long i=0;i<s;i++)\n\t\tlen[s-i]=r[i]-'0';\n\tlong long ans2=dfs(s,-1,-1,1,1);\n\tans1--;\n\ts=l.length();\n\tfor(long long i=2;i<=s;i++)\n\t\tif(l[i]==l[i-1]||(l[i]==l[i-2]&&(i-2>=1)))\n\t\t{\n\t\t\tans1++;\n\t\t\tbreak;\n\t\t}\n\treturn (ans2-ans1)%mod;\n}\nint main()\n{\n\tcin>>l>>r;\n\tmemset(f,-1,sizeof f);\n\tlong long numl=0,numr=0;\n\tlong long s1=l.length(),s2=r.length();\n\tfor(long long i=0;i<s1;i++)\n\t\tnuml=(numl*10%mod+(l[i]^48))%mod;\n\tfor(long long i=0;i<s2;i++)\n\t\tnumr=(numr*10%mod+(r[i]^48))%mod;\n\tprintf(\"%lld\",((numr-numl-slove()+1)%mod+mod)%mod);\n\treturn 0;\n} \n```\n\n### \u540e\u6392\u5b89\u5229\u4e2a\u4eba\u535a\u5ba2\uff1a[\u4f20\u9001\u95e8](http://tchoi.club)",
        "postTime": 1541388885,
        "uid": 59032,
        "name": "\u8f7b\u5c18",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3413 \u3010SAC#1 - \u840c\u6570\u3011"
    },
    {
        "content": "# \u9898\u89e3-\u840c\u6570\n### $\\texttt{Introduction}$\n\u592b\u849f\u84bb\u521d\u5b66\u6570\u4f4d $\\texttt{dp}$\uff0c\u5bfb\u6c34\u9898\u800c\u5f97\u300a\u840c\u6570\u300b\uff0c\u4e43\u8c14\u8c14\u505a\u4e4b\u3002\u521d\u9002\uff0c\u505a\u4e4b\u60a0\u7136\u3002\u800c\u6837\u4f8b\u4e0d\u8fc7\uff0c\u6e10\u751f\u7126\u8e81\uff0cAC\u65f6\u5df2\u8fc7\u4e09\uff0c\u800c\u9519\u4e4b\u751a\u5947\uff0c\u4e43\u8bb0\u4e4b\u3002\n\n**[\u535a\u5ba2\u4e2d\u6b64\u6587](https://blog.csdn.net/KonnyWen/article/details/104500985)**\n\n---\n### $\\texttt{Description}$\n> [\u840c\u6570](https://www.luogu.com.cn/problem/P3413)\n> \u6c42\u533a\u95f4 $[L,R]$ \u4e2d\u6709\u957f\u5ea6\u5927\u4e8e $2$ \u7684\u56de\u6587\u5b50\u4e32\u7684\u6570\u91cf\u3002\n> \u6570\u636e\u8303\u56f4\uff1a$1\\le L<R\\le 10^{1000}$\u3002\n\n---\n### $\\texttt{Solution}$\n\u6570\u4f4d $\\texttt{dp}$ \u5178\u578b\u9898\uff0c\u5982\u679c\u4f60\u6ca1\u5b66\u8fc7\u6570\u4f4d $\\texttt{dp}$ \u5c31\u8df3\u8fdb\u4f20\u9001\u95e8\u2192[\\[\u4f20\u9001\u95e8\\]](https://blog.csdn.net/KonnyWen/article/details/104475276)\u3002\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u6a21\u578b\uff0c\u7528 $\\texttt{DP(n)}$ \u8868\u793a $[1,n]$ \u533a\u95f4\u4e2d\u7684\u7b54\u6848\uff0c$p$ \u8868\u793a $n$ \u7684\u4f4d\u6570\uff0c$nl_i$ \u8868\u793a $n$ \u4ece\u53f3\u5f80\u5de6\u7b2c $i$ \u4f4d\u3002 \n\n$$\\texttt{Dfs(int~w,int~d,int~ld,bool~free,bool~hw)}$$\n\n\u8868\u793a\uff1a\n\n> \u5f53\u524d\u8981\u6c42\u4ece\u53f3\u5f80\u5de6\u7b2c $w$ \u4f4d\u6570\u3002\n> \n> \u7b2c $w+1$ \u4f4d\u6570\u4e3a $d$\u3002\n>  \n>  \u7b2c $w+2$ \u4f4d\u6570\u4e3a $ld$\u3002\n>  \n>  \u5982\u679c\u524d $p-w$ \u4f4d\u548c $n$ \u76f8\u540c\uff0c$free=0$\uff1b\u5426\u5219 $free=1$\u3002\n>  \n>  \u5982\u679c\u524d $p-w$ \u4f4d\u4e2d\u5df2\u7ecf\u51fa\u73b0\u4e86\u201c\u957f\u5ea6\u5927\u4e8e $2$ \u7684\u56de\u6587\u5b50\u4e32\u201d\uff0c$fw=1$\uff1b\u5426\u5219 $fw=0$\u3002\n> \n> $\\texttt{Dfs}$ \u7684\u503c\u8868\u793a\u6570\u7684\u6570\u91cf\u3002\n\n\u5982\u679c\u627e\u5230\u7684\u7b2c $w$ \u4e2a\u6570\u5b57 $i$ \u6ee1\u8db3 $i==d$ \u6216 $i==ld$\uff0c\u5c31\u8bf4\u660e\u6709\u4e86\u957f\u5ea6\u81f3\u5c11\u4e3a $2$ \u7684\u56de\u6587\u5b50\u4e32\u3002\u7528 $f_{w,d,ld,hw}$ \u6570\u5b57\u8bb0\u4e0b\u7b54\u6848\uff0c\u5b8c\u6210\u8bb0\u5fc6\u5316\u641c\u7d22\u3002\n\n**code**\n\n```cpp\nlng Dfs(int w,int d,int ld,bool free,bool hw){\n\tif(!w) return hw;\n\tif(free&&~f[w][d][ld][hw]) return f[w][d][ld][hw];\n\tint up=free?9:nl[w]; lng res=0;\n\tfor(int i=0;i<=up;i++)\n\t\t(res+=Dfs(w-1,i,d,free||i<up,hw||i==d||i==ld))%=mod;\n\t/*\n\t\u4e0b\u4e00\u4f4d\u662fw-1\u4f4d\uff0c\u4e0b\u4e00\u4e2a\u6570\u7684\u4e0a\u4e00\u4e2a\u6570\u662fi\uff0c\u4e0b\u4e00\u4e2a\u6570\u7684\u4e0a\u4e0a\u4e2a\u6570\u662fd\u3002\n\t\u5982\u679c\u539f\u6765\u5c31free==1\u6216\u8005i\u4e0en\u7684\u7b2cw\u4f4d\u4e0d\u76f8\u540c\u4e0b\u4e00\u4e2afree=1\u3002\n\t\u5982\u679c\u539f\u6765\u5c31\u6709\u4e86\u957f\u5ea6\u4e3a2\u7684\u56de\u6587\u5b50\u4e32\u6216i,d\u5f62\u6210\u56de\u6587\u5b50\u4e32\u6216i,d,ld\u5f62\u6210\u56de\u6587\u5b50\u4e32\uff0c\u4e0b\u4e00\u4e2afw=1\u3002\n\t*/\n\tif(free) f[w][d][ld][hw]=res;\n\treturn res;\n}\n```\n\n\u6240\u4ee5 \n\n$$\\texttt{DP(n)}=\\sum\\limits_{i=1}^{p-1}\\sum_{j=1}^{9}\\texttt{Dfs(i-1,j,10,1,0)}\n+\\sum_{j=1}^{nl_p-1}\\texttt{Dfs(p-1,j,10,1,0)}\n+\\texttt{Dfs(p-1,}nl_p\\texttt{,10,0,0)}$$\n\n\u3002\u4e3a\u4ec0\u4e48 $ld=10$ \uff1f\u56e0\u4e3a $ld$ \u8fd8\u4e0d\u5b58\u5728\uff0c\u800c\u4e14\u5982\u679c\u4f60\u8d4b\u503c\u4e3a $0$\uff0c\u4f1a\u5f71\u54cd $\\texttt{Dfs}$ \u7ed3\u679c\uff1b\u5982\u679c\u4f60\u8d4b\u503c\u4e3a $-1$\uff0c\u4f1a\u5728\u8bb0\u5fc6\u5316\u6570\u7ec4\u7684\u4e0b\u6807\u4e0a $\\texttt{RE}$\u3002\u6240\u4ee5\u8d4b\u503c\u4e3a $10$ \u662f\u8f83\u597d\u9009\u62e9\uff0c\u7136\u540e\u8bb0\u5fc6\u5316\u6570\u7ec4\u7684\u4e0b\u6807\u8303\u56f4\u5c31\u8981\u5f00 $11$\u3002\u849f\u84bb\u56e0\u4e3a\u8fd9\u91cc\u8d4b\u503c\u6210 $-1$ \u800c $\\texttt{WA}$ \u4e86\u4e24\u6b21\u3002\n\n**code**\n\n```cpp\nlng DP(char*n,lng a){\n\tint p=strlen(n+1); lng res=0;\n\tfor(int i=1;i<=p;i++) nl[i]=n[p+1-i]-'0';\n\tnl[1]+=a;\n\tif(p==1&&nl[1]<=0) return 0;\n\tfor(int i=1;nl[i]<0&&i<=p;i++)\n\t\tnl[i]+=10,nl[i+1]--;\n\twhile(!nl[p]&&p>1) p--;\n\t// debug(p,nl);\n\tmemset(f,-1,sizeof f);\n\tfor(int i=1;i<=p-1;i++)\n\t\tfor(int j=1;j<=9;j++)\n\t\t\t(res+=Dfs(i-1,j,10,1,0))%=mod;  \n\tfor(int j=1;j<=nl[p];j++)\n\t\t(res+=Dfs(p-1,j,10,j<nl[p],0))%=mod;\n\treturn res;\n}\n```\n\u7136\u540e\u6700\u540e\u7b54\u6848\u5c31\u662f $\\texttt{DP(R)}-\\texttt{DP(L-1)}$\uff0c\u56e0\u4e3a $L$ \u548c $R$ \u8fdc\u7206 $\\texttt{long long}$\uff0c\u6240\u4ee5\u7528\u5b57\u7b26\u4e32\u8f93\u5165\u6216\u5904\u7406\u3002\n\n---\n### $\\texttt{Code}$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n//&Start\n#define lng long long\n\n//&Debug\ntemplate<class T>\nvoid debug(int x,T*arr){\n\tfor(int i=1;i<=x;i++)\n\t\tcout<<arr[i]<<\"\\n \"[i<x];\n}\n\n//&DP\nconst int W=1010,D=10;\nconst lng mod=1e9+7;\nchar L[W],R[W];\nint nl[W];\nlng f[W][D][D+1][2];\nlng Dfs(int w,int d,int ld,bool free,bool hw){\n\tif(!w) return hw;\n\tif(free&&~f[w][d][ld][hw]) return f[w][d][ld][hw];\n\tint up=free?9:nl[w]; lng res=0;\n\tfor(int i=0;i<=up;i++)\n\t\t(res+=Dfs(w-1,i,d,free||i<up,hw||i==d||i==ld))%=mod;\n\tif(free) f[w][d][ld][hw]=res;\n\treturn res;\n}\nlng DP(char*n,lng a){\n\tint p=strlen(n+1); lng res=0;\n\tfor(int i=1;i<=p;i++) nl[i]=n[p+1-i]-'0';\n\tnl[1]+=a;\n\tif(p==1&&nl[1]<=0) return 0;\n\tfor(int i=1;nl[i]<0&&i<=p;i++)\n\t\tnl[i]+=10,nl[i+1]--;\n\twhile(!nl[p]&&p>1) p--;\n\t// debug(p,nl);\n\tmemset(f,-1,sizeof f);\n\tfor(int i=1;i<=p-1;i++)\n\t\tfor(int j=1;j<=9;j++)\n\t\t\t(res+=Dfs(i-1,j,10,1,0))%=mod;  \n\tfor(int j=1;j<=nl[p];j++)\n\t\t(res+=Dfs(p-1,j,10,j<nl[p],0))%=mod;\n\treturn res;\n}\n\n//&Main\nint main(){\n\tscanf(\"%s %s\",L+1,R+1);\n\tprintf(\"%lld\\n\",(DP(R,0)-DP(L,-1)+mod)%mod);\n\treturn 0;\n}\n```\n\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**\n",
        "postTime": 1582623987,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3413 \u3010SAC#1 - \u840c\u6570\u3011"
    },
    {
        "content": "\u767e\u5ea6\u679c\u7136\u641c\u4e0d\u5230\u9898\u89e3\uff0c\u6700\u540e\u6211\u5728google \u91cc\u9762\u627e\u5230\u4e86\uff1b\n\n\u9996\u5148\u56de\u6587\u4e32\u561b>2\u5c31\u597d\u5566\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u5224\u65ad2\u60c5\u51b5\n\naa\u6216\u8005aba;\n\n\u6240\u4ee5\u6211\u4eecf[i][j][k]\n\n\u8868\u793a\u7b2ci\u4f4d\u4e3aj\n\ni-1\u4f4d\u4e3ak\u7684\u6240\u6709\u840c\uff1b\n\n\u90a3\u4e48\u663e\u7136\u5bf9\u4e8e\u91cd\u590d\u5f88\u96be\u5224\u65ad\uff1b\n\n\u6240\u4ee5\u6211\u840c\u67092\u79cd\u65b9\u6cd5\uff0c\u4e00\u662f\u5728\u5f00\u4e00\u7ef4\u6570\u7ec4\u8bb0\u5f55\u662f\u5426\u51fa\u73b0\uff1b\n\n\u53e6\u5916\u7684\u65b9\u6cd5\u5c31\u662f\u5427f[i][j][k]\u8bb0\u5f55\u7684\u662f\u5f53\u524d\u72b6\u6001\u7684\u975e\u840c\uff1b\n\n\u90a3\u6211\u5c31\u7528\u4e86\u7b2c\u4e8c\u79cd\uff1b\n\n\u90a3\u4e48\u8fd9\u6837\u7684\u8bdd\u53ea\u8981\u7279\u5224i=1\u7684\u60c5\u51b5\uff0cf\u6570\u7ec4\u53ef\u4ee5\u65b9\u4fbf\u7684\u6c42\u4e86\uff1b\n\n\u90a3\u4e48\u4e4b\u540e\u7684\u8bdd\u5c31\u662f\u6570\u4f4ddp\u4e86\uff1b\n\n\n```cpp\n#include<bits/stdc++.h>\n#define Ll long long\nusing namespace std;\nconst int N=1e3+5;\nLl f[N][10][10],mo=1e9+7,ans;\nstring l,r;\nvoid dp(){\n    for(int i=2;i<=1000;i++)\n        for(int x=0;x<=9;x++)\n            for(int y=0;y<=9;y++)if(x!=y){\n                for(int z=0;z<=9;z++)\n                    if(y!=z&&x!=z)\n                        f[i][x][y]+=f[i-1][y][z];\n                if(i-1==1)f[i][x][y]++;\n                f[i][x][y]%=mo;\n            }\n}\nLl out(string s){\n    int n=s.length(),X=-1,Y=-1;\n    Ll tot=0,ans=0;bool ok=1;\n    for(int i=0;i<n;i++)tot=(tot*10+s[i]-48)%mo;\n    for(int i=1;i<n;i++)\n        for(int x=1;x<=9;x++)\n            for(int y=0;y<=9;y++)\n                ans=(ans+f[i][x][y])%mo;\n    if(n>1)ans+=10;//10\u7684\u542b\u4e49\u662f0~9\u8fd910\u4e2a\u6570\u5b57 \n    for(int i=n;i>1;i--){\n        int v=s[n-i]-48;\n        for(int j=0;j<v;j++)if(i!=n||j!=0)\n            for(int k=0;k<=9;k++)\n                if(X!=j&&Y!=j&&j!=k&&k!=X)\n                    ans=(ans+f[i][j][k])%mo;\n        if(v==X||v==Y){ok=0;break;}\n        Y=X;X=v;\n    }\n    if(ok)for(int j=0;j<=s[n-1]-48;j++)\n        if(j!=Y&&j!=X)ans=(ans+1)%mo;\n    return(tot+1-ans+mo)%mo;//1\u7684\u542b\u4e49\u5c31\u662f0\u8fd9\u4e2a\u6570\u5b57 \n}\nint main()\n{\n    dp();\n    cin>>l>>r;\n    ans=(out(r)-out(l)+mo)%mo;\n    for(int i=1;i<=l.length()-1;i++)\n        if(l[i]==l[i-1]||(i>1&&l[i]==l[i-2])){\n            ans=(ans+1)%mo;break;\n        }\n    printf(\"%lld\",ans);\n}\n```",
        "postTime": 1501404613,
        "uid": 7442,
        "name": "\u5de8\u578b\u65b9\u5757",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3413 \u3010SAC#1 - \u840c\u6570\u3011"
    },
    {
        "content": "\u6c34\u9898\uff0c\u8bb0\u5fc6\u5316\u641c\u7d22\uff1a\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\nusing namespace std; \nlong long a[1001],dp[1001][10][2];\nstring s1,s2;\nint k,l;\nint dfs(int pos,int pre,int per,int t,int k,bool flag)\n{\n    if(pos<=0) return t;//\u82e5\u7b26\u5408\uff0c\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0.\n    if(!flag&&dp[pos][pre][t]!=-1) return dp[pos][pre][t];//\u5df2\u7ecf\u904d\u5386\u8fc7\uff0c\u76f4\u63a5\u8fd4\u56de.\n    int end=flag? a[pos]:9;//\u5f53\u524d\u4f4d\u7f6e\u662f\u5426\u53d7\u9650.\n    int ret=0;\n    for(int i=0;i<=end;i++) ret=(ret+dfs(pos-1,i,k? pre:-1,t||((i==pre)&&k)||((i==per)&&k),k||(i!=0),flag&&(end==i))%1000000007)%1000000007;//\u641c\u7d22\u4e0b\u4e00\u4f4d,\u5947\u6570\u4f4d\u56de\u6587\u4e32\u548c\u5076\u6570\u4f4d\u56de\u6587\u4e32\u8981\u5206\u5f00\u5224\u65ad\n    if(!flag&&k&&per!=-1) dp[pos][pre][t]=ret;//\u8bb0\u5f55.\n    return ret;\n}\nint solve(string str)\n{\n    int len=0,slen=str.size()-1;\n    while(slen>=0) a[++len]=str[slen]-'0',slen--;\n    while(!a[len]) len--;\n    memset(dp,-1,sizeof(dp));\n    return dfs(len,-1,-1,0,0,1);\n}\nint main()\n{\n    cin>>s1>>s2;k=1;l=s1.size();\n    while(s1[l-k]=='0'&&l>k) s1[l-k]='9',k++;\n    s1[l-k]-=1;\n    printf(\"%d\\n\",(solve(s2)-solve(s1)+1000000007)%1000000007);\n    return 0;\n}\n```",
        "postTime": 1490160536,
        "uid": 27677,
        "name": "day_dream",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3413 \u3010SAC#1 - \u840c\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9898\u8fd8\u53ef\u4ee5\u7528\u6570\u5b66\u65b9\u6cd5\u6765\u505a\u3002\u76f4\u63a5\u6c42\u840c\u6570\u5f88\u96be\uff0c\u4f46\u662f\u6c42\u975e\u840c\u6570\u6bd4\u8f83\u7b80\u5355\uff0c\u6bcf\u4e00\u4f4d\u90fd\u4e0d\u548c\u524d\u4e24\u4f4d\u76f8\u7b49\u5c31\u662f\u975e\u840c\u7684\u3002\u8bb0f(n)\u662fn\u4f4d\u7684\u975e\u840c\u6570\u7684\u603b\u6570\uff0c\u53ef\u5f97f(1)=9, f(n)=9\u00d79\u00d78^(n-2)(n>=2)\u3002\n\u63a5\u4e0b\u6765\uff0c\u4ece\u6700\u9ad8\u4f4d\u5f00\u59cb\uff0c\u901a\u8fc7\u4e58\u6cd5\u539f\u7406\u548c\u52a0\u6cd5\u539f\u7406\uff0c\u5c31\u53ef\u4ee5\u6c42\u5f97\u7ed3\u679c\uff0c\u6ce8\u610f\u7ec6\u8282\u3002\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n```cpp\n#include <stdio.h>\n#include <string.h>\n#define M 1000000007\n#define N 1005\ntypedef long long LL;\n\nchar l[N], r[N];\nLL p[N], f[N];\n\nLL solve(char *a, int len)\n{\n\tif(!len) return 0;\n\tLL sum = 0, tot = 0;\n\tint i, j, k;\n\tfor(i = 1; i <= len; i++) sum += f[i];\n\tsum += p[len - 1] * 9 * (a[0] - 49);\n\tfor(i = 1, j = len - 1; i < len; i++, j--){\n\t\tk = (a[i] - 1 >= a[i - 1]) + (i > 1 && a[i] - 1 >= a[i - 2]);\n\t\tsum += p[j] * (a[i] - 48 - k);\n\t\tif(a[i] == a[i - 1] || i > 1 && a[i] == a[i - 2]) break;\n\t}\n\tif(i == len) sum += a[i] - 47 - (a[i] >= a[i - 1]) - (i > 1 && a[i] >= a[i - 2]);\n\tsum %= M;\n\tfor(i = 0; i <= len; i++){\n\t\ttot = (tot * 10 + a[i] - 48) % M;\n\t}\n\treturn tot < sum ? tot - sum + M : tot - sum;\n}\n\nint judge(char *a)\n{\n\tif(strlen(a) == 1) return 0;\n\tif(a[1] == a[0]) return 1;\n\tint i;\n\tfor(i = 2; a[i]; i++){\n\t\tif(a[i] == a[i - 1] || a[i] == a[i - 2]) return 1;\n\t} \n\treturn 0;\n}\n\nint main() \n{\n\tint n, i, t, tt;\n\tLL ans;\n\t\n\tscanf(\"%s%s\", l, r);\n\tt = strlen(r), tt = strlen(l);\n\t\n\tp[0] = 1;\n\tfor(i = 1; i <= t; i++){\n\t\tp[i] = (p[i - 1] << 3) % M;\n\t}\n\tf[0] = 0, f[1] = 9, f[2] = 81;\n\tfor(i = 3; i <= t; i++){\n\t\tf[i] = (f[i - 1] << 3) % M;\n\t}\n\t\n\tans = solve(r, t - 1) - solve(l, tt - 1) + judge(l);\n\tif(ans < 0) ans += M;\n\tif(ans == M) ans = 0;\n\tprintf(\"%lld\\n\", ans);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1537338314,
        "uid": 7419,
        "name": "sheepsun",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3413 \u3010SAC#1 - \u840c\u6570\u3011"
    },
    {
        "content": "\u8fd9\u662f\u6211\u5165\u95e8\u6570\u4f4ddp\u7684\u7b2c\u4e8c\u9053\u9898\\\n\u7b2c\u4e00\u9053\u662f P2657 [SCOI2009]windy\u6570\n\n\u6570\u4f4ddp\uff0c\u8003\u7684\u5c31\u662f\u6a21\u677f\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#define ll long long\n#define MD 1000000007\n\nusing namespace std;\n\nint s1[1005],s2[1005];\nint st[1005];\nll f[1005][15][15][2][2][2];\n//pos \u6700\u5927\u67091000\u4f4d\u6240\u4ee5\u5f00\u52301000+ \nstring sx,sy;\nint len;\n// pre2 \u5f53\u524d\u4f4d\u7f6e\u7684\u7b2c\u524d\u4e24\u4f4d pre1 \u5f53\u524d\u4f4d\u7f6e\u7684\u7b2c\u524d\u4e00\u4f4d\n// lead \u524d\u5bfc\u96f6 \u6211\u8bbe\u7f6e\u7684\u6570\u662f15\uff08\u4e0d\u5f71\u54cd\u672c\u9898\uff09  \n// pos \u5f53\u524d\u4f4d\u7f6e\n// limit \u6700\u9ad8\u4e3a\u9650\u5236\n// flag \u5982\u679cflag\u4e3a1 \u5219\u5f53\u524d\u8fd9\u4e2a\u6570\u662f\u840c\u7684 \u5426\u5219\u5b83\u4e3a0 \n// len \u8bb0\u5f55\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 \nll dfs (int pre2,int pre1,int pos,int limit,int lead,int flag)\n{\n    if(pos>len) return flag;\n\n    ll ret=0;\n\n    if(f[pos][pre1][pre2][limit][lead][flag]!=-1) return f[pos][pre1][pre2][limit][lead][flag]%MD;\n\n    int top=limit?st[pos]:9;\n    \n    for(int i=0;i<=top;i++)\n    {\n        //\u5982\u679c\u8fd9\u4e2a\u6570\u662f\u840c\u7684 \u65e0\u9700\u518d\u5224\u65ad\u4e86 \n        if(flag&&pre1!=-2) ret=(ret%MD+dfs(pre1,(lead&&!i)?-2:i,pos+1,limit&&i==top,(lead&&!i)?1:0,1)%MD)%MD;\n        else\n        {\n            //\u4e0d\u77e5\u9053\u8fd9\u4e2a\u6570\u840c\u4e0d\u840c \n            //\u5173\u952e\uff1a\u5982\u679caa\u6216aba\u90a3\u4e48\u5c31\u5408\u6cd5 \n            if(pre1==i&&pre1!=-2||pre2==i&&pre2!=-2&&pre1!=-2)\n                ret=(ret%MD+dfs(pre1,(lead&&!i)?-2:i,pos+1,limit&&i==top,(lead&&!i)?1:0,1)%MD)%MD;//1\n            else\n                ret=(ret%MD+dfs(pre1,(lead&&!i)?-2:i,pos+1,limit&&i==top,(lead&&!i)?1:0,0)%MD)%MD;//0 \n        }\n        //\u5199\u6cd5\u6709\u5f88\u591a\u79cd \u6211\u7684\u4ee3\u7801\u6bd4\u8f83\u5570\u55e6 \n    }\n\n    f[pos][pre1][pre2][limit][lead][flag]=(ret%MD);\n    //\u8bb0\u5fc6\u5316\u641c\u7d22\u76f4\u63a5\u628a\u6240\u6709\u72b6\u6001\u5b58\u4e0a \n    //\u8fd9\u6837\u5b58\u4e0d\u5bb9\u6613\u51fa\u9519 \n    return ret%MD;\n}\n\nll work (int le,int ok)\n{\n    memset(st,0,sizeof(st));\n    memset(f,-1,sizeof(f));\n    len=le;\n    if(ok==1)\n    {\n        for(int i=1;i<=len;i++)\n            st[i]=s2[i];\n    }\n    else\n    {\n        for(int i=1;i<=len;i++)\n             st[i]=s1[i];\n    }\n    return dfs(-2,-2,1,1,1,0)%MD;\n}\n\nint main()\n{\n    // \u4e00\u5b9a\u8981\u8bfb\u5165\u5b57\u7b26\u4e32\uff08\u8bfb\u5165\u7684\u6570\u6709\u4e00\u5343\u4f4d\u554a\uff09 \n    cin>>sx>>sy;\n    int len1=sx.length();\n    for(int i=0;i<len1;i++)\n    {\n        s1[i+1]=sx[i]-'0';\n    }\n    int len2=sy.length();\n    for(int i=0;i<len2;i++)\n    {\n        s2[i+1]=sy[i]-'0';\n    }\n    s1[len1]--;\n    ll ans1=work(len1,0);\n    ll ans2=work(len2,1);\n    printf(\"%lld\",((ans2-ans1)%MD+MD)%MD);\n    //\u8fd9\u91cc\u4e00\u5b9a\u8981\u6a21\u4e0d\u7136\u4f1a\u8f93\u51fa\u8d1f\u6570 \n    return 0;\n}\n```\n\n",
        "postTime": 1571141634,
        "uid": 124016,
        "name": "Meicow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3413 \u3010SAC#1 - \u840c\u6570\u3011"
    },
    {
        "content": "\u770b\u5230\u9898\u89e3\u91cc\u9762\u9012\u63a8\u7684\u5199\u6cd5\u5f88\u5c11\uff0c\u849f\u84bb\u6765\u8865\u4e00\u7bc7\u3002\n---\n\u524d\u9762dalao\u4eec\u5df2\u7ecf\u8bf4\u4e86\uff0c\u91c7\u53d6\u6b63\u96be\u5219\u53cd\u7684\u601d\u60f3\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8bb0\u5f55$f[i][j][k]$\u8868\u793a\u524di\u4f4d\uff0c\u5176\u4e2d\u7b2ci\u4f4d\u4e3aj\uff0ci-1\u4f4d\u4e3ak\u7684**\u975e\u840c\u6570**\u4e2a\u6570\u3002\n\n\u6ce8\u610f\u5230\u5f53\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u4e3a\u975e\u840c\u6570\uff0c\u5fc5\u987b\u8981\u77e5\u9053\u5b83\u548c\u524d\u4e24\u4f4d\u7684\u76f8\u7b49\u5173\u7cfb\uff0c\u90fd\u8981\u8bb0\u5f55\u4e0b\u6765\u3002\n\n\u90a3\u4e48\u65b9\u7a0b\u4e5f\u6bd4\u8f83\u663e\u7136\u4e86\uff1a\n$$\nf[i][j][k]+=\\sum_{l!=k\\And l!=j\\And j!=k }f[i-1][k][l]\n$$\n\u8fd9\u6837\u6211\u4eec\u5c31\u628a\u975e\u840c\u6570\u7684\u8868\u5237\u51fa\u6765\u4e86\u3002\n\n\u4e4b\u540e\u5c31\u666e\u901a\u7684\u8fdb\u884c\u6570\u4f4ddp\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u540c\u65f6\u7edf\u8ba1\u6570\u5b57\u603b\u6570num\u3002\n\n**\u6ce8\u610f\uff1a\u7b54\u6848\u4e2d\u4e0d\u80fd\u6709\u524d\u5bfc\u96f6\uff0c\u6240\u4ee5\u8981\u628a1~n-1\u4f4d\u7684\u6570\u5b57\u7279\u5224\u6389\uff0c\u7edf\u8ba1\u65f6\u4e5f\u8981\u7279\u5224\u3002**\n\n\u4e4b\u540e\u6709\u4e2a\u5c0fTrick\uff1a\u7531\u4e8e\u6570\u5b57\u4f4d\u6570\u592a\u5927\uff0c\u6211\u4eec\u65e0\u6cd5\u76f4\u63a5\u5dee\u5206dp(r)-dp(l-1)\u3002\n\n~~\u5f53\u7136\u53ef\u4ee5\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u9ad8\u7cbe\u5ea6\u51cf1\u3002~~\n\n\u6211\u8fd9\u91cc\u5c06l\u7279\u5224\u6389\uff0c\u66f4\u4e3a\u7b80\u4fbf\u3002\n---\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=1009,mod=1e9+7;\n#define out puts(\"Debug\")\n#define int long long\nint f[N][19][19],ans;//f\u6570\u7ec4\u8bb0\u5f55\u975e\u840c\u6570\nchar l[N],r[N];\n\nvoid Init()\n{\n//\tfor(int i=0;i<=9;i++) f[1][0][i]=i;\n//\tfor(int i=0;i<=9;i++)\n//\t\tfor(int j=0;j<=9;j++)\n//\t\t\tif(i==j) f[2][i][j]=0;\n//\t\t\telse f[2][i][j]=1;\n\tfor(int i=2;i<=1000;i++)\n\t{\n\t\tfor(int j=0;j<=9;j++)\n\t\t\tfor(int k=0;k<=9;k++)\n\t\t\t\tif(j!=k)\n\t\t\t\t{\n\t\t\t\t\tfor(int l=0;l<=9;l++)\t\n\t\t\t\t\t\tif(k!=l&&l!=j) f[i][j][k]+=f[i-1][k][l];\n\t\t\t\t\tif(i==2) f[i][j][k]++;\n\t\t\t\t\tf[i][j][k]%=mod;\n//\t\t\t\t\tcout<<i<<' '<<j<<' '<<k<<endl;\n\t\t\t\t}\n\t}\n}\n\ninline int dp(char s[])\n{\n\tint len=strlen(s);\n\tif(len==1) return 0;\n\n\tbool flag=true;\n\tint res=0,last=-1,lst=-1,n=len,num=0;//last\u662f\u4e0a\u4e00\u4f4d\uff0clst\u662f\u4e0a\u4e24\u4f4d\n\tint nums[N]={0};\n\tmemset(nums,0,sizeof nums); \n\tfor(int i=n;i>=1;i--) nums[i]=s[n-i]-'0',num=(num*10+nums[i])%mod;\n \tnum++;\n \t\n \tres+=10;\n\tfor(int i=2;i<n;i++)\n\t\tfor(int j=1;j<=9;j++)//\u6392\u9664\u524d\u5bfc\u96f6\u7684\u60c5\u51b5\n\t\t\tfor(int k=0;k<=9;k++)\n\t\t\t\tres=(res+f[i][j][k])%mod; \n\n\tfor(int i=n;i>=2;i--)\n\t{\n\t\tint x=nums[i];\n\t\tfor(int j=0;j<x;j++) if(!(i==n&&!j))//\u4e0d\u80fd\u6709\u524d\u5bfc\u96f6\n\t\t\tfor(int k=0;k<=9;k++)\n\t\t\t\tif(last!=j&&lst!=j&&j!=k&&last!=k) res=(res+f[i][j][k])%mod;\n\t\tif(last==x||lst==x) \n\t\t{\n\t\t\tflag=false;\n\t\t\tbreak;\n\t\t}\n\t\tlst=last,last=x;\n\t}\n\tif(flag)\n\t\tfor(int i=0;i<=nums[1];i++)\n\t\t\tif(i!=lst&&i!=last) res=(res+1)%mod;\n\treturn (num-res)%mod;\n}\n\nsigned main()\n{\n\tcin>>l>>r;\n//\tputs(\"Debug\");\n\tInit();\n\tans=(dp(r)-dp(l)+mod)%mod;\n\tint t=strlen(l);\n\tfor(int i=1;i<t;i++)\n\t\tif(l[i]==l[i-1]||(l[i]==l[i-2]&&i>1))\n\t\t{\n\t\t\tans++,ans%=mod;\n\t\t\tbreak;\n\t\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n\n```\n~~\u9012\u63a8\u5e38\u6570\u5c0f\uff0c\u4fbf\u4e8e\u7406\u89e3\uff0c\u5199\u4ec0\u4e48\u8bb0\u641c\u554aqwq\u3002~~",
        "postTime": 1594434802,
        "uid": 237308,
        "name": "AlanSP",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3413 \u3010SAC#1 - \u840c\u6570\u3011"
    },
    {
        "content": "### \u6570\u4f4ddp\u8f83\u6a21\u677f\u53d8\u5316\u7684\u9898\u5427\uff0c\u8fd8\u662f\u6c34(\u4f46\uff1a\u4e0d\u80fd\u5077\u61d2\u7701\u53d8\u91cf\uff0c\u4e0d\u7136GG\uff09\n\n**\u6b63\u6587\uff1a**\n\n1. \u96be\u70b9\uff1a\u5982\u4f55\u8fa8\u8bc6\u56de\u6587\u4e32\u4ee5\u53ca\u6570\u636e\u5927\uff08\u6570\u636e\u5927\uff0c\u8f6c\u5b57\u7b26\u4e32\u8bfb\u5165\uff09\uff1a\n\t```cpp\n\t\u4e24\u79cd\u7c7b\u578b\uff1a\n    1.\u5947\u6570\u4e32\uff1a\u5f62\u5982\uff1a1 0 1\n    2.\u5076\u6570\u4e32\uff1a\u5f62\u5982\uff1a1 1\n    \n    \u7531\u4ee5\u4e0a\u4e24\u79cd\u57fa\u672c\u4e32\uff0c\u6613\u60f3\u5230\uff1a\u8f83\u957f\u7684\u56de\u6587\u4e32\uff0c\u5fc5\u5b9a\u5305\u542b\u8f83\u77ed\u56de\u6587\u5b50\u4e32\n    \u6240\u4ee5\uff1a\"1 0 1\"\u8ba4\u4e3a\"2 1 0 1 2\"\uff0c\u00b7\u00b7\u00b7\u7684\u5b50\u4e32,\"1 1\"\u540c\u7406\n    \n    \u5f97\u51fa\u7ed3\u8bba\uff1a\u82e5\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b58\u5728\u56de\u6587\u5b50\u4e32\uff0c\u5fc5\u7136\uff1apos==pos-1||pos==pos-2\n\t```\n2. \u6570\u4f4ddp\u57fa\u672c\u70b9\uff1a\u524d\u7f00\u548c\n\t```cpp\n    \u90a3\u4e48\u5c31\u4f1a\u6d89\u53ca\u5230\uff1ar-(l-1)\uff1b\n    \u63d0\u4f9bl-1\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u5982\u4e0b\uff1a\n    char l[1005];\n    ll a=work(l,1)\uff1b\n    \n\tll work(char s[],ll op){\n\t\tll len=strlen(s+1),tot=1;\n\t\tfor(ll i=1;i<=len;++i) \n\t\t\tnum[len-i+1]=s[i]-'0';\n\t\twhile(num[tot]-op<0){\n\t\t\tif(tot==len) break;\n\t\t\tnum[tot]=9;\n\t\t\ttot++;\n\t\t}\n\t\tnum[tot]-=op;\n\t}\n    ```\n3. \u6570\u4f4ddp\u8bb0\u5fc6\u5316\u641c\u7d22\u53d8\u91cf\uff1a\u9664\u57fa\u672c\u53d8\u91cf\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u7275\u626f\u53ef\u80fd\u6d89\u53ca\u5230\u7684\uff0c\u6700\u597d\u90fd\u52a0\u4e0a\n\n4. \u6ce8\u610f\u641c\u7d22\u65f6\uff1a\u8d1f\u53d8\u91cf\uff0c\u524d\u5bfc\u96f6\u5c01\u6740\n\n5. \u53d6\u4f59\u5c31\u4e0d\u8bf4\u5566\uff0cqwq\n\n**Code:**\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst ll mod=1e9+7;\nll dp[1005][20][20][2],num[1005];\nchar l[1005],r[1005];\n\nll dfs(ll pos,bool limit,bool head,ll last1,ll last2,ll flag){\n\tll ans=0;\n\tif(!pos) return flag;\n\tif(!limit&&!head&&last1!=-1&&last2!=-1&&dp[pos][last1][last2][flag]!=-1) return dp[pos][last1][last2][flag];\n\tll up=limit ? num[pos] : 9;\n\tfor(ll i=0;i<=up;++i)\n\t\t(ans+=dfs(pos-1,limit&&i==up,head&&!i,(head&&!i) ? -1:i,head==1 ? -1:last1,flag||(!head&&(i==last1))||(!head&&(i==last2)))%mod)%=mod;\n\tif(!limit&&!head&&last1!=-1&&last2!=-1) return dp[pos][last1][last2][flag]=ans;\n\treturn ans;\n}//\u5efa\u8bae\u4ee5\u4e0a\uff0c\u683c\u5f0f\u5316\u4ee3\u7801\u540e\uff0c\u4e00\u4e2a\u4e2a\u53d8\u91cf\u5206\u89e3\u770b\uff08\u4e5f\u8bb8\u53ef\u8bfb\u6027\u592a\u5dee\uff09\n\nll work(char s[],ll op){\n\tll len=strlen(s+1),tot=1;\n\tmemset(dp,-1,sizeof(dp));\n\tfor(ll i=1;i<=len;++i) \n\t\tnum[len-i+1]=s[i]-'0';\n\twhile(num[tot]-op<0){\n\t\tif(tot==len) break;\n\t\tnum[tot]=9;\n\t\ttot++;\n\t}\n\tnum[tot]-=op;\n\treturn dfs(len,1,1,-1,-1,0);\n}\n\nint main(){\n\tscanf(\"%s%s\",l+1,r+1);\n\tll a=work(l,1),b=work(r,0);\n\tprintf(\"%lld\",(b-a+mod)%mod);\n}\n```\n**PS:\u4ee3\u7801\u7684\u4e25\u8c28\u6027\u548c\u51c6\u786e\u6027\u5f88\u91cd\u8981**\n\nrp++",
        "postTime": 1566396673,
        "uid": 109381,
        "name": "Mosher",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3413 \u3010SAC#1 - \u840c\u6570\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u6240\u8981\u6c42\u7684\u533a\u95f4\u76f8\u5f53\u7684\u5927\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u59a8\u4ece\u5b83\u7684\u6570\u4f4d\u5165\u624b\u8fdb\u884c$dp$\u3002\n\n\u6839\u636e\u840c\u6570\u7684\u6027\u8d28\uff0c\u5018\u82e5\u8981\u6ee1\u8db3\u4e00\u4e2a\u957f\u5ea6\u4e3a$len$\u7684\u5b57\u7b26\u4e32\u662f\u840c\u6570\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e32\u53ea\u9700\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u957f\u5ea6\u4e3a$2$\uff08\u5bf9\u5e94\u5076\u56de\u6587\uff09\uff0c\u6216\u8005\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u957f\u5ea6\u4e3a$3$\uff08\u5bf9\u5e94\u5947\u56de\u6587\uff09\u7684\u56de\u6587\u4e32\u5373\u53ef\u3002\u81f3\u6b64\uff0c\u6211\u4eec\u5c06\u9898\u76ee\u8fdb\u884c\u4e86\u8f6c\u5316\uff0c\u5373\uff1a\u5982\u679c\u4e00\u4e2a\u4e32\u5305\u542b\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a$2$\u6216\u8005\u957f\u5ea6\u4e3a$3$\u7684\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5c31\u662f\u840c\u6570\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u8ba8\u8bba\u4e00\u4e2a\u4e32\u7684\u5f53\u524d\u4f4d$pos$\uff0c\u5b83\u7684\u524d\u4e00\u4f4d$pre1$\uff0c\u4ee5\u53ca\u5b83\u7684\u524d\u4e24\u4f4d$pre2$\u5373\u53ef\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a$dp[pos][pre1][pre2]$\u7684$dp$\u6570\u7ec4\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u8fd9\u6837\u53bb\u8bbe\u8ba1\u72b6\u6001\u7684\u8bdd\uff0c\u90e8\u5206\u5408\u6cd5\u4ee5\u53ca\u975e\u6cd5\u72b6\u6001\u4f1a\u53d1\u751f\u91cd\u53e0\uff1a\u5982\u679c\u5f53\u524d\u7684\u679a\u4e3e\u5230\u7684\u72b6\u6001\u662f$dp[1][2][3]$\u7684\u72b6\u6001\uff08\u5373\u4ee3\u8868\u679a\u4e3e\u5230\u7684\u5b50\u4e32\u7684\u72b6\u6001\u4f4d$123$\uff09\u3002\u6b64\u65f6\u7684\u8fd9\u4e2a\u72b6\u6001\u4e2d\uff0c\u5408\u6cd5\u72b6\u6001$33123$\u4ee5\u53ca\u975e\u6cd5\u72b6\u6001$45123$\u5c06\u4f1a\u53d1\u751f\u91cd\u53e0\u3002\u56e0\u6b64\u4e3a\u4e86\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u8003\u8651\u518d\u5f00\u591a\u4e00\u7ef4\u5224\u65ad\u662f\u5426\u5728\u4e4b\u524d\u662f\u5426\u5df2\u7ecf\u5408\u6cd5\u5b50\u4e32\u3002\u6545\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1$dp[pos][pre1][pre2][exist]$\u4ee3\u8868\uff0c\u5f53\u524d\u4f4d\u7f6e\u4f4d$pos$\uff0c\u524d\u4e00\u4f4d\u4e3a$pre1$\uff0c\u524d\u4e24\u4f4d\u4e3a$pre2$\uff0c\u4e14\u4e4b\u524d\u5b58\u5728/\u4e0d\u5b58\u5728\u5b50\u4e32\u7684\u65b9\u6848\u6570\u3002\n\n\u800c\u6211\u4eec\u53d1\u73b0\uff0c\u5f53\u8bbe\u8ba1\u4e86$exist$\u8fd9\u4e2a\u72b6\u6001\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u8bb0\u5f55\u524d\u4e24\u4f4d$pre2$\u7684\u4fe1\u606f\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u5f00\u4e00\u4e2a\u4e09\u7ef4\u7684$dp$\u6570\u7ec4$dp[pos][pre1][exist]$\u5373\u53ef\u3002\n\n\u800c\u628a\u72b6\u6001\u8bbe\u8ba1\u597d\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ea\u9700\u8981\u76f4\u63a5\u5957\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u6570\u4f4ddp\u7684\u677f\u5b50\u5c31\u53ef\u4ee5\u5f88\u7b80\u5355\u7684\u89e3\u51b3\u4e86\u3002\n\nCode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 1005\nusing namespace std;\ntypedef long long ll;\nll dp[maxn][15][2];\nchar L[maxn],R[maxn];\nint bit[maxn],len;\nconst int mod=1e9+7;\nll dfs(int pos,int pre1,int pre2,int exist,int lead,int limit){\n    if(pos==0) return exist;\n    if(pre1!=-1&&pre2!=-1&&!lead&&!limit&&dp[pos][pre1][exist]!=-1)\n        return dp[pos][pre1][exist];\n    int up=limit?bit[pos]:9;\n    ll res=0;\n    for(int i=0;i<=up;i++){\n        int p=(lead&&i==0)?-1:i;\n        res+=dfs(pos-1,p,pre1,exist|(p!=-1 && (p==pre1||p==pre2)),p==-1,limit&&(p==up));\n        res%=mod;\n    }\n    if(pre1!=-1&&pre2!=-1&&!lead&&!limit) dp[pos][pre1][exist]=res;\n    return res;\n}\nll solve(char *str,bool sub){\n    len=strlen(str);\n    for(int i=1;i<=len;i++)\n        bit[len-i+1]=str[i-1]-'0';\n    if(sub){\n        int now=1;\n        while(bit[now]==0) bit[now++]=9;\n        bit[now]--;\n        while(!bit[len] && len) len--;\n    }\n    memset(dp,-1,sizeof(dp));\n    return dfs(len,-1,-1,0,1,1);\n}\nint main()\n{\n    scanf(\"%s%s\",L,R);\n    printf(\"%lld\",((solve(R,0)-solve(L,1))%mod+mod)%mod);\n    return 0;\n}\n```",
        "postTime": 1564715971,
        "uid": 83908,
        "name": "ChenJr",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3413 \u3010SAC#1 - \u840c\u6570\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u663e\u7136\u5728\u4e00\u4e2a\u56de\u6587\u4e32\u9996\u5c3e\u5404\u6dfb\u52a0\u4e00\u4e2a\u76f8\u540c\u5b57\u7b26\uff0c\u7ed3\u679c\u4ecd\u662f\u56de\u6587\u4e32\u3002  \n\u6240\u4ee5\u8fd9\u9898\u9700\u8981\u5224\u65ad\u7684\u5c31\u53ea\u6709\u4e24\u79cd\u5b50\u4e32 $\\overline{aa},\\overline{aba}$\u3002  \n\u5176\u4ed6\u60c5\u51b5\u90fd\u80fd\u8f6c\u5316\u6210\u8fd9\u4fe9\u3002\n\n\u7136\u540e\u5c31\u662f\u6570\u4f4d DP\u3002  \n\u6211\u7684\u72b6\u6001\u4e5f\u5f88\u590d\u6742\u554a\u2026\u2026  \n\u8bb0\u641c\u7684\u8bdd\uff0c\u8bb0\u5f55\u4f4d\u6570\u3001\u4e0a\u4e00\u4f4d\u3001\u4e0a\u4e0a\u4f4d\u3001\u524d\u9762\u662f\u5426\u6ee1\u8db3\u840c\u6570\u7684\u8981\u6c42\u3001\u4e0a\u4e00\u4f4d\u662f\u5426\u4e3a\u524d\u5bfc\u96f6\u3001\u4e0a\u4e0a\u4f4d\u662f\u5426\u4e3a\u524d\u5bfc\u96f6\u3001\u662f\u5426\u8d34\u7740\u8fb9\u754c\u3002\n\n\u4ee4 $l - 1$ \u7684\u8fc7\u7a0b\u6709\u70b9\u9ebb\u70e6\uff0c\u53ef\u4ee5\u6309\u7167\u9ad8\u7cbe\u7684\u5957\u8def\u5199\u3002  \n\u4e0d\u8fc7\u76f4\u63a5\u8dd1 $r - l$ \u7136\u540e\u7279\u5224 $l$ \u8c8c\u4f3c\u4e5f\u884c\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nconst int LEN = 1e3;\nconst long long mod = 1e9 + 7;\nchar l[LEN + 5],r[LEN + 5];\nint d[LEN + 5],tot;\nlong long f[LEN + 5][10][10][2][2][2];\nlong long ans;\nlong long dfs(int x,int num,int pre,int lovely,int lead,int prelead,int top)\n{\n\tif(!x)\n\t\treturn lovely;\n\tif(!top && ~f[x][num][pre][lovely][lead][prelead])\n\t\treturn f[x][num][pre][lovely][lead][prelead];\n\tint bound = top ? d[x] : 9;\n\tlong long ret = 0;\n\tfor(register int i = 0;i <= bound;++i)\n\t\tret = (ret + dfs(x - 1,i,num,lovely || (!lead && i == num) || (!prelead && i == pre),lead && !i,lead,top && i == bound)) % mod;\n\tif(!top)\n\t\tf[x][num][pre][lovely][lead][prelead] = ret;\n\treturn ret;\n}\nint main()\n{\n\tmemset(f,-1,sizeof f);\n\tscanf(\"%s %s\",l,r);\n\tfor(register int i = strlen(r) - 1;~i;--i)\n\t\td[++tot] = r[i] ^ '0';\n\tans = dfs(tot,0,0,0,1,1,1);\n\ttot = 0;\n\tfor(register int i = strlen(l) - 1;~i;--i)\n\t\td[++tot] = l[i] ^ '0';\n\t--d[1];\n\tfor(register int i = 1;i <= tot;++i)\n\t\tif(d[i] < 0)\n\t\t\td[i] += 10,--d[i + 1];\n\tans -= dfs(tot,0,0,0,1,1,1);\n\tprintf(\"%lld\\n\",(ans + mod) % mod);\n}\n```",
        "postTime": 1545443725,
        "uid": 75840,
        "name": "deserter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3413 \u3010SAC#1 - \u840c\u6570\u3011"
    },
    {
        "content": "# P3413 \u9898\u89e3\n\u6570\u4f4d$dp$\u88f8\u9898\u554a\n## \u9898\u610f\n\u6c42$[l,r]$\u5185\u7684\u840c\u6570\u6709\u591a\u5c11\u4e2a\u3002\n## \u89e3\u7b54\n\u867d\u7136\u662f\u88f8\u7684\u6570\u4f4d$dp$\uff0c\u4f46\u6211\u8fd8\u662f\u8981\u6765\u8bb2\u4e00\u4e0b\u66b4\u529b\u3002\n\n\u66b4\u529b\u505a\u6cd5\u5f88\u7b80\u5355\uff0c\u5c31\u662f$[l,r]$\u4e4b\u95f4\u679a\u4e3e\u4e00\u4e0b\uff0c\u679a\u4e3e\u5230\u4e00\u4e2a\u840c\u7684\u6570\u5c31$+1$\u5c31\u884c\u4e86\u3002  \n\u653e\u4e00\u4e2a\u4f2a\u4ee3\u7801\u5427\n```cpp\nfor i=l to r\n\tif meng(i) cnt++\ncout<<cnt\n```\n~~\u66b4\u529b\u8bb2\u5b8c\u4e86~~\u771f\u7684\u8bb2\u5b8c\u4e86\n\n\u63a5\u4e0b\u6765\u5c31\u662f**\u6570\u4f4d**$dp$\n## \u6570\u4f4d$dp$\n\u8fd9\u662f\u4e2a\u4ec0\u4e48\u5462\uff1f\u8bfb\u5b83\u7684\u5b57\u9762\u610f\u601d\u5c31\u77e5\u9053\u4e86\uff0c\u6570\u4f4d$dp$\u5c31\u662f\u901a\u8fc7\u679a\u4e3e\u6570\u4f4d\u7684\u67d0\u4e9b\u7279\u6027\u89e3\u51b3\u95ee\u9898\u3002\u901a\u5e38\uff0c\u6570\u4f4d$dp$\u7684\u590d\u6742\u5ea6\u662f$\\Theta(\\log_{10}n)$\u7684\uff0c\u6240\u4ee5\u5176\u5b9e\u6570\u4f4d$dp$\u53ea\u8981\u5199\u5bf9\uff0c\u51e0\u4e4e\u6ca1\u6cd5\u5361\u3002  \n\n\u90a3\u4e48\u6211\u4eec\u4ece\u6700\u7b80\u5355\u7684\u4e00\u9053\u4f8b\u9898\u5f00\u59cb\uff1a\u7edf\u8ba1$[l,r]$\u533a\u95f4\u5185\u51fa\u73b0\u4e86\u591a\u5c11\u4e2a**\u5305\u542b$1$\u7684\u6570**\u3002\n\n\u8fd9\u5f53\u7136\u53ef\u4ee5\u7528\u5c0f\u5965\u65b9\u6cd5\u505a\uff0c\u5728\u6b64\u4e0d\u8d58\u8ff0\u4e86\u3002  \n\u6211\u4eec\u4ece\u9884\u8ba1\u7b97\u8bb2\u8d77  \n\u8bbe$f_i=1$\u5230$i$\u4f4d\u6570\u4e2d\u5305\u542b$1$\u7684\u6570\u7684\u4e2a\u6570\u3002  \n\u8bbe$f_{ij}=1$\u5230$i$\u4f4d\u6570\uff0c**\u9996\u4f4d\u4e3a**$j$\u7684\u6570\u4e2d\u5305\u542b$1$\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$f_i=9 \\times f_{i-1}+10^{i-1}$$\n$$f_{ij}=\\begin{cases}10^{i-1}&\\text{have1}\\\\\\sum\\limits_{k=1}^9f_{ik}&\\text{else}\\end{cases}$$  \n\u7136\u540e\u6839\u636e\u8fd9\u4e2a**\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u679a\u4e3e\u9996\u4f4d\u5e76\u7edf\u8ba1**\u5c31\u80fd\u89e3\u51b3\u8fd9\u4e2a\u4f8b\u9898\u4e86\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6211\u4eec\u53ef\u4ee5\u91c7\u7528**\u8bb0\u5fc6\u5316\u641c\u7d22**\u3002  \n\u53c2\u8003\u4f2a\u4ee3\u7801\uff1a\n```cpp\nll dfs(ll pos,bool flag){//pos:\u5f53\u524d\u8fd9\u4e00\u4f4d,flag:pos\u4e4b\u524d\u7684\u4f4d\u4e2d\u662f\u5426\u67091\n\t\u5df2\u7ecf\u904d\u5386\u5b8c\u6240\u6709\u7684\u6570\u4f4d,\u76f4\u63a5\u8fd4\u56de\u8fd9\u4e2a\u6570\u662f\u5426\u67091\n\t\u7b54\u6848\u521d\u59cb\u5316\u4e3a0\n\t\u679a\u4e3e\u9996\u4f4di\n\t\u5982\u679c\u66f4\u9ad8\u4f4d\u6ca1\u67091,\u90a3\u4e48\u53ef\u4ee5\u653e\u5fc3\u7684\u52a0\n\t\u5982\u679c\u67091,\u90a3\u4e48\u6240\u6709\u7684\u8fd9\u4e9b\u60c5\u51b5\u90fd\u5305\u542b1,\u76f4\u63a5\u52a0\u4e0a10\u7684pos\u6b21\u65b9\n\t\u5f53\u524d\u7b54\u6848+(pos-1\u4f4d\u6570,\u6bd4pos-1\u9ad8\u7684\u4f4d\u6570\u4e2d\u6709\u6ca1\u67091)\u7684\u7b54\u6848\n}\n```\n\n***\n###### $\\tiny{\\color{grey}\u534e\u4e3d\u7684\u5206\u5272\u7ebf}$\n\n\u597d\u4e86\u6211\u4eec\u56de\u5f52\u539f\u9898\u3002  \n\u6839\u636e\u6211\u4eec\u6570\u4f4d$dp$\u7684\u7ecf\u9a8c\uff0c\u6211\u4eec\u80af\u5b9a\u662f\u8981\u679a\u4e3e\u6570\u4f4d\u7684\uff0c\u90a3\u4e48\u8fd9\u6837\u4e00\u6765\u5c31\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u4f8b\u5982\u5224\u65ad\u4e00\u4e2a```12345678987654321```\u662f\u5426\u56de\u6587\uff0c\u6211\u4eec\u96be\u9053\u8981\u8bb0\u5f55\u90a3\u4e48\u957f\u4e00\u4e2a\u72b6\u6001\u5417\uff01\uff1f\n![](https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=159178527,2126930547&fm=26&gp=0.jpg)  \n~~\u4f60\u770b\u4f17\u591a\u5de8\u4f6c\u7684\u9898\u89e3\u4ee3\u7801\u54ea\u4e2a\u6709\u90a3\u4e48\u957f~~  \n\u90a3\u4e48\uff0c\u6211\u4eec\u53d1\u73b0```12345678987654321```\u5176\u5b9e\u6838\u5fc3\u5728\u4e8e\u6709\u4e00\u4e2a**\u56de\u6587\u5b50\u4e32**```898```\uff0c\u6240\u4ee5\u53ea\u8981```898```\u56de\u6587\uff0c\u5b83\u5c31\u56de\u6587\u4e86\u3002  \n\u6240\u4ee5**\u4efb\u610f\u56de\u6587\u4e32\u4e00\u5b9a\u6709\u957f\u5ea6\u4e3a$2$\u6216$3$\u7684\u56de\u6587\u5b50\u4e32**\uff08\u8bc1\u660e\u4e5f\u592a\u7b80\u5355\u4e86\uff09  \n\n\u56e0\u6b64\u6211\u4eec\u53ea\u8981\u8003\u8651\u4e24\u4e2a\u6570\u7684\u60c5\u51b5\uff1a\n1. \u76f8\u90bb(xx)\n2. \u9694\u4e00\u4e2a\u6570(xnx)\n\n\u4f60\u4ee5\u4e3a\u8fd9\u6837\u5c31\u7ed3\u675f\u4e86\uff1f$\\texttt{\\Huge{\\color{red}No}}$\uff01  \n\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e2a```000123```\u5177\u6709\u524d\u5bfc$0$\u56de\u6587\u7684\u6570\uff0c\u5982\u679c\u53ea\u7528\u524d\u9762\u7684\u7b97\u6cd5\uff0c\u8fd9\u4e2a\u6570\u4e5f\u4f1a\u88ab\u5224\u65ad\u4e3a\u840c\u6570\uff0c\u800c\u5b9e\u9645\u4e0a\u4ed6\u5e76\u4e0d\u662f\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981**\u5224\u65ad\u524d\u5bfc**$0$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5feb\u4e50\u7684\u5199$dfs$\u4e86\uff1a\n```cpp\nll dfs(ll l, ll pp, ll pp2, bool zr1, bool zr2, bool lmt)\n{\n\tedge(l, pp, pp2, zr1, zr2, lmt);//\u4e00\u4e9b\u60c5\u51b5\u7684\u7279\u6b8a\u5904\u7406\n\tll sum=0;\n\tif (lmt)\n\t{//\u6709\u9650\u5236\n\t\tfor(ll i=0; i<=s[l]; i++)\n\t\t\tif((zr1 || i!=pp) && (zr2 || i!=pp2))\n\t\t\t\tsum+=dfs(l+1, i, pp, zr1 && (i==0), zr1, lmt && i==s[l]);\n\t\tf[l][pp][pp2][zr1][zr2][lmt]=sum;\n\t\treturn sum;\n\t}\n\telse\n\t{//\u65e0\u9650\u5236\n\t\tfor(ll i=0; i<=9; i++)\n\t\t\tif((zr1 || i!=pp) && (zr2 || i!=pp2))\n\t\t\t\tsum+=dfs(l+1, i, pp, zr1 && (i==0), zr1, 0);\n\t\tf[l][pp][pp2][zr1][zr2][lmt]=sum;\n\t\treturn sum;\n\t}\n}\n```\n\u90a3\u4e2a\u5565\u5173\u4e8e$r<=10^{1000}$\u7684\u4f60\u7528\u5b57\u7b26\u4e32\u5904\u7406\u4e00\u4e0b\u4e0d\u5c31\u884c\u4e86\u5417\u3002\n\n\u5b8c\u7ed3\u6492\u82b1~\u540c\u65f6\u6c42\u8d5e$qwq$",
        "postTime": 1594737327,
        "uid": 291706,
        "name": "GspTools",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3413 \u3010SAC#1 - \u840c\u6570\u3011"
    },
    {
        "content": "\u663e\u7136\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u957f\u5ea6\u4e3a $2$ \u6216 $3$ \u7684\u56de\u6587\u4e32\n\n\u4e8e\u662f\u6211\u4eec\u8bbe\u72b6\u6001\u4e3a $d(pos,llas,las,lim,lead)$\n\n\u5176\u4e2d $pos$ \u8868\u793a\u8fd8\u5269\u4e0b\u51e0\u4f4d\uff0c$llas$ \u8868\u793a\u524d\u4e24\u4f4d\u7684\u6570\uff0c$las$ \u8868\u793a\u524d\u4e00\u4f4d\u7684\u6570\uff0c$lim$ \u8868\u793a\u662f\u5426\u53d7\u9650\u5236\uff0c$lead$ \u8868\u793a\u662f\u5426\u6709\u524d\u5bfc $0$\uff08$llas=-1$ \u548c $las=-1$ \u8868\u793a\u4e0d\u5b58\u5728\u8fd9\u4e2a\u4f4d\u7f6e\uff0c$lim=1$ \u548c $lead=1$ \u8868\u793a\u53d7\u9650\u548c\u6709\u524d\u5bfc $0$\uff09\n\n\u5728\u8f6c\u79fb\u7684\u65f6\u5019\u5982\u679c\u5f53\u524d\u7684\u4f4d\u7f6e\u548c $llas$ \u6216 $las$ \u76f8\u7b49\u5c31\u4e0d\u9700\u8981\u518d\u8003\u8651\u540e\u9762\u7684\u4f4d\u7f6e\u4e86\uff0c\u8fd9\u6837\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $10^{pos-1}$\uff0c\u4f46\u5982\u679c $lim=1$ \u4e14 $i=num_{pos}$ \u5219\u540e\u9762\u4e0d\u80fd\u53d6\u904d\u6240\u6709\u6570\u5b57\uff0c\u6240\u4ee5\u8d21\u732e\u4e3a $suc_{pos-1}+1$\uff08$suc_{i}$ \u8868\u793a\u4ece $1$ \u5230 $i$ \u4f4d\u7684\u540e\u7f00\uff09\n\n\u5269\u4e0b\u5c31\u662f\u4e00\u4e2a\u8bb0\u5fc6\u5316\u641c\u7d22\u4e86\uff0c\u5177\u4f53\u7ec6\u8282\u770b\u4ee3\u7801\u5427\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\n#define LL long long\n\nconst LL mod=1000000007,maxsize=1000;\nLL len,num[1010],d[15][15][1010],vis[15][15][1010],ans,pw[1010],suc[1010];\nchar s[1010];\n\ninline LL read(){\n    LL num=0,k=1; char c=getchar();\n    while(c>'9' || c<'0') k=(c=='-')?0:k,c=getchar();\n    while(c>='0' && c<='9') num=num*10+c-'0',c=getchar();\n    return k?num:-num;\n}\n\nLL dp(LL pos,LL llas,LL las,LL lim,LL lead){\n    if(!pos) return 0;\n    if(pos==1) return (las!=-1 && (!lim || num[1]>=las))+(llas!=-1 && (!lim || num[1]>=llas));\n    if(llas>=0 && las>=0 && !lim && !lead && vis[llas][las][pos] ) return d[llas][las][pos];\n    LL cur=0;\n    for(LL i=0;i<=(lim?num[pos]:9);i++){\n        if(!lead && (i==las || i==llas)) cur=(cur+((lim && i==num[pos])?suc[pos-1]+1:pw[pos-1]))%mod;\n        else cur=(cur+dp(pos-1,las,((lead && !i)?-1:i),(lim && i==num[pos]),(lead && !i)))%mod;\n    }\n    if(!lim && !lead && llas>=0 && las>=0) d[llas][las][pos]=cur,vis[llas][las][pos]=1;\n    return cur;\n}\n\nint main(){\n    pw[0]=1;\n    for(LL i=1;i<=maxsize;i++) pw[i]=pw[i-1]*10%mod;\n    scanf(\"%s\",s+1); len=strlen(s+1);\n    for(LL i=len;i>=1;i--) num[i]=s[len-i+1]-'0';\n    for(LL i=1;i<=len;i++) if(num[i]) {num[i]--; break;} else num[i]=9;\n    if(!num[len]) len--;\n    for(LL i=1;i<=len;i++) suc[i]=(suc[i-1]+num[i]*pw[i-1])%mod;\n    ans-=dp(len,-1,-1,1,1);\n    scanf(\"%s\",s+1); len=strlen(s+1);\n    for(LL i=len;i>=1;i--) num[i]=s[len-i+1]-'0';\n    for(LL i=1;i<=len;i++) suc[i]=(suc[i-1]+num[i]*pw[i-1])%mod;\n    ans+=dp(len,-1,-1,1,1);\n    printf(\"%lld\",(ans%mod+mod)%mod);\n    return 0;\n}\n\n```",
        "postTime": 1555232566,
        "uid": 100037,
        "name": "kkxhh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3413 \u3010SAC#1 - \u840c\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u521a\u5f00\u59cb\u6b63\u5411\u601d\u7ef4\uff0c\u7136\u540e\u5904\u7406\u91cd\u590d\u7684\u65f6\u5019\u5495\u5495\u4e86\u3002\n\n\u53c2\u8003\u4e86@\u5de8\u578b\u65b9\u5757 \u5927\u4f6c\u7684\u9898\u89e3\u540eAC\u4e86\uff0c\u5728\u8fd9\u91cc\u5c31\u8bf4\u51e0\u4e2a\u6211\u89c9\u5f97\u6bd4\u8f83\u91cd\u8981\u6216\u662f\u5bb9\u6613\u88ab\u5ffd\u7565\u7684\u70b9\uff0c\u7136\u540e\u8865\u5145\u4e00\u4e9b\u8df3\u8fc7\u7684\u8bc1\u660e\u3002\n\n------------\n\n\u8fd9\u9053\u9898\u7684\u72b6\u6001\u53ef\u4ee5\u8bbe\u4e3a$dp[i][j][k]$\uff0c\u610f\u601d\u662f\u957f\u5ea6\u4e3a$i$\uff0c\u7136\u540e\u7b2c$i$\u4f4d\u4e3a$j$\uff0c\u7b2c$i-1$\u4f4d\u4e3a$k$\u7684\u4e0d\u662f\u840c\u6570\u7684\u6570\u91cf\u3002\n\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u4e24\u4f4d\u5462\uff1f\n\n\u8fd9\u662f\u56e0\u4e3a\u6240\u6709\u7684\u56de\u6587\u6570\u90fd\u5fc5\u5b9a\u53ef\u4ee5\u7b80\u5316\u4e3a$aa$\u548c$aba$\u4e2d\u7684\u4e00\u79cd\uff0c\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\nI. \u5bf9\u4e8e\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e3\u7684\u56de\u6587\u6570\uff0c\u663e\u7136\u5373\u4e3a\u4ee5\u4e0a\u4e24\u79cd\u4e2d\u7684\u4e00\u79cd\u3002\uff08\u4e00\u4f4d\u6570\u5ffd\u7565\uff09\n\nII. \u5bf9\u4e8e\u957f\u5ea6\u5927\u4e8e3\u7684\u56de\u6587\u6570\uff0c\u8ba8\u8bba\u5176\u5947\u5076\u6027\u3002\n    i. \u5bf9\u4e8e\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u56de\u6587\u6570\uff0c\u5fc5\u5b9a\u53ef\u4ee5\u8868\u793a\u4e3a\u5f62\u5982$a_1a_2...a_nba_n...a_2a_1$\u7684\u5f62\u5f0f\uff0c\u7531\u4e8e\u5305\u542b$a_nba_n$\u5373\u4e3a$aba$\u5f62\u5f0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u7b80\u5316\u3002\n    ii. \u5bf9\u4e8e\u957f\u5ea6\u4e3a\u5076\u6570\u7684\u56de\u6587\u6570\uff0c\u5fc5\u5b9a\u53ef\u4ee5\u8868\u793a\u4e3a\u5f62\u5982$a_1a_2...a_na_n...a_2a_1$\u7684\u5f62\u5f0f\uff0c\u540c\u4e0a\u53ef\u4ee5\u7b80\u5316\u3002\n    \n\u72b6\u6001\u8f6c\u79fb\u6bd4\u8f83\u6c34\uff0c\u6ca1\u6709\u4ec0\u4e48\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u4e8b\u9879\u3002\n\n\u8fd8\u6709\u4e00\u70b9\u662f\u672c\u9898\u9700\u8981\u5f00long long\uff0c\u6700\u5f00\u59cb\u6211\u770b\u5230\u819c1e9+7\u5c31\u53ea\u7528\u4e86int\uff0c\u4e8e\u662f\u720660\u3002",
        "postTime": 1538572374,
        "uid": 38859,
        "name": "Nero_Claudius",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3413 \u3010SAC#1 - \u840c\u6570\u3011"
    },
    {
        "content": "\u6211\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u5c31\u63a8\u4e86\u8fd9\u4e48\u5927\u7684\u4e00\u4e2a\u72b6\u6001\u3002\u3002\u3002\n\nf[i][j][k][h][c][d][e]\u8868\u793a\u586b\u5230\u7b2ci\u4f4d\uff0c\u7b2ci\u4f4d\u586b\u7684\u662fj\uff0c\u7b2ci-1\u4f4d\u586b\u7684\u662fk\uff0ch\u8868\u793a\u5230\u76ee\u524d\u4e3a\u6b62\u6709\u6ca1\u6709\u8fc7\u4e00\u4e2a\u957f\u5ea6\u81f3\u5c11\u662f2\u7684\u56de\u6587\u4e32\uff0cc\u8868\u793a\u5361\u6ca1\u5361\u4e0a\u754c\uff0cd\u8868\u793a\u5f53\u524d\u4f4d\u662f\u5426\u53ef\u7528\uff08\u5373\u5f53\u524d\u4f4d\u4e0d\u662f\u524d\u5bfc0\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u56de\u6587\u4e32\u7684\u4e00\u90e8\u5206\uff09\uff0ce\u8868\u793a\u4e0a\u4e00\u4f4d\u662f\u5426\u53ef\u7528\n\n\u90a3\u4e48\u6211\u4eec\u679a\u4e3e\u4e0b\u4e00\u4f4d\u586b\u7684\u6570x\uff0c\u5c31\u53ef\u4ee5\u8f6c\u79fb\u5230\n\nf[i+1][x][j][h || (d && x == j) || (e && x == k)][c && x == bit[i + 1]][d || x != 0][d]\n\n\u4e5f\u5c31\u662f\u8bf4\u5728\u5224\u65ad\u56de\u6587\u7684\u65f6\u5019\u8981\u8003\u8651\u4e00\u4e0b\u8fd9\u4e00\u4f4d\u6570\u5b57\u548c\u4e0a\u4e00\u4f4d\u6570\u5b57\u662f\u5426\u53ef\u7528\n\n\u8fd9\u6837\u7684\u8bdd\u5176\u5b9e\u4ee3\u7801\u8fd8\u662f\u975e\u5e38\u597d\u5199\u7684\u3002\n\n```cpp\n#include <cctype>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n#include <cstring>\n\n#ifdef WIN32\n#define LLIO \"%I64d\"\n#else\n#define LLIO \"%lld\"\n#endif\t// WIN32 long long\n#define rep(I, A, B) for (int I = (A); I <= (B); ++I)\n#define rrep(I, A, B) for (int I = (A); I >= (B); --I)\n#define erep(I, X) for (int I = head[X]; I; I = next[I])\n\nconst int maxn = 1207;\nconst int mod = 1e9 + 7;\nlong long f[maxn][10][10][2][2][2][2];\nint a[maxn], b[maxn];\n\ninline long long solve(int *bit, int n) {\n    rep(i, 1, n) rep(j, 0, 9) rep(k, 0, 9) rep(h, 0, 1) rep(c, 0, 1) rep(d, 0, 1) rep(e, 0, 1) f[i][j][k][h][c][d][e] = 0;\n    rep(i, 0, bit[1]) f[1][i][0][0][i == bit[1]][i != 0][0] = 1;\n    rep(i, 1, n - 1) rep(j, 0, 9) rep(k, 0, 9) rep(h, 0, 1) rep(c, 0, 1) rep(d, 0, 1) rep(e, 0, 1) {\n        long long res = f[i][j][k][h][c][d][e];\n        if (!res) continue;\n        rep(x, 0, (c ? bit[i + 1] : 9))\n            (f[i + 1][x][j][h || (d && x == j) || (e && x == k)][c && x == bit[i + 1]][d || x != 0][d] += res) %= mod;\n    }\n    long long ans = 0;\n    rep(i, 0, 9) rep(j, 0, 9) rep(c, 0, 1)\n        ans = (ans + f[n][i][j][1][c][1][1]) % mod;\n    return ans;\n}\n\nint main() {\n    char s[maxn] = {0};\n    scanf(\"%s\", s + 1);\n    int len1 = strlen(s + 1);\n    rep(i, 1, len1) a[i] = s[i] - 48;\n    std::reverse(a + 1, a + len1 + 1);\n    --a[1];\n    rep(i, 1, len1 - 1) {\n        if (a[i] < 0) {\n            a[i] += 10;\n            --a[i + 1];\n        } else break;\n    }\n    if (!a[len1]) --len1;\n    if (!len1) len1 = 1;\n    std::reverse(a + 1, a + len1 + 1);\n    scanf(\"%s\", s + 1);\n    int len2 = strlen(s + 1);\n    rep(i, 1, len2) b[i] = s[i] - 48;\n    printf(LLIO \"\\n\", ((solve(b, len2) - solve(a, len1)) % mod + mod) % mod);\n    return 0;\n}\n```",
        "postTime": 1535427191,
        "uid": 72071,
        "name": "GKxx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3413 \u3010SAC#1 - \u840c\u6570\u3011"
    },
    {
        "content": "\n# $Description$\n\n[\u9898\u9762](https://www.luogu.org/problem/P3413)\n\n\u6c42$[l,r]$\u6709\u591a\u5c11\u4e2a\u6570\u6ee1\u8db3\u6570\u4f4d\u4e2d\u51fa\u73b0\u957f\u5ea6$>=2$\u7684\u56de\u6587\u6570\uff0c\u6bd4\u5982$121\u3001110$\u90fd\u6ee1\u8db3\n$l,r<=10^{1000}$\n\n# $Solution$\n\n\u7b2c\u4e00\u6b21\u770b\u5230\u8fd9\u4e48\u5927\u8303\u56f4\u7684\u6570\u4f4d$DP$\uff0c\u6628\u5929\u5b66\u4e86\u8bb0\u5fc6\u5316\u5199\u6cd5\u4e4b\u540e\u4eca\u5929\u7528\u8d77\u6765\u5c31\u662f\u65b9\u4fbf\uff0c~~\u771f\u9999\u554a~~\n\n\u8bdd\u8bf4\u4e00\u5f00\u59cb\u4ee5\u4e3a\u4f1a$TLE$\uff0c\u4f46\u662f\u53d1\u73b0\u8bb0\u5fc6\u5316\u641c\u7d22\u6570\u7ec4\u7684\u6bcf\u4e00\u4e2a\u7a7a\u95f4\u53ea\u4f1a\u8bbf\u95ee\u4e00\u6b21\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u548c\u9012\u63a8$dp$\u662f\u4e00\u6837\u7684\u3002\n\n\u8bb0\u5f55\u72b6\u6001\u9700\u8981\u8bb0\u5f55\u4e0a\u4e00\u4f4d\u548c\u4e0a\u4e0a\u4f4d(\u56e0\u4e3a\u53ef\u80fd\u51fa\u73b0\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u56de\u6587\u4e32\u5982$121$\uff0c\u4e00\u5f00\u59cb\u6211\u5fd8\u8bb0\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\u4e86)\uff0c\u53ea\u8981\u6ee1\u8db3\u8fd9\u4e00\u4f4d\u548c\u4e0a\u4e00\u4f4d\u76f8\u7b49\uff0c\u6216\u8005\u548c\u4e0a\u4e0a\u4f4d\u76f8\u7b49\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5b57\u5c31\u662f\u4e00\u5b9a\u6ee1\u8db3\u7684\u3002\n\n\u5269\u4e0b\u7684\u6bd4\u8f83\u7b80\u5355\uff1a\n\n\u8f93\u5165\u7684\u65f6\u5019\u5b58\u4e24\u4e2a\u6570\u7ec4\u91cc\uff0c\u5199\u4e24\u4e2a\u51fd\u6570\u7167\u6837\u6c42\u5373\u53ef\uff0c\u522b\u5fd8\u4e86\u51cf\u4e00\uff0c\u8fd8\u6709\u6ce8\u610f\u524d\u5bfc\u96f6\u95ee\u9898\u3002\n\n\u51e0\u4e2a\u5751\u70b9\uff08\u6211\u90fd\u72af\u8fc7\uff09\n\n$1.\\ work1,work2,dfs1,dfs2$\u51fd\u6570\u522b\u5199\u4e32\u4e86\uff0c\u8fd9\u4e2a\u8fd8\u662f\u6bd4\u8f83\u597d\u8c03\u51fa\u6765\u7684\u3002\n\n$2.dp$\u6570\u7ec4\u6bcf\u6b21\u90fd\u521d\u59cb\u5316\u4e3a$-1$(\u8fd9\u4e2a\u6211\u6ca1\u8303)\n\n$3.$\u5904\u7406\u524d\u5bfc\u96f6\u7684\u65f6\u5019\u5f53\u524d\u4f4d\u7f6e\u548c\u4e0a\u4e00\u4f4d\u90fd\u88ab\u4ee3\u5165\u4e86\uff0c\u4f46\u4e00\u5f00\u59cb\u4e0a\u4e0a\u4f4d\u9700\u8981\u8d4b\u4e00\u4e2a\n$!\\in[0,9]$\u7684\u6570,\u6211\u8d4b\u6210$-1$\u5fd8\u8bb0\u7279\u5224\u5bfc\u81f4$dp$\u6570\u7ec4\u8d8a\u754c\u8fd4\u56de\u4e86\u9519\u8bef\u7b54\u6848\uff0c\u6240\u4ee5\u5c3d\u91cf\u8d4b\u6210$10$\u5427\n\n\u66f4\u591a\u7ec6\u8282\u89c1\u4ee3\u7801\n\n# $Code$\n```\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#define ll long long\n#define re register\n#define maxn 1010\nusing namespace std;\nconst ll mod=1e9+7; \ninline int read()\n{\n\tint x=0,f=1; char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nchar AA[maxn],BB[maxn];\nint A[maxn],B[maxn],lena,lenb;\nll dp[1010][10][2][2][11],ans1,ans2,ans;\nll dfs1(int p,int a,int b,int c,int d)\n{\n\t//a\u8868\u793a\u4e0a\u4e00\u4f4d\uff0cb\u8868\u793a\u662f\u5426\u5c0f\u4e8e\u8fb9\u754c,c\u8868\u793a \u662f\u5426\u6784\u6210\u56de\u6587\u4e32\n\tif(p<=0) return c;\n\tif(~dp[p][a][b][c][d]) return dp[p][a][b][c][d]%mod;\n\tint lim=b?9:A[p];\n\tll res=0;\n\tfor(int i=0;i<=lim;++i)\n\t res=(res+dfs1(p-1,i,(i<lim)||b,(i==a)||c||(i==d),a))%mod;\n\treturn dp[p][a][b][c][d]=res;\n}\nll dfs2(int p,int a,int b,int c,int d)\n{\n\t//a\u8868\u793a\u4e0a\u4e00\u4f4d\uff0cb\u8868\u793a\u662f\u5426\u5c0f\u4e8e\u8fb9\u754c,c\u8868\u793a \u662f\u5426\u6784\u6210\u56de\u6587\u4e32\uff0cd\u8868\u793a\u4e0a\u4e0a\u4f4d \n\tif(p<=0) return c;//\u5982\u679cd=-1\uff0c\u4f1a\u8bbf\u95ee-1\u4e0b\u6807\uff0c\u5bb9\u6613\u6df7\u4e71\u8d8a\u754c\u8fd4\u56de\u9519\u8bef\u503c \n\tif(~dp[p][a][b][c][d]) return dp[p][a][b][c][d]%mod;\n\tint lim=b?9:B[p];\n\tll res=0;\t\n\tfor(int i=0;i<=lim;++i)\n\t res=(res+dfs2(p-1,i,(i<lim)||b,(i==a)||c||(i==d),a))%mod;\n\treturn dp[p][a][b][c][d]=res;//\u56de\u6eaf\u522b\u5fd8\u8bb0\u8d4b\u503c \n}\nvoid work1()//\u5904\u7406\u8f83\u5c0f\u7684\u6570 \n{\n\tmemset(dp,-1,sizeof(dp));//\u6bcf\u6b21\u90fd\u91cd\u65b0\u8d4b\u503c-1\n\tfor(re int i=1;i<=lena-1;++i)\n\t for(re int j=1;j<=9;++j)//\u5904\u7406\u4f4d\u6570\u5c0f\u7684\u60c5\u51b5\uff0c\u8fd9\u4e9b\u4f4d\u7f6e\u4ece[1,9]\u53d6 \n\t  ans1=(ans1+dfs1(i-1,j,1,0,10))%mod;\n\tfor(re int i=1;i<=A[lena];++i)\n\t ans1=(ans1+dfs1(lena-1,i,i<A[lena],0,10))%mod;\n}\n\nvoid work2()//\u5904\u7406\u8f83\u5927\u7684\u6570\uff0c\u6ce8\u610f\u8fd9\u4e9b\u51fd\u6570\u522b\u5199\u6df7\u4e86 \n{\n\tmemset(dp,-1,sizeof(dp));\n\tfor(re int i=1;i<=lenb-1;++i)\n\t for(re int j=1;j<=9;++j)\n\t  ans2=(ans2+dfs2(i-1,j,1,0,10))%mod;\n\tfor(re int i=1;i<=B[lenb];++i)\n\t ans2=(ans2+dfs2(lenb-1,i,i<B[lenb],0,10))%mod;\n}\nint main()\n{\n    cin>>AA+1>>BB+1;\n    lena=strlen(AA+1),lenb=strlen(BB+1);\n    for(re int i=1;i<=lena;++i) A[i]=AA[lena-i+1]-'0';\n    for(re int i=1;i<=lenb;++i) B[i]=BB[lenb-i+1]-'0';//\u53cd\u5411\u5b58\uff0c\u9ad8\u4f4d\u4e0b\u6807\u5927 \n    A[1]--;//\u8fb9\u754c\u9700\u8981\u9ad8\u7cbe\u5ea6\u51cf\u4e00\u4e0b \n    for(re int i=1;i<=lena;++i)\n    {\n    \tif(A[i]<0) A[i]+=10,A[i+1]--;\n    \telse break;\n\t}\n    work2();\n    work1();\n    ans=((ans2-ans1)%mod+mod)%mod;//\u9632\u6b62\u7206\u8d1f\u6570,(x%mod+mod)%mod \n    printf(\"%lld\\n\",ans);\n\treturn 0;\n}\n\n\n```\n</font>",
        "postTime": 1573522794,
        "uid": 127018,
        "name": "ZORO",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3413 \u3010SAC#1 - \u840c\u6570\u3011"
    }
]