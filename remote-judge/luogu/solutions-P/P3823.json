[
    {
        "content": "\u76f8\u5f53\u611a\u8822\u7684\u4e00\u9053\u9898......\n\n\u6211\u4eec\u53d1\u73b0 $k$ \u5f88\u5c0f\uff0c\u6240\u4ee5\u7528\u54c8\u5e0c\u8868\u5728\u6bcf\u6b21\u5408\u5e76\u548c\u5206\u88c2\u7684\u65f6\u5019\u7ef4\u62a4\u6bcf\u4e2a $k$ \u7684\u7b54\u6848\u3002\n\n\u7136\u540e\u53d1\u73b0\u8fd9\u4e2a\u961f\u4f0d\u662f\u53ef\u4ee5\u76f4\u63a5\u94fe\u8868\u7ef4\u62a4\u7684\uff0c\u5e76\u4e14\u589e\u91cf\u53ea\u4e0e\u4e24\u7aef\u7684 $k$ \u4e2a\u6709\u5173\u3002\u4e8e\u662f\u6bcf\u6b21\u5408\u5e76\u628a\u524d\u9762\u961f\u4f0d\u7684\u540e $k$ \u4e2a\u548c\u540e\u9762\u961f\u4f0d\u7684\u524d $k$ \u4e2a\u62c9\u51fa\u6765\u54c8\u5e0c\u4e00\u4e0b\u5408\u5e76\u8d77\u6765\u3002\u5206\u88c2\u540c\u7406\u7ef4\u62a4\u3002\n\n\u5982\u679c\u4f60\u4ee5\u4e3a\u8fd9\u4e1c\u897f\u662f $O(nk^2+\\sum|s|)$ \u8fc7\u4e0d\u53bb\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u770b\u5230\u90a3\u4e2a $c\\le 1000$\u3002\u4e8e\u662f\u6211\u4eec\u91cd\u65b0\u5206\u6790\u4e00\u4e0b\u590d\u6742\u5ea6\u3002\u5982\u679c\u6ca1\u6709\u62c6\u5f00\u64cd\u4f5c\u7684\u8bdd\uff0c\u90a3\u4e48\u7531\u4e8e\u603b\u5171\u53ea\u6709 $O(nk)$ \u6bb5\u6709\u6548\u5b50\u5217\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f $O(nk)$\uff0c\u6bcf\u6b21\u5206\u88c2\u53ea\u4f1a\u589e\u52a0 $O(k^2)$ \u7684\u590d\u6742\u5ea6\u548c\u52bf\u80fd\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u662f $O(nk+ck^2+\\sum|s|)$\uff0c\u53ef\u4ee5\u63a5\u53d7\u3002\n\n~~\u8fd9\u4e48\u6c34\u7684\u9898\u662f\u600e\u4e48\u8fdbNOI\u7684~~\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef unsigned long long ull;\nconst int N=3e5+5,K=55,P=1e7+7,P2=998244353;\nint n,m,k,l[N],nxt[N],pre[N],bas1[K],hs1[K],hs2[K];char s[P];\nint hd[P],Nxt[N*K],Len[N*K],tot,cnt[N*K];ull key[N*K],bas2[K],Hs1[K],Hs2[K];\nvoid add(int L,int h1,ull h2,int v){\n\tfor(int i=hd[h1];i;i=Nxt[i])if(key[i]==h2&&Len[i]==L){cnt[i]+=v;return;}\n\tLen[++tot]=L,key[tot]=h2,Nxt[tot]=hd[h1],hd[h1]=tot,cnt[tot]=1;\n}\nint query(int L,int h1,ull h2){\n\tfor(int i=hd[h1];i;i=Nxt[i])if(key[i]==h2&&Len[i]==L)return cnt[i];\n\treturn 0;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&l[i]),add(1,l[i],l[i],1);\n\tfor(int i=bas1[0]=bas2[0]=1;i<=51;i++)bas1[i]=bas1[i-1]*13%P,bas2[i]=bas2[i-1]*137;\n\tfor(int i=1,op,x,y;i<=m;i++){\n\t\tscanf(\"%d\",&op);\n\t\tif(op==1){\n\t\t\tscanf(\"%d%d\",&x,&y);int l1=0,l2=0;\n\t\t\tfor(int j=1,t=x;j<=50&&t;l1++,j++,t=pre[t])hs1[j]=(hs1[j-1]+l[t]*bas1[j-1])%P,Hs1[j]=Hs1[j-1]+l[t]*bas2[j-1];\n\t\t\tfor(int j=1,t=y;j<=50&&t;l2++,j++,t=nxt[t])hs2[j]=(hs2[j-1]*13+l[t])%P,Hs2[j]=Hs2[j-1]*137+l[t];\n\t\t\tfor(int l=2;l<=50&&l<=l1+l2;l++)\n\t\t\t\tfor(int j=1;j<l&&j<=l1;j++)if(l-j<=l2)\n\t\t\t\t\tadd(l,(1ll*hs1[j]*bas1[l-j]+hs2[l-j])%P,Hs1[j]*bas2[l-j]+Hs2[l-j],1);\n\t\t\tnxt[x]=y,pre[y]=x;\n\t\t}\n\t\telse if(op==2){\n\t\t\tscanf(\"%d\",&x);y=nxt[x];int l1=0,l2=0;\n\t\t\tfor(int j=1,t=x;j<=50&&t;l1++,j++,t=pre[t])hs1[j]=(hs1[j-1]+l[t]*bas1[j-1])%P,Hs1[j]=Hs1[j-1]+l[t]*bas2[j-1];\n\t\t\tfor(int j=1,t=y;j<=50&&t;l2++,j++,t=nxt[t])hs2[j]=(hs2[j-1]*13+l[t])%P,Hs2[j]=Hs2[j-1]*137+l[t];\n\t\t\tfor(int l=2;l<=50&&l<=l1+l2;l++)\n\t\t\t\tfor(int j=1;j<l&&j<=l1;j++)if(l-j<=l2)\n\t\t\t\t\tadd(l,(1ll*hs1[j]*bas1[l-j]+hs2[l-j])%P,Hs1[j]*bas2[l-j]+Hs2[l-j],-1);\n\t\t\tnxt[x]=0,pre[y]=0;\n\t\t}\n\t\telse {\n\t\t\tscanf(\"%s %d\",s+1,&k);int ans=1,h1=0,len=strlen(s+1);ull h2=0;\n\t\t\tfor(int i=1;i<=k;i++)h1=(h1*13+s[i]-'0')%P,h2=h2*137+s[i]-'0';\n\t\t\tfor(int i=k;i<=len;i++){\n\t\t\t\tans=1ll*ans*query(k,h1,h2)%P2;\n\t\t\t\tif(ans==0)break;\n\t\t\t\th1=((h1-1ll*(s[i-k+1]-'0')*bas1[k-1]%P+P)*13+(s[i+1]-'0'))%P;\n\t\t\t\th2=(h2-(s[i-k+1]-'0')*bas2[k-1])*137+s[i+1]-'0';\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1616858059,
        "uid": 77174,
        "name": "FunnyCreatress",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3823\u3010[NOI2017]\u86af\u8693\u6392\u961f\u3011"
    },
    {
        "content": "\u7528\u5b57\u7b26\u4e32\u54c8\u5e0c\uff0c\u94fe\u8868\u66b4\u529b\u6a21\u62df\u5b57\u7b26\u4e32\u7684\u62c6\u5206\u5408\u5e76\uff0c\u56e0\u4e3a\u8be2\u95ee\u7684$k$\u5f88\u5c0f\uff0c\u6bcf\u6b21\u4fee\u6539\u4e0d\u4f1a\u8d85\u8fc7$k^2$\u4e2a\u503c\uff0c\u67e5\u8be2\u5c31\u5f88\u7b80\u5355\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define LL long long\n#define ULL unsigned long long\nint read()\n{\n    int x = 0, f = 1; char ch = getchar();\n    while (!isdigit(ch)) { if (ch == '-') f = -1; ch = getchar(); }\n    while (isdigit(ch)) { x = x * 10 + ch - '0'; ch = getchar(); }\n    return x * f;\n}\nconst int MAX_N = 550000;\nconst int MAX_K = 51;\nconst int p = 19260817;\nconst int mod = 998244353;\nint n, m, q, a[MAX_N], pre[MAX_N], nxt[MAX_N], cnt[MAX_N], f[MAX_K * 2 + 10];\nULL g[MAX_K * 2 + 10], bin[MAX_K * 2];\nconst int MOD = (1 << 24) - 1;\nstruct Hash\n{\n    struct edge\n    {\n        ULL x;\n        int cnt, nxt;\n    } e[21000000];\n    int fir[MOD + 1], cnt_e;\n    void add(ULL x, int d)\n    {\n        int u = (x & MOD);\n        for (int i = fir[u]; i; i = e[i].nxt)\n            if (e[i].x == x)\n            {\n                e[i].cnt += d;\n                return ;\n            }\n        e[++cnt_e] = (edge) { x, d, fir[u] }; fir[u] = cnt_e;\n    }\n    int query(ULL x)\n    {\n        int u = (x & MOD);\n        for (int i = fir[u]; i; i = e[i].nxt)\n            if (e[i].x == x)\n                return e[i].cnt;\n        return 0;\n    }\n} hash;\nvoid merge()\n{\n    int x = read(), y = read();\n    memset(f, 0, sizeof f);\n    int L = MAX_K, R = L - 1;\n    for (int i = x; i && L > 1; i = pre[i])\n        f[--L] = a[i];\n    for (int i = y; i && R + 1 < MAX_K * 2; i = nxt[i])\n        f[++R] = a[i];\n    for (int i = 1; i <= R; i++)\n        g[i] = g[i - 1] * p + f[i];\n    for (int i = L; i < MAX_K; i++)\n        for (int j = MAX_K; j <= min(R, i + 49); j++)\n            hash.add(g[j] - g[i - 1] * bin[j - i + 1], 1);\n    nxt[x] = y, pre[y] = x;\n}\nvoid split()\n{\n    int x = read(), y = nxt[x];\n    memset(f, 0, sizeof f);\n    int L = MAX_K, R = L - 1;\n    for (int i = x; i && L > 1; i = pre[i])\n        f[--L] = a[i];\n    for (int i = y; i && R + 1 < MAX_K * 2; i = nxt[i])\n        f[++R] = a[i];\n    for (int i = 1; i <= R; i++)\n        g[i] = g[i - 1] * p + f[i];\n    for (int i = L; i < MAX_K; i++)\n        for (int j = MAX_K; j <= min(R, i + 49); j++)\n            hash.add(g[j] - g[i - 1] * bin[j - i + 1], -1);\n    nxt[x] = pre[y] = 0;\n}\nchar s[11000000];\nint query()\n{\n    scanf(\"%s\", s + 1);\n    int k = read(), ans = 1, n = strlen(s + 1);\n    ULL val = 0;\n    if (k == 1)\n        for (int i = 1; i <= n; i++)\n            ans = ((LL)ans * cnt[s[i]]) % mod;\n    else for (int i = 1; i <= n; i++)\n    {\n        val = val * p + s[i];\n        if (i > k) val -= bin[k] * s[i - k];\n        if (i >= k) ans = ((LL)ans * hash.query(val)) % mod;\n    }\n    return ans;\n}\nint main()\n{\n    int n = read(), q = read();\n    bin[0] = 1;\n    for (int i = 1; i < MAX_K; i++) bin[i] = bin[i - 1] * p;\n    for (int i = 1; i <= n; i++) cnt[a[i] = read() + '0'] ++;\n    while (q --)\n    {\n        int opt = read();\n        if (opt == 1) merge();\n        else if (opt == 2) split();\n        else printf(\"%d\\n\", query());\n    }\n    return 0;\n}\n```",
        "postTime": 1515663287,
        "uid": 37070,
        "name": "Ameyax",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3823 \u3010[NOI2017]\u86af\u8693\u6392\u961f\u3011"
    },
    {
        "content": "\u9898\u76ee\u5c31\u662f\u8981\u6c42\u6211\u4eec\u80fd\u591f\u652f\u6301\u4e09\u4e2a\u64cd\u4f5c\uff1a\n\n1.\u628a\u4e24\u4e2a\u5b57\u7b26\u4e32\u5408\u5e76\n\n2.\u628a\u4e24\u4e2a\u5b57\u7b26\u4e32\u5206\u88c2\n\n3.\u8be2\u95ee\u6709\u591a\u5c11\u4e00\u4e9b\u4e2a\u4e32\u662f\u8fd9\u4e48\u591a\u4e32\u4e2d\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\n\n\u6211\u4eec\u53d1\u73b0\u6570\u636e\u8303\u56f4\u4e2d\u7684$K$\u5f88\u5c0f\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u8003\u8651\u51fa\u9898\u4eba\u4e3a\u4ec0\u4e48$K$\u8fd9\u4e48\u5c0f\n\n\u8fd9\u6837\u7684\u8bdd\u9700\u8981\u5339\u914d\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u6700\u957f\u5c31\u53ea\u6709$K$\u4e86\n\n\u4e8e\u662f\u6211\u4eec\u53d1\u73b0\u7b2c3\u4e2d\u64cd\u4f5c\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u8868\u89e3\u51b3\uff0c\u54c8\u5e0c\u8868\u53ea\u9700\u8981\u5b58\u50a8\u957f\u5ea6$<=K$\u7684\u5b50\u4e32\u7684\u54c8\u5e0c\u503c\u5373\u53ef\uff08\u54c8\u5e0c\u8868\u5c31\u662f\u6302\u94fe\u5c31\u884c\u4e86\uff09\n\n\u6211\u4eec\u601d\u8003\uff0c\u4e24\u4e2a\u5b57\u7b26\u4e32$a,b$\u5408\u5e76\u4f1a\u589e\u52a0\u54ea\u4e9b\u54c8\u5e0c\u503c\uff1f \u5176\u5b9e\u5c31\u662f\u90a3\u4e9b\u5373\u6709$a$\u7684\u90e8\u5206\u53c8\u6709$b$\u90e8\u5206\u7684\u5b50\u4e32\u3002 \u8fd9\u6837\u7684\u4e32\u6709\u591a\u5c11\u4e2a\uff1f\u53ef\u80fd\u6709\u5f88\u591a\uff0c\u4f46\u662f\u6211\u4eec\u8bb0\u5f55\u7684\u6700\u591a\u6709$K^2$\u4e2a\u3002\n\n\u5206\u88c2\uff1f\u4e0d\u4e5f\u662f\u4e00\u6837\u7684\u4e48\uff0c\u5c31\u662f\u628a\u90a3\u4e9b\u5373\u6709$a$\u7684\u90e8\u5206\u53c8\u6709$b$\u90e8\u5206\u7684\u5b50\u4e32\u7684\u54c8\u5e0c\u503c\u4ece\u54c8\u5e0c\u8868\u4e2d\u79fb\u9664\n\n\u5bf9\u4e8e\u7b2c\u4e09\u79cd\uff0c\u53ea\u9700\u8981$O(|S|)$\u7684\u679a\u4e3e\u4e32\u4e00\u904d\uff0c\u7136\u540e\u6eda\u52a8\u54c8\u5e0c\u4e00\u4e0b\u4e0d\u5c31\u884c\u4e86\u4e48\n\n\u6709\u5e94\u4e3a$\\sum{|S}|<=10^7$\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u6982\u5c31\u662f$O(10^7+MK^2)=>O(MK^2)$\n\n\u6700\u597d\u7528\u8bfb\u5165\u4f18\u5316\uff0c\u9632\u6b62TLE\n\n\u6253\u4ee3\u7801\u7684\u96be\u5ea6\u8fd8\u662f\u6709\u7684\uff0c\u5927\u5bb6\u52a0\u6cb9\u5427\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std ;\n#define rep(i, a, b) for (int (i) = (a); (i) <= (b); (i)++)\n#define per(i, a, b) for (int (i) = (a); (i) >= (b); (i)--)\n#define clr(a) memset(a, 0, sizeof(a))\n#define ass(a, sum) memset(a, sum, sizeof(a))\n#define lowbit(x) (x & -x)\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define enter cout << endl\n#define siz(x) ((int)x.size())\ntypedef long long ll ;\ntypedef unsigned long long ull ;\ntypedef vector <int> vi ;\ntypedef pair <int, int> pii ;\ntypedef map <int, int> mii ;\ntypedef map <string, int> msi ;\nconst int N = 200010 ;\nconst int M = 20000000 ;\nconst int P = 10000009 ;\nconst int K = 50 ;\nconst int INF = 0x3f3f3f3f ;\nconst int iinf = 1 << 30 ;\nconst ll linf = 2e18 ;\nconst int MOD = 998244353 ;\nconst ull bs = 7 ;\nvoid print(int x) { cout << x << endl ; exit(0) ; }\nvoid PRINT(string x) { cout << x << endl ; exit(0) ; }\nvoid douout(double x){ printf(\"%lf\\n\", x + 0.0000000001) ; }\n\nnamespace io {\n    const int BUFSIZE = 1 << 20 ;\n    char ibuf[BUFSIZE], *is = ibuf, *it = ibuf ;\n    char readc() {\n        if (is == it) it = (is = ibuf) + fread(ibuf, 1, BUFSIZE, stdin) ;\n        return *is++ ;\n    }\n    int readi() {\n        int x = 0, f = 1 ;\n        char c = readc() ;\n        while (!isdigit(c)) {\n            if (c == '-') f = -1 ;\n            c = readc() ;\n        }\n        while (isdigit(c)) {\n            x = x * 10 + c - '0' ;\n            c = readc() ;\n        }\n        return x * f ;\n    }\n}\n\nusing io::readc ;\nusing io::readi ;\n\nstruct Hash_table {\n    int tot, head[P], nxt[M], val[M] ; ull to[M] ;\n    void modify(ull x, int sum) {\n        int ind = x % P ;\n        for (int i = head[ind]; i; i = nxt[i]) // link\n        if (to[i] == x){ // appeared\n            val[i] += sum ;\n            return ;\n        }\n        to[++tot] = x ; // first appear, push into the hash table\n        nxt[tot] = head[ind] ;\n        val[tot] = sum ;\n        head[ind] = tot ;\n    }\n    int query(ull x) {\n        for (int i = head[x % P]; i; i = nxt[i]) if (to[i] == x) return val[i] ; // find\n        return 0 ; // not find\n    }\n} Hash ;\n\nint n, m ;\nint pre[N], suf[N], str[N], s[M] ;\null pw[N] ;\n\nsigned main(){\n    n = readi() ; m = readi() ;\n    for (int i = 1; i <= n; i++) {\n        str[i] = readi() ;\n        Hash.modify(str[i], 1) ;\n    }\n    pw[0] = 1 ; for (int i = 1; i <= K; i++) pw[i] = pw[i - 1] * bs ;\n    while (m--) {\n        int ty = readi(), k ;\n        if (ty == 1) {\n            int x = readi(), y = readi() ; \n            ull now = 0 ;\n            pre[y] = x, suf[x] = y ; // change link\n            for (int i = x, p = 1; i && p <= K; i = pre[i], p++) {\n                ull hqg = now += pw[p - 1] * str[i] ;\n                for (int j = y, q = p + 1; j && q <= K; j = suf[j], q++) {\n                    hqg = hqg * bs + str[j] ;\n                    Hash.modify(hqg, 1) ;\n                }\n            }\n        } else\n        if (ty == 2) {\n            int x = readi(), y ; y = suf[x] ;\n            ull now = 0 ;\n            pre[y] = suf[x] = 0 ;\n            for (int i = x, p = 1; i && p <= K; i = pre[i], p++) {\n            \tull hqg = now += pw[p - 1] * str[i] ;\n            \tfor (int j = y, q = p + 1; j && q <= K; j = suf[j], q++) {\n                    hqg = hqg * bs + str[j] ;\n                    Hash.modify(hqg, -1) ;\n                }\n            }\n        } else {\n            char c = readc() ;\n            while (!isdigit(c)) c = readc() ;\n            int len = 0 ;\n            while (isdigit(c)) s[len++] = c - '0', c = readc() ;\n            k = readi() ;\n            ull now = 0, ans = 1 ;\n            for (int i = 0; i < len; i++) {\n                now = now * bs + s[i] ;\n                if (i >= k - 1) {\n                    ans = ans * Hash.query(now) % MOD ;\n                    now -= pw[k - 1] * s[i - k + 1] ;\n                }\n            }\n            printf(\"%llu\\n\", ans) ;\n        }\n    }\n    return 0 ;\n}\n\n```",
        "postTime": 1546679267,
        "uid": 54900,
        "name": "__Hacheylight__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3823 \u3010[NOI2017]\u86af\u8693\u6392\u961f\u3011"
    },
    {
        "content": "\u770b\u5230\u9898\u89e3\u4e0d\u591a\u849f\u84bb\u5c31\u6765\u51d1\u4e2a\u6570~\n\n**\u7b97\u6cd5\uff1a\u54c8\u5e0c**\uff08\u4f3c\u4e4e\u771f\u7684\u5c31\u53ea\u7528\u8fd9\u4e2a\uff1f\uff09\n\n\u505a\u8fd9\u9053\u9898\uff0c\u4f60\u81f3\u5c11\u5e94\u8be5\u4f1a\u54c8\u5e0c\u6216\u8005\u662f trie \u7684\u4e00\u79cd\uff08\u505a NOI \u7684\u9898\u771f\u7684\u4e0d\u4f1a\u54c8\u5e0c\uff1f\uff09\uff0c\u4e0b\u9762\u8bb2\u54c8\u5e0c\u89e3\u6cd5\u3002\n\n\u5bf9\u4e8e\u8fd9\u79cd\u9898\u9762\u5de8\u957f\u65e0\u6bd4\uff0c\u6570\u636e\u8303\u56f4\u6781\u4e3a\u78c5\u7934\u7684\u9898\uff0c\u6211\u4eec\u5e94\u8be5\u8fd9\u6837\u53bb\u89e3\u2026\u2026\n\n# \u4e00\u3001\u7406\u6e05\u9898\u610f\n\n\u7b80\u5355\u5730\u8bf4\u5c31\u662f\u6700\u5f00\u59cb\u6709\u4e00\u4e9b\u957f\u5ea6\u4e3a\u4e00\u7684\u5b57\u7b26\u4e32\uff0c\u9700\u8981\u652f\u6301\u4e09\u79cd\u64cd\u4f5c\uff1a\n\n- \u62fc\u63a5\u4e24\u6bb5\u5b57\u7b26\u4e32\n\n- \u5206\u88c2\u4e24\u6bb5\u5b57\u7b26\u4e32\n\n- \u7ed9\u5b9a\u5b57\u7b26\u4e32 $s$ \u548c\u6574\u6570 $k$ , \u5bf9\u4e8e $s$ \u7684\u6bcf\u4e00\u4e2a\u957f\u5ea6\u4e3a $k$ \u7684\u5b50\u4e32 $s'$\uff0c\u6c42\u6240\u6709\u7684\u5b57\u7b26\u4e32\u7684\u6240\u6709\u5b50\u4e32\u4e2d\u4e0e $s'$ \u76f8\u7b49\u7684\u4e2a\u6570\u3002\n\n\u7136\u540e\u5f00\u59cb\u601d\u8003\u5404\u79cd\u7b97\u6cd5\uff1aSAM\u3001AC\u81ea\u52a8\u673a\u3001trie\u2026\u2026\u600e\u4e48\u597d\u50cf\u90fd\u4e0d\u884c\u554a\uff1f\uff01\n\n# \u4e8c\u3001\u89c2\u5bdf\u6570\u636e\u8303\u56f4\n\n\u5176\u5b9e\u8fde\u90a3\u5f20\u8868\u90fd\u4e0d\u7528\u770b\uff0c\u8fd9\u9053\u9898\u53ea\u8981\u770b\u603b\u6570\u636e\u8303\u56f4\u5c31\u597d\u4e86\u3002$k\\leq 50$ \uff1f\uff1f\u4e00\u4e2a~~\u72e1\u733e~~\u6709\u6548\u7684\u65b9\u6cd5\uff1a\u66b4\u529b\u3002\n\n\u76f4\u63a5\u7ef4\u62a4\u51fa\u6240\u6709\u5b57\u7b26\u4e32\u7684\u6240\u6709\u957f\u5ea6 50 \u4ee5\u5185\u7684\u5b50\u4e32\uff0c\u94fe\u8868\u66b4\u529b\u7ef4\u62a4\u62fc\u63a5\u548c\u5206\u88c2\uff0c\u6bcf\u4e00\u6b21\u8ba1\u7b97\u62fc\u63a5\u65b0\u4ea7\u751f\u7684\u5b50\u4e32\uff0c\u6216\u662f\u5206\u88c2\u5bfc\u81f4\u6d88\u5931\u7684\u5b50\u4e32\u3002\n\n\u5bf9\u4e8e\u5b50\u4e32\u7684\u5339\u914d\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7528\u54c8\u5e0c\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u8981\u8be2\u95ee\u54c8\u5e0c\u503c\u4e3a\u67d0\u4e00\u4e2a\u6570\u7684\u5b50\u4e32\u4e2a\u6570\u3002\u503c\u57df\u592a\u5927\u5f00\u4e0d\u4e86\u6876\uff1f\u5728\u6765\u4e00\u4e2a\u54c8\u5e0c\uff08~~\u54c8\u5e0c\u5957\u54c8\u5e0c~~\uff09\u3002\n\n# \u4e09\u3001\u5199\u4ee3\u7801\n\n\u90a3\u4e48\u53ef\u4ee5\u5f00\u59cb\u5199\u4e86\uff0c\u611f\u89c9\u4ee3\u7801\u4e5f\u4e0d\u662f\u5f88\u96be\u5199\uff0c\u6bd5\u7adf\u5b57\u7b26\u4e32\u6eda\u52a8\u54c8\u5e0c\u548c\u54c8\u5e0c\u8868\u5bf9\u4e8e NOI \u9009\u624b\u6765\u8bf4\u5e94\u8be5\u7b97\u662f\u5f88\u57fa\u7840\u7684\u4e1c\u897f\u4e86\uff0c\u5373\u4f7f\u662f\u60f3\u7b14\u8005\u4e00\u6837\u7684\u849f\u84bb\u4e5f\u53ef\u4ee5\u5728 1h \u5185\u5199\u51fa 88 \u5206\u4ee3\u7801\u3002\n\n# \u56db\u3001\u8c03\u6574\n\n\u7136\u800c\u4ea4\u4e0a\u53bb\u53d1\u73b0 TLE \u4e86\uff08\u5982\u679c\u662f\u8003\u573a\u4e0a\u5c31\u6709\u70b9\u60e8\uff0c\u6ca1\u673a\u4f1a\u4e86\uff09\uff0c\u90a3\u4e48\u9996\u5148\u60f3\u5230\u5c31\u662f\u54c8\u5e0c\u8868\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u95ee\u9898\u3002\n\n\u4e00\u822c\u6765\u8bb2\u54c8\u5e0c\u8868\u6a21\u6570\u5f00\u5927\u4e00\u70b9\u4f1a\u66f4\u5feb\uff0c\u6ce8\u610f\u522bMLE\u524d\u63d0\u4e0b\u5f00\u6210\u5927\u4e00\u70b9\u7684\u8d28\u6570\u5c31\u597d\u3002\n\n\u90a3\u4e48\u6211\u628a\u6a21\u6570\u6539\u5230 $5056577$ \u7684\u65f6\u5019\u5c31AC\u4e86\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef unsigned long long ull;\n\ninline void read(int& x){\n\tchar c=getchar();x=0;\n\twhile(!isdigit(c))c=getchar();\n\twhile(isdigit(c))x=x*10+c-'0',c=getchar();\n}\ninline int read(char *s){\n\tchar c=getchar(); int len=0;\n\twhile(!isdigit(c))c=getchar();\n\twhile(isdigit(c))s[len++]=c,c=getchar();s[len]='\\0';\n\treturn len;\n}\n\nconst int HASH_MOD=5056577, STA=1e7+5;\nstruct Hash_Table{\n\tint tot, hd[HASH_MOD+5], cnt[STA], nxt[STA];\n\tull sta[STA];\n\tinline void mdf(ull _sta, int v){\n\t\tint res=_sta%HASH_MOD;\n\t\tfor(int u=hd[res]; u; u=nxt[u]) if(sta[u]==_sta)\n\t\t\treturn (void)(cnt[u]+=v);\n\t\tsta[++tot]=_sta, cnt[tot]=v;\n\t\tnxt[tot]=hd[res], hd[res]=tot;\n\t}\n\tinline int qry(ull _sta){\n\t\tint res=_sta%HASH_MOD;\n\t\tfor(int u=hd[res]; u; u=nxt[u]) if(sta[u]==_sta)\n\t\t\treturn cnt[u];\n\t\treturn 0;\n\t}\n}H;\n\nconst int N=2e5+5, K=55, LEN=1e7+5, Base=131, mod=998244353;\n\null bin[K];\nint n, m, a[N], lst[N], nxt[N], cnt[10];\nchar s[LEN];\n\ninline void merge(int x, int y){\n\tnxt[x]=y, lst[y]=x;\n\tfor(int k=2; k<=50; ++k){\n\t\tint l=0, r=0;\n\t\tfor(int i=x; i&&l<k-1; i=lst[i]) ++l;\n\t\tfor(int i=y; i&&l+r<k; i=nxt[i]) ++r;\n\t\tif(l+r<k) break;\n\t\tl=x;\n\t\tfor(int i=1; i<=k-2&&lst[l]; ++i)\n\t\t\tl=lst[l];\n\t\tr=l;\n\t\tull hash=0;\n\t\tfor(int i=1; i<=k; ++i){\n\t\t\thash=hash*Base+a[r];\n\t\t\tr=nxt[r];\n\t\t}\n\t\twhile(true){\n\t\t\tH.mdf(hash, 1);\n\t\t\tif(l==x||!r) break;\n\t\t\thash-=a[l]*bin[k-1];\n\t\t\tl=nxt[l];\n\t\t\thash=hash*Base+a[r];\n\t\t\tr=nxt[r];\n\t\t}\n\t}\n}\ninline void split(int x, int y){\n\tfor(int k=2; k<=50; ++k){\n\t\tint l=0, r=0;\n\t\tfor(int i=x; i&&l<k-1; i=lst[i]) ++l;\n\t\tfor(int i=y; i&&l+r<k; i=nxt[i]) ++r;\n\t\tif(l+r<k) break;\n\t\tl=x;\n\t\tfor(int i=1; i<=k-2&&lst[l]; ++i)\n\t\t\tl=lst[l];\n\t\tr=l;\n\t\tull hash=0;\n\t\tfor(int i=1; i<=k; ++i){\n\t\t\thash=hash*Base+a[r];\n\t\t\tr=nxt[r];\n\t\t}\n\t\twhile(true){\n\t\t\tH.mdf(hash, -1);\n\t\t\tif(l==x||!r) break;\n\t\t\thash-=a[l]*bin[k-1];\n\t\t\tl=nxt[l];\n\t\t\thash=hash*Base+a[r];\n\t\t\tr=nxt[r];\n\t\t}\n\t}\n\tnxt[x]=lst[y]=0;\n}\ninline int query(char *s, int n, int k){\n\tint ans=1;\n\tif(k==1){\n\t\tfor(int i=1; i<=n; ++i)\n\t\t\tans=1ll*ans*cnt[s[i]-'0']%mod;\n\t\treturn ans;\n\t}\n\tull hash=0;\n\tfor(int i=1; i<=k; ++i)\n\t\thash=hash*Base+s[i]-'0';\n\tint l=1, r=k+1;\n\twhile(true){\n\t\tans=1ll*ans*H.qry(hash)%mod;\n\t\tif(r>n||!ans) break;\n\t\thash-=(s[l++]-'0')*bin[k-1];\n\t\thash=hash*Base+s[r++]-'0';\n\t}\n\treturn ans;\n}\n\nint main(){\n\tbin[0]=1;\n\tfor(int i=1; i<K; ++i)\n\t\tbin[i]=bin[i-1]*Base;\n\n\tread(n);read(m);\n\tfor(int i=1; i<=n; ++i){\n\t\tread(a[i]);\n\t\t++cnt[a[i]];\n\t}\n\n\twhile(m--){\n\t\tint op, x, y, k;\n\t\tread(op);\n\t\tif(op==1){\n\t\t\tread(x);read(y);\n\t\t\tmerge(x, y);\n\t\t}\n\t\telse if(op==2){\n\t\t\tread(x);\n\t\t\tsplit(x, nxt[x]);\n\t\t}\n\t\telse{\n\t\t\tx=read(s+1);read(k);\n\t\t\tprintf(\"%d\\n\", query(s, x, k));\n\t\t}\n\t}\n\n\treturn 0;\n}\n```\n\n\u90a3\u4e48\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u611f\u89c9\u96be\u5ea6\u6709\u4e9b\u865a\u9ad8\uff08~~\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u4eec\u6211\u5199NOI2017 d1t1\u6574\u6570\u7684\u65f6\u5019\u56e0\u4e3a\u4e00\u4e2a\u6c99\u96d5\u7684+1\u8c03\u4e863h\u5462~~\uff09\uff0c\u6bd4 d1t1\u6574\u6570 \u66f4\u50cf\u662fNOI2017\u7684\u7b7e\u5230\u9898\uff1f\u3002",
        "postTime": 1594996172,
        "uid": 68203,
        "name": "wyt2357",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3823 \u3010[NOI2017]\u86af\u8693\u6392\u961f\u3011"
    },
    {
        "content": "\n\u9898\u610f\n------------\n\n\u7ed9\u5b9an\u6761\u957f\u5ea6\u4e0d\u8d85\u8fc76\u7684\u86af\u8693\uff0c\u521d\u59cb\u5404\u81ea\u5728\u4e00\u4e2a\u961f\u4f0d\u3002m\u6b21\u64cd\u4f5c\uff1a1.\u5c06i\u53f7\u86af\u8693\u548cj\u53f7\u86af\u8693\u7684\u961f\u4f0d\u5408\u5e76\uff08\u4fdd\u8bc1i\u4e3a\u961f\u5c3e\uff0cj\u4e3a\u961f\u9996\uff09\u30022.\u5c06i\u53f7\u86af\u8693\u548c\u5b83\u540e\u9762\u7684\u86af\u8693\u5206\u79bb\u6210\u4e24\u4e2a\u961f\u30023.\u8be2\u95ee\uff1a\u7ed9\u5b9a\u5b57\u7b26\u4e32S\u548c\u6b63\u6574\u6570k\uff0c\u6c42f(\u6bcf\u4e2a\u957f\u5ea6\u4e3ak\u7684\u5b50\u4e32)\u7684\u4e58\u79ef\u3002\u5176\u4e2df(S)\u5b9a\u4e49\u4e3a\u86af\u8693\u5728\u5176\u961f\u4f0d\u5411\u540e\u5ef6\u4f38k\u4f4d\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u7b49\u4e8eS\u7684\u86af\u8693\u4e2a\u6570\u3002\\(n \\leq 2*10^5,m \\leq 5*10^5,k \\leq 50,\\sum |s| \\leq 10^7,c \\leq 10^3\\)\uff0c\u5176\u4e2dc\u4e3a\u64cd\u4f5c2\u7684\u6570\u91cf\u3002\n\n\n\u7b97\u6cd5\u5206\u6790\n------------\n\n\u6a21\u62df+hash\n\u66b4\u529b\u4e00\u70b9\u8003\u8651\uff0c\u6bcf\u4e2a\u961f\u4f0d\u7ef4\u62a4\u4e00\u6761\u94fe\uff0c\u5408\u5e76\u548c\u5206\u88c2\u65f6\u7ef4\u62a4\\(c_{x,i}\\)\u8868\u793a\u7b2cx\u53f7\u86af\u8693\u5411\u540e\u5ef6\u4f38i\u4f4d\u7684\u5b57\u7b26\u4e32hash\u503c\u5e76\u66f4\u65b0\u957f\u5ea6\u4e3ai\u7684\u7b54\u6848\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u76f4\u63a5\u679a\u4e3e\u5b50\u4e32\u8bbf\u95ee\u957f\u5ea6\u4e3ai\u7684\u7b54\u6848\u4e2dhash\u503c\u76f8\u540c\u7684\u3002\n\u5bb9\u6613\u77e5\u9053\u8fd9\u6837\u6700\u574f\u590d\u6742\u5ea6\u662f\\(O(mk^2+\\sum |s|)\\)\uff0c\u7406\u8bba\u4e0a\u4f9d\u7136\u65e0\u6cd5\u901a\u8fc7\u3002\n\n\u7ee7\u7eed\u5206\u6790\u3002\n\u8003\u8651\u5206\u79bb\u64cd\u4f5c\u81f3\u591ac\u6b21\uff0c\u590d\u6742\u5ea6\u4e3a\\(O(ck^2)\\)\u3002\n\u8003\u8651\u5408\u5e76\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6bcf\u6b21\u5408\u5e76\u5176\u5b9e\u663e\u7136\u662f\u4e0d\u9700\u8981\u679a\u4e3e\u6ee1\u7684\uff0c\u662f\u5426\u6709\u53ef\u80fd\u7701\u53bb\u4e00\u4e2ak\u7684\u590d\u6742\u5ea6\uff1f\u5408\u5e76\u7684\u7ec8\u4e32\u4e2d\u6bcf\u4e2a\u5b50\u4e32\u53ea\u4f1a\u88ab\u7edf\u8ba1\u4e00\u6b21\uff08\u5206\u79bb\u53ea\u67091000\u6b21\uff0c\u4e0d\u5f71\u54cd\u590d\u6742\u5ea6\uff09\uff0c\u800c\u603b\u5171\u6709nk\u4e2a\u5b50\u4e32\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e3a\\(O(mk)\\)\u3002\n\n\u603b\u590d\u6742\u5ea6\\(O(ck^2+mk+\\sum |s|)\\)\u3002\n\u6ce8\u610f\uff1a\u6211\u7528\u7684hash\u65b9\u5f0f\u662f\u4e00\u4e2a\u5c0f\u54c8\u5e0c\u5b58\u90bb\u63a5\u8868\uff0c\u4e00\u4e2a\u5927\u54c8\u5e0c\u5f53\u6210\u771f\u5b9e\u503c\u6765\u68c0\u9a8c\u3002\n\n\nAC\u4ee3\u7801\n------------\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\ntypedef long long ll;\nconst int mod=998244353;\nconst int P=19260817;\nconst int N=P+10;\nconst int M=2e5+5;\nconst int B=17;\nint read()\n{\n  int ret=0,op=1,c=getchar();\n  while(c>'9' || c<'0')\n    {\n      if(c=='-') op=-1;\n      c=getchar();\n    }\n  while(c>='0' && c<='9')\n    {\n      ret=ret*10+c-'0';\n      c=getchar();\n    }\n  return ret*op;\n}\nint ecnt=0,head[N];\nint n,m;\nint nxt[M],lst[M],val[M];//nxt\u548clst\u4e3a\u7ef4\u62a4\u86af\u8693\u4f4d\u7f6e\u7684\u94fe\u8868\nll powB[100],pow10[100],qwq[100];\nchar s[10000005];\nstruct edge\n{\n  int next,cnt,last;\n  ll w;\n}e[N];\nvoid add(ll hash,ll q)//\u54c8\u5e0c\u8868\uff0c\u5982\u679c\u6709\u5bf9\u4e8ehash\u8fd9\u4e2a\u54c8\u5e0c\u503c\u6709q\u8fd9\u4e2a\u539f\u503c\u5219cnt++\uff0c\u5426\u5219\u65b0\u5f00\u4e00\u4e2a\u70b9\n{\n  //printf(\"add:%lld:%lld\\n\",hash,q);\n  for(int i=head[hash];i;i=e[i].next)\n    if(e[i].w==q)\n      {\n    e[i].cnt++;\n    return ;\n      }\n  e[++ecnt].cnt=1;\n  e[ecnt].w=q;\n  e[ecnt].next=head[hash];\n  head[hash]=ecnt;\n}\nvoid dlt(ll hash,ll q)//\u4e0eadd\u540c\u7406\n{\n  for(int i=head[hash];i;i=e[i].next)\n    if(e[i].w==q)\n      {\n    e[i].cnt--;\n    return ;\n      }\n}\nint query(ll hash,ll q)//\u4e0eadd\u540c\u7406\n{\n  for(int i=head[hash];i;i=e[i].next) if(e[i].w==q) return e[i].cnt;\n  return 0;\n}\nint s1[100],s2[100];\nvoid link(int u,int v)\n{\n  int l1=0,l2=0;\n  ll hsh=0,q=0,haxi=0,Q=0;\n  nxt[u]=v;\n  lst[v]=u;\n  for(int i=u;i&&l1<49;i=lst[i])\n    s1[++l1]=val[i],hsh=(hsh+val[i]*powB[l1-1])%P,q=q+val[i]*pow10[l1-1];//\u5c06u\u4e0eu\u4e4b\u524d\u6700\u957f50\u7684\u4e32\u53d6\u51fa\u6765\uff0c\u6ce8\u610f\u5728s1\u4e2d\u7684\u4e32\u662f\u53cd\u7740\u7684\n  for(int i=v;i&&l2<49;i=nxt[i]) s2[++l2]=val[i];\n  for(int i=l1;i>=1;i--)//s1\u662f\u53cd\u4e32\uff0c\u6700\u524d\u9762\u7684\u5b57\u7b26\u5728l1\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u5012\u5e8f\u679a\u4e3e\n    {\n      haxi=0;Q=0;\n      for(int j=1;j<=l2&&i+j<=50;j++)\n    {\n      haxi=(haxi*B+s2[j])%P;\n      Q=Q*10+s2[j];\n      add((hsh*powB[j]%P+haxi)%P,q*pow10[j]+Q);\n    }\n      hsh=((hsh-powB[i-1]*s1[i])%P+P)%P;\n      q=q-pow10[i-1]*s1[i];\n    }\n}\nvoid cut(int u,int v)//\u4e0elink\u540c\u7406\n{\n  int l1=0,l2=0;\n  ll hsh=0,q=0,haxi=0,Q=0;\n  nxt[u]=0;\n  lst[v]=0;\n  for(int i=u;i&&l1<49;i=lst[i])\n    s1[++l1]=val[i],hsh=(hsh+val[i]*powB[l1-1])%P,q=q+val[i]*pow10[l1-1];\n  for(int i=v;i&&l2<49;i=nxt[i]) s2[++l2]=val[i];\n  for(int i=l1;i>=1;i--)\n    {\n      haxi=0;Q=0;\n      for(int j=1;j<=l2&&i+j<=50;j++)\n    {\n      haxi=(haxi*B+s2[j])%P;\n      Q=Q*10+s2[j];\n      dlt((hsh*powB[j]%P+haxi)%P,q*pow10[j]+Q);\n    }\n      hsh=((hsh-powB[i-1]*s1[i])%P+P)%P;\n      q=q-pow10[i-1]*s1[i];\n    }\n}\nint main()\n{\n  n=read(),m=read();\n  for(int i=1;i<=n;i++) val[i]=read(),qwq[val[i]]++;\n  powB[0]=pow10[0]=1;\n  for(int i=1;i<=50;i++) powB[i]=powB[i-1]*B%P,pow10[i]=pow10[i-1]*10;\n  int op,x,y;\n  while(m--)\n    {\n      op=read();\n      if(op==1)\n    {\n      x=read(),y=read();\n      link(x,y);\n    }\n      else if(op==2)\n    {\n      x=read();\n      cut(x,nxt[x]);\n    }\n      else\n    {\n      int k;\n      scanf(\"%s%d\",s+1,&k);\n      int len=strlen(s+1);\n      ll hsh=0,q=0,ans=1;\n      if(k==1)//\u7279\u522b\u7684\uff0c\u5982\u679c\u8be2\u95ee\u957f\u5ea6\u4e3a1\u7684\u4e32\uff0c\u56e0\u4e3a\u4e4b\u524d\u6211\u4e5f\u6ca1\u6709\u52a0\u8fc7\uff0c\u6240\u4ee5\u5728\u8bfb\u5165\u7684\u65f6\u5019\u5f00\u4e00\u4e2a\u6876\u6765\u7edf\u8ba1\u7b54\u6848\n        {\n          for(int i=1;i<=len;i++) ans=ans*qwq[s[i]-'0']%mod;\n          printf(\"%lld\\n\",ans%mod);\n          continue;\n        }\n      for(int i=1;i<=k;i++)\n        {\n          hsh=(hsh*B+s[i]-'0')%P;\n          q=q*10+s[i]-'0';\n        }\n      // printf(\"(%lld)%lld->\",hsh,q);\n                  ans=query(hsh,q)%mod;\n      for(int i=k+1;i<=len;i++)\n        {\n          hsh=(((hsh-(s[i-k]-'0')*powB[k-1])%P+P)%P*B+s[i]-'0')%P;\n          q=((q-(s[i-k]-'0')*pow10[k-1]))*10+s[i]-'0';\n          //    printf(\"(%lld)%lld->\",hsh,q);\n                ans=ans*query(hsh,q)%mod;\n        }\n      printf(\"%lld\\n\",ans);\n    }\n    }\n  return 0;\n}\n```",
        "postTime": 1534646050,
        "uid": 109955,
        "name": "gongbangrui",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3823 \u3010[NOI2017]\u86af\u8693\u6392\u961f\u3011"
    },
    {
        "content": "**\u54c8\u5e0c**\n- \u601d\u8def\u4e3b\u8981\u662f\u628a\u5b57\u7b26\u4e32\u5f53\u6210\u6570\u770b\u5f85\u3002\n- \u5e38\u7528\u7684\u7f16\u7801\u662f\uff1a\n$$\\sum_{i=0}^na_ib^i\\bmod p$$\n- \u7136\u540e\u5ffd\u7565\u53ef\u80fd\u7684\u51b2\u7a81\u3002\uff08\uff1f\u6839\u636e\u751f\u65e5\u653b\u51fb\uff0c\u9996\u6b21\u51b2\u7a81\u7684\u6b21\u6570\u53ef\u80fd\u662f $\\sqrt n$ \u7ea7\u522b\u7684\uff09\n- \u5982\u679c\u613f\u610f\u53ef\u4ee5\u4f7f\u7528\u53cc\u54c8\u5e0c\u3002\n- \u5e38\u89c1\u6a21\u6570\uff1a\n$$19260817$$\n$$33333331$$\n$$23252729$$\n$$998244353$$\n$$10^9+7$$\n$$9223372036854775783(?$$\n\n**\u54c8\u5e0c\u8868**\n- \u4e0e\u54c8\u5e0c\u7684\u601d\u60f3\u7c7b\u4f3c\uff0c\u4f46\u4e0d\u540c\u7684\u662f\u6211\u4eec\u5fc5\u987b\u5f00\u4e00\u4e2a\u8ddf\u6a21\u6570 $p$ \u540c\u89c4\u6a21\u7684\u8868\uff0c\u51b2\u7a81\u4e0d\u53ef\u907f\u514d\u3002\n- \u653e\u4e00\u5f20\u4ee5\u524d\u5199\u675c\u8001\u5e08\u7b5b\u6cd5\u65f6\u6253\u7684\u4ee3\u7801\uff08\u6700\u6734\u7d20\u7684\u7ebf\u6027\u5bfb\u5740\uff0c\u88ab\u8bc1\u660e\u5728\u5e73\u5747\u60c5\u51b5\u4e0b\u63a5\u8fd1 $O(n)$\uff09\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/0mdgs0fk.png)\n- \u5176\u5b9e\u8fd8\u6709\u5f88\u591a\u505a\u6cd5\uff0c\u4f46\u4f5c\u8005\u8fd9\u91cc\u5c31\u4e0d\u4ecb\u7ecd\u4e86\uff0c\u4e0d\u8fc7\u8fd9\u6837\u5373\u4f7f\u6ca1\u6709\u88ab\u9488\u5bf9\u8fd8\u662f\u6709\u4e00\u5b9a\u5e38\u6570\u3002\n- \u8fd8\u6709\u4e00\u4e2a\u6709\u8da3\u7684\u5c0f\u95ee\u9898\uff1a\u54c8\u5e0c\u8868\u5b58\u5b57\u7b26\u4e32\u600e\u4e48\u529e\uff1f\n- \u62ff\u4e09\u4e2a\u8d28\u6570\uff0c\u89c4\u6a21\u5927\u6982\u5206\u522b\u5728 $10^9,10^9,10^7$ \u5de6\u53f3\uff0c\u5148\u53cc\u54c8\u5e0c\u6210\u957f\u6574\u578b\u518d\u653e\u8fdb\u54c8\u5e0c\u8868\uff08\u611f\u89c9\u5f88\u8ff7\uff09\u3002\n\n**\u4f8b\u9898**\n- \u7531\u4e8e\u5185\u5bb9\u5e76\u4e0d\u591a\u5c45\u7136\u5728\u8fd9\u91cc\u5f00\u4f8b\u9898\u4e86\uff01\n- [\u4f8b\u9898](https://www.luogu.com.cn/problem/P3823)\u3002\n- \u9898\u610f\u7b80\u8ff0\uff1a\u7ed9\u5b9a $n$ \u4e2a\u5b57\u7b26\uff0c\u652f\u6301 $3$ \u4e2a\u64cd\u4f5c\uff1a\u5408\u5e76\u5b57\u7b26\u4e32\uff0c\u5206\u79bb\u5b57\u7b26\u4e32\uff0c\u7edf\u8ba1\u6240\u6709\u5b57\u7b26\u4e32\u4e2d\uff0c\u4e0e $s$ \u6709\u76f8\u540c\u7684\u957f\u5ea6\u4e3a $k$ \u5b57\u4e32\u7684\u4e32\u7684\u4e2a\u6570\uff0c$k\\le 50$\u3002\n- \u5176\u5b9e\u5c31\u662f\u54c8\u5e0c\u8868\u5b58\u5b57\u7b26\u4e32\u7684\u5b9e\u9645\u5e94\u7528\u4e86\u3002\n- \u6240\u4ee5\u5f88\u6c34\u4e86\uff0c\u4f46\u4f5c\u8005\u53d1\u73b0\u81ea\u5df1\u5e76\u4e0d\u4f1a\u94fe\u8868 QWQ\u3002\n- \u65f6\u95f4\u590d\u6742\u5ea6\u6bdb\u4f30\u4f30\u5927\u6982\u662f $O(nk+ck^2+\\sum|s|)$\uff0c\u5361\u5e38\u540e\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n- \u7136\u540e\u5e76\u6ca1\u6709\u5361\u5e38\u5c31\u8fc7\u4e86\u3002\u3002\uff08\u4f46\u4f5c\u8005\u5411\u5de6\u548c\u5411\u53f3\u5ef6\u4f38\u7684 $l$ \u548c $r$ \u770b\u9519\u4e86\uff0c\u4f5c\u8005\u8c03\u8bd5\u7684\u65f6\u5019\u8111\u888b\u9700\u8981\u8f6c\u4e00\u4e0b\u554a\uff09\u3002\n- [\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/3lta6im2)\u3002",
        "postTime": 1640000747,
        "uid": 260884,
        "name": "WeLikeStudying",
        "ccfLevel": 0,
        "title": "\u3010\u5b57\u7b26\u4e32\u3011P3823"
    },
    {
        "content": "[\u6b64\u5904\u4f3c\u4e4e\u5927\u6982\u53ef\u80fd\u4f53\u9a8c\u66f4\u4f73\u3002](https://www.cnblogs.com/TetrisCandy/p/15382569.html)\n\n\u53d1\u73b0\u81ea\u5df1\u54c8\u5e0c\u7684\u65e0\u6570\u4e2a\u95ee\u9898\u2026\u2026\n\n\u9996\u5148\u86af\u8693\u53ef\u4ee5\u7528\u94fe\u8868\u7ef4\u62a4\u8fd9\u4e2a\u5e8f\u5217\u3002\n\n\u7136\u540e\u53d1\u73b0 $k$ \u5f88\u5c11\uff0c\u610f\u5473\u7740\u6bcf\u6b21\u5408\u5e76\u6216\u5220\u9664\u6240\u52a8\u7684\u5b50\u4e32\u6570\u91cf\u975e\u5e38\u5c11\u3002\u8fd9\u542f\u53d1\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u51fa\u73b0\u7684\u957f\u5ea6 $\\le k$ \u7684\u5b50\u4e32\u5168\u90e8\u901a\u8fc7\u54c8\u5e0c\u585e\u8fdb\u4e00\u4e2a\u6876\u91cc\u9762\uff0c\u7136\u540e\u67e5\u8be2\u7684\u65f6\u5019\u6211\u4eec\u76f4\u63a5\u518d\u6876\u4e2d\u67e5\u8be2\u3002\n\n\u5bf9\u4e8e\u5982\u4f55\u7ef4\u62a4\u8fd9\u4e2a\u6876\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6563\u5217\u8868\u3002\n\n\u5177\u4f53\u4e00\u70b9\u7684\u64cd\u4f5c\u3002\u5bf9\u4e8e\u5408\u5e76\uff0c\u6211\u4eec\u627e\u5230\u7b2c\u4e00\u4e2a\u961f\u4f0d\u9760\u8fd1\u5c3e\u5df4\u7684 $k$ \u4e2a\u548c\u7b2c\u4e8c\u4e2a\u961f\u4f0d\u7684\u9760\u8fd1\u5934\u7684 $k$ \u4e2a\uff0c\u7136\u540e\u627e\u5230\u6240\u6709\u7531\u4e24\u8fb9\u5408\u5e76\u6240\u5f97\u5230\u7684\u5b50\u4e32\uff0c\u54c8\u5e0c\u503c\u4e22\u8fdb\u6563\u5217\u3002\n\n\u5bf9\u4e8e\u5220\u9664\uff0c\u6211\u4eec\u540c\u6837\u7684\u8fd9\u6837\u64cd\u4f5c\uff0c\u628a\u4e24\u8fb9\u5408\u5e76\u5f97\u5230\u7684\u5b50\u4e32\u7ed9\u4ece\u6563\u5217\u4e2d\u6254\u51fa\u6765\u3002\u4e5f\u5c31\u662f\u5408\u5e76\u7684\u9006\u64cd\u4f5c\u3002\n\n\u5bf9\u4e8e\u67e5\u8be2\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u957f $k$ \u7684\u5b50\u4e32\uff0c\u5728\u6563\u5217\u8868\u4e2d\u67e5\u8be2\u5373\u53ef\u3002\n\n\u5206\u4eab\u4e00\u4e2a\u5173\u4e8e\u6211\u7684\u54c8\u5e0c\u7684\u6545\u4e8b\uff1a\u6211\u4e00\u5f00\u59cb\u7528\u4e86\u4e00\u4e2a\u5355\u6a21\u6570\u7684\u54c8\u5e0c\uff0c\u88ab\u5361\u4e86\uff1b\u7136\u540e\u7528\u4e86\u4e00\u4e2a\u53cc\u6a21\u7684\uff0cTLE \u4e86\uff1b\u7136\u540e\u53d1\u73b0\u54c8\u5e0c\u5e94\u8be5\u628a\u54c8\u5e0c\u548c\u957f\u5ea6\u5f53\u6210\u4e00\u4e2a pair \u53bb\u6bd4\u8f83\uff0c\u7136\u540e\u88ab\u5361\u4e86\uff1b\u7136\u540e\u6211\u6362\u6210\u81ea\u7136\u6ea2\u51fa\uff0cAC \u4e86\u3002\u3002\n\n\u5b9e\u9645\u4e0a\u8fd9\u6837\u662f\u6b63\u5e38\u7684\u3002\u81ea\u7136\u6ea2\u51fa\u6bd4 32 \u4f4d\u6574\u578b\u6a21\u6570\u7684\u5bb9\u91cf\u5927\u4e00\u500d\uff0c\u7136\u540e\u54c8\u5e0c\u7684\u503c\u5b58\u6210\u4e00\u4e2a\u7531\u54c8\u5e0c\u503c\u548c\u957f\u5ea6\u7ec4\u6210\u7684 pair \u7684\u8bdd\u4e5f\u53ef\u4ee5\u5927\u5927\u964d\u4f4e\u88ab\u5361\u7387\u3002\u81f3\u4e8e\u53cc\u6a21 TLE \u7684\u95ee\u9898\uff0c\u591a\u534a\u662f\u6211\u4eba\u50bb\u5e38\u719f\u5927 /qd\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\n#define per(i,a,b) for(int i=(a);i>=(b);i--)\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\ntypedef unsigned long long ull;\ntypedef pair<ull,int> pui;\n\nlong long read() {\n\tlong long res=0, w=1; char c=getchar();\n\twhile(!isdigit(c)) {if(c=='-') w=-1; c=getchar();}\n\twhile(isdigit(c)) {res=res*10+c-48, c=getchar();}\n\treturn res*w;\n}\n\nconst int N=2e5+9,mod=20070720+20061019+5250,base=131,dom=998244353;\n\nint n,m,len[N],a[10000001],cnt[9];\nchar s[10000001];\null b[N];\n\n\nint pre[N],nxt[N];\nvoid cut(int x) {pre[nxt[x]]=0,nxt[x]=0;}\nvoid unite(int x,int y) {nxt[x]=y,pre[y]=x;}\n\nnamespace HT {\n\tint hd[mod],nxt[mod],c[mod],tot;\n\tpui vp[mod];\n\tvoid add(pui x) {\n\t\tint val=x.fi%mod,u=hd[val];\n\t\twhile(u&&vp[u]!=x) u=nxt[u];\n\t\tif(!u) {vp[++tot]=x,c[tot]=1,nxt[tot]=hd[val],hd[val]=tot;}\n\t\telse c[u]++;\n\t}\n\tvoid del(pui x) {\n\t\tint val=x.fi%mod,u=hd[val];\n\t\twhile(u&&vp[u]!=x) u=nxt[u];\n\t\tif(!u) throw 404;\n\t\telse c[u]--;\n\t}\n\tint qry(pui x) {\n\t\tint val=x.fi%mod,u=hd[val];\n\t\twhile(u&&vp[u]!=x) u=nxt[u];\n\t\treturn c[u];\n\t}\n}\n\nint main() {\n\tn=read(), m=read();\n\trep(i,1,n) len[i]=read(), cnt[len[i]]++;\n\tb[0]=1; rep(i,1,100) b[i]=b[i-1]*base;\n\trep(i,1,m) {\n\t\tint opt=read();\n\t\tif(opt==1) {\n\t\t\tint x=read(), y=read();\n\t\t\tvi f(101); vector<ull> g(101);\n\t\t\tfor(int u=x,c=50;c;u=pre[u]) f[c--]=u;\n\t\t\tfor(int u=y,c=50;c<=100;u=nxt[u]) f[++c]=u;\n\t\t\trep(i,1,100) g[i]=g[i-1]*base+len[f[i]];\n\t\t\trep(l,1,50) if(f[l]) rep(r,51,100) if(f[r]&&r-l+1<=50) {\n\t\t\t\tull res=g[r]-g[l-1]*b[r-l+1];\n\t\t\t\tHT::add(pui(res,r-l+1));\n\t\t\t}\n\t\t\tunite(x,y);\n\t\t} else if(opt==2) {\n\t\t\tint x=read(), y=nxt[x];\n\t\t\tcut(x);\n\t\t\tvi f(101); vector<ull> g(101);\n\t\t\tfor(int u=x,c=50;c;u=pre[u]) f[c--]=u;\n\t\t\tfor(int u=y,c=50;c<=100;u=nxt[u]) f[++c]=u;\n\t\t\trep(i,1,100) g[i]=g[i-1]*base+len[f[i]];\n\t\t\trep(l,1,50) if(f[l]) rep(r,51,100) if(f[r]&&r-l+1<=50) {\n\t\t\t\tull res=g[r]-g[l-1]*b[r-l+1];\n\t\t\t\tHT::del(pui(res,r-l+1));\n\t\t\t}\n\n\t\t} else {\n\t\t\tscanf(\"%s\",s+1); int m=strlen(s+1), k=read();\n\t\t\trep(i,1,m) a[i]=s[i]-'0';\n\t\t\tint ans=1;\n\t\t\tif(k==1) {\n\t\t\t\trep(i,1,m) ans=1ll*ans*cnt[a[i]]%dom;\n\t\t\t\tprintf(\"%d\\n\",ans);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvector<ull> g(m+1);\n\t\t\trep(i,1,m) g[i]=g[i-1]*base+a[i];\n\t\t\trep(l,1,m-k+1) {\n\t\t\t\tint r=l+k-1; ull res=g[r]-g[l-1]*b[r-l+1];\n\t\t\t\tans=1ll*ans*HT::qry(pui(res,k))%dom;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1633693841,
        "uid": 180652,
        "name": "_lgswdn",
        "ccfLevel": 0,
        "title": "P3823 [NOI2017] \u86af\u8693\u6392\u961f"
    }
]