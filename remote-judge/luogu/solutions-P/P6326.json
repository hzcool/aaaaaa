[
    {
        "content": "\u8003\u8651\u82e5\u8fde\u901a\u5757\u5fc5\u987b\u5305\u542b $x$\uff0c\u90a3\u4e48\u5c31\u5bf9\u4ee5 $x$ \u4e3a\u6839\u7684\u6709\u6839\u6811\u505a\u6811\u5f62\u80cc\u5305\u3002\n\n\u8bbe $f_{i,j}$ \u4e3a\u8003\u8651\u4e86 $dfs$ \u5e8f\u4e2d $[i,n]$ \u5bf9\u5e94\u7684\u8282\u70b9\uff0c\u4f53\u79ef\u4e3a $j$ \u7684\u6700\u5927\u4ef7\u503c\u3002\u8f6c\u79fb\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\u4e00\u4e2a\u662f\u9009 $i$ \u5bf9\u5e94\u7684\u8282\u70b9\uff0c\u7136\u540e\u5bf9\u8be5\u8282\u70b9\u7684\u7269\u54c1\u8dd1\u591a\u91cd\u80cc\u5305\uff0c\u6211\u8fd9\u91cc\u7528\u7684\u662f\u4e8c\u8fdb\u5236\u62c6\u5206\u6765\u4f18\u5316\u3002\u53e6\u4e00\u4e2a\u662f\u4e0d\u9009 $i$ \u5bf9\u5e94\u7684\u8282\u70b9\uff0c\u7136\u540e\u4ece\u8be5\u8282\u70b9\u5b50\u6811\u5916\u8f6c\u79fb\u8fc7\u6765\uff0c\u8fd9\u91cc\u53ef\u4ee5\u5728 $dfs$ \u5e8f\u4e0a\u8868\u793a\u8f6c\u79fb\u7684\u4f4d\u7f6e\u3002\n\n\u8fde\u901a\u5757\u4e0d\u5305\u542b $x$ \u7684\u60c5\u51b5\u53ef\u4ee5\u7528\u70b9\u5206\u6cbb\u6765\u9012\u5f52\u5904\u7406\u3002\n\n\u590d\u6742\u5ea6\u4e3a $O(nm\\log d\\log n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 1010\n#define maxm 4010\nusing namespace std;\ntemplate<typename T> inline void read(T &x)\n{\n    x=0;char c=getchar();bool flag=false;\n    while(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    if(flag)x=-x;\n}\nint T,n,m,ans,tot,root,cnt;\nint w[maxn],c[maxn],d[maxn],f[maxn][maxm],siz[maxn],mx[maxn],out[maxn],rev[maxn];\nbool vis[maxn];\nstruct edge\n{\n    int to,nxt;\n}e[maxn];\nint head[maxn],edge_cnt;\nvoid add(int from,int to)\n{\n    e[++edge_cnt]={to,head[from]},head[from]=edge_cnt;\n}\nstruct node\n{\n    int v,w;\n}p[maxn];\nvoid dfs_root(int x,int fa)\n{\n    siz[x]=1,mx[x]=0;\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        int y=e[i].to;\n        if(vis[y]||y==fa) continue;\n        dfs_root(y,x),siz[x]+=siz[y];\n        mx[x]=max(mx[x],siz[y]);\n    }\n    mx[x]=max(mx[x],tot-siz[x]);\n    if(mx[x]<mx[root]) root=x;\n}\nvoid dfs_dfn(int x,int fa)\n{\n    rev[++cnt]=x;\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        int y=e[i].to;\n        if(vis[y]||y==fa) continue;\n        dfs_dfn(y,x);\n    }\n    out[x]=cnt;\n}\nvoid solve(int x)\n{\n    vis[x]=true,cnt=0,dfs_dfn(x,0);\n    for(int i=cnt;i;--i)\n    {\n        int s=d[rev[i]]-1,num=0;\n        for(int j=1;j<=s;s-=j,j<<=1) p[++num]={w[rev[i]]*j,c[rev[i]]*j};\n        if(s) p[++num]={w[rev[i]]*s,c[rev[i]]*s};\n        for(int j=m;j>=c[rev[i]];--j) f[i][j]=f[i+1][j-c[rev[i]]]+w[rev[i]];\n        for(int k=1;k<=num;++k)\n            for(int j=m;j>=p[k].w;--j)\n                f[i][j]=max(f[i][j],f[i][j-p[k].w]+p[k].v);\n        for(int j=0;j<=m;++j) f[i][j]=max(f[i][j],f[out[rev[i]]+1][j]);\n    }\n    ans=max(ans,f[1][m]);\n    for(int i=1;i<=cnt;++i)\n        for(int j=0;j<=m;++j)\n            f[i][j]=0;\n    int now=tot;\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        int y=e[i].to;\n        if(vis[y]) continue;\n        root=0,tot=siz[y];\n        if(siz[y]>siz[x]) tot=now-siz[x];\n        dfs_root(y,x),solve(root);\n    }\n}\nvoid clear()\n{\n    edge_cnt=root=ans=0;\n    memset(vis,0,sizeof(vis));\n    memset(head,0,sizeof(head));\n}\nint main()\n{\n    read(T);\n    while(T--)\n    {\n        clear(),read(n),read(m);\n        for(int i=1;i<=n;++i) read(w[i]);\n        for(int i=1;i<=n;++i) read(c[i]);\n        for(int i=1;i<=n;++i) read(d[i]);\n        for(int i=1;i<n;++i)\n        {\n            int x,y;\n            read(x),read(y);\n            add(x,y),add(y,x);\n        }\n        tot=mx[0]=n,dfs_root(1,0),solve(root),printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1600410007,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6326 \u3010Shopping\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u5f88\u4e0d\u5bfb\u5e38\u7684\u9898\u554a\u3002\n\n\u9996\u5148\u5bb9\u6613\u53d1\u73b0\u9898\u76ee\u8bf4\u7684\u5c31\u662f\u6240\u6709\u81f3\u5c11\u4e70\u4e86\u4e00\u4e2a\u7684\u70b9\u5fc5\u987b\u6784\u6210\u8fde\u901a\u5757\u3002\u8003\u8651\u5728\u6811\u4e0a\u8dd1\u80cc\u5305\uff0c\u90a3\u5fc5\u987b\u662f\u6709\u6839\u7684\u3002\u968f\u4fbf\u8bbe $1$\u200b \u4e3a\u6839\uff0c\u7136\u540e\u89c4\u5b9a\u82e5 $x$\u200b \u9009\u4e86\uff0c\u5219 $x$\u200b \u7684\u6240\u6709\u7956\u5148\u90fd\u5fc5\u987b\u9009\uff0c\u8fd9\u6837\u968f\u540e\u8c03\u7528 $1$\u200b \u7684 DP \u6570\u7ec4\u5373\u53ef\u5f97\u5230\u5fc5\u987b\u9009 $1$ \u65f6\u7684\u7b54\u6848\u3002\u8bbe $dp_{i,j}$ \u4e3a\u5b50\u6811 $i$ \u5185\u82b1\u4e86\u4e0d\u8d85\u8fc7 $j$ \u5143\u94b1\u5f97\u5230\u7684\u6700\u5927\u6536\u76ca\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u5c06\u82e5\u5e72\u513f\u5b50\u6811\u7684 DP \u6570\u7ec4\u5408\u5e76\u8d77\u6765\uff0c\u7136\u540e\u5c06 $i$ \u52a0\u5165\u3002\u8fd9\u6837\u4f60\u4f1a\u53d1\u73b0\uff0c\u6839\u672c\u4e0d\u9700\u8981\u4ee4\u6bcf\u4e2a\u70b9\u4e3a\u6839\u8dd1\u4e00\u904d\uff0c\u56e0\u4e3a\u4e00\u4e2a\u8fde\u901a\u5757\u5728\u6709\u6839\u6811\u4e0a\u7684\u6700\u6d45\u70b9\u662f\u552f\u4e00\u7684\uff0c\u76f4\u63a5\u679a\u4e3e\u6240\u6709\u70b9 $x$ \u4f5c\u4e3a\u6700\u6d45\u70b9\uff0c\u7b54\u6848\u5c31\u662f\u5b83\u7684 $dp_{x,m}$\uff0cmax \u8d77\u6765\u5373\u53ef\u3002\n\n\u8fd9\u4e2a\u6811\u5f62\u80cc\u5305\u8ddf\u666e\u901a\u7684\u590d\u6742\u5ea6\u53ef\u4ee5\u5206\u6790\u5230 $\\mathrm O(nm)$ \u7684\u4e0d\u540c\uff0c\u8fd9\u73a9\u610f\u662f\u57fa\u4e8e\u503c\u57df\u7684\uff0c\u80cc\u5305\u5927\u5c0f\u5e76\u6ca1\u6709\u548c size \u53d6 min\uff0c\u6bcf\u6b21\u5408\u5e76\u662f\u4e25\u683c $\\mathrm O\\!\\left(m^2\\right)$ \u7684\uff0c\u603b\u590d\u6742\u5ea6\u662f $\\mathrm O\\!\\left(nm^2\\right)$\uff0c\u63a5\u53d7\u4e0d\u4e86\u3002\u6ce8\u610f\u5230\u5c06 $i$ \u52a0\u5165\u8fd9\u4e2a\u64cd\u4f5c\u5b9e\u9645\u4e0a\u662f\u591a\u91cd\u80cc\u5305\u52a0\u5165\u4e00\u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\u5230 $\\mathrm O(m)$\uff0c\u7136\u5e76\u5375\uff01\u6bd5\u7adf\u590d\u6742\u5ea6\u74f6\u9888\u5728\u4e8e\u80cc\u5305\u7684\u300c\u5408\u5e76\u300d\u3002\n\n\u6211\u4eec\u73b0\u5728\u8ba4\u4e3a\u5fc5\u987b\u8981\u6839\u9664\u80cc\u5305\u7684\u5408\u5e76\u64cd\u4f5c\u3002\u6b64\u65f6\u5f15\u51fa\u4e00\u4e2a\u79d1\u6280\uff1a\u6811\u4e0a\u4f9d\u8d56\u6027\u80cc\u5305\u3002\u95ee\u9898\u5c31\u662f\u8bf4\u5728\u6709\u6839\u6811\u4e0a\uff0c$x$\u200b \u9009\u4e86\u5219\u5fc5\u987b\u9009\u6240\u6709\u7956\u5148\u7684\u4e00\u4e2a\u80cc\u5305\uff0c\u65e0\u8bba\u662f 01 \u8fd8\u662f\u5b8c\u5168\u8fd8\u662f\u591a\u91cd\u3002\u8fd9\u73a9\u610f\u9664\u4e86\u4e0a\u8ff0\u7684\u66b4\u529b\u5408\u5e76\u80cc\u5305\u7684 DP \u505a\u6cd5\uff0c\u8fd8\u6709\u4e2a\u6bd4\u8f83\u5999\u7684\u4e0d\u5e26\u5408\u5e76\u64cd\u4f5c\u7684 DP \u505a\u6cd5\u3002  \n\u6211\u4eec\u8003\u8651\u50cf\u4e00\u4e2a\u65b0\u7684 DP \u9898\u4e00\u6837\u4ece\u5934\u5f00\u59cb\u8003\u8651\uff1a\u4e00\u5f00\u59cb\u7684\u5c40\u9762\u662f $1\\sim n$\u200b \u6240\u6709\u70b9\u672a\u51b3\u7b56\uff0c\u73b0\u5728\u8003\u8651\u51b3\u7b56 $1$\u200b\u3002\u5982\u679c\u4e0d\u9009 $1$\u200b \u90a3\u5c31\u76f4\u63a5\u7ed3\u675f\u8d70\u4eba\u5427\uff01\u5426\u5219\u5269\u4e0b $2\\sim n$\u200b \u9700\u8981\u51b3\u7b56\uff0c\u505a\u5b8c\u4e4b\u540e\u8fd4\u56de\u4e00\u4e2a\u80cc\u5305\u518d\u5c06 $1$\u200b \u63d2\u5165\u3002\u73b0\u5728\u95ee\u9898\u8f6c\u5316\u4e3a $2\\sim n$\u200b\u3002\u6ce8\u610f\u5230\u8fd9\u91cc\u7684\u7cbe\u9ad3\uff1a\u6211\u4eec\u5e76\u6ca1\u6709\u5c06 $2\\sim n$\u200b \u62c6\u6210\u82e5\u5e72\u513f\u5b50\u6811\u518d\u5408\u5e76\uff0c\u800c\u662f\u76f4\u63a5\u5f53\u505a\u4e00\u4e2a\u6574\u4f53\uff01\u6bd5\u7adf\u5b83\u672c\u6765\u5c31\u662f\u4e00\u4e2a\u6574\u4f53\uff0c\u4e3a\u5565\u8981\u62c6\u5f00\u518d\u5408\u5e76\u5462\uff1f\uff08\u666e\u901a\u6811\u5f62 DP \u8fd9\u4e48\u505a\u662f\u56e0\u4e3a\u4e0d\u4f1a\u6709\u300c\u5408\u5e76\u590d\u6742\u5ea6\u5927\uff0c\u63d2\u5165\u590d\u6742\u5ea6\u5c0f\u300d\u8fd9\u6837\u5947\u602a\u7684\u4e8b\u60c5\u53d1\u751f\uff0c\u5728\u8fd9\u4e2a\u524d\u63d0\u4e0b\u6bcf\u4e2a\u5b50\u6811\u4f5c\u4e3a\u5b50\u95ee\u9898\u663e\u7136\u662f\u597d\u7406\u89e3\u7684\uff09  \n\u73b0\u5728\u5047\u8bbe $2$\u200b \u662f $1$\u200b \u7684\u513f\u5b50\uff0c\u5bf9 $2$\u200b \u8fdb\u884c\u51b3\u7b56\u3002\u5982\u679c\u9009\u7684\u8bdd\u90a3\u5c31 $3\\sim n$\u200b \u8d70\u8d77\uff1b\u5426\u5219\u5269\u4e0b $\\{2\\sim n\\}-\\mathrm{subt}(2)$\u200b\u3002\u5bf9\u540e\u8005\u4e0b\u4e00\u6b65\u5e94\u8be5\u9009 $1$\u200b \u7684\u4e0b\u4e00\u4e2a\u513f\u5b50\u5bf9\u5427\u8fd9\u5f88\u81ea\u7136\u3002\u5bf9\u524d\u8005\u5462\uff1f\u5982\u679c\u4e5f\u9009 $1$\u200b \u7684\u4e0b\u4e00\u4e2a\u513f\u5b50\uff0c\u90a3\u4e48\u5f97\u5230\u7684\u72b6\u6001\u5c31\u662f $V$\u200b\u200b \u53bb\u6389\u4e00\u4e2a\u513f\u5b50\u6811\u518d\u53bb\u6389\u4e00\u4e2a\u513f\u5b50\u6811\u7684\u6839\uff1f\uff1f\uff1f\u8fd9\u72b6\u6001\u5c31\u663e\u5f97\u652f\u79bb\u7834\u788e\uff0c\u6ca1\u6cd5\u5c01\u95ed\u3002\u63a5\u4e0b\u6765\u5b98\u65b9\u7ed9\u51fa\u7684\u4e0b\u4e00\u6b65\u51b3\u7b56\u7684\u65b9\u6848\u662f\u8fd9\u4e2a\u7b97\u6cd5\u7684\u7cbe\u9ad3\uff1a\u9009 $3\\sim n$\u200b \u4e2d dfn \u6700\u5c0f\u7684\u3002\u5c31\u5047\u8bbe $dfn_i=i$\u200b \u5427\uff0c\u5982\u679c\u9009\u7684\u8bdd\u8f6c\u5316\u5230 $4\\sim n$\u200b\uff0c\u5426\u5219\u53bb\u9664 $\\mathrm{subt}(3)$\u200b\uff0c\u800c\u6ce8\u610f\u5230 $3$\u200b \u5b50\u6811\u91cc\u7684\u70b9\u90fd\u5927\u4e8e $3$\u200b\uff0c\u800c\u4e14\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u662f $3\\sim n$\u200b \u7684\u524d\u7f00\uff0c\u53bb\u6389\u4e4b\u540e\u5f97\u5230 $1\\sim n$\u200b \u7684\u67d0\u4e2a\u540e\u7f00\u3002\u8fd9\u6837\u6211\u4eec\u53ea\u8981\u5bf9\u6bcf\u4e2a\u72b6\u6001\u90fd\u5bf9 dfn \u6700\u5c0f\u7684\u70b9\u8fdb\u884c\u51b3\u7b56\uff0c\u8f6c\u79fb\u5230\u7684\u72b6\u6001\u5c31\u53ef\u4ee5\u5c01\u95ed\u5728\u300cdfn \u540e\u7f00\u300d\u8fd9\u4ec5\u4ec5 $\\mathrm O(n)$\u200b\u200b \u4e2a\u72b6\u6001\u91cc\uff0c\u800c\u4e14\u6bcf\u6b21\u8f6c\u79fb\u90fd\u662f\u52a0\u5165\u4e00\u4e2a\u70b9\u7684\u64cd\u4f5c\u3002\n\n\u901a\u8fc7\u4e0a\u8ff0\u79d1\u6280\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u5728 $\\mathrm O(nm)$ \u65f6\u95f4\u5185\u8ba1\u7b97\u51fa\u8fde\u901a\u5757\u5fc5\u987b\u5305\u542b $1$ \u7684\u7b54\u6848\u3002\u4f46\u8fd9\u6837\u4e00\u4e2a\u574f\u5904\u662f\u4e0d\u80fd\u987a\u4fbf\u5f97\u5230\u8fde\u901a\u5757\u6700\u6d45\u8282\u70b9\u4e3a\u5176\u5b83\u70b9\u7684\u7b54\u6848\u4e86\u3002\u90a3\u96be\u9053\u8981\u5bf9\u6bcf\u4e2a\u70b9\u90fd\u8dd1\u4e00\u904d\u5417\uff1f\u8fd9\u6837\u662f $\\mathrm O\\!\\left(n^2m\\right)$\uff0c\u867d\u7136\u6bd4\u539f\u6765\u7684\u505a\u6cd5\u4f18\uff0c\u4f46\u8fd8\u662f\u8fc7\u4e0d\u53bb\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u8003\u8651\u8fc7\u5305\u542b $1$ \u7684\u60c5\u51b5\uff0c\u5269\u4e0b\u4e0d\u5305\u542b $1$ \u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u5fc5\u987b\u5728 $1$ \u7684\u82e5\u5e72\u4e2a\u513f\u5b50\u6811\u7684\u5176\u4e2d\u4e4b\u4e00\uff0c\u5c31\u8f6c\u5316\u4e3a\u4e86\u5b50\u95ee\u9898\uff0c\u9012\u5f52\u4e0b\u53bb\u3002\u53ef\u4ee5\u7528\u70b9\u5206\u6cbb\u6765\u9650\u5236\u5c42\u6570\uff0c\u8fbe\u5230 $\\mathrm O(nm\\log n)$\u3002\u8fd9\u91cc\u70b9\u5206\u6cbb\u4e0d\u518d\u662f\u7edf\u8ba1\u8def\u5f84\uff0c\u800c\u662f\u7edf\u8ba1\u8fde\u901a\u5757\uff0c\u4e5f\u5f88\u81ea\u7136\u5bf9\u5427\uff1f\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define pb push_back\nconst int inf=0x3f3f3f3f3f3f3f3f;\nconst int N=510,M=4010;\nint n,m;\nint v[N],w[N],lim[N];\nvector<int> nei[N];\nbool vis[N];\nint dfn[N],mxdfn[N],nowdfn,mng[N];\nvoid dfs(int x,int fa=0){\n\tmng[dfn[x]=mxdfn[x]=++nowdfn]=x;\n\tfor(int i=0;i<nei[x].size();i++){\n\t\tint y=nei[x][i];if(y==fa||vis[y])continue;\n\t\tdfs(y,x);\n\t\tmxdfn[x]=mxdfn[y];\n\t}\n}\nint dp[N][M];\nint q[M],head,tail;\nint ans;\nint sz[N],mxsz[N];\nbool cmp(int x,int y){return mxsz[x]<mxsz[y];}\nint gtrt(int x=1,int tot=n,int fa=0){\n\tsz[x]=1,mxsz[x]=0;\n\tint rt=0;\n\tfor(int i=0;i<nei[x].size();i++){\n\t\tint y=nei[x][i];if(y==fa||vis[y])continue;\n\t\trt=min(rt,gtrt(y,tot,x),cmp);\n\t\tsz[x]+=sz[y],mxsz[x]=max(mxsz[x],sz[y]);\n\t}\n\tmxsz[x]=max(mxsz[x],tot-sz[x]);\n\treturn min(rt,x,cmp);\n}\nvoid cdq(int x){\n\tnowdfn=0,dfs(x);\n\tmemset(dp[nowdfn+1],0,sizeof(dp[0]));\n\tfor(int i=nowdfn;i;i--){\n\t\tint u=mng[i];\n\t\tfor(int j=0;j<=m;j++)dp[i][j]=dp[mxdfn[u]+1][j];\n\t\tfor(int j=0;j<w[u]&&j<=m;j++){\n\t\t\thead=tail=0;\n\t\t\tfor(int k=j;k<=m;k+=w[u]){\n\t\t\t\tif(k>=w[u]){\n\t\t\t\t\twhile(head<tail&&dp[i+1][q[tail-1]]-q[tail-1]/w[u]*v[u]<=dp[i+1][k-w[u]]-(k-w[u])/w[u]*v[u])tail--;\n\t\t\t\t\tq[tail++]=k-w[u];\n\t\t\t\t}\n\t\t\t\twhile(head<tail&&(k-q[head])/w[u]>lim[u])head++;\n\t\t\t\tif(head<tail)dp[i][k]=max(dp[i][k],dp[i+1][q[head]]+(k-q[head])/w[u]*v[u]);\n\t\t\t}\n\t\t}\n\t}\n\tans=max(ans,dp[1][m]);\n\tvis[x]=true;\n\tfor(int i=0;i<nei[x].size();i++){\n\t\tint y=nei[x][i];if(vis[y])continue;\n\t\tcdq(gtrt(y,sz[y]));\n\t}\n}\nvoid mian(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)nei[i].clear();\n\tfor(int i=1;i<=n;i++)scanf(\"%lld\",v+i);\n\tfor(int i=1;i<=n;i++)scanf(\"%lld\",w+i);\n\tfor(int i=1;i<=n;i++)scanf(\"%lld\",lim+i);\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\tnei[x].pb(y),nei[y].pb(x);\n\t}\n\tmemset(vis,0,sizeof(vis));\n\tans=0,cdq(gtrt());\n\tcout<<ans<<\"\\n\";\n}\nsigned main(){mxsz[0]=inf;\n\tint t;\n\tcin>>t;\n\twhile(t--)mian();\n\treturn 0;\n}\n```\n",
        "postTime": 1649663866,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "P6326"
    },
    {
        "content": "## \u3010\u70b9\u5206\u6cbb & dp\u3011\u3010P6326\u3011Shopping\n\n### Description\n\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u6709\u4e00\u79cd\u7269\u54c1\uff0c\u4ef7\u683c\u4e3a $c_i$\uff0c\u6570\u91cf\u4e3a $d_i$\uff0c\u4ef7\u503c\u4e3a $w_i$\u3002\u8bf7\u9009\u4e00\u4e9b\u7269\u54c1\uff0c\u6700\u5927\u5316\u4ef7\u503c\u548c\u3002\u6240\u9009\u7269\u54c1\u6240\u5c5e\u7684\u7684\u8282\u70b9\u5fc5\u987b\u6784\u6210\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\n### Analysis\n\n\u8003\u8651\u70b9\u5206\u6cbb\uff0c\u5efa\u51fa\u70b9\u5206\u6811\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u91cd\u5fc3\u7edf\u8ba1\u5fc5\u8fc7\u8be5\u8282\u70b9\u7684\u7b54\u6848\u3002\n\n\u5982\u679c\u76f4\u63a5\u8dd1\u6811\u5f62 dp \u7684\u8bdd\uff0c\u5728\u8282\u70b9\u5904\u8f6c\u79fb\u662f $O(m^2)$ \u7684\uff0c\u65e0\u6cd5\u63a5\u53d7\u3002\n\n\u8003\u8651\u4ece\u91cd\u5fc3\u8fdb\u884c dfs\uff0c\u4e00\u8fb9 dfs \u4e00\u8fb9 dp \u5f53\u524d\u8282\u70b9\u7684\u7b54\u6848\uff0c\u5728 dp \u8fc7\u7a0b\u4e2d\u9700\u8981\u4fdd\u8bc1\u8be5\u8282\u70b9\u5230\u91cd\u5fc3\u7684\u94fe\u90fd\u81f3\u5c11\u9009\u4e86\u4e00\u4e2a\u7269\u54c1\u3002\n\n\u8bbe $f_{i}$ \u662f\u8003\u8651\u5df2\u7ecf\u904d\u5386\u8fc7\u7684\u8282\u70b9\uff0c\u82b1\u4e86 $i$ \u5143\u7684\u6700\u5927\u4ef7\u503c\u3002\u5728\u904d\u5386\u5230\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u5148\u5c06\u5df2\u6709\u7684 dp \u503c\u5b58\u50a8\u4e00\u4e0b\uff0c\u7136\u540e\u5728\u8be5\u8282\u70b9\u5f3a\u884c\u9009\u4e00\u4e2a\u7269\u54c1\uff0c\u5bf9\u4e8e\u8be5\u8282\u70b9\u5269\u4e0b\u7684\u7269\u54c1\u8dd1\u591a\u91cd\u80cc\u5305\uff0c\u7136\u540e\u9012\u5f52\u8be5\u8282\u70b9\u7684\u5b50\u8282\u70b9\u5373\u53ef\u3002\n\n\u5f53\u7136\uff0c\u4e5f\u6709\u53ef\u80fd\u8be5\u8282\u70b9\u548c\u5176\u5b50\u6811\u90fd\u4e0d\u9009\uff0c\u6240\u4ee5\u5728\u56de\u6eaf\u65f6\uff0c\u5c06\u6bcf\u4e2a dp \u503c\u90fd\u4e0e\u8fdb\u5165\u8be5\u8282\u70b9\u662f\u5b58\u50a8\u7684 dp \u503c\u53d6\u4e2a max \u5373\u53ef\u3002\n\n\u8003\u8651\u590d\u6742\u5ea6\uff1a\u904d\u5386\u8282\u70b9\u7684\u590d\u6742\u5ea6\u662f $O(n \\log n)$\uff0cdp \u8fc7\u7a0b\u662f\u4e00\u4e2a\u591a\u91cd\u80cc\u5305\uff0c\u6734\u7d20\u505a\u7684\u590d\u6742\u5ea6\u662f $O(nm \\log n \\max d)$\uff0c\u5355\u8c03\u961f\u5217\u4f18\u5316\u7684\u590d\u6742\u5ea6\u662f $O(nm \\log n)$\uff0c\u4ee3\u7801\u91cc\u9009\u62e9\u7684\u662f\u4e8c\u8fdb\u5236\u5206\u7ec4\uff0c\u590d\u6742\u5ea6 $O(nm \\log n \\log d)$\u3002\n\n\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u5c51\u82b1\u7684\u5355\u8c03\u961f\u5217\u8dd1\u7684\u6bd4\u6211\u4e8c\u8fdb\u5236\u5206\u7ec4\u8fd8\u6162\u597d\u51e0\u500d\uff08\n\n### Code\n\n```cpp\nconst int maxn = 505;\nconst int maxm = 4005;\nconst int INF = 0x3f3f3f3f;\n\nvoid Init();\nvoid Calc();\nvoid Clear();\nvoid Divide();\n\nint main() {\n  freopen(\"1.in\", \"r\", stdin);\n  int t;\n  for (qr(t); t; --t) {\n    Clear();\n    Init();\n    Divide();\n    Calc();\n  }\n  return 0;\n}\n\nint n, m;\nint w[maxn], c[maxn], d[maxn];\nstd::vector<int> e[maxn];\n\nvoid Init() {\n  qr(n); qr(m);\n  qra(w + 1, n);\n  qra(c + 1, n);\n  qra(d + 1, n);\n  for (int i = 1, u, v; i < n; ++i) {\n    qr(u); qr(v);\n    e[u].push_back(v);\n    e[v].push_back(u);\n  }\n}\n\nint sz[maxn], wson[maxn];\nbool vis[maxn];\nstd::vector<int> pit;\n\nvoid GetSz(const int u) {\n  sz[u] = 1;\n  vis[u] = true;\n  pit.push_back(u);\n  wson[u] = 0;\n  for (auto v : e[u]) if (vis[v] == false) {\n    GetSz(v);\n    sz[u] += sz[v];\n    if (sz[v] > sz[wson[u]]) wson[u] = v;\n  }\n  vis[u] = false;\n}\n\nint GetRoot(const int rt) {\n  pit.clear();\n  GetSz(rt);\n  int maxs = n, rot = 0;\n  for (auto u : pit) {\n    int v = std::max(sz[wson[u]], sz[rt] - sz[u] - 1);\n    if (v < maxs) {\n      rot = u;\n      maxs = v;\n    }\n  }\n  return rot;\n}\n\nstd::vector<int> dtree; // divided tree\nvoid divide(const int u) {\n  vis[u] = true;\n  dtree.push_back(u);\n  for (auto v : e[u]) if (vis[v] == false) {\n    int rt = GetRoot(v);\n    divide(rt);\n  }\n}\n\nvoid Divide() {\n  int rt = GetRoot(1);\n  divide(rt);\n}\n\nint f[maxm], g[maxn][maxm];\nvoid dfs(const int u, int sw) {\n  if ((sw += c[u]) > m) return;\n  int sm = sw;\n  vis[u] = true;\n  for (int i = 0; i <= m; ++i) g[u][i] = f[i];\n  for (int i = m; i >= sm; --i) f[i] = f[i - c[u]] + w[u];\n  for (int i = 0; i < sm; ++i) f[i] = -INF;\n  int j = 1, tw = w[u], tc = c[u], sum = j;\n  while (sum < d[u]) {\n    for (int i = m; (i - tc) >= sw; --i) {\n      f[i] = std::max(f[i], f[i - tc] + tw);\n    }\n    sum += (j <<= 1); tw <<= 1; tc <<= 1;\n  }\n  if (j != 1) {\n    j = d[u] - 1 - (sum - j);\n    tw = w[u] * j; tc = c[u] * j;\n    for (int i = m; (i - tc) >= sw; --i) {\n      f[i] = std::max(f[i], f[i - tc] + tw);\n    }\n  }\n  for (auto v : e[u]) if (vis[v] == false) {\n    dfs(v, sw);\n  }\n  for (int i = 0; i <= m; ++i) f[i] = std::max(f[i], g[u][i]);\n  vis[u] = false;\n}\n\nvoid Calc() {\n  for (int i = 1; i <= n; ++i) vis[i] = false;\n  int ans = 0;\n  for (auto u : dtree) {\n    for (int i = 0; i <= m; ++i) f[i] = 0;\n    dfs(u, 0);\n    vis[u] = true;\n    for (int i = 1; i <= m; ++i) {\n      ans = std::max(ans, f[i]);\n    }\n  }\n  qw(ans, '\\n');\n}\n\nvoid Clear() {\n  for (int i = 1; i <= n; ++i) {\n    vis[i] = false;\n    e[i].clear();\n  }\n  for (int i = 1; i <= m; ++i) f[i] = 0;\n  dtree.clear();\n}\n```\n\n",
        "postTime": 1586436532,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6326 \u3010Shopping\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u5bf9\u4e8e\u4e00\u9897\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u4e00\u4e2a\u591a\u91cd\u80cc\u5305\uff0c\u95ee\u9009\u62e9\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u6700\u4f18\u89e3\u3002\n\n### \u524d\u7f6e\u77e5\u8bc6\n\n+ \u591a\u91cd\u80cc\u5305\u7684\u4e8c\u8fdb\u5236\u4f18\u5316\n\n\u8fd9\u4e2a\u5e94\u8be5\u5927\u5bb6\u90fd\u4f1a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(nm \\log D)$\u3002\n\n+ \u70b9\u5206\u6cbb \n\n\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u628a\u4e00\u9897\u6811\uff0c\u5148\u53d6\u4e00\u68f5\u6811\u7684\u91cd\u5fc3\uff0c\u5728\u88ab\u91cd\u5fc3\u62c6\u5206\u7684\u82e5\u5e72\u9897\u5b50\u6811\u4e2d\uff0c\u7ee7\u7eed\u53d6\u91cd\u5fc3\uff0c\u8fdb\u884c\u5206\u6cbb\u3002\u53ef\u4ee5\u8bc1\u660e\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n \\log n)$ \u7684\u3002\n\n+ dfs \u5e8f\u4f18\u5316\u6811\u5f62 DP\u3002\n\n\u6211\u4eec\u628a\u5bf9\u4e8e\u5b50\u6811\u7684 DP \u8f6c\u5316\u6210\u4e00\u4e2a\u5e8f\u5217\u7684 DP\u3002\u5982\u679c\u53d6\u8fd9\u4e2a\u8282\u70b9\uff0c\u5c31\u4ece dfs \u5e8f\u7684\u4e0b\u4e00\u4e2a\uff08\u4e5f\u5c31\u662f\u81ea\u5df1\u6700\u5148\u904d\u5386\u7684\u5b50\u8282\u70b9\uff09\u8f6c\u79fb\u8fc7\u6765\uff1b\u5426\u5219\uff0c\u5c31\u4ece\u81ea\u5df1\u5b50\u6811\u5185\u6700\u5927\u7684 dfs \u5e8f\u7684\u4e0b\u4e00\u4e2a\u8f6c\u79fb\u8fc7\u6765\u3002\n\n### \u5206\u6790\n\n\u9996\u5148\uff0c\u7531\u4e8e\u662f\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u53d6\u4e00\u4e2a\u8282\u70b9\u4e3a\u6839\u3002\u6211\u4eec\u91c7\u7528\u70b9\u5206\u6cbb\uff0c\u5148\u9009\u53d6\u91cd\u5fc3\u4e3a\u6839\uff0c\u5728\u6bcf\u4e2a\u5b57\u6811\u79cd\u7ee7\u7eed\u9009\u53d6\u91cd\u5fc3\u4e3a\u6839\uff0c\u8fdb\u884c\u591a\u91cd\u80cc\u5305 DP\u3002\n\n\u8981\u6ce8\u610f\uff0c\u5982\u679c\u8981\u9009\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u6811\uff0c\u8fd9\u4e2a\u8282\u70b9\u662f**\u5fc5\u987b\u9009\u53d6\u7684**\uff0c\u6211\u4eec\u5fc5\u987b\u5148\u5f3a\u5236\u8f6c\u79fb\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662f\u591a\u91cd\u80cc\u5305\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(nm \\log n \\log D)$\u3002\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>inline void read(register T &x)\n{\n\tregister T p = 1,num = 0;\n\tchar c = getchar();\n\twhile(c < '0'||c > '9')\n\t{\n\t\tif(c == '-') p = -p;\n\t\tc = getchar();\n\t}\n\twhile('0' <= c&&c <= '9')\n\t{\n\t\tnum = (num<<3)+(num<<1)+(c^48);\n\t\tc = getchar();\n\t}\n\tx = p * num;\n}\ntemplate<typename T>inline void write(register T x)\n{\n\tif(x < 0) putchar('-'),x = -x;\n\tif(x > 9) write(x/10);\n\tputchar(x%10+48);\n}\n#define D(i,a,b) for(register int i=a;i>=b;--i)\n#define F(i,a,b) for(register int i=a;i<=b;++i)\n#define ll long long\n#define pii pair<int,int>\n#define M 4010\n#define N 510\nint t,n,m,w[N],c[N],d[N],sz[N],mx[N],dp[N][M],rt,tot,ans;\nint head[N],nxt[N<<1],to[N<<1],ct;\nbitset<N> vis;\ninline void add(int u,int v)\n{\n\tnxt[++ct] = head[u];\n\thead[u] = ct;\n\tto[ct] = v; \n}\nvoid dfs(int u,int fa)\n{\n\tsz[u] = 1,mx[u] = 0;\n\tfor(register int i = head[u];i;i = nxt[i])\n\t{\n\t\tint v = to[i];\n\t\tif(v == fa||vis[v]) continue;\n\t\tdfs(v,u);\n\t\tsz[u] += sz[v];\n\t\tmx[u] = max(mx[u],sz[v]);\n\t}\n\tmx[u] = max(mx[u],tot - sz[u]);\n\tif(mx[u] < mx[rt]) rt = u;\n}\nint b[N],e[N],id[N],cnt;\nvoid dfs1(int u,int fa)\n{\n\tb[u] = ++cnt,id[cnt] = u;\n\tfor(register int i = head[u];i;i = nxt[i])\n\t{\n\t\tint v = to[i];\n\t\tif(v == fa||vis[v]) continue;\n\t\tdfs1(v,u); \n\t}\n\te[u] = cnt;\n}\nint num[20];\nvoid solve(int u)\n{\n\tvis[u] = 1;\n\tcnt = 0;\n\tdfs1(u,0);\t\n\tF(i,1,cnt+1)\n\t\tF(j,0,m)\n\t\t\tdp[i][j] = 0;\n\tD(i,cnt,1)\n\t{\n\t\tint C = c[id[i]],W = w[id[i]],D = min(m/C,d[id[i]])-1,len = 0;\n\t\tif(D < 0) continue;\n\t\tfor(register int j = 1;j <= D;j <<= 1)\n\t\t{\n\t\t\tD -= j;\n\t\t\tnum[++len] = j;\t\t\n\t\t}\t\n\t\tif(D) num[++len] = D;\n\t\tF(j,C,m) dp[i][j] = max(dp[i][j],dp[i+1][j-C]+W);\n\t\tF(j,1,len)\n\t\t\tD(k,m,num[j]*C)\n\t\t\t\tdp[i][k] = max(dp[i][k],dp[i][k-num[j]*C] + num[j]*W);\n\t\tF(j,0,m) dp[i][j] = max(dp[i][j],dp[e[id[i]]+1][j]);\n\t}\n\tans = max(ans,dp[1][m]);\n\tint T = tot;\n\tfor(register int i = head[u];i;i = nxt[i])\n\t{\n\t\tint v = to[i];\n\t\tif(vis[v]) continue;\n\t\ttot = sz[v];\n\t\tif(sz[v] > sz[u]) tot = T - sz[v];\n\t\trt = 0;\n\t\tdfs(v,0);\n\t\tsolve(rt);\n\t}\n}\nint main()\n{\n\tmx[0] = 1e9;\n\tread(t);\n\twhile(t--)\n\t{\n\t\tmemset(dp,0,sizeof(dp));\n\t\tmemset(head,0,sizeof(head));\n\t\tvis = 0;\n\t\tct = rt = ans = 0; \n\t\tread(n),read(m);\n\t\tF(i,1,n) read(w[i]);\n\t\tF(i,1,n) read(c[i]);\n\t\tF(i,1,n) read(d[i]);\n\t\tF(i,1,n-1)\n\t\t{\n\t\t\tint u,v;\n\t\t\tread(u),read(v);\n\t\t\tadd(u,v),add(v,u);\n\t\t}\n\t\ttot = n;\n\t\tdfs(1,0);\n\t\tsolve(rt);\n\t\twrite(ans);\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1677658600,
        "uid": 197648,
        "name": "Wangxun",
        "ccfLevel": 5,
        "title": "P6326 \u9898\u89e3"
    },
    {
        "content": "## \u524d\u8a00\n\n\u4e00\u4e2a\u7ecf\u5178\u7684\u6309 DFS \u5e8f\u8f6c\u79fb\u4e0e\u70b9\u5206\u6cbb\u9898\u76ee\uff0c\u5728 [2018 \u56fd\u5bb6\u96c6\u8bad\u961f\u8bba\u6587](https://github.com/OI-wiki/libs/blob/master/%E9%9B%86%E8%AE%AD%E9%98%9F%E5%8E%86%E5%B9%B4%E8%AE%BA%E6%96%87/%E5%9B%BD%E5%AE%B6%E9%9B%86%E8%AE%AD%E9%98%9F2018%E8%AE%BA%E6%96%87%E9%9B%86.pdf)\u7684\u300a\u89e3\u51b3\u6811\u4e0a\u8fde\u901a\u5757\u95ee\u9898\u7684\u4e00\u4e9b\u6280\u5de7\u548c\u5de5\u5177\u300b\u4e00\u6587\u4e2d\u6709\u8f83\u4e3a\u5b8c\u6574\u7684\u603b\u7ed3\u3002\n\n\u672c\u9898\u5c5e\u4e8e\u6811\u4e0a\u8fde\u901a\u5757 DP \u95ee\u9898\uff0c\u8fd9\u7c7b\u95ee\u9898\u4e00\u822c\u6709\u4e24\u79cd\u5f62\u5f0f\uff1a\n\n1. \u8ba1\u6570\u7c7b\u95ee\u9898\uff1a\u7ed9\u5b9a\u6811 $T$ \u548c\u6027\u8d28 $A$\uff0c\u67e5\u8be2\u6811\u4e0a\u6ee1\u8db3\u6027\u8d28 $A$ \u7684\u8fde\u901a\u5757\u6570\u91cf\u3002\n1. \u6700\u4f18\u5316\u95ee\u9898\uff1a\u7ed9\u5b9a\u6811 $T$ \u548c\u4ef7\u503c\u51fd\u6570\uff0c\u67e5\u8be2\u6811\u4e0a\u6240\u6709\u6ee1\u8db3\u67d0\u6027\u8d28\u7684\u8fde\u901a\u5757\u7684\u6700\u4f18\u4ef7\u503c\u3002\n\n\u663e\u7136\u672c\u9898\u5c31\u662f\u4e00\u7c7b\u6700\u4f18\u5316\u95ee\u9898\uff0c\u4ef7\u503c\u51fd\u6570\u4e3a\u80cc\u5305\u3002\n\n## \u9898\u89e3\n\n\u672c\u9898\u7684\u6734\u7d20\u505a\u6cd5\u662f\u76f4\u63a5\u8bb0\u5f55 $f_{i, j}$ \u8868\u793a\u5bf9\u4e8e\u5728\u5b50\u6811 $i$ \u5185\u5305\u542b $i$ \u7684\u6240\u6709\u8fde\u901a\u5757\uff0c\u82b1\u8d39 $j$ \u5143\u53ef\u4ee5\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n\u4e00\u4e2a\u6bd4\u8f83\u660e\u663e\u7684\u7279\u5f81\u662f\uff0c\u8fd9\u4e2a dp \u9700\u8981\u5408\u5e76\u5b50\u6811\uff0c\u800c\u80cc\u5305\u5408\u5e76\u7684\u590d\u6742\u5ea6\u662f $O(m^2)$ \u7684\uff08$m$ \u4e3a\u503c\u57df\uff09\u3002\u76f8\u53cd\uff0c\u52a0\u5165\u4e00\u4e2a\u70b9\uff08\u7269\u54c1\uff09\u7684\u590d\u6742\u5ea6\u662f $O(m)$ \u7684\uff08\u5355\u8c03\u961f\u5217\u4f18\u5316\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u5206\u7ec4\u505a\u5230 $O(m\\log d)$ \u7684\u590d\u6742\u5ea6\uff09\u3002\n\n\u5bf9\u4e8e\u8fd9\u7c7b\u5408\u5e76\u4fe1\u606f\u4e0d\u591f\u9ad8\u6548\uff0c\u4f46\u662f\u52a0\u5165\u5355\u70b9\u7684\u4fe1\u606f\u6bd4\u8f83\u9ad8\u6548\u7684\u95ee\u9898\uff0c\u5f80\u5f80\u53ef\u4ee5\u6309\u7167 DFS \u5e8f\u8f6c\u79fb\uff0c\u628a\u5408\u5e76\u5b50\u6811\u53d8\u6210\u52a0\u5165\u5355\u70b9\u3002\u6811\u4e0a\u80cc\u5305\u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\u3002\n\n\u8bbe $f_i$ \u8868\u793a\u8003\u8651 DFS \u5e8f\u4e0a $[i, n]$ \u8fd9\u4e9b\u8282\u70b9\u7684\u7b54\u6848\u3002\u5219 $f_1$ \u53ef\u4ee5\u7531 $[2, n]$ \u7684\u7b54\u6848\u6dfb\u52a0\u7269\u54c1 $1$ \u8f6c\u79fb\u3002\n\n\u4e00\u822c\u7684\uff0c$f_i$ \u53ef\u4ee5\u7531 $\\operatorname{add}(f_{i+1}, \\mathrm{item}_i)$ \u8f6c\u79fb\uff0c\u8868\u793a\u6dfb\u52a0 $i$ \u7269\u54c1\u3002\u5982\u679c\u4e0d\u9009\u62e9 $i$\uff0c\u5219\u4e5f\u4e0d\u80fd\u9009\u62e9 $i$ \u7684\u5b50\u6811\uff0c\u6240\u4ee5\u53e6\u4e00\u4e2a\u662f\u76f4\u63a5\u7531 $f_j$ \u8f6c\u79fb\uff0c\u8fd9\u91cc\u7684 $j$ \u662f $i$ \u5b50\u6811\u5728 DFS \u5e8f\u4e0a\u7684\u53f3\u7aef\u70b9 $+1$\u3002\n\n\u4f46\u662f\u6709\u4e2a\u95ee\u9898\u2026\u2026\u8fd9\u91cc\u7684 DFS \u5e8f\u8f6c\u79fb\u662f\u4ee5 $1$ \u4e3a\u6839\u7684\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c$f_1$ \u7684\u7ed3\u679c\u662f\u5fc5\u987b\u9009\u62e9 $1$ \u7684\u7b54\u6848\uff08\u4e0d\u9009\u62e9\u5c31\u662f $0$ \u4e86\uff09\u3002\u4e0d\u8fc7\u89e3\u51b3\u65b9\u6848\u4e5f\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u5bf9\u6811\u8fdb\u884c\u70b9\u5206\u6cbb\u4fbf\u53ef\u4ee5\u8003\u8651\u6240\u6709\u60c5\u51b5\u3002\u5373\u8003\u8651\u5f3a\u5236\u9009\u62e9\u91cd\u5fc3\u7684\u60c5\u51b5\uff0c\u5426\u5219\u9012\u5f52\u4e0b\u53bb\u5904\u7406\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(nm\\log n)$\u3002",
        "postTime": 1675922267,
        "uid": 280800,
        "name": "lingfunny",
        "ccfLevel": 7,
        "title": "P6326 Shopping \u9898\u89e3"
    }
]