[
    {
        "content": "# \u8fd9\u7bc7\u9898\u89e3\u662f\u8fd9\u9053\u9898\u7684DFS\u548cBFS\u89e3\u6cd5\u7684\u4ecb\u7ecd\n\n### \u8fd9\u9053\u9898\u4e3b\u8981\u6709\u4e24\u79cd\u89e3\u6cd5\uff0c\u6df1\u641c\u548c\u5e7f\u641c\u3002\u5f88\u591a\u4eba\u53ea\u4f1a\u62ffDFS\u5199\uff0c\u90a3\u6211\u6765\u5199\u5199\u8fd9\u4e24\u79cd\u89e3\u9898\u65b9\u6cd5\uff0c\u518d\u5206\u6790\u4e00\u4e0b\u6df1\u641c\u548c\u5e7f\u641c\u7684\u4f18\u7f3a\u70b9\n\n## \u9996\u5148\uff0c\u770b\u770bDFS\n#### \u5176\u5b9eDFS\u5c31\u662f\u4e00\u53e3\u6c14\u5f80\u4e00\u4e2a\u65b9\u5411\u641c\u7d22\uff0c\u7136\u540e\u9047\u5230\u969c\u788d\u4e4b\u540e\u518d\u6539\u4e00\u4e2a\u65b9\u5411\u641c\u7d22\n#### \u4f18\u70b9\uff1a\u597d\u5199\uff0c\u4e0d\u6613\u51fa\u9519\uff0c\u6d45\u663e\u6613\u61c2\n#### \u7f3a\u70b9\uff1a\u5f80\u4e00\u4e2a\u65b9\u5411\u67e5\u627e\u8017\u65f6\uff0c\u5f53\u5bfb\u627e\u6700\u4f18\u89e3\u65f6\u6ca1\u6709\u526a\u679d\u4f1a\u5361\u65f6\u95f4\n\n\u6838\u5fc3\u4ee3\u7801\uff1a\n```cpp\nvoid dfs(int x,int y){\n    a[x][y]='.';//\u6807\u8bb0\u4e3a\u5df2\u8d70\n    int dx,dy;\n    for(int i=-1;i<=1;i++){//\u641c\u7d22\u5468\u56f4\u7684\u5730\u65b9\n        for(int j=-1;j<=1;j++){\n            dx=x+i;\n            dy=y+j;\n            if(dx>=0&&dx<=n&&dy>=0&&dy<m&&a[dx][dy]=='W'){//\u5982\u679c\u6ca1\u6709\u8d85\u8fc7\u8fb9\u754c\u4e14\u4e3a'W'\u7684\u8bdd\u5c31\u5f80\u90a3\u4e2a\u70b9\u7ee7\u7eed\u6df1\u5165\u641c\u7d22\n                dfs(dx,dy);\n            }\n        }\n    }\n    return;//\u5728void\u4e2dreturn\u4e3a\u8fd4\u56de\u4e0a\u4e00\u503c\uff0c\u8868\u793a\u5982\u679c\u4e0d\u80fd\u7ee7\u7eed\u6df1\u641c\u5c31\u8fd4\u56de\u4e0a\u9762\u7684\u70b9\u7ee7\u7eed\u641c\u7d22\n} \n```\n\n\u6240\u4ee5\uff0c\u6709\u4e86\u8fd9\u7ec4\u4ee3\u7801\u6574\u4e2a\u4ee3\u7801\u5c31\u5199\u51fa\u6765\u4e86\n\n```cpp\n#include<cstdio>\nusing namespace std;\nchar a[101][101];\nint ans;\nint n,m;\nvoid dfs(int x,int y){\n    a[x][y]='.';\n    int dx,dy;\n    for(int i=-1;i<=1;i++){\n        for(int j=-1;j<=1;j++){\n            dx=x+i;\n            dy=y+j;\n            if(dx>=0&&dx<=n&&dy>=0&&dy<m&&a[dx][dy]=='W'){\n                dfs(dx,dy);\n            }\n        }\n    }\n    return;\n} \nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<=n;i++){\n    \tscanf(\"%s\",a[i]);//\u907f\u514d\u6362\u884c\u5e26\u6765\u95ee\u9898\u8fd9\u91cc\u76f4\u63a5\u8bfb\u5165\u5b57\u7b26\u4e32\n    }\n    for(int i=0;i<=n;i++){\n        for(int j=0;j<m;j++){\n            if(a[i][j]=='W'){//\u5982\u679c\u662fW\u7684\u8bdd\u5c31\u76f4\u63a5\u5f00\u59cb\u904d\u5386\n                dfs(i,j);\n                ans++;//\u6c34\u6f6d\u52a0\u4e00\u5904\n            }\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\n##### \u663e\u7136 \uff0cdfs\u7684\u597d\u5904\u5c31\u662f\u597d\u6253\u3001\u65b9\u4fbf\n\n## \u90a3\u4e48\uff0c\u518d\u8fc7\u6765\u770b\u770bBFS\n#### BFS\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a\u961f\u5217\uff0c\u4ee5\u4e00\u4e2a\u70b9\u5f80\u56db\u5468\u641c\u7d22\uff0c\u5982\u679c\u7b26\u5408\u6761\u4ef6\u7684\u8bdd\u5c31\u628a\u5b83\u653e\u8fdb\u961f\u5217\u91cc\n#### \u4f18\u70b9\uff1a\u540c\u7ea7\u4f18\u5148\u641c\u7d22\uff0c\u5728\u6c42\u6700\u4f18\u89e3\u7684\u65f6\u5019\u53ef\u4ee5\u907f\u514d\u8bb8\u591a\u65e0\u7528\u7684\u641c\u7d22\uff0c\u63d0\u9ad8\u6548\u7387\u3001\u53ef\u4ee5\u907f\u514d\u9012\u5f52\n#### \u7f3a\u70b9\uff1a\u4e0d\u597d\u5199\uff0c\u6613\u51fa\u95ee\u9898\uff0c\u7528stl\u5199\u961f\u5217\u5f88\u6162\n\n### \u5f53\u6211\u4eec\u7528stl\u5199\u961f\u5217\u65f6\u7684BFS\u6838\u5fc3\u4ee3\u7801\n```cpp\nvoid bfs(int x,int y){\n    s[x][y]='.';\n    int dx,dy;\n    for(int i=-1;i<=1;i++){\n        for(int j=-1;j<=1;j++){\n            dx=x+i;\n            dy=y+j;\n            if(dx>=0&&dx<n&&dy>=0&&dy<m&&s[dx][dy]=='W'){\n                hori.push(dx);//\u628a\u884c\u653e\u5165\u961f\u5217\n                para.push(dy);//\u628a\u5217\u653e\u5165\u961f\u5217\n            }//\u6ce8\u610f\uff0c\u5176\u5b9e\u53ef\u4ee5\u7528\u4e00\u4e2a\u961f\u5217\u7ef4\u62a4\uff0c\u4f46\u662f\u7528\u4e24\u4e2a\u961f\u5217\u66f4\u597d\u5199\uff0c\u66f4\u76f4\u89c2\n        }\n    }\n}\n```\n\n\u90a3\u4e48\uff0c\u6574\u4f53\u4ee3\u7801\u5c31\u7a0d\u5fae\u6709\u70b9\u5dee\u522b\n\n```cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\nqueue<int>hori;//\u884c\u7684\u961f\u5217\nqueue<int>para;//\u5217\u7684\u961f\u5217\nint n,m;\nint ans;\nchar s[101][101];\ninline int read(){//\u8bfb\u5165\u4f18\u5316\uff0c\u53ef\u4ee5\u52a0\u5feb\u6570\u5b57\u7684\u8f93\u5165\n    char p=0;int r=0,o=0;\n    for(;p<'0'||p>'9';o|=p=='-',p=getchar());\n    for(;p>='0'&&p<='9';r=(r<<1)+(r<<3)+(p^48),p=getchar());\n    return o?(~r)+1:r;\n}\ninline void bfs(int x,int y){//\u4e0d\u7528\u9012\u5f52\u65f6\u53ef\u4ee5\u52a0inline\uff0c\u63d0\u9ad81ms\u7684\u8fd0\u884c\u901f\u5ea6\n    s[x][y]='.';\n    int dx,dy;\n    for(int i=-1;i<=1;i++){\n        for(int j=-1;j<=1;j++){\n            dx=x+i;\n            dy=y+j;\n            if(dx>=0&&dx<n&&dy>=0&&dy<m&&s[dx][dy]=='W'){\n                hori.push(dx);\n                para.push(dy);\n            }\n        }\n    }\n}\nint main(){\n    n=read();m=read();//\u770b\u4e0d\u61c2\u7684\u8bdd\u53ef\u4ee5\u628a\u8fd9\u4e00\u884c\u6539\u6210cin\u6216scanf\n    for(int i=0;i<n;i++){\n        scanf(\"%s\",s[i]);\n    }\n    for(int i=0;i<n;i++){\n        for(int j=0;j<m;j++){\n            if(s[i][j]=='W'){\n                hori.push(i);\n                para.push(j);\n                while(!hori.empty()){//\u5982\u679c\u961f\u5217\u4e0d\u4e3a\u7a7a\n                    bfs(hori.front(),para.front());//\u5e7f\u641c\u961f\u5217\u524d\u9762\u7684\u5143\u7d20\n                    hori.pop();para.pop();//\u5f39\u51fa\u5143\u7d20\n                }\n                ans++;\n            }\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n#### \u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u52a0\u4e0a\u5feb\u8bfb\u7b49\u4f18\u5316\u4ee5\u540e\u5df2\u7ecf\u505a\u5230stl\u961f\u5217\u80fd\u8fd0\u884c\u65f6\u95f4\u7684\u6781\u81f4\u4e86\uff0c\u7136\u800c\u63d0\u4ea4\u5c31\u7b97\u5f00O2\u4f18\u5316\u8fd8\u662f\u4f1a\u6709\u4e24\u4e2a\u6d4b\u8bd5\u70b9\u88abT\n#### \u8fd9\u5c31\u9700\u8981\u6211\u4eec\u624b\u5199\u961f\u5217\u4e86\u4ee5\u53ca\u5404\u79cd\u4f18\u5316\u4e86\uff0c\u4f46\u662f\u8fd9\u4e2a\u4ee3\u7801\u9002\u5408bfs\u7684\u521d\u5b66\u8005\u7406\u89e3",
        "postTime": 1548642822,
        "uid": 78791,
        "name": "Fractures",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "# \u4e00\u9053DFS\u5224\u65ad\u8fde\u901a\u5757\u7684\u9898\u76ee\u3002\n\n### \u4ee3\u7801\u9644\u4e0a\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint fxx[9]={0,-1,-1,-1,0,0,1,1,1};//x\u65b9\u5411\nint fxy[9]={0,-1,0,1,-1,1,-1,0,1};//y\u65b9\u5411\nint n,m,ans;\nchar a[105][105];\nvoid dfs(int x,int y)\n{\n    int r,c;\n    a[x][y]='.';\n    for (int i=1;i<=8;i++)\n    {\n        r=x+fxx[i];\n        c=y+fxy[i];\n        if (r<1||r>n||c<1||c>m||a[r][c]=='.')//\u5224\u65ad\u662f\u5426\u51fa\u754c\n            continue;\n        a[r][c]='.';\n        dfs(r,c);\n    }\n}\nint main()\n{\n    scanf(\"%d %d\\n\",&n,&m);\n    for (int i=1;i<=n;i++)\n    {\n        for (int j=1;j<=m;j++)\n            cin>>a[i][j];\n    }\n    ans=0;\n    for (int i=1;i<=n;i++)\n    {\n        for (int j=1;j<=m;j++)\n        {\n            if (a[i][j]=='W')\n            {\n                ans++;\n                dfs(i,j);\n            }\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n### \u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u5982\u6709\u4e0d\u8db3\uff0c\u8bf7\u5404\u4f4ddalao\u6307\u51fa\uff0c\u8c22\u8c22\uff01\n",
        "postTime": 1516892792,
        "uid": 48203,
        "name": "\u9ad8\u94c11\u53f7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "# DFS\u5927\u6cd5\u597d\n####  \u4f5c\u4e3a\u4e00\u540d ~~\u4e0d\u4f1a\u7528bfs~~ dfs\u5927\u4f6c\n### \u505a\u9898\u601d\u8def\u662f\u5f88\u7b80\u5355\u7684\uff1a\n#### \u53ea\u8981\u6bcf\u641c\u7d22\u5b8c\u4e00\u6ee9\u6c34\u5c31\u6807\u8bb0\uff0c\u5c31\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u641c\u7d22\u4e86\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int p[8][2]={{0,1},{1,0},{-1,0},{0,-1},{1,1},{1,-1},{-1,1},{-1,-1}};//\u4e0a,\u4e0b,\u5de6,\u53f3,\u5de6\u524d,\u5de6\u540e,\u53f3\u524d,\u53f3\u540e\nint n,m,ans=0;\nchar a[105][105];\nbool bo[105][105];//\u6807\u8bb0\u5730\u56fe\nint dfs(int x,int y)//\u4e3b\u89d2\n{\n\tbo[x][y]=1;//\u6bcf\u6b21\u641c\u7d22\u8fd9\u4e2a\u5355\u5143\u683c\u90fd\u5b9a\u4e49\u4e3a\u88ab\u641c\u8fc7\n\tfor(int i=0;i<8;i++){//const\u4e0d\u7528\u8bf4,\u516b\u4e2a\u65b9\u5411\u90fd\u641c\u4e00\u8fb9\n\t\tif(a[x+p[i][0]][y+p[i][1]]=='W' && bo[x+p[i][0]][y+p[i][1]]==0){//\u5982\u679c\u641c\u7d22\u5230\u76f8\u8fde\u7684\u6c34\n\t\t\tdfs(x+p[i][0],y+p[i][1]);//\u8fdb\u5165\u53e6\u4e00\u4e2a\u6c34\u5355\u5143\u683c\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++){\n\t\tcin>>a[i][j];//\u8f93\u5165\u4e0d\u8bf4\n\t}\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++){\n\t\tif(a[i][j]=='W' && bo[i][j]==0){\n        \t//\u5bfb\u627e\u4e00\u4e2a\u6709\u6c34\u7684\u5355\u5143\u683c(\u524d\u63d0\u6ca1\u88ab\u641c\u8fc7)\n\t\t\tdfs(i,j);//\u5f00\u59cb\u641c\u7d22\n\t\t\tans++;//\u6bcf\u6b21\u6807\u8bb0\u5b8c\u4e00\u6ee9\u6c34\u52a0\u4e00\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1520846812,
        "uid": 51234,
        "name": "s5_gan",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "# \u975e\u641c\u7d22\u65b9\u6cd5\uff01\uff01\n\u8fd9\u9053\u9898\u6211\u4eec\u7528**\u66b4~~\u9893~~\u63a8$+$\u5e76\u67e5\u96c6**\u505a\n\n\u8bfb\u5b8c\u9898\u6211\u4eec\u4e5f\u8bb8\u4f1a\u6709\u4e00\u4e2a\u5927\u80c6\u7684\u60f3\u6cd5\uff1a\u8fd9\u9053\u9898\u771f\u7684\u8981\u7528\u641c\u7d22\uff1f\uff1f\u8fd9\u8ddfDFS\u6709\u4ec0\u4e48\u8054\u7cfb\uff1f\uff1f\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6240\u6709\u7684\u6c34\u5751\u90fd\u662f\u8fde\u5728\u4e00\u8d77\u7684\uff0c\u516b\u4e2a\u65b9\u5411\u76f8\u8fde\u3002\u90a3\u4e48\uff0c\u8fd9\u975e\u5e38\u6709\u5229\u4e8e\u6211\u4eec\u76f4\u63a5\u66b4\u63a8\u5199\u5e76\u67e5\u96c6\uff0c\u6211\u4eec\u4ece\u5de6\u5f80\u53f3\u81ea\u4e0a\u800c\u4e0b\u5730\u63a8\uff0c\u56e0\u4e3a\u4e0e\u516b\u4e2a\u65b9\u5411\u76f8\u8fde\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5224\u5b9a\u56db\u4e2a\u65b9\u5411\u662f\u5426\u4e3a\u4e00\u4e2a\u6c34\u5751\uff0c\u8981\u6c42\u8fd9\u56db\u4e2a\u65b9\u5411\u6240\u5728\u76f4\u7ebf\u4e92\u4e0d\u91cd\u5408\n## \u4e0b\u653e\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int maxn=105;\nint n,m,f[10005],ans;//f\u662f\u5e76\u67e5\u96c6\u6570\u7ec4\uff08\u5e76\u4e3a\u4e00\u7ef4\uff09\uff0cans\u662f\u6c34\u5751\u4e2a\u6570\nchar p[maxn][maxn];\nint fa(int x){//\u7b80\u5355\u7684\u5bfb\u627e\u7956\u5148\uff0c\u53c8\u540d\u627e\u7238\u7238\n    if(f[x]==x)return x;\n    return fa(f[x]);\n}\nvoid hebing(int x,int y){//\u5408\u5e76\u7956\u5148\n    int fx=fa(x),fy=fa(y);\n    if(fx==x){\n        f[x]=fy;\n        return;\n    }\n    f[fy]=fx;\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;++i){\n        getchar();//\u8bfb\u6389\u6362\u884c\u7b26\n        for(int j=1;j<=m;++j){\n            scanf(\"%c\",&p[i][j]);\n            f[(i-1)*m+j]=(i-1)*m+j;\n        }\n    }\n    for(int i=1;i<=n;++i)\n        for(int j=1;j<=m;++j){\n            if(p[i][j]=='W'){//\u5982\u679c\u672c\u8eab\u6709\u79ef\u6c34\n                int pp=(i-1)*m+j;\n                if(p[i][j+1]=='W')hebing(pp,pp+1);//\u6b63\u53f3\u65b9\u5411\n                if(p[i+1][j-1]=='W')hebing(pp,pp+m-1);//\u5de6\u4e0b\u65b9\u5411\n                if(p[i+1][j]=='W')hebing(pp,pp+m);//\u6b63\u4e0b\u65b9\n                if(p[i+1][j+1]=='W')hebing(pp,pp+m+1);//\u53f3\u4e0b\u65b9\u5411\n            }\n        }\n    for(int i=1;i<=n;++i)\n        for(int j=1;j<=m;++j)\n            if(p[i][j]=='W')//\u5982\u679c\u672c\u8eab\u6709\u79ef\u6c34\u4e14\u7956\u5148\u4e3a\u81ea\u5df1\u672c\u8eab\uff0c\u5219\u89c6\u4e3a\u4e00\u4e2a\u65b0\u7684\u6c34\u5751\n            \tans+=(f[(i-1)*m+j]==(i-1)*m+j);\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n## \u4e0d\u559c\u52ff\u55b7\n# \u8bf7\u52ff\u6284\u88ad\n### \u8c22\u8c22\u89c2\u770b",
        "postTime": 1525432371,
        "uid": 34530,
        "name": "\u5b50\u8c26\u3002",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "\u770b\u5230\u697c\u4e0a\u5927\u4f6c\u8bf4bfs\u4f1aT\uff0c\u6211\u8fd9\u4e2a\u7528bfs\u677f\u5b50\u4e0d\u5f00O2\u4e0d\u7528\u5feb\u8bfb\u4e00\u904d\u8fc7\u7684\u849f\u84bb\u745f\u745f\u53d1\u6296\n\n\u5728\u6211\u7684\u5370\u8c61\u4e2dbfs\u4e0d\u662f\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u5417\uff1f\u54ea\u91cc\u4f1a\u597d\u6162\uff1f\u800c\u4e14\u5bf9\u4e8eC\u515a\u4eec\u7684~~NB~~STL\u4e00\u76f4\u597d\u8bc4\u5982\u6f6e\u554a\n\n#### \u8a00\u5f52\u6b63\u4f20\n\n\u770b\u5230\u672c\u9898bfs\u7adf\u7136\u4e0d\u662f\u4e3b\u6d41\u505a\u6cd5\u7684 ~~\u7ec3\u4e60\u65f6\u957f\u4e24\u5e74\u534a\u7684BFS\u7ec3\u4e60\u751f~~ \u6211\uff0c\u5c31\u6765\u4e86\u4e00\u4efdbfs\u4ee3\u7801\uff0c\u8fd9\u79cd\u6c42\u8fde\u901a\u5757\u4e2a\u6570\u7684\u9898\u76ee\u4e5f\u662f\u5c61\u89c1\u4e0d\u9c9c\u4e86\uff0c\u57fa\u672c\u53ef\u4ee5\u5f53\u677f\u5b50\u6253\n\n#### \u4e0a\u4ee3\u7801\uff0c\u6ce8\u91ca\u5728\u5176\u4e2d\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,flag[105][105]={0},ans=0,cnt=1;\nchar ma[105][105];\nint dx[8]={0,1,0,-1,1,1,-1,-1};\nint dy[8]={1,0,-1,0,1,-1,1,-1};\n//dx\uff0cdy\uff0c\u5b58\u4e0b\u516b\u4e2a\u65b9\u5411\nstruct node\n{\n\tint x,y;   //\u8fd9\u91cc\u7684\u7ed3\u6784\u4f53\u53ea\u9700\u8981\u5b58\u5750\u6807\u5c31\u597d\u4e86\uff0c\u6b65\u6570\u4ec0\u4e48\u7684\u65e0\u6240\u8c13\n};\ninline void bfs(int a,int b)   //bfs\u677f\u5b50\n{\n\tqueue <node> q;   //\u5f00\u4e00\u4e2anode\u7c7b\u578b\u7684\u961f\u5217\uff0c\u5b58\u70b9\n\tnode o;\n\to.x=a;o.y=b;\n\tq.push(o);   //\u628a\u8d77\u59cb\u70b9\u5b58\u5165\u961f\u5217\n\tflag[a][b]=cnt;  \n//\u8fd9\u91ccflag\u8d4b\u4e3acnt\u6211\u89e3\u91ca\u4e00\u4e0b\uff0c\u6b64\u5904\u8d4b\u4e3a1\u4e5f\u6ca1\u95ee\u9898\uff0c\n//\u4f46\u8fd9\u4e48\u505a\u662f\u4e3a\u4e86\u65b9\u4fbf\u53ef\u80fd\u51fa\u73b0\u7684\u67e5\u8be2\u64cd\u4f5c\uff0c\u90a3\u6837\u7684\u8bdd\u76f4\u63a5\u67e5\u8be2flag\u6570\u7ec4\u5c31\u597d\u4e86\n\twhile(!q.empty())\n\t{\n\t\to=q.front();   //\u53d6\u51fa\u961f\u5934\uff0c\u4f5c\u4e3a\u57fa\u51c6\u70b9\u5411\u5468\u56f4\u53d1\u6563\n\t\tq.pop();   //\u5f39\u51fa\u961f\u5934\n\t\tfor(int i=0;i<8;i++)   //\u679a\u4e3e\u516b\u4e2a\u65b9\u5411\n\t\t{\n\t\t\tint nx=o.x+dx[i];\n\t\t\tint ny=o.y+dy[i];\n\t\t\tif(nx<0||ny<0||nx>=n||ny>=m||flag[nx][ny]!=0||ma[nx][ny]!='W')\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}   \n            //\u5224\u65ad\u8d8a\u754c\uff0c\u975e\u6c34\u5751\uff0c\u4ee5\u53ca\u91cd\u590d\n\t\t\tflag[nx][ny]=cnt;   //\u6807\u8bb0\n\t\t\tnode next;\n\t\t\tnext.x=nx;next.y=ny;\n\t\t\tq.push(next);   //\u5b58\u5165\u961f\u5217\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tcin>>ma[i];\n\t}   //\u61d2\u4eba\u8f93\u5165\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tfor(int j=0;j<m;j++)\n\t\t{\n\t\t\tif(ma[i][j]=='W'&&flag[i][j]==0)\n\t\t\t{\n\t\t\t\tbfs(i,j);\n\t\t\t\tans++;\n\t\t\t\tcnt++;\n\t\t\t}\n            //\u627e\u5230\u672a\u88ab\u6807\u8bb0\u7684\u6c34\u5751\uff0c\u5c31\u8fdb\u884cbfs\u8986\u76d6\u5f0f\u6807\u8bb0\uff0c\u5e76ans++\n            //\u8fd9\u4e2acnt\u7684\u4f5c\u7528\u4e4b\u524d\u4e5f\u89e3\u91ca\u8fc7\u4e86\uff0ccnt++\u8fdb\u884c\u4e0b\u4e00\u5757\u6807\u8bb0\n\t\t}\n\t}\n\tcout<<ans<<endl;  //\u8f93\u51fa\u7ed3\u679c\n\treturn 0;   //\u5b8c\u7f8e\u7ed3\u675f\n}\n```\n",
        "postTime": 1565676010,
        "uid": 35533,
        "name": "liujiayuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "### \u6ca1\u9519\uff0c\u6211\u53c8\u627e\u5230\u4e86\u4e00\u4e2a\u53ef\u4ee5\u66b4\u641c\u7684\u9898\u76ee\uff0c\u56e0\u4e3a\u53c8\u662f\u5224\u65ad\u8fde\u901a\u5757\n\u4f3c\u4e4e\u5e76\u6ca1\u6709\u4ec0\u4e48\u6280\u672f\u542b\u91cf\u7684\u66b4\u641c\uff0c\u6709\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5A\u6389\u4e00\u4e2a\u9898\uff01\uff01\n\n8\u4e2aif\uff0c\u8ba9\u4f60\u7684\u4eba\u751f\u66f4\u52a0\u7f8e\u597d\uff01\uff01\n\n## \u601d\u8def\uff1a\n\n\u56e0\u4e3a\u6240\u6709\u7684\u6c34\u5751\u90fd\u662f\u8fde\u5728\u4e00\u8d77\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5for\u5faa\u73af\u627e\u5230\u67d0\u4e00\u4e2a\u6c34\u5751\u7684\u67d0\u4e00\u4e2a\u5143\u7d20\uff0c\u5c06ans\u52a01\uff0c\u7136\u540e\u5c06\u5176\u5468\u56f4\u7684\u6c34\u5168\u90e8\u53d8\u6210\u9646\u5730\uff08\u53ca\u5c06\u8fd9\u4e2a\u6c34\u5751\u5220\u9664\uff09,\u7136\u540e\u8fd9\u6837\u4e00\u6b65\u4e00\u6b65\u641c\u4e0b\u6765\u5c31\u53ef\u4ee5\u627e\u51fa\u6c34\u5751\u6570\u5566\uff01\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u770b\u4ee3\u7801\u5427\uff01\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<stack>\n#include<algorithm>\n#include<cmath>\n#include<deque>\nusing namespace std;\n\nint n,m;\nchar a[101][101];\nbool f[101][101]= {false};\n\nint baosou(int x,int y) {//\u5c06\u8bbf\u95ee\u7684\u8fd9\u4e2a\u6c34\u5751\u5220\u9664\n\tif(a[x][y+1]=='W') {\n\t\ta[x][y+1]='.';\n\t\tbaosou(x,y+1);\n\t}\n\tif(a[x][y-1]=='W'){\n\t\ta[x][y-1]='.';\n\t\tbaosou(x,y-1);\n\t}\n\tif(a[x+1][y]=='W') {\n\t\ta[x+1][y]='.';\n\t\tbaosou(x+1,y);\n\t}\n\tif(a[x-1][y]=='W') {\n\t\ta[x-1][y]='.';\n\t\tbaosou(x-1,y);\n\t}\n\tif(a[x+1][y+1]=='W') {\n\t\ta[x+1][y+1]='.';\n\t\tbaosou(x+1,y+1);\n\t}\n\tif(a[x+1][y-1]=='W') {\n\t\ta[x+1][y-1]='.';\n\t\tbaosou(x+1,y-1);\n\t}\n\tif(a[x-1][y+1]=='W') {\n\t\ta[x-1][y+1]='.';\n\t\tbaosou(x-1,y+1);\n\t}\n\tif(a[x-1][y-1]=='W') {\n\t\ta[x-1][y-1]='.';\n\t\tbaosou(x-1,y-1);\n\t}\n}\n\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tif(m==0)return 0;\n\tint ans=0;\n\tfor(int i=1; i<=n; i++) {\n\t\tfor(int j=1; j<=m; j++) {\n\t\t\tcin>>a[i][j];\n            //\u542c\u6211\u7684\uff0c\u6c38\u8fdc\u4e0d\u8981\u7528scanf\u8f93\u5165\u5b57\u7b26\n\t\t}\n\t}\n\tfor(int i=1; i<=n; i++) {\n\t\tfor(int j=1; j<=m; j++) {\n\t\t\tif(a[i][j]=='W') {\n\t\t\t\ta[i][j]='.';\n\t\t\t\tans++;//\u627e\u5230\u4e4b\u540e\u5c06\u8fd9\u4e2a\u70b9\u53d8\u6210\u65f1\u5730\u5e76\u5c06ans\u52a01\n\t\t\t\tbaosou(i,j);//\u5f00\u59cb\u66b4\u641c\n\t\t\t}\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1555591426,
        "uid": 198323,
        "name": "loceaner",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "# \u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u8fde\u901a\u5757\u95ee\u9898\n//\u5230\u6211\u535a\u5ba2\u91cc\u770b\u4e00\u770b\u5427[]https://www.luogu.org/blog/zxl/\n\n\u9996\u5148\u7ed9\u5404\u4f4d\u770b\u5b98\u4eec\u666e\u53ca\u4e00\u4e0b\uff0c\u7528\u5230dfs\u7684\u4e00\u822c\u90fd\u662f\u6c42\u5168\u90e8\u89e3\u548c\u8fde\u901a\u5757\u95ee\u9898\u3002\u641c\u7d22\u7b97\u6cd5\u7684\u53ef\u53d8\u6027\u975e\u5e38\u5927\uff08\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e2a\u7a0b\u5e8f\u5c31\u662f\u641c\u7d22\uff0c\u53ea\u662f\u957f\u5f97\u4e0d\u592a\u50cf\u800c\u5df2\uff09\n\u770b\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar zyj[1001][1010];//\u8fd9\u4e2a\u6570\u7ec4\u7528\u6765\u5b58\u50a8\u6c34\u5858\u548c\u9646\u5730\nint i,j,m,n,sum=0;\nvoid sdm(int a,int b)//\u4f60\u53ef\u4ee5\u5427sdm\u7406\u89e3\u4e3adfs\n{\n    if (zyj[a][b]=='W')//\u5982\u679c\u662f\u6c34\u5858\uff0c\u5c31\u628a\u5b83\u53d8\u6210\u9646\u5730\uff0c\u5e76\u4e14\u641c\u7d22\u56db\u5468\u7684\u6c34\u5858\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u4e00\u7247\u6c34\u5858\u627e\u51fa\n    {\n    \tzyj[a][b]='.';//\u53d8\u6210\u9646\u5730\n        sdm(a-1,b-1);\n        sdm(a-1,b);\n        sdm(a-1,b+1);\n        sdm(a,b-1);\n        sdm(a,b+1);\n        sdm(a+1,b-1);\n        sdm(a+1,b);\n        sdm(a+1,b+1);//\u8fd9\u516b\u884c\u662f\u9012\u63a8\n    }\n}\nint main()\n{\n    \n    cin>>m>>n; \n    for(i=1;i<=m;i++)\n        for(j=1;j<=n;j++)\n            cin>>zyj[i][j];//\u8f93\u5165\n    for(i=1;i<=m;i++)\n        for(j=1;j<=n;j++)\n        {\n            if(zyj[i][j]=='W')//\u5982\u679c\u6709\u6c34\u5858\uff0c\u8ba1\u6570\u5668+1\uff0c\u5e76\u4e14\u5c06\u8fd9\u4e2a\u6c34\u5858\u4ece\u6211\u4eec\u7684\u641c\u7d22\u8fc7\u7a0b\u4e2d\u6392\u9664\n            {\n                sdm(i,j);\n                sum++;\n            }\n        }\n        cout<<sum;//\u591a\u4e48\u7b80\u5355\uff0c\u5bf9\u5417\uff1f\n}\n```",
        "postTime": 1533909198,
        "uid": 38352,
        "name": "Sn_Eddy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u7ecf\u5178\u7684dfs\u6c42\u8054\u901a\u5757\u7684\u9898\u76ee\n\n\u4ee3\u7801\u5982\u4e0b:\n```\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\nusing namespace std;\nint n,m,coun=0;\nchar ma[101][101];//\u5730\u56fe\u6570\u7ec4\nint b[101][101];\nint dx[8]={0,0,1,-1,1,-1,1,-1};//\u6b64\u5904\u5343\u4e07\u8981\u6ce8\u610f\uff0c\u662f8\u4e2a\u65b9\u5411\nint dy[8]={1,-1,0,0,-1,1,1,-1};\nvoid dfs(int x,int y)//\u597d\u620f\u5373\u5c06\u5f00\u59cb\n{\n\tma[x][y]=0;//\u628a\u641c\u7d22\u8fc7\u7684\u6807\u8bb0\n\tfor(int i=0;i<=7;i++)\n\t{\n\t\tif(ma[x+dx[i]][y+dy[i]]==1)//\u5982\u679c\u662f\u6c34\u5751\n\t\t{\n\t\t\tdfs(x+dx[i],y+dy[i]);//\u7ee7\u7eed\u641c\u7d22\u65c1\u8fb9\u7684\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>m>>n;//\u8f93\u5165\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tcin>>ma[i][j];\n\t\t\tif(ma[i][j]=='W')\n\t\t\tma[i][j]=1;\n\t\t\telse\n\t\t\tma[i][j]=0;//\u6539\u6210\u6570\u5b57\u4fbf\u4e8e\u641c\u7d22\n\t\t}\n\t } \n\t for(int i=1;i<=m;i++)\n\t {\n\t \tfor(int j=1;j<=n;j++)\n\t \t{\n\t \t\tif(ma[i][j]==1)\n\t \t\t{\n\t \t\t\tcoun++;//\u6c34\u5751\u8ba1\u6570\n\t \t\t\tdfs(i,j);\n\t\t\t }\n\t\t }\n\t }\n\t cout<<coun;//\u8f93\u51fa\n\t return 0;\n}\n\u8fd9\u91cc\u8fd8\u6709\u4e24\u4e2a\u666e\u901a\u7684\u6df1\u641c\u6a21\u677f\n\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7b97\u6cd5\u6846\u67b61\nint Search(int k)\n\u3000{\n\u3000for (i=1;i<=\u7b97\u7b26\u79cd\u6570;i++)\n\u3000\u3000if (\u6ee1\u8db3\u6761\u4ef6)\n\u3000\u3000   {\n\u3000\u3000\u3000\u3000\u4fdd\u5b58\u7ed3\u679c\n\u3000\u3000\u3000\u3000if (\u5230\u76ee\u7684\u5730) \u8f93\u51fa\u89e3;\n\u3000\u3000\u3000           else Search(k+1);\n\u3000\u3000\u3000\u3000\u6062\u590d\uff1a\u4fdd\u5b58\u7ed3\u679c\u4e4b\u524d\u7684\u72b6\u6001{\u56de\u6eaf\u4e00\u6b65}\n\u3000 \u3000  }\n\u3000}\n \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7b97\u6cd5\u6846\u67b62\nint Search(int k)\n\u3000{\n\u3000  if  (\u5230\u76ee\u7684\u5730) \u8f93\u51fa\u89e3;\n\u3000\u3000\u3000else\n\u3000\u3000\u3000\u3000for (i=1;i<=\u7b97\u7b26\u79cd\u6570;i++)\n\u3000\u3000\u3000\u3000\u3000if  (\u6ee1\u8db3\u6761\u4ef6) \n\u3000\u3000\u3000\u3000\u3000\u3000\u3000{\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u4fdd\u5b58\u7ed3\u679c;\n\u3000\u3000\u3000                  Search(k+1)\n                             \u6062\u590d\uff1a\u4fdd\u5b58\u7ed3\u679c\u4e4b\u524d\u7684\u72b6\u6001{\u56de\u6eaf\u4e00\u6b65}\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000}\n\u3000}\n \u5e0c\u671b\u5404\u4f4d\u90fd\u80fd\u987a\u5229\u5b66\u4f1aDFS\uff0c\u4e5f\u5e0c\u671b\u7ba1\u7406\u5927\u5927\u80fd\u901a\u8fc7\u6b64\u7bc7\u9898\u89e3\uff01",
        "postTime": 1565107769,
        "uid": 118300,
        "name": "\u626c\u76932006",
        "ccfLevel": 0,
        "title": "P1596 \u6e56\u8ba1\u6570 Lake Counting \u9898\u89e3"
    },
    {
        "content": "**\u8fd9\u9053\u9898\u867d\u7136\u7528dfs\uff0cbfs\u7b49\u53ef\u4ee5\u8fc7\uff0c\u4f46\u5bf9\u4e8e\u4e00\u4e9b\u521d\u5b66\u8005\u6765\u8bf4\u5e76\u4e0d\u662f\u5f88\u5bb9\u6613\uff0c\u4e8e\u662f\u5c31\u6709\u4e86\u8fd9\u7bc7~~\u5947\u8469~~\u9898\u89e3\u3002\u867d\u7136\u4ee3\u7801\u5f88\u957f\uff0c\u590d\u6742\u5ea6\u5f88\u9ad8\uff0c\u4f46\u5f88\u597d\u7406\u89e3**\n\n\u9996\u5148\u58f0\u660e\u4e00\u4e0b\uff0c\u8fd9\u79cd\u601d\u8def\u662f\u7531\u8fd9\u9053\u9898\u4ea7\u751f\u7684\uff1a[\u6d41\u611f\u4f20\u67d3](http://ybt.ssoier.cn:8088/problem_show.php?pid=1191)\uff0c\n\u8fd9\u79cd\u601d\u60f3\u548c\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u4e00\u6837\uff0c\u53ef\u4ee3\u7801\u5374\u5b8c\u5168\u4e0d\u540c\n\n\u628a\u601d\u8def\u9610\u8ff0\u4e00\u4e0b\n\n**\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u201c\u9996\u9886\u201dw\u6570\u7ec4\uff0cw[0][i][j]\u8868\u793ax\u5750\u6807\u662fi\uff0cy\u5750\u6807\u662fj\u7684\u201cW\u201d\u7684\u9996\u9886\u7684x\u5750\u6807\uff1bw[1][i][j]\u8868\u793ax\u5750\u6807\u662fi\uff0cy\u5750\u6807\u662fj\u7684\u201cW\u201d\u7684\u9996\u9886\u7684y\u5750\u6807\u3002\u8fd9\u91cc\u9996\u9886\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u662f\u5f53\u4f60\u679a\u4e3e\u5230\u4e00\u4e2a\u201cW\u201d\u662f\uff0c\u5c31\u53ef\u4ee5\u628a\u5b83\u5b9a\u4e49\u4e3a\u8fd9\u4e2a\u6e56\u7684\u9996\u9886\uff0c\u53ca\u81ea\u5df1\u7684\u9996\u9886\u662f\u81ea\u5df1\uff0c\u8fd9\u6837\u5f53\u679a\u4e3e\u5230\u5176\u4ed6\u548c\u8fd9\u4e2a\u6e56\u76f8\u8fde\u7684\u201cW\u201d\u65f6\u5c31\u53ef\u4ee5\u628a\u5b83\u7684\u9996\u9886\u5b9a\u4e49\u4e3a\u8fd9\u4e2a\u6e56\u7684\u9996\u9886\uff0c\u5c31\u4e0d\u4f1a\u628a\u8fd9\u4e2a\u201cW\u201d\u7b97\u5230\u5176\u5b83\u7684\u6e56\u91cc\u53bb\u4e86\u3002**\n\n1.\u679a\u4e3e\u6240\u6709\u70b9\n\n2.\u627e\u5230\u4e00\u4e2a\u201cW\u201d\u540e\uff0c\u6807\u8bb0\u6b64\u6e56\u5df2\u7ecf\u627e\u8fc7\u4e86\uff0c\u5e76\u5b58\u4e0b\u5750\u6807\uff0c\u628a\u6e56\u7684\u6570\u91cf + 1\n\n3.while\u5faa\u73af\u76f4\u5230\u6ca1\u6709\u627e\u5230\u5176\u4ed6\u548c\u7b2c2\u6b65\u4e0a\u9762\u679a\u4e3e\u7684\u9996\u9886\u76f8\u8fde\u7684\u201cW\u201d\u3002\u81f3\u4e8e\u600e\u4e48while\u5faa\u73af\u5462\uff0c\u770b\u4e0b\u9762\u7684\u4ee3\u7801\n\n```cpp\nwhile(true)//\u5faa\u73af\u76f4\u5230\u6ca1\u6709\u53ef\u8fde\u7684\"W\" \n{\n\tbool ff = false;//\u5b9a\u4e49\u4e00\u4e2aff\uff0c\u5224\u65ad\u662f\u5426\u627e\u5230\u4e86\u4efb\u4f55\u4e00\u4e2a\u53ef\u4ee5\u8fde\u7684\"W\" \n\tfor(int ii = 1; ii <= m; ii++)\n\t{\n\t\tfor(int jj = 1; jj <= n; jj++)\n\t\t{\n\t\t\tif(w[0][ii][jj] == i && w[1][ii][jj] == j)//\u5982\u679c\u4e00\u4e2a\"W\"\u7684\u9996\u9886\u662f\u4e0a\u9762\u679a\u4e3e\u5230\u7684\u9996\u9886\uff0c\u5c31\u53ef\u4ee5\u5224\u65ad\u6709\u6ca1\u6709\u548c\u8fd9\u4e2a\"W\"\u76f8\u8fde\u7684\"W\"\u4e86 \n\t\t\t{\n\t\t\t\tfor(int k = 0; k < 8; k++)//\u516b\u4e2a\u65b9\u5411 \n\t\t\t\t{\n\t\t\t\t\tif(q[ii + u[0][k]][jj + u[1][k]] == 'W' && !f[ii + u[0][k]][jj + u[1][k]])//\u5982\u679c\u662f\u4e2a\"W\"\uff0c\u4e14\u6ca1\u6709\u88ab\u8fde\u8fc7 \n\t\t\t\t\t{\n\t\t\t\t\t\tf[ii + u[0][k]][jj + u[1][k]] = true;//\u6539\u4e3a\u8fde\u8fc7\u4e86 \n\t\t\t\t\t\tw[0][ii + u[0][k]][jj + u[1][k]] = i;//\u628a\u9996\u9886\u5b9a\u4e49\u4e3a\u4e0a\u9762\u679a\u4e3e\u5230\u7684\u9996\u9886 \n\t\t\t\t\t\tw[1][ii + u[0][k]][jj + u[1][k]] = j;\n\t\t\t\t\t\tff = true;//\u6807\u8bb0\u4e3a\u8fd9\u6b21\u5faa\u73af\u8fde\u8fc7\"W\"\u4e86(\u8868\u793a\u8fd8\u6709\u53ef\u8fde\u7684\"W\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(!ff)//\u5982\u679c\u6ca1\u6709\"W\"\u53ef\u8fde\u4e86 \n\t{\n\t\tbreak;//\u9000\u51fa \n\t}\n}\n```\n\n\n\u5b8c\u6574\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint u[2][8] = {{1, -1, 1, -1, 0, 0, 1, -1}, {1, -1, -1, 1, 1, -1, 0, 0}};//\u516b\u4e2a\u65b9\u5411(\u6309\u987a\u5e8f)--->\uff1a\u2198\uff0c\u2196\uff0c\u2199\uff0c\u2197\uff0c\u2192\uff0c\u2190\uff0c\u2193\uff0c\u2191  \nint n, m, k, w[2][111][111], ans;\nchar q[111][111];\nbool f[111][111];\nint main()\n{\n\tscanf(\"%d %d\", &m, &n);\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tfor(int j = 1; j <= n; j++)\n\t\t{\n\t\t\tcin >> q[i][j];//\u8f93\u5165 \n\t\t}\n\t}\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tfor(int j = 1; j <= n; j++)\n\t\t{\n\t\t\tif(q[i][j] == 'W' && !f[i][j])//\u5982\u679c\u53d1\u73b0\u4e86\u4e00\u4e2a\u6e56\uff0c\u4e14\u6ca1\u6709\u88ab\u8fde\u8fc7 \n\t\t\t{\n\t\t\t\tf[i][j] = true;//\u6539\u4e3a\u8fde\u8fc7\u4e86 \n\t\t\t\tw[0][i][j] = i;//\u81ea\u5df1\u662f\u9996\u9886 \n\t\t\t\tw[1][i][j] = j;\n\t\t\t\tans++;//\u6e56\u7684\u6570\u91cf + 1 \n\t\t\t\twhile(true)//\u5faa\u73af\u76f4\u5230\u6ca1\u6709\u53ef\u8fde\u7684\"W\" \n\t\t\t\t{\n\t\t\t\t\tbool ff = false;//\u5b9a\u4e49\u4e00\u4e2aff\uff0c\u5224\u65ad\u662f\u5426\u627e\u5230\u4e86\u4efb\u4f55\u4e00\u4e2a\u53ef\u4ee5\u8fde\u7684\"W\" \n\t\t\t\t\tfor(int ii = 1; ii <= m; ii++)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor(int jj = 1; jj <= n; jj++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(w[0][ii][jj] == i && w[1][ii][jj] == j)//\u5982\u679c\u4e00\u4e2a\"W\"\u7684\u9996\u9886\u662f\u4e0a\u9762\u679a\u4e3e\u5230\u7684\u9996\u9886\uff0c\u5c31\u53ef\u4ee5\u5224\u65ad\u6709\u6ca1\u6709\u548c\u8fd9\u4e2a\"W\"\u76f8\u8fde\u7684\"W\"\u4e86 \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfor(int k = 0; k < 8; k++)//\u516b\u4e2a\u65b9\u5411 \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif(q[ii + u[0][k]][jj + u[1][k]] == 'W' && !f[ii + u[0][k]][jj + u[1][k]])//\u5982\u679c\u662f\u4e2a\"W\"\uff0c\u4e14\u6ca1\u6709\u88ab\u8fde\u8fc7 \n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tf[ii + u[0][k]][jj + u[1][k]] = true;//\u6539\u4e3a\u8fde\u8fc7\u4e86 \n\t\t\t\t\t\t\t\t\t\tw[0][ii + u[0][k]][jj + u[1][k]] = i;//\u628a\u9996\u9886\u5b9a\u4e49\u4e3a\u4e0a\u9762\u679a\u4e3e\u5230\u7684\u9996\u9886 \n\t\t\t\t\t\t\t\t\t\tw[1][ii + u[0][k]][jj + u[1][k]] = j;\n\t\t\t\t\t\t\t\t\t\tff = true;//\u6807\u8bb0\u4e3a\u8fd9\u6b21\u5faa\u73af\u8fde\u8fc7\"W\"\u4e86(\u8868\u793a\u8fd8\u6709\u53ef\u8fde\u7684\"W\")\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!ff)//\u5982\u679c\u6ca1\u6709\"W\"\u53ef\u8fde\u4e86 \n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;//\u9000\u51fa \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\", ans);//\u8f93\u51fa \n\treturn 0;\n} \n```\n\nPS\uff1a\u8ff7\u5bab\u95ee\u9898\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u505a",
        "postTime": 1558684942,
        "uid": 143681,
        "name": "Strong_Jelly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "\u8fd9\u9898\u4e4d\u4e00\u770b\u662f\u9053\u6c42\u8054\u901a\u5757\u7684\u6a21\u677f\u9898\uff0c\u90a3\u4e48\u8054\u901a\u5757\u5404\u4f4d\u5927\u4f6c\u90fd\u6709\u5404\u79cd\u795e\u5947\u7684\u529e\u6cd5\u7ef4\u62a4\u4f46\u662f\n### \u6211\u4eec\u4e0d\u8bb2\u8054\u901a\u5757\uff0c\u6211\u4eec\u8bb2\u5f3a\u8fde\u901a\u5206\u91cf\uff01\uff01\uff01\uff08\u4e0d\u8fde\u8fb9\u7684tarjan\u5466\uff09\n\n\u89c2\u5bdf\u9898\u9762\uff0c\u55ef\u4e0d\u9519\u8fd9\u662f\u9053\u7f51\u683c\u9898\u7684\u56fe\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u7528\u4e8c\u7ef4tarjan\u6c42\u5f3a\u8fde\u901a \u5206\u91cf\uff0c\n\n\u6211\u5c31\u4e0d\u8bb2tarjan\u4e86\uff0c\u8fd9\u662f\u4e00\u4e2a\u5957\u6a21\u677f\u7684\u9898\uff0c\u6211\u4eec\u5728\u3010\u6a21\u677f\u3011\u7f29\u70b9 \u7684\u4ee3\u7801\u4e0a\u52a0\u4e00\u7ef4\uff0c\u5177\u4f53\u5176\u4ed6\u548c\u6a21\u677f\u4e00\u6837\uff0c\u5957\u4e2a\u4ee3\u7801\u89c2\u5bdf\u89c2\u5bdf\uff1a\n\n```\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nint n,m,top=0,col=0,x=0,ans=0;//ans \u6ca1\u86cb\u7528\uff1b\n//\u76f4\u63a5\u8f93\u51facol\uff08\u5f3a\u8fde\u901a\u5206\u91cf\u4e2a\u6570\uff09\u5373\u53ef\nconst int N=105;\nstruct node{\n    int x,y;\n}stack[N*N];\nint low[N][N],dfn[N][N];//tarjan\u6807\u914d\nchar map[N][N];\nint co[N][N];//co\u8bb0\u6539\u70b9\u5c5e\u4e8e\u54ea\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\nint dx[]={-1,-1,-1,0,0,1,1,1},dy[]={-1,0,1,-1,1,-1,0,1};\nvoid tarjan(int ux,int uy){ \n    if(map[ux][uy]=='.')return;//\u9632\u6b62\u5bf9.\u8fdb\u884ctarjan\n    dfn[ux][uy]=low[ux][uy]=++x;\n    top++;\n    stack[top].x=ux;\n    stack[top].y=uy;\n    for(int i=0;i<8;++i){\n        int vx=ux+dx[i];int vy=uy+dy[i];\n        if(vx<1 || vx>n || vy<1 || vy>m)continue;//\u9632\u6b62\u8d85\u8fb9\u754c\n        if(map[vx][vy]=='.')continue;\n        if(!dfn[vx][vy]){\n            tarjan(vx,vy);\n            low[ux][uy]=min(low[ux][uy],low[vx][vy]);\n        } \n        else if(!co[vx][vy])\n            low[ux][uy]=min(low[ux][uy],dfn[vx][vy]);\n    }\n    if(dfn[ux][uy]==low[ux][uy]){\n        co[ux][uy]=++col;\n        map[ux][uy]='.';\n        while(stack[top].x!=ux || stack[top].y!=uy){\n            co[stack[top].x][stack[top].y]=col;\n            map[stack[top].x][stack[top].y]='.';\n            top--;\n        }\n        top--;\n    }\n}\nint main(){\n    std::ios::sync_with_stdio(false);//\u5173\u95ed\u540c\u6b65\n    cin>>n>>m;\n    for(int i=1;i<=n;++i)for(int j=1;j<=m;++j){\n        cin>>map[i][j];\n    }\n    \n    for(int i=1;i<=n;++i)for(int j=1;j<=m;++j)\n    if(!dfn[i][j])tarjan(i,j);\n    ans=col;\n    cout<<ans<<endl;\n}\n```\n\n\u554a\u8fd9\u662f\u4e00\u7bc7\u591a\u4e48\u8d34\u8fd1\u52b3\u52a8\u4eba\u6c11\u751f\u6d3b\u7684\u9898\u89e3\uff0c\u6c42\u7ba1\u7406\u5458\u653e\u6211\u53bb\u6551\u6d4e\u4f17\u4f4d\u5728tarjan\u4e2d\u5954\u817e\u7684\u5b69\u5b50\u4eec\u5427",
        "postTime": 1546873164,
        "uid": 87075,
        "name": "\u4e8c\u54e5\u5543\u83dc\u5305",
        "ccfLevel": 0,
        "title": "\u3010\u5047\u9898\u89e3\u3011P1596\u6e56\u8ba1\u6570\uff08tarjan)"
    },
    {
        "content": "# \u7b97\u6cd5\uff1aDFS\u8054\u901a\u5757\n## \u601d\u8def\uff1a\u627e\u5230\u6c34\u6d3c\uff081\uff09\uff0c\u6807\u8bb0\uff080\uff09\uff0c\u8ba1\u6570\n---------\n1.\u9898\u4e2d\u8981\u6c42$N,M$\u5747\u4e0d\u8d85\u8fc7$100$\uff0c\u6240\u4ee5\u53ea\u7528\u5b9a\u4e49$100*100$\u7684\u6570\u7ec4$lake$\u5c31\u884c\u3002\u53e6\u5916\uff0clake\u6570\u7ec4\u53ea\u9700\u8981\u4e24\u79cd\u72b6\u6001\uff0c\u5373\u201c$W$\u201d,\u201c$.$\u201d\uff0c\u56e0\u6b64\uff0c\u7528$bool$\u5c31\u884c\u3002\n\n```cpp\nconst int X = 110;//\u629b\u4e00\u70b9\uff0c\u56e0\u4e3a\u6570\u7ec4\u4e0b\u6807\u4ece0\u5f00\u59cb\nbool lake[X][X];\nint n,m;\n```\n\n2.\u4e00\u4e2a\u6c34\u6d3c\u8fde\u77408\u4e2a\u65b9\u5411\uff0c\u5982\u679c\u628a\u5f53\u524d\u6c34\u6d3c\u7684\u5750\u6807\u770b\u4f5c$W(0,0)$,\u90a3\u4e48\u5176\u4ed6\u56db\u4e2a\u65b9\u5411\u5c31\u662f$W_1(-1,-1),W_2(-1,1),W_3(1,-1),W_4(1,1),W_5(0,-1),W_6(0,1),W_7(-1,0),W_8(1,0)$\n\n\u5c31\u662f\u6a2a\u5750\u6807\u5206\u522b\u52a0$0,0,1,-1,1,-1,1,-1$,\u7eb5\u5750\u6807\u5206\u522b\u52a0$1,-1,0,0,1,1,-1,-1$\n\n```cpp\nint gox[] = {0,0,0,1,-1,1,-1,1,-1},\n    goy[] = {0,1,-1,0,0,1,1,-1,-1};\n```\n\n### \u597d\u4e86\uff0c\u5f00\u59cb\u521d\u59cb\u5316\u5427\n\n```cpp\nvoid init(){\n    string st;\n    cin>>n>>m;\n    for(int i = 1;i <= n;i++){\n        cin>>st;\n        for(int j = 0;j < m;j++){\n            if(st[j] == 'W'){\n                lake[i][j + 1] = true;//\u662f\u6c34\u6d3c\u5c31\u6807\u8bb0true\n            }\n            else{\n                lake[i][j + 1] = false;//\n            }\n        }\n    }\n}\n```\n\u5982\u679c\u56fe\u662f\u8fd9\u6837\uff1a\n```\nW.W\n.WW\n..W\n```\n\u90a3\u4e48lake\u6570\u7ec4\u91cc\u9762\u5c31\u662f\u8fd9\u6837\n```\n101\n011\n001\n```\n\n# OK\uff0c\u73b0\u5728\u5f00\u59cb\u4ece\u5f00\u5934\u626b\u63cf\uff0c\u627e\u5230\u6c34\u6d3c\u5c31\u4ece\u90a3\u91cc\u5f00\u59cbDFS\uff0c\u8ba9\u5468\u56f4\u7684\u6c34\u6d3c\u53d8\u4e3afalse\u3002\n```cpp\nfor(int i = 1;i <= n;i++){\n        for(int j = 1;j <= m;j++){\n            if(lake[i][j] == t){\n                dfs(i,j);\n                s++;//\u8ba1\u6570\n            }\n        }\n    }\n```\nDFS\u51fd\u6570\n```cpp\nvoid dfs(int x,int y){\n    lake[x][y] = false;//\u628a\u7b26\u5408\u7684\u5750\u6807\u8d4b\u4e3afalse\n    for(int i = 1;i <= 8;i++){\n        int xx = x + gox[i],\n            yy = y + goy[i];//xx\uff0cyy\u679a\u4e3e\u65b0\u5750\u6807\n        if(!check(xx,yy)){//\u5728\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u5982\u679c\u65b0\u7684\u5750\u6807\u4e0d\u7b26\u5408\uff0c\u90a3\u4e48\u5c31continue\u3002\n            continue;\n        }\n        dfs(xx,yy);\n    }\n}\n```\ncheck\u51fd\u6570\n```cpp\nbool check(int x,int y){\n    if(x > n||y > m){//\u8d85\u51fa\u8fb9\u754c\uff0c\u8fd4\u56defalse\n        return false;\n    }\n    if(x < 1||y < 1){\n        return false;//\u8d85\u51fa\u8fb9\u754c\uff0c\u8fd4\u56defalse\n    }\n    if(lake[x][y] == false){//\u4e0d\u662f\u6c34\u6d3c\uff0c\u8fd4\u56defalse\n        return false;\n    }\n    return true;\n}\n```\n\n\u628a\u5168\u90e8\u6c34\u6d3c\u8d4b\u4e3afalse\u540e\uff0c\u8fd9\u4e00\u6574\u5757\u6c34\u6d3c\u5c31\u4e0d\u5b58\u5728\u4e86\n\u5c31\u5f00\u59cb\u4e0b\u4e00\u5757\u3002\u3002\u3002\u3002\u3002\n\n### \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int X = 101;\nint n,m;\nbool lake[X][X];\nint gox[] = {0,0,0,1,-1,1,-1,1,-1},\n    goy[] = {0,1,-1,0,0,1,1,-1,-1};\n\nvoid init(){\n    string st;\n    cin>>n>>m;\n    for(int i = 1;i <= n;i++){\n        cin>>st;\n        for(int j = 0;j < m;j++){\n            if(st[j] == 'W'){\n                lake[i][j + 1] = true;\n            }\n            else{\n                lake[i][j + 1] = false;\n            }\n        }\n    }\n}\n\nbool check(int x,int y){\n    if(x > n||y > m){\n        return false;\n    }\n    if(x < 1||y < 1){\n        return false;\n    }\n    if(lake[x][y] == false){\n        return false;\n    }\n    return true;\n}\n\nvoid dfs(int x,int y){\n    lake[x][y] = false;\n    for(int i = 1;i <= 8;i++){\n        int xx = x + gox[i],\n            yy = y + goy[i];\n        if(!check(xx,yy)){\n            continue;\n        }\n        dfs(xx,yy);\n    }\n}\n\nint main(){\n    int s = 0;\n    init();\n    for(int i = 1;i <= n;i++){\n        for(int j = 1;j <= m;j++){\n            if(lake[i][j] == true){\n                dfs(i,j);\n                s++;\n            }\n        }\n    }\n    cout<<s<<endl;\n    return 0;\n}\n```\n\nPS:\u5982\u679c\u5927\u5bb6\u6709\u4ec0\u4e48\u4e0d\u61c2\u7684\uff0c\u5c31[\u79c1\u4fe1\u6211](https://www.luogu.org/space/show?uid=35971)",
        "postTime": 1549438373,
        "uid": 35971,
        "name": "\u52a0\u8f7d\u9519\u8bef",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "**\u63d0\u793a**\n\n1.\u6807\u7a0b\u8fd0\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22bfs\uff0c\u901a\u5e38\u91c7\u7528\u961f\u5217\u5b58\u50a8\u65b9\u5f0f\uff1b\n\n2.\u6ce8\u610f\uff1a\u9898\u89e3\u4e2d\u641c\u7d22\u8fc7\u7684\u6807\u8bb0\u5957\u8def\u662f\u8fd9\u6837\u7684\uff1a\u5982\u679c\u5bfb\u627e\u7684\u65b0\u5750\u6807xx\u548cyy\u5728\u6709\u6548\u8303\u56f4\u5185\uff0c\u4e14\u6807\u8bb0\u4e3a\u201c\u672a\u67e5\u627e\u8fc7\u201d\uff0c\u201c\u672a\u67e5\u627e\u8fc7\u201d\u6307\u7684\u662f\u6c34\u6d3c\"W\"\uff0c\u641c\u7d22\u5b8c\u6bd5\u6807\u8bb0\u4e3a\".\"\uff0c\u65b9\u4fbf\u91cd\u590d\u641c\u7d22\uff1b\n\n3.\u6570\u7ec4q\u4e0b\u6807\u7b2c\u4e8c\u4e2a\uff1a1->\u6a2a\u8f74\u6240\u5728\u4f4d\u7f6e\uff0c2->\u7eb5\u8f74\u6240\u5728\u4f4d\u7f6e\u3002\n\n**\u6807\u7a0b**\n\n```cpp\n/*\n\tName:USA Computing Olympiad\n\tCopyright:USACO_Official / luogu\n\tAuthor:Jason Mills\n\tDate: 05/10/18 15:30\n\tDescription:bfs_Lake Counting\n*/\n#include <iostream>\nusing namespace std;\nchar a[101][101];\nint q[10001][3];//q[]\u4e2d\u7684\u4e0b\u68071\u8868\u793a\u6a2a\u8f74\u6240\u5728\u4f4d\u7f6e\uff0c\u4e0b\u68072\u8868\u793a\u7eb5\u8f74\u6240\u5728\u4f4d\u7f6e \nint n,m,ans=0;\nint fx[]={1,1,1,0,0,-1,-1,-1};//\u5b9a\u4e498\u4e2a\u5750\u6807\u7684\u4f4d\u7f6e \nint fy[]={-1,0,1,-1,1,-1,0,1};\nvoid bfs(int,int);//\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22 \nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tcin>>a[i][j];\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif(a[i][j]=='W') bfs(i,j);//\u5982\u679c\u9047\u5230\u6c34\u6d3c\uff0c\u5c31\u5f00\u59cb\u641c\u7d22 \n\tcout<<ans<<endl;\n\treturn 0;\n}\nvoid bfs(int x,int y)//x->\u6a2a\u8f74\u6240\u5904\u7684\u4f4d\u7f6e\uff0cy->\u7eb5\u8f74\u6240\u5904\u7684\u4f4d\u7f6e \n{\n\tint head=0,tail=1;//head->\u961f\u5217\u5934\uff0ctail->\u961f\u5217\u5c3e \n\tint xx,yy;//xx->\u641c\u7d22\u5230\u7684\u6a2a\u8f74\u65b0\u5750\u6807\uff0cyy->\u641c\u7d22\u5230\u7684\u7eb5\u8f74\u65b0\u5750\u6807 \n\tans++;\n\tq[1][1]=x;//\u521d\u59cb\u5316\u961f\u9996 \n\tq[1][2]=y;\n\ta[x][y]='.';//\u961f\u9996\u6c34\u6d3c\u6807\u8bb0\u4e3a\u201c\u5df2\u67e5\u627e\u8fc7\u201d \n\tdo\n\t{\n\t\thead++;//\u5220\u9664\u961f\u9996 \n\t\tfor(int i=0;i<8;i++)//8\u4e2a\u65b9\u5411\u5f00\u59cb\u641c\u7d22 \n\t\t{\n\t\t\txx=q[head][1]+fx[i];//\u5bfb\u627ex\u7684\u65b0\u5750\u6807xx \n\t\t\tyy=q[head][2]+fy[i];//\u5bfb\u627ey\u7684\u65b0\u5750\u6807yy\n\t\t\tif(xx>=1 && xx<=n && yy>=1 && yy<=m && a[xx][yy]=='W')\n\t\t\t//\u5982\u679c\u5bfb\u627e\u7684\u65b0\u5750\u6807xx\u548cyy\u5728\u6709\u6548\u8303\u56f4\u5185\uff0c\u4e14\u6807\u8bb0\u4e3a\u201c\u672a\u67e5\u627e\u8fc7\u201d \n\t\t\t{\n\t\t\t\ta[xx][yy]='.';// \u6807\u8bb0\u4e3a\u201c\u5df2\u67e5\u627e\u8fc7\u201d\n\t\t\t\ttail++;//\u5165\u961f\uff0c\u961f\u5c3e+1 \n\t\t\t\tq[tail][1]=xx;// \u5165\u961f\u6a2a\u5750\u6807 \n\t\t\t\tq[tail][2]=yy;//\u5165\u961f\u7eb5\u5750\u6807 \n\t\t\t}\n\t\t}\n\t}while(head<tail);\n}\n```",
        "postTime": 1538731031,
        "uid": 129524,
        "name": "\u5927\u5b66\u58eb_USACO",
        "ccfLevel": 0,
        "title": "P1596 [USACO10OCT]\u6e56\u8ba1\u6570Lake Counting_\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u65f6\u849f\u84bb\u6a59\u540d\u4e4b\u540e\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u5982\u6709\u4e0d\u8db3\uff0c\u5927\u4f6c\u52ff\u55b7\uff0c\u5047\u4ee5\u544a\u77e5\uff0c\u5b9a\u4f1a\u6539\u6b63\u3002\n\u597d\u4e86\uff0c\u8bdd\u56de\u6b63\u9898\uff0c\u8fd9\u9053\u9898\u6807\u51c6\u7684\u641c\u7d22\uff0c\u6211\u7684\u65b9\u6cd5\n# \u5f88\u66b4\u529b\n\\(^o^)/\uff0c\u4e0b\u9762\u662f\u6211\u7684\u641c\u7d22\u4ee3\u7801\uff08dfs\uff09\uff1a\n```\nvoid dfs(int x,int y)\n{\n\tif(x<1||x>n||y<1||y>m)\n\treturn;\n\tif(map[x+1][y]!='.')\n\t{\n\t\tmap[x+1][y]='.';\n\t\tdfs(x+1,y);\n\t}\n\tif(map[x-1][y]!='.')\n\t{\n\t\tmap[x-1][y]='.';\n\t\tdfs(x-1,y);\n\t}\n\tif(map[x][y+1]!='.')\n\t{\n\t\tmap[x][y+1]='.';\n\t\tdfs(x,y+1);\n\t}\n\tif(map[x][y-1]!='.')\n\t{\n\t\tmap[x][y-1]='.';\n\t\tdfs(x,y-1);\n\t}\n\tif(map[x+1][y+1]!='.')\n\t{\n\t\tmap[x+1][y+1]='.';\n\t\tdfs(x+1,y+1);\n\t}\n\tif(map[x-1][y+1]!='.')\n\t{\n\t\tmap[x-1][y+1]='.';\n\t\tdfs(x-1,y+1);\n\t}\n\tif(map[x+1][y-1]!='.')\n\t{\n\t\tmap[x+1][y-1]='.';\n\t\tdfs(x+1,y-1);\n\t}\n\tif(map[x-1][y-1]!='.')\n\t{\n\t\tmap[x-1][y-1]='.';\n\t\tdfs(x-1,y-1);\n\t}\n}\n```\n\u600e\u4e48\u6837\uff0c\u591f\u66b4\u529b\u5427\uff0c\u4ece\u516b\u4e2a\u65b9\u5411\u641c\u7d22\uff0c\u76f4\u5230\u628a\u8fde\u7740\u7684\u6c34\u5751\u90fd\u53d8\u6210'.'\u4e86\u5c31\u7ed3\u675f\uff0c\u7136\u540e\u4e00\u4e2a\u53cc\u91cd\u5faa\u73af\uff0c\u4e00\u4e2a\u4e00\u4e2a\u5224\u65ad\uff0c\u51e1\u662f\u5224\u65ad\u5230\u662f\u6c34\u5751\uff0cans++;\u4e4b\u540e\u5c31\u7528\u8fd9\u4e2a\u51fd\u6570\u628a\u5468\u56f4\u7684\u90fd\u53d8\u6210'.'\uff0c\u518d\u63a5\u7740\u5224\u65ad\u5c31\u597d\u5566\uff0c\u4e0b\u9762\u662f\u672c\u9898\u7684coding:\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,m;\nvoid dfs(int x,int y);\nchar map[10010][10010];\nbool b[10010][10010];\nint ans;\nint main()\n{\n\t//freopen(\"in.txt\",\"r\",stdin);\n\t//freopen(\"out.txt\",\"w\",stdout); \n\tcin>>n>>m;\n\tchar s;\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)\n\t{\n\t\tcin>>map[i][j];\n\t}\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)\n\t{\n\t\tif(map[i][j]!='.')\n\t\t{\n\t\t\tmap[i][j]='.';\n\t\t\tans++;\n\t\t\tdfs(i,j);//\u628a\u5468\u56f4\u7684\u6c34\u5751\u90fd\u53d8\u6210'.'\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;\n}\nvoid dfs(int x,int y)\n{\n\tif(x<1||x>n||y<1||y>m)\n\treturn;\n\tif(map[x+1][y]!='.')\n\t{\n\t\tmap[x+1][y]='.';\n\t\tdfs(x+1,y);\n\t}\n\tif(map[x-1][y]!='.')\n\t{\n\t\tmap[x-1][y]='.';\n\t\tdfs(x-1,y);\n\t}\n\tif(map[x][y+1]!='.')\n\t{\n\t\tmap[x][y+1]='.';\n\t\tdfs(x,y+1);\n\t}\n\tif(map[x][y-1]!='.')\n\t{\n\t\tmap[x][y-1]='.';\n\t\tdfs(x,y-1);\n\t}\n\tif(map[x+1][y+1]!='.')\n\t{\n\t\tmap[x+1][y+1]='.';\n\t\tdfs(x+1,y+1);\n\t}\n\tif(map[x-1][y+1]!='.')\n\t{\n\t\tmap[x-1][y+1]='.';\n\t\tdfs(x-1,y+1);\n\t}\n\tif(map[x+1][y-1]!='.')\n\t{\n\t\tmap[x+1][y-1]='.';\n\t\tdfs(x+1,y-1);\n\t}\n\tif(map[x-1][y-1]!='.')\n\t{\n\t\tmap[x-1][y-1]='.';\n\t\tdfs(x-1,y-1);\n\t}\n}\n```\n\u5c31\u6211\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u6211\u7684\u4ee3\u7801\u8fd8\u662f\u5f88\u597d\u7406\u89e3\u7684\u3002",
        "postTime": 1565273373,
        "uid": 206423,
        "name": "\u711a\u9b42",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "# \u4e00\u9053$DFS$\u6c42\u516b\u8fde\u5757\u7684\u9898\u76ee\n>  \u4e00\u4e2a\u7f51\u683c\u4e0e\u5176\u5468\u56f4\u7684\u516b\u4e2a\u7f51\u683c\u76f8\u8fde\uff0c\u800c\u4e00\u7ec4\u76f8\u8fde\u7684\u7f51\u683c\u89c6\u4e3a\u4e00\u4e2a\u6c34\u5751\u3002\u7ea6\u7ff0\u60f3\u5f04\u6e05\u695a\u4ed6\u7684\u7530\u5730\u5df2\u7ecf\u5f62\u6210\u4e86\u591a\u5c11\u6c34\u5751\u3002\u7ed9\u51fa\u7ea6\u7ff0\u7530\u5730\u7684\u793a\u610f\u56fe\uff0c\u786e\u5b9a\u5f53\u4e2d\u6709\u591a\u5c11\u6c34\u5751\u3002  \n\n\u8fd9\u5c31\u662f\u516b\u8fde\u5757\u7684\u9898\u76ee\uff0c\u6240\u4ee5\u6211\u4eec\u6c42\u516b\u8fde\u5757\u7684\u4e2a\u6570\u5373\u53ef\uff0c\u6211\u4eec\u7528\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u7b80\u5355\u6613\u61c2\u3002  \n\u5148\u4e0a\u4ee3\u7801\uff1a  \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nstring mp[105];//\u5b58\u653e\u5730\u56fe\nint dx[8] = {-1,1,0,0,-1,1,1,-1};//8\u4e2a\u65b9\u5411\uff0c\u7528\u4e8e\u6269\u5c55\u8282\u70b9\uff0c\u4e0a \u4e0b \u5de6 \u53f3 \u53f3\u4e0a \u53f3\u4e0b \u5de6\u4e0b \u5de6\u4e0a\nint dy[8] = {0,0,-1,1,1,1,-1,-1};\nbool isin(int x,int y)\n{\n\treturn 0 <= x && 0 <= y && x < n && y < m;//\u5224\u65ad\u662f\u5426\u8d70\u51fa\u4e86\u5730\u56fe\n}\nvoid dfs(int x,int y)//dfs\n{\n\tmp[x][y] = '.';//\u8d70\u8fc7\u7684\u6807\u8bb0\u4e3a\u571f\u5730\n\tfor(int i = 0;i < 8;i++)//\u5f808\u4e2a\u65b9\u5411\u8d70\n\t{\n\t\tint tx = x + dx[i];//\u8d70\u76f8\u90bb\u7684\u8282\u70b9\n\t\tint ty = y + dy[i];\n\t\tif(isin(tx,ty) && !vis[tx][ty] && mp[tx][ty] == 'W')//\u7b26\u5408\u6761\u4ef6\n\t\t{\n\t\t\tdfs(tx,ty);//\u641c\u7d22\u76f8\u90bb\u8282\u70b9\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i = 0;i < n;i++)\n\t{\n\t\tcin>>mp[i];\n\t}\n\tint cnt = 0;\n\tfor(int i = 0;i < n;i++)\n\t{\n\t\tfor(int j = 0;j < m;j++)\n\t\t{\n\t\t\tif(mp[i][j] == 'W')//\u627e\u5230\u4e00\u4e2a\u6c34\u5751\u7684\u5f00\u59cb\n\t\t\t{\n\t\t\t\tdfs(i,j);//\u5c06\u8fd9\u4e2a\u6c34\u5751\u5168\u90e8\u5937\u4e3a\u5e73\u5730\n\t\t\t\tcnt++;//\u8ba1\u6570\u5668++\n\t\t\t}\n\t\t}\n\t}\n\tcout<<cnt;//\u8f93\u51fa\u7b54\u6848\n\treturn 0;\n}\n```\n\u7528$DFS$\u6c42\u516b\u8fde\u5757\u7684\u4e3b\u8981\u601d\u60f3\u5c31\u662f\uff1a\u627e\u5230\u4e00\u4e2a\u6c34\u5751\uff08\u610f\u5473\u7740\u4e00\u4e2a\u5927\u6c34\u5751\u7684\u5f00\u59cb\uff09\uff0c\u5c06\u4ed6\u4e0e\u5979\u8fde\u63a5\u7684\u6c34\u5751\u5937\u4e3a\u5e73\u5730\uff08\u907f\u514d\u540c\u4e00\u4e2a\u5927\u6c34\u5751\u91cd\u590d\u8ba1\u6570\uff09\uff0c\u7136\u540e\u8ba1\u6570\u5668\u52a0\u52a0\uff0c\u627e\u4e0b\u4e00\u4e2a\u6c34\u5751\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002  \n~~\u849f\u84bb\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u6709\u95ee\u9898\u8bf7\u63d0\u51fa~~",
        "postTime": 1563057904,
        "uid": 137469,
        "name": "\u970d\u58eb\u5f18",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "## \u8fd9\u662f\u4e00\u9053\u5178\u578b\u7684 ~~\u9aa8\u80f3\u6e05\u5947~~ DFS\u6df1\u5ea6\u4f18\u5148\u641c\u7d22(\u8fde\u901a\u57df)\u9898\u76ee\n\u601d\u8def:\n\n+ \u5148\u627e\u5230\u4e00\u4e2a\u4e3a$\u2018W\u2019$\u7684\u5b57\u7b26,\u7136\u540e\u518d\u628a\u8fd9\u4e2a\u5b57\u7b26\u66ff\u6362\u6210  $\u00b7(\u70b9)$ ,  \u7136\u540e\u518d\u4ece\u5f53\u524d\u5b57\u7b26\u904d\u5386\u516b\u65b9\uff0c\u6700\u540e\n```cpp\nif(\u8fd9\u4e2a\u5b57\u7b26\u662fW)\n    \u8fd4\u56de1;\nelse\n    \u8fd4\u56de0;\n```\n![](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1558965220&di=f3c8999392850adc397efe311d86c468&imgtype=jpg&er=1&src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fimages%2F20181122%2F1883ccd3b9bf418482dbf10365a40457.jpeg)\n### \u65e2\u7136\u601d\u8def\u5df2\u7ecf\u7ed9\u4e86,\u90a3\u5c31\u4e0a\u4ee3\u7801 ~~\u6252~~ \u5427\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define MAXN 105\nchar data[MAXN][MAXN] = {0};\nint m,n,ans = 0;\nint DFS(int,int);\nint main()\n{\n\tcin>>m>>n;\n\tfor(int y = 1; y <= m; ++y)\n\t\tfor(int x = 1; x <= n; ++x)\n\t\t\tcin>>data[y][x];\n\tfor(int y = 1; y <= m; ++y)\n\t\tfor(int x = 1; x <= n; ++x)\n\t\t\tif(1 == DFS(x,y))\n\t\t\t\tans++;\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\nint DFS(int x,int y)\n{\n\tif('W' == data[y][x])\n\t{\n\t\tdata[y][x] = '.';\n\t\tDFS(x-1,y-1);\n\t\tDFS(x,y-1);\n\t\tDFS(x+1,y-1);\n\t\tDFS(x-1,y);\n\t\tDFS(x+1,y);\n\t\tDFS(x-1,y+1);\n\t\tDFS(x,y+1);\n\t\tDFS(x+1,y+1); \n\t\treturn 1;\n\t}\n\treturn 0;\n}\n```\n# (\u4ee3\u7801\u597d\u957f\u554a\u554a\u554a)\n![](https://ss2.bdstatic.com/70cFvnSh_Q1YnxGkpoWK1HF6hhy/it/u=2804687714,205299780&fm=26&gp=0.jpg)\n# \u54d2\u54d2\u54d2,\u4f18\u5316\u5b8c\u6bd5!\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define MAXN 105\nchar data[MAXN][MAXN] = {0};\nint m,n,ans = 0;\nint dx[]={-1,0,1,-1,1,-1,0,1},dy[]={-1,-1,-1,0,0,1,1,1};\nint DFS(int,int);\nint main()\n{\n\tcin>>m>>n;\n\tfor(int y = 1; y <= m; ++y)\n\t\tfor(int x = 1; x <= n; ++x)\n\t\t\tcin>>data[y][x];\n\tfor(int y = 1; y <= m; ++y)\n\t\tfor(int x = 1; x <= n; ++x)\n\t\t\tif(1 == DFS(x,y))\n\t\t\t\tans++;\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\nint DFS(int x,int y)\n{\n\tif('W' == data[y][x])\n\t{\n\t\tdata[y][x] = '.';\n\t\tfor(int i = 0; i < 8; i++)\n\t\t\tDFS(x+dx[i],y+dy[i]);\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n```\n#### \u7528\u4e00\u4e2a\u5faa\u73af\u5c31\u884c\u4e86\n* * *\n\u4e3a\u4e86\u8ba9\u5927\u5bb6\u770b\u5230\u9012\u5f52\u7684\u5168\u8fc7\u7a0b,\u5c0f\u7f16\u4e0a\u4e00\u4e2a\u4ee3\u7801,\u6ce8\u610f,\u524d\u65b9\u9ad8\u80fd!\n\n![](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1558370982332&di=6f4fd6d4aec881cab9898db4e02cc7a4&imgtype=0&src=http%3A%2F%2Fs7.sinaimg.cn%2Fmw690%2F006SRo6ezy7d7HkhHXEb6%26690)\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <windows.h>\nusing namespace std;\n#define MAXN 105\nchar data[MAXN][MAXN] = {0};\nint m,n,ans = 0;\nint dx[]={-1,0,1,-1,1,-1,0,1},dy[]={-1,-1,-1,0,0,1,1,1};\nint DFS(int,int);\nvoid print(int,int);\nint main()\n{\n\tcin>>m>>n;\n\tfor(int y = 1; y <= m; ++y)\n\t\tfor(int x = 1; x <= n; ++x)\n\t\t\tcin>>data[y][x];\n\tfor(int y = 1; y <= m; ++y)\n\t\tfor(int x = 1; x <= n; ++x)\n\t\t\tif(1 == DFS(x,y))\n\t\t\t\tans++;\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\nint DFS(int x,int y)\n{\n\tif('W' == data[y][x])\n\t{\n\t\tdata[y][x] = '.';\n\t\tprint(m,n);\n\t\tfor(int i = 0; i < 8; i++)\n\t\t\tDFS(x+dx[i],y+dy[i]);\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nvoid print(int x,int y)\n{\n\tSleep(500);\n\tsystem(\"cls\");\n\tfor(int i = 1; i <= x; i++)\n\t{\n\t\tfor(int j = 1; j <= y; j++)\n\t\t\tcout<<data[i][j];\n\t\tcout<<endl;\t\n\t}\n\treturn;\n}\n```\n# \u597d\u4e86,\u8fd9\u9053\u9898\u5c31\u5230\u8fd9\u91cc,\u4e0b\u9053\u9898\u89c1!\n![](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1558371467309&di=13e5fb7b8796f816aae5087e061d8df2&imgtype=0&src=http%3A%2F%2Fimg.gifhome.com%2Fgif%2Fs%2F20181102%2Ff0ae84ea1935e8a22655025a4804a5d2.jpg%3Fx-oss-process%3Dimage%2Fresize%2Cw_174)",
        "postTime": 1558361448,
        "uid": 184777,
        "name": "codeboyzzb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "\u6df1\u641c\u5373\u53ef\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nchar a[200][200];\nint dx[8]={-1,-1,-1,0,0,1,1,1},dy[8]={-1,0,1,-1,1,-1,0,1};\nint ans,n,m;\nvoid dfs(int x,int y) {\n    a[x][y]='.';\n    for(int i=0; i<8; ++i) {\n        int xx=x+dx[i];\n        int yy=y+dy[i];\n        if((xx>=0)&&(xx<n)&&(yy>=0)&&(yy<m)&&(a[xx][yy]=='W'))\n            dfs(xx,yy);\n    }\n}\nint main() {\n    cin>>n>>m;\n    for(int i=0; i<n; ++i)\n        for(int j=0; j<m; ++j)\n            cin>>a[i][j];\n    for(int i=0; i<n; ++i)  \n        for(int j=0; j<m; ++j)  \n            if(a[i][j]=='W') {\n                dfs(i,j);\n                ans++;\n            }\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1549758146,
        "uid": 112917,
        "name": "Eason_AC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "\u6765\u4e00\u4e2aPython\u7684\u7a0b\u5e8f\n```python\nimport sys\nsys.setrecursionlimit(10000 + 13)  #\u9650\u5236\u9012\u5f52\u5c42\u6570\uff0c\u5426\u5219\u6709\u4e00\u4e2a\u70b9RE\n\nm,n = map(int, input().split())\nfield=[list(input()) for i in range(m)]\n\ndx = [-1, -1, -1, 0, 0, 1, 1, 1]\ndy = [-1, 0, 1, -1, 1, -1, 0, 1]\nv = [[0] * n for i in range(m)]\n\ndef dfs(x,y):\n    v[x][y] = 1\n    for k in range(len(dx)):\n        tx = x + dx[k]\n        ty = y + dy[k]\n        if tx < 0 or tx >= m or ty < 0 or ty >= n:\n            continue\n        if field[tx][ty] == '.' or v[tx][ty] == 1:\n            continue\n        dfs(tx,ty)\n\n\nans = 0\nfor i in range(m) :\n    for j in range(n) :\n        if v[i][j] == 0 and field[i][j] == 'W':\n            dfs(i,j)\n            ans = ans + 1\n\nprint(ans)\n\n```",
        "postTime": 1545219197,
        "uid": 68635,
        "name": "hfcxb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "\u6211\u770b\u8bb8\u591adalao\u90fd\u662f\u7528DFS\u5199\u7684,\u90a3\u6211\u5c31\u6765\u4e00\u4e2aBFS.\n\n\u6b64\u9898\u4e0d\u96be,\u5c31\u662f\u4e00\u4e2a\u8054\u901a\u5757\u8ba1\u6570\u7684\u6a21\u677f\u9898.\n\n## \u601d\u8def:\n\n\u56e0\u4e3a\u8981\u8bb0\u5f55\u7531'W'\u7ec4\u6210\u7684\u8054\u901a\u5757\u7684\u6570\u91cf,\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2abool\u578b\u6570\u7ec4vis\u5148\u904d\n\n\u5386\u5168\u56fe\u627e\u5230'W'\u5c31\u5c06vis\u8d4b\u503c\u4e3atrue,\u518d\u8dd1\u4e00\u904dBFS\u5c06\u548c\u8fd9\u4e2a'W'\u76f8\u8fde\u7684\u8054\u901a\u5757\u5168\u8d4b\u503c\n\n\u4e3afalse,\u90a3\u4e48\u6211\u4eec\u4e0b\u6b21\u5bfb\u627e\u4e0b\u4e00\u4e2a\u8054\u901a\u5757\u7684\u65f6\u5019\u5c31\u4e0d\u4f1a\u627e\u8fd9\u4e2a\u8054\u901a\u5757\u4e86,\u56e0\u6b64\u6211\u4eec\u5c31\n\n\u5b8c\u6210\u4e86\u8ba1\u6570.\n\n### \u6b65\u9aa4:\n\n1.vis\u5c06\u5b57\u6bcd'W'\u8d4b\u503c\u4e3atrue.\n\n2.\u8dd1\u4e00\u8fb9BFS\u5c06\u4e0e\u8fd9\u4e2a'W'\u76f8\u8fde\u7684\u8054\u901a\u5757\u6807\u8bb0.\n\n3.\u8ba1\u6570.\n\n~~\u732e\u4e0a\u5197\u957f\u4e11\u964b\u7684\u4ee3\u7801~~\n\n\u5982\u679c\u8fd8\u6709\u4e0d\u61c2\u7684\u89c1\u4ee3\u7801.\n\n## \u4ee3\u7801:\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <string>\n#include <queue>\nusing namespace std;\nconst int N=100;\nint n,m,startx,starty,keay;\nchar Map[N][N];\nbool vis[N][N],judge[N][N];//vis\u5224\u65ad,judge\u5224\u65ad\u662f\u5426\u91cd\u590dBFS\u57fa\u672c\u64cd\u4f5c\nint dirx[8]={0,1,-1,0,1,-1,1,-1};\nint diry[8]={1,0,0,-1,1,1,-1,-1};\nstruct Node \n{\n\tint x,y;\n};\nvoid bfs()\n{\n\tvis[startx][starty]=false;\n\tjudge[startx][starty]=true;\n\tqueue<struct Node> que;\n\tstruct Node now;\n\tnow.x=startx;now.y=starty;\n\tque.push(now);\n\twhile(!que.empty())\n\t{\n\t\tnow=que.front();\n\t\tque.pop();\n\t\tfor(int i=0;i<8;i++)\n\t\t{\n\t\t\tint xx=now.x+dirx[i];\n\t\t\tint yy=now.y+diry[i];\n\t\t\tif(xx<1||xx>n||yy<1||yy>m) continue;\n\t\t\tif(judge[xx][yy]) continue;\n\t\t\tif(Map[xx][yy]=='.') continue;\n\t\t\tjudge[xx][yy]=true;\n\t\t\tvis[xx][yy]=false;//\u672c\u9898\u7684\u6838\u5fc3BFS\u7684\u540c\u65f6\u5c06\u4e0e'W'\u76f8\u8fde\u7684\u8054\u901a\u5757\u8d4b\u503c\u4e3afalse,\u90a3\u4e48\u4e0b\u6b21\u6211\u4eecBFS\u7684\u65f6\u5019\u8fd9\u4e2a\u8054\u901a\u5757\u5c31\u662ffalse\u5c31\u4e0d\u4f1a\u5bf9\u8fd9\u4e2a\u8054\u901a\u5757\u8fdb\u884cBFS.\n\t\t\tstruct Node next;\n\t\t\tnext.x=xx;next.y=yy;\n\t\t\tque.push(next);\n\t\t}\n\t}\n\treturn;\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)//\u904d\u5386\u5168\u56fe\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tcin>>Map[i][j];\n\t\t\tif(Map[i][j]=='W')//\u5982\u679c\u627e\u5230'W'\u5c31\u5c06vis\u8d4b\u503c\u4e3atrue.\n\t\t\tvis[i][j]=true;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(vis[i][j])\n\t\t\t{\n\t\t\t\tstartx=i;starty=j;//BFS\n\t\t\t\tbfs();\n\t\t\t\tkeay++;//\u8ba1\u6570\n\t\t\t}\n\t\t}\n\t}\n\tcout<<keay;\n\treturn 0;\n}\n```",
        "postTime": 1540127264,
        "uid": 103301,
        "name": "CCCPKeay",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "## DFS\u7ecf\u5178\u9898\uff08\u67d3\u8272\uff0c\u53c8\u53eb\u6c42\u8054\u901a\u5757\uff09\uff0c\u8ddf\u8bb8\u591a\u9898\u6709\u7c7b\u4f3c\u7684\u5730\u65b9\n\n### \u67d3\u8272\uff0c\u5b83\u7684\u540d\u5b57\u544a\u8bc9\u6211\u4eec\uff0c\u662f\u4e00\u4e2a\u4ece\u4e00\u5f20\u767d\u7eb8\uff08\u521d\u59cb\u72b6\u6001\uff09\uff0c\u4e00\u6b65\u6b65\u67d3\u6210\u9700\u8981\u7684\u7ed3\u679c\n\n#### DFS\uff0c\u5168\u7a0b\u4e3a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u4e5f\u53eb\u6df1\u641c\uff0cDFS\uff0c\u66fe\u5728NOIP\u4e2d\u51fa\u73b0\u591a\u6b21\uff0c\u662f\u6bcf\u4e2aOIER\u5fc5\u5b66\u7684\u7b97\u6cd5\n\n\n#### \u5176\u4ed6DFS\u7ecf\u5178\u9898\uff1a\u516b\u7687\u540e\uff0c\u5168\u6392\u5217\u95ee\u9898\uff0c\u7ea6\u745f\u592b\u73af\u7b49\n\n##### \u56de\u5230\u672c\u9898\uff0c\u672c\u9898\u601d\u8def\uff1a\u5148\u987a\u7740\u67e5\u627e\u4e00\u904d\uff0c\u627e\u5230\u6c34\u5751\u628a\u5b83\u8bbe\u4e3a\u65f1\u5730\uff0c\u7136\u540eDFS\u6df1\u641c\uff0c\u6df1\u641c\u8fc7\u7a0b\u4e2d\uff0c\u641c\u8fc7\u5c31\u8bbe\u6210\u65f1\u5730\uff0c\u6bcf\u641c\u4e00\u6b21\u52a0\u65b9\u5411\uff0c\u7ee7\u7eed\u641c\u3002\n\n**\u4e0a\u4ee3\u7801\uff1a**\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nchar s[105][105];\nint n,m,ans,f[8][2]={{-1,-1},{-1,0},{-1,1},{0,1},{1,1},{1,0},{1,-1},{0,-1}};//\u65b9\u5411\u589e\u91cf\u6570\u7ec4\nint dfs(int x,int y){//\u6df1\u641c\u8fc7\u7a0b\n    if(!(x<0||y<0||x>=n||y>=m)){\n        if(s[x][y]=='W'){\n            s[x][y]='.';//\u8bbe\u4e3a\u65f1\u5730\uff08\u67d3\u8272\uff09\n             for(int i=0;i<=7;i++){\n                dfs(x+f[i][0],y+f[i][1]);//7\u4e2a\u65b9\u5411\u7ee7\u7eed\u641c\n        }\n        return 1;\n    }\n    }\n}\nint main(){\n    cin>>n>>m;//\u8bfb\u5165\n    for(int i=0;i<n;i++)cin>>s[i];//\u8bfb\u5165\n    for(int i=0;i<n;i++){\n        for(int j=0;j<m;j++)if(s[i][j]=='W')ans+=dfs(i,j);//\u5224\u65ad\u53ef\u4ee5\u641c\uff0c\u5c31\u641c\n    }\n    cout<<ans<<endl;//\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1514988047,
        "uid": 56561,
        "name": "\u82b1\u5343\u6811",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "#\u4e00\u9053\u7b80\u5355\u7684DFS\uff0c\u8bdd\u8bf4\u4f60\u4e0d\u8981\u95ee\u6211DFS\u662f\u4ec0\u4e48\u3002\n\n#\u9898\u76ee\u5206\u6790\n\n\u8fd9\u9053\u9898\u76ee\u5f88\u591a\u4eba\u4e00\u5f00\u59cb\u53ef\u80fd\u770b\u4e0d\u61c2\uff0c\u5176\u5b9e\u5c31\u662f\u641c\u4e0a\uff0c\u4e0b\uff0c\u5de6\uff0c\u53f3\uff0c\u5de6\u4e0a\uff0c\u53f3\u4e0a\uff0c\u5de6\u4e0b\uff0c\u53f3\u4e0b\u5206\u522b\u6709\u6ca1\u6709\u6c34\uff0c\u5982\u679c\u6709\u6c34\uff0c\u5c31\u7ee7\u7eed\u641c\uff0c\u76f4\u5230\u4e0d\u80fd\u641c\u4e3a\u6b62\u3002\n\n\u5176\u5b9e\u8fd9\u9898\u548c[\u5723\u8bde\u591c\u7684\u6781\u5149](https://www.luogu.org/problemnew/show/1454)\u5dee\u4e0d\u591a\uff0c\u505a\u51fa\u8fd9\u9898\u540e\uff0c\u505a\u5723\u8bde\u591c\u7684\u6781\u5149\u5c31\u5f88\u7b80\u5355\u4e86\u3002\n\n##\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n\n\n\n```cpp\n//--\u65b0\u9636\u68af\u5de5\u4f5c\u5ba4\u9632\u4f2a\u6c34\u5370-- \n//--By\u65b0\u9636\u68af\u5de5\u4f5c\u5ba4 \u95ea\u73b0--\n#include <ctime>\n#include <cmath>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>//\u5934\u6587\u4ef6\u51c6\u5907\n#define in freopen (\".in\",\"r\",stdin)\n#define out freopen (\".out\",\"w\",stdout)\n#define INF 2147483647\n#define UNINF -2147483648ll\n#define ch char\n#define bo bool\n#define ui unsigned int\n#define ll long long//\u95ea\u73b0\u4e3a\u4e86\u5c11\u6253\u51e0\u4e2a\u5b57\u7b26\uff0c\u5f04\u4e86\u597d\u591a\u597d\u591a\u5b8f\u5b9a\u4e49\nusing namespace std;\nint n,m,ans,dx[9]={0,1,0,-1,0,1,1,-1,-1},dy[9]={0,0,1,0,-1,1,-1,1,-1};//dx\u548cdy\u662f\u65b9\u5411\u6570\u7ec4\nch map[105][105];\ninline void dfs(int x,int y);\ninline void work();\nint main(){\n    //in;out;\n    work();\n    return 0;\n}\ninline void dfs(int x,int y){\n    map[x][y]='.';//\u5c06\u5b83\u53d8\u4e3a\u4e0d\u662f\u6c34\uff0c\u8981\u4e0d\u7136\u4f1a\u641c\u597d\u591a\u904d\n    bo ok=1;\n    for (int i=1;i<=8;i++){\n        if (x+dx[i]>=1&&x+dx[i]<=n&&y+dy[i]>=1&&y+dy[i]<=m&&map[x+dx[i]][y+dy[i]]=='W'){dfs(x+dx[i],y+dy[i]);ok=0;}//\u4ee5\u9632\u8d8a\u754c\uff0c\u672a\u8d8a\u754c\u5c31\u641c\uff0c\u8d8a\u754c\u5c31\u4e0d\u641c\n    }\n    if (ok)return;//\u5982\u679c\u5565\u4e5f\u6ca1\u641c\u5230\u5c31\u8fd4\u56de\uff0c\u63d0\u9ad8\u8fd0\u884c\u901f\u5ea6\n}\ninline void work(){\n    scanf (\"%d %d\\n\",&n,&m);\n    for (int i=1;i<=n;i++){\n        for (int j=1;j<=m;j++){\n            scanf (\"%c\",&map[i][j]);\n        }\n        scanf (\"\\n\");\n    }\n    for (int i=1;i<=n;i++){\n        for (int j=1;j<=m;j++){\n            if (map[i][j]=='W'){dfs(i,j);ans++;}//\u5982\u679c\u662f\u4e2a\u6c34\uff0c\u90a3\u4e48\u5c31\u641c\u7d22\u4e00\u904d\uff0c\u7136\u540e\u5c31\u662f\u4e00\u4e2a\u6c34\u5751\n        }\n    }\n    printf (\"%d\\n\",ans);//\u6700\u540e\u8f93\u51fa\n}\n\n```",
        "postTime": 1511188716,
        "uid": 28182,
        "name": "Dr_\u6b87",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "**\u8fd9\u9053\u9898\u53ef\u4ee5\u7528bfs\u89e3\u51b3\n\n\u5199\u5f97\u6bd4\u8f83\u7b80\u5355\uff0c\u4ec5\u4f9b\u53c2\u8003**\n\n**\u6ce8\u610f\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u5927\u4e86\u5c31MLE\uff0c\u5c0f\u4e86\u5c31RE**\n\n**\u4e0a\u4ee3\u7801\uff1a**\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint read(){\n    char tmp=getchar();\n    int result = tmp == '-' ? 0 : tmp - '0' , f = tmp == '-' ? -1 : 1 ;\n    while(true){\n        tmp=getchar();\n        if(tmp>='0'&&tmp<='9') result=result*10+tmp-'0';\n        else return result*f;\n    }\n}\nint cz[120][120];\nint n,m;\nint num=0;\nint dx[8]={-1,-1,0,1,1,1,0,-1},\n    dy[8]={0,1,1,1,0,-1,-1,-1};\nvoid bfs(int p,int q){\n    int head=0,tail=1;\n    num++;\n    int d[1000][3];\n    d[1][1]=p,d[1][2]=q;\n    do{\n        head++;\n        for(int i = 0 ;i < 8;++i ){\n            int x=dx[i]+d[head][1],y=dy[i]+d[head][2];\n            if(x>=0&&x<n&&y>=0&&y<m&&cz[x][y]){\n                tail++;\n                d[tail][1]=x;\n                d[tail][2]=y;\n                cz[x][y]=0;\n            }\n        }\n    }while(head<tail);\n}\nvoid doit(void);\nint main(){\n    doit();\n}\nvoid doit(void){\n    int i,j;\n    char s[101],ch;\n    cin>>n>>m;\n    scanf(\"\\n\");\n    for(int i=0;i<n;++i) for(int j=0;j<m;++j) cz[i][j]=true;\n    for(int i=0;i<n;++i){\n        gets(s);\n        for(int j=0;j<m;++j){\n            if(s[j]=='.'){\n                cz[i][j]=false;\n            }\n        }\n    }\n    for(int i=0;i<n;++i){\n        for(int j=0;j<m;++j){\n            if(cz[i][j])  bfs(i,j);\n        }\n    }\n    cout<<num;\n}\n```",
        "postTime": 1498269368,
        "uid": 25913,
        "name": "Frank_Pu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "\u601d\u8def:BFS\u5224\u65ad\u8054\u901a\u5757\uff0c\u52a0\u5165\u961f\u5217\u540e\u628a\u6b64\u70b9\u53d8\u4e3a ' . '\n\n~~\u624b\u5199\u961f\u5217~~\n\n[\u4e8c\u500d\u7ecf\u9a8c](https://www.luogu.org/problem/P1451) P1451\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint go[10001][10001]={{0,1},{0,-1},{1,0},{-1,0},{1,1},{-1,1},{1,-1},{-1,-1}};\n//\u56e0\u4e3a\u9898\u76ee\u8981\u6c428\u8054\u901a\uff0c\u6240\u4ee5\u8981\u679a\u4e3e8\u4e2a\u65b9\u5411\n//\u4e3a\u5565\u6570\u7ec4\u5f00\u8fd9\u4e48\u5927\uff1f\n//\u7b2c\u4e00\u6b21\u4ea4RE\u4e86...\nchar ma[100001][1001];\nint n,m,ans;\npair <int,int> q[100001];\n\nvoid input() {\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=1;j<=m;j++) {\n\t\t\tma[i][j]='.';\n\t\t}\n\t}\n}\n\nvoid bfs(int x,int y) {\n\tint head=1,tail=1;\n\tma[x][y]='.';\n\tq[head].first=x;\n\tq[head].second=y;\n\twhile(head<=tail) {\n\t\tint x2=q[head].first;\n\t\tint y2=q[head].second;\n\t\thead++;\n\t\tfor (int i=0;i<8;i++) {//8\u8054\u901a\n\t\t\t\tint x1=x2+go[i][0];\n\t\t\t\tint y1=y2+go[i][1];\n\t\t\t\tif (ma[x1][y1]=='.'||x1<1||x1>n||y1<1||y1>m) continue;\n\t\t\t\tma[x1][y1]='.';//\u6807\u8bb0\uff0c\u907f\u514d\u91cd\u590d\u64cd\u4f5c\n\t\t\t\ttail++;\n\t\t\t\tq[tail].first=x1;\n\t\t\t\tq[tail].second=y1;//\u5165\u961f\n\t\t}\n\t}\n}\n\nint main() {\n\tcin>>n>>m;\n\tinput();\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=1;j<=m;j++) {\n\t\t\tchar a;cin>>a;\n\t\t\tma[i][j]=a;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=1;j<=m;j++) {\n\t\t\tif(ma[i][j]!='.') {//\u5982\u679c\u662f\u6c34\u6d3c\n\t\t\t\tans++;\n\t\t\t\tbfs(i,j);//\u641c\u7d22\u4e0e\u5b83\u76f8\u8fde\u7684\u6240\u6709\u6c34\u6d3c\uff0c\u6807\u8bb0\n\t\t\t}\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1566258519,
        "uid": 99430,
        "name": "Leaved_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "\u6211\u6765\u53d1\u4e00\u7bc7**b**fs\u7684\u9898\u89e3\n\n```\n#include<cstdio>\nusing namespace std;\nint aa[9]={0,-1,0,1,1,1,0,-1,-1};//\u516b\u4e2a\u65b9\u5411\nint n,m;\nchar a[111][111]; \nchar s[111][111]; \nint h[10011][3];\nint sum=0;\nint bb[9]={0,1,1,1,0,-1,-1,-1,0};//\u516b\u4e2a\u65b9\u5411\nint pd(int x,int y)\n{\n\tsum++;\n\th[1][1]=x;\n\th[1][2]=y;\n\ta[x][y]='.';\n\tint head=0,tail=1;//\u56e0\u4e3a\u5e7f\u641c\uff0c\u6240\u4ee5\u6709\u5934\u6307\u9488\uff0c\u5c3e\u6307\u9488\n\tdo\n\t{\n\t\thead++;\n\t\tfor(int i=1;i<=8;i++)\n\t\t{\n\t\tint xx=h[head][1]+aa[i];\n\t\tint yy=h[head][2]+bb[i];\n\t\t\tif(xx>0&&xx<=n&&yy>0&&yy<=m&&a[xx][yy]=='W')//\u524d\u56db\u4e2a\u662f\u5224\u65ad\u4e0d\u8d8a\u754c\uff0c\u6700\u540e\u4e00\u4e2a\u662f\u5224\u65ad\u8d70\u5230\u7684\u8fd8\u662f\u6c34\u6d3c\n\t\t\t{\n\t\t\t\ta[xx][yy]='.';//\u5fc3\u6ee1\u610f\u8db3\u7684\u6d88\u6389\u4e00\u4e2a\n\t\t\t\ttail++;\n\t\t\t\th[tail][1]=xx;\n\t\t\t\th[tail][2]=yy;//\u66f4\u65b0\u961f\u5217\n\t\t\t} \n\t\t}\n\t}while(head<tail);\n\treturn 0;\n}\nint main()\n{\n\tscanf(\"%d%d\\n\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\tscanf(\"%s\",s[i]);//\u5b57\u7b26\u4e32\u8f93\u5165\u66f4\u4fbf\u6377\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\ta[i][j]='.';\n\t\t\tif(s[i][j-1]=='W')\n\t\t\ta[i][j]='W';\n\t\t}//\u6211\u8fd9\u4e48\u5199\u6709\u70b9\u9ebb\u70e6\uff0c\u4ec5\u4ec5\u662f\u4e2a\u4eba\u7231\u597d\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(a[i][j]=='W')\n\t\t\t{\n\t\t\tpd(i,j);\n\t\t\t}//\u4e3b\u9898\u601d\u8def\u5c31\u662f\u9047\u5230\u4e00\u4e2a\uff0c\u8ba1\u6570\uff0c\u7136\u540e\u641c\u7d22\uff0c\u628a\u548c\u4ed6\u8fde\u8d77\u6765\u7684\u5168\u6d88\u6389\n\t\t}\n\t}\n\tprintf(\"%d\",sum);\n\treturn 0;\n}\n```\n\n\u672c\u9898\u89e3\u4e3b\u8981\u662f\u4e3abfs\u515a\u51c6\u5907",
        "postTime": 1532073282,
        "uid": 45475,
        "name": "ShineEternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "# \u672c\u849f\u84bb\u7684\u7b2c\u4e8c\u7bc7\u9898\u89e3\n\u770b\u89c1\u90a3\u4e48\u591a\u5927\u4f6c\u7528\u6df1\u641c\uff0c\u672c\u4eba\u4f7f\u7528\u5e7f\u641c\u505a\u672c\u4f53\n\u5751\u70b9\u5982\u4e0b\n\n1.\u53ef\u4ee5\u5411\u516b\u4e2a\u65b9\u5411\uff0c\u800c\u4e0d\u662f\u56db\u4e2a\u65b9\u5411\uff0c\u6240\u4ee5\u4e0d\u80fd\u7167\u6284P1451\n\n2.\u8f93\u5165\u65f6\u8981\u4e48\u7528cin,\u8981\u4e48\u7528scanf(\" %c\")\uff0c\u7edd\u4e0d\u80fd\u7528scanf(\"%c\")\uff0c\u5426\u5219\u8bfb\u5165\u4f1a\u6709\u95ee\u9898\u3002\n\nC++\u4ee3\u7801\uff1a\n```\n#include <cstdio>\n#include <queue>\n#include <cstring>\nusing namespace std;\n\nconst int MAX=100;\nconst int dx[]={1,1,1,-1,-1,-1,0,0};\nconst int dy[]={1,0,-1,1,0,-1,1,-1};\n//dx,dy\u7528\u4e8e\u4fdd\u5b58\u65b9\u5411\u3002 \nint N,M,dat[MAX][MAX],f[MAX][MAX],ans;\n//dat\u662f\u8f93\u5165\u6570\u636e\uff0cf\u4fdd\u5b58\u641c\u7d22\u60c5\u51b5,ans\u4fdd\u5b58\u7b54\u6848 \nqueue <int> qx,qy;\n//\u5206\u522b\u4fdd\u5b58x,y\u5750\u6807 \n\nvoid BFS(int x, int y)\n//\u5e7f\u641c\u51fd\u6570\uff0c\u5728main\u91cc\u88ab\u8c03\u7528 \n{\n\tqx.push(x);\n\tqy.push(y); //\u8fdb\u961f \n\tf[x][y]=0;//\u6807\u8bb0 \n\twhile (!qx.empty())\n\t{\n\t\tint i=qx.front();\n\t\tint j=qy.front();\n\t\tqx.pop();\n\t\tqy.pop();\n\t\t//\u4ee5\u4e0a\u53d6\u51fa\u961f\u9996\uff0c\u5220\u6389\u961f\u9996 \n\t\tfor (int d=0; d<8; d++)\n\t\t{\n\t\t\tint Ti=i+dx[d];\n\t\t\tint Tj=j+dy[d];\n\t\t\tif (dat[Ti][Tj] && f[Ti][Tj] && 0<=Ti && 0<=Tj && Ti<N && Tj<M)\n\t\t\t//\u5728N*M\u4e4b\u5185\u4e14\u6709\u6c34\uff0c\u672a\u88ab\u6807\u8bb0 \n\t\t\t{\n\t\t\t\tf[Ti][Tj]=0;//\u6807\u8bb0 \n\t\t\t\tqx.push(Ti);//\u8fdb\u961f \n\t\t\t\tqy.push(Tj);\n\t\t\t}\n\t\t}\n\t}\n\t//\u961f\u5217\u5df2\u7a7a\uff0c\u4e0d\u9700\u518d\u6e05\u7a7a \n\treturn;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&N,&M);\n\tmemset(f,1,sizeof(f));\n\t//\u521d\u59cb\u5316f\u4e3a1 \n\tfor (int i=0; i<N; i++)\n\t{\n\t\tfor (int j=0; j<M; j++)\n\t\t{\n\t\t\tchar c=0;\n\t\t\tscanf(\" %c\",&c);\n\t\t\t//\u7325\u7410\u7684\u8f93\u5165\uff0c\u4e5f\u53ef\u4f7f\u7528cin>>c; \n\t\t\tdat[i][j]=(c=='W')?1:0;//\u8f6c\u4e3a\u6570\u5b57\u5b58\u50a8 \n\t\t}\n\t}\n\tfor (int i=0; i<N; i++)\n\t\tfor (int j=0; j<M; j++)\n\t\t\tif (dat[i][j] && f[i][j])\n\t\t\t//\u8fd9\u91cc\u4e3a1\uff0c\u4e14\u672a\u88ab\u6807\u8bb0 \n\t\t\t{\n\t\t\t\tans++;\n\t\t\t\tBFS(i,j);\n\t\t\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1524745782,
        "uid": 73489,
        "name": "NyaRu_Official",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u7528dfs\u5c31\u80fd\u8fc7\u3002\u7b80\u5355\u7c97\u66b4\u53c8\u5bb9\u6613\u8c03\u3002\u4f46\u4e00\u5b9a\u8981\u6ce8\u610fm\u548cn\u7684\u610f\u4e49\uff0c\u5426\u5219\u6837\u4f8b\u90fd\u6709\u53ef\u80fd\u8fc7\u4e0d\u4e86\uff08\u9664\u975e\u6570\u636e\u662fm == n\uff09\u3002\n\n\u00b7\u00b7\u00b7cpp\n\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nchar s[103][103];////\u7528\u4e8e\u4fdd\u5b58\u56fe\nint lake[103][103];////\u7528\u4e8e\u8bb0\u5f55\u6e56\u7684\u6570\u91cf\nint m,n;\nvoid dfs(int x,int y,int cnt) {\n    register int dx, dy;\n    lake[x][y] = cnt;////\u6253\u6807\u8bb0\n    for(dx = -1;dx < 2;++dx)\n        for(dy = -1;dy < 2;++dy)\n            if((dx || dy)/*\u5148\u5224\u65ad\u662f\u4e0d\u662f\u81ea\u5df1\uff0c\u4ee5\u9632\u65e0\u9650\u9012\u5f52*/ && (x + dx > -1) && (x + dx < n) && /*x\u4e0b\u6807\u6ca1\u6709\u8d8a\u754c*/\n            (y + dy > -1) && (y + dy < m) && /*y\u4e0b\u6807\u6ca1\u6709\u8d8a\u754c*/\n            (s[x + dx][y + dy] == 'W') && (lake[x + dx][y + dy] == 0))////\u662f\u6c34\u800c\u4e14\u6ca1\u6709\u8bbf\u95ee\u8fc7\n                dfs(x + dx,y + dy,cnt);////\u8bbf\u95ee\u8fd9\u4e2a\u70b9\n}\nint main() {\n    register int i,j;\n    int c = 0;\n    scanf(\"%d %d\",&n,&m);\n    for(i = 0;i < n;++i)\n        scanf(\"%s\",s[i]);\n    memset(lake,0,sizeof(lake));////\u6e05\u96f6\n    for(i = 0;i < n;++i)\n        for(j = 0;j < m;++j)\n            if(s[i][j] == 'W' && lake[i][j] == 0) dfs(i,j,++c);////\u6ca1\u8bbf\u95ee\u8fc7\u4e14\u662f\u6c34\u5730\uff0c\u8bb0\u5f55\u4e2a\u6570\u81ea\u52a0\n    printf(\"%d\\n\",c);////\u8f93\u51fa\u8bb0\u5f55\u4e2a\u6570\n    return 0;\n}\n```\n```cpp",
        "postTime": 1507106350,
        "uid": 29277,
        "name": "\u5317\u6781\u9e45",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "**\u9898\u610f\uff1a\u7ed9\u51fa\u4e00\u5f20\u56fe\uff0c\u6c42\u5168\u4e3a'W'\u7684\u8054\u901a\u5757\u7684\u6570\u91cf\u3002**\n\n\u7b80\u5316\u9898\u610f\u4e4b\u540e\uff0c\u601d\u8def\u5c31\u6e05\u6670\u4e86\u3002\n\n\u663e\u800c\u6613\u89c1\uff0c\u6b64\u9898\u4f7f\u7528\u641c\u7d22\u3002~~\u5176\u5b9e\u6211\u5e76\u4e0d\u77e5\u9053\u81ea\u5df1\u5199\u7684\u662f\u5bbd\u641c\u8fd8\u662f\u6df1\u641c\u3002~~\n\n\u8be6\u7ec6\u89e3\u91ca\u89c1\u4ee3\u7801\u6ce8\u91ca\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint m,n;\nchar map1[103][103];\nint dx[9]={0,0,0,1,-1,1,1,-1,-1}; //\u65b9\u5411\u6570\u7ec4\uff0c\u7528\u4e8e\u641c\u7d22\nint dy[9]={0,1,-1,0,0,1,-1,1,-1};\nint ans;\nvoid Floodfill(int x,int y)//\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u5de5\u4f5c\u662f\u4e0e\u7b2c\u4e00\u4e2a\u5c0f\u6c34\u5751\u8054\u901a\u7684\u6240\u6709\u6c34\u5751\u90fd\u7f6e\u4e3a0\uff0c\u5373\u6807\u8bb0\u4e3a\u5df2\u8d70\u8fc7\n{\n    map1[x][y]='0';//\u8d70\u8fc7\u7684\u6c34\u5751\u6807\u8bb0\u4e3a0\n    for (int i=1;i<=8;i++)//\u904d\u53868\u4e2a\u65b9\u5411\uff0c\u6ce8\u610f\u662f\u516b\u4e2a\u65b9\u5411\uff01\n    {\n        int new_x=x+dx[i],new_y=y+dy[i];\n        if (map1[new_x][new_y]=='1')//\u6ca1\u6709\u5224\u65ad\u662f\u5426\u51fa\u754c\uff0c\u662f\u56e0\u4e3amap1\u6570\u7ec4\u662f\u5168\u5c40\u53d8\u91cf\u521d\u59cb\u5316\u5168\u90e8\u662f0\n            Floodfill(new_x,new_y);//\u5982\u679c\u662f\u6c34\u5751\uff0c\u5c31\u7ee7\u7eed\u8d70\u4e0b\u4e00\u6b65\n    }\n}\nint main()\n{\n    cin>>m>>n;//\u8f93\u5165\u884c\u3001\u5217\n    for (int i=1;i<=m;i++)\n    {\n        for (int j=1;j<=n;j++)\n        {\n            cin>>map1[i][j];\n            if (map1[i][j]=='.') map1[i][j]='0';//\u5c06\u6c34\u5751\u5b58\u4e3a1\uff0c\u65f1\u5730\u5b58\u4e3a0\uff0c\u65b9\u4fbf\u4e4b\u540e\u5904\u7406\n                else map1[i][j]='1';\n        }\n    }\n    for (int i=1;i<=m;i++)\n    {\n        for (int j=1;j<=n;j++)\n        {\n            if (map1[i][j]=='1')//\u5224\u65ad\u662f\u4e0d\u662f\u6c34\u5751\n            {\n                ans++;//\u53d1\u73b0\u4e00\u4e2a\u6c34\u5751\u5c31\u8ba1\u6570\n                Floodfill(i,j);//\u5bfb\u627e\u5468\u56f4\u76f8\u8fde\u7684\u6c34\u5751\uff0c\u6807\u8bb0\u4e3a\u5df2\u7ecf\u8d70\u8fc7\uff08\u5373\u7528\u65f1\u5730\u8868\u793a\uff09\uff0c\u8fd9\u6837\u4e0b\u4e00\u6b21\u5faa\u73af\u5c31\u4e0d\u4f1a\u518d\u8d70\u91cd\u590d\u7684\u5730\u65b9\n            }\n        }\n    }\n    cout<<ans;//\u8f93\u51fa\u7ed3\u679c\n    return 0;\n}\nBy Sure.\n```",
        "postTime": 1503835800,
        "uid": 24511,
        "name": "\u996e\u6eaa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cmath> \n#include<cstring>\nusing namespace std;\nint a[200][200],n,m,ans,i,j;\nchar b;\nvoid f(int x,int y)\n{\n    if (!a[x][y])\n    return;\n    a[x][y]=0;//\u7b260\uff0c\u8868\u793a\u641c\u8fc7\uff0c\u4e0d\u5728\u641c\u4e86\u3002\n    f(x-1,y);//\u5411\u4e0b\u3002\n    f(x+1,y);//\u5411\u4e0a\u3002\n    f(x,y-1);//\u5411\u5de6\u3002\n    f(x,y+1);//\u5411\u53f3\u3002\n    f(x-1,y-1);//\u5411\u5de6\u4e0a\u3002\n    f(x-1,y+1);//\u5411\u53f3\u4e0a\u3002\n    f(x+1,y-1);//\u5411\u5de6\u4e0b\u3002\n    f(x+1,y+1);//\u5411\u53f3\u4e0b\u3002\n        //\u51718\u4e2a\u65b9\u5411\u3002\n}\nint main()\n{\n    cin>>n>>m;\n    for (i=1;i<=n;i++)\n    for (j=1;j<=m;j++)\n    {\n        cin>>b;\n        if (b=='W')\n        a[i][j]=1;//\u662f\u6c34\uff0c\u8f6c\u4e3a1\uff0c\u65b9\u4fbf\u540e\u9762\u8ba1\u7b97\n        else\n        a[i][j]=0;//\u4e0d\u662f\u6c34\uff0c\u8f6c\u4e3a0\uff0c\u65b9\u4fbf\u540e\u9762\u8ba1\u7b97\n    }\n    for (i=1;i<=n;i++)\n    for (j=1;j<=m;j++)\n    {\n        if (a[i][j])\n        {\n            ans++;//\u627e\u5230\u4e00\u4e2a\n            f(i,j);//\u4ee5\u8fd9\u4e00\u70b9\u53bb\u641c\u3002\n        }\n    }\n    cout<<ans;\n    return 0;\n}\n//\u5efa\u8bae\u505a\u5b8c\u8fd9\u9898\u53ef\u4ee5\u53bb\u770b\u770bP1451.\n```",
        "postTime": 1499649326,
        "uid": 43395,
        "name": "Dream_It_Possible",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "\u521a\u5b66dfs  \u672c\u849f\u84bb\u5728\u8fd9\u91cc\u5361\u4e86\u5f88\u4e45 \u57fa\u672c\u601d\u60f3\u5f88\u7b80\u5355 \u5c31\u662f\u5199\u4e00\u4e2adfs\u7136\u540e\u628a\u4e00\u4e2a\u5df2\u7ecf\u627e\u5230\u7684\u6c34\u6c60\u8ba1\u7b97\u51fa\u6765\uff08\u4e5f\u5c31\u662f\u4e00\u4e2a\u516b\u8fde\u5757\uff09\n\n\u6700\u540e\u7edf\u8ba1dfs\u7684\u4f7f\u7528\u6b21\u6570\u5c31ok\u4e86\n\n\u4ee3\u7801\u5982\u4e0b\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nconst int maxn=102;\nint n,m,total=0;\nbool field1[maxn][maxn]={false};//\u628a\u6bcf\u4e00\u4e2a\u683c\u5b50\u5148\u5f04\u6210\u672a\u8bbf\u95ee\u65b9\u4fbf\u540e\u9762\u52a0\u5febdfs\u7684\u901f\u5ea6\nchar field2[maxn][maxn];\nvoid dfs(int x,int y){\n    if(field1[x][y])return;\n    else field1[x][y]=true;\n    for(int dx=-1;dx<=1;dx++){       //\u5468\u56f4\u76848\u4e2a\u683c\u5b50\n        for(int dy=-1;dy<=1;dy++){\n            int nx=dx+x,ny=dy+y;\n            if(field2[nx][ny]=='.'||!nx||!ny||nx>n||ny>m)//dfs\u6838\u5fc3s\n                continue;\n            else dfs(nx,ny);\n        }\n    }\n}\nvoid solve(){\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            if(field1[i][j]||field2[i][j]=='.')\n                continue;\n            else {\n                dfs(i,j);\n                total++;\n            }\n        }\n    }\n    cout<<total;\n}\nint main(){\n    cin>>n>>m;\n    for(int i=1;i<=n;i++){\n        scanf(\"%s\",field2[i]+1);\n    }\n    solve();\n    return 0;\n}\n\n```",
        "postTime": 1498034596,
        "uid": 25408,
        "name": "Umaru",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "\u672c\u9898\u4e3a\u56fe\u7684\u8fde\u901a\u5757\u95ee\u9898\u3002\n\n\u6bd4\u8f83\u7b80\u5355\u7684\u65b9\u6cd5\u53ef\u4ee5\u7528dfs\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4efb\u610f\u4e00\u4e2a\u6c34\u5751\u7684\u5730\u65b9\u5f00\u59cb\u641c\u7d22\uff0c\u6bcf\u5230\u8fbe\u4e00\u4e2a\u6c34\u5751\u4f4d\u7f6e\u5c31\u628a\u5b83\u53d8\u4e3a\u65f1\u5730\uff0c\u76f4\u5230\u4e0e\u5b83\u516b\u8fde\u901a\u7684\u6240\u6709\u6c34\u5751\u4f4d\u7f6e\u90fd\u53d8\u4e3a\u65f1\u5730\u3002\n\n\u518d\u91cd\u590d\u4e0a\u9762\u7684\u8fc7\u7a0b\uff0c\u76f4\u5230\u6240\u6709\u683c\u5b50\u90fd\u53d8\u4e3a\u65f1\u5730\u4e3a\u6b62\u3002\n\n\uff08\u8be6\u89c1\u4ee3\u7801\uff09\n\n\u00b7\u00b7\u00b7cpp\n\n```cpp\n#include<cstdio>\nusing namespace std;\nconst int MAXN=125;\nint step[9][2]={-1,-1,-1,0,-1,1,0,-1,0,0,0,1,1,-1,1,0,1,1};\n//\u7528\u6765\u8868\u793a\u79fb\u52a8\u7684\u6570\u7ec4 \nint n,m,ans;\nbool g[MAXN][MAXN];\nvoid dfs(int x,int y)\n{\n    g[x][y]=0;//\u8bbf\u95ee\u8fc7\u7684\u70b9\u6539\u4e3a\u65f1\u5730\uff0c\u907f\u514d\u88ab\u518d\u6b21\u8bbf\u95ee \n    int tx,ty;//\u8868\u793a\u4ece\u5f53\u524d\u70b9\u53ef\u5230\u8fbe\u7684\u70b9 \n    for(int i=0;i<9;i++)//\u5c1d\u8bd5\u5404\u4e2a\u65b9\u5411\n    {\n        //\u4ee5\u539f\u70b9\u4e3a\u57fa\u7840\u8fdb\u884c\u62d3\u5c55 \n        tx=x+step[i][0];ty=y+step[i][1];\n        //\u5224\u65ad\u5f53\u524d\u70b9\u662f\u5426\u8d8a\u754c\u6216\u662f\u65f1\u5730 \n        if(g[tx][ty]&&tx>=0&&tx<n&&ty>=0&&ty<m) \n          dfs(tx,ty);\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    char tmp[MAXN];\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%s\",tmp);\n        for(int j=0;j<m;j++)\n          if(tmp[j]=='W')\n            g[i][j]=1;\n    }\n    //\u7531\u4e8e\u6570\u636e\u95f4\u6ca1\u6709\u7a7a\u683c\uff0c\u5229\u7528\u5b57\u7b26\u4e32\u8fdb\u884c\u8bfb\u5165\uff0c\u518d\u8f6c\u6362\u4e3abool\u6570\u7ec4 \n    for(int i=0;i<n;i++)\n      for(int j=0;j<m;j++)\n        if(g[i][j]) {dfs(i,j);ans++;}\n    //\u627e\u5230\u4e00\u4e2a\u6c34\u5751\u4f4d\u7f6e\uff0c\u8fdb\u884cdfs\u641c\u7d22\uff0c\u5f53\u65e0\u8054\u901a\u65f6\uff0c\u641c\u7d22\u5b8c\u6210\uff0c\u7b54\u6848\u52a0\u4e00 \n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\u00b7\u00b7\u00b7\n```",
        "postTime": 1496762113,
        "uid": 30676,
        "name": "walker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "\n****\u6df1\u641c\uff0c\u53d1\u73b0\u4e00\u4e2a\u6ca1\u6709\u6807\u8bb0\u8fc7\u7684\u5c0f\u6c34\u5751\u7684\uff0c\u5c31\u8c03\u7528tryfill\uff0c\u8fd9\u6837\u4e00\u6b21\u8c03\u7528\uff08\u4e3b\u7a0b\u5e8f\u5185\uff09\u5c31\u6807\u8bb0\u5b8c\u4e86\u5b83\u6240\u5728\u7684\u6574\u7247\u5927\u6c34\u5751\uff08\u6e56\uff09\u3002\u4ee3\u7801\u5982\u4e0b\u3002\n\n\n{\nIn this program,\n\n1 means earth\n\n0 means marked water\n\n-1 means unmarked water\n\n\n    \n    \n    \n    \n    \n            \n    \n```cpp\n}\nvar\n    a:array[0..101,0..101] of longint; //0,-1 or 1\n    n,m:longint;\nprocedure tryfill(i,j:longint); //Try filling the surroundings of a[i,j]\nbegin\n    if ((i < 1) or (i > n)) or ((j < 1) or (j > m)) then\n        exit;\n    if a[i,j] <> -1 then// marked water (0),or earth(1)\n        exit;\n    // Not exited till here has only one possibillity:It's unmarked water(0).Then mark it after eight DIAOYONGs.\n    a[i, j] :=0;\n    tryfill(i-1,j-1);\n    tryfill(i-1,j);\n    tryfill(i-1,j+1);\n    tryfill(i,j-1);\n    tryfill(i,j+1);\n    tryfill(i+1,j-1);\n    tryfill(i+1,j);\n    tryfill(i+1,j+1);\n    //So that:Only need to tryfill(i,j),anywhere same-pond with a[i,j] will be marked\nend;\nvar\n    i,j:longint;\n    c:char;\n    ans:longint;\nbegin\n    readln(n,m);\n    for i:=1 to n do\n    begin\n        for j:=1 to m do\n        begin\n            read(c);\n            if c = 'W' then\n            begin\n                a[i,j]:=-1;\n            end;\n            if c = '.' then\n            begin\n                a[i,j]:=1;\n            end;\n        end;\n        readln;\n    end;\n    ans:=0;        \n    for i:=1 to n do\n        for j:=1 to m do\n        begin\n            if a[i,j] = -1 then\n            begin\n                tryfill(i,j);\n                inc(ans);\n            end;\n        end;\n    write(ans);\nend.\n\n```",
        "postTime": 1494160235,
        "uid": 26769,
        "name": "poemciman",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "\u6c42\u516b\u8fde\u5757\u2026\u2026\n\n\u8fd9\u662f\u600e\u4e48\u4e86\uff0c\u8fde\u7eedn\u4e2a\u6708uke\uff0c\u4e0d\u8fc7\u5230\u6700\u540e\u597d\u6b79\u662f\u597d\u4e86\uff0c\u611f\u8c22@w\u7684\u8f9b\u52e4\u52b3\u52a8~\n\n\n\u9644\u4ee3\u7801\uff1a\n\n\n\n```cpp\n//\u7528 DFS \u6c42\u8fde\u901a\u5757 \n#include <cstdio>\n#define Size 105\nchar Graph[Size][Size];\nint m,n,Visited[Size][Size] = {0},cnt = 0;\nvoid DFS(int x,int y,int id){\n    if(x < 0||x >= m||y < 0||y >= n) return ;        //\u5224\u65ad\u662f\u5426\u8d8a\u754c\n    if(Visited[x][y] > 0||Graph[x][y] != 'W') return ;    //\u5982\u679c\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u6216\u8005\u4e0d\u662f '@' \u7684\u683c\u5b50\n    Visited[x][y] = id;        //\u8bbf\u95ee\u6807\u8bb0 \n    for(int i = -1; i <= 1; i++){\n        for(int j = -1; j <= 1; j++) if(i != 0||j != 0) DFS(x+i,y+j,id);     // i \u22600\u6216\u8005 j \u22600 DFS \n```\n/\\*\n\u9488\u5bf9\u4e0a\u4e00\u6761 if \u8bed\u53e5\u60c5\u51b5\u7684\u679a\u4e3e\uff1a\n\n1\uff1ai \u22600\uff0cj \u22600\uff1aDFS\n\n2\uff1ai = 0\uff0cj \u22600\uff1aDFS\n\n3\uff1ai \u22600\uff0cj = 0\uff1aDFS\n\n4\uff1ai = 0\uff0cj = 0\uff1aNot DFS\uff08\u5373\u4e2d\u5fc3\uff09\n\n\u6240\u4ee5\u662f\u4ece\u5468\u56f4\u7684\u516b\u4e2a\u60c5\u51b5\u679a\u4e3e\u3002 \uff08\u4e5f\u53ef\u4ee5\u7528\u5750\u6807\u5e38\u91cf\u6570\u7ec4\uff0c\u4ee5\u53ca if \u5224\u65ad\uff09\n\n                \u53e6\u4e00\u79cd\u8868\u793a\u65b9\u6cd5\uff1a if(!(i == 0&&j == 0)) DFS(x+i,y+j,id);  if(!!i||!!j) DFS(x+i,y+j,id);\n//\u5982\u679c\u975e\uff08i = 0\u5e76\u4e14 j = 0\uff09 DFS          //\u5982\u679c \u975e\u975ei \u6216\u8005 \u975e\u975ej\uff08\u6216 i \u6216\u8005 j\uff09 DFS\n\n\\*/\n\n    \n```cpp\n    } \n}\nint main(){ \n    scanf(\"%d %d\",&m,&n);\n    for(int i = 0; i < m; i++) scanf(\"%s\",Graph[i]);\n    for(int i = 0; i < m; i++){\n        for(int j = 0; j < n; j++) if(Visited[i][j] == 0&&Graph[i][j] == 'W') DFS(i,j,++cnt);\n    }\n    printf(\"%d\\n\",cnt);\n    return 0;\n}\n```",
        "postTime": 1471007523,
        "uid": 17170,
        "name": "Deny_\u5c0f\u7530",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "\u6211\u6765\u5199\u4e00\u4e2a\u8be6\u7ec6\u4e00\u70b9\u7684bfs\u9898\u89e3\uff0c\u8fd9\u4e00\u9053\u9898\u7684\u9898\u76ee\u610f\u601d\u5c31\u662f\u8981\u7edf\u8ba1\u4e00\u4e2an*m\u7684\u5730\u56fe\u4e2d\uff0c\u6c34\u5751\u7684\u6570\u91cf\n\n\u4e00\u4e2a\u6c34\u5751\u5c31\u662f\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u8fd9\u91cc\u8054\u901a\u5757\u7684\u610f\u601d\u5c31\u662f\u4e00\u4e2a\u53ef\u4ee5\u901a\u8fc7\u5728\u6c34\u4e2d8\u4e2a\u65b9\u5411\u6269\u5c55\uff0c\u5230\u8fbe\u7684\u5730\u65b9\u3002\n\n\u8fd9\u91cc\u6211\u7528\u7684\u662fbfs\uff0c\u6240\u4ee5\u7528\u4e00\u4e2a\u961f\u5217\uff0c\u6bcf\u6b21\u6269\u5c55\u51fa\u7684\u8282\u70b9\u5c31\u52a0\u5165\u961f\u5217\u7684\u672b\u5c3e\uff0c\u6bcf\u6b21\u4ece\u961f\u5934\u53d6\u51fa\u4e00\u4e2a\u8282\u70b9\u6765\u6269\u5c55\n\nbfs\u7684\u597d\u5904\u662f\u5728\u6c42\u6700\u77ed\u6b65\u6570\u7b49\u7b54\u6848\u4e2d\u7b2c\u4e00\u6b21\u641c\u5230\u7684\u5c31\u662f\u7b54\u6848\uff0c\u4f46\u662f\u6bd4\u8f83\u8017\u7a7a\u95f4\uff0c\u5728\u8fd9\u79cd\u77e9\u5f62\u7684\u56fe\u4e2d\u8dd1\u7684\u6bd4dfs\u5feb\n\ndfs\u7684\u597d\u5904\u53ef\u4ee5\u6c42\u51fa\u6240\u6709\u7684\u65b9\u6848\uff0c\u4f46\u662f\u5bb9\u6613tle\uff0c\u9002\u7528\u4e8e\u6bcf\u4e00\u5c42\u7684\u53ef\u80fd\u6027\u8f83\u5c11\u7684\u95ee\u9898\u4e2d\n\n\u8fd9\u9053\u9898\u4e2d\uff0c\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u4e2a\u662f\u6c34\u5751\u7684\u70b9\uff0c\u5982\u679c\u5b83\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\uff0c\u7b54\u6848+1\uff0c\u4ece\u4ed6\u5f00\u59cb\u8bbf\u95ee\u5176\u4ed6\u70b9\uff0c\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1\u6240\u6709\u6c34\u5751\u90fd\u904d\u5386\u8fc7\uff0c\u800c\u4e14\u4e0d\u4f1a\u91cd\u590d\u8ba1\u7b97\u7b54\u6848\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<queue>\n#define pii pair<int,int> //pair \u7528\u6765\u50a8\u5b58\u4e00\u4e2a\u70b9\u7684\u5750\u6807\nusing namespace std;\nint dir[8][2]={{1,0},{0,1},{-1,0},{0,-1},{1,1},{-1,-1},{-1,1},{1,-1}};//\u8fd9\u91cc\u5f88\u591a\u4eba\u53ef\u80fd\u8ba4\u4e3a\u5f88\u7384\u5b66\uff0c\u5176\u5b9e\u4e0d\u592a\u96be\u61c2\n//dir\u662f\u65b9\u5411\u6570\u7ec4\uff0c0~7\u5206\u522b\u8868\u793a\u5f80\u516b\u4e2a\u65b9\u5411\u8d70\uff0c\u6bd4\u5982{1,0}\u5c31\u662fx\u5750\u6807+1\uff0cy\u5750\u6807\u4e0d\u61c2\uff0c\u5bf9\u5e94\u7740\u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u5355\u4f4d\n//\u8fd9\u4e48\u5199\u5728\u540e\u9762\u7684\u6269\u5c55\u4e2d\u53ea\u7528\u4e00\u4e2afor\u5faa\u73af\u5c31\u53ef\u4ee5\u4ee3\u66ff8\u500d\u7684\u4ee3\u7801\nint n,m;\npii a;\nint vis[120][120];//\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u70b9\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7\nint map[120][120];\nint color[120][120];\nvoid bfs(pii s,int c){//c\u8868\u793a\u8fd9\u662f\u7b2c\u51e0\u6b21\u8ba1\u7b97\u8054\u901a\u5757\n\tqueue<pii> q;\n\tq.push(s);\n\tvis[s.first][s.second]=1;\n\tcolor[s.first][s.second]=c;//\u8bb0\u5f55color\uff0c\u4f46\u662f\u4e0d\u5fc5\u8981\n\twhile(!q.empty()){\n\t\ts=q.front();\n\t\tq.pop();\n\t\tint x=s.first,y=s.second;//\u8fd9\u4e2a\u8868\u793a\u73b0\u5728\u7684\u5750\u6807\n\t\tfor(int i=0;i<=7;i++){\n\t\t\tint tx=x+dir[i][0],ty=y+dir[i][1];//\u901a\u8fc7dir\u6570\u7ec4\u679a\u4e3e\u516b\u4e2a\u6269\u5c55\u7684\u65b9\u5411\uff0c\u5e76\u52a0\u5165\u961f\u5217\n\t\t\tif(!vis[tx][ty]&&map[tx][ty]==1){\n\t\t\t\tvis[tx][ty]=1;//\u8bb0\u5f55\u8bbf\u95ee\u8fc7\u8fd9\u4e2a\u70b9\n\t\t\t\tcolor[tx][ty]=c;\n\t\t\t\tpii next=make_pair(tx,ty);\n\t\t\t\tq.push(next);//\u52a0\u5165\u961f\u5217\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tchar x;\n\t\t\tcin>>x;\n\t\t\tif(x=='W'){\n\t\t\t\tmap[i][j]=1;//\u6807\u8bb0\u6c34\u5751\n\t\t\t}\n\t\t}\n\t}\n\tint tot=0;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tif(map[i][j]==1&&!vis[i][j]){//\u6bcf\u6b21\u627e\u5230\u4e00\u4e2a\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\u7684\u6c34\u5751\uff0c\u5f00\u59cb\u6269\u5c55\uff0c\u7b54\u6848\u5c31\u662f\u603b\u5171\u6269\u5c55\u7684\u6b21\u6570\n\t\t\t\ttot++;//\u6269\u5c55\u6b21\u6570++\n\t\t\t\tpii start=make_pair(i,j);\n\t\t\t\tbfs(start,tot);\t//\u5f00\u59cb\u6269\u5c55\n\t\t\t}\n\t\t}\n\t}\n\tcout<<tot<<endl;//\u8f93\u51fa\u6269\u5c55\u6b21\u6570\n}\n```",
        "postTime": 1566183079,
        "uid": 99931,
        "name": "liumuxin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "### \u8fd9\u662f\u4e00\u9053\u5224\u65ad\u5468\u56f48\u4e2a\u683c\u5b50\u662f\u5426\u8fde\u901a\u540e\u8ba1\u6570\u7684\u9898\n### \u53ef\u4ee5\u7528BFS\u548c\u961f\u5217\u6765\u505a\n\n#### \u5148\u5faa\u73af\u67e5\u627e\u672a\u88ab\u6807\u8bb0\u7684\u6c34\uff0c\u82e5\u627e\u5230\uff0cans++\n#### \u82e5\u627e\u5230\uff0c\u4ee5\u8be5\u4f4d\u7f6e\u4e3a\u8d77\u70b9\uff0c\u8fdb\u884cBFS\uff0c\u5e76\u5c06\u80fd\u901a\u8fc7\u4f4d\u79fb\u6570\u7ec4\u5230\u8fbe\u7684\u70b9\u5168\u90e8\u6807\u8bb0\n#### **\u4ee3\u7801\u5982\u4e0b\uff1a**\n\n```c\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<queue>\nusing namespace std;\nint m,n,ans=0,s;\nstruct node\n{\n\tint x,y,d;\n}start;\nint dx[8]={1,-1,0,0,1,-1,-1,1};\nint dy[8]={0,0,1,-1,1,-1,1,-1};\nbool visit[1005][1005];\nchar map[1005][1005];\n\nvoid bfs(int i,int j)\n{\n\tqueue<node> q;//\u91cd\u7f6e\u961f\u5217\n\tstart.x=i,start.y=j;//\u8f93\u5165\u8d77\u70b9\n\tstart.d=1;\n\tq.push(start);\n\tvisit[start.x][start.y]=1;\n\twhile(!q.empty())//\u82e5\u961f\u5217\u4e3a\u7a7a\uff0c\u505c\u6b62\u5faa\u73af\n\t{\n\t\tnode a=q.front();\n\t\ts=a.d;\n\t\tq.pop();\n\t\tint x=a.x,y=a.y;\n\t\tfor(int i=0;i<8;i++)\n\t\t{\n\t\t\tnode b;\n\t\t\tb.x=x+dx[i];\n\t\t\tb.y=y+dy[i];\n\t\t\tb.d=a.d+1;\n\t\t\tif(b.x<0||b.y<0||b.x>=n||b.y>=m||visit[b.x][b.y]||map[b.x][b.y]=='.')continue;//\u82e5\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u7ee7\u7eed\u5faa\u73af\n\t\t\tvisit[b.x][b.y]=1;\n\t\t\tq.push(b);\n\t\t}\n\t}\n}\n\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"\\n\");\n\t\tfor(int j=0;j<m;j++)\n\t\t\tcin>>map[i][j];\n\t}\n\tfor(int i=0;i<n;i++)\n\tfor(int j=0;j<m;j++)\n\t\tif(!visit[i][j]&&map[i][j]!='.')//\u5faa\u73af\u67e5\u627e\u672a\u88ab\u6807\u8bb0\u7684\u6c34\n\t\t{\n\t\t\tbfs(i,j);\n\t\t\tans++;\n\t\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1564478756,
        "uid": 224229,
        "name": "Caicz",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "BFS\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\n\n\u8fd9\u4e00\u9898\u6211\u4eec\u8981\u7528\u5e7f\u641c\u89e3\u3002\n\n1.\u8bfb\u5165\u3002\n\n2.\u4e00\u4e2a\u4e00\u4e2a\u70b9\u641c\uff0c\u627e\u5230\u6c34\u6d3c\"W\"\u8fdb\u5165BFS\uff0c\u628a\u81ea\u5df1\u548c\u4e0e\u5176\u76f8\u8fde\u7684\u6c34\u6d3c\u53d8\u6210\u5e72\u5730\".\"\uff0c\u6c34\u6d3c\u6570\u52a0\u4e00\u3002\n\n3.\u8f93\u51fa\u6c34\u6d3c\u6570\u91cf\u3002\n\n\u957f\u8bdd\u77ed\u8bf4\uff0c\u4e0a\u4ee3\u7801!\n\n```cpp\n#include<iostream>\n  \n#include<queue>//c++\u961f\u5217\u5934\u6587\u4ef6\n  \nusing namespace std;\n  \nstruct data{\n  \n\tint x,y;\n  \n};//\u81ea\u5b9a\u4e49\u7ed3\u6784\u4f53\n  \nqueue<data> q;//\u5b9a\u4e49\u4e00\u4e2a\u961f\u5217q\uff0c\u662f\u524d\u9762\u5b9a\u4e49\u7684\u7ed3\u6784\u4f53\n  \nint n,m;\n  \nchar map[200][200];\n  \nconst int dx[8]={0,1,0,-1,1,1,-1,-1};//\u516b\u4e2a\u65b9\u5411\u7684x\u5750\u6807\n  \nconst int dy[8]={1,0,-1,0,1,-1,1,-1};//\u516b\u4e2a\u65b9\u5411\u7684y\u5750\u6807\n  \nvoid bfs(int xx,int yy)//\u8fdb\u5165\u5e7f\u641c\n  \n{\n  \n\tdata d,k;\n  \n\td.x=xx;\n  \n\td.y=yy;\n  \n\tq.push(d);\n  \n\twhile(!q.empty())\n  \n\t{\n  \n\t\tk=q.front();\n  \n\t\tq.pop();\n  \n\t\tmap[k.x][k.y]='.';//\u641c\u8fc7\u7684\u53d8\u6210\u5e72\u5730\uff0c\u4ee5\u9632\u91cd\u590d\n  \n\t\tfor(int i=0;i<8;++i)\u54118\u4e2a\u65b9\u5411\u6269\u5c55\u8282\u70b9                                    \n\t\t{                     \n\t\t\td.x=k.x+dx[i];                     \n\t\t\td.y=k.y+dy[i];\n\t\t\tif(d.x>0&&d.y>0&&d.x<=n&&d.y<=m&&map[d.x][d.y]=='W')\n\t\t\t  {\n\t\t\t  \tq.push(d);\n\t\t\t  \tmap[d.x][d.y]='?';\n\t\t\t  }\n\t\t}\n\t} \n}\nint main() \n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;++i)      \n\t  for(int j=1;j<=m;++j)\n\t    cin>>map[i][j];//\u8f93\u5165\n\tint ans=0;\n\tfor(int i=1;i<=n;++i)      \n\t  for(int j=1;j<=m;++j)\n\t    if(map[i][j]=='W') \n\t      {\n\t      \tans++;\n\t      \tbfs(i,j);\n\t      }//\u7edf\u8ba1\n\tcout<<ans;//\u8f93\u51fa\n\treturn 0;\n}\n```\n\n  \n\u8bf7\u8bb0\u4f4f\uff0cBFS\u662f\u4e00\u5708\u4e00\u5708\u641c\uff0cDFS\u662f\u4e00\u6b21\u641c\u5230\u5e95\uff01\n  \n\u5982\u6709\u4e0d\u5f53\uff0c\u8bf7\u6307\u6559\u2026\u2026\n",
        "postTime": 1563150809,
        "uid": 77023,
        "name": "zhangke1",
        "ccfLevel": 0,
        "title": "P1596 [USACO10OCT]\u6e56\u8ba1\u6570Lake Counting"
    },
    {
        "content": "### **~~\u4e3a\u6570\u4e0d\u591a\u7684P\u515a~~...**\n#### \u8fd9\u9053\u9898\u5c31\u662f\u4e00\u9053dfs\uff0c\u4e8c\u91cd\u5faa\u73af\uff0c\u6bcf\u6b21\u4ece\u6709\u6c34\u5904\uff08\u2018W\u2019\uff09\u5f00\u59cb\u641c\uff0c\u5c06\u641c\u8fc7\u7684\u5730\u65b9\u8d4b\u503c\u4e3a\u65f1\u5730\uff08\u2018.\u2019\uff09\uff0c\u8003\u8651\u4e00\u4e0b\u8fb9\u754c\u548c\u6709\u6728\u6709\u641c\u8fc7\uff0c\u4f9d\u6b21\u5f80\u516b\u4e2a\u65b9\u5411\uff08i,j-1;i,j+1;i+1,j;i-1,j\uff09\u641c\u5c31\u53ef\u4ee5\u4e86\uff08\u5177\u4f53\u770b\u4ee3\u7801\u6ce8\u91ca\uff09\u3002\n$ QAQ $\n\n#### \u4ee3\u7801\u5982\u4e0b\uff1a\n```\nvar\n  n,m,i,j,ans,s:longint;\n  a:array[0..101,0..101] of char;  //\u5b57\u7b26\u6570\u7ec4\nprocedure dfs(x,y:longint);  //\u795e\u5947\u7684dfs\nbegin\n  if (x<1) or (x>n) or (y<1) or (y>m) then exit;  //\u5224\u65ad\u8fb9\u754c\u7684\u65f6\u95f4\u5230\u4e86\n  if a[x,y]='.' then exit;  //\u5f53\u524d\u8fd9\u4e2a\u70b9\u6709\u6728\u6709\u88ab\u626b\u5230\u8fc7\n  a[x,y]:='.';  //\u8d4b\u503c\u4e3a\u65f1\u5730\n  inc(s);   //\u7d2f\u52a0\u5f53\u524d\u6c34\u5751\u7684\u9762\u79ef\n  dfs(x+1,y);  //\u5411\u4e0b\u8fdb\u519b\uff01\n  dfs(x-1,y);  //\u5411\u4e0a\u7a81\u51fb\uff01\n  dfs(x,y+1);  //\u5411\u53f3\u88ad\u51fb\uff01\n  dfs(x,y-1);  //\u5411\u5de6\u8fdb\u653b\uff01\n  dfs(x-1,y-1);  //\u8fd9\u4e2a...\u5de6\u4e0a\uff01\n  dfs(x-1,y+1);  //\u989d...\u53f3\u4e0a\uff01\n  dfs(x+1,y-1);  //\u5de6\u4e0b...\n  dfs(x+1,y+1);  //\u53f3\u4e0b\uff01\nend;\nbegin\n  readln(n,m);  //\u884c...\u5217\n  for i:=1 to n do  //\u8f93\u5165\uff0c\u4e0d\u8bf4\u4e86\n   begin\n     for j:=1 to m do read(a[i,j]);\n\t readln;\n   end;\n  ans:=0;  //\u521d\u59cb\u5316\n  for i:=1 to n do\n   for j:=1 to m do\n    if a[i,j]='W' then  //\u5982\u679c\u5f53\u524d\u70b9\u6709\u6c34\uff0c\u90a3\u4e48...\n\t begin\n\t   s:=0;  //\u6e05\u96f6\n\t   dfs(i,j);  //\u5f00\u542fdfs\u4e4b\u65c5\n\t   if s<>0 then inc(ans);  //\u82e5\u627e\u5230\u6c34\u5751\uff0c\u7b54\u6848\u52a0\u4e00\n\t end;\n  write(ans);  //\u8f93\u51fa\nend.  //AC\uff01\n```",
        "postTime": 1549678030,
        "uid": 46609,
        "name": "Z__X",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "\u65e5\u671f 20180904\n\n~~\u7531\u9898\u9762\u4e2d'\u6c34'\u5b57\u7b26\u7684\u51fa\u73b0\u9891\u7387\u53ef\u77e5\uff0c\u6b64\u9898\u4e3a\u6c34\u9898(\u7136\u800c\u662f\u666e\u53ca-\uff0c\u975e\u5165\u95e8\u96be\u5ea6)~~**\u6ed1\u7a3d**~~\n\n'**W**'\u4ee3\u8868\u6c34\uff0c\u4e0e\u5176\u4e00\u5468**8**\u4e2a\u65b9\u683c\u76f8\u8fde\uff0c\u800c\u76f8\u8fde\u5728\u4e00\u8d77\u7684**\u4e00\u7247**'W'\u79f0\u4e4b\u4e3a**\u4e00\u4e2a**\"\u6e56\"\u3002\n\n\u7531\u4e8e\u524d\u51e0\u5929\u5728\u770b\u5e76\u67e5\u96c6\uff0c\u697c\u4e3b\u4e00\u5f00\u59cb\u5c31\u8ba4\u4e3a\u8fd9\u662f\u5e76\u67e5\u96c6\u7684\u9898\u76ee\u4e86\uff0c(~~\u611f\u5174\u8da3\u7684~~\u8fbe\u74e6\u91cc\u6c0f\u53ef\u4ee5\u5c1d\u8bd5\u4e0b),\u7136\u800cDFS\u6df1\u641c\u67d3\u8272\u8c8c\u4f3c\u65b9\u4fbf\u7684\u591a\u3002\n\n\u4e8e\u662f\uff0c\u4ee5\u4e0b\u662f\u4ee3\u7801\u4e86 \uff08   \u5df2AC\uff1a [\u6d4b\u8bc4\u60c5\u51b5](https://www.luogu.org/record/show?rid=10444798)  \uff09\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u5206\u5272\u7ebf\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n```cpp\n#include<cstdio>      //\u5934\u6587\u4ef6\n#define len 10002     //\u5b9a\u4e49\u5e38\u91cf,\u8868\u793a\u6570\u7ec4\u957f\u5ea6\nbool s[len][len];     //bool\u578b\u5360\u7a7a\u95f4\u5c11\uff0c\u4e14\u6ee1\u8db3\u67d3\u8272\u9700\u8981\n\nvoid fin(int x,int y) //\u67d3Shen\u8272Sou\u51fd\u6570 \u201c\u62bd\u6c34\u201d\n{\n    if(s[x][y]==true) //\u6709\u6c34\u7684\u5730\u65b9\n    {\n        s[x][y]=false;//\u6c34\u53d8\u65f1\u5730\n        fin(x-1,y);\n        fin(x,y-1);\n        fin(x+1,y);\n        fin(x,y+1);\n        fin(x+1,y+1);\n        fin(x+1,y-1);\n        fin(x-1,y-1);\n        fin(x-1,y+1); //\u516b\u65b9\u5411\u67d3\u8272\uff0c\u9047\u5230\u8fde\u901a\u6c34\u57df\u5c31\u548c\u8c10\u6389\n    }\n    else\n    return ;          //\u5230\u8fb9\u754c(\u65f1\u5730)\u7ed3\u675f\n}\n\nint main()\n{\n    int m,n;\n    long int k=0;\n    scanf(\"%d%d\",&m,&n);      //\u8bfb\u5165\u957f\u5bbd\n    char o;\n    scanf(\"%c\",&o);           //\u8fc7\u6ee4\u6362\u884c\u7b26'\\n'\n    \n    for(int i=1;i<=m;i++)\n    for(int j=1;j<=n+1;j++)\n    {\n        scanf(\"%c\",&o);       //\u6bcf\u4e00\u4e2a\u65b9\u683c\u7684\u6570\u636e\n        if(j==n+1)\n        break;                //\u8fc7\u6ee4\u6362\u884c\u7b26'\\n'\n        \n        if(o=='.')            //\u662f\u65f1\u5730\n        s[i][j]=false;\n        else                  //\u662f\u6c34\n        s[i][j]=true;\n    }\n    \n    for(int i=1;i<=m;i++)\n    for(int j=1;j<=n;j++)\n    {\n        if(s[i][j]==true)     //\u662f\u6c34\n        k++;                  //\u6e56+1\n        fin(i,j);             //\u201c\u62bd\u6c34\u201d\n    }\n    \n    printf(\"%ld\",k);          //\u8f93\u51fa\u6e56\u6570\n    return 0;\n    \n}\n\n```\nEmmmm\uff0c\u5176\u5b9e\u6211\u662f\u4ece **P1451 \u6c42\u7ec6\u80de\u6570\u91cf** \u8fc7\u6765\u7684\uff0c\u53ea\u662f\u90a3\u4e2a\u9898\u7ebf\u4e0a\u8bc4\u6d4b\u83ab\u540d\u9b3c\u755c(~~\u4e0e\u672c\u5730\u6d4b\u8bd5\u7ed3\u679c\u4e0d\u540c~~)\uff0c\u6240\u4ee5\u83ab\u540d~~**\u6ca1**~~\u901a\u8fc7\u3002\u3002\u3002\n\n\u5feb\u6377\u5730\u5740\uff1a[P1451](https://www.luogu.org/problemnew/show/P1451)\n\nWA\uff1a[\u6d4b\u8bc4\u60c5\u51b5](https://www.luogu.org/recordnew/show/10445880)",
        "postTime": 1535991101,
        "uid": 29626,
        "name": "SasukeUchiha",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "\u4ee3\u7801\uff1apascal\n\n\u7b97\u6cd5\uff1aBFS\n\n```cpp\nconst\n    ax:array[1..8] of longint=(-1,0,1,0,-1,1,1,-1);\n    ay:array[1..8] of longint=(0,1,0,-1,1,-1,1,-1);\nvar\n    f:array[-10..110,-10..110] of boolean;\n    a:array[0..50000,1..2] of longint;\n    n,m,i,j,s:longint;\n    ch:char;\nprocedure search(x,y:longint);\nvar\n    head,tail,i,x1,y1:longint;\nbegin\n    inc(s);//\u6e56\u7684\u6570\u91cf+1\n    head:=0; tail:=1;//\u6bcf\u6b21\u90fd\u4ecea[1,1],a[1,2]\u5f00\u59cb\u53ef\u4ee5\u7701\u7a7a\u95f4\n    f[x,y]:=false; a[1,1]:=x; a[1,2]:=y;//\u5fc5\u987b\u628af[x,y]\u7f6e\u4e3afalse,\u4ee5\u9632\u91cd\u590d\n    while head<=tail do\n    begin\n        inc(head);//\u6269\u5c55\u7b2chead\u4e2a\u7ed3\u70b9\n        for i:=1 to 8 do//\u641c\u7d228\u4e2a\u65b9\u5411\n        begin\n            x1:=a[head,1]+ax[i];\n            y1:=a[head,2]+ay[i];\n            if f[x1,y1] then//\u7531\u4e8ef\u6570\u7ec4\u662f-10..110,-10..110,\u6240\u4ee5\u4e0d\u7528\u5224\u65ad\u662f\u5426\u8d8a\u754c\n            begin\n                inc(tail);//\u5b58\u50a8\u6269\u5c55\u51fa\u7684\u7ed3\u70b9\n                a[tail,1]:=x1;\n                a[tail,2]:=y1;\n                f[x1,y1]:=false;\n            end;\n        end;\n    end;\nend;\nbegin\n    readln(n,m);\n    for i:=1 to n do\n    begin\n        for j:=1 to m do\n        begin\n            read(ch);\n            f[i,j]:=ch='W';//\u4f7f\u7528\u5e03\u5c14\u578b\u53d8\u91cf\n        end;\n        readln;//\u8fd9\u4e2a\u5f88\u91cd\u8981\uff0c\u4e0d\u7136ch\u4e2d\u4f1a\u5b58\u5165\u56de\u8f66\u7b26\n    end;\n    s:=0;//\u603b\u6570\n    for i:=1 to n do\n        for j:=1 to m do\n            if f[i,j] then search(i,j);//\u5982\u679c\u8fd9\u4e2a\u4f4d\u7f6e\u5c5e\u4e8e\u65b0\u7684\u4e00\u4e2a\u6e56\n    writeln(s);\nend.\n```",
        "postTime": 1515205547,
        "uid": 38785,
        "name": "icyM3tra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "\u7b97\u6cd5\uff1a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\n\n\u5148\u8f93\u5165\n\n###\u8fd9\u662f\u5b57\u7b26\u4e32\u8f93\u5165\uff0c\u6240\u4ee5\u6ce8\u610f\u6362\u884c\uff01\uff08\u8981\u70b9\u4f1a\u5728\u7a0b\u5e8f\u91cc\u6807\u6ce8\uff09\n\n\u518d\u7a77\u4e3e\u6bcf\u4e00\u4e2aW\u7684\u4f4d\u7f6e\uff0c\u627e\u5230\u540e\u6267\u884c\u4e0b\u5217\u64cd\u4f5c\uff1a\n\n1.\u5220\u9664\u4e0eW\u7684\u8054\u901a\u5757\uff08dfs\uff0c8\u4e2a\u65b9\u5411\uff09\n\n2.\u8ba1\u6570\u5668+1\n\n\u6700\u540e\u8f93\u51fa\u8ba1\u6570\u5668\n\n\n\u6709\u4e00\u4e2a\u4f18\u5316\u53ef\u4ee5\u8003\u8651\uff08\u672a\u5c1d\u8bd5\uff09\uff1a\u4e0d\u7a77\u4e3e\u5de6\u4e0a\uff0c\u4e0a\uff0c\u53f3\u4e0a\u4e09\u4e2a\u65b9\u5411\uff0c\u56e0\u4e3a\u6211\u7684\u4ee3\u7801\u662f\u5148\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\u679a\u4e3e\u7684\uff0c\u7406\u8bba\u4e0a\u662f\u53ef\u4ee5\u7684\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int lx[9]={0,-1,-1,-1, 0,0, 1,1,1},\n          ly[9]={0,-1, 0, 1,-1,1,-1,0,1};\n//\u7a77\u4e3e\u516b\u4e2a\u65b9\u5411\u6ce8\u610fc++\u7684\u6570\u7ec4\u7684\u4e0b\u754c\u662f0\n\nstring s;\nint n,m,ans/*\u8ba1\u6570\u5668*/;\nchar a[110][110];\n\nvoid dfs(int x,int y)//dfs\n{\n    a[x][y]='.';//\u5c06\u8fd9\u4e2a\u683c\u5b50\u8d4b\u6210'.'\n    for(int i=1; i<=8; i++)//\u7a77\u4e3e8\u4e2a\u65b9\u5411\n    {\n        int xx=x+lx[i];//x\u8f74\n        int yy=y+ly[i];//y\u8f74\n        if(a[xx][yy]=='W')/*\u8fd9\u4e2a\u683c\u5b50\u662f\u6c34\u5751*/ dfs(xx,yy);//\u9012\u5f52\n    }\n}\n\nint main()\n{\n    scanf(\"%d %d\\n\",&n,&m);//\u8f93\u5165\uff0c\u8981\u6709\u6362\u884c\uff0c\u4e0d\u7136\u4f1a\u5728\u7b2c\u4e00\u884c\u7684\u884c\u672b\u5c11\u4e00\u4e2a\u5b57\u7b26\uff0c60\u5206\u5c31\u662f\u8fd9\u91cc\n    for(int i=1; i<=n; i++)\n    {\n        for(int j=1; j<=m; j++)\n          a[i][j]=getchar();//\u8f93\u5165\n        getline(cin,s);//\u5904\u7406\u6389\u540e\u9762\u7684\u6362\u884c\u7b26\uff0c\u56e0\u4e3a\u6837\u4f8b\u884c\u5c3e\u6709\u7a7a\u683c\uff0c\u6240\u4ee5\u7528\u5b57\u7b26\u4e32\u64cd\u4f5c\uff0c\u7a33\u59a5\u8d77\u89c1\n    }\n    \n    for(int i=1; i<=n; i++)//\u7a77\u4e3ex\u8f74\n      for(int j=1; j<=m; j++)//\u7a77\u4e3ey\u8f74\n        if(a[i][j]=='W')//\u8fd9\u662f\u6c34\u5751\n        {\n            dfs(i,j);//\u8c03\u7528\u6df1\u641c\n            ans++;//\u8ba1\u6570\u5668+1\n        } \n    printf(\"%d\",ans);//\u8f93\u51fa\n}\n```",
        "postTime": 1513997015,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "//\u641c\u7d22\u90a3\u4e00\u6bb5\u590d\u5236\u7c98\u8d34\uff0c\u7ed3\u679c\u4e00\u4e2a\u7b26\u53f7\u5fd8\u6539\uff0c\u627e\u4e86\u597d\u4e45\u54ea\u91cc\u9519\u4e86\u3002\u3002\uff08\u4e0d\u8fc7\u7b26\u53f7\u4e0d\u6539\u4e5f\u670940\u5206\uff0camazing\uff01\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<iomanip>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint f[105][105],n,m,p=0,s=0; //f\u5176\u5b9e\u6ca1\u7528\uff0c\u672c\u6765\u76f8\u5f53flag\u7528\u3002\u3002\nchar a[105][105];//\u5b58\u5730\u56fe\n\nvoid dfs(int i,int j)//ij\u662f\u5750\u6807\n{\n    a[i][j]='.';//\u5982\u679c\u8fd9\u91cc\u662f\u6e56\uff0c\u628a\u5b83\u7f6e\u4e3a\u65f1\u5730\uff0c\u514d\u5f97\u540e\u6765\u53c8\u626b\u4e00\u904d\n    p=0;//\u5f53\u7136\u53ef\u4ee5\u628ap\u5ffd\u7565\uff0c\u56e0\u4e3a\u5b83\u5176\u5b9e\u81ea\u52a8\u4f1a\u9000\u51fa\u7684\n    if(i+1<=n&&a[i+1][j]=='W') dfs(i+1,j),p++;//\u8fd9\u4e00\u5927\u6bb5\u529f\u80fd\u5c31\u662f\u5728\u516b\u4e2a\u65b9\u5411\u627e\u6709\u6ca1\u6709\u6e56\uff0c\u6ce8\u610f\u8d8a\u754c\uff01\n    if(j+1<=m&&a[i][j+1]=='W') dfs(i,j+1),p++;\n    if(i-1>=1&&a[i-1][j]=='W') dfs(i-1,j),p++;\n    if(j-1>=1&&a[i][j-1]=='W') dfs(i,j-1),p++;\n    if(i+1<=n&&j+1<=m&&a[i+1][j+1]=='W') dfs(i+1,j+1),p++;\n    if(i+1<=n&&j-1>=1&&a[i+1][j-1]=='W') dfs(i+1,j-1),p++;\n    if(i-1>=1&&j-1>=1&&a[i-1][j-1]=='W') dfs(i-1,j-1),p++;\n    if(i-1>=1&&j+1>=1&&a[i-1][j+1]=='W') dfs(i-1,j+1),p++;//\u5c31\u662f\u8fd9\u91cc\u7684\u7b26\u53f7\n    if(p<1) return;//\u53ef\u5ffd\u7565\n}\n\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        cin>>a[i][j];//\u8f93\u5165\u5730\u56fe\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        {\n            p=0;\n            if(a[i][j]=='W')//\u5982\u679c\u6ca1\u88ab\u626b\u5230\u8fc7\u5c31\u5f00\u59cb\u641c\u7d22\uff1b\n            dfs(i,j),s++;//\u641c\u7d22\u5b8c\u540e\u52a0\u4e00\u4e2a\u6e56\u6570\u91cf;\n        } \n    cout<<s;\n    return 0;\n}\n```",
        "postTime": 1507126446,
        "uid": 9287,
        "name": "LevenKoko",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u548c\u767d\u76ae\u4e66\u91cc\u7684\u7ec6\u80de\u5f88\u50cf\uff0c\u5c31\u662f\u628a\u56db\u4e2a\u65b9\u5411\u8be5\u6210\u4e86\u516b\u4e2a\u3002\n\n```cpp\nconst\n  d:array[1..8,1..2]of longint=((1,0),(0,1),(-1,0),(0,-1),(1,1),(-1,-1),(1,-1),(-1,1));//\u5b9a\u4e49\u65b9\u5411\u5e38\u91cf\nvar\n  a:array[1..100,1..100]of char;\n  n,m,i,j,ans:longint;\nprocedure find(x,y:longint);\nvar\n  i:longint;\nbegin\n  a[x,y]:='.';//\u6807\u8bb0\u8d70\u8fc7\u7684\u70b9\n  for i:=1 to 8 do\n    if (x+d[i,1]>0)and(x+d[i,1]<=n)and(y+d[i,2]>0)and(y+d[i,2]<=m)and(a[x+d[i,1],y+d[i,2]]='W'\uff09//\u4e0e\u5f53\u524d\u70b9\u76f8\u8fde\u7684\u70b9\u662f\u6c34\u6f6d\n      then find(x+d[i,1],y+d[i,2]);//\u8fdb\u884c\u4e0b\u4e00\u6b65\u641c\u7d22\nend;\nbegin\n  readln(n,m);\n  for i:=1 to n do\n    begin\n      for j:=1 to m do\n        read(a[i,j]);\n      readln;//\u6ce8\u610f\u8fd9\u91cc\u8981\u6362\u884c\n    end;\n  for i:=1 to n do\n    for j:=1 to m do\n      if a[i,j]='W' then begin find(i,j); inc(ans); end;//\u679a\u4e3e\u6ca1\u6709\u8d70\u8fc7\u7684\u6c34\u6f6d\n  write(ans);\nend.\n\n```",
        "postTime": 1506736764,
        "uid": 27976,
        "name": "lipee",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "\u4e2a\u4eba\u611f\u89c9\u8fd9\u9898\u8fd8\u662f\u5f88\u7b80\u5355\u7684\uff0c\u5c31\u662f\u4e00\u4e2a\u5b8c\u5168\u4e0d\u52a0\u5de5\u7684\u627e\u8054\u901a\u5757\u4e2a\u6570\n\n\u4e2a\u4eba\u89e3\u9898\u601d\u8def\u662f\u5148\u8bfb\u5165\uff0c\u7136\u540e\u5faa\u73af\u4e00\u904d\uff0c\u9047\u5230\u6c34\u5c31dfs\uff0c\u5e76\u628a\u8fd9\u4e2aw\u6240\u5728\u7684\u8054\u901a\u5757\u201c\u5220\u9664\u201d\uff0c\u5e76\u5728\u7b54\u6848\u4e0a\u52a0\u4e00\n\n\u6700\u540e\u8f93\u51fa\u7b54\u6848\n\n\u5177\u4f53\u6ce8\u91ca\u770b\u7a0b\u5e8f\uff1a\uff1a\uff1a\n\n\n\n\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,m,ans;\nbool a[105][105];//\u6211\u7528\u5e03\u5c14\u6570\u7ec4\uff0c\u53cd\u6b63\u5c31\u4e24\u79cd\u60c5\u51b5\nvoid dfs(int x,int y){//dfs\n    a[x][y]=false;//\u5220\u9664\u8fde\u901a\u5757\n    if(x+1<=n&&a[x+1][y])dfs(x+1,y);//\u5982\u679c\u4e0b\u9762\u662f\u6c34\uff08\u3002\u3002\u3002\uff09\uff0c\u5f80\u4e0b\u641c\n    if(y+1<=m&&a[x][y+1])dfs(x,y+1);//\u5982\u679c\u5de6\u8fb9\u662f\u6c34\uff0c\u5f80\u5de6\u641c\uff0c\u6ce8\u610fy\u662f\u4e0em\u6bd4\u8f83\uff0c\u5343\u4e07\u4e0d\u8981\u628am\uff0cn\u5f04\u6df7\n    if(x-1>=1&&a[x-1][y])dfs(x-1,y);//\u5f80\u4e0a\u641c\n    if(y-1>=1&&a[x][y-1])dfs(x,y-1);//\u5f80\u53f3\u641c\n    if(x+1<=n&&y+1<=m&&a[x+1][y+1])dfs(x+1,y+1);//\u5f80\u5de6\u4e0a\u641c\n    if(x+1<=n&&y-1>=1&&a[x+1][y-1])dfs(x+1,y-1);//\u5f80\u53f3\u4e0a\u641c\n    if(x-1>=1&&y+1<=m&&a[x-1][y+1])dfs(x-1,y+1);//\u5f80\u5de6\u4e0b\u641c\n    if(x-1>=1&&y-1>=1&&a[x-1][y-1])dfs(x-1,y-1);//\u5f80\u53f3\u4e0b\u641c\n}\nvoid sc(){//\u8fd9\u662f\u6211\u4e2a\u4eba\u8c03\u8bd5\u65f6\u7528\u7684\u7a0b\u5e8f\uff0c\u770b\u88ab\u5220\u9664\u7684\u8fde\u901a\u5757\u662f\u54ea\u4e00\u4e2a\uff0c\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u770b\u770b~~~\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            if(a[i][j])cout<<\"w\";\n            else cout<<\".\";\n        }\n        cout<<endl;\n    }\n}\nint main(){//\u4e3b\u51fd\u6570\n    cin>>n>>m;//\u8bfb\u5165\n    for(int i=1;i<=n;i++){\n            string x;//\u5b9a\u4e49\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u867d\u7136\u662f\u5355\u72ec\u7684\u4e00\u4e2a\u53d8\u91cf\uff0c\u4f46\u53ef\u4ee5\u76f4\u63a5\u7528\u4e0b\u6807\u8bbf\u95ee\n            cin>>x;//\u8bfb\u5165\u8fde\u7eed\u4e00\u6bb5char\u578b\u7684\u5b57\u7b26\u4e32\uff0c\u6bd4\u8f83\u65b9\u4fbf\n        for(int j=1;j<=m;j++){\n            if(x[j-1]=='.')a[i][j]=false;//\u6ce8\u610f\uff0cx\u662f\u4ece\u4e0b\u6807\u4e3a0\u7684\u5730\u65b9\u5f00\u59cb\u8bfb\u7684\uff0c\u5982\u679c\u4e0d\u662f\u6c34\u5757\uff0c\u5c31\u8d4b\u503c\u5426\n            else a[i][j]=true;//\u5426\u5219\u4e3a\u662f\n        }\n    }\n    for(int i=1;i<=n;i++){//\u6a21\u62df\n        for(int j=1;j<=m;j++){\n            if(a[i][j]){//\u5982\u679c\u662f\u6c34\n                //cout<<i<<' '<<j<<endl;\u4e2a\u4eba\u8c03\u8bd5\u6240\u7528\n                dfs(i,j);//\u5220\u9664\u8fde\u901a\u5757\n                //sc();\u4e2a\u4eba\u8c03\u8bd5\u6240\u7528\n                ans++;//\u7b54\u6848\u6570\u52a0\u4e00\n            }\n        }\n    }\n    cout<<ans<<endl;//\u8f93\u51fa\u7b54\u6848\n    return 0;\n```\n}//\u5b8c\u7f8e\u7ed3\u675f\n\u6700\u540e\uff0c\u795d\u5927\u5bb6\u5929\u5929\u5f00\u5fc3\uff0c\u7f16\u7a0b\u987a\u5229\uff08\u3002\u3002\u3002\uff09\n",
        "postTime": 1504271508,
        "uid": 44063,
        "name": "zy\u5c0f\u53ef\u7231\u10e6",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    },
    {
        "content": "#\u8fd9\u9898\u5e7f\u641c\u6df1\u641c\u90fd\u884c\n\n```cpp\n#include<iostream>\nusing namespace std;\nchar map[101][101];\nint dir[8][2]={{-1,-1},{-1,0},{-1,1},{0,1},{1,1},{1,0},{1,-1},{0,-1}};//\u5b9a\u4e49\u65b9\u5411\u53d8\u91cf\uff08\u516b\u4e2a\uff09\nint n,m,num;\nint dfs(int i,int j){if(i<0||j<0||i>=n||j>=m);\n    else if(map[i][j]=='W'){map[i][j]='.';//\u641c\u8fc7\u5c31\u6e05\u96f6\n         for(int z=0;z<=7;z++){\n            dfs(i+dir[z][0],j+dir[z][1]);//\u6bcf\u641c\u4e00\u6b21\u5c31\u52a0\u4e0a\u65b9\u5411\n         }return 1;\n    }\n}\nint main()\n{\n    int i,j;\n    cin>>n>>m;\n        num=0;\n        for(i=0;i<n;++i)\n            cin>>map[i];\n        for(i=0;i<n;++i)\n           for(j=0;j<m;++j)\n               if(map[i][j]=='W')\n                   num+=dfs(i,j);//\u662f\u6c34\u5c31\u641c\n        cout<<num<<endl;//\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1500082653,
        "uid": 36616,
        "name": "lili_flyingcutter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1596 \u3010[USACO10OCT]\u6e56\u8ba1\u6570Lake Counting\u3011"
    }
]