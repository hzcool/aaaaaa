[
    {
        "content": "\u5c06\u5e8f\u5217\u4ee5\u957f\u5ea6\u4e3a $C$ \u5206\u5757\uff0c\u90a3\u4e48\u7b54\u6848\u8981\u4e48\u5728\u4e00\u5757\u91cc\u9762\uff0c\u8981\u4e48\u662f\u4e00\u5757\u540e\u7f00\u52a0\u4e00\u5757\u524d\u7f00\u3002\n\n\u4e00\u5757\u91cc\u9762\u7684\u5f88\u597d\u7b97\uff0c\u5c31\u662f\u5bf9\u8fd9\u4e2a\u533a\u95f4\u6c42\u6700\u5927\u5b50\u6bb5\u548c\u3002\n\n\u4e00\u5757\u540e\u7f00\u52a0\u4e00\u5757\u524d\u7f00\u6bd4\u8f83\u96be\u7b97\uff0c\u8bb0 $A_i$ \u4e3a\u8fd9\u4e00\u5757\u540e $i$ \u4e2a\u6570\u7684\u548c\uff0c$B_i$ \u4e3a\u4e0b\u4e00\u5757\u524d $i$ \u4e2a\u6570\u7684\u548c\uff0c\u6211\u4eec\u8981\u5b9e\u73b0\u4e00\u4e2a\u76f4\u89d2\u4e09\u89d2\u5f62\u533a\u57df\u7684\u6700\u5927\u503c\u67e5\u8be2\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/23pxy9vb.png)\n\n\u95ee\u9898\u8f6c\u5316\u4e3a $A$ \u6570\u7ec4\u540e\u7f00\u52a0\uff0c$B$ \u6570\u7ec4\u540e\u7f00\u52a0\uff0c\u5168\u5c40\u6240\u6709\u70b9\u6700\u5927\u503c\u3002\n\n\u770b\u5230\u8fd9\u79cd\u7b49\u8170\u76f4\u89d2\u4e09\u89d2\u5f62\u6c42\u503c\u7684\u5957\u8def\uff0c\u9996\u5148\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u6765\u505a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/yjz0ounw.png)\n\n\u5373\u5c06\u4e09\u89d2\u5f62\u62c6\u6210\u4e24\u4e2a\u66f4\u5c0f\u7684\u4e09\u89d2\u5f62\uff0c\u7136\u540e\u4e2d\u95f4\u8f6c\u4e3a\u77e9\u5f62\u6c42\u89e3\uff0c\u77e9\u5f62\u6c42\u89e3\u53ef\u4ee5\u6839\u636e\u4e24\u4e2a\u4e09\u89d2\u5f62\u7684\u4fe1\u606f\u53cd\u63a8\u3002\n\n\u770b\u5230\u8fd9\u4e2a\u7ed3\u6784\u5c31\u4e0d\u96be\u60f3\u5230\u7ebf\u6bb5\u6811\u4e86\u5427\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u6a2a\u5411\u6700\u5927\u503c\uff0c\u7eb5\u5411\u6700\u5927\u503c\uff0c\u4e09\u89d2\u5f62\u6700\u5927\u503c\uff0c\u5408\u5e76\u662f\u5e73\u51e1\u7684\u3002\n\n\u4e8e\u662f\u8fd9\u6837 $A$ \u6570\u7ec4\u548c $B$ \u6570\u7ec4\u7684\u533a\u95f4\u4fee\u6539\u5c31\u53ef\u4ee5\u7528\u5e26\u61d2\u6807\u8bb0\u7684\u7ebf\u6bb5\u6811\u505a\u4e86\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/x0j4vnh1.png)\n\n\u6211\u4eec\u9012\u5f52\u5230\u7ebf\u6bb5\u6811\u4e0a\u5bf9\u5e94\u8fd9\u51e0\u4e2a\u533a\u95f4\u7684\u8282\u70b9\uff0c\u5c06\u4e09\u89d2\u5f62\u6700\u5927\u503c\u548c\u6a2a\u5411/\u7ad6\u5411\u6700\u5927\u503c\u52a0\u4e0a $t$\uff0c\u7136\u540e\u518d\u628a\u4fe1\u606f\u5408\u5e76\u8d77\u6765\u5373\u53ef\u3002\n\nCorner case \u662f\u4e00\u5757\u53ea\u80fd\u53d6\u6700\u540e\u82e5\u5e72\u4e2a\uff0c\u53e6\u4e00\u5757\u53ea\u80fd\u53d6\u6700\u524d\u82e5\u5e72\u4e2a\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/6jlqhcnb.png)\n\n\u6211\u4eec\u4e5f\u80fd\u62c6\u6210\u82e5\u5e72\u4e2a\u8be2\u95ee\uff0c\u6240\u4ee5\u8fd9\u9898\u505a\u5b8c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\log n)$\uff0c\u6bd4\u8f83\u5361\u5e38\uff0c\u5982\u679c\u4e0d\u60f3\u5361\u5e38\u53ef\u4ee5\u53bb [gym](https://codeforces.com/gym/103861/problem/F) \u4e0a\u4ea4\uff0c\u5982\u679c\u88ab\u5361\u5e38\u4e86\u53ef\u4ee5\u6d17\u6d17\u8138\u591a\u4ea4\u51e0\u53d1\u3002\n\n\u4e00\u4e9b\u5361\u5e38\u5c0f\u6280\u5de7\uff1a\n\n- \u80fd ``build`` \u5c31\u4e0d\u8981\u4e00\u4e2a\u4e00\u4e2a ``update``\uff0c\u628a $n\\log n$ \u5c3d\u53ef\u80fd\u6d88\u6389\u3002\n- \u7ebf\u6bb5\u6811\u4e0d\u7528\u5f00\u5230 $4n$\uff0c\u53ef\u4ee5\u8ba1\u7b97\u4e00\u4e2a\u4e0a\u754c\u3002\n- \u5bf9\u4e8e ``merge`` \u6bd4\u8f83\u6162\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u5355\u4fa7\u9012\u5f52\u76f4\u63a5\u8fd4\u56de\u5c31\u5355\u4fa7\u9012\u5f52\u3002\n- \u5feb\u8bfb\u5feb\u5199\u53ef\u80fd\u6ca1\u4ec0\u4e48\u7528\u3002\n- \u5f00 ``inline`` \u6709\u7528\u3002\n- \u5c11\u5f00 ``long long`` \u6709\u7528\u3002\n\n\u8981\u4ee3\u7801\u79c1\u804a\u3002",
        "postTime": 1663202803,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P6780"
    },
    {
        "content": "# [P6780 [Ynoi2009] pmrllcsrms](https://www.luogu.com.cn/problem/P6780)\n\n\u9996\u5148\u6309 $c$ \u5206\u5757\u3002  \n\u5bf9\u4e8e\u5757\u5185\u7684\u7b54\u6848\uff0c\u5c31\u662f\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002  \n\n\u5757\u95f4\u7b54\u6848\uff0c\u53ef\u4ee5\u5199\u6210\u5206\u6cbb\u5f62\u5f0f\u3002  \n\u8003\u8651\u7b2c $i$ \u5757\u548c\u7b2c $i+1$ \u5757\u95f4\u7684\u7b54\u6848\uff0c\u5c06\u4e24\u5757\u53e0\u5728\u4e00\u8d77\u3002  \n\u5373\u5728\u7b2c $i$ \u5757\u5185\u9009\u53d6\u4e00\u4e2a\u5de6\u7aef\u70b9 $l$\uff0c\u5728\u7b2c $i+1$ \u5757\u5185\u9009\u53d6\u53f3\u7aef\u70b9 $r$\uff0c\u6ee1\u8db3 $l>r-c$\uff0c\u5373\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\u533a\u95f4\u3002  \n\u7ef4\u62a4\u7b2c $i$ \u5757\u7684\u540e\u7f00\u548c\u548c\u7b2c $i+1$ \u5757\u7684\u524d\u7f00\u548c\u5373\u53ef\u3002  \n\u4e00\u4e2a\u533a\u95f4\u7b54\u6848\u6709\u4e09\u4e2a\u9009\u62e9\uff1a\n1. \u5de6\u5b50\u533a\u95f4\u7684\u7b54\u6848\u3002\n1. \u53f3\u5b50\u533a\u95f4\u7684\u7b54\u6848\u3002\n1. \u5de6\u5b50\u533a\u95f4\u9009\u4e00\u4e2a $r$\uff0c\u53f3\u5b50\u533a\u95f4\u9009\u4e00\u4e2a $l$ \uff0c\u7b54\u6848\u4e3a**\u5de6\u5b50\u533a\u95f4\u7684 $r$ \u7684\u524d\u7f00\u548c $+$ \u53f3\u5b50\u533a\u95f4\u7684 $l$ \u7684\u540e\u7f00\u548c**\u3002\n\n\u5982\u56fe\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/8yspnc5m.png)\n\n\u8fd9\u4e5f\u53ef\u4ee5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002  \n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u9700\u8981 $3$ \u79cd\u7ebf\u6bb5\u6811\u3002\n1. \u5168\u5c40\u6700\u5927\u5b50\u6bb5\u548c\u3002\n1. \u5757\u95f4\u7684\u7b54\u6848\uff0c\u5efa $\\lfloor \\frac{n-1}{c} \\rfloor-1$ \u68f5\u3002\n1. \u5757\u7684\u7b54\u6848\u7684\u6700\u5927\u503c\u548c\u5757\u95f4\u7684\u7b54\u6848\u7684\u6700\u5927\u503c\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\uff0c\u7b2c $1,3$ \u79cd\u6811\u5355\u70b9\u4fee\u6539\uff0c\u7b2c $2$ \u79cd\u6811\u533a\u95f4\u4fee\u6539\u3002  \n\n\u5bf9\u4e8e\u67e5\u8be2\uff0c\u5206\u7c7b\u8ba8\u8bba\uff1a\n1. $r-l<c$ \u7b2c $1$ \u79cd\u6811\uff0c\u67e5\u8be2 $[l,r]$ \u6700\u5927\u5b50\u6bb5\u548c\u3002\n1. $l,r$ \u5728\u76f8\u90bb\u4e24\u5757\u4e2d\uff0c\u7b54\u6848\u6709 $4$ \u79cd\u60c5\u51b5\u3002  \n\u5982\u56fe\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/m0jc7xhv.png)\n\t1. $l\\in (l,end_i],r\\in [start_{i+1},l']$\uff0c$l$ \u540e\u7f00\u548c $+$ $r$ \u524d\u7f00\u548c\u3002\n    1. $l\\in [r',end_i],r\\in [start_{i+1},r)$\uff0c$l$ \u540e\u7f00\u548c $+$ $r$ \u524d\u7f00\u548c\u3002\n    1. $[l,l'),(r',r]$ \u7684\u6700\u5927\u5b50\u6bb5\u548c\u3002\n    1. $l\\in [l,r'],r\\in[l',r]$ \u7c7b\u4f3c\u5757\u95f4\u7b54\u6848\u7684\u5904\u7406\u65b9\u5f0f\u7684\u5230\u7684\u7b54\u6848\u3002\n1. \u5176\u4ed6\u60c5\u51b5\u3002\u7b54\u6848\u5305\u62ec\u5757\u7684\u7b54\u6848\u7684\u6700\u5927\u503c\u548c\u5757\u95f4\u7b54\u6848\u7684\u6700\u5927\u503c\u3002\u81f3\u4e8e\u8fb9\u89d2\uff0c\u5c31\u662f\u60c5\u51b5 $2$ \u7684\u5c0f\u53d8\u5f62\u3002\n\n\u8fd9\u9898\u6709\u70b9\u5361\u7a7a\u95f4\uff0c\u53ef\u4ee5\u5f00\u4e2a `vector`\u3002  \n```cpp\n#include<cstdio>\n#include<vector>\n#define Re register int \n#define _for(i,a,b) for(register int i=(a);i<=(b);++i)\n#define __for(i,a,b) for(register int i=(a);i>=(b);--i)\n#define il inline\n#define pc putchar\nusing namespace std;\ntypedef long long ll;\nconst int N=2e6+10,M=324+10,inf=2147483647;\nil int re(){\n    int x=0;\n    bool f=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9')\n        f|=ch=='-',ch=getchar();\n    while(ch>='0'&&ch<='9')\n        x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    return f?-x:x;\n}\nvoid pr(ll x){\n\tif(x<0) pc('-'),x=-x;\n\tif(x>9) pr(x/10);\n\tpc(x%10|48);\n}\nint n,m,B,num;\nint a[N<<1];\nil ll max(ll a,ll b){\n\treturn a>b?a:b;\n}\nstruct Tree1{//\u5168\u5c40\u5757\u5185\u6700\u5927\u503c\n\tstruct Tree{\n\t\tll ls,rs,ms,sum;\n\t}tr[N<<2];\n\til Tree merge(const Tree &x,const Tree &y){\n\t\treturn (Tree){max(x.ls,x.sum+y.ls),max(y.rs,y.sum+x.rs),max(max(x.ms,y.ms),x.rs+y.ls),x.sum+y.sum};\n\t}\n\tvoid build(int p,int l,int r){\n\t\tif(l==r){\n\t\t\ttr[p]=(Tree){a[l],a[l],a[l],a[l]};\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(p<<1,l,mid);\n\t\tbuild(p<<1|1,mid+1,r);\n\t\ttr[p]=merge(tr[p<<1],tr[p<<1|1]);\n\t}\n\tvoid change(int p,int l,int r,int x,int v){\n\t\tif(l==r){\n\t\t\ttr[p]=(Tree){v,v,v,v};\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tif(x<=mid) change(p<<1,l,mid,x,v);\n\t\telse change(p<<1|1,mid+1,r,x,v);\n\t\ttr[p]=merge(tr[p<<1],tr[p<<1|1]);\n\t}\n\tTree ask(int p,int l,int r,int L,int R){\n\t\tif(L<=l&&r<=R) return tr[p];\n\t\tint mid=(l+r)>>1;\n\t\tif(R<=mid) return ask(p<<1,l,mid,L,R);\n\t\telse if(L>mid) return ask(p<<1|1,mid+1,r,L,R);\n\t\telse return merge(ask(p<<1,l,mid,L,R),ask(p<<1|1,mid+1,r,L,R));\n\t}\n}tr1;\n\nll tx[N],ty[N];\nstruct Tree2{//\u5757\u7684\u6700\u5927\u503c\uff0c\u5757\u95f4\u7684\u6700\u5927\u503c\n\tstruct Tree{\n\t\tll mx;\n\t}tr[N<<2];\n\tvoid build(int p,int l,int r){\n\t\tif(l==r){\n\t\t\ttr[p].mx=tx[l];\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(p<<1,l,mid);\n\t\tbuild(p<<1|1,mid+1,r);\n\t\ttr[p].mx=max(tr[p<<1].mx,tr[p<<1|1].mx);\n\t}\n\tvoid change(int p,int l,int r,int x,ll v){\n\t\tif(l==r){\n\t\t\ttr[p].mx=v;\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tif(x<=mid) change(p<<1,l,mid,x,v);\n\t\telse change(p<<1|1,mid+1,r,x,v);\n\t\ttr[p].mx=max(tr[p<<1].mx,tr[p<<1|1].mx);\n\t}\n\tll ask(int p,int l,int r,int L,int R){\n\t\tif(L<=l&&r<=R) return tr[p].mx;\n\t\tint mid=(l+r)>>1;\n\t\tif(R<=mid) return ask(p<<1,l,mid,L,R);\n\t\telse if(L>mid) return ask(p<<1|1,mid+1,r,L,R);\n\t\treturn max(ask(p<<1,l,mid,L,R),ask(p<<1|1,mid+1,r,L,R));\n\t}\n}tr21,tr22;\n\nstruct Tree3{\n\tstruct Tree{\n\t\tll ls,rs,ms,add1,add2;\n\t};\n\tvector<Tree> tr;\n\til Tree merge(const Tree &x,const Tree &y){\n\t\treturn (Tree){max(x.ls,y.ls),max(x.rs,y.rs),max(max(x.ms,y.ms),x.ls+y.rs),0,0};\n\t}\n\til void spread(int p){\n\t\tif(tr[p].add1){\n\t\t\tll a=tr[p].add1;tr[p].add1=0;\n\t\t\ttr[p<<1].add1+=a;\n\t\t\ttr[p<<1|1].add1+=a;\n\t\t\ttr[p<<1].ms+=a;\n\t\t\ttr[p<<1|1].ms+=a;\n\t\t\ttr[p<<1].ls+=a;\n\t\t\ttr[p<<1|1].ls+=a;\n\t\t}\n\t\tif(tr[p].add2){\n\t\t\tll a=tr[p].add2;tr[p].add2=0;\n\t\t\ttr[p<<1].add2+=a;\n\t\t\ttr[p<<1|1].add2+=a;\n\t\t\ttr[p<<1].ms+=a;\n\t\t\ttr[p<<1|1].ms+=a;\n\t\t\ttr[p<<1].rs+=a;\n\t\t\ttr[p<<1|1].rs+=a;\n\t\t}\n\t\t\n\t}\n\tvoid build(int p,int l,int r){\n\t\tif(l==r){\n\t\t\ttr[p].ls=ty[l];\n\t\t\ttr[p].rs=tx[l];\n\t\t\ttr[p].ms=-1e18;\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(p<<1,l,mid);\n\t\tbuild(p<<1|1,mid+1,r);\n\t\ttr[p]=merge(tr[p<<1],tr[p<<1|1]);\n\t}\n\tvoid change1(int p,int l,int r,int L,int R,ll v){\n\t\tif(L<=l&&r<=R){\n\t\t\ttr[p].add1+=v;\n\t\t\ttr[p].ls+=v;\n\t\t\ttr[p].ms+=v;\n\t\t\treturn ;\n\t\t}\n\t\tspread(p);\n\t\tint mid=(l+r)>>1;\n\t\tif(L<=mid) change1(p<<1,l,mid,L,R,v);\n\t\tif(R>mid) change1(p<<1|1,mid+1,r,L,R,v);\n\t\ttr[p]=merge(tr[p<<1],tr[p<<1|1]);\n\t}\n\tvoid change2(int p,int l,int r,int L,int R,ll v){\n\t\tif(L<=l&&r<=R){\n\t\t\ttr[p].add2+=v;\n\t\t\ttr[p].rs+=v;\n\t\t\ttr[p].ms+=v;\n\t\t\treturn ;\n\t\t}\n\t\tspread(p);\n\t\tint mid=(l+r)>>1;\n\t\tif(L<=mid) change2(p<<1,l,mid,L,R,v);\n\t\tif(R>mid) change2(p<<1|1,mid+1,r,L,R,v);\n\t\ttr[p]=merge(tr[p<<1],tr[p<<1|1]);\n\t}\n\tTree ask(int p,int l,int r,int L,int R){\n\t\tif(L>R) return {0,0,0,0,0};\n\t\tif(L<=l&&r<=R) return tr[p];\n\t\tspread(p);\n\t\tint mid=(l+r)>>1;\n\t\tif(R<=mid) return ask(p<<1,l,mid,L,R);\n\t\telse if(L>mid) return ask(p<<1|1,mid+1,r,L,R);\n\t\telse return merge(ask(p<<1,l,mid,L,R),ask(p<<1|1,mid+1,r,L,R));\n\t}\n}tr3[N];\n\nsigned main(){\n\tn=re(),m=re(),B=re();\n\tif(B>n) B=n;\n\tnum=(n-1)/B;//[0,num]\n\t_for(i,1,n) a[i]=re();\n\tif(B==1){\n\t\t_for(i,1,n) tr21.change(1,1,n,i,a[i]);\n\t\twhile(m--){\n\t\t\tint op=re(),x=re(),y=re();\n\t\t\tif(op==1)\n\t\t\t\ttr21.change(1,1,n,x,y);\n\t\t\telse pr(max(tr21.ask(1,1,n,x,y),0ll)),pc('\\n');\n\t\t}\n\t\treturn 0;\n\t}\n\tif(!num){\n\t\ttr1.build(1,1,n);\n\t\twhile(m--){\n\t\t\tint op=re(),x=re(),y=re();\n\t\t\tif(op==1)\n\t\t\t\ttr1.change(1,1,n,x,y);\n\t\t\telse pr(max(tr1.ask(1,1,n,x,y).ms,0ll)),pc('\\n');\n\t\t}\n\t\treturn 0;\n\t}\n\ttr1.build(1,1,n);\n\tfor(Re i=0;i<num;++i)\n\t\ttr3[i].tr.resize(B<<2);\n\tfor(Re i=0,l,r;i<num;++i){\n\t\tl=i*B+1,r=l+B-1;\n\t\tll sum=0;\n\t\t__for(j,r,l){\n\t\t\tsum+=a[j];\n\t\t\ttx[j]=sum;\n\t\t}\n\t\tsum=0;\n\t\t_for(j,l+B,r+B){\n\t\t\tsum+=a[j];\n\t\t\tty[j-B]=sum;\n\t\t}\n\t\ttr3[i].build(1,l,r);\n\t}\n\tfor(Re i=0,l,r;i<=num;++i){\n\t\tl=i*B+1,r=l+B-1;\n\t\tif(r>n) r=n;\n\t\tll sum=0,mn=0,ans=0;\n\t\t_for(j,l,r){\n\t\t\tsum+=a[j];\n\t\t\tif(mn>sum) mn=sum;\n\t\t\tif(ans<sum-mn) ans=sum-mn;\n\t\t}\n\t\ttx[i]=ans;\n\t\t\n\t}\n\t\n\ttr21.build(1,0,num);\n\tfor(Re i=0;i<num;++i)\n\t\ttx[i]=tr3[i].tr[1].ms;\n\ttr22.build(1,0,num-1);\n\twhile(m--){\n\t\tint op=re(),x=re(),y=re();\n\t\tif(op==1){\n\t\t\tint det=y-a[x];\n\t\t\ta[x]=y;\n\t\t\tint id=(x-1)/B;\n\t\t\ttr1.change(1,1,n,x,y);\n\t\t\t\n\t\t\ttr21.change(1,0,num,id,tr1.ask(1,1,n,id*B+1,(id+1)*B).ms);\n\t\t\tif(id){\n\t\t\t\t\n\t\t\t\ttr3[id-1].change1(1,(id-1)*B+1,id*B,x-B,id*B,det);\n\t\t\t\ttr22.change(1,0,num-1,id-1,tr3[id-1].tr[1].ms);\n\t\t\t}\n\t\t\tif(id!=num){\n\t\t\t\ttr3[id].change2(1,id*B+1,(id+1)*B,id*B+1,x,det);\n\t\t\t\t\n\t\t\t\ttr22.change(1,0,num-1,id,tr3[id].tr[1].ms);\n\t\t\t}\n\t\t\t\n\t\t}\n\t\telse{\n\t\t\tint bl=(x-1)/B,br=(y-1)/B;\n\t\t\tif(y-x<B){\n\t\t\t\tpr(max(0ll,tr1.ask(1,1,n,x,y).ms)),pc('\\n');\n\t\t\t}\n\t\t\telse if(bl+1==br){\n\t\t\t\tll ans=max(tr1.ask(1,1,n,x,x+B-1).ms,tr1.ask(1,1,n,y-B+1,y).ms);\n\t\t\t\tif(y-x!=B){\n\n\t\t\t\t\tans=max(ans,tr3[bl].ask(1,bl*B+1,br*B,bl*B+1,x).ls+tr3[bl].ask(1,bl*B+1,br*B,x+1,br*B).rs);\n\n\t\t\t\t\tans=max(ans,tr3[bl].ask(1,bl*B+1,br*B,bl*B+1,y-B-1).ls+tr3[bl].ask(1,bl*B+1,br*B,y-B,br*B).rs);\n\n\t\t\t\t\tans=max(ans,tr3[bl].ask(1,bl*B+1,br*B,x,y-B).ms);\n\t\t\t\t\tpr(max(ans,0ll)),pc('\\n');\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tpr(max(ans,0ll)),pc('\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tll ans=max(tr1.ask(1,1,n,x,x+B-1).ms,tr1.ask(1,1,n,y-B+1,y).ms);\n\t\t\t\tTree3::Tree tll=tr3[bl].ask(1,bl*B+1,(bl+1)*B,x+1,(bl+1)*B)\n\t\t\t\t,trr=tr3[br-1].ask(1,(br-1)*B+1,br*B,(br-1)*B+1,y-B-1);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tans=max(ans,tr3[bl].ask(1,bl*B+1,(bl+1)*B,bl*B+1,x).ls+tll.rs);\n\t\t\t\t\n\t\t\t\tans=max(ans,tll.ms);\n\t\t\t\t\n\t\t\t\tans=max(ans,trr.ls+tr3[br-1].ask(1,(br-1)*B+1,br*B,y-B,br*B).rs);\n\t\t\t\t\n\t\t\t\tans=max(ans,trr.ms);\n\t\t\t\t\n\t\t\t\tans=max(ans,tr21.ask(1,0,num,bl+1,br-1));\n\t\t\t\t\n\t\t\t\tif(bl+1<=br-2) ans=max(ans,tr22.ask(1,0,num-1,bl+1,br-2));\n\t\t\t\t\n\t\t\t\tpr(max(ans,0ll)),pc('\\n');\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1675214326,
        "uid": 609626,
        "name": "St_john",
        "ccfLevel": 0,
        "title": "P6780 [Ynoi2009] pmrllcsrms"
    },
    {
        "content": "\u5148\u505a[\u4e0d\u5361\u5e38\u7248](https://codeforces.com/gym/103861/problem/F)\u3002\n\n\u8fd9\u4e2a\u67e5\u8be2\u770b\u8d77\u6765\u5f88\u5934\u5927\uff0c\u4f46\u5b9e\u9645\u4e0a\u5c31\u662f\u5728 $[l,r]$ \u5185\u627e\u5230\u4e00\u4e2a\u957f\u5ea6\u4e0d\u8d85\u8fc7 $c$ \u7684\u5b50\u533a\u95f4\uff0c\u4f7f\u5176\u533a\u95f4\u548c\u6700\u5927\u3002\n\n\u505a $\\text{Ynoi}$\uff0c\u90a3\u5c31\u5f97\u5206\u5757\uff01\u6211\u4eec\u5c06\u5e8f\u5217\u5206\u4e3a\u5f88\u591a\u4e2a\u957f\u5ea6\u4e3a $c$ \u7684\u6bb5\uff0c\u5219\u7b54\u6848\u7684\u8d21\u732e\u5c31\u5728\u4e00\u4e2a\u6bb5\u5185\u6216\u8005\u4e24\u4e2a\u6bb5\u4e4b\u95f4\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6bb5\u5185\u7684\u7b54\u6848\uff0c\u5c31\u662f\u4e00\u4e2a\u56fa\u5b9a\u533a\u95f4\u7684\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u8be6\u89c1[\u5c0f\u767d\u901b\u516c\u56ed](https://www.luogu.com.cn/problem/P4513)\u548c [$\\text{GSS3}$](https://www.luogu.com.cn/remoteJudgeRedirect/spoj/1716)\u3002\u7136\u540e\u7528\u4e00\u4e2a\u5927\u7684\u7ebf\u6bb5\u6811\u6765\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\uff0c\u8fd9\u91cc\u907f\u514d\u5e38\u6570\u8fc7\u5927\uff0c\u7edf\u8ba1\u7b54\u6848\u7684\u7ebf\u6bb5\u6811\u53ef\u4ee5\u7528 $\\mathrm{zkw}$\u3002\n\n\u5bf9\u4e8e\u6bb5\u95f4\u7b54\u6848\uff0c\u8bb0 $s[]$ \u4e3a\u540e\u7f00\u548c\uff0c$p[]$ \u4e3a\u524d\u7f00\u548c\uff0c\u6211\u4eec\u9700\u8981\u5728\u5de6\u6bb5 $a$ \u548c\u53f3\u7aef $b$ \u4e2d\u627e\u5230\u4e24\u4e2a\u4e0b\u6807 $x,y$ \u6ee1\u8db3 $x>y,\\max(s_a[x]+p_b[y])$\uff0c\u8fd9\u4e2a\u662f\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u7684\uff0c\u4f46\u8003\u8651\u5230\u5355\u8c03\u4fee\u6539\u5bf9\u4e8e $s[],p[]$ \u90fd\u662f $\\mathcal O(n)$ \u7ea7\u522b\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4 $s_a,p_b$\uff0c\u533a\u95f4\u4fee\u6539\u5373\u53ef\uff0c\u7136\u540e\u5bf9\u4e8e\u6240\u6709\u7684\u6bb5\u95f4\u7ebf\u6bb5\u6811\u5728\u5efa\u4e00\u68f5 $\\mathrm{zkw}$ \u6765\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n---\n\n\u4ee5\u4e0a\u662f\u4e0d\u5361\u5e38\u60c5\u51b5\u4e0b\u7684\u601d\u8def\u3002~~\u81f3\u6b64\uff0c\u4f60\u5df2\u7ecf\u53e3\u80e1\u8fc7\u4e86\u8fd9\u9053\u9898\u3002~~\n\n\u73b0\u5728\u6211\u4eec\u6765\u5361\u5e38\uff0c\u975e\u52a0\u5f3a\u7248\u6211\u5c31\u505a\u4e86 $2d$\uff0c\u7801\u4e86 `9k`\uff0c\u800c\u8fd9\u9053\u9898\u5462\uff1f\n\n![image](https://www.imageoss.com/images/2023/02/20/QQ20230220202200c5a98eaea9da94cd.jpg)\n\n~~\u81f3\u4eca\u672a\u8fc7\u3002\u4e0d\u8981\u4e3e\u529e\u6211\u5361\u8bc4\u6d4b\u3002~~\n\n\u5bf9\u4e8e\u7384\u5b66\u90e8\u5206\uff1a\n\n* \u591a\u5f00 `inline`\uff0c\u4f46\u662f `register` \u8981\u8c28\u614e\u8003\u8651\u4e4b\u540e\u518d\u5f00\uff1b\n* \u5feb\u8bfb\u5feb\u8f93\uff0c\u8d85\u5feb\u7684\u90a3\u79cd\uff1b\n* \u80fd\u4e0d\u5f00 `long long` \u5c3d\u91cf\u4e0d\u5f00\uff1b\n* \u80fd\u5c3d\u91cf\u4e0d\u9012\u5f52\uff0c\u5c31\u9012\u63a8\uff1b\n* \u80fd\u903b\u8f91\u8fd0\u7b97\u5c3d\u91cf\u4e0d `if/else`\uff1b\n* \u80fd\u538b\u5230\u4e00\u4e2a `for` \u91cc\u5c31\u5c3d\u91cf\u4e0d\u5f00\u591a\u4e2a `for`\uff1b\n* \u5c3d\u91cf\u51cf\u5c11\u8fd0\u7b97\u3002\n* \u53ef\u4ee5\u5c1d\u8bd5\u624b\u5199 `stl`\u3002\n* `struct` \u91cc\u5199\u6784\u9020\u597d\u50cf\u4f1a\u6162\u4e00\u70b9\uff08\u5b58\u7591\u3002\n* \u6bcf\u4e2a\u4eba\u6700\u5feb\u7684 `C++` \u7248\u672c\u4e0d\u540c\uff0c\u81ea\u5df1\u8bd5\u8bd5\u3002\n\n\u5bf9\u4e8e\u6b63\u7ecf\u64cd\u4f5c\uff1a\n\n\u5bb9\u6613\u77e5\u9053 $\\mathrm{zkw}$ \u7684\u5e38\u6570\u8981\u6bd4\u666e\u901a\u7ebf\u6bb5\u6811\u5c0f\u5f88\u591a\uff0c\u6240\u4ee5\u5bf9\u4e8e\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u5355\u70b9\u4fee\u6539\u7684\u8fd9\u79cd\u5c31\u53ef\u4ee5\u5199 $\\mathrm{zkw}$\u3002\u800c\u5728\u5f00\u4e86 $\\mathrm{O_2}$ \u540e `stl` \u4e0e\u624b\u5199\u5dee\u8ddd\u4e0d\u5927\uff0c\u4e14\u8fd9\u9053\u9898\u8fd8\u5361\u7a7a\u95f4\uff0c\u6240\u4ee5\u7ebf\u6bb5\u6811\u90fd\u53ef\u4ee5\u7528 `std::vector` \u6765\u5b9e\u73b0\u3002\n\n\u800c\u5bf9\u4e8e\u5408\u5e76\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c\u8fd9\u79cd\uff0c\u80fd\u5355\u8fb9\u9012\u5f52\u5c31\u4e0d\u8981 `merge`\uff0c\u5b9e\u5728\u4e0d\u884c\u53ef\u4ee5\u6539 $\\mathrm{zkw}$\uff0c\u4f46\u662f\u4f1a\u591a\u51fa\u4e00\u4e2a `std::queue` \u548c `std::stack`\uff0c\u6240\u4ee5\u4f3c\u4e4e\u5e76\u6ca1\u6709\u5feb\u591a\u5c11\u3002\n\n\u4ee3\u7801\u89c1[\u6211\u7684\u535a\u5ba2](https://lucareternity.github.io/)\uff0c~~\u5361\u5e38\u4e00\u4e2a\u6708\u7eaa\u5ff5\u65e5\uff0c\u6240\u4ee5\u6765\u5199\u9898\u89e3\u3002~~\n\n\u4e0b\u9762\u653e\u7684\u662f\u4e0d\u5361\u5e38\u7248\u7684\u4ee3\u7801\uff1a\n\n``` c++\nconst int MAXN=4e5+10;\nconst ll INF=2e18,MAX=0x3f3f3f3f3f;\nint N,Q,C;\nll a[MAXN];\nint Lst[MAXN],Rst[MAXN],Bck[MAXN],Boc;\ninline int trans(int x){ return x-Lst[Bck[x]]+1; }\nstruct SegmentIn\n{\n\tstruct ZkwSegment\n\t{\n\t\tint Length;\n\t\tstd::vector<ll>val;\n\t\tvoid pushUp(int p)\n\t\t{ val[p]=std::max(val[p<<1],val[p<<1|1]); }\n\t\tvoid build(int n)\n\t\t{\n\t\t\tLength=1;\n\t\t\twhile(Length<=Boc+1) Length<<=1;\n\t\t\tval.resize(Length<<1);\t\n\t\t}\n\t\tvoid modifyX(int x,ll v)\n\t\t{\n\t\t\tval[x+Length]=v;\n\t\t\tfor(int i=(x+Length)>>1;i;i>>=1) pushUp(i);\n\t\t}\n\t\tll queryMax(int l,int r)\n\t\t{\n\t\t\tll res=-INF;\n\t\t\tif(l>r) return res;\n\t\t\tfor(l+=Length-1,r+=Length+1;l^r^1;l>>=1,r>>=1)\n\t\t\t{\n\t\t\t\tif(~l&1) checkMax(res,val[l^1]);\n\t\t\t\tif(r&1) checkMax(res,val[r^1]);\n\t\t\t}\n\t\t\treturn res;\n\t\t}\t\n\t}val;\n\tstruct InBlock\n\t{\n\t\tint Len;\n\t\tstruct Node\n\t\t{\n\t\t\tll lx,rx,val,sum;\n\t\t\tNode(ll lx=0,ll rx=0,ll val=0,ll sum=0):\n\t\t\t\tlx(lx),rx(rx),val(val),sum(sum){}\n\t\t};\n\t\tstruct St\n\t\t{ int l,r;Node val; };\n\t\tstd::vector<St>Tr;\n\t\tstd::vector<ll>b;\n\t\t#define ls (p<<1)\n\t\t#define rs (p<<1|1)\n\t\tNode merge(Node l,Node r)\n\t\t{\n\t\t\tNode p;\n\t\t\tp.lx=std::max(l.lx,l.sum+r.lx);\n\t\t\tp.rx=std::max(r.rx,r.sum+l.rx);\n\t\t\tp.val=std::max(std::max(l.val,r.val),l.rx+r.lx);\n\t\t\tp.sum=l.sum+r.sum;\n\t\t\treturn p;\n\t\t}\n\t\tvoid pushUp(int p)\n\t\t{ Tr[p].val=merge(Tr[ls].val,Tr[rs].val); }\n\t\tvoid build(int p,int l,int r)\n\t\t{\n\t\t\tTr[p].l=l,Tr[p].r=r;\n\t\t\tif(l==r) return Tr[p].val=(Node){b[l],b[l],b[l],b[l]},void();\n\t\t\tint mid=(l+r)>>1;\n\t\t\tbuild(ls,l,mid),build(rs,mid+1,r);\n\t\t\tpushUp(p);\n\t\t}\n\t\tvoid modifyX(int p,int x,ll v)\n\t\t{\n\t\t\tif(Tr[p].l==Tr[p].r) return Tr[p].val=(Node){v,v,v,v},void();\n\t\t\tint mid=(Tr[p].l+Tr[p].r)>>1;\n\t\t\tif(x<=mid) modifyX(ls,x,v);\n\t\t\telse modifyX(rs,x,v);\n\t\t\tpushUp(p);\n\t\t}\n\t\tNode querySum(int p,int l,int r)\n\t\t{\n\t\t\tif(l>r) return -INF;\n\t\t\tif(Tr[p].r<l||r<Tr[p].l) return -INF;\n\t\t\tif(l<=Tr[p].l&&Tr[p].r<=r) return Tr[p].val;\n\t\t\tint mid=(Tr[p].l+Tr[p].r)>>1;\n\t\t\tif(r<=mid) return querySum(ls,l,r);\n\t\t\tif(l>mid) return querySum(rs,l,r);\n\t\t\tNode res=merge(querySum(ls,l,r),querySum(rs,l,r));\n\t\t\treturn res;\n\t\t}\n\t\tll querySum(int l,int r)\n\t\t{ return querySum(1,l,r).val; }\n\t\tll query()\n\t\t{ return querySum(1,1,Len).val; }\n\t\tvoid build(int l,int r)\n\t\t{\n\t\t\tLen=C;\n\t\t\tb.resize(Len+2),Tr.resize(Len<<2);\n\t\t\tfor(int i=1;i<=Len;++i) b[i]=a[i+l-1];\n\t\t\tbuild(1,1,Len);\n\t\t}\n\t};\n\tstd::vector<InBlock>Tr;\n\tvoid build()\n\t{\n\t\tTr.resize(Boc+1);val.build(Boc+1);\n\t\tfor(int i=1;i<=Boc;++i) Tr[i].build(Lst[i],Rst[i]);\n\t\tfor(int i=1;i<=Boc;++i) val.val[i+val.Length]=Tr[i].query();\n\t\tfor(int i=val.Length-1;i;--i) val.pushUp(i);\n\t}\n\tvoid modifyX(int x,ll v)\n\t{\n\t\tTr[Bck[x]].modifyX(1,trans(x),v);\n\t\tval.modifyX(Bck[x],Tr[Bck[x]].query());\n\t}\n\tll query(int l,int r)\n\t{\n\t\tll res=-INF;\n\t\tif(Bck[l]==Bck[r]) return Tr[Bck[l]].querySum(trans(l),trans(r));\n\t\tcheckMax(res,Tr[Bck[l]].querySum(trans(l),C));\n\t\tcheckMax(res,Tr[Bck[r]].querySum(1,trans(r)));\n\t\tcheckMax(res,val.queryMax(Bck[l]+1,Bck[r]-1));\n\t\treturn res;\n\t}\n}In;\nstd::vector<ll>pt,st;\nstruct SegmentOut\n{\n\tstruct ZkwSegment\n\t{\n\t\tint Length;\n\t\tstd::vector<ll>val;\n\t\tvoid pushUp(int p)\n\t\t{ val[p]=std::max(val[p<<1],val[p<<1|1]); }\n\t\tvoid build(int n)\n\t\t{\n\t\t\tLength=1;\n\t\t\twhile(Length<=Boc+1) Length<<=1;\n\t\t\tval.resize(Length<<1);\t\n\t\t}\n\t\tvoid modifyX(int x,ll v)\n\t\t{\n\t\t\tval[x+Length]=v;\n\t\t\tfor(int i=(x+Length)>>1;i;i>>=1) pushUp(i);\n\t\t}\n\t\tll queryMax(int l,int r)\n\t\t{\n\t\t\tll res=-INF;\n\t\t\tif(l>r) return res;\n\t\t\tfor(l+=Length-1,r+=Length+1;l^r^1;l>>=1,r>>=1)\n\t\t\t{\n\t\t\t\tif(~l&1) checkMax(res,val[l^1]);\n\t\t\t\tif(r&1) checkMax(res,val[r^1]);\n\t\t\t}\n\t\t\treturn res;\n\t\t}\t\n\t}val;\n\tstruct OutBlock\n\t{\n\t\tint Len;\n\t\tstruct St\n\t\t{ int l,r;ll av,bv,la,lb,val; };\n\t\tstd::vector<St>Tr;\n\t\t#define ls (p<<1)\n\t\t#define rs (p<<1|1)\n\t\tvoid pushUp(int p)\n\t\t{\n\t\t\tTr[p].av=std::max(Tr[ls].av,Tr[rs].av);\n\t\t\tTr[p].bv=std::max(Tr[ls].bv,Tr[rs].bv);\n\t\t\tTr[p].val=std::max(std::max(Tr[ls].val,Tr[rs].val),Tr[ls].bv+Tr[rs].av);\n\t\t}\n\t\tvoid upDate(int p,ll a,ll b)\n\t\t{\n\t\t\tTr[p].av+=a,Tr[p].la+=a;\n\t\t\tTr[p].bv+=b,Tr[p].lb+=b;\n\t\t\tTr[p].val+=a+b;\n\t\t\treturn ;\n\t\t}\n\t\tvoid pushDown(int p)\n\t\t{\n\t\t\tif(!Tr[p].la&&!Tr[p].lb) return ;\n\t\t\tupDate(ls,Tr[p].la,Tr[p].lb),\n\t\t\tupDate(rs,Tr[p].la,Tr[p].lb);\n\t\t\tTr[p].la=Tr[p].lb=0;\n\t\t}\n\t\tvoid build(int p,int l,int r)\n\t\t{\n\t\t\tTr[p].l=l,Tr[p].r=r,Tr[p].la=0,Tr[p].lb=0;\n\t\t\tif(l==r)\n\t\t\t{\n\t\t\t\tTr[p].av=st[r],Tr[p].bv=pt[l],Tr[p].val=-MAX;\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tint mid=(l+r)>>1;\n\t\t\tbuild(ls,l,mid),build(rs,mid+1,r);\n\t\t\tpushUp(p);\n\t\t}\n\t\t// a:0 b:1\n\t\tvoid modifyAdd(int p,int l,int r,bool op,ll v)\n\t\t{\n\t\t\tif(l<=Tr[p].l&&Tr[p].r<=r)\n\t\t\t{\n\t\t\t\tif(!op) Tr[p].av+=v,Tr[p].la+=v;\n\t\t\t\telse Tr[p].bv+=v,Tr[p].lb+=v;\n\t\t\t\tTr[p].val+=v;\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tpushDown(p);\n\t\t\tint mid=(Tr[p].l+Tr[p].r)>>1;\n\t\t\tif(l<=mid) modifyAdd(ls,l,r,op,v);\n\t\t\tif(mid<r) modifyAdd(rs,l,r,op,v);\n\t\t\tpushUp(p);\n\t\t}\n\t\tll querySum(int p,int l,int r,bool op)\n\t\t{\n\t\t\tif(l>r) return -INF;\n\t\t\tif(l<=Tr[p].l&&Tr[p].r<=r) return op?Tr[p].bv:Tr[p].av;\n\t\t\tpushDown(p);\n\t\t\tint mid=(Tr[p].l+Tr[p].r)>>1;ll res=-INF;\n\t\t\tif(l<=mid) checkMax(res,querySum(ls,l,r,op));\n\t\t\tif(mid<r) checkMax(res,querySum(rs,l,r,op));\n\t\t\treturn res;\n\t\t}\n\t\tll res,pref;\n\t\tvoid query(int p,int l,int r)\n\t\t{\n\t\t\tif(l>r) return ;\n\t\t\tif(l<=Tr[p].l&&Tr[p].r<=r)\n\t\t\t{\n\t\t\t\tcheckMax(res,Tr[p].av+pref),checkMax(res,Tr[p].val);\n\t\t\t\tcheckMax(pref,Tr[p].bv);\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tint mid=(Tr[p].l+Tr[p].r)>>1;\n\t\t\tpushDown(p);\n\t\t\tif(l<=mid) query(ls,l,r);\n\t\t\tif(mid<r) query(rs,l,r);\n\t\t\treturn ;\n\t\t}\n\t\t#undef ls\n\t\t#undef rs\n\t\tll query(int l,int r)\n\t\t{\n\t\t\tres=0,pref=-INF;\n\t\t\tquery(1,l,r);\n\t\t\treturn res;\n\t\t}\n\t\tvoid build(int l,int r)\n\t\t{\n\t\t\tTr.resize((r-l+1)<<2);\n\t\t\tbuild(1,l,r);\n\t\t}\n\t};\n\tstd::vector<OutBlock>Tr;\n\tvoid build()\n\t{\n\t\tval.build(Boc+2);Tr.resize(Boc+2);\n\t\tpt.resize(C+3),st.resize(C+3);\n\t\tfor(int i=1;i<Boc;++i)\n\t\t{\n\t\t\tfor(int j=1;j<=C;++j) pt[j]=pt[j-1]+a[j+Lst[i+1]-1];\n\t\t\tfor(int j=C;j>=1;--j) st[j]=st[j+1]+a[j+Lst[i]-1];\n\t\t\tTr[i].build(1,C);\n\t\t}\n\t\tfor(int i=1;i<Boc;++i) val.modifyX(i,Tr[i].Tr[1].val);\n\t}\n\tvoid modifyX(int x,ll v)\n\t{\n\t\tint id=Bck[x];\n\t\tif(id>1) Tr[id-1].modifyAdd(1,trans(x),C,1,v-a[x]);\n\t\tif(id<Boc) Tr[id].modifyAdd(1,1,trans(x),0,v-a[x]);\n\t\tif(id>1) val.modifyX(id-1,Tr[id-1].Tr[1].val);\n\t\tif(id<Boc) val.modifyX(id,Tr[id].Tr[1].val);\n\t\ta[x]=v;\n\t}\n\tll query(int l,int r)\n\t{\n\t\tll res=-INF;\n\t\tif(Bck[l]==Bck[r]) return -INF;\n\t\tif(Bck[l]==Bck[r]-1)\n\t\t{\n\t\t\tint cl=trans(l),cr=trans(r),id=Bck[l];\n\t\t\tif(cl>cr) return Tr[id].querySum(1,cl,C,0)+Tr[id].querySum(1,1,cr,1);\n\t\t\tcheckMax(res,Tr[id].querySum(1,1,cl-1,1)+Tr[id].querySum(1,cl,C,0));\n\t\t\tcheckMax(res,Tr[id].querySum(1,1,cr,1)+Tr[id].querySum(1,cr+1,C,0));\n\t\t\tcheckMax(res,Tr[id].query(cl,cr));\n\t\t\treturn res;\n\t\t}\n\t\tcheckMax(res,val.queryMax(Bck[l]+1,Bck[r]-2));\n\t\tcheckMax(res,Tr[Bck[l]].query(trans(l),C));\n\t\tcheckMax(res,Tr[Bck[r]-1].query(1,trans(r)));\n\t\tif(trans(l)!=1) checkMax(res,Tr[Bck[l]].querySum(1,1,trans(l)-1,1)+Tr[Bck[l]].querySum(1,trans(l),C,0));\n\t\tif(trans(r)!=C) checkMax(res,Tr[Bck[r]-1].querySum(1,1,trans(r),1)+Tr[Bck[r]-1].querySum(1,trans(r)+1,C,0));\n\t\treturn res;\n\t}\n}Out;\n```",
        "postTime": 1676896526,
        "uid": 444040,
        "name": "_Eternal_",
        "ccfLevel": 0,
        "title": "P6780 [Ynoi2009] pmrllcsrms \u9898\u89e3"
    },
    {
        "content": "\u5bb9\u6613\u60f3\u5230\u6839\u636e $c$ \u5206\u5757\u3002\n\n\u5757\u5185\u76f4\u63a5\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u5757\u5757\u4e4b\u95f4\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/23pxy9vb.png)\n\nsource\uff1ahttps://www.luogu.com.cn/blog/111055/gan-en-xxy\n\n\u8fd9\u4e2a\u975e\u5e38\u96be\u7ef4\u62a4\uff0c\u56e0\u4e3a\u9650\u5236\u662f $x+y\\leq k$\u3002\n\n\u6211\u4eec\u76f4\u63a5\u65cb\u8f6c\u4e00\u4e0b\uff0c\u8f6c\u6210\u5c16\u5c16\u671d\u5de6\u7684\u4e09\u89d2\u5f62\uff0c\u5373 $x\\leq y$\u3002\n\n\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u76f4\u63a5\u7ef4\u62a4\uff0c\u7ed3\u675f\u4e86\uff01\n\n[\u4ee3\u7801](https://www.luogu.com.cn/paste/1xfbjqak)",
        "postTime": 1672733356,
        "uid": 359952,
        "name": "_lbw_",
        "ccfLevel": 6,
        "title": "\u6c89\u8ff7 DS \u65e0\u6cd5\u81ea\u62d4"
    }
]