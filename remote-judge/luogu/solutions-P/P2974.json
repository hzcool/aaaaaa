[
    {
        "content": "\u9898\u610f\uff1a\n\n\u7ed9\u5b9a $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\u3002\n\n\u6bcf\u4e2a\u70b9\u4e0a\u6709 `T` \u725b\uff0c`J` \u725b\uff0c\u6216\u8005\u6ca1\u6709\uff08`E`\uff09\u3002\n\n`J` \u725b\u53ef\u4ee5 `MOVE` \u5230\u4e00\u4e2a\u76f8\u90bb\u7684\u70b9\uff0c\u4e5f\u53ef\u4ee5 `ATTACK` \u76f8\u90bb\u70b9\u4e0a\u7684\u4e00\u4e2a `T` \u725b\u3002\u4e0d\u8fc7\u64cd\u4f5c\u6709\u9650\u5236\uff0c\u53ea\u80fd\u6309\u7167 `MOVE`,`ATTACK` \u6216\u8005 `MOVE` \u7136\u540e `ATTACK` \u4e09\u79cd\u65b9\u5f0f\u64cd\u4f5c\u3002\n\n\u4e00\u4e2a `T` \u725b\u4ec5\u80fd\u88ab `ATTACK` \u4e00\u6b21\u3002\n\n\u9700\u8981\u4fdd\u8bc1\u4efb\u610f\u65f6\u523b\uff0c\u6bcf\u4e2a\u70b9\u4e0a\u6709\u4e14\u4ec5\u6709\u4e00\u5934\u725b\u3002\n\n\u6c42\u6240\u6709 `T` \u725b\u88ab `ATTACK` \u7684\u6700\u5927\u6b21\u6570\uff0c\u5e76\u7ed9\u51fa\u4e00\u4e2a\u53ef\u884c\u7684\u64cd\u4f5c\u65b9\u6848\u3002\n\n\u9898\u89e3\uff1a\n\n\u6ce8\u610f\u5230\u8fd9\u4e2a\u4e1c\u897f\u5f88\u50cf\u6700\u5927\u6d41\u7684\u5e38\u89c1\u5957\u8def\uff1a\u6bcf\u4e2a\u70b9\u6709\u5bb9\u91cf\u9650\u5236\uff0c\u591a\u4e2a\u6e90\u70b9\uff0c\u95ee\u591a\u4e2a\u6c47\u70b9\u6700\u591a\u63a5\u6536\u5230\u591a\u5c11\u6d41\u91cf\uff1f\n\n\u6309\u70b9\u79cd\u7c7b\u5efa\u6a21\u3002\n\n\u5bf9\u4e8e `J` \u725b\uff0c\u5b83\u9700\u8981\u4ece\u8d85\u7ea7\u6e90\u63a5\u6536\u4e00\u4e2a\u6d41\u91cf\uff08\u653b\u51fb\u4e00\u6b21\uff09\uff0c\u7136\u540e\u53ef\u4ee5 `MOVE` \u5230\u4e00\u4e2a\u5176\u4ed6\u70b9\u6216\u8005\u4e0d\u52a8\uff0c\u6700\u540e `ATTACK`\uff0c\u9700\u8981\u4e09\u5c42\u56fe\u3002\n\n\u5bf9\u4e8e `T` \u725b\uff0c\u5b83\u53ea\u80fd\u88ab\u4e00\u4e2a\u70b9 `ATTACK` \u4e00\u6b21\uff0c\u9700\u8981\u4e00\u5c42\u56fe\u3002\n\n\u5bf9\u4e8e `E`\uff0c\u5b83\u53ef\u4ee5\u88ab `MOVE`\uff0c\u4f46\u662f\u540c\u65f6\u53ea\u80fd\u6709\u4e00\u5934\u725b\u5728\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u6240\u4ee5\u9700\u8981\u4e24\u5c42\u7528\u6765\u9650\u5236\u6d41\u91cf\u3002\n\n\u68b3\u7406\u4e00\u4e0b\uff1a\u7b2c\u4e00\u5c42\u7ed9 `J` \u725b\u63a5\u6536\u6d41\u91cf\uff0c\u7b2c\u4e8c\u5c42\u662f\u88ab `MOVE` \u5230\u6216\u8005\u4e0d\u52a8\u7684\u70b9\uff0c\u7b2c\u4e09\u5c42\u7528\u4e8e\u9650\u5236\u6bcf\u4e2a\u70b9\u81f3\u591a\u88ab\u4e00\u5934\u725b\u5360\u636e\uff0c\u7b2c\u56db\u5c42\u88ab `ATTACK`\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb Dinic \u4e86\u3002\n\n\u81f3\u4e8e\u65b9\u6848\u8f93\u51fa\uff0c\u6211\u4eec\u50cf\u5308\u7259\u5229\u7b97\u6cd5\u4e00\u6837\u53bb\u5904\u7406 `MOVE` \u5e76\u4e14\u6a21\u62df\u5c31\u597d\u4e86\uff0c\u4e0d\u540c\u7684\u4e00\u70b9\u662f\u6bcf\u4e2a\u70b9\u6700\u591a `MOVE` \u4e00\u6b21\u3002`ATTACK` \u5728\u5904\u7406\u5b8c\u524d\u9762\u4ee5\u540e\u5c31\u662f\u5e38\u89c4\u7684\u6700\u5927\u6d41\u8f93\u51fa\u4e86\u3002 \n\nDinic \u53ef\u4ee5\u8fc7\u5012\u4e0d\u662f\u56e0\u4e3a\u7f51\u7edc\u6d41\u8dd1\u4e0d\u6ee1\uff0c\u800c\u662f\u56e0\u4e3a\u6d41\u91cf\u90fd\u662f $1$\uff0c\u590d\u6742\u5ea6 $O(E\\min\\{V^{\\frac{2}{3}},E^{\\frac{1}{2}}\\})$\uff0c\u5176\u4e2d $V$ \u662f\u70b9\u6570\uff0c$E$ \u662f\u8fb9\u6570\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1005, M = 5005;\nint fir[N << 2], nxt[(N + M) << 2], to[(N + M) << 2], flow[(N + M) << 2], cnt = 1;\nint n, m, s, t, dep[N << 2];\nchar str[N];\nbool vis[N << 2];\ninline void add(int u, int v, int f) {\n\tto[++cnt] = v;\n\tflow[cnt] = f;\n\tnxt[cnt] = fir[u];\n\tfir[u] = cnt;\n}\ninline void addedge(int u, int v, int f) {\n\tadd(u, v, f);\n\tadd(v, u, 0);\n}\n#define v to[i]\ninline bool bfs() {\n\tmemset(dep, 0, sizeof dep);\n\tdep[s] = 1;\n\tqueue<int> q;\n\tq.push(s);\n\n\twhile (!q.empty()) {\n\t\tint u = q.front();\n\t\tq.pop();\n\n\t\tfor (int i = fir[u]; i; i = nxt[i]) {\n\t\t\tif (flow[i] && !dep[v]) {\n\t\t\t\tq.push(v);\n\t\t\t\tdep[v] = dep[u] + 1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dep[t] > 0;\n}\ninline int min(int x, int y) {\n\treturn x < y ? x : y;\n}\ninline int dfs(int u, int in) {\n\tif (u == t)\n\t\treturn in;\n\n\tint out = 0, res;\n\n\tfor (int i = fir[u]; i && in; i = nxt[i]) {\n\t\tif (dep[v] == dep[u] + 1 && flow[i]) {\n\t\t\tres = dfs(v, min(in, flow[i]));\n\t\t\tflow[i] -= res, flow[i ^ 1] += res, in -= res, out += res;\n\t\t}\n\t}\n\n\tif (out == 0)\n\t\tdep[u] = 0;\n\n\treturn out;\n}\ninline int dinic() {\n\tint res = 0;\n\n\twhile (bfs())\n\t\tres += dfs(s, 1e9);\n\n\treturn res;\n}\ninline bool print_move(int u) {\n\tif (vis[u] || str[u] != 'J')\n\t\treturn 0;\n\n\tvis[u] = 1;\n\n\tfor (int i = fir[u]; i; i = nxt[i]) {\n\n\t\tif (v == u + n || v <= u || flow[i])\n\t\t\tcontinue;\n\n\t\tif (str[v - n] == 'J') {\n\t\t\tif (print_move(v - n)) {\n\t\t\t\tprintf(\"MOVE %d %d\\n\", u, v - n);\n\t\t\t\tswap(str[u], str[v - n]);\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t} else if (str[v - n] == 'E') {\n\t\t\tprintf(\"MOVE %d %d\\n\", u, v - n);\n\t\t\tswap(str[u], str[v - n]);\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\treturn 0;\n}\n#undef v\nsigned main() {\n\tscanf(\"%d%d\", &n, &m);\n\tscanf(\"%s\", str + 1);\n\ts = 0, t = 4 * n + 1;\n\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (str[i] == 'J') {\n\t\t\taddedge(s, i, 1);\n\t\t\taddedge(i, n + i, 1);//REMAIN\n\t\t\taddedge(n + i, 2 * n + i, 1);\n\t\t} else if (str[i] == 'T')\n\t\t\taddedge(3 * n + i, t, 1);\n\t\telse if (str[i] == 'E')\n\t\t\taddedge(n + i, 2 * n + i, 1);\n\t}\n\n\tfor (int i = 1; i <= m; i++) {\n\t\tint u, v;\n\t\tscanf(\"%d%d\", &u, &v);\n\n\t\tif (str[u] != 'T' && str[v] != 'T') { //MOVE u v / MOVE v u\n\t\t\taddedge(u, n + v, 1);\n\t\t\taddedge(v, n + u, 1);\n\t\t} else if (str[u] != 'T' && str[v] == 'T') // ATTACK u v\n\t\t\taddedge(2 * n + u, 3 * n + v, 1);\n\t\telse if (str[v] != 'T' && str[u] == 'T') //ATTACK v u\n\t\t\taddedge(2 * n + v, 3 * n + u, 1);\n\t}\n\n\tint maxf = dinic();\n\tprintf(\"%d\\n\", maxf);\n\n\tfor (int i = 1; i <= n; i++)\n\t\tprint_move(i);\n\n\tfor (int i = 2 * n + 1; i <= 3 * n; i++) {\n\t\tif (str[i - 2 * n] != 'J')\n\t\t\tcontinue;\n\n\t\tfor (int j = fir[i]; j; j = nxt[j]) {\n\t\t\tint v = to[j];\n\n\t\t\tif (v <= i)\n\t\t\t\tcontinue;\n\n\t\t\tif (flow[j] == 0 && str[v - 3 * n] == 'T') {\n\t\t\t\tprintf(\"ATTACK %d %d\\n\", i - 2 * n, v - 3 * n);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 0;\n}\n```\n",
        "postTime": 1666356087,
        "uid": 434929,
        "name": "Usada_Pekora",
        "ccfLevel": 7,
        "title": "P2974 \u7f51\u7edc\u6d41"
    }
]