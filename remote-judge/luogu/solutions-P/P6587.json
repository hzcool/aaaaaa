[
    {
        "content": "## \u30100/1 Trie\u3011\u3010P6587\u3011 \u8d85\u8d85\u7684\u5e8f\u5217\n\n### Analysis\n\n\u628a\u4e0b\u6807\u770b\u4f5c\u4e00\u5806\u4e8c\u8fdb\u5236\u4e32\uff0c\u5efa\u7acb\u4e00\u9897 01 Trie\uff0c\u5728\u53f6\u7ed3\u70b9\u5904\u7ef4\u62a4\u4ee5\u5f53\u524d\u4e8c\u8fdb\u5236\u4e32\uff08\u4ee5\u6839\u8282\u70b9\u5230\u5b69\u5b50\u7684\u8fb9\u4e3a\u6700\u4f4e\u4f4d\uff0c\u8fde\u63a5\u53f6\u8282\u70b9\u7684\u8fb9\u4e3a\u6700\u9ad8\u4f4d\uff09\u7684\u4e3a\u4e0b\u6807\u7684\u5e8f\u5217\u503c\uff0c\u975e\u53f6\u8282\u70b9\u7ef4\u62a4\u5b50\u6811\u548c\u3002\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e2a\u5728\u7b2c $m$ \u5c42\uff08\u6839\u4e3a\u7b2c $0$ \u5c42\uff09\uff0c\u4ee3\u8868 $x$ \u7684\u8282\u70b9\uff0c\u5176\u4fe1\u606f\u5c31\u662f\u6240\u6709\u5bf9 $2^m$ \u53d6\u6a21\u540e\u503c\u4e3a $x$ \u7684\u4e0b\u6807\u5bf9\u5e94\u7684\u5e8f\u5217\u503c\u4e4b\u548c\u3002\u67e5\u8be2\u65f6\u76f4\u63a5\u67e5\u8be2\u5b50\u6811\u548c\uff0c\u4fee\u6539\u65f6\u5728 Trie \u4e0a\u6253\u6807\u8bb0\u5373\u53ef\u3002\n\n\u5565\uff0c\u4f60\u8bf4\u8fd9\u548c\u5b98\u65b9\u9898\u89e3\u7684 std \u6ca1\u5565\u533a\u522b\uff1f\u56e0\u4e3a 01 Trie \u548c\u7ebf\u6bb5\u6811\u672c\u8d28\u4e0a\u662f\u76f8\u540c\u7684\uff0c\u663e\u800c\u6613\u89c1\u8fd9\u91cc\u628a\u8fd9\u4e2a\u7ed3\u6784\u63cf\u8ff0\u6210 01 Trie \u66f4\u52a0\u7684\u81ea\u7136\u3002\n\n### Code\n\n```cpp\nnamespace Fusu {\n\nconst int maxn = 2100005;\n\nint n, m;\nint a[maxn];\n\nstruct Node {\n  int sz;\n  ll sum, tag;\n  Node *trans[2];\n\n  inline void maketag(const ll x) {\n    sum += sz * x;\n    tag += x;\n  }\n  inline void pushup() {\n    sum = 0;\n    for (auto u : trans) if (u) {\n      sum += u->sum;\n    }\n  }\n  inline void pushdown() {\n    if (tag) {\n      for (auto u : trans) if (u) u->maketag(tag);\n      tag = 0;\n    }\n  }\n};\nNode Mem[maxn << 1], *pool = Mem;\nNode *New(const int p, const int d) {\n  int t = 1 << d;\n  auto x = pool++;\n  if (d == 21) {\n    if (p <= n) {\n      x->sum = a[p];\n      if (p != 0) x->sz = 1;\n    }\n    return x;\n  }\n  x->trans[0] = New(p, d + 1);\n  x->trans[1] = New(p | t, d + 1);\n  x->pushup();\n  x->sz = x->trans[0]->sz + x->trans[1]->sz;\n  return x;\n}\n\nNode *stk[maxn];\nint top = 0;\nvoid Main() {\n  qr(n); qr(m);\n  qra(a + 1, n);\n  auto rot = New(0, 0);\n  for (ll op, x, y, z, ans = 0; m; --m) {\n    qr(op);\n    op = (op + ans) % 2 + 1;\n    qr(x); qr(y);\n    y &= (1 << x) - 1;\n    if (op == 1) {\n      qr(z);\n      auto u = rot;\n      for (int i = 0, t = 1 << i; i < x; t = 1 << ++i) {\n        stk[++top] = u;\n        int k = (y & t) ? 1 : 0;\n        u->pushdown();\n        u = u->trans[k];\n      }\n      u->maketag(z);\n      while (top) stk[top--]->pushup();\n    } else {\n      auto u = rot;\n      for (int i = 0, t = 1 << i; i < x; t = 1 << ++i) {\n        int k = (y & t) ? 1 : 0;\n        u->pushdown();\n        u = u->trans[k];\n      }\n      qw(ans = u->sum, '\\n');\n    }\n  }\n}\n\n} // namespace Fusu\n```\n\n",
        "postTime": 1591169969,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6587 \u3010\u8d85\u8d85\u7684\u5e8f\u5217 \u52a0\u5f3a\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u5e8f\u5217 $a$\uff0c\u5e76\u4e14\u7ed9\u51fa\u4e24\u79cd\u64cd\u4f5c\uff1a\n- `1 x y v`\uff1a\u5c06\u6240\u6709 $a_i$ \u7684\u503c\u52a0\u4e0a $v$\uff0c\u5176\u4e2d $i\\equiv y\\pmod {2^x}$\u3002\n- `2 x y`\uff1a\u8be2\u95ee\u6240\u6709 $a_i$ \u7684\u548c\uff0c\u5176\u4e2d $i\\equiv y\\pmod {2^ x}$\u3002\n\n\u5f3a\u5236\u5728\u7ebf\n\n---\n\n\u66b4\u529b~~\u6709\u8111\u5b50\u5c31\u884c~~\n\n```cpp\nwhile(m--)\n{\n\top=(R()+pre)%2+1;p=R();k=R();\n\tif(op==1) \n\t{\n\t\tint v=R();\n\t\tp=1<<p;\n\t\tif(k==0) k+=p;\n\t\tfor(int i=k;i<=n;i+=p) a[i]+=v;\n\t}\n\telse \n\t{\n\t\tint res=0;p=1<<p;\n\t\tfor(int i=k;i<=n;i+=p) res+=a[i];\n\t\tprintf(\"%lld\\n\",pre=res);\n\t}\n}\n```\n\n\u53ef\u4ee5\u641e\u523010\u5206\u548c\u5bf9\u62cd\n\n + ~~\u51fa\u9898\u4eba\u7684\u8822~~\u6807\u7b97\n \n \u62ff\u5230\u9898\u76ee\uff0c\u9996\u5148\u624b\u73a9$x=0$\u65f6\u7684\u60c5\u51b5:$y=1$\u8868\u793a\u6240\u6709\u5947\u6570\u7684\u548c\uff0c$y=0$,\u8868\u793a\u6240\u6709\u5076\u6570\u7684\u548c\n\n\u4ee5\u4e0b\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8bbe$x=i,y=j$\u60c5\u51b5\u4e0b\u7684\u4e0b\u6807\u96c6\u5408\u4e3a$Range_{i,j}$\n\n\n\u518d\u63a5\u4e0b\u53bb\uff0c\u8003\u8651$Range_{1,0}=4,8,12,16,20\u2026\u2026$\n\n$Range_{1,1}=5,9,13,17,21\u2026\u2026$\n\n$Range_{1,2}=6,10,14,18,22\u2026\u2026$\n\n$Range_{1,3}=7,11,15,19,23\u2026\u2026$\n\n### \u4ed4\u7ec6\u89c2\u5bdf\n\n\u662f\u4e0d\u662f\u5bb9\u6613\u53d1\u73b0$Range_{1,0}$\u548c$Range_{1,2}$\u91cc\u9762\u90fd\u662f\u5076\u6570\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u4ed6\u4eec\u90fd\u88ab$Range_{0,0}$\u5305\u542b\uff0c\u4e14\n$Range_{1,0}+Range_{1,2}=Range_{0,0}$\n\n\u76f8\u540c\u5730$Range_{1,1}+Range_{1,3}=Range_{0,1}$\n\n\u6240\u4ee5\u6211\u4eec\u60f3\u5230\u4e86\u601d\u8def\uff1a\u628a\u539f\u6765\u7684\u533a\u95f4\u6309\u7167\u4e0b\u6807\u5947\u5076\u5206\u6210\u4e24\u4e2a\u5b50\u533a\u95f4\uff0c\u8fd9\u4e24\u4e2a\u5b50\u533a\u95f4\u4e5f\u5982\u6b64\u5212\u5206\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u5c31\u67e5\u8be2\u67d0\u4e2a\u5b50\u533a\u95f4\u7684\u548c\u5c31\u591f\u4e86\u3002\u6211\u4eec\u9009\u62e9\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u8fd9\u4e9b\u4e2a\u533a\u95f4\uff0c\u4f9d\u7167\u539f\u6765\u7684\u533a\u95f4\u52a0\u6cd5\u548c\u4fee\u6539\u64cd\u4f5c\u5c31\u597d\u4e86\u3002\n\n\u5f53\u7136\u67e5\u8be2\u548c\u4fee\u6539\u7684\u7ec6\u8282\u4e0e\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u4e0d\u540c\uff0c\u5177\u4f53\u53ef\u4ee5\u89c1\u4ee3\u7801\n\n _\u6700\u540e\u522b\u5fd8\u5f00long long_ \n\nstd\u4ee3\u7801~~\u7565\u4e11~~\n\n```cpp\n#include<bits/stdc++.h>\n#define ls (root<<1) \n#define rs (root<<1|1)\n#define mid (l+r>>1)\n#define min(a,b) (a<b?a:b)\nusing namespace std;\nconst int Maxn=2e6+5;\ninline int R()\n{\n\tchar c;int sign=1,res=0;\n\twhile((c=getchar())>'9'||c<'0') if(c=='-') sign=-1;res+=c-'0';\n\twhile((c=getchar())>='0'&&c<='9') res=res*10+c-'0';\n\treturn res*sign;\t\n}\n#define int long long \nint a[Maxn],n,m,sum[Maxn*4],N=1,NN=0,ADD[Maxn*4],size[Maxn*4];\nvoid add(int root,int val)\n{\n\tsum[root]+=size[root]*val;\n\tADD[root]+=val;\n}\nvoid pushdown(int root)\n{\n\tif(ADD[root])\n\t{\n\t\tadd(ls,ADD[root]);\n\t\tadd(rs,ADD[root]);\n\t\tADD[root]=0;\n\t}\n}\nvoid build(int root,int deep,int sur)\n{\n\tif(deep==NN) \n\t{\n\t\tsum[root]=a[sur];\n\t\tsize[root]=(sur<=n);\n\t\treturn;\n\t}\n\tbuild(ls,deep+1,sur);\n\tbuild(rs,deep+1,sur+(1<<deep));\n\tsum[root]=sum[ls]+sum[rs];\n\tsize[root]=size[ls]+size[rs];\n}\nvoid modify(int root,int deep,int arr,int sur,int value)\n{\n\tif(deep==arr&&sur!=0) return;\n\tpushdown(root);\n\tif(deep==arr) return add(root,value);\n\tif(sur&1) modify(rs,deep+1,arr,sur>>1,value);\n\telse  modify(ls,deep+1,arr,sur>>1,value);\n\tsum[root]=sum[ls]+sum[rs];\n}\nint query(int root,int deep,int arr,int sur)\n{\n\tif(deep==arr&&sur!=0) return 0;\n\tpushdown(root);\n\tif(deep==arr) return sum[root];\n\tif(sur&1) return query(rs,deep+1,arr,sur>>1);\n\telse return query(ls,deep+1,arr,sur>>1);\n}\nsigned main()\n{\n\tn=R();m=R();\n\twhile(N<=n) N<<=1,NN++; \n\tfor(int i=1;i<=n;i++) a[i]=R();\n\tbuild(1,0,1);\n\tint op,p,k,pre=0;\n\twhile(m--)\n\t{\n\t\top=(R()+pre)%2+1;p=R();k=R();\n\t\tif(op==1)//\u4fee\u6539 \n\t\t{\n\t\t\tint v=R();\n\t\t\tif(k!=0)modify(1,0,min(NN,p),k-1,v);\n\t\t\telse modify(1,0,min(NN,p),(1<<(min(NN,p)))-1,v);\n\t\t}\n\t\telse if(k!=0)printf(\"%lld\\n\",pre=query(1,0,min(NN,p),k-1));\n\t\telse printf(\"%lld\\n\",pre=query(1,0,min(NN,p),(1<<(min(NN,p)))-1));\n\t}\n}\n```\n",
        "postTime": 1591012957,
        "uid": 220857,
        "name": "\u7d20\u8d28\u73a9\u5bb6\u5b591\u8d85",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6587 \u3010\u8d85\u8d85\u7684\u5e8f\u5217 \u52a0\u5f3a\u3011"
    },
    {
        "content": "## Part 1 \u524d\u7f6e\u77e5\u8bc6\n[P3372 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 1](https://www.luogu.com.cn/problem/P3372)\n\n[P2580 \u4e8e\u662f\u4ed6\u9519\u8bef\u7684\u70b9\u540d\u5f00\u59cb\u4e86](https://www.luogu.com.cn/problem/P2580)\n\n\u4e0d\u4f1a\u7684\u8bf7\u5b66\u4e60 [LazyTag](https://oi-wiki.org//ds/seg/#_4) \u548c [01-Trie](https://oi-wiki.org/string/trie/)\uff0c\u4e0d\u7528\u4f1a\u4ee3\u7801\u5b9e\u73b0\uff0c\u53ea\u9700\u8981\u7406\u89e3\u601d\u60f3\uff0c\u56e0\u4e3a\u8fd9\u9898\u7528\u7684\u6570\u636e\u7ed3\u6784\u65e2\u4e0d\u662f\u7ebf\u6bb5\u6811\u4e5f\u4e0d\u662f 01-Trie\uff0c\u800c\u662f\u4e00\u79cd\u6bd4\u8f83\u7efc\u5408\u7684\u4e8c\u53c9\u6811\u3002\n\n&nbsp;\n## Part 2 \u9898\u610f\u8f6c\u5316\n\u6211\u4eec\u8bb0 $bin(x)$ \u4e3a $x$ \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u3002\n\n\u5219 $bin(1)=1,\\ bin(10)=1010$\n\n\u4f46\u662f\u8fd9\u9898\u6c42\u7684\u64cd\u4f5c\u96c6\u5408\u662f **\u4e8c\u8fdb\u5236\u540e\u7f00** \u4e3a\u67d0\u4e2a 01 \u4e32\u7684\u6570\u7684\u96c6\u5408\uff0c\u6240\u4ee5\u6211\u4eec\u8bb0 $rebin(x)$ \u4e3a $bin(x)$ \u7ffb\u8f6c (Reverse Binary) \u540e\u7684\u7ed3\u679c\u3002\n\n\u5219 $rebin(1)=1,\\ rebin(10)=0101$\n\n**\u6ce8\u610f\uff0c\u6b64\u5904\u4e0d\u80fd\u7701\u7565\u524d\u5bfc 0**\n\n\u8fd9\u65f6\uff0c\u64cd\u4f5c\u96c6\u5408\u8f6c\u6362\u4e3a\u4e00\u4e2a **\u516c\u5171\u524d\u7f00\u96c6\u5408**\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u9898\u76ee\u4e2d\u7684 $n = 5,\\, x = 2,\\, y = 1$\n\n\u8bbe $z$ \u662f\u8981\u64cd\u4f5c\u7684\u6570\uff0c\u5219 $z$ \u6ee1\u8db3\u7684\u4e8c\u8fdb\u5236\u672b $x$ \u4f4d\u4e3a $bin(y)$ \uff08\u4e0d\u8db3\u88650\uff09\n\n\u524d\u9762\u5199\u7684\u4e00\u4e9b\u4e1c\u897f\u5728\u8fd9\u91cc\u53ef\u4ee5\u7b80\u5316\u95ee\u9898\uff0c\u5373 $rebin(y)$ \u662f $rebin(z)$ \u7684\u524d\u7f00\uff0c\u90a3\u4e48\u6b64\u9898\u5c31\u7b80\u5355\u4e86\u8bb8\u591a\u3002\n\n\u624b\u52a8\u6a21\u62df\u53ef\u4ee5\u5f97\u77e5\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u7684\u6570\u7684\u4e0b\u6807\u96c6\u5408\u4e3a $\\{1,5\\}$\n\n\u4f46\u662f $rebin(1)=1,\\ rebin(y)=10$\uff0c10 \u4e0d\u662f 1 \u7684\u524d\u7f00\uff0c\u4f46 1 \u4ecd\u7136\u9700\u8981\u64cd\u4f5c\uff0c\u8fd9\u662f\u56e0\u4e3a $rebin(z)$ \u5728\u540e\u9762\u8865\u8db3\u8db3\u591f\u7684 0 \u4e4b\u540e\uff0c\u82e5 $rebin(y)$ \u4e3a $rebin(z)$ \u7684\u524d\u7f00\uff0c\u90a3\u4e48 $z$ \u4e5f\u9700\u8981\u4fee\u6539\u3002\u8fd9\u5f88\u663e\u7136\uff0c\u4e0d\u7528\u8bc1\u660e\u5427~\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5728\u9884\u5904\u7406\u65f6\u5c06 $rebin(x)$ \u7684\u957f\u5ea6\u8865\u8db3\u4e3a $log(n)$ \u4f4d\uff08\u6b64\u5904\u4e3a20\uff09\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e0d\u5206\u60c5\u51b5\u7684\u89e3\u51b3\u4e00\u4e2a\u7b80\u5355\u7684\u524d\u7f00\u95ee\u9898\u3002\n\n\u73b0\u5728\u6b64\u9898\u5c31\u662f\uff1a\n\n\u6709\u4e00\u4e9b\u952e\u4e3a\u957f\u5ea6\u5747\u4e3a 20 \u7684 01 \u4e32\u7684\u952e\u503c\u5bf9\uff0c\u6bcf\u6b21\u64cd\u4f5c\uff1a\n\n\u6bcf\u6b21\u9009\u5b9a\u4e00\u4e9b\u952e\u7684\u524d\u7f00\u4e3a $x$\uff08\u6b64\u5904 $x$ \u4e5f\u662f\u957f\u5ea6\u4e3a 20 \u7684 01 \u4e32\uff09\u7684\u952e\u503c\u5bf9\uff0c\u5c06\u5176\u503c\u589e\u52a0\u4e00\u4e2a\u503c\u6216\u8005\u67e5\u8be2\u503c\u7684\u548c\u3002\n\n&nbsp;\n## Part 3 \u6837\u4f8b\u6a21\u62df\n\u6709 5 \u4e2a\u952e\u503c\u5bf9\uff1a(\u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\uff0c\u957f\u5ea6\u8865\u8db3\u4e3a 3 \u4f4d)\n\n$[100,1]$\n\n$[010,2]$\n\n$[110,3]$\n\n$[001,4]$\n\n$[101,6]$\n\n\u8f93\u5165 ```2 2 1``` (\u6682\u65e0\u79bb\u7ebf)\uff1a\n\n\u5373\u67e5\u8be2\u952e\u7684\u524d\u7f00\u4e3a $[10]$ \u7684\u952e\u503c\u5bf9\u7684\u548c\uff0c\u5373 1 + 6 \uff0c\u4e8e\u662f\u8f93\u51fa ```7```\n\n\u8f93\u5165 ```1 1 1 3``` \uff1a\n\n\u5373\u4fee\u6539\u952e\u7684\u524d\u7f00\u4e3a $[1]$ \u7684\u952e\u503c\u5bf9\u7684\u503c\uff0c\u4e8e\u662f\u73b0\u5728 5 \u4e2a\u952e\u503c\u5bf9\u4e3a\uff1a\n\n$[100,4]$\n\n$[010,2]$\n\n$[110,6]$\n\n$[001,4]$\n\n$[101,9]$\n\n\u8f93\u5165 ```2 0 0```\uff1a\n\n\u5373\u67e5\u8be2 **\u6240\u6709** \u952e\u503c\u5bf9\u7684\u548c\uff0c\u8f93\u51fa ```25```\n\n\u663e\u7136\u7684\uff0c\u8fd9\u4e2a\u505a\u6cd5\u53ef\u884c\u3002\n\n\u753b\u6210\u4e8c\u53c9\u6811\u662f\u8fd9\u6837\u7684\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/mpwznnuy.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/9igxeajl.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8rk41k5z.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/r46q2h2x.png)\n\n&nbsp;\n## Part 4 \u590d\u6742\u5ea6\n\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u7f8e\u5999\u7684\u6027\u8d28\uff1a\n\n\u6bcf\u6b21\u67e5\u8be2\u5fc5\u5b9a\u67e5\u7684\u662f\u4e00\u4e2a\u8282\u70b9\u4e0a\u7684\u503c\uff0c\u4e00\u6b21\u4fee\u6539\u4e5f\u4e00\u5b9a\u4fee\u6539\u7684\u662f\u4e00\u4e2a\u8282\u70b9\u7684\u7956\u5148\u548c\u5b83\u7684\u6240\u6709\u5b69\u5b50\u7684\u503c\uff0c\u8fd9\u662f\u63a5\u8fd1\u4e8e 01-Trie \u7684\u4e00\u70b9\u3002\n\n\u4f46\u662f\u5982\u679c\u6211\u4eec\u6bcf\u6b21\u4fee\u6539\u90fd\u4fee\u6539\u5230\u53f6\u5b50\u8282\u70b9\uff0c\u5355\u6b64\u4fee\u6539\u53ef\u80fd\u4f1a\u88ab\u5361\u5230 $\\mathcal{O}(n\\log n)$\uff0c\u4e8e\u662f\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u7684 LazyTag \u61d2\u60f0\u6807\u8bb0\u601d\u60f3\u6765\u4f18\u5316\u3002\n\n\u4e8e\u662f\uff0c\u6211\u7ed9\u8fd9\u4e2a\u4e8c\u53c9\u6811\u53d6\u4e86\u4e00\u4e2a\u6709\u610f\u601d\u7684\u540d\u5b57\uff1aLazyTrie\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\n\u9884\u5904\u7406\uff1a$\\mathcal{O}(n \\log n)$\n\n\u67e5\u8be2\uff1a$\\mathcal{O}(\\log n)$\n\n\u4fee\u6539\uff1a$\\mathcal{O}(\\log n)$\n\n\u603b\u590d\u6742\u5ea6\uff1a$\\mathcal{O}((n+m)\\log n)$\n\n\u5e38\u6570\u7565\u5fae\u6bd4\u7ebf\u6bb5\u6811\u5c0f\u4e00\u4e9b\u3002\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a$\\mathcal{O}(n\\log n)$\n\n\u7531\u4e8e\u8fd9\u662f\u4e00\u68f5 **\u53f6\u5b50\u8282\u70b9\u6df1\u5ea6\u76f8\u7b49** \u7684\u4e8c\u53c9\u6811\uff0c\u6240\u4ee5\u7a7a\u95f4\u6bd4\u7ebf\u6bb5\u6811\u5927\u4e00\u70b9\uff0c\u4e0d\u8fc7\u770b\u5728\u601d\u60f3\u5bb9\u6613\u7406\u89e3\u548c\u8fc7\u6b64\u9898\u7ef0\u7ef0\u6709\u4f59\u7684\u9762\u4e0a\uff0c\u5c31\u539f\u8c05\u5b83\u5427\uff01\n\n&nbsp;\n## Part 5 01-Trie \u90e8\u5206\n\u4e00\u822c\u5730\uff0c01-Trie \u6709\u5982\u4e0b\u51e0\u4e2a\u90e8\u5206\uff1a\n```\nstruct Trie { /*...*/ };\ninsert() { /*...*/ };\nquery() { /*...*/ };\n```\n\u4ee3\u7801\u5b9e\u73b0\u6bd4\u8f83\u7b80\u5355\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4e86\u534a\u4f2a\u4ee3\u7801\uff1a\n```\n#define next Trie[point].child[rebin(u, k)]\n// rebin \u5373\u524d\u9762\u7684\u51fd\u6570\uff0ck \u6307\u53d6 rebin(u) \u7684\u7b2c k \u4f4d\u7684\u503c\nstruct Trie { child[2], value, size }\ninsert(depth, point, v, u) // v \u4e3a\u8981\u63d2\u5165\u7684\u503c\uff0c\u5373 ai\uff1bu \u4e3a\u8981\u63d2\u5165\u7684\u6570\uff0c\u5373 i\n{\n\tif depth > logn: return\n\t++Trie[point].size\n\tTrie[point].value += v\n\tif next ! exist: AddPoint // !exist \u6307\u8fd9\u4e2a\u8282\u70b9\u4e0d\u5b58\u5728\n\tinsert(depth + 1, point, v, u)\n}\nquery(depth, point, x, y) // x, y \u4e0e\u9898\u4e2d\u63cf\u8ff0\u4e00\u6837\n{\n\tif depth == x: return Trie[point].value\n\treturn query(depth + 1, next, x, y)\n}\n```\n\u57fa\u672c\u4e0e 01-Trie \u6a21\u677f\u6ca1\u6709\u5f88\u5927\u7684\u5dee\u5f02\u3002\n\n&nbsp;\n## Part 6 \u7ebf\u6bb5\u6811\u90e8\u5206\n\u4e00\u822c\u5730\uff0c\u7ebf\u6bb5\u6811\u6709\u5982\u4e0b\u51e0\u4e2a\u90e8\u5206\uff1a\n```\nstruct Seg { /*...*/ };\nbuild() { /*...*/ };\nspread() { /*...*/ };\nchange() { /*...*/ };\nquery() { /*...*/ };\n```\n```pushup()``` \u53ef\u6709\u53ef\u65e0\uff0c```spread()``` \u6709\u65f6\u5019\u53eb\u505a ```pushdown()```\n\n```build()``` \u5c31\u662f\u524d\u9762\u7684 ```insert()```\n\n\u7531\u4e8e\u6bcf\u6b21\u4fee\u6539\u4ec5\u4fee\u6539 **\u4e00\u4e2a\u8282\u70b9\u7684\u7956\u5148\u548c\u5176\u6240\u6709\u5b69\u5b50**\uff0c\u6240\u4ee5 ```spread()``` \u53ef\u4ee5\u76f4\u63a5\u653e\u5165 ```query()```\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u589e\u52a0\u4e09\u884c\u4ee3\u7801\uff08\u524d\u9762\u7684\u5b8f\u4e0d\u7b97\uff0c```Seg``` \u548c ```Trie``` \u53ef\u4ee5\u5f53\u6210\u540c\u4e00\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4\uff09\uff1a\n```\nstruct Seg { child[2], father, tag, value, size}\n#define l Seg[Point].child[0]\n#define r Seg[Point].child[1]\n\nif Seg[point].tag:\n\tif l exist: Seg[l].tag += Seg[point].tag, Seg[l].value += Seg[point].tag * Seg[l].size\n\tif r exist: Seg[r].tag += Seg[point].tag, Seg[r].value += Seg[point].tag * Seg[r].size\n```\n```change()``` \u7684\u601d\u60f3\u5927\u6982\u662f\u5148\u627e\u5230\u8981\u4fee\u6539\u7684\u5b50\u8282\u70b9\uff0c\u4fee\u6539\u8be5\u5b50\u8282\u70b9\u7684 LazyTag\uff0c\u7136\u540e\u4f9d\u6b21\u5411\u4e0a\u4fee\u6539\u7956\u5148\u7684\u503c\u3002\u5982\u679c\u8be5\u8282\u70b9\u4e0d\u5b58\u5728\uff0c\u4e0d\u4fee\u6539\u3002\n```\nadd(point, v) \n{ \n\tSeg[point].value += v\n\tif Seg[point].father exist: add(Seg[point].father, v)\n}\nchange(depth, point, x, y, z)\n{\n\tif depth == x:\n\t\tadd(point, Seg[point].size * z)\n\t\tSeg[point].tag += z\n\t\treturn\n\tif next ! exist: return \n\tchange(depth + 1, next, x, y, z)\n}\n```\n&nbsp;\n## Part 7 \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <vector>\nusing namespace std;\nstruct LazyTrie {\n\tint c[2], f;\n\tlong long s, v, t;\n\tLazyTrie() { c[0] = c[1] = s = v = f = t = 0; }\n} E; vector<LazyTrie> T;\nint n, m, y; \nlong long opt, LastAnswer, x, z;\n#define l T[p].c[0]\n#define r T[p].c[1]\n#define Next T[p].c[((1 << depth) & y) > 0]\ninline void insert(int p, int depth)\n{\n\tif (depth > 20) return; // logn < 20\n\tT[p].v += x; ++T[p].s;\n\tif (!Next) \n\t{\n\t\tNext = T.size();\n\t\tT.push_back(E); T.back().f = p;\n\t}\n\tinsert(Next, depth + 1); \n}\ninline void add(int p, long long u) { T[p].v += u; if (p) add(T[p].f, u); }\ninline void change(int p, int depth)\n{\n\tif (depth == x) { add(p, T[p].s * z); T[p].t += z; return; }\n\tif (!Next) return;\n\tchange(Next, depth + 1);\n}\ninline long long query(int p, int depth)\n{\n\tif (depth == x) return T[p].v;\n\tif (!Next) return 0;\n\tif (T[p].t) \n\t{\n\t\tif (l) T[l].t += T[p].t, T[l].v += T[p].t * T[l].s;\n\t\tif (r) T[r].t += T[p].t, T[r].v += T[p].t * T[r].s;\n\t\tT[p].t = 0;\n\t}\n\treturn query(Next, depth + 1);\n}\nint main()\n{\n\tscanf(\"%d%d\", &n, &m); T.push_back(E); \n\tfor (y = 1; y <= n; ++y) scanf(\"%lld\", &x), insert(0, 0);\n\twhile (m--)\n\t{\n\t\tscanf(\"%lld%lld%d\", &opt, &x, &y);\n\t\topt = ((opt + LastAnswer) & 1) + 1;\n\t\tif (opt & 1) { scanf(\"%lld\", &z); change(0, 0); } \n\t\telse { printf(\"%lld\\n\", LastAnswer = query(0, 0)); }\n\t} \n\treturn 0;\n}\n```\n\u4e00\u4e9b\u6ce8\u610f\u70b9\uff1a\n\n\u5982\u679c\u6211\u4eec\u7528 Part 5 \u6765\u7406\u89e3\u63d2\u5165\u8fc7\u7a0b\uff0c\u5c31\u662f\uff1a\n```for(i = 1; i <= n; ++i) insert(depth = point = 1, v = input(), u = i)```\n\n\u8fd9\u4e00\u53e5\u5b8f ```#define Next T[p].c[((1 << depth) & y) > 0]``` \u4e00\u5b9a\u8981\u52a0\u4e0a ```> 0```\uff0c\u56e0\u4e3a ```(1 << depth) & y``` \u662f\u6211\u4eec\u53d6 ```rebin(y, depth)``` \u7684\u4f4d\u8fd0\u7b97\u5199\u6cd5\uff0c\u5f88\u663e\u7136\u5176\u503c\u5927\u4e8e 0\uff0c\u6211\u4eec\u8ba4\u4e3a\uff1a\n$$rebin(y,\\ depth)=\n\\begin{cases}\n0,\\ (2^{depth} \\ \\& \\  y) = 0\\\\\n1,\\ (2^{depth} \\ \\& \\  y) > 0\n\\end{cases}\n$$\n\u5982\u679c\u4e0d\u52a0 ```> 0```\uff0c\u53ef\u80fd\u4f1a\u6570\u7ec4\u8d8a\u754c\u3002\n\n\u6709\u4e00\u4e9b\u53d8\u91cf\u8981\u5f00 ```long long```\uff0c\u5f53\u7136\u53ef\u4ee5\u5b8f\u5b9a\u4e49\u3002\n\n\u4e0d\u4f1a ```vector``` \u7684\u7528\u7ed3\u6784\u4f53\u6570\u7ec4\u5c31\u53ef\u4ee5\u4e86\u3002\n\n&nbsp;\n\n## Part 8 \u7ecf\u9a8c\u603b\u7ed3\n\n\u603b\u7ed3\u4e00\u4e0b\u6211\u4eec\u505a\u8fd9\u9053\u9898\u7684\u8fc7\u7a0b\uff1a\u539f\u9898\u662f\u4e00\u9053 **\u975e\u8fde\u7eed\u96c6\u5408** \u7684\u67e5\u8be2\u4fee\u6539\u95ee\u9898\uff0c\u4e8e\u662f\u6211\u4eec\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86 **\u6811\u4e0a\u5355\u70b9\u4fee\u6539** \uff08\u53ca\u5176\u7956\u5148\u548c\u6240\u6709\u5b69\u5b50\uff09\u95ee\u9898\uff0c\u8fd9\u662f\u6700\u91cd\u8981\u7684\u4e00\u6b65\u3002\n\n\u7531\u4e8e\u533a\u95f4\u662f 01 \u5206\u7684\uff0c\u6211\u4eec\u60f3\u5230 01-Trie\uff0c\u5e76\u7528 LazyTag \u5c06\u6bcf\u6b21\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u81f3 $\\mathcal{O}(\\log n)$\u3002\n\n\u5728\u8fd9\u9053\u9898\u4e2d\uff0c\u6211\u4eec\u7ed3\u5408\u7ebf\u6bb5\u6811\u548c 01-Trie \u521b\u9020\u4e86\u4e00\u79cd\u65b0\u7684\u4e8c\u53c9\u6811\u3002LazyTrie \u53ef\u4ee5\u89e3\u51b3\u51e0\u4e4e\u6240\u6709\u7c7b\u4f3c\u7684\u6811\u4e0a\u5355\u70b9\u4fee\u6539\u95ee\u9898\uff08\u591a\u53c9\u6811\u4e5f\u884c\uff09\u3002\u53ea\u53ef\u60dc\u6ca1\u6709\u4ec0\u4e48\u7c7b\u4f3c\u7684\u9898\u4e86\u3002\n\n\u6240\u4ee5\u5927\u5bb6\u4e00\u5b9a\u8981\u6df1\u523b\u7406\u89e3\u8fd9\u9053\u9898\u7684\u505a\u6cd5\uff0c\u4e0d\u8981\u6284\u88ad\uff0c\u8fd9\u662f\u4e00\u9053\u4e0d\u53ef\u591a\u5f97\u7684\u597d\u9898\uff0c\u5e0c\u671b\u5927\u5bb6\u80fd\u638c\u63e1\u3002",
        "postTime": 1648537488,
        "uid": 282929,
        "name": "\u67f3\u6613\u8fb0",
        "ccfLevel": 0,
        "title": "P6587 \u9898\u89e3 LazyTrie"
    },
    {
        "content": "[$\\Large\\texttt{P6587}$](https://www.luogu.com.cn/problem/P6587)\n\n[$\\small\\texttt{In my cnBlogs}$](https://www.cnblogs.com/RedreamMer/p/13925197.html)\n\n\u601d\u7ef4\u9898 + \u677f\u5b50\u9898\n\n\u8fd9\u9053\u9898\u76ee\u86ee\u6709\u8da3\u7684\uff0c\u4f46\u5751\u6709\u70b9\u591a\uff0c\u5728\u4e0b\u9762\u4f1a\u9648\u8ff0\u3002\n\n## \u9898\u610f\n\n\u4e0d\u505a\u8d58\u8ff0\u3002\n\n\u6ce8\u610f\u51fa\u9898\u4eba\u5341\u5206\u6076\u5fc3\u5730\u6ca1\u7ed9 $x$,$y$,$n$ \u7684\u5173\u7cfb\uff0c\u8bf7\u5404\u4f4d\u6ce8\u610f\u8fd9\u70b9\u3002\n\n## \u601d\u8def\n\n\u770b\u4f3c\u5f88\u96be\u7ef4\u62a4\uff0c\u533a\u95f4\u64cd\u4f5c\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5229\u7528 $\\texttt{trie}$ \u7684\u7279\u6027\u6765\u9020\u4e00\u68f5\u4e0d\u540c\u5bfb\u5e38\u7684\u7ebf\u6bb5\u6811\u3002\n\n\u5bf9\u4e8e\u5e8f\u5217\u4e0a\u7684\u6570\u7684\u4f4d\u7f6e $i$ \uff0c\u6a21 $2^x$ \u540e\uff0c\u7559\u4e0b $x$ \u4f4d\u540e\u7f00\uff0c\u5bf9\u6bd4\u6240\u6709 $i$ \u6a21$2^{x-1}$ \u540e\u7559\u4e0b\u7684\u540e\u7f00\uff0c\u53ea\u662f\u589e\u52a0\u4e86\u7b2c $x$ \u4f4d\uff08 $0$ \u6216 $1$ \uff09\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u628a\u5e8f\u5217\u6309\u8fd9\u6837\u6784\u9020\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u7531\u7236\u4eb2\u8282\u70b9\u5ef6\u4f38\u51fa\u6765\uff0c\u4e24\u4e2a\u5b50\u8282\u70b9\u7684\u540e\u7f00\u76f8\u540c\uff0c\u552f\u4e00\u533a\u522b\u6700\u9ad8\u4f4d\u662f $0$ \u6216 $1$\u3002\n\n\uff1f\uff1f\uff1f\u8fd9\u4e0d\u5c31\u662f $\\texttt{trie}$ \u5417 \uff1f\uff1f\uff1f\n\n\u6240\u4ee5\uff0c\u8fd9\u9053\u9898\u76ee\u7684\u672c\u610f\u5c31\u662f\u8ba9\u4f60\u5efa\u4e00\u68f5**\u652f\u6301\u533a\u95f4\u4fee\u6539\u548c\u67e5\u8be2**\u7684  $\\texttt{trie}$ \uff0c\u6309\u7167\u7ebf\u6bb5\u68111\u7684\u677f\u5b50\u505a\u5c31\u597d\u4e86\u3002\n\n\u95ee\u9898\u89e3\u51b3\u3002\n\n---\n\n\u7136\u540e\u6211WA\u4e8630+\u53d1\n\n\u4e00\u5b9a\u8981\u6ce8\u610f\u4e09\u70b9\uff1a\n\n+ \u8bb0\u5f97\u5148\u5c06 $y$ \u5bf9 $x$ \u53d6\u6a21\u518d\u505a\n\n+ $y \\mod 2^x > n$ \u6b64\u65f6\u4e0d\u505a\u4fee\u6539\uff0c\u5e76\u4e14\u8be2\u95ee\u8fd4\u56de0\n\n+ $y \\le n$ \u5e76\u4e14 $2^x > n$ \u6b64\u65f6\u8fd4\u56de $a_y$\n\n## \u4ee3\u7801\n\n\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u5728\u4ee3\u7801\u4e2d\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define ls n << 1\n#define rs n << 1 | 1\n#define int long long\nconst int N = 5e7;\ninline int read()\n{\n    register int s = 0;\n    register bool neg = 0;\n    register char c = getchar();\n    for (; c < '0' || c > '9'; c = getchar())\n        neg |= (c == '-');\n    for (; c >= '0' && c <= '9'; s = s * 10 + (c ^ 48), c = getchar())\n        ;\n    return (neg ? -s : s);\n}\n\nint a,b,s[N+10],sum[N+10],lazy[N+10],t[N+10];\n\ninline void up(int n) {\n    sum[n]=sum[ls]+sum[rs];\n    t[n]=t[ls]+t[rs];//\u533a\u95f4\u957f\u5ea6\n}\n\ninline void down(int n) {\n    if(!lazy[n]) return;\n    if(t[ls]) sum[ls]+=t[ls]*lazy[n];//\u6ce8\u610f\u8981\u5224\u65ad\u513f\u5b50\u8282\u70b9\u662f\u5426\u5b58\u5728\n    if(t[rs]) sum[rs]+=t[rs]*lazy[n];\n    if(t[ls]) lazy[ls]+=lazy[n];\n    if(t[rs]) lazy[rs]+=lazy[n];\n    lazy[n]=0;\n}\n\ninline void insert(int n,int k,int p,int q) {\n    if(!q) {\n        t[n]=1;\n        sum[n]+=p;\n        return;\n    }\n    if(k&1ll) insert(rs,k>>1ll,p,q-1);\n    else insert(ls,k>>1ll,p,q-1);\n    up(n);\n}\n\ninline void change(int n,int k,int p,int q) {\n    if(!q) {//\u6ce8\u610f\u8fd9\u91cc\uff0creturn\u7684\u5173\u952e\u662fq\u4e3a0\uff0c\u800c\u4e0d\u662fk\u4e3a0\uff0c\u56e0\u4e3a\u524d\u5bfc0\u662f\u6709\u610f\u4e49\u7684\n        sum[n]+=p*t[n];\n        lazy[n]+=p;\n        return;\n    }\n    down(n);\n    if(k&1ll) change(rs,k>>1ll,p,q-1);\n    else change(ls,k>>1ll,p,q-1);\n    up(n);\n}\n\ninline int query(int n,int k,int q) {\n    if(!q) return sum[n];\n    down(n);\n    if(k&1ll) return query(rs,k>>1ll,q-1);\n    else return query(ls,k>>1ll,q-1);\n}\n\nsigned main()\n{\n    // freopen(\"in1.in\", \"r\", stdin);\n    a=read();\n    b=read();\n    int mx=ceil(log2(a));\n    for(int i=1;i<=a;i++) s[i]=read(),insert(1,i,s[i],mx);\n    int x,y,z,lst=0,opt,cnt=0;\n    for(int i=1;i<=b;i++) {\n        opt=(read()+lst)%2+1;\n        if(opt==1) {\n            x=read();\n            y=read();\n            z=read();\n            y%=(1ll<<x);\n            if(x<=mx) change(1,y,z,x);\n            else if(y<=a) change(1,y,z,mx);\n        }\n        else {\n            x=read();\n            y=read();\n            y%=(1ll<<x);\n            if(x<=mx) printf(\"%lld\\n\",lst=query(1,y,x));\n            else if(y<=a) printf(\"%lld\\n\",lst=query(1,y,mx));\n            else printf(\"%lld\\n\",lst=0);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1604462589,
        "uid": 184549,
        "name": "RedreamMer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6587 \u3010\u8d85\u8d85\u7684\u5e8f\u5217 \u52a0\u5f3a\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/dream1024/p/14021790.html)\n\n# \u9898\u76ee\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P6587)\n\n# \u601d\u8def\n\n\u4f5c\u4e3a\u4e00\u9053\u84dd\u9898,\u8fd9\u9898\u5e76\u4e0d\u96be\u60f3,\u5c31\u662f\u7ec6\u8282\u6709\u70b9\u591a\n\n\n\n\u771f\u7684\u633a\u597d\u7684\u4e00\u9053\u9898,\u628a\u7ebf\u6bb5\u6811\u548ctrie\u5f88\u597d\u5730\u878d\u5408\u5230\u4e00\u8d77\n\n\u4ee5\u6837\u4f8b\u4e3a\u4f8b,\u5efa\u4e00\u68f5\u5982\u4e0b\u768401trie,\u5176\u4e2d,\u7ea2\u8272\u6570\u5b57\u5c31\u662f\u8f93\u5165\u8fdb\u6765\u7684a,\u6839\u5230\u8be5\u6570\u5b57\u7684\u8def\u5f84\u5f62\u6210\u7684\u6570\u5b57\u5c31\u662f\u8be5\u6570\u5b57\u4e0b\u6807\u7684\u4e8c\u8fdb\u5236\u8868\u793a(\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d)\n\n\u4f8b\u5982,4\u8fd9\u4e2a\u6570\u5b57:\u6839\u52304\u7684\u8def\u5f84\u4e3a0->0->1,4\u7684\u4e0b\u6807\u4e3a(100)2(\u8fd9\u4e2a\u8868\u793a\u4e8c\u8fdb\u5236),\u53734\n\n![](https://img2020.cnblogs.com/blog/2206241/202011/2206241-20201122215833598-205560425.png)\n\n\u89c2\u5bdf\u6bcf\u4e00\u4e2a\u8be2\u95ee,\n\n>  `2 x y`\uff1a\u8be2\u95ee\u6240\u6709 ai \u7684\u548c\uff0c\u5176\u4e2d i\u2261y(mod 2^x)\u3002\n\n**\u6211\u4eec\u76f4\u63a5\u5148\u4ee4y%=2^x**\n\n\u4ee5`x=2,y=1`\u4e3a\u4f8b,\u6c42\u7684\u5c31\u662f\u6240\u6709\u7684`a[i]`\u7684\u548c,\u5176\u4e2di\u6ee1\u8db3\u4e8c\u8fdb\u5236\u4e0b\u6700\u540ex\u4f4d\u7b49\u4e8ey,\u5373\u6700\u540e\u4e24\u4f4d\u4e3a01,\u8fd8\u662f\u770b\u56fe\n\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/3sdpzy2a.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u88ab\u5708\u8d77\u6765\u7684\u8fd9\u68f5\u5b50\u6811\u7684\u6240\u6709\u6570\u5b57\u80af\u5b9a\u90fd\u662f\u8981\u8ba1\u7b97\u7684(\u56e0\u4e3a\u5bf9\u5e94\u7684i\u5728\u4e8c\u8fdb\u5236\u4e0b\u5fc5\u4ee501\u7ed3\u5c3e),\u6211\u4eec\u76f4\u63a5\u7528\u81ea\u5e95\u5411\u4e0a\u7684\u524d\u7f00\u548c\u7ef4\u62a4\u5373\u53ef\n\n\u7279\u522b\u5730,\"1\"\u8fd9\u4e2a\u6570\u5b57\u4e5f\u8981\u8ba1\u7b97,\u8fd9\u9700\u8981\u7279\u5224\u4e00\u4e0b,\u8fd9\u5c31\u662f\u8fd9\u9053\u9898\u9ebb\u70e6\u7684\u5730\u65b9\n\n\u4fee\u6539\u64cd\u4f5c\u540c\u7406\n\n\u4e0d\u89c9\u5f97\u8fd9\u5f88\u50cf\u7ebf\u6bb5\u6811\u4e86\u5417?\u6bcf\u4e00\u6b21\u7684\u64cd\u4f5c\u90fd\u662f\u5bf9\u4e00\u6574\u4e2a\u5b50\u6811\u8fdb\u884c\u7684,\u4e0d\u540c\u7684\u662f:\u6709\u65f6\u5019\u8fd8\u4f1a\u5bf9\u6839\u5230\u8fd9\u68f5\u5b50\u6811\u7684\u8def\u5f84\u4e0a\u7684\u67d0\u4e9b\u70b9\u64cd\u4f5c,\u4f46\u662f\u8fd9\u4e0d\u5f71\u54cd\u5927\u5c40\n\n\u6240\u4ee5,\u6211\u4eec\u8003\u8651\u7528\u61d2\u6807\u8bb0\u4f18\u5316,\u505a\u6cd5\u4e0e\u7ebf\u6bb5\u6811\u7c7b\u4f3c,\u8fd9\u91cc\u4e0d\u7ec6\u8bb2,\u5177\u4f53\u770b\u4ee3\u7801\n\n\n\n\u53e6\u5916,\u503c\u5f97\u6ce8\u610f\u7684\u662f:\u6bcf\u4e00\u4e2a\u7ea2\u8272\u7684\u6570\u5b57\u90fd\u662f\u5728\u6811\u7684\"1\"\u7ed3\u70b9\u4e0a\u7684,\u4e5f\u5c31\u662f\u8bf4,\u6bcf\u4e00\u6b21\u4fee\u6539\u6216\u67e5\u8be2\u6700\u591a\u6d89\u53ca\u5230\u4e00\u4e2a\u76ee\u6807\u5b50\u6811\u5916\u7684\u7ed3\u70b9(\u6309\u7167\u4e0a\u9762`x=2,y=1`\u7684\u4f8b\u5b50,\u76ee\u6807\u5b50\u6811\u5c31\u662f\u56fe\u4e2d\u88ab\u5708\u8d77\u6765\u7684\u5b50\u6811),\u8fd9\u91cc\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b,\u4e0d\u7406\u89e3\u4e5f\u6ca1\u5173\u7cfb,\u8fd9\u4e2a\u4e0d\u662f\u5f88\u91cd\u8981,\u6211\u4e5f\u662fAC\u4e4b\u540e\u624d\u610f\u8bc6\u5230\u7684,\u4f46\u662f\u6709\u52a9\u4e8e\u52a0\u6df1\u5bf9\u8fd9\u9053\u9898\u7684\u7406\u89e3\u4ee5\u53ca\u7b80\u5316\u4ee3\u7801\n\n\n\n**\u6700\u540e,\u4e00\u5b9a\u8981\u5f00long long,\u5426\u52190\u5206(\u4eb2\u6d4b)**\n\n# \u4ee3\u7801(\u9644\u5bf9\u62cd\u7a0b\u5e8f)\n\n**\u6ce8\u610f:\u4f7f\u7528\u5bf9\u62cd\u7684\u65f6\u5019\u9700\u8981\u5c06\u5f3a\u5236\u5728\u7ebf\u5173\u6389,\u89c1\u4e0b:**\n\n```cpp\n\t\top = read();\n\t\top = (op + lastans) % 2 + 1;\n```\n\n\u53d8\u4e3a:\n\n```cpp\n\t\top = read();\n//\t\top = (op + lastans) % 2 + 1;\n```\n\n**\u53e6\u5916,std\u7a0b\u5e8f\u53ef\u4ee5\u627e\u4e00\u4e2a\u6807\u7a0b,\u4f46\u5efa\u8bae\u81ea\u5df1\u5199\u66b4\u529b(\u6bd5\u7adf\u6bd4\u8d5b\u6ca1\u6709\u6807\u7a0b)**\n\n## \u6211\u7684AC\u4ee3\u7801(tested.cpp)\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#define nn 1000010\n#define ll long long\nusing namespace std;\nint read() {\n\tint re = 0;\n\tbool sig = false;\n\tchar c = getchar();\n\twhile(c < '0' || c > '9') {\n\t\tif(c == '-')\n\t\t\tsig = true;\n\t\tc = getchar(); \n\t}\n\twhile(c >= '0' && c <= '9')\n\t\tre = (re << 1) + (re << 3) + c - '0',\n\t\tc = getchar();\n\treturn sig ? -re : re;\n}\nint trie[nn][3] , num[nn];\nll a[nn] , tag[nn] , dat[nn];\nint n , m;\nvoid build() {\n\tint top = 1;\n\tfor(int i = 1 ; i <= n ; i++) {\n\t\tint tmp = i;\n\t\tint p = 1;\n\t\twhile(tmp != 0) {\n\t\t\tif(trie[p][tmp & 1] == 0)\n\t\t\t\ttrie[p][tmp & 1] = ++top;\n\t\t\tp = trie[p][tmp & 1];\n\t\t\ttmp >>= 1;\n\t\t}\n\t\ta[p] = dat[p] = read();\n\t\tnum[p]++;\n\t}\n\t\n}\nvoid dfs(int p) {\n\tif(p == 0)return;\n\tdfs(trie[p][0]);\n\tdfs(trie[p][1]);\n\tdat[p] += dat[trie[p][0]] + dat[trie[p][1]];\n\tnum[p] += num[trie[p][0]] + num[trie[p][1]];\n\ttag[p] = 0;\n}\ninline void spread(int p) {//\u61d2\u6807\u8bb0\u4e0b\u4f20\n\tif(p == 0) {\n\t\ttag[p] = 0;\n\t\treturn;\n\t}\n\tif(tag[p] != 0) {\n\t\ttag[trie[p][0]] += tag[p];\n\t\tdat[trie[p][0]] += num[trie[p][0]] * tag[p];\n\t\tif(a[trie[p][0]] != -1)\n\t\t\ta[trie[p][0]] += tag[p];\n\t\t\n\t\ttag[trie[p][1]] += tag[p];\n\t\tdat[trie[p][1]] += num[trie[p][1]] * tag[p];\n\t\tif(a[trie[p][1]] != -1)\n\t\t\ta[trie[p][1]] += tag[p];\n\t}\n\ttag[p] = 0;\n}\nvoid change(int x , int y , ll v , int p) {//\u4fee\u6539,\u4f7f\u7528\u9012\u5f52\u7684\u65b9\u5f0f,\u6709\u52a9\u4e8e\u66f4\u65b0dat\u503c\n\tif(x == 0) {\n\t\tif(a[p] != -1)\n\t\t\ta[p] += v;\n\t\tdat[p] += v * num[p];\n\t\ttag[p] += v;\n\t\treturn;\n\t}\n\t\n\tspread(p);\n\tchange(x - 1 , y >> 1 , v , trie[p][y & 1]);\n\tif(y == 0 && a[p] != -1) {\n\t\ta[p] += v;\n\t}\n\tdat[p] = dat[trie[p][0]] + dat[trie[p][1]];\n\tif(a[p] != -1)\n\t\tdat[p] += a[p];\n}\nint query() {//\u67e5\u8be2\n\tint x = read() , y = read();\n\tll res = 0;\n\tint p = 1;\n\ty %= (1 << x);\n\tfor(int i = 1 ; i <= x ; i++) {\n\t\tspread(p);\n\t\tif(y == 0)\n\t\t\tres += dat[p] - dat[trie[p][0]] - dat[trie[p][1]];\n\t\tp = trie[p][y & 1];\n\t\ty >>= 1;\n\t}\n\tres += dat[p];\n\tprintf(\"%lld\\n\" , res);\n\treturn res;\n}\nint main() {\n\tmemset(a , -1 , sizeof(a));//\u503c\u4e3a-1\u4ee3\u8868\u8be5\u7ed3\u70b9\u6ca1\u6709\u6570\u5b57\n\tn = read();\tm = read();\n\tbuild();\n\tdfs(1);\n\tll lastans = 0;\n\tfor(int i = 1 ; i <= m ; i++) {\n\t\tint op;\n\t\top = read();\n\t\top = (op + lastans) % 2 + 1;\n\t\tif(op == 1) {\n\t\t\tint x , y , v;\n\t\t\tx = read();\ty = read();\tv = read();\n\t\t\tchange(x , y % (1 << x) , (ll)v , 1);\n\t\t}\n\t\telse\n\t\t\tlastans = query();\n\t\t\t\n\t}\n\treturn 0;\n} \n```\n\n\n\n## \u968f\u673a\u6570\u636e\u751f\u6210(random.cpp)\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint random(int r , int l = 1) {\n\tif(l == r)return l;\n\treturn (long long)rand() * rand() % (r - l) + l;\n}\nint main() {\n\tsrand((unsigned) time(0));\n\t\n\tint n = 100 , m = 100;\n\tprintf(\"%d %d\\n\" , n , m);\n\tfor(int i = 1 ; i <= n ; i++)\n\t\tprintf(\"%d \" , random(20));\n\tputchar('\\n');\n\tfor(int i = 1 ; i <= m ; i++) {\n\t\tint op = rand() % 2 + 1;\n\t\tint tmp = log(n) / log(2);\n\t\tint x = random(tmp * 3 / 2 , tmp / 2) , y = random(1024) , v = random(1000);\n\t\tprintf(\"%d \" , op);\n\t\tif(op == 1)\n\t\t\tprintf(\"%d %d %d\\n\" , x , y , v);\n\t\telse\n\t\t\tprintf(\"%d %d\\n\" , x , y);\n\t}\n\treturn 0;\n}\n```\n\n## \u5bf9\u62cd\u63a7\u5236(compare.cpp)\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n\twhile(true) {\n\t\tsystem(\"random.exe > input.txt\");\n\t\tputs(\"random\");\n\t\t\n\t\tsystem(\"tested.exe < input.txt > output1.txt\");\n\t\tputs(\"tested\");\n\t\t\n\t\tsystem(\"std.exe < input.txt > output2.txt\");\n\t\tputs(\"std\");\n\t\t\n\t\tif(system(\"fc output1.txt output2.txt\")) {\n\t\t\tcout << \"WA\";\n\t\t\tsystem(\"start input.txt\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1606103313,
        "uid": 299699,
        "name": "doer_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6587 \u3010\u8d85\u8d85\u7684\u5e8f\u5217 \u52a0\u5f3a\u3011"
    },
    {
        "content": "$\\color{blue}{\\texttt{[Analysis]}}$\n\n\u663e\u7136\uff0c\u9664\u4e86\u64cd\u4f5c\u5e8f\u5217\u5e76\u4e0d\u8fde\u7eed\u4e4b\u5916\uff0c\u8fd9\u9053\u9898\u5c31**\u7ebf\u6bb5\u6811**\u7684\u6a21\u677f\u9898\u3002\n\n\u5728\u7b14\u8005\u6709\u9650\u7684\u77e5\u8bc6\u50a8\u5907\u4e2d\uff0c\u6ca1\u6709\u627e\u5230\u7b2c\u4e8c\u79cd\u6570\u636e\u7ed3\u6784\u80fd\u76f4\u63a5\u89e3\u51b3\u8fd9\u9053\u9898\u76ee\u3002\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u8003\u8651\u7ebf\u6bb5\u6811\u3002\n\n\u95ee\u9898\u7684\u7126\u70b9\uff1a**\u5982\u4f55\u4f7f\u9700\u8981\u64cd\u4f5c\u7684\u5e8f\u5217\u53d8\u5f97\u8fde\u7eed**\u3002\n\n\u56e0\u4e3a\u6a21\u6570\u90fd\u662f $2$ \u7684\u6b21\u5e42\uff0c\u6211\u4eec\u731c\u60f3\u8fd9\u9053\u9898\u7684\u89e3\u6cd5\u5e94\u8be5\u548c**\u4e8c\u8fdb\u5236**\u6709\u5173\u3002\n\n\u663e\u7136\uff0c\u5982\u679c $u \\equiv v \\pmod {2^{x}}$\uff0c\u90a3\u4e48 $u$ \u548c $v$ \u7684\u4e8c\u8fdb\u5236\u7684**\u6700\u4f4e** $x$ \u4f4d\u5e94\u8be5**\u5b8c\u5168\u76f8\u540c**\u3002\n\n\u6539\u9020\u4e00\u4e0b\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\uff0c\u5206\u522b\u8d4b\u4e88\u6bcf\u4e2a\u70b9\u5411\u5b83\u7684\u4e24\u4e2a\u513f\u5b50\u7684\u4e24\u6761\u8fb9 $0$ \u6216 $1$ \u7684\u8fb9\u6743\u3002\u8fd9\u6837\uff0c\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u5230\u8be5\u8282\u70b9\uff0c\u7ecf\u8fc7\u7684\u6240\u6709\u8fb9\u7684\u8fb9\u6743\u5012\u5e8f\u76f8\u8fde\u63a5\uff0c\u5c31\u6807\u8bb0\u4e8c\u8fdb\u5236\u7684\u6700\u4f4e\u82e5\u5e72\u4f4d\u3002\n\n\u8fd9\u53e5\u8bdd\u4e00\u5b9a\u662f\u975e\u5e38\u7684\u4e0d\u597d\u7406\u89e3\uff0c\u6211\u4eec\u6765\u770b\u4e2a\u56fe\uff1a\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/01ea0469b6d2477ab4d0a8be5b2829ed.png#pic_center)\n\n\n> \u5bf9\u4e8e\u56fe\u4e2d\u6807\u53f7\u4e3a $1$ \u7684\u8282\u70b9\uff1a\u4ece\u6839\u8282\u70b9\u5230\u5b83\u6240\u6709\u8fb9\u4e0a\u7684\u8fb9\u6743\u5012\u5e8f\u8fde\u63a5\u53ef\u4ee5\u5f97\u5230 $1$\uff0c\u56e0\u6b64\u8be5\u8282\u70b9\u4fdd\u5b58\u6240\u6709\u4e8c\u8fdb\u5236**\u6700\u4f4e**\u4e00\u4f4d\u4e3a $1$ \u7684\u8282\u70b9\u7684\u4fe1\u606f\uff08\u5373\u70b9\u6743\u548c\uff09\uff0c\u5373\u5728 $a$ \u6570\u7ec4\u4e2d\u4e0b\u6807\u4e3a $1,3,5,7,\\cdots$ \u7684\u8282\u70b9\u7684\u4fe1\u606f\u3002\n> \n> \u5bf9\u4e8e\u56fe\u4e2d\u6807\u53f7\u4e3a $2$ \u7684\u8282\u70b9\uff1a\u4ece\u6839\u8282\u70b9\u5230\u5b83\u6240\u6709\u8fb9\u4e0a\u7684\u8fb9\u6743\u5012\u5e8f\u8fde\u63a5\u53ef\u4ee5\u5f97\u5230 $100$\uff0c\u56e0\u6b64\u8be5\u8282\u70b9\u4fdd\u5b58\u6240\u6709\u4e8c\u8fdb\u5236**\u6700\u4f4e**\u4e09\u4f4d\u4e3a $100$ \u7684\u8282\u70b9\u7684\u4fe1\u606f\uff08\u5373\u70b9\u6743\u548c\uff09\uff0c\u5373\u5728 $a$ \u6570\u7ec4\u4e2d\u4e0b\u6807\u4e3a $4,12,20,28,\\cdots$ \u7684\u8282\u70b9\u7684\u4fe1\u606f\u3002\n> \n> \u5bf9\u4e8e\u56fe\u4e2d\u6807\u53f7\u4e3a $3$ \u7684\u8282\u70b9\uff1a\u4ece\u6839\u8282\u70b9\u5230\u5b83\u6240\u6709\u8fb9\u4e0a\u7684\u8fb9\u6743\u5012\u5e8f\u8fde\u63a5\u53ef\u4ee5\u5f97\u5230 $011$\uff0c\u56e0\u6b64\u8be5\u8282\u70b9\u4fdd\u5b58\u6240\u6709\u4e8c\u8fdb\u5236**\u6700\u4f4e**\u4e09\u4f4d\u4e3a $011$ \u7684\u8282\u70b9\u7684\u4fe1\u606f\uff08\u5373\u70b9\u6743\u548c\uff09\uff0c\u5373\u5728 $a$ \u6570\u7ec4\u4e2d\u4e0b\u6807\u4e3a $3,11,19,27,\\cdots$ \u7684\u8282\u70b9\u7684\u4fe1\u606f\u3002\n> \n> \u5bf9\u4e8e\u56fe\u4e2d\u6807\u53f7\u4e3a $4$ \u7684\u8282\u70b9\uff1a\u4ece\u6839\u8282\u70b9\u5230\u5b83\u6240\u6709\u8fb9\u4e0a\u7684\u8fb9\u6743\u5012\u5e8f\u8fde\u63a5\u53ef\u4ee5\u5f97\u5230 $01$\uff0c\u56e0\u6b64\u8be5\u8282\u70b9\u4fdd\u5b58\u6240\u6709\u4e8c\u8fdb\u5236**\u6700\u4f4e**\u4e24\u4f4d\u4e3a $01$ \u7684\u8282\u70b9\u7684\u4fe1\u606f\uff08\u5373\u70b9\u6743\u548c\uff09\uff0c\u5373\u5728 $a$ \u6570\u7ec4\u4e2d\u4e0b\u6807\u4e3a $1,5,9,13,\\cdots$ \u7684\u8282\u70b9\u7684\u4fe1\u606f\u3002\n\n~~\u73b0\u5728\u5927\u5bb6\u5e94\u8be5\u7406\u89e3\u4e86\u5427\u2026\u2026~~\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u628a\u9700\u8981\u64cd\u4f5c\u7684\u5e8f\u5217\u53d8\u5f97\u8fde\u7eed\uff0c\u76f4\u63a5\u4f7f\u7528\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n\n$\\color{blue}{\\texttt{[Attention]}}$\n\n\u5b9e\u73b0\u65f6\u6709\u51e0\u4e2a\u5730\u65b9\u9700\u8981\u6ce8\u610f\uff1a\n\n1. \u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u6570\u4e00\u5b9a\u8981\u5f00\u6ee1 $2^{21}$\uff0c\u56e0\u4e3a\u6309\u7167\u8be5\u65b9\u6848\uff0c\u6211\u4eec\u6700\u5e95\u5c42\u7684\u8282\u70b9\u9700\u8981\u4fdd\u5b58 $0$ \u5230 $(2^{20}-1)$ \u5171 $2^{20}$ \u4e2a\u6807\u53f7\u7684\u4fe1\u606f\uff0c\u53ea\u8981\u5c11\u4e00\u70b9\uff0c\u90fd\u4f1a RE\u3002\n2. \u5728\u7ebf\u6bb5\u6811\u4e2d\u6709\u5f88\u591a\u8282\u70b9\u662f\u65e0\u7528\u7684\uff08\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u5f03\u53bb\uff09\u3002\u7531\u4e8e\u6570\u7ec4\u957f\u5ea6\u6709\u9650\u5236\uff0c\u56e0\u6b64\u9700\u8981\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u8282\u70b9\u4e0b\u7a76\u7adf\u6709\u51e0\u4e2a\u8282\u70b9\u662f\u5e94\u8be5\u88ab\u64cd\u4f5c\u7684\u3002\u5426\u5219\u8fdb\u884c\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u5c06\u4f1a\u5bfc\u81f4 WA\u3002\n3. \u5982\u679c\u60f3\u8981\u526a\u679d\uff0c\u53ef\u4ee5\u907f\u514d\u904d\u5386\u90a3\u4e9b\u6240\u6709\u8282\u70b9\u90fd\u65e0\u7528\u7684\u5b50\u6811\u3002\n\n$\\color{blue}{\\texttt{[code]}}$\n\n```cpp\nconst int N=2e5+100;\nconst int M=(1<<20)+100;\ntypedef long long ll;\n\nint a[N],n,m;ll lst;\n\nll val[M<<1],tag[M<<1];\nint ls[M<<1],rs[M<<1],len[M<<1],rt,sgcnt;\n\ninline void pushup(int o){\n\tval[o]=val[ls[o]]+val[rs[o]];\n}\ninline void pushdown(int o){\n\tll Tag=tag[o];tag[o]=0;\n\tval[ls[o]]+=Tag*len[ls[o]];\n\tval[rs[o]]+=Tag*len[rs[o]];\n\ttag[ls[o]]+=Tag;\n\ttag[rs[o]]+=Tag;\n}\nvoid build(int &o,int l,int r,int x,int dep){\n\to=++sgcnt;tag[o]=0;\n\t\n\tif (l==r){\n\t\tif (x&&(x<=n)){\n\t\t\tval[o]=a[x];\n\t\t\tlen[o]=1;\n\t\t}//\u4e0d\u662f\u6bcf\u4e2a\u8282\u70b9\u90fd\u4f1a\u88ab\u64cd\u4f5c\n\t\telse val[o]=len[o]=0;\n\t\treturn;\n\t}\n\t\n\tint mid=(l+r)>>1;\n\tbuild(ls[o],l,mid,x,dep+1);\n\tbuild(rs[o],mid+1,r,x|(1<<dep),dep+1);\n\tlen[o]=len[ls[o]]+len[rs[o]];//!!\n\tpushup(o);return;\n}//\u6ce8\u610f\u90fd\u662f\u4ece\u4e8c\u8fdb\u5236\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u8bfb\u53d6\u6570\u636e\uff01\nvoid modify(int o,int l,int r,int p,int v,int x,int dep){\n\tif (dep==p){\n\t\tval[o]+=1ll*v*len[o];//\u4e0d\u80fd\u7528 (r-l+1) \u4ee3\u66ff len[o]\n\t\ttag[o]+=v;return;\n\t}\n\t\n\tif (tag[o]) pushdown(o);\n\t\n\tint mid=(l+r)>>1;\n\tif (!(x&(1<<dep)))\n\t\tmodify(ls[o],l,mid,p,v,x,dep+1);\n\telse modify(rs[o],mid+1,r,p,v,x,dep+1);\n\t\n\tpushup(o);return;\n}\nll query(int o,int l,int r,int p,int x,int dep){\n\tif (dep==p) return val[o];\n\tif (tag[o]) pushdown(o);\n\tint mid=(l+r)>>1;ll ans=0;\n\tif (!(x&(1<<dep))) ans=query(ls[o],l,mid,p,x,dep+1);\n\telse ans=query(rs[o],mid+1,r,p,x,dep+1);\n\treturn ans;\n}\n\nint main(){\n\tn=read();m=read();\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=read();\n\t\n\tbuild(rt,0,(1<<20)-1,0,0);//\u5927\u91cf\u5197\u4f59\uff0c\u53ef\u4ee5\u526a\u679d\n\t\n\tfor(int i=1,opt,x,y;i<=m;i++){\n\t\topt=read();x=read();y=read();\n\t\t\n\t\topt=(lst+opt)%2+1;\n\t\t\n\t\tif (opt==1) modify(rt,0,(1<<20)-1,x,read(),y,0);\n\t\telse{\n\t\t\tlst=query(rt,0,(1<<20)-1,x,y,0);\n\t\t\tprintf(\"%lld\\n\",lst);\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1667713070,
        "uid": 95624,
        "name": "HPXXZYY",
        "ccfLevel": 7,
        "title": "the Solution of the Problem P6587"
    }
]