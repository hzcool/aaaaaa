[
    {
        "content": "### \u4e00.\u4ec0\u4e48\u662f\u5b57\u5178\u6811\n\nTrie \u6811\uff0c\u5373\u5b57\u5178\u6811\uff0c\u662f\u4e00\u79cd\u6811\u5f62\u7ed3\u6784\u3002\u5178\u578b\u5e94\u7528\u662f\u7528\u4e8e\u7edf\u8ba1\u548c\u6392\u5e8f\u5927\u91cf\u7684\u5b57\u7b26\u4e32\u524d\u7f00\u6765\u51cf\u5c11\u67e5\u8be2\u65f6\u95f4\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u65e0\u8c13\u7684\u5b57\u7b26\u4e32\u6bd4\u8f83\u3002\n\nTrie \u6811\u7684\u6838\u5fc3\u601d\u60f3\u662f\u7a7a\u95f4\u6362\u65f6\u95f4\u3002\u5229\u7528\u5b57\u7b26\u4e32\u7684\u516c\u5171\u524d\u7f00\u6765\u964d\u4f4e\u67e5\u8be2\u65f6\u95f4\u7684\u5f00\u9500\u4ee5\u8fbe\u5230\u63d0\u9ad8\u6548\u7387\u7684\u76ee\u7684\u3002 \n\n### \u4e8c.\u5b57\u5178\u6811\u7684\u6027\u8d28\n\n1.\u6839\u8282\u70b9\u4e0d\u5305\u542b\u5b57\u7b26\uff0c\u9664\u6839\u8282\u70b9\u5916\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u53ea\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u3002\n\n2.\u4ece\u6839\u8282\u70b9\u5230\u67d0\u4e00\u8282\u70b9\uff0c\u8def\u5f84\u4e0a\u7ecf\u8fc7\u7684\u5b57\u7b26\u8fde\u63a5\u8d77\u6765\uff0c\u4e3a\u8be5\u8282\u70b9\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u3002\n\n3.\u6bcf\u4e2a\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u5305\u542b\u7684\u5b57\u7b26\u90fd\u4e0d\u76f8\u540c\u3002\n\n\u4e0b\u56fe\u5c31\u662f\u4e00\u4e2a\u5b57\u5178\u6811\uff1a\n\n![](https://pic1.zhimg.com/v2-c6c00f279fb8a978ba6a7b08820e92e8_r.jpg)\n\n### \u4e09.\u5b57\u5178\u6811\u7684\u64cd\u4f5c\n\n**1.\u6620\u5c04\u5b57\u7b26**\n\n```cpp\nint getnum(char x){\n    if(x>='A'&&x<='Z')\n        return x-'A';\n    else if(x>='a'&&x<='z')\n        return x-'a'+26;\n    else\n        return x-'0'+52;\n} \n```\n\n**2.\u63d2\u5165\u5b57\u7b26\u4e32**\n\n```\nvoid insert(char str[])\n{\n    int p=0,len=strlen(str);\n    for(int i=0;i<len;i++)\n    {\n        int c=getnum(str[i]);\n        if(!t[p][c])\n            t[p][c]=++idx;\n        p=t[p][c];\n        cnt[p]++;\n    }\n}\n```\n\n**3.\u67e5\u8be2\u64cd\u4f5c**\n\n```cpp\nint find(char str[])\n{\n    int p=0,len=strlen(str);\n    for(int i=0;i<len;i++)\n    {\n        int c=getnum(str[i]);\n        if(!t[p][c])\n            return 0;\n        p=t[p][c];\n    }\n    return cnt[p];\n}\n```\n\n**4.main \u51fd\u6570\u90e8\u5206**\n\n```cpp\nint main(){\n    scanf(\"%d\",&T);\n    while(T--)\n    {\n        for(int i=0;i<=idx;i++)\n            for(int j=0;j<=122;j++)\n                t[i][j]=0;\n        for(int i=0;i<=idx;i++)\n            cnt[i]=0;\n        idx=0;\n        scanf(\"%d%d\",&n,&q);\n        for(int i=1;i<=n;i++)\n        {\n            scanf(\"%s\",s);\n            insert(s);\n        }\n        for(int i=1;i<=q;i++)\n        {\n            scanf(\"%s\",s);\n            printf(\"%d\\n\",find(s));\n        }\n    }\n    return 0;\n}\n```\n\n### \u56db.\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint T,q,n,t[3000005][65],cnt[3000005],idx;\nchar s[3000005];\nint getnum(char x){\n    if(x>='A'&&x<='Z')\n        return x-'A';\n    else if(x>='a'&&x<='z')\n        return x-'a'+26;\n    else\n        return x-'0'+52;\n} \nvoid insert(char str[]){\n    int p=0,len=strlen(str);\n    for(int i=0;i<len;i++){\n        int c=getnum(str[i]);\n        if(!t[p][c])\n            t[p][c]=++idx;\n        p=t[p][c];\n        cnt[p]++;\n    }\n}\nint find(char str[]){\n    int p=0,len=strlen(str);\n    for(int i=0;i<len;i++){\n        int c=getnum(str[i]);\n        if(!t[p][c])\n            return 0;\n        p=t[p][c];\n    }\n    return cnt[p];\n}\nint main(){\n    scanf(\"%d\",&T);\n    while(T--){\n        for(int i=0;i<=idx;i++)\n            for(int j=0;j<=122;j++)\n                t[i][j]=0;\n        for(int i=0;i<=idx;i++)\n            cnt[i]=0;\n        idx=0;\n        scanf(\"%d%d\",&n,&q);\n        for(int i=1;i<=n;i++){\n            scanf(\"%s\",s);\n            insert(s);\n        }\n        for(int i=1;i<=q;i++){\n            scanf(\"%s\",s);\n            printf(\"%d\\n\",find(s));\n        }\n    }\n    return 0;\n}\n```\n\n\n",
        "postTime": 1652754268,
        "uid": 333800,
        "name": "qip101",
        "ccfLevel": 5,
        "title": "P8306 \u3010\u6a21\u677f\u3011\u5b57\u5178\u6811  \u9898\u89e3"
    },
    {
        "content": "## \u3010trie\u3011\u3010B3627\u3011\u3010\u6a21\u677f\u3011\u5b57\u5178\u6811\n\n## Analysis\n\n\u8003\u8651\u5bf9\u6a21\u5f0f\u4e32\u5efa\u7acb trie \u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a\u503c cnt\uff0c\u5728\u6bcf\u4e2a\u6a21\u5f0f\u4e32\u63d2\u5165\u7ed3\u675f\u4ee5\u540e\uff0c\u4ece\u5b57\u5178\u6811\u4e0a\u5bf9\u5e94\u7684\u7ed3\u70b9\u4ee4 cnt \u52a0\u4e00\u3002\u5219\u6bcf\u6b21\u67e5\u8be2\u76f8\u5f53\u4e8e\u5728 trie \u6811\u4e0a\u5339\u914d\u5230\u7684\u7ed3\u70b9\u7684\u5b50\u6811\u4e2d cnt \u7684\u548c\u3002\n\n\u4e8e\u662f\u5728\u5efa\u7acb\u597d trie \u6811\u4ee5\u540e\u505a\u4e00\u6b21 dfs\uff0c\u6c42\u51fa\u5b50\u6811 cnt \u548c\uff0c\u5c31\u53ef\u4ee5 $O(1)$ \u56de\u7b54\u67e5\u8be2\u4e86\u3002\n\n## Code\n\n```cpp\n#include <iostream>\n#include <unordered_map>\n\n\nstruct Node {\n  int cnt;\n  std::unordered_map<char, Node*> ch;\n\n  Node() : cnt(0) {};\n\n  void dfs() {\n    for (auto [x, y] : ch) {\n      y->dfs();\n      cnt += y->cnt;\n    }\n  }\n};\nNode *rot;\n\nint main() {\n  std::ios::sync_with_stdio(false);\n  std::cin.tie(0);\n  int T, n, q;\n  std::string s;\n  for (std::cin >> T; T; --T) {\n    std::cin >> n >> q;\n    rot = new Node();\n    for (int i = 1; i <= n; ++i) {\n      std::cin >> s;\n      auto u = rot;\n      for (auto c : s) u = (u->ch[c] ? u->ch[c] : u->ch[c] = new Node);\n      ++u->cnt;\n    }\n    rot->dfs();\n    for (int i = 1; i <= q; ++i) {\n      std::cin >> s;\n      bool flag = true;\n      auto u = rot;\n      for (auto c : s) if (u->ch[c]) {\n         u = u->ch[c];\n      } else {\n        flag = false; break;\n      }\n      std::cout << ((flag) ? u->cnt : 0) << '\\n';\n    }\n  }\n  return 0;\n}\n```\n\n## gen\n\n```py\nfrom random import randint\nimport os\n\narr = [0, 1, 10, 100, 1000, 100000, 1]\ntemp = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n\nfor id in range(1, 7):\n  inname = \"trie\" + str(id) + '.in'\n  ansname = 'trie' + str(id) + '.ans'\n  f = open(inname, 'w', newline='\\n')\n  t = arr[id]\n  f.write(str(t) + '\\n')\n  if id != 6:\n    for tt in range(t):\n      n = 100000 // t\n      m = n\n      last = 500000 // t\n      text = []\n      f.write(str(n) + \" \" + str(m) + '\\n')\n      for i in range(m - 1):\n        s = str()\n        lst = randint(1, (last // (m - i + 1)))\n        for j in range(lst):\n          s += temp[randint(0, len(temp) - 1)]\n        text.append(s)\n        last -= lst\n      s = str()\n      for i in range(last):\n        s += temp[randint(0, len(temp) - 1)]\n      text.append(s)\n      last = 1500000 // t\n      for i in range(n - 1):\n        j = randint(0, len(text) - 1)\n        lst = randint(1, (last // (m - i + 1)))\n        s = text[j]\n        for k in range(lst):\n           s += temp[randint(0, len(temp) - 1)]\n        f.write(s + '\\n')\n        last -= lst\n      s = str()\n      for i in range(last):\n        s += temp[randint(0, len(temp) - 1)]\n      f.write(s + '\\n')\n      for i in range(m):\n        f.write(text[i] + '\\n')\n  else:\n    f.write(\"100000 100000\\n\")\n    lst = 1900000\n    for i in range (100000):\n      last = randint(0, lst // (100000 - i) - 1)\n      s = 'a'\n      for j in range(last):\n        s += temp[randint(0, len(temp) - 1)]\n      f.write(s + '\\n')\n      lst -= last\n    for i in range(100000):\n      f.write('a\\n')\n  f.flush()\n  os.system('std.exe < ' + inname + ' > ' + ansname)\n```\n\n",
        "postTime": 1650902452,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u3010trie\u3011\u3010B3627\u3011\u3010\u6a21\u677f\u3011\u5b57\u5178\u6811"
    },
    {
        "content": "### \u601d\u8def\uff1a\r\n\r\n\u5b57\u5178\u6811\u6a21\u677f\u9898\u3002\r\n\r\n\u5b57\u5178\u6811\u662f\u4e00\u79cd\u5b57\u7b26\u4e32\u524d\u7f00\u7ed3\u6784\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u8868\u793a\u7684\u662f\u67d0\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u4fe1\u606f\uff0c\u81ea\u7136\u53ef\u4ee5\u7ef4\u62a4 $s$ \u662f\u5b57\u5178\u4e2d\u591a\u5c11\u5b57\u5178\u4e32\u7684\u524d\u7f00\u3002\r\n\r\n\u5177\u4f53\u800c\u8a00\uff0c\u6bcf\u6b21\u6dfb\u52a0\u64cd\u4f5c\u53ea\u5bf9\u8def\u5f84\u4e0a\u7684\u70b9\u6709\u8d21\u732e\uff0c\u53ef\u4ee5\u8003\u8651\u7ed9\u8def\u5f84\u4e0a\u6bcf\u4e2a\u70b9\u7684\u8ba1\u6570\u5668\u52a0 $1$\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u6587\u672c\u4e32\u7684\u7ed3\u5c3e\u5bf9\u5e94\u70b9\u7684\u8ba1\u6570\u5668\u5927\u5c0f\uff0c\u56e0\u4e3a\u6240\u6709\u5bf9\u8fd9\u4e2a\u70b9\u6709\u8d21\u732e\u7684\u70b9\u90fd\u5b58\u5728\u4e8e\u5176\u5b50\u6811\u4e4b\u5185\uff0c\u7b49\u4ef7\u4e8e\u6587\u672c\u4e32\u4f5c\u4e3a\u524d\u7f00\u3002\r\n\r\n\u5f53\u7136\uff0c\u53ea\u5728\u6bcf\u4e2a\u5b57\u5178\u4e32\u7684\u7ed3\u5c3e\u6253\u6807\u8bb0\uff0c\u7b54\u6848\u4e3a\u6587\u672c\u4e32\u7684\u7ed3\u5c3e\u7684\u5b50\u6811\u4e2d\u6807\u8bb0\u7684\u4e2a\u6570\u4e5f\u662f\u4e00\u4e2a\u9053\u7406\u3002\r\n\r\n\u7531\u4e8e\u672c\u9898\u4e2d\u5b57\u7b26\u96c6\u5728\u5b57\u5178\u5e8f\u4e0a\u5e76\u4e0d\u8fde\u7eed\uff0c\u91cd\u65b0\u7f16\u53f7\u4e00\u4e0b\u5373\u53ef\u3002\r\n\r\n### \u4ee3\u7801\uff1a\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nint n,m,tot,tag[(int)(3e6+10)];\r\nmap<char,int>mp;\r\nint trie[(int)(3e6+10)][63];\r\nvoid insert(char *s)\r\n{\r\n\tint len=strlen(s+1),p=0;\r\n\tfor(int i=1;i<=len;i++)\r\n\t{\r\n\t\tif(!trie[p][mp[s[i]]]) trie[p][mp[s[i]]]=++tot;\r\n\t\tp=trie[p][mp[s[i]]]; \r\n\t\ttag[p]++;\r\n\t}\r\n}\r\nint query(char *s)\r\n{\r\n\tint len=strlen(s+1),p=0;\r\n\tfor(int i=1;i<=len;i++)\r\n\t{\r\n\t\tif(!trie[p][mp[s[i]]]) return 0;\r\n\t\tp=trie[p][mp[s[i]]]; \r\n\t}\r\n\treturn tag[p];\r\n}\r\nchar s[(int)(3e6+10)];\r\nsigned main()\r\n{\r\n\tint t,id=0;cin>>t;\r\n\tfor(char i='a';i<='z';i++) mp[i]=++id;\r\n\tfor(char i='A';i<='Z';i++) mp[i]=++id;\r\n\tfor(char i='0';i<='9';i++) mp[i]=++id;\r\n\twhile(t--)\r\n\t{\r\n\t\tcin>>n>>m;\r\n\t\tfor(int i=0;i<=tot;i++)\r\n\t\t{\r\n\t\t\ttag[i]=0;\r\n\t\t\tfor(int j=0;j<=62;j++)\r\n\t\t\t{\r\n\t\t\t\ttrie[i][j]=0;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttot=0;\r\n\t\tfor(int i=1;i<=n;i++)\r\n\t\t{\r\n\t\t\tcin>>(s+1);\r\n\t\t\tinsert(s);\r\n\t\t}\r\n\t\tfor(int i=1;i<=m;i++)\r\n\t\t{\r\n\t\t\tcin>>(s+1);\r\n\t\t\tcout<<query(s)<<\"\\n\";\r\n\t\t}\r\n\t}\r\n\tsystem(\"pause > null\");\r\n}\r\n```\r\n\r\n",
        "postTime": 1651636273,
        "uid": 413777,
        "name": "npqenqpve",
        "ccfLevel": 0,
        "title": "P8306"
    }
]