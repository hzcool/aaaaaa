[
    {
        "content": "\u770b\u4e86\u770b\u5404\u4f4d\u5927\u4f6c\u7684\u9898\u89e3,\u90fd\u662f\u7ebf\u6bb5\u6811,\u90a3\u6211\u5c31\u6765\u4e00\u4efd\u5e76\u67e5\u96c6\u7684\u9898\u89e3\u5427\n\n\u7ed9\u4e00\u6bb5\u533a\u95f4\u67d3\u8272,\u53ef\u4ee5\u770b\u505a\u662f\u5408\u5e76\u4e00\u6bb5\u533a\u95f4,\u5e76\u4e14\u4f7f\u5176\u5728\u7edf\u8ba1\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u91cd\u590d\u7edf\u8ba1\n\n\u56fa\u5b9a\u67d3\u8272\u533a\u95f4\u7684\u5de6\u7aef\u70b9,\u5c06\u6574\u4e2a\u533a\u95f4\u5408\u5e76(\u4ece\u53f3\u5411\u5de6\u626b\u4e00\u8fb9\u67d3\u8272\u533a\u95f4),\u8fd9\u6837\u5f53\u6211\u4eec\u7edf\u8ba1\u533a\u95f4\u65f6\u7528x=find(x)\u65f6\u5c31\u76f8\u5f53\u4e8e\u8df3\u8fc7\u8be5\u533a\u95f4,\u8fbe\u5230\u4e86\u4e0d\u91cd\u590d\u7684\u76ee\u7684\n\n\u90e8\u5206\u4ee3\u7801\n\n```cpp\nint n,m;\nint cnt;\nint fa[200005];\ninline int found(int x){\n    return x==fa[x]?x:fa[x]=found(fa[x]);\n}\ninline int dy(){\n    in(n),in(m);\n    for(R int i=0;i<=n+1;++i)fa[i]=i;\n    while(m--){\n        R int a,b;in(a),in(b);\n        b=found(b);\n        while(a<=b){\n            if(a!=b && found(a)==b)break;\n            fa[b]=found(fa[b-1]);\n            cnt++;\n            b=found(b);\n        }\n        write(n-cnt),putchar('\\n');        \n    }\n    exit(0);\n}\n```",
        "postTime": 1508923952,
        "uid": 36080,
        "name": "\u51cc\u5e7d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1840 \u3010Color the Axis_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0805\uff09\u3011"
    },
    {
        "content": "\u6211\u662f\u6765\u7ed9\u5e76\u67e5\u96c6\u5927\u4f6c\u8865\u65f6\u95f4\u590d\u6742\u5ea6\u8bc1\u660e\u7684QwQ\u3002\n\n\u8bbe\u52bf\u80fd\u51fd\u6570$\\Phi(s)=\\text{s\u4e2d\u5e76\u67e5\u96c6\u4e2a\u6570}$\uff0c\u6613\u77e5\u5728\u4e00\u5f00\u59cb$\\Phi(s)=n$\u3002\n\n\u800c\u6bcf\u6b21\u64cd\u4f5c\uff0c\u5982\u679c\u4e00\u4e0b\u5b50\u8df3\u4e0d\u5230r\u7684\u8bdd\uff0c\u4f1a\u6267\u884c\u5408\u5e76\uff0c\u5c06\u5e76\u67e5\u96c6\u6570\u91cf-1\uff0c\u52bf\u80fd\u51fd\u6570\u5c31\u51cf\u5c11\u4e861\u3002\u5219\uff0c\u8be5\u6b21\u591a\u4f59\u8df3+\u5408\u5e76\u4e0d\u6d88\u8017\u65f6\u95f4\u3002\n\n\u56e0\u6b64\uff0c\u6bcf\u6b21\u4fee\u6539\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$\\Theta(1)$\u3002\n\n\u7531\u4e8e\u4e00\u5f00\u59cb$\\Phi(s)=n$\uff0c\u6240\u4ee5\u5fc5\u987b\u5f97\u5728\u7a0b\u5e8f\u5f00\u59cb\u65f6\u989d\u5916\u82b1\u8d39$\\Theta(n)$\u7684\u65f6\u95f4\u63d0\u9ad8\u52bf\u80fd\u51fd\u6570\u3002\n\n\u6240\u4ee5\uff0c\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\\Theta(n+m)$\u3002\n\n\u9644AC\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\nusing namespace std;\n\nint st[200005];\n\nint getfa(int x)\n{\n\treturn x==st[x]?x:st[x]=getfa(st[x]);\n}\n\nvoid unio(int a,int b)\n{\n\tst[getfa(b)] = getfa(a);\n}\n\nint main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\n\tint blkn = n;\t\n\tfor(int i=1; i<=n+1; ++i)\n\t{\n\t\tst[i] = i;\n\t}\n\tfor(int i=1; i<=m; ++i)\n\t{\n\t\tint li,ri;\n\t\tscanf(\"%d%d\",&li,&ri);\n\t\t\n\t\tint t = getfa(li);\n\t\twhile(t<=ri)\n\t\t{\n\t\t\tunio(t+1,t);\n\t\t\tt = getfa(t);\n\t\t\t--blkn;\n\t\t}\n\t\t\n\t\tprintf(\"%d\\n\",blkn);\n\t}\n}\n```\n\n\uff08\u7ebf\u6bb5\u6811\u7684\u9898\u600e\u4e48\u80fd\u7528\u7ebf\u6bb5\u6811\u505a\u5462\uff09",
        "postTime": 1565313636,
        "uid": 49458,
        "name": "\u6728\u6728\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1840 \u3010Color the Axis_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0805\uff09\u3011"
    },
    {
        "content": "## \u5206\u6790\n\u6211\u4eec\u8003\u8651\u5c06\u9ed1\u8272\u70b9\u770b\u62101\uff0c\u767d\u8272\u70b9\u770b\u62100\uff0c\u90a3\u4e48\u8fd9\u9053\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u51681\u4e32\uff0c\u8981\u6c42\u6211\u4eec\u5b9e\u73b0\uff1a\n\n1. \u533a\u95f4\u63a8\u5e73\n\n2. \u533a\u95f4\u67e5\u8be2\n\n...\u73c2\u6735\u8389\u6811\u7684\u6a21\u677f\u9898\uff0c\u4eb2\u6d4b\u8dd1\u5f97\u98de\u5feb\n\n\u8fd9\u9053\u9898\u76f4\u63a5\u66b4\u529b\u67e5\u8be2\u6574\u4e2a $[1,n]$ \u5373\u53ef\uff0c\n\u4f46[\u67d0\u4e9b\u9898](https://www.luogu.org/problem/CF915E)\u4f1a\u5361\u8fd9\u79cd\u505a\u6cd5\u3002\n\n\u8003\u8651\u6bcf\u4e00\u6b21\u533a\u95f4\u63a8\u5e73\uff0c\u4ea7\u751f\u7684\u5f71\u54cd\u53ea\u6709\u8fd9\u6b21\u63a8\u5e73\u7684 $[l,r]$ \n\n\u6545\u53ea\u9700\u8981\u5728\u63a8\u5e73\u524d\u626b\u63cf $[l,r]$ \uff0c\u51cf\u53bb\u5bf9\u5e94\u533a\u95f4\u7684\u8d21\u732e\u5373\u53ef\n\n## \u4ee3\u7801\n$\\mathcal{Code:}$\n```cpp\n#include<set>\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n#define N 100010\n//#define int long long\n#define debug cout<<__LINE__<<\" \"<<__FUNCTION__<<\"\\n\"\ninline int read(){\n\tint x=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x;\n}\nstruct Node{\n\tsigned l,r;\n\tmutable int val;\n\tNode(int L,int R=-1,int V=0):l(L),r(R),val(V){}\n\tfriend bool operator <(const Node &a,const Node &b){\n\t\treturn a.l<b.l;\n\t}\n};\nint n,m,sum;\nset<Node> s;\n#define IT set<Node>::iterator\ninline IT Split(signed pos){\n\tIT it=s.lower_bound(Node(pos));\n\tif(it!=s.end()&&it->l==pos) return it;\n\tit--;\n\tint l=it->l,r=it->r,val=it->val;\n\ts.erase(it);\n\ts.insert(Node(l,pos-1,val));\n\treturn s.insert(Node(pos,r,val)).first;\n}\ninline void Assign(signed l,signed r,int val){\n\tIT it2=Split(r+1),it1=Split(l);\n\tfor(IT it=it1;it!=it2;++it)//\u5982\u679c\u662f\u9ed1\u8272\u70b9\u7684\u533a\u95f4\u5c31\u51cf\u53bb\u9ed1\u70b9\u7684\u8d21\u732e\n\t\tsum-=it->val*(it->r-it->l+1);\n\ts.erase(it1,it2);\n\ts.insert(Node(l,r,val));\n}\nsigned main(){\n// \tfreopen(\".in\",\"r\",stdin);\n// \tfreopen(\".out\",\"w\",stdout);\n\tsum=n=read();m=read();//\u521d\u59cb\u5168\u90e8\u662f\u9ed1\u8272\u70b9\n    s.insert(Node(1,n+1,1));\n    for(int i=1,opt,l,r,l1,r1,res;i<=m;i++){\n        l=read();r=read();\n        Assign(l,r,0);//\u533a\u95f4\u63a8\u5e73\n        printf(\"%d\\n\",sum);\n    }\n//\tfclose(stdin);\n//\tfclose(stdout);\n    return 0;\n}\n\n```",
        "postTime": 1568960429,
        "uid": 123081,
        "name": "zh_dou",
        "ccfLevel": 7,
        "title": "[\u9898\u89e3]P1840 |Color the Axis_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0805\uff09"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u7ebf\u6bb5\u6811\u5199\u6cd5\n\n\u4e0d\u7528build\uff0cask\u8fd8\u6709down\n\n\u4e00\u6574\u68f5\u6811\u7ef4\u62a4\u767d\u70b9\u7684\u6570\u91cf\uff0c\u6bcf\u6b21change\u627e\u5230\u7cbe\u51c6\u7684\u533a\u95f4\u7136\u540e\u4e00\u6574\u4e2a\u533a\u95f4\u90fd\u662f\u767d\u70b9\n\n\u5982\u679c\u518dchange\u7684\u65f6\u5019\u53d1\u73b0\u8981\u8bbf\u95ee\u7684\u533a\u95f4\u5df2\u7ecf\u5168\u90e8\u8986\u76d6\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\uff0c\u65e0\u9700\u518d\u6539\n\n\u8f93\u51fa\u7b54\u6848\u7684\u8bdd\uff0c$tr[1]$\u662f\u533a\u95f4\u767d\u70b9\u603b\u6570\uff0c\u6240\u4ee5\u7b54\u6848\u5c31\u662f$n-tr[1]$\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define lson k<<1,l,mid\n#define rson k<<1|1,mid+1,r\n#define ls k<<1\n#define rs k<<1|1\n#define mid ((l+r)>>1)\nusing namespace std;\nconst int maxn=200005;\nint n,m;\nint tr[maxn<<2];\ninline void update(int k){\n\ttr[k]=tr[ls]+tr[rs];\n}\nvoid change(int k,int l,int r,int x,int y){\n\tif(tr[k]==r-l+1)return ;\n\tif(l==x&&y==r){\n\t\ttr[k]=r-l+1;\n\t\treturn ;\n\t}\n\tif(y<=mid)change(lson,x,y);\n\telse if(x>mid)change(rson,x,y);\n\telse change(lson,x,mid),change(rson,mid+1,y);\n\tupdate(k);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tint x,y;\n\twhile(m--){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tchange(1,1,n,x,y);\n\t\tprintf(\"%d\\n\",n-tr[1]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1568901006,
        "uid": 151768,
        "name": "\u6d41\u901d\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1840 \u3010Color the Axis_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0805\uff09\u3011"
    },
    {
        "content": "\u5404\u4f4d\u5927\u4f6c\u90fd\u5199\u4e86\u7ebf\u6bb5\u6811\u554a\u3002  \n\u8fd8\u6709\u4e00\u4e2a\u795e\u7287\u5199\u4e86\u5e76\u67e5\u96c6\uff01\n\n\u9119\u4eba\u4e5f\u662f\u7b2c\u4e00\u53cd\u5e94\u7ebf\u6bb5\u6811\uff0c\u4f46\u662f\u6700\u8fd1 FHQ Treap \u5199\u591a\u4e86\uff0c\u4e8e\u662f\u5fcd\u4e0d\u4f4f\u2026\u2026  \n\u5176\u5b9e\u5e73\u8861\u6811\u6253\u6807\u8bb0\u4e5f\u548c\u5176\u4ed6\u6570\u636e\u7ed3\u6784\u5dee\u4e0d\u591a\u7684\u8bf4  \n\u800c\u4e14\u7a7a\u95f4\u5360\u7528\u6bd4\u7ebf\u6bb5\u6811\u8981\u5c0f\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#define ls(p) tree[p].lson\n#define rs(p) tree[p].rson\nusing namespace std;\nconst int N = 2e5;\nint n,m;\nstruct node\n{\n\tint val,rnd,sz;\n\tint set,sum;\n\tint lson,rson;\n} tree[N + 10];\ninline int new_node(int v)\n{\n\tstatic int tot = 0;\n\ttree[++tot].val = v;\n\ttree[tot].sum = v;\n\ttree[tot].rnd = rand();\n\ttree[tot].set = -1;\n\ttree[tot].sz = 1;\n\treturn tot;\n}\ninline void up(int p)\n{\n\ttree[p].sz = tree[ls(p)].sz + 1 + tree[rs(p)].sz;\n\ttree[p].sum = tree[ls(p)].sum + tree[p].val + tree[rs(p)].sum;\n}\ninline void down(int p)\n{\n\tif(tree[p].set != -1)\n\t{\n\t\tif(ls(p))\n\t\t\ttree[ls(p)].val = tree[p].set,tree[ls(p)].sum = tree[p].set * tree[ls(p)].sz,tree[ls(p)].set = tree[p].set;\n\t\tif(rs(p))\n\t\t\ttree[rs(p)].val = tree[p].set,tree[rs(p)].sum = tree[p].set * tree[rs(p)].sz,tree[rs(p)].set = tree[p].set;\n\t\ttree[p].set = -1;\n\t}\n}\nvoid split(int p,int k,int &x,int &y)\n{\n\tif(!p)\n\t{\n\t\tx = y = 0;\n\t\treturn ;\n\t}\n\tdown(p);\n\tif(tree[ls(p)].sz < k)\n\t\tx = p,split(rs(p),k - tree[ls(p)].sz - 1,rs(p),y);\n\telse\n\t\ty = p,split(ls(p),k,x,ls(p));\n}\nint merge(int x,int y)\n{\n\tif(!x || !y)\n\t\treturn x | y;\n\tdown(x),down(y);\n\tif(tree[x].rnd < tree[y].rnd)\n\t{\n\t\trs(x) = merge(rs(x),y);\n\t\tup(x);\n\t\treturn x;\n\t}\n\telse\n\t{\n\t\tls(y) = merge(x,ls(y));\n\t\tup(y);\n\t\treturn y;\n\t}\n}\nint p,x,y,z;\nint main()\n{\n\tsrand(19260817);\n\tscanf(\"%d%d\",&n,&m);\n\tfor(register int i = 1;i <= n;++i)\n\t\tp = merge(p,new_node(1));\n\tint l,r;\n\twhile(m--)\n\t{\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tsplit(p,r,x,z);\n\t\tsplit(x,l - 1,x,y);\n\t\ttree[y].val = 0,tree[y].set = 0,tree[y].sum = 0;\n\t\tp = merge(merge(x,y),z);\n\t\tprintf(\"%d\\n\",tree[p].sum);\n\t}\n}\n```",
        "postTime": 1542951100,
        "uid": 75840,
        "name": "deserter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1840 \u3010Color the Axis_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0805\uff09\u3011"
    },
    {
        "content": "\u5567\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u9898\u89e3\u91cc\u6ca1\u6709\u8fd9\u79cd $300\\text{B}$ \u7684\u505a\u6cd5\u5462\n\n----\n\n\u7ebf\u6bb5\u6811\uff1f\u4f60\u771f\u7684\u613f\u610f\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u8fd9\u4e2a\u770b\u4e0a\u53bb\u5c31\u5f88 naive \u7684\u64cd\u4f5c\uff1f\n\n\u672c\u4eba\u7684\u505a\u6cd5\u548c\u5e76\u67e5\u96c6\u633a\u7c7b\u4f3c\u7684\uff0c\u4f46\u7701\u53bb\u4e86\u4e00\u4e9b\u3002\n\n\u8003\u8651\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u662f\u4e0d\u662f\u767d\u8272\uff0c\u82e5\u662f\u767d\u8272\uff0c\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u5f80\u540e\u80fd\u5230\u8fbe\u7684\u8f83\u8fdc\u7684\u8fde\u7eed\u4e00\u6bb5\u767d\u8272\u7684\u7ec8\u70b9\u3002\uff08\u6ce8\u610f\uff0c\u662f\u8f83\u8fdc\u7684\uff0c\u56e0\u4e3a\u64cd\u4f5c\u7684\u65f6\u5019\u4f1a\u6709\u5f88\u591a\u70b9\u65e0\u6cd5\u65b9\u4fbf\u7684\u7ef4\u62a4\uff09\n\n\u64cd\u4f5c\u65f6\uff0c\u4ece $l$ \u5230 $r$ \u904d\u5386\uff0c\u82e5 $f_i$ \u4e0d\u4e3a $0$ \uff08\u662f\u767d\u8272\uff09\uff0c\u5219 $i$ \u53d8\u4e3a $f_i$ \uff0c**\u540c\u65f6\uff0c$f_i$ \u4e0e $r$ \u53d6 $\\max$**\u3002\u53cd\u4e4b\u5219\u8d4b $f_i$ \u4e3a $r$ \uff0c\u5e76\u8ba9 $n$ \u51cf $1$\uff08\u56e0\u4e3a\u540e\u9762\u4e0d\u4f1a\u7528\u5230 $n$ \uff0c\u6240\u4ee5 $n$ \u53ef\u4ee5\u987a\u4fbf\u5f53\u7b54\u6848\uff09\u3002\n\n\u6700\u540e\u8f93\u51fa $n$ \u5373\u53ef\u3002\n\n\u6700\u540e\u5410\u69fd\u4e00\u4e0b\uff0c\u5982\u679c\u4e0d\u52a0\u4e0a\u9762\u7c97\u4f53\u6807\u6ce8\u7684\u4f18\u5316\uff0c\u5f88\u8f7b\u6613\u5c31\u53ef\u4ee5\u5361\u5230 $n^2$ \uff0c\u4f46\u6570\u636e\u8fc7\u6c34\u5bfc\u81f4\u8fc7\u4e86\uff0c\u8fd8\u8dd1\u5f97\u8d3c\u5feb\u3002\u76f8\u6bd4\u4e4b\u4e0b\u4f18\u5316\u4e4b\u540e\u57fa\u672c\u4e0a\u65f6\u95f4\u6ca1\u6709\u53d8/kk\n\n\u6b63\u5e38\u7684 $368\\text{B}$ \u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m,f[200005],k,l,r;\nint main()\n{\n\tcin>>n>>m;\n\tfor(int j=1;j<=m;j++)\n\t{\n\t\tcin>>l>>r;\n\t\tfor(int i=l;i<=r;i++)\n    \t{\n    \t\tif(f[i])\n    \t\t{\n    \t\t\tk=f[i];\n    \t\t\tf[i]=max(f[i],r);\n    \t\t\ti=k;\n    \t\t}\n    \t\telse\n    \t\t{\n    \t\t\tf[i]=r;\n    \t\t\tn--;\n    \t\t}\n    \t}\n\t\tcout<<n<<endl;\n\t}\n\treturn 0;\n}\n```\n\n\u53ea\u538b\u4e86\u4e00\u70b9\u70b9\u7684 $211\\text{B}$ \u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\nusing namespace std;int n,m,f[200005],k,l,r;int main(){cin>>n>>m;for(int j=1;j<=m;j++){cin>>l>>r;for(int i=l;i<=r;i++){if(f[i]){k=f[i];f[i]=max(f[i],r);i=k;}else{f[i]=r;n--;}}cout<<n<<endl;}}\n```",
        "postTime": 1612512779,
        "uid": 227728,
        "name": "\u51b0\u7cd6\u9e3d\u5b50",
        "ccfLevel": 6,
        "title": "\u3010\u9898\u89e3\u3011P1840 Color the Axis"
    },
    {
        "content": "### \u5f88\u6807\u51c6\u7684\u7ebf\u6bb5\u6811\u6a21\u677f\n\n\u4f46\u662f\u6211\u6253\u7684\u662f\u5206\u5757\n\n\u5206\u5757\u5f88\u66b4\u529b\u554a\uff0c\u50cf\u67d0\u4f4ddalao\u8bf4\u7684\uff0c\n~~\u4f60\u770bn\u65b9\u7684\u66b4\u529b\u4ec0\u4e48\u4e0d\u80fd\u7ef4\u62a4~~\n\n\u8a00\u5f52\u6b63\u4f20\uff0c\u770b\u770b\u6211\u7684\u5206\u5757\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\n#define re register int\n#define il inline\nbool col[200005];\nint sum[500]={};\nint n,m,len,num,ans;\n\nint main ( )\n{\n//\tfreopen(\"axis.in\",\"r\",stdin);\n//\tfreopen(\"axis.out\",\"w\",stdout);\n\tint l,r;\n\tscanf(\"%d%d\",&n,&m);\n\tans=n;\n\tnum=len=sqrt(n);\n\tif(n%num) ++num;\n\tfor(re i=1;i<=m;++i)\n\t{\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tint pl=(l-1)/len+1,pr=(r-1)/len+1;\n\t\tif(pl==pr)\n\t\t{\n\t\t\tif(sum[pl]!=len)\n\t\t\t\tfor(re j=l;j<=r;++j)\n\t\t\t\t\tif(!col[j])\n\t\t\t\t\t{\n\t\t\t\t\t\tcol[j]=true;\n\t\t\t\t\t\t++sum[pl];\n\t\t\t\t\t\t--ans;\n\t\t\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(re j=pl+1;j<=pr-1;++j)\n\t\t\t{\n\t\t\t\tans-=len-sum[j];\n\t\t\t\tsum[j]=len;\n\t\t\t}\n\t\t\tif(sum[pl]!=len)\n\t\t\t\tfor(re j=l;j<=pl*len;++j)\n\t\t\t\t\tif(!col[j])\n\t\t\t\t\t{\n\t\t\t\t\t\tcol[j]=true;\n\t\t\t\t\t\t++sum[pl];\n\t\t\t\t\t\t--ans;\n\t\t\t\t\t}\n\t\t\tif(sum[pr]!=len)\n\t\t\t\tfor(re j=(pr-1)*len+1;j<=r;++j)\n\t\t\t\t\tif(!col[j])\n\t\t\t\t\t{\n\t\t\t\t\t\tcol[j]=true;\n\t\t\t\t\t\t++sum[pr];\n\t\t\t\t\t\t--ans;\n\t\t\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}\n```\n\n1.sum\u6570\u7ec4\u7528\u4e8e\u7ef4\u62a4\u4e00\u6bb5\u533a\u95f4\u5df2\u7ecf\u53d8\u6210\u767d\u8272\u7684\u70b9\n\n2.col\u5c31\u662f\u6bcf\u4e2a\u70b9\u662f\u5426\u5df2\u7ecf\u67d3\u8272\n\n3.pl\uff0cpr \u662f\u5f53\u524d\u5de6\u53f3\u7aef\u70b9\u6240\u5c5e\u7684\u533a\u95f4\n\n\u518d\u63a8\u8350\u4e00\u9053\u9898\uff1a\n\n\n[P4145 \u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f2 / \u82b1\u795e\u6e38\u5386\u5404\u56fd](https://www.luogu.org/problem/P4145)",
        "postTime": 1570259722,
        "uid": 144762,
        "name": "NIMNIM",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1840 \u3010Color the Axis_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0805\uff09\u3011"
    },
    {
        "content": "# \u9047\u4e8b\u4e0d\u51b3\u5148\u5206\u5757\n### \u6211\u7528\u5206\u5757\u6c34\u8fd9\u9053\u9898 \n\u8fd9\u9053\u9898\u5f88\u88f8\uff0c\u4f46\u7528\u7ebf\u6bb5\u6811\u6765\u505a\u5c31\u6709\u70b9\u5927\u6750\u5c0f\u7528\u4e86\uff0c\u5206\u5757\u53ef\u4ee5\u8bf4\u662f\u77ed\u5c0f\u7cbe\u608d\uff0c\u5e76\u4e14\u53ef\u4ee5\u7ef4\u62a4\u5f88\u591a\u6570\u636e\uff0c\u771f\u662f\u5c45\u5bb6\u9646\u884c\u5fc5\u5907\u7684\u826f\u5668\u554a\n### \u4e0d\u61c2\u5206\u5757 [\u70b9\u6211\u9886\u53d6\u4f8b\u9898](https://loj.ac/problems/search?keyword=%E5%88%86%E5%9D%97)\n\u5e0c\u671b\u4f60\u5728\u5206\u5757\u8def\u4e0a\u8d8a\u8d70\u8d8a\u8fdc~\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#include<cmath>\n#define N 300500\nusing namespace std;\n\ninline int read() {\n\tint x = 0,f = 1; char s = getchar();\n\twhile(s < '0' || s > '9') {if(s == '-') f = -1;s = getchar();}\n\twhile(s >= '0' && s <= '9') {x = x * 10 + s - '0';s = getchar();}\n\treturn x * f;\n}\n\nint n,m;\nint a[N];\nint L[N],R[N],tag[N];\nint sum[N],lz[N];\n\ninline void Change(int l,int r) {\n\tif(tag[l] == tag[r]) {\n\t\tfor(int i = l;i <= r;i ++)\n\t\t\tif(a[i]) a[i] = 0,sum[tag[i]] --;\n\t\treturn ;\n\t}\n\tfor(int i = l;i <= R[tag[l]];i ++) \n\t\tif(a[i]) a[i] = 0,sum[tag[l]] --;\n\tfor(int i = tag[l] + 1;i < tag[r];i ++) lz[i] = 1;\n\tfor(int i = L[tag[r]];i <= r;i ++) \n\t\tif(a[i]) a[i] = 0,sum[tag[r]] --;\n}\n\ninline int Qurry() {\n\tint res = 0;\n\tfor(int i = 1;i <= tag[n];i ++)\n\t\tif(!lz[i] && sum[i] > 0) \n\t\t\tres += sum[i];\n\treturn res; \n}\n\nint main() {\n\tn = read(),m = read();\n\tint len = sqrt(n);\n\tfor(int i = 1;i <= n;i ++) \n\t\ttag[i] = (i - 1) / len + 1,a[i] = 1;\n\tfor(int i = 1;i <= tag[n];i ++) \n\t\tL[i] = R[i - 1] + 1,R[i] = min(n,L[i] + len - 1); \n\tfor(int i = 1;i <= tag[n];i ++) \n\t\tsum[i] = R[i] - L[i] + 1;\n\tfor(int i = 1;i <= m;i ++) {\n\t\tint l = read(),r = read();\n\t\tChange(l,r);\n\t\tprintf(\"%d\\n\",Qurry());\n\t}\n\treturn 0;\n}\n```\n## \u8c22\u8c22",
        "postTime": 1568961079,
        "uid": 153839,
        "name": "\u6e05\u8fdc\u5b66\u4f1a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1840 \u3010Color the Axis_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0805\uff09\u3011"
    },
    {
        "content": "-  \u76f4\u63a5\u88f8\u7ebf\u6bb5\u6811\uff0c\u628a\u9ed1\u68cb\u770b\u505a1\uff0c\u628a\u767d\u65d7\u770b\u505a0\uff0c\u64cd\u4f5c\u524d\u5148\u628a1~n\u4e2a\u6570\u90fd\u8d4b\u503c1\n\n-  \u64cd\u4f5c\u65f6\u628a\u533a\u95f4\u5185\u7684\u6240\u6709\u6570\u7528\u7ebf\u6bb5\u6811\u4e580\u5c31\u597d\n\n-  \u6bcf\u6b21\u64cd\u4f5c\u5b8c\u67e5\u8be2\u4e00\u6b211\u5230n\u7684\u6240\u6709\u6570\u7684\u548c\u5c31\u597d\u4e86\n\n-  \u4e0d\u8fc7\u8fd8\u662f\u5148\u5efa\u8bae\u5927\u5bb6\u5148\u53bb\u505a\u7ebf\u6bb5\u68112\u7684\u6a21\u677f\n\n-  \u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<queue>\n#include <cstdio>\n#include<cmath>\n#include <algorithm>\n#define ll long long\nusing namespace std;\nll n,m,p;\nstruct P{\n      ll l,r,h,c,f;\n}t[800009];\nll a[200009];\nvoid sgin(ll);\nvoid bulid(ll,ll,ll);\nll sum(ll,ll,ll);\nvoid inc(ll,ll,ll,ll);\nvoid cf(ll,ll,ll,ll);\nint main(){\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    a[i]=1;\n    bulid(1,n,1);\n    int o,x,y,k;\n    for(int i=1;i<=m;i++){\n            cin>>x>>y;\n            cf(x,y,1,0);\n            cout<<sum(1,n,1)<<endl;\n                 }     \n    return 0;\n}\nvoid bulid(ll x,ll y,ll l){\n     t[l].l=x;\n     t[l].r=y;\n     t[l].c=1;\n     t[l].f=0;\n     if(x==y){\n          t[l].h=a[x];\n          return;\n          }  \n     int m=(x+y)/2;\n     bulid(x,m,l*2);\n     bulid(m+1,y,l*2+1);\n     t[l].h=t[l*2].h+t[l*2+1].h;\n}\nvoid sgin(ll x){\n     if(t[x].c==1&&t[x].f==0)return;\n     if(t[x].l==t[x].r){t[x].c=1;t[x].f=0;return;}\n     t[x*2].h=(t[x*2].h*t[x].c+t[x].f*(t[x*2].r-t[x*2].l+1));\n     t[x*2+1].h=(t[x*2+1].h*t[x].c+t[x].f*(t[x*2+1].r-t[x*2+1].l+1));\n     t[x*2].c=t[x*2].c*t[x].c;\n     t[x*2+1].c=t[x*2+1].c*t[x].c;\n     t[x*2].f=(t[x*2].f*t[x].c+t[x].f);\n     t[x*2+1].f=(t[x*2+1].f*t[x].c+t[x].f);\n     t[x].c=1;t[x].f=0;\n}\n/*void inc(ll x,ll y,ll l,ll h){\n     sgin(l);\n     if(x<=t[l].l&&t[l].r<=y){\n          t[l].h=(t[l].h+h*(t[l].r-t[l].l+1));\n          t[l].f=h;\n          return;\n          }\n     int m=(t[l].l+t[l].r)/2;\n     if(x<=m)inc(x,y,l*2,h);\n     if(y>m)inc(x,y,l*2+1,h);\n     t[l].h=t[l*2].h+t[l*2+1].h;\n```\n}\u5904\u7406\u52a0\u6cd5\u64cd\u4f5c\uff0c\u8ddf\u672c\u9898\u65e0\u5173\\*/\nvoid cf(ll x,ll y,ll l,ll h){//\u4e580\uff1b \u53d8\u6210\u767d\u65d7\u7684\u8fc7\u7a0b;\n\n```cpp\n     sgin(l);\n     if(x<=t[l].l&&t[l].r<=y){\n                t[l].h=t[l].h*h;\n                t[l].c=h;\n                return;\n                }\n     int m=(t[l].l+t[l].r)/2;\n     if(x<=m)cf(x,y,l*2,h);\n     if(y>m)cf(x,y,l*2+1,h);\n     t[l].h=(t[l*2].h+t[l*2+1].h);\n}                                              \nll sum(ll x,ll y,ll l){//\u7edf\u8ba11 \u5230 n\u7684\u548c\uff08\u56e0\u4e3a\u767d\u65d7\u4e3a0\uff0c\u9ed1\u68cb\u4e3a1\uff0c\u6240\u4ee5\u548c\u5c31\u662f\u9ed1\u68cb\u7684\u4e2a\u6570\uff09 \n    sgin(l);\n    if(x<=t[l].l&&t[l].r<=y){\n        return t[l].h;\n        }\n    int m=(t[l].l+t[l].r)/2;\n    ll ans=0;\n    if(x<=m)ans+=sum(x,y,l*2);\n    if(y>m)ans+=sum(x,y,l*2+1);\n    return ans;\n}\n```",
        "postTime": 1485602715,
        "uid": 31216,
        "name": "sjie",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1840 \u3010Color the Axis_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0805\uff09\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u663e\u7136\u5728\u505a\u65e0\u7528\u529f\u554a\uff0c\u800c\u4e14\u9ebb\u70e6\u4e86\u8bb8\u591a\uff0c\u4f46\u662f\u8fd9\u9053\u9898\u771f\u5fc3\u4e0d\u96be\uff0c\u663e\u7136\u662f\u4e00\u4e2a\u533a\u95f4\u4fee\u6539\u7684\u9898\u76ee\uff0c\u7136\u540e\u67e5\u8be2\u7684\u9898\u76ee\n\n\u6211\u7684\u7ebf\u6bb5\u6811\u53ea\u9700\u8981\u8bb0\u5f55\u4e00\u4e2a\u91cf\uff1a\u533a\u95f4\u548c\n\n\u770b\u4e86\u4e00\u4e0b\u5176\u4ed6\u9898\u89e3\u7684pushdown\u51fd\u6570\uff0c\u53d1\u73b0\u771f\u5fc3\u5199\u7684\u5f88\u9ebb\u70e6\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u5f88\u5de7\u5999\u7684\u89e3\u6cd5\uff1a\n\n### \u5982\u679c\u8fd9\u4e2a\u533a\u57df\u88ab\u67d3\u6210\u4e86\u767d\u68cb\uff0c\u90a3\u4e48\u76f4\u63a5\u628a\u8fd9\u4e2a\u533a\u95f4\u603b\u548c\u6e05\u96f6\u5c31\u597d\u4e86\n\n### \u7136\u540e\u5411\u4e0b\u4f20\u503c\uff0c\u53ea\u9700\u8981\u628a\u4ed6\u7684\u513f\u5b50\u8282\u70b9sum\u6e05\u96f6\u5c31\u597d\u4e86\n\n## \u90a3\u5c31\u76f4\u63a5\u4e0a\u4ee3\u7801\u5427\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<queue>\n#include<stack>\n#include<vector>\n#include<map>\n#include<set>\n#include<algorithm> \n\n#define lson i*2,l,mid\n#define rson i*2+1,mid+1,r  //\u5b8f\u5b9a\u4e49 \n#define I_copy_the_answer return 0;\nusing namespace std;\n\nint n,m;\nstruct tree{\n\tint l,r,sum;\n}t[1000860];  //\u7ebf\u6bb5\u6811\u6700\u5927\u53ef\u80fd\u8fbe\u5230\u56db\u500d\u7a7a\u95f4\uff0c\u56e0\u6b64\u6570\u7ec4\u5f00\u56db\u500d\u4ee5\u4e0a \n\nvoid build_tree(int i,int l,int r)\n{\n\tt[i].l=l;  //\u8fd9\u4e1c\u897f\u6ca1\u4ec0\u4e48\u7528\uff0c\u4f46\u662f\u67e5\u9519\u7684\u65f6\u5019\u633a\u65b9\u4fbf\u7684 \n\tt[i].r=r;\n\tif(l==r)\n\t{\n\t\tt[i].sum=1;  //\u6bcf\u4e00\u4e2a\u9ed1\u8272\u68cb\u5b50 \n\t\treturn ;\n\t}\n\tint mid=(l+r)/2;\n\tbuild_tree(lson);\n\tbuild_tree(rson);\n\tt[i].sum=t[i*2].sum+t[i*2+1].sum; //\u8fd9\u4e2a\u4e0d\u591a\u7761\u4e86\u5427 \n\treturn ;\n}\n\nint pushdown(int i)   //\u7b80\u77ed\u7684pushdown \n{\n\tif(!t[i].sum)  //\uff01\u5373\u53d6\u53cd 0\u53d6\u53cd\u53731 \n\tt[i*2].sum=0,t[i*2+1].sum=0;  \n}\n\nvoid change_tree(int i,int l,int r,int a,int b)\n{\n\tif(l>=a&&r<=b)\n\t{\n\t\tt[i].sum=0;\n\t\treturn ;\n\t}\n\tpushdown(i);  \n\tint mid=(l+r)/2;\n\tif(a<=mid) change_tree(lson,a,b);\n\tif(b>mid) change_tree(rson,a,b);\n\tt[i].sum=t[i*2].sum+t[i*2+1].sum;  \n\treturn ;\n}\n\nint ask_color_tree(int i,int l,int r,int a,int b)  //\u8fd9\u4e2a\u51fd\u6570\u5176\u5b9e\u53ef\u4ee5\u4e0d\u5199\uff0c\u8f93\u51fat[1].sum\u5373\u53ef\uff0c\u4f46\u662f\u4e3a\u4e86\u6f14\u793a\u4e00\u4e0b\u5199\u4e86\u51fa\u6765\n{\n\tif(l>=a&&r<=b)\n\t{\n\t\treturn t[i].sum;\n\t}\n\tpushdown(i);  \n\tint mid=(l+r)/2;\n\tint ans=0;\n\tif(a<=mid) ans+=ask_color_tree(lson,a,b);\n\tif(b>mid) ans+=ask_color_tree(rson,a,b);\n\treturn ans;\n}\n\nint main()\n{\n\tint i,j;\n\tscanf(\"%d %d\",&n,&m);\n\tbuild_tree(1,1,n);\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tint t1,t2;\n\t\tscanf(\"%d %d\",&t1,&t2);\n\t\tchange_tree(1,1,n,t1,t2);\n\t\tprintf(\"%d\\n\",ask_color_tree(1,1,n,1,n));  //\u53ef\u4ee5\u4e0d\u8981\uff0c\u76f4\u63a5\u8f93\u51fat[1].sum\n\t}\n\tI_copy_the_answer //\u4f60\u5c31\u522b\u6284\u8fd9\u4e2a\u4ee3\u7801\u4e86\u5427 \n}\n```\n",
        "postTime": 1562837785,
        "uid": 38636,
        "name": "\u5bd2\u51b0\u5927\u5927",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1840 \u3010Color the Axis_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0805\uff09\u3011"
    },
    {
        "content": "\u597d\u4e45\u6ca1\u53d1\u9898\u89e3\u4e86\u4eca\u5929\u6765\u4e00\u53d1\n### \u5206\u5757\u5927\u6cd5\u597d\uff01\n\u628a\u5e8f\u5217\u5206\u6210$k$\u5757\uff0c\u5219\u4e00\u5171\u80fd\u5206\u6210$ \\frac{n}{k} $\u5757\uff0c\u5bf9\u4e8e\u4e00\u4e2a$ change(l,r) $\u64cd\u4f5c\uff0c\u53ea\u9700\u8981\u628a $ l-r $ \u5305\u542b\u7684\u5757\u6807\u8bb0$ tag $\uff0c\u5219\u6709$ tag $\u7684\u5757\u8ba1\u7b97\u65f6\u53ea\u9700\u8981\u7b97\u8fd9\u4e2a\u5757\u7684\u957f\u5ea6\u5373\u53ef\uff1b\u7b97\u5b8c\u5757\u5c31\u6734\u7d20\u7b97\u8fb9\u89d2\u3002\n#### \u90a3\u4e48\u8fd9\u6837\u590d\u6742\u5ea6\u662f\u591a\u5c11\uff1f\n\u6bcf\u4e00\u5757\u7684\u64cd\u4f5c\u52a0\u4e0a\u5757\u603b\u6570\u7684\u64cd\u4f5c\uff0c\u5373$ O(m(k+\\frac{n}{k})) $,\u7528\u5747\u503c\u4e0d\u7b49\u5f0f\u5f97\u5230\n### $ O(m(k+\\frac{n}{k})) \u2265 O(2m\\sqrt{n})=O(m\\sqrt{n}) $\n### \u5728$ k=\\sqrt{n} $\u53d6\u5230\n\u5b8c\u7f8e\uff01\u90a3\u4e48\u5c31\u662f\u4ee3\u7801\u65f6\u5149\uff01\n```cpp\n#include<bits/stdc++.h>\n#define maxn 200010\n#define rg register\nusing namespace std;\ntemplate<class T>int read(T &__x){__x=0;short __f=1;char __ch=getchar();while(__ch<'0'||__ch>'9'){if(__ch=='-')__f=-1;__ch=getchar();}while(__ch>='0'&&__ch<='9'){__x=(__x<<1)+(__x<<3)+(__ch^48);__ch=getchar();}__x*=__f;return __x;}\nint n,m;\nint t;\nint sum[maxn];\nint L[maxn],R[maxn],POS[maxn];\nbool tag[maxn];\nbool a[maxn];\ninline void change(int l,int r){\n\tint p=POS[l],q=POS[r];\n\tif(p==q){\n\t\tfor(rg int i=l;i<=r;i++){\n\t\t\tif(a[i]!=1){\n\t\t\t\ta[i]=1;\n\t\t\t\tsum[p]++;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tfor(rg int i=p+1;i<=q-1;i++)tag[i]=1;\n\tfor(rg int i=l;i<=R[p];i++){\n\t\tif(a[i]!=1){\n\t\t\ta[i]=1;\n\t\t\tsum[p]++;\n\t\t}\n\t}\n\tfor(rg int i=L[q];i<=r;i++){\n\t\tif(a[i]!=1){\n\t\t\ta[i]=1;\n\t\t\tsum[q]++;\n\t\t}\n\t}\n}\ninline int ask(int l,int r){\n\tint p=POS[l],q=POS[r];\n\tint ans=0;\n\tif(p==q){\n\t\tif(tag[p])ans+=r-l+1;\n\t\telse for(rg int i=l;i<=r;i++)ans+=a[i];\n\t\treturn ans;\n\t}\n\tfor(rg int i=p+1;i<=q-1;i++)\n\tif(tag[i])ans+=R[i]-L[i]+1;\n\telse ans+=sum[i];\n\tif(tag[p])ans+=R[p]-l+1;\n\telse for(rg int i=l;i<=R[p];i++)ans+=a[i];\n\tif(tag[q])ans+=r-L[q]+1;\n\telse for(rg int i=L[q];i<=r;i++)ans+=a[i];\n\treturn ans;\n}\nint x,y;\nint main(){\n//\tfreopen(\"testdata.in\",\"r\",stdin);\n\tread(n),read(m);\n\tt=sqrt(n);\n\tfor(rg int i=1;i<=n/t;i++){\n\t\tL[i]=(i-1)*sqrt(n)+1;\n\t\tR[i]=i*sqrt(n);\n\t}\n\tif(R[t]<n)t++,L[t]=R[t-1]+1,R[t]=n;\n\tfor(rg int i=1;i<=t;i++)\n\t\tfor(rg int j=L[i];j<=R[i];j++)\n\t\tPOS[j]=i;\n\twhile(m--){\n\t\tread(x),read(y);\n\t\tchange(x,y);\n\t//\tcout<<x<<' '<<y<<endl;\n\t//\tfor(int i=1;i<=n;i++)cout<<a[i]<<' ';puts(\"\");\n\t//\tfor(int i=1;i<=t;i++)cout<<sum[i]<<' ';puts(\"\");\n\t//\tfor(int i=1;i<=t;i++)cout<<tag[i]<<' ';puts(\"\");\n\t\tprintf(\"%d\\n\",n-ask(1,n));\n\t}\n}\n\n```\n#### \u5f97\u5f97\u5f97\u5f97\u5f97\u5f97\u5f97\u5f97\u5f97\u5f97\u5f97\u5f97\n\u5176\u5b9e\u5206\u5757\u901f\u5ea6\u4e0d\u5feb\uff0c\u6211\u7528\u4e86$ Register+Inline+Fastread $\u624d\u8fc7\uff0c\u4f46\u662f\u7528\u9014\u5f88\u5e7f\u6cdb\uff0c\u51e0\u4e4e\u6240\u6709$ n^2 $\u7684\u5e8f\u5217\u64cd\u4f5c\u90fd\u80fd\u505a\uff0c\u5e38\u6570\u8fd8\u5f88\u5c0f\u3002\u6211\u5199\u8fd9\u7bc7\u4e3b\u8981\u662f\u4e3a\u4e86~~\u88c5B~~\u7ec3\u4e60\u4e00\u4e0b\u6211\u7684\u5206\u5757\uff0c\u62d3\u5c55\u8bfb\u8005\u7684\u829d\u58eb\u3002\n### \u4f46\u6211\u8fd8\u6709\u4e00\u4e2a\u5c0f\u5c0f\u7684\u95ee\u9898\u5e0c\u671b\u7ba1\u7406\u5927\u5927\u548c\u8bfb\u8005\u5de8\u4f6c\u89e3\u7b54\n\u4e00\u4e2a\u6211\u7591\u60d1\u81f3\u4eca\u7684\u95ee\u9898\n\n#### \u4e3a\u4ec0\u4e48\u6211\u8fd9\u4e48\u5206\u5757\u4f1a$ Wa $\uff1f\n```cpp\nt=sqrt(n);\nfor(int i=1;i<=t;i++){\n\tL[i]=R[i-1]+1;\n\tR[i]=L[i]+t-1;\n}\n```\n\n#### \u4f46\u662f\u8fd9\u6837\u5c31$ A $\u4e86\uff1f\uff1f\n```cpp\nt=sqrt(n);\nfor(rg int i=1;i<=t;i++){\n\tL[i]=(i-1)*sqrt(n)+1;\n\tR[i]=i*sqrt(n);\n}\n```\n\u6211\u4ed4\u7ec6\u4e00\u63a8\u5f0f\u5b50\u611f\u89c9\u4e5f\u6ca1\u6709\u95ee\u9898\uff0c\u751a\u81f3\u5199\u4e86\u5bf9\u62cd\n![](https://cdn.luogu.com.cn/upload/image_hosting/2msqms4p.png)\n#### $Excuse \\  me $??",
        "postTime": 1584857377,
        "uid": 100325,
        "name": "peterwuyihong",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1840 \u3010Color the Axis\u3011"
    },
    {
        "content": "## \u9898\u76ee\u94fe\u63a5\uff1a\n\n[Color the Axis_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0805\uff09](<https://www.luogu.org/problem/P1840>)\n\n## \u9898\u76ee\u63cf\u8ff0\uff1a\n\n\u5728\u4e00\u6761\u6570\u8f74\u4e0a\u6709$N$\u4e2a\u70b9\uff0c\u5206\u522b\u662f$1 \\rightarrow N$\u3002\u4e00\u5f00\u59cb\u6240\u6709\u7684\u70b9\u90fd\u88ab\u67d3\u6210\u9ed1\u8272\u3002\u63a5\u7740\u6211\u4eec\u8fdb\u884c$M$\u6b21\u64cd\u4f5c\uff0c\u7b2c$i$\u6b21\u64cd\u4f5c\u5c06$[L_i,R_i]$\u8fd9\u4e9b\u70b9\u67d3\u6210\u767d\u8272\u3002\u8bf7\u8f93\u51fa\u6bcf\u4e2a\u64cd\u4f5c\u6267\u884c\u540e\u5269\u4f59\u9ed1\u8272\u70b9\u7684\u4e2a\u6570\u3002\n\n## \u89e3\u9898\u601d\u8def\uff1a\n\n\u8fd9\u4e2a\u9898\u7684\u601d\u8def\u5f88\u7b80\u5355\uff0c\u628a\u9ed1\u8272\u7684\u90e8\u5206\u5f53\u62101\uff0c\u767d\u8272\u7684\u90e8\u5206\u5f53\u62100\u6765\u5904\u7406\uff0c\u4f7f\u7528\u652f\u6301\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u7684\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\u3002  \n\n\u5982\u679c\u4f60\u548c\u6211\u4e00\u6837\u662f\u5199\u7ebf\u6bb5\u6811\u7684\uff0c\u90a3\u4e48\u66f4\u7b80\u5355\u4e86\uff0c\u5728\u4e0b\u4f20lazytag\u7684\u65f6\u5019\u53ea\u9700\u8981\u5c06\u5176\u7684\u5de6\u53f3\u8282\u70b9\u6e05\u96f6\u5373\u53ef\u3002\n\n\u53e6\u5916\u5728\u533a\u95f4\u67e5\u8be2\u65f6\u7531\u4e8e\u6bcf\u6b21\u90fd\u662f\u67e5\u6574\u6bb5\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u8f93\u51fa`tree[1].num`\u5373\u53ef\n\n## \u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <algorithm>\nusing namespace std;\nconst int N = 200010;\nconst int M = 500010<<1;\ninline int read() {\n\tint x = 0,f = 1;char v = getchar();\n\twhile (!isdigit(v)) {if (v =='-') f = -1;v = getchar();}\n\twhile (isdigit(v)) {x = x * 10 + v - 48;v = getchar();}\n\treturn x * f;\n}\n\nstruct node {\n\tint l,r,num,tag;\n}tree[N<<2];\n\ninline void build(int p,int l,int r) {\n\ttree[p].l = l;tree[p].r = r;\n\tif (l == r) {\n\t\ttree[p].num = 1;\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild (p << 1,l,mid);\n\tbuild (p << 1 | 1,mid + 1,r);\n\ttree[p].num = tree[p<<1].num + tree[p << 1 | 1].num;\n\treturn;\n}\t\n\ninline void spread(int p) {\n\tif (!tree[p].num) {\n\t\ttree[p<<1].num = tree[p<<1|1].num = 0;\n\t}\n}\n\ninline void change (int p,int x,int y) {\n\tif (tree[p].l >= x && tree[p].r <= y) {\n\t\ttree[p].num = 0;\n\t\treturn ; \n\t}\n\tspread(p);\n\tint mid = (tree[p].l + tree[p].r) >> 1;\n\tif (mid >= x) change(p<<1,x,y);\n\tif (mid < y) change(p<<1|1,x,y);\n\ttree[p].num = tree[p<<1].num + tree[p<<1|1].num;\n\treturn ;\n}\n\nint main() {\n\tint n = read(),m = read();\n\tbuild (1,1,n);\n\tfor (int i = 1;i <= m;++i) {\n\t\tint x = read(),y = read();\n\t\tchange(1,x,y);\n\t\tprintf(\"%d\\n\",tree[1].num);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1569119108,
        "uid": 105230,
        "name": "Retired_Doubeecat",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1840 \u3010Color the Axis_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0805\uff09\u3011"
    },
    {
        "content": "\n\u76f4\u63a5\u66b4\u529b\u6a21\u62df\uff0c30\uff0cTLE\n\n\u7ebf\u6bb5\u6811\u5f3a\u505a AC \n\n\u6211\u7684\u61d2\u6807\u8bb0\u4e0b\u4f20\u4e0e\u522b\u4eba\u7684\u4e0d\u540c\n\n\u4e00\u4e2a\u8282\u70b9\u7684\u6743\u503c\u5c31\u4ee3\u8868\u8fd9\u4e2a\u533a\u95f4\u7684\u767d\u70b9\u6570\n\n\u6700\u540e\u76f4\u63a5\u8f93\u51fa\u603b\u70b9\u6570-\u767d\u70b9\u6570\uff0c\u5373\u4e3a\u9ed1\u70b9\u6570\n\n\u4e5f\u53ef\u4ee5\u767d\u7684\u4e3a1\uff0c\u9ed1\u7684\u4e3a0\uff0c\u6b64\u65f6\u6743\u503c\u8868\u793a\u7684\u5c31\u662f\u9ed1\u70b9\u6570\n\n\u6700\u540e\u76f4\u63a5\u8f93\u51fa\u6574\u4e2a\u533a\u95f4\u7684\u6743\u503c\u5c31\u597d\u4e86\n***\n\t\u610f\u4e49\u4e0d\u540c\uff0c\u6807\u8bb0\u4e0b\u653e\u4e5f\u5c31\u4e0d\u540c\n\n***\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nint n,m,ans,sum,tp;\nstruct node{\n\tint l,r,w,f;\n}e[200000*4+5];\n\nvoid pushup(int k){\n\te[k].w=e[k*2].w+e[k*2+1].w;\n}\n\nvoid build(int k,int l,int r){\n\te[k].l=l;e[k].r=r;\n\tif(l==r){e[k].w=0;return;}\n\tint mid=(l+r)/2;\n\tbuild(k*2,l,mid);build(k*2+1,mid+1,r);\n\tpushup(k);\n}\n\nvoid pushdown(int k){\n\te[k].f=0;e[k*2].f=1;e[k*2+1].f=1;\n\te[k*2].w=e[k*2].r-e[k*2].l+1;\n\te[k*2+1].w=e[k*2+1].r-e[k*2+1].l+1;\n}\n\nvoid change_interval(int k,int l,int r){\n\tint ll=e[k].l,rr=e[k].r,mid=(ll+rr)/2;\n\tif(ll>=l&&rr<=r){\n\t\te[k].w=rr-ll+1;\n\t\te[k].f=1;return;\n\t}if(e[k].f) pushdown(k);\n\tif(l<=mid) change_interval(k*2,l,r);\n\tif(r>mid) change_interval(k*2+1,l,r);\n\tpushup(k);\n}\n\nint main()\n{\n\tcin>>n>>m;\n\tbuild(1,1,n);\n//\tcout<<e[1].w;\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tchange_interval(1,x,y);\n\t\tprintf(\"%d\\n\",n-e[1].w);\n\t}return 0;\n}\n```",
        "postTime": 1531921976,
        "uid": 60939,
        "name": "\u6e05\u98ce\u6211\u5df2\u901d",
        "ccfLevel": 0,
        "title": "\u89e3\u9898\u62a5\u544a P1840 \u3010Color the Axis_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0805\uff09\u3011"
    },
    {
        "content": "#P1840 Color the Axis_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0805\uff09\n\n[*\u9898\u9762*](https://www.luogu.org/problemnew/show/P1840)\n\n##\u9898\u610f\u5206\u6790\n\n\u8bf4\u53e5\u5927\u5b9e\u8bdd,\u8fd9\u9898\u6bd4\u7ebf\u6bb5\u6811\u7684\u677f\u5b50\u90fd\u597d\u5199.\n\n\u540c\u5fd7\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u6570\u8f74\u89c6\u4e3a\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$,\u6bcf\u4e00\u4e2a\u70b9\u7684\u503c\u90fd\u4e3a$1$\u7684\u6570\u5217,\u6bcf\u6b21\u64cd\u4f5c\u5c31\u662f\u5c06\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u6570\u5168\u90e8\u53d8\u4e3a0,\u67e5\u8be2\u6574\u4e2a\u6570\u5217\u7684\u503c.\n\n\u5177\u4f53\u5185\u5bb9\u76f4\u63a5\u770b\u4ee3\u7801\u5427.\n\n##\u4ee3\u7801:\n\n```cpp\n\n#include \"cstdio\"\n#include \"iostream\"\n#include \"cstring\"\n#include \"cstring\"\n#include \"queue\"\n#include \"set\"\n#include \"map\"\n#include \"vector\"\n#include \"iomanip\"\n\n#define ll long long\n#define lson id<<1\n#define rson (id<<1)+1\n#define debug(x) printf(\"debug:%lld\\n\",x)\n\nusing namespace std;\n\nll n,m;\n\nstruct SegmentTree//\u505a\u4e00\u4e2a\u5c01\u88c5\n{\n\tstruct node\n\t{\n\t\tll l,r,sum;\n\t\tbool DeleteMark=false;\n\t}t[800010];\n\n\tinline void BuiltTree(ll id,ll l,ll r)\n\t{\n\t\tll mid=(l+r)>>1;\n\t\tt[id].l=l;\n\t\tt[id].r=r;\n\t\tif(l==r)\n\t\t{\n\t\t\tt[id].sum=1;\n\t\t\treturn;\n\t\t}\n\t\tBuiltTree(lson,l,mid);\n\t\tBuiltTree(rson,mid+1,r);\n\t\tPushUp(id);\n\t}\n\n\tinline void delete_(ll id,ll l,ll r,ll x,ll y)\n\t{\n\t\tll mid=(l+r)>>1;\n\t\tif(x<=l&&y>=r)\n\t\t{\n\t\t\tt[id].sum=0;//\u5982\u679c\u8981\u67e5\u8be2\u533a\u95f4\u5305\u542b\u4e86\u5f53\u524d\u533a\u95f4,\u5c31\u628a\u8fd9\u4e2a\u533a\u95f4\u7684\u503c\u5168\u90e8\u53d8\u4e3a1\n\t\t\tt[id].DeleteMark=true;//\u8bb0\u5f55\u5220\u9664\u6807\u8bb0,\u5c06\u5b83\u5728\u6811\u4e0a\u7684\u6240\u6709\u513f\u5b50\u7ed3\u70b9\u7684\u503c\u4e5f\u5168\u90e8\u53d8\u4e3a1\n\t\t\treturn;\n\t\t}\n\t\tPushDown(id);//\u4e0b\u4f20\u6807\u8bb0\n\t\tif(x<=mid)\n\t\t{\n\t\t\tdelete_(lson,l,mid,x,y);\n\t\t}\n\t\tif(y>mid)\n\t\t{\n\t\t\tdelete_(rson,mid+1,r,x,y);\n\t\t}\n\t\tPushUp(id);\n\t}\n\n\tinline void PushDown(ll id)\n\t{\n\t\tif(t[id].DeleteMark)\n\t\t{\n\t\t\tt[lson].DeleteMark=true;//\u83b7\u5f97\u6807\u8bb0\n\t\t\tt[rson].DeleteMark=true;\n\t\t\tt[lson].sum=0;//\u6e05\u7a7a\n\t\t\tt[rson].sum=0;\n\t\t\tt[id].DeleteMark=false;\n\t\t}\n\t}\n\n\tinline ll query()\n\t{\n\t\treturn t[1].sum;\n\t}\n\n\tinline void PushUp(ll id)\n\t{\n\t\tt[id].sum=t[lson].sum+t[rson].sum;\n\t}\n\n}tree;\n\nsigned main(void)\n{\n\tscanf(\"%lld%lld\",&n,&m);\n//\tn=10;m=3;\n\ttree.BuiltTree(1,1,n);\n\tfor(ll _=1;_<=m;_++)\n\t{\n\t\tll l,r;\n\t\tscanf(\"%lld%lld\",&l,&r);\n\t\ttree.delete_(1,1,n,l,r);\n\t\tprintf(\"%lld\\n\",tree.query());\n\t}\nreturn 0;\n}\n\n```",
        "postTime": 1563279894,
        "uid": 54986,
        "name": "lemir3",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1840 \u3010Color the Axis_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0805\uff09\u3011"
    },
    {
        "content": "\u4e00\u9053\u88f8\u7684\u7ebf\u6bb5\u6811\uff0c\u767d\u7684\u4e3a1\uff0c\u9ed1\u7684\u4e3a0\u8bbe\u7f6e\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u6bcf\u6b21\u67e5\u8be2\u90fd\u4e3a\u603b\u5171\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u8fd4\u56de\u6839\u5373\u53ef\n\n```cpp\n#include <iostream>\n#define MAX 200010\nusing namespace std;\nint sum[MAX<<2],add[MAX<<2],arr[MAX];\nint n,m;\nvoid pushup(int rt){\n    sum[rt] = sum[rt<<1]+sum[rt<<1|1];\n}\n\nvoid pushdown(int rt){\n    if(add[rt]){\n        add[rt<<1] = 1;\n        add[rt<<1|1] = 1;\n        sum[rt<<1] = 0;\n        sum[rt<<1|1] = 0;\n        add[rt] = 0;\n    }\n}\n\nvoid build(int l,int r,int rt){\n    if(l == r){\n        sum[rt] = arr[l];\n        return;\n    }\n    int m = (l+r)>>1;\n    build(l,m,rt<<1);\n    build(m+1,r,rt<<1|1);\n    pushup(rt);\n}\n\nvoid update(int L,int R,int l,int r,int rt){\n    if(L <= l && r <= R){\n        sum[rt] = 0;\n        add[rt] = 1;\n        return;\n    }\n    int m = (l+r) >> 1;\n    pushdown(rt);\n    if(L <= m) update(L,R,l,m,rt<<1);\n    if(R > m) update(L,R,m+1,r,rt<<1|1);\n    pushup(rt);\n}\n\nint main(){\n    cin >> n >> m;\n    for(int i=1;i<=n;i++){\n        arr[i] = 1;\n    }\n    build(1,n,1);\n    while(m--){\n        int a,b;\n        cin >> a >> b;\n        update(a,b,1,n,1);\n        cout << sum[1] << endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1507051767,
        "uid": 20788,
        "name": "DarkEyeR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1840 \u3010Color the Axis_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0805\uff09\u3011"
    },
    {
        "content": "\u53cd\u6b63\u5c31\u662f\u7ebf\u6bb5\u6811\u4e86\uff0c\u4e0d\u8fc7\u770b\u697c\u4e0b\u4e24\u7bc7\u5199\u7684\u597d\u9ebb\u70e6\u3002\n\n\u601d\u8def\u548c\u697c\u4e0b\u4e00\u6837\uff0c\u5c31\u662f\u5148\u628a1\u5230n\u90fd\u521d\u59cb\u5316\u4e3a1\uff0c\u9ed1\u68cb\u9ed8\u8ba4\u4e3a1\uff0c\u767d\u68cb\u5219\u662f0\u3002\n\n\u6bcf\u6b21\u628a\u4e00\u4e2a\u533a\u95f4\u7684\u9ed1\u68cb\u90fd\u6539\u6210\u767d\u68cb\uff0c\u90a3\u4e48\u53ea\u8981\u8be2\u95ee\u5230\u7684\u533a\u95f4\u5728\u76ee\u6807\u533a\u95f4\u5185\uff0c\u5c31\u628a\u8fd9\u4e2a\u533a\u95f4\u7684\u4e2a\u6570\u76f4\u63a5\u8bbe\u4e3a0\u3002\n\n\u76f4\u63a5\u8f93\u51fa\u7ebf\u6bb5\u6811\u7684\u6839\u8282\u70b9\uff0c\u4e5f\u5c31\u662ftree[1]\u5c31\u884c\u5566\u3002\n\n\u5f53\u7136\u56e0\u4e3a\u662f\u533a\u95f4\u4fee\u6539\u6240\u4ee5\u8981\u7528\u61d2\u6807\u8bb0\u5566\uff0clazylazylazy\u3002\n\n\u56e0\u4e3a\u628a\u9898\u76ee\u4e2d\u7684200000\u770b\u6210\u4e86100000\u800c\u5f00\u5c0f\u4e86\u7a7a\u95f4\uff0c\u6fc0\u60c5RE40\u5206......\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#define lson l,m,rt<<1\n#define rson m+1,r,rt<<1|1\nint tree[840000],lazy[840000],num,n,m,a,b;\nvoid pushup(int rt){\n    tree[rt]=tree[rt<<1]+tree[rt<<1|1];\n}\nvoid pushdown(int rt){\n    if(lazy[rt]==1){\n        if(!lazy[rt<<1])\n            tree[rt<<1]=0;\n        lazy[rt<<1]=1;\n        if(!lazy[rt<<1|1])\n            tree[rt<<1|1]=0;\n        lazy[rt<<1|1]=1;\n        lazy[rt]=0;\n    }\n}\nvoid build(int l,int r,int rt){\n    if(l==r){\n        tree[rt]=1;\n        return;\n    }\n    int m=(l+r)>>1;\n    build(lson);\n    build(rson);\n    pushup(rt);\n}\nvoid update(int l,int r,int rt,int L,int R){\n    if(L<=l&&r<=R){\n        if(!lazy[rt])\n            tree[rt]=0;\n        lazy[rt]=1;\n        return;\n    }\n    pushdown(rt);\n    int m=(l+r)>>1;\n    if(L<=m)\n        update(lson,L,R);\n    if(m<R)\n        update(rson,L,R);\n    pushup(rt);\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    build(1,n,1);\n    for(int i=1;i<=m;++i){\n        scanf(\"%d%d\",&a,&b);\n        update(1,n,1,a,b);\n        printf(\"%d\\n\",tree[1]);\n    }\n    return 0;\n}\n```",
        "postTime": 1504572543,
        "uid": 18207,
        "name": "\u6c5f\u5c7f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1840 \u3010Color the Axis_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0805\uff09\u3011"
    },
    {
        "content": "\u554a\uff0c\u5f88\u88f8\u7684\u7ebf\u6bb5\u6811\uff0cset\u64cd\u4f5c\u7684\u6a21\u677f\u9898\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528add\u64cd\u4f5c\u6765\u505a\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\u4e86\n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#include <cctype>\nusing namespace std;\nint n,m;\nstruct IO {\n    static const int BUFSZ = 500000;\n    char buf[BUFSZ];\n    int idx;\n    IO(){ idx = BUFSZ; }\n    void readfile() {\n        fread( buf , 1 , BUFSZ , stdin );\n    }\n    char getch() {\n        if( idx == BUFSZ ) {\n            readfile(); idx = 0;\n        }\n        return buf[idx++];\n    }\n    int getnum() {\n        int num = 0;\n        char ch;\n        while( isspace(ch=getch()) );\n        do {\n            num *= 10;\n            num += ch-'0';\n        }while( isdigit(ch=getch()) );\n        return num;\n    }\n};\nIO io;\nstruct SGT {\n    int setv[800010];\n    int sumv[800010];\n    int left,right;\n    void build(){ buildtree(1,1,n); }\n    void buildtree( int o , int L , int R ) {\n        if( L == R ) {\n            setv[o] = sumv[o] = 1;\n            return;\n        }\n        int M = L+(R-L)/2;\n        int lc = o<<1; int rc = lc|1;\n        buildtree(lc,L,M);\n        buildtree(rc,M+1,R);\n        setv[o] = -1; // -1\u8868\u793a\u6ca1\u6709\u8bbe\u7f6esetv\u7684\u503c\n        sumv[o] = sumv[lc] + sumv[rc];\n    }\n    void set0( int L , int R ) {\n        left=L; right=R;\n        settree(1,1,n);\n    }\n    void settree( int o , int L , int R ) {\n        if( setv[o] == 0 ) return;\n        if( L >= left && R <= right ) {\n            setv[o] = sumv[o] = 0;\n            return;\n        }\n        int M = L+(R-L)/2;\n        int lc = o<<1; int rc = lc|1;\n        if( left <= M ) settree(lc,L,M);\n        if( right > M ) settree(rc,M+1,R);\n        sumv[o] = sumv[lc] + sumv[rc];\n    }\n    int query() {\n        return sumv[1];\n    }\n};\nSGT sgt;\nint main() {\n    freopen( \"axis.in\" , \"r\" , stdin );\n    freopen( \"axis.out\" , \"w\" , stdout );\n    n = io.getnum(); m = io.getnum();\n    sgt.build();\n    for( int i = 0 ; i < m ; ++i ) {\n        int l = io.getnum();\n        int r = io.getnum();\n        sgt.set0(l,r);\n        printf( \"%d\\n\" , sgt.query() );\n    }\n    return 0;\n}\n\n```",
        "postTime": 1481021284,
        "uid": 8212,
        "name": "__stdcall",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1840 \u3010Color the Axis_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0805\uff09\u3011"
    }
]