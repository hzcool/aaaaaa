[
    {
        "content": "\u8fd9\u4e48\u524d\u9762\u7684\u9898\u76ee\u7adf\u7136\u6ca1\u6709\u9898\u89e3,\u8d76\u7d27\u6765\u5360\u4e2a\u4f4d\n\n~~\u8fd9\u9053\u9898\u770b\u4e0a\u53bb\u5f88\u88f8,\u5b9e\u9645\u4e0a\u4e5f\u5f88\u88f8~~\n\n\u628a\u8f66\u8f66\u770b\u6210\u77e9\u5f62\n\n \u9996\u5148\u4f7f\u8fd9\u4e9b\u77e9\u5f62\u4e0d\u76f8\u4ea4\n\n\u5c31\u662f\u4e00\u4e2a\u77e9\u5f62\u63a5\u4e00\u4e2a\u77e9\u5f62\u4e32\u8d77\u6765(\u7f8a\u8089\u4e32)\n\n\u5047\u5982\u4e24\u4e2a\u77e9\u5f62\u9700\u8981\u8c03\u6362\u7684\u8bdd\uff0c\u90a3\u4e48\u5fc5\u987b\u4fdd\u8bc1,\u4e24\u4e2a\u77e9\u5f62\u7684\u5bbd\u76f8\u52a0$\\leq w$\n\u5982\u679c\u90fd\u80fd\u6ee1\u8db3\u5c31\u662f\u5408\u6cd5\u7684,\u5426\u5219\u4e0d\u5408\u6cd5\n\n\u7136\u540e\u5c31~~\u968f\u4fbf\u7ef4\u62a4~~\u4e00\u4e0b\u5c31\u884c\u4e86(\u6811\u72b6\u6570\u7ec4/\u7ebf\u6bb5\u6811)\n\n \u6446\u653e\u987a\u5e8f\u7684\u8bdd\u90a3\u4e48\u6700\u53f3\u662f\u6700\u540e\u4e00\u4e2a\u653e\u7684\uff0c\u6ca1\u6709\u4efb\u4f55\u969c\u788d\uff0c\n\n\u56e0\u6b64\u53ef\u4ee5\u91c7\u7528\u5012\u63a8,\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u4f4d\u7f6e,\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u7f00\u6700\u503c\u5c31\u53ef\u4ee5\u4e86\u3002 \n\n\n\n\u5982\u9898\u89e3\u6240\u8ff0,\u4ee3\u7801\u4e5f\u5947\u77ed\u65e0\u6bd4\n\n\n\n```cpp\n/*\n * @Author: Huanyue \n * @Date: 2020-02-13 10:42:52 \n * @Last Modified by: Huanyue\n * @Last Modified time: 2020-02-13 11:10:53\n */\n\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n#include <utility>\n#include <vector>\n#define rgi register\ntypedef long long ll;\nusing namespace std;\n\nconst int N = 5e4 + 10;\nconst int inf = 0x3f3f3f3f;\n\ninline void write(register int x)\n{\n    if (x < 0)\n    {\n        putchar('-'), x = -x;\n    }\n    if (x >= 10)\n    {\n        write(x / 10);\n    }\n    putchar('0' + x % 10);\n}\n\ninline int read()\n{\n    int x = 0, f = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9')\n    {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9')\n    {\n        x = ((x << 3) + (x << 1) + (ch ^ 48));\n        ch = getchar();\n    }\n    return x * f;\n}\n\nstruct mat\n{\n    int x1, y1, x2, y2, width, id;\n    friend bool operator<(const mat &a, const mat &b)\n    {\n        if (a.x1 == b.x1)\n            return a.x2 < b.x2;\n        return a.x1 < b.x1;\n    }\n} initial[N], target[N];\n\nint n, w, rk[N];\n//\u6811\u72b6\u6570\u7ec4\nint tree[N];\ninline int lowbit(int x)\n{\n    return x & (-x);\n}\ninline void modify(int x, int v)\n{\n    for (rgi int i = x; i <= n; i += lowbit(i))\n        tree[i] = max(tree[i], v);//\u7ef4\u62a4\u524d\u7f00\u6700\u5927\u503c\n}\ninline int query(int x)\n{\n    int ret = 0;\n    for (int i = x; i; i -= lowbit(i))\n        ret = max(ret, tree[i]);\n    return ret;\n}\n\nint main()\n{\n    int T = read();\n    while (T--)\n    {\n        memset(tree, 0, sizeof(tree));\n        memset(rk, 0, sizeof(rk)); //\u591a\u7ec4\u6570\u636e,\u63a5\u7684memset\n        n = read(), w = read();\n        for (rgi int i = 1; i <= n; i++)\n        {\n            initial[i].x1 = read();\n            initial[2].y1 = read();\n            initial[i].x2 = read();\n            initial[i].y2 = read();\n            if (initial[i].x1 > initial[i].x2)\n                swap(initial[i].x1, initial[i].x2);\n            if (initial[i].y1 > initial[i].y2)\n                swap(initial[i].y1, initial[i].y2);\n\n            initial[i].id = i;\n            initial[i].width = initial[i].y2 - initial[i].y1; //\u8ba1\u7b97\u5bbd\u5ea6\n        }\n        for (rgi int i = 1; i <= n; i++)\n        {\n            target[i].x1 = read(), target[i].y1 = read(), target[i].x2 = read(), target[i].y2 = read();\n            if (target[i].x1 > target[i].x2)\n                swap(target[i].x1, target[i].x2);\n            if (target[i].y1 > target[i].y2)\n                swap(target[i].y1, target[i].y2);\n            target[i].id = i;\n            target[i].width = target[i].y2 - target[i].y1;\n        }\n\n        sort(initial + 1, initial + n + 1);\n        sort(target + 1, target + n + 1);\n\n        for (int i = 1; i <= n; i++)\n            rk[initial[i].id] = i;\n        \n        bool flag = true;//\u7b54\u6848\u6807\u8bb0\n\n        for (rgi int i = n; i; i--)\n        {\n            if (query(rk[target[i].id]) + target[i].width > w)\n                flag = false;\n            if (!flag)\n                break;\n            modify(rk[target[i].id], target[i].width);\n        }\n        if (flag)\n            puts(\"TAK\");\n        else\n            puts(\"NIE\");\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1581563526,
        "uid": 225849,
        "name": "huanyue",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1728 \u3010[PA2014]Parking\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u4f3c\u4e4e\u9898\u89e3\u6bd4\u8f83\u5c11\uff0c\u849f\u84bb\u6211\u8bf4\u4e24\u53e5\u3002\n\n\u7531\u4e8e\u7b2c\u4e00\u6b21\u6295\u9898\u89e3\u4e0d\u4e86\u89e3\u89c4\u8303\uff0c\u6ca1\u6709\u6309\u7167\u8981\u6c42\uff0c\u76ee\u524d\u5df2\u4fee\u6539\u3002\n\n------------\n### \u6838\u5fc3\u4fe1\u606f\uff1a\n\n\u505c\u8f66\u573a\u662f\u4e00\u4e2a\u957f\u6761\u77e9\u5f62\uff0c\u5bbd\u5ea6\u4e3a $ w $ \u3002\u6211\u4eec\u4ee5\u5176\u5de6\u4e0b\u89d2\u9876\u70b9\u4e3a\u539f\u70b9\uff0c\u5750\u6807\u8f74\u5e73\u884c\u4e8e\u77e9\u5f62\u7684\u8fb9\uff0c\u5efa\u7acb\u76f4\u89d2\u5750\u6807\u7cfb\u3002\u505c\u8f66\u573a\u5f88\u957f\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u5b83\u4e00\u76f4\u5411\u53f3\u8fb9\u4f38\u5c55\u5230\u65e0\u7a77\u8fdc\u5904\u3002\n\n\u8f66\u90fd\u662f\u8fb9\u5e73\u884c\u4e8e\u5750\u6807\u8f74\u7684\u77e9\u5f62\uff0c\u5927\u5c0f\u53ef\u80fd\u4e0d\u540c\u3002\u4f60\u53ef\u4ee5\u5c06\u8f66**\u4efb\u610f\u5730\u5e73\u79fb**\uff08\u4f46\u4e0d\u80fd\u65cb\u8f6c\uff09\uff0c\u53ea\u8981\u4ed6\u4eec\u4e0d\u8d85\u51fa\u505c\u8f66\u573a\u7684\u8fb9\u754c\uff0c\u4e14\u4e0d\u80fd\u4e92\u76f8\u78b0\u649e\uff0c\u4f46\u7d27\u6328\u7740\u662f\u5141\u8bb8\u7684\uff08\u5373\u4efb\u610f\u65f6\u523b\u4efb\u4e24\u8f86\u8f66\u7684\u91cd\u53e0\u9762\u79ef\u4e3a   $ 0 $ \uff09 \u3002\n\n\n------------\n### get \u5230\u7684\u4fe1\u606f\uff1a\n\n\n#### 0 \u3001\u521d\u59cb\u4f4d\u7f6e\u548c\u76ee\u6807\u4f4d\u7f6e\u90fd\u662f\u5408\u6cd5\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u91cd\u53e0\n\n\n#### 1 \u3001\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\u5e73\u79fb\u5230\u76ee\u6807\u4f4d\u7f6e\uff0c\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u6709\u91cd\u53e0\n\n\u60f3\u4e00\u4e0b\uff0c\u4e00\u6761\u7a84\u7a84\u7684\u5df7\u5b50\u91cc\u9762\u5df2\u7ecf\u585e\u4e86\u4e00\u4e2a\u5927\u80d6\u5b50\uff08\u65e0\u610f\u5192\u72af\uff09\uff0c\u53ea\u7559\u4e0b\u4e86\u4e00\u6761\u7a7a\u9699\uff0c\u5982\u679c\u6709\u4eba\u60f3\u7ecf\u8fc7\u4ed6\uff0c\u5c31\u4e00\u5b9a\u8981\u6bd4\u8fd9\u4e2a\u7a7a\u9699\u7626\u624d\u884c\u3002\n\n\u8fd9\u4e00\u9898\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u5bf9\u4e8e\u67d0\u4e00\u8f86\u8f66\u800c\u8a00\uff0c\u4ece\u4ed6\u7684\u8d77\u59cb\u4f4d\u7f6e\u5230\u76ee\u6807\u4f4d\u7f6e\u7684\u8def\u5f84\u4e0a\uff0c\u4e0d\u80fd\u6709**\u6bd4\u4ed6\u7559\u4e0b\u7684\u7a7a\u9699\u8fd8\u8981\u80d6\u7684\u8f66\u8f66**\uff0c\u5373  $w_{i} + w_{j} \u2264 W$  \u3002\n\n ~~\u8f66\u8f66\uff0c\u597d\u5feb\u7684\u8f66\u8f66~~\n\n\u4e24\u8f86\u8f66\u8981\u64e6\u80a9\u800c\u8fc7\uff0c\u65e0\u975e\u5c31\u662f\u610f\u5473\u7740**\u4e24\u8f66\u7684\u8def\u5f84\u6709\u4ea4\u96c6**\n\n\u540c\u5b66\u4eec\u53ef\u4ee5\u81ea\u5df1\u5728\u7eb8\u4e0a\u753b\u4e00\u4e0b\u63a2\u8ba8\u4e00\u4e0b\u4ec0\u4e48\u60c5\u51b5\u624d\u4f1a\u76f8\u4ea4\n\n\u6211\u4eec\u5148\u6765\u770b\u8f86\u5f20\u56fe\u7247\uff1a\n\n![](https://web-files-1257015149.file.myqcloud.com/img/pic/luogu/p1728-1.png)\n\n\u5728\u4e0a\u56fe\u4e2d\uff0c\u7eff\u76ee\u6807\u4f4d\u7f6e\u6bd4\u9ec4\u5927\uff0c\u7eff\u521d\u59cb\u4f4d\u7f6e\u6bd4\u9ec4\u5c0f\uff0c\u4f1a\u76f8\u4ea4\n\n\u5728\u4e0b\u56fe\u4e2d\uff0c\u7eff\u76ee\u6807\u4f4d\u7f6e\u6bd4\u9ec4\u5927\uff0c\u521d\u59cb\u4f4d\u7f6e\u6bd4\u9ec4\u5927\u3002\n\n\u540c\u5b66\u4eec\u53ef\u4ee5\u81ea\u5df1\u753b\u4e00\u4e0b\uff0c\u53ef\u4ee5\u603b\u7ed3\u51fa\u6765\uff0c**\u76ee\u6807\u4f4d\u7f6e\u5927\u7684\uff0c\u521d\u59cb\u4f4d\u7f6e\u5c0f\uff0c\u5c31\u4f1a\u76f8\u4ea4**\u3002\n\n\n\n **\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u76ee\u6807\u4f4d\u7f6e\u6bd4\u4ed6\u5927\u7684\u8f66\u4e2d\uff0c\u521d\u59cb\u4f4d\u7f6e\u6bd4\u4ed6\u5c0f\u7684\u8f66\u7684\u5bbd\u5ea6\u6700\u5927\u503c\u3002**\n\n\u66f4\u5177\u4f53\u7684\uff0c\u6211\u4eec\u6309\u7167\u521d\u59cb\u4f4d\u7f6e\u7531**\u5c0f\u5230\u5927\u5347\u5e8f\u7f16\u53f7**\uff0c\u6309\u7167\u76ee\u6807\u4f4d\u7f6e\u7531**\u5927\u5230\u5c0f\u904d\u5386**\uff0c\u8bbe\u5f53\u524d\u8f66\u4e3a $ i $\uff0c\u5982\u679c\u6709\u4e00\u8f86\u8f66 $ j $\uff0c\u7f16\u53f7\u6bd4\u4ed6\u5c0f\u4e14 $ w_{i} + w_{j} \u2265 W $ \uff0c\u5219\u4e0d\u5408\u6cd5\u3002\n\n\u83b7\u5f97\u6bd4\u4ed6\u7f16\u53f7\u5c0f\u7684\u6240\u6709\u6570\u5b57\u4e2d\u7684\u6700\u5927\u503c\uff0c**\u6811\u72b6\u6570\u7ec4**\u662f\u6700\u597d\u7684\u65b9\u6848\u3002\n\n\n\n\n\n------------\n### \u4ee3\u7801\u5b9e\u73b0\uff1a\n\u9996\u5148\u662f\u7ed3\u6784\u4f53\uff0c\u50a8\u5b58\u6bcf\u4e00\u4e2a\u8f66\u7684\u8d77\u59cb\u4f4d\u7f6e\u548c\u76ee\u6807\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u8981\u8f93\u5165\u4e24\u6b21\uff0c\u6240\u4ee5\u628a\u8f93\u5165\u5199\u5230\u7ed3\u6784\u4f53\u4e2d\u662f\u4e00\u4e2a\u597d\u529e\u6cd5\uff0c\u53e6\u5916\u6211\u4eec\u8fd8\u9700\u8981\u91cd\u8f7d\u64cd\u4f5c\u7b26\uff1a\n\n```cpp\nstruct node{\n    int id, w, x[2], y[2];\n    bool operator < (const node other) const {\n        if(x[0] == other.x[0]){\n            return x[1] < other.x[1];\n        }\n        return x[0] < other.x[0];\n    };\n    void read(){\n        cin >> x[0] >> y[0] >> x[1] >> y[1];\n        if(x[0] > x[1]){\n            swap(x[1], x[0]);\n        }\n        w = abs(y[1] - y[0]);\n    }\n    //id\u4e3a\u8fd9\u8f86\u8f66\u662f\u7b2c\u51e0\u8f86\uff0c\u65b9\u4fbf\u628a\u521d\u59cb\u4f4d\u7f6e\u548c\u76ee\u6807\u4f4d\u7f6e\u8054\u7cfb\u8d77\u6765\n};\n```\n\u7528 $ s $ \u548c $ t $ \u6765\u8868\u793a\u521d\u59cb\u4f4d\u7f6e\u548c\u76ee\u6807\u4f4d\u7f6e\uff0c\u8f93\u5165\u5e76\u6392\u5e8f\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\n\n\u7528\u6570\u7ec4 $ r $ \u6765\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u8f66\u7684\u7f16\u53f7\u3002\n\n\u7136\u540e\u8fdb\u884c\u5012\u5e8f\u5bf9\u76ee\u6807\u8f66\u8f86\u904d\u5386\uff0c\u5982\u679c\u6811\u72b6\u6570\u7ec4\u4e2d\u7f16\u53f7\u6bd4\u4ed6\u5c0f\u7684\u8f66\u4e2d\u6700\u5927\u503c\u548c\u8fd9\u8f86\u8f66\u7684\u5bbd\u5ea6\u4e4b\u548c\u5927\u4e8e $ w $ \uff0c\u5373 $ w_{max} + w_{i} \u2265 w $ \u5219\u4e0d\u5408\u6cd5.\n\n```cpp\n\tsort(s + 1, s + n + 1);\n        sort(t + 1, t + n + 1);\n        for(int i = 1; i <= n; i++){\n            r[s[i].id] = i;\n        }\n        for(int i = n; i >= 1; i--){\n            if(get(r[t[i].id]) + t[i].w > w){\n                cout << \"NIE\" << endl;\n                goto over;\n            }\n            update(r[t[i].id], t[i].w);\n        }\n        cout << \"TAK\" << endl;\n        over:;\n```\n\n\u81f3\u6b64\uff0c\u89e3\u51b3\u3002\n\n### \u5168\u90e8\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n\n\nconst int MAXN = 5e4 + 5;\n\nstruct node{\n    int id, w, x[2], y[2];\n    bool operator < (const node other) const {\n        if(x[0] == other.x[0]){\n            return x[1] < other.x[1];\n        }\n        return x[0] < other.x[0];\n    };\n    void read(){\n        cin >> x[0] >> y[0] >> x[1] >> y[1];\n        if(x[0] > x[1]){\n            swap(x[1], x[0]);\n        }\n        w = abs(y[1] - y[0]);\n    }\n};\n\nint n, w;\nint c[MAXN], r[MAXN];\nnode s[MAXN], t[MAXN];\n\nint lowbit(int x){\n    return x & (-x);\n}\n\nint get(int x){\n    int res = 0;\n    for(; x; x -= lowbit(x)){\n        res = max(res, c[x]);\n    }\n    return res;\n}\n\nvoid update(int x, int v){\n    for(; x <= n; x += lowbit(x)) {\n        c[x] = max(c[x], v);\n    }\n}\n\nint main(){\n    std::ios::sync_with_stdio(false);\n    int T;\n    cin >> T;\n    while(T--){\n        memset(c, 0, sizeof(c));\n        cin >> n >> w;\n        for(int i = 1; i <= n; i++){\n            s[i].id = i;\n            s[i].read();\n        }\n        for(int i = 1; i <= n; i++){\n            t[i].id = i;\n            t[i].read();\n        }\n        sort(s + 1, s + n + 1);\n        sort(t + 1, t + n + 1);\n        for(int i = 1; i <= n; i++){\n            r[s[i].id] = i;\n        }\n        for(int i = n; i >= 1; i--){\n            if(get(r[t[i].id]) + t[i].w > w){\n                cout << \"NIE\" << endl;\n                goto over;\n            }\n            update(r[t[i].id], t[i].w);\n        }\n        cout << \"TAK\" << endl;\n        over:;\n    }\n    \n    return 0;\n}\n```\n\n\n\n\n\n\n\n",
        "postTime": 1629683282,
        "uid": 242606,
        "name": "FishZe",
        "ccfLevel": 6,
        "title": "P1728 [PA2014]Parking"
    }
]