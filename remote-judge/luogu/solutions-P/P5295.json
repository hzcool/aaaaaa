[
    {
        "content": "\u6211\u770b\u6ca1\u6709\u5177\u4f53\u8bc1\u660e\u6bcf\u4e2a\u90e8\u5206\u7684\uff0c\u4e8e\u662f\u4fbf\u6765\u4e00\u53d1\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4eab\u53d7\uff1a\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/kamimxr/p/11683691.html)\n\n\u9996\u5148\u4f60\u4f1a\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff1a\u4e00\u4e2a\u56fe\u7b26\u5408\u6761\u4ef6\u5f53\u4e14\u4ec5\u5f53E<=2*V-2;\n\n\u8bc1\u660e(\u7b80\u6d01\u6613\u61c2)\uff1a\n\n\u56e0\u4e3a\u5047\u8bbe\u56fe\u4e2d\u67092*V-2\u6761\u8fb9\uff0c\u4e3a\u4e86\u7b26\u5408\u6761\u4ef6\uff0c\u4e00\u5b9a\u662f\u6709\u4e00\u9897\u767d\u8272\u751f\u6210\u6811\u548c\u4e00\u9897\u9ed1\u8272\u751f\u6210\u6811\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u6ca1\u6709\u5176\u4ed6\u7684\u60c5\u51b5\uff1b\n\n\u90a3\u4e48\u5982\u679c\u518d\u591a\u4e00\u6761\u8fb9\u5462\uff1f\u663e\u7136\uff0c\u586b\u5728\u4efb\u610f\u4f4d\u7f6e\u90fd\u4f1a\u4f7f\u4efb\u610f\u4e00\u9897\u6811\u53d8\u6210\u57fa\u73af\u6811\uff0c\u5bfc\u81f4\u4e00\u79cd\u989c\u8272\u6210\u73af\uff0c\u4e0d\u6210\u7acb\uff1b\n\n\u6240\u4ee5E\u7684\u6700\u5927\u503c\u5c31\u662f2*V-2\uff1b\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u662f\u5224\u65ad\u4efb\u610f\u4e00\u4e2a\u5b50\u56fe\u7684E-2*V<=-2;\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u53ea\u8981\u5224\u5b9a\u4e00\u4e2aE-2*V\u6700\u5927\u7684\u5b50\u56fe\u662f\u5426<=-2\u5c31\u597d\u4e86\uff1b\n\n\u600e\u4e48\u6c42\u5462\uff1f\u8fd9\u65f6\u5019\u5f15\u5165\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u7684\u6982\u5ff5\u5c31\u53ef\u4ee5\u79d2\u51fa\u7b54\u6848\u4e86\n\n\n------------\n\n\n\u9996\u5148\u6765\u8bf4\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u7684\u5b9a\u4e49\uff1a\n\n\u5728\u4e00\u4e2a\u6709\u5411\u56fe\u4e2d\uff0c\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e00\u4e2a\u70b9\u6743\uff1a\n\n\u3000\u3000\u95ed\u5408\u5b50\u56fe\uff1a\u5bf9\u4e8e\u8fd9\u4e2a\u5b50\u56fe\uff0c\u5b83\u4efb\u610f\u4e00\u4e2a\u70b9\u7684\u7684\u540e\u7ee7\u5fc5\u987b\u5728\u8fd9\u4e2a\u5b50\u56fe\u4e2d\uff1b\u3000\n\n\u3000\u3000\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\uff1a\u5728\u6240\u6709\u7684\u95ed\u5408\u5b50\u56fe\u4e2d\uff0c\u8be5\u56fe\u7684\u70b9\u6743\u548c\u6700\u5927\uff1b\n  \u6c42\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u662f\u6807\u51c6\u7684\u7f51\u7edc\u6d41\u5efa\u6a21\u6a21\u578b\uff1b\n\n\u3000\u3000\u9996\u5148\u6211\u4eec\u5efa\u7acb\u8d85\u7ea7\u6e90S\u548c\u8d85\u7ea7\u6c47T\uff1b\u628a\u6240\u6709\u70b9\u6743\u4e3a\u6b63\u7684\u70b9\u4e0eS\u8fde\u63a5\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u65b9\u5411\u662f\u4eceS\u5230u\uff0c\u8fb9\u6743\u662f\u70b9\u6743\uff1b\u628a\u6240\u6709\u70b9\u6743\u4e3a\u8d1f\u7684\u70b9\u4e0eT\u8fde\u63a5\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u65b9\u5411\u662f\u4eceu\u5230T\uff0c\u8fb9\u6743\u662f\u70b9\u6743\u7684\u76f8\u53cd\u6570\uff1b\u539f\u56fe\u4e2d\u6240\u6709\u6709\u5411\u8fb9\u7684\u8fb9\u6743\u662fINT_MAX\uff1b\n\n\u3000\u3000\u7136\u540e\u5e72\u4ec0\u4e48\u5462\uff1f\u6211\u4eec\u5148\u770b\u4e00\u770b\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u7684\u5b9a\u4e49\uff1a\u7b54\u6848\u662f(\u6240\u6709\u7684\u6b63\u70b9\u6743\u70b9\u7684\u6743\u503c\u548c-\u4e0d\u5728\u8be5\u56fe\u4e2d\u7684\u6b63\u70b9\u6743\u70b9\u7684\u6743\u503c\u548c-\u5728\u8be5\u56fe\u4e2d\u8d1f\u70b9\u6743\u70b9\u7684\u6743\u503c\u548c)=(\u6240\u6709\u7684\u6b63\u70b9\u6743\u70b9\u7684\u6743\u503c\u548c-(\u4e0d\u5728\u8be5\u56fe\u4e2d\u7684\u6b63\u70b9\u6743\u70b9\u7684\u6743\u503c\u548c+\u5728\u8be5\u56fe\u4e2d\u8d1f\u70b9\u6743\u70b9\u7684\u6743\u503c\u548c));\n\n\u3000\u3000\u5bf9\u4e8e\u6240\u6709\u6b63\u70b9\u6743\u70b9\u7684\u6743\u503c\u548c\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u9884\u5904\u7406\u51fa\u6765\uff0c\u5173\u952e\u662f\u540e\u9762\u7684\u90e8\u5206\u600e\u4e48\u6c42\uff1b\n\n\u3000\u3000\u6700\u5c0f\u5272\u7684\u5b9a\u4e49\u662f\u5728\u53bb\u9664\u67d0\u4e9b\u8fb9\u540e\uff0cS\u4e0eT\u4e0d\u8fde\u901a\uff0c\u4e14\u53bb\u6389\u7684\u8fb9\u7684\u6743\u503c\u548c\u6700\u5c0f\uff1b\n\n\u3000\u3000\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u5272\u6389\u7684\u8fb9\u7684\u5b9a\u4e49\uff1a\u82e5\u5272\u6389\u7684\u8fb9\u4e0eS\u76f8\u8fde\uff0c\u90a3\u4e48\u8868\u793a\u8fd9\u6761\u8fb9\u6240\u5bf9\u5e94\u7684\u70b9u\u4e0d\u5728\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u4e2d\uff1b\u82e5\u5272\u6389\u7684\u8fb9\u4e0eT\u76f8\u8fde\uff0c\u90a3\u4e48\u8868\u793a\u8fd9\u6761\u8fb9\u6240\u5bf9\u5e94\u7684\u70b9u\u5728\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u4e2d\uff1b\u6ce8\u610f\uff1a\u6240\u6709\u5272\u6389\u7684\u8fb9\u4e00\u5b9a\u4e0eS\u6216T\u76f8\u8fde\uff1b\n  \n  \u5047\u8bbeS\u4e0eT\u8054\u901a\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u70b9\u5bf9(x,y),\u4f7f\u5f97S\u5230x\u6709\u8fb9\uff0cy\u5230T\u6709\u8fb9\uff0c\u4e14\u5b58\u5728\u4e00\u6761x\u5230y\u7684\u8def\u5f84\uff1b\u56e0\u4e3aS\u5230x\u6709\u8fb9\uff0c\u90a3\u4e48x\u5728\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u4e2d\uff0c\u56e0\u4e3ay\u5230T\u6709\u8fb9\uff0c\u90a3\u4e48y\u4e0d\u5728\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u4e2d\uff1b\u800cy\u4e00\u5b9a\u662fx\u7684\u540e\u7ee7\uff0c\u6240\u4ee5y\u4e00\u5b9a\u5728\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u4e2d\uff0c\u8fd9\u4e0e\u4e4b\u524d\u7684\u5b9a\u4e49\u77db\u76fe\uff0c\u6240\u4ee5\u6761\u4ef6\u4e0d\u6210\u7acb\uff0cS\u4e0eT\u4e0d\u8fde\u901a\uff1b\n\n\u3000\u3000\u6240\u4ee5\u6700\u5c0f\u5272\u5c31\u662f(\u4e0d\u5728\u8be5\u56fe\u4e2d\u7684\u6b63\u70b9\u6743\u70b9\u7684\u6743\u503c\u548c+\u5728\u8be5\u56fe\u4e2d\u8d1f\u70b9\u6743\u70b9\u7684\u6743\u503c\u548c);\n\n\u3000\u3000\u8fd9\u5c31\u662f\u540e\u534a\u90e8\u5206\u7684\u7b54\u6848\u4e86\uff1b\n\n\u3000\u3000\u6240\u4ee5\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u7684\u6743\u503c\u548c\u5c31\u662f\u6240\u6709\u70b9\u7684\u70b9\u6743\u548c-\u8be5\u751f\u6210\u56fe\u7684\u6700\u5c0f\u5272\uff1b\n  \n  \n  \n\n------------\n\n \u7136\u540e\u56de\u5230\u672c\u9898:\n \n \u628a\u8fb9\u5316\u6210\u70b9\uff0c\u70b9\u6743\u4e3a1\uff0c\u539f\u6765\u56fe\u4e2d\u7684\u70b9\u7684\u70b9\u6743\u662f-2\n \n \u56e0\u4e3a\u9009\u8fb9\u5c31\u4e00\u5b9a\u8981\u9009\u62e9\u70b9\uff0c\u6240\u4ee5\u6240\u6709\u9009\u62e9\u7684\u70b9\u7684\u540e\u7ee7\u4e00\u5b9a\u8981\u90fd\u88ab\u9009\u62e9\uff1b\n \n \u7136\u540e\u5c31\u6784\u6210\u4e86\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u7684\u6a21\u578b\uff1b\n \n \u6ce8\u610f\u4e00\u4e2a\u7ec6\u8282\uff0c\u9700\u8981\u679a\u4e3e\u6240\u6709\u70b9\u8868\u793a\u5f3a\u5236\u9009\u8fd9\u4e2a\u70b9\uff0c\u5426\u5219\u7b54\u6848\u662f\u4e0d\u6210\u7acb\u7684\uff1b\n \n\n------------\n\n \n \u5982\u679c\u8fd8\u6709\u4e0d\u61c2\u5f97\u53ef\u4ee5\u79c1\u4fe1\u6211\u6216\u8005\u76f4\u63a5\u56de\u590d\u5c31\u53ef\u4ee5\uff1b\n \n \u4ee3\u7801\u653e\u4e0d\u653e\u5462\uff1f\u8fd8\u662f\u653e\u4e0a\u5427\uff1b\u56e0\u4e3a\u6709\u4e9b\u4eba\u8c03\u4e0d\u8fc7\u6765\u7684\u65f6\u5019\u53ef\u4ee5\u53c2\u8003\u53c2\u8003\uff1b\n \n \u4f46\u662f\u6700\u597d\u4e0d\u8981\u76f4\u63a5\u590d\u5236\uff0c\u56e0\u4e3a\u5f53\u4f60\u590d\u5236\u9898\u89e3\u7684\u65f6\u5019\u5c31\u662f\u4f60\u9000\u5f79\u7684\u65f6\u5019\uff1b\n \n ```cpp\n#include <bits/stdc++.h>\n#define inc(i,a,b) for(register int i=a;i<=b;i++)\nusing namespace std;\nclass littlestar{\n\tpublic:\t\t\n\t\tint to;\n\t\tint w;\n\t\tint nxt;\n\t\tvoid add(int u,int v,int gg);\n}star[100010];\nint head[100010],cnt=1;\ninline void littlestar::add(int u,int v,int gg)\n{\n\tto=v;\n\tnxt=head[u];\n\thead[u]=cnt;\n\tw=gg;\n}\ntemplate<class nT>\ninline void read(nT &x)\n{\n\tchar c;\n\twhile(c=getchar(),!isdigit(c));\n\tx=c^48;\n\twhile(c=getchar(),isdigit(c)) x=x*10+c-48;\n}\nint S,T;\nint dis[100010];\nint n,m;\nbool bfs()\n{\n\tmemset(dis,0,sizeof(dis));\n\tqueue<int> q;\n\tq.push(S);\n\tdis[S]=1;\n\twhile(q.size()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[u];i;i=star[i].nxt){\n\t\t\tint v=star[i].to;\n\t\t\tif(!dis[v]&&star[i].w){\n\t\t\t\tdis[v]=dis[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t\tif(v==T) return 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint dinic(int u,int flow)\n{\n\tif(u==T) return flow;\n\tint rest=flow,tmp;\n\tfor(int i=head[u];i&&rest;i=star[i].nxt){\n\t\tint v=star[i].to;\n\t\tif(dis[v]==dis[u]+1&&star[i].w){\n\t\t\ttmp=dinic(v,min(star[i].w,rest));\n\t\t\tif(!tmp) dis[v]=0;\n\t\t\tstar[i].w-=tmp;\n\t\t\tstar[i^1].w+=tmp;\n\t\t\trest-=tmp;\n\t\t}\t\t\n\t}\n\treturn flow-rest;\n}\nint sum=0;\nint tmpu[10000],tmpv[10000];\nint myenum(int s)\n{\n\tmemset(head,0,sizeof(head));\n\tcnt=1;\n\tinc(i,1,m){\n\t\tint u,v;\n\t\tu=tmpu[i]; v=tmpv[i];\n\t\tstar[++cnt].add(S,i,1);\n\t\tstar[++cnt].add(i,S,0);\n\t\tstar[++cnt].add(i,m+u,INT_MAX);\n\t\tstar[++cnt].add(m+u,i,0);\n\t\tstar[++cnt].add(i,m+v,INT_MAX);\n\t\tstar[++cnt].add(m+v,i,0);\n\t}\n\tinc(i,1,n){\n\t\tif(s==i) continue;\n\t\tstar[++cnt].add(i+m,T,2);\n\t\tstar[++cnt].add(T,i+m,0);\n\t}\n\tsum=m-2;\n\twhile(bfs()){\n\t\tsum-=dinic(S,INT_MAX);\n\t}\n\treturn sum;\n}\nint main()\n{\n\tint tt;\n\tread(tt);\n\twhile(tt--){\n\t\tread(n); read(m);\n\t\tS=n+m+1,T=n+m+2;\n\t\tint ans=-INT_MAX;\n\t\tinc(i,1,m) read(tmpu[i]),read(tmpv[i]);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tans=max(ans,myenum(i));\n\t\t}\n\t\tif(ans+2>0){\n\t\t\tcout<<\"No\"<<endl;\n\t\t}\n\t\telse{\n\t\t\tcout<<\"Yes\"<<endl;\n\t\t}\n\t}\n} \n```\n\n  \n  ",
        "postTime": 1571192120,
        "uid": 119189,
        "name": "\u795e\u4e4b\u53f3\u5927\u81e3",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5295 \u3010[\u5317\u4eac\u7701\u9009\u96c6\u8bad2019]\u56fe\u7684\u96be\u9898\u3011"
    },
    {
        "content": "\u7ed9\u5b9a\u4e00\u5f20\u56fe\uff0c\u4f60\u9700\u8981\u9009\u51fa\u4e00\u4e2a\u5b50\u96c6\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u5b50\u96c6\u6ca1\u6709\u73af\uff0c\u5b50\u96c6\u7684\u8865\u96c6\u6ca1\u6709\u73af\u3002\n\n$T \\leq 10$\uff0c$n \\leq 500$\uff0c$m \\leq 10^3$\u3002\n\n***\n\n\n\u4e00\u5f20\u56fe\u662f\u5408\u6cd5\u7684\u5f53\u4e14\u4ec5\u5f53\u5176\u6240\u6709\u5bfc\u51fa\u5b50\u56fe $(V, E)$ \u6ee1\u8db3 $|E| \\leq 2|V|-2$\u3002\n\n\u5fc5\u8981\u6027\u663e\u7136\u3002\u5145\u5206\u6027\u8003\u8651\u5f52\u7eb3\u6cd5\u3002\u6211\u4eec\u901a\u8fc7\u70b9\u6570\u4e3a $|V|-1$ \u7684\u56fe\u6210\u7acb\u63a8\u51fa\u70b9\u6570\u4e3a $|V|$ \u7684\u6210\u7acb\u3002\n\n\u8bbe $d(u)$ \u8868\u793a $u$ \u7684\u5ea6\u6570\uff0c\u6211\u4eec\u53d6 $d$ \u6700\u5c0f\u7684\u4e00\u4e2a\u4f5c\u4e3a\u6211\u4eec\u52a0\u5165\u7684\u70b9 $u$\u3002\n\n\u90a3\u4e48 $1 \\leq d(u) \\leq 3$\u3002\u5426\u5219 $\\sum d=4|V|$\uff0c$|E|=2|V|$\uff0c\u4e0d\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u82e5 $d(u) \\leq 2$\uff0c\u6211\u4eec\u8bbe\u76f8\u90bb\u7684\u70b9\u4e3a $v_1, v_2$\uff0c\u628a $(v_1, u)$ \u52a0\u5165\u7b2c\u4e00\u4e2a\u68ee\u6797\uff0c$(v_2, u)$ \u52a0\u5165\u7b2c\u4e8c\u4e2a\u68ee\u6797\uff0c\u4ecd\u7136\u6ee1\u8db3\u6027\u8d28\u3002\n\n\u82e5 $d(u)=3$\uff0c\u8bbe\u76f8\u90bb\u7684\u70b9\u4e3a $v_1, v_2, v_3$\u3002\u90a3\u4e48\u53bb\u6389 $u$ \u53ca\u5176\u90bb\u8fb9\u7684\u6240\u6709\u56fe $G$ \u6ee1\u8db3 $|E|<2|V|-2$\u3002\n\n\u6211\u4eec\u8003\u8651\u4e09\u4e2a\u5bfc\u51fa\u5b50\u56fe $H_1(E_1, V_1)$, $H_2(E_2, V_2)$, $H_3(E_3, V_3)$\uff0c$H_1$ \u4e0d\u5305\u542b $(u, v_1)$ \u4f46\u5305\u542b $v_2, v_3$\uff0c$H_2$ \u4e0d\u5305\u542b $(u, v_2)$ \u4f46\u5305\u542b $v_1, v_3$\uff0c$H_3$ \u4e0d\u5305\u542b $(u, v_3)$ \u4f46\u5305\u542b $v_1, v_2$\u3002\u8fd9\u6837\u7684 $H_1, H_2, H_3$ \u6709\u5f88\u591a\u79cd\u3002\u4f46**\u81f3\u5c11\u6709\u4e00\u4e2a** $i$ **\u6ee1\u8db3\u4e0d\u5b58\u5728** $H_i$ **\u4f7f\u5f97** $|E_i|=2|V_i|-2$\u3002\n\n\u5f15\u7406\uff1a\u82e5 $G_1(E_1, V_1), G_2(E_2, V_2)$ \u6ee1\u8db3 $|E_1|=2|V_1|-2, |E_2|=2|V_2|-2$\uff0c\u5219 $G_1 \\cap G_2(E'_1, V'_1), G_1 \\cup G_2(E'_2, V'_2)$ \u6ee1\u8db3 $|E_1'|=2|V_1'|-2, |E_2'|=2|V_2'|-2$\u3002\u56e0\u4e3a\u4ea4 + \u5e76 = \u548c\uff0c\u5047\u5982\u4e00\u4e2a\u6ca1\u8fbe\u5230\u4e0a\u754c\uff0c\u53e6\u4e00\u4e2a\u5c31\u8981\u8d85\u8fc7\u4e0a\u754c\u3002\n\n\u4f7f\u7528\u53cd\u8bc1\u6cd5\uff0c\u82e5\u4e09\u4e2a $H$ \u90fd\u80fd\u8fbe\u5230\u4e0a\u754c\uff0c\u90a3\u4ed6\u4eec\u7684\u5e76\u4e5f\u8fbe\u5230\u4e86\u4e0a\u754c\uff0c\u800c\u4ed6\u4eec\u7684\u5e76\uff0c\u5c31\u662f $G$\u3002\u77db\u76fe\u3002\n\n\u90a3\u4e48\u5047\u8bbe $H_1$ \u8fbe\u4e0d\u5230\u4e0a\u754c\uff0c\u90a3\u4e48\u6211\u4eec\u5728 $H_1$ \u4e2d\u52a0\u5165\u4e00\u6761\u8fb9 $(v_2, v_3)$\uff0c\u8fd9\u6837 $H'_1$ \u4e5f\u662f\u5408\u6cd5\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u8fd9\u6837\u4e00\u5f20\u56fe\uff1a\u5728 $(V, E)$ \u7684\u57fa\u7840\u4e0a\uff0c\u9664\u53bb $u$ \u7684\u51fa\u8fb9\uff0c\u52a0\u5165 $(v_2, v_3)$\uff0c\u6839\u636e\u5f52\u7eb3\u5047\u8bbe\uff0c\u5b83\u80fd\u591f\u5206\u6210\u4e24\u4e2a\u68ee\u6797\u3002\n\n\u6211\u4eec\u8bbe\u7b2c\u4e00\u4e2a\u68ee\u6797\u5305\u542b\u4e86 $(v_2, v_3)$\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u8fd9\u6761\u8fb9\u5220\u53bb\uff0c\u52a0\u5165 $(u, v_2), (u, v_3)$\uff0c\u5b83\u8fd8\u662f\u4e00\u4e2a\u68ee\u6797\u3002\u7b2c\u4e8c\u4e2a\u68ee\u6797\u52a0\u5165 $(u, v_1)$\uff0c\u5b83\u8fd8\u662f\u4e00\u4e2a\u68ee\u6797\u3002\n\n\u539f\u547d\u9898\u5f97\u8bc1\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ea\u7528\u5224\u65ad\u8fd9\u5f20\u56fe\u662f\u5426\u6ee1\u8db3\u5bf9\u4e8e\u6240\u6709\u7684\u5b50\u56fe\u6ee1\u8db3 $|E| \\leq 2|V|-2$\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c$\\max\\{|E|-2|V|\\} \\leq -2$\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u7684\u6a21\u578b\u3002\u8003\u8651\u4e00\u6761\u8fb9\u7684\u6743\u503c\u4e3a $1$\uff0c\u4e00\u4e2a\u70b9\u7684\u6743\u503c\u4e3a $-2$\uff0c\u6211\u4eec\u8981\u6c42\u7684\u662f\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u3002\n\n**\u4f46\u662f\u6709\u4e00\u4e2a\u95ee\u9898**\uff01\u8fd9\u4e2a\u5b50\u56fe\u5fc5\u987b\u975e\u7a7a\uff0c\u56e0\u4e3a\u7a7a\u7684\u56fe\u88ab\u5224\u5b9a\u4e3a\u4e0d\u5408\u6cd5\u4e86\u3002\n\n\u6240\u4ee5\u6211\u4eec\u94a6\u5b9a\u4e00\u4e2a\u70b9\u4e00\u5b9a\u88ab\u9009\uff0c\u628a\u5b83\u5728\u7f51\u7edc\u6d41\u4e2d\u7684\u70b9\u5220\u53bb\uff0c\u6700\u540e\u628a\u7b54\u6848\u76f4\u63a5 $-2$ \u5373\u53ef\u3002\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f $O(nm \\sqrt n)$ \u7684\u3002\n\n\uff08\u597d\u50cf\u8fd9\u6837\u5c31\u80fd\u8fc7\u4e86\uff0c\u4f46\u662f uoj \u90a3\u9898\u5c31\u8fc7\u4e0d\u4e86\uff09\n\n\u8003\u8651\u4f18\u5316\uff0c\u53d1\u73b0\u6bcf\u6b21\u662f\u5220\u4e00\u6761\u8fb9\u540e\u7684\u6700\u5927\u6d41\u3002\u4f7f\u7528\u9000\u6d41\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(nm)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int Maxn = 12005;\nint T, n, m, ct, cnt, s, t, ans, cur[Maxn], dis[Maxn], head[Maxn];\nstruct edg\n{\n\tint nxt, to, w;\n} edge[10 * Maxn];\nvoid add(int x, int y, int w)\n{\n\tedge[++cnt] = (edg){head[x], y, w};\n\thead[x] = cnt;\n\tedge[++cnt] = (edg){head[y], x, 0};\n\thead[y] = cnt;\n}\nqueue <int> Qu;\nbool bfs(void)\n{\n\tQu.push(s);\n\tmemset(dis, 0, sizeof(int[ct + 1]));\n\twhile (!Qu.empty())\n\t{\n\t\tint u = Qu.front();\n\t\tQu.pop();\n\t\tif (u == t)\n\t\t{\n\t\t\twhile (!Qu.empty()) Qu.pop();\n\t\t\treturn true;\n\t\t}\n\t\tfor (int i = head[u]; i; i = edge[i].nxt)\n\t\t{\n\t\t\tint to = edge[i].to;\n\t\t\tif (to != s && !dis[to] && edge[i].w) dis[to] = dis[u] + 1, Qu.push(to);\n\t\t}\n\t}\n\treturn false;\n}\nint dfs(int u, int mini)\n{\n\tif (u == t || !mini) return mini;\n\tint w, used = 0;\n\tfor (int & i = cur[u]; i; i = edge[i].nxt)\n\t{\n\t\tint to = edge[i].to;\n\t\tif (dis[to] == dis[u] + 1 && edge[i].w)\n\t\t{\n\t\t\tw = dfs(to, min(mini - used, edge[i].w));\n\t\t\tedge[i].w -= w, edge[((i - 1) ^ 1) + 1].w += w, used += w;\n\t\t\tif (used == mini) return used;\n\t\t}\n\t}\n\treturn used;\n}\nvoid dinic(int w)\n{\n\twhile (bfs())\n\t{\n\t\tmemcpy(cur, head, sizeof(int[ct + 1]));\n\t\tans += w * dfs(s, 0x3f3f3f3f);\n\t}\n}\nint main()\n{\n\tscanf(\"%d\", &T);\n\twhile (T--)\n\t{\n\t\tcnt = ans = 0;\n\t\tmemset(head, 0, sizeof(int[ct + 1]));\n\t\tscanf(\"%d%d\", &n, &m);\n\t\tct = n;\n\t\ts = ++ct, t = ++ct;\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tadd(i, t, 2);\n\t\tfor (int i = 1; i <= m; i++)\n\t\t{\n\t\t\tint x, y;\n\t\t\tscanf(\"%d%d\", &x, &y);\n\t\t\t++ct;\n\t\t\tadd(s, ct, 1);\n\t\t\tadd(ct, x, 0x3f3f3f3f), add(ct, y, 0x3f3f3f3f);\n\t\t}\n\t\tdinic(1);\n\t\tfor (int i = 1; i <= 2 * n; i += 2)\n\t\t{\n\t\t\ts = (i + 1) / 2, t = n + 1, dinic(-1);\n\t\t\tedge[i].w = 0;\n\t\t\ts = n + 1, t = n + 2, dinic(1);\n\t\t\tif (m - ans >= 1)\n\t\t\t{\n\t\t\t\tputs(\"No\");\n\t\t\t\tgoto END;\n\t\t\t}\n\t\t\tedge[i].w = 2;\n\t\t}\n\t\tputs(\"Yes\");\n\t\tEND:;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1625471345,
        "uid": 49093,
        "name": "_sys",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5295 [\u5317\u4eac\u7701\u9009\u96c6\u8bad2019]\u56fe\u7684\u96be\u9898"
    },
    {
        "content": "20%\u7684\u6570\u636e\uff1a\u76f4\u63a5\u7206\u641c\u6bcf\u6761\u8fb9\u7684\u989c\u8272\uff0c\u7136\u540e\u5e76\u67e5\u96c6\u7ef4\u62a4\u5373\u53ef\u3002\n\n\n------------\n\n40%\u7684\u6570\u636e\uff1a\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a\u4e00\u4e2a\u56fe\u662f**\u5408\u6cd5\u7684**\u5f53\u4e14\u4ec5\u5f53\u5176**\u4efb\u610f\u5bfc\u51fa\u5b50\u56fe**\u662f**\u5408\u6cd5\u7684**\uff0c\u6240\u4ee5\u679a\u4e3e\u5bfc\u51fa\u5b50\u56fe\u7684\u70b9\u96c6\u5224\u65ad\u5bfc\u51fa\u5b50\u56fe\u662f\u5426\u6ee1\u8db3$|E|\\leq2|V|-2$\u5373\u53ef\u3002\n\n\n------------\n\n100%\u7684\u6570\u636e\uff1a\u6839\u636e\u4e0a\u9762\u90a3\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5b50\u56fe\u7684**\u5bc6\u5ea6**$\\rho$\u4e3a$|E|-2|V|$\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u627e\u5230\u4f7f\u5f97$\\rho$\u6700\u5927\u7684\u90a3\u4e2a\u5b50\u56fe\uff0c\u5224\u65ad$\\rho+2$\u7684\u6b63\u8d1f\u5373\u53ef\u3002\n\n\u5316\u8fb9\u4e3a\u70b9\uff0c\u70b9\u6743\u4e3a$1$\uff0c\u539f\u56fe\u4e2d\u7684\u70b9\u70b9\u6743\u4e3a$-2$\uff0c\u9009\u8fb9\u5fc5\u987b\u9009\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\uff0c\u90a3\u4e48\u5c31\u6784\u6210\u4e86\u4e00\u4e2a\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u6a21\u578b\uff0c\u6e90\u70b9\u5411\u8fb9\u70b9\u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a$1$\uff0c\u8fb9\u70b9\u5411\u539f\u56fe\u4e2d\u7684\u70b9\u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a$inf$\uff0c\u539f\u56fe\u4e2d\u7684\u70b9\u5411\u6c47\u70b9\u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a$2$\uff0c\u90a3\u4e48$\\rho=|E|-Maxflow$\u3002\n\n\u4f46\u662f\u76f4\u63a5\u8fd9\u4e48\u505a\u4f1a\u6709bug\uff0c\u4f60\u4f1a\u53d1\u73b0\u4efb\u610f\u4e00\u4e2a\u56fe\u7ed3\u679c\u90fd\u4e0d\u5408\u6cd5\uff0c\u56e0\u4e3a\u7f51\u7edc\u6d41\u4f1a\u8dd1\u51fa\u7a7a\u5b50\u56fe\uff0c**\u7a7a\u5b50\u56fe\u7684\u5bc6\u5ea6\u662f0**\uff0c\u4f46\u5176\u5b9e\u662f\u5408\u6cd5\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5f3a\u5236\u9009\u4e00\u4e2a\u70b9\uff0c\u76f4\u63a5\u679a\u4e3e\u5f3a\u5236\u9009\u54ea\u4e2a\u70b9\u8dd1\u7f51\u7edc\u6d41\u5c31AC\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u597d\u50cf\u662f$O(Tn^2\\sqrt n)$\uff0c~~\u5dee\u4e0d\u591a\u80fd\u8fc7~~\u3002\n\n\n------------\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nconst int N=1505;\nconst int inf=0x3f3f3f3f;\nstruct E {\n\tint to,next,f;\n} edge[N*5];\nint head[N],cur[N],tot=1;\nvoid addedge(int u,int v,int f) {\n\tedge[++tot].to=v;\n\tedge[tot].next=head[u];\n\thead[u]=tot;\n\tedge[tot].f=f;\n}\nint dis[N],q[N];\nint n,m,S,T;\nbool bfs() {\n\tmemset(dis,0,sizeof(dis));\n\tmemcpy(cur,head,sizeof(head));\n\tint h,t;\n\tq[h=t=1]=S;\n\tdis[S]=1;\n\twhile(h<=t) {\n\t\tint u=q[h++];\n\t\tfor(int i=head[u]; i; i=edge[i].next) {\n\t\t\tint v=edge[i].to;\n\t\t\tif(!dis[v]&&edge[i].f) {\n\t\t\t\tq[++t]=v;\n\t\t\t\tdis[v]=dis[u]+1;\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[T]!=0;\n}\nint dfs(int u=S,int f=inf) {\n\tif(u==T||!f) return f;\n\tint g=0,t;\n\tfor(int &i=cur[u]; i; i=edge[i].next) {\n\t\tint v=edge[i].to;\n\t\tif(dis[v]!=dis[u]+1)\n\t\t\tcontinue;\n\t\tint nf=edge[i].f;\n\t\tt=dfs(v,min(f,nf));\n\t\tg+=t;\n\t\tf-=t;\n\t\tedge[i].f-=t;\n\t\tedge[i^1].f+=t;\n\t\tif(!f) break;\n\t}\n\treturn g;\n}\nstruct Q {\n\tint u,v;\n} que[N<<1];\nint ntot=0;\nint solve(int u) {\n\tntot=n;\n\tS=++ntot;\n\tT=++ntot;\n\tmemset(head,0,sizeof(head));\n\ttot=1;\n\tfor(int i=1; i<=n; i++)\n\t\tif(i!=u) {\n\t\t\taddedge(i,T,2);\n\t\t\taddedge(T,i,0);\n\t\t}\n\tfor(int i=1; i<=m; i++) {\n\t\tint u=que[i].u;\n\t\tint v=que[i].v;\n\t\tint cur=++ntot;\n\t\taddedge(S,cur,1);\n\t\taddedge(cur,S,0);\n\t\taddedge(cur,u,inf);\n\t\taddedge(u,cur,0);\n\t\taddedge(cur,v,inf);\n\t\taddedge(v,cur,0);\n\t}\n\tint res=m-2;\n\twhile(bfs()) res-=dfs();\n\treturn res;\n}\nint main() {\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--) {\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=1; i<=m; i++)\n\t\t\tscanf(\"%d%d\",&que[i].u,&que[i].v);\n\t\tint ans=-inf;\n\t\tfor(int i=1; i<=n; i++)\n\t\t\tans=max(ans,solve(i));\n\t\tif(ans>-2) printf(\"No\\n\");\n\t\telse printf(\"Yes\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1554884054,
        "uid": 18029,
        "name": "\u97f5\u57ce\u5c0f\u7ba1\u5bb6",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5295 \u3010[\u5317\u4eac\u7701\u9009\u96c6\u8bad2019]\u56fe\u7684\u96be\u9898\u3011"
    },
    {
        "content": "[link](https://www.luogu.com.cn/problem/P5295) & [\u535a\u5ba2\u56ed\u98df\u7528](https://www.cnblogs.com/dai-se-can-tian/p/16464217.html)\n\n\u5f88\u663e\u7136\u5047\u5982\u5b58\u5728\u4e00\u4e2a\u5408\u6cd5\u7684\u67d3\u8272\u65b9\u6848\uff0c\u67d3\u8272\u540e\u9ed1\u8272\u8fb9\u548c\u767d\u8272\u8fb9\u5206\u522b\u4f1a\u5f62\u6210\u4e24\u7247\u68ee\u6797\uff08\u6bd5\u7adf\u4e0d\u5b58\u5728\u73af\uff09\u3002\u90a3\u4e48\u4ec0\u4e48\u65f6\u5019\u662f\u4e0d\u5408\u6cd5\u7684\u5462\uff1f\u8003\u8651\u4e0b\u9762\u8fd9\u5f20\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qo1viru8.png)\n\n\u5047\u5982\u7ea2\u8272\u662f\u767d\u8fb9\uff0c\u84dd\u8272\u662f\u9ed1\u8fb9\uff08\u9ed1\u8272\u548c\u767d\u8272\u4e0d\u597d\u770b\u2026\u2026\uff09\uff0c\u6b64\u65f6\u7ea2\u8272\u548c\u84dd\u8272\u5df2\u7ecf\u5206\u522b\u5f62\u6210\u4e86\u4e24\u7247\u68ee\u6797\uff08\u867d\u7136\u662f\u72ec\u6728\u6210\u6797\uff09\u3002\u8fd9\u65f6\u5019\u6211\u4eec\u52a0\u5165\u4e86\u4e00\u6761\u7eff\u8272\u7684\u8fb9\uff0c\u5c34\u5c2c\u5730\u53d1\u73b0\u65e0\u8bba\u5b83\u88ab\u67d3\u6210\u4ec0\u4e48\u989c\u8272\u90fd\u4f1a\u5f62\u6210\u73af\u3002\u6b64\u65f6\u601d\u8003\u4e00\u4e0b\u4ec0\u4e48\u6837\u7684\u8fb9\u624d\u53ef\u80fd\u9677\u5165\u7eff\u8272\u8fb9\u90a3\u6837\u7684\u5c34\u5c2c\u5904\u5883\u5462\uff1f\u90a3\u5c31\u662f\u5b83\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u5728\u4e24\u79cd\u989c\u8272\u7684\u68ee\u6797\u91cc\u90fd\u5728\u4e00\u68f5\u6811\u4e0a\uff08\u6709\u70b9\u7ed5\u7406\u89e3\u4e00\u4e0b\uff09\u3002\u5047\u8bbe\u6211\u4eec\u4e4b\u524d\u4e00\u76f4\u79c9\u627f\u7740\u4e0d\u8ba9\u522b\u4eba\u5c34\u5c2c\u7684\u539f\u5219\u5c3d\u91cf\u907f\u514d\u7eff\u8272\u8fb9\u8fd9\u6837\u7684\u60c5\u51b5\u51fa\u73b0\uff0c\u90a3\u4e48\u51fa\u73b0\u7eff\u8fb9\u65f6\u4e00\u5b9a\u662f\u65e0\u53ef\u6551\u836f\u7684\u72b6\u6001\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e24\u79cd\u989c\u8272\u7684\u68ee\u6797\u91cc\u5bf9\u5e94\u7684\u4e24\u68f5\u6811\u7684\u4ea4\u96c6\u4e00\u5b9a\u662f\u5305\u542b\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u4e00\u68f5\u5b50\u6811\uff08\u56e0\u4e3a\u524d\u9762\u7684\u9009\u62e9\u5df2\u7ecf\u5c3d\u91cf\u907f\u514d\u5c34\u5c2c\u60c5\u51b5\u7684\u51fa\u73b0\u4e86\u3002\u53ef\u80fd\u6709\u70b9\u7ed5\uff1f\u753b\u4e2a\u56fe\u53ef\u80fd\u4f1a\u597d\u70b9\uff09\u3002\n\n\u73b0\u5728\u6211\u4eec\u628a\u8fd9\u4e24\u68f5\u6811\u63d0\u53d6\u51fa\u6765\uff0c\u5047\u8bbe\u5f53\u524d\u6811\u4e0a\u6302\u7740 $N$ \u4e2a\u70b9\uff0c\u6839\u636e\u6811\u7684\u8fb9\u70b9\u6570\u91cf\u5173\u7cfb\u5728\u539f\u56fe\u4e2d\u5b83\u4eec\u5df2\u7ecf\u88ab\u9009\u62e9\u4e86 $2\\times(N-1)$ \u6761\u8fb9\uff0c\u7531\u4e8e\u8fd9\u6761\u7eff\u8fb9\u7684\u5b58\u5728\u8fd9\u4e2a\u5b50\u56fe\u5185\u5c31\u5b58\u5728\u7740\u591a\u4e8e $2\\times(N-1)$ \u6761\u8fb9\u5566\u3002\u603b\u7ed3\u4e00\u4e0b\uff0c\u51fa\u73b0\u7eff\u8fb9\u5f53\u4e14\u4ec5\u5f53\u539f\u56fe\u6709\u4e00\u4e2a\u5b50\u56fe\u7684\u8fb9\u6570\u591a\u4e8e\u70b9\u6570\u4e8c\u500d\u51cf\u4e8c\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u5224\u5b9a\u662f\u5426\u6709\u4e00\u4e2a\u5b50\u56fe\u4e0d\u7b26\u5408\u4e0a\u9762\u7684\u6761\u4ef6\u3002\n\n\u5199\u4e2a\u67ff\u5b50\uff1a $|E|\\le 2|V|-2$ \u5373\u662f $|E|-2|V|\\le -2$ \u3002\u611f\u89c9\u6709\u70b9\u719f\u6089\uff0c\u518d\u4e00\u770b\u53d1\u73b0\uff0c\u7531\u4e8e\u9009\u4e86\u4e00\u6761\u8fb9\u5c31\u610f\u5473\u7740\u9009\u62e9\u4e24\u4e2a\u70b9\uff0c\u6240\u4ee5\u53ef\u4ee5\u770b\u6210\u662f\u8fd9\u4e24\u4e2a\u70b9\u662f\u8fd9\u6761\u8fb9\u7684\u540e\u7ee7\uff0c\u8fd9\u6837\u4e00\u6765\u4e00\u4e2a\u5b50\u56fe\u5c31\u53d8\u6210\u4e86\u4e00\u4e9b\u8fb9\u548c\u5b83\u4eec\u7684\u540e\u7ee7\u7684\u5e76\u96c6\u3002\u4e00\u4e9b\u5143\u7d20\u548c\u5b83\u4eec\u7684\u540e\u7ee7\uff1f\u8fd9\u4e0d\u5c31\u662f\u95ed\u5408\u5b50\u56fe\u561b\u3002\u800c\u8bc1\u660e\u4e00\u4e9b\u5b50\u56fe\u90fd\u5c0f\u4e8e\u67d0\u4e2a\u503c\u5c31\u8bc1\u660e\u6700\u5927\u7684\u5c0f\u4e8e\u90a3\u4e2a\u503c\u5c31\u53ef\u4ee5\u5566\u3002\u4e8e\u662f\u5c31\u662f\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u95ee\u9898\u4e86\u3002\u63a8\u8350\u5148\u505a [\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/P2762) \uff0c\u91cc\u9762\u6709\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7684\u8be6\u7ec6\u9610\u8ff0\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u8a00\u4e86\u3002\n\n\u603b\u7ed3\u505a\u6cd5\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u548c\u6bcf\u6761\u8fb9\u5f53\u6210\u662f\u4e00\u4e2a\u7ed3\u70b9\uff0c\u6bcf\u6761\u8fb9\u5f80\u5bf9\u5e94\u7684\u4e24\u4e2a\u70b9\u8fde\u65e0\u9650\u8fb9\uff0c\u6e90\u70b9\u5411\u6bcf\u6761\u8fb9\u8fde $1$ \u8fb9\uff0c\u6bcf\u4e2a\u70b9\u5411\u6c47\u70b9\u8fde $2$ \u8fb9\uff0c\u8dd1\u7f51\u7edc\u6d41\u5373\u53ef\u3002\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\u8fc7\u4e0d\u4e86\u6837\u4f8b\u3002\u8fd9\u662f\u56e0\u4e3a\u7a0b\u5e8f\u8ba4\u4e3a\u7a7a\u96c6\u4e5f\u662f\u4e00\u4e2a\u95ed\u5408\u5b50\u56fe\uff0c\u800c\u5b83\u7684\u70b9\u6743\u548c\uff08\u4e5f\u5c31\u662f $0$ \uff09\u4e5f\u7684\u7684\u786e\u786e\u662f\u6700\u5c0f\u7684\u3002\u89e3\u51b3\u7684\u65b9\u6cd5\u5c31\u662f\u679a\u4e3e\u5f3a\u5236\u9009\u62e9\u4e00\u6761\u8fb9\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u641e\u51fa\u7b54\u6848\u4e86\u3002\n\n\u4ee3\u7801\u6bd4\u8f83\u597d\u5199\u3002\n\n```cpp\n#include<bits/stdc++.h>\n//#define feyn\n#define int long long\nconst int N=5010;\nconst int M=3e6;\nconst int maxn=1e12;\nusing namespace std;\ninline void read(int &wh){\n\twh=0;int f=1;char w=getchar();\n\twhile(w<'0'||w>'9'){if(w=='-')f=-1;w=getchar();}\n\twhile(w>='0'&&w<='9'){wh=wh*10+w-'0';w=getchar();}\n\twh*=f;return;\n}\ninline int min(int s1,int s2){\n\treturn s1<s2?s1:s2; \n}\ninline int max(int s1,int s2){\n\treturn s1<s2?s2:s1;\n}\n\nstruct edge{\n\tint t,v,next;\n}e[M],se[M];\nint head[N],esum;\ninline void adde(int fr,int to,int val){\n\te[++esum]=(edge){to,val,head[fr]};head[fr]=esum;\n}\ninline void add(int fr,int to,int val){\n\tadde(fr,to,val);adde(to,fr,0);\n}\n\nint m,n,cnt,a[N],b[N],ss,tt;\n\nint nt,t[N],q[N],ll,rr,d[N];\ninline bool check(){\n\tt[ss]=++nt;d[q[ll=rr=1]=ss]=1;\n\twhile(ll<=rr){\n\t\tint wh=q[ll++];\n\t\tfor(int i=head[wh],th;i;i=e[i].next){\n\t\t\tif(e[i].v==0||t[th=e[i].t]==nt)continue;\n\t\t\tt[th]=nt;d[th]=d[wh]+1;q[++rr]=th;\n\t\t}\n\t}\n\treturn t[tt]==nt;\n}\ninline int dinic(int wh,int val){\n\tif(wh==tt)return val;\n\tint used=0;\n\tfor(int i=head[wh],th;i;i=e[i].next){\n\t\tif(e[i].v==0||d[th=e[i].t]!=d[wh]+1)continue;\n\t\tint now=dinic(th,min(val,e[i].v));\n\t\tif(now)val-=now,used+=now,e[i].v-=now,e[i^1].v+=now;\n\t\tif(val==0)break;\n\t}\n\tif(val)d[wh]=-1;return used;\n}\n\nvoid solve(){\n\tcnt=0;esum=1;memset(head,0,sizeof(head));\n\tread(m);read(n);ss=++cnt,tt=++cnt;\n\tfor(int i=1;i<=n;i++){a[i]=++cnt;add(ss,a[i],1);}\n\tfor(int i=1;i<=m;i++){b[i]=++cnt;add(b[i],tt,2);}\n\tint s1,s2;\n\tfor(int i=1;i<=n;i++){\n\t\tread(s1);read(s2);\n\t\tadd(a[i],b[s1],maxn);\n\t\tadd(a[i],b[s2],maxn);\n\t}\n\tfor(int i=1;i<=esum;i++)se[i]=e[i];\n\tint ans=-maxn;\n\tfor(int i=1;i<=n;i++){\n\t\tint an=0;\n\t\tfor(int j=1;j<=esum;j++){\n\t\t\te[j]=se[j];\n\t\t\tif(e[j].t==a[i]&&e[j].v==1)e[j].v=maxn;\n\t\t}\n\t\twhile(check())an+=dinic(ss,maxn);\n\t\tans=max(ans,n-an);\n\t}\n\tif(ans<=-2)printf(\"Yes\\n\");\n\telse printf(\"No\\n\");\n} \n\nsigned main(){\n\t\n\t#ifdef feyn\n\tfreopen(\"in.txt\",\"r\",stdin);\n\t#endif\n\t\n\tint T;read(T);\n\twhile(T--)solve();\n\t\n\treturn 0;\n}\n```",
        "postTime": 1657463847,
        "uid": 302383,
        "name": "Feyn",
        "ccfLevel": 0,
        "title": "P5295"
    },
    {
        "content": "\u795e\u4ed9\u9898QwQ\n\n\u539f\u9898 UOJ #168. \u3010UR #11\u3011\u5143\u65e6\u8001\u4eba\u4e0e\u4e1b\u6797\n\njry\u51fa\u7684\uff0c\u771f\u7684\u662f\u795e\u4ed9\uff0c\u4e25\u8c28\u8bc1\u660e\uff1a[http://jiry-2.blog.uoj.ac/blog/1115](http://jiry-2.blog.uoj.ac/blog/1115)\n\n \u771f\u7684\u4e0d\u662f\u53ef\u4ee5\u968f\u4fbf\u60f3\u51fa\u6765\u7684...(myy NB\n\n\u9898\u76ee\u8981\u6c42\u628a\u8fb9\u5206\u6210\u4e24\u4e2a\u96c6\u5408\uff0c\u6bcf\u4e2a\u96c6\u5408\u5185\u4e0d\u5141\u8bb8\u51fa\u73b0\u73af\u3002\n\n#### \u7ed3\u8bba\uff1a\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u975e\u7a7a\u5b50\u56fe\uff0c\u5176 \u8fb9\u6570>2*\u70b9\u6570-2\uff0c\u5c31\u4e0d\u53ef\u884c\uff0c\u5426\u5219\u53ef\u884c\u3002\n\n\u4e25\u8c28\u8bc1\u660e\u7ffb\u94fe\u63a5\uff0c\u6211\u778e\u80e1\u4e86\u4e2a\u4e0d\u4e25\u8c28\u7684\uff08\u4e0d\u4fdd\u8bc1\u6b63\u786e\n\n\u9996\u5148\u6211\u4eec\u53d6\u539f\u56fe\u4e2d\u4e00\u4e2a\u8fde\u901a\u5b50\u56fe\uff08\u4e0d\u8fde\u901a\u7684\u53ef\u4ee5\u770b\u6210\u591a\u4e2a\u8fde\u901a\u7684\uff09\uff0c\u8bbe\u5176\u8fb9\u96c6\u5408\u4e3a|E|\uff0c\u70b9\u96c6\u5408\u4e3a|V|\uff0c\u6211\u4eec\u8981\u628aE\u67d3\u4e0a\u767d\u8272\u548c\u9ed1\u8272\u3002\n\n\u9996\u5148\u67d3\u767d\u8272\uff1a\n\u8981\u6c42\u767d\u8272\u8fb9\u4e0d\u53ef\u6210\u73af\uff0c\u540c\u65f6\uff0c\u8981\u5c3d\u91cf\u8d2a\u5fc3\u5730\u7ed9\u9ed1\u8272\u8fb9\u9884\u7559\u53ef\u884c\u89e3\u3002\u5728\u7eb8\u4e0a\u753b\u4e0b\u53ef\u4ee5\u770b\u51fa\uff0c**\u5f53\u767d\u8272\u8fb9\u6784\u6210\u8fd9\u4e2a\u8fde\u901a\u56fe\u7684\u751f\u6210\u6811\u65f6\uff0c\u5c40\u90e8\u6700\u4f18**\u3002\n\n\u518d\u67d3\u9ed1\u8272\uff1a\n\n####   \u5148\u5ffd\u89c6\u539f\u56fe\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u9ed1\u8272\u8fb9\u548c\u767d\u8272\u8fb9\u91cd\u5408\uff08\u4e00\u68f5\u6811\uff0c\u4e24\u8282\u70b9\u95f4\u6709\u4e24\u6761\u8fb9\uff09\u65f6\uff0c\u8fb9\u6570=2*\u70b9\u6570-2\uff0c\u8fd9\u662f\u6700\u4f18\u7b56\u7565\u3002\n  \n\u90a3\u4e48\u539f\u56fe\u4e5f\u597d\u8bf4\u4e86\uff0c\u5982\u679c\u5b83\u4e0d\u5408\u6cd5\uff0c\u5176\u4e2d\u4e00\u4e2a\u5b50\u56fe\u5fc5\u7136\u6253\u7834\u8fd9\u4e2a\u5b8c\u7f8e\u65b9\u6848\u3002\n\n\u90a3\u5c31\u6ca1\u4ec0\u4e48\u4e86\uff0c\u6bcf\u6761\u8fb9\u6743\u503c\u4e3a1\u6bcf\u4e2a\u8282\u70b9\u6743\u503c\u4e3a-2\u8dd1\u6700\u5927\u6743\u975e\u7a7a\u95ed\u5408\u5b50\u56fe\u3002\n\n\u56e0\u4e3a\u975e\u7a7a\u6240\u4ee5\u8981\u679a\u4e3e\u5fc5\u987b\u6709\u54ea\u4e2a\u70b9\uff0cn\u6b21dinic\uff0c\u6d1b\u8c37\u53efAC\n\nUOJ\u6570\u636e\u8f83\u5f3a\uff0c\u8981\u5728\u679a\u4e3e\u70b9\u65f6\u8fdb\u884c\u9000\u6d41\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u91cd\u65b0\u5efa\u56fe\u8dd1dinic\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<queue>\n#define INF 0x3f3f3f3f\nusing namespace std;\nint h[1505],d[1505],S,T,cnt=1,n,m,ans,t;\nstruct wf{\n\tint to,nxt,w;\n}edge[1005<<4];\nstruct wff{\n\tint x,y;\n}e[1005];\nqueue<int> Q;\nvoid add(int u,int v,int w)\n{\n    edge[++cnt].to=v;\n    edge[cnt].w=w;\n    edge[cnt].nxt=h[u];\n    h[u]=cnt;\n    swap(u,v);\n    w=0;\n    edge[++cnt].to=v;\n    edge[cnt].w=w;\n    edge[cnt].nxt=h[u];\n    h[u]=cnt;\n}\nbool bfs()\n{\n    memset(d,-1,sizeof (d));\n    d[S]=0;\n    Q.push(S);\n    while(!Q.empty())\n    {\n        int u=Q.front();\n        Q.pop();\n        for (int i=h[u];i;i=edge[i].nxt)\n        {\n            int v=edge[i].to;\n            if (!edge[i].w) continue;\n            if (d[v]==-1)\n            {\n                d[v]=d[u]+1;\n                Q.push(v);\n            }\n        }\n    }\n    return (d[T]!=-1);\n}\nint dfs(int u,int a)\n{\n    if (u==T||!a) return a;\n    int left=0,used=0;\n    for (int i=h[u];i;i=edge[i].nxt)\n    {\n        int v=edge[i].to;\n        if (d[v]!=d[u]+1) continue;\n        left=dfs(v,min(edge[i].w,a-used));\n        used+=left;\n        edge[i].w-=left;\n        edge[i^1].w+=left;\n        if (a==used) return a;\n    }\n    if (used==0) d[u]=-1;\n    return used;\n}\nint dinic()\n{\n    int num=0;\n    while(bfs())\n      num+=dfs(S,INF);\n    return num;\n}\nint main()\n{\n\tscanf(\"%d\",&t);\n\tfor (int qqq=1;qqq<=t;qqq++)\n\t{\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor (int i=1;i<=m;i++)\n\t\t  scanf(\"%d%d\",&e[i].x,&e[i].y);\n\t\tS=n+m+1;\n\t\tT=S+1;\n\t\tans=-INF;\n\t\tfor (int point=1;point<=n;point++)\n\t\t{\n\t\t\tcnt=1;\n\t\t\tmemset(h,0,sizeof (h));\n\t\t\tfor (int i=1;i<=n;i++)\n\t\t\t  if (point!=i) add(i+m,T,2);\n\t\t\tfor (int i=1;i<=m;i++)\n\t\t\t{\n\t\t\t\tint u=e[i].x;\n\t\t\t\tint v=e[i].y;\n\t\t\t\tadd(S,i,1);\n\t\t\t\tadd(i,u+m,INF);\n\t\t\t\tadd(i,v+m,INF);\n\t\t\t}\n\t\t\tans=max(ans,m-dinic()-2);\n\t\t}\n\t\tif (ans<=-2) printf(\"Yes\\n\");\n\t\telse printf(\"No\\n\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1559293003,
        "uid": 41528,
        "name": "jiuguaiwf",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5295 \u3010[\u5317\u4eac\u7701\u9009\u96c6\u8bad2019]\u56fe\u7684\u96be\u9898\u3011"
    }
]