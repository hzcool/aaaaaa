[
    {
        "content": "\u674e\u8d85\u7ebf\u6bb5\u6811\u89e3\u6cd5\uff0c\u4ee3\u7801\u77ed\uff0c\u5e38\u6570\u5c0f\uff0c\u4e0d\u5361\u7cbe\u5ea6\uff01\n\n\u5148\u8bf4 dp \u65b9\u7a0b\u3002\n\n\u6ce8\u610f\u5230\u4e00\u4e2a\u5173\u952e\u6027\u8d28\uff1a\u6bcf\u6b21\u4e70\u8fdb\u64cd\u4f5c\u4f7f\u7528\u5b8c\u6240\u6709\u7684\u4eba\u6c11\u5e01\uff0c\u6bcf\u6b21\u5356\u51fa\u64cd\u4f5c\u5356\u51fa\u6240\u6709\u7684\u91d1\u5238\u3002\n\n\u8bbe $f_i$ \u4e3a\u7b2c $i$ \u5929\u6700\u591a\u62e5\u6709\u7684\u94b1\u6570\uff0c$x_i$ \u4e3a\u7b2c $i$ \u5929\u7528 $f_i$ \u5143\u94b1\u53ef\u4ee5\u5151\u6362\u7684 A \u5238\u6570\uff0c$y_i$ \u4e3a B \u5238\u6570\u3002\n\n\u5219\u6709 $x_i=\\dfrac{f_iRate_i}{a_iRate_i+b_i}$\uff0c$y_i=\\dfrac{f_i}{a_iRate_i+b_i}$\u3002\n\n\u7b2c $i$ \u5929\u4e0d\u5356\u51fa\u91d1\u5238\uff0c\u5219 $f_i=\\max(f_i,f_{i-1})$\u3002\n\n\u7b2c $i$ \u5929\u5356\u51fa\u91d1\u5238\uff0c\u679a\u4e3e\u4e0a\u4e00\u6b21\u4e70\u5165\u7684\u65f6\u95f4\uff0c\u53ef\u5f97 $f_i=\\max a_ix_j+b_iy_j$\u3002\n\n\u53d8\u5f62\u5f97 $f_i=\\max b_i(x_j\\dfrac{a_i}{b_i}+y_j)$\u3002\n\n\u8bbe $k=x_j$\uff0c$x=\\dfrac{a_i}{b_i}$\uff0c$b=y_j$\uff0c\u5219 $f_i=\\max b_i(kx+b)$\uff0c\u674e\u8d85\u7ebf\u6bb5\u6811\u4f18\u5316\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5230 $x$ \u53ef\u80fd\u4e3a\u5c0f\u6570\uff0c\u53ef\u4ee5\u52a8\u6001\u5f00\u70b9\uff0c\u7cbe\u5ea6\u548c\u5e38\u6570\u90fd\u8f83\u5dee\u3002\n\n\u5bf9\u4e8e\u6b64\u9898\uff0c\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u5c06\u6240\u6709\u7684 $x$ \u79bb\u6563\u5316\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+3;\n#define db double\ndb x[N],y[N],a[N],b[N],r[N],c[N],d[N];\nint u,s[N*4];\n#define f(i,t) (y[t]+x[t]*c[i])\nvoid upd(int k,int t,int l,int r){\n\tif(l==r){if(f(l,t)>f(l,s[k]))s[k]=t;return;}\n\tint m=l+r>>1;\n\tif(f(m,t)>f(m,s[k]))swap(t,s[k]);\n\tf(l,t)>f(l,s[k])?upd(k*2,t,l,m):upd(k*2+1,t,m+1,r);\n}//\u674e\u8d85\u6811\u63d2\u5165\ndb qry(int k,int l,int r){\n\tif(l==r)return f(u,s[k]);\n\tint m=l+r>>1;\n\treturn max(f(u,s[k]),u>m?qry(k*2+1,m+1,r):qry(k*2,l,m));\n}//\u674e\u8d85\u6811\u67e5\u8be2\nint main(){\n\tint n,i;\n\tdb f,g;\n\tscanf(\"%d%lf\",&n,&f);\n\tfor(i=1;i<=n;++i)scanf(\"%lf%lf%lf\",a+i,b+i,r+i),c[i]=a[i]/b[i],d[i]=c[i];\n\tsort(c+1,c+n+1);//\u79bb\u6563\u5316\n\tfor(i=1;i<=n;++i){\n\t\tu=lower_bound(c+1,c+n+1,d[i])-c,f=max(f,b[i]*qry(1,1,n));\n\t\tg=a[i]*r[i]+b[i],x[i]=f*r[i]/g,y[i]=f/g,upd(1,i,1,n);\n\t}\n\tprintf(\"%.3lf\",f);\n\treturn 0;\n}\n```",
        "postTime": 1600767765,
        "uid": 221955,
        "name": "panyf",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4027 \u3010[NOI2007]\u8d27\u5e01\u5151\u6362\u3011"
    },
    {
        "content": "[\u849f\u84bb\u7684\u535a\u5ba2](http://blog.csdn.net/litble/article/details/78965163 )\n\n# \u659c\u7387\u4f18\u5316\n\n\u9996\u5148\uff0c\u7531\u4e8e\u5982\u679c\u5728i\u5929\u4e70\u5728j\u5929\u5356\u6709\u5229\u53ef\u56fe\uff0c\u90a3\u4e48\u6700\u4f18\u65b9\u6cd5\u5c31\u662f\u5728i\u5929\u82b1\u5b8c\u94b1\u5728j\u5929\u5356\u5b8c\u3002\u6211\u4eec\u4ee4$f_i$\u4e3a\u7b2ci\u5929\u53ef\u4ee5\u5f97\u5230\u7684\u6700\u591a\u94b1\u6570\uff0c\u7136\u540e\u53ef\u4ee5\u5148\u5217\u65b9\u7a0b\u6c42\u51fa\u82b1\u5b8c\u94b1\u5728\u7b2cj\u5929\u5f97\u5230\u7684\u4e24\u79cd\u91d1\u5238\u6570$x_j=\\frac{f_jR_j}{a_jR_j+b_j}$\u548c$y_j=\\frac{f_j}{a_jR_j+b_j}$\uff0c\u7136\u540e\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a$f_i=x_ja_i+y_jb_i$\n\n\u5c06\u65b9\u7a0b\u7a0d\u5fae\u53d8\u5f62\u6210\u76f4\u7ebf\u659c\u622a\u5f0f\u65b9\u7a0b\uff1a$y_j=-\\frac{a_ix_j}{b_i}+\\frac{f_i}{b_i}$\uff0c\u53ef\u4ee5\u77e5\u9053\uff0c\u5bf9\u4e8e\u5e73\u9762\u4e0a\u4f17\u591a\u7684\u70b9$(x_j,y_j)$\uff0c\u6211\u4eec\u6bcf\u6b21\u7528\u4e00\u6761\u659c\u7387\u4e3a$-\\frac{a_i}{b_i}$\u7684\u76f4\u7ebf\u53bb\u5207\u5b83\u4eec\u4e2d\u7684\u4e00\u4e2a\uff0c\u53ef\u4ee5\u6c42\u5f97\u6700\u5927\u622a\u8ddd\u7684\u70b9\u5373\u4e3a\u6700\u4f18\u51b3\u7b56\u3002\n\n\u5982\u4f55\u6c42\u5f97\u6700\u5927\u622a\u8ddd\u5462\uff1f\u4ee5\u4e0b\u6211\u4eec\u5c06\u659c\u7387\u4e3a$-\\frac{a_i}{b_i}$\u7684\u76f4\u7ebf\u79f0\u4e3a\u5f53\u524d\u76f4\u7ebf\u3002\n\n\u73b0\u5728\u6211\u4eec\u7ef4\u62a4\u70b9\u4e4b\u95f4\u7684\u4e00\u4e2a\u51f8\u5305\uff0c\u5982\u679c\u5bf9\u4e8e\u70b9j\uff0c\u5176\u5de6\u8fb9\u7684\u7ebf\u659c\u7387\u5c0f\u4e8e\u5f53\u524d\u76f4\u7ebf\uff0c\u90a3\u4e48\u663e\u7136\u628a\u5f53\u524d\u76f4\u7ebf\u79fb\u5230\u5de6\u8fb9\u7684\u70b9\u622a\u8ddd\u66f4\u5927\uff08\u5efa\u8bae\u81ea\u5df1\u753b\u56fe\u7406\u89e3\uff09\u3002\u5982\u679c\u5176\u53f3\u8fb9\u7684\u7ebf\u659c\u7387\u5927\u4e8e\u5f53\u524d\u76f4\u7ebf\uff0c\u90a3\u4e48\u5c06\u5176\u53f3\u79fb\u66f4\u4f18\u3002\n\n\u4e8e\u662f\u5c31\u6709\u4e24\u79cd\u7ef4\u62a4\u65b9\u5f0f\uff1a\n\n# splay\u7ef4\u62a4\n\n\u6211\u4eec\u9700\u8981\u4f18\u5316\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u6392\u9664\u4e0d\u53ef\u80fd\u72b6\u6001\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u70b9\u96c6\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u5728\u51f8\u5305\u5185\u90e8\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5c31\u662f\u4e0d\u53ef\u80fd\u662f\u6700\u4f18\u51b3\u7b56\u7684\u70b9\uff0c\u56e0\u4e3a\u5176\u4e0a\u4e00\u5b9a\u6709\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u628a\u5f53\u524d\u76f4\u7ebf\u4e0a\u79fb\u53ef\u4ee5\u83b7\u5f97\u66f4\u5927\u622a\u8ddd\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6392\u9664\u8fd9\u4e9b\u51b3\u7b56\uff0e\n\n\u7ef4\u62a4lk:\u70b9x\u51f8\u5305\u5de6\u8fb9\u90a3\u6761\u7ebf\u7684\u659c\u7387\uff0crk:\u53f3\u8fb9\u90a3\u6761\u7ebf\u7684\u3002\n\nsplay\u6309\u7167x\u6392\u5e8f\uff0c\u5bfb\u627e\u6700\u4f18\u51b3\u7b56\u7684\u65b9\u6cd5\u89c1\u4e0a\uff0c\u800c\u6dfb\u52a0\u65b0\u70b9\u7684\u65b9\u6cd5\uff1a\n\n\u9996\u5148\u5c06\u65b0\u70b9x\u65cb\u8f6c\u5230\u6839\u3002\u4ee5\u5bfb\u627e\u5176\u5de6\u8fb9\u6700\u540e\u4e00\u4e2a\u53ef\u4ee5\u4e0e\u5176\u6784\u6210\u51f8\u5305\u7684\u70b9\u4e3a\u4f8b\u3002\u5bf9\u4e8e\u5f53\u524d\u70b9t\uff0c\u5982\u679ct\u5de6\u8fb9\u659c\u7387\u5927\u4e8e\u4e86\u76f4\u7ebftx\u7684\u659c\u7387\uff0c\u90a3\u4e48\u5982\u679ct\u7684\u53f3\u8fb9\u8fd8\u6709\u4e0d\u5728\u51f8\u5305\u5185\u7684\u8282\u70b9\uff0c\u7528tx\u7684\u8fde\u7ebf\u5c31\u4e0d\u80fd\u6784\u6210\u51f8\u5305\uff0c\u6240\u4ee5\u5e94\u8be5\u7ee7\u7eed\u5f80\u53f3\u627e\u70b9\u3002\u5426\u5219\uff0c\u7ee7\u7eed\u5f80\u5de6\u627e\u70b9\u3002\n\n\u7136\u540e\uff0c\u5220\u6389\u5728\u51f8\u5305\u91cc\u7684\u70b9\u3002\n\n\u627e\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u4e0e\u5176\u6784\u6210\u51f8\u5305\u7684\u70b9\u540c\u7406\u3002\n\n\u6700\u540e\uff0c\u5982\u679c\u53d1\u73b0\u8fd9\u4e2a\u70b9\u672c\u6765\u5c31\u5728\u65e7\u7684\u51f8\u5305\u91cc\u9762\uff0c\u76f4\u63a5\u5c06\u5176\u5220\u9664\u3002\uff08\u5373$lk_x$\u5927\u4e8e$rk_x$\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define db double\n#define eps 1e-9//\u4e00\u5b9a\u8981\u6ce8\u610f\u7cbe\u5ea6\n#define inf 1e9\nconst int N=100005;\nint n,rt,sc,f[N],son[N][2];\ndb dp[N],A[N],B[N],R[N],lk[N],rk[N],X[N],Y[N];//lk\uff1a\u51f8\u5305\u70b9x\u5de6\u7ebf\u659c\u7387\uff0crk\uff1a\u53f3\u7ebf\u659c\u7387\nint is(int x) {return son[f[x]][1]==x;}\nvoid spin(int x,int &mb) {\n    int fa=f[x],g=f[fa],t=is(x);\n    if(fa==mb) mb=x;\n    else son[g][is(fa)]=x;\n    f[fa]=x,f[x]=g,f[son[x][t^1]]=fa;\n    son[fa][t]=son[x][t^1],son[x][t^1]=fa;\n}\nvoid splay(int x,int &mb) {\n    while(x!=mb) {\n        if(f[x]!=mb) {\n            if(is(x)^is(f[x])) spin(x,mb);\n            else spin(f[x],mb);\n        }\n        spin(x,mb);\n    }\n}\nint find(int x,db num) {//\u5bfb\u627e\u6700\u4f18\u89e3\n    if(!x) return 0;\n    if(lk[x]+eps>=num&&rk[x]<=num+eps) return x;\n    else if(lk[x]<num+eps) return find(son[x][0],num);\n    else return find(son[x][1],num);\n}\ndb getk(int a,int b) {//\u83b7\u5f97\u659c\u7387\n    if(X[a]-X[b]<eps&&X[a]-X[b]>-eps) return -inf;\n    return (Y[b]-Y[a])/(X[b]-X[a]);\n}\nint pre(int x) {//\u5bfb\u627e\u5de6\u8fb9\u6700\u540e\u4e00\u4e2a\u4e0ex\u53ef\u4ee5\u6784\u6210\u51f8\u5305\u7684\u70b9\n    int y=son[x][0],re=y;\n    while(y) {\n        if(lk[y]+eps>=getk(y,x)) re=y,y=son[y][1];\n        else y=son[y][0];\n    }\n    return re;\n}\nint nxt(int x) {//\u5bfb\u627e\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u4e0ex\u53ef\u4ee5\u6784\u6210\u51f8\u5305\u7684\u70b9\n    int y=son[x][1],re=y;\n    while(y) {\n        if(rk[y]<=getk(x,y)+eps) re=y,y=son[y][0];\n        else y=son[y][1];\n    }\n    return re;\n}\nvoid newjd(int x) {\n    splay(x,rt);\n    if(son[x][0]) {\n        int kl=pre(x);\n        splay(kl,son[x][0]),son[kl][1]=0;\n        lk[x]=rk[kl]=getk(kl,x);\n    }\n    else lk[x]=inf;//\u8bf7\u52ff\u5f80\u5de6\n    if(son[x][1]) {\n        int kl=nxt(x);\n        splay(kl,son[x][1]),son[kl][0]=0;\n        rk[x]=lk[kl]=getk(x,kl);\n    }\n    else rk[x]=-inf;//\u8bf7\u52ff\u5f80\u53f3\n    if(lk[x]<=rk[x]+eps) {//\u5728\u539f\u51f8\u5305\u5185\u90e8,\u76f4\u63a5\u5220\u9664\u8be5\u70b9\n        rt=son[x][0],son[rt][1]=son[x][1],f[son[x][1]]=rt,f[rt]=0;\n        lk[rt]=rk[son[rt][1]]=getk(rt,son[rt][1]);\n    }\n}\nvoid ins(int &x,int las,int bh) {\n    if(!x) {x=bh,f[x]=las;return;}\n    if(X[bh]<=X[x]+eps) ins(son[x][0],x,bh);\n    else ins(son[x][1],x,bh);\n}\nint main()\n{\n    scanf(\"%d%lf\",&n,&dp[0]);\n    for(int i=1;i<=n;++i) {\n        scanf(\"%lf%lf%lf\",&A[i],&B[i],&R[i]);\n        int j=find(rt,-A[i]/B[i]);\n        dp[i]=max(dp[i-1],X[j]*A[i]+Y[j]*B[i]);\n        Y[i]=dp[i]/(A[i]*R[i]+B[i]),X[i]=Y[i]*R[i];\n        ins(rt,0,i),newjd(i);\n    }\n    printf(\"%.3lf\\n\",dp[n]);\n    return 0;\n}\n```\n# CDQ\u5206\u6cbb\u7ef4\u62a4\n\n[\u5173\u4e8eCDQ\u5206\u6cbb](http://blog.csdn.net/litble/article/details/79016999)\n\n\u6211\u4eec\u53ef\u4ee5\u5bf9\u51b3\u7b56\u7684\u65f6\u95f4\u8fdb\u884c\u4e8c\u5206\uff0c\u5bf9\u4e8e\u5de6\u534a\u8fb9\u533a\u95f4\uff0c\u9996\u5148\u6c42\u51fa\u5b83\u4eec\u7684dp\u503c\uff0c\u53f3\u534a\u8fb9\u533a\u95f4\u7ef4\u6301$k_i=-\\frac{a_i}{b_i}$\u7684\u6709\u5e8f\uff0c\u5de6\u534a\u8fb9\u533a\u95f4\u7ef4\u6301$x_i$\u7684\u6709\u5e8f\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a\u6808\u6765\u7ef4\u62a4\u5de6\u534a\u8fb9\u533a\u95f4\u7684\u659c\u7387\u5355\u8c03\u9012\u51cf\u7684\u51f8\u5305\u3002\n\n\u5bf9\u4e8e\u53f3\u534a\u8fb9\u533a\u95f4\uff0c\u7531\u4e8ek\u503c\u6392\u4e86\u5e8f\uff0c\u6240\u4ee5\u53ef\u4ee5O(n)\u67e5\u8be2\u3002\u67e5\u8be2\u65b9\u6cd5\u5c31\u662f\u5173\u4e8e\u659c\u7387\u4f18\u5316\u7684\u5206\u6790\u7684\u5012\u6570\u7b2c\u4e8c\u6bb5\u7684\u5185\u5bb9\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define db double\n#define inf 1e9\n#define eps 1e-9\nconst int N=100005;\nint n,s[N];db dp[N];\nstruct node{db k,x,y,a,b,r;int id;}Q[N],kl[N];\ndb getk(int i,int j) {\n    if(fabs(Q[i].x-Q[j].x)<=eps) return inf;\n    return (Q[j].y-Q[i].y)/(Q[j].x-Q[i].x);\n}\nvoid merge(int l,int r,int mid) {//\u5f52\u5e76\u6392\u5e8f\n    int t1=l,t2=mid+1;\n    for(int i=l;i<=r;++i)\n        if(t1<=mid&&(t2>r||Q[t1].x<Q[t2].x+eps)) kl[i]=Q[t1],++t1;\n        else kl[i]=Q[t2],++t2;\n    for(int i=l;i<=r;++i) Q[i]=kl[i];\n}\nvoid cdq(int l,int r) {\n    if(l==r) {//\u90a3\u4e48\u5728l\u4e4b\u524d\u7684\u6240\u6709\u8be2\u95ee\u90fd\u5df2\u7ecf\u5904\u7406\u5b8c\u6bd5\uff0c\u53ef\u4ee5\u66f4\u65b0l\u7684\u7b54\u6848\u4e86\n        dp[l]=max(dp[l],dp[l-1]);\n        Q[l].y=dp[l]/(Q[l].a*Q[l].r+Q[l].b),Q[l].x=Q[l].y*Q[l].r;\n        return;\n    }\n    int mid=(l+r)>>1,t1=l-1,t2=mid,top=0;\n    for(int i=l;i<=r;++i)//\u628a\u524dmid\u4e2a\u8be2\u95ee\u653e\u5728\u5de6\u8fb9\uff0c\u540emid\u4e2a\u653e\u5728\u53f3\u8fb9\n        if(Q[i].id<=mid) kl[++t1]=Q[i];\n        else kl[++t2]=Q[i];\n    for(int i=l;i<=r;++i) Q[i]=kl[i];\n    cdq(l,mid);//\u9012\u5f52\u5904\u7406\u5de6\u8fb9\n    for(int i=l;i<=mid;++i) {//\u7ef4\u62a4\u659c\u7387\u9012\u51cf\u7684\u51f8\u5305\n        while(top>=2&&getk(s[top],i)+eps>getk(s[top-1],s[top])) --top;\n        s[++top]=i;\n    }\n    for(int i=mid+1;i<=r;++i) {//\u5904\u7406\u53f3\u8fb9\u7684\u8be2\u95ee\n        while(top>=2&&getk(s[top-1],s[top])<=Q[i].k+eps) --top;\n        int j=s[top];\n        dp[Q[i].id]=max(dp[Q[i].id],Q[j].x*Q[i].a+Q[j].y*Q[i].b);\n    }\n    cdq(mid+1,r),merge(l,r,mid);//\u9012\u5f52\u5904\u7406\u53f3\u8fb9\u540e\uff0c\u6309\u7167x\u503c\u4e3a\u5173\u952e\u5b57\u5f52\u5e76\u6392\u5e8f\n}\nint cmp1(node t1,node t2) {return t1.k<t2.k;}\nint main() \n{\n    scanf(\"%d%lf\",&n,&dp[0]);\n    for(int i=1;i<=n;++i) {\n        scanf(\"%lf%lf%lf\",&Q[i].a,&Q[i].b,&Q[i].r);\n        Q[i].k=-Q[i].a/Q[i].b,Q[i].id=i;\n    }\n    sort(Q+1,Q+1+n,cmp1),cdq(1,n);\n    printf(\"%.3lf\\n\",dp[n]);\n    return 0;\n}\n```",
        "postTime": 1514982634,
        "uid": 20604,
        "name": "litble",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4027 \u3010[NOI2007]\u8d27\u5e01\u5151\u6362\u3011"
    },
    {
        "content": "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**\u601d\u8def\uff1a**\u9996\u5148\uff0c\u6211\u4eec\u80fd\u60f3\u5230\u8fd9\u9053\u9898\u662f\u4e00\u9053$dp$\u9898\u76ee\uff0c\u6211\u4eec\u8bbe$f[i]$\u8868\u793a\u7b2c$i$\u5929\u80fd\u5f97\u5230\u7684\u6700\u5927\u6536\u76ca\uff0c\u8fd9\u4e2a\u6700\u5927\u6536\u76ca\u4e5f\u5305\u62ec\u7b2c$i$\u5929\u4e0d\u8fdb\u884c\u64cd\u4f5c\u7684\u60c5\u51b5\u4e0b\u7684\u6536\u76ca\uff0c\u8bbe$X[i]$\u8868\u793a\u7b2c$i$\u5929\u5c06\u6240\u6709\u7684\u73b0\u91d1\u90fd\u5151\u6362\u6210\u4e3a\u91d1\u5238\u540e\u80fd\u62ff\u5230\u7684$A$\u5238\u6570\uff0c$Y[i]$\u540c\u7406\u3002\u8fd9\u662f\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u8f6c\u79fb\u5f0f\u5b50\uff1a$f[i]=Max\\{f[i-1],A[i]\\times X[j]+B[i]\\times Y[j]\\}\\ (1\\le j \\le i-1)$\u3002\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u5f0f\u5b50\u80fd\u5199\u6210\u659c\u7387\u4f18\u5316\u7684\u6837\u5b50\uff1a$Y[j]=-\\frac{A[i]}{B[i]}\\times X[j]+\\frac{f[i]}{B[i]}$\u3002\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u80fd\u5426\u8fd0\u7528\u659c\u7387\u4f18\u5316\uff0c\u597d\u50cf\u53ef\u4ee5\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u7684\u659c\u7387$k$\u4e3a$-\\frac{A[i]}{B[i]}$\uff0c\u6a2a\u5750\u6807\u4e3a$X[i]$\uff0c\u7eb5\u5750\u6807\u4e3a$Y[i]$\u3002\u4f46\u662f\u5c31\u662f\u6709\u4e24\u4e2a\u4e0d\u592a\u597d\u7684\u60c5\u51b5\uff0c\u5c31\u662f\u6bcf\u4e00\u70b9\u7684$x$\u5750\u6807\u4e0e\u659c\u7387$k$\u90fd\u4e0d\u5355\u8c03\uff0c\u8fd9\u4e2a\u600e\u4e48\u529e\uff1f\u663e\u7136\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u51f8\u5305\u5c31\u597d\u4e86\u3002\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u4e0d\u7528\u5e73\u8861\u6811\u80fd\u5426\u5b9e\u73b0\uff0c\u6211\u4eec\u8003\u8651$cdq$\u3002\n\n\u200b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u56e0\u4e3a\u6b63\u5e38\u7684\u8981\u6c42\u6700\u5927\u503c\u7684\u659c\u7387\u4f18\u5316\u90fd\u662f\u6a2a\u5750\u6807\u5355\u8c03\u9012\u589e\uff0c\u659c\u7387\u5355\u8c03\u9012\u51cf\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u6392\u5e8f\u3002\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u70b9\u7684\u659c\u7387\u90fd\u662f\u4e0d\u53d8\u7684\uff0c\u5373\u8f93\u5165\u4e4b\u540e\u5c31\u662f\u5b9a\u4e0b\u6765\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u6240\u6709\u7684\u70b9\u90fd\u6309\u7167\u659c\u7387\u9012\u51cf\u6392\u5e8f\uff0c\u4f46\u662f\u8fd9\u6837\u5c31\u4e0d\u662f\u6309\u7167\u5929\u6570\u9012\u589e\u7684\u987a\u5e8f\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u4e0d\u80fd\u76f4\u63a5\u8fd0\u7528\u6392\u5e8f\u540e\u7684\u987a\u5e8f\u6765\u5904\u7406\u8fd9\u4e9b\u70b9\u3002\u6211\u4eec\u5c06\u5929\u6570\u8fdb\u884c\u5206\u6cbb\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u6bcf\u4e00\u4e2a\u70b9\u5c31\u9700\u8981\u518d\u5b58\u4e00\u4e2a\u53c2\u6570\uff0c\u5373\u5929\u6570\u7684\u7f16\u53f7\u3002\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u56e0\u4e3a\u8fd9\u662f$dp$\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u9012\u5f52\u5de6\u533a\u95f4\u4e4b\u540e\u663e\u7136\u8981\u5148\u5904\u7406\u5f71\u54cd\uff0c\u518d\u9012\u5f52\u53f3\u533a\u95f4\u3002\u73b0\u5728\u8003\u8651\u600e\u4e48\u5904\u7406\u5f71\u54cd\u3002\n\n\u200b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u56e0\u4e3a\u6211\u4eec\u6bcf\u4e00\u6b21\u5904\u7406\u5f71\u54cd\u4e4b\u524d\u90fd\u5df2\u7ecf\u5904\u7406\u597d\u5de6\u533a\u95f4\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u4e0d\u7528\u7406\u4f1a\u5de6\u533a\u95f4\u7684\u5177\u4f53\u987a\u5e8f\u4e86\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u80fd\u5bf9\u5176\u8fdb\u884c\u4efb\u610f\u987a\u5e8f\u7684\u5904\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5de6\u533a\u95f4\u7684\u8fd9\u4e9b\u70b9\u6309\u7167\u6a2a\u5750\u6807\u6392\u5e8f\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u591f\u8fbe\u5230\u4e0a\u9762\u6240\u63d0\u51fa\u7684\u76ee\u7684\uff0c\u4e5f\u5c31\u662f\u628a\u70b9\u6309\u7167\u987a\u5e8f\u63d2\u5165\u5230\u51f8\u5305\u91cc\u9762\u3002\u56e0\u4e3a\u6211\u4eec\u662f\u7528\u5de6\u533a\u95f4\u6765\u66f4\u65b0\u53f3\u533a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u7528\u53bb\u7ba1\u53f3\u533a\u95f4\uff0c\u5e76\u4e14\u56e0\u4e3a\u53f3\u533a\u95f4\u7684\u659c\u7387\u662f\u5355\u8c03\u9012\u51cf\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u53f3\u533a\u95f4\u539f\u672c\u7684\u987a\u5e8f\u6765\u8fdb\u884c\u66f4\u65b0\u3002\n\n\u200b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6211\u4eec\u5728\u9012\u5f52\u51fa\u53e3\u7684\u5730\u65b9\u4e0d\u80fd\u5c31\u662f\u76f4\u63a5$return$\uff0c\u6211\u4eec\u9700\u8981\u505a\u4e00\u4e9b\u5c0f\u5c0f\u7684\u5904\u7406\uff0c\u56e0\u4e3a\u6211\u4eec\u5728$return $\u4e4b\u524d\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u5df2\u7ecf\u505a\u5b8c\u524d\u9762\u7684\u70b9\u7684\u6240\u6709\u66f4\u65b0\u4e86\uff0c\u4f46\u662f\u6ca1\u6709\u8fdb\u884c\u4e0d\u4f5c\u5904\u7406\u7684\u66f4\u65b0\uff0c\u6240\u4ee5$f[i]=Max\\{f[i],f[i-1]\\}$\u3002\u81f3\u6b64\u641c\u6709\u7684\u66f4\u65b0\u90fd\u5b8c\u6210\u4e86\uff0c\u8fd9\u662f\u5c31\u53ef\u4ee5\u4e86\u5904\u7406\u5f53\u524d\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\u3002\u56e0\u4e3a\u5fc5\u7136\u5b58\u5728\u4e00\u79cd\u6700\u4f18\u7684\u4e70\u5356\u65b9\u6848\u6ee1\u8db3\uff1a\u6bcf\u6b21\u4e70\u8fdb\u64cd\u4f5c\u4f7f\u7528\u5b8c\u6240\u6709\u7684\u4eba\u6c11\u5e01\uff1b\u6bcf\u6b21\u5356\u51fa\u64cd\u4f5c\u5356\u51fa\u6240\u6709\u7684\u91d1\u5238\uff0c\u6240\u4ee5\u5f53\u524d\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\u5c31\u662f$X[i]=\\frac{f[i]}{A[i]*Rate[i]+B[i]}\\times A[i]$\uff0c$Y[i]=\\frac{f[i]}{A[i]*Rate[i]+B[i]}$\u3002\n\n\u200b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5bf9\u4e8e\u6a2a\u5750\u6807\u6392\u5e8f\uff0c\u6211\u4eec\u663e\u7136\u6ca1\u6709\u5fc5\u8981\u6bcf\u4e00\u6b21\u90fd\u7528$sort$\uff0c\u6211\u4eec\u8fd0\u7528\u5f52\u5e76\u6392\u5e8f\u7684\u601d\u60f3\uff0c\u76f4\u63a5\u6392\u5e8f\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u964d\u4e0b$O(log_n)$\u3002\n\n```c++\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\n#define N 100010\n#define eps 1e-9\nint n,que[N];double f[N];\nstruct Node {double a,b,rate,k,x,y;int id;}node[N],tmp[N];\nbool cmp(const Node &a,const Node &b) {return a.k>b.k;}\ndouble re_x(int i) {return node[i].x;}\ndouble re_y(int i) {return node[i].y;}\ndouble re_k(int i,int j)\n{\n    if(fabs(node[i].x-node[j].x)<eps)return 1e20;\n    return (re_y(j)-re_y(i))/(re_x(j)-re_x(i));\n}\nvoid solve(int l,int r)\n{\n    if(l==r)\n    {\n\t\tf[l]=max(f[l],f[l-1]);\n\t\tnode[l].y=f[l]/(node[l].a*node[l].rate+node[l].b);\n\t\tnode[l].x=node[l].y*node[l].rate;return;\n    }\n    int mid=(l+r)>>1,tl=l-1,tr=mid;\n    for(int i=l;i<=r;i++) (node[i].id<=mid)?tmp[++tl]=node[i]:tmp[++tr]=node[i];\n    for(int i=l;i<=r;i++) node[i]=tmp[i];solve(l,mid);\n    int L=1,R=0;\n    for(int i=l;i<=mid;i++)\n\t\t{while(R>1&&re_k(que[R],que[R-1])<re_k(que[R],i)+eps) R--;que[++R]=i;}\n    for(int i=mid+1;i<=r;i++)\n    {\n\t\twhile(L<R&&re_k(que[L],que[L+1])+eps>node[i].k) L++;\n\t\tf[node[i].id]=max(f[node[i].id],node[que[L]].x*node[i].a+node[que[L]].y*node[i].b);\n    }solve(mid+1,r),tl=l,tr=mid+1;\n    for(int i=l;i<=r;i++)\n    {\n\t\tif((node[tl].x<node[tr].x||tr>r||fabs(node[tl].x-node[tr].x)<eps)&&tl<=mid)\n         \ttmp[i]=node[tl++];\n\t\telse tmp[i]=node[tr++];\n    }\n    for(int i=l;i<=r;i++) node[i]=tmp[i];\n}\nint main()\n{\n    scanf(\"%d%lf\",&n,&f[0]);\n    for(int i=1;i<=n;i++)\n    {\n\t\tscanf(\"%lf%lf%lf\",&node[i].a,&node[i].b,&node[i].rate);\n\t\tnode[i].k=-node[i].a/node[i].b,node[i].id=i;\n    }sort(node+1,node+n+1,cmp),solve(1,n),printf(\"%.3lf\\n\",f[n]);\n}\n```",
        "postTime": 1547425488,
        "uid": 52851,
        "name": "ysy20021208",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4027 \u3010[NOI2007]\u8d27\u5e01\u5151\u6362\u3011"
    },
    {
        "content": "\u4e0b\u9762\u7684cdq\u5206\u6cbb\u5199\u6cd5\u8bb2\u7684\u90fd\u6bd4\u8f83\u7b80\u5355\uff0c\u5f04\u5f97\u849f\u84bb\u5199\u4e86\u4e00\u5929\uff0c\u53d1\u4e2a\u9898\u89e3\u603b\u7ed3\u4e00\u4e0b\u3002\n\n[\u5728\u6211\u7684blog\u9605\u8bfb](https://www.cnblogs.com/RiverHamster/p/cdq-slopedp.html)\n\n## dp\n\u9898\u76ee\u63d0\u793a\u6211\u4eec\uff0c\u6bcf\u6b21\u4e70\u5165\u4e00\u5b9a\u82b1\u5b8c\u6240\u6709\u7684\u94b1\uff0c\u5356\u51fa\u4e00\u5b9a\u5356\u51fa\u6240\u6709\u7684\u91d1\u5238\u3002\uff08\u65e2\u7136\u6709\u6700\u4f18\u65b9\u6848\u4e3a\u4ec0\u4e48\u4e0d\u5168\u7528\uff09\n\n\u56e0\u6b64\uff0c\u8bbe\u7b2c$i$\u5929\u7684\u6700\u5927\u6536\u76ca\u4e3a$f_i$\uff0c\u4e3a\u4e86\u65b9\u4fbf\u63a8\u51fa\u659c\u7387\u4f18\u5316\u7684\u65b9\u7a0b\uff0c\u8bbe$f_i$\u53ef\u4ee5\u6362\u6210$x_i$\u7684A\u52b5\u548c$y_i$\u7684B\u52b5\u3002\u4ee5\u4e0b\u5c06$Rate$\u5199\u6210$R$\u3002\n$$x_i = f_i {R_i \\over A_iR_i + B_i}$$\n$$y_i = f_i {1 \\over A_iR_i + B_i}$$\n\n\u5219\u6709\u65b9\u7a0b\n$$f_i = \\max\\{f_{i-1}, \\max\\{x_jA_i + y_jB_i\\}\\}$$\n\n\u6682\u65f6\u4e0d\u8003\u8651$f_{i-1}$\uff0c\u5c06\u540e\u9762\u7684\u6539\u6210\u659c\u7387\u7684\u5f62\u5f0f\u3002\n\n\u8f6c\u79fb\u5230$f_i$\uff0c$f_j$ \u6bd4 $f_k$\u4f18\uff1a\n$$x_jA_i + y_jB_i > x_kA_i + y_kB_i$$\n$$(x_j-x_k)A_i > -(y_j-y_k)B_i$$\n$${{y_j-y_k}\\over{x_j-x_k}} > -{A_i \\over B_i}$$\n\u6ce8\u610f\u4e0d\u7b49\u5f0f\u7b26\u53f7\u65b9\u5411\u8981\u6539\u3002\n\n\u5f88\u660e\u663e$x,y$\u90fd\u662f\u6ca1\u6709\u5355\u8c03\u6027\u7684\uff0c\u65e0\u6cd5\u76f4\u63a5\u7528\u5355\u8c03\u6808\u6216\u961f\u5217\u5efa\u51f8\u58f3\u3002\n\n## cdq\u5206\u6cbb\n\u56e0\u4e3acdq\u5206\u6cbb\u53ef\u4ee5\u5c06\u533a\u95f4\u5206\u6210\u4e24\u5757\uff0c\u7136\u540e\u7edf\u8ba1\u524d\u4e00\u5757\u5bf9\u540e\u4e00\u5757\u7684\u8d21\u732e\uff0c\u6240\u4ee5\u53ef\u4ee5\u5bf9\u524d\u4e00\u5757\u7684$x$\u8fdb\u884c\u6392\u5e8f\uff0c\u5c31\u53ef\u4ee5\u5efa\u51f8\u58f3\uff0c\u8fdb\u884c\u540e\u534a\u90e8\u5206\u7684\u8f6c\u79fb\u4e86\u3002\n\n\u6ce8\u610f\u4e09\u79cd\u987a\u5e8f\uff1a\n1. \u5206\u6cbb\u524d\u5148\u6309$-{A_i \\over B_i}$\u6392\u5e8f\uff0c\u4fdd\u8bc1\u540e\u534a\u90e8\u5206\u67e5\u8be2\u51f8\u58f3\u662f\u6709\u5e8f\u7684\uff0c\u8fd9\u6837\u53ef\u4ee5\u7528\u4e00\u4e2a\u6307\u9488\u626b\u63cf\uff0c\u5426\u5219\u4e8c\u5206\u591a\u4e00\u4e2alog\u3002\n2. \u5206\u6210\u4e24\u5757\u524d\uff0c\u6309$pos$\u5206\u7ec4\uff0c$pos \\leq mid$\u653e\u5728\u524d\u4e00\u5757\uff0c$pos > mid$\u653e\u5728\u540e\u4e00\u5757\uff0c\u4fdd\u8bc1\u7528\u7f16\u53f7\u5c0f\u7684\u66f4\u65b0\u7f16\u53f7\u5927\u7684\u3002\u540c\u65f6\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u5206\u6cbb\u5230\u53f6\u5b50\u662f\u6309\u7f16\u53f7\u987a\u5e8f\u7684\uff0c\uff0c\u5373*\u5bf9\u4e8e\u53f6\u5b50$l = r = pos$\uff0c\u5206\u6cbb\u5230\u53f6\u5b50\u65f6\u8fd9\u4e2a\u8282\u70b9\u5c31\u5df2\u7ecf\u5168\u90e8\u66f4\u65b0\u5b8c\u4e86\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5904\u7406$f_i = \\max\\{f_i, f_{i-1}\\}$\u3002*\n3. \u6700\u540e\u6309$x$\u5f52\u5e76\uff0c\u65b9\u4fbf\u5efa\u4e0a\u51f8\u51f8\u58f3\u3002\n\n*\u4e0d\u8981\u628a\u659c\u7387\u6539\u6210\u4e58\u6cd5\u7684\u5f62\u5f0f*\uff0c\u56e0\u4e3a\u8d1f\u6570\u6bd4\u8f83\u591a\uff0c\u6539\u6210\u4e58\u6cd5\u9700\u8981\u6ce8\u610f\u4e0d\u7b49\u5f0f\u65b9\u5411\uff0c\u76f4\u63a5\u7528\u659c\u7387\u6bd4\u8f83\u65b9\u4fbf\u3002\n\n\u5b9a\u4e49$slope(i, j)$\u4e3a$i$\u5230$j$\u7684\u659c\u7387\uff08$i, j$\u662f\u5206\u6cbb\u8282\u70b9\u7f16\u53f7\uff09\uff0c\u627e\u5230\u51f8\u58f3\u4e2d\u7b2c\u4e00\u4e2a$i$\u6ee1\u8db3$slope(S_i, S_{i+1})<-{A_i \\over B_i}$\u7684\u5c31\u662f\u6700\u4f18\u8f6c\u79fb\u70b9\u4e86\uff0c\u6ce8\u610f\u5982\u679c\u4e24\u4e2a$x$\u76f8\u7b49\uff0c\u8fd4\u56de\u6781\u5927\u659c\u7387\u5c31\u53ef\u4ee5\u4e86\uff0c\u53ef\u4ee5\u4e0d\u7528$eps$\u5224\u65ad\uff0c\u76f4\u63a5\u5224\u7b49\uff0c\u4fdd\u8bc1\u9664\u6570\u4e0d\u4e3a$0$\u5373\u53ef\u3002\n\n### \u5206\u6cbb\u7684\u8fc7\u7a0b\u4f2a\u4ee3\u7801\n1. if(l == r) \u7528f[i-1]\u66f4\u65b0f[i]\uff0c\u8ba1\u7b97x,y exit\n2. cdq(l, mid)\n3. \u5355\u8c03\u6808\u5bf9[l, mid]\u5efa\u51f8\u58f3\n4. \u6309$-{A_i \\over B_i}$\u987a\u5e8f\u626b\u63cf\uff0c\u8f6c\u79fb\n5. cdq(mid+1, r)\n6. \u6309x\u5f52\u5e76\n\n## Code\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\nconst int N = 100005;\nconst double eps = 1e-9, inf = 1e9;\nstruct val{\n\tint p; double x, y;\n}q[N], tmp[N];\ndouble f[N], A[N], B[N], R[N];\nint s[N];\nbool cmp(val a, val b){return -(A[a.p] / B[a.p]) > -(A[b.p] / B[b.p]);}\ndouble slope(int x, int y){\n\tif(q[x].x == q[y].x) return inf;\n\treturn (q[y].y - q[x].y) / (q[y].x - q[x].x);\n}\n\nvoid cdq(int l, int r){\n\tif(l == r){ //\u5b8c\u6210\u5bf9\u8282\u70b9\u7684\u5904\u7406\n\t\tf[l] = max(f[l], f[l-1]);\n\t\tq[l].x = f[l] / (A[l] * R[l] + B[l]) * R[l];\n\t\tq[l].y = f[l] / (A[l] * R[l] + B[l]);\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1, lp = l, rp = mid + 1, tp = l;\n\tfor(int i=l; i<=r; i++) //\u5206\u7ec4\n\t\tif(q[i].p <= mid) tmp[lp++] = q[i];\n\t\telse tmp[rp++] = q[i];\n\tfor(int i=l; i<=r; i++) q[i] = tmp[i];\n\tcdq(l, mid);\n\tint t = 0, p = 1;\n\tfor(int i=l; i<=mid; i++){ //\u5efa\u51f8\u58f3\n\t\twhile(t > 1 && slope(s[t], i) > slope(s[t-1], s[t])) --t;\n\t\ts[++t] = i;\n\t}\n\tfor(int i=mid+1; i<=r; i++){ //\u8f6c\u79fb\n\t\twhile(p < t && slope(s[p], s[p+1]) > -A[q[i].p] / B[q[i].p]) ++p;\n\t\tf[q[i].p] = max(f[q[i].p], q[s[p]].x * A[q[i].p] + q[s[p]].y * B[q[i].p]);\n\t}\n\tcdq(mid+1, r);\n\tlp = l; rp = mid + 1; tp = l;\n\twhile(lp <= mid && rp <= r) //\u5f52\u5e76\n\t\tif(q[lp].x < q[rp].x) tmp[tp++] = q[lp++];\n\t\telse tmp[tp++] = q[rp++];\n\twhile(lp <= mid) tmp[tp++] = q[lp++];\n\twhile(rp <= r) tmp[tp++] = q[rp++];\n\tfor(int i=l; i<=r; i++) q[i] = tmp[i];\n}\n\nint main(){\n\tint n; double s;\n\tscanf(\"%d%lf\", &n, &s);\n\tfor(int i=1; i<=n; i++){\n\t\tscanf(\"%lf%lf%lf\", &A[i], &B[i], &R[i]);\n\t\tq[i].p = i; //pos\n\t\tq[i].x = s / (A[q[i].p] * R[q[i].p] + B[q[i].p]) * R[q[i].p];\n\t\tq[i].y = s / (A[q[i].p] * R[q[i].p] + B[q[i].p]);\n\t\tf[i] = s; //\u7528s\u521d\u59cb\u5316\n\t}\n\tsort(q+1, q+1+n, cmp);\n\tcdq(1, n);\n\tprintf(\"%.3lf\\n\", f[n]);\n\treturn 0;\n}\n```",
        "postTime": 1564756292,
        "uid": 31756,
        "name": "RiverHamster",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4027 \u3010[NOI2007]\u8d27\u5e01\u5151\u6362\u3011"
    },
    {
        "content": "\n[\u9898\u76ee\u94fe\u63a5](https://loj.ac/problem/2353)\n\n## \u9898\u76ee\u5927\u610f\n\u6709 $A,B$ \u4e24\u79cd\u91d1\u5238\uff0c\u5b83\u4eec\u6bcf\u5929\u7684\u4ef7\u503c\u90fd\u4e0d\u540c\uff0c\u5728\u7b2c $i$ \u5929\u65f6\u5206\u522b\u4e3a $A_i,B_i$\uff0c\u4f60\u53ef\u4ee5\u7528\u624b\u4e2d\u7684\u91d1\u5238\u6362\u53d6\u76f8\u5e94\u4ef7\u503c\u7684\u94b1\uff0c\u6216\u7528\u94b1\u5151\u6362\u76f8\u540c\u4ef7\u503c\u7684\u91d1\u5238\uff0c\u4f46\u5151\u6362\u5230\u7684\u4e24\u79cd\u91d1\u5238\u7684\u6570\u91cf\u4e4b\u6bd4\u662f\u4e00\u4e2a\u5b9a\u503c\uff0c\u8fd9\u4e2a\u5b9a\u503c\u5728\u7b2c $i$ \u5929\u4e3a $R_i$\u3002\n\n\u73b0\u7ed9\u51fa $n$ \u5929\u4e2d\u4e24\u79cd\u91d1\u5238\u7684\u4ef7\u503c\uff0c $R$\uff0c\u4ee5\u53ca\u4f60\u521d\u59cb\u65f6\u62e5\u6709\u7684\u8d44\u91d1 $S$\uff0c\u6c42 $n$ \u5929\u540e\u4f60\u6700\u591a\u80fd\u6709\u591a\u5c11\u94b1\u3002\n\n\u6ce8\uff1a\u4e00\u5b9a\u5b58\u5728\u4e00\u79cd\u6700\u4f18\u65b9\u6848\uff0c\u6ee1\u8db3\uff1a\u6bcf\u6b21\u5151\u6362\u91d1\u5238\u82b1\u5149\u6240\u6709\u7684\u94b1\uff0c\u6bcf\u6b21\u6362\u94b1\u65f6\u82b1\u6389\u6240\u6709\u7684\u91d1\u5238\u3002\n\n## \u89e3\u9898\u601d\u8def\n\u4e00\u773cdp\u9898 ~~\uff08\u5927\u4f6c\u597d\u50cf\u90fd\u662f\u8fd9\u6837\u8bf4\u7684\uff09~~\u3002\n\n\u5148\u8bbe\u4e2a\u72b6\u6001\u5427\uff0c\n\n\u8bbe $f[i]$ \u8868\u793a\u5728\u7b2c $i$ \u5929\u5356\u6389\u6240\u6709\u7684\u91d1\u5238\u80fd\u83b7\u5f97\u7684\u6700\u591a\u94b1\u6570\uff0c\u90a3\u6211\u4eec\u53ea\u9700\u8981\u51b3\u5b9a\u4e0a\u4e00\u6b21\u4e70\u91d1\u5238\u662f\u5728\u4ec0\u4e48\u65f6\u5019\uff0c\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n$$ f[i]=max \\{ num_A*A_i+num_B*B_i \\} $$\n$num_A$ \u548c $num_B$ \u7684\u503c\u5c31\u53d6\u51b3\u4e0e\u4f60\u4e0a\u4e00\u6b21\u662f\u5728\u4ec0\u4e48\u65f6\u5019\u4e70\u7684\u91d1\u5238\u3002\n\n\u5047\u8bbe\u6211\u4eec\u4e0a\u4e00\u6b21\u662f\u5728\u7b2c $j$ \u5929\u4e70\u7684\u91d1\u5238\uff0c\u800c\u4e0a\u4e00\u6b21\u5356\u6389\u91d1\u5238\u662f\u5728\u7b2c $k$ \u5929\uff08$k\\le j <i$\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u7b2c $j$ \u5929\u62e5\u6709\u7684\u8d44\u91d1\u5c31\u662f $f[k]$\uff0c\u53ef\u4ee5\u5f97\u51fa\u5f0f\u5b50\uff1a\n$$ num_A*A_j+num_B*B_j=f[k] $$\n\u53d8\u4e2a\u5f62\n$$ R_j*num_B*A_j+num_B*B_j=f[k] $$\n\u79fb\u4e2a\u9879\n$$ num_B=\\frac{f[k]}{R_j*A_j+B_j} $$\n\u5f88\u5bb9\u6613\u770b\u51fa\u6765\uff0c$f[k]$ \u8d8a\u5927\u8d8a\u597d\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u4e2a $maxn$ \u4ee3\u66ff\n$$ num_B=\\frac{maxn}{R_j*A_j+B_j} $$\n\u73b0\u5728\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u51fa\u5b8c\u6574\u7684\u8f6c\u79fb\u65b9\u7a0b\n$$ f[i]=max \\{ \\frac{R_j*maxn}{R_j*A_j+B_j}*A_i+\\frac{maxn}{R_j*A_j+B_j}*B_i \\}  $$\n \n ~~\u8fa3\u773c\u775b~~\n \u4e00\u4e2a $n^2$ \u7b97\u6cd5\u5c31\u5b8c\u6210\u4e86\uff0c\u770b\u4e0b\u6570\u636e\u8303\u56f4\n> \u5bf9\u4e8e $100\\%$ \u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u6ee1\u8db3 $1\\le N\\le 10^5$.....\n\n~~\u624b\u52a8\u518d\u89c1~~\n\n\u6ca1\u529e\u6cd5\uff0c\u8003\u8651\u4f18\u5316\u5427\u3002\n\u518d\u770b\u773c\u5f0f\u5b50\n$$ f[i]=max \\{ num_A*A_i+num_B*B_i \\} $$\n\u4e0e $j$ \u6709\u5173\u7684\u548c\u4e0e $i$ \u6709\u5173\u7684\u7c98\u5728\u4e86\u4e00\u8d77\uff0c\u5355\u8c03\u961f\u5217\u662f\u6ca1\u6cd5\u641e\u4e86\uff0c\u659c\u7387\u4f18\u5316\u5427\u3002\n\u628a\u5f0f\u5b50\u8f6c\u5316\u4e00\u4e0b\uff0c\u5148\u628a $max$ \u6254\u6389\uff0c\u9664\u4e2a $B_i$\uff08\u8fd9\u7b2c\u4e00\u6b65\u6211\u8fd8\u662f\u770b\u4e86\u9898\u89e3\u624d\u77e5\u9053\u7684\u2026\u2026\uff09\n$$ \\frac{f[i]}{B_i}=num_A*\\frac{A_i}{B_i}+num_B$$\n\u518d\u79fb\u4e2a\u9879\n$$ num_B=-\\frac{A_i}{B_i}*num_A+\\frac{f[i]}{B_i}$$\n\u641e\u5b9a\uff0c\u59a5\u59a5\u7684\u659c\u7387\u4f18\u5316\uff0c\n\u4f46\uff0c\n\u8fd9\u91cc\u7684 $num_A$ \u548c $-\\frac{A_i}{B_i}$ \u90fd\u4e0d\u662f\u9012\u589e\u7684\uff0c\u961f\u5217\u641e\u4e0d\u4e86\u2026\u2026\n\u600e\u4e48\u529e\uff0c\u4e0d\u4f1a\u505a\uff0c\n\n\u6253\u5f00\u9898\u89e3\u770b\u4e00\u773c\uff0c\u5e73\u8861\u6811\uff0ccdq\uff0c\u5173\u4e0a\u3002\n\ncdq\u6ca1\u6709\u601d\u8def\uff0c\u8fd8\u662f\u7528\u5e73\u8861\u6811\u5427\uff0c\u867d\u7136\u5199\u8d77\u6765\u9ebb\u70e6\u70b9 ~~\uff08\u4e3a\u4e86\u5199\u8fd9\u9053\u9898\u6211\u53c8\u53bb\u6572\u4e86\u904d\u5e73\u8861\u6811\u7684\u677f\u5b50\uff0c\u53c8\u8c03\u4e86\u4e00\u4e2a\u5c0f\u65f6\u2026\u2026\uff09~~\n\n\u90a3\u73b0\u5728\u601d\u8def\u5c31\u5f88\u660e\u4e86\u4e86 ~~\uff08\u53ef\u80fd\u5427\uff09~~\uff0c\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u4e00\u4e2a\u4e0a\u51f8\u5305\uff0c\u5c06\u51f8\u5305\u4e0a\u7684\u70b9\u6309\u6a2a\u5750\u6807\u6392\u5e8f\uff0c\u7136\u540e\u6bcf\u6b21\u627e\u5730\u65b9\u63d2\u5165\uff08\u6216\u4e0d\u63d2\u5165\uff09\uff0c\u7136\u540e\u5220\u9664\u6ca1\u7528\u7684\u70b9\u5c31\u884c\u4e86\uff0c\u5e76\u5728\u6bcf\u4e00\u4e2a\u70b9\u5b58\u4e0b\u5b83\u4e0e\u51f8\u5305\u4e0a\u524d\u4e00\u4e2a\u70b9\u8fde\u63a5\u5f62\u6210\u7684\u76f4\u7ebf\u7684\u659c\u7387 $tk$\uff0c\u66f4\u65b0\u72b6\u6001\u65f6\u627e\u5230\u51f8\u5305\u4e0a $tk$ \u6bd4\u5f53\u524d\u76f4\u7ebf\u5927\u7684\u7b2c\u4e00\u4e2a\u70b9\u8fdb\u884c\u8f6c\u79fb\u5c31\u884c\u4e86\uff08\u5efa\u8bae\u81ea\u5df1\u753b\u4e2a\u56fe\u7406\u89e3\u4e00\u4e0b\uff09\u3002\n\n\u8fd9\u9053\u9898\u8c8c\u4f3c\u5230\u8fd9\u91cc\u5c31\u5168\u90e8\u89e3\u5b8c\u4e86\uff0c\u4f46\u5b9e\u9645\u4e0a\u8fd8\u6709\u5f88\u591a\u7ec6\u8282\u9700\u8981\u8003\u8651\uff0c\u5305\u62ec\u5728\u63d2\u5165\u3001\u5220\u9664\u8282\u70b9\u662f\u8981\u66f4\u65b0\u5b83\u7684\u524d\u9a71\u548c\u540e\u7f00\u7684\u4fe1\u606f\uff0c\u4ee5\u53ca\u82b1\u5f0f\u5361\u7cbe\u5ea6\u2026\u2026\uff08\u6570\u636e\u91cc\u7adf\u7136\u51fa\u73b0\u4e86\u4e24\u4e2a\u70b9\u7684\u6a2a\u5750\u6807\u5c0f\u6570\u70b9\u540e\u5341\u51e0\u4f4d\u90fd\u76f8\u540c\u7684\u60c5\u51b5\u2026\u2026\uff09\u3002\n\n\u6700\u540e\u8fd9\u9053\u9898\u505a\u4e0b\u6765\u524d\u524d\u540e\u540e\u82b1\u4e86\u53ef\u80fd\u6709\u4e24\u5929\u2026\u2026\n\n## \u4ee3\u7801\u5b9e\u73b0\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#define db double\nusing namespace std;\nconst int N=100000+7;\nint n,q[N],rt,cnt;\ndb f[N],a[N],b[N],r[N],X[N],Y[N],K[N],maxn;\nint lc[N],rc[N],p[N],pre[N],nxt[N];\ndb tk[N];\ndb read(){\n    char c=getchar(); db f=1,x=0;\n    while(c<'0'||c>'9'){ f=c=='-'?-1:1;c=getchar(); }\n    while(c>='0'&&c<='9'){ x=x*10+c-'0';c=getchar(); }\n    if(c!='.') return f*x;\n    c=getchar(); db y=1;\n    while(c>='0'&&c<='9'){ y/=10;x+=(c-'0')*y;c=getchar(); }\n    return f*x;\n}\nvoid zig(int &u){\n    int ls=lc[u];\n    lc[u]=rc[ls];\n    rc[ls]=u;\n    u=ls;\n}\nvoid zag(int &u){\n    int rs=rc[u];\n    rc[u]=lc[rs];\n    lc[rs]=u;\n    u=rs;\n}\nint g_pre(int k){\n    int u=rt,ans=0;\n    while(u){\n        if(X[u]<X[k]){ ans=u; u=rc[u]; }\n        else u=lc[u];\n    }\n    return ans;\n}\nint g_nxt(int k){\n    int u=rt,ans=0;\n    while(u){\n        if(X[u]>X[k]){ ans=u; u=lc[u]; }\n        else u=rc[u];\n    }\n    return ans;\n}\ndb g_k(int a,int b){\n    if(!a||!b) return 0;\n    return (Y[a]-Y[b])/(X[a]-X[b]);\n}\nbool insert(int &u,int k){\n    if(!u||X[u]==X[k]){\n    \tif(X[u]==X[k]&&Y[k]<=Y[u]) return 0;\n        u=k;\n        pre[u]=g_pre(u);\n        nxt[u]=g_nxt(u);\n        if(pre[u]) nxt[pre[u]]=u;\n        if(nxt[u]) pre[nxt[u]]=u;\n        tk[u]=g_k(u,pre[u]);\n        if(nxt[u]) tk[nxt[u]]=g_k(u,nxt[u]);\n        p[u]=rand();\n        return 1;\n    }\n    if(X[u]>X[k]){\n        bool f=insert(lc[u],k);\n        if(p[lc[u]]<p[u]) zig(u);\n        return f;\n    }\n    else{\n        bool f=insert(rc[u],k);\n        if(p[rc[u]]<p[u]) zag(u);\n        return f;\n    }\n}\nvoid del(int &u,int k){\n    if(u==k){\n        if(!lc[u]||!rc[u]){ u=lc[u]+rc[u];return; }\n        else if(p[lc[u]]<p[rc[u]]){ zig(u);del(rc[u],k); }\n        else{ zag(u);del(lc[u],k); }\n    }\n    else if(X[u]>X[k]) del(lc[u],k);\n    else del(rc[u],k);\n}\nvoid add(int k){\n\tX[k]=r[k]*maxn/(a[k]*r[k]+b[k]);\n\tY[k]=X[k]/r[k];\n    /*Y[k]=maxn/(a[k]*r[k]+b[k]);\n    X[k]=Y[k]*r[k];*/           // \u8fd9\u91cc\u5de8\u6076\u5fc3\u2026\u2026\u5982\u679c\u6309\u6211\u6ce8\u91ca\u6389\u7684\u65b9\u6cd5\u5199\u7684\u8bdd\u6709\u4e00\u4e2a\u70b9\u4f1a WA \u2026\u2026\n    int pr=g_pre(k),nx=g_nxt(k);\n    if(nx&&g_k(pr,k)<=g_k(nx,k)) return;\n    if(!insert(rt,k)) return;\n    while(pre[k]&&tk[k]>tk[pre[k]]){\n        del(rt,pre[k]);\n        pre[k]=g_pre(k);\n        if(pre[k]) nxt[pre[k]]=k;\n        tk[k]=g_k(k,pre[k]);\n    }\n    while(nxt[nxt[k]]&&tk[nxt[k]]<tk[nxt[nxt[k]]]){\n        del(rt,nxt[k]);\n        nxt[k]=g_nxt(k);\n        if(nxt[k]) pre[nxt[k]]=k;\n        if(nxt[k]) tk[nxt[k]]=g_k(k,nxt[k]);\n    }\n}\nint k_pre(int k){\n    int u=rt,ans=0;\n    while(u){\n    \tif(tk[u]>K[k]){ ans=u;u=rc[u]; }\n        else u=lc[u];\n    }\n    return ans;\n}\nvoid update(int i){\n    K[i]=-a[i]/b[i];\n    int j=k_pre(i);\n    f[i]=a[i]*X[j]+b[i]*Y[j];\n}\nvoid check(){\n    cin>>n;\n    for(int i=1;i<=n;i++) scanf(\"%lf%lf\",&X[i],&Y[i]);\n    for(int i=1;i<=n;i++) add(i);\n}\nint main(){\n    n=(int)read(),f[1]=read();maxn=f[1];\n    for(int i=1;i<=n;i++){ \n        a[i]=read();\n        b[i]=read();\n        r[i]=read();\n    }\n    add(1);\n    for(int i=2;i<=n;i++){\n        update(i);\n        maxn=max(maxn,f[i]);\n        add(i);\n    }\n    printf(\"%.3lf\\n\",maxn);\n    return 0;\n}\n```\n\n\n\n",
        "postTime": 1565161839,
        "uid": 113693,
        "name": "BruceW_07",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4027 \u3010[NOI2007]\u8d27\u5e01\u5151\u6362\u3011"
    },
    {
        "content": "# [NOI2007]\u8d27\u5e01\u5151\u6362\n\n[LG\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P4027)\n\n\u65e5\u5e38\u6253[\u5e7f\u544a](https://www.cnblogs.com/cj-chd/p/10451774.html)\n\n\u59a5\u59a5\u7684$n \\log n$cdq\u505a\u6cd5\u3002\n\n\u8fd9\u9898\u7528cdq\u5206\u6cbb\u4e5f\u53ef\u4ee5$n \\log n$~~\u4f46\u662f\u5728\u6d1b\u8c37\u4e0a\u7adf\u7136\u6bd4\u4e00\u4e9b\u4f18\u79c0\u7684splay\u8dd1\u5f97\u6162\u771f\u662f\u89c1\u4e86\u9b3c\u4e86\u770b\u6765\u8fd8\u662f\u4eba\u4e11\u5e38\u6570\u5927\u7684\u95ee\u9898~~\n\n### \u5148\u63a8\u5f0f\u5b50\n\n\uff08\u8fd9\u4e00\u6bb5\u4e0e\u5176\u4ed6\u9898\u89e3\u4e0d\u4f1a\u6709\u592a\u591a\u4e0d\u540c\uff0c\u5df2\u7ecf\u4e86\u89e3\u4e86\u7684\u540c\u5b66\u53ef\u4ee5\u7565\u8fc7\uff0c\u6ce8\u610f\u4e00\u4e0b\u8f6c\u79fb\u4e2d$x$\u548c$k$\u8868\u793a\u4ec0\u4e48\u5c31\u884c\u4e86\u3002\uff09\n\n\u8bbe$f[i]$\u8868\u793a\u5230\u7b2c$i$\u5929\u6700\u591a\u6709\u591a\u5c11\u94b1\uff0c$g[i]$\u8868\u793a\u7528\u7b2c$i$\u5929\u65f6\u7684\u94b1\u6700\u591a\u80fd\u4e70\u591a\u5c11B\u5238\uff0c\u6613\u77e5$g[i] = \\frac {f[i]} {r[i] * a[i] + b[i]}$\u3002\n\n\u5f97\u5230\u8f6c\u79fb\uff1a$f[i] = \\max \\{ \\max \\limits _{j = 1} ^{i - 1} \\{g[j] * \\frac{b[i]} {a[i]} + r[j] * g[j]\\} * a[i], f[i - 1] \\}$\uff0c\u5916\u9762\u7684$\\max$\u53ef\u4ee5\u5355\u72ec\u5224\uff0c\u91cc\u9762\u7684$\\max$\u53ef\u4ee5\u770b\u51fa\u662f\u4e00\u4e2a\u659c\u7387\u4f18\u5316\u7684\u5f0f\u5b50\uff08\u628a$\\frac {b[i]} {a[i]}$\u89c6\u4f5c$x$\uff0c\u628a$g[j]$\u89c6\u4f5c$k$\uff0c\u628a$r[j] * g[j]$\u89c6\u4f5c$b$\uff09\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u659c\u7387$k$\u5e76\u4e0d\u662f\u5355\u8c03\u7684\uff0c\u6240\u4ee5\u4f20\u7edf\u7684\u659c\u7387\u4f18\u5316\u5c31\u65e0\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002\n\n\u8fd9\u65f6\u5c31\u884d\u751f\u51fa\u4e24\u79cd\u5199\u6cd5\u4e86\uff0c\u4e00\u79cd\u662f\u7528splay\u7ef4\u62a4\u51f8\u5305\uff0c\u4e00\u79cd\u662f\u7528cdq\u5206\u6cbb\u5904\u7406\u8f6c\u79fb\uff0c\u6211\u4eec\u8981\u4ecb\u7ecd\u7684\u662f\u540e\u8005\u3002\n\n### \u8003\u8651\u5206\u6cbb\n\n\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a$f[i]$\uff0c\u6211\u4eec\u53ea\u8981\u8003\u8651\u5230\u6240\u6709$1 \\le j \\le i - 1$\u5bf9\u5b83\u7684\u5f71\u54cd\u5c31\u884c\u4e86\uff0ccdq\u5206\u6cbb\u64c5\u957f\u5904\u7406\u8fd9\u7c7b\u95ee\u9898\u3002\n\n\u5bf9\u4e8e\u4e00\u6bb5\u533a\u95f4$[l, r]$\uff0c\u5148\u9012\u5f52\u5de6\u5b50\u533a\u95f4$[l, m]$\uff0c\u4fdd\u8bc1$[l, m]$\u7684$f$\u548c$g$\u503c\u90fd\u5df2\u7ecf\u5f97\u5230\u4e86\uff1b\u628a\u5de6\u5b50\u533a\u95f4\u6309$k$\u9012\u589e\u6392\u5e8f\uff0c\u628a\u53f3\u5b50\u533a\u95f4\u6309$x$\u9012\u589e\u6392\u5e8f\uff0c\u5c31\u53ef\u4ee5\u6309\u5e73\u65f6\u7684\u659c\u7387\u4f18\u5316\u6765$O(n)$\u8f6c\u79fb\uff1b\u518d\u628a\u53f3\u5b50\u533a\u95f4\u6309\u5728\u539f\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\u9012\u589e\u6392\u5e8f\uff0c\u7136\u540e\u9012\u5f52\u53f3\u5b50\u533a\u95f4\uff0c\u6b64\u65f6\u5de6\u5b50\u533a\u95f4\u5bf9\u53f3\u5b50\u533a\u95f4\u7684\u5f71\u54cd\u90fd\u5df2\u7ecf\u88ab\u8003\u8651\u5b8c\u4e86\uff1b\u8fb9\u754c\u662f$l == r$\uff0c\u5230\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0$1$\u5230$i - 1$\u5bf9$i$\u7684\u5f71\u54cd\u90fd\u5df2\u7ecf\u88ab\u8003\u8651\u8fc7\u4e86\uff0c\u522b\u5fd8\u4e86$f[i] - 1$\u5230$f[i]$\u7684\u8f6c\u79fb\u3002\n\n\u8fd9\u6837\u505a\u662f$O(n (\\log n) ^ 2)$\u7684\uff0c\u8ba9\u4eba\u6709\u70b9\u4e0d\u723d\uff0c\u4e8b\u5b9e\u4e0a\u6211\u4eec\u53ef\u4ee5\u505a\u5230$O(n \\log n)$\u3002\n\n### \u600e\u6837\u505a\u52301\u4e2a$\\log$\n\n\u4e8b\u5b9e\u4e0acdq\u5206\u6cbb\u672c\u8eab\u662f\u4e00\u4e2a\u5f52\u5e76\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u8fc7\u7a0b\u53bb\u6389\u6392\u5e8f\u7684\u590d\u6742\u5ea6\u3002\n\n\u6211\u4eec\u5e0c\u671b\u62ff\u5230$[l, r]$\u8fd9\u4e2a\u533a\u95f4\u7684\u65f6\u5019$x$\u662f\u5355\u8c03\u7684\uff0c\u4e8e\u662f\u5728\u5916\u9762\u628a\u539f\u5e8f\u5217\u6309$x$\u9012\u589e\u6392\u5e8f\uff1b\u62ff\u5230\u4e00\u4e2a$x$\u9012\u589e\u7684\u533a\u95f4\u540e\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u539f\u5e8f\u5217\u4e2d\u9760\u5de6\u7684\u4e1c\u897f\u53bb\u5230\u5de6\u5b50\u533a\u95f4\uff0c\u4e8e\u662f\u6211\u4eec\u628a$[l, r]$\u626b\u4e00\u904d\uff0c\u628a\u5728\u539f\u5e8f\u5217\u4e2d\u4f4d\u7f6e$\\le m(m = l + r >> 1)$\u7684\u4e1c\u897f\u653e\u5de6\u8fb9\uff0c$\\ge m$\u7684\u653e\u53f3\u8fb9\uff0c\u800c\u4e14\u5de6\u53f3\u5b50\u533a\u95f4\u5bf9\u4e8e$x$\u7684\u5355\u8c03\u6027\u6ca1\u6709\u53d7\u5230\u5f71\u54cd\uff1b\u6211\u4eec\u8981\u5904\u7406\u5de6\u8fb9\u5bf9\u53f3\u8fb9\u7684\u5f71\u54cd\uff0c\u4e8e\u662f\u5148\u9012\u5f52\u5de6\u5b50\u533a\u95f4\uff0c\u518d\u50cf\u5e73\u65f6\u4e00\u6837\u659c\u7387\u4f18\u5316\u5904\u7406\u8f6c\u79fb\uff0c\u7136\u540e\u9012\u5f52\u53f3\u5b50\u533a\u95f4\uff1b\u6211\u4eec\u5e0c\u671b\u4e00\u4e2a\u533a\u95f4\u7684\u5de6\u5b50\u533a\u95f4\u9012\u5f52\u56de\u6765\u7684\u65f6\u5019\u662f\u5bf9\u4e8e$k$\u5355\u8c03\u9012\u589e\u7684\uff0c\u4e8e\u662f\u5728\u6700\u540e\u5bf9$k$\u505a\u4e00\u904d\u5f52\u5e76\u6392\u5e8f\u3002\u8fd9\u6837\u6bcf\u4e00\u5c42\u9012\u5f52\u662f$O(n)$\u7684\u3002\n\n\u5949\u4e0a\u849f\u84bb\u7684\u5927\u5e38\u6570\u4ee3\u7801\u3002\n\n```cpp\n//written by newbiechd\n#include <iostream>\n#include <iomanip>\n#include <algorithm>\n#define R register\n#define I inline\n#define D double\nusing namespace std;\nconst int N = 100003;\nconst D eps = 1e-8;\nint q[N];\nD f[N], g[N];\nstruct cash {\n    int id;\n    D a, b, r, x;\n    cash() {}\n    cash(int id, D a, D b, D r) : id(id), a(a), b(b), r(r), x(b / a) {}\n    I int operator < (cash q) { return x != q.x ? x < q.x : id < q.id; }\n}p[N], b[N];\nI D cross(int u, int v) { return (p[u].r * g[p[u].id] - p[v].r * g[p[v].id]) / (g[p[v].id] - g[p[u].id]); }\nI D calc(int u, int v) { return g[p[u].id] * (p[v].x + p[u].r); }\nI void update(int u, D v) {\n    if (f[p[u].id] < v)\n        f[p[u].id] = v, g[p[u].id] = f[p[u].id] / (p[u].b + p[u].r * p[u].a);\n}\nvoid solve(int l, int r) {\n    if (l == r) {\n        update(l, f[p[l].id - 1]);\n        return ;\n    }\n    R int m = (l + r) >> 1, i, h, t;\n    for (h = l, t = m + 1, i = l; i <= r; ++i)\n        p[i].id <= m ? b[h++] = p[i] : b[t++] = p[i];\n    for (i = l; i <= r; ++i)\n        p[i] = b[i];\n    solve(l, m), h = 1, t = 0;\n    for (i = l; i <= m; ++i) {\n        while (h < t && cross(q[t], i) < cross(q[t - 1], i) + eps)\n            --t;\n        q[++t] = i;\n    }\n    for (; i <= r; ++i) {\n        while (h < t && calc(q[h], i) < calc(q[h + 1], i) + eps)\n            ++h;\n        update(i, calc(q[h], i) * p[i].a);\n    }\n    solve(m + 1, r);\n    for (h = l, t = m + 1, i = l; h <= m && t <= r; )\n        g[p[h].id] < g[p[t].id] ? b[i++] = p[h++] : b[i++] = p[t++];\n    while (h <= m)\n        b[i++] = p[h++];\n    while (t <= r)\n        b[i++] = p[t++];\n    for (i = l; i <= r; ++i)\n        p[i] = b[i];\n}\nint main() {\n    ios::sync_with_stdio(0);\n    R int n, i;\n    D a, b, r;\n    cin >> n >> f[1];\n    for (i = 1; i <= n; ++i)\n        cin >> a >> b >> r, p[i] = cash(i, a, b, r);\n    g[1] = f[1] / (p[1].r * p[1].a + p[1].b), sort(p + 1, p + n + 1),\n        solve(1, n), cout << fixed << setprecision(3) << f[n];\n    return 0;\n}\n\n```",
        "postTime": 1551346070,
        "uid": 91933,
        "name": "newbiechd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4027 \u3010[NOI2007]\u8d27\u5e01\u5151\u6362\u3011"
    },
    {
        "content": "# [P4027 [NOI2007]\u8d27\u5e01\u5151\u6362](https://www.luogu.org/problemnew/show/P4027)\n## \u7b97\u6cd5\uff1adp+\u659c\u7387\u4f18\u5316\n**\u9898\u9762\u5341\u5206\u5197\u957f\uff0c\u9898\u610f\u5927\u6982\u662f\u6709\u4e00\u79cd\u91d1\u5238\u6bcf\u5929\u4ef7\u503c\u4f1a\u6709\u53d8\u5316\uff0c\u4f60\u53ef\u4ee5\u5728\u67d0\u4e9b\u65f6\u95f4\u70b9\u4e70\u5165\u6216\u5356\u51fa\u6240\u6709\u7684\u91d1\u5238\uff0c\u95ee\u6700\u5927\u6536\u76ca**  \n### \u6839\u636e\u9898\u610f\uff0c\u5f88\u5bb9\u6613\u5217\u51fa\u6734\u7d20\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b:\n#### \u8bbe$f_i$\u4e3a\u7b2c$i$\u5929B\u5238\u7684\u6570\u91cf\uff0c$ans_j$\u4e3a\u4ee5\u5f53\u524d\u4ef7\u683c\u5356\u5149\u7b2c$j$\u5929\u7684\u91d1\u5238\u53ef\u83b7\u5f97\u7684\u6536\u76ca\uff0c\u5219\n$f_i=\\max{ans_j}/(a_i*r_i+b_i)$\n#### $O(n)$\u6c42$\\max{ans_j}$,\u590d\u6742\u5ea6\u4e3a$O(n^2)$\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\ntypedef long long LL;\nconst int MAXN=1024*100;\nint N;\ndouble S,a[MAXN],b[MAXN],r[MAXN],f[MAXN],ans;\nint main(){\n    scanf(\"%d%lf\",&N,&S);\n    for(int i=1;i<=N;i++){\n        scanf(\"%lf%lf%lf\",&a[i],&b[i],&r[i]);\n    }\n    ans=S;\n    f[1]=ans*r[1]/(a[1]*r[1]+b[1]);\n    for(int i=1;i<=N;i++){\n        for(int j=1;j<i;j++){\n            ans=max(ans,f[j]*a[i]+f[j]/r[j]*b[i]);\n        }\n        f[i]=ans*r[i]/(a[i]*r[i]+b[i]);\n    }\n    printf(\"%.3lf\",ans);\n    return 0;\n}\n```\n#### \u7136\u800c\u6b64\u9898\u8981\u6c42$O(nlogn)$\u7684\u505a\u6cd5\uff0c\u6545\u6734\u7d20\u7684dp\u65e0\u6cd5AC\uff0c\u6b64\u65f6\u53ef\u4ee5\u60f3\u5230\u659c\u7387\u4f18\u5316\n### step1\uff1a\u8f6c\u5316\u65b9\u7a0b\n#### \u8bbe$a_i$\u4e3a\u7b2c$i$\u5929A\u5238\u7684\u4ef7\u683c\uff0c$b_i$\u4e3a\u7b2c$i$\u5929B\u5238\u7684\u4ef7\u683c\uff0c$ca_i$\u4e3a\u7b2c$i$\u5929A\u5238\u7684\u6570\u91cf\uff0c$cb_i$\u4e3a\u7b2c$i$\u5929B\u5238\u7684\u6570\u91cf\uff0c$f_i$\u4e3a\u7b2c$i$\u5929\u7684\u6700\u5927\u6536\u76ca\n#### \u5219$f_i=\\max{ca_j*a_i+cb_j*b_i}$\n#### \u2234\u5982\u679cj\u6bd4k\u66f4\u4f18\uff0c\u6709\n#### $ca_j*a_i+cb_j*b_i>ca_k*a_i+cb_k*b_i$\n#### \u2234$(cb_j-cb_k)*b_i>-a_i*(ca_j-ca_k)$\n### \u2234$\\frac{cb_j-cb_k}{ca_j-ca_k}>-\\frac{a_i}{b_i}$\n#### \u4ee5$ca$\u4e3a\u6a2a\u5750\u6807$cb$\u4e3a\u7eb5\u5750\u6807\u5efa\u7acb\u5982\u56fe\u6240\u793a\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\n![](https://cdn.luogu.com.cn/upload/pic/47739.png)\n### \u5269\u4e0b\u7684\u5c31\u53ef\u4ee5[-\u659c\u7387\u4f18\u5316-](https://www.luogu.org/blog/guo-shao-yang-2005/xie-shuai-you-hua)\u4e86\n#### \u4e0d\u8fc7\u6b64\u9898\u4e0d\u6bd4\u6a21\u677f\u9898\uff0cca\u4e0ecb\u4e0d\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u6240\u4ee5\u9700\u8981\u7528\u5e73\u8861\u6811\u6216cdq\u7b49\u65b9\u6cd5\u7ef4\u62a4\uff0c\u6b64\u5904\u7528stl_set\u7ef4\u62a4\uff08\u56e0\u4e3a\u662f\u51f8\u58f3\uff0c\u6240\u4ee5\u659c\u7387\u4e0e\u6a2a\u5750\u6807\u540c\u65f6\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u5173\u952e\u5b57\u67e5\u627e\uff09\n#### \u6b64\u5904\u5207\u7ebf\u53ea\u8981\u627e$-\\frac{a}{b}$\u7684lower_bound\u5373\u53ef\uff08\u4ee3\u7801\u4e2d\u7684query\uff09\n#### \u6b64\u5904\u63d2\u5165\u70b9\u8981\u628a\u5f53\u524d\u4f4d\u7f6e\u4e24\u8fb9\u7684\u70b9\u90fd\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u4e0e\u4e0a\u51f8\u58f3\u51b2\u7a81\uff0c\u5220\u9664\uff08\u4ee3\u7801\u4e2d\u7684insert\uff09\n#### \u5b9e\u73b0\u5c31\u4e0d\u96be\u4e86\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\n#include<set>\nusing namespace std;\ntypedef long long LL;\nconst int MAXN=1024*100;\nint N;\ndouble S,A[MAXN],B[MAXN],R[MAXN],F[MAXN],CA[MAXN],CB[MAXN];\ninline double ABS(double x) { return x>0?x:-x; }\nstruct node {\n    double X,Y,K;\n    int flag;\n    node() { X=Y=K=flag=0; }\n    node(double x,double y) { X=x; Y=y; flag=0; }\n    friend inline bool operator<(node x,node y) {\n        if(x.flag||y.flag) { return x.K>y.K; }\n        return x.X<y.X;\n    }\n    friend inline bool operator==(node x,node y) { return ABS(x.X-y.X)<1e-8; }\n    friend inline double operator*(node x,node y) { return (y.Y-x.Y)/(y.X-x.X); }//\u659c\u7387\n    inline bool error() { return X<-1e20||Y<-1e20; }\n} error(-1e21,-1e21);\nset<node> dq;\ntypedef set<node>::iterator ITER;\ninline node next(node x) {\n    ITER ii=dq.upper_bound(x);\n    return ii==dq.end()?error:*ii;\n}\ninline node lower(node x) {\n    ITER ii=dq.lower_bound(x);\n    return ii==dq.end()?error:*ii;\n}\ninline node pre(node x) {\n    ITER ii=dq.lower_bound(x);\n    return ii==dq.begin()?error:*(--ii);\n}\ninline void insert(node x) {\n    if(dq.empty()) {\n        x.K=0;\n        dq.insert(x);\n        return;\n    }\n    node L=pre(x),R=lower(x);\n    if((L.error()&&x.Y<R.Y)||(!L.error()&&!R.error()&&L*x-L*R<1e-8)/**/||(x==R)) { return; }\n    R=next(x);\n    while(1) {\n        L=R;\n        R=next(L);\n        if(L.error()||R.error()||(x*L)-(L*R)>=1e-8) { break; }\n        dq.erase(L);\n    }\n    L=pre(x);\n    while(1) {\n        R=L;\n        L=pre(R);\n        if(L.error()||R.error()||(L*R)-(R*x)>=1e-8) { break; }\n        dq.erase(R);\n    }\n    L=pre(x);\n    R=next(x);\n    x.K=(L.error()?0:(L*x));\n    dq.insert(x);\n    if(!R.error()) {\n        dq.erase(R);\n        R.K=(x*R);\n        dq.insert(R);\n    }\n}\ninline double query(double x,double y) {\n    node ii;\n    ii.flag=1;\n    ii.K=-x/y;\n    ii=*(--dq.lower_bound(ii));\n    return ii.error()?0:ii.X*x+ii.Y*y;\n}\nint main() {\n    scanf(\"%d%lf\",&N,&S);\n    for(int i=1; i<=N; i++) {\n        scanf(\"%lf%lf%lf\",&A[i],&B[i],&R[i]);\n    }\n    F[1]=S;\n    CB[1]=S/(A[1]*R[1]+B[1]);\n    CA[1]=CB[1]*R[1];\n    insert(node(CA[1],CB[1]));\n    for(int i=2; i<=N; i++) {\n        F[i]=max(F[i-1],query(A[i],B[i]));\n        CB[i]=F[i]/(A[i]*R[i]+B[i]);\n        CA[i]=CB[i]*R[i];\n        insert(node(CA[i],CB[i]));\n    }\n    printf(\"%.3lf\",F[N]);\n    return 0;\n}\n```",
        "postTime": 1546326756,
        "uid": 70252,
        "name": "guoshaoyang",
        "ccfLevel": 0,
        "title": "P4027 [NOI2007]\u8d27\u5e01\u5151\u6362"
    },
    {
        "content": "### P4027 [NOI2007]\u8d27\u5e01\u5151\u6362\u9898\u89e3 by zsy\n\n------------\n\n\u9898\u610f\u7b80\u8ff0\uff1a[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4027)\n\n\u4e00\u5171 $n$ \u5929\uff0c\u6bcf\u5929\u53ef\u4ee5\u5356\u51fa\u6216\u8005\u4e70\u5165\u4e24\u79cd\u80a1\u7968 $A$ \u548c $B$\u3002\u8fd9\u4e24\u79cd\u80a1\u7968\u5728\u7b2c $i$ \u5929\u7684\u4ef7\u503c\u4e3a $A_i$ \u548c $B_i$\u3002\n\n\u6bcf\u5929\u53ef\u4ee5\u82b1**\u6240\u6709**\u7684\u73b0\u91d1\u4e70\u5165\u80a1\u7968\uff0c\u8fd9\u4e9b\u80a1\u7968\u4e2d $A$ \u80a1\u4e0e $B$ \u80a1\u7684\u6570\u91cf\u6bd4\u4e3a $Rate_i$\u3002\u6bcf\u5929\u4e5f\u53ef\u4ee5\u628a**\u6240\u6709**\u7684\u80a1\u7968\u4ee5\u5f53\u5929\u7684\u4ef7\u503c\u5356\u51fa\uff0c\u83b7\u5f97\u73b0\u91d1\u3002\u5df2\u77e5\u63a5\u4e0b\u6765 $n$ \u5929\u7684 $A_i,B_i,Rate_i$\uff0c\u6c42\u51fa $n$ \u5929\u540e\u80fd\u591f\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n\u8bf7\u6ce8\u610f\u672c\u9898\u5197\u4f59\u63cf\u8ff0\u8fc7\u591a\uff0c\u5176\u5b9e\u53ea\u6709\u6570\u636e\u8303\u56f4\u4e0b\u9762\u90a3\u53e5\u8bdd\u662f\u6709\u7528\u7684\uff0c\u505a\u9898\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u6ce8\u610f\u63d0\u53d6\u5173\u952e\u4fe1\u606f\uff01\n\n------------\n\n#### \u672c\u4eba\u7684\u89e3\u6cd5\uff1acdq\u5206\u6cbb\u7ef4\u62a4\u5355\u8c03\u6808\u659c\u7387\u4f18\u5316dp\n\n\u8003\u8651\u5230\u6bcf\u4e00\u6b21\u4e70\u82b1\u6389\u5168\u90e8\u7684\u94b1\uff0c\u6bcf\u4e00\u6b21\u5356\u5168\u90e8\u5356\u6389\uff0c\u6211\u4eec\u4e0d\u59a8\u8bbe $f_i$ \u8868\u793a\u7b2c $i$ \u5929\u80fd\u591f\u62e5\u6709\u7684\u6700\u5927\u94b1\u6570\uff0c\u628a\u4e70\u80a1\u7968\u7b97\u5728\u4e4b\u540e\u6bcf\u4e00\u5929\u5f53\u4e2d\uff0c\u5373\uff1a\n\n\u8bbe $x_k$ \u8868\u793a\u7b2c $k$ \u5929\u4e70\u7684 $A$ \u80a1\u6570\u91cf\uff0c$y_k$ \u8868\u793a\u7b2c $k$ \u5929\u4e70\u7684 $B$ \u80a1\u6570\u91cf\uff0c$a_k,b_k,r_k$ \u5206\u522b\u8868\u793a\u7b2c $k$ \u5929\u7684 $A$ \u80a1\u4ef7\u503c\u3001$B$ \u80a1\u4ef7\u503c\u548c $AB$ \u4e24\u80a1\u6570\u91cf\u6bd4\uff0c\u53ef\u5f97\uff1a\n\n$$\\left\\{\n\\begin{aligned}\n& x_k\\cdot a_k+y_k\\cdot b_k=f_k \\\\\n& \\frac{x_k}{y_k}=r_k \\\\\n\\end{aligned}\n\\right.$$\n\n\u89e3\u5f97\n\n$$\\left\\{\n\\begin{aligned}\n& x_k=\\frac{f_k r_k}{a_k r_k+b_k} \\\\\n& y_k=\\frac{f_k}{a_k r_k+b_k} \\\\\n\\end{aligned}\n\\right.$$\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u7b2c $i$ \u5929\uff0c\u5356\u80a1\u7968\u80fd\u591f\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\uff0c\u5373\u6211\u4eec\u4ece $1$ \u5230 $i-1$ \u679a\u4e3e\u4e00\u4e2a $j$\uff0c\u90a3\u4e48\u7b2c $i$ \u5929\u5c31\u80fd\u5356\u6389\u7b2c $j$ \u5929\u4e70\u7684 $A$ \u80a1(\u6570\u91cf $x_j$)\uff0c$B$ \u80a1(\u6570\u91cf$y_j$)\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u4e00\u4e2a\u65b9\u7a0b\uff1a\n\n$$f_i=a_ix_j+b_iy_j$$\n\n\u66b4\u529b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^2)$\uff0c\u671f\u671b\u5f97\u5206 $60$\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u7531\u4e8e\u51fa\u73b0\u4e86 $i,j$ \u76f8\u4e58\u9879\uff0c\u8003\u8651\u659c\u7387\u4f18\u5316\u3002\u9996\u5148\u628a\u5b83\u5316\u6210\u659c\u622a\u5f0f\u65b9\u7a0b\uff0c\u5373\uff1a\n\n$$y_j=-\\frac{a_i}{b_i}x_j+\\frac{f_i}{b_i}$$\n\n\u5b83\u7684\u610f\u4e49\u662f\u5728\u5e73\u9762\u5185\u6709\u5f88\u591a\u70b9 $(x_j,y_j)$\uff0c\u5bf9\u6bcf\u4e2a $i$ \u627e\u5230\u4e00\u6761\u659c\u7387\u4e3a $-\\frac{a_i}{b_i}$ \u7684\u76f4\u7ebf\u7a7f\u8fc7\u5176\u4e2d\u67d0\u4e2a\u70b9\u80fd\u591f\u5f97\u5230\u7684\u6700\u5927\u622a\u8ddd\u3002\n\n\u505a\u6cd5\u5f88\u660e\u663e\uff0c\u7ef4\u62a4\u4e00\u4e2a\u4e0a\u51f8\u58f3\uff0c\u5bf9\u6bcf\u4e2a $k_i$ \u627e\u6700\u4f18\u51b3\u7b56\u70b9\u5373\u53ef\u3002\u7136\u800c\u2014\u2014\u8fd9\u9053\u9898\u7684 $x_i$ \u548c $k_i$ \u65e0\u5e8f\uff0c\u6240\u4ee5\u4e00\u65e0\u6cd5\u4f7f\u7528\u5355\u8c03\u961f\u5217\uff08\u9700\u8981 $x_i$ \u548c $k_i$ \u5747\u6709\u5e8f\uff09\uff0c\u4e8c\u65e0\u6cd5\u4f7f\u7528\u5355\u8c03\u6808\u5185\u4e8c\u5206\uff08$k_i$ \u9700\u6709\u5e8f\uff09\u3002\u8fd9\u65f6\u5019\u6211\u4eec\u9700\u8981\u4f7f\u7528 $cdq$ \u5206\u6cbb\u6765\u7ef4\u62a4\u3002\n\n\u5177\u4f53\u7ef4\u62a4\u65b9\u6cd5\u5982\u4e0b\uff08\u628a\u6bcf\u4e00\u5929\u9700\u8981\u7684\u6240\u6709\u72b6\u6001\u653e\u8fdb\u4e00\u4e2a ```struct``` \u6570\u7ec4\u4e2d\uff09\uff1a\n\n0. \u5728\u8fdb\u5165 ```cdq(l,r)``` \u4e4b\u524d\uff0c\u5148\u628a\u6574\u4e2a\u6570\u7ec4\u6309\u7167 $k$ \u6392\u5e8f\u3002\n1. \u5f53 ```l==r``` \u65f6\uff0c\u66f4\u65b0\u7b2c $l$ \u4e2a\u72b6\u6001\u7684 $x_l,y_l$\u3002\n2. \u628a ```[l,r]``` \u4e2d\u5929\u6570 $\\leq$ ```mid``` \u7684\u653e\u5728\u5de6\u534a\u8fb9\uff0c\u5269\u4e0b\u7684\u653e\u5728\u53f3\u534a\u8fb9\u3002\n3. \u9012\u5f52\u5904\u7406\u51fa `[l,mid]` \u5929\u7684 $f_i,x_i,y_i$\u3002\n4. \u7528\u5355\u8c03\u6808\u7edf\u8ba1 `[l,mid]` \u5929\u5bf9 `[mid+1,r]` \u5929\u7684\u8d21\u732e\u3002\n5. \u9012\u5f52\u5904\u7406 `[mid+1,r]` \u5929\u7684 $f_i,x_i,y_i$\u3002\n6. \u5c06\u6574\u4e2a\u533a\u95f4 `[l,r]` \u6309\u7167 $x$ \u9012\u589e\u6392\u5e8f\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b\u6b65\u9aa4\uff0c\u89c2\u5bdf\u51fa `cdq` \u5206\u6cbb\u7ef4\u62a4\u7684\u4f18\u79c0\u6027\u8d28\uff1a\u5728\u7b2c $4$ \u6b65\uff0c\u80fd\u7528\u5355\u8c03\u6808\u7ebf\u6027\u7edf\u8ba1\u7684\u539f\u56e0\u662f\uff0c\u5bf9\u4e8e `[l,mid]`\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u7b2c $7$ \u6b65\u628a `[l,mid]` \u6309\u7167 $x$ \u5355\u589e\u6392\u5e8f\u4e86\uff0c\u540c\u65f6\uff0c\u5728\u7b2c $0$ \u6b65\u5bf9\u6574\u4e2a\u533a\u95f4\u6309\u7167 $k$ \u5355\u589e\u6392\u5e8f\u4e86\uff0c\u7b2c\u4e00\u6b65\u7684\u64cd\u4f5c\u4f1a\u4f7f $k$ \u5728 `[mid+1,r]` \u4e0a\u5355\u589e\u3002\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u5355\u8c03\u6808\u7edf\u8ba1\u3002\n\n\u5176\u5b9e\u6839\u672c\u539f\u56e0\u8fd8\u662f\u5728\u4e8e `cdq` \u5206\u6cbb\u7684\u4f18\u8d8a\u6027\uff1a\u53ea\u9700\u8981\u8003\u8651 `[l,mid]` \u5bf9 `[mid+1,r]` \u7684\u8d21\u732e\uff0c\u6240\u4ee5\u53ef\u4ee5\u5206\u522b\u6392\u5e8f\uff0c\u628a\u539f\u672c\u65e0\u6cd5\u7ef4\u62a4\u7684\u4e1c\u897f\u82b1\u4e00\u4e2a $log$ \u7684\u4ee3\u4ef7\u53d8\u6210\u53ef\u4ee5\u7ef4\u62a4\u3002\n\n\u6b64\u9898\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\ log\\ n)$\u3002\n\n\u6700\u540e\u653e\u4e0a $AC$ \u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nconst int N=1e5+13;\nconst double eps=1e-9;\nconst double INF=1e9; \nstruct Node{double a,b,r,k,x,y;int id;}Q[N],Tmp[N];\nstruct Queue{//\u672c\u4eba\u6bd4\u8f83\u4e60\u60ef\u624b\u5199\u961f\u5217\uff08\u8fd9\u9898\u597d\u50cf\u662f\u4e2a\u6808\uff0c\u4e0d\u8fc7\u4e0d\u91cd\u8981\uff09\n\tint q[N],head,tail;\n\tinline void clear(){q[head=tail=1]=0;}\n\tQueue(){clear();}\n\tinline void push(int x){q[++tail]=x;}\n\tinline void pop(){--tail;}\n\tinline int top(){return q[tail];}\n\tinline int ttop(){return q[tail-1];}\n\tinline bool empty(){return head>=tail;}\n}s;\ndouble f[N];int n;\ninline bool cmp0(const Node &a,const Node &b){return a.k<b.k;}\ninline bool cmp1(const Node &a,const Node &b){return a.x<b.x;}\ninline double slope(int i,int j){\n\tif(fabs(Q[i].x-Q[j].x)<eps) return INF;//\u8fd9\u91cc\u6ca1\u5224\u4f1aWA on #6,#7\uff01\uff01\n\treturn (Q[i].y-Q[j].y)/(Q[i].x-Q[j].x);\n}\nvoid cdq(int l,int r){\n\tif(l==r){//\u7b2c1\u6b65\n\t\tf[l]=max(f[l],f[l-1]);//\u522b\u5fd8\u4e86\u8fd8\u53ef\u4ee5\u5728\u8fd9\u4e00\u5929\u5f53\u4e2d\u4ec0\u4e48\u90fd\u4e0d\u5e72\n\t\tQ[l].y=f[l]/(Q[l].a*Q[l].r+Q[l].b),Q[l].x=Q[l].r*Q[l].y;//\u66f4\u65b0x,y\u7684\u503c\uff0c\u63a5\u4e0b\u6765\u53ef\u4ee5\u7528\u5b83\u4eec\u53bb\u66f4\u65b0\u5176\u4ed6\u5929\u7684f\u503c\u3002\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tint l1=l-1,l2=mid;\n\tfor(int i=l;i<=r;++i){//\u7b2c2\u6b65\uff0c\u5c06[l,r]\u5316\u4e3a\u5de6\u53f3\u4e24\u4e2ak\u5355\u8c03\u7684\u533a\u95f4\uff0c\u5c06\u8be2\u95ee\u653e\u5728\u76f8\u5e94\u7684\u533a\u95f4\u5185\u5904\u7406\n\t\tif(Q[i].id<=mid) Tmp[++l1]=Q[i];\n\t\telse Tmp[++l2]=Q[i];\n\t}\n\tfor(int i=l;i<=r;++i) Q[i]=Tmp[i];\n\tcdq(l,mid);//\u7b2c3\u6b65\n\ts.clear();\n\tfor(int i=l;i<=mid;++i){//\u9884\u5904\u7406\u51fa\u4e0a\u51f8\u5305\n\t\twhile(!s.empty()&&slope(s.top(),i+eps)>slope(s.ttop(),s.top())) s.pop();\n\t\ts.push(i);\n\t}\n\tfor(int i=mid+1,j;i<=r;++i){//\u7b2c4\u6b65\n\t\twhile(!s.empty()&&Q[i].k+eps>slope(s.ttop(),s.top())) s.pop();//\u56e0\u4e3a\u659c\u7387\u9012\u589e\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5pop\n\t\tf[Q[i].id]=max(f[Q[i].id],Q[j=s.top()].x*Q[i].a+Q[j].y*Q[i].b);\n\t}\n\tcdq(mid+1,r);//\u7b2c5\u6b65\n\tsort(Q+l,Q+r+1,cmp1);//\u7b2c6\u6b65\uff0c\u5077\u61d2\u4e86\u6ca1\u5199\u5f52\u5e76\uff0c\u8fd9\u6837\u5e94\u8be5\u4e5f\u6ca1\u95ee\u9898\n}\nint main(){\n\tscanf(\"%d%lf\",&n,&f[0]);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%lf%lf%lf\",&Q[i].a,&Q[i].b,&Q[i].r);\n\t\tQ[i].k=-Q[i].a/Q[i].b;Q[i].id=i;//\u9884\u5904\u7406k\u548cid\n\t}\n\tsort(Q+1,Q+n+1,cmp0);//\u7b2c0\u6b65\n\tcdq(1,n);\n\tprintf(\"%.3lf\\n\",f[n]);\n\treturn 0;\n}\n```\n### \u5b8c\u7ed3\u6492\u82b1\uff01\u8c22\u8c22\u5927\u5bb6\uff01",
        "postTime": 1606914503,
        "uid": 160484,
        "name": "cunzai_zsy0531",
        "ccfLevel": 7,
        "title": "P4027\u9898\u89e3"
    },
    {
        "content": "\u524d\u7f6e\u77e5\u8bc6\uff1a[\u659c\u7387\u4f18\u5316](/blog/zhy137036/xie-shuai-you-hua)\n\n\u9996\u5148\u6ce8\u610f\u5230 \u8bf4\u660e/\u63d0\u793a \u7ed3\u5c3e\uff1a\n\n> \u5fc5\u7136\u5b58\u5728\u4e00\u79cd\u6700\u4f18\u7684\u4e70\u5356\u65b9\u6848\u6ee1\u8db3\uff1a\n>\n> \u6bcf\u6b21\u4e70\u8fdb\u64cd\u4f5c\u4f7f\u7528\u5b8c\u6240\u6709\u7684\u4eba\u6c11\u5e01\uff0c\u6bcf\u6b21\u5356\u51fa\u64cd\u4f5c\u5356\u51fa\u6240\u6709\u7684\u91d1\u5238\u3002\n\n\u660e\u663e\u9700\u8981\u89e3\u4e00\u4e2a\u65b9\u7a0b\uff1a\u7b2c $i$ \u5929\u753b $m$ \u5143\u4e70\u5238\uff0c\u6bcf\u79cd\u5238\u5404\u80fd\u4e70\u5230\u591a\u5c11\u3002\n\n\u89e3\u5f97 A \u5238\u80fd\u4e70\u5230 $m\\cdot\\dfrac{R_i}{A_iR_i+B_i}$ \u5f20\uff0cB \u5238\u80fd\u4e70\u5230 $m\\cdot\\dfrac1{A_iR_i+B_i}$ \u5f20\u3002\n\n\u8bbe $a_i=\\dfrac{R_i}{A_iR_i+B_i},b_i=\\dfrac1{A_iR_i+B_i}$\uff0c\u5219\u7b2c $i$ \u5929\u753b $m$ \u5143\u94b1\u80fd\u4e70\u5230 $a_im$ \u5f20 A \u5238\u3001$b_im$ \u5f20 B \u5238\u3002\n\n---\n\n\u7136\u540e\u53d1\u73b0\u662f\u4e00\u4e2a dp\uff0c\u8bbe $f_i$ \u8868\u793a\u7b2c $i$ \u5929\u624b\u4e2d\u6ca1\u6709\u5238\uff08\u5356\u6389\u6240\u6709\u5238\u6216\u672c\u6765\u5c31\u6ca1\u6709\u5238\uff09\u80fd\u5f97\u5230\u7684\u6700\u5927\u94b1\u6570\u3002\n\n\u8fd9\u4e9b\u94b1\u8981\u4e48\u662f\u6628\u5929\u7559\u4e0b\u6765\u7684\uff0c\u8981\u4e48\u662f\u5356\u6389\u4e86\u67d0\u5929\u4e70\u7684\u5238\u3002\u8bbe\u5356\u6389\u7684\u5238\u662f\u7b2c $j$ \u5929\u4e70\u6765\u7684\uff0c\u5f97\u5230\u8f6c\u79fb\u5f0f\uff1a\n\n$$f_i=\\max(f_{i-1},\\max\\limits_{j\\in[1,i-1]}(A_ia_jf_j+B_ib_jf_j))$$\n\n\u89e3\u91ca\u4e00\u4e0b\uff1a\u56e0\u4e3a\u7b2c $j$ \u5929\u5f97\u5230 $f_j$ \u5143\u94b1\u4e4b\u540e\u53ef\u4ee5\u5f53\u5929\u4e70\u5238\uff0c\u6240\u4ee5\u80fd\u4e70\u5230 $a_jf_j$ \u5f20 A \u5238\u3001$b_jf_j$ \u5f20 B \u5238\u3002\u5356\u6389\u8fd9\u4e9b\u5238\u4e4b\u540e\u53ef\u4ee5\u5f97\u5230 $A_ia_jf_j+B_ib_jf_j$ \u5143\u94b1\u3002\n\n\u770b\u8f6c\u79fb\u5f0f\u7684\u6838\u5fc3\u90e8\u5206\uff1a$f_i=A_ia_jf_j+B_ib_jf_j$\uff0c\u6709\u540c\u65f6\u4e0e $i,j$ \u6709\u5173\u7684\u9879\uff0c\u50cf\u659c\u7387\u4f18\u5316\u3002\n\n\u4e0d\u8fc7\u4e00\u822c\u7684\u659c\u7387\u4f18\u5316\u5e94\u8be5\u53ea\u6709\u4e00\u9879\u540c\u65f6\u4e0e $i,j$ \u6709\u5173\u7684\u9879\uff0c\u8fd8\u6709\u4e00\u9879\u53ea\u548c $j$ \u6709\u5173\u7684\u9879\u3002\u800c\u8fd9\u4e2a\u5f0f\u5b50\u91cc\u6709\u4e24\u9879\u540c\u65f6\u4e0e $i,j$ \u6709\u5173\u7684\u9879\uff0c\u6ca1\u6709\u53ea\u548c $j$ \u6709\u5173\u7684\u9879\u3002\n\n\u4e8e\u662f\u8003\u8651\u5c06\u5f0f\u5b50\u9664\u4ee5 $A_i$ \uff0c\u5f97\u5230 $\\dfrac{f_i}{A_i}=a_jf_j+\\dfrac{B_i}{A_i}b_jf_j$\u3002\n\n\u7136\u540e\u8f6c\u5316\u4e3a\u659c\u622a\u5f0f $y=kx+b$\uff1a\n\n$$a_jf_j=-\\dfrac{B_i}{A_i}b_jf_j+\\dfrac{f_i}{A_i}$$\n\n\u5176\u4e2d\n\n$$\\begin{aligned}&y=a_jf_j\\\\&k=-\\dfrac{B_i}{A_i}\\\\&x=b_jf_j\\\\&b=\\dfrac{f_i}{A_i}\\end{aligned}$$\n\n\u6ce8\u610f\u5230\u5176\u4e2d $k$ \u548c $x$ \u90fd\u4e0d\u4fdd\u8bc1\u5355\u8c03\uff0c\u6240\u4ee5\u6734\u7d20\u7684\u659c\u7387\u4f18\u5316\u4e0d\u80fd\u505a\u3002\n\n---\n\n\u56e0\u4e3a $i$ \u4ece $j$ \u5904\u8f6c\u79fb\u662f\u4e00\u79cd\u6709\u5e8f\u70b9\u5bf9\u7684\u5173\u7cfb\uff0c\u6240\u4ee5\u5bb9\u6613\uff08\u5e76\u4e0d\uff09\u60f3\u5230 CDQ \u5206\u6cbb\u3002\n\n\u8bbe\u51fd\u6570 $\\text{CDQ}(l,r)$ \u8868\u793a\u7528 $j\\ (j\\in[l,r])$ \u66f4\u65b0 $f_i\\ (i\\in[l,r])$\u3002\u4e5f\u5c31\u662f\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u90e8\u81ea\u5df1\u66f4\u65b0\u81ea\u5df1\u3002\n\n\u6839\u636e CDQ \u5206\u6cbb\u7684\u5957\u8def\uff0c\u5e94\u8be5\u5c06\u533a\u95f4\u7b49\u5206\u6210\u4e24\u534a $[l,\\textit{mid}],[\\textit{mid}+1,r]$\uff0c\u5206\u522b\u9012\u5f52\u5904\u7406\uff0c\u7136\u540e\u5904\u7406\u8de8\u4e24\u4e2a\u5b50\u533a\u95f4\u7684\u60c5\u51b5\u3002\n\n\u4f46\u662f\u8fd9\u5c31\u6709\u540e\u6548\u6027\u4e86\uff1a\u8bbe $p,q\\in[\\textit{mid}+1,r]\\ (p<q)$\uff0c\u7528 $p$ \u66f4\u65b0 $q$ \u7684\u65f6\u5019\uff0c$p$ \u8fd8\u6ca1\u88ab\u5de6\u533a\u95f4\u66f4\u65b0\u5462\uff0c\u6240\u4ee5\u8fd9\u4e2a\u66f4\u65b0\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u3002\n\n\u6240\u4ee5\u5e94\u8be5\u5148\u5904\u7406\u5de6\u533a\u95f4\uff0c\u7136\u540e\u7528\u5de6\u533a\u95f4\u66f4\u65b0\u53f3\u533a\u95f4\uff0c\u6700\u540e\u5904\u7406\u53f3\u533a\u95f4\u3002\n\n---\n\n\u600e\u4e48\u7528\u5de6\u533a\u95f4\u66f4\u65b0\u53f3\u533a\u95f4\u5462\uff1f\n\n\u5c06\u5de6\u533a\u95f4\u6309 $x$ \u6392\u5e8f\uff0c\u5efa\u7acb\u51f8\u58f3\uff1b\u5c06\u53f3\u533a\u95f4\u5728\u51f8\u58f3\u4e0a\u4e8c\u5206\u5bfb\u627e\u6700\u4f18\u51b3\u7b56\u70b9\u3002\n\n\u4f60\u4e5f\u53ef\u4ee5\u5c06\u53f3\u533a\u95f4\u6309 $k$ \u6392\u5e8f\uff0c\u53bb\u6389\u4e8c\u5206\u7684 $\\log$\u3002\u4e0d\u8fc7\u6392\u5e8f\u8fd8\u662f\u6709\u4e00\u4e2a $\\log$\uff0c\u518d\u7b97\u4e0a CDQ \u5206\u6cbb\u7684 $\\log$\uff0c\u603b\u590d\u6742\u5ea6\u4e3a $O(n\\log^2n)$\u3002\n\n---\n\n\u5177\u4f53\u6b65\u9aa4\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4 $[l,r]$\uff1a\n\n1. \u5904\u7406\u5de6\u533a\u95f4\uff1b\n2. \u5c06\u5de6\u533a\u95f4\u6309\u7167 $x$ \u6392\u5e8f\uff0c\u5efa\u7acb\u51f8\u58f3\uff1b\n3. \u66f4\u65b0\u53f3\u533a\u95f4\uff1b\n4. \u5c06\u5de6\u533a\u95f4\u6062\u590d\u539f\u5e8f\uff1b\n5. \u5904\u7406\u53f3\u533a\u95f4\u3002\n\n---\n\n\u522b\u5fd8\u4e86\uff0c$f_i$ \u8fd8\u8981\u88ab $f_{i-1}$ \u66f4\u65b0\u5462\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100010;\nint n,ds[N],top;\nstruct point{\n\tdouble A,B,R,a,b,id,f;//\u610f\u4e49\u540c\u6b63\u6587\u3002id \u8868\u793a\u7f16\u53f7\uff0c\u7528\u6765\u6062\u590d\u539f\u5e8f\u3002\n}pt[N];\ndouble X(int i) { return pt[i].b*pt[i].f; }//\u8ba1\u7b97\u7b2c i \u4e2a\u6570\u7684\u6a2a\u5750\u6807 x\ndouble Y(int i) { return pt[i].a*pt[i].f; }//\u8ba1\u7b97\u7b2c i \u4e2a\u6570\u7684\u7eb5\u5750\u6807 y\ndouble K(int i) { return -pt[i].B/pt[i].A; }//\u8ba1\u7b97\u7b2c i \u4e2a\u6570\u7684\u659c\u7387 k\ndouble k(int i,int j){//\u8ba1\u7b97\u7b2c i \u4e2a\u70b9\u548c\u7b2c j \u4e2a\u70b9\u6240\u5728\u76f4\u7ebf\u7684\u659c\u7387\n\tif(fabs(X(j)-X(i))<1e-9) return 1e9;\n\treturn (Y(j)-Y(i))/(X(j)-X(i));\n}\nbool cmp1(point i,point j) { return i.b*i.f<j.b*j.f; }//\u6309 x \u6392\u5e8f\nbool cmp2(point i,point j) { return i.id<j.id; }//\u6062\u590d\u539f\u5e8f\nvoid CDQ(int l,int r){\n\tif(l==r) { pt[l].f=max(pt[l].f,pt[l-1].f); return; }//\u9012\u5f52\u8fb9\u754c\n\tint m=(l+r)/2; CDQ(l,m);//\u5904\u7406\u5de6\u533a\u95f4\n\tsort(pt+l,pt+m+1,cmp1);//\u5c06\u5de6\u533a\u95f4\u6309 x \u6392\u5e8f\n\ttop=0;//\u6e05\u7a7a\u5355\u8c03\u6808\n\tfor(int i=l;i<=m;i++){//\u7ef4\u62a4\u51f8\u58f3\n\t\twhile(top>1&&k(ds[top-1],ds[top])<=k(ds[top],i)) top--;\n\t\tds[++top]=i;\n\t}\n\tfor(int i=m+1;i<=r;i++){\n\t\tint pos=1;\n\t\tfor(int j=1<<20;j;j/=2)//\u4e2a\u4eba\u6bd4\u8f83\u559c\u6b22\u7684\u4e00\u79cd\u4e8c\u5206\u5199\u6cd5\uff0c\u5f53\u6210\u666e\u901a\u4e8c\u5206\u5c31\u884c\u4e86\n\t\t\tif(pos+j<=top&&k(ds[pos+j-1],ds[pos+j])>=K(i))\n\t\t\t\tpos+=j;\n\t\tpt[i].f=max(pt[i].f,(Y(ds[pos])-K(i)*X(ds[pos]))*pt[i].A);//\u66f4\u65b0\n\t}\n\tsort(pt+l,pt+r+1,cmp2);//\u6062\u590d\u539f\u5e8f\n\tCDQ(m+1,r);//\u5904\u7406\u53f3\u533a\u95f4\n}\nint main(){\n\tcin>>n>>pt[0].f;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>pt[i].A>>pt[i].B>>pt[i].R;\n\t\tpt[i].a=pt[i].R/(pt[i].A*pt[i].R+pt[i].B);//\u9884\u5904\u7406 a,b\n\t\tpt[i].b=1/(pt[i].A*pt[i].R+pt[i].B);\n\t\tpt[i].id=i;\n\t}\n\tCDQ(1,n);\n\tprintf(\"%.3f\\n\",pt[n].f);//\u8f93\u51fa\n\treturn 0;\n}\n```",
        "postTime": 1613824190,
        "uid": 178294,
        "name": "zhy137036",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4027 \u3010[NOI2007] \u8d27\u5e01\u5151\u6362\u3011"
    },
    {
        "content": "### \u975e\u65cbtreap\u9898\u89e3\n\n\u9996\u5148\uff0cdp\u65b9\u7a0b\u663e\u7136\u662f\n\n$f_i=\\max\\{\\frac{a_if_jr_j}{a_jr_j+b_j}+\\frac{b_if_j}{a_jr_j+b_j}\\}$\n\n\u4ee4$x_j=\\frac{f_jr_j}{a_jr_j+b_j}, y_j=\\frac{f_j}{a_jr_j+b_j}$\uff0c\u5219\u65b9\u7a0b\u53d8\u5f62\u4e3a\n\n$f_i=\\max\\{a_ix_j+b_iy_j\\}$\n\n$f_i=b_i\\max\\{y_j-(-\\frac{a_i}{b_i})x_j\\}$\n\n\u76f8\u5f53\u4e8e\u8981\u6700\u5927\u5316\u659c\u7387\u4e3a$-\\frac{a_i}{b_i}$\u5e76\u4e14\u7ecf\u8fc7\u70b9$(x_j,y_j)$\u7684\u76f4\u7ebf\u5728$y$\u8f74\u4e0a\u7684\u622a\u8ddd\uff0c\u663e\u7136\u6700\u4f18\u70b9\u5728\u4e0a\u51f8\u58f3\u4e0a\u53d6\u5f97\u3002\n\n\u7531\u4e8e\u659c\u7387$k_i=-\\frac{a_i}{b_i}$\u6ca1\u6709\u5355\u8c03\u6027\uff0c\u4e0d\u80fd\u7528\u5355\u8c03\u961f\u5217\uff0c\u6211\u4eec\u8003\u8651\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u52a8\u6001\u51f8\u5305\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9$x$\uff0c\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e24\u4e2a\u4fe1\u606f$lk[x],rk[x]$\uff0c\u5206\u522b\u8868\u793a\u5b83\u5728\u51f8\u5305\u4e0a\u5de6\u8fb9\u90a3\u6761\u76f4\u7ebf\u7684\u659c\u7387\u548c\u53f3\u8fb9\u76f4\u7ebf\u7684\u659c\u7387\u3002\u5bf9\u4e8e$i$\uff0c\u5176\u659c\u7387$k_i=-\\frac{a_i}{b_i}$\uff0c\u663e\u7136\u5176\u6700\u4f18\u51b3\u7b56\u70b9$j$\u6ee1\u8db3$lk[j]\\geq k_i\\geq rk[j]$\uff08\u6ce8\u610f\u5230\u51f8\u58f3\u4e0a\u7684\u659c\u7387\u5355\u8c03\uff09\n\n\u6240\u4ee5\u67e5\u8be2\u67d0\u4e2a\u70b9\u7684\u6700\u4f18\u51b3\u7b56\u53ea\u8981\u6309\u7167\u8fd9\u4e2a\u5f80\u4e0b\u627e\n\n```cpp\nint queryBest(int x, double k) {\n    if (!x) return 0;\n    if (lk[x] + eps >= k && k + eps >= rk[x]) return x;\n    else if (k + eps >= lk[x]) return queryBest(ch[x][0], k);\n    else return queryBest(ch[x][1], k);\n}\n```\n\n\u5148\u58f0\u660e\u4e00\u4e2a\u659c\u7387\u51fd\u6570\uff0c\u542b\u4e49\u6bd4\u8f83\u663e\u7136\u3002\n\n```cpp\ninline double slope(int i, int j) {\n    if (fabs(xc[i] - xc[j]) <= eps) return inf;\n    else return (yc[i] - yc[j]) / (xc[i] - xc[j]);\n}\n```\n\n\u8003\u8651\u5982\u4f55\u63d2\u5165\u4e00\u4e2a\u70b9\u3002splay\u7684\u505a\u6cd5\u662f\uff1a\u5148\u627e\u5230$x_i$\u5728\u5e73\u8861\u6811\u4e2d\u7684\u4f4d\u7f6e\uff0c\u63d2\u5165\u5e76splay\u5230\u6839\uff0c\u5728\u5de6\u5b50\u6811\u4e2d\u627e\u5230\u7b2c\u4e00\u4e2a\u80fd\u548c$i$\u8fde\u8d77\u6765\u6784\u6210\u51f8\u5305\u7684\u70b9$pre$\uff08\u5373\u6ee1\u8db3$lk[pre]>=slope(pre,i)$\u7684\u6700\u53f3\u8fb9\u7684\u70b9\uff09\uff0c\u628a$pre$\u8f6c\u5230$i$\u7684\u5de6\u5b69\u5b50\uff0c\u5c06$pre$\u7684\u53f3\u5b50\u6811\u5220\u9664\uff08$i$\u7684\u5b58\u5728\u4f7f\u5f97\u8fd9\u4e9b\u70b9\u4e0d\u518d\u5728\u51f8\u58f3\u4e0a\uff09\uff0c\u7136\u540e\u7ef4\u62a4\u4e00\u4e0b$lk[i]=rk[pre]=slope(pre,i)$\uff1b\u518d\u5728\u53f3\u5b50\u6811\u4e2d\u505a\u7c7b\u4f3c\u7684\u4e8b\u60c5\uff0c\u4ee3\u7801\u5c31\u4e0d\u8d34\u4e86\uff0c\u524d\u9762\u7684\u9898\u89e3\u91cc\u6709\u4eba\u5199\u3002\n\n\u73b0\u5728\u4e3b\u8981\u8bf4\u4e00\u4e0b\u975e\u65cbtreap\u7684\u505a\u6cd5\u3002\u5176\u5b9e\u9053\u7406\u548c\u4e0a\u9762\u7c7b\u4f3c\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u968f\u4fbf\u628a\u4e00\u4e2a\u70b9\u8f6c\u5230\u6839\u4e86\uff0c\u6211\u4eec\u624b\u4e2d\u6700\u6709\u529b\u7684\u6b66\u5668\u5c31\u662f\u5206\u88c2\u4e0e\u5408\u5e76\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\uff1a\u5148\u5c06\u6574\u68f5\u6811$T$\u5206\u88c2\u6210\u4e24\u68f5$L,R$\uff0c\u6ee1\u8db3$L$\u6811\u4e2d\u6700\u5927\u7684$x$\u503c$\\leq x_i\\leq R$\u6811\u4e2d\u6700\u5c0f\u7684$x$\u503c\uff1b\u7136\u540e\u518d\u5c06$L$\u5206\u88c2\u6210\u4e24\u68f5$L_l,L_r$\uff0c\u628a\u4e0d\u518d\u5728\u51f8\u58f3\u4e0a\u7684\u70b9\u7edf\u7edf\u653e\u8fdb$L_r$\uff0c\u8fd9\u68f5\u6811\u5c31\u53ef\u4ee5\u76f4\u63a5\u6254\u6389\u4e86\uff0c\u7136\u540e\u5728$L_l$\u4e2d\u627e\u6700\u5927\u7684\u70b9$pre$\u4e0e$i$\u6c42\u659c\u7387\uff1b\u518d\u5728$R$\u6811\u4e2d\u505a\u7c7b\u4f3c\u7684\u4e8b\u60c5\uff08\u5de6\u53f3\u53cd\u4e00\u53cd\u4ec0\u4e48\u7684\uff09\u3002\u6700\u540e\uff0c\u5982\u679c$lk[i]<=rk[i]$\uff0c\u8bf4\u660e$i$\u5e76\u4e0d\u5728\u51f8\u58f3\u4e0a\uff0c\u8fd9\u4e2a\u70b9\u4e0d\u80fd\u8981\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u8981\u5199\u597d\u51e0\u4e2a\u4e0d\u540c\u7684split\uff0c\u5176\u5b9e\u90fd\u5dee\u4e0d\u591a\u7684\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include <cctype>\n#include <cstdio>\n#include <climits>\n#include <cmath>\n#include <algorithm>\n\n#define rep(I, A, B) for (int I = (A); I <= (B); ++I)\n\ntemplate <typename T> inline void read(T& t) {\n    int f = 0, c = getchar(); t = 0;\n    while (!isdigit(c)) f |= c == '-', c = getchar();\n    while (isdigit(c)) t = t * 10 + c - 48, c = getchar();\n    if (f) t = -t;\n}\ntemplate <typename T, typename... Args>\ninline void read(T& t, Args&... args) {\n    read(t); read(args...); \n}\n\nconst int maxn = 1e5 + 207, inf = INT_MAX;\nconst double eps = 1e-9;\ndouble f[maxn], a[maxn], b[maxn], r[maxn];\ndouble xc[maxn], yc[maxn], lk[maxn], rk[maxn];\nint ch[maxn][2], pri[maxn];\nint n, root;\n\ninline double slope(int i, int j) {\n    if (fabs(xc[i] - xc[j]) <= eps) return inf;\n    else return (yc[i] - yc[j]) / (xc[i] - xc[j]);\n}\nint queryBest(int x, double k) {\n    if (!x) return 0;\n    if (lk[x] + eps >= k && k + eps >= rk[x]) return x;\n    else if (k + eps >= lk[x]) return queryBest(ch[x][0], k);\n    else return queryBest(ch[x][1], k);\n}\nvoid split_x(int o, double x, int &l, int &r) {\n    if (!o) l = r = 0;\n    else {\n        if (xc[o] <= x + eps) {\n            l = o;\n            split_x(ch[l][1], x, ch[l][1], r);\n        } else {\n            r = o;\n            split_x(ch[r][0], x, l, ch[r][0]);\n        }\n    }\n}\nvoid split_pre(int o, int x, int &l, int &r) {\n    if (!o) l = r = 0;\n    else {\n        if (lk[o] + eps >= slope(o, x)) {\n            l = o;\n            split_pre(ch[l][1], x, ch[l][1], r);\n        } else {\n            r = o;\n            split_pre(ch[r][0], x, l, ch[r][0]);\n        }\n    }\n}\nvoid split_nxt(int o, int x, int &l, int &r) {\n    if (!o) l = r = 0;\n    else {\n        if (slope(o, x) + eps >= rk[o]) {\n            r = o;\n            split_nxt(ch[r][0], x, l, ch[r][0]);\n        } else {\n            l = o;\n            split_nxt(ch[l][1], x, ch[l][1], r);\n        }\n    }\n}\nint merge(int x, int y) {\n    if (!(x && y)) return x ^ y;\n    else {\n        if (pri[x] < pri[y]) {\n            ch[y][0] = merge(x, ch[y][0]);\n            return y;\n        } else {\n            ch[x][1] = merge(ch[x][1], y);\n            return x;\n        }\n    }\n}\ninline void insert(int &rt, int id) {\n    int x = 0, y = 0;\n    split_x(rt, xc[id], x, y);\n    int tmp;\n    split_pre(x, id, x, tmp);\n    if (x) {\n        int pre = x;\n        while (ch[pre][1]) pre = ch[pre][1];\n        rk[pre] = lk[id] = slope(pre, id);\n    } else lk[id] = inf;\n    split_nxt(y, id, tmp, y);\n    if (y) {\n        int nxt = y;\n        while (ch[nxt][0]) nxt = ch[nxt][0];\n        lk[nxt] = rk[id] = slope(id, nxt);\n    } else rk[id] = -inf;\n    if (lk[id] <= rk[id] + eps) rt = merge(x, y);\n    else {\n        pri[id] = rand();\n        rt = merge(merge(x, id), y);\n    }\n}\n\nint main() {\n    int f0;\n    read(n, f0);\n    f[0] = f0;\n    rep(i, 1, n) scanf(\"%lf%lf%lf\", a + i, b + i, r + i);\n    rep(i, 1, n) {\n        int j = queryBest(root, -a[i] / b[i]);\n        f[i] = std::max(f[i - 1], a[i] * xc[j] + b[i] * yc[j]);\n        xc[i] = f[i] * r[i] / (a[i] * r[i] + b[i]);\n        yc[i] = f[i] / (a[i] * r[i] + b[i]);\n        insert(root, i);\n    }\n    printf(\"%.3lf\\n\", f[n]);\n    return 0;\n}\n```\n\n~~\u5176\u5b9e\u5199\u975e\u65cbtreap\u662f\u56e0\u4e3a\u6211\u8111\u6d1e\u5927\u5f00\u5730yy\u4e86\u4e00\u4e9b\u53ef\u6301\u4e45\u5316\u51f8\u5305\u7ef4\u62a4\u7684\u659c\u7387\u4f18\u5316\u4ec0\u4e48\u7684...\u56e0\u4e3a\u975e\u65cbtreap\u53ef\u4ee5\u53ef\u6301\u4e45\u5316\u561b...\u4e0d\u8bf4\u4e86\u4e0d\u8bf4\u4e86\u592a\u6bd2\u7624\u4e86~~\n\n\u5982\u679c\u771f\u7684\u5728\u8003\u573a\u4e0a\u6211\u4f1a\u9009\u62e9\u5199splay\u7684\u3002",
        "postTime": 1544233798,
        "uid": 72071,
        "name": "GKxx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4027 \u3010[NOI2007]\u8d27\u5e01\u5151\u6362\u3011"
    },
    {
        "content": "\u659c\u7387\u4f18\u5316\u597d\u9898\u3002\n\n\n\u5206\u6790\u53ef\u5f97\uff1a\n\ng[i] = i\u5929\u6700\u5927\u6570\u91cfb\u5238\n\nf[i] = max(0<=j<i) ($g[j]*r[j]*a[i] + g[j]*b[i]$)\n\n     = max($g[j]*$($b[i]/a[i]$) + $g[j]*r[j]$) \\* $a[i]$\n\n\u6784\u9020\u4e0a\u51f8\u5305, \u6309b[i]/a[i] \u5347\u5e8f\n\n\n\u5206\u6790 max(KX + Y)\n\n\u8bbe x[a] < x[b] < x[c]\n\nk\\_ab = -(yb-ya / xb-xa)\n\nk\\_bc = -(yb-yc / xb-xc)\n\n\u5f53k\\_ab <= k\\_bc\u7684\u65f6\u5019\n\nb\u6ca1\u7528\n\n\u7136\u540e\u5728\u8fd9\u91cc\u6211\u4f7f\u7528\u4e86cdq\u5206\u6cbb\uff0c\u628a\u5728\u7ebf\u7ef4\u62a4\u51f8\u5305\u53d8\u6210\u4e86\u79bb\u7ebf\uff0c\u4f7f\u5f97\u7f16\u7a0b\u590d\u6742\u5ea6\u66f4\u4f4e\u3002\n\n\u6211\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u9648\u4e39\u742a\u7684\u8bba\u6587\u91cc\u9762\u7565\u6709\u533a\u522b\uff0c\uff08\u5927\u6982\uff09\u662fn log n\u7684\uff0c\u8fd0\u7528\u5230\u4e86\u5f52\u5e76\u6392\u5e8f\u7684\u601d\u60f3\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n\nusing namespace std;\n\ndouble f[100005],g[100005],a[100005],b[100005],r[100005];\n\nint q[100005],t[100005],ch[100005],n,s;\n\nbool judge(int a,int b,int c) \n{\n    return (g[b]*r[b]-g[a]*r[a])*(g[c]-g[b])<=(g[c]*r[c]-g[b]*r[b])*(g[b]-g[a]);\n}\n\nint make(int left, int right) \n{\n    int top=0;\n    for (int i=left;i<right;i++) \n    {\n        int c=q[i];\n        while (top>=2) \n        {\n              int a=ch[top-2];\n              int b=ch[top-1];\n              if (judge(a,b,c)) \n                top--;\n               else \n                break;\n        }\n        ch[top++]=c;\n    }\n    return top;\n}\n\nbool judge2(int a,int b)\n{\n    if (g[a]!=g[b])\n        return g[a]<g[b];\n    return r[a]<r[b];\n}\n\nvoid solve(int left,int right)\n{\n    if (left+1==right)\n    {\n        if (left>0 && f[left]<f[left-1])\n        {\n            f[left]=f[left-1];\n            g[left]=f[left]/(a[left]*r[left]+b[left]);\n        }\n        return;\n    }\n    int mid=(left+right)/2;\n    int i=left;\n    int j=mid;\n    for (int k=left;k<right;k++)\n        if (q[k]<mid)\n        {\n            t[i]=q[k];\n            i++;\n        }\n        else \n        {\n            t[j]=q[k];\n            j++;\n        }\n    for (int k=left;k<right;k++)\n        q[k]=t[k];\n    solve(left,mid);\n    int head=0,tail=make(left,mid);\n    for (int k=mid;k<right;k++)\n    {\n        int i=q[k];\n        int j=ch[head];\n        double max1=g[j]*b[i]+g[j]*r[j]*a[i];\n        while (tail-head>=2)\n        {\n            int j2=ch[head+1];\n            double max2=g[j2]*b[i]+g[j2]*r[j2]*a[i];\n            if (max1<=max2)\n            {\n                j=j2;\n                max1=max2;\n                head++;\n            }\n            else break;\n        }\n        if (f[i]<max1)\n        {\n            f[i]=max1;\n            g[i]=max1/(a[i]*r[i]+b[i]);\n        } \n    }\n    solve(mid,right);\n    i=left;\n    j=mid;\n    for (int k=left;k<right;k++)\n    {\n        if (i<mid && (j==right || judge2(q[i],q[j])))\n        {\n            t[k]=q[i];\n            i++;\n        }\n        else \n        {\n            t[k]=q[j];\n            j++;\n        }\n    }\n    for (int k=left;k<right;k++)\n        q[k]=t[k];\n}\n\nvoid myswap(int l,int r)\n{\n    swap(q[l],q[r]);\n}\n\nvoid quicksort(int l, int r) \n{\n    myswap(l,(l+r)/2);\n    int j=l+1;\n    int k=l;  \n    for (int i=l+1;i<r;i++) \n    {\n        if (b[q[i]]*a[q[k]]<b[q[k]]*a[q[i]]) \n        {\n            myswap(i,j);\n            myswap(j,k);\n            j++; \n            k++;\n        } \n        else if (b[q[i]]*a[q[k]]==b[q[k]]*a[q[i]]) \n        {\n            myswap(i,j);\n            j++;\n        }\n    }\n    if (l<k) \n          quicksort(l,k);\n    if (j<r) \n          quicksort(j,r);\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&s);\n    for (int i=0;i<n;i++)\n    {\n        scanf(\"%lf%lf%lf\",&a[i],&b[i],&r[i]);\n        q[i]=i;\n    }\n    f[0]=s;\n    g[0]=s/(a[0]*r[0]+b[0]);\n    quicksort(0,n);\n    solve(0,n);\n    printf(\"%.3lf\\n\",f[n-1]);\n    return 0;\n}\n```\n\u6ca1\u6709\u7528\u4efb\u4f55\u7684stl\uff0c\u65b9\u4fbfp\u515a\u7406\u89e3\n",
        "postTime": 1514986326,
        "uid": 8457,
        "name": "chen_zhe",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4027 \u3010[NOI2007]\u8d27\u5e01\u5151\u6362\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1\u7ebf\u6bb5\u6811\u7684\u9898\u89e3\n\n\u9996\u5148\u6211\u4eec\u63a8\u4e0bDP\u7684\u5f0f\u5b50\n\n$A[i]c[i]+B[i]c[i]/r[i]=F[i]$\n\n$c[i]=F[i]*r[i]/(A[i]*r[i]+B[i])$\n\n$F[i]=\\max_{j<i}\\{ A[i]c[j]+B[i]c[j]/r[j] \\}$\n\n\u53d1\u73b0\u63d0\u51fa$A[i]$\u4e4b\u540e\n\n\u5269\u4e0b\n\n$c[j]+(B[i]/A[i])*(c[j]/r[j])$\n\n\u5373\u8fc7\u70b9$(c[j]/r[j],c[j])$\uff0c\u659c\u7387\u4e3a$-(B[i]/A[i])$\u7684\u76f4\u7ebf\u5728$y$\u8f74\u7684\u622a\u8ddd\n\n\u4e0a\u51f8\u5305\u4e8c\u5206\u8f6c\u79fb\u70b9\u5373\u53ef\n\n\u7ebf\u6bb5\u6811\u67d0\u4e00\u5c42\u6ee1\u4e86\u5c31\u628a\u4e0b\u5c42\u7684\u5f52\u5e76\u4e00\u4e0b\uff0c\u628ata\u7684\u51f8\u5305\u5efa\u51fa\u6765\n\n\u590d\u6742\u5ea6\u662f$\\Theta(n \\log^2n)$\u7684\n\n```cpp\n#include\"cstdio\"\n#include\"cstring\"\n#include\"iostream\"\n#include\"algorithm\"\n#include\"cmath\"\nusing namespace std;\n\nconst int MAXN=1<<17;\nconst double eps=1e-7;\n\nint n;\ndouble F[MAXN],A[MAXN],B[MAXN],R[MAXN];\nint stk[19][MAXN],ssz[MAXN<<1],siz[MAXN<<1];\nstruct rpg{\n\tdouble x,y;\n\tint id;\n}a[MAXN],b[MAXN],c[MAXN];\n\nbool cmp(rpg a,rpg b){return a.x<b.x;}\n\nbool check(int id1,int id2,int id3)\n{\n\tdouble dx1=a[id2].x-a[id1].x,dx2=a[id3].x-a[id1].x;\n\tdouble dy1=a[id2].y-a[id1].y,dy2=a[id3].y-a[id1].y;\n\treturn dy1*dx2<dy2*dx1+eps;\n}\n\nvoid build(int k,int l,int r,int tp)\n{\n\tint mid=l+r>>1;\n\tint ct1=l,ct2=mid+1;\n\tfor(int i=l;i<=r;++i){\n\t\tif(ct2>r||ct1<=mid&&cmp(b[ct1],b[ct2])) c[i]=b[ct1++];\n\t\telse c[i]=b[ct2++];\n\t}for(int i=l;i<=r;++i) b[i]=c[i];\n\tssz[k]=2;\n\tstk[tp][l]=b[l].id;\n\tstk[tp][l+1]=b[l+1].id;\n\tfor(int i=l+2;i<=r;++i){\n\t\twhile(ssz[k]>1&&check(stk[tp][l+ssz[k]-2],stk[tp][l+ssz[k]-1],b[i].id)) --ssz[k];\n\t\tstk[tp][l+(++ssz[k])-1]=b[i].id;\n\t}return;\n}\n\nvoid ins(int k,int l,int r,int id,int tp)\n{\n\t++siz[k];\n\tif(l==r){ssz[k]=1;stk[tp][l]=l;return;}\n\tint i=k<<1,mid=l+r>>1;\n\tif(id<=mid) ins(i,l,mid,id,tp+1);\n\telse ins(i|1,mid+1,r,id,tp+1);\n\tif(siz[k]==r-l+1) build(k,l,r,tp);\n\treturn;\n}\n\ndouble calc(int k,int l,int r,int id,int tp)\n{\n\tdouble w=-B[id]/A[id];\n\tint le=l,ri=l+ssz[k]-1;\n\twhile(le<ri){\n\t\tint mid=le+ri>>1;\n\t\tdouble dx=a[stk[tp][mid+1]].x-a[stk[tp][mid]].x;\n\t\tdouble dy=a[stk[tp][mid+1]].y-a[stk[tp][mid]].y;\n\t\tif(dy<w*dx) ri=mid;\n\t\telse le=mid+1;\n\t}int i=stk[tp][le];\n\treturn a[i].y*A[id]+a[i].x*B[id];\n}\n\ndouble query(int k,int l,int r,int id,int tp)\n{\n\tif(r<=id-1) return calc(k,l,r,id,tp);\n\tint i=k<<1,mid=l+r>>1;double maxn=0;\n\tmaxn=max(maxn,query(i,l,mid,id,tp+1));\n\tif(mid<id-1) maxn=max(maxn,query(i|1,mid+1,r,id,tp+1));\n\treturn maxn;\n}\n\nint main()\n{\n\tscanf(\"%d%lf\",&n,&F[1]);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%lf%lf%lf\",&A[i],&B[i],&R[i]);\n\t\tif(i>1) F[i]=max(query(1,1,n,i,0),F[i-1]);\n\t\ta[i]=b[i]=(rpg){F[i]/(A[i]*R[i]+B[i]),F[i]*R[i]/(A[i]*R[i]+B[i]),i};\n\t\tins(1,1,n,i,0);\n\t}printf(\"%.3lf\\n\",F[n]);\n\treturn 0;\n}\n```",
        "postTime": 1550649735,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4027 \u3010[NOI2007]\u8d27\u5e01\u5151\u6362\u3011"
    },
    {
        "content": "\u8bbe $f(i)$ \u4e3a\u7b2c $i$ \u5929\u7684\u6700\u5927\u94b1\u6570\uff0c$g_{1}(i)$ \u4e3a A \u5238\u7684\u7b2c $i$ \u5929\u80fd\u6362\u7684\u6570\u91cf\uff0c$g_{2}(i)$ \u5219\u4e3a B \u5238\u3002\n\n\u8f6c\u79fb\u53ef\u4ee5\u89e3\u65b9\u7a0b\u5f97\uff1a\n$$\nf(i)=\\max\\{f(i-1),a(i)g_{1}(j),b(i)g_{2}(j)\\},j\\in[1,i) \\\\\ng_{1}(i)\\frac{f(i)rate(i)}{a(i)rate(i)+b(i)} \\\\\ng_{2}(i)=\\frac{f(i)}{rate(i)\\times a(i)+b(i)} \\\\\n$$\n\u4e24\u4e2a $g$ \u90fd\u6ca1\u5565\u95ee\u9898\uff0c\u4e3b\u8981\u6765\u770b $f(i)$\u3002\u63d0\u4e00\u4e0b\u53ef\u5f97\uff1a\n$$\nf(i)=\\max\\{b(i)\\max_{j=1}^{i-1}\\{\\frac{a(i)}{b(i)}g_{1}(j)+g_{2}(j)\\},f(i-1)\\}\n$$\n\n\u659c\u7387\u4f18\u5316\u7684\u5f62\u5f0f\uff0c\u4f46\u659c\u7387\u5e76\u65e0\u5355\u8c03\u6027\u3002\u90a3\u4e2a $f(i-1)$ \u53ef\u4ee5\u6700\u540e\u6765\u7ebf\u6027\u505a\uff0c\u6240\u4ee5\u53ef\u4ee5\u5148\u4e0d\u7ba1\u3002\u7136\u540e\u5c31\u662f li-chao tree \u7684\u677f\u5b50\u3002",
        "postTime": 1620177696,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "solution-p4027"
    },
    {
        "content": "$$\\href{https://wa-automaton.github.io/2019/04/29/luogu-P4027-NOI-2007-%E8%B4%A7%E5%B8%81%E5%85%91%E6%8D%A2/}{ \\blue{ \\mathit{\\texttt{\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u70b9\u8fd9\u91cc~}}}}$$ \n\n\u8fd9\u662f\u4e00\u7bc7\u76f4\u7ebf\u578b\u659c\u7387\u4f18\u5316\u7684\u9898\u89e3  \n\u8fd9\u9053\u9898\u771f\u7684\u5f88\u96be\u60f3...  \n\u8003\u8651\u4e0b\u9762\u7684\u63d0\u793a\uff1a  \n\u5728\u6700\u4f18\u65b9\u6848\u91cc\uff0c\u4e0d\u5b58\u5728\u67d0\u4e00\u65f6\u523b\uff0c\u624b\u91cc\u65e2\u6709\u94b1\uff0c\u53c8\u6709\u91d1\u5238\u3002 \n\u8fd9\u542f\u53d1\u6211\u4eec\u679a\u4e3e\u4e0a\u4e00\u6b21\u4e70\u5165\u7684\u5929\u6570\uff1a\n$$f(i)=max\\{f(i-1),max_{j=0}^{i-1}\\{fa(j)*a(i)+fb(j)*b(i)\\}\\}$$\n$$fa(i)=fb(i)*rate(i)$$\n$$fb(i)=f(i)/(rate(i)*a(i)+b(i))$$\n\u5176\u4e2d$f(i)$\u8868\u793a\u7b2ci\u5929\u80fd\u5f97\u5230\u7684\u6700\u591a\u94b1\u6570\uff0c$fa(i),fb(i)$\u5206\u522b\u8868\u793a\u7b2ci\u5929\u5c06\u624b\u4e2d\u7684\u94b1\u82b1\u5149\u6240\u5f97\u5230\u7684\u91d1\u5238\u3002\n\n\u76f4\u63a5\u66b4\u529bDP\u662f$O(n^2)$\u7684\uff0c\u4e0d\u80fd\u8fc7\u3002\u8003\u8651\u53ea\u5b58\u5728i,j\u4e58\u79ef\u9879\uff0c\u8bd5\u8bd5\u659c\u7387\u4f18\u5316\u3002\n\n\u9996\u5148\uff1a\u6709\u4e24\u4e2a\u5173\u4e8ei\uff0cj\u7684\u4e58\u79ef\u9879\uff0c\u597d\u50cf\u4e0d\u80fd\u8868\u793a\u6210\u4e00\u6761\u76f4\u7ebf\u7684\u5f62\u5f0f\uff1f  \n\u56e0\u4e3aa.b\u90fd\u662f\u5e38\u91cf\u6570\u7ec4\uff0c\u6211\u4eec\u5c06\u7b49\u5f0f\u4e24\u8fb9\u90fd\u9664\u4ee5b(i)\uff0c\u5f97\u5230\uff1a\n$$f(i)/b(i)=max\\{fa(j)*(a[i]/b[i])+fb(j)\\}$$\n\n\u8fd9\u6837\uff0c\u628a$fa$\u770b\u505a\u659c\u7387\uff0c\u628a$a/b$\u770b\u505ax\u5750\u6807\uff0c\u5c31\u662f\u659c\u7387\u4f18\u5316\u7684\u7ecf\u5178\u67ff\u5b50\u8fa3\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u554a\u6389\u8fd9\u9053\u9898\u4e86...\u5417\uff1f\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u672c\u9898\u7684\u659c\u7387\u548c\u5750\u6807\u90fd\u4e0d\u5355\u8c03\uff0c\u6b63\u5e38\u7684\u659c\u7387\u4f18\u5316\u4e0d\u73c2\u505a..\n\n~~\u679c\u65ad\u5f03\u7597~~\n\n\u5168\u90fd\u5355\u8c03\u7684\u65f6\u5019\u5355\u8c03\u961f\u5217\uff0c\u4e00\u4e2a\u4e0d\u5355\u8c03\u7684\u4e8c\u5206\uff0c\u4e24\u4e2a\u90fd\u4e0d\u5355\u8c03\u7684\u65f6\u5019...CDQ\u5206\u6cbb\uff01\n\n\u6211\u4eec\u8003\u8651\u901a\u8fc7\u6392\u5e8f\u5148\u6d88\u9664\u4e00\u7ef4\u7684\u5f71\u54cd\uff0c\u518d\u901a\u8fc7\u5206\u6cbb\u6d88\u9664\u53e6\u4e00\u7ef4\u3002\n\u5177\u4f53\u6b65\u9aa4\u662f\u8fd9\u6837\u7684\uff1a  \n1. \u5206\u6cbb\u4e4b\u524d\uff0c\u5148\u5c06\u8be2\u95ee\u6309\u7167x\u5750\u6807\uff08\u672c\u9898\u4e2d\u5373$a_i/b_i$)\u6392\u5e8f\u3002\n2. \u5f00\u59cb\u5206\u6cbb\uff0c\u8bbe\u5f53\u524d\u533a\u95f4\u4e3a[l..r]\uff1a\uff08\u4e3a\u65b9\u4fbf\u8868\u793a\uff0c\u8bbemid=(l+r)/2\uff09;\n3. \u5c06\u8be2\u95ee\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u5206\u6210[l..mid]\u548c[mid+1..r]\u4e24\u90e8\u5206\u3002\n4. \u9012\u5f52\u89e3\u51b3[l..mid]\u7684\u90e8\u5206\u3002\n5. \u7528[l..mid]\u7684DP\u503c\u53bb\u66f4\u65b0[mid+1..r]\u7684DP\u503c\u3002\uff08\u5148\u6784\u9020\u5de6\u534a\u8fb9\u7684\u51f8\u58f3\uff0c\u7136\u540e\u8ba1\u7b97\u53f3\u534a\u8fb9\u7684\u7b54\u6848\uff0c\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u5728\u9012\u5f52\u5de6\u534a\u8fb9\u7684\u65f6\u5019\u5c06\u51b3\u7b56\u6309\u7167fa\u6392\u5e8f\u4e86\uff0c\u800c\u53f3\u534a\u8fb9\u8fd8\u6ca1\u6709\u9012\u5f52\uff0c\u4fdd\u6301$x$\u5750\u6807\u5355\u8c03\u7684\u6027\u8d28\uff0c\u6240\u4ee5\u76f4\u63a5\u6309\u7167\u6b63\u5e38\u7684\u65b9\u6cd5\u7528\u5355\u8c03\u961f\u5217\u63d2\u5165\u548c\u5220\u9664\u51b3\u7b56\u5c31\u53ef\u4ee5\u4e86\u3002\uff08\u89c1\u6b65\u9aa47\uff09\uff09\n6. \u9012\u5f52\u89e3\u51b3[mid+1..r]\u7684\u90e8\u5206\n7. \u5c06[l..mid]\u548c[mid+1..r]\u4e24\u4e2a\u5e8f\u5217\u6309\u7167$fa(i)$\u5f52\u5e76\u3002\uff08\u65b9\u4fbf\u8fd4\u56de\u4e0a\u4e00\u5c42\u9012\u5f52\u7684\u65f6\u5019\u8ba1\u7b97\u53f3\u534a\u8fb9\u7684\u503c\uff09\n8. l==r\u7684\u65f6\u5019\u6211\u4eec\u5e94\u8be5\u7528i-1\u7684\u51b3\u7b56\u66f4\u65b0\u4e00\u4e0bi\u7684\u51b3\u7b56\uff0c\u56e0\u4e3af\u662f\u8981\u53d6\u5386\u53f2\u6700\u5927\u503c\u7684\u3002\u987a\u4fbf\u8ba1\u7b97\u4e00\u4e0bfa.fb\u7684\u503c\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u7531\u4e8e\u91c7\u7528\u4e86\u5f52\u5e76\u6392\u5e8f\uff0c\u4e3a$O(n\\lg n)$\u3002\u5b9e\u9645\u901f\u5ea6\u548c\u5e73\u8861\u6811\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u7801\u91cf\u628a\u5e73\u8861\u6811\u8e29\u7206\u5566\uff01\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n\nusing std::sort;\n\nconst int maxn=2e5+100;\nconst double eps=1e-5;\n\ndouble a[maxn],b[maxn],rate[maxn];\ndouble ans[maxn];\n\nstruct Node\n{\n    int id;\n    double f,fa,fb;\n}Q[maxn];\n\ntemplate<class T>inline T max(T a,T b){return a<b?b:a;}\ntemplate<class T>inline T min(T a,T b){return a<b?a:b;}\n\ninline void separate(int l,int r)\n{\n    static Node tmp[maxn];\n    int mid=(l+r)>>1;\n    for (int i=l,lp=l,rp=mid+1;i<=r;++i)\n        if (Q[i].id<=mid) tmp[lp++]=Q[i];\n        else tmp[rp++]=Q[i];\n    memcpy(Q+l,tmp+l,sizeof(Node)*(r-l+1));\n}\n\ninline double K(int x){return Q[x].fa;}\ninline double B(int x){return Q[x].fb;}\ninline double X(int x){return a[Q[x].id]/b[Q[x].id];}\ninline double intersection(int x,int y){return (B(x)-B(y))/(K(y)-K(x));}\n\ninline void solve(int l,int r)\n{\n    int mid=(l+r)>>1;\n    static int q[maxn];\n    int head=0,tail=0;\n    for (int i=l;i<=mid;++i)\n    {\n        while (head<tail && intersection(i,q[tail-1])<=intersection(q[tail],q[tail-1])) --tail;\n        if (K(q[tail])!=K(i)) q[++tail]=i;\n    }\n    for (int i=mid+1;i<=r;++i)\n    {\n        while (head<tail && K(q[head])*X(i)+B(q[head])<=K(q[head+1])*X(i)+B(q[head+1])) ++head;\n        Q[i].f=max(Q[i].f,b[Q[i].id]*(K(q[head])*X(i)+B(q[head])));\n    }\n}\n\n/**\n** f(i)=max{fa(j)*a(i)+fb(j)*b(i)}\n** i.e. f(i)/b(i)=max{fa(j)*(a[i]/b[i])+fb(j)}\n** fa(i)=fb(i)*rate(i)\n** fb(i)=f(i)/(rate(i)*a(i)+b(i))\n**/\n\ninline void CDQ(int l,int r)\n{\n    static Node tmp[maxn];\n    if (l==r)\n    {\n        int idx=Q[l].id;\n        Q[l].f=max(Q[l].f,ans[idx-1]);\n        Q[l].fb=Q[l].f/(rate[idx]*a[idx]+b[idx]);\n        Q[l].fa=Q[l].fb*rate[idx];\n        ans[Q[l].id]=Q[l].f;\n        return;\n    }\n    int mid=(l+r)>>1;\n    separate(l,r);\n    CDQ(l,mid);\n    solve(l,r);\n    CDQ(mid+1,r);\n    for (int lp=l,rp=mid+1,tp=l;tp<=r;++tp)\n    {\n        if ((rp>r) || (lp<=mid && Q[lp].fa<=Q[rp].fa))\n            tmp[tp]=Q[lp++];\n        else tmp[tp]=Q[rp++];\n    }\n    memcpy(Q+l,tmp+l,sizeof(Node)*(r-l+1));\n}\n\nint main()\n{\n    int n,s;\n    scanf(\"%d%d\",&n,&s);\n    for (int i=1;i<=n;++i)\n        scanf(\"%lf%lf%lf\",a+i,b+i,rate+i),Q[i].id=i;\n    ans[0]=s;\n    sort(Q+1,Q+n+1,[](const Node& x,const Node& y) -> bool {return a[x.id]/b[x.id]<a[y.id]/b[y.id];});\n    CDQ(1,n);\n    printf(\"%.3lf\\n\",ans[n]);\n}\n```\n",
        "postTime": 1556611953,
        "uid": 48711,
        "name": "_WA\u81ea\u52a8\u673a",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4027 \u3010[NOI2007]\u8d27\u5e01\u5151\u6362\u3011"
    },
    {
        "content": "\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b,\u5982\u4f55\u7ef4\u62a4\u7684\u4e4b\u7c7b\u7684\u697c\u4e0a\u7684\u5927\u4f6c\u4ecb\u7ecd\u7684\u5f88\u8be6\u7ec6\u4e86\n\n\u6211\u5728\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u4e0d\u7528\u6bcf\u6b21\u590d\u5236\u7ed3\u6784\u4f53\u7684\u65b9\u6cd5\n\n\u53ef\u4ee5\u9002\u5f53\u51cf\u5c0f\u5e38\u6570(\u867d\u7136\u4e0d\u5927)\n\n\u65b9\u6848\u5982\u4e0b:\n\n$id$\u6570\u7ec4\u50a8\u5b58\u4ece\u5f53\u524d$cdq$\u5904\u7406\u540e\u7684\u6709\u5e8f\u64cd\u4f5c\u5e8f\u5217\u6240\u5bf9\u5e94\u7684\u539f\u5e8f\u5217\u4e0b\u6807\u7684.\n\n\u5148\u5c06$ id_i$ \u521d\u59cb\u5316\u4e3a$i$,\u7136\u540e\u6bcf\u6b21\u53d6\u7528\u5bf9\u5e94\u7684\u64cd\u4f5c\n\n\u6392\u5e8f\u7684\u65f6\u5019\u5c06$id$\u6570\u7ec4\u66f4\u65b0\u5373\u53ef\n\n\u56e0\u4e3a\u6ca1\u6709\u590d\u5236\u7ed3\u6784\u4f53,\u6240\u4ee5\u7406\u8bba\u4e0a\u4f1a\u6bd4\u590d\u5236\u7684\u8981\u5feb\u4e00\u4e9b\n\n(\u9632\u6760:)\u6bd4\u8d5b\u7406\u8bba\u4e0a\u662f\u4e0d\u4f1a\u5361cdq\u7684\n\n\u4f46\u662f\u5728\u4f60\u8c37\u7684\u9ad8\u6027\u80fd\u8bc4\u6d4b\u673a\u4e0a\u51e0\u4e4e\u6ca1\u6709\u533a\u522b(\u7ea610ms),\u4f30\u8ba1\u662f\u4f60\u8c37\u7684\u8bc4\u6d4b\u673a\u5185\u5b58\u53c8\u5feb,cpu\u53c8\u7ed9\u529b(\u70b9\u8d5e)\n\n\u4f46\u662f$\\mathscr{CCF}$\u7684\u8001\u7237\u673a\u5c31\u4e0d\u4e00\u5b9a\u4e86\n\n\u8fd9\u91cc\u8ba8\u8bba\u4e00\u4e0b\u9898\u5916\u8bdd:\u5173\u4e8e\u51fd\u6570\u5f15\u7528\u5feb\u8fd8\u662f\u503c\u590d\u5236\u5feb\u7684\u95ee\u9898\n\n\u4ee5\u4e0b\u662f\u5728\u5728`i7-10510U(x64)`\u4e0a\u6d4b\u8bd5\u7684\u7ed3\u679c,\u6d4b\u8bd5\u4e3a$1e9$\u6b21\u7d2f\u8ba1\u7528\u65f6\n\n\u4e00\u4e0b\u6d4b\u8bd5\u7ed3\u679c\u5f15\u7528\u5747\u4e3a`const T&`\u800c\u975e`T&`(`const`\u5f15\u7528\u6bd4\u666e\u901a\u5f15\u7528\u5feb,\u5728$1e9$\u4e0b\u5feb1000ms\u5de6\u53f3)\n\n\u5728\u90fd\u662f`int(32bit)`\u65f6,\u503c\u590d\u5236\u5feb\u4e8e\u5f15\u7528,800ms\u5de6\u53f3\n\n\u5728\u4e24\u4e2a`int(64bit)`(\u7ed3\u6784\u4f53\u5b9e\u73b0)\u65f6,\u503c\u590d\u5236\u4e8e\u5f15\u7528\u65f6\u95f4\u76f8\u5dee\u4e0d\u5927.\n\n\u5728\u4e09\u4e2a\u53ca\u4ee5\u4e0a\u53ef\u4ee5\u660e\u663e\u53d1\u73b0\u5f15\u7528\u66f4\u5feb,1000ms\u5de6\u53f3\n\n\u63a8\u6d4b\u662f`x64`\u5730\u5740\u662f`64bit`\u7684\u539f\u56e0,\u53cd\u6b63$\\mathscr{CCF}$\u7528\u7684\u662f8700K,\u4e5f\u662f`x64`\n\n\u6240\u4ee5\u5728\u6570\u636e\u8303\u56f4\u8f83\u5927\u65f6,\u5efa\u8bae\u7a0d\u5fae\u5361\u4e00\u4e0b\u5e38\n\n\u53e6\u4e00\u4e2a\u8bdd\u9898:`register`\u662f\u5426\u771f\u7684\u6709\u7528\n\n\u7b54\u6848\u662f\u80af\u5b9a\u7684,$1e9$\u4e0b\u4ece2000ms\u52a0\u901f\u5230\u4e86230ms(\u4e0d\u6df1\u5165\u4e86qwq)\n\n\u4ee3\u7801:\n\n(\u5176\u5b9e\u8fd9\u6837\u8ba1\u7b97\u4e0b\u6765\u590d\u5236\u4e00\u4e2a`int`\u548c\u7a0b\u5e8f\u4e2d`416bit`\u7684\u7ed3\u6784\u4f53\u5728\u8fd9\u4e2a\u6570\u636e\u4e0b\u76f8\u5dee\u7684\u65f6\u95f4\u5b8c\u5168\u53ef\u4ee5\u5ffd\u7565,\u6240\u4ee5\u5b9e\u9645\u8003\u8bd5\u7684\u65f6\u5019\u5efa\u8bae\u76f4\u63a5\u590d\u5236\u7ed3\u6784\u4f53,\u7b80\u5355\u4e0d\u6613\u9519)\n```cpp\n#include <bits/stdc++.h>\n#define re register\n#define il inline\n#define _for(i, a, b) for (re int i = a; i <= b; ++i)\ntypedef double db;\nusing namespace std;\nconst db eps = 1e-9;\nconst int inf = 1e9, N = 1e5 + 5;\nint n, s[N];\ndb dp[N];\nstruct Node {\n    db k, x, y, a, b, r;\n    int id;\n} q[N];\nint id[N], tx[N];\ntemplate <typename T>\nil T rmax(const T& a, const T& b) {\n    return a > b ? a : b;\n}\n//\u5361\u5e38 \u6b64\u5904\u662fdouble\u6bd4\u5927\u5c0f,\u6240\u4ee5\u4e00\u4e0b\u7684\u51fd\u6570\u4e0e\u8fd9\u4e2a\u901f\u5ea6\u76f8\u5dee\u4e0d\u591a,\u82e5\u662f\u5927\u7684\u7ed3\u6784\u4f53\u5efa\u8bae\u5199\u5f15\u7528,\u82e5\u662f\u4e00\u4e2aint\u5219\u5efa\u8bae\u5199\u590d\u5236\n/*\nrmax(T a,T b)\n*/\nil db rabs(const db& x) { return x > 0 ? x : -x; }//\u540c\u7406\nil db getk(int i, int j) {\n    i = id[i], j = id[j];\n    if (rabs(q[i].x - q[j].x) <= eps) return inf;\n    return (q[j].y - q[i].y) / (q[j].x - q[i].x);\n}\nil void cdq(int l, int r) {\n    if (l == r) {\n        int u = id[l];\n        dp[l] = rmax(dp[l], dp[l - 1]);\n        q[u].y = dp[l] / (q[u].a * q[u].r + q[u].b), q[u].x = q[u].y * q[u].r;\n        return;\n    }\n    re int mid = (l + r) >> 1, dx = l - 1, dy = mid, k = 0;\n    _for(i, l, r) if (q[id[i]].id <= mid) tx[++dx] = id[i];\n    else tx[++dy] = id[i];\n    _for(i, l, r) id[i] = tx[i];//\u590d\u5236id\u800c\u975e\u6574\u4e2a\u590d\u5236\u7ed3\u6784\u4f53\n    cdq(l, mid);\n    _for(i, l, mid) {\n        while (k >= 2 && getk(s[k - 1], s[k]) <= getk(s[k], i) + eps) --k;\n        s[++k] = i;\n    }\n    _for(i, mid + 1, r) {\n        int u = id[i];//\u4f7f\u7528\u65f6\u4f7f\u7528id\u5bf9\u5e94\u7684\u539f\u64cd\u4f5c\n        while (k >= 2 && getk(s[k - 1], s[k]) <= q[u].k + eps) --k;\n        int j = s[k], v = id[j];\n        dp[q[u].id] = rmax(dp[q[u].id], q[v].x * q[u].a + q[v].y * q[u].b);\n    }\n    cdq(mid + 1, r);\n    dx = l, dy = mid + 1;\n    _for(i, l, r) if (dx <= mid && (dy > r || q[id[dx]].x < q[id[dy]].x + eps))\n        tx[i] = id[dx++];\n    else tx[i] = id[dy++];\n    _for(i, l, r) id[i] = tx[i];\n}\nil bool cmp(const Node& r1, const Node& r2) { return r1.k < r2.k; }//\u6b64\u5904\u660e\u663e\u5f15\u7528\u66f4\u5feb,\nint main() {\n    scanf(\"%d%lf\", &n, &dp[0]);\n    _for(i, 1, n) {\n        scanf(\"%lf%lf%lf\", &q[i].a, &q[i].b, &q[i].r);\n        q[i].k = -q[i].a / q[i].b, q[i].id = i;\n        id[i] = i;//\u521d\u59cb\u5316\n    }\n    sort(q + 1, q + n + 1, cmp), cdq(1, n);\n    printf(\"%.3lf\\n\", dp[n]);\n    return 0;\n}\n```",
        "postTime": 1604495811,
        "uid": 237496,
        "name": "__OwO__",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4027 \u3010[NOI2007]\u8d27\u5e01\u5151\u6362\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4027)\n\n\u7eaa\u5ff5\u4e00\u4e0b\u7b2c\u4e00\u9053\uff08\uff1f\uff09\u81ea\u5df1 yy \u51fa\u6765\u7684 NOI \u9898\u3002\n\n\u8003\u8651 dp\uff0c$dp[i]$ \u8868\u793a\u5230\u7b2c $i$ \u5929\u6700\u591a\u6709\u591a\u5c11\u94b1\u3002\n\n\u90a3\u4e48\u6709 $dp[i]=\\max\\{\\max\\limits_{j=1}^{i-1}a[i]*(dp[j]/(a[j]*r[j]+b[j])*r[j])+b[i]*dp[j]/(a[j]*r[j]+b[j]),dp[i-1]\\}$\n\n\u6211\u4eec\u7a0d\u5fae\u89c2\u5bdf\u4e00\u4e0b\uff0c\u91cc\u9762\u90a3\u4e2a\u5f0f\u5b50\u4f3c\u4e4e\u80fd\u5199\u6210\u659c\u7387\u4f18\u5316\u7684\u6837\u5b50\uff1a\n\n\u4ee4 $t[j]=dp[j]/(a[j]*r[j]+b[j])$\uff0c\u5047\u8bbe\u6709 $j>k$ \u5e76\u4e14\u4ece $j$ \u8f6c\u79fb\u6bd4\u4ece $k$ \u8f6c\u79fb\u66f4\u4f18\uff0c\u90a3\u4e48\uff1a\n\n$$a[i]*t[j]*r[j]+b[i]*t[j]>a[i]*t[k]*r[k]+b[i]*t[k]$$\n\n\u5c06\u8fd9\u4e2a\u5f0f\u5b50\u53d8\u4e2a\u5f62\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a\n\n$$\\frac{t[j]*r[j]-t[k]*r[k]}{-t[j]+t[k]}>\\frac{b[i]}{a[i]}$$\n\n\u4f46\u663e\u7136 $-t[j]$\uff08\u6a2a\u5750\u6807\uff09 \u662f\u4e0d\u5355\u8c03\u7684\uff0c$\\frac{b[i]}{a[i]}$\uff08\u659c\u7387\uff09\u4e5f\u662f\u4e0d\u5355\u8c03\u7684\u3002\n\n\u89e3\u51b3\u659c\u7387\u4e0d\u5355\u8c03\u7684\u95ee\u9898\uff0c\u8fd9\u4e0e[\u4efb\u52a1\u5b89\u6392](https://www.luogu.com.cn/problem/P2365)\u6709\u70b9\u7c7b\u4f3c\uff0c\u628a\u6240\u6709\u70b9\u6254\u8fdb\u51f8\u5305\u540e\u4e8c\u5206\u659c\u7387\u627e\u5230\u6700\u4f18\u51b3\u7b56\u70b9\u3002\n\n\u89e3\u51b3\u6a2a\u5750\u6807\u4e0d\u5355\u8c03\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u501f\u9274[Cow School](https://www.luogu.com.cn/problem/P2877)\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528CDQ\u5206\u6cbb\u5c06\u524d\u4e00\u534a\u7684\u70b9\u6309\u6a2a\u5750\u6807\u6392\u5e8f\u540e\u5efa\u7acb\u51f8\u5305\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u65f6\u8fd8\u6709\u8bf8\u591a\u7ec6\u8282\u9700\u8003\u8651\uff0c\u4f8b\u5982 CDQ \u5206\u6cbb\u4e2d\u9012\u5f52\u7684\u987a\u5e8f\u4e0d\u80fd\u641e\u9519\uff0c\u5fc5\u987b\u6309\u7167\u9012\u5f52\u5de6\u534a\u8fb9 $\\rightarrow$ \u7528\u5de6\u534a\u8fb9\u66f4\u65b0\u53f3\u534a\u8fb9\u7b54\u6848 $\\rightarrow$ \u9012\u5f52\u53f3\u534a\u8fb9\u7684\u987a\u5e8f\u8fdb\u884c\uff0c\u5426\u5219\u65e0\u6cd5\u4ece $dp[i]$ \u66f4\u65b0\u5230 $dp[i+1]$\u3002\u8fd8\u6709\u5c31\u662f\u7279\u5224\u659c\u7387\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\u3002\n\n```cpp\n/*\nContest: -\nProblem: P4027\nAuthor: tzc_wk\nTime: 2020.7.18\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi\t\t\tfirst\n#define se\t\t\tsecond\n#define fz(i,a,b)\tfor(int i=a;i<=b;i++)\n#define fd(i,a,b)\tfor(int i=a;i>=b;i--)\n#define foreach(it,v) for(__typeof(v.begin()) it=v.begin();it!=v.end();it++)\n#define all(a)\t\ta.begin(),a.end()\n#define fill0(a)\tmemset(a,0,sizeof(a))\n#define fill1(a)\tmemset(a,-1,sizeof(a))\n#define fillbig(a)\tmemset(a,0x3f,sizeof(a))\n#define fillsmall(a) memset(a,0xcf,sizeof(a))\n#define y1\t\t\ty1010101010101\n#define y0\t\t\ty0101010101010\ntypedef pair<int,int> pii;\ninline int read(){\n\tint x=0,neg=1;char c=getchar();\n\twhile(!isdigit(c)){\n\t\tif(c=='-')\tneg=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c))\tx=x*10+c-'0',c=getchar();\n\treturn x*neg;\n}\nconst double EPS=1e-10;\nint n=read();\nstruct data{\n\tdouble a,b,r,dp;\n} a[100005],tmp[100005];\ninline double _t(int j){\n\treturn 1.0*a[j].dp/(a[j].a*a[j].r+a[j].b);\n}\ninline double sl(int j,int k){\n\tif(abs((-_t(j))-(-_t(k)))<EPS)\treturn 1e9;\n\treturn 1.0*(_t(j)*a[j].r-_t(k)*a[k].r)/((-_t(j))-(-_t(k)));\n}\ninline void merge(int l,int r,int mid){\n\tint p1=l,p2=mid+1;\n\tfor(int i=l;i<=r;i++){\n\t\tif(p1<=mid&&(p2>r||_t(p1)>_t(p2)))\n\t\t\ttmp[i]=a[p1++];\n\t\telse\n\t\t\ttmp[i]=a[p2++];\n\t}\n\tfor(int i=l;i<=r;i++){\n\t\ta[i]=tmp[i];\n\t}\n}\nint q[100005];\ninline int bsearch(int l,int r,double slo){\n\tif(l==r)\treturn q[l];\n\tint mid=(l+r)>>1;\n\tif(sl(q[mid+1],q[mid])-slo>EPS)\treturn bsearch(mid+1,r,slo);\n\telse\t\t\t\t\t\t\treturn bsearch(l,mid,slo);\n}\ninline void CDQ(int l,int r){\n\tif(l==r){\n\t\ta[l+1].dp=max(a[l+1].dp,a[l].dp);\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tCDQ(l,mid);\n\tint hd=1,tl=0;\n\tfz(i,l,mid){\n\t\twhile(hd<tl&&sl(i,q[tl])-sl(q[tl],q[tl-1])>EPS)\ttl--;\n\t\tq[++tl]=i;\n\t}\n\tfz(i,mid+1,r){\n\t\tint j=bsearch(hd,tl,1.0*a[i].b/a[i].a);\n\t\ta[i].dp=max(a[i].dp,a[i].a*(a[j].dp/(a[j].a*a[j].r+a[j].b)*a[j].r)+a[i].b*a[j].dp/(a[j].a*a[j].r+a[j].b));\n\t\ta[i+1].dp=max(a[i+1].dp,a[i].dp);\n\t}\n\tCDQ(mid+1,r);\n\tmerge(l,r,mid);\n}\nsigned main(){\n\tcin>>a[1].dp;\n\tfz(i,1,n)\tscanf(\"%lf %lf %lf\",&a[i].a,&a[i].b,&a[i].r);\n\tCDQ(1,n);\n\tprintf(\"%.3lf\\n\",a[n+1].dp);\n\treturn 0;\n}\n/*\ndp[i]=max{a[i]*(dp[j]/(a[j]*r[j]+b[j])*r[j])+b[i]*dp[j]/(a[j]*r[j]+b[j])}\n\nLet t[j] be dp[j]/(a[j]*r[j]+b[j])\n\na[i]*t[j]*r[j]+b[i]*t[j]\n\nj>k\n\na[i]*t[j]*r[j]+b[i]*t[j]>a[i]*t[k]*r[k]+b[i]*t[k]\na[i]*(t[j]*r[j]-t[k]*r[k])>b[i]*(t[k]-t[j])\n(t[j]*r[j]-t[k]*r[k])\n--------------------->b[i]/a[i]\n   (-t[j]-(-t[k]))\n*/\n```",
        "postTime": 1595087106,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4027 \u3010[NOI2007]\u8d27\u5e01\u5151\u6362\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P4027)\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u6837\u4f8b\u89e3\u91ca\uff1a\n\n\u65f6\u95f4|\u7528\u6237\u64cd\u4f5c|\u4eba\u6c11\u5e01(\u5143)|A \u5238\u7684\u6570\u91cf|B \u5238\u7684\u6570\u91cf\n-|-|-|-|-\n\u5f00\u6237|\u65e0|100|0|0\n\u7b2c\u4e00\u5929|\u4e70\u5165100\u5143|0|50|50\n\u7b2c\u4e8c\u5929|\u5356\u51fa100%|150|0|0\n\u7b2c\u4e8c\u5929|\u4e70\u5165150\u5143|0|75|37.5\n\u7b2c\u4e09\u5929|\u5356\u51fa100%|225|0|0\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u7ed9\u51fa\u7684\u8fd9\u4e00\u79cd\u6700\u4f18\u65b9\u6848\u4e2d\uff0c\u6bcf\u4e00\u6b21\u4e70\u90fd\u4f1a\u628a\u6240\u6709\u94b1\u90fd\u7528\u5b8c\uff0c\u6bcf\u4e00\u6b21\u5356\u90fd\u4f1a\u628a\u6240\u6709\u5238\u90fd\u5356\u5149\u3002\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u9886\u609f\u5230\uff0c\u82e5\u8981\u4f7f\u6700\u540e\u5f97\u5230\u7684\u91d1\u94b1\u6570\u76ee\u6700\u591a\uff0c**\u6bcf\u4e00\u6b21\u4e70\u5165\u90fd\u5e94\u7528\u5149\u6240\u6709\u94b1\uff0c\u6bcf\u4e00\u6b21\u5356\u51fa\u90fd\u5e94\u5356\u51fa100%**\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u8d2a\u5fc3\u7684\u65b9\u5f0f\u8bc1\u660e\uff0c\u6b64\u5904\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u8fd9\u542f\u53d1\u6211\u4eec\uff0c\u8bbe$f[i]$\u8868\u793a\u524d$i$\u5929\u6700\u591a\u53ef\u4ee5\u83b7\u5f97\u591a\u5c11\u91d1\u94b1\uff0c\u8003\u8651\u7b2c$i$\u5929\u7684\u64cd\u4f5c\u3002\n\n\u9996\u5148\uff0c\u7b2c$i$\u5929\u53ef\u4ee5\u4e0d\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\uff1a$f[i]=f[i-1]$\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5728\u7b2c$i$\u5929\u5356\u51fa\u5f53\u524d\u62e5\u6709\u7684\u91d1\u5238\uff0c\u8fd9\u65f6\u4fbf\u9700\u8981\u6211\u4eec\u679a\u4e3e\u4e0a\u4e00\u6b21\u4e70\u5165\u91d1\u5238\u662f\u4ec0\u4e48\u65f6\u5019\u3002\n\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u8fd9\u4e00\u5929\u4e70\u5165\u91d1\u5238\uff0c\u4f46\u8fd9\u5e76\u4e0d\u4f1a\u4f7f\u524d$i$\u5929\u7684\u7b54\u6848\u589e\u5927\uff0c\u6545\u65e0\u9700\u8003\u8651\u3002\uff08\u5bf9\u4e8e\u8fd9\u4e00\u5929\u4e70\u5165\u5bf9\u672a\u6765\u7684\u5f71\u54cd\uff0c\u5c06\u4f1a\u5728\u540e\u9762\u7684\u5929\u6570\u4e2d\u8003\u8651\u5230\u3002\uff09\n\n\u91cd\u70b9\u8003\u8651\u5982\u4f55\u5904\u7406\u201c\u5356\u51fa\u201d\u7684\u60c5\u51b5\u3002\n\n\u5bf9\u4e8e$f[i]$\uff0c\u6211\u4eec\u679a\u4e3e\u5728\u7b2c$i$\u5929\u4e4b\u524d\u7684\u7b2c$j$\u5929\uff0c\u7b2c$j$\u5929\u80fd\u83b7\u5f97\u7684\u6700\u591a\u91d1\u94b1\u6570\u4e3a$f[j]$\u3002\u8003\u8651$f[j]$\u8fd9\u4e48\u591a\u7684\u94b1\u5728\u7b2c$j$\u5929\u80fd\u4e70\u5230\u591a\u5c11$A$\u5238\u3001\u591a\u5c11$B$\u5238\u3002\n\n\u8bbe\u603b\u5171\u80fd\u4e70\u5230$k$\u5f20$A$\u5238\u548c$B$\u5238\uff0c\u5219\uff1a\n\n$A$\u5238\u6709$\\dfrac{k\\cdot Rate_j}{Rate_j+1}$\u5f20\u3002\n\n$B$\u5238\u6709$\\dfrac{k}{Rate_j+1}$\u3002\n\n\u82b1\u8d39\u4e3a$\\dfrac{k\\cdot Rate_j\\cdot A_j}{Rate_j+1}+\\dfrac{k\\cdot B_j}{Rate_j+1}=k\\cdot\\dfrac{Rate_j\\cdot A_j+B_j}{Rate_j+1}$\u3002\n\n\u4e8e\u662f\u6709$f[j]=k\\cdot\\dfrac{Rate_j\\cdot A_j+B_j}{Rate_j+1}\\Rightarrow k=f[j]\\cdot \\dfrac{Rate_j+1}{Rate_j\\cdot A_j+B_j}$\u3002\n\n\u4e8e\u662f$A$\u5238\u6709$f[j]\\cdot \\dfrac{Rate_j}{Rate_j\\cdot A_j+B_j}$\u5f20\uff0c$B$\u5238\u6709$f[j]\\cdot \\dfrac{1}{Rate_j\\cdot A_j+B_j}$\u5f20\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8bbe$P_j=f[j]\\cdot \\dfrac{Rate_j}{Rate_j\\cdot A_j+B_j}$\uff0c$Q_j=f[j]\\cdot \\dfrac{1}{Rate_j\\cdot A_j+B_j}$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u6709\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$f[i]=\\max\\limits_{1\\leq j\\leq i-1}\\{P_j\\cdot A_i+Q_j\\cdot B_i\\}$$\n\n\u8fd9\u6837`dp`\u662f$O(n^2)$\u7684\uff0c\u89c2\u5bdf\u5230\u5b58\u5728\u4e0e$i$\u548c$j$\u5747\u6709\u5173\u7684\u4e58\u79ef\u9879\uff0c\u8003\u8651\u659c\u7387\u4f18\u5316\u3002\n\n\u53bb\u6389$max$\u3002\n\n$$f[i]=P_j\\cdot A_i+Q_j\\cdot B_i$$\n\n\u4f3c\u4e4e\u5f88\u96be\u53d8\u6210\u659c\u7387\u4f18\u5316\u7684\u4e00\u822c\u5f62\u5f0f\u3002\u6211\u4eec\u53ef\u4ee5\u4e24\u8fb9\u540c\u65f6\u9664\u4ee5$B_i$\u3002\n\n$$\\dfrac{f[i]}{B_i}=\\dfrac{A_i}{B_i}\\cdot P_j+Q_j$$\n\n\u79fb\u9879\uff1a\n\n$$Q_j=-\\dfrac{A_i}{B_i}\\cdot P_j+\\dfrac{f[i]}{B_i}$$\n\n\u73b0\u5728\u8fd9\u6761\u5f0f\u5b50\u5c31\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u6761\u659c\u7387\u4e3a$-\\dfrac{A_i}{B_i}$\u7684\u76f4\u7ebf\u4e86\u3002\n\n\u4f46\u5f53\u6211\u4eec\u8981\u8fdb\u884c\u4f18\u5316\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u659c\u7387$-\\dfrac{A_i}{B_i}$\u548c\u6a2a\u5750\u6807$P_j$\u90fd\u6ca1\u6709\u5355\u8c03\u6027\uff0c\u96be\u4ee5\u4f18\u5316\u3002\n\n\u8fd9\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u52a8\u6001\u7ef4\u62a4\u51f8\u58f3\u6765\u89e3\u51b3\uff0c\u4f46\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8f83\u4e3a\u7b80\u5355\u7684$CDQ$\u5206\u6cbb\u6765\u6c42\u89e3\u3002\n\n\u7528$CDQ$\u5206\u6cbb\u6c42\u89e3\u7684\u5927\u81f4\u6b65\u9aa4\uff1a\n- \u5c06\u6240\u6709\u51b3\u7b56\u70b9\uff08\u4ece`1`\u5230`n`\uff09\u5b58\u5165\u6570\u7ec4`p`\u4e2d\u3002\n- $p$\u4e2d\u7684\u70b9\u6309\u659c\u7387\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\n- \u5f00\u59cb\u5206\u6cbb\u6c42\u89e3\uff1a\n- \u8bbe\u5f53\u524d\u5904\u7406\u7684\u51b3\u7b56\u70b9\u8303\u56f4\u4e3a`l`\u5230`r`\uff0c\u5bf9\u5e94`p`\u6570\u7ec4\u4e2d\u7684\u00b7\u7b2c`fl`\u5230\u7b2c`fr`\u4e2a\u5143\u7d20\u3002\n- \u8bbe$mid=\\lfloor \\dfrac{l+r}{2} \\rfloor$\uff0c\u5c06`p`\u6570\u7ec4\u4e2d\u7684\u51b3\u7b56\u70b9\u4ee5`mid`\u4e3a\u754c\u9650\u5206\u5230\u5de6\u53f3\u4e24\u65c1\u3002\n- \u9012\u5f52\u8ba1\u7b97`l`\u5230`mid`\u3002\n- \u5de6\u4fa7\u7684\u70b9\u5df2\u6309\u6a2a\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff08\u89c1\u6700\u540e\u4e00\u6b65\uff09\uff0c\u7528\u5355\u8c03\u961f\u5217\u76f4\u63a5\u52a0\u70b9\u7ef4\u62a4\u51f8\u58f3\u3002\n- \u53f3\u4fa7\u7684\u70b9\u659c\u7387\u4f9d\u7136\u5355\u8c03\uff0c\u53ef\u4ee5\u5feb\u901f\u4ece\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u7684\u51f8\u58f3\u4e2d\u5bfb\u627e\u6700\u4f18\u51b3\u7b56\u70b9\uff0c\u4ece\u800c\u66f4\u65b0\u7b54\u6848\u3002\n- \u9012\u5f52\u8ba1\u7b97`mid+1`\u5230`r`\u3002\n- \u5c06`p`\u4e2d\u7684\u70b9\u6309\u6a2a\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u65b9\u4fbf\u4e0a\u4e00\u5c42\u5904\u7406\uff08\u53ef\u4ee5\u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\uff09\u3002\n  \n  \u5982\u679c\u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u4e3a$O(nlogn)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\u5177\u4f53\u7ec6\u8282\u770b\u4ee3\u7801\u3002\n\n  \uff08\u6ce8\uff1a\u4e0d\u8981\u5fd8\u4e86\u5728\u5206\u6cbb\u5e95\u5c42\u7528$f[i-1]$\u6765\u66f4\u65b0$f[i]$\u3002\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n\tusing namespace std;\n\tconst int N=100005;\n\tint n=0,S=0,p[N],t[N],q[N];\n\tdouble A[N],B[N],Ra[N],f[N];\ndouble X(int x)\n\t{return Ra[x]/(Ra[x]*A[x]+B[x])*f[x];}\ndouble Y(int x)\n\t{return 1/(Ra[x]*A[x]+B[x])*f[x];}\nbool cmp0(int x,int y)\n\t{return -A[x]/B[x]>-A[y]/B[y];}\nbool cmp1(int x,int y)\n\t{return X(x)<X(y);}\ndouble CalcXL(int k1,int k2)\n{\n\tif(X(k2)==X(k1)) return 9e18; \n\treturn (Y(k2)-Y(k1))/(X(k2)-X(k1));\n}\nvoid PaiXv(int l,int mid,int r)//\u5f52\u5e76\u6392\u5e8f\n{\n\tint p1=l,p2=mid+1,cnt=0;\n\twhile(p1<=mid||p2<=r)\n\t{\n\t\tif(p1<=mid&&(p2>r||X(p[p1])<X(p[p2])))\n\t\t\tt[++cnt]=p[p1++];\n\t\telse t[++cnt]=p[p2++];\n\t}\n\tfor(int i=l;i<=r;i++) p[i]=t[i-l+1];\n}\nvoid Sol(int l,int r,int fl,int fr)//\u5206\u6cbb\n{\n\tif(l==r) \n\t\t{f[l]=max(f[l],f[l-1]);return;}\n\tint mid=(l+r)>>1,cnt=0;\n\tfor(int i=fl;i<=fr;i++)\n\t\tif(p[i]<=mid) t[++cnt]=p[i];\n\tint fmid=fl+cnt-1;\n\tfor(int i=fl;i<=fr;i++)\n\t\tif(p[i]>mid) t[++cnt]=p[i];\n\tfor(int i=fl;i<=fr;i++) p[i]=t[i-l+1];\n\tSol(l,mid,fl,fmid);\n\tint L=1,R=0;\n\tfor(int i=fl;i<=fmid;i++)\n\t{\n\t\twhile(R>=2&&CalcXL(q[R-1],q[R])<CalcXL(q[R],p[i])) R--;\n\t\tq[++R]=p[i];\n\t}\n\tfor(int i=fmid+1;i<=fr;i++)\n\t{\n\t\twhile(R-L+1>=2&&CalcXL(q[L],q[L+1])>-A[p[i]]/B[p[i]]) L++;\n\t\tf[p[i]]=max(f[p[i]],X(q[L])*A[p[i]]+Y(q[L])*B[p[i]]);\n\t}\n\tSol(mid+1,r,fmid+1,fr);\n\tPaiXv(fl,fmid,fr);\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&S);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%lf%lf%lf\",&A[i],&B[i],&Ra[i]),p[i]=i;\n\tsort(p+1,p+n+1,cmp0);\n\tf[1]=S,Sol(1,n,1,n); \n\tprintf(\"%.3f\",f[n]);\n\treturn 0;\n}\n```",
        "postTime": 1590473530,
        "uid": 42758,
        "name": "wzxx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4027 \u3010[NOI2007]\u8d27\u5e01\u5151\u6362\u3011"
    },
    {
        "content": "# [NOI 2007] \u8d27\u5e01\u5151\u6362\n\n\u8fd9\u662f\u4e00\u4e2a\u66b4\u529b\u90fd\u5f88\u96be\u60f3\u7684\u659c\u7387\u4f18\u5316\u9898\u3002\n\n## \u9898\u76ee\u53d9\u8ff0\n\n\u770b\u539f\u9898\u5427\u3002\u5f88\u96be\u53d9\u8ff0\u3002**\u8fd9\u9898\u53ef\u80fd\u80a1\u7968\u6570\u91cf\u53ef\u4ee5\u662f\u5c0f\u6570\u3002**\n\n## \u9898\u89e3\n\n### 1\n\n\u9996\u5148\u662f`dp`\uff0c\u8bbe$f_{i,j,k}$\u8868\u793a\u524d$i$\u5929$j$\u5f20`A`\u80a1\u7968\uff0c$k$\u5f20`B`\u80a1\u7968\u7684\u6700\u5927\u94b1\u6570\u3002\u7136\u800c\u80af\u5b9a\u4e0d\u884c\u3002\u4f46\u662f\u72b6\u6001\u5fc5\u987b\u8fd9\u6837\u3002\u90a3\u4e48\u590d\u6742\u5ea6\u4e0d\u5bf9\u3002\u600e\u4e48\u529e\uff1f\n\n> \u53ef\u4ee5\u8003\u8651\u627e\u6027\u8d28\uff0c\u4e00\u5b9a\u5b58\u5728\u4e00\u79cd\u65b9\u6848\uff0c\u6bcf\u6b21\u8981\u4e48\u5168\u5356\u5b8c\uff0c\u8981\u4e48\u628a\u94b1\u5168\u82b1\u5b8c\u3002\n\n**\u5982\u679c\u60f3\u60f3\u51fa\u8fd9\u4e00\u6b65\uff0c\u90a3\u4e48\u8981\u6709\u4e00\u4e2a\u8d2a\u5fc3\u7684\u601d\u60f3\u3002**\n\n### 2\n\n\u8bbe$f_i$\u4e3a\u524d$i$\u5929\u7684\u6700\u5927\u94b1\u6570\uff08\u6ca1\u6709\u80a1\u7968\u7684\u6700\u5927\u94b1\u6570\uff09\u3002\u8003\u8651\u4ece$f_j$\u8f6c\u79fb\u3002\u4f1a\u7528$f_j$\u7684\u94b1\uff0c\u9009\u62e9\u4e2d\u95f4\u4e00\u5929\uff0c\u82b1\u53bb\u8fd9\u4e9b\u94b1\uff0c\u7136\u540e\u5f97\u5230\u66f4\u591a\u94b1\u3002\u5982\u4f55\u77e5\u9053\u9009\u62e9\u54ea\u4e00\u5929\u82b1\u94b1\u5462\uff1f\u53c8\u5982\u4f55\u9009\u62e9\u54ea\u4e00\u5929\u5f97\u94b1\u5462\uff1f\u8fd9\uff0c\u82b1\u94b1\u65f6\u95f4\u548c\u5f97\u94b1\u7684\u65f6\u95f4\u6709\u5173\u7cfb\u3002\u6240\u4ee5\u679a\u4e3e\u8fd9\u4e00\u5929\u524d\u5728\u54ea\u4e00\u5929\u82b1\u94b1\uff0c\u54ea\u4e00\u5929\u5356\u80a1\u7968\uff1f\u7136\u800c\u8fd9\u4e0d\u80fd\u659c\u7387\u4f18\u5316\u3002\n\n> \u53ef\u4ee5\u8003\u8651\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\n>\n> 1. \u4eca\u5929\u5356\u6389\n> 2. \u4eca\u5929\u4e0d\u5356\u6389\n>\n> \u4e0d\u53ef\u80fd\u4eca\u5929\u4e70\u3002\u56e0\u4e3a\u8fd9\u4e00\u5929\u5fc5\u987b\u5356\u3002\n>\n> \u5982\u679c\u4eca\u5929\u4e0d\u5356\u6389\uff0c\u90a3\u4e48\u8003\u8651\u4ece\u54ea\u4e00\u5929\u8f6c\u79fb\u3002\u8bbe$x_i$\u4e3a\u7528\u7b2c$i$\u5929\u7684\u94b1\u53ef\u4ee5\u4e70\u591a\u5c11`A`\u80a1\u7968\uff0c$y_i$\u4e3a\u7528\u7b2c$i$\u5929\u7684\u94b1\u53ef\u4ee5\u4e70\u591a\u5c11`B`\u80a1\u7968\uff08\u6309\u7167\u6bd4\u4f8b\u4e70\uff09\u3002\u8f6c\u79fb\u5c31\u662f$A_ix_i+B_iy_i$\u3002\n>\n> \u5982\u679c\u5356\u6389\uff0c\u76f4\u63a5\u4ece$f_{i-1}$\u8f6c\u79fb\u5373\u53ef\u3002\n\n**\u53ef\u80fd\u5982\u679c\u60f3\u8981\u60f3\u51fa\u8fd9\u6b65\uff0c\u90a3\u4e48\u9996\u5148\u8981\u6709\u4e00\u4e2a\u5206\u7c7b\u7684\u60f3\u6cd5\u3002\u6309\u7167\u4eca\u5929\u5356\u548c\u4e0d\u5356\u5206\u7c7b\u3002**\n\n### 3\n\n\u8003\u8651\u659c\u7387\u4f18\u5316\uff0c\u518d\u7528\u5957\u8def\u7684`cdq`\u5206\u6cbb\u4f18\u5316\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u518d\u63a8\u8350\u4e00\u4e0b[\u8fd9\u7bc7](https://www.cnblogs.com/RiverHamster/p/cdq-slopedp.html)\u9898\u89e3\u5427\u3002\n\n## \u77e5\u8bc6\u70b9\n\n+ \u53ef\u80fd\u5206\u4e2a\u7c7b\u66f4\u597d\u8f6c\u79fb\u3002\n\n## \u4ee3\u7801\n\n\u5199\u7684\u65f6\u5019\u53ef\u4ee5\u8003\u8651\u628a\u7b2c$0$\u5929\u7684\u8d21\u732e\u6d88\u9664\u6389\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u8f6c\u79fb\u7684\u65f6\u5019\u8003\u8651\u7b2c$0$\u5929\u4e86\u3002\n\n\u66f4\u591a\u7ec6\u8282\u89c1\u6ce8\u91ca\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int maxDay = 1e5 + 5;\nint nbDay, Mon;\nstruct DOT {\n\tint id;\n\tdouble x, y, valA, valB, rate;\n} dot[maxDay], rec[maxDay];\ndouble dp[maxDay];\nbool Cmp(DOT fir, DOT sec) {\n\treturn (-fir.valA / fir.valB) > (-sec.valA / sec.valB);\n\t//\u8fd9\u91cc\u662f\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff01\u6240\u4ee5\u7b26\u53f7\u5e94\u8be5\u662f >\uff0c\u56e0\u4e3a\u4e0b\u9762\u662f >\u4e00\u4e2a\u6570 \n}\ndouble Slope(int fir, int sec) {\n\tif (dot[fir].x == dot[sec].x)\n\t\treturn (dot[sec].y > dot[fir].y) ? 1e18 : -1e18 ;\n\treturn (dot[fir].y - dot[sec].y) / (dot[fir].x - dot[sec].x);\n}\nvoid Div(int L, int R) {\n\tif (L == R) {\n\t\tdp[L] = max(dp[L], dp[L - 1]);\n\t\tdot[L].x = dp[L] * dot[L].rate / (dot[L].valA * dot[L].rate + dot[L].valB);\n\t\tdot[L].y = dot[L].x / dot[L].rate;\n\t\treturn ;\n\t}\n\tint mid = (L + R) >> 1;\n\tfor (int pt = L, p1 = L, p2 = mid + 1; pt <= R; ++pt) {\n\t\tif (dot[pt].id <= mid) rec[p1++] = dot[pt];\n\t\telse rec[p2++] = dot[pt];\n\t}\n\tfor (int i = L; i <= R; ++i) dot[i] = rec[i];\n\tDiv(L, mid);\n\tint head = 1, tail = 0;\n\tstatic int Q[maxDay];\n\t//\u6b64\u65f6\u5de6\u8fb9\u6309\u7167 x\u8f74\u6392\u597d\u5e8f \n\tfor (int pt = L; pt <= mid; ++pt) {\n\t\twhile (head < tail && Slope(Q[tail - 1], Q[tail]) < Slope(Q[tail], pt)) --tail;\n\t\tQ[++tail] = pt;\n\t}\n\t//\u53f3\u8fb9\u6309\u7167 -a/b\u6392\u597d\u5e8f \n\tfor (int pt = mid + 1; pt <= R; ++pt) {\n\t\twhile (head < tail && Slope(Q[head], Q[head + 1]) > -dot[pt].valA / dot[pt].valB) ++head;\n\t\tint now = dot[pt].id;\n\t\t//\u8fd9\u91cc\u5e94\u8be5\u662f pt\u5bf9\u5e94\u7684\u4e0b\u6807\u3002\u3002 \n\t\tdp[now] = max(dp[now], dot[Q[head]].x * dot[pt].valA + dot[Q[head]].y * dot[pt].valB);\n\t}\n\tDiv(mid + 1, R);\n\tfor (int pt = L, p1 = L, p2 = mid + 1; pt <= R; ++pt) {\n\t\tif (p2 > R || p1 <= mid && dot[p1].x < dot[p2].x) rec[pt] = dot[p1++];\n\t\telse rec[pt] = dot[p2++];\n\t}\n\tfor (int pt = L; pt <= R; ++pt) dot[pt] = rec[pt];\n\t//\u8fd9\u91cc\u5199\u9519\u8fc7\u4e00\u6b21\uff0c dot[pt] = rec[pt]\u5199\u53cd\u4e86 \n}\nint main() {\n\tscanf(\"%d%d\", &nbDay, &Mon);\n\tfor (int day = 1; day <= nbDay; ++day) {\n\t\tdot[day].id = day;\n\t\tscanf(\"%lf%lf%lf\", &dot[day].valA, &dot[day].valB, &dot[day].rate);\n\t\tdp[day] = Mon;\n\t}\n\tsort(dot + 1, dot + nbDay + 1, Cmp);\n\tDiv(1, nbDay);\n\tprintf(\"%.3lf\\n\", dp[nbDay]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1585234648,
        "uid": 75715,
        "name": "KokiNiwa",
        "ccfLevel": 0,
        "title": "[NOI 2007] \u8d27\u5e01\u5151\u6362\uff08\u659c\u7387\u4f18\u5316\uff0cCDQ\u5206\u6cbb\uff09"
    }
]