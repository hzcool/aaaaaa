[
    {
        "content": "# **\u672c\u6765\u60f3\u6c34\u4e2a\u4e09\u5341\u5206\u5148**\n\n**\u4e8e\u662f\u5199\u4e86\u4e2a\u6392\u5e8f**\n\n#### \u7ed3\u679c\u76f4\u63a5A\u9898\uff01\n\n**\u2014\u2014\u5c34\u5c2c....\u672c\u6765\u6253\u7b97\u5199\u5e73\u8861\u6811\u7684\uff0c\u770b\u5230\u6392\u5e8f\u90fdA\u4e86\u5c31\u65e0\u8da3\u54af**\n\n\u5176\u5b9e\u5c31\u662f\u76f4\u63a5\u6839\u636e\u6bcf\u5929\u7684\u503c\u6392\u5e8f\uff0c\u7136\u540e\u5b83\u5de6\u53f3\u6700\u8fd1\u7684\u6570\u4e00\u5b9a\u662f\u548c\u5b83\u7684\u503c\u76f8\u5dee\u6700\u5c0f\u7684\u561b\n\n\u4e8e\u662f\u5728\u5de6\u53f3\u90fd\u770b\u770b\uff0c\u5982\u679c\u5929\u6570\u6bd4\u5b83\u7684\u5929\u6570\u5c0f\u5c31\u6ee1\u8db3\u9898\u610f\u6240\u4ee5\u76f4\u63a5\u7b97\u5230\u7b54\u6848\u91cc\u53bb\u567b\n\n```cpp\n    #include <cstdio>\n    #include <algorithm>\n    #define ri register int\n    #define getchar() (S==T&&(T=(S=BB)+fread(BB,1,1<<15,stdin),S==T)?EOF:*S++)\n    char BB[1<<20],*S=BB,*T=BB;\n    using namespace std;\n    int n,sum;\n    inline int read() \n    {\n        int num=0,w=1; char ch=0;\n        while(ch<'0'||ch>'9') {if(ch=='-') w=-1;ch=getchar(); }\n        while(ch>='0'&&ch<='9') num=(num<<3)+(num<<1)+ch-'0',ch=getchar();\n        return num*w;\n    }\n    struct A{\n        int num,day;\n    }a[100000];\n    bool cmp(A a,A b)\n    {  \n        return a.num<b.num;  \n    } \n    inline int check(int x)\n    {    int p=2147483647,t=2147483647;\n        if(a[x].day==1)    return a[x].num;\n        for(ri i=x-1;i>=1;--i)\n                        if(a[i].day<a[x].day)    {p=(a[i].num>a[x].num)?a[i].num-a[x].num:a[x].num-a[i].num;break;}\n        for(ri i=x+1;i<=n;++i)\n                        if(a[i].day<a[x].day)    {t=(a[i].num>a[x].num)?a[i].num-a[x].num:a[x].num-a[i].num;break;}\n        return (p>t)?t:p;\n    }\n    int main()\n    {\n        n=read();\n        for(ri i=1;i<=n;++i)\n            a[i].num=read(),a[i].day=i;\n        sort(a+1,a+1+n,cmp);\n        for(ri i=1;i<=n;++i)\n            sum+=check(i);\n        printf(\"%d\",sum);\n        return 0;\n}\n```",
        "postTime": 1515327305,
        "uid": 45610,
        "name": "lzl123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "## STL\u5927\u6cd5\u597d\uff01\n\n\n------------\n\u4f17\u6240\u5468\u77e5\uff0cset\u80fd\u6709\u5e8f\u5730\u7ef4\u62a4\u540c\u4e00\u7c7b\u578b\u7684\u5143\u7d20\uff0c\u4f46\u76f8\u540c\u7684\u5143\u7d20\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u7528set\u6765\u8bb0\u5f55\u4e0b\u4e4b\u524d\u51fa\u73b0\u8fc7\u7684\u6240\u6709\u8425\u4e1a\u989d\u3002\n\n\u6bcf\u6b21\u8f93\u5165\u4e00\u4e2a\u65b0\u7684\u6570x\u540e\uff0c\u901a\u8fc7lowerbound\u64cd\u4f5c\u627e\u5230set\u4e2d\u5927\u4e8e\u7b49\u4e8ex\u7684\u7b2c\u4e00\u4e2a\u6570\u3002\n\n0.\u5982\u679c\u8fd9\u662f\u7b2c\u4e00\u4e2a\u6570\uff0c\u76f4\u63a5\u63d2\u5165\u5230set\u91cc\u3002\n\n1.\u8fd9\u4e2a\u6570\u7b49\u4e8ex,\u663e\u7136\u6700\u5c0f\u6ce2\u52a8\u503c\u4e3a0\uff0c\u6211\u4eec\u4e5f\u4e0d\u9700\u8981\u518d\u63d2\u5165\u4e00\u4e2ax\u653e\u5230set\u91cc\u4e86\u3002\n\n2.\u8fd9\u4e2a\u6570\u5927\u4e8ex,\u901a\u8fc7set\u7684\u7279\u6027\u53ef\u4ee5\u5f88\u8f7b\u677e\u7684\u627e\u5230\u8fd9\u4e2a\u6570\u7684\u524d\u9a71\uff0c\u4e5f\u5c31\u662f\u5c0f\u4e8ex\u7684\u7b2c\u4e00\u4e2a\u6570\u3002\u5c06\u4e24\u4e2a\u6570\u5206\u522b\u51cf\u53bbx,\u5bf9\u7edd\u5bf9\u503c\u53d6\u4e2amin\u5c31\u597d\u4e86\u3002\u6b64\u65f6\u8981\u5c06x\u63d2\u5165\u5230set\u4e2d\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<set>\nusing namespace std;\nset<int>s;\nset<int>::iterator k,a;\nint n,x,ans=0;\nint main()\n{\n    s.insert(192608170);\n    s.insert(-192608170);\n    scanf(\"%d\",&n);\n    for(register int i=1;i<=n;++i)\n    {\n        scanf(\"%d\",&x);\n        if(s.size()==2)\n        {\n            ans+=x;\n            s.insert(x);\n        }\n        else\n        {\n            k=s.lower_bound(x);\n            if(*k!=x)\n            {\n                a=k;\n                a--;\n                ans+=min(abs(*a-x),abs(*k-x));\n                s.insert(x);\n            }\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1540086853,
        "uid": 44434,
        "name": "Okarin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "**\u9898\u610f**\n\n\u4e0d\u518d\u8d58\u8ff0\n\n**\u7b97\u6cd5**\n\n1\u3001\u6b63\u89e3\uff1a\u5404\u79cd\u9ad8\u5927\u4e0a\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f18\u70b9\u901f\u5ea6\u5feb\u3002\n\n2\u3001STL\uff08\u6211\u7b49\u849f\u84bb\u7684\u65b9\u6cd5\uff09\n\n\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e2aAi\uff0c\u4e0e\u5b83\u7edd\u5bf9\u503c\u6700\u5c0f\u7684\u4e00\u5b9a\u662f\u524di\u4e2a\u6570\u6392\u5e8f\u540e\u5728\u5b83\u524d\u9762\u6216\u540e\u9762\u7684\u6570\u3002\n\n\u4f46\u662f\u63d2\u5165\u6392\u5e8f\u592a\u6162\u3002\u3002\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u5e8f\u5217\u81ea\u7136\u60f3\u5230\u4e86set\uff0c\u56e0\u4e3a\u53ef\u80fd\u6709\u591a\u4e2a\u76f8\u540c\u7684\u8425\u4e1a\u989d\uff0c\u6240\u4ee5\u6211\u9009\u62e9\u4e86multiset\uff08\u800c\u4e14set\u7684insert\u4e0d\u652f\u6301\u8fd4\u56de\u8fed\u4ee3\u5668\uff0c\u9700\u8981\u4e8c\u5206\u67e5\u627e\uff0c\u6d6a\u8d39~~\u5b9d\u8d35\u7684~~\u65f6\u95f4\uff09\u3002\n\n\u4ee5\u4e0b\u4e3a\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<set>\nusing namespace std;\ntypedef multiset<int>::iterator iter;\n//\u5b9a\u4e49iter\u7c7b\u578b\uff0c\u514d\u53bb\u6bcf\u6b21\u6253\u4e00\u5927\u4e32\u7684\u82e6\u607c\nconst int inf=0x7fffffff;\n//\u5b9a\u4e49\u65e0\u9650\u5927\uff0c0x7fffffff\u4e3a16\u8fdb\u5236\nint n,x,ans;\nmultiset<int>s;\ninline int min(int a,int b){return a<b?a:b;}\ninline int abs(int x){return x<0?-x:x;}\nint main(){\n\ts.insert(inf);s.insert(-inf);\n    //\u63d2\u5165\u6b63\u65e0\u7a77\u548c\u8d1f\u65e0\u7a77\uff0c\u9632\u6b62\u8fed\u4ee3\u5668\u8bbf\u95ee\u5230\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u5185\u5b58\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&x);s.insert(x);ans=x;\n    //\u7b2c\u4e00\u4e2a\u5355\u72ec\u8003\u8651\n\twhile(--n){\n\t\tscanf(\"%d\",&x);\n\t\titer it=s.insert(x);\n        //\u63d2\u5165x\uff0c\u5e76\u8fd4\u56dex\u5728s\u4e2d\u7684\u4f4d\u7f6e\uff08\u8fed\u4ee3\u5668\uff09\n\t\tit--;\n\t\titer l=it;\n\t\tit++;it++;\n\t\titer r=it;\n\t\tit--;\n        //\u8fed\u4ee3\u5668\u53ea\u652f\u6301++\uff0c--\u8fd0\u7b97\u7b26\uff0c\u6240\u4ee5\u770b\u4e0a\u53bb\u5f88\u9ebb\u70e6\u3002\u3002\n        //\u5176\u5b9el\u5c31\u662f\u4e0a\u4e00\u4e2a\u6570\uff0cr\u662f\u4e0b\u4e00\u4e2a\u6570\uff08\u5728s\u4e2d\uff09\n\t\tif(*l==-inf)ans+=abs(x-*r);\n        //\u5728\u6700\u524d\u9762\n\t\tif(*r==inf)ans+=abs(x-*l);\n        //\u5728\u6700\u540e\u9762\n\t\tif(*l!=-inf&&*r!=inf)ans+=min(abs(x-*r),abs(x-*l));\n        //\u4e00\u822c\u60c5\u51b5\n\t}\n\tprintf(\"%d\",ans);\n}\n```",
        "postTime": 1518404141,
        "uid": 12832,
        "name": "sxyugao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "#[\u94fe\u63a5](https://www.luogu.org/problemnew/show/P2234)\n\n\u770b\u5230\u5e73\u8861\u6811\u7684\u6807\u7b7e\u5c31\u4e0d\u653e\u5fc3\n\n\u770b\u5230dalao\u4eec\u5404\u79cd\u725b\u903c\u7684LCT\uff0csplay\u00b7\u00b7\u00b7\n\n\u8fd8\u662f\u79bb\u7ebf\u6253\u94fe\u8868\u5427\n\n\u9996\u5148\u6392\u5e8f\uff0c\u7136\u540e\u63d2\u5165\u94fe\u8868\n\nr[i]\u8868\u793a\u539f\u6765\u7684a[i]\u5728\u94fe\u8868\u4e2d\u7684\u4f4d\u7f6e\n\n\u5012\u5e8f\u5904\u7406\uff0c\u628ar[i]\u7684ans\u8d21\u732e\u7b97\u51fa\u6765\uff0c\u7136\u540e\u5220\u9664r[i]\u6307\u5411\u7684\u4f4d\u7f6e\n\n\u4e3a\u4ec0\u4e48\u8fd9\u6837\u53ef\u884c\u5462\uff1f\n```\n\u56e0\u4e3a\u662f\u79bb\u7ebf+\u6392\u5e8f\uff0c\u6240\u4ee5\u6bcf\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u5df2\u77e5\u7684\n\u5012\u5e8f\u5904\u7406\u65f6\uff0c\u5bf9\u4e8e\u6bcf\u4e2aa[i]\uff0c\u94fe\u8868\u5c31\u662f\u524di\u4e2a\u5143\u7d20\u7ec4\u6210\u7684\n\u6240\u4ee5\u4e0d\u7528\u6211\u8bf4\u4e86\u5427~~\n```\n\u590d\u6742\u5ea6O(NlogN)\uff0c\u5b9e\u6d4b68ms\n```cpp\n#pragma GCC optimize(2)//O(2)\u4f18\u5316\uff0c\u53c2\u52a0NOIp\u65f6\u522b\u7528\n#include<algorithm>\n#include<cmath>\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nstruct node\n{\tint pre,next;\n\t#define l(x) b[b[x].pre]\n\t#define r(x) b[b[x].next]\n}b[32768];\nstruct data{int d,rank;}a[32768];\nint r[32768],n,ans;\nbool cmp(const data &x,const data &y){return x.d<y.d||(x.d==y.d&&x.rank<y.rank);}\ninline void del(int x)\n{r(x).pre=b[x].pre;l(x).next=b[x].next;}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\tscanf(\"%d\",&a[i].d),a[i].rank=i;\n\tsort(a+1,a+n+1,cmp);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tr[a[i].rank]=i;\n\t\tif(i!=n)b[i].next=i+1;\n\t\tb[i].pre=i-1;\n\t}\n\tfor(int i=n,x,j,k;i;i--,j=0,k=0)\n\t{\n\t\tx=r[i];\n\t\tif(b[x].pre)j=abs(a[b[x].pre].d-a[x].d);else j=2147483647/3;\n\t\tif(b[x].next)k=abs(a[b[x].next].d-a[x].d);else k=2147483647/3;\n\t\tif(i!=1)ans+=min(j,k);else ans+=a[x].d;\n\t\tdel(x);r[i]=0;\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\u8c22\u8c22\u4f60\u4eec\u770b\u5230\u6700\u540e~~~",
        "postTime": 1532420984,
        "uid": 84836,
        "name": "a999999",
        "ccfLevel": 6,
        "title": "P2234 [HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u9898\u89e3"
    },
    {
        "content": "# Treap\u9898\u89e3\n\u770b\u4e86\u597d\u51e0\u7bc7\u9898\u89e3\u90fd\u6ca1\u6709\u7528Treap\u505a\u7684\uff0c\u4e8e\u662f\u6765\u5206\u4eab\u4e00\u4e0b\u6211\u7684Treap\u6253\u6cd5\u53ed\n\n\u8fd9\u4e2a\u9898\u4f3c\u4e4e\u662f\u4e2a\u5e73\u8861\u6811\u677f\u5b50\u7684\u4e9a\u5b50\uff0c\u4f46\u662f\u4f3c\u4e4e\u5f88\u591a\u4eba\u90fd\u662f\u7528\u4e86\u5176\u4ed6\u7684\u5927\u4f6c\u7b97\u6cd5\uff0c\u6570\u636e\u597d\u50cf\u4e5f\u6c34\u7684\u4e00\u6279\uff0c\u4f46\u662f\u5982\u679c\u662f\u4f5c\u4e3a\u5e73\u8861\u6811\u7684\u6a21\u677f\u6765\u7ec3\u7ec3\u624b\u7684\u8bdd\u662f\u6bd4\u8f83\u5408\u9002\u7684\u9009\u62e9\u3002\n\n\u6211\u8fd9\u91cc\u4ecb\u7ecd\u7684\u662fTreap\u7684\u505a\u6cd5\uff0c\u7528\u8d77\u6765\u8fd8\u662f\u6bd4\u8f83\u65b9\u4fbf\u7684\uff0c\u6bd5\u7adf\u53ea\u9700\u8981\u63d2\u5165\u548c\u67e5\u8be2\u3002\n\n\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u663e\u7136\u662f\u8981\u7ef4\u62a4\u4e24\u4e2a\u503c\uff1a\u6bd4\u5f53\u524dx\u5c0f\u7684\u6700\u5927\u503c\uff0c\u6bd4\u5f53\u5148x\u5927\u7684\u6700\u5c0f\u503c\u3002\n\n\u6211\u4eec\u5148\u628a\u7b2c\u4e00\u4e2a\u6570\u76f4\u63a5\u63d2\u5165\uff0c\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u6570\u7684\u6700\u5c0f\u6ce2\u52a8\u503c\u4e00\u5b9a\u662f\u81ea\u5df1\u3002\u7136\u540e\u628a\u4e4b\u540e\u7684\u6bcf\u4e2a\u6570\u67e5\u8be2\u4e24\u6b21\uff0c\u5206\u522b\u627e\u5230\u6211\u4eec\u8981\u7ef4\u62a4\u7684\u4e24\u4e2a\u503c\uff0c\u627e\u5230\u6700\u5c0f\u6ce2\u52a8\u503c\n\n```cpp\n\t\tminx=query_las(x);\n\t\tmaxx=query_net(x);\n\t\txx=min(x-minx,maxx-x);\n\t\tans+=xx;\n```\n\n\u6709\u4e00\u70b9\u8981\u6ce8\u610f\uff0c\u6211\u4eec\u5728\u67e5\u8be2\u662f\u5148\u628a\u8981\u627e\u7684\u53d8\u91cf\u8d4b\u6210\u4e00\u4e2a\u6781\u503c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5728\u627e\u4e0d\u5230\u7684\u60c5\u51b5\u4e0b\u8fd4\u56de\u4e00\u4e2a\u7edd\u5bf9\u4e0d\u4f1a\u9009\u7684\u503c\n\n\u56e0\u4e3a\u6211\u4eec\u53ea\u8981\u67e5\u8be2\u548c\u63d2\u5165\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u7528\u7ef4\u62a4\u5b50\u6811\u5927\u5c0fsize\uff0c\u6240\u4ee5\u4ee3\u7801\u6253\u8d77\u6765\u4f1a\u65b9\u4fbf\u5f88\u591a\n\n\u6709\u5173\u4e8e\u5e73\u8861\u6811\u7684\u66f4\u591a\u64cd\u4f5c\uff0c\u53ef\u4ee5\u505a\u4e00\u505a[\u3010\u6a21\u677f\u3011\u666e\u901a\u5e73\u8861\u6811](https://www.luogu.com.cn/problem/P3369)\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=50005;\nconst int INF=1e7+10;\nint ans=0,x;\nint n,root,tot,val[N],a[N][2],ran[N],cnt[N];\n\nint add(int v) //\u52a0\u5165\u65b0\u7684\u6570 \n{\n\ttot++;\n\tval[tot]=v;//\u6743\u503c \n\tran[tot]=rand();//\u968f\u673a\u7684\u4f18\u5148\u7ea7 \n\tcnt[tot]=1; //cnt\u4ee3\u8868\u5f53\u5148\u6570\u503c\u4e3ax\u7684\u503c\u7684\u4e2a\u6570 \n\treturn tot;\n}\n\nvoid build(int v) //\u770b\u4f3c\u6ca1\u4ec0\u4e48\u7528\u7684\u9884\u5904\u7406 \n{\n\troot=add(v);\n}\n\nvoid rotate(int &k,int v) //\u65cb\u8f6c\u64cd\u4f5c\uff0ck\u4ee3\u8868\u6811\u6839\uff0cv=0\u662f\u5de6\u65cb\uff0cv=1\u662f\u53f3\u65cb \n{\n\tint t=a[k][!v];\n\ta[k][!v]=a[t][v];\n\ta[t][v]=k;\n\tk=t;\n}\n\nvoid insert(int &k,int v) //\u63d2\u5165\u64cd\u4f5c\uff0ck\u4e3a\u6811\u6839\uff0cv\u4e3a\u8981\u63d2\u5165\u7684\u503c \n{\n\tif(!k) \n\t{\n\t\tk=add(v); //\u5982\u679c\u627e\u4e0d\u5230\u4e86\u5c31\u5efa\u65b0\u7684\u70b9 \n\t\treturn;\n\t}\n\tif(v==val[k]) cnt[k]++; \n\telse\n\t{\n\t\tint d=v<val[k]?0:1; //\u627e\u5230\u8981\u627e\u7684\u65b9\u5411 \n\t\tinsert(a[k][d],v);\n\t\tif(ran[k]>ran[a[k][d]]) rotate(k,!d); //\u5982\u679c\u4f18\u5148\u7ea7\u66f4\u5c0f\u7684\u8bdd\u65cb\u8f6c\uff08\u6ce8\u610f\u662f\u53cd\u65b9\u5411\u7684\uff09 \n\t}\n}\n\nint query_las(int v) //\u67e5\u8be2\u6bd4x\u5c0f\u7684 \n{\n\tint k=root,last=-INF; // \u5982\u679c\u627e\u4e0d\u5230\u5c31\u8fd4\u56de\u4e00\u4e2a\u6781\u5c0f\u503c\uff08\u5c31\u662f\u4e00\u5b9a\u4e0d\u4f1a\u9009\u7684\u503c\uff09 \n\twhile(k)\n\t{\n\t\tif(val[k]<=v) last=val[k],k=a[k][1]; \n\t\telse k=a[k][0];\n\t}\n\treturn last;\n}\n\nint query_net(int v) // \u67e5\u8be2\u6bd4x\u5927\u7684 \n{\n\tint k=root,net=INF; //\u540c\u4e0a \n\twhile(k)\n\t{\n\t\tif(val[k]>=v) net=val[k],k=a[k][0];\n\t\telse k=a[k][1];\n\t}\n\treturn net;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&x);\n\tbuild(x);\n\tans+=x;\n\tfor(int i=2,minx,maxx,xx;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tminx=query_las(x);\n\t\tmaxx=query_net(x);\n\t\txx=min(x-minx,maxx-x);\n\t\tans+=xx;\n\t\tinsert(root,x);\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n} \n//\u6ca1\u8fbd \n```\n\n",
        "postTime": 1575441598,
        "uid": 117885,
        "name": "chen_vvv",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "\u8bdd\u8bf4\u8fd9\u53ef\u4ee5\u7528\u53cc\u5411\u94fe\u8868\u505a\n\n\u52a0\u5165\u70b9\u53ef\u4ee5\u7528\u53cd\u5411\u5220\u9664\u70b9\u6765\u5904\u7406\n\n\u5220\u9664\u70b9\u53ea\u8981\u5c06\u6307\u5411\u4ed6\u7684ne[]\u548cpre[]\uff08\u5373\u524d\u9a71\u548c\u540e\u9a71\u66f4\u6539\uff09\n\n\u4ee5\u4e0b\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<climits>\nusing namespace std;\nint n,ne[200001],ne1[200001],ys[200001],an;\nstruct gjh\n{\n   int v,w;\n}mp[200001];\nbool cmp(gjh a,gjh b){return a.v<b.v;}\nint main()\n{\n   scanf(\"%d\",&n);\n   for(int i=1;i<=n;i++)scanf(\"%d\",&mp[i].v),mp[i].w=i,ne[i]=(i==n)?0:i+1,ne1[i]=(i==1)?0:i-1;\n   an+=mp[1].v;\n   sort(mp+1,mp+n+1,cmp);\n   for(int i=1;i<=n;i++)ys[mp[i].w]=i;\n   for(int i=n;i>=1;i--)\n   {\n        int ans=INT_MAX;\n        if(ne[ys[i]]!=0)ans=min(ans,abs(mp[ne[ys[i]]].v-mp[ys[i]].v));\n        if(ne1[ys[i]]!=0)ans=min(ans,abs(mp[ne1[ys[i]]].v-mp[ys[i]].v));\n        if(ans==INT_MAX)ans=0;\n        an+=ans,ne1[ne[ys[i]]]=ne1[ys[i]],ne[ne1[ys[i]]]=ne[ys[i]];\n   }\n   printf(\"%d\",an);\n   return 0;\n}\n```",
        "postTime": 1478914747,
        "uid": 11413,
        "name": "Sky_star",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "### \u770b\u89c1\u6ca1\u6709\u7528vector\u7684\u8d76\u7d27\u6765\u6c34\u4e00\u7bc7\uff08\u96fe\uff09\n\n**\u6b63\u6587\uff1a**\n\n\u89e3\u9898\u601d\u8def\uff1a\n\n1. \u5f53\u524d\u6ce2\u52a8\u503c\u4e0e\u524d\u9762\u6709\u5173\uff0c\u8003\u8651\u67e5\u627e\u5230\u4e0e\u5f53\u524dx,abs(y-x)_min\n\n2. \u60f3\u5230\u4e8c\u5206\u67e5\u627e\uff08\u6216\u8005dalao\u8003\u8651\u5230:\u6811\u4e0a\u7684\u524d\u9a71\u548c\u540e\u7ee7\uff09,\u90a3\u4e48\u5fc5\u7136\u8981\u4f7f\u5176 **\u6709\u5e8f**\n\n3. \u7b97\u6cd5\uff1a\n\n\tFirst:\u6392\u5e8f\u66b4\u529b\uff08\u867d\u7136\u6211\u6ca1\u8003\u8651\uff0c\u56e0\u4e3a\u89c9\u5f97\u8fc7\u4e0d\u4e86\uff0cbut\u7b2c\u4e00\u7bc7\u9898\u89e3...\uff09\n\n    Second\uff1a\u5e73\u8861\u6811\uff1aSplay\uff08\u6211\u5e73\u8861\u6811\u53ea\u4f1aSplay\uff0cQAQ\uff0c\u592a\u849f\u84bb\u4e86\uff09,\u53d1\u73b0\u6ca1\u6709\u533a\u95f4\u7ffb\u8f6c\uff0c\u6570\u636e\u4e5f\u4e0d\u5927\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8981\u624b\u6253\uff1f\uff08\u61d2\uff09\n\n    Third\uff1a\u65e2\u7136\u5df2\u60f3\u5230Second\uff0c\u4e8e\u662f\uff1a**STL**\u5927\u6cd5\u597d\uff0c\u90a3\u5c31**vector**\u89e3\u51b3\u5427\uff0cqwq\n\nPS:\u5177\u4f53\u8bb2\u89e3\u5728\u4ee3\u7801\u4e2d\uff0824\u884c\u641e\u5b9a\uff09\u3002\n\n**\u524d\u7f6e\u59ff\u52bf:**\n\nlower_bound:\u8fd4\u56de\u5728\u67d0\u6bb5\u533a\u95f4\u4e2d\uff1a>=x\u7684\u7b2c\u4e00\u4e2a\u6570\u7684\u5730\u5740\n\nupper_bound:\u8fd4\u56de\u5728\u67d0\u6bb5\u533a\u95f4\u4e2d\uff1a> x\u7684\u7b2c\u4e00\u4e2a\u6570\u7684\u5730\u5740\n\n**Code:**\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define il inline\n#define qwq s.begin(),s.end(),x//\u61d2\u4eba\u5927\u6cd5\u597d\n#define upp upper_bound\n#define low lower_bound\nint sum,n,x;\nvector<int>s;\nvector<int>::iterator it;//\u8fed\u4ee3\u5668\uff0c\u63d2\u5165\u521d\u59cb\u8fb9\u754c\u7528\nint main(){\n\tscanf(\"%d\",&n);\n\ts.insert(it,-INT_MAX);//\u8fb9\u754c:\u8d1f\u6781\u5927\u503c\u7684\u539f\u56e0\u662f\u8425\u4e1a\u989dx\u53ef\u80fd\u4e3a-\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",&x);\n\t\tif(i==1) sum+=x;//\u7b2c\u4e00\u5929\n\t\telse{\n\t\t\tint a=*--low(qwq),b=*low(qwq);//\u524d\u9a71\u4e0e\u540e\u7ee7\uff08\u5047\uff1a\u4e5f\u6709\u53ef\u80fd\u662fx\u672c\u8eab\uff09\n\t\t\tif(a==-INT_MAX) sum+=abs(b-x);//\u4e0d\u8981\u628a\u8fb9\u754c\u52a0\u8fdb\u6765\u4e86\n\t\t\telse sum+=min(abs(a-x),abs(b-x));//\u6700\u5c0f\u6ce2\u52a8\u503c\n\t\t}\n\t\ts.insert(upp(qwq),x);//\u5411\u672b\u5c3e\u5904\u76f4\u63a5\u6709\u5e8f\u63d2\u5165\u5f53\u524d\u503c\n\t}\n\tprintf(\"%d\",sum);\n}\n```\nrp++",
        "postTime": 1565618425,
        "uid": 109381,
        "name": "Mosher",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "\u6b63\u597d\u5728\u5b66Splay\uff0c\u5c31\u62ffSplay\u6765\u5199\u5427\n\n\u9898\u76ee\u5c31\u662f\u8981\u6c42\u9664\u7b2c\u4e00\u4e2a\u6570\u4e4b\u5916\u8f93\u5165\u6570\u636e\u7684\u524d\u9a71\uff08\u6bd4\u5b83\u5c0f\u7684\u6570\u4e4b\u6700\u5927\u503c\uff09\u548c\u540e\u7ee7\uff08\u6bd4\u5b83\u5c0f\u7684\u6570\u4e4b\u6700\u5c0f\u503c\uff09\n\n\u800c\u627e\u6839\u7684\u524d\u9a71\u548c\u540e\u7ee7\u53ea\u9700\u8981\u5728\u5efa\u5b8c\u4e00\u9897\u4e8c\u53c9\u6392\u5e8f\u6811\u4e4b\u540e\uff0c\u627e\u5de6\u5b50\u6811\u4e2d\u6700\u53f3\u548c\u53f3\u5b50\u6811\u4e2d\u6700\u5de6\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\u800c\u8a00\uff0c\u6839\u8282\u70b9\u9700\u8981\u66f4\u65b0\n\n\u90a3\u4e48\u6211\u4eec\u6b63\u597d\u5c31\u7528Splay\u6765\u66f4\u65b0\u6811\n\n\u6ce8\u91ca\u771f\u7684\u5199\u7684\u5f88\u5168\u9762\u4e86\u8fd8\u6709\u4ec0\u4e48\u4e0d\u61c2\u76f4\u63a5\u770b\u4ee3\u7801\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstruct node{\n    int fa,ld,rd,data; //\u5206\u522b\u5b58\u7236\u8282\u70b9\uff0c\u5de6\u5b69\u5b50\uff0c\u53f3\u5b69\u5b50\uff0c\u503c \n}tree[33000];\nint n,ans,root,flag;\nvoid rightx(int x) //\u53f3\u65cb \n{\n    int y=tree[x].fa;\n    int z=tree[y].fa;\n    tree[y].ld=tree[x].rd;\n    if(tree[x].rd) tree[tree[x].rd].fa=y;\n    tree[x].fa=z;\n    if(z)\n    {\n        if(tree[z].ld==y)\n        tree[z].ld=x;\n        else tree[z].rd=x;\n    } \n    tree[x].rd=y;\n    tree[y].fa=x;\n}\nvoid leftx(int x) //\u5de6\u65cb \n{\n    int y=tree[x].fa;\n    int z=tree[y].fa;\n    tree[y].rd=tree[x].ld;\n    if(tree[x].ld) tree[tree[x].ld].fa=y;\n    tree[x].fa=z;\n    if(z)\n    {\n        if(tree[z].ld==y)\n        tree[z].ld=x;\n        else tree[z].rd=x;\n    }\n    tree[x].ld=y;\n    tree[y].fa=x;\n}\nint aabs(int x)\n{\n    return x>0?x:-x;\n}//\u81ea\u5df1\u5199\u7684\u7edd\u5bf9\u503c\uff0c\u4e0d\u559c\u6b22\u7528cmath \nvoid splay(int x)\n{\n    while(tree[x].fa) //\u4e00\u76f4\u628ax\u65cb\u8f6c\u5230\u6839\u8282\u70b9 \n    {\n        int y=tree[x].fa; //y\u662fx\u7684\u7236\u8282\u70b9 \n        int z=tree[y].fa; //z\u662fy\u7684\u7236\u8282\u70b9 \n        if(!z)            //\u5982\u679cy\u662f\u6839\u7684\u8bdd \n        {\n            if(tree[y].ld==x) rightx(x); //\u5de6\u5b69\u5b50\u5c31\u53f3\u65cb \n            else leftx(x);               //\u53f3\u5b69\u5b50\u5c31\u5de6\u65cb \n        }\n        else\n        {\n            if(tree[y].ld==x&&tree[z].ld==y) //\u5982\u679c\u662f / \u8fd9\u79cd\u60c5\u51b5 \n            rightx(y),rightx(x);\n            \n            if(tree[y].rd==x&&tree[z].rd==y) //\u5982\u679c\u662f \\ \u8fd9\u79cd\u60c5\u51b5 \n            leftx(y),leftx(x);\n            //\u5982\u679c\u662f\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\u5148\u65cb\u8f6c\u7236\u8282\u70b9\u518d\u65cb\u8f6c\u5b50\u8282\u70b9 \n            if(tree[y].rd==x&&tree[z].ld==y) //\u5982\u679c\u662f < \u8fd9\u79cd\u60c5\u51b5 \n            leftx(x),rightx(x);\n            \n            if(tree[y].ld==x&&tree[z].rd==y) //\u5982\u679c\u662f > \u8fd9\u79cd\u60c5\u51b5 \n            rightx(x),leftx(x);\n            //\u5982\u679c\u662f\u4e00\u6761\u6298\u7ebf\u4e0a\u53ea\u9700\u8981\u65cb\u8f6c\u5b50\u8282\u70b9 \n        }\n    }\n    root=x; //\u66f4\u65b0\u6839\u8282\u70b9 \n}\nvoid BST(int x,int rt) //\u5efa\u7acb\u4e8c\u53c9\u67e5\u627e\u6811 \n{\n    if(tree[x].data==tree[rt].data) \n    //\u76f8\u540c\u7684\u6570\u53ea\u9700\u8981\u66f4\u65b0\u6839\u8282\u70b9\u6ca1\u5fc5\u8981\u52a0\u5165\u5230\u6811\u91cc\u53bb\n    //\u56e0\u4e3a\u76f8\u540c\u7684\u6570\u6709\u4e00\u4e2a\u5c31\u591f\u4e86 \n    {\n        splay(rt);\n        flag=1;\n        return;\n    } //\u53ef\u4ee5\u4e0d\u8981\uff0c\u53ea\u662f\u4e3a\u4e86\u7b80\u5316\u65f6\u95f4\u590d\u6742\u5ea6 \n    if(tree[x].data<tree[rt].data)\n    {\n        if(tree[rt].ld==0)\n        {\n            tree[rt].ld=x;\n            tree[x].fa=rt;\n        }\n        else BST(x,tree[rt].ld);\n    }\n    else\n    {\n        if(tree[rt].rd==0)\n        {\n            tree[rt].rd=x;\n            tree[x].fa=rt;\n        }\n        else BST(x,tree[rt].rd);\n    }\n}\nint fro(int x) //\u627e\u524d\u9a71 \n{\n    int y=tree[x].ld;\n    if(!y) return y;\n    while(tree[y].rd)\n    y=tree[y].rd;\n    return y;\n}\nint beh(int x) //\u627e\u540e\u7ee7 \n{\n    int y=tree[x].rd;\n    if(!y) return y;\n    while(tree[y].ld)\n    y=tree[y].ld;\n    return y;\n}\nvoid insert(int x) //\u8f93\u5165 \n{\n    flag=0;\n    BST(x,root);  //\u5efa\u7acb\u4e8c\u53c9\u67e5\u627e\u6811 \n    if(flag==1) return; //\u5982\u679c\u5b83\u6709\u76f8\u540c\u6ca1\u5fc5\u8981\u8ba1\u7b97 \n    splay(x);\n    \n    int q=fro(x),h=beh(x),minn=0x7fffffff;\n    if(q) minn=min(minn,aabs(tree[x].data-tree[q].data));\n    if(h) minn=min(minn,aabs(tree[x].data-tree[h].data));\n    \n    ans+=minn;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&tree[1].data);\n    root=1;ans+=tree[1].data;\n    for(int i=2;i<=n;i++)\n    {\n        scanf(\"%d\",&tree[i].data);\n        insert(i);\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1503202140,
        "uid": 33963,
        "name": "\u6a80\u9ece\u6597\u00b7\u795e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "\u4ec0\u4e48\uff0c\u4e0d\u4f1asplay\uff0c\u4e0d\u4f1a\u6570\u636e\u7ed3\u6784\u3002\u3002\u7528\u6211\u4eec\u849f\u84bb\u7684\u65b9\u6cd5\u5427\uff01\nset\u5927\u6cd5\u597d\uff01\n* insert(x)\n\u81ea\u52a8\u63d2\u5165\u6392\u5e8f\uff0c\u65f6\u95f4O(logN)\n* lower_bound(x)\nlogN\u7684\u67e5\u627e\u79bbx\u6700\u63a5\u8fd1\u4e14\u5927\u4e8ex\u7684\u6570\n\n\u4ee5\u4e0a\u8db3\u4ee5\uff01\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <set>\nusing namespace std;\nset<int> s;\nint n,a;\nint main()\n{\n\tscanf(\"%d\",&n);scanf(\"%d\",&a);s.insert(a);\n\tint ans=a;\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tset<int>::iterator r=s.lower_bound(a);\n\t\tif(r==s.end()){ans+=abs(a-*(--r));s.insert(a);continue;}\n\t\tset<int>::iterator l;\n\t\tif(r!=s.begin())l=--s.lower_bound(a);\n        else {ans+=abs(a-*r);s.insert(a);continue;}\n\t\tans+=min(abs(a-*l),abs(a-*r));\n\t\ts.insert(a);\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n\n```\n\u601d\u8def\u663e\u800c\u6613\u89c1\u5c31\u4e0d\u8bf4\u4e86\u5427\uff0c\u4e3b\u8981\u662f\u6570\u636e\u7ed3\u6784\u90a3\u5757\u53ef\u4ee5\u5077\u61d2\u5230\u539f\u5730\u7206\u70b8\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(nlog^2(n))  \u5427\n\n#### \u6e29\u99a8\u63d0\u793a\uff0c\u8fd9\u91cc\u8981\u7528set\u7684lower_bound\uff0c\u4e0d\u53ef\u4ee5\u7528\u6cdb\u578b\u51fd\u6570\u7684\nlower_bound\n\n\u5373 \u4e0d\u8981\u8fd9\u4e48\u5199\n```cpp\nlower_bound(s+1,s+n+1,x);\n```\n\u7531\u4e8eset\u7ed3\u6784\u7684\u539f\u56e0\uff0c\u8fd9\u6837\u4f1a\u6bd4\u81ea\u5e26\u7684\u6162\u5f88\u591a\n\n\n\u6069\uff0c25\u884c\u54c8\u54c8\uff0c\u4e3a\u4e86\u538b\u884c\u5199\u7684\u597d\u4e71233.\u3002\u6211\u76f8\u4fe1\u4f60\u4eec\u80af\u5b9a\u6709\u66f4\u77ed\u66f4\u7b80\u6d01\u7684\u4ee3\u7801\u3002\n\n\u9898\u5916\u8bdd\uff0c\u4e00\u4e2a[\u795e\u5947\u7684\u7f51\u7ad9](http://jvruo.com)\u53ef\u4ee5\u4e86\u89e3\u4e00\u4e0b",
        "postTime": 1532677816,
        "uid": 31454,
        "name": "\u5361\u8f66cckk",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u4e2a\u4e3a\u7ebf\u6bb5\u6811\u505a\u6cd5\u7b2c\u4e8c\u4e2a\u4e3a\u5e73\u8861\u6811\u505a\u6cd5 \n\nONE\n\n\u8bbe\u6bcf\u5929\u7684\u8425\u4e1a\u989d\u5728\u7ebf\u6bb5\u6811\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\u4e3a\u4ed6\u672c\u8eab\u7684\u503c\n\n\u7136\u540e\u6bcf\u6b21\u8f93\u5165\u4e00\u4e2a\u6570\u65f6\u6211\u4eec\u5148\u5728\u8fd9\u4e2a\u6570\u7684\u5de6\u8fb9\u7684\u533a\u95f4\u67e5\u627e\u6700\u5927\u503c\n\n\u518d\u5728\u53f3\u8fb9\u7684\u533a\u95f4\u67e5\u627e\u6700\u5c0f\u503c\n\n\uff08\u8fd9\u610f\u5473\u7740\u6211\u4eec\u8981\u627e\u6bd4\u8fd9\u4e2a\u6570\u5c0f\u7684\u6700\u5927\u503c\u548c\u6bd4\u8fd9\u4e2a\u6570\u5927\u7684\u6700\u5c0f\u503c\uff09\n\n\u7136\u540e\u6bd4\u8f83\u4e24\u8005\u53d6\u5dee\u7684\u7edd\u5bf9\u503c\u6700\u5c0f\u7684\u52a0\u5230Ans\u91cc\u5373\u53ef\u3002\n\nTWO\n\u8fd1\u4e4eSplay\u88f8\u9898\u4e86\u2026\u2026\n\n\u4e00\u5929\u5929\u63d2\u5165\u6570\u5b57\uff0c\u7136\u540e\u67e5\u8be2\u524d\u9a71\u548c\u540e\u7ee7\u7d2f\u52a0\u6700\u5c0f\u503c\u5c31\u597d\u4e86 \n\n\u6ce8\u610f\u82e5\u5f53\u524d\u5929\u8425\u4e1a\u989d\u5728\u4e4b\u524d\u51fa\u73b0\u8fc7\u65f6\uff08\u5373\u4e3aCnt>1\uff09\u5c31\u4e0d\u7528\u7d2f\u52a0\u4e86 \n\n[\u4ee3\u7801\u6233\u8fd9\u91cc](http://www.cnblogs.com/refun/p/8682214.html)",
        "postTime": 1522676574,
        "uid": 41890,
        "name": "Refun",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "## 0 \u524d\u8a00\n\n\u5e73\u8861\u6811\u56fa\u7136\u53ef\u4ee5\u5199\u3002\u7136\u800c~~\u81ea\u5e26\u5927\u5e38\u6570\u7684~~\u6743\u503c\u7ebf\u6bb5\u6811\u4e5f\u53ef\u4ee5\uff0c\u4e2a\u4eba\u611f\u89c9\u6bd4\u5e73\u8861\u6811\u597d\u5199\u3002\n\n## 1 \u601d\u8def\n\n\u9996\u5148\u8fd8\u662f\u8bfb\u8fdb\u6765\u6570\u636e\uff0c\u7136\u540e\u6743\u503c\u7ebf\u6bb5\u6811\u57fa\u672c\u64cd\u4f5c\u2014\u2014**\u6392\u5e8f\u3001\u79bb\u6563\u5316**\u3002\uff08\u5f88\u9057\u61be\u53ea\u80fd**\u79bb\u7ebf**\uff09\n\n\u8bbe$a[i]$\u4e3a\u7b2c$i$\u5929\u7684**\u8425\u4e1a\u989d**\uff0c$b[i]$\u4e3a$a[i]$**\u79bb\u6563\u5316\u4e4b\u540e\u7684\u5bf9\u5e94\u503c**\u3002\n\n\u9898\u76ee\u8bf4\u7b2c$1$\u5929\u7684\u6700\u5c0f\u6ce2\u52a8\u503c\u5373\u4e3a$a[1]$\u3002\u5219$ans$\u521d\u59cb\u503c\u4e3a$a[1]$\uff0c\u7136\u540e\u5c06$b[1]$\u63d2\u5165\u5230\u6743\u503c\u7ebf\u6bb5\u6811\u4e2d\u3002\n\n\u5bf9\u4e8e\u7b2c$i(2\\leq i \\leq n)$\u5929\uff0c\u5148\u5c06$b[i]$\u63d2\u5165\u81f3\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u67e5\u8be2\u6392\u540d\u3002\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n- \u5982\u679c\u6392\u540d\u4e3a$1$\uff0c\u4e14\u5f53\u524d\u6ca1\u6709\u76f8\u7b49\u7684\u6570\uff0c\u5219\u6700\u5c0f\u6ce2\u52a8\u503c\u4e3a**\u6392\u540d\u4e3a$2$\u7684\u6570\u4e0e\u5f53\u524d\u6570\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u3002**\n\n- \u5982\u679c\u6392\u540d\u4e3a$1$\uff0c\u4e14\u5f53\u524d\u6709\u76f8\u7b49\u7684\u6570\uff0c\u5219\u6700\u5c0f\u6ce2\u52a8\u503c\u4e3a$0$\u3002\n\n- \u5982\u679c\u6392\u540d\u4e3a$i$\uff0c\u7531\u4e8e**\u4e0d\u53ef\u80fd\u6709\u76f8\u7b49\u7684\u6570**\u4e86\uff08\u5982\u679c\u6709\u91cd\u590d\u7684\u6570\uff0c\u6392\u540d\u4e0d\u4f1a\u4e3a$i$\uff09\uff0c\u5219\u6700\u5c0f\u6ce2\u52a8\u503c\u4e3a**\u6392\u540d\u4e3a$i-1$\u7684\u6570\u4e0e\u5f53\u524d\u6570\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c**\u3002\n\n- \u5426\u5219\uff0c**\u6700\u5c0f\u6ce2\u52a8\u503c\u4e3a$\\min\\{$\u6392\u540d\u4e3a\u5f53\u524d\u6570\u6392\u540d$-1$\u7684\u6570\u4e0e\u5f53\u524d\u6570\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c$,$\u6392\u540d\u4e3a\u5f53\u524d\u6570\u6392\u540d$+1$\u7684\u6570\u4e0e\u5f53\u524d\u6570\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c$)$**\u3002\n\n\u7d2f\u52a0\u6700\u5c0f\u6ce2\u52a8\u503c\uff0c\u5230\u6700\u540e\u8f93\u51fa\u5373\u53ef\u3002\n\n## 2 \u5751\u70b9\u4e0e\u7ec6\u8282\n\n\u4ee3\u7801\u53ef\u80fd\u6709\u4e00\u4e2a\u5730\u65b9\u770b\u8d77\u6765\u50cf\u662f\u9519\u7684\u3002\n\n```cpp\t\n\t\t\nif(Querysum==1&&!s[std::lower_bound(b+1,b+1+m,a[i])-b]){\n\t\t\tans+=abs(a[i]-b[GetRankByVal(1,1,m,Querysum+1)]);\n\t\t}\n\t\telse if(Querysum==i){\n\t\t\tans+=abs(a[i]-b[GetRankByVal(1,1,m,Querysum-1)]);\n\t\t}\n\t\telse {\n\t\t\tans+=std::min(abs(a[i]-b[GetRankByVal(1,1,m,Querysum-1)]),abs(a[i]-b[GetRankByVal(1,1,m,Querysum+1)]));\n\t\t}\n```\n\n\u8fd9\u91cc\u53ef\u4ee5\u53d1\u73b0\u5c11\u5224\u65ad\u4e86\u4e00\u4e2a\u60c5\u51b5\uff0c\u5c31\u662f\u601d\u8def\u4e2d\u7684**\u7b2c$2$\u79cd**\u3002\u6211\u5c06\u7b2c$2$\u79cd\u60c5\u51b5\u201c\u9519\u8bef\u201d\u7684\u5f52\u5230\u4e86\u7b2c\u56db\u7c7b\u3002\u90a3\u4e48\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\u5462\uff1f\n\n\u5f53\u524d\u6392\u540d\u4e3a$1$\uff0c\u67e5\u8be2\u6392\u540d\u4e3a$0$\u7684\u6570\uff0c\u5bfc\u81f4\u4f1a\u8fdb\u5165\u6bcf\u4e00\u4e2a\u6743\u503c\u7ebf\u6bb5\u6811\u8282\u70b9\u7684\u5de6\u513f\u5b50\uff08\u975e\u53f6\u8282\u70b9\uff09\u3002\u800c\u4e00\u76f4\u5f80\u5de6\u8d70\u5c31\u4f1a\u5230\u8fbe\u7b2c\u4e00\u4e2a\u53f6\u8282\u70b9\uff08\u5373$[1,1]$\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u67e5\u8be2\u6392\u540d\u4e3a$0$\u7684\u6570\u5b9e\u5219\u662f\u67e5\u5230\u4e86\u6392\u540d\u4e3a$1$\u7684\u6570\u554a\u3002\n\n\u5f53\u524d\u6392\u540d\u4e3a$1$\uff0c\u67e5\u8be2\u6392\u540d\u4e3a$2$\u7684\u6570\u3002\u7531\u4e8e\u6709\u76f8\u7b49\u7684\u6570\uff0c\u90a3\u4e48\u7b2c$2$\u540d\u5fc5\u5b9a\u548c\u7b2c$1$\u540d\u76f8\u7b49\uff08\u5426\u5219\u4e0d\u5b58\u5728\u76f8\u7b49\u7684\u6570\uff09\u3002\n\n## 3 \u4ee3\u7801\n\n```\n# include <bits/stdc++.h>\n# define rr register\nconst int N=40010;\nint tree[N*4];//\u6743\u503c\u7ebf\u6bb5\u6811\u6570\u7ec4\nint n,m;\nint a[N],b[N];//\u539f\u6570\u7ec4\u548c\u79bb\u6563\u5316\u6570\u7ec4\nint s[N];//\u8bb0\u5f55\u91cd\u590d\u7684\u6570\nint ans;//\u6700\u7ec8\u7b54\u6848\nint Querysum;//\u67e5\u8be2\u7ed3\u679c\ninline int read(void){//\u5feb\u8bfb\n\tint res,f=1;\n\tchar c;\n\twhile((c=getchar())<'0'||c>'9')\n\t\tif(c=='-')f=-1;\n\tres=c-48;\n\twhile((c=getchar())>='0'&&c<='9')\n\t\tres=res*10+c-48;\n\treturn res*f;\t\t\n}\ninline int lc(int x){//\u5de6\u513f\u5b50\n\treturn x<<1;\n}\ninline int rc(int x){//\u53f3\u513f\u5b50\n\treturn x<<1|1;\n}\nvoid GetValFindRank(int k,int l,int r,int v){//\u7ed9\u51fa\u503c \u627e\u6392\u540d\n\tif(l==r){\n\t\t++Querysum;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(v<=mid){//\u5728\u5de6\u5b50\u6811\n\t\tGetValFindRank(lc(k),l,mid,v);\n\t\treturn;\n\t}\n    //\u5728\u53f3\u5b50\u6811\n\tQuerysum+=tree[lc(k)];\n\tGetValFindRank(rc(k),mid+1,r,v);\n\treturn;\n}\nvoid Insert(int k,int l,int r,int v){//\u63d2\u5165\n\t++tree[k];\n\tif(l==r){\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(v<=mid){\n\t\tInsert(lc(k),l,mid,v);\t\n\t\treturn;\n\t}\t\n\tInsert(rc(k),mid+1,r,v);\n\treturn;\t\n}\nint GetRankByVal(int k,int l,int r,int x){//\u7ed9\u6392\u540d\u627e\u503c\n\tif(l==r)\n\t\treturn l;\n\tint mid=(l+r)>>1;\n\tif(x<=tree[lc(k)])\n\t\treturn GetRankByVal(lc(k),l,mid,x);\n\treturn GetRankByVal(rc(k),mid+1,r,x-tree[lc(k)]);\n}\nint main(void){\n\tn=read();\n\tfor(rr int i=1;i<=n;++i)\n\t\ta[i]=b[i]=read();\n    //\u8fdb\u884c\uff08\u4f2a\uff09\u79bb\u6563\u5316\u64cd\u4f5c    \n\tstd::sort(b+1,b+1+n);\n\tm=std::unique(b+1,b+1+n)-(b+1);\n\tans=a[1];//\u5982\u9898\u76ee\u6240\u8ff0\uff0c\u7b2c\u4e00\u5929\u7684\u6700\u5c0f\u6ce2\u52a8\u503c\u5219\u4e3a\u8425\u4e1a\u989d\n\tInsert(1,1,m,std::lower_bound(b+1,b+1+m,a[1])-b);//\u63d2\u5165\n\t++s[std::lower_bound(b+1,b+1+m,a[1])-b];//\u8bb0\u5f55\u91cd\u590d\u5143\u7d20\n\tfor(rr int i=2;i<=n;++i){\n\t\tQuerysum=0;//\u8bb0\u5f97\u6e05\u96f6\n\t\tInsert(1,1,m,std::lower_bound(b+1,b+1+m,a[i])-b);//\u63d2\u5165\n\t\tGetValFindRank(1,1,m,std::lower_bound(b+1,b+1+m,a[i])-b);//\u627e\u6392\u540d\n\t\t\n\t\tif(Querysum==1&&!s[std::lower_bound(b+1,b+1+m,a[i])-b]){\n\t\t\tans+=abs(a[i]-b[GetRankByVal(1,1,m,Querysum+1)]);\n\t\t}\n\t\telse if(Querysum==i){\n\t\t\tans+=abs(a[i]-b[GetRankByVal(1,1,m,Querysum-1)]);\n\t\t}\n\t\telse {\n\t\t\tans+=std::min(abs(a[i]-b[GetRankByVal(1,1,m,Querysum-1)]),abs(a[i]-b[GetRankByVal(1,1,m,Querysum+1)]));\n\t\t}//\u5206\u7c7b\u8ba8\u8bba\n\t\t++s[std::lower_bound(b+1,b+1+m,a[i])-b];//\u8bb0\u5f55\u91cd\u590d\u5143\u7d20\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1562236722,
        "uid": 108949,
        "name": "Meatherm",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "\u5f53\u6211\u7b2c\u4e00\u6b21\u770b\u5230\u8fd9\u9053\u9898\u7684\u6807\u7b7e\u65f6\uff0c\u6211\u88ab\u5413\u7740\u4e86\uff0c\u201c\u6982\u7387\u8bba,\u7edf\u8ba1\u201d\uff1f\u201cSplay\u201d\uff1f\u201cSBT\u201d\uff1f\u6211\u4e00\u4e2a\u90fd\u4e0d\u4f1a\u554a\uff01\n\n\u7136\u800c\u7ec6\u60f3\u4e00\u4e0b\uff0c\u4f3c\u4e4e\u4e5f\u4e0d\u662f\u90a3\u4e48\u96be\uff0c\u7528\u4e0d\u7740\u4ec0\u4e48\u9ad8\u7ea7\u7b97\u6cd5\u3001\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u3002\u3002\u3002\n\n\u4e0d\u5c31\u662f\u4e00\u4e2a\u94fe\u8868\u5417\uff1f\n\n  \u987a\u4fbf\u628a\u9898\u76ee\u8865\u5145\u5b8c\u6574\uff0c\u52a0\u4e00\u53e5\u8bdd\u201c\u8be5\u5929\u7684\u6700\u5c0f\u6ce2\u52a8\u503c=min{|\u8be5\u5929\u4ee5\u524d\u67d0\u4e00\u5929\u7684\u8425\u4e1a\u989d-\u8be5\u5929\u8425\u4e1a\u989d|}\u3002\u201d\u3002\n\u8fd9\u4e48\u60f3\uff0c\u90a3\u4e00\u5929\u7684\u6700\u5c0f\u6ce2\u52a8\u503c\u5c31\u53d6\u51b3\u4e8e\u4e0e\u5176\u503c\u6700\u63a5\u8fd1\u7684\u67d0\u5929\u8425\u4e1a\u989d\u3002sort\u8425\u4e1a\u989d\u5373\u53ef\u4e00\u6ce2\u5e26\u8d70\u3002\n\n\u7136\u540e\u4e3a\u4fdd\u8bc1\u53d6\u7684\u662f\u8be5\u5929\u4ee5\u524d\u7684\u8425\u4e1a\u989d\uff0c\u4ece\u540e\u5f80\u524d\u679a\u4e3e\u662f\u7b2c\u51e0\u5929\uff0c\u8be5\u5929\u53d6\u5b8c\u540e\u628a\u8be5\u70b9\u5220\u6389\uff0c\u628a\u524d\u540e\u8fde\u8d77\u6765\u5373\u53ef\u3002\n\n\u601d\u60f3\u7b80\u5355\uff0c\u4ee3\u7801\u7b80\u5355\uff0c\u53d8\u91cf\u5f62\u8c61\uff0c\u5c31\u4e0d\u7ed9\u6ce8\u91ca\u4e86\u3002(~~\u7b2c\u4e00\u6b21\u4ea4\u5c31\u662f\u6700\u4f18\u89e3\uff0c\u5bb3\u6015~~)\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\n#define ll long long\n#define re register\n#define il inline\n#define fp(i,a,b) for(re int i=a;i<=b;i++)\n#define fq(i,a,b) for(re int i=a;i>=b;i--)\nusing namespace std;\nconst int N=40005,inf=1e9;\nll ans=0;\nstruct fol\n{\n    int num,id;\n}s[N];\nint n,nex[N]={},pre[N]={},a[N],x;\nil bool cmp(fol x,fol y)\n{\n    return (x.num<y.num)||(x.num==y.num&&x.id<y.id);\n}\nil int min(re int x,re int y){return (x<y)?x:y;}\nil int abs(int x){return (x<0) ? -x : x;}\nil int gi()\n{\n    re int x=0;\n    re int t=1;\n    re char ch=getchar();\n    while((ch<'0'||ch>'9')&&ch!='-') ch=getchar();\n    if(ch=='-') t=-1,ch=getchar();\n    while(ch>='0'&&ch<='9') x=x*10+ch-48,ch=getchar();\n    return x*t;\n}\nint main()\n{\n    n=gi();\n    fp(i,1,n)\n    {\n        if(scanf(\"%d\",&x)==EOF) x=0;\n        a[i]=x;\n    }\n    fp(i,1,n) s[i]=(fol){a[i],i};\n    sort(s+1,s+1+n,cmp);\n    fp(i,1,n) nex[s[i].id]=s[i+1].id,pre[s[i].id]=s[i-1].id;\n    fq(i,n,2)\n    {\n        re int a1=a[nex[i]],a2=a[pre[i]];\n        if(!nex[i]) a1=inf;\n        if(!pre[i]) a2=inf;\n        ans+=min(abs(a1-a[i]),abs(a2-a[i]));\n        nex[pre[i]]=nex[i];\n        pre[nex[i]]=pre[i];\n    }\n    ans+=a[1];\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1508764641,
        "uid": 21534,
        "name": "ysner",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "\u770b\u89c1\u6ca1\u4ec0\u4e48\u4eba\u7528fhq-treap\u505a\u8fd9\u9898\uff0c\u8d76\u7d27\u6c34\u4e00\u53d1~\n\n---\n\n\u4eca\u5929\u65e9\u4e0a\u521a\u81ea\u5df1\u767e\u5ea6\u5b66\u4e86fhq-Treap\uff08\u81ea\u8ba4\u4e3a\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\uff09\uff0c\u4e8e\u662f\u81ea\u5df1\u5199\u4e86\u51e0\u9053\u9898\u3002\u3002\u3002\n\nfhq-treap\u4e0etreap\u7684\u533a\u522b\u5c31\u5728\u4e8e\u5b83\u7ef4\u62a4\u5e73\u8861\u4e0d\u7528\u4ec0\u4e48\u5de6\u65cb\u53f3\u65cb\u8f6c\u6765\u8f6c\u53bb\uff0c\u800c\u662f\u7528**\u5206\u88c2**\u548c**\u5408\u5e76**\u4e24\u4e2a\u64cd\u4f5c\u6765\u7ef4\u62a4\n\n\u800c\u8fd9\u9053\u9898\u5462\u53ea\u9700\u8981\u8bfb\u5165\u540c\u65f6\u5bf9\u6bcf\u4e2a\u8282\u70b9\u5bfb\u627e\u524d\u9a71/\u540e\u7ee7\u4e2d\u6ce2\u52a8\u503c\u6700\u5c0f\u7684\u4e00\u4e2a\uff0c\u8fd9\u663e\u7136\u662f\u5e73\u8861\u6811\u6a21\u677f ~~\uff08\u7136\u800c\u6709\u5f88\u591a\u4eba\u7528set\u79d2\u5207\u6b64\u9898\uff09~~\n\n\u5177\u4f53\u5b9e\u73b0\u89c1\u5446\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define spilt split\n#define ls(rt) T[rt].lc\n#define rs(rt) T[rt].rc\n#define rep(i,a,b) for(int i=a;i<=b;++i)\nusing namespace std;\nconst int INF=0x3f3f3f3f;\nint n,tot=0;\nstruct node{\n    int val,rnk,lc,rc,sz;\n}T[40005];\nvoid update(int rt){T[rt].sz=T[ls(rt)].sz+T[rs(rt)].sz+1;}\nint add(int val){\n    T[++tot].val=val;\n    ls(tot)=rs(tot)=0;\n    T[tot].sz=1;\n    T[tot].rnk=rand();\n    return tot;\n}\nvoid split(int rt,int &a,int &b,int val){\n    if(!rt){a=b=0;return;}\n    if(T[rt].val<=val){\n        a=rt;\n        split(rs(rt),rs(a),b,val);\n    } else {\n        b=rt;\n        split(ls(rt),a,ls(b),val);\n    }\n    update(rt);\n}\nvoid merge(int &rt,int a,int b){\n    if(a==0||b==0){\n        rt=a+b;\n        return;\n    }\n    if(T[a].rnk<T[b].rnk){\n        rt=a;\n        merge(rs(rt),rs(a),b);\n    } else {\n        rt=b;\n        merge(ls(rt),a,ls(b));\n    }\n    update(rt);\n}\nint kth(int rt,int k){\n    while(k!=T[ls(rt)].sz+1){\n        if(k<T[ls(rt)].sz+1) rt=ls(rt);\n        else{\n            k-=T[ls(rt)].sz+1;\n            rt=rs(rt);\n        }\n    }\n    return T[rt].val;\n}\nvoid insert(int &rt,int val){\n    int a=0,b=0,newnode=add(val);\n    spilt(rt,a,b,val);\n    merge(a,a,newnode);\n    merge(rt,a,b);\n}\nint pre(int &rt,int val){\n    int a=0,b=0;\n    split(rt,a,b,val);\n    int ans=kth(a,T[a].sz);\n    merge(rt,a,b);\n    return ans;\n}\nint scc(int &rt,int val){\n    int a=0,b=0;\n    split(rt,a,b,val-1);\n    int ans=kth(b,1);\n    merge(rt,a,b);\n    return ans;\n}\nint main(){\n    int root=1,ans=0;\n    srand(19260817);\n    scanf(\"%d\",&n);\n    add(INF);\n    T[root].sz=0;\n    insert(root,-INF);\n    rep(i,1,n){\n        int x;\n        scanf(\"%d\",&x);\n        if(i!=1)ans+=min(abs(x-pre(root,x)),abs(x-scc(root,x)));\n        else ans=x;\n        insert(root,x);\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1564832783,
        "uid": 76156,
        "name": "henrytb",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "(\u524d\u9762\u90a3\u904d\u4ea4\u9519\u4e86\uff0c\u597d\u5c34\u5c2c\u554a)\n\n\u8fd9\u9898\u6211\u7528\u7684\u4e5f\u662fSTL\uff0c\u4f46\u662f\u7528\u7684vector\uff0c\u6ca1\u7528set\n\n\u4e3b\u8981\u601d\u8def\u4e5f\u662f\u6bcf\u8bfb\u5165\u4e00\u4e2a\u4fbf\u7528lower\\_bound\u627e\u6bd4\u5f53\u524d\u7684\u8981\u5927\u7684\u6700\u5c0f\u7684\uff0c\u8fd9\u4e2a\u6570\u524d\u9762\u7684\u90a3\u4e2a\u5c31\u662f\u6bd4\u5b83\u5c0f\u7684\u6700\u5927\u7684\uff0c\u4e24\u8005\u8ba1\u7b97\u53d6\u6700\u5c0f\u5373\u53ef\n\n\u7136\u540e\u5148\u628a\u524d2\u4e2a\u653e\u8fdb\u53bb\u4f1a\u597d\u5199\u4e00\u4e9b\uff0c\u518d\u7279\u5224\u4e00\u4e9b\u60c5\u51b5\u5c31\u884c\u4e86\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#define For(i,j,k) for(int i=j;i<=k;i++)\nusing namespace std;\nint read(){//\u5feb\u8bfb\n    int l=1,x=0; char ch=getchar();\n    while((ch<'0'||ch>'9')&&ch!='-') ch=getchar();\n    if (ch=='-') ch=getchar(),l=-1;\n    while(ch>='0'&&ch<='9') x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    return x*l;\n}\nvector<int> vec;\nint main(){\n    int n=read(),ans,x,y;\n    x=read(),y=read(); ans=x; if (x>y) swap(x,y);\n    vec.push_back(x); vec.push_back(y); ans+=y-x; //\u5148\u653e\u524d2\u4e2a\n    For(i,2,n-1){\n        x=read(); y=lower_bound(vec.begin(),vec.end(),x)-vec.begin(); //\u627e\u6bd4\u5f53\u524d\u7684\u8981\u5927\u7684\u6700\u5c0f\u7684\n        if (y==0) ans+=abs(x-vec[y]); //\u7279\u5224\u5982\u679c\u7b2c\u4e00\u4e2a\u5c31\u6bd4\u5f53\u524d\u5927\n        else if (y==i) ans+=x-vec[y-1]; //\u7279\u5224\u5f53\u524d\u6570\u5927\u4e8e\u5df2\u6709\u7684\u6240\u6709\u6570\n        else ans+=min(abs(x-vec[y-1]),abs(x-vec[y])); \n        vec.insert(vec.begin()+y,x);//\u628a\u5f53\u524d\u4e22\u5230\u6bd4\u5f53\u524d\u7684\u8981\u5927\u7684\u6700\u5c0f\u7684\u90a3\u4e2a\u6570\u524d\u9762\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1501511684,
        "uid": 20821,
        "name": "wjy666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "\u7531\u4e8e\u8fd9\u91cc\u6ca1\u6709P\u7684\u6a21\u677f\uff0c\u6211\u5c31\u53d1\u4e00\u4e2a\u4e0a\u6765\n\n\u4f38\u5c55\u6811\uff0c\u6216\u8005\u53eb\u81ea\u9002\u5e94\u67e5\u627e\u6811\uff0c\u662f\u4e00\u79cd\u7528\u4e8e\u4fdd\u5b58\u6709\u5e8f\u96c6\u5408\u7684\u7b80\u5355\u9ad8\u6548\u7684\u6570\u636e\u7ed3\u6784\u3002\u4f38\u5c55\u6811\u5b9e\u8d28\u4e0a\u662f\u4e00\u4e2a\u4e8c\u53c9\u67e5\u627e\u6811\u3002\u5141\u8bb8\u67e5\u627e\uff0c\u63d2\u5165\uff0c\u5220\u9664\uff0c\u5220\u9664\u6700\u5c0f\uff0c\u5220\u9664\u6700\u5927\uff0c\u5206\u5272\uff0c\u5408\u5e76\u7b49\u8bb8\u591a\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(logN)\u3002\u7531\u4e8e\u4f38\u5c55\u6811\u53ef\u4ee5\u9002\u5e94\u9700\u6c42\u5e8f\u5217\uff0c\u56e0\u6b64\u4ed6\u4eec\u7684\u6027\u80fd\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u66f4\u4f18\u79c0\u3002\n\n\u4f38\u5c55\u6811\u652f\u6301\u6240\u6709\u7684\u4e8c\u53c9\u6811\u64cd\u4f5c\u3002\u4f38\u5c55\u6811\u4e0d\u4fdd\u8bc1\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(logN)\u3002\u4f38\u5c55\u6811\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8fb9\u754c\u662f\u5747\u644a\u7684\u3002\u5c3d\u7ba1\u4e00\u4e2a\u5355\u72ec\u7684\u64cd\u4f5c\u53ef\u80fd\u5f88\u8017\u65f6\uff0c\u4f46\u5bf9\u4e8e\u4e00\u4e2a\u4efb\u610f\u7684\u64cd\u4f5c\u5e8f\u5217\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u4fdd\u8bc1\u4e3aO(logN)\u3002\n\n\u4e8c\u3001\u81ea\u8c03\u6574\u548c\u5747\u644a\u5206\u6790\uff1a\n\n\u5e73\u8861\u67e5\u627e\u6811\u7684\u4e00\u4e9b\u9650\u5236\uff1a\n\n1\u3001\u5e73\u8861\u67e5\u627e\u6811\u6bcf\u4e2a\u8282\u70b9\u90fd\u9700\u8981\u4fdd\u5b58\u989d\u5916\u7684\u4fe1\u606f\u3002\n\n2\u3001\u96be\u4e8e\u5b9e\u73b0\uff0c\u56e0\u6b64\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u590d\u6742\u5ea6\u9ad8\uff0c\u4e14\u662f\u6f5c\u5728\u7684\u9519\u8bef\u70b9\u3002\n\n3\u3001\u5bf9\u4e8e\u7b80\u5355\u7684\u8f93\u5165\uff0c\u6027\u80fd\u5e76\u6ca1\u6709\u4ec0\u4e48\u63d0\u9ad8\u3002\n\n\u5e73\u8861\u67e5\u627e\u6811\u53ef\u4ee5\u8003\u8651\u63d0\u9ad8\u6027\u80fd\u7684\u5730\u65b9\uff1a\n\n1\u3001\u5e73\u8861\u67e5\u627e\u6811\u5728\u6700\u5dee\u3001\u5e73\u5747\u548c\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5728\u672c\u8d28\u4e0a\u662f\u76f8\u540c\u7684\u3002\n\n2\u3001\u5bf9\u4e00\u4e2a\u8282\u70b9\u7684\u8bbf\u95ee\uff0c\u5982\u679c\u7b2c\u4e8c\u6b21\u8bbf\u95ee\u7684\u65f6\u95f4\u5c0f\u4e8e\u7b2c\u4e00\u6b21\u8bbf\u95ee\uff0c\u5c06\u662f\u975e\u5e38\u597d\u7684\u4e8b\u60c5\u3002\n\n3\u300190-10\u6cd5\u5219\u3002\u5728\u5b9e\u9645\u60c5\u51b5\u4e2d\uff0c90%\u7684\u8bbf\u95ee\u53d1\u751f\u572810%\u7684\u6570\u636e\u4e0a\u3002\n\n4\u3001\u5904\u7406\u597d\u90a390%\u7684\u60c5\u51b5\u5c31\u5f88\u597d\u4e86\u3002\n\n\u5728\u4e00\u9897\u4e8c\u53c9\u6811\u4e2d\u8bbf\u95ee\u4e00\u4e2a\u8282\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u8fd9\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u6784\u6811\u7684\u7ed3\u6784\uff0c\u4f7f\u5f97\u88ab\u7ecf\u5e38\u8bbf\u95ee\u7684\u8282\u70b9\u671d\u6811\u6839\u7684\u65b9\u5411\u79fb\u52a8\u3002\u5c3d\u7ba1\u8fd9\u4f1a\u5f15\u5165\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u4f46\u662f\u7ecf\u5e38\u88ab\u8bbf\u95ee\u7684\u8282\u70b9\u88ab\u79fb\u52a8\u5230\u4e86\u9760\u8fd1\u6839\u7684\u4f4d\u7f6e\uff0c\u56e0\u6b64\uff0c\u5bf9\u4e8e\u8fd9\u90e8\u5206\u8282\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5feb\u7684\u8bbf\u95ee\u3002\u6839\u636e\u4e0a\u9762\u768490-10\u6cd5\u5219\uff0c\u8fd9\u6837\u505a\u53ef\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002\n\n\u4e3a\u4e86\u8fbe\u5230\u4e0a\u9762\u7684\u76ee\u7684\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u4e00\u79cd\u7b56\u7565\u2500\u2500\u65cb\u8f6c\u5230\u6839(rotate-to-root)\u3002\n\n\u4e94\u3001\u57fa\u672c\u4f38\u5c55\u6811\u64cd\u4f5c\uff1a\n\n1\u3001\u63d2\u5165\uff1a\n\n\u5f53\u4e00\u4e2a\u8282\u70b9\u63d2\u5165\u65f6\uff0c\u4f38\u5c55\u64cd\u4f5c\u5c06\u6267\u884c\u3002\u56e0\u6b64\uff0c\u65b0\u63d2\u5165\u7684\u8282\u70b9\u5728\u6839\u4e0a\u3002\n\n2\u3001\u67e5\u627e\uff1a\n\n\u5982\u679c\u67e5\u627e\u6210\u529f\uff08\u627e\u5230\uff09\uff0c\u90a3\u4e48\u7531\u4e8e\u4f38\u5c55\u64cd\u4f5c\uff0c\u88ab\u67e5\u627e\u7684\u8282\u70b9\u6210\u4e3a\u6811\u7684\u65b0\u6839\u3002\n\n\u5982\u679c\u67e5\u627e\u5931\u8d25\uff08\u6ca1\u6709\uff09\uff0c\u90a3\u4e48\u5728\u67e5\u627e\u9047\u5230NULL\u4e4b\u524d\u7684\u90a3\u4e2a\u8282\u70b9\u6210\u4e3a\u65b0\u7684\u6839\u3002\u4e5f\u5c31\u662f\uff0c\u5982\u679c\u67e5\u627e\u7684\u8282\u70b9\u5728\u6811\u4e2d\uff0c\u90a3\u4e48\uff0c\u6b64\u65f6\u6839\u4e0a\u7684\u8282\u70b9\u5c31\u662f\u8ddd\u79bb\u8fd9\u4e2a\u8282\u70b9\u6700\u8fd1\u7684\u8282\u70b9\u3002\n\n3\u3001\u67e5\u627e\u6700\u5927\u6700\u5c0f\uff1a\n\n\u67e5\u627e\u4e4b\u540e\u6267\u884c\u4f38\u5c55\u3002\n\n4\u3001\u5220\u9664\u6700\u5927\u6700\u5c0f\uff1a\n\na)\u5220\u9664\u6700\u5c0f\uff1a\n\n\u9996\u5148\u6267\u884c\u67e5\u627e\u6700\u5c0f\u7684\u64cd\u4f5c\u3002\n\n\u8fd9\u65f6\uff0c\u8981\u5220\u9664\u7684\u8282\u70b9\u5c31\u5728\u6839\u4e0a\u3002\u6839\u636e\u4e8c\u53c9\u67e5\u627e\u6811\u7684\u7279\u70b9\uff0c\u6839\u6ca1\u6709\u5de6\u5b50\u8282\u70b9\u3002\n\n\u4f7f\u7528\u6839\u7684\u53f3\u5b50\u7ed3\u70b9\u4f5c\u4e3a\u65b0\u7684\u6839\uff0c\u5220\u9664\u65e7\u7684\u5305\u542b\u6700\u5c0f\u503c\u7684\u6839\u3002\n\nb)\u5220\u9664\u6700\u5927\uff1a\n\n\u9996\u5148\u6267\u884c\u67e5\u627e\u6700\u5927\u7684\u64cd\u4f5c\u3002\n\n\u5220\u9664\u6839\uff0c\u5e76\u628a\u88ab\u5220\u9664\u7684\u6839\u7684\u5de6\u5b50\u7ed3\u70b9\u4f5c\u4e3a\u65b0\u7684\u6839\u3002\n\n5\u3001\u5220\u9664\uff1a\n\n\u5c06\u8981\u5220\u9664\u7684\u8282\u70b9\u79fb\u81f3\u6839\u3002\n\n\u5220\u9664\u6839\uff0c\u5269\u4e0b\u4e24\u4e2a\u5b50\u6811L\uff08\u5de6\u5b50\u6811\uff09\u548cR\uff08\u53f3\u5b50\u6811\uff09\u3002\n\n\u4f7f\u7528DeleteMax\u67e5\u627eL\u7684\u6700\u5927\u8282\u70b9\uff0c\u6b64\u65f6\uff0cL\u7684\u6839\u6ca1\u6709\u53f3\u5b50\u6811\u3002\n\n\u4f7fR\u6210\u4e3aL\u7684\u6839\u7684\u53f3\u5b50\u6811\u3002\n\n\n\n```cpp\nconst maxn=100007;\ntype tp=record\n          left,right,data,father:longint;\n        end;\nvar\n  tree:array[0..maxn]of tp;\n  tot,now,ans,min,root,prev,next,same,n:longint;\nprocedure init;\nbegin\n  readln(n);\n  fillchar(tree,sizeof(tree),0);\n  read(tree[1].data); root:=1;\n  ans:=tree[1].data;\nend;\nprocedure leftrotate(x:longint);\nvar y:longint;\nbegin\n  y:=tree[x].father;\n  tree[y].right:=tree[x].left;\n  if tree[x].left<>0 then tree[tree[x].left].father:=y;\n  tree[x].father:=tree[y].father;\n  if tree[y].father<>0 then\n  begin\n    if y=tree[tree[y].father].left then tree[tree[y].father].left:=x\n                                   else tree[tree[y].father].right:=x;\n  end;\n  tree[y].father:=x;\n  tree[x].left:=y;\nend;\nprocedure rightrotate(x:longint);\nvar y:longint;\nbegin\n  y:=tree[x].father;\n  tree[y].left:=tree[x].right;\n  if tree[x].right<>0 then tree[tree[x].right].father:=y;\n  tree[x].father:=tree[y].father;\n  if tree[x].father<>0 then\n  begin\n    if tree[tree[y].father].left=y then tree[tree[y].father].left:=x\n                                   else tree[tree[y].father].right:=x;\n  end;\n  tree[y].father:=x;\n  tree[x].right:=y;\nend;\nprocedure splay(now:longint);\nvar t:longint;\nbegin\n  while tree[now].father<>0 do\n  begin\n    t:=tree[now].father;\n    if tree[t].father=0 then\n    begin\n      if tree[t].left=now then rightrotate(now) else leftrotate(now);\n      break;\n    end;\n    if now=tree[t].left then\n        begin\n          if t=tree[tree[t].father].left then\n            begin rightrotate(t); rightrotate(now); end\n          else\n            begin rightrotate(now); leftrotate(now); end;\n        end\n      else\n        begin\n          if t=tree[tree[t].father].right then\n            begin leftrotate(t); leftrotate(now); end\n          else\n            begin leftrotate(now); rightrotate(now); end;\n        end;\n  end;\n  root:=now;\nend;\nprocedure insert;\nvar t:longint;\nbegin\n  t:=root;   same:=now;\n  while true do\n  begin\n    if tree[t].data=tree[now].data then\n    begin min:=0; same:=t; exit; end;\n    if tree[t].data>tree[now].data then\n      begin\n        if tree[t].left=0 then\n        begin tree[now].father:=t; tree[t].left:=now; exit; end\n        else t:=tree[t].left;\n      end\n    else\n      begin\n        if tree[t].right=0 then\n        begin tree[now].father:=t; tree[t].right:=now; exit; end\n        else t:=tree[t].right;\n      end;\n  end;\nend;\nprocedure findprev;\nbegin\n  prev:=tree[now].left;\n  while prev<>0 do\n  begin\n    if tree[prev].right=0 then exit;\n    prev:=tree[prev].right;\n  end;\nend;\nprocedure findnext;\nbegin\n  next:=tree[now].right;\n  while next<>0 do\n  begin\n    if tree[next].left=0 then exit;\n    next:=tree[next].left;\n  end;\nend;\nprocedure work;\nbegin\n  read(tree[now].data);\n  min:=maxlongint;\n  insert;\n  splay(same);\n  if min>0 then\n  begin\n    findprev;\n    findnext;\n    if (next<>0)and((prev=0)or\n    (tree[next].data-tree[now].data<tree[now].data-tree[prev].data))\n    then min:=tree[next].data-tree[now].data\n    else min:=tree[now].data-tree[prev].data;\n  end;\n  ans:=ans+min;\nend;\nbegin\n  init;\n  for now:=2 to n do  work;\n  writeln(ans);\nend.\n```",
        "postTime": 1494333744,
        "uid": 34910,
        "name": "\u91cd\u56de\u5dc5\u5cf0\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "\u521a\u5199\u4e86\u4e00\u7bc7\u6709\u65cbTreap\u7684\u9898\u89e3\uff0c\u7acb\u9a6c\u6765\u8865\u4e00\u53d1\u65e0\u65cbTreap\u7684\u9898\u89e3\u3002\n\n\u65e0\u65cbTreap,\u7b80\u79f0FHQ-Treap\uff0c\u662f\u4e00\u4f4d\u540d\u53ebfhq\u7684julao\u53d1\u660e\u7684\uff0c\n\u5b83\u597d\u7406\u89e3\u53c8\u597d\u6253\u800c\u4e14\u529f\u80fd\u5341\u5206\u5f3a\u5927\uff0c\u751a\u81f3\u53ef\u4ee5\u5b8c\u6210\u53ef\u6301\u4e45\u5316\n(~~\u867d\u7136\u6211\u6839\u672c\u4e0d\u4f1a~~)\u5efa\u8bae\u548c\u6211\u4e00\u6837\u7684\u840c\u65b0\u5148\u53bb\u5b66FHQ(~~\u53cd\u6b63\u6211\u5148\u5b66\u7684\u6709\u65cbTreap\u5230\u73b0\u5728\u8fd8\u6ca1\u6709\u5b8c\u5168\u641e\u61c2\u5de6\u65cb\u53f3\u65cb\u7684\u610f\u4e49~~)\n\nFHQ\u7684\u4e3b\u8981\u64cd\u4f5c\u5c31\u53ea\u6709\u4e24\u4e2a\uff1a\u5206\u88c2(Slipt)\u548c\u5408\u5e76(Merge)\u5176\u4ed6\u6240\u6709\u7684\u57fa\u672c\u64cd\u4f5c(~~\u81f3\u5c11\u662f\u6211\u6240\u77e5\u9053\u7684~~)\u90fd\u662f\u4f9d\u9760\u7740\u4e24\u4e2a\u64cd\u4f5c\u5b9e\u73b0\u7684\uff0c\u600e\u4e48\u6837\uff0c\u7b80\u5355\u5427\u3002\n\n\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf=214748364; \nint n,root,x,y,sum,a[100000],ans;\nstruct tree{\n\tint l,r,size,v,rnd;\n}t[100000];\nvoid update(int p){\n\tt[p].size=t[t[p].l].size+t[t[p].r].size+1;\n}//\u4e0e\u6709\u65cbTreap\u76f8\u4f3c\u7684\u64cd\u4f5c,\u7528\u5b50\u8282\u70b9\u66f4\u65b0\u7236\u8282\u70b9; \nvoid split(int p,int k,int &x,int &y){\n\t//\u8fd9\u4e2a\u51fd\u6570\u7684\u610f\u601d\u662f\u628a\u6839\u8282\u70b9\u4e3ap\u7684\u5b50\u6811\u4ee5\u6743\u503ck\u5206\u4e3a\u4e24\u68f5\u5b50\u6811,\n\t//\u6743\u503c\u8f83\u5c0f\u7684\u5b50\u6811\u7684\u6839\u4e3ax,\u6743\u503c\u8f83\u5927\u7684\u5b50\u6811\u7684\u6839\u4e3ay; \n\tif(!p)\n\t\tx=y=0;//p\u4e3a\u96f6\u6709\u4e24\u79cd\u60c5\u51b5:\n\t\t      //1: \u521a\u5f00\u59cb\u65f6\u4e3ax,y\u8d4b\u521d\u503c;\n\t\t\t  //2: \u904d\u5386\u81f3\u53f6\u5b50\u7ed3\u70b9\u5de6\u53f3\u65e0\u5b69\u5b50\u65f6; \n\telse if(t[p].v<=k){\n\t\tx=p;\n\t\tsplit(t[p].r,k,t[p].r,y);\n\t\tupdate(p);\n\t}//\u5982\u679c\u5f53\u524d\u8282\u70b9\u7684\u503c\u5c0f\u4e8ek,\u53ca\u5f53\u524d\u8282\u70b9\u4e0e\u5f53\u524d\u8282\u70b9\u7684\u5de6\u5b50\u6811\u5168\u90e8\u5c5e\u4e8e\u6743\u503c\u8f83\u5c0f\u7684\u5b50\u6811;\n\t//\u56e0\u4e3ap\u8282\u70b9\u5df2\u7ecf\u5f52\u5165\u5de6\u5b50\u6811,\u6240\u4ee5\u63a5\u4e0b\u6765\u8981\u5206\u88c2\u4ee5p\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811; \n\telse{\n\t\ty=p;\n\t\tsplit(t[p].l,k,x,t[p].l);\n\t\tupdate(p);\n\t}//\u53cd\u4e4b\u4ea6\u7136; \n}//\u5206\u88c2\u64cd\u4f5c; \nint merge(int A,int B){\n\tif(!A||!B)\n\t\treturn A+B;//\u5982\u679cA\u548cB\u4e2d\u6709\u4e00\u4e2a\u4e3a0,\u8bf4\u660e\u5408\u5e76\u5b8c\u6210,\u8fd4\u56de\u53e6\u4e00\u4e2a\u503c\u5373\u53ef; \n\tif(t[A].rnd<t[B].rnd){//\u56e0\u4e3a\u8981\u7ef4\u62a4\u5806\u7684\u6027\u8d28(\u6211\u7ef4\u62a4\u7684\u662f\u5c0f\u6839\u5806),\n\t\t\t\t\t\t  //\u5982\u679cA\u7684\u968f\u673a\u503c\u5c0f\u4e8eB\u7684\u968f\u673a\u503c,\u8bf4\u660eB\u5b50\u6811\u53ea\u80fd\u4e3aA\u5b50\u6811\u7684\u53f3\u5b50\u6811; \n\t\tt[A].r=merge(t[A].r,B);\n\t\tupdate(A);\n\t\treturn A;\n\t}\n\telse{//\u53cd\u4e4b\u4ea6\u7136; \n\t\tt[B].l=merge(A,t[B].l);\n\t\tupdate(B);\n\t\treturn B;\n\t}\n}\nint newo(int a){\n\tt[++sum].size=1;\n\tt[sum].v=a;\n\tt[sum].rnd=rand();\n\treturn sum;\n}//\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9; \nvoid ins(int a){\n\tsplit(root,a,x,y);\n\troot=merge(merge(x,newo(a)),y);\n}//\u66b4\u529b\u5206\u89e3\u548c\u5408\u5e76\u5373\u53ef; \nint Xth(int p,int a){\n    if(a<=t[t[p].l].size)\n\treturn Xth(t[p].l,a);\n    else if(a==t[t[p].l].size+1)\n\treturn p;\n    else\n\treturn Xth(t[p].r,a-t[t[p].l].size-1);\n}//\u6c42\u5b50\u6811p\u4e2d\u6392\u540d\u4e3aa\u7684\u8282\u70b9\u7f16\u53f7,\u4e0d\u518d\u8d58\u8ff0\u81ea\u5df1\u601d\u8003\u4e00\u4e0b(\u4e0d\u96be\u60f3); \nint pre(int a){\n\tint x,y;\n\tsplit(root,a,x,y);\n\t//\u56e0\u4e3a\u5df2\u7ecf\u5c06\u6811\u7531\u6743\u503ca\u5206\u6210\u4e86x\u5b50\u6811\u548cy\u5b50\u6811,\n\t//\u63a5\u4e0b\u6765\u53ea\u9700\u67e5\u627ex\u5b50\u6811\u4e2d\u6700\u5927\u7684\u90a3\u4e2a\u5373\u53ef; \n\tint res=Xth(x,t[x].size);\n\troot=merge(x,y);\n\treturn t[res].v;\n}//\u6c42\u524d\u9a71; \nint back(int a){//\u7406\u7531\u4e0e\u6c42\u524d\u9a71\u4e00\u81f4,\u4e0d\u518d\u8d58\u8ff0; \n\tsplit(root,a-1,x,y);\n\tint res=Xth(y,1);\n\troot=merge(x,y); \n\treturn t[res].v;\n}//\u6c42\u540e\u7ee7; \nint main(){\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&a[1]);\n\tins(a[1]);\n\tins(inf),ins(-inf);//\u8bb0\u4f4f\u4e00\u5b9a\u8981\u5148\u63d2\u4e00\u6b63\u4e00\u8d1f\u4e24\u4e2ainf\u8fdb\u53bb(\u6211\u56e0\u4e3a\u8fd9\u4e2a\u9519\u6539\u4e86\u4e00\u4e0b\u5348); \n\tans=a[1];\n\tfor(int i=2;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(pre(a[i])!=-inf||back(a[i])!=inf)\n\t\tans+=min(abs(pre(a[i])-a[i]),abs(back(a[i])-a[i]));//\u6700\u540e\u5728\u524d\u9a71\u548c\u540e\u7ee7\u91cc\u627e\u4e00\u4e2a\u66f4\u5408\u9002\u7684\u66f4\u65b0ans\u5373\u53ef; \n\t\tins(a[i]);\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1566217234,
        "uid": 203825,
        "name": "\u5207\u683c\u74e6\u00b7\u661f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "\u7ffb\u4e86\u51e0\u9875\u90fd\u6ca1\u53d1\u73b0\u6709\u7528\u6709\u65cbTreap\u5199\u7684\u9898\u89e3....\n\n# ~~(\u53ef\u8fd9\u9898\u5728LOJ\u4e0a\u662fTreap\u7684\u6a21\u677f\u9898\u554a)~~\n\n\u8d76\u7d27\u6765\u6c34\u7bc7\u6709\u65cbTreap\u7684\u9898\u89e3\n\n\u5177\u4f53\u89e3\u91ca\u770b\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf=214748364;\nint n,a[1000000],root,sum;\nlong long ans;\nstruct Treap{\n\tint l,r,v,num,size;\n\tlong long rnd;\n}t[100000];//\u7528\u7ed3\u6784\u4f53\u5b58\u53d8\u91cf:\n\t\t  //l:\u5de6\u5b69\u5b50,r:\u53f3\u5b69\u5b50;\n\t\t  //v:\u8be5\u8282\u70b9\u7684\u6743\u503c;\n\t\t  //num:\u4e0e\u8be5\u8282\u70b9\u6743\u503c\u76f8\u540c\u7684\u70b9\u7684\u4e2a\u6570;\n\t\t  //size:\u4ee5\u8be5\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u8282\u70b9\u6570;\n\t\t  //rand:\u8be5\u8282\u70b9\u7684\u968f\u673a\u503c; \nvoid update(int p){\n\tt[p].size=t[t[p].r].size+t[t[p].l].size+t[p].num;\n}//\u7528\u5b50\u8282\u70b9\u7684\u503c\u66f4\u65b0\u7236\u8282\u70b9\u7684\u503c; \nvoid rt(int &p){\n\tint q=t[p].l;t[p].l=t[q].r;t[q].r=p;\n\tt[q].size=t[p].size;update(p);p=q;\n}\nvoid lt(int &p){\n\tint q=t[p].r;t[p].r=t[q].l;t[q].l=p;\n\tt[q].size=t[p].size;update(p);p=q;\n}//\u57fa\u7840\u7684\u5de6\u65cb\u53f3\u65cb\u64cd\u4f5c; \nvoid ins(int &p,int x){\n\tif(!p){\n\t\tp=++sum;\n\t\tt[p].num=t[p].size=1;\n\t\tt[p].v=x;\n\t\tt[p].rnd=rand();\n\t\treturn;\n\t}\n\tt[p].size++;\n\tif(t[p].v==x) t[p].num++;\n\telse if(x>t[p].v){\n\t\tins(t[p].r,x);\n\t\tif(t[t[p].r].rnd<t[p].rnd) lt(p);\n\t}//\u5982\u679c\u8981\u63d2\u5165\u7684\u503c\u6bd4\u5f53\u524d\u8282\u70b9\u7684\u503c\u5927,\u5c31\u5c06\u5176\u63d2\u5165\u53f3\u5b50\u6811\u4e2d,\u540c\u65f6\u5982\u679c\u53f3\u8282\u70b9\u7684\u968f\u673a\u503c\u6bd4\u5f53\u524d\u8282\u70b9\u968f\u673a\u503c\u5c0f,\n\t //\u5c31\u8981\u901a\u8fc7\u5de6\u65cb\u6765\u7ef4\u62a4\u5806\u7684\u6027\u8d28; \n\telse{\n\t\tins(t[p].l,x);\n\t\tif(t[t[p].l].rnd<t[p].rnd) rt(p);\n\t}//\u7406\u7531\u540c\u4e0a; \n}//\u63d2\u5165\u64cd\u4f5c \nint pre(int p,int x){\n\tif(!p) return -inf;\n\tif(t[p].v>x) return pre(t[p].l,x);\n\telse return max(t[p].v,pre(t[p].r,x));\n}//\u67e5\u627e\u524d\u9a71; \nint bac(int p,int x){\n\tif(!p) return inf;\n\tif(t[p].v<x) return bac(t[p].r,x);\n\telse return min(t[p].v,bac(t[p].l,x));\n}//\u67e5\u627e\u540e\u7ee7; \nint main(){\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&a[1]);\n\tins(root,a[1]);\n\tans=a[1];\n\tfor(int i=2;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tans+=min(abs(pre(root,a[i])-a[i]),abs(bac(root,a[i])-a[i]));//\u5728\u524d\u9a71\u548c\u540e\u7ee7\u4e2d\u9009\u4e00\u4e2a\u7b26\u5408\u9898\u610f\u7684\u503c\u6765\u66f4\u65b0ans; \n\t\tins(root,a[i]);//\u8981\u5148\u627e\u540e\u63d2\u5165; \n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1566191764,
        "uid": 203825,
        "name": "\u5207\u683c\u74e6\u00b7\u661f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "\u7528STL\u7684set\u8981\u4e0d\u8981\u8fd9\u4e48\u7b80\u5355\uff0c\u6bcf\u8bfb\u5165\u4e00\u4e2a\u4fbf\u7528lower\\_bound\u627e\u6bd4\u5f53\u524d\u7684\u8981\u5927\u7684\u6700\u5c0f\u7684\uff0c\u518d\u627e\u6bd4\u5b83\u5c0f\u7684\u6700\u5927\u7684\uff0c\u4e24\u8005\u8ba1\u7b97\u53d6\u6700\u5c0f\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff1a(1)\u5148\u627e\u540e\u8bfb\uff1b(2)1,2\u6570\u636e\u7279\u5224\u8981\u597d\u5199\u4e00\u4e9b(\u5b9e\u9645\u56e0\u4e3a\u6570\u636e\u6bd4\u8f83\u6c34\u6839\u672c\u4e0d\u7528\u5224)\uff1b(3)\u636e\u8bf4\u6709\u4e9b\u6570\u636e\u6ca1\u6709n\u884c\uff0c\u6240\u4ee5\u6700\u597d\u7528while\u8bfb\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <set>\nusing namespace std;\nset<int> q;\nint sq[100005];\nset<int>::iterator p;\nset<int>::iterator l;\nint main()\n{\n    int n;\n    cin>>n;\n    cin>>sq[1];\n    cin>>sq[2];\n    q.insert(sq[1]);\n    q.insert(sq[2]);\n    int ans=sq[1]+abs(sq[2]-sq[1]);\n    int i=3;\n    while(cin>>sq[i])\n    {\n        p=q.lower_bound(sq[i]);\n        l=p;\n        if(p!=q.begin()) l--;\n        ans+=min(abs(sq[i]-*p),abs(sq[i]-*l));\n        q.insert(sq[i]);\n        i++;\n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1492593002,
        "uid": 35658,
        "name": "\u9ed1\u6cfd\u65af",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "$$\\color{cornflowerblue}{\\mathcal{Treaker}}$$\n# \u5e73\u8861\u6811\n\u8fd9\u4e2a\u9898\u663e\u7136\u662f\u4e2a\u5e73\u8861\u6811\u7684\u9898\u3002\u5f53\u7136\u662f\u7528Splay\u4e86\n\n\u90a3\u4e48\u8981\u6c42\u6211\u4eec\u652f\u6301\u4ec0\u4e48\u64cd\u4f5c\u5462\uff1f\n\n\u67e5\u8be2\u6700\u5c0f\u6ce2\u52a8\u503c\u3002\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u628a\u524d\u9a71\u548c\u540e\u7ee7\u90fd\u6c42\u51fa\u6765\uff0c\u770b\u54ea\u4e2a\u79bb\u5f97\u8fd1\u5c31\u662f\u54ea\u4e2a\uff0c\u7edf\u8ba1\u7b54\u6848\uff0c\u518d\u628a\u8fd9\u4e2a\u6570insert\u8fdb\u53bb\u5c31\u884c\u4e86\u3002\n\n\u8fd9\u91cc\u6211\u51fa\u4e86\u4e00\u4e9b\u9505\uff0c\u90a3\u4e2ainf\u5982\u679c\u592a\u5927\u7684\u8bdd\uff0c\u4f1a\u7206int\uff0c\u7136\u540e\u51fa\u8d1f\uff0c\u7b54\u6848\u5c31\u4e0d\u5bf9\u4e86\u3002\u628ainf\u8bbe\u5c0f\u4e00\u4e9b\u5c31\u53ef\u4ee5\u4e86\u3002\u3002\u3002\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nconst int inf = 1147483647;\ninline int read()\n{\n    int x = 0 , f = 1;  char ch = getchar();\n    while(ch < '0' || ch > '9') {if(ch == '-')  f = -1; ch = getchar();}\n    while(ch >= '0' && ch <= '9') {x = (x << 3) + (x << 1) + (ch ^ 48); ch = getchar();}\n    return x * f;\n}\nstruct Splay\n{\n\tstruct node\n\t{\n\t\tnode *ch[2] , *fa;\n\t\tint val , size;\n\t\tnode(node *fa = NULL,int val = 0) : fa(fa) , val(val) {ch[0] = ch[1] = NULL;size = 1;}\n\t\tinline bool isr() {return this == fa -> ch[1];}\n\t\tinline int rk() {return 1 + (ch[0] ? ch[0] -> size : 0);}\n\t\tinline void up() {size = 1 +(ch[0] ? ch[0] -> size : 0) + (ch[1] ? ch[1] -> size : 0);}\n\t}*root;\n\tSplay() {root = NULL;}\n\tinline void rot(node *x)\n\t{\n\t\tbool k = x -> isr();\n\t\tnode *y = x -> fa , *z = y -> fa , *w = x -> ch[!k];\n\t\tif(root == y) root = x;\n\t\telse z -> ch[y -> isr()] = x;\n\t\tx -> fa = z; y -> fa = x;\n\t\tx -> ch[!k] = y; y -> ch[k] = w;\n\t\tif(w) w -> fa = y;\n\t\ty -> up(); x -> up();\n\t}\n\tinline void splay(node *x)\n\t{\n\t\twhile(x != root)\n\t\t{\n\t\t\tif(x -> fa != root) rot(x -> isr() ^ x -> fa -> isr() ? x : x -> fa);\n\t\t\trot(x);\n\t\t}\n\t}\n\tinline void insert(int val)\n\t{\n\t\tif(!root) return (void)(root = new node(NULL,val));\n\t\tnode *p = root , *fa = NULL;\n\t\twhile(p)\n\t\t{\n\t\t\tfa = p;\n\t\t\tp = p -> ch[val > p -> val];\n\t\t}\n\t\tp = new node(fa,val);\n\t\tfa -> ch[val > fa -> val] = p;\n\t\tsplay(p);\n\t}\n\tinline int pre(int val)\n\t{\n\t\tnode *p = root , *lst = NULL;\n\t\twhile(p)\n\t\t{\n\t\t\tif(val > p -> val) lst = p , p = p -> ch[1];\n\t\t\telse p = p -> ch[0];\n\t\t}\n\t\tif(lst) return splay(lst) , lst -> val;\n\t\treturn -inf;\n\t}\n\tinline int nxt(int val)\n\t{\n\t\tnode *p = root , *lst = NULL;\n\t\twhile(p)\n\t\t{\n\t\t\tif(val < p -> val) lst = p , p = p -> ch[0];\n\t\t\telse p = p -> ch[1];\n\t\t}\n\t\tif(lst) return splay(lst) , lst -> val;\n\t\treturn inf;\n\t}\n\tinline void LOL()\n\t{\n\t\tint n = read() , ans = 0;\n\t\tfor(int i = 1 , x;i <= n;i ++)\n\t\t{\n\t\t\tx = read();\n\t\t\tif(i == 1) ans += x;\n\t\t\telse ans += min(x - pre(x+1),nxt(x-1) - x);\n\t\t\tinsert(x);\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}DNF;\nint main()\n{\n\tDNF.LOL();\n\treturn 0;\n}\n\n```\n",
        "postTime": 1569379406,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "### \u770b\u5230\u6700\u5c0f\u6ce2\u52a8\u503c,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u60f3\u5230\u4e8c\u53c9\u6392\u5e8f\u6811,\u6700\u5c0f\u6ce2\u52a8\u503c\u5c31\u662f\u7b2ci\u5929\u6240\u5728\u8282\u70b9\u7684\u503c\u548c\u524d\u9a71\u540e\u7f00\u7684min\u503c\u3002\n\n### \u4f46\u662f\u7ee7\u7eed\u770b\u4e00\u4e0b\u6570\u636e,\u5982\u679c\u53ea\u662f\u666e\u901a\u7684\u4e8c\u53c9\u6392\u5e8f\u6811\u662f\u4e0d\u7a33\u5b9a\u7684,\u5f88\u5bb9\u6613\u8d85\u65f6,\u6240\u4ee5\u6211\u4eec\u5c31\u7528splay\u5e73\u8861\u6811\u5566,\u53ef\u4ee5\u628a\u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7a33\u5b9a\u5728n(log(n))\u8fd9\u9053\u9898\u5c31\u89e3\u51b3\u4e86\u3002\n\n## \u4e0b\u9762\u662f\u6211\u7684\u7a0b\u5e8f,\u7a0d\u7a0d\u5e26\u70b9\u4f18\u5316\n```cpp\n#include <cstdlib>\n#include <cstdio>\n#include <cstring>\n#include <string>\n#include <iostream>\nusing namespace std;\nint sum=0,root,flag;\nstruct node {\n\tint l,r,fa,data;\n} tree[1000010];\nvoid right(int x) {  //\u53f3\u65cb\n\tint y,z;\n\ty=tree[x].fa;\n\tz=tree[y].fa;\n\ttree[y].l=tree[x].r;\n\tif (tree[x].r)\n\t\ttree[tree[x].r].fa=y;\n\ttree[x].fa=z;\n\tif (tree[z].l == y && z) tree[z].l=x;\n\telse if (tree[z].r == y && z) tree[z].r=x;\n\ttree[y].fa=x;\n\ttree[x].r=y;\n}\nvoid left(int x) {  //\u5de6\u65cb\n\tint y,z;\n\ty=tree[x].fa;\n\tz=tree[y].fa;\n\ttree[y].r=tree[x].l;\n\tif (tree[x].l)\n\t\ttree[tree[x].l].fa=y;\n\ttree[x].fa=z;\n\tif (tree[z].l == y && z) tree[z].l=x;\n\telse if (tree[z].r == y && z) tree[z].r=x;\n\ttree[x].l=y;\n\ttree[y].fa=x;\n}\nvoid splay(int x) {\n\twhile (tree[x].fa) {\n\t\tint y,z;\n\t\ty=tree[x].fa;\n\t\tz=tree[y].fa;\n\t\tif (!z) {\n\t\t\tif (tree[y].l==x)\n\t\t\t\tright(x);\n\t\t\telse if (tree[y].r==x)\n\t\t\t\tleft(x);\n\t\t} else {\n\t\t\tif (tree[z].l==y && tree[y].l==x) {\n\t\t\t\tright(y);\n\t\t\t\tright(x);\n\t\t\t}\n\t\t\tif (tree[z].r==y && tree[y].r==x) {\n\t\t\t\tleft(y);\n\t\t\t\tleft(x);\n\t\t\t}\n\t\t\tif (tree[z].l==y && tree[y].r==x) {\n\t\t\t\tleft(x);\n\t\t\t\tright(x);\n\t\t\t}\n\t\t\tif (tree[z].r==y && tree[y].l==x) {\n\t\t\t\tright(x);\n\t\t\t\tleft(x);\n\t\t\t}\n\t\t}\n\t}\n\troot=x;\n}\nint qq(int x) {    //\u6c42\u524d\u9a71\n\tint y=tree[x].l;\n\tif (!y) return y;\n\twhile (tree[y].r) y=tree[y].r;\n\treturn y;\n}\nint hj(int x) {  //\u6c42\u540e\u7f00\n\tint y=tree[x].r;\n\tif (!y) return y;\n\twhile (tree[y].l) y=tree[y].l;\n\treturn y;\n}\nvoid BST(int rt,int x) {\n\tif (tree[rt].data==tree[x].data) {     //\u56e0\u4e3a\u662f\u6c42\u6700\u5c0f\u6ce2\u52a8\u503c,\u90a3\u4e48\u5982\u679c\u8fd9\u4e2a\u503c\u5df2\u7ecf\u8fdb\u5165\u8fc7\u4e86\u6811\u4e2d,\u5c31\u53ef\u4ee5\u76f4\u63a5\u5728tr\u8282\u70b9\u5f00\u59cbsplay\u4e86\n\t\tflag=1;\n\t\tsplay(rt);\n\t\treturn;\n\t} else if (tree[x].data > tree[rt].data) {\n\t\tif (!tree[rt].r) {\n\t\t\ttree[rt].r=x;\n\t\t\ttree[x].fa=rt;\n\t\t} else BST(tree[rt].r,x);\n\t} else {\n\t\tif (!tree[rt].l) {\n\t\t\ttree[rt].l=x;\n\t\t\ttree[x].fa=rt;\n\t\t} else BST(tree[rt].l,x);\n\t}\n}\nvoid insert(int x) {\n\tflag=0;\n\tBST(root,x);\n\tif (flag) return;\n\tsplay(x);\n\tint q,h,minx=2000000002;\n\tq=qq(x);\n\th=hj(x);\n\tif (q)\n\t\tminx=min(minx,abs(tree[x].data-tree[q].data));\n\tif (h)\n\t\tminx=min(minx,abs(tree[x].data-tree[h].data));\n\tsum += minx;\n}\nint main() {\n\tint n;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&tree[1].data);\n\tsum+=tree[1].data;\n\troot=1;\n\tfor (int i=2; i<=n; i++) {\n\t\tscanf(\"%d\",&tree[i].data);\n\t\tinsert(i);\n\t}\n\tprintf(\"%d\",sum);\n\treturn 0;\n}\n```\n",
        "postTime": 1555845734,
        "uid": 155661,
        "name": "\u5c71\u6c34\u4e00\u7a0b_",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "\u95f2\u7740\u6ca1\u4e8b\u53d1\u7bc7\u9898\u89e3\n\n\u6b63\u597d\u5728\u5b66splay\uff0c\u8fd9\u9898\u53ef\u4ee5\u7528splay\u5f88\u5feb\u5730\u89e3\u51b3\uff0c\u57fa\u672c\u53ef\u4ee5\u7b97\u662f\u6a21\u677f\u4e86\n\n\u6253\u4e2asplay\u7684\u6a21\u677f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5929\u7684\u503c\uff0c\u6211\u4eec\u627e\u51fa\u5b83\u7684\u524d\u7f00\u548c\u540e\u7ee7\uff0c\u7136\u540e\u6bd4\u8f83\u4e24\u4e2a\u76f8\u51cf\u7684abs\u8c01\u5927\u5c31\u597d\u4e86\n\nps\uff1a\u6c42\u524d\u7f00\u548c\u540e\u7ee7\u65f6\u8bb0\u5f97\u662f\u5927\u4e8e\u7b49\u4e8e\u548c\u5c0f\u4e8e\u7b49\u4e8e\n\npps\uff1a\u4e0d\u61c2splay\u7684\u53ef\u4ee5\u53bb\u505a\u505a\u6a21\u677f\uff0c\u5f88\u6709\u7528\u7684\n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nconst int N=40050,INF=0x3f3f3f3f;\nint ans=0;\ninline int read(){\n\t#define num ch-'0'\n\tchar ch;bool flag=0;int res;\n\twhile(!isdigit(ch=getchar()))\n\t(ch=='-')&&(flag=true);\n\tfor(res=num;isdigit(ch=getchar());res=res*10+num);\n\t(flag)&&(res=-res);\n\t#undef num\n\treturn res;\n}\ninline void print(int x) {\n    if(!x) {\n        putchar(48);\n        return;\n    }\n    if(x<0) putchar('-'),x=-x;\n    int l=0,wt[30];\n    while(x) wt[++l]=x%10,x/=10;\n    while(l) putchar(wt[l--]+48);\n}\nstruct Splay{\n    struct node{\n        int v,father,ch[2];\n        int sum,recy;\n    } e[N];\n    int n,root;\n    inline void update(int x){\n        e[x].sum=e[e[x].ch[0]].sum+e[e[x].ch[1]].sum+e[x].recy;\n    }\n    inline int identify(int x){\n        return e[e[x].father].ch[1]==x;\n    }\n    inline void connect(int x,int f,int son){\n        e[x].father=f,e[f].ch[son]=x;\n    }\n    inline void rotate(int x){\n        int y=e[x].father,z=e[y].father;\n        int yson=identify(x),zson=identify(y);\n        int b=e[x].ch[yson^1];\n        connect(b,y,yson),connect(y,x,(yson^1)),connect(x,z,zson);\n        update(y),update(x);\n    }\n    inline void splay(int x,int goal){\n        while(e[x].father!=goal){\n            int y=e[x].father,z=e[y].father;\n            if(z!=goal)\n            (identify(x)^identify(y))?rotate(x):rotate(y);\n            rotate(x);\n        }\n        if(goal==0) root=x;\n    }\n    inline void push(int v){\n        int now=root,f=0;\n        while(now&&e[now].v!=v){\n            f=now;\n            now=e[now].ch[v>e[now].v];\n        }\n        if(now) e[now].recy++;\n        else{\n            now=++n;\n            if(f) e[f].ch[v>e[f].v]=now;\n            e[n].ch[0]=e[n].ch[1]=0;\n            e[n].father=f,e[n].v=v;\n            e[n].recy=e[n].sum=1;\n        }\n        splay(now,0);\n    }\n    inline void find(int v){\n        int now=root;\n        if(!now) return;\n        while(e[now].ch[v>e[now].v]&&v!=e[now].v)\n        now=e[now].ch[v>e[now].v];\n        splay(now,0);\n    }\n    inline int Next(int v,int f){\n        find(v);\n        int now=root;\n        if((e[now].v>=v&&f)||(e[now].v<=v&&!f)) return e[now].v;\n        now=e[now].ch[f];\n        while(e[now].ch[f^1]) now=e[now].ch[f^1];\n        return e[now].v;\n    }\n    inline int get(int v){\n    \tint lower=Next(v,0);\n    \tint upper=Next(v,1);\n    \tpush(v);\n    \treturn min(abs(lower-v),abs(upper-v));\n\t}\n    Splay(){n=root=0;push(INF),push(-INF);}\n}F;\nint n;\nint main(){\n    n=read();ans+=read(),F.push(ans);n--;\n    while(n--) ans+=F.get(read());\n    print(ans);\n    return 0;\n}\n```",
        "postTime": 1531025266,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "\u6ca1\u6709\u7ebf\u6bb5\u6811\u9898\u89e3  \u6765\u4e00\u53d1\u6743\u503c\u7ebf\u6bb5\u6811\n\n\u5efa\u597d\u6811\u540e\uff0c\u5148\u79bb\u6563\u5316\u518d\u63d2\u70b9\u8be2\u95ee\u524d\u9a71\u540e\u7ee7\u5373\u53ef\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define inf 0x3f3f3f3f\n#define N 40000\nusing namespace std;\nstruct tree\n{\n    int l,r,mx,mn,sum;\n}tr[N<<2];\nint n,m,ans,tot,cnt;\nint a[N],b[N],val[N],num[N];\ninline void pushup(int k)\n{\n    tr[k].sum=tr[k<<1].sum+tr[k<<1|1].sum;\n    if(tr[k].sum)\n    {\n      tr[k].mn=min(tr[k<<1].mn,tr[k<<1|1].mn);\n      tr[k].mx=max(tr[k<<1].mx,tr[k<<1|1].mx);\n    } \n}\nvoid build(int k,int l,int r)\n{\n    tr[k].l=l;tr[k].r=r;tr[k].mn=inf;tr[k].mx=0;\n    if(l==r)\n    {\n        tr[k].sum=0;\n        return;\n    }\n    int mid=(l+r)>>1;\n    build(k<<1,l,mid);build(k<<1|1,mid+1,r);\n}\nvoid insert(int k,int pos)\n{\n    if(tr[k].l==tr[k].r && tr[k].l==pos)\n    {\n        tr[k].sum++;\n        tr[k].mn=tr[k].mx=pos;\n        return;\n    }\n    int mid=(tr[k].l+tr[k].r)>>1;\n    if(pos<=mid) insert(k<<1,pos);\n    if(pos>mid)insert(k<<1|1,pos);\n    pushup(k);\n}\nint query(int k,int l,int r,int flag)\n{\n    if(tr[k].l==l && tr[k].r==r)\n      return flag==1?tr[k].mn:tr[k].mx;\n    pushup(k);\n    int mid=(tr[k].r+tr[k].l)>>1;\n    if(l>mid) return query(k<<1|1,l,r,flag);\n    else if(r<=mid) return query(k<<1,l,r,flag);\n    else\n    {\n        if(flag==1) return min(query(k<<1,l,mid,flag),query(k<<1|1,mid+1,r,flag));\n        else return max(query(k<<1,l,mid,flag),query(k<<1|1,mid+1,r,flag));\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);memset(val,127,sizeof val);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        b[i]=a[i];val[i]=a[i];\n    }\n    sort(b+1,b+n+1);\n    tot=unique(b+1,b+n+1)-b-1;\n    for(int i=1;i<=n;i++) a[i]=lower_bound(b+1,b+tot+1,a[i])-b,num[a[i]]=i;\n    build(1,1,tot);ans=val[1];insert(1,a[1]);\n    for(int i=2;i<=n;i++)\n    {\n        int q=query(1,1,a[i],0);\n        int h=query(1,a[i],tot,1);\n        if(h==inf)ans+=abs(val[num[a[i]]]-val[num[q]]);\n        else ans+=min(abs((val[num[a[i]]]-val[num[q]])),abs((val[num[h]]-val[num[a[i]]])));\n        insert(1,a[i]);\n    }\n    printf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1502681993,
        "uid": 20833,
        "name": "\u5b89\u597d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "###  splay\n\n\u8fd9\u9053\u9898\u7528\u666e\u901a\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u505a\u80af\u5b9a\u4f1a\u8d85\u65f6\uff0c\u6240\u4ee5\u53ef\u4ee5\u5efa\u4e00\u68f5\u5e73\u8861\u6811\u3002\u6211\u662f\u7528splay\u505a\u7684\u3002\n\n\u8f93\u5165\u7b2c\u4e00\u4e2a\u6570\u662f\u7279\u5224\uff0c\u5e76\u5c06ans\u8d4b\u6210\u8fd9\u4e2a\u503c\u3002\u63a5\u4e0b\u6765\u6bcf\u8f93\u5165\u4e00\u4e2a\u6570\uff0c\u90fd\u5bfb\u627e\u8fd9\u4e2a\u6570\u7684\u524d\u9a71\u4e0e\u540e\u7ee7\uff0c\u5e76\u53d6\u79bb\u8fd9\u4e2a\u6570\u6700\u8fd1\u7684\u4e00\u4e2a\u3002\u67e5\u627e\u5b8c\u540e\uff0c\u5c06\u8fd9\u4e2a\u6570\u63d2\u5165\u5230\u6811\u4e2d\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint fa[100000],left[100000],right[100000],pre,su,num,root,tree[100000];\nvoid rotate(int x,int &k)\n{\n    int y=fa[x],z=fa[y],l,r,y1;\n    if (left[y]==x) l=0;\n    else l=1;\n    r=l^1;\n    if (y==k) k=x;\n    else\n    {\n        if (left[z]==y) left[z]=x;\n        else right[z]=x;\n    }\n    fa[x]=z,fa[y]=x;\n    if (r) fa[right[x]]=y,y1=right[x];\n    else fa[left[x]]=y,y1=left[x];\n    if (l) right[y]=y1;\n    else left[y]=y1;\n    if (r) right[x]=y;\n    else left[x]=y; \n    \n}\nvoid splay(int x,int &k)\n{\n    while (x!=k)\n    {\n        int y=fa[x],z=fa[y];\n        if (y!=k)\n            if ((left[y]==x)^(left[z]==y))\n                rotate(x,k);\n            else rotate(y,k);\n        rotate(x,k);\n    }\n}\nvoid insert(int key,int &k,int father)\n{\n    if (!k) \n    {\n        fa[++num]=father;\n        tree[num]=key;\n        k=num;\n        splay(k,root);\n        return;\n    }\n    if (key>=tree[k])\n        insert(key,right[k],k);\n    else insert(key,left[k],k);\n}\nvoid prev(int k,int key)\n{\n    if (!k) return;\n    if (tree[k]<=key)\n    {\n        pre=k;\n        prev(right[k],key);\n    }\n    else prev(left[k],key);\n}\nvoid sub(int k,int key)\n{\n    if (!k) return;\n    if (tree[k]>=key)\n    {\n        su=k;\n        sub(left[k],key);\n    }\n    else sub(right[k],key);\n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n        memset(left,0,sizeof(left));\n        memset(right,0,sizeof(right));\n        memset(tree,0,sizeof(tree));\n        memset(fa,0,sizeof(fa));\n        int a;\n        scanf(\"%d\",&a);\n        int ans=a;\n        root=num=0;\n        insert(a,root,0);\n        for (int i=2;i<=n;i++)\n        {\n            int a1;\n            scanf(\"%d\",&a1);\n            prev(root,a1);\n            sub(root,a1);\n            int sum;\n            if (!pre) \n            {sum=abs(tree[su]-a1);splay(su,root);}\n            else if (!su) {sum=abs(tree[pre]-a1),splay(pre,root);}\n            else \n{\nsum=min(abs(tree[su]-a1),abs(tree[pre]-a1));\nsplay(su,root);\nsplay(pre,root);\n}//\u8fd9\u91cc\u627e\u5b8c\u540e\u4e00\u5b9a\u8981\u628a\u8fd9\u4e2a\u70b9\u8f6c\u5230\u6839.\n            ans+=sum;\n            insert(a1,root,0); \n        }\n        printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1489751312,
        "uid": 29450,
        "name": "huangjunqi1",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u6392\u5e8f\uff0c\u7136\u540e\u4e3a\u4fdd\u8bc1\u5747\u644a$\\Theta(n)$\u4ee5\u4e0b\u7684\u590d\u6742\u5ea6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5355\u8c03\u961f\u5217\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6$\\Theta(nlogn)$\uff0c\u74f6\u9888\u5728\u6392\u5e8f\u3002\n\n\u5b9e\u9645\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528\u57fa\u6570\u6392\u5e8f\u5c06\u65f6\u95f4\u964d\u5230$\\Theta(n+|ai|)$\uff0c\u7136\u800c\u4f3c\u4e4e\u53d8\u6162\u4e86\u2026\u2026\n\n\u6216\u8005\u4f7f\u7528\u6876\u6392\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230$\\Theta(n)$\uff0c\u4f46\u662f\u610f\uff08\u5df2\uff09\u4e49\uff08\u7ecf\uff09\u4e0d\uff08\u80fd\uff09\u5927\uff08\u8fc7\uff09\n\n\u9644\u4ee3\u7801\uff08STL\u6392\u5e8f\u7248\uff09\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\ninline void chkmin(int& a,int b)\n{\n\tif(a>b)\n\t{\n\t\ta = b;\n\t}\n}\n\nstruct dt\n{\n\tint num;\n\tint id;\n};\n\ndt di[35005];\n\nbool cmp(dt a,dt b)\n{\n\treturn a.num<b.num;\n}\n\nint q[35005];\nint mind[35005];\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tscanf(\"%d\",&di[i].num);\n\t\tdi[i].id = i;\n\t\tmind[i] = 0x7f7f7f7f;\n\t}\n\tmind[1] = di[1].num;\n\t\n\tsort(di+1,di+1+n,cmp);\n\t\n\tint head = 0;\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\twhile(head && di[q[head]].id>di[i].id)\n\t\t{\n\t\t\t--head;\n\t\t}\n\t\tif(head)\n\t\t{\n\t\t\tchkmin(mind[di[i].id],di[i].num-di[q[head]].num);\n\t\t}\n\t\t++head;\n\t\tq[head] = i;\n\t}\n\t\n\thead = 0;\n\tfor(int i=n; i>=1; --i)\n\t{\n\t\twhile(head && di[q[head]].id>di[i].id)\n\t\t{\n\t\t\t--head;\n\t\t}\n\t\tif(head)\n\t\t{\n\t\t\tchkmin(mind[di[i].id],di[q[head]].num-di[i].num);\n\t\t}\n\t\t++head;\n\t\tq[head] = i;\n\t}\n\t\n\tint ans = 0;\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tans += mind[i];\n\t}\n\t\n\tprintf(\"%d\",ans);\n}\n```\n\n\uff08\u5927\u4f6c\u6765\u5199\u7684\u8bdd\u53ef\u80fd\u53ea\u898150\u884c\uff09",
        "postTime": 1562737571,
        "uid": 49458,
        "name": "\u6728\u6728\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "\u6211\u7edd\u5bf9\u662fSplay\u7684\u53d7\u5bb3\u8005\u3002\n\n\u4ee3\u7801\u4e11\u957f\u4e0d\u8bf4\uff0c\u8fd8\u7279\u5bb9\u6613\u6bd2\u7624\uff08\u8eab\u540e\u6709\u4e00\u6bb5\u4e0d\u5f97\u4e0d\u8bf4\u7684\u6545\u4e8b\uff09\n\n\u4f46\u8fd8\u662f\u5199\u51fa\u6765\u4e86\u5475\u5475\u5475...\n\n\u90a3\u5c31\u53d1\u4e00\u53d1\u5427\n\n```\n#include<iostream>\n#include<iomanip>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nint n,root,tot,ans;\nstruct TREE {\n\tint lc,rc;\n\tint ln,rn;\n\tint fa,data;\n} t[40000];\nvoid zig(int x) {\n\tint y=t[x].fa;\n\tt[y].lc=t[x].rc;\n\tif(t[x].rc)t[t[x].rc].fa=y;\n\tt[x].fa=t[y].fa;\n\tif(t[y].fa) {\n\t\tif(y==t[t[y].fa].lc)t[t[y].fa].lc=x;\n\t\telse t[t[y].fa].rc=x;\n\t}\n\tt[y].fa=x;\n\tt[x].rc=y;\n\tt[y].ln=t[x].rn;\n\tt[x].rn=t[y].ln+t[y].rn+1;\n}\nvoid zag(int x) {\n\tint y=t[x].fa;\n\tt[y].rc=t[x].lc;\n\tif(t[x].lc)t[t[x].lc].fa=y;\n\tt[x].fa=t[y].fa;\n\tif(t[y].fa) {\n\t\tif(y==t[t[y].fa].lc)t[t[y].fa].lc=x;\n\t\telse t[t[y].fa].rc=x;\n\t}\n\tt[y].fa=x;\n\tt[x].lc=y;\n\tt[y].rn=t[x].ln;\n\tt[x].ln=t[y].ln+t[y].rn+1;\n}\nvoid Splay(int x) {\n\tint p;\n\twhile(t[x].fa) {\n\t\tp=t[x].fa;\n\t\tif(t[p].fa==0) {\n\t\t\tif(x==t[p].lc)zig(x);\n\t\t\telse zag(x);\n\t\t\tbreak;\n\t\t}\n\t\tif(x==t[p].lc) {\n\t\t\tif(p==t[t[p].fa].lc)zig(p),zig(x);\n\t\t\telse zig(x),zag(x);\n\t\t} else {\n\t\t\tif(p==t[t[p].fa].rc)zag(p),zag(x);\n\t\t\telse zag(x),zig(x);\n\t\t}\n\t}\n\troot=x;\n}\nint QQ() {\n\tint p=t[root].lc;\n\twhile(p) {\n\t\tif(t[p].rc==0)break;\n\t\tp=t[p].rc;\n\t}\n\tif(p)return t[p].data;\n\treturn 0x3f3f3f3f;\n}\nint BackMin() {\n\tint p=t[root].rc;\n\twhile(p) {\n\t\tif(t[p].lc==0)break;\n\t\tp=t[p].lc;\n\t}\n\tif(p)return t[p].data;\n\treturn 0x3f3f3f3f;\n}\nint add(int x) {\n\tint p=root,f;\n\twhile(p) {\n\t\tf=p;\n\t\tif(x<=t[p].data) {\n\t\t\tt[p].ln++;\n\t\t\tp=t[p].lc;\n\t\t} else {\n\t\t\tt[p].rn++;\n\t\t\tp=t[p].rc;\n\t\t}\n\t}\n\ttot++;\n\tt[tot].data=x;\n\tif(root==0) {\n\t\troot=tot;\n\t\treturn x;\n\t}\n\tt[tot].fa=f;\n\tif(x<=t[f].data)t[f].lc=tot;\n\telse t[f].rc=tot;\n\tSplay(tot);\n\treturn min(abs(QQ()-x),abs(BackMin()-x));\n}\nint main() \n{\n\tint i,j,x;\n\tcin>>n;\n\tfor(i=1; i<=n; i++) {\n\t\tcin>>x;\n\t\tans+=add(x);\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1550405099,
        "uid": 89490,
        "name": "AmadeusSG",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "### [\u66f4\u597d\u7684\u9605\u8bfb](https://www.cnblogs.com/yzhang-rp-inf/p/9959886.html)\n\n### \u5e73\u8861\u6811\u677f\u9898\n\n### [\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P2234)\n\n### \u8fd9\u9053\u9898\u8981\u7528Splay\uff0c\u6211\u535a\u5ba2\u91cc\u6709[\u5bf9Splay\u7684\u8be6\u7ec6\u4ecb\u7ecd](https://www.cnblogs.com/yzhang-rp-inf/p/9957906.html)\n\n\u8fd9\u9053\u9898\u76ee\u8fd8\u7b97\u6bd4\u8f83\u6a21\u677f\u7684\n\n\u6bcf\u8f93\u5165\u4e00\u4e2a\u6570\uff0c**\u5148\u4e0d\u8981\u63d2\u5165**\n\n\u8981\u6c42\u4e00\u4e0b\u524d\u9a71\u548c\u540e\u7ee7\u4e0ex\u5dee\u7684\u6700\u5c0f\u503c\u5e76\u52a0\u5230\u7b54\u6848\u4e2d\n\n\u518d\u628ax\u63d2\u5165\u5e73\u8861\u6811\n\n**\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\u8fc7\u4e0d\u4e86\u6837\u4f8b**\n\n\u53d1\u73b0\u76f8\u540c\u7684\u6570\u5b57\u662f\u4f1a\u6709\u7684\n\n\u6240\u4ee5\u8fd8\u8981\u5199find\u51fd\u6570\uff0c\u8981\u591a\u52a0\u4e00\u4e2a\u53d8\u91cf\u6765\u6bd4\u6700\u5c0f\uff1a\n\n```cpp\nfind(x)!=0?0:inf;\n```\n\n\u5269\u4e0b\u5c31\u6ca1\u4ec0\u4e48\u95ee\u9898\u4e86qaq\n\n```cpp\n#pragma GCC optimize(\"O3\")\n#include <bits/stdc++.h>\n#define root tree[0].ch[1]\n#define inf 1000000005\nusing namespace std;\ninline int read()\n{\n\tregister int x=0,f=1;register char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n\treturn x*f;\n}\ninline int Min(register int a,register int b)\n{\n\treturn a<b?a:b;\n}\nstruct Splay{\n\tint fa,ch[2],sum,rec,v;\n}tree[32780];\nint tot=0;\ninline bool findd(register int x)\n{\n\treturn x==tree[tree[x].fa].ch[0]?0:1;\n}\ninline void connect(register int x,register int fa,register int son)\n{\n\ttree[x].fa=fa;\n\ttree[fa].ch[son]=x;\n}\ninline void update(register int x)\n{\n\ttree[x].sum=tree[tree[x].ch[0]].sum+tree[tree[x].ch[1]].sum+tree[x].rec;\n}\ninline void rotate(register int x)\n{\n\tint Y=tree[x].fa;\n\tint R=tree[Y].fa;\n\tint Yson=findd(x);\n\tint Rson=findd(Y);\n\tint B=tree[x].ch[Yson^1];\n\tconnect(B,Y,Yson);\n\tconnect(Y,x,Yson^1);\n\tconnect(x,R,Rson);\n\tupdate(Y),update(x);\n}\ninline void splay(register int x,register int to)\n{\n\tto=tree[to].fa;\n\twhile(tree[x].fa!=to)\n\t{\n\t\tint y=tree[x].fa;\n\t\tif(tree[y].fa==to)\n\t\t\trotate(x);\n\t\telse if(findd(x)==findd(y))\n\t\t\trotate(y),rotate(x);\n\t\telse\n\t\t\trotate(x),rotate(x);\n\t}\n}\ninline int newpoint(register int v,register int fa)\n{\n\ttree[++tot].v=v;\n\ttree[tot].fa=fa;\n\ttree[tot].sum=tree[tot].rec=1;\n\treturn tot;\n}\ninline void Insert(register int x)\n{\n\tint now=root;\n\tif(root==0)\t\n\t{\n\t\tnewpoint(x,0);\n\t\troot=tot;\n\t}\n\telse\n\t{\n\t\twhile(19260817)\n\t\t{\n\t\t\t++tree[now].sum;\n\t\t\tif(x==tree[now].v)\n\t\t\t{\n\t\t\t\t++tree[now].rec;\n\t\t\t\tsplay(now,root);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tint nxt=x<tree[now].v?0:1;\n\t\t\tif(!tree[now].ch[nxt])\n\t\t\t{\n\t\t\t\tint p=newpoint(x,now);\n\t\t\t\ttree[now].ch[nxt]=p;\n\t\t\t\tsplay(p,root);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnow=tree[now].ch[nxt];\n\t\t}\n\t}\n}\ninline int find(register int v)\n{\n\tint now=root;\n\twhile(19260817)\n\t{\n\t\tif(tree[now].v==v)\n\t\t{\n\t\t\tsplay(now,root);\n\t\t\treturn now;\n\t\t}\n\t\tint nxt=v<tree[now].v?0:1;\n\t\tif(!tree[now].ch[nxt])\n\t\t\treturn 0;\n\t\tnow=tree[now].ch[nxt];\n\t}\n}\ninline int lower(register int v)\n{\n\tint now=root;\n\tint ans=-inf;\n\twhile(now)\n\t{\n\t\tif(tree[now].v<v&&tree[now].v>ans)\n\t\t\tans=tree[now].v;\n\t\tif(v>tree[now].v)\n\t\t\tnow=tree[now].ch[1];\n\t\telse\n\t\t\tnow=tree[now].ch[0];\n\t}\n\treturn ans;\n}\ninline int upper(register int v)\n{\n\tint now=root;\n\tint ans=inf;\n\twhile(now)\n\t{\n\t\tif(tree[now].v>v&&tree[now].v<ans)\n\t\t\tans=tree[now].v;\n\t\tif(v<tree[now].v)\n\t\t\tnow=tree[now].ch[0];\n\t\telse\n\t\t\tnow=tree[now].ch[1];\n\t}\n\treturn ans;\n}\nint main()\n{\n\tint n=read();\n\tint res=0;\n\tfor(register int i=1;i<=n;++i)\n\t{\n\t\tint x=read();\n\t\tif(i==1)\n\t\t\tres=x;\n\t\telse\n\t\t\tres+=Min(Min(fabs(lower(x)-x),fabs(upper(x)-x)),find(x)!=0?0:inf);\n\t\tInsert(x);\n\t}\n\tprintf(\"%d\",res);\n\treturn 0;\n } \n```\n",
        "postTime": 1542195283,
        "uid": 37881,
        "name": "yzhang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "\n\u5927\u591a\u6570\u9898\u89e3\u5199\u7684\u90fd\u662fSplay\u3001STLset\u7b49\u5e73\u8861\u6811\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u7279\u522b\u4f18\u7f8e\u7684\u6570\u636e\u7ed3\u6784\uff1a\u65e0\u65cb\u8f6cTreap\n\n\u4f18\u70b9\uff1a\n\n1\u3001\u7b80\u77ed\u597d\u5199\uff0c\u597d\u8c03\uff0c\u5e73\u8861\u6811\u65b0\u624b\uff08\u6bd4\u5982\u6211\uff09\u6613\u4e8e\u4e0a\u624b\u3002\n\n2\u3001\u652f\u6301\u533a\u95f4\u64cd\u4f5c\uff0c\u652f\u6301\u53ef\u6301\u4e45\u5316\u3002\n\n\u552f\u4e00\u7f3a\u70b9\uff1a\u7565\u6162\u4e8eSplay\u548cTreap\uff08\u5e38\u6570\u5408\u7406\u7684\u8bdd\uff0c\u4e5f\u4e0d\u4f1a\u6162\u7279\u522b\u591a\uff09\u3002\n\n**\uff08\u6240\u4ee5\u6211\u666e\u901a\u5e73\u8861\u6811\u548c\u6587\u827a\u5e73\u8861\u6811\u90fd\u662f\u7528\u65e0\u65cbTreap\u6c34\u8fc7\u53bb\u7684~\uff09**\n\n\u4f20\u9001\u95e8\uff1a\n\n[P3369 \u3010\u6a21\u677f\u3011\u666e\u901a\u5e73\u8861\u6811](https://www.luogu.org/problemnew/show/P3369)\n\n[P3391 \u3010\u6a21\u677f\u3011\u6587\u827a\u5e73\u8861\u6811](https://www.luogu.org/problemnew/show/P3391)\n\n\u672c\u9898\u6bd4\u8f83\u88f8\uff1a\u67e5\u627e\u5df2\u6709\u5143\u7d20\u4e2d\u6700\u8fd1\u7684\u5143\u7d20\uff0c\u663e\u7136\u8fd9\u4e2a\u5143\u7d20\u4e0d\u662f\u524d\u9a71\u5c31\u662f\u540e\u7ee7\u3002\u4e8e\u662f\u5199\u4e00\u4e2a\u5e73\u8861\u6811\u6765\u7ef4\u62a4\u8fd9\u4e2a\u5e8f\u5217\uff0c\u652f\u6301\u63d2\u5165\u548c\u524d\u9a71\u540e\u7ee7\u3002\n\n\u4e8e\u662f\u5f88\u5f00\u5fc3\u7684\u5199\u4e86\u4e00\u7bc7\u65e0\u65cbTreap\uff0c\u7a0d\u5fae\u6539\u4e00\u6539\u67e5\u540e\u7ee7\u5c31\u53ef\u4ee5\u652f\u6301\u5224\u65ad\u662f\u5426\u5b58\u5728\u76f8\u540c\u5143\u7d20\u5566~\n\n\u5c0f\u7ec6\u8282\uff1a\u63d2\u5165\u4e00\u4e2aINF\u548c\u4e00\u4e2a-INF\u6765\u907f\u514d\u67e5\u5230\u4e00\u4e9b\u4e0d\u5b58\u5728\u7684\u5143\u7d20\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n\nusing namespace std ;\n\nconst int MaxN = 32800 ;\n\nint Seed = 12345678 ;\ninline int Rand() {\n\treturn Seed ^= Seed << 5 ^ Seed >> 5 ;\n}\n\nstruct NoRotateTreap {\n\t\n\tint Pos[MaxN] , Val[MaxN] , Ls[MaxN] , Rs[MaxN] , Size[MaxN] , Cnt , Root , X , Y , Z , Ans ;\n\tinline void Clear() {\n\t\tCnt = Root = 0 ;\n\t\tmemset( Ls , 0 , sizeof( Ls ) ) ;\n\t\tmemset( Rs , 0 , sizeof( Rs ) ) ;\n\t}\n\tinline int New( int V ) {\n\t\tPos[++Cnt] = Rand() ;\n\t\tSize[Cnt] = 1 ;\n\t\tVal[Cnt] = V ;\n\t\treturn Cnt ;\n\t}\n\tinline int Update( int Nod ) {\n\t\tSize[Nod] = Size[Ls[Nod]] + Size[Rs[Nod]] + 1 ;\n\t}\n\tint Merge( int A , int B ) {\n\t\tif( not ( A and B ) ) return A ^ B ;\n\t\tif( Pos[A] < Pos[B] ) {\n\t\t\tRs[A] = Merge( Rs[A] , B ) ;\n\t\t\tUpdate( A ) ;\n\t\t\treturn A ;\n\t\t}\n\t\telse {\n\t\t\tLs[B] = Merge( A , Ls[B] ) ;\n\t\t\tUpdate( B ) ;\n\t\t\treturn B ;\n\t\t}\n\t}\n\tvoid Split( int Nod , int K , int &A , int &B ) {\n\t\tif( not Nod ) {\n\t\t\tA = B = 0 ;\n\t\t\treturn ;\n\t\t}\n\t\tif( Val[Nod] <= K ) {\n\t\t\tA = Nod ;\n\t\t\tSplit( Rs[Nod] , K , Rs[Nod] , B ) ;\n\t\t}\n\t\telse {\n\t\t\tB = Nod ;\n\t\t\tSplit( Ls[Nod] , K , A , Ls[Nod] ) ;\n\t\t}\n\t\tUpdate( Nod ) ;\n\t}\n\tinline int Kth( int Nod , int K ) {\n\t\twhile( 1 ) {\n\t\t\tif( K <= Size[Ls[Nod]] ) Nod = Ls[Nod] ;\n\t\t\telse {\n\t\t\t\tif( K == Size[Ls[Nod]] + 1 ) return Val[Nod] ;\n\t\t\t\tK -= Size[Ls[Nod]] + 1 ;\n\t\t\t\tNod = Rs[Nod] ;\n\t\t\t}\n\t\t}\n\t}\n\tinline int Last( int Num ) {\n\t\tSplit( Root , Num - 1 , X , Y ) ;\n\t\tAns = Kth( X , Size[X] ) ;\n\t\tRoot = Merge( X , Y ) ;\n\t\treturn Ans ;\n\t}\n\tinline int Next( int Num ) { // \u540c\u65f6\u67e5\u627e\u662f\u5426\u5b58\u5728\u76f8\u7b49\u7684\u5143\u7d20 \n\t\tSplit( Root , Num , X , Y ) ;\n\t\tSplit( X , Num - 1 , X , Z ) ;\n\t\tAns = Size[Z] ? Num : Kth( Y , 1 ) ;\n\t\tRoot = Merge( Merge( X , Z ) , Y ) ;\n\t\treturn Ans ;\n\t}\n\tinline void Insert( int Num ) {\n\t\tSplit( Root , Num , X , Y ) ;\n\t\tRoot = Merge( Merge( X , New( Num ) ) , Y ) ;\n\t}\n\t\n} T ;\n\nint N , X ;\n\ninline int Abs( int A ) { return A < 0 ? -A : A ; }\ninline int Min( int A , int B ) { return A < B ? A : B ; }\nint Totans ;\n\nint main() {\n\t\n\tscanf( \"%d%d\" , &N , &Totans ) ;\n\tT.Clear() ;\n\tT.Insert( Totans ) ;\n\tT.Insert( 3333333 ) ;\n\tT.Insert( -3333333 ) ;\n\tfor(register int i = 1 ; ++i <= N ; ) {\n\t\tscanf( \"%d\" , &X ) ;\n\t\tTotans += Min( Abs( T.Last( X ) - X ) , Abs( T.Next( X ) - X ) ) ;\n\t\tT.Insert( X ) ;\n\t}\n\treturn not printf( \"%d\\n\" , Totans ) ;\n\t\n}\n```",
        "postTime": 1540273573,
        "uid": 23323,
        "name": "\u7528\u6237\u5df2\u6ce8\u9500",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "\u5584\u7528\u4e09\u76ee\u8fd0\u7b97\u7b26\uff0c\u4f60\u7684\u5e73\u8861\u6811\u4e5f\u80fd\u53d8\u5f97\u50cf\u6211\u4e00\u6837\u77ed\u3002\n\u672c\u9898\u5e73\u8861\u6811\u53ea\u8981\u652f\u6301\u63d2\u5165\u548c\u67e5\u627e\u524d\u9a71\u540e\u7ee7\u5373\u53ef\uff0c\u6211\u4f7f\u7528\u7684\u662ffhqTreap\uff0c\n\u7ec6\u8282\u4e0a\u5728\u627e\u524d\u9a71\u548c\u540e\u7ee7\u65f6\u4e0d\u518d\u53bb\u627e\u4e25\u683c\u7684\u524d\u9a71\u540e\u7ee7\uff0c\u4e5f\u5c31\u662f\u8ba9\u4ed6\u80fd\u627e\u5230\u548c\u81ea\u5df1\u4e00\u6837\u7684\u6570\uff0c\u52a0\u5feb\u8bfb\u7684\u8bdd\u8981\u5224\u8d1f\u6570\u3002\n\n\u4e0b\u9762\u662f~~\u6bd2\u7624~~\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <ctime>\n#include <cstdlib>\n#include <algorithm>\n\n#define N 50010\n\ninline int read()\n{\n\tregister char c; register int x; register bool f = false;\n\twhile(!isdigit(c = getchar()))if(c == '-')f = true; x = c ^ 48;\n\twhile(isdigit(c = getchar()))x = (x << 1) + (x << 3) + (c ^ 48);\n\treturn f ? -x : x;\n}\n\nint root, cnt;\nint k[N], rd[N], size[N], l[N], r[N];\nint x, y, z, ans;\n\ninline void update(int n)\n{\n\tsize[n] = (l[n] ? size[l[n]] : 0) + (r[n] ? size[r[n]] : 0) + 1;\n}\n\ninline int newnode(int key)\n{\n\treturn k[++ cnt] = key, rd[cnt] = rand(), size[cnt] = 1, l[cnt] = 0, r[cnt] = 0, cnt;\n}\n\nint split(int n, int key)\n{\n\treturn (!n) ? (x = y = 0) : (k[n] >= key ? (split(l[n], key), l[n] = y, update(y = n), 1) : (split(r[n], key), r[n] = x, update(x = n), 1));\n}\n\nint merge(int a, int b)\n{\n\treturn (!a || !b) ? (a + b) : (rd[a] <= rd[b] ? (r[a] = merge(r[a], b), update(a), a) : (l[b] = merge(a, l[b]), update(b), b));\n}\n\ninline void insert(int key)\n{\n\tsplit(root, key), root = merge(merge(x, newnode(key)), y);\n}\n\ninline int minn(int n)\n{\n\treturn l[n] ? minn(l[n]) : k[n];\n}\n\ninline int maxn(int n)\n{\n\treturn r[n] ? maxn(r[n]) : k[n];\n}\n\ninline int lower(int key)\n{\n\treturn split(root, key), ans = x ? maxn(x) : -0x7fffffff, root = merge(x, y), ans;\n}\n\ninline int upper(int key)\n{\n\treturn split(root, key), ans = y ? minn(y) : 0x7fffffff, root = merge(x, y), ans;\n}\n\nint main()\n{\n\tsrand(time(NULL));\n\n\tint n = read(), ans = read();\n\n\tinsert(ans);\n\n\tfor(int i = 2; i <= n; i ++)\n\t{\n\t\tlong long w = read();\n\t\tans += std::min(llabs(w - lower(w)), llabs(w - upper(w)));\n\t\tinsert(w);\n\t}\n\t\n\tprintf(\"%d\", ans);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1532953204,
        "uid": 82814,
        "name": "Wei_taming",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u70b9\u8fd9\u91cc](https://blog.csdn.net/A_Comme_Amour/article/details/79768870)\n\n\n\u9898\u76ee\n-\n\n[\u4f20\u9001\u95e8](https://www.lydsy.com/JudgeOnline/problem.php?id=1588)\n\n\u9898\u89e3\n-\n\n\u6bd4\u5e73\u8861\u6811\u6a21\u677f\u8fd8\u8981\u7b80\u5355\u7684\u677f\u5b50\u9898\uff1b\n\u5c31\u662f\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\uff0c\u6c42\u5176\u524d\u9a71\u548c\u540e\u7ee7\u5373\u53ef\uff0c\u6c42\u5dee\u7d2f\u52a0\u8f83\u5c0f\u503c\u5373\u53ef\uff1b\u6211\u4eec\u53ef\u4ee5\u4e8b\u5148\u518d\u5e73\u8861\u6811\u4e2d\u63d2\u5165 -inf \u548c inf\uff1b\n\u6ce8\u610f\u5143\u7d20\u662f\u8bfe\u91cd\u590d\u7684\uff0ccnt\u6570\u7ec4\u5c31\u4e0d\u8981\u7528\u4e86\n\n\u4ee3\u7801\n-\n\n\n```\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int maxn=1e5;\nconst int inf=1e9;\nint read(){\n    char ch=getchar(); int now=0,f=1;\n    while (ch<'0' || ch>'9') {if (ch=='-') f=-1; ch=getchar();}\n    while (ch>='0'&&ch<='9') {now=(now<<1)+(now<<3)+ch-'0'; ch=getchar();}\n    return now*f;}\nint n,a[maxn],f[maxn],ch[maxn][2],size[maxn],cnt[maxn],key[maxn],sz,rt;\n\nint Abs(int x) {return x<0?-x:x;}\nbool get(int x) {return ch[f[x]][1]==x;}\nvoid clear(int x) {f[x]=ch[x][1]=ch[x][0]=size[x]=cnt[x]=key[x]=0;}\nvoid pushup(int x)\n{\n\tif (!x) return;\n\tsize[x]=cnt[x]+size[ch[x][0]]+size[ch[x][1]];\n}\nvoid rotate(int x)\n{\n    int old=f[x],oldf=f[old],which=get(x);\n    ch[old][which]=ch[x][which^1]; f[ch[x][which^1]]=old;\n    ch[x][which^1]=old; f[old]=x;\n    f[x]=oldf;\n    if (oldf) ch[oldf][ch[oldf][1]==old] = x;\n    pushup(old); pushup(x);\n}\n\nvoid splay(int x,int goal)\n{\n    for (int fa; (fa=f[x])!=goal; rotate(x))\n        if (f[fa]!=goal) \n            rotate(get(x)==get(fa) ?fa:x);\n    if (!goal) rt=x;\n}\n\nvoid insert(int x)\n{\n    if (rt==0)\n    {\n        sz++; key[sz]=x; rt=sz;\n        cnt[sz]=size[sz]=1;\n        f[sz]=ch[sz][1]=ch[sz][0]=0;\n        return;\n    }\n    int now=rt,fa=0;\n    while (1)\n    {\n        fa=now; now=ch[now][x>key[now]];\n        if (now==0)\n        {\n            sz++; //\u8fd9\u91cc\u4e0d\u8981\u66f4\u65b0rt \n            cnt[sz]=size[sz]=1;\n            ch[sz][0]=ch[sz][1]=0;\n            ch[fa][x>key[fa]]=sz;\n            f[sz]=fa;\n\t\t\tkey[sz]=x;\n            pushup(fa); splay(sz,0); return;\n        }\n    }\n}\n\nint pre()\n{\n    int now=ch[rt][0];\n    while (ch[now][1]) now=ch[now][1];\n    return now;\n}\nint next()\n{\n\tint now=ch[rt][1]; if (!now) return 2*inf;\n\twhile (ch[now][0]) now=ch[now][0];\n\treturn now;\n}\n\nint ans;\nint main()\n{\n\tn=read();\n\tinsert(-inf); insert(inf);\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tint x=read(); insert(x);\n\t\tif (i==1) {ans=x; continue;}\n\t\tint pr=key[pre()]; int nx=key[next()];\n\t\t\n\t\tint d=min(Abs(x-pr),Abs(x-nx));\n\t\tans+=d;\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n\n\u603b\u7ed3\n-\n\u7075\u6d3b\u4f7f\u7528\u5e73\u8861\u6811\n\nps \u60f3\u5b66\u4e60\u5e73\u8861\u6811\u7684\u53ef\u4ee5\u770b\u770b\u6211\u7684blog\uff1ahttps://blog.csdn.net/a_comme_amour/article/details/79382104",
        "postTime": 1522477165,
        "uid": 48036,
        "name": "\u79cb\u65e5\u79c1\u8bed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "\u6ca1\u6709\u6811\u72b6\u6570\u7ec4\u7684\u9898\u89e3\u7684\u8bdd\u90a3\u5c31\u8ba9\u6211\u6765\u5199\u4e00\u4e2a\u5427\u3002\u3002\n\n\u4f18\u70b9\uff1a\u7801\u91cf\u77ed\uff0c\u9002\u5408\u4e0d\u4f1astl\u7684\u849f\u84bb\u9009\u624b\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,x,sum,ans,f1[5000000],f2[5000000];\nint read(){\n    char c=getchar();while (c!='-'&&(c<'0'||c>'9'))c=getchar();\n    int k=1,kk=0;if (c=='-')k=-1;else kk=c-'0';c=getchar();\n    while (c>='0'&&c<='9')kk=kk*10+c-'0',c=getchar();return kk*k;\n}void putit1(int x){for (int i=x;i<=3000000;i+=i&(-i))f1[i]=max(f1[i],x);}\nvoid putit2(int x){for (int i=x;i<=3000000;i+=i&(-i))f2[i]=max(f2[i],x);}\nint findit1(int x){int ans=-1e9;for (;x;x-=x&(-x))ans=max(ans,f1[x]);return ans;}\nint findit2(int x){int ans=-1e9;for (;x;x-=x&(-x))ans=max(ans,f2[x]);return ans;}\nsigned main(){\n    memset(f1,200,sizeof(f1));memset(f2,200,sizeof(f2));//\u6700\u5c0f\u503c\u4e0d\u4e00\u5b9a\u662f0\u6240\u4ee5\u8981\u521d\u59cb\u5316\uff08\u6211\u88ab\u5751\u4e86\n    n=read();ans=read();putit1(ans+1500000);putit2(1500000-ans);\n    for (int i=2;i<=n;i++){\n        x=read()+1500000;sum=x-findit1(x);putit1(x);//\u5728\u5c0f\u4e8ex\u7684\u5143\u7d20\u4e2d\u627e\u6700\u5927\u7684\n        x=3000000-x;sum=min(sum,x-findit2(x));putit2(x);//\u5728\u5927\u4e8ex\u7684\u5143\u7d20\u4e2d\u627e\u6700\u5c0f\u7684\n        ans+=sum;\n    }cout<<ans<<endl;\n}\n```",
        "postTime": 1505811004,
        "uid": 44165,
        "name": "Starria\u7684\u8111\u6b8b\u7c89",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "STL set \u53ef\u6c34\u8fc7\u3002\u7ef4\u62a4\u4e00\u4e2aset\uff0c\u6bcf\u8f93\u5165\u4e00\u4e2a\u6570lower\\_bound\u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u5b83\u7684\u6570\uff0c\u4ee5\u53ca\u524d\u9762\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u5b83\u7684\u6570\uff0c\u6c42\u5dee\u53d6\u6700\u5c0f\u503c\u7d2f\u52a0\n\n```cpp\n#include<cstdio>\n#include<set>\n#include<cmath>\nusing namespace std;\nvoid awd(){\n    int n;\n    scanf(\"%d\",&n);\n    int ans=0;\n    set<int> s;\n    while(n--){\n        int t;\n        scanf(\"%d\",&t);\n        if(!s.empty()){\n            set<int>::const_iterator ge(s.lower_bound(t));\n            set<int>::const_iterator lt(ge);\n            if(ge!=s.begin())\n                --lt;\n            if(ge==s.end())\n                --ge;\n            ans+=min(abs(t-*ge),abs(t-*lt));\n        }else ans+=t;\n        s.insert(t);\n    }\n    printf(\"%d\\n\",ans);\n}\nint main(){\n    return awd(),0;\n}\n```",
        "postTime": 1490588638,
        "uid": 35091,
        "name": "tttnns",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "\u5e73\u8861\u6811\u624d\u662f\u6b63\u89e3\u597d\u54a92333\n\nSplay Tree\u4ee3\u7801\uff1a\n\n\u6709\u6ce8\u91ca\uff0c\u8bf7\u5ffd\u7565\u8bfb\u5165\u4f18\u53162333\uff0c\u4e0d\u77e5\u9053\u8981\u4e0d\u8981long long\u54572333\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <vector>\n#include <map>\n#include <stack>\n#include <queue>\n#include <set>\n#include <cmath>\n#include <algorithm>\n#include <ctime>\n#define ll long long\nusing namespace std ;\nconst ll zhf = 1e7 ;\nconst ll maxn = 50010 ;\nbool Read ( ll &x ) {  // \u8bfb\u5165\u4f18\u5316\n    bool f = 0 ; x = 0 ; char c = getchar() ;\n    while ( !isdigit(c) ) {\n        if ( c == '-' ) f = 1 ;\n        if ( c == EOF ) return false ;\n        c = getchar() ;\n    }\n    while ( isdigit(c) ) {\n        x = 10 * x + c - '0' ;\n        c = getchar() ;\n    }\n    if ( f ) x = -x ;\n    return true ;\n}\nll n, m, ch[maxn][2], fa[maxn], root, cnt, val[maxn] ;\n#define L ch][0\n#define R ch][1 //\u5b8f\u5b9a\u4e49\u5de6\u53f3\u513f\u5b50\nvoid Rotate ( int x ) { //\u4e0d\u7528\u8bb0\u5f55\u65b9\u5411\u7684Rotate\n    int y = x[fa], z = y[fa], f = y[R]==x, son = ch[x][f^1] ;\n    if ( y == root ) root = x ;\n    if ( y != root ) ch[z][ z[R]==y ] = x ;\n    fa[x] = z ;\n    fa[y] = x ;\n    if ( son ) fa[son] = y ;\n    ch[y][f] = son ;\n    ch[x][f^1] = y ;\n}\n \nvoid splay ( int x, int tar = 0 ) { // Splay\u51fd\u6570\n    while ( x != root && x[fa] != tar ) {\n        int y = x[fa], z = y[fa], fx = y[R]==x, fy = z[R]==y ;\n        if ( z == root || z == tar ) ;\n        else if ( fx^fy ) Rotate(x) ;\n        else Rotate(y) ;\n        Rotate(x) ;\n    }\n}\n\nll new_node ( ll value ) { // \u65b0\u5efa\u8282\u70b9\n    val[++cnt] = value ;\n    cnt[L] = cnt[R] = cnt[fa] = 0 ;\n    return cnt ;\n}\n\nvoid insert ( ll x, ll now ) { //\u63d2\u5165\n    if ( !root ) {\n        root = new_node(x) ;\n        return ;\n    } else {\n        if ( x <= val[now] ) {\n            if ( now[L] ) insert ( x, now[L] ) ;\n            else ( fa[new_node(x)] = now ) [L] = cnt ;\n        } else {\n            if ( now[R] ) insert ( x, now[R] ) ;\n            else ( fa[new_node(x)] = now ) [R] = cnt ;\n        }\n    }\n}\n\nll Pre ( ll x, ll st ) { // \u524d\u9a71\n    if ( st ) {\n        if ( x[L] && x[L] != cnt ) return Pre ( x[L], 0 ) ;\n        else return -zhf ;\n    } else {\n        if ( x[R] && x[R] != cnt ) return Pre ( x[R], 0 ) ;\n        else return x[val] ;\n    }\n}\n\nll Next ( ll x, bool st ) { // \u540e\u7ee7\n    if ( st ) {\n        if ( x[R] && x[R] != cnt ) return Next ( x[R], 0 ) ;\n        else return zhf ;\n    } else {\n        if ( x[L] && x[L] != cnt ) return Next ( x[L], 0 ) ;\n        else return x[val] ;\n    }\n}\nint main() {\n    ll i, j, k, x, y, ans, del, st ;\n    Read(n) ;\n    Read(x) ;\n    root = new_node(x) ;\n    ans = st = x ;\n    for ( i = 2 ; i <= n ; i ++ ) {\n        Read(k) ;\n        insert ( k, root ) ;\n        splay(cnt) ; //\u67e5\u8be2\u524d\u9a71\u540e\u7ee7\u90fd\u662f\u4ece\u5f53\u524d\u70b9\u5f00\u59cb\u7684\uff0c\u8fd9\u6837\u65b9\u4fbf\u5229\u7528\u6392\u5e8f\u4e8c\u53c9\u6811\u7684\u6027\u8d28\n        x = Next(root,1) ;\n        y = Pre(root,1) ;\n        if ( i != 2 ) del = min ( x-k, k-y ) ;\n        else del = abs(st-k) ;\n        ans += del ;\n    }\n    printf ( \"%lld\\n\", ans ) ;\n    return 0 ;\n}\n```",
        "postTime": 1488462018,
        "uid": 17941,
        "name": "Vasily",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "```\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint root;\nstruct node\n{\n\tint d,f,n,c,son[2];//d\u662f\u6743\u503c f\u662f\u7236\u4eb2 n\u662f\u91cd\u70b9 c\u662f\u63a7\u5236\u70b9\u6570 \n}tr[110000];\nint len=0;\nvoid update(int x)//\u66f4\u65b0x\u63a7\u5236\u7684\u70b9\u6570 \n{\n\tint lc=tr[x].son[0],rc=tr[x].son[1];\n\ttr[x].c=tr[lc].c+tr[rc].c+tr[x].n;\n}\nvoid add(int d,int f)//\u6dfb\u52a0\u4e00\u4e2a\u70b9\n{\n\ttr[++len].d=d;tr[len].c=tr[len].n=1;tr[len].f=f;\n\tif(d<tr[f].d) tr[f].son[0]=len;\n\telse tr[f].son[1]=len;\n\ttr[len].son[0]=tr[len].son[1]=0;\n}\n//\u65cb\u8f6c \u5de6(x,0) \u53f3(x,1) (\u7531\u4e0b\u81f3\u4e0a) \nvoid rotate(int x,int w)\n{\n\tint f=tr[x].f,ff=tr[f].f,r,R;//f ff \u7236\u4eb2\u4e0e\u7237\u7237 r \u513f\u8f88 R \u7236\u8f88 \n\t//\u8f6c\u513f\u5b50 \n\tr=tr[x].son[w];R=f;//\u5de6\u65cb\u5c31\u8f6c\u5de6\u513f\u5b50,\u53f3\u65cb\u5c31\u8f6c\u53f3\u513f\u5b50\n\ttr[R].son[1-w]=r;//\u5de6\u65cb\u5c31\u5f53\u53f3\u513f\u5b50,\u53f3\u65cb\u5c31\u5f53\u5de6\u513f\u5b50\n\tif(r!=0) tr[r].f=R;//r\u4e0d\u80fd\u662f\u53f6\u5b50\u8282\u70b9\n\t//\u8f6c\u81ea\u5df1 \n\tr=x;R=ff;\n\tif(f==tr[R].son[0]) tr[R].son[0]=r;\n\telse tr[R].son[1]=r;//\u4ee3\u66ff\u7236\u4eb2 \n\ttr[r].f=R;\n\t//\u8f6c\u7236\u4eb2\n\tr=f;R=x;\n\ttr[R].son[w]=r;//\u5de6\u65cb\u5c31\u8f6c\u5de6\u513f\u5b50,\u53f3\u65cb\u5c31\u8f6c\u53f3\u513f\u5b50\n\ttr[r].f=R;\n\t//\u66f4\u65b0(\u7531\u4e0b\u81f3\u4e0a)\n\tupdate(f);//\u6b64\u65f6f\u5df2\u662fx\u7684\u513f\u5b50 \n\tupdate(x);\n}\n//\u8ba9x\u6210\u4e3art\u7684\u76f4\u7cfb\u5b69\u5b50(\u4e00\u76f4\u5f80\u4e0a\u8df3,\u7c7b\u4f3c\u4e66\u5256,\u5148\u8df3\u7236\u4eb2\uff0c\u518d\u8df3\u81ea\u5df1) \nvoid splay(int x,int rt)\n{\n\twhile(tr[x].f!=rt)\n\t{\n\t\tint f=tr[x].f,ff=tr[f].f;\n\t\tif(ff==rt)\n\t\t{\n\t\t\tif(tr[f].son[0]==x) rotate(x,1);\n\t\t\telse rotate(x,0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(tr[ff].son[0]==f && tr[f].son[0]==x)\n\t\t\t{\n\t\t\t\trotate(f,1);\n\t\t\t\trotate(x,1);\n\t\t\t}\n            else if(tr[ff].son[1]==f && tr[f].son[1]==x)\n\t\t\t{\n\t\t\t\trotate(f,0);\n\t\t\t\trotate(x,0);\n\t\t\t}\n            else if(tr[ff].son[0]==f && tr[f].son[1]==x)\n\t\t\t{\n\t\t\t\trotate(x,0);\n\t\t\t\trotate(x,1);\n\t\t\t}\n            else if(tr[ff].son[1]==f && tr[f].son[0]==x)\n\t\t\t{\n\t\t\t\trotate(x,1);\n\t\t\t\trotate(x,0);\n\t\t\t}\n\t\t}\n\t}\n\tif(rt==0) root=x;\n}\nint findip(int d)//\u627e\u5230\u503c\u4e3ad\u7684\u70b9\u7684\u4f4d\u7f6e\n{\n\t//\u524d\u63d0\uff1a\u4f38\u5c55\u6811\u91cc,\u4ee5x\u4e3a\u6839\u7684\u6811\u91cc,\u5de6\u5b50\u6811\u7684\u6240\u6709\u8282\u70b9\u90fd\u6bd4n\u5c0f,\u53f3\u5b50\u6811\u7684\u6240\u6709\u8282\u70b9\u90fd\u6bd4n\u5927 \n\tint x=root;//\u4ece\u6839\u5f00\u59cb \n\twhile(tr[x].d!=d)\n\t{\n\t\tif(d<tr[x].d)\n\t\t{\n\t\t\tif(tr[x].son[0]==0) break;\n\t\t\tx=tr[x].son[0];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(tr[x].son[1]==0) break;\n\t\t\tx=tr[x].son[1];\n\t\t}\n\t}\n\treturn x;\n}\nvoid ins(int d)//\u63d2\u5165\u4e00\u4e2a\u503c\u4e3ad\u7684\u70b9 \n{\n\tif(root==0)\n\t{\n\t\tadd(d,len);\n\t\troot=len;\n\t\treturn ;\n\t}\n\tint x=findip(d);\n\tif(tr[x].d==d)\n\t{\n\t\ttr[x].n++;\n\t\tupdate(x);\n\t\tsplay(x,0);\n\t}\n\telse\n\t{\n\t\tadd(d,x);\n\t\tupdate(x);\n\t\tsplay(len,0);\n\t}\n}\nvoid del(int d)//\u5220\u9664\u4e00\u4e2a\u503c\u4e3ad\u7684\u70b9\n{\n\tint x=findip(d);splay(x,0);\n\tif(tr[x].n>1)//\u4e0d\u5220\u70b9\u7684\u60c5\u51b5 \n\t{\n\t\ttr[x].n--;\n\t\tupdate(x);\n\t\treturn ;\n\t}\n\tint lc=tr[x].son[0],rc=tr[x].son[1];\n\tif(lc==0 && rc==0) root=len=0;//\u5982\u679c\u6574\u68f5\u6811\u53ea\u6709\u4e00\u4e2a\u70b9 \n\telse if(lc!=0 && rc==0)\n\t{\n\t\troot=lc;\n\t\ttr[lc].f=0;\n\t}\n\telse if(lc==0 && rc!=0)\n\t{\n\t\troot=rc;\n\t\ttr[rc].f=0;\n\t}\n\telse\n\t{\n\t\tint p=lc;\n\t\twhile(tr[p].son[1]!=0) p=tr[p].son[1];\n\t\tsplay(p,x);//\u8ba9x\u7684\u5de6\u5b50\u6811\u4e2d\u6700\u5927\u7684\u70b9\u5f53\u65b0\u6839 \n\t\ttr[p].son[1]=rc;\n\t\ttr[rc].f=p;//\u8ba9x\u7684\u53f3\u5b69\u5b50\u5f53\u65b0\u6839\u7684\u53f3\u5b69\u5b50 \n\t\troot=p;tr[p].f=0;\n\t\tupdate(p);\n\t\t//\u5373\u8ba9\u5c0f\u4e8en\u7684\u6700\u5927\u7684\u70b9\u4ee3\u66ffx\u5f53\u65b0\u6839 \n\t}\n}\nint findpm(int d)//\u627e\u503c\u4e3ad\u7684\u70b9\u5728\u6574\u68f5\u6811\u4e2d\u7684\u5927\u5c0f\u6392\u540d\n{\n\tint x=findip(d);splay(x,0);\n\treturn tr[tr[x].son[0]].c+1;\n}\nint findzhi(int k)//\u627e\u6392\u540d\u4e3ak\u7684\u70b9\u7684\u4f4d\u7f6e\n{\n\tint x=root;\n\twhile(1)\n\t{\n\t\tint lc=tr[x].son[0],rc=tr[x].son[1];\n\t\tif(k<=tr[lc].c) x=lc;//\u5982\u679c\u5de6\u5b50\u6811\u7684\u70b9\u6570\u6bd4k\u5927 \n\t\telse if(k>tr[lc].c+tr[x].n)//\u5982\u679c\u5de6\u5b50\u6811\u7684\u70b9\u6570+\u6211\u8fd9\u91cc\u7684\u91cd\u70b9\u6570<k \n\t\t{\n\t\t\tk-=tr[lc].c+tr[x].n;\n\t\t\tx=rc;\n\t\t}\n\t\telse break;\n\t}\n\tsplay(x,0);\n\treturn tr[x].d;\n}\nint findqq(int d)//\u627e\u503c\u4e3ad\u7684\u70b9\u7684\u524d\u9a71(\u5c0f\u4e8ed,\u4e14\u6700\u5927\u7684\u6570) \n{\n\tint x=findip(d);splay(x,0);\n\tif(tr[x].n>1) return x;\n\tif(d<=tr[x].d && tr[x].son[0]!=0)\n\t{\n\t\tx=tr[x].son[0];\n\t\twhile(tr[x].son[1]!=0) x=tr[x].son[1];\n\t}\n\tif(tr[x].d>=d) x=0;\n\treturn x;\n}\nint findhj(int d)//\u627e\u503c\u4e3ad\u7684\u70b9\u7684\u540e\u7ee7(\u5927\u4e8ed,\u4e14\u6700\u5c0f\u7684\u6570)\n{\n\tint x=findip(d);splay(x,0);\n\tif(tr[x].n>1) return x;\n\tif(d>=tr[x].d && tr[x].son[1]!=0)\n\t{\n\t\tx=tr[x].son[1];\n\t\twhile(tr[x].son[0]!=0) x=tr[x].son[0];\n\t}\n\tif(tr[x].d<=d) x=0;\n\treturn x;\n}\nint n,ans=0;\nint main()\n{\n\tscanf(\"%d\",&n);\n\troot=len=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x;scanf(\"%d\",&x);\n\t\tins(x);\n\t\tint ll=findqq(x),rr=findhj(x);\n\t\tif(ll==0 && rr==0) ans+=x;\n\t\telse if(ll!=0 && rr==0) ans+=x-tr[ll].d;\n\t\telse if(ll==0 && rr!=0) ans+=tr[rr].d-x;\n\t\telse ans+=min(x-tr[ll].d,tr[rr].d-x);\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1543583567,
        "uid": 59901,
        "name": "\u8fdc\u5c71\u6de1\u5f71",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d101Trie\u6811\n\n\n\u8868\u793a\u61d2\u5f97\u5199\u67e5\u627e\u524d\u9a71\u548c\u540e\u7ee7\u7684\u51fd\u6570\u4e86\uff0c\n\n\n\u5c31\u7528kth(\u67e5\u627e\u6392\u540d\u4e3ax\u7684\u6570)\u548crak(\u67e5\u627ex\u7684\u6392\u540d)\u5077\u4e86\u4e2a\u61d2\n\n\n\u627e\u524d\u9a71\u7684\u65f6\u5019\u5c31\u662fkth( rak(x) )\n\n\n\u540e\u7ee7\u662fkth( rak(x) +1) \uff08\u6ce8\u610f\u8fd9\u91cc\u7684\u524d\u9a71\u540e\u7ee7\u4e0d\u662f\u4e25\u683c\u7684\uff0c\u6240\u4ee5\u5141\u8bb8\u91cd\u590d\uff09\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u80fd\u6709\u70b9\u9ad8\uff0c\u4e0d\u8fc7\u8fd8\u662f\u80fd\u6c34\u8fc7\u53bb\u7684\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<iostream>\n#include<cstdlib>\n#include<cstring>\nusing namespace std;\nconst int MAXN=1e6+10,INF=1e7;\ninline char nc()\n{\n    static char buf[MAXN],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,MAXN,stdin),p1==p2)?EOF:*p1++;\n}\ninline int read()\n{\n    char c=nc();int x=0,f=1;\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=nc();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=nc();}\n    return x*f;\n}\nint ch[MAXN][2],num[MAXN],tot=2,root=1;\ninline void insert(int x)\n{\n    x+=INF;\n    for(int i=31,now=root,t; ~i; i--)\n    {\n        if( !(ch[now][ t=x>>i &1 ]) )    ch[now][t]=++tot;\n        num[ now=ch[now][t] ]+=1;\n    }\n}\ninline int rak(int x)\n{\n    x+=INF;\n    int ans=0;\n    for(int i=31,now=root,t; ~i ; i--)\n    {\n        if( (t=x>>i &1) )    \n            ans+=num[ ch[now][0] ];\n        now=ch[now][t];\n    }\n    return ans;\n}\ninline int kth(int x)\n{\n    int ans=0;\n    for(int i=31,now=root; ~i ; i--)\n    {\n        if( x>num[ ch[now][0] ] )    ans|=1<<i,x-=num[ ch[now][0] ],now=ch[now][1];\n        else now=ch[now][0];\n    }\n    return ans-INF;\n}\nint main()\n{\n    #ifdef WIN32\n    freopen(\"a.in\",\"r\",stdin);\n    #else\n    #endif\n    int n=read(),ans=read();n=n-1;\n    insert(ans);\n    while(n--)\n    {\n        int x=read();\n        int pre=kth( rak(x) );\n        int lat=kth( rak(x) +1);\n        ans+=min( abs(pre-x) ,abs(lat-x) );\n        insert(x);\n    }\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1512452463,
        "uid": 36984,
        "name": "attack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": " \u975e\u65cb $treap$ \u6765\u6c34\u4e00\u6ce2 \u64cd\u4f5c  QAQ\n \n \u672c\u9898\u8981\u7528\u5230\u7684\u5e73\u8861\u6811\u6240\u9700\u8981\u652f\u6301\u7684\u64cd\u4f5c\uff1a\n \n \t1. \u63d2\u5165\u503c\n     2. \u67e5\u8be2\u524d\u9a71\u540e\u7ee7\n     3. \u6ca1\u4e86\n\n\n\n\n----\n\n\u7136\u540e\u8fd9\u9053\u9898\u5176\u5b9e\u975e\u5e38\u7684\u6c34\uff0c\u4f60\u6bcf\u6b21\u8bfb\u5165\u4e00\u4e2a\u503c\uff0c\u7136\u540e\u67e5\u8be2\u5b83\u7684\u975e\u4e25\u683c\u524d\u9a71\u548c\u540e\u7ee7\uff0c\n\n\u7136\u540e\u63d2\u5165\u8fd9\u4e2a\u503c\u5c31\u597d\u4e86\n\n```cpp\n//by Judge\n#include<iostream>\n#include<cstdio>\n#define min(a,b) ((a)<(b)?(a):(b))\nusing namespace std;\nconst int M=4e4+111;\nconst int inf=1e9+7;\n//#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int read(){\n\tint x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n}\nint n,ans,cnt,root;\nstruct Node {\n    int val,key,siz,ch[2];\n    void clear() { ch[0]=ch[1]=siz=val=key=0; }\n} t[M];\n// \u624b\u5199\u968f\u673a\u51fd\u6570\u5927\u6cd5\u597d\ninline int Rand() { static int seed=703; return seed=int(seed*48271LL%(~0u>>1)); }\ninline int update(int now){ t[now].siz=t[t[now].ch[0]].siz+t[t[now].ch[1]].siz+1; }\nint merge(int u,int v) {  //\u5408\u5e76\n    if(!u || !v) return u|v;\n    if(t[u].key<t[v].key) { t[u].ch[1]=merge(t[u].ch[1],v),update(u); return u; }\n\telse { t[v].ch[0]=merge(u,t[v].ch[0]),update(v); return v; }\n}\nvoid split_val(int now,int k,int& x,int& y) {  //\u5206\u79bb\n    if(!now) return (void)(x=y=0);\n    if(t[now].val<=k) split_val(t[x=now].ch[1],k,t[now].ch[1],y);\n    else split_val(t[y=now].ch[0],k,x,t[now].ch[0]);\n    update(now);\n}\ninline void ins(int x) { int u,a,b; t[u=++cnt].key=Rand(),t[u].val=x,t[u].siz=1,split_val(root,x,a,b),root=merge(merge(a,u),b); }\ninline int get_val(int& now,int x) { int a,b,c,d,e; split_k(now,x-1,a,b),split_k(b,1,c,d),e=t[c].val,now=merge(a,merge(c,d)); return e; }\ninline int pre(int x) { int a,b,c; split_val(root,x,a,b),c=get_val(a,t[a].siz),root=merge(a,b); return c; }\ninline int sub(int x) { int a,b,c; split_val(root,x-1,a,b),c=get_val(b,1),root=merge(a,b); return c; }\nsigned main() {\n    n=read(); int node,x,p,s;\n    ans=x=read(),ins(x),ins(-inf),ins(inf); //\u6ce8\u610f inf \u548c -inf \u7684\u63d2\u5165( soplay \u515a\u5e94\u8be5\u4e5f\u4e00\u6837 )\n    while(--n){\n        x=read(),p=pre(x),s=sub(x);\n        ins(x),ans+=min(x-p,s-x); // \u7d2f\u52a0\u7b54\u6848\n    } printf(\"%d\\n\",ans); return 0;\n}\n```\n\n",
        "postTime": 1534902064,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "\u521a\u597d\u5728\u5b66treap\uff0c\u7279\u6765\u6c34\u4e00\u53d1\uff0c\u4e00\u770b\u5927\u5927\u7684\u6a21\u677f\u9898\uff0c\u5c31\u6765\u8bb2\u89e3\u4e00\u4e0btreap\uff0c\u6bd5\u7adf\u611f\u89c9\u597d\u50cf\u7528\u7684\u4eba\u4e0d\u591a\u554a\u3002\u3002\ntreap \u4f5c\u4e3atree \u548c heap \u7684\u7ec4\u5408\u8bcd\uff0c\u5b83\u65e2\u5177\u6709\u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u4e00\u90e8\u5206\u6027\u8d28\uff0c\u4e5f\u6709\u5806\u7684\u4e00\u90e8\u5206\u6027\u8d28\u3002\u6ce8\u610f\uff0c**\u5b83\u4e0d\u4e00\u5b9a\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u4e0e\u5806\u4e0d\u540c\u3002**\n\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\u6211\u4eec\u7ed9\u4e88\u8fd9\u68f5\u6811\u4e0a\u7684\u8282\u70b9\u53e6\u4e00\u4e2a\u6743\u503c\uff0c\u4f7f\u5176\u5e26\u6709\u4e00\u4e2a*\u968f\u673a\u7684\u503c*\u3002\u7136\u540e\u5728\u7528\u6392\u5e8f\u4e8c\u53c9\u6811\u7684\u63d2\u5165\u65b9\u5f0f\u63d2\u5165\u8fc7\u540e\u518d\u5229\u7528\u8fd9\u4e2a\u968f\u673a\u7684\u6743\u503c\u8fdb\u884c\u65cb\u8f6c\uff0c\u8fd9\u91cc\u6211\u7528\u7684\u662f\u5927\u6839\u5806\u3002\n\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\u5462\uff1f\u56e0\u4e3a\u4e8c\u53c9\u6392\u5e8f\u6570\u5728\u6570\u636e\u975e\u968f\u673a\u7684\u65f6\u5019\u6781\u5176\u6709\u53ef\u80fd\u56e0\u4e3a\u51fa\u9898\u4eba\u7684\u6076\u610f\u9000\u5316\u6210\u4e00\u6761\u94fe\uff0c\u800c\u5f53\u6211\u4eec\u8d4b\u4e88\u5176\u968f\u673a\u6743\u503c\u5e76\u65cb\u8f6c\u540e\uff0c\u8fd9\u4e9b\u8282\u70b9\u5c31\u5f62\u6210\u4e86\u65e0\u5173\u4e8e\u8f93\u5165\u987a\u5e8f\u800c\u53ea\u4e0e**\u6743\u503c\u5927\u5c0f**\u76f8\u5173\u7684\u63d2\u5165\u987a\u5e8f\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u5f53\u8fd9\u4e2a\u8282\u70b9\u7684\u6743\u503c\u8d8a\u5927\uff0c\u5b83\u5c31\u5728\u8d8a\u4e0a\u65b9\uff0c\u800c\u8d8a\u9760\u8fd1\u6839\u8282\u70b9\u7684\u5219\u662f\u8d8a\u65e9\u63d2\u5165\u7684\u8282\u70b9\uff0c\u53ef\u4ee5\u6a21\u62df\u4e00\u4e0b\uff0c\u6700\u540e\u4f1a\u53d1\u73b0\uff0c\u8fd9\u68f5\u6811\u4e0e\u4f60\u6309\u6743\u503c\u5927\u5c0f\u4ece\u5927\u5230\u5c0f\u63d2\u5165\u4e00\u6bdb\u4e00\u6837\u3002\n\u7136\u540e\u65e2\u7136\u5177\u6709\u5806\u7684\u6027\u8d28\uff0c\u5c31\u628a\u5b83\u65cb\u5230\u5e95\u90e8\u5c31\u53ef\u4ee5\u5220\u9664\u5566\uff0c\u8fd8\u662f\u76f8\u5f53\u7b80\u5355\u7684\u3002\u53cd\u6b63\u5199\u8d77\u6765\u76f8\u5f53\u77ed\uff0c\u4e0esplay\u4e0d\u76f8\u4e0a\u4e0b\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nll cnt = 1,rt = 0; \nstruct Treap\n{\n\tll key,pri,son[2];\n}T[33767];\nint n;\nll ans = 0;\nvoid rotate(ll p,ll &rt)\n{\n\tint y = T[rt].son[p];\n\tT[rt].son[p] = T[y].son[!p];\n\tT[y].son[!p] = rt;\n\trt  = y;\n}\nvoid ins(ll key,ll &rt)\n{\n\tif(rt == 0)\n\tT[rt = cnt++] = (Treap){key,rand()};\n\telse\n\t{\n\t\tint p = key > T[rt].key;\n\t\tins(key,T[rt].son[p]);\n\t\tif(T[T[rt].son[p]].pri > T[rt].pri)\n\t\trotate(p,rt);\t\n\t}\n}\nll query(ll key,ll rt)\n{\n\tif(rt == 0) return 9223372036854775807;\n\tll res = abs(key - T[rt].key);\n\tif(key > T[rt].key) res = min(res,query(key,T[rt].son[1]));\n\tif(key < T[rt].key) res = min(res,query(key,T[rt].son[0]));\n\treturn res;\n}\nint main()\n{\n\tsrand(19970502);\n\tscanf(\"%d\",&n);\n\tll x;\n\tscanf(\"%lld\",&x);\n\tins(x,rt);\n\tans += x;\n\tfor(int i = 1; i < n; i++)\n\t{\n\t\tscanf(\"%lld\",&x);\n\t\tans += query(x,rt);\n\t\tins(x,rt);\n\t}\n\tprintf(\"%lld\",ans);\n}\t\n```",
        "postTime": 1517645015,
        "uid": 52576,
        "name": "moye\u5230\u7897\u91cc\u6765",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    },
    {
        "content": "/\\*\nnoip\u505a\u7d2f\u4e86 \u5237\u4e00\u9053splay\u5427\uff01\uff01\n\n\u524d\u4e00\u4f4d\u7684splay\u592a\u9ebb\u70e6 \u5176\u5b9e\u4e0d\u5fc5\u90a3\u4e48\u9ebb\u70e6 \u8be6\u7ec6\u770b\u4ee3\u7801\u6ce8\u91ca\u5427 \u5341\u5206\u8be6\u7ec6\u4e86 \u4e0d\u61c2\u5f97\u4e5f\u53ef\u4ee5\u6765\u95ee\u6211\uff01\n\n\u8fd9\u6b21\u4ec0\u4e48\u65b9\u6cd5\u90fd\u53ef\u4ee5\u7528SBT\u53ef\u4ee5 segment\\_tree\u4e5f\u53ef\u4ee5 \u4f46\u662f\u6211\u7528\u7684\u662fsplay\n\n\u5e9f\u8bdd\u4e0d\u8bf4\u76f4\u63a5\u5f00\u59cb\u6253splay\uff08\u867d\u7136\u8fd9\u662ftreap\u4e13\u9898\uff09 \u4e8c\u53c9\u67e5\u627e\u6811 zig zag zig\\_zig zag\\_zag zig\\_zag zag\\_zig\n\n\\*/\n```cpp\n#include<iostream>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=100001;\nconst int INF=1<<29;\nint fa[maxn];\nint key[maxn];\nint child[maxn][2];//\u5de6\u53f3\u5b69\u5b50\nint root;\nint rootsum;\nint n;\nvoid build(int &i,int fa1,int key1){//\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\n    rootsum++; \n    i=rootsum;\n    fa[i]=fa1;\n    key[i]=key1;\n    child[i][0]=0;\n    child[i][1]=0;//empty\n} \nvoid rotate(int i,int kind){//just like a sbt //\u6ed1\u7a3d \u65cb\u8f6c\u64cd\u4f5c  0 left 1 right\n    int j=fa[i];\n    child[j][!kind]=child[i][kind];\n    fa[child[i][kind]]=j;//\u5206\u652f\u7ed9\u7236\u8282\u70b9\n    if(fa[j]){\n        child[fa[j]][child[fa[j]][1]==j]=i;\n    } \n    fa[i]=fa[j];\n    child[i][kind]=j;\n    fa[j]=i;\n}\nvoid splay(int i,int goal){//\u5c06\u6839\u4e3ai\u7684\u5b50\u6811\u8c03\u6574\u4e3agoal \n    while(fa[i]!=goal){\n        if(fa[fa[i]]==goal){//goal\u4e3a0 \u7236\u8282\u70b9\u5c31\u662f\u6839\u7ed3\u70b9  \n            rotate(i,child[fa[i]][0]==i);\n        }\n        else{\n            int j=fa[i];\n            int kind=child[fa[j]][0]==j;\n            if(child[j][kind]==i){//\u4e24\u4e2a\u65b9\u5411\u4e0d\u540c \u5de6\u65cb\u518d\u53f3\u65cb  \n                rotate(i,!kind);\n                rotate(i,kind);\n            }\n            else{//\u4e24\u4e2a\u65b9\u5411\u76f8\u540c \u8fde\u7eed\u4e24\u6b21  \n                rotate(j,kind);\n                rotate(i,kind);\n            }\n        }\n    } \n    if(goal==0){//\u66f4\u65b0\u6839\u8282\u70b9 \n        root=i;\n    } \n}\nint insert(int num){\n    int i=root;\n    while(child[i][key[i]<num]){\n        if(key[i]==num){//\u4e0d\u91cd\u590d\n            splay(i,0);\n            return 0;\n        }\n        i=child[i][key[i]<num];\n    }\n    build(child[i][num>key[i]],i,num);//\u66f4\u65b0\n    splay(child[i][num>key[i]],0);\n    return 1;\n} \nint find_left_rightest(int i){//\u5de6\u5b50\u6811\u7684\u6700\u53f3\u7ed3\u70b9 \n    int j=child[i][0];\n    if(j==0){\n        return INF;\n    } \n    while(child[j][1]){\n        j=child[j][1];\n    }\n    return key[i]-key[j];\n}\nint find_right_leftest(int i){//\u53f3\u5b50\u6811\u7684\u6700\u5de6\u7ed3\u70b9  \n    int j=child[i][1];\n    if(j==0){\n        return INF;\n    } \n    while(child[j][0]){\n        j=child[j][0];\n    }\n    return key[j]-key[i];\n}\nint main(){\n    while(scanf(\"%d\",&n)!=EOF){\n        root=0;\n        rootsum=0;\n        int ans=0;\n        for(int i=1;i<=n;i++){\n            int num;\n            if(scanf(\"%d\",&num)==EOF){\n                num=0;\n            }\n            if(i==1){\n                ans+=num;\n                build(root,0,num);\n                continue;\n            }\n            if(insert(num)==0){\n                continue;\n            }\n            int a,b;\n            a=find_left_rightest(root);\n            b=find_right_leftest(root);\n            ans+=min(a,b);\n        }\n        printf(\"%d\\n\",ans);\n    }\n}\n```",
        "postTime": 1504974935,
        "uid": 41490,
        "name": "qscqesze_lca",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2234 \u3010[HNOI2002]\u8425\u4e1a\u989d\u7edf\u8ba1\u3011"
    }
]