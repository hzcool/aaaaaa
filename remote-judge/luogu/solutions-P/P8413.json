[
    {
        "content": "UPD @ 2022-10-05 :\u4fee\u6539\u4e86\u4e00\u4e9b\u8bef\u5bfc\u6027\u7684\u5185\u5bb9\n\n>\u8d5b\u65f6\u7684\u65f6\u5019\u5728\u671f\u672b\u590d\u4e60\uff0c\u5c31\u6ca1\u505a\u3002\n>\n>\u671f\u672b\u8003\u5b8c\u6765\u770b\u7684\u65f6\u5019\u6211\u7684\u5185\u5fc3 OS \u5982\u4e0b\uff1a\n>\n>\u8fd9\u4e0d\u662f\u6c42\u4e2a\u6700\u5927\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u5c31\u597d\u4e86\u5417\uff1f\u8fd9\u4e48\u7b80\u5355\u4e5f\u80fd\u8bc4\u84dd\uff1f\n>\n>\u7136\u540e\u770b\u5230 $n,m,k\\le 2\\times10^6$ \u7684\u65f6\u5019\u6211\u51dd\u56fa\u4e86\u3002\n>\n>~~\u597d\u6bd2\u7624\u4e00\u9898~~\n\n\u4ee5\u4e0a\u662f\u6211\u5f53\u65f6\u4e0d\u77e5\u9053 BIT \u5e38\u6570\u6709\u591a\u5c0f\u7684\u65f6\u5019\u7684**\u8a00\u8bba\uff0c\u5927\u53ef\u4ee5\u5ffd\u7565\u3002\n\n\u5f53\u7136\u6211\u8fd9\u4e2a\u5229\u7528\u5728\u7ebf\u683c\u5f0f\u7684\u5947\u602a\u505a\u6cd5\u8fd8\u662f\u633a\u6709\u610f\u601d\u7684\uff08\uff1f\n\n\uff08\u6700\u7ec8\u590d\u6742\u5ea6\u662f\u4e0e\u6b63\u89e3\u5dee\u4e0d\u591a\u7684\uff09\n\n---\n\n### \u6b63\u6587\n\n\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u9898\u76ee\u554a([\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P8413))\n\n\u9898\u76ee\u8981\u6c42\u6700\u5c0f\u7684\u8d8a\u8fc7\u969c\u788d\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5f88\u5bb9\u80fd\u591f\u60f3\u5230\u4e24\u70b9\uff1a\n\n+ \u5982\u679c\u6ca1\u6709\u969c\u788d\u6d88\u5931\uff0c\u90a3\u4e48\u6700\u7ec8\u8d8a\u8fc7\u969c\u788d\u6570\u5c31\u662f $n+m-1$\u3002\n+ \u6211\u4eec\u6bcf\u8d70\u8fc7\u4e00\u4e2a\u6d88\u5931\u7684\u969c\u788d\uff0c\u6700\u7ec8\u8d8a\u8fc7\u7684\u969c\u788d\u6570\u5c31\u51cf\u5c11 $1$\u3002\n\n\u7ed3\u5408\u8fd9\u4e24\u70b9\u6211\u4eec\u5e0c\u671b\u8d8a\u8fc7\u5c3d\u53ef\u80fd\u591a\u7684\u6d88\u5931\u7684\u969c\u788d\u3002\n\n\u800c\u8d8a\u8fc7\u7684\u969c\u788d\uff0c\u6211\u4eec\u7528\u9898\u76ee\u4e2d\u7684 $(t_i,x_i)$ \u6765\u8868\u793a\u6211\u4eec\u5728\u65f6\u95f4 $t_i$ \u8d8a\u8fc7\u4e86\u969c\u788d $x_i$\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u6839\u636e $d\\ge 0$ \u6709 $\\forall t_i<t_j,x_i\\le x_j$\uff0c\u4e8e\u662f\u9898\u76ee\u987a\u5229\u5730\u88ab\u8f6c\u5316\u4e3a\u6c42\u4e00\u4e2a\u6700\u5927\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u3002\n\n\u4f46\u662f\u6211\u4eec\u5c31\u662f\u8981\u8d70\u4e0d\u5bfb\u5e38\u7684\u8def\u3002\u6211\u4eec\u770b\u5728\u7ebf\u8f93\u5165\u7684\u683c\u5f0f\u3002\n\n> \u63a5\u4e0b\u6765 $k$ \u884c\uff0c\u5176\u4e2d\u7b2c $i$ \u884c\u6709\u4e24\u4e2a\u6570\u5b57 $t_i, p$\u3002\u5176\u4e2d $p$ \u7528\u4e8e\u751f\u6210 $x_i$\uff0c\u5373\uff1a $x_i = \\min(x_{i - 1} + p \\oplus (lastans \\bmod 15) + 1, m)$ \u5176\u4e2d $lastans$ \u8868\u793a\u4e0a\u6b21\u53d8\u5316\u7684\u7b54\u6848\u3002\n\n> **\u7279\u522b\u5730\uff0c\u7b2c\u4e00\u6b21\u53d8\u5316\u4e4b\u524d $lastans = 0$\uff0c $x_0 = 0$\uff0c\u4e14\u5f53 $x_{i - 1} = m$ \u65f6\uff0c\u5c06 $x_{i - 1}$ \u89c6\u4f5c $0$\uff08\u6ce8\u610f\u8fd9\u4e0d\u4f1a\u771f\u7684\u6539\u53d8 $x_{i - 1}$ \u7684\u503c\uff09\u3002**\n\n\u540c\u65f6\u6211\u4eec\u6709 $p\\le 15$, $(lastans \\bmod 15) \\le15$\uff0c \u4ece\u800c $p \\oplus (lastans \\bmod 15) + 1 \\le 16$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4f1a\u53d1\u73b0\u6211\u4eec\u5f97\u5230\u7684 $\\left\\{ x_i\\right\\}$ \u5e8f\u5217\u662f\u82e5\u5e72\u4e2a\u957f\u5ea6\u4e0d\u5c0f\u4e8e $\\dfrac{m}{\\max\\{p\\}}$ \u7684\u4e25\u683c\u5355\u8c03\u589e\u5e8f\u5217\u62fc\u63a5\u800c\u6210\u7684\uff0c\u4e14\u6bcf\u4e00\u4e2a\u7684\u7ed3\u5c3e\u90fd\u662f $m$\u3002\n\n\u5229\u7528\u8fd9\u4e2a\u201c\u4e25\u683c\u5355\u8c03\u589e\u201d\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6570\u7ec4 $a[i]$ \u6765\u8bb0\u5f55\u4ee5 $i$ \u4e3a\u5f00\u5934\u7684\u6700\u5927\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u540e\u7f00\u6700\u5927\u503c\uff08\u56e0\u4e3a $t_i$ \u662f\u6309\u7167\u5355\u8c03\u51cf\u7684\u987a\u5e8f\u7ed9\u51fa\u7684\uff09\u4ece\u800c\u53ea\u9700\u8981\u5728\u5904\u7406\u5b8c\u5176\u4e2d\u67d0\u4e00\u4e25\u683c\u5355\u8c03\u589e\u5e8f\u5217 $x_i,x_{i+1}\\cdots,x_j$ \u65f6\u518d\u66f4\u65b0\u6bcf\u4e00\u4e2a $a[i]$ \u7684\u503c\uff0c\u5728\u5904\u7406\u8be5\u5e8f\u5217\u8fc7\u7a0b\u4e2d\u53ea\u9700\u8981\u4f9d\u6b21\u66f4\u65b0 $a[x_i],a[x_{i+1}]\\cdots,a[x_j]$ \u7684\u503c\uff0c\u56e0\u4e3a\u524d\u9762\u7684\u503c\u6539\u53d8\u5e76\u4e0d\u5f71\u54cd\u540e\u9762\u7684\u503c\u3002\n\n\u8bb0**\u6700\u5927\u8de8\u8fc7\u7684\u6d88\u5931\u7684\u969c\u788d\u6570**\u4e3a $ans$\u3002\n\n\u6309\u7167 $t_i$ \u76f8\u540c\u4e3a\u4e00\u7ec4\u6765\u5904\u7406\u3002\u8bbe $t$ \u65f6\u7684 $x$ \u503c\u4f9d\u6b21\u4e3a $x'_1,x'_2\\cdots,x'_{tot}$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u5f53 $x'_i$ \u7684\u53d8\u5316\u51fa\u73b0\u7684\u65f6\u5019\uff0c\u5305\u542b $x'_i$ \u7684\u6700\u5927\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u4e3a $a[x'_i]$ \u6240\u4ee3\u8868\u7684\u6700\u5927\u4e0d\u4e0b\u964d\u5e8f\u5217\u524d\u63a5\u4e0a $x'_1,x'_2\\cdots,x'_{i}$ \uff0c\u7528\u8fd9\u4e2a\u53bb\u66f4\u65b0 $ans$ \u5373\u53ef\u3002\n\n\u5904\u7406\u5b8c\u4e4b\u540e\u6211\u4eec\u518d\u7528\u4e0b\u9762\u7684 DP \u67ff\u5b50**\u5012\u5e8f\u66f4\u65b0** $a[x'_1],a[x'_2]\\cdots,a[x'_{tot}]$:\n\n$$a[x'_i]=\\max\\{a[x'_{i}],a[x'_{i+1}]\\}+1$$\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u3002\u4e3b\u8981\u7684\u590d\u6742\u5ea6\u5728\u66f4\u65b0\u4e00\u6574\u4e2a $a[i]$ \u6570\u7ec4\uff0c\u603b\u590d\u6742\u5ea6\u4e3a $O(m\\cdot \\frac{m}{\\frac{m}{\\max\\{p\\}}})=O(m\\cdot \\max\\{p\\})$\n\n\u6ce8\u610f\u4e00\u4e0b\u5728\u7ebf\u683c\u5f0f\u7684\u7ec6\u8282\u5c31\u597d\u4e86\uff0c\u6015 TLE \u5c31\u7528\u4e0a\u5feb\u8bfb\u3002\n\n### \u4ee3\u7801\n\n```cpp\n\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#define MAXN 2000000\nusing namespace std;\n\n//\u5feb\u8bfb\n#define getchar()(p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\ntemplate <typename T>\ninline void read(T& r) {\n\tr=0;bool w=0; char ch=getchar();\n\twhile(ch<'0'||ch>'9') w=ch=='-'?1:0,ch=getchar();\n\twhile(ch>='0'&&ch<='9') r=r*10+(ch^48), ch=getchar();\n\tr=w?-r:r;\n}\n\nint a[MAXN+5],tot,stk[MAXN+5],x[MAXN+5],now;\n//stk\u662ft\u65f6\u95f4\u4e0b\u7684p\u5e8f\u5217\uff0cx\u662f\u89e3\u5bc6\u4ee5\u540e\u7684x\u5e8f\u5217\n\nint main() {\n    ios::sync_with_stdio(0);\n    int n,m,k,t,ans=0,p,lst=0,lstans=0;\n    read(n);read(m);read(k);\n    read(t);read(p);\n    stk[++tot]=p;\n    now=t;\n    for (int i=1;i<=k;++i) {\n        if (i==k) t=p=0;\n        else read(t),read(p);\n        if (t==now) {\n            stk[++tot]=p;\n        } else {\n            //\u4f9d\u6b21\u66f4\u65b0\u5e76\u8f93\u51fa\u7b54\u6848\n            for (int j=1;j<=tot;++j) {\n                lst=min(lst+(stk[j]^(lstans%15))+1,m);\n                x[j]=lst;\n                ans=max(ans,a[lst]+j);\n                cout<<n+m-ans-1<<\"\\n\";\n                lstans=n+m-ans-1;\n            }\n            //\u66f4\u65b0a\u6570\u7ec4\n            ++a[x[tot]];\n            for (int j=tot-1;j>=1;--j) a[x[j]]=max(a[x[j+1]],a[x[j]])+1;\n            //\u5728\u5904\u7406\u5b8c\u540e\u628a\u4e0b\u4e00\u4e2ap\u653e\u5165stk\n            stk[tot=1]=p;\n            now=t;\n            if (lst==m) {\n                for (int j=m-1;j>=1;--j) a[j]=max(a[j+1],a[j]);\n                lst=0;\n            }\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1656141828,
        "uid": 525429,
        "name": "\u601d\u8003\u4eba\u751f\u4e2d",
        "ccfLevel": 6,
        "title": "P8413 \u300cSvR-1\u300dFive of Pentacles \u9898\u89e3"
    },
    {
        "content": "\u5b98\u65b9\u9898\u89e3\u3002\n\n# \u9898\u76ee\u63cf\u8ff0\n\n\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $m$ \u7684\u6570\u8f74\uff0c\u4e00\u5f00\u59cb\uff0c\u5904\u4e8e $1$ \u65f6\u523b\u7684**\u5f00\u59cb**\uff0c\u5c0f Z \u5904\u4e8e $1$ \u53f7\u70b9\uff0c\u6b64\u65f6\u6570\u8f74\u4e0a\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e00\u4e2a\u969c\u788d\u3002\n\n\u6bcf\u4e2a\u65f6\u523b\uff0c\u82e5\u5c0f Z \u5904\u4e8e $i$ \u53f7\u70b9\uff0c\u5c0f Z \u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a $d \\geq 0$\uff0c\u7136\u540e\u79fb\u52a8\u5230 $i + d$ \u53f7\u70b9\uff0c\u5e76\u4e14\u4f1a\u8d8a\u8fc7 $[i, i + d]$ \u7684\u6bcf\u4e00\u4e2a\u969c\u788d\u3002\n\n\u5f53\u7136\uff0c\u4e00\u5207\u90fd\u662f\u5728\u53d8\u5316\u7684\uff0c\u4e00\u5171\u4f1a\u6709 $k$ \u6b21\u53d8\u5316\uff0c\u7b2c $i$ \u6b21\u4f1a\u53d1\u751f\u5982\u4e0b\u53d8\u5316\uff1a\n\n- \u5728 $t_i$ \u65f6\u523b\u521d\u628a $x_i$ \u53f7\u70b9\u4e0a\u7684\u969c\u788d\u79fb\u8d70\u3002\n- **\u6b64\u53d8\u5316\u4ec5\u4f5c\u7528\u4e8e $t_i$ \u65f6\u523b\u3002**\n\n\u4fdd\u8bc1\u53d8\u5316\u662f**\u968f\u65f6\u95f4\u5012\u5e8f\u53d1\u751f\u7684**\uff0c\u4e5f\u5c31\u662f\u8bf4 $t_i$ **\u5355\u8c03\u4e0d\u5347**\u3002\n\n\u73b0\u5728\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $1\\le i\\le k$\uff0c\u4f60\u90fd\u9700\u8981\u8f93\u51fa**\u5728\u524d $i$ \u4e2a\u53d8\u5316\u53d1\u751f\u7684\u6761\u4ef6\u4e0b**\u3001\u5728\u4fdd\u8bc1\u7b2c $n$ \u4e2a\u65f6\u523b\u7ed3\u675f\u65f6\u5c0f Z \u6070\u597d\u5904\u4e8e $m$ \u53f7\u70b9\u7684\u57fa\u7840\u4e0a\uff0c\u5c0f Z \u8d8a\u8fc7\u7684\u6700\u5c0f\u969c\u788d\u6570\u3002\n\n\u5bf9\u4e8e $100\\%$ \u7684\u6570\u636e\uff0c$1 \\leq n, m, k \\leq 4 \\times 10^6$\uff0c$1 \\leq t_i \\leq n$\uff0c$0 \\leq p \\leq 15$\uff0c$t_i$ **\u5355\u8c03\u4e0d\u5347**\uff0c\u82e5 $t_i$ \u76f8\u540c\uff0c\u6309 $x_i$ **\u5347\u5e8f**\uff0c\u4e14 $\\forall 1 \\leq i < j \\leq k$\uff0c$(t_i, x_i)$ \u548c $(t_j, x_j)$ \u4e0d\u540c\u3002**\u5f3a\u5236\u5728\u7ebf**\u3002O2\uff0c500ms\u3002\n\n# \u7b97\u6cd5\u4e00\n\n\u82e5\u5c06\u65f6\u95f4\u770b\u4f5c\u4e00\u4e2a\u5750\u6807\u8f74\uff0c\u5e76\u4e14\u9002\u5f53\u65cb\u8f6c\u4e00\u4e0b\u3002\u90a3\u4e48\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\n\n\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\uff0c\u521d\u59cb\u6bcf\u4e2a\u70b9\u4e0a\u5747\u6709\u4e00\u4e2a\u969c\u788d\u7269\uff0c\u6bcf\u6b21\u62ff\u8d70\u4e00\u4e2a\u969c\u788d\u7269\u3002\u62ff\u8d70\u7684\u987a\u5e8f\u662f\u5148\u4ece\u4e0a\u5230\u4e0b\u4e00\u884c\u884c\u62ff\uff0c\u6bcf\u4e00\u884c\u5185\u4ece\u53f3\u5f80\u5de6\u62ff\u3002\u6bcf\u6b65\u53ef\u4ee5\u5411\u53f3\u8d70\u6216\u8005\u5411\u4e0b\u8d70\uff0c\u6bcf\u6b21\u62ff\u8d70\u540e\u8be2\u95ee\u4ece\u5de6\u4e0a\u89d2\u8d70\u5230\u53f3\u4e0b\u89d2\u6700\u5c11\u7ecf\u8fc7\u591a\u5c11\u969c\u788d\u7269\u3002\n\n\u7531\u4e8e\u6309\u7167\u8fd9\u4e2a\u89c4\u5219\u8d70\uff0c\u603b\u7ecf\u8fc7\u683c\u5b50\u6570\u662f\u4e00\u5b9a\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u53cd\u8fc7\u6765\u770b\u6210\u521d\u59cb\u4e3a\u7a7a\uff0c\u6bcf\u6b21\u653e\u4e00\u4e2a\u969c\u788d\u7269\uff0c\u8be2\u95ee\u6700\u591a\u7ecf\u8fc7\u591a\u5c11\u969c\u788d\u7269\u3002\n\n\u90a3\u4e48\u4f9d\u7167\u9898\u610f\u6a21\u62df\uff0c\u6bcf\u6b21\u653e\u5b8c\u540e $\\mathcal{O}(nm)$ dp \u51fa\u6700\u591a\u8d70\u591a\u5c11\u4e2a\u969c\u788d\u7269\u3002\u5177\u4f53\u5730\uff0c\u8bbe $f_{i,j}$ \u4e3a\u8d70\u5230 $(i,j)$ \u6700\u591a\u7ecf\u8fc7\u591a\u5c11\u969c\u788d\u7269\uff0c$a_{i,j}$ \u4e3a $(i,j)$ \u4e0a\u662f\u5426\u6709\u969c\u788d\u7269\uff0c\u5219\u6709 $f_{i,j}=\\max\\{f_{i-1,j},f_{i,j-1}\\}+a_{i,j}$\uff0e\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(knm)$\uff0c\u671f\u671b\u5f97\u5206 15 \u5206\u3002\n\n# \u7b97\u6cd5\u4e8c\n\n\u4e0d\u96be\u53d1\u73b0\u6bcf\u6b21\u653e\u969c\u788d\u7269\u540e\uff0c\u53ea\u6709\u5f53\u524d\u884c\u7684 $f$ \u503c\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u5e76\u4e14\u5e76\u4e0d\u9700\u8981\u8003\u8651\u4e0b\u9762\u884c\u7684 $f$ \u503c\uff0c\u6240\u4ee5\u6bcf\u6b21\u653e\u5b8c\u969c\u788d\u7269\u53ea\u66f4\u65b0\u5f53\u524d\u884c\u7684 $f$ \u503c\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(km)$\uff0c\u671f\u671b\u5f97\u5206 35 \u5206\u3002\n\n# \u7b97\u6cd5\u4e09\n\n\u8003\u8651\u5bf9\u4e0a\u8ff0 dp \u8fdb\u884c\u4f18\u5316\u3002\u91c7\u7528\u5e38\u7528\u7684\u5957\u8def\uff0c\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4 $f$\uff0c\u800c\u7ef4\u62a4\u6574\u4e2a\u4e8c\u7ef4\u7684 $f$ \u4f3c\u4e4e\u628a\u95ee\u9898\u590d\u6742\u5316\u4e86\uff0c\u4e8e\u662f\u5c1d\u8bd5\u53ea\u7ef4\u62a4\u5f53\u524d\u884c\u7684 $f$\uff0e\n\n\u5728\u540c\u4e00\u884c\u5185\u4ece\u540e\u5f80\u524d\u653e\u969c\u788d\u7269\u65f6\uff0c\u5047\u8bbe\u5728 $(x,y)$ \u5904\u653e\u7f6e\uff0c\u90a3\u4e48\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230 $y$ \u540e\u9762\u5f88\u591a\u4e2a\u4f4d\u7f6e\u7684 $f$ \u53d1\u751f\u6539\u53d8\u3002\u4e0d\u8fc7\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u7531\u4e8e\u5df2\u7ecf\u6c42\u51fa\u4e0a\u4e00\u6b21\u653e\u7f6e\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5173\u5fc3\u65b0\u7684\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\u7684\u65b9\u6848\uff0c\u800c\u6682\u65f6\u4e0d\u9700\u8981\u5173\u7cfb $f$ \u5177\u4f53\u7684\u53d8\u5316\u3002\u4e5f\u5c31\u662f\u8003\u8651\u4e00\u5b9a\u7ecf\u8fc7 $(x,y)$ \u7684\u8def\u5f84\u6700\u5927\u7b54\u6848\u662f\u591a\u5c11\uff0c\u5176\u503c\u4e3a\u539f\u5148 $(x,y)$ \u7684 $f$ \u503c\uff0c\u52a0\u4e0a $(x,y)$ \u53ca\u5176\u53f3\u8fb9\u6709\u591a\u5c11\u4e2a\u969c\u788d\u7269\u3002\u7528\u5176\u6765\u66f4\u65b0\u7b54\u6848\u5373\u53ef\u3002\n\n\u90a3\u4e48\u73b0\u5728\u8981\u5904\u7406\u7684\u5c31\u662f\u65b0\u5f00\u4e00\u884c\u7684\u60c5\u51b5\uff0c\u8981\u628a\u5f53\u524d\u884c\u7684 $f$ \u5904\u7406\u51fa\u6765\u518d\u53bb\u8003\u8651\u65b0\u7684\u4e00\u884c\u3002\u7531\u4e8e\u4ece\u4e0a\u4e00\u884c\u5411\u4e0b\u8d70\u65f6\u5982\u679c\u6ca1\u6709\u9047\u5230\u969c\u788d\u7269\u4e00\u5b9a\u4e0d\u4f1a\u6bd4\u9047\u5230\u969c\u788d\u7269\u66f4\u4f18\uff0c\u4e8e\u662f\u5355\u72ec\u8003\u8651\u5f53\u524d\u884c\u6709\u969c\u788d\u7269\u7684\u4f4d\u7f6e\u3002\n\n\u5047\u8bbe\u4ece\u5de6\u5f80\u53f3\u4f9d\u6b21\u4e3a $p_1,p_2,...,p_l$\uff0c\u90a3\u4e48\u8003\u8651 dp \u7684\u8fc7\u7a0b\uff0c\u5bb9\u6613\u53d1\u73b0\u8f6c\u79fb\u65b9\u6cd5\u662f\u6bcf\u6b21\u5c06 $[p_i+1,p_{i+1}]$ \u7684 $f$ \u4e0e $f_{p_i}$ \u53d6 $\\max$ \u540e\u518d\u52a0 $1$\uff0c\u8fd9\u4e2a\u5f88\u5bb9\u6613\u7528\u7ebf\u6bb5\u6811\u6765\u5b9e\u73b0\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(k\\log m)$\uff0e\u671f\u671b\u5f97\u5206 84 \u5206\u3002\n\n\u6ce8\u610f\u5230 $f$ \u662f\u5355\u8c03\u7684\uff0c\u4ea6\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(k\\log m)$\uff0e\u671f\u671b\u5f97\u5206 100 \u5206\u3002\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<ctime>\n#define pb emplace_back\n#define mp std::make_pair\n#define fi first\n#define se second\n#define dbg(x) cerr<<\"In Line \"<< __LINE__<<\" the \"<<#x<<\" = \"<<x<<'\\n';\n#define dpi(x,y) cerr<<\"In Line \"<<__LINE__<<\" the \"<<#x<<\" = \"<<x<<\" ; \"<<\"the \"<<#y<<\" = \"<<y<<'\\n';\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int>pii;\ntypedef pair<ll,int>pli;\ntypedef pair<ll,ll>pll;\ntypedef vector<int>vi;\ntypedef vector<ll>vll;\ntypedef vector<pii>vpii;\ntemplate<typename T>T cmax(T &x, T y){return x=x>y?x:y;}\ntemplate<typename T>T cmin(T &x, T y){return x=x<y?x:y;}\n#define getchar()(p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\ntemplate <typename T>\ninline void read(T& r) {\n\tr=0;bool w=0; char ch=getchar();\n\twhile(ch<'0'||ch>'9') w=ch=='-'?1:0,ch=getchar();\n\twhile(ch>='0'&&ch<='9') r=r*10+(ch^48), ch=getchar();\n\tr=w?-r:r;\n}\ntemplate<typename T1,typename... T2>\nvoid read(T1 &x, T2& ...y){ read(x); read(y...); }\nconst int N=4000010;\nint n,m,q,lst=0,lstx=0,nowans=0,lastt=0,cnt=0;\nint mx[N];\ninline int lowbit(int x){return x&(-x);}\nint query(int x){int s=0;for(;x;x-=lowbit(x))cmax(s,mx[x]);return s;}\nvoid modify(int x,int v){for(;x<=m;x+=lowbit(x))cmax(mx[x],v);}\nsigned main(){\n\tread(n,m,q);\n\tvpii pos;\n\tfor(int o=1;o<=q;o++){\n\t\tint t,p;read(t,p);\n\t\tint x=min(lstx+(p^((n+m-1-lst)%15))+1,m);\n\t\tif(o==1)x=min(p+1,m);\n\t\tlstx=x%m;\n\t\tt=n-t+1;x=m-x+1;\n\t\tif(t!=lastt){\n\t\t\tint len=pos.size(),lastval=0;reverse(pos.begin(),pos.end());\n\t\t\tfor(int i=0;i<len;i++)\n\t\t\t\tmodify(pos[i].fi,lastval=max(lastval,pos[i].se)+1);\n\t\t\tvpii().swap(pos);\n\t\t\tlst=query(m);\n\t\t}\n\t\tlastt=t;\n\t\tint val=query(x);\n\t\tpos.pb(mp(x,val));\n\t\tcmax(lst,val+(int)pos.size());\n\t\tcout << n+m-1-lst << '\\n';\n\t}\n    #ifdef do_while_true \n\t\tcerr<<'\\n'<<\"Time:\"<<clock()<<\" ms\"<<'\\n';\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1656207464,
        "uid": 223298,
        "name": "do_while_true",
        "ccfLevel": 8,
        "title": "\u300c\u9898\u89e3\u300d\u6d1b\u8c37 P8413 \u300cSvR-1\u300dFive of Pentacles"
    },
    {
        "content": "~~\u6211\u7684\u505a\u6cd5\u4f3c\u4e4e\u592a\u9ebb\u70e6\u4e86\u3002~~\n### Subtask $1$\n\u76f4\u63a5\u66b4\u529b dp \u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(knm)$\u3002\n### Subtask $2$\n\u524d\u7f6e\u829d\u58eb\uff1a[\u6811\u72b6\u6570\u7ec4](https://oi-wiki.org/ds/fenwick/)\n\n\u8003\u8651\u5c06\u8fd9\u4e2a dp \u8f6c\u5316\u4e3a\u4ee5\u4e0b\u6a21\u578b\uff1a\u4ece $(1, 1)$ \u8d70\u5230 $(n, m)$\uff0c\u52a8\u6001\u5730\u5728\u67d0\u4e2a\u70b9\u4e0a\u6dfb\u52a0\u969c\u788d\uff0c\u5e76\u8be2\u95ee $(1, 1)$ \u8d70\u5230 $(n, m)$ \u6240\u7ecf\u8fc7\u7684\u6700\u5c0f\u969c\u788d\u6570\u3002\n\n\u6ce8\u610f\u5230\u4efb\u4f55\u4e00\u79cd\u6ee1\u8db3\u6761\u4ef6\u7684\u8d70\u6cd5\u4e00\u5f00\u59cb\u53d6\u5230\u7684\u503c\u5747\u4e3a $n + m - 1$\uff0c\u6bcf\u8d70\u8fc7\u4e00\u4e2a $0$ \u5c31\u4f1a\u4f7f\u5f97\u503c\u51cf\u5c0f $1$\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u7ecf\u8fc7 $0$ \u7684\u6570\u91cf\u7684\u6700\u5927\u503c\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u4ee4 $t_i \\leftarrow n - t_i + 1$\uff0c$x_i \\leftarrow m - x_i + 1$\uff0c\u5219 $t_i$ \u5355\u8c03\u4e0d\u5347\uff0c\u82e5 $t_i$ \u76f8\u540c\uff0c$x_i$ \u5355\u8c03\u9012\u51cf\u3002\n\n\u8003\u8651\u8bbe $dp_i$ \u8868\u793a\u4f4d\u4e8e $(t_i, x_i)$ \u65f6\uff0c\u6b64\u5904\u7684 $0$ \u8d70\u8fc7\u4e4b\u540e\u6700\u591a\u8fd8\u80fd\u8d70\u8fc7\u591a\u5c11\u4e2a $0$\u3002\u7531\u4e8e\u53ea\u80fd\u5411\u4e0b\u6216\u8005\u5411\u53f3\uff0c\u8d70\u8fc7\u4e00\u4e2a $0$ \u4e4b\u540e\u6240\u8d70\u8fc7\u7684 $0$ \u663e\u7136\u90fd\u4f1a\u5728\u5b83\u7684\u5de6\u4e0a\u65b9\uff0c\u5219 $dp_i = \\displaystyle\\max_{t_j \\leq t_i, x_j \\leq x_i} dp_j + 1$\u3002\n\n\u76f4\u63a5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u7f00 max \u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(k^2 \\log m)$\u3002\n### Subtask $3$ & $4$\n\u8003\u8651\u4e24\u79cd\u60c5\u51b5\u3002\n\n1. $t_i \\neq t_{i - 1}$\n\n\u5728\u524d\u7f00 max \u7684\u6811\u72b6\u6570\u7ec4\u4e2d\u66f4\u65b0 $t_j = t_{i - 1}$ \u7684\u6240\u6709 $j$ \u7684 $x_j$\uff0c**\u7136\u540e**\u4e00\u6b21\u524d\u7f00 max \u67e5\u8be2\u6c42\u51fa $dp_i$ \u5373\u53ef\u3002\n\n2. $t_i = t_{i - 1}$\n\n\u5bb9\u6613\u53d1\u73b0\u5728\u8fd8\u672a\u66f4\u65b0 $dp_{i - 1}$ \u524d $dp_i \\leq dp_{i - 1}$\u3002\n\n**\u9996\u5148**\u4e00\u6b21\u524d\u7f00 max \u67e5\u8be2\u6c42\u51fa $dp_i$\uff0c\u5219\u672c\u6b21\u66f4\u65b0\u53ef**\u4f9d\u6b21\u5411\u540e\u4f20\u9012**\uff0c\u5373\uff1a$dp_{i - j} \\leftarrow \\max(dp_{i - j}, dp_i + j)$\u3002\n\n\u8003\u8651\u5230\u82e5\u5b58\u5728\u4e00\u4e2a\u6700\u5c0f\u7684 $j$ \u6ee1\u8db3 $dp_{i - j} < dp_{i - j + 1}$\uff0c\u5219\u4ece $i - j$ \u5f00\u59cb\uff0c\u518d\u5411\u524d\u4f20\u9012\u4fbf\u4e0d\u4f1a\u66f4\u65b0\u4efb\u4f55\u503c\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u6700\u5c0f\u7684 $j$\uff0c\u4f7f $dp_j + j = dp_i + i - 1$\uff08\u6ce8\u610f\uff1a**\u8fd9\u91cc\u7684 $dp_j$ \u662f\u4f20\u9012\u4e4b\u524d\u7684 $dp_j$**\uff09\uff0c\u5e76 $\\forall y \\in [j, i)$\uff0c\u4ee4 $dp_y \\leftarrow dp_y + 1$\u3002\u8fd9\u4e00\u6b65\u53ef\u4ee5\u7528\u4e8c\u5206 + \u533a\u95f4\u52a0\u3001\u5355\u70b9\u67e5\u8be2\u7684\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u7efc\u4e0a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(k(\\log m + \\log^2 k))$\u3002\n### Subtask $5$\n\u8003\u8651\u7528\u5176\u4ed6\u65f6\u95f4\u590d\u6742\u5ea6\u66f4\u4f4e\u7684\u7ef4\u62a4\u65b9\u5f0f\u66ff\u6362\u4e8c\u5206\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i$ \u7ef4\u62a4\u4e00\u4e2a**\u6781\u5927**\u53ef\u4f20\u9012\u533a\u95f4\u7684\u5de6\u7aef\u70b9 $nxt_i$\u3002\u5373\uff1a\u5728\u6ee1\u8db3 $t_i = t_{nxt_i}$ \u4e14 $\\forall nxt_i < j \\leq i$\uff0c$dp_j = dp_{j - 1} + 1$ \u7684\u60c5\u51b5\u4e0b\uff0c$nxt_i$ \u5c3d\u91cf\u5c0f\u3002\n\n1. $t_i \\neq t_{i - 1}$\n\n\u663e\u7136 $nxt_i = i$\u3002\n\n2. $t_i = t_{i - 1}$\n\n\u5982\u679c $dp_i = dp_{i - 1}$\uff0c\u5c06 $[nxt_{i - 1}, i)$ \u4e2d\u6bcf\u4e2a dp \u503c\u52a0 $1$\uff0c\u7136\u540e\u8ba9 $nxt_i$ \u5411\u5de6\u6269\u5c55\uff0c\u6bcf\u6b21\u4ee4 $nxt_i = nxt_{nxt_i - 1}$\uff0c\u76f4\u5230\u518d\u8df3\u5c31\u4e0d\u7b26\u5408\u6761\u4ef6\u4e3a\u6b62\uff1b\u5982\u679c $dp_i + 1 = dp_{i - 1}$\uff0c\u4ee4 $nxt_i = nxt_{i - 1}$\uff1b\u5426\u5219\uff0c\u4ee4 $nxt_i = i$\u3002\n\n\u73b0\u5728\u8003\u8651\u5411\u5de6\u6269\u5c55\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u5f53 $dp_{nxt_i - 1} + nxt_i - 1 \\neq dp_i - i$\uff0c\u663e\u7136\u4e0d\u80fd\u518d\u6269\u5c55\uff1b\u5426\u5219\uff0c$nxt_{nxt_i - 1}$ \u4e00\u5b9a\u5df2\u7ecf\u662f**\u6781\u5927**\u53ef\u4f20\u9012\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u4e86\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u6269\u5c55\u4e00\u6b21\u3002\n\n\u7efc\u4e0a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(k(\\log m + \\log k))$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <stdio.h>\n\ninline int max(int a, int b){\n\treturn a > b ? a : b;\n}\n\ninline int lowbit(int x){\n\treturn x & (-x);\n}\n\ntypedef struct {\n\tint tree[20000007];\n\t\n\tinline int get_max(int x){\n\t\tint ans = 0;\n\t\twhile (x > 0){\n\t\t\tans = max(ans, tree[x]);\n\t\t\tx -= lowbit(x);\n\t\t}\n\t\treturn ans;\n\t}\n\t\n\tinline void update(int n, int x, int k){\n\t\twhile (x <= n){\n\t\t\ttree[x] = max(tree[x], k);\n\t\t\tx += lowbit(x);\n\t\t}\n\t}\n} RMQ;\n\ntypedef struct {\n\tint tree[20000007];\n\t\n\tinline void update(int n, int x, int k){\n\t\twhile (x <= n){\n\t\t\ttree[x] += k;\n\t\t\tx += lowbit(x);\n\t\t}\n\t}\n\t\n\tinline int get_val(int x){\n\t\tint ans = 0;\n\t\twhile (x > 0){\n\t\t\tans += tree[x];\n\t\t\tx -= lowbit(x);\n\t\t}\n\t\treturn ans;\n\t}\n\t\n\tinline void assign(int n, int x, int k){\n\t\tupdate(n, x, k - get_val(x));\n\t}\n\t\n\tinline void add(int n, int l, int r, int k){\n\t\tupdate(n, l, k);\n\t\tupdate(n, r + 1, -k);\n\t}\n} BIT;\n\nint t[2000007], x_[2000007], nxt[2000007], dp[2000007];\nRMQ tree1;\nBIT tree2;\n\ninline int read(){\n\tint ans = 0;\n\tchar ch = getchar();\n\twhile (ch < '0' || ch > '9'){\n\t\tch = getchar();\n\t}\n\twhile (ch >= '0' && ch <= '9'){\n\t\tans = ans * 10 + (ch ^ 48);\n\t\tch = getchar();\n\t}\n\treturn ans;\n}\n\ninline int min(int a, int b){\n\treturn a < b ? a : b;\n}\n\nvoid write(int n){\n\tif (n >= 10) write(n / 10);\n\tputchar(n % 10 + '0');\n}\n\nint main(){\n\tint n = read(), m = read(), k = read(), x = 0, all = n + m - 1, max_val = 0, last_ans = 0;\n\tfor (register int i = 1, j = -1; i <= k; i++){\n\t\tint p;\n\t\tt[i] = n - read() + 1;\n\t\tp = read();\n\t\tx = min((x == m ? 0 : x) + (p ^ (last_ans % 15)) + 1, m);\n\t\tx_[i] = m - x + 1;\n\t\tif (t[i] != t[j]){\n\t\t\tif (j != -1){\n\t\t\t\tfor (register int y = j; y < i; y++){\n\t\t\t\t\tdp[y] = tree2.get_val(y);\n\t\t\t\t\tmax_val = max(max_val, dp[y]);\n\t\t\t\t\ttree1.update(m, x_[y], dp[y]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tj = nxt[i] = i;\n\t\t\tdp[i] = tree1.get_max(x_[i]) + 1;\n\t\t\ttree2.assign(k, i, dp[i]);\n\t\t} else {\n\t\t\tint id = i - 1;\n\t\t\tdp[i] = tree1.get_max(x_[i]) + 1;\n\t\t\ttree2.assign(k, i, dp[i]);\n\t\t\tif (dp[i] == dp[id]){\n\t\t\t\tnxt[i] = nxt[id];\n\t\t\t\ttree2.add(k, nxt[id], id, 1);\n\t\t\t\tif (nxt[id] == j){\n\t\t\t\t\tdp[j]++;\n\t\t\t\t} else {\n\t\t\t\t\tint t = nxt[i] - 1;\n\t\t\t\t\tif (nxt[i] > j && tree2.get_val(t) + t == dp[i] + i) nxt[i] = nxt[t];\n\t\t\t\t}\n\t\t\t} else if (dp[i] + 1 == dp[id]){\n\t\t\t\tnxt[i] = nxt[id];\n\t\t\t} else {\n\t\t\t\tnxt[i] = i;\n\t\t\t}\n\t\t}\n\t\tlast_ans = all - max(max_val, dp[j]);\n\t\twrite(last_ans);\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1655942311,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P8413 \u3010\u300cSvR-1\u300dFive of Pentacles\u3011"
    }
]