[
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.org/problem/P5428)\u770b\u9898\u76ee\u3002\n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8ba1\u7b97\u51e0\u4f55\u7b2c\u4e00\u9898\uff0c\u7136\u540e~~\u4e0d\u8d1f\u4f17\u671b\u5730~~\u7206\u70b8\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u573a\u4e0a\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u4f18\u5316\u5c45\u7136\u90fd\u6ca1\u6709\u60f3\u5230......\u592a\u83dc\u4e86\u3002    \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8fd9\u9053\u9898\u5176\u5b9e\u662f\u626b\u63cf\u7ebf+$set$\u7ef4\u62a4\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u9996\u5148\uff0c\u6211\u4eec\u6765\u4e00\u4e2a\u9884\u5907\u77e5\u8bc6\u70b9\u2014\u2014\u7ebf\u6bb5\u5224\u4ea4\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u770b[\u535a\u5ba2](https://blog.csdn.net/qq_39627843/article/details/81170316)\u5427\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6709\u4e86\u8fd9\u4e2a\u77e5\u8bc6\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u9898\u89e3\u4e86\u3002    \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6211\u4eec\u7684\u4e3b\u8981\u601d\u8def\u5c31\u662f\u5148\u627e\u51fa\u4efb\u610f\u4e24\u6761\u76f8\u4ea4\u7684\u7ebf\u6bb5\uff0c\u6b64\u65f6\u7b54\u6848\u5c31\u5728\u4e24\u6761\u4e4b\u95f4\uff0c\u63a5\u4e0b\u6765\u518d\u641e\u5c31\u5bb9\u6613\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e8e\u662f\u6211\u4eec\u7684\u76ee\u6807\u5c31\u662f\u4f18\u5316\u7b2c\u4e00\u6b65\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5148\u5bf9\u6240\u6709\u7684**\u70b9**\u6392\u5e8f\uff0c\u6309\u7167$x$\u4f18\u5148$y$\u6b21\u540e\u7684\u987a\u5e8f\u3002\u7136\u540e\u626b\u63cf\u70b9\u7684\u5e8f\u5217\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5728\u8fd9\u4e4b\u524d\uff0c\u6211\u4eec\u5f97\u4e86\u89e3\u8fd9\u4e2a$set$\u5230\u5e95\u5b58\u7684\u4ec0\u4e48\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5f53\u5f53\u524d\u4f4d\u7f6e\u4e3a$pos$\u65f6\uff0c$set$\u7ef4\u62a4\u7684\u5c31\u662f**\u5728x\u8f74\u7684\u6295\u5f71\u4e0a\u5305\u542b\u4e86$pos$\u8fd9\u4e2a\u70b9\u7684\u4e0d\u76f8\u4ea4\u7ebf\u6bb5\u7684\u96c6\u5408**\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6240\u4ee5\u6839\u636e\u8fd9\u4e2a\u539f\u5219\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u6cd5\u7ef4\u62a4\uff1a  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.\u5982\u679c\u5f53\u524d\u7684\u70b9\u662f\u4e00\u4e2a\u7ebf\u6bb5\u7684\u8d77\u70b9\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728$set$\u4e2d\u627e\u51fa\u5f53\u524d\u7ebf\u6bb5\u76f8\u5bf9\u7684\u524d\u540e\u7ebf\u6bb5\u3002\u5982\u679c\u627e\u51fa\u7684\u524d\u540e\u7ebf\u6bb5\u4e2d\u7684\u4e00\u4e2a\u548c\u5f53\u524d\u7ebf\u6bb5\u6709\u4ea4\u70b9\uff0c\u5c31\u53d6\u51fa\u76f8\u4ea4\u7684\u4e00\u5bf9\u68c0\u67e5\u7b54\u6848\uff1b\u5426\u5219\u5c31\u63d2\u5165\u5f53\u524d\u7ebf\u6bb5\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.\u5982\u679c\u5f53\u524d\u7684\u70b9\u662f\u4e00\u4e2a\u7ebf\u6bb5\u7684\u7ec8\u70b9\uff0c\u6211\u4eec\u5148\u5728$set$\u4e2d\u627e\u51fa\u5f53\u524d\u7ebf\u6bb5\u7684\u524d\u9a71\u540e\u7ee7\u3002\u5982\u679c\u627e\u5230\u7684\u4e24\u4e2a\u7ebf\u6bb5\u6709\u4ea4\u70b9\uff0c\u5c31\u53d6\u51fa\u6765\u68c0\u67e5\u7b54\u6848\uff1b\u5426\u5219\u5c31\u5220\u9664\u5f53\u524d\u7ebf\u6bb5\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5176\u5b9e\u6240\u6709\u7ebf\u6bb5\u68c0\u67e5\u7684\u64cd\u4f5c\u90fd\u662f\u4e3a\u4e86\u907f\u514d\u5728\u66f4\u65b0\u540e\u96c6\u5408\u4e2d\u51fa\u73b0\u76f8\u4ea4\u7684\u7ebf\u6bb5\uff0c\u628a\u63e1\u8fd9\u4e00\u70b9\u7684\u8bdd\u5c31\u4e0d\u96be\u5199\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u53e6\u5916\uff0c\u7531\u4e8e$set$\u4e2d\u7684\u7ebf\u6bb5\u4e0d\u76f8\u4ea4\uff0c\u6240\u4ee5\u8bf4**\u4e24\u4e2a\u5728$set$\u4e2d\u7684\u7ebf\u6bb5\u7684\u4e0a\u4e0b\u5173\u7cfb\u4e0d\u4f1a\u53d8**\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\u6765\u5bf9\u7ebf\u6bb5\u8fdb\u884c\u6392\u5e8f\u3002   \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u56fe\u4f8b\uff1a  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u63d2\u5165\u4e00\u4e2a\u7ebf\u6bb5\uff1a  \n![insert.png](https://i.loli.net/2019/08/15/JWj4fRnPvN7xb5w.png)    \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5220\u9664\u4e00\u4e2a\u7ebf\u6bb5\uff1a  \n![delete.png](https://i.loli.net/2019/08/15/TA5p8ijFZn6mOzx.png)    \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u627e\u51fa\u76f8\u4ea4\uff1a    \n![searched.png](https://i.loli.net/2019/08/15/eAGhFZcVdwqzyPW.png)    \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4ee5\u53ca\u559c\u95fb\u4e50\u89c1\u7684\u4ee3\u7801\u3002  \n# \u4ee3\u7801\n```cpp\n#include <set>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\ntypedef long long LL;\n\nconst int MAXN = 1e5 + 5;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T MIN( const _T a, const _T b )\n{\n\treturn a < b ? a : b;\n}\n\ntemplate<typename _T>\n_T MAX( const _T a, const _T b )\n{\n\treturn a > b ? a : b;\n} \n\ndouble pos;\n\nstruct point\n{\n\tLL x, y;\n\tint indx;\n\tpoint(){}\n\tpoint( const LL X, const LL Y, const int Indx )\n\t{\n\t\tx = X, y = Y;\n\t\tindx = Indx;\n\t}\n\tbool operator < ( const point & other ) const\n\t{\n\t\treturn x < other.x || ( x == other.x && y < other.y );\n\t}\n\tbool operator > ( const point & other ) const\n\t{\n\t\treturn x > other.x || ( x == other.x && y > other.y );\n\t}\n\tpoint operator - ( const point & other ) const\n\t{\n\t\treturn point ( x - other.x, y - other.y, 0 );\n\t}\n}P[MAXN * 2];\n\nstruct Vector\n{\n\tLL x, y;\n\tVector(){}\n\tVector( const LL X, const LL Y )\n\t{\n\t\tx = X, y = Y;\n\t}\n\tVector( const point p )\n\t{\n\t\tx = p.x, y = p.y;\n\t}\n};\n\nstruct segment\n{\n\tpoint l, r;\n\tint indx;\n\tdouble endVal() const \n\t{\n\t\tif( l.x == r.x ) return l.y;\n\t\treturn l.y + 1.0 * ( r.y - l.y ) * 1.0 * ( pos - l.x ) / ( r.x - l.x );\n\t}\n\tbool operator < ( const segment & other ) const\n\t{\n\t\treturn indx != other.indx && endVal() < other.endVal();\n\t}\n\tbool operator == ( const segment & other ) const\n\t{\n\t\treturn indx == other.indx;\n\t}\n}seg[MAXN];\n\ntypedef set<segment> :: iterator iter;\n\nset<segment> s;\n\nint cnt[MAXN];\nint N;\n\nLL mul( const Vector & fir, const Vector & sec )\n{\n\treturn fir.x * sec.y - fir.y * sec.x;\n}\n\nint sign( const LL x )\n{\n\treturn ! x ? 0 : ( x < 0 ? -1 : 1 );\n}\n\nbool chk( const segment x, const segment y )\n{\n\tVector xl_yr = Vector( y.r - x.l ), xl_xr = Vector( x.r - x.l ), xl_yl = Vector( y.l - x.l );\n\tLL m1 = mul( xl_xr, xl_yr ), m2 = mul( xl_xr, xl_yl );\n\tLL mu1 = sign( m1 ) * sign( m2 );\n    //\u8fd9\u91cc\u8f6csign\u662f\u56e0\u4e3a\u76f4\u63a5\u4e58\u7684\u8bdd\u4f1a\u7206long long\n\tif( mu1 > 0 ) return false;\n\tVector yl_xr = Vector( x.r - y.l ), yl_yr = Vector( y.l - y.r ), yl_xl = Vector( x.l - y.l );\n\tLL m3 = mul( yl_yr, yl_xr ), m4 = mul( yl_yr, yl_xl );\n\tLL mu2 = sign( m3 ) * sign( m4 );\n\tif( mu2 > 0 ) return false;\n\treturn true;\n}\n\nint main()\n{\n//\tfreopen( \"jump.in\", \"r\", stdin );\n//\tfreopen( \"jump.out\", \"w\", stdout );\n\tpoint lp, rp;\n\tint x1, x2, y1, y2;\n\tread( N );\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t{\n\t\tread( x1 ), read( y1 ), read( x2 ), read( y2 );\n\t\tseg[i].indx = i;\n\t\tseg[i].l = point( x1, y1, i );\n\t\tseg[i].r = point( x2, y2, i );\n\t\tP[2 * i - 1] = seg[i].l;\n\t\tP[2 * i] = seg[i].r;\n\t}\n\tsort( P + 1, P + 1 + 2 * N );\n\tint fir, sec, ind;\n\tfor( int i = 1 ; i <= 2 * N ; i ++ )\n\t{\n\t\tpos = P[i].x;\n\t\tind = P[i].indx;\n\t\titer it = s.find( seg[ind] );\n\t\tif( it != s.end() )\n\t\t{\n\t\t\titer pre = it, succ = it; succ ++;\n\t\t\tif( pre != s.begin() && succ != s.end() )\n\t\t\t{\n\t\t\t\tpre--;\n\t\t\t\tif( chk( seg[pre->indx], seg[succ->indx] ) )\n\t\t\t\t{\n\t\t\t\t\tfir = pre->indx, sec = succ->indx;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\ts.erase( it );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tit = s.lower_bound( seg[ind] );\n\t\t\tif( it != s.end() && chk( seg[it->indx], seg[ind] ) )\n\t\t\t{\n\t\t\t\tfir = ind, sec = it->indx;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif( it != s.begin() )\n\t\t\t{\t\n\t\t\t\tit --;\n\t\t\t\tif( chk( seg[it->indx], seg[ind] ) )\n\t\t\t\t{\n\t\t\t\t\tfir = ind, sec = it->indx;\n\t\t\t\t\tbreak;\n\t\t\t\t}\t\n\t\t\t}\n\t\t\ts.insert( seg[ind] );\n\t\t}\n\t}\n\tif( fir > sec ) fir ^= sec, sec ^= fir, fir ^= sec;\n\tint cnt = 0;\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t{\n\t\tif( i ^ sec && chk( seg[i], seg[sec] ) ) cnt ++;\n\t}\n\twrite( cnt > 1 ? sec : fir ), putchar( '\\n' );\n\treturn 0;\n}\n```",
        "postTime": 1565875189,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "19\u5e74\u6691\u5047\u9ad8\u4e8c\u7b2c\u5341\u4e03\u573a\u2014\u2014[LG P5428][USACO19OPEN]Cow Steeplechase II"
    },
    {
        "content": "# P5428 [USACO19OPEN]Cow Steeplechase II S\n\n## \u9898\u76ee\n\n$\\bullet$ \u7ed9\u5b9a$n$\u6761\u7ebf\u6bb5\uff0c\u95ee\u53bb\u6389\u54ea\u6761\u7ebf\u6bb5\u4f7f\u5f97\u5269\u4e0b\u7684\u7ebf\u6bb5\u6ca1\u6709\u4ea4\u70b9\uff0c\u591a\u79cd\u7b54\u6848\u8f93\u51fa\u7f16\u53f7\u6700\u5c0f\u7684\u4e00\u6761\uff0c\u4fdd\u8bc1\u6709\u89e3\n\n## \u524d\u7f6e\u77e5\u8bc6\uff1a\u5224\u5b9a\u7ebf\u6bb5\u662f\u5426\u76f8\u4ea4\n\n$\\bullet$ \u5c06\u7ebf\u6bb5\u8868\u793a\u4e3a\u51fd\u6570\u5f62\u5f0f\uff0c\u5e26\u516c\u5f0f\u6c42\u4ea4\u70b9\uff0c\u5224\u65ad\u4ea4\u70b9\u662f\u5426\u5728\u4e24\u6761\u76f4\u7ebf\u4e0a\uff0c\u4f1a\u7206\u7cbe\u5ea6\n\n$\\bullet$ \u4f7f\u7528**\u5feb\u901f\u6392\u65a5\u5b9e\u9a8c + \u8de8\u7acb\u5b9e\u9a8c**\uff08\u8bf4\u767d\u4e86\u5c31\u662f\u5411\u91cf\uff09\n\n&emsp; &emsp; $\\circ$ \u5feb\u901f\u6392\u65a5\u5b9e\u9a8c\uff1a\n\n![pic](https://cdn.luogu.com.cn/upload/image_hosting/00vmsgzl.png)\n\n&emsp; &emsp; &emsp; &emsp; $\\diamond$ \u5feb\u901f\u6392\u65a5\u5b9e\u9a8c\u5373\u521d\u6b65\u5224\u5b9a\u4e24\u7ebf\u6bb5\u662f\u5426\u76f8\u4ea4\uff0c\u5c06\u7ebf\u6bb5\u770b\u505a\u4e24\u4e2a\u77e9\u5f62\u7684\u5bf9\u89d2\u7ebf\u5224\u65ad\u4e24\u77e9\u5f62\u662f\u5426\u76f8\u4ea4\n\n&emsp; &emsp; &emsp; &emsp; $\\diamond$ \u5feb\u901f\u6392\u65a5\u5b9e\u9a8c\u4e0d\u80fd\u5224\u5b9a\u7ebf\u6bb5\u662f\u5426\u76f8\u4ea4\uff0c\u8fd8\u9700\u8fdb\u884c\u8de8\u7acb\u5b9e\u9a8c\n\n&emsp; &emsp; $\\circ$ \u8de8\u7acb\u5b9e\u9a8c\uff1a\n\n![pic](https://cdn.luogu.com.cn/upload/image_hosting/3zryxalr.png)\n\n&emsp; &emsp; &emsp; &emsp; $\\diamond$ \u8de8\u7acb\u5b9e\u9a8c\u5373\u5224\u65ad\u4e24\u6761\u7ebf\u6bb5\u662f\u5426\u4e92\u76f8\u8de8\u7acb\uff08\u4e92\u76f8\u8de8\u8d8a\uff0c\u5373\u76f8\u4ea4\uff09\n \n&emsp; &emsp; &emsp; &emsp; $\\diamond$ \u7531\u56fe\u53ef\u77e5\uff0c\u5f53\u4e24\u7ebf\u6bb5\u4e92\u76f8\u8de8\u7acb\u65f6\uff0c\u4ece\u7ebf\u6bb5$x$\u7684\u8d77\u70b9$A$\u51fa\u53d1\u5411\u7ebf\u6bb5$y$\u7684\u8d77\u70b9$C$\u548c\u7ec8\u70b9$D$\u6784\u9020\u5411\u91cf$\\overrightarrow{AC}\uff0c\\overrightarrow{AD}$\uff0c\u663e\u7136$\\overrightarrow{AC}\uff0c\\overrightarrow{AD}$\u5e94\u8be5\u5206\u522b\u5728\u7ebf\u6bb5$x$\u7684\u4e24\u4fa7\uff0c\u5bf9\u7ebf\u6bb5$y$\u540c\u7406\u3002\u53ea\u8981\u4e24\u7ebf\u6bb5\u4e2d\u6709\u4e00\u6761\u4e0d\u6ee1\u8db3\u5219\u4e24\u7ebf\u6bb5\u4e0d\u76f8\u4ea4\u3002\n\n&emsp; &emsp; &emsp; &emsp; $\\diamond$ \u5bf9\u4e0e\u5982\u4f55\u5224\u65ad\u4e24\u5411\u91cf\u662f\u5426\u5728\u53e6\u4e00\u4e2a\u5411\u91cf\u7684\u4e24\u4fa7\uff0c\u53ef\u4ee5\u4f7f\u7528\u5411\u91cf\u7684\u53c9\u4e58\u3002\u5373\u540c\u4e00\u65b9\u5411\u7684\u53c9\u79ef\u6b63\u8d1f\u6027\u4e00\u6837\uff0c\u6240\u4ee5\u5bf9\u4e24\u5411\u91cf\u5206\u522b\u4e0e\u53e6\u4e00\u5411\u91cf\u6c42\u53c9\u79ef\uff0c\u82e5\u7ebf\u6bb5\u76f8\u4ea4\uff0c\u90a3\u4e48\u4e24\u4e2a\u53c9\u79ef\u7684\u79ef\u5e94\u8be5\u4e3a\u6b63\n\n## \u5206\u6790\n\n$\\bullet$ \u56e0\u4e3a\u53ea\u8981\u79fb\u9664\u4e00\u6761\u7ebf\u6bb5\uff0c\u8fd9\u5f20\u5730\u56fe\u5c31\u53ef\u4ee5\u6062\u590d\u5230\u9884\u671f\u6ca1\u6709\u76f8\u4ea4\u7ebf\u6bb5\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u53ea\u8981\u627e\u51fa**\u4efb\u610f\u4e24\u6761\u76f8\u4ea4\u7684\u7ebf\u6bb5\uff0c\u7b54\u6848\u5c31\u662f\u4e24\u6761\u4e4b\u4e00**\uff0c\u66b4\u529b\u68c0\u67e5\u4e00\u4e0b\u5373\u53ef\u3002\u4e8e\u662f\u8f6c\u5316\u4e3a**\u5982\u4f55\u5feb\u901f\u627e\u5230\u4e24\u6761\u76f8\u4ea4\u7684\u7ebf\u6bb5**\n \t\n$\\bullet$ \u6ce8\u610f\u5230\u4e24\u6761\u7ebf\u6bb5\u76f8\u4ea4\u7684\u5148\u51b3\u6761\u4ef6\u662f**\u8fd9\u4e24\u6761\u7ebf\u6bb5\u5728x\u8f74\u4e0a\u7684\u6295\u5f71\u6709\u4ea4\u96c6**\n\n$\\bullet$ \u5b9a\u4e49\u4e00\u4e2a$set$\u6765\u7ef4\u62a4**\u5728$x$\u8f74\u7684\u6295\u5f71\u4e0a\u5305\u542b\u4e86$now$\u8fd9\u4e2a\u70b9\u7684\u4e0d\u76f8\u4ea4\u7ebf\u6bb5**\n \t$\\bullet$ \u56e0\u4e3a\u5728$set$\u4e2d\u7ebf\u6bb5\u4e0d\u76f8\u4ea4\uff0c\u6240\u4ee5**\u7ebf\u6bb5\u7684\u4e0a\u4e0b\u5173\u7cfb\u4e0d\u4f1a\u6539\u53d8**\uff0c\u53ef\u4ee5\u7528\u67d0\u6761\u76f4\u7ebf\u4e0e\u7ebf\u6bb5\u4ea4\u70b9\u7684\u9ad8\u5ea6\u5bf9\u7ebf\u6bb5\u6392\u5e8f\n\n## \u7b97\u6cd5\u6d41\u7a0b\n\n$\\bullet$ \u5bf9\u4e8e\u8f93\u5165\u7684$2n$\u4e2a\u70b9, \u4ee5$x$\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57, $y$\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57, \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5e76\u6807\u8bb0\u597d\u8be5\u70b9\u5c5e\u4e8e\u54ea\u4e00\u6761\u7ebf\u6bb5\n\t\n$\\bullet$ \u4f9d\u6b21\u626b\u63cf\u6bcf\u4e2a\u70b9\uff0c\u8bbe\u8be5\u70b9\u6240\u5728\u7684\u7ebf\u6bb5\u4e3a$seg$\uff0c\u8fd9\u4e2a\u70b9\u6240\u5728\u7684$x$\u8f74\u5373\u4e3a\u4e0a\u9762\u8bf4\u7684\u90a3\u6761\u76f4\u7ebf\n\n&emsp; &emsp; $\\circ$ \u82e5$seg$\u4e0d\u5728$set$\u5185\uff1a\u4e8c\u5206\u627e\u5230$seg$\u5e94\u8be5\u63d2\u5165\u7684\u4f4d\u7f6e\uff0c\u5e76\u5224\u65ad\u8be5\u4f4d\u7f6e\u4e0a\u4e0b\u7684\u7ebf\u6bb5\u662f\u5426\u4e0e$seg$\u76f8\u4ea4\u3002\u82e5\u76f8\u4ea4\uff0c\u4fdd\u5b58\u4e24\u6761\u76f8\u4ea4\u7684\u7ebf\u6bb5\u4e0b\u6807\u5e76\u9000\u51fa\u3002\u5426\u5219\uff0c\u5c06$seg$\u52a0\u5165$set$\n\n&emsp; &emsp; $\\circ$ \u82e5$seg$\u5728$set$\u5185\uff1a\u5982\u679c$seg$\u4e0a\u4e0b\u90fd\u6709\u7ebf\u6bb5\uff0c\u627e\u5230\u8fd9\u4e24\u6761\u7ebf\u6bb5\uff0c\u5224\u65ad\u5b83\u4eec\u662f\u5426\u76f8\u4ea4\u3002\u82e5\u76f8\u4ea4\uff0c\u4fdd\u5b58\u4e24\u6761\u7ebf\u6bb5\u4e0b\u6807\u5e76\u9000\u51fa\u3002\u5426\u5219\uff0c\u5c06$seg$\u4ece$set$\u4e2d\u5220\u9664\n \t\t\t$\\diamond$ \u4e3a\u4ec0\u4e48\u5728\u5220\u9664\u7684\u65f6\u5019\u9700\u8981\u518d\u5224\u65ad\u4e00\u6b21\uff1f \u56e0\u4e3a\u5728\u52a0\u5165\u7684\u65f6\u5019\u4e4b\u5224\u65ad\u4e86\u65b0\u52a0\u5165\u7684\u7ebf\u6bb5\u4e0e\u4e0a\u4e0b\u7684\u5173\u7cfb\uff0c\u800c\u5e76\u6ca1\u6709\u5224\u65ad\u4e0a\u4e0b\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5982\u4e0b\u56fe\n            \n![pic](https://cdn.luogu.com.cn/upload/image_hosting/bglgeh7h.png)\n\n## \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<cctype>\n#include<set>\nusing namespace std;\n\ntypedef long long ll;\n#define it set<segment>::iterator\nconst int MAXN = 1e5+5;\n\ntemplate <typename T>\ninline void read(T&x){\n\tx=0; char temp=getchar(); bool f=false;\n\twhile(!isdigit(temp)){if(temp=='-') f=true; temp=getchar();}\n\twhile(isdigit(temp)){x=(x<<1)+(x<<3)+temp-'0'; temp=getchar();}\n\tif(f) x=-x;\n}\ntemplate <typename T>\nvoid print(T x){\n\tif(x<0) putchar('-'),x=-x;\n\tif(x>9) print(x/10);\n\tputchar(x%10+'0');\n}\n\n//basic\nint n;\n\n//Point\nint cnt;\nstruct point{\n\tll x,y;\n\tint belong;\n\tinline bool operator <(const point &a)const{return x!=a.x? x<a.x:y<a.y;}\n\tinline point operator -(const point &a){return (point){x-a.x,y-a.y};}\n}p[MAXN<<1];\n\n//Segment\nll now;\nstruct segment{\n\tpoint l,r;\n\tint tag;\n\tinline double calc()const{if(l.x==r.x) return l.y; return 1.0*l.y+1.0*(r.y-l.y)*1.0*(now-l.x)/(1.0*(r.x-l.x));}//\u8ba1\u7b97\u5f53\u524d\u7ebf\u6bb5\uff08\u770b\u505a\u51fd\u6570\uff09\u5728now\u5904\u7684\u53d6\u503c\uff0c\u6ce8\u610f\u7279\u5224\u4e0ex\u8f74\u5782\u76f4\u7684\u60c5\u51b5\n\tinline bool operator <(const segment &a)const{return calc()<a.calc();}\n}l[MAXN];\nset<segment> s;\n\ninline ll CrossMul(point a,point b,point c){a=a-c,b=b-c; ll res=a.x*b.y-a.y*b.x; return res==0? 0:res>0? 1:-1;}\n\ninline bool Cross(segment a,segment b){\n\tif(!(min(a.l.x,a.r.x)<max(b.l.x,b.r.x)&&min(b.l.x,b.r.x)<max(a.l.x,a.r.x)&&min(a.l.y,a.r.y)<max(b.l.y,b.r.y)&&min(b.l.y,b.r.y)<max(a.l.y,a.r.y))) return false;//\u5feb\u901f\u6392\u65a5\u5b9e\u9a8c\n\treturn CrossMul(b.l,a.r,a.l)*CrossMul(a.r,b.r,a.l)>0&&CrossMul(a.l,b.l,b.r)*CrossMul(b.l,a.r,b.r)>0;//\u8de8\u7acb\u5b9e\u9a8c\n}\n\nint main(){\n\tread(n);\n\tfor(register int i=1;i<=n;i++){\n\t\tll x1,y1,x2,y2; read(x1),read(y1),read(x2),read(y2);\n\t\tp[++cnt]=(point){x1,y1,i},p[++cnt]=(point){x2,y2,i};\n\t\tl[i]=(segment){p[cnt-1],p[cnt],i};\n\t}\n\tsort(p+1,p+cnt+1);\n\t\n\tint first=0,second=0;//\u4efb\u610f\u4e24\u6761\u76f8\u4ea4\u7684\u7ebf\u6bb5\u7f16\u53f7\n\tfor(register int i=1;i<=cnt;i++){//\u4f9d\u6b21\u626b\u63cf\u6bcf\u4e2a\u70b9\n\t\tnow=p[i].x;//\u66f4\u65b0now\u4ee5\u4fbf\u91cd\u8f7d\u5c0f\u4e8e\n\t\tint id=p[i].belong;\n\t\tit seg=s.find(l[id]);\n\t\tif(seg!=s.end()){\n\t\t\tit pre=seg,next=seg; next++;\n\t\t\tif(pre!=s.begin()&&next!=s.end()){//\u627e\u5230seg\u7684\u4e0a\u7ebf\u4e24\u6761\u7ebf\u6bb5pre\u4e0enext\n\t\t\t\tpre--;\n\t\t\t\tif(Cross(*pre,*next)){first=pre->tag,second=next->tag; break;}//\u4e0a\u4e0b\u76f8\u4ea4\u4e86\uff0c\u9000\u51fa\n\t\t\t}\n\t\t\ts.erase(seg);\n\t\t}\n\t\telse{\n\t\t\tit pos=s.lower_bound(l[id]);\n\t\t\tif(pos!=s.end()&&Cross(*pos,l[id])){first=pos->tag,second=id; break;}//\u5f53\u524d\u4e0e\u540e\u4e00\u6761\u76f8\u4ea4\u4e86\uff0c\u9000\u51fa\n\t\t\tif(pos!=s.begin()){\n\t\t\t\tpos--;\n\t\t\t\tif(Cross(*pos,l[id])){first=pos->tag,second=id; break;}//\u5f53\u524d\u4e0e\u524d\u4e00\u6761\u76f8\u4ea4\u4e86\uff0c\u9000\u51fa\n\t\t\t}\n\t\t\ts.insert(l[id]);\n\t\t}\n\t}\n\t\n\tif(first>second) swap(first,second);\n\tint temp=0;\n\tfor(register int i=1;i<=n;i++)\n\t\tif(i!=second&&Cross(l[i],l[second])) temp++;\n\tprint(temp>1? second:first);\n\treturn 0;\n}\n```",
        "postTime": 1599730087,
        "uid": 48316,
        "name": "\u6211\u53bb",
        "ccfLevel": 6,
        "title": "P5428 [USACO19OPEN]Cow Steeplechase II S Solution"
    },
    {
        "content": "\u975e\u6b63\u89e3\u4e71\u5207\u6bd2\u7624\u9898\u796d\n\n# \u9898\u5916\u8bdd\n\n\u8fd9\u9898\u6b63\u89e3\u5f53\u7136\u662f$set$+\u626b\u63cf\u7ebf,\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684,\u4f46\u662f\u6211\u6700\u5f00\u59cb\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019\u89c9\u5f97\u5c31\u4e00\u4e2asilver,\u600e\u4e48\u53ef\u80fd\u8fd9\u4e48\u6bd2,\u4e8e\u662f\u5f00\u59cb\u7528~~noip~~csp\u7684\u601d\u7ef4\u4e71$yy$,\u7ed3\u679c\u60f3\u51fa\u6765\u4e86\u4e00\u4e2a\u7406\u8bba$n^2$\u4f46\u662f\u5b9e\u9645\u4e0a\u53ca\u5176\u4f18\u79c0\u7684\u7b97\u6cd5233\n\n# \u5206\u6790\u4e00\u6ce2\n\n\u9996\u5148,\u7edd\u5bf9$n^2$\u7684\u7b97\u6cd5\u5e94\u8be5\u4e0d\u96be\u5bf9\u5427\n\n\u8fd9\u91cc\u6211\u4eec\u8003\u8651\u8fdb\u884c\u4f18\u5316\n\n\u53ef\u4ee5\u770b\u51fa\u6765\u5bf9\u4e8e\u6bcf\u4e00\u6761\u7ebf\u6bb5,\u4e0e\u5176\u76f8\u4ea4\u7684\u7ebf\u6bb5\u90fd\u662f\u6709\u4e00\u5b9a\u5173\u8054\u7684,\u90a3\u4e48\u6211\u4eec\u5c31\u5c06\u8fd9\u6837\u5173\u8054\u7684\u7ebf\u6bb5\u96c6\u4e2d\u5728\u4e00\u8d77\n\n> \u5bf9\u4e8e\u4e00\u6761\u7ebf\u6bb5,\u5de6\u53f3\u7aef\u70b9\u4ea4\u6362\u4e0d\u4f1a\u5bf9\u5176\u4ea7\u751f\u5f71\u54cd,\u6240\u4ee5\u6211\u4eec\u8fdb\u884c\u8c03\u6574\n> \u6211\u4eec\u7ef4\u62a4\u8fd9\u6837\u4e00\u4e2a\u5173\u7cfb:$y_1\\le y_2$\u5f53$y_1 = y_2$\u7684\u65f6\u5019\uff0c\u7ef4\u62a4$x_1 < x_2$\n\n> \u518d\u5bf9\u4e8e\u6240\u6709\u7ebf\u6bb5\uff0c\u6211\u4eec\u4ee5$y_1$\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57,$x_1$\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\n\n\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u8f7b\u6613\u7684\u53d1\u73b0:\u5bf9\u4e8e\u4efb\u4f55\u4e00\u6761\u7ebf\u6bb5$Seg_i$,\u53ea\u6709\u53ef\u80fd\u4e0e$Seg_j$\u76f8\u4ea4,\uff08\u8fd9\u91cc$Seg_j$\u4fdd\u8bc1$Seg_j\\text{->}y1 \\le Seg_i\\text{->}y2$\n\n\u8fd9\u5c31\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\u4e86\uff08\u867d\u7136\u8fd8\u662f\u7406\u8bba$O(n^2)$\u4f46\u662f\u5b9e\u9645\u4e0a\u98de\u5feb\uff09\n\n# \u57fa\u672c\u64cd\u4f5c\n\n\u5269\u4e0b\u7684\u90fd\u662f\u4e9b\u57fa\u672c\u64cd\u4f5c\u4e86\n\n## \u7ebf\u6bb5\u76f8\u4ea4\n\n\u8fd9\u91cc\u6211\u5e76\u6ca1\u6709\u4f7f\u7528\u8ba1\u7b97\u51e0\u4f55,\u800c\u662f\u975e\u5e38\u5355\u7eaf\u800c~~noip~~\u66b4\u529b\u5730\u7528\u5e73\u9762\u51e0\u4f55\u829d\u58eb\u8fdb\u884c\u5224\u5b9a\n\n>  **tips:\u8fd9\u91cc\u9700\u8981\u7279\u522b\u6ce8\u610f\u7ebf\u6bb5\u7ad6\u76f4\u4e0e\u4e24\u7ebf\u6bb5\u4ea4\u70b9\u7684\u5224\u5b9a**\n\n```c++\ndb Gety(Segment a,db x){\n    //\u8ba1\u7b97\u76f4\u7ebfa\u5728x\u7684y\u503c\n\tdb k=(a.y2-a.y1)/(a.x2-a.x1),b=a.y1-k*a.x1;\n\treturn k*x+b;\n}\ndb CrossPointx(Segment a,Segment b){\n\tif(a.x1>a.x2)swap(a.x1,a.x2),swap(a.y1,a.y2);\n\tif(b.x1>b.x2)swap(b.x1,b.x2),swap(b.y1,b.y2);\n\tdb k1=(a.y2-a.y1)/(a.x2-a.x1);db b1=a.y1-k1*a.x1;\n\tdb k2=(b.y2-b.y1)/(b.x2-b.x1);db b2=b.y1-k2*b.x1;\n    //\u5e73\u884creturn -1\u662f\u56e0\u4e3a\u539f\u9898\u4e2d\u6240\u6709\u5750\u6807\u7ef4\u62a4\u5728x\u6b63\u534a\u8f74,y\u6b63\u534a\u8f74\u548c\u7b2c\u4e8c\u8c61\u9650\u5185\n\tif(k1==k2)return -1;\n\treturn (b2-b1)/(k1-k2);\n}\nbool Cross(ll aa,ll bb){\n\tSegment a=seg[aa],b=seg[bb];db tmp;\n    //\u4e24\u6761\u7ebf\u6bb5\u90fd\u7ad6\u76f4\n\tif(a.x1==a.x2&&b.x1==b.x2)return a.y1<b.y2&&a.y2>=b.y1&&a.x1==b.x1;\n    //\u7b2c\u4e00\u6761\u7ad6\u76f4\n\tif(a.x1==a.x2){\n\t\ttmp=Gety(b,a.x1);\n\t\treturn tmp>=a.y1&&tmp<=a.y2&&tmp>=b.y1&&tmp<=b.y2;\n\t}\n    //\u7b2c\u4e8c\u6761\u7ad6\u76f4\n\tif(b.x1==b.x2){\n\t\ttmp=Gety(a,b.x1);\n\t\treturn tmp>=a.y1&&tmp<=a.y2&&tmp>=b.y1&&tmp<=b.y2;\n\t}\n    //\u4e24\u6761\u90fd\u4e0d\u7279\u6b8a\n\ttmp=CrossPointx(a,b);//\u4ea4\u70b9x\u5750\u6807\n\treturn tmp>=Min(a.x1,a.x2)&&tmp<=Max(a.x1,a.x2)&&tmp>=Min(b.x1,b.x2)&&tmp<=Max(b.x1,b.x2);\n}\n```\n\n# \u7b97\u6cd5\u672c\u4f53\u7b80\u8ff0\n\n\u9996\u5148\u6309\u4e0a\u8ff0\u65b9\u5f0f\u7ed9\u7ebf\u6bb5\u6392\u5e8f\n\n\u7136\u540e\u627e\u51fa\u76f8\u4ea4\u7684\u4efb\u610f\u4e24\u6761\u7ebf\u6bb5(\u8bb0\u4e3a$x,y$)\n\n\u5206\u522b\u6c42\u51fa\u4e0e\u8fd9\u4e24\u6761\u7ebf\u6bb5\u76f8\u4ea4\u7684\u7ebf\u6bb5\u6761\u6570,\u8bb0\u4e3a$num_x,num_y$\n\n\u8fd9\u91cc\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u4e24\u4e2a$num$\u4e0d\u540c,\u5219\u7b54\u6848\u5fc5\u5b9a\u662f$num$\u5927\u7684\u90a3\u4e00\u6761\u7ebf\u6bb5,\u8bc1\u660e\u5982\u4e0b\n\n> \u8fd9\u91cc\u4f7f\u7528\u53cd\u8bc1\u6cd5,\u5047\u8bbe\u6211\u4eec\u8981\u9009\u62e9\u7684\u662f$num$\u5c0f\u7684\u90a3\u6761\u7ebf\u6bb5y\n>\n> \u90a3\u4e48\u4e0ex\u76f8\u4ea4\u7684$num_x$\u6761\u7ebf\u6bb5\u4e2d\u5fc5\u7136\u6709\u4e00\u4e9b\u7ebf\u6bb5\u4ecd\u7136\u4e0ex\u76f8\u4ea4\n>\n> \u6240\u4ee5\u4e0d\u80fd\u9009$y$\n\n(\u8fd9\u91cc\u7ed9\u7684\u8bc1\u660e\u6709\u70b9\u53e3\u80e1,\u5982\u679c\u641e\u4e0d\u61c2\u7684\u8bdd\u8bf7\u76f4\u63a5\u624b\u63a8,\u8fd9\u4e2a\u7ed3\u8bba\u5f88\u597d\u63a8)\n\n\u5982\u679c$num$\u76f8\u540c\u7684\u8bdd\u5c31\u8f93\u51fa\u7f16\u53f7\u5c0f\u7684\u54af\n\n# ~~\u559c\u95fb\u4e50\u89c1\u7684~~\u4ee3\u7801\n\n```c++\n#include<bits/stdc++.h>\n#define ll long long\n#define db double\n#define maxn 100005\n#define Max(a,b) (((a)>(b))?(a):(b))\n#define Min(a,b) (((a)<(b))?(a):(b))\nusing namespace std;\nll read(){\n\tll a=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){a=a*10+c-'0';c=getchar();}\n\treturn a*f;\n}\nstruct Segment{db x1,y1,x2,y2,id;}seg[maxn];\nint cmp(Segment a,Segment b){\n\tif(a.y1!=b.y1)return a.y1<b.y1;\n\treturn a.x1<b.x1;\n}\ndb Gety(Segment a,db x){\n\tdb k=(a.y2-a.y1)/(a.x2-a.x1),b=a.y1-k*a.x1;\n\treturn k*x+b;\n}\ndb CrossPointx(Segment a,Segment b){\n\tif(a.x1>a.x2)swap(a.x1,a.x2),swap(a.y1,a.y2);\n\tif(b.x1>b.x2)swap(b.x1,b.x2),swap(b.y1,b.y2);\n\tdb k1=(a.y2-a.y1)/(a.x2-a.x1);db b1=a.y1-k1*a.x1;\n\tdb k2=(b.y2-b.y1)/(b.x2-b.x1);db b2=b.y1-k2*b.x1;\n\tif(k1==k2)return -1;\n\treturn (b2-b1)/(k1-k2);\n}\nbool Cross(ll aa,ll bb){\n\tSegment a=seg[aa],b=seg[bb];db tmp;\n\tif(a.x1==a.x2&&b.x1==b.x2)return a.y1<b.y2&&a.y2>=b.y1&&a.x1==b.x1;\n\tif(a.x1==a.x2){tmp=Gety(b,a.x1);return tmp>=a.y1&&tmp<=a.y2&&tmp>=b.y1&&tmp<=b.y2;}\n\tif(b.x1==b.x2){tmp=Gety(a,b.x1);return tmp>=a.y1&&tmp<=a.y2&&tmp>=b.y1&&tmp<=b.y2;}\n\ttmp=CrossPointx(a,b);\n\treturn tmp>=Min(a.x1,a.x2)&&tmp<=Max(a.x1,a.x2)&&tmp>=Min(b.x1,b.x2)&&tmp<=Max(b.x1,b.x2);\n}\nll n;\nll Check(ll x){\n\tll ret=0;\n\tfor(int i=1;i<=n;i++){\n\t\tif(i==x)continue;\n\t\tret+=Cross(Min(i,x),Max(i,x));\n\t}\n\treturn ret;\n}\nint main(){\n\tn=read();\n\tfor(int i=1,x1,x2,y1,y2;i<=n;i++){\n\t\tx1=read();y1=read();\n\t\tx2=read();y2=read();\n\t\tif(y1>y2){swap(x1,x2);swap(y1,y2);}\n\t\tif(y1==y2&&x1>x2){swap(x1,x2);}\n\t\tseg[i]=(Segment){x1,y1,x2,y2,i};\n\t}\n\tsort(seg+1,seg+n+1,cmp);\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=i+1;j<=n;j++){\n\t\t\tif(seg[j].y1>seg[i].y2)break;\n\t\t\tif(Cross(i,j)){\n\t\t\t\tll num1=Check(i),num2=Check(j);\n\t\t\t\tif(num1==num2)cout<<Min(seg[i].id,seg[j].id);\n\t\t\t\telse cout<<(num1>num2?seg[i].id:seg[j].id);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n/*\n5\n7 1 4 0\n2 1 2 6\n1 4 4 2\n3 2 4 3\n5 2 5 5\n*/\n/*\n9\n9 6 6 8\n8 5 6 5\n8 4 4 1\n4 9 4 5\n8 3 7 0\n0 7 1 2\n7 4 9 5\n6 9 6 4\n2 1 7 7\n*/\n```\n\n(\u4e0b\u9762\u4ee3\u7801\u6700\u540e\u7ed9\u51fa\u4e86\u6211\u8c03\u4ee3\u7801\u7684\u65f6\u5019$hack$\u81ea\u5df1\u7684\u6570\u636e)\n\n# \u7ed3\u5c3e\n\n\u5982\u679c\u5199\u4e86\u8fd9\u79cd\u65b9\u6cd5\u7684\u7ae5\u978b\u8bf7\u8fd8\u662f\u53bb\u7ec3\u4e00\u7ec3\u6b63\u89e3,\u6bd5\u7adf\u65f6\u95f4\u7384\u5b66\u4e0d\u592a\u597d233\n\n(\u6c42\u5404\u4f4d\u5927\u4f6c\u4e0d\u8981\u5361\u6211)\n\n",
        "postTime": 1569484244,
        "uid": 23771,
        "name": "p9t6g",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5428 \u3010[USACO19OPEN]Cow Steeplechase II\u3011"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/P5428)\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a[\u5224\u65ad\u4e24\u4e2a\u7ebf\u6bb5\u662f\u5426\u76f8\u4ea4](https://blog.csdn.net/zhouzi2018/article/details/81871875)\n\n\u9996\u5148 $O(N^2)$ \u7684\u505a\u6cd5\u5f88\u597d\u60f3\u3002\n\n\u4ed4\u7ec6\u5206\u6790\u9898\u76ee\u6027\u8d28\u4e4b\u540e\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u53ea\u9700\u8981\u627e\u51fa\u4e00\u5bf9\u76f8\u4ea4\u7ebf\u6bb5\u5c31\u53ef\u4ee5\u4e86\uff0c\u7b54\u6848\u5fc5\u662f\u5176\u4e2d\u4e4b\u4e00\u3002\n\n\u6211\u4eec\u628a\u6bcf\u4e2a\u7ebf\u6bb5\u7684\u7aef\u70b9\u6309 x \u5750\u6807\u6392\u5e8f\uff0c\u6bcf\u9047\u5230\u4e00\u4e2a\u8d77\u70b9\u5c06\u5bf9\u5e94\u7ebf\u6bb5\u52a0\u5230 set \u91cc\uff0c\u9047\u5230\u7ec8\u70b9\u5c06\u5bf9\u5e94\u7ebf\u6bb5\u4ece set \u91cc\u5220\u6389\u3002\u8fd9\u6837\u5982\u679c\u5f53\u524d\u7684\u626b\u5230\u4e86\u6a2a\u5750\u6807\u5728 $X$ \u7684\u7aef\u70b9\uff0c\u53ef\u4ee5\u4fdd\u8bc1 set \u4e2d\u7684\u6240\u6709\u7ebf\u6bb5\u90fd\u7ecf\u8fc7 $x=X$ \u8fd9\u6761\u76f4\u7ebf\u3002\n\n\u5047\u8bbe set \u91cc\u5df2\u7ecf\u7ef4\u62a4\u4e86\u82e5\u5e72\u4e0d\u76f8\u4ea4\u7684\u7ebf\u6bb5\u96c6\u5408\uff0c\u90a3\u4e48\u8fd9\u4e9b\u7ebf\u6bb5\u201c\u76f8\u5bf9\u5e73\u884c\u201d\u3002\u73b0\u5728\u5f80\u91cc\u9762\u52a0\u5165\u4e00\u6761\u7ebf\u6bb5\uff0c\u5047\u8bbe\u8fd9\u6761\u7ebf\u6bb5\u4e0e\u53e6\u4e00\u6761\u7ebf\u6bb5\u76f8\u4ea4\uff0c\u90a3\u4e48\u53ef\u4ee5\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n1.\u8fd9\u4e24\u6761\u7ebf\u6bb5\u5728\u76f4\u7ebf $x=X$ \u4e0a\u7684\u4ea4\u70b9\u4e2d\u95f4\u6ca1\u6709\u5176\u4ed6\u7ebf\u6bb5\n\n2.\u8fd9\u4e24\u6761\u7ebf\u6bb5\u5728\u76f4\u7ebf $x=X$ \u4e0a\u7684\u4ea4\u70b9\u4e2d\u6709\u5176\u4ed6\u7ebf\u6bb5\n\n\u6240\u4ee5\u52a0\u5165\u4e00\u6761\u7ebf\u6bb5\u65f6 check \u4e00\u4e0b\u4e0e\u5176\u4ed6\u4e24\u6761\u4ea4\u70b9\u76f8\u90bb\u7ebf\u6bb5\u7684\u76f8\u4ea4\u5173\u7cfb\u5c31\u53ef\u4ee5\u89e3\u51b3\u60c5\u51b5 1\u3002\n\n\u4e0a\u9762\u8fd9\u6761\u4e5f\u63d0\u793a\u6211\u4eec set \u5185\u7684\u5927\u5c0f\u5173\u7cfb\u8981\u6839\u636e\u4e0e $x=X$ \u7684\u4ea4\u70b9\u7eb5\u5750\u6807\u5927\u5c0f\u6765\u5224\u65ad\u3002\uff08\u56e0\u4e3a set \u5185\u7684\u7ebf\u6bb5\u201c\u76f8\u5bf9\u5e73\u884c\u201d\uff0c\u6240\u4ee5 $x$ \u79fb\u52a8\u65f6\u7ebf\u6bb5\u7684\u4e0a\u4e0b\u5173\u7cfb\u5e76\u4e0d\u4f1a\u6539\u53d8\uff09\n\n\u60c5\u51b5 2 \u5728\u5220\u9664\u65f6\u5904\u7406\u3002\n\n\u5047\u8bbe\u7ebf\u6bb5 a\u3001b\u3001c \u4ece\u4e0a\u5230\u4e0b\u6392\u6210\u4e86\u4e0b\u56fe\u6240\u793a\u7684\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/uhvjza45.png)\n\n\u53ef\u4ee5\u53d1\u73b0\u60c5\u51b5 2 \u7684\u76f8\u4ea4\u60c5\u51b5\u53ea\u6709\u8fd9\u4e00\u79cd\u53ef\u80fd\u3002\uff08\u4e24\u6761\u76f8\u4ea4\u7684\u957f\u7ebf\u6bb5\u4e2d\u95f4\u5939\u4e86\u4e00\u6761\u77ed\u7ebf\u6bb5\uff09\n\n\u90a3\u4e48\u6211\u4eec\u5220\u9664 b \u80af\u5b9a\u65e9\u4e8e\u5220\u9664 a \u548c c\uff0c\u5728\u5220\u9664 b \u65f6 check \u4e00\u4e0b a \u548c c \u7684\u76f8\u4ea4\u5173\u7cfb\u5373\u53ef\u3002\n\n\u6574\u7406\u4e00\u4e0b\uff1a\n\n1.\u63d2\u5165\u4e00\u6761\u7ebf\u6bb5\u65f6\uff0ccheck \u5b83\u548c\u76f8\u90bb\u4e24\u6761\u7ebf\u6bb5\u7684\u76f8\u4ea4\u5173\u7cfb\u3002\n\n2.\u5220\u9664\u4e00\u6761\u7ebf\u6bb5\u65f6\uff0ccheck \u5b83\u76f8\u90bb\u4e24\u6761\u7ebf\u6bb5\u4e4b\u95f4\u7684\u76f8\u4ea4\u5173\u7cfb\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<set>\n#define int long long\n#define it set<seg>::iterator\nusing namespace std;\nconst int MAXN = 2e5 + 50;\nint N, X;\nstruct po\n{\n    int x, y, id;\n    po(){}\n    po(int a, int b) \n    {\n        x = a;\n        y = b;\n    }\n    bool operator<(const po &tmp) const\n    {\n        if (x == tmp.x)\n            return y < tmp.y;\n        return x < tmp.x;\n    }\n    po operator-(const po &tmp) const\n    {\n        return po(x - tmp.x, y - tmp.y);\n    }\n    int operator*(const po &tmp) const\n    {\n        return x * tmp.y - tmp.x * y;\n    }\n} poi[MAXN * 2];\nstruct seg\n{\n    po a, b;\n    int id;\n    double calc() const\n    {\n        if (b.x == a.x)\n            return a.y;\n        double k = 1.0 * (b.y - a.y) / (1.0 * (b.x - a.x));\n        return a.y + 1.0 * k * (X - a.x);\n    }\n    bool operator<(const seg &tmp) const\n    {\n        return calc() < tmp.calc();\n    }\n    double operator*(const seg &tmp) const\n    {\n        return 1.0 * (b.x - a.x) * (tmp.b.y - tmp.a.y) - 1.0 * (tmp.b.x - tmp.a.x) * (b.y - a.y);\n    }\n} l[MAXN];\nbool check(seg a, seg b)\n{\n    int tag = 0;\n    if ((min(a.a.x, a.b.x) < max(b.a.x, b.b.x) && min(b.a.x, b.b.x) < max(a.a.x, a.b.x) && min(a.a.y, a.b.y) < max(b.a.y, b.b.y) && min(b.a.y, b.b.y) < max(a.a.y, a.b.y)))\n    {\n        // cout << a.id << \" \" << b.id << \":\" << \"yes\" << endl;\n        if (((b.a - a.a) * (a.b - a.a)) * ((b.b - a.a) * (a.b - a.a)) <= 0 && ((a.a - b.a) * (b.b - b.a)) * ((a.b - b.a) * (b.b - b.a)) <= 0)\n            tag = 1;\n    }\n    // cout << a.id << \" \" << b.id << \":\" << tag << endl;\n    return tag;\n}\nint fir, sec;\nset<seg> S;\nvoid solve()\n{\n    for (int i = 1; i <= 2 * N; ++i)\n    {\n        X = poi[i].x;\n        int id = poi[i].id;\n        it pos = S.find(l[id]);\n        if (pos == S.end())\n        {\n            it a = S.lower_bound(l[id]);\n            it b = S.lower_bound(l[id]);\n            if (b != S.end() && check(l[id], *b))\n            {\n                fir = id;\n                sec = b->id;\n                return;\n            }\n            if (a != S.begin())\n            {\n                a--;\n                if (check(l[id], *a))\n                {\n                    fir = id;\n                    sec = a->id;\n                    return;\n                }\n            }\n            S.insert(l[id]);\n        }\n        else\n        {\n            it a = pos;\n            it b = pos;\n            if (b != S.end())\n                b++;\n            if (a != S.begin())\n                a--;\n            if (b != S.end() && check(*a, *b))\n            {\n                fir = a->id;\n                sec = b->id;\n                return;\n            }\n            S.erase(l[id]);\n        }\n    }\n}\nsigned main()\n{\n    scanf(\"%lld\", &N);\n    for (int i = 1; i <= N; ++i)\n    {\n        scanf(\"%lld%lld%lld%lld\", &poi[i * 2 - 1].x, &poi[i * 2 - 1].y, &poi[i * 2].x, &poi[i * 2].y);\n        poi[i * 2 - 1].id = poi[i * 2].id = i;\n        l[i].a = poi[i * 2 - 1];\n        l[i].b = poi[i * 2];\n        l[i].id = i;\n    }\n    sort(poi + 1, poi + 2 * N + 1);\n    for (int i = 1; i <= N; ++i)\n        for (int j = 1; j <= N; ++j)\n            check(l[i], l[j]);\n    solve();\n    if (fir > sec)\n        swap(fir, sec);\n    int cnt = 0;\n    for (int i = 1; i <= N; ++i)\n        if (i != sec && check(l[i], l[sec]))\n            cnt++;\n    if (cnt > 1)\n        swap(fir, sec);\n    printf(\"%lld\\n\", fir);\n    return 0;\n}\n```\n",
        "postTime": 1615474378,
        "uid": 63743,
        "name": "DrBit",
        "ccfLevel": 6,
        "title": "P5428 [USACO19OPEN]Cow Steeplechase II S \uff08\u8ba1\u7b97\u51e0\u4f55+set\uff09"
    },
    {
        "content": "### \u9898\u5916\u8bdd\n\u591a\u5e74\u6ca1\u5199\u8fc7\u9898\u89e3\u4e86\uff0c~~\u793e\u8d21\u8fd8\u6ca1\u964d~~\uff0c\u6240\u4ee5\u6765\u5199\u4e00\u7bc7\u611f\u89c9\u6709\u4e9b\u96be\u5ea6\u7684\u9898\u89e3\u3002  \n\n### \u601d\u8def\n\n- \u628a\u6bcf\u4e00\u4e2a\u7aef\u70b9\u653e\u5230\u4e00\u4e2a\u6570\u7ec4\u5185\uff0c\u6309\u7167 $x$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c$y$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u3002\n- \u5f00\u4e00\u4e2a\u5b58\u7ebf\u6bb5\u7684 set\uff0c\u6309\u7167\u4e0e\u626b\u63cf\u7ebf\u7684\u4ea4\u70b9\u7684 $y$ \u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u4e86\u3002\u626b\u63cf\u7ebf\u987a\u5e8f\u79fb\u52a8\u5230\u6bcf\u4e00\u4e2a\u7aef\u70b9\u3002\n\t- \u5982\u679c\u8be5\u7aef\u70b9\u4e3a\u53f3\u7aef\u70b9\uff0c\u8bf4\u660e\u8be5\u7ebf\u6bb5\u5df2\u7ecf\u5728 set \u5185\u3002\u6bd4\u8f83 set \u5185\u5b83\u524d\u540e\u7684\u4e24\u6761\u7ebf\u6bb5\uff0c\u56e0\u4e3a\u53ea\u9700\u8981\u627e\u5230\u4e00\u5bf9\u76f8\u4ea4\u7684\u7ebf\u6bb5\uff0c\u5982\u679c\u76f8\u4ea4\uff0c\u5b58\u4e0b\u76f8\u4ea4\u7684\u7ebf\u6bb5\u7684\u7f16\u53f7\u5e76 break\u3002\u53cd\u4e4b\uff0c\u5220\u9664\u8be5\u7ebf\u6bb5\u3002\n    - \u540c\u7406\uff0c\u5982\u679c\u8be5\u7ebf\u6bb5\u662f\u5de6\u7aef\u70b9\uff0c\u8bf4\u660e\u8be5\u7ebf\u6bb5\u672a\u5728 set \u5185\uff0c\u52a0\u5165\u8be5\u7ebf\u6bb5\uff0c\u7136\u540e\u6bd4\u8f83\u4e24\u6b21\uff1a\u7b2c\u4e00\u6b21\u662f\u5b83\u540e\u4e00\u4e2a\u7ebf\u6bb5\u548c\u5b83\u672c\u8eab\uff0c\u7b2c\u4e8c\u6b21\u662f\u5b83\u540e\u4e00\u4e2a\u7ebf\u6bb5\u548c\u5b83\u672c\u8eab\u3002\u8fd9\u91cc\u7684\u6bd4\u8f83\u5c31\u662f\u6307\u4e0a\u9762\u7684\u5224\u65ad\u7ebf\u6bb5\u662f\u5426\u76f8\u4ea4\u5e76\u8bb0\u5f55\u548c break\u3002\n- \u73b0\u5728\u8bbe\u76f8\u4ea4\u7684\u4e24\u6761\u7ebf\u6bb5\u4e3a $a1,a2$\uff0c\u5148\u4fdd\u8bc1 $a1 < a2$\uff0c\u6709\u4e0e $a2$ \u76f8\u4ea4\u7684\u7ebf\u6bb5\u7684\u6570\u91cf\u5927\u4e8e $1$ \u65f6\uff0c\u4e0e $a1$ \u76f8\u4ea4\u7684\u7ebf\u6bb5\u6570\u91cf\u5fc5\u4e3a $1$\u3002\u8bbe\u4e0e $a2$ \u76f8\u4ea4\u7684\u7ebf\u6bb5\u6570\u91cf\u4e3a $cnt$\uff0c\u5219 $cnt > 1$ \u65f6\u8f93\u51fa $a2$\uff0c\u53cd\u4e4b\u8f93\u51fa $a1$\u3002  \n\n\u5173\u4e8e\u5982\u4f55\u5224\u65ad\u4e24\u6761\u7ebf\u6bb5\u662f\u5426\u76f8\u4ea4\uff0c[here](https://blog.csdn.net/qq_39627843/article/details/81170316)\u3002\n\n\u5728\u5224\u65ad\u626b\u63cf\u7ebf\u4e0e\u67d0\u6761\u7ebf\u6bb5\u7684\u4ea4\u70b9\u65f6\uff0c\u6211\u592a\u849f\u4e86\u770b\u4e0d\u61c2\u5176\u4ed6\u5927\u4f6c\u7684\u65b9\u6cd5\u3002\u6240\u4ee5\u662f\u5148\u6c42\u51fa $y = kx + b$ \u4e2d\u7684 $k,b$ \u7136\u540e\u5e26\u5165\u626b\u63cf\u7ebf\u7684 $x$ \u5750\u6807\u6c42\u4ea4\u70b9\u3002\n\n```cpp\nil double val() const // \u6c42\u8be5\u7ebf\u6bb5\u4e0e x = now \u7684\u4ea4\u70b9 \n{\n\tif (l.fst == r.fst) return l.snd;\n\tdouble k = (l.snd - r.snd) * 1.0 / (l.fst - r.fst), b = l.snd - k * l.fst;\n\t/*\n\ty1 = kx1 + b (1)\n\ty2 = kx2 + b (2)\n\t(1) - (2) \u5f97 k(x1 - x2) = y1 - y2\n\tk = (y1 - y2) / (x1 - x2)\n\tb = y1 - kx1\n\t*/ \n\t// \u6c42\u51fa\u8be5\u7ebf\u6bb5\u7684\u89e3\u6790\u5f0f\uff1ay = kx + b \n\treturn k * now + b; // \u5c06 k \u548c b \u5e26\u5165\uff0c\u6c42\u51fa\u4ea4\u70b9 \n//\t\treturn l.snd + 1.0 * (r.snd - l.snd) * 1.0 * (now - l.fst) / (r.fst - l.fst); \u8fd9\u91cc\u662f\u5176\u4ed6\u5927\u4f6c\u7684\u65b9\u6cd5\uff0c\u770b\u4e0d\u61c2\n}\n```\n\n[AC code\u8bb0\u5f55](https://www.luogu.com.cn/record/59500755)\n\n```cpp\n#include <bits/stdc++.h>\n#define rep1(i, j, n) for (int i = j; i <= int(n); ++i)\n#define rep2(i, j, n) for (int i = j; i >= int(n); --i)\n#define ptc putchar\n#define il inline\n#define fst first\n#define snd second\n#define rout return 0\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> pii;\nconst int MAXN = 1e5 + 10;\nnamespace stupid_lrc\n{\n\ttemplate <typename T>\n\til void read(T &x)\n\t{\n\t\tx = 0; T f = 1; char ch;\n\t\twhile (!isdigit(ch = getchar())) f -= 2 * (ch == '-');\n\t\twhile (isdigit(ch)) x = (x << 1) + (x << 3) + (ch & 15), ch = getchar(); x *= f;\n\t}\n\t\n\ttemplate <typename T>\n\til void write(T x)\n\t{\n\t\tif (x < 0) ptc('-'), x = -x;\n\t\tif (x > 9) write(x / 10);\n\t\tptc(x % 10 + '0');\n\t}\n}\nusing namespace stupid_lrc;\nint n;\n\nstruct point\n{\n\tint idx; pii ps;\n\til bool operator < (const point &r) const\n\t{\n\t\treturn ps < r.ps;\n\t}\n}pt[MAXN << 1];\n\nint now;\n\nstruct segment\n{\n\tpii l, r; int idx;\n\til double val() const // \u6c42\u8be5\u7ebf\u6bb5\u4e0e x = now \u7684\u4ea4\u70b9 \n\t{\n\t\tif (l.fst == r.fst) return l.snd;\n\t\tdouble k = (l.snd - r.snd) * 1.0 / (l.fst - r.fst), b = l.snd - k * l.fst;\n\t\t/*\n\t\ty1 = kx1 + b (1)\n\t\ty2 = kx2 + b (2)\n\t\t(1) - (2) \u5f97 k(x1 - x2) = y1 - y2\n\t\tk = (y1 - y2) / (x1 - x2)\n\t\tb = y1 - kx1\n\t\t*/ \n\t\t// \u6c42\u51fa\u8be5\u7ebf\u6bb5\u7684\u89e3\u6790\u5f0f\uff1ay = kx + b \n\t\treturn k * now + b; // \u5c06 k \u548c b \u5e26\u5165\uff0c\u6c42\u51fa\u4ea4\u70b9 \n//\t\treturn l.snd + 1.0 * (r.snd - l.snd) * 1.0 * (now - l.fst) / (r.fst - l.fst);\n\t}\n\til bool operator < (const segment &r) const\n\t{\n\t\treturn val() < r.val();\n\t}\n\til bool operator == (const segment &r) const\n\t{\n\t\treturn idx == r.idx;\n\t}\n}seg[MAXN];\ntypedef set<segment> :: iterator iter;\nset<segment> s;\n\nil int cross(pii a, pii b, pii c) // \u6c42\u5411\u91cf AB \u548c AC \u7684\u5dee\u79ef \n{\n\tll ans = 1ll * (b.fst - a.fst) * (c.snd - a.snd) - 1ll * (c.fst - a.fst) * (b.snd - a.snd);\n\treturn ans ? (ans < 0 ? -1 : 1) : 0; // \u7531\u4e8e\u53ea\u9700\u8981\u77e5\u9053\u662f\u5426\u5f02\u53f7\uff0c\u6240\u4ee5\u5176\u672c\u8eab\u7684\u503c\u4e0d\u91cd\u8981\uff0c\u77e5\u9053\u6b63\u8d1f\u5c31\u591f\u4e86\u3002\n}\n\nil bool check(pii a, pii b, pii c, pii d) // \u5224\u65ad AB \u662f\u5426\u4e0e CD \u76f8\u4ea4 \n{\n\tif (my_min(a.fst, b.fst) > my_max(c.fst, d.fst) ||\n\tmy_min(c.fst, d.fst) > my_max(a.fst, b.fst) ||\n\tmy_min(a.snd, b.snd) > my_max(c.snd, d.snd) ||\n\tmy_min(c.snd, d.snd) > my_max(a.snd, b.snd)) return false;\n\treturn cross(a, b, c) * cross(a, b, d) < 0 && cross(c, d, a) * cross(c, d, b) < 0;\n}\n\nint main()\n{\n\tread(n);\n\trep1(i, 1, n)\n\t{\n\t\tread(seg[i].l.fst), read(seg[i].l.snd);\n\t\tread(seg[i].r.fst), read(seg[i].r.snd);\n\t\tseg[i].idx = i;\n\t\tpt[(i << 1) - 1].ps = seg[i].l;\n\t\tpt[(i << 1)].ps = seg[i].r;\n\t\tpt[(i << 1) - 1].idx = pt[(i << 1)].idx = i;\n\t}\n\tsort(pt + 1, pt + 1 + (n << 1));\n\tint a1 = -1, a2 = -1;\n\trep1(i, 1, n << 1)\n\t{\n\t\tnow = pt[i].ps.fst; int inw = pt[i].idx;\n\t\titer it = s.find(seg[inw]);\n\t\tif (it != s.end()) // \u5982\u679c it \u5b58\u5728\uff0c\u8bf4\u660e\u6b64\u65f6\u8be5\u7ebf\u6bb5\u5df2\u7ecf\u5904\u7406\u8fc7 \n\t\t{\n\t\t\titer pre = it, suc = it;\n\t\t\tif (pre != s.begin() && suc != s.end()) // \u5982\u679c it \u7684\u524d\u9a71\u548c\u540e\u7ee7\u5b58\u5728 \n\t\t\t{\n\t\t\t\tpre--; suc++; \n\t\t\t\tif (check(pre->l, pre->r, suc->l, suc->r)) // \u6bd4\u8f83\u5b83\u4eec\uff0c\u82e5\u76f8\u4ea4 \n\t\t\t\t{\n\t\t\t\t\ta1 = pre->idx; a2 = suc->idx; // \u5219\u8bb0\u5f55 a1 a2\uff0c\u8df3\u51fa\u5faa\u73af\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\ts.erase(it); // \u5220\u9664 it \n\t\t}\n\t\telse // \u8bf4\u660e\u6b64\u65f6\u8be5\u7ebf\u6bb5\u8fd8\u6ca1\u5904\u7406 \n\t\t{\n\t\t\ts.insert(seg[inw]); it = s.find(seg[inw]); // \u63d2\u5165\uff0c\u67e5\u627e \n\t\t\titer pre = it, suc = it; \n\t\t\tif (pre != s.begin()) // \u6bd4\u8f83\u5b83\u548c\u4ed6\u7684\u524d\u9a71 \n\t\t\t{\n\t\t\t\tpre--;\n\t\t\t\tif (check(pre->l, pre->r, it->l, it->r))\n\t\t\t\t{\n\t\t\t\t\ta1 = pre->idx; a2 = it->idx;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (suc != s.end()) // \u6bd4\u8f83\u5b83\u548c\u5b83\u7684\u540e\u7ee7 \n\t\t\t{\n\t\t\t\tsuc++;\n\t\t\t\tif (check(it->l, it->r, suc->l, suc->r))\n\t\t\t\t{\n\t\t\t\t\ta1 = it->idx; a2 = suc->idx;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (a1 > a2) swap(a1, a2);\n\tint cnt = 0;\n\trep1(i, 1, n)\n\t\tif (i^a2 && check(seg[i].l, seg[i].r, seg[a2].l, seg[a2].r)) cnt++;\n\twrite(cnt > 1 ? a2 : a1);\n\trout;\n}\n```",
        "postTime": 1633773071,
        "uid": 409236,
        "name": "StayAlone",
        "ccfLevel": 6,
        "title": "[USACO19OPEN]Cow Steeplechase II S C++\u9898\u89e3"
    },
    {
        "content": "( \u672c\u6587\u4e5f\u4f5c$8.15$\u8003\u8bd5\u9898\u89e3, \u9644[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problem/P5428). )  \n\u8fd9\u9053\u9898\u6bd4\u8f83\u6709\u6311\u6218\u6027, \u5927\u6982\u662f\u84dd\u9898\u5230\u7d2b\u9898\u7684\u6c34\u5e73\u5427.  \n\n\u9996\u5148, \u4e00\u5b9a\u8981\u7406\u89e3\u8fd9\u53e5\u9898\u9762:  \n- \u53ea\u8981\u79fb\u9664\u4e00\u6761\u7ebf\u6bb5\uff0c\u8fd9\u5f20\u5730\u56fe\u5c31\u53ef\u4ee5\u6062\u590d\u5230\u9884\u671f\u6ca1\u6709\u76f8\u4ea4\u7ebf\u6bb5\u7684\u72b6\u6001.  \n\n\u4e5f\u5c31\u662f\u8bf4, **\u4e00\u65e6\u6211\u4eec\u53d1\u73b0\u4e24\u6761\u7ebf\u6bb5\u6709\u4ea4\u70b9, \u7b54\u6848\u5c31\u5fc5\u4e3a\u5176\u4e2d\u4e00\u6761**.  \n\u56e0\u6b64, \u672c\u9898\u4e5f\u5c31\u8f6c\u5316\u4e3a**\u5982\u4f55\u5feb\u901f\u627e\u5230\u4e24\u6761\u76f8\u4ea4\u7684\u7ebf\u6bb5**.  \n\n\u6211\u4eec\u9700\u8981\u4e00\u79cd\u5224\u65ad\u4e24\u6761\u7ebf\u6bb5\u662f\u5426\u76f8\u4ea4\u7684\u7b97\u6cd5. \u5f15\u5165\u4e24\u4e2a\u5b9e\u9a8c:  \n- \u5feb\u901f\u6392\u65a5\u5b9e\u9a8c  \n\u8bbe\u4ee5\u7ebf\u6bb5$A_1A_2$\u548c\u7ebf\u6bb5$B_1B_2$\u4e3a\u5bf9\u89d2\u7ebf\u7684\u77e9\u5f62\u4e3a$M,N$;  \n\u82e5$M,N$\u4e0d\u76f8\u4ea4, \u5219\u4e24\u4e2a\u7ebf\u6bb5\u663e\u7136\u4e0d\u76f8\u4ea4;  \n\n- \u8de8\u7acb\u5b9e\u9a8c  \n\u82e5\u4e24\u7ebf\u6bb5\u76f8\u4ea4, \u5219\u4e24\u7ebf\u6bb5\u5fc5\u7136\u76f8\u4e92\u8de8\u7acb\u5bf9\u65b9. \u82e5$A_1A_2$\u8de8\u7acb$B_1B_2$, \u5219\u77e2\u91cf$\\vec{A_1B_1}$\u548c$\\vec{A_2B_1}$\u4f4d\u4e8e\u77e2\u91cf$\\vec{B_2B_1}$\u7684\u4e24\u4fa7.  \n\n\u7ed3\u5408\u4e24\u79cd\u5b9e\u9a8c, \u6211\u4eec\u624d\u80fd\u5224\u65ad\u5305\u62ec\u5171\u7ebf\u5728\u5185\u7684\u6240\u6709\u76f8\u4ea4\u60c5\u51b5.  \n( \u63a8\u8350\u4e00\u7bc7\u8bb2\u89e3\u672c\u7b97\u6cd5\u7684$Blog$: [\u4f20\u9001\u95e8](https://blog.csdn.net/tianwei0822/article/details/82118463). )  \n\n\u63a5\u4e0b\u6765, \u7531\u4e8e\u53d1\u73b0$O(n^2)$\u7684\u67e5\u627e\u7b97\u6cd5\u663e\u7136\u662f\u4e0d\u53ef\u53d6\u7684, \u4ecb\u7ecd\u4e00\u79cd$O(n\\log_2n)$\u7684\u7b97\u6cd5: \u626b\u63cf\u7ebf$+set$.  \n\u5f15\u5165$set$, \u7528\u4e8e\u4fdd\u5b58\u7ebf\u6bb5. \u6bcf\u627e\u5230\u4e00\u4e2a\u7aef\u70b9, \u82e5\u5176\u6240\u5728\u7ebf\u6bb5\u4e0d\u5728$set$\u4e2d, \u5c06\u8be5\u7ebf\u6bb5\u538b\u5165$set$, \u5426\u5219\u5c06\u8be5\u7ebf\u6bb5\u5f39\u51fa$set$. \u76ee\u7684\u662f**\u4fdd\u8bc1$set$\u5185\u7684\u7ebf\u6bb5\u5728$x$\u8f74\u4e0a\u7684\u6295\u5f71\u4e24\u4e24\u6709\u4ea4\u96c6**, \u8fd9\u662f\u7ebf\u6bb5\u76f8\u4ea4\u7684\u5148\u51b3\u6761\u4ef6.  \n\u96be\u70b9\u5728\u4e8e$set$\u7684'$<$'\u91cd\u8f7d\u4e0e\u4f7f\u7528. \u6211\u4eec\u6309\u7167**\u626b\u63cf\u7ebf\u4e0e\u7ebf\u6bb5\u4ea4\u70b9\u7684$y$\u503c\u4e3a\u5173\u952e\u5b57\u6392\u5e8f**.  \n\u8fd9\u6837\u6392\u5e8f, \u662f\u4e3a\u80fd\u5feb\u901f\u53d6\u5f97\u4e0e\u67d0\u4e00\u6761\u7ebf\u6bb5\u4e0a\u4e0b\u76f8\u90bb\u7684\u7ebf\u6bb5. \u7ef4\u62a4\u51fa\u6765\u7684$set$\u5e94\u5f62\u5982:  \n![jump1.PNG](https://i.loli.net/2019/08/15/GS2N14KFiOPqxbQ.png)  \n\u7b97\u6cd5\u6d41\u7a0b\u5982\u4e0b:  \n1. \u5bf9\u4e8e\u8f93\u5165\u7684$2n$\u4e2a\u70b9, \u4ee5$x$\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57, $y$\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57, \u4ece\u5c0f\u5230\u5927\u6392\u5e8f.  \n\n2. \u4f9d\u6b21\u904d\u5386\u6bcf\u4e2a\u70b9, \u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba:  \n\t- \u8be5\u70b9\u6240\u5728\u7ebf\u6bb5\u4e0d\u5728$set$\u5185.  \n\u5229\u7528$lower\\_bound$\u51fd\u6570\u4e8c\u5206\u53d6\u5f97\u8be5\u7ebf\u6bb5\u5e94\u8be5\u63d2\u5165\u7684\u4f4d\u7f6e, \u5e76\u5224\u65ad\u8be5\u4f4d\u7f6e\u4e0a\u4e0b\u7684\u7ebf\u6bb5\u662f\u5426\u4e0e\u8be5\u7ebf\u6bb5\u76f8\u4ea4. \u82e5\u76f8\u4ea4, \u4fdd\u5b58\u4e24\u6761\u7ebf\u6bb5\u4e0b\u6807\u5e76\u7ed3\u675f\u7b97\u6cd5. \u5426\u5219, \u5c06\u8be5\u7ebf\u6bb5\u538b\u5165$set$.  \n\u6ce8\u610f, \u7531\u4e8e**\u626b\u63cf\u7ebf\u4e0e\u7ebf\u6bb5\u4ea4\u70b9$y$\u503c\u7684\u76f8\u5bf9\u5927\u5c0f\u662f\u4e0d\u4f1a\u6539\u53d8\u7684**, \u6545\u53ea\u9700\u8981\u5728'$<$'\u91cd\u8f7d\u4e2d\u5728\u7ebf\u8ba1\u7b97$y$\u503c\u5373\u53ef.  \n\n\t- \u8be5\u70b9\u6240\u5728\u7ebf\u6bb5\u5728$set$\u5185.  \n \u82e5\u8be5\u7ebf\u6bb5\u4e0a\u4e0b\u90fd\u6709\u7ebf\u6bb5, \u68c0\u67e5\u8fd9\u4e24\u6761\u7ebf\u6bb5\u662f\u5426\u76f8\u4ea4. \u82e5\u76f8\u4ea4, \u8bb0\u5f55\u5176\u4e0b\u6807\u5e76\u7ed3\u675f\u7b97\u6cd5. \u5426\u5219, \u5f39\u51fa\u8be5\u7ebf\u6bb5.  \n\n\u7b97\u6cd5\u7ed3\u675f, \u7531\u9898\u610f, \u6211\u4eec\u4e00\u5b9a\u4f1a\u53d6\u5f97\u4e24\u6761\u76f8\u4ea4\u7684\u7ebf\u6bb5\u4e0b\u6807$Indxa,Indxb$, \u4e0d\u59a8\u8bbe$Indxa<Indxb$. \u6211\u4eec\u8003\u8651\u662f\u5426\u6709\u5176\u5b83\u7ebf\u6bb5\u4e0e\u7ebf\u6bb5$Indxb$\u76f8\u4ea4, \u82e5\u6709, \u5219\u5fc5\u987b\u5220\u9664\u7ebf\u6bb5$Indxb$. \u5426\u5219, \u5220\u9664\u7ebf\u6bb5$Indxa$. \u7a0b\u5e8f\u7ed3\u675f.  \n\n\u503c\u5f97\u6ce8\u610f\u7684, \u5728\u7ebf\u8ba1\u7b97$y$\u503c\u65f6\u7279\u5224\u4e0e$x$\u8f74\u5782\u76f4\u7684\u7ebf\u6bb5.  \n\u4ee3\u7801\u5b9e\u73b0\u6709\u4e00\u5b9a\u96be\u5ea6, \u5df2\u7ed9\u51fa\u8be6\u7ec6\u6ce8\u91ca.\n```cpp\n#include <set> \n#include <cstdio>\n#include <assert.h>\n#include <iostream>\n#include <algorithm>\n\n#define Int register int\n#define mkpii( fir, sec ) make_pair ( fir, sec )\n\nusing namespace std;\n\ntypedef long long int LL;\ntypedef pair<int, int> pii;\n\nconst int MAXN = 100000;\nint n, X, Indxa, Indxb;\n\ninline int rint () { // \u8f93\u5165\u91cf\u8f83\u5927, \u6ce8\u610f\u5feb\u8bfb \n\tInt x = 0, f = 1; register char s = getchar ();\n\tfor ( ; s < '0' || '9' < s; s = getchar () ) f = s == '-' ? -f : f;\n\tfor ( ; '0' <= s && s <= '9'; s = getchar () ) x = ( x << 3 ) + ( x << 1 ) + ( s ^ '0' );\n\treturn x * f;\n}\n\nLL mul ( const pii a, const pii b, const pii c ) { // \u8de8\u7acb\u5b9e\u9a8c\u53c9\u4e58\u5224\u65ad \n\treturn 1LL * ( b.first - a.first ) * ( c.second - a.second ) - 1LL * ( c.first - a.first ) * ( b.second - a.second );\n}\n\nstruct Point { // \u7528\u4e8e\u6392\u5e8f\u76842n\u4e2a\u70b9, IsSec\u8bb0\u5f55\u662f\u5426\u6b64\u65f6\u7684\u7ebf\u6bb5\u5df2\u5165set \n\tint x, y, id, IsSec;\n\tinline bool operator < ( const Point Other ) const {\n\t\tif ( x < Other.x ) return true;\n\t\tif ( x > Other.x ) return false;\n\t\treturn y < Other.y;\n\t}\n} pt[MAXN << 1 | 1] = {};\n\nstruct Segment { // \u7ebf\u6bb5 \n\tint x_1, y_1, x_2, y_2, id;\n\tfriend inline bool operator == ( const Segment a, const Segment b ) {\n\t\treturn a.id == b.id;\n\t}\n\tfriend inline bool operator < ( const Segment a, const Segment b ) { // y\u503c\u6bd4\u8f83, \u7279\u5224x1=x2, \u53d6\u8f83\u5927\u7684y2 \n\t\tconst double ya = a.x_1 == a.x_2 ? a.y_2 : a.y_1 + 1.0 * ( X - a.x_1 ) * ( a.y_2 - a.y_1 ) / ( a.x_2 - a.x_1 );\n\t\tconst double yb = b.x_1 == b.x_2 ? b.y_2 : b.y_1 + 1.0 * ( X - b.x_1 ) * ( b.y_2 - b.y_1 ) / ( b.x_2 - b.x_1 );\n\t\treturn ya < yb;\n\t}\n\tinline bool Check ( const Segment b ) const { // \u5224\u65ad\u7ebf\u6bb5a, b\u662f\u5426\u76f8\u4ea4 \n\t\tconst Segment a = *this;\n\t\tconst pii as = mkpii ( a.x_1, a.y_1 ), bs = mkpii ( b.x_1, b.y_1 );\n\t\tconst pii ae = mkpii ( a.x_2, a.y_2 ), be = mkpii ( b.x_2, b.y_2 );\n\t\treturn min ( a.x_1, a.x_2 ) <= max ( b.x_1, b.x_2 )\n\t\t\t&& max ( a.x_1, a.x_2 ) >= min ( b.x_1, b.x_2 )\n\t\t\t&& min ( a.y_1, a.y_2 ) <= max ( b.y_1, b.y_2 )\n\t\t\t&& max ( a.y_1, a.y_2 ) >= min ( b.y_1, b.y_2 ) // \u5feb\u901f\u6392\u65a5\u5b9e\u9a8c \n\t\t\t&& mul ( bs, as, be ) * mul ( bs, be, ae ) >= 0\n\t\t\t&& mul ( as, bs, ae ) * mul ( as, ae, be ) >= 0; // \u8de8\u7acb\u5b9e\u9a8c \n\t}\n} Seg[MAXN + 5] = {};\n\ntypedef set<Segment> :: iterator setiter;\n\nset<Segment> S;\n\ninline void Intersect () {\n\tsort ( pt + 1, pt + ( n << 1 | 1 ) );\n\tfor ( Int i = 1; i <= n << 1; ++ i ) {\n\t\tif ( pt[i].IsSec ) { // \u60c5\u51b52, \u9700\u8981\u5f39\u51fa\u8be5\u7ebf\u6bb5 \n\t\t\tsetiter it = S.find ( Seg[pt[i].id] ), _upper = it, _lower = it; // _upper\u4e0e_lower\u5206\u522b\u8868\u793a\u4e0a\u65b9\u7ebf\u6bb5\u4e0e\u4e0b\u65b9\u7ebf\u6bb5 \n\t\t\t++ _upper; // \u5f88\u4f24\u5fc3\u7684\u662f, iterator\u4e0d\u652f\u6301'+''-'\u8fd0\u7b97 \n\t\t\tif ( _upper != S.end () && _lower != S.begin () ) {\n\t\t\t\t-- _lower;\n\t\t\t\tif ( Seg[_lower -> id].Check ( Seg[_upper -> id] ) ) { // \u4e24\u7ebf\u6bb5\u76f8\u4ea4 \n\t\t\t\t\tassert ( _lower != _upper ); // \u68c0\u67e5\u662f\u5426\u51fa\u73b0\u5f02\u5e38: \u662f\u540c\u4e00\u6761\u7ebf\u6bb5 \n\t\t\t\t\tIndxa = _lower -> id, Indxb = _upper -> id; // \u8bb0\u5f55\u4e0b\u6807 \n\t\t\t\t\treturn ; // \u7ed3\u675f \n\t\t\t\t}\n\t\t\t}\n\t\t\tS.erase ( it ); // \u5220\u9664\u8be5\u7ebf\u6bb5 \n\t\t} else { // \u60c5\u51b51 \n\t\t\tX = pt[i].x; // \u66f4\u65b0\u626b\u63cf\u7ebf\u4f4d\u7f6e \n\t\t\tsetiter it = S.lower_bound ( Seg[pt[i].id] ); // \u53d6\u5f97\u63d2\u5165\u4f4d\u7f6e \n\t\t\tif ( it != S.end () && Seg[pt[i].id].Check ( Seg[it -> id] ) ) { // \u662f\u5426\u4e0e\u4e0a\u65b9\u7ebf\u6bb5\u76f8\u4ea4 \n\t\t\t\tIndxa = pt[i].id, Indxb = it -> id;\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tif ( it != S.begin () && Seg[pt[i].id].Check ( Seg[( -- it ) -> id] ) ) { // \u662f\u5426\u4e0e\u4e0b\u65b9\u7ebf\u6bb5\u76f8\u4ea4 \n\t\t\t\tIndxa = pt[i].id, Indxb = it -> id;\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tS.insert ( Seg[pt[i].id] ); // \u63d2\u5165\u8be5\u7ebf\u6bb5 \n\t\t}\n\t}\n}\n\ninline void Work () {\n\tn = rint ();\n\tfor ( Int i = 1, x_1, y_1, x_2, y_2; i <= n; ++ i ) {\n\t\tscanf ( \"%d %d %d %d\", &x_1, &y_1, &x_2, &y_2 );\n\t\tif ( x_1 > x_2 || ( x_1 == x_2 && y_1 > y_2 ) ) { // \u4fdd\u8bc1(x1,y1)\u4f1a\u5148\u88ab\u627e\u5230 \n\t\t\tx_1 ^= x_2, x_2 ^= x_1, x_1 ^= x_2;\n\t\t\ty_1 ^= y_2, y_2 ^= y_1, y_1 ^= y_2;\n\t\t}\n\t\tSeg[i] = Segment { x_1, y_1, x_2, y_2, i };\n\t\tpt[i - 1 << 1 | 1] = Point { x_1, y_1, i, false };\n\t\tpt[i << 1] = Point { x_2, y_2, i, true };\n\t}\n\tIntersect ();\n\tif ( Indxa > Indxb ) Indxa ^= Indxb, Indxb ^= Indxa, Indxa ^= Indxb;\n\tfor ( Int i = 1; i <= n; ++ i ) {\n\t\tif ( i ^ Indxa && i ^ Indxb && Seg[Indxb].Check ( Seg[i] ) ) { // \u662f\u5426\u6709\u7ebf\u6bb5\u4e0eSeg[Indxb]\u76f8\u4ea4 \n\t\t\tprintf ( \"%d\\n\", Indxb );\n\t\t\treturn ;\n\t\t}\n\t}\n\tprintf ( \"%d\\n\", Indxa );\n}\n\nint main () {\n//\tfreopen ( \"jump.in\", \"r\", stdin );\n//\tfreopen ( \"jump.out\", \"w\", stdout );\n\tWork ();\n\treturn 0;\n}\n```",
        "postTime": 1565871825,
        "uid": 123807,
        "name": "Rainybunny",
        "ccfLevel": 9,
        "title": "Aug. 15th, 2019---Jump\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e00\u770b\u53ef\u77e5\u662f\u8981\u6c42\u51fa\u76f8\u8fde\u7684\u7684\u6700\u524d\u9762\u4e24\u4e2a\uff0c\u56e0\u4e3a\u6700\u591a3\u4e2a\u8fde\u5728\u4e00\u8d77\uff0c\u751a\u81f3\u6709\u65f6\u50193\u4e2a\u4e5f\u4e0d\u884c\uff0c\u6240\u4ee5\u6c42\u51fa\u76f8\u8fde\u4e24\u6761\u5373\u53ef\u9000\u51fa\u3002\n\n\u9996\u5148\u60f3\u5230n^{2}\u590d\u6742\u5ea6\u505a\u6cd5\uff0c\u4f46\u660e\u663e\u8d85\u65f6\uff0c\u9700\u8981\u4f18\u5316\uff0c\u6240\u4ee5\u91c7\u53d6\u626b\u63cf\u7ebf\u8fdb\u884c\u4f18\u5316\u81f3nlog(n)\u3002\n\n\u73b0\u5c06\u6bcf\u4e2a\u70b9\uff08\u6ce8\u610f\uff0c\u5206\u5f00\u4e86\uff0c\u4f46\u8981\u6807\u8bb0\u5c5e\u4e8e\u90a3\u6761\u7ebf\uff09\u6309\u7167x\u8f74\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0cx\u5750\u6807\u76f8\u540c\u7684\u6309y\u5750\u6807\u4ece\u5927\u5230\u5c0f\u3002\u7528set\u8fdb\u884c\u5b58\u50a8\uff0c\n\n\u5728\u5de6\u7aef\u70b9\u51fa\u73b0\u540e\uff0c\u8ba9\u8fd9\u6761\u7ebf\u8fdb\u5165\u96c6\u5408\uff0c\u4e0e\u4e24\u8fb9\u7684\u7ebf\u8fdb\u884c\u68c0\u67e5\u662f\u5426\u76f8\u4ea4\uff0c\u6ce8\u610f\uff0cset\u6709\u6392\u5e8f\u529f\u80fd\uff0c\u6240\u4ee5\u4f60\u8981\u91cd\u8f7d\u5c0f\u4e8e\uff0c\u8981\u6ce8\u610f\u6bd4\u8f83\u65b9\u5f0f\uff0c\u6c42\u51fa\u76f8\u90bb\u4e24\u6761\u8fb9\u5728\u540c\u4e00x\u5750\u6807y\u5750\u6807\u5927\u5c0f\uff0c\u56e0\u4e3a\u8fd9\u4e2ax\u5750\u6807\u4f1a\u968f\u626b\u63cf\u7ebf\u79fb\u52a8\u3002\n\n\u5728\u53f3\u7aef\u70b9\u51fa\u73b0\u540e\uff0c\u8ba9\u8fd9\u6761\u7ebf\u51fa\u96c6\u5408\uff0c\u56e0\u4e3a\u626b\u63cf\u7ebf\u5df2\u7ecf\u626b\u8fc7\u4e86\u3002\u8fd9\u662f\u8fd8\u8981\u68c0\u67e5\u4e00\u904d\u5de6\u53f3\u4e24\u6761\u7ebf\u662f\u5426\u76f8\u4ea4\n\n\uff0c\u56e0\u4e3a\u5de6\u53f3\u53ef\u80fd\u53d8\u5316\u4e86\u3002\n\n\u6ce8:\u8fd9\u9053\u9898\u9700\u719f\u7ec3\u7528\u4e8eset\u7684\u5404\u79cd\u51fd\u6570\u3002\n\n\u6bd4\u8f83\u4e5f\u9700\u8981\u6280\u5de7\uff1a\u5bf9\u7acb\u53c9\u4e58\u5b9e\u9a8c\n\n![](https://img-blog.csdnimg.cn/20190816070614702.png)\n\np1\u548cp2\u662f\u4e24\u6761\u7ebf\u6bb5\uff0c\u4e14\u5de6\u7aef\u70b9\u5904\u4e8e\u540c\u4e00\u4f4d\u7f6e\uff080,0\uff09\u53f3\u7aef\u70b9\u5206\u522b\u4e3a(x1,y1),(x2,y2),\n\n\u7ebf\u6bb5p1\u548cp2\u7684\u53c9\u4e58\u7ed3\u679c\u4e3ap1Xp2=x1*y2-x2*y1\n\n\u5982\u82e5\u7ed3\u679c\u5927\u4e8e0\uff0c\u5219p2\u5728p1\u7684\u987a\u65f6\u9488180\u5ea6\u4ee5\u5185\uff0c\u5982\u679c\u5c0f\u4e8e\u96f6\uff0c\u5728\u9006\u65f6\u9488180\u5ea6\u4ee5\u5185\u3002\n\n\u8981\u5224\u65ad\u662f\u5426\u4ea4\u53c9\uff0c\u53ef\u4ee5\u53d6p1\u7ebf\u4e0a\u4e00\u7aef\u70b9\u8fde\u4e0ap2\u7ebf\u7684\u4e24\u4e2a\u7aef\u70b9\uff0c\u5f97\u5230\u4e24\u6761\u6761\u7ebf\uff0c\u518d\u5206\u522b\u4e0ep1\u8fdb\u884c\u53c9\u4e58\u5b9e\u9a8c\u3002\n\n\u518d\u53ef\u4ee5\u53d6p2\u7ebf\u4e0a\u4e00\u7aef\u70b9\u8fde\u4e0ap1\u7ebf\u7684\u4e24\u4e2a\u7aef\u70b9\uff0c\u5f97\u5230\u4e24\u6761\u6761\u7ebf\uff0c\u518d\u5206\u522b\u4e0ep2\u8fdb\u884c\u53c9\u4e58\u5b9e\u9a8c\u3002\n\n\u5c31\u53ef\u4ee5\u77e5\u9053\u662f\u5426p1\u4e24\u70b9\u5728p2\u4e24\u8fb9,p2\u4e24\u70b9\u5728p1\u4e24\u8fb9\u3002\n\n\u5c31\u80fd\u5f97\u5230\u7b54\u6848\u4e86\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<set>\nusing namespace std;\n#define LL long long\n#define M 100005\nvoid read(LL &x){\n\tx=0;LL f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-')\n\t\t\tf=-f;\n\t\tc=getchar();\n\t} \n\twhile(c>='0'&&c<='9'){\n\t\tx=(x<<1)+(x<<3)+c-'0';\n\t\tc=getchar();\n\t}\n\tx*=f;\n\treturn ;\n}\ndouble x;\nLL n,ans1,ans2;\nstruct edge{\n\tLL x,y,id;\n\tbool operator <(edge b)const{\n\t\treturn x==b.x?y<b.y:x<b.x;\n\t}\n}t[M<<1];\nstruct node{\n\tedge a,b;\n\tLL id;\n\tbool operator ==(node k)const{\n\t\treturn\tid==k.id;\n\t}\n}p[M];\ndouble eval(node op){\n\tif(op.a.x==op.b.x)\n\t\treturn op.a.y;\n\treturn op.a.y+(op.b.y-op.a.y)*(x-op.a.x)/(op.b.x-op.a.x);\n}\nbool operator <(node u,node v){\n\treturn u.id!=v.id&&eval(u)<eval(v);\n}\nset<node>s;\nLL sum[M];\nLL sign(LL x){\n\tif(!x)\n\t\treturn 0ll;\n\tif(x>0)\n\t\treturn +1ll;\n\treturn -1ll;\n}\nLL operator* (edge u,edge v){\n\treturn sign(u.x*v.y-u.y*v.x);\n}\nedge operator- (edge u,edge v){\n\tedge k1={u.x-v.x,u.y-v.y};\n\treturn k1; \n}\nbool cmp(node u,node v){\n\tedge &a1=u.a,&a2=v.a,&b1=u.b,&b2=v.b;\n\treturn ((b2-a1) * (b1-a1)) * ((b1-a1) * (a2-a1))>=0&&((b1-a2) * (b2-a2)) * ((b2-a2) * (a1-a2))>=0;\n}\nint main(){\n\tread(n);\n\tfor(int i=1;i<=n;i++){\n\t\tread(p[i].a.x),read(p[i].a.y),read(p[i].b.x),read(p[i].b.y);\n\t\tt[(i<<1)-1]=p[i].a;\n\t\tt[i<<1]=p[i].b;\n\t\tp[i].a.id=p[i].b.id=p[i].id=t[(i<<1)-1].id=t[i<<1].id=i;\n\t}\n\tsort(t+1,t+1+(n<<1));\n\tfor(int i=1;i<=n<<1;i++){\n\t\tset<node>::iterator it;\n\t\tLL k=t[i].id;\n\t\tans1=k;\n\t\tx=t[i].x;\n\t\tit=s.find(p[k]);\n\t\tif(it!=s.end()){\n\t\t\tset<node>::iterator a_it=it,b_it=it;b_it++;\n\t\t\tif(a_it!=s.begin()&&b_it!=s.end()){\n\t\t\t\ta_it--;\n\t\t\t\tif(cmp(p[a_it->id],p[b_it->id])){\n\t\t\t\t\tans1=a_it->id,ans2=b_it->id;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\ts.erase(it);\n\t\t}else{\n\t\t\tset<node>::iterator new_it=s.lower_bound(p[k]);\n\t\t\tif(new_it!=s.end()&&cmp(p[new_it->id],p[k])){\n\t\t\t\tans2=new_it->id;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(new_it!=s.begin()){\n\t\t\t\tnew_it--;\n\t\t\t\tif(cmp(p[new_it->id],p[k])){\n\t\t\t\t\tans2=new_it->id;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\ts.insert(p[k]);\n\t\t}\n\t}\n\tLL ans=0;\n\tif(ans1>ans2)\n\t\tswap(ans1,ans2);\n\tfor(int i=1;i<=n;i++)\n\t\tif(p[i].id!=ans2&&cmp(p[i],p[ans2]))\n\t\t\tans++;\n\tprintf(\"%lld\",ans>1?ans2:ans1);\n\treturn 0;\n}\n```\n",
        "postTime": 1565912307,
        "uid": 105090,
        "name": "wyl_AC",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5428 \u3010[USACO19OPEN]Cow Steeplechase II\u3011"
    }
]