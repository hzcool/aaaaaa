[
    {
        "content": "\u5f02\u6216\u6ee1\u8db3\u53ef\u51cf\u6027\uff0c\u6240\u4ee5\u53ef\u4ee5\u7ef4\u62a4\u524d\u7f00\u548c\uff0c\u7136\u540e\n\n$$\\mathrm{a[p]\\ xor\\ a[p+1]\\ xor\\ ...\\ xor\\ a[n]\\ xor\\ x=s[p-1]\\ xor\\ s[n]\\ xor\\ x}$$\n\n\u7136\u540e\u5c31\u53ea\u8981\u7ef4\u62a4 $s[]$\u3002\u6dfb\u52a0\u5f88\u597d\u7ef4\u62a4\uff0c\u91cd\u70b9\u662f\u5982\u4f55\u67e5\u8be2\u3002\n\n\u6b64\u65f6\u67e5\u8be2\u8f6c\u53d8\u4e3a\uff1a\u5df2\u77e5 $val=\\mathrm{s[n]\\ xor\\ x}$\uff0c\u6c42\u4e00\u4e2a $p\\in[l-1,r-1]$\uff0c\u4f7f\u5f97 $\\mathrm{s[p]\\ xor\\ val}$ \u6700\u5927\u3002\n\n\u53ef\u4ee5\u6784\u5efa\u4e00\u9897\u53ef\u6301\u4e45\u5316 0/1 Trie\uff0c\u7b2c $i$ \u4e2a\u7248\u672c\u4e3a\u63d2\u5165\u4e86 $s[i]$ \u540e\u7684 Trie \u6811\u3002\n\n\u6bcf\u6b21\u67e5\u8be2\uff0c\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u8d2a\u5fc3\u5730\u9009\u4e0e\u8fd9\u4e00\u4f4d\u76f8\u53cd\u7684\u503c\u3002\n\n\u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a $l-1\\leq p\\leq r-1$ \u7684\u9650\u5236\u3002\n\n\u5148\u8003\u8651 $p\\leq r-1$\uff0c\u67e5\u8be2\u7b2c $r-1$ \u4e2a\u7248\u672c\u7684 Trie \u5373\u53ef\uff0c\u56e0\u4e3a\u6b64\u65f6\u4e0d\u53ef\u80fd\u8bbf\u95ee\u5230$r-1$\u4e4b\u540e\u7684$s$\u3002\n\n\u518d\u8003\u8651 $l-1\\leq p$\u3002\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a $latest$\uff0c\u8868\u793a\u5b50\u6811\u4e2d\u6240\u6709 $s$ \u503c\u7684\u4e0b\u6807\u7684\u6700\u5927\u503c\u3002\u8fd9\u6837\uff0c\u5728\u67e5\u8be2\u65f6\u53ea\u8bbf\u95ee $latest\\geq l-1$ \u7684\u8282\u70b9\u5c31\u884c\u4e86\u3002\n\n```cpp\n//It is made by M_sea\n#include <algorithm>\n#include <iostream>\n#include <cstdlib>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n#define re register\nusing namespace std;\n\nnamespace io {\n    const int SIZE=(1<<21)+1;\n    char ibuf[SIZE],*iS,*iT,obuf[SIZE],*oS=obuf,*oT=oS+SIZE-1,c,qu[55]; int f,qr;\n    inline char gc() { return (iS==iT?(iT=(iS=ibuf)+fread(ibuf,1,SIZE,stdin),(iS==iT?EOF:*iS++)):*iS++); }\n    inline void flush() {\n        fwrite(obuf,1,oS-obuf,stdout);\n        oS=obuf;\n    }\n    inline void putc(char x) {\n        *oS++=x;\n        if (oS==oT) flush();\n    }\n    template <class I>\n    inline void read(I &x) {\n        for (f=1,c=gc();c<'0'||c>'9';c=gc()) if (c=='-') f=-1;\n        for (x=0;c<='9'&&c>='0';c=gc()) x=x*10+(c&15); x*=f;\n    }\n    template <class I>\n    inline void print(I x) {\n        if (!x) putc('0'); if (x<0) putc('-'),x=-x;\n        while (x) qu[++qr]=x%10+'0',x/=10;\n        while (qr) putc(qu[qr--]);\n    }\n}\nusing io::gc;\nusing io::read;\nusing io::print;\nusing io::putc;\n\nconst int MAXN=600010+10;\n\nint trie[MAXN*24][2],latest[MAXN*24];\nint s[MAXN],root[MAXN];\nint n,m,tot;\n\ninline void insert(const int i,const int k,const int p,const int q) {\n\tif (k<0) { latest[q]=i; return; }\n\tint c=s[i]>>k&1;\n\tif (p) trie[q][c^1]=trie[p][c^1];\n\ttrie[q][c]=++tot;\n\tinsert(i,k-1,trie[p][c],trie[q][c]);\n\tlatest[q]=max(latest[trie[q][0]],latest[trie[q][1]]);\n}\n\ninline int query(const int now,const int val,const int k,const int L) {\n\tif (k<0) return s[latest[now]]^val;\n\tint c=val>>k&1;\n\tif (latest[trie[now][c^1]]>=L) return query(trie[now][c^1],val,k-1,L);\n\telse return query(trie[now][c],val,k-1,L);\n}\n\nint main() {\n\tread(n),read(m),latest[0]=-1,root[0]=++tot;\n\tinsert(0,23,0,root[0]);\n\tfor (re int i=1,x;i<=n;++i) {\n\t\tread(x),s[i]=s[i-1]^x,root[i]=++tot;\n\t\tinsert(i,23,root[i-1],root[i]);\n\t}\n\tfor (re int i=1,x,l,r;i<=m;++i) {\n\t\tchar op=gc(); while (!isalpha(op)) op=gc();\n\t\tif (op=='A') {\n\t\t\tread(x),root[++n]=++tot,s[n]=s[n-1]^x;\n\t\t\tinsert(n,23,root[n-1],root[n]);\n\t\t} else {\n\t\t    read(l),read(r),read(x);\n\t\t\tprint(query(root[r-1],s[n]^x,23,l-1)),putc('\\n');\n\t\t}\n\t}\n\tio::flush();\n\treturn 0;\n}\n```\n",
        "postTime": 1545274785,
        "uid": 38370,
        "name": "M_sea",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4735 \u3010\u6700\u5927\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "\u53ef\u6301\u4e45\u5316 $Trie$ \u771f\u597d\u5199...\n\n\u6211\u4eec\u770b\u4e24\u4e2a\u64cd\u4f5c\uff0c\u6dfb\u52a0\u64cd\u4f5c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u67e5\u8be2\u64cd\u4f5c\u770b\u8d77\u6765\u5f88\u5947\u602a\uff0c\u4f46\u662f\u5982\u679c\u8f6c\u4e3a\u524d\u7f00\u5f02\u6216\u548c\u6570\u7ec4$s[i]$\uff0c\u5e76\u628a $x$ \u5f02\u6216\u4e0a $s[n]$ \u7684\u8bdd...\n\n\u6211\u4eec\u53d1\u73b0\u5b9e\u9645\u4e0a\u5c31\u662f\u8003\u8651\u4e00\u4e2a\u533a\u95f4\u7684\u6570\u548c $x$ \u5f02\u6216\u540e\u7684\u6700\u5927\u5f02\u6216\u548c\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5efa\u4e00\u68f5\u53ef\u6301\u4e45\u5316 $Trie$ ,\u6bcf\u4e2a\u8282\u70b9\u5b58\u5b83\u7684\u6570\u5b57\u4e2a\u6570\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u8d2a\u5fc3\u8d70\u8def\u5c31\u597d\u3002\n\n\u53e6\u5916\u6ce8\u610f\u4e00\u4e2a\u5751\u70b9\uff0c\u5c31\u662f\u5982\u679c\u67e5\u8be2\u533a\u95f4\u5de6\u7aef\u70b9\u662f1\u7684\u8bdd\uff0c $x$ \u5f02\u6216\u4e0a $0$ \u53ef\u80fd\u662f\u6700\u5927\u7684\uff0c\u8981\u628a\u8fd9\u79cd\u60c5\u51b5\u8003\u8651\u8fdb\u53bb\u3002\n\n\u6700\u540e\uff0c\u5982\u679c\u4e0d\u77e5\u9053\u53ef\u6301\u4e45\u5316Trie\u7684\u8bdd\uff0c\u5176\u5b9e\u6839\u636e\u4e3b\u5e2d\u6811\u7684\u5efa\u6811\u65b9\u6cd5\u8111\u8865\u4e00\u4e0b\u5c31\u597d\uff0c\u8fd8\u662f\u5f88\u597d\u5199\u7684\u3002\n\n```cpp\n// luogu-judger-enable-o2\n#include <bits/stdc++.h>\nusing namespace std;\n#define maxn 600009\nint rt[maxn],cnt[maxn*28];\nint ch[maxn*28][2];\nint qz[maxn];\nint tt=1;\nint n,m;\nvoid ins(int a,int b,int t,int x) {\n    if(t<0) return;\n    int i=(x>>t)&1;\n    ch[a][!i]=ch[b][!i];\n    ch[a][i]=tt++;\n    cnt[ch[a][i]]=cnt[ch[b][i]]+1;\n    ins(ch[a][i],ch[b][i],t-1,x);\n}\nint qu(int a,int b,int t,int x) {\n    if(t<0) return 0;\n    int i=(x>>t)&1;\n    if(cnt[ch[b][!i]]>cnt[ch[a][!i]]) {\n        return (1<<t)+qu(ch[a][!i],ch[b][!i],t-1,x);\n    }\n    else {\n        return qu(ch[a][i],ch[b][i],t-1,x);\n    }\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    int a,b,c,i,j;\n    char s[5];\n    rt[0]=tt++;\n    ins(rt[0],0,25,0);\n    for(a=1;a<=n;a++) {\n        scanf(\"%d\",&b);\n        qz[a]=qz[a-1]^b;\n        rt[a]=tt++;\n        ins(rt[a],rt[a-1],25,qz[a]);\n    }\n    for(a=1;a<=m;a++) {\n        scanf(\"%s\",s);\n        if(s[0]=='A') {\n            scanf(\"%d\",&b);\n            n++;\n            qz[n]=qz[n-1]^b;\n            rt[n]=tt++;\n            ins(rt[n],rt[n-1],25,qz[n]);\n        }\n        else {\n            scanf(\"%d%d%d\",&i,&j,&b);\n            i--;j--;\n            if(i==0) printf(\"%d\\n\",qu(0,rt[j],25,b^qz[n]));\n            else printf(\"%d\\n\",qu(rt[i-1],rt[j],25,b^qz[n]));\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1530061422,
        "uid": 24608,
        "name": "winxp_qwq",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4720 \u3010\u6700\u5927\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "## \u5206\u6790\n\u5176\u5b9e\u8fd9\u9898\u7684 $Trie$ \u6811\u53ef\u4ee5\u4e0d\u7528\u53ef\u6301\u4e45\u5316 \n\n\u56e0\u4e3a\u524d\u7f00\u4f1a\u6709\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u7279\u5224\uff0c\u6240\u4ee5\u6211\u7684 $Trie$ \u6811\u91cc\u5b58\u7684\u662f\u540e\u7f00\n\n\u8981\u6ee1\u8db3 $a[p]\\ xor\\ a[p+1]\\ xor ... xor\\ a[N]\\ xor\\ x$ \u6700\u5927\n\n\u4e0d\u59a8\u8bbe\u540e\u7f00\u5f02\u6216\u548c\u4e3a $sum$\n\n\u90a3\u4e48\u5c31\u6709 $ \\sum_{i=p}^N sum[i]\\ xor\\ x$ \u6700\u5927\n\n\u5355\u6b21\u64cd\u4f5c\u53ef\u4ee5\u7528  $Trie$ \u6811 \u5b9e\u73b0\n\n\u5bf9\u4e8e\u591a\u7ec4\u8be2\u95ee\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6309\u7167\u6bcf\u4e00\u6b21\u8be2\u95ee\u7684\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u79bb\u7ebf\u6392\u5e8f\u5373\u53ef\n\n\u5bf9\u4e8e\u5de6\u7aef\u70b9\uff0c\u6211\u4eec\u8bb0\u5f55\u4e00\u4e0b\u5728 $Trie$ \u6811\u4e2d\u8fd9\u4e2a\u8282\u70b9\u6700\u665a\u5728\u54ea\u4e00\u6b21\u64cd\u4f5c\u4e2d\u88ab\u52a0\u5165\u5373\u53ef\n\n\u5e38\u6570\u6bd4\u53ef\u6301\u4e45\u5316 $Trie$ \u6811\u5c0f\u4e0d\u5c11\uff0c\u76ee\u524d\u662f\u6700\u4f18\u89e3\n## \u4ee3\u7801\n``` cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define rg register\ninline int read(){\n\trg int x=0,fh=1;\n\trg char ch=getchar();\n\twhile(ch<'0' || ch>'9'){\n\t\tif(ch=='-') fh=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0' && ch<='9'){\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn x*fh;\n}\nconst int maxn=6e5+5,maxk=34;\nint a[maxn],sum[maxn],n,m,ans[maxn],cnt,top;\nchar s[maxn];\nstruct asd{\n\tint l,r,id,val;\n}b[maxn];\nbool cmp(asd aa,asd bb){\n\treturn aa.r<bb.r;\n}\nint tr[maxn*10][2],mmax[maxn*10][2];\nvoid ad(rg int val,rg int id){\n\trg int now=0;\n\tfor(rg int i=30;i>=0;i--){\n\t\trg int k=(val>>i)&1;\n\t\tif(!tr[now][k]){\n\t\t\ttr[now][k]=++cnt;\n\t\t\tmmax[now][k]=id;\n\t\t} else {\n\t\t\tmmax[now][k]=std::max(mmax[now][k],id);\n\t\t}\n\t\tnow=tr[now][k];\n\t}\n}\nint cx(rg int val,rg int id){\n\trg int now=0,nans=0;\n\tfor(rg int i=30;i>=0;i--){\n\t\trg int k=(val>>i)&1;\n\t\tif(tr[now][k^1] && mmax[now][k^1]>=id){\n\t\t\tnow=tr[now][k^1];\n\t\t\tnans+=(1<<i);\n\t\t} else {\n\t\t\tnow=tr[now][k];\n\t\t}\n\t}\n\treturn nans;\n}\nint main(){\n\tn=read(),m=read();\n\tfor(rg int i=1;i<=n;i++){\n\t\ta[i]=read();\n\t}\n\trg int aa,bb,cc;\n\tfor(rg int i=1;i<=m;i++){\n\t\tscanf(\"%s\",s);\n\t\tif(s[0]=='A'){\n\t\t\taa=read();\n\t\t\ta[++n]=aa;\n\t\t} else {\n\t\t\taa=read(),bb=read(),cc=read();\n\t\t\ttop++;\n\t\t\tb[top].l=aa,b[top].r=bb,b[top].val=n,b[top].id=cc;\n\t\t}\n\t}\n\tfor(rg int i=n;i>=1;i--){\n\t\tsum[i]=sum[i+1]^a[i];\n\t}\n\tfor(rg int i=1;i<=top;i++){\n\t\tb[i].val=sum[b[i].val+1]^b[i].id;\n\t\tb[i].id=i;\n\t}\n\tstd::sort(b+1,b+1+top,cmp);\n\trg int head=1;\n\tfor(rg int i=1;i<=top;i++){\n\t\twhile(head<=b[i].r){\n\t\t\tad(sum[head],head);\n\t\t\thead++;\n\t\t}\n\t\tans[b[i].id]=cx(b[i].val,b[i].l);\n\t}\n\tfor(rg int i=1;i<=top;i++){\n\t\tprintf(\"%d\\n\",ans[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1608524729,
        "uid": 316322,
        "name": "hzoi_liuchang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4735 \u3010\u6700\u5927\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "## \u601d\u8003\u8fc7\u7a0b\n\u5982\u679c\u6ca1\u6709\u533a\u95f4\u7684\u9650\u5236\u663e\u7136\u5f88\u597d\u505a\uff1a\u8bbe $S_i$ \u8868\u793a\u524d\u7f00 $i$ \u4e2a\u5f02\u6216\u548c\uff0c\u4ee4 $K=x\\oplus S_n$\uff0c\u7136\u540e\u8981\u5728 $[0,n-1]$ \u4e2d\u627e\u5230\u4e00\u4e2a $p$ \u4f7f\u5f97 $S_p\\oplus K$ \u6700\u5927\u3002\n\n\u89e3\uff1a\u5728 01-Trie \u4e0a\uff0c\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a $cnt$\u3002\u6bcf\u4e00\u4f4d\u4e0a\uff0c\u5c3d\u91cf\u8d70\u548c $K$  \u8fd9\u4e00\u4f4d\u4e0d\u540c\u7684\uff0c\u7528 $cnt$ \u5224\u65ad\u662f\u5426\u80fd\u8d70\u3002 \n\n\u90a3\u73b0\u5728\u6709\u4e86\u533a\u95f4\u9650\u5236\uff0c\u663e\u7136\uff0c\u201c\u80fd\u4e0d\u540c\u5c31\u4e0d\u540c\u7684\u8d2a\u5fc3\u201d\u4f9d\u7136\u662f\u6b63\u786e\u7684\uff0c\u53ea\u662f\u5224\u65ad\u65b9\u6cd5\u6709\u70b9\u4e0d\u540c\u3002\n\n\u9996\u5148\u63a8\u4e00\u4e0b\u5f0f\u5b50\uff1a$K$ \u4e00\u6837\uff0c$p$ \u7684\u8303\u56f4\u53d8\u6210 $[l-1,r-1]$\u4e2d\u9009\uff0c\u8981\u627e\u5230 $S_p$ \u4f7f\u5f97 $S_p\\oplus K$ \u6700\u5927\u3002\n\n\u6700\u66b4\u529b\u7684\u60f3\u6cd5\u56fa\u7136\u662f\uff0c\u628a\u533a\u95f4\u4e2d\u6240\u6709\u7684 $S$ \u6570\u7ec4\u503c\u90fd\u63d2\u5165\u5230 Trie \u91cc\u9762\uff0c\u7136\u540e\u8f6c\u5316\u6210\u6ca1\u6709\u533a\u95f4\u9650\u5236\u7684\u3002\n\n\u6bcf\u6b21\u66b4\u529b\u63d2\u56fa\u7136\u4e0d\u53ef\u53d6\u3002\u8003\u8651\u7528\u201c\u524d\u7f00\u548c\u5957Trie\u201d\u6765\u4f18\u5316\u5b83\uff1a\n\n\u8bbe $T_i$ \u8868\u793a\u63d2\u5165\u4e86\u524d $i$ \u4e2a $S$ \u540e\u7684 Trie\u3002\u90a3\u533a\u95f4 $[l,r]$ \u7684 Trie \u4e0a\uff0c\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u7684 $cnt$ \u5c31\u7528 $T_r-T_{l-1}$ \u7684 $cnt$ \u5373\u53ef\u3002\n\n\u5982\u4f55\u5b58\u50a8 $T_i$ \u5462\uff1f\u663e\u7136\u662f\u53ef\u6301\u4e45\u5316\u3002\n\n## \u89e3\u6cd5\u603b\u7ed3\n\n\u7ef4\u62a4\u4e00\u4e2a\u53ef\u6301\u4e45\u5316 Trie\uff0c\u6c42\u51fa Trie \u7684\u524d\u7f00\u548c\u3002\u80fd\u4e0d\u540c\u5c31\u4e0d\u540c\u7684\u8d2a\u5fc3\u8dd1\u4e00\u904d\uff0c\u7528\u524d\u7f00\u7684 cnt \u76f8\u51cf\u5224\u65ad\u662f\u5426\u80fd\u8d70\u3002\n\n## \u7ec6\u8282\n\n- \u5173\u4e8e\u6570\u7ec4\uff1a\u53ea\u8981\u5f00\u4e0d\u6b7b\uff0c\u5c31\u5f80\u6b7b\u91cc\u5f00\n- \u9996\u5148 $p$ \u7684\u8303\u56f4\u662f $[l-1,r-1]$ \u3002\u90a3\u518d\u5957\u5728 Trie \u7684\u524d\u7f00\u548c\u76f8\u51cf\u4e0a\uff0c\u5c31\u662f\u7b2c $r-1$ \u9897 Trie \u51cf\u53bb\u7b2c $l-2$ \u9897 Trie\u3002\n- \u5982\u679c $l=1$ \u600e\u4e48\u529e\uff1f\u7b2c $-1$ \u9897 Trie\uff1f\uff1f\uff1f\n- \u5f88\u7b80\u5355\u7684 trick\uff0c\u6211\u4eec\u628a\u533a\u95f4\u6574\u4f53\u5f80\u53f3\u5e73\u79fb\u4e00\u4e2a\u3002\u7136\u540e\u8981\u6ce8\u610f\uff0c\u7b2c $1$ \u9897 Trie\uff0c\u4e5f\u5c31\u662f\u5e73\u79fb\u524d\u7684\u7b2c $0$ \u9897 Trie\uff0c\u662f\u6709\u503c\u7684\u3002\u5b83\u90a3\u6761\u5168 $0$ \u7684\u94fe\u4e0a $cnt$ \u90fd\u662f $1$\uff01\u5343\u4e07\u6ce8\u610f\u554aQaQ\n\n## \u7ec6\u8282\u603b\u7ed3\n- \u6570\u7ec4\n- \u6574\u4f53\u5e73\u79fb\n- \u63d2\u5165\u4e00\u4e2a $0$\n\n\uff08\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u56e0\u4e3a\u540e\u4e24\u4e2a\u70b9WA\u4e86\u4e24\u6b21\uff0c\u4e00\u6b21\u6539\u4e00\u4e2aQaQ\uff09\n## \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nnamespace Flandre_Scarlet\n{\n    #define N 600005\n    #define F(i,l,r) for(int i=l;i<=r;++i)\n    #define D(i,r,l) for(int i=r;i>=l;--i)\n    #define Fs(i,l,r,c) for(int i=l;i<=r;c)\n    #define Ds(i,r,l,c) for(int i=r;i>=l;c)\n    #define MEM(x,a) memset(x,a,sizeof(x))\n    #define FK(x) MEM(x,0)\n    #define Tra(i,u) for(int i=G.Start(u),v=G.To(i);~i;i=G.Next(i),v=G.To(i))\n    #define p_b push_back\n    #define sz(a) ((int)a.size())\n    #define all(a) a.begin(),a.end()\n    #define iter(a,p) (a.begin()+p)\n    int I() {char c=getchar(); int x=0; int f=1; while(c<'0' or c>'9') f=(c=='-')?-1:1,c=getchar(); while(c>='0' and c<='9') x=(x<<1)+(x<<3)+(c^48),c=getchar(); return (x=(f==1)?x:-x);}\n    void Rd(int cnt,...) {va_list args;va_start(args,cnt); F(i,1,cnt) {int* x=va_arg(args,int*);(*x)=I();} va_end(args);}\n    void RA(int *a,int n) {int *p=(a+1); F(i,1,n) {(*p)=I();++p;}}\n\n    class Trie\n    {\n    public:\n        int ch[N*30][2],cnt[N*30];\n        int rt[N],tot=0;\n        void Add(int x,int pre,int &ix)\n        {\n            ix=++tot;\n            int p=ix,q=pre;\n            cnt[p]=cnt[q]+1;\n            D(i,24,0)\n            {\n                ch[p][0]=ch[q][0]; ch[p][1]=ch[q][1];\n                int c=((x>>i)&1);\n                ch[p][c]=++tot;\n                p=ch[p][c],q=ch[q][c];\n                cnt[p]=cnt[q]+1;\n            }\n        }\n        int  Query(int x,int r1,int r2)\n        {\n            int p=rt[r1],q=rt[r2];\n            int ans=0;\n            D(i,24,0)\n            {\n                int c=((x>>i)&1);\n                if (cnt[ch[q][c^1]]-cnt[ch[p][c^1]]>0) ans|=(1<<i),p=ch[p][c^1],q=ch[q][c^1];\n                else p=ch[p][c],q=ch[q][c];\n                // cnt \u76f8\u51cf\u5224\u65ad\u662f\u5426\u80fd\u8d70\n            }\n            return ans;\n        }\n        int  RQuery(int x,int l,int r) {return Query(x,l-1,r);}\n    }T;\n    int n,m;\n    void Input()\n    {\n        Rd(2,&n,&m);\n    }\n    void Soviet()\n    {\n        T.Add(0,T.rt[0],T.rt[1]); // \u6ce8\u610f\u8fd9\u4e2a 0 \uff08\u4e3b\u8981\u662f\u4e3a\u4e86\u4fee\u6539 cnt\n        int cur=0,pos=1; // cur \u8868\u793a\u5f53\u524d\u7684\u524d\u7f00\u548c\uff0cpos \u8868\u793a\u5f53\u524d\u7684\u4f4d\u7f6e\n        F(i,1,n) {int x=I(); cur^=x; T.Add(cur,T.rt[pos],T.rt[pos+1]); ++pos;}\n        // \u6ce8\u610f\uff1a\u63d2\u5165\u7684\u662f\u524d\u7f00\u548c\n        F(i,1,m)\n        {\n            char o[3]; scanf(\"%s\",o);\n            if (o[0]=='A')\n            {\n                int x=I();\n                cur^=x; T.Add(cur,T.rt[pos],T.rt[pos+1]); ++pos;\n            }\n            else\n            {\n                int l=I()+1,r=I()+1,x=I();\n                int fir=x^cur;\n                printf(\"%d\\n\",T.RQuery(fir,l-1,r-1));\n            }\n        }\n    }\n    void IsMyWife()\n    {\n        Input();\n        Soviet();\n    }\n}\n#undef int //long long\nint main()\n{\n    Flandre_Scarlet::IsMyWife();\n    getchar();\n    return 0;\n}\n```",
        "postTime": 1598607476,
        "uid": 106252,
        "name": "LightningUZ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4735 \u3010\u6700\u5927\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "\u9000\u5f79\u524d\u8865\u4e2a\u9505\u3002\n\n\u7528\u5b57\u5178\u6811\u8bb0\u5f55\u4e0b\u5f02\u6216\u524d\u7f00\u548c\uff0c\u6700\u540e\u8d2a\u5fc3\u67e5\u627e\u7684\u65f6\u5019\u53ea\u9700\u8981\u770b $\\operatorname{l}$ \u5230 $\\operatorname{r}$ \u533a\u95f4\u5bf9\u5e94\u70b9\u7684 $\\operatorname{sum}$ \u53ea\u5dee\u662f\u5426\u4e0d\u4e3a0\uff0c\n\u4e0d\u4e3a0\u8bf4\u660e\u8fd9\u6bb5\u533a\u95f4\u6709\u8fd9\u5b58\u5728\u8fd9\u4e00\u6bb5\u5f02\u6216\u524d\u7f00\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u8d2a\u5fc3\u7684\u4ece\u9ad8\u4f4d\u5f80\u4f4e\u4f4d\u53d6\u3002\n\n\n\u5b57\u5178\u6811\u7528\u53ef\u6301\u4e45\u5316\u8282\u7701\u4e00\u70b9\u7a7a\u95f4\uff0c\u540c\u65f6\u4e5f\u66f4\u65b9\u4fbf\u7ef4\u62a4\u524d\u7f00\u3002\u5177\u4f53\u5c31\u662f\u5bf9\u4e8e\u6ca1\u6709\u4fee\u6539\u5230\u7684\u524d\u7f00\u76f4\u63a5\u7ee7\u627f\u3002\n```cpp\n#include<bits/stdc++.h>\ntypedef long long LL;\ntypedef double db;\n#define REP(i,s,t) for(register int i=s;i<=t;++i)\n#define PER(i,s,t) for(register int i=s;i>=t;--i)\n#define FOREDGE(i,x,v) for(int i=fir[x],v=to[i];i;i=nex[i],v=to[i])\ntemplate<typename T>inline T in(){\n    T ans=0;bool b=0;char ch=getchar();\n    while(ch<'0'||ch>'9')b=(ch=='-'),ch=getchar();\n    while(ch>='0'&&ch<='9')ans=ans*10+ch-48,ch=getchar();\n    return b?-ans:ans;\n}\n#define II in<int>()\n#define IL in<LL>()\n//<-----QAQ----->\nconst int MX=6e5+100;\nint n,m,sum,top;\nstruct Trie{\n    int rt[MX],sz,ch[2][MX<<5],cnt[MX<<5],vl[MX];\n    void insert(int v){\n        rt[++top]=++sz;vl[top]=v;\n        int l=rt[top-1],r=rt[top];\n        PER(bit,24,0){\n            int b=((v>>bit)&1);\n            ch[!b][r]=ch[!b][l];\n            ch[b][r]=++sz;\n            l=ch[b][l];r=ch[b][r];\n            cnt[r]=cnt[l]+1;\n        }\n    }\n    int query(int v,int r,int l){\n        int ans=0;\n        l=rt[l],r=rt[r];\n        PER(bit,24,0){\n            int b=((v>>bit)&1);\n            if(cnt[ch[!b][r]]>cnt[ch[!b][l]])\n                ans+=(1<<bit),b=!b;\n            l=ch[b][l];r=ch[b][r];\n        }\n        return ans;\n    }\n}T;\nchar op[10];\nint main(){\n    n=II,m=II;\n    T.insert(0);\n    REP(i,1,n)T.insert(sum^=II);\n    REP(i,1,m){\n        scanf(\"%s\",op);\n        switch(op[0]){\n            case 'A':T.insert(sum^=II);break;\n            case 'Q':printf(\"%d\\n\",T.query(II^sum,II,II-1));break;\n        }\n    }\n}\n```\n",
        "postTime": 1533798278,
        "uid": 32483,
        "name": "2344b",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4735 \u3010\u6700\u5927\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "### \u524d\u9762\u51e0\u7bc7\u9898\u89e3\u5df2\u7ecf\u8bf4\u4e86,\u6b63\u89e3\u662f\u53ef\u6301\u4e45\u5316Trie(\u5b57\u5178\u6811).\n#### \u4e4b\u6240\u4ee5\u6253\u7b97\u5199\u4e00\u4e0b\u9898\u89e3,\u662f\u56e0\u4e3a\u6211\u7528\u7684\u5176\u4ed6\u9898\u89e3\u4e2d\u6ca1\u6709\u7684\u81ea\u5e26\u5927\u5e38\u6570\u7684\u6307\u9488\u505a\u6cd5,\u5e76\u4e14\u8fd9\u4e2a\u9898\u8fd8\u6709\u4e24\u4e09\u4e2a\u91cd\u8981\u7684\u5751\u70b9\u6280\u5de7...\n#### \u601d\u8def(\u81ea\u5df1+\u501f\u9274): \n\n\u9996\u5148\u8981\u5bf9\u4f4d\u8fd0\u7b97\u8f83\u4e3a\u719f\u6089,\u4e00\u5b9a\u8981\u77e5\u9053\u5f02\u6216\u8fd0\u7b97\u7684\u7279\u6027,\u5373\u5982\u4e0b \n\n```cpp\ns[1] = a[0]  xor a[1] \ns[p] = s[p - 1] xor a[p]\na[p] xor a[p + 1] xor ... xor a[N] xor x = s[p - 1] xor s[N] xor x\n```\n\n\u5982\u679c\u8fd8\u4e0d\u61c2,\u5e76\u4e14\u6709\u4e00\u70b9\u56fe\u8bba\u57fa\u7840\u7684\u8bdd,\u53ef\u4ee5\u5148\u505a[P4551 \u6700\u957f\u5f02\u6216\u8def\u5f84](https://www.luogu.org/problemnew/show/P4551)\u6765\u7ec3\u4e60,\u4e0d\u9700\u8981\u53ef\u6301\u4e45\u5316\u601d\u60f3.  \n\u90a3\u4e48\u5728\u5e8f\u5217\u672b\u5c3e\u6dfb\u52a0\u6570\u5b57\u65f6,\u5148\u8ba9n=n + 1,\u7ef4\u62a4s\u6570\u7ec4,\u5e76\u5411Trie\u4e2d\u63d2\u5165s\\[n\\]\u768424\u4f4d\u4e8c\u8fdb\u5236\u6570,\u524d\u9762\u75280\u586b\u5145.  \n\n#### \u5176\u5b9e\u8fd9\u4e2a\u9898\u96be\u70b9\u5728\u4e8e\u67e5\u8be2\n\u6839\u636e\u4f4d\u8fd0\u7b97\u7279\u6027,\u6709\u5982\u4e0b\u7ed3\u8bba:\n\n```cpp\na[p] xor a[p + 1] xor ... xor a[N] xor x = s[p - 1] xor s[N] xor x\n\u5f53l <= p <= r\u65f6,\u6c42p,\u4f7fs[p - 1] xor s[N] xor x\u6700\u5927 \n```\n\n\u5982\u679c\u6ca1\u6709l\u548cr\u7684\u9650\u5236,\u90a3\u4e48\u5c31\u548cP4551\u6c42\u6cd5\u76f8\u540c,\u7136\u800c\u8003\u8651\u53f3\u7aefr\u7684\u9650\u5236,\u6240\u4ee5\u8981\u7528\u5230\u53ef\u6301\u4e45\u5316\u601d\u60f3.  \n\u53ef\u6301\u4e45\u5316Trie\u5176\u5b9e\u770b\u8d77\u6765\u4e0d\u90a3\u4e48\u5bb9\u6613,\u5176\u5b9e\u5f88\u597d\u5199.\u53ea\u8981\u5728\u539fTrie\u57fa\u7840\u4e0a,\u6bcf\u6b21\u63d2\u5165\u65f6,\u8981\u7528\u5230\u7684\u8282\u70b9\u90fd\u65b0\u521b\u5efa\u4e00\u4e2a,\u518d\u7ee7\u627f\u539f\u6765\u76f8\u540c\u4f4d\u7f6e\u4e0a\u7684\u8282\u70b9,\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0d\u540c\u65f6\u671f\u7684\u6839\u8282\u70b9\u8bbf\u95ee\u4e0d\u540c\u65f6\u671f\u7684Trie.  \n\u6709\u4e86\u53ef\u6301\u4e45\u5316Trie,\u90a3\u4e48\u533a\u95f4\u53f3\u7aefr\u7684\u9650\u5236\u5c31\u89e3\u51b3\u4e86,\u53ea\u8981\u641c\u7d22\u65f6\u4ecer-1\u5f00\u59cb\u641c\u7d22\u5c31\u884c\u4e86.   \n\u73b0\u5728\u518d\u8003\u8651\u5de6\u7aefl\u7684\u9650\u5236,\u5176\u5b9e\u4e5f\u601d\u8def\u548c\u505a\u6cd5\u90fd\u6bd4\u8f83\u7b80\u5355,\u53ea\u9700\u8981\u5728\u6bcf\u4e2a\u70b9\u4e0a\u6807\u8bb0\u7ecf\u8fc7\u8fd9\u4e2a\u8282\u70b9\u7684\u6700\u5927\u7684\u6570.\u5177\u4f53\u6c42\u6cd5\u5c31\u662f\u5728\u63d2\u5165\u65f6,\u6807\u8bb0\u63d2\u5165\u8def\u5f84\u4e0a\u7684\u70b9\u5168\u4e3a\u5f53\u524d\u63d2\u5165\u7684s\u6570\u7ec4\u7684\u4e0b\u6807\u5c31\u884c\u4e86.\u56e0\u4e3a\u63d2\u5165\u65f6\u4e0b\u6807\u662f\u8d8a\u6765\u8d8a\u5927\u7684,\u6240\u4ee5\u5c31\u4e0d\u7528\u8003\u8651\u6807\u8bb0\u7684\u662f\u5426\u4e3a\u6700\u5927\u7684\u6570\u4e86.  \n#### \u4e0b\u9762\u8003\u8651\u67e5\u8be2\u5982\u4f55\u641c\u7d22\n\u90a3\u4e48\u5728\u641c\u7d22\u65f6,\u82e5\u53ea\u67090\u7684\u4e0b\u6807\u4e3a0,\u641c\u7d22\u7b2cr-1\u4e2a\u6839,\u4ece\u6700\u9ad8\u4f4d(\u7b2c24\u4f4d)\u5f00\u59cb,\u4e00\u76f4\u52300\u4f4d,\u6bcf\u6b21\u5148\u770b\u6b64\u4f4d\u4e0a\u5f02\u6216\u5927\u7684\u5b50\u8282\u70b9,\u662f\u5426\u5b58\u5728\u4e14\u662f\u5426\u6807\u8bb0\u503c>=l-1,\u82e5\u90fd\u6210\u7acb,\u5c31\u8ba9\u5f53\u524d\u6307\u9488\u6307\u5411\u6b64\u6b64\u5b69\u5b50,\u5e76\u8ba9\u6b64\u6b21ans+=1<<\u6b64\u4f4d,\u5426\u5219\u5c31\u68c0\u67e5\u53e6\u5916\u4e00\u4e2a\u5b50\u8282\u70b9,\u6761\u4ef6\u90fd\u4e0d\u6210\u7acb,\u76f4\u63a5\u8fd4\u56de\u5f53\u524dans.  \n\u8fd9\u4e2a\u9898\u8fd8\u6709\u51e0\u4e2a\u6280\u5de7:   \n\u5361\u5e38: inline register \u624b\u5199new\u8282\u70b9\u51fd\u6570 \u5feb\u8bfb   \n\u8fd8\u6709\u5c31\u662f\u4e00\u5f00\u59cb\u4e0d\u80fd\u4e3a\u7a7aTrie\u6811,\u9700\u8981\u79d1\u5b66\u63d2\u5165\u4e00\u4e2a0,\u7b2c\u4e8c\u4e2a\u70b9\u6709\u533a\u95f4\u5de6\u7aef\u70b9l=1\u5e76\u4e14num\u5f02\u62160\u6700\u5927.   \n### \u4ee3\u7801\u5b9e\u73b0:\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <string.h>\nusing namespace std;\nstruct node {\n    node *childs[2];\n\tint symboln;\n} * mainnodes[500001], nodes[13000001];\nint mptr, nptr;\n//mainnode\u7684\u4e0b\u6807\u6307\u9488,nodes\u7684\u4e0b\u6807\u6307\u9488\ninline node *newnode(node *an, int s) {\n\t++nptr;\n\tnodes[nptr].childs[0]= an->childs[0], nodes[nptr].childs[1]= an->childs[1];\n\tnodes[nptr].symboln= s;\n\treturn &nodes[nptr];\n}\ninline node *newnode(int s) {\n\t++nptr;\n\tnodes[nptr].childs[0]= nodes[nptr].childs[1]= NULL;\n\tnodes[nptr].symboln= s;\n\treturn &nodes[nptr];\n}\n//newnode\u4e3a\u624b\u5199new\u8282\u70b9\ninline void insert(int num) {\n\tregister node *lnode= newnode(mainnodes[mptr], mptr + 1);\n    //\u5361\u5e38,\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6839\u8282\u70b9\u7ee7\u627f\u539f\u6765\u7684\n\tmainnodes[++mptr]= lnode;\n\tfor(register int i= 24, ch; i + 1; --i) {\n\t\tch= num >> i & 1;\n        //\u4f4d\u8fd0\u7b97\u5224\u65ad\u4e8c\u8fdb\u5236\u4e0b\u7b2ci\u4f4d\u662f\u5426\u4e3a1\n\t\tif(lnode->childs[ch])\n\t\t\tlnode= lnode->childs[ch]= newnode(lnode->childs[ch], mptr);\n\t\telse\n\t\t\tlnode= lnode->childs[ch]= newnode(mptr);\n        //\u9700\u8981\u6539\u53d8\u7684\u8282\u70b9\u8981\u521b\u5efa\u65b0\u7684\u8282\u70b9,\u539f\u6765\u5b58\u5728\u8fd8\u8981\u7ee7\u627f\u539f\u6765\u7684\u8282\u70b9\n\t}\n\treturn;\n}\ninline int find(int num, int l, int r) {\n//\u6b64\u5904l\u548cr,\u5728\u8f93\u5165\u65f6\u5df2\u7ecf\u90fd-1\n\tregister node *lnode= mainnodes[r];\n\tint ans= 0;\n\tfor(register int i= 24, ch; i + 1; --i) {\n\t\tch= num >> i & 1;\n\t\tif(lnode->childs[ch ^ 1] && lnode->childs[ch ^ 1]->symboln >= l)\n\t\t\tlnode= lnode->childs[ch ^ 1], ans+= 1 << i;\n        //\u4f18\u5148\u9009\u62e9\u6b64\u4f4d\u4e0a\u5f02\u6216\u4e3a1\u7684\n        //\u8981\u6ee1\u8db3\u6807\u8bb0\u503c>=\u5de6\u7aef\u70b9-1\n\t\telse if(lnode->childs[ch] && lnode->childs[ch]->symboln >= l)\n\t\t\tlnode= lnode->childs[ch];\n\t\telse\n\t\t\tbreak;\n\t}\n\treturn ans;\n}\nvoid init() {\n\tregister node *lnode= newnode(0);\n\tmainnodes[0]= lnode;\n\tfor(register int i= 24; i + 1; --i) {\n\t\tlnode->childs[0]= newnode(0);\n\t\tlnode= lnode->childs[0];\n\t}\n    //\u521d\u59cb\u5316,\u5411\u8d77\u59cb\u7684Trie\u6811\u63d2\u51650\n}\ninline int read() {\n\tstatic char c= getchar();\n\tint a= 0;\n\twhile(c < '0' || c > '9') c= getchar();\n\twhile(c >= '0' && c <= '9') a= a * 10 + c - '0', c= getchar();\n\treturn a;\n}\n//\u5feb\u8bfb\u5361\u5e38\u4f18\u5316\nint n, m, tmpx, tmpl, tmpr, xors[500001];\nchar tmpy;\nint main() {\n\tinit();\n\tn= read(), m= read();\n\tfor(register int i= 1; i <= n; i++) {\n\t\ttmpx= read();\n\t\txors[i]= xors[i - 1] ^ tmpx;\n        //\u6839\u636e\u5f02\u6216\u539f\u7406\u7ef4\u62a4s(xors)\u6570\u7ec4\n\t\tinsert(xors[i]);\n\t}\n\tfor(register int i= 0; i < m; i++) {\n\t\tscanf(\" %c\", &tmpy);\n\t\tif(tmpy == 'A') {\n\t\t\ttmpx= read();\n\t\t\txors[n + 1]= xors[n] ^ tmpx;\n\t\t\tinsert(xors[++n]);\n\t\t}\n\t\telse {\n\t\t\ttmpl= read(), tmpr= read(), tmpx= read();\n\t\t\tprintf(\"%d\\n\", find(xors[n] ^ tmpx, tmpl - 1, tmpr - 1));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n### \u5361\u5e38\u98de\u4e86,\u5361\u4e86\u4e00\u9875\u63d0\u4ea4,\u6700\u540e\u7ec8\u4e8eT\u7684\u70b9\u5361900+msAC",
        "postTime": 1544702334,
        "uid": 109815,
        "name": "Ciyang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4735 \u3010\u6700\u5927\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "## \u53ef\u6301\u4e45\u531601Trie\u6811\n\u7531\u4e8e\u5f02\u6216\u76f8\u540c\u7684\u6570\u4f1a\u62b5\u6d88\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6c42\u524d\u7f00\u548c\u3002\n\n\u4e24\u4e2a\u524d\u7f00\u548c\u5f02\u6216\u5373\u4f7f\u4e2d\u95f4\u90a3\u90e8\u5206\u7684\u5f02\u6216\u503c~~\u90fd\u505a\u8fd9\u79cd\u9898\u4e86\uff0c\u80af\u5b9a\u77e5\u9053~~\n\n\u5373\n\n$~~~~~~~~~~~~~~~a[l]~xor~ a[l+1]~xor~...~xor~a[r] = a[r]~xor~a[l-1]$\n\n\u90a3\u4e48\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\u5efa\u7acb\u4e00\u9897Trie\u6811\uff0c\u4f46\u8fd9\u6837\u4f1a\u7a7a\u95f4~~\u77ac\u95f4~~\u7206\u70b8~~\u9001\u5b83\u5347\u5929~~\uff0c\u4f46\u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u5bf9\u4e8e\u6bcf\u5c42\u53ea\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u5efa\u6811\uff0c~~\u4e5f\u5c31\u662f\u53ef\u6301\u4e45\u5316\uff08\u7adf\u7136YY\u51fa\u6765\u4e86\uff09~~\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a$~O((n+m)logn)~$\uff0c\u53ef\u4ee5\u63a5\u53d7\n\n\u7136\u540e\u6211\u5c31\u9700\u8981\u5728$~l-1~$ \u5230 $~r-1~$\u7684\u8303\u56f4\u5185\u8d2a\u5fc3\u8df3\u8282\u70b9\u5373\u53ef\u3002\n\n\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u786e\u5b9a\u8303\u56f4\u5462\uff1f\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a$~lt~$\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u5185\u6811\u6700\u665a\u51fa\u73b0\u7684\u4f4d\u7f6e~~\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff1f~~\uff0c\u8df3\u8282\u70b9\u65f6\u7528$lt$\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u67e5\u627e\u8303\u56f4\u5373\u53ef\u3002\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\ninline int read()\n{\n\tint x = 0; char ch = getchar();\n\twhile(ch < '0' || ch > '9') ch = getchar(); \n\twhile(ch >= '0' && ch <= '9') {x = (x << 3) + (x << 1) + ch - '0'; ch = getchar();}\n\treturn x;\n}\nconst int N = 6e5+5;\nint n , m;\nint a[N];\nchar s[1];\nstruct Persisdent_Trie\n{\n\tstruct node\n\t{\n\t\tnode *ch[2]; int lt;\n\t\tnode() { ch[0] = ch[1] = NULL; lt = 0;}\n\t}*root[N] , pool[N * 20] , *tail;\n\tPersisdent_Trie() { tail = pool;}\n\tinline void build()\n\t{\n\t\tnode *o = root[0] = new (tail ++) node();\n\t\tfor(int i = 23;i >= 0;i --) o -> ch[0] = new (tail ++) node() , o = o -> ch[0];\n\t}\n\tinline void insert(int id)\n\t{\n\t\tnode *o = root[id] = new (tail ++) node() , *p = root[id - 1]; int x = a[id];\n\t\tfor(int i = 23 , tmp;i >= 0;i --)\n\t\t{\n\t\t\tif(p) *o = *p;\n\t\t\to -> lt = max(o -> lt,id);\n\t\t\ttmp = (x >> i) & 1; o -> ch[tmp] = new (tail ++) node();\n\t\t\to = o -> ch[tmp]; p = p ? p -> ch[tmp] : NULL;\n\t\t}\n\t\to -> lt = max(o -> lt,id);\n\t}\n\tint query(node *o,int x,int limit)\n\t{\n\t\tfor(int i = 23 , tmp;i >= 0;i --) \n\t\t{\n\t\t\ttmp = (x >> i) & 1;\n\t\t\tif(o -> ch[tmp ^ 1] && o -> ch[tmp ^ 1] -> lt >= limit) o = o -> ch[tmp ^ 1];\n\t\t\telse o = o -> ch[tmp];\n\t\t}\n\t\treturn a[o -> lt] ^ x;\n\t}\n\tinline void LOL()\n\t{\n\t\tn = read(); m = read(); build(); \n\t\tfor(int i = 1;i <= n;i ++) a[i] = a[i - 1] ^ read() , insert(i);\n\t\tfor(int i = 1 , l , r , x;i <= m;i ++)\n\t\t{\n\t\t\tscanf(\"%s\",s);\n\t\t\tif(s[0] == 'A') n ++ , a[n] = a[n - 1] ^ read() , insert(n);\n\t\t\telse l = read() , r = read() , x = read() , printf(\"%d\\n\",query(root[r - 1],a[n] ^ x,l - 1));\n\t\t}\n\t}\n}DNF;\nint main() { return DNF.LOL() , 0;}\n```\n",
        "postTime": 1568864923,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4735 \u3010\u6700\u5927\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\u8fd9\u662f\u4e00\u4e2a\u53ef\u6301\u4e45\u5316 Trie \u95ee\u9898\u3002\n## \u601d\u8def\n### 1. \u8f6c\u5316\n```\na ^ a = 0\n```\n\u5f02\u6216\u8fd0\u7b97\u7684\u81ea\u53cd\u6027\u662f\u89e3\u9898\u7684\u5173\u952e\u3002\n\n\u65e2\u7136\u6d89\u53ca\u5230\u4e86\u533a\u95f4\u7684\u5f02\u6216\u548c\uff0c\u90a3\u4e48\u8bd5\u7740\u7528\u524d\u7f00\u548c\u7684\u65b9\u5f0f\u8f6c\u5316\u3002\n```\n\u8bbeS[i] = S[i-1] ^ a[i],\u7279\u6b8a\u7684\uff0cS[0] = 0\nS[1] = a[1]\nS[2] = a[1] ^ a[2]\nS[3] = a[1] ^ a[2] ^ a[3]\nS[4] = a[1] ^ a[2] ^ a[3] ^ a[4]\n...\nS[n] = a[1] ^ a[2] ^ a[3] ^ a[4] ^ ... ^ a[n] ^ x\n\u90a3\u4e48 a[p] + a[p+1] + a[p+2] + ... + a[n] = S[n] ^ S[p-1] ^ x\n```\n\u4e0d\u96be\u53d1\u73b0\uff0c```S[n] ^ x``` \u662f\u4e00\u4e2a\u5b9a\u503c\uff0c\u800c\u552f\u4e00\u5f85\u786e\u5b9a\u7684\u662f ```S[p-1]``` .\n\n\u8fd9\u53c8\u56de\u5230\u4e86\u6700\u5927\u5f02\u6216\u5bf9\u95ee\u9898\uff0c\u786e\u5b9a\u4e86\u601d\u8def\u662f\u7528 Trie\u3002\n\n\u7531\u4e8e ```l<=p<=r```\uff0c\u6240\u4ee5```l-1<=p-1<=r-1```\uff0c\u5982\u679c\u7167\u5e38\u6765\u505a\u7684\u8bdd\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4e32\u672b\u5c3e\u7684\u7f16\u53f7\u5373\u53ef\uff0c\u53ef\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u6491\u4e0d\u4f4f\u3002\n\n\u800c\u4e14\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u8fd9\u6b21\u7684\u6570\u7ec4\u662f\u52a8\u6001\u7684\uff08\u8981\u5f80\u91cc\u9762\u4e0d\u505c\u5730\u52a0\u4e1c\u897f\uff09\u3002\n\n### 2. \u7b97\u6cd5\u6838\u5fc3\n\n\u5bf9\u4e8e\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0c\u4e00\u822c\u7684 Trie \u5f88\u96be\u641e\u5b9a\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u628a\u6bcf\u4e00\u6b21\u63d2\u5165\u540e\u7684\u7248\u672c\u5168\u90e8\u8bb0\u5f55\u4e0b\u6765\uff0c0\u53f7\u7248\u672c\u8bb0\u5f55\u7a7a\u6811\uff0c1\u53f7\u7248\u672c\u8bb0\u5f55\u7b2c\u4e00\u6b21\u63d2\u5165\u540e\u7684\u6811\uff0c2\u53f7\u7248\u672c\u8bb0\u5f55\u7b2c\u4e8c\u6b21\u63d2\u5165\u540e\u7684\u6811\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u7248\u672c\u8fd8\u662f\u9700\u8981\u5927\u91cf\u7684\u65f6\u95f4\uff0c\u4f46\u662f\u5982\u679c\u53ea\u8bb0\u5f55\u6bcf\u6b21\u63d2\u5165\u540e\u4e0d\u4e00\u6837\u7684\u5730\u65b9\uff08\u53ef\u6301\u4e45\u5316\u7684\u6838\u5fc3\u601d\u60f3\uff09\uff0c\u5c31\u80fd\u5927\u5927\u63d0\u9ad8\u6548\u7387\u3002\n\n\u629b\u5f00\u6b64\u9898\uff0c\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5c31\u80fd\u7406\u89e3\u53ef\u6301\u4e45\u5316\u7684\u601d\u60f3\u3002\n\n\u6bd4\u5982\uff0c\u6709\u56db\u4e2a\u5b57\u7b26\u4e32\u5206\u522b\u4e3a \"cab\" \"fry\" \"rat\" \"cat\"\uff0c\u4f9d\u6b21\u63d2\u5165\uff0c\u5b58\u50a8\u6bcf\u4e00\u4e2a\u7248\u672c\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\uff0c\u753b\u4e86\u51e0\u5f20\u8349\u56fe\uff08~~\u8bf7\u5404\u4f4d\u5927\u4f6c\u539f\u8c05\u6211\u7684\u7ed8\u753b\u6280\u672f~~\uff09\n![\u63d2\u5165\"cab\"](https://cdn.luogu.com.cn/upload/image_hosting/35dhjp8q.png)\n\u63d2\u5165 \"cab\" \u65f6\uff0c\u7531\u4e8e\u539f\u6811\u4e3a\u7a7a\uff0c\u6240\u4ee5\u76f4\u63a5\u63d2\u5165\u3002\n![\u63d2\u5165\"fry\"](https://cdn.luogu.com.cn/upload/image_hosting/yw2fqivx.png)\n\u63d2\u5165 \"fry\" \u65f6\uff0c\u7531\u4e8e\u8981\u5efa\u7684\u7a7a\u8282\u70b9\u548c\u4e0a\u4e00\u7248\u672c\u4e00\u6837\uff0c\u6240\u4ee5\u5efa\u8282\u70b9\u65f6\uff0c\u8981\u5c06\u4e0a\u4e00\u7248\u672c\u7684\u7a7a\u8282\u70b9\u4fe1\u606f\uff08\u539f\u5148\u6307\u5411'c'\uff09\u590d\u5236\u4e00\u904d\uff0c\u540c\u65f6\u5efa\u4e00\u6761\u65b0\u7684\u8fb9\u7559\u7ed9\u4e0b\u4e00\u4e2a\u70b9'f'\uff0c\u5176\u4f59\u76f4\u63a5\u63d2\u5165\u3002\n![\u63d2\u5165\"rat\"](https://cdn.luogu.com.cn/upload/image_hosting/uoep6jug.png)\n\u63d2\u5165 \"rat\" \u65f6\uff0c\u8fd8\u662f\u5c06\u4e0a\u4e00\u7a7a\u8282\u70b9\u7684\u4fe1\u606f\u590d\u5236\u4e00\u904d\uff0c\u540c\u65f6\u5efa\u4e00\u6761\u65b0\u7684\u8fb9\u6307\u5411'r'\uff0c\u5176\u4f59\u76f4\u63a5\u63d2\u5165\u3002\n![\u63d2\u5165\"cat\"](https://cdn.luogu.com.cn/upload/image_hosting/qvxpo1vu.png)\n\u63d2\u5165 \"cat\" \u65f6\uff0c\u7a7a\u8282\u70b9\u8fd8\u662f\u590d\u5236\u4e00\u904d\uff08\u6307\u5411'c' 'f' 'r'\uff09\uff0c\u7136\u800c 'c' \u662f\u91cd\u590d\u7684\u8282\u70b9\uff0c\u6240\u4ee5\u518d\u6b21\u590d\u5236\uff08\u6307\u5411'a'\uff09\uff0c\u4e0b\u4e00\u4e2a\u70b9 'a' \u8fd8\u662f\u91cd\u590d\u8282\u70b9\uff0c\u6240\u4ee5\u518d\u6b21\u590d\u5236\u4fe1\u606f\uff08\u6307\u5411'b'\uff09\uff0c\u7136\u540e\u5efa\u4e00\u6761\u65b0\u7684\u8fb9\u6307\u5411 't'\u3002\n\n\u5206\u6790\u5b8c\u6210\u540e\uff0c\u8fdb\u884c\u62bd\u8c61\uff1a\n\n1. \u82e5\u4e24\u8282\u70b9\u76f8\u540c\uff0c\u5219\u590d\u5236\u4e00\u904d\u4fe1\u606f\u3002\n1. \u5efa\u4e00\u6761\u8fb9\u7559\u7ed9\u4e0b\u4e00\u4f4d\u3002\n\n\u4e8e\u662f\u95ee\u9898\u89e3\u51b3\u4e86\u3002\n\n### 3.\u7f16\u5199\u4e0e\u6784\u601d\u8fc7\u7a0b\n\n\u8bb0\u5f55\u4e00\u4e2a ```max_size[i]``` \u8868\u793a i \u53f7\u8282\u70b9\u7684\u6700\u65b0\u7f16\u53f7\uff0c\u8bb0\u5f55 ```S[i]``` \u6765\u8868\u793a 1~i \u7684\u524d\u7f00\u548c\uff0c```tr[i][0]``` \u8868\u793a i \u53f7\u8282\u70b9\u5230\u503c\u4e3a0\u7684\u8282\u70b9\u5728 Trie\u4e2d\u7684\u7f16\u53f7\uff0c```tr[i][1]``` \u8868\u793a i \u53f7\u8282\u70b9\u5230\u503c\u4e3a1\u7684\u8282\u70b9\u5728 Trie\u4e2d\u7684\u7f16\u53f7\uff0c```root[i]``` \u8868\u793a Trie \u6811\u7684\u7b2c i \u4e2a\u7248\u672c\u7684\u6839\u8282\u70b9\u3002\n\n1. \u63d2\u5165\n\n\u63d2\u5165\u7684\u65f6\u5019\uff0c\u7531\u4e8e\u662f\u53ef\u6301\u4e45\u5316 Trie\uff0c\u6240\u4ee5\u5fc5\u987b\u5f97\u4f20\u5165\u4e24\u4e2a\u6839\u8282\u70b9\uff08\u4e00\u4e2a\u662f\u4e0a\u4e00\u4e2a\u7248\u672c\u7684root,\u53e6\u4e00\u4e2a\u662f\u65b0\u7248\u672c\u7684root\uff09\uff0c\u7531\u4e8e\u8981\u5199\u9012\u5f52\uff08~~\u6211\u7528\u9012\u5f52\u5199\u7684~~\uff09\uff0c\u6240\u4ee5\u8981\u4f20\u5165\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u8bb0\u5f55\u5df2\u7ecf\u67e5\u5230\u4e86\u7b2c\u51e0\u4f4d\uff08\u7531\u4e8e\u8981\u5148\u53d6\u9ad8\u4f4d\uff0c\u6240\u4ee5\u8ba1\u6570\u5668\u5e94\u8be5\u4e00\u76f4\u9012\u51cf\uff09\u3002\n\n\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u53c2\u6570\u662fi\uff0c\u7528\u4e8e\u8bb0\u5f55\u63d2\u5165\u65f6\u7684\u7f16\u53f7\uff08\u5f02\u6216\u524d\u7f00\u548cS\u7684\u4e0b\u6807\uff09\uff0c\u56e0\u4e3a\u5de6\u8fb9\u754c ```l-1``` \u4e5f\u5f97\u5904\u7406\u3002\n```cpp\ninline void insert(int i,int k,int p,int q){\n    if(k<0){ //k<0 \u8bf4\u660e\u5df2\u5230\u8fbe\u8fb9\u754c\uff0c\u76f4\u63a5\u66f4\u65b0max_id[q]\u5373\u53ef\n        max_id[q]=i;\n        return;\n    }\n    register int v=s[i] >> k & 1;\n    if(p)tr[q][v ^ 1]=tr[p][v ^ 1]; //\u8fd9\u884c\u8868\u793a\u590d\u5236\u539f\u6765\u8282\u70b9\u7684\u4fe1\u606f\uff0cp\u4e0d\u53ef\u4e3a0\u662f\u56e0\u4e3a0\u53f7\u8282\u70b9\u8868\u793a\u4e0d\u5b58\u5728\n    tr[q][v]=++idx; //\u521b\u5efa\u65b0\u8282\u70b9\n    insert(i,k-1,tr[p][v],tr[q][v]); //\u4e24\u4e2a\u7248\u672c\u5168\u90e8\u79fb\u5230\u4e0b\u4e00\u4f4d\u5728\u4f5c\u8ba1\u7b97\n    max_id[q]=i; //\u8981\u6700\u65b0\u7f16\u53f7\u5f53\u7136\u662fi\u5566\n}\n```\n2. \u67e5\u8be2\n\n~~\u67e5\u8be2\u524d\u9762\u8bf4\u8fc7\u4e86~~\n\n\u8fd9\u4e2a\u51fd\u6570\u4f20\u51653\u4e2a\u53c2\u6570\uff0croot\u8868\u793a\u8981\u67e5\u8be2\u7248\u672c\u7684\u6839\u8282\u70b9\u7f16\u53f7\uff0cL\u8868\u793a\u5de6\u8fb9\u754c\u9650\u5236\uff0cC\u8868\u793a\u5f85\u5339\u914d\u7684\u6570\u3002\n```cpp\ninline int query(int root,int C,int L){\n    register int p=root;\n    for(register int i=23;i>=0;i--){\n        register int v=C >> i & 1;\n        if(max_id[tr[p][v ^ 1]]>=L)p=tr[p][v ^ 1];\n        else p=tr[p][v]; //\u8d2a\u5fc3\u601d\u60f3\uff0c\u4e0d\u77e5\u9053\u7684\u8bdd\u7ffb\u4e00\u4e0b\u6700\u5927\u5f02\u6216\u5bf9\n    }\n    return C ^ s[max_id[p]];\n}\n```\n### 4.\u4e0a\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int N=6e5+10,M=25*N;\nint n,m;\nint s[N];\nint max_id[M],tr[M][2];\nint root[N],idx;\ninline int read(){\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){\n        if(ch=='-')f=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9'){\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\ninline void write(int n){\n    if(n<0){\n        putchar('-');\n        n=-n;\n    } \n    if(n>9)write(n/10);\n    putchar(char(n%10+'0'));\n}\ninline void insert(int i,int k,int p,int q){\n    if(k<0){\n        max_id[q]=i;\n        return;\n    }\n    register int v=s[i] >> k & 1;\n    if(p)tr[q][v ^ 1]=tr[p][v ^ 1];\n    tr[q][v]=++idx;\n    insert(i,k-1,tr[p][v],tr[q][v]);\n    max_id[q]=i;\n}\ninline int query(int root,int C,int L){\n    register int p=root;\n    for(register int i=23;i>=0;i--){\n        register int v=C >> i & 1;\n        if(max_id[tr[p][v ^ 1]]>=L)p=tr[p][v ^ 1];\n        else p=tr[p][v];\n    }\n    return C ^ s[max_id[p]];\n}\nint main(){\n    int x,l,r;\n    char op;\n    n=read(),m=read();\n    max_id[0]=-1; //\u521d\u59cb\u503c\uff1a-1\n    root[0]=++idx; //\u5efa\u9020\u65b0\u7684\u6839\u8282\u70b9\n    insert(0,23,0,root[0]);//\u6700\u521d\u7248\u672c\n    for(register int i=1;i<=n;i++){\n        x=read();\n        s[i]=s[i-1]^x; //\u524d\u7f00\u548c\u66f4\u65b0\n        root[i]=++idx; //\u5efa\u9020\u65b0\u7684\u6839\u8282\u70b9\n        insert(i,23,root[i-1],root[i]); //\u521b\u5efa\u65b0\u7684\u7248\u672c\n    }\n    while(m--){\n        op=getchar();\n        if(op=='A'){\n            x=read();\n            n++;\n            s[n]=s[n-1]^x;\n            root[n]=++idx;\n            insert(n,23,root[n-1],root[n]);\n        }else{\n            l=read(),r=read(),x=read();\n            write(query(root[r-1],s[n]^x,l-1));\n            putchar('\\n');\n        }\n    }\n    return 0;\n}\n```\n\u7531\u4e8e\u6b64\u9898\u5361\u5e38\u6570\u5361\u7684\u7d27\uff08~~\u653e\u5bbd\u4e86\u65f6\u9650\u8fd8\u4f1a\u8d85\u65f6~~\uff09\uff0c\u6240\u4ee5\u5efa\u8bae\u7528\u5feb\u8bfb\u5feb\u8f93\uff0c~~\u53e6\u5916 register \u548c inline \u80fd\u52a0\u7684\u90fd\u52a0\u4e0a~~\u3002",
        "postTime": 1589210155,
        "uid": 167369,
        "name": "Eric2007_2_20",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4735 \u3010\u6700\u5927\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "\u4fee\u6539\u64cd\u4f5c\u65e0\u9700\u591a\u8bf4\uff0c\u770b\u4ee3\u7801\u5185\u6ce8\u91ca\u5373\u53ef\uff0c\u4e3b\u8981\u8bb2\u4e00\u8bb2\u67e5\u8be2\u64cd\u4f5c\u3002\n\n\u9898\u76ee\u8981\u6c42\u627e\u51fa\u4e00\u4e2a $p$ \u6ee1\u8db3$L \\leqslant p \\leqslant R$\n\n\u5e76\u4e14\u4f7f\u5f97 $a[p] \\oplus a[p+1] \\oplus a[p+2] .....\\oplus a[N] \\oplus x$ \u6700\u5927\u3002\n\n\u5176\u4e2d $a[p] \\oplus a[p+1] \\oplus a[p+2] .....\\oplus a[N] \\oplus x$\n\n\u53ef\u4ee5\u5316\u6210 $x \\oplus sum[N] \\oplus a[p-1]$ \n\n\u5176\u4e2d $sum$ \u6570\u7ec4\u4e3a\u5f02\u6216\u524d\u7f00\u548c\u6570\u7ec4\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u8f7b\u677e\u5730\u89e3\u51b3 $p \\leqslant R - 1$ \u7684\u53f3\u8fb9\u754c\u95ee\u9898\uff0c\u53ea\u9700\u8981\u5728 $R-1$ \u7248\u672c\u4e2d\u7684 Trie \u6811\u4e2d\u67e5\u627e\u6700\u5927\u7b54\u6848\u5373\u53ef\u3002\n\n\u90a3\u4e48\u5982\u4f55\u89e3\u51b3\u5de6\u8fb9\u754c\u95ee\u9898\u5462\uff1f\u8fd9\u65f6\u6211\u4eec\u5c31\u9700\u8981\u4e00\u4e2a $last$ \u6570\u7ec4\uff0c\u5176\u4e2d\u8bb0\u5f55\u7684\u662f\u5f53\u524d\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u6700\u5927\u7684\u4e0b\u6807\uff0c\u5728\u67e5\u8be2\u65f6\u53ea\u67e5\u8be2\u5b50\u6811\u4e2d\u6700\u5927\u7684\u4e0b\u6807\u5927\u4e8e\u7b49\u4e8e $L - 1$ \u7684\u5b50\u6811\u5373\u53ef\u3002\n\n\u90a3\u4e48\u4ee3\u7801\u5b9e\u73b0\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u5982\u679c\u8fd8\u6709\u4e0d\u61c2\u7684\u8bf7\u770b\u4ee3\u7801\u6ce8\u91ca\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int N = 6e5 + 5;\nconst int M = N * 25;\nint n, m;\nint last[M];\nint Tree[M][2];\nint root[N];\nint tot = 0;\nint sum[N];\nvoid insert(int pre,int now,int i,int k)\n{\n    if(k<0)\n    {\n        last[now] = i;//\u4fee\u6539\u5b8c\u6240\u6709\u4f4d\u6570\u4e4b\u540e\u8bb0\u5f55\u5f53\u524d\u6700\u5927\u4e0b\u6807\n        return;\n    }\n    int to = sum[i] >> k & 1;\n    if(pre)\n        Tree[now][to ^ 1] = Tree[pre][to ^ 1];//\u53e6\u5916\u4e00\u8fb9\u7684\u5b50\u6811\u76f4\u63a5\u7ee7\u627f\u5373\u53ef\n    Tree[now][to] = ++tot;\n    insert(Tree[pre][to], Tree[now][to], i, k - 1);\n    last[now] = max(last[Tree[now][0]], last[Tree[now][1]]);\u5411\u4e0a\u4f20\u9012\u5b50\u6811\u4e2d\u6700\u5927\u4e0b\u6807\n}\nint query(int now,int x,int l)\n{\n    int p = now;\n    for (int i = 23; i >= 0;i--)\n    {\n        int to = x >> i & 1;\n        if(last[Tree[p][to^1]]>=l)//\u53ea\u9700\u8981\u67e5\u8be2\u6700\u5927\u7684\u4e0b\u6807\u5927\u4e8e\u7b49\u4e8eL-1\u7684\u5b50\u6811\n            p = Tree[p][to ^ 1];\n        else\n            p = Tree[p][to];\n    }\n    return x ^ sum[last[p]];//\u53f6\u5b50\u7ed3\u70b9\u4e2dlast\u5b58\u7684\u5373\u662f\u81ea\u5df1\u7684\u4e0b\u6807\u503c\n}\nint main()\n{\n    scanf(\"%d%d\", &n, &m);\n    root[0] = ++tot;\n    last[0] = -1;\n    insert(0, root[0], 23, 0);\n    for (int i = 1; i <= n;i++)\n    {\n        int x;\n        scanf(\"%d\", &x);\n        sum[i] = sum[i - 1] ^ x;\n        root[i] = ++tot;\n        insert(root[i - 1], root[i], i, 23);\n    }\n    char op[2];\n    int l, r, x;\n    for (int i = 1; i <= m;i++)\n    {\n        scanf(\"%s\", op);\n        if(*op=='A')\n        {\n            scanf(\"%d\", &x);\n            n++;\n            sum[n] = sum[n - 1] ^ x;\n            root[n] = ++tot;\n            insert(root[n - 1], root[n], n, 23);\n        }\n        else \n        {\n            scanf(\"%d%d%d\", &l, &r, &x);\n            printf(\"%d\\n\", query(root[r - 1], sum[n] ^ x, l - 1));\n        }\n    }\n}\n```\n",
        "postTime": 1614518313,
        "uid": 278481,
        "name": "Link_Space",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 OF \u6700\u5927\u5f02\u6216\u548c\uff08\u53ef\u6301\u7eed\u5316Trie\uff09"
    },
    {
        "content": "# \u53ef\u6301\u4e45\u531601trie\n\n\u8bbe$s_n=a_1\\oplus a_2\\oplus a_3\\oplus ...\\oplus a_n$,\u5bf9\u4e8e\u9898\u4e2d\u6240\u7ed9\u7684\u5bf9\u4e00\u6bb5\u533a\u95f4\u7684\u8be2\u95ee\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a\u524d\u7f00\u5f02\u6216\uff0c\u5373$a_p\\oplus a_{p+1}\\oplus a_{p+2}\\oplus ...\\oplus a_n\\oplus x=s_{p-1}\\oplus s_n\\oplus x$\u3002\u8fd9\u6837\uff0c\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u5728\u7ed9\u5b9a\u7684\u533a\u95f4$[L,R]$\u4e2d\uff0c\u6c42\u51fa\u4e0e$s_n\\oplus x$\u5f02\u6216\u7684\u7b54\u6848\u6700\u5927\u7684\u6570\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5efa$n$\u68f501trie,\u7b2c$i$\u68f5\u4ee3\u8868\u533a\u95f4$[1,i]$\u7684\u503c,\u5e76\u5728\u6bcf\u4e2a\u8282\u70b9\u5b58\u50a8\u6570\u5b57\u4e2a\u6570,\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u6211\u4eec\u53ea\u9700\u5c06\u4e24\u9897\u6811\u76f8\u51cf\u5c31\u5f97\u5230\u4e86\u5f53\u524d\u533a\u95f4\u7684\u4fe1\u606f\u3002\u572801trie\u4e0a\uff0c\u6211\u4eec\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u8d2a\u5fc3\uff0c\u5047\u8bbe$x$\u6700\u9ad8\u4f4d\u4e3a1\uff0c\u5982\u679c\u5f53\u524d\u533a\u95f4\u7531\u6700\u9ad8\u4e3a0\u7684\u6570\uff0c\u5219\u4e00\u5b9a\u8981\u9009\uff0c\u5426\u5219\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u53ef\u80fd\u6bd4\u4ed6\u66f4\u4f18\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u7531\u9ad8\u5230\u4f4e\u4f9d\u6b21\u786e\u5b9a\u6bcf\u4e00\u4f4d\u7684\u503c\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nconst int maxn=3e7+10;\nint n,m,k;\nint a[maxn],sum[maxn];\nstruct tire{\n\tint size,son[2];\n}tree[maxn];\nint root[maxn];\nint build(int x)\n{\n\tint now=++k;\n\ttree[now].size=1;\n\tif(x==0)return now;\n\ttree[now].son[0]=build(x-1);\n\treturn now;\t\n}\nint update(int pre,int x,int pos)\n{\n\tint now=++k;\n\tif(pos==0){\n\t\ttree[now].size=tree[pre].size+1;\n\t\treturn now;\n\t}\n\ttree[now]=tree[pre];\n\ttree[now].son[1&(x>>(pos-1))]=update(tree[pre].son[1&(x>>(pos-1))],x,pos-1);\n\ttree[now].size=tree[tree[now].son[0]].size+tree[tree[now].son[1]].size;\n\treturn now;\n}\nint query(int pre,int now,int x,int pos)\n{\n\tif(!pos)return 0;\n\treturn (tree[tree[now].son[1^(1&(x>>(pos-1)))]].size-tree[tree[pre].son[1^(1&(x>>(pos-1)))]].size)?\n\t\t\tquery(tree[pre].son[1^(1&(x>>(pos-1)))],tree[now].son[1^(1&(x>>(pos-1)))],x,pos-1)+(1<<(pos-1)):\n\t\t\tquery(tree[pre].son[1&(x>>(pos-1))],tree[now].son[1&(x>>(pos-1))],x,pos-1);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]),\n\t\tsum[i]=sum[i-1]^a[i];\n\troot[0]=++k;\n\tfor(int i=0;i<=n;i++)\n\t\troot[i+1]=update(root[i],sum[i],25);\n\tfor(int i=1,l,r,x;i<=m;i++){\n\t\tchar opt;\n\t\tscanf(\"\\n%c\",&opt);\n\t\tif(opt=='A')scanf(\"%d\",&x),sum[n+1]=sum[n]^x,root[n+2]=update(root[n+1],sum[n+1],25),n++;\n\t\telse{\n\t\t\tscanf(\"%d%d%d\",&l,&r,&x);\n\t\t\tprintf(\"%d\\n\",query(root[l-1],root[r],x^sum[n],25));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1602143210,
        "uid": 231120,
        "name": "YinyuDream",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4735 \u3010\u6700\u5927\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "\u53ef\u6301\u4e45\u5316Trie\u677f\u5b50\u9898\n\n\u5982\u679c\u4f60\u4f1a\u4e3b\u5e2d\u6811\u7684\u8bdd\uff0c\u6211\u6709\u81ea\u4fe1\u51e0\u53e5\u8bdd\u5c31\u8bb2\u6e05\u695a\u8fd9\u4e2a\u7b97\u6cd5\n\n\u5982\u679c\u4f60\u4e0d\u4f1a\u7684\u8bdd\uff0c\u8fd8\u662f\u53bb\u5b66\u5b66\u4e3b\u5e2d\u6811\u5427\u3002\n\n\u4f60\u80af\u5b9a\u662f\u4f1a01trie\u7684\uff0c\u4f46\u662f01trie\u52a0\u8fdb\u53bb\u5c31\u65e0\u5e8f\u4e86\uff0c\u60f3\u60f3\u4e3b\u5e2d\u6811\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e00\u6b21\u52a0\u6570\u90fd\u65b0\u5efa\u4e00\u6761\u94fe\uff0c\u90a3\u6837\u5c31\u76f8\u5f53\u4e8e\u53c8\u5efa\u4e86\u4e00\u68f501trie\uff0cn\u4e2a\u6570\u5c31\u4f1a\u51fa\u73b0n\u4e2a01trie\uff0c\u7136\u540e\u4f60\u6709\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\uff0c\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u70b9\u7684sum\u503c\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u4e3b\u5e2d\u6811\u57fa\u64cd\u4e86\u3002\n\nwarning:\u8fd9\u9898\u5361\u5e38\uff0c\u6211\u5f00O2\n\n```cpp\n#include<bits/stdc++.h> \n#define Re register\n#define fo(i, a, b) for (Re int i = (a); i <= (b); ++i)\n#define fd(i, a, b) for (Re int i = (a); i >= (b); --i)\n#define edge(i, u) for (Re int i = head[u], v = e[i].v; i; i = e[i].nxt, v = e[i].v)\n#define pb push_back\n#define F first\n#define S second\n#define ll long long\n#define inf 10000000000007\n#define mp std::make_pair\n#define lowbit(x) (x & -x)\n#define mod 19260817\n#define eps 1e-4\n#define itset std::set<node>::iterator\n#define lb lower_bound\n#define N 18000005\n#define ls (k << 1)\n#define rs (k << 1 | 1)\nchar ch;\nint b[N], rt[N], t[N][2], sum[N];\nint n, m, s, x, cnt, l, r;\ninline void split (int x)\n{\n    fo (i, 0, 24)\n    {\n        if (x & 1) b[i] = 1; else b[i] = 0;\n        x >>= 1;\n    }\n}\ninline void update (int &now, int pk)\n{\n    now = ++cnt;\n    int k = now;\n    sum[k] = sum[pk] + 1;\n    fd (i, 24, 0)\n    {\n        t[k][b[i]] = ++cnt;\n        t[k][b[i] ^ 1] = t[pk][b[i] ^ 1];\n        k = t[k][b[i]]; pk = t[pk][b[i]];\n        sum[k] = sum[pk] + 1;\n    }\n}\ninline int query (int pk, int k)\n{\n    int ret = 0;\n    fd (i, 24, 0)\n    {\n        ret <<= 1;\n        if (sum[t[k][b[i] ^ 1]] - sum[t[pk][b[i] ^ 1]] > 0)\n        {\n            ret |= 1;\n            k = t[k][b[i] ^ 1]; pk = t[pk][b[i] ^ 1];\n        }\n        else\n        {\n            k = t[k][b[i]]; pk = t[pk][b[i]];\n        }\n    }\n    return ret;\n}\nint main ()\n{\n    scanf(\"%d %d\", &n, &m);\n    ++n;\n    update(rt[1], rt[0]);\n    fo (i, 2, n)\n    {\n        scanf(\"%d\", &x);\n        s ^= x;\n        split(s);\n        update(rt[i], rt[i - 1]);\n    }\n    fo (i, 1, m)\n    {\n        ch = getchar(); while (ch != 'A' && ch != 'Q') ch = getchar();\n        if (ch == 'A')\n        {\n            ++n;\n            scanf(\"%d\", &x); s ^= x;\n            split(s);\n            update(rt[n], rt[n - 1]);\n        }\n        else\n        {\n            scanf(\"%d %d %d\", &l, &r, &x);\n            split(s ^ x);\n            printf(\"%d\\n\", query(rt[l - 1], rt[r]));\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1542377197,
        "uid": 13137,
        "name": "HomuraCat",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4735 \u3010\u6700\u5927\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "\u7a7f\u7740\u8863\u670d\u7684\u53ef\u6301\u4e45\u5316Trie\u6811\n\n\u9996\u5148\u53ef\u4ee5\u5c06\u539f\u95ee\u9898\u8f6c\u5316\u6c42\u89e3\u533a\u95f4\u5185s[p - 1] ^ s[N] ^ x\u7684\u6700\u5927\u503c\n\n\u5176\u4e2ds\u662f\u524d\u7f00\u5f02\u6216\u503c\n\n\u90a3\u4e48\uff0c\u663e\u7136\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ees[N]^val\u7684\u503c\u662f\u4e00\u5b9a\u7684\uff0c\u90a3\u4e48\u4e5f\u5c31\u662f\u7528x\u5f02\u6216\u533a\u95f4\u5185\u67d0\u4e2a\u503c\u7684\u6700\u5927\u503c\n\n\u6709\u4e00\u4e2a\u795e\u5947\u7684\u505a\u6cd5\u53eb\u505a\u53ef\u6301\u4e45\u5316Trie\u6811\n```\n#include <bits/stdc++.h>\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#define res register int\n#define N 15000005\nusing namespace std;\nint n,m,base[32];\nchar op[5];\ninline int read()\n{\n  int X=0,w=0;\n  char ch=0;\n  while(!isdigit(ch))\n  {\n    w|=ch=='-';\n    ch=getchar();\n  }\n  while(isdigit(ch)) X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n  return w?-X:X;\n}\nstruct Trie_con\n{\n  int root[N],son[N][2],tot,rtn,sum[N];\n  inline void add(res x)\n  {\n    root[++rtn]=tot+1;\n    res last=root[rtn-1];\n    for(res i=23; ~i; i--)\n    {\n      sum[++tot]=sum[last]+1;\n      bool b=x&base[i];\n      son[tot][b]=tot+1,son[tot][!b]=son[last][!b];\n      last=son[last][b];\n    }\n    sum[++tot]=sum[last]+1;\n  }\n  inline int query(res lt,res rt,res x)\n  {\n    if(lt>rt) return 0;\n    lt=root[lt-1];\n    rt=root[rt];\n    res ans=0;\n    for(res i=23; ~i; i--)\n    {\n      bool b=x&base[i];\n      if(sum[son[rt][!b]]-sum[son[lt][!b]])\n        ans+=base[i],lt=son[lt][!b],rt=son[rt][!b];\n      else\n        lt=son[lt][b],rt=son[rt][b];\n    }\n    return ans;\n  }\n} T;\nint main()\n{\n  n=read(),m=read();\n  res now=0;\n  base[0]=1;\n  for(res i=1; i<=23; i++)\n    base[i]=base[i-1]<<1;\n  T.add(0);\n  for(res i=1; i<=n; i++)\n  {\n    res x=read();\n    T.add(now^=x);\n  }\n  for(res i=1; i<=m; i++)\n  {\n    scanf(\"%s\",op);\n    if(op[0]=='A')\n    {\n      res x=read();\n      T.add(now^=x);\n    }\n    else\n    {\n      res L=read(),R=read(),x=read();\n      printf(\"%d\\n\",T.query(L,R,now^x));\n    }\n  }\n  return 0;\n}\n```",
        "postTime": 1535013271,
        "uid": 26848,
        "name": "miaokehao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4735 \u3010\u6700\u5927\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u524d\u7f00\u5f02\u6216\u548c:$s[i] = a[1] \\ xor\\  a[2]\\ xor\\  \u2026 a[i-1] \\ xor\\  a[i]$\n\n\u5219$a[p]\\ xor\\ a[p+1]\\ xor\\ \u2026\\ xor\\ a[N]\\ xor\\ x$ \u5c31\u76f8\u5f53\u4e8e $s[N] \\ xor\\  x\\ xor\\ s[p-1]$\u3002\n\n\u8fd9\u6837$S[N] \\ xor\\  x$\u5c31\u662f\u4e00\u4e2a\u5b9a\u503c$val$\uff0c\u5219\u76f8\u5f53\u4e8e\u6c42\u4e00\u4e2a $p$ \u6ee1\u8db3$l-1 <= p-1 <= r-1$ \u4f7f\u5f97 $val \\ xor\\  s[p]$ \u503c\u6700\u5927\u3002\n\n\u56e0\u4e3a\u662f\u5f02\u6216\u8fd0\u7b97\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528 \u201c\u6700\u5927\u5f02\u6216\u5bf9\u201d \u8fd9\u9053\u9898\u7684\u4e00\u4e9b\u6027\u8d28\uff0c\u4f7f\u7528 $trie$ \u6811\u3002\u6211\u4eec\u7ef4\u62a4\u524d\u7f00\u5f02\u6216\u548c\uff0c\u627e\u5230\u4e00\u4e2a $p$ \uff0c\u8d2a\u5fc3\u5730\u4f7f\u5f97$s[p]$\u7684\u4e8c\u8fdb\u5236\u6700\u9ad8\u4f4d\u5f00\u59cb\u5230\u6700\u4f4e\u4f4d\u7684\u6bcf\u4e00\u4e2a\u6570\u5b57\u90fd\u5c3d\u91cf\u4e0e $val$ \u7684\u4e8c\u8fdb\u5236\u5bf9\u5e94\u4f4d\u76f8\u53cd\uff08\u76f8\u540c\u4e3a0\u4e0d\u540c\u4e3a1\uff09\n\u524d\u7f00\u5f02\u6216\u548c\u7684\u6bcf\u4e2a\u7248\u672c\u90fd\u53ef\u4ee5\u7528\u6301\u4e45\u5316\u7684 $trie$ \u8bb0\u5f55\u4e0b\u6765\u3002\n\u5bf9\u6301\u4e45\u5316 $trie$ \u7684\u6bcf\u4e2a\u8282\u70b9\u989d\u5916\u7ef4\u62a4\u4e00\u4e2a\u4fe1\u606f $max\\_id$ \uff0c\u8868\u793a\u5176\u6240\u5c5e\u7684\u6700\u5927\u7684\u6301\u4e45\u5316\u7248\u672c\uff0c\u663e\u7136\u4e00\u4e2a\u8282\u70b9\u7684 $max\\_id$ \u7b49\u4e8e\u5176\u5b50\u8282\u70b9\u4e2d\u6700\u5927\u7684\u7248\u672c\u53f7\uff08\u56e0\u4e3a\u5b50\u8282\u70b9\u8981\u4e48\u662f\u8fde\u5411\u4e4b\u524d\u7684\u7248\u672c\uff0c\u8981\u4e48\u521b\u5efa\u4e86\u8be5\u8282\u70b9\u540e\u518d\u521b\u5efa\u5b50\u8282\u70b9\uff09\u3002 \n\n- \u8fb9\u754c$[l-1, r-1]$ \u5224\u65ad\uff1a\n\n\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684 $max\\_id$  \u5c0f\u4e8e $l-1$ \uff0c\u8bf4\u660e\u8fd9\u4e2a\u8282\u70b9\u662f $s[l-1]$ \u63d2\u5165\u4e4b\u524d\u5c31\u5df2\u7ecf\u521b\u5efa\u51fa\u6765\u7684\u8282\u70b9\uff0c\u4e0d\u5e94\u8be5\u8003\u8651\u5728\u5185\u3002\n\n\u5bf9\u6301\u4e45\u5316\u6811\u7684\u67d0\u4e00\u4e2a\u7248\u672c\u7684\u6839\u8282\u70b9\u5f00\u59cb\u5f80\u4e0b\u8bbf\u95ee\uff0c\u6240\u80fd\u8bbf\u95ee\u5230\u7684\u8282\u70b9\u7684\u7248\u672c\u4e0d\u4f1a\u8d85\u8fc7\u8be5\u6839\u8282\u70b9\u7684\u7248\u672c,\u6240\u4ee5\u8be5\u9898\u53ea\u9700\u8981\u4ece $r-1$ \u7248\u672c\u5f00\u59cb\u8bbf\u95ee\u5373\u53ef\u6ee1\u8db3\u53d6\u5230\u7684 $p$ \u5c0f\u4e8e\u7b49\u4e8e $r-1$\u3002\n\n```cpp\n//trie\u6811\u7ef4\u62a4\u7684\u662f\u524d\u7f00\u5f02\u6216\u548c\u7684\u4e8c\u8fdb\u523601\u4e32\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nusing namespace std;\ntypedef long long ll;\nconst int N = 500007, M = N * 25;\n/*\ntemplate<typename T>inline T read(T &x)\n{\n    x=0;ll f=1;char c;\n    while(!isdigit(c=getchar()))if(c=='-')f=-1;\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    return x*f;\n}\n*/\nint n, m;\nint sum[N];\nint tr[M][2], max_id[M];\nint root[N], idx;\n//\u5f53\u524d\u7684\u533a\u95f4\u4f4d\u7f6e\uff08\u5230\u65f6\u5019[L,R]\u5bf9\u6bd4\u7684\u5c31\u662f\u8fd9\u91cc\u7684i\uff09k\u8868\u793a\u5f53\u524d\u662f\u7b2c\u51e0\u4f4d\uff0c\u4e00\u517123\u4f4d2^23\uff0c\u8d8a\u9ad8\u8d8a\u5927\nvoid insert(int i, int k, int p, int q){//p\u4e0a\u4e00\u4e2a\u7248\u672cq\u4e0b\u4e00\u4e2a\u7248\u672c\n    if(k < 0){\n        max_id[q] = i;\n        return ;\n    }\n    int v = sum[i] >> k & 1;\n    if(p)//\u5982\u679c\u4e0a\u4e2a\u7248\u672c\u7684\u5f53\u524d\u7ed3\u70b9\u662f\u6709\u4e1c\u897f\u7684\u5c31\u7ee7\u627f\u4e00\u4e0b\n        tr[q][v ^ 1] = tr[p][v ^ 1];\n    tr[q][v] = ++ idx;\n    insert(i, k - 1, tr[p][v], tr[q][v]);\n    max_id[q] = max(max_id[tr[q][0]], max_id[tr[q][1]]);\n}\n\nint query(int root, int C, int L){\n    int p = root;\n    for(int i = 23;i >= 0;i -- ){\n        int v = C >> i & 1;\n        //\u5982\u679c\u7248\u672c\u5c0f\u4e8eL-1\uff0c\u8bf4\u660e\u8fd9\u4e2a\u8282\u70b9\u662fs[l-1]\u63d2\u5165\u4e4b\u524d\u5c31\u5df2\u7ecf\u521b\u5efa\u51fa\u6765\u7684\u8282\u70b9\uff0c\u4e0d\u5e94\u8be5\u8003\u8651\u5728\u5185\n        if(max_id[tr[p][v ^ 1]] >= L)//\u5982\u679c\u4e0e\u5f53\u524d\u8fd9\u4e00\u4f4d\u76f8\u53cd\u7684\u6570\u5b58\u5728\u5e76\u4e14\u8be5\u6570\u7684\u4f4d\u7f6e\u5728\u8303\u56f4\u4ee5\u5185\uff08\u6c42\u5f02\u6216\u76f8\u53cd\u4e3a1\u66f4\u5927\uff09\n            p = tr[p][v ^ 1];\n        else p = tr[p][v];\n    }\n    return C ^ sum[max_id[p]];\n}\n\nint main(){\n    scanf(\"%d%d\", &n, &m);\n    max_id[0] = -1;//\u56e0\u4e3aid\u4ece0\u5f00\u59cb\u8fd9\u91cc\u8981\u53d6\u4e00\u4e2a\u66f4\u5c0f\u7684\n    root[0] = ++ idx;\n    insert(0, 23, 0, root[0]);\n\n    for(int i = 1;i <= n; ++ i){\n        int x;\n        scanf(\"%d\", &x);\n        sum[i] = sum[i - 1] ^ x;//\u524d\u7f00\u5f02\u6216\u548c\n        root[i] = ++ idx;\n        insert(i, 23, root[i - 1], root[i]);//\u53ef\u6301\u4e45\u5316\u90fd\u662f\u8ddf\u4e0a\u4e00\u4e2a\u7248\u672c\u6bd4\u8f83\n\n    }\n    char op[2];\n\n    int l, r, x;\n    while(m -- ){\n        scanf(\"%s\", op);\n        if(*op == 'A'){\n            scanf(\"%d\", &x);\n            n ++ ;\n            sum[n] = sum[n - 1] ^ x;\n            root[n] = ++ idx;\n            insert(n, 23, root[n - 1], root[n]);\n        }\n        else {\n            scanf(\"%d%d%d\", &l, &r, &x);\n            //l<=p<=r,\u6240\u4ee5\u8981\u67e5\u8be2r-1\u7248\u672c\u7684\n            printf(\"%d\\n\", query(root[r - 1], sum[n] ^ x, l - 1));\n        }\n    }\n}\n\n```\n",
        "postTime": 1597243384,
        "uid": 262605,
        "name": "fanfansann",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4735 \u3010\u6700\u5927\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "\u5e0c\u671b\u66f4\u4e30\u5bcc\u7684\u5c55\u793a\uff0c\u8bf7\u79fb\u6b65[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/nth-element/p/11785037.html)\n\n***\n\n\u82e5\u60f3\u8981\u6df1\u5165\u5b66\u4e60\u53ef\u6301\u4e45\u53160-1Trie\u6811\uff0c[\u4f20\u9001\u95e8]( https://www.cnblogs.com/nth-element/p/11773667.html )\u3002\n\n***\n\n**Description**:\n\n\u7ed9\u5b9a\u6570\u5217 $\\{a_n\\}$ ,\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n- \u5728\u6570\u5217\u5c3e\u6dfb\u52a0\u4e00\u4e2a\u6570 $x$ \uff0c\u6570\u5217\u957f\u5ea6\u53d8\u6210 $n+1$ ;\n- \u7ed9\u5b9a\u95ed\u533a\u95f4 $[l,r]$ \u548c\u4e00\u4e2a\u6570 $x$ \uff0c\u6c42\uff1a\n\n$$\n\\max_{i=l}^{r}\\left \\{\\left(\\bigoplus_{j=i}^{n}a_j \\right)\\bigoplus x\\right \\}\n$$\n\n**Method**: \n\n\u5b9a\u4e49 $Xorsum_i$ \u4e3a $\\bigoplus_{i=1}^{n}a_i$ ,\u5373\u524d\u7f00\u5f02\u6216\u548c\u3002\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u5f97\u5230\n$$\n\\left(\\bigoplus_{i=pos}^{n}a_i\\right)\\bigoplus x=Xorsum_{pos-1}\\bigoplus Xorsum_n \\bigoplus x\n$$\n\n**\u6ce8**\uff1a$x\\bigoplus x=0$ , $x \\bigoplus 0=x$ \n\n\u6211\u4eec\u53d1\u73b0 $Xorsum_n\\bigoplus x$ \u662f\u4e00\u4e2a**\u5b9a\u503c**\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4 $Xorsum_{pos-1}$ \u5373\u53ef\u3002\n\n\u8003\u8651\u7528\u53ef\u6301\u4e45\u53160-1Trie\u6811\u7ef4\u62a4\u3002\u4e0e\u4e3b\u5e2d\u6811\u601d\u8def\u76f8\u540c \uff0c\u6211\u4eec\u5efa\u7acb $n+1$ \u4e2a\u7248\u672c\u76840-1Trie\u6811\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u8fd0\u7528\u8d2a\u5fc3\u7684\u601d\u8def\u5373\u53ef\u3002\n\n\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u540c\u6837\u652f\u6301\u201c**\u524d\u7f00\u548c**\u201d\u7684\u601d\u60f3\uff0c\u6211\u4eec\u6700\u540e\u53ea\u9700\u8981\u5728\u7b2c $r$ \u4e2a\u7248\u672c\u76840-1Trie\u6811\u4e0a\u67e5\u627e $l$ \u4f4d\u7f6e\u5373\u53ef\u3002\n\n\u672c\u9898\u6bd2\u7624\u5361\u5e38\uff0c\u672c\u4eba~~\u4eba\u4e11\u5e38\u6570\u5927~~\uff0c\u7528\u4e86`fread`\u7b49\u5404\u79cd\u5361\u5e38\u64cd\u4f5c\u624d\u901a\u8fc7\u3002\u5e76\u4e14\u7531\u4e8e~~luogu\u8bc4\u6d4b\u59ec\u7684\u539f\u56e0~~\uff08\u5927\u96fe\uff0c\u5df2\u7ecf\u901a\u8fc7\u7684\u4ee3\u7801\u53c8\u4f1aT\u6389~~woc~~\u3002\u5361\u4e0d\u8fc7\u7684\u8bdd\uff0c\u5f00`o2`\u5427\u3002\n\n**Code**:\n\n```CPP\n#include<bits/stdc++.h>\n#define Maxn 600010\n#define Maxdep 23\n#define getchar()(p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline void read(int &x)\n{\n    int f=1;x=0;char s=getchar();\n    while(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();}\n    while(s>='0'&&s<='9'){x=x*10+s-'0';s=getchar();}\n    x*=f;\n}\nint n,m;\nint sum[Maxn];\nstruct trie\n{\n    trie *chd[2];\n    int symbl;\n    trie()\n    {\n        for(int i=0;i<2;i++) chd[i]=NULL;\n        symbl=0;\n    }\n}*root[Maxn],tree[Maxn<<5],*tail;\nvoid Init(){tail=tree;} \nvoid build(trie *&p,int dep)\n{\n    p=new (tail++)trie();\n    if(dep<0) return ;\n    build(p->chd[0],dep-1);\n}\nvoid update(trie *&p,trie *flag,int dep,int i)\n{\n    p=new (tail++)trie();\n    if(flag) *p=*flag;\n    if(dep<0) return (void)(p->symbl=i);\n    int tmp=(sum[i]>>dep)&1;//\u5224\u65ad\u662f1\u8fd8\u662f0 \n    if(!tmp) update(p->chd[0],flag?flag->chd[0]:NULL,dep-1,i);\n    else update(p->chd[1],flag?flag->chd[1]:NULL,dep-1,i);\n    if(p->chd[0]) p->symbl=std::max(p->symbl,p->chd[0]->symbl);\n    if(p->chd[1]) p->symbl=std::max(p->symbl,p->chd[1]->symbl);\n}\nint query(trie *p,int x,int dep,int limit)\n{\n    if(dep<0) return sum[p->symbl]^x;\n    int tmp=(x>>dep)&1;\n    if(p->chd[tmp^1]&&p->chd[tmp^1]->symbl>=limit) return query(p->chd[tmp^1],x,dep-1,limit);\n    return query(p->chd[tmp],x,dep-1,limit);\n}\nsigned main()\n{\n    Init();\n    read(n),read(m);\n    build(root[0],Maxdep);\n    for(int i=1,x;i<=n;i++)\n    {\n        read(x);\n        sum[i]=sum[i-1]^x;\n        update(root[i],root[i-1],Maxdep,i);\n    } \n    for(int i=1;i<=m;i++)\n    {\n        char ch=getchar();\n        while(ch!='A'&&ch!='Q') ch=getchar();\n        if(ch=='A')\n        {\n            int x;\n            read(x);\n            n++;\n            sum[n]=sum[n-1]^x;\n            update(root[n],root[n-1],Maxdep,n);\t\n            continue;\n        }\t\n        if(ch=='Q')\n        {\n            int l,r,x;\n            read(l),read(r),read(x);\n            int ans=query(root[r-1],sum[n]^x,Maxdep,l-1);\n            printf(\"%d\\n\",ans);\n            continue;\n        }\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1572719192,
        "uid": 77131,
        "name": "nth_element",
        "ccfLevel": 5,
        "title": "P4735 \u9898\u89e3"
    },
    {
        "content": "[$My Blog$](https://ctz45562.github.io/2019/03/31/%E6%B4%9B%E8%B0%B7-P4735-%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E5%92%8C/)\n\n[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P4735)\n\n\u7ffb\u4e86\u7ffb\u9898\u89e3\uff0c\u53ea\u6709\u6211\u8fd9\u4e48\u84bb\u4e0d\u4f1a\u628a\u540e\u7f00\u5f02\u6216\u548c\u8f6c\u6210\u524d\u7f00\u5f02\u6216\u548c\u5417$QAQ$\n\n\u6ca1\u6709\u60f3\u5230\u8f6c\u524d\u7f00\u6240\u4ee5\u849f\u84bb\u66b4\u529b\u7ef4\u62a4\u4e86\u540e\u7f00\u5f02\u6216\u548c\u3002\n\n\u9996\u5148\u64cd\u4f5c\u79bb\u7ebf\u4e0b\u6765\uff0c\u5904\u7406\u51fa\u6dfb\u52a0\u5b8c\u6240\u6709\u6570\u540e\u6570\u5217\u7684\u72b6\u6001\uff0c\u76f4\u63a5\u628a\u6240\u6709\u540e\u7f00\u5f02\u6216\u548c\u63d2\u5165\u8fdb\u53ef\u6301\u4e45\u5316$trie$\u6811\u91cc\u3002\u7136\u540e\u5012\u7740\u5904\u7406\u64cd\u4f5c\uff0c\u8fd9\u6837\u6dfb\u52a0\u5c31\u53d8\u6210\u4e86\u5220\u9664\u3002\n\n\u5220\u9664\u7ed3\u5c3e\u7684\u4e00\u4e2a\u6570\uff0c\u5269\u4e0b\u7684\u6240\u6709\u540e\u7f00\u5f02\u6216\u548c\u90fd\u4f1a\u5f02\u6216\u4e0a\u5220\u6389\u7684\u6570\u3002\u5728\u5168\u5c40\u7ef4\u62a4\u4e00\u4e2a$tag$\uff0c\u5220\u4e00\u4e2a\u6570\u5c31\u628a$tag$\u5f02\u6216\u4e0a\u5b83\u3002\u5728\u67e5\u8be2\u65f6\u53ea\u8981$tag$\u8fd9\u4e00\u4f4d\u4e0a\u4e3a$1$\u5c31\u8981\u53cd\u7740\u8d70\u3002\n\n\u4e0d\u8fc7\u8fd9\u9898\u5361\u5e38\uff0c\u6070\u597d\u6211\u8fd9\u4e2a\u505a\u6cd5\u5e38\u6570\u6bd4\u8f83\u5927\uff0c\u5438\u6c27\u624d\u80fd\u8fc7$QAQ$\u3002\n\n\u975e\u5e38\u795e\u5947\u7684\u4e00\u70b9\uff1a\u8bfb\u5165\u5b57\u7b26\u4e32\u7528$scanf$ $T$\u5f97\u98de\u8d77\uff0c\u6362\u6210$cin$\u5c31$A$\u4e86\u3002\u6570\u636e\u6709\u9505\uff1f\n\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n\n#define maxn 300005\n\nusing namespace std;\n\ninline int read(){\n\tint x=0,y=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn y?-x:x;\n}\nint siz[maxn<<6],trie[maxn<<6][2],a[maxn<<1],sum[maxn<<1],root[maxn<<1],ans[maxn],top,tag,cnt=1;\n#define ls(x) trie[x][0]\n#define rs(x) trie[x][1]\nstruct ORDER{\n\tint s,l,r,x;\t\n}o[maxn];\ninline void update(int node){\n\tsiz[node]=siz[ls(node)]+siz[rs(node)];\n}\nvoid insert(int &node,int ol,int d,int now=25){\n\tnode=++cnt;\n\tif(now==-1){\n\t\tsiz[node]=siz[ol]+1;\n\t\treturn;\n\t}\n\tbool k=d&(1<<now);\n\ttrie[node][k^1]=trie[ol][k^1];\n\tinsert(trie[node][k],trie[ol][k],d,now-1);\n\tupdate(node);\n}\nint ask(int node,int ol,int d,int now=25){\n\tif(now==-1)return 0;\n\tbool k=(d&(1<<now))^(tag&(1<<now));\n    //\u5f02\u6216\u4e0atag\u7684\u8fd9\u4e00\u4f4d\u5c31\u76f8\u5f53\u4e8e\uff1atag\u8fd9\u4e00\u4f4d\u4e0a\u4e3a1\u65b9\u5411\u6539\u53d8\n\tif(siz[trie[node][k^1]]-siz[trie[ol][k^1]]>0)return ask(trie[node][k^1],trie[ol][k^1],d,now-1)+(1<<now);\n\telse return ask(trie[node][k],trie[ol][k],d,now-1);\t\n}\nint main(){\n\tint n=read(),m=read();\n\tchar ss[2];\n\tfor(register int i=1;i<=n;++i)\n\t\ta[i]=read();\n\tfor(register int i=1;i<=m;++i){\n\t\tcin>>ss;\n\t\to[i].s=(ss[0]=='Q')+1,o[i].l=read();\n\t\tif(o[i].s==1)a[++n]=o[i].l;\n\t\telse o[i].r=read(),o[i].x=read();\n\t}\n\tfor(register int i=n;i;--i)\n\t\tsum[i]=sum[i+1]^a[i];\n\tfor(register int i=1;i<=n;++i)\n\t\tinsert(root[i],root[i-1],sum[i]);\n\tfor(register int i=m;i;--i){\n\t\tif(o[i].s==1)tag^=o[i].l;//\u6807\u8bb0\u5904\u7406\n\t\telse ans[++top]=ask(root[o[i].r],root[o[i].l-1],o[i].x);\n\t}\n\twhile(top)printf(\"%d\\n\",ans[top--]);\n}\n```\n\n",
        "postTime": 1553994270,
        "uid": 111762,
        "name": "_ctz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4735 \u3010\u6700\u5927\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "\u7ef4\u62a4\u524d\u7f00\u5f02\u6216\u548c\uff0c\u76f4\u63a5\u7cca\u4e00\u4e2a\u53ef\u6301\u4e45\u5316trie\n\u5177\u4f53\u600e\u4e48\u53ef\u6301\u4e45\u5316\uff0c\u5c31\u662f\u6bcf\u6b21\u63d2\u5165\u7684\u65f6\u5019\u5efa\u4e00\u4e2a\u65b0\u7248\u672c\uff0c0\u548c1\u4e2d\u7684\u4e00\u4e2a\u5b69\u5b50\u6307\u5411\u5386\u53f2\u7248\u672c\u5373\u53ef\u3002\n\u8003\u8651\u67e5\u8be2\uff0c\u6709l\u548cr\u4e24\u91cd\u9650\u5236\uff0cr\u7684\u9650\u5236\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u5728r-1\u7684\u7248\u672c\u4e2d\u67e5\u5373\u53ef,l\u600e\u4e48\u529e\u5462\uff0c\u6211\u4eec\u5728\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a\u503clate[x]\u8868\u793a\u5b50\u6811\u4e2d\u6700\u5927\u7248\u672c\u53f7\u3002\u663e\u7136\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u7b26\u5408\u8981\u6c42\u7684\u8282\u70b9late\u5fc5\u7136\u662f\u5c0f\u4e8el\u7684,\u4e8e\u662f\u5c31\u641e\u5b8c\u4e86\u3002\n\n------------\n\n\u8fd9\u9898\u5361\u5e38\uff0c\u6211\u7b2c\u4e00\u904dcin T\u4e86\uff0c\u7b2c\u4e8c\u904d\u5feb\u8bfb\u7206\u96f6\u4e86\uff0c\u7b2c\u4e09\u904d\u7528\u4e86scanf\u5438\u6c27\u7ec8\u4e8e\u8fc7\u4e86QAQ\n\n------------\n\n\u6211\u4ee3\u7801\u5de8\u4e11Orz\n```cpp\n\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\n#define RE register\n#define clear(a) memset(a,0,sizeof a)\n\ninline int read(){\n    int date=0,w=1;char c=0;\n    while(c<'0'||c>'9'){if(c=='-')w=-1;c=getchar();}\n    while(c>='0'&&c<='9'){date=date*10+c-'0';c=getchar();}\n    return date*w;\n}\n\nvoid chkmin(int &x,int y){\n    x=min(x,y);\n}\nvoid chkmax(int &x,int y){\n    x=max(x,y);\n}\n#define N 600005\nint n,m,a[N],s[N],trie[N<<5][2],late[N<<5],tot,root[N];\nchar tmp[2];\nconst int bit=23;\nvoid ins(int i,int k,int p,int q){\n    if(k<0){\n        late[q]=i;\n        return;\n    }\n    int c=s[i]>>k &1;\n    if(p)trie[q][c^1]=trie[p][c^1];\n    trie[q][c]=++tot ;\n    ins(i,k-1,trie[p][c],trie[q][c]);\n    late[q]=max(late[trie[q][1]],late[trie[q][0]]);\n}\nvoid init(){\n    late[0]=-1;\n    root[0]=++tot;\n    ins(0,23,0,root[0]);\n}\nint query(int x,int k,int val,int lim){\n    if(k<0){\n        return val^s[late[x]];\n    }\n    int c=val>>k &1;\n    if(late[trie[x][c^1]]>=lim){\n        return query(trie[x][c^1],k-1,val,lim);\n    }else return query(trie[x][c],k-1,val,lim);\n}\nint l,r,x;\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    init();\n    for(int i=1;i<=n;++i){\n    \tscanf(\"%d\",&a[i]);\n    \ts[i]=s[i-1]^a[i];\n    \troot[i]=++tot;\n    \tins(i,23,root[i-1],root[i]);\n    }\n    while (m--){\n        scanf(\"%s\",tmp);\n        if(tmp[0]=='A'){\n            scanf(\"%d\",&x);\n            ++n;\n            s[n]=s[n-1]^x;\n            root[n]=++tot;\n            ins(n,23,root[n-1],root[n]);\n        }else{\n            scanf(\"%d%d%d\",&l,&r,&x);\n            x^=s[n];\n            printf(\"%d\\n\",query(root[r-1],23,x,l-1));\n        }\n        \n    }\n    return 0;\n}\n\n\n```\n\n",
        "postTime": 1553341356,
        "uid": 112316,
        "name": "Linne",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4735 \u3010\u6700\u5927\u5f02\u6216\u548c\u3011"
    }
]