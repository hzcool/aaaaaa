[
    {
        "content": "[\u4e0d\u77e5\u9053\u4f1a\u4e0d\u4f1a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://yaoxi-std.github.io/2022/03/28/sol-p5861/)\n\n**\u8fd9\u662f\u4e00\u4e2a $O(N \\log N + S \\log^2 N)$ \u7684\u65b9\u6cd5**\uff0c\u53ef\u80fd\u9700\u8981\u5361\u5361\u5e38\u624d\u80fd\u8fc7\u3002**\u4e0d\u9700\u8981\u4e3b\u5e2d\u6811**~~\u53ea\u9700\u8981\u7ebf\u6bb5\u6811\u5957 vector \u518d\u8fdb\u884c\u4e00\u5806\u5947\u602a\u7684\u64cd\u4f5c~~\n\n\u5bb9\u6613\u60f3\u5230\u8d2a\u5fc3\u601d\u8def\uff1a\u5148\u5c06 $K[i]$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6bcf\u6b21\u53d6 $B[j]$ \u6700\u5c0f\u7684 $K[i]$ \u4e2a\uff0c\u8fd9\u6837\u663e\u7136\u662f\u6700\u4f18\u7684\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u5b66\u751f\uff0c\u5728\u7ebf\u6bb5\u6811\u7684 $B[i]$ \u5904\u63d2\u5165\u4e00\u4e2a\u6570 $A[i]$\u3002\u5728\u5904\u7406 $K[i]$ \u65f6\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u51fa\u6700\u5c0f\u7684 $r$ \u4f7f\u5f97\u6709 $\\ge K$ \u4e2a $A[i] \\le K \\le B[i] \\le r$\uff0c\u7136\u540e\u5c06\u5bf9\u5e94\u7684 $K$ \u4e2a\u5b66\u751f\u5220\u9664\u3002\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u4e0b\u9762\u662f\u5b9e\u73b0\u3002\u56e0\u4e3a\u5728\u8be2\u95ee\u8fc7\u7a0b\u4e2d\u4e0d\u9700\u8981\u5bf9\u5b66\u751f\u8fdb\u884c\u4fee\u6539\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u5728\u9884\u5904\u7406\u9636\u6bb5\u5c31\u6784\u5efa\u51fa\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u5957 vector \u5e76\u6392\u597d\u5e8f\u3002\n\n\u8003\u8651\u5982\u4f55\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff0c\u8fd9\u4e2a\u5f88\u5957\u8def\uff0c\u9996\u5148\u7531\u4e8e $K[i]$ \u9012\u589e\uff0c\u6240\u4ee5 $B[i] < K$ \u7684\u5df2\u7ecf\u6ca1\u6709\u7528\u4e86\uff0c\u5168\u90e8\u5220\u53bb\u3002\u7136\u540e\u5c31\u8003\u8651\u7684\u662f\u4e00\u4e2a\u6700\u5c0f\u7684\u524d\u7f00 $r$ \u4f7f\u6709 $\\ge K$ \u4e2a $A[i] \\le K$ \u5e76\u4e14 $B[i] \\le R$\uff0c\u76f4\u63a5\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u4e8c\u5206\u5373\u53ef\u3002\u7531\u4e8e\u8fd8\u9700\u8981\u5728 vector \u4e0a\u518d\u6b21\u4e8c\u5206\uff0c\u6240\u4ee5\u4e00\u6b21\u64cd\u4f5c\u4e3a $O(\\log^2 N)$\u3002\n\n\u7136\u540e\u8003\u8651\u5220\u9664\uff0c\u663e\u7136\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\uff0c\u5220\u9664\u6389\u7684\u90fd\u662f vector \u4e2d\u7684\u4e00\u6bb5\u524d\u7f00\uff0c\u4e8e\u662f\u60f3\u5230\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a $pos$ \u8868\u793a\u5df2\u7ecf\u5220\u6389\u4e86\u524d $pos$ \u4e2a\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u8282\u70b9\u5feb\u901f\u5220\u9664\u4e86\uff0c\u53ea\u9700\u8981\u5728\u7ebf\u6bb5\u6811\u4e0a\u627e\u5230\u5bf9\u5e94\u7684\u533a\u95f4\u5e76\u66f4\u65b0 $pos$ \u5c31\u884c\u3002\n\n\u6700\u540e\u5728\u505a\u5b8c\u4e00\u6b21\u8be2\u95ee\u9700\u8981\u6e05\u7a7a\u3002\u663e\u7136\u6e05\u7a7a\u5c31\u662f\u5c06\u6240\u6709\u7684 $pos$ \u8d4b\u6210 $0$\uff0c\u7ef4\u62a4\u4e00\u4e2a\u662f\u5426\u6e05\u7a7a\u7684\u6807\u8bb0 $cls$ \u5e76 pushdown \u5373\u53ef\u3002\n\nupd: \u6211\u77e5\u9053\u4e4b\u524d\u4e3a\u4ec0\u4e48\u8981 pushdown \u4e24\u6b21\u4e86\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u4fee\u6539\u4e00\u6b21\u4ee5\u540e $cls$ \u6807\u8bb0\u8fd8\u5b58\u5728\u3002\u4ee3\u7801\u5df2\u7ecf\u4fee\u6539\u8fc7\u4e86\uff0c\u53ef\u4ee5\u653e\u5fc3\u98df\u7528\u3002\n\n### \u4ee3\u7801\n\n```cpp\nbool m_be;\nusing ll = long long;\nconst int MAXN = 5e5 + 10;\nconst int INF = 0x3f3f3f3f;\nstruct SegmentTree {\n    #define li (i << 1)\n    #define ri (i << 1 | 1)\n    #define lson li, l, mid\n    #define rson ri, mid + 1, r\n    int pos[MAXN * 4];           // \u5df2\u7ecf\u5220\u6389\u51e0\u4e2a\u6570\u4e86\n    bool cls[MAXN * 4];          // \u662f\u5426\u8981\u6e05\u7a7a\u7684\u6807\u8bb0\n    vector<int> vec[MAXN * 4];   // \u5bf9\u5e94 vector\n    // \u4e3a\u4e86\u6392\u5e8f\n    void build(int i, int l, int r) {\n        pos[i] = 0;\n        sort(vec[i].begin(), vec[i].end());\n        if (l == r) return;\n        int mid = (l + r) >> 1;\n        build(lson), build(rson);\n    }\n    // \u63d2\u5165\uff0c\u5168\u90e8\u7684\u63d2\u5165\u64cd\u4f5c\u7ed3\u675f\u540e\u9700\u8981 build \u6765\u6392\u5e8f\n    void insert(int i, int l, int r, int q, int v) {\n        vec[i].emplace_back(v);\n        if (l == r) return;\n        int mid = (l + r) >> 1;\n        q <= mid ? insert(lson, q, v) : insert(rson, q, v);\n    }\n    // \u8282\u70b9 i \u4e2d\u672a\u88ab\u5220\u9664\u7684 <=p \u7684\u6570\u5b57\u6570\u91cf\n    int count(int i, int p) {\n        return upper_bound(vec[i].begin(), vec[i].end(), p) - vec[i].begin() - pos[i];\n    }\n    // \u4e0b\u4f20\u6807\u8bb0\n    void pushdown(int i) {\n        // \u5982\u679c\u9700\u8981\u6e05\u7a7a\u5c31\u76f4\u63a5\u6e05\u7a7a\n        if (cls[i]) cls[i] = 0, cls[li] = cls[ri] = 1, pos[li] = pos[ri] = 0;\n        // \u4e0d\u9700\u8981\u4e0b\u4f20\n        if (pos[i] == pos[li] + pos[ri]) return;\n        // \u7531\u4e8e\u5220\u6389\u7684\u4e00\u5b9a\u662f\u524d pos[i] \u4e2a\uff0c\u6240\u4ee5\u513f\u5b50\u8282\u70b9\u4e2d\u5c0f\u4e8e vec[i][pos[i]-1] \n        // \u7684\u4e00\u5b9a\u5df2\u7ecf\u8981\u88ab\u5220\u6389\uff0c\u5269\u4e0b\u7684\u7b49\u4e8e vec[i][pos[i]-1] \u7684\u5c31\u4f18\u5148\u5220\u9664 B[i] \n        // \u66f4\u5c0f\u7684\u4e5f\u5c31\u662f\u5de6\u513f\u5b50\u4e2d\u7684\u3002\n        int x = vec[i][pos[i] - 1];\n        pos[li] += count(li, x - 1), pos[ri] += count(ri, x - 1);\n        int p = pos[i] - pos[li] - pos[ri], t = count(li, x);\n        (p <= t) ? (pos[li] += p) : (pos[li] += t, pos[ri] += p - t);\n    }\n    // \u67e5\u8be2 B[i] \u5728\u533a\u95f4 [ql,qr] \u7684\u5b66\u751f\u4e2d\u8fd8\u6709\u591a\u5c11\u4e2a A[i]<=p \u7684\n    int query(int i, int l, int r, int ql, int qr, int p) {\n        if (ql > qr) return 0;\n        if (ql <= l && r <= qr) return count(i, p);\n        int mid = (l + r) >> 1, ret = 0; pushdown(i);\n        if (ql <= mid) ret += query(lson, ql, qr, p);\n        if (qr > mid) ret += query(rson, ql, qr, p);\n        return ret;\n    }\n    // \u4e8c\u5206\u51fa\u6700\u5c0f\u7684 R \u4f7f\u5f97\u6709 >=k \u4e2a A[i]<=p \u4e14 B[i]<=R\n    // \u8fd9\u91cc\u662f\u628a \u4e8c\u5206 \u548c \u5220\u9664 \u653e\u5230\u4e00\u4e2a\u51fd\u6570\u91cc\u4e86\uff0c\u5e94\u8be5\u770b\u5f97\u61c2\u5427\n    int bound(int i, int l, int r, int p, int k) {\n        if (l == r) return pos[i] += k, l;\n        int mid = (l + r) >> 1; pushdown(i);\n        int tmp = count(li, p), ret;\n        if (k <= tmp) ret = bound(lson, p, k);\n        else pos[li] += tmp, ret = bound(rson, p, k - tmp);\n        return pos[i] = pos[li] + pos[ri], ret;\n    }\n} sgt;\nint n, q, m, a[MAXN], b[MAXN], k[MAXN];\nbool m_ed;\nsigned main() {\n    resetIO(teams);\n    // debug(\"Mem %.5lfMB.\", fabs(&m_ed - &m_be) / 1048576);\n    read(n);\n    for (int i = 1; i <= n; ++i) read(a[i]), read(b[i]);\n    for (int i = 1; i <= n; ++i)\n        sgt.insert(1, 1, n, b[i], a[i]);\n    sgt.build(1, 1, n);\n    read(q);\n    while (q--) {\n        bool ans = 1; ll sum = 0; read(m);\n        for (int i = 1; i <= m; ++i) read(k[i]), sum += k[i];\n        if (sum > n) { putc('0'), putc('\\n'); continue; }\n        sort(k + 1, k + m + 1);\n        sgt.cls[1] = 1, sgt.pos[1] = 0; // \u8bb0\u5f97\u6253\u4e0a\u6e05\u7a7a\u7684\u6807\u8bb0\n        for (int i = 1; i <= m; ++i) {\n            // B[i] < K[i] \u7684\u4e0d\u518d\u6709\u7528\uff0c\u53ef\u4ee5\u76f4\u63a5\u5220\u6389\n            int rem = k[i] + sgt.query(1, 1, n, 1, k[i] - 1, k[i]);\n            if (sgt.count(1, k[i]) < rem) { ans = 0; break; }\n            sgt.bound(1, 1, n, k[i], rem);\n        }\n        putc(ans ? '1' : '0'), putc('\\n');\n    }\n    return print_final(), 0;\n}\n```",
        "postTime": 1648453023,
        "uid": 141573,
        "name": "yaoxi",
        "ccfLevel": 8,
        "title": "IOI2015 teams"
    },
    {
        "content": "## \u524d\u8a00\n\n\u9898\u89e3\u5199\u5230\u4e00\u534a\u65f6\u7a81\u7136 wmh \u8dd1\u8fc7\u6765\u628a\u6211\u9898\u89e3\u5220\u4e86\u3002\n\u963f\u5df4\u963f\u5df4\u963f\u5df4......\n\n## \u9898\u89e3\n\n### \u601d\u8def\n\n\uff08pass\uff1a\u7528 [i] \u8868\u793a\u5f15\u7406 $i$\uff0c\u627e\u4e0d\u5230\u7684\u7528 ```ctrl+f```\u3002\uff09\n\n\u6211\u4eec\u628a\u9898\u76ee\u4e2d\u7684 $A_i$ \u8bb0\u4e3a $L_i$\uff0c$B_i$ \u8bb0\u4e3a $R_i$\uff0c\u5e76\u628a $k_i$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u9996\u5148\u8003\u8651\u4e00\u4e2a\u57fa\u7840\u7684\u8d2a\u5fc3\uff1a\u5bf9\u4e8e\u4e00\u6b21\u8be2\u95ee\u4e2d\u7684 $k_i$\uff0c\u6211\u4eec\u5728\u6240\u6709\u5269\u4f59\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\uff08$L_i \\le k_i \\le R_i$\uff09\u4e2d\u8d2a\u5fc3\u6309 $R_i$ \u4ece\u5c0f\u5230\u5927\u53d6\uff0c\u8bc1\u660e\u5982\u4e0b\uff1a\n\n> \u5bf9\u4e8e\u4e24\u4e2a\u6570 $i$ \u548c $j$\uff08$L_i,L_j\\le k_i$\uff0c$R_i\\le R_j$\uff09\u6765\u8bf4\uff0c\u5bf9\u4e8e $\\forall l \\in (i,n]$ \u6765\u8bf4\uff0c\u90fd\u6709 $L_i,L_j \\le k_i \\le k_l$\uff0c\u5373\u8fd9\u4e24\u4e2a\u6570\u5728\u8003\u8651 $k_l$ \u7684\u8d21\u732e\u65f6\u53ea\u9700\u8981\u8003\u8651 $R$ \u7684\u9650\u5236\u3002\u90a3\u4e48\u663e\u7136\u662f\u628a $R$ \u5927\u7684\u7559\u5728\u540e\u9762\u66f4\u4f18\u3002\n\n\u4f46\u66b4\u529b\u6a21\u62df\u8d2a\u5fc3\u4f1a\u70b8\uff08$O(n\\times q)$\uff09\u3002\u56e0\u4e3a $q$ \u7684\u539f\u56e0\uff0c\u56e0\u6b64\u4e0b\u9762\u7684\u7b97\u6cd5\u4e2d\u4e0d\u80fd\u7528 $i$ \u53bb\u66f4\u65b0 $k_j$\uff0c\u800c\u8981\u4ee5 $k_j$ \u53bb\u627e\u6ee1\u8db3\u6761\u4ef6\u7684\u5269\u4f59\u7684 $i$\u3002\n\n\u89c2\u5bdf\u8d2a\u5fc3\u8fc7\u7a0b\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u4ed6\u6709\u4e00\u4e2a\u4f18\u7f8e\u7684\u6027\u8d28\uff1a\u53ea\u6709\u4e00\u6b21\u64cd\u4f5c\u65f6\uff0c\u5bf9\u4e8e\u6240\u6709\u6ee1\u8db3\u7684 $L_i\\le k_1$ \u7684\u6570\u6309 $R_i$ \u6392\u5e8f\u65f6\uff0c\u6ca1\u88ab\u53d6\u8fc7\u7684\u6570\uff08\u4e5f\u6ee1\u8db3 $L_i\\le k_1$\uff09\u7684\u96c6\u5408\u4e00\u5b9a\u6ee1\u8db3\u4ed6\u662f\u4e00\u4e2a\u4ece\uff08\u6392\u5e8f\u7684\u96c6\u5408\u7684\uff09\u53f3\u7aef\u70b9\u5f00\u59cb\u7684\u533a\u95f4\u3002\u8fd9\u4e2a\u5bb9\u6613\u5728\u8d2a\u5fc3\u7684\u8fc7\u7a0b\u4e2d\u8bc1\u660e\u3002\n\n\u7531\u4e8e\u8fd9\u4e2a\u4f18\u7f8e\u7684\u6027\u8d28\uff0c\u82e5\u6709\u7b2c\u4e8c\u6b21\u64cd\u4f5c\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u4e24\u4e2a\u90e8\u5206 \n\n* 1. \u5de6\u7aef\u70b9\u6ee1\u8db3 $k_1<L_i\\le k_2$ \u7684\u6570\uff0c\u4ed6\u4eec\u90fd\u6ca1\u6709\u88ab\u53d6\u8fc7\u3002\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u53d6\u3002\n\n* 2. \uff08[1]\uff09\u5de6\u7aef\u70b9\u6ee1\u8db3 $L_i\\le k_1$ \u7684\u90e8\u5206\uff0c\u8bbe $h$ \u4e3a\u6ca1\u88ab\u53d6\u8fc7\u7684\u6570\u4e2d\u6700\u5c0f\u7684\u53f3\u7aef\u70b9\u3002\u82e5\u6ee1\u8db3 $h\\le k_2$\uff0c\u8bf4\u660e\u6211\u4eec\u53ef\u4ee5\u6309\u7b2c\u4e00\u4e2a\u90e8\u5206\u7684\u65b9\u6848\u53d6\uff0c\u800c\u4e0d\u4f1a\u53d6\u5230\u5408\u6cd5\u7684\u65b9\u6848\uff0c\u56e0\u4e3a $\\forall R_i\\ge h,L_i\\le k_1$ \u90fd\u6ca1\u88ab\u53d6\u8fc7\uff0c\u4e14 $h\\le k_2$\uff0c\u5373 $\\forall R_i\\ge k_2,L_i\\le k_1$ \u4e5f\u6ca1\u6709\u88ab\u53d6\u8fc7 \uff1b\u82e5 $h>k_2$\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u7edf\u8ba1\u6240\u6709\u6ca1\u88ab\u53d6\u8fc7\u7684\u6570\uff0c\u4ed6\u4eec\u90fd\u80fd\u5bf9 $k_2$ \u9020\u6210\u8d21\u732e\u3002\n\n\u77e5\u9053\u4e86\u80fd\u53d6\u7684\u6570\u7684\u96c6\u5408\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u8ba8\u8bba\u5269\u4e0b\u7684\u6570\uff08\u8003\u8651 $h_1> k_i$ \u7684\u60c5\u51b5\uff0c\u663e\u7136\u4e2a\u6570\u56fa\u5b9a\uff09\u3002\u76f4\u63a5\u7684\u8bdd\u8fd9\u6837\u7b97\u7684\uff1a\n\n[![q28NPf.png](https://s1.ax1x.com/2022/03/30/q28NPf.png)](https://imgtu.com/i/q28NPf)\n\n\uff08\u7ea2\u7ebf\u6807\u7684\u90e8\u5206\u4e3a $h_1=R_i$\uff09\n\n\u90a3\u4e48\u5c31\u662f\u5148\u4ece\u4e0b\u5230\u4e0a\u53d6\u5230\u7b2c\u4e8c\u4e2a\u96c6\u5408\u76f4\u5230\u7ea2\u7ebf\u90e8\u5206\uff0c\u518d\u6309 $R_i$ \u4f9d\u6b21\u4ece\u5c0f\u5230\u5927\u53d6\u3002BUT\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u4e8b\u60c5\u2014\u2014\u5f53\u6211\u4eec\u6ca1\u6709\u53d6\u5230\u7ea2\u7ebf\u90e8\u5206\u65f6\uff0c\u5bf9\u4e8e $L_i\\le k_2$ \u7684\u6570\u6309 $R_i$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u65f6\uff0c\u5269\u4e0b\u7684\u6570\u7684\u96c6\u5408\u4e0d\u4e00\u5b9a\u5728\u4e0a\u9762\u8fde\u7eed\u3002\u4f46\u662f\u53d6\u8fc7\u7ea2\u7ebf\u4ee5\u540e\u53c8\u6ee1\u8db3\u4e86\u4e0a\u9762\u8bf4\u7684\u6027\u8d28\u3002\n\n\u8f6c\u5316\u4e00\u4e0b\u5224\u65ad\u65b9\u6cd5\uff0c\u5373\u5f53\u6211\u4eec\u5269\u4f59\u7684\u6570\u7684\u540d\u989d\u4ece\u524d\u5f80\u540e\u8d2a\u5fc3\u7684\u53d6\uff0c\uff08\u5c31\u76f8\u5f53\u4e8e\u8d2a\u5fc3\u5730\u4ece\u540e\u5f80\u524d\u53d6\u5bf9 $k_2$ \u80fd\u9020\u6210\u8d21\u732e\u7684\u6570\uff09\u3002\u8bbe\u6b64\u65f6 $h_2$ \u4e3a\u6b64\u65f6\u6ee1\u8db3 $k_1< L_i\\le k_2$ \u7684\u5269\u4f59\u7684\u6570\u4e2d $R_i$ \u7684\u6700\u5c0f\u503c\u3002\u90a3\u4e48\u82e5 $h_2\\ge h_1$ \uff0c\u5219\u80fd\u53d6\u5230\u7ea2\u7ebf\u90e8\u5206\uff0c\u5426\u5219\u53d6\u4e0d\u5230\u3002\n\n\u57fa\u6b64\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u5999\u5999\u7684\u65b9\u6cd5\uff1a\uff08[2]\uff09\u82e5\u6309\u4e0a\u9762\u7684\u5224\u65ad\u65b9\u6cd5\u80fd\u8d8a\u8fc7\u7ea2\u7ebf\u7684\u8bdd\uff0c$L_i\\le k_1$ \u548c $k_1\\le L_i \\le k_2$ \u7684\u5269\u4f59\u90e8\u5206\u4e0e $L_i \\le k_2$ \u7684\u90e8\u5206\u8d2a\u5fc3\u6309 $R_i$ \u4ece\u5927\u5230\u5c0f\u53d6\u6240\u5f97\u7684\u5269\u4f59\u90e8\u5206\u7b49\u540c\u3002\u5426\u5219\u4e0d\u76f8\u7b49\u3002\uff08[3]\uff09\u5f53\u4e0d\u76f8\u7b49\u7684\u65f6\u5019\uff0c\u603b\u4f53\u8d2a\u5fc3\u53d6\u7684\u65b9\u6848\u6070\u597d\u7b49\u540c\u4e8e\u5bf9 $k_1<L_i\\le k_2$ \u4e2d\u8d2a\u5fc3\u53d6\u5269\u4f59\u7684\u6570\u7684\u65b9\u6848\u2014\u2014\u603b\u7ed3\uff0c\u90fd\u53ef\u4ee5\u8d2a\u5fc3\u53d6\u3002\n\n\u56e0\u6b64\uff0c\u82e5\u6211\u4eec\u6309\u7167\u4e0a\u9762\u7684\u65b9\u6cd5\u5408\u5e76\u7684\u8bdd\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u4e2a\u533a\u95f4\u5269\u4f59\u7684\u6570\u7684\u53f3\u7aef\u70b9\u7684\u6700\u5c0f\u9ad8\u5ea6\u5355\u8c03\u9012\u51cf\u3002\n\n### \u5b9e\u73b0\n\n\u6211\u4eec\u777f\u667a\u5730\u770b\u4e86\u4e00\u773c\uff0c\u53d1\u73b0\u8fd9\u548c\u5355\u8c03\u6808\u975e\u5e38\u50cf\u3002\u56e0\u6b64\u6211\u4eec\u7528\u5355\u8c03\u6808\u8fdb\u884c\u64cd\u4f5c\uff1a\n\n\uff08\u82e5\u5355\u8c03\u6808\u4e2d\u6ca1\u6709\u6570\uff0c\u9ed8\u8ba4\u4e3a $0$\u3002\uff09\n\n* \u8bb0 $hater_i$\uff08\u5939\u5e26\u79c1\u8d27.jpg\uff09 \u8868\u793a\u5143\u7d20 $i$ \u4e0e\u5355\u8c03\u6808\u4e0a\u4e00\u4e2a\u5143\u7d20\uff08\u8bb0\u4e3a $j$\uff09\u4e2d\u6ee1\u8db3 $k_j<L_i\\le k_i$ \u4e2d\u5269\u4f59\u7684\u6570\u7684 $R_i$ \u7684\u6700\u5c0f\u503c\u3002\u8bb0 $s_i$ \u8868\u793a\u6ee1\u8db3 $k_1......k_i$ \u540e\u7684\u5269\u4f59\u7684\u6570\u7684\u6570\u91cf\u3002\u5355\u8c03\u6808\u4ece\u5927\u5230\u5c0f\u7ef4\u62a4 $i$\n\n* \u5bf9\u4e8e\u4e00\u4e2a\u65b0\u7684\u5143\u7d20 $i$ \u6765\u8bf4\uff0c\u6211\u4eec\u627e\u5230\u5355\u8c03\u6808\u4e2d\u6ee1\u8db3 $hater_i$ \u5927\u4e8e $i$\u7684\u7b2c\u4e00\u4e2a\u6570\uff08[1]\uff09\u8bb0\u4e3a $j$\uff08\u7531\u4e8e\u6808\u4e2d\u5143\u7d20\u7684\u6700\u5c0f\u9ad8\u5ea6\u5927\u4e8e\u7b49\u4e8e $j$ \u7684\uff0c\u6240\u4ee5\u90fd\u53ef\u4ee5\u8fd9\u6837\u8ba1\u7b97\uff09\uff0c\u7136\u540e\u7528\u6570\u636e\u7ed3\u6784\u6c42\u89e3\u5728\u6ee1\u8db3 $k_j\\le L_l\\le k_i,R_l\\ge k_i$ \u7684\u6570\u91cf\u3002\u5224\u65ad\u662f\u5426\u6709 $k$ \u4e2a\u6570\uff08$s_i+$ \u4e2a\u6570 $\\ge$ $k_i$\uff0c\u8bb0\u4e3a $sum$\uff09\u3002\n\n\n* \u7136\u540e\u5bf9\u4e8e\u6808\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff08\u8bbe\u4e3a $j$\uff09\uff0c\u6211\u4eec\u8bb0\u5f55 $h$ \u8868\u793a\u5728\u4ece\u524d\u5f80\u540e\u8d2a\u5fc3\u7684\u53d6\u4e2d\uff0c\u5728\u6ee1\u8db3 $k_j<L_l\\le k_i$ \u6570\u4e2d\u5269\u4f59\u7684\u6570\u7684 $R_l$ \u7684\u6700\u5c0f\u503c\u3002\u82e5 $h>hater[i]$\uff0c\u5219\u5f39\u51fa\u6808\u4e2d\u7684\u5143\u7d20\uff08[2]\uff09\u3002\n\n\n* $s_i=sum$\uff0c$hater[i]=h$\uff08[3]\uff09\uff0c\u5e76\u628a $i$ \u52a0\u5165\u5230\u6808\u4e2d\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u4e0a\u9762\u6240\u8bf4\u7684\u6570\u636e\u7ed3\u6784\u5c31\u662f\u4e3b\u5e2d\u6811\uff0c\u53ef\u4ee5\u6ee1\u8db3\uff1a\n\n* \u6c42 $k_j<L_l\\le k_i$\uff0c$R_l\\ge k_i$ \u7684\u6570\u91cf\u3002\n\n* \u6c42\u51fa  $k_j<L_l\\le k_i$ \u4e2d\uff0c$R_i$ \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u7684\u7b2c $k$ \u4f4d\u3002\n\n\u6ce8\u610f\uff0c\u7531\u4e8e\u53ef\u80fd\u6ca1\u6709\u6570\u53ef\u53d6\uff0c\u8fd9\u65f6\u5b9a\u4e49 $hater_i=n+1$\u3002\n\n\u7531\u4e8e\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u6240\u4ee5\u4e0d\u7528\u79bb\u6563\u5316\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define mk make_pair\n#define pb push_back\nusing namespace std;\nconst int N=1e7+1e3;\nstruct Segment_Tree\n{\n    int tot;\n    int rt[N],ls[N],rs[N];\n    int val[N];\n    #define midd ((l+r)>>1)\n    int New(){return ++tot;}\n    void insert(int &x,int y,int l,int r,int p)\n    {\n        x=New();val[x]=val[y]+1; \n        ls[x]=ls[y];rs[x]=rs[y];\n        if(l==r)return;\n        int mid=midd;\n        if(p<=mid)insert(ls[x],ls[y],l,mid,p);\n        else insert(rs[x],rs[y],mid+1,r,p);\n    }\n    int qpos(int x,int y,int l,int r,int k)\n    // \u6c42\u51fa\u4ece\u5927\u5230\u5c0f\u7684\u7b2c i \u4f4d\u7684 \u503c\n    {\n        if(l==r)return l;\n        int t=val[rs[x]]-val[rs[y]],mid=midd;\n        if(t>=k)return qpos(rs[x],rs[y],mid+1,r,k);\n        return qpos(ls[x],ls[y],l,mid,k-t);\n    }\n    int query(int x,int y,int l,int r,int p)\n    //\u6c42\u51fa\u5927\u4e8e\u7b49\u4e8e p \u7684\u6570\u91cf\n    {\n        if(!x)return 0;\n        if(l==r)return val[x]-val[y];\n        int mid=midd;\n        if(p<=mid)return query(ls[x],ls[y],l,mid,p)+val[rs[x]]-val[rs[y]];\n        return query(rs[x],rs[y],mid+1,r,p);\n    }\n    #undef midd\n}T;\nint n,m;\nint k[N];\npii a[N];\nstack<int>st;\nint hater[N],s[N];\nvoid work()\n{\n    stack<int>st;while(!st.empty())st.pop();\n    for(int i=1;i<=m;i++)\n    {\n        while(!st.empty()&&hater[st.top()]<k[i])st.pop();\n        int pre=(st.empty()?0:st.top());\n        int sum=s[pre]+T.query(T.rt[k[i]],T.rt[k[pre]],1,n+1,k[i])-k[i];\n        if(sum<0)return puts(\"0\"),void();\n        int h=T.qpos(T.rt[k[i]],T.rt[k[pre]],1,n+1,sum-s[pre]);\n        while(!st.empty()&&h>=hater[st.top()])\n        {\n            st.pop();pre=(st.empty()?0:st.top());\n            h=T.qpos(T.rt[k[i]],T.rt[k[pre]],1,n+1,sum-s[pre]);\n        }\n        st.push(i);hater[i]=h;s[i]=sum;\n    }\n    puts(\"1\");\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%d%d\",&a[i].fi,&a[i].se);\n    sort(a+1,a+n+1);\n    for(int i=1,j=1;i<=n+1;i++)\n    //\u6ce8\u610f n+1\n    {\n        T.rt[i]=T.rt[i-1];\n        while(j<=n&&a[j].fi==i)T.insert(T.rt[i],T.rt[i],1,n+1,a[j].se),j++;\n    }\n    int _;scanf(\"%d\",&_);\n    while(_--)\n    {\n        scanf(\"%d\",&m);\n        for(int i=1;i<=m;i++)scanf(\"%d\",&k[i]);\n        sort(k+1,k+m+1);\n        work();\n    }\n    return 0;\n}\n```\n\n## \u540e\u8bb0\n\n\u8fd9\u9898\u5e0c\u671b\u8bc4\u4e2a\u9ed1\uff08\u8fd9\u6837\u6211\u5c31\u6709\u9ed1\u9898\u9898\u89e3\u4e86\uff09\u3002\n\n\u611f\u8c22\u4eba win [legendgod \u5927\u4f6c](https://www.luogu.com.cn/user/151723) \u7684[\u6307\u5bfc](https://legendgod.ml/) \u3002\n\n[![q2DKRs.png](https://s1.ax1x.com/2022/03/30/q2DKRs.png)](https://imgtu.com/i/q2DKRs)[![q2riY4.png](https://s1.ax1x.com/2022/03/30/q2riY4.png)](https://imgtu.com/i/q2riY4)\n[![q2rAp9.png](https://s1.ax1x.com/2022/03/30/q2rAp9.png)](https://imgtu.com/i/q2rAp9)\n\n\n",
        "postTime": 1648612796,
        "uid": 223891,
        "name": "max67",
        "ccfLevel": 0,
        "title": "[IOI2015]teams \u5206\u7ec4\u9898\u89e3"
    }
]