[
    {
        "content": "[\u70b9\u51fb\u67e5\u770b\u9898\u76ee\u6765\u6e90](https://www.luogu.org/problemnew/show/2085)\n\n## Solution\n\n\u8be5\u9898\u76ee\u7ed9\u5b9a\u4e86\u6211\u4eec\u4e00\u4e9b\u4e8c\u6b21\u51fd\u6570\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u51fd\u6570\u53ea\u53d6\u4e86\u6a2a\u5750\u6807\u4e3a\u6b63\u6574\u6570\u90e8\u5206\u7684\u503c\uff0c\u5e76\u4e14\u4e09\u4e2a\u7cfb\u6570\u90fd\u4e3a\u6b63\u6570\uff0c\u901a\u8fc7\u4ee3\u6570\u8bc1\u660e\u6216\u8005\u56fe\u50cf\u5bf9\u79f0\u8f74\u5206\u6790\uff0c\u90fd\u53ef\u4ee5\u80af\u5b9a\uff0c\u8be5\u51fd\u6570\u5728\u5176\u5b9a\u4e49\u57df\uff08\u6b63\u6574\u6570\uff09\u4e0a\uff0c\u5355\u8c03\u9012\u589e\u4e14\u6052\u5927\u4e8e0\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u518d\u770b\u5230\u9898\u76ee\u8981\u6c42\uff0c\u6c42\u8fd9\u4e9b\u51fd\u6570\u6240\u751f\u6210\u7684\u6240\u6709\u51fd\u6570\u503c\u4e2d\u6700\u5c0f\u7684m\u4e2a\u3002\n\n\n#### \u66b4\u529b\u6c42\u89e3\u6cd5\n\n\u6bd4\u8f83\u66b4\u529b\u7684\u65b9\u6cd5\u662f\u4ece1\u5f00\u59cb\u5faa\u73af\uff08\u53ef\u80fd\u4e0d\u662f\u6700\u66b4\u529b\u7684\u65b9\u6cd5\uff09\uff0c\u5c061\u4ee3\u5165\u6240\u6709\u7684\u51fd\u6570\u4e2d\uff0c\u5206\u522b\u5f97\u5230n\u4e2a\u51fd\u6570\u503c\uff0c\u7136\u540e\u518d\u5faa\u73af\u52302\uff0c\u6309\u7167\u8fd9\u6837\u7684\u65b9\u6cd5\u518d\u6765\u4e00\u904d\uff0c\u53c8\u6709n\u4e2a\u51fd\u6570\u503c\uff0c\u53c8\u56e0\u4e3a\u8fd9\u4e9b\u90fd\u662f\u5728\u5176\u5b9a\u4e49\u57df\u5185\u5355\u8c03\u9012\u589e\u7684\u51fd\u6570\uff0c\u90a3\u4e48\u9996\u5148\u53ef\u4ee5\u786e\u5b9a1\u4e2d\u6240\u6709\u5c0f\u4e8e\u7b49\u4e8e2\u4e2d\u6700\u5c0f\u51fd\u6570\u503c\u7684\u51fd\u6570\u503c\uff0c\u7136\u540e\u63a5\u7740\u6309\u7167\u4e0a\u8ff0\u65b9\u6848\u505a\uff0c\u5faa\u73af\u5230k\u65f6\uff0c\u53ef\u4ee5\u786e\u5b9a\u4ecex=1\u5230x=k-1\u4e2d\u6240\u6709\u5c0f\u4e8e\u7b49\u4e8ex=k\u4e2d\u6700\u5c0f\u51fd\u6570\u503c\u7684\u51fd\u6570\u503c\uff0c\u76f4\u5230\u786e\u5b9a\u4e86m\u4e2a\u503c\u3002\n\n\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u601d\u60f3\u5b9e\u5728\u7b80\u5355\uff0c\u7edd\u914d\u66b4\u529b\u7b97\u6cd5\u4e00\u540d\u3002\u66b4\u529b\u4e4b\u5904\u5728\u4e8e\uff1a\u4e00\u3001\u6bcf\u6b21\u6c42\u51fa$ O(n) $\u7684\u51fd\u6570\u503c\uff0c\u8017\u8d39$ O(n) $\u7684\u7a7a\u95f4\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u8981\u6c42$ O(mn) $\u6b21\uff0c\u82b1\u8d39$ O(mn) $\u7a7a\u95f4\uff0c\u800c\u6570\u636e\u4e00\u5927\uff0c\u65f6\u95f4\u7a7a\u95f4\u65e0\u7591\u662f\u8981\u8d85\u51fa\u8303\u56f4\u7684\uff1b\u4e8c\u3001\u6bcf\u6b21\u5faa\u73af\u6c42\u51fa\u7684\u51fd\u6570\u503c\u5f97\u8fdb\u884c\u6392\u5e8f\uff0c\u5982\u679c\u4e0d\u6392\u5e8f\uff0c\u90a3\u4e2a\u8fd0\u7b97\u91cf\u4e0d\u6562\u606d\u7ef4\uff0c\u5047\u8bbe\u4f7f\u7528$ \\Theta (nlgn) $\u590d\u6742\u5ea6\u6392\u5e8f\uff0c\u90a3\u4e48\u4e5f\u9700\u8981\u82b1$ \\Theta (mnlgn) $\u7684\u590d\u6742\u5ea6\uff1b\u4e09\u3001\u518d\u52a0\u4e0a\u6bcf\u6b21\u9700\u8981\u8ba1\u7b97x=k\u4e2d\u7684\u6700\u5c0f\u51fd\u6570\u503c\u4e0e\u524d\u9762k-1\u4e2d\u6240\u6709\u7684\u51fd\u6570\u503c\u8fdb\u884c\u6bd4\u8f83\uff0c\u8fd9\u6837\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u5c06\u82b1\u8d39$ O(\\sum ^{m-1} _{k=0} (kn))=O((m-1)mn/2)=O(m^2n) $\u7684\u65f6\u95f4\u4ee3\u4ef7\u3002\n\n\u90a3\u4e48\uff0c\u603b\u7684\u7b97\u6765\uff0c\u5c31\u4f1a\u6d88\u8017$ O(O(mn)+\\Theta (mnlgn)+O(m^2n))=O(m^2n) $\u7684\u65f6\u95f4\u4ee3\u4ef7\uff0c**\u6781\u5176\u66b4\u529b**\uff01\u800c\u4e14\u7a7a\u95f4\u4e0a\u7684\u6d88\u8017\u4e5f\u662f**\u5de8\u5927\u7684**\uff01\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u4f18\u5316\u5462\uff1f\n\n\n#### \u4f18\u5316\u7684\u601d\u60f3\n\n\u5176\u5b9e\uff0c\u5927\u5bb6\u770b\u5230\u51fd\u6570\u89e3\u6790\u5f0f\u6781\u5176\u5b9a\u4e49\u57df\u5c31\u4e0d\u96be\u77e5\u9053\uff0c\u4ed6\u5b9e\u9645\u4e0a\u662f\u7ed9\u4e86\u6211\u4eecn\u4e32\u6392\u597d\u5e8f\u7684\u6570\u7ec4\uff0c\u53ea\u662f\u6bcf\u4e2a\u6570\u7ec4\u4e2d\u4e0b\u6807\u4e0e\u5176\u503c\u5b58\u5728\u4e00\u5b9a\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u6211\u4eec\u7531\u4e0a\u9762\u6240\u8bf4\u7684\u53ef\u77e5\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u7ec4\uff0c\u5b83\u4eec\u7684\u6700\u5c0f\u503c\u6240\u5728\u7684\u4e0b\u6807\u90fd\u662f1\u3002\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b\uff0c\u6bcf\u4e2a\u6570\u7ec4\u90fd\u6709\u4e00\u4e2a\u7bad\u5934\uff0c\u6bcf\u4e2a\u7bad\u5934\u90fd\u6307\u54111\uff0c\u7136\u540e\u5728\u6240\u6709\u7bad\u5934\u6307\u5411\u7684\u51fd\u6570\u503c\u4e2d\uff0c\u627e\u5230\u6700\u5c0f\u7684\u90a3\u4e2a\uff0c\u6b64\u65f6\u5df2\u7ecf\u627e\u5230\u4e861\u4e2a\u6700\u5c0f\u51fd\u6570\u503c\u3002\u63a5\u7740\uff0c\u521a\u624d\u8f93\u51fa\u6765\u7684\u503c\u6240\u5bf9\u5e94\u7684\u7bad\u5934\u5c31\u8981\u5411\u540e\u79fb\uff0c\u6307\u5411x=2\uff0c\u7136\u540e\u518d\u53bb\u548c\u5176\u4ed6\u7bad\u5934\u6307\u5411\u7684\u51fd\u6570\u503c\u6bd4\u8f83\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u4e0b\u9762\u7684\u4e24\u4e2a\u56fe\u5f62\u8c61\u5730\u5c55\u73b0\u4e86\u4e00\u90e8\u5206\u64cd\u4f5c\u8fc7\u7a0b\u3002\n\n ![](https://cdn.luogu.com.cn/upload/pic/11688.png) \n\n ![](https://cdn.luogu.com.cn/upload/pic/11689.png) \n\n\u90a3\u4e48\uff0c\u73b0\u5728\u6211\u4eec\u9700\u8981\u5c06\u6587\u5b57\u63cf\u8ff0\u8f6c\u5316\u4e3a\u7a0b\u5e8f\u601d\u8def\u3002\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u7528\u4e09\u4e2a\u6570\u7ec4\u5b58A\u3001B\u3001C\u7684\u503c\uff0c\u7136\u540e\u9700\u8981\u4e00\u4e2acmin\u5b58\u5f53\u524d\u6700\u5c0f\u503c\uff0c\u6700\u540e\u53ea\u9700\u8981\u62ff\u4e00\u4e2a\u6570\u7ec4F\u6765\u8868\u793a\u6bcf\u4e2a\u51fd\u6570\u4e2d\u7684\u90a3\u4e2a\u201c\u7bad\u5934\u201d\u6240\u6307\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u7bad\u5934\u6240\u6307\u7684\u51fd\u6570\u503c\u5c31\u4f1a\u662f$ A[k]F[k]^2+B[k]F[k]+C[k] $\uff0c\u81f3\u6b64\uff0c\u601d\u8def\u5c31\u5f88\u660e\u4e86\u4e86\u3002\n\n\u4e0b\u9762\u662f\u6211\u5199\u7684\u7a0b\u5e8f\uff0c\u5f88\u7b80\u5355\uff0c\u6700\u957f\u8017\u65f6\u6d4b\u8bd5\u70b9\u7528\u4e86344ms\uff0c\u6ca1\u8d85\u65f6\u3002\n\n```cpp\n    #include <iostream>\n    using namespace std;\n    int main()\n    {\n        int n,m,i,j,cmin,jmin;\n        int A[10010], B[10010], C[10010];\n        int F[10010];\n        cin>>n>>m;\n        for(i=0;i<n;i++)\n        {\n            cin>>A[i]>>B[i]>>C[i];\n            F[i]=1;\n        }\n        for(i=0;i<m;i++)\n        {\n            cmin=100000000;\n            for(j=0;j<n;j++)\n            {\n                if(A[j]*F[j]*F[j]+B[j]*F[j]+C[j]<cmin)\n                {\n                    cmin=A[j]*F[j]*F[j]+B[j]*F[j]+C[j];\n                    jmin=j;\n                }\n            }\n            cout<<A[jmin]*F[jmin]*F[jmin]+B[jmin]*F[jmin]+C[jmin]<<' ';\n            F[jmin]++;\n        }\n        return 0;\n    }\n```\n\u8be5\u7a0b\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$ \\Theta (mn) $\u3002\n\u5927\u5bb6\u4e5f\u8bb8\u4f1a\u53d1\u73b0\uff0c\u8fd9\u91cc\u6bcf\u6b21\u90fd\u91cd\u590d\u8ba1\u7b97\u4e86\u5f88\u591a\u51fd\u6570\u7684\u503c\uff0c\u6d6a\u8d39\u4e86\u5f88\u591a\u65f6\u95f4\uff0c\u90a3\u6709\u6ca1\u6709\u529e\u6cd5\u9488\u5bf9\u8fd9\u4e00\u95ee\u9898\u8fdb\u884c\u4f18\u5316\u5462\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\u3002\n\n\n#### \u66f4\u4f18\u5316\u7684\u89e3\u6cd5\n\n\u5bf9\u4e8e\u4e0a\u8ff0\u95ee\u9898\u7684\u4f18\u5316\u65b9\u6cd5\uff0c\u6bd4\u8f83\u597d\u7684\u662f\u7528\u5806\u6765\u505a\u3002\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6240\u6709\u201c\u7bad\u5934\u201d\u6307\u54111\u7684\u65f6\u5019\uff0c\u5bf9\u6240\u6709\u7bad\u5934\u5bf9\u5e94\u7684\u51fd\u6570\u503c\u5efa\u7acb\u5c0f\u6839\u5806\uff1b\u7136\u540e\uff0c\u6bcf\u6b21\u4ece\u5806\u9876\u53d6\u8d70\u90a3\u4e2a\u6570\uff0c\u5e76\u5c06\u5176\u6240\u5bf9\u5e94\u7684\u201c\u7bad\u5934\u201d\u6307\u5411\u4e0b\u4e00\u4e2a\u51fd\u6570\u503c\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u65b0\u7684\u51fd\u6570\u503c\u4ee3\u66ff\u90a3\u4e2a\u53d6\u8d70\u7684\u51fd\u6570\u503c\u653e\u5728\u5806\u9876\uff0c\u5e76\u81ea\u9876\u5411\u4e0b\u7ef4\u62a4\u5806\uff08\u5927\u5bb6\u53ef\u4ee5\u8bc1\u660e\u4e00\u4e0b\uff0c\u4e00\u76f4\u8fd9\u6837\u64cd\u4f5c\u4e0b\u53bb\uff0c\u5806\u7684\u6027\u8d28\u6052\u6210\u7acb\uff09\u3002\u4e0b\u9762\u662f\u6211\u7684\u53c2\u8003\u7a0b\u5e8f\uff1a\n\n```cpp\n    #include <iostream>\n    using namespace std;\n    struct DUI\n    {\n        int val;//\u7bad\u5934\u8868\u793a\u7684\u51fd\u6570\u503c\n        int x;//\u6bcf\u4e2a\u51fd\u6570\u90fd\u6709\u88ab\u8f93\u5165\u8fdb\u6765\u7684\u5148\u540e\u987a\u5e8f\uff0c\u8fd9\u4e2a\u662f\u7b2cx\u4e2a\u8f93\u5165\u8fdb\u6765\u7684\u51fd\u6570\n        //\u56e0\u4e3a\u5806\u91cc\u9762\u7684\u8282\u70b9\u603b\u662f\u5728\u53d8\u5316\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u8bb0\u5f55\u54ea\u4e2a\u51fd\u6570\u5728\u54ea\u4e2a\u4f4d\u7f6e\n    }a[10010];\n    int heap_size;//\u5806\u7684\u5927\u5c0f\n    void CHANGE(int m, int n)//\u81ea\u5df1\u5199\u7684\u4ea4\u6362\u51fd\u6570\n    {\n        int t;\n        t=a[m].val;\n        a[m].val=a[n].val;\n        a[n].val=t;\n        t=a[m].x;\n        a[m].x=a[n].x;\n        a[n].x=t;\n    }\n    void MIN_HEAPIFY(int i)\n    {\n        int l=i*2;//\u53f3\u5b50\u8282\u70b9\n        int r=i*2+1;//\u5de6\u5b50\u8282\u70b9\n        int smallest;//\u8bb0\u5f55\u7236\u5b50\u8282\u70b9\u503c\u6700\u5c0f\u7684\u90a3\u4e2a\n        if(l<=heap_size&&a[l].val<a[i].val)\n            smallest=l;\n        else\n            smallest=i;\n        if(r<=heap_size&&a[r].val<a[smallest].val)\n            smallest=r;//\u7236\u5b50\u8282\u70b9\u4e2d\u503c\u6700\u5c0f\u7684\u4f4d\u7f6e\n        if(smallest!=i)//\u7236\u8282\u70b9\u6700\u5927\u5219\u4e0d\u53d8\n        {\n            CHANGE(i,smallest);//\u5b50\u8282\u70b9\u5927\u5219\u4ea4\u6362\u7236\u5b50\u8282\u70b9\n            MIN_HEAPIFY(smallest);//\u4ea4\u6362\u540e\u7ee7\u7eed\u5f80\u4e0b\u7ef4\u62a4\n        }\n    }\n    void BUILD_HEAP()//\u5efa\u7acb\u5c0f\u6839\u5806\n    {\n        int i;\n        for(i=heap_size/2;i>0;i--)\n            MIN_HEAPIFY(i);//\u81ea\u5e95\u5411\u4e0a\u5efa\u5806\n    }\n    int main()\n    {\n        int n,m,i,j;\n        int A[10010], B[10010], C[10010];\n        int F[10010];//\u6bcf\u4e2a\u51fd\u6570\u7684\"\u7bad\u5934\"\u4f4d\u7f6e\n        cin>>n>>m;\n        for(i=1;i<=n;i++)\n        {\n            cin>>A[i]>>B[i]>>C[i];\n            F[i]=1;\n            a[i].val=A[i]*F[i]*F[i]+B[i]*F[i]+C[i];\n            a[i].x=i;//\u8f93\u5165\u7684\u987a\u5e8f\uff0c\u7b2ci\u4e2a\u88ab\u8f93\u8fdb\u6765\u7684\n        }\n        heap_size=n;\n        BUILD_HEAP();\n        for(i=0;i<m;i++)\n        {\n            cout<<a[1].val<<' ';//\u8f93\u51fa\u6700\u5c0f\u51fd\u6570\u503c\n            F[a[1].x]++;//\u5b83\u6240\u5728\u7684\u51fd\u6570\u4e2d\u7684\"\u7bad\u5934\"\u5f80\u540e\u79fb\n            a[1].val=A[a[1].x]*F[a[1].x]*F[a[1].x]+B[a[1].x]*F[a[1].x]+C[a[1].x];//\"\u7bad\u5934\"\u53d8\u5219\u503c\u53d8\n            MIN_HEAPIFY(1);//\u81ea\u9876\u5411\u4e0b\u7ef4\u62a4\u5806\n        }\n        return 0;\n    }\n```\n\u8be5\u7a0b\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$ \\Theta (nlgn) $\u6216$ \\Theta (mlgn) $\u3002\u7a0b\u5e8f\u5728\u6d1b\u8c37\u4e0a\u6d4b\u8bd5\u901a\u8fc7\u4e86\uff0c\u5e76\u4e14\u6700\u5927\u8017\u65f6\u7684\u6d4b\u8bd5\u70b9\u8017\u65f68ms\u3002\n\n#### \u2192\u6ce8\n\n- \u8fd9\u91cc\u6d89\u53ca\u5230\u7684\u5806\u7684\u64cd\u4f5c\u7684\u65b9\u6cd5\u6765\u81ea\u300a\u7b97\u6cd5\u5bfc\u8bba\u300b\u3002\n\n- \u5982\u679c\u6709\u4ec0\u4e48\u9519\u8bef\u53ef\u4ee5\u5411\u672c\u4eba\u63d0\u51fa\uff0c\u6211\u4f1a\u505a\u51fa\u53ca\u65f6\u66f4\u6b63\u3002\n\n\n#### \u5199\u5728\u6700\u540e\n\n\u611f\u8c22\u5927\u5bb6\u7684\u5173\u6ce8\u548c\u9605\u8bfb\u3002\n\n\u672c\u6587\u7ae0\u501f\u9274\u4e86\u5c11\u8bb8\u601d\u8def\uff0c\u4f46\u603b\u4f53\u4e3a\u672c\u4eba\u539f\u521b\uff0c\u5982\u9700\u8f6c\u8f7d\uff0c\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\n",
        "postTime": 1512822934,
        "uid": 50871,
        "name": "Euler_Pursuer",
        "ccfLevel": 6,
        "title": "\u6211\u7684\u601d\u8003\u2014\u2014\u6700\u5c0f\u51fd\u6570\u503c"
    },
    {
        "content": "~~\u53ea\u8981\u6709\u4fe1\u4ef0\uff0c\u4ec0\u4e48\u9898\u76ee\u90fd\u9003\u4e0d\u4e86\u6211\u9a97\u5206\u7684\u9b54\u722a\u54c8\u54c8\u54c8~~\n\n\u55ef\u3002\u3002\u3002\n\n\u9996\u5148%%%\u697c\u4e0b\u7684\u5404\u79cd\u5806\n\n\u770b\u6765\u6211\u8fd8\u662f\u592a\u83dc\u4e86\uff0c\u6240\u4ee5\u7b2c\u4e00\u65f6\u95f4\u5c31\u60f3\u5230\u4e86\u9a97\u5206\n\n\u6570\u636e\u5f88\u53cb\u597d\n\n~~\u4e0d\u8981\u76f4\u63a5\u8f93\u51fa\u6837\u4f8b\u554a\u4f1a\u6709\u82e6\u5934\u5403\u7684~~\n\n\u9996\u5148\u7b97\u51fa\u6240\u6709\u51fd\u6570\u503c\n\n\u518d\u6392\u4e2a\u5e8f\n\n\u8f93\u51fa\u524dm\u4e2a\u51fd\u6570\u503c\n\n\u5c31AC\u4e86\u3002\u3002\u3002\n\n[\u70b9\u51fb\u67e5\u770bAC\u8bb0\u5f55](https://www.luogu.org/record/show?rid=5109111 \"\u70b9\u51fb\u67e5\u770bAC\u8bb0\u5f55\")\n\n\u4e0a\u4ee3\u7801\uff08\u4e16\u4e0a\u6700\u77ed\uff0c\u6ca1\u6709\u4e4b\u4e00\uff09\n\n```cpp\n#include <bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\nint a[10001],b[10001],c[10001],n,m,s[10000001];\n//s\u662f\u51fd\u6570\u503c\uff0cabc\u5206\u522b\u4ee3\u88683\u4e2a\u53c2\u6570\nint main(){\n    scanf(\"%d %d\",&n,&m);//\u8bfb\u5165n,m\n    for(int i=1;i<=n;i++) scanf(\"%d %d %d\",&a[i],&b[i],&c[i]);//\u8bfb\u51653\u4e2a\u53c2\u6570\n    for(int i=1;i<=n;i++) for(int j=1;j<=100;j++) s[j+(i-1)*100]=a[i]*j*j+b[i]*j+c[i];//\u8ba1\u7b97\n    std::sort(s+1,s+1+n*100);//\u5feb\u6392\n    for(int i=1;i<=m;i++) printf(\"%d \",s[i]);//\u8f93\u51fa}\n```\n\u9a97\u5206\u5927\u6cd5\u597d\uff01\uff08\u6b64\u65b9\u6cd5\u4ec5\u4f9b\u65e0\u601d\u8def\u65f6\u4f7f\u7528\uff0c\u6b63\u89c4\u8003\u8bd5\uff0c\u8bf7\u614e\u7528\uff01\uff09\n",
        "postTime": 1514467967,
        "uid": 51621,
        "name": "Altria_Pendragon_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u524dm\u5c0f\u7684\u6570\uff0c\u5f88\u5bb9\u6613\u60f3\u5230 **\u5bf9\u9876\u5806\u7684\u7ecf\u5178\u95ee\u9898\u7b2ck\u5927\u6570\n**\u5e76\u4e14\u8fd9\u9898\u975e\u5e38\u826f\u5fc3\uff0cm\u7684\u503c\u4e0d\u4f1a\u6539\u53d8\n\n\u90a3\u4e48\u5b83\u7684\u601d\u60f3\u548c**\u5bf9\u9876\u5806**\u5c31\u975e\u5e38\u7c7b\u4f3c\u4e86\n\n\u5bf9\u9876\u5806\uff1a\u4ee5\u6c42\u7b2ck\u5927\u6570\u4e3a\u4f8b\uff0c\u5177\u4f53\u64cd\u4f5c\u9700\u8981\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u4e00\u4e2a\u5c0f\u6839\u5806\u3002\u5927\u6839\u5806\u4e2d\u5b58\u7b2ck+1\u5927\u5230\u6700\u5c0f\u7684\u6570\u5b57\uff0c\u5c0f\u8ddf\u5806\u4e2d\u5b58\u7b2c\u4e00\u5927\u5230\u7b2ck\u5927\u6570\u5b57\u3002\u6bcf\u6b21\u52a0\u5165\u65b0\u6570\u5b57\uff0c\u4e0e\u5c0f\u8ddf\u5806\u7684top\u6bd4\u8f83\uff0c\u5982\u82e5\u6bd4top\u5927\uff0c\u5c06\u5c0f\u6839\u5806\u7684\u6839\u52a0\u5165\u5927\u6839\u5806\u4e2d\uff0c\u518d\u5c06\u5c0f\u6839\u5806\u7684\u6839pop\u51fa\u6765\uff0c\u5c06\u8981\u52a0\u5165\u7684\u65b0\u6570\u5b57\u653e\u5165\u5c0f\u8ddf\u5806\uff1b\u5982\u82e5\u6bd4\u5c0f\u6839\u5806top\u5c0f\uff0c\u76f4\u63a5\u52a0\u5165\u5927\u6839\u5806\u3002\n\n\u5bf9\u9876\u5806\u4e2d\u9700\u8981\u5927\u6839\u5806\u7684\u539f\u56e0\u662f\u5b83\u7684k\u6839\u636e\u4e0d\u540c\u9898\u610f\u53ef\u80fd\u4f1a\u6539\u53d8\uff08\u6bd4\u5982\u6bcf\u6b21k++\u5566\u4e4b\u7c7b\u7684\uff09\uff0c\u800c\u8fd9\u9898\u7684m\u4e0d\u4f1a\u53d8\uff0c\u6240\u4ee5\u5c31\u4e0d\u9700\u8981\u5b58\u7b2cm+1\u5c0f\u5230\u6700\u5927\u7684\u6570\u5566\uff0c**\u76f4\u63a5\u628a\u5b83\u4eec\u4e22\u6389\u597d\u4e86**\n\n\u6240\u4ee5\u6211\u4eec\u5efa\u4e00\u4e2a**\u5927\u6839\u5806**\uff0c\u5b58\u6700\u5c0f\u7684\u6570\u5230\u7b2cm\u5c0f\u7684\u6570\uff0c\u7b2cm\u5c0f\u7684\u6570\u5c31\u7406\u6240\u5f53\u7136\u7684\u662f\u5806\u9876\u4e86\u3002\n\u6bcf\u6b21\u6211\u4eec\u53ea\u9700\u8981\u6bd4\u8f83\u65b0\u52a0\u8fdb\u6765\u7684\u6570\u6bd4\u5806\u9876\u5927\u8fd8\u662f\u6bd4\u5806\u9876\u5c0f\uff0c\u5982\u679c\u6bd4\u5806\u9876\u5c0f\uff0c\u5c06\u539f\u6765\u7684\u5806\u9876\u4e22\u6389\uff0c\u5c06\u65b0\u7684\u6570\u585e\u8fdb\u53bb\uff1b\n\u5982\u82e5\u6bd4\u5806\u9876\u5927\uff0c\u6839\u636e\u8be5\u9898\u9898\u610f\uff0ca>0&&b>0\uff0c\u51fd\u6570\u5bf9\u79f0\u8f74$x=-b/2*a$\u6052\u5c0f\u4e8e0\uff0c\u53ef\u4ee5\u5f97\u51fa\uff0cy\u5728x>0\u65f6\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u7684\u51fd\u6570\u503cy\u53ea\u4f1a\u5927\u4e0d\u4f1a\u5c0f\uff0c**\u53ef\u4ee5\u76f4\u63a5break\u6389\u4e86**\n\n\u7531\u4e8e\u6211\u4eec\u5b58\u50a8\u7684\u65f6\u5019\u7528\u7684\u662f\u5927\u6839\u5806\uff0c\u6240\u4ee5\u8bb0\u5f97\u8981\u9006\u5e8f\u8f93\u51fa\uff0c\u5c06m\u4e2a\u6570\u4ece\u5c0f\u5230\u5927\u8f93\u51fa\u55f7\n```\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <queue>\nusing namespace std;\npriority_queue<int> q;\nint n,m,a,b,c,ans[100005];\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tint k;\n\t\t\tk=a*j*j+b*j+c;//k\u4e3a\u51fd\u6570\u503cy\n\t\t\tif(i==1) q.push(k);\n\t\t\telse{\n\t\t\t\tif(k<q.top()){\n\t\t\t\t\tq.push(k);\n\t\t\t\t\tq.pop();\n\t\t\t\t}\n\t\t\t\telse break;\n         //\u5982\u679ck\u5df2\u7ecf\u5927\u4e8e\u7b2cm\u5c0f\u7684\u6570\u4e86\uff0c\u63a5\u4e0b\u6765k\u4ecd\u65e7\u5355\u8c03\u9012\u589e\n         //\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5break\u6389\uff0c\u4e00\u4e2a\u91cd\u8981\u7684\u4f18\u5316\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tans[i]=q.top();\n\t\tq.pop();\n\t}//\u8bb0\u5f97\u8981\u9006\u7740\u8f93\u51fa\uff01\n\tfor(int i=m;i>=1;i--)\n\t\tprintf(\"%d \",ans[i]);\t\n\treturn 0;\n}\n```",
        "postTime": 1540885127,
        "uid": 44424,
        "name": "zhutier",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u4e0e\u201c\u5e8f\u5217\u5408\u5e76\u201d\u4e00\u6837\u7684\u601d\u8def\u3002\u6613\u8bc1x=1\u65f6\u5404\u51fd\u6570\u503c\u6700\u5c0f\uff0c\u4e8e\u662f\u5148\u628an\u4e2ax=1\u7684\u51fd\u6570\u503c\u653e\u5165\u5c0f\u6839\u5806\u4e2d\uff0c\u5f39\u51fa\u6700\u5c0f\u7684\uff0c\u52a0\u5165\u5f39\u51fa\u7684\u8fd9\u4e2a\u51fd\u6570\u503c\u5bf9\u5e94\u7684\u51fd\u6570\uff0c\u4e14\u5176\u81ea\u53d8\u91cf\u662f\u5f39\u51fa\u7684\u51fd\u6570\u503c\u81ea\u53d8\u91cf+1\u6240\u5f97\u5230\u7684\u51fd\u6570\u503c\uff08\u597d\u7ed5\uff09\u3002\u53ef\u4ee5\u8bc1\u660e\uff08\u5176\u5b9e\u53ea\u662fyy\u4e86\u4e00\u4e0b\uff09\u8fd9\u4e2a\u65b0\u52a0\u5165\u7684\u51fd\u6570\u503c\u4e00\u5b9a\u662f\u5176\u4ed6\u672a\u5728\u5806\u5185\u7684\u51fd\u6570\u503c\u4e2d\u6700\u5c0f\u7684\u3002\u8fd9\u91cc\u6211\u7528\u4e86\u4f18\u5148\u961f\u5217\u7684stl\u548c\u7ed3\u6784\u4f53\uff0c\u91cd\u8f7d\u4e86\u4e0b\u8fd0\u7b97\u7b26\u3002\n\ncode\uff1a\n\n\n    \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nstruct func\n{\n    int a,b,c;\n } f[10004];\nstruct _value\n{\n    int num,x,val;\n}res[100004];\npriority_queue<_value,vector<_value>,less<_value> >q; \nbool operator <(_value a,_value b) {return a.val>b.val;}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d%d%d\",&f[i].a ,&f[i].b ,&f[i].c );\n        q.push( (_value){i,1,f[i].a +f[i].b +f[i].c});\n    }\n    for(int i=1;i<=m;i++){\n        _value t=q.top();\n        q.pop();\n        cout<<t.val <<\" \";\n        q.push((_value){t.num ,t.x +1,f[t.num ].a *(t.x +1)*(t.x +1)+f[t.num ].b *(t.x +1)+f[t.num ].c } );\n    }\n    return 0;\n}\n```",
        "postTime": 1506169514,
        "uid": 38235,
        "name": "yyy14159",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7684\u601d\u8def\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u4e8b\u5b9e\u4e0a\u5c31\u662f\u4e00\u4e2a\u88f8\u7684\u5806\u9898\u3002\n\n\u6211\u4eec\u89c2\u5bdf\u5230\u9898\u76ee\u4e2d $x,a,b,c$ \u5747\u4e3a\u6b63\u6574\u6570\uff0c\u8fd9\u6837\u663e\u7136\u4e8c\u6b21\u51fd\u6570\u5bf9\u79f0\u8f74\u5728 $y$ \u8f74\u5de6\u4fa7\uff0c\u5728 $[1,+\u221e)$ \u533a\u95f4\u5185\u4e3a\u589e\u51fd\u6570\u3002\n\n\u8fd9\u6837\u601d\u8def\u5c31\u5f88\u660e\u786e\u4e86\uff0c\u53d6\u6bcf\u4e2a\u51fd\u6570\u5728 $x=1$ \u7684\u503c\u8fdb\u5806\uff0c\u6bcf\u4e00\u6b21\u53d6\u5806\u9876\u5143\u7d20\uff0c\u5c06\u8fd9\u4e2a\u5143\u7d20\u6240\u5728\u7684\u51fd\u6570 $x+1$ \uff0c\u91cd\u65b0\u8fdb\u5806\uff0c\u8fd9\u6837\u5c31\u505a\u5b8c\u4e86\u8fd9\u9053\u9898\u76ee\u3002\n\n\u672c\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\u0398(mlogn)$\n\n\u672c\u4eba\u8fc7\u61d2\u4e86\uff0c\u4e0d\u60f3\u624b\u5199\u5806\uff0c\u53c8\u60f3\u65f6\u95f4\u77ed\u4e00\u70b9\uff0c\u5c31\u7528\u4e86\u5e73\u677f\u7535\u89c6(pbds\u5e93)\u5927\u6cd5+O3\u4f18\u5316\uff0c\u4eb2\u6d4b\u5355\u70b9\u6700\u957f\u65f6\u95f48ms\uff0c\u548c\u624b\u5199\u5806\u5dee\u4e0d\u591a\u3002\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\uff1a\n```cpp\n#pragma GCC optimize(3)//\u53c2\u52a0NOIP\u65f6\u522b\u5199\uff0c\u8fd9\u662fO3\u4f18\u5316\n#include<bits/stdc++.h>\n#include<ext/pb_ds/priority_queue.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n__gnu_pbds::priority_queue<pair<int,int>,greater<pair<int,int> >,pairing_heap_tag>h;//\u5e73\u677f\u7535\u89c6\u5927\u6cd5\u597d!\u5176\u5b9e\u7528\u666e\u901a\u7684\u4f18\u5148\u961f\u5217\u5c31\u591f\u4e86\nint a[10010],b[10010],c[10010],x[10010];\npair<int,int> tmp;\ninline int mul(int i){\n    return a[i]*x[i]*x[i]+b[i]*x[i]+c[i];\n}\nint main(){\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d%d%d\",&a[i],&b[i],&c[i]);\n        x[i]=1;h.push(make_pair(mul(i),i));//\u5806\u5185\u653e\u4e00\u4e2apair\uff0c\u5206\u522b\u662f\u51fd\u6570\u503c\u548c\u51fd\u6570\u5e8f\u53f7\n    }\n    for(int i=1;i<m;i++){\n        tmp=h.top();x[tmp.second]++;//\u627e\u5230\u6700\u5c0f\u7684\uff0c\u7ed9x\u52a0\u4e0a1\uff0c\u518d\u91cd\u65b0\u8fdb\u5806\n        printf(\"%d \",tmp.first);\n        h.pop();h.push(make_pair(mul(tmp.second),tmp.second));\n    }\n    tmp=h.top();printf(\"%d\\n\",tmp.first);\n    return 0;\n}\n```",
        "postTime": 1526560595,
        "uid": 30889,
        "name": "DavidW",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u9996\u5148\u5148%%%\u5e95\u4e0b\u795e\u7287\u5199\u7684\u5404\u79cd\u5806\uff0c\u7136\u800c\u6211\u662f\u7528**\u4e8c\u5206\u67e5\u627e**\u6765\u505a\u7684\uff0c\u9996\u5148\u7528\u4e8c\u5206\u67e5\u627e\u5224\u65ad\u7b2cm\u4e2a\u6570\u6700\u5927\u662f\u591a\u5c11\uff0c\u7136\u540e\u4ece\u7b2c1\u4e2a\u4e8c\u5143\u4e00\u6b21\u65b9\u7a0b\u7ec4\u5f00\u59cb\u679a\u4e3e\uff0c\u8d85\u8fc7\u6700\u5927\u7684\u8fd9\u4e2a\u6570\u4e86\u7acb\u9a6c\u9000\u51fa\u67e5\u627e\u4e0b\u4e00\u4e2a\uff0c\u5982\u679c\u5f53\u524d\u67e5\u627e\u7684\u8fd9\u4e2a\u6570\u5df2\u7ecf\u4e0d\u5c5e\u4e8e\u524dm\u4e2a\u6570\u4e86\u4f46\u4ecd\u7136\u7b26\u5408\u6761\u4ef6\uff0c\u8bf4\u660e\u4e8c\u5206\u7684\u8fd9\u4e2a\u6570\u5927\u4e86\uff0c\u628a\u5b83\u7f29\u5c0f\uff0c\u5426\u5219\u5982\u679c\u5df2\u7ecf\u641c\u5b8c\u4e86\u7b2c1~n\u4e2a\u65b9\u7a0b\u7ec4\u4ecd\u7136\u8fbe\u4e0d\u5230m\u4e2a\u6570\uff0c\u5c31\u8bf4\u660e\u4e8c\u5206\u7684\u8fd9\u4e2a\u6570\u5c0f\u4e86\uff0c\u628a\u5b83\u589e\u5927\u3002\u4f46\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u6570\u636e\u5982\u5728\u9009\u524d5\u4e2a\u6570\uff0c\u4f46\u662f\u524d\u516d\u4e2a\u6570\u662f\u8fd9\u6837\u7684\uff1a10,11,12,13,14,14\uff0c\u7b2c5\u4e2a\u6570\u548c\u7b2c6\u4e2a\u6570\u76f8\u7b49\u3002\u8fd9\u5c31\u9700\u8981\u5224\u65ad\u4e00\u4e0b\uff0c\u7a0d\u540e\u5728\u4ee3\u7801\u4e2d\u4f1a\u8bf4\u660e\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u7ea6\u4e3a\uff1aO\uff08n log n\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nlong long n,m,i,a[10002],b[10002],c[10002],d[100002],top,min1,l,r,mid,flag,j;\nint main()\n{\n    scanf(\"%lld%lld\",&n,&m);\n    for(i=1;i<=n;i++)\n        scanf(\"%lld%lld%lld\",&a[i],&b[i],&c[i]);\n    l=1;r=2000000000;mid=(l+r)/2;\n    min1=r;\n    while(l<=r)\n    {\n        flag=0;\n        top=0;\n        for(i=1;i<=n&&flag==0;i++)\n            for(j=1;a[i]*j*j+b[i]*j+c[i]<=mid&&flag==0;j++)\n            {\n                d[++top]=a[i]*j*j+b[i]*j+c[i];\n                if(top>m)\n                    flag=1;\n            }\n        if(top<m)\n            l=mid+1;\n        else\n        {\n            r=mid-1;\n            min1=min(mid,min1);//\u5f53\u4e00\u6837\u7684\u65f6\u5019\u628a\u80fd\u5305\u542b\u5927\u4e8e\u7b49\u4e8em\u4e2a\u6570\u7684\u6700\u5c0f\u503c\u8bb0\u5f55\u4e0b\u6765\uff0c\u8f93\u51fa\u7684\u65f6\u5019\u6309\u7167\u6700\u5c0f\u7684\u8f93\u51fa\u524dm\u4e2a\u6570\uff0c\u8fd9\u6837\u867d\u7136\u4f1a\u591a\u4e0a\u90a3\u4e48\u51e0\u4e2a\u70b9\u4f46\u662f\u4e5f\u5c31\u51e0\u4e2a\u800c\u5df2\n        }\n        mid=(l+r)/2;\n    }\n    top=0;\n    for(i=1;i<=n;i++)\n        for(j=1;a[i]*j*j+b[i]*j+c[i]<=min1;j++)\n            d[++top]=a[i]*j*j+b[i]*j+c[i];\n    sort(d+1,d+top+1);\n    for(i=1;i<=m;i++)\n        printf(\"%d \",d[i]);\n    cout<<endl;\n    return 0;\n}\n```",
        "postTime": 1507811810,
        "uid": 20578,
        "name": "ningyuheng",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4ece\u8868\u9762\u4e0a\u770b\u8d77\u6765\u7b80\u5355\uff0c\u80af\u5b9a\u6709\u5f88\u591a\u4eba\u5fcd\u4e0d\u4f4f\u5c31\u60f3\u7528O(n*m)\u7684\u7b97\u6cd5\u5f3a\u884c\u66b4\u529b\u3002\u4f46\u770b\u5230\u5927\u5927\u7684**n\uff0cm $\\leq$ 10000**\u65f6,\u5982\u679c\u4f60\u4e0d\u60f3\u4f60\u7684\u5c4f\u5e55\u4e0a\u51fa\u73b0\u4e00\u5806\u6df1\u84dd\uff0c\u8bf7\u505c\u4e0b\u4f60\u7684\u51b2\u52a8\uff01\uff01\uff01\n\n\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u4e09\u4e2a\u6b65\u9aa4\uff0c\u5c31\u80fd\u89e3\u51b3\u8fd9\u9053\u6709\u8da3(~~\u6076\u5fc3~~)\u7684\u9898\u3002\n\n**1.\u5206\u6790\u51fd\u6570\u7684\u6027\u8d28**\n\n\u9996\u5148\u503c\u5f97\u6211\u4eec\u6ce8\u610f\u7684\u662f\uff1aAi,Bi,Ci\u7686\u662f\u6b63\u6574\u6570\uff01\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\uff0c\u867d\u7136\u8bf4\u662f\u6574\u6570\u4e5f\u53ef\u4ee5\u505a\uff0c\u4f46\u6b63\u6574\u6570\u66f4\u6709\u5229\u4e8e\u6211\u4eec\u5206\u6790\u9898\u76ee\uff0c\u51cf\u5c11\u7801\u91cf\u3002\n\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u6ce8\u610f\u5230\uff0cF(x)\u662f\u4e00\u4e2a\u4e8c\u6b21\u51fd\u6570\uff0c\u8fd9\u662f\u89e3\u9898\u7684\u5173\u952e\u3002\n\n**\u4e8c\u6b21\u51fd\u6570**\u662f\u4e2a\u597d\u4e1c\u897f\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u4ed6\u7684\u51fd\u6570\u56fe\u50cf\uff1a![](https://cdn.luogu.com.cn/upload/pic/61858.png)\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c**\u5f53x>0\u65f6,x\u8d8a\u5927,F(x)\u8d8a\u5927**\uff08\u8fd9\u91cc\u5c31\u7528\u4e0a\u4e86\u6b63\u6574\u6570\uff09\u3002\uff08\u5982\u679c\u4f60\u4e0d\u4fe1\uff0c\u4f60\u53ef\u4ee5\u591a\u8bd5\u51e0\u4e2a\u51fd\u6570\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u8ddf\u4e8c\u6b21\u51fd\u6570\u7684\u5355\u8c03\u6027\u548c\u5bf9\u79f0\u8f74\u6709\u5173\uff0c\u8fd9\u91cc\u4e0d\u505a\u8fc7\u591a\u89e3\u91ca\uff09\n\n\u8fd9\u5c31\u610f\u5473\u7740\uff0c\u6bcf\u4e2a\u51fd\u6570\u7684\u5927\u5c0f\u987a\u5e8f\u90fd\u662f\u4ece1\u5f00\u59cb\uff0c**F(n+1)>F(n) (n$\\in$N+)**\n\n\u63a5\u4e0b\u6765\uff0c\u8fd0\u7528\u4ee5\u4e0a\u5f0f\u5b50\uff0c\u6211\u4eec\u5f00\u59cb\u7b2c\u4e8c\u6b65\u3002\n\n**2.\u5bfb\u627e\u95ee\u9898\u7684\u672c\u8d28**\n\n\u9898\u76ee\u8bf4\u8981\u6311\u51fa\u6700\u5c0f\u7684m\u4e2a\u51fd\u6570\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u4ece\u7b80\u5355\u5206\u6790\uff1a**\u5982\u4f55\u6311\u51fa\u6700\u5c0f\u7684\u4e00\u4e2a\u51fd\u6570\u503c**\n\n\u5173\u6ce8\u7684\u91cd\u70b9\uff1a**\u6b64\u65f6F(x)\u4e2d\u7684x\u662f\u591a\u5c11\uff1f**\n\n\u6ce8\u610f\uff1aF(n+1)>F(n),\u8fd9\u5c31\u8bf4\u660e\u6bcf\u4e2a\u51fd\u6570\u90fd\u6709**x=1\u65f6\u6709\u6700\u5c0f\u503c**\uff01\n\n\u6240\u4ee5\u6700\u5c0f\u503c\u5c31\u5728Fi(1)\u4e2d\u3002\n\n\u90a3\u7b2c\u4e8c\u5c0f\uff0c\u7b2c\u4e09\u5c0f......\u7b2ck\u5c0f\u600e\u4e48\u53d6\uff1f\n\n\u6b64\u65f6\u6211\u4eec\u5df2\u7ecf\u628a\u524dk-1\u5c0f\u7684\u6570\u53d6\u51fa\u6765\u4e86\u3002\u5b83\u4eec\u5df2\u7ecf\u4e0d\u80fd\u518d\u9009\u4e86\u3002\u90a3\u4e48\u6bcf\u4e2a\u51fd\u6570\u90fd\u5fc5\u7136\u6709\u4e00\u4e2ax\u672a\u88ab\u9009\u8fc7\u4e14\u6700\u5c0f\u3002\n\n\u518d\u6b21\u8fd0\u7528F(n+1)>F(n)\uff0c\u53ef\u4ee5\u63a8\u51fa\u6b64\u65f6\u7684x\u6ee1\u8db3F(x)\u662f\u5728F\u51fd\u6570\u4e2d\u672a\u88ab\u53d6\u8fc7\u4e2d\u7684\u6700\u5c0f\u503c\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff1a**\u53d6\u4e0b\u4e00\u5c0f\u7684\u51fd\u6570\u503c\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u5c06\u6bcf\u4e00\u4e2a\u51fd\u6570\u4e2d\u4ece\u5c0f\u5230\u5927\u7b2c\u4e00\u4e2a\u672a\u88ab\u9009\u7684x\u6311\u51fa\u8ba1\u7b97\u51fd\u6570\u503c\uff0c\u518d\u6bd4\u5927\u5c0f\uff0c\u8df3\u51fa\u5176\u4e2d\u6700\u5c0f\u503c\u5373\u53ef\u3002\u800cx\u5fc5\u7136\u662f\u6bcf\u6b21\u52a01\u7684\uff01**\n\n\u5982\u4e0b\u56fe\uff0c\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff0c\u82e5\u6211\u4eec\u8981\u53d6\u51fa\u7b2c\u4e94\u4e2a\u6570![](https://cdn.luogu.com.cn/upload/pic/61861.png)\n\n\u6b64\u65f6\u9ec4\u8272\u90e8\u4f4d\u7686\u5df2\u7ecf\u53bb\u8fc7\uff0c\u6211\u4eec\u53ea\u9700\u628a\u6bcf\u4e2a\u51fd\u6570\u672a\u88ab\u67d3\u6210\u9ec4\u8272\u7684\u6700\u5c0fx\u5f97\u51fa\u7684F(x)\u8fdb\u884c\u6bd4\u8f83\uff08\u56fe\u4e2d\u7ea2\u8272\uff0c\u84dd\u8272\u90e8\u5206\uff09\uff0c\u6311\u51fa\u5176\u4e2d\u6700\u5c0f\u503c\uff08\u56fe\u4e2d\u7ea2\u8272\u90e8\u5206\uff09\u5373\u53ef\u3002\n\n**3.\u4f7f\u7528\u5408\u9002\u7684\u4f18\u5316\u7b97\u6cd5**\n\nWell done.\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u628a\u8fd9\u9053\u9898\u7684\u672c\u8d28\u7422\u78e8\u900f\u4e86\u3002\u4f46\u8fd8\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u5982\u679c\u6211\u4eec\u4e0d\u8fdb\u884c\u4f18\u5316\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662fO(m*n)\u3002\n\n\u65f6\u95f4\u6d6a\u8d39\u5728\u54ea\uff1f\u95ee\u9898\u5c31\u5728**\u6211\u4eec\u5bf9\u5f88\u591a\u51fd\u6570\u503c\u90fd\u8fdb\u884c\u4e86\u591a\u6b21\u91cd\u590d\u6392\u5e8f\uff0c\u800c\u6211\u4eec\u53ea\u9700\u6dfb\u52a0\u4e00\u4e2a\u6570\uff0c\u53d6\u51fa\u6700\u5c0f\u503c\u3002**\n\n\u7b49\u7b49\uff0c\u8fd9\u4e0d\u5c31\u662f**\u5806\u7684\u7528\u9014**\u5417\uff1f\n\n\u6211\u4eec\u53ea\u9700**\u628a\u5f53\u524d\u9700\u8981\u6bd4\u8f83\u7684\u6240\u6709F(x)\u653e\u5165\u4e00\u4e2a\u5c0f\u6839\u5806**\u5373\u53ef\uff0c\u4e4b\u540e**\u53ea\u9700\u53d6\u51fa\u5806\u9876\uff0c\u518d\u628a\u5806\u9876\u6240\u5728\u51fd\u6570\u7684\u4e0b\u4e00\u4e2ax\u5f97\u51fa\u7684F(x)\u653e\u5165\u5806\u4e2d\u5373\u53ef**\uff01\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u6210\u529f\u88ab\u4f18\u5316\u81f3O(m*log(n));\n\n\u987a\u5229\u89e3\u51b3\uff01\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<iomanip>\n#include<algorithm>\n#include<queue>\nusing namespace std;\n#define re register\nint l[10005],a[10005],b[10005],c[10005];\nstruct cmp\n{\n    bool operator()(const pair<int,int> a,const pair<int,int> b)\n    {\n        return a.first>b.first;\n    }\n};\npriority_queue<pair<int,int>,vector<pair<int,int> >,cmp> q;\nint f(int ma,int mb,int mc,int mx)\n{\n    return ma*mx*mx+mb*mx+mc;\n}\nint main()\n{\n    re int i;\n    int n,m;\n    cin>>n>>m;\n    for(i=1;i<=n;i++)\n    {\n        cin>>a[i]>>b[i]>>c[i];\n        l[i]=1;\n        pair<int,int> p;\n        p.first=f(a[i],b[i],c[i],l[i]);\n        p.second=i;\n        q.push(p);\n    }\n    for(i=1;i<=m;i++)\n    {\n        pair<int,int> p=q.top();\n        q.pop();\n        cout<<p.first<<\" \";\n        int t=p.second;\n        l[t]++;\n        p.first=f(a[t],b[t],c[t],l[t]);\n        q.push(p);\n    }\n    return 0;\n}\n```\n\n\u5907\u6ce8\uff1a\n\n1.\u672c\u9898\u82e5\u60f3\u7528STL\uff0c\u53ef\u80fd\u9700\u8981\u7528\u5230pair\uff0c\u5efa\u7acbpair\u4f18\u5148\u961f\u5217\u53ef\u4ee5\u89c1[\u67d0\u5927\u4f6c\u5173\u4e8e\u6b64\u7684\u6587\u7ae0](https://blog.csdn.net/potential1/article/details/73195172)\uff0c\u94fe\u63a5\uff1ahttps://blog.csdn.net/potential1/article/details/73195172 \u6216\u4e0a\u7f51\u641c\u7d22\u3002\n\n2.\u4e0d\u5efa\u8bae\u9a97\u5206(~~\u867d\u7136\u603b\u6bd4\u6ca1\u5206\u597d~~)\uff0c\u5373\u4f7f\u9a97\u5206\u597d\u50cf\u80fd\u8fc7\u8fd9\u9053\u9898\u3002\u6211\u4eec\u8981\u6709\u4e00\u9897\u8ffd\u6c42\u6b63\u89e3\u7684\u5fc3\u3002\n\n3.\u6b64\u6587\u662f\u672c\u4eba\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u6709\u8bef\u8bf7\u89c1\u8c05\uff0c\u6709\u7591\u95ee\u53ef\u4ee5\u63d0\u51fa\uff0c\u591a\u8c22\u3002",
        "postTime": 1561996873,
        "uid": 130745,
        "name": "HXH2148",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "# \u672c\u9898\u89e3\u5341\u5206\u4e0d\u6b63\u7ecf\n\n#### \u672c\u849f\u84bb\u6700\u5148\u6253\u7684\u66b4\u529b\u662f\n\n\u7b97\u51fa\u6bcf\u4e2a\u51fd\u6570\u7684\u524d$m$\u4e2a\u503c\uff0c\u653e\u5165\u5806\u4e2d\uff0c\u7136\u540e\u66b4\u529b\u6c42\u51fa\u6765,\u55ef\n\n[\u8bb0\u5f55](https://www.luogu.org/record/show?rid=8399608) $2AC+8TLE$\n\n# \u5f53\u60a8\u60f3\u4e0d\u5230\u7684\u65f6\u5019\u4fbf\u8981\u9a97\u5206\n\n\u7136\u540e\u6211\u5c31\u60f3\u4f18\u5316\u4e00\u4e0b\uff0c\u641e\u4e86\u534a\u5929\u65e0\u4ece\u4e0b\u624b\uff0c\u7a81\u7136\u60f3\u5230\u6211\u8fd8\u6709$rand()$\uff01\n\n\u4e8e\u662f\u6211\u5c31\u628a\u4e0a\u9762\u7684\u6539\u4e86\u4e00\u4e0b\uff0c\u7b97\u51fa\u6bcf\u4e2a\u51fd\u6570\u7684\u524d$rand()~mod~m$\u4e2a\u503c\n\n```cpp\nvoid getsmallest(){\n        int maxn=rand()%m+1;\n        for(int i=1;i<=maxn;i++){\n            q.push(value(i));\n        }\n}\n```\n\n\u4e8e\u662f\u4e4e[\u8bb0\u5f55](https://www.luogu.org/record/show?rid=13406372) $2AC+8TLE$\n\n### \u968f\u673a\u505a\u6cd5\u4f3c\u4e4e\u9677\u5165\u4e86\u56f0\u5883\n\n\u4f46\u662f\uff0c\u968f\u673a\u4e0d\u5c31\u662f\u4e71\u641e\u5417\uff1f\u4e71\u641e\u603b\u4f1a\u641e\u51fa\u6765\u7684\uff0c\u4e8e\u662f\u6211\u53c8\u6539\u4e86\u6539\u4ee3\u7801\n\n```cpp\nvoid getsmallest(){\n        for(int i=1;i*i<=m*(rand()%m/30+1);i++){\n            q.push(value(i));\n        }\n    }\n```\n\n\u4e8e\u662f\u8fd9\u5c31\u8fc7\u53bb\u4e86\uff1f\uff1f\uff1f\uff1f\n\n[\u8bb0\u5f55](https://www.luogu.org/recordnew/show/13407112) \n\n# \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#include<queue>\n#include<vector>\nusing namespace std;\npriority_queue <int,vector<int>,greater<int> > q;  \nint tot,n,m;\nlong long abs(long long a){\n    return a>0?a:-a;\n}\nstruct function{\n    int xishu2,xishu1,changshu;\n    long long value(int x){\n        return xishu2*x*x+xishu1*x+changshu;\n    }\n    void getfunc(){\n        scanf(\"%d%d%d\",&xishu2,&xishu1,&changshu);\n        return;\n    }\n    void getsmallest(){\n        for(int i=1;i*i<=m*(rand()%m/30+1);i++){\n            q.push(value(i));\n        }\n    }\n}h[10000+5];\nint main(){\n    srand(19260817);\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\th[i].getfunc(),h[i].getsmallest();\n    for(int i=1;i<=m;i++){\n        printf(\"%d \",q.top());\n        q.pop();\n    }\n    return 0;\n}\n```\n\n# \u4e0d\u8981\u5fd8\u8bb0\u5728NOIP\u65f6\uff0c\u60a8\u8fd8\u6709\u4e00\u79cd\u7b97\u6cd5\u53eb\u968f\u673a\u7b97\u6cd5",
        "postTime": 1541597278,
        "uid": 47863,
        "name": "Imakf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "## \u5806\u7684\u6c34\u9898\n### \u9898\u610f\u5728\u6b64\u5c31\u4e0d\u8fdb\u884c\u5206\u6790\u4e86\uff0c\u524d\u9762\u7684\u5e26\u4f6c\u5206\u6790\u7684\u5f88\u6e05\u695a\uff0c\u5c31\u662f\u6c42\u6240\u6709\u51fd\u6570\u7684\u6700\u5c0f\u7684\u524dm\u4e2a\u51fd\u6570\u503c\n\n### \u5173\u952e\u70b9\uff1a\u5728\u7ed3\u6784\u4f53\u4e2d\u91cd\u8f7d\u8fd0\u7b97\u7b26\n\n\u50cf\u6211\u8fd9\u79cd\u849f\u84bb\uff0c\u770b\u5230\u8fd9\u9053\u9898\u53ea\u4f1a\u60f3\u66b4\u529b\u65b9\u6cd5\uff08\u7ed3\u6784\u4f53+\u4f18\u5148\u961f\u5217+\u679a\u4e3e\uff09\uff0c\u53ef\u662f\u7801\u7740\u7801\u7740\u4ee3\u7801\uff0c\u53d1\u73b0\u5c31\u4e0d\u4f1a\u7ed3\u6784\u4f53\u4e2d\u7684**\u91cd\u8f7d\u8fd0\u7b97\u7b26**\u4e86...\u4e8e\u662f\uff0c\u53ea\u597d\u5148\u5c06\u8fd9\u4e2a\u9898\u653e\u5230\u4e00\u8fb9\u3002\n\n\u7136\u540e\uff0c\u8fc7\u4e86\u51e0\u5929\uff0c\u5728\u5b66\u5806\u4f18\u5316\u7684dijisktra\u65f6\u5b66\u4f1a\u4e86\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u65b9\u6cd5\uff0c\u4e8e\u662f\u987a\u5e26\u624b\u7684\u5c31\u628a\u8fd9\u9053\u9898A\u4e86\uff08\u867d\u8bf4\u6211\u5230\u73b0\u5728\u4e5f\u8fd8\u4e0d\u61c2\u5b83\u7684\u539f\u7406\u662f\u4ec0\u4e48...\uff09\n\n[https://www.luogu.org/record/26234733](\u8fc7\u6765\u5eb7\u5eb7)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nint a[10005],b[10005],c[10005];\nstruct node{\n\tint y;//y\u662f\u56e0\u53d8\u91cf\n\tint num;//\u51fd\u6570\u5f0f\u7684\u7f16\u53f7\n\tint x;//x\u662f\u81ea\u53d8\u91cf\n\tbool operator < (const node &a)const//\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u5728\u6700\u77ed\u8def\u4e2d\u4e5f\u662f\u8fd9\n        {\t\t\t\t\t\t//\u6837\uff0c\u56fa\u5b9a\u5199\u6cd5\n\t\treturn a.y<y;\n\t}\n};//\u5b9a\u4e49\u51fd\u6570\u503c\u7684\u7ed3\u6784\u4f53\u3002\npriority_queue<node> q;\nint main ()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i]>>b[i]>>c[i];//\u8f93\u5165\u51fd\u6570\u7684\u5404\u4e2a\u7cfb\u6570\n\t\tq.push((node){a[i]+b[i]+c[i],i,1});//\u5c06x=1\u65f6\u7684\u51fd\u6570\u503c\u538b\u5165\u961f\u5217\n\t}\n\tfor(int i=1;i<=m;i++)//\u8f93\u51fa\n\t{\n\t\tnode tmp=q.top();q.pop();\n\t\tcout<<tmp.y<<\" \";\n\t\t\n\t\tq.push((node){a[tmp.num]*(tmp.x+1)*(tmp.x+1)+b[tmp.num]*(tmp.x+1)+c[tmp.num],tmp.num,tmp.x+1});\n        //\u5c06\u4e0b\u4e00\u4e2a\u51fd\u6570\u503c\u538b\u5165\u961f\u5217\uff0c\u5927\u5bb6\u6162\u6162\u770b\uff0c\u5176\u5b9e\u5f88\u597d\u61c2\n\t}\n\t\n\treturn 0x7fffffff;\n}\n```\n\u4e0d\u8981\u6284\u88ad\n",
        "postTime": 1572766649,
        "uid": 129782,
        "name": "Lee02",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "/\\*\n\u6bcf\u4e2a\u51fd\u6570\u7684a,b,c\u90fd\u662f\u6b63\u6570\n\n\u6240\u4ee5\u6bcf\u4e2a\u629b\u7269\u7ebf\u7684\u5bf9\u79f0\u8f74\u90fd\u662f\u8d1f\u6570\n\n\u6240\u4ee5\u6bcf\u6761\u629b\u7269\u7ebf\u5728x>=1\u65f6\u90fd\u662f\u589e\u51fd\u6570\n\n\u6240\u4ee5fi(1)\u4e00\u5b9a\u662f\u8be5\u629b\u7269\u7ebf\u6700\u5c0f\u503c\n\n\u6240\u4ee5\u9996\u5148\u628a\u6240\u6709\u7684fi(1)\u90fd\u653e\u5230\u4f18\u5148\u961f\u5217\u91cc\u9762\n\n\u6bcf\u6b21\u76f4\u63a5\u8f93\u51fa\u4f18\u5148\u961f\u5217\u7684top\u503c\n\n\u7136\u540e\u628atop\u503c\u6240\u5bf9\u5e94\u7684\u51fd\u6570\u7684x+1\u7684\u503c\u653e\u5230\u961f\u5217\u91cc\u9762\n\n\u5faa\u73afn\u6b21\u5c31\u662f\u7b54\u6848\n\n\\*/\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<queue>\n#include<algorithm>\n\nusing namespace std;\n\n#define ll long long\n#define MAX 500010\n\n//priority_queue<ll> fun;\n\nstruct Node\n{\n        ll val;\n        ll X;\n        ll from;\n};\n\nbool operator <(Node a,Node b)\n{\n       return a.val>b.val;\n}\n\npriority_queue<Node> fun;\n\nll a[MAX],b[MAX],c[MAX];\nll n,m;\n\ninline ll Function(ll n,ll x)\n{\n       return a[n]*x*x+b[n]*x+c[n];\n}\n\nint main()\n{\n    \n       freopen(\"minval.in\",\"r\",stdin);\n       freopen(\"minval.out\",\"w\",stdout);\n       \n       scanf(\"%lld%lld\",&n,&m);\n       \n       ll S,num=0,x=0;\n\n       for(int i=1;i<=n;++i)\n       {\n                 scanf(\"%lld%lld%lld\",&a[i],&b[i],&c[i]);\n                 fun.push((Node){Function(i,1),1,i});\n       }\n       \n       for(ll i=1;i<=m;++i)\n       {\n               Node Q=fun.top();\n               cout<<Q.val<<' ';\n               fun.pop();\n               fun.push((Node){Function(Q.from,Q.X+1),Q.X+1,Q.from});\n       }\n       \n       return 0;\n}\n```",
        "postTime": 1496715271,
        "uid": 21283,
        "name": "yybyyb",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1\u5de6\u504f\u6811\u505a\u672c\u9898\u7684\u601d\u8def  \n\n------\n\n### \u524d\u7f6e\u7ed3\u8bba\n\n\u7136\u800c\u601d\u8def\u5176\u5b9e\u5c31\u662f\u6839\u636e\u6bcf\u4e00\u4e2a\u51fd\u6570\u90fd\u662f\u5728\u6b63\u6574\u6570\u57df\u4e0a\u5355\u8c03\u9012\u589e\u7684\u6027\u8d28  \n\n\u8fdb\u884c~~\u4e71\u641e\uff08\u4e0d\u662f~~\n\n\n------\n\n### \u5177\u4f53\u505a\u6cd5\n\n~~\u6570\u636e\u89c4\u6a21\u600e\u4e48\u8bf4\uff1f\u6c34\u554a~~\n\n\u5176\u5b9e\u8fd9\u9898\u641e\u6cd5\u5f88\u591a\u7684  \n\n\u5173\u952e\u5728\u4e8e\u6570\u636e\u8303\u56f4$m\\leq 10000$\uff0c\u53ea\u670910000\u800c\u5df2  \n\n\u4f46\u662f\u4f18\u96c5\u7684\u65b9\u5f0f\u8fc7\u6b64\u9898\n\n\u8fd8\u662f$nlogn$\u597d\n\n\u7136\u540e\u7531\u4e8e\u90fd\u662f\u9012\u589e\u7684  \n\n\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u6bcf\u4e00\u4e2a\u51fd\u6570\u8fdb\u884c\u6392\u5e8f\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u51fd\u6570\u4ed6\u7684\u5bfc\u6570\u5e94\u5f53\u662f\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684\u4e00\u6b21\u67ff\u5b50\n\n\u90a3\u4e48\u8981\u627e\u7684\u51fd\u6570\u503c\u5e94\u8be5\u5c31\u662f\u6765\u81ea\u589e\u957f\u6700\u4e0dnb\u7684\u51fd\u6570  \n\n\u6211\u4eec\u5bf9\u7740\u8fd9\u4e9b\u51fd\u6570\u8fdb\u884c\u4e00\u4e2a\u52a8\u6001\u7684\u6392\u5e8f\n\n\u5c31\u7528\u5230\u4e86\u5806\n\n~~\u5176\u5b9e\u8fd9\u4e2a\u5de6\u504f\u6811\u53ea\u662f\u5806\u7684\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f\u7f62\u4e86~~\n\n------\n\n### \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include <iostream>\n#include <cstdlib>\n#include <cstdio>\n#include <utility>\n\nusing namespace std;\ntypedef pair<int, int> prii;\nstruct Heap\n{\n    Heap *lson, *rson;\n    int dist;\n    prii val;\n    Heap()\n    {\n    \tlson = rson = NULL;\n    \tdist = 0, val = make_pair(0, 0);\n\t}\n}*root = NULL;\n\nvoid set_dist(Heap *node)\n{\n    if (node->rson != NULL)\n        node->dist = node->rson->dist + 1;\n    else node->dist = 0;\n}\n\nHeap *merge(Heap *a, Heap *b)\n{\n\t//\u4e00\u4e2a\u8282\u70b9\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u8fd4\u56de\u53e6\u4e00\u4e2a\u8282\u70b9 \n    if (a == NULL) return b;\n    else if (b == NULL) return a;\n    //\u5c06\u6743\u503c\u8f83\u5c0f\u7684\u4f5c\u4e3a\u6839\u7ed3\u70b9\n    if (a->val > b->val) swap(a, b);\n    //\u5408\u5e76\u53f3\u513f\u5b50\u548c\u5927\u6743\u503c\u8282\u70b9\n    a->rson = merge(a->rson, b);\n    if (a->rson != NULL && a->lson != NULL)\n    {\n        if (a->lson->dist < a->rson->dist)\n            swap(a->lson, a->rson);\n    }\n    else if (a->lson == NULL && a->rson != NULL)\n        swap(a->lson, a->rson);\n    set_dist(a);\n    return a;\n}\n\nvoid Insert(prii val)\n{\n    //\u5fc5\u987b\u5148\u7279\u5224\u5806\u662f\u7a7a\u7684\u7ed3\u679c\n    if (root == NULL)\n    {\n        root = new Heap();\n        root->val = val;\n        set_dist(root);\n        return ;\n    }\n    Heap *num = new Heap();\n    num->val = val;\n    set_dist(num);\n    root = merge(root, num);\n}\n\nprii Top()\n{\n    if (root != NULL)\n        return root->val;\n    else return make_pair(0, 0); //rand();\n}\n\nvoid Pop()\n{\n    Heap *temp = root;\n    root = merge(root->lson, root->rson);\n    delete(temp);\n}\nconst int maxn = 10010;\nint a[maxn], b[maxn], c[maxn], x[maxn];\nint n, m;\ninline int f(int i)\n{\n    return a[i] * x[i] * x[i] + b[i] * x[i] + c[i];\n}\n\nint main()\n{\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= n; i++)\n    {\n        scanf(\"%d%d%d\", &a[i], &b[i], &c[i]);\n        x[i] = 1;\n        Insert(make_pair(f(i), i));\n    }\n    for (int i = 1; i < m; i++)\n    {\n        prii now = Top();\n        Pop();\n        x[now.second] ++;\n        printf(\"%d \", now.first);\n        Insert(make_pair(f(now.second), now.second));\n    }\n    printf(\"%d\\n\", Top().first);\n    return 0;\n}\n//9 12 12 19 25 29 31 44 45 54\n```",
        "postTime": 1570612392,
        "uid": 122927,
        "name": "Jelly_Goat",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a$n$\u4e2a\u4e8c\u6b21\u51fd\u6570\u7684\u6b63\u6574\u6570\u7cfb\u6570\uff0c\u7b2c$i$\u4e2a\u51fd\u6570\u7684\u4e09\u9879\u7cfb\u6570\u5206\u522b\u4e3a$a[i], b[i], c[i]$\uff0c\u6c42\u51fa\u8fd9$n$\u4e2a\u51fd\u6570\u4e2d\u524dm\u4e2a\u6700\u5c0f\u7684\u51fd\u6570\u503c\uff08\u81ea\u53d8\u91cf\u53d6\u503c\u5747\u4e3a\u6b63\u6574\u6570\uff09\n\n## \u5206\u6790\n\n\u5c06\u51fd\u6570\u503c\u5206\u4e3a$n$\u4e2a\u6570\u5217\uff1a\n\n$$\\begin{aligned}&1^2a[1]+1b[1]+c[1]<2^2a[1]+2b[1]+c[1]<3^2a[1]+3b[1]+c[1]\\cdots\\\\&1^2a[2]+1b[2]+c[2]<2^2a[2]+2b[2]+c[2]<3^2a[2]+3b[2]+c[2]\\cdots\\\\&\\cdots\\\\&1^2a[n]+1b[n]+c[n]<2^2a[n]+2b[n]+c[n]<3^2a[n]+3b[n]+c[n]\\cdots\\\\\\end{aligned}$$\n\n\u5bf9\u8fd9$n$\u4e2a\u6570\u5217\u5f52\u5e76\u6392\u5e8f\u5e76\u53d6\u51fa\u524d$m$\u9879\u5373\u53ef\u3002\n\n## \u5177\u4f53\u5b9e\u73b0\n\n\u5c06\u6bcf\u4e2a\u6570\u5217\u7684\u7b2c\u4e00\u9879\u653e\u5165\u5c0f\u6839\u5806\u4e2d\uff0c\u6bcf\u6b21\u8f93\u51fa\u5806\u9876\uff0c\u5e76\u5c06\u5806\u9876\u6240\u5728\u7684\u6570\u5217\u7684\u4e0b\u4e00\u9879\u653e\u5165\u5806\u4e2d\u3002\u8f93\u51fa$m$\u6b21\u540e\u7ed3\u675f\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <queue>\n\n#define pa std::pair<int, int> \n#define mp(a, b) std::make_pair(a, b)\n#define value first\n#define co second//\u4e8c\u5143\u7ec4\u7b2c\u4e00\u9879\u5b58\u51fd\u6570\u503c\uff0c\u7b2c\u4e8c\u9879\u5b58\u6570\u5217\u7cfb\u6570\n\n\nstd::priority_queue< pa, std::vector<pa>, std::greater<pa> > q;//\u5efa\u7acb\u5c0f\u6839\u5806\nint n, m, a[10010], b[10010], c[10010], x[10010];//x\u6570\u7ec4\u5b58\u50a8\u6570\u5217\u81ea\u53d8\u91cf\u53d6\u503c\n\nint main() {\n\tscanf(\"%d %d\", &n, &m);\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%d %d %d\", a + i, b + i, c + i);\n\t\tq.push(mp(a[i] + b[i] + c[i], i));//\u5c06\u6bcf\u4e2a\u6570\u5217\u7684\u7b2c\u4e00\u9879\u653e\u5165\u5806\u4e2d\n\t\tx[i] = 1;//\u6bcf\u4e2a\u6570\u5217\u7b2c\u4e00\u9879\u81ea\u53d8\u91cf\u53d6\u503c\u90fd\u662f1\n\t}\n\tfor (int i = 1; i <= m; i++) {\n\t\tprintf(\"%d \", q.top().value);//\u8f93\u51fa\u5806\u9876\n\t\tint k = q.top().co;\n\t\tq.push(mp(a[k] * (++x[k]) * x[k] + b[k] * x[k] + c[k], k));//\u5c06\u5806\u9876\u6240\u5728\u6570\u5217\u7684\u4e0b\u4e00\u9879\u653e\u5165\u961f\u4e2d\n\t\tq.pop();//\u5f39\u51fa\u5806\u9876\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1563934172,
        "uid": 86409,
        "name": "Night_star",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6570\u636e\u91cf\u53ea\u670910000\uff0c\u4e0d\u7528\u5806\u4e5f\u53ef\u4ee5\u8fc7\uff0c\u7b80\u5355\u66b4\u529b\u7b97\u6cd5\u53ef\u4ee5ac\u3002\u65b9\u6cd5\u662f\u7528\u4e00\u4e2a\u6570\u7ec4f\u4fdd\u5b58\u51fd\u6570\u7684\u503c\uff0c\u4e00\u4e2a\u6570\u7ec4x\u4fdd\u5b58\u6bcf\u4e2a\u51fd\u6570\u5bf9\u5e94x\u7684\u503c\uff0c\u6bcf\u6b21\u9009\u51fa\u6700\u5c0f\u503c\u540e\u66f4\u65b0\u6570\u7ec4f\u5bf9\u5e94\u5355\u5143\u5373\u53ef\u3002\n```cpp\n#include <iostream>\n#include <iomanip>\n#include <math.h>\n#include <string>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nint n,m,can[10001][3],f[10001],x[10001];\nint selectMin()\n{\n    int i,minx=f[1],mini=1;;\n    for(i=2; i<=n; i++)\n    {\n        if(f[i]<minx)\n        {\n            minx=f[i];\n            mini=i;\n        }\n    }\n    return mini;\n}\nint main()\n{\n    int i,j;\n    cin>>n>>m;\n    for(i=1; i<=n; i++)\n    {\n        cin>>can[i][0]>>can[i][1]>>can[i][2];/**< \u53c2\u6570 */\n        x[i]=1;\n        f[i]=can[i][0]+can[i][1]+can[i][2];/**< \u521d\u59cb\u5316f\u6570\u7ec4\u7684\u503c */\n    }\n    for(i=1; i<=m; i++)/**< \u5faa\u73af\u9009\u62e9\u6700\u5c0f\u503c */\n    {\n        int mini=selectMin();\n        cout<<f[mini]<<' ';\n        x[mini]++;/**< \u66f4\u65b0mini\u5bf9\u5e94\u7684x\u548cf */\n        f[mini]=can[mini][0]*x[mini]*x[mini]+can[mini][1]*x[mini]+can[mini][2];\n    }\n    return 0;\n}\n\n```",
        "postTime": 1542642313,
        "uid": 126929,
        "name": "nenugdi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u9996\u5148\u6ce8\u610f\u5230ai,bi,ci\u90fd\u662f\u5927\u4e8e0\u7684\uff0c\u6240\u4ee5\u8bf4x\u8d8a\u5927\u90a3\u4e48\u5bf9\u5e94\u7684\u51fd\u6570\u503c\u5c31\u8d8a\u5927\u3002\n\n\u53ef\u4ee5\u5148\u5f00\u4e00\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4x\uff0c\u50a8\u5b58\u6bcf\u4e00\u4e2a\u51fd\u6570x=1\u65f6\u7684\u503c\uff0c\u518d\u5f00\u4e2a\u6570\u7ec4f,f[i]\u4ee3\u8868\u7b2ci\u4e2a\u51fd\u679a\u4e3e\u5230\u4e86x=f[i]\u7684\u60c5\u51b5\n\n\u7136\u540e\u5faa\u73afm\u6b21\uff0c\u6bcf\u6b21\u8f93\u51fa\u8fd9\u91cc\u9762\u6700\u5c0f\u7684\u503c\uff0c\u518d\u628a\u6784\u6210\u8fd9\u4e2a\u503c\u7684\u51fd\u6570\u7684\u7f16\u53f7i\u6c42\u51fa\u6765\uff0cf[i]++,\u7136\u540e\u7528\u8fd9\u4e2a\u51fd\u6570\u6784\u6210\u65b0\u7684\u503c\uff0c\u653e\u8fdbx\u6570\u7ec4\u4e2d\uff0c\u7136\u540e\u5806\u6392\u5e8f\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u9664\u53bb\u8f93\u5165\uff0c\u521d\u59cb\u5316\uff0c\u6838\u5fc3\u7b97\u6cd5\u590d\u6742\u5ea6\u5c31\u662f\uff08m\uff08logn\uff09\uff09\uff0c\u4e0d\u4f1a\u8d85\u65f6\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,a[10001],b[10001],c[10001];\nint f[10001];//f[i]\u5373\u4e3a\u7b2ci\u4e2a\u51fd\u6570\u679a\u4e3e\u5230\u4e86x=f[i]\u7684\u60c5\u51b5\uff1b\nstruct pig{\n    int data;//\u51fd\u6570\u4ea7\u751f\u7684\u6570\u636e\n    int bh;//x[i].bh\u5c31\u662f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\u7b2ci\u5927\u5c0f\u7684\u51fd\u6570\u503c\u6784\u6210\u4e8e\u521d\u59cb\u7684\u7b2c\u51e0\u4e2a\u51fd\u6570\n}x[10001];\nint cmp(pig f1,pig f2)\n{\n    return f1.data<f2.data;\n```\n}//\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7b2c\u4e00\u6b21\u53ef\u4ee5\u7528sort\uff0c\u5806\u6392\u5e8f\u5728\u6838\u5fc3\u7b97\u6cd5\u91cc\u518d\u7528\u3002\n```cpp\nint main()\n{\n    for(int i=1;i<=10000;i++)\n    f[i]=2;//\u521d\u59cb\u5316\uff0c\u7531\u4e8e\u7b2c\u4e00\u6b21\u679a\u4e3e\u7684\u662fx=1\u7684\u60c5\u51b5\uff0c\u6240\u4ee5f\u6570\u7ec4\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c\u62102\uff1b\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a[i]>>b[i]>>c[i];\n        x[i].data=a[i]+b[i]+c[i];//\u5373\u4e3a\u8fd9\u4e2a\u51fd\u6570x=1\u7684\u60c5\u51b5\n        x[i].bh=i;//\u51fd\u6570\u7684\u521d\u59cb\u7f16\u53f7\n```\n}//\u8bfb\u5165\n```cpp\n    sort(x+1,x+n+1,cmp);\n    for(int i=1;i<=m;i++)\n    {\n        cout<<x[1].data<<\" \";//\u8f93\u51fa\u6700\u5c0f\u503c\n        int g=x[1].bh;//\u627e\u51fa\u662f\u5f00\u59cb\u7684\u7b2c\u51e0\u4e2a\u51fd\u6570\u6784\u6210\u4e86\u8fd9\u4e2a\u6700\u5c0f\u503c\n        x[1].data=f[g]*a[g]*f[g]+b[g]*f[g]+c[g];//\u5f97\u5230\u8be5\u51fd\u6570\u4e0b\u4e00\u4e2ax\u6784\u6210\u7684\u503c\u3002\n        f[g]++;//\u679a\u4e3e\u4ea7\u751f\u6700\u5c0f\u503c\u7684\u51fd\u6570\u7684\u4e0b\u4e00\u4e2ax\n        int t=1;\n        while(t*2<=n)//\u5806\u6392\u5e8f\n        {\n            int o=t*2;\n            if(o+1<=n&&(x[o+1].data<x[o].data)) o++;\n            if(x[o].data<x[t].data)\n            {\n                pig kx=x[o];\n                x[o]=x[t];\n                x[t]=kx;\n                t=o;\n            }\n            else break;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1509515960,
        "uid": 33376,
        "name": "\u65cb\u98ce\u732a\u76ae",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u6211\u6bd4\u8f83\u6c34\uff0c\u6ca1\u6709\u60f3\u5230\u7528\u4e00\u4e2a\u5c0f\u6839\u5806\u7ef4\u62a4n\u4e2a\u51fd\u6570\u5f53\u524d\u6700\u5c0f\u503c\u7684\u65b9\u6cd5\u3002\n\n\n\u53cd\u800c\uff0c\u6211\u7528\u7684\u662f\u6bd4\u8f83\u89c4\u77e9\u7684\u5927\u6839\u5806\uff1a\n\n\u6211\u662f\u8fd9\u6837\u7684\u601d\u60f3\uff1a\n\n\u7531\u4e8e\u6bcf\u4e2a\u51fd\u6570\u5728\u6b63\u534a\u8f74\u90fd\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u5f53\u5927\u6839\u5806\u4e2d\u7684\u5143\u7d20\u8fbe\u5230\u4e86m\u4e2a\u800c\u5f53\u524d\u51fd\u6570\u503c\u6bd4\u6839\u9876\u8fd8\u5927\uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u5c31\u53ef\u4ee5\u6392\u9664\u6389\n\n\u76f4\u5230\u6240\u6709\u51fd\u6570\u88ab\u6392\u9664\u6389\u4e3a\u6b62\uff0c\u7b97\u6cd5\u7ed3\u675f\n\n\n\u4e3a\u4e86\u5e73\u644a\u65f6\u95f4\uff0c\u6211\u91c7\u7528\u53cc\u5411\u94fe\u8868\u7684\u5f62\u5f0f\u8f6e\u6d41\u8bfb\u53d6\u51fd\u6570\uff0c\u8f6e\u6d41\u5165\u5806\u3010\u53ef\u4f3c\u4e4e\u6570\u636e\u5f88\u6c34\u3011\n\n\u56e0\u4e3a\u5982\u679c\u4e00\u5f00\u59cb\u5c31\u53ea\u628a\u5176\u4e2d\u4e00\u4e2a\u51fd\u6570\u7684m\u4e2a\u503c\u5165\u5806\uff0c\u7136\u540e\u518d\u9010\u4e2a\u51fd\u6570\u6392\u9664\uff0c\u6700\u5dee\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u8fbe\u5230n^2logn\n\n\u5982\u679c\u6570\u636e\u5f3a\u4e00\u70b9\u80af\u5b9aT\u554a\u3002\u3002\u3002\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define LL long long int\nusing namespace std;\nconst int maxn=10005,INF=200000000;\ninline int read(){\n    int out=0,flag=1;char c=getchar();\n    while(c<48||c>57) {if(c=='-') flag=-1;c=getchar();}\n    while(c>=48&&c<=57) {out=out*10+c-48;c=getchar();}\n    return out*flag;\n}\nint N,M;\nclass node{   //\u94fe\u8868\n```\npublic:\n        \n        \n\n```cpp\n        LL a,b,c;\n        int last,next,i;\n        void init(int u){\n            a=read();\n            b=read();\n            c=read();\n            i=0;\n            last=u-1 ? u-1:N;\n            next=u+1<=N ? u+1:1;\n        }\n        LL getf(){\n            i++;\n            return a*i*i+b*i+c;\n        }\n}e[maxn];\nclass HEAP{       //\u5927\u6839\u5806\n```\npublic:\n        \n        \n        \n        \n\n\n```cpp\n        LL H[maxn],heapsize;\n        HEAP() {heapsize=0;}\n        void heapify(int u){\n            int big=u;\n            if((u<<1)<=heapsize&&H[u<<1]>H[big]) big=u<<1;\n            if((u<<1|1)<=heapsize&&H[u<<1|1]>H[big]) big=u<<1|1;\n            if(big!=u){\n                swap(H[big],H[u]);\n                heapify(big);\n            }\n        }\n        void increase(int u,int v){\n            H[u]=v;\n            while(u>1&&H[u>>1]<H[u]){\n                swap(H[u>>1],H[u]);\n                u>>=1;\n            }\n        }\n        void insert(int v){\n            H[++heapsize]=-INF;\n            increase(heapsize,v);\n        }\n        void del(){\n            swap(H[1],H[heapsize--]);\n            heapify(1);\n        }\n}H;\nint cnt=0,ans[maxn];\nint main()\n{\n    N=read();\n    M=read();\n    for(int i=1;i<=N;i++) e[i].init(i);\n    int p=1,cc=N;\n    LL t;\n    while(cc){               //\u8f6e\u6d41\u5165\u5806\n        t=e[p].getf();\n        if(cnt<M) H.insert(t),cnt++;  //\u5806\u672a\u6ee1\n        else if(t<H.H[1]){            //\u5806\u5df2\u6ee1\n            H.del();\n            H.insert(t);\n        }\n        else{\n            e[e[p].last].next=e[p].next;\n            e[e[p].next].last=e[p].last;\n            cc--;\n        }\n        p=e[p].next;\n    }\n    for(int i=M;i>0;i--){         //\u5f97\u51fa\u7b54\u6848\n        ans[i]=H.H[1];\n        H.del();\n    }\n    printf(\"%d\",ans[1]);\n    for(int i=2;i<=M;i++) printf(\" %d\",ans[i]);\n    printf(\"\\n\");\n    return 0;\n}\n\n```",
        "postTime": 1504076687,
        "uid": 32842,
        "name": "Mychael",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u548c\u4e0b\u9762\u7684\u65b9\u6cd5\u7565\u5fae\u6709\u4e9b\u4e0d\u540c\n\n\u7b97\u6cd5\uff1a\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u5f53\u524d\u7b2ci\u4e2a\u51fd\u6570\u81ea\u53d8\u91cf\u7684\u503c\uff0c\u521d\u59cb\u5316X[i]=1\uff0c\u6bcf\u6b21\u4ece\u5c0f\u6839\u5806\u53d6\u51fa\u4e00\u4e2a\u51fd\u6570\u503c\u65f6\uff0c\u4f7f\u5176\u5bf9\u5e94\u7684\u81ea\u53d8\u91cf\u7684\u503c\u589e\u52a0\uff0c\u6bd4\u5982\u53d6\u51fa\u7684\u662f\u7b2ci\u4e2a\uff0c\u5c31X[i]++\uff0c\u8fd9\u6837\u5c31\u662f\u4e00\u4e2aO(n+m)\u7684\u7b97\u6cd5\n\n\n\n\n\n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 10000+1;\nint a[MAXN],b[MAXN],c[MAXN],now,X[MAXN],n,m;\nint Function(int i,int x)    //\u8ba1\u7b97\u51fd\u6570\u503c\n{\n    return a[i]*x*x+b[i]*x+c[i];\n}\ntypedef pair<int,int> node;\npriority_queue <node, vector < node >, greater< node> > Heap; //\u5b9a\u4e49\u5b58\u50a8\u53cc\u5173\u952e\u5b57\u7684\u5c0f\u6839\u5806\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;X[i]=1,Heap.push(node(Function(i,X[i]),i)),i++)//\u521d\u59cb\u5316\uff0c\u5c06\u6240\u6709functino[1]\u7684\u503c\u538b\u5165\n        scanf(\"%d%d%d\",&a[i],&b[i],&c[i]);\n    for(int i=1;i<=m;i++)\n    {\n        printf(\"%d \",Heap.top().first);//\u53d6\u51fa\u5f53\u524d\u6700\u5c0f\u7684\n        X[now=Heap.top().second]++;//\u8ba9\u53d6\u51fa\u51fd\u6570\u7684\u81ea\u53d8\u91cf\u589e\u52a0\n        Heap.pop();\n        Heap.push(node(Function(now,X[now]),now));//\u538b\u5165\u65b0\u7684\u51fd\u6570\u503c\n    }\n    return 0;\n}\n```",
        "postTime": 1482540742,
        "uid": 20116,
        "name": "never_see",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217q\u4fdd\u5b58\u5f53\u524d\u6700\u5c0f\u7684m\u4e2a\u51fd\u6570\u503c\u3002\n\n\u56e0\u4e3aa,b,c>0\uff0c\u6240\u4ee5f(x)\u4e3a\u589e\u51fd\u6570\u3002\u6240\u4ee5\u8fd9m\u4e2a\u503c\u4e00\u5b9a\u5728x=1,2,3...m\u4e2d\u53d6\u5f97\u3002\n\n\u9996\u5148\u628a\u7b2c\u4e00\u4e2a\u51fd\u6570\u7684\u524dm\u4e2a\u503c\u538b\u5165\u961f\u5217\u4e2d\u3002\u5bf9\u4e8e\u7b2c2\u30013\u30014\u2026\u2026n\u4e2a\u51fd\u6570\uff0c\u6bcf\u6b21\u5c06x\u904d\u53861\u5230m\u3002\u5982\u679cf(x)\u5927\u4e8e\u7b49\u4e8e\u5806\u9876\uff0c\u90a3\u4e48x\u53cax\u4ee5\u540e\u7684\u51fd\u6570\u503c\u90fd\u6bd4\u8fd9m\u4e2a\u5927\uff0c\u53ef\u4ee5\u4e0d\u7528\u8ba1\u7b97\u4e86\u76f4\u63a5break\u6389\u3002\u5426\u5219\uff0c\u5f39\u51fa\u5806\u9876\uff0c\u5c06f(x)\u538b\u5165\u961f\u5217\u3002\n\n\u6ce8\u610f\u8f93\u51fa\u65f6\u5012\u5e8f\u8f93\u51fa\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u4fdd\u5b58\u4e00\u4e0b\u7b54\u6848\n\n\u590d\u6742\u5ea6\u8868\u793a\u4e0d\u4f1a\u8bc1\u660e\uff0c\u5982\u679c\u6709\u5927\u795e\u4f1a\u8bc1\u660e\u7684\u8bdd\u8bf7\u53d1\u9898\u89e3\u6216\u8005\u79c1\u4fe1\u6211\uff0c\u8c22\u8c22orz\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\npriority_queue<int>q;\nint ans[10005],n,m,a,b,c,x;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    scanf(\"%d%d%d\",&a,&b,&c);for(register int i=1;i<=m;++i)q.push(i*i*a+i*b+c);\n    while(--n)\n    {\n        scanf(\"%d%d%d\",&a,&b,&c);\n        for(register int i=1;i<=m;++i)\n        {\n            x=i*i*a+i*b+c;\n            if(x>=q.top())break;\n            else q.pop(),q.push(x);\n        }\n    }\n    for(register int i=m;i;--i)ans[i]=q.top(),q.pop();\n    for(register int i=1;i<=m;++i)printf(\"%d \",ans[i]);\n    return 0;\n}\n\n```",
        "postTime": 1480176683,
        "uid": 13180,
        "name": "amazingOZR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u4e00\u9053 \u4f18\u5148\u961f\u5217 \u9898\u76ee\n\n\u4f18\u5148\u961f\u5217\u662f\u4e00\u79cd\u5927\u6839\u5806\uff0c\u5927\u6839\u5806\u7c7b\u4f3c\u4e00\u68f5\u6811\uff0c\u6839\u6700\u5927\uff0c\u5b69\u5b50\u4e8c\u5927\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u800c\u8fd9\u91cc\u4f18\u5148\u961f\u5217\u8981\u7528\u5c0f\u6839\u5806\u548c\u7ed3\u6784\u4f53\n\n\u5b9a\u4e49: //\u672c\u4eba\u4e0d\u4e0a\u5b8c\u6574\u4ee3\u7801\n```cpp\nstruct Node\n{\n\tint fnum; //\u7b2c\u51e0\u4e2a\u51fd\u6570\n\tint x; //\u53c2\u6570\n\tint number; //\u6700\u7ec8\u503c\n\tbool operator < (const Node& p) const //\u6ce8\u610f\u8fd9\u91cc\u4e00\u5b9a\u8981\u7528\u2018<\u2019\uff0c\u6700\u540e\u4e00\u4e2aconst\u8868\u793a\u51fd\u6570\u4e0d\u6539\u53d8\u53d8\u91cf\n\t{\n\t\treturn number > p.number; //\u5c0f\u6839\u5806\n\t}\n};\npriority_queue<Node> q; //\u6ce8\u610fpq\u62fc\u6cd5\n```\n----------\n\u518d\u5199\u4e00\u4e2a\u5c06\u91cf\u653e\u5165pq\u7684\u7b97\u6cd5\uff08pq\u81ea\u52a8\u5c06\u6570\u6392\u5e8f\uff09\n```cpp\nvoid push_node(int fn, int nn)\n{\n\tNode node;\n\tnode.fnum = fn;\n\tnode.number = f1[fn] * nn * nn + f2[fn] * nn + f3[fn]; //\u8ba1\u7b97\n\tnode.x = nn;\n\tq.push(node); //\u5c06node\u63a8\u5165\u4f18\u5148\u961f\u5217\n}\n```\n\n\u5c06\u6570\u63a8\u5165\u548c\u62ff\u51fa\n```cpp\nfor(int i=1; i<=n; i++)\n\t{\n\t\tpush_node(i, 1); //\u628a\u6bcf\u4e00\u6b21x=1\u7684\u7ed3\u679c\u5148\u7b97\u51fa\u6765\n\t}\n\tfor(int i=1; i<=m; i++)\n\t{\n\t\tNode node = q.top(); //\u4e0equeue\u4e0d\u540c\uff0c\u8fd9\u91cc\u662ftop\n\t\tq.pop();\n\t\tcout << node.number << ' ';\n\t\tpush_node(node.fnum, node.x + 1);\n\t}\n```",
        "postTime": 1560584753,
        "uid": 165949,
        "name": "jinyijiang",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "### ~~\u53ef\u89e3\u51b3\u6574\u6570\u57df~~\n\u5f88\u7b80\u5355\uff0c\u628a\u4f7f\u6bcf\u4e2a\u51fd\u6570\u503c\u6700\u5c0f\u7684x\u653e\u8fdb\u5806\u4e2d\uff0c\u6bcf\u6b21\u53d6\u6700\u5c0f\u7684\u503c\u7684x\u8fdb\u884c\u6269\u5c55\u3002\n\u8fd9\u91cc\u7528b/(-2*a)\u6765\u786e\u5b9ax\uff0c\u7528set\u5224\u91cd\n\n## STL set\n\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u6709\u5e8f\u5e76\u53bb\u91cd\uff0c\u53ef\u67e5\u627e\u5143\u7d20\u6392\u540d\uff0c\u524d\u9a71\uff08\u7b2c\u4e00\u4e2a\u5c0f\u4e8ex\u7684\u6570\uff09\uff0c\u540e\u7ee7\uff08\u7b2c\u4e00\u4e2a\u5927\u4e8ex\u7684\u6570\uff09\uff0c\u5185\u90e8\u5b9e\u73b0\uff1a\u5e73\u8861\u6811\u3002\n\n#### \u6ce8\u610f \nfind\uff08x\uff09- \u67e5\u627e\u5143\u7d20\u6392\u540d\uff0c\u8fd4\u56de\u6307\u9488\uff0c\u5982\u679c\u6ca1\u6709\u5219\u8fd4\u56de\u6307\u5411\u672b\u5c3e\u7684\u6307\u9488\uff08\u672b\u5c3e\u6ca1\u6709\u4e1c\u897f\uff0c\u503c\u4e3a1\uff09\n\n## \u5806\n\u6211\u4eec\u901a\u8fc7\u628a\u4f18\u5148\u961f\u5217\u5199\u6210\u7ed3\u6784\u4f53\u5f62\u5f0f\u4ee5\u5b58\u53d6\u66f4\u591a\u4fe1\u606f\uff0cSTL\u4f18\u5148\u961f\u5217\u5185\u90e8\u51fd\u6570\u8c03\u7528\u7684\u662f\"()\"\u8fd0\u7b97\u7b26\u3002\n\n\u5199\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u5185\u90e8 \u91cd\u8f7d\u8fd0\u7b97\u7b26 \"()\" \u5982\u4e0b\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define rg register\ninline int read(){\n\trg char ch=getchar();\n\trg int x=0,f=0;\n\twhile(!isdigit(ch)) f|=(ch=='-'),ch=getchar();\n\twhile(isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn f?-x:x;\n}\nint a[10020],b[10010],c[10010],vis[100010];\nint n,m;\nstruct node{\n\tint val,x,y;\n\tnode(int vall,int xl,int yl){\n\t\tval=vall;\n\t\ty=yl;\n\t\tx=xl;\n\t}\n};\nstruct cmp{\n\tbool operator ()(const node a,const node b){\n\t\treturn a.val>b.val;\n\t}\n};\npriority_queue<node,vector<node>,cmp> q;\n\ninline int get(int x,int y){\n\treturn a[y]*x*x+b[y]*x+c[y];\n}\nset<int> s[10010];\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;++i){\n\t\ta[i]=read(),b[i]=read(),c[i]=read();\n\t}\n\tfor(int z,i=1;i<=n;++i){\n\t\tz=b[i]/(2*a[i]);\n\t\tz=-z;\n\t\tz=max(z,1);\n\t\ts[i].insert(z);\n\t\tq.push(node(a[i]*z*z+b[i]*z+c[i],z,i));\n\t}\n\tfor(int xl,yl,i=1;i<=m;++i){\n\t\tnode x=q.top();q.pop();\n\t\tprintf(\"%d \",x.val);\n\t\txl=x.x+1;yl=x.y;\n\t\tif(s[yl].find(xl)==s[yl].end()){\n\t\t\tq.push(node(get(xl,yl),xl,yl));\n\t\t\ts[yl].insert(xl);\n\t\t}\n\t\txl-=2;\n\t\tif(xl>0&&s[yl].find(xl)==s[yl].end()){\n\t\t\tq.push(node(get(xl,yl),xl,yl));\n\t\t\ts[yl].insert(xl);\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1555390873,
        "uid": 121618,
        "name": "Accoty_AM",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "**\u849f\u84bb\u7b2c\u4e00\u6b21\u5199\u9898\u89e3**\n\n------------\n\n\u9996\u5148\uff0c\u8fd9\u9053\u9898\u5982\u679c\u7528\u66b4\u529b\u4ee3\u4ef7\u4f1a\u5f88\u5927\uff0c\u6240\u4ee5\u66b4\u529b\u6392\u5e8f\u663e\u7136\u4e0d\uff08ke\uff09\u884c\uff08yi\uff09\n\n~~\u6bd5\u7adf\u6570\u636e\u6c34~~\n\n\u4f17\u6240\u5468\u77e5\uff0c\u4e8c\u6b21\u51fd\u6570\u7684\u5bf9\u79f0\u8f74\u662f**-b/2*a**\n\n\u6839\u636e\u9898\u76ee\uff0c\u5b9a\u4e49\u57df\u662f\u4f4d\u4e8e**\u6b63\u6574\u6570**\uff0c\u4e14\u6570\u636e\u4fdd\u8bc1\u4e86\u51fd\u6570\u4e8c\u6b21\u9879\u3001\u4e00\u6b21\u9879\u4ee5\u53ca\u5e38\u6570\u90fd\u4e3a**\u6b63\u6574\u6570**\n\n\u7531\u6b64\u53ef\u4ee5\u5f97\u51fa\uff0c**n\u4e2a\u51fd\u6570\u7684\u503c\u6784\u6210\u4e86n\u4e2a\u9012\u589e\u5e8f\u5217**\n\n\n------------\n\u90a3\u4e48\u518d\u770b\u8fd9n\u4e2a\u51fd\u6570\u5f62\u6210\u7684n\u4e2a\u5e8f\u5217\uff0c\u5f53x=1\u65f6\uff0c\u5728\u5404\u4e2a\u5e8f\u5217\u90fd\u662f\u6700\u5c0f\u503c\uff0c\u65e2\u7136\u5982\u6b64\uff0c\u6211\u4eec\u5c06n\u4e2a\u5e8f\u5217\u7684\u6700\u5c0f\u503c\u4e22\u5230\u4e00\u4e2a\u5c0f\u6839\u5806\u91cc\uff0c\u8f93\u51fa\u4e00\u4e2a\uff0c**\u67e5\u627e\u8fd9\u4e2a\u503c\u6765\u81ea\u54ea\u4e2a\u5e8f\u5217**\uff0c\u5c06\u8fd9\u4e2a\u5e8f\u5217\u7684\u4e0b\u4e00\u4e2a\u503c\u518d\u4e22\u8fdb\u5806\u91cc\uff0c\u76f4\u5230\u6709m\u4e2a\u8f93\u51fa\n\n\n------------\n**\u4e0b\u9644AC\u4ee3\u7801\uff0c\u7531\u4e8e\u5806\u4f18\u5316\u6700\u5927\u7684\u6570\u636e\u70b9\u4e5f\u53ea\u670920ms**\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nstruct cheng{\n    int two,one,chang,num,xxx;\n    bool operator < (const cheng &a)const{\n        return num>a.num;//\u89c4\u5b9a\u5806\u7684\u6392\u5e8f\u65b9\u5f0f\u662f\u4ee5\u51fd\u6570\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n    }\n}w;\npriority_queue<cheng>h;//STL\u5efa\u5806 \nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)//\u521d\u59cb\u5316 \n\t{\n\t\tcin>>w.two>>w.one>>w.chang;//\u8f93\u5165 \n\t\tw.xxx=1;//\u7531\u4e8ex\u6700\u5c0f\u662f1\uff0c\u6240\u4ee5\u4ece1\u5f00\u59cb \n\t\tw.num=w.two+w.one+w.chang;\n\t\th.push(w); \n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcheng ans=h.top();//\u8c03\u7528 \n\t\th.pop();//\u5220\u9664 \n\t\tcout<<ans.num<<\" \";\n\t\tans.xxx++;//\u8c03\u7528\u8be5\u5e8f\u5217\u4e0b\u4e00\u4e2a\u503c \n\t\tans.num=ans.xxx*ans.xxx*ans.two+ans.xxx*ans.one+ans.chang;//\u540c\u4e0a \n\t\th.push(ans); //\u4e22\u56de\u53bb \n\t}\n\treturn 0;\n}\n```",
        "postTime": 1550478134,
        "uid": 131851,
        "name": "\u4e0a\u6749",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u6211\u7684\u535a\u5ba2\uff1a\n```cpp\nhttps://blog.csdn.net/zsyzClb/article/details/84297862\n```\n\u6839\u636e\u89c2\u5bdf\uff0c\u53ef\u4ee5\u53d1\u73b0Ai,Bi,Ci\u90fd\u662f\u6b63\u6574\u6570\uff0c\u6240\u4ee5\u4efb\u4f55\u4e00\u4e2af\u51fd\u6570\u90fd\n\n\u6ee1\u8db3\u5355\u8c03\u9012\u589e\uff0c\u53e6\u5916\uff0cx\u662f\u6b63\u6574\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u77e5\u9053\u5bf9\u4e8e\u6bcf\u4e2a\u51fd\n\n\u6570\uff0cx=1\u90fd\u662f\u6700\u5c0f\u503c\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4\uff0c\u8bb0\u5f55\u6bcf\u4e00\n\n\u4e2a\u51fd\u6570\u5f53\u524dx\u7684\u503c\uff0c\u6bcf\u6b21\u90fd\u627e\u4e00\u6b21\u6700\u5c0f\u503c\uff0c\u8f93\u51fa\u5e76\u5c06\u6700\u5c0f\u503c\u51fd\u6570\n\n\u7684x++\uff0c\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(nm)\uff0c\u7406\u8bba\u4e0a\u662f\u4e0d\u4f1a\u8d85\u65f6\u7684\u3002\n\n\u5728\u8003\u8651\u4f18\u5316\uff0c\u5f88\u660e\u663e\uff0c\u53ef\u4ee5\u7528\u5806\u6765\u505a\u7740\u8fd9\u9053\u9898\uff0c\u5229\u7528\u5c0f\u6839\u5806\uff0c\u7b2c\u4e00\u6b21\u63d2\u5165n\u4e2ax=1\u65f6\u7684\u51fd\u6570\uff0c\u5faa\u73afm\u6b21\uff0c\u6bcf\u6b21\u8f93\u51fa\u5806\u9876\uff0c\u5e76\u5c06\u5806\u9876x++\u540e\u653e\u56de\u5806\uff0c\u5e76\u4e14\u7ef4\u62a4\n\n\u6216\u8005\u7528\u4f18\u5148\u961f\u5217\uff08STL),\u548c\u5806\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662fO\uff08mlogn)\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#include<cstdlib>\n#include<queue>\n#include<stack>\n#include<cmath>\n#include<map>\nusing namespace std;\ninline int read(){\n    int x=0,f=0;char s=getchar();\n    while(!isdigit(s))f|=s=='-',s=getchar();\n    while( isdigit(s))x=(x<<1)+(x<<3)+s-48,s=getchar();\n    return !f?x:-x;\n}\nconst int N=1e4+10;\nint n,m;\nint a[N],b[N],c[N];\nstruct node{\n    int z,x,t;\n    inline bool operator<(const node &k)const{//\u5c06z\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n        return k.z<z;\n    }\n};\npriority_queue<node> q;\ninline int query(int x,int t){return x*x*a[t]+x*b[t]+c[t];}//\u8f93\u51fa\u7b2ct\u4e2a\u51fd\u6570\u7684\u503c \nint main(){\n    n=read();m=read();\n    for(int i=1;i<=n;i++)a[i]=read(),b[i]=read(),c[i]=read();\n    for(int i=1;i<=n;i++)q.push((node){query(1,i),1,i});//\u5c06\u6bcf\u4e00\u4e2ax=1\u7684\u51fd\u6570\u653e\u8fdb\u4f18\u5148\u961f\u5217 \n    while(m--){\n    \tprintf(\"%d \",q.top().z);//\u8f93\u51fa\u5806\u9876 \n    \tint x=q.top().x+1,t=q.top().t;//x++\u540e\u653e\u5165\u5806 \n    \tq.pop();q.push((node){query(x,t),x,t});\n    }\n    return 0;\n}\n```",
        "postTime": 1542692315,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "###emmmmm\u8bf4\u5b9e\u5728\u7684\u8fd9\u9053\u9898\u5e76\u4e0d\u662f\u5f88\u96be\uff0c\u7b97\u662f\u4e00\u9053#\u4f18\u5148\u961f\u5217###\u7684\u88f8\u9898\u4e86\n\n\u7531\u4e8e\u672c\u4eba\u6bd4\u8f83\u61d2\uff0c\u6240\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e86C++\u81ea\u5e26\u7684#STL\u6a21\u677f\u5e93\n\n\u5373p.pop()\u5220\u9664\u9876\uff0cp.top()\u53d6\u51fa\u9876   \u8fd9\u79cd\u7b80\u5355\u7684\u64cd\u4f5c\uff08\u5b8c\u5168\u4e0d\u4ee4\u4eba\u667a\u7184\n\n##\u4e0b\u9762\u662f\u6211\u7684\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<queue>\nusing namespace std;\npriority_queue<int> que;\nint a[10005],b[10005],c[10005],f[10005][10005];\nint main()\n{\n    int m,n;\n    cin>>n>>m;\n    int i=1;\n    for(i=1;i<=n;++i)\n       {\n           cin>>a[i]>>b[i]>>c[i];\n```\n}//\u8fd9\u91cc\u53ea\u662f\u8f93\u5165\u800c\u5df2\n```cpp\n    i=0;//\u8fd9\u91cc\u662f\u4e3a\u4e86\u4e0b\u9762\u7684i\u53ef\u4ee5\u4ece1\u5f00\u59cb \n    for(int j=1;j<=n;++j){\n        ++i;\n       for(int w=1;w<=100;++w)//\u6bd4\u8f83\u66b4\u529b\uff0c\u7b97\u51fa\u6bcf\u4e2a\u51fd\u65701\u5230\u4e00\u767e\u7684\u503c \n          {\n              f[j][w]=a[i]*w*w+b[i]*w+c[i]; \n              que.push(-f[j][w]); //\u6254\u8fdb\u53bb\uff08-\u662f\u4e3a\u4e86\u628a\u539f\u6765\u7684\u9876\u6700\u5927\u53d8\u4e3a\u9876\u6700\u5c0f) \n          }\n    }\n    for(int d=1,tmp;d<=m;++d)\n       {\n           tmp=que.top();//\u53d6\u51fa\u9876\u90e8 \n           que.pop();//\u5220\u9664\u9876\u90e8 \n           cout<<-tmp<<\" \";//\u6062\u590d-\u53f7\u5e76\u8f93\u51fa \n       }\n       return 0;\n}\n```",
        "postTime": 1502697917,
        "uid": 43848,
        "name": "Believe_Horizon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u9996\u5148\u5410\u69fd\u4e00\u4e0b\uff0c\u8fd9\u9898\u6570\u636e\u771f\u662f\u6c34\uff0c\u672c\u6765\u6211\u5199\u4e86\u4e2an^2logn\u7684\u66b4\u529b\uff0c\u5bb3\u6015\u4f1aT\u7136\u540e\u5c31\u5728\u7b2c\u4e8c\u91cd\u5faa\u73af\u4e0a\u52a0\u4e86\u4e2a\u6839\u53f7\uff0c\u5c45\u7136\u5c31A\u4e86\u2026\u2026\n\n\u5410\u69fd\u7ed3\u675f\uff0c\u73b0\u5728\u8bf4\u6b63\u89e3\u3002\n\n\n\u6211\u7684\u4ee3\u7801\u548c\u697c\u4e0a\u7684\u5f88\u591adalao\u4e00\u6837\uff0c\u5c31\u662f\u5148\u628ax=1\u65f6\u5404\u4e2a\u51fd\u6570\u7684\u503c\u63d2\u5165\u5c0f\u6839\u5806\uff0c\u7136\u540e\u4e0d\u505c\u5730\u53d6\u51fa\u5806\u9876\uff0c\u628a\u53d6\u51fa\u7684\u51fd\u6570\u4ee3\u5165x+1\uff0c\u7b97\u51fa\u51fd\u6570\u503c\u518d\u63d2\u5165\u5806\uff0c\u53d6\u4e0am\u6b21\u4e3a\u6b62\u3002\n\n\n\u4f46\u662f\uff0c\u6211\u8fd9\u91cc\u6709\u53e6\u4e00\u79cd\u7406\u89e3\u65b9\u6cd5\u3002\n\n\n\u9996\u5148\uff0c\u56e0\u4e3aa>0,b>0,c>0,x\u2208N\\*,\u6240\u4ee5\u6bcf\u4e2a\u51fd\u6570\u7684\u56fe\u50cf\u5c31\u662f\u5728\u7b2c\u4e00\u8c61\u9650\u5185\u82e5\u5e72\u5355\u8c03\u9012\u589e\u7684\u79bb\u6563\u7684\u70b9\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u51fd\u6570\u770b\u6210\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684\u6570\u5217\u3002\u6211\u4eec\u7684\u4efb\u52a1\u662f\u6c42\u6240\u6709\u6570\u5217\u4e2d\u6700\u5c0f\u7684m\u4e2a\u6570\uff0c\u53ef\u4ee5\u501f\u52a9\u5f52\u5e76\u6392\u5e8f\u7684\u601d\u60f3\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u6b21\u4e0d\u662f\u5f52\u5e762\u4e2a\u6709\u5e8f\u5e8f\u5217\uff0c\u800c\u662f\u5f52\u5e76n\u4e2a\u6709\u5e8f\u5e8f\u5217\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u6240\u6709\u5e8f\u5217\u7684\u7b2c\u4e00\u9879\u5148\u63d2\u5165\u5c0f\u6839\u5806\uff0c\u5f39\u51fa\u5806\u9876\uff0c\u8fd9\u662f\u6211\u4eec\u627e\u5230\u4e86\u6700\u5c0f\u7684\u6570\u3002\u7136\u540e\u518d\u628a\u521a\u53d6\u51fa\u7684\u6570\u7684\u4e0b\u4e00\u9879\u63d2\u5165\u5c0f\u6839\u5806\uff0c\u518d\u53d6\u5806\u9876\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u7b2c\u4e8c\u5c0f\u7684\u6570\u3002\u91cd\u590dm\u6b21\u5c31\u662f\u7b54\u6848\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <queue>\n#define maxn 10003\nusing namespace std;\nstruct node{\n    int val,k;\n    bool operator < (const node &x) const{\n        return x.val<val;\n    }\n};\nint a[maxn];\nint b[maxn];\nint c[maxn];\nint now[maxn];//now\u8868\u793a\u5f53\u524d\u6570\u5217\u63d2\u5230\u7b2c\u51e0\u4e2a\u6570\u4e86\npriority_queue<node>q;\nint main()\n{\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d%d%d\",&a[i],&b[i],&c[i]),now[i]=1;\n    for(int i=1;i<=n;i++)//\u5148\u628a\u6570\u5217\u7684\u7b2c\u4e00\u9879\u90fd\u63d2\u8fdb\u53bb\n        q.push((node){a[i]+b[i]+c[i],i});\n    for(int i=1;i<=m;i++)\n    {\n        node u=q.top();q.pop();\n        printf(\"%d \",u.val);\n        int x=++now[u.k];//\u63d2\u5165\u4e0b\u4e00\u4e2a\u6570\n        q.push((node){a[u.k]*x*x+b[u.k]*x+c[u.k],u.k});\n    }\n    printf(\"\\n\");\n    return 0;\n}\n\n```\n",
        "postTime": 1502682698,
        "uid": 11757,
        "name": "\u624b\u94fe\u5256\u5206",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u6700\u5bb9\u6613\u60f3\u5230\u7684\u65b9\u6cd5\u5c31\u662f\u7528\u5c0f\u6839\u5806\u5b58\u4e0b\u6bcf\u4e2a\u51fd\u6570\u7684\u4fe1\u606f\u548c\u5f53\u524d\u7684\u89e3\n\n\u7136\u540e\u628a\u6700\u5c0f\u7684\u89e3\u8f93\u51fa\uff0c\u4e0d\u65ad\u66f4\u65b0\u51fd\u6570\u4fe1\u606f\uff0c\u76f4\u5230\u6bd4\u7b2c\u4e8c\u5c0f\u7684\u89e3\u5927\n\n\uff0c\u518d\u63d2\u5230\u5806\u91cc\u8c03\u6574\u3002\u4e00\u76f4\u5faa\u73af\uff0c\u76f4\u5230\u8f93\u51fam\u4e2a\u89e3\u3002\n\n\n\u849f\u84bb\u7684\u4ee3\u7801\uff08\u5199\u5f97\u5f88\u5197\u957f\uff0c\u5f88\u591a\u5730\u65b9\u5176\u5b9e\u53ef\u4ee5\u4e0d\u5199\u51fd\u6570 \uff0c\u6216\u662f\u5c11\n\n\u7528\u51e0\u4e2a\u53d8\u91cf\uff09\uff1a\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\nusing namespace std;\nstruct node{\n    int number;  //\u51fd\u6570\u7684\u53f7\u7801 \n    int last_ans;  //\u5f53\u524dX\u5bf9\u5e94\u7684\u89e3 \n    int last_x;  //\u5f53\u524d\u7684X \n} heap[10005];\nint a[10005],b[10005],c[10005];\nint heap_size,ans_num;\nint f(int i,int x){  // \u51fd\u6570fi \n     return a[i]*x*x+b[i]*x+c[i];\n}\nvoid heap_adjust_down(int n){  //\u5411\u4e0b\u8c03\u6574\u5806 \n    int ch=n<<1;\n    struct node temp=heap[n];\n    while(ch<=heap_size){\n        if(ch<heap_size && heap[ch].last_ans > heap[ch+1].last_ans)\n            ch++;\n        if(heap[ch].last_ans>temp.last_ans)\n            break;\n        heap[n]=heap[ch];n=ch;ch<<=1;\n    }\n    heap[n]=temp;\n}\nvoid heap_insert(node x){  //\u63d2\u5165\u5806 \n    heap[++heap_size]=x;\n    int fa=heap_size>>1,ch=heap_size;\n    while(fa && heap[fa].last_ans > x.last_ans){\n        heap[ch]=heap[fa];ch=fa;fa>>=1;\n    }\n    heap[ch]=x;\n}\nvoid delete_min(){  //\u5220\u9664\u5806\u9876\u5143\u7d20 \n    heap[1]=heap[heap_size--];\n    heap_adjust_down(1);\n}\nvoid bulid_heap(){  //\u5efa\u5806 \n    for(int i=heap_size>>1;i>0;i--)\n    heap_adjust_down(i);\n}\nvoid update(node &t){  //\u66f4\u65b0\u4e00\u4e2a\u5143\u7d20 \n    t.last_x++;\n    t.last_ans=f(t.number,t.last_x);\n}\nint main(int argc, char *argv[]){\n    int n,m,i;cin>>n>>m;\n    for(i=1;i<=n;i++){\n        cin>>a[i]>>b[i]>>c[i];\n        heap[i].number=i;\n        heap[i].last_ans=f(i,1);\n        heap[i].last_x=1;\n    }\n    heap_size=n;\n    bulid_heap();\n    struct node temp;\n    while(1){\n        temp=heap[1];   //\u53d6\u4e00\u4e2a\u51fd\u6570\u51fa\u6765\n        delete_min();\n        while(heap[1].last_ans>=temp.last_ans && ans_num<m){  //\u5f53\u5f53\u524d\u5806\u9876\u7684\u89e3\n            ans_num++;                                                                                                             //\u5c0f\u4e8e\u6211\u4eec\u624b\u5934\u4e0a\n            cout<<temp.last_ans<<' ';                                               // \u51fd\u6570\u7684\u89e3\u5c31\u9000\u51fa\n            update(temp);                                                                 \n        }\n        if(ans_num >= m) break;\n        else heap_insert(temp);  //\u6700\u540e\u518d\u5c06\u6211\u4eec\u624b\u5934\u7684\u8fd9\u4e2a\u51fd\u6570\u9001\u56de\u5230\u5806\u91cc \n    }\n    return 0;    \n}\n\n```",
        "postTime": 1501331011,
        "uid": 43355,
        "name": "zschhh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u9898\u5916\u8bdd\uff1a\u672c\u6765\u53ea\u662f\u50cf\u968f\u4fbf\u5199\u4e00\u4e0b\u6d4b\u6d4b\u6570\u636e\u7684\uff0c\u7ed3\u679c\u5c31A\u4e86\uff08\u55b5\u55b5\u55b5\uff1f\uff09\n\n\u5206\u6790\uff1a\u5bf9\u4e8e\u8fd9\u9053\u9898\u76ee\uff0c\u6211\u9009\u62e9\u5927\u6839\u5806\uff08\u8c8c\u4f3c\u5f88\u5c11\u6709\u4eba\u60f3\u5230\uff09\uff0c\u7406\u7531\u5982\u4e0b\uff1a\n\n1.\u5927\u6839\u5806\u4e2d\uff0c\u6839\u6700\u5927\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u5728\u8ba1\u7b97\u51fd\u6570\u503c\u65f6\uff0c\u53ea\u8981\u51fd\u6570\u503c\u5927\u4e8e\u6839\uff0c\u5c31\u4e0d\u7528\u7ee7\u7eed\u6c42\u503c\u4e86\uff0c\u53cd\u4e4b\uff0c\u5c06\u51fd\u6570\u503c\u4e0e\u6839\u8fdb\u884c\u66ff\u6362\n\n2.\u8fd9\u65f6\uff0c\u6211\u4eec\u8981\u6ce8\u610f\uff1a\u5f53\u5806\u6ca1\u6ee1\uff08\u5373\u5806\u7684\u5927\u5c0f\u672a\u8d85\u8fc7m\u65f6\uff09\uff0c\u76f4\u63a5\u63d2\u5165\u5373\u53ef\uff08\u6ce8\u610f\u5806\u7684\u7ef4\u62a4\uff09\n\n3.\u6700\u540e\uff0c\u5c06\u5806\u4e2d\u5143\u7d20\u53d6\u51fa\u5b58\u653e\u5165\u6570\u7ec4\uff0c\u518d\u5012\u5e8f\u8f93\u51fa\u5373\u53ef\n\n```cpp\n//\u5927\u6839\u5806 \n#include<cstdio>\nconst int maxn = 10010,maxm = 10010;\nint n,m,a,b,c,heap[maxm],ans[maxm],heap_size,tmp;\nvoid swap(int &a,int &b){tmp = a,a = b,b = tmp;}\nvoid put(int value){\n    heap[++heap_size] = value;\n    int now = heap_size,next;\n    while(now > 1){\n        next = now >> 1;\n        if(heap[now] <= heap[next]) return;\n        swap(heap[now],heap[next]);\n        now = next;\n    }\n}\nint get(){\n    int value = heap[1],now = 1,next;\n    heap[1] = heap[heap_size--];\n    while(now << 1 <= heap_size){\n        next = now << 1;\n        if(next < heap_size && heap[next + 1] > heap[next]) next++;\n        if(heap[now] >= heap[next]) break;\n        swap(heap[now],heap[next]);\n        now = next;\n    }\n    return value;\n}\n//\u5927\u6839\u5806\u64cd\u4f5c \nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i = 1,j = 0;i <= n;i++,j = 0){\n        scanf(\"%d%d%d\",&a,&b,&c);\n        while(++j){\n            int value = a * j * j + b * j + c;\n            if(heap_size < m) put(value);//\u5982\u679c\u5806\u8fd8\u6709\u7a7a \n            else if(value < heap[1]){get(); put(value);}//\u5982\u679c\u5806\u7684\u6839\u5927\u4e8e\u76ee\u524d\u51fd\u6570\u503c\uff0c\u66ff\u6362\u3002 \n            else break;//\u505c\u6b62\u679a\u4e3e\u51fd\u6570\u503c \n        }\n    }\n    for(int i = 1;i <= m;i++) ans[i] = get();//\u53d6\u51fa\u5143\u7d20 \n    for(int i = m;i >= 1;i--) printf(\"%d \",ans[i]);//\u5012\u5e8f\u8f93\u51fa \n    return 0;\n}\n```",
        "postTime": 1500952602,
        "uid": 19778,
        "name": "water_mi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u4e71\u641e\u5927\u6cd5\u597d(\u5212\u53bb)\n\n#\u9996\u5148,\u8fd9\u662f\u4e00\u9053\u6570\u5b66\u9898\n\n\u5bf9\u79f0\u8f74x = -b/2a < 0,\u6545f(x)\u5728N\\*\u5185\u4e25\u683c\u9012\u589e\n\n#\u770b\u4e00\u4e0b\u6570\u636e\u8303\u56f4,n,m<=10000, \u800c\u4e14\u5e38\u6570\u8303\u56f4\u4e5f\u5f88\u5c0f\n\n\u4e8e\u662f\u8003\u8651\u751f\u7b97\u51fd\u6570\u503c\n\n\u4e00\u91cd\u5faa\u73af\u6700\u591a\u8dd110^7\u6b21\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7b97[1,100]\u5185\u7684\u51fd\u6570\u503c\u800c\u4e0d\u4f1aT\n\n```cpp\n#include <bits/stdc++.h>\n#define nmax 110\n#define LL long long\n#define ULL unsigned long long\nusing namespace std;\ninline LL read()\n{\n    int n = 0,k = 1;\n    char ch = getchar();\n    while ((ch > '9' || ch < '0') && ch != '-')  ch = getchar();\n    if(ch == '-') k = -1, ch = getchar();\n    while (ch <= '9' && ch >= '0')\n      {\n          n = n * 10 + ch - '0';\n          ch = getchar();\n      }\n    return n * k;\n}\ninline void print(LL n)\n{\n    if(n < 0) { putchar('-'); n = -n;}\n    if(n > 9) print(n / 10);\n    putchar(n % 10 + '0');\n    return ;\n}\nint n, m, a, b, c;\npriority_queue < int, vector <int>, greater <int> > q;//\u5927\u5bb6\u5e94\u8be5\u90fd\u80fd\u770b\u51fa\u662f\u4f18\u5148\u961f\u5217\ninline int f(int x)\n{\n    return a * x * x + b * x + c;//\u7b80\u5355\u7c97\u66b4\u7b97\u51fd\u6570\u503c\n}\nint main()\n{\n    n = read();\n    m = read();\n    for(int i = 0; i < n; i++)//n\u4e2a\u51fd\u6570\n    {\n        a = read();\n        b = read();\n        c = read();\n        for(int j = 1; j <= 100; j++)\n            q.push(f(j));//\u7b97[1,100]\u5185\u7684\u51fd\u6570\u503c,\u8bdd\u8bf4[1,50]\u4f1a\u5f9790(\u5f53\u65f6\u6015T\u5c31\u6ca1\u6562\u7b97\u5230100)TAT\n    }\n    for(int i = 0; i < m; i++)\n    {\n        printf(\"%d \", q.top());\n        q.pop();\n    }\n    return 0;\n}\n```\n\u8bf4\u5230\u5e95,\u8fd8\u662f\u6d1b\u8c37\u6570\u636e\u592a\u6c34\n",
        "postTime": 1498916519,
        "uid": 19551,
        "name": "NishikinoMaki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u6c42\u6700\u5c0f\u7684m\u4e2a\u51fd\u6570\u503c\uff0c\u5fc5\u7136\u8981\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002\u5feb\u901f\u6392\u5e8f\u53ea\u9002\u7528\u4e8e\u6709\u9650\u4e2a\u5143\u7d20\uff0c\u65e0\u9650\u4e2a\u5143\u7d20\u53ea\u80fd\u7528\u5806\u6392\u5e8f\u3002\u6211\u4eec\u9700\u8981\u679a\u4e3e\u51fa\u53ef\u80fd\u7684\u51fd\u6570Fi(x)\u7684\u503c\uff0c\u82e5\u5b83\u5c0f\u4e8e\u5806\u9876\u5143\u7d20\uff0c\u5219\u4ee4\u5176\u5165\u5806\u3002\u89c2\u5bdf\u5f0f\u5b50\u53ef\u77e5\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2ai\u503c\uff0cFi(x)>Fi(x-1)\u3002\u5373\u82e5Fi(x-1)\u6ca1\u6709\u6210\u529f\u5165\u5806\uff0c\u5219Fi(x)\u4e5f\u4e0d\u4f1a\u6210\u529f\u5165\u5806\u3002\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(MNlogM)\uff0c\u5b9e\u9645\u590d\u6742\u5ea6\u4f1a\u8fdc\u5c0f\u4e8e\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u7684logM\u500d\u3002\n\n\u9644C++\u4ee3\u7801\uff1a\n\n```cpp\n\n#include<iostream>\nusing namespace std;\nint n,m,i,a[10001],b[10001],c[10001],heap[10001],x=0,answer[10001]; \nbool large[10001]={};\nint build (int No)\n{\n    if (heap[No]<heap[No*2]&&(No*2<=m)&&(heap[No*2]>heap[No*2+1]||No*2+1>m))\n    {\n                                                                 swap(heap[No],heap[No*2]);\n                                                                 build(No*2);\n    }\n    else\n    if (heap[No]<heap[No*2+1]&&(No*2+1<=m))\n    {\n                                           swap(heap[No],heap[No*2+1]);\n                                           build(No*2+1);\n    } \n}\nint main ()\n{\n    cin>>n>>m;\n    for (i=1;i<=n;i++)\n    cin>>a[i]>>b[i]>>c[i];\n    for (i=1;i<=m+1;i++)\n    heap[i]=2147483647;\n    while (1)\n    {\n          x++;\n          for (i=1;i<=n;i++)\n          if (!large[i])\n          if (heap[1]>a[i]*x*x+b[i]*x+c[i])\n          {\n                                           heap[1]=a[i]*x*x+b[i]*x+c[i];\n                                           build(1);\n          }\n          else\n          large[i]=1;\n          for (i=1;i<=n;i++)\n          if (!large[i])\n          goto abc;\n          break;\n          abc:;\n    }\n    for (i=m;i>=1;i--)\n    {\n        answer[i]=heap[1];\n        heap[1]=heap[i];\n        heap[i]=0;\n        build(1);\n    }\n    for (i=1;i<=m;i++)\n    cout<<answer[i]<<' ';\n    return 0;\n}\n\n```",
        "postTime": 1437657922,
        "uid": 4865,
        "name": "Mr_Li",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4ee3\u7801\u9001\u5230\n\n```cpp\nvar\n  n,m,r,i,j,tot,k:longint;\n  tree,num,x:array[1..20000] of longint;\n  a,b,c:array[1..10000] of longint;\n//=======================================\nprocedure insert(v,x:longint);                             {\u63d2\u5165\u4e00\u4e2a\u8282\u70b9}\nvar\n  i,t:longint;\nbegin\n  inc(tot);                                                {\u589e\u52a0\u8282\u70b9\u603b\u6570}\n  tree[tot]:=v; num[tot]:=x;                               {\u5f00\u59cb\u653e\u5728tree\u7684\u5c3e\u5df4\u4e0a\uff0c\u518d\u4e0e\u7236\u4eb2\u6bd4\u8f83\u4ea4\u6362\uff0cnum\u5bf9\u5e94\u5176\u6240\u5728\u7684\u51fd\u6570\u7f16\u53f7}\n  i:=tot;\n  while (i>1) and(tree[i]<tree[i shr 1]) do                {\u4e0d\u65ad\u4e0e\u5176\u7236\u4eb2\u6bd4\u8f83}\n  begin\n    t:=tree[i]; tree[i]:=tree[i shr 1]; tree[i shr 1]:=t;\n    t:=num[i];  num[i]:=num[i shr 1];   num[i shr 1]:=t;\n    i:=i div 2;                                            {\u4ea4\u6362\u540e\u66f4\u65b0\u6307\u9488\u6307\u5411}\n  end;\nend;\n//=======================================\nprocedure del;                                             {\u5220\u9664\u8282\u70b9}\nvar\n  i,j,t:longint;\nbegin\n  if tot<1 then exit;\n  tree[1]:=tree[tot]; num[1]:=num[tot];                    {\u5c06\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u63d0\u4e0a\u6765\uff0c'num[1]:=num[tot];',\u4e00\u5b9a\u4e0d\u8981\u5fd8\u4e86\u8fd9\u53e5\u8bdd\u3002\u3002\u4e0d\u7136\u4f1a\u5f88\u60b2\u5267}\n  dec(tot);                                                {\u603b\u6570-1}\n  i:=1; j:=i*2;                                            {\u5c06\u90a3\u4e2a\u8282\u70b9\u4e0d\u65ad\u4e0e\u5176\u513f\u5b50\u6bd4\u8f83\u4ea4\u6362\uff0c\u7ef4\u62a4\u5c0f\u6839\u5806\u7684\u6027\u8d28}\n  if (j<n)and(tree[j+1]<tree[j]) then inc(j);\n  while (j<=n)and(tree[j]<tree[i]) do\n  begin\n    t:=tree[i]; tree[i]:=tree[j]; tree[j]:=t;\n    t:=num[i];  num[i]:=num[j];   num[j]:=t;\n    i:=j;                                                  {\u7ef4\u62a4\u6307\u9488\u6307\u5411}\n    j:=i*2;\n    if (j<n)and(tree[j+1]<tree[j]) then inc(j);\n  end;\nend;\n//=======================================\nbegin\n  assign(input,'minval.in'); reset(input);\n  assign(output,'minval.out'); rewrite(output);\n  read(n,m); tot:=0;\n  for i:=1 to n do read(a[i],b[i],c[i]);\n  for i:=1 to n do\n  begin\n    insert(a[i]+b[i]+c[i],i);                              {\u5148\u9884\u5904\u7406n\u4e2a\u503c}\n    x[i]:=1;\n  end;\n  j:=0;\n  while j<m do\n  begin\n    write(tree[1],' ');                                    {\u6bcf\u6b21\u8f93\u51fa\u6700\u5c0f\u90a3\u4e00\u4e2a\uff0c\u7136\u540e\u5c06\u5176\u7684x\u503c+1\u518d\u7b97\u4e00\u4e2a\u503c\uff0c\u52a0\u5165\u5806\u4e2d}\n    r:=num[1];\n    inc(x[r]);                                             {x[i]\u5373\u5bf9\u5e94i\u7684\u5f53\u524dX\u503c}\n    del;\n    insert(a[r]*x[r]*x[r]+b[r]*x[r]+c[r],r);\n    inc(j);\n  end;\n  close(input); close(output);\nend.\n```",
        "postTime": 1435742497,
        "uid": 7608,
        "name": "htt_wbsxg2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\n\n\u7528$now[i]$\u8bb0\u5f55\u4f7f\u5f97\u5f53\u524d\u72b6\u6001\u4e0b$f_i(x)$\u53d6\u5f97\u6700\u5c0f\u503c\u7684\u81ea\u53d8\u91cf\u7684\u503c\u3002\n\n\u521d\u59cb\u5316\uff1a\n\u521d\u59cb\u72b6\u6001\uff0c\u6211\u4eec\u6709$n$\u4e2a\u4e8c\u6b21\u51fd\u6570$f(x)=A_ix^2+B_ix+C_i,x \\in \\mathbb{N}^+$;\n1. \u5bf9\u79f0\u8f74$- \\frac{B_i}{2A_i} \\in (- \\infty , 1)$\u5219$now[i]=1$\uff1b\n2. \u5bf9\u79f0\u8f74$- \\frac{B_i}{2A_i} \\in [1, \\infty )$\u5219$now[i]= \\lfloor - \\frac{B_i}{2A_i} \\rfloor$\n\n\u5b9a\u4e49\u4e00\u4e2a`multiset<node> S`;\n\n\u5176\u4e2d\uff0c`node`:\n```cpp\nstruct node\n{\n    int val, i;\n    node() {}\n    node(int Value, int i_f)\n    {\n        val = Value;\n        i = i_f;\n    }\n    bool operator<(const node &o) const\n    {\n        return val < o.val;\n    }\n};\n```\n`val`\u5b58\u653e\u51fd\u6570\u503c\uff0c`i`\u8868\u793a\u8fd9\u662f\u8fd9\u662f$i$\u53f7\u51fd\u6570\uff0c\u4e5f\u5c31\u662f$f_i(x)$;\n\n\u5c06$n$\u4e2a\u51fd\u6570\u603c\u5165`S`\uff0c\u5185\u90e8\u987a\u5e8f\u6309\u7167$f_i(now[i])$\u5347\u5e8f\uff1b\n\n\u4ee5\u4e0b\u5185\u5bb9\u6267\u884c$m$\u6b21:\n\n\u6bcf\u6b21\u53d6`S`\u7684\u5934\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u6700\u5c0f\u503c\uff0c\u8f93\u51fa\u5934\u7684`val`\uff0c\u5e76\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u4e2a\u51fd\u6570\u662f$cur$\u53f7\u51fd\u6570\uff1b\n\n$f_{cur}(x)$\u5bf9\u5e94\u7684$now[cur]++$\uff0c\u628a$node(f_{cur}(now[cur]),cur)$\u6254`S`\u91cc\uff1b\n\n\ncode:\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 10005;\n\nint n, m, k;\nint now[N], A[N], B[N], C[N], cnt[N];\nstruct node\n{\n    int val, i;\n    node() {}\n    node(int Value, int i_f)\n    {\n        val = Value;\n        i = i_f;\n    }\n    bool operator<(const node &o) const\n    {\n        return val < o.val;\n    }\n};\nmultiset<node> S;\nvector<int> ans;\ninline int f(int i, int x)\n{\n    return A[i] * x * x + B[i] * x + C[i];\n}\n\ninline int sym(int i)\n{\n    int s = -(B[i] / (2 * A[i]));\n    if (s <= 0)\n        s = 1;\n    return s;\n}\n\nint main()\n{\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++)\n        scanf(\"%d%d%d\", &A[i], &B[i], &C[i]);\n    for (int i = 1; i <= n; i++)\n        now[i] = sym(i);\n    for (int i = 1; i <= n; i++)\n        S.insert(node(f(i, now[i]), i));\n    for (int i = 1; i <= m; i++)\n    {\n        multiset<node>::iterator it = S.begin();\n        ans.push_back(it->val);\n        S.insert(node(f(it->i, ++now[it->i]), it->i));\n        S.erase(it);\n    }\n    for (int i = 0; i < ans.size(); i++)\n        cout << ans[i] << ' ';\n\n    return 0;\n}\n```\n\n\n",
        "postTime": 1573452631,
        "uid": 68987,
        "name": "kion",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "# \u9898\u76ee\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/7sa3zr7m.png)\n# \u60f3\u6cd5\uff1a\n\n## \u51fd\u6570\u8c03\u7528\u90e8\u5206\uff1a\n\u5c06\u51fd\u6570\u7684\u8c03\u7528\u90e8\u5206\u5199\u6210\u4e00\u4e2a\u51fd\u6570         \n\uff08Fi(x)=Ai*x^2+Bi*x+Ci (x\u2208N*)\uff09\uff1a\n```cpp\nint f(int a,int b,int c,int t)\n{\n\treturn a*t*t+b*t+c;\n}\n```\n## \u6b63\u9898\uff1a\n\u9996\u5148\u662f\u6700\u66b4\u529b\u7684\u65b9\u6cd5\uff1a\u628a1~m\u7684\u6240\u6709\u51fd\u6570\u503c\u653e\u8fdb\u4e00\u4e2a\u5927\u6839\u5806\u91cc\u9762\uff0c\u6700\u540e\u62ff\u4e2a\u6808\u6765\u8f93\u51fa\u3002\u7ed3\u679c\u6211=\u5c31TLE\u4e86\u3002(\u673a\u623f\u540c\u5b66\u5b9e\u9a8c\u8fc7\uff09\n\u7136\u540e\u6211\u5c31\u6539\u601d\u8def\u4e86\u3002\n\u6211\u6253\u7b97\u5927\u6839\u5806\u53bb\u5b58\u7b54\u6848\uff0c\u4ece\u5c0f\u5230\u5927\u53bb\u4e00\u4e2a\u4e00\u4e2a\u5165\u961f\uff0c\u5982\u679c\u524d\u9762\u4e00\u4e2a\u5927\u4e8e\u5806\u9876\u5c31break\uff0c\u5426\u5219\u5165\u961f\u3002\u6700\u540e\u53bb\u5927\u6839\u5806\u4e0a\u9762\u7684m\u4e2a\u8f93\u51fa\u3002\uff08\u5148\u51fa\u7684\u540e\u8f93\u51fa\uff09\n\n\n\n\n\n# \u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\npriority_queue<int>heap;\nint n,m;\nint f(int a,int b,int c,int t)\n{\n\treturn a*t*t+b*t+c;\n}\nstack<int> s;\nint main()\n{\n\tint a,b,c,d;\n\tcin>>n>>m;\n\tcin>>a>>b>>c;\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\theap.push(f(a,b,c,j));\n\t\t}\n\t\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\t\n\t\tcin>>a>>b>>c;\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(f(a,b,c,j)<heap.top())\n\t\t\t{\n\t\t\t  \theap.pop();\n\t\t\t\theap.push(f(a,b,c,j));\t\n\t\t\t}\n\t\t\telse break;\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\ts.push(heap.top());\n\t\theap.pop();\n\t}\n\tfor(int i=m;i>=1;i--)\n\t{\n\t\tcout<<s.top()<<' ';\n\t\ts.pop();\n\t}\n}\n```\n",
        "postTime": 1571051524,
        "uid": 37009,
        "name": "xdc\u5440",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "# \u611f\u8c22\u7ba1\u7406\u5458\u5927\u5927\uff0c\u6c42\u901a\u8fc7\n\n\u9996\u5148\uff0c\u5efa\u8bae\u5148\u505a\u4e00\u4e0b[P1631](https://www.luogu.org/problemnew/show/P1631)\uff0c\u6211\u7684\u601d\u8def\u5c31\u662f\u4ece~~\u9898\u89e3~~\u8fd9\u91cc\u6765\u7684\n### \u5148\u4ecb\u7ecd\u4e00\u4e2a\u505a\u6cd5\n**\u66b4\u529b**\n\n\u987e\u540d\u601d\u4e49\uff0c\u6211\u4eec\u53ef\u628a\u6240\u6709\u7684\u51fd\u6570\u503c\u4e00\u4e00\u6c42\u51fa\uff0c\u7136\u540e\u6392\u5e8f\uff08\u9762\u5bf9\u6b64\u9898\uff0c\u6b64\u65b9\u6cd5\u4f7f\u7528\uff0c~~\u770b\u4f60\u8981\u4e0d\u8981\u6c34AC\u7387\u4e86~~\uff09\n\n\u4f46\u662f\u6211\u4eec\u5728\u6bd4\u8d5b\u65f6\uff0c\u4e3a\u4e86\u907f\u514dT\uff0c\u5c31\u5fc5\u987b\u91c7\u7528\u53e6\u4e00\u79cd\u65b9\u6cd5\n### \u601d\u8def\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff0c\u51fd\u6570\u7684\u6700\u5c0f\u503c\u5fc5\u5b9a\u6765\u81ea\u4e8eF\uff081\uff09\n\n\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u5c06\u8be5\u6700\u5c0f\u503c\u7684\u51fd\u6570\u6539\u4e3aF\uff082\uff09\uff0c\u518d\u8fdb\u5165\u5e8f\u5217\u4e2d\uff0c\u6392\u5e8f\u540e\u8f93\u51fa\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u518d\u5bf9\u6700\u5c0f\u503c\u7684\u51fd\u6570\u6539\u4e3aF\uff08x+1\uff09\uff08x\u4e3a\u539f\u51fd\u6570\u503c\uff0c\u521d\u59cb\u503c\u4e3a1\uff09\n\n\u5982\u6b64\u5faa\u73af\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u524dm\u4e2a\u6700\u5c0f\u51fd\u6570\u503c\uff0c\u5f53\u5f97\u5230m\u4e2a\u540e\u4fbf\u505c\u6b62\uff0c\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u7a7a\u95f4\u548c\u8ba1\u7b97\u51fd\u6570\u7684\u65f6\u95f4\n### \u505a\u6cd5\n\u5bf9\u4e8e\u6392\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5806\n\n\u5982\u4f55\u4f7f\u7528\u5462\uff1f\n\n\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5806\u9876\u5143\u7d20\u6539\u4e3aF\uff08x+1\uff09\uff0c\u7136\u540e\u7ef4\u62a4\u5806\u5373\u53ef\n#### \u7ec6\u8282\u53ca\u4ee3\u7801\n\u5f53\u6211\u6253\u5b8c\u4ee3\u7801\u540e\uff0c\u53d1\u73b0\u7b54\u6848\u662f**\u9519**\u7684\uff01\n\nemmmmm\n\n\u7ecf\u8fc7\u6392\u67e5\uff0c\u6211\u53d1\u73b0F\uff081\uff09\u5e76\u4e0d\u662f\u6709\u5e8f\u7684\uff08\u5373a\uff0cb\uff0cc\u975e\u6709\u5e8f\uff09\n\nemmmmm\n\n\u65e0\u5948\u4e4b\u4e0b\uff0c\u6211\u53ea\u597d\u5148sort\u54af\uff08\u4e5f\u53ef\u4ee5\u5148\u5806\u6392\u4e00\u904d\uff0c~~\u4f46\u6211\u61d2\u5f97\u6253\u54af~~\uff09\n\n\u4ee3\u7801\uff08\u53d8\u91cf\u540d\u53ef\u80fd\u6709\u4e9b\u4e0d\u4e00\u6837\uff09\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define N 10010\nusing namespace std;\nint n,now[N],m;\nstruct pp{\n\tint dui,id;\n}c[N];\nstruct node{//\u7ed3\u6784\u4f53\u4e3a\u6392\u5e8f\u4f7f\u7528\n\tint a,b,d;\n}f[N];\nbool cmp(pp aa,pp bb)\n{\n\treturn aa.dui<bb.dui;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++) scanf(\"%d%d%d\",&f[i].a,&f[i].b,&f[i].d);\n\tfor(int i=1;i<=n;i++) c[i].dui=f[i].a+f[i].b+f[i].d,now[i]=1,c[i].id=i;//\u521d\u59cb\u5316 \u5176\u4e2did\u4e3a\u7f16\u7801\n\tint sum=0;\n\tsort(c+1,c+1+n,cmp);\n\twhile(++sum<=m)\n\t{\n\t\tprintf(\"%d \",c[1].dui);\n\t\tint num=c[1].id;\n\t\tnow[num]++;//now\u4e3a\u51fd\u6570F\u4e2d\u7684x\u503c\n\t\tint y=now[num];\n\t\tc[1].dui=f[num].a*y*y+f[num].b*y+f[num].d;//\u66ff\u6362c[1].dui\n\t\tint x=1;\n\t\twhile(x<<1<=n)//\u5806\u7ef4\u62a4\n\t\t{\n\t\t\tint s=x<<1;\n            if(c[s].dui>c[s+1].dui&&s+1<=n) s++;\n            if(c[x].dui>c[s].dui)\n            {\n                swap(c[x],c[s]);\n                x=s;  \n            }\n\t\t\telse break;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n# \u8fd9\u662f\u4e00\u7bc7\u826f\u5fc3\u9898\u89e3\uff0c\u867d\u7136\u6211\u77e5\u9053\u9ad8\u624b\u5982\u4e91\uff0c\u4f46\u6211\u4f9d\u7136\u5e0c\u671b\u53ef\u4ee5\u5e2e\u52a9\u5927\u5bb6",
        "postTime": 1559133946,
        "uid": 144523,
        "name": "JohnJoeZhu",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": " ## \u601d\u8def\n \u56e0\u4e3a\u6570\u636e\u91cf\u662f\u5f88\u5927\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u5230\u5c0f\u6839\u5806\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u4f18\u5316\u540e\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a**O(m*log2n)**\n \n\u51fd\u6570\u5728\u7b2c\u4e00\u8c61\u9650\u90fd\u662f**\u5355\u8c03\u9012\u589e**\u7684\u3002\u5bf9\u79f0\u8f74x=-b/(2*a)\n\n ## \u6b65\u9aa4\n 1.\u5148\u628a\u6bcf\u4e2a\u51fd\u6570\u81ea\u53d8\u91cfx=1\u7684\u503c\u6c42\u51fa\u6765\uff0c\u7136\u540e\u5efa\u7acb\u5c0f\u6839\u5806\uff0c\u518d\u5c06\u5806\u9876\u503ca[1]\u8f93\u51fa(\u4e00\u5b9a\u662f\u6700\u5c0f\u7684)\n \n 2.\u9009\u62e9\u8ba1\u7b97\u521a\u624d\u5806\u9876\u503c\u7684\u90a3\u4e2a\u51fd\u6570\uff0c**\u5176\u81ea\u53d8\u91cfx\u589e\u52a01**\uff0c\u91cd\u65b0\u8ba1\u7b97\u51fd\u6570\u503c\uff0c\u5e76**\u653e\u5230\u5806\u9876**\u3002\n \u7406\u7531\uff1a\u7531\u4e8e\u51fd\u6570\u5728\u7b2c\u4e00\u8c61\u9650\u90fd\u662f\u5355\u8c03\u9012\u51cf\u7684\uff0c\u6240\u4ee5\u5982\u679cA\u51fd\u6570\u503c\u662f\u5f53\u524d\u6700\u5c0f\u7684\uff0c\u6709\u53ef\u80fdA\u51fd\u6570\u503c\u4e00\u76f4\u662f\u6700\u5c0f\u7684\uff0c\u76f4\u5230\u6709\u53e6\u4e00\u4e2aB\u51fd\u6570\u7684\u503c\u8d85\u8fc7A\u51fd\u6570\u7684\u503c\uff0c\u5219\u9009\u62e9B\u51fd\u6570\uff0c\u6b64\u540e\u5b83\u53ef\u80fd\u6700\u5c0f\uff0c**\u6ca1\u6709\u5fc5\u8981\u6bcf\u6b21\u90fd\u628an\u4e2a\u51fd\u6570\u503c\u6c42\u51fa**\uff0c\u5927\u5927\u964d\u4f4e\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n3.\u91cd\u590d\u7b2c\u4e8c\u6b65m\u6b21\u3002\n\n ### \u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define fr(a , b , c) for(register ll a = b;a <= c;a++)\nll read(){\n\tll i = 0 , f = 1;\n\tchar ch;\n\tfor(ch = getchar();!isdigit(ch)&&ch!='-';ch = getchar());\n\tif(ch == '-'){\n\t\tf = -1;\n\t\tch = getchar();\n\t}\n\tfor(;isdigit(ch);ch = getchar())\n\t\ti = (i<<3)+(i<<1)+ch-'0';\n\treturn i*f;\n}\nconst int N = 500001;\nll n , m , a[N] , b[N] , c[N] , x[N];\npriority_queue<pair<ll,ll> >q;//\u5806\u4e2d\u6709\u4e24\u4e2a\u53d8\u91cf\uff0c\u4ee5\u7b2c\u4e00\u4e2a\u53d8\u91cf\u6392\u5e8f\nll f(ll x , ll i){\n\treturn a[i]*x*x+b[i]*x+c[i];\n}//\u8fd9\u6837\u5199\u5f88\u660e\u4e86\u4e14\u7b80\u6d01\nint main(){\n\tn = read() , m = read();\n\tfr(i , 1 , n) a[i] = read() , b[i] = read() , c[i] = read();\n\tfr(i , 1 , n){\n\t\tq.push(make_pair(-f(1 , i) , i));\n\t\t//\u56e0\u4e3a\u4e8c\u53c9\u5806\u521d\u59cb\u5316\u662f\u5927\u6839\u5806\uff0c\u800c\u5728\u5206\u6790\u4e2d\n        //\u6211\u4eec\u77e5\u9053\u5e94\u8be5\u7528\u5c0f\u6839\u5806\u3002\u8fd9\u91cc\u6211\u7528\u5230\u4e00\u4e2a\n        //\u6280\u5de7\uff0c\u6bcf\u6b21\u52a0\u5165\u8d1f\u6570\uff0c\u5c31\u53d8\u6210\u5c0f\u6839\u5806\u4e86\u3002\n\t\tx[i] = 1;//s\u662f\u8bb0\u5f55\u51fd\u6570i\u7684\u81ea\u53d8\u91cf\u7d2f\u52a0\u7684\u6570\u7ec4\n\t}\n\tfr(i , 1 , m){//\u6c42m\u4e2a\u51fd\u6570\u503c\n\t\tprintf(\"%lld \" , -q.top().first);//\u8f93\u51fa\u6700\u5c0f\u51fd\u6570\u503c(\u5c0f\u6839\u5806\u6700\u5c0f\u503c)\n\t\tll k = q.top().second;//\u7528k\u8bb0\u5f55\u5806\u9876\u51fd\u6570\u7684\u7f16\u53f7(\u4e0a\u6b21\u6700\u5c0f\u7684\u90a3\u4e2a)\n\t\tx[k]++;//\u7b2ck\u4e2a\u51fd\u6570\u7684x\u589e\u52a01\n\t\tq.pop();\n\t\tq.push(make_pair(-f(x[k] , k) , k));//\u653e\u5230\u5806\u9876\uff0c\u8986\u76d6\u4ee5\u524d\u7684\u503c\n\t}\n\treturn 0;\n}\n```\n**\u7ed3\u8bed**\uff1a\u8bf4\u5b9e\u8bdd\uff0c\u6211\u8ba4\u4e3a\u8fd9\u7684\u786e\u662f\u4e00\u9053\u5f88\u597d\u7684\u4e8c\u53c9\u5806\u7684\u5e94\u7528\u3002\u5927\u5bb6\u4e00\u5b9a\u8981\u7406\u89e3\u900f\u5f7b\u540e\u5199\u4e00\u5199\u4ee3\u7801\uff0c\u4ee3\u7801\u7684\u7ec6\u8282\u4e5f\u5f88\u591a\uff0c\u6211\u90fd\u5728\u6ce8\u91ca\u4e2d\u5448\u73b0\u4e86\u3002",
        "postTime": 1548336556,
        "uid": 65971,
        "name": "mrgogoup",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u8bf4\u8fd9\u662f\u4e00\u4e2a\u4e0d\u592a\u96be\u7684\u5806\u7684\u95ee\u9898\uff1b\uff08\u6765\u4e00\u53d1pascal\uff09\n\n\u8fd9\u9898\u4e00\u5b9a\u4e0d\u80fd\u7528\u76f4\u63a5\u5faa\u73af\u7684\u5806\uff0c\u4f1a\u5f88\u6162\uff0c\u4f1a\u7206\u6389\uff1b\n\n\u5176\u6b21\uff0c\u907f\u514d\u4e00\u4e2a\u5c0f\u8bef\u533a\uff08\u9898\u76ee\u5751\u6211\uff0c\u7b2c\u4e00\u6b21\u6ca1ak\uff09\uff1a\u6700\u540e\u4e00\u4e2a\u6570\u53ea\u8981\u8f93\u51fa\u4e00\u6b21\uff0c\u4e0d\u8bba\u540e\u9762\u662f\u5426\u8fd8\u6709\u76f8\u540c\u7684\n\n\u7531\u4e8e\u9898\u76ee\u4e2d\u7684\u51fd\u6570\u6ee1\u8db3\u5728\u6b63\u65e0\u7a77\u4e0a\u5355\u8c03\u9012\u589e\uff0c\u6240\u4ee51\u7684\u51fd\u6570\u503c\u4e00\u5b9a\u662f\u5355\u4e2a\u51fd\u6570\u4e2d\u6700\u5c0f\u7684\uff0c\u4e8e\u662f\u628a\u6bcf\u4e2a\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u503c\u653e\u8fdb\u5806\u91cc\uff1b\n\n\u7136\u540e\u50cf\u6211\u7684\u7a0b\u5e8f\u91cc\u9762s[?,1]\u7528\u6765\u8bb0\u5f55\u51fd\u6570\u503c\uff0cs[?,2]\u7528\u6765\u8bb0\u5f55\u662f\u54ea\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u95ee\u9898\u5c31\u7b80\u5355\u4e86\uff0c\u53ea\u8981\u6bcf\u6b21\u8f93\u51fa\u4e00\u4e2a\u5c0f\u6839\u5806\u7684\u9876\u90e8\uff0c\u7136\u540e\n\n\u628a\u5bf9\u5e94\u51fd\u6570\u7684\u4e0b\u4e2a\u503c\u52a0\u8fdb\u5806\u91cc\u9762\uff0c\u76f4\u5230\u8f93\u51fam\u4e2a\uff08\u3010\u6ce8\u3011\u4ea4\u6362\u503c\u65f6\u8bb0\u5f97s\u7684\u4e24\u4e2a\u503c\u4e00\u8d77\u6362\uff09\n\n\u4e0b\u9762\u662f\u6211\u7684code\uff1a\n\n\n```cpp\nprogram min;\nvar\n    s:array[0..10000,1..2]of longint;\n    a,b,c,d:array[1..10000]of longint;\n    i,j,n,m,p,t,x,y,sum,ans:longint;\nprocedure intt(y:longint);//\u5806\u7684\u63d2\u5165\u64cd\u4f5c\nvar\n    o,temp:longint;\nbegin\n      inc(t);\n      s[t,1]:=y;\n      s[t,2]:=x;\n      o:=t;\n      while (o>0)and(s[o shr 1,1]>s[o,1])do\n      begin\n            temp:=s[o shr 1,1];\n            s[o shr 1,1]:=s[o,1];\n            s[o,1]:=temp;\n            temp:=s[o shr 1,2];\n            s[o shr 1,2]:=s[o,2];\n            s[o,2]:=temp;\n            o:=o shr 1;\n      end;\nend;\nfunction outt():longint;//\u627e\u5c0f\u6839\u5806\u7684\u9876\u503c\nvar\n    i,j,temp:longint;\n    p:boolean;\nbegin\n      outt:=s[1,1];\n      s[1,1]:=s[t,1];\n      s[1,2]:=s[t,2];\n      dec(t);\n      i:=1;\n      p:=true;\n      while (p)and(i shl 1<=t)do\n      begin\n            if (i shl 1+1>t)or(s[i shl 1,1]<s[i shl 1+1,1])then j:=i shl 1\n            else j:=i shl 1+1;\n            if s[j,1]<s[i,1] then\n            begin\n                  temp:=s[j,1];\n                  s[j,1]:=s[i,1];\n                  s[i,1]:=temp;\n                  temp:=s[j,2];\n                  s[j,2]:=s[i,2];\n                  s[i,2]:=temp;\n                  i:=j;\n            end\n            else p:=false;\n      end;\nend;\nbegin\n      readln(n,m);\n      for i:=1 to n do\n      begin\n            readln(a[i],b[i],c[i]);\n            x:=i; //\u521d\u59cb\u8d4b\u503c\uff0c\u522b\u5fd8\u4e86\n            intt(a[i]+b[i]+c[i]);//\u628a1\u7684\u51fd\u6570\u503c\u653e\u8fdb\u53bb\n            inc(d[i]);//d\u7528\u6765\u8bb0\u5f55\u8fd9\u4e2a\u51fd\u6570\u5df2\u7ecf\u8ba1\u7b97\u5230\u4e86\u54ea\u4e2a\u503c\n      end;\n      for j:=1 to m do\n      begin\n            x:=s[1,2];//\u627e\u5230\u8be5\u51fd\u6570\u7684\u4f4d\u7f6e\n            inc(d[x]);//\u8ba1\u7b97\u8fd8\u6ca1\u7b97\u8fc7\u7684\u503c\n            ans:=outt();\n            write(ans,' ');//\u8f93\u51fa\u5f53\u524d\u6700\u5c0f\u503c\n            if j<m then//\u5c3d\u91cf\u51cf\u5c11\u8ba1\u7b97\u6b21\u65700-0\n            begin\n                  intt(a[x]*d[x]*d[x]+b[x]*d[x]+c[x]);//\u63d2\u5165\u503c\n            end;\n      end;\nend.\n\n```",
        "postTime": 1502374175,
        "uid": 38313,
        "name": "chenkaixing",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "//\u5148\u8ba1\u7b97\u51fax=1\u65f6\u5019\u7684\u60c5\u51b5\u5b58Heap\u91cc\n\n//\u7136\u540e\u6bcf\u6b21\u627e\u6700\u5c0f\u65f6\uff0c\u63d2\u5165\u5f53\u524d\u7684\u6700\u5c0f\u7684\u6240\u5c5e\u7684\u51fd\u6570f[i](x+1)\u5230root \uff0c\u7136\u540e\u7ef4\u62a4\u5c0f\u6839\u5806\n\n\uff08\u4e3a\u4ec0\u4e48\uff1f\u6839\u636e\u4e0d\u7b49\u5f0f\u7684\u6027\u8d28if a<b then a\\*c<b\\*c while c>0\uff09\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n//w\u8bb0\u5f55\u5f53\u524d\u7684\u51fd\u6570\u6700\u5927\u7684x\n//name[i]\u8868\u793a\u7b2cI\u4e2a\u8282\u70b9\u7684\u662f\u7b2c\u51e0\u4e2a\u51fd\u6570\n//insert\u63d2\u5165\u4e00\u4e2a\u65b0\u5143\u7d20\u5230\u5806\uff0c\u7136\u540e\u7ef4\u62a4\u5806\u7684\u6027\u8d28\uff0c\u8fd9\u91cc\u662f\u7ef4\u62a4\u5c0f\u6839\u5806\n//get\u5f97\u5230\u5f53\u524d\u6700\u5c0f\u503c\u5c31\u662froot\uff0c\u7136\u540e\u5220\u6389\u628a\u6700\u540e\u7684\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3aroot\u7136\u540e\u7ef4\u62a4\u5c0f\u6839\u5806\nprogram wonder;\nconst\n  inf='minval.in';\n  outf='minval.out';\nvar\n  len,i,j,n,tmp,ans,m:longint;\n  heap,w,a,b,c,name:array[0..10000] of longint;\nprocedure swap(var aa,bb:longint);\nvar t:longint;\nbegin\n  t:=aa;  aa:=bb;  bb:=t;\nend;\nprocedure insert(tmp:longint);\nvar\n  i:longint;\nbegin\n  inc(len);\n  heap[len]:=tmp; name[len]:=len;\n  i:=len;\n  while (i>1) and (heap[i div 2]>heap[i]) do\n  begin\n    swap(heap[i],heap[i div 2]);\n    swap(name[i],name[i div 2]);\n    i:=i div 2;\n  end;\nend;\nprocedure ch;\nvar\n dad,son:longint;\n stop:boolean;\nbegin\n  write(heap[1],' ');\n  inc(w[name[1]]);\n  heap[1]:=w[name[1]]*w[name[1]]*a[name[1]]+w[name[1]]*b[name[1]]+c[name[1]];\n  dad:=1;\n  stop:=false;\n  while ((dad*2+1<=len) or (dad*2<=len)) and (not stop) do\n  begin\n   if (heap[dad*2+1]>heap[dad*2]) or (dad*2+1>len) then\n    son:=dad*2\n    else son:=dad*2+1;\n   if heap[dad]<=heap[son] then stop:=true\n    else begin\n           swap(heap[dad],heap[son]);\n           swap(name[dad],name[son]);\n           dad:=son;  //!!!!\n         end;\n  end;\nend;\nbegin\n  assign(input,inf);  assign(output,outf);\n  reset(input);   rewrite(output);\n  readln(n,m);\n  for i:= 1 to n do\n  begin\n    read(a[i],b[i],c[i]);\n    tmp:=a[i]+b[i]+c[i];\n    w[i]:=1;\n    insert(tmp);\n  end;\n  for i:= 1 to m do ch;\n  close(input); close(output);\nend.\n```",
        "postTime": 1493470106,
        "uid": 19015,
        "name": "bobble",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u6bd4\u8f83\u57fa\u7840\u7684\u4e00\u9053\u9898\uff0c\u867d\u7136\u53ef\u4ee5\u7528stl\u505a\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u624b\u5199\u4e00\u904d\u52a0\u5f3a\u7406\u89e3\u8fd8\u662f\u5f88\u6709\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u9898\u89e3\u91cc\u5e76\u6ca1\u6709\uff0c\u6240\u4ee5\u6211\u6765\u6c34\u4e00\u53d1\uff1b\n\n\u8fd9\u9053\u9898\u660e\u663e\u6700\u5c0f\u5806\uff0c\u6211\u4e3b\u8981\u8bf4\u4e0b\u5806\uff0c\u5c31\u662f\u8bf4\u4e0d\u7528\u7ba1\u6574\u4e2a\u6811\uff0c\u53ea\u8981\u4fdd\u8bc1\u67d0\u8282\u70b9\u5c0f\u4e8e\u5176\u7236\u4eb2\u8282\u70b9\u540c\u65f6\u5927\u4e8e\u513f\u5b50\u8282\u70b9\u3002\n\n\u4e8e\u662f\u82e5\u80fd\u66f4\u65b0\uff0c\u5373\u53ea\u7528\u66f4\u65b0\u5176\u513f\u5b50\u8282\u70b9\u4e0e\u7236\u4eb2\u8282\u70b9\uff0c\u5806\u5c31\u8fd9\u4e48\u641e\u5b9a\u4e86\u221a\n\n\u5177\u4f53\u601d\u8def\u6709\u5176\u4ed6\u7684\u4eba\u8bb2\u4e86\uff0c\u5927\u540c\u5c0f\u5f02\u3002\n\n\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int N = 1000000 + 5; \nint a[N],b[N],c[N],p[N],n,m; \nstruct node\n{\n    int a,b;\n}f[N];\nint function(int i,int x)\n{\n    return a[i]*x*x+b[i]*x+c[i];\n}\nvoid update(int i)\n{\n    if(f[i].a>f[i*2].a && i*2<=n)\n    {\n        swap(f[i],f[i*2]);\n        update(i*2);update(i/2);\n    }\n    if(f[i].a>f[i*2+1].a && i*2+1<=n)\n    {\n        swap(f[i],f[i*2+1]);\n        update(i*2+1);update(i/2);\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        p[i]=1;\n        scanf(\"%d%d%d\",&a[i],&b[i],&c[i]);\n        f[i].a=function(i,p[i]++);f[i].b=i;\n    }\n    for(int i=1;i<=n;i++)update(i);\n    for(int i=0;i<m;i++)\n    {\n        printf(\"%d \",f[1].a);\n        f[1].a=function(f[1].b,p[f[1].b]++);\n        update(1);\n    }\n    return 0;\n}\n```",
        "postTime": 1488781477,
        "uid": 23087,
        "name": "Tgotp",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u7528\u4e86\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u6765\u5b58\u5f53\u524d\u6700\u5c0f\u7684m\u4e2a\u7b54\u6848\uff0c\u518d\u7528\u4e00\u4e2aset\u6765\u5b58\u80fd\u591f\u5f97\u5230\u66f4\u4f18\u7b54\u6848\u7684\u70b9\uff0c\u6700\u540e\u62ff\u4e00\u4e2avector\u6765\u9006\u5e8f\u8f93\u51fa...\n\n\u56e0\u4e3af(x)=ax^2+bx+c\u4e2d\u7684a,b,c,x\u90fd\u5c5e\u4e8e\u6b63\u6574\u6570\u96c6\uff0c\u6240\u4ee5\u663e\u7136f(x)\u662f\u589e\u51fd\u6570\u3002\n\n\u90a3\u4e48\u8ba9x\u4ece1\u5f00\u59cb\u6bcf\u6b21\u9012\u589e1\uff0c\u904d\u5386set\u4e2d\u7684\u6bcf\u4e00\u4e2a\u4e8c\u6b21\u51fd\u6570\u5e76\u4ee3\u5165x\u6c42\u503c\u3002\n\n\u5f53\u4f18\u5148\u961f\u5217\u4e2d\u7684\u503c\u4e0d\u6ee1m\u4e2a\uff0c\u3010\u5c31\u76f4\u63a5\u628a\u8fd9\u4e2a\u503c\u538b\u5165\u4f18\u5148\u961f\u5217\u3011\uff1b\n\n\u5426\u5219\uff0c\u3010\u5982\u679c\u8fd9\u4e2a\u503c\u6bd4\u4f18\u5148\u961f\u5217\u4e2d\u7684\u6700\u5927\u503c\u8fd8\u5c0f\uff0c\u5c31\u5f39\u51fa\u4f18\u5148\u961f\u5217\u4e2d\u7684\u6700\u5927\u503c\uff0c\u538b\u5165\u8fd9\u4e2a\u503c\uff1b\u53cd\u4e4b\uff0c\u8fd9\u4e2a\u4e8c\u6b21\u51fd\u6570\u5728\u4e4b\u540e\u4e5f\u4e0d\u53ef\u80fd\u5f97\u5230\u66f4\u5c0f\u7684\u503c\uff08\u56e0\u4e3a\u5b83\u662f\u589e\u51fd\u6570\uff09\uff0c\u4eceset\u4e2d\u628a\u5b83\u9664\u53bb\u5373\u53ef\u3011\u3002\n\n\u5f53set\u4e3a\u7a7a\u65f6\uff0c\u8bf4\u660e\u6240\u6709\u7684\u4e8c\u6b21\u51fd\u6570\u90fd\u5f97\u4e0d\u5230\u66f4\u4f18\u89e3\u4e86\u3002\u8fd9\u65f6\u5019\u4f18\u5148\u961f\u5217\u4e2d\u6070\u6709m\u4e2a\u5143\u7d20\uff0c\u9006\u5e8f\u8f93\u51fa\u5373\u53ef\u3002\n\n\n```cpp\n/* P2085\n * Au: SJoshua\n */\n#include <cstdio>\n#include <queue>\n#include <vector> \n#include <set> \n#include <algorithm>\n\nusing namespace std;\n\nstruct node {\n    int a, b, c;\n} list[10001];\n\npriority_queue <int> ans;\nvector <int> output;\nset <int> sel;\n \nint main(void) {\n    int n, m, vis = 0;\n    scanf(\"%d %d\", &n, &m);\n    for (int k = 0; k < n; k++) {\n        scanf(\"%d %d %d\", &list[k].a, &list[k].b, &list[k].c);\n        sel.insert(k); \n    }\n    while (!sel.empty()) {\n        vis++;\n        int mark = -1; \n        for (set <int> :: iterator it = sel.begin(); it != sel.end(); it++) {\n            int calc = list[*it].a*vis*vis + list[*it].b*vis + list[*it].c;\n            if (ans.size() == (unsigned int)m) {\n                if (mark != -1) {\n                    sel.erase(mark);\n                    mark = -1; \n                 }\n                if (calc < ans.top()) {\n                    ans.pop();\n                    ans.push(calc); \n                } else {\n                    mark = *it; \n                } \n            } else {\n                ans.push(calc); \n            }\n        } \n        if (mark != -1) {\n            sel.erase(mark);\n        }\n    } \n    for (int k = 0; k < m; k++) {\n        output.push_back(ans.top());\n        ans.pop();\n    }\n    for (int k = 0; k < m; k++) {\n        printf(\"%d \", output[m-k-1]); \n    } \n    return 0;\n}\n```",
        "postTime": 1475573082,
        "uid": 790,
        "name": "\u7ea6\u4fee\u4e9a_RK",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "Hi\uff01 \u6211\u80e1\u6c49\u4e09\u53c8\u56de\u6765\u5566\uff01\n\n\u5927\u5bb6\u6709\u6ca1\u6709\u53d1\u73b0p1935\u548cp2085\u4e00\u6a21\u4e00\u6837\n\n\u65e2\u71362085\u7528\u5806AC\u4e86\u90a3\u4e48\u6c34\u9898\u5c31\u8981\u7528STL AC\n\n\u4ec0\u4e48\u903b\u8f91\uff01\uff01\uff01\uff01\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#include<cstring>\nusing namespace std;\nstruct node{\n    int v,id;\n};\nstruct cmp{//\u8fd9\u662f\u4e2a\u4eff\u51fd\u6570\n    bool operator ()(node a,node b){\n        return a.v>b.v;\n    }\n};\npriority_queue<node,vector<node>,cmp> q;//\u8fd9\u662f\u4e2a\u5c0f\u6839\u5806\nint ans[20000],a[20000],b[20000],c[20000],d[20000];\nint n,m;\nnode x,y;\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d%d%d\",&a[i],&b[i],&c[i]);\n        x.v=a[i]+b[i]+c[i];x.id=i;\n        d[i]=1;q.push(x);\n    }\n    for(int i=1;i<=m;i++){\n        y=q.top();q.pop();\n        ans[i]=y.v;d[y.id]++;\n        int t=y.id;\n        x.id=y.id;x.v=a[t]*d[t]*d[t]+b[t]*d[t]+c[t];\n        q.push(x);\n    }\n    for(int i=1;i<=m;i++){\n        printf(\"%d \",ans[i]);\n    }\n    return 0;\n}\n\u662f\u4e0d\u662f\u89c9\u5f97STL\u5f88\u795e\u5947haha\n```",
        "postTime": 1471956587,
        "uid": 10025,
        "name": "\u795e\u4e00\u822c\u7684\u4e16\u754c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1935 \u3010\u803f\u9b3c\u3011"
    },
    {
        "content": "//\u697c\u4e0b\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u4e0d\u8fc7c++\u9009\u624b\u7528\u4f18\u5148\u961f\u5217\u5b9e\u73b0\u5806\u7b80\u5355\u5feb\u6377\uff0c\u61d2\u4eba\u5fc5\u5907~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst int Mx=10005;\nstruct node{\n    int f,val,x;\n    bool operator <(const node &s)const{\n        return val>s.val;\n    }\n};\nint n,m;\nint mp[3][Mx];\npriority_queue <node> q;\nint s(int i,int j)\n{\n    return mp[0][i]*j*j+mp[1][i]*j+mp[2][i];\n}\nint main(){\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>mp[0][i]>>mp[1][i]>>mp[2][i];\n    }\n    for(int i=1;i<=n;i++)\n    {\n        q.push((node){i,s(i,1),1});\n    }\n    while(m>0)\n    {\n        node t=q.top();\n        q.pop();\n        cout<<t.val<<' ';\n        m--;\n        q.push((node){t.f,s(t.f,t.x+1),t.x+1});\n    }\n    cout<<endl;//\u4ee3\u7801\u7ed3\u675f\u56de\u8f66\u5f88\u91cd\u8981\n    return 0;\n}\n\n```",
        "postTime": 1471005468,
        "uid": 14129,
        "name": "Ste_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "\u8bf4\u5b9e\u8bdd\u8fd9\u4e00\u9898\u7684\u8bc4\u7ea7\u6709\u70b9\u8fc7\u4e86\uff0c\u601d\u8def\u5f88\u7b80\u5355\u7684\u3002\n\n\u5c0f\u5b66\u751f\u6216\u8005\u521a\u4e0a\u521d\u4e2d\u7684\u670b\u53cb\u6216\u8bb8\u4e0d\u77e5\u9053\u4e8c\u6b21\u51fd\u6570\u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u95ee\u4e00\u4e0b\u6570\u5b66\u8001\u5e08\u3002\uff08\u6570\u5b66\u8001\u5e08\uff1a\u6570\u636e\u90a3\u4e48\u5927\u8ba1\u7b97\u5668\u8981\u6309\u5230\u4ec0\u4e48\u65f6\u5019\uff1f\uff1f\uff1f\uff01\uff09\n\n\u901a\u8fc7\u9898\u76ee\u8bf4\u660e\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u51fa\u9898\u4eba\u6ca1\u6709\u523b\u610f\u4e3a\u96be\u6211\u4eec\uff0c\u6bcf\u4e00\u4e2af(x)\u7684\u56fe\u50cf\u7684\u5bf9\u79f0\u8f74\u90fd\u5728y\u8f74\u7684\u5de6\u8fb9\uff0c\u6240\u4ee5\u5728\u5b9a\u4e49\u57df\u5185\u7684f(x)\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u81ea\u7136\u8054\u60f3\u5230\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u6bcf\u6b21\u53d6\u51fa\u6700\u5c0f\u503c\u3002\u8bbe\u53d6\u51fa\u7684\u662f\u51fd\u6570fi\u7684fi(x)\uff0c\u90a3\u4e48\u6211\u4eecpush fi(x+1)\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u6b63\u786e\u3002\n\n```cpp\n\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <queue>//\u61d2\u5f97\u624b\u52a8\u5199\u5806\uff0c\u7528stl\u5e93\u5927\u6cd5\u3002\nusing namespace std;\nconst int maxn=10005;\ntypedef long long ll;//\u7a33\u4e00\u70b9\uff0c\u4ee5\u514d\u7206 int\u3002\ntypedef pair<ll,int> pp;\nstruct data{int a;int b;int c;};\ndata function[maxn];//\u8bb0\u5f55\u6bcf\u4e2a\u51fd\u6570a,b,c.\nint n,m;\npriority_queue<pp,vector<pp>,greater<pp> >que;//\u5c0f\u6839\u5806\n\nvoid init(){\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n        cin>>function[i].a>>function[i].b>>function[i].c;\n    return;\n}\nll calcu(int f,int x){//\u51fd\u6570\u503c\u7684\u8ba1\u7b97\u3002\n    ll t=x*x*function[f].a+x*function[f].b+function[f].c;\n    return t;\n}\nvoid solve(){\n    int tool[maxn];\n    for(int i=1;i<=n;i++) tool[i]=1;\n    for(int i=1;i<=n;i++){\n        ll temp=calcu(i,1);\n        pp s(temp,i);\n        que.push(s);\n    }//\u5806\u7684\u521d\u59cb\u72b6\u6001\u3002\n    for(int i=0;i<m;i++){//\u4f9d\u6b21\u53bb\u9664\u524dm\u5c0f\u7684\u503c\u5e76\u66f4\u65b0\u5806\u3002\n        pp s=que.top();\n        que.pop();\n        int which=s.second;\n        printf(\"%lld \",s.first);\n        tool[which]++;\n        ll t=calcu(which,tool[which]);\n        pp tt(t,which);\n        que.push(tt);\n    }\n\n    return;\n}\nint main(){\n    //freopen(\"1.txt\",\"r\",stdin);//\u4e0d\u8981\u6284\u6587\u4ef6\u64cd\u4f5c\n    //freopen(\"2.txt\",\"w\",stdout);\n    std::ios::sync_with_stdio(false);\n    init();\n    solve();\n\n    return 0;\n}\n\n```",
        "postTime": 1468206045,
        "uid": 8874,
        "name": "Kwork",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "**\n\u65e2\u7136\u8fd9\u9053\u9898\u662f\u4e8c\u6b21\u51fd\u6570  \u9996\u5148\u660e\u786eAi\u4e00\u5b9a\u4e0d\u4f1a\u5c0f\u4e8e0  \u90a3\u6837\u6ca1\u6709\u6700\u5c0f\u503c\n\n\u597d  \u90a3\u4e48Ai\u5927\u4e8e0\u4e86  \u6700\u5c0f\u503c\u5728\u5bf9\u79f0\u8f74-b/2a  \u5148\u627e\u6bcf\u4e2a\u51fd\u6570\u6700\u5c0f\u503c\n\n\u5148\u7528\u4e00\u4e2adouble\u628a\u5bf9\u79f0\u8f74\u5b58\u4e0b\u8bbe\u4e3ak\n\n\u82e5k\u4e3a\u6574\u6570 \u4e09\u4e2a\u64cd\u4f5c\n\nFi(k) Fi(k-1) Fi(k+1)\u5165\u5806\u5f85\u9009   Fi(k-1) \u548c Fi(k+1)\u662f\u4e3a\u4e86\u540e\u9762\u65b9\u4fbf\u6269\u5c55\n\n\u5426\u5219 \u8bbek' \u4e3a(int)k Fi(k) Fi(k+1)\u5165\u5806\uff08\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u70b9\u5fc5\u5b9a\u662f\u79bb\u5bf9\u79f0\u8f74\u6700\u8fd1\u7684\u4e24\u4e2ax\u4e3a\u6574\u6570\u7684\u70b9\uff09\n\n\n\u5269\u4e0b\u7684  \u770b\u4ee3\u7801\u5427\n\n\u603b\u7684\u601d\u60f3\uff1a\u5148\u627e\u5230\u6700\u5c0f\u503c\u6240\u5728\u5904  \u5165\u5806  \u7136\u540e\u6bcf\u6b21\u53d6\u51fa\u6700\u5c0f\u7684\u4e00\u4e2a \u5f80\u5de6\u8fb9\u6216\u8005\u53f3\u8fb9\u8d70\u4e00\u4e2a\u5355\u4f4d\u957f\u5ea6 \u628a\u8fd9\u4e2a\u70b9\u653e\u5165\u5806\u4e2d  \u5982\u6b64\u5f80\u590dm\u6b21\n\n**\n```cpp\n\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int INF=(1<<30);\nstruct Node{\n    int a,b,c,nowx,value,wh;//nowx\u4e3a\u5f53\u524dx\u503c  value\u4e3a\u51fd\u6570\u503c wh\u4e3a\u6807\u793a\u7b26  \u5f80\u5de6\u4e3a-1 \u5f80\u53f3\u4e3a1 \u4e8c\u6b21\u51fd\u6570\u9876\u70b9\u4e3a0\n    void input(){\n        scanf(\"%d%d%d\",&a,&b,&c);\n    }\n    bool operator < (const Node &rhs)const{\n        return value>rhs.value;\n    }\n    Node(){}\n    Node(int a,int b,int c,int n,int v,int wh):a(a),b(b),c(c),nowx(n),value(v),wh(wh){}\n    Node(Node x,int nx,int v,int w){\n        a=x.a;\n        b=x.b;\n        c=x.c;\n        nowx=nx;\n        value=v;\n        wh=w;\n    }\n}tmp;\n\nint f(Node a,int x)                     //\u5229\u7528a\u91cc\u9762\u7684a,b,c\u503c  \u4e3b\u8981\u662f\u4eba\u61d2\u4e0d\u60f3\u5199int a,int b,int c\n{\n    return a.a*x*x+a.b*x+a.c;\n}\n\npriority_queue<Node>q;\nint main()\n{\n    int n,m;cin>>n>>m;\n    for(int i=1;i<=n;i++)////\u6bcf\u4e2a\u51fd\u6570\u6700\u5c0f\u503c\u5165\u5806\n    {\n        tmp.input();\n        double x=-1*tmp.b/2.0*tmp.a;\n        if(x<=0)//\u8981\u6c42x\u4e3a\u6b63\u6574\u6570  \u82e5\u5bf9\u79f0\u8f74x<=0  Fi(1)\u5373\u4e3a\u6700\u5c0f\u503c\n        {\n            q.push(Node(tmp,1,f(tmp,1),1));\n            continue;\n        }\n        int v1=f(tmp,(int)x);\n        int v2=f(tmp,(int)x+1);\n        if((int)x<=0) v1=INF;//\u5f80\u5de6\u6269\u5c55\u65f6\u9700\u4fdd\u8bc1 x>=1\n        if((int)x==x)//\u5bf9\u79f0\u8f74\u521a\u597d\u5728\u6574\u6570\u70b9\n        {\n            q.push(Node(tmp,(int)x-1,f(tmp,(int)x-1),-1));\n            q.push(Node(tmp,(int)x,v1,0));\n            q.push(Node(tmp,(int)x+1,v2,1));\n            \n        }\n        else\n        {\n            q.push(Node(tmp,(int)x,v1,-1));\n            q.push(Node(tmp,(int)x+1,v2,1));\n        }\n        \n    }\n    int cnt=0;\n    for(;;)\n    {\n        Node x=q.top();q.pop();\n        printf(\"%d \",x.value);\n        if(++cnt==m) break;\n        if(x.wh==0) continue;///\u8fd9\u91cc\u662f\u7279\u5224\u51fd\u6570\u9876\u70b9  \u8fc7\u6ee4\u6389\n        if(x.nowx+x.wh<=0) continue;\n        int v1=f(x,x.nowx+x.wh);\n        Node c=Node(x,x.nowx+x.wh,v1,x.wh);\n        q.push(c);\n    }\n    return 0;\n}\n\n\n```",
        "postTime": 1454043634,
        "uid": 11280,
        "name": "QWsin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    },
    {
        "content": "**\u5f88\u660e\u663e\u7684\u5806**\n\n\u3010\u51fa\u9898\u4eba\u6709\u63d0\u793a\u7684\u8bf6\uff01\u3011\n\n\n\u9996\u5148\uff0c\u5982\u679c\u8981\u662f\u628aFi(x)\u7684\u503c\u4ece x=0 \u5230 x=m \u90fd\u8ba1\u7b97\u4e00\u904d\uff0c\u4e00\u5b9a\u4f1aTLE\n\n\n\u6240\u4ee5\uff0c\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5927\u6839\u5806\uff0c**heap[1]**\u7528\u6765\u5b58\u5f53\u524d\u7684\u6700\u5927\u503c\uff0c\n\n\u5982\u679c\u8ba1\u7b97\u51fa\u4e86Fi(x)<heap[1],\u90a3\u4e48\u5c31\u7528Fi(x)\u66ff\u6362heap[1]\uff0c\u7136\u540e\u66f4\u65b0\u5806\uff0c\n\n\u5982\u679cFi(x) >= heap[1] \u7531\u4e8e\u4e8c\u6b21\u51fd\u6570\u6027\u8d28\uff0cFi(x+1)\u4e00\u5b9a\u4f1a\u5927\u4e8eheap[1]\uff0c\u8fd9\u65f6\u7528judge[i]\u6765\u6807\u8bb0\uff0c\u4e0b\u6b21\u64cd\u4f5c\u65f6\u76f4\u63a5\u8df3\u8fc7\uff0c\u77e5\u9053i=1 . . n\u5168\u90e8\u88ab\u6807\u8bb0\uff0c\u7ed3\u675f\u679a\u4e3e\uff0c\n\n\n\u7136\u540e\uff0c\u7136\u540e\u5c31\u662f\u6392\u5e8f\u3001\u8f93\u51fa\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\u3002\u3002\n\n\n\u66f4\u65b0\u5806\uff1a\n\n```cpp\n\nvoid max_heap(int x){\n    int x1=x<<1;\n    int x2=(x<<1)+1;\n    int maxnum;\n    if(x1<=m){\n        if(heap[x1]>heap[x])maxnum=x1;\n        else maxnum=x;\n    }\n    else maxnum=x;\n    if(x2<=m){\n        if(heap[x2]>heap[maxnum])maxnum=x2;\n    }\n    else ;\n    if(maxnum!=x){\n        heap[maxnum]^=heap[x]^=heap[maxnum]^=heap[x];\n        max_heap(maxnum);\n    }\n}\n\n```",
        "postTime": 1427693810,
        "uid": 3925,
        "name": "TMXi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1935 \u3010\u803f\u9b3c\u3011"
    },
    {
        "content": "\u5148\u628ax=1\u65f6\u5404\u4e2a\u51fd\u6570\u7684\u503c\u63d2\u5165\u5c0f\u6839\u5806\uff0c\u7136\u540e\u4e0d\u505c\u5730\u53d6\u51fa\u5806\u9876\uff0c\u628a\u53d6\u51fa\u7684\u51fd\u6570\u4ee3\u5165x+1\uff0c\u7b97\u51fa\u51fd\u6570\u503c\u518d\u63d2\u5165\u5806\uff0c\u53d6\u4e0am\u6b21\u4e3a\u6b62\u3002\n\n\u5176\u5b9e\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u8fd9\u5e94\u8be5\u5c5e\u4e8e\u5f88\u6c34\u7684\u4e8c\u53c9\u5806\u4e86\u5427\u3002\u3002\u3002\n\nd[i,1] \u662f\u51fd\u6570\u503c\u3002\n\nd[i,2]\u8bb0\u5f55\u7684\u662f\u8fd9\u4e2a\u662f\u7b2cd[i,2]\u4e2a\u51fd\u6570\u7684\u51fd\u6570\u503c\n\nf[i]\u4ee3\u8868\u7b2ci\u4e2a\u51fd\u6570\u7684x\u503c\uff1b\n\n\u6b64\u5904\u653e\u4ee3\u7801\uff1a\n\n```cpp\nvar i,j,k,len,m,n,now:longint;\na,b,c,f:array[1..100000] of longint;\nd:array[1..100000,1..2] of longint;\nfunction jisuan(x,y,z,k:longint):longint;\nbegin\n  exit(x*k*k+y*k+z);\nend;\nprocedure push(x,y:longint);\nvar fa,son,t:longint;\nbegin\n  inc(len);\n  d[len,1]:=x;\n  d[len,2]:=y;\n  fa:=len div 2;\n  son:=len;\n  while (son<>1)and(d[son,1]<d[fa,1]) do\n  begin\n    t:=d[fa,1];\n    d[fa,1]:=d[son,1];\n    d[son,1]:=t;\n    t:=d[fa,2];\n    d[fa,2]:=d[son,2];\n    d[son,2]:=t;\n    son:=fa;\n    fa:=fa div 2;\n  end;\nend;\nfunction pop:longint;\nvar fa,son,t:longint;\nbegin\n  pop:=d[1,1];\n  now:=d[1,2];\n  d[1,1]:=d[len,1];\n  d[1,2]:=d[len,2];\n  dec(len);\n  fa:=1;\n  while (fa*2<=len)or(fa*2+1<=len) do\n  begin\n    if (fa*2+1>len)or(d[fa*2+1,1]>d[fa*2,1]) then\n    son:=fa*2 else son:=fa*2+1;\n    if d[son,1]<d[fa,1] then\n    begin\n      t:=d[fa,1];\n      d[fa,1]:=d[son,1];\n      d[son,1]:=t;\n      t:=d[fa,2];\n      d[fa,2]:=d[son,2];\n      d[son,2]:=t;\n      fa:=son;\n    end else break;\n  end;\nend;\nbegin\n  read(n,m);\n  for i:=1 to n do\n  begin\n    readln(a[i],b[i],c[i]);\n    push(a[i]+b[i]+c[i],i);\n    f[i]:=1;\n  end;\n  for i:=1 to m do\n  begin\n    write(pop,' ');\n    inc(f[now]);\n    push(jisuan(a[now],b[now],c[now],f[now]),now);\n  end;\nend.\n```",
        "postTime": 1504096760,
        "uid": 26937,
        "name": "_soul_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2085 \u3010\u6700\u5c0f\u51fd\u6570\u503c\u3011"
    }
]