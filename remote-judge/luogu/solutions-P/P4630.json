[
    {
        "content": "$luogu$\u4e0a\u7684\u9898\u89e3\u90fd\u592a\u795e\u4ed9\u4e86,\u6211\u4e0d\u592a\u61c2\u600e\u4e48\u5bb9\u65a5\u3002\u3002\u3002\u3002\u3002   \n\n\u9996\u5148\u8fd9\u9053\u9898\u8981\u5efa\u51fa\u5706\u65b9\u6811\u3002   \n\n\u8003\u8651\u679a\u4e3e\u4e2d\u8f6c\u70b9$c$,\u7edf\u8ba1\u6ee1\u8db3\u6761\u4ef6\u7684$(s,f)$\u7684\u4e2a\u6570\u3002\n\n\u5982\u679c$c$\u4e3a\u5706\u70b9:\n\n\u5bf9\u4e8e$c$\u7684\u6bcf\u4e00\u4e2a\u513f\u5b50$x$\uff0c$x$\u5b50\u6811\u5185\u7684\u6240\u6709\u70b9\u4f5c\u4e3a$s$\u90fd\u80fd\u548c\u5176\u4ed6\u5b50\u6811\u4e2d\u7684\u8282\u70b9\u7ec4\u6210\u5408\u6cd5\u7684$(s,f)$,\u5bf9$ans$\u7684\u8d21\u732e\u4e3a$size[x] * (size[c] - 1  - size[x]).$\n\n\u90a3\u4e48\u4e00\u4e2a\u5706\u70b9\u4f5c\u4e3a$c$\u7684$ans$\u5c31\u662f$\\Sigma size[x] * (size[c] - 1  - size[x])$\n\n\u770b\u8d77\u6765\u662f$O(n^2)$\u7684,\u56e0\u4e3a\u8981\u679a\u4e3e\u6839\u6765\u8ba1\u7b97$size$,\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a$dp$,\u6c42\u51fa$size2[x]$\u8868\u793a**\u5f53$x$\u4e3a\u6839\u65f6,(dfs\u6811\u4e0a\u7684)$fa[x]$\u7684$size$.**\n\n\u8fd9\u4e2a$dp$\u662f$O(n)$\u7684\u3002  \n\n\u90a3\u4e48\u5c31\u53ef\u4ee5$O(n)$\u7edf\u8ba1\u6240\u6709\u5706\u70b9\u7684$ans$\u4e86\u3002\n\n\u518d\u601d\u8003\u65b9\u70b9\u7684\u8d21\u732e\u3002\n\n\u5bf9\u4e8e$s$\u548c$f$\u90fd\u4e0d\u5728\u8be5\u70b9\u53cc\u5185\u7684$(s,f)$,\u5b83\u4eec\u5230\u8fbe\u8fd9\u4e2a\u70b9\u53cc\u5185\u90e8\u4e4b\u524d,\u5df2\u7ecf\u88ab\u8fd9\u4e2a\u70b9\u53cc\u91cc\u7684\u4e00\u4e9b\u70b9$c$\u8ba1\u7b97\u8fc7\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u8003\u8651\u3002\n\n\u90a3\u4e48\u65b9\u70b9\u8ba1\u7b97\u7684\u5c31\u662f**\u4ee5\u8fd9\u4e2a\u70b9\u53cc\u4e2d\u7684\u67d0\u4e2a\u70b9\u4f5c\u4e3a$c$,$(s,f)$\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u5728\u70b9\u53cc\u5185**\uff0c\u4e14**\u6ca1\u6709\u88ab\u5706\u70b9\u7684ans\u7edf\u8ba1\u5230\u7684**\u7b54\u6848\u3002   \n\n\u6c42\u51fa\u8fd9\u4e2a\u70b9\u53cc\u4e2d\u7684\u5706\u70b9\u6570,\u5373\u65b9\u70b9\u7684\u5ea6\u6570$deg[x]$.\n\n\u5982\u679c$(s,f)$\u4e2d\u6709\u4e00\u4e2a\u70b9\u5728\u70b9\u53cc\u5185\u90e8\uff0c\u90a3\u4e48\u53ef\u4ee5\u6709$(deg[x]-1)$\u4e2a\u70b9\u53cc\u5185\u7684\u70b9\u4f5c\u4e3a$c$.\n\n\u4f46\u662f$(s,f)$\u5728\u5272\u70b9\u5904\u88ab\u8ba1\u7b97\u4e86\u4e00\u6b21,\u6240\u4ee5\u5e94\u8be5\u662f$(deg[x] - 2).$\n\n\u5982\u679c$(s,f)$\u90fd\u5728\u70b9\u53cc\u5185\u90e8,\u90a3\u4e48\u53ef\u884c\u7684$c$\u663e\u7136\u6709$(deg[x] - 2)$\u79cd\u3002\n\n\u6240\u4ee5\u65b9\u70b9\u7684\u7b54\u6848\u4e3a $\\Sigma (deg[c] - 2) * size[x] * (size[c] - size[x])$\n\n\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u7528\u7c7b\u4f3c\u4e0a\u9762\u7684$dp$\u65b9\u6cd5\u505a\u5230$O(n)$.\n\n\u6240\u4ee5\u8fd9\u9053\u9898\u7684\u590d\u6742\u5ea6\u4e3a$O(n+m).$\n\n\u6ce8\u610f\u56fe**\u4e0d\u8054\u901a**\u3002\n\n\u4ee3\u7801:\n\n```cpp\n\n#include <bits/stdc++.h>\n#define LL long long\nusing namespace std;\ninline LL read(){\n    LL x = 0,f = 1; char c = getchar();\n    while (c != EOF && !isdigit(c)) {if (c == '-') f = -1;c = getchar();}\n    while (isdigit(c)) {x = x * 10 + c - '0';c = getchar();}\n    return x * f;\n}\ninline void write(LL x){\n    if (x < 0) putchar('-'),x = -x;\n    if (x > 9) write(x/10); putchar(x%10+'0');\n}\ninline void writeln(LL x){ write(x),putchar('\\n'); }\n\nconst int N = 100005,M = 200005,E = M*4;\nint To[E],Ne[E],He1[N],He2[N<<1],k;\ninline void add(int *He,int x,int y){\n\t++k; To[k] = y,Ne[k] = He[x],He[x] = k;\n\t++k; To[k] = x,Ne[k] = He[y],He[y] = k;\n}\n\nint n,m,tot,deg[N<<1];\nint dfn[N],low[N],st[N],top,Tim;\nvoid tarjan(int x){\n\tdfn[x] = low[x] = ++Tim,st[++top] = x;\n\tfor (int y,p = He1[x]; p ; p = Ne[p]){\n\t\ty = To[p];\n\t\tif (!dfn[y]){\n\t\t\ttarjan(y);\n\t\t\tlow[x] = min(low[x],low[y]);\n\t\t\tif (low[y] >= dfn[x]){\n\t\t\t\t++tot; add(He2,tot,x); add(He2,tot,y);\n\t\t\t\t++deg[x],++deg[y],deg[tot] += 2;\n\t\t\t\twhile (st[top] ^ y) add(He2,st[top],tot),++deg[tot],++deg[st[top]],--top;\n\t\t\t\t--top;\n\t\t\t}\n\t\t}\n\t\telse low[x] = min(low[x],dfn[y]);\n\t}\n}\n\nint size1[N<<1],size2[N<<1],fa[N<<1];\nvoid dfs1(int x){\n\tsize1[x] = x <= n ? 1 : 0;\n\tfor (int p = He2[x]; p ; p = Ne[p]) if (To[p] ^ fa[x]) fa[To[p]] = x,dfs1(To[p]),size1[x] += size1[To[p]];\n}\nLL ans,ret;\nvoid dfs2(int x){\n\tif (fa[x]) size2[x] = size2[fa[x]] + size1[fa[x]] - size1[x];\n\tfor (int y,p = He2[x]; p ; p = Ne[p]) if ((y=To[p])^fa[x]) dfs2(To[p]);\n\tint sum = size2[x] + size1[x];\n\tret = 0;\n\tif (x <= n){\n\t\tfor (int y,p = He2[x]; p ; p = Ne[p]) if ((y=To[p])^fa[x]){\n\t\t\tans += (LL)(sum - size1[y] - 1) * size1[y];\n\t\t}\n\t\tans += (LL)(sum - size2[x] - 1) * size2[x];\n\t}\n\telse{\n\t\tfor (int y,p = He2[x]; p ; p = Ne[p]) if ((y=To[p])^fa[x]){\n\t\t\tans += (LL)(sum - size1[y]) * size1[y] * (deg[x] - 2);\n\t\t}\n\t\tans += (LL)(sum - size2[x]) * size2[x] * (deg[x] - 2);\n\t}\n}\n\nint main(){\n\tint i,u,v;\n\ttot = n = read(),m = read();\n\twhile (m--) u = read(),v = read(),add(He1,u,v);\n\tfor (i = 1; i <= n; ++i) if (!dfn[i]) top = 0,tarjan(i);\n\tfor (i = 1; i <= tot; ++i) if (!size1[i]) dfs1(i);\n\tfor (i = 1; i <= tot; ++i) if (!size2[i]) dfs2(i);\n\twriteln(ans);\n    return 0;\n}\n\n```",
        "postTime": 1555647392,
        "uid": 52518,
        "name": "s_r_f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4630 \u3010[APIO2018] Duathlon \u94c1\u4eba\u4e24\u9879\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&emsp;&emsp;[\u70b9\u8fd9\u91cc](https://www.luogu.com.cn/problem/P4630)\u770b\u9898\u76ee\u3002   \n# \u5206\u6790\n&emsp;&emsp;\u9996\u5148\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u770b\u51fa\uff0c\u5728 $s$ \u548c $f$ \u786e\u5b9a\u65f6\uff0c$c$ \u7684\u5907\u9009\u6570\u91cf\u5c31\u7b49\u4e8e**\u4ece$s$\u5230$f$\u6240\u6709\u7b80\u5355\u8def\u5f84\u7684\u5e76\u7684\u5927\u5c0f\u51cf\u4e8c** \uff08\u8981\u628a$s$\u548c$f$\u53bb\u6389\uff09\u3002    \n&emsp;&emsp;\u968f\u624b\u753b\u51e0\u4e2a\u56fe\u5c31\u4f1a\u53d1\u73b0\uff0c $s$ \u5230 $f$ \u6240\u6709\u7b80\u5355\u8def\u5f84\u7684\u5e76\u4f3c\u4e4e\u4e5f\u5c31\u662f**\u4ece$s$\u5230$f$\u7ecf\u8fc7\u7684\u6240\u6709\u70b9\u53cc\u7684\u5e76**\u3002   \n&emsp;&emsp;\u8003\u8651\u8bc1\u660e\u8fd9\u4e2a\u731c\u60f3\u3002\u9996\u5148\uff0c\u7531\u4e8e\u70b9\u53cc\u4e4b\u95f4\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u516c\u5171\u70b9\uff0c\u6240\u4ee5\u6bcf\u4e2a\u70b9\u53cc\u5185\uff0c\u6bcf\u6761\u4ece $s$ \u5230 $f$ \u7684\u7b80\u5355\u8def\u5f84\uff0c\u5fc5\u7136\u662f\u4ece**\u4e00\u4e2a\u56fa\u5b9a\u70b9\u8fdb\u5165\u70b9\u53cc\uff0c\u4ece\u53e6\u4e00\u4e2a\u56fa\u5b9a\u70b9\u79bb\u5f00**\u3002   \n&emsp;&emsp;\u56e0\u800c\u6211\u4eec\u53ea\u9700\u8981\u518d\u8bc1\u660e\uff1a\u5728\u70b9\u53cc\u5185\u90e8\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e09\u70b9$a, b, c$\uff0c\u5fc5\u7136\u5b58\u5728\u7b80\u5355\u8def\u5f84\u6ee1\u8db3\u4ece$a$\u5230$c$\u5230$b$\u3002  \n&emsp;&emsp;\u4e3a\u4e86\u65b9\u4fbf\uff0c\u4ee5\u4e0b\u7528$u\\overset{c}{\\rightarrow}v$\u8868\u793a\u4ece$u$\u5411$v$\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$c$\u7684\u8fb9\u3002     \n&emsp;&emsp;\u8003\u8651\u6784\u5efa\u4e00\u4e2a\u7f51\u7edc\u6765\u8bc1\u660e\uff0c\u5982\u4e0b\uff1a      \n&emsp;&emsp;1. \u62c6\u70b9\u3002\u5bf9\u4e8e$u$\u62c6\u6210$u$\u548c$u'$\uff0c\u5e76\u4e14\u8fde\u63a5$u\\overset{1}{\\rightarrow} u'$\uff0c\u8868\u793a\u6bcf\u4e2a\u70b9\u53ea\u80fd\u7ecf\u8fc7\u4e00\u6b21\u3002   \n&emsp;&emsp;2. \u62c6\u8fb9\u3002\u65e0\u5411\u8fb9\u5148\u8981\u62c6\u6210\u6709\u5411\u8fb9\u3002\u5bf9\u4e8e\u6709\u5411\u8fb9$(u,v)$\uff0c\u8fde\u63a5$u'\\overset{1}{\\rightarrow} v$\uff0c\u8868\u793a\u8fb9\u53ea\u80fd\u7ecf\u8fc7\u4e00\u6b21\u3002    \n&emsp;&emsp;3. \u8fde\u63a5\u6e90\u6c47\u3002\u8fde\u63a5$S\\overset{2}{\\rightarrow} c, a'\\overset{1}{\\rightarrow} T,b'\\overset{1}{\\rightarrow} T$\u3002   \n&emsp;&emsp;\u8fd9\u6837\uff0c\u5982\u679c\u539f\u56fe\u6700\u5927\u6d41\u4e3a $2$ \uff0c\u5219\u5b58\u5728\u9700\u8981\u7684\u8def\u5f84\u3002   \n&emsp;&emsp;\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u8bc1\u660e\uff0c\u539f\u56fe\u6700\u5927\u6d41\uff0c\u4e5f\u5373\u662f\u6700\u5c0f\u5272\u4e3a $2$ \u3002   \n&emsp;&emsp;\u8bbe\u6700\u5c0f\u5272\u4e3a$C$\u3002\u663e\u7136$C\\le 2$\u3002\u90a3\u4e48\u6211\u4eec\u9700\u8981\u8bc1\u660e$C>1$\uff0c\u5373\u4e0d\u53ef\u4ee5\u53ea\u5220\u9664\u4e00\u6761\u8fb9\u5c31\u4f7f\u5f97$S$\u5230$T$\u4e0d\u8fde\u901a\u3002   \n&emsp;&emsp;\u5206\u7c7b\u8ba8\u8bba\uff1a   \n&emsp;&emsp;1. \u5982\u679c\u5220\u9664 $u\\overset{1}{\\rightarrow} u'$ \u7684\u8fb9\uff0c\u6211\u4eec\u5c31\u76f8\u5f53\u4e8e\u62c6\u6389\u4e86\u4e00\u4e2a\u70b9\u3002\u6839\u636e\u70b9\u53cc\u7684\u5b9a\u4e49\uff0c\u4e0d\u5f71\u54cd\u8fde\u901a\u6027\u3002   \n&emsp;&emsp;2. \u5982\u679c\u5220\u9664 $u'\\overset{1}{\\rightarrow} v$ \u7684\u8fb9\uff0c\u6211\u4eec\u5c31\u76f8\u5f53\u4e8e\u62c6\u6389\u4e86\u4e00\u6761\u8fb9\u3002\u7531\u4e8e\u8fd9\u4e2a\u64cd\u4f5c\u5f71\u54cd\u6bd4\u62c6\u70b9\u66f4\u5c0f\uff0c\u56e0\u800c\u4e5f\u4e0d\u5f71\u54cd\u8fde\u901a\u6027\u3002   \n&emsp;&emsp;3. \u5220\u9664$a'\\overset{1}{\\rightarrow} T$\u6216\u8005\u662f$b'\\overset{1}{\\rightarrow} T$\u3002\u663e\u7136\u53ea\u5220\u9664\u4e00\u8fb9\u800c\u53e6\u4e00\u8fb9\u7559\u5b58\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8fde\u901a\u6027\u3002   \n&emsp;&emsp;\u56e0\u800c\u6709$C>1$\uff0c\u6839\u636e\u8fde\u8fb9\u7279\u6027\u6211\u4eec\u77e5\u9053\u5c31\u6709$C=2$\uff0c\u5373\u547d\u9898\u6210\u7acb\u3002     \n&emsp;&emsp;\u8fd9\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u7684\u731c\u60f3\u4e5f\u662f\u6210\u7acb\u7684\u3002   \n     \n&emsp;&emsp;\u56e0\u800c\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\uff0c\u7ecf\u8fc7\u7684\u70b9\u53cc\u7684\u5e76\u7684\u5927\u5c0f\u51cf\u4e8c\u5373\u53ef\u3002     \n&emsp;&emsp;\u8003\u8651\u5efa\u51fa\u5706\u65b9\u6811\uff0c\u8fd9\u6837\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7ecf\u8fc7\u7684\u70b9\u53cc\u5c31\u662f\u8def\u5f84\u4e0a\u7684\u65b9\u70b9\u3002    \n&emsp;&emsp;\u4e0b\u9762\u9700\u8981\u4f7f\u7528\u5230\u4e00\u4e2a\u6280\u5de7\uff1a**\u4e3a\u5706\u65b9\u6811\u4e0a\u7684\u70b9\u8d4b\u5408\u9002\u7684\u6743**\u3002    \n&emsp;&emsp;\u8fd9\u4e00\u9898\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u53ef\u4ee5\u731c\u60f3\u7ed9\u65b9\u70b9\u8d4b\u4e3a\u70b9\u53cc\u5927\u5c0f\u3002\u7531\u4e8e\u4e24\u4e2a\u70b9\u53cc\u4e4b\u95f4\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u4ea4\u70b9\uff0c\u56e0\u800c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7ed9\u5706\u70b9\u8d4b\u4e3a $-1$ \u8fdb\u884c\u6263\u9664\u591a\u4f59\u8d21\u732e\u3002\u540c\u65f6\uff0c\u5706\u70b9\u8d4b $-1$ \u4e5f\u80fd\u987a\u5e26\u5904\u7406 \" \u5e76\u96c6\u5927\u5c0f\u51cf\u4e8c \" \u8fd9\u4e2a\u60c5\u51b5\u3002    \n&emsp;&emsp;\u603b\u7ed3\u4e00\u4e0b\uff0c\u6211\u4eec\u7ed9**\u5706\u70b9\u8d4b $-1$ \uff0c\u65b9\u70b9\u8d4b\u5927\u5c0f**\uff0c\u7136\u540e\u7edf\u8ba1**\u4efb\u610f\u4e24\u4e2a\u5706\u70b9\u4e4b\u95f4\u8def\u5f84\u7684\u6743\u503c\u548c\u5373\u53ef**\u3002\u5efa\u51fa\u5706\u65b9\u6811\u540e\u4e00\u8fb9 DFS \u8ba1\u7b97\u7b54\u6848\u5373\u53ef\u3002\u65f6\u95f4$O(n)$\u3002   \n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n\ntypedef long long LL;\n\nconst int MAXN = 2e5 + 5, MAXM = 2e6 + 5;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T MIN( const _T a, const _T b )\n{\n\treturn a < b ? a : b;\n}\n\nstruct GRAPH\n{\n\tstruct edge\n\t{\n\t\tint to, nxt;\n\t}Graph[MAXM << 1];\n\t\n\tint head[MAXN] = {}, cnt;\n\t\n\tGRAPH() { cnt = 0; }\n\t\n\tvoid addEdge( const int from, const int to )\n\t{\n\t\tGraph[++ cnt].to = to, Graph[cnt].nxt = head[from];\n\t\thead[from] = cnt;\n\t}\n\t\n\tvoid addE( const int from, const int to )\n\t{\n\t\taddEdge( from, to ), addEdge( to, from );\n\t}\n\t\n\tvoid nxt( int &ptr ) const { ptr = Graph[ptr].nxt; }\n\tedge& operator [] ( const int indx ) { return Graph[indx]; }\n}G, T;\n\nint stk[MAXN];\nint siz[MAXN], w[MAXN];\nint DFN[MAXN], LOW[MAXN];\nLL ans;\nint N, M, cnt, ID, top, tot, subn;\n\nvoid Tarjan( const int u, const int fa )\n{\n\tsubn ++;\n\tDFN[u] = LOW[u] = ++ ID;\n\tw[stk[++ top] = u] = -1;\n\tfor( int i = G.head[u], v ; i ; G.nxt( i ) )\n\t\tif( ( v = G[i].to ) ^ fa )\n\t\t{\n\t\t\tif( ! DFN[v] )\n\t\t\t{\n\t\t\t\tTarjan( v, u );\n\t\t\t\tLOW[u] = MIN( LOW[u], LOW[v] );\n\t\t\t\tif( LOW[v] >= DFN[u] )\n\t\t\t\t{\n\t\t\t\t\tT.addE( ++ tot, u ), w[tot] ++;\n\t\t\t\t\tdo T.addE( tot, stk[top] ), w[tot] ++;\n\t\t\t\t\twhile( stk[top --] ^ v );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse LOW[u] = MIN( LOW[u], DFN[v] );\n\t\t}\n}\n\nvoid DFS( const int u, const int fa )\n{\n\tsiz[u] = u <= N;\n\tfor( int i = T.head[u], v ; i ; T.nxt( i ) )\n\t\tif( ( v = T[i].to ) ^ fa )\n\t\t{\n\t\t\tDFS( v, u ); \n\t\t\tans += 2ll * siz[u] * siz[v] * w[u];\n\t\t\tsiz[u] += siz[v];\n\t\t}\n\tans += 2ll * siz[u] * ( subn - siz[u] ) * w[u];\n}\n\nint main()\n{\n\tread( N ), read( M ), tot = N;\n\tfor( int i = 1, a, b ; i <= M ; i ++ )\n\t\tread( a ), read( b ), G.addE( a, b );\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t\tif( ! DFN[i] )\n\t\t{\n\t\t\tsubn = 0;\n\t\t\tTarjan( i, 0 );\n\t\t\tDFS( i, 0 );\n\t\t}\n\twrite( ans ), putchar( '\\n' );\n\treturn 0;\n}\n```",
        "postTime": 1595467113,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[APIO2018] Duathlon \u94c1\u4eba\u4e24\u9879"
    },
    {
        "content": "\u5bf9\u4e8e\u4e00\u822c\u65e0\u5411\u56fe\u4e0a\u7684\u7b80\u5355\u8def\u5f84\u95ee\u9898\uff0c\u6211\u4eec\u4e00\u822c\u8003\u8651 Tarjan\u3002\n\n\u5bf9\u4e8e\u8fd9\u9898\uff0c\u6211\u4eec\u9996\u5148\u5c06\u6bcf\u4e00\u4e2a\u70b9\u53cc\u8054\u901a\u5206\u91cf\u7f29\u8d77\u6765\uff0c\u65b9\u4fbf\u6211\u4eec\u7684\u7edf\u8ba1\u3002\n\n\u5177\u4f53\u65b9\u6cd5\u662f\uff0c\u6bcf\u627e\u5230\u4e00\u4e2a\u70b9\u53cc\u8054\u901a\u5206\u91cf\uff0c\u4f60\u5c31\u65b0\u5efa\u4e00\u4e2a\u70b9\uff0c\u5c06\u5176\u5411\u70b9\u53cc\u8054\u901a\u5206\u91cf\u91cc\u7684\u6bcf\u4e00\u4e2a\u70b9\u8fde\u8fb9\uff0c\u8fd9\u6837\u56fe\u5c31\u53d8\u6210\u4e86\u4e00\u68f5\u6811\u3002\n\u8003\u8651\u8fd9\u68f5\u6811\u7684\u6027\u8d28\uff1a\u6211\u4eec\u5c06\u6211\u4eec\u65b0\u5efa\u7684\u70b9\u53eb\u505a **_\u65b9\u70b9_** ,\u539f\u6765\u7684\u70b9\u53eb\u505a **_\u5706\u70b9_**\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5f97\u51fa\u4e00\u68f5\u53eb\u505a **_\u5706\u65b9\u6811_** \u7684\u6811\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e48\u4e00\u68f5\u6811\uff0c\u6211\u4eec\u6709\u4ec0\u4e48\u6027\u8d28\u5462\uff1f\n\n-\t\u6811\u4e0a\u53ea\u5b58\u5728\u201c\u5706\u5706\u8fb9\u201d\u548c\u201c\u5706\u65b9\u8fb9\u201d\u3002\n-\t\u6bcf\u4e00\u4e2a\u65b9\u70b9\u5bf9\u5e94\u4e00\u4e2a\u70b9\u53cc\u8054\u901a\u5206\u91cf\u3002\n-\t\u65b9\u70b9\u7684\u70b9\u5ea6\u662f\u70b9\u53cc\u8054\u901a\u5206\u91cf\u7684\u5927\u5c0f\u3002\n\n\u5bf9\u4e8e\u70b9\u53cc\u8054\u901a\u5206\u91cf\uff0c\u6211\u4eec\u53c8\u6709\u4ec0\u4e48\u6027\u8d28\u5462\uff1f\n\n\u6211\u4eec\u79f0\u6ee1\u8db3\u9898\u610f\u7684\u8def\u5f84\u53eb\u505a **_\u5408\u6cd5\u8def\u5f84_**\uff0c\u90a3\u4e48\uff1a\n\n-\t\u5bf9\u4e8e\u5c5e\u4e8e\u4e00\u4e2a\u70b9\u53cc\u8054\u901a\u5206\u91cf\u7684\u4efb\u610f\u70b9\u5bf9 $(u,v)$\uff0c\u4ee5\u8fd9\u4e2a\u70b9\u53cc\u8054\u901a\u5206\u91cf\u9664\u4e86 $u$ \u548c $v$ \u4ee5\u5916\u7684\u4efb\u4f55\u70b9\u4f5c\u4e3a\u4e2d\u95f4\u70b9\uff0c\u90fd\u5b58\u5728\u4e00\u6761\u5408\u6cd5\u8def\u5f84\n\n-\t\u82e5\u5706\u65b9\u6811\u4e0a\u7684\u70b9\u5bf9\u4e4b\u95f4\u7684\u8def\u5f84\uff08\u663e\u7136\u6811\u4e0a\u8def\u5f84\u662f\u552f\u4e00\u7684\uff09\u7ecf\u8fc7\u4e00\u4e2a\u70b9\u53cc\u8054\u901a\u5206\u91cf\uff0c\u5219\u8fd9\u4e2a\u70b9\u53cc\u8054\u901a\u5206\u91cf\u5185\u7684\u6bcf\u4e00\u4e2a\u70b9\u90fd\u80fd\u5f53\u505a\u4e2d\u95f4\u70b9\uff08\u5373\u9898\u4e2d\u7684\u70b9 $c$\uff09\u3002\n\n\u6ce8\u610f\u5230\u8fd9\u91cc\u7684\u7edf\u8ba1\u4e0e\u70b9 $c$ \u6709\u5173\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u70b9 $c$ \u65f6\u5019\u7684\u7b54\u6848\u3002\n\n\u8bbe $f(i)$ \u8868\u793a $i$ \u7684\u5b50\u6811\u5185\u6709\u591a\u5c11\u4e2a\u70b9\u5bf9 $(u,v)$ \u6ee1\u8db3 $(u,i,v)$ \u662f\u4e00\u6761\u5408\u6cd5\u8def\u5f84\u3002\n\n\u82e5 $i$ \u662f\u5706\u70b9\uff0c\u8bbe $siz(i)$ \u8868\u793a $i$ \u7684\u5b50\u6811\u5927\u5c0f\uff08\u65b9\u70b9\u4e0d\u7b97\u5927\u5c0f\uff09\uff0c\u90a3\u4e48\u6709\uff1a\n\n$$f(i)=\\sum_{j=son_i} (siz(i)-siz(j)-1)siz(j)$$\n\n\u82e5 $i$ \u662f\u65b9\u70b9\uff0c\u8bbe $deg(i)$ \u8868\u793a $i$ \u4ee3\u8868\u7684\u70b9\u53cc\u8054\u901a\u5206\u91cf\u7684\u5927\u5c0f\uff08\u5373\u8be5\u70b9\u70b9\u5ea6\uff09\uff0c\u7531\u4e8e\u4e00\u4e2a\u4efb\u610f\u4e00\u4e2a\u70b9\u53cc\u8054\u901a\u5206\u91cf\u5185\u7684\u70b9\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u4e2d\u8f6c\u70b9\uff08\u70b9\u53cc\u8054\u901a\u5206\u91cf\u7684\u6027\u8d28\uff09\u3002\u6240\u4ee5\u6709\uff1a\n\n$$f(i)=(deg(i)-2) \\sum_{j=son_i} (siz(i)-siz(j))siz(j)$$\n\n\u679a\u4e3e\u6839 $dp$\uff0c\u590d\u6742\u5ea6 $O(n^2)$\u3002\n\n~~\u5f3a\u884c\u52a0\u4e0a\u6362\u6839 dp \u5c31 O(n) \u4e86\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002~~\n\n\u6362\u6839 dp \u592a\u590d\u6742\u4e86\uff0c\u6211\u4eec\u91c7\u53d6\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u505a\u6cd5\u3002\n\n\u89c2\u5bdf\u6211\u4eec\u521a\u521a\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u6700\u7ec8\u6c42\u7684\u662f\u6240\u6709 $f(root)$ \u7684\u548c\u3002\n\n\u6211\u4eec\u6362\u79cd\u7edf\u8ba1\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u6811\u4e0a\u7684\u4efb\u610f\u4e00\u6761\u8def\u5f84\uff0c\u90fd\u662f\u4e00\u6761\u5408\u6cd5\u8def\u5f84\uff0c\u4e14\u6b64\u65f6\u7684\u65b9\u6848\u6570\u4e3a\u8be5\u70b9\u4e24\u8fb9\u70b9\u6570\u7684\u79ef\u518d\u4e58\u4e0a\u8fd9\u4e2a\u70b9\u4ee3\u8868\u7684\u70b9\u53cc\u8054\u901a\u5206\u91cf\u7684\u5927\u5c0f\u3002\n\n\u5f53\u7136\u8fd9\u6837\u5272\u70b9\u88ab\u6211\u4eec\u91cd\u590d\u7edf\u8ba1\u4e86\uff0c\u5728\u6700\u540e\u7b97\u7b54\u6848\u7684\u65f6\u5019\u6211\u4eec\u8981\u5c06\u7ecf\u8fc7\u5272\u70b9\u7684\u7b54\u6848\u6263\u6389\uff08\u4e8b\u5b9e\u4e0a\u662f\u4e00\u4e2a\u5c0f\u5bb9\u65a5\uff09\n\n\u590d\u6742\u5ea6 $O(n)$\uff0c\u53ef\u4ee5\u8f7b\u677e\u901a\u8fc7\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#ifdef DEBUG\n\t#define debug(a...) (fprintf(stderr,a),fflush(stderr),1)\n#else\n\t#define debug(a...) (1)\n#endif\n#define dmax(x,y) ((x)<(y)?(y):(x))\n#define dmin(x,y) ((x)<(y)?(x):(y))\n#define cmax(x,y) (((x)<(y))&&((x)=(y)))\n#define cmin(x,y) (((x)>(y))&&((x)=(y)))\n#define reg register\ninline int read()\n{\n\treg int x=0;reg char ch=getchar();reg bool f=0;\n\tfor(;ch<48||57<ch;ch=getchar()) f|=(ch=='-');\n\tfor(;47<ch&&ch<58;ch=getchar()) x=(x<<1)+(x<<3)+(ch^48);\n\treturn f?-x:x;\n}\n\nnamespace RRP\n{\n\tconst int maxn=200010;\n\tstruct edge{int to;edge*nxt;}*head1[maxn],*head2[maxn];\n\tinline void add1(int u,int v)\n\t{\n\t\tstatic edge E[maxn<<1],*tot=E;\n\t\t*++tot=(edge) {v,head1[u]},head1[u]=tot;\n\t\t*++tot=(edge) {u,head1[v]},head1[v]=tot;\n\t}\n\tinline void add2(int u,int v)\n\t{\n\t\tstatic edge E[maxn<<1],*tot=E;\n\t\t*++tot=(edge) {v,head2[u]},head2[u]=tot;\n\t\t*++tot=(edge) {u,head2[v]},head2[v]=tot;\n\t}\n\tint n,m,cntt;\n\tint cnt,tmr,dfn[maxn],low[maxn],stk[maxn],*top;\n\tint siz[maxn];\n\tlong long ans,tmpans[maxn];\n\tvoid Tarjan(int u)\n\t{\n\t\t*++top=u;++cnt;dfn[u]=low[u]=++tmr;\n\t\tfor(edge* i=head1[u];i;i=i->nxt)\n\t\tif(!dfn[i->to])\n\t\t{\n\t\t\tTarjan(i->to);\n\t\t\tcmin(low[u],low[i->to]);\n\t\t\tif(dfn[u]==low[i->to])\n\t\t\t{\n\t\t\t\tint tmp=0;++cntt;\n\t\t\t\tfor(;tmp!=i->to;--top)\n\t\t\t\t{\n\t\t\t\t\ttmp=*top;\n\t\t\t\t\tadd2(cntt,tmp);\n\t\t\t\t}\n\t\t\t\tadd2(cntt,u);\n\t\t\t}\n\t\t} else cmin(low[u],dfn[i->to]);\n\t}\n\tvoid dfs(int u,int fa)\n\t{\n\t\tsiz[u]=(u<=n)?1:0;\n\t\tfor(edge* i=head2[u];i;i=i->nxt)\n\t\tif(i->to!=fa)\n\t\t{\n\t\t\tdfs(i->to,u);\n\t\t\tsiz[u]+=siz[i->to];\n\t\t}\n\t\tif(u<=n)\n\t\t{\n\t\t\tans+=1ll*(cnt-1)*(cnt-1);\n\t\t\tfor(edge* i=head2[u];i;i=i->nxt) if(i->to!=fa) ans-=tmpans[i->to];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(edge* i=head2[u];i;i=i->nxt)\n\t\t\t\tif(i->to!=fa) tmpans[u]+=1ll*siz[i->to]*siz[i->to];\n\t\t\tfor(edge* i=head2[u];i;i=i->nxt)\n\t\t\t\tif(i->to!=fa) ans-=tmpans[u]-1ll*siz[i->to]*siz[i->to]+1ll*(cnt-siz[u])*(cnt-siz[u]);\n\t\t}\n\t}\n\t\n\tinline int main()\n\t{\n\t\tn=read(),m=read();cntt=n;\n\t\twhile(m--) add1(read(),read());\n\t\tfor(reg int i=1;i<=n;++i) if(!dfn[i]) top=stk,cnt=0,Tarjan(i),dfs(i,0);\n\t\tprintf(\"%lld\\n\",ans);\n\t\treturn 0;\n\t}\n}\nint main() {return RRP::main();}\n```\n\n",
        "postTime": 1541599961,
        "uid": 22039,
        "name": "\u6211\u5bb6\u7f8a\u8089\u6c64",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4630 \u3010[APIO2018] Duathlon \u94c1\u4eba\u4e24\u9879\u3011"
    },
    {
        "content": "\u7b80\u5355\u5706\u65b9\u6811\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u7b54\u6848\u5c31\u662f\u8def\u5f84\u4e0a\u53ef\u80fd\u7ecf\u8fc7\u7684\u70b9\u6570\u3002\u8003\u8651\u5c06\u56fe\u7f29\u6210\u5706\u65b9\u6811\uff0c\u7edf\u8ba1\u6811\u4e0a\u8def\u5f84\u70b9\u6570\u3002\u53ef\u4ee5\u7b80\u5355\u53d1\u73b0\uff0c\u5982\u679c\u5c06\u65b9\u70b9\u7684\u6743\u503c\u6807\u4e3a\u70b9\u53cc\u5927\u5c0f\uff0c\u5706\u70b9\u7684\u6743\u503c\u6807\u4e3a-1\uff0c\u5219\u67d0\u6761\u8def\u5f84\u4e0a\u53ef\u80fd\u7ecf\u8fc7\u7684\u70b9\u6570\u5c31\u662f\u5706\u65b9\u6811\u4e0a\u8def\u5f84\u70b9\u6743\u548c\u3002\u76f4\u63a5\u505a\u662f$O(n^2)$\u7684\uff0c\u4f46\u662f\u53ef\u4ee5\u6539\u4e3a\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u88ab\u7ecf\u8fc7\u591a\u5c11\u6b21\u518d\u4e58\u4e0a\u5b83\u7684\u6743\u503c\uff0c\u53ef\u4ee5\u5229\u7528\u7b80\u5355$dfs+dp$\u505a\u5230$O(n)$\u3002\n\n\u6ce8\u610f\u56fe\u4e0d\u4e00\u5b9a\u8054\u901a\u3002\n\n\u4ee3\u7801:\n\n```cpp\n#include<bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#define Rep(i,a,b) for(register int i=(a),i##end=(b);i<=i##end;++i)\n#define Repe(i,a,b) for(register int i=(a),i##end=(b);i>=i##end;--i)\n#define For(i,a,b) for(i=(a),i<=(b);++i)\n#define Forward(i,a,b) for(i=(a),i>=(b);--i)\n#define Chkmin(a,b) a=a<b?a:b\ntemplate<typename T>inline void read(T &x)\n{\n\tT f=1;x=0;char c;\n\tfor(c=getchar();!isdigit(c);c=getchar())if(c=='-')f=-1;\n\tfor(;isdigit(c);c=getchar())x=x*10+(c^48);\n\tx*=f;\n}\nusing namespace std;\nvoid file()\n{\n#ifndef ONLINE_JUDGE\n\tfreopen(\"duathlon.in\",\"r\",stdin);\n\tfreopen(\"duathlon.out\",\"w\",stdout);\n#endif\n}\nconst int MAXN=1e6+7,MAXM=2e6+7;\n\nstatic int n,m,Q,e;\n\nstruct edge\n{\n    int v,nxt;\n};\n\nstatic struct edges\n{\n    edge p[MAXM];\n    int head[MAXN];\n\n    inline void add(int u,int v)\n\t{this->p[++e]=(edge){v,head[u]};this->head[u]=e;}\n}p,q;\n\nstatic int dfn[MAXN],low[MAXN],bel[MAXN],cnt,sta[MAXN],tp,dfc,w[MAXN],siz;\n\nvoid tarjan(int u,int ff)\n{\n    dfn[u]=low[u]=++dfc;sta[++tp]=u;w[u]=-1;++siz;\n    for(register int v=p.head[u];v;v=p.p[v].nxt)\n    {\n        if(!dfn[p.p[v].v])\n        {\n            tarjan(p.p[v].v,u);\n            Chkmin(low[u],low[p.p[v].v]);\n            if(low[p.p[v].v]>=dfn[u])\n            {\n                q.add(u,++cnt);w[cnt]=1;\n                static int las;\n                do\n                {\n                    las=sta[tp--];++w[cnt];\n                    q.add(cnt,las);\n                }while(las^p.p[v].v);\n            }\n        }else if(p.p[v].v^ff)Chkmin(low[u],dfn[p.p[v].v]);\n    }\n}\n\nstatic int dep[MAXN];\n\ninline void init()\n{\n\tread(n);read(m);\n\tstatic int u,v;\n\tRep(i,1,m)read(u),read(v),p.add(u,v),p.add(v,u);\n}\n\nstatic int sz[MAXN],vis[MAXN];\n\nstatic long long ans;\n\nvoid calculate(int u,int ff)\n{\n\tif(u<=n)sz[u]=1,vis[u]=1;\n\tlong long cnt=0ll;\n\tfor(register int v=q.head[u];v;v=q.p[v].nxt)if(q.p[v].v^ff)\n\t{\n\t\tcalculate(q.p[v].v,u);\n\t\tcnt+=(long long)2*sz[u]*sz[q.p[v].v];\n\t\tsz[u]+=sz[q.p[v].v];\n\t}\n\tcnt+=(long long)2*sz[u]*(siz-sz[u]);\n\tans+=cnt*w[u];\n}\n\ninline void solve()\n{\n\tcnt=n;\n\tRep(i,1,n)if(!vis[i])siz=0,tarjan(i,0),calculate(i,0);\n\tprintf(\"%lld\\n\",ans);\n}\n\nint main()\n{\n\tfile();\n\tinit();\n\tsolve();\n\treturn 0;\n}\n\n```",
        "postTime": 1528984286,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4630 \u3010[APIO2018] Duathlon \u94c1\u4eba\u4e24\u9879\u3011"
    },
    {
        "content": "\u5706\u65b9\u6811\u3002             \n\u6211\u4eec\u5efa\u7acb\u5706\u65b9\u6811\u4e4b\u540e\u679a\u4e3e\u6bcf\u4e2a\u8d77\u70b9\u548c\u7ec8\u70b9\u3002    \n\u7136\u540e\u8bbe\u65b9\u70b9\u7684\u6743\u503c\u4e3a\u70b9\u53cc\u7684\u4e2a\u6570\uff0c\u5706\u70b9\u7684\u6743\u503c\u662f-1\u3002     \n\u4e4b\u540e\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u5c31\u662f\u4e24\u70b9\u4e4b\u95f4\u7684\u70b9\u6743\u548c\u3002       \n\n\u4e4b\u540e\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u7684\u8d21\u732e\u53ef\u4ee5\u7528\u4e00\u904d$\\text{dfs}$\u5f97\u5230,\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\u3002          \n```cpp\n// luogu-judger-enable-o2\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 4e5 + 10;\ntypedef long long ll;\nnamespace Fast_Input {\n    template<class T> inline void read(T& res) {\n        res = 0;  char ch;  bool sign = 0;   \n        do { ch = getchar();  sign |= ch == '-'; } while(!isdigit(ch));\n        while(isdigit(ch)) res = (res << 1) + (res << 3) + (ch & 15),ch = getchar();\n        (sign) && (res = -res);\n        return;\n    }\n}\nusing Fast_Input::read;  \nint n,m,i,j,k,sta_top,extra,tot,s;   \nint dfn[maxn],low[maxn],sta[maxn],val[maxn],sz[maxn];\nll ans;  \nstruct Graph {\n    int head[maxn],nxt[maxn << 1],ver[maxn << 1];   int ecnt;    \n    inline Graph() { ecnt = 0;  memset(head,-1,sizeof(head)); }   \n    inline void adde(int u,int v) {\n        ver[++ecnt] = v;  nxt[ecnt] = head[u];\n        head[u] = ecnt;  return;\n    }\n    inline void readd(int u,int v) {\n        adde(u,v);  adde(v,u);  return;\n    }\n} gold,gnew;\ninline void cmin(int& x,int y) {\n    if(x > y) x = y;  return;\n}\nvoid tarjan(int u) {\n    dfn[u] = ++tot;  low[u] = ++tot;  sta[++sta_top] = u;  sz[u] = 1;    \n    for(int i = gold.head[u],v;~i;i = gold.nxt[i]) {\n        v = gold.ver[i];  \n        if(!dfn[v]) {\n            tarjan(v);  cmin(low[u],low[v]); \n            if(low[v] >= dfn[u]) {\n                int t = 0,cnt = 1;  extra++;\n                do {\n                    t = sta[sta_top--];  cnt++;  \n                    gnew.readd(extra,t);\n                    sz[extra] += sz[t];\n                } while(t != v);  \n                val[extra] = cnt;  sz[u] += sz[extra];  \n                gnew.readd(extra,u); \n            }\n        } else cmin(low[u],dfn[v]);   \n    }\n}\nvoid dfs(int u,int fa) {\n    int x = u <= n;   ans += 2ll * sz[u] * (s - sz[u]) * val[u];\n    for(int i = gnew.head[u],v;~i;i = gnew.nxt[i]) {\n        v = gnew.ver[i];  if(v == fa) continue;\n        ans += 2ll * x * sz[v] * val[u];\n        x += sz[v];  dfs(v,u);  \n    }\n    return;\n}\nint main() {\n    read(n);  read(m);  extra = n;\n    for(int i = 1;i <= n;i++) val[i] = -1;\n    for(int i = 1,u,v;i <= m;i++) {\n        read(u);  read(v);  \n        gold.readd(u,v);\n    } \n    for(int i = 1;i <= n;i++) {\n        if(!dfn[i]) {\n            tarjan(i); s = sz[i];  dfs(i,-1);   \n        }\n    }\n    printf(\"%lld\\n\",ans);\n}\n\n```",
        "postTime": 1554805065,
        "uid": 114320,
        "name": "\u843d\u6c50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4630 \u3010[APIO2018] Duathlon \u94c1\u4eba\u4e24\u9879\u3011"
    },
    {
        "content": "\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u6c42\u6709\u591a\u5c11\u4e2a\u4e09\u5143\u7ec4 $(x,y,z)$ \u4f7f\u5f97\u5b58\u5728\u4ece $x$ \u5f00\u59cb\uff0c\u7ecf\u8fc7 $y$\uff0c\u5728 $z$ \u7ed3\u675f\u7684\u7b80\u5355\u8def\u5f84\u3002\n\n\u65e0\u5411\u56fe\u8def\u5f84\u95ee\u9898\uff0c\u9650\u5236\u662f\u70b9\u53ea\u80fd\u7ecf\u8fc7 $1$ \u6b21\uff0c\u6545\u4ece v-BCC \u8003\u8651\u3002v-BCC \u6709\u4e00\u4e2a\u5f88\u77e5\u540d\u7684\u4ea7\u7269\u5c31\u662f\u5706\u65b9\u6811\uff0c\u6240\u4ee5\u76f4\u63a5\u5c06\u539f\u56fe\u5316\u4e3a\u5706\u65b9\u6811\uff0c\u7136\u540e\u5728\u5706\u65b9\u6811\u4e0a\u6c42\u89e3\u3002\n\n\u7136\u540e\u89c2\u5bdf\u51fa\u5982\u679c $y$ \u4e0e $x\\rightsquigarrow z$ \u5728\u6811\u4e0a\u7684\u8def\u5f84\u4e0a\u7684\u67d0\u4e00\u4e2a\u65b9\u70b9\u6709\u8fb9\u8fde\u63a5\uff0c\u5219 $(x,y,z)$ \u4e00\u5b9a\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u5927\u6982\u53ef\u4ee5\u8fd9\u6837\u8bc1\u660e\uff1a\n\n\u8bbe\u4e0e $y$ \u6709\u8fde\u63a5\u7684\u8def\u5f84\u4e0a\u7684\u90a3\u4e2a\u65b9\u70b9\u4e3a $v$\uff0c\u5219\u5b58\u5728\u53e6\u5916\u4e24\u4e2a\u70b9 $x',z'$ \u4f7f\u5f97\u6811\u4e0a\u8def\u5f84 $x\\rightsquigarrow z$ \u7b49\u4ef7\u4e8e $x\\rightsquigarrow x'\\rightarrow v\\rightarrow z'\\rightsquigarrow z$\uff0c\u4e14 $x',y,z'$ \u5728\u540c\u4e00\u4e2a v-BCC\u3002\n\n\u7136\u540e\u5982\u679c\u5728\u539f\u56fe\u4e0a\u65e0\u6cd5\u627e\u5230\u4e00\u6761 $x'$ \u5230 $y$ \u7684\u8def\u5f84\u548c\u4e00\u6761 $y$ \u5230 $z'$ \u7684\u8def\u5f84\u4f7f\u5f97\u4e24\u6761\u8def\u5f84\u53ea\u5728 $y$ \u76f8\u4ea4\uff0c\u90a3\u4e48\u6240\u6709 $x'$ \u5230 $y$ \u7684\u8def\u5f84\u7684\u4ea4 $P$ \u548c\u6240\u6709 $z'$ \u5230 $y$ \u7684\u8def\u5f84\u7684\u4ea4 $Q$ \u7684\u4ea4\u96c6 $P\\cup Q$ \u4e00\u5b9a\u6709\u4e00\u4e2a\u9664 $y$ \u4ee5\u5916\u7684\u70b9 $u$\uff0c\u800c\u5272\u6389 $u$ \u4e4b\u540e $x',z'$ \u4e0e $y$ \u5747\u4e0d\u8fde\u901a\uff08\u56e0\u4e3a\u6240\u6709\u5230 $y$ \u7684\u8def\u5f84\u90fd\u8981\u7ecf\u8fc7 $u$\uff09\uff0c\u8fd9\u4e0e $x',y,z'$ \u5728\u540c\u4e00\u4e2a v-BCC \u77db\u76fe\u3002\n\n\u6240\u4ee5\u4e0a\u8ff0\u7ed3\u8bba\u6210\u7acb\u3002\n\n\u90a3\u4e48\uff0c\u5728\u5f97\u5230\u8fd9\u4e2a\u7ed3\u8bba\u4e4b\u540e\uff0c\u5bf9\u4e8e\u8def\u5f84 $x\\rightsquigarrow z$\uff0c\u53ef\u9009\u53d6\u7684 $y$ \u5c31\u5206\u4e24\u79cd\uff1a\n\n1. \u5728\u8def\u5f84\u4e0a\u7684\u5706\u70b9\u3002\n2. \u4e0e\u8def\u5f84\u4e0a\u7684\u81f3\u5c11\u4e00\u4e2a\u65b9\u70b9\u6709\u8fb9\u76f4\u63a5\u76f8\u8fde\u7684\u5706\u70b9\u3002\n\n\uff08\u4e8b\u5b9e\u8bc1\u660e 2 \u662f\u5305\u542b 1 \u7684\u2026\u2026\u4e0d\u8fc7\u6211\u4ee3\u7801\u8fd9\u4e48\u5199\u4e86\u5c31\u8fd9\u4e48\u8bf4\u5427\u2026\u2026\uff09\n\n\u6240\u4ee5\u5728\u5706\u70b9\u4e0a\u9762\u8bb0\u5f55 $1$ \u7684\u6743\u503c\uff0c\u5728\u65b9\u70b9\u4e0a\u9762\u8bb0\u5f55\u5ea6\u6570\u51cf $2$ \u7684\u6743\u503c\uff08\u56e0\u4e3a\u8def\u5f84\u4f1a\u8fc7\u4e24\u4e2a\u4e0e\u4e4b\u76f8\u8fde\u7684\u5706\u70b9\uff09\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u5bf9\u6811\u4e0a\u6bcf\u4e2a\u70b9\u5bf9\u6c42\u8def\u5f84\u70b9\u6743\u4e4b\u548c\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u95ee\u9898\uff0c\u76f4\u63a5\u6362\u6839 DP \u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O(n+m)$\u3002\n\n\u4e00\u4e2a\u5c0f\u5751\u662f\u8fd9\u9898\u7684\u56fe\u53ef\u4ee5\u4e0d\u8fde\u901a\uff0cWA 64 \u5206\u53ef\u80fd\u662f\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\u3002\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\n\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n\ninline int qread() {\n\tregister char c = getchar();\n\tregister int x = 0, f = 1;\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline int Abs(const int& x) {return (x > 0 ? x : -x);}\ninline int Max(const int& x, const int& y) {return (x > y ? x : y);}\ninline int Min(const int& x, const int& y) {return (x < y ? x : y);}\n\nstruct Edge {\n\tint to, nxt;\n\tEdge() {\n\t\tnxt = -1;\n\t}\n};\nstruct Graph {\n\tEdge e[400005];\n\tint hd[200005], pnt;\n\tGraph() {\n\t\tpnt = 0;\n\t\tmemset(hd, -1, sizeof(hd));\n\t}\n\tinline void AddEdge(int u, int v) {\n\t\te[++pnt].to = v;\n\t\te[pnt].nxt = hd[u];\n\t\thd[u] = pnt;\n\t}\n};\nGraph reg, rst;\nint n, m, stk[200005], stktop, bcccnt, dfn[200005], low[200005], _time;\nlong long siz[200005], sumdep[200005], w[200005], wsum[200005], ans;\nbool vis[200005];\n\ninline void Read() {\n\tn = qread(); m = qread();\n\tfor (int i = 1;i <= m;i++) {\n\t\tint u = qread(), v = qread();\n\t\treg.AddEdge(u, v);\n\t\treg.AddEdge(v, u);\n\t}\n}\n\ninline void Tarjan(int u, int fa) {\n\tdfn[u] = low[u] = ++_time;\n\tstk[++stktop] = u;\n\tfor (int i = reg.hd[u];~i;i = reg.e[i].nxt) {\n\t\tint v = reg.e[i].to;\n\t\tif (!dfn[v]) {\n\t\t\tTarjan(v, u);\n\t\t\tlow[u] = Min(low[u], low[v]);\n\t\t\tif (low[v] >= dfn[u]) {\n\t\t\t\tbcccnt++;\n\t\t\t\tw[bcccnt + n] = -1;\n\t\t\t\tfor (;;) {\n\t\t\t\t\tint x = stk[stktop--];\n\t\t\t\t\trst.AddEdge(bcccnt + n, x);\n\t\t\t\t\trst.AddEdge(x, bcccnt + n);\n\t\t\t\t\tw[bcccnt + n]++;\n\t\t\t\t\tif (x == v) break;\n\t\t\t\t}\n\t\t\t\trst.AddEdge(bcccnt + n, u);\n\t\t\t\trst.AddEdge(u, bcccnt + n);\n\t\t\t}\n\t\t} else if (dfn[v] < dfn[u] && v != fa) {\n\t\t\tlow[u] = Min(low[u], dfn[v]);\n\t\t}\n\t}\n}\n\ninline void Prefix() {\n\tfor (int i = 1;i <= n;i++) {\n\t\tif (!dfn[i]) Tarjan(i, -1);\n\t\tsiz[i] = 1;\n\t\tw[i] = 1;\n\t}\n}\n\ninline void Link(int u, int v) {\n\tsiz[u] += siz[v];\n\twsum[u] += wsum[v];\n\tsumdep[u] += sumdep[v] + siz[v] * w[u];\n}\n\ninline void Cut(int u, int v) {\n\tsumdep[u] -= sumdep[v] + siz[v] * w[u];\n\tsiz[u] -= siz[v];\n\twsum[u] -= wsum[v];\n}\n\ninline void Dfs1(int u, int fa) {\n\tvis[u] = 1;\n\twsum[u] = w[u];\n\tsiz[u] = (u <= n);\n\tsumdep[u] = w[u];\n\tfor (int i = rst.hd[u];~i;i = rst.e[i].nxt) {\n\t\tint v = rst.e[i].to;\n\t\tif (v != fa) {\n\t\t\tDfs1(v, u);\n\t\t\tLink(u, v);\n\t\t}\n\t}\n}\n\ninline void Dfs2(int u, int fa) {\n\t//printf(\"%d %lld %lld %lld\\n\", u, sumdep[u], siz[u], wsum[u]);\n\tif (u <= n) ans += sumdep[u] - (siz[u] - 1) * w[u] - wsum[u];\n\tfor (int i = rst.hd[u];~i;i = rst.e[i].nxt) {\n\t\tint v = rst.e[i].to;\n\t\tif (v != fa) {\n\t\t\t//printf(\"v=%d\\n\", v);\n\t\t\tCut(u, v);\n\t\t\t//printf(\"%lld\\n\", siz[u]);\n\t\t\tLink(v, u);\n\t\t\tDfs2(v, u);\n\t\t\tCut(v, u);\n\t\t\tLink(u, v);\n\t\t}\n\t}\n}\n\ninline void Solve() {\n\tfor (int i = 1;i <= n;i++) {\n\t\tif (!vis[i]) {\n\t\t\tDfs1(i, -1);\n\t\t\tDfs2(i, -1);\n\t\t}\n\t}\n\tprintf(\"%lld\", ans);\n}\n\nint main() {\n\tRead();\n\tPrefix();\n\tSolve();\n\t#ifndef ONLINE_JUDGE\n\twhile (1);\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1612097202,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4630 \u3010[APIO2018] Duathlon \u94c1\u4eba\u4e24\u9879\u3011"
    },
    {
        "content": "## \u9898\u89e3\n\u9898\u76ee[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4630)  \n\n\u9898\u76ee\u7b80\u5316\uff1a\u7ed9\u51fa\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u95ee\u5b58\u5728\u591a\u5c11\u7ec4 $<s,c,f>$ \u4f7f\u5f97 $s$ \u7531 $c$ \u53ef\u4ee5\u5230\u8fbe $f$ \u3002\n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u7b97\u662f\u4e00\u9053\u5706\u65b9\u6811\u7684\u6a21\u677f\u9898,\u7531\u5706\u65b9\u6811\u7684\u6027\u8d28\u53ef\u77e5\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u53cc\u4e2d\u7684\u4e24\u70b9\uff0c\u4ed6\u4eec\u4e4b\u95f4\u7b80\u5355\u8def\u5f84\u548c\u5176\u4e0a\u7684\u70b9\u7684\u5e76\u96c6\u6070\u597d\u4e3a\u8fd9\u4e2a\u70b9\u53cc\u3002\u610f\u601d\u5c31\u662f\u70b9\u53cc\u4e2d\u7684\u4e24\u4e2a\u70b9 $u$ , $v$ \u4e4b\u95f4\u4e00\u5b9a\u5b58\u5728\u4e00\u6761\u7b80\u5355\u8def\u5f84\u7ecf\u8fc7\u540c\u4e00\u4e2a\u70b9\u53cc\u5185\u7684\u53e6\u5916\u4e00\u4e2a\u70b9 $w$ \u3002\n\n\u7531\u8fd9\u4e2a\u7ed3\u8bba\u53ef\u77e5\uff0c\u8003\u8651\u4e24\u5706\u70b9\u5728\u5706\u65b9\u6811\u4e0a\u7684\u7b80\u5355\u8def\u5f84\uff0c\u4e0e\u8def\u5f84\u4e0a\u7ecf\u8fc7\u7684\u65b9\u70b9\u76f8\u90bb\u7684\u5706\u70b9\u7684\u96c6\u5408\uff0c\u5373\u4e3a\u539f\u56fe\u6b64\u7b80\u5355\u8def\u5f84\u4e0a\u7684\u70b9\u96c6\u3002\n\n\u56e0\u6b64\uff0c\u5bf9\u4e8e\u9898\u76ee\u4e2d\u7684 $<s,c,f>$ \uff0c\u6211\u4eec\u53ef\u4ee5\u56fa\u5b9a $s$ \u548c $f$ \uff0c\u6c42\u5408\u6cd5\u7684 $c$ \u7684\u6570\u91cf\uff0c\u6613\u5f97\u5408\u6cd5\u7684 $c$ \u7684\u6570\u91cf\u7b49\u4e8e $s$ \uff0c $f$ \u4e4b\u95f4\u7b80\u5355\u8def\u5f84\u5e76\u96c6\u7684\u70b9\u6570\u51cf $2$ \u3002(\u53bb\u6389 $s$ \uff0c$f$ \u672c\u8eab)\u3002\n\n\u8fd9\u91cc\u53ef\u4ee5\u7528\u4e00\u4e2a\u5706\u65b9\u6811\u7684\u6280\u5de7\uff0c\u5373\u5728\u8def\u5f84\u7edf\u8ba1\u65f6\uff0c\u7ed9\u70b9\u9644\u4e0a\u5408\u9002\u7684\u70b9\u6743\u3002\u4f46\u8981\u5177\u4f53\u60c5\u51b5\u5177\u4f53\u5206\u6790\u3002\n\n\u672c\u9898\u4e2d\uff0c\u6bcf\u4e2a\u65b9\u70b9\u6743\u503c\u5bf9\u5e94\u5176\u70b9\u53cc\u7684\u5927\u5c0f\uff0c\u6bcf\u4e2a\u5706\u70b9\u6743\u503c\u4e3a $-1$ \u3002(\u81ea\u5df1\u52a8\u624b\u753b\u4e00\u753b\u5c31\u660e\u767d\u4e86)\u3002\n\n\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u7edf\u8ba1\u5706\u65b9\u6811\u4e0a $\\sum$  **\u4e24\u5706\u70b9**\u95f4\u7b80\u5355\u8def\u5f84\u6743\u503c\u548c\u3002\n\n\u8fd9\u6837\u7edf\u8ba1\u5f88\u9ebb\u70e6\uff0c\u800c\u6211\u4eec\u6362\u4e2a\u89d2\u5ea6\u601d\u8003\u4e00\u4e0b\uff0c\u8003\u8651\u6bcf\u4e2a\u70b9\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\uff0c\u5373\u7528\u901a\u8fc7\u5b83\u7684\u8def\u5f84\u6761\u6570\u4e58\u4e0a\u5b83\u7684\u6743\u503c\u3002\u800c\u5b83\u7684\u8def\u5f84\u6761\u6570\u5c31\u662f\uff1a (\u6240\u6709\u4ee5\u6b64\u70b9\u4e3a\u6839\u7684\u6811\u4e2d\u6bcf\u4e24\u4e2a\u5b50\u6811\u4e2d\u5706\u70b9\u4e2a\u6570\u76f8\u4e58\u518d\u76f8\u52a0\uff0c\u518d\u52a0\u4e0a\u6bcf\u4e2a\u5b50\u6811\u4e2d\u5706\u70b9\u4e2a\u6570\u4e0e\u4e0d\u5c5e\u4e8e\u8fd9\u4e2a\u70b9\u7684\u6811\u7684\u5706\u70b9\u4e2a\u6570\u76f8\u4e58) $\u00d7$ $2$ \u3002\n\n\u6700\u540e\u4e0d\u8981\u5fd8\u4e86\u5904\u7406\u56fe\u4e0d\u8054\u901a\u7684\u60c5\u51b5\u3002  \n $AC \\kern 0.5emCODE$ :\n ```cpp\n#include<bits/stdc++.h>\n#define int long long//\u61d2\u4eba\u5927\u6cd5\nusing namespace std;\nconst int N=100100;\ninline int read() {\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if (ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nint n,m,dfn[N],low[N],tot,cnt,size[N<<1],num,ans,w[N<<1];\nstack<int> s;\nvector<int> G[N],T[N<<1];\nvoid tarjan(int u) {//\u6c42\u70b9\u53cc\uff0c\u5efa\u5706\u65b9\u6811\n\tlow[u]=dfn[u]=++tot;\n\ts.push(u);num++;//num\u8bb0\u5f55\u6240\u6709\u7684\u5706\u70b9\u4e2a\u6570\n\tfor (int i=0;i<G[u].size();i++) {\n\t\tint v=G[u][i];\n\t\tif (!dfn[v]) {\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t\tif (low[v]>=dfn[u]) {\n\t\t\t\tw[++cnt]=0;//\u65b9\u70b9\u6743\u503c\u4e3a\u5176\u70b9\u6570\n\t\t\t\tint k=0;\n\t\t\t\twhile(k!=v) {\n\t\t\t\t\tk=s.top();\n\t\t\t\t\tT[cnt].push_back(s.top());\n\t\t\t\t\tT[s.top()].push_back(cnt);\n\t\t\t\t\tw[cnt]++;\n\t\t\t\t\ts.pop();\n\t\t\t\t}\n\t\t\t\tT[u].push_back(cnt);T[cnt].push_back(u);w[cnt]++;//\u5272\u70b9\u53ef\u80fd\u5c5e\u4e8e\u591a\u4e2a\u70b9\u53cc\uff0c\u6240\u4ee5\u53ea\u5efa\u8fb9\u5373\u53ef\uff0c\u4e0d\u80fd\u9000\u6808\n\t\t\t}\n\t\t} else low[u]=min(low[u],dfn[v]);\n\t}\n}\nvoid dfs(int u,int fa) {\n\tsize[u]=(u<=n);//\u5224\u65ad\u662f\u5426\u662f\u5706\u70b9\uff0csize\u5b58\u6811\u4e2d\u5706\u70b9\u7684\u6570\u91cf\n\tfor (int i=0;i<T[u].size();i++) {\n\t\tint v=T[u][i];\n\t\tif (v!=fa) {\n\t\t\tdfs(v,u);\n\t\t\tans+=2*w[u]*size[u]*size[v];\n\t\t\tsize[u]+=size[v];//\u4e0d\u80fd\u4e0e\u4e0a\u4e00\u884c\u6362\u4f4d\u7f6e\n\t\t}\n\t}\n\tans+=2*w[u]*size[u]*(num-size[u]);\n}\nsigned main() {\n\tn=read(),m=read();\n\tmemset(w,-1,sizeof(w));\n\tcnt=n;//\u65b9\u70b9\u4ece\u5706\u70b9\u540e\u7f16\u53f7\n\tfor (int i=1;i<=m;i++) {\n\t\tint u=read(),v=read();\n\t\tG[u].push_back(v);G[v].push_back(u);\n\t}\n\tfor (int i=1;i<=n;i++) {//\u5904\u7406\u56fe\u4e0d\u8054\u901a\u7684\u60c5\u51b5\n\t\tif (!dfn[i]) {\n\t\t\tnum=0;//\u56fe\u53ef\u80fd\u4e0d\u8054\u901a\uff0c\u6240\u4ee5num\u8981\u521d\u59cb\u5316\u4e3a0\n\t\t\ttarjan(i);dfs(i,0);\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n ```\n\u6ce8\u610f\uff1a\n```cpp\nint k=0;\nwhile(k!=v) {\n\tk=s.top();\n\tT[cnt].push_back(s.top());\n\tT[s.top()].push_back(cnt);\n\tw[cnt]++;\n\ts.pop();\n}\n```\n\u4e0d\u80fd\u5199\u6210\n```cpp\nwhile(s.top()!=u) {\n\tT[cnt].push_back(s.top());\n\tT[s.top()].push_back(cnt);\n\tw[cnt]++;\n\ts.pop();\n}\n```\n\u672c\u9898\u89e3\u5f97\u5230\u4e86[\u5c0f\u7c89\u5154](https://www.luogu.com.cn/user/10703)\u5de8\u4f6c\u535a\u5ba2\u7684\u5f88\u5927\u5e2e\u52a9\uff0c\u4e5f\u501f\u9274\u4e86\u5f88\u591a\uff0c\u5728\u6b64\u611f\u8c22\u3002",
        "postTime": 1604543610,
        "uid": 141958,
        "name": "\u6960\u67ab",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4630 \u3010[APIO2018] Duathlon \u94c1\u4eba\u4e24\u9879\u3011"
    },
    {
        "content": "\u4e00\u9053\u5706\u65b9\u6811\u6a21\u677f\u9898\r\n\r\n\u63a8\u8350\u9605\u8bfb/\u53c2\u8003\u8d44\u6599 [\u5706\u65b9\u6811\u5b66\u4e60\u7b14\u8bb0\u2014\u2014\u5c0f\u7c89\u5154](https://www.luogu.com.cn/blog/PinkRabbit/Introduction-to-Block-Forest)\r\n\r\n## \u9898\u610f\u7b80\u8ff0\r\n\r\n\u7ed9\u5b9a\u4e00\u5f20\u7b80\u5355\u65e0\u5411\u56fe\uff0c\u95ee\u6709\u591a\u5c11\u5bf9\u4e09\u5143\u7ec4 $<s,c,f>$ \uff08\u4e92\u4e0d\u76f8\u540c\uff09\u4f7f\u5f97\u5b58\u5728\u4e00\u6761\u7b80\u5355\u8def\u5f84\u4ece $s$ \u51fa\u53d1\uff0c\u7ecf\u8fc7 $c$ \u5230\u8fbe $f$ \u3002\r\n\r\n## \u601d\u8def\r\n\r\n\u6bcf\u4e00\u5bf9\u56fa\u5b9a\u7684\u4ece\u8d77\u70b9 $s$ \u5230\u7ec8\u70b9 $f$ \u7684 $c$ \u7684\u6570\u91cf\u663e\u7136\u76f8\u5f53\u4e8e\u8fd9\u4e24\u70b9\u95f4\u6240\u6709\u7b80\u5355\u8def\u5f84\u4e0a\u7684\u70b9\u6570\u4e4b\u548c\u51cf\u53bb $2 (s,f $ \u672c\u8eab $)$ \uff0c\u4f46\u5bf9\u4e8e\u9898\u76ee\u4e2d\u7684\u65e0\u89c4\u5f8b\u56fe\uff08\u65e0\u89c4\u5f8b\u5728\u4e8e\u542b\u6709\u73af\u3001\u53ef\u80fd\u4e3a\u68ee\u6797\u7b49\uff09\uff0c\u8fd9\u6837\u7684\u70b9\u6570\u663e\u7136\u4e0d\u597d\u6c42\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\u5230\u4e86\u5706\u65b9\u6811\u3002\r\n\r\n> \u5706\u65b9\u6811\u53ef\u4ee5\u505a\u5230\u628a\u7b80\u5355\u65e0\u5411\u56fe\u8f6c\u6362\u4e3a\u6211\u4eec\u719f\u6089\u7684\u6811\u7ed3\u6784\uff0c\u4ece\u800c\u8fdb\u884c\u4e00\u4e9b\u6811\u4e0a\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u9047\u5230\u8fd9\u79cd\u56fe\u65f6\u4f1a\u60f3\u5230\u5706\u65b9\u6811\r\n\r\n\u5229\u7528\u5dee\u5206\u7684\u601d\u60f3\uff0c\u6211\u4eec\u5c06\u5706\u65b9\u6811\u4e0a\u7684\u6bcf\u4e2a\u5706\u70b9\u6743\u503c\u8d4b\u4e3a $-1$ \uff0c\u6bcf\u4e2a\u65b9\u70b9\u7684\u6743\u503c\u8d4b\u4e3a\u5176\u70b9\u53cc\u7684\u5927\u5c0f\uff0c\u6700\u7ec8\u7b54\u6848\u8f6c\u5316\u4e3a\uff1a\r\n\r\n $$\\sum w_i,i\\in T$$ \r\n \r\n( $T$ \u4e3a\u5706\u65b9\u6811\uff0c $G$ \u4e3a\u539f\u56fe\uff09\r\n \r\n \u8003\u8651\u5230\u6bcf\u4e2a\u70b9 $i$ \u4f5c\u4e3a\u4e2d\u8f6c\u70b9 $c$ \uff0c\u5b83\u7684\u8d21\u732e\u4e3a\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\u4e4b\u548c\uff1a\r\n \r\n - $s$ **\u4e0e** $f$ **\u90fd** \u4e3a\u5b83\u7684\u5b50\u6811\u4e2d\u7684\u70b9\uff0c\u6b64\u65f6\u8d21\u732e\u4e3a\r\n \r\n  $$ 2\\times \\sum size_j\\times (size_i-size_j)\\times w_i$$\r\n  \r\n-  $j$ \u4e3a $i$ \u5b50\u6811\u4e2d\u7684\u8282\u70b9\r\n \r\n \u56fe\u793a\u4e3a $j=2$ \uff0c $i=1$ \u65f6\uff0c\u7ea2\u8272\u4e3a $size_2$ \uff0c\u84dd\u8272\u4e3a $size_1-size_2$ \uff0c\u76f8\u4e58\u5373\u4e3a\u8282\u70b9 $2$  \u4f5c\u4e3a\u8282\u70b9 $1$ \u7684\u5b50\u8282\u70b9\u65f6\u5bf9 $1$ \u7684\u8d21\u732e\u3002\r\n \r\n ![QQ\u622a\u56fe20211008212447.png](https://i.loli.net/2021/10/08/ae1UdlhKC5V2qYm.png)\r\n \r\n -  $s,f$ \u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u4e3a $i$ \u7684\u5b50\u8282\u70b9\u65f6\uff0c\u6240\u6709\u70b9 $j$ \u4ea7\u751f\u7684\u603b\u8d21\u732e\u4e3a\uff1a\r\n  $$2\\times size_i\\times (num-size_i)\\times w_i$$ \r\n  \r\n- \u5176\u4e2d $num$ \u4e3a\u5706\u65b9\u6811\u603b\u8282\u70b9\u6570\u3002\r\n\r\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a $\\text{dfs}$ \u904d\u5386\u6bcf\u4e2a\u70b9\u4f5c\u4e3a\u4e2d\u8f6c\u70b9\u65f6\uff0c\u5b50\u6811\u4e2d\u7684\u8282\u70b9\u65e2\u53ef\u4f5c\u4e3a\u8d77\u70b9\u4e5f\u53ef\u4f5c\u4e3a\u7ec8\u70b9\uff0c\u6240\u4ee5\u5b83\u7684\u8d21\u732e\u8981\u4e58 $2$ \u3002\r\n\r\n\u8fd9\u6837\u505a\u7684\u597d\u5904\u5728\u4e8e\u5728\u7edf\u8ba1\u8d21\u732e\u65f6\u4e0d\u7528\u4e13\u95e8\u533a\u5206\u65b9\u70b9\u548c\u5706\u70b9\uff0c\u53ea\u9700\u901a\u8fc7\u7279\u6b8a\u70b9\u6743 $w$ \u5c31\u53ef\u4ee5\u5b9e\u73b0\u7edf\u8ba1\uff0c\u6bd4\u8f83\u597d\u7406\u89e3\u3002\r\n\r\n\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\r\n\r\nCode\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\n#define ll long long\r\nusing namespace std;\r\n\r\nconst int N=2e5+7,M=2e5+7;//\u5706\u65b9\u6811\u70b9\u6570\u8bb0\u5f97\u5f00\u53cc\u500d\r\n\r\nint w[N];//\u70b9\u6743\r\nint n,m;\r\n\r\ninline void read(int &x)\r\n{\r\n    char ch=getchar();x=0;\r\n    while(ch<'0'||ch>'9') ch=getchar();\r\n    while(ch>='0'&&ch<='9') x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\r\n}\r\n\r\nint fst[N],tot=0;\r\nint fst1[N],tot1=0;\r\nstruct rec{int to,nxt;}e[M<<1];\r\nstruct rec1{int to,nxt;}e1[M<<1];\r\n\r\ninline void add(int u,int v,bool o)\r\n{\r\n    if(!o)\r\n    {\r\n        e[++tot].to=v;\r\n        e[tot].nxt=fst[u];\r\n        fst[u]=tot;\r\n        e[++tot].to=u;\r\n        e[tot].nxt=fst[v];\r\n        fst[v]=tot;\r\n    }\r\n    else\r\n    {\r\n        e1[++tot1].to=v;\r\n        e1[tot1].nxt=fst1[u];\r\n        fst1[u]=tot1;\r\n        e1[++tot1].to=u;\r\n        e1[tot1].nxt=fst1[v];\r\n        fst1[v]=tot1;\r\n    }\r\n}\r\n\r\nint dfn[N],low[N],st[N];\r\nint sub=0,cnt=0,top=0,num=0;\r\nint min(int a,int b){return a<b?a:b;}\r\n\r\nvoid Tarjan(int u)//\u5706\u65b9\u6811\u7ecf\u5178\u64cd\u4f5c\r\n{\r\n    dfn[u]=low[u]=++sub,st[++top]=u;\r\n    num++;\r\n    for(int i=fst[u];i;i=e[i].nxt)\r\n    {\r\n        int v=e[i].to;\r\n        if(!dfn[v])\r\n        {\r\n            Tarjan(v);\r\n            low[u]=min(low[v],low[u]);\r\n            if(low[v]==dfn[u])\r\n            {\r\n                w[++cnt]=1;//\u66f4\u65b0\u65b9\u70b9\u6743\u503c\r\n                while(st[top]!=v)\r\n                {\r\n                    w[cnt]++;\r\n                    add(cnt,st[top],1);\r\n                    top--;\r\n                }\r\n                add(cnt,u,1);\r\n                top--,w[cnt]++,add(v,cnt,1);\r\n            }\r\n        }\r\n        else\r\n            low[u]=min(dfn[v],low[u]);\r\n    }\r\n}\r\n\r\nll ans=0;\r\nint size[N<<1];\r\n\r\nvoid dfs(int x,int fa)\r\n{\r\n    size[x]=(x<=n);//\u65b9\u70b9\u4e0d\u5177\u5b9e\u9645\u5927\u5c0f\r\n    for(int i=fst1[x];i;i=e1[i].nxt)\r\n    {\r\n        int y=e1[i].to;\r\n        if(y==fa) continue;\r\n        dfs(y,x);\r\n        ans+=(ll)2*(ll)size[x]*(ll)size[y]*(ll)w[x];//\u8282\u70b9\u4f5c\u4e3ax\u5b50\u8282\u70b9\u7684\u8d21\u732e\uff0c\u6ce8\u610f\u6b64\u65f6\u7684size[x]\u5728\u672a\u52a0\u4e0asize[y]\u524d\u4e0esize[y]\u76f8\u4e58        size[x]+=size[y]; \r\n    }\r\n    ans+=(ll)2*(ll)size[x]*(ll)(num-size[x])*(ll)w[x];//\u5b50\u6811\u5185\u7684\u8282\u70b9\u4e0e\u5916\u90e8\u8282\u70b9\u4f5c\u4e3as\uff0cf\u7684\u8d21\u732e\r\n}\r\n\r\nint main()\r\n{\r\n    read(n),read(m);\r\n    cnt=n;\r\n    for(int i=1;i<=n;i++) w[i]=-1;\r\n    for(int i=1,x,y;i<=m;i++)\r\n    {\r\n        read(x),read(y);\r\n        add(x,y,0);\r\n    } \r\n    for(int i=1;i<=n;i++)//\u6ce8\u610f\u5904\u7406\u68ee\u6797\r\n        if(!dfn[i])\r\n        {\r\n            num=0;\r\n            Tarjan(i);\r\n            --top;\r\n            dfs(i,0);\r\n        }\r\n    cout<<ans;\r\n    return 0;\r\n}\r\n```\r\n",
        "postTime": 1633700016,
        "uid": 330392,
        "name": "Sure042",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P4630 [APIO2018] Duathlon \u94c1\u4eba\u4e24\u9879"
    },
    {
        "content": "\u5148\u8003\u8651\u90e8\u5206\u5206...\n\n$\\rm Subtask \\ 1 \\ \\& \\ 2$\uff1a\u76f4\u63a5 $\\mathcal{O(n^4)}$ \u66b4\u529b\u505a\u5373\u53ef\u3002\n\n\u671f\u671b\u5f97\u5206 $\\rm 16 \\ pts$\n\n\n$\\rm Subtask \\ 4  \\ \\& \\ 5 $\uff1a\u975e\u73af\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u8003\u8651\u6811\u5f62 dp \u53bb\u505a\u3002\n\n\u8bbe $f_i$ \u4e3a\u4ee5 $i$ \u4e3a\u4e2d\u8f6c\u70b9\u7684\u70b9\u5bf9\u6570\u91cf\uff0c\u7136\u540e\u5f0f\u5b50\u5f88\u663e\u7136...\u76f4\u63a5\u770b\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n\tfor(int i=0;i<g[x].size();++i){\n\t\tint v=g[x][i];\n\t\tif(v==fath) continue;\n\t\tdfs(v,x);\n\t\tans+=1ll*sz[x]*sz[v];\n\t\tsz[x]+=sz[v];\t\n\t}\n\t++sz[x];\n\tans+=1ll*(all-sz[x])*(sz[x]-1);\n```\n\n\u7531\u4e8e\u56fe\u5e76\u4e0d\u4fdd\u8bc1\u8054\u901a\uff0c\u6240\u4ee5\u7528 `all` \u6765\u8868\u793a\u8054\u901a\u5757\u7684\u70b9\u7684\u6570\u91cf\u3002\n\n\u987a\u4fbf\u4e00\u63d0\u7531\u4e8e $s \\rightarrow c \\rightarrow f$ \u548c $f \\rightarrow c \\rightarrow s$ \u7b97\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u6848\uff0c\u6240\u4ee5\u6700\u540e\u7b54\u6848\u8fd8\u8981\u4e58\u4e2a $2$\n\n\u671f\u671b\u5f97\u5206 $\\rm 16+23=39 \\ pts$\n\n$\\rm Subtask \\ 6 \\ \\& \\ 7 $\uff1a\u4ed9\u4eba\u638c\u7684\u60c5\u51b5...\u4ed9\u4eba\u638c+dp \u90a3\u4e0d\u5c31\u662f\u5728\u5706\u65b9\u6811\u4e0a dp \u5417...\n\n\u8ddf\u4e0a\u9762\u4e00\u6837\u8bbe $f_i$ \u4e3a\u4ee5 $i$ \u4e3a\u4e2d\u8f6c\u70b9\u7684\u70b9\u5bf9\u6570\u91cf\uff0c\u5706\u70b9\u7684\u60c5\u51b5\u548c\u539f\u6765\u5dee\u4e0d\u591a\u3002\n\n\u5bf9\u4e8e\u65b9\u70b9\u7684\u60c5\u51b5...\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\u3002\n\n\u8bbe $Bsz$ \u4e3a\u65b9\u70b9\u4ee3\u8868\u7684\u73af\u7684\u5927\u5c0f\u3002\n\n$s$ \u548c $f$ \u90fd\u5728\u65b9\u70b9\u4ee3\u8868\u7684\u73af\u5185\uff1a\u663e\u7136\u4e2d\u8f6c\u70b9\u6709 $Bsz-2$ \u4e2a\n\n$s$ \u548c $f$ \u4e24\u4e2a\u90fd\u4e0d\u5728\u65b9\u70b9\u4ee3\u8868\u7684\u73af\u5185\uff1a\u6709 $Bsz$ \u4e2a\u4e2d\u8f6c\u70b9\u3002\u7136\u800c\u4f1a\u88ab $2$ \u4e2a\u5706\u70b9\u7ed9\u8ba1\u7b97\u8fc7\u4e00\u6b21\uff0c\u53d1\u73b0\u4f1a\u6709\u91cd\u590d\uff0c\u53bb\u91cd\u4e00\u4e0b\u5c31\u6709 $Bsz-2$ \u4e2a\u4e2d\u8f6c\u70b9\u3002\n\n$s$ \u548c $f$ \u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u5728\u65b9\u70b9\u4ee3\u8868\u7684\u73af\u5185\uff1a$Bsz-1$ \u4e2a\u4e2d\u8f6c\u70b9\u3002\u53d1\u73b0\u4f1a\u7b97\u91cd\uff0c\u53bb\u91cd\u4e00\u4e0b $Bsz-2$ \u4e2a\u4e2d\u8f6c\u70b9\u3002\n\n\n\u7efc\u4e0a\u6240\u8ff0\u4e2d\u8f6c\u70b9\u6570\u91cf\u6709 $Bsz-2$ \u4e2a\u3002\u4e8e\u662f\u5728\u7b97\u7684\u65f6\u5019\u4e58\u4e0a\u4e00\u4e2a $Bsz-2$ \u7684\u7cfb\u6570\u5c31\u884c\u3002\n\n\n\u671f\u671b\u5f97\u5206 $\\rm39+35=74 \\ pts$\n\n\n\n\n\n------------\n\n\n\u81f3\u4e8e\u6b63\u89e3...\u76f4\u63a5\u5bf9\u539f\u56fe\u5efa\u5e7f\u4e49\u5706\u65b9\u6811\uff0c\u7136\u540e\u505a\u6cd5\u540c $\\rm Subtask \\ 6 \\ \\& \\ 7$ \u3002\n\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=200000+5;\nstruct edge{\n\tint nxt,to;\n}e[N<<1];\nint head[N],cnt=1;\nvector<int> g[N];\nvoid add(int x,int y){\n\te[++cnt].to=y; e[cnt].nxt=head[x]; head[x]=cnt;\n}\nint n,all,dfn[N],low[N],tot,sz[N],Bsz[N],amt;\nstack<int> S;\nvoid tarjan(int x,int fath){\n\tdfn[x]=low[x]=++tot;\n\tS.push(x);\n\t++all;\n\tfor(int i=head[x];i;i=e[i].nxt)\n\t\tif(e[i].to!=fath){\n\t\t\tint v=e[i].to;\n\t\t\tif(!dfn[v]){\n\t\t\t\ttarjan(v,x);\n\t\t\t\tif(low[v]==dfn[x]){\n\t\t\t\t\t++amt;\n\t\t\t\t\tg[amt].push_back(x);\n\t\t\t\t\tg[x].push_back(amt);\n\t\t\t\t\tBsz[amt]=1;\n\t\t\t\t\twhile(1){\n\t\t\t\t\t\tint now=S.top();S.pop();\n\t\t\t\t\t\tg[now].push_back(amt);\n\t\t\t\t\t\tg[amt].push_back(now);\n\t\t\t\t\t\tBsz[amt]++;\n\t\t\t\t\t\tif(now==v) break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(low[v]>dfn[x]) S.pop(),g[x].push_back(v),g[v].push_back(x);\n\t\t\t\tlow[x]=min(low[x],low[v]);\n\t\t\t}\n\t\t\telse low[x]=min(low[x],dfn[v]);\n\t\t}\n}\nlong long ans;\nvoid dfs(int x,int fath){\n\tfor(int i=0;i<g[x].size();++i){\n\t\tint v=g[x][i];\n\t\tif(v==fath) continue;\n\t\tdfs(v,x);\n\t\tif(x<=n) ans+=1ll*sz[x]*sz[v];\n\t\telse ans+=1ll*(Bsz[x]-2)*sz[x]*sz[v];\n\t\tsz[x]+=sz[v];\t\n\t}\n\tif(x<=n){\n\t\t++sz[x];\n\t\tans+=1ll*(all-sz[x])*(sz[x]-1);\n\t}\n\telse ans+=1ll*(Bsz[x]-2)*(all-sz[x])*sz[x];\n}\nint main(){\n\tint m;\n\tcin>>n>>m;\n\tint U,V;\n\tfor(int i=1;i<=m;++i){\n\t\tcin>>U>>V;\n\t\tadd(U,V);add(V,U);\n\t}\n\tamt=n;\n\tfor(int i=1;i<=n;++i)\n\t\tif(!dfn[i]){\n\t\t\tall=0;\n\t\t\ttarjan(i,0);\n\t\t\tdfs(i,0);\n\t\t}\n\tcout<<ans*2ll;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1594902376,
        "uid": 344016,
        "name": "wurzang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4630 \u3010[APIO2018] Duathlon \u94c1\u4eba\u4e24\u9879\u3011"
    },
    {
        "content": "# \u5706\u65b9\u6811\u7684\u5b9a\u4e49\n\n\u5706\u65b9\u6811\u662f\u7528\u6765\u89e3\u51b3\u4ed9\u4eba\u638c\u56fe\u7684\u95ee\u9898\u7684\uff0c\u90a3\u4ec0\u4e48\u662f\u4ed9\u4eba\u638c\u56fe\u5462\uff1f\n\n\u5373\u4e0d\u5b58\u5728\u8fb9\u540c\u65f6\u5c5e\u4e8e\u591a\u4e2a\u73af\u7684\u65e0\u5411\u8fde\u901a\u56fe\u662f\u4e00\u68f5\u4ed9\u4eba\u638c\u3002\n\n## \u70b9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u5b9a\u4e49\n\u8981\u4ecb\u7ecd\u5706\u65b9\u6811\uff0c\u9996\u5148\u8981\u4ecb\u7ecd\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u3002\n\n\u4e00\u4e2a\u70b9\u53cc\u8fde\u901a\u56fe\u7684\u4e00\u4e2a\u5b9a\u4e49\u662f\uff1a\u56fe\u4e2d\u4efb\u610f\u4e24\u4e0d\u540c\u70b9\u4e4b\u95f4\u90fd\u6709\u81f3\u5c11\u4e24\u6761\u70b9\u4e0d\u91cd\u590d\u7684\u8def\u5f84\u3002\n\n\u4e00\u79cd\u7b80\u5355\u7684\u5b9a\u4e49\uff1a\u4e0d\u5b58\u5728\u5272\u70b9\u7684\u56fe\u3002\n\n\u4f46\u8fd9\u79cd\u5b9a\u4e49\u5bf9\u4e8e\u4e24\u70b9\u4e00\u8fb9\u7684\u56fe\u65f6\u662f\u6ca1\u7528\u7684\uff0c\u5b83\u6ca1\u6709\u5272\u70b9\uff0c\u4f46\u662f\u5e76\u4e0d\u80fd\u627e\u5230\u4e24\u6761\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84\uff0c\u56e0\u4e3a\u53ea\u6709\u4e00\u6761\u8def\u5f84\u3002\uff08\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u90a3\u4e00\u6761\u8def\u5f84\u53ef\u4ee5\u7b97\u4e24\u6b21\uff0c\u4f46\u7684\u786e\u6ca1\u6709\u76f8\u4ea4\uff0c\u56e0\u4e3a\u4e0d\u7ecf\u8fc7\u5176\u4ed6\u70b9\uff09\u3002\n\n\u5728\u70b9\u53cc\u8fde\u901a\u56fe\u5185\uff0c\u4e00\u4e2a\u70b9\u53ef\u80fd\u5c5e\u4e8e\u591a\u4e2a\u70b9\u53cc\uff0c\u4f46\u662f\u4e00\u6761\u8fb9\u5c5e\u4e8e\u6070\u597d\u4e00\u4e2a\u70b9\u53cc\u3002\n\n\u66f4\u591a\u5173\u4e8e\u6709\u5411\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u77e5\u8bc6\uff0c\u8bf7\u770b\u6211\u7684\u535a\u5ba2 $\\to$ [\u5f3a\u8fde\u901a\u5206\u91cf](https://www.cnblogs.com/orzz/p/15104647.html)\n\n\u66f4\u591a\u5173\u4e8e\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u77e5\u8bc6\uff0c\u8bf7\u770b\u6211\u7684\u535a\u5ba2 $\\to$ [\u53cc\u8fde\u901a\u5206\u91cf](https://www.cnblogs.com/orzz/p/15114866.html)\n\n## \u7ee7\u7eed\u4ecb\u7ecd\u5706\u65b9\u6811\n\n\u5173\u4e8e\u5706\u65b9\u6811\u7684\u5efa\u56fe\uff0c\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u5c06\u4e00\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u5185\u7684\u6240\u6709\u8fb9\u5220\u53bb\uff0c\u518d\u5c06\u4e00\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u6bcf\u4e2a\u70b9\u5411\u4e00\u4e2a\u65b0\u5efa\u7684\u70b9\u8fde\u8fb9\uff0c\u8fd9\u4e2a\u65b0\u5efa\u7684\u70b9\u5373\u662f\u65b9\u70b9\u3002\n\n\u6240\u4ee5\u5728\u5706\u65b9\u6811\u4e2d\u6709 $n+c$ \u4e2a\u70b9\uff0c\u5176\u4e2d $n$ \u662f\u539f\u56fe\u70b9\u6570\uff0c$c$ \u662f\u539f\u56fe\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u4e2a\u6570\u3002\n\n\u6bcf\u4e2a\u70b9\u53cc\u90fd\u53ef\u4ee5\u5f62\u6210\u4e00\u4e2a\u83ca\u82b1\u56fe\uff0c\u591a\u4e2a\u83ca\u82b1\u56fe\u901a\u8fc7\u539f\u56fe\u4e2d\u7684\u5272\u70b9\u8fde\u63a5\u5728\u4e00\u8d77\uff08\u56e0\u4e3a\u70b9\u53cc\u7684\u5206\u9694\u70b9\u662f\u5272\u70b9\uff09\u3002\n\n\u663e\u7136\uff0c\u5706\u65b9\u6811\u4e2d\u6bcf\u6761\u8fb9\u8fde\u63a5\u4e00\u4e2a\u5706\u70b9\u548c\u4e00\u4e2a\u65b9\u70b9\u3002\n\n\u5728\u4e0b\u9762\u8fd9\u5f20\u56fe\u4e2d\uff0c$[1,2,3,4,5]$ \u662f\u5706\u70b9\uff0c$[6,7]$ \u662f\u65b9\u70b9\u3002\n\n![](https://img-blog.csdnimg.cn/img_convert/a64ea1977df8894a39bf10c1ae9b80ab.png)\n\n\u800c\u5982\u679c\u5706\u65b9\u6811\u8fde\u901a\uff0c\u5219\u6709\u4ee5\u4e0b\u6027\u8d28\uff1a\n\n* \u65b9\u70b9\u4e4b\u95f4\u4e0d\u4f1a\u5b58\u5728\u8fde\u8fb9\u3002\n\n* \u539f\u56fe\u7684\u5272\u70b9\u5c31\u662f\u5706\u65b9\u6811\u4e2d\u5ea6\u6570\u5927\u4e8e $1$ \u7684\u5706\u70b9\u3002\n\n* \u5706\u65b9\u6570\u662f\u4e00\u68f5\u975e\u5e38\u597d\u7684\u6811\uff0c\u5373\u70b9\u6570\u7b49\u4e8e\u8fb9\u6570\u52a0 $1$\u3002\n  \n* \u5706\u65b9\u6811\u4e0a\u4efb\u610f\u4e00\u6761\u8def\u5f84\u4e0a\u5706\u70b9\u65b9\u70b9\u95f4\u9694\u5206\u5e03\u3002\n\n* \u5982\u679c\u5706\u70b9\u7684 $size$ \u4e3a $1$\uff0c\u90a3\u4e48\u4e00\u4e2a\u5706\u70b9\u5b50\u6811\u7684 $size$ \u548c\u5c31\u662f\u5b83\u4e0b\u9762\u7684\u6240\u6709\u70b9\u7684\u6570\u91cf\u3002\n\n* \u5bf9\u4e8e\u4e00\u4e2a\u70b9\u53cc\u4e2d\u7684\u4e24\u70b9\uff0c\u5b83\u4eec\u4e4b\u95f4\u7b80\u5355\u8def\u5f84\u7684\u5e76\u96c6\uff0c\u6070\u597d\u5b8c\u5168\u7b49\u4e8e\u8fd9\u4e2a\u70b9\u53cc\uff0c\u5373\u540c\u4e00\u4e2a\u70b9\u53cc\u4e2d\u7684\u4e24\u4e0d\u540c\u70b9 $u$\uff0c$v$ \u4e4b\u95f4\u4e00\u5b9a\u5b58\u5728\u4e00\u6761\u7b80\u5355\u8def\u5f84\u7ecf\u8fc7\u7ed9\u5b9a\u7684\u5728\u540c\u4e00\u4e2a\u70b9\u53cc\u5185\u7684\u53e6\u4e00\u70b9 $w$\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8003\u8651\u4e24\u5706\u70b9\u5728\u5706\u65b9\u6811\u4e0a\u7684\u8def\u5f84\uff0c\u4e0e\u8def\u5f84\u4e0a\u7ecf\u8fc7\u7684\u65b9\u70b9\u76f8\u90bb\u7684\u5706\u70b9\u7684\u96c6\u5408\uff0c\u5c31\u7b49\u4e8e\u539f\u56fe\u4e2d\u4e24\u70b9\u7b80\u5355\u8def\u5f84\u4e0a\u7684\u70b9\u96c6\u3002\n\n\u5982\u679c\u539f\u56fe\u4e2d\u67d0\u4e2a\u8fde\u901a\u5206\u91cf\u53ea\u6709\u4e00\u4e2a\u70b9\uff0c\u5219\u9700\u8981\u5177\u4f53\u60c5\u51b5\u5177\u4f53\u5206\u6790\uff0c\u6211\u4eec\u5728\u540e\u7eed\u8ba8\u8bba\u4e2d\u4e0d\u8003\u8651\u5b64\u7acb\u70b9\u3002\n\n\u6ce8\u610f\u4e00\u6761\u8fb9\u8fde\u63a5\u4e24\u4e2a\u70b9\u7684\u5728\u8fd9\u91cc\u4e0d\u7b97\u70b9\u53cc\u3002\n\n## \u5e7f\u4e49\u5706\u65b9\u6811\n\n\u666e\u901a\u5706\u65b9\u6811\u53ea\u80fd\u89e3\u51b3\u4ed9\u4eba\u638c\u56fe\u4e0a\u7684\u95ee\u9898\uff0c\u800c\u5e7f\u4e49\u5706\u65b9\u6811\u5219\u53ef\u4ee5\u5c06\u6240\u6709\u65e0\u5411\u56fe\u8f6c\u5316\u4e3a\u5706\u65b9\u6811\u5904\u7406\u3002\n\n\u5e7f\u4e49\u5706\u65b9\u6811\u6027\u8d28\uff1a\u5706\u70b9\u65b9\u70b9\u76f8\u95f4\uff0c\u4e0d\u5b58\u5728\u4e24\u4e2a\u2018\u2019\u76f8\u540c\u5f62\u72b6\u2018\u2019\u7684\u70b9\u76f8\u8fde\u3002\n\n\u4e0e\u5706\u65b9\u6811\u4e0d\u540c\u7684\u662f\uff0c\u5e7f\u4e49\u5706\u65b9\u6811\u9700\u8981\u628a\u4e00\u6761\u8fb9\u8fde\u63a5\u4e24\u4e2a\u70b9\u4e5f\u770b\u6210\u4e00\u4e2a\u70b9\u53cc\uff0c\u539f\u672c\u4e24\u4e2a\u5706\u70b9\u6709\u4e00\u6761\u8fb9\u76f8\u8fde\uff0c\u73b0\u5728\u5728\u4e2d\u95f4\u63d2\u5165\u4e00\u4e2a\u65b9\u70b9\u95f4\u9694\u5f00\u5c31\u597d\u4e86\u3002\n\n\u53ef\u4ee5\u53c2\u7167\u8fd9\u5f20\u56fe\n\n![](https://img-blog.csdnimg.cn/img_convert/51b720e058f7a5dc7dc77c9eb881274f.png)\n\n\n# \u5706\u65b9\u6811\u7684\u5e94\u7528\n\n[\u6d1b\u8c37 P4630 [APIO2018] Duathlon \u94c1\u4eba\u4e24\u9879](https://www.luogu.com.cn/problem/P4630)\n\n### \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a\u4e00\u5f20\u7b80\u5355\u65e0\u5411\u56fe\uff0c\u95ee\u6709\u591a\u5c11\u5bf9\u4e09\u5143\u7ec4 $\u27e8s,c,f\u27e9$\uff08$s$\uff0c$c$\uff0c$f$ \u4e92\u4e0d\u76f8\u540c\uff09\u4f7f\u5f97\u5b58\u5728\u4e00\u6761\u7b80\u5355\u8def\u5f84\u4ece $s$ \u51fa\u53d1\uff0c\u7ecf\u8fc7 $c$ \u5230\u8fbe $t$\u3002\n### \u89e3\u9898\u601d\u8def\n\u8003\u8651\u600e\u4e48\u8ba1\u7b97\u8fd9\u79cd\u4e09\u5143\u7ec4\uff0c\u53ef\u4ee5\u679a\u4e3e $s$ \u548c $f$\uff0c\u7136\u540e\u8ba1\u7b97\u4ece $s$ \u5230 $f$ \u7684\u70b9\u4e0d\u91cd\u590d\u8def\u5f84\u4e2d\u53ef\u4ee5\u7ecf\u8fc7\u7684\u70b9\u7684\u4e2a\u6570\u3002\n\n$s$ \u5230 $t$ \u70b9\u4e0d\u91cd\u590d\u8def\u5f84\u4e2d\u53ef\u4ee5\u7ecf\u8fc7\u7684\u70b9\u5fc5\u5b9a\u5728\u4e5f\u53ea\u80fd\u5728\u8fd9\u6761\u8def\u5f84\u6240\u7ecf\u8fc7\u7684\u70b9\u53cc\u5185\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u7f29\u70b9\u53cc\u4e4b\u540e\u5efa\u51fa\u5706\u65b9\u6811\uff0c\u7136\u540e\u5c31\u53ea\u9700\u8981\u5728\u6811\u4e0a\u6c42\u51fa\u6bcf\u4e00\u5bf9 $(u,v)$ \u4e4b\u95f4\u7ecf\u8fc7\u7684\u70b9\u53cc\u70b9\u6570\u5927\u5c0f\u3002\n\n\u4f46\u662f\u76f4\u63a5\u5c06\u70b9\u53cc\u5927\u5c0f\u52a0\u8d77\u6765\u7684\u8bdd\u4e24\u4e2a\u70b9\u53cc\u7684\u516c\u5171\u70b9\u4f1a\u7b97\u91cd\uff0c\u4e8e\u662f\u5c06\u516c\u5171\u70b9\u7684\u6743\u503c\uff08\u5706\u70b9\uff09\u8bbe\u4e3a $-1$\uff0c\u65b9\u70b9\u7684\u6743\u503c\u8bbe\u4e3a\u70b9\u53cc\u7684\u5927\u5c0f\u3002\n\n\u539f\u56e0\u662f\u8def\u5f84\u4e2d\u9664\u7aef\u70b9\u5916\u6bcf\u4e2a\u5706\u70b9\uff08\u5373\u5272\u70b9\uff09\u90fd\u4f1a\u88ab\u76f8\u90bb\u7684\u4e24\u70b9\u53cc\u7b97\u4e24\u904d\uff0c\u800c\u4e24\u7aef\u70b9\u867d\u7136\u53ea\u88ab\u7b97\u4e00\u904d\u4f46\u672c\u8eab\u5e76\u4e0d\u80fd\u88ab\u7edf\u8ba1\uff0c\u6545\u6bcf\u4e2a\u70b9\u90fd\u9700\u8981\u51cf\u4e00\u3002\n\n\u90a3\u4e48\u95ee\u9898\u53c8\u8fdb\u4e00\u6b65\u8f6c\u5316\u6210\u4e86\u6c42\u6811\u4e0a\u6240\u6709\u8def\u5f84\u7684\u6743\u503c\u548c\uff0c\u663e\u7136\u53ea\u8981\u5206\u522b\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\u5373\u53ef\uff0c\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684 `DP`\u3002\n\n\u4e8e\u662f\u8fd9\u9898\u4fbf\u8f6c\u5316\u6210\u4e86\u6c42\u6811\u4e0a\u6240\u6709\u7684\u5706\u70b9\u5bf9\u4e4b\u95f4\u7684\u8def\u5f84\u6743\u503c\u548c\u3002\n\n\u76f4\u63a5\u505a\u662f $n^2$\uff0c\n\n\u53ef\u4ee5\u6362\u4e2a\u89d2\u5ea6\u8003\u8651\uff0c\u6539\u4e3a\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u5373\u6743\u503c\u4e58\u4ee5\u7ecf\u8fc7\u5b83\u7684\u8def\u5f84\u6761\u6570\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u6811\u5f62 DP \u6c42\u51fa\u3002\n\n### AC CODE\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int _ = 100005;\n\nint n, m, cnt;\nvector<int> G[_], T[_ * 2];\nlong long Ans;\n\nint dfn[_], low[_], cnt_node, num;\n\nstack<int> s;\n\nint wjy[_ * 2];\n\nint vis[_ * 2], siz[_ * 2];\n\nvoid Tarjan(int u)\n{\n  low[u] = dfn[u] = ++cnt_node;\n  s.push(u);\n  ++num;\n  for (auto v : G[u])\n  {\n    if (!dfn[v])\n    {\n      Tarjan(v);\n      low[u] = min(low[u], low[v]);\n      if (low[v] == dfn[u])\n      {\n        wjy[++cnt] = 0;\n        while (1)\n        {\n          int x = s.top();\n          s.pop();\n          T[cnt].push_back(x);\n          T[x].push_back(cnt);\n          ++wjy[cnt];\n          if (x == v)\n            break;\n        }\n        T[cnt].push_back(u);\n        T[u].push_back(cnt);\n        ++wjy[cnt];\n      }\n    }\n    else\n      low[u] = min(low[u], dfn[v]);\n  }\n}\n\nvoid dfs(int u, int fz)\n{\n  vis[u] = 1;\n  siz[u] = (u <= n);\n  for (auto v : T[u])\n    if (v != fz)\n    {\n      dfs(v, u);\n      Ans += 2ll * wjy[u] * siz[u] * siz[v];\n      siz[u] += siz[v];\n    }\n  Ans += 2ll * wjy[u] * siz[u] * (num - siz[u]);\n}\n\nint main()\n{\n  scanf(\"%d%d\", &n, &m);\n  cnt = n;\n  for (int i = 1; i <= n; ++i)\n    wjy[i] = -1;\n  for (int i = 1; i <= m; ++i)\n  {\n    int u, v;\n    scanf(\"%d%d\", &u, &v);\n    G[u].push_back(v);\n    G[v].push_back(u);\n  }\n  for (int i = 1; i <= n; ++i)\n    if (!dfn[i])\n    {\n      num = 0;\n      Tarjan(i);\n      dfs(i, 0);\n    }\n  printf(\"%lld\\n\", Ans);\n  return 0;\n}\n```",
        "postTime": 1628930188,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "P4630 [APIO2018] Duathlon \u94c1\u4eba\u4e24\u9879"
    },
    {
        "content": "# [\u300cAPIO2018\u300d\u94c1\u4eba\u4e24\u9879-\u5706\u65b9\u6811](https://loj.ac/problem/2587)\n\n## Description\n\n\u7ed9\u5b9a\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u8be2\u95ee\u5b58\u5728\u591a\u5c11\u4e09\u5143\u7ec4$(s,c,f)$\uff08$s,c,f$\u5404\u4e0d\u76f8\u540c\uff09\u6ee1\u8db3\u5b58\u5728\u4e00\u6761\u4ece$s$\u5230$c$\uff0c$c$\u5230$f$\u7684\u7b80\u5355\u8def\u5f84\u3002\n\n$n \\leq 10^5, m \\leq 10^5$\n\n## Solution\n\n\u8003\u8651\u5efa\u7acb\u5706\u65b9\u6811\u3002\n\n\u56fa\u5b9a$s,f$\uff0c\u6ee1\u8db3\u6761\u4ef6\u7684$c$\u4e00\u5b9a\u5b58\u5728$s$\u5230$f$\u8def\u5f84\u4e0a\u65b9\u70b9\u6240\u4ee3\u8868\u7684\u70b9\u53cc\u4e0a\u3002\n\n\u4e0d\u59a8\u8bbe\u5706\u70b9\u6743\u503c\u4e3a$-1$\uff0c\u65b9\u70b9\u6743\u503c\u4e3a\u5176\u6240\u4ee3\u8868\u7684\u70b9\u53cc\u7684\u5927\u5c0f\u3002\u90a3\u4e48\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9$c$\u6570\u91cf\u4e3a\u8def\u5f84\u4e0a\u7684\u6743\u503c\uff08\u8def\u5f84\u4e0a\u7684\u5706\u70b9\u4e3a\u5272\u70b9\uff0c\u5b58\u5728\u4e8e\u591a\u4e2a\u70b9\u53cc\u4e0a\uff0c\u6b63\u597d\u62b5\u6d88\uff09\u3002\n\n\u6240\u4ee5\u7b54\u6848\u4e3a\u7ecf\u8fc7\u67d0\u4e2a\u70b9\u7684\u8def\u5f84\u6761\u6570\u4e58\u5176\u6743\u503c\u7684\u548c\u3002\u6811\u5f62DP\u5373\u53ef\u3002\n\n```cpp\n\n#include <bits/stdc++.h>\nusing namespace std;\n\ninline int gi()\n{\n\tchar c = getchar();\n\twhile(c < '0' || c > '9') c = getchar();\n\tint sum = 0;\n\twhile('0' <= c && c <= '9') sum = sum * 10 + c - 48, c = getchar();\n\treturn sum;\n}\n\ntypedef long long ll;\nconst int maxn = 100005;\n\nint n, m;\n\nstruct edge\n{\n\tint to, next;\n} e[maxn * 4];\nint h[maxn], tot;\n\ninline void add(int u, int v)\n{\n\te[++tot] = (edge) {v, h[u]}; h[u] = tot;\n\te[++tot] = (edge) {u, h[v]}; h[v] = tot;\n}\n\nint dfn[maxn], low[maxn], Time, stk[maxn], top;\n\nvector<int> to[maxn << 1];\nint cnt, vis[maxn << 1], val[maxn << 1];\nll up[maxn << 1], down[maxn << 1], ans;\n\nvoid tarjan(int u, int fa)\n{\n\tdfn[u] = low[u] = ++Time;\n\tstk[++top] = u;\n\tfor (int i = h[u], v; v = e[i].to, i; i = e[i].next)\n\t\tif (!dfn[v]) {\n\t\t\ttarjan(v, u);\n\t\t\tlow[u] = min(low[u], low[v]);\n\t\t\t\n\t\t\tif (dfn[u] == low[v]) {\n\t\t\t\t++cnt;\n\t\t\t\twhile (stk[top + 1] != v)\n\t\t\t\t\tto[stk[top]].push_back(cnt), to[cnt].push_back(stk[top]), --top, ++val[cnt];\n\t\t\t\tto[u].push_back(cnt), to[cnt].push_back(u); ++val[cnt];\n\t\t\t}\n\t\t} else low[u] = min(low[u], dfn[v]);\n}\n\nvoid dfs1(int u, int fa)\n{\n\tvis[u] = 1;\n\tif (u <= n) down[u] = 1;\n\tfor (int v : to[u])\n\t\tif (v != fa) {\n\t\t\tdfs1(v, u);\n\t\t\tdown[u] = down[u] + down[v];\n\t\t}\n}\n\nvoid dfs2(int u, int fa)\n{\n\tvis[u] = 2;\n\tll Ans = 0;\n\tif (u <= n) ans += val[u] * up[u], Ans = up[u], ++up[u]; \n\tll sum = up[u];\n\tfor (int v : to[u])\n\t\tif (v != fa) {\n\t\t\tup[v] = up[u] + down[u] - down[v] - (u <= n);\n\t\t\tans += sum * down[v] * val[u]; Ans += sum * down[v]; sum += down[v];\n\t\t\tdfs2(v, u);\n\t\t}\n\t//printf(\"%d %lld\\n\", u, Ans);\n}\n\nint main()\n{\n\tn = gi(); m = gi();\n\tfor (int i = 1; i <= m; ++i) add(gi(), gi());\n\n\tcnt = n;\n\tfor (int i = 1; i <= n; ++i)\n\t\tif (!dfn[i]) tarjan(i, 0), --top;\n\n\tfill(val + 1, val + n + 1, -1);\n\tfor (int i = 1; i <= n; ++i) if (!vis[i]) dfs1(i, 0);\n\tfor (int i = 1; i <= n; ++i) if (vis[i] == 1) dfs2(i, 0);\n\n\tprintf(\"%lld\\n\", ans * 2); \n\t\n\treturn 0;\n}\n```",
        "postTime": 1556098108,
        "uid": 119899,
        "name": "dsidsi",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4630 \u3010[APIO2018] Duathlon \u94c1\u4eba\u4e24\u9879\u3011"
    },
    {
        "content": "[\u5e7f\u544a](http://zhylj.cc/index.php/archives/48/)\n\n## \u9898\u76ee\n\n\u7ed9\u5b9a\u4e00\u5f20 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u56fe\uff0c\u6c42\u6709\u591a\u5c11\u4e2a\u6709\u5e8f\u70b9\u5bf9 $(a,b,c)$\uff0c\u4f7f\u5f97\u5b58\u5728\u4e00\u6761 $a\\to b\\to c$ \u4e14\u4e0d\u7ecf\u8fc7\u91cd\u590d\u70b9\u7684\u8def\u5f84\u3002\n\n$1\\le n\\le 10^5$\uff0c$1\\le m\\le 2\\times 10^5$.\n\n## \u5206\u6790\n\n\u8fd9\u662f\u9053\u4e0d\u597d\u597d\u5206\u6790\u4f1a\u5206\u7c7b\u6b7b\u7684\u9898\u76ee\u3002\n\n\u8003\u8651\u5efa\u51fa\u5706\u65b9\u6811\uff0c\u5219\u539f\u9898\u6761\u4ef6\u7b49\u4ef7\u4e8e\uff1a\u6c42\u6709\u591a\u5c11\u4e2a\u6709\u5e8f\u70b9\u5bf9 $(a,b,c)$\uff0c\u4f7f\u5f97\u5b58\u5728\u4e00\u6761 $a\\to b\\to c$\uff0c\u4e14**\u4e0d\u91cd\u590d\u7ecf\u8fc7\u5706\u70b9\uff0c\u4f46\u53ef\u4ee5\u91cd\u590d\u7ecf\u8fc7\u65b9\u70b9**\u7684\u8def\u5f84\u3002\n\n\u4e8e\u662f\u4e0d\u96be\u60f3\u8c61\uff0c\u6211\u4eec\u679a\u4e3e\u4e2d\u8f6c\u70b9 $b$\uff0c\u6211\u4eec\u53ef\u4ee5\u628a $b$ \u76f8\u8fde\u7684\u6240\u6709\u70b9\uff08\u663e\u7136\u90fd\u662f\u65b9\u70b9\uff09\u4e0e\u5176\u5408\u5e76\uff0c\u7136\u540e\u4ee5 $b$ \u4e3a\u4e2d\u8f6c\u70b9\u7684\u65b9\u6848\u6570\u5373\u4e3a\u5728\u4efb\u610f\u4e24\u4e2a\u4e0d\u540c\u7684\u5b50\u6811\u4e2d\u53d6\u4e24\u4e2a\u70b9 $a,c$ \u7684\u65b9\u6848\u6570\u3002\n\n\u7136\u540e\u53ef\u4ee5\u8003\u8651\u5bb9\u65a5\uff0c\u5148\u6c42\u51fa\u4e0d\u8003\u8651\u5728\u4e0d\u540c\u5b50\u6811\u5185\u7684\u65b9\u6848\uff0c\u518d\u6c42\u51fa\u5728\u540c\u4e00\u5b50\u6811\u5185\u7684\u65b9\u6848\uff0c\u7136\u540e\u7528\u524d\u8005\u51cf\u53bb\u540e\u8005\u3002\n\n$$\n\\sum_i\\sum_{j\\neq i}s_is_j = \\left(\\sum_i s_i\\right)^2 - \\sum_is_i^2\n$$\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\uff0c\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u6839\u65f6\uff0c\u6240\u6709\u5b50\u6811\u5927\u5c0f\u7684\u5e73\u65b9\u548c\uff08\u663e\u7136\uff0c\u6240\u6709\u5b50\u6811\u5927\u5c0f\u7684\u548c\u4e3a\u5f53\u524d\u8fde\u901a\u5757\u5927\u5c0f $-1$\uff09\u3002\n\n\u8fd9\u53ef\u4ee5\u7528\u7b80\u5355\u7684\u6362\u6839\u6c42\u51fa\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n + m)$\uff0c\u7136\u540e\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n\n### \u4ee3\u7801\n\n```cpp\nconst int N = 5e5 + 5;\n\nint n, m, b_cnt; ll ans;\n\nint dfv, top, dfn[N], low[N], st[N], rt[N], siz[N];\nstd::vector <int> E[2][N];\nvoid Add(int u, int v, int p) {\n\tE[p][u].push_back(v);\n\tE[p][v].push_back(u);\n}\nvoid Tarjan(int u, int r) {\n\trt[u] = r;\n\tdfn[u] = low[u] = ++dfv;\n\tst[++top] = u;\n\tfor(auto v : E[0][u]) {\n\t\tif(!dfn[v]) {\n\t\t\tTarjan(v, r);\n\t\t\tlow[u] = std::min(low[u], low[v]);\n\t\t\tif(low[v] == dfn[u]) {\n\t\t\t\trt[++b_cnt] = r;\n\t\t\t\tfor(int x = 0; x != v; --top) {\n\t\t\t\t\tAdd(b_cnt, x = st[top], 1);\n\t\t\t\t\t++siz[b_cnt];\n\t\t\t\t}\n\t\t\t\tAdd(b_cnt, u, 1);\n\t\t\t\t++siz[b_cnt];\n\t\t\t}\n\t\t} else low[u] = std::min(low[u], dfn[v]);\n\t}\n}\n\nint t_siz[N]; ll t_sq_s[N];\nvoid Dfs(int u, int p) {\n\tif(u <= n) t_siz[u] = 1;\n\tfor(auto v : E[1][u])\n\t\tif(v != p) {\n\t\t\tDfs(v, u);\n\t\t\tt_siz[u] += t_siz[v];\n\t\t\tt_sq_s[u] += 1LL * t_siz[v] * t_siz[v];\n\t\t}\n}\nvoid Dfs2(int u, int p) {\n\tfor(auto v : E[1][u])\n\t\tif(v != p) Dfs2(v, u);\n\tif(u <= n) {\n\t\tll sq_s = 0;\n\t\tfor(auto v : E[1][u])\n\t\t\tsq_s += t_sq_s[v];\n\t\tsq_s -= 1LL * t_siz[u] * t_siz[u];\n\t\tll s_fa = t_siz[rt[u]] - t_siz[p];\n\t\tsq_s += s_fa * s_fa;\n\t\tans += 1LL * (t_siz[rt[u]] - 1) * (t_siz[rt[u]] - 1) - sq_s;\n\t}\n}\n\nint main() {\n\trd(n, m); b_cnt = n;\n\tfor(int i = 1; i <= m; ++i) {\n\t\tint u, v; rd(u, v);\n\t\tAdd(u, v, 0);\n\t}\n\tfor(int i = 1; i <= n; ++i)\n\t\tif(!dfn[i]) {\n\t\t\tTarjan(i, i);\n\t\t\ttop = 0;\n\t\t}\n\tfor(int i = 1; i <= n; ++i)\n\t\tif(rt[i] == i) Dfs(i, 0), Dfs2(i, 0);\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1616407664,
        "uid": 34238,
        "name": "zhylj",
        "ccfLevel": 9,
        "title": "\u300cAPIO 2018\u300d\u94c1\u4eba\u4e24\u9879"
    }
]