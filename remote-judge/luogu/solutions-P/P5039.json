[
    {
        "content": "## \u9898\u610f\n\u7ed9\u51fa\u4e00\u5f20\u56fe\uff0c\u95ee\u6267\u884c\u591a\u5c11\u6b21\n- \u9009\u4e2d\u4e00\u6761\u8fb9\n- \u628a\u5176\u4ed6\u6240\u6709\u8fb9\u51cf\u4e00\n\n\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4f7f\u7b2c$\\texttt{Lab}$\u6761\u8fb9\u5fc5\u7136\u51fa\u73b0\u5728\u8fd9\u5f20\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\u4e0a\n## \u9898\u89e3\n\u770b\u5230\u9898\u7684\u7b2c\u4e00\u79d2\uff1a\u548c[[\u6e05\u534e\u96c6\u8bad2012]\u6700\u5c0f\u751f\u6210\u6811](https://www.luogu.com.cn/problem/P5934) \u597d\u50cf\u554a\n\n\u9996\u5148\uff0c\u6839\u636e~~\u76f8\u5bf9\u8fd0\u52a8~~\u7684\u539f\u7406\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5c06\u5176\u5b83\u8fb9\u5168\u90e8\u51cf\u5c0f\uff0c\u5c31\u76f8\u5f53\u4e8e\u5c06\u6b64\u8fb9\u589e\u5927\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u628a\u6574\u68f5\u6811\u7684\u64cd\u4f5c\uff0c\u6539\u5230\u4e86\u4e00\u6761\u8fb9\u4e0a\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u8003\u8651\u8fd9\u4e48\u4e00\u5f20\u56fe\uff1a\n\n![image](https://cdn.luogu.com.cn/upload/image_hosting/wc93ycek.png)\n\n\u9009\u53d6$\\color{red}{\\texttt{Lab}}$\u7684\u6761\u4ef6\u662f\u4ec0\u4e48\uff1f\u663e\u7136\uff0c\n- \u5982\u679c\u73af\u4e0a\u6709\u5168\u90e8\u6bd4$\\texttt{Lab}$\u77ed\uff0c\u90a3\u4e48\u80af\u5b9a\u662f\u9009\u90a3\u4e9b\u66f4\u77ed\u7684\u8fb9\n- \u5982\u679c\u73af\u4e0a\u6709\u548c$\\texttt{Lab}$\u4e00\u6837\u957f\uff0c\u90a3\u4e48\u4e8c\u8005\u80af\u5b9a\u662f\u4e8c\u9009\u4e00\n- \u5982\u679c\u73af\u4e0a\u6709\u4e00\u6761\u6bd4$\\texttt{Lab}$\u957f\u7684\u8fb9\uff0c\u90a3\u4e48\u80af\u5b9a\u662f\u9009$\\texttt{Lab}$\u8fb9\n\n\u6211\u4eec\u770b\u4e00\u4e0b\u9898\u9762\uff1a\n> \u4f7f\u5f97\u6807\u53f7\u4e3a $Lab$ \u8fb9\u4e00\u5b9a\u51fa\u73b0\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u3002\n\n\u56e0\u6b64\uff0c\u4e0d\u80fd\u6709\u4e00\u6761\u4ece$u_{Lab}$\u5230$v_{Lab}$\u7684\u8def\u5f84\uff0c\u4f7f\u8fb9\u6743\u5168\u90e8$\\leq d_{Lab}$\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709$\\leq d_{Lab}$\u7684\u8fb9\u7ec4\u6210\u4e00\u5f20\u56fe\uff0c\u5272\u53bb$i$\u7684\u4ee3\u4ef7\u4e3a$d_{Lab}-d_i+1$\uff0c\u8dd1\u4e00\u904d\u6700\u5c0f\u5272\u5373\u4e3a\u6b63\u89e3\n```cpp\n#pragma optimize(2)\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>\ninline void read(T &x){\n\tx=0;char c=getchar();bool f=false;\n\tfor(;!isdigit(c);c=getchar())f!=c=='-';\n\tfor(;isdigit(c);c=getchar())x=x*10+c-'0';\n\tif(f)x=-x;\n}\ntemplate<typename T ,typename ...Arg>\ninline void read(T &x,Arg &...args){\n\tread(x);read(args...);\n}\ntemplate<typename T>\ninline void write(T x){\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>=10)write(x/10);\n\tputchar(x%10+'0');\n}\nconst int maxn=4010,maxe=100010*2;\nstruct Graph{\n\tstruct node{\n\t\tint v,w,nxt;\n\t}e[maxe<<1];\n\tint head[maxn],cur[maxn],tot;\n\tint dis[maxn];\n\tint s,t;\n\tvoid init(int _s,int _t){s=_s,t=_t;tot=1;memset(head,0,sizeof head);}\n\tGraph(int _s=0,int _t=0){init(_s,_t);}\n\tvoid add(int u,int v,int w){\n\t\t//printf(\"%d %d %d\\n\",u,v,w);\n\t\te[++tot]=(node){v,w,head[u]},head[u]=tot;\n\t\te[++tot]=(node){u,w,head[v]},head[v]=tot;\n\t}\n\t#define v e[i].v\n\tinline bool bfs(){\n\t\tqueue<int>q;\n\t\tmemset(dis,0,sizeof dis);\n\t\tmemcpy(cur,head,sizeof head);\n\t\tdis[s]=1;q.push(s);\n\t\twhile(q.size()){\n\t\t\tint u=q.front();q.pop();\n\t\t\tfor(int i=head[u];i;i=e[i].nxt)\n\t\t\t\tif(!dis[v]&&e[i].w){\n\t\t\t\t\tdis[v]=dis[u]+1,q.push(v);\n\t\t\t\t\tif(v==t)return true;\n\t\t\t\t}\n\t\t}\n\t\treturn  false;\n\t}\n\tint dfs(int u,int flow){\n\t\tif(u==t)return flow;\n\t\tint rest=flow;\n\t\tfor(int i=cur[u];i&&rest;i=e[i].nxt){\n\t\t\tif(dis[v]==dis[u]+1&&e[i].w){\n\t\t\t\tint tmp=dfs(v,min(rest,e[i].w));\n\t\t\t\trest-=tmp,e[i].w-=tmp,e[i^1].w+=tmp;\n\t\t\t}\n\t\t\tcur[u]=i;\n\t\t}\n\t\tif(rest==0)dis[u]=-1;\n\t\treturn flow-rest;\n\t}\n\t#undef v\n\tint dinic(){\n\t\tint ans=0;\n\t\twhile(bfs())\n\t\t\twhile(int sth=dfs(s,2e9))\n\t\t\t\tans+=sth;\n\t\treturn ans;\n\t}\n}G;\nint n,m,Lab;\nint x[1000],y[1000],d[1000];\nsigned main(){\n\tread(n,m,Lab);\n\tfor(int i=1;i<=m;i++)\n\t\tread(x[i],y[i],d[i]);\n\tG.init(x[Lab],y[Lab]);\n\tfor(int i=1;i<=m;i++)\n\t\tif(i!=Lab&&d[i]<=d[Lab])\n\t\t\tG.add(x[i],y[i],d[Lab]-d[i]+1);\n\twrite(G.dinic());\n}\n```",
        "postTime": 1594799722,
        "uid": 174304,
        "name": "jun\u5934\u5409\u5409",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5039 \u3010[SHOI2010]\u6700\u5c0f\u751f\u6210\u6811\u3011"
    },
    {
        "content": " \n## **\u89e3\u6790**\n\n~~\u770b\u4e0a\u53bb\u662f\u9ed1\u9898\u554a\uff01~~\n\n\u5b9e\u9645\u4e0a\u4e5f\u5c31\u662f\u9053\u7f51\u7edc\u6d41\u6700\u5927\u6d41\u3002~~\uff08\u672c\u849f\u84bb\u90fd\u4f1a\u505a\uff09~~\n\n\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u77e5\u9053\u7f51\u7edc\u6d41\u6700\u5173\u952e\u7684\u662f\u5efa\u56fe\u3002\n\n\u9996\u5148\uff0c\u5206\u6790\u4e00\u4e0b\u9898\u76ee\uff1a\n\n\u9898\u76ee\u8981\u6c42\u5728\u64cd\u4f5c\u540e\u4f7f\u7ed9\u5b9a\u7684\u8fb9lab\u4e00\u5b9a\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e0a\uff0c\n\n\u6c42\u6700\u5c0f\u7684\u64cd\u4f5c\u6570\u3002\n\n\u5148\u8bbelab\u8fde\u901a\u7684\u8fb9\u4e3aA,B\u3002\n\n\u90a3\u4e48\uff0c\u6839\u636eKrustal\u7b97\u6cd5\uff0c\u5728\u52a0\u5165lab\u65f6\u4e00\u5b9a\u6ca1\u6709\u6743\u503c\u6bd4lab\u5c0f\u7684\u8fb9\u4f7fA\uff0cB\u8fde\u901a\u3002\n\n\u6240\u4ee5\uff0c\u53ea\u8981\u5c06\u6743\u503c\u6bd4lab\u5c0f\u7684\u8fb9\u91cd\u65b0\u5efa\u56fe\uff0c\n\n\u5c06\u5bb9\u91cf\u8bbe\u4e3a\u8fd9\u6761\u8fb9\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\u5c31\u884c\u4e86\u3002\n\n\u800c\u6700\u5c0f\u7684\u64cd\u4f5c\u6b21\u6570\u5c31\u5e94\u8be5\u662fwlab \u2212wi +1\u3002\n\n\u6700\u540e\u6c42A\u5230B\u7684\u6700\u5c0f\u5272\uff08\u6700\u5927\u6d41\uff09\u5c31\u884c\u4e86\u3002\n\n \n\n\u4e0aAC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ninline int read(){\n\tint sum=0,f=1;char ch=getchar();\n\twhile(ch>'9' || ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0' && ch<='9'){sum=sum*10+ch-'0';ch=getchar();}\n\treturn f*sum;\n}\n\n\nconst int INF=0x3f3f3f3f;\nstruct road{\n\tint next,to,w;\n}e[100001];\nstruct line{\n\tint x,y,w;\n}a[100001];\nint n,m,lab;\nint s,t;\nint head[10001],cnt=1;\nint d[100001],v[100001];\n\nvoid add(int x,int y,int w){\n\te[++cnt].to=head[x];\n\te[cnt].next=y;\n\te[cnt].w=w;\n\thead[x]=cnt;\n}\n\nbool bfs(){\n\tmemset(d,-1,sizeof(d));\n\tmemset(v,0,sizeof(v));\n\tqueue <int> que;\n\tque.push(s);\n\tv[s]=1;\n\td[s]=1;\n\twhile(!que.empty()){\n\t\tint x=que.front();\n\t\tque.pop();\n\t\tfor(int i=head[x];i;i=e[i].to){\n\t\t\tint k=e[i].next;\n\t\t\tif(v[k]||!e[i].w) continue;\n\t\t\tv[k]=1;\n\t\t\td[k]=d[x]+1;\t\t\t\n\t\t\tque.push(k);\n\t\t}\n\t}\n\tif(d[t]>0) return 1;\n\treturn 0;\n}\n\nint dfs(int x,int low){\n\tif(x==t) return low;\n\tint c=0;\n\tfor(int i=head[x];i;i=e[i].to){\n\t\tint k=e[i].next;\n\t\tif(d[k]!=d[x]+1) continue;\n\t\tif(!e[i].w) continue;\n\t\tif((c=dfs(k,min(low,e[i].w)))){\n\t\t\te[i].w-=c;\n\t\t\te[i^1].w+=c;\n\t\t\treturn c;\n\t\t}\n\t}\n\treturn 0;\n}\n\nvoid DINIC(){\n\tint ans=0,mi;\n\twhile(bfs()){\n\t\twhile((mi=dfs(s,INF))) ans+=mi;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn ;\n}\n\nint main(){\n//\tfreopen(\"mst.in\",\"r\",stdin);\n//\tfreopen(\"mst.out\",\"w\",stdout);\n\tn=read();m=read();lab=read();\n\tfor(int i=1;i<=m;i++){\n\t\ta[i].x=read();a[i].y=read();a[i].w=read();\n\t}\n\ts=a[lab].x;t=a[lab].y;\n\tfor(int i=1;i<=m;i++){\n\t\tif(a[i].w<=a[lab].w&&i!=lab){\n\t\t\tadd(a[i].x,a[i].y,a[lab].w-a[i].w+1);\n\t\t\tadd(a[i].y,a[i].x,0);\n\t\t\tadd(a[i].y,a[i].x,a[lab].w-a[i].w+1);\n\t\t\tadd(a[i].x,a[i].y,0);\t\t\t\n\t\t}\n\t}\n\tDINIC();\n\treturn 0;\n}\n\n```\n\n\n",
        "postTime": 1552124956,
        "uid": 172304,
        "name": "zsq259",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5039 \u3010[SHOI2010]\u6700\u5c0f\u751f\u6210\u6811\u3011"
    },
    {
        "content": "\u9898\u76ee\u8981\u6c42\u4e00\u4e2a\u6570\u5fc5\u987b\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u53d6\u5230\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5yy\u4e00\u4e0b\u600e\u4eec\u6837\u624d\u80fd\u53d6\u4e0d\u5230\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/mymsusof.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/itw8lg0z.png)\n\n\u5c31\u50cf\u4e0a\u9762\u7684\u60c5\u51b5\u4e00\u6837\uff0c\u53ea\u8981\u53e6\u4e00\u6761\u8054\u901aAB\u7684\u8def\u5f84\u4e2d\u6ca1\u6709\u8fb9>lenAB\uff0cAB\u5c31\u6709\u53ef\u80fd\u53d6\u4e0d\u5230\u3002\n\n\u8bc1\u660e\uff1a\u8bbe\u4e00\u70b9C\u6ee1\u8db3AC<=AB,BC<=AB,\u6700\u5c0f\u751f\u6210\u6811\u53ef\u4ee5\u9009\u53d6AC+BC\u4ee3\u66ffAB+XX\u6765\u8054\u901aA\uff0cB\uff0cC\u4e09\u70b9\n\n\u6240\u4ee5\uff0c\u4e3a\u4e86\u8fbe\u6210\u9898\u76ee\u7684\u8981\u6c42\uff0c\u5fc5\u987b\u901a\u8fc7\u64cd\u4f5c\u6765\u7834\u574f\u8fd9\u79cd\u60c5\u51b5\u3002\n\n\u7531\u4e8e\u8981\u6c42\u6700\u5c0f\u4e14\u662f\u8981\u6c42\u7834\u574f\uff0c\u53ef\u4ee5\u60f3\u5230\u5c06\u8fd9\u4e9b\u60c5\u51b5\u653e\u5728\u56fe\u8bba\u4e2d\uff0c\u7528\u6700\u5c0f\u5272\u6765\u6c42\u7b54\u6848\u3002\n\n\u5efa\u56fe\u65b9\u5f0f\uff1a\n\n\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9CD\uff0c\u53ea\u8981\u4ed6\u7684\u6743\u503c<=valAB,\u5728C\uff0cD\u4e24\u70b9\u95f4\u8fde\u63a5\u4e00\u6761\u6d41\u91cf\u4e3avalAB-valCD+1\u7684\u8fb9\u3002\n\n\u6e90\u70b9A\uff0c\u6c47\u70b9B\uff0c\u6c42\u8be5\u56fe\u7684\u6700\u5c0f\u5272\u5373\u53ef\u3002\uff08\u56e0\u4e3a\u6e90\u70b9\u3001\u6c47\u70b9\u4e3aA\uff0cB\uff0c\u6240\u4ee5\u80fd\u591f\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u7684\u8def\u5f84\u4e00\u5b9a\u662f\u4ee5A\uff0cB\u4e3a\u7aef\u70b9\u7684\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define N 510\n#define M 2010\n#define inf 2147483647\nusing namespace std;\nstruct data\n{\n\tint u,v,c;\n}a[M];\nint n,m,k,head[N],to[M<<1],nxt[M<<1],f[M<<1],dep[N],s,t,cur[N],cnt,maxnf;\nqueue<int> q;\nbool bfs()\n{\n\tmemset(dep,-1,sizeof(dep));\n\twhile(!q.empty())\n\t{\n\t\tq.pop();\n\t}\n\tdep[s]=0;\n\tq.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[u];i;i=nxt[i])\n\t\t{\n\t\t\tint v=to[i];\n\t\t\tif(f[i]&&(dep[v]==-1))\n\t\t\t{\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn (dep[t]!=-1);\n}\nint dfs(int u,int flow)\n{\n\tif(u==t)\n\t{\n\t\treturn flow;\n\t}\n\tint flow1=0,flow2;\n\tfor(int i=cur[u];i;i=nxt[i])\n\t{\n\t\tcur[u]=i;\n\t\tint v=to[i];\n\t\tif((dep[v]==dep[u]+1)&&(f[i]))\n\t\t{\n\t\t\tflow2=dfs(v,min(flow,f[i]));\n\t\t\tflow1+=flow2;\n\t\t\tflow-=flow2;\n\t\t\tf[i]-=flow2;\n\t\t\tf[i^1]+=flow2;\n\t\t\tif(!flow)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif(!flow1)\n\t{\n\t\tdep[u]=-1;\n\t}\n\treturn flow1;\n}\nvoid dinic()\n{\n\tmaxnf=0;\n\twhile(bfs())\n\t{\n\t\tmemcpy(cur,head,sizeof(cur));\n\t\tmaxnf+=dfs(s,inf);\n\t}\n}\nvoid adde(int x,int y,int z)\n{\n\tto[++cnt]=y;\n\tnxt[cnt]=head[x];\n\tf[cnt]=z;\n\thead[x]=cnt;\n\tto[++cnt]=x;\n\tnxt[cnt]=head[y];\n\tf[cnt]=0;\n\thead[y]=cnt;\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&a[i].u,&a[i].v,&a[i].c);\n\t}\n\tcnt=1;\n\ts=a[k].u;\n\tt=a[k].v;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(i!=k&&a[i].c<=a[k].c)\n\t\t{\n\t\t\tadde(a[i].u,a[i].v,a[k].c-a[i].c+1);\n\t\t\tadde(a[i].v,a[i].u,a[k].c-a[i].c+1);\n\t\t}\n\t}\n\tdinic();\n\tprintf(\"%d\\n\",maxnf);\n\treturn 0;\n}\n```",
        "postTime": 1595230210,
        "uid": 103334,
        "name": "Honor\u8a89",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5039 \u3010[SHOI2010]\u6700\u5c0f\u751f\u6210\u6811\u3011"
    },
    {
        "content": "## [SHOI2010]\u6700\u5c0f\u751f\u6210\u6811\n\n\u6ce8\uff1a\u672c\u6587\u5c06\u66f4\u52a0\u6ce8\u91cd\u770b\u4e0d\u51fa\u6765\u7684\u7f51\u7edc\u6d41\u89e3\u6cd5\u7684\u601d\u8003\u8fc7\u7a0b\u7684\u8bb2\u89e3\u3002\u53e6\u5916\uff0c\u4f5c\u8005\u5199\u4e86HLPP\uff0c\u53ef\u4ee5\u7ec3\u4e00\u4e0b\u624b\u3002\n\n### \u9898\u76ee\u5927\u610f\uff1a\n  \u5728\u4e00\u4e2a\u5408\u6cd5\u7684\u8fde\u901a\u56fe\u4e2d\uff0c\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u8fb9\u6743\uff0c\u6211\u4eec\u94a6\u5b9a\u4e00\u6761\u8fb9\u3002\u7136\u540e\u5bf9\u56fe\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c\uff1a\u5c06\u67d0\u4e00\u6761\u8fb9\u7684\u6743\u503c+1\u6216-1\u3002\u8bf7\u95ee\u81f3\u5c11\u591a\u5c11\u6b21\u540e\u53ef\u4ee5\u4f7f\u94a6\u5b9a\u7684\u8fb9\u51fa\u73b0\u5728\u8be5\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u3002\n  \n  \n  Luogu\u4f20\u9001\u95e8\uff1a[[SHOI2010]\u6700\u5c0f\u751f\u6210\u6811](https://www.luogu.org/problemnew/show/P5039 \"[SHOI2010]\u6700\u5c0f\u751f\u6210\u6811\")\n\n### \u89e3\u9898\u601d\u8def\uff1a\n\n   \u8bf4\u5b9e\u8bdd\uff1a\u6211\u4eec\u4e00\u5b9a\u8981\u8df3\u51fa\u9898\u76ee\u7684\u5c40\u9650\u6027\uff0c\u6bd5\u7adf\u7f51\u7edc\u6d41\u662f\u5c5e\u4e8e\u56fe\u7b97\u6cd5\u3002\n  \u6211\u4eec\u8003\u8651\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u94a6\u5b9a\u7684\u8fb9\u4f1a\u4e0d\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e0a\uff0c\u5f88\u7b80\u5355\uff0c\u6709\u66f4\u591a\u6bd4\u5b83\u66f4\u5c0f\u7684\u8fb9\u3002\u5e76\u4e14\uff0c\u80fd\u591f\u66f4\u65b0\u6211\u4eec\u94a6\u5b9a\u8fb9\u7684\u8fb9\u4e00\u5b9a\u4f1a\u548c\u6211\u4eec\u94a6\u5b9a\u7684\u8fb9\u6210\u73af\uff08\u6211\u4eec\u8003\u8651kruscal\u7684\u5b9e\u73b0\u8fc7\u7a0b\uff0c\u5982\u679c\u60f3\u4e0d\u660e\u767d\uff0c\u53ef\u4ee5\u770b\u770b \u4e25\u683c\u6b21\u5c0f\u751f\u6210\u6811 \uff09\u3002\n  \n  \u5728\u8fd9\u9053\u9898\u4e2d\u66f4\u4e3a\u7b80\u5355\uff0c\u7531\u4e0a\u8ff0\u6761\u4ef6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e00\u6761\u6bd4\u6211\u4eec\u94a6\u5b9a\u8fb9target\u5c0f\u7684\u8fb9\u5efa\u7acb\u4e00\u6761\n  `\u6743\u503c = t[ target ].val - t[ i ].val + 1`\n  \u7684\u6d41\u8fb9\u5373\u53ef\u3002\u7136\u540e\u8f6c\u5316\u4e3a\u6700\u5c0f\u5272\u6a21\u578b\u5373\u53ef\u3002\n  \n### \u6a21\u578b\u8f6c\u5316\uff1a\n  \n  \u6211\u5f88\u60f3\u628a\u5b83\u63d0\u51fa\u6765\u8bb2\u3002\n  \n  \u6211\u4eec\u65e2\u7136\u8981\u627e\u5230\u4e00\u6761\u7b26\u5408\u7684\u8fb9\uff0c\u90a3\u4e48\u5c31\u662f\u8981\u8ba9\u6700\u5c0f\u751f\u6210\u6811\u7ecf\u8fc7\u94a6\u5b9a\u8fb9target\uff0c\u7ecf\u8fc7\u7684\u524d\u63d0\u5c31\u662f\u53ef\u4ee5\u5230\u8fbetarget\u8fb9\u4e0a\u4e24\u70b9\u7684\u5176\u4ed6\u8def\u5f84\u90fd\u6ca1\u6709target\u66f4\u4f18\uff0c\u90a3\u4e48\uff0c\u7136\u8fd9\u4e9b\u8fb9\u589e\u5927\u5373\u53ef\u3002\u8fd9\u6837\u4e00\u60f3\uff0c\u611f\u89c9\u5c31\u662f\u8ba9\u8fd9\u4e24\u70b9\u4e4b\u95f4\u7684\u5176\u4ed6\u8def\u5f84\u90fd\u6bd4target\u8fb9\u7684\u8fb9\u6743\u5927\u3002\n  \n  \u6211\u4eec\u5bf9\u8fd9\u4e9b\u539f\u672c\u66f4\u5c0f\u7684\u8fb9\u90fd\u8ba1\u7b97\u4e8etarget\u8fb9\u6743\u7684\u5dee\u503c\uff0c\u7136\u540e\u8dd1\u6700\u5c0f\u5272\u3002\n  \n  **\u53e3\u7cca\u5408\u6cd5\u6027\uff1a**\n  \n  1.\u8fd9\u4e9b\u8fb9\u90fd\u5c0f\u4e8etarget\u7684\u8fb9\u6743\uff0c\u5982\u679c\u66f4\u5927\uff0c\u90a3\u4e48\u5b83\u672c\u8eab\u5c31\u4e0d\u53ef\u4ee5\u80fd\u4f18\u4e8etarget\u8fb9\uff0c\u5c31\u4e0d\u53ef\u80fd\u5728target\u4e4b\u524d\u8fdb\u5165\u6700\u5c0f\u751f\u6210\u6811\n  \n  2.\u75311\u53ef\u77e5\uff0c\u4e0a\u8ff0\u5efa\u51fa\u7684\u6d41\u56fe\u4e2d\u65e0\u8d1f\u8fb9\u6743\uff08\u6d41\u91cf\u4e3a\u8d1f\uff09\uff0c\u6240\u4ee5\u6d41\u7b97\u6cd5\u662f\u53ef\u884c\u7684\u3002\uff08\u6700\u5c0f\u5272 = \u6700\u5927\u6d41 \uff09\n  \n  3.\u5982\u679ctarget\u5c31\u5728\u539f\u672c\u7684\u6700\u5c0f\u751f\u6210\u6811\u4e0a\uff0c\u90a3\u4e48\u6d41\u56fe\u662f\u4e0d\u8fde\u901a\u7684\uff0c\u6240\u4ee5\u51fa\u9898\u4eba\u662f\u5361\u4e0d\u4e86\u7684\u3002\n  \n\n\u6ce8:\u697c\u4e3b\u4f5c\u6b7b\u5199\u4e86HLPP\uff0c\u5b8c\u5168\u53ef\u4ee5\u7528Dinic\u6253\uff0c\u800c\u4e14\u5f53\u524d\u5f27\u4f18\u5316\u540e\u8fd8\u66f4\u5feb\u4e00\u4e9b\uff0c\u8ff7\uff0c\u5f53\u7136\u968f\u673a\u6570\u636eHLPP\u7edd\u5bf9\u6709\u65f6\u95f4\u4e0a\u7684\u4f18\u52bf\u3002\n\n**AC code:**\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst  int  MAXN = 100010 , inf = ( 1 << 30 ) ;\ninline int read()\n{\n    int s = 0,w = 1;\n    char g = getchar();\n    while(g<'0'||g>'9'){if(g=='-')w*=-1;g = getchar();}\n    while(g>='0'&&g<='9'){s = (s<<3)+(s<<1)+g-'0';g = getchar();}\n    return s*w;\n}\nint  tot = 1 , to[ MAXN ] , nex[ MAXN ] , head[ 10005 ] , w[ MAXN ] , N , M , T , s , target ;\nint  d[ 10005 ] , e[ 10005 ] , h[ 10005 ] , numh[ MAXN ] ;\nbool v[ MAXN ] ;\n\nstruct ap{\n    int from , too , val ;\n}t[ MAXN ];\n\nvoid  add( int  x , int  y , int  z ){\n    tot++; to[ tot ] = y , w[ tot ] = z , nex[ tot ] = head[ x ] , head[ x ] = tot;\n    tot++; to[ tot ] = x , w[ tot ] = 0 , nex[ tot ] = head[ y ] , head[ y ] = tot;\n}\nvoid  relabel( int  u ){\n    h[ u ] = inf ;\n    for( register int i = head[ u ] ; i ; i = nex[ i ] ){\n        if( w[ i ] && h[ to[ i ] ] < h[ u ] )\n            h[ u ] = h[ to[ i ] ] + 1 ;\n    }\n\n}\nstruct cmp{\n    inline bool operator () (int a,int b) const{\n        return h[a]<h[b];\n    }\n};//\u91cd\u8f7dd\npriority_queue< int , vector<int> , cmp > q ;\nqueue< int >Bq;\nvoid bfs(){\n    for( register int i = 1 ; i <= N ; i ++ )h[ i ] = 1210 ;\n    h[ T ] = 0 ;\n    while( !Bq.empty() )Bq.pop();\n    Bq.push( T ); v[ T ] = true ;\n    while( !Bq.empty() ){\n        int u = Bq.front();Bq.pop();\n        v[ u ] = false ;\n        for( register int i = head[ u ] ; i ; i = nex[ i ] ){\n            if( w[ i^1 ] && h[ to[ i ] ] > h[ u ] ){\n                h[ to[ i ] ] = h[ u ] + 1 ;\n                if( !v[ to[ i ] ] ){\n                    Bq.push( to[ i ] );\n                    v[ to[ i ] ] = true ;\n                }\n            }\n        }\n    }\n    return;\n}\nvoid push_(int u){\n    for( register int i = head[ u ] ; i ; i = nex[ i ]){\n        if( w[ i ] && h[ to[ i ] ] == h[ u ] - 1 ){ \n            int  k = min( w[ i ] , e[ u ] ) ;\n            w[ i ] -= k , w[ i^1 ] += k ;\n            e[ u ] -= k , e[ to[ i ] ] += k ;\n            if( (!v[ to[ i ] ]) && to[ i ] != T && to[ i ] != s ){\n                q.push( to[ i ] ) ;\n                v[ to[ i ] ] = true ;\n            }\n            if( !e[u] )break;\n        }\n    }\n}\nint HLPP(){//\u4f5c\u6b7b\u4f7f\u7528HLPP \n    bfs();\n    if( h[ s ] == ( 1 << 30 ) )return 0;\n    h[ s ] = N ;\n    for( register int i = 1 ; i <= N ; i++ )\n        if( h[ i ] < 20000 )numh[ h[ i ] ]++ ;\n    for( register int i = head[ s ] ; i ; i = nex[ i ] ){\n        if( w[ i ] ){\n            e[ s ] -= w[ i ] , e[ to[ i ] ] += w[ i ] ;\n            w[ i^1 ] += w[ i ] ,  w[ i ] = 0;\n            if( to[ i ] != T && ( !v[ to[ i ] ]) && to[ i ] != s ){\n                q.push( to[ i ] ) ; v[ to[ i ] ] = true ;\n            }\n        }\n    }\n    while(!q.empty()){\n        int  u = q.top() ;v[ u ] = false ;\n        q.pop() ;push_( u ) ;\n        if( e[ u ] ){\n            numh[ h[ u ] ]-- ;\n            if( numh[ h[ u ] ] == 0 ){\n                for( register int i = 1 ; i <= N ; i++ ){\n                    if( i != s && i != T && h[ i ] > h[ u ] && h[ i ] <= N  )\n                        h[ i ] = N + 1 ;\n                }\n            }\n            relabel( u ) ;\n            numh[ h[ u ] ]++ ;\n            q.push( u ) ;\n            v[ u ] = true ;\n        }\n    }\n    return e[ T ] ;\n} \nvoid  prepare(){\n    //freopen( \"construct.in\" , \"r\" , stdin ) ;\n    //freopen( \"construct.out\" , \"w\" , stdout) ; \n}\nint main(){\n    \n    N = read() ; M = read() ; target = read();\n    for( register int i = 1 ; i <= M ; i++ )t[ i ].from=read(),t[ i ].too=read(),t[i].val=read();\n    s = t[ target ].from ; T = t[ target ].too ;\n    for( register int i = 1 ; i <= M ; i++ ){\n        if( t[ i ].val <= t[target].val && i !=target ){\n            add( t[ i ].from , t[ i ].too , t[ target ].val - t[ i ].val + 1 ) ;\n            add( t[ i ].too , t[ i ].from , t[ target ].val - t[ i ].val + 1 ) ;        \n        }\n    }\n    cout<<HLPP();\n    return 0;\n}\n```\n\n\u975e\u5e38\u611f\u8c22\u60a8\u8010\u5fc3\u8bfb\u5b8c\u4e86\u8fd9\u7bc7\u535a\u5ba2\uff0c\u4f5c\u8005\u6c34\u5e73\u6709\u9650\uff0c\u672c\u6587\u96be\u514d\u6709\u9519\u8bef\u548c\u53d9\u8ff0\u4e0d\u7cbe\u51c6\uff0c\u8fd8\u8bf7\u7ed9\u4e3a\u5927\u4f6c\u6307\u51fa\uff0c\u8c22\u8c22\u3002",
        "postTime": 1562983609,
        "uid": 119937,
        "name": "\u4ffe\u65af\u9ea6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5039 \u3010[SHOI2010]\u6700\u5c0f\u751f\u6210\u6811\u3011"
    },
    {
        "content": "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**\u5206\u6790\u4e0e\u9898\u89e3\uff1a**\u9898\u76ee\u4e2d\u6240\u8bf4\u7684\u64cd\u4f5c\u2014\u2014\u5bf9\u4e8e\u4e00\u6761\u8fb9\uff0c\u6211\u4eec\u5c06\u5176\u4e0d\u53d8\uff0c\u5176\u4ed6\u7684\u8fb9\u51cf\u4e00\u3002\u5728\u505a\u9898\u7684\u65f6\u5019\u4e0d\u592a\u65b9\u4fbf\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5176\u8fdb\u884c\u8f6c\u5316\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u64cd\u4f5c\u8f6c\u6362\u6210\u4e3a\uff1a\u5bf9\u4e8e\u5f53\u524d\u8fb9\uff0c\u6211\u4eec\u5c06\u5176\u52a0\u4e00\uff0c\u5176\u4ed6\u7684\u8fb9\u4e0d\u53d8\u3002\u8fd9\u6837\u6211\u4eec\u505a\u9898\u5c31\u65b9\u4fbf\u591a\u4e86\u3002\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651\u6700\u5c0f\u751f\u6210\u6811\u7684\u6c42\u6cd5\uff1a$kruskal$\uff0c\u8981\u60f3\u8ba9\u6307\u5b9a\u8fb9\u4e00\u5b9a\u51fa\u73b0\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e2d\uff0c\u6211\u4eec\u5c31\u8981\u8ba9\u8fb9\u6743\u5c0f\u4e8e\u7b49\u4e8e\u6307\u5b9a\u8fb9\u7684\u6240\u6709\u8fb9\u90fd\u52a0\u5165\u5230\u56fe\u4e2d\u4e4b\u540e\uff0c\u6307\u5b9a\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u4f9d\u65e7\u4e0d\u8fde\u901a\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u8f6c\u5316\u95ee\u9898\uff0c\u5e76\u5efa\u7acb\u6a21\u578b\u3002\u6211\u4eec\u5c06\u8fb9\u6743\u5c0f\u4e8e\u7b49\u4e8e\u6307\u5b9a\u8fb9\u7684\u8fb9\u8fde\u5230\u56fe\u4e2d\uff0c\u5e76\u4ee5\u6307\u5b9a\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u4e3a$S$\u548c$T$\u6c42\u6700\u5c0f\u5272\u3002\u6211\u4eec\u6240\u8fde\u7684\u8fb9\u6743\u5e76\u4e0d\u662f\u539f\u56fe\u4e2d\u7684\u8fb9\u6743\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u8fd9\u91cc\u8981\u6c42\u7684\u4ee3\u4ef7\u6700\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u6bcf\u4e00\u4e2a\u8fb9\u7684\u8fb9\u6743\u8981\u6539\u4e3a\u4ee3\u4ef7\u3002\u56e0\u4e3a\u6211\u4eec\u5982\u679c\u8981\u4f7f\u5f53\u524d\u8fb9\u4e0d\u51fa\u73b0\u5728\u56fe\u4e2d\uff0c\u6211\u4eec\u5c31\u8981\u8ba9\u4ed6\u7684\u8fb9\u6743\u5728\u4e00\u901a\u64cd\u4f5c\u4e4b\u540e\u5927\u4e8e\u6307\u5b9a\u53d8\u8fb9\uff0c\u6240\u4ee5\u4e00\u4e2a\u8fb9\u7684\u4ee3\u4ef7\u4e3a$d_i-d_{lab}+1$\u3002\n\n```c++\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define N 1000\n#define inf 1000000000\nint n,m,lab,s,t,dis[N],ans,a[N],b[N],c[N];\nint cur[N],head[N],to[N<<5],nxt[N<<5],val[N<<5],idx=1;\nvoid add(int a,int b,int c)\n    {nxt[++idx]=head[a],to[idx]=b,val[idx]=c,head[a]=idx;}\nbool bfs()\n{\n    memset(dis,-1,sizeof dis);\n    queue <int> q;q.push(s),dis[s]=0;\n    while(!q.empty())\n    {\n        int p=q.front();q.pop();\n        if(p==t) return true;\n        for(int i=head[p];i;i=nxt[i])\n            if(val[i]>0&&dis[to[i]]==-1)\n                dis[to[i]]=dis[p]+1,q.push(to[i]);\n    } return false;\n}\nint dfs(int p,int flow)\n{\n    int now,temp=flow;\n    if(p==t) return flow;\n    for(int i=cur[p];i;i=nxt[i])\n        if(val[i]>0&&dis[to[i]]==dis[p]+1)\n        {\n            now=dfs(to[i],min(val[i],temp));\n            if(!now) dis[to[i]]=-1;\n            temp-=now,val[i]-=now,val[i^1]+=now;\n            if(val[i]) cur[p]=i;\n            if(!temp) break;\n        } return flow-temp;\n}\nvoid dinic() {while(bfs()) memcpy(cur,head,sizeof head),ans+=dfs(s,inf);}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&lab);\n    for(int i=1;i<=m;i++) scanf(\"%d%d%d\",&a[i],&b[i],&c[i]); s=a[lab],t=b[lab];\n    for(int i=1;i<=m;i++) if(i!=lab&&c[i]<=c[lab])\n        add(a[i],b[i],-c[i]+c[lab]+1),add(b[i],a[i],-c[i]+c[lab]+1);\n    dinic(),printf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1545618580,
        "uid": 52851,
        "name": "ysy20021208",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5039 \u3010[SHOI2010]\u6700\u5c0f\u751f\u6210\u6811\u3011"
    },
    {
        "content": "\n[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P5039)\n\n\n## \u6b63\u9898\uff1a\n\n### \u9898\u610f\u7b80\u8ff0\uff1a\n\n\u200b\t\u7ed9\u4f60\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u4f60\u53ef\u4ee5\u5c06\u9664\u4e86\u4f60\u6307\u5b9a\u7684\u4e00\u6761\u8fb9\u5916\u7684\u6240\u6709\u6743\u503c\u51cf\u4e00\uff0c\u6bcf\u6b21\u4ee3\u4ef7\u4e3a\u4e00\u3002\u6c42\u5bf9\u4e8e\u6307\u5b9a\u7684\u4e00\u6761\u8fb9\uff0c\u8981\u82b1\u8d39\u591a\u5c11\u4ee3\u4ef7\u4f7f\u5b83\u4e00\u5b9a\u6210\u4e3a\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u7684\u4e00\u6761\u8fb9\u3002\u56fe\u7684\u70b9\u6570\u5c0f\u4e8e$500$\uff0c\u8fb9\u6570\u5c0f\u4e8e$800$\u3002\n\n### \u505a\u6cd5\uff1a\n\n\u200b\t\u9996\u5148\uff0c\u5c06\u4e00\u4e2a\u8fb9\u4ee5\u5916\u7684\u8fb9\u5168\u90fd\u51cf\u4e00\uff0c\u5c31\u76f8\u5f53\u4e8e\u628a\u5b83\u52a0\u4e00\u3002\n\n\u200b\t\u7b2c\u4e8c\uff0c\u4ece$kruscal$ \u7684\u6027\u8d28\u4e0a\u8003\u8651\uff0c\u5982\u679c\u4e00\u6761\u8fb9\u4e00\u5b9a\u5728\u6700\u5c0f\u751f\u6210\u6811\u91cc\uff0c\u90a3\u4e48\u5b83\u6240\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u4e4b\u95f4\u4e00\u5b9a\u6ca1\u6709\u4e00\u6761\u6240\u5305\u542b\u7684\u6240\u6709\u8fb9\u90fd\u6bd4\u5b83\u5c0f\u7684\u8def\u5f84\u3002\u56e0\u4e3a\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u4e0d\u5b58\u5728\u73af\uff0c\u5982\u679c\u6709\u73af\uff0c\u90a3\u5c31\u8981\u5c06\u73af\u4e0a\u6700\u957f\u7684\u90a3\u6761\u8fb9\u5220\u53bb\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u627e\u5230\u8fd9\u79cd\u8def\u5f84\uff0c\u5c06\u8def\u5f84\u4e0a\u6700\u957f\u7684\u8fb9\u52a0\u5230\u6bd4\u6211\u4eec\u60f3\u8981\u7684\u8fb9\u957f\uff0c\u76f4\u5230\u6574\u4e2a\u56fe\u4e2d\u4e0d\u5b58\u5728\u8fd9\u79cd\u8def\u5f84\u5373\u53ef\u3002\n\n\u200b\t\u8fd9\u6837\uff0c\u6211\u4eec\u89c4\u5b9a\u7684\u8fd9\u6761\u8fb9\u5c31\u6ca1\u6709\u4e00\u79cd\u65b9\u6848\u88ab\u5176\u4ed6\u8fb9\u66ff\u4ee3\u4e86\u3002\n\n### \u5b9e\u73b0\uff1a\n\n\u200b\t\u5efa\u7acb\u7f51\u7edc\u6d41\u6a21\u578b\uff0c\u5c06\u56fe\u4e2d\u6240\u6709\u8fb9\u6743\u4e0d\u5927\u4e8e\u6307\u5b9a\u8fb9\u6743\u7684\u8fb9\u62ff\u51fa\u6765\u91cd\u65b0\u5efa\u56fe\uff0c\u8fb9\u6743\u6539\u4e3a\u4e0e\u6307\u5b9a\u8fb9\u6743\u7684\u5dee\u503c\u52a0\u4e00\uff0c\u9898\u76ee\u8981\u6c42\u7684\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u5206\u522b\u4e3a\u6e90\u70b9\u548c\u6c47\u70b9\u3002\u90a3\u4e48\u6211\u4eec\u4e0a\u9762\u6240\u8bf4\u7684\u4e00\u6761\u8def\u5f84\u5c31\u662f\u8fd9\u4e2a\u56fe\u4e2d\u7684\u4e00\u4e2a\u6d41\uff0c\u76ee\u6807\u72b6\u6001\u662f\u8fd9\u4e2a\u56fe\u4e2d\u4e0d\u5b58\u5728\u6d41\uff0c\u8dd1\u4e00\u8fb9\u6700\u5c0f\u5272\u5373\u53ef\u3002\n\n### \u4ee3\u7801\uff1a\n\n```c++\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#ifdef ONLINE_JUDGE\nchar ss[1<<17],*A=ss,*B=ss;\ninline char gc(){if(A==B){B=(A=ss)+fread(ss,1,1<<17,stdin);if(A==B)return EOF;}return*A++;}\ntemplate<class T>inline void read(T&x){\n    static char c;static int y;\n    for(c=gc(),x=0,y=1;c<48||57<c;c=gc())if(c=='-')y=-1;\n    for(;48<=c&&c<=57;c=gc())x=((x+(x<<2))<<1)+(c^'0');\n    x*=y;\n}\n#else\nvoid read(int &x){scanf(\"%d\",&x);}\n#endif\nusing namespace std;\nstruct node{\n\tint next,to,z;\n}w[5001];\nint head[2001],cnt,deep[2001],ans,n,m,z,c,a,b;\nint o[2001],tim,heap,tail,team[2001],cur[2001];\nint f[2001],t[2001],l[2001],q;\ninline void add(int x,int y,int z){\n\tw[cnt].next=head[x];\n\tw[cnt].to=y; w[cnt].z=z;\n\thead[x]=cnt; cnt++;\n}\ninline bool bfs(){\n\tfor (int i=1; i<=n; i++) cur[i]=head[i];\n\theap=tail=1; tim++; deep[a]=1;\n\tteam[tail]=a; o[a]=tim;\n\twhile (heap<=tail){\n\t\tint k=team[heap];\n\t\tfor (int i=head[k]; i!=-1; i=w[i].next){\n\t\t\tif (o[w[i].to]!=tim&&w[i].z){\n\t\t\t\tdeep[w[i].to]=deep[k]+1;\n\t\t\t\to[w[i].to]=tim;\n\t\t\t\tteam[++tail]=w[i].to;\n\t\t\t}\n\t\t}\n\t\theap++;\n\t}\n\treturn (o[b]==tim);\n}\nint dfs(int x,int v){\n\tif (x==b||v==0) return v;\n\tint used=0,minn,z;\n\tfor (int &i=cur[x]; i!=-1; i=w[i].next){\n\t\tif (w[i].z&&deep[w[i].to]==deep[x]+1){\n\t\t\tminn=min(v-used,w[i].z);\n\t\t\tz=dfs(w[i].to,minn);\n\t\t\tif (z){\n\t\t\t\tw[i].z-=z; w[i^1].z+=z;\n\t\t\t\tused+=z;\n\t\t\t}\n\t\t\tif (used==v) break;\n\t\t}\n\t}\n\tif (!used) deep[x]=0;\n\treturn used;\n}\nint main(){\n\tint x,y,z;\n\tread(n),read(m),read(q);\n\tfor (int i=1; i<=m; i++){\n\t\tread(x),read(y),read(z);\n\t\tf[i]=x; t[i]=y; l[i]=z;\n\t}\n\tmemset(head,-1,sizeof(head));\n\ta=f[q]; b=t[q]; c=l[q];\n\tfor (int i=1; i<=m; i++){\n\t\tif (i==q) continue;\n\t\tif (l[i]<=c){\n\t\t\tadd(f[i],t[i],c-l[i]+1);\n//\t\t\tprintf(\"%d %d %d\\n\",f[i],t[i],c-l[i]+1);\n\t\t\tadd(t[i],f[i],0);\n\t\t\tadd(t[i],f[i],c-l[i]+1);\n\t\t\tadd(f[i],t[i],0);\n\t\t}\n\t}\n\twhile (bfs())\n\t\tans+=dfs(a,1e9);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1545556377,
        "uid": 63661,
        "name": "Taduro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5039 \u3010[SHOI2010]\u6700\u5c0f\u751f\u6210\u6811\u3011"
    },
    {
        "content": "\u8003\u8651\u64cd\u4f5c\u7b49\u4ef7\u4e8e\u4e00\u6761\u8fb9\u7684\u6743\u503c\u81ea\u589e $1$\u3002\n\n\u518d\u8003\u8651 Kruskal \u7684\u601d\u60f3\uff0c\u4e00\u6761\u8fb9\u88ab\u52a0\u5165 MST \u610f\u5473\u7740\u5176\u662f\u8fde\u63a5\u4e24\u4e2a\u8fde\u901a\u5757\u7684\u6700\u5c0f\u8fb9\u3002\n\n\u5047\u8bbe\u5176\u4e0d\u662f\u5272\u8fb9\uff1b\u5426\u5219\u7b54\u6848\u4e3a $0$\u3002\u5426\u5219\u82e5\u5176\u5fc5\u9009\uff0c\u90a3\u4e48\u5176\u4e00\u5b9a\u5305\u542b\u5728\u82e5\u5e72\u4e2a\u73af\u4e2d\uff0c\u5e76\u4e14\u4e0d\u662f\u4efb\u4f55\u73af\u4e0a\u7684\u6700\u5927\u8fb9\u3002\u5e76\u4e14\u8fd9\u4e2a\u6761\u4ef6\u662f\u5145\u8981\u7684\uff0c\u53ef\u4ee5\u8003\u5bdf Kruskal \u7684\u8fc7\u7a0b\u5f97\u77e5\u3002\n\n\u5373\u89e3\u51b3\u4ee5\u4e0b\u95ee\u9898\uff1a\n\n> \u6bcf\u6b21\u4e00\u6761\u8fb9\u6743\u503c\u81ea\u589e $1$\uff0c\u4f7f\u5f97\u6ca1\u6709 $u$ \u5230 $v$ \u7684\u4efb\u610f\u4e00\u6761\u8def\u5f84\u4e0a\uff0c\u6240\u6709\u8fb9\u8fb9\u6743 $\\le k$\u3002\n\n\u6211\u4eec\u8bbe\u4e00\u6761\u8fb9\u7684\u4ee3\u4ef7 $t(i)=\\max\\{0,w(i)-k\\}$\uff0c\u90a3\u4e48\u8fd9\u5373\u4e3a\u6700\u5c0f\u5272\u6a21\u677f\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 1005, maxm = 6005;\nconst int inf = 0x3f3f3f3f;\nint s, t;\nnamespace Flow {\n\tint cur[maxn], hd[maxn], tot = 1, d[maxn];\n\tstruct Edg {\n\t\tint y, z, nxt;\n\t} e[maxm];\n\tvoid add(int x, int y, int z) {\n\t\te[++tot] = {y, z, hd[x]}, hd[x] = tot;\n\t\te[++tot] = {x, z, hd[y]}, hd[y] = tot;\n\t}\n\tbool bfs() {\n\t\tmemcpy(cur, hd, sizeof(hd));\n\t\tmemset(d, 0, sizeof(d));\n\t\tqueue<int> q;\n\t\tq.push(s), d[s] = 1;\n\t\twhile (!q.empty()) {\n\t\t\tint x = q.front();\n\t\t\tq.pop();\n\t\t\tfor (int i = hd[x]; i; i = e[i].nxt) {\n\t\t\t\tint y = e[i].y;\n\t\t\t\tif (!e[i].z || d[y]) continue;\n\t\t\t\td[y] = d[x] + 1, q.push(y);\n\t\t\t\tif (y == t) return 1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\tint dinic(int x, int fl) {\n\t\tif (x == t) return fl;\n\t\tint res = fl;\n\t\tfor (int i = cur[x]; i && res; i = e[i].nxt) {\n\t\t\tint y = e[i].y;\n\t\t\tif (!e[i].z || d[y] != d[x] + 1) continue;\n\t\t\tint tp = dinic(y, min(res, e[i].z));\n\t\t\tif (!tp) d[y] = -1;\n\t\t\telse e[i].z -= tp, e[i ^ 1].z += tp, res -= tp;\n\t\t}\n\t\tif (fl == res) d[x] = -1;\n\t\treturn fl - res;\n\t}\n\tint solve() {\n\t\tint ans = 0, tmp;\n\t\twhile (bfs())\n\t\t\twhile (tmp = dinic(s, inf)) ans += tmp;\n\t\treturn ans;\n\t}\n}\nint n, m;\nstruct Edg {\n\tint x, y, z;\n} e[maxm];\nsigned main() {\n\tint tar, k = 0;\n\tscanf(\"%d%d%d\", &n, &m, &tar);\n\tfor (int i = 1; i <= m; ++i) scanf(\"%d%d%d\", &e[i].x, &e[i].y, &e[i].z);\n\tk = e[tar].z, s = e[tar].x, t = e[tar].y;\n\tfor (int i = 1; i <= m; ++i)\n\t\tif (e[i].z <= k && (i ^ tar)) Flow::add(e[i].x, e[i].y, k - e[i].z + 1);\n\tprintf(\"%d\", Flow::solve());\n\treturn 0;\n}\n```",
        "postTime": 1683936024,
        "uid": 62440,
        "name": "MuelsyseU",
        "ccfLevel": 0,
        "title": "P5039 [SHOI2010]\u6700\u5c0f\u751f\u6210\u6811 \u9898\u89e3"
    },
    {
        "content": "\u8651\u4e00\u4e0b $lab$\u200b \u4e00\u5b9a\u5728 MST \u4e2d\u7684\u5145\u8981\u6761\u4ef6\u662f\u4ec0\u4e48\u3002\u6211\u4eec\u8003\u8651 Kruskal \u7684\u8fc7\u7a0b\uff0c\u5982\u679c\u5c06\u8fb9\u6743\u5c0f\u4e8e $w_{lab}$\u200b \u7684\u8fb9\u5168\u90e8\u8fde\u5b8c\u4e4b\u540e\uff0c$a_{lab},b_{lab}$ \u4e0d\u8fde\u901a\uff0c\u90a3\u4e48 $lab$ \u4e00\u5b9a\u88ab\u9009\u3002\u4e0d\u8fc7\u5f53\u8fb9\u6743\u6709\u76f8\u540c\u7684\u65f6\u5019\u7a0d\u5fae\u4f1a\u51fa\u95ee\u9898\uff0c\u4e0d\u96be\u53d1\u73b0\u5c06 $lab$ \u6392\u5728\u6240\u6709\u8fb9\u6743\u76f8\u540c\u7684\u8fb9\u540e\u9762\u662f\u6700\u5f3a\u7684\uff0c\u4e8e\u662f\u5c06\u4e0a\u8ff0\u300c\u5c0f\u4e8e\u300d\u6539\u6210\u300c\u5c0f\u4e8e\u7b49\u4e8e\u300d\u3002\n\n\u53c2\u8003 Kruskal \u7684\u8fc7\u7a0b\u53d1\u73b0 MST \u4ec5\u4e0e\u8fb9\u6743\u4e4b\u95f4\u76f8\u5bf9\u5927\u5c0f\u6709\u5173\uff0c\u6240\u4ee5\u4e00\u6b21\u64cd\u4f5c\u7b49\u4ef7\u4e8e\u5c06\u67d0\u6761\u8fb9\u8fb9\u6743 $+1$\u200b\u200b\u3002\u6211\u4eec\u73b0\u5728\u8981\u505a\u7684\u662f\uff0c\u5220\u6389\u4e00\u4e9b\u8fb9\u6743\u4e0d\u8d85\u8fc7 $lab$\u200b\u200b \u7684\u8fb9\uff0c\u4f7f\u5f97\u6240\u6709\u8fb9\u6743\u4e0d\u8d85\u8fc7 $lab$\u200b\u200b \u7684\u8fb9\u8fde\u6210\u7684\u56fe\u4e2d $a_{lab},b_{lab}$\u200b\u3002\u600e\u4e48\u5220\u5462\uff1f\u4f7f\u7528\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u5220\u9664 $x$ \u4ee3\u4ef7\u662f $w_{lab}-w_x+1$\u3002\n\n\u7136\u540e\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u88f8\u7684\u65e0\u5411\u56fe\u6700\u5c0f\u5272\u9898\u3002\u5173\u4e8e\u65e0\u5411\u56fe\u6700\u5c0f\u5272\u6211\u518d\u63d2\u4e00\u5634\uff1a\u5f53\u5e74\u5eb7\u72fc\u6293\u5154\u5b50\u7684\u65f6\u5019\uff0c\u90a3\u65f6\u5019\u8111\u5b50\u62bd\u4e86\uff0c\u4e0d\u77e5\u9053\u600e\u4e48\u60f3\u7684\u8ba4\u4e3a\u65e0\u5411\u56fe\u6700\u5c0f\u5272\u4e0d\u53ef\u505a\u3002\u7136\u540e\u770b\u4e86\u9898\u89e3\uff0c\u53d1\u73b0\u90fd\u6ca1\u8bb2\u65e0\u5411\u56fe\u6700\u5c0f\u5272\u7684\u4e8b\u60c5\uff0c\u5c31\u50cf\u5f88\u663e\u7136\u4e00\u6837\uff0c\u5f88\u662f\u4e0d\u89e3\u3002\u540e\u6765\u4eca\u5e74\u6691\u5047\u505a\u5230\u67d0\u4e2a CC \u7684\u652f\u914d\u6811\uff0c\u53c8\u4ed4\u7ec6\u60f3\u4e86\u4e00\u4e0b\uff0c\u65e0\u5411\u56fe\u6700\u5c0f\u5272\u539f\u6765\u5c31\u662f\u65e0\u5411\u8fb9\u8fde\u6210\u4e24\u6761\u6709\u5411\u8fb9\u7684\u6700\u5c0f\u5272\uff08\u8ddf\u65e0\u5411\u56fe\u6700\u5927\u6d41\u4e00\u6837\uff0c\u4e5f\u5c31\u662f\u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406\u5bf9\u65e0\u5411\u56fe\u4e5f\u6210\u7acb\uff09\u2026\u2026\u9053\u7406\u5176\u5b9e\u4e0d\u96be\uff08\u4f46\u6ca1\u6709\u6700\u5927\u6d41\u90a3\u4e48\u7b80\u5355\uff08\u7b11\uff09\uff09\uff1a\u5bf9\u4efb\u610f\u4e00\u7ec4\u5272 $(S,T)$\uff0c$S\\to T$ \u7684\u6bcf\u6761\u65e0\u5411\u8fb9\u5206\u88c2\u6210\u7684\u6709\u5411\u8fb9\u663e\u7136\u53ea\u4f1a\u9009\u6070\u597d\u4e00\u6761\u2026\u2026\u5f97\u8bc1\u3002",
        "postTime": 1635563875,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "p5039"
    },
    {
        "content": "\u521d\u770b\u9898\u76ee\uff0c\u53d1\u73b0\u9898\u76ee\u7684\u64cd\u4f5c\u6bd4\u8f83\u590d\u6742\u3002\u4ed4\u7ec6\u60f3\u4e86\u4e00\u60f3\uff0c\u53d1\u73b0\u9898\u76ee\u4e2d\u7684\u64cd\u4f5c\u201c\u628a\u56fe\u4e2d\u9664\u4e86\u8fd9\u6761\u8fb9\u4ee5\u5916\u7684\u8fb9\uff0c\u6bcf\u4e00\u6761\u7684\u6743\u503c\u90fd\u51cf\u5c11 $1$\u201d\u5c31\u7b49\u4ef7\u4e8e\u201c\u628a\u8fd9\u6761\u8fb9\u7684\u6743\u503c\u52a0 $1$\u201d\u3002\u6240\u4ee5\u9898\u76ee\u7684\u64cd\u4f5c\u5c31\u88ab\u6211\u4eec\u5316\u7e41\u4e3a\u7b80\u4e86\u3002\n\n\u7136\u540e\u7ee7\u7eed\u60f3\uff1a\u5982\u4f55\u624d\u80fd\u4f7f $Lab$ \u8fb9\u4e00\u5b9a\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e2d\uff1f\n\n\u753b\u4e2a\u56fe\u770b\u4e00\u4e0b\uff08\u5c31\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/hq9a5oks.png)\n\n\u5047\u8bbe\u73b0\u5728 $Lab$ \u8fb9\u662f $(1,2)$\uff0c\u957f\u5ea6\u4e3a $2$\u3002\n\n\u90a3\u4e48\u65e2\u7136\u6211\u8981\u4fdd\u8bc1 $Lab$ \u8fb9\u662f\u6700\u5c0f\u751f\u6210\u6811\u7684\u4e00\u6761\u8fb9\uff0c\u70b9 $1$\u3001$2$ \u5c31\u4e0d\u80fd\u5728\u4e00\u4e2a\u73af\u91cc\u9762\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u70b9 $1$\u3001$2$ \u4e4b\u95f4\u4e0d\u80fd\u5b58\u5728\u53e6\u4e00\u6761\u53ef\u9009\u7684\u8def\u5f84\u3002\uff08\u6ce8\u610f\u201c\u8fb9\u201d\u4e0e\u201c\u8def\u5f84\u201d\u7684\u533a\u522b\uff09\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u539f\u6765\u7684\u65e0\u5411\u56fe\u4e0a\uff0c$1\\rightarrow2$ \u7684\u5176\u4ed6\u8def\u5f84\u4e2d\uff0c\u6bcf\u6761\u8def\u5f84\u81f3\u5c11\u8981\u5b58\u5728\u4e00\u6761\u8fb9\u7684\u8fb9\u6743\u5927\u4e8e $2$\uff0c\u5426\u5219\u5728\u5efa\u6700\u5c0f\u751f\u6210\u6811\u65f6\u5c31\u6709\u53ef\u80fd\u88ab\u9009\u5230\u3002\n\n\u6bd4\u5982 $1\\rightarrow2$ \u7684\u5176\u4ed6\u8def\u5f84\u6709 $1\\rightarrow3\\rightarrow2$\u3001$1\\rightarrow4\\rightarrow2$ \u2026\u2026\uff0c\u5176\u4e2d\u8def\u5f84 $1\\rightarrow3\\rightarrow2$ \u662f\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\uff0c\u56e0\u4e3a\u8fd9\u6761\u8def\u5f84\u4e0a\u6ca1\u6709\u4e00\u6761\u8fb9\u7684\u8fb9\u6743\u5927\u4e8e $2$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u6709\u53ef\u80fd\u9009\u8fb9\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/deizxltd.png)\n\n\u800c\u4e0d\u662f\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/fpeb26fb.png)\n\n\u603b\u800c\u8a00\u4e4b\uff0c\u8bbe $Lab$ \u8fb9\u662f $(A,B)$\uff0c\u957f\u5ea6\u4e3a $len$\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u4fdd\u8bc1\u5728\u64cd\u4f5c\u4e4b\u540e\u7684\u65e0\u5411\u56fe\u4e0a\uff0c\u4e0d\u5b58\u5728\u4e00\u6761\u8def\u5f84 $A\\rightarrow B$ \u4f7f\u5f97\u8fd9\u6761\u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u7684\u8fb9\u6743\u90fd\u5c0f\u4e8e\u7b49\u4e8e $len$\u3002\n\n\u5982\u4f55\u7ef4\u62a4\uff1f\n\n\u4e00\u79cd\u663e\u7136\u7684\u66b4\u529b\u5c31\u662f\uff1a\u679a\u4e3e $A\\rightarrow B$ \u7684\u6bcf\u4e00\u6761\u8def\u5f84\uff0c\u627e\u5230\u8def\u5f84\u4e0a\u8fb9\u6743\u7684\u6700\u5927\u503c $maxn$\uff0c\u5982\u679c $maxn>len$\uff0c\u5c31\u4e0d\u7ba1\u5b83\uff0c\u5426\u5219\u5c31\u7528 $len-maxn+1$ \u6b21\u64cd\u4f5c\u4f7f\u5f97\u8fd9\u6761\u8fb9\u6743\u6700\u5927\u7684\u8fb9\u7684\u6743\u503c\u52a0\u4e0a $len-maxn+1$\uff0c\u8d85\u8fc7 $len$\u3002\u8fd9\u65f6\u6211\u4eec\u5c31\u80fd\u7528\u6700\u5c0f\u7684\u4ee3\u4ef7\u4fdd\u8bc1\u8fd9\u6761\u8def\u5f84\u4e0d\u53ef\u80fd\u88ab\u9009\u5230\u3002\n\n\u60f3\u5230\u8fd9\u91cc\u5f88\u5bb9\u6613\u60f3\u5230\u6700\u5c0f\u5272\uff1a\u627e\u5230\u8fb9\u6743 $len_0$ \u5c0f\u4e8e\u7b49\u4e8e $len$ \u7684\u6bcf\u6761\u8fb9 $(u,v)$\uff0c\u5e76\u5728\u53e6\u4e00\u4e2a\u56fe\u4e0a\u5efa\u8fb9 $(u,v,len-len_0+1)$\uff0c\u7136\u540e\u518d\u4ece $A$ \u5230 $B$ \u8dd1\u6700\u5c0f\u5272\uff0c\u4e5f\u5c31\u662f\u8bf4\u627e\u5230 $A\\rightarrow B$ \u6bcf\u6761\u8def\u5f84\u4e0a\u64cd\u4f5c\u4ee3\u4ef7\u6700\u5c0f\u7684\u4e00\u6761\u8fb9\u3002\u6700\u540e\u8dd1\u51fa\u6765\u7684\u6700\u5c0f\u5272\u5c31\u662f\u7b54\u6848\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n\n#define N 510\n#define M 810\n#define INF 0x7fffffff\n\nusing namespace std;\n\nstruct edge\n{\n\tint u,v,w;\n}e[M];\n\nint n,m,lab,s,t;\nint cnt=1,head[N],cur[N],to[M<<2],nxt[M<<2],c[M<<2];\nint num[N];\n\nqueue<int>q;\n\nvoid adde(int u,int v,int ci)\n{\n\tto[++cnt]=v;\n\tc[cnt]=ci;\n\tnxt[cnt]=head[u];\n\thead[u]=cnt;\n\t\n\tto[++cnt]=u;\n\tc[cnt]=0;\n\tnxt[cnt]=head[v];\n\thead[v]=cnt;\n}\n\nbool bfs()\n{\n\tmemcpy(cur,head,sizeof(cur));\n\tmemset(num,-1,sizeof(num));\n\tq.push(s);\n\tnum[s]=0;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[u];i;i=nxt[i])\n\t\t{\n\t\t\tint v=to[i];\n\t\t\tif(c[i]&&num[v]==-1)\n\t\t\t{\n\t\t\t\tnum[v]=num[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn num[t]!=-1;\n}\n\nint dfs(int u,int minflow)\n{\n\tif(!minflow||u==t) return minflow;\n\tint preflow=0,nowflow;\n\tfor(int i=cur[u];i;i=nxt[i])\n\t{\n\t\tcur[u]=i;\n\t\tint v=to[i];\n\t\tif(num[v]==num[u]+1&&(nowflow=dfs(v,min(minflow-preflow,c[i]))))\n\t\t{\n\t\t\tpreflow+=nowflow;\n\t\t\tc[i]-=nowflow;\n\t\t\tc[i^1]+=nowflow;\n\t\t\tif(!(minflow-preflow)) break;\n\t\t}\n\t}\n\treturn preflow;\n}\n\nint dinic()\n{\n\tint maxflow=0;\n\twhile(bfs())\n\t\tmaxflow+=dfs(s,INF);\n\treturn maxflow;\n}\n\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&lab);\n\tfor(int i=1;i<=m;i++)\n\t\tscanf(\"%d%d%d\",&e[i].u,&e[i].v,&e[i].w);\n\ts=e[lab].u,t=e[lab].v;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(i!=lab&&e[i].w<=e[lab].w)\n\t\t{\n\t\t\tadde(e[i].u,e[i].v,e[lab].w-e[i].w+1);//\u522b\u95ee\u6211\u4e3a\u4ec0\u4e48\u8981\u5efa\u53cc\u5411\u8fb9\uff0c\u95ee\u5c31\u662f\u8fd9\u662fdinic\uff0c\u5206\u5c42\u56fe\u4e0d\u6015\u6b7b\u5faa\u73af\n\t\t\tadde(e[i].v,e[i].u,e[lab].w-e[i].w+1);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",dinic());\n\treturn 0;\n}\n```",
        "postTime": 1595226674,
        "uid": 118318,
        "name": "ez_lcw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5039 \u3010[SHOI2010]\u6700\u5c0f\u751f\u6210\u6811\u3011"
    },
    {
        "content": "## \u7b2c\u4e00\u6b21\u770b\u89c1\u8fd9\u4e48\u6c34\u7684\u9ed1\u9898\n\u524d\u7f6e\u6280\u80fd\uff1a\u6700\u5c0f\u5272\uff0c\u5efa\u8bae\u5148AC\u8fd9\u4e00\u9053\u9898\u76ee\uff1a[\u7f51\u7edc\u6700\u5927\u6d41](https://www.luogu.com.cn/problem/P3376)\u3002\n\n\u597d\u4e86\uff0c\u4e3a\u4e86\u8ba9\u5927\u5bb6\u4f53\u9a8c\u7531\u84dd\u9898\u77ac\u95f4\u5230\u9ed1\u9898\u7684\u611f\u89c9\uff0c\u6211\u5148\u7ed9\u51fa\u6211\u66fe\u7ecfAC\u7f51\u7edc\u6700\u5927\u6d41\u8fd9\u4e00\u9898\u7684\u4ee3\u7801\uff1a\n```cpp\n//\u6ce8\uff1a\u8fd9\u662f\u7f51\u7edc\u6700\u5927\u6d41\u7684\u4ee3\u7801\uff01\n#include<cstdio>\n#define N 100010\n#define kar k[i].ar\n#define min(a,b) (a<b?a:b)\nusing namespace std;\nint a,b,t,n,m,f[N],ans;\nstruct node{\n\tint next,ar,flow;\n} k[N*20];\nint first[N],dis[N],len,tr[N];\nint x[N],y[N],v[N];\nvoid add(int a,int b,int t)\n{\n\tlen++;\n\tk[len].ar=b;\n\tk[len].next=first[a];\n\tfirst[a]=len;\n\tk[len].flow=t;\n}\nint head,tail,d[N];\nbool bfs()\n{\n\thead=0,tail=1;\n\td[0]=a;\n\tdis[a]=1;\n\twhile(head<tail)\n\t{\n\t\tt=d[head];\n\t\thead++;\n\t\tfor(int i=first[t];i;i=k[i].next)\n\t\t{\n\t\t\tif(dis[kar]==0&&k[i].flow>0)\n\t\t\t{\n\t\t\t\tdis[kar]=dis[t]+1;\n\t\t\t\tif(kar==b) return true;\n\t\t\t\td[tail]=kar;\n\t\t\t\ttail++;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint dfs(int xx,int flow)\n{\n\tif(xx==b) return flow;\n\tint h,s=0;\n\tfor(int i=first[xx];i>1;i=k[i].next)\n\t{\n\t\tif(flow==0) break;\n\t\tif(dis[kar]==dis[xx]+1)\n\t\t{\n\t\t\th=dfs(kar,min(flow,k[i].flow));\n\t\t\ts+=h;\n\t\t\tflow-=h;\n\t\t\tk[i].flow-=h;\n\t\t\tk[i^1].flow+=h;\n\t\t}\n\t}\n\treturn s;\n}\nvoid dinic()\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdis[i]=0;\n\t\tfirst[i]=0;\n\t}\n\tlen=1,ans=0;\n\tfor(int i=1;i<=m;i++)\n\tadd(x[i],y[i],f[i]),add(y[i],x[i],0);\n\twhile(bfs())\n\t{\n\t\tans+=dfs(a,0x7ffffff);\n\t\tfor(int i=1;i<=n;i++) dis[i]=0;\n\t}\n}\nint main()\n{\n\tint aa,bb;\n\tscanf(\"%d%d%d%d\",&n,&m,&aa,&bb);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&a,&b,&t);\n\t\tx[i]=a,y[i]=b,f[i]=t;\n\t}\n\ta=aa;\n\tb=bb;\n\tdinic();\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n---\n### \u5206\u6790\uff1a\n\u8bbe\u76f4\u63a5\u8fde\u63a5A\u3001B\u7684\u8fd9\u4e00\u6761\u8fb9\u4e3aX\u3002\n\n$1$\u3001\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5206\u6790\u9898\u76ee\u5f97\u77e5\uff0c\u82e5\u56fe\u4e2d\u8fde\u63a5P1\u3001P2\u8fd9\u6761\u8fb9\u9664\u5916\u7684\u8fb9\u51cf\u5c111\uff0c\u5176\u5b9e\u5c31\u662f\u5c06\u56fe\u4e2d\u8fde\u63a5P1\u3001P2\u8fd9\u6761\u8fb9\u7684\u6743\u503c\u589e\u52a01\u3002\n\n$2$\u3001\u65e2\u7136\u4e24\u4e2a\u70b9\u8981\u8fde\u63a5\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u60f3\uff1a\u4e24\u70b9\u4e4b\u95f4\u5176\u4ed6\u80fd\u591f\u8054\u901a\u5e76\u4e14\u90a3\u4e9b\u8fb9\u7684\u6743\u503c\u5747\u5c0f\u4e8eX\u7684\u8fd9\u4e00\u6761\u8fb9\u7684\u6743\u503c\uff0c\u90a3\u4e48\u8dd1\u6700\u5c0f\u751f\u6210\u6811\u5c31\u4e0d\u4f1a\u52a0\u4e0a\u8fd9\u4e00\u6761\u8fb9\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u60f3\u529e\u6cd5\u8ba9A\u3001B\u7684\u5176\u4ed6\u8def\u5f84\u4e0a\u7684\u8fb9\u7684\u6743\u503c\u6709\u7684\u52a0\u5927\u4e00\u70b9\uff0c\u8fd9\u6837\u4eceA\u3001B\u7684\u5176\u4ed6\u8def\u5f84\u4e2d\u53ea\u8981\u6709\u4e00\u4e2a\u8fb9\u7684\u6743\u503c\u5927\u4e8e\u7684X\u7684\u8fb9\u6743\uff0c\u90a3\u4e48\u90a3\u4e00\u6761\u8fb9\u5c31\u5e9f\u4e86\u3002\n\n$3$\u3001\u5f53\u7136\uff0c\u6211\u4eec\u4e0d\u80fd\u8003\u8651\u7684\u592a\u5c11\uff0c\u8fd9\u91cc\u8981\u4f7f\u6240\u6709\u7684A\u5230B\u8def\u5f84\u4e2d\u90fd\u4f1a\u56de\u6709\u4e00\u6761\u8fb9\u7684\u8fb9\u6743>=X\u7684\u8fb9\u6743\uff08X\u9664\u5916\uff09\uff0c\u5e9f\u6389\u6240\u6709\u7684\u8fb9\u4e4b\u540e\uff0cX\u5c31\u80fd\u88ab\u9009\u4e0a\u4e86\u3002\u6240\u4ee5\uff0c\u6700\u5c0f\u5272\u8be5\u4e0a\u573a\u4e86\u3002\n\n$4$\u3001\u5173\u4e8e\u5efa\u6a21\u7684\u95ee\u9898\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u7b2c$i$\u6761\u8fb9\u7684\u8fb9\u6743\u662f\u5426\u5c0f\u4e8eX\u7684\u8fb9\u6743\uff0c\u5982\u679c\u5c0f\u4e8e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u5b83\u770b\u505a\u53ef\u80fd\u5371\u5bb3\u5230\u9009X\u8fd9\u4e00\u6761\u8fb9\u7684\u8fb9\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u56fe\u4e0a\u5c31\u8981\u7b97\u4e0a\u8fd9\u4e00\u6761\u8fb9\u3002\u5f53\u7136\uff0c\u5982\u679c\u8fd9\u4e00\u6761\u8fb9\u52a0\u4e0a$k$\u5c31>X\u7684\u8fb9\u6743\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e00\u6761\u8fb9\u4e3a$k$\u7684\u6700\u5c0f\u503c\u3002\n\n$5$\u3001\u6839\u636e\u201c\u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406\u201d\uff0c\u6211\u4eec\u53ea\u7528\u5728\u5efa\u6a21\u540e\u7684\u56fe\u4e0a\u8dd1\u4e00\u6b21\u6700\u5c0f\u5272\u5c31\u53ef\u4ee5\u4e86\u3002\n\n## \u8be5\u4e0a\u4ee3\u7801\u4e86\uff1a\n```cpp\n#include<cstdio>\n#define N 1010\n#define kar k[i].ar\n#define min(a,b) (a<b?a:b)\nusing namespace std;\nint a,b,t,n,m,ans,trl;\nstruct node{\n\tint next,ar,flow;\n} k[N*20];\nint first[N],dis[N],len;\nint x[N],y[N],f[N],l;\n//\u94fe\u5f0f\u524d\u5411\u661f\u63d2\u5165\u64cd\u4f5c\nvoid add(int a,int b,int t)\n{\n\tlen++;\n\tk[len].ar=b;\n\tk[len].next=first[a];\n\tfirst[a]=len;\n\tk[len].flow=t;\n}\nint head,tail,d[N];\n//\u5206\u5c42\nbool bfs()\n{\n\thead=0,tail=1;\n\td[0]=a;\n\tfor(register int i=0;i<=n;i++) dis[i]=0;\n\tdis[a]=1;\n\twhile(head<tail)\n\t{\n\t\tt=d[head];\n\t\thead++;\n\t\tfor(register int i=first[t];i;i=k[i].next)\n\t\t{\n\t\t\tif(dis[kar]==0&&k[i].flow>0)\n\t\t\t{\n\t\t\t\tdis[kar]=dis[t]+1;\n\t\t\t\tif(kar==b) return true;\n\t\t\t\td[tail]=kar;\n\t\t\t\ttail++;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n//\u591a\u8def\u589e\u5e7f\nint dfs(int xx,int flow)\n{\n\tif(xx==b) return flow;\n\tif(flow==0) return 0;\n\tif(dis[xx]>=dis[b]) return 0;\n\tint h,s=0;\n\tfor(register int i=first[xx];i>1;i=k[i].next)\n\t{\n\t\tif(flow==0)\n\t\t{\n\t\t\tdis[xx]=0;\n\t\t\tbreak;\n\t\t}\n\t\tif(dis[kar]==dis[xx]+1&&k[i].flow>0)\n\t\t{\n\t\t\th=dfs(kar,min(flow,k[i].flow));\n\t\t\ts+=h;\n\t\t\tflow-=h;\n\t\t\tk[i].flow-=h;\n\t\t\tk[i^1].flow+=h;\n\t\t\tif(h==0) dis[kar]=0;\n\t\t}\n\t}\n\treturn s;\n}\n//\u8dd1\u6700\u5c0f\u5272\nvoid dinic()\n{\n\twhile(bfs()) ans+=dfs(a,0x7ffffff);\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&l);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&x[i],&y[i],&f[i]);\n\t}\n\ta=x[l],b=y[l];\n\tlen=1;\n\t//\u5efa\u6a21\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(i!=l&&f[i]<=f[l])\n\t\t{\n\t\t\tadd(x[i],y[i],f[l]-f[i]+1);\n\t\t\tadd(y[i],x[i],f[l]-f[i]+1);\n\t\t}\n\t}\n\tdinic();\n\tprintf(\"%d\",ans);\n}\n```\n\u662f\u4e0d\u662f\u8ddf\u7f51\u7edc\u6700\u5927\u6d41\u7684\u4ee3\u7801\u5f88\u50cf\u5440\u3002\u4e00\u70b9\u70b9\u5dee\u522b\u4f7f\u84dd\u9898\u53d8\u6210\u4e86\u9ed1\u9898\u3002\n\n\u5e7f\u544a\uff1a[\u6700\u5c0f\u5272\u6811](https://www.luogu.com.cn/problem/P4897)\u529f\u80fd\u5f3a\u5927\uff0c\u6548\u7387\u9ad8\uff0c\u5efa\u8bae\u5b66\u4e60\uff0c\u5b66\u4e60\u5730\u5740\uff1a[\u4f20\u9001\u95e8](https://www.luogu.com.cn/blog/LHF/solution-p4897)\u3002",
        "postTime": 1578576401,
        "uid": 99506,
        "name": "_LHF_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5039 \u3010[SHOI2010]\u6700\u5c0f\u751f\u6210\u6811\u3011"
    },
    {
        "content": "\u9898\u76ee\u4e2d\u7684\u64cd\u4f5c\u2014\u2014\u5c06\u9664\u8fd9\u6761\u8fb9\u5916\u6240\u6709\u5176\u4ed6\u8fb9\u7684\u6743\u503c\u5168\u90e8+1\u2014\u2014\u5c31\u662f\u5ffd\u60a0\u4eba\u7684\uff0c\u7b49\u4ef7\u4e8e\u5c06\u8fd9\u6761\u8fb9\u7684\u6743\u503c+1\u3002\n\n\u5bf9\u7b54\u6848\u6709\u5f71\u54cd\u7684\u8fb9\u80af\u5b9a\u662f\u6bd4\u6307\u5b9a\u8fb9\u8981\u5c0f\u7684\u8fb9\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u963b\u6b62\u5236\u5b9a\u8fb9\u7684\u4e24\u7aef\u70b9\u63d0\u524d\u8fde\u8d77\u6765\u3002\n\n\u800c\u6700\u5c0f\u4ee3\u4ef7\u5c31\u5e94\u8be5\u662f\u6307\u5b9a\u8fb9\u7684\u4ee3\u4ef7+1-\u8def\u5f84\u4e0a\u6700\u5927\u8fb9\u7684\u503c\u3002\n\n\u7136\u540e\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a\u8def\u5f84\u5206\u914d\u95ee\u9898\u3002\u6240\u4ee5\u6211\u4eec\u6309 \u6307\u5b9a\u8fb9\u7684\u4ee3\u4ef7+1-\u8fb9\u7684\u6743\u503c \u8fde\u8fb9\n\n\u6240\u7684\u7684\u7b54\u6848\u5c31\u662f\u6700\u5c0f\u5272\n\nCode\uff1a\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\nusing namespace std;\n#define maxn 844444\n#define INF 1000000000\ninline int getint()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nint n,m,d;\nint st,ed,en;\nint first[maxn],dis[maxn],q[maxn];\nstruct node\n{\n    int v,c,next;\n}e[maxn];\nint add(int a,int b,int c)\n{\n    en++;\n    e[en].v=b;\n    e[en].c=c;\n    e[en].next=first[a];\n    first[a]=en;\n \n    en++;\n    e[en].v=a;\n    e[en].c=0;\n    e[en].next=first[b];\n    first[b]=en;\n}\nstruct node2\n{\n    int x,y,v,id;\n}a[maxn];\nbool cmp(node2 aa,node2 bb)\n{\n    return aa.v<bb.v;\n}\nbool bfs()\n{\n    memset(dis,-1,sizeof(dis));\n    int head=1;\n    int tail=1;\n    tail++;\n    q[tail]=st;\n    dis[st]=0;\n    while(head<tail)\n    {\n        head++;\n        int u=q[head];\n        for(int i=first[u];i!=-1;i=e[i].next)\n        {\n            if(e[i].c==0) continue;\n            if(dis[e[i].v]!=-1) continue;\n            dis[e[i].v]=dis[u]+1;\n            if(ed==e[i].v) return true;\n            tail++;\n            q[tail]=e[i].v;\n        }\n    }\n    return false;\n}\nint dfs(int x,int mx)\n{\n    int flow=0,f,ret=0;\n    if(x==ed||mx==0) return mx;\n    for(int i=first[x];i!=-1;i=e[i].next)\n    {\n        if(e[i].c==0) continue;\n        if(dis[e[i].v]!=dis[x]+1) continue;\n        f=dfs(e[i].v,min(mx,e[i].c));\n        if(f)\n        {\n            e[i].c-=f;\n            e[i^1].c+=f;\n            flow+=f;\n            mx-=f;\n            if(!mx) break;\n        }\n    }\n    if(flow==0) dis[x]=-1;\n    return flow;\n}\n \nvoid init()\n{\n    en=-1;\n    memset(first,-1,sizeof(first));\n}\nint dinic()\n{\n    int tmp=0,maxflow=0;\n    while(bfs())\n    {\n        while(tmp=dfs(st,INF)) maxflow+=tmp;\n    }\n    return maxflow;\n}\nint main()\n{\n    n=getint();m=getint();d=getint();\n    for(int i=1;i<=m;i++)\n        a[i].x=getint(),a[i].y=getint(),a[i].v=getint(),a[i].id=i;\n    init();\n    sort(a+1,a+m+1,cmp);\n    for(int i=1;i<=m;i++)\n    {\n        if(a[i].id==d)\n        {\n            st=a[i].x;ed=a[i].y;\n            d=i;\n            break;\n        }\n    }\n    for(int i=1;i<=m;i++)\n    {\n        if(i==d) continue;\n        if(a[i].v>a[d].v) break;\n        add(a[i].x,a[i].y,a[d].v+1-a[i].v);\n        add(a[i].y,a[i].x,a[d].v+1-a[i].v);\n    }\n    printf(\"%d\",dinic());\n    return 0;\n}\n```",
        "postTime": 1542459737,
        "uid": 125325,
        "name": "\u72c2\u7287",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5039 \u3010[SHOI2010]\u6700\u5c0f\u751f\u6210\u6811\u3011"
    }
]