[
    {
        "content": "CDQ\u5206\u6cbb\u7684\u9898\u89e3\u597d\u5c11\u554a\uff0c\u660e\u660e\u662f\u4e8c\u7ef4\u504f\u5e8f\uff0c\u4e3a\u5565\u697c\u4e0bCDQ\u786c\u662f\u6c42\u4e86\u4e2a\u4e09\u7ef4\n\n\u7531\u4e8e\u6240\u6709\u57fa\u7ad9\u90fd\u662f\u5728\u4e00\u5f00\u59cb\u7ed9\u51fa\uff0c\u76f8\u5f53\u4e8e\u4fee\u6539\u64cd\u4f5c\u7684\u65f6\u95f4\u6233\u90fd\u5728\u8be2\u95ee\u524d\u9762(\u5373\u6bcf\u4e2a\u57fa\u7ad9\u90fd\u6709\u53ef\u80fd\u5bf9\u8be2\u95ee\u4ea7\u751f\u8d21\u732e)\uff0c\u8fd9\u6837\u5176\u5b9e\u5c31\u53ef\u4ee5\u7701\u7565\u65f6\u95f4\u6233\uff0c\u76f4\u63a5\u505a\u4e8c\u7ef4\u504f\u5e8f\n\n\u5177\u4f53\u6765\u8bf4\u5c31\u662f\uff0cx,y\u5750\u6807\u5206\u522b\u4e3a\u4e00\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\uff0c**\u9047\u5230\u76f8\u540c\u5750\u6807\u4ee4\u8be2\u95ee\u6392\u540e\u9762**\n\n\u8be2\u95ee\u62c6\u6210\u56db\u4e2a\u7684\u8001\u5957\u8def\u5c31\u4e0d\u8bb2\u4e86\uff0c\u4e8c\u7ef4\u504f\u5e8f\u4e0d\u7528\u6811\u72b6\u6570\u7ec4\uff0c\u6240\u4ee5\u4e5f\u4e0d\u7528\u79bb\u6563\u5316\uff0c\u6700\u540e\u6ce8\u610f\u8981\u5f00long long\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<queue>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\ntypedef long long lt;\n \nlt read()\n{\n    lt f=1,x=0;\n    char ss=getchar();\n    while(ss<'0'||ss>'9'){if(ss=='-')f=-1;ss=getchar();}\n    while(ss>='0'&&ss<='9'){x=x*10+ss-'0';ss=getchar();}\n    return f*x;\n}\n\nconst int maxn=1000010;\nint n,m,tot;\nstruct node{lt x,y,p,opt,k,id,ans;}a[maxn],b[maxn];\nlt ans[maxn];\n\nbool cmp(node a,node b)\n{\n    if(a.x!=b.x) return a.x<b.x;\n    else if(a.y!=b.y) return a.y<b.y;\n    else return a.opt<b.opt;\n}\n\nvoid CDQ(int ll,int rr)\n{\n    if(ll==rr) return;\n    int mid=ll+rr>>1;\n    CDQ(ll,mid); CDQ(mid+1,rr);\n \n    int t1=ll,t2=mid+1,p=ll; lt cnt=0;\n    while(t2<=rr)\n    {\n        while(a[t1].y<=a[t2].y&&t1<=mid){\n            if(a[t1].opt==1) cnt+=a[t1].p;\n            b[p++]=a[t1++];\n        }\n        if(a[t2].opt==2) a[t2].ans+=cnt;\n        b[p++]=a[t2++];\n    }\n \n    while(t1<=mid) b[p++]=a[t1++];\n    while(t2<=rr) b[p++]=a[t2++];\n    for(int i=ll;i<=rr;++i) a[i]=b[i];\n}\n\nint main()\n{\n    n=read();m=read();\n    for(int i=1;i<=n;++i)\n    {\n        int x=read(),y=read();lt p=read();\n        a[++tot]=(node){x,y,p,1,0,0,0};\n    }\n\n    for(int i=1;i<=m;++i)\n    {\n        int aa=read(),b=read(),c=read(),d=read();\n        a[++tot]=(node){c,d,0,2,1,i,0};\n        a[++tot]=(node){aa-1,b-1,0,2,1,i,0};\n        a[++tot]=(node){aa-1,d,0,2,-1,i,0};\n        a[++tot]=(node){c,b-1,0,2,-1,i,0};\n    }\n    \n    sort(a+1,a+1+tot,cmp);\n\n    CDQ(1,tot);\n    for(int i=1;i<=tot;++i)\n    if(a[i].opt==2) ans[a[i].id]+=a[i].k*a[i].ans;\n    \n    for(int i=1;i<=m;++i)\n    printf(\"%lld\\n\",ans[i]);\n    return 0;\n}\n```\n",
        "postTime": 1553045175,
        "uid": 60885,
        "name": "niiick",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3755 \u3010[CQOI2017]\u8001C\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\n[\u9898\u76ee\u4f20\u9001\u95e8\uff01](https://www.luogu.com.cn/problem/P3755)\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f](https://www.cnblogs.com/liangbowen/p/16798839.html)\n\n\u4e3a\u5565\u8981\u7528\u5206\u5757\u5440\uff0ccdq \u5206\u6cbb\u597d\u5199\uff0c\u800c\u4e14\u8dd1\u5f97\u6bd4\u5206\u5757\u5feb\uff01\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u4e09\u7ef4\u504f\u5e8f\u6a21\u7248\u3002\n\n## \u601d\u8def\n\n\u8bb0 $s_{i, j}$ \u8868\u793a\uff1a\u5bf9\u89d2\u5750\u6807\u4e3a $(-\\infty, -\\infty)$ \u5230 $(i, j)$ \u7684\u77e9\u5f62\u5185\u7684\u70b9\u6743\u4e4b\u548c\u3002\n\n\u90a3\u4e48\u7c7b\u4f3c\u4e8c\u7ef4\u524d\u7f00\u548c\uff1a\u5bf9\u89d2\u5750\u6807\u4e3a $(x1,y1)$ \u5230 $(x2, y2)$ \u7684\u77e9\u5f62\u5185\u7684\u70b9\u6743\u4e4b\u548c\uff0c\u53ef\u4ee5\u8868\u793a\u6210 $s_{x2,y2} -s_{x1-1,y2} - s_{x2,y1-1} + s_{x1-1,y1-1}$\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u53d1\u73b0\uff0c**\u6bcf\u4e2a\u8be2\u95ee\u53ef\u4ee5\u62c6\u6210\u56db\u4e2a\u70b9**\uff0c\u7528\u8fd9\u56db\u4e2a\u70b9\u7684\u7b54\u6848\u5373\u53ef\u6c42\u51fa\u8be2\u95ee\u3002\u6211\u4eec\u79f0\u8fd9\u4e2a\u62c6\u51fa\u6765\u7684\u70b9\u53eb**\u67e5\u8be2\u70b9**\u3002\n\n\u8003\u8651\u8f6c\u5316\u4e3a\u504f\u5e8f\u95ee\u9898\uff08\u8fd9\u6837\u80fd\u7528 cdq \u6c42\u89e3\uff09\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5c5e\u6027\uff0c\u8bb0\u5f55 $a,b$ \u8868\u793a $s_{i,j}$ \u4e2d\u7684 $i$ \u4e0e $j$\u3002\u4e3a\u4e86\u65b9\u4fbf\uff0c\u518d\u8bb0\u5f55 $c$ \u8868\u793a\uff1a\u5f53\u524d\u5c5e\u6027\u662f\u666e\u901a\u70b9\u8fd8\u662f\u67e5\u8be2\u70b9\u3002\n\n\u90a3\u4e48\uff0c\u82e5\u5c5e\u6027 $X$ \u53ef\u4ee5\u8ba1\u7b97 $Y$ \u7684\u8d21\u732e\u5165\u5185\uff0c\u9700\u8981\u6ee1\u8db3\uff1a\n\n$\\begin{cases}Y_a \\le X_a\\\\Y_b \\le X_b\\\\Y_c < X_c\\end{cases}$\n\n\u524d\u9762\u4e24\u4e2a\u9650\u5236\u8868\u793a**\u4e0b\u6807\u8981\u5305\u542b\u5728\u77e9\u5f62\u5185**\u624d\u884c\u3002\u7b2c\u4e09\u4e2a\u9650\u5236\u8868\u793a $X$ \u662f\u67e5\u8be2\u70b9 \u4e14 $Y$ \u662f\u666e\u901a\u70b9\u3002\n\n\u7136\u540e\u5c31\u662f\u4e00\u4e2a\u4e09\u7ef4\u504f\u5e8f\u677f\u5b50\u4e86\uff0c\u7528\u677f\u5b50\u7684 $O(n \\log^2 n)$ \u6c42\u89e3\u4e5f\u80fd\u901a\u8fc7\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u505a\u5230 $O(n \\log n)$\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c$c$ \u663e\u7136\u53ea\u80fd\u662f $0$ \u6216 $1$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4e0d\u5fc5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u4e86\uff0c\u4f7f\u7528\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u5373\u53ef\u3002\n\n\u5177\u4f53\u53c2\u8003\u4ee3\u7801\u3002\n\n## \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\ntypedef long long LL;\nconst int N = 5e5 + 5;\nstruct Data {\n\tint a, b, c, k; //c: 1\u4ee3\u8868\u70b9\uff0c0\u4ee3\u8868\u67e5\u8be2\u7684\u70b9 \n\tLL sum;\n\tint id;\n} x[N], t[N];\nbool operator == (Data p, Data q) {return p.a == q.a && p.b == q.b && p.c == q.c;}\nbool cmp(Data p, Data q)\n{\n\tif (p.a != q.a) return p.a < q.a;\n\tif (p.b != q.b) return p.b < q.b;\n\treturn p.c < q.c;\n}\nvoid MergeSort(int l, int r) //\u4e09\u7ef4\u504f\u5e8f\u677f\u5b50\n{\n\tif (l >= r) return;\n\tint mid = (l + r) >> 1;\n\tMergeSort(l, mid), MergeSort(mid + 1, r);\n\tint i = l, j = mid + 1, cur = 0;\n\tLL sum = 0; //\u7531\u4e8ec\u53ea\u67090/1\uff0c\u6240\u4ee5\u7528\u53d8\u91cf\u5373\u53ef\uff0c\u7701\u7565\u6811\u72b6\u6570\u7ec4\n\twhile (i <= mid && j <= r)\n\t\tif (x[i].b <= x[j].b) sum += !x[i].c * x[i].k, t[++cur] = x[i], i++;\n\t\telse x[j].sum += sum, t[++cur] = x[j], j++;\n\twhile (i <= mid) sum += x[i].c * x[i].k, t[++cur] = x[i], i++;\n\twhile (j <= r) x[j].sum += sum, t[++cur] = x[j], j++;\n\tfor (i = l, j = 1; j <= cur; i++, j++) x[i] = t[j];\n}\nLL ans[N];\nint main()\n{\n\tint n, m;\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; i++) //\u8f93\u5165\u90e8\u5206\u5c31\u662f\u6309\u7167\u4e0a\u6587\u7684\u5efa\u6a21\u6765\u7684\n\t{\n\t\tscanf(\"%d%d%d\", &x[i].a, &x[i].b, &x[i].k);\n\t\tx[i].c = x[i].sum = 0;\n\t\tx[i].id = i;\n\t}\n\tint cur = n;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint x1, y1, x2, y2;\n\t\tscanf(\"%d%d%d%d\", &x1, &y1, &x2, &y2);\n\t\tx[++cur] = (Data){x2, y2, 1, 1}, x[cur].id = i; //\u62c6\u6210\u56db\u4e2a\u70b9\n\t\tx[++cur] = (Data){x1 - 1, y2, 1, -1}, x[cur].id = i;\n\t\tx[++cur] = (Data){x2, y1 - 1, 1, -1}, x[cur].id = i;\n\t\tx[++cur] = (Data){x1 - 1, y1 - 1, 1, 1}, x[cur].id = i;\n\t}\n\tsort(x + 1, x + cur + 1, cmp); //\u7531\u4e8ec\u80af\u5b9a\u4e0d\u540c\uff0c\u6240\u4ee5\u4e0d\u7528\u53bb\u91cd \n\tMergeSort(1, cur);\n\tfor (int i = 1; i <= cur; i++)\n\t\tif (x[i].c)\n\t\t\tans[x[i].id] += x[i].sum * x[i].k;\n\tfor (int i = 1; i <= m; i++) printf(\"%lld\\n\", ans[i]);\n\treturn 0;\n}\n```\n\n\u5e0c\u671b\u80fd\u5e2e\u52a9\u5230\u5927\u5bb6\uff01",
        "postTime": 1665983671,
        "uid": 367488,
        "name": "liangbowen",
        "ccfLevel": 0,
        "title": "P3810 \u9898\u89e3"
    },
    {
        "content": "# \u7ed9\u5927\u5bb6\u63d0\u4f9b\u4e00\u4e2a\u5206\u5757\u7684\u505a\u6cd5\n\n\u4f17\u6240\u5468\u77e5 \uff0c\u5206\u5757\u7b97\u6cd5\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u6548\u7684~~\u66b4\u529b~~\u7b97\u6cd5\uff0c\u5b66\u4f1a\u5206\u5757\u80fd\u5728\u8003\u8bd5\u60f3\u4e0d\u51fa\u6b63\u89e3\u65f6\u62ff\u5230\u8f83\u591a\u7684\u5206\uff0c\u751a\u81f3AC\n\n\u5173\u4e8eCDQ\u5206\u6cbb\u548c\u79bb\u7ebf\u626b\u63cf\u7ebf\u7b49\u7b49\u7b97\u6cd5\u5176\u4ed6\u9898\u89e3\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u5566\uff0c\u6240\u4ee5\u6211\u6765\u8bb2\u8bb2\u5206\u5757\u600e\u4e48\u5728\u8fd9\u9053\u9898\u4e2d\u8fd0\u7528\uff0c\u7406\u89e3\u96be\u5ea6\u6781\u4f4e\uff0c\u4e00\u5b9a\u80fd\u770b\u61c2\n### \u9884\u5904\u7406\n\u5148\u5c06\u6240\u6709\u70b9\u7684x\u5750\u6807\u79bb\u6563\u5316\u540e\u5206\u5757\uff08\u5373\u628ax\u5750\u6807\u6392\u5e8f\u540e\u4ee5sqrt(n)\u4e3a\u5927\u5c0f\u5206\u7ec4\uff09\uff0c\u628a\u6bcf\u4e2a\u70b9\u653e\u5728\u6240\u5728\u5757\u5185\uff0c\u518d\u5c06\u6bcf\u4e2a\u5757\u5185\u7684\u70b9\u6309\u7167y\u5750\u6807\u6392\u5e8f\uff0c\u5904\u7406\u6bcf\u5757\u7684pi\u524d\u7f00\u548c\n\n### \u67e5\u8be2\n\u5bf9\u4e8e\u8be2\u95ee\u77e9\u5f62\u5f62\uff0c\u5148\u7edf\u8ba1\u6b63\u65b9\u5f62\u4e2d\u90e8\u7684\u7b54\u6848\uff08\u5373\u4e0b\u56fe\u9ed1\u8272\u7bad\u5934\u90e8\u5206\uff09\uff0c\u518d\u7edf\u8ba1\u6b63\u65b9\u5f62\u5de6\u53f3\u7aef\u70b9\u6240\u5728\u5757\u5185\u7684\u7b54\u6848\uff08\u7c89\u8272\uff09\n![\u5206\u5757](https://cdn.luogu.com.cn/upload/image_hosting/al9g51m1.png)\n\n**\u4e2d\u90e8\u7b54\u6848\u7edf\u8ba1** \u679a\u4e3e\u6bcf\u4e2a\u5757\u5728\u6392\u597d\u5e8f\u7684y\u5750\u6807\u6570\u7ec4\u4e2d\u4e8c\u5206\u627e\u5230\u4e0a\u754c\u548c\u4e0b\u754c\uff0c\u5229\u7528\u524d\u7f00\u548c\u7edf\u8ba1\u7b54\u6848\uff08\u590d\u6742\u5ea6log\uff09\n\n**\u4e24\u7aef\u7b54\u6848\u7edf\u8ba1** \u679a\u4e3e\u5757\u5185\u6bcf\u4e2a\u70b9\uff0c\u5224\u65ad\u662f\u5426\u5728\u77e9\u5f62\u5185\u90e8\uff0c\u5982\u679c\u5728\u5219\u7edf\u8ba1\u7b54\u6848\n\n### \u590d\u6742\u5ea6\n\u9884\u5904\u7406 O(nlogn)\uff0c\u4e00\u6b21\u67e5\u8be2 O(sqrt(n)logn)\n\n## \u6ce8\u610f\n1. i/(\u5757\u7684\u5927\u5c0f) \u53ef\u80fd\u4e3a0 \uff0c\u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\u63a8\u8350+1\n2. \u5728\u67e5\u8be2\u65f6\u5e94\u5224\u65ad\u5de6\u53f3\u4e24\u65ad\u70b9\u662f\u5426\u4f4d\u4e8e\u540c\u4e00\u5757\u5185\u5426\u5219\u53ea\u670910\u5206\n\n**\u4ee3\u7801\u5982\u4e0b**\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cmath>\n#include <algorithm>\n#define N 100005\n#define int long long\n#define ONLINE_JUDGE\n\nusing namespace std;\n\nstruct Node{\n\tint x,y,z;\n\tNode(int x,int y,int z){\n\t\tthis->x = x;\n\t\tthis->y = y;\n\t\tthis->z = z;\n\t}\n\tNode(){};\n}a[1000][1000];\n\nint dx[N],xi[N],yi[N],zi[N];\nint num[1000],s[1000][1000],b[1000][1000];\n\ninline bool operator < (const Node &a,const Node &b){\n\treturn a.y < b.y;\n}\n\nsigned main() {\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"T2.in\",\"r\",stdin);\n\tfreopen(\"T2.out\",\"w\",stdout);\n\t#endif\n\tint n,m;\n\tscanf(\"%lld%lld\",&n,&m);\n\tint rt = sqrt(n); //\u5757\u5927\u5c0f\n\tint mx = n/rt + 1; //\u5757\u4e2a\u6570\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%lld%lld%lld\",&xi[i],&yi[i],&zi[i]);\n\t\tdx[i] = xi[i];\n\t}\n    \t//\u5bf9x\u79bb\u6563\u5316\n\tsort(dx+1,dx+n+1);\n\tint tx = unique(dx+1,dx+n+1) - dx - 1;\n\tfor(int i=1;i<=n;i++){\n\t\tint px = lower_bound(dx+1,dx+tx+1,xi[i]) - dx;\n\t\ta[px/rt+1][++num[px/rt+1]] = Node(xi[i],yi[i],zi[i]);\n\t}\n\tfor(int i=1;i<=mx;i++){\n\t\tsort(a[i]+1,a[i]+num[i]+1);\n\t\tfor(int j=1;j<=num[i];j++){\n\t\t\ts[i][j] = s[i][j-1] + a[i][j].z; //y\u524d\u7f00\u548c\n\t\t\tb[i][j] = a[i][j].y; //y\u5750\u6807\u67e5\u8be2\u6570\u7ec4\n\t\t}\n\t}\n\tint x,y,x2,y2;\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%lld%lld%lld%lld\",&x,&y,&x2,&y2);\n\t\tint px1 = lower_bound(dx+1,dx+tx+1,x) - dx;\n\t\tint px2 = upper_bound(dx+1,dx+tx+1,x2) - dx;\n\t\tint ans = 0;\n        \t//\u67e5\u8be2\u4e2d\u90e8\n\t\tfor(int j=px1/rt+1+1;j<=px2/rt+1-1;j++){\n\t\t\tint py1 = lower_bound(b[j]+1,b[j]+num[j]+1,y) - b[j];\n\t\t\tint py2 = upper_bound(b[j]+1,b[j]+num[j]+1,y2) - b[j] - 1;\n\t\t\tans += s[j][py2] - s[j][py1-1];\n\t\t}\n        \t//\u67e5\u8be2\u4e24\u7aef\n\t\tfor(int j=1;j<=num[px1/rt+1];j++){\n\t\t\tif(a[px1/rt+1][j].x>=x&&a[px1/rt+1][j].y>=y&&a[px1/rt+1][j].x<=x2&&a[px1/rt+1][j].y<=y2){\n\t\t\t\tans += a[px1/rt+1][j].z;\n\t\t\t}\n\t\t}\n\t\tif(px1/rt!=px2/rt){\n\t\t\tfor(int j=1;j<=num[px2/rt+1];j++){\n\t\t\t\tif(a[px2/rt+1][j].x>=x&&a[px2/rt+1][j].y>=y&&a[px2/rt+1][j].x<=x2&&a[px2/rt+1][j].y<=y2){\n\t\t\t\t\tans += a[px2/rt+1][j].z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1572500946,
        "uid": 112527,
        "name": "\u6700\u540e\u4e00\u9897\u661f\u8fb0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3755 \u3010[CQOI2017]\u8001C\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u5982\u679c\u8be2\u95ee $x_1, y_1, x_2, y_2$\uff0c\n\n\u90a3\u4e48\u8be2\u95ee\n\n$(x_2, y_2)$,\n\n$(x_2, y_1 - 1)$,\n\n$(x_1 - 1, y_2)$\n\n$(x_1 - 1, y_1 - 1$),\n\n\u8fd9\u4e9b\u70b9\u5230\u539f\u70b9\uff08\u4e0d\u4e00\u5b9a\u662f $(0, 0)$\uff0c\u6709\u53ef\u80fd\u6709\u8d1f\u6570\uff09\u7684\u548c\u3002\n\n\u8bbe\u5176\u7ed3\u679c\u5206\u522b\u4e3a $a, b, c, d$\uff0c\u90a3\u4e48\u6700\u540e\u7ed3\u679c\u4e3a $a - b - c + d$\uff08\u4e8c\u7ef4\u524d\u7f00\u548c\u539f\u7406\uff09\u3002\n\n\u95ee\u9898\u6210\u529f\u8f6c\u5316\u3002\n\n---\n\n\u8bbe\u7ed3\u6784\u4f53\n\n```\nstruct Node {\n\tint x, y;\t\t// \u4f4d\u7f6e\n\tint z;\t\t\t// \u503c\n};\n```\n\n\u4e3a\u57fa\u672c\u4fe1\u606f\u3002\n\n\u6211\u4eec\u5728\u6b64\u57fa\u7840\u4e0a\u52a0\u4e00\u4e2a $type$ \u548c $res$\uff0c\n\n\u5982\u679c $type$ \u4e3a $1$ \u5c31\u8868\u793a\u8981\u8be2\u95ee $(x, y)$ \u7684\u4e8c\u7ef4\u524d\u7f00\u548c\uff0c\u7ed3\u679c\u4fdd\u5b58\u5728 $res$ \u4e2d\u3002\n\n\u5982\u679c $type$ \u4e3a $0$ \u8868\u793a $(x, y)$ \u4e3a\u4e00\u4e2a\u57fa\u7ad9\uff0c\u5176\u529f\u7387\u4e3a $z$\u3002\n\n---\n\n\u5bf9\u4e8e $type_i$ \u4e3a $1$ \u7684\u90e8\u5206\uff0c\n\n\u4f7f\u7528 CDQ \u5206\u6cbb\u7edf\u8ba1\uff1a\n\n$type_j < type_i$ (\u5373 $type_j$ \u4e3a $0$)\n\n$x_j \\leq x_i$\n\n$y_j \\leq y_i$\n\n\u7684\u5404\u4e2a\u4f4d\u7f6e\u7684\u548c\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5f00`long long`\u3002\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <unordered_map> \n\n#define int long long \n\nusing namespace std;\n\nconst int N = 500010;\n\nstruct Node {\n\tint x, y, z;\n\tint type;\n\tint res;\n}a[N], tmp[N];\n\nbool cmp(const Node a, const Node b) {\n\tif (a.x != b.x) return a.x < b.x;\n\tif (a.y != b.y) return a.y < b.y;\n\treturn a.type < b.type;\n}\n\nint n, m;\n\nvoid cdq(int l, int r) {\n\tif (l == r) return;\n\tint mid = (l + r) / 2;\n\tcdq(l, mid);\n\tcdq(mid + 1, r);\n\t\n\tint sum = 0;\n\t\n\tint p = l, q = mid + 1, tot = l;\n\twhile (p <= mid && q <= r) {\n\t\tif (a[p].y <= a[q].y) {\n\t\t\tif (!a[p].type) sum += a[p].z;\n\t\t\ttmp[tot++] = a[p++];\n\t\t}\n\t\telse {\n\t\t\tif (a[q].type) a[q].res += sum;\n\t\t\ttmp[tot++] = a[q++];\n\t\t}\n\t}\n\twhile (p <= mid) {\n\t\tif (!a[p].type) sum += a[p].z;\n\t\ttmp[tot++] = a[p++];\n\t}\n\twhile (q <= r) {\n\t\tif (a[q].type) a[q].res += sum;\n\t\ttmp[tot++] = a[q++];\n\t}\n\tfor (int i = l; i <= r; i++) a[i] = tmp[i];\n}\n\nstruct Query {\n\tint x1, y1;\n\tint x2, y2;\n}query[N];\n\nunordered_map<int, unordered_map<int, int> > res_a;\n\nsigned main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\t\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a[i].x >> a[i].y >> a[i].z;\n\t\ta[i].type = 0;\n\t\ta[i].res = 0;\n\t}\n\tint tot = n;\n\tfor (int i = 1; i <= m; i++) {\n\t\tcin >> query[i].x1 >> query[i].y1 >> query[i].x2 >> query[i].y2;\n\t\ta[++tot] = {query[i].x1 - 1, query[i].y1 - 1, 0, 1, 0};\n\t\ta[++tot] = {query[i].x2, query[i].y2, 0, 1, 0};\n\t\ta[++tot] = {query[i].x2, query[i].y1 - 1, 0, 1, 0};\n\t\ta[++tot] = {query[i].x1 - 1, query[i].y2, 0, 1, 0};\n\t}\n\tsort(a + 1, a + tot + 1, cmp);\n\tcdq(1, tot);\n\tfor (int i = 1; i <= tot; i++) {\n\t\tif (a[i].type) {\n\t\t\tres_a[a[i].x][a[i].y] = a[i].res;\n\t\t}\n\t}\n\tfor (int i = 1; i <= m; i++) {\n\t\tint x1 = query[i].x1, y1 = query[i].y1;\n\t\tint x2 = query[i].x2, y2 = query[i].y2;\n\t\t\n\t\tint ans = res_a[x2][y2] - res_a[x2][y1 - 1] - res_a[x1 - 1][y2] + res_a[x1 - 1][y1 - 1];\n\t\tcout << ans << '\\n';\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1683205614,
        "uid": 520333,
        "name": "SmallestRubbish",
        "ccfLevel": 0,
        "title": "P3755 [CQOI2017]\u8001C\u7684\u4efb\u52a1\u9898\u89e3"
    },
    {
        "content": "\u6ce8\uff1a\u8fd9\u7bc7\u9898\u89e3\u9002\u5408\u6709\u4e00\u4e9b\u57fa\u7840\u7684\u540c\u5b66\u5b66\u4e60\u3002\u5bf9\u4e8e\u7b97\u6cd5\u7684\u7ec6\u8282\u4e0d\u4f1a\u4ed4\u7ec6\u8bf4\u660e\u3002\n\n\u95ee\u9898\u4e3a\u7ed9\u5b9a $n$ \u4e2a\u6574\u70b9\uff0c$m$ \u6b21\u77e9\u5f62\u67e5\u548c\u3002\n\n\u5b9a\u4e49 $\\textsf{k-side}$ \u77e9\u5f62\u4e3a\u4e8c\u7ef4\u5e73\u9762\u4e2d\u6709 $\\textsf{k }$\u6761\u8fb9\u7684\u77e9\u5f62\u3002\n\n\u5148\u79bb\u6563\u5316\uff0c\u7136\u540e\uff1a\n\n$F_1:$\n\n\u5dee\u5206\u6210\u4e24\u4e2a $\\textsf{3-side}$ \u77e9\u5f62\uff0c\u7136\u540e\u626b\u63cf\u7ebf\u626b\u53ea\u6709\u4e00\u4e2a\u9650\u5236\u90a3\u4e00\u7ef4\uff0c\u8f6c\u5316\u6210\u5355\u70b9\u52a0\u533a\u95f4\u67e5\u8be2\uff0c\u6811\u72b6\u6570\u7ec4\u89e3\u51b3\u3002\n\n\u65f6\u95f4 $\\mathcal{O}(n\\log n)$\uff0c\u7a7a\u95f4 $\\mathcal{O}(n)$.\n\n$F_2:$\n\n\u5bb9\u6613\u60f3\u5230\u524d\u7f00\u548c\uff0c\u4f46\u662f\u7a7a\u95f4\u4f1a\u70b8\uff0c\u4e8e\u662f\u8003\u8651\u4e0d\u4f1a\u70b8\u7684\u4e3b\u5e2d\u6811\uff0c\u6309\u4efb\u610f\u4e00\u7ef4\u5efa\u7acb\u4e3b\u5e2d\u6811\u3002\u4e8e\u662f\u5728\u4e3b\u5e2d\u6811\u4e0a\u533a\u95f4\u67e5\u8be2\u3002\n\n\u65f6\u95f4 $\\mathcal{O}(n\\log n)$\uff0c\u7a7a\u95f4 $\\mathcal{O}(n\\log n)$.\n\n$F_3:$\n\n\u5dee\u5206\u6210\u56db\u4e2a $\\textsf{2-side}$ \u77e9\u5f62\uff0c\u7136\u540e\u8f6c\u5316\u4e3a\u4e8c\u7ef4\u6570\u70b9\uff0c$\\textsf{cdq}$ \u5206\u6cbb\u6216\u6811\u72b6\u6570\u7ec4\u5747\u53ef \u3002\n\n\u65f6\u95f4 $\\mathcal{O}(n\\log n)$\uff0c\u7a7a\u95f4 $\\mathcal{O}(n)$.\n\n$F_4:$\n\n\u5bb9\u6613\u60f3\u5230\u4e8c\u7ef4\u6570\u636e\u7ed3\u6784\uff0c\u8003\u8651\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u3002\n\n\u7a7a\u95f4\u4f1a\u7206\uff0c\u5c06\u7528\u5230\u7684\u70b9\u79bb\u6563\u5316\u540e\u518d\u641e\u3002\u53ef\u4ee5\u652f\u6301\u52a8\u6001\u52a0\u70b9\u3002\n\n\u65f6\u95f4 $\\mathcal{O}(n\\log^2 n)$\uff0c\u7a7a\u95f4 $\\mathcal{O}(n\\log^2 n)$. \n\n$F_5:$\n\n\u5bb9\u6613\u60f3\u5230\u4e8c\u7ef4\u6570\u636e\u7ed3\u6784\uff0c\u8003\u8651\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u3002\n\n\u7a7a\u95f4\u4e0d\u4f1a\u7206\u3002\u53ef\u4ee5\u652f\u6301\u52a8\u6001\u52a0\u70b9\u3002\n\n\u65f6\u95f4 $\\mathcal{O}(n\\log^2 n)$\uff0c\u7a7a\u95f4 $\\mathcal{O}(n\\log^2 n)$. \n\n$F_6:$ $\\textsf{kd-tree}$ \u2026\u2026\n\n\u6253\u4f4f\uff0c\u5bf9\u4e8e $F_1,F_3$\uff0c\u5b83\u4eec\u672c\u8d28\u76f8\u540c\u3002\u800c $F_1$ \u7684\u666e\u9002\u6027\u4f1a\u7a0d\u5fae\u5e7f\u3002\n\n\u800c $F_4,F_5,F_6$ \u5219\u662f\u589e\u52a0\u4e86\u65f6\u95f4\u4e00\u7ef4\uff0c\u4f7f\u7528\u4e09\u7ef4\u504f\u5e8f\u505a\u4e8c\u7ef4\u504f\u5e8f\uff0c\u5927\u6750\u5c0f\u7528\u3002\n\n$F_2$ \u53ef\u4ee5\u5728\u7a7a\u95f4\u589e\u52a0\u4e00\u4e2a $\\log$ \u7684\u6761\u4ef6\u4e0b\u652f\u6301\u5728\u7ebf\u3002\n\n\u5728\u672c\u9898\u9650\u5236\u4e0b\uff0c\u4f7f\u7528 $F_3$ \u662f\u6700\u4f18\u9009\u62e9\uff0c\u7ed9\u51fa\u4ee3\u7801\uff1a\n\n```cpp\nconst int maxn = 5e5+5;\nll n,m,b[maxn],cnt,Qc,ans[maxn];\nstruct node{ll x,y,id,mul,v;}qwq[maxn];\nstruct BIT{\n\tll c[maxn],ans;\n\tIV add(ll pos,ll val){for(;pos<=cnt;pos+=pos&-pos)c[pos]+=val;}\n\tI query(ll pos){ans=0;for(;pos;pos-=pos&-pos)ans+=c[pos];return ans;}\n}bit;\nI Q(ll x){return lower_bound(b+1,b+1+cnt,x)-b;}\nint main(){\t\n\tQc=n=read();m=read();\n\tF(i,1,n)qwq[i].x=read(),qwq[i].y=read(),qwq[i].id=0,qwq[i].v=read();\n\tF(i,1,m){\n\t\tll x1=read(),y1=read(),x2=read(),y2=read();\n\t\tqwq[++Qc]=node{x2,y2,i,1,0};\n\t\tqwq[++Qc]=node{x2,y1-1,i,-1,0};\n\t\tqwq[++Qc]=node{x1-1,y2,i,-1,0};\n\t\tqwq[++Qc]=node{x1-1,y1-1,i,1,0};\n\t}\n\tF(i,1,Qc)b[i]=qwq[i].y;sort(b+1,b+1+Qc);cnt=unique(b+1,b+1+Qc)-b-1;\n\tsort(qwq+1,qwq+1+Qc,[](node A,node B){return A.x==B.x?A.id<B.id:A.x<B.x;});\n\tF(i,1,Qc)\n\t\t!qwq[i].id?bit.add(Q(qwq[i].y),qwq[i].v),0:\n\t\tans[qwq[i].id]+=bit.query(Q(qwq[i].y))*qwq[i].mul;\n\tF(i,1,m)printf(\"%lld\\n\",ans[i]);return 0;\n}\n```\n\n\n",
        "postTime": 1649911004,
        "uid": 359952,
        "name": "_lbw_",
        "ccfLevel": 6,
        "title": "[\u6478\u9c7c\u8bb0\u5f55]P3755 \u9898\u89e3"
    },
    {
        "content": "**\u826f\u5fc3\u4e3b\u5e2d\u6811\u9898\u89e3\u6c42\u901a\u8fc7qwq**\n\n\u5148\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5e26\u7740\u4f8b\u5b50\u7406\u89e3\u95ee\u9898\uff1a\n\n![example](https://cdn.luogu.com.cn/upload/image_hosting/h4yay2r8.png)\n\n1. \u79bb\u6563\u5316 $y_1, y_2, ..., y_n$ \u4e3a $y'_1, y'_2, ..., y'_n$ \uff1b\n\n2. \u5c06\u6bcf\u4e2a\u70b9\u6309 $x$ \u6392\u5e8f\uff1b\n\n3. \u5982\u56fe\u4e2d\u4e00\u6837\uff0c\u753b\u7ea2\u8272\u7ad6\u7ebf\u5206\u5272\u8fd9\u5f20\u56fe\uff08\u6ce8\u610f\u7ad6\u7ebf\u6570\u91cf\u4e0d\u4e00\u5b9a\u7b49\u4e8e $n$\uff0c\u56fe\u4e2d\uff0c\u7248\u672c $8$ \u7684\u7ad6\u7ebf\uff0c\u4e24\u4e2a\u70b9\u5728\u4e00\u6839\u7ad6\u7ebf\u4e0a\uff09\u3002\n\n4. \u5efa\u7acb\u4e0d\u540c\u7248\u672c\u7684\u7ebf\u6bb5\u6811\uff08\u5373\u53ef\u6301\u4e45\u5316\uff09\u5bf9\u5e94\u56fe\u4e2d\u7684\u6bcf\u6839\u7ad6\u7ebf\u3002\u56fe\u4e2d\uff0c\u6bcf\u9897\u7ebf\u6bb5\u6811\u8868\u8fbe\u4e00\u4e2a $[1, 9]$ \u7684\u5e8f\u5217\uff0c \u7ef4\u62a4\u533a\u95f4\u548c\u3002**\u6bcf\u9897\u7ebf\u6bb5\u6811\u8868\u8fbe\u7684\u5e8f\u5217\u4e2d\u7684\u7b2c $i$ \u4e2a\u6570\u7684\u503c /\u4e3a/ $y'$ \u4e3a $i$ \u4e14\u5728\u8fd9\u9897\u7ebf\u6bb5\u6811\u5bf9\u5e94\u7684\u7ad6\u7ebf\u7684\u5de6\u4fa7\uff08\u6216\u91cd\u5408\uff09\u7684\u70b9\u7684\u6743\u503c\u548c**\uff08\u8fd9\u53e5\u8bdd\u6700\u91cd\u8981\uff01\u6709\u70b9\u62d7\u53e3\uff0c\u53ef\u4ee5\u7ed3\u5408\u56fe\u4e2d\u7684\u7eff\u5b57\u7406\u89e3\uff09\u3002\n\n5. **\u7ebf\u6bb5\u6811\u6240\u7ef4\u62a4\u7684\u5e8f\u5217\u4e2d\u7684\u503c\u7c7b\u4f3c\u4e8e\u524d\u7f00\u548c\uff0c\u7528\u4e24\u4e2a\u7248\u672c\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u503c\u76f8\u51cf\u53ef\u4ee5\u6c42\u51fa\u8fd9\u4e24\u4e2a\u7248\u672c\u7684\u7ebf\u6bb5\u6811\u5bf9\u5e94\u7684\u7ad6\u7ebf\u4e4b\u95f4\u7684\u70b9\u7684\u6743\u503c\u548c\u3002** \u60f3\u4e00\u60f3\uff0c\u4f60\u4f1a\u53d1\u73b0\u56fe\u4e2d\uff0c\u7248\u672c $6$ \u7684\u7ebf\u6bb5\u6811\u7684 $[3, 7]$ \u533a\u95f4\u548c\u51cf\u53bb\u7248\u672c $3$ \u7684 $[3, 7]$ \u533a\u95f4\u548c\u5c31\u662f\u7d2b\u8272\u6846\u4e2d\u7684\u70b9\u7684\u6743\u503c\u548c\u3002\n\n6. \u6700\u540e\u4e00\u6b65\uff0c\u5728\u8be2\u95ee\u65f6\uff0c\u6211\u4eec\u8981\u5c06\u5f62\u5982\u9ec4\u8272\u6846\u7684\u8be2\u95ee\u8f6c\u6362\u4e3a\u5f62\u5982\u7d2b\u8272\u6846\u7684\u8be2\u95ee\u3002\u53ef\u4ee5\u7528\u4e8c\u5206\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u4f60\u80af\u5b9a\u4f1a\u3002\n\n _P.S. \u4f8b\u5b50\u4e2d\u5047\u8bbe\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u90fd\u4e3a $\\mathit 1$\u3002_\n \n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nstruct t {\n    int no;\n    long long val;\n    bool operator<(const t &x) const {\n        return val < x.val;\n    }\n};\nstruct pt {\n    int rky;\n    long long x, val;\n    bool operator<(const pt &b) const {\n        return x < b.x;\n    }\n};\nstruct node {\n    int l, r;\n    long long sum;\n    node *lson, *rson;\n};\nstruct line {\n    long long x;\n    node *root;\n    line() {}\n    line(long long x) {\n        this->x = x;\n    }\n    bool operator<(const line &b) const {\n        return x < b.x;\n    }\n};\n\nconst int N = 1e5;\nint n, m, rksy, k, oriy[N + 1];\npt p[N + 1];\nt rawy[N + 1];\nline l[N + 1]; // \u53d8\u957f\u6570\u7ec4\uff0c\u8868\u793a\u7ad6\u7ebf\uff0c\u957f\u5ea6\u4e3ak\n\nnode *init(int l, int r) { // \u5efa\u7acb\u7248\u672c0\u6811\n    node *o = new node{l, r, 0ll};\n    if(l != r) {\n        int mid = (l + r) / 2;\n        o->lson = init(l, mid);\n        o->rson = init(mid + 1, r);\n    }\n    return o;\n}\nnode *build(node *p, int pos, long long val) { // \u57fa\u4e8e\u524d\u4e00\u7248\u672c\u6811\u5efa\u7acb\u65b0\u6811\n    if(pos < p->l || pos > p->r) {\n        return p;\n    }\n    node *o = new node{p->l, p->r, p->sum + val};\n    if(o->l != o->r) {\n        o->lson = build(p->lson, pos, val), o->rson = build(p->rson, pos, val);\n    }\n    return o;\n}\nlong long query(node *o, int l, int r) { // \u533a\u95f4\u548c\n    if(o->l > r || o->r < l) {\n        return 0ll;\n    }\n    if(o->l >= l && o->r <= r) {\n        return o->sum;\n    }\n    return query(o->lson, l, r) + query(o->rson, l, r);\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin >> n >> m;\n    for(int i = 1; i <= n; i++) {\n        rawy[i].no = i;\n        cin >> p[i].x >> rawy[i].val >> p[i].val;\n    }\n    // \u79bb\u6563\u5316\n    rawy[0].val = LLONG_MIN;\n    sort(rawy + 1, rawy + n + 1);\n    for(int i = 1; i <= n; i++) {\n        if(rawy[i].val != rawy[i - 1].val) {\n            rksy++;\n            oriy[rksy] = rawy[i].val;\n        }\n        p[rawy[i].no].rky = rksy;\n    }\n\n    sort(p + 1, p + n + 1);\n    l[0].x = LLONG_MIN, p[0].x = LLONG_MIN, l[0].root = init(1, rksy);\n    for(int i = 1; i <= n; i++) {\n        if(p[i].x != p[i - 1].x) {\n            k++;\n            l[k].x = p[i].x, l[k].root = build(l[k - 1].root, p[i].rky, p[i].val);\n        }\n        else {\n            l[k].root = build(l[k].root, p[i].rky, p[i].val);\n        }\n    }\n\n    for(int i = 1; i <= m; i++) {\n        long long x1, y1, x2, y2;\n        cin >> x1 >> y1 >> x2 >> y2;\n        if(x1 > l[k].x || x2 < l[1].x || y1 > oriy[rksy] || y2 < oriy[1]) {\n            cout << 0 << endl;\n            continue;\n        }\n        // \u8fd9\u91cc\u7684\u4e8c\u5206\u6709\u4e2a\u5c0ftrick\uff0c\u5982\u679c\u627e\u4e0d\u5230\u5bf9\u5e94\u7684\u6570\u8fd4\u56de\u503c\u662f\u672b\u6307\u9488\uff0c\u8fd9\u4e48\u5199\u6b63\u597d\u8fd8\u662f\u5bf9\u7684\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u6700\u540e\u653e\u4e86\u4e2aLLONG_MAX\uff09\u3002\n        long long ly = lower_bound(oriy + 1, oriy + rksy + 1, y1) - oriy, ry = upper_bound(oriy + 1, oriy + rksy + 1, y2) -oriy - 1;\n        cout << query((upper_bound(l + 1, l + k + 1, line(x2)) - 1)->root, ly, ry) - query((lower_bound(l + 1, l + k + 1, line(x1)) - 1)->root, ly, ry) << endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1644498197,
        "uid": 150956,
        "name": "StillEmpty",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 \u2014\u2014 P3755 [CQOI2017] \u8001C\u7684\u4efb\u52a1"
    },
    {
        "content": "[[CQOI2017]\u8001C\u7684\u4efb\u52a1](https://www.luogu.com.cn/problem/P3755)\n\n\u79bb\u7ebf+\u6811\u72b6\u6570\u7ec4\n\n\u600e\u4e48\u611f\u89c9\u5927\u5bb6\u5199\u7684\u90fd\u597d\u9ebb\u70e6...\u4e8c\u7ef4\u504f\u5e8f\u4e0d\u662f\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u5c31\u53ef\u4ee5\u641e\u5b9a\u4e86\u5417...\n\n\u5177\u4f53\u505a\u6cd5\u5c31\u662f\u5c06\u5750\u6807\u79bb\u6563\u5316\u540e\u6309\u7167\u7b2c\u4e00\u7ef4\u6392\u5e8f\uff0c\u6309\u987a\u5e8f\u626b\u63cf\u3002\n\n\u5047\u8bbe\u5f53\u524d\u4e8c\u5143\u7ec4\u7684\u5750\u6807\u4e3a $(a,b)$ \uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u6709\u591a\u5c11\u5bf9 $(i,j)$ \u6ee1\u8db3 $i \\leq a,j \\leq b$ \uff0c\u7531\u4e8e\u7b2c\u4e00\u7ef4\u5df2\u7ecf\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u770b\u5728\u6392\u5e8f\u4e4b\u540e\u5e8f\u5217\u4e2d\u5f53\u524d\u4e8c\u5143\u7ec4\u4e4b\u524d\u6709\u591a\u5c11\u4e2a\u4e8c\u5143\u7ec4\u6ee1\u8db3\u5176\u7b2c\u4e8c\u7ef4\u7684\u503c\u5c0f\u4e8e\u5f53\u524d\u4e8c\u5143\u7ec4\u7b2c\u4e8c\u7ef4\u7684\u503c\u5373\u53ef\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\u7b2c\u4e8c\u7ef4\uff0c\u5f53\u626b\u63cf\u5230\u4e00\u4e2a\u4e8c\u5143\u7ec4\u65f6\uff0c\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u5176\u7b2c\u4e8c\u7ef4\u7684\u4f4d\u7f6e\u52a0\u4e00\u3002\n\n\u67e5\u8be2\u65f6\u6811\u72b6\u6570\u7ec4\u4e0a\u5c0f\u4e8e\u5f53\u524d\u7b2c\u4e8c\u7ef4\u7684\u503c\u7684\u6570\u7684\u603b\u548c\u5373\u4ee3\u8868\u6ee1\u8db3 $i \\leq a,j \\leq b$ \u7684\u70b9\u7684\u4e2a\u6570\u3002\n\n\u56de\u5230\u8fd9\u9898\uff0c\u53ef\u4ee5\u628a\u529f\u7387\u5f53\u6210\u8be5\u5750\u6807\u4e0a\u6709 $p_i$ \u4e2a\u70b9\uff0c\u76f4\u63a5\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u52a0 $p_i$ \u5373\u53ef\uff0c\u81f3\u4e8e\u8be2\u95ee\uff0c\u53ef\u4ee5\u5c06\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\u7136\u540e\u62c6\u6210\u56db\u4e2a\u4e8c\u5143\u7ec4\uff0c\u7136\u540e\u6309\u7167\u7c7b\u4f3c\u4e8e\u4e8c\u7ef4\u524d\u7f00\u548c\u7684\u65b9\u5f0f\u5bb9\u65a5\u3002\n\n\u6392\u5e8f\u4e0a\u6709\u4e00\u4e9b\u5c0f\u7ec6\u8282\uff0c\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n\u65e2\u7136\u4f60\u80fd\u627e\u5230\u8fd9\u9898\uff0c\u6211\u76f8\u4fe1\u4f60\u80fd\u77ac\u95f4\u505a\u51fa\u6765\u7684\u3002\n\n```Code:```\n```cpp\n#include<bits/stdc++.h>\ntypedef long long LL;\ntypedef long double LD;\nusing namespace std;\nconst LL N=1000010,M=5000010,INF=0x3f3f3f3f;\ninline LL max(LL x,LL y){return x>y?x:y;}\ninline LL min(LL x,LL y){return x<y?x:y;}\ninline void swap(LL &x,LL &y){x^=y^=x^=y;}\nLL n,m,num,cnt,b[N],c[N],ans[N];\nstruct query{\n\tLL x,y;\n\tLL id,val,sign,op;\n}q[N];\nbool cmp(query a,query b){\n\treturn (a.x!=b.x)?a.x<b.x:a.op<b.op;\n}\nvoid add(LL x,LL y){\n\tfor(;x<N;x+=x&-x)c[x]+=y;\n}\nLL ask(LL x){\n\tLL res=0;\n\tfor(;x;x-=x&-x)res+=c[x];\n\treturn res;\n}\nint main(){\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(LL i=1;i<=n;i++){\n\t\tLL x,y,z;\n\t\tscanf(\"%lld%lld%lld\",&x,&y,&z);\n\t\tb[++cnt]=x,b[++cnt]=y;\n\t\tq[++num]=(query){x,y,0,z,0,0};\n\t}\n\tfor(LL i=1;i<=m;i++){\n\t\tLL x1,y1,x2,y2;\n\t\tscanf(\"%lld%lld%lld%lld\",&x1,&y1,&x2,&y2);\n\t\tb[++cnt]=x2,b[++cnt]=y2;\n\t\tb[++cnt]=x1-1,b[++cnt]=y1-1;\n\t\tq[++num]=(query){x2,y2,i,0,1,1};\n\t\tq[++num]=(query){x1-1,y2,i,0,-1,1};\n\t\tq[++num]=(query){x2,y1-1,i,0,-1,1};\n\t\tq[++num]=(query){x1-1,y1-1,i,0,1,1};\n\t}\n\tsort(b+1,b+cnt+1);\n\tcnt=unique(b+1,b+cnt+1)-b-1;\n\tfor(LL i=1;i<=num;i++){\n\t\tq[i].x=lower_bound(b+1,b+cnt+1,q[i].x)-b;\n\t\tq[i].y=lower_bound(b+1,b+cnt+1,q[i].y)-b;\n\t}\n\tsort(q+1,q+num+1,cmp);\n\tfor(LL i=1;i<=num;i++)\n\t\tif(!q[i].op)add(q[i].y,q[i].val);\n\t\telse ans[q[i].id]+=q[i].sign*ask(q[i].y);\t\n\tfor(LL i=1;i<=m;i++)\n\t\tprintf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1622972691,
        "uid": 137242,
        "name": "Dia\u043esi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3755 \u3010[CQOI2017]\u8001C\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "# \u9898\u610f\u7b80\u8ff0\uff1a\n### \u5e73\u9762\u5185\u6709**N**\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u503c**Pi**\u548c\u5750\u6807(**xi**,**yi**)\uff0c\u6709**M**\u6b21\u67e5\u8be2\uff0c\u67e5\u8be2\u4ee5(x1,y1)\u548c(x2,y2)\u4e3a\u4e24\u5bf9\u89d2\u9876\u70b9\u7684\u77e9\u5f62\u5185\u90e8\u70b9\u7684\u503c\u4e4b\u548c\u3002\n\n\n------------\n\n# Solution:\n\n### \u672c\u9898\u505a\u6cd5\u5f88\u591a\uff1a\n### CDQ\u5206\u6cbb\uff0cKD-tree\u7b49\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u89e3\u51b3\u672c\u9898\u3002\n\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u66f4\u52a0\u901a\u4fd7\u6613\u61c2\u7684\u89e3\u6cd5\uff0c**\u5206\u5757**\uff0c\u501f\u9274\u4e86\u6d1b\u8c37\u4e2d@\u6700\u540e\u4e00\u9897\u661f\u8fb0 \u7684\u9898\u89e3\u3002\n\n\u4e0d\u8fc7\u6211\u89c9\u5f97\u90a3\u7bc7\u9898\u89e3\u7565\u5fae\u7b80\u8ff0\uff0c\u5728\u6b64\u4f5c\u8be6\u7ec6\u7684\u8865\u5145\u548c\u89e3\u91ca\u3002\n\n\u5bf9\u4e8e\u66b4\u529b\u7b97\u6cd5\uff0c**\u4e8c\u7ef4\u524d\u7f00\u548c**\u53ef\u4ee5\u89e3\u51b3\u90e8\u5206\u6570\u636e\uff0c\u4f46\u662fN,M\u592a\u5927\uff0c\u6570\u7ec4\u5f00\u4e0d\u4e0b\uff0c\u6211\u4eec\u53ea\u80fd\u8003\u8651\u53e6\u5916\u7684\u89e3\u6cd5\u3002\n\n\u9996\u5148\u662f\u9884\u5904\u7406\uff0c\u5148\u4ee5\u6240\u6709\u70b9\u7684x\u5750\u6807\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u6309\u7167\u6570\u5217\u5206\u5757\u7684\u8001\u5957\u8def\uff0c\u628a\u6bcfsqrt(N)\u4e2a\u70b9\u5206\u4e3a\u4e00\u5757\uff0c\u5171sqrt(N)+1\u5757\u3002\n\n\u8fd9\u65f6\u5019\u7528\u6570\u7ec4\u5b58\u4e0b\u6bcf\u5757\u7684\u70b9\uff0c\u7edf\u8ba1\u529f\u7387\u7684\u524d\u7f00\u548c\uff0c\u4fdd\u5b58\u4e0b\u6765\uff0c\u5177\u4f53\u5730\uff1a\n\n\u6211\u4eec\u5c06\u6570\u7ec4\u53bb\u91cd\uff0c\u8fd9\u6837\u65b9\u4fbf\u8fdb\u884c\u67e5\u627e\uff0c\u56e0\u4e3a\u53ea\u9700\u8981\u770b\u6392\u5e8f\u540e\u7684x\u5750\u6807\u6570\u7ec4\uff0c\u82e5\u6c42\u51faxi\u5728\u6392\u5e8f\u540e\u6570\u7ec4\u7684\u67d0\u4e2a\u4f4d\u7f6epx\uff0c\u90a3\u4e48px/t1(t1\u662f\u6bcf\u5757\u7684\u957f\u5ea6)\u4fbf\u662f\u5c5e\u4e8e\u7b2c\u51e0\u5757\u4e86\uff0c\u8fd9\u662f\u4e00\u4e2a\u663e\u7136\u7684\u4e8b\u60c5\uff0c\u53ef\u4ee5\u914d\u5408\u4ee3\u7801\u7406\u89e3\uff01\n\n```cpp\n    n=read();ask=read();\n    t1=sqrt(n);t2=n/t1+1;\n    for(ll i=1;i<=n;i++)\n    {\n          xx[i]=read();yy[i]=read();zz[i]=read();\n          dx[i]=xx[i];\n    }\n    sort(dx+1,dx+n+1);\n    ll tx=unique(dx+1,dx+n+1)-dx-1;//\u53bb\u91cd\u540e\u7684\u6570\u7ec4\u957f\u5ea6 \n    for(ll i=1;i<=n;i++)\n    {\n\t   ll px=lower_bound(dx+1,dx+tx+1,xx[i])-dx;//\u5927\u4e8e\u7b49\u4e8exx[i]\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e(\u8fd9\u91cc\u5b9e\u9645\u4e0a\u5c31\u662f\u67e5\u627e\u4e86xx[i]\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u5fc5\u7136\u5b58\u5728)\n\t   ll Z=px/t1+1;\t\t\n\t   a[Z][++js[Z]].x=xx[i];\n\t   a[Z][js[Z]].y=yy[i];\n\t   a[Z][js[Z]].p=zz[i];\n    }\n    for(ll i=1;i<=t2;i++)\n    {\n\t   sort(a[i]+1,a[i]+js[i]+1,cmp2);\n\t   for(ll j=1;j<=js[i];j++)\n\t   {\n\t\t  sum[i][j]=sum[i][j-1]+a[i][j].p;//\u5904\u7406\u6bcf\u5757\u7684\u57fa\u7ad9\u529f\u7387\u7684\u524d\u7f00\u548c,sum[i][j]\u8868\u793a\u7b2ci\u5757\u524dj\u4e2a\u57fa\u7ad9\u529f\u7387\u7684\u548c\uff08\u65b9\u4fbf\u7edf\u8ba1\u7b54\u6848\uff09 \n\t\t  b[i][j]=a[i][j].y;\n\t   }\n    }\n```\n\n\n\u518d\u6765\u770b**\u67e5\u8be2**\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u77e9\u5f62\uff0c\u53ef\u4ee5\u5148\u8ba1\u7b97\u4e2d\u95f4\u7684\u90e8\u5206\uff0c\u518d\u8ba1\u7b97\u65c1\u8fb9\u7684\u90e8\u5206\u3002\n\n\u4e3a\u4ec0\u4e48\u4f1a\u6709\u201c\u4e2d\u95f4\u201d\u548c\u201c\u65c1\u8fb9\u201d\u4e4b\u5206\u5462\uff1f\u6211\u4eec\u5bf9\u70b9\u6570\u7ec4\u8fdb\u884c\u5206\u5757\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u77e9\u5f62\uff0c\u53ef\u80fd\u4f1a\u6709\u70b9\u6ca1\u6709\u5728\u4e00\u4e2a\u5b8c\u6574\u5757\u4e2d\uff0c\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u6211\u4eec\u518d\u6b21\u7edf\u8ba1\u8fd9\u4e9b\u70b9\u3002\n\n\u5177\u4f53\u5730\uff1a\u5bf9\u4e8e\u4e24\u7aef\u7684\u70b9\uff0c\u679a\u4e3e\u5757\u5185\u6bcf\u4e2a\u70b9\uff0c\u5224\u65ad\u662f\u5426\u5728\u77e9\u5f62\u5185\u90e8\uff0c\u5982\u679c\u5728\u5219\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u5bf9\u4e8e\u4e2d\u95f4\u7684\u70b9\uff0c\u4e8c\u5206\u67e5\u627e\u5de6\u53f3\u754c\u70b9\uff0c\u4e8c\u5206\u67e5\u627e\u4e0a\u4e0b\u754c\u70b9\uff08\u8fd9\u91cc\u6709\u5f88\u591a\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff09\u3002\n\n\u8ba1\u7b97\u51fa\u8fb9\u754c\u540e\u52a0\u4e0a\u4e4b\u524d\u7edf\u8ba1\u7684\u6bcf\u5757\u529f\u7387\u524d\u7f00\u548c\u5373\u53ef\u3002\n\n### \u8be5\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a:O(N*sqrt(n)*log2(n))\uff0c\u4f18\u5316\u5e38\u6570\u53ef\u4ee5AC\u6b64\u9898\u3002\n\n------------\n# \u6613\u9519\u70b9\uff1a\n### \u4e8c\u5206\u67e5\u627e\u65f6\uff0c\u8fb9\u754c\u7684\u53d6\u6216\u8005\u4e0d\u53d6\u9700\u8981\u7279\u522b\u6ce8\u610f\uff01\uff01\uff01\n\n### \u8981\u5224\u65ad\u70b9\u662f\u5426\u662f\u540c\u4e00\u5757\uff0c\u82e5\u4e0d\u662f\uff0c\u7531\u4e8e\u524d\u9762\u8ba1\u7b97\u4e86\u5757p\u7684\u8d21\u732e\uff0c\u518d\u8ba1\u7b97\u4e00\u6b21\u5757q\u7684\u8d21\u732e(\u540c\u4e00\u5757\u65e0\u9700\u518d\u8ba1\u7b97)\u3002 \n\n\u597d\u4e86\uff0c\u8fd9\u9053\u76f4\u5954\u4e3b\u9898\u7684\u5206\u5757\u9898\u5c31\u5230\u6b64\u7ed3\u675f\u4e86\uff0c\u6ce8\u91ca\u5728\u4ee3\u7801\u91cc\u5199\u5f97\u6bd4\u8f83\u6e05\u695a\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define N 100010\n#define Q 1005\n#define ll long long\nusing namespace std;\nstruct M\n{\n\tll x,y,p;\n}a[Q][Q];//a[i][j]:\u5206\u5757\u540e\u7684\u7b2ci\u5757\u7684\u7b2cj\u4e2a\u6570\uff0cnum[i](js[i])\u8868\u793a\u7b2ci\u5757\u7684\u6570\u7684\u4e2a\u6570(\u8fd9\u91cc\u770b\u597d\u4e45\u624d\u770b\u51fa\u6765)\nll ask,dx[N],xx[N],yy[N],zz[N],t1,t2,a1,a2,b1,b2,n,js[N],l[N],r[N],sum[Q][Q],b[Q][Q];//t1:\u5757\u6570   t2:\u5757\u7684\u957f\u5ea6   sum:\u4e00\u4e2a\u5757\u7684\u524d\u7f00\u529f\u7387\u4e4b\u548c \nll cmp1(M A,M B)\n{\n\tif(A.x<B.x) return 1;\n\telse return 0;\n}\nll cmp2(M A,M B)\n{\n\tif(A.y<B.y) return 1;\n\telse return 0;\n}\ninline ll read()\n{\n    ll x=0,f=1;char ch=getchar();\n    while(!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while(isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nint main()\n{\n    n=read();ask=read();\n    t1=sqrt(n);t2=n/t1+1;\n    for(ll i=1;i<=n;i++)\n    {\n        xx[i]=read();yy[i]=read();zz[i]=read();\n        dx[i]=xx[i];\n\t}\n\tsort(dx+1,dx+n+1);\n\tll tx=unique(dx+1,dx+n+1)-dx-1;//\u53bb\u91cd\u540e\u7684\u6570\u7ec4\u957f\u5ea6 \n\tfor(ll i=1;i<=n;i++)\n\t{\n\t\tll px=lower_bound(dx+1,dx+tx+1,xx[i])-dx;//\u5927\u4e8e\u7b49\u4e8exx[i]\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e(\u8fd9\u91cc\u5b9e\u9645\u4e0a\u5c31\u662f\u67e5\u627e\u4e86xx[i]\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u5fc5\u7136\u5b58\u5728)\n\t\tll Z=px/t1+1;\t\t\n\t\ta[Z][++js[Z]].x=xx[i];\n\t\ta[Z][js[Z]].y=yy[i];\n\t\ta[Z][js[Z]].p=zz[i];\n\t\t//a[Z][]\n\t}\n\tfor(ll i=1;i<=t2;i++)\n\t{\n\t\tsort(a[i]+1,a[i]+js[i]+1,cmp2);\n\t\tfor(ll j=1;j<=js[i];j++)\n\t\t{\n\t\t\tsum[i][j]=sum[i][j-1]+a[i][j].p;//\u5904\u7406\u6bcf\u5757\u7684\u57fa\u7ad9\u529f\u7387\u7684\u524d\u7f00\u548c,sum[i][j]\u8868\u793a\u7b2ci\u5757\u524dj\u4e2a\u57fa\u7ad9\u529f\u7387\u7684\u548c\uff08\u65b9\u4fbf\u7edf\u8ba1\u7b54\u6848\uff09 \n\t\t\tb[i][j]=a[i][j].y; \n\t\t}\n\t}\n\tfor(ll i=1;i<=ask;i++)\n\t{\n\t\ta1=read();b1=read();a2=read();b2=read();\n\t\tll px1=lower_bound(dx+1,dx+tx+1,a1)-dx;\n\t\tll px2=upper_bound(dx+1,dx+tx+1,a2)-dx;/////\u4e8c\u5206\u67e5\u627e\u5de6\u53f3\u8fb9\u754c\u70b9 \n\t//\tcout<<px1<<\" \"<<px2<<endl<<endl; \n\t\tll ans=0;\n\t\tll p=px1/t1+1,q=px2/t1+1;\n\t\tfor(ll j=p+1;j<=q-1;j++)//\u4e2d\u90e8\u67e5\u627e \n\t\t{\n\t\t\tll py1=lower_bound(b[j]+1,b[j]+js[j]+1,b1)-b[j];\n\t\t\tll py2=upper_bound(b[j]+1,b[j]+js[j]+1,b2)-b[j]-1;///\u4e0a\u4e0b\u754c\u70b9\u67e5\u627e \n\t\t\tans=ans+sum[j][py2]-sum[j][py1-1];\n\t\t}\n\t\tfor(ll j=1;j<=js[p];j++)//js[p]\uff1a\u5757p\u7684\u5927\u5c0f\n\t\t//\u4e24\u7aef\u67e5\u627e \n\t\t{\n\t\t\tif(a[p][j].x>=a1&&a[p][j].y>=b1&&a[p][j].x<=a2&&a[p][j].y<=b2)\n\t\t\t{\n\t\t\t\tans=ans+a[p][j].p;\n\t\t\t}\n\t\t}\n\t\tif(p!=q) //\u662f\u5426\u4f4d\u4e8e\u540c\u4e00\u5757\u5185\u90e8,\u82e5\u4e0d\u662f\uff0c\u7531\u4e8e\u524d\u9762\u8ba1\u7b97\u4e86\u5757p\u7684\u8d21\u732e\uff0c\u518d\u8ba1\u7b97\u4e00\u6b21\u5757q\u7684\u8d21\u732e(\u540c\u4e00\u5757\u65e0\u9700\u518d\u8ba1\u7b97) \n\t\t{\n\t\t\tfor(ll j=1;j<=js[q];j++) \n\t\t\t{\n\t\t\t\tif(a[q][j].x>=a1&&a[q][j].y>=b1&&a[q][j].x<=a2&&a[q][j].y<=b2)\n\t\t\t\t{\n\t\t\t\t\tans=ans+a[q][j].p;//\u5728\u8303\u56f4\u5185\uff0c\u52a0\u4e0a\u57fa\u7ad9\u529f\u7387\u6570 \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n    return 0;\n}\n```\n\n\n------------\n\n\n\n\n",
        "postTime": 1596718518,
        "uid": 213256,
        "name": "Constant",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3755 \u3010[CQOI2017]\u8001C\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "## 0. \u524d\u7f6e\u77e5\u8bc6 & \u5e9f\u8bdd\n\n\u672c\u849f\u84bb\u6700\u8fd1\u5b66\u4e60 CDQ \u5206\u6cbb\uff0c\u770b\u5230\u8be5\u9898\uff0c\u867d\u7136\u60f3\u8d77\u4e86\u626b\u63cf\u7ebf\u7b49\u65b9\u6cd5\uff0c\u4f46\u4e3a\u4e86\u8bad\u7ec3 CDQ \u5206\u6cbb\uff0c\u8fd8\u662f\u81ea\u7136\u5199\u4e00\u7bc7\u9898\u89e3\u3002\n\n\u672c\u6587\u662f\u4f7f\u7528\u7684\u4e09\u7ef4\u504f\u5e8f\uff0c\u5982\u679c\u4e0d\u61c2\u7684\u8bdd\uff0c\u53ef\u4ee5A [\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/P3810)\uff0c\u60f3\u66f4\u591a\u4e86\u89e3 CDQ \u5206\u6cbb\u7684\uff0c~~\u4e00\u6ce2\u5e7f\u544a~~ [\u6211\u7684 Blog](https://www.luogu.com.cn/blog/mydcwfy-342891/cdq-fen-zhi)\u3002\n\n## 1. \u5173\u4e8e CDQ \u5206\u6cbb\n\nCDQ \u5206\u6cbb\u662f\u4e00\u4e2a\u79bb\u7ebf\u5206\u6cbb\u7b97\u6cd5\uff0c\u7528\u4e8e\u89e3\u51b3\u4e09\u7ef4\u7684\u95ee\u9898\u3002\n\n\u5b83\u662f\u5728\u89e3\u51b3\u4e8c\u7ef4\u7684\u57fa\u7840\u4e0a\uff0c\u518d\u5957\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\u65f6\u95f4\u7684\u5148\u540e\u987a\u5e8f\uff0c\u590d\u6742\u5ea6\u6bd4\u540c\u7c7b\u7684\u4e8c\u7ef4\u95ee\u9898\u591a $\\log n$\u3002\n\n\u76f8\u4fe1\u4f60 A \u4e86\u6a21\u677f\u9898\uff0c\u4f1a\u5bf9\u8fd9\u7b97\u6cd5\u6709\u66f4\u6df1\u7684\u7406\u89e3\u3002\n\n## 2. \u5173\u4e8e\u672c\u9898\n\n1. \u6709 $n$ \u4e2a\u5148\u7ed9\u51fa\u7684\u70b9\uff0c\u6bcf\u4e00\u4e2a\u70b9\u6709\u4e00\u4e2a\u6743\u503c\uff0c\u5728\u7ed9\u51fa $m$ \u4e2a\u77e9\u5f62\u8fb9\u6846\uff0c\u7ed9\u51fa\u4e24\u4e2a\u70b9 $(x_1,y_1),(x_2,y_2)$\uff0c\u6c42\u56f4\u4f4f\u7684\u70b9\u7684\u603b\u6743\u503c\u3002\n2. $n\\leq 10^5,m\\leq 10^5,-2^{31}\\leq x_1,x_2,y_1,y_2\\leq 2^{31}$\u3002\n\n\u867d\u7136\u8fd1\u4e4e\u4e8e\u4e00\u9053\u6a21\u677f\u9898\uff0c\u76f4\u63a5\u626b\u63cf\u7ebf\uff0c\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e0b CDQ \u5206\u6cbb\u3002\n\nCDQ \u5206\u6cbb\u7684\u5173\u952e\u5c31\u5728\u4e8e\u6784\u9020\u4e00\u4e2a\u4e09\u7ef4\u504f\u5e8f\u95ee\u9898\u3002\n\n\u6ce8\u610f\uff0c\u6709\u7684\u9898\u89e3\u4f7f\u7528\u7684\u662f\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\uff0c\u6211\u8fd9\u91cc\u4e3a\u4e86\u66f4\u52a0\u4e0e\u6a21\u677f\u543b\u5408\uff0c\u6784\u9020\u4e86\u7b2c\u4e09\u7ef4\uff0c\u4f7f\u7528\u6807\u51c6\u7684\u4e09\u7ef4\u504f\u5e8f\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u8f6c\u5316\u4e3a\u4e00\u4e2a\u4e8c\u7ef4\u524d\u7f00\u548c\u7684\u95ee\u9898\uff0c\u5373 $ans=\\operatorname{sum}(x_2,y_2)-\\operatorname{sum}(x_1-1,y_2)-\\operatorname{sum}(x_2,y_1-1)+\\operatorname {sum}(x_1-1,y_1-1)$\uff08\u5c31\u662f\u4e00\u4e2a\u5bb9\u65a5\u539f\u7406\uff09\u3002\n\n\u4e8e\u662f\uff0c\u95ee\u9898\u5c31\u662f\u6c42\n$$\n\\operatorname{sum}(x_t,y_t)=\\sum_{x\\leq x_t,y\\leq y_t}{a[x][y]}\n$$\n\u7b2c\u4e00\u548c\u7b2c\u4e8c\u7ef4\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u662f $x$ \u548c $y$\u3002\n\n\u600e\u6837\u6c42\u7b2c\u4e09\u7ef4\u5462\uff1f\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u8981\u6784\u9020\u4e3a $z<z_t$\uff0c\u53c8\u56e0\u4e3a CDQ \u5206\u6cbb\u662f\u79bb\u7ebf\uff0c\u8be2\u95ee\u548c\u7b54\u6848\u5728\u4e00\u8d77\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a $z$ \u6765\u6807\u8bb0\u662f\u8be2\u95ee\u8fd8\u662f\u539f\u6765\u7684\u70b9\u3002\n\n\u6211\u4eec\u8981\u52a0\u7b54\u6848\u7684\u662f\u539f\u6765\u7684\u70b9\uff0c\u800c\u4e0d\u662f\u8be2\u95ee\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u539f\u6765\u7684\u70b9\u8bb0\u4e3a 0\uff0c\u8be2\u95ee\u8bb0\u4e3a 1\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u73b0\u5728\u6c42\u7684\u662f\uff1a\n$$\n\\operatorname{sum}(x_t,y_t,z_t)=\\sum_{x\\leq x_t,y\\leq y_t,z<z_t}{a[x][y]}\n$$\n\u4e8e\u662f\u5c31\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u504f\u5e8f\u95ee\u9898\u4e86\uff01\n\n## 3. \u5173\u4e8e Code\n\n1. \u6211\u4eec\u9700\u8981\u4f7f\u7528 long long\uff0c\u56e0\u4e3a\u5f88\u53ef\u80fd\u70b8 int\u3002\n2. \u5b9e\u9645\u4f7f\u7528 $z$ \u7684\u65f6\u5019\uff0c\u6211\u4eec\u5176\u5b9e\u4e0d\u9700\u5b8c\u5168\u4f7f\u7528\u539f\u6765\u7684\u4e09\u7ef4\u504f\u5e8f\uff0c\u5176\u5b9e\u53ef\u4ee5\u5c06 $z=0$ \u65f6\u52a0\u5165\u603b\u548c\u5373\u53ef\u3002\n\n\u7136\u540e\u5c31\u662f\u6109\u5feb\u7684\u4e0a\u4ee3\u7801\u65f6\u95f4\u4e86\uff01\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\ntypedef long long ll;\nconst int N=5e5+10;\n\nstruct Node{\n    int a,b,c,id,f,p;\n    ll sum;\n    const bool operator <(const Node &t){\n        if (a!=t.a) return a<t.a;\n        if (b!=t.b) return b<t.b;\n        return c<t.c;\n    }\n}k[N],tmp[N];\n\nint n,m;\nll ans[N];\n\nvoid merge_sort(int l,int r)\n{\n    if (l==r) return;\n    int mid=l+r>>1;\n    merge_sort(l,mid);merge_sort(mid+1,r);\n    int j=l,i=mid+1,h=0;\n    ll sum=0;\n    while (j<=mid&&i<=r)//k[j].c \u4e3a 0 \u65f6\u5c31\u52a0\u4e0a\n        if (k[j].b<=k[i].b) sum+=(!k[j].c)*k[j].p,tmp[h++]=k[j++];\n        else k[i].sum+=sum,tmp[h++]=k[i++];\n    while (j<=mid) tmp[h++]=k[j++];\n    while (i<=r) k[i].sum+=sum,tmp[h++]=k[i++];\n    for (int i=l,t=0;t<h;++t,++i) k[i]=tmp[t];\n}\n\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    for (int i=0,a,b,c;i<n;++i)\n    {\n        scanf(\"%d %d %d\",&a,&b,&c);\n        k[i]=(Node){a,b,0,0,0,c,0};\n    }\n    int tot=n;\n    for (int i=0,a,b,c,d;i<m;++i)\n    {\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n        k[tot++]=(Node){a-1,b-1,1,i,1,0,0};\n        k[tot++]=(Node){a-1,d,1,i,-1,0,0};\n        k[tot++]=(Node){c,d,1,i,1,0,0};\n        k[tot++]=(Node){c,b-1,1,i,-1,0,0};\n    }\n\n    sort(k,k+tot);\n    merge_sort(0,tot-1);\n\n    for (int i=0;i<tot;++i)\n        if (k[i].c) ans[k[i].id]+=k[i].sum*k[i].f;\n    for (int i=0;i<m;++i) printf(\"%lld\\n\",ans[i]);\n    return 0;\n}\n```\n\n",
        "postTime": 1625724744,
        "uid": 342891,
        "name": "mydcwfy",
        "ccfLevel": 9,
        "title": "P3755 \u9898\u89e3"
    },
    {
        "content": "\u52a8\u6001\u5f00\u70b9\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u3002\n\n\u8fd9\u9898\u7ed9\u51fa\u4e00\u4e2a\u9759\u6001\u7684\u77e9\u9635\uff0c\u7136\u540e\u6bcf\u6b21\u6c42\u4e00\u4e2a\u5b50\u77e9\u9635\u7684\u548c\u3002\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u7684 `add` \u548c `ask` \u90fd\u662f $\\log ^2 n$ \u7684\u3002\u4f46\u662f\u7a7a\u95f4\u590d\u6742\u5ea6\u662f $n^2$ \u7684\u3002\n\n\u5176\u5b9e\u53ea\u6709\u6bcf\u6b21 `add` \u4f1a\u589e\u52a0 $\\log ^2 n$ \u7684\u7a7a\u95f4\u3002\u4e5f\u5c31\u662f\u8bf4\u628a\u6570\u7ec4\u6362\u6210\u54c8\u5e0c\u8868\u5c31\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u7b97\u6cd5\u4e86\u3002\n\n\u8bb0\u5f97\u8981\u79bb\u6563\u5316\u3002\u5982\u679c\u4e0d\u79bb\u6563\u5316\u590d\u6742\u5ea6\u4f1a\u9000\u5316\u4e3a $\\log^2 w$\uff0c$w$ \u4e3a\u503c\u57df\u3002\n\numap \u7684\u5e38\u6570\u53ef\u80fd\u592a\u5927\u4e86\u3002\u624b\u5199\u4e00\u4e0b\u3002\n\n\u65f6\u7a7a\u590d\u6742\u5ea6 $n\\log ^2 n$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define lowbit(x) (x&-x)\n#define ll long long\nusing namespace std;\nint n,m;\nconst int mod=8010007;\nint read()\n{\n   int s=0;\n   char ch=getchar();\n   while(ch<'0'||ch>'9') ch=getchar();\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s;\n}\nint x[100005],y[100005],p[100005];\nint x1_[100005],y1_[100005];\nint x2_[100005],y2_[100005];\nint h[300005];\nstruct has\n{\n\tstruct node\n\t{\n\t\tint nxt;\n\t\tll key,v;\n\t}a[9000000];\n\tint head[mod+5];\n\tint cnt;\n\tvoid add(int x,ll key,int v)\n\t{\n\t\ta[++cnt].nxt=head[x];\n\t\ta[cnt].v=v;\n\t\ta[cnt].key=key;\n\t\thead[x]=cnt;\n\t}\n\tll find(ll x)\n\t{\n\t\tfor(int i=head[x%mod];i;i=a[i].nxt)\n\t\t\tif(a[i].key==x)\n\t\t\t\treturn a[i].v;\n\t\treturn 0;\n\t}\n\tvoid add(ll x,int p)\n\t{\n\t\tfor(int i=head[x%mod];i;i=a[i].nxt)\n\t\t\tif(a[i].key==x)\n\t\t\t{\n\t\t\t\ta[i].v+=p;\n\t\t\t\treturn;\n\t\t\t}\n\t\tadd(x%mod,x,p);\n\t}\n}t;\nint len1,len2;\nvoid add(int x,int y,int p)\n{\n\tfor(;x<=len1;x+=lowbit(x))\n\t\tfor(int i=y;i<=len2;i+=lowbit(i))\n\t\t\tt.add(1ll*x*len2+i,p);\n}\nll ask(int x,int y)\n{\n\tll s=0;\n\tfor(;x;x-=lowbit(x))\n\t\tfor(int i=y;i;i-=lowbit(i))\n\t\t\ts+=t.find(1ll*x*len2+i);\n\treturn s;\n}\nint main()\n{\n\tint i,j,n,m,cnt=0;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d%d%d\",&x[i],&y[i],&p[i]);\n\tfor(i=1;i<=m;i++)\n\t\tscanf(\"%d%d%d%d\",&x1_[i],&y1_[i],&x2_[i],&y2_[i]);\n\tfor(i=1;i<=n;i++)\n\t\th[++cnt]=x[i];\n\tfor(i=1;i<=m;i++)\n\t\th[++cnt]=x1_[i],h[++cnt]=x2_[i];\n\tsort(h+1,h+1+cnt);\n\tlen1=unique(h+1,h+1+cnt)-h;\n\tfor(i=1;i<=n;i++)\n\t\tx[i]=lower_bound(h+1,h+len1,x[i])-h;\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tx1_[i]=lower_bound(h+1,h+len1,x1_[i])-h;\n\t\tx2_[i]=lower_bound(h+1,h+len1,x2_[i])-h;\n\t}\n\tcnt=0;\n\tfor(i=1;i<=n;i++)\n\t\th[++cnt]=y[i];\n\tfor(i=1;i<=m;i++)\n\t\th[++cnt]=y1_[i],h[++cnt]=y2_[i];\n\tsort(h+1,h+1+ cnt);\n\tlen2=unique(h+1,h+1+cnt)-h;\n\tfor(i=1;i<=n;i++)\n\t\ty[i]=lower_bound(h+1,h+len2,y[i])-h;\n\tfor(i=1;i<=m;i++)\n\t{\n\t\ty1_[i]=lower_bound(h+1,h+len2,y1_[i])-h;\n\t\ty2_[i]=lower_bound(h+1,h+len2,y2_[i])-h;\n\t}\n\tfor(i=1;i<=n;i++)\n\t\tadd(x[i],y[i],p[i]);\n\tfor(i=1;i<=m;i++)\n\t\tprintf(\"%lld\\n\",ask(x2_[i],y2_[i])+ask(x1_[i]-1,y1_[i]-1)-ask(x1_[i]-1,y2_[i])-ask(x2_[i],y1_[i]-1));\n}\n```\n",
        "postTime": 1610673788,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3755 \u3010[CQOI2017]\u8001C\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u8865\u5145\u4e00\u4e0b\u4e3b\u5e2d\u6811\u7684\u89e3\u6cd5\u3002\n\n\u9996\u5148\u662f\u79bb\u6563\u5316\u3002\u5bf9\u4e8e $x$ \u5750\u6807\u53ea\u8981\u6309\u5176\u5c06\u6240\u6709\u70b9\u6392\u5e8f\u5373\u53ef\uff0c\u56e0\u4e3a\u540e\u9762\u4e0d\u5173\u5fc3\u5b83\u662f\u591a\u5c11\u3002 \u800c $y$ \u5750\u6807\u5c31\u6b63\u7ecf\u5730\u79bb\u6563\u5316\u4e86\uff0c\u5b83\u7684\u503c\u57df\u53d8\u6210 $[1,n]$\u3002\n\n\u7136\u540e\uff0c\u6309\u7167 $x$ \u5750\u6807\u4ece\u5c0f\u5230\u5927\u63d2\u5165\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u628a $x$ \u8f74\u770b\u4f5c\u65f6\u95f4\u8f74\uff0c $y$ \u8f74\u770b\u4f5c\u503c\u57df\u8f74\uff08\u7ebf\u6bb5\u6811\u4e0a\u7684\u8f74\uff09\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9 $(x,y,p)$ \u5bf9\u5176\u5728 $y$ \u503c\u5904\u589e\u52a0 $p$\u3002\u8fd9\u6837\u5b83\u5c31\u4ee3\u8868\u4e86\u4e4b\u524d\u6240\u6709\u70b9\u5728\u8be5\u5904\u503c\u7684\u524d\u7f00\u548c\u3002\n\n\u9884\u5904\u7406\u5c31\u5230\u8fd9\u91cc\uff0c\u4e24\u4e2a\u8fc7\u7a0b\u90fd\u662f $O(n\\log n)$ \u7684\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee $(x1,y1,x2,y2)$\u3002\n\n\u5c06 $x1,x2$ \u5206\u522b\u5728\u539f\u6570\u7ec4\u4e2d\u4e8c\u5206\u4e00\u4e0b\uff0c\u5c06 $y1,y2$ \u5728\u79bb\u6563\u5316 $y$ \u7684\u6570\u7ec4\u4e2d\u4e8c\u5206\u4e00\u4e0b\u3002\n\n\u7136\u540e\u5206\u522b\u5728\u6807\u53f7\u4e3a $x2$ \u548c $x1-1$ \u7684\u6811\u4e0a\u8be2\u95ee $[y1,y2]$ \u7684\u533a\u95f4\u4f5c\u5dee\u5373\u53ef\u3002 \u65f6\u95f4\u662f $O(m\\log n)$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n+m)\\log n)$\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n\ntypedef long long ll;\nconst int MAXN = 100001;\nconst int MAXNODE = MAXN * 20;\n\ninline int read() {\n\tint x = 0, f = 1; char ch = getchar();\n\twhile(ch > '9' || ch < '0') { if(ch == '-') f = -1; ch = getchar(); }\n\tdo x = x * 10 + ch - 48, ch = getchar(); while(ch >= '0' && ch <= '9');\n\treturn x * f;\n}\n\nstruct Sta\n{\n\tint x,y,p;\n\tSta(int _x = 0,int _y = 0) : x(_x), y(_y) {}\n\tfriend bool operator <(const Sta &a,const Sta &b) {\n\t\treturn a.x < b.x;\n\t}\n};\n\nint n,m,y[MAXN]; Sta p[MAXN];\nint rt[MAXNODE],lc[MAXNODE],rc[MAXNODE],cnt; ll s[MAXNODE];\n\nvoid Build(int &k,int l,int r) {\n\tk = ++cnt;\n\tif(l == r) return;\n\tint mid = (l + r) >> 1;\n\tBuild(lc[k],l,mid);\n\tBuild(rc[k],mid + 1,r);\n\treturn;\n}\n\nvoid Update(int &k,int pr,int l,int r,int x,int p) {\n\tk = ++cnt, s[k] = s[pr] + p;\n\tif(l == r) return;\n\tint mid = (l + r) >> 1;\n\tif(x <= mid) rc[k] = rc[pr], Update(lc[k],lc[pr],l,mid,x,p);\n\telse lc[k] = lc[pr], Update(rc[k],rc[pr],mid + 1,r,x,p);\n\treturn;\n}\n\nll Query(int k,int l,int r,int x,int y) {\n\tif(l > y || r < x) return 0ll;\n\tif(l >= x && r <= y) return s[k];\n\tint mid = (l + r) >> 1;\n\treturn Query(lc[k],l,mid,x,y) + Query(rc[k],mid + 1,r,x,y);\n}\n\nint main() {\n\tn = read(), m = read();\n\tfor(int i = 1;i <= n;i++) p[i].x = read(), p[i].y = read(), p[i].p = read();\n\tstd::sort(p + 1,p + 1 + n);\n\tfor(int i = 1;i <= n;i++) y[i] = p[i].y;\n\tstd::sort(y + 1,y + 1 + n);\n\tint ny = std::unique(y + 1,y + 1 + n) - y - 1;\n\tfor(int i = 1;i <= n;i++) p[i].y = std::lower_bound(y + 1,y + 1 + ny,p[i].y) - y;\n\tBuild(rt[0],1,ny);\n\tfor(int i = 1;i <= n;i++) Update(rt[i],rt[i - 1],0,ny,p[i].y,p[i].p);\n\twhile(m--) {\n\t\tint x1 = read(), y1 = read(), x2 = read(), y2 = read();\n\t\tx1 = std::lower_bound(p + 1,p + 1 + n,Sta(x1,0)) - p;\n\t\tx2 = std::upper_bound(p + 1,p + 1 + n,Sta(x2,0)) - p - 1;\n\t\ty1 = std::lower_bound(y + 1,y + 1 + ny,y1) - y;\n\t\ty2 = std::upper_bound(y + 1,y + 1 + ny,y2) - y - 1;\n\t\tstd::printf(\"%lld\\n\",Query(rt[x2],0,ny,y1,y2) - Query(rt[x1 - 1],0,ny,y1,y2));\n\t}\n\treturn 0;\n}\n\n```\n\n\u4e3b\u5e2d\u6811\u672c\u8eab\u5927\u6982\u662f\u5bb9\u6613\u7406\u89e3\u7684\u3002\u8fd9\u9898\u5176\u5b9e\u662f\u4e00\u4e2a**\u4e8c\u7ef4\u6570\u70b9**\u7684\u6a21\u677f\u9898\uff0c\u5373\u5728\u76f8\u5f53\u5927\u7684\u5e73\u9762\u7a7a\u95f4\u4e0a\u7ed9\u51fa\u82e5\u5e72\u70b9\u5e76\u8be2\u95ee\u77e9\u5f62\u4e2d\u7684\u70b9\u6570\uff08\u6216\u70b9\u6743\u548c\uff09\u7684\u95ee\u9898\u3002",
        "postTime": 1595723666,
        "uid": 219595,
        "name": "Vocalise",
        "ccfLevel": 9,
        "title": "\u4e8c\u7ef4\u6570\u70b9--\u9898\u89e3 P3755 \u3010[CQOI2017]\u8001C\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u770b\u4e0a\u53bb\u662f\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\uff0c\u4f46\u662f\u7a7a\u95f4\u65e0\u8bba\u5982\u4f55\u4e5f\u5f00\u4e0d\u4e0b\u3002\n\n\u7136\u800c\u53d1\u73b0\u6ca1\u6709\u4fee\u6539\u64cd\u4f5c\u53ea\u6709\u8be2\u95ee\uff0c\u6211\u4eec\u8003\u8651\u79bb\u7ebf\u5904\u7406\u3002\n\n\u628a\u5750\u6807\u79bb\u6563\u5316\u540e\u6309x\u5750\u6807\u6392\u5e8f\uff0c\u628ay\u5750\u6807\u52a0\u5165\u6811\u72b6\u6570\u7ec4\u3002\n\n\u4e4b\u540e\u7528\u7c7b\u4f3c\u626b\u63cf\u7ebf\u7684\u65b9\u6cd5\u4ecex\u8f74\u4e0a\u9762\u626b\uff0c\u628a\u4e00\u4e2a\u77e9\u5f62\u5206\u6210\u56db\u4e2a\u70b9\u6765\u7edf\u8ba1\u7b54\u6848\u3002\n\n\n\u4ee3\u7801...\u79bb\u6563\u5316\u5199\u5f97\u771f\u7684\u70c2...\n\n\n\n\n\n\n\n\n\n\n    \n    \n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    \n\n    \n    \n    \n\n\n        \n    \n    \n    \n```cpp\n#include <cstdio>\n#include <algorithm>\n#define Rep( i , _begin , _end ) for(int i=(_begin),i##_END=(_end);i<=(i##_END);i++)\n#define For( i , _begin , _end ) for(int i=(_begin),i##_END=(_end);i!=(i##_END);i++)\n#define Lop( i , _begin , _end ) for(int i=(_begin),i##_END=(_end);i>=(i##_END);i--)\n#define Dnt( i , _begin , _end ) for(int i=(_begin),i##_END=(_end);i!=(i##_END);i--)\nusing std :: max;\nusing std :: min;\ntypedef long long LL;\nconst int maxx = 800000 + 25;\nint n,m,x,y,z,cnt,tot,x1,x2,y1,y2,num,lx,ly;\nint a[maxx],b[maxx],val[maxx],u[maxx],v[maxx];\nLL  T[maxx],ans[maxx];\nstruct Node{\n    int x,y;\n    int f,id;\n    int v;\n}A[maxx];\nnamespace Zyerstream{\n    const int L = 1<<15;\n    char buffer[L],*_,*__;\n    inline char Getchar(){\n        if(_ == __) __ = (_ = buffer) + fread(buffer,1,L,stdin);\n        return _ == __? EOF : *_ ++;\n    }\n    template <class T> inline void read(T &in){\n        int f = 1;char __;\n        for(__ = Getchar();__ > '9' || __ < '0';__ = Getchar()) if(__ == '-') f = -1;\n        for(in = 0;__ >= '0' && __ <= '9';__ = Getchar()) in = (in<<1) + (in<<3) + __ - '0';\n        in *= f;\n    }\n}\nnamespace init{\n    using namespace Zyerstream;\n    bool cmp(Node a,Node b){\n        return a.x == b.x? a.id < b.id : a.x < b.x;\n    }\n    int main(){\n        scanf(\"%d%d\",&n,&m);\n        Rep( i , 1 , n ) read(x),read(y),read(z),a[++cnt] = x,b[cnt] = y,val[cnt] = z,u[cnt] = a[cnt],v[cnt] = b[cnt];\n        Rep( i , 1 , m ){\n            read(x1);read(y1);read(x2);read(y2);\n            a[++cnt] = x1;b[cnt] = y1;u[cnt] = a[cnt];v[cnt] = b[cnt];\n            a[++cnt] = x2;b[cnt] = y2;u[cnt] = a[cnt];v[cnt] = b[cnt];\n        }\n        std :: sort(u+1,u+cnt+1);\n        std :: sort(v+1,v+cnt+1);\n        lx = std :: unique(u+1,u+cnt+1) - u - 1;\n        ly = std :: unique(v+1,v+cnt+1) - v - 1;\n        Rep( i , 1 , n ){\n            ++tot;\n            x = std :: lower_bound(u+1,u+lx+1,a[tot]) - u;\n            y = std :: lower_bound(v+1,v+ly+1,b[tot]) - v;\n            A[tot].x = x;A[tot].y = y;A[tot].v = val[tot];\n        }\n        num = n;\n        Rep( i , 1 , m ){\n            ++num;\n            x1 = std :: lower_bound(u+1,u+lx+1,a[num]) - u;\n            y1 = std :: lower_bound(v+1,v+ly+1,b[num]) - v;\n            ++num;\n            x2 = std :: lower_bound(u+1,u+lx+1,a[num]) - u;\n            y2 = std :: lower_bound(v+1,v+ly+1,b[num]) - v;\n            A[++tot].x = x1-1;A[tot].y = y1-1;A[tot].f = 1;A[tot].id = i;\n            A[++tot].x = x1-1;A[tot].y = y2;A[tot].f = -1;A[tot].id = i;\n            A[++tot].x = x2;A[tot].y = y1-1;A[tot].f = -1;A[tot].id = i;\n            A[++tot].x = x2;A[tot].y = y2;A[tot].f = 1;A[tot].id = i;\n        }\n        std :: sort(A+1,A+tot+1,cmp);\n    }\n}\nnamespace Bit{\n    void Add(int x,int k){\n        for(int i=x;i<=maxx;i+=i&(-i))\n            T[i] += k;\n    }\n    LL Query(int x){\n        LL ans = 0;\n        for(int i=x;i;i-=i&(-i))\n            ans += T[i];\n        return ans;\n    }\n}\nusing namespace Bit;\nint main(){\n    init :: main();\n    Rep( i , 1 , tot ){\n        if(!A[i].id) Add(A[i].y,A[i].v);\n        else ans[A[i].id] += Query(A[i].y)*A[i].f;\n    }\n    Rep( i , 1 , m ) printf(\"%lld\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1496308796,
        "uid": 21673,
        "name": "Sor4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3755 \u3010[CQOI2017]\u8001C\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\uff08\u6765\u81ea\u5927\u4f6cNOIP1 QAQ\uff09\uff1a\n\u5e73\u9762\u5185\u6709N\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u503cPi\u548c\u5750\u6807(xi,yi)\uff0c\u6709M\u6b21\u67e5\u8be2\uff0c\u67e5\u8be2\u4ee5(x1,y1)\u548c(x2,y2)\u4e3a\u4e24\u5bf9\u89d2\u9876\u70b9\u7684\u77e9\u5f62\u5185\u90e8\u70b9\u7684\u503c\u4e4b\u548c\u3002\n\n------------\n#### \u91c7\u7528\u65b9\u6cd5\uff1aCDQ\u5206\u6cbb\n#### \u91c7\u7528\u539f\u56e0\uff1a\u5bf9\u4e8e\u8fd9\u79cd\u8ba1\u7b97\u201c\u67e5\u8be2\u201d\u64cd\u4f5c\u7684\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5927\u80c6\u7684\u91c7\u7528CDQ\u5206\u6cbb\uff08~~\u56e0\u4e3a\u6211\u4eec\u8001\u5e08\u628a\u4ed6\u653e\u5728\u4e86CDQ\u5206\u6cbb\u5217\u8868~~\uff09\u3002\n\nTIPS\uff1a\u672c\u9898\u89e3\u501f\u9274\u4e8e@niiick\u5927\u4f6c\uff0c\u4e5f\u5c31\u662f\u5bf9\u4ed6\u7684\u9898\u89e3\u8fdb\u884c\u4e00\u4e9b\u8865\u5145\uff0cQWQ\u3002\n\n------------\n#### CDQ\u5206\u6cbb\u7684\u5b9a\u4e49\uff1a\nCDQ\u5206\u6cbb\u662f\u57fa\u4e8e\u65f6\u95f4\u987a\u5e8f\u5bf9\u64cd\u4f5c\u5e8f\u5217\u8fdb\u884c\u7684\u5206\u6cbb\u7b97\u6cd5\u3002\n\n\u800c\u79bb\u7ebf\u7b97\u6cd5\u53c8\u662f\u4ec0\u4e48\u5462\uff1f\n\n**\u201c\u79bb\u7ebf\u201d\u7b97\u6cd5 \u662f\u5728\u5c06\u4e00\u7cfb\u5217\u64cd\u4f5c\u4fdd\u5b58\u4e0b\u6765\uff0c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u8ba1\u7b97\uff0c\u518d\u7edf\u4e00\u8f93\u51fa\u201c\u67e5\u8be2\u201d\u7684\u7ed3\u679c\u3002**\n\n\u90a3\u4e48\u77e5\u9053\u4e86\u8fd9\u4e9b\u524d\u7f6e\u77e5\u8bc6\uff0c\u6211\u4eec\u5f00\u59cb\u770b\u9898\u3002\n\n# \u89e3\u6790\uff1a\n\u672c\u9898\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u8be2\u95ee\u65f6\uff0c**\u5e76\u6ca1\u6709\u4efb\u4f55\u7684\u4fee\u6539\u64cd\u4f5c**\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u628a\u5b83\u8f6c\u6362\u4e3a\u4e00\u4e2a\u4e8c\u7ef4\u504f\u5e8f\uff0c\u6309x\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u7136\u540ey\u4e3a\u7b2c\u4e8c\u4e2a\u5173\u952e\u5b57\uff0c\u5982\u6b64\u8fdb\u884c\u6392\u5e8f\u3002\u6c42\u77e9\u5f62\u5185\u90e8\u6570\u503c\u548c\u3002\u5c31\u50cf\u662f\u4e00\u4e2a\u4e8c\u7ef4\u524d\u7f00\u548c\u4e00\u6837\uff0c**\u6211\u4eec\u8ba1\u7b97\u51fa\u77e9\u5f62\u56db\u4e2a\u70b9\u7684\u5206\u522b\u5bf9\u5e94\u7684\u77e9\u5f62\u5185\u90e8\u529f\u7387\u548c\uff0c\u7136\u540e\u8fdb\u884c\u5bb9\u65a5\uff0c\u5373\u53ef\u7b97\u51fa\u7b54\u6848**\u3002\u800c\u5728\u9898\u89e3\u4e2d\u5927\u4f6c\u4eec\u90fd\u6ca1\u6709\u5177\u4f53\u8bb2\u89e3\u5173\u4e8e\u77e9\u9635\u62c6\u5206\u7684\u95ee\u9898\u3002\u90a3\u672c\u4eba\u7ed9\u5927\u5bb6\u8bb2\u4e00\u8bb2\u3002\n\n------------\n\n## First\n![](https://cdn.luogu.com.cn/upload/image_hosting/015w11oc.png)\n\u6211\u4eec\u9996\u5148\u5efa\u7acb\u4e00\u4e2a\u5750\u6807\u8f74\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728\u56fe\u7247\u4e2d\u5fc3\u7684\u90a3\u5757\u77e9\u5f62\u5176\u5b9e\u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684\u90a3\u4e00\u5757\u77e9\u5f62\u3002\u800c\u7ed9\u6211\u4eec\u7684\u70b9\u5176\u5b9e\u4e5f\u5c31\u662f\u53f3\u659c\u7740\u7684\u4e24\u4e2a\u5bf9\u89d2\u5750\u6807\u3002\n\n\n\n\n\n## Second\n![](https://cdn.luogu.com.cn/upload/image_hosting/avchugtm.png)\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u9009\u53d6\u51e0\u4e2a\u70b9\u4e3a\uff08a1-1,b2\uff09\u548c(a2,b1-1)\u548c\uff08a2,b2\uff09\u548c\uff08a1-1,b1-1\uff09\u3002\u800c\u8fd9\u51e0\u4e2a\u70b9\u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684\u51e0\u4e2a\u70b9\uff0c\u53ea\u8981\u6211\u4eec\u6c42\u51fa\u8fd9\u51e0\u4e2a\u70b9\u7684\u533a\u57df\u5185\u7684\u503c\uff0c\u7136\u540e\u5bb9\u65a5\u4e00\u4e0b\uff0c\u4e5f\u5c31\u662ff(a2,b2)-f(a2,b1-1)-f(a1-1,b2)+f(a1-1,b1-1)\u5373\u4e3a\u7b54\u6848\u3002\u800c\u8fd9\u65f6\u5927\u5bb6\u4f19\u4eec\uff0c\u53ef\u80fd\u4f1a\u6709\u7591\u95ee\uff0c\u54a6\uff1f\u4f60\u8fd9\u4e2a\u6c42\u7684\u4e1c\u897f\u597d\u50cf\u591a\u4e86\u4e00\u5757\uff0c\u600e\u4e48\u56de\u4e8b\u5462\uff1f\u770b\u4e0b\u9762\u4e00\u6b65\u3002\n\n\n\n\n\n## Third\n![](https://cdn.luogu.com.cn/upload/image_hosting/h1hsoqai.png)\n\n\u867d\u7136\u8bf4\u591a\u4e86\u4e00\u5757\uff0c\u4f46\u662f\u8fd9\u4e2a\u53ef\u4ee5\u4e0d\u7528\u8ba1\u5165\u8003\u8651\u4e2d\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u8fd9\u4e2a\u6d82\u9ed1\u7684\u533a\u57df\u5185\u662f\u4e0d\u53ef\u80fd\u518d\u51fa\u73b0\u503c\u7684\u4e86\uff0c\u56e0\u4e3a\u4ed6\u662f\u4e00\u4e2a\u5355\u4f4d\u957f\u5ea6\u4e00\u4e2a\u70b9\uff0c\u4e0d\u53ef\u80fd\u5c0f\u4e8e1\u4e2a\u5355\u4f4d\u957f\u5ea6\u7684\u60c5\u51b5\u4e0b\u51fa\u73b0\u70b9\uff0c\u65e2\u7136\u6ca1\u6709\u70b9\uff0c\u90a3\u5c31\u66f4\u4e0d\u53ef\u80fd\u6709\u6743\u503c\u4e86\uff0c\u800c\u90a3\u51e0\u4e2a\u8fb9\u754c\u70b9\uff08\u5de6\u4e0b\uff0c\u5de6\u4e0a\uff0c\u53f3\u4e0b\u4e09\u4e2a\u70b9\uff09\u88ab\u6211\u4eec\u7528\u53f3\u4e0a\u7684\u70b9\u7ed9\u51cf\u53bb\u4e86\uff0c\u6240\u4ee5\u662f\u4e0d\u4f1a\u6709\u4efb\u4f55\u5f71\u54cd\u7684\uff01\n\n\n------------\n\n\n## Fourth\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/dev1jlg7.png)\n\n\u6211\u4eec\u53ef\u5230\u8fd9\u4e9b\u88ab\u7528\u4e0d\u540c\u989c\u8272\u7684\u7b14\u753b\u4e86\u659c\u6760\u7684\u90e8\u5206\uff0c\u53ef\u4ee5\u8f7b\u6613\u5730\u770b\u51fa\u8fd9\u662f\u4e00\u4e2a\u5bb9\u65a5\uff0c\u4e5f\u5c31\u662ff(a2,b2)-f(a2,b1-1)-f(a1-1,b2)+f(a1-1,b1-1)\u3002\u90a3\u4e3a\u4ec0\u4e48\u6700\u540e\u8981\u52a0\u56de\u6765\u5462\uff1f\u56e0\u4e3a\u90a3\u5757\u5c0f\u6b63\u65b9\u5f62\u88ab\u51cf\u4e86\u4e24\u6b21\uff0c\u6240\u4ee5\u52a0\u56de\u6765\uff0c\u6700\u540e\u5373\u4e3a\u7b54\u6848\u3002\n\n\n\n### **code\uff1a**\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long n,m,t,ansl[1000009]; \nstruct node{\n\tlong long x,y,p,opt,k,ans,now;\n}a[1000009],b[1000009];\nbool comp1(node a,node b){\n    if(a.x!=b.x) return a.x<b.x; //\u6309\u7740\u4f18\u5148\u7ea7\u6392\u5e8f\n    else if(a.y!=b.y) return a.y<b.y;\n    else return a.opt<b.opt;\n}\nvoid solve(int l,int r){\n\tif(l==r) return;//\u5224\u65ad\u7684\u4e00\u4e2a\u8fb9\u754c\u6761\u4ef6\n\tlong long mid=(l+r)/2;\n\tsolve(l,mid);//\u9012\u5f52\u6c42\u89e3\n\tsolve(mid+1,r);\n\tlong long j=l,cnt=0,p=l,i=mid+1;\n\twhile(i<=r){\n\t\twhile(j<=mid&&a[j].y<=a[i].y){\n\t\t\tif(a[j].opt==1){\n\t\t\t  cnt+=a[j].p;\n\t\t\t}\n\t\t\tb[p++]=a[j++];\n\t\t}\n\t\tif(a[i].opt==2) a[i].ans+=cnt;\n\t\tb[p++]=a[i++];\n\t}\n\twhile(j<=mid) b[p++]=a[j++];\n\twhile(i<=r)  b[p++]=a[i++];\n\tfor(int i=l;i<=r;i++){\n\t\ta[i]=b[i];//\u66f4\u65b0\u7b54\u6848\n\t}\n}\nint main(){\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1;i<=n;i++){\n\tt++;\n\tscanf(\"%lld%lld%lld\",&a[t].x,&a[t].y,&a[t].p);\n\ta[t].opt=1;\u9ed8\u8ba4\u4e3a\u4fee\u6539\u64cd\u4f5c\n\ta[t].k=0;\n\ta[t].ans=0;\n\ta[t].now=0;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tlong long xx,yy,x2,y2;\n\t\tscanf(\"%lld%lld%lld%lld\",&xx,&yy,&x2,&y2);\n\t    a[++t].x=xx-1;\n\t    a[t].y=yy-1;\n\t    a[t].opt=2;//\u4e0e\u5f00\u59cb\u7684\u4fee\u6539\u64cd\u4f5c\u76f8\u533a\u5206\n\t    a[t].p=0;\n\t    a[t].ans=0;\n\t    a[t].k=1;//\u52a0\u51cf\u7684\u7edf\u8ba1\uff0c\u5728\u6700\u540e\u9760\u8fd9\u4e2a\u5224\u65ad\u5bb9\u65a5\n\t    a[t].now=i;//\u8bb0\u5f55\u7b54\u6848\u7684\u8f93\u51fa\u5730\u65b9\n\t    \n\t\ta[++t].x=xx-1;\n\t    a[t].y=y2;\n\t    a[t].opt=2;\n\t    a[t].k=-1;\n\t    a[t].ans=0;\n\t    a[t].p=0;\n\t    a[t].now=i;\n\t    \n\t    a[++t].x=x2;\n\t    a[t].y=yy-1;\n\t    a[t].opt=2;\n\t    a[t].now=i;\n\t    a[t].k=-1;\n\t    a[t].ans=0;\n\t    a[t].p=0;\n\t    \n\t    a[++t].x=x2;\n\t    a[t].y=y2;\n\t    a[t].ans=0;\n\t    a[t].opt=2;\n\t    a[t].p=0;\n\t    a[t].k=1;\n\t    a[t].now=i;\n\t}\n\tsort(a+1,a+t+1,comp1);//\u6392\u5e8f\n\tsolve(1,t);\n\tfor(int i=1;i<=t;i++){\n\tansl[a[i].now]+=a[i].k*a[i].ans;\n\t}//\u6c42\u89e3\u7b54\u6848\n\tfor(int i=1;i<=m;i++) printf(\"%lld\\n\",ansl[i]);\n\treturn 0;\n}\n```",
        "postTime": 1596773262,
        "uid": 206021,
        "name": "Pitiless0514",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3755 \u3010[CQOI2017]\u8001C\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "## \u3010\u9898\u610f\u3011\n\n\u4e8c\u7ef4\u5e73\u9762\u5185\u6570\u77e9\u5f62\u533a\u57df\u5185\u7684\u70b9\u6743\u548c\u3002\n\n## \u3010\u5206\u6790\u3011\n\n\u5e73\u9762\u6570\u70b9\u95ee\u9898\uff0c\u5c31\u662f $K-D\\ Tree$ \u7684\u677f\u5b50\u3002\n\n\u975e\u5e38\u5957\u8def\u5730\uff0c\u5728\u6bcf\u4e2a\u70b9\u4e0a\u7ef4\u62a4\u5b50\u6811\u5185\u70b9\u7684\u5750\u6807\u6781\u503c\uff0c\u5728\u641c\u7d22\u65f6\u8fdb\u884c\u526a\u679d\u3002\n\n\u5355\u6b21\u64cd\u4f5c\u590d\u6742\u5ea6\u662f $O(n^{\\frac{k-1}{k}})$\uff0c\u90a3\u4e48\u603b\u590d\u6742\u5ea6\u5c31\u662f $O(n\\cdot \\sqrt n)$\uff0c\u8db3\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n## \u3010\u7b97\u6cd5\u3011\n\nK-D Tree\n\n## \u3010\u4ee3\u7801\u3011\n\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\nusing namespace std;\nconst int maxn=1e5+5,maxt=maxn*30;\nconst double A=0.75;\nint n,m;\nchar gc(){\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\n#define getchar gc\nint read(){\n    int ret=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n    while(ch>='0'&&ch<='9') ret=ret*10+ch-'0',ch=getchar();\n    return ret*f;\n}\nstruct point{\n    int x[2];\n    int p;\n}p[maxn];\nint D;\nbool cmp(point x,point y){\n    return x.x[D]<y.x[D];\n}\nstruct KDT{\n\tint rt,tot;\n\tint rub[maxn],top;\n\tstruct ele{\n\t    point p;\n\t    int mx[2],mi[2];\n\t    int l,r,s;\n\t    LL S;\n\t}t[maxn];\n\t#define ls(k) t[k].l\n\t#define rs(k) t[k].r\n\t#define s(k) t[k].s\n\t#define p(k) t[k].p\n\t#define S(k) t[k].S\n\t#define mid (l+r>>1)\n\tvoid pushup(int k){\n\t    s(k)=1;\n\t    S(k)=p(k).p;\n\t    t[k].mx[0]=t[k].mi[0]=p(k).x[0];\n\t    t[k].mx[1]=t[k].mi[1]=p(k).x[1];\n\t    if(ls(k)){\n\t\t\tt[k].mx[0]=max(t[k].mx[0],t[ls(k)].mx[0]);\n\t\t\tt[k].mx[1]=max(t[k].mx[1],t[ls(k)].mx[1]);\n\t\t\tt[k].mi[0]=min(t[k].mi[0],t[ls(k)].mi[0]);\n\t\t\tt[k].mi[1]=min(t[k].mi[1],t[ls(k)].mi[1]);\n\t        s(k)+=s(ls(k));\n\t        S(k)+=S(ls(k));\n\t    }\n\t    if(rs(k)){\n\t\t\tt[k].mx[0]=max(t[k].mx[0],t[rs(k)].mx[0]);\n\t\t\tt[k].mx[1]=max(t[k].mx[1],t[rs(k)].mx[1]);\n\t\t\tt[k].mi[0]=min(t[k].mi[0],t[rs(k)].mi[0]);\n\t\t\tt[k].mi[1]=min(t[k].mi[1],t[rs(k)].mi[1]);\n\t        s(k)+=s(rs(k));\n\t        S(k)+=S(rs(k));\n\t    }\n\t}\n\tint New(){\n\t    return top?rub[top--]:++tot;\n\t}\n\tint build(int l,int r,int d){\n\t    if(l>r) return 0;\n\t    int k=New();\n\t    D=d;\n\t    nth_element(p+l,p+mid,p+1+r,cmp);\n\t    p(k)=p[mid];\n\t    ls(k)=build(l,mid-1,d^1);\n\t    rs(k)=build(mid+1,r,d^1);\n\t    pushup(k);\n\t    return k;\n\t}\n\tvoid clear(int k,int pos){\n\t    if(ls(k)) clear(ls(k),pos);\n\t    p[pos+s(ls(k))+1]=p(k);\n\t    rub[++top]=k;\n\t    if(rs(k)) clear(rs(k),pos+s(ls(k))+1);\n\t}\n\tvoid check(int &k,int d){\n\t    int c=A*s(k);\n\t    if(s(ls(k))>c||s(rs(k))>c){\n\t        clear(k,0);\n\t        k=build(1,s(k),d);\n\t    }\n\t}\n\tvoid insert(int &k,point p,int d){\n\t    if(!k){k=New(),ls(k)=rs(k)=0,p(k)=p,pushup(k);return;}\n\t    if(p.x[d]<=p(k).x[d]) insert(ls(k),p,d^1);\n\t    else insert(rs(k),p,d^1);\n\t    pushup(k);\n\t    check(k,d);\n\t}\n\tLL query(int k,int u,int l,int d,int r){\n\t\tif(u>t[k].mx[0]||d<t[k].mi[0]||l>t[k].mx[1]||r<t[k].mi[1]) return 0;\n\t\tLL ret=0;\n\t\tif(u<=t[k].mi[0]&&t[k].mx[0]<=d&&l<=t[k].mi[1]&&t[k].mx[1]<=r) return S(k);\n\t\tif(u<=p(k).x[0]&&p(k).x[0]<=d&&l<=p(k).x[1]&&p(k).x[1]<=r) ret+=p(k).p;\n\t\tif(ls(k)) ret+=query(ls(k),u,l,d,r);\n\t\tif(rs(k)) ret+=query(rs(k),u,l,d,r);\n\t\treturn ret;\n\t}\n}T;\nint main(){\n\tfreopen(\"P3755.in\",\"r\",stdin);\n\tfreopen(\"P3755.out\",\"w\",stdout);\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++){\n\t\tint x=read(),y=read(),p=read();\n\t\tT.insert(T.rt,(point){x,y,p},0);\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint u=read(),l=read(),d=read(),r=read();\n\t\tprintf(\"%lld\\n\",T.query(T.rt,u,l,d,r));\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1635941158,
        "uid": 116251,
        "name": "\u7834\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3755 \u3010[CQOI2017]\u8001C\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "# CDQ\u5206\u6cbb\u7b97\u6cd5(\u4e8c\u7ef4\u504f\u5e8f)\n\n\u6211\u4e00\u7ffb\u9898\u89e3\uff0c\u53d1\u73b0\u53ea\u6709\u4e24\u7bc7 $CDQ$ \u7b97\u6cd5\u3002\u5176\u4e2d\u4e00\u7bc7\u6c42\u4e86\u4e2a\u4e09\u4f4d\u504f\u5e8f\uff0c~~**\u7565\u663e\u590d\u6742**~~\uff0c\u53e6\u5916\u4e00\u7bc7\u5462~~\u53d9\u8ff0**\u592a\u8fc7\u7b80\u7565**~~\uff0c\u6700\u8fd1\u521a\u597d\u53c8\u5728\u505a $CDQ$ \u7684\u9898\uff0c\u6240\u4ee5\u63d0\u4f9b\u4e00\u7bc7 $CDQ$ \u7b97\u6cd5\u7684\u8be6\u7ec6\u89e3\u7b54\u65b9\u6848\u3002\n\n\u82e5\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f $CDQ$ \u7b97\u6cd5\u7684\u540c\u5b66\u53ef\u4ee5\u5148\u4e86\u89e3\u4e00\u4e0b\uff1a\n[CDQ\u7b97\u6cd5\u4f20\u9001\u95e8](https://www.luogu.com.cn/blog/TX-20060303-ldlh/solution-p4169)\n\n## \u9898\u76ee\u5927\u610f\n\n- \u7ed9\u51fa $n$ \u4e2a\u70b9\u4ee5\u53ca\u5176\u6743\u503c\uff0c\u63d0\u51fa $m$ \u6b21\u8be2\u95ee\u3002\n\n- \u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u533a\u95f4\u8303\u56f4\uff0c\u6c42\u533a\u95f4\u91cc\u5305\u542b(**\u8fb9\u754c\u4e0a\u7684\u70b9\u4e5f\u8981\u8ba1\u7b97\u5728\u5185**)\u70b9\u7684\u6743\u503c\u548c\u3002\n\n## \u89e3\u51b3\u65b9\u6848\n\n### \u521d\u6b65\u5c1d\u8bd5\n\n\u7531\u9898\u610f\uff0c\u6211\u4eec\u53ef\u4ee5\u753b\u51fa\u4e00\u5f20\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/n4q1bk2p.png)\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u5c31\u662f\u5728\u6c42\u7ea2\u8272\u533a\u57df\u5185\u7684**\u70b9\u6743\u548c**\u3002\u5982\u4f55\u8ba1\u7b97\uff1f\u6211\u4eec\u53ef\u4ee5\u5148\u5c06\u6240\u6709\u7684\u70b9\u4ee5 $x$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u3001$y$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57**\u5347\u5e8f\u6392\u5217**\uff0c\u5982\u4e0b\uff1a\n\n```cpp\ninline bool cmp1(node a,node b)\t\t//\u4ee5x\u4e3a\u7b2c\u4e00\u5173\u952e\u8bcd\u6392\u5e8f \n{\n    if(a.x!=b.x) return a.x<b.x;\n    else if(a.y!=b.y) return a.y<b.y;\n    else return a.opt<b.opt;\n}\n```\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u7528 $CDQ$ \u5206\u6cbb\u7b97\u6cd5\u7edf\u8ba1\u70b9  $x$ **\u5de6\u4e0b\u65b9\u6240\u6709\u70b9\u7684\u6743\u503c**\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u6309\u7167x\u7684\u5347\u5e8f\u6392\u5217\u540e\uff0c\u6bcf\u6b21\u5206\u6cbb\u4e24\u5757\uff0c\u53f3\u8fb9\u7684\u4e00\u5757 $x$ \u5750\u6807\u80af\u5b9a\u5927\u4e8e\u5de6\u8fb9\u7684\u4e00\u5757\uff0c\u6211\u4eec\u53ea\u9700\u8981**\u6bd4\u8f83 $y$ \u5750\u6807\u7684\u5927\u5c0f**\u5373\u53ef\u3002\u6211\u4eec\u5728\u5224\u65ad\u524d\u5bf9\u6bcf\u4e2a\u5757**\u4ee5 $y$ \u4e3a\u7b2c\u4e00\u5173\u952e\u8bcd**\u8fdb\u884c\u4e00\u6b21\u6392\u5e8f\uff0c\u5219\u53ef\u4ee5\u5728**\u904d\u5386\u5230\u6bd4\u5de6\u8fb9\u5757 $y$ \u5750\u6807\u5927\u7684\u503c\u65f6**\uff0c\u53ef\u4ee5**\u76f4\u63a5\u9000\u51fa\u5faa\u73af**\u3002\u5219\u5f53\u8bbf\u95ee\u5230\u7ed9\u51fa\u533a\u95f4\u7684\u7aef\u70b9\u65f6\uff0c\u5fc5\u7136**\u5df2\u7ecf\u904d\u5386**\u8fc7\u5176\u5de6\u4e0b\u65b9\u7684\u6240\u6709\u70b9\uff0c\u7528\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u6743\u503c\uff0c\u6211\u4eec\u5c31\u80fd\u5206\u522b\u6c42\u5f97\u533a\u95f4\u56db\u4e2a\u7aef\u70b9**\u5de6\u4e0b\u65b9\u6240\u6709\u70b9\u7684\u6743\u503c\u548c**\u3002\n\n\u5230\u4e86\u8fd9\u513f\uff0c\u6211\u76f8\u4fe1\u5927\u5bb6\u90fd\u80fd\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u5bf9\u7b54\u6848\u8fdb\u884c**\u5bb9\u65a5**\u3002\u8bbe $a[i].ans$ \u4e3a\u7aef\u70b9 $i$ \u5de6\u4e0b\u65b9\u6240\u6709\u70b9\u7684\u6743\u503c\u548c\u3002\u5219\u7b54\u6848\u5c31\u662f\n\n$$ans=a[(a2,b2)].ans+a[a1,b1].ans-a[a1,b2].ans-a[a2,b1].ans$$\n\n### \u6539\u6b63\u9519\u8bef\n\n\u4f46\u679c\u771f\u5982\u6b64\u5417\uff1f\u7ecf\u8fc7~~\u4e00\u7cfb\u5217\u7684\u9519\u8bef~~\uff0c\u6211\u53d1\u73b0\uff0c\u6211\u4eec\u51cf\u53bb\u7684\u4e24\u4e2a\u533a\u95f4\u521a\u597d\u4e5f\u51cf\u6389\u4e86\u7ea2\u8272\u90e8\u5206\u7684\u8fb9\u754c\u3002\u800c\u9898\u76ee\u8981\u6c42\u6211\u4eec\u8981**\u5c06\u8fb9\u754c\u8ba1\u7b97\u5728\u5185**\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53c8\u80fd\u753b\u51fa\u4e0b\u9762\u8fd9\u5f20\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/c3smc275.png)\n\n\u6211\u4eec\u7684\u8fb9\u754c\u5206\u522b\u5411 $x$ \u8f74\u548c $y$ \u8f74**\u6269\u5f20**\u4e86 $1$\uff0c\u6b64\u65f6\u6211\u4eec\u518d\u8fdb\u884c\u5bb9\u65a5\uff0c**\u5c31\u4f1a\u628a $x=a1-1$ \u548c $y=b1-1$ \u8fd9\u4e24\u6761\u7ebf\u4e0a\u7684\u70b9\u5bb9\u65a5\u6389**\u3002\u6240\u4ee5\uff0c\u6700\u540e\u7684\u7ec8\u6781\u56fe\u4e3a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/4xw1zcmk.png)\n\n\u4ece\u6574\u4e2a\u77e9\u5f62\u4e2d\u51cf\u53bb\u9ec4\u8272\u90e8\u5206\uff0c\u7531\u4e8e**\u6a59\u8272\u90e8\u5206\u88ab\u51cf\u53bb\u4e86\u4e24\u6b21**\uff0c\u9700\u8981\u52a0\u56de\u6765\u4e00\u6b21\uff0c\u6700\u7ec8\u7684\u516c\u5f0f\u4e3a\uff1a\n\n$$ans=a[(a2,b2)].ans+a[a1-1,b1-1].ans-a[a1-1,b2].ans-a[a2,b1-1].ans$$\n\n## \u5c0f\u7ed3\n\n\u8fd9\u9053\u9898\u7684\u505a\u6cd5\u5f88\u591a\uff0c\u5206\u5757\uff0c $CDQ$ \u7b97\u6cd5\uff0c $KD-Tree$ \u7b97\u6cd5\u2026\u2026\u5728 $CDQ$ \u4e2d\u52a0\u4e86**\u5bb9\u65a5**\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u8bf4\u662f\u4e00\u9053\u6bd4\u8f83\u7efc\u5408\u7684\u9898\u76ee\u3002\n\n## Code\n\n\u63a5\u4e0b\u6765\u6211\u53d1\u51fa $AC$ \u4ee3\u7801\uff0c\u5927\u5bb6\u53ef\u4ee5\u7ed3\u5408\u7406\u89e3\u4e00\u4e0b\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=1001001;\nint n,m,tot;\n//x\u3001y\u5b58\u5750\u6807\uff0cval\u5b58\u50a8\u70b9\u6743\uff0copt\u8868\u793a\u6b64\u6b21\u64cd\u4f5c\u7684\u6027\u8d28(\u67e5\u8be2\u6216\u63d2\u5165)\uff0ck\u662f\u5bb9\u65a5\u7cfb\u6570\uff0cnum\u662f\u8be2\u95ee\u811a\u6807 \nstruct node{\n\tll x,y,val,opt,k,num,ans;\n}a[maxn],b[maxn];\nll ans[maxn];\n\ninline bool cmp1(node a,node b)\t\t//\u4ee5x\u4e3a\u7b2c\u4e00\u5173\u952e\u8bcd\u6392\u5e8f \n{\n    if(a.x!=b.x) return a.x<b.x;\n    else if(a.y!=b.y) return a.y<b.y;\n    else return a.opt<b.opt;\n}\n\ninline bool cmp2(node a,node b) \t//\u4ee5y\u4e3a\u7b2c\u4e00\u5173\u952e\u8bcd\u6392\u5e8f \n{\n\tif(a.y!=b.y) return a.y<b.y;\n\telse if(a.x!=b.x) return a.x<b.x;\n\telse return a.opt<b.opt;\n}\n//\u5206\u6cbb\u6838\u5fc3\u4ee3\u7801 \ninline void solve(int l,int r)\n{\n    if(l==r) return;\n    int mid=(l+r)>>1;\n    solve(l,mid); solve(mid+1,r);\n \t//\u8bb0\u5f55\u70b9\u6743\u524d\u7f00\u548c(\u76ee\u524d\u904d\u5386\u5230\u7684\u70b9\u7684\u70b9\u6743\u548c) \n\tll cnt=0;\n\tint L=l,R=mid+1,temp=l; \n\tsort(a+l,a+mid+1,cmp2);\t\t//\u5de6\u53f3\u4e24\u5757\u5206\u522b\u6392\u5e8f \n\tsort(a+mid+1,a+r+1,cmp2); \n    while(R<=r){\n        while(a[L].y<=a[R].y&&L<=mid){\n            if(a[L].opt==1) cnt+=a[L].val;\n            b[temp++]=a[L++];\n        }\n        if(a[R].opt==2) a[R].ans+=cnt;\t//\u66f4\u65b0 \n        b[temp++]=a[R++];\n    }\n    while(L<=mid) \n\t\tb[temp++]=a[L++];\n    while(R<=r) \n\t\tb[temp++]=a[R++];\n    for(int i=l;i<=r;++i)\t//\u66f4\u65b0\u7b54\u6848 \n\t\ta[i]=b[i];\t\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    int x,y; ll z; \n    //\u5c06\u521d\u59cb\u70b9\u770b\u4f5c\u662f\u63d2\u5165\u64cd\u4f5c \n    for(int i=1;i<=n;++i){\n        scanf(\"%d%d%lld\",&x,&y,&z);\n        a[++tot].x=x; a[tot].y=y;\n\t\ta[tot].val=z; a[tot].opt=1;\n    }\n    int x1,x2,y1,y2;\n \t//opt==1\u8868\u793a\u63d2\u5165\uff0copt==2\u8868\u793a\u67e5\u8be2 \n    for(int i=1;i<=m;++i){\n        scanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n        a[++tot].x=x2; a[tot].y=y2;\n        a[tot].opt=2; a[tot].k=1; a[tot].num=i;\n        a[++tot].x=x1-1; a[tot].y=y1-1;\n        a[tot].opt=2; a[tot].k=1; a[tot].num=i;\n        a[++tot].x=x1-1; a[tot].y=y2;\n        a[tot].opt=2; a[tot].k=-1; a[tot].num=i;\n        a[++tot].x=x2; a[tot].y=y1-1;\n        a[tot].opt=2; a[tot].k=-1; a[tot].num=i;\n    }\n    sort(a+1,a+1+tot,cmp1);\n    solve(1,tot);\n    for(int i=1;i<=tot;++i)\t\t//\u4e00\u6ce2\u5bb9\u65a5 \n    \tif(a[i].opt==2) ans[a[i].num]+=a[i].k*a[i].ans;\n    for(int i=1;i<=m;++i)\n    \tprintf(\"%lld\\n\",ans[i]);\n    return 0;\n}\n```\n",
        "postTime": 1596793189,
        "uid": 258460,
        "name": "Booksnow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3755 \u3010[CQOI2017]\u8001C\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u5927\u5bb6\u4e0d\u5199KD-Tree......\n\n\u660e\u660e\u597d\u5199\u597d\u8c03\u80fdAC\u7684......\n\n\u672c\u9898\u4e3aKD-Tree\u88f8\u9898\uff0c\u76f4\u63a5\u5efa\u7acbKD-Tree\u540e\u67e5\u8be2\u77e9\u9635\u548c\u5c31\u597d\u3002\n\n\u5355\u6b21\u590d\u6742\u5ea6\u4e3asqrt(n)\uff0c\u6709\u4e00\u4e2a\u8bc1\u660e\u662f\u5728\u4e8c\u7ef4KD-Tree\u4e0a\u4efb\u610f\u4e00\u6761\u5e73\u884c\u4e8e\u5750\u6807\u8f74\u7684\u76f4\u7ebf\u4e0d\u4f1a\u7ecf\u8fc7\u8d85\u8fc7sqrt(n)\u4e2a\u8282\u70b9\u3002\n\n\u6240\u4ee5\u672c\u9898\u590d\u6742\u5ea6O(n*sqrt(n))\uff0c10w\u968f\u4fbf\u8fc7\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define debug cout\ntypedef long long int lli;\nusing namespace std;\nconst int maxn=1e5+1e2;\n\nint cmp;\nstruct Point {\n    int d[2],val;\n    friend bool operator < (const Point &a,const Point &b) {\n        return a.d[cmp] < b.d[cmp];\n    }\n}ps[maxn],nv[maxn];\nstruct QNode {\n    int mi[2],mx[2];\n}q;\nint lson[maxn],rson[maxn],mi[maxn][2],mx[maxn][2],cnt;\nlli su[maxn],ans; // remember to reset ans before query !\n\ninline void fill(const int &pos,const Point &p) {\n    nv[pos] = p , su[pos] = p.val;\n    for(register int i=0;i<2;i++) mx[pos][i] = mi[pos][i] = p.d[i];\n}\ninline void up(const int &pos,const int &son) {\n    su[pos] += su[son];\n    for(register int i=0;i<2;i++)\n        mi[pos][i] = min( mi[pos][i] , mi[son][i] ) ,\n        mx[pos][i] = max( mx[pos][i] , mx[son][i] ) ;\n}\ninline void build(int pos,const int &dir,const int &ll,const int &rr) {\n    const int mid = ( ll + rr ) >> 1;\n    cmp = dir , nth_element(ps+ll,ps+mid,ps+rr+1);\n    fill(pos,ps[mid]);\n    if( ll < mid ) build(lson[pos]=++cnt,dir^1,ll,mid-1) , up(pos,lson[pos]);\n    if( mid < rr ) build(rson[pos]=++cnt,dir^1,mid+1,rr) , up(pos,rson[pos]);\n}\ninline bool fullout(const int &pos) {\n    for(register int i=0;i<2;i++) if( q.mx[i] < mi[pos][i] || mx[pos][i] < q.mi[i] ) return 1;\n    return 0;\n}\ninline bool fullin(const int &pos) {\n    for(register int i=0;i<2;i++) if( ! ( q.mi[i] <= mi[pos][i] && mx[pos][i] <= q.mx[i] ) ) return 0;\n    return 1;\n}\ninline bool pointin(const Point &p) {\n    for(register int i=0;i<2;i++) if( ! ( q.mi[i] <= p.d[i] && p.d[i] <= q.mx[i] ) ) return 0;\n    return 1;\n}\ninline void query(const int &pos) {\n    if( fullout(pos) ) return;\n    if( fullin(pos) ) return void(ans+=su[pos]);\n    if( pointin(nv[pos]) ) ans += nv[pos].val;\n    query(lson[pos]) , query(rson[pos]);\n}\n\nint main() {\n    static int n,m;\n    scanf(\"%d%d\",&n,&m);\n    for(register int i=1;i<=n;i++) scanf(\"%d%d%d\",ps[i].d,ps[i].d+1,&ps[i].val);\n    build(cnt=1,0,1,n);\n    for(register int i=1;i<=m;i++) {\n        for(register int i=0;i<2;i++) scanf(\"%d\",q.mi+i);\n        for(register int i=0;i<2;i++) scanf(\"%d\",q.mx+i);\n        ans = 0 , query(1);\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1523447260,
        "uid": 31907,
        "name": "cmd2001",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3755 \u3010[CQOI2017]\u8001C\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u6211\u77e5\u9053\u8fd9\u5f53\u7136\u662f\u79bb\u7ebf\u626b\u63cf\u7ebf\u5566~\n\n\u5355\u70b9\u52a0\u77e9\u5f62\u6c42\u548c\uff0c\u6700\u6700\u7ecf\u5178\u7684\u79bb\u7ebf\u626b\u63cf\u7ebf\u95ee\u9898\u4e86\n\n\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u5c31\u53ef\u4ee5\u7ef4\u62a4\uff0c\u771f\u662f\u53c8\u4f18\u96c5\u53c8\u5de7\u5999\u7684\u7b97\u6cd5~\n\n\u8bf4\u7684\u597d\u6211\u9009\u62e9\u4e3b\u5e2d\u6811~\n\n## \u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811/\u524d\u7f00\u548c\u5957\u7ebf\u6bb5\u6811\n\n~~(\u4ec0\u4e48\u4f60\u4e0d\u4f1a\u4e3b\u5e2d\u6811\uff1f\uff0c\u51fa\u95e8\u5de6\u8f6c\u4f60\u7ad9\u819c\u677f\u533a\uff0c\u5305\u6559\u5305\u4f1a)~~\n\n(\u8fd9\u91cc\u6211\u4eec\u5c31\u9ed8\u8ba4\u4f60\u4f1a\u4e86\u4e3b\u5e2d\u6811\uff0c\u4e0d\u4f1a\u7684\u8bdd\u8d76\u7d27\u5b66\u4e00\u5b66\uff0c\u56e0\u4e3a\u4e3b\u5e2d\u6811\u771f\u7684\u5f88\u65e0\u8111)\n\n\u55ef\u8fd9\u9053\u9898\u5c31\u662f\u524d\u7f00\u548c\u5957\u7ebf\u6bb5\u6811\u4e86\n\n\u56e0\u4e3a\u6211\u4eec\u53d1\u73b0\u76f4\u63a5\u79bb\u6563\u5316\u4e8c\u7ef4\u524d\u7f00\u548c\u4f1aT\u98de\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u4e00\u7ef4\u7528\u7ebf\u6bb5\u6811\u66ff\u4ee3\uff0c\u53e6\u4e00\u4f4d\u8fd8\u662f\u524d\u7f00\u548c\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u524d\u7f00\u548c\u5957\u7ebf\u6bb5\u6811\u5c31\u662f\u4e3b\u5e2d\u6811\u4e86\n\n\u6211\u4eec\u8003\u8651\u628ax\u548cy\u90fd\u79bb\u6563\u5316\uff0c\u7136\u540e\u4ee5x\u4e3a\u65f6\u95f4\u70b9\uff0cy\u4e3a\u533a\u95f4\u70b9\u4f9d\u6b21\u5728\u4e3b\u5e2d\u6811\u4e0a\u505an\u6b21\u5355\u70b9\u52a0\u5de5\u4f5c\uff0c(\u8fd9\u91cc\u56e0\u4e3a\u53ea\u662f\u5355\u70b9\u52a0\u6240\u4ee5\u53ef\u4ee5\u6807\u8bb0\u6c38\u4e45\u5316)\n\n\u4e4b\u540e\u6211\u4eec\u67e5\u8be2\u77e9\u5f62\u533a\u57df\u7684\u52a0\u6cd5\uff0c\u7b2c\u4e00\u7ef4\u7528\u524d\u7f00\u548c\u641e\u5b9a\n\n\u5373\u7b54\u6848\u5c31\u662f **x\u5c0f\u4e8e\u7b49\u4e8ex2**,y\u5728y1\u5230y2\u7684\u70b9\u7684\u70b9\u6743\u548c-**x\u5c0f\u4e8ex1**,y\u5728y1\u5230y2\u7684\u70b9\u7684\u70b9\u6743\u548c\uff0c\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e24\u4e2a\u5411\u8d1f\u65e0\u7a77\u65e0\u9650\u5ef6\u4f38\u7684\u77e9\u5f62\u76f8\u51cf\n\n\u90a3\u4e48\u8fd9\u4e2a\u7b2c\u4e8c\u7ef4\u7684\u8be2\u95ee\u53ef\u4ee5\u7528\u4e3b\u5e2d\u6811\u4e0a\u7684\u7ebf\u6bb5\u6811\u64cd\u4f5c\u89e3\u51b3\uff0c\u56e0\u4e3a\u4e3b\u5e2d\u6811\u6bcf\u4e00\u4e2a\u7248\u672c\u7684\u7ebf\u6bb5\u6811\u90fd\u662f\u8fd9\u4e2a\u65f6\u95f4\u70b9\u4e4b\u524d\u5404\u4e2a\u64cd\u4f5c\u7684\u7d2f\u52a0\uff0c\u4e5f\u5c31\u662f\u524d\u7f00\u548c\uff0c\u800c\u6bcf\u4e00\u4e2a\u524d\u7f00\u548c\u90fd\u8d44\u74f7\u7ebf\u6bb5\u6811\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u8fd9\u6837\u6109\u5feb\u89e3\u51b3\u4e86\u4e24\u7ef4\u7684\u9650\u5236~\n\n## \u79bb\u6563\u5316\u548c\u6620\u5c04\n\n\u5176\u5b9e\u79bb\u6563\u5316\u5904\u7406\u7684\u4e0d\u597d\u633a\u8ba9\u4eba\u5934\u75bc\u7684\u2026\u2026\uff0c\u8fd9\u91cc\u6211\u4eec\u638c\u63e1\u4e00\u4e2a\u539f\u5219\uff0c\u6211\u4eec\u6bcf\u6b21\u90fd\u8981\u575a\u6301\u4e00\u79cd\u533a\u95f4\u63cf\u8ff0\u6cd5\u4e0d\u52a8\u6447\uff0c(\u6211\u7528\u7684\u662f\u975e\u5e38\u90aa\u6559\u7684\u5de6\u5f00\u53f3\u95ed\uff0c\u4f46\u662f\u8fd9\u548c\u524d\u7f00\u548c\u7684\u533a\u95f4\u63cf\u8ff0\u6cd5\u662f\u4e00\u6837\u7684)\n\n\u552f\u4e00\u9700\u8981\u6ce8\u610f\u7684\u662f\u56e0\u4e3a\u6211\u4eec\u79bb\u6563\u5316\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e8c\u5206\u67e5\u627e\u8fd9\u4e2a\u8be2\u95ee\u7684x\u548cy\n\n\u56e0\u4e3a\u6211\u4eec\u4e0d\u60f3\u624b\u5199\u4e8c\u5206\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4f7f\u7528STL\u7684lower_bound\u51fd\u6570\u548cupper_bound\u51fd\u6570\u6765\u5e2e\u52a9\u6211\u4eec\u5b8c\u6210\u6620\u5c04\n\nlower_bound\u683c\u5f0f\u5982\u4e0b:(\u8fed\u4ee3\u5668\u5934\uff0c\u8fed\u4ee3\u5668\u5c3e\uff0c\u6bd4\u8f83\u503c\uff0c\u6bd4\u8f83\u51fd\u6570)\n\n\u5176\u4e2d\u8fed\u4ee3\u5668\u5934\u548c\u8fed\u4ee3\u5668\u5c3e\u5982\u679c\u662f\u6570\u7ec4\u7684\u8bdd\u5c31\u4f20\u6307\u9488\uff0c\u5982\u679c\u662fvector\u7684\u8bdd\u5c31\u4f20v.begin(),v.end(),\u6ce8\u610f\u8fd9\u91cc\u7684\u533a\u95f4\u63cf\u8ff0\u6cd5\u662f\u5de6\u95ed\u53f3\u5f00\u7684\u2026\u2026\uff0c\u6bd4\u8f83\u503c\u7684\u7c7b\u578b\u5c31\u662f\u8fd9\u4e2a\u6570\u7ec4/vector\u5b58\u50a8\u7684\u7c7b\u578b\uff0c\u6bd4\u8f83\u51fd\u6570\u5c31\u662f\u4f60\u624b\u5199\u7684cmp\n\n\u8fd4\u56de\u503c:\u4e00\u4e2a\u8fed\u4ee3\u5668/\u5982\u679c\u6570\u7ec4\u7684\u8bdd\u8fd4\u56de\u6307\u9488\uff0c\u8fed\u4ee3\u5668/\u6307\u9488\u6307\u5411\u7b2c\u4e00\u4e2a**\u5927\u4e8e\u6216\u7b49\u4e8e**\u6bd4\u8f83\u503c\u7684\u503c\n\nupper_bound\u540clower_bound\u53ea\u662f\u8fd4\u56de\u503c\u4fdd\u8bc1\u4e25\u683c\u5927\u4e8e\u67e5\u627e\u503c\n\n\u6240\u4ee5\u6211\u4eec\u5728\u6570\u7ec4\u91cc\u63d2\u5165\u4e00\u4e2a0x7f7f7f7f\u7684\u54e8\u5175\uff0c\u7136\u540elower_bound\u4e00\u53d1\u5de6\u7aef\u70b9\uff0cupper_bound\u4e00\u53d1\u53f3\u7aef\u70b9\uff0c\u4e24\u4e2a\u5206\u522b-1\u5c31\u662f\u5de6\u5f00\u53f3\u95ed\u7684\u533a\u95f4\u63cf\u8ff0\u5566~\n\n\u4ee3\u7801\u5f88\u77ed\uff0c\u5177\u4f53\u7ec6\u8282\u770b\u4ee3\u7801~\n\n\u4e0a\u4ee3\u7801~\n\n```C\n#include<cstdio>\n#include<algorithm>\nusing namespace std;const int N=1e5+10;typedef long long ll;int n;int m;\nstruct per_linetree//\u4e3b\u5e2d\u6811\u677f\u5b50\u6ca1\u5565\u597d\u8bf4\u7684 \n{\n\tint s[2][22*N];ll val[22*N];int root[N];int cnt;\n\tint tim;per_linetree(){root[0]=++cnt;}\n\tinline void cson(int p1,int p2,int t){s[t][p2]=++cnt;s[t^1][p2]=s[t^1][p1];}\n\tinline void sadd(int p1,int p2,int l,int r,int pos,ll plus)\n\t{\n\t\tval[p2]=val[p1]+plus;if(r-l==1){return;}int mid=(l+r)/2;\n\t\tif(pos<=mid){cson(p1,p2,0);sadd(s[0][p1],cnt,l,mid,pos,plus);}\n\t\telse {cson(p1,p2,1);sadd(s[1][p1],cnt,mid,r,pos,plus);}\n\t}\n\tinline ll sum(int p,int l,int r,int dl,int dr)\n\t{\n\t\tif((dl==l&&dr==r)||p==0){return val[p];}int mid=(l+r)/2;ll ret=0;\n\t\tif(dl<mid){ret+=sum(s[0][p],l,mid,dl,min(dr,mid));}\n\t\tif(mid<dr){ret+=sum(s[1][p],mid,r,max(dl,mid),dr);}return ret;\n\t}\n\tinline int cadd(int pos,ll plus)//\u8fd9\u91cc\u8fd4\u56de\u4e00\u4e2a\u7248\u672c\u53f7 \n\t{sadd(root[tim],root[tim+1]=++cnt,0,n,pos,plus);return ++tim;}\n\tinline ll csum(int t1,int t2,int l,int r)\n\t{return sum(root[t2],0,n,l,r)-sum(root[t1],0,n,l,r);}\n}plt;\nstruct data\n{\n\tll v;int fr;int rk;//\u79bb\u6563\u5316\u7684\u7ed3\u6784\u4f53 \n\tfriend bool operator <(data a,data b){return a.v<b.v;}\n\tfriend bool operator ==(data a,data b){return a.v==b.v;}\n}dx[N],dy[N];int y[N];ll add[N];\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tll x;ll y;scanf(\"%lld%lld%lld\",&x,&y,&add[i]);\n\t\tdx[i]=(data){x,i,0};dy[i]=(data){y,i,0};//\u8bfb\u5165 \n\t}sort(dx+1,dx+n+1);sort(dy+1,dy+n+1);dy[1].rk=1;//\u79bb\u6563\u5316\u4e00\u53d1 \n\tfor(int i=2;i<=n;i++){dy[i].rk=(dy[i]==dy[i-1])?dy[i-1].rk:i;}\n\tfor(int i=1;i<=n;i++){y[dy[i].fr]=dy[i].rk;}//\u6620\u5c04\u56de\u539f\u6765\u7684y \n\tfor(int i=1;i<=n;i++){int p=dx[i].fr;dx[i].rk=plt.cadd(y[p],add[p]);}//\u6309\u7167x\u7684\u987a\u5e8f\u52a0\u70b9 \n\tdx[n+1].v=0x7f7f7f7f;dy[n+1].v=0x7f7f7f7f;//\u63d2\u5165\u54e8\u5175\u9632\u6b62upper_bound\u627e\u4e0d\u5230\u503c \n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tll x1;ll x2;ll y1;ll y2; \n\t\tscanf(\"%lld%lld%lld%lld\",&x1,&y1,&x2,&y2);\n\t\tx1=(*lower_bound(dx+1,dx+n+2,(data){x1,0,0})).rk;//lower_bound\u5de6\u7aef\u70b9 \n\t\tx2=(*(upper_bound(dx+1,dx+n+2,(data){x2,0,0})-1)).rk;//upper_bound\u53f3\u7aef\u70b9 \n\t\ty1=(*lower_bound(dy+1,dy+n+2,(data){y1,0,0})).rk;//lower_bound\u5de6\u7aef\u70b9 \n\t\ty2=(*(upper_bound(dy+1,dy+n+2,(data){y2,0,0})-1)).rk;//upper_bound\u53f3\u7aef\u70b9 \n\t\tprintf(\"%lld\\n\",plt.csum(x1-1,x2,y1-1,y2));//\u7136\u540e\u67e5\u4e24\u53d1\u53d1\u524d\u7f00\u548c\u5c31\u597d\u5566~ \n\t}return 0;//\u62dc\u62dc\u7a0b\u5e8f~ \n}\n```\n\n",
        "postTime": 1521636545,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3755 \u3010[CQOI2017]\u8001C\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u6bd4\u8f83\u677f\u7684\u4e8c\u7ef4\u6570\u70b9\u3002\n\n\u628a\u8be2\u95ee\u79bb\u7ebf\uff0c\u628a\u4e00\u4e2a\u8be2\u95ee $q = (x_1, y_1, x_2, y_2)$ \u62c6\u5f00\u6210 $4$ \u4e2a\uff1a\n\n- $q_1 = (x_1 - 1, y_1 - 1)$\n- $q_2 = (x_1 - 1, y_2)$\n- $q_3 = (x_2, y_1 - 1)$\n- $q_4 = (x_2, y_2)$\n\n\u90a3\u4e48\u8fd9\u4e2a\u8be2\u95ee $q$ \u7684\u7b54\u6848\u5373\u4e3a $q_4 - q_2 - q_3 + q_1$\u3002\n\n\u628a\u6240\u6709\u70b9\u548c\u8be2\u95ee\u653e\u5230\u4e00\u8d77\u6309\u7167 $x$ \u6392\u5e8f\uff0c**$x$ \u503c\u76f8\u7b49\uff0c\u5148\u70b9\u540e\u8be2\u95ee**\u3002\n\n\u7136\u540e\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5750\u6807\u8303\u56f4\u8fc7\u5927\uff0c\u9700\u8981\u79bb\u6563\u5316\uff0c\u6811\u72b6\u6570\u7ec4\u8981\u5f00 $6 \\cdot (n + m)$ \u5373 $6 \\cdot 10^5$\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair<int, int> PII;\n\nconst int inf = 0x3f3f3f3f;\nconst LL infLL = 0x3f3f3f3f3f3f3f3fLL;\n\nconst int N = 6e5 + 5;\n\nint n, m;\n\nstruct Node {\n    int type;\n    int id;\n    int x, y;\n    int neg;\n    int val;\n    bool operator<(const Node &b) const {\n        return x ^ b.x ? x < b.x : type < b.type;\n    }\n};\n\nstruct {int x, y, p;} a[N];\nstruct {int x1, y1, x2, y2;} b[N];\n\nvector<int> lsh;\n\nstruct BIT {\n    LL tr[N];\n    void add(int i, int v) {for (; i < N; i += i & -i) tr[i] += v;}\n    LL query(int i) {LL res = 0; for (; i; i -= i & -i) res += tr[i]; return res;}\n}bit;\n\nLL ans[N];\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++) {\n        cin >> a[i].x >> a[i].y >> a[i].p;\n        lsh.push_back(a[i].x);\n        lsh.push_back(a[i].y);\n    }\n    for (int i = 1; i <= m; i++) {\n        cin >> b[i].x1 >> b[i].y1 >> b[i].x2 >> b[i].y2;\n        lsh.push_back(b[i].x1);\n        lsh.push_back(b[i].y1);\n        lsh.push_back(b[i].x2);\n        lsh.push_back(b[i].y2);\n    }\n    sort(lsh.begin(), lsh.end());\n    lsh.erase(unique(lsh.begin(), lsh.end()), lsh.end());\n    for (int i = 1; i <= n; i++) {\n        a[i].x = lower_bound(lsh.begin(), lsh.end(), a[i].x) - lsh.begin() + 1;\n        a[i].y = lower_bound(lsh.begin(), lsh.end(), a[i].y) - lsh.begin() + 1;\n    }\n    for (int i = 1; i <= m; i++) {\n        b[i].x1 = lower_bound(lsh.begin(), lsh.end(), b[i].x1) - lsh.begin() + 1;\n        b[i].y1 = lower_bound(lsh.begin(), lsh.end(), b[i].y1) - lsh.begin() + 1;\n        b[i].x2 = lower_bound(lsh.begin(), lsh.end(), b[i].x2) - lsh.begin() + 1;\n        b[i].y2 = lower_bound(lsh.begin(), lsh.end(), b[i].y2) - lsh.begin() + 1;\n    }\n    \n    vector<Node> q;\n    for (int i = 1; i <= n; i++) q.push_back({0, 0, a[i].x, a[i].y, 0, a[i].p});\n    for (int i = 1; i <= m; i++) {\n        auto &v = b[i];\n        q.push_back({1, i, v.x1 - 1, v.y1 - 1, 1, 0});\n        q.push_back({1, i, v.x1 - 1, v.y2, -1, 0});\n        q.push_back({1, i, v.x2, v.y1 - 1, -1, 0});\n        q.push_back({1, i, v.x2, v.y2, 1, 0});\n    }\n    sort(q.begin(), q.end());\n    for (auto i: q) {\n        if (i.type) ans[i.id] += i.neg * bit.query(i.y);\n        else bit.add(i.y, i.val);\n    }\n    for (int i = 1; i <= m; i++) cout << ans[i] << \"\\n\";\n    return 0;\n}\n```",
        "postTime": 1679803686,
        "uid": 482728,
        "name": "Engulf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3755"
    },
    {
        "content": "**\u524d\u7f6e\u829d\u58eb\uff1aCDQ \u5206\u6cbb\uff0c\u4e8c\u7ef4\u524d\u7f00\u548c**\n\n## $\\text{Solution}$\n\n\u7b80\u5316\u7248\u9898\u610f\uff1a\n+ \u7ed9\u5b9a\u5750\u6807\u7cfb\u4e2d\u7684 $n$ \u4e2a\u70b9\uff0c\u4ee5\u53ca $m$ \u6b21\u67e5\u8be2\u3002\u70b9\u6709\u70b9\u6743\u3002\n+ \u6bcf\u6b21\u67e5\u8be2\u7ed9\u5b9a\u4e00\u4e2a\u77e9\u5f62\u533a\u57df\uff0c\u67e5\u8be2\u77e9\u5f62\u533a\u57df\u5185\u7684\u70b9\u6743\u548c\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u67e5\u8be2\u70b9\uff0c\u6211\u4eec\u4e0d\u59a8\u5c06\u5176\u8f6c\u5316\u4e3a\u4e8c\u7ef4\u524d\u7f00\u548c\u7684\u65b9\u5f0f\u5904\u7406\u3002\u5373\u5bf9\u4e8e\u4e00\u4e2a\u67e5\u8be2\u77e9\u9635\u7684\u56db\u4e2a\u70b9\u800c\u8a00\uff0c\u5904\u7406\u51fa\u56db\u4e2a\u70b9\u5230 $(0,0)$ \u7684\u524d\u7f00\u548c\uff0c\u518d\u6839\u636e\u4e8c\u7ef4\u524d\u7f00\u548c\u7684\u4e00\u822c\u5f62\u5f0f\u5373\u53ef $O(1)$ \u6c42\u51fa\u8be2\u95ee\u3002\n\n\u8003\u8651\u5904\u7406\u6bcf\u4e00\u4e2a\u8be2\u95ee\u70b9\u7684\u4e8c\u7ef4\u524d\u7f00\u548c\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\u70b9 $(x_i,y_i)$ \u6765\u8bb2\uff0c\u6211\u4eec\u9700\u8981\u6c42\u51fa\u6240\u6709\u6ee1\u8db3\u8981\u6c42\u7684\u70b9\uff0c\u5373\n\n$$\\begin{cases} x_j \\le x_i \\\\ y_j \\le y_i\\end{cases}$$\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u505a\u4f3c\u4e4e\u4f1a\u5c06\u77e9\u5f62\u5185\u7684\u67e5\u8be2\u70b9\u4e5f\u4e00\u5e76\u8ba1\u7b97\u5728\u5185\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u540c\u65f6\u8bb0\u5f55\u4e00\u4e2a\u6807\u5fd7 $z_i$ \u7528\u4e8e\u8868\u793a\u8be5\u70b9\u662f\u666e\u901a\u70b9\u8fd8\u662f\u67e5\u8be2\u70b9\u3002\u666e\u901a\u70b9\u8bb0\u4e3a $0$\uff0c\u67e5\u8be2\u70b9\u8bb0\u4e3a $1$\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u6c42\u6240\u6709\u6ee1\u8db3\n\n$$\\begin{cases} x_j \\le x_i \\\\ y_j \\le y_i \\\\ z_j < z_i \\end{cases}$$\n\n\u7684\u70b9\u7684\u70b9\u6743\u548c\uff0c\u8003\u8651 CDQ \u5206\u6cbb\u76f4\u63a5\u6c42\u89e3\u4e09\u7ef4\u504f\u5e8f\u5373\u53ef\u3002\n\n\u7279\u522b\u7684\uff0c\u672c\u9898\u76ee\u4e2d\u7684 $z_i$ \u53ea\u6709 $0,1$ \u4e24\u79cd\u53d6\u503c\uff0c\u90a3\u4e48\u76f4\u63a5\u7528\u53d8\u91cf\u50a8\u5b58\u5373\u53ef\uff0c\u53bb\u6389\u4e86\u6811\u72b6\u6570\u7ec4\u5e26\u7684\u4e00\u53ea $\\log_2$\uff0c\u603b\u590d\u6742\u5ea6\u4e3a $O(n\\log_2n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define int long long\n\nconst int N = 5e5 + 10;\nstruct node\n{\n    int x, y, z, p; // \u5750\u6807(x, y)\uff0c\u662f\u67e5\u8be2\u7684\u8bddz = 1\uff0c\u5426\u5219z = 0, p\u662f\u70b9\u6743\n    int id, sign; // \u5982\u679c\u662f\u67e5\u8be2\u7684\u8bdd id\u662f\u67e5\u8be2\u7f16\u53f7 sign\u4ee3\u8868sum\u6b63\u8d1f\n    int sum; // \u4e8c\u7ef4\u524d\u7f00\u548c\n    \n    inline bool operator < (const node &W)const\n    {\n        if(x != W.x)\n            return x < W.x;\n        if(y != W.y)    \n            return y < W.y;\n        return z < W.z;\n    }\n} q[N], w[N];\nint n, m;\nint ans[N];\n\ninline void cdq(int l, int r)\n{\n    if(l >= r)  \n        return ;\n    int mid = l + r >> 1, k = 0;\n    cdq(l, mid), cdq(mid + 1, r);\n    int lptr = l, rptr = mid + 1, sum = 0;\n    while(lptr <= mid and rptr <= r)\n        if(q[lptr].y <= q[rptr].y)\n            sum += !q[lptr].z * q[lptr].p, w[++ k] = q[lptr ++ ]; // 0 -> 1,1 -> 0\n        else \n            q[rptr].sum += sum, w[++ k] = q[rptr ++ ];\n    while(lptr <= mid)\n        sum += !q[lptr].z * q[lptr].p, w[++ k] = q[lptr ++ ];\n    while(rptr <= r)\n        q[rptr].sum += sum, w[++ k] = q[rptr ++ ];\n    for(int i = l, j = 1;j <= k; ++ j, ++ i)\n        q[i] = w[j];\n    return ;\n}\n\nsigned main()\n{\n    scanf(\"%lld %lld\", &n, &m);\n    for(int i(1);i <= n; ++ i)\n    {\n        int x, y, p;\n        scanf(\"%lld %lld %lld\", &x, &y, &p);\n        q[i] = {x, y, 0, p};\n    }\n    int k = n;\n    for(int i(1);i <= m; ++ i)\n    {\n        int x1, y1, x2, y2;\n        scanf(\"%lld %lld %lld %lld\", &x1, &y1, &x2, &y2);\n        q[++ k] = {x2, y2, 1, 0, i, 1}; // \u53f3\u4e0a\u89d2\n        q[++ k] = {x1 - 1, y1 - 1, 1, 0, i, 1}; // \u5de6\u4e0b\n        q[++ k] = {x1 - 1, y2, 1, 0, i, -1}; // \u5de6\u4e0a\n        q[++ k] = {x2, y1 - 1, 1, 0, i, -1}; // \u53f3\u4e0b\n    }\n    sort(q + 1, q + 1 + k);\n    cdq(1, k);\n    for(int i(1);i <= k; ++ i)\n        if(q[i].z)\n            ans[q[i].id] += q[i].sum * q[i].sign;\n    for(int i(1);i <= m; ++ i)\n        printf(\"%lld\\n\", ans[i]);\n    return 0;\n}\n```\n",
        "postTime": 1674195103,
        "uid": 666796,
        "name": "Rainsheeep",
        "ccfLevel": 0,
        "title": "P3755 [CQOI2017]\u8001C\u7684\u4efb\u52a1 \u9898\u89e3"
    },
    {
        "content": "## \u524d\u8a00\n\n[\u9898\u76ee\u94fe\u63a5\uff01](https://www.luogu.com.cn/problem/P3755)\n\n\u672c\u7bc7\u91c7\u7528[cdq\u5206\u6cbb](https://www.luogu.com.cn/blog/CUT/cdq-fen-zhi)\u89e3\u6cd5\u3002\n\n## \u7b80\u5316\u9898\u610f\n\n\u76f4\u89d2\u5e73\u9762\u5750\u6807\u7cfb\u91cd\u6709 $n$ \u4e2a\u70b9\uff0c\n\n\u7b2c $i$ \u4e2a\u70b9\u5750\u6807\u4e3a $(x_i,y_i)$ \uff0c\u6743\u503c\u4e3a $w_i$ \u3002\n\n\u6bcf\u4e2a\u8be2\u95ee\u7ed9\u51fa\u77e9\u9635\u4e24\u5bf9\u89d2\u5750\u6807\uff0c\n\n\u8be2\u95ee\u77e9\u9635\u5185\u6709\u7684\u70b9\u7684\u6743\u503c\u4e4b\u548c\u3002\n\n## \u601d\u8def\n\n\u6bcf\u4e2a\u70b9\u6709\u4e24\u4e2a\u5c5e\u6027 $x$ , $y$ , $z$ \uff0c\n\n$x,y$ \u8868\u793a\u5750\u6807\uff0c $z$ \u4e3a $0$ \u8868\u793a\u662f\u6709\u6743\u70b9\uff0c $z$ \u4e3a $1$ \u8868\u793a\u67e5\u8be2\u7684\u70b9\u3002\n\n\u6bcf\u4e2a\u70b9\u7684 $sum$ \u8868\u793a\u4ee5\u8be5\u70b9\u4e3a\u53f3\u4e0a\u89d2\uff0c\u539f\u70b9 $O$ \u4e3a\u5de6\u4e0b\u89d2\u7684\u77e9\u9635\u5185\u7684\u6743\u503c\u4e4b\u548c\u3002\n\n\u8be2\u95ee\u65f6\u8fd0\u7528\u4e8c\u7ef4\u524d\u7f00\u548c\u3002\n\n## \u65f6\u95f4\u590d\u6742\u5ea6\n\n\u7531\u4e8e\u7b2c\u4e09\u7ef4\u662f $0$ \u6216 $1$ \uff0c\n\n\u6240\u4ee5\u76f8\u5f53\u4e8e\u4e8c\u7ef4\u504f\u5e8f\uff0c\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$ \u3002\n\n## \u5b9e\u73b0\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1e5 + 10, M = N * 5;\n\nint n, m, tt;\nint a[N], b[N], c[N], d[N];\nlong long ans[N];\n\nstruct Node {\n    int a, b, c, s, id, sign;\n    long long res;\n    bool operator< (const Node &t) const {\n        if (a != t.a) return a < t.a;\n        if (b != t.b) return b < t.b;\n        return c < t.c;\n    }\n} q[M], w[M];\n\nvoid merge(int l, int r)\n{\n    if (l >= r) return ;\n    int mid = l + r >> 1;\n    merge(l, mid), merge(mid + 1, r);\n    int i = l, j = mid + 1, k = l;\n    long long sum = 0;\n    while (i <= mid && j <= r)\n        if (q[i].b <= q[j].b) sum += !q[i].c * q[i].s, w[k ++ ] = q[i ++ ];\n        else q[j].res += sum, w[k ++ ] = q[j ++ ];\n    while (i <= mid) sum += !q[i].c * q[i].s, w[k ++ ] = q[i ++ ];\n    while (j <= r) q[j].res += sum, w[k ++ ] = q[j ++ ];\n    for (int i = l; i <= r; i ++ ) q[i] = w[i];\n}\n\nint main()\n{\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= n; i ++ ) \n    {\n        int x, y, p;\n        scanf(\"%d%d%d\", &x, &y, &p);\n        q[++ tt] = {x, y, 0, p};\n    }\n    for (int i = 0; i < m; i ++ )\n    {\n        int x1, y1, x2, y2;\n        scanf(\"%d%d%d%d\", &x1, &y1, &x2, &y2);\n        q[++ tt] = {x2, y2, 1, 0, i, 1};\n        q[++ tt] = {x2, y1 - 1, 1, 0, i, -1};\n        q[++ tt] = {x1 - 1, y2, 1, 0, i, -1};\n        q[++ tt] = {x1 - 1, y1 - 1, 1, 0, i, 1};\n    }\n    \n    sort(q + 1, q + tt + 1);\n    merge(1, tt);\n    \n    for (int i = 1; i <= tt; i ++ )\n        if (q[i].c)\n            ans[q[i].id] += q[i].sign * q[i].res;\n    for (int i = 0; i < m; i ++ ) printf(\"%lld\\n\", ans[i]);\n    \n    return 0;\n}\n```",
        "postTime": 1671342707,
        "uid": 819929,
        "name": "__ycx2010__",
        "ccfLevel": 6,
        "title": "\u8001C\u7684\u4efb\u52a1 \u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u6709\u4e00\u4e2a $2^{31}\\times 2^{31}$ \u5927\u5c0f\u7684\u77e9\u5f62\uff0c\u5176\u4e2d\u6709 $n$ \u4e2a\u4f4d\u7f6e\u6709\u503c\uff0c\u5176\u4ed6\u4f4d\u7f6e\u503c\u4e3a $0$\uff0c$m$ \u6b21\u67e5\u8be2\u4e00\u4e2a\u5b50\u77e9\u5f62\u7684\u548c\u3002\n\n$1\\leq n,m \\leq 10^5$\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u6ce8\u610f\u5230\u6709\u503c\u7684\u70b9\u5f88\u5c11\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8003\u8651\u7ef4\u62a4\u6709\u503c\u7684\u5730\u65b9\uff0c\u6211\u4eec\u5148\u60f3\u5982\u679c\u662f\u4e00\u4e2a\u8f83\u5c0f\u7684\u77e9\u5f62\u600e\u4e48\u505a\u5462\uff1f\u7528\u4e8c\u7ef4\u524d\u7f00\u548c\u505a\u5230 $n^2$\uff0c\u6216\u8005\u7528\u53ef\u6301\u4e45\u5316\u7ef4\u62a4\uff0c\u505a\u5230\u5355\u6b21 $n\\log m$\uff0c\u6211\u4eec\u53d1\u73b0\u90fd\u4e0d\u662f\u5f88\u597d\u5730\u9002\u5e94\u8fd9\u9053\u9898\u3002\n\n\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u60f3\u6211\u4eec\u7ef4\u62a4\u7684\u4f4d\u7f6e\u5f88\u5c11\uff0c\u6240\u4ee5\u6211\u4eec\u5f53\u524d\u67e5\u8be2\u5230\u4e86\u4e00\u4e2a\u7a7a\u7684\u533a\u95f4\uff0c\u76f4\u63a5\u8fd4\u56de $0$ \u5373\u53ef\uff0c\u5176\u4ed6\u65f6\u5019\u8fd4\u56de\u533a\u95f4\u503c\uff0c\u8fd9\u4e1c\u897f\u600e\u4e48\u505a\u5462\uff1f\u6211\u4eec\u4f1a\u53d1\u73b0\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7684\u67e5\u8be2\u548c\u8fd9\u4e2a\u4e1c\u897f\u5f88\u50cf\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u57fa\u672c\u7684\u96cf\u5f62\uff0c\u8003\u8651\u7528\u52a8\u6001\u5f00\u70b9\u7ef4\u62a4\u4e00\u7ef4\u4fe1\u606f\uff0c\u53e6\u4e00\u7ef4\u600e\u4e48\u529e\u5462\uff1f\u5e38\u89c1\u5957\u8def\u53ef\u6301\u4e45\u5316\u518d\u7ef4\u62a4\u4e00\u7ef4\u5373\u53ef\u3002\n\n\u6211\u4eec\u8003\u8651\u6309\u7167\u6a2a\u5750\u6807\u5927\u5c0f\u6392\u5e8f\uff0c\u8fd9\u6837\u5c31\u6700\u591a\u4f1a\u6709 $n$ \u4e2a\u7248\u672c\uff0c\u7136\u540e\u6bcf\u4e2a\u7248\u672c\u4e0b\u6807\u662f\u7eb5\u5750\u6807\uff0c\u503c\u662f\u5bf9\u5e94\u7684\u503c\uff0c\u6211\u4eec\u8003\u8651\u600e\u4e48\u7531\u4e0a\u4e2a\u7248\u672c\u8f6c\u79fb\u5230\u4e0b\u4e2a\u7248\u672c\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u53ea\u9700\u8981\u5c06\u5f53\u524d\u884c\u6240\u6709\u7684\u503c\u76f4\u63a5\u63d2\u5165\u5230\u7ebf\u6bb5\u6811\u4e0a\u5373\u53ef\uff0c\u8fd9\u6837\u505a\u6700\u591a\u53ea\u9700\u8981\u63d2\u5165 $n$ \u6b21\uff0c\u603b\u590d\u6742\u5ea6\u662f $O(n\\log V)$ \u7684\u3002\n\n\u67e5\u8be2\u5c31\u662f\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u7684\u677f\u5b50\u4e86\uff0c\u6ce8\u610f\u5f53\u524d\u533a\u95f4\u4e3a\u7a7a\u76f4\u63a5\u8fd4\u56de $0$ \u5373\u53ef\u3002\n\n\u8fd8\u8981\u6ce8\u610f\u6211\u4eec\u6bcf\u6b21\u67e5\u8be2\u90fd\u8981\u4e8c\u5206\u6a2a\u5750\u6807\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u7248\u672c\u53f7\u624d\u884c\u3002\n\n## Code\n\n\u6ce8\u610f\u7ebf\u6bb5\u6811\u662f\u53ef\u4ee5\u7ef4\u62a4\u4e0b\u6807\u4e3a\u8d1f\u6570\u7684\u60c5\u51b5\u7684\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u8981\u7528\u5411\u4e0b\u53d6\u6574\uff0c\u800c\u4e0d\u662f\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#define int long long\nusing namespace std;\nint read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nconst int N = 1e5+5;\nstruct aa{\n\tint lc,rc,val,cnt;\n}node[N*80];\nint tot,rt[N];\nvoid ins(int &u,int v,int l,int r,int pla,int x){\n\tu = ++tot;\n\tnode[u] = node[v];\n\tnode[u].val+=x;\n\tnode[u].cnt++;\n\tif(l==r){\n\t\treturn;\n\t}\n\tint mid = floor((l+r)/2.0);\n\tif(pla<=mid){\n\t\tins(node[u].lc,node[v].lc,l,mid,pla,x);\n\t}else{\n\t\tins(node[u].rc,node[v].rc,mid+1,r,pla,x);\n\t}\n}\nstruct bb{\n\tint x,y,z;\n\tbool operator<(const bb&a)const{\n\t\treturn x<a.x;\n\t}\n}in[N];\nint Maxn = 2147483647;\nint num[N],cnt;\nint ask1(int val){\n\tint l=1,r=cnt;\n\tint ans = 0;\n\twhile(l<=r){\n\t\tint mid = (l+r)/2;\n\t\tif(num[mid]>=val){\n\t\t\tans = mid;\n\t\t\tr = mid-1;\n\t\t}else{\n\t\t\tl = mid+1;\n\t\t}\n\t}\n\treturn ans;\n}\nint ask2(int val){\n\tint l=1,r=cnt;\n\tint ans = 0;\n\twhile(l<=r){\n\t\tint mid = (l+r)/2;\n\t\tif(num[mid]<=val){\n\t\t\tans = mid;\n\t\t\tl = mid+1;\n\t\t}else{\n\t\t\tr = mid-1;\n\t\t}\n\t}\n\treturn ans;\n}\nint query(int u,int v,int l,int r,int ll,int rr){\n\tif(node[v].cnt-node[u].cnt==0){\n\t\treturn 0;\n\t}\n\tif(l==ll&&r==rr){\n\t\treturn node[v].val-node[u].val;\n\t}\n\tint mid = floor((l+r)/2.0);\n\tif(rr<=mid){\n\t\treturn query(node[u].lc,node[v].lc,l,mid,ll,rr);\n\t}else if(ll>mid){\n\t\treturn query(node[u].rc,node[v].rc,mid+1,r,ll,rr);\n\t}else{\n\t\treturn query(node[u].lc,node[v].lc,l,mid,ll,mid)+query(node[u].rc,node[v].rc,mid+1,r,mid+1,rr);\n\t}\n} \nsigned main(){\n\tint n,m;\n\tn = read();m = read(); \n\tfor(int i=1;i<=n;i++){\n\t\tin[i].x = read();in[i].y = read();in[i].z = read();\n\t}\n\tsort(in+1,in+1+n);\n\tfor(int i=1;i<=n;i++){\n\t\tif(in[i-1].x!=in[i].x||i==1){\n\t\t\tcnt++;\n\t\t\trt[cnt] = rt[cnt-1];\n\t\t\tnum[cnt] = in[i].x;\n\t\t}\n//\t\tcout<<\"CNT:\"<<cnt<<\" \"<<in[i].x<<\" \"<<in[i].y<<\" \"<<in[i].z<<\"\\n\";\n\t\tins(rt[cnt],rt[cnt],-Maxn-1,Maxn,in[i].y,in[i].z);\n\t}\n\tint a1,b1,a2,b2;\n\twhile(m--){\n\t\ta1 = read();b1 = read();a2 = read();b2 = read();\n\t\ta1 = ask1(a1);a2 = ask2(a2);\n//\t\tcout<<\"A:\"<<a1<<\" \"<<a2<<\"\\n\";\n\t\tif(a1==0||a2==0){\n\t\t\tcout<<0<<\"\\n\";\n\t\t}else{\n\t\t\tcout<<query(rt[a1-1],rt[a2],-Maxn-1,Maxn,b1,b2)<<\"\\n\";\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1671183365,
        "uid": 369399,
        "name": "yizhiming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u3010P3755 [CQOI2017]\u8001C\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "# CDQ\u5206\u6cbb\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u53ef\u4ee5\u53c2\u8003 [P4390 [BOI2007]Mokia \u6469\u57fa\u4e9a](https://www.luogu.com.cn/problem/P4390) \u7684\u505a\u6cd5,\u53ef\u4ee5\u901a\u8fc7 CDQ \u5206\u6cbb\u79bb\u7ebf\u64cd\u4f5c\u9ad8\u6548\u5904\u7406\u51fa\u7b54\u6848\uff08\u6211\u5e38\u6570\u5927,\u4e0d\u80fd\u4f53\u73b0\u51fa CDQ \u5206\u6cbb\u7684\u4f18\u79c0)\u3002\n\n\u53ef\u4ee5\u53d1\u73b0,\u64cd\u4f5c $1$ \u548c\u64cd\u4f5c $2$ \u5206\u597d\u4e86\u754c\u9650,\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u7b54\u6848\uff0c\u4e0d\u7528\u518d\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u5bf9\u4e8e CDQ \u5206\u6cbb,\u6211\u4eec\u53ef\u4ee5\u5148\u770b\u4e00\u9053\u4f8b\u9898\uff08\u9006\u5e8f\u5bf9\uff09\uff1a\n```cpp\n//\u8fd9\u662f\u5f88\u7ecf\u5178\u7684\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\uff0c\u6ee1\u8db3\u4e0b\u6807\u548c\u503c\u7684\u5927\u5c0f\u5173\u7cfb\u5373\u53ef\u3002\nvoid cdq(int l,int r){\n\tif(l==r)return;\n\tint mid=(l+r)/2;\n\tcdq(l,mid);cdq(mid+1,r);\n\tint i=l,j=mid+1,k=l;\n\twhile(i<=mid&&j<=r){\n\t\tif(a[i]<=a[j])tmp[k++]=a[i++];\n\t\telse ans+=mid-i+1,tmp[k++]=a[j++];\n\t}\n\twhile(i<=mid)tmp[k++]=a[i++];\n\twhile(j<=r)tmp[k++]=a[j++];\n\tfor(int i=l;i<=r;i++)a[i]=tmp[i];\n}\n```\n\u5f88\u663e\u7136,\u672c\u9898\u4e5f\u662f\u4e00\u4e2a\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\u3002\u5bf9\u4e8e\u8be2\u95ee $x$ $y$ ,\u67e5\u8be2 $\\sum_{i=0}^x\\sum_{j=0}^y val_{i,j}$ \uff0c$val_{i,j}$ \u4e3a\u70b9 $(i,j)$ \u7684\u503c\u3002\n\n\u5bf9\u4e8e $i$ \u7684\u8d21\u732e,\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230 $x_i<x_j,y_i<y_j$ \u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5bf9,\u7b54\u6848\u52a0\u4e0a $i$ \u4f4d\u7f6e\u7684\u6743\u503c,\u5177\u4f53\u5b9e\u73b0\u548c\u9006\u5e8f\u5bf9\u76f8\u4f3c\u3002\n\n\u5148\u6309\u7167 $x$ \u6392\u4e2a\u5e8f,\u5728\u5206\u6cbb\u7b97\u6cd5\u4e2d\u627e\u5230 $y_i<y_j$ \u7684\u6570\u5bf9\u5373\u53ef\u3002\n\n```cpp\nvoid cdq(int l,int r){\n\tif(l==r)return;\n\tint mid=(l+r)/2;\n\tcdq(l,mid);cdq(mid+1,r);\n\tint i=l,j=mid+1,k=l,cnt=0;\n\twhile(j<=r&&i<=mid){\n\t\tif(q[i].y<=q[j].y){\n\t\t\tif(q[i].typ==1)cnt+=q[i].a;//\u5bf9\u4e8ei\uff0cyj>yi,\u4e14y\u70b9\u6709\u503c\uff0c\u90a3\u4e48\u52a0\u4e0a\n\t\t\ttmp[k++]=q[i++];\n\t\t}else{\n\t\t\tif(q[j].typ==2)q[j].a+=cnt;//\u5982\u679cq[j].y<q[i].y,\u90a3\u4e48j\u8fd9\u4e2a\u70b9\u7684\u8d21\u732e\u52a0\u4e0a\u4e4b\u524d\u7d2f\u52a0\u7684cnt\uff0c\u56e0\u4e3a\u8fd9\u91cc\u7684i\u662f\u4e0a\u4e00\u6b21\u8be2\u95ee\u7684i\uff0c\u6ca1\u52a8\u8fc7\u3002\n\t\t\ttmp[k++]=q[j++];\t\n\t\t}\n\t}\n\twhile(i<=mid){//\u518d\u6b21\u7edf\u8ba1\u4e00\u904d\uff0c\u4ee5\u514d\u6f0f\u6389\n\t\tif(q[i].typ==1)cnt+=q[i].a;\n\t\ttmp[k++]=q[i++];\n\t}\n\twhile(j<=r){\n\t\tif(q[j].typ==2)q[j].a+=cnt;\n\t\ttmp[k++]=q[j++];\n\t}\n\tfor(int i=l;i<=r;i++)q[i]=tmp[i];//\u5f52\u5e76\u6392\u5e8f\n}\n```\n\u6700\u540e\u6309\u7167\u8be2\u95ee\u7684\u65f6\u95f4\u6392\u5e8f,\u8fd0\u7528\u5dee\u5206\u77e5\u8bc6\u7edf\u8ba1\u4e00\u4e0b\u77e9\u9635\u548c\u5373\u53ef\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define N 1919810\n#define int long long\nusing namespace std;\nint n,m,tot;\nstruct node{\n\tint x,y,typ,a,t;\n}q[N],tmp[N];\nbool cmp(node a,node b){\n    if(a.x!=b.x)return a.x<b.x;\n    else if(a.y!=b.y)return a.y<b.y;\n    return a.typ<b.typ;\n}\nbool cmp2(node a,node b){return a.t<b.t;}\nvoid cdq(int l,int r){\n\tif(l==r)return;\n\tint mid=(l+r)/2;\n\tcdq(l,mid);cdq(mid+1,r);\n\tint i=l,j=mid+1,k=l,cnt=0;\n\twhile(j<=r&&i<=mid){\n\t\tif(q[i].y<=q[j].y){\n\t\t\tif(q[i].typ==1)cnt+=q[i].a;\n\t\t\ttmp[k++]=q[i++];\n\t\t}else{\n\t\t\tif(q[j].typ==2)q[j].a+=cnt;\n\t\t\ttmp[k++]=q[j++];\t\n\t\t}\n\t}\n\twhile(i<=mid){\n\t\tif(q[i].typ==1)cnt+=q[i].a;\n\t\ttmp[k++]=q[i++];\n\t}\n\twhile(j<=r){\n\t\tif(q[j].typ==2)q[j].a+=cnt;\n\t\ttmp[k++]=q[j++];\n\t}\n\tfor(int i=l;i<=r;i++)q[i]=tmp[i];\n}\nsigned main(){\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1;i<=n;i++)q[++tot].typ=1,q[tot].t=tot,scanf(\"%lld%lld%lld\",&q[tot].x,&q[tot].y,&q[tot].a);\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y,xx,yy;\n\t\tscanf(\"%lld%lld%lld%lld\",&x,&y,&xx,&yy);\n\t\tq[++tot].x=xx,q[tot].y=yy,q[tot].typ=2,q[tot].t=tot;\n\t\tq[++tot].x=x-1,q[tot].y=yy,q[tot].typ=2,q[tot].t=tot;\n\t\tq[++tot].x=xx,q[tot].y=y-1,q[tot].typ=2,q[tot].t=tot;\n\t\tq[++tot].x=x-1,q[tot].y=y-1,q[tot].typ=2,q[tot].t=tot;\t\n\t}\n\tsort(q+1,q+tot+1,cmp);\n\tcdq(1,tot);\n\tsort(q+1,q+tot+1,cmp2);\n\tfor(int i=n+1;i<=tot;i++){\n\t\tprintf(\"%lld\\n\",q[i].a-q[i+1].a-q[i+2].a+q[i+3].a);\n\t\ti+=3;\n\t}\n\treturn 0;\n}\n\n\n```\n\n",
        "postTime": 1660309900,
        "uid": 285617,
        "name": "\u9ed1\u5f71\u6d1e\u4eba",
        "ccfLevel": 5,
        "title": "P3755 [CQOI2017]\u8001C\u7684\u4efb\u52a1 \u9898\u89e3"
    },
    {
        "content": "# Preface\n\n\u8fd9\u662f\u4e00\u9053 cdq \u5206\u6cbb\u7684\u597d\u9898\u3002\n\n# Solution\n\n\u5148\u8003\u8651\u4e00\u4e0b\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u70b9 $i$ \u5176\u5de6\u4e0b\u89d2\u6240\u6709\u7684\u529f\u7387\u548c\u5982\u4f55\u8ba1\u7b97\u3002\n\n\u6ee1\u8db3\u7684\u6761\u4ef6\u5fc5\u987b\u662f $x_j\\le x_i,y_j\\le y_i$ \u8fd9\u4e2a\u4f1a\u8bfb\u9898\u5c31\u884c\uff0c\u90a3\u4e48\u5982\u4f55\u8ba1\u7b97\u4e00\u4e2a\u77e9\u5f62\u5185\u7684\u5462\u3002\n\n\u4e0d\u96be\u60f3\u5230\u4e8c\u7ef4\u524d\u7f00\u548c\u7684\u8ba1\u7b97\u516c\u5f0f\uff0c\u8fd9\u91cc\u4e0d\u7ec6\u63a8\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u5c06\u95ee\u9898\u8fdb\u884c\u4e00\u4e0b\u8f6c\u6362\uff0c\u7b97\u6bcf\u4e2a\u67e5\u8be2\u70b9\u5de6\u4e0b\u89d2\u7684\u529f\u7387\u548c\uff0c\u7136\u540e\u6839\u636e\u4e8c\u7ef4\u524d\u7f00\u548c\u8fdb\u884c\u8ba1\u7b97\u3002\n\n\u4e0d\u96be\u60f3\u5230\u4e8c\u7ef4\u504f\u5e8f\uff0c\u4f46\u662f\u8fd9\u91cc\u4e3a\u4e86\u590d\u4e60\u4e00\u4e0b cdq\uff0c\u6240\u4ee5\u91c7\u7528\u4e86\u4e09\u7ef4\u504f\u5e8f\u3002\n\n\u589e\u6dfb\u4e86\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u90a3\u5c31\u662f\u770b\u5f53\u524d\u8fd9\u4e2a\u70b9\u662f\u8be2\u95ee\u8fd8\u662f\u672c\u6765\u5c31\u6709\u529f\u7387\u3002\n\n\u8fd9\u6837\u5c31\u662f\u4e00\u9053\u5341\u5206\u6b63\u5b97\u7684\u4e09\u7ef4\u504f\u5e8f\u95ee\u9898\u3002\n\n\u5229\u7528 cdq \u5206\u6cbb\u8fdb\u884c\u89e3\u51b3\u3002\n\n\u7b2c\u4e00\u7ef4\u7528\u6392\u5e8f\u641e\u5b9a\uff0c\u7b2c\u4e8c\u7ef4\u7528 cdq \u641e\u5b9a\uff0c\u7b2c\u4e09\u7ef4\u56e0\u4e3a\u53ea\u6d89\u53ca\u5230 $0/1$\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u76f4\u63a5\u7528\u53d8\u91cf\u6765\u8fdb\u884c\u5b58\u50a8\u3002\n\n\n\u8fd9\u9053\u9898\u91cd\u5728\u5c06\u4e00\u4e2a\u95ee\u9898\u8f6c\u6362\u4e3a\u4e00\u4e2a cdq \u53ef\u4ee5\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u8fd9\u79cd\u601d\u60f3\u5341\u5206\u91cd\u8981\u3002\n\n~~\u6240\u4ee5\u6211\u4e3a\u4ec0\u4e48\u4e0d\u7528\u4e8c\u7ef4\u504f\u5e8f~~\n\n# Code\n\n```cpp\n#include<bits/stdc++.h>\n//#define int long long\n#define mem(a,x) memset(a,x,sizeof(a))\n#define inf 0x3f3f3f3f\n#define max(a,b) (a>b?a:b)\n#define min(a,b) (a<b?a:b)\n#define re register\n#define il inline\nusing namespace std;\ntypedef long long LL;\nconst int N=1e5+5;\nil int qr(){\n\tint s=0,f=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-') f=-1;ch=getchar();}\n\twhile(isdigit(ch)){s=s*10+ch-'0';ch=getchar();}\n\treturn s*f;\n}\nil void qw(LL x){\n\tif(x<0) putchar('-'),x=-x;\n\tif(x>9) qw(x/10);\n\tputchar(x%10+'0');\n}\nint n,m;\nLL ans[N][4];\nstruct node{\n\tint x,y,p,id;\n}a[N*5];\nbool cmpx(node x,node y){\n\tif(x.x^y.x) return x.x<y.x;\n\tif(x.y^y.y) return x.y<y.y;\n\treturn x.id<y.id;\n}\nbool cmpy(node x,node y){\n\treturn x.y<y.y;\n}\nil void cdq(int l,int r){\n\tif(l==r) return ;\n\tint mid=l+r>>1;\n\tcdq(l,mid),cdq(mid+1,r);\n\tsort(a+l,a+mid+1,cmpy);\n\tsort(a+mid+1,a+r+1,cmpy);\n\tint j=l;\n\tLL res=0;\n\tfor(int i=mid+1;i<=r;i++){\n\t\twhile(j<=mid && a[j].y<=a[i].y){\n\t\t\tif(!a[j].id) res+=a[j].p;\n\t\t\tj++;\n\t\t}\n\t\tif(a[i].id) ans[a[i].id][-a[i].p]+=res;\n\t}\n}\nint main(){\n\tn=qr(),m=qr();\n\tfor(int i=1;i<=n;i++) a[i]=((node){qr(),qr(),qr(),0});\n\tint cnt=n;\n\tfor(int i=1;i<=m;i++){\n\t\tint A=qr(),B=qr(),C=qr(),D=qr();\n\t\ta[++cnt]=((node){C,D,0,i});\n\t\ta[++cnt]=((node){C,B-1,-1,i});\n\t\ta[++cnt]=((node){A-1,D,-2,i});\n\t\ta[++cnt]=((node){A-1,B-1,-3,i});\n\t}\n\tsort(a+1,a+1+cnt,cmpx);\n\tcdq(1,cnt);\n\tfor(int i=1;i<=m;i++) qw(ans[i][0]-ans[i][1]-ans[i][2]+ans[i][3]),putchar('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1649257433,
        "uid": 364122,
        "name": "BigJoker",
        "ccfLevel": 6,
        "title": "P3755 [CQOI2017]\u8001C\u7684\u4efb\u52a1-\u9898\u89e3\u62a5\u544a"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u5e73\u9762\uff0c\u5176\u4e2d\u6709\u591a\u4e2a\u70b9 $(x_i, y_i)$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $(x_i, y_i)$ \u90fd\u6709\u4e00\u4e2a\u6743\u503c $p_i$\u3002\u7ed9\u5b9a\u591a\u7ec4\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u70b9\u5bf9 $(x_1, y_1)$ \u548c\u70b9\u5bf9 $(x_2, y_2)$ \u4e4b\u95f4\u7684\u77e9\u9635\u4e2d\u7684\u6743\u503c\u548c\u3002\n\n## \u89e3\u6cd5\n\n\u5404\u4f4d\u90fd\u6709\u5206\u5757\u3001\u4e3b\u5e2d\u6811\u7b49\u5404\u79cd\u5199\u6cd5\uff0c\u90a3\u6211\u6765\u52a0\u4e00\u4e2a CDQ \u5206\u6cbb\u7684\u5199\u6cd5\u3002\n\n\u9996\u5148\u6211\u4eec\u601d\u8003\u5982\u4f55\u5c06\u8fd9\u4e2a\u95ee\u9898\u8f6c\u5316\u6210\u4e09\u7ef4\u504f\u5e8f\u3002\n\n\u8003\u8651\u70b9\u5bf9 $(x_1, y_1)$ \u548c\u70b9\u5bf9 $(x_2, y_2)$ \u4e4b\u95f4\u7684\u77e9\u9635\u548c\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u8f6c\u5316\u6210\u4e00\u4e2a\u4e8c\u7ef4\u524d\u7f00\u548c\u95ee\u9898\uff0c\u5c31\u662f\u5c06\u4e00\u6b21\u8be2\u95ee\u62c6\u6210\u56db\u7ec4\u8be2\u95ee\uff0c\u5206\u522b\u662f\uff1a\n\n1. \u77e9\u9635 $(x_2, y_2)$ \u5230 $(1, 1)$ \u7684\u548c\uff0c\u8bbe\u8fd9\u4e2a\u548c\u4e3a $a_1$\u3002\n\n1. \u77e9\u9635 $(x_1 - 1, y_1 - 1)$ \u5230 $(1, 1)$ \u7684\u548c\uff0c\u8bbe\u8fd9\u4e2a\u548c\u4e3a $a_2$\u3002\n\n1. \u77e9\u9635 $(x_2, y_1 - 1)$ \u5230 $(1, 1)$ \u7684\u548c\uff0c\u8bbe\u8fd9\u4e2a\u548c\u4e3a $a_3$\u3002\n\n1. \u77e9\u9635 $(x_1 - 1, y2)$ \u5230 $(1, 1)$ \u7684\u548c\uff0c\u8bbe\u8fd9\u4e2a\u548c\u4e3a $a_4$\u3002\n\n\u90a3\u4e48\u663e\u7136\u8fd9\u6b21\u8be2\u95ee\u7684\u7b54\u6848\u5373\u4e3a $a_1 + a_2 - a_3 - a_4$\u3002\n\n\u4f46\u662f\u4ed4\u7ec6\u4e00\u770b\u8fd9\u8fd8\u662f\u4e2a\u4e8c\u7ef4\u504f\u5e8f\uff0c\u6240\u4ee5\u7ed9\u4ed6\u52a0\u4e00\u7ef4\uff0c\u8868\u793a\u8fd9\u4e2a\u70b9\u662f\u8be2\u95ee\u8fd8\u662f\u7ed9\u5b9a\u7684\u70b9\u3002\n\n\u7136\u540e\u5c31\u662f\u4e09\u7ef4\u504f\u5e8f\u677f\u5b50\uff0c\u6ce8\u610f\u8fd9\u9898\u53ef\u4ee5\u4e0d\u7528\u6811\u72b6\u6570\u7ec4\uff0c\u56e0\u4e3a\u7b2c\u4e09\u7ef4\u53ea\u6709\u53ef\u80fd\u662f $0$ \u6216 $1$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\n\n#define ll long long\n\nconstexpr int N(5e5 + 5);\n\nint n, m;\nll ans[N];\n\nstruct Node\n{\n\tint x, y, z, p, id, s;\n\tll sum;\n\t/*\n\t* x, y: \u5750\u6807\n\t* z: \u8868\u793a\u662f\u5426\u662f\u8be2\u95ee\n\t* p: \u6743\u503c\n\t* id: \u8be2\u95ee\u7f16\u53f7\n\t* s: \u6b63\u8d1f\u6027\n\t* sum: \u548c\n\t*/\n\tbool operator<(const Node& g) const\n\t{\n\t\tif (x ^ g.x) return x < g.x;\n\t\tif (y ^ g.y) return y < g.y;\n\t\treturn z < g.z;\n\t}\n}q[N], w[N];\n\ninline void merge_sort(int l, int r)\n{\n\tif (l >= r) return;\n\tint mid(l + r >> 1);\n\tmerge_sort(l, mid);\n\tmerge_sort(mid + 1, r);\n\tint i(l), j(mid + 1), k(0);\n\tll sum(0);\n\twhile (i <= mid && j <= r)\n\t{\n\t\tif (q[i].y <= q[j].y)\n\t\t{\n\t\t\tsum += !q[i].z * q[i].p, w[k++] = q[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tq[j].sum += sum * q[j].s;\n\t\t\tw[k++] = q[j++];\n\t\t}\n\t}\n\twhile (i <= mid) sum += !q[i].z * q[i].p, w[k++] = q[i++];\n\twhile (j <= r)\n\t{\n\t\tq[j].sum += sum * q[j].s;\n\t\tw[k++] = q[j++];\n\t}\n\tfor (i = l, j = 0; j < k; i++, j++) q[i] = w[j];\n}\n\nsigned main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i(0); i < n; i++)\n\t{\n\t\tint x, y, p;\n\t\tscanf(\"%d%d%d\", &x, &y, &p);\n\t\tq[i] = { x, y, 0, p, 0, 0, 0 };\n\t}\n\tint p(n - 1);\n\tfor (int i(1); i <= m; i++)\n\t{\n\t\tint x1, y1, x2, y2;\n\t\tscanf(\"%d%d%d%d\", &x1, &y1, &x2, &y2);\n\t\tq[++p] = { x1 - 1, y2, 1, 0, i, -1, 0 };\n\t\tq[++p] = { x2, y1 - 1, 1, 0, i, -1, 0 };\n\t\tq[++p] = { x2, y2, 1, 0, i, 1, 0 };\n\t\tq[++p] = { x1 - 1, y1 - 1, 1, 0, i, 1, 0 };\n\t}\n\tsort(q, q + p + 1);\n\tmerge_sort(0, p);\n\tfor (int i(0); i <= p; i++)\n\t{\n\t\tif (q[i].z)\n\t\t{\n\t\t\tans[q[i].id] += q[i].sum;\n\t\t}\n\t}\n\tfor (int i(1); i <= m; i++) printf(\"%lld\\n\", ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1647597702,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "P3755 [CQOI2017]\u8001C\u7684\u4efb\u52a1"
    },
    {
        "content": "\u539f\u9898\u4f20\u9001\u95e8[>Here<](https://www.luogu.org/problemnew/show/P3755)\n\n\u9898\u89e3\u91cc\u5c45\u7136\u6ca1\u6709cdq\u5206\u6cbb\u3002\u3002\u5413\u7684\u849f\u84bb\u8fd8\u4ee5\u4e3a\u81ea\u5df1\u5b66\u7684\u662f\u5047\u7684cdq\u3002\n\n\u8fd9\u9898\u7528cdq\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u5c31\u662f\u6807\u51c6\u7684\u4e09\u7ef4\u504f\u5e8f\u95ee\u9898\uff1a\n\n\u521d\u59cb\u7684n\u4e2a\u57fa\u7ad9\u770b\u4f5c\u662f\u4fee\u6539\u64cd\u4f5c\uff1b\n\n\u6c42\u77e9\u5f62\u5185\u90e8\u6570\u503c\u548c\u5c31\u50cf\u4e8c\u7ef4\u524d\u7f00\u548c\u4e00\u6837\u62c6\u5f00\u6765\u505a\uff1b\n\n\u6700\u540e\u79bb\u6563\u5316\u4e00\u4e0by\uff0c\u7136\u540e\u628a\u503c\u90fd\u4e22\u5230\u6811\u72b6\u6570\u7ec4\u91cc\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n\nstruct point{\n\tint opt,x,y,orig,p;\n}num[800001],tem[800001];\nint n,m,all[400001],top,tt,lim,t1,t2,t3,t4;\nlong long c[400001],ans[200001];\nvoid update(int ind,long long num){for(;ind<=lim;ind+=ind&-ind)c[ind]+=num;}\nlong long query(int ind){\n\tlong long tot=0;\n\tfor(;ind;ind-=ind&-ind)tot+=c[ind];\n\treturn tot;\n}\nvoid cdq(int l,int r){\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tcdq(l,mid);\n\tcdq(mid+1,r);\n\tint i=l,j=mid+1,ind=l-1;\n\twhile(i<=mid&&j<=r){\n\t\tif(num[i].x<num[j].x||(num[i].x==num[j].x&&num[i].opt<num[j].opt)){\n\t\t\tif(num[i].opt==1){\n\t\t\t\tupdate(num[i].y,num[i].p);\n\t\t\t}\n\t\t\ttem[++ind]=num[i++];\n\t\t}\n\t\telse{\n\t\t\tif(num[j].opt==2){\n\t\t\t\tans[num[j].orig]+=query(num[j].y)*(long long)num[j].p;\n\t\t\t}\n\t\t\ttem[++ind]=num[j++];\n\t\t}\n\t}\n\twhile(j<=r){\n\t\tif(num[j].opt==2){\n\t\t\tans[num[j].orig]+=query(num[j].y)*(long long)num[j].p;\n\t\t}\n\t\ttem[++ind]=num[j++];\n\t}\n\tfor(int k=l;k<i;k++)if(num[k].opt==1)update(num[k].y,-num[k].p);\n\twhile(i<=mid)tem[++ind]=num[i++];\n\tfor(int k=l;k<=r;k++)num[k]=tem[k];\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d%d\",&t1,&t2,&t3);\n\t\tnum[++tt]=(point){1,t1,t2,0,(long long)t3};\n\t\tall[++top]=t2;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d%d\",&t1,&t2,&t3,&t4);\n\t\tnum[++tt]=(point){2,t3,t4,i,1};\n\t\tnum[++tt]=(point){2,t1-1,t4,i,-1};\n\t\tnum[++tt]=(point){2,t3,t2-1,i,-1};\n\t\tnum[++tt]=(point){2,t1-1,t2-1,i,1};\n\t\tall[++top]=t4;\n\t\tall[++top]=t2-1;\n\t}\n\tstd::sort(all+1,all+top+1);\n\tlim=std::unique(all+1,all+top+1)-all-1;\n\tfor(int i=1;i<=tt;i++)num[i].y=std::lower_bound(all+1,all+lim+1,num[i].y)-all;\n\tcdq(1,tt);\n\tfor(int i=1;i<=m;i++)printf(\"%lld\\n\",ans[i]);\n}\n```",
        "postTime": 1537170426,
        "uid": 30903,
        "name": "Isonan",
        "ccfLevel": 0,
        "title": "luoguP3755 [CQOI2017]\u8001C\u7684\u4efb\u52a1"
    },
    {
        "content": "## P3755\u9898\u89e3 \u79bb\u7ebf+\u6811\u72b6\u6570\u7ec4\n\n[\u5144\u5f1f\u9898\u76eeP2163](https://www.luogu.com.cn/problem/P2163)\n\n\u770b\u5230\u8fd9\u4e00\u9053\u9898\u76ee\uff0c\u6211\u56de\u60f3\u8d77\u4e86\u4ee5\u524d\u5b66\u4e60\u7684\u4e8c\u7ef4\u524d\u7f00\u548c\uff0c\u91cc\u9762\u5c31\u7528\u5230\u4e86\u5bb9\u65a5\u539f\u7406\u3002\u90a3\u4e48\uff0c\u8fd9\u9053\u9898\u76ee\u6211\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u53ef\u4ee5\u7528\u5bb9\u65a5\u539f\u7406\u5462\uff1f\u6211\u5728\u8fd9\u91cc\u7ed9\u5927\u5bb6\u8bb2\u89e3\u4e00\u4e0b\u3002\n\n### \u6c42\u9762\u79ef\n\n\u6211\u4eec\u5148\u89c4\u5b9a\u4e0b\uff0c$S_{x,y}$ \u8868\u793a\u5de6\u4e0b\u89d2\u548c\u53f3\u4e0a\u89d2\u4e3a $(0,0)$ \u548c $(x,y)$ \u7684\u77e9\u9635\u5185\u7684\u529f\u7387\u603b\u548c\u3002\u7528\u5de6\u4e0a\u89d2\u548c\u53f3\u4e0a\u89d2\u6765\u8868\u793a\u4e00\u4e2a\u77e9\u5f62\u3002\u7528 $f((x1,y1),(x2,y2))$ \u8868\u793a\u56fe\u5f62\u9762\u79ef\u7684\u8868\u793a\u65b9\u6cd5\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u4e0b\u9762\u7684\u4e00\u5e45\u56fe\u7247\u3002\n\n![\u5982\u4f55\u8ba1\u7b97{(x1,y1),(x2,y2)}\u7684\u524d\u7f00\u548c](https://cdn.luogu.com.cn/upload/image_hosting/j5kohsdc.png)\n\n\u8fd9\u4e00\u5e45\u56fe\u7247\u6211\u4eec\u53ef\u4ee5\u7528**\u5bb9\u65a5\u539f\u7406**\u6765\u89e3\u51b3\u3002\u6211\u4eec\u770b\u4e0b\u4e00\u5e45\u56fe\u3002\n\n![\u8ba1\u7b97\u65b9\u6cd5](https://cdn.luogu.com.cn/upload/image_hosting/2dra3unm.png)\n\n\u5728\u8fd9\u4e00\u5e45\u56fe\u5f62\u91cc\u6211\u6807\u51fa\u4e86\u8bb8\u591a\u7684\u989c\u8272\u3002\u6211\u4eec\u53ef\u4ee5\u7528**\u7eff\u8272+\u7d2b\u8272-\u84dd\u8272-\u9ec4\u8272**\u8fd9\u6837\u7684\u65b9\u6cd5\u6765\u8868\u793a\u6a59\u8272\u77e9\u5f62\u7684\u9762\u79ef\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u6210\u662f\u5b83\u5185\u90e8\u7684\u548c\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u5f97\u51fa\u516c\u5f0f\uff1a\n\n$f((x1,y1),(x2,y2))=s_{x2,y2}+s_{x1,y1}-s_{x1,y2}-s_{x2,y1}$\n\n**\u4f46\u662f\u8fd9\u91cc\u4ec5\u4ec5\u662f\u9762\u79ef\uff0c\u81f3\u4e8e\u8fd9\u91cc\u662f\u8fde\u957f\u90fd\u8981\u8ba1\u7b97\u7684\u6211\u4eec\u5e94\u8be5\u53e6\u5916\u8003\u8651\u3002**\n\n![\u518d\u63a2\u7d22](https://cdn.luogu.com.cn/upload/image_hosting/7kujoe0l.png)\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6a59\u8272\u7684\u8fb9\u7f18\u662f\u8981\u7528\u5230\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u7528\u7684\u8fb9\u7f18\u5e94\u8be5\u9700\u8981\u518d\u539f\u6765\u7684\u57fa\u7840\u4e0a $-1$ \u3002\n\n![explore](https://cdn.luogu.com.cn/upload/image_hosting/pgeo52x7.png)\n\n\u5bf9\u4e8e\u91cd\u590d\u7684\u90e8\u5206\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u9ec4\u8272\u90e8\u5206\u662f\u91cd\u590d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u91cd\u590d\u90e8\u5206\u4e5f\u662f\u9700\u8981 $-1$ \u7684\u3002\u7531\u6b64\uff0c\u516c\u5f0f\u53ef\u4ee5\u53d8\u4e3a\uff1a\n\n$f((x1,y1),(x2,y2))=s_{x2,y2}+s_{x1-1,y1-1}-s_{x1-1,y2}-s_{x2,y1-1}$\n\n\u4f46\u662f\u518d\u6253\u8fd9\u9053\u9898\u76ee\u7684\u65f6\u5019\u6211\u662f\u6ca1\u6709\u60f3\u5230\u7684\uff0c\u53ea\u662f\u540e\u6765\u81ea\u5df1\u8c03\u8bd5\u7684\u65f6\u5019\u624d\u6539\u7684\uff0c\u6240\u4ee5\u8c03\u8bd5\u4e5f\u662f\u5f88\u91cd\u8981\u7684\u3002\n\n\n### \u79bb\u6563\u5316\n\n\u6211\u4eec\u6ce8\u610f\u5230\uff0c$x,y$ \u90fd\u662f int \u8303\u56f4\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u6570\u7ec4\u80af\u5b9a\u5f00\u4e0d\u4e0b\uff0c\u6240\u4ee5\u5c31\u9700\u8981\u7528\u5230\u79bb\u6563\u5316\u4e86\u3002\n\n\u81f3\u4e8e\u7528\u4ec0\u4e48\u53bb\u79bb\u6563\u3002\u6211\u8ba4\u4e3a\uff0c\u9700\u8981\u79bb\u6563\u7684\u4e1c\u897f\u5982\u4e0b\uff1a\n\n- \u6811\u7684\u5750\u6807 $x,y$\n\n- \u5de6\u4e0b\u89d2\uff08\u8bb0\u5f97\u51cf\u53bb1\uff09\u548c\u53f3\u4e0a\u89d2\u7684 $x,y$ \u3002\n\n\u5982\u4f55\u53bb\u91cd\u590d\u7684\u6570\u5b57\uff0c\u90fd\u662f\u7d2b\u9898\u4e86\uff0c\u5927\u5bb6\u81ea\u5df1\u601d\u8003\u5427\u3002\n\n### \u6811\u72b6\u6570\u7ec4\u4f18\u5316\u5feb\u901f\u6c42\u89e3\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u6c42\u89e3\u7684\u95ee\u9898\u4e86\u3002\n\n\u672c\u9898\u6709\u4e24\u4e2a\u9650\u5236\u6761\u4ef6\uff0c\u90a3\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5**\u901a\u8fc7\u679a\u4e3e\u7684\u987a\u5e8f\u628a\u4e00\u79cd\u6761\u4ef6\u62b5\u6d88\uff0c\u5e76\u4e14\u901a\u8fc7\u6570\u636e\u7ed3\u6784\u628a\u53e6\u4e00\u79cd\u62b5\u6d88**\u5462\uff1f\u5728\u8fd9\u4e00\u9053\u9898\u76ee\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5**\u79bb\u7ebf**\uff0c\u5e76\u4e0d\u4e00\u5b9a\u51fa\u6765\u4e00\u4e2a\u9a6c\u4e0a\u6709\u7b54\u6848\uff0c\u5148\u5b58\u7740\u3002\u800c\u6c42\u7b54\u6848\u7684\u987a\u5e8f\uff0c\u5c31\u662f\u6392\u5e8f\u4e4b\u540e\u4ee5 $x$ \u8f74\u5347\u5e8f\u626b\u63cf\u4e00\u904d\uff0c\u6709\u70b9\u50cf\u626b\u63cf\u7ebf\u7684\u6837\u5b50\u3002\n\n\u626b\u5230\u81ea\u5df1\u4e4b\u540e\uff0c\u7531\u4e8e\u6b64\u65f6 $x$ \u90fd\u662f\u6bd4\u81ea\u5df1\u5c0f\u7684\uff0c\u6240\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7edf\u8ba1 $y$ \u6bd4\u81ea\u5df1\u5c0f\u7684\u529f\u7387\u4e4b\u548c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7edf\u8ba1\u70b9\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5f00\u7ed3\u6784\u4f53\uff0c\u5e76\u4e14\u628a\u57fa\u7ad9\u548c\u533a\u95f4\u7684\u56db\u4e2a\u89d2\u3002\n\n```cpp\nstruct data{\n\tint x,y,id,mul,xx;\n   //id\uff1a\u5e8f\u53f7\uff0c\u65b9\u4fbf\u540e\u9762\u7edf\u8ba1\u7b54\u6848\uff0c\u5e76\u4e14\u4f5c\u4e3a\u6392\u5e8f\u4f9d\u636e\uff0c\u5982\u679c\u662f\u57fa\u7ad9\uff0c\u90a3\u4e48id\u4e3a0\n   //mul\uff1a\u4e58\uff0c\u5c31\u662f\u7edf\u8ba1\u4e581\u8fd8\u662f-1\uff0c\u540e\u9762\u7edf\u8ba1\u7b54\u6848\u65b9\u4fbf\n   //xx\uff1a\u5f53\u524d\u70b9\u7684\u529f\u7387\n}point[2500005];\n```\n\n\u4f46\u662f\u6392\u5e8f\u90e8\u5206\u6211\u8ba4\u4e3a cmp \u8fd9\u4e2a\u51fd\u6570\u9700\u8981\u8bf4\u660e\u4e00\u4e0b\u3002\n\n```cpp\ninline bool cmp(data x,data y){\n\tif(x.x==y.x){\n\t\treturn x.id<y.id;//\u5982\u679cx\u4e00\u6837\u7684\u8bdd\uff0c\u5c31\u7528id\u6765\u8f85\u52a9\uff0c\u7531\u4e8e\u6211\u628a\u57fa\u5730\u7684id\u8bbe\u4e3a0\uff0c\u6240\u4ee5\u5c0f\u7684\u5728\u524d\uff0c\u5927\u7684\u5728\u540e\uff0c\u786e\u4fdd\u7edf\u8ba1\n\t}\n\treturn x.x<y.x;//\u4ee5x\u4e3a\u4e3b\u4f53\n}\n```\n\n### \u7f16\u5199\u4ee3\u7801\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5199\u51fa\u6211\u4eec\u7684\u4ee3\u7801\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\ninline int N=2500005,INF=1e9;\nint n,m,tem_y[2500005],x,y,z,tot,x_1,y_1,c[2500005],ans[2500005],pose;//tem_y\u79bb\u6563\u5316\u5de5\u5177\nstruct data{\n\tint x,y,id,mul,xx;\n}point[2500005];\ninline void read(int &res){//\u8bfb\u4f18\u52a0\u901f\n\tres=0;int f=1;char ch=getchar();\n\twhile('0'>ch||ch>'9'){\n\t\tif(ch=='-') f=-1;\n\t\tch=getchar();\n\t}\n\twhile('0'<=ch&&ch<='9'){\n\t\tres=(res<<1)+(res<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\tres*=f;\n}\ninline bool cmp(data x,data y){\n\tif(x.x==y.x){\n\t\treturn x.id<y.id;\n\t}\n\treturn x.x<y.x;\n}\n//\u6811\u72b6\u6570\u7ec4\ninline int lowbit(int x){return x&-x;}\ninline void add(int x,int k){\n\twhile(x<=tem_y[0]){\n\t\tc[x]+=k;\n\t\tx+=lowbit(x);\n\t}\n}\ninline int get(int x){\n\tint res=0;\n\twhile(x){\n\t\tres+=c[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn res;\n}\n\ninline int find(int x){//\u6211\u7528\u4e8c\u5206\u53bb\u5bfb\u627e\u79bb\u6563\u4e4b\u540e\u7684\u503c\n\tint mid,l=1,r=tem_y[0];\n\twhile(l<=r){\n\t\tmid=l+r>>1;\n\t\tif(tem_y[mid]==x) return mid;\n\t\tif(tem_y[mid]>x) r=mid-1;\n\t\telse l=mid+1;\n\t}\n}\nsigned main(){\n\tread(n),read(m);\n\tfor(int i=1;i<=n;i++){\n\t\tread(x),read(y);read(z);\n\t\ttem_y[++tem_y[0]]=y;\n\t\tpoint[++tot]=(data){x,y,0,0,z};\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tread(x),read(y),read(x_1),read(y_1);\n      //x_1,y_1\u662f\u53f3\u4e0a\u89d2\uff0cx,y\u662f\u5de6\u4e0a\u89d2\n\t\ttem_y[++tem_y[0]]=y-1;\n\t\ttem_y[++tem_y[0]]=y_1;\n      //\u628a\u56db\u4e2a\u89d2\u843d\u90fd\u5f04\u4e00\u8fb9\uff0c\u8bb0\u5f97-1\n\t\tpoint[++tot]=(data){x-1,y-1,i,1,0};\n\t\tpoint[++tot]=(data){x_1,y_1,i,1,0};\n\t\tpoint[++tot]=(data){x_1,y-1,i,-1,0};\n\t\tpoint[++tot]=(data){x-1,y_1,i,-1,0};\n\t}\n    \n   //\u53bb\u91cd\n\tsort(tem_y+1,tem_y+tem_y[0]+1);\n\tfor(int i=1;i<tem_y[0];i++) if(tem_y[i]==tem_y[i+1]) tem_y[i]=INF;\n\tsort(tem_y+1,tem_y+tem_y[0]+1);\n\twhile(tem_y[tem_y[0]]==INF) --tem_y[0];\n\tsort(point+1,point+tot+1,cmp);\n\t\n    for(int i=1;i<=tot;i++){\n\t\tpose=find(point[i].y);\n      //\u5206\u7c7b\u8ba8\u8bba\uff0c\u5982\u679c\u662f\u77e9\u5f62\u7684\u56db\u8fb9\u5f62\u5c31\u8ba1\u7b97\uff0c\u53cd\u4e4b\u5c31\u52a0\u5165\u8fd9\u4e2a\u70b9\n\t\tif(point[i].id) ans[point[i].id]+=point[i].mul*get(pose);\n\t\telse add(pose,point[i].xx);\n\t}\n\tfor(int i=1;i<=m;i++) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n\u8c22\u8c22\u5927\u5bb6\u3002",
        "postTime": 1677847134,
        "uid": 461359,
        "name": "huangrenheluogu",
        "ccfLevel": 5,
        "title": "P3755 \u79bb\u7ebf+\u6811\u72b6\u6570\u7ec4"
    }
]