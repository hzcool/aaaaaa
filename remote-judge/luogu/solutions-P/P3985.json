[
    {
        "content": "~~**\u8fd9\u662f\u4e00\u9053\u5927\u6c34\u9898\uff01\uff1f**~~\n\n\u5728\u505a\u5b8c \u5f00\u5fc3\u7684\u91d1\u660e \u548c \u91d1\u660e\u7684\u50a8\u84c4\u8ba1\u5212 \u540e\n\n\u53d1\u73b0\u8fd9\u4e5f\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u80cc\u5305\n\n###### **\u5728\u9884\u5904\u7406\u65f6\u5c06\u6bcf\u4e2a\u7269\u54c1\u7684\u4f53\u79ef\u90fd\u51cf\u53bb\uff08MINV-1\uff09**\n\n\u5176\u4e2dMINV\u662f\u6240\u4ee5\u7269\u54c1\u4e2d\u7684\u6700\u5c0f\u7684\u4f53\u79ef\uff08\u4ef7\u503c\uff09\n\n\u518d\u5728dp\u6570\u7ec4\u4e2d\u591a\u52a0\u4e00\u7ef4\uff0c\u8bb0\u5f55\u4e00\u5171\u9009\u4e86\u51e0\u4e2a\n\n\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u53ef\u4ee5\u77e5\u9053\u5f53\u524d\u9009\u7684\u603b\u4f53\u79ef\n\ndp[i][j]\u8868\u793a\u6211\u9009\u7684\u4fee\u6539\u540e\u7684\u7269\u54c1\u7684\u4f53\u79ef\u4e3ai\uff0c\u9009\u4e86j\u4e2a\n\n\u5219\u5f53\u524d\u7684\u603b\u4f53\u79ef\u4e3a\uff1ai+j*minv ! ! !\n\n\u597d\u597d\u7406\u89e3\uff01\uff01\uff01\n\n\u4ee3\u7801\u4e0d\u957f\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mx=110;\nint dp[mx*5][mx],n,w[mx],v[mx],sumv,minv=1e10,sv;\nint main()\n{\n\tcin>>n>>sumv;\n\tfor (int i=1;i<=n;i++) cin>>v[i]>>w[i],minv=min(minv,v[i]),sv+=v[i];\n\tminv--;\n        for (int i=1;i<=n;i++) v[i]-=minv;\n        sv-=n*minv;\n\tfor (int i=1;i<=n;i++)\n\tfor (int j=sv;j>=v[i];j--)\n\tfor (int k=n;k>=1;k--)\n\tif (j+k*minv<=sumv) dp[j][k]=max(dp[j][k],dp[j-v[i]][k-1]+w[i]);//cout<<dp[j][k]<<\" \"<<j<<\" \"<<k<<endl;\n    \n\tint ans=0;\n\tfor (int j=1;j<=sv;j++)\n\tfor (int i=1;i<=n;i++) ans=max(ans,dp[j][i]);\n\tcout<<ans;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1569936772,
        "uid": 46772,
        "name": "\u84dd\u83b2\u82b1__",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3985 \u3010\u4e0d\u5f00\u5fc3\u7684\u91d1\u660e\u3011"
    },
    {
        "content": "\u521a\u7ffb\u4e86\u4e0b\u9898\u89e3\uff0c\u53d1\u73b0\u6ca1\u6709\u6211\u8fd9\u79cd\u505a\u6cd5\uff0c\u4e8e\u662f\u5c31\u6765\u53d1\u4e00\u4e0b\u597d\u4e86\u3002\n\n\u8fd9\u9898\u5176\u5b9e\u6211\u4eec\u53ea\u7528\u679a\u4e3e\u4e0b\u6bcf\u79cd\u91cd\u91cf\u7684\u7528\u51e0\u4e2a\u5c31\u53ef\u4ee5\u4e86\uff0c\u53cd\u6b63\u603b\u5171\u4e5f\u53ea\u67094\u79cd\u91cd\u91cf\uff0c\u95ee\u9898\u4e0d\u5927\u3002\n\n\u540c\u4e00\u79cd\u91cd\u91cf\u5185\u6211\u4eec\u5f53\u7136\u5148\u9009\u4ef7\u503c\u9ad8\u7684\u4e86\uff0c\u6240\u4ee5\u8bfb\u8fdb\u6765\u4e4b\u540e\u6392\u4e2a\u5e8f\u5c31\u597d\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#define itn int//\u9632\u624b\u6ed1\nusing namespace std;\nitn n,m,w[105],v[105],ans,minn=1e9+7;\nint tot0,tot1,tot2,tot3;//\u6bcf\u79cd\u7269\u54c1\u7684\u4e2a\u6570\nint w0[105],w1[105],w2[105],w3[105];//\u6bcf\u79cd\u7269\u54c1\u7684\u4ef7\u503c\nint s0[105],s1[105],s2[105],s3[105];//\u4ef7\u503c\u7684\u524d\u7f00\u548c\nbool cmp(int x,int y){return x>y;}\nint main()\n{\n  scanf(\"%d%d\",&n,&m);\n  for(int i=1;i<=n;i++)  scanf(\"%d%d\",&w[i],&v[i]),minn=min(minn,w[i]);\n  for(int i=1;i<=n;i++)\n  {\n    if(w[i]-minn==0)  w0[++tot0]=v[i];\n    if(w[i]-minn==1)  w1[++tot1]=v[i];\n    if(w[i]-minn==2)  w2[++tot2]=v[i];\n    if(w[i]-minn==3)  w3[++tot3]=v[i];//\u5206\u522b\u653e\u51654\u4e2a\u6570\u7ec4\n  }\n  sort(w0+1,w0+tot0+1,cmp);\n  sort(w1+1,w1+tot1+1,cmp);\n  sort(w2+1,w2+tot2+1,cmp);\n  sort(w3+1,w3+tot3+1,cmp);//\u6309\u4ef7\u503c\u4ece\u9ad8\u5230\u5e95\u6392\u5e8f\n  for(int i=1;i<=tot0;i++)  s0[i]=s0[i-1]+w0[i];\n  for(int i=1;i<=tot1;i++)  s1[i]=s1[i-1]+w1[i];\n  for(int i=1;i<=tot2;i++)  s2[i]=s2[i-1]+w2[i];\n  for(int i=1;i<=tot3;i++)  s3[i]=s3[i-1]+w3[i];//\u8ba1\u7b97\u524d\u7f00\u548c\n  for(int i=0;i<=tot0;i++)//\u679a\u4e3e\u6bcf\u79cd\u7269\u54c1\u7528\u51e0\u4e2a\n    for(int j=0;j<=tot1;j++)\n\t  for(int k=0;k<=tot2;k++)\n\t  {\n\t    int sum=i*minn+j*(minn+1)+k*(minn+2);\n\t\tif(sum<=m)//\u4e0d\u8d85\u8fc7\u603b\u94b1\u6570\n\t    {\n\t  \t  int l=(m-sum)/(minn+3);\n\t  \t  ans=max(ans,s0[i]+s1[j]+s2[k]+s3[l]);//\u66f4\u65b0\u7b54\u6848\n\t    } \t  \t\n\t  }\n  printf(\"%d\",ans);\n  return 0;\n}\n```\n\n\u662f\u4e0d\u662f~~\u7b80\u5355\u7c97\u66b4~~\u5f88\u597d\u7406\u89e3\u5462...",
        "postTime": 1573815444,
        "uid": 69796,
        "name": "\u6797\u806a",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3985 \u3010\u4e0d\u5f00\u5fc3\u7684\u91d1\u660e\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e4d\u4e00\u770b\u50cf\u4e00\u4e2a\u88f8\u768401\u80cc\u5305\uff0c\u4f46\u662f\u4ed4\u7ec6\u770b\u6570\u636e\u8303\u56f4\u5c31\u4f1a\u53d1\u73b0\n\u6570\u7ec4\u6839\u672c\u653e\u4e0d\u4e0b\u3002\n\u4f46\u662f\u518d\u8bfb\u4e00\u904d\u9898\u4f1a\u53d1\u73b0\u597d\u50cf\u6709\u4e00\u4e2a\u5f88\u660e\u663e\u7684\u6761\u4ef6\u6ca1\u6709\u7528\uff1a\n \u5988\u5988\u770b\u5230\u8d2d\u7269\u5355\u540e\u8fdb\u884c\u4e86\u5ba1\u67e5\uff0c\u8981\u6c42\u8d2d\u7269\u5355\u4e0a\u6240\u6709\u7684\u7269\u54c1\u4ef7\u683c\u7684\u6781\u5dee\uff08\u6700\u8d35\u7684\u51cf\u53bb\u6700\u4fbf\u5b9c\u7684\uff09\u4e0d\u8d85\u8fc73\uff08\u5f53\u7136\u91d1\u660e\u81f3\u4eca\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\uff09\n\n\u8fd9\u6837\u7684\u8bdd\u5176\u5b9e\u53ef\u4ee5\u4ee5300\u4e3a\u5206\u754c\u7ebf\u5316\u4e3a\u4e24\u90e8\u5206\u6765\u505a\u3002\u5f53\u6700\u5c0f\u503c <=300 \u65f6\u5f53\u4e00\u4e2a\u80cc\u5305\u505a\uff0c>300 \u65f6\u8d2a\u5fc3\u505a\uff1b\n\n\u8fd9\u4e2a\u76f8\u4fe1\u697c\u4e0a\u9898\u89e3\u90fd\u63d0\u5230\u8fc7\u4e86\uff0c\u4f46\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u5206\u5462\uff1f\n\n\u73b0\u5728\u53d6\u6240\u6709\u4ef7\u683c\u91cc\u9762\u6700\u5927\u4e3a maxn \uff0c\u6700\u5c0f\u4e3a minn \uff1b\n\n\u9996\u5148\uff0c\u6781\u5dee\u4e3a3\uff0c\u6211\u4eec\u5047\u8bbe\u4e70100\u4ef6\uff08\u6700\u591a\u4ef6\uff09\uff0c\u90a3\u4e48\u73b0\u5728\u90fd\u4e70\u6700\u4fbf\u5b9c\u7684\u548c\u90fd\u4e70\u6700\u8d35\u7684\u5dee 3 * 100 \u5143\u94b1\uff1b\n\u8fd9\u4e2a\u5dee\u503c\u5728 minn>300 \u65f6\u65e0\u8bba\u5982\u4f55\u90fd\u4e70\u4e0d\u6210\u53e6\u4e00\u4ef6\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6b64\u65f6\u53ef\u4ee5\u4e70\u7684\u6700\u5927\u4ef6\u6570\u5c31\u662f w/maxn \u3002\n\u90a3\u4e48\u4e70\u7684\u4ef6\u6570 <100 \u65f6\uff0c\u4e70\u6700\u4fbf\u5b9c\u7684\u548c\u90fd\u4e70\u6700\u8d35\u7684\u5dee\u503c < 3 * 100 \u5143\u94b1\uff0c\u548c\u4e0a\u4e00\u79cd\u60c5\u51b5\u4e00\u6837\uff1b\n\u6b64\u65f6\u6309\u7167p\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u4ece\u5927\u5f80\u5c0f\u9009 w/maxn \u4ef6\u5c31\u662f\u7b54\u6848\u4e86\uff1b\n\n\u4f46\u662f\u5f53minn<=300\u65f6\u5b8c\u5168\u6709\u53ef\u80fd\u518d\u4e70\u4e00\u4ef6\uff0c\u4e24\u4ef6\uff0c\u66f4\u591a\u4ef6\u3002\u4ef6\u6570\u4e0d\u786e\u5b9a\uff0c\u53ea\u80fd\u6309\u716701\u80cc\u5305\u7684\u601d\u60f3DP\u505a\u4e86\uff1b\n\n\n\u4ee3\u7801\u5982\u4e0b\n```\n#include <iostream>\n#include <cstdio> \n#include <algorithm>\nusing namespace std;\n\nint p[102],v[102],n,w;\nint f[300002],maxn,minn=9999999;\nbool cmp(int x,int y){\n\treturn x>y;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&w);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&v[i],&p[i]);\n\t\tminn=min(minn,v[i]);\n\t\tmaxn=max(maxn,v[i]);\n\t}\n\tif(minn<=300){\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=w;j>=v[i];j--){\n\t\t\t\tf[j]=max(f[j],f[j-v[i]]+p[i]);\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\",f[w]);\n\t}\n\telse{\n\t\tint ans=0;\n\t\tsort(p+1,p+n+1,cmp);\n\t\tfor(int i=1;i<=w/maxn;i++)\n\t\t\tans+=p[i];\n\t\tprintf(\"%d\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1568959652,
        "uid": 143445,
        "name": "sy_zmq_001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3985 \u3010\u4e0d\u5f00\u5fc3\u7684\u91d1\u660e\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u9a97\u5206\u51fa\u5947\u8ff9\u7684\u60f3\u6cd5\uff1a\u5f53vmin>300\u7684\u65f6\u5019\uff0c\u4e5f\u5c31\u662f\u6700\u4fbf\u5b9c\u7684\u7269\u54c1\u5728300\u5143\u4ee5\u4e0a\u3002\u5c31\u7b97\u662f99\u4e2a304\u7684\u7269\u54c1\uff0c\u591a\u51fa\u6765\u7684297\u5143\u4e5f\u4e0d\u80fd\u4e70\u4e00\u4e2a\u65b0\u4e1c\u897f\u3002\u6240\u4ee5\u5224\u65ad\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e300\uff0c\u5982\u679c\u6ee1\u8db3\u5c31\u5f53\u505a01\u80cc\u5305\u505a\uff0c\u8bb0\u5f55\u4e70\u4e86\u6700\u4fbf\u5b9c\u4e1c\u897f\u7684\u4e2a\u6570\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,W,v[105],p[105],dp[30305],vmin,vmax;\nint main(){\n    cin>>n>>W;\n    vmin=999999999;\n    for(int i=1;i<=n;i++){\n        cin>>v[i]>>p[i];\n        vmin=min(vmin,v[i]);\n        vmax=max(vmax,v[i]);\n    }\n    if(vmin<=300){\n    for(int i=1;i<=n;i++){\n        for(int j=30300;j>=vmin;j--){\n                dp[j]=max(dp[j],dp[j-v[i]]+p[i]);\n            }\n        }\n        cout<<dp[W];\n    }\n    else{\n    for(int i=1;i<=n;i++){\n        for(int j=W/vmax;j>=1;j--){\n                dp[j]=max(dp[j],dp[j-1]+p[i]);\n        }\n    }\n    cout<<dp[W/vmax];\n    }\n}\n```",
        "postTime": 1513241119,
        "uid": 38055,
        "name": "Npse_D",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3985 \u3010\u4e0d\u5f00\u5fc3\u7684\u91d1\u660e\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u2026\u2026\u5176\u5b9e\u2026\u2026\u7528\u7206\u641c\u662f\u53ef\u4ee5\u8fc7\u7684\uff0c\u6bd5\u7adfn\u53ea\u6709100\uff0c\u72b6\u6001\u6570\u5e76\u4e0d\u662f\u5f88\u5927\u2026\u2026\u91cd\u70b9\u5728\u4e8e$v$\u6700\u591a\u53ea\u67093\u79cd\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5dfs\u679a\u4e3e\u6bcf\u4e00\u79cd\u9009\u4e86\u591a\u5c11\u7136\u540e\u5c31\u884c\u4e86\uff08\u6ce8\u610f\u6bcf\u79cd\u4ef7\u683c\u8981\u4f18\u5148\u53d6\u4ef7\u503c\u6700\u5927\u7684\uff09\uff0c\u590d\u6742\u5ea6\u4ec5\u6709$O(n^3)$\u3002\n\n~~\u8868\u793a\u4e0d\u662f\u5f88\u7406\u89e3\u8fd9\u9898\u4e3a\u4ec0\u4e48\u8981\u7528\u90a3\u4e48\u9ebb\u70e6\u7684\u505a\u6cd5qaq\u2026\u2026~~\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nint maxn=0;\nint w;\nint ps[101],vs[101],ref[105];\nvector<int> vec[101];//\u5bf9\u6bcf\u4e2a\u4ef7\u683c\u5f00\u4e2avector\u5b58\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u7684\u4ef7\u503c \nint sums[101][101];//\u7136\u540e\u518d\u7528\u524d\u7f00\u548c\u8bb0\u5f55 \nvoid dfs(int val,int qian,int pos,int deep) {//\u6700\u66b4\u529b\u4e0d\u8fc7\u7684\u7206\u641c \n\tmaxn=max(maxn,val);\n\tif(!deep)return;\n\tdfs(val,qian,pos+1,deep-1);\n\tfor(register int i=1; i<=vec[pos].size(); i++) {\n\t\tqian+=ref[pos];\n\t\tif(qian>w)return;\n\t\tdfs(val+sums[pos][i],qian,pos+1,deep-1);\n\t}\n}\nint cmp(const int &a,const int &b) {\n\treturn(a>b);\n}\nint main() {\n\tint n;\n\tcin>>n>>w;\n\tfor(register int i=1; i<=n; i++) {\n\t\tcin>>vs[i]>>ps[i];\n\t\tref[i]=vs[i];\n\t}\n\tsort(ref+1,ref+1+n);//\u79bb\u6563\u5316\u4ef7\u683c \n\tint newl=unique(ref+1,ref+1+n)-ref-1;\n\tfor(register int i=1; i<=n; i++) {\n\t\tvs[i]=lower_bound(ref+1,ref+1+newl,vs[i])-ref;\n\t\tvec[vs[i]].push_back(ps[i]);\n\t}\n\tfor(register int i=1; i<=newl; i++) {\n\t\tsort(vec[i].begin(),vec[i].end(),cmp);//\u6392\u5e8f \n\t\tfor(register int j=1; j<=vec[i].size(); j++) {\n\t\t\tsums[i][j]=sums[i][j-1]+vec[i][j-1];\n\t\t}\n\t}\n\tdfs(0,0,1,newl);\n\tcout<<maxn<<endl;\n\treturn(0);\n}\n```",
        "postTime": 1540957961,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3985 \u3010\u4e0d\u5f00\u5fc3\u7684\u91d1\u660e\u3011"
    },
    {
        "content": "\u8003\u5b8cnoip\u4e4b\u540e\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\u3002\n\n\u8fd9\u4e2a\u9898\u4e4d\u4e00\u770b\u662f\u4e00\u4e2a\u80cc\u5305\uff0c\u4e8b\u5b9e\u4e0a\u7684\u786e\u5c31\u662f\u4e00\u4e2a\u80cc\u5305\u3002\u7136\u540e\u5c31\u60f3\u6d1b\u8c37\u6708\u8d5b\u5565\u65f6\u5019\u6709\u8fd9\u79cd\u4e00\u773c\u9898\u3002\u3002\u3002\u3002\u7ed3\u679c\uff0c\u8fd9\u4e2a\u3002\u3002w\u7565\u5927\u4e86\u4e00\u70b9\u5427\u3002\u3002\u3002\u81ea\u7136\u60f3\u5230\u4e86\u8981\u538b\u4e00\u4e0b\u3002\u4f46\u662f\u600e\u4e48\u538b\uff0c\u6211\u6709\u4e24\u79cd\u601d\u8def\uff0c\u4e00\u79cd\u5c31\u662f\u697c\u4e0b\u7684\u65b9\u6cd5\uff0c\u697c\u4e0b\u89e3\u91ca\u7684\u5df2\u7ecf\u5f88\u8be6\u7ec6\u4e86\u3002\u8fd8\u6709\u4e00\u79cd\u662f\u6211\u6700\u5148\u60f3\u5230\u7684\u601d\u8def\uff0c\u5728\u8fd9\u91cc\u6211\u4ecb\u7ecd\u4e00\u4e0b\uff1a\u9996\u5148\uff0c\u4ed4\u7ec6\u8bfb\u9898\u4e4b\u540e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6240\u6709\u7269\u54c1\u7684\u603b\u4ef7\u683c\u662f\u59cb\u7ec8\u5927\u4e8ew\u7684\uff0c\u800c\u4e14\u5988\u5988\u7684\u90a3\u4e2a\u6781\u5dee\uff0c\u4fdd\u8bc1\u4e86\u54ea\u6015\u4e00\u767e\u4ef6\u5168\u4e70\u6700\u4fbf\u5b9c\u7684\uff0c\u5982\u679c\u5b83\u7684\u4ef7\u683c\u9ad8\u8fc7\u4e86300\uff0c\u7167\u6837\u4e70\u4e0d\u8d77\u90a3\u4e2a\u6bd4\u6700\u4fbf\u5b9c\u8fd8\u8d351\u7684\u90a3\u4e2a\u4e86\uff0c\u4e8e\u662f\u5c31\u6709\u4e86\u5982\u4e0b\u538b\u7f29\u4f53\u79ef\u7684\u601d\u8def\uff1a\n\n```cpp\nif(minn>500)\n    {\n        for(re int i=1;i<=n;i++)\n        {\n            jia+=w[i]-minn;\n            w[i]=500+w[i]-minn;\n        }\n        if(m%minn==0)\n        m=(m/minn)*500;\n        else\n        m=(m/minn)*500+jia;\n    }\n```\n\u5176\u4e2dminn\u662f\u6700\u4fbf\u5b9c\u7684\u90a3\u79cd\u4ef7\u94b1\u3002\n\u7136\u540e\u76f4\u63a5\u8dd1\u80cc\u5305\u5c31\u53ef\u4ee5\u4e86\uff0c\u6ca1\u4ec0\u4e48\u5176\u4ed6\u8981\u8bf4\u7684\u3002\n\n\u8c8c\u4f3c\u8fd8\u662f\u6bd4\u8f83\u5feb\u7684\u3002\n",
        "postTime": 1511862394,
        "uid": 49223,
        "name": "Victorique",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3985 \u3010\u4e0d\u5f00\u5fc3\u7684\u91d1\u660e\u3011"
    },
    {
        "content": "\u6211\u505a\u8fd9\u9053\u9898\u7684\u601d\u8def\u662f\u6a21\u62df\u94fe\u8868\u50a8\u5b58\uff0c\u628av\u503c\u4e00\u6837\u7684\u653e\u5165\u4e00\u4e2a\u94fe\u4e2d\uff0c\u5e76\u4e14\u628a\u94fe\u6309\u7167\u4e0d\u4e25\u683c\u9012\u51cf\u6392\u5217\n\n**\u8fd9\u9053\u9898\u5f88\u7b80\u5355**\n\n...\u7136\u800c\u6211\u6362\u4e863\u79cd\u505a\u6cd5\n\n\u53ef\u4ee5\u5f88\u7b80\u5355\u7684\u8bc1\u660e\uff0c\u5982\u679c\u53d6v\u4e00\u6837\u7684\uff0c\u53d6p\u6700\u5927\u7684\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\n\n\u5982\u679c\u8981\u53d6\u7b2cn\u4e2a\uff0c\u4e3a\u4fdd\u8bc1\u6700\u4f18\uff0c\u5fc5\u53d6\u524d\u9762\u7684\u6240\u6709\u6570\n\n\u5269\u4e0b\u7684\u5c31\u662f###baoli###\u4e86\uff08\u56e0\u4e3a\u53ea\u6709100\u4e2a\u6570\uff0c\u901a\u8fc7\u8ba1\u7b97\u53ef\u4ee5\u5f97\u5230\u8ba1\u7b97\u6b21\u6570\u4e0d\u4f1a\u8d85\u8fc72500\u6b21\uff0c\u4e0d\u4f1a\u8d85\u65f6\uff09\n\n\u6211\u7684\u65b9\u6cd5\u4e3b\u8981\u662f\u9488\u5bf9\u6bd4\u8f83\u5927\u7684\u60c5\u51b5\n\n\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\nstruct data{\n    int p;\n    int v;\n}a[101];\nstruct list{\n    int len;\n    int sum_p[101];\n    int sum_v[101];\n}b[101];\nint FIND(list &A,list &B,list &C,list &D,int rest);\nint n,W,maxn=0;\ninline bool cmp(data n1,data n2){\n    if(n1.v==n2.v) return n1.p>n2.p;\n    else return n1.v<n2.v;\n}\nint main(){\n    ios::sync_with_stdio(false);\n    cin>>n>>W;\n    int i,j;\n    for(i=1;i<=n;++i)\n        cin>>a[i].v>>a[i].p;\n    sort(a+1,a+n+1,cmp);\n    a[0].v=a[1].v;\n    memset(b,0,sizeof(b));\n    int pos=0;\n    for(i=1,j=1;i<=n;++i){\n    if(a[i].v!=a[i-1].v) {\n        b[j].len=i-pos-1;\n        pos=i-1;\n        j++;}\n        b[j].sum_p[i-pos]=b[j].sum_p[i-1-pos]+a[i].p;\n        b[j].sum_v[i-pos]=b[j].sum_v[i-1-pos]+a[i].v;\n    if(i==n){\n        b[j].len=i-pos;\n    }\n    }\n    int list_num=j;\n```\n\u8fd9\u4e0a\u9762\u662f\u6a21\u62df\u94fe\u8868\uff0c\u6ce8\u610fpos\u8bb0\u5f55\u5f00\u59cb\u4f4d\u7f6e-1\uff0c\u524d\u7f00\u548c\u51cf\u5c11\u540e\u9762\u7684\u8fd0\u7b97\uff0c\u540e\u9762\u662f\u641c\u7d22\n```cpp\n    for(i=1;i<=list_num;++i){\n    FIND(b[i],b[i+1],b[i+2],b[i+3],W);\n    }\n    cout<<maxn;\nreturn 0;\n}\n//\u8fd9\u91cc\u7528&A\u6765\u51cf\u5c11\u8c03\u7528\u51fd\u6570\u7684\u590d\u5236\u6570\u7ec4\u65f6\u95f4\u548c\u7a7a\u95f4\uff0c\u53c2\u6570rest\u5176\u5b9e\u53ef\u4ee5\u4e0d\u8981\uff0c\u6211\u53ea\u662f\u7b2c\u4e00\u904d\u5199\u7684\u65f6\u5019\u60f3\u9519\u4e86\nint FIND(list &A,list &B,list &C,list &D,int rest){\n    int i,j,h,l;\n    for(i=0;i<=A.len;++i){\n        for(j=0;j<=B.len;++j){\n            for(h=0;h<=C.len;++h){\n                for(l=0;l<=D.len;++l){\n                    if(A.sum_v[i]+B.sum_v[j]+C.sum_v[h]+D.sum_v[l]>rest) break;\n                    if(j!=0&&B.sum_v[1]-A.sum_v[1]>3) break;\n                    if(h!=0&&C.sum_v[1]-A.sum_v[1]>3) break;\n                    if(l!=0&&D.sum_v[1]-A.sum_v[1]>3) break;\n//\u6240\u6709\u4e0d\u6210\u7acb\u7684\u60c5\u51b5\u9700\u8981\u8df3\u8fc7\uff0c\u7531\u4e8esum\u9012\u589e\uff0c\u6240\u4ee5\u540e\u9762\u7684\u6570\u4e0d\u7528\u8003\u8651\uff0c\u76f4\u63a5break\uff1b\n//\u53ea\u8981\u6210\u7acb\u5c31\u8981\u679a\u4e3e\uff1b\n                    maxn=max(maxn,A.sum_p[i]+B.sum_p[j]+C.sum_p[h]+D.sum_p[l]);\n                }\n            }\n        }\n    }\n    return maxn;\n}\n```",
        "postTime": 1512481710,
        "uid": 57594,
        "name": "Alessandro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3985 \u3010\u4e0d\u5f00\u5fc3\u7684\u91d1\u660e\u3011"
    },
    {
        "content": "## \u76f4\u63a5\u80cc\u5305\u662f\u4f1a\u7206\u7a7a\u95f4\u7684\uff0c\u90a3\u4e48\u8003\u8651\u538b\u7f29\u3002\u8bb0\u5f55\u6240\u6709\u7269\u54c1\u7684\u4ef7\u683c\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503cmaxv\u548cminv,\u5f53minv<=300\u7684\u65f6\u5019\u53ef\u4ee5\u76f4\u63a5\u80cc\u5305\u6c42\u89e3\uff0c\u53e6\u4e00\u79cd\u60c5\u51b5\u53ef\u4ee5\u5f88\u5bb9\u6613\u7531\u7ea6\u675f\u6761\u4ef6\u5f97\u5230\uff0cw/minv == w/maxv\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u8d2a\u5fc3\u9009\u53d6\u5f97\u5230\u7b54\u6848\u3002\n### \u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 300*100 + 500;\nconst int maxint = 0x3f3f3f3f;\nint dp[maxn];\nint n,w;\nstruct node{\n    int v, p;\n};\nnode data[200];\nstruct cmp{\n    bool operator ()(const node &a, const node &b){\n        return a.p > b.p;\n    }\n};\nint main(){\n    int i,j;\n    scanf(\"%d %d\",&n, &w);\n    int maxv = 0;\n    int minv = maxint;\n    for(i = 1; i <= n; i++) {\n            scanf(\"%d %d\",&data[i].v, &data[i].p);\n            if(data[i].v > maxv) maxv = data[i].v;\n            if(data[i].v < minv) minv = data[i].v;\n    }\n    sort(data + 1, data + n + 1, cmp());\n    memset(dp, 0, sizeof(dp));\n    if(minv <= 300){\n        for(i = 1; i <= n; i++){\n            for(j = maxn - 1; j >= data[i].v; j--){\n                dp[j] = max(dp[j - data[i].v] + data[i].p, dp[j]);\n            }\n        }\n        printf(\"%d\\n\", dp[w]);\n    }else{\n        int tn = w / minv;\n        int ans = 0;\n        for(i = 1; i <= tn ; i++) ans+=data[i].p;\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1542372781,
        "uid": 149742,
        "name": "zengkaixin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3985 \u3010\u4e0d\u5f00\u5fc3\u7684\u91d1\u660e\u3011"
    },
    {
        "content": "\u5076\u7136\u53d1\u73b0\u4e86\u8fd9\u9053\u9898\uff0c\u7136\u540e\u77ac\u95f4\u6709\u4e86\u601d\u8def\uff0c\u7136\u540e\u5c31\u8fc7\u4e86\u3002\u3002\n\n\u601d\u8def\uff1a\n\n\u56e0\u4e3a\u53ea\u6709\u4e09\u4e2a\u4ef7\u683c\uff0c\u6240\u4ee5\u72b6\u6001\u6570\u4e0d\u4f1a\u5f88\u591a\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f00\u4e2avector\u628a\u6240\u6709\u72b6\u6001\u5b58\u4e0b\u6765\uff0c\u7136\u540e\u6bcf\u6b21\u52a0\u5165\u65b0\u72b6\u6001\u65f6\u66f4\u65b0\u65e7\u72b6\u6001\u5c31\u53ef\u4ee5\u4e86\u3002\u518d\u7531\u4e8e01\u80cc\u5305\u6eda\u52a8\u6570\u7ec4\u7684\u66f4\u65b0\u987a\u5e8f\u662f\u4ece\u5927\u5230\u5c0f\uff0c\u6240\u4ee5\u6bcf\u6b21\u8981\u6392\u4e00\u904d\u5e8f\uff0c\u7136\u540e\u53c8\u56e0\u4e3a\u6570\u7ec4\u6709\u5e8f\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e8c\u5206\u627e\u5230\u76f8\u540c\u7684\u72b6\u6001\uff08\u4e0d\u4e8c\u5206\u7684\u8bdd\u6700\u540e\u4e24\u4e2a\u70b9\u8fc7\u4e0d\u53bb\uff09\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5A\u6389\u8fd9\u9053\u9898\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\n\ntypedef long long ll;\n\nstruct node{\n\tll cost,worth;\n\tbool operator <(const node& x)const{\n\t\treturn cost > x.cost;\n\t}\n};\n\nvector<node> v;\nll n,w,x,y,sz,nv,ans;\n\nll imax(ll a,ll b){\n\tif(a > b)return a;\n\treturn b;\n}\n\nvoid add(int vi,int wi){\n\tint l = 0,r = v.size()-1,pl,mid;\n\twhile(l <= r){\n\t\tmid = (l+r)>>1;\n\t\tif(v[mid].cost == vi){\n\t\t\tv[mid].worth = imax(v[mid].worth,wi);\n\t\t\treturn;\n\t\t}\n\t\tif(v[mid].cost > vi)l = mid+1;\n\t\telse r = mid-1;\n\t}\n\tv.push_back((node){vi,wi});\n}\n\nint main(){\n\tcin >> n >> w;\n\tv.push_back((node){0,0});\n\twhile(n--){\n\t\tcin >> x >> y;\n\t\tsz = v.size();\n\t\tsort(v.begin(),v.end());\n\t\tfor(int i = 0;i < sz;i++){\n\t\t\tnv = x+v[i].cost;\n\t\t\tif(nv <= w)add(nv,v[i].worth+y);\n\t\t}\n//\t\tfor(int i = 0;i < v.size();i++)printf(\"** %d : %d\\n\",v[i].cost,v[i].worth);\n\t}\n\tfor(int i = 0;i < v.size();i++)ans = imax(ans,v[i].worth);\n\tcout << ans << '\\n';\nreturn 0;\n}\n```\n",
        "postTime": 1568992506,
        "uid": 112095,
        "name": "Mebsuta",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3985 \u3010\u4e0d\u5f00\u5fc3\u7684\u91d1\u660e\u3011"
    },
    {
        "content": "\u770b\u5230\u9898\u76ee\u60f3\u5230\u80cc\u5305\uff0c\u4f46\u662f\u80cc\u5305\u5f00\u4e0d\u4e86\u8fd9\u4e48\u5927\u7684\u7a7a\u95f4\uff0c\u6240\u4ee5\u597d\u50cf\u4e0d\u597d\u505a\u7684\u6837\u5b50\uff0c\u4f46\u662f\u7531\u4e8e\u4f53\u79ef\uff08\u4ef7\u683c\uff09\u53ea\u6709\u56db\u79cd\u60c5\u51b5\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u4f53\u79ef\u8bbe\u4e3a\u6700\u5c0f\u503c\u7684j\u500d\u52a0\u4e0a\u4e00\u4e2ak\uff0c\u56e0\u4e3an<=100\uff0c\u6240\u4ee5k\u7684\u6700\u5927\u503c\u5c31\u53ea\u6709300\uff0c\u6570\u7ec4\u53ef\u4ee5\u5f00f[110][110][310]\uff0c\u4e0d\u4f1a\u8d85\u7a7a\u95f4\uff0c\u53ef\u4ee5\u5b8c\u7f8e\u89e3\u51b3\u6240\u6709\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u6700\u5c0f\u4ef7\u683c\u5c0f\u4e8e300\u7684\u65f6\u5019\u8981\u8dd1\u4e00\u4e2a\u666e\u901a\u768401\u80cc\u5305\uff0c\u5426\u5219\u6570\u7ec4\u4e4b\u95f4\u4f1a\u4e32\u8d77\u6765\u51fa\u9519\u3002\n\n#\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0bf[i][j][k]=max(f[i-1][j-1][k-(v[i]-minx)]+p[i],f[i-1][j][k])\n\n\u8868\u793a\u53ef\u4ee5\u4ece\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\u8f6c\u79fb\u8fc7\u6765\u3002\n\n\u8be6\u7ec6\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u6211\u7684\u535a\u5ba2\n\nhttp://blog.csdn.net/ylsoi/article/details/78648195\n",
        "postTime": 1511782524,
        "uid": 20059,
        "name": "ylsoi",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3985 \u3010\u4e0d\u5f00\u5fc3\u7684\u91d1\u660e\u3011"
    },
    {
        "content": "\u8fd9\u771f\u7684\u4e0d\u662f\u80cc\u5305\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u7269\u54c1\u53ea\u67094\u79cd\u800cn<=100\n\n\u5bf9\u4e8e\u540c\u79cd\u7269\u54c1\u81ea\u7136\u8981\u5148\u9009\u4ef7\u503c\u5927\u7684\n\n\u81ea\u7136\u8981\u5148\u628a\u540c\u79cd\u7269\u54c1\u6392\u4e00\u904d\u5e8f\n\n\u7136\u540e\u7528f[i][j][k][l]\u8868\u793a\u7528i\u4e2a1\u7269\u54c1\uff0cj\u4e2a2\u7269\u54c1\uff0ck\u4e2a3\u7269\u54c1\uff0cl\u4e2a4\u7269\u54c1\u7684\u603b\u4ef7\u503c\u5224\u65ad\u662f\u5426\u8d85\u5bb9\u91cf\n\n\u4f46\u662fijkl\u4efb\u4f55\u4e00\u4e2a\u90fd\u6709\u53ef\u80fd\u8fbe\u5230100,100^4\u7684int\u6570\u7ec4\u662f\u5f00\u4e0d\u4e0b\u7684\n\n\u800c\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u7528\u5230\u7684\u7a7a\u95f4\u4e5f\u4e0d\u8fc725^4\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7ed9\u6570\u7ec4\u538b\u7f29\uff08\u5177\u4f53\u600e\u4e48\u538b\u7f29\u5728\u4ee3\u7801\u4e2d\u89e3\u91ca\uff09\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint f[1000007];//\u7528\u4e00\u7ef4\u4ee3\u66ff\u56db\u7ef4 \nint n,m,mm;int a[107],p[107],c[5];int b[5][107];//mm\u4ee3\u8868\u6700\u5c0f\u7684\u6570\uff0cc\u4ee3\u8868\u5404\u79cd\u7269\u54c1\u7684\u6570\u91cf \n//\u538b\u7f29\u51fd\u6570\uff0c\u539f\u7406\u7c7b\u4f3c\u538b\u4f4dDP\uff0c\u628a\u53c2\u6570\u8f6c\u5316\u4e3a\u4e2a\u4f4dc[0]+1\u8fdb\u5236\uff0c\u5341\u4f4dc[1]+1\u8fdb\u5236\uff0c\u767e\u4f4dc[2]+1\u8fdb\u5236\u7684\u6570 \n//\u8fd9\u4e2a\u51fd\u6570\u7684\u4f5c\u7528\u662f\u627e\u5230\u56db\u7ef4\u6570\u7ec4\u4e2d\u5bf9\u5e94\u7684\u4e00\u7ef4\u7f16\u53f7\uff1b \nint idx(int aa,int bb,int cc,int dd)\n{return aa+(c[0]+1)*bb+(c[0]+1)*(c[1]+1)*cc+(c[0]+1)*(c[1]+1)*(c[2]+1)*dd;}\nbool cmp(int x,int y)\n{return x>y;}\nint main()\n{cin>>n>>m;\nfor(int i=1;i<=n;++i)\ncin>>a[i]>>p[i];\nmm=0x3f3f3f3f;\nfor(int i=1;i<=n;++i)\n{if(a[i]<mm)mm=a[i];}\nfor(int i=1;i<=n;++i)\n{++c[a[i]-mm];b[a[i]-mm][c[a[i]-mm]]=p[i];}//\u628a\u6570\u5206\u597d\u7c7b \nfor(int i=0;i<=3;++i)sort(b[i]+1,b[i]+c[i]+1,cmp);//\u6392\u5e8f \nint maxn=0;\nfor(int i=0;i<=c[0];++i)\n{for(int j=0;j<=c[1];++j)\n{for(int k=0;k<=c[2];++k)\n{for(int l=0;l<=c[3];++l)\n{if((i+j+k+l)*mm+j+k*2+l*3>m)break;//\u5224\u65ad\u662f\u5426\u8d85\u4e86 \n//\u5bf9\u4e8ef\u7684\u5904\u7406\u6bd4\u8f83\u590d\u6742\uff0c\u6682\u65f6\u6ca1\u60f3\u5230\u4ec0\u4e48\u597d\u65b9\u6cd5 \nif(l!=0){f[idx(i,j,k,l)]=f[idx(i,j,k,l-1)]+b[3][l];}\nelse if(k!=0){f[idx(i,j,k,l)]=f[idx(i,j,k-1,l)]+b[2][k];} \nelse if(j!=0){f[idx(i,j,k,l)]=f[idx(i,j-1,k,l)]+b[1][j];} \nelse if(i!=0){f[idx(i,j,k,l)]=f[idx(i-1,j,k,l)]+b[0][i];} \nif(f[idx(i,j,k,l)]>maxn)maxn=f[idx(i,j,k,l)];}}}}\ncout<<maxn;\nreturn 0;\n}\n```\n\nf\u5f00100w\u5de6\u53f3\u5c31\u53ef\u4ee5\u4e86",
        "postTime": 1519287183,
        "uid": 38535,
        "name": "laorui",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3985 \u3010\u4e0d\u5f00\u5fc3\u7684\u91d1\u660e\u3011"
    },
    {
        "content": "\u53d1\u4e2aO(n^2\\*log(n))\u7684\u9898\u89e3\n\n\u56e0\u4e3a\u53ea\u67094\u79cd\u7269\u54c1\uff0c\u6240\u4ee5\u53ef\u4ee5\u5206\u4e3a4\u7ec4\uff0c\u6613\u77e5\u6bcf\u7ec4kv\u7684\u503c\u662f\u786e\u5b9a\u7684\uff0c\u4e14\u53ea\u6709n\u4e2a\u503c\n\n\u518d\u5206\u4e3a\u4e24\u7ec4\uff0c\u6bcf\u7ec4\u4e2d\u66b4\u529b\u6c42\u51fa\u6240\u6709\u53ef\u80fd\u7684\u503c\uff0c\u5c31\u662fO(n^2)\n\n\u6bd4\u5982\u7b2c\u4e00\u79cd\u548c\u7b2c\u4e8c\u79cd\u4e00\u7ec4\uff0c\u7b2c\u4e00\u79cd\u53d6k1v1\uff0c\u7b2c\u4e8c\u79cd\u53d6k2v2\uff0c\u5982\u679c<=w\u5c31\u52a0\u5230\u6570\u7ec4\u4e2d\n\n\u5c06\u4e0a\u9762\u7684\u503c\u6392\u5e8f\uff0c\u518d\u5c06\u5176\u4e2dvi>vj\u4e14pi<pj\u7684\u53bb\u6389\uff08\u4e0d\u53ef\u80fd\u7528\u5230\uff09\n\n\u6240\u4ee5\u5269\u4e0b\u4e24\u7ec4\u7684\u503c\u90fd\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u90a3\u4e48\u904d\u5386\u5176\u4e2d\u4e00\u4e2a\uff0c\u53e6\u5916\u4e00\u4e2a\u7528\u6307\u9488\u4ece\u540e\u5f80\u56de\u627e\u6700\u540e\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\uff0c\u66f4\u65b0ans\u5373\u53ef\n\n\u6548\u7387\u5c31\u662f\u6392\u5e8f\u7684O(n^2\\*log(n))\n\n\u53cd\u6b63\u5f88\u591a4\u7ec4\u7684\u90fd\u662f\u8fd9\u4e2a\u5957\u8def\uff0c\u4e24\u4e24\u5206\u7ec4\u518d\u5408\u8d77\u6765\n\n```cpp\n#include<cstdio>\n#include<algorithm> \nusing namespace std;\n#define fo(a,b,c) for(int a=b;a<=c;a++)\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\nint read(){\n    int a=0,f=0;char c=getchar();\n    for(;c<'0'||c>'9';c=getchar())if(c=='-')f=1;\n    for(;c>='0'&&c<='9';c=getchar())a=a*10+c-'0';\n    return f?-a:a;\n}\nconst int N=110;\nint v[N],p[N],nd[4],pd[4][N];\nstruct node{int v,p;}x[N*N],y[N*N];\nint cmp_int(int a,int b){return a>b;}\nint cmp_node(node a,node b){return a.v<b.v;}\nint main(){\n    int n=read(),w=read(),minv=1e9,nx=0,ny=0,ans=0,xn=1,yn=1;\n    fo(i,1,n)v[i]=read(),p[i]=read(),minv=min(minv,v[i]);\n    fo(i,1,n)pd[v[i]-minv][++nd[v[i]-minv]]=p[i];//\u5206\u79cd\u7c7b\n    fo(i,0,3)sort(pd[i]+1,pd[i]+nd[i]+1,cmp_int);\n    fo(i,0,3)fo(j,1,nd[i])pd[i][j]+=pd[i][j-1];//\u7b97\u51fakv\u7684\u503c\n    fo(i,0,nd[0])fo(j,0,nd[1])\n        if(1ll*minv*i+1ll*minv*j+j<=w)\n            x[++nx]=(node){minv*i+minv*j+j,pd[0][i]+pd[1][j]};\n    fo(i,0,nd[2])fo(j,0,nd[3])\n        if(1ll*minv*i+1ll*minv*j+2*i+3*j<=w)\n            y[++ny]=(node){minv*i+minv*j+2*i+3*j,pd[2][i]+pd[3][j]};//\u5206\u7ec4\n    sort(x+1,x+nx+1,cmp_node);sort(y+1,y+ny+1,cmp_node);//\u6392\u5e8f\n    fo(i,2,nx)if(x[i].p>x[xn].p)x[++xn]=x[i];\n    fo(i,2,ny)if(y[i].p>y[yn].p)y[++yn]=y[i];//\u53bb\u6389\u4e0d\u53ef\u80fd\u7528\u5230\u7684\n    fo(i,1,xn){\n        while(yn&&x[i].v+y[yn].v>w)yn--;//\u53bb\u6389\u4e0d\u5408\u6cd5\u7684\n        if(yn)ans=max(ans,x[i].p+y[yn].p);//\u66f4\u65b0\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1512036859,
        "uid": 12668,
        "name": "Minclxc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3985 \u3010\u4e0d\u5f00\u5fc3\u7684\u91d1\u660e\u3011"
    }
]