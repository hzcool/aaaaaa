[
    {
        "content": "### \u524d\u8a00\r\n\r\n\u5148\u6765\u626f\u4e9b\u771f\u5b9e\u7684\u5e9f\u8bdd\u3002\r\n\r\n\u8fd9\u516b\u6210\u662f\u8003\u573a\u4e0a\u6700\u53ef\u505a\u7684\u9898\uff0c\u539f\u56e0\u6709\u4ee5\u4e0b\uff1a\r\n\r\n> 1. \u4f17\u6240\u5468\u77e5\uff0c\u6570\u636e\u8303\u56f4\u8d8a\u4e0d\u6b63\u5e38\u7684\u9898\u8d8a\u6bd2\u7624\uff0c\u672c\u9898\u7684\u6570\u636e\u8303\u56f4\u5c31\u5f88\u6b63\u5e38\u3002\r\n> \r\n> 2. \u5f80\u5e74\u7701\u9009\u5305\u62ec\u4eca\u5e74 round 1 \u6700\u7b80\u5355\u7684\u9898\u4e2d\u5f80\u5f80\u90fd\u6709\u7ebf\u6bb5\u6811\uff0c\u672c\u9898\u611f\u6027\u4e0a\u5c31\u79bb\u4e0d\u5f00\u7ebf\u6bb5\u6811\u3002\r\n>\r\n> 3. \u4e5d\u6761\u5728\u51fa\u5b8c 2\u30013\u30011 \u7684\u5f00\u9898\u987a\u5e8f\u4e4b\u540e\uff0c\u559c\u6b22\u51fa 2\u30011\u30013 \u7684\u5f00\u9898\u987a\u5e8f\u3002\r\n\r\n\u9057\u61be\u7684\u662f\uff0c\u7531\u4e8e round 1 \u7684\u7206\u70b8\uff0c\u8003\u573a\u4e0a\u5fc3\u6001\u6709\u70b9\u5d29\uff0c\u667a\u5546\u9aa4\u964d\u4e3a 0\uff0c\u5bfc\u81f4\u6ca1\u505a\u51fa\u6b64\u9898\u3002\r\n\r\n\u53ef\u80fd\u6211\u6c38\u8fdc\u5c5e\u4e8e\u5165\u573a\u601d\u7ef4\u53d7\u963b\u3001\u51fa\u573a\u8305\u585e\u987f\u5f00\u7684\u90a3\u79cd\u4eba\u5427\u3002\r\n\r\n---\r\n\r\n### \u89e3\u9898\u601d\u8def\r\n\r\n\u4e0d\u96be\u60f3\u5230\u5404\u79cd $O(n \\log^3 n)$ \u7684\u4e71\u641e\u505a\u6cd5\uff0c\u6bd4\u5982\u94fe\u5256\u5957\u626b\u63cf\u7ebf\r\n\uff0c~~\u542c\u8bf4\u4f1a\u88ab\u4e5d\u6761\u5b9a\u5411\u5361~~\u3002\r\n\r\n\u5b9e\u9645\u4e0a\u6709\u4e00\u79cd\u5de7\u5999\u7684 $O(n \\log n)$ \u6e05\u771f\u505a\u6cd5\u3002\u82e5\u57ce\u5e02 $u,\\,v$ \u80fd\u5f00\u5c55\u8d38\u6613\uff0c\u6211\u4eec\u79f0 \u201c $u$ \u53ef\u4ee5\u5230\u8fbe $v$ \u201d\u3002\r\n\r\n\u9996\u5148\u5bb9\u6613\u53d1\u73b0\u4ee5\u4e0b\u6027\u8d28\uff1a\r\n\r\n> $u$ \u80fd\u5230\u8fbe\u7684\u6240\u6709\u70b9\u6070\u597d\u6784\u6210\u4e00\u68f5\u751f\u6210\u6811\uff08\u5373\u4e00\u4e2a\u8fde\u901a\u5757\uff09\u3002\r\n\r\n\u8003\u8651\u8fd9\u4e2a\u751f\u6210\u6811\u662f\u600e\u4e48\u6765\u7684\uff1f\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5f97\u51fa\uff1a\r\n\r\n> \u5982\u679c\u8def\u5f84 $s \\to t$ \u5305\u542b\u70b9 $u$ \uff0c$s,\\,t$ \u5219\u662f $u$ \u7684\u4e24\u4e2a\u6781\u8fdc\u70b9\u3002\r\n>\r\n> $u$ \u7684\u751f\u6210\u6811\u5219\u662f\u8fde\u901a\u6240\u6709 $u$ \u7684\u6781\u8fdc\u70b9\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002\r\n\r\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u6709\u4e09\u6761\u8def\u5f84\u5206\u522b\u662f $1 \\to 3$ \uff0c$2 \\to 6$ \uff0c$7 \\to 8$ \u3002\r\n\r\n![](https://i.loli.net/2019/05/02/5cca3428c824e.png\r\n)\r\n\r\n\u9501\u5b9a $4$ \u53f7\u70b9\u3002\u8def\u5f84 $1 \\to 3$ \u4e0d\u7ecf\u8fc7\u5b83\uff0c\u5bf9\u5b83\u6ca1\u6709\u4efb\u4f55\u8d21\u732e\u3002\u5176\u4ed6\u8def\u5f84\u5219\u7ecf\u8fc7 $4$ \u53f7\u70b9\uff0c\u8868\u660e\u5176\u6709 $4$ \u4e2a\u6781\u8fdc\u70b9\uff1a$2,\\,6,\\,7,\\,8$ \u3002\u6545\u751f\u6210\u6811\u7531 $2,\\,4,\\,5,\\,6,\\,7,\\,8$ \u6784\u6210\uff0c\u5373 $4$ \u53f7\u70b9\u80fd\u5230\u8fbe\u5176\u4ed6 $5$ \u4e2a\u4e0d\u540c\u7684\u70b9\u3002\r\n\r\n\u4e8e\u662f\uff0c\u6211\u4eec\u9700\u8981\u4e8b\u5148\u601d\u8003\u5b50\u95ee\u9898\uff1a\u7ed9\u5b9a\u6811\u4e0a\u82e5\u5e72\u7684\u70b9\uff0c\u5982\u4f55\u6c42\u6700\u5c0f\u751f\u6210\u6811\u5927\u5c0f\uff1f\r\n\r\n---\r\n\r\n\u8fd9\u5e94\u8be5\u662f\u4e2a\u7ecf\u5178\u95ee\u9898\u3002\u53ef\u80fd\u8981\u7528\u5230\u4e00\u70b9\u5efa\u865a\u6811\u7684\u601d\u60f3\u3002\r\n\r\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u786c\u70b9\u5b58\u5728\u6781\u8fdc\u70b9 $1$ \uff0c\u6700\u540e\u518d\u8ba1\u7b97\u5176\u5f71\u54cd\u3002\r\n\r\n\u6211\u4eec\u7ed9\u8fd9\u4e9b\u70b9\u6309\u7167 $\\mathrm{dfs}$ \u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u4e00\u4e2a\u4e00\u4e2a\u5730\u52a0\u8fdb\u53bb\u3002\u5047\u8bbe\u5f53\u524d\u52a0\u5165 $u$ \u53f7\u70b9\uff0c\u4e4b\u524d\u52a0\u5165\u7684\u70b9\u6784\u6210\u70b9\u96c6 $S$ \uff0c$S$ \u7684\u6700\u5c0f\u751f\u6210\u6811\u662f $T$\u3002\u663e\u7136\uff0c\u4e3a\u4e86\u4f7f $u$ \u548c $T$ \u8fde\u901a\uff0c\u53ea\u9700\u8981\u627e\u5230 $T$ \u4e2d\u79bb $u$ \u6700\u8fd1\u7684\u70b9\u8fde\u8d77\u6765\u5c31\u597d\u4e86\uff0c\u8fd9\u201c\u6700\u8fd1\u7684\u70b9\u201d\u6b63\u662f $S$ \u4e2d\u7684\u67d0\u4e2a\u70b9\u4e0e $u$ \u7684 $\\mathrm{lca}$ \u3002\u5982\u679c\u4f60\u5bf9 $\\mathrm{dfs}$ \u5e8f\u6709\u8f83\u597d\u7684\u611f\u89c9\uff0c\u5176\u5b9e\u6240\u8c13 $S$ \u4e2d\u7684\u67d0\u4e2a\u70b9\uff0c\u5c31\u662f\u4e0a\u4e00\u4e2a\u52a0\u8fdb\u53bb\u7684\u70b9 $v$ \uff01\u6240\u4ee5 $u$ \u7684\u8d21\u732e\u662f $\\mathrm{dep}_u - \\mathrm{dep}_{\\mathrm{lca}(u,\\,v)}$ \u3002\u522b\u5fd8\u4e86\u786c\u70b9\u4e86 $1$ \u53f7\u70b9\uff0c\u6700\u540e\u8fd8\u8981\u51cf $\\mathrm{dep}_{\\text{\u6240\u6709\u70b9\u7684}\\ \\mathrm{lca}}$ \u3002\r\n\r\n\u4e0a\u9762\u90a3\u6bb5\u53ef\u80fd\u6709\u70b9\u7ed5\uff0c\u5f3a\u70c8\u5efa\u8bae\u753b\u4e2a\u56fe\u611f\u53d7\u4e00\u4e0b\uff01\r\n\r\n\u66b4\u529b\u52a0\u70b9\u4f3c\u4e4e\u4e0d\u5bb9\u6613\u88ab\u5229\u7528\uff0c\u6b64\u65f6\u6700\u64c5\u957f\u5206\u6cbb\u7684\u7ebf\u6bb5\u6811\u7ec8\u4e8e\u91cd\u78c5\u767b\u573a\u4e86\u3002\r\n\r\n\u4ecd\u7136\u662f\u4ee5 $\\mathrm{dfs}$ \u5e8f\u4e3a\u4e0b\u6807\uff0c\u7ebf\u6bb5\u6811\u7684\u53f6\u5b50\u7ed3\u70b9\u63a7\u5236\u539f\u6811\u4e0a\u6bcf\u4e2a\u70b9\u9009\u6216\u4e0d\u9009\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u8868\u793a\u4e86\u786c\u70b9 $1$ \u540e\u4e00\u6bb5\u533a\u95f4\u7684\u70b9\u96c6\u7684\u6700\u5c0f\u751f\u6210\u6811\u5927\u5c0f\uff0c\u5e76\u5b58\u4e0b\u6bcf\u4e2a\u70b9\u96c6\u4e2d\u4e0b\u6807\u6700\u5c0f\u548c\u6700\u5927\u7684\u70b9\u3002\u7c7b\u4f3c\u5730\uff0c$\\mathrm{pushup}$ \u65f6\u8981\u51cf\u53bb $\\mathrm{dep}_{\\mathrm{lca}(u,\\,v)}$ \u3002\u6b64\u65f6\u7684 $u$ \u5f53\u7136\u662f\u5de6\u5b69\u5b50\u5df2\u9009\u4e0b\u6807\u6700\u5927\u7684\uff0c$v$ \u5f53\u7136\u662f\u53f3\u5b69\u5b50\u5df2\u9009\u4e0b\u6807\u6700\u5c0f\u7684\u3002\u67e5\u8be2\u7684\u8bdd\u53ea\u8981\u7528\u6839\u7ed3\u70b9\u7684\u7b54\u6848\u51cf\u53bb $\\mathrm{dep}_{\\text{\u6240\u6709\u70b9\u7684}\\ \\mathrm{lca}}$ \u5373\u53ef\u3002\r\n\r\n\u767d\u767d\u5957\u4e00\u4e2a\u7ebf\u6bb5\u6811\u4e0d\u662f\u591a $\\log$ \u5417\uff1f\u522b\u6025\uff0c\u6b63\u89e3\u5df2\u7ecf\u6d6e\u51fa\u6c34\u9762\u4e86\u3002\r\n\r\n---\r\n\r\n\u60f3\u8c61\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u6709\u4e00\u68f5\u7ebf\u6bb5\u6811\u3002\u6ce8\u610f\u5230\u6709\u4e00\u6761\u8def\u5f84 $s \\to t$ \uff0c\u6211\u4eec\u4f1a\u7ed9\u8be5\u8def\u5f84\u4e0a\u7684\u6bcf\u68f5\u7ebf\u6bb5\u6811\u90fd\u9009\u4e0a $s,\\,t$ \u4e24\u70b9\u3002\u6309\u7167\u5957\u8def\uff0c\u6c42\u51fa $\\mathrm{lca} = \\mathrm{lca}(u,\\,v)$ \uff0c\u7b49\u540c\u4e8e $s \\to \\mathrm{lca},\\,t\\to \\mathrm{lca}$ \u4e24\u6761\u94fe\u4e0a\u6267\u884c\u7ebf\u6bb5\u6811\u4fee\u6539\u3002\u4ecd\u7136\u662f\u5957\u8def\uff0c\u94fe\u4e0a\u4fee\u6539\u53ef\u4ee5\u8f6c\u6362\u6210\u6811\u4e0a\u5dee\u5206\u6253\u6807\u8bb0\uff0c$s,\\,t,\\,\\mathrm{lca},\\,\\mathrm{fa}[\\mathrm{lca}]$ \u5206\u522b\u6253\u4e0a $1,\\,1,\\,-1,\\,-1$ \u3002\r\n\r\n\u6162\u7740\u2026\u2026\u7ebf\u6bb5\u6811\u6253\u6807\u8bb0\u662f\u53ef\u4ee5\uff0c\u4f46\u6bcf\u4e2a\u7ed3\u70b9\u8981\u628a\u81ea\u5df1\u7684\u4fe1\u606f\u7ee7\u627f\u7ed9\u7236\u4eb2\uff0c\u8fd9\u600e\u4e48\u505a\uff1f\r\n\r\n#### \u52a8\u6001\u5f00\u70b9 + \u7ebf\u6bb5\u6811\u5408\u5e76\uff01\r\n\r\n\u81f3\u6b64\uff0c[[ZJOI2019]\u8bed\u8a00](https://www.luogu.org/problemnew/show/P5327) \u7684\u5927\u81f4\u505a\u6cd5\u8bb2\u5b8c\u4e86\u3002$n$ \u6b21\u7ebf\u6bb5\u6811\u5408\u5e76\u662f $O(n \\log n)$ \u7684\uff0c\u800c $n$ \u6b21\u4fee\u6539\u8981\u6c42 $n \\log n$ \u6b21 $\\mathrm{lca}$ \uff0c\u5982\u679c\u6811\u5256\u6216\u500d\u589e\uff0c\u590d\u6742\u5ea6\u662f $O(n \\log^2 n)$ \uff0c\u5982\u679c\u4f7f\u7528\u6b27\u62c9\u5e8f $\\mathrm{st}$ \u8868\uff0c\u590d\u6742\u5ea6\u662f\u4f18\u7f8e\u7684 $O(n \\log n)$ \u3002\r\n\r\n---\r\n\r\n### \u4ee3\u7801\u5b9e\u73b0\r\n\r\n\u521a\u624d\u6c42\u7684 $(u,\\,v)$ \u6ca1\u6709\u5f3a\u5236 $u < v$ \uff0c\u7b54\u6848\u8981\u9664\u4ee5 $2$ \u3002\r\n\r\n```cpp\r\n#include <cmath>\r\n#include <cstdio>\r\n#include <vector>\r\n#include <algorithm>\r\n\r\nconst int N = 200005, V = 6400005, L = 18;\r\n\r\nint n, m, tms, o[N], ft[N], dep[N], dfn[N], st[L][N];\r\nstd::vector<int> to[N], del[N];\r\nlong long ans;\r\n\r\ninline int getLca(int u, int v);\r\n\r\nstruct SegmentTree {\r\n    int tot, c[V], f[V], s[V], t[V], ls[V], rs[V], rt[N];\r\n\r\n    inline void pushUp(int u) {\r\n        f[u] = f[ls[u]] + f[rs[u]] - dep[getLca(t[ls[u]], s[rs[u]])];\r\n        s[u] = s[ls[u]] ? s[ls[u]] : s[rs[u]];\r\n        t[u] = t[rs[u]] ? t[rs[u]] : t[ls[u]];\r\n    }\r\n    inline int query(int u) { return f[u] - dep[getLca(s[u], t[u])]; }\r\n    void modify(int &u, int l, int r, int p, int x) {\r\n        if (!u) { u = ++tot; }\r\n        if (l == r) {\r\n            c[u] += x; f[u] = c[u] ? dep[p] : 0; s[u] = t[u] = c[u] ? p : 0;\r\n            return;\r\n        }\r\n        int mid = l + r >> 1;\r\n        if (dfn[p] <= mid) { modify(ls[u], l, mid, p, x); }\r\n        else { modify(rs[u], mid + 1, r, p, x); }\r\n        pushUp(u);\r\n    }\r\n    void merge(int &u, int v, int l, int r) {\r\n        if (!u || !v) { u |= v; return; }\r\n        if (l == r) {\r\n            c[u] += c[v]; f[u] |= f[v]; s[u] |= s[v]; t[u] |= t[v];\r\n            return;\r\n        }\r\n        int mid = l + r >> 1;\r\n        merge(ls[u], ls[v], l, mid); merge(rs[u], rs[v], mid + 1, r); pushUp(u);\r\n    }\r\n} smt;\r\n\r\nvoid build() {\r\n    for (int i = 1; i <= tms; i++) { o[i] = log(i) / log(2) + 1e-7; }\r\n    for (int i = 1; i <= o[tms]; i++) {\r\n        for (int j = 1, u, v; j + (1 << i) - 1 <= tms; j++) {\r\n            u = st[i - 1][j]; v = st[i - 1][j + (1 << i - 1)];\r\n            st[i][j] = dep[u] < dep[v] ? u : v;\r\n        }\r\n    }\r\n}\r\ninline int getLca(int u, int v) {\r\n    if (!u || !v) { return 0; } u = dfn[u]; v = dfn[v];\r\n    if (u > v) { std::swap(u, v); }\r\n    int d = o[v - u + 1]; u = st[d][u]; v = st[d][v - (1 << d) + 1];\r\n    return dep[u] < dep[v] ? u : v;\r\n}\r\n\r\nvoid dfs(int u, int fa) {\r\n    ft[u] = fa; dep[u] = dep[fa] + 1; st[0][++tms] = u; dfn[u] = tms;\r\n    for (auto v : to[u]) { if (v != fa) { dfs(v, u); st[0][++tms] = u; } }\r\n}\r\nvoid solve(int u) {\r\n    for (auto v : to[u]) { if (v != ft[u]) { solve(v); } }\r\n    for (auto v : del[u]) { smt.modify(smt.rt[u], 1, tms, v, -1); }\r\n    ans += smt.query(smt.rt[u]); smt.merge(smt.rt[ft[u]], smt.rt[u], 1, tms);\r\n}\r\n\r\nint main() {\r\n    scanf(\"%d%d\", &n, &m);\r\n    for (int i = 2, u, v; i <= n; i++) {\r\n        scanf(\"%d%d\", &u, &v);\r\n        to[u].push_back(v); to[v].push_back(u);\r\n    }\r\n    dfs(1, 0); build();\r\n    for (int u, v, lca; m; m--) {\r\n        scanf(\"%d%d\", &u, &v); lca = getLca(u, v);\r\n        smt.modify(smt.rt[u], 1, tms, u, 1); smt.modify(smt.rt[u], 1, tms, v, 1);\r\n        smt.modify(smt.rt[v], 1, tms, u, 1); smt.modify(smt.rt[v], 1, tms, v, 1);\r\n        del[lca].push_back(u); del[ft[lca]].push_back(u);\r\n        del[lca].push_back(v); del[ft[lca]].push_back(v);\r\n    }\r\n    solve(1); printf(\"%lld\\n\", ans >> 1);\r\n    return 0;\r\n}\r\n```\r\n\r\n---\r\n\r\n### \u5c3e\u6ce8\r\n\r\n\u770b\u5b8c\u540e\u60a8\u8fd8\u53ef\u771f\u522b\u8bf4\u8fd9\u9898\u7b80\u5355\uff0c\u8003\u573a\u4e0a\u8fd9\u4e48\u591a\u7b97\u6cd5\u7684\u9009\u62e9\uff0c\u9b3c\u77e5\u9053\u504f\u504f\u78b0\u4e0a\u4e86\u8fd9\u4e00\u79cd\u5462\uff1f",
        "postTime": 1556723337,
        "uid": 26673,
        "name": "Sooke",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5327 \u3010[ZJOI2019]\u8bed\u8a00\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u6bcf\u4e2a\u7ed3\u70b9$u$\uff0c\u8003\u8651\u7ef4\u62a4\u5b83\u80fd\u5230\u8fbe\u7684\u7ed3\u70b9\uff08\u4e0d\u5305\u62ec$u$\u672c\u8eab\uff09\u96c6\u5408$S_u$\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f$\\frac{\\sum^n_{i=1}{|S_u|}}{2}$\u3002\n\n\u7136\u540e\u8003\u8651\u8fd9\u4e2a$S_u$\u600e\u4e48\u641e\u3002~~\u66b4\u529b~~\n\n\u5148\u5927\u529b\u6811\u5256\u4e00\u904d\uff0c\u90a3\u4e48$(u,v)$\u7684\u8def\u5f84\u5c31\u53d8\u6210\u4e86\u4e0d\u8d85\u8fc7$log_2n$\u4e2a\u533a\u95f4\uff0c\u5982\u679c\u628a\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u7684$S$\u90fd\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u8bdd\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u628a$(u,v)$\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u8dd1$log_2n$\u4e2a\u533a\u95f4\u8986\u76d6\u5c31\u53ef\u4ee5\u505a\u5230$O(n^2log^2n)$~~\u8bf4\u767d\u4e86\u5c31\u662f\u4e2a\u66b4\u529b~~\n\n\u7b49\u7b49\uff0c\u5bf9\u4e00\u6761\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u505a\u76f8\u540c\u7684\u4fee\u6539\uff1f\n\n### \u6811\u4e0a\u5dee\u5206+\u7ebf\u6bb5\u6811\u5408\u5e76\uff01\n\n\u4e8e\u662f\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a$O(nlog^2n)$\u7684\u65b9\u6cd5\uff0c\u8db3\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\u7801\u7684\u65f6\u5019\u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282\uff1a\n\n1. \u4e0d\u5305\u542b$u$\u7684\u96c6\u5408\u6bd4\u8f83\u96be\u7ef4\u62a4\uff0c\u6211\u4eec\u5148\u94a6\u5b9a\u5305\u542b$u$\uff0c\u7edf\u8ba1\u7684\u65f6\u5019\u518d\u51cf\u6389\u3002\n2. \u56e0\u4e3a\u8981\u5dee\u5206\uff0c\u6240\u4ee5\u533a\u95f4\u8986\u76d6\u8981\u6539\u6210\u533a\u95f4\u52a0\uff0c\u4e0d\u8fc7\u7531\u4e8e\u5408\u5e76\u5b8c\u6210\u540e\u7684\u6807\u8bb0\u80af\u5b9a\u90fd\u662f\u6b63\u7684\uff0c\u6240\u4ee5\u53ea\u8981\u5206\u6709\u6ca1\u6709\u6807\u8bb0\u5373\u53ef\n3. \u8fd9\u4e2a\u5199\u6cd5\u4e25\u683c\u6765\u8bb2\u662f\u70b9\u5dee\u5206\uff0c\u4f46\u662f\u56e0\u4e3a\u6211\u4eec\u53ea\u5173\u5fc3\u6709\u6ca1\u6709\u6807\u8bb0\uff0c\u8fb9\u5dee\u5206\u4e5f\u662f\u6b63\u786e\u7684\uff0c\u5e38\u6570\u8fd8\u5c0f\u4e00\u70b9\n4. \u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u7ed3\u70b9\u8981\u505a\u7684\u4fee\u6539\u5b58\u4e0b\u6765\uff0c\u6bcf\u6b21\u5148\u5408\u5e76\u5b8c\u518d\u4fee\u6539\uff0c\u5c3d\u91cf\u8282\u7ea6\u7a7a\u95f4\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<vector>\nusing namespace std;\nconst int N=100050;\nchar rB[1<<21],*S,*T;\ninline char gc(){return S==T&&(T=(S=rB)+fread(rB,1,1<<21,stdin),S==T)?EOF:*S++;}\ninline int rd(){\n    char c=gc();\n    while(c<48||c>57)c=gc();\n    int x=c&15;\n    for(c=gc();c>=48&&c<=57;c=gc())x=(x<<3)+(x<<1)+(c&15);\n    return x;\n}\nstruct seg{\n    int x,y;\n    seg(int x,int y):x(x),y(y){}\n};\nstruct query{\n\tint x,y;\n\tshort k;\n\tquery(int x,int y,short k):x(x),y(y),k(k){}\n};\nint G[N],to[N<<1],nxt[N<<1],cnt1=0,f[N],dep[N],sz[N],son[N],id[N],top[N],dfsc=0,rt[N],lc[N<<8],rc[N<<8],addv[N<<8],val[N<<8],cnt2=0,n;\nlong long ans=0;\nvector<seg> a;\nvector<query> w[N];\ninline void Swap(int &a,int &b){int t=a;a=b;b=t;}\ninline void adde(int u,int v){\n    to[++cnt1]=v;nxt[cnt1]=G[u];G[u]=cnt1;\n    to[++cnt1]=u;nxt[cnt1]=G[v];G[v]=cnt1;\n}\ninline void pushup(int o,int L,int R){\n    val[o]=addv[o]>0?R-L+1:val[lc[o]]+val[rc[o]];  //\u7ef4\u62a4\u6743\u503c\uff0c\u53ea\u5173\u5fc3\u6709\u6ca1\u6709\u6807\u8bb0\n}\nvoid add(int &o,int L,int R,int x,int y,short k){  //\u533a\u95f4\u52a0\n    if(!o)o=++cnt2;\n    if(x<=L&&y>=R)addv[o]+=k;\n    else{\n        int M=L+R>>1;\n        if(x<=M)add(lc[o],L,M,x,y,k);\n        if(y>M)add(rc[o],M+1,R,x,y,k);\n    }\n    pushup(o,L,R);\n}\nint merge(int u,int v,int L,int R){  //\u7ebf\u6bb5\u6811\u5408\u5e76\n    if(!u||!v)return u|v;\n    addv[u]+=addv[v];\n    if(L<R){\n        int M=L+R>>1;\n        lc[u]=merge(lc[u],lc[v],L,M);\n        rc[u]=merge(rc[u],rc[v],M+1,R);\n    }\n    pushup(u,L,R);\n    return u;\n}\nvoid dfs1(int u,int fa){\n    int i,v,maxn=0;\n    dep[u]=dep[f[u]=fa]+1;\n    sz[u]=1;\n    for(i=G[u];i;i=nxt[i])if((v=to[i])!=fa){\n        dfs1(v,u);\n        sz[u]+=sz[v];\n        if(sz[v]>maxn){\n            son[u]=v;\n            maxn=sz[v];\n        }\n    }\n}\nvoid dfs2(int u,int topf){\n    int i,v;\n    id[u]=++dfsc;\n    top[u]=topf;\n    w[u].push_back(query(id[u],id[u],1));  //\u5148\u7ed9u\u6253\u6807\u8bb0\uff0c\u94a6\u5b9a\u5b83\u5fc5\u987b\u9009\n    if(f[u])w[f[u]].push_back(query(id[u],id[u],-1));  //\u8fd9\u91cc\u6709\u4e2a\u5751\uff0c\u6811\u4e0a\u5dee\u5206\u7684\u5355\u70b9\u4fee\u6539\u8bb0\u5f97\u5728\u7236\u7ed3\u70b9\u51cf\u56de\u53bb\n    if(!son[u])return;\n    dfs2(son[u],topf);\n    for(i=G[u];i;i=nxt[i])if((v=to[i])!=f[u]&&v!=son[u])dfs2(v,v);\n}\ninline int lca(int u,int v){\n    a.clear();\n    while(top[u]!=top[v]){\n        if(dep[top[u]]<dep[top[v]])Swap(u,v);\n        a.push_back(seg(id[top[u]],id[u]));  //\u628a\u8def\u5f84\u5206\u79bb\u6210\u533a\u95f4\n        u=f[top[u]];\n    }\n    if(dep[u]>dep[v])Swap(u,v);\n    a.push_back(seg(id[u],id[v]));\n    return u;\n}\n//\u6811\u5256\u90e8\u5206\nvoid solve(int u){\n    int i,v;\n    for(i=G[u];i;i=nxt[i])if((v=to[i])!=f[u]){\n        solve(v);\n        rt[u]=merge(rt[u],rt[v],1,n);\n    }  //\u5408\u5e76\n    for(i=0;i<w[u].size();++i)add(rt[u],1,n,w[u][i].x,w[u][i].y,w[u][i].k);  //\u4fee\u6539\n    ans+=val[rt[u]]-1;  //\u7531\u4e8e\u6211\u4eec\u94a6\u5b9a\u4e86u\u5fc5\u987b\u9009\uff0c\u7edf\u8ba1\u65f6\u8981\u51cf\u6389\n}\nint main(){\n    int m,i,u,v,k;\n    n=rd();m=rd();\n    for(i=1;i<n;++i){\n        u=rd();v=rd();\n        adde(u,v);\n    }\n    dfs1(1,0);\n    dfs2(1,1);\n    while(m--){\n        u=rd();v=rd();\n        k=lca(u,v);\n        for(i=0;i<a.size();++i){\n            w[u].push_back(query(a[i].x,a[i].y,1));\n            w[v].push_back(query(a[i].x,a[i].y,1));\n            if(f[k])w[f[k]].push_back(query(a[i].x,a[i].y,-2));\n        }\n    }\n    solve(1);\n    printf(\"%lld\",ans>>1);\n    return 0;\n}\n```\n",
        "postTime": 1557645804,
        "uid": 57926,
        "name": "Thinking",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5327 \u3010[ZJOI2019]\u8bed\u8a00\u3011"
    },
    {
        "content": "**\u9898\u610f\u7b80\u8ff0**\uff1a\u6c42\u5bf9\u4e8e\u6811\u4e0a\u6bcf\u4e2a\u70b9 $x$ \uff0c\u5305\u542b\u5b83\u7684\u94fe\u7684\u5e76\u96c6\u7684\u5927\u5c0f\u4e4b\u548c\uff0c\u4e5f\u53ef\u63cf\u8ff0\u6210\uff0c\u6c42\u5bf9\u4e8e\u6811\u4e0a\u6bcf\u4e2a\u70b9 $x$ \uff0c\u5b83\u80fd\u591f\u5230\u8fbe\u7684\u70b9\u7684\u4e2a\u6570\u4e4b\u548c\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9\u4e8e\u70b9 $x$ \u800c\u8a00\uff0c\u901a\u8fc7\u6811\u4e0a\u7684\u8def\u5f84\uff0c\u5b83\u80fd\u591f\u5230\u8fbe\u7684\u70b9\u4e00\u5b9a\u6784\u6210\u4e00\u68f5\u6811\u3002\u5e76\u4e14\u8fd9\u68f5\u6811\u4e0a\u4e00\u5b9a\u542b\u6709\u5305\u542b $x$ \u70b9\u7684 $s_i,t_i$ \u3002\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\uff0c\u94fe\u5e76\u5927\u5c0f\u5c31\u662f\u5305\u542b\u4e00\u4e9b\u5173\u952e\u70b9 $s_i,t_i$ \u7684\u6781\u5c0f\u8fde\u901a\u5b50\u6811 $T$ \u7684\u8fb9\u6570\u3002\n\n\u95ee\u9898\u8f6c\u5316\u5230\u8fd9\u91cc\uff0c\u6709\u4e00\u4e2a\u975e\u5e38\u7ecf\u5178\u7684\u7ed3\u8bba\uff0c\u5305\u542b\u4e00\u4e9b\u5173\u952e\u70b9 $a_1,a_2,a_3...a_n$ \u7684\u6781\u5c0f\u8fde\u901a\u5b50\u6811\u7684\u8fb9\u6570\u4e3a $|T_e|=\\sum_i dep_i-\\sum_{i=2}^n dep_{\\text{lca}(a_i,a_{i-1})}-dep_{\\text{lca}(a_1,a_2...a_n)}$\uff0c\u5176\u4e2d $a_1,a_2,a_3..a_n$ \u6309 $\\texttt{dfs}$ \u5e8f\u4ece\u5c0f\u5230\u5927\u6392\u5217\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9 $x$\uff0c\u627e\u51fa\u5305\u542b $x$ \u7684\u6240\u6709\u8def\u5f84\uff0c\u5e76\u4e14\u6839\u636e\u4e0a\u5f0f\u6c42\u51fa\u6781\u5c0f\u8fde\u901a\u5b50\u6811\u7684\u8fb9\u6570\u5373\u53ef\uff0c\u4f46\u662f\u8fd9\u6837\u505a\uff0c\u5904\u7406 $x$ \u70b9\u88ab\u54ea\u4e9b\u8def\u5f84\u8986\u76d6\u5c31\u662f $O(mn \\log^2 n)$ \u7684\uff0c\u96be\u4ee5\u627f\u53d7\u3002\n\n\u8003\u8651\u5982\u4f55\u5feb\u901f\u7edf\u8ba1\u6240\u6709\u5bf9 $x$ \u6709\u5f71\u54cd\u7684\u8def\u5f84\u7684\u8d21\u732e\uff0c\u53ef\u4ee5\u60f3\u5230\u6811\u4e0a\u5dee\u5206\uff0c\u5bf9\u4e8e $s_i,t_i$ \u8fdb\u884c $+1$\uff0c\u5bf9\u4e8e $\\text{lca}(s_i,t_i)$ \u8fdb\u884c $-1$\uff0c \u5bf9\u4e8e $fa_{\\text{lca}(s_i,t_i)}$ \u8fdb\u884c $-1$\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9 $x$\uff0c\u6211\u4eec\u7528\u6876\u6765\u5b58\u50a8 $m$ \u6761\u8def\u5f84\u5bf9\u7b2c $x$ \u4e2a\u70b9\u7684\u8986\u76d6\u60c5\u51b5\u3002\u8fd9\u4e48\u7edf\u8ba1\u70b9 $x$ \u88ab\u54ea\u4e9b\u8def\u5f84\u8986\u76d6\u5c31\u662f $O(nm)$ \u7684\u3002\n\n\u89c2\u5bdf\u4e00\u4e0b\uff0c\u6211\u4eec\u53d1\u73b0 $\\text{dfs}$ \u65f6\u5c06\u513f\u5b50\u7684\u6876\u4e0e\u7236\u4eb2\u7684\u6876\u5408\u5e76\uff0c\u5f88\u591a\u4f4d\u7f6e\u662f\u7a7a\u7684\uff0c\u6ca1\u5fc5\u8981\u7edf\u8ba1\u3002\u5e76\u4e14\u6bcf\u6b21\u90fd\u8981\u91cd\u65b0\u66b4\u529b\u8ba1\u7b97\u4e00\u904d\u6700\u5c0f\u8fde\u901a\u5b50\u6811 $T$ \u7684\u8fb9\u6570\uff0c\u663e\u7136\u4e0d\u662f\u6700\u4f18\u7684\u3002\n\n\u4e0d\u59a8\u628a\u6876\u6362\u6210\u7ebf\u6bb5\u6811\u3002\u70b9 $x$ \u7684\u7ebf\u6bb5\u6811\u4e2d\uff0c\u533a\u95f4 $[l,r]$ \u8868\u793a\u88ab\u9009\u4e2d\u7684\u5173\u952e\u70b9 $\\text{dfs}$ \u5e8f$\\in[l,r]$ \u65f6\uff0c\u6781\u5c0f\u8fde\u901a\u5b50\u6811 $T$ \u7684\u8fb9\u6570\u3002\u518d\u7ef4\u62a4\u4e24\u4e2a\u91cf $mx,mn$ \u8868\u793a\u5f53\u524d\u533a\u95f4 $[l,r]$ \u5185\u88ab\u9009\u4e2d\u7684\u5173\u952e\u70b9 $\\texttt{dfs}$ \u5e8f\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\uff0c$sum$ \u8868\u793a\u5f53\u524d\u533a\u95f4\u4e2d\u88ab\u9009\u4e2d\u7684\u5173\u952e\u70b9\u6784\u6210\u7684\u6781\u5c0f\u8fde\u901a\u5b50\u6811 $T$ \u7684\u8fb9\u6570\uff0c\u5728\u53f6\u5b50\u8282\u70b9\u4e0a\u5b58\u50a8\u4e00\u4e2a $cnt$ \u7edf\u8ba1 $[l,l]$ \u7684\u8d21\u732e\uff0c\u76f8\u5f53\u4e8e\u4e4b\u524d\u7684\u6876\u3002\u7a0d\u5fae\u7ef4\u62a4\u4e00\u4e0b\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(mn \\log n)$\u3002\n\n\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u7136\u53ef\u4ee5\u4f18\u5316\u3002\u60f3\u4e00\u60f3\uff0c\u6839\u636e\u5dee\u5206\uff0c\u7236\u4eb2\u8282\u70b9\u7684\u7ebf\u6bb5\u6811\uff0c\u4e00\u5b9a\u4e0e\u513f\u5b50\u8282\u70b9\u7ebf\u6bb5\u6811\u7684\u4fe1\u606f\u662f\u91cd\u5408\u7684\uff0c\u548c\u4e4b\u524d\u7684\u6876\u5411\u4e0a\u5408\u5e76\u4e00\u6837\uff0c\u6211\u4eec\u5c06\u513f\u5b50\u8282\u70b9\u548c\u7236\u4eb2\u8282\u70b9\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u4f7f\u7528\u5747\u644a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n)$ \u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u5373\u53ef\u3002\n\n\u82e5\u4f7f\u7528\u500d\u589e/\u6811\u5256 $\\text{LCA}$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log^2 n+m \\log n)$\uff1b\u4f7f\u7528 $O(n\\log n)-O(1)$ \u7684 $LCA$ \uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n+m \\log n)$\u3002\n\n**Show the Code**\n\n```cpp\n#include<cstdio>\ntypedef long long ll;\n/*------------------------Normal I/O&handmade STL--------------------------*/ \ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f; \n} \ninline void swap(int &x,int &y) {int tmp=y;y=x;x=tmp;} \n/*------------------------Tree--------------------------*/ \nint cnt=0,num=0,tot=0;\nint dep[100005],dfn[100005],rev[100005];\nint h[100005],to[200005],ver[200005],f[100005][25];\ninline void AddEdge(int x,int y) {to[++cnt]=y;ver[cnt]=h[x];h[x]=cnt;}\ninline void prework(int x) {\n\tint fa=f[x][0];dfn[x]=++num;rev[num]=x;\n\tfor(register int i=1;i<=20;++i) f[x][i]=f[f[x][i-1]][i-1];\n\tfor(register int i=h[x];i;i=ver[i]) {\n\t\tint y=to[i];if(y==fa) continue;\n\t\tdep[y]=dep[x]+1;f[y][0]=x;prework(y); \n\t}\n}\ninline int LCA(int x,int y) {\n\tif(!x||!y) return 0; \n\tif(dep[x]>dep[y]) swap(x,y);//dep[x]<=dep[y]\n\tfor(register int i=20;i>=0;--i) if(dep[x]<=dep[f[y][i]]) y=f[y][i];\n\tif(x==y) return x;\n\tfor(register int i=20;i>=0;--i) if(f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\n/*------------------------SegmentTree--------------------------*/\nstruct Segment {int mn,mx,cnt;ll sum;}t[4000005];\nint lson[4000005],rson[4000005],rt[100005];\ninline void pushup(int p) {\n\tt[p].mn=t[lson[p]].mn? t[lson[p]].mn:t[rson[p]].mn;\n\tt[p].mx=t[rson[p]].mx? t[rson[p]].mx:t[lson[p]].mx;\n\tt[p].sum=t[lson[p]].sum+t[rson[p]].sum-dep[LCA(rev[t[lson[p]].mx],rev[t[rson[p]].mn])];//???\n}\ninline void modify_add(int &p,int l,int r,int dfnId,int val) {\n\tif(!p) p=++tot;\n\tif(l==r) {\n\t\tt[p].cnt+=val;\n\t\tt[p].mx=t[p].mn=(t[p].cnt>0? dfnId:0);\n\t\tt[p].sum=(t[p].cnt>0? dep[rev[dfnId]]:0);\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif(dfnId<=mid) modify_add(lson[p],l,mid,dfnId,val);\n\telse modify_add(rson[p],mid+1,r,dfnId,val);\n\tpushup(p);\n}\ninline int merge(int x,int y,int l,int r) {\n\tif(!x||!y) return x|y;\n\tif(l==r) {t[x].cnt+=t[y].cnt;t[x].mx=t[x].mn=(t[x].cnt>0? l:0);t[x].sum=(t[x].cnt>0? dep[rev[l]]:0);return x;}\n\tint mid=l+r>>1;\n\tlson[x]=merge(lson[x],lson[y],l,mid);\n\trson[x]=merge(rson[x],rson[y],mid+1,r);\n\tpushup(x); return x;\n}\n/*------------------------Solution--------------------------*/\nll ans=0;\ninline void PathAdd(int x,int y,int dfnId) {\n\tint z=LCA(x,y),fa=f[z][0];\n\tmodify_add(rt[x],1,num,dfn[dfnId],1);\n\tmodify_add(rt[y],1,num,dfn[dfnId],1);\n\tmodify_add(rt[z],1,num,dfn[dfnId],-1);\n\tif(fa) modify_add(rt[fa],1,num,dfn[dfnId],-1);\n}\ninline void solve(int x) {\n\tint fa=f[x][0];\n\tfor(register int i=h[x];i;i=ver[i]) {int y=to[i];if(y==fa) continue;solve(y);}\n\tans+=t[rt[x]].sum-dep[LCA(rev[t[rt[x]].mn],rev[t[rt[x]].mx])]; \n\tif(fa) rt[fa]=merge(rt[fa],rt[x],1,num);\n}\nint main() {\n\tint n=read(),m=read();\n\tfor(register int i=1;i<n;++i) {int x=read(),y=read();AddEdge(x,y);AddEdge(y,x);} dep[1]=1;prework(1);\n\tfor(register int i=1;i<=m;++i) {int s=read(),t=read();PathAdd(s,t,s);PathAdd(s,t,t);}\n\tsolve(1); printf(\"%lld\\n\",ans>>1);\n\treturn 0;\n}\n```\n",
        "postTime": 1599886285,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5327 \u3010[ZJOI2019]\u8bed\u8a00\u3011"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u7ed9\u5b9a\u4e00\u4e9b\u70b9\uff0c\u8ba1\u7b97\u8fd9\u4e9b\u70b9\u5f62\u6210\u7684\u865a\u6811\u8fd8\u539f\u5230\u539f\u6811\u5305\u542b\u7684\u8fb9\u6570\u3002\u663e\u7136\u9898\u76ee\u53ef\u4ee5\u8f6c\u5316\u5230\u8fd9\u4e2a\u95ee\u9898\u4e0a\u3002\n\n\u6211\u4eec\u8003\u8651\u6309\u7167dfs\u5e8f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5047\u8bbe\u6392\u5e8f\u5b8c\u7684\u70b9\u96c6\u4e3a$A_1,A_2,...,A_n$\u3002\n\n\u5219\u6811\u4e0a\u7684\u8fb9\u6570=$(dis(A_1,A_2)+dis(A_2,A_3)+...+dis(a_{n-1},a_n)+dis(a_n,a_1))/2$\n\n\u56e0\u4e3a\u6211\u4eec\u6309\u7167$A_1,A_2,...,A_n$\u904d\u5386\u7684\u65f6\u5019\u6bcf\u6761\u8fb9\u90fd\u4f1a\u6070\u597d\u51c0\u591a\u4e24\u6b21\u6240\u4ee5\u4ed6\u662f\u6b63\u786e\u7684\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u5bf9\u4e8e\u8fd9\u4e2a\u70b9\u6765\u8bf4\u7684\u865a\u6811\u8282\u70b9\u6309\u7167dfn\u5e8f\u6392\u5e8f\u7684\u7ed3\u679c\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u7684\u5408\u5e76\n\n\u5728\u91c7\u7528$O(nlog)-O(1)$LCA\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u505a\u5230$O(nlog)$",
        "postTime": 1556544109,
        "uid": 33736,
        "name": "\u5927\u5934",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5327 \u3010[ZJOI2019]\u8bed\u8a00\u3011"
    },
    {
        "content": "\u8003\u573a\u4e0a\u770b\u5230\u8fd9\u9898\u5c31\u611f\u89c9\u975e\u5e38\u53ef\u505a\n\n~~\u5f00\u573a\u8fd8\u662f\u60f3\u4e86\u4e2a\u5047\u7b97\u6cd5~~\n\n\u5148\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u5982\u4f55\u6c42\u51fa\u80fd\u548c\u5b83\u4ea4\u6d41\u7684\u8282\u70b9\u4e2a\u6570\n\n\u8fd9\u6837\u7684\u8bdd\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u6811\u94fe\u5256\u5206\uff0c\u5bf9\u4e8e\u4e00\u6761\u94fe\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\uff0c\u628a\u8fd9\u6761\u94fe\u5728\u6811\u94fe\u5256\u5206\u65f6\u88ab\u5206\u6210\u7684\u533a\u95f4\u8986\u76d6\u5373\u53ef\n\n~~\u7136\u540e\u5199\u4e00\u4e2a4\u53ealog\u7684\u6811\u5957\u6811\uff0c\u5f97\u5230\u53ef\u80fd\u8fde\u66b4\u529b\u5206\u90fd\u4e0d\u5230\u7684\u597d\u6210\u7ee9~~\n\n\u7136\u540e\u8003\u8651\u5dee\u5206\n\n\u5728\u94fe\u5e95\u7684\u4e24\u4e2a\u8282\u70b9\u7684\u7ebf\u6bb5\u6811\u4e0a\u5c06\u6811\u94fe\u5256\u5206\u5f97\u5230\u7684log\u4e2a\u533a\u95f4+1\uff0c\u5728lca\u7684\u7236\u4eb2\u7684\u7ebf\u6bb5\u6811\u4e0a\u628a\u8fd9\u4e9b\u533a\u95f4-2\n\n\u7136\u540e\u7ebf\u6bb5\u6811\u5408\u5e76\u4e0a\u53bb\u5373\u53ef\n\n\u56e0\u4e3ainsert\u7684\u6b21\u6570\u662f$O(nlogn)$\uff0c\u6240\u4ee5\u603b\u65f6\u7a7a\u590d\u6742\u5ea6\u662f$O(nlog^2n)$\n\n\u6ce8\u610f\u7ebf\u6bb5\u6811\u7684\u5199\u6cd5\u5f88\u5947\u602a\uff0c\u6211\u7528\u7684\u662flyd\u7684\u4e66\u4e0a\u8bb2\u626b\u63cf\u7ebf\u65f6\u770b\u5230\u7684\u4e00\u4e2a\u795e\u5947\u7684\u5199\u6cd5\n\n\u56e0\u4e3a\u4e24\u4e2a+1\u548c\u4e00\u4e2a+2\u5728\u7ebf\u6bb5\u6811\u4e0a\u5bf9\u5e94\u7684\u8282\u70b9\u662f\u76f8\u540c\u7684\n\n\u56e0\u6b64\u6211\u4eec\u4e0dpushdown\uff0c\u53eapushup\n\npushup\u65f6\uff0c\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684\u6807\u8bb0\u503c\u5927\u4e8e0\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u6240\u4ee3\u8868\u7684\u533a\u95f4\u4e2d\u88ab\u8986\u76d6\u7684\u957f\u5ea6\u5c31\u662f\u8fd9\u4e2a\u533a\u95f4\u7684\u957f\u5ea6\uff0c\u5426\u5219\u7684\u8bdd\u5c31\u662f\u8fd9\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u513f\u5b50\u4ee3\u8868\u7684\u533a\u95f4\u4e2d\u88ab\u8986\u76d6\u7684\u957f\u5ea6\u4e4b\u548c\n\n\u7136\u800c\u6211dfs\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u5148\u628a\u8fd9\u4e2a\u8282\u70b9\u7684\u64cd\u4f5cinsert\u8fdb\u53bb\uff0c\u5728\u628a\u5b50\u6811merge\u8fdb\u53bb\uff0c\u5e38\u6570\u5de8\u5927\n\n\u5982\u679c\u5148insert\u518dmerge\u7ebf\u6bb5\u6811\u8282\u70b9\u6570\u5927\u6982\u8981\u5f00$25000000$\u5de6\u53f3(\u5361\u6811\u5256\u4e13\u7528\u6570\u636e)\uff0c\u4f46\u662f\u6211\u53ea\u5f00\u4e86$20000000$(\u591a\u8c22\u5409\u8001\u5e08\u4e0d\u6740\u4e4b\u6069\n\n\u542c\u8bf4\u5409\u8001\u5e08\u6302\u4e86\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u56de\u53bb\u6a21\u62df\u5409\u8001\u5e08\u7684gen\u98ce\u683c\u7528\u4e86\u597d\u51e0\u4e2a\u6570\u636e\u6784\u9020\u65b9\u6cd5\uff0c\u90fd\u628a\u6211\u7684\u8282\u70b9\u6570\u5361\u6389\u4e86~~\uff0c\u6240\u4ee5\u5409\u8001\u5e08\u662f\u4e3a\u4e86\u628a\u6211\u8fd9\u4e2a\u4e24\u53ealog\u9009\u624b\u533a\u5206\u51fa\u6765\u5417~~\n\n\u4f46\u662f\u5c31\u7b97\u4e0d\u7206\u8282\u70b9\u6570\u8fd8\u662f\u4f1aTLE(\u5783\u573e\u8bc4\u6d4b\u673a)\uff0c\u53cd\u6b63\u6211\u53ea\u670980\u5206\n\n~~\u800c\u4e14\u6211T3\u6839\u672c\u5c31\u6ca1\u62ff\u5206\uff0cT1\u62ff\u4e86\u4eba\u4eba\u90fd\u4f1a\u7684\u9ad8\u6d8850\u5206\uff0c\u6240\u4ee5\u6211\u51c9\u4e86~~\n\n\u5982\u679c\u5148merge\u518dinsert\u7684\u8bdd\u4e0d\u4f46\u8282\u70b9\u6570\u4f1a\u4e58\u4e0a0.5\u7684\u5e38\u6570\uff0c\u8fd0\u884c\u6548\u7387\u4e5f\u4f1a\u5feb\u4e00\u70b9\n\n~~\u4ec0\u4e48????\u4e00\u53ealog????\u4e0d\u4f1a!!!!!~~\n\n\u653e\u4e0a\u6211\u8003\u540e\u624b\u52a8\u8fd8\u539f\u7684\u8003\u573a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100100;\nint head[maxn],nxt[maxn<<1],ver[maxn<<1],tot,n,m;\ninline void addedge(int a,int b)\n{\n\tnxt[++tot]=head[a];ver[tot]=b;head[a]=tot;\n\tnxt[++tot]=head[b];ver[tot]=a;head[b]=tot;\n}\nint dep[maxn],fa[maxn],hson[maxn],size[maxn];\ninline void dfs1(int x,int fat)\n{\n\tdep[x]=dep[fat]+1;fa[x]=fat;size[x]=1;int mxsize=0;\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint y=ver[i];if(y==fat) continue;\n\t\tdfs1(y,x);size[x]+=size[y];\n\t\tif(size[y]>mxsize) mxsize=size[y],hson[x]=y;\n\t}\n}\nint id[maxn],top[maxn],id_cnt;\ninline void dfs2(int x,int Top)\n{\n\tid[x]=++id_cnt;top[x]=Top;\n\tif(hson[x]) dfs2(hson[x],Top);\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint y=ver[i];if(y==fa[x]||y==hson[x]) continue;\n\t\tdfs2(y,y);\n\t}\n}\nstruct Node {int ls,rs,tag,sum;}seg[maxn*200];\nint segtot,root[maxn];\ninline void pushup(int p,int l,int r){seg[p].sum=(seg[p].tag>0)?(r-l+1):(seg[seg[p].ls].sum+seg[seg[p].rs].sum);}\ninline void setadd(int p,int l,int r,int v){seg[p].tag+=v;pushup(p,l,r);}\ninline void insert(int &p,int l,int r,int ql,int qr,int v)\n{\n\tif(p==0) p=++segtot;\n\tif(ql<=l&&qr>=r) return (void)setadd(p,l,r,v);\n\tint mid=(l+r)>>1;\n\tif(ql<=mid) insert(seg[p].ls,l,mid,ql,qr,v);\n\tif(qr>mid) insert(seg[p].rs,mid+1,r,ql,qr,v);\n\tpushup(p,l,r);\n}\ninline int Merge(int x,int y,int l,int r)\n{\n\tif((!x)||(!y)) return x|y;\n\tint mid=(l+r)>>1;seg[x].tag+=seg[y].tag;\n\tseg[x].ls=Merge(seg[x].ls,seg[y].ls,l,mid);\n\tseg[x].rs=Merge(seg[x].rs,seg[y].rs,mid+1,r);\n\tpushup(x,l,r);return x;\n}\nstruct Query {int l,r,v;Query(int L,int R,int V){l=L;r=R;v=V;}};\nvector<Query> que[maxn];\ninline int lca(int x,int y)\n{\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\tx=fa[top[x]];\n\t}\n\treturn dep[x]<dep[y]?x:y;\n}\ninline void deal(int x,int y)\n{\n\tint tx=x,ty=y,l=fa[lca(x,y)];\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\tque[tx].push_back(Query(id[top[x]],id[x],1));\n\t\tque[ty].push_back(Query(id[top[x]],id[x],1));\n\t\tque[l].push_back(Query(id[top[x]],id[x],-2));\n\t\tx=fa[top[x]];\n\t}\n\tif(dep[x]>dep[y]) swap(x,y);\n\tque[tx].push_back(Query(id[x],id[y],1));\n\tque[ty].push_back(Query(id[x],id[y],1));\n\tque[l].push_back(Query(id[x],id[y],-2));\n}\nlong long ans;\ninline void getans(int x,int fat)\n{\n\tfor(int i=0;i<(int)que[x].size();i++) insert(root[x],1,n,que[x][i].l,que[x][i].r,que[x][i].v);\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint y=ver[i];if(y==fat) continue;\n\t\tgetans(y,x);root[x]=Merge(root[x],root[y],1,n);\n\t}\n\tans+=seg[root[x]].sum;\n}\ninline void init()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1,a,b;i<n;i++) scanf(\"%d%d\",&a,&b),addedge(a,b);\n\tdfs1(1,0);dfs2(1,1);\n\tfor(int i=1;i<=n;i++) deal(i,i);\n\tfor(int i=1,a,b;i<=m;i++) scanf(\"%d%d\",&a,&b),deal(a,b);\n}\nint main()\n{\n\tinit();getans(1,0);\n\tprintf(\"%lld\\n\",(ans-n)/2);\n}\n```\n\u5728\u6d1b\u8c37\u4e0a\u6d4b\u5b98\u65b9\u6570\u636e\u662f\u53ef\u4ee5AC\u7684\uff0c~~\u800c\u4e14\u5f00\u4e0d\u5f00O2\u5dee\u4e0d\u591a\u5feb~~",
        "postTime": 1556533449,
        "uid": 84419,
        "name": "daifucong",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5327\u3010[ZJOI2019]\u8bed\u8a00\u3011"
    },
    {
        "content": "\u5c0f\u6e05\u65b0\u9759\u6001\u94fe\u5206\u6cbb\u9898\u89e3\u3002\n\n\u8003\u8651\u4e00\u4e0b\u5982\u4f55 dsu on tree\u3002\n\n\u5047\u8bbe $u$ \u548c $v$ \u6ca1\u6709\u7956\u5148\u5173\u7cfb\uff0c\u90a3\u4e48\u5305\u542b\u4e4b\u7684\u4e00\u6761\u94fe $(s_i,t_i)$ \u7684 $\\text{lca}$ \u4e00\u5b9a\u7b49\u4e8e $\\text{lca}_{u,v}$\u3002\u5982\u679c\u6709\u7956\u5148\u5173\u7cfb\u5219\u4e0d\u4e00\u5b9a\u6709\u4e0a\u8ff0\u7ed3\u8bba\uff0c\u542f\u53d1\u6211\u4eec\u628a\u8fd9\u4e24\u90e8\u5206\u5206\u5f00\u6765\u7b97\u3002\n\n\u5148\u8003\u8651\u7b2c\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u628a\u6bcf\u6761\u94fe\u62c6\u6210\u4e24\u6761\u76f4\u94fe\uff0c\u7136\u540e\u5728\u6df1\u5904\u52a0\u5165\u6d45\u5904\u5220\u9664\u3002dsu on tree \u7ef4\u62a4\u6bcf\u6761\u5305\u542b\u5f53\u524d\u70b9 $k$ \u7684\u76f4\u94fe\u7684\u4ea4\u4e0e $k$ \u7684\u5b50\u6811\u96c6\u5408\u7684\u4ea4\u3002\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u76f4\u94fe\u5e95\u90e8\u7684\u70b9\u7684 dfn\uff0c\u6bcf\u6b21\u52a0\u5165/\u5220\u9664\u53ea\u8981\u67e5\u8be2\u524d\u9a71\u540e\u7ee7\u66f4\u65b0\u4e00\u4e0b\u7b54\u6848\u5373\u53ef\u3002\n\n\u53d1\u73b0\u4e0a\u9762\u8fd9\u4e2a\u4e1c\u897f\u529f\u80fd\u6bd4\u8f83\u5f3a\u5927\u3002\u6240\u4ee5\u63a5\u7740\u8003\u8651\u7b2c\u4e8c\u90e8\u5206\uff0c\u6211\u4eec\u628a\u6240\u6709 $(u,v)$ \u7684\u8d21\u732e\u653e\u5230 $\\text{lca}_{u,v}=k$ \u5904\u8ba1\u7b97\u3002\u6211\u4eec\u53ef\u4ee5\u63a5\u7740\u628a\u62c6\u597d\u7684\u4e24\u6761\u76f4\u94fe\u6253\u5230\u5bf9\u5e94\u7684\u70b9\u4e0a\uff0c\u7136\u540e\u5bf9\u53bb\u9664\u91cd\u5b50\u6811\u7684\u90e8\u5206\u8fdb\u884c dsu on tree\uff0c\u8ddf\u7b2c\u4e00\u90e8\u5206\u76f8\u540c\uff0c\u53ea\u4e0d\u8fc7\u52a0\u5165\u7684\u70b9\u4e0d\u662f\u5f53\u524d\u81ea\u5df1\u7684\u70b9\u800c\u662f\u4e24\u6761\u76f4\u94fe\u4e2d\u7684\u53e6\u4e00\u6761\u7684\u5e95\u90e8\u7ed3\u70b9\u3002\n\n\u7136\u540e\u4f60\u53d1\u73b0\u7b97\u91cd\u4e86\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd $u$ \u548c $v$ \u90fd\u5728 $k$ \u7684\u8f7b\u5b50\u6811\u5185\uff0c\u7136\u540e\u5176\u5b9e\u4f60\u62c6\u6210\u4e24\u90e8\u5206\u7b97\u5c31\u884c\u4e86\uff0c\u4e00\u90e8\u5206\u662f\u8f7b\u5b50\u6811\u548c\u8f7b\u5b50\u6811\uff0c\u4e00\u90e8\u5206\u662f\u8f7b\u5b50\u6811\u548c\u91cd\u5b50\u6811\uff0c\u524d\u9762\u90a3\u90e8\u5206\u8981\u9664\u4ee5 $2$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log ^2n)$ \u3002\u672c\u4ee5\u4e3a\u67e5\u8be2\u524d\u9a71\u540e\u7ee7\u4f7f\u7528 set \u53ef\u80fd\u5e38\u6570\u4f1a\u6709\u70b9\u88c2\u5f00\uff0c\u5b9e\u9645\u4e0a\u5f97\u76ca\u4e8e\u9759\u6001\u94fe\u5206\u6cbb\u7684\u5c0f\u5e38\u6570\u8fd8\u6709\u57fa\u4e8e\u6570\u636e\u672c\u8eab\u5f3a\u5f31\u7684\u5e38\u6570\u5f71\u54cd\u8dd1\u5f97\u8c8c\u4f3c\u5f88\u4e0d\u9519\u3002\u6bd4\u4e00\u822c\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u505a\u6cd5\u8981\u5feb\u3002\n\n```c++\n// Lynkcat.\n// Problem: P5327 [ZJOI2019]\u8bed\u8a00\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/P5327\n// Memory Limit: 500 MB\n// Time Limit: 3000 ms\n\n#include<bits/stdc++.h>\n#define poly vector<int>\n#define IOS ios::sync_with_stdio(false)\n#define ll long long\n#define mp make_pair\n#define mt make_tuple\n#define pa pair < int,int >\n#define fi first\n#define se second\n#define inf 1e9\n#define mod 998244353\n#define int ll\n#define N 100005\nusing namespace std;\npoly G[N],tmp[N],Q[N],E[N];\nint dfn[N],siz[N],ffa[N],dep[N],son[N],idfn[N],DFN;\nint rdfn[N];\nint Tp[N];\nint ans;\nint n,m;\nint a[N],b[N],c[N];\nint ans1;\nvoid dfs(int k,int fa)\n{\n\tdfn[k]=++DFN;\n\tsiz[k]=1;\n\tffa[k]=fa;\n\tdep[k]=dep[fa]+1;\n\tidfn[DFN]=k;\n\tfor (auto u:G[k])\n\t{\n\t\tif (u==fa) continue;\n\t\tdfs(u,k);\n\t\tif (siz[u]>siz[son[k]]) son[k]=u;\n\t\tsiz[k]+=siz[u];\n\t}\n\trdfn[k]=DFN;\n}\nvoid dfs1(int k,int tp)\n{\n\tTp[k]=tp;\n\tif (son[k]) dfs1(son[k],tp);\n\tfor (auto u:G[k])\n\t{\n\t\tif (u==ffa[k]||u==son[k]) continue;\n\t\tdfs1(u,u);\n\t}\n}\ninline int lca(int x,int y)\n{\n\twhile (Tp[x]!=Tp[y])\n\t{\n\t\tif (dep[Tp[x]]<dep[Tp[y]]) swap(x,y);\n\t\tx=ffa[Tp[x]];\n\t}\n\tif (dep[x]>dep[y]) return y;\n\treturn x;\n}\ninline int dis(int x,int y)\n{\n\treturn dep[x]+dep[y]-2*dep[lca(x,y)];\n}\ninline int in(int x,int y)\n{\n\treturn dfn[y]<=dfn[x]&&dfn[x]<=rdfn[y];\n}\nstruct node\n{\n\tmultiset<int>S;\n\tint sum;\n\tvoid ins(int x)\n\t{\n\t\tif (S.size()==0)\n\t\t{\n\t\t\tS.insert(x);\n\t\t\treturn;\n\t\t}\n\t\tauto it=S.lower_bound(x);\n\t\tif (it==S.end())\n\t\t{\n\t\t\tsum-=dis(idfn[(*(--S.end()))],idfn[(*S.begin())]);\n\t\t\tsum+=dis(idfn[(*(--S.end()))],idfn[x]);\n\t\t\tsum+=dis(idfn[x],idfn[(*S.begin())]);\n\t\t} else\n\t\tif (it==S.begin())\n\t\t{\n\t\t\tsum-=dis(idfn[(*(--S.end()))],idfn[(*S.begin())]);\n\t\t\tsum+=dis(idfn[(*S.begin())],idfn[x]);\n\t\t\tsum+=dis(idfn[x],idfn[(*(--S.end()))]);\n\t\t} else\n\t\t{\n\t\t\tauto it1=it;\n\t\t\tit1--;\n\t\t\tsum-=dis(idfn[*it],idfn[*it1]);\n\t\t\tsum+=dis(idfn[*it],idfn[x]);\n\t\t\tsum+=dis(idfn[*it1],idfn[x]);\n\t\t}\n\t\tS.insert(x);\n\t}\n\tvoid ers(int x)\n\t{\n\t\tS.erase(S.find(x));\n\t\tif (S.empty()) return;\n\t\tauto it=S.lower_bound(x);\n\t\tif (it==S.end())\n\t\t{\n\t\t\tsum+=dis(idfn[(*(--S.end()))],idfn[(*S.begin())]);\n\t\t\tsum-=dis(idfn[(*(--S.end()))],idfn[x]);\n\t\t\tsum-=dis(idfn[x],idfn[(*S.begin())]);\n\t\t} else\n\t\tif (it==S.begin())\n\t\t{\n\t\t\tsum+=dis(idfn[(*(--S.end()))],idfn[(*S.begin())]);\n\t\t\tsum-=dis(idfn[(*S.begin())],idfn[x]);\n\t\t\tsum-=dis(idfn[x],idfn[(*(--S.end()))]);\n\t\t} else\n\t\t{\n\t\t\tauto it1=it;\n\t\t\tit1--;\n\t\t\tsum+=dis(idfn[*it],idfn[*it1]);\n\t\t\tsum-=dis(idfn[*it],idfn[x]);\n\t\t\tsum-=dis(idfn[*it1],idfn[x]);\n\t\t}\n\t}\n\tvoid clear()\n\t{\n\t\tS.clear();\n\t\tsum=0;\n\t}\n\tint size()\n\t{\n\t\treturn S.size();\n\t}\n}set1,set2;\nvoid Ins(int k)\n{\n\tfor (auto u:tmp[k])\n\t{\n\t\tif (a[u]!=k)\n\t\t{\n\t\t\tset2.ins(dfn[a[u]]);\n\t\t}  else \n\t\t{\n\t\t\tset2.ins(dfn[b[u]]);\n\t\t}\n\t}\n}\nvoid qry(int k,int fa,int rt)\n{\n\tfor (auto u:G[k])\n\t{\n\t\tif (u==fa||u==son[k]) continue;\n\t\tqry(u,k,rt);\n\t\tset2.clear();\n\t\tset2.ins(dfn[rt]);\n\t}\n\tif (son[k])\n\t\tqry(son[k],k,rt);\n\tIns(k);\n\tfor (auto u:G[k])\n\t{\n\t\tif (u==fa||u==son[k]) continue;\n\t\tfor (int j=dfn[u];j<=rdfn[u];j++)\n\t\t\tIns(idfn[j]);\n\t}\n\tans1+=(set2.sum/2);\n}\nvoid calc(int k,int fa)\n{\n\tfor (auto u:G[k])\n\t{\n\t\tif (u==fa||u==son[k]) continue;\n\t\tcalc(u,k);\n\t\tset1.clear();\n\t\tset1.sum=0;\n\t}\n\tif (son[k]) \n\t{\n\t\tcalc(son[k],k);\n\t\tset1.ers(dfn[son[k]]);\n\t}\n\tset1.ins(dfn[k]);\n\tfor (auto p:Q[k])\n\t\tset1.ins(dfn[k]);\n\t\t\n\t\t\n\tfor (auto u:E[k])\n\t{\n\t\tif (!in(a[u],son[k])&&!in(b[u],son[k]))\n\t\t{\n\t\t\ttmp[b[u]].push_back(u);\n\t\t\ttmp[a[u]].push_back(u);\n\t\t}\n\t}\n\tset2.clear(),set2.sum=0;\n\tset2.ins(dfn[k]);\n\tans1=0;\n\tfor (auto u:G[k])\n\t{\n\t\tif (u==fa||u==son[k]) continue;\n\t\tqry(u,k,k);\n\t\tset2.clear();\n\t\tset2.ins(dfn[k]);\n\t\tfor (int j=dfn[u];j<=rdfn[u];j++)\n\t\t{\n\t\t\tint v=idfn[j];\n\t\t\tfor (auto p:Q[v])\n\t\t\t\tif (dep[c[p]]<=dep[k])\n\t\t\t\t\tset1.ins(dfn[v]);\n\t\t}\n\t}\n\tfor (auto u:E[k]) tmp[a[u]].clear(),tmp[b[u]].clear();\n\tans+=ans1/2;\n\t\n\t\n\tfor (auto u:E[k])\n\t{\n\t\tif (!in(a[u],son[k])&&!in(b[u],son[k]))\n\t\t{\n\t\t} else\n\t\t{\n\t\t\tif (in(a[u],son[k])) tmp[b[u]].push_back(u);\n\t\t\telse tmp[a[u]].push_back(u);\n\t\t}\n\t}\n\tset2.clear(),set2.sum=0;\n\tset2.ins(dfn[k]);\n\tans1=0;\n\tfor (auto u:G[k])\n\t{\n\t\tif (u==fa||u==son[k]) continue;\n\t\tqry(u,k,k);\n\t\tset2.clear();\n\t\tset2.ins(dfn[k]);\n\t}\n\tfor (auto u:E[k]) tmp[a[u]].clear(),tmp[b[u]].clear();\n\tans+=ans1;\n\t\n\tans+=(set1.sum/2);\n\tfor (auto u:E[k])\n\t\tset1.ers(dfn[a[u]]),set1.ers(dfn[b[u]]);\n\t\n}\nvoid BellaKira()\n{\n\tcin>>n>>m;\n\tfor (int i=1;i<n;i++)\n\t{\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tG[x].push_back(y);\n\t\tG[y].push_back(x);\n\t}\n\tdfs(1,0);\n\tdfs1(1,1);\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tcin>>a[i]>>b[i];\n\t\tif (a[i]==b[i]) continue;\n\t\tc[i]=lca(a[i],b[i]);\n\t\tQ[a[i]].push_back(i);\n\t\tQ[b[i]].push_back(i);\n\t\tE[c[i]].push_back(i);\n\t}\n\tcalc(1,0);\n\tcout<<ans<<'\\n';\n}\nsigned main()\n{\n\tIOS;\n\tcin.tie(0);\n\tint T=1;\n\twhile (T--)\n\t{\n\t\tBellaKira();\n\t}\n}\n```",
        "postTime": 1677118408,
        "uid": 120911,
        "name": "Lynkcat",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5327 [ZJOI2019]\u8bed\u8a00"
    },
    {
        "content": "\n\u663e\u7136\u4e00\u4e2a\u70b9\u53ef\u8fbe\u7684\u70b9\u662f\u4e00\u4e2a\u8054\u901a\u5757\uff1b\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8003\u8651\u7ef4\u62a4\u70b9\u96c6\u7684\u865a\u6811\u3002\n\n\u6bd4\u8f83\u9ebb\u70e6\u7684\u505a\u6cd5\u662f\u8003\u8651\u76f4\u63a5\u7528\u4e00\u4e2a $\\rm set$ \u7ef4\u62a4\u865a\u6811\u7684\u70b9\u96c6\u4ee5\u53ca\u70b9\u96c6\u5927\u5c0f\uff08\u5b9e\u8d28\u662f\u7ef4\u62a4 $\\rm dfn$ \u5e8f\uff09\uff0c\u5bf9\u4e8e\u6bcf\u6761\u94fe\u62c6\u6210\u4e24\u6761\u94fe\u4f9d\u6b21\u4e22\u5165 $x,y$ \u4ee5\u53ca $LCA$ \u5904\uff0c\u7136\u540e\u53ea\u9700\u8981\u5c06\u513f\u5b50\u7684\u865a\u6811\u5408\u5e76\u5373\u53ef\uff0c\u90a3\u4e48\u76f4\u63a5\u542f\u53d1\u5f0f\u5408\u5e76 $\\rm set$ \u5373\u53ef\uff0c\u7531\u4e8e\u9700\u8981\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5927\u6982\u9700\u8981\u4e00\u4e2a $\\rm node$ \u7c7b\u578b\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\u9700\u8981\u7279\u5224\u4e24\u8fb9\uff08\u524d\u9a71\u548c\u540e\u7ee7\uff09\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u76f8\u5bf9\u800c\u8a00\u6ca1\u6709\u90a3\u4e48\u7b80\u5355\uff0c\u66f4\u7b80\u6d01\u7684\u505a\u6cd5\u662f\u8003\u8651\u8ba1\u7b97\u82e5\u5e72\u6761 $x\\to 1$ \u7684\u94fe\u7684\u4ea4\u7684\u5927\u5c0f\u51cf\u53bb\u6df1\u5ea6\u6700\u5c0f\u7684 $LCA\\to 1$ \u7684\u94fe\u7684\u5927\u5c0f\u5373\u53ef\u3002\u8fd9\u6837\u53ea\u9700\u8981\u5728 $\\rm dfn$ \u4e0a\u505a\u7ebf\u6bb5\u6811\u5408\u5e76\uff08\u5408\u5e76\u76f8\u90bb\u4e24\u9879\u662f\u5341\u5206\u7b80\u6d01\u7684\uff0c\u53ea\u9700\u8981\u51cf\u53bb\u6700\u5de6\u4e0e\u6700\u53f3\u7684 LCA \u7684\u6df1\u5ea6\uff09\uff0c\u800c\u4e14\u4e5f\u4e0d\u7528\u5206\u7c7b\u8ba8\u8bba\u3002\n\n\u7ef4\u62a4 LCA \u96c6\u548c\u94fe\u96c6\u90fd\u53ef\u4ee5\u901a\u8fc7\u7ebf\u6bb5\u6811\u5408\u5e76\u5904\u7406\uff0c\u89c6\u662f\u5426\u5199 $\\mathcal O(1) LCA$\uff0c\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n\\log n)~\\mathbf{or}~\\mathcal O(n\\log^2 n)$\uff0c\u4e0d\u8fc7\u6211\u76f4\u63a5\u5199\u7684 $\\log^2$\uff0c\u6240\u4ee5\u7ef4\u62a4\u6df1\u5ea6\u6700\u5c0f\u7684 LCA \u5219\u662f\u76f4\u63a5\u5199\u7684 mutliset \u542f\u53d1\u5f0f\u5408\u5e76\u3002\uff08\u61d2\u5f97\u6539\u7ebf\u6bb5\u6811\uff09\n\n\u7ec6\u8282\u5efa\u8bae\u81ea\u5df1\u60f3\u4e00\u4e0b\u3002\n\n$Code:$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\n#define Next( i, x ) for( register int i = head[x]; i; i = e[i].next )\n#define rep( i, s, t ) for( register int i = (s); i <= (t); ++ i )\n#define drep( i, s, t ) for( register int i = (t); i >= (s); -- i )\n#define re register\n#define pb push_back\n#define int long long\n#define ls(x) tr[x].l\n#define rs(x) tr[x].r\nint gi() {\n\tchar cc = getchar() ; int cn = 0, flus = 1 ;\n\twhile( cc < '0' || cc > '9' ) {  if( cc == '-' ) flus = - flus ; cc = getchar() ; }\n\twhile( cc >= '0' && cc <= '9' )  cn = cn * 10 + cc - '0', cc = getchar() ;\n\treturn cn * flus ;\n}\nconst int N = 2e5 + 5 ; \nconst int M = 6e6 + 5 ; \nint n, m, idnex, cnt, Id[N], rt[N], dep[N], dfn[N], Fa[N], son[N], sz[N], top[N], Ans ; \nvector<int> E[N], in[N], out[N], pi[N], po[N] ; \nmultiset<int> S[N] ; multiset<int>::iterator it ;  \nstruct Tr { int lx, rx, ans, t, l, r ; } tr[M] ;\nvoid add( int x, int y ) { E[x].pb(y), E[y].pb(x) ; }\nvoid dfs( int x, int fa ) {\n\tsz[x] = 1, son[x] = 0, dep[x] = dep[fa] + 1, Fa[x] = fa ; \n\tfor( int v : E[x] ) {\n\t\tif( v == fa ) continue ; \n\t\tdfs( v, x ), sz[x] += sz[v] ;\n\t\tif( sz[v] > sz[son[x]] ) son[x] = v ; \n\t}\n}\nvoid dfs2( int x, int high ) {\n\tdfn[x] = ++ idnex, Id[idnex] = x, top[x] = high ; \n\tif( son[x] ) dfs2( son[x], high ) ;\n\tfor( int v : E[x] ) if( ( v ^ Fa[x] ) && ( v ^ son[x] ) ) dfs2( v, v ) ; \n}\nint LCA( int x, int y ) {\n\twhile( top[x] != top[y] ) {\n\t\tif( dep[top[x]] < dep[top[y]] ) swap( x, y ) ;\n\t\tx = Fa[top[x]] ; \n\t}\n\treturn ( dep[x] < dep[y] ) ? x : y ; \n}\nvoid pushup( int x ) {\n\tint r = rs(x), l = ls(x) ;\n\tif( !tr[ls(x)].t ) tr[x] = tr[rs(x)] ;\n\telse if( !tr[rs(x)].t ) tr[x] = tr[ls(x)] ; \n\telse \n\t\ttr[x].ans = tr[ls(x)].ans + tr[rs(x)].ans - dep[LCA( tr[ls(x)].rx, tr[rs(x)].lx )], \n\t\ttr[x].lx = tr[ls(x)].lx, tr[x].rx = tr[rs(x)].rx, tr[x].t = tr[ls(x)].t + tr[rs(x)].t ; \n\ttr[x].l = l, tr[x].r = r ; \n}\nvoid insert( int &x, int l, int r, int k, int type ) {\n\tif( !x ) x = ++ cnt ; \n\tif( l == r ) {\n\t\tif( ( type > 0 ) && ( !tr[x].t ) ) tr[x].ans = dep[Id[l]], tr[x].lx = tr[x].rx = Id[l] ; \n\t\ttr[x].t += type ; \n\t\tif( ( type < 0 ) && ( !tr[x].t ) ) tr[x].ans = tr[x].lx = tr[x].rx = 0 ; return ; \n\t}\n\tint mid = ( l + r ) >> 1 ; \n\tif( mid >= k ) insert( ls(x), l, mid, k, type ) ;\n\telse insert( rs(x), mid + 1, r, k, type ) ;\n\tpushup(x) ; \n}\nvoid merge( int &x, int u, int l, int r ) {\n\tif( !x || !u ) return (void)(x = x + u) ;\n\tif( l == r ) { if( !tr[x].t ) tr[x] = tr[u] ; else tr[x].t += tr[u].t ; return ; }\n\tint mid = ( l + r ) >> 1 ; \n\tmerge( ls(x), ls(u), l, mid ), merge( rs(x), rs(u), mid + 1, r ) ;\n\tpushup(x) ; \n}\nvoid Merge( int x, int y ) {\n\tif( S[x].size() < S[y].size() ) swap( S[x], S[y] ) ;\n\tit = S[y].begin() ; \n\tfor( ; it != S[y].end(); ++ it ) S[x].insert(*it) ; \n}\nvoid Dfs( int x, int fa ) {\n\tfor( int k : in[x] ) insert( rt[x], 1, n, dfn[k], 1 ) ;\n\tfor( int k : pi[x] ) S[x].insert(k) ; \n\tfor( int v : E[x] ) \n\t\tif( v ^ fa ) Dfs( v, x ), merge( rt[x], rt[v], 1, n ), Merge( x, v ) ; \n\tif( !S[x].empty() ) it = S[x].begin(), Ans += ( tr[rt[x]].ans - *it ) ;\n\tfor( int k : out[x] ) insert( rt[x], 1, n, dfn[k], -2 ) ;\n\tfor( int k : po[x] ) S[x].erase(S[x].find(k)), S[x].erase(S[x].find(k)) ; \n}\nsigned main()\n{\n\tn = gi(), m = gi() ; int x, y ; \n\trep( i, 2, n ) x = gi(), y = gi(), add( x, y ) ; \n\tdfs( 1, 1 ), dfs2( 1, 1 ) ;\n\trep( i, 1, m ) {\n\t\tx = gi(), y = gi() ; int lca = LCA( x, y ) ;\n\t\tout[lca].pb(x), out[lca].pb(y), po[lca].pb(dep[lca]), \n\t\tpi[x].pb(dep[lca]), pi[y].pb(dep[lca]) ; \n\t\tin[x].pb(x), in[x].pb(y), in[y].pb(x), in[y].pb(y) ;\n\t} Dfs( 1, 1 ) ;\n\tprintf(\"%lld\\n\", Ans / 2 ) ;\n\treturn 0 ;\n}\n```",
        "postTime": 1592190286,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5327 \u3010[ZJOI2019]\u8bed\u8a00\u3011"
    },
    {
        "content": "## [P5327](https://www.luogu.com.cn/problem/P5327)  \n\u672c\u9898\u7684\u5927\u610f\u5c31\u662f\u8ba9\u4f60\u6c42\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $x$\uff0c\u7ecf\u8fc7 $x$ \u7684\u94fe\u7684\u5e76\u96c6\u5927\u5c0f\u4e4b\u548c\u7684\u4e00\u534a\u3002   \n\u8003\u8651\u5bf9\u4e8e\u82e5\u5e72\u4e2a\u70b9 $A_1,A_2...A_p$\uff0c\u5e8f\u5217\u7684 dfs \u5e8f\u4ece\u5c0f\u5230\u5927\uff0c\u5b83\u4eec\u5728\u6811\u4e0a\u5f62\u6210\u7684\u865a\u6811\u5927\u5c0f\u5c31\u662f $\\sum_{i=1}^{n}dep_{A_i}-\\sum_{i=1}^{n-1}dep_{lca(A_i,A_{i+1})}-dep_{lca(A_1,A_n)}$ \u8fd9\u4e2a\u7ed3\u8bba\u53ef\u4ee5\u4f7f\u7528 dfs \u5e8f\u6765\u8bc1\u660e\uff0c\u633a\u7b80\u5355\u7684\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8be6\u7ec6\u8bb2\u4e86\u3002   \n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $x$\uff0c\u7ecf\u8fc7 $x$ \u7684\u94fe\u7684\u5e76\u96c6\u5927\u5c0f\u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a\u7ecf\u8fc7 $x$ \u7684\u94fe\u7684\u7aef\u70b9\u6784\u6210\u7684\u865a\u6811\u5927\u5c0f\u3002\u8003\u8651\u600e\u4e48\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u88ab\u54ea\u4e9b\u94fe\u7ecf\u8fc7\uff0c\u660e\u663e\u5730\uff0c\u53ef\u4ee5\u8fdb\u884c\u6811\u4e0a\u5dee\u5206\u6765\u5904\u7406\uff0c\u5c31\u53ea\u7528\u5728\u56db\u4e2a\u70b9\u7684\u6876\u52a0\u503c\u5c31\u597d\u4e86\u3002    \n\u7136\u540e\u8003\u8651\u4f18\u5316\uff0c\u628a\u6876\u6539\u4f5c\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u5e76\u4f7f\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u662f $\\Theta(m\\log m)$\uff0c\u5c31\u53ef\u4ee5\u7ef4\u62a4\u6709\u54ea\u4e9b\u7aef\u70b9\u8981\u7b97\u8fdb\u5f53\u524d\u8282\u70b9\u7684\u865a\u6811\u4e2d\u4e86\uff0c\u800c\u5bf9\u4e8e\u8ba1\u7b97\u865a\u6811\u5927\u5c0f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u533a\u95f4 $[l,r]$\uff0c\u8868\u793a\u5f53\u524d\u8282\u70b9\u4e0b\uff0c$[l,r]$ \u4e2d\u7aef\u70b9\u7684\u4fe1\u606f\uff08\u7aef\u70b9\u6309 dfs \u5e8f\u6392\u4e2a\u5e8f\uff09\uff0c\u8bb0\u5f55\u6700\u5de6\u3001\u6700\u53f3\u7684\u9009\u4e2d\u7aef\u70b9\u548c $\\sum_{i=1}^{n}dep_{A_i}$ \u4e0e $\\sum_{i=1}^{n-1}dep_{lca(A_i,A_{i+1})}$ \u7684\u503c\uff0c\u8fd9\u662f\u597d\u7ef4\u62a4\u7684\u3002     \n\u4e0a\u4ee3\u7801\uff1a   \n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,head[300003],sz[300003],F[300003][23],dep[300003],root[300003],wz[300003],idx;\nint apr[300003];\nint s[300003],t[300003];\nint s2[300003],t2[300003];\nvector<pair<int,int> >r;\nstruct Edge{\n\tint st;\n\tint ed;\n\tint nxt;\n}E[300003];\nstruct SegmentTree{\n\tint st;\n\tint ed;\n\tint val;\n\tint val1;\n\tint val2;\n\tint lv;\n\tint rv;\n\tint lson;\n\tint rson;\n}T[7500003];\nint totT;\nint totE;\nint k1,k2,k3,k4,k5,k6,k7,k8,k9;\nlong long ans;\nint add_new(int st,int ed){\n\tT[++totT].st=st;\n\tT[totT].ed=ed;\n\treturn totT;\n}\nvoid addEdge(int st,int ed){\n\tE[++totE].st=st;\n\tE[totE].ed=ed;\n\tE[totE].nxt=head[st];\n\thead[st]=totE;\n\treturn;\n}\nvoid dfs(int now){\n\twz[now]=++idx;\n\tfor(int i=1;;i++){\n\t\tif(F[F[now][i-1]][i-1]==0)break;\n\t\tF[now][i]=F[F[now][i-1]][i-1];\n\t}\n\tsz[now]=1;\n\tfor(int i=head[now];i;i=E[i].nxt){\n\t\tif(E[i].ed==F[now][0])continue;\n\t\tF[E[i].ed][0]=now;\n\t\tdep[E[i].ed]=dep[now]+1;\n\t\tdfs(E[i].ed);\n\t\tsz[now]+=sz[E[i].ed];\n\t}\n\treturn;\n}\nint lca(int X,int Y){\n\tif(dep[X]<dep[Y])swap(X,Y);\n\tk4=22;\n\twhile(k4--)if(dep[F[X][k4]]>=dep[Y])X=F[X][k4];\n\tk4=22;\n\twhile(k4--)if(F[X][k4]!=F[Y][k4])X=F[X][k4],Y=F[Y][k4];\n\twhile(X!=Y)X=F[X][0],Y=F[Y][0];\n\treturn X;\n}\nvoid pushup(int now){\n\tT[now].val1=T[T[now].lson].val1+T[T[now].rson].val1;\n\tif(T[T[now].lson].lv!=0)T[now].lv=T[T[now].lson].lv;\n\telse T[now].lv=T[T[now].rson].lv;\n\tif(T[T[now].rson].rv!=0)T[now].rv=T[T[now].rson].rv;\n\telse T[now].rv=T[T[now].lson].rv;\n\tT[now].val2=T[T[now].lson].val2+T[T[now].rson].val2;\n\tif(T[T[now].lson].rv&&T[T[now].rson].lv)T[now].val2+=dep[lca(apr[T[T[now].lson].rv],apr[T[T[now].rson].lv])];\n\treturn;\n}\nvoid add(int now,int wz,int val){\n\tif(T[now].st==T[now].ed){\n\t\tT[now].val+=val;\n\t\tif(T[now].val<=0)T[now].val1=T[now].lv=T[now].rv=T[now].val2=0;\n\t\telse{\n\t\t\tT[now].val1=dep[apr[T[now].st]];\n\t\t\tT[now].val2=0;\n\t\t\tT[now].lv=T[now].rv=T[now].st;\n\t\t}\n\t\treturn;\n\t}\n\tif(wz<=((T[now].st+T[now].ed)>>1)){\n\t\tif(!T[now].lson)T[now].lson=add_new(T[now].st,((T[now].st+T[now].ed)>>1));\n\t\tadd(T[now].lson,wz,val);\n\t}\n\telse{\n\t\tif(!T[now].rson)T[now].rson=add_new(((T[now].st+T[now].ed)>>1)+1,T[now].ed);\n\t\tadd(T[now].rson,wz,val);\n\t}\n\tpushup(now);\n\t//if(val>0)cout<<T[now].st<<\" \"<<T[now].ed<<\" \"<<T[now].val1<<endl;\n\treturn;\n}\nvoid merge(int X,int Y){\n\tif(T[X].st==T[X].ed){\n\t\tT[X].val+=T[Y].val;\n\t\tif(T[X].val<=0)T[X].val1=T[X].lv=T[X].rv=T[X].val2=0;\n\t\telse{\n\t\t\tT[X].val1=dep[apr[T[X].st]];\n\t\t\tT[X].val2=0;\n\t\t\tT[X].lv=T[X].rv=T[X].st;\n\t\t}\n\t\treturn;\n\t}\n\tif(T[X].lson&&T[Y].lson)merge(T[X].lson,T[Y].lson);\n\tif(T[X].lson==0)T[X].lson=T[Y].lson;\n\tif(T[X].rson&&T[Y].rson)merge(T[X].rson,T[Y].rson);\n\tif(T[X].rson==0)T[X].rson=T[Y].rson;\n\tpushup(X);\n\treturn;\n}\nvoid get_ans(int now){\n\tfor(int i=head[now];i!=0;i=E[i].nxt){\n\t\tif(E[i].ed==F[now][0])continue;\n\t\tget_ans(E[i].ed);\n\t\tmerge(root[now],root[E[i].ed]);\n\t}\n\tans+=T[root[now]].val1-T[root[now]].val2-dep[lca(apr[T[root[now]].lv],apr[T[root[now]].rv])];\n\treturn;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)root[i]=add_new(1,2*m);\n\tfor(int i=1;i<n;i++){\n\t\tscanf(\"%d%d\",&k1,&k2);\n\t\taddEdge(k1,k2);\n\t\taddEdge(k2,k1);\n\t}\n\tdep[1]=1;\n\tdfs(1);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&s[i],&t[i]);\n\t\tr.push_back({wz[s[i]],i});\n\t\tr.push_back({wz[t[i]],i+m});\n\t}\n\tsort(r.begin(),r.end());\n\tfor(int i=0,j=0;i<r.size();i++){\n\t\tif(i==0||r[i].first!=r[i-1].first)j++;\n\t\tif(r[i].second<=m)s2[r[i].second]=j;\n\t\telse t2[r[i].second-m]=j;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tapr[s2[i]]=s[i];\n\t\tapr[t2[i]]=t[i];\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tk3=lca(apr[s2[i]],apr[t2[i]]);\n\t\tif(k3!=1){\n\t\t\tadd(root[F[k3][0]],s2[i],-1);\n\t\t\tadd(root[F[k3][0]],t2[i],-1);\n\t\t}\n\t\tadd(root[k3],s2[i],-1);\n\t\tadd(root[k3],t2[i],-1);\n\t\tadd(root[apr[s2[i]]],s2[i],1);\n\t\tadd(root[apr[s2[i]]],t2[i],1);\n\t\tadd(root[apr[t2[i]]],s2[i],1);\n\t\tadd(root[apr[t2[i]]],t2[i],1);\n\t}\n\tget_ans(1);\n\tans/=2;\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1683640338,
        "uid": 340819,
        "name": "cwfxlh",
        "ccfLevel": 5,
        "title": "P5327"
    },
    {
        "content": "\u7b80\u5355\u505a\u6cd5\uff1a\u6811\u5256\u4e00\u4e0b\uff0c\u6bcf\u6761\u8def\u5f84\u5212\u5206\u6210\u4e86\u5728 dfn \u4e0a $\\log$ \u6bb5\u533a\u95f4\u3002\n\n\u5728 $dfn\\times dfn$ \u5e73\u9762\u4e0a\uff0c$(x,y)$ \u7684\u503c\u4ee3\u8868 $dfn$ \u4e3a $x$ \u7684\u70b9\u662f\u5426\u80fd\u5230\u8fbe $dfn$ \u4e3a $y$ \u7684\u70b9\u3002\n\n\u90a3\u4e48\u7ed9\u5b9a\u4e00\u6761\u8def\u5f84\uff0c\u8fd9 $\\log$ \u6bb5\u4e24\u4e24\u7684\u7b1b\u5361\u5c14\u79ef\u90fd\u4f1a\u8986\u76d6\u4e0a $1$\uff0c\u4e5f\u5c31\u76f8\u5f53\u4e8e $\\log^2$ \u4e2a\u77e9\u5f62\u8986\u76d6\uff0c\u6700\u540e\u8981\u67e5\u8be2\u6bcf\u4e00\u884c\u975e\u96f6\u4f4d\u7f6e\u4e2a\u6570\uff0c\u626b\u63cf\u7ebf\u4e00\u4e0b\u590d\u6742\u5ea6\u5c31\u662f $\\mathcal{O}(n\\log^3n)$\uff0e\n\n\u7a0d\u5fae\u5361\u5361\u5e38\u6570\u751a\u81f3\u4e0d\u9700\u8981\u600e\u4e48\u5361\u5c31\u8fc7\u4e86\u3002\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<ctime>\n#define pb emplace_back\n#define mp std::make_pair\n#define fi first\n#define se second\n#define dbg(x) cerr<<\"In Line \"<< __LINE__<<\" the \"<<#x<<\" = \"<<x<<'\\n';\n#define dpi(x,y) cerr<<\"In Line \"<<__LINE__<<\" the \"<<#x<<\" = \"<<x<<\" ; \"<<\"the \"<<#y<<\" = \"<<y<<'\\n';\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int>pii;\ntypedef pair<ll,int>pli;\ntypedef pair<ll,ll>pll;\ntypedef vector<int>vi;\ntypedef vector<ll>vll;\ntypedef vector<pii>vpii;\ntemplate<typename T>T cmax(T &x, T y){return x=x>y?x:y;}\ntemplate<typename T>T cmin(T &x, T y){return x=x<y?x:y;}\ntemplate<typename T>\nT &read(T &r){\n\tr=0;bool w=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9')w=ch=='-'?1:0,ch=getchar();\n\twhile(ch>='0'&&ch<='9')r=r*10+(ch^48),ch=getchar();\n\treturn r=w?-r:r;\n}\ntemplate<typename T1,typename... T2>\nvoid read(T1 &x, T2& ...y){ read(x); read(y...); }\nconst int N=100010;\nint n,m,c[N];\n//hld \nint siz[N],dfn[N],top[N],dep[N],fa[N],dft,son[N];\nvi eg[N];\nvoid dfs1(int x,int f){\n\tfa[x]=f;siz[x]=1;dep[x]=dep[f]+1;\n\tfor(auto v:eg[x])if(v!=f){\n\t\tdfs1(v,x);\n\t\tsiz[x]+=siz[v];\n\t\tif(siz[v]>siz[son[x]])son[x]=v;\n\t}\n}\nvoid dfs2(int x,int t){\n\ttop[x]=t;dfn[x]=++dft;\n\tif(son[x])dfs2(son[x],t);\n\tfor(auto v:eg[x])if(v!=fa[x]&&v!=son[x]){\n\t\tdfs2(v,v);\n\t}\n}\n//Tree\nint lct;\nstruct Line{\n\tint l,r,h,v;\n\tbool operator<(const Line &y)const{\n\t\treturn h<y.h;\n\t}\n}li[N*300];\ninline void PushLine(int l,int r,int h,int v){\n\tc[l]++;c[r+1]--;\n\tli[++lct]={l,r,h,v};\n}\nint trct,mn[N<<1],mct[N<<1],tag[N<<1],ls[N<<1],rs[N<<1];\nint build(int l,int r){\n\tint x=++trct,mid=(l+r)>>1;mn[x]=0;mct[x]=r-l+1;\n\tif(l==r)return x;\n\tls[x]=build(l,mid);rs[x]=build(mid+1,r);\n\treturn x;\n}\ninline void pushup(int x){\n\tmn[x]=min(mn[ls[x]],mn[rs[x]]);mct[x]=0;\n\tif(mn[x]==mn[ls[x]])mct[x]+=mct[ls[x]];\n\tif(mn[x]==mn[rs[x]])mct[x]+=mct[rs[x]]; \n}\ninline void upd(int x,int v){\n\tmn[x]+=v;tag[x]+=v;\n}\ninline void pushdown(int x){\n\tif(tag[x]){\n\t\tupd(ls[x],tag[x]);\n\t\tupd(rs[x],tag[x]);\n\t\ttag[x]=0;\n\t}\n}\nvoid modify(int x,int tl,int tr,int l,int r,int v){\n\tif(tl>=l&&tr<=r){\n\t\tupd(x,v);\n\t\treturn ;\n\t}\n\tint mid=(tl+tr)>>1;\n\tpushdown(x);\n\tif(mid>=l)modify(ls[x],tl,mid,l,r,v);\n\tif(mid<r)modify(rs[x],mid+1,tr,l,r,v);\n\tpushup(x); \n}\nint query(int x,int tl,int tr,int l,int r){\n\tif(tl>=l&&tr<=r)return !mn[x]?mct[x]:0;\n\tint mid=(tl+tr)>>1,s=0;\n\tpushdown(x);\n\tif(mid>=l)s+=query(ls[x],tl,mid,l,r);\n\tif(mid<r)s+=query(rs[x],mid+1,tr,l,r);\n\tpushup(x);\n\treturn s;\n}\n//\nvoid qwdasd(int x,int y){\n\tvpii a;\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]]>dep[top[y]]){\n\t\t\ta.pb(mp(dfn[top[x]],dfn[x]));\n\t\t\tx=fa[top[x]];\n\t\t}\n\t\telse{\n\t\t\ta.pb(mp(dfn[top[y]],dfn[y]));\n\t\t\ty=fa[top[y]];\n\t\t}\n\t}\n\tif(dep[x]<=dep[y])a.pb(mp(dfn[x],dfn[y]));\n\telse a.pb(mp(dfn[y],dfn[x]));\n\tint len=a.size();\n\tfor(int i=0;i<len;i++)\n\t\tfor(int j=0;j<len;j++){\n\t\t\tif(a[i].fi>=a[j].se)continue;\n\t\t\tPushLine(a[i].fi,a[i].se,a[j].fi,1);\n\t\t\tif(a[j].se!=n)PushLine(a[i].fi,a[i].se,a[j].se+1,-1);\n\t\t}\n}\nsigned main(){\n\tread(n,m);\n\tfor(int i=1,u,v;i<n;i++){\n\t\tread(u,v);\n\t\teg[u].pb(v);eg[v].pb(u);\n\t}\n\tdfs1(1,0);\n\tdfs2(1,1);\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y;read(x,y);\n\t\tqwdasd(x,y);\n\t}\n\tsort(li+1,li+lct+1);\n\tbuild(1,n);\n\tint p=1;\n\tll ans=0;\n\tfor(int i=1;i<=n;i++){\n\t\twhile(p<=lct&&li[p].h==i){\n\t\t\tmodify(1,1,n,li[p].l,li[p].r,li[p].v);\n\t\t\t++p;\n\t\t}\n\t\tif(!mn[1]&&i>1)ans+=query(1,1,n,1,i-1);\n\t}\n\tcout << 1ll*n*(n-1)/2-ans << '\\n';\n    #ifdef do_while_true\n\t\tcerr<<'\\n'<<\"Time:\"<<clock()<<\" ms\"<<'\\n';\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1649145590,
        "uid": 223298,
        "name": "do_while_true",
        "ccfLevel": 8,
        "title": "\u300c\u9898\u89e3\u300d\u6d1b\u8c37 P5327 [ZJOI2019]\u8bed\u8a00"
    },
    {
        "content": "[[ZJOI2019]\u8bed\u8a00](https://www.luogu.com.cn/problem/P5327)\n\n\u865a\u6811 + \u6811\u4e0a\u5dee\u5206 + \u7ebf\u6bb5\u6811\u5408\u5e76\n\n\u9996\u5148\u5c06\u95ee\u9898\u62bd\u8c61\uff0c\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\u548c $m$ \u6761\u6811\u4e0a\u8def\u5f84\uff0c\u95ee\u6709\u591a\u5c11\u6709\u5e8f\u70b9\u5bf9 $(i,j)$ \u6ee1\u8db3\u8fd9\u4e24\u70b9\u81f3\u5c11\u88ab\u540c\u4e00\u6761\u8def\u5f84\u8986\u76d6\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u8f6c\u5316\u7684\u95ee\u9898\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6c42\u51fa\u8986\u76d6\u8be5\u70b9\u7684\u8def\u5f84\u5e76\u7684\u5927\u5c0f\u51cf\u4e00\uff0c\u52a0\u8d77\u6765\u9664\u4ee5\u4e8c\u5c31\u662f\u7b54\u6848\uff08\u5c06\u65e0\u5e8f\u70b9\u5bf9\u8f6c\u5316\u4e3a\u6709\u5e8f\u70b9\u5bf9\uff09\u3002\n\n\u7136\u540e\u89c2\u5bdf\u5230\u8986\u76d6\u8be5\u70b9\u7684\u94fe\u5e76\u4e00\u5b9a\u662f\u4e00\u4e2a\u4ee5\u8def\u5f84\u7aef\u70b9\u4e3a\u53f6\u5b50\u8282\u70b9\u7684\u751f\u6210\u6811\uff0c\u6839\u636e\u865a\u6811\u7684\u601d\u60f3\uff0c\u53ef\u4ee5\u4ee5\u8def\u5f84\u7aef\u70b9\u4e3a\u5173\u952e\u70b9\u5efa\u51fa\u4e00\u68f5\u6781\u5c0f\u8fde\u901a\u5b50\u6811\uff0c\u8fd9\u68f5\u6781\u5c0f\u8fde\u901a\u5b50\u6811\u7684\u5927\u5c0f\u5c31\u662f\u8def\u5f84\u5e76\u7684\u5927\u5c0f\uff0c\u800c\u6811\u4e0a\u7684\u8fb9\u6570\u7b49\u4e8e\u70b9\u6570\u51cf\u4e00\uff0c\u6240\u4ee5\u53ea\u8981\u6c42\u51fa\u8fd9\u68f5\u6781\u5c0f\u8fde\u901a\u5b50\u6811\u4e0a\u7684\u8fb9\u6570\u5c31\u53ef\u4ee5\u6c42\u51fa\u8be5\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u6709\u4e00\u4e2a\u7ecf\u5178\u7ed3\u8bba\uff0c\u5bf9\u4e8e\u4e00\u68f5\u6811\u4e0a\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\u96c6 $S$ \uff0c\u5c06\u5176\u4e2d\u7684\u5143\u7d20\u6309\u7167 dfs \u5e8f\u6392\u5e8f\u4e4b\u540e\u5f97\u5230\u4e00\u4e2a\u6709\u5e8f\u4e0d\u53ef\u91cd\u96c6\u5408 $S^\\prime=\\{a_1,a_2,a_3,\\dots,a_n\\}$ \uff0c\u6b64\u65f6\u8bbe\u8fd9\u4e9b\u70b9\u5728\u6811\u4e0a\u7684\u6781\u5c0f\u8fde\u901a\u5b50\u6811\u4e3a $T^\\prime=(V,E)$ \uff0c\u6709\uff1a\n\n$$|E|=\\dfrac{dis(a_1,a_2)+dis(a_2,a_3)+\\dots+dis(a_n,a_1)}{2}$$\n\n\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\u662f\u6b63\u786e\u7684\u5462\uff0c\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u5c31\u662f\u5728\u6309\u7167\u96c6\u5408\u4e2d\u70b9\u7684\u987a\u5e8f\u904d\u5386\u8fd9\u68f5\u6781\u5c0f\u8fde\u901a\u5b50\u6811\u65f6\u662f\u6309\u7167 dfs \u5e8f\u6765\u904d\u5386\u7684\uff0c\u6240\u4ee5\u6bcf\u6761\u8fb9\u90fd\u4f1a\u88ab\u7ecf\u8fc7\u6b63\u597d\u4e24\u6b21\uff0c\u6240\u4ee5\u9664\u4ee5\u4e8c\u4e4b\u540e\u5c31\u662f\u6781\u5c0f\u8fde\u901a\u5b50\u6811\u4e0a\u8fb9\u7684\u6570\u91cf\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u600e\u4e48\u7ef4\u62a4 $|E|$ \uff0c\u5bf9\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u4ee5 dfs \u5e8f\u4e3a\u4e0b\u6807\u5efa\u51fa\u4e00\u68f5\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e2a\u6709\u5e8f\u70b9\u96c6\uff0c\u7ebf\u6bb5\u6811\u7684\u53f6\u5b50\u8282\u70b9\u8868\u793a\u8be5 dfs \u5e8f\u5bf9\u5e94\u7684\u8282\u70b9\u662f\u5426\u5b58\u5728\u4e0e\u96c6\u5408\u5f53\u4e2d\uff0c\u800c\u5176\u4e0a\u7ea7\u8282\u70b9\u4fdd\u5b58\u8be5\u8282\u70b9\u5bf9\u5e94\u7684 dfs \u5e8f\u533a\u95f4\u4e2d\u7684\u70b9\u6784\u6210\u7684\u70b9\u96c6\u7684\u76f8\u90bb\u5143\u7d20\u4e4b\u95f4\u7684\u8def\u5f84\u548c\uff0c\u5408\u5e76\u4fe1\u606f\u540e\uff0c\u6700\u4e0a\u5c42\u7684\u8282\u70b9\u4fdd\u5b58\u7684\u4fe1\u606f\u5e94\u5f53\u662f $dis(a_1,a_2)+dis(a_2,a_3)+\\dots+dis(a_{n-1},a_n)$ \u3002\n\n\u7531\u4e8e\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e0a\u4f20\u4fe1\u606f\u65f6\u53ef\u4ee5\u770b\u4f5c\u4e24\u4e2a\u533a\u95f4\u7684\u5408\u5e76\uff0c\u5229\u7528\u5206\u6cbb\u7684\u601d\u60f3\u8003\u8651\u600e\u4e48\u5408\u5e76\u8fd9\u4e24\u4e2a\u533a\u95f4\u4ee3\u8868\u7684\u70b9\u96c6\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u7684\u533a\u95f4\u8bb0\u5f55\u5728\u8fd9\u4e2a\u533a\u95f4\u4e2d dfs \u5e8f\u6700\u5c0f\u548c\u6700\u5927\u7684\u5143\u7d20\uff0c\u5408\u5e76\u533a\u95f4\u65f6\u52a0\u4e0a\u5de6\u533a\u95f4\u4e2d dfs \u5e8f\u6700\u5927\u7684\u5143\u7d20\u548c\u53f3\u533a\u95f4\u4e2d dfs \u5e8f\u6700\u5c0f\u7684\u5143\u7d20\u4e4b\u95f4\u7684\u8ddd\u79bb\u5373\u53ef\uff0c\u53ef\u4ee5\u901a\u8fc7\u6c42 $\\text{lca}$ \u5b9e\u73b0\u3002\n\n\u89c2\u5bdf\u5230\u589e\u52a0\u4e00\u6761\u8def\u5f84\u9700\u8981\u4fee\u6539\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u7684\u7ebf\u6bb5\u6811\u7684\u4fe1\u606f\uff0c\u5982\u679c\u76f4\u63a5\u7ef4\u62a4\u90a3\u80af\u5b9a\u662f\u8981\u8d85\u65f6\u7684\uff0c\u53d1\u73b0\u9759\u6001\u7684\u201c\u589e\u52a0\u8def\u5f84\u201d\u662f\u53ef\u4ee5\u4f7f\u7528\u6811\u4e0a\u5dee\u5206\u7ef4\u62a4\u7684\uff0c\u90a3\u53c8\u600e\u4e48\u7ef4\u62a4\u8282\u70b9\u4e0a\u7ebf\u6bb5\u6811\u7684\u4fe1\u606f\u5462\uff1f\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u5373\u53ef\uff01\n\n\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u8fd9\u6837\u7684\u7b97\u6cd5\uff1a\n\n+ \u5bf9\u6811\u4e0a\u6bcf\u4e00\u4e2a\u8282\u70b9\u5efa\u4ee5 dfs \u5e8f\u4e3a\u4e0b\u6807\u7684\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u3002\n\n+ \u8bfb\u5165\u8def\u5f84\u7684\u4fe1\u606f\uff0c\u5dee\u5206\u7ef4\u62a4\u8def\u5f84\uff0c\u5177\u4f53\u64cd\u4f5c\u5c31\u662f\u5728\u8def\u5f84\u7aef\u70b9\u5bf9\u5e94\u6811\u4e0a\u8282\u70b9\u7684\u7ebf\u6bb5\u6811\u4e0a\u589e\u52a0\u8def\u5f84\u7aef\u70b9\u7684\u4fe1\u606f\uff0c\u5728\u8def\u5f84\u7aef\u70b9\u7684 $\\text{lca}$ \u548c $\\text{lca}$ \u7684\u7236\u4eb2\u5904\u5220\u53bb\u8def\u5f84\u7aef\u70b9\u7684\u4fe1\u606f\u3002\n\n+ \u5bf9\u6574\u68f5\u6811\u81ea\u5e95\u5411\u4e0a\u5730\u8fdb\u884c\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u901a\u8fc7\u7ebf\u6bb5\u6811\u4e0a\u4fdd\u5b58\u7684\u4fe1\u606f\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u5bf9\u5e94\u7684\u8def\u5f84\u5e76\u7684\u5927\u5c0f\uff0c\u8bb0\u5f97\u624b\u52a8\u52a0\u4e0a $dis(a_n,a_1)$ \uff0c\u5c06\u503c\u9664\u4ee5\u4e8c\u4e4b\u540e\u5f97\u5230 $|E|$ \u3002\n\n+ \u5c06\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684 $|E|$ \u52a0\u8d77\u6765\u9664\u4ee5\u4e8c\u5c31\u662f\u7b54\u6848\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u7684\u65f6\u5019\u6709\u4e00\u4e9b\u5c0f\u7ec6\u8282\uff0c\u6bd4\u5982 $\\text{lca}$ \u7684\u7236\u4eb2\u4e0d\u4e00\u5b9a\u5b58\u5728\uff0c\u4e0d\u80fd\u76f4\u63a5\u8fdb\u884c\u4fee\u6539\uff0c\u53ef\u4ee5\u5c06\u4fee\u6539\u4fe1\u606f\u901a\u8fc7 ```std::vector``` \u6302\u5728\u5bf9\u5e94\u7684\u8282\u70b9\u4e0a\uff0c\u5728\u5408\u5e76\u7684\u65f6\u5019\u8fdb\u884c\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u6c42 $\\text{lca}$ \u7684\u65f6\u5019\u4f7f\u7528 $\\mathcal{O(1)}$ \u7684 ST \u8868\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u81f3 $\\mathcal{O(n\\log n)}$ \u3002\n\n\u65e2\u7136\u4f60\u80fd\u627e\u5230\u8fd9\u9898\uff0c\u6211\u76f8\u4fe1\u4f60\u80fd\u77ac\u95f4\u505a\u51fa\u6765\u7684\u3002\n\n$Code:$\n\n```cpp\n#include<bits/stdc++.h>\ntypedef long long LL;\ntypedef long double LD;\nusing namespace std;\nconst LL N=100010,M=1000010,INF=0x3f3f3f3f;\ninline LL max(LL x,LL y){return x>y?x:y;}\ninline LL min(LL x,LL y){return x<y?x:y;}\ninline void swap(LL &x,LL &y){x^=y^=x^=y;}\nLL head[N],ver[M],Next[M],tot;\nLL n,m,t,num,ans,d[N],id[N],pre[N],f[N];\nLL top,cnt,rec[N<<7],root[N];\nLL ts,st[N<<2][20],in[N<<2],out[N<<2],lg[N<<2];\nvector<LL> del[N];\nvoid dfs1(LL x,LL fa);\nvoid dfs2(LL x,LL fa);\nLL lca(LL x,LL y);\nLL dis(LL x,LL y);\nvoid add(LL x,LL y){\n\tver[++tot]=y,Next[tot]=head[x],head[x]=tot;\n}\nstruct SegmentTree{\n\tLL l,r;\n\tLL mn,mx,sum,dat;\n\t#define l(x) tree[x].l\n\t#define r(x) tree[x].r\n\t#define mn(x) tree[x].mn\n\t#define mx(x) tree[x].mx\n\t#define sum(x) tree[x].sum\n\t#define dat(x) tree[x].dat\n}tree[N<<7];\nLL build(){\n\tLL p=cnt?rec[cnt--]:++top;\n\tl(p)=r(p)=mn(p)=mx(p)=0;\n\tdat(p)=sum(p)=0;\n\treturn p;\n}\nvoid recycle(LL p){\n\trec[++cnt]=p;\n\tl(p)=r(p)=mn(p)=mx(p)=0;\n\tdat(p)=sum(p)=0;\n}\nvoid pushup(LL p){\n\tmn(p)=mn(l(p))?mn(l(p)):mn(r(p));\n\tmx(p)=mx(r(p))?mx(r(p)):mx(l(p));\n\tsum(p)=sum(l(p))+sum(r(p));\n\tif(mx(l(p))&&mn(r(p)))\n\t\tsum(p)+=dis(pre[mx(l(p))],pre[mn(r(p))]);\n}\nvoid insert(LL p,LL l,LL r,LL pos,LL val){\n\tif(l==r){\n\t\tdat(p)+=val;sum(p)=0;\n\t\tmn(p)=mx(p)=(dat(p)>0)?l:0;\n\t\treturn;\n\t}\n\tLL mid=(l+r)>>1;\n\tif(pos<=mid){\n\t\tif(!l(p))l(p)=build();\n\t\tinsert(l(p),l,mid,pos,val);\n\t}\n\tif(pos>mid){\n\t\tif(!r(p))r(p)=build();\n\t\tinsert(r(p),mid+1,r,pos,val);\n\t}\n\tpushup(p);\n}\nLL merge(LL p,LL q,LL l,LL r){\n\tif(!p||!q)return p+q;\n\tif(l==r){\n\t\tdat(p)+=dat(q);sum(p)=0;\n\t\tmn(p)=mx(p)=(dat(p)>0)?l:0;\n\t\treturn p;\n\t}\n\tLL mid=(l+r)>>1;\n\tl(p)=merge(l(p),l(q),l,mid);\n\tr(p)=merge(r(p),r(q),mid+1,r);\n\tpushup(p),recycle(q);\n\treturn p;\n}\nvoid dfs1(LL x,LL fa){\n\td[x]=d[fa]+1;id[x]=++num;\n\tpre[id[x]]=x;root[x]=build();\n\tin[x]=++ts;st[ts][0]=x;\n\tfor(LL i=head[x];i;i=Next[i]){\n\t\tLL y=ver[i];\n\t\tif(y==fa)continue;\n\t\tf[y]=x;\n\t\tdfs1(y,x);\n\t}\n\tout[x]=++ts;\n\tif(fa)st[ts][0]=fa;\n}\nvoid dfs2(LL x,LL fa){\n\tfor(LL i=head[x];i;i=Next[i]){\n\t\tLL y=ver[i];\n\t\tif(y==fa)continue;\n\t\tdfs2(y,x);\n\t\tmerge(root[x],root[y],1,n);\n\t}\n\tfor(LL i:del[x])insert(root[x],1,n,id[i],-1);\n\tif(mn(root[x])&&mx(root[x])&&mn(root[x])!=mx(root[x])){\n\t\tLL u=pre[mn(root[x])],v=pre[mx(root[x])];\n\t\tans+=(dis(u,v)+sum(root[x]))/2;\n\t}\n}\nvoid init(){\n\tfor(LL i=2;i<=N<<1;i++)lg[i]=lg[i>>1]+1;\n\tfor(LL j=1;(1<<j)<=ts;j++)\n\t\tfor(LL i=1;i+(1<<j)-1<=ts;i++){\n\t\t\tLL x=st[i][j-1],y=st[i+(1<<(j-1))][j-1];\n\t\t\tst[i][j]=(d[x]<d[y])?x:y;\n\t\t}\n}\nLL lca(LL x,LL y){\n\tLL l=in[x],r=in[y];\n\tif(l>r)swap(l,r);LL Lg=lg[r-l+1];\n\treturn d[st[l][Lg]]<d[st[r-(1<<Lg)+1][Lg]]?st[l][Lg]:st[r-(1<<Lg)+1][Lg];\n}\nLL dis(LL x,LL y){\n\treturn d[x]+d[y]-2*d[lca(x,y)];\n}\nint main(){\n\tscanf(\"%lld%lld\",&n,&m);\n\tt=(LL)(log(n)/log(2))+1;\n\tfor(LL i=1;i<n;i++){\n\t\tLL x,y;\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\tadd(x,y),add(y,x);\n\t}\n\tdfs1(1,0);\n\tinit();\n\twhile(m--){\n\t\tLL x,y;\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\tLL l=lca(x,y),fa=f[l];\n\t\tinsert(root[x],1,n,id[x],1);insert(root[x],1,n,id[y],1);\n\t\tinsert(root[y],1,n,id[x],1);insert(root[y],1,n,id[y],1);\n\t\tdel[l].push_back(x),del[fa].push_back(x);\n\t\tdel[l].push_back(y),del[fa].push_back(y);\n\t}\n\tdfs2(1,0);\n\tprintf(\"%lld\\n\",ans/2);\n\treturn 0;\n}\n```\n",
        "postTime": 1616079311,
        "uid": 137242,
        "name": "Dia\u043esi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5327 \u3010[ZJOI2019]\u8bed\u8a00\u3011"
    },
    {
        "content": "\u7adf\u7136\u6ca1\u6709\u8f7b\u91cd\u94fe\u5256\u5206+\u5e8f\u5217\u5dee\u5206\u626b\u63cf\u7ebf+\u865a\u6811\u7684\u505a\u6cd5\u3002\n\n\u679a\u4e3e\u6bcf\u4e2a\u70b9\u80fd\u5230\u8fbe\u7684\u70b9\u3002\u53d1\u73b0\u5c31\u662f\u5305\u542b\u8fd9\u4e2a\u70b9\u6240\u6709\u7684 $s\\rightarrow t$ \u7684\u5e76\u7684\u70b9\u6570\u518d\u51cf\u53bb\u81ea\u5df1\u3002\n\n\u56e0\u4e3a\u8fd9\u4e9b\u94fe\u90fd\u7ecf\u8fc7\u540c\u4e00\u70b9\uff0c\u90a3\u4e48\u4ed6\u4eec\u7684\u5e76\u81ea\u7136\u5c31\u662f\u4e00\u68f5\u8fde\u901a\u5b50\u56fe\uff08\u6811\uff09\u4e86\u3002\n\n\u5148\u8003\u8651\u5982\u4f55\u6c42\u51fa\u5305\u542b\u8be5\u70b9\u7684\u94fe\u3002\u6211\u4eec\u5229\u7528\u8f7b\u91cd\u94fe\u5256\u5206\u5c06\u94fe\u5212\u4e3a $O(\\log n)$ \u4e2a\u533a\u95f4\uff0c\u7136\u540e\u53d8\u4e3a\u5728\u5e8f\u5217\u4e0a\u4e00\u4e2a\u533a\u95f4\u4e2d\u52a0\u5165\u8be5\u94fe\u7684\u4fe1\u606f\u3002\u4f7f\u7528\u5dee\u5206\uff0c\u76f4\u63a5\u626b\u63cf\u7ebf\u3002\u8fd9\u4e2a\u662f \u96e8\u5929\u7684\u5c3e\u5df4  \u91cc\u9762\u7684 tirck\u3002\n\n\u6240\u4ee5\u73b0\u5728\u7684\u4efb\u52a1\u662f\uff1a\n\n\u7ef4\u62a4\u70b9\u96c6\uff0c\u652f\u6301\u63d2\u5165\u3001\u5220\u9664\u70b9\uff08\u5c31\u662f\u94fe\u7684\u4e24\u7aef\u70b9 $s,t$\uff09\uff0c\u6c42\u96c6\u5408\u4e2d\u70b9\u5f62\u6210\u7684\u6781\u5c0f\u8fde\u901a\u5b50\u6811\u7684\u70b9\u6570 $-1$\u3002\n\n\u6709\u8da3\u7684\u662f\uff0c\u70b9\u6570 $-1$ \u5c31\u662f\u8fb9\u6570\u3002\u90a3\u4e48\u8fd9\u4e2a\u5c31\u5b8c\u5168\u662f [SDOI2015]\u5bfb\u5b9d\u6e38\u620f \u4e86\u3002\n\n\u6211\u4eec\u5c06\u70b9\u6309\u7167 dfn \u6392\u5e8f\uff0c\u770b\u4f5c\u4e00\u4e2a\u73af\u3002\u7b54\u6848\u5c31\u662f\u6240\u6709\u76f8\u90bb\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e4b\u548c\u7684\u4e00\u534a\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u7528 set $O(\\log n)$ \u8f7b\u677e\u5b8c\u6210\u3002\u4e0d\u8fc7\u63d2\u5165\u7684\u70b9\u53ef\u80fd\u6709\u91cd\u590d\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u4e00\u4e2a multiset \u8f85\u52a9\u3002\n\n\u8f7b\u91cd\u94fe\u5256\u5206\u5171\u9020\u6210\u4e86 $O(n\\log n)$ \u6b21\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log ^2  n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define x first\n#define y second\n#define ll long long\nusing namespace std;\nstruct node\n{\n\tint x,nxt;\n}a[200005];\nint h[100005];\nint cnt;\nint size[100005],f[100005],d[100005],son[100005];\nint top[100005],dfn[100005];\nint dcnt;\nvector<pair<int,bool> > q[100005];\npair<int,int> c[100005];\nvoid add(int x,int y)\n{\n\ta[++cnt].x=y;\n\ta[cnt].nxt=h[x];\n\th[x]=cnt;\n}\nvoid dfs1(int x,int deep,int fa)\n{\n\tsize[x]=1,f[x]=fa,d[x]=deep;\n\tfor(int i=h[x],y;i;i=a[i].nxt)\n\t\tif((y=a[i].x)!=fa)\n\t\t{\n\t\t\tdfs1(y,deep+1,x);\n\t\t\tsize[x]+=size[y];\n\t\t\tif(size[son[x]]<=size[y])\n\t\t\t\tson[x]=y;\n\t\t}\n}\nvoid dfs2(int x,int t)\n{\n\ttop[x]=t;\n\tdfn[x]=++dcnt;\n\tif(!son[x]) return;\n\tdfs2(son[x],t);\n\tfor(int i=h[x],y;i;i=a[i].nxt)\n\t{\n\t\ty=a[i].x;\n\t\tif(y==f[x]||y==son[x]) continue;\n\t\tdfs2(y,y);\n\t}\n}\nvoid add_ar(int l,int r,int x)\n{\n\tq[l].push_back({x,1});\n\tq[r+1].push_back({x,0});\n}\nvoid add(int x,int y,int id)\n{\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(d[top[x]]<d[top[y]]) swap(x,y);\n\t\tadd_ar(dfn[top[x]],dfn[x],id);\t\n\t\tx=f[top[x]];\n\t}\n\tif(d[x]>d[y]) swap(x,y);\n\tadd_ar(dfn[x],dfn[y],id);\n}\nint asklca(int x,int y)\n{\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(d[top[x]]<d[top[y]]) swap(x,y);\n\t\tx=f[top[x]];\n\t\t//cout<<x<<endl;\n\t}\n\treturn d[x]<d[y]?x:y;\n}\nint asklen(int x,int y)\n{\n\treturn (!x||!y)?0:d[x]+d[y]-d[asklca(x,y)]*2;\n}\nstruct node_set\n{\n\tset<pair<int,int> > t;\n\tmultiset<int> f;\n\tint sum;\n\tnode_set()\n\t{\n\t\tt.insert({-2e9,0});\n\t\tt.insert({2e9,0});\n\t}\n\tint val(int x)\n\t{\n\t\tint w1=(--t.lower_bound({dfn[x],x}))->second,w2=t.upper_bound({dfn[x],x})->second;\n\t\treturn asklen(w1,x)+asklen(w2,x)-asklen(w1,w2);\n\t}\n\tvoid insert(int x)\n\t{\n\t\t//cout<<\"insert \"<<x<<endl;\n\t\tif(f.find(x)==f.end())\n\t\t\tsum+=val(x),t.insert({dfn[x],x});\n\t\tf.insert(x);\n\t}\n\tvoid erase(int x)\n\t{\n\t\t//cout<<\"erase \"<<x<<endl;\n\t\tf.erase(f.find(x));\n\t\tif(f.find(x)==f.end())\n\t\t\tsum-=val(x),t.erase({dfn[x],x});\n\t}\n\tint ask()\n\t{\n\t\treturn (sum+asklen((++t.begin())->second,(--(--t.end()))->second))/2;\n\t}\n}t;\nint main()\n{\n\tint n,m,x,y,i,j;\n\tll sum=0;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y),add(y,x);\n\t}\n\tdfs1(1,1,0),dfs2(1,1);\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&c[i].x,&c[i].y);\n\t\tadd(c[i].x,c[i].y,i);\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tfor(j=0;j<q[i].size();j++)\n\t\t\tif(q[i][j].second)\n\t\t\t\tt.insert(c[q[i][j].first].x),\n\t\t\t\tt.insert(c[q[i][j].first].y);\n\t\t\telse\n\t\t\t\tt.erase(c[q[i][j].first].x),\n\t\t\t\tt.erase(c[q[i][j].first].y);\n\t\tsum+=t.ask();\n\t}\n\tcout<<sum/2;\n}\n```\n",
        "postTime": 1634957394,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5327 [ZJOI2019]\u8bed\u8a00"
    },
    {
        "content": "[\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/solution/P5327)\n\n[\u66f4\u597d\u7684\u9605\u8bfb](https://www.cnblogs.com/yzhang-rp-inf/p/11223298.html)\n\n\u770b\u5230\u8fd9\u79cd\u6811\u4e0a\u7edf\u8ba1\u70b9\u5bf9\u4e2a\u6570\u7684\u9898\u4e00\u822c\u662f\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u8fd9\u9898\u4e5f\u4e0d\u51fa\u610f\u5916\n\n\u5148\u5bf9\u8fd9\u68f5\u6811\u8fdb\u884c\u6811\u5256\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u666e\u53ca\u8bed\u8a00\uff0c\u5728$x\uff0cy$\u4e24\u70b9\u7684\u7ebf\u6bb5\u6811\u4e0a\u7684$x\uff0cy$\u4e24\u4f4d\u7f6e\u6253$+1$\u6807\u8bb0\uff0c\u5728\u70b9$fa[lca(x,y)]$\u7684\u7ebf\u6bb5\u6811\u4e0a$x\uff0cy$\u4e24\u4f4d\u7f6e\u6253$-2$\u6807\u8bb0\n\n\u7ebf\u6bb5\u6811\u4e2d\u8be5\u7ef4\u62a4\u4e09\u4e2a\u4e1c\u897f\uff1a\n\n1.dfs\u5e8f\u6700\u5c0f\u7684$lp$ \n\n2.dfs\u5e8f\u6700\u5927\u7684$rp$ \n\n3.\u7ebf\u6bb5\u6811\u4e2d\u6240\u6709\u88ab\u6253\u6807\u673a\u7684\u70b9\u5230\u6839\u8282\u70b9\u8def\u5f84\u7684\u5e76\u7684\u8282\u70b9\u4e2a\u6570$sum$\n\n\u6211\u4eec\u8fdb\u884c\u641c\u7d22\u5e76\u4ece\u4e0b\u5411\u4e0a\u7684\u8fdb\u884c\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f\u8be5\u8282\u70b9\u7ebf\u6bb5\u6811\u7684\u6839\u8282\u70b9\u7684$sum-dep[lca(lp,rp)]+1-1$\uff08\u73c2\u4ee5\u753b\u56fe\u7406\u89e3\u4e00\u4e0b\uff09\n\n\u4ea4\u4e0a\u53bb\uff0c\u53d1\u73b0wa\u4e86\uff0c\u56e0\u4e3a\u6bcf\u6761\u8def\u5f84\u7684\u8d21\u732e\u88ab\u6211\u4eec\u7b97\u4e86$2$\u6b21\uff0c\u6240\u4ee5\u9664\u4ee52\u5373\u53ef\n\n```cpp\n#include <bits/stdc++.h>\n#define N 100005 \n#define ll long long \n#define getchar nc\nusing namespace std;\ninline char nc(){\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\ninline int read()\n{\n    register int x=0,f=1;register char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n    return x*f;\n}\ninline void write(register ll x)\n{\n    if(!x)putchar('0');if(x<0)x=-x,putchar('-');\n    static int sta[20];register int tot=0;\n    while(x)sta[tot++]=x%10,x/=10;\n    while(tot)putchar(sta[--tot]+48);\n}\nint n,m;\nll ans;\nstruct edge{\n    int to,next;\n}e[N<<1];\nint head[N],cnt=0;\ninline void add(register int u,register int v)\n{\n    e[++cnt]=(edge){v,head[u]};\n    head[u]=cnt;\n}\nint size[N],fa[N],son[N],dep[N],top[N],dfn[N],tim,idfn[N];\ninline void dfs1(register int x)\n{\n    size[x]=1;\n    for(register int i=head[x];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(v==fa[x])\n            continue;\n        dep[v]=dep[x]+1;\n        fa[v]=x;\n        dfs1(v);\n        size[x]+=size[v];\n        if(size[v]>size[son[x]])\n            son[x]=v;\n    }\n}\ninline void dfs2(register int x,register int t)\n{\n    dfn[x]=++tim;\n    idfn[tim]=x;\n    top[x]=t;\n    if(son[x])\n        dfs2(son[x],t);\n    for(register int i=head[x];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(v!=fa[x]&&v!=son[x])\n            dfs2(v,v);\n    }\n}\ninline int getlca(register int x,register int y)\n{\n    int fx=top[x],fy=top[y];\n    while(fx!=fy)\n    {\n        if(dep[fx]<dep[fy])\n        {\n            x^=y^=x^=y;\n            fx^=fy^=fx^=fy;\n        }\n        x=fa[fx];\n        fx=top[x];\n    }\n    return dep[x]<dep[y]?x:y;\n}\nint root[N],tot;\nstruct node{\n    int ls,rs,cnt,lp,rp,sum;\n}tr[N*60];\ninline void pushup(register int x)\n{\n    tr[x].lp=tr[tr[x].ls].lp?tr[tr[x].ls].lp:tr[tr[x].rs].lp;\n    tr[x].rp=tr[tr[x].rs].rp?tr[tr[x].rs].rp:tr[tr[x].ls].rp;\n    tr[x].sum=tr[tr[x].ls].sum+tr[tr[x].rs].sum;\n    if(tr[tr[x].ls].rp&&tr[tr[x].rs].lp)\n        tr[x].sum-=dep[getlca(tr[tr[x].ls].rp,tr[tr[x].rs].lp)];\n}\ninline void modify(register int &x,register int l,register int r,register int pos,register int val)\n{\n    if(!x)\n        x=++tot;\n    if(l==r)\n    {\n        tr[x].cnt+=val;\n        if(tr[x].cnt)\n            tr[x].lp=tr[x].rp=pos,tr[x].sum=dep[pos];\n        else\n            tr[x].lp=tr[x].rp=tr[x].sum=0;\n        return;\n    }\n    int mid=l+r>>1;\n    if(dfn[pos]<=mid)\n        modify(tr[x].ls,l,mid,pos,val);\n    else\n        modify(tr[x].rs,mid+1,r,pos,val);\n    pushup(x);\n}\ninline void merge(register int &a,register int b,register int l,register int r)\n{\n    if(!a||!b)\n    {\n        a=a+b;\n        return;\n    }\n    if(l==r)\n    {\n        tr[a].cnt+=tr[b].cnt;\n        if(tr[a].cnt)\n            tr[a].lp=tr[a].rp=idfn[l],tr[a].sum=dep[idfn[l]];\n        else\n            tr[a].lp=tr[a].rp=tr[a].sum=0;\n        return;\n    }\n    int mid=l+r>>1;\n    merge(tr[a].ls,tr[b].ls,l,mid);\n    merge(tr[a].rs,tr[b].rs,mid+1,r);\n    pushup(a);\n}\ninline void dfs(register int x)\n{\n    for(register int i=head[x];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(v==fa[x])\n            continue;\n        dfs(v);\n        merge(root[x],root[v],1,tim);\n    }\n    if(tr[root[x]].lp&&tr[root[x]].rp)\n        ans+=tr[root[x]].sum-dep[getlca(tr[root[x]].lp,tr[root[x]].rp)];\n}\nint main()\n{\n    n=read(),m=read();\n    for(register int i=1;i<n;++i)\n    {\n        int u=read(),v=read();\n        add(u,v),add(v,u);\n    }\n    dfs1(1);\n    dfs2(1,0);\n    for(register int i=1;i<=m;++i)\n    {\n        int x=read(),y=read();\n        int lca=getlca(x,y);\n        modify(root[x],1,tim,x,1);\n        modify(root[x],1,tim,y,1);\n        modify(root[y],1,tim,x,1);\n        modify(root[y],1,tim,y,1);\n        if(lca>1)\n        {\n            modify(root[fa[lca]],1,tim,x,-2);\n            modify(root[fa[lca]],1,tim,y,-2);\n        }\n    }\n    dfs(1);\n    write(ans>>1);\n    return 0;\n}\n```",
        "postTime": 1563721896,
        "uid": 37881,
        "name": "yzhang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5327 \u3010[ZJOI2019]\u8bed\u8a00\u3011"
    },
    {
        "content": "[P5327 [ZJOI2019]\u8bed\u8a00](https://www.luogu.com.cn/problem/P5327) \n\n\u7ebf\u6bb5\u6811\u5408\u5e76 + \u70b9\u5206\u6cbb\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log^2n)$\u3002\n\n\u8c8c\u4f3c\u9898\u89e3\u533a\u91cc\u6ca1\u6709\u70b9\u5206\u6cbb\u7684\u505a\u6cd5\uff0c\u90a3\u5c31\u4ea4\u4e00\u53d1\u70b9\u5206\u6cbb\u3002\n\n\u9996\u5148\u5c06\u94fe\u5206\u522b\u6302\u5728\u4e24\u4e2a\u7aef\u70b9\u7684 ```vector``` \u4e0a\u3002\n\n\u9009\u53d6\u4e86\u5206\u6cbb\u4e2d\u5fc3\u540e\uff0c\u5bf9\u4e2d\u5fc3\u5bf9\u5e94\u7684\u6811\u6c42\u4e00\u904d\u4e3b\u5e2d\u6811\uff0c\u8ba9\u6bcf\u4e2a\u8282\u70b9 $u$ \u4e0a\u90fd\u6302\u6709\u4e00\u9897\u88c5\u7740\u524d\u7f00\u94fe\u4e0a\u6240\u6709\u70b9\u7684\u7ebf\u6bb5\u6811\uff0c\u8bbe\u7ebf\u6bb5\u6811\u6839\u4e3a $rt1(u)$\u3002\n\n\u4e2d\u5fc3\u4e0b\u6302\u7740\u82e5\u5e72\u4e2a\u5b50\u6811\uff0c\u5bf9\u4e0d\u540c\u5b50\u6811\u7684\u8282\u70b9\u67d3\u4e0d\u540c\u8272\uff08$col(u)$\uff09\uff0c\u4e2d\u5fc3\u4e5f\u67d3\u4e0a\u4e0d\u540c\u7684\u8272\u3002\n\n\u7136\u540e\u5bf9\u6bcf\u4e00\u9897\u5b50\u6811\u5206\u522b\u5904\u7406\u548c\u7edf\u8ba1\u7b54\u6848\uff0c\u65b9\u6cd5\u662f\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u5b83\u901a\u8fc7\u5206\u6cbb\u4e2d\u5fc3\u6240\u80fd\u5230\u8fbe\u7684\u8282\u70b9\u7684\u96c6\u5408\uff08\u8fd9\u4ecd\u7136\u662f\u4e00\u9897\u7ebf\u6bb5\u6811\uff09\uff0c\u8bb0\u4e3a $rt2(u)$\u3002\n\n\u5728\u67d0\u4e00\u9897\u5b50\u6811\u5185\u65f6\uff0c\u82e5\u67d0\u8282\u70b9 $u$ \u4e0a\u6709\u8df3\u51fa\u8fd9\u9897\u5b50\u6811\u7684\u94fe $(u,v)$\uff0c\u4e5f\u5373 $col(u)\\neq col(v)$\uff0c\u8bf4\u660e $rt1(v)$ \u8fd9\u4e00\u6761\u524d\u7f00\u94fe\u4e0a\u7684\u6240\u6709\u70b9\uff08\u5305\u62ec\u5206\u6cbb\u4e2d\u5fc3\uff09\u90fd\u662f $u$ \u901a\u8fc7\u5206\u6cbb\u4e2d\u5fc3\u80fd\u5230\u8fbe\u7684\uff0c\u6240\u4ee5\u8ba9 $rt2(u):=\\text{merge}(rt2(u),rt1(v))$\u3002\n\n\u8282\u70b9 $u$ \u4e0a\u8df3\u51fa\u8fd9\u4e2a\u5b50\u6811\u7684\u94fe $(u,v)$ \u4f1a\u88ab\u5206\u6cbb\u4e2d\u5fc3\u622a\u65ad\uff0c\u4e0d\u59a8\u8bbe\u8fd9\u9897\u5b50\u6811\u7684\u6839\u662f $top$\uff0c\u5219\u9700\u8981\u5c06\u8fd9\u6761\u94fe\u4fee\u6539\u4e3a $(u,top)$\uff0c\u8bb0\u4f4f\u5728 $top$ \u7684 ```vector``` \u4e0a\u4e5f\u9700\u8981\u52a0\u5165\u4e00\u6761\u94fe $(top,u)$\u3002\n\n\u5176\u6b21 $u$ \u7684\u5b50\u8282\u70b9\u901a\u8fc7\u5206\u6cbb\u4e2d\u5fc3\u6240\u80fd\u5230\u8fbe\u7684\u8282\u70b9\u4e5f\u4e00\u5b9a\u662f $u$ \u80fd\u5230\u7684\uff0c\u6545\u9012\u5f52\u5904\u7406\u5b8c\u5b50\u8282\u70b9 $w$ \u540e\uff0c\u8ba9 $rt2(u)=\\text{merge}(rt2(u), rt2(w))$\u3002\n\n\u7136\u540e\u5c06 $size(rt2(u))$ \u52a0\u5165\u6700\u7ec8\u7b54\u6848\u3002\n\n\u5904\u7406\u5b8c\u5206\u6cbb\u4e2d\u5fc3\u7684\u6bcf\u9897\u5b50\u6811\u540e\uff0c\u8fd8\u8981\u8bb0\u5f97\u6c42\u51fa\u5206\u6cbb\u4e2d\u5fc3\u6240\u80fd\u5230\u8fbe\u7684\u8282\u70b9\uff08\u6ce8\u610f\u5230\u81ea\u8eab\u7684\u8d21\u732e\u8981\u51cf\u53bb\uff0c\u82e5\u6709\u7684\u8bdd\uff09\u5e76\u628a\u8d21\u732e\u52a0\u5165\u5230\u6700\u7ec8\u7b54\u6848\u3002\n\n\u70b9\u5206\u6cbb\u7ed3\u675f\u540e\u8f93\u51fa\u7b54\u6848\u65f6\u8981\u5c06\u7b54\u6848\u9664 $2$\u3002 \n\n\u6bcf\u4e00\u6761\u94fe\u81f3\u591a\u88ab\u904d\u5386 $O(\\log n)$ \u6b21\uff0c\u6bcf\u6761\u94fe\u88ab\u622a\u65ad\u65f6\u81f3\u591a\u5728 $top$ \u4e0a\u4ea7\u751f $1$ \u6761\u65b0\u94fe\uff0c\u6bcf\u6761\u94fe\u7684\u622a\u65ad\u6b21\u6570\u4e3a $O(\\log n)$\uff0c\u6240\u4ee5\u5bf9\u94fe\u904d\u5386\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m\\log^2 n)$\uff0c\u5f53\u7136\u8fd9\u4e2a\u754c\u8fdc\u8fdc\u8fbe\u4e0d\u5230\u3002\n\n\u5bf9\u4e8e\u5206\u6cbb\u7684\u6bcf\u4e00\u5c42\uff0c\u82e5\u8fd9\u4e00\u5c42\u7684\u5927\u5c0f\u4e3a $s$\uff0c\u5219\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(s\\log s)$\uff0c\u4e8e\u662f\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log^2 n)$\u3002 \n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <string.h>\n#include <iostream>\n#include <assert.h>\n#include <vector>\nusing namespace std;\n\n#define re register\n#define sf scanf\n#define pf printf\n#define nl() putchar('\\n')\n#define ms(x, val) memset(x, val, sizeof(x))\n#define ll long long\n#define db double\n#define ull unsigned long long\n#define _for(i, a, b) for(re int i = (a); i < (b); ++i)\n#define _rfor(i, a, b) for(re int i = (a); i <= (b); ++i)\n#define _fev(p, u) for(re int p = head[u]; p; p = nex[p])\n#define inf 0x7fffffff\n#define maxn 100005\n#define maxnn (maxn*120) \n#define mod 1000000007ll\n\ntemplate <class T>\nvoid print(string name, T arr[], int n, int flag = 1){\n\tcout<<name<<\":\";\n\t_for(i, 0, n)cout<<\" \"<<arr[i+flag];\n\tcout<<endl;\n}\n\nint rdnt(){\n\tre int x = 0, sign = 1;\n\tre char c = getchar();\n\twhile (c < '0' || c > '9') { if (c == '-') sign = -1; c = getchar(); }\n\twhile (c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (c ^ 48), c = getchar();\n\treturn x * sign;\n}\n\ninline void uad(int &x, const int &y){ if ((x+=y)>=mod) x-=mod; }\ntemplate<class T>\ninline void umx(T &x, const T &y){ if (y > x) x = y; }\ntemplate<class T>\ninline void umi(T &x, const T &y){ if (y < x) x = y; }\n\nll ans = 0;\n\nint seg_ncnt, rg, epw[maxn], one[maxn];\nstruct Seg{ int lc, rc, sz, hsh; } seg[maxnn];\n#define lc(x) seg[x].lc\n#define rc(x) seg[x].rc\n#define sz(x) seg[x].sz\n#define hsh(x) seg[x].hsh\n\nint max_seg = 0;\nint new_node(re int nn){\n\tassert(seg_ncnt+1 < maxnn);\n\tumx(max_seg, seg_ncnt);\n\tre int x = ++seg_ncnt;\n\tseg[x] = seg[nn];\n\treturn x;\n}\n\ninline void ud(re int x, re int len){\n\tsz(x) = sz(lc(x)) + sz(rc(x));\n\thsh(x) = (hsh(lc(x))+(ll)hsh(rc(x))*epw[len]%mod)%mod;\n}\n\nvoid adn(int x, int &y, int p, int tl, int tr){\n\ty = new_node(x);\n\tif (tl == tr){ sz(y) = 1; hsh(y) = 1; return; }\n\tint mi = (tl+tr)>>1;\n\tif (p <= mi) adn(lc(x), lc(y), p, tl, mi);\n\telse adn(rc(x), rc(y), p, mi+1, tr);\n\tud(y, mi-tl+1); \n}\n\nvoid merge(int &z, int x, int y, int tl, int tr){\n\tif (!x || !y){ z = x+y; return; }\n\tif ((hsh(x) == hsh(y) && sz(x) == sz(y)) || sz(x) == tr-tl+1){ z = x; return; }\n\tif (sz(y) == tr-tl+1){ z = y; return; }\n\tassert(tl < tr);\n\tint mi = (tl+tr)>>1;\n\tz = new_node(0);\n\tmerge(lc(z), lc(x), lc(y), tl, mi);\n\tmerge(rc(z), rc(x), rc(y), mi+1, tr);\n\tud(z, mi-tl+1);\t\n}\n\nint ecnt = 1, icnt = 0,\n\thead[maxn],\n\tto[maxn*2],\n\tnex[maxn*2],\n\tcol[maxn],\n\trt1[maxn],\n\trt2[maxn],\n\tid[maxn],\n\tson[maxn],\n\tsz[maxn];\nbool vis[maxn];\nvector<int> adj[maxn];\n\nvoid add_edge(re int u, re int v){\n\tto[++ecnt] = v; nex[ecnt] = head[u]; head[u] = ecnt;\n\tto[++ecnt] = u; nex[ecnt] = head[v]; head[v] = ecnt;\n}\n\nvoid get_son(int u, int fa){\n\tsz[u] = 1; son[u] = 0; rt1[u] = rt2[u] = 0; id[u] = ++icnt;\n\t_fev(p, u){\n\t\tint v = to[p];\n\t\tif (vis[v] || v == fa) continue;\n\t\tget_son(v, u);\n\t\tsz[u] += sz[v];\n\t\tif (!son[u] || sz[v] > sz[son[u]]) son[u] = v;\n\t}\n}\n\nint get_centroid(re int u){\n\tif (!son[u]) return u;\n\tre int S = sz[u], v;\n\twhile(sz[v = son[u]]*2 > S) u = v;\n\treturn u;\n}\n\nvoid get_cmt(int u, int c, int fa){\n\tcol[u] = c;\n\tadn(rt1[fa], rt1[u], id[u], 1, rg);\n\t_fev(p, u){\n\t\tint v = to[p];\n\t\tif (vis[v] || v == fa) continue;\n\t\tget_cmt(v, c, u);\n\t}\n}\n\nvoid get_ans(int u, int top, int fa){\n\tstatic bool yes[maxn], flag; static int stk[maxn], tp;\n\ttp = 0; flag = false;\n\tfor(auto &v : adj[u]){\n\t\tif (col[v] != col[u]){\n\t\t\tmerge(rt2[u], rt2[u], rt1[v], 1, rg);\n\t\t\tv = top;\n\t\t\tflag = true;\n\t\t}\n\t\tif (!yes[v] && v != u) stk[tp++] = v, yes[v] = true;\n\t}\n\tadj[u].clear();\n\twhile(tp) adj[u].push_back(stk[--tp]), yes[stk[tp]] = false;\n\tif (flag && top != u) adj[top].push_back(u);\n\t\n\t_fev(p, u){\n\t\tint v = to[p];\n\t\tif (vis[v] || v == fa) continue;\n\t\tget_ans(v, top, u);\n\t\tmerge(rt2[u], rt2[u], rt2[v], 1, rg);\n\t}\n\tans += sz(rt2[u]);\n}\n\nvoid divide(int u){\n\tif (!son[u]) return; icnt = 0;\n\tu = get_centroid(u); get_son(u, 0);\n\tassert(son[u]); assert(!vis[u]);\n\tvis[u] = true;\n\t\n\t//pf(\"u:%d\\n\", u);\n\t\n\trg = icnt; rt1[0] = rt2[0] = seg_ncnt = 0;\n\tadn(0, rt1[u], id[u], 1, rg);\n\tint ccnt = col[u] = 1;\n\t_fev(p, u){\n\t\tint v = to[p];\n\t\tif (vis[v]) continue;\n\t\t++ccnt;\n\t\tget_cmt(v, ccnt, u);\n\t}\n\t\n\t_fev(p, u){\n\t\tint v = to[p];\n\t\tif (vis[v]) continue;\n\t\tget_ans(v, v, u);\n\t\tmerge(rt2[u], rt2[u], rt2[v], 1, rg);\n\t}\n\tfor(auto &v : adj[u]){\n\t\tif (col[v] != col[u]){\n\t\t\tmerge(rt2[u], rt2[u], rt1[v], 1, rg);\n\t\t}\n\t}\n\tif (sz(rt2[u])) ans += sz(rt2[u])-1;\n\t//pf(\"ans:%lld\\n\", ans);\n\t\n\t//nl();\n\t_fev(p, u) if (!vis[to[p]]) divide(to[p]);\n}\n\nvoid init(re int n){\n\trt1[0] = rt2[0] = 0;\n\tseg[0] = {0, 0, 0, 0};\n\tepw[0] = one[0] = 1;\n\t_rfor(i, 1, n) epw[i] = (epw[i-1]<<1)%mod, one[i] = (one[i-1]<<1|1)%mod;\n}\n\nint main(){\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"sample.in\", \"r\", stdin);\n\t//freopen(\"sample.out\", \"w\", stdout);\n\t#endif\n\n\tre int n = rdnt(), m = rdnt();\n\tinit(n);\n\t_rfor(i, 1, n-1) add_edge(rdnt(), rdnt());\n\t_rfor(i, 1, m){\n\t\tre int s = rdnt(), t = rdnt();\n\t\tadj[s].push_back(t);\n\t\tadj[t].push_back(s);\n\t}\n\t\n\tget_son(1, 0);\n\tdivide(1);\n\t\n\tassert((ans&1) == 0);\n\tpf(\"%lld\\n\", ans/2);\n\t//pf(\"%d\\n\", max_seg);\n\n\treturn 0;\n}\n```",
        "postTime": 1646092711,
        "uid": 474113,
        "name": "MoYuFang",
        "ccfLevel": 7,
        "title": "\u3010P5327 [ZJOI2019]\u8bed\u8a00\u3011\u9898\u89e3"
    },
    {
        "content": "> [**P5327 [ZJOI2019]\u8bed\u8a00**](https://www.luogu.com.cn/problem/P5327)\n\n> [\u63a8\u9500](https://www.cnblogs.com/Varuxn/p/14980663.html)\n\n# \u89e3\u9898\u601d\u8def\n## \u66b4\u529b\n\u9996\u5148\u8bb2\u4e00\u4e0b\u6211\u5783\u573e\u7684 40pts \u7684\u66b4\u529b\uff08\u5176\u4ed6 dalao \u90fd\u662f 60pts \u8d77\u6b65\uff09\uff1a\n\n\u5f53\u7136\u8bc4\u6d4b\u673a\u5feb\u7684\u8bdd\uff08\u6bd4\u5982 LOJ \u7684\uff09\uff0c\u53ef\u4ee5\u5361\u8fc7 3,4 \u4e2a\u70b9\uff08\u9003\u3002\n\n\u5bf9\u4e8e 1,2 \u6d4b\u8bd5\u70b9\u7684\u8bdd\uff0c\u6211\u4eec\u76f4\u63a5\u8bb0\u5f55\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\uff0c\u7136\u540e\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u5b58\u4e00\u4e0b\u4e24\u4e2a\u70b9\u662f\u5426\u80fd\u4e92\u76f8\u8d38\u6613\u3002\n\n\u6700\u540e\u66b4\u529b\u6c42 ans \u5c31\u597d\u4e86\u3002\u3002\n\n\u7136\u540e\u6211\u4eec\u770b\u5230\u4e86\u94fe\u7684\u90e8\u5206\u5206\uff0c\u7136\u540e\u5c31\u662f\u5728\u5e8f\u5217\u4e0a\u7684\u5904\u7406\u4e86\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u64cd\u4f5c\uff0c\u6211\u4eec\u8bb0\u5f55\u4e0b\u5de6\u53f3\u7aef\u70b9\uff0c\u7136\u540e\u6309\u7167\u5de6\u7aef\u70b9\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u53f3\u7aef\u70b9\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u8fdb\u884c\u6392\u5e8f\u3002\n\n\u628a\u5404\u4e2a\u64cd\u4f5c\u5206\u6210\u82e5\u5e72\u7ec4\uff0c\u4fdd\u8bc1\u6bcf\u4e00\u7ec4\u7684\u6700\u5de6\u7aef\u7684\u70b9\u6bd4\u524d\u4e00\u7ec4\u7684\u6240\u6709\u7684\u53f3\u7aef\u70b9\u90fd\u8981\u5927\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u4e0d\u540c\u7ec4\u7684\u7b2c\u4e00\u4e2a\u76f4\u63a5\u7ed9\u7b54\u6848\u52a0\u4e0a  $C_{r-l+1}^2$ \uff0c\u4e5f\u5c31\u662f $\\dfrac{(r-l)\\times(r-l+1)}{2}$  \u3002\n\n\u5bf9\u4e8e\u540c\u4e00\u7ec4\u7684\uff0c\u5982\u679c\u8be5\u533a\u95f4\u5728\u672c\u7ec4\u6b64\u524d\u7684\u533a\u95f4\u5185\uff0c\u90a3\u4e48\u5b83\u5c31\u6ca1\u6709\u8d21\u732e\u3002\n\n\u5426\u5219\u628a\u5b83\u5728\u7ec4\u5185\u7684\u957f\u5ea6\u4e58\u4e0a\u5728\u7ec4\u5916\u7684\u957f\u5ea6\u8fd8\u6709\u7ec4\u5916\u8fb9\u957f\u5ea6\u7684\u81ea\u7531\u7ec4\u5408\u3002\n\n\u8bbe\u6b64\u65f6\u8fd9\u4e00\u7ec4\u7684\u53f3\u7aef\u70b9\u662f maxr\uff0c\u8d21\u732e\u5c31\u662f $(r-maxr)\\times(maxr-l)+\\dfrac{(r-maxr)\\times(r-maxr+1)}{2}$ \u3002\n\n[$code$](https://www.luogu.com.cn/paste/vp4s24nt)\n\n## \u6b63\u89e3\n\u6b63\u89e3\u7684\u505a\u6cd5\u5c31\u6bd4\u8f83\u795e\u4ed9\u4e86\uff0c\u7b97\u6cd5\u65b9\u9762\u5c31\u662f**\u7ebf\u6bb5\u6811\u5408\u5e76+\u52a8\u6001\u5f00\u70b9+\u6811\u4e0a\u5dee\u5206**\uff0c\u5728\u52a0\u4e0a\u4e00\u70b9**\u865a\u6811**\u7684\u601d\u60f3\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u518d\u6811\u4e0a\u5dee\u5206\u7ebf\u6bb5\u6811\u5408\u5e76\u5c31\u662f\u5404\u4e2a\u8282\u70b9\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u4e86\uff0c\u56e0\u6b64\uff0c\u73b0\u5728\u7684\u95ee\u9898\u5728\u4e8e\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7684\u5904\u7406\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u6709\u4ee5\u4e0b\u6027\u8d28\uff1a\n\n> \u5bf9\u4e8e\u6240\u6709\u53ef\u4ee5\u4e0e x \u8d38\u6613\u7684\u70b9\u5b9e\u9645\u4e0a\u5c31\u6784\u6210\u4e86\u4e00\u4e2a\u751f\u6210\u6811\uff0c\u4e5f\u53ef\u4ee5\u53eb\u505a\u8054\u901a\u5757\u3002\n\n\u5982\u679c\u70b9 s \u548c t \u7684\u8def\u5f84\u4f1a\u7ecf\u8fc7\u70b9 x \uff0c\u90a3\u4e48\u6211\u4eec\u79f0 s \u548c t \u4e3a x \u7684\u4e24\u4e2a\u6781\u8fdc\u70b9\uff0c\u90a3\u4e48\u5c31\u6709\u4e86\u4ee5\u4e0b\u7ed3\u8bba\uff1a\n\n> x \u7684\u751f\u6210\u6811\u5927\u5c0f\u5176\u5b9e\u5c31\u662f\u80fd\u628a x \u7684\u6240\u6709\u6781\u8fdc\u70b9\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u786c\u70b9\u5b58\u5728\u6781\u8fdc\u70b9 1 \uff0c\u6700\u540e\u518d\u9664\u53bb 1 \u7684\u8d21\u732e\u3002\n\n\u7136\u540e\uff0c\u5982\u679c\u6211\u4eec\u73b0\u5728\u9700\u8981\u628a y \u70b9\u52a0\u5165\u5230 x \u7684\u751f\u6210\u6811\u91cc\uff0c\u5176\u5b9e\u5c31\u662f\u9700\u8981\u628a\u8be5\u751f\u6210\u6811\u91cc\u8ddd\u79bb y \u6700\u8fd1\u7684\u70b9\u4e0e y \u8fde\u8d77\u6765\u3002\n\n\u5047\u8bbe\u90a3\u4e2a\u70b9\u662f z \uff0c\u90a3\u4e48 y \u7684\u8d21\u732e\u5c31\u662f $dep_y-dep_{\\operatorname{lca}(y,z)}$ \u3002\n\n\u5bf9\u4e8e 1 \u70b9\u7684\u8d21\u732e\u5176\u5b9e\u5c31\u662f\u6240\u6709\u70b9\u7684 lca \u7684 dep \u4e4b\u548c\u3002\n\n\u5728\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u5b58\u50a8\u56db\u4e2a\u503c\uff1a\u64cd\u4f5c\u6570\uff0c\u4e24\u4e2a\u6781\u8fdc\u70b9\uff0c\u8d21\u732e\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u8f6c\u79fb\u4e86\uff0c\u56e0\u4e3a\u7ebf\u6bb5\u6811\u662f\u5efa\u7acb\u5728\u65f6\u95f4\u6233\u4e0a\u7684\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\u6765\u8bf4\uff0c\u4e24\u4e2a\u6781\u8fdc\u70b9\u4e00\u5b9a\u5206\u522b\u6765\u81ea\u5de6\u53f3\u4e24\u4e2a\u5b50\u533a\u95f4\u3002\n\n\u5bf9\u4e8e\u4e24\u4e2a\u5b50\u533a\u95f4\u5728\u5411\u4e0a\u66f4\u65b0\u65f6\u4e0d\u80fd\u5355\u7eaf\u7684\u53ea\u8bb0\u4e3a\u4e24\u4e2a\u533a\u95f4\u7684\u52a0\u548c\uff0c\u8d21\u732e\u8fd8\u5e94\u8be5\u7b97\u4e0a\u4e24\u4e2a\u5b50\u533a\u95f4\u4e4b\u95f4\u6700\u8fd1\u7684\u8282\u70b9\u8fde\u63a5\u8d77\u6765\u7684\u8d21\u732e\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e24\u4e2a\u8282\u70b9\u7684 lca \u7684 dep \u503c\u3002\n\n\u6700\u540e\u5c31\u662f\u5b9e\u73b0\u7ec6\u8282\u4e86\uff1a\u6ce8\u610f\u4e0b\u65f6\u95f4\u6233\u548c\u6807\u53f7\u4e4b\u95f4\u7684\u8f6c\u5316\u5c31\u597d\u4e86\u3002\n\n\u5bf9\u4e8e\u6c42 lca \u7684\u65f6\u5019\u53ef\u4ee5\u7528  $\\mathcal{O}(1)$ \u67e5\u8be2\u7684\u4f18\u79c0 RMQ-ST \u7b97\u6cd5 \u4f46\u662f\u8c8c\u4f3c\uff0c\u6811\u94fe\u5256\u5206\u7684  $\\mathcal{O}(n)$ \u9884\u5904\u7406\u66f4\u5feb\u4e00\u4e9b\uff0c\u5176\u5b9e\u90fd\u5927\u540c\u5c0f\u5f02\u4e86\u3002\u3002\n\n## code\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=1e5+10,M=N<<1;\nint n,m,tot,ans,root[N];\nint tim,dfn[N],id[N],siz[N],son[N],dep[N],topp[N],fa[N];\nvector<int> del[N];\nstruct Edge\n{\n\tint tot,head[N],nxt[M],ver[M];\n\tvoid add(int x,int y)\n\t{\n\t\tver[++tot]=y;\n\t\tnxt[tot]=head[x];\n\t\thead[x]=tot;\n\t}\n}e;\nstruct Vector_Tree\n{\n\tint l,r,s,t,dat,f;\n}tre[N*80];\nvoid pre_dfs(int x)\n{\n\tsiz[x]=1;\n\tfor(int i=e.head[x];i;i=e.nxt[i])\n\t{\n\t\tint to=e.ver[i];\n\t\tif(to==fa[x])\n\t\t\tcontinue;\n\t\tfa[to]=x;\n\t\tdep[to]=dep[x]+1;\n\t\tpre_dfs(to);\n\t\tsiz[x]+=siz[to];\n\t\tif(siz[to]>siz[son[x]])\n\t\t\tson[x]=to;\n\t}\n}\nvoid pre_dfs(int x,int tp)\n{\n\ttopp[x]=tp;\n\tdfn[x]=++tim;\n\tid[tim]=x;\n\tif(son[x])\n\t\tpre_dfs(son[x],tp);\n\tfor(int i=e.head[x];i;i=e.nxt[i])\n\t\tif(!dfn[e.ver[i]])\n\t\t\tpre_dfs(e.ver[i],e.ver[i]);\n}\nint LCA(int x,int y)\n{\n\tif(!x||!y)\treturn 0;\n\twhile(topp[x]^topp[y])\n\t{\n\t\tif(dep[topp[x]]<dep[topp[y]])\n\t\t\tswap(x,y);\n\t\tx=fa[topp[x]];\n\t}\n\tif(dep[x]>dep[y])\n\t\tswap(x,y);\n\treturn x;\n}\nvoid push_up(int x)\n{\n\ttre[x].s=(tre[tre[x].l].s?tre[tre[x].l].s:tre[tre[x].r].s);\n\ttre[x].t=(tre[tre[x].r].t?tre[tre[x].r].t:tre[tre[x].l].t);\n\tif(!tre[tre[x].l].t||!tre[tre[x].r].s)\ttre[x].f=tre[tre[x].l].f+tre[tre[x].r].f;\n\telse\ttre[x].f=tre[tre[x].l].f+tre[tre[x].r].f-dep[LCA(tre[tre[x].l].t,tre[tre[x].r].s)];\n}\nvoid insert(int &x,int l,int r,int pos,int num)\n{\n\tif(!x)\tx=++tot;\n\tif(l==r)\n\t{\n\t\ttre[x].dat+=num;\n\t\ttre[x].s=tre[x].t=(tre[x].dat?id[pos]:0);\n\t\ttre[x].f=(tre[x].dat?dep[id[pos]]:0);\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tif(pos<=mid)\tinsert(tre[x].l,l,mid,pos,num);\n\telse\tinsert(tre[x].r,mid+1,r,pos,num);\n\tpush_up(x);\n}\nvoid merge(int &x,int y,int l,int r)\n{\n\tif(!x||!y)\n\t{\n\t\tx|=y;\n\t\treturn ;\n\t}\n\tif(l==r)\n\t{\n\t\ttre[x].dat+=tre[y].dat;\n\t\ttre[x].f=(tre[x].f?tre[x].f:tre[y].f);\n\t\ttre[x].s=(tre[x].s?tre[x].s:tre[y].s);\n\t\ttre[x].t=(tre[x].t?tre[x].t:tre[y].t);\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tmerge(tre[x].l,tre[y].l,l,mid);\n\tmerge(tre[x].r,tre[y].r,mid+1,r);\n\tpush_up(x);\n}\nint query(int x)\n{\n\treturn tre[x].f-dep[LCA(tre[x].s,tre[x].t)];\n}\nvoid redfs(int x)\n{\n\tfor(int i=e.head[x];i;i=e.nxt[i])\n\t\tif(e.ver[i]!=fa[x])\n\t\t\tredfs(e.ver[i]);\n\tfor(int i=0;i<del[x].size();i++)\n\t\tinsert(root[x],1,tim,dfn[del[x][i]],-1);\n\tans+=query(root[x]);\n\tmerge(root[fa[x]],root[x],1,tim);\n}\n#undef int\nint main()\n{\n\t#define int register long long\n\t#define ll long long\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1,x,y;i<n;i++)\n\t{\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\te.add(x,y);\n\t\te.add(y,x);\n\t}\n\tpre_dfs(1);\n\tpre_dfs(1,1);\n\tfor(int i=1,x,y;i<=m;i++)\n\t{\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\tinsert(root[x],1,tim,dfn[x],1);\n\t\tinsert(root[x],1,tim,dfn[y],1);\n\t\tinsert(root[y],1,tim,dfn[x],1);\n\t\tinsert(root[y],1,tim,dfn[y],1);\n\t\tint lca=LCA(x,y);\n\t\tdel[lca].push_back(x);\n\t\tdel[lca].push_back(y);\n\t\tdel[fa[lca]].push_back(x);\n\t\tdel[fa[lca]].push_back(y);\n\t}\n\tredfs(1);\n\tprintf(\"%lld\\n\",ans/2ll);\n\treturn 0;\n}\n```",
        "postTime": 1625627471,
        "uid": 190322,
        "name": "Varuxn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5327 [ZJOI2019]\u8bed\u8a00"
    },
    {
        "content": "[Problem](https://www.luogu.com.cn/problem/P5327)\n\n$\\text{Solution:}$\n\n\u83dc\u9e21\u592a\u83dc\u4e86\u60f3\u4e86\u597d\u4e45\u6ca1\u6709\u601d\u8def\u2026\u2026\u53ea\u77e5\u9053\u8981\u6c42\u6811\u4e0a\u94fe\u7684\u5e76\u96c6\u4f46\u4e0d\u77e5\u9053\u548b\u6574\u2026\u2026\u867d\u7136\u9898\u76ee\u7b97\u6cd5\u7ebf\u6bb5\u6811\u5408\u5e76\u548c\u6811\u4e0a\u5dee\u5206\u770b\u5230\u9898\u5c31\u80fd\u60f3\u5230\u2026\u2026\u4f46\u662f\u600e\u4e48\u505a\u8fd8\u662f\u6709\u601d\u7ef4\u96be\u5ea6\u2026\u2026\uff08\u5bf9\u7b14\u8005\u6765\u8bf4\uff09\n\n\u770b\u4e86\u597d\u4e45\u7684\u9898\u89e3\u90fd\u6ca1\u6709\u770b\u61c2 \u8fd9\u6b21\u5199\u7684\u8be6\u7ec6\u4e00\u70b9\u3002\n\n* \u6240\u8c13\u77e9\u9635\u9762\u79ef\u5e76\n\n\u67d0\u4e9b\u9898\u89e3\u4e2d\u8bf4\u4e86\u4e00\u53e5 \u201c\u53ef\u4ee5\u7528\u6811\u5256\u5957\u626b\u63cf\u7ebf\u201d \u201c\u5c31\u662f\u4e00\u4e2a\u77e9\u9635\u9762\u79ef\u5e76\u201d \u7684\u505a\u6cd5\uff0c\u590d\u6742\u5ea6 $O(n\\log^3 n).$\n\n\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5bf9\u6811\u8fdb\u884c\u6811\u5256\u540e\uff0c\u6bcf\u4e00\u6761\u8def\u5f84 $(s,t)$ \u90fd\u53ef\u4ee5\u88ab\u5212\u5206\u4e3a $\\log n$ \u4e2a\u7ebf\u6bb5\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e00\u6bb5\u88ab\u5212\u5206\u7684\u91cd\u94fe\u533a\u95f4\u770b\u505a\u77e9\u5f62\uff0c\u90a3\u6211\u4eec\u5bf9\u6bcf\u4e2a\u70b9\u6c42\u7684\u94fe\u5e76\u96c6\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u62bd\u8c61\u7684 \u201c\u77e9\u5f62\u9762\u79ef\u5e76\u201d \u3002\n\n\u590d\u6742\u5ea6\u662f\u6811\u5256\u7684 $\\log$ \u548c\u626b\u9762\u7ebf\u672c\u8eab\u7684\u4e24\u4e2a $\\log$. \u6211\u6ca1\u6709\u5b9e\u73b0\u8fd9\u79cd\u505a\u6cd5\u3002\n\n* \u7ebf\u6bb5\u6811\u5408\u5e76\u3001\u6811\u4e0a\u5dee\u5206\u4e0e\u6811\u5256\n\n\u5e38\u89c4\u7684 $\\log^2 n$ \u505a\u6cd5\u662f\u8fd9\u4e2a\u3002\n\n\u7531\u4e8e\u6709\u5e8f\u5bf9\u4e0d\u597d\u7b97\uff0c\u6211\u4eec\u53ef\u4ee5\u7b97\u65e0\u5e8f\u5bf9\u7684\u4e2a\u6570\uff0c\u9664\u4ee5\u4e8c\u5373\u53ef\u3002\n\n\u8bb0 $S_u$ \u8868\u793a $u$ \u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u7684\u96c6\u5408\uff08\u4e0d\u5305\u62ec\u5b83\u81ea\u5df1\uff09\u3002\u90a3\u4e48 $ans=\\frac{\\sum S_i}{2}.$\n\n\u5982\u4f55\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u8ba1\u7b97\u51fa\u5b83\u7684 $S$ \u5462\uff1f\n\n\u9996\u5148\u660e\u786e\u4e00\u70b9\uff1a\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u5efa\u7acb\u7684\u7ebf\u6bb5\u6811\u662f\u4e00\u68f5 \u4ee5 dfs\u5e8f \u4e3a\u57fa\u7840\u7684\u7ebf\u6bb5\u6811\uff0c\u5b83\u7ef4\u62a4\u4e86\u6574\u68f5\u6811\u7684\u4fe1\u606f\u3002\n\n\u90a3\u4e48\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u90fd\u6709\u8fd9\u6837\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8bed\u8a00\u4f20\u9012\u8fc7\u7a0b\uff0c\u6211\u4eec\u5728\u8def\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9\u4e0a\u90fd\u8fdb\u884c\u4e00\u6b21\u533a\u95f4\u8986\u76d6\u64cd\u4f5c\uff0c\u6700\u7ec8\u6bcf\u4e00\u4e2a\u70b9\u4e0a\u7ebf\u6bb5\u6811\u4e0a\u88ab\u8986\u76d6\u7684\u957f\u5ea6\u5c31\u662f\u5b83\u7684 $S$ .\n\n\u663e\u7136\u8fd9\u73a9\u610f\u590d\u6742\u5ea6\u4e0d\u5bf9\u3002\n\n\u9996\u5148\uff0c\u5bf9\u6811\u4e0a\u8def\u5f84\u4fee\u6539\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u6811\u5256\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u6761\u8def\u5f84\u4e0a\u7684\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u7136\u60f3\u5230\u7528\u6811\u4e0a\u5dee\u5206\u7684\u601d\u8def\u6765\u4f18\u5316\u3002\n\n\u5e76\u4e0d\u77e5\u9053\u4e00\u68f5\u652f\u6301\u533a\u95f4\u4fee\u6539\u7684\u6811\u548b\u5408\u5e76\uff09 \u4e0a\u6587\u6240\u8ff0\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u68f5\u7ebf\u6bb5\u6811\u4e0a\u88ab\u8986\u76d6\u7684\u957f\u5ea6\uff0c\u5e76\u4e14\u662f **\u5168\u5c40\u8be2\u95ee** \u3002\n\n\u90a3\u8fd9\u4e2a\u4e1c\u897f\u5c31\u957f\u5f97\u5f88\u50cf\u626b\u63cf\u7ebf\u4e86\u3002 \u7ef4\u62a4\u533a\u95f4\u88ab\u8986\u76d6\u7684\u6b21\u6570\u6765\u66f4\u65b0\u5373\u53ef\u3002\n\n\u90a3\u4e48\u5408\u5e76\u5462\uff1f\n\n\u5408\u5e76\u8981\u6ce8\u610f\u4e00\u4e0b\u7ec6\u8282\uff1a\u6bcf\u4e00\u6b21\u5408\u5e76\u5230\u7684\u70b9\u90fd\u8981\u8bb0\u5f55\u4fe1\u606f\uff0c\u56e0\u4e3a\u8fd9\u79cd\u5199\u6cd5\u7684\u533a\u95f4\u8986\u76d6\u6b21\u6570\u6ca1\u6709\u4ec0\u4e48\u4e0b\u4f20\u64cd\u4f5c\uff0c\u4e0d\u8981\u53ea\u5728\u53f6\u5b50\u4e0a\u7ef4\u62a4 pushup \u64cd\u4f5c\uff0c\u8fd9\u6837\u7ef4\u62a4\u7684\u4fe1\u606f\u662f\u9519\u8bef\u800c\u4e0d\u5168\u9762\u7684\u3002\n\n\u5176\u4ed6\u5199\u6cd5\u90fd\u4e00\u6837\uff0c\u590d\u6742\u5ea6\u662f\u4e00\u4e2a $\\log$.\n\n\u90a3\u4e48\u603b\u7ed3\u5c31\u662f\uff1a\u8003\u8651\u66b4\u529b\uff0c\u6bcf\u4e00\u4e2a\u70b9\u90fd\u8bb0\u5f55\u4e00\u4e0b\u94fe\u4e0a\u4fe1\u606f\uff0c\u53c8\u56e0\u4e3a\u9700\u8981\u6811\u4e0a\u4fee\u6539\u8def\u5f84\u9700\u8981\u6811\u5256\u64cd\u4f5c\uff0c\u800c\u5bf9\u4e8e\u4e00\u6761\u8def\u5f84\u4e0a\u7684\u70b9\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6811\u4e0a\u5dee\u5206\u4f18\u5316\uff0c\u8fdb\u800c\u5229\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u6765\u89e3\u51b3\u8fd9\u9898\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\log^2 n).$\n\n## \u7a7a\u95f4\u5206\u6790\n\n\u4e4b\u524d\u4ece\u795e\u9c7c\u90a3\u91cc\u89c1\u5230\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u662f $2n\\log n$ \u7684\u3002\n\n\u8ba1\u7b97\u4e00\u4e0b\uff1a$Num=2\\cdot 10^5 \\cdot \\log 10^5=3.32\\cdot 10^6$ \u7ea7\u522b\u3002\u7136\u800c\u4ee3\u7801\u4e2d\uff0c\u8fdb\u884c\u4fee\u6539\u7684\u64cd\u4f5c\u8fbe\u5230\u4e86 $O(m\\log n)$ \u7ea7\u522b\u7684\u4e2a\u6570\uff0c\u4e5f\u5c31\u662f\u591a\u4e86\u4e2a $\\log$ ,\u7ea6\u4e3a$5.5\\cdot 10^7$\u7ea7\u522b\u3002\u7a7a\u95f4\u6ca1\u6709\u5361\u6ee1\uff0c\u4ee3\u7801\u5f00\u5230 $2\\cdot 10^7$ \u53ef\u4ee5\u8fc7\u53bb\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=2e7+10;\nint ls[MAXN],rs[MAXN],topp,rub[MAXN],node;\nint cnt[MAXN],len[MAXN],id[MAXN],rk[MAXN];\nint rt[MAXN],pa[MAXN],siz[MAXN],son[MAXN];\nint dep[MAXN],head[MAXN],tot,n,m,top[MAXN];\nlong long ans;\nstruct E {\n\tint nxt,to;\n} e[MAXN];\n\ninline int Max(int x,int y){return x>y?x:y;}\n\ninline void add(int x,int y) {\n\te[++tot] = ( E ) {\n\t\thead [ x ] , y\n\t} ;\n\thead[x]=tot;\n}\n\nvoid dfs1(int x,int fa) {\n\tpa [ x ] = fa ;\n\tsiz [ x ] = 1 ;\n\tdep [ x ] = dep [ fa ] + 1 ;\n\tfor ( int i=head[x]; i; i=e[i].nxt) {\n\t\tint j=e[i].to;\n\t\tif(j==fa)continue;\n\t\tdfs1(j,x);\n\t\tsiz[x]+=siz[j];\n\t\tif(siz[j]>siz[son[x]])son[x]=j;\n\t}\n}\n\nint dfstime;\nvoid dfs2(int u,int t) {\n\ttop [ u ] = t ;\n\tid [ u ] = ++ dfstime ;\n\tif ( ! son [ u ] )\n\t\treturn ;\n\tdfs2 ( son [ u ] , t ) ;\n\tfor ( int i = head [ u ] ; i ; i = e [ i ] .nxt ) {\n\t\tint j = e [ i ] .to ;\n\t\tif ( j == son [ u ] || j == pa [ u ] )\n\t\t\tcontinue ;\n\t\tdfs2 ( j , j ) ;\n\t}\n}\n\ninline void del(int x) {\n\trub[++topp]=x;\n\tlen[x]=cnt[x]=ls[x]=rs[x]=0;\n}\n\ninline int New() {\n\tif(topp)return rub[topp--];\n\treturn ++node;\n}\n\ninline void pushup(int x,int l,int r) {\n\tif(cnt[x]>0)\n\t\tlen[x]=r-l+1;\n\telse\n\t\tlen[x]=len[ls[x]]+len[rs[x]];\n}\n\nvoid change(int &x,int L,int R,int l,int r,int v) {\n\tif(!x)x=New();\n\tif ( l <= L && R <= r ) {\n\t\tcnt[x]+=v;\n\t\tpushup(x,L,R);\n\t\treturn;\n\t}\n\tint mid=(L+R)>>1;\n\tif(l<=mid)change(ls[x],L,mid,l,r,v);\n\tif(mid<r)change(rs[x],mid+1,R,l,r,v);\n\tpushup(x,L,R);\n}\n\nint merge(int x,int y,int l,int r) {\n\tif(!x||!y)return x+y;\n\tcnt[x]+=cnt[y];\n\tif(l==r) {\n\t\tpushup(x,l,r);\n\t\tdel(y);\n\t\treturn x;\n\t}\n\tint mid=(l+r)>>1;\n\tls[x]=merge(ls[x],ls[y],l,mid);\n\trs[x]=merge(rs[x],rs[y],mid+1,r);\n\tpushup(x,l,r);\n\tdel(y);\n\treturn x;\n}\n\nint query(int x,int L,int R,int l,int r) {\n\tif(L>=l&&R<=r)return len[x];\n\tint mid=(L+R)>>1,val=0;\n\tif(l<=mid)val+=query(ls[x],L,mid,l,r);\n\tif(mid<r)val+=query(rs[x],mid+1,R,l,r);\n\treturn val;\n}\n\nvoid changes(int root,int x,int y,int v) {\n\twhile(top[x]!=top[y]) {\n\t\tif(dep[top[x]]>=dep[top[y]]) {\n\t\t\tchange(rt[root],1,n,id[top[x]],id[x],v);\n\t\t\tx=pa[top[x]];\n\t\t} else {\n\t\t\tchange(rt[root],1,n,id[top[y]],id[y],v);\n\t\t\ty=pa[top[y]];\n\t\t}\n\t}\n\tif(id[x]<=id[y])change(rt[root],1,n,id[x],id[y],v);\n\telse change(rt[root],1,n,id[y],id[x],v);\n}\n\ninline int LCA(int x,int y) {\n\twhile ( top [ x ] != top [ y ] ) {\n\t\tif(dep[top[x]]>=dep[top[y]])x=pa[top[x]];\n\t\telse y=pa[top[y]];\n\t}\n\treturn dep [ x ] < dep [ y ] ? x : y ;\n}\n\nvoid dfs3 ( int x ) {\n\tfor ( int i = head [ x ] ; i ; i = e [ i ] .nxt ) {\n\t\tint j = e [ i ] .to ;\n\t\tif ( j == pa [ x ] )\n\t\t\tcontinue ;\n\t\tdfs3 ( j ) ;\n\t\trt [ x ] = merge ( rt [ x ] , rt [ j ] , 1 , n ) ;\n\t}\n\tans += Max(query ( rt [ x ] , 1 , n , 1 , n ) -1,0) ;\n}\n\nsigned main() {\n\tfreopen(\"1.in\",\"r\",stdin);\n\tfreopen(\"my.out\",\"w\",stdout);\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1; i<n; ++i) {\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tdfs1(1,1);\n\tdfs2(1,1);\n\tfor(; m; m--) {\n\t\tint s,t;\n\t\tscanf(\"%d%d\",&s,&t);\n\t\tint lca=LCA(s,t);\n\t\tchanges(s,s,t,1);\n\t\tchanges(t,s,t,1);\n\t\tchanges(lca,s,t,-1);\n\t\tif(lca==1)continue;\n\t\tchanges(pa[lca],s,t,-1);\n\t}\n\tdfs3(1);\n\tans>>=1;\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1624971562,
        "uid": 128591,
        "name": "Refined_heart",
        "ccfLevel": 9,
        "title": "\u3010\u9898\u89e3\u3011[ZJOI2019]\u8bed\u8a00"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5327)\n\n#### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u4ee5\u53ca $m$ \u6761\u94fe\uff0c\u6c42\u6709\u5bf9\u5c11\u5bf9\u70b9\u81f3\u5c11\u5b58\u5728\u4e00\u6761\u94fe\u540c\u65f6\u8986\u76d6\u8fd9\u4e24\u4e2a\u70b9\u3002\n\n$n,m\\leqslant 10^5$\n\n#### \u9898\u89e3\n\n\u8fd9\u771f\u7684\u662f\u975e\u5e38\u6709\u542f\u53d1\u6027\u7684\u4e00\u9053\u9898\u3002\n\n\u9996\u5148\u9700\u8981\u4e00\u4e2a\u6a21\u578b\u7684\u8f6c\u6362\uff0c\u76f4\u63a5\u679a\u4e3e\u70b9\u5bf9\u662f\u4e0d\u884c\u7684\uff0c\u6211\u4eec\u8003\u8651\u4ece\u70b9\u5f00\u59cb\u7edf\u8ba1\uff0c\u53ef\u4ee5\u53d1\u73b0 $u$ \u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u90fd\u5728\u4e00\u4e2a\u8054\u901a\u5757\u5185\uff0c\u8fd9\u4e2a\u8054\u901a\u5757\u7684\u5927\u5c0f\u5c31\u662f\u6240\u6709\u7ecf\u8fc7 $u$ \u94fe\u5e76\u8d77\u6765\u4e4b\u540e\u7684\u5927\u5c0f\u3002\u8fd9\u65f6\u5019\u7b54\u6848\u5c31\u7b49\u4e8e\u6240\u6709\u70b9\u6240\u5728\u7684\u94fe\u5e76\u5927\u5c0f\u4e4b\u548c\u4e0e$n$\u4e4b\u5dee\u9664\u4ee52\uff0c\u6bd5\u7adf\u4e0d\u80fd\u628a\u81ea\u5df1\u548c\u81ea\u5df1\u7b97\u5728\u5185\u3002  \n\n\u4e4b\u540e\u8003\u8651\u5982\u4f55\u7ef4\u62a4\u94fe\u5e76\u7684\u5927\u5c0f\uff0c\u8fd9\u4e1c\u897f\u548c\u865a\u6811\u6709\u70b9\u7c7b\u4f3c\u3002  \n\u76f4\u63a5\u4e0a\u7ed3\u8bba\uff0c\u94fe\u5e76\u7684\u5927\u5c0f $-1=\\sum_{u\\in S}d_u - \\sum_{u,v\\text{\u76f8\u90bb}}d_{lca(u,v)}$\u3002  \n\u5176\u4e2d$S$\u8868\u793a\u94fe\u7aef\u70b9\u7684\u96c6\u5408\uff0c$d$\u4e3a\u4e00\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u70b9\u6570\uff0c\u76f8\u90bb\u6307$dfs$\u5e8f\u76f8\u90bb\uff0c\u5305\u542b\u9996\u5c3e\u76f8\u90bb\u3002\n\n\u5148\u4e0d\u8003\u8651\u9996\u5c3e\u4e24\u4e2a\u70b9\u7684$lca$\uff0c\u60f3\u8c61\u8fd9\u6837\u4e00\u4e2a\u8fc7\u7a0b\uff1a\u4ece\u5de6\u5230\u53f3\u5f80\u96c6\u5408\u91cc\u9762\u52a0\u70b9\uff0c\u66f4\u65b0\u6240\u6709\u70b9\u5230\u6839\u7684\u5e76\u7684\u5927\u5c0f\uff0c\u5373$+d_u-d_{lca(u,last)}$\uff0c\u6c42\u51fa\u70b9\u5230\u6839\u7684\u5e76\u4e4b\u540e\u518d\u51cf\u53bb\u9996\u5c3e\u4e24\u70b9\u7684$lca$\uff0c\u5373\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u6839\u7684\u6df1\u5ea6\uff0c\u6700\u7ec8\u6070\u597d\u7b49\u4e8e\u94fe\u5e76\u51cf\u4e00\uff08\u51cf\u53bb\u4e86\u8fde\u901a\u5757\u7684\u6839\uff09\u3002\n\n\u8fd9\u73a9\u610f\u663e\u7136\u662f\u6709\u533a\u95f4\u53ef\u52a0\u6027\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5bf9$dfs$\u5e8f\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u5b9e\u9645\u5728\u8282\u70b9\u7684\u7ef4\u62a4\u4e2d\u53ef\u4ee5\u4e0d\u51cf\u53bb\u9996\u5c3e\u7684$lca$\uff0c\u6ce8\u610f\u4e0d\u80fd\u4e71\u5220\u8282\u70b9\u3002\n\n\u5269\u4e0b\u7684\u5c31\u662f\u6811\u4e0a\u5dee\u5206\u548c\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u8fd9\u4e9b\u867d\u7136\u6bd4\u8f83\u5957\u8def\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define next nxt\n#define int long long\nusing namespace std;\nint read(){\n\tint c=0,nx,sign=1;\n\twhile(!isdigit(nx = getchar()))\n\t\tif(nx=='-')\n\t\t\tsign=-1;\n\twhile(isdigit(nx))\n\t\tc=c*10+nx-'0',nx=getchar();\n\treturn sign*c;\n}\n\nconst int N=2e5+20,M=N*2,K=1e7;\nint head[N],next[M],ver[M];\ninline void addEdge(int u,int v){\n\tstatic int now = 0;\n\tnext[++now]=head[u],head[u]=now,ver[now]=v;\n\tnext[++now]=head[v],head[v]=now,ver[now]=u;\n}\n\n\nint n, m;\nint id[N], stk[N], top;\nnamespace lca_rmq{\n\tint d[N];\n\tint s[2*N], cnt;//dfs\u5e8f \n\tint id[N];//\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e \n\tint st[2*N][20], p[30];\n\tint lg[N];\n\tint fa[N];\n\tvoid dfs(int u,int f){\n\t\tstk[++top] = u;\n\t\ts[++cnt] = u;\n\t\tid[u] = cnt;\n\t\td[u] = d[f] + 1;\n\t\tfa[u] = f;\n\t\tfor(int i=head[u];i;i=next[i])\n\t\t\tif(ver[i] != f)\n\t\t\t\tdfs(ver[i], u), s[++cnt] = u;\n\t\n\t}\n\t\n\tinline int dmax(int x,int y){\n\t\treturn d[x] < d[y] ? x : y;\n\t}\n\t\n\tvoid ST(){\n\t\tp[0] = 1;\n\t\tfor(int i=1;i<=20;i++)\n\t\t\tp[i] = p[i - 1] << 1;\n\t\t\n\t\tfor(int i=1;i<=cnt;i++)\n\t\t\tst[i][0] = s[i];\n\t\t\n\t\tfor(int k=1;p[k]<=cnt;k++){\n\t\t\tfor(int i=1;i+p[k]-1<=cnt;i++)\n\t\t\t\tst[i][k] = dmax(st[i][k - 1], st[i + p[k - 1]][k - 1]);\n\t\t}\n\t}\n\tint lca(int u,int v){\n\t\tif(!u or !v)\n\t\t\treturn 0;\n\t\tu = id[u], v = id[v];\n\t\tif(u > v)\n\t\t\tswap(u, v);\n\t\tint k = lg[v - u];\n\t\treturn dmax(st[u][k], st[v - p[k] + 1][k]); \n\t}\n\tint dist(int u,int v){\n\t\treturn d[u] + d[v] - 2 * d[lca(u, v)];\n\t}\n\tvoid init(int u=1){\n\t\tfor(int i=1;i<=n<<1;i++)\n\t\t\tlg[i] = lg[i - 1] + (1 << lg[i - 1] == i);\n\t\tfor(int i=1;i<=n<<1;i++)\n\t\t\t--lg[i];\n\t\td[u] = 1;\n\t\tdfs(u, 0);\n\t\tST();\n\t}\n}\nusing lca_rmq::d;\nusing lca_rmq::lca;\nusing lca_rmq::fa;\n\nlong long ans;\ntypedef pair<int, int> pii;\nvector<int> c[N];\nint root[N];\nint dat[K], cnt[K], lt[K], rt[K];\nint ls[K], rs[K];\n// int rub[K/2], rub_top;\n\nvoid print(int s, int l=1,int r=n){\n\tif(!s)\n\t\treturn ;\n\tif(l >= r){\n\t\tcerr<<lt[s]<<' ';\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tprint(ls[s], l, mid);\n\tprint(rs[s], mid + 1, r);\n}\n\ninline int New(){\n\tstatic int now = 0;\n\treturn ++now;\n}\n// inline void del(int &s){\n// \t// cerr<<\"del \"<<s<<endl;\n// \tif(!s)\n// \t\treturn ;\n// \tdel(ls[s]);\n// \tdel(rs[s]);\n// \tcnt[s] = dat[s] = lt[s] = rt[s] = 0;\n// \trub[++rub_top] = s;\n// \ts = 0;\n// }\ninline void pushup(int s){\n\tif(!cnt[ls[s]] or !cnt[rs[s]]){\n\t\tint t = cnt[ls[s]] ? ls[s] : rs[s];\n\t\tdat[s] = dat[t];\n\t\tlt[s] = lt[t];\n\t\trt[s] = rt[t];\n\t\tcnt[s] = cnt[t];\n\t}else{\n\t\tdat[s] = dat[ls[s]] + dat[rs[s]] - d[lca(rt[ls[s]], lt[rs[s]])];\n\t\tcnt[s] = cnt[ls[s]] or cnt[rs[s]];\n\t\tlt[s] = lt[ls[s]];\n\t\trt[s] = rt[rs[s]];\n\t}\n}\nvoid add(int p, int x, int &s, int l=1, int r=n){\n\tif(!s)\n\t\ts = New();\n\tcnt[s] += x;\n\tif(l >= r){\n\t\tint u = stk[l];\n\t\tlt[s] = rt[s] = u;\n\t\tdat[s] = d[u];\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tif(p <= mid)\n\t\tadd(p, x, ls[s], l, mid);\n\tif(p > mid)\n\t\tadd(p, x, rs[s], mid + 1, r);\n\tpushup(s);\n}\ninline int query(int s){\n\tif(!cnt[s])\n\t\treturn 0;\n\telse\n\t\treturn dat[s] - d[lca(lt[s], rt[s])];\n}\nint merge(int x, int y, int l = 1, int r = n){\n\tif(!x or !y)\n\t\treturn x | y;\n\tif(l == r){\n\t\tcnt[x] += cnt[y];\n\t\treturn x;\n\t}\n\tint mid = (l + r) >> 1;\n\tls[x] = merge(ls[x], ls[y], l, mid);\n\trs[x] = merge(rs[x], rs[y], mid + 1, r);\n\tpushup(x);\n\treturn x;\n}\n\nvoid dfs(int u, int f){\n\tfor(int i=head[u];i;i=next[i]){\n\t\tint v = ver[i];\n\t\tif(v == f)\n\t\t\tcontinue;\n\t\tdfs(v, u);\n\t\troot[u] = merge(root[u], root[v]);\n\t}\n\tfor(int i=0,tt=c[u].size();i<tt;i++){\n\t\tint v = c[u][i];\n\t\tif(v < 0)\n\t\t\tadd(id[-v], -2, root[u]);\n\t\telse\n\t\t\tadd(id[v], 1, root[u]);\n\t}\n\t// cerr<<\"ans\"<<u<<' '<<query(root[u])<<endl;\n\t// print(root[u]);\n\t// cerr<<endl;\n\t\n\tans += query(root[u]);\n}\n\nsigned main(){\n\t// freopen(\"language7.in\", \"r\", stdin);\n\t// cerr<<(-1 and 0)<<endl;\n\tn = read(), m = read();\n\tfor(int i=1;i<n;i++)\n\t\taddEdge(read(), read());\n\t\n\tlca_rmq::init();\n\tfor(int i=1;i<=n;i++)\n\t\tid[stk[i]] = i;\n\t// cerr<<d[lca(0, 0)]<<endl;\n\t// cerr<<\"stk \";\n\t// for(int i=1;i<=n;i++)\n\t// \tcerr<<stk[i]<<' ';\n\t// cerr<<endl;\n\t\n\t// cerr<<\"id \";\n\t// for(int i=1;i<=n;i++)\n\t// \tcerr<<id[i]<<' ';\n\t// cerr<<endl;\n\t\n\t// cerr<<\"d \";\n\t// for(int i=1;i<=n;i++)\n\t// \tcerr<<d[i]<<' ';\n\t// cerr<<endl;\n\t\n\tfor(int i=1;i<=m;i++){\n\t\tint u = read(), v = read(), f = fa[lca(u, v)];\n\t\tc[u].push_back(u);\n\t\tc[u].push_back(v);\n\t\t\n\t\tc[v].push_back(v);\n\t\tc[v].push_back(u);\n\t\t\n\t\tc[f].push_back(-u);\n\t\tc[f].push_back(-v);\n\t}\n\t\n\t// for(int i=0;i<=n;i++){\n\t// \tcerr<<'*'<<i<<' ';\n\t// \tfor(auto v:c[i])\n\t// \t\tcerr<<v<<' ';\n\t// \tcerr<<endl;\n\t// }\n\t\n\tdfs(1, 0);\n\t\n\tprintf(\"%lld\\n\", ans/2);\n}\n\n```\n",
        "postTime": 1594123946,
        "uid": 144732,
        "name": "Alear",
        "ccfLevel": 8,
        "title": "P5327 [ZJOI2019]\u8bed\u8a00  \u6811\u4e0a\u5dee\u5206+\u7ebf\u6bb5\u6811\u5408\u5e76+\u6811\u4e0a\u7ef4\u62a4\u94fe\u5e76"
    },
    {
        "content": "# [ZJOI 2019] \u8bed\u8a00\n\n\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u601d\u7ef4\u7684\u9898\u76ee\u3002\uff08\u795e\u7287\u4eec\u90fd\u80fd\u79d2\u5207\u3002\u3002\u3002\u800c\u6211\u592a\u83dc\u4e86\uff09\n\n\u53ef\u80fd\u8bed\u8a00\u8868\u8fbe\u4e0d\u592a\u6e05\u695a\u3002\u3002\u3002\u8bf7\u591a\u591a\u5305\u6db5\uff08\u6bd5\u7adf\u770b\u4e0d\u61c2\u53ef\u4ee5\u770b\u5176\u4ed6\u9898\u89e3\u5bf9\u4e0d\u5bf9\uff09\u3002\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P5327)\n\n## \u9898\u76ee\u53d9\u8ff0\n\n\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u4e24\u4e2a\u70b9\u6210\u4e3a\u8054\u901a\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u79cd\u989c\u8272\u4f7f\u5f97\u4e24\u70b9\u95f4\u7684\u8def\u5f84\u4e0a\u90fd\u6709\u8be5\u989c\u8272\u3002\u73b0\u5728\u6709$m$\u4e2a\u989c\u8272\uff0c\u6bcf\u79cd\u989c\u8272\u8fdb\u884c\u4e00\u6b21\u67d3\u8272\uff0c\u628a$u,v$\u4e0a\u7684\u6240\u6709\u70b9\u90fd\u67d3\u4e0a\u8be5\u989c\u8272\u3002\u6c42\u6700\u7ec8\u4e00\u5171\u6709\u591a\u5c11\u5bf9\u70b9\u8054\u901a\u3002\u5f53\u524d\u989c\u8272\u5e76\u4e0d\u4f1a\u8986\u76d6\u524d\u4e00\u4e2a\u989c\u8272\u3002\n\n## \u9898\u89e3\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u6784\u6210\u4e00\u4e2a\u8fde\u901a\u5757\u3002**\u5bf9\u4e8e\u8fd9\u4e2a\u8fde\u901a\u5757\uff0c\u4e00\u5b9a\u662f\u4e00\u4e9b\u989c\u8272\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u751f\u6210\u6811\u6784\u6210\u7684\u3002**\u8ba1\u7b97\u51e0\u4e2a\u70b9\u7684\u751f\u6210\u6811\u5927\u5c0f\u53ef\u4ee5\u53c2\u8003\u5bfb\u5b9d\u6e38\u620f\u7684[\u89e3\u6cd5](https://www.cnblogs.com/PinkRabbit/p/10356940.html)\u3002\u4e3a\u4e86\u5f97\u5230\u8fd9\u4e9b\u70b9\uff08\u5c31\u662f\u7aef\u70b9\uff09\uff0c\u53ef\u4ee5\u5dee\u5206\u5730\u7c7b\u4f3c\u4e8e\u96e8\u5929\u7684\u5c3e\u5df4\u4e00\u6837\u7b97\u51fa\u6bcf\u4e2a\u70b9\u4e0a\u6709\u54ea\u4e9b\u7aef\u70b9\u3002\u4f46\u4e0d\u4f46\u8981\u8ba1\u7b97\u7aef\u70b9\uff0c\u8fd8\u8981\u7b97\u6bcf\u4e2a\u70b9\u7684\u751f\u6210\u6811\u5927\u5c0f\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5728\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7ef4\u62a4\u5f53\u524d\u533a\u95f4\u5185\u7684\u751f\u6210\u6811\u5927\u5c0f\u5373\u53ef\u3002\n\n\u5176\u5b9e\u5c31\u662f \u96e8\u5929\u7684\u5c3e\u5df4+\u5bfb\u5b9d\u6e38\u620f\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\n/*-----------------------Tree-----------------------*/\nconst int maxNodeNum = 1e5 + 5;\nint nodeNum, langNum, ELen, eulerTime, dfsTime;\nint head[maxNodeNum], euler[maxNodeNum * 2], dfn[maxNodeNum];\nint firVis[maxNodeNum], rev[maxNodeNum], fa[maxNodeNum];\nint dep[maxNodeNum], st[maxNodeNum * 2][20], pos[maxNodeNum * 2][20];\nint lg2[maxNodeNum * 2];\nstruct EDGE {\n\tint to, next;\n} edge[maxNodeNum * 2];\nvoid Add(int from, int to) {\n\tedge[++ELen].to = to;\n\tedge[ELen].next = head[from];\n\thead[from] = ELen;\n}\nvoid DfsPrepare(int now, int from) {\n\tfa[now] = from;\n\tdep[now] = dep[from] + 1;\n\teuler[++eulerTime] = now; firVis[now] = eulerTime;\n\tdfn[now] = ++dfsTime; rev[dfsTime] = now;\n\tfor (int pt = head[now]; pt; pt = edge[pt].next) {\n\t\tint to = edge[pt].to;\n\t\tif (to != from) {\n\t\t\tDfsPrepare(to, now);\n\t\t\teuler[++eulerTime] = now;\n\t\t\t//\u8fd9\u5e94\u8be5\u52a0\u4e86\u4e00\u4e2a\u70b9 now\u800c\u4e0d\u662f to \n\t\t}\n\t}\n}\nvoid BuildSt() {\n\tlg2[1] = 0;\n\t//\u8fd9\u91cc\u5e94\u8be5\u5904\u7406\u5230 200000\u800c\u4e0d\u662f 100000\uff0c\u56e0\u4e3a st\u8868\u7684\u5927\u5c0f\u662f 200000 \n\tfor (int num = 2; num <= 200000; ++num)\n\t\tlg2[num] = lg2[num / 2] + 1;\n\tfor (int beg = 1; beg <= eulerTime; ++beg) {\n\t\tst[beg][0] = dep[euler[beg]];\n\t\tpos[beg][0] = euler[beg];\n\t}\n\t//binary lift\n\tfor (int lif = 1; (1 << lif) <= eulerTime; ++lif)\n\t\tfor (int beg = 1; beg <= eulerTime - (1 << lif) + 1; ++beg) {\n\t\t\tif (st[beg][lif - 1] < st[beg + (1 << (lif - 1))][lif - 1]) {\n\t\t\t\tst[beg][lif] = st[beg][lif - 1];\n\t\t\t\tpos[beg][lif] = pos[beg][lif - 1];\n\t\t\t} else {\n\t\t\t\tst[beg][lif] = st[beg + (1 << (lif - 1))][lif - 1];\n\t\t\t\tpos[beg][lif] = pos[beg + (1 << (lif - 1))][lif - 1];\n\t\t\t}\n\t\t}\n}\ninline int GetLca(int uId, int vId) {\n\tif (!uId || !vId) return 0;\n\tif (firVis[vId] < firVis[uId]) swap(uId, vId);\n\tint lif = lg2[firVis[vId] - firVis[uId] + 1];\n\tif (st[firVis[uId]][lif] < st[firVis[vId] - (1 << lif) + 1][lif])\n\t\treturn pos[firVis[uId]][lif];\n\telse return pos[firVis[vId] - (1 << lif) + 1][lif];\n}\n\n/*-----------------------Segment Tree-----------------------*/\nconst int maxTreeSize = 6e6 + 5;\nint totNode, rt[maxNodeNum];\nstruct Node {\n\tint ls, rs, mstSize;\n\tint minDfn, maxDfn;\n\tint cnt;\n\tNode() : ls(0), rs(0) {} ;\n\tNode(int _minDfn, int _maxDfn, int _mstSize, bool _cnt) : \n\t\tminDfn(_minDfn), maxDfn(_maxDfn), mstSize(_mstSize), cnt(_cnt) {}\n\t#define ls(p) tr[p].ls\n\t#define rs(p) tr[p].rs\n\t#define minDfn(p) tr[p].minDfn\n\t#define maxDfn(p) tr[p].maxDfn\n\t#define mstSize(p) tr[p].mstSize\n\t#define cnt(p) tr[p].cnt\n} tr[maxTreeSize];\nvoid Update(int now) {\n\tmstSize(now) = mstSize(ls(now)) + mstSize(rs(now))\n\t\t\t\t - dep[GetLca(rev[maxDfn(ls(now))], rev[minDfn(rs(now))])];\n\tminDfn(now) = minDfn(ls(now)) ? minDfn(ls(now)) : minDfn(rs(now));\n\tmaxDfn(now) = maxDfn(rs(now)) ? maxDfn(rs(now)) : maxDfn(ls(now));\n\t//\u4e00\u4e2a\u70b9\u6709\u5de6\u513f\u5b50\u672a\u5fc5\u8fd9\u4e2a\u70b9\u5c31\u6709 minDfn\u548c maxDfn\uff0c\u53ef\u80fd\u5de6\u513f\u5b50\u7684\u503c\u5df2\u7ecf\u88ab\u5220\u6389\u4e86 \n\t//\u8fd9\u4e2a\u5730\u65b9\u7684 cnt \u5e76\u4e0d\u9700\u8981\u66f4\u65b0\uff0c\u56e0\u4e3a\u53ea\u5728\u53f6\u5b50\u8282\u70b9\u7684\u65f6\u5019\u6709\u7528 \n}\nint Query(int nId) {\n\treturn mstSize(rt[nId]) - dep[GetLca(rev[minDfn(rt[nId])], rev[maxDfn(rt[nId])])];\n}\nvoid Modify(int &now, int lEP, int rEP, int dfnId, int add) {\n\tif (!now) now = ++totNode;\n\tif (lEP == rEP) {\n\t\tcnt(now) += add;\n\t\t//\u4e0d\u53ea\u6709+1\u7684\u64cd\u4f5c\uff0c\u8fd8\u6709-1\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u5f97\u770b cnt[now]\u662f\u5426\u4e3a0 \n\t\tmaxDfn(now) = minDfn(now) = cnt(now) > 0 ? dfnId : 0;\n\t\tmstSize(now) = cnt(now) > 0 ? dep[rev[dfnId]] : 0;\n\t\t//\u8fd9\u91cc\u7684 mstSize\u662f\u52a0\u5165\u4e86 1\u53f7\u8282\u70b9\u7684 \n\t\treturn ;\n\t}\n\tint mid = (lEP + rEP) >> 1;\n\tif (dfnId <= mid) Modify(ls(now), lEP, mid, dfnId, add);\n\telse Modify(rs(now), mid + 1, rEP, dfnId, add);\n\tUpdate(now);\n}\nvoid Merge(int &uId, int vId, int lEP, int rEP) {\n\tif (!uId || !vId) {\n\t\tuId = uId | vId;\n\t\treturn ;\n\t}\n\tif (lEP == rEP) {\n\t\t//\u6ce8\u610f\u8fd9\u91cc\u6309\u4f4d\u6216\u7684\u5c0f\u6280\u5de7 \n\t\tcnt(uId) += cnt(vId);\n\t\tmaxDfn(uId) = minDfn(uId) = cnt(uId) > 0 ? lEP : 0;\n\t\tmstSize(uId) = cnt(uId) > 0 ? dep[rev[lEP]] : 0;\n\t\treturn ;\n\t}\n\tint mid = (lEP + rEP) >> 1;\n\tMerge(ls(uId), ls(vId), lEP, mid);\n\tMerge(rs(uId), rs(vId), mid + 1, rEP);\n\tUpdate(uId);\n}\n/*-----------------------Solve-----------------------*/\ntypedef long long ll;\nll ans = 0;\nvoid PathAdd(int uId, int vId, int nId) {\n\tint lca = GetLca(uId, vId);\n\tModify(rt[uId], 1, nodeNum, dfn[nId], 1);\n\tModify(rt[vId], 1, nodeNum, dfn[nId], 1);\n\t//\u66fe\u7ecf\u628a vId\u5199\u6210 uId\uff08\u5199\u4e1c\u897f\u6ca1\u8fc7\u8111\u5b50\uff09  \n\tModify(rt[lca], 1, nodeNum, dfn[nId], -1);\n\tModify(rt[fa[lca]], 1, nodeNum, dfn[nId], -1);\n\t//\u5148\u5b58\u4e0b\u6765\u662f\u4e3a\u4e86\u9632\u6b62\u51fa\u73b0\u8d1f\u6570 \n}\nvoid DfsSolve(int now, int from) {\n\tfor (int pt = head[now]; pt; pt = edge[pt].next) {\n\t\tint to = edge[pt].to;\n\t\tif (to != from) DfsSolve(to, now);\n\t}\n\tans += Query(now);\n\tif (from) Merge(rt[from], rt[now], 1, nodeNum);\n}\n\nint main() {\n\tscanf(\"%d%d\", &nodeNum, &langNum);\n\tfor (int egId = 1; egId < nodeNum; ++egId) {\n\t\tint uId, vId;\n\t\tscanf(\"%d%d\", &uId, &vId);\n\t\tAdd(uId, vId);\n\t\tAdd(vId, uId);\n\t}\n\tdfsTime = 0; dep[0] = 0;\n\tDfsPrepare(1, 0); BuildSt();\n\tfor (int laId = 1; laId <= langNum; ++laId) {\n\t\tint uId, vId, lca;\n\t\tscanf(\"%d%d\", &uId, &vId);\n\t\tlca = GetLca(uId, vId);\n\t\tPathAdd(uId, vId, uId);\n\t\tPathAdd(uId, vId, vId);\n\t}\n\tDfsSolve(1, 0);\n\tprintf(\"%lld\\n\", ans >> 1);\n\treturn 0;\n}\n```\n\n## \u77e5\u8bc6\u70b9\n\n+ \u4e0b\u56de\u7b2c\u4e00\u6b21\u5199\u4e00\u4e2a\u5947\u602a\u7684\u4e1c\u897f\u7684\u65f6\u5019\u4e0d\u8981\u81ea\u5df1\u8c03\u8bd5\u3002\u3002\u3002\u592a\u8d39\u65f6\u95f4\uff0c\u8ddf\u9898\u89e3\u5bf9\u4ee3\u7801\u3002\u3002\u3002\n+ \u8981\u77e5\u9053\u5bfb\u5b9d\u6e38\u620f\u7684\u7ebf\u6bb5\u6811\u5199\u6cd5\uff0c\u56e0\u4e3a\u7ebf\u6bb5\u6811\u53ef\u4ee5\u5408\u5e76\u3002\n+ \u4ee3\u7801\u7ec6\u8282\uff08\u5de8\u4f6c\u53ef\u4ee5\u8df3\u8fc7\u3002\u3002\u3002\uff09\uff1a\n  + \u7528RMQ\u5199LCA\u9700\u8981\u628a\u6570\u7ec4\u5f00\u5230\u539f\u6765\u7684\u4e24\u500d\uff0c\u5e76\u4e14log\u7684\u9884\u5904\u7406\u4e5f\u8981\u5230\u4e24\u500d\u70b9\u6570\u90a3\u4e48\u5927\u3002\n  + \u4e4b\u6240\u4ee5\u9898\u89e3\u4e2d\u5927\u5bb6\u90fd\u662f\u628a\u90a3\u4e9b\u5dee\u5206\u7684-1\u64cd\u4f5c\u90fd\u653e\u5230\u8ba1\u7b97\u5230\u90a3\u4e2a\u70b9\u7684\u65f6\u5019\u518d\u7b97\uff0c\u662f\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u8d1f\u6570\u3002\n  + \u5199\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u65f6\u5019\u53ef\u4ee5\u7528```|```\u7684\u5c0f\u6280\u5de7\u3002\n  + \u5982\u679c\u4e0d\u60f3\u5148\u5b58\u4e0b\u6765\u518d\u5728\u5dee\u5206\u7684\u65f6\u5019\u518d\u51cf\u7684\u8bdd\uff0c\u5c31\u5e94\u8be5\u628a\u5224\u65ad\u6761\u4ef6\u6539\u4e3a$cnt > 0$\u3002\n  + \u4e00\u4e2a\u6709\u5de6\u513f\u5b50\u7684\u8282\u70b9\u7684\u5de6\u513f\u5b50\u4e0b\u9762\u4e0d\u4e00\u5b9a\u6709\u6570\uff0c\u56e0\u4e3a\u53ef\u80fd\u6570\u5df2\u7ecf\u88ab\u5220\u6389\u4e86\uff08\u8fd9\u4e2a\u8981\u5728push up\u4e2d\u6ce8\u610f\uff09\u3002\n  + \u6b27\u62c9\u5e8f\u662f\u4ece\u6839\u8282\u70b9\u904d\u5386\u6574\u68f5\u6811\u7684\u5e8f\u5217\uff0c\u7ecf\u8fc7\u4e00\u4e2a\u70b9\u8bb0\u4e00\u4e2a\u6570\uff08\u672c\u849f\u84bb\u7b2c\u4e00\u6b21\u5199RMQ\u7684LCA\uff09\u3002",
        "postTime": 1579773271,
        "uid": 75715,
        "name": "KokiNiwa",
        "ccfLevel": 0,
        "title": "[ZJOI 2019]\u8bed\u8a00"
    },
    {
        "content": "\u6709\u5e8f\u4e8c\u5143\u7ec4\u4e0d\u592a\u597d\u7b97\uff0c\u6211\u4eec\u5148\u7b97\u51fa\u65e0\u5e8f\u4e8c\u5143\u7ec4\uff0c\u6700\u540e\u518d\u628a$ans/2$.\n\n\u8003\u8651\u5bf9\u6bcf\u4e00\u4e2a\u8282\u70b9$i$\u7edf\u8ba1$ans$.\n\n\u5bf9\u4e8e\u7ecf\u8fc7$i$\u7684\u6240\u6709\u8be2\u95ee\u8def\u5f84\uff0c\u5176\u4e2d\u7684\u6240\u6709\u70b9$j(j\u2260i)$\u90fd\u53ef\u4ee5\u5f62\u6210\u70b9\u5bf9$(i,j)$\n\n\u6240\u4ee5\u6211\u4eec\u8981\u6c42\u7684\u662f\u8fd9\u4e9b\u8def\u5f84\u4e0a\u7684\u70b9\u96c6\u7684\u5e76\u7684\u5927\u5c0f\u3002\n\n\u627e\u51fa\u8fd9\u4e9b\u6240\u6709\u53ef\u884c\u8def\u5f84\u7684$s$\u548c$t$,\u628a\u5b83\u4eec\u4f5c\u4e3a\u5173\u952e\u70b9\uff0c\u5bb9\u6613\u53d1\u73b0\u6240\u6709\u5173\u952e\u70b9\u5f62\u6210\u7684\u6781\u5c0f\u8054\u901a\u5b50\u6811\u5c31\u662f\u8def\u5f84\u4e0a\u7684\u70b9\u96c6\u7684\u5e76\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8981\u89e3\u51b3\u7684\u95ee\u9898\u5c31\u53d8\u6210\u4e86[SDOI2015 \u5bfb\u5b9d\u6e38\u620f](https://www.luogu.org/problemnew/show/P3320)\uff0c\u628a\u5173\u952e\u70b9\u6309\u7167$dfs$\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u7edf\u8ba1  \u6781\u5c0f\u8054\u901a\u5b50\u6811\u7684\u8fb9\u6570  \uff0c\u56e0\u4e3a\u70b9\u6570 $=$ \u8fb9\u6570 $+$ $1$,\u53c8\u56e0\u4e3a\u8981\u53bb\u6389\u70b9$i$,\u6240\u4ee5\u70b9 $i$ \u5bf9 $ans$ \u7684\u8d21\u732e\u5c31\u662f\u70b9\u6570$-1$,\u5373  \u6781\u5c0f\u8054\u901a\u5b50\u6811\u7684\u8fb9\u6570  \u3002\n\n\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e2a\u8d21\u732e\u3002\n\n\u5728\u7ebf\u6bb5\u6811\u7684\u53f6\u5b50\u8282\u70b9\u4fdd\u5b58$dfs$\u5e8f\u4e3a$i$\u7684\u8282\u70b9\u4f5c\u4e3a\u5173\u952e\u70b9\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5982\u679c\u5b83$>0$,\u5c31\u8868\u793a\u5b83\u5728\u5173\u952e\u70b9\u96c6\u5408\u4e2d\u3002\n\n\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u5f53\u524d\u533a\u95f4\u4e2d\u5173\u952e\u70b9$dfs$\u5e8f\u7684$min$\u548c$max$,\u548c\u5f53\u524d\u533a\u95f4\u4e2d\u5173\u952e\u70b9\u7ec4\u6210\u7684\u6781\u5c0f\u8054\u901a\u5b50\u6811\u7684\u8fb9\u6570$sum$\u3002\n\n$min$\u548c$max$\u5f88\u597d\u7ef4\u62a4\uff0c$sum$\u7684\u7ef4\u62a4\u65b9\u5f0f\u53c2\u89c1[SDOI2015 \u5bfb\u5b9d\u6e38\u620f](https://www.luogu.org/problemnew/show/P3320)\u7684\u89e3\u6cd5\uff0c\u53ef\u4ee5\u505a\u5230$O(lca())$\u7684\u590d\u6742\u5ea6\uff0c\u5373\u67e5\u8be2$O(1)$\u6b21$LCA$\u7684\u590d\u6742\u5ea6\u3002\n\n\u6240\u4ee5 $update$\u7684\u590d\u6742\u5ea6 $ = O(lca())$\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5$O(update * logn)$\u652f\u6301\u5bf9\u8fd9\u4e2a\u6b21\u6570\u7684$+1/-1$\u64cd\u4f5c\u3002\n\n\u4f46\u662f\u6211\u4eec\u53c8\u4e0d\u80fd\u6bcf\u4e2a\u70b9$O(m)$\u63d2\u5165\uff0c\u5426\u5219$O(update * nmlogn)$\u76f4\u63a5$T$\u98de\n\n\u7ef4\u62a4\u6b21\u6570\u4e0d\u96be\u60f3\u5230**\u6811\u4e0a\u5dee\u5206**.\u5bf9\u4e8e\u4e00\u7ec4\u8be2\u95ee,$u++,v++,lca--,fa[lca]--$\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9$x$\u8981\u7528\u5230\u5b83\u7684\u513f\u5b50\u7684\u72b6\u6001\uff0c\u800c\u4e14\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u5f00$n$\u68f5\u7ebf\u6bb5\u6811\uff0c\n\n\u90a3\u5c31\u8981\u7528\u5230**\u7ebf\u6bb5\u6811\u5408\u5e76**\u3002\n\n\u7ebf\u6bb5\u6811\u5408\u5e76\u6709$O(nlogn)$\u6b21\u8bbf\u95ee\u8282\u70b9$($\u4e5f\u5c31\u610f\u5473\u7740$O(nlogn)$\u6b21$update)$\n\n\u6240\u4ee5\u5efa\u8bae\u5199\u6811\u5256/\u6b27\u62c9\u5e8f$+st$\u8868\uff0c~~\u500d\u589e~~$LCA$~~\u7a7a\u95f4\u5927\uff0c\u800c\u4e14\u662f\u6ee1\u7684~~$log$,~~\u5c31\u7b97\u4e86\u5427~~\n\n\u590d\u6742\u5ea6$O(nlogn) * O(update)$,\n\n\u6811\u5256$O(nlog^2n)$,\u6b27\u62c9\u5e8f$+st$\u8868$O(nlogn)$.\n\n\u4ee3\u7801\u5f88\u77ed\uff0c\u4f46\u662f\u7ec6\u8282\u5f88\u591a\u3002$($\u6bd4\u5982\u7ebf\u6bb5\u6811\u5408\u5e76\u6570\u7ec4\u5f00\u5927,$update$\u6c42\u8ddd\u79bb\u7279\u5224$0)$\n\n\n~~\u542c\u8bf4\u6709~~ $O(nlog^3n)$ ~~\u800c\u4e14\u8fd8\u80fd\u8fc7\u6389\u7684\u4ee3\u7801~~ $?$\n\n```cpp\n#include <bits/stdc++.h>\n#define LL long long\nusing namespace std;\ninline LL read(){\n    LL x = 0,f = 1; char c = getchar();\n    while (c != EOF && !isdigit(c)) {if (c == '-') f = -1;c = getchar();}\n    while (isdigit(c)) {x = x * 10 + c - '0';c = getchar();}\n    return x * f;\n}\ninline void write(LL x){\n    if (x < 0) putchar('-'),x = -x;\n    if (x > 9) write(x/10); putchar(x%10+'0');\n}\ninline void writeln(LL x){ write(x),putchar('\\n'); }\nconst int N = 100050;\nint n,m;\nint To[N<<1],Ne[N<<1],He[N],k = 0;\ninline void add(int x,int y){ ++k; To[k] = y,Ne[k] = He[x],He[x] = k; } \nint fa[N],dpt[N],size[N],son[N];\nvoid dfs1(int x){\n\tdpt[x] = dpt[fa[x]] + 1,size[x] = 1;\n\tfor (int y,p = He[x]; p ; p = Ne[p]) if ((y=To[p])^fa[x]){\n\t\tfa[y] = x,dfs1(y),size[x] += size[y];\n\t\tif (size[y] > size[son[x]]) son[x] = y;\n\t}\n}\nint id[N],pos[N],top[N],Time = 0;\nvoid dfs2(int x){\n\tid[x] = ++Time; pos[Time] = x;\n\tif (son[x]){\n\t\ttop[son[x]] = top[x],dfs2(son[x]);\n\t\tfor (int y,p = He[x]; p; p = Ne[p]) if (!top[y=To[p]]) top[y] = y,dfs2(y);\n\t}\n}\ninline int LCA(int x,int y){\n\twhile (top[x] ^ top[y]){ if (dpt[top[x]] <= dpt[top[y]]) swap(x,y); x = fa[top[x]]; }\n\treturn dpt[x] <= dpt[y] ? x : y;\n}\ninline int Dis(int x,int y){ x = pos[x],y = pos[y]; return (!x || !y) ? 0 : dpt[x] + dpt[y] - dpt[LCA(x,y)] * 2; }\nvector<int>G[N];\nint lc[N*70],rc[N*70],mn[N*70],mx[N*70],cnt,val[N*70],sum[N*70];\ninline void up(int o){\n\tmn[o] = mn[lc[o]] ? mn[lc[o]] : mn[rc[o]];\n\tmx[o] = mx[rc[o]] ? mx[rc[o]] : mx[lc[o]];\n\tsum[o] = sum[lc[o]] + sum[rc[o]] + Dis(mx[lc[o]],mn[rc[o]]) + Dis(mn[o],mx[o]) - Dis(mn[lc[o]],mx[lc[o]]) - Dis(mn[rc[o]],mx[rc[o]]);\n}\nvoid Modify(int &o,int l,int r,int p,int v){\n\tif (!o) o = ++cnt;\n\tif (l == r){ val[o] += v; if (val[o]) mn[o] = mx[o] = l; else mn[o] = mx[o] = 0; }\n\telse{\n\t\tint mid = l + r >> 1;\n\t\tif (p <= mid) Modify(lc[o],l,mid,p,v); else Modify(rc[o],mid+1,r,p,v);\n\t\tup(o);\n\t}\n}\ninline int Query(int o){ return sum[o] / 2; }\ninline void Merge(int &x,int y,int l,int r){\n\tif (!x || !y) { x |= y; return;}\n\tif (l == r){ val[x] += val[y]; if (val[x]) mn[x] = mx[x] = l; else mn[x] = mx[x] = 0; return; }\n\tint mid = l + r >> 1; Merge(lc[x],lc[y],l,mid); Merge(rc[x],rc[y],mid+1,r); up(x);\n}\nLL ans;\nint T[N];\nvoid work(int x){\n\tfor (int y,p = He[x]; p; p = Ne[p]) if ((y=To[p]) != fa[x]) work(y),Merge(T[x],T[y],1,n);\n\tfor (int i = 0; i < G[x].size(); ++i) Modify(T[x],1,n,G[x][i],-1);\n\tans += Query(T[x]);\n}\nint main(){\n\tint i,u,v,w;\n\tn = read(),m = read();\n\tfor (i = 1; i < n; ++i) u = read(),v = read(),add(u,v),add(v,u);\n\tdfs1(1),top[1] = 1,dfs2(1);\n\twhile (m--){\n\t\tu = read(),v = read(),w = LCA(u,v);\n\t\tModify(T[u],1,n,id[u],1),Modify(T[u],1,n,id[v],1);\n\t\tModify(T[v],1,n,id[u],1),Modify(T[v],1,n,id[v],1);\n\t\tG[w].push_back(id[u]),G[w].push_back(id[v]);\n\t\tw = fa[w],G[w].push_back(id[u]),G[w].push_back(id[v]);\n\t}\n\twork(1);\n\twriteln(ans/2);\n    return 0;\n}\n```",
        "postTime": 1557483092,
        "uid": 52518,
        "name": "s_r_f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5327 \u3010[ZJOI2019]\u8bed\u8a00\u3011"
    },
    {
        "content": "\u4e00\u79cd\u5f88\u5957\u8def\u7684\u89e3\u6cd5\uff0c\u65f6\u7a7a\u5e38\u6570\u548c\u590d\u6742\u5ea6\u4e0a\u5747\u8f83\u52a3\u3002\n\n------------\n\n\u6811\u94fe\u5256\u5206\u540e\u53d1\u73b0\u6bcf\u4e00\u6761\u94fe\u7684\u8d21\u732e\u88ab\u5206\u6210\u4e86O($log^2n$)\u4e2a\u77e9\u5f62\u3002\n\n\u4e00\u4e2a\u663e\u7136\u7684\u65f6\u95f4O($nlog^3n$)\u7a7a\u95f4O($nlog^2n$)\u7b97\u6cd5\u5df2\u7ecf\u51fa\u73b0\u4e86\uff0c\u76f4\u63a5\u505a\u5c31\u662f\u5e73\u9762\u4e0a\u7684\u77e9\u5f62\u5e76\u95ee\u9898\u3002\n\n------------\n\n### \u77e9\u5f62\u5e76\u95ee\u9898\n\u5e73\u9762\u4e0a\u6709\u4e00\u5806\u77e9\u5f62\uff0c\u95ee\u4f60\u5176\u8986\u76d6\u7684\u603b\u9762\u79ef\u3002\n\n\u5dee\u5206\u4e00\u4e0b\uff0c\u5c06\u4e00\u4e2a\u77e9\u5f62\u53d8\u6210\u4e00\u4e2a\u5de6\u8fb9+1\u548c\u4e00\u4e2a\u53f3\u8fb9-1\u7684\u533a\u95f4\u3002\n\n\u626b\u63cf\u7ebf\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u6574\u4e2a\u533a\u95f4\u88ab\u5b8c\u6574\u8986\u76d6\u4e86\u51e0\u6b21\uff0c\u4ee5\u53ca\u533a\u95f4\u7684\u7b54\u6848\u3002\n\n\u5982\u679c\u8be5\u533a\u95f4\u6ca1\u6709\u88ab\u5b8c\u6574\u8986\u76d6\uff0c\u533a\u95f4\u7684\u7b54\u6848\u4e3a\u5de6\u513f\u5b50\u52a0\u53f3\u513f\u5b50\u7684\u7b54\u6848\u3002\n\n\u5426\u5219\u4e3a\u8be5\u533a\u95f4\u7684\u957f\u5ea6\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6O($nlogv$) (n\u4e3a\u77e9\u5f62\u4e2a\u6570\uff0cv\u4e3a\u5e73\u9762\u5927\u5c0f)\n\n------------\n\n\u6211\u4eec\u8003\u8651\u7528\u6811\u4e0a\u5dee\u5206\u6765\u4f18\u5316\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u6211\u4eec\u7684\u76ee\u6807\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u6c42\u51fa\u4ed6\u80fd\u5230\u7684\u70b9\u7684\u96c6\u5408\u3002\n\n\u5dee\u5206\u4e4b\u540e\uff0c\u95ee\u9898\u7531\u8282\u70b9\u672c\u8eab\u7ef4\u62a4\u7684\u4fe1\u606f\u53d8\u4e3a\u4e86\u4ee5\u8be5\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u6240\u7ef4\u62a4\u7684\u4fe1\u606f\u3002\n\n\u6211\u4eec\u5173\u5fc3\u7684\u662f\uff0c\u5982\u679c\u6211\u5df2\u7ecf\u77e5\u9053\u4e00\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u6240\u7ef4\u62a4\u7684\u4fe1\u606f\uff0c\u80fd\u5426\u5feb\u901f\u8f6c\u79fb\u5230\u4ed6\u81ea\u5df1\u672c\u8eab\u3002\n\n\u7ebf\u6bb5\u6811\u5408\u5e76\u4e0d\u5931\u4e3a\u4e00\u79cd\u9009\u62e9\u3002\n\n\u5bf9\u4e8e\u4e00\u6761\u8def\u5f84\uff0c\u8bbe\u5176\u4e24\u7aef\u7684\u70b9\u4e3ax\u548cy\u3002\n\n\u5728x\u5904\uff0c\u5bf9(x,y)\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u90fd+1\u3002\n\n\u5177\u4f53\u4e0a\u6765\u8bf4\uff0c\u5c31\u662f$log$\u4e2a\u533a\u95f4\uff08\u6811\u5256\uff09\u7684\u533a\u95f4\u52a0\u3002\n\n\u5728y\u5904\u540c\u7406\uff0c\u5bf9(x,y)\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u90fd+1\u3002\n\n\u5728lca(x,y)\u5904\uff0c\u5bf9(x,y)\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u90fd-1\u3002\n\n\u5728lca(x,y)\u7684\u7236\u4eb2\u5904\uff0c\u5bf9(x,y)\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u90fd-1\u3002\n\n\u7136\u540e\u76f4\u63a5\u66b4\u529b\u7ebf\u6bb5\u6811\u5408\u5e76\u5c31\u884c\u4e86\u3002\n\n\u65f6\u95f4O($nlog^2n$)\u7a7a\u95f4O($nlog^2n$)\n\n\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\uff08\u6570\u636e\u6ca1\u5361\uff09\u3002\n\n\u8003\u8651\u5bf9\u7a7a\u95f4\u590d\u6742\u5ea6\u8fdb\u884c\u4f18\u5316\uff1a\n\n\u4e00\u8fb9dfs\u4e00\u8fb9\u7edf\u8ba1\u7b54\u6848\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u53ef\u6301\u4e45\u5316\uff0c\u5408\u5e76\u5b8c\u7684\u548c\u65e7\u7684\u53ef\u4ee5\u5220\u53bb\u3002\n\n\u8003\u8651\u76f4\u63a5\u7ee7\u627f\u91cd\u513f\u5b50\u4fe1\u606f\uff0c\u4e0d\u5bf9\u91cd\u513f\u5b50\u5408\u5e76\u3002\n\n\u8fd9\u6837\u6bcf\u6761\u91cd\u94fe\u4e0a\u5176\u5b9e\u53ea\u4f1a\u6709\u4e00\u4e2a\u771f\u6b63\u7684\u7ebf\u6bb5\u6811\u3002\n\n\u6309dfs\u8fdb\u884c\u5408\u5e76\uff0c\u4efb\u610f\u4e00\u70b9\u5230\u6839\u4e0d\u8d85\u8fc7$logn$\u6761\u91cd\u94fe\u3002\n\n\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u5c31\u7b97\u662f\u6ee1\u7684\u4e5f\u53ea\u5360O($n$)\u7684\u7a7a\u95f4\u3002\n\n\u7136\u540e\u5c06\u5df2\u7ecf\u6ca1\u7528\u7684\u8282\u70b9\u653e\u8fdb\u5783\u573e\u7ad9\u4e2d\u8fdb\u884c\u56de\u6536\u5229\u7528\u3002\n\n\u5c31\u53ea\u7528\u5360$logn$\u4e2a\u7ebf\u6bb5\u6811\u7684\u7a7a\u95f4\u4e86\u3002\n\n\u65f6\u95f4O($nlog^2n$)\u7a7a\u95f4O($nlogn$)\n\nps:(x,x)\u5bf9\u7b54\u6848\u8d21\u732e\u4e3a0\uff0c\u4f46\u6211\u4eec\u4f1a\u7b97\u4e0a\uff0c\u9700\u8981\u51cf\u53bb\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define pii pair<int,int>\n#define fi first\n#define se second\nusing namespace std;\nconst int maxn=100010;\nconst int maxm=maxn*100;\nint read(){\n    int tot=0,fh=1;\n    char c=getchar();\n    while ((c<'0')||(c>'9')){ if (c=='-') fh=-1; c=getchar(); }\n    while ((c>='0')&&(c<='9')){ tot=tot*10+c-'0'; c=getchar(); }\n    return tot*fh;\n}\nint i,j,k;\nint n,m,x,y,z;\nlong long ans;\nint f1[maxn],f2[maxn*2],f3[maxn*2],th;\nvoid add(int x,int y){ th++; f2[th]=y; f3[th]=f1[x]; f1[x]=th; }\nint dept[maxn],dfn[maxn],low[maxn],tim,siz[maxn],son[maxn],tp[maxn],faa[maxn],ha[maxn],tag[maxn];\nvector <pii> A[maxn],D1[maxn],D2[maxn];\nvoid dfs1(int x,int fa){\n    faa[x]=fa; dept[x]=dept[fa]+1; siz[x]=1;\n    for (int i=f1[x];i;i=f3[i]){\n        if (fa!=f2[i]){ dfs1(f2[i],x); siz[x]=siz[x]+siz[f2[i]]; if (siz[son[x]]<siz[f2[i]]) son[x]=f2[i]; }\n    }\n}\nvoid dfs2(int x,int fa){\n    tim++; dfn[x]=tim; tp[x]=fa; ha[tim]=x;\n    if (son[x]!=0) dfs2(son[x],fa);\n    for (int i=f1[x];i;i=f3[i]){\n        if ((f2[i]!=faa[x])&&(f2[i]!=son[x])) dfs2(f2[i],f2[i]);\n    } low[x]=tim;\n}\nint lca(int x,int y){\n    while (tp[x]!=tp[y]) if (dept[tp[x]]>dept[tp[y]]) x=faa[tp[x]]; else y=faa[tp[y]];\n    if (dept[x]>dept[y]) return y; else return x;\n}\nint rot[maxn];\nstruct SegmentTree{\n    int ls[maxm],rs[maxm],tot[maxm],fla[maxm];\n    int th,thi[maxm];\n    void updata(int x,int l,int r){ if (fla[x]) tot[x]=r-l+1; else tot[x]=tot[ls[x]]+tot[rs[x]]; }\n    int changge(int x,int l,int r,int ll,int rr,int w){\n        if ((rr<l)||(r<ll)) return x;\n        int mid=(l+r)>>1,t=thi[th]; thi[th]=0; th--;\n        ls[t]=ls[x]; rs[t]=rs[x]; tot[t]=tot[x]; fla[t]=fla[x]; ls[x]=0; rs[x]=0; tot[x]=0; fla[x]=0; if (x){ th++; thi[th]=x; }\n        if ((ll<=l)&&(r<=rr)){ fla[t]=fla[t]+w; updata(t,l,r); return t; }\n        ls[t]=changge(ls[t],l,mid,ll,rr,w); rs[t]=changge(rs[t],mid+1,r,ll,rr,w); updata(t,l,r); return t;\n    }\n    int merge(int x,int y,int l,int r){\n        if (x==0) return y;\n        if (y==0) return x;\n        int t,mid=(l+r)>>1; t=thi[th]; thi[th]=0; th--;\n        if (l==r){\n            fla[t]=fla[x]+fla[y]; updata(t,l,r);\n            ls[x]=0; rs[x]=0; tot[x]=0; fla[x]=0; if (x){ th++; thi[th]=x; }\n            ls[y]=0; rs[y]=0; tot[y]=0; fla[y]=0; if (y){ th++; thi[th]=y; }\n            return t;\n        }\n        ls[t]=merge(ls[x],ls[y],l,mid); rs[t]=merge(rs[x],rs[y],mid+1,r); fla[t]=fla[x]+fla[y]; updata(t,l,r);\n        ls[x]=0; rs[x]=0; tot[x]=0; fla[x]=0; if (x){ th++; thi[th]=x; }\n        ls[y]=0; rs[y]=0; tot[y]=0; fla[y]=0; if (y){ th++; thi[th]=y; }\n        return t;\n    }\n}tre;\nvoid solve(int rt,int x,int y,int w){\n    while (tp[x]!=tp[y]){\n        if (dept[tp[x]]<dept[tp[y]]) swap(x,y);\n        rot[rt]=tre.changge(rot[rt],1,n,dfn[tp[x]],dfn[x],w);\n        x=faa[tp[x]];\n    }\n    if (dept[x]>dept[y]) swap(x,y);\n    rot[rt]=tre.changge(rot[rt],1,n,dfn[x],dfn[y],w);\n}\nvoid dfs(int x){\n    if (son[x]!=0){ dfs(son[x]); tag[x]=tag[x]+tag[son[x]]; rot[x]=rot[son[x]]; }\n    for (int i=f1[x];i;i=f3[i]){\n        if ((f2[i]!=faa[x])&&(f2[i]!=son[x])){ dfs(f2[i]); tag[x]=tag[x]+tag[f2[i]]; rot[x]=tre.merge(rot[x],rot[f2[i]],1,n); }\n    }\n    for (int i=0;i<A[x].size();i++) solve(x,A[x][i].fi,A[x][i].se,1);\n    for (int i=0;i<D1[x].size();i++) solve(x,D1[x][i].fi,D1[x][i].se,-1);\n    for (int i=0;i<D2[x].size();i++) solve(x,D2[x][i].fi,D2[x][i].se,-2);\n    ans=ans+tre.tot[rot[x]];\n    if (tag[x]>0) ans--;\n}\nint main(){\n//\tfreopen(\"language.in\",\"r\",stdin);\n//\tfreopen(\"language.out\",\"w\",stdout);\n    \n    n=read(); m=read();\n    for (i=1;i<n;i++){\n        x=read(); y=read();\n        add(x,y); add(y,x);\n    }\n    for (i=1;i<maxm;i++){ tre.thi[i]=i; tre.th++; }\n    dfs1(1,0);\n    dfs2(1,0);\n    for (i=1;i<=m;i++){\n        x=read(); y=read(); if (x==y) continue;\n        z=lca(x,y); if (z==y) swap(x,y);\n        if (z==x){\n            tag[y]++; tag[faa[x]]--;\n            A[y].push_back(pii(x,y));\n            D1[faa[x]].push_back(pii(x,y));\n        }\n        else{\n            tag[x]++; tag[y]++; tag[z]--; tag[faa[z]]--;\n            A[x].push_back(pii(x,y));\n            A[y].push_back(pii(x,y));\n            D2[faa[z]].push_back(pii(x,y));\n        }\n    }\n    dfs(1);\n    printf(\"%lld\\n\",ans/2);\n    \n    return 0;\n}\n/*\n5 3\n1 2\n1 3\n3 4\n3 5\n3 4\n1 4\n2 5\n\n*/\n```\n",
        "postTime": 1556635891,
        "uid": 20310,
        "name": "\u8f6e\u56de\u4e4b\u7ec8\u672b",
        "ccfLevel": 0,
        "title": "\u6811\u94fe\u5256\u5206+\u6811\u4e0a\u5dee\u5206+\u7ebf\u6bb5\u6811\u5408\u5e76"
    },
    {
        "content": "~~3\u4e2alog\u5728ZJOI\u8001\u5e74\u673a\u4e0aT\u98de~~\n\n\u6765\u8bb2\u4e00\u8bb2\u6211\u7684\u8003\u573a\u505a\u6cd5\u5427\u3002\n\n\u8003\u8651\u5bf9\u6bcf\u4e2a\u70b9\uff0c\u6c42\u6709\u591a\u5c11\u4e2a\u70b9\u548c\u5b83\u5728\u540c\u4e00\u6761\u94fe\u4e2d\u3002\n\n\u76f8\u5f53\u4e8e\uff0c\u5bf9\u6bcf\u4e2a\u70b9\uff0c\u6c42\u7ecf\u8fc7\u8fd9\u4e2a\u70b9\u7684\u94fe\u8986\u76d6\u7684\u70b9\u7684\u4e2a\u6570\u3002\n\n\u8003\u8651\u6811\u94fe\u5256\u5206\u3002\u5bf9\u6bcf\u6761\u94fe\uff0c\u5206\u6210\u4e0d\u8d85\u8fc7$\\log n$\u4e2a\u533a\u95f4\u3002\n\n\u5bf9\u8fd9\u6761\u94fe\u7ecf\u8fc7\u7684\u6240\u6709\u70b9\uff0c\u8fd9\u6761\u94fe\u90fd\u662f\u6709\u8d21\u732e\u7684\u3002\n\n\u6211\u4eec\u8003\u8651\u7ebf\u6bb5\u6811\u5206\u6cbb\uff0c\u5c06\u6bcf\u6bb5\u533a\u95f4\u90fd\u653e\u5230\u7ebf\u6bb5\u6811\u4e0a\u9762\u53bb\u3002\n\n\u7136\u540e\u904d\u5386\u7ebf\u6bb5\u6811\uff0c\u540c\u65f6\u7528```set```\u52a8\u6001\u7ef4\u62a4\u4e00\u4e0b\u5f53\u524d\u8fd9\u4e9b\u94fe\u6784\u6210\u7684\u865a\u6811\u5927\u5c0f\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log^3 n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(n\\log^2 n)$\u3002\n\n\u4ee5\u4e0b\u4e3a\u8003\u573a60\u5206\uff0c\u53bb\u6389\u6587\u4ef6\u540e\u7684AC\u4ee3\u7801\u3002\n\n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<set>\nchar buf[(int)1e7],*ss=buf;\ninline int readint(){\n\tint d=0;\n\twhile(!isdigit(*ss))++ss;\n\twhile(isdigit(*ss))d=d*10+(*ss++^'0');\n\treturn d;\n}\nconst int N=1e5+6;\nint s[N],t[N],n,head[N],cnt,dep[N],dfn[N],top[N],sz[N],son[N],fa[N],idfn[N],idx,m,hh[N<<2],tt;\ntypedef long long LL;\nLL ans=0;\nstruct edge{\n\tint to,nxt;\n}e[N<<1],f[N*400];\nvoid dfs(int now){\n\tsz[now]=1,son[now]=0;\n\tfor(int i=head[now];i;i=e[i].nxt)\n\tif(!dep[e[i].to]){\n\t\tdep[e[i].to]=dep[now]+1,fa[e[i].to]=now;\n\t\tdfs(e[i].to);\n\t\tsz[now]+=sz[e[i].to];\n\t\tif(!son[now]||sz[son[now]]<sz[e[i].to])son[now]=e[i].to;\n\t}\n}\nvoid dfs2(int now){\n\tidfn[dfn[now]=++idx]=now;\n\tif(son[now])top[son[now]]=top[now],dfs2(son[now]);\n\tfor(int i=head[now];i;i=e[i].nxt)\n\tif(e[i].to!=son[now]&&dep[e[i].to]>dep[now])dfs2(top[e[i].to]=e[i].to);\n}\nvoid add(int l,int r,int o,const int&L,const int&R,const int&id){\n\tif(L<=l&&r<=R)f[++tt]=(edge){id,hh[o]},hh[o]=tt;else{\n\t\tconst int mid=l+r>>1;\n\t\tif(L<=mid)add(l,mid,o<<1,L,R,id);\n\t\tif(mid<R)add(mid+1,r,o<<1|1,L,R,id);\n\t}\n}\nvoid modify(int x,int y,int id){\n\twhile(top[x]!=top[y])\n\tif(dep[top[x]]>dep[top[y]]){\n\t\tadd(1,n,1,dfn[top[x]],dfn[x],id);\n\t\tx=fa[top[x]];\n\t}else{\n\t\tadd(1,n,1,dfn[top[y]],dfn[y],id);\n\t\ty=fa[top[y]];\n\t}\n\tif(dep[x]<dep[y])add(1,n,1,dfn[x],dfn[y],id);else\n\tadd(1,n,1,dfn[y],dfn[x],id);\n}\ninline int LCA(int x,int y){\n\twhile(top[x]!=top[y])\n\tif(dep[top[x]]>dep[top[y]])x=fa[top[x]];else y=fa[top[y]];\n\treturn dep[x]<dep[y]?x:y;\n}\nnamespace tree{\n\tint CNT[N];\n\tstd::set<int>s;\n\ttypedef std::set<int>::iterator iter;\n\tint tot=0,rt;\n\tinline void add(int x){\n\t\tif(CNT[x]++)return;\n\t\tif(s.size()==0){\n\t\t\ts.insert(dfn[x]);tot=1;rt=x;\n\t\t\treturn;\n\t\t}\n\t\titer nxt=s.lower_bound(dfn[x]),pre;\n\t\tif(nxt==s.begin()){\n\t\t\tconst int lca=LCA(x,idfn[*nxt]);\n\t\t\tif(LCA(x,rt)==rt)\n\t\t\ttot+=dep[x]-dep[lca];else{\n\t\t\t\ttot+=dep[x]-dep[lca]+dep[rt]-dep[lca];\n\t\t\t\trt=lca;\n\t\t\t}\n\t\t\ts.insert(dfn[x]);\n\t\t\treturn;\n\t\t}\n\t\tpre=--nxt;++nxt;\n\t\tif(nxt==s.end()){\n\t\t\tconst int lca=LCA(x,idfn[*pre]);\n\t\t\tif(LCA(x,rt)==rt)\n\t\t\ttot+=dep[x]-dep[lca];else{\n\t\t\t\ttot+=dep[x]-dep[lca]+dep[rt]-dep[lca];\n\t\t\t\trt=lca;\n\t\t\t}\n\t\t\ts.insert(dfn[x]);\n\t\t\treturn;\n\t\t}\n\t\tconst int lca1=LCA(x,idfn[*pre]),lca2=LCA(x,idfn[*nxt]);\n\t\tif(dep[lca1]>dep[lca2])tot+=dep[x]-dep[lca1];else tot+=dep[x]-dep[lca2];\n\t\ts.insert(dfn[x]);\n\t}\n\tinline void del(int x){\n\t\tif(--CNT[x])return;\n\t\ts.erase(dfn[x]);\n\t\tif(s.size()==0){\n\t\t\trt=tot=0;\n\t\t\treturn;\n\t\t}\n\t\trt=LCA(idfn[*s.begin()],idfn[*s.rbegin()]);\n\t\titer nxt=s.lower_bound(dfn[x]),pre;\n\t\tif(nxt==s.begin()){\n\t\t\tconst int lca=LCA(x,idfn[*nxt]);\n\t\t\tif(LCA(x,rt)==rt)\n\t\t\ttot-=dep[x]-dep[lca];else\n\t\t\ttot-=dep[x]-dep[lca]+dep[rt]-dep[lca];\n\t\t\treturn;\n\t\t}\n\t\tpre=--nxt;++nxt;\n\t\tif(nxt==s.end()){\n\t\t\tconst int lca=LCA(x,idfn[*pre]);\n\t\t\tif(LCA(x,rt)==rt)\n\t\t\ttot-=dep[x]-dep[lca];else\n\t\t\ttot-=dep[x]-dep[lca]+dep[rt]-dep[lca];\n\t\t\treturn;\n\t\t}\n\t\tconst int lca1=LCA(x,idfn[*pre]),lca2=LCA(x,idfn[*nxt]);\n\t\tif(dep[lca1]>dep[lca2])tot-=dep[x]-dep[lca1];else tot-=dep[x]-dep[lca2];\n\t}\n}\nvoid solve(int l,int r,int o){\n\tfor(int i=hh[o];i;i=f[i].nxt)\n\ttree::add(s[f[i].to]),tree::add(t[f[i].to]);\n\tif(l==r)ans+=tree::tot?tree::tot-1:0;else{\n\t\tconst int mid=l+r>>1;\n\t\tsolve(l,mid,o<<1),solve(mid+1,r,o<<1|1);\n\t}\n\tfor(int i=hh[o];i;i=f[i].nxt)\n\ttree::del(s[f[i].to]),tree::del(t[f[i].to]);\n}\nint main(){\n\tbuf[fread(buf,1,(int)1e7-1,stdin)]='\\n';\n\tfclose(stdin);\n\tn=readint(),m=readint();\n\tfor(int i=1;i<n;++i){\n\t\tint u=readint(),v=readint();\n\t\te[++cnt]=(edge){v,head[u]},head[u]=cnt;\n\t\te[++cnt]=(edge){u,head[v]},head[v]=cnt;\n\t}\n\tdfs(dep[1]=1),dfs2(1);\n\tfor(int i=1;i<=m;++i)\n\tmodify(s[i]=readint(),t[i]=readint(),i);\n\tsolve(1,n,1);\n\tprintf(\"%lld\\n\",ans>>1);\n\treturn 0;\n}\n```",
        "postTime": 1556604416,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5327 \u3010[ZJOI2019]\u8bed\u8a00\u3011"
    },
    {
        "content": "\u8003\u8651\u6811\u4e0a\u5dee\u5206\u3002\u52a0\u5165\u4e00\u4e2a\u8bed\u8a00\u6216\u5220\u9664\u4e00\u4e2a\u8bed\u8a00\u3002\u5148\u5bf9\u6574\u68f5\u6811\u6811\u5256\uff0c\u95ee\u9898\u53d8\u4e3a\u533a\u95f4\u52a0\u548c\u8be2\u95ee\u5168\u5c40 $\\geq 1$ \u7684\u4e2a\u6570\u3002\n\n\u8003\u8651\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u548c\u6700\u5c0f\u503c\u7684\u6570\u91cf\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u76f4\u63a5\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4\u3002\u6ce8\u610f\u5230\u603b\u5171\u6709 $O(n\\log n)$ \u6b21\u7ebf\u6bb5\u6811\u4fee\u6539\u3002\n\n\u7136\u540e\u3002\u3002\u3002\u76f4\u63a5\u7ebf\u6bb5\u6811\u5408\u5e76\u5c31\u53ef\u4ee5\u505a\u5230 $O(n\\log^2n)$ \u4e86\u3002\n```cpp\n#include<cstdio>\n#include<vector>\nconst int M=1e5+5;\nint n,m,dfc,cnt,tot,h[M],sz[M],rt[M];long long sum;\nint f[M],d[M],dfn[M],son[M],siz[M],top[M];\nint tp,stk[M*18];\nstruct mdf{\n\tint L,R,V;\n};std::vector<mdf>p[M];\nstruct Edge{\n\tint v,nx;\n}e[M<<1];\nstruct Node{\n\tint L,R;int mi,cnt;int tag;\n}t[M*18];\ninline void Add(const int&u,const int&v){\n\te[++cnt]=(Edge){v,h[u]};h[u]=cnt;\n\te[++cnt]=(Edge){u,h[v]};h[v]=cnt;\n}\ninline void Erase(const int&u){\n\tt[u].L=t[u].R=t[u].mi=t[u].cnt=t[u].tag=0;stk[++tp]=u;\n}\ninline int t42d(const int&mi,const int&cnt){\n\tconst int u=tp?stk[tp--]:++tot;t[u].L=t[u].R=t[u].tag=0;t[u].mi=mi;t[u].cnt=cnt;return u;\n}\ninline void update(const int&u,const int&L=1,const int&R=n){\n\tconst int&mid=L+R>>1;int Lmi(0),Lcnt(mid-L+1),Rmi(0),Rcnt(R-mid);\n\tif(t[u].L)Lmi=t[t[u].L].mi,Lcnt=t[t[u].L].cnt;Lmi+=t[u].tag;\n\tif(t[u].R)Rmi=t[t[u].R].mi,Rcnt=t[t[u].R].cnt;Rmi+=t[u].tag;\n\tif(Lmi==Rmi)t[u].mi=Lmi,t[u].cnt=Lcnt+Rcnt;\n\telse if(Lmi>Rmi)t[u].mi=Rmi,t[u].cnt=Rcnt;\n\telse t[u].mi=Lmi,t[u].cnt=Lcnt;\n}\ninline void Mdf(int&u,const int&l,const int&r,const int&V,const int&L=1,const int&R=n){\n\tif(l>R||L>r)return;if(!u)u=t42d(0,R-L+1);\n\tif(l<=L&&R<=r)return t[u].mi+=V,t[u].tag+=V,void();\n\tconst int&mid=L+R>>1;Mdf(t[u].L,l,r,V,L,mid);Mdf(t[u].R,l,r,V,mid+1,R);update(u,L,R);\n}\ninline void Merge(int&q,const int&p,const int&L=1,const int&R=n){\n\tif(!q||!p)return q|=p,void();t[q].tag+=t[p].tag;\n\tif(!t[q].L&&!t[q].R&&!t[p].L&&!t[p].R)return t[q].mi+=t[p].mi,Erase(p);\n\tconst int&mid=L+R>>1;Merge(t[q].L,t[p].L,L,mid);Merge(t[q].R,t[p].R,mid+1,R);update(q,L,R);Erase(p);\n}\ninline void DFS1(const int&u){\n\td[u]=d[f[u]]+1;siz[u]=1;\n\tfor(int v,E=h[u];E;E=e[E].nx)if((v=e[E].v)^f[u]){\n\t\tf[v]=u;DFS1(v);siz[u]+=siz[v];if(siz[v]>siz[son[u]])son[u]=v;\n\t}\n}\ninline void DFS2(const int&u,const int&tp){\n\ttop[u]=tp;dfn[u]=++dfc;if(!son[u])return;DFS2(son[u],tp);\n\tfor(int E=h[u];E;E=e[E].nx)if(e[E].v^f[u]&&e[E].v^son[u])DFS2(e[E].v,e[E].v);\n}\ninline int LCA(int u,int v){\n\twhile(top[u]^top[v])d[top[u]]>d[top[v]]?u=f[top[u]]:v=f[top[v]];return d[u]>d[v]?v:u;\n}\ninline void Solve(const int&u){\n\tfor(int v,E=h[u];E;E=e[E].nx)if((v=e[E].v)^f[u])Solve(v),Merge(rt[u],rt[v]),sz[u]+=sz[v];\n\tfor(mdf&it:p[u])Mdf(rt[u],it.L,it.R,it.V),sz[u]+=it.V;std::vector<mdf>().swap(p[u]);\n\tif(sz[u])sum+=n-(!t[rt[u]].mi?t[rt[u]].cnt:0)-1;\n}\nsigned main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int u,v,i=1;i<n;++i)scanf(\"%d%d\",&u,&v),Add(u,v);DFS1(1);DFS2(1,1);\n\twhile(m--){\n\t\tint u,v,c,x,y;scanf(\"%d%d\",&u,&v);c=LCA(u,v);x=u;y=v;\n\t\twhile(top[x]^top[y]){\n\t\t\tif(d[top[x]]>d[top[y]]){\n\t\t\t\tp[u].push_back((mdf){dfn[top[x]],dfn[x],1});p[v].push_back((mdf){dfn[top[x]],dfn[x],1});\n\t\t\t\tp[f[c]].push_back((mdf){dfn[top[x]],dfn[x],-2});x=f[top[x]];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tp[u].push_back((mdf){dfn[top[y]],dfn[y],1});p[v].push_back((mdf){dfn[top[y]],dfn[y],1});\n\t\t\t\tp[f[c]].push_back((mdf){dfn[top[y]],dfn[y],-2});y=f[top[y]];\n\t\t\t}\n\t\t}\n\t\tif(d[x]>d[y])x^=y^=x^=y;\n\t\tp[u].push_back((mdf){dfn[x],dfn[y],1});p[v].push_back((mdf){dfn[x],dfn[y],1});\n\t\tp[f[c]].push_back((mdf){dfn[x],dfn[y],-2});\n\t}\n\tSolve(1);printf(\"%lld\",sum>>1);\n}\n```",
        "postTime": 1648194464,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u6570\u636e\u7ed3\u6784 \u6811\u5256+\u7ebf\u6bb5\u6811\u5408\u5e76 P5327\u9898\u89e3"
    },
    {
        "content": "\u6211\u7adf\u7136\u80fd\u72ec\u7acb\u60f3\u51fa\u6765\uff08\uff09\n\n\u9996\u5148\u6811\u4e0a\u7edf\u8ba1\u70b9\u5bf9\u95ee\u9898\u8003\u8651 dfs \u4e00\u904d\u987a\u4fbf\u7edf\u8ba1\uff0c\u518d\u52a0\u4e0a\u6570\u636e\u7ed3\u6784\u4e4b\u7c7b\u7684\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u7b2c $i$ \u79cd\u8bed\u8a00\uff0c$x,y$ \u80fd\u5f00\u5c55\u8d38\u6613\u8bf4\u660e\u90fd\u88ab $i$ \u8986\u76d6\u5230\u4e86\u3002\u8003\u8651\u6bcf\u79cd\u8bed\u8a00\u8986\u4e00\u4e2a\u989c\u8272\uff1f\n\n\u4e0d\u9700\u8981\u3002\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e $x$ \u6211\u4eec\u53ea\u5173\u5fc3\u6267\u884c\u4e86\u6240\u6709\u8ddf $x$ \u6709\u5173\u7684\u8986\u76d6\u64cd\u4f5c\uff08\u5373\u8986\u76d6\u5230 $x$\uff09\u540e\u88ab\u8986\u76d6\u7684\u70b9\u7684\u5e76\u96c6\u7684\u5927\u5c0f\u3002\u5bf9\u6b64\u76f4\u63a5\u6811\u4e0a\u5dee\u5206\u4e0b\u5373\u53ef\u3002\n\n\u8003\u8651\u7c7b\u865a\u6811\uff0c\u6211\u4eec\u73b0\u5728\u6c42\u51fa\u4e00\u4e2a\u96c6\u5408 $S=\\{x|x\\text{\u662f\u6bcf\u6b21\u8986\u76d6\u64cd\u4f5c\u7684\u7aef\u70b9}\\}$,\u6309 dfs \u5e8f\u6392\u5e8f\uff0c\u90a3\u4e48\u4ed6\u4eec\u76f8\u4e92\u95f4\u7684\u8def\u5f84\u7684\u5e76\u96c6\u7684\u5927\u5c0f\u5c31\u662f $\\sum_{x\\in S}dep[x]-\\sum_{x,y\\in S,\\text{x,y\u76f8\u90bb}}dep[LCA(x,y)]$\u3002\uff08\u6ce8\u610f 1,n \u4e5f\u7b97\u76f8\u90bb\uff09\u8003\u8651\u5bf9\u5f53\u524d\u904d\u5386\u5230\u7684\u70b9\u7684\u8d21\u732e\u5c31\u4e3a\u6b64\u3002\uff08\u70b9\u6570\u7b49\u4e8e\u8fb9\u6570 +1\uff0c\u4f46\u8981\u51cf\u53bb\u672c\u8eab\uff09\n\n\u8fd9\u4e2a\u5f0f\u5b50\u753b\u4e2a\u56fe\u5c31\u80fd\u53d1\u73b0\uff0c\u9700\u8981\u8bb0\u5fc6\u4e0b\u3002\n\n\u90a3\u4e48\u5982\u4f55\u7ef4\u62a4\u8fd9\u4e2a\u5f0f\u5b50\uff1f\u6211\u4eec\u53ea\u9700\u8981 ```multiset+\u542f\u53d1\u5f0f\u5408\u5e76``` \u5373\u53ef\u3002\n\n\u81f3\u4e8e\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u662f ```multiset```\uff0c\u56e0\u4e3a\u7528 ```set``` \u7684\u8bdd\u5047\u5982\u91cd\u590d\u4e86\u5728\u6b64\u5220\u53bb\uff0c\u56de\u6eaf\u540e\u5c31\u65e0\u4e86 ~~\uff08\u597d\u5427\uff0c\u6211\u672c\u6765\u4e5f\u7528 ```set``` \u7684\uff0c\u76f4\u5230\u8fc7\u4e0d\u53bb\u6837\u4f8b\uff09~~\u3002\u81f3\u4e8e\u91cd\u590d\u70b9\u7684\u8bdd\uff0c\u663e\u7136\u5bf9\u4e8e\u7b54\u6848\u4e0d\u4f1a\u6709\u5f71\u54cd\uff0c\u56e0\u4e3a\u52a0\u4e86\u91cd\u590d\u70b9\uff0c\u53c8\u51cf\u53bb\u5b83\u4fe9\u7684 LCA\u3002\n\n\u5148\u8003\u8651\u66b4\u529b\u5408\u5e76\u5b50\u6811\u7b54\u6848\u3002\u52a0\u5165\u4e00\u4e2a\u70b9\uff0c\u53ea\u9700\u8981\u8003\u8651\u524d\u9a71\u540e\u9a71\u7684\u5f71\u54cd\u3002\u5220\u9664\u4e5f\u540c\u6837\u3002\n\n\u81f3\u4e8e\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u8bdd\uff0c```swap``` \u4e4b\u540e\uff0c\u8981\u628a y \u7684\u7b54\u6848\u8d4b\u7ed9 x \u5373\u53ef\uff0c\u4f46\u8fd9\u91cc\u6709\u4e2a\u7ec6\u8282\uff0c\u8d4b\u7684\u7b54\u6848\u4e0d\u80fd\u51cf\u53bb 1,n \u76f8\u90bb\u7684\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\n#define pb push_back\nusing namespace std;\n#define N (int)(1e5+5)\nvector<int>g[N];\nint n,m;\n\nnamespace SP {\n\tint fa[N],sz[N],top[N],son[N],dep[N],id[N],tot;\n\tvoid dfs1(int x,int ff) {\n\t\tfa[x]=ff; dep[x]=dep[ff]+1; sz[x]=1;\n\t\tfor(int y:g[x]) {\n\t\t\tif(y==ff) continue;\n\t\t\tdfs1(y,x); sz[x]+=sz[y];\n\t\t\tif(sz[y]>sz[son[x]]) son[x]=y;\n\t\t}\n\t}\n\tvoid dfs2(int x,int tp) {\n\t\ttop[x]=tp; id[x]=++tot;\n\t\tif(son[x]) dfs2(son[x],tp);\n\t\tfor(int y:g[x]) {\n\t\t\tif(y==fa[x]||y==son[x]) continue;\n\t\t\tdfs2(y,y);\n\t\t} \n\t}\n\tvoid init() {\n\t\tdfs1(1,0); dfs2(1,1);\n\t}\n\tint LCA(int x,int y) {\n\t\twhile(top[x]!=top[y]) {\n\t\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\t\tx=fa[top[x]];\n\t\t}\n\t\treturn dep[x]<dep[y]?x:y;\n\t}\n\tint dist(int x,int y) {\n\t\treturn dep[x]+dep[y]-2*dep[LCA(x,y)];\n\t}\n}\nusing namespace SP;\nvector<pair<int,int> >vec[N];\n\nvoid modify(int x,int y) {\n\tint d=LCA(x,y);\n\tvec[x].pb(make_pair(x,1));\n\tvec[x].pb(make_pair(y,1));\n\tvec[y].pb(make_pair(x,1));\n\tvec[y].pb(make_pair(y,1));\n\tif(fa[d]) vec[fa[d]].pb(make_pair(y,-1)),vec[fa[d]].pb(make_pair(x,-1));\n}\nstruct cmp {\n\tbool operator () (int x,int y) {\n\t\treturn id[x]<id[y];\n\t}\n}; \nmultiset<int,cmp>s[N]; //\u8fd9\u91cc\u7528 multiset \u7684\u539f\u56e0\u4e8b\u5b9e\u4e0a\u662f\u4e3a\u4e86\u9632\u6b62\u6b64\u5904\u5220\u6389 i \u4f46\u662f\u56de\u6eaf\u8fc7\u53bb\u8fd8\u6709 i\uff0c \u591a\u4e2a i \u6392\u5e8f\u540e\u5728\u4e00\u8d77\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd \nint ans[N],dans[N];\n\nvoid ins(int x,int i) {\n//\tif(x==4) cout<<\"ins \"<<i<<endl;\n\tauto nex=s[x].lower_bound(i),las=nex; int qwq=0; \n\tif(las!=s[x].begin()) {\n\t\t--las; \n\t//\tif(x==4) cout<<*las<<\" las i \"<<i<<\" \"<<dep[LCA(*las,i)]<<endl;\n\t\t++qwq,ans[x]-=dep[LCA(*las,i)];\n\t}\n\tif(nex!=s[x].end()) {\n\t//\tif(x==4) cout<<*nex<<\" nex i \"<<i<<\" \"<<dep[LCA(*nex,i)]<<endl;\n\t\t++qwq; ans[x]-=dep[LCA(*nex,i)];\n\t}\n\tif(qwq==2) {\n\t//\tif(x==4) cout<<*las<<\" las nex \"<<*nex<<\" \"<<dep[LCA(*las,*nex)]<<endl;\n\t\tans[x]+=dep[LCA(*las,*nex)];\n\t}\n\ts[x].insert(i); ans[x]+=dep[i];\n}\n\nvoid del(int x,int i) {\n\tauto it=s[x].find(i),nex=it,las=it; int qwq=0;\n\tif(nex!=s[x].end()) {\n\t\t++nex; if(nex!=s[x].end()) ++qwq,ans[x]+=dep[LCA(i,*nex)];\n\t}\n\tif(las!=s[x].begin()) {\n\t\t--las; if(las!=s[x].begin()) ++qwq,ans[x]+=dep[LCA(i,*las)];\t\t\n\t}\n\tif(qwq==2) ans[x]-=dep[LCA(*las,*nex)];\n\ts[x].erase(s[x].find(i)); ans[x]-=dep[i];\n}\n\nvoid dfs(int x,int ff) {\n\tfor(int y:g[x]) {\n\t\tif(y==ff) continue;\n\t\tdfs(y,x);\n\t\tif(s[y].size()>s[x].size()) s[x].swap(s[y]),ans[x]=ans[y];\n\t\t//ans[x]+=ans[y];\n\t\tfor(int i:s[y]) {\n\t\t\tins(x,i);\n\t\t}\n\t}\n//\ts[x].insert(x);\n\t/*for(int i:s[x]) {\n\t\tcout<<x<<\" : pre : \"<<i<<'\\n';\n\t}*/\n\tfor(auto i:vec[x]) {\n\t\tif(i.second==1) {\n\t\t\tins(x,i.first);\n\t\t\tif(x==4) {\n\t\t\t//\tcout<<i.first<<\" \";\n\t\t\t}\n\t\t}\n\t\telse del(x,i.first),del(x,i.first);\n\t}\n\tif(x==4) {\n\t/*\tcout<<'\\n';\n\t\tfor(int i:s[x]) cout<<i<<\" \";*/\n\t}\n\tif(s[x].size()>=2) {\n\t\tauto p=s[x].end(); --p; \n\t//\tif(x==4) cout<<dep[LCA(*s[x].begin(),*p)]<<\":\\n\";\n\t\tdans[x]-=dep[LCA(*s[x].begin(),*p)];\n\t}\n\t/*if(s[x].size()>=2) {\n\t\tans[x]-=dist(*s[x].begin(),*s[x].end());\n\t}*/\n/*\ttmp.clear();\n\tfor(int i:s[x]) {\n\t\ttmp.pb(i);\n\t}\n\tsort(tmp.begin(),tmp.end(),cmp);\n\tfor(int i=0;i<tmp.size();i++) ans+=dep[tmp[i]];\n\tfor(int i=1;i<tmp.size();i++) ans-=dep[LCA(tmp[i-1],tmp[i])];\n\tint d=0;\n\tfor(int i=1;i<tmp.size();i++) {\n\t\tif(!d) d=LCA(tmp[i-1],tmp[i]); else d=LCA(d,tmp[i]);\n\t}\n\tif(d) ans-=dep[d];*/\n}\n\nsigned main() {\n//\tfreopen(\"language5.in\",\"r\",stdin);\n\tcin.tie(0);\n\tstd::ios::sync_with_stdio(false);\n\tcin>>n>>m;\n\tfor(int i=1;i<n;i++) {\n\t\tint x,y; cin>>x>>y;\n\t\tg[x].pb(y); g[y].pb(x);\n\t}\n\tSP::init();\n\twhile(m--) {\n\t\tint x,y; cin>>x>>y;\n\t\tmodify(x,y);\n\t}\n\tdfs(1,0); int res=0;\n\tfor(int i=1;i<=n;i++) res+=ans[i]+dans[i];\n\t//for(int i=1;i<=n;i++) cout<<ans[i]<<' '; \n\tcout<<res/2;\n//\tcout<<ans[4];\n\treturn 0;\n}\n```",
        "postTime": 1643133623,
        "uid": 125901,
        "name": "FxorG",
        "ccfLevel": 7,
        "title": "\u3010DS\u3011P5327 [ZJOI2019]\u8bed\u8a00"
    },
    {
        "content": "\u5b89\u5229\u4e2a\u4eba blog\uff1ahttps://www.cnblogs.com/ET2006/\n\n\u9996\u5148\uff0c\u5f88\u5bb9\u6613\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff0c\u90a3\u5c31\u662f\u6240\u6709 $u$ \u80fd\u591f\u5230\u8fbe\u7684\u70b9\u90fd\u4f1a\u6784\u6210\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u800c\u8fd9\u4e2a\u8fde\u901a\u5757\u8fb9\u754c\u4e0a\u7684\u70b9\u90fd\u662f\u67d0\u6761\u7ecf\u8fc7 $u$ \u7684\u8def\u5f84\u7684\u7aef\u70b9\u3002\n\n\u4e8e\u662f\u53ea\u9700\u7ef4\u62a4\u6240\u6709\u7ecf\u8fc7 $u$ \u7684\u8def\u5f84\u7684\u7aef\u70b9\u7684\u865a\u6811\u5373\u53ef\uff0c\u90a3\u4e48 $u$ \u80fd\u5230\u8fbe\u7684\u70b9\u7684\u4e2a\u6570\u5c31\u662f\u865a\u6811\u4e2d\u8fb9\u7684\u4e2a\u6570\u3002\n\n\u8003\u8651\u600e\u6837\u7ef4\u62a4\u7ecf\u8fc7 $u$ \u7684\u865a\u6811\u5927\u5c0f\u3002\u9996\u5148\u9700\u77e5\u9053\u600e\u6837\u6c42\u67d0\u4e2a\u70b9\u96c6\u7684\u865a\u6811\u5927\u5c0f\u3002\u5c06\u70b9\u96c6\u4e2d\u6240\u6709\u70b9\u6309 DFS \u5e8f\u6392\u5e8f\u5e76\u4f9d\u6b21\u63d2\u5165\u8fd9\u4e9b\u8282\u70b9\uff0c\u90a3\u4e48\u6bcf\u63d2\u5165\u4e00\u4e2a\u8282\u70b9 $x$ \u7684\u65f6\u5019\u865a\u6811\u5927\u5c0f\u7684\u589e\u91cf\u5373\u4e3a $x$ \u7684\u6df1\u5ea6\u51cf\u53bb $x$ \u4e0e $x$ \u4e0a\u4e00\u4e2a\u8282\u70b9\u7684 LCA \u7684\u6df1\u5ea6\uff0c\u6700\u540e\u51cf\u53bb\u6240\u6709\u70b9\u7684 LCA \u7684\u6df1\u5ea6\u5373\u53ef\u3002\u8003\u8651\u7528\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684 0/1 \u6570\u7ec4\u8868\u793a\u6bcf\u4e2a\u70b9\u662f\u5426\u5728\u70b9\u96c6\u4e2d\uff0c\u90a3\u4e48\u6700\u7ec8\u865a\u6811\u7684\u5927\u5c0f\u5c31\u662f\u6240\u6709 $1$ \u8868\u793a\u70b9\u7684\u6df1\u5ea6\u4e4b\u548c\u51cf\u53bb\u76f8\u90bb $1$ \u7684 LCA \u7684\u6df1\u5ea6\uff0c\u518d\u51cf\u53bb\u4e00\u5934\u4e00\u5c3e\u4e24\u4e2a $1$ \u7684 LCA \u7684\u6df1\u5ea6\u3002\n\n\u8003\u8651\u7528\u6811\u4e0a\u5dee\u5206\u62c6\u8def\u5f84\uff0c\u8fd9\u6837\u53ef\u4ee5\u5f97\u5230\u82e5\u5e72\u4e2a\u5f62\u5982\u201c$u$ \u5728 $x$ \u7684\u70b9\u96c6\u4e2d\u51fa\u73b0\u6b21\u6570\u591a $y(y\\in\\{1,-1\\})$\u201d\u7684\u64cd\u4f5c\u3002\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u5efa\u4e00\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u4e0b\u6807\u8868\u793a DFS \u5e8f\uff0c\u4e0b\u6807\u4e3a $x$ \u7684\u4f4d\u7f6e\u7684\u503c\u8868\u793a DFS \u5e8f\u4e3a $x$ \u7684\u70b9\u7684\u51fa\u73b0\u6b21\u6570\u3002\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7ef4\u62a4\u4ee5\u4e0b\u4e09\u4e2a\u503c\uff1a\u8be5\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u4e2d\uff0c\u51fa\u73b0\u6b21\u6570 $>0$ \u7684\u70b9\u7684 DFS \u5e8f\u7684\u6700\u5c0f\u503c $fst$\uff0c\u6700\u5927\u503c $lst$\uff0c\u4ee5\u53ca\u8be5\u533a\u95f4\u4e2d\u6240\u6709\u51fa\u73b0\u6b21\u6570 $>0$ \u7684\u8282\u70b9\u6df1\u5ea6\u4e4b\u548c\u51cf\u53bb\u76f8\u90bb\u51fa\u73b0\u6b21\u6570 $>0$ \u7684 LCA \u7684\u6df1\u5ea6\u3002\u6309\u7167\u5957\u8def\u8fdb\u884c\u4e00\u904d DFS \u7ebf\u6bb5\u6811\u5408\u5e76\u5373\u53ef\u3002\u6700\u540e\u522b\u5fd8\u4e86\u5c06\u7b54\u6848\u9664\u4ee5 $2$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fz(i,a,b) for(int i=a;i<=b;i++)\n#define fd(i,a,b) for(int i=a;i>=b;i--)\n#define ffe(it,v) for(__typeof(v.begin()) it=v.begin();it!=v.end();it++)\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntemplate<typename T> void read(T &x){\n\tx=0;char c=getchar();T neg=1;\n\twhile(!isdigit(c)){if(c=='-') neg=-1;c=getchar();}\n\twhile(isdigit(c)) x=x*10+c-'0',c=getchar();\n\tx*=neg;\n}\nconst int MAXN=1e5;\nconst int LOG_N=18;\nconst int MAXP=MAXN*60;\nint n,m,hd[MAXN+5],to[MAXN*2+5],nxt[MAXN*2+5],ec=0;\nvector<int> del[MAXN+5]; \nvoid adde(int u,int v){to[++ec]=v;nxt[ec]=hd[u];hd[u]=ec;}\nint dep[MAXN+5],dfn[MAXN+5],rid[MAXN+5],dfn_lca[MAXN+5],fa[MAXN+5],t1=0,t2=0;\npii st[MAXN*2+5][LOG_N+2];vector<int> dels[MAXN+5];\nvoid dfs0(int x,int f){\n\tfa[x]=f;dfn[x]=++t1;rid[t1]=x;dfn_lca[x]=++t2;st[t2][0]=mp(dep[x],x);\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];if(y==f) continue;\n\t\tdep[y]=dep[x]+1;dfs0(y,x);\n\t\tst[++t2][0]=mp(dep[x],x);\n\t}\n}\nvoid buildst(){\n\tfor(int i=1;i<=LOG_N;i++) for(int j=1;j+(1<<i)-1<=2*n;j++)\n\t\tst[j][i]=min(st[j][i-1],st[j+(1<<(i-1))][i-1]);\n}\nint getlca(int x,int y){\n\tif(!x||!y) return 0;\n\tx=dfn_lca[x];y=dfn_lca[y];if(x>y) swap(x,y);\n\tint k=log(y-x+1)/log(2);return min(st[x][k],st[y-(1<<k)+1][k]).se;\n}\nstruct node{int ch[2],sdep,fst,lst,val;} s[MAXP+5];\nint ncnt=0,rt[MAXN+5];\nvoid pushup(int k){\n\ts[k].sdep=s[s[k].ch[0]].sdep+s[s[k].ch[1]].sdep-dep[getlca(s[s[k].ch[0]].lst,s[s[k].ch[1]].fst)];\n\ts[k].fst=(s[s[k].ch[0]].fst)?s[s[k].ch[0]].fst:s[s[k].ch[1]].fst;\n\ts[k].lst=(s[s[k].ch[1]].lst)?s[s[k].ch[1]].lst:s[s[k].ch[0]].lst;\n}\nvoid add(int &k,int l,int r,int p,int x){\n\tif(!k) k=++ncnt;\n\tif(l==r){\n\t\ts[k].val+=x;s[k].sdep=(s[k].val>0)?dep[rid[l]]:0;\n\t\ts[k].lst=s[k].fst=(s[k].val>0)?rid[l]:0;return;\n\t} int mid=(l+r)>>1;\n\tif(p<=mid) add(s[k].ch[0],l,mid,p,x);\n\telse add(s[k].ch[1],mid+1,r,p,x);\n\tpushup(k);\n}\nint merge(int x,int y,int l,int r){\n\tif(!x||!y) return x+y;\n\tif(l==r){\n\t\ts[x].val=s[x].val+s[y].val;s[x].sdep=(s[x].val>0)?dep[rid[l]]:0;\n\t\ts[x].lst=s[x].fst=(s[x].val>0)?rid[l]:0;return x;\n\t} int mid=(l+r)>>1;\n\ts[x].ch[0]=merge(s[x].ch[0],s[y].ch[0],l,mid);\n\ts[x].ch[1]=merge(s[x].ch[1],s[y].ch[1],mid+1,r);\n\tpushup(x);return x;\n}\nll ans=0;\nvoid dfs(int x){\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];if(y==fa[x]) continue;\n\t\tdfs(y);rt[x]=merge(rt[x],rt[y],1,n);\n\t}\n\tfor(int i=0;i<del[x].size();i++) add(rt[x],1,n,dfn[del[x][i]],-1);\n\tans+=s[rt[x]].sdep-dep[getlca(s[rt[x]].fst,s[rt[x]].lst)];\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<n;i++){int u,v;scanf(\"%d%d\",&u,&v);adde(u,v);adde(v,u);}\n\tdfs0(1,0);buildst();\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v,lca;scanf(\"%d%d\",&u,&v);lca=getlca(u,v);\n\t\tadd(rt[u],1,n,dfn[u],1);add(rt[u],1,n,dfn[v],1);\n\t\tadd(rt[v],1,n,dfn[u],1);add(rt[v],1,n,dfn[v],1);\n\t\tdel[lca].pb(u);del[lca].pb(v);\n\t\tif(lca!=1) del[fa[lca]].pb(u),del[fa[lca]].pb(v);\n\t} dfs(1);printf(\"%lld\\n\",ans>>1);\n\treturn 0;\n}\n```",
        "postTime": 1612786337,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5327 \u3010[ZJOI2019]\u8bed\u8a00\u3011"
    },
    {
        "content": "## P5327 \u3010[ZJOI2019]\u8bed\u8a00\u3011\n~~\u4f17\u6240\u5468\u77e5\uff0cZJOI \u7684 DS \u9898\u90fd\u662f\u7b7e\u5230\u9898~~\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\uff0c\u4e24\u4e2a\u57ce\u5e02\u80fd\u8d38\u6613\u7b49\u4ef7\u4e8e\u4e24\u4e2a\u57ce\u5e02\u6709\u540c\u4e00\u79cd\u8bed\u8a00\u3002\u8bb0\u5f55\u6bcf\u4e2a\u57ce\u5e02\u6709\u54ea\u4e9b\u8bed\u8a00\uff0c\u7edf\u8ba1\u7684\u65f6\u5019\u679a\u4e3e\u4e24\u4e2a\u57ce\u5e02\u548c\u8bed\u8a00\uff0c\u53ef\u4ee5\u83b7\u5f97 $20$ \u5206\u7684\u597d\u6210\u7ee9\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u4f18\u5316\u8fd9\u4e00\u7b97\u6cd5\uff0c\u4f46\u53d1\u73b0\u597d\u50cf\u9664\u4e86\u52a0\u4e2a $bitset$ \u4e4b\u5916\u6ca1\u4ec0\u4e48\u53ef\u4ee5\u4f18\u5316\u7684\u4e1c\u897f\u3002\n\n\u63a5\u7740\u6211\u4eec\u66f4\u6362\u601d\u8def\u3002\u8003\u8651\u6bcf\u4e2a\u57ce\u5e02\u53ef\u4ee5\u548c\u54ea\u4e9b\u57ce\u5e02\u8fdb\u884c\u8d38\u6613\u3002\n\n\u6211\u4eec\u679a\u4e3e\u57ce\u5e02\uff0c\u679a\u4e3e\u8bed\u8a00\uff0c\u7136\u540e\u6240\u6709\u7ecf\u8fc7\u8fd9\u4e2a\u57ce\u5e02\u7684\u8bed\u8a00\u6240\u7ecf\u8fc7\u7684\u57ce\u5e02\u5168\u90e8\u90fd\u80fd\u4e0e\u4e4b\u8d38\u6613\u3002\n\n\u6bd4\u5982\u8bf4\uff0c\u5bf9\u4e8e\u57ce\u5e02 $i$\uff0c\u7b2c $a_{i1},a_{i2}\\ldots a_{ij}$ \u662f\u8fd9\u4e2a\u57ce\u5e02\u7684\u6240\u6709\u8bed\u8a00\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u6240\u6709\u4f1a\u8bb2 $a_{i1},a_{i2}\\ldots a_{ij}$ \u8fd9\u4e9b\u8bed\u8a00\u4e2d\u7684\u67d0\u4e00\u79cd\u7684\u57ce\u5e02\u53d6\u4e2a\u5e76\u96c6\uff0c\u5c31\u662f\u6240\u6709\u80fd\u4e0e $i$ \u57ce\u5e02\u8fdb\u884c\u8d38\u6613\u7684\u57ce\u5e02\u3002\n\n\u7136\u540e\u6211\u4eec\u679a\u4e3e\u57ce\u5e02\uff0c\u679a\u4e3e\u7ecf\u8fc7\u8be5\u57ce\u5e02\u7684\u8bed\u8a00\uff0c\u679a\u4e3e\u4f1a\u8bb2\u7ecf\u8fc7\u8be5\u57ce\u5e02\u7684\u8bed\u8a00\u7684\u57ce\u5e02\uff0c\u53d1\u73b0\u8fd8\u662f $\\operatorname{O}(n^3)$ \u7684\uff0c\u5e76\u6ca1\u6709\u4ec0\u4e48\u4f18\u5316\u3002\n\n\u4f46\u6211\u4eec\u53d1\u73b0\uff0c\u7531\u4e8e\u4f1a\u8bb2\u67d0\u4e00\u79cd\u8bed\u8a00\u7684\u57ce\u5e02\u4e00\u5b9a\u662f\u4e00\u6761\u8fde\u7eed\u7684\u8def\u5f84\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u57ce\u5e02\uff0c\u6240\u6709\u80fd\u4e0e\u4e4b\u8d38\u6613\u7684\u57ce\u5e02\u5b9e\u9645\u4e0a\u6784\u6210\u4e86\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\n\u8981\u7edf\u8ba1\u4e00\u4e2a\u6811\u4e0a\u7684\u8fde\u901a\u5757\u7684\u5927\u5c0f\uff0c\u81ea\u7136\u5c31\u60f3\u5230\u4e86\u53ef\u4ee5\u4f7f\u7528\u865a\u6811\u3002\u7136\u540e\u8fd9\u5c31\u8f6c\u5316\u4e3a\u4e00\u4e2a\u865a\u6811\u4e0a\u82e5\u5e72\u6761\u8def\u5f84\u53d6\u5e76\u96c6\u7684\u9898\u3002\n\n\u6211\u4eec\u8003\u8651\u6311\u4e00\u5ea7\u57ce\u5e02 $i$\uff0c$a_{i1},a_{i2}\\ldots a_{ij}$ \u662f\u8fd9\u4e2a\u57ce\u5e02\u7684\u8bed\u8a00\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8bed\u8a00\u6240\u5bf9\u5e94\u7684\u8def\u5f84\uff0c\u6211\u4eec\u53d6\u8def\u5f84\u7684\u4e24\u7aef\u70b9\uff0c\u7136\u540e\u5bf9\u6240\u6709\u7684\u7aef\u70b9\u6309 $dfs$ \u5e8f\u6392\u5e8f\uff08\u5047\u8bbe\u5df2\u7ecf\u6392\u597d\uff09\u3002\n\n\u8003\u8651\u4efb\u610f\u4e00\u4e2a\u7aef\u70b9 $u$\uff0c\u5bf9\u4e8e\u4e0a\u4e00\u4e2a $dfs$ \u5e8f\u6bd4\u5b83\u5c0f\u7684\u70b9\uff08\u8bbe\u4e3a $v$\uff09\uff0c\u8981\u4e48\u662f\u5b83\u7684\u7956\u5148\uff0c\u8981\u4e48\u5728\u4ed6\u67d0\u5c42\u7956\u5148\u67d0\u4e2a\u4e0e\u5b83\u4e0d\u540c\u7684\u5b50\u6811\u4e2d\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u865a\u6811\u4e2d\u589e\u52a0\u7684\u70b9\u7684\u4e2a\u6570\u663e\u7136\u5c31\u662f $dep_u-dep_v=dep_u-dep_{lca(u,v)}$\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\u53ef\u80fd\u6bd4\u8f83\u96be\u5904\u7406\u3002\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u5728\u6574\u68f5\u6811\u7684\u6839\u8282\u70b9\u4e4b\u4e0a\u518d\u5efa\u4e00\u4e2a\u65b0\u8282\u70b9\uff08\u4e0d\u59a8\u7f16\u53f7 $0$\uff09\uff0c\u5b83\u662f\u6574\u9897\u6570\u7684\u6839\u8282\u70b9\u7684\u7236\u4eb2\u3002\u7136\u540e\u6211\u4eec\u5f3a\u884c\u628a $0$ \u8282\u70b9\u52a0\u5165\u6811\u4e2d\uff0c\u6700\u540e\u518d\u51cf\u53bb\u5176\u8d21\u732e\u3002\n\n\u7531\u4e8e $0$ \u53f7\u8282\u70b9\u5728\u865a\u6811\u4e2d\uff0c\u6240\u4ee5\u4e0a\u4e00\u65f6\u523b\u7684\u865a\u6811\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u70b9\uff08$v$\uff09\u4e00\u5b9a\u6709\u4e00\u6761\u8fde\u5411 $0$ \u7684\u8def\u5f84\u3002\u800c $lca(u,v)$ \u5df2\u7ecf\u5c5e\u4e8e\u8fd9\u6761\u8def\u5f84\uff0c\u6240\u4ee5\u5c06\u5176\u52a0\u5165\u865a\u6811\u5bf9\u865a\u6811\u7684\u5927\u5c0f\u6ca1\u6709\u5f71\u54cd\u3002\n\n\u7136\u540e\u6211\u4eec\u505a\u4e00\u4e2a\u5927\u80c6\u7684\u60f3\u8c61\uff1a\n\n\u6211\u4eec\u628a $lca(u,v),u$ \u4e24\u4e2a\u70b9\u5206\u522b\u52a0\u5165\u865a\u6811\u3002\u8fd9\u6837\u589e\u52a0\u7684\u8d21\u732e\u5c31\u53d8\u6210\u4e86 $dep_u-dep_{lca(u,v)}$\u3002\u7136\u540e\u7531\u4e8e $lca(u,v)$ \u5df2\u7ecf\u6ca1\u7528\u4e86\uff0c\u518d\u628a\u5b83\u6254\u51fa\u865a\u6811\uff08\n\n\u770b\u4f3c\u597d\u50cf\u5f88\u5947\u602a\uff0c\u4f46\u5b9e\u9645\u4e0a\u8fd9\u4e2a\u505a\u6cd5\u6ca1\u6709\u95ee\u9898\u3002\u56e0\u4e3a $v$ \u662f\u4e0a\u4e00\u4e2a $dfs$ \u5e8f\u5c0f\u4e8e $u$ \u7684\u8282\u70b9\uff0c\u6240\u4ee5\u5728 $u$ \u5230 $lca(u,v)$ \u7684\u8def\u5f84\u4e0a\u4e00\u5b9a\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u5c5e\u4e8e\u8fd9\u68f5\u865a\u6811\uff0c\u5426\u5219\u5176 $dfs$ \u5e8f\u5927\u4e8e $v$ \u800c\u5c0f\u4e8e $u$\uff0c\u77db\u76fe\u3002\n\n\u4e8e\u662f\u6211\u4eec\u6574\u7406\u4e00\u4e0b\uff0c\u6211\u4eec\u5728\u865a\u6811\u4e2d\u5f3a\u884c\u52a0\u5165\u4e00\u4e2a $0$ \u53f7\u70b9\uff0c\u7136\u540e\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u70b9\u53ea\u9700\u8981\u52a0\u4e0a $dep_u-dep_{lca(u,v)}$ \u5373\u53ef\u3002\n\n\u7136\u540e\u8bbe $x,y$ \u662f\u865a\u6811\u70b9\u96c6\u4e2d\u521d $0$ \u4e4b\u5916 $dfs$ \u5e8f\u6700\u5927/\u6700\u5c0f\u7684\uff0c\u90a3\u4e48 $0$ \u5bf9\u865a\u6811\u4ea7\u751f\u7684\u989d\u5916\u7684\u5927\u5c0f\u663e\u7136\u5c31\u662f $dep_lca(x,y)$ \u4e2a\u70b9\uff0c\u5c06\u5176\u51cf\u53bb\u3002\n\n\u8fd9\u4e00\u90e8\u5206\u7684\u786e\u5f88\u96be\u7406\u89e3\uff0c\u9700\u8981\u5bf9\u865a\u6811\u548c $dfs$ \u5e8f\u6709\u4e00\u5b9a\u6df1\u5ea6\u7684\u4e86\u89e3\u3002\n\n\u7136\u540e\u6211\u4eec\u5bf9\u6bcf\u4e2a\u70b9\u5efa\u4e2a\u865a\u6811\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230 $\\operatorname O(n^2)$ \u7684\u505a\u6cd5\uff0c\u83b7\u5f97 $40$ \u5206\u7684\u597d\u6210\u7ee9\u3002\n\n\u518d\u7136\u540e\uff0c\u6211\u4eec\u8003\u8651\u4f18\u5316\u8fd9\u4e2a\u865a\u6811\u3002\u7531\u4e8e\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u6761\u8def\u5f84\uff0c\u5176\u6240\u6709\u7684\u70b9\u662f\u8fde\u7eed\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u76f8\u5f53\u4e8e\u8981\u5728\u8fd9\u6761\u8fde\u7eed\u7684\u8def\u5f84\u4e0a\u63d2\u5165\u4e00\u5806\u76f8\u540c\u7684\u865a\u6811\u70b9\u3002\n\n\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u4e86\u5dee\u5206\u3002\u5bf9\u67d0\u4e00\u6761\u8def\u5f84\uff08\u8bbe\u4e3a $u,v$\uff09\uff0c\u5728 $u,v$ \u5904\u7684\u865a\u6811\u5404\u63d2\u5165\u4e00\u4e2a $u,v$\uff0c\u5728 $lca(u,v)$ \u548c $fa_{lca(u,v)}$ \u5904\u7684\u865a\u6811\u5404\u5220\u4e00\u4e2a $u,v$\uff0c\u7136\u540e\u7528\u67d0\u79cd\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u4e00\u4e0b\u865a\u6811\u5927\u5c0f\uff0c\u5e76\u5411\u4e0a\u5408\u5e76\u3002\n\n\u800c\u60f3\u5230\u52a8\u6001\u7ef4\u62a4\u4ee5\u53ca\u5408\u5e76\uff0c\u6700\u5bb9\u6613\u60f3\u5230\u7684\u5c31\u662f\u7ebf\u6bb5\u6811\u3002\u5728\u7ebf\u6bb5\u6811\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u6211\u4eec**\u8bb0\u5f55 $dfn$ \u4e3a\u5bf9\u5e94\u503c\u7684\u8282\u70b9\u662f\u5426\u5728\u865a\u6811\u4e2d**\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u6210\u529f\u7684\u89e3\u51b3\u4e86\u6309 $dfs$ \u6392\u5e8f\u7684\u6b65\u9aa4\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\uff0c\u6211\u4eec\u8bb0 $l,r$ \u8868\u793a\u7684\u533a\u95f4\uff0c$v$ \u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u5185\u6240\u6709\u7684\u70b9\u548c $0$ \u53f7\u70b9\u6784\u6210\u7684\u865a\u6811\u5927\u5c0f\uff0c$mn,mx$ \u4e3a\u8fd9\u4e2a\u8282\u70b9\u5185 $dfs$ \u5e8f\u6700\u5c0f/\u5927\u7684\u8282\u70b9\u3002\n\n\u4e0a\u4f20\u7684\u65f6\u5019\u5de6\u53f3\u865a\u6811\u5927\u5c0f\u76f8\u52a0\uff0c\u51cf\u53bb $dep_{lca(ls->mx,rs->mn)}$\uff0c\u5728\u67e5\u8be2\u865a\u6811\u603b\u5927\u5c0f\u7684\u65f6\u5019\u522b\u5fd8\u4e86\u51cf\u53bb $dep_{lca(rt->mn,rt->mx)}$ \u6765\u53bb\u9664 $0$ \u53f7\u70b9\u7684\u8d21\u732e\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tregister int x=0;\n\tregister bool f=0;\n\tregister char ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-') f=1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=x*10+ch-48;\n\t\tch=getchar();\n\t}\n\treturn f?-x:x;\n} \nchar str[300];int kkk;\ninline void print(register int x,register char k='\\n'){\n\tif(!x) putchar('0');\n\tif(x<0) putchar('-'),x=-x;\n\twhile(x){\n\t\tstr[++kkk]=x%10+48;\n\t\tx/=10;\n\t}\n\twhile(kkk){\n\t\tputchar(str[kkk--]);\n\t}\n\tputchar(k); \n}\nconst int maxn=2e5+10;\nvector<int> e[maxn];\nint n,m;long long ans;\nint fa[maxn],son[maxn],dep[maxn],sz[maxn];\nint top[maxn],dfn[maxn],pos[maxn],tot;\nvoid dfs1(int u,int f){\n\tdep[u]=dep[f]+1;\n\tfa[u]=f;\n\tsz[u]=1;\n\tfor(int v:e[u]){\n\t\tif(v==fa[u]) continue;\n\t\tdfs1(v,u);\n\t\tsz[u]+=sz[v];\n\t\tif(sz[son[u]]<sz[v]){\n\t\t\tson[u]=v;\n\t\t}\n\t}\n}\nvoid dfs2(int u,int o){\n\ttop[u]=o;dfn[u]=++tot;\n\tpos[tot]=u;\n\tif(!son[u]) return;\n\tdfs2(son[u],o);\n\tfor(int v:e[u]){\n\t\tif(v==fa[u]||v==son[u]) continue;\n\t\tdfs2(v,v);\n\t}\n}\nint lca(int u,int v){\n\tif(u==0||v==0) return 0;\n\twhile(top[u]!=top[v]){\n\t\tif(dep[top[u]]<dep[top[v]]) swap(u,v);\n\t\tu=fa[top[u]];\n\t}\n\tif(dep[u]>dep[v]) swap(u,v);\n\treturn u;\n}\nstruct seg{\n\tint v,mn,mx,ls,rs,cnt;\n}t[maxn*75];int st[maxn*75],tops,rt[maxn],cnt;\nint nnd(){\n\treturn tops?st[tops--]:++cnt;\n}\nvoid del(int &o){\n\tif(!t[o].v&&!t[o].mn&&!t[o].mx&&!t[o].cnt&&!t[o].ls&&!t[o].rs){\n\t\tst[++tops]=o;\n\t\to=0;\n\t} \n}\nvoid pushup(int o){\n\tint lc=lca(pos[t[t[o].ls].mx],pos[t[t[o].rs].mn]);\n\tt[o].v=t[t[o].ls].v+t[t[o].rs].v-dep[lc];\n\tt[o].mn=t[t[o].rs].mn;if(t[t[o].ls].mn) t[o].mn=t[t[o].ls].mn;\n\tt[o].mx=t[t[o].ls].mx;if(t[t[o].rs].mx) t[o].mx=t[t[o].rs].mx;\n}\nvoid change(int &o,int l,int r,int q,int v){\n\tif(!o) o=nnd();\n\tif(l==r){\n\t\tt[o].cnt+=v;\n\t\tif(t[o].cnt>0){\n\t\t\tt[o].v=dep[pos[l]];\n\t\t\tt[o].mn=t[o].mx=l;\n\t\t}\n\t\telse{\n\t\t\tt[o].v=t[o].mn=t[o].mx=0;\n\t\t}\n\t\tdel(o);\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif(q<=mid) change(t[o].ls,l,mid,q,v);\n\telse change(t[o].rs,mid+1,r,q,v);\n\tpushup(o);del(o);\n}\nint query(int o){\n\tint lc=lca(pos[t[o].mn],pos[t[o].mx]);\n\treturn t[o].v-dep[lc];\n}\nvoid merge(int &o1,int &o2,int l,int r){\n\tif(!o2) return;\n\tif(!o1){\n\t\to1=o2;\n\t\treturn;\n\t}\n\tif(l==r){\n\t\tt[o1].cnt+=t[o2].cnt;\n\t\tif(t[o1].cnt>0){\n\t\t\tt[o1].v=dep[pos[l]];\n\t\t\tt[o1].mn=t[o1].mx=l;\n\t\t}\n\t\telse{\n\t\t\tt[o1].v=t[o1].mx=t[o1].mn=0;\n\t\t}\n\t\tt[o2].v=t[o2].mx=t[o2].mn=t[o2].cnt=0;\n\t\tdel(o2);del(o1);\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tmerge(t[o1].ls,t[o2].ls,l,mid);\n\tmerge(t[o1].rs,t[o2].rs,mid+1,r);\n\tpushup(o1);t[o2].v=t[o2].mn=t[o2].mx=0;\n\tdel(o1);del(o2);\n}\nvoid dfs(int u){\n\tfor(int v:e[u]){\n\t\tif(v==fa[u]) continue;\n\t\tdfs(v);\n\t\tmerge(rt[u],rt[v],1,n);\n\t}\n\tans+=query(rt[u]);\n}\nsigned main(){\n\tn=read();m=read();\n\tfor(int i=1;i<n;i++){\n\t\tint u=read(),v=read();\n\t\te[u].push_back(v);\n\t\te[v].push_back(u);\n\t}\n\tdfs1(1,0);dfs2(1,1);\n\tfor(int i=1;i<=m;i++){\n\t\tint u=read(),v=read();\n\t\tint lc=lca(u,v);\n        change(rt[u],1,n,dfn[u],1);\n\t\tchange(rt[u],1,n,dfn[v],1);\n        change(rt[v],1,n,dfn[u],1);\n\t\tchange(rt[v],1,n,dfn[v],1);\n\t\tchange(rt[lc],1,n,dfn[u],-1);\n\t\tchange(rt[lc],1,n,dfn[v],-1);\n\t\tchange(rt[fa[lc]],1,n,dfn[u],-1);\n\t\tchange(rt[fa[lc]],1,n,dfn[v],-1);\n\t}\n\tdfs(1);\n\tprint(ans>>1);\n\treturn 0;\n}\n```\n",
        "postTime": 1606714882,
        "uid": 120074,
        "name": "BFqwq",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5327 \u3010[ZJOI2019]\u8bed\u8a00\u3011"
    }
]