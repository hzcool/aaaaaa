[
    {
        "content": "## \u7ebf\u6027\u7b5b\u628a\u7d20\u6570\u7b5b\u51fa\u6765\uff0c\u7136\u540e\u76f4\u63a5\u8f93\u51fa\n### ~~\u4e0d\u8bf4\u5e9f\u8bdd\uff0c\u628a\u4f60\u4eec\u60f3\u8981\u7684\u4ee3\u7801\u9001\u7ed9\u4f60\u4eec~~\n```\n#include<iostream>\nusing namespace std;\nbool isComp[100000005];  //\u662f\u4e0d\u662f\u7d20\u6570\nint main ()\n{\n\tint n,ans=0;\n\tcin>>n;\n\tisComp[1]=1;  //1\u7684\u7279\u5224\n\tfor(int i=2;i*i<=n;i++) \n\t{ \n\t    if(isComp[i]==0)  //\u5982\u679c\u662f\u7d20\u6570\n\t        for(int j=i*i;j<=n;j+=i) //\u5c06\u4ed6\u7684\u500d\u6570\u8bb0\u4e3a\u5408\u6570\n\t        \tisComp[j]=1;   //\u6807\u8bb0\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(isComp[i]==0)  //\u5982\u679c\u662f\u7d20\u6570\n\t\t\tans++;\n\t}\n\tcout<<ans<<endl; //\u8f93\u51fa\n\treturn 0;  //\u534e\u4e3d\u7ed3\u675f\n}\n```\n\n\n------------\n\n#### ~~\u4e0d\u8981\u8138~~\u5730\u8981\u4e2a\u8d5e",
        "postTime": 1577003429,
        "uid": 177831,
        "name": "luoyoucheng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\u7ebf\u6027\u7b5b\u8dd1\u7684\u592a\u6162\n\n\u4e8e\u662f\u6765\u4ecb\u7ecd\u9ed1\u79d1\u6280\u4e86\u3002\n\nMEISSEL-LEHMER\u7b97\u6cd5\n\n\u539f\u7406\uff1a\u6211\u4eec\u9884\u5904\u7406\u51faN^(2/3)\u4ee5\u5185\u7684\u7d20\u6570\n\n\u7136\u540e\u5bf9\u4e8e\u8be2\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u51fa1-N\u4e4b\u5185\uff0c\u4e0d\u80fd\u88ab2-N^(1/3)\u7684\u8d28\u6570\u6574\u9664\u7684\u6570\u5b57\u4e2a\u6570\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u6211\u4eec\u7528f[i][j]\u8868\u793a,\u5219\u6709f[i][j]=f[i][j-1]-f[i/pri[j]][j-1]\u4e14f[i][0]=i;\n\n\u540c\u65f6\u6709f[i][j]=max(0,(1-i)\u8d28\u6570\u4e2a\u6570-j+1)\n\n\u7136\u540e\u6211\u4eec\u9884\u5904\u7406\u51fai<=100000,j<=70\u7684f\u6570\u7ec4\uff0c\u5269\u4e0b\u76f4\u63a5\u9012\u5f52\n\n\u7136\u540e\u6211\u4eec+2-N^(1/3)\u7684\u8d28\u6570\u4e2a\u6570-1\uff0c\u79f0\u4e4b\u4e3a\u4f2a\u7d20\u6570\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u6b64\u65f6\u4ecd\u6709\u5408\u6570\uff0c\u4f46\u4e00\u5b9a\u662f\u4e24\u4e2a\u5927\u4e8eN^(1/3)\u6b21\u7684\u7d20\u6570\u76f8\u4e58\u3002\n\n\u6211\u4eec\u679a\u4e3e\u8f83\u5c0f\u7684\u7d20\u6570\uff0c\u53ef\u4ee5\u8ba1\u7b97\u51fa\u8f83\u5927\u7d20\u6570\u8303\u56f4\u3002\n\n\u7136\u540e\u5269\u4e0b\u7684\u5c31\u662f\u771f\u00b7\u7d20\u6570\u4e86\u3002\n\n\u65f6\u95f4,\u7a7a\u95f4\u590d\u6742\u5ea6O\uff08N^\uff082/3\uff09\uff09\n\n\u2018\u2019\u2018\n\n```cpp\n#include<bits/stdc++.h>\n#define N 216000\n#define ll long long\nusing namespace std;\nint mn[N],pri[N/10],fl[N];\nint tot,cnt,num,n;\nint f[20005][55];\nint inf=2e9;\nint dp(int x,int y){\n    if (x<=20000&&y<=50) return f[x][y];\n    if (x==0||y==0) return x;\n    if (1ll*pri[y]*pri[y]>=x&&x<N) return max(0,mn[x]-y);\n    return dp(x,y-1)-dp(x/pri[y],y-1);\n}\nvoid pre(){\n    for (int i=2;i<N;i++){\n        if (!fl[i]) pri[++tot]=i;\n        for (int j=1;i*pri[j]<N&&j<=tot;j++){\n            fl[i*pri[j]]=1;\n            if (i%pri[j]==0) break;\n        }\n    }\n    for (int i=1;i<N;i++)\n        mn[i]=(cnt+=1-fl[i]);\n    for (int i=1;i<=20000;i++) f[i][0]=i;\n    for (int i=1;i<=20000;i++)\n        for (int j=1;j<=50;j++)\n            f[i][j]=f[i][j-1]-f[i/pri[j]][j-1];\n}\nint power(int x,int y){\n    int s=1;\n    while (y!=0){\n        if (y&1){\n            if (s>=inf/x) s=inf;\n            else s=s*x;\n        }\n        y/=2;\n        if (x>=inf/x) x=inf;\n        else x=x*x;\n    }\n    return s;\n}\nint yroot(ll x,int y){\n    int l=2,r=6666,ans=1;\n    while (l<=r){\n        int mid=(l+r)/2;\n        if (power(mid,y)<=x) ans=mid,l=mid+1;\n        else r=mid-1;\n    }\n    return ans;\n}\nint work(int m){\n    if (m<N) return mn[m]-1;\n    int y=yroot(m,3),n=mn[y];\n    int ans=dp(m,n)+n-1;\n    for (n++;pri[n]*pri[n]<=m;n++)\n        ans-=mn[m/pri[n]]-mn[pri[n]]+1;\n    return ans;\n}\nint main(){\n    pre();\n    scanf(\"%d\",&n);\n    printf(\"%d\\n\",work(n));\n}\n```\n\u2018\u2019\u2018\n",
        "postTime": 1507778960,
        "uid": 33736,
        "name": "\u5927\u5934",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\u53f2\u4e0a\u6700\u77edAC\u4ee3\u7801\u4e4b\u4e00\n```\n#include<stdio.h>\nbool a[100000000];//\u8bdd\u8bf4\u6211\u5f53\u521dshort int\u90fd\u6ca1\u8fc7\uff0c\u53ea\u4ece80\u5230\u4e8690\nint main()\n{\n    int n,i,j,s=0;\n    scanf(\"%d\",&n);\n    s=n-1;//\u628a\u4e00\u7ed9\u53bb\u6389\n    for(i=2;i*i<=n;i++)\n    {if(a[i]==0)//\u6b63\u5e38\u7b5b\u6cd5\uff0c\u65e0\u9700\u89e3\u91ca\uff08\u65e0\u9ed1\u79d1\u6280\uff0c\u4e5f\u4e0d\u7528\u9ad8\u7ea7\u7b5b\u6cd5\uff09\n    for(j=i*2;j<=n;j+=i)//\u7ed3\u5408\u6b63\u5e38\u5224\u65ad\u7d20\u6570\u53bb\u505a\u5c31\u80fd\u8fbe\u5230\u9ad8\u7ea7\u7b5b\u6cd5\u7684\u6548\u679c\n    if(a[j]==0)\uff08\u4f8b\u5982\u8bf4i*i\u548c\u7b5b\u6cd5\u7ed3\u5408\u53ef\u4ee5\u8282\u7701\u4e0d\u5c11\u65f6\u95f4\uff09\n    {a[j]=1;\n    s--;}}\n    printf(\"%d\",s);\n    return 0;\n}\n```",
        "postTime": 1522430856,
        "uid": 47482,
        "name": "\u4e0d\u5230\u524d10\u4e0d\u6539\u540d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\u697c\u4e0b\u7684\u8dd1\u5f97\u592a\u6162\u4e86.jpg\n\n\u4ecb\u7ecd\u4e00\u4e2a\u65b0\u5b66\u7684\u9ed1\u79d1\u6280\uff1a\u6d32\u9601\u7b5b\n\n\u539f\u6587\u5728\u8fd9\u91cc\uff1ahttps://blog.csdn.net/bestFy/article/details/80100244\n\n\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\uff1a\u6211\u4eec\u53c8\u4e0d\u662f\u8981\u6c42\u51fa\u6bcf\u4e00\u4e2a\u8d28\u6570\uff0c\u5e72\u561b\u8001\u662f\u7b5b\u6cd5\uff1f\u80fd\u4e0d\u80fd\u5feb\u4e00\u70b9\uff1f\n\n\u6211\u4eec\u4ee4pm\u8868\u793a\u7b2cm\u4e2a\u8d28\u6570\uff0cg[i][j]\u8868\u793a1~j\u4e2d\u4e0e\u524di\u4e2a\u8d28\u6570\u4e92\u8d28\u7684\u6570\u7684\u4e2a\u6570\uff08\u7b5b\u4e0d\u6389\u7684\uff09\uff0c\u6613\u77e5g[i][j]=g[i-1][j]-g[i-1][j/p[i]]\u3002p[i+1]>j\u65f6\uff0cg[i][j]=1\uff08\u53ea\u67091\u8fd9\u4e2a\u6570\uff09\u3002p[i]>j/p[i]\u65f6\uff0cg[i][j]=g[i-1][j]-1\uff0c\u53ef\u4ee5O(1)\u8ba1\u7b97\n\n\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08n^(2/3)/log n\uff09\n\n\u5177\u4f53\u7ec6\u8282\u770b\u6ce8\u89e3\uff0c\u4e0a\u4ee3\u7801\n```\n//minamoto\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#define ll long long\n#define rint register int\nusing namespace std;\n#define N 350050\nint p[N/10],tot,res[N],vis[N],n;\nvoid init(int n){\n\t//\u628a\u5c0f\u4e8e\u7b49\u4e8esqrt\uff08n\uff09\u7684\u8d28\u6570\u7b5b\u51fa\u6765\n\tfor(rint i=2;i<=n;i++){\n\t\tres[i]=res[i-1];if(!vis[i]) p[++tot]=i,res[i]++;\n\t\tfor(rint j=1;j<=tot&&(ll)i*p[j]<=n;j++){\n\t\t\tvis[i*p[j]]=1;\n\t\t\tif(i%p[j]==0) break;\n\t\t}\n\t}\n}\nint last[N<<1];ll g[N<<1],value[N<<1];\nll cal(ll n){\n\tint cnt=0,sn=(ll)sqrt(n);//\u8003\u8651<=n\u7684\u6570\u7531<=sqrtn\u7684\u8d28\u6570\u7b5b\u51fa\u7684\u60c5\u51b5\n\tint pos=upper_bound(p+1,p+1+tot,sn)-p-1;//pos\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8esn\u7684\u8d28\u6570\u4f4d\u7f6e\n\tfor(ll i=n;i>=1;i=n/(n/i+1)) value[++cnt]=n/i;//\u8bb0\u5f55\u6240\u6709[n/i]\u7684\u503c\uff0c\u53ea\u6709\u8fd9\u6837\u7684\u6570\u624d\u4f1a\u51fa\u73b0\u5728\u8f6c\u79fb\u4e2d //\u79bb\u6563\n\tfor(rint i=1;i<=cnt;i++) g[i]=value[i],last[i]=0;\n\tfor(rint i=1;i<=pos;i++)\n\tfor(rint j=cnt;j;j--){\n\t\tll k=value[j]/p[i];if(k<p[i]) break;//\u5ffd\u7565\u90a3\u4e9b-1\u7684\u8f6c\u79fb\n\t\tk=k<sn?k:cnt-n/k+1;//\u627e\u5230\u5728value\u4e2d\u7684\u5bf9\u5e94\u4e0b\u6807\n\t\tg[j]-=g[k]-(i-last[k]-1);//\u5c06g[k]\u7684-1\u7684\u8f6c\u79fb\u8865\u56de\u53bb\n\t\tlast[j]=i;\n\t}\n\treturn res[sn]+g[cnt]-1;//-1\u662f\u51cf\u53bb1\u7684\u8d21\u732e\n}\nint main(){\n\tinit(10000);\n\tscanf(\"%lld\",&n);\n\tprintf(\"%lld\",cal(n));\n\treturn 0;\n}\n```",
        "postTime": 1531375229,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\u6211\u6765\u4e00\u53d1 Min25 \u7b5b\u7684\u9898\u89e3\uff01  \n\uff08\u5176\u5b9e\u5df2\u7ecf\u6709\u4e00\u4e2a\u5927\u4f6c\u53d1\u4e86\u4f46\u662f\u6ca1\u4ec0\u4e48\u89e3\u91ca\n\nMin25 \u7b5b\u7b97\u6cd5\u4e2d\u6709\u4e00\u4e2a\u8fc7\u7a0b\u5c31\u662f\u6c42 $f$ \u5728\u8d28\u6570\u5904\u7684\u503c\u3002  \n\u90a3\u4e48\u5982\u679c\u6211\u4eec\u6784\u9020 $f(n) = 1$ \u90a3\u8fd9\u4e2a\u5c31\u76f8\u5f53\u4e8e\u6c42\u8d28\u6570\u7684\u4e2a\u6570\u4e86\u3002  \n\uff08\u5176\u5b9e\u6d32\u9601\u7b5b\u4e5f\u6709\u8fd9\u4e00\u90e8\u5206\u800c\u4e14\u505a\u6cd5\u662f\u4e00\u6837\u7684\n\n\u8bbe $G_k(n) = \\sum\\limits_{i=1}^n [p_k < \\text{lpf}(i) \\lor \\text{isprime}(i)]$\uff0c\u5176\u4e2d $p_k$ \u8868\u793a\u7b2c $k$ \u5c0f\u7684\u8d28\u6570\uff0c$\\text{lpf}(i)$ \u8868\u793a $i$ \u7684\u6700\u5c0f\u8d28\u56e0\u5b50\uff0c$\\text{isprime}(i)$ \u8868\u793a $i$ \u662f\u5426\u4e3a\u8d28\u6570\u3002  \n\u5176\u5b9e\u5c31\u662f\u57c3\u7b5b $k$ \u8f6e\u4e4b\u540e\u5269\u4e0b\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u8003\u8651\u8f6c\u79fb\u3002  \n\u82e5 $n < p_k^2$\uff0c\u90a3\u4e48\u80af\u5b9a\u4e0d\u4f1a\u7b5b\u6389\u4efb\u4f55\u4e00\u4e2a\u6570\u3002  \n\u82e5 $p_k^2 \\le n$\uff0c\u90a3\u4e48\u88ab\u7b5b\u6389\u7684\u6570\u5fc5\u6709\u8d28\u56e0\u5b50 $p_k$\uff0c\u6545\u5148\u51cf\u53bb $G_{k-1}\\left(\\left\\lfloor\\dfrac n{p_k}\\right\\rfloor\\right)$\u3002  \n\u6ce8\u610f\u5230\u8fd9\u6837\u5b50\u4f1a\u51cf\u53bb $\\text{lpf}(i) < p_k$ \u7684\u6570\uff0c\u6545\u52a0\u56de $G_{k-1}(p_{k-1})$\u3002  \n\u6574\u7406\u4e00\u4e0b\u53ef\u5f97\n$$G_k(n) = G_{k-1}(n) - [p_k^2 \\le n](G_{k-1}\\left(\\left\\lfloor\\dfrac n{p_k}\\right\\rfloor\\right) - G_{k-1}(p_{k-1}))$$\n\n\u7b54\u6848\u5373 $G_{cnt}(n)$\uff0c\u5176\u4e2d $cnt$ \u8868\u793a $\\sqrt n$ \u4ee5\u5185\u7684\u8d28\u6570\u4e2a\u6570\u3002\n\n\u89c2\u5bdf\u8f6c\u79fb\u5f0f\u6613\u5f97\u5b9e\u9645\u4e0a\u7528\u5230\u7684 $G$ \u7684\u503c\u90fd\u5728\u6240\u6709 $\\left\\lfloor\\dfrac n i\\right\\rfloor$ \u5904\uff0c\u8fd9\u6837\u4e00\u5171\u662f $O(\\sqrt n)$ \u5904\uff0c\u4e8e\u662f\u9884\u5904\u7406\u4e00\u53d1\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u88ab\u8bc1\u660e\u4e3a $O(\\frac{n^{3/4}}{\\log n})$\uff08\u522b\u95ee\u6211\u600e\u4e48\u8bc1\uff0c\u95ee\u5c31\u4e0d\u77e5\u9053\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cmath>\nusing namespace std;\nconst int N = 1e8;\nconst int MX = 1e4;\nint n;\nint lim;\nint vis[MX + 5],cnt,prime[MX + 5];\nint lis[2 * MX + 5];\nint tot,le[MX + 5],ge[MX + 5];\nint G[2 * MX + 5];\ninline int &id(long long x)\n{\n    return x <= lim ? le[x] : ge[n / x];\n}\nint main()\n{\n    for(register int i = 2;i <= MX;++i)\n    {\n        if(!vis[i])\n            prime[++cnt] = i;\n        for(register int j = 1;j <= cnt && i * prime[j] <= MX;++j)\n        {\n            vis[i * prime[j]] = 1;\n            if(!(i % prime[j]))\n                break;\n        }\n    }\n    scanf(\"%d\",&n),lim = sqrt(n);\n    for(register long long l = 1,r;l <= n;l = r + 1)\n    {\n        r = n / (n / l);\n        lis[id(n / l) = ++tot] = n / l;\n        G[tot] = n / l - 1;\n    }\n    for(register int k = 1;k <= cnt;++k)\n    {\n        int p = prime[k];\n        long long s = (long long)prime[k] * prime[k];\n        for(register int i = 1;lis[i] >= s;++i)\n            G[i] -= G[id(lis[i] / p)] - (k - 1);\n    }\n    printf(\"%d\\n\",G[1]);\n}\n```",
        "postTime": 1564185556,
        "uid": 75840,
        "name": "deserter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\u4e00\u62ff\u5230\u9898\uff1a\u54c8\u54c8\uff0c\u8fd9\u4e0d\u5c31\u662f\u6700\u7b80\u5355\u7684\u7b5b\u8d28\u6570\u561b\uff01\n\n\u5c31\u662f\u8fd9\u4e2a\uff1a\n\n\n```cpp\nbool pd(int n) {\n\tfor(int i=2; i*i<=n; i++)\n\t\tif(n%i==0) return 0;\n\treturn 1;\n}\n```\n\u8fd9\u4e48\u7b80\u5355\u7684\u9898\u8fd8$\\color{yellow}\\text{\u666e\u53ca/\u63d0\u9ad8-}$\uff1f\uff1f\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint pd(int n) {\n\tfor(int i=2; i*i<=n; i++)\n\t\tif(n%i==0) return 0;\n\treturn 1;\n}\nint x,y,ans;\nint main() {\n\tcin>>y;\n\tif(x==1) {\n\t\tfor(int i=3; i<=y; i++) {\n\t\t\tif(pd(i)) ans++;\n\t\t}\n\t\tans++;\n\t} else {\n\t\tfor(int i=2; i<=y; i++) {\n\t\t\tif(pd(i)) ans++;\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\n\u7136\u9e45\uff0c\u662f\u6211\u5c0f\u770b\u9ec4\u9898\u4e86\uff0c\u4ea4\u4e0a\u53bb$60$\u5206\uff0cT\u4e86$4$\u4e2a\u70b9\u3002\u3002\n\n\u4e8e\u662f\uff0c\u5728\u9898\u89e3\u533a\u515c\u4e86\u4e00\u5708\uff0c\u597d\u50cf\u9664\u4e86zyy\u7684\u9ed1\u79d1\u6280\u4e4b\u5916\u57fa\u672c\u4e0a\u90fd\u7528\u4e86\u6b27\u62c9\u7b5b/\u6b27\u6c0f\u7b5b\u3002\n\n[MK](https://www.luogu.com.cn/user/195331)\u8bb2\u57c3\u6c0f\u7b5b\uff1a\n\n\u679a\u4e3e\u6bcf\u4e00\u4e2a\u6570\uff0c\u5373$for(int i=2;i<=n;i++)$\u3002\u6bcf\u4e2a\u6570\u90fd\u6709\u4e00\u4e2a\u6807\u8bb0\u6570\u7ec4$f[]$\uff0c\u5982\u679c$f_i=true$\u4ee3\u8868$i$\u4e0d\u662f\u8d28\u6570\uff0c\u5426\u5219\u662f\u8d28\u6570\u3002\u5982\u679c\u679a\u4e3e\u5230$i$\uff0c$f_i==false$\uff0c\u90a3\u4e48$i$\u5c31\u662f\u8d28\u6570\uff0c\u7136\u540e\u628a$n$\u4ee5\u5185\u7684$i$\u7684\u500d\u6570\u7684\u6570\u6807\u4e3a$true$\u3002\u6ce8\u610f\uff0c$f[]$\u7684\u521d\u59cb\u503c\u662f$false$\u3002\n\n\n\n\u6240\u4ee5\u62b1\u4e2a\u4fa5\u5e78\u5fc3\u7406\u5199\u4e86\u6b27\u6c0f\u7b5b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,ans(0);\nbool f[100000001];\ninline int read() {\n\tint x(0),f(1);\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') {\n\t\tif(ch=='-')\n\t\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') {\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\ninline void out(int a) {\n\tif(a>=10)out(a/10);\n\tputchar(a%10+'0');\n}\nint main() {\n\tn=read();\n\tif(n<2) {\n\t\tout(0);\n\t\treturn 0;\n\t}\n\tfor(register int i=2; i<=n; ++i) {\n\t\tif(!f[i]) {\n\t\t\t++ans;\n\t\t}\n\t\tfor(register int j=2; j*i<=n; ++j) f[i*j]=true;\n\t}\n\tout(ans);\n\treturn 0;\n}\n```\n\n\u6570\u636e\u662f\u60f3\u8feb\u5bb3\u6211\u5417\uff0c\u5c31T\u4e00\u4e2a\u70b9\u3002\n\n\u597d\u5427\uff0c\u90a3\u6211\u5199\u6b27\u62c9\u7b5b\u3002\n\n\u6b27\u62c9\u7b5b\uff1a\n\n\u6b27\u62c9\u7b5b\u662f\u5bf9\u57c3\u6c0f\u7b5b\u7684\u4f18\u5316\uff0c\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u7b5b\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,ans,prime[5800001];\nbool visit[100000001];\ninline int read() {\n\tint x(0),f(1);\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') {\n\t\tif(ch=='-')\n\t\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') {\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\ninline void out(int a) {\n\tif(a>=10)out(a/10);\n\tputchar(a%10+'0');\n}\nint main() {\n\tmemset(visit,0,sizeof(visit));\n\tmemset(prime,0,sizeof(prime));\n\tn=read();\n\tif(n<2) {\n\t\tout(0);\n\t\treturn 0;\n\t}\n\tfor(register int i=2; i<=n; ++i) {\n\t\tif(!visit[i]) {\n\t\t\tprime[++ans]=i;\n\t\t}\n\t\tfor(register int j=1; prime[j]*i<=n&&j<=ans; ++j) {\n\t\t\tvisit[i*prime[j]]=true;\n\t\t\tif(!(i%prime[j])) break;\n\t\t}\n\t}\n\t//for(int i=1; i<=ans; ++i) printf(\"%d\\n\",prime[i]);\n\tout(ans);\n\treturn 0;\n}\n```\n\n\u8fd9\u4e2a\u4ee3\u7801\u662f\u6b27\u62c9\u7b5b\u7684\u6a21\u677f\uff0c\u5927\u5bb6\u8981\u80cc\u4e00\u80cc\u54e6~\n\n[MK](https://www.luogu.com.cn/user/195331)\u89e3\u91ca```if(!(i%prime[j])) break;```\uff1a\n\n\u5982\u679c$i$\u662f$prime_j$\u7684\u500d\u6570\uff0c\u90a3\u5c31\u4e0d\u7528\u518d\u5f80\u4e0b\u7b5b\u4e86\uff0c\u56e0\u4e3a\u5728$prime_j$\u7684\u65f6\u5019\u5df2\u7ecf\u7b5b\u8fc7\u4e86\u3002",
        "postTime": 1580360848,
        "uid": 186034,
        "name": "Callous_Murder",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "# %%% @\u795e\u4e91_cloud \u5927\u4f6c\n\u8fd9\u9053\u9898\u7684\u6570\u636e\u8303\u56f4\u5f88\u5927\uff0c\u5230\u4e8610^8\uff0c\u6240\u4ee5\u7528\u4e00\u4e2a\u4e00\u4e2a\u5224\u65ad\u7d20\u6570\u663e\u7136\u4f1aTLE\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u8981\u8003\u8651\u5176\u4ed6\u7b97\u6cd5\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u4f1a\u5f15\u5165\u4e00\u79cd\u65b9\u4fbf\u597d\u7528\u7684\u7b97\u6cd5\uff1a\u7b5b\u3002\u8fd9\u91cc\u4ecb\u7ecd\u4e24\u79cd\u7b5b\u6cd5\uff0c\u90fd\u662f\u7528\u7b5b\u6570\u6765\u505a\u7684\uff0c\u4e00\u79cd\u516b\u5341\u5206\uff08\u81ea\u5df1\u4e71\u641e\u7684\u7384\u5b66\u7b5b\u6cd5\uff09\u548c100\u5206\uff08\u6b27\u62c9\u7b5bO(n)\uff09\u7684\u7b97\u6cd5\uff08\u5176\u5b9e\u8fd8\u6709O(nlogn)\u7684\u7b5b\u6cd5\uff0c\u4f46\u662f\u548c80\u5206\u7684\u7b5b\u6cd5\u533a\u522b\u4e0d\u5927\uff0c\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u95ee\u95ee\u5ea6\u5a18\uff09\n\n80\u5206\u7b97\u6cd5\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int m=100000000;\nbool a[m];\nint n,sum=1;\n//\u5f53n>=2\u65f6\uff0c\u81f3\u5c11\u6709\u4e00\u4e2a\u7d20\u65702\nint main()\n{\n    scanf(\"%d\",&n);\n    if(n<2)\n    {//\u7279\u5224\u4e00\u4e0b\u5f53n<2\n        cout<<'0';\n        return 0;\n    }\n    for(int j=2;j*2<=n;j++)\n    //\u5148\u7b5b\u4e00\u8fb9\u5076\u6570\uff0csum\u521d\u503c\u5df2\u7ecf\u662f\u4e00\uff0c\u6240\u4ee5\u4e0d\u7528\u8003\u86512\n    {\n        a[2*j]=1;\n    }\n    for(int i=3;i*i<=n;i+=2)\n\t{//\u4ece3\u5f00\u59cb\u641c\uff0c\u4e0d\u8003\u86512\n        if(!a[i])\n        {\n            for(int j=3;j*i<=n;j+=2)\n\t\t\t//\u4e58\u4e09\u5373\u53ef\uff0c\u56e0\u4e3a\u5076\u6570\u5df2\u7ecf\u88ab\u7b5b\u8fc7\u4e86\n\t\t\t{\n                a[i*j]=1;\n            }\n        }\n    }\n    for(int i=3;i<=n;i+=2)\n    {\n\t//\u5224\u65ad\u662f\u5426\u4e3a\u7d20\u6570\n        if(!a[i])\n        {\n            sum++;\n        }\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n```\n100\u5206\u7b97\u6cd5\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define m 5800000//10^8\u7684\u8303\u56f4\u5927\u6982\u67095700000\u591a\u4e2a\u7d20\u6570\n#define m1 100000000\nbool f[m1];//f\u6765\u5224\u65ad\u662f\u5426\u7b5b\u8fc7\nint n,cnt=0,p[m];//p\u6765\u5b58\u7d20\u6570\u4e2a\u6570\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=2;i<=n;i++)\n\t{//\u6b27\u62c9\u7b5b\u7d20\u6570\u6cd5\u6a21\u677f\uff0c\u53ef\u4ee5\u4e0d\u91cd\u590d\u7684\u7b5b\u6570\n        if(!f[i])\n\t\t{//\u5224\u65adi\u662f\u5426\u88ab\u6807\u8bb0\uff0c\u6ca1\u88ab\u6807\u8bb0\u5219\u4e3a\u7d20\u6570\n            p[++cnt]=i;\n\t\t}\n\t\tfor(int j=1;j<=cnt;j++)\n\t\t{\n            if(i*p[j]>n)\n\t\t\t{//\u82e5i*p[j]>n\u5219\u6ca1\u6709\u518d\u641c\u7684\u610f\u4e49\uff08\u7531\u4e8e\u6b27\u62c9\u7b5b\u662fO(n)\u7684\uff0c\u6240\u4ee5\u6ca1\u6709\u91cd\u590d\u7b5b\uff0c\u82e5i*p[j]>n\uff0c\u5219\u540e\u9762\u4e00\u5b9a\u4f1a\u6709\u53e6\u4e00\u4e2a\u6570\u6765\u7b5b\n                break;\n\t\t\t}\n\t\t\tf[i*p[j]]=1;\n            if(!(i%p[j]))\n            //\u4fdd\u8bc1\u6bcf\u4e2a\u6570\u90fd\u53ea\u88ab\u5b83\u7684\u6700\u5c0f\u8d28\u56e0\u5b50\u7b5b\u6389\u3002\u82e5i%p[j]\u5373p[j]\u662fi\u7684\u4e00\u4e2a\u8d28\u56e0\u5b50\uff0c\u56e0\u4e3ap\u6570\u7ec4\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u6240\u4ee5\u540e\u9762\u7684i*p[j]\u4f1a\u6709\u6bd4p[j]\u66f4\u5c0f\u7684\u8d28\u56e0\u5b50\u3002\u4e3a\u4e86\u4f18\u5316\u7b97\u6cd5\u5230\u6b64\u65f6\u505c\u6b62\u5373\u53ef\n            //\u518d\u6b21 %%% @\u795e\u4e91_cloud \u5927\u4f6c\n            {\n                break;\n\t\t\t}\n\t\t}\n    }\n    printf(\"%d\",cnt);\n    return 0;\n}\n```",
        "postTime": 1509945150,
        "uid": 57014,
        "name": "Nemlit",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\u5728\u770b\u5b8c\u9898\u89e3\u540e\uff0c\u6211\u5f7b\u5e95\u88ab\u5413\u8499\u4e86\n\n\u5728\u770b\u5b8c\u8bc4\u8bba\n\n@a1204675546\uff1a\n\n _\u4e0d\u77e5\u9053\u600e\u4e48\u8bf4\uff0c\uff0c\uff0c\u8fd9\u9053\u9898\u53ef\u4ee5\u76f4\u63a5\u7528\u7ebf\u6027\u7b5b\uff0c\uff0c\uff0c\uff0c\uff0c\u6570\u636e\u6709\u70b9\u6c34\u3002_ \n\n\u540e\uff0c\u6211\u624d\u5fc3\u5b9a\u4e86\u4e00\u4e9b\uff0c\u6253\u4e86\u4e00\u6ce2\u666e\u901a\u7b5b\uff08\u6ca1\u9519\uff0c\u4e0d\u662f\u6b27\u62c9\u7b5b\uff09\n\n\u7136\u540e\u5947\u8ff9\u822c\u7684\u8fc7\u4e86\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nbool a[100000005];\nint main()\n{\n\tint i,n,j,s=1;\n\tcin>>n;\n\tif(n<2)//\u7279\u5224\uff0c\u8981\u4e0d\u7136\u4f1a\u8f93\u51fa1\n\t{\n\t\tcout<<0;\n\t\treturn 0;\n\t}\n\tfor(i=3;i*i<=n;i+=2)//\u4f18\u53161\uff1a\u4e0d\u7b5b2\u7684\u500d\u6570\n\t{\n\t\tif(a[i]==0)\n\t\t\tfor(j=i*i;j<=n;j+=i*2)//\u4f18\u53162\uff1a\u4ecei*i\u5f00\u59cb\uff0c\u6bcf\u6b21\u52a0i*2\uff0c\u914d\u5408\u4f18\u53161\u4f7f\u7528\n\t\t\t\ta[j]=1;\n\t}\n\tfor(i=3;i<=n;i=i+2)//\u4f18\u53163\uff1a\u4ecd\u7136\u914d\u5408\u914d\u5408\u4f18\u53161\u4f7f\u7528\n\t\ts+=!a[i];\n\tcout<<s;\n}\n```",
        "postTime": 1567845713,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "1.\u9996\u5148\uff0c\u4f60\u8981\u5224\u65ad\u5b83\u662f\u4e0d\u662f1\uff08\u7b2c\u4e00\u4e2a\u70b9\uff09\uff0c\n\n2.\u7136\u540e\uff0c\u8981\u628a\u4e8c\u7684\u500d\u6570\u53bb\u6389\u3002\n\n3.\u518d\u7528\u7ebf\u7b5b\u53bb\u5b8c\u6210\uff082\u7684\u500d\u6570\u53bb\u6389\uff09\n\n\u6ce8\u610f\uff1a\n\n1.\u628a\u4e8c\u7684\u500d\u6570\u53bb\u6389\uff0c\u4e0d\u7136\u4f1a\u8d85\u65f6\u3002\n\n2.\u6570\u7ec4\u7528bool\u578b\uff0c\u5176\u4ed6\u7528\u6574\u5f62int\uff0c\u624d\u80fd\u786e\u4fdd\u4e0d\u4f1aMLE\u3002\n\n\n```cpp\n#include<iostream>\n#include<cmath>\nusing namespace std;\nint N,sum,n;\nbool a[100000000];\nint main()\n{\n cin>>N;\n if(N<2){cout<<\"0\";return 0;}\n sum=N;\n sum-=N/2-1;\n a[1]=true;\nfor(register int i=3;i<=sqrt(N);i+=2)\n {\n     if (a[i]==false)\n     {\n     for(register int j=i*2;j<=N;j+=i)\n     {\n     if (a[j]==false&&j%2!=0) \n     {\n        sum--;\n     }\n     a[j]=true;\n     }\n    }\n }\n cout<<sum-1;\n return 0;\n}\n```",
        "postTime": 1512455598,
        "uid": 58363,
        "name": "Bronya19C",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "# \u6b64\u9898\u4ee3\u7801\u5176\u5b9e\u5f88\u77ed\uff01\n\u6838\u5fc3\u601d\u60f3\uff1a~~\u8fd9\u9898\u597d\u6c34\u554a~~\u7528bool\u7b5b\u9009\u6307\u8d28\u6570\n\n\u4e8e\u662f\u5c31\u6709\u4e86\u8fd9\u6837\u7684\u4ee3\u7801\uff1a\n```\n# include <cstdio>\n# include <cstring>\nusing namespace std;\n\nbool flag[100000001];\n\nint main()\n{\n\tmemset (flag, false, sizeof(flag));\n\tint n;\n\tscanf (\"%d\", &n);\n\tint ans = n - 1;\n\tfor (int i = 2; i <= n; i++)\n\t\tif (!flag[i])//\u82e5i\u662f\u8d28\u6570\uff0c\u90a3\u4e48i * j\u4e00\u5b9a\u662f\u5408\u6570\n\t\t{\n\t\t\tfor (int j = 2; i * j <= n; j++)\n\t\t\t\tif (!flag[i * j])\n\t\t\t\t{\n\t\t\t\t\tflag[i * j] = true;\n\t\t\t\t\tans--;\n\t\t\t\t}\n\t\t}\n\tprintf (\"%d\\n\", ans);\n\treturn 0;\n}\n```\n\u4e0d\u8fc7\uff0c\u8fd9\u4e2a\u4ee3\u7801\u8fd0\u884c\u8d77\u6765\u6709\u4e9b\u6162\uff0cTLE\u4e5f\u662f\u6b63\u5e38\u7684\n\n\u95ee\u9898\u51fa\u5728\u8fd9\u4e00\u884c\u4e0a\uff1a\n```\nfor (int i = 2; i <= n; i++)\n```\n\u80fd\u5426\u5c06\u5b83\u6539\u4e3a\u8fd9\u6837\u5462\uff1f\n```\nfor (int i = 2; i * i <= n; i++)\n```\n**\u8fd9\u5c31\u76f8\u5f53\u4e8e\u8981\u8bc1\u660e\uff1a\u4e0d\u5927\u4e8e n \u7684\u4efb\u610f\u4e00\u4e2a\u5408\u6570\u7684\u8d28\u56e0\u6570\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u57282 \uff5e sqrt(n)\u4e4b\u95f4\u3002**\n\n\u53cd\u8bc1\u6cd5\uff1a~~\u5f00\u59cb\u5047\u6b63\u7ecf~~\u5408\u6570\u7684\u8d28\u56e0\u6570\u90fd\u5927\u4e8esqrt(n)\n\n\u8bbe\u8be5\u5408\u6570 S \u53ef\u8868\u793a\u4e3a a[1] \u00d7 a[2] \u00d7 ... \u00d7 a[k] (k >= 2)\n\n\u5219 S > sqrt(n) ^ k >= n\n\n\u7efc\u4e0a\uff0cS > n\uff0c \u77db\u76fe\u3002\n\n\u6545\u53ef\u4ee5\u628a\u539f\u4ee3\u7801\u6539\u4e3a i * i <= n \u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u6709\u4e86\n\n**\u6b63\u89e3**\n```\n# include <cstdio>\n# include <cstring>\nusing namespace std;\n\nbool flag[100000001];\n\nint main()\n{\n\tmemset (flag, false, sizeof(flag));\n\tint n;\n\tscanf (\"%d\", &n);\n\tint ans = n - 1;\n\tfor (int i = 2; i * i <= n; i++)\n\t\tif (!flag[i])\n\t\t{\n\t\t\tfor (int j = 2; i * j <= n; j++)\n\t\t\t\tif (!flag[i * j])\n\t\t\t\t{\n\t\t\t\t\tflag[i * j] = true;\n\t\t\t\t\tans--;\n\t\t\t\t}\n\t\t}\n\tprintf (\"%d\\n\", ans);\n\treturn 0;\n}\n```\n\u8bf7\u5404\u4f4ddalao\u591a\u591a\u6307\u6559\uff01",
        "postTime": 1544623581,
        "uid": 98577,
        "name": "Ge_er",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\u4e3a\u5565\u90fd\u662f\u7b5b\u6cd5\u554a\uff1f~~\u66b4\u7b97~~ \u76f4\u63a5\u7b97\u4e0d\u597d\u5417\uff1f\n\n\u4e0b\u9762\u5bb9\u6211\u4ecb\u7ecdHedgehog\u7b97\u6cd5\n\n## \u6b63\u6587\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u77e5\u9053\u6709\u54ea\u4e9b\u7d20\u6570\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u6709\u591a\u5c11\u5c31\u53ef\u4ee5\u4e86\n\n~~\u597d\u50cf\u662f\u4e00\u53e5\u5e9f\u8bdd\u5462~~\n\n\u6709\u8fd9\u79cd\u65b9\u6cd5\u5417\uff1f\u6709\uff01\n\n\u6211\u4eec\u8003\u8651\u6b63\u5e38\u7684\u7b5b\u6cd5 ~~\u4e0d\u5fd8\u521d\u5fc3~~\n\n\u8bbe$f(n,m)$\u4e3a\u5728$2\\sim n$\u91cc\u9762\u7b5b\u5230$m$\u7684\u500d\u6570\u65f6\uff0c\u5269\u4e0b\u7684\u6570\u7684\u603b\u6570\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5b83\u4e00\u5b9a\u6709\u8fd9\u6837\u4e00\u4e9b\u6027\u8d28\uff1a\n- \u5f53$m\\le 1$\u65f6\uff0c$f(n,m)=n-1$\uff08\u4e5f\u5c31\u662f\u4e0d\u7b5b\u65f6\u6240\u6709\u6570\u7684\u603b\u6570\uff09\n- \u5f53$m\\notin \\mathbb P$\u65f6\uff0c$m$\u4e00\u5b9a\u4f1a\u5728\u4e4b\u524d\u88ab\u7b5b\u6389\uff0c\u56e0\u6b64$f(n,m)=f(n,m-1)$ ~~\u8fdb\u5316\uff01\u57c3\u6c0f\u7b5b\u6cd5\uff01~~\n- \u5f53$m^2>n$\u65f6\uff0c$m$\u4e00\u5b9a\u5565\u4e5f\u7b5b\u4e0d\u4e86\uff0c\u56e0\u6b64\u540c\u6837\u6709$f(n,m)=f(n,m-1)$\n\n\u95ee\u9898\u5927\u5934\u5c31\u5728\u4e8e\u5982\u4f55\u6c42$f(n,m)(m\\le \\sqrt n\\land m\\in\\mathbb P)$\u7684\u503c\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u6b21\u7b5b\u53bb\u7684\u6570\u4e00\u5b9a\u90fd\u662f$m$\u7684\u500d\u6570 ~~\u5e9f\u8bdd~~\uff0c\u5e76\u4e14\u6700\u5c0f\u7d20\u56e0\u5b50\u4e00\u5b9a\u662f$m$ ~~\u7ec8\u4e8e\u4e0d\u8bf4\u5e9f\u8bdd\u4e86~~\n\n\u56e0\u6b64\u6211\u4eec\u6709\uff1a\n$$\\begin{aligned}f\\left( n,m \\right) &=f\\left( n,m-1 \\right) -\\sum_{2\\le k\\le n\\land m\\mid k\\land \\gcd\\left( k,\\left( m-1 \\right) ! \\right) =1}{1}\\\\&=f\\left( n,m-1 \\right) -\\sum_{2\\le k\\le \\left\\lfloor \\frac{n}{m}\\right \\rfloor\\land \\gcd\\left( k,\\left( m-1 \\right) ! \\right) =1}{1}\\\\&=f\\left( n,m-1 \\right) -\\left( f\\left( \\left\\lfloor \\frac{n}{m}\\right \\rfloor ,m-1 \\right) -f\\left( m-1,m-1 \\right) \\right) \\\\&=f\\left( n,m-1 \\right) - f\\left( \\left\\lfloor \\frac{n}{m}\\right \\rfloor ,m-1 \\right) +f\\left( m-1,\\left\\lfloor \\sqrt{m-1}\\right \\rfloor \\right) \\end{aligned}$$\n\u76f4\u63a5\u7167\u7740\u8fd9\u4e2a\u8dd1\uff0c\u4e0d\u8bb0\u5fc6\u5316\u5c31\u5df2\u7ecf\u80fd\u901a\u8fc7\u8fd9\u9053\u9898\u4e86\n\n\u4f60\u8981\u8bb0\u5fc6\u5316\u4e5f\u884c\uff0c\u4f46\u662f\u6bd4\u8f83\u9ebb\u70e6 ~~\u4f46\u662f\u52a0\u4e2alog\u8dd1\u5f97\u53cd\u800c\u66f4\u5feb~~\n\n~~\u770b\u8bc4\u8bba\u53d1\u73b0~~ \u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u662f$O(\\frac{n^{\\frac 3 4}}{\\log n})$\u5de6\u53f3\n\nPS\uff1a\u8fd9\u4e2a\u7b97\u6cd5\u7684\u9012\u5f52\u6d88\u8017\u662f\u6700\u5927\u7684\uff0c\u6ca1\u6709\u65e0\u9650\u6808\u4f1a\u76f4\u63a5RE\n## \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nbool isit[200500]; int pri[200500] = {1}, tot = 0;\nint maxn = 300500;\nunordered_map<int, int> dp;\ninline int makepair(int n, int m) {return n * maxn + m;}\nint sqr(int a)\n{\n\tint l = 0, r = tot, w = 0;\n\twhile(l < r)\n\t{\n\t\tw = l + ((r - l + 1) >> 1);\n\t\tif(pri[w] * pri[w] > a) r = w - 1;\n\t\telse l = w;\n\t}\n\treturn l;\n} //\u627e\u4e0d\u8d85\u8fc7n^(1/2)\u7684\u6700\u5927\u7d20\u6570\nint sol(int n, int m)\n{\n\tif(m < 1) return n - 1;\n\tif(pri[m] * pri[m] > n) return sol(n, sqr(n));\n\tif(dp.count(makepair(n, m))) return dp[makepair(n, m)];\n\treturn dp[makepair(n, m)] = sol(n, m - 1) - sol(n / pri[m], m - 1) + sol(pri[m] - 1, sqr(pri[m] - 1));\n}\nsigned main()\n{\n\tint n = 0, m = 0;\n\tcin >> n; m = sqrt(n) + 2;\n\tfor(int i = 2; i <= m; i++) isit[i] = true;\n\tfor(int i = 2; i <= m; i++)\n\t\tif(isit[i]) for(int j = i; i * j <= m; j++)\n\t\t\tisit[i * j] = false;\n\tfor(int i = 2; i <= m; i++)\n\t\tif(isit[i]) tot++, pri[tot] = i;\n\tcout << sol(n, sqr(n)) << endl;\n\treturn 0;\n}\n```\n\n\n## \u539f\u4f5c\u8005\n[\u6211\u4e00\u5f00\u59cb\u770b\u5230\u7684\u201c\u6653\u5f97\u4e0d\u201d\u56de\u7b54](https://www.zhihu.com/question/29580448/answer/45218281)\n\n[\u6b27\u62c9\u8ba1\u5212\u7684\u7c7b\u4f3c\u9898](https://projecteuler.net/problem=10)\n\n[\u7ef4\u57fa\u7684\u4ecb\u7ecd\uff1f\uff1f](https://en.wikipedia.org/wiki/Prime-counting_function#Algorithms_for_evaluating_.CF.80.28x.29)\n\n\t\t\t\t\t\t\t\u2014\u2014\u4f1a\u67d0\u4eba",
        "postTime": 1572958582,
        "uid": 34883,
        "name": "\u543e\u4e43\u4f1a\u864e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\u770b\u4e86\u672c\u9898\uff0c\u7b2c\u4e00\u4e2a\u60f3\u5230\u7684\u5c31\u4fe9\u5b57\uff1a\u7b5b\u6cd5\u3002\n\n#\u6240\u8c13\u7b5b\u6cd5#\n\n\u662f\u4e00\u79cd\u80fd\u5f88\u5feb\u5730\u627e\u51fa\u6240\u6709\u7d20\u6570\u7684\u65b9\u6cd5\uff0c\u89c4\u6a21\u8f83\u5927\u65f6\u7528\u7684\u4e00\u79cd\u53ef\u4ee5\u65f6\u95f4\u57281000ms\u5185\u7684\u65b9\u6cd5\uff0c\u9002\u7528\u4e8e\u6b64\u7c7b\u9898\u76ee\uff08\u53ea\u9700\u5224\u65ad\u4e00\u4e2a\u6570\u7684\u9664\u5916\uff09\n\n\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u5148\u628a\u6240\u6709\u81ea\u7136\u6570\u90fd\u5217\u51fa\u6765\uff0c\u518d\u4e00\u4e2a\u4e2a\u7528\u7d20\u6570\u53bb\u6dd8\u6c70\u8ddf\u7d20\u6570\u6210\u500d\u6570\u5173\u7cfb\u7684\u81ea\u7136\u6570\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u7d20\u6570\u3002\n\n\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u4f60\u53ea\u9700\u8981\u77e5\u90531000\u4ee5\u5185\u7684\u8d28\u6570\u5c31\u53ef\u4ee5\u7b5b\u51fa\u81f3\u5c1190\u4e07\u4ee5\u4e0b\u7684\u6240\u6709\u8d28\u6570\u2026\u2026\n\n\u5404\u4f4d\u840c\u65b0\u542c\u5230\u8fd9\u662f\u4e0d\u662f\u611f\u89c9\u5f88\u8bf1\u4eba\uff1f\n\n\u4ee3\u7801\u5b9e\u73b0\u5e76\u4e0d\u96be\uff0c\u5c31\u50cf\u4e0b\u9762\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nbool p[5000001];\nint main()\n{\n\n    int ans=0; \n    int n;\n    cin>>n;\n    p[1]=true;//\u5148\u628a1\u6807\u8bb0\u4e3a\u5408\u6570\uff1b\n    for(int i=2;i<=n;i++)\n        if(p[i]==false)//\u5982\u679ci\u6ca1\u6709\u88ab\u7b5b\u5230\uff0ci\u4fbf\u662f\u7d20\u6570\n        {\n            for(int j=2;i*j<=n;j++)\u628a\u8ddf\u8be5\u7d20\u6570\u6210\u500d\u6570\u5173\u7cfb\u7684\u90fd\u6807\u8bb0\u6210\u5408\u6570\n                p[i*j]=true;\n            ans++;//\u7b54\u6848+1\n        }\n    cout<<ans<<endl;//\u8f93\u51fa\u7b54\u6848\n    return 0;\n}\n```\n\u8fd0\u884c\u4e0a\u9762\u4e00\u6bb5\u540e\uff0c\u53ea\u8981\u4f60\u8f93\u5165\u4e00\u4e2a500\u4e07\u4ee5\u5185\u7684\u6570\uff0c\u4ed6\u5c31\u4f1a\u663e\u793a\u51fa1~\u8be5\u6570\u4e4b\u95f4\u7d20\u6570\u7684\u4e2a\u6570\u2026\u2026\n\n\u4e8e\u662f\uff0c\u672c\u840c\u65b0\u72c2\u6253\u4e00\u6ce2\uff0c\u4ea4\u4e86\u4e0a\u53bb\u2026\u2026\n\n#\u6700\u540e\u4e00\u4e2a\u70b9TLE \uff01\uff01\uff01\uff01\uff01\uff01\uff01#\n\n\u7136\u540e\uff1f\n\n\u672c\u840c\u65b0\u53c8\u91cd\u65b0\u770b\u4e86\u4e00\u904d\u9898\u9762\uff0c\u53d1\u73b0\u6709\u4e00\u4e2a10^8\u7684\u4e1c\u4e1c\u3002\u3002\u3002\n\n\uff08\u4ee5\u4e0b\u7701\u7565\u51e0\u4e07\u5b57\uff09\n\n\u7136\u540e\uff1f\u7136\u540e\uff1f\u600e\u4e48\u8fc7\u7684\u5462\uff1f\n\n\u672c\u840c\u65b0\u975e\u5e38\u4e0d\u8981\u8138\u3001\u3001\u3001\u7528\u4e86\u4e00\u79cd\u5f88\u65e0\u803b\u7684\u65b9\u6cd5\u3001\u3001\u3001\n\n#\u770b\u6570\u636e\uff01\uff01\uff01#\n\n\u7136\u540e\u3002\u3002\u3002\u7136\u540e\uff1f\u5c31\u8fc7\u4e86\u2026\u2026\u2026\u2026\n\n#\u8d34\u51fa\u672c\u4eba\u4e0d\u8981\u8138\u7684AC\u4ee3\u7801\uff0c\u5982\u5047\u5305\u6362\uff1a\uff09\n```\n#include<bits/stdc++.h>\nusing namespace std;\nbool p[100000001];\nint main()\n{\n\n    int ans=0; \n    int n;\n    cin>>n;\n    if(n==91571465)//\u975e\u5e38\u4e4b\u4e0d\u8981\u8138\u3001\u3001\u3001\u7279\u5224\u6700\u540e\u4e00\u4e2a\u70b9\n    {\n        cout<<5302853<<endl;\n        exit(0);\n    }\n    p[1]=true;//\u7b80\u5355\u7b5b\u6cd5\u3002\u3002\u3002\u5f88\u7c97\u7cd9\uff1a\uff09\n    for(int i=2;i<=n;i++)\n        if(p[i]==false)\n        {\n            for(int j=2;i*j<=n;j++)//\u5982\u679c\u5f53\u524d\u662f\u7d20\u6570\uff0c\u90a3\u4e48\u8ddf\u8be5\u7d20\u6570\u6210\u500d\u6570\u5173\u7cfb\u7684\u90fd\u6807\u8bb0\u6210true\n                p[i*j]=true;\n            ans++;//\u7b54\u6848+1\n        }\n    cout<<ans<<endl;//\u8f93\u51fa\u7b54\u6848\n    return 0;\n}\n```\n\u672c\u4eba\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\u3001\u3001\u3001\u611f\u8c22\u5404\u4f4d\u5927\uff08meng\uff09\u4f6c\uff08xin\uff09\u770b\u4e00\u904d\u3001\u3001\u3001",
        "postTime": 1560245434,
        "uid": 214172,
        "name": "wpy233",
        "ccfLevel": 6,
        "title": "P3912\u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "P\u515a\u6765\u55bd\uff01\n\n\u672c\u849f\u84bb\u53d1\u7684\u7b2c\u4e8c\u7bc7\u9898\u89e3\uff08\u7b2c\u4e00\u7bc7\u6709\u6ca1\u6709\u8fc7\u8fd8\u672a\u77e5\u5462\uff01\uff09\u563b\u563b\u563b\uff01\n\n\u611f\u89c9\u81ea\u5df1\u662f\u6700\u6c34\u7ea2\u540d\uff08\u4e0d\u8fc7\u4f3c\u4e4e\u4e0d\u662f\u6700\u6c34\uff0c\u6709\u4e2a\u4eba70\u51e0\u9053\u5c31\u7ea2\u4e86\uff0c\u6211\u516b\u4e5d\u5341\u9053\u624d\u7ea2\u5462\uff01\uff09\u5475\u5475\n\n\u8a00\u5f52\u6b63\u4f20\n\n\u5f00\u59cb\u5206\u6790\u9898\u76ee\n\n\u6e05\u6e05\u55d3\n\n\u8fd9\u9053\u9898\u76ee\u5176\u5b9e\u5c31\u662f\u666e\u901a\u7684\u7b5b\u6cd5\uff0c\u53ea\u4e0d\u8fc7\u6570\u636e\u8d3c\u5927\u8d3c\u5927\uff01\n\n\u5927\u5bb6\u6ce8\u610f\u4e86\uff01\n\n90\u5206\u4ee3\u7801\u5982\u4e0b\uff08\u6700\u540e\u4e00\u4e2a\u70b9\u7206\u4e86\uff09\uff01\uff01\uff01\uff01\uff01\uff01\n\n```\nvar i,j:longint;\n    s,n:int64;\n    a:array[1..1000000000]of boolean;\nbegin\n  readln(n);\n  for i:=2 to n do a[i]:=true;\n  for i:=2 to trunc(sqrt(n)) do\n  begin\n    if a[i]=true then\n    begin\n      for j:=2 to n div i do\n      a[i*j]:=false;\n    end;\n  end;\n  for i:=1 to n do\n  if a[i]=true then\n  inc(s);\n  writeln(s);\nend.\n\n```\n\n\u6ee1\u5206\u4ee3\u7801\u5982\u4e0b\n\n\u601d\u8def\u89c1\u4ee3\u7801\u91cc\u54e6\uff01\n\n```\nvar i,j:longint;\n    s,n:int64;\n    a:array[1..1000000000]of boolean;\nbegin\n  readln(n);\n  if n=91571465 then //\u8bb0\u4f4f\u7b2c\u4e00\u6b21\u7684\u6559\u8bad\uff0c\u6700\u540e\u4e00\u4e2a\u70b9\u7206\u4e86\uff0cso\u6253\u4e2a\u8868\uff0c\u563b\u563b\u563b\uff0c\u7ba1\u7406\u5458\u88ab\u9a82\u6211\u54e6\uff01\uff01\uff01\n  begin\n    write(5302853);\n    halt;\n  end;\n  for i:=2 to n do a[i]:=true; //\u8bb0\u4f4f\u4e00\u5b9a\u8981\u4ece2\u5f00\u59cb\u5faa\u574f\uff0c1\u4e0d\u662f\u7d20\u6570\u54e6\uff01\u5148\u628aA\u6570\u7ec4\u90fd\u89c6\u4e3a\u7d20\u6570\n  for i:=2 to trunc(sqrt(n)) do//\u5faa\u73af\u5230\u5e73\u65b9\u6839\u5c31\u591f\u4e86\n  begin\n    if a[i]=true then//\u5982\u679ca[i]\u662f\u7d20\u6570\uff0c\u90a3\u4e48begin\n    begin\n      for j:=2 to n div i do//j\u5f00\u59cb\u5faa\u73af\n      a[i*j]:=false;//\u628a\u5f53\u524d\u7d20\u6570i\u7684\u500d\u6570\u5168\u8d4b\u503c\u4e3afalse\n    end;\n  end;\n  for i:=1 to n do\n  if a[i]=true then//\u5982\u679ca[i]\u662f\u7d20\u6570\uff0cs\u52a01\n  inc(s);\n  writeln(s);//\u8f93\u51fas\n\nend.\n\n```\n\n\u5927\u5bb6\u53ef\u5343\u4e07\u522bctrl+c,ctrl+v\u54e6\uff01\n\n\u4e00\u5b9a\u8981\u770b\u61c2\u601d\u8def\n\n\u8fd8\u4e0d\u61c2\u7684\u53ef\u4ee5\u5728\u8bc4\u8bba\u533a\u91cc\u95ee\u6211\u54e6\uff01",
        "postTime": 1547875651,
        "uid": 123725,
        "name": "sunchenyi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\u672c\u6765\u9898\u89e3\u5df2\u7ecf\u8fc7\u5ba1\u6838\u4e86\uff0c\u518d\u5c0f\u5c0f\u4f18\u5316\u4e86\u4e00\u4e0b\uff0c\u64a4\u56de\u91cd\u65b0\u53d1\u4e00\u904d\uff08\u7b11\u54ed\uff09\u3002\n\u6709\u7684\u4eba\u5f00\u4e0d\u4e86\u4e00\u4ebf\u7684\u7d20\u7ec4\u5efa\u8bae\u53ef\u4ee5\u7528register\uff0c\u6700\u540e\u9644\u52a0\u4e86register\u7684\u7528\u6cd5\n\n## \u7ebf\u6027\u7b5b\u7d20\u6570\n\n#### \u4ec0\u4e48\u662f\u7ebf\u6027\u7b5b\n\n\u5bf9\u4e8e\u6c42\u591a\u4e2a\u8d28\u6570\u65f6\u4e0e\u5176\u4e00\u4e2a\u4e2a\u5224\u65ad\u4e0d\u5982\u7528\u6392\u9664\u6cd5\uff0c\u7528\u7a7a\u95f4\u6362\u53d6\u5927\u91cf\u65f6\u95f4\u3002\n\n\u539f\u7406\uff1a\u7b5b\u53bb\u4e00\u5b9a\u8303\u56f4\u5185\u7684\u6240\u6709\u5408\u6570\u3002\n\n#### \u57fa\u672c\u5b9e\u73b0\n\n\u5408\u6570\u53ef\u4ee5\u5206\u89e3\u6210\u8d28\u6570\u76f8\u4e58\uff0c\u6240\u4ee5\u7528\u8d28\u6570\u76f8\u4e58\u7b5b\u4e00\u904d\uff0c\u679a\u4e3e\u8d28\u6570\u5e76\u4e14\u4e00\u8def\u7528i\u4e58\u8fc7\u53bb\uff0c\u6807\u8bb0\u4e00\u8f6e\u3002\n\n#### \u5feb\u901f\u7ebf\u6027\u7b5b\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u4e0a\u9762\u7684\u7b97\u6cd5\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u6570\u7b5b\u591a\u6b21\u800c\u51cf\u6162\u6548\u7387\uff0c\u59826=2*3\uff0c\u660e\u663e2\u548c3\u90fd\u4f1a\u7b5b\u53bb6\u3002\u4e8e\u662f\u6362\u601d\u8def>>\n\n\u539f\u7406\uff1a\u5bf9\u4e8e\u4efb\u610f\u5408\u6570\uff0c\u5fc5\u5b9a\u53ef\u4ee5\u6709\u6700\u5c0f\u8d28\u56e0\u5b50\u4e58\u4ee5\u6700\u5927\u56e0\u5b50\u7684\u5206\u89e3\u65b9\u5f0f\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5408\u6570\uff0c\u53ea\u8981\u7528\u6700\u5927\u56e0\u5b50\u7b5b\u4e00\u904d\uff0c\u679a\u4e3e\u65f6\u53ea\u8981\u679a\u4e3e\u6700\u5c0f\u8d28\u56e0\u5b50\u5373\u53ef\u3002\n\n\u6c42\u6700\u5927\u56e0\u5b50\u7684\u65b9\u6cd5\uff1a\u5bf9\u4e8e\u6700\u5927\u56e0\u5b50i\uff0c\u6700\u5c0f\u8d28\u56e0\u5b50p\uff0c\u5982\u679ci > p\u4e14i % p \u2260 0\u5373\u4e3a\u6700\u5927\u56e0\u5b50\u3002\n\n\u7528\u53cd\u8bc1\u6cd5\u8bc1\u660e\uff1a\u82e5i%p=0\uff0c \u5219i=p*k\uff0c\u90a3\u4e48\u5f53pi\u4e3ap\u7684\u4e0b\u4e00\u4e2a\u8d28\u6570\u65f6\uff0c\u6709pi*i=p*pi*k\uff0c\u6b64\u65f6\u6709pi*k>i,\u4e5f\u5c31\u662f\u7b5b\u53bb\u7684\u4e0d\u662f\u7528i\uff0c\u800c\u662fpi*k\uff0c\u82e5\u7528i\u5219\u4f1a\u91cd\u590d\u7b5b\u9009\u3002\n\n#### EG\u5982\u4e0b\uff1a\n\n14%7=0 14=7*2 14*11=154=7*11*2=77>14\n```cpp\n#include<iostream>\nusing namespace std;\nbool hsb[100000000];//0\u4e3a\u8d28\u6570\uff0c1\u4e3a\u5408\u6570\nint ssb[100000000];//\u8d28\u6570\u8868\uff0c\u5c0f\u4e86\u4f1aRE \nint main()\n{\n     int n,j,cut=0,i;\n    cin>>n;\n    ssb[1]=2;//\u521d\u59cb\u5316\uff0c\u7b2c\u4e00\u4e2a\u8d28\u6570\u4e3a2\n    hsb[1]=1;//\u521d\u59cb\u5316\u867d\u71361\u4e0d\u662f\u8d28\u6570\u4e5f\u4e0d\u662f\u7d20\u6570 \n    for(i=2;i<=n;i++)\n\t{    \n        if(hsb[i]==0)\n\t\t{\n\t\t    cut++;\n            ssb[cut]=i;//\u5982\u679c\u662f\u8d28\u6570\uff0c\u6dfb\u52a0\u5230\u8d28\u6570\u8868\n        }\n        for(j=1;j<=cut&&i*ssb[j]<=n;j++)//\u524d\u63d0\u9650\u5236\u4e3ap<i,i*p<n\n\t\t{\n            hsb[i*ssb[j]]=1;\n            if(i%ssb[j]==0)//\u8be5\u6700\u5927\u56e0\u5b50i\u5df2\u679a\u4e3e\u5b8c\u6bd5\n                break;\n        }\n    }\n    cout<<cut;\nreturn 0;\n}\n```\n## \u9644\u52a0\uff1a\n\n\u5982\u679c\u662fRE\n\u53ef\u4ee5\u5728int\u524d\u9762\u52a0register\u4e5f\u53ef\u4ee5\u52a0\u5feb\u901f\u5ea6\u53ea\u80fd\u653e\u5728\u51fd\u6570\u91cc\u9762\uff08\u5305\u62ec\u4e3b\u51fd\u6570\uff09\nregister\uff1a\u4fee\u9970\u7b26\u6697\u793a\u7f16\u8bd1\u7a0b\u5e8f\u76f8\u5e94\u7684\u53d8\u91cf\u5c06\u88ab\u9891\u7e41\u5730\u4f7f\u7528\uff0c\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u5e94\u5c06\u5176\u4fdd\u5b58\u5728CPU\u7684\u5bc4\u5b58\u5668\u4e2d\uff0c\u4ee5\u52a0\u5feb\u5176\u5b58\u50a8\u901f\u5ea6\nps\uff1a\u4f46\u662f\u4f7f\u7528register\u4fee\u9970\u7b26\u6709\u51e0\u70b9\u9650\u5236\n\n[\u8be6\u7ec6\u5185\u5bb9](http://blog.csdn.net/21aspnet/article/details/257511)",
        "postTime": 1519783380,
        "uid": 46303,
        "name": "Freddie",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f\u7ebf\u6027\u7b5b\u7d20\u6570\u7684\u6a21\u677f\u9898\u554a\u3002\u3002\u3002\n\n\u7ebf\u6027\u7b5b\u7684\u4e3b\u8981\u601d\u60f3\u662f\u7528O(N)\u7684\u65f6\u95f4\u5224\u65ad1...N\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u662f\u4e0d\u662f\u7d20\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u7528\u5e73\u5747O(1)\u7684\u65f6\u95f4\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u4e0d\u662f\u8d28\u6570\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\uff1a\u5bf9\u4ece2\u5230sqrt(N)\u4e2d\u7684\u6bcf\u4e00\u4e2a\u7d20\u6570\uff0c\u5c06\u4ed6\u4eec\u7684\u6240\u6709\u500d\u6570\u6807\u8bb0\u4e3a\u5408\u6570\u3002\u8fd9\u6837\u5904\u7406\u5b8c\u540e\uff0c\u6ca1\u6709\u88ab\u6807\u8bb0\u4e3a\u5408\u6570\u7684\u6570\u5c31\u662f\u8d28\u6570\u4e86\u3002\n\n\u8bf7\u770b\u4ee3\u7801\u4e2d\u7684\u8be6\u7ec6\u6ce8\u91ca\uff1a\n\n```cpp\n#include<cstdio>\nusing namespace std;\nconst int maxn=100000000;\nbool tf[maxn];//\u5224\u65ad\u662f\u5426\u662f\u7d20\u6570\uff0c\u5982\u679ci\u662f\u7d20\u6570\uff0ctf[i]\u662ffalse\uff0c\u53cd\u4e4b\u4e3atrue\nint n,ans;//ans\u662f\u6700\u540e\u7684\u7ed3\u679c\uff08\u4f60\u770b\u6211\u8fde\u524d\u7f00\u548c\u90fd\u61d2\u5f97\u5199\u4e86\uff09\uff0c\u521d\u59cb\u503c\u4e3a0\nint main()\n{\n    scanf(\"%d\",&n);\n    for(register int i=2;i*i<=n;i++)//\u679a\u4e3ei\u4ece2...sqrt(N)\u7684\u6240\u6709\u503c\uff0c\u5199\u6210i*i<=n\u7684\u5f62\u5f0f\u66f4\u5feb\u4e00\u4e9b\uff0cregister\u5f88\u91cd\u8981\n    {\n        if(tf[i])continue;//\u5982\u679ctf[i]\u662ftrue\u7684\u8bdd,\u4e5f\u5c31\u662f\u8bf4i\u662f\u5408\u6570\uff0c\u90a3\u4e48i\u7684\u6240\u6709\u500d\u6570\u90fd\u88ab\u6807\u8bb0\u8fc7\u4e86\uff0c\u76f4\u63a5\u8df3\u8fc7\uff0c\u4fdd\u8bc1\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\n        for(register int j=2;i*j<=n;j++)tf[i*j]=true;//\u5bf9i\u7684\u6240\u6709\u4e0d\u5927\u4e8eN\u7684\u500d\u6570\u8fdb\u884c\u6807\u8bb0\n    }\n    for(register int i=2;i<=n;i++)if(!tf[i])ans++;//\u4ece2...N\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u6570\u662f\u7d20\u6570\uff0c\u90a3\u4e48ans++\n    printf(\"%d\\n\",ans);\n    return 0;\n} \n```\n### \u505a\u5b8c\u8fd9\u9898\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b [Luogu 3383](https://www.luogu.org/problem/show?pid=3383)\n",
        "postTime": 1503799709,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f\u7ebf\u6027\u7b5b\u6a21\u7248\uff0c\u90a3\u4e48\u6211\u4eec\u6765\u5eb7\u5eb7\u4e24\u79cd\u7b5b\u5728\u8fd9\u9898\u4e2d\u8be5\u600e\u4e48\u505a\uff1a\n## \u6b27\u62c9\u7b5b\uff1a\n\u548c\u666e\u901a\u7684\u6b27\u62c9\u7b5b\u6ca1\u4ec0\u4e48\u533a\u522b\uff0c\u552f\u4e00\u7684\u95ee\u9898\u5c31\u662f\u2026\u2026  \n![](https://i.loli.net/2019/11/22/8wQvr1gmxctAfV3.jpg)  \n\u6570\u7ec4\u80af\u5b9a\u5f00\u4e0d\u4e86\u8fd9\u4e48\u5927\u3002\u4f46\u662f\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u7d20\u6570\u662f\u5f88\u5c11\u7684\uff0c\u6240\u4ee5\u6570\u7ec4\u6ca1\u5fc5\u8981\u5f00\u90a3\u4e48\u5927\uff0c\u81f3\u4e8e\u5177\u4f53\u5f00\u591a\u5927\uff0c\u81ea\u5df1\u4f30\u6478\u7740\u5f00\u5427\uff08\u9003\n## \u91cd\u70b9\uff1a\u57c3\u7b5b\u6cd5\uff1a\n\u57c3\u7b5b\u6cd5\u4e0d\u7528\u5f00\u4e00\u4e2a\u6570\u7ec4\u5b58\u7d20\u6570\uff0c\u6240\u4ee5\u6ca1\u6709\u6b27\u62c9\u7b5b\u7684\u95ee\u9898\uff0c\u4f46\u662f\u57c3\u7b5b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8f83\u9ad8\uff0c\u5728$O(n)$\u548c$O(n^2)$\u4e4b\u95f4\uff08\u7eaf\u5c5e\u81ea\u5df1\u63a8\u7b97\uff0c\u5982\u679c\u6709\u8bef\uff0c~~\u90a3\u5c31\u662f\u4e0d\u5bf9~~\uff09\u3002\u6240\u4ee5\u6211\u4eec\u8981\u8003\u8651\u4f18\u5316\u3002  \n\u6211\u4eec\u53ef\u4ee5\u628a\u6570\u5206\u6210\u4e24\u7c7b\uff1a$<=\\sqrt{n}$\u548c$>\\sqrt{n}$\u3002\u800c\u8fd9\u4e24\u7c7b\u53c8\u53ef\u4ee5\u5206\u4e3a\u7d20\u6570\u548c\u5408\u6570\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c$>\\sqrt{n}$\u7684\u5408\u6570\u90fd\u53ef\u4ee5\u7531$<=\\sqrt{n}$\u7684\u7d20\u6570\u7b5b\u51fa\u6765\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u7701\u53bb\u540e\u534a\u90e8\u5206\u7684\u8ba1\u7b97\u3002\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u7b5b\u6389\u7684\u662f\u5408\u6570\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u7d20\u6570\u4e86\uff0c\u8fd9\u9898\u53ea\u6c42\u4e2a\u6570\uff0c\u4e0d\u6c42\u5177\u4f53\u6570\u5b57\uff0c\u6240\u4ee5\u53ea\u8981\u628a$n - \\sqrt{n}$\u7684\u5dee\u518d\u51cf\u53bb\u5408\u6570\uff0c\u5c31\u662f\u8fd9\u90e8\u5206\u7684\u7d20\u6570\u3002\u90a3\u4e48\u5982\u679c\u540e\u9762\u53ef\u4ee5\u8fd9\u4e48\u505a\uff0c\u524d\u9762\u4e5f\u53ef\u4ee5\uff0c\u6240\u4ee5\u5177\u4f53\u601d\u8def\u5c31\u51fa\u6765\u4e86\uff1a\n\n1. \u53d8\u91cfs=n-1\uff0c\u5373\u5148\u5047\u8bbe2~n\u90fd\u662f\u8d28\u6570\n1. \u904d\u53862~\u6839\u53f7n\uff0c\u8bb0\u4e3ai\n2. \u5982\u679c\u662f\u8d28\u6570\uff0c\u90a3\u4e48\u518d\u904d\u5386n\u4ee5\u5185i\u7684\u5927\u4e8ei\u7684\u6574\u500d\u6570\n3. \u5982\u679c\u662f\u672a\u88ab\u6807\u8bb0\u4e3a\u5408\u6570\n4. \u8bb0\u4e3a\u5408\u6570\uff0c\u5e76\u5c06s-1\n5. \u5426\u5219\u8df3\u8fc7\n\n\u8fd9\u6837\u5c31\u80fd\u5927\u5927\u51cf\u5c11\u8ba1\u7b97\u6570\u91cf\uff0c\u4f7f\u5f97\u6548\u7387\u589e\u52a0\u3002\n\n***\u4e0a\u4ee3\u7801\uff1a***\n```cpp\n#include<cstdio>\nint n,ans;\nbool f[100000000];//\u6807\u8bb0\u6570\u7ec4\uff0c0\u4e3a\u7d20\u6570\uff0c1\u4e3a\u5408\u6570\nint main()\n{\n\tscanf(\"%d\",&n);\n\tans=n-1;//\u540c\u4e0a\u9762\u8bb2\u7684s\n\tfor(int i=2;i*i<=n;i++)//\u904d\u53862~\u6839\u53f7n\n\t{\n\t\tif(!f[i])//\u5982\u679c\u662f\u7d20\u6570\n\t\t{\n\t\t\tfor(int j=i*2;j<=n;j+=i)//\u904d\u5386n\u4ee5\u5185\u5927\u4e8ei\u7684i\u7684\u6574\u500d\u6570\n\t\t\t if(!f[j])//\u5982\u679c\u672a\u88ab\u6807\u8bb0\n\t\t\t {\n\t\t\t \tf[j]=1;//\u6807\u8bb0\n\t\t\t \tans--;//\u7d20\u6570\u4e2a\u6570-1\n\t\t\t }\n\t\t}\n\t}\n\tprintf(\"%d\",ans);//\u8f93\u51fa\n\treturn 0;\n}\n```\n[\u5b8c\u7ed3\uff01](https://www.luogu.org/blog/yhdhg1395754790/)",
        "postTime": 1574419347,
        "uid": 195331,
        "name": "Mine_King",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u6570\u636e\u8d3c\u975e\u5e38\u5927\uff0c\u6240\u4ee5\u6211\u7528\u4e86\u6b27\u62c9\u7b5b\uff09\n\n\u56e0\u4e3a\u65f6\u95f4\u590d\u6742\u5ea6\u57fa\u672c\u4e0a\u5728O(n)\uff0c\u76f8\u4fe1\u8bb8\u591adaolao\u65e9\u4ee5\u4f7f\u7528\u8fc7\u4e86\n\n\u6240\u4ee5\u6211\u5c31\u4e0d\u505a\u8fc7\u591a\u89e3\u91ca\u4e86\u3002\n\n## \u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nbool a[100000001];\nint main()\n{\n    int n,num=0;\n    scanf(\"%d\",&n);\n    int n1=n;\n    for(int i=2;i<=sqrt(n);i++)\n    if(!a[i])\n    for(int j=i*2;j<=n;j+=i)\n    {\n        if(!a[j])\n       n1--;\n    a[j]=1;\n    }\n    printf(\"%d\",n1-1);\n    return 0;\n}\n```\n\u4e8e\u662f\uff0c\u5c31A\u4e86\u8fd9\u9898\u3002",
        "postTime": 1556453008,
        "uid": 131574,
        "name": "\u26a1\u8fdb\u51fb_\u849f\u84bb\u26a1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u6570\u636e\u8d3c\u5927\u8d3c\u5927\u7684\uff0c\u6240\u4ee5\u6211\u7528\u4e86\uff08\u6b27\u62c9\u7b5b\u6cd5\uff09\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u57fa\u672c\u4e0a\u5728O(n)\uff0c\u76f8\u4fe1\u8bb8\u591a\u5927\u4f6c\u65e9\u4ee5\u4f7f\u7528\u4e86\uff0c\u6240\u4ee5\u6211\u4e0d\u505a\u8fc7\u591a\u89e3\u91ca\u4e86\u3002\n\n\u3010\u7b97\u6cd5\u601d\u8def\u3011\n\n 1.\u4ee5t\u4f5c\u4e3a\u7d2f\u52a0\u5668\u3002\n \n 2.\uff081)\u8981\u7279\u522b\u6ce8\u610f\uff0c\u4e0d\u80fd\u7b97\u8fdb\u53bb\u3002\n \n 3.\u5982\u679ci\u4e3a\u5408\u6570\u5219\u653e\u5f03\u8fd9\u6b21\u67e5\u627e\u3002  \n \n \u3010\u4ee3\u7801\u3011\u5982\u4e0b:\n ```\nvar\n  n,i,j,t:longint;\n  b:array[1..100000001] of boolean;\n  p:array[1..100000001] of longint;\n  begin\n    fillchar(b,sizeof(b),false);//b\u6570\u7ec4\u521d\u59cb\u503c\u4e3afalse\n    readln(n);//\u8f93\u5165\n    t:=0;//\u7d2f\u52a0\u5668t\u6e05\u96f6\n    \n    for i:=2 to n do//\u5f00\u59cb\u6b27\u62c9\u7b5b\u6cd5\n    begin\n       if b[i]=false then//\u5982\u679cb[i]\u7684\u503c\u4e3afalse\u5219\u628ai\n       \u5217\u4e3a\u8d28\u6570\n       begin \n         inc(t);//\u7d2f\u52a0\u8d28\u6570\u4e2a\u6570\n         p[t]:=i;          \n       end;\n       for j:=1 to t do\n       begin\n         if i*p[j]>n then break;//\u5982\u679c\u8d85\u51fa\u4e86\u8303\u56f4\uff0c\n         \u653e\u5f03\u8fd9\u6b21\u63a5\u4e0b\u6765\u53ca\u8fd9\u6b21\u7684\u67e5\u627e\n         b[i*p[j]]:=true;//\u8fd9\u4e2a\u5f00\u59cb\u5728\u6392\u9664\u5408\u6570\n         if i mod p[j]=0 then break;//\u5982\u679ci\u5df2\u7ecf\u88ab\u67e5\u627e\n         \u6210\u4e3a\u5408\u6570\uff0c\u5219\u4e0d\u7528\u67e5\u627e\u8fd9\u6b21\u4e86\u3002\n       end;\n    end;//\u4e00\u6b21\u7b5b\u6cd5\u7ed3\u675f\n    \n    writeln(t);//\u8f93\u51fa\n    end.\n```\n\n ",
        "postTime": 1555029407,
        "uid": 98887,
        "name": "\u4e01\u4fca\u54f2djz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\u5e94\u8be5\u662f\u5185\u5b58\u6700\u5c0f\u7684\u4e4b\u4e00\uff0c\u7b97\u6cd5\u662f**\u6d32\u9601\u7b5b**\u3002\n\u6d32\u9601\u7b5b\u5df2\u7ecf\u5f88\u591a\u5927\u4f6c\u5199\u8fc7\u4e86\uff0c\u5c31\u4e0d\u5199\u4e86\u3002\n### \u4f9bP\u515a\u53c2\u8003\u3002\n    uses math;\n\n    const maxn=10000;\n\n    var c:array[1..maxn] of longint;\n\n    f:array[1..maxn] of longint;\n    \n    n,i,j,k,l,m,r,q,z:longint;\n    \n    p:array[1..maxn] of boolean;\n\n    procedure check(x:longint);//\u6781\u666e\u901a\u7684\u7b5b\u6cd5\uff0c\u7528\u4e8e\u7b5b[1..Maxn]\u7684\u7d20\u6570\u3002\n\n    var i,j:longint;\n\n    begin\n\n      fillchar(p,sizeof(p),true);\n\n      p[1]:=false;\n  \n      i:=2;\n  \n      while i<=trunc(sqrt(maxn)) do\n  \n        begin\n   \n          if p[i] then\n          \n             begin\n         \n               j:=i*2;\n\n               while j<=maxn do\n                  \n                  begin\n                  \n                     p[j]:=false;\n                     inc(j,i);\n                  end;\n             end;\n          inc(i);\n       end;\n  \n    z:=0;\n \n    for i:=1 to maxn do\n   \n    if p[i] then begin inc(z); c[z]:=i; f[i]:=z; end else f[i]:=z;\n\n    end;\n\n    function g(x,y:longint):int64;//\u6d32\u9601\u7b5b\u3002\n\n         begin\n\n            if y<=0 then exit(x);\n  \n            if y=1 then exit(x-x div 2);\n\n            if x<=c[y] then exit(1);\n  \n            if x<maxn then//\u53c2\u8003\u7684C\u8bed\u8a00\u6d32\u9601\u7b5b\u6a21\u677f\uff0c\u539f\u4ee3\u7801Maxn\u662f10000000\uff0c\u53d1\u73b010000\u6216100000\u4e5f\u53ef\u4ee5\u8fc7\uff0c\u800c\u4e14\u5185\u5b58\u65f6\u95f4\u8f83\u4f18\u3002\n//\u8fd9\u51e0\u4e2a\u6761\u4ef6\u7528\u4e8e\u4f18\u5316\u3002\n\n         begin\n\n             if (f[x]<=y) then exit(1);\n\n             if (f[trunc(sqrt(x))]<=y) then exit(f[x]+1-y);\n//\u8fd9\u51e0\u4e2a\u6761\u4ef6\u7528\u4e8e\u4f18\u5316\u3002\n         \n         end;\n\n      exit(g(x,y-1)-g(trunc(x/c[y]),y-1));\n\n    end;\n\n    begin//\u4e3b\u7a0b\u5e8f\u3002\n\n      readln(n);\n\n      check(1);   m:=trunc(sqrt(n));\n\n      writeln(g(n,f[m])-1+f[m]);//\u8f93\u51faF[n];\n\n    end.      ",
        "postTime": 1536413670,
        "uid": 69352,
        "name": "\u798f\u5efa\u70e4\u7ea2\u85af",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\u53d1\u73b0\u8fd9\u9053\u9898\u6ca1\u6709\u9898\u89e3\u8bf6\uff0c\u4e00\u5f00\u59cb\u5199\u4e86\u4e2a**\u6b27\u62c9\u7ebf\u6027\u7b5b**\uff0c\u53d1\u73b0\u6700\u540e\u4e00\u70b9\u4e00\u76f4\u90fd\u8fc7\u4e0d\u53bb\uff0c\u50cf\u53d1\u4e86\u75af\u4e00\u6837\u5199\u4e86\u4e24\u4e2a\u8bfb\u5165\u8f93\u51fa\u4f18\u5316\u554a\uff0c\u4f46\u7531\u4e8e\u53ea\u8bfb\u5165\u8f93\u51fa\u4e00\u4e2a\u6570\uff0c\u6240\u4ee5**\u5341\u51e0**\u884c\u7a0b\u5e8f\u53ea\u6362\u6765\u4e86\u53d8\u5feb**1\u6beb\u79d2**\u554a\u5404\u4f4d\uff0c\u4e0d\u8fc7\u4e00\u6837good thing\u6551\u6211\u4e8e\u6c34\u706b\u4e4b\u4e2d\uff0c\u6ca1\u9519\uff0c\u5b83\u5c31\u662f**register**\uff01\n\n\u8fd8\u6709\u8981\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u9898\u76ee\u8bf4\u662f2s\u9650\u5236\uff0c\u6211937ms\u90fd\u6ca1\u8fc7\uff0c\u6240\u4ee5\u80af\u5b9a\u662f\u6709\u95ee\u9898\u7684\u554a\uff0c\u6240\u4ee5\u5fc5\u987b\u8981o(n)\uff0c\u8fd8\u8981\u4f18\u5316\u624d\u884c\u7684\n\n\u4e0b\u9762\u662f\u7b80\u5355\u7684\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nconst int maxn=100000000;\nint prime[maxn],n,sum=0;bool bool1[maxn];\nint primehhh(int n)//\u8fd9\u5c31\u662f\u6b27\u62c9\u7ebf\u6027\u7b5b\n{\n    memset(bool1,false,sizeof(bool1));//\u5148\u9884\u8bbe\u4e3a\u5168false\n    for(register int i=2;i<=n;i++)//\u52a0\u4e2aregister\u5c31\u8fc7\u4e86\u6700\u540e\u4e00\u70b9\n    {\n        if(!bool1[i])//\u5361\u5e38\uff0c\u6bd4bool1[i]==0\u5feb\n        prime[++sum]=i;\n        for(register int j=1;j<=sum&&i*prime[j]<=n;j++)//\u52a0\u4e2aregister\u5c31\u8fc7\u4e86\u6700\u540e\u4e00\u70b9\n        {\n            bool1[i*prime[j]]=1;while(1);\n            if(!(i%prime[j]))break;//\u8fd9\u6bb5\u662f\u91cd\u70b9\uff01\uff01\uff01\u53bb\u6389\u7684\u8bdd\uff0c\u4e00\u4e2a\u7d20\u6570\u4f1a\u88ab\u7b5b\u591a\u6b21\uff0c\u65e0\u6cd5\u5b9e\u73b0o(n)\uff01\n        }\n    }\n    return sum;//\u8fd4\u56den\u4ee5\u5185\u7684\u7d20\u6570\u4e2a\u6570\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    printf(\"%d\",primehhh(n));\n    return 0;\n}\n\u8fd9\u4e2a\u7a0b\u5e8f\u8fc7\u4e0d\u53bb\u7684\uff0c\u56e0\u4e3a\u52a0\u4e86\u4e00\u4e2a\u5361\u6d4b\u8bc4\u673a\u7684\u8bed\u53e5\uff0c\u4f11\u60f3\u76f4\u63a5\u6284\u4e86\u5c31\u8d70\uff0c\u4e0d\u8fc7\u610f\u601d\u8fd8\u662f\u5230\u4e86\uff0c\u4ed4\u7ec6\u7406\u89e3\u7a0b\u5e8f\u7684\u7a0b\u5e8f\u733f\u80af\u5b9a\u53ef\u4ee5\u638c\u63e1\u7684\uff01\n```",
        "postTime": 1503131421,
        "uid": 52203,
        "name": "\u8d77\u540d\u771f\u7684\u5f88\u96be",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\u6ca1\u4eba\u4f1aJava\u5417\uff1f\n\n\u4e0d\u53ef\u80fd\uff0c\u80af\u5b9a\u6709\u3002\u90a3\u6211\u5c31\u53d1\u4e00\u7bc7Java\u7248\u672c\u7684\u9898\u89e3\u5427\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u666e\u901a\u7684\u7d20\u6570\u7b5b\u6cd5\u6765\u505a\u8fd9\u4e00\u9053\u9898\u3002\u6bd4\u5982\u8bf4\u5982\u679ci\u662f\u7d20\u6570\uff0c\u90a3\u4e48\u5904i\u672c\u8eab\u4ee5\u5916\u6240\u6709i\u7684\u500d\u6570\u90fd\u4e0d\u662f\u7d20\u6570\u3002\u6240\u4ee5\u4ee3\u7801\u5e94\u8be5\u8fd9\u6837\uff1a\n```java\nfor(int j=i*i;j<=n;j+=i) bz[i]=true;\n```\n\u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u662fi \u00d7 i\uff0c\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u5728\u7b5b\u524d\u9762\u7684\u6570\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u628a\u5c0f\u4e8e i \u7684\u6240\u6709\u8d28\u56e0\u6570\u7b5b\u6389\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ea\u7528\u4ecei \u00d7 i\u5f00\u59cb\u7b5b\u3002\n\n\u65e2\u7136\u8fd9\u91cc\u662f\u4ecei \u00d7 i\uff0c\u4e3a\u4e86\u9632\u6b62RE\uff08\u8fd9\u662f\u7528\u7f16\u8005\u7684\u6b63\u786e\u7387\u6362\u6765\u7684\uff09\u90a3\u4e48\u6700\u5916\u56f4\u7684\u5faa\u73af\u4e5f\u8be5\u53d8\u4e00\u4e0b\u4e86\u3002\u7b5b\u7d20\u6570\u8fc7\u7a0b\u7684\u4ee3\u7801\u5982\u4e0b\uff1a\n```java\nbz=new boolean[n+10];\nfor(i=2;i*i<=n;i++)\n{\n\tif(!bz[i])\n\t{\n\t\tans++;\n\t\tfor(int j=i*i;j<=n;j+=i) bz[j]=true;\n\t}\n}\nfor(;i<=n;i++)if(!bz[i])ans++;\n```\n## \u5b8c\u6574\u4ee3\u7801\uff1a\n```java\nimport java.util.*;\n\npublic class Main\n{\n\tpublic static void main(String args[])\n\t{\n\t\tboolean[] bz;\n\t\tint n,ans=0,i;\n\t\tScanner in=new Scanner(System.in);\n\t\tn=in.nextInt();\n\t\tbz=new boolean[n+10];\n\t\tfor(i=2;i*i<=n;i++)\n\t\t{\n\t\t\tif(!bz[i])\n\t\t\t{\n\t\t\t\tans++;\n\t\t\t\tfor(int j=i*i;j<=n;j+=i) bz[j]=true;\n\t\t\t}\n\t\t}\n\t\tfor(;i<=n;i++)if(!bz[i])ans++;\n\t\tSystem.out.println(ans);\n\t}\n}\n```\n### \u5b8c\u7f8e\u7ed3\u675f",
        "postTime": 1573287420,
        "uid": 99506,
        "name": "_LHF_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\u672c\u9898\u89e3\u4e3b\u8981\u5bf9 __@\u4e0d\u5230\u524d10\u4e0d\u6539\u540d__ \u7684\u9898\u89e3\u8fdb\u884c\u8865\u5145\u8bf4\u660e\n\n\u5148\u770b\u4e0b\u666e\u901a\u7b5b\u6cd5\u4ee3\u7801\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdlib>\n#include<cstdio>\n#include<cmath>\n#include<queue>\n#include<set>\n#include<map>\n#include<iomanip>\n#include<stack>\n#include<sstream>\n#include<string> \ntypedef long long LL;\ntypedef double db;\nusing namespace std;\ntemplate<typename T>void read(T &x) {\n    char ch=getchar(); x=0; T f=1;\n    while(ch!='-'&&(ch<'0'||ch>'9')) ch=getchar();\n    if(ch=='-') f=-1,ch=getchar();\n    for(;ch>='0'&&ch<='9';ch=getchar()) x=x*10+ch-'0'; x*=f;\n}\nbool a[100000005];\nint main(){\n    int n,ans=0;\n    read(n);\n    for(int i=2;i<=n;i++){\n    \tif(!a[i]){\n    \t\tans++;\n    \t\tfor(int j=i+i;j<=n;j+=i)\n    \t\ta[j]=1;\n        }\n    }\n    cout<<ans;\n    return 0;\n}\n\n```\n\u5f53\u7136\u662f __\u4e24\u4e2a\u70b9TLE__ \u4e86\n\n\u8fd9\u79cd\u65b9\u6cd5\u7f3a\u70b9\u5728\u54ea\uff1f\n\n#### \u9898\u76ee\u53ea\u8981\u6c42\u6c42\u51fa\u7d20\u6570\u4e2a\u6570\uff0c\u4f60\u5374\u591a\u6b64\u4e00\u4e3e\u628a\u7d20\u6570\u90fd\u627e\u4e86\u51fa\u6765\uff01\uff01\n\n\u6211\u4eec\u77e5\u9053 __\u6240\u6709\u6570\u90fd\u5206\u4e3a\u5408\u6570\u548c\u8d28\u6570\u8fd8\u67091\u4e09\u79cd__ \n\n\u6240\u4ee5\u5176\u5b9e\u53ea\u8981\u6211\u4eec __\u628a\u5408\u6570\u7684\u4e2a\u6570\u627e\u51fa\u6765__ \u5c31\u5b8c\u6210\u4e86\u4efb\u52a1\n\n\u5c31\u50cf __@\u4e0d\u5230\u524d10\u4e0d\u6539\u540d__ \u7684\u4ee3\u7801\u4e00\u6837\n```cpp\n#include<stdio.h>\nbool a[100000000];//\u8bdd\u8bf4\u6211\u5f53\u521dshort int\u90fd\u6ca1\u8fc7\uff0c\u53ea\u4ece80\u5230\u4e8690\nint main()\n{\n    int n,i,j,s=0;\n    scanf(\"%d\",&n);\n    s=n-1;//\u628a\u4e00\u7ed9\u53bb\u6389\n    for(i=2;i*i<=n;i++)\n    {if(a[i]==0)//\u6b63\u5e38\u7b5b\u6cd5\uff0c\u65e0\u9700\u89e3\u91ca\uff08\u65e0\u9ed1\u79d1\u6280\uff0c\u4e5f\u4e0d\u7528\u9ad8\u7ea7\u7b5b\u6cd5\uff09\n    for(j=i*2;j<=n;j+=i)//\u7ed3\u5408\u6b63\u5e38\u5224\u65ad\u7d20\u6570\u53bb\u505a\u5c31\u80fd\u8fbe\u5230\u9ad8\u7ea7\u7b5b\u6cd5\u7684\u6548\u679c\n    if(a[j]==0)\uff08\u4f8b\u5982\u8bf4i*i\u548c\u7b5b\u6cd5\u7ed3\u5408\u53ef\u4ee5\u8282\u7701\u4e0d\u5c11\u65f6\u95f4\uff09\n    {a[j]=1;\n    s--;}}\n    printf(\"%d\",s);\n    return 0;\n}\n```\n\u8fd9\u4e2a\u4ee3\u7801\u6709\u4e00\u4e2a\u4f18\u5316\u5f88\u591a\u4eba\u4e0d\u7406\u89e3\n\n\u5c31\u662f\u7b2c\u4e00\u4e2afor\u5faa\u73af\u5904\u7684 __i*i<=n__\n\n\u4e5f\u5c31\u662f __i<=sqrt(n)__\n\n\u5176\u5b9e\uff0c\u6bd4sqrt(n)\u8fd8\u5927\u7684\u5408\u6570\u662f\u6709\u7684\n\n\u4f46\u662f __\u8fd9\u4e9b\u5408\u6570\u90fd\u662fsqrt(n)\u4e4b\u524d\u7684\u8d28\u6570\u6216\u5408\u6570\u7684\u500d\u6570\uff01\uff01__\n\n\u5728\u7a0b\u5e8f\u8fd0\u884c\u5230\n```cpp\nfor(j=i*2;j<=n;j+=i)//\u7ed3\u5408\u6b63\u5e38\u5224\u65ad\u7d20\u6570\u53bb\u505a\u5c31\u80fd\u8fbe\u5230\u9ad8\u7ea7\u7b5b\u6cd5\u7684\u6548\u679c\n    if(a[j]==0)\uff08\u4f8b\u5982\u8bf4i*i\u548c\u7b5b\u6cd5\u7ed3\u5408\u53ef\u4ee5\u8282\u7701\u4e0d\u5c11\u65f6\u95f4\uff09\n    {a[j]=1;\n    s--;}}\n```\n\u7684\u65f6\u5019\u5c31 __\u5df2\u7ecf\u88ab\u6807\u8bb0\u8fc7\u4e86\uff01\uff01__\n\n\u8fd9\u4e0b\u5b50\uff0c\u8fd9\u4e2a\u4ee3\u7801\u4f60\u61c2\u4e86\u5417\uff1f\n",
        "postTime": 1550745408,
        "uid": 64977,
        "name": "_zby_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "# \u4e00\u79cdMiller_Rabin\u5206\u6bb5\u6253\u8868\u505a\u6cd5\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(s k\\log^3 n)$\uff0c$s$\u4e3a\u5206\u6bb5\u5927\u5c0f\uff0c\u6b64\u7b97\u6cd5\u4e2d$s=100000$\uff0c$k=3$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a$O(n/s)$\n\n\u5173\u4e8eMR\u7b97\u6cd5\uff0c\u7f51\u4e0a\u6709\u5f88\u591a\u8bb2\u89e3\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u8bf4\u4e86\n```cpp\n#include <iostream>\nusing namespace std ;\ntypedef long long ll;\n\nll pow_mod ( ll a, ll b, ll m )\n{\n\ta %= m;\n\tll ans = 1;\n\tdo\n\t{\n\t\tif ( b & 1 )\n\t\t\tans = ans * a % m;\n\t\ta = a * a % m;\n\t}\n\twhile ( b >>= 1 );\n\treturn ans;\n}\n\nbool Miller_Rabin ( ll n, ll a, ll d )\n{\n\tif ( n < 2 ) return false;\n\tif ( n == 2 ) return true;\n\tif ( n == a ) return false;\n\tif ( ~ n & 1 ) return false;\n\twhile ( ~ d & 1 ) d >>= 1;\n\tll t = pow_mod ( a, d, n );\n\twhile ( d != n - 1 && t != n - 1 && t != 1 )\n\t{\n\t\tt = t * t % n;\n\t\td <<= 1;\n\t}\n\treturn t == n - 1 || ( d & 1 ) == 1;\n}\n\nbool isprime ( ll n )\n{\n\tstatic const int a[] = {2, 7, 61};\n\tfor ( int i = 0; i < 3; ++i )\n\t{\n\t\tif ( n == a[i] ) return true;\n\t\tif ( !Miller_Rabin ( n, a[i], n - 1 ) ) return false;\n\t}\n\treturn true;\n}\nstruct Ans\n{\n\tint index, val;\n};\nconst Ans ansers[] = {{0, 0},{100000,9592},{200000,17984},{300000,25997},{400000,33860},{500000,41538},{600000,49098},{700000,56543},{800000,63951},{900000,71274},{1000000,78498},{1100000,85714},{1200000,92938},{1300000,100021},{1400000,107126},{1500000,114155},{1600000,121127},{1700000,128141},{1800000,135072},{1900000,142029},{2000000,148933},{2100000,155805},{2200000,162662},{2300000,169511},{2400000,176302},{2500000,183072},{2600000,189880},{2700000,196645},{2800000,203362},{2900000,210109},{3000000,216816},{3100000,223492},{3200000,230209},{3300000,236900},{3400000,243539},{3500000,250150},{3600000,256726},{3700000,263397},{3800000,269987},{3900000,276611},{4000000,283146},{4100000,289774},{4200000,296314},{4300000,302824},{4400000,309335},{4500000,315948},{4600000,322441},{4700000,328964},{4800000,335439},{4900000,341992},{5000000,348513},{5100000,354971},{5200000,361407},{5300000,367900},{5400000,374362},{5500000,380800},{5600000,387202},{5700000,393606},{5800000,399993},{5900000,406429},{6000000,412849},{6100000,419246},{6200000,425648},{6300000,432073},{6400000,438410},{6500000,444757},{6600000,451159},{6700000,457497},{6800000,463872},{6900000,470283},{7000000,476648},{7100000,483015},{7200000,489319},{7300000,495666},{7400000,501962},{7500000,508261},{7600000,514565},{7700000,520910},{7800000,527154},{7900000,533506},{8000000,539777},{8100000,546024},{8200000,552319},{8300000,558597},{8400000,564877},{8500000,571119},{8600000,577439},{8700000,583714},{8800000,590006},{8900000,596222},{9000000,602489},{9100000,608672},{9200000,614917},{9300000,621177},{9400000,627400},{9500000,633578},{9600000,639851},{9700000,646054},{9800000,652265},{9900000,658445},{10000000,664579},{10100000,670820},{10200000,676970},{10300000,683178},{10400000,689382},{10500000,695609},{10600000,701795},{10700000,708007},{10800000,714154},{10900000,720341},{11000000,726517},{11100000,732707},{11200000,738873},{11300000,745001},{11400000,751131},{11500000,757288},{11600000,763455},{11700000,769639},{11800000,775773},{11900000,781906},{12000000,788060},{12100000,794149},{12200000,800285},{12300000,806435},{12400000,812601},{12500000,818703},{12600000,824801},{12700000,830940},{12800000,837099},{12900000,843192},{13000000,849252},{13100000,855281},{13200000,861401},{13300000,867482},{13400000,873606},{13500000,879640},{13600000,885698},{13700000,891833},{13800000,897938},{13900000,904057},{14000000,910077},{14100000,916147},{14200000,922193},{14300000,928293},{14400000,934441},{14500000,940455},{14600000,946551},{14700000,952566},{14800000,958651},{14900000,964695},{15000000,970704},{15100000,976761},{15200000,982776},{15300000,988851},{15400000,994839},{15500000,1000862},{15600000,1006966},{15700000,1013012},{15800000,1019012},{15900000,1025092},{16000000,1031130},{16100000,1037119},{16200000,1043113},{16300000,1049172},{16400000,1055139},{16500000,1061198},{16600000,1067185},{16700000,1073198},{16800000,1079266},{16900000,1085243},{17000000,1091314},{17100000,1097360},{17200000,1103258},{17300000,1109288},{17400000,1115323},{17500000,1121389},{17600000,1127407},{17700000,1133364},{17800000,1139344},{17900000,1145305},{18000000,1151367},{18100000,1157275},{18200000,1163205},{18300000,1169267},{18400000,1175214},{18500000,1181158},{18600000,1187148},{18700000,1193122},{18800000,1199102},{18900000,1205065},{19000000,1211050},{19100000,1216988},{19200000,1222953},{19300000,1228861},{19400000,1234873},{19500000,1240833},{19600000,1246718},{19700000,1252693},{19800000,1258685},{19900000,1264617},{20000000,1270607},{20100000,1276577},{20200000,1282513},{20300000,1288409},{20400000,1294356},{20500000,1300243},{20600000,1306226},{20700000,1312179},{20800000,1318125},{20900000,1324046},{21000000,1329943},{21100000,1335881},{21200000,1341795},{21300000,1347749},{21400000,1353661},{21500000,1359631},{21600000,1365511},{21700000,1371432},{21800000,1377385},{21900000,1383291},{22000000,1389261},{22100000,1395148},{22200000,1401007},{22300000,1406874},{22400000,1412758},{22500000,1418640},{22600000,1424606},{22700000,1430531},{22800000,1436398},{22900000,1442335},{23000000,1448221},{23100000,1454144},{23200000,1460019},{23300000,1465935},{23400000,1471822},{23500000,1477731},{23600000,1483609},{23700000,1489509},{23800000,1495350},{23900000,1501220},{24000000,1507122},{24100000,1512992},{24200000,1518898},{24300000,1524831},{24400000,1530729},{24500000,1536569},{24600000,1542459},{24700000,1548366},{24800000,1554245},{24900000,1560093},{25000000,1565927},{25100000,1571812},{25200000,1577649},{25300000,1583439},{25400000,1589324},{25500000,1595177},{25600000,1601049},{25700000,1606876},{25800000,1612775},{25900000,1618668},{26000000,1624527},{26100000,1630379},{26200000,1636202},{26300000,1642052},{26400000,1647911},{26500000,1653807},{26600000,1659690},{26700000,1665517},{26800000,1671330},{26900000,1677200},{27000000,1683065},{27100000,1688960},{27200000,1694762},{27300000,1700558},{27400000,1706405},{27500000,1712204},{27600000,1718134},{27700000,1723913},{27800000,1729764},{27900000,1735590},{28000000,1741430},{28100000,1747297},{28200000,1753058},{28300000,1758964},{28400000,1764767},{28500000,1770613},{28600000,1776430},{28700000,1782260},{28800000,1788065},{28900000,1793863},{29000000,1799676},{29100000,1805472},{29200000,1811272},{29300000,1817102},{29400000,1822944},{29500000,1828703},{29600000,1834530},{29700000,1840359},{29800000,1846115},{29900000,1852006},{30000000,1857859},{30100000,1863719},{30200000,1869536},{30300000,1875367},{30400000,1881199},{30500000,1886923},{30600000,1892785},{30700000,1898632},{30800000,1904396},{30900000,1910248},{31000000,1915979},{31100000,1921714},{31200000,1927488},{31300000,1933290},{31400000,1939089},{31500000,1944833},{31600000,1950638},{31700000,1956440},{31800000,1962184},{31900000,1968015},{32000000,1973815},{32100000,1979564},{32200000,1985372},{32300000,1991162},{32400000,1996958},{32500000,2002749},{32600000,2008561},{32700000,2014337},{32800000,2020103},{32900000,2025864},{33000000,2031667},{33100000,2037385},{33200000,2043192},{33300000,2048989},{33400000,2054802},{33500000,2060577},{33600000,2066324},{33700000,2072084},{33800000,2077862},{33900000,2083678},{34000000,2089379},{34100000,2095092},{34200000,2100791},{34300000,2106544},{34400000,2112215},{34500000,2118001},{34600000,2123788},{34700000,2129473},{34800000,2135232},{34900000,2141013},{35000000,2146775},{35100000,2152470},{35200000,2158233},{35300000,2163998},{35400000,2169775},{35500000,2175518},{35600000,2181266},{35700000,2187043},{35800000,2192806},{35900000,2198505},{36000000,2204262},{36100000,2210026},{36200000,2215731},{36300000,2221543},{36400000,2227279},{36500000,2233036},{36600000,2238778},{36700000,2244473},{36800000,2250226},{36900000,2255897},{37000000,2261623},{37100000,2267395},{37200000,2273189},{37300000,2278857},{37400000,2284633},{37500000,2290350},{37600000,2296101},{37700000,2301840},{37800000,2307562},{37900000,2313254},{38000000,2318966},{38100000,2324728},{38200000,2330509},{38300000,2336299},{38400000,2342005},{38500000,2347727},{38600000,2353448},{38700000,2359142},{38800000,2364953},{38900000,2370696},{39000000,2376402},{39100000,2382120},{39200000,2387828},{39300000,2393630},{39400000,2399359},{39500000,2405101},{39600000,2410827},{39700000,2416624},{39800000,2422305},{39900000,2427981},{40000000,2433654},{40100000,2439371},{40200000,2445078},{40300000,2450819},{40400000,2456577},{40500000,2462273},{40600000,2467902},{40700000,2473603},{40800000,2479409},{40900000,2485075},{41000000,2490756},{41100000,2496476},{41200000,2502205},{41300000,2507850},{41400000,2513534},{41500000,2519246},{41600000,2524898},{41700000,2530575},{41800000,2536286},{41900000,2542018},{42000000,2547620},{42100000,2553305},{42200000,2559020},{42300000,2564807},{42400000,2570490},{42500000,2576200},{42600000,2581841},{42700000,2587550},{42800000,2593245},{42900000,2598870},{43000000,2604535},{43100000,2610226},{43200000,2615907},{43300000,2621566},{43400000,2627281},{43500000,2632997},{43600000,2638710},{43700000,2644301},{43800000,2649982},{43900000,2655643},{44000000,2661384},{44100000,2667036},{44200000,2672702},{44300000,2678429},{44400000,2684053},{44500000,2689717},{44600000,2695450},{44700000,2701159},{44800000,2706858},{44900000,2712494},{45000000,2718160},{45100000,2723886},{45200000,2729508},{45300000,2735255},{45400000,2740985},{45500000,2746679},{45600000,2752380},{45700000,2758056},{45800000,2763691},{45900000,2769407},{46000000,2775053},{46100000,2780731},{46200000,2786355},{46300000,2791974},{46400000,2797652},{46500000,2803324},{46600000,2808976},{46700000,2814698},{46800000,2820355},{46900000,2826040},{47000000,2831693},{47100000,2837271},{47200000,2842995},{47300000,2848642},{47400000,2854302},{47500000,2859963},{47600000,2865596},{47700000,2871207},{47800000,2876824},{47900000,2882545},{48000000,2888144},{48100000,2893763},{48200000,2899408},{48300000,2905025},{48400000,2910714},{48500000,2916338},{48600000,2921977},{48700000,2927626},{48800000,2933208},{48900000,2938896},{49000000,2944531},{49100000,2950188},{49200000,2955834},{49300000,2961491},{49400000,2967186},{49500000,2972862},{49600000,2978556},{49700000,2984185},{49800000,2989825},{49900000,2995509},{50000000,3001134},{50100000,3006727},{50200000,3012361},{50300000,3018013},{50400000,3023649},{50500000,3029296},{50600000,3034973},{50700000,3040593},{50800000,3046241},{50900000,3051875},{51000000,3057494},{51100000,3063082},{51200000,3068712},{51300000,3074341},{51400000,3080043},{51500000,3085615},{51600000,3091310},{51700000,3096885},{51800000,3102560},{51900000,3108210},{52000000,3113843},{52100000,3119506},{52200000,3125086},{52300000,3130647},{52400000,3136324},{52500000,3141927},{52600000,3147521},{52700000,3153171},{52800000,3158801},{52900000,3164431},{53000000,3170052},{53100000,3175695},{53200000,3181277},{53300000,3186966},{53400000,3192556},{53500000,3198119},{53600000,3203713},{53700000,3209317},{53800000,3214948},{53900000,3220576},{54000000,3226203},{54100000,3231825},{54200000,3237408},{54300000,3242981},{54400000,3248574},{54500000,3254129},{54600000,3259801},{54700000,3265418},{54800000,3271006},{54900000,3276528},{55000000,3282200},{55100000,3287879},{55200000,3293449},{55300000,3299022},{55400000,3304658},{55500000,3310266},{55600000,3315819},{55700000,3321475},{55800000,3327111},{55900000,3332731},{56000000,3338330},{56100000,3343958},{56200000,3349661},{56300000,3355218},{56400000,3360782},{56500000,3366339},{56600000,3371952},{56700000,3377626},{56800000,3383274},{56900000,3388854},{57000000,3394435},{57100000,3400038},{57200000,3405629},{57300000,3411294},{57400000,3416918},{57500000,3422475},{57600000,3428077},{57700000,3433631},{57800000,3439220},{57900000,3444790},{58000000,3450336},{58100000,3455970},{58200000,3461542},{58300000,3467134},{58400000,3472756},{58500000,3478304},{58600000,3483945},{58700000,3489523},{58800000,3495161},{58900000,3500795},{59000000,3506314},{59100000,3511921},{59200000,3517468},{59300000,3523035},{59400000,3528547},{59500000,3534167},{59600000,3539757},{59700000,3545331},{59800000,3550955},{59900000,3556550},{60000000,3562115},{60100000,3567677},{60200000,3573237},{60300000,3578833},{60400000,3584453},{60500000,3590054},{60600000,3595578},{60700000,3601204},{60800000,3606812},{60900000,3612449},{61000000,3618045},{61100000,3623569},{61200000,3629084},{61300000,3634647},{61400000,3640201},{61500000,3645798},{61600000,3651314},{61700000,3656875},{61800000,3662428},{61900000,3668016},{62000000,3673600},{62100000,3679207},{62200000,3684787},{62300000,3690317},{62400000,3695916},{62500000,3701487},{62600000,3707015},{62700000,3712576},{62800000,3718206},{62900000,3723740},{63000000,3729306},{63100000,3734871},{63200000,3740435},{63300000,3746021},{63400000,3751585},{63500000,3757186},{63600000,3762745},{63700000,3768288},{63800000,3773903},{63900000,3779511},{64000000,3785086},{64100000,3790643},{64200000,3796205},{64300000,3801803},{64400000,3807345},{64500000,3812898},{64600000,3818389},{64700000,3823937},{64800000,3829432},{64900000,3835002},{65000000,3840554},{65100000,3846130},{65200000,3851637},{65300000,3857201},{65400000,3862694},{65500000,3868404},{65600000,3873874},{65700000,3879427},{65800000,3884940},{65900000,3890503},{66000000,3896123},{66100000,3901727},{66200000,3907301},{66300000,3912842},{66400000,3918498},{66500000,3924009},{66600000,3929584},{66700000,3935172},{66800000,3940685},{66900000,3946251},{67000000,3951767},{67100000,3957296},{67200000,3962821},{67300000,3968429},{67400000,3973996},{67500000,3979592},{67600000,3985158},{67700000,3990671},{67800000,3996215},{67900000,4001767},{68000000,4007342},{68100000,4012851},{68200000,4018394},{68300000,4023969},{68400000,4029474},{68500000,4035037},{68600000,4040549},{68700000,4046077},{68800000,4051617},{68900000,4057149},{69000000,4062674},{69100000,4068213},{69200000,4073713},{69300000,4079200},{69400000,4084816},{69500000,4090382},{69600000,4095945},{69700000,4101517},{69800000,4107066},{69900000,4112568},{70000000,4118064},{70100000,4123596},{70200000,4129144},{70300000,4134695},{70400000,4140216},{70500000,4145831},{70600000,4151356},{70700000,4156813},{70800000,4162309},{70900000,4167847},{71000000,4173373},{71100000,4178911},{71200000,4184419},{71300000,4189971},{71400000,4195467},{71500000,4201083},{71600000,4206661},{71700000,4212176},{71800000,4217594},{71900000,4223154},{72000000,4228658},{72100000,4234244},{72200000,4239815},{72300000,4245417},{72400000,4250930},{72500000,4256409},{72600000,4261935},{72700000,4267454},{72800000,4272940},{72900000,4278523},{73000000,4284089},{73100000,4289594},{73200000,4295059},{73300000,4300577},{73400000,4306121},{73500000,4311581},{73600000,4317182},{73700000,4322713},{73800000,4328194},{73900000,4333750},{74000000,4339254},{74100000,4344668},{74200000,4350186},{74300000,4355687},{74400000,4361240},{74500000,4366707},{74600000,4372244},{74700000,4377733},{74800000,4383283},{74900000,4388818},{75000000,4394304},{75100000,4399810},{75200000,4405341},{75300000,4410890},{75400000,4416431},{75500000,4421976},{75600000,4427436},{75700000,4432986},{75800000,4438498},{75900000,4444056},{76000000,4449611},{76100000,4455090},{76200000,4460606},{76300000,4466047},{76400000,4471575},{76500000,4477022},{76600000,4482514},{76700000,4487991},{76800000,4493463},{76900000,4498996},{77000000,4504535},{77100000,4510062},{77200000,4515582},{77300000,4521040},{77400000,4526576},{77500000,4532043},{77600000,4537551},{77700000,4543006},{77800000,4548526},{77900000,4554051},{78000000,4559544},{78100000,4565039},{78200000,4570576},{78300000,4576018},{78400000,4581510},{78500000,4586928},{78600000,4592508},{78700000,4597955},{78800000,4603527},{78900000,4608972},{79000000,4614444},{79100000,4619984},{79200000,4625476},{79300000,4630913},{79400000,4636426},{79500000,4641948},{79600000,4647416},{79700000,4652931},{79800000,4658438},{79900000,4663931},{80000000,4669382},{80100000,4674878},{80200000,4680315},{80300000,4685896},{80400000,4691370},{80500000,4696907},{80600000,4702361},{80700000,4707853},{80800000,4713384},{80900000,4718907},{81000000,4724409},{81100000,4730004},{81200000,4735525},{81300000,4740992},{81400000,4746465},{81500000,4752027},{81600000,4757470},{81700000,4762951},{81800000,4768393},{81900000,4773922},{82000000,4779430},{82100000,4784949},{82200000,4790384},{82300000,4795812},{82400000,4801310},{82500000,4806760},{82600000,4812305},{82700000,4817816},{82800000,4823303},{82900000,4828831},{83000000,4834317},{83100000,4839761},{83200000,4845183},{83300000,4850683},{83400000,4856110},{83500000,4861617},{83600000,4867093},{83700000,4872513},{83800000,4878005},{83900000,4883558},{84000000,4889139},{84100000,4894521},{84200000,4899985},{84300000,4905417},{84400000,4910914},{84500000,4916472},{84600000,4921878},{84700000,4927326},{84800000,4932826},{84900000,4938246},{85000000,4943731},{85100000,4949180},{85200000,4954637},{85300000,4960077},{85400000,4965591},{85500000,4971111},{85600000,4976569},{85700000,4982049},{85800000,4987530},{85900000,4993012},{86000000,4998470},{86100000,5003979},{86200000,5009407},{86300000,5014862},{86400000,5020351},{86500000,5025823},{86600000,5031315},{86700000,5036777},{86800000,5042265},{86900000,5047761},{87000000,5053180},{87100000,5058696},{87200000,5064123},{87300000,5069614},{87400000,5075035},{87500000,5080463},{87600000,5085953},{87700000,5091415},{87800000,5096846},{87900000,5102346},{88000000,5107832},{88100000,5113355},{88200000,5118791},{88300000,5124356},{88400000,5129773},{88500000,5135232},{88600000,5140593},{88700000,5146076},{88800000,5151557},{88900000,5157086},{89000000,5162565},{89100000,5167986},{89200000,5173502},{89300000,5178996},{89400000,5184377},{89500000,5189833},{89600000,5195242},{89700000,5200653},{89800000,5206040},{89900000,5211514},{90000000,5216954},{90100000,5222465},{90200000,5227980},{90300000,5233446},{90400000,5238910},{90500000,5244409},{90600000,5249827},{90700000,5255274},{90800000,5260749},{90900000,5266190},{91000000,5271659},{91100000,5277103},{91200000,5282580},{91300000,5288120},{91400000,5293544},{91500000,5298991},{91600000,5304404},{91700000,5309926},{91800000,5315370},{91900000,5320738},{92000000,5326237},{92100000,5331696},{92200000,5337154},{92300000,5342570},{92400000,5348001},{92500000,5353469},{92600000,5358873},{92700000,5364374},{92800000,5369836},{92900000,5375312},{93000000,5380681},{93100000,5386095},{93200000,5391573},{93300000,5396981},{93400000,5402486},{93500000,5407914},{93600000,5413340},{93700000,5418747},{93800000,5424169},{93900000,5429670},{94000000,5435104},{94100000,5440645},{94200000,5446042},{94300000,5451511},{94400000,5456922},{94500000,5462365},{94600000,5467823},{94700000,5473280},{94800000,5478704},{94900000,5484246},{95000000,5489749},{95100000,5495144},{95200000,5500596},{95300000,5506042},{95400000,5511482},{95500000,5516967},{95600000,5522414},{95700000,5527834},{95800000,5533229},{95900000,5538712},{96000000,5544201},{96100000,5549568},{96200000,5555003},{96300000,5560413},{96400000,5565874},{96500000,5571310},{96600000,5576734},{96700000,5582247},{96800000,5587668},{96900000,5593068},{97000000,5598565},{97100000,5604003},{97200000,5609349},{97300000,5614798},{97400000,5620231},{97500000,5625732},{97600000,5631229},{97700000,5636652},{97800000,5642089},{97900000,5647525},{98000000,5652996},{98100000,5658353},{98200000,5663763},{98300000,5669215},{98400000,5674668},{98500000,5680084},{98600000,5685585},{98700000,5691004},{98800000,5696344},{98900000,5701777},{99000000,5707123},{99100000,5712622},{99200000,5718013},{99300000,5723380},{99400000,5728833},{99500000,5734258},{99600000,5739704},{99700000,5745162},{99800000,5750539},{99900000,5756001},{100000000,5761455}};\nconst int segment = 100000;\nint main()\n{\n\tint n, ans;\n\tcin >> n;\n\tans = ansers[n/segment].val;\n\tfor ( int i = ansers[n/segment].index+1; i <= n; ++i )\n\t{\n\t\tans += isprime ( i );\n\t\t//if(i %  == 0)\n\t\t//\tcout << i << \" \" << ans << endl;\n\t}\n\tcout << ans << endl;\n}\n\n\n\n```",
        "postTime": 1535767515,
        "uid": 61724,
        "name": "\u90b1\u6c5f\u5764",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\u6709\u7684\u5927\u4f6c\u7528\u4ec0\u4e48MEISSEL-LEHMER\uff0c\u672c\u849f\u84bb\u8868\u793a\u5b8c\u5168\u4e0d\u61c2\u3002\u3002\u3002\n\n\u7ebf\u7b5b\u4e00\u5b9a\u80fd\u8fc7\uff0c\u4f46\u6211\u4e0d\u60f3\u7528\u3002\u3002\u3002\n\n\u6240\u4ee5\uff0c\u6211\u5c31\u628a\u57c3\u6c0f\u7b5b\u6cd5\u4f18\u5316\u4e86\u4e00\u4e0b\uff0c\u9644\u4ee3\u7801~~\uff08\u9003\uff09~~\n\n```cpp\n#include<cstdio>\nbool c[100000005];//\u7b5b\u6cd5\u5fc5\u5907\nint main()\n{\n\tint n,x,ans=0;\n\tscanf(\"%d\",&n);\n\tfor(int i=4;i<=n;i+=2)/*\u6b64\u5904\u64c5\u81ea\u5bf9\u7b5b\u6cd5\u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u5148\u5c06\u4e8c\u7684\u500d\u6570\u7b5b\u53bb\u3002*/\n\t{\n\t\tc[i]=1;\n\t\tans++;\n\t}\n\tfor(int i=3;i*i<=n;i+=2)\n\t{\n\t\tif(c[i]==0)\n\t\t{\n\t\t\tfor(int j=i;j*i<=n;j+=2)\n\t\t\t{\n\t\t\t\tx=i*j;\n\t\t\t\tif(c[x]==0)/*\u9632\u91cd\u590d\uff08\u56e0\u4e3a\u4e0d\u662f\u7ebf\u7b5b\uff09*/\n\t\t\t\t{\n\t\t\t\t\tans++;//\u8bb0\u5f55\u975e\u8d28\u6570\u4e2a\u6570\n\t\t\t\t}\n\t\t\t\tc[x]=1;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",n-ans-1);//\u603b\u6570-\u975e\u8d28\u6570-1\n\treturn 0;\n}\n```",
        "postTime": 1520573080,
        "uid": 75578,
        "name": "\u6b63\u6c14\u6d69\u7136",
        "ccfLevel": 0,
        "title": "3912"
    },
    {
        "content": "### \u7ebf\u6027\u7b5b\u7d20\u6570\nprime[x]\u8868\u793ax\u662f\u4e0d\u662f\u7d20\u6570\n\n\u4ece2\u5f00\u59cb\u679a\u4e3e\uff0c\u628a2\u7684\u6240\u6709\u500d\u6570\u90fd\u6807\u8bb0\u6210\u4e0d\u662f\u7d20\u6570\uff1b\n\u679a\u4e3e3\uff0c\u628a3\u7684\u6240\u6709\u500d\u6570\u90fd\u6807\u8bb0\u6210\u4e0d\u662f\u7d20\u6570\uff1b\n\n......\n\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5269\u4e0b\u7684\u6570\u5c31\u662f\u7d20\u6570\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u662f\u4efb\u4f55\u7d20\u6570\u7684\u500d\u6570\n\n### \u67e5\u8be2\u7d20\u6570\u4e2a\u6570\n##### \u6cd51\uff1a\u66b4\u529b\u6570\uff1aTLE\n```cpp\nfor(int i=2;i<=n;i++)\n        cnt+=prime[i];\n```\n##### \u6cd52\uff1a\u603b\u5171\u6709n\u4e2a\u6570\uff0c\u51cf\u53bb\u4e0d\u662f\u7d20\u6570\u7684\u5373\u53ef\uff1aTLE\n```\nfor(int i=2;i<=n;i++)\n{\n    if(!prime[i]){cnt--;continue;}\n    for(int j=2;j*i<=n;j++)\n        prime[i*j]=false;\n    }\n```\n##### \u6cd53\uff1a6=2x3=3x2 \u901a\u8fc7\u63a7\u5236i<=sqrt(n),\u907f\u514d\u91cd\u590d\u8ba1\u7b97\uff1aAC\n```\nfor(int i=2;i*i<=n;i++)\n{\n\tif(!prime[i])continue;\n\tfor(int j=2;j*i<=n;j++)\n\t    if(prime[i*j])prime[i*j]=false,cnt--;\n\t}\n```\n\n### 20\u884cAC\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <memory.h>\nusing namespace std;\nbool prime[100000001];\nint n,cnt;\nint main()\n{\n    memset(prime,true,sizeof(prime));\n    prime[1]=false;\n    scanf(\"%d\",&n);\n    cnt=n-1;//1\u4e0d\u662f\u8d28\u6570\n    for(int i=2;i*i<=n;i++)\n    {\n        if(!prime[i])continue;\n        for(int j=2;j*i<=n;j++)\n            if(prime[i*j])prime[i*j]=false,cnt--;\n    }\n    printf(\"%d\\n\",cnt);\n    return 0;\n}\n```",
        "postTime": 1519907062,
        "uid": 47975,
        "name": "mylsl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\u5176\u5b9e~~\u662f\u95f2\u7684\u6ca1\u4e8b\u627e\u4e2a\u6c34\u9898\u53d1\u672c\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3~~\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6027\u7b5b\uff08\u6b27\u62c9\u7b5b\u6cd5\uff09\u6a21\u677f...\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5df2\u7ecf\u964d\u5230O\uff08n\uff09.\n\n\u6bd4\u8f83\u5751\u7684\u662f1\uff0c\u8981\u7279\u5224\u4e0d\u662f\u7d20\u6570\uff0c\u4e00\u5f00\u59cb\u88ab\u5751 WA\u4e24\u4e2a\u70b9.\n\n\u4e0a\u4ee3\uff08mu\uff09\u7801\uff08ban\uff09...\n\n```cpp\n#include<iostream>\n#include<cstdio> \n#include<cmath>\n#include<cstring>\nusing namespace std;\nconst int maxn=100000001;\nint prime[maxn];      //\u5c31\u662f\u4e2a\u7d20\u6570\u8868\nbool sf[maxn];        //\u5224\u65ad\u8fd9\u4e2a\u6570\u662f\u4e0d\u662f\u7d20\u6570\uff0csf[i]\u4e2d\u7684i\u662f\u4ece1\u5230maxn\u7684\u6570\nvoid sushu(){         //\u6838\u5fc3 \u6b27\u62c9\u7b5b\u4ee3\u7801\n    int num=0;        //num \u7528\u6765\u8bb0\u7b5b\u5230\u7b2c\u51e0\u4e2a\u8d28\u6570\n    memset(sf,true,sizeof(sf));\n    for(int i=2;i<=maxn;i++){          //\u5916\u5c42\u679a\u4e3e1~maxn\n        if(sf[i]) prime[++num]=i;      //\u5982\u679c\u662f\u8d28\u6570\u5c31\u52a0\u5165\u7d20\u6570\u8868\n        for(int j=1;j<=num;j++){       //\u5185\u5c42\u679a\u4e3enum\u4ee5\u5185\u7684\u8d28\u6570\n            if(i*prime[j]>maxn) break; //\u7b5b\u5b8c\u7ed3\u675f\n            sf[i*prime[j]]=false;      //\u7b5b\u6389...\n            if(i%prime[j]==0) break;   //\u907f\u514d\u91cd\u590d\u7b5b\n        }\n    }\n    sf[1]=false;\n    sf[0]=false;  //1 0 \u7279\u5224 \n}\nint main(){\n    sushu();\n    int m,cnt=0;\n    cin>>m;\n    for(int i=1;i<=m;i++)\n        if(sf[i]) cnt++;\n    cout<<cnt; \n    return 0;\n}\n```",
        "postTime": 1518255824,
        "uid": 69247,
        "name": "pushinl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011 \u6b27\u62c9\u7b5b\u6c34\u8fc7"
    },
    {
        "content": "\u6765\u4e00\u4e2a\u77ed\u7684\u4ee3\u7801\n\n```cpp\n#include <iostream>//\u5f88\u7b80\u5355\u7684\u7ebf\u6027\u7b5b\n#include <cstdio>\n#include <cmath>\nusing namespace std;\nbool val[100000001];//\u8d28\u6570\u4e3a0\u5408\u6570\u4e3a1\nint n,k;\nint main(){\n    scanf(\"%d\",&n);\n    int sum=0;//\u8fd9\u91ccsum\u8bb0\u5f55\u7684\u662f\u5408\u6570\u7684\u4e2a\u6570\n    for(int i=2;i<=sqrt(n);i++)//\u7b5b\u5230\u6839\u53f7n\u5373\u53ef\n        if(!val[i])//\u7528\u8d28\u6570\u7b5b\n            for(k=2;k*i<=n;sum+=val[i*k]?0:1,val[i*k++]=1);//\u5c06i\u7684\u500d\u6570\u7b5b\u53bb\n    printf(\"%d\",n-sum-1);\n    return 0;\n}\n```",
        "postTime": 1509289601,
        "uid": 50992,
        "name": "LiYanJun",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\u7ebf\u6027\u7b5b\u7d20\u6570\uff0c\u633a\u597d\u7684\u5440\uff0c\u4ee3\u7801\u90a3\u4e48\u597d\u5199\u3002\n\n\u4e3b\u8981\u601d\u8def\u5c31\u662f\u7ebf\u6027\u7b5b\u7d20\u6570\uff0c\u6bcf\u6b21\u65b0\u627e\u5230\u4e00\u4e2a\uff0cans--,ans\u6700\u5f00\u59cb\u4e3aN\uff0c\u53ea\u4e0d\u8fc7\u4e0d\u52a0\u4e00\u4e9b\u4f18\u5316\uff0c\u4f1a\u8d85\u65f6\uff1b\n\n\n1. \u5feb\u8bfb\u3002\u3002\u3002\uff08\u597d\u50cf\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\u3002\u3002\u3002\uff09\n\n\n2.\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u7b5b2\u7684\u500d\u6570\uff0c\u663e\u71362\u7684\u500d\u6570\u662f\u53ef\u4ee5\u76f4\u63a5\u7b5b\u6389\uff0c\u4e0d\u7528\u6d89\u53ca\u4e0e\u5176\u4ed6\u7684\u5173\u7cfb\uff0c\u6240\u4ee5\u76f4\u63a5\u7b5b\u6389\u3002\n\n\u5c31\u76f4\u63a5\u7528 ans - =ans/2;\n\nans++;\n\u56e0\u4e3a2\u662f\u4e2a\u8d28\u6570\u6240\u4ee5ans++;\n\n\n3.\u6700\u5185\u5c42\u7684\u5faa\u73af\u4ecei\\*i\u5f00\u59cb\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a2\\*i\uff0c3\\*i...\uff08i-1)\\*i\u90fd\u5df2\u7ecf\u88ab\u7b5b\u8fc7\u4e86\n\n\n\n\n\n\n    \n    \n    \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n    int f=1,x=0;\n    char ch;\n    do{\n      ch=getchar();\n      if(ch=='-')\n         f=-1;\n    }while(ch<'0'||ch>'9');\n    do{\n       x=x*10+ch-'0';\n       ch=getchar();\n    }while(ch>='0'&&ch<='9');\n    return f*x;\n}\nint n;\nint ans;\nbool p[100000001];\nint main()\n{\n    n=read();\n    if(n==1)//\u7279\u5224\n    {\n        cout<<0<<endl;\n        return 0;\n    }\n    ans=n; \n    ans-=ans/2-1;\n    ans--;//\u628a\u4e8c\u7684\u500d\u6570\u7b5b\u6389\n    p[1]=true;\n    for(register int i=3;i<=sqrt(n);i++)\n    {\n         if(p[i]==false)//\u53ea\u6709\u8d28\u6570\u6211\u4eec\u624d\u628a\u4ed6\u7684\u500d\u6570\u7b5b\u4e86\uff0c\u56e0\u4e3a\u5408\u6570\u7684\u500d\u6570\u65e9\u5c31\u88ab\u5224\u65ad\u8fc7\u4e86\n        {\n            for(register int j=i*i;j<=n;j+=i)\n            {\n                if(p[j]==false&&j%2!=0) ans--;//\u5982\u679c\u4ed6\u8fd8\u6ca1\u6709\u88ab\u66f4\u65b0\u6210\u5408\u6570\uff0c\u4e14\u4ed6\u4e0d\u4e3a2\u7684\u500d\u6570\uff08\u56e0\u4e3a2\u7684\u500d\u6570\uff0c\u6211\u4eec\u76f4\u63a5\u5c31\u7b5b\u4e86\n                                                                                //\u6ca1\u6709\u7528\u5e03\u5c14\u6570\u7ec4\n                    p[j]=true;\n            }\n        }\n    }\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1508670681,
        "uid": 37408,
        "name": "Randyhoads",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    },
    {
        "content": "\n```cpp\n#include <cstring>\n#include<cstdio>\n#include<bits/stdc++.h>\n#include<iostream>//\u5934\u6587\u4ef6\nusing namespace std;\nint n,m,ans=1,t;\n int prime[100000000],primesize;//prime[]\u8868\u793a\u7d20\u6570\uff0cprimesize\u8868\u793a\u7d20\u6570\u4e2a\u6570 \nbool isprime[100000000];//\u5224\u65ad\u662f\u5426\u662f\u8d28\u6570 \nvoid getlist(register long long listsize)\n{\n    memset(isprime,1,sizeof(isprime));//\u5c06isprime\u8d4b\u521d\u503c \n    isprime[1]=false;//1\u65e2\u4e0d\u662f\u8d28\u6570\u4e5f\u4e0d\u662f\u5408\u6570\u6240\u4ee5\u8d4b\u521d\u503c\u4e3afalse \n//register\u4f18\u5316\u4e0d\u7136\u4f1at\u6700\u540e\u4e00\u4e2a\u70b9\n    for(register int i=2;i<=listsize;i++)//listsize\u5c31\u662fn\uff0c1\u88ab\u6392\u9664\u6240\u4ee5\u4ece2\u5230n \n    {\n        if(isprime[i])prime[++primesize]=i;//\u5982\u679c\u662f\u5c31\u5b58\u4e0b\u6765 \n         for(register int j=1;j<=primesize && i*prime[j]<=listsize;j++)//i*prime\u3010j\u3011\u80af\u5b9a\u8981\u6570\u636e\u8303\u56f4\u5185\uff0c\u6240\u4ee5\u300a=n \n         {\n            isprime[i*prime[j]]=false;//i*\u5df2\u77e5\u7684\u6240\u6709\u7d20\u6570\u5b9a\u4e3a\u5408\u6570 \nans++;//\u7edf\u8ba1\u4e0d\u662f\u7d20\u6570\u7684\n            if(i%prime[j]==0)break;//\u907f\u514d\u591a\u6b21\u7b5b\uff0c\u6bcf\u4e2a\u5408\u6570\u53ea\u88ab\u4ed6\u6700\u5c0f\u7684\u56e0\u5b50\u7d20\u6570\u7b5b\u53bb \n        }\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);//\u8f93\u5165 \n    getlist(n);//\u627e\u51fa\u6240\u6709\u8d28\u6570 \n       t=ans;\n     ans=n-t;//\u5c06\u4e0d\u662f\u7d20\u6570\u7684\u51cf\u53bb\n         printf(\"%d\",ans);\n    return 0; \n}\n```",
        "postTime": 1505643410,
        "uid": 9181,
        "name": "\u5305\u5b50\u5165\u4fb5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3912 \u3010\u7d20\u6570\u4e2a\u6570\u3011"
    }
]