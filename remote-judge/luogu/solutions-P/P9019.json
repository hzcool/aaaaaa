[
    {
        "content": "### [\u3010USACO23JAN_Pt T1\u3011Tractor Paths](http://usaco.org/index.php?page=viewproblem2&cpid=1284)\n\n[cnblogs](https://www.cnblogs.com/znstz2018/p/17087422.html)\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4 $i$\uff0c\u5b58\u5728\u4e00\u4e2a\u6570 $R_i$ \u6ee1\u8db3 $i$ \u80fd\u5f80\u53f3\u8df3\u5230 $[i+1,R_i]$ \u4e2d\u7684\u6240\u6709\u533a\u95f4\uff0c\u4e14 $R_i$ \u9012\u589e\uff1b\u7c7b\u4f3c\u7684\u5b58\u5728\u4e00\u4e2a\u6570 $L_i$ \u6ee1\u8db3 $i$ \u5f80\u5de6\u80fd\u8df3\u5230 $[i-1,L_i]$ \u4e2d\u7684\u6240\u6709\u533a\u95f4\uff0c\u4e14 $L_i$ \u9012\u589e\u3002\n\n\u7b2c\u4e00\u95ee\u662f\u7b80\u5355\u7684\uff0c\u500d\u589e\u6c42\u89e3\u5373\u53ef\u3002\n\n\u7b2c\u4e8c\u95ee\u8003\u8651\u679a\u4e3e\u5728\u8df3\u7b2c\u51e0\u6b65\u7684\u65f6\u5019\u79bb\u5f00\u6700\u4f18\u8def\u5f84\u53bb\u8d70\u5230\u4e00\u4e2a\u5173\u952e\u70b9\u3002\u4ee4 $f(k,i)$ \u8868\u793a\u4ece $i$ \u5f80\u53f3\u8df3 $k$ \u6b65\u6700\u5927\u8df3\u5230\u7684\u7f16\u53f7\u662f\u4ec0\u4e48\uff0c $g(k,i)$ \u8868\u793a $i$ \u5f80\u5de6\u8df3 $k$ \u6b65\u6700\u5c0f\u8df3\u5230\u7684\u7f16\u53f7\u662f\u591a\u5c11\uff0c$cnt(l,r)$ \u8868\u793a\u7f16\u53f7\u5728 $[l,r]$ \u4e4b\u95f4\u6709\u591a\u5c11\u4e2a\u5173\u952e\u70b9\uff0c\u7b2c\u4e00\u95ee\u7684\u7b54\u6848\u662f $dis$\u3002\u5219\u7b2c\u4e8c\u95ee\u7684\u7b54\u6848\u662f $cnt(a,a)+cnt(b,b)+\\sum_{i=1}^{ans-1} cnt(g(b,ans-i),f(a,i))$\u3002\u8fd9\u4e9b\u533a\u95f4\u662f\u4e0d\u4ea4\u7684\uff08\u5982\u679c\u4e24\u4e2a\u533a\u95f4\u6709\u4ea4\uff0c\u5219 $dis$ \u5e76\u4e0d\u662f\u6700\u77ed\u8def\u5f84\uff09\uff0c\u62c6\u6210\u524d\u7f00\u548c\u7528\u500d\u589e\u7ef4\u62a4\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define pii pair<int,int>\n#define mp make_pair\n#define pb push_back\nconst int mod=998244353;\nconst int inf=0x3f3f3f3f;\nint n,Q;\nchar S[400005],W[400005];\nint L[200005],R[200005];\nint bl[200005],sum[200005];\nint f[18][200005],g[18][200005];\nint dist(int u,int v)\n{\n\tif(u==v) return 0;\n\tint ans=0;\n\tfor(int k=17;k>=0;k--) if(f[k][u]!=-1&&f[k][u]<v) ans+=(1<<k),u=f[k][u];\n\treturn ans+1; \n}\nint sr[18][200005],sl[18][200005];\nvoid solve()\n{\n\tscanf(\"%d%d\",&n,&Q);\n\tscanf(\"%s\",S+1);\n\tint cntL=0,nowL=1;\n\tfor(int i=1;i<=2*n;i++)\n\t{\n\t\tif(S[i]=='L') cntL++;\n\t\telse R[nowL]=cntL,nowL++;\n\t}\n\tint cntR=n+1,nowR=n;\n\tfor(int i=2*n;i>=1;i--)\n\t{\n\t\tif(S[i]=='R') cntR--;\n\t\telse L[nowR]=cntR,nowR--;\n\t}\n\tscanf(\"%s\",W+1);\n\tfor(int i=1;i<=n;i++) sum[i]=sum[i-1]+W[i]-'0';\n\tmemset(f,-1,sizeof(f)),memset(g,-1,sizeof(g));\n\tfor(int i=1;i<n;i++) f[0][i]=R[i],sr[0][i]=sum[R[i]];\n\tfor(int i=n;i>=2;i--) g[0][i]=L[i],sl[0][i]=sum[L[i]-1];\n\tfor(int k=1;k<18;k++) for(int i=1;i<n;i++) if(f[k-1][i]!=-1) \n\t{\n\t\tf[k][i]=f[k-1][f[k-1][i]];\n\t\tif(f[k][i]!=-1) sr[k][i]=sr[k-1][i]+sr[k-1][f[k-1][i]];\n\t}\n\tfor(int k=1;k<18;k++) for(int i=n;i>=2;i--) if(g[k-1][i]!=-1)\n\t{\n\t\tg[k][i]=g[k-1][g[k-1][i]];\n\t\tif(g[k][i]!=-1) sl[k][i]=sl[k-1][i]+sl[k-1][g[k-1][i]];\n\t}\n\twhile(Q--)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tint ans1=dist(u,v),ans2=0;\n\t\tans2+=W[u]-'0'+W[v]-'0';\n\t\tfor(int k=17;k>=0;k--) if((ans1-1)&(1<<k)) ans2+=sr[k][u],u=f[k][u];\n\t\tfor(int k=17;k>=0;k--) if((ans1-1)&(1<<k)) ans2-=sl[k][v],v=g[k][v];\n\t\tprintf(\"%d %d\\n\",ans1,ans2);\n\t}\n}\nsigned main()\n{\n\tint _=1;\n//\tcin>>_;\n\twhile(_--) solve();\n\treturn 0;\n}\n```",
        "postTime": 1675523854,
        "uid": 302837,
        "name": "znstz2018",
        "ccfLevel": 7,
        "title": "\u3010USACO23JAN_Pt T1\u3011Tractor Paths \u9898\u89e3"
    },
    {
        "content": "\u4e00\u79cd\u4e0d\u592a\u4e00\u6837\u7684\u601d\u8def\u3002\n\n\u7b2c\u4e00\u95ee\u53ef\u4ee5\u500d\u589e\u8f7b\u677e\u89e3\u51b3\uff0c\u6211\u4eec\u7740\u91cd\u8003\u8651\u7b2c\u4e8c\u95ee\u3002\n\n\u9996\u5148\u4e0d\u5728\u8be2\u95ee\u533a\u95f4\u5185\u7684\u5173\u952e\u533a\u95f4\u80af\u5b9a\u4e0d\u8ba1\u5165\u7b54\u6848\uff0c\u5bf9\u4e8e\u5728\u8be2\u95ee\u533a\u95f4\u5185\u7684\u6211\u4eec\u8003\u8651\u4ee5\u4e0b\u6027\u8d28\uff1a\n\n> \u8ba1\u4ece $ql$ \u5230 $qr$ \u7684\u8ddd\u79bb\u662f $L$\uff0c$[ql,qr]$ \u4efb\u4f55\u8282\u70b9\u5230 $ql,qr$ \u7684\u8ddd\u79bb\u548c $\\le L+1$\uff0c\u4e14\u5982\u679c $=L$ \u5219\u53ef\u4ee5\u51fa\u73b0\u5728 $ql$ \u5230 $qr$ \u7684\u67d0\u4e00\u6700\u77ed\u8def\u4e0a\u3002\n\n\u8bc1\u660e\uff1a\u9996\u5148\u968f\u610f\u62c9\u51fa\u4e00\u6761 $ql$ \u5230 $qr$ \u7684\u6700\u77ed\u8def $a_1,a_2,\\dots , a_L$\uff0c\u8def\u4e0a\u80af\u5b9a\u6ee1\u8db3\u6027\u8d28\uff0c\u5bf9\u4e8e\u8def\u5f84\u4e0a\u76f8\u90bb\u4e24\u4e2a\u5143\u7d20 $a_k,a_{k+1}$ \u4e4b\u95f4\u4efb\u610f\u8282\u70b9 $x$\uff0c\u5fc5\u7136\u6709 $x$ \u53ef\u4e00\u6b65\u5230 $a_k,a_{k+1}$\u3002\u56e0\u4e3a\u5982\u679c\u4e0d\u7136\uff0c\u6839\u636e $a_k,a_{k+1}$ \u53ef\u4e00\u6b65\u4e92\u8fbe\uff0c\u5fc5\u5305\u542b $x$ \u5143\u7d20\uff0c\u4e0e\u533a\u95f4\u4e0d\u4e92\u76f8\u5305\u542b\u77db\u76fe\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u7ef4\u62a4\u6240\u6709\u5173\u952e\u70b9\u5230 $ql,qr$ \u7684\u8ddd\u79bb\u548c\uff1a\u5206\u522b\u4ece $n\\sim 1$ \u548c $1\\sim n$ \u626b\u4e00\u904d\uff0c\u6bcf\u6b21\u5c3d\u53ef\u80fd\u5411\u5de6/\u53f3\u8d70\u4e00\u6b65\uff0c\u8bb0\u5f55\u4e0b\u5f53\u524d\u8282\u70b9\u4f20\u9012\u7740\u51e0\u4e2a\u5173\u952e\u70b9\u53ca\u8ddd\u79bb\u548c\uff0c\u540c\u65f6\u53e6\u8bbe\u4e00\u53d8\u91cf\u8868\u793a\u5f53\u524d\u8282\u70b9\u7684\u7b54\u6848\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5904\u7406\u7684\u552f\u4e00\u96be\u70b9\u5728\u4e8e\u6d88\u9664\u533a\u95f4\u5916\u7684\u5173\u952e\u70b9\u8d21\u732e\u3002\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u80fd\u4e00\u6b65\u4ece $ql$ \u5230 $qr$ \u7684\u8be2\u95ee\uff0c\u8bbe $ql$ \u5411\u53f3\u4e00\u6b65\u6700\u8fdc\u5230 $ml$\uff0c$qr$ \u5411\u5de6\u4e00\u6b65\u6700\u8fdc\u5230 $mr$\uff0c\u90a3\u4e48\u4f4d\u4e8e $[ql,qr]$ \u5916\u90e8\u7684\u5173\u952e\u70b9\u5fc5\u7136\u4f1a\u88ab\u4f20\u9012\u81f3 $[ql,ml]$ \u6216 $[mr,qr]$ \u4e2d\u3002\u8003\u8651\u500d\u589e\u6c42\u7b2c\u4e00\u95ee\u65f6\u591a\u6c42\u4e24\u4e2a\u503c $mdl,mdr$ \u5206\u522b\u8868\u793a $ql,qr$ \u5206\u522b\u5411\u53f3\uff0c\u5de6\u8d70 $L-1$ \u6b65\u6700\u8fdc\u5230\u54ea\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u4f20\u9012\u5230 $[ql,ml]$ \u4e2d\u9700\u8981\u6d88\u9664\u7684\u8282\u70b9\u8d21\u732e\u4e3a\u5176\u4e2d\u4f20\u9012\u7684\u8ddd\u79bb\u548c\u4ee5\u53ca $[ql,mdr-1]$ \u4e2d\u4f20\u9012\u7684\u4e2a\u6570\u548c\u4e58\u4e0a $L$ \u52a0 $[mdr,ml]$ \u4e2d\u4f20\u9012\u7684\u4e2a\u6570\u548c\u4e58\u4e0a $L-1$\u3002$[mr,qr]$ \u540c\u7406\u3002\u6ce8\u610f\u6211\u4eec\u662f\u4ece $n\\sim 1$ \u626b\u5230 $qr$ \u65f6\u5904\u7406 $[mr,qr]$\uff0c\u4ece $1\\sim n$ \u626b\u5230 $ql$ \u65f6\u5904\u7406 $[ql,ml]$\u3002\n\n\u6d88\u9664\u8d21\u732e\u90e8\u5206\u53ef\u4ee5\u901a\u8fc7\u7279\u6b8a\u5904\u7406 $ml,mr$ \u4f4d\u7f6e\u4e0a\u7531 $ql,qr$ \u4f20\u8fc7\u6765\u7684\u8d21\u732e\uff0c\u7528\u5728\u7ebf\u7ef4\u62a4\u524d\u540e\u7f00\u548c\u505a\u5230\u7ebf\u6027\u3002\u4e0d\u8fc7\u4e3a\u4e86\u597d\u5199\uff0c\u6211\u4eec\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u76f4\u63a5\u5904\u7406\u3002\n\n\u590d\u6742\u5ea6 $O((n+q)\\log n)$\uff0c\u4ee3\u7801\uff1a\n```cpp\nchar s[N<<1];\nint n,q,L[N],R[N],ok[N],ql[N],qr[N];\nint tr[25][N],tr_[25][N],len[N],md[N],md_[N];\nint mL[N],mR[N],d[N],f[N];\nll S[N],Ans[N];\nvector<int> T[N];\ninline void init() {\n    n=read();q=read();\n    scanf(\"%s\",s+1);\n    for(int i=1;i<=2*n;++i)\n        if(s[i]=='L') L[++L[0]]=i;\n        else R[++R[0]]=i;\n    scanf(\"%s\",s+1);\n    for(int i=1;i<=n;++i)\n        ok[i]=s[i]-'0';\n}\ninline void prep() {\n    int pos=1;\n    for(int i=1;i<=n;++i) {\n        while(pos<n&&L[pos+1]<=R[i]) ++pos;\n        mR[i]=pos;\n    }\n    pos=n;\n    for(int i=n;i>=1;--i) {\n        while(pos>1&&L[i]<=R[pos-1]) --pos;\n        mL[i]=pos;\n    }\n    for(int i=1;i<=n;++i) d[i]=d[i-1]+ok[i];\n    for(int i=1;i<=n;++i) tr[0][i]=mR[i],tr_[0][i]=mL[i];\n    for(int j=1;j<=19;++j)\n        for(int i=1;i<=n;++i)\n            tr[j][i]=tr[j-1][tr[j-1][i]],\n            tr_[j][i]=tr_[j-1][tr_[j-1][i]];\n    for(int i=1;i<=q;++i) {\n        ql[i]=read();qr[i]=read();\n        if(mR[ql[i]]<qr[i]) {\n            T[ql[i]].push_back(i);T[qr[i]].push_back(-i);\n            int now=ql[i];\n            for(int j=19;j>=0;--j)\n                if(tr[j][now]<qr[i])\n                    now=tr[j][now],len[i]|=(1<<j);\n            md[i]=now;++len[i];\n            now=qr[i];\n            for(int j=19;j>=0;--j)\n                if(tr_[j][now]>ql[i])\n                    now=tr_[j][now];\n            md_[i]=now;\n        }\n        else len[i]=1,Ans[i]=(d[qr[i]]-d[ql[i]-1])-(ok[ql[i]]+ok[qr[i]])+1ll*(d[qr[i]]-d[ql[i]-1])*len[i];\n    }\n}\nstruct Bit {\n    ll w[N];\n    inline void Add(int x,ll val) {\n        while(x<=n) {\n            w[x]+=val;\n            x+=x&-x;\n        }\n    }\n    inline ll Query(int x) {\n        ll sum=0;\n        while(x) {\n            sum+=w[x];\n            x-=x&-x;\n        }\n        return sum;\n    }\n    inline void clear() {memset(w,0,sizeof w);}\n}tr1,tr2;\ninline void solve1() {\n    int rg1,rg2;ll F=0,qwq;\n    for(int i=n,p;i>=1;--i) {\n        for(int&V:T[i]) {\n            if(V<0) {\n                p=-V;\n                rg2=qr[p];rg1=mL[rg2];\n                qwq=tr2.Query(rg2)-tr2.Query(rg1-1);\n                qwq+=(tr1.Query(md[p])-tr1.Query(rg1-1))*(len[p]-1);\n                qwq+=(tr1.Query(rg2)-tr1.Query(md[p]))*len[p];\n                Ans[p]-=qwq;\n            } else {\n                p=V;\n                Ans[p]+=F;\n            }\n        }\n        f[mL[i]]+=f[i]+ok[i]; S[mL[i]]+=S[i]+f[i]+ok[i];\n        tr1.Add(mL[i],f[i]+ok[i]); tr2.Add(mL[i],S[i]+f[i]+ok[i]);\n        F+=f[i]+ok[i];\n    }\n    memset(f,0,sizeof f);memset(S,0,sizeof S);\n    tr1.clear(); tr2.clear();\n}\ninline void solve2() {\n    int rg1,rg2;ll F=0,qwq;\n    for(int i=1,p;i<=n;++i) {\n        for(int&V:T[i]) {\n            if(V>0) {\n                p=V;\n                rg1=ql[p];rg2=mR[rg1];\n                qwq=tr2.Query(rg2)-tr2.Query(rg1-1);\n                qwq+=(tr1.Query(rg2)-tr1.Query(md_[p]-1))*(len[p]-1);\n                qwq+=(tr1.Query(md_[p]-1)-tr1.Query(rg1-1))*len[p];\n                Ans[p]-=qwq;\n            } else {\n                p=-V;\n                Ans[p]+=F;\n            }\n        }\n        f[mR[i]]+=f[i]+ok[i]; S[mR[i]]+=S[i]+f[i]+ok[i];\n        tr1.Add(mR[i],f[i]+ok[i]); tr2.Add(mR[i],S[i]+f[i]+ok[i]);\n        F+=f[i]+ok[i];\n    }\n    memset(f,0,sizeof f);memset(S,0,sizeof S);\n    tr1.clear(); tr2.clear();\n}\ninline void print() {\n    for(int i=1;i<=q;++i) printf(\"%d %lld\\n\",len[i],d[qr[i]]-d[ql[i]-1]-(Ans[i]-1ll*(d[qr[i]]-d[ql[i]-1])*len[i]));\n}\n\n```\n",
        "postTime": 1675642364,
        "uid": 114830,
        "name": "Kostlin",
        "ccfLevel": 8,
        "title": "P9019 \u9898\u89e3"
    },
    {
        "content": "## Solution\n\n\u9996\u5148\u6709\u4e00\u4e2a\u663e\u7136\u7684\u7ed3\u8bba\uff0c\u533a\u95f4 $i$ \u5411\u53f3\u80fd\u5230\u7684\u533a\u95f4\u662f $[i+1,RT_i]$\uff0c\u5411\u5de6\u80fd\u5230\u7684\u533a\u95f4\u662f $[LT_i,i-1]$\u3002\n\n\n\n\u6839\u636e\u8fd9\u4e2a\u8003\u8651\u500d\u589e\u3002\u5b9a\u4e49\u8df3\u4e00\u6b65\u8868\u793a\u4ece\u5f53\u524d\u533a\u95f4\u53bb\u5230\u6700\u8fdc\u80fd\u53bb\u7684\u533a\u95f4\u3002\u8bbe $f_{i,j}$ \u8868\u793a\u533a\u95f4 $i$ \u5411\u53f3\u8df3 $j$ \u6b65\uff0c\u6700\u8fdc\u5230\u54ea\u4e2a\u533a\u95f4\uff0c$g_{i,j}$ \u8868\u793a\u5411\u5de6\u8df3\u3002\n\n\u90a3\u4e48\u73b0\u5728\u53ea\u9700\u6c42\u51fa $f_{i,0}$ \u548c $g_{i,0}$ \u5c31\u53ef\u4ee5\u8fdb\u884c\u500d\u589e\u3002\n\n\u8bbe $l_i$ \u8868\u793a\u7b2c $i$ \u4e2a `L` \u5411\u5de6\u6700\u8fdc\u5230\u54ea\u4e2a\u533a\u95f4\uff0c$r_i$ \u8868\u793a\u7b2c $i$ \u4e2a `R` \u5411\u53f3\u6700\u8fdc\u5230\u54ea\u4e2a\u533a\u95f4\u3002\u5bf9\u4e8e $l_i$ \u6765\u8bf4\uff0c\u53ea\u9700\u8981\u6c42\u51fa\u5f80\u53f3\u6570\uff0c\u6700\u9760\u8fd1 $i$ \u7684 `R` \u662f\u7b2c\u51e0\u4e2a `R`\uff0c\u56e0\u4e3a `R` \u8d8a\u65e9\u51fa\u73b0\u8868\u793a\u5bf9\u5e94\u7684 `L` \u4e5f\u8d8a\u65e9\u51fa\u73b0\u3002\u8fd9\u4e2a\u503c\u5c31\u662f $l_i$\uff0c$r_i$ \u5c31\u53cd\u8fc7\u6765\u8ba1\u7b97\uff0c\u539f\u7406\u662f\u4e00\u6837\u7684\u3002\n\n\u90a3\u4e48 $f_{i,0}=r_i,g_{i,0}=l_i$\u3002\n\n\u7136\u540e\u7b2c\u4e00\u95ee\u5c31\u5f88\u597d\u505a\u4e86\uff0c\u5c31\u500d\u589e\u5f80\u540e\u8df3\u5c31\u884c\u4e86\u3002\n\n\u7b2c\u4e8c\u95ee\u8bbe $cnt(l,r)$ \u8868\u793a\u4ece $l$ \u533a\u95f4\u5230 $r$ \u533a\u95f4\u6709\u591a\u5c11\u7279\u6b8a\u533a\u95f4\u3002\u4e0d\u59a8\u8bbe\u7b2c\u4e00\u95ee\u7b54\u6848\u662f $dis$\u3002\n\n\u90a3\u4e48\u7b2c\u4e8c\u95ee\u7b54\u6848 $ans=cnt(x,x)+cnt(y,y)+\\sum\\limits_{i=1}^{dis-1} cnt(g_{y,dis-i},f_{x,i})$\u3002\u540e\u9762\u90a3\u4e00\u90e8\u5206\u53ef\u4ee5\u5408\u5e76\u6210\u51e0\u4e2a\u500d\u589e\u3002\u6240\u4ee5\u5728\u500d\u589e\u4e2d\u7edf\u8ba1\u524d\u7f00\u548c\u7684\u548c\uff1f\n\n## Code\n```cpp\n#include<cstdio>\n#include<cstring>\n#define N 200005\nusing namespace std;\nint n,q,now,cnt,ans1,ans2,l[N],r[N],sum[N],f[N<<1][18],g[N<<1][18],fs[N<<1][18],gs[N<<1][18];\nchar s[N<<1],vs[N];\nint dis(int x,int y)\n{\n    if (x==y) return 0;\n    int res=0;\n    for (int i=17;i>=0;--i)\n        if (f[x][i]!=-1&&f[x][i]<y) res+=(1<<i),x=f[x][i];\n    return res+1;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&q);\n    scanf(\"%s\",s+1);\n    cnt=0;now=1;\n    for (int i=1;i<=2*n;++i)\n    {\n        if (s[i]=='L') cnt++;\n        else r[now]=cnt,now++;\n    }\n    cnt=n+1;now=n;\n    for (int i=2*n;i;--i)\n    {\n        if (s[i]=='R') cnt--;\n        else l[now]=cnt,now--;\n    }\n    scanf(\"%s\",vs+1);\n    for (int i=1;i<=n;++i)\n        sum[i]=sum[i-1]+vs[i]-'0';\n    memset(f,-1,sizeof(f));\n    memset(g,-1,sizeof(g));\n    for (int i=1;i<n;++i)\n        f[i][0]=r[i],fs[i][0]=sum[r[i]];\n    for (int i=n;i>1;--i)\n        g[i][0]=l[i],gs[i][0]=sum[l[i]-1];\n    for (int j=1;j<=17;++j)\n        for (int i=1;i<n;++i)\n        {\n            if (f[i][j-1]==-1) continue;\n            f[i][j]=f[f[i][j-1]][j-1];\n            if (f[i][j]!=-1) fs[i][j]=fs[i][j-1]+fs[f[i][j-1]][j-1];\n        }\n    for (int j=1;j<=17;++j)\n        for (int i=n;i>1;--i)\n        {\n            if (g[i][j-1]==-1) continue;\n            g[i][j]=g[g[i][j-1]][j-1];\n            if (g[i][j]!=-1) gs[i][j]=gs[i][j-1]+gs[g[i][j-1]][j-1];\n        }\n    while (q--)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        ans1=dis(x,y);ans2=vs[x]-'0'+vs[y]-'0';\n        for (int i=17;i>=0;--i)\n            if ((ans1-1)&(1<<i)) ans2+=fs[x][i],x=f[x][i];\n        for (int i=17;i>=0;--i)\n            if ((ans1-1)&(1<<i)) ans2-=gs[y][i],y=g[y][i];\n        printf(\"%d %d\\n\",ans1,ans2);\n    }\n    return 0;\n}\n```",
        "postTime": 1680854953,
        "uid": 166078,
        "name": "Thunder_S",
        "ccfLevel": 6,
        "title": "P9019 [USACO23JAN] Tractor Paths P"
    },
    {
        "content": "\u9898\u610f\uff1a\n\n- \u6709 $n$ \u4e2a\u533a\u95f4 $[l_i,r_i]$\uff0c\u6ee1\u8db3 $l_1<l_2<\\dots<l_n$\uff0c$r_1<r_2<\\dots<r_n$\uff0c\u4e14 $\\forall\\ 2\\le i\\le n$ \u90fd\u6709 $l_i<r_{i-1}$\u3002\u5176\u4e2d\uff0c\u4e00\u90e8\u5206\u533a\u95f4\u662f\u5173\u952e\u533a\u95f4\u3002\n- \u4e00\u4e2a\u533a\u95f4\u53ef\u4ee5\u4f20\u9001\u5230\u53e6\u4e00\u4e2a\u533a\u95f4\uff0c\u5f53\u4e14\u4ec5\u5f53\u4e24\u533a\u95f4\u76f8\u4ea4\u3002\n- $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u7ed9\u5b9a\u4e24\u4e2a\u533a\u95f4 $a$ \u548c $b$\uff0c\u6c42\uff1a\n    1. \u4ece $a$ \u5230 $b$ \u81f3\u5c11\u9700\u8981\u4f20\u9001\u51e0\u6b21\u3002\n    2. \u5728\u4fdd\u8bc1\u4f20\u9001\u6b21\u6570\u6700\u5c11\u7684\u524d\u63d0\u4e0b\uff0c\u6709\u591a\u5c11\u4e2a\u5173\u952e\u533a\u95f4\u53ef\u4ee5\u5728\u6b64\u8fc7\u7a0b\u4e2d\u88ab\u4f20\u9001\u5230\u3002\n- $2\\le n\\le 2\\cdot 10^5$\uff0c$1\\le q\\le 2\\cdot 10^5$\uff0c$1\\le a<b\\le n$\u3002\n\n---\n\n\u5148\u5c06\u6240\u6709\u533a\u95f4\u6309\u5de6\u7aef\u70b9\uff08\u6216\u53f3\u7aef\u70b9\uff09\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u95ee\uff0c\u4e00\u4e2a\u663e\u7136\u7684\u8d2a\u5fc3\u662f\u6bcf\u6b21\u9009\u53d6\u4e0e\u5f53\u524d\u533a\u95f4\u76f8\u4ea4\u7684\u6700\u9760\u53f3\u7684\u533a\u95f4\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u5efa\u51fa\u4e00\u68f5\u6811\uff1a\u6811\u4e0a\u7684 $i$ \u53f7\u7ed3\u70b9\u8868\u793a\u7b2c $i$ \u4e2a\u533a\u95f4\uff0c$i$ \u53f7\u7ed3\u70b9\u7684\u7236\u4eb2\u662f\u4e0e\u7b2c $i$ \u4e2a\u533a\u95f4\u76f8\u4ea4\u7684\u6700\u9760\u53f3\u7684\u533a\u95f4\u6240\u5bf9\u5e94\u7684\u7ed3\u70b9\uff0c\u8bb0\u4e4b\u4e3a $p_i$\u3002\n\n\u6211\u4eec\u7684\u8d2a\u5fc3\u5bf9\u5e94\u7684\u6811\u4e0a\u64cd\u4f5c\u5c31\u662f\u4ece $a$ \u53f7\u7ed3\u70b9\u5f00\u59cb\uff0c\u6bcf\u6b21\u8df3\u5411\u7236\u4eb2\u7ed3\u70b9\uff0c\u76f4\u5230\u5f53\u524d\u7ed3\u70b9\u7f16\u53f7\u4e0d\u6bd4 $b$ \u5c0f\u4e3a\u6b62\u3002\u8bb0\u6700\u7ec8\u6240\u5728\u7684\u7ed3\u70b9\u7f16\u53f7\u4e3a $t$\uff0c\u5219\u7b2c\u4e00\u95ee\u7684\u7b54\u6848\u5373\u4e3a $a$ \u5230 $t$ \u7684\u8ddd\u79bb\uff0c\u5229\u7528\u500d\u589e\u5373\u53ef\u5feb\u901f\u6c42\u51fa $t$\u3002**\u6ce8\u610f\uff1a\u5b9e\u9645\u4e0a\u6700\u540e\u4e00\u6b65\u9700\u8981\u6070\u597d\u8df3\u5230 $b$ \u53f7\u7ed3\u70b9\uff0c\u4f46\u662f\u4e3a\u4e86\u53d9\u8ff0\u65b9\u4fbf\uff0c\u6211\u4eec\u8fd9\u91cc\u8bb0\u5f55\u7684 $t$ \u662f $a$ \u7684\u4e00\u4e2a\u7956\u5148\u7ed3\u70b9\u3002**\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u95ee\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u660e\u786e\u6bcf\u6b21\u4ece\u67d0\u4e2a\u7ed3\u70b9\u80fd\u8df3\u5230\u54ea\u4e9b\u7ed3\u70b9\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7ed3\u70b9 $i$\uff0c\u5176\u80fd\u8df3\u5230\u7684\u7ed3\u70b9\u7f16\u53f7\u6784\u6210\u7684\u96c6\u5408\u4e3a $(i,p_i]$\uff0c\u90a3\u4e48\u5b83\u4eec\u5177\u4f53\u5728\u6811\u7684\u54ea\u4e9b\u4f4d\u7f6e\u5462\uff1f\n\n\u8003\u8651\u5efa\u6811\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u6bcf\u6b21\u6309\u7f16\u53f7\u4ece\u5c0f\u5230\u5927\u52a0\u5165\u7ed3\u70b9\uff0c\u53ef\u4ee5\u53d1\u73b0\u5f53\u52a0\u5165\u4e00\u4e2a\u7ed3\u70b9\u65f6\uff0c\u5176\u6240\u6709\u513f\u5b50\u7684\u7ed3\u70b9\u7f16\u53f7\u5fc5\u7136\u662f\u5f53\u524d\u6240\u6709\u6682\u65e0\u7236\u4eb2\u7684\u7ed3\u70b9\u7f16\u53f7\u4e2d\u6700\u5c0f\u7684\u82e5\u5e72\u4e2a\uff08\u53ef\u4ee5\u4e3a\u96f6\u4e2a\uff09\u3002\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\uff0c\u5bf9\u4e8e\u6240\u6709\u6df1\u5ea6\u76f8\u540c\u7684\u7ed3\u70b9\u7f16\u53f7\uff0c\u4ee5\u53ca\u4e00\u4e2a\u7ed3\u70b9\u6240\u6709\u513f\u5b50\u7684\u7ed3\u70b9\u7f16\u53f7\uff0c\u5b83\u4eec\u90fd\u5fc5\u7136\u6784\u6210\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u800c\u8fd9\u4e5f\u4f7f\u8fd9\u68f5\u6811\u62e5\u6709\u4e86\u6781\u597d\u7684\u6027\u8d28\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u4ee5\u4e0b\u56fe\u8fd9\u68f5\u6811\u4e3a\u4f8b\uff08\u5f53\u7136\u5b9e\u9645\u60c5\u51b5\u4e2d\u6811\u7684\u5f62\u6001\u53ef\u4ee5\u5343\u5947\u767e\u602a\uff0c\u8fd9\u91cc\u4e3a\u4e86\u7f8e\u89c2\u753b\u4e86\u4e00\u68f5\u5bf9\u79f0\u7684\u6811\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/pm5r8bff.png)\n\n\u5f62\u8c61\u5316\u5730\uff0c\u82e5 $i$ \u53f7\u7ed3\u70b9\u4e0e $j$ \u53f7\u7ed3\u70b9\u540c\u6df1\u5ea6\u4e14 $i<j$\uff0c\u5219\u6211\u4eec\u79f0 $i$ \u53f7\u7ed3\u70b9\u5728 $j$ \u53f7\u7ed3\u70b9\u5de6\u8fb9\uff0c$j$ \u53f7\u7ed3\u70b9\u5728 $i$ \u53f7\u7ed3\u70b9\u53f3\u8fb9\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c$(i,p_i]$ \u8fd9\u6bb5\u533a\u95f4\u5bf9\u5e94\u4e86 $i$ \u53f3\u8fb9\u7684\u6240\u6709\u7ed3\u70b9\u4ee5\u53ca $p_i$ \u53ca\u5176\u5de6\u8fb9\u7684\u6240\u6709\u7ed3\u70b9\u3002\u4f9d\u65e7\u5f62\u8c61\u5316\u5730\uff0c\u6211\u4eec\u5c06\u8df3\u5230 $i$ \u53f3\u8fb9\u7684\u67d0\u7ed3\u70b9\u7684\u4e00\u6b21\u64cd\u4f5c\u79f0\u4e3a \u201c \u5411\u53f3\u8df3 \u201d\uff0c\u5c06\u8df3\u5230 $p_i$ \u53ca\u5176\u5de6\u8fb9\u7684\u67d0\u7ed3\u70b9\u7684\u4e00\u6b21\u64cd\u4f5c\u79f0\u4e3a \u201c \u5411\u5de6\u4e0a\u8df3 \u201d\u3002\n\n\u56de\u5230\u539f\u95ee\u9898\uff0c\u6211\u4eec\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\u3002\n\n**1. $b=t$ \u6216 $b$ \u5728 $t$ \u5de6\u8fb9\u3002**\n\n\u7531\u4e8e\u6bcf\u6b21\u64cd\u4f5c\u53ea\u80fd\u4f7f\u5f53\u524d\u7ed3\u70b9\u7684\u6df1\u5ea6\u51cf\u5c11 $0$\uff08\u5411\u53f3\u8df3\uff09\u6216 $1$\uff08\u5411\u5de6\u4e0a\u8df3\uff09\uff0c\u800c $b$ \u53c8\u4e0e $t$ \u540c\u6df1\u5ea6\uff0c\u6545\u6211\u4eec\u6bcf\u6b21\u53ea\u80fd\u5411\u5de6\u4e0a\u8df3\u4ee5\u4fdd\u8bc1\u64cd\u4f5c\u6b21\u6570\u6700\u5c11\u3002\n\n\u4ee5 $a=10,b=30,t=32$ \u4e3a\u4f8b\uff0c\u5219\u4e0b\u56fe\u4e2d\u7684\u7eff\u8272\u7ed3\u70b9\u5373\u4e3a\u53ef\u7ecf\u8fc7\u7684\u6240\u6709\u7ed3\u70b9\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/6jsymf81.png)\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u7eff\u8272\u7ed3\u70b9\u7684\u7f16\u53f7\u5728 $[i,p_i]$ \u5185\u4e14 DFS \u5e8f\u4e5f\u5728\u4e00\u6bb5\u533a\u95f4\u5185\uff0c\u8fd9\u662f\u7ecf\u5178\u7684\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\uff0c\u79bb\u7ebf\u4e0b\u6765\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002\n\n**2. $b$ \u5728 $t$ \u7684\u67d0\u4e2a\u5b50\u7ed3\u70b9\u53f3\u8fb9\u3002**\n\n\u540c\u6837\u5730\uff0c\u901a\u8fc7\u5206\u6790\u6df1\u5ea6\u53d8\u5316\u53ef\u77e5\uff0c\u6211\u4eec\u9700\u6070\u597d\u8fdb\u884c\u4e00\u6b21\u5411\u53f3\u8df3\u7684\u64cd\u4f5c\uff0c\u5176\u4f59\u64cd\u4f5c\u5747\u4e3a\u5411\u5de6\u4e0a\u8df3\u3002\n\n\u4ee5 $a=3,b=32,t=34$ \u4e3a\u4f8b\uff0c\u5219\u4e0b\u56fe\u4e2d\u7684\u84dd\u8272\u7ed3\u70b9\u5373\u4e3a\u53ef\u7ecf\u8fc7\u7684\u6240\u6709\u7ed3\u70b9\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/f8d2bnrj.png)\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u84dd\u8272\u7ed3\u70b9\u7684\u7f16\u53f7\u5728 $[i,p_i]$ \u5185\u4e14 DFS \u5e8f\u5728\u4e24\u6bb5\u533a\u95f4\u5185\uff0c\u4e5f\u662f\u4e2a\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u4fbf\u7528 $O(n\\log n+q\\log n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u89e3\u51b3\u4e86\u672c\u9898\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nll n,q,x,y,L,tmp,timer,l[200009],r[200009],dfn[200009],dis[200009],ans[200009],bit[200009],anc[200009][20];\nchar d[400009],s[200009];\nstruct st{ll x,w,id;};\nvector <ll> to[200009];\nvector <st> qr[200009];\ninline ll read(){\n\tll s = 0,w = 1;\n\tchar ch = getchar();\n\twhile (ch > '9' || ch < '0'){ if (ch == '-') w = -1; ch = getchar();}\n\twhile (ch <= '9' && ch >= '0') s = (s << 1) + (s << 3) + (ch ^ 48),ch = getchar();\n\treturn s * w;\n}\nvoid upd(ll x,ll y){for (;x <= n;x += x & (-x)) bit[x] += y;}\nll query(ll x){ll res = 0; for (;x;x -= x & (-x)) res += bit[x]; return res;}\nvoid build(){\n\tll cl = 0,cr = 0,pos = 1;\n\tfor (ll i = 1;i <= 2 * n;i += 1){\n\t\tif (d[i] == 'L') l[++ cl] = i;\n\t\telse r[++ cr] = i;\n\t}\n\tfor (ll i = 2;i <= n;i += 1){\n\t\twhile (pos < i && (i == n || l[i + 1] > r[pos])){\n\t\t\tanc[pos][0] = i;\n\t\t\tto[i].emplace_back(pos ++);\n\t\t}\n\t}\n}\nvoid dfs(ll u){\n\tdfn[u] = ++ timer;\n\tfor (ll i = 1;i <= L;i += 1) anc[u][i] = anc[anc[u][i - 1]][i - 1];\n\tfor (ll i = 0;i < to[u].size();i += 1) dfs(to[u][i]);\n}\nvoid add(ll l,ll r,ll L,ll R,ll id){\n\tqr[r].emplace_back((st){R,1,id});\n\tqr[r].emplace_back((st){L - 1,-1,id});\n\tqr[l - 1].emplace_back((st){R,-1,id});\n\tqr[l - 1].emplace_back((st){L - 1,1,id});\n}\nvoid work(){\n\tfor (ll i = 1;i <= n;i += 1){\n\t\tif (s[i] == '1') upd(dfn[i],1);\n\t\tfor (ll j = 0;j < qr[i].size();j += 1){\n\t\t\tans[qr[i][j].id] += query(qr[i][j].x) * qr[i][j].w;\n\t\t}\n\t}\n}\nint main(){\n\tn = read(),q = read(),L = log2(n),scanf(\"%s\",d + 1),scanf(\"%s\",s + 1);\n\tbuild(),dfs(n);\n\tfor (ll i = 1;i <= q;i += 1){\n\t\tx = read(),y = read(),dis[i] = 1;\n\t\tll tmp = x;\n\t\tfor (ll j = L;j >= 0;j -= 1){\n\t\t\tif (!anc[x][j] || anc[x][j] >= y) continue;\n\t\t\tdis[i] += 1 << j,x = anc[x][j];\n\t\t}\n\t\tif (dfn[tmp] < dfn[y]) add(tmp,y,1,dfn[tmp],i),add(tmp,y,dfn[y],n,i);\n\t\telse add(tmp,y,dfn[y],dfn[tmp],i);\n\t}\n\twork();\n\tfor (ll i = 1;i <= q;i += 1) printf(\"%lld %lld\\n\",dis[i],ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1675090731,
        "uid": 322075,
        "name": "Ecrade_",
        "ccfLevel": 7,
        "title": "[USACO23JAN] Tractor Paths P \u9898\u89e3"
    },
    {
        "content": "## \u524d\u8a00\n\n\u8d62\u9ebb\u4e86\u3002\n\n\u4ecb\u7ecd\u4e00\u79cd\u975e\u5e38\u597d\u505a\u7684\u65b9\u6cd5\u3002\n\n## \u9898\u89e3\n\n\u8003\u8651\u7b2c\u4e00\u95ee\uff0c\u76f4\u63a5\u500d\u589e\u5c31\u884c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+q)\\log n)$\u3002\n\n\u8003\u8651\u7b2c\u4e8c\u95ee\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u7ecf\u5178\u7ed3\u8bba\uff1a\u8bbe $d(l,r)$ \u4e3a $l$ \u5230 $r$ \u7684\u8ddd\u79bb\uff0c$x$ \u4e3a $[l,r]$ \u4e2d\u7684\u4efb\u610f\u4e00\u70b9\uff0c\u5219\u6709 $d(l,r)\\leq d(l,x)+d(x,r)\\leq d(l,r)+1$\u3002\n\n\u7b2c\u4e00\u4e2a\u4e0d\u7b49\u53f7\u5f88\u597d\u8bc1\u660e\uff0c\u7b2c\u4e8c\u4e2a\u4e0d\u7b49\u53f7\u4e5f\u5f88\u597d\u8bc1\u660e\u3002\n\n\u90a3\u4e48\u5982\u679c\u6211\u4eec\u8981\u8ba1\u6570\u6709\u591a\u5c11\u4e2a\u70b9\u6ee1\u8db3 $d(l,x)+d(x,r)=d(l,r)$\uff0c\u53ea\u9700\u8981\u6c42\u51fa $\\sum d(l,x)+\\sum d(x,r)-\\sum d(l,r)$ \u5373\u53ef\u3002\n\n\u8fd9\u4e2a\u8ba1\u6570\u633a\u7b80\u5355\u7684\uff0c\u76f4\u63a5\u6309\u7167 dfs \u5e8f\u79bb\u7ebf\uff0c\u7528\u6bcf\u4e2a\u70b9\u80fd\u5230\u7684\u6700\u8fdc\u7684\u70b9\u5efa\u6811\uff0c\u901a\u8fc7\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u6700\u540e\u8ba1\u7b97\uff0c\u8fd9\u90e8\u5206\u5176\u5b9e\u6211\u4e5f\u5fd8\u8bb0\u6211\u8d5b\u65f6\u5230\u5e95\u600e\u4e48\u5199\u7684\u4e86\uff0c\u6240\u4ee5\u6211\u628a\u4ee3\u7801\u7ed9\u51fa\u6765\u5927\u5bb6\u81ea\u5df1\u770b\u4e00\u773c\u5427\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\n//\u4e0d\u56de\u5bb6\u4e86\uff0c\u6211\u4eec\u53bb\u9e1f\u5de2\uff01\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nstruct seg\n{\n#define int long long\n\tint tag[800003],ans[800003];\n\tvoid push_down(int x,int l1,int l2)\n\t{\n\t\ttag[x<<1]+=tag[x],tag[(x<<1)+1]+=tag[x];\n\t\tans[x<<1]+=tag[x]*l1,ans[(x<<1)+1]+=tag[x]*l2;\n\t\ttag[x]=0;\n\t\treturn ;\n\t}\n\tvoid update(int l,int r,int L,int R,int id,int val)\n\t{\n\t\tif(L<=l&&r<=R) \n\t\t{\n\t\t\ttag[id]+=val;\n\t\t\tans[id]+=(r-l+1)*val;\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tpush_down(id,mid-l+1,r-mid);\n\t\tif(L<=mid) update(l,mid,L,R,id<<1,val);\n\t\tif(R>=mid+1) update(mid+1,r,L,R,(id<<1)+1,val);\n\t\tans[id]=ans[(id<<1)]+ans[(id<<1)+1];\n\t\treturn ;\n\t}\n\tint query(int l,int r,int L,int R,int id)\n\t{\n\t\tif(L<=l&&r<=R) return ans[id];\n\t\tint mid=(l+r)>>1;\n\t\tpush_down(id,mid-l+1,r-mid);\n\t\tint res=0;\n\t\tif(L<=mid) res+=query(l,mid,L,R,id<<1);\n\t\tif(R>=mid+1) res+=query(mid+1,r,L,R,(id<<1)+1);\n\t\treturn res;\n\t}\n#undef int\n}T;\nint al[200003],ar[200003];\nint b[200003];\nint f[200003][18];\nchar s[400003];\nint dis(int l,int r)\n{\n\tif(l==r) return 0;\n\tint ans=0;\n\tfor(int i=17; i>=0; --i)\n\t\tif(f[l][i]<r) l=f[l][i],ans+=1<<i;\n\treturn ans+1;\n}\nint F[200003];\nll G[200003];\nvector<int> e[200003];\nstruct node{int l,r,id;};\nvector<node> vl[200003],vr[200003];\nint n=read(),m=read(),L=0;\nvoid dfsl(int x)\n{\n\tfor(auto [l,r,id]:vl[x])\n\t\tG[id]-=T.query(1,L,l,r,1)-(b[l]==x);\n\tint pos=upper_bound(b+1,b+L+1,x)-b;\n\tif(pos<=L) T.update(1,L,pos,L,1,1);\n\tfor(int y:e[x]) dfsl(y);\n\tif(pos<=L) T.update(1,L,pos,L,1,-1);\n\treturn ;\n}\nvoid dfsr(int x)\n{\n\tfor(auto [l,r,id]:vr[x])\n\t\tG[id]-=T.query(1,L,l,r,1)-(b[r]==x);\n\tint pos=lower_bound(b+1,b+L+1,x)-b;\n\tif(pos>1) T.update(1,L,1,pos-1,1,1);\n\tfor(int y:e[x]) dfsr(y);\n\tif(pos>1) T.update(1,L,1,pos-1,1,-1);\n\treturn ;\n}\nsigned main()\n{\n\tscanf(\"%s\",s+1);\n\tfor(int i=1,x=0,y=0; i<=n*2; ++i)\n\t\tif(s[i]=='L') ++x; else al[++y]=x;\n\tfor(int i=n*2,x=n+1,y=n+1; i>=1; --i)\n\t\tif(s[i]=='R') --x; else ar[--y]=x;\n\tscanf(\"%s\",s+1);\n\tfor(int i=1; i<=n; ++i)\n\t\tif(s[i]=='1') b[++L]=i;\n\tfor(int i=n; i>=1; --i)\n\t{\n\t\tf[i][0]=al[i];\n\t\tfor(int j=1; j<18; ++j)\n\t\t\tf[i][j]=f[f[i][j-1]][j-1];\n\t}\n\tfor(int i=1,l,r,l1,r1; i<=m; ++i)\n\t{\n\t\tl=read(),r=read(),F[i]=dis(l,r),\n\t\tl1=lower_bound(b+1,b+L+1,l)-b,\n\t\tr1=upper_bound(b+1,b+L+1,r)-b-1;\n\t\tif(l1<=r1)\n\t\t{\n\t\t\tG[i]=1ll*(F[i]+1)*(r1-l1+1),\n\t\t\tvl[l].push_back((node){l1,r1,i}),\n\t\t\tvr[r].push_back((node){l1,r1,i});\n\t\t}\n\t}\n\tT.update(1,L,1,L,1,1);\n\tfor(int i=1; i<n; ++i)\n\t\te[al[i]].push_back(i);\n\tdfsl(n);\n\tfor(int i=1; i<=n; ++i) e[i].clear();\n\tfor(int i=2; i<=n; ++i)\n\t\te[ar[i]].push_back(i);\n\tdfsr(1);\n\tfor(int i=1; i<=m; ++i)\n\t\tprintf(\"%d %lld\\n\",F[i],G[i]);\n\treturn 0;\n}\n```",
        "postTime": 1676023525,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P9019"
    }
]