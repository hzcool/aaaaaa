[
    {
        "content": "### [[FJOI2015]\u706b\u661f\u5546\u5e97\u95ee\u9898](https://www.luogu.org/problemnew/show/P4585)\n\n### [Blog](https://www.cnblogs.com/terribleterrible/p/9872831.html)\n\n\u524d\u5929\u8003\u4e86\u5230\u7ebf\u6bb5\u6811\u5206\u6cbb\u6a21\u677f\u9898,\u5168\u573a\u90fd\u5207\u4e86,\u5c31\u6211\u4e0d\u4f1aQAQ\n\n\u4e8e\u662f\u5207\u9898\u65e0\u6570\u7684Tyher\u5de8\u5de8\u5c31\u544a\u8bc9\u6211:\"\u4f60\u53ef\u4ee5\u53bb\u770b\u770b\u706b\u661f\u5546\u5e97\u95ee\u9898,\u770b\u4e86\u4f60\u5c31\u4f1a\u4e86.\"\n\n\u7b2c\u4e00\u9053\u7ebf\u6bb5\u6811\u5206\u6cbb\u9898,\u770b\u4e86yyb\u535a\u5ba2,\u5b66\u4e60\u4e86\u4e00\u6ce2.\n\n\u5176\u5b9e\u7ebf\u6bb5\u6811\u5206\u6cbb\u5c31\u662f\u5bf9\u64cd\u4f5c\u7684\u65f6\u95f4\u5206\u6cbb.\n\n\u5bf9\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u8282\u70b9\u5f00\u4e00\u4e2a$vector$,\u628a\u8be2\u95ee\u7684\u533a\u95f4(\u65f6\u95f4\u7684\u533a\u95f4)\u770b\u6210\u4e00\u6bb5\u4e00\u6bb5\u653e\u5230\u7ebf\u6bb5\u6811\u7684$vector$\u91cc\u9762\u5b58\u7740.\n\n\u6ce8\u610f\u5230\u4fee\u6539\u4f1a\u5ef6\u7eed\u5230\u6700\u540e\u4e00\u523b,\u6240\u4ee5\u4fee\u6539\u53ea\u662f\u5de6\u7aef\u70b9\u4e0d\u4e00\u6837\u800c\u5df2,\u76f8\u5f53\u4e8e\u4e00\u4e2a\u540e\u7f00.\n\n\u628a\u4fee\u6539\u6309\u7167\u4f4d\u7f6e\u6392\u5e8f(\u8fd9\u4e2a\u65f6\u5019\u65f6\u95f4\u662f\u4e71\u5e8f\u7684),\u63a5\u7740\u4eff\u7167\u7ebf\u6bb5\u6811\u7684\u5f62\u5f0f\u6309\u65f6\u95f4\u5206\u6cbb,\u5728$mid$\u4e4b\u524d\u7684\u4fee\u6539,\u5c31\u6254\u5230\u5de6\u8fb9\u7684\u6570\u7ec4\u91cc\u9012\u5f52,\u5426\u5219\u5c31\u6254\u5230\u53f3\u8fb9\u7684\u5b50\u6811.\u8fd9\u6837\u5c31\u9664\u6389\u4e86\u65f6\u95f4\u8fd9\u4e00\u7ef4\u7684\u9650\u5236.\n\n\u90a3\u4e48\u7a7a\u95f4\u8fd9\u4e00\u7ef4,\u5c31\u7528\u4e00\u4e2a\u53ef\u6301\u4e45\u5316trie\u6811\u6765\u7ef4\u62a4,$r$\u548c$l-1$\u7684\u5bf9\u5e94\u7684\u5b57\u5178\u6811\u524d\u7f00\u548c\u76f8\u51cf\u5c31\u662f\u533a\u95f4\u7684\u5b57\u5178\u6811.\u6ce8\u610f\u6700\u5f00\u59cb\u4fee\u6539\u8981\u6309\u7167\u5546\u5e97\u7f16\u53f7\u6392\u5e8f,\u8fd9\u6837\u6309\u7167\u65f6\u95f4\u5206\u62e3\u4e4b\u540e\u5b83\u7684\u5546\u5e97\u7f16\u53f7\u4f9d\u7136\u662f\u6709\u5e8f\u7684,\u4f60\u4e0d\u59a8\u628a\u8fd9\u4e9b\u6709\u4fee\u6539\u7684\u5546\u5e97\u4e4b\u95f4\u7684\u5176\u4ed6\u5546\u5e97\u90fd\u5ffd\u7565\u6389,\u4e00\u4e2a\u4fee\u6539\u6328\u7740\u4e00\u4e2a\u4fee\u6539\u5730\u6784\u5efa\u4e3b\u5e2d\u6811,\u4fdd\u8bc1\u4e86\u65f6\u95f4\u590d\u6742\u5ea6.\n\n\u8fd8\u6709\u4e00\u4e2a\u503c\u5f97\u6ce8\u610f\u7684\u95ee\u9898,\u5c31\u662f\u5f53\u628a\u70b9\u52a0\u5230\u53ef\u6301\u4e45\u5316\u5b57\u5178\u6811\u91cc\u7684\u65f6\u5019,\u8981\u91cd\u65b0\u4ece\u5f53\u524d\u5de6\u7aef\u70b9\u6784\u51fa\u5b57\u5178\u6811(\u76f8\u5f53\u4e8e\u6e05\u7a7a\u8fd9\u68f5\u53ef\u6301\u4e45\u5316\u5b57\u5178\u6811,\u5047\u5982\u8fd9\u4e2a\u8be2\u95ee\u5bf9\u5e94\u7684\u7b54\u6848\u662f\u5f53\u524d\u533a\u95f4\u4e4b\u524d\u7684\u67d0\u6b21\u4fee\u6539\u52a0\u5165\u7684\u503c,\u90a3\u4e48\u8fd9\u4e2a\u8be2\u95ee\u4e5f\u4e00\u5b9a\u4f1a\u88ab\u4e22\u5230\u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\u8282\u70b9\u4e0a\u8ba1\u7b97,\u6240\u4ee5\u4e0d\u7528\u62c5\u5fc3\u4e4b\u524d\u7684\u4fee\u6539\u4f1a\u5f71\u54cd\u8be2\u95ee\u7684\u7b54\u6848)\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u64a4\u9500\u5e26\u6765\u7684\u5e38\u6570.\n\n\u518d\u6309\u7167trie\u6811\u627e\u5f02\u6216\u6700\u5927\u503c\u7684\u65b9\u6cd5\u6765\u627e\u7b54\u6848,\u4e00\u4e2a\u8be2\u95ee\u4f1a\u88ab\u653e\u5230\u7ebf\u6bb5\u6811\u7684\u591a\u4e2a\u8282\u70b9\u4e0a(\u4f1a\u88ab\u5206\u6210\u5f88\u591a\u6bb5\u65f6\u95f4),\u6240\u4ee5\u7b54\u6848\u8981\u53d6$max$.\n\n\u6ce8\u610f\u7ebf\u6bb5\u6811\u4e0a\u7684\u662f\u4fee\u6539\u65f6\u95f4,\u5b57\u5178\u6811\u662f\u6309\u7167\u7a7a\u95f4\u6784\u5efa\u7684.\u8fd9\u4e2a\u5f88\u91cd\u8981,\u603b\u662f\u5199\u7740\u5199\u7740\u5c31\u5fd8\u4e86...\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(nlog^2n)$,\u7ebf\u6bb5\u6811\u5206\u6cbb\u548ctrie\u6811$nlogn$,\u5b57\u5178\u6811$logn$\n```cpp\n#include<bits/stdc++.h>\n#define maxn 100005\n#define mid ((l+r)>>1)\n#define rc ((rt<<1)|1)\n#define lc (rt<<1)\nusing namespace std;\nint gi()\n{\n    char c;int x,sign=1;\n    while((c=getchar())>'9'||c<'0')if(c=='-')sign=-1;\n    x=c-'0';while((c=getchar())>='0'&&c<='9')x=(x<<1)+(x<<3)+c-'0';\n    return x*sign;\n}\nint n,m,cnt1,cnt2,tot,top;\nint rt[maxn],ans[maxn],st[maxn];\nint ch[maxn*20][2],sz[maxn*20];\nvector<int> a[maxn];\nstruct guest{int l,r,L,R,x;}p[maxn];\nstruct buy{int s,v,t;}q[maxn],t1[maxn],t2[maxn];\nbool cmp(const buy x,const buy y){return x.s<y.s;}\nvoid insert(int &x,int u,int w)\n{\n    int now;now=x=++tot;\n    for(int i=17;i>=0;i--)\n    {\n        bool d=w&(1<<i);\n        ch[now][d^1]=ch[u][d^1];ch[now][d]=++tot;\n        now=ch[now][d];u=ch[u][d];\n        sz[now]=sz[u]+1;\n    }\n}\nint query(int l,int r,int w)\n{\n    int res=0;\n    for(int i=17;i>=0;i--)\n    {\n        bool d=w&(1<<i);\n        if(sz[ch[r][d^1]]-sz[ch[l][d^1]]>0)\n            l=ch[l][d^1],r=ch[r][d^1],res+=(1<<i);\n        else l=ch[l][d],r=ch[r][d];\n    }\n    return res;\n}\nvoid update(int rt,int l,int r,int L,int R,int x)\n{\n    if(L>R||r<L||l>R)return ;\n    if(L<=l&&r<=R){a[rt].push_back(x);return;}\n    update(lc,l,mid,L,R,x);update(rc,mid+1,r,L,R,x);\n}\nvoid calc(int x,int L,int R)\n{\n    top=tot=0;\n    for(int i=L;i<=R;i++)\n    {\n        st[++top]=q[i].s;\n        insert(rt[top],rt[top-1],q[i].v);\n    }\n    for(int i=0,sz=a[x].size();i<sz;i++)\n    {\n        int k=a[x][i],t;\n        int l=upper_bound(st+1,st+1+top,p[k].l-1)-st-1;\n        int r=upper_bound(st+1,st+1+top,p[k].r)-st-1;\n        ans[k]=max(ans[k],t=query(rt[l],rt[r],p[k].x));\n        //cout<<x<<\" \"<<k<<\" \"<<t<<endl;\n    }\n}\nvoid divide(int rt,int l,int r,int L,int R)//\u6309\u65f6\u95f4\u5206\u6cbb\n{\n    if(L>R)return;\n    int cn1=0,cn2=0;\n    calc(rt,L,R);\n    if(l==r)return;\n    for(int i=L;i<=R;i++)//\u4fee\u6539\u7684\u533a\u95f4\u53f3\u7aef\u70b9\u90fd\u662fcnt1,\u76f8\u5f53\u4e8e\u5f71\u54cd\u5230\u4e4b\u540e\u7684\u65f6\u95f4\n        if(q[i].t<=mid)t1[++cn1]=q[i];\n        else t2[++cn2]=q[i];\n    for(int i=1;i<=cn1;i++)q[i+L-1]=t1[i];//\u5de6\u7aef\u70b9\u5728mid\u5de6\u8fb9\u7684\u653e\u5728\u5de6\u533a\u95f4\n    for(int i=1;i<=cn2;i++)q[i+L-1+cn1]=t2[i];//\u5426\u5219\u653e\u53f3\u8fb9\n    divide(lc,l,mid,L,L+cn1-1);\n    divide(rc,mid+1,r,L+cn1,R);\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)insert(rt[i],rt[i-1],gi());\n    for(int i=1,ty,l,r,x,d,s,v;i<=m;i++)\n    {\n        ty=gi();\n        if(!ty)s=gi(),v=gi(),q[++cnt1]=(buy){s,v,cnt1};//\u8d77\u70b9,\u4ef7\u683c,\u65f6\u95f4\n        else\n        {\n            l=gi(),r=gi(),x=gi(),d=gi();\n            ans[++cnt2]=query(rt[l-1],rt[r],x);\n            p[cnt2]=(guest){l,r,max(1,cnt1-d+1),cnt1,x};\n            //\u5546\u5e97\u5de6\u7aef\u70b9,\u5546\u5e97\u53f3\u7aef\u70b9,\u5f00\u59cb\u65f6\u95f4,\u7ed3\u675f\u65f6\u95f4,\u559c\u597d\u5bc6\u7801\n        }\n    }\n    for(int i=1;i<=cnt2;i++)update(1,1,cnt1,p[i].L,p[i].R,i);\n    sort(q+1,q+1+cnt1,cmp);//\u6309\u7167\u5546\u5e97\u7f16\u53f7\u6392\u5e8f\n    divide(1,1,cnt1,1,cnt1);\n    for(int i=1;i<=cnt2;i++)printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n\n```",
        "postTime": 1540814273,
        "uid": 61672,
        "name": "Brioche",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4585 \u3010[FJOI2015]\u706b\u661f\u5546\u5e97\u95ee\u9898\u3011"
    },
    {
        "content": "\u5728 Trie \u4e0a\u8d70\u7684\u8fc7\u7a0b\u76f8\u5f53\u4e8e\u662f\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u503c\u57df\u533a\u95f4\u5185\u662f\u5426\u6709\u503c\uff0c\u90a3\u4e48\u53ef\u4ee5\u7528\u6574\u4f53\u4e8c\u5206\u6765\u505a\u8fd9\u4e2a\u8fc7\u7a0b. \u5148\u4e0d\u8003\u8651\u4e00\u5f00\u59cb\u7684\u90a3\u4e9b\u4e1c\u897f\uff0c\u90a3\u4e48\u5bf9\u4e8e\u5206\u6cbb\u5230\u7684\u67d0\u4e00\u4e2a\u533a\u95f4\u9700\u8981\u6c42\u51fa\u4f4d\u7f6e\u5728 $[l,r]$ \u5185\u65f6\u95f4\u5728 $[L,R]$ \u5185\u662f\u5426\u6709\u70b9\uff0c\u8fd9\u662f\u4e2a\u7ecf\u5178\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\uff0c\u53ef\u4ee5\u79bb\u7ebf\u505a\u5230 $O(len\\log len)$\uff0c$len$ \u662f\u70b9\u548c\u8be2\u95ee\u7684\u6570\u91cf\u4e4b\u548c. \u4e8e\u662f\u8fd9\u90e8\u5206\u7684\u6574\u4f53\u590d\u6742\u5ea6\u662f $O(n\\log ^2 n)$. \u5bf9\u4e8e\u4e00\u5f00\u59cb\u7684\u4e1c\u897f\u518d\u505a\u4e00\u6b21\u6574\u4f53\u4e8c\u5206\uff0c\u90a3\u4e48\u8fd9\u6b21\u9700\u8981\u53ea\u6c42\u51fa\u4f4d\u7f6e\u5728 $[l,r]$ \u5185\u662f\u5426\u6709\u70b9. \u53ef\u4ee5\u505a\u5230 $O(n\\log n)$\uff0c\u4f46\u4e3a\u4e86\u7b80\u4fbf\u8fd8\u662f\u7528\u5b9e\u73b0\u6210 $O(n\\log ^2n)$. \n\n\u8be5\u505a\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log ^2n)$\uff0c\u800c\u7a7a\u95f4\u590d\u6742\u5ea6\u8fbe\u5230\u4e86\u7ebf\u6027.\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int N=1e5+500;\nint ans1[N],ans2[N],n,m,qn,cn;\nstruct BIT\n{\n    int a[N];\n    void update(int x,int w){for(;x<=n;x+=x&-x)a[x]+=w;}\n    int query(int x){int ans=0;for(;x;x-=x&-x)ans+=a[x];return ans;}\n    int query(int l,int r){return query(r)-query(l-1);}\n}s,sl,sr;\nstruct WNode{int l,L,w;}w[N],c[N],tmpwl[N],tmpwr[N];\nstruct QNode{int l,r,L,R,w,id,exi;}q[N],ql[N],qr[N],tmpq[N<<1];\n\nvoid solve1(int wl,int wr,int l,int r,int L,int R,int dep)\n{\n    if(l>r||L>R)return;\n    if(wl==wr)return;\n    int mid=(wl+wr)>>1;int wnl=0,wnr=0,qnl=0,qnr=0;\n    for(int i=l;i<=r;i++)\n        if(w[i].w<=mid)\n            tmpwl[++wnl]=w[i],sl.update(w[i].l,1);\n        else tmpwr[++wnr]=w[i],sr.update(w[i].l,1);\n    for(int i=L;i<=R;i++)\n        if(q[i].w>>dep&1)\n        {\n            if(sl.query(q[i].l,q[i].r))ql[++qnl]=q[i],ans1[q[i].id]|=1<<dep;\n            else qr[++qnr]=q[i];\n        }\n        else\n        {\n            if(sr.query(q[i].l,q[i].r))qr[++qnr]=q[i],ans1[q[i].id]|=1<<dep;\n            else ql[++qnl]=q[i];\n        }\n    for(int i=l;i<=r;i++)\n        if(w[i].w<=mid)sl.update(w[i].l,-1);\n        else sr.update(w[i].l,-1);\n    for(int i=1;i<=wnl;i++)w[l+i-1]=tmpwl[i];\n    for(int i=1;i<=wnr;i++)w[l+wnl+i-1]=tmpwr[i];\n    for(int i=1;i<=qnl;i++)q[L+i-1]=ql[i];\n    for(int i=1;i<=qnr;i++)q[L+qnl+i-1]=qr[i];\n    solve1(wl,mid,l,l+wnl-1,L,L+qnl-1,dep-1);\n    solve1(mid+1,wr,l+wnl,r,L+qnl,R,dep-1);\n}\nint cmpq(const QNode &a,const QNode &b){return a.L<b.L;}\nvoid calc(const WNode w[],int wn,QNode q[],int qn)\n{\n    int tn=0;\n    for(int i=1;i<=qn;i++)\n    {\n        q[i].exi=0;\n        tmpq[++tn]=q[i],tmpq[tn].L=q[i].L-1,tmpq[tn].w=-1,tmpq[tn].id=i;\n        tmpq[++tn]=q[i],tmpq[tn].L=q[i].R,tmpq[tn].w=1,tmpq[tn].id=i;\n    }\n    sort(tmpq+1,tmpq+tn+1,cmpq);\n    int j=1;\n    for(int i=1;i<=tn;i++)\n    {\n        while(j<=wn&&w[j].L<=tmpq[i].L)s.update(w[j].l,1),++j;\n        q[tmpq[i].id].exi+=tmpq[i].w*s.query(tmpq[i].l,tmpq[i].r);\n    }\n    for(int i=1;i<j;i++)s.update(w[i].l,-1);\n}\nvoid solve2(int wl,int wr,int l,int r,int L,int R,int dep)\n{\n    if(l>r||L>R)return;\n    if(wl==wr)return;\n    int mid=(wl+wr)>>1;int wnl=0,wnr=0,qnl=0,qnr=0;\n    for(int i=l;i<=r;i++)\n        if(c[i].w<=mid)tmpwl[++wnl]=c[i];\n        else tmpwr[++wnr]=c[i];\n    for(int i=L;i<=R;i++)\n        if(q[i].w>>dep&1)ql[++qnl]=q[i];\n        else qr[++qnr]=q[i];\n    calc(tmpwl,wnl,ql,qnl),calc(tmpwr,wnr,qr,qnr);\n    int nl=L,nr=R;\n    for(int i=1;i<=qnl;i++)\n        if(ql[i].exi)q[nl++]=ql[i],ans2[ql[i].id]|=1<<dep;\n        else q[nr--]=ql[i];\n    for(int i=1;i<=qnr;i++)\n        if(qr[i].exi)q[nr--]=qr[i],ans2[qr[i].id]|=1<<dep;\n        else q[nl++]=qr[i];\n    for(int i=1;i<=wnl;i++)c[l+i-1]=tmpwl[i];\n    for(int i=1;i<=wnr;i++)c[l+wnl+i-1]=tmpwr[i];\n    solve2(wl,mid,l,l+wnl-1,L,nr,dep-1),solve2(mid+1,wr,l+wnl,r,nl,R,dep-1);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&w[i].w),w[i].l=i;\n    qn=0,cn=0;int tim=0;\n    for(int i=1,opt=-1;i<=m;i++)\n    {\n        scanf(\"%d\",&opt);\n        if(opt==0)\n        {\n            ++tim;\n            ++cn,scanf(\"%d%d\",&c[cn].l,&c[cn].w),c[cn].L=tim;\n        }\n        else ++qn,scanf(\"%d%d%d%d\",&q[qn].l,&q[qn].r,&q[qn].w,&q[qn].L),q[qn].R=tim,q[qn].L=tim-q[qn].L+1,q[qn].id=qn;\n    }\n    solve1(0,131071,1,n,1,qn,16);\n//    for(int i=1;i<=qn;i++)cout<<q[i].id<<\" \";puts(\"\");\n    solve2(0,131071,1,cn,1,qn,16);\n//    for(int i=1;i<=qn;i++)cout<<ans1[i]<<\" \";puts(\"\");\n//    for(int i=1;i<=qn;i++)cout<<ans2[i]<<\" \";puts(\"\");\n    for(int i=1;i<=qn;i++)printf(\"%d\\n\",max(ans1[i],ans2[i]));\n}\n```",
        "postTime": 1594089845,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4585 \u3010[FJOI2015]\u706b\u661f\u5546\u5e97\u95ee\u9898\u3011"
    },
    {
        "content": "\u6807\u7b7e\uff1a\u7ebf\u6bb5\u6811 + $01-trie$\n\n\u9996\u5148\uff0c\u770b\u5230\u4e0e $x$ \u7684\u5f02\u6216\u503c\u6700\u5927\uff0c\u6211\u4eec\u5e94\u8be5\u7acb\u5373\u60f3\u5230 $01-tire$ \u7684\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u5373\uff1a\n\n- \u6211\u4eec\u628a\u5df2\u6709\u7684\u6570\u5b57\u4ece\u7b2c $30$ \u4f4d\u5230\u7b2c $1$ \u4f4d\u6309\u7167\u4e8c\u8fdb\u5236\uff0c\u4f9d\u6b21\u63d2\u5165\u5230 $tire$ \u6811\u4e2d\u3002\n\n- \u67e5\u8be2\u6570\u5b57 $x$ \u65f6\uff0c\u4ece\u7b2c $30$ \u4f4d\u5230\u7b2c $1$ \u4f4d\u8d2a\u5fc3\uff1a\u8bbe\u5f53\u524d\u4e8c\u8fdb\u5236\u4f4d\u4e3a $y$ \uff0c\u90a3\u4e48\u6570\u5b57 $x$ \u7684\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u4e3a th=x>>y&1\uff0c\u90a3\u4e48\u5982\u679c\u5f53\u524d $trie$ \u6811\u4e0a\u6709 th^1 \u8fd9\u4e2a\u5206\u652f\uff0c\u8bf4\u660e $x$ \u5728 $y$ \u8fd9\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u4e0a\u53ef\u4ee5\u53d6\u5230\u503c\uff0c\u6240\u4ee5 $ans+=(1<<y)$\uff0c\u9012\u5f52\u5230 th^1 \u8fd9\u4e2a\u5206\u652f\uff0c\u5426\u5219\u5c31\u9012\u5f52\u5230 th \u8fd9\u4e2a\u5206\u652f\uff0c\u7ee7\u7eed\u5f80\u4e0b\u627e\u3002\n\n\u73b0\u5728\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u663e\u7136\u7684\u66b4\u529b\uff1a\u6bcf\u4e2a\u5546\u5e97\u7ef4\u62a4\u4e00\u4e2a $01-trie$\uff0c\u67e5\u8be2\u65f6\u4ece $l$ \u679a\u4e3e\u5230 $r$, \u628a\u7ed3\u679c\u53d6 $max$\uff0c\u4fee\u6539\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a $01-trie$ \u7684\u7ed3\u70b9\u4e0a\u8bb0\u5f55\uff1a\u8be5\u7ed3\u70b9\u6700\u665a\u7684\u4fee\u6539\u65f6\u95f4 $dmx$\uff0c\u8fd9\u6837\u67e5\u8be2\u65f6\uff0c\u5982\u679c\u8981\u8fdb\u5165\u7684\u7ed3\u70b9\u7684 $dmx$ \u5c0f\u4e8e\u6700\u65e9\u7684\u5408\u6cd5\u65f6\u9650\uff0c\u90a3\u5c31 $return$ \u5373\u53ef\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\u4e0a\u8ff0\u64cd\u4f5c\uff1a\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u7ed3\u70b9\u7ef4\u62a4\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u6240\u6709\u6570\u7684 $01-trie$ \uff0c\u5b9e\u73b0\u7528\u5230\u4e86\u6807\u8bb0\u6c38\u4e45\u5316\u7684\u6280\u5de7\u3002\n\n\u65f6\u7a7a\u590d\u6742\u5ea6\uff1a$O(n \\;log n \\;log\\;max\\{val\\} )$\u3002\n\n\u4e0b\u9762\u662f\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int MX=4e7,INF=1e9;\nint n,tot;\nstruct Tire_01{\n\tint c[MX][2],mx[MX]; // mx \u8bb0\u5f55\u7684\u662f\u8be5\u7ed3\u70b9\u7684\u6700\u665a\u4fee\u6539\u65f6\u95f4\n\tinline void add(int k,int x,int d){\n\t\tfor(int i=20;i>=0;i--){\n\t\t\tint th=x>>i&1;\n\t\t\tk=c[k][th]?c[k][th]:(c[k][th]=++tot);\n\t\t\tmx[k]=max(mx[k],d);\n\t\t}\n\t}\n\tinline int ask(int k,int x,int d){\n\t\tint r=0;\n\t\tfor(int i=20;i>=0;i--){\n\t\t\tint th=x>>i&1;\n\t\t\tif(c[k][th^1] && mx[c[k][th^1]]>=d)r|=(1<<i),k=c[k][th^1];\n\t\t\telse if(mx[c[k][th]]>=d)k=c[k][th];\n\t\t\telse return r;\n\t\t} return r;\n\t}\n}tr;\nint query(int k,int l,int r,int ql,int qr,int x,int d){\n\tif(ql<=l && qr>=r)return tr.ask(k,x,d);\n\tint mid=(l+r)>>1,ans=0;\n\tif(ql<=mid)ans=max(ans,query(k<<1,l,mid,ql,qr,x,d));\n\tif(qr>mid) ans=max(ans,query(k<<1|1,mid+1,r,ql,qr,x,d));\n\treturn ans;\n}\nvoid change(int k,int l,int r,int x,int y,int d){\n\ttr.add(k,y,d);\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tif(x<=mid)change(k<<1,l,mid,x,y,d);\n\telse change(k<<1|1,mid+1,r,x,y,d);\n}\ninline int read(){\n\tint x=0,f=1; char ch=getchar();\n\twhile(ch<'0' || ch>'9'){x=x*10+ch-'0';ch=getchar();}\n\twhile(ch>='0' && ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint main()\n{\n\tn=read(); int aq=read(); tot=n<<2;\n\tfor(int i=1;i<=n;i++)\n\t\tchange(1,1,n,i,read(),INF);\n\tint cnt=0;\n\twhile(aq--){\n\t\tint op=read(),l=read(),r=read(),x,y;\n\t\tif(!op)++cnt,change(1,1,n,l,r,cnt);\n\t\telse x=read(),y=read(),printf(\"%d\\n\",query(1,1,n,l,r,x,max(0,cnt-y+1)));\n\t}\n\treturn 0;\n}\n```\n\u5c0f\u7ed3\uff1a\u9047\u5230\u9898\u76ee\u8981\u7406\u6e05\u601d\u8def\uff0c\u627e\u5230\u7a81\u7834\u53e3\uff0c\u987a\u85e4\u6478\u74dc\u627e\u5230\u89e3\u51b3\u65b9\u6848\u3002",
        "postTime": 1588954055,
        "uid": 61072,
        "name": "lindongli2004",
        "ccfLevel": 0,
        "title": "[FJOI2015]\u706b\u661f\u5546\u5e97\u95ee\u9898"
    },
    {
        "content": "## \u5206\u6790\uff1a\n\u9996\u5148\uff0c\u4e00\u770b\u5230**\u6c42val xor x\u6700\u5927**\uff0c\u6211\u4eec\u5c31\u5e94\u8be5\u60f3\u5230**\u53ef\u6301\u4e45\u5316Trie**,(\u8be6\u89c1[P4585](https://www.luogu.org/problemnew/show/P4735))\uff0c\u8fd9\u6837\uff0c\u5f53\u6211\u4eec\u8be2\u95ee$L,R$\u4e4b\u95f4\u7684\u6700\u5927\u5f02\u6216\u503c\u65f6\uff0c\u5c31\u76f4\u63a5\u5957\u7528\u53ef\u6301\u4e45\u5316Trie\u5c31\u884c\u4e86\uff0c\u8fd9\u6837\u7a7a\u95f4\u8fd9\u4e00\u7ef4\u5c31\u53ef\u4ee5\u5904\u7406\u4e86\u3002\u5982\u679c\u5168\u662f\u7279\u6b8a\u5546\u54c1\u7684\u8bdd\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\uff0c\u4f46\u8fd8\u6709\u65f6\u95f4\u8fd9\u4e00\u7ef4\u554a\uff0c\u600e\u4e48\u529e\uff1f\uff08~~\u628a\u51fa\u9898\u4eba\u540a\u8d77\u6765\u6253\u4e00\u987f\uff0c\u8ba9\u4ed6\u6539\u6570\u636e~~\uff09\n\n#### \u65f6\u95f4\u600e\u4e48\u529e\uff1f\n\n\u9996\u5148\uff0c\u6bcf\u4e2a\u706b\u661f\u4eba\u80fd\u591f\u4e70\u7684\u5546\u54c1\u7684\u8fdb\u8d27\u65f6\u95f4\u5e94\u8be5\u662f\u5728\u4e00\u6bb5\u65f6\u95f4**\u533a\u95f4**\u5185\uff08\u5bf9\u666e\u901a\u5546\u54c1\u800c\u8a00\uff09\uff0c\u90a3\u4e48\u53ea\u6709\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u5546\u54c1\u624d\u80fd\u88ab\u8be5\u706b\u661f\u4eba\u4e70\uff0c\u5373\u5bf9\u8be5\u6b21\u8be2\u95ee\u505a\u8d21\u732e\uff0c\u800c\u5982\u679c\u6211\u4eec\u628a\u5546\u54c1\u770b\u6210\u4e00\u4e2a**\u70b9**\uff0c\u90a3\u4e48\u67d0\u6b21\u8be2\u95ee\u5c31\u662f\u5bf9\u4e00\u6bb5**\u533a\u95f4**\u4e0a\u6240\u6709\u7684\u70b9\u505a\u4e00\u6b21\u8be2\u95ee\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff1a**\u8fd9\u4e2a\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4**\n\n\u5982\u679c\u6211\u4eec\u5728\u7ebf\u5904\u7406\u7684\u8bdd\uff0c\u5c31\u4f1a\u91cd\u590d\u8fd0\u7b97\u5f88\u591a\u6b21\uff0c\u5c31\u53ef\u80fd\u4f1a$TLE$,~~\u5176\u5b9e\u6211\u4e5f\u6ca1\u8bd5\u8fc7~~\uff0c\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u8981\u5f15\u51fa\u8fd9\u9898\u6b63\u89e3\u4e86\uff1a**\u7ebf\u6bb5\u6811\u5206\u6cbb**\n\n\u6240\u8c13**\u7ebf\u6bb5\u6811\u5206\u6cbb**\uff0c\u5c31\u662f\u628a\u67d0\u4e00\u6bb5\u533a\u95f4\u7528\u7ebf\u6bb5\u6811\u7684\u65b9\u6cd5\u5206\u6210\u5f88\u591a\u6bb5\u5b50\u533a\u95f4\uff0c\u518d\u628a\u4fee\u6539\u548c\u8be2\u95ee\u4e00\u8d77\u653e\u5728\u7ebf\u6bb5\u6811\u4e0a\uff0c\u7136\u540e\u518d\u7edf\u4e00\u4e00\u8d77\u5904\u7406\u4e00\u904d\uff0c\u8fd9\u6837\u505a\u7684\u597d\u5904\u5728\u4e8e\uff0c\u53ef\u4ee5\u7701\u6389\u8bb8\u591a\u91cd\u590d\u8ba1\u7b97\uff0c\u63d0\u9ad8\u6548\u7387\u3002\n\n\u597d\u4e86\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u9898\u800c\u8a00\uff0c\u53ea\u8981\u7528\u7ebf\u6bb5\u6811\u7684\u65b9\u6cd5\u5904\u7406\u533a\u95f4\u8be2\u95ee\u548c\u5355\u70b9\u4fee\u6539\u5c31\u884c\u4e86\u3002\u4e5f\u5c31\u662f\u5bf9\u4e8e\u5f53\u524d\u533a\u95f4$[L,R]$\uff0c\u5148\u628a\u5b8c\u5168\u5305\u542b\u5b83\u7684\u6240\u6709\u8be2\u95ee\u7528\u8fd9\u4e00\u533a\u95f4\u5185\u7684**\u70b9**(\u5546\u54c1)\u66f4\u65b0,\u518d\u628a\u5728\u5de6/\u53f3\u533a\u95f4\u7684\u70b9\u548c\u4e0e\u5de6/\u53f3\u533a\u95f4\u6709\u4ea4\u96c6\u4e14\u6ca1\u6709\u7528\u8be5\u533a\u95f4\u66f4\u65b0\u8fc7\u7684\u7528\u7684\u8be2\u95ee\u4e00\u8d77\u5f80\u4e0b\u9012\u5f52\u5904\u7406\uff0c\u76f4\u5230\u6ca1\u6709\u8be2\u95ee\u4f20\u9012\u4e0b\u6765\u4e3a\u6b62\u3002  \n\u5177\u4f53\u770b\u4ee3\u7801\u5427\n\n## Code\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<string>\n#include<iostream>\n#include<queue>\n#include<iomanip>\n#include<algorithm>\nusing namespace std;\nconst int N=100010;\n\nint n,m,day,ans[N];\nstruct node\n{\n\tint time,val,pos;\n}a[N*2];\nint totm;\nstruct que\n{\n\tint l,r,tl,tr,x;\n}q[N*2];\nint totq,id[N],cnt;\nint ch[N<<5][2],root[N],sum[N<<5],totp;\nnode tmpl[N*2],tmpr[N*2];\n\nbool cmp(const node &a,const node &b)\n{\n\treturn a.pos<b.pos;\n}\n\nvoid add(int x,int x1,int val)//\u53ef\u6301\u4e45\u5316trie\n{\n\tint i,j;\n\tsum[x]=sum[x1]+1;\n\tfor(i=16;i>=0;i--)\n\t{\n\t\tbool f=(val&(1<<i));\n\t\tch[x][!f]=ch[x1][!f];\n\t\tx1=ch[x1][f];\n\t\tx=ch[x][f]=++cnt;\n\t\tsum[x]=sum[x1]+1;\n\t}\n}\n\nint quer(int x,int x1,int val)//\u53ef\u6301\u4e45\u5316trie\n{\n\tint ans=0,i;\n\tfor(i=16;i>=0;i--)\n\t{\n\t\tans<<=1;\n\t\tbool f=(val&(1<<i));\n\t\tif(ch[x1][!f]>ch[x][!f]) ans++;\n\t\telse f=!f;\n\t\tx=ch[x][!f];x1=ch[x1][!f];\n\t}\n\treturn ans;\n}\n\nint find(int l,int r,int x)\n{\n\tint ml=l;\n\tif(a[l].pos>x) return 0;\n\twhile(l<r)\n\t{\n\t\tint mid=l+r>>1;\n\t\tif(a[mid+1].pos<=x) l=mid+1;\n\t\telse r=mid;\n\t}\n\treturn l-ml+1;\n}\n\nvoid work(int ml,int mr,int qr)//\u7528\u53ef\u6301\u4e45\u5316trie\u66f4\u65b0\u8be2\u95ee\n{\n\ttotp=0;cnt=0;\n\tint i,j,k;\n\tfor(i=ml;i<=mr;i++)\n\t{\n\t\ttotp++;cnt++;\n\t\troot[totp]=cnt;\n\t\tadd(root[totp],root[totp-1],a[i].val);\n\t}\n\tfor(i=1;i<=qr;i++)\n\t{\n\t\tint l=find(ml,mr,q[id[i]].l-1);\n\t\tint r=find(ml,mr,q[id[i]].r);\n\t\tans[id[i]]=max(ans[id[i]],quer(root[l],root[r],q[id[i]].x));\n\t}\n}\n\nvoid slove(int ml,int mr,int tl,int tr,int tp)\n{\n\tif(ml>mr||tp==0) return;\n\tint tot=0,i,j;\n\tfor(i=1;i<=tp;i++)\n\t\tif(q[id[i]].tl<=tl&&tr<=q[id[i]].tr)\n\t\t\tswap(id[i],id[++tot]);\n\twork(ml,mr,tot);\n\tif(tl==tr) return;\n\tint mid=tl+tr>>1,lt=0,rt=0;\n\tfor(i=ml;i<=mr;i++)\n\t{\n\t\tif(a[i].time<=mid) tmpl[++lt]=a[i];\n\t\telse tmpr[++rt]=a[i];\n\t}\n\tfor(i=1;i<=lt;i++) a[ml+i-1]=tmpl[i];\n\tfor(i=1;i<=rt;i++) a[ml+lt+i-1]=tmpr[i];\n\ttot=0;\n\tfor(i=1;i<=tp;i++) \n\t{\n\t\tif(q[id[i]].tl<=tl&&tr<=q[id[i]].tr) continue;\n\t\tif(q[id[i]].tl<=mid) swap(id[i],id[++tot]);\n\t}\n\tslove(ml,ml+lt-1,tl,mid,tot);\n\ttot=0;\n\tfor(i=1;i<=tp;i++) \n\t{\n\t\tif(q[id[i]].tl<=tl&&tr<=q[id[i]].tr) continue;\n\t\tif(q[id[i]].tr>mid) swap(id[i],id[++tot]);\n\t}\n\tslove(ml+lt,mr,mid+1,tr,tot);\n}\n\nint main()\n{\n\tint i,j,op,k,d;\n\ttotq=day=0;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i].val);\n\t\ta[i].pos=i;a[i].time=0;\n\t}\n\tint spt;\n\tspt=totm=n;\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d\",&op);\n\t\tif(op==0)\n\t\t{\n\t\t\tday++;a[++totm].time=day;\n\t\t\tscanf(\"%d%d\",&a[totm].pos,&a[totm].val);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttotq++;\n\t\t\tid[totq]=totq;\n\t\t\tscanf(\"%d%d%d%d\",&q[totq].l,&q[totq].r,&q[totq].x,&d);\n\t\t\tq[totq].tr=day;q[totq].tl=max(day-d+1,1);\n\t\t}\n\t}\n\tsort(a+spt+1,a+totm+1,cmp);\n\twork(1,spt,totq);//\u7279\u6b8a\u5546\u54c1\u5355\u72ec\u5904\u7406\n\tslove(spt+1,totm,1,day,totq);//\u7ebf\u6bb5\u6811\u5206\u6cbb\n\tfor(i=1;i<=totq;i++) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1555554104,
        "uid": 147391,
        "name": "lyh0313",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4585 \u3010[FJOI2015]\u706b\u661f\u5546\u5e97\u95ee\u9898\u3011"
    },
    {
        "content": "[[FJOI2015]\u706b\u661f\u5546\u5e97\u95ee\u9898](https://www.luogu.com.cn/problem/P4585)\n\n\u63d0\u4f9b\u4e00\u4e2a\u7ebf\u6bb5\u6811\u5957 $\\mathtt{01\\ Trie}$ \u7684\u505a\u6cd5\u3002\n\n\u533a\u95f4 $l \\sim r$ \u7684\u9650\u5236\u5f88\u597d\u89e3\u51b3\uff0c\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u5f00\u4e00\u68f5 $\\mathtt{01\\ Trie}$ \uff0c\u67e5\u8be2\u7684\u65f6\u5019\u5c06 $l \\sim r$ \u5212\u5206\u6210\u82e5\u5e72\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\u4e0a\u7684\u533a\u95f4\uff0c\u7136\u540e\u5728\u8fd9\u4e9b\u8282\u70b9\u5bf9\u5e94\u7684 $\\mathtt{01\\ Trie}$ \u4e0a\u67e5\u8be2\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u5355\u70b9\u63d2\u5165\u64cd\u4f5c\uff0c\u7531\u4e8e\u6bcf\u6b21\u4fee\u6539\u90fd\u4f1a\u5728\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u4e0a\u4ea7\u751f\u4e00\u6761\u4ece\u4e0a\u5230\u4e0b\u7684\u8def\u5f84\uff0c\u5c06\u8981\u63d2\u5165\u7684\u503c\u76f4\u63a5\u63d2\u5165\u8def\u5f84\u4e0a\u6240\u7ecf\u8fc7\u7684\u8282\u70b9\u5bf9\u5e94\u7684 $\\mathtt{01\\ Trie}$ \u3002\n\n\u4f46\u662f\u9898\u76ee\u8fd8\u6709\u4e00\u4e2a\u65f6\u95f4\u9650\u5236\uff0c\u53ea\u80fd\u8d2d\u4e70\u4e2a\u56fa\u5b9a\u65f6\u95f4\u6bb5\u5185\u7684\u5546\u54c1\uff0c\u4e0d\u96be\u60f3\u5230\u4f7f\u7528\u53ef\u6301\u4e45\u5316\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u662f\u90a3\u4e1c\u897f\u8c03\u8d77\u6765\u592a\u9ebb\u70e6\u4e86\uff0c\u4e8e\u662f\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u8fd9\u79cd\u65b9\u6cd5\uff1a\n\n\u9898\u76ee\u8981\u6c42\u7684\u662f\u4e00\u6bb5\u65f6\u95f4\u7684\u540e\u7f00\uff0c\u6240\u4ee5\u76f4\u63a5\u5728\u666e\u901a $\\mathtt{01\\ Trie}$ \u4e0a\u7684\u8282\u70b9\u6253\u6807\u8bb0\uff0c\u6807\u8bb0\u8fd9\u4e2a\u8282\u70b9\u6700\u540e\u88ab\u66f4\u65b0\u7684\u65f6\u95f4\u662f\u591a\u5c11\uff0c\u6bcf\u6b21\u67e5\u8be2\u7684\u65f6\u5019\u76f4\u63a5\u8df3\u8fc7\u4e0d\u5728\u7ed9\u5b9a\u65f6\u95f4\u8303\u56f4\u5185\u7684\u8282\u70b9\uff0c\u800c\u5bf9\u4e8e\u7279\u6b8a\u5546\u54c1\uff0c\u8bbe\u4ed6\u4eec\u88ab\u66f4\u65b0\u7684\u65f6\u95f4\u4e3a $\\inf$ \uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u6b21\u67e5\u8be2\u65f6\u4e00\u5b9a\u80fd\u4e0e\u7279\u6b8a\u5546\u54c1\u8fdb\u884c\u6700\u5927\u5f02\u6216\u5339\u914d\u3002\n\n\u7531\u4e8e\u503c\u57df\u4e0e $n,m$ \u540c\u9636\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal{O(n\\log ^2 n)}$ \u3002\n\n\u65e2\u7136\u4f60\u80fd\u627e\u5230\u8fd9\u9898\uff0c\u6211\u76f8\u4fe1\u4f60\u80fd\u77ac\u95f4\u505a\u51fa\u6765\u7684\u3002\n\n$Code:$\n\n```cpp\n#include<bits/stdc++.h>\ntypedef long long LL;\ntypedef long double LD;\nusing namespace std;\nconst int N=100010,M=1000010,INF=0x3f3f3f3f;\ninline int max(int x,int y){return x>y?x:y;}\ninline int min(int x,int y){return x<y?x:y;}\ninline void swap(int &x,int &y){x^=y^=x^=y;}\nint n,m,d,cnt,a[N];\nint tr[N<<9][2],tag[N<<9][2],root[N<<2];\nstruct SegmentTree{\n\tint l,r;\n\t#define l(x) tree[x].l\n\t#define r(x) tree[x].r\n}tree[N<<2];\nvoid insert(int p,int val,int t){\n\tfor(int i=1<<18;i;i>>=1){\n\t\tbool ch=val&i;\n\t\tif(!tr[p][ch])tr[p][ch]=++cnt;\n\t\ttag[p][ch]=max(t,tag[p][ch]);\n\t\tp=tr[p][ch];\n\t}\n}\nint ask(int p,int val,int t){\n\tint res=0;\n\tfor(int i=1<<18;i;i>>=1){\n\t\tbool ch=val&i;\n\t\tif(tr[p][ch^1]&&tag[p][ch^1]>=t)res|=i,p=tr[p][ch^1];\n\t\telse if(tr[p][ch]&&tag[p][ch]>=t)p=tr[p][ch];\n\t}\n\treturn res;\n}\nvoid build(int x,int l,int r){\n\tl(x)=l,r(x)=r;\n\troot[x]=++cnt;\n\tfor(int i=l;i<=r;i++)\n\t\tinsert(root[x],a[i],INF);\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tbuild(x<<1,l,mid);\n\tbuild(x<<1|1,mid+1,r);\n}\nvoid change(int x,int pos,int val,int t){\n\tint l=l(x),r=r(x);\n\tinsert(root[x],val,t);\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tif(pos<=mid)change(x<<1,pos,val,t);\n\telse change(x<<1|1,pos,val,t);\n}\nint query(int x,int L,int R,int val,int t){\n\tint l=l(x),r=r(x);\n\tif(L<=l&&r<=R)return ask(root[x],val,t);\n\tint mid=(l+r)>>1,res=0;\n\tif(L<=mid)res=max(res,query(x<<1,L,R,val,t));\n\tif(R>mid)res=max(res,query(x<<1|1,L,R,val,t));\n\treturn res;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tbuild(1,1,n);\n\twhile(m--){\n\t\tint op;\n\t\tscanf(\"%d\",&op);\n\t\tif(!op){\n\t\t\tint pos,val;d++;\n\t\t\tscanf(\"%d%d\",&pos,&val);\n\t\t\tchange(1,pos,val,d);\n\t\t}\n\t\telse{\n\t\t\tint l,r,x,t;\n\t\t\tscanf(\"%d%d%d%d\",&l,&r,&x,&t);\n\t\t\tprintf(\"%d\\n\",query(1,l,r,x,d-t+1));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1615553050,
        "uid": 137242,
        "name": "Dia\u043esi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4585 \u3010[FJOI2015]\u706b\u661f\u5546\u5e97\u95ee\u9898\u3011"
    },
    {
        "content": "\u4e00\u4e9b\u95f2\u8bdd\uff1a\n\n\u6700\u8fd1\u88abdalao\u4eec\u8650\u5f97\u5bf9NOIP\u7684\u96be\u5ea6\u4ea7\u751f\u4e86\u6000\u7591\u3002\u3002\u3002\n\n------------\n\n\u6b65\u5165\u6b63\u9898\u5427\u3002\n\n\u5f88\u663e\u7136\u7684xxx\u5957\u53ef\u6301\u4e45\u5316Trie\uff08xxx\u5305\u62ec\u5f88\u591a\u4e1c\u897f\u5c31\u4e0d\u5217\u4e3e\u4e86\uff09\n\n\u6ca1\u4ec0\u4e48\u7279\u522b\u7684\u4e1c\u897f\u7684\u9898\u6211\u56db\u4e0d\u8d39\u5199\u9898\u89e3\u7684\uff0c\u4f46\u6bd5\u7adf\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u9053\u7ebf\u6bb5\u6811\u5206\u6cbb\u3002\n\n\u901a\u8fc7\u4e00\u5927\u5806\u5e9f\u8bdd\u6211\u4eec\u53d1\u73b0\u8fd9\u7bc7\u9898\u89e3\u662f\u7ebf\u6bb5\u6811\u5206\u6cbb\u5957\u53ef\u6301\u4e45\u5316trie\u3002\n\n\u53ef\u6301\u4e45\u5316Trie\u6700\u5f00\u59cb\u4ee5\u4e3a\u5f88\u96be\uff0c\u770b\u4e86\uff08orz yyb\uff09yyb\u7684\u4ee3\u7801\u540e\u79d2\u61c2\uff0c\u628atrie\u5f53\u505a\u7ebf\u6bb5\u6811\uff0c\u90a3\u4e48\u53ef\u6301\u4e45\u5316Trie\u5c31\u662f\u4e3b\u5e2d\u6811\u3002\uff08\u4e0d\u4f1a\u7684\u51fa\u95e8\u53f3\u8f6c\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u548ctrie\uff09\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u5206\u6cbb\uff0c\u6839\u636ecdq\u7684\u7ecf\u9a8c\uff08\u4e0d\u4f1acdq\uff1f\uff1f\uff1f\u53bb\u95ee\u5ea6\u5a18\uff09\uff0c\u6211\u4eec\u589e\u52a0\u65f6\u95f4\u8fd9\u4e00\u7ef4\uff08\u8fd9\u9053\u9898\u6709\u3002\u3002\u3002\uff09\u6309\u65f6\u95f4\u5206\u6cbb\u3002\u6bcf\u4e00\u4e2a\u4fee\u6539\u64cd\u4f5c\u5f71\u54cd\u7684\u662f\u5b83\u540e\u9762\u7684\u4e00\u6bb5\u533a\u95f4\uff0c\u6240\u4ee5\u53ef\u4ee5\u7ebf\u6bb5\u6811\u3002\u628a\u8be2\u95ee\u4e22\u5165\u7ebf\u6bb5\u6811\uff0c\u62c6\u6210\u4e00\u6bb5\u6bb5\u533a\u95f4\uff0c\u7528vector\u5b58\uff0c\u7136\u540e\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff0c\u5177\u4f53\u7684\u64cd\u4f5c\u548c\u6574\u4f53\u4e8c\u5206\u53c8\u6709\u70b9\u50cf\uff08\u5206\u6cbb\u4ec0\u4e48\u7684\u6700\u8ba8\u538c\u4e86~(>_<)~)\n\n\u6bcf\u5c42\u7ebf\u6bb5\u6811\u5c31calc\u7b97\u4e00\u4e0b\u5c31\u597d\u4e86\uff0ccalc\u91cc\u5957\u53ef\u6301\u4e45\u5316Trie\uff0c\u628avector\u91cc\u7684\u8be2\u95ee\u90fd\u8ba1\u7b97\u4e00\u904d\uff0cans\u53d6max\uff0c\u8fd8ans\u521d\u503c\u4e3aval\u7528\u90a3\u4e9b\u603b\u662f\u5b58\u5728\u7684n\u4e2a\u5546\u54c1\u7b97\u51fa\u6765\u7684\u6700\u5927\u503c\u3002\n\n\u7136\u540e\u5c31\u6109\u5feb\u7684~~1A~~\u5207\u6389\u4e86\n\n\u6ca1\u6709\u6ce8\u91ca\u7684\u4ee3\u7801\n\n```cpp\n#include<vector>\n#include<algorithm>\n#include<cstdio>\n#include<cctype>\n#define gt getchar()\ninline int in()\n{\n    int k=0;char ch=gt;\n    while(!isdigit(ch))ch=gt;\n    while(isdigit(ch))k=k*10+ch-'0',ch=gt;\n    return k;\n}\nconst int N=1e5+5;\nstruct Trie\n{\n    int siz[N*20],ch[N*20][2],cnt;\n    inline void insert(int &u,int fr,int x,int now)\n        {\n            siz[u=++cnt]=siz[fr]+1;\n            if(now==-1)return;\n            bool c=(1<<now)&x;\n            ch[u][c^1]=ch[fr][c^1];\n            insert(ch[u][c],ch[fr][c],x,now-1);\n        }\n    inline int query(int L,int R,int x,int now)\n        {\n            if(now==-1)return 0;\n            bool c=(1<<now)&x;\n            if(siz[ch[R][c^1]]-siz[ch[L][c^1]])\n                return query(ch[L][c^1],ch[R][c^1],x,now-1)+(1<<now);\n            else\n                return query(ch[L][c]  ,ch[R][c]  ,x,now-1);\n        }\n}cx;\nstruct peop{int L,R,x,tl,tr;}req[N];\nstruct shop{int s,v,t;}q[N<<2],q1[N<<2],q2[N<<2];\ninline bool cmp(const shop &a,const shop &b){return a.s<b.s;}\nstd::vector<int>seg[N<<2];\n#define lc k<<1\n#define rc k<<1|1\nvoid update(int l,int r,int L,int R,int k,int res)\n{\n    if(L>R)return;\n    if(L<=l&&R>=r){seg[k].push_back(res);return;}\n    int mid=l+r>>1;\n    if(mid>=L) update(l,mid,L,R,lc,res);\n    if(mid<R)update(mid+1,r,L,R,rc,res);\n}\nint rt[N],cnt,ans[N],tot,st[N],top;\n#define low(s) std::upper_bound(st+1,st+top+1,s)-st-1\nvoid calc(int k,int L,int R)\n{\n    top=cx.cnt=0;\n    for(int i=L;i<=R;++i)\n    {\n        st[++top]=q[i].s;\n        cx.insert(rt[top],rt[top-1],q[i].v,17);\n    }\n    for(int i=0,sz=seg[k].size();i<sz;++i)\n    {\n        int u=seg[k][i],l=low(req[u].L-1),r=low(req[u].R);\n        ans[u]=std::max(ans[u],cx.query(rt[r],rt[l],req[u].x,17));\n    }\n}\nvoid div(int k,int l,int r,int L,int R)\n{\n    if(L>R)return;\n    calc(k,L,R);\n    if(l==r)return;\n    int mid=l+r>>1,t1=0,t2=0;\n    for(int i=L;i<=R;++i)\n        if(q[i].t<=mid)\n            q1[++t1]=q[i];\n        else\n            q2[++t2]=q[i];\n    for(int i=1;i<=t1;++i)q[L+i-1]=q1[i];\n    for(int i=1;i<=t2;++i)q[L+t1+i-1]=q2[i];\n    div(lc,l,mid,L,L+t1-1);\n    div(rc,mid+1,r,L+t1,R);\n}\nint main()\n{\n    int n=in(),m=in();\n    for(int i=1;i<=n;++i)cx.insert(rt[i],rt[i-1],in(),17);\n    int opt,a,b,c,d;\n    for(int i=1;i<=m;++i)\n    {\n        opt=in();\n        if(opt)\n        {\n            a=in(),b=in(),c=in(),d=in();\n            req[++tot]=(peop){a,b,c,std::max(1,cnt-d+1),cnt};\n            ans[tot]=cx.query(rt[a-1],rt[b],c,17);\n        }\n        else\n        {\n            a=in(),b=in();++cnt;\n            q[cnt]=(shop){a,b,cnt};\n        }\n    }\n    for(int i=1;i<=tot;++i)update(1,cnt,req[i].tl,req[i].tr,1,i);\n    std::sort(q+1,q+cnt+1,cmp);\n    div(1,1,cnt,1,cnt);\n    for(int i=1;i<=tot;++i)printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n\n\n```\n\n\u6c42\u5927\u4f6c\u63a8\u8350\u7ebf\u6bb5\u6811\u5206\u6cbb\u7684\u9898O(\u2229_\u2229)O\u8c22\u8c22\u3002",
        "postTime": 1532787696,
        "uid": 70788,
        "name": "Cgod",
        "ccfLevel": 0,
        "title": "\u7ebf\u6bb5\u6811\u5206\u6cbb\u9898"
    },
    {
        "content": "### [\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P4585)\n\n\u597d\u50cf\u5f88\u591a\u9898\u89e3\u90fd\u662f\u7ebf\u6bb5\u6811\u5206\u6cbb\uff0c\u90a3\u6211\u5c31\u6765\u5f18\u626c\u4e00\u4e0b\u7ebf\u6bb5\u6811\u5927\u529b\u5957 $\\text{01-Trie}$\u3002~~\u5176\u5b9e\u662f\u6211\u4e0d\u4f1a\u7ebf\u6bb5\u6811\u5206\u6cbb~~\n\n## \u5199\u5728\u524d\u9762\n\n\u4ee5\u4e0b\u5185\u5bb9\u662f\u5bf9~~\u6bd2\u7624~~\u9898\u9762\u7684\u4e00\u4e9b\u89e3\u91ca\uff0c\u8ba8\u8bba\u533a\u5df2\u7ecf\u6709\u5927\u4f6c\u63d0\u9192\u4e86\uff0c\u4f46\u8fd8\u662f\u653e\u5728\u8fd9\u91cc~~\u9020\u798f\u7fa4\u4f17~~\u6bd4\u8f83\u597d\u3002\n\n### \u9898\u610f  \n\n\u6c42\u51fa\u5728\u6807\u53f7\u548c\u65f6\u95f4\u7684\u4e24\u7ef4\u9650\u5236\u4e0b\u7684 $x\\operatorname{xor} \\text{(a big bunch of numbers)}$ \u7684\u6700\u5927\u503c\u3002\n\n### \u8f93\u5165\n\n\u6839\u636e\u6837\u4f8b\u63a8\u6d4b\uff0c\u5b9e\u9645\u4e0a**\u6bcf\u5929\u53ea\u4f1a\u6709\u4e00\u4e2a $0$ \u64cd\u4f5c**\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u6b21\u9047\u5230 $0$ \u64cd\u4f5c\u5c31\u4ee3\u8868\u65b0\u7684\u4e00\u5929\u5f00\u59cb\uff0c\u800c $0$ \u64cd\u4f5c\u540e\u9762\u8ddf\u7740\u7684**\u6240\u6709 $1$ \u64cd\u4f5c\u90fd\u5c5e\u4e8e\u8fd9\u4e00\u5929**\u3002\n\n\u5728\u9898\u610f\u8fd9\u91cc\u5361\u4e86\u597d\u4e45\uff0c\u770b\u4e86\u8ba8\u8bba\u533a\u91cc\u7684\u63d0\u9192\u4e4b\u540e\u4e00\u904d\u8fc7\u4e86\uff08\n\n~~\u611f\u89c9\u6bd2\u7624\u9898\u9762\u5b8c\u5168\u6ca1\u6709\u63d0\u5230\uff0c\u5dee\u8bc4~~\n\n## \u89e3\u9898\u601d\u8def\n\n\u65f6\u95f4\u548c\u4e0b\u6807\u4f46\u51e1\u53ea\u6709\u5176\u4e2d\u4e00\u7ef4\uff0c\u8fd9\u9898\u90fd\u662f\u53ef\u6301\u4e45\u5316 $\\text{01-Trie}$ \u7684\u6a21\u677f\u9898\u3002\n\n\u4f46\u73b0\u5728\u540c\u65f6\u6709\u4e24\u7ef4\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u5957 $\\text{01-Trie}$\u3002\u7ebf\u6bb5\u6811\u5904\u7406\u4e0b\u6807\uff0c$\\text{01-Trie}$ \u5904\u7406\u65f6\u95f4\u3002\n\n\u5177\u4f53\u5730\uff0c\u5728\u67e5\u8be2\u65f6\u5728\u7ebf\u6bb5\u6811\u91cc\u627e\u5230\u6240\u6709\u76f8\u5173\u533a\u95f4\uff0c\u63a5\u7740\u5728\u8fd9\u4e9b\u533a\u95f4\u5bf9\u5e94\u7684 $\\text{Trie}$ \u91cc\u627e $\\operatorname{xor} x$ \u7684\u6700\u5927\u503c\u3002\u6bcf\u4e2a $\\text{Trie}$ \u8282\u70b9\u8981\u8bb0\u5f55\u4e00\u4e2a $maxt$\uff0c\u8868\u793a\u8be5\u8282\u70b9\u201c\u7ba1\u8f96\u201d\u7684\u6570\u7684\u52a0\u5165\u65f6\u95f4\u7684\u6700\u5927\u503c\u3002\u4e00\u4e2a\u8282\u70b9\u5fc5\u987b\u8981\u6ee1\u8db3 $maxt\\ge now-d+1$ \u624d\u53ef\u4ee5\u8d70\u3002\n\n\u6700\u540e\u6240\u6709\u76f8\u5173\u533a\u95f4\u7684\u7b54\u6848\u53d6 $\\max$ \u5373\u53ef\u3002\u9898\u89e3\u533a\u91cc\u6709\u7ebf\u6bb5\u6811\u5957\u53ef\u6301\u4e45\u5316 $\\text{01-Trie}$ \u7684\uff0c\u4f46\u662f\u672c\u9898\u7684\u8be2\u95ee\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u6392\u5217\uff0c\u6240\u4ee5\u4e0d\u7528\u53ef\u6301\u4e45\u5316\u4e5f\u53ef\u4ee5\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m;\ninline int read()\n{\n\tchar ch;int x=0;\n\tfor(ch=getchar();ch<'0' || ch>'9';ch=getchar());\n\tfor(;ch>='0' && ch<='9';x=x*10+ch-'0',ch=getchar());\n\treturn x;\n}\nstruct TrieNode{ int maxt,ch[2]; }tr[40000005];\nint cnt;\nvoid insert(int x,int t,int &i,int dep=17) //\u5185\u5c42Trie\n{\n\tif(!i)\ti=++cnt;\n\ttr[i].maxt=max(tr[i].maxt,t);\n\tif(!dep)\treturn;\n\tinsert(x,t,tr[i].ch[(x>>dep-1)&1],dep-1);\n}\nint query(int x,int t,int i) //\u5185\u5c42\u67e5\u8be2\n{\n\tint dep=17,res=0;\n\twhile(dep)\n\t{\n\t\tbool fl=!((x>>dep-1)&1);\n\t\tif(tr[i].ch[fl] && tr[tr[i].ch[fl]].maxt>=t)\n\t\t\ti=tr[i].ch[fl],res=res<<1|1;\n\t\telse\n\t\t\ti=tr[i].ch[!fl],res=res<<1;\n\t\tdep--;\n\t}\n\treturn res;\n}\nstruct TreeNode\n{\n\tint val;\n\tTreeNode *lc,*rc;\n\tTreeNode(): val(0)\n\t\t{ lc=rc=nullptr; }\n}*rt;\ntypedef TreeNode *pNode;\nvoid build(int l,int r,pNode &i=rt)\n{\n\ti=new TreeNode;\n\tif(l!=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tbuild(l,mid,i->lc),build(mid+1,r,i->rc);\n\t}\n}\nvoid modify(int p,int t,int x,int l=1,int r=n,pNode i=rt) //\u5916\u5c42\u7ebf\u6bb5\u6811\n{\n\tinsert(x,t,i->val);\n\tif(l!=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(mid>=p)\tmodify(p,t,x,l,mid,i->lc);\n\t\telse\tmodify(p,t,x,mid+1,r,i->rc);\n\t}\n}\nint query(int lq,int rq,int x,int t,int l=1,int r=n,pNode i=rt) //\u5916\u5c42\u67e5\u8be2\n{\n\tif(l>=lq && r<=rq)\n\t\treturn query(x,t,i->val);\n\tint mid=(l+r)>>1,lans=0,rans=0;\n\tif(mid>=lq)\tlans=query(lq,rq,x,t,l,mid,i->lc);\n\tif(mid<rq)\trans=query(lq,rq,x,t,mid+1,r,i->rc);\n\treturn max(lans,rans);\n}\nint main()\n{\n\tn=read(),m=read();\n\tbuild(1,n);\n\tfor(int i=1;i<=n;i++)\tmodify(i,m+1,read());\n\tint i=0;\n\twhile(m--)\n\t{\n\t\tint opt=read();\n\t\tif(opt==0)\n\t\t{\n\t\t\tint s=read(),v=read();\n\t\t\tmodify(s,++i,v);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint l=read(),r=read(),x=read(),d=read();\n\t\t\tprintf(\"%d\\n\",query(l,r,x,i-d+1));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1628996467,
        "uid": 279800,
        "name": "ExplodingKonjac",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011P4585 \u706b\u661f\u5546\u5e97\u95ee\u9898"
    },
    {
        "content": "#### [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://juju527.github.io/post/ti-jie-p4585-fjoi2015huo-xing-shang-dian-wen-ti/)\n\n### \u524d\u7f6e\u77e5\u8bc6\n1. \u7ebf\u6bb5\u6811\n\n2. \u53ef\u6301\u4e45\u531601trie\n\n---\n\n>\u7b2c\u4e00\u9053\u7ebf\u6bb5\u6811\u5206\u6cbb\u9898\n\n>\u7ebf\u6bb5\u6811\u5206\u6cbb\u662f\u4e00\u79cd\u6309\u65f6\u95f4\u5206\u6cbb\u7684\u65b9\u6cd5\n\n>\u7531\u4e8e\u5176\u7ed3\u6784\u7c7b\u4f3c\u7ebf\u6bb5\u6811\uff0c\u88ab\u79f0\u4e3a\u7ebf\u6bb5\u6811\u5206\u6cbb\n\n---\n\n### \u9898\u610f\u5751\u70b9\n\u4e0b\u9762\u8fd9\u4e2a\u8ba8\u8bba\u91cc\u53d9\u8ff0\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/discuss/show/87100)\n\n---\n### \u6838\u5fc3\u601d\u60f3\n\n\u5c06\u8be2\u95ee\u4e0e\u4fee\u6539\u79bb\u7ebf\n\n\u53ef\u80fd\u6709\u8fd9\u51e0\u79cd\u60c5\u51b5\n\n---\n\n1.\u5355\u70b9\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\n\t\n\u8fd9\u4e2a\u5b8c\u5168\u4e0d\u9700\u8981\u7ebf\u6bb5\u6811\u5206\u6cbb\u5427\n\n2.\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff08\u4f8b\u5982\u672c\u9898\uff09\n    \n\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e00\u4e2a\u4fee\u6539\u8bb0\u5f55\u5728\u5305\u542b\u8be5\u70b9\u7684\u7ebf\u6bb5\u6811\u4e0a\u7684$log$\u4e2a\u8282\u70b9\u4e0a\n    \n\u628a\u67e5\u8be2\u5206\u89e3\u6210$log$\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u7684\u533a\u95f4\u8bb0\u5f55\u5728\u8fd9$log$\u4e2a\u8282\u70b9\u4e0a\n    \n\u7531\u4e8e\u67e5\u8be2\u7684\u533a\u95f4\u5305\u62ec\u4e86\u6211\u4eec\u8bb0\u5f55\u4e0b\u7684\u6bcf\u4e00\u4e2a\u5c0f\u533a\u95f4\n    \n\u800c\u5728\u6bcf\u4e00\u4e2a\u7ebf\u6bb5\u6811\u533a\u95f4\u8bb0\u5f55\u4e0b\u7684\u4fee\u6539\u90fd\u4f1a\u5f71\u54cd\u8fd9\u4e2a\u533a\u95f4\n    \n\u6b63\u786e\u6027\u663e\u7136\n    \n\u90a3\u4e48\u6211\u4eec\u904d\u5386\u4e00\u8fb9\u6574\u68f5\u7ebf\u6bb5\u6811\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u8fdb\u884c\u8be5\u7ed3\u70b9\u6240\u8bb0\u5f55\u7684\u4fee\u6539\uff0c\u518d\u8fdb\u884c\u8be5\u7ed3\u70b9\u7684\u8be2\u95ee\u5373\u53ef\n    \n3.\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\n\t\n\u5c06\u6bcf\u4e00\u4e2a\u4fee\u6539\u5206\u89e3\u6210$log$\u4e2a\u533a\u95f4\u8bb0\u5f55\u5728\u7ebf\u6bb5\u6811\u8fd9$log$\u4e2a\u8282\u70b9\u4e0a\n    \n\u5c06\u6bcf\u4e00\u4e2a\u67e5\u8be2\u8bb0\u5f55\u5728\u5305\u542b\u8be5\u70b9\u7684\u7ebf\u6bb5\u6811\u4e0a\u7684$log$\u4e2a\u8282\u70b9\u4e0a\n    \n\u904d\u5386\u7ebf\u6bb5\u6811\u7c7b\u6bd4\u60c5\u51b52\u5373\u53ef\n\n4.\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\n\t\n\u7ed3\u5408\u60c5\u51b52\uff0c3\u5c31\u662f\u8fd9\u4e2a\u4e1c\u897f\n\n---\n\n\u6211\u4eec\u8fd8\u9700\u6ce8\u610f\u5728\u6240\u6709\u4e2d\uff0c\u5e94\u8be5\u662f\u8fdb\u884c\u5b8c\u4e86\u4fee\u6539\u5c31\u76f4\u63a5\u67e5\u8be2\n\n\u60c5\u51b52\u4e2d\u5e94\u5728\u672a\u9012\u5f52\u65f6\u4fbf\u64a4\u9500\u6240\u6709\u4fee\u6539\n\n---\n\n### \u672c\u9898\u505a\u6cd5\n\n\u6211\u4eec\u628a\u7b54\u6848\u5206\u4e24\u4e2a\u90e8\u5206\u6765\u6c42\n\n#### \u7b2c\u4e00\u90e8\u5206\n\n\u5148\u7528\u53ef\u6301\u4e45\u5316trie\u89e3\u51b3\u6240\u6709\u5546\u5e97\u7684\u7279\u6b8a\u5546\u54c1\u5bf9\u8be2\u95ee\u7684\u8d21\u732e\n\n\u8fd9\u4e00\u90e8\u5206\u4e0d\u6e05\u695a\u7684\u53ef\u4ee5\u53bb\u5b66\u4e60\u4e0b\u6700\u5927\u5f02\u6216\u548c\n\n#### \u7b2c\u4e8c\u90e8\u5206\n\n\u7531\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u53ea\u80fd\u4e70\u67d0\u4e00\u6bb5\u65f6\u95f4\u5185\u7684\u5546\u54c1\n\n\u66b4\u529b\u7684\u5bf9\u6240\u6709\u533a\u95f4\u505a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u8fbe$O(q\\times n\\times log T)$\uff0c$T$\u4e3a\u503c\u57df\n\n\u6211\u4eec\u8003\u8651\u521a\u521a\u5b66\u5230\u7684\u7ebf\u6bb5\u6811\u5206\u6cbb\n\n\u5c06\u6240\u6709\u4fee\u6539\u548c\u8be2\u95ee\u6309\u7167\u4e0a\u8ff0\u7684\u505a\u6cd5\u8bb0\u5f55\u5728\u7ebf\u6bb5\u6811\u4e0a\n\n\u8fdb\u884c\u7ebf\u6bb5\u6811\u5206\u6cbb\n\n```cpp\ninline void solve(register int k,register int l,register int r){\n\tInsert(k);//\u5c06\u6240\u6709\u4fee\u6539\u52a0\u8fdb\u53ef\u6301\u4e45\u531601trie\u4e2d\n\tif(l==r){\n\t\tfor(register int i=0;i<que[k].size();i++){\n\t\t\tregister int id=que[k][i].id;\n\t\t\tregister int x=que[k][i].l,y=que[k][i].r,val=que[k][i].x;\n\t\t\tans[id]=max(ans[id],query(x,y,val));\n\t\t}\n        \t//\u5904\u7406\u8be2\u95ee\n\t\tDelete(k);//\u6e05\u7a7a\u53ef\u6301\u4e45\u531601trie\n\t\treturn ;\n\t}\n\tregister int mid=l+((r-l)>>1);\n\tfor(register int i=0;i<que[k].size();i++){\n\t\tregister int id=que[k][i].id;\n\t\tregister int x=que[k][i].l,y=que[k][i].r,val=que[k][i].x;\n\t\tans[id]=max(ans[id],query(x,y,val));\n\t}\n\tDelete(k);\n    //\u4e00\u5b9a\u8981\u5148\u6e05\u7a7a\uff0c\u8fd9\u6837\u505a\u7684\u539f\u56e0\u5e94\u8be5\u6bd4\u8f83\u663e\u7136\n\tsolve(k<<1,l,mid);\n\tsolve(k<<1|1,mid+1,r);\n\treturn ;\n}\n```\n\u8fd9\u91cc\u5904\u7406\u53ef\u6301\u4e45\u531601trie\u65f6\u9700\u8981\u7528\u5230\u4e00\u4e9b\u53eb\u5e38\u7528\u7684\u6280\u5de7\n\n\u7531\u4e8e$upd$\u7684\u5e8f\u5217\u5546\u5e97\u7f16\u53f7\u4e0d\u8fde\u7eed\uff0c\u6211\u4eec\u9700\u8981\u79bb\u6563\u5316\n\n\u5728query\u65f6\u9700\u8981\u4e8c\u5206\u4e00\u4e0b\n\n---\n### \u590d\u6742\u5ea6\u5206\u6790\n\u6839\u636e\u4e0a\u8ff0\u7684\u7ebf\u6bb5\u6811\u5206\u6cbb\u9700\u8981\u8bb0\u5f55\u7684\u4e1c\u897f\u5f88\u5bb9\u6613\u770b\u51fa\u7a7a\u95f4\u590d\u6742\u5ea6$nlogn+nlogT$\n\n\u7531\u4e8e\u6211\u4eec\u4f1a\u904d\u5386\u6240\u6709\u8bb0\u5f55\u7684\u8be2\u95ee\u548c\u67e5\u8be2\u5171$nlogn$\u4e2a\n\n\u65e0\u8bba\u662f\u53ef\u6301\u4e45\u531601trie\u7684\u63d2\u5165\u8fd8\u662f\u8be2\u95ee\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a$O(logn)$\n\n\u6545\u603b\u590d\u6742\u5ea6$O(nlog^2n)$\n\n### \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=1000005,maxm=100005;\nstruct Upd{\n\tint s,v;\n\tbool operator <(Upd i)const{\n\t\treturn s<i.s;\n\t}\n};\nstruct Que{\n\tint id,l,r,x;\n};\nint ans[maxm];\nstruct trie{\n\tint s[2];\n\tint b;\n}t[20*maxm];\nint tot=0;\nint rt[maxn];\nint lp[maxn],rp[maxn];\nint W=0;\nint shop[maxn];\nbool vis[maxm];\nvector<Upd>upd[maxm<<2];\nvector<Que>que[maxm<<2];\ninline int read(){\n    register int x=0,y=1;\n    register char ch=getchar();\n    while(ch<48||ch>57){if(ch==45)y=-1;ch=getchar();}\n    while(ch>=48&&ch<=57)x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n    return x*y;\n}\ninline void write(register int x){\n\tif(!x)return ;\n\twrite(x/10);\n\tputchar(x%10+'0');\n\treturn ;\n}\ninline void clear(register int k){\n\tt[k].s[0]=t[k].s[1]=t[k].b=0;\n\treturn ;\n}\ninline int newnode(){\n\tclear(tot+1);\n\treturn ++tot;\n}\ninline void ins(register int x,register int y,register int val){\n\tif(!rt[x])rt[x]=newnode();\n\tregister int k=rt[x],l=rt[y];\n\tt[k].b=x;\n\tfor(register int i=16;i>=0;i--){\n\t\tregister bool to=((val&(1<<i))>>i);\n\t\tif(!t[k].s[to])t[k].s[to]=newnode();\n\t\tt[k].s[to^1]=t[l].s[to^1];\n\t\tk=t[k].s[to];\n\t\tt[k].b=x;\n\t\tl=t[l].s[to];\n\t}\n\treturn ;\n}\ninline int search(register int x){\n\tregister int l=0,r=W+1;\n\twhile(l+1<r){\n\t\tregister int mid=l+((r-l)>>1);\n\t\tif(shop[mid]<=x)\n\t\t\tl=mid;\n\t\telse\n\t\t\tr=mid;\n\t}\n\treturn l;\n}\ninline int query(register int l,register int r,register int val){\n\tregister int lft=l;\n\tl=search(l);\n\tr=search(r);\n\tif(shop[l]<lft)l++;\n\tl=lp[l];r=rp[r];\n\tregister int k=rt[r],ans=0;\n\tfor(register int i=16;i>=0;i--){\n\t\tregister bool to=((((val&(1<<i)))>>i)^1);\n\t\tif(t[k].s[to]==0||t[t[k].s[to]].b<l)to^=1;\n\t\telse ans+=(1<<i);\n\t\tk=t[k].s[to];\n\t}\n\treturn ans;\n}\ninline void modify1(register int k,register int l,register int r,register int x,register int p,register int val){\n\tif(l>x||r<x)return ;\n\tif(l==r){\n\t\tupd[k].push_back((Upd){p,val});\n\t\treturn ;\n\t}\n\tregister int mid=l+((r-l)>>1);\n\tmodify1(k<<1,l,mid,x,p,val);\n\tmodify1(k<<1|1,mid+1,r,x,p,val);\n\tupd[k].push_back((Upd){p,val});\n\treturn ;\n}\ninline void modify2(register int k,register int l,register int r,register int x,register int y,register int id,register int p,register int q,register int val){\n\tif(y<x)return ;\n\tif(l>y||r<x)return ;\n\tif(l>=x&&r<=y){\n\t\tque[k].push_back((Que){id,p,q,val});\n\t\treturn ;\n\t}\n\tregister int mid=l+((r-l)>>1);\n\tmodify2(k<<1,l,mid,x,y,id,p,q,val);\n\tmodify2(k<<1|1,mid+1,r,x,y,id,p,q,val);\n\treturn ;\n}\ninline void Insert(register int k){\n\tsort(upd[k].begin(),upd[k].end());\n\tif(upd[k].size()){\n\t\tins(1,0,upd[k][0].v);\n\t\tW=1;\n\t\tshop[W]=upd[k][0].s;\n\t\tlp[W]=1;\n\t}\n\tfor(register int i=1;i<upd[k].size();i++){\n\t\tregister int p1=upd[k][i].s,p2=upd[k][i-1].s;\n\t\tins(i+1,i,upd[k][i].v);\n\t\tif(p1>p2){\n\t\t\tW++;\n\t\t\tshop[W]=p1;\n\t\t\trp[W-1]=i;lp[W]=i+1;\n\t\t}\n\t}\n\trp[W]=upd[k].size();\n\treturn ;\n}\ninline void Delete(register int k){\n\tfor(register int i=1;i<=tot;i++)clear(i);\n\tfor(register int i=1;i<=upd[k].size();i++)rt[i]=0;\n\ttot=0;\n\treturn ;\n}\ninline void solve(register int k,register int l,register int r){\n\tInsert(k);\n\tif(l==r){\n\t\tfor(register int i=0;i<que[k].size();i++){\n\t\t\tregister int id=que[k][i].id;\n\t\t\tregister int x=que[k][i].l,y=que[k][i].r,val=que[k][i].x;\n\t\t\tans[id]=max(ans[id],query(x,y,val));\n\t\t}\n\t\tDelete(k);\n\t\treturn ;\n\t}\n\tregister int mid=l+((r-l)>>1);\n\tfor(register int i=0;i<que[k].size();i++){\n\t\tregister int id=que[k][i].id;\n\t\tregister int x=que[k][i].l,y=que[k][i].r,val=que[k][i].x;\n\t\tans[id]=max(ans[id],query(x,y,val));\n\t}\n\tDelete(k);\n\tsolve(k<<1,l,mid);\n\tsolve(k<<1|1,mid+1,r);\n\treturn ;\n}\nint main(){\n    freopen(\"[FJOI2015]\u706b\u661f\u5546\u5e97\u95ee\u9898.in\",\"r\",stdin);\n    freopen(\"[FJOI2015]\u706b\u661f\u5546\u5e97\u95ee\u9898.out\",\"w\",stdout);\n   \tregister int n,m;\n\tn=read();m=read();\n\tclear(0);\n\tfor(register int i=1;i<=n;i++){\n\t\tW++;\n\t\tshop[W]=i;\n\t\tlp[W]=i;rp[W]=i;\n\t\tins(i,i-1,read());\n\t}\n\tregister int day=1;\n\tfor(register int i=1;i<=m;i++){\n\t\tregister int opt,l,r,x,d;\n\t\topt=read();l=read();r=read();\n\t\tif(!opt){\n\t\t\tif(i>1)day++;\n\t\t\tmodify1(1,1,m,day,l,r);\n\t\t}\n\t\telse{\n\t\t\tvis[i]=1;\n\t\t\tx=read();d=read();\n\t\t\tmodify2(1,1,m,max(day-d+1,1),day,i,l,r,x);\n\t\t\tans[i]=query(l,r,x);\n\t\t}\n\t}\n\tfor(register int i=1;i<=tot;i++)clear(i);\n\tfor(register int i=1;i<=n;i++)rt[i]=0;\n\ttot=0;\n\tsolve(1,1,m);\n\tfor(register int i=1;i<=m;i++)\n\t\tif(vis[i]){\n\t\t\tif(ans[i])write(ans[i]);\n\t\t\telse putchar('0');\n\t\t\tputchar('\\n');\n\t\t}\n    return 0;\n}\n\n```",
        "postTime": 1591193854,
        "uid": 98527,
        "name": "juju527",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4585 \u3010[FJOI2015]\u706b\u661f\u5546\u5e97\u95ee\u9898\u3011"
    },
    {
        "content": "\u9893\u6587\u5316\u8bfe\u4f5c\u4e1a\u5230\u5f88\u665a\u5199\u7bc7\u535a\u5ba2\u6e05\u9192\u4e00\u4e0b\n\n\u9996\u5148\u6211\u4eec\u4ed4\u7ec6\u9605\u8bfb\u5e76\u731c\u6d4b\u4e86\u9898\u610f\u4e4b\u540e\uff0c\u5c31\u4f1a\u60f3\u5230\u4e00\u4e2a\u66b4\u529b\u7684**\u7ebf\u6bb5\u6811\u5957\u53ef\u6301\u4e45\u53160/1Trie**\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u5b83\u663e\u7136\u662f\u8fc7\u4e0d\u53bb\u7684\n\n~~\u7531\u4e8e\u6700\u8fd1\u518d\u505a**\u7ebf\u6bb5\u6811\u5206\u6cbb**\u7684\u9898~~\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\u5206\u6cbb\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\n\n\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8be2\u95ee\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u627e\u51fa\u5b83\u8fde\u7eed\u8be2\u95ee\u7684\u4e00\u6bb5\u65f6\u95f4\u533a\u95f4\uff0c\u7136\u540e\u628a\u5b83\u6254\u8fdb\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u91cc\n\n\u8003\u8651\u600e\u4e48\u52a0\u70b9\uff0c\u5982\u679c\u66b4\u529b\u63d2\u5165\u4fee\u6539\u90a3\u5c31\u548c\u66b4\u529b\u6ca1\u4ec0\u4e48\u533a\u522b\u4e86\uff0c\u6211\u4eec\u8fd8\u8981\u8003\u8651\u8fdb\u4e00\u6b65\u4f18\u5316\n\n\u8fd8\u662f\u4e00\u4e2a\u8001\u5957\u8def\uff0c\u7531\u4e8e\u7ebf\u6bb5\u6811\u5206\u6cbb\u662f\u4e00\u79cd**\u79bb\u7ebf**\u7b97\u6cd5\uff0c\u56e0\u6b64\u63d2\u5165\u4fee\u6539\u7684\u987a\u5e8f\u5b8c\u5168\u53ef\u4ee5\u7531\u6211\u4eec\u81ea\u5df1\u51b3\u5b9a\n\n\u90a3\u4e48\u518d\u6b64\u5229\u7528\u5206\u6cbb\u7684\u601d\u60f3\uff0c\u6bcf\u6b21\u63d2\u5165\u70b9\u65f6\u4e00\u4e2a\u533a\u95f4\u4e00\u4e2a\u533a\u95f4\u7684\u52a0\u5165\uff0c\u67e5\u8be2\u7684\u8bdd\u5c31\u7528**\u4e8c\u5206+\u53ef\u6301\u4e45\u53160/1Trie**\u6765\u8d44\u74f7\u5c31\u597d\u4e86\n\n\u8fd9\u6837\u603b\u4f53\u590d\u6742\u5ea6\u5c31\u5230\u4e86\u53ef\u4ee5\u63a5\u53d7\u7684$O(n\\log^2 n)$\uff0c\u8db3\u4ee5\u901a\u8fc7\u6b64\u9898\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<iostream>\n#include<vector>\n#include<algorithm>\n#define RI register int\n#define CI const int&\n#define Tp template <typename T>\nusing namespace std;\nconst int N=100005,R=17;\nstruct event\n{\n\tint s,v,t;\n\tfriend inline bool operator < (const event& A,const event& B)\n\t{\n\t\treturn A.s<B.s;\n\t}\n}et[N]; int cnt_et;\nstruct ques\n{\n\tint l,r,tl,tr,v;\n}q[N]; int cnt_q;\nint n,m,opt,x,ans[N];\nclass FileInputOutput\n{\n\tprivate:\n\t\tstatic const int S=1<<21;\n\t\t#define tc() (A==B&&(B=(A=Fin)+fread(Fin,1,S,stdin),A==B)?EOF:*A++)\n\t\t#define pc(ch) (Ftop!=Fend?*Ftop++=ch:(fwrite(Fout,1,S,stdout),*(Ftop=0)++=ch))\n\t\tchar Fin[S],Fout[S],*A,*B,*Ftop,*Fend; int pt[15];\n\tpublic:\n\t\tinline FileInputOutput(void) { Ftop=Fout; Fend=Fout+S; }\n\t\tTp inline void read(T& x)\n\t\t{\n\t\t\tx=0; char ch; while (!isdigit(ch=tc()));\n\t\t\twhile (x=(x<<3)+(x<<1)+(ch&15),isdigit(ch=tc()));\n\t\t}\n\t\tTp inline void write(T x)\n\t\t{\n\t\t\tRI ptop=0; while (pt[++ptop]=x%10,x/=10);\n\t\t\twhile (ptop) pc(pt[ptop--]+48); pc('\\n');\n\t\t}\n\t\tinline void flush(void)\n\t\t{\n\t\t\tfwrite(Fout,1,Ftop-Fout,stdout);\n\t\t}\n\t\t#undef tc\n\t\t#undef pc\n}F;\nclass Zero_One_Trie\n{\n\tprivate:\n\t\tstruct segment\n\t\t{\n\t\t\tint ch[2],sum;\n\t\t\tinline segment(CI Ls=0,CI Rs=0,CI Sum=0)\n\t\t\t{\n\t\t\t\tch[0]=Ls; ch[1]=Rs; sum=Sum;\n\t\t\t}\n\t\t}node[N*R<<2]; int tot,num,rt[N];\n\t\t#define S(x) node[x].sum\n\t\tinline void _insert(CI lst,int& now,CI val,CI d=R)\n\t\t{\n\t\t\tnow=++tot; node[now]=node[lst]; ++S(now); if (!~d) return;\n\t\t\tbool c=(val>>d)&1; _insert(node[lst].ch[c],node[now].ch[c],val,d-1);\n\t\t}\n\t\tinline int _query(CI lst,CI now,CI val,CI d=R)\n\t\t{\n\t\t\tif (!~d) return 0; bool c=(val>>d)&1; return S(node[now].ch[c^1])-S(node[lst].ch[c^1])?\n\t\t\t_query(node[lst].ch[c^1],node[now].ch[c^1],val,d-1)+(1<<d):_query(node[lst].ch[c],node[now].ch[c],val,d-1);\n\t\t}\n\t\t#undef S\n\tpublic:\n\t\tinline void insert(CI val)\n\t\t{\n\t\t\t++num; _insert(rt[num-1],rt[num],val);\n\t\t}\n\t\tinline int query(CI l,CI r,CI val)\n\t\t{\n\t\t\tif (l>r) return 0; _query(rt[l-1],rt[r],val);\n\t\t}\n\t\tinline void clear(void)\n\t\t{\n\t\t\tRI i; for (i=1;i<=tot;++i) node[i]=segment();\n\t\t\tfor (i=1;i<=num;++i) rt[i]=0; tot=num=0;\n\t\t}\n}T;\nclass Segment_Tree\n{\n\tprivate:\n\t\tvector <int> pv[N<<2]; event ls[N],rs[N]; int stk[N],top;\n\t\t#define TN CI now=1,CI l=1,CI r=cnt_et\n\t\t#define LS now<<1,l,mid\n\t\t#define RS now<<1|1,mid+1,r\n\t\tinline void calc(CI now,CI l,CI r)\n\t\t{\n\t\t\tT.clear(); top=0; for (RI i=l;i<=r;++i) stk[++top]=et[i].s,T.insert(et[i].v);\n\t\t\tfor (vector <int>::iterator it=pv[now].begin();it!=pv[now].end();++it)\n\t\t\t{\n\t\t\t\tint ql=upper_bound(stk+1,stk+top+1,q[*it].l-1)-stk;\n\t\t\t\tint qr=upper_bound(stk+1,stk+top+1,q[*it].r)-stk-1;\n\t\t\t\tans[*it]=max(ans[*it],T.query(ql,qr,q[*it].v));\n\t\t\t}\n\t\t}\n\tpublic:\n\t\tinline void insert(CI beg,CI end,CI pos,TN)\n\t\t{\n\t\t\tif (beg>end) return; if (beg<=l&&r<=end) return (void)(pv[now].push_back(pos));\n\t\t\tint mid=l+r>>1;\tif (beg<=mid) insert(beg,end,pos,LS); if (end>mid) insert(beg,end,pos,RS);\n\t\t}\n\t\tinline void solve(CI st=1,CI ed=cnt_et,TN)\n\t\t{\n\t\t\tif (st>ed) return; calc(now,st,ed); if (l==r) return; int mid=l+r>>1,lct=0,rct=0;\n\t\t\tRI i; for (i=st;i<=ed;++i) if (et[i].t<=mid) ls[++lct]=et[i]; else rs[++rct]=et[i];\n\t\t\tfor (i=1;i<=lct;++i) et[st+i-1]=ls[i]; for (i=1;i<=rct;++i) et[st+lct+i-1]=rs[i];\n\t\t\tsolve(st,st+lct-1,LS); solve(st+lct,ed,RS);\n\t\t}\n\t\t#undef TN\n\t\t#undef LS\n\t\t#undef RS\n}SEG;\nint main()\n{\n\t//freopen(\"CODE.in\",\"r\",stdin); freopen(\"CODE.out\",\"w\",stdout);\n\tRI i; for (F.read(n),F.read(m),i=1;i<=n;++i) F.read(x),T.insert(x);\n\tfor (i=1;i<=m;++i)\n\t{\n\t\tF.read(opt); if (!opt) F.read(et[++cnt_et].s),F.read(et[cnt_et].v),et[cnt_et].t=cnt_et;\n\t\telse F.read(q[++cnt_q].l),F.read(q[cnt_q].r),F.read(q[cnt_q].v),\n\t\tF.read(x),q[cnt_q].tl=max(1,cnt_et-x+1),q[cnt_q].tr=cnt_et;\n\t}\n\tfor (i=1;i<=cnt_q;++i) ans[i]=T.query(q[i].l,q[i].r,q[i].v),SEG.insert(q[i].tl,q[i].tr,i);\n\tfor (sort(et+1,et+cnt_et+1),SEG.solve(),i=1;i<=cnt_q;++i) F.write(ans[i]);\n\treturn F.flush(),0;\n}\n```",
        "postTime": 1569944310,
        "uid": 41698,
        "name": "hl666",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4585 \u3010[FJOI2015]\u706b\u661f\u5546\u5e97\u95ee\u9898\u3011"
    },
    {
        "content": "[$\\Large\\color{#FFBBFF}\\textit{Tian-Xing's blog}$](https://Tian-Xing.github.io)\n\n------------\n\n# Description\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4585)\n\n------------\n\n# Solution\n\n\u5176\u5b9e\u8fd9\u9898\u662f\u6ca1\u6709\u5fc5\u8981\u4f7f\u7528\u53ef\u6301\u4e45\u5316$Trie$\u7684\u3002\n\n\u9996\u5148\u5efa\u7acb\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u5b83\u6240\u4ee3\u8868\u7684\u90a3\u4e9b\u5546\u5e97\u7684\u5546\u54c1\u7684\u6807\u4ef7\u6240\u6784\u6210\u7684$Trie$\u3002\n\n\u8fd9\u6837\u5982\u679c\u6ca1\u6709\u65f6\u95f4\u4e0a\u7684\u9650\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u6b21\u7684\u8be2\u95ee\u62c6\u6210\u5bf9\u4e8e$log(n)$\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u7684\u8282\u70b9\u7684\u8be2\u95ee\uff0c\u6bcf\u6b21\u5728$Trie$\u4e0a\u82b1\u8d39$log(w)$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u67e5\u8be2\u6700\u5927\u503c\uff0c\u7136\u540e\u5bf9\u6240\u6709\u7b54\u6848\u53d6$max$\u5373\u4e3a\u6240\u6c42\u7b54\u6848\u3002\n\n\u6ce8\u610f\u8fd9\u91cc\u65f6\u95f4\u7684\u9650\u5236\u662f\u4e00\u4e2a\u540e\u7f00\uff0c\u4e5f\u5c31\u662f\u8bf4\u662f\u4ece\u67d0\u4e2a\u5386\u53f2\u8282\u70b9\u5ef6\u7eed\u7684\u76ee\u524d\u8282\u70b9\u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a$Trie$\u4e0a\u7684\u70b9\u8bb0\u5f55\u6700\u540e\u904d\u5386\u5230\u7684\u65f6\u95f4\uff0c\u8fd9\u6837$d$\u65f6\u95f4\u4ee5\u524d\u7684\u5c31\u662f\u8bb0\u5f55\u7684\u65f6\u95f4$<$\u76ee\u524d\u65f6\u95f4$- d + 1$\u7684\u8282\u70b9\u3002\u8fd9\u4e9b\u8282\u70b9\u5b9e\u9645\u4e0a\u5728$Trie$\u4e0a\u5f0f\u6ca1\u6709\u7684\uff0c\u5728\u67e5\u8be2\u7684\u65f6\u5019\u76f4\u63a5\u5c06\u5b83\u4eec\u5ffd\u7565\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5546\u5e97\u7684\u7279\u6b8a\u5546\u54c1\uff0c\u5c06\u5b83\u4eec\u6700\u540e\u904d\u5386\u5230\u7684\u65f6\u95f4\u8d4b\u503c\u4e3a$INF$\u5373\u53ef\uff0c\u8fd9\u4e9b\u7279\u6b8a\u5546\u54c1\u7684\u5b58\u5728\u4e5f\u4fdd\u8bc1\u4e86\u6bcf\u54e5\u8be2\u95ee\u4e00\u5b9a\u6709\u89e3\u3002\n\n\u7efc\u4e0a\uff0c\u7531\u4e8e$n$\u548c$w$\u540c\u7ea7\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(log^2n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a$O(log^2n)$\u3002\n\n------------\n\n# Code\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n\nusing namespace std;\n\nconst int N = 100000;\nconst int INF = 0x7fffffff;\n\nint n, m, root[(N << 2) + 50], num, tim[30000050], trie[30000050][2], cnt;\n\nvoid Read(int &x)\n{\n    x = 0; int p = 0; char st = getchar();\n    while (st < '0' || st > '9') p = (st == '-'), st = getchar();\n    while (st >= '0' && st <= '9') x = (x << 1) + (x << 3) + st - '0', st = getchar();\n    x = p ? -x : x;\n    return;\n}\n\nvoid Insert(int &root, int val, int id)\n{\n    if (!root) root = ++num;\n    int now = root;\n    for (int i = 17; i >= 0; i--)\n    {\n        int c = ((val >> i) & 1);\n        if (!trie[now][c]) trie[now][c] = ++num;\n        now = trie[now][c]; tim[now] = max(tim[now], id);\n    } \n    return;\n}\n\nint Ans(int root, int val, int id)\n{\n    int ans = 0, now = root;\n    for (int i = 17; i >= 0; i--)\n    {\n        int c = ((val >> i) & 1);\n        if (trie[now][c ^ 1] && tim[trie[now][c ^ 1]] >= cnt - id + 1) \n            now = trie[now][c ^ 1], ans = ans + (1 << i);\n        else now = trie[now][c];\n    }\n    return ans;\n}\n\nvoid Change(int k, int l, int r, int pos, int val, int tim)\n{\n    Insert(root[k], val, tim);\n    if (l == r) return; \n    int mid = (l + r) >> 1;\n    if (pos <= mid) Change(k << 1, l, mid, pos, val, tim);\n    else Change(k << 1 | 1, mid + 1, r, pos, val, tim);\n    return;\n}\n\nint Query(int k, int l, int r, int x, int y, int val, int tim)\n{\n    if (x <= l && r <= y) return Ans(root[k], val, tim);\n    int mid = (l + r) >> 1;\n    if (y <= mid) return Query(k << 1, l, mid, x, y, val, tim);\n    else if (x > mid) return Query(k << 1 | 1, mid + 1, r, x, y, val, tim);\n    else return max(Query(k << 1, l, mid, x, y, val, tim), Query(k << 1 | 1, mid + 1, r, x, y, val, tim));\n}\n\nint main()\n{\n    Read(n); Read(m);\n    for (int i = 1, x; i <= n; i++) Read(x), Change(1, 1, n, i, x, INF);\n    int p, l, r, x, d, s, val;\n    while (m--)\n    {\n        Read(p);\n        if (p)\n        {\n            Read(l); Read(r); Read(x); Read(d);\n            printf(\"%d\\n\", Query(1, 1, n, l, r, x, d));\n        }\n        else\n        {\n            cnt++;\n            Read(s); Read(val);\n            Change(1, 1, n, s, val, cnt);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1596095091,
        "uid": 73983,
        "name": "Infiltrator",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4585 \u3010[FJOI2015]\u706b\u661f\u5546\u5e97\u95ee\u9898\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4585)\n\n[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://chenyu-w.github.io./2023/05/01/P4585%20%E7%81%AB%E6%98%9F%E5%95%86%E5%BA%97%E9%97%AE%E9%A2%98/)\n\n\u672c\u6765\u60f3\u7ec3\u7ebf\u6bb5\u6811\u5206\u6cbb\u7684\uff0c\u7a0d\u5fae\u60f3\u4e86\u4e00\u4e0b\u53d1\u73b0\u4e86\u4e00\u4e2a\u7ebf\u6bb5\u6811\u5957 01-Trie \u7684\u5728\u7ebf\u505a\u6cd5\uff0c\u597d\u5199\u4e00\u53d1\u8fc7\u4e86\u3002\n\n## \u5206\u6790\n\n\u9996\u5148\u8003\u8651\u6ca1\u6709\u65f6\u95f4\u9650\u5236\u600e\u4e48\u505a\uff0c\u663e\u7136\u662f\u5bf9\u5e8f\u5217\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u6bcf\u4e2a\u8282\u70b9\u5f00\u4e00\u68f5 01-Trie\uff0c\u5b58\u5f53\u524d\u533a\u95f4\u6240\u6709\u6570\uff0c\u4fee\u6539\u548c\u67e5\u8be2\u90fd\u662f trivial \u7684\u3002 \n\n\u73b0\u5728\u6709\u4e00\u4e2a\u65f6\u95f4\u7684\u9650\u5236\uff0c\u6211\u4eec\u8003\u8651\u7c7b\u4f3c\u53ef\u6301\u4e45\u5316 01-Trie \u7684\u5904\u7406\uff0c\u5bf9\u6bcf\u4e00\u4e2a Trie \u4e0a\u7684\u8282\u70b9\uff0c\u7ef4\u62a4\u4e00\u4e2a $last$ \u503c\uff0c\u6765\u8868\u793a\u5b50\u6811\u4e2d\u6700\u5927\u7684\u65f6\u95f4\u6233\uff0c\u5728\u67e5\u8be2\u65f6\uff0c\u5982\u679c\u8be5\u8282\u70b9\u7684 $last$ \u503c\u5c0f\u4e8e\u6211\u4eec\u7684\u65f6\u95f4\u9650\u5236\uff0c\u5c31\u8df3\u5230\u53e6\u4e00\u68f5\u5b50\u6811\u3002\u7279\u522b\u5730\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7279\u6b8a\u5546\u54c1\uff0c\u6211\u4eec\u628a\u5b83\u7684\u65f6\u95f4\u6233\u8bbe\u4e3a $+\\infty$\uff0c\u8fd9\u6837\u4fdd\u8bc1\u5b83\u80fd\u88ab\u8003\u8651\u5230\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2 n)$\u3002\n\n\u6ce8\u610f\u7a7a\u95f4\u5f00\u5927\uff01\n\n## \u4ee3\u7801\n\n```c++\n#include <bits/stdc++.h>\n#define L(i, j, k) for (int i = (j); i <= (k); i++)\n#define R(i, j, k) for (int i = (j); i >= (k); i--)\n#define ll long long\n#define ld long double\n#define ull unsigned long long\n\nusing namespace std;\nconst int N = 1e5 + 10, M = 5e7 + 10, INF = 1 << 30;\nint a[N], tr[M][2], last[M][2], tot, cnt;\nstruct Sgt {\n    int l, r, root;\n} t[N << 2];\n\ntemplate<class T = int> T read() {\n    T x = 0, y = 1; char c = getchar();\n    while (c < '0' || c > '9') {if (c == '-') y = -1; c = getchar();}\n    while (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x * y;\n}\n\ninline void insert(int p, int x, int t) {\n    R(i, 18, 0) {\n        int c = x >> i & 1;\n        if (!tr[p][c]) tr[p][c] = ++tot;\n        last[p][c] = max(last[p][c], t), p = tr[p][c];\n    }\n}\n\ninline int ask(int p, int x, int t) {\n    int res = 0;\n    R(i, 18, 0) {\n        int c = x >> i & 1;\n        if (tr[p][c ^ 1] && last[p][c ^ 1] >= t) res += 1 << i, p = tr[p][c ^ 1];\n        else p = tr[p][c];\n    }\n    return res;\n}\n\ninline void build(int p, int l, int r) {\n    t[p].l = l, t[p].r = r, t[p].root = ++tot;\n    L(i, l, r) insert(t[p].root, a[i], INF);\n    if (l == r) return;\n    int mid = (l + r) >> 1;\n    build(p << 1, l, mid), build(p << 1 | 1, mid + 1, r);\n}\n\ninline void modify(int p, int x, int v) {\n    insert(t[p].root, v, cnt);\n    if (t[p].l == t[p].r) return;\n    int mid = (t[p].l + t[p].r) >> 1;\n    if (x <= mid) modify(p << 1, x, v);\n    else modify(p << 1 | 1, x, v);\n}\n\ninline int query(int p, int l, int r, int x, int d) {\n    if (l <= t[p].l && t[p].r <= r) return ask(t[p].root, x, d);\n    int mid = (t[p].l + t[p].r) >> 1, res = 0;\n    if (l <= mid) res = max(res, query(p << 1, l, r, x, d));\n    if (r > mid) res = max(res, query(p << 1 | 1, l, r, x, d));\n    return res;\n}\n\nint main() {\n    int n = read(), m = read();\n    L(i, 1, n) a[i] = read();\n    build(1, 1, n);\n    while (m--) {\n        int op = read();\n        if (!op) {\n            cnt++;\n            int x = read(), v = read();\n            modify(1, x, v);\n        }\n        else {\n            int l = read(), r = read(), x = read(), d = read();\n            printf(\"%d\\n\", query(1, l, r, x, cnt - d + 1));\n        }\n    }\n    return 0;   \n}\n```\n\n",
        "postTime": 1682954683,
        "uid": 587248,
        "name": "wcywcywcywcy",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P4585"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P4585)\n\n~~\u9898\u9762\u8fc7\u957f\u542b\u7cca\u4e0d\u6e05\u5dee\u8bc4~~\n\n\u8865\u4e00\u53d1\u6811\u72b6\u6570\u7ec4\u5957\u53ef\u6301\u4e45\u5316 $\\text{01trie}$ \u7684\u9898\u89e3\u3002\n\n\u601d\u8def\u8fd8\u7b97\u7b80\u5355\uff0c\u7531\u4e8e\u67e5\u8be2\u76f8\u5f53\u4e8e\u662f**\u65f6\u95f4**\u4e0e**\u6807\u53f7**\u4e24\u7ef4\u9650\u5236\u4e0b\uff0c\u6c42\u4e0e\u67d0\u4e2a\u6570\u7684\u5f02\u6216\u6700\u5927\u503c\u3002\n\n\u90a3\u5c31\u53ef\u4ee5\u5bf9\u65f6\u95f4\u9650\u5236\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u89e3\u51b3\uff0c\u540c\u65f6\u5728\u6bcf\u4e2a\u65f6\u95f4\u4e0b\u5bf9\u6807\u53f7\u7528\u4e00\u9897\u53ef\u6301\u4e45\u5316 $\\text{01trie}$\u3002\n\n\u8be2\u95ee\u65f6\u8981\u628a\u6811\u72b6\u6570\u7ec4\u5bf9\u5e94\u65f6\u95f4\u4e0a\u6807\u53f7\u5408\u6cd5\u7684 $\\text{01trie}$ \u7684\u6839\u62ce\u51fa\u6765\uff0c\u76f8\u5f53\u4e8e\u5728\u65f6\u95f4\u4e0e\u6807\u53f7\u4e0a\u90fd\u7528\u4e00\u6b21\u5dee\u5206\u3002\n\n\u4e3a\u4e86\u5728 $\\text{01trie}$ \u4e0a\u627e\u5408\u6cd5\u6807\u53f7\u7684\u6839\uff0c\u53ef\u4ee5\u5728\u6bcf\u4e2a\u65f6\u95f4\u4e0a\u5f00\u4e00\u4e2a $\\text{multiset}$\uff0c\u7528 $\\text{lowerbound}$ \u4ee5\u53ca $\\text{upperbound}$ \u5b9a\u4f4d\u6839\u3002\n\n\u8fd8\u6709\u6240\u8c13\u7684\u7279\u6b8a\u5546\u54c1\uff0c\u76f4\u63a5\u65e0\u8111\u518d\u5199\u4e00\u4e2a\u53ef\u6301\u4e45\u5316 $\\text{01trie}$\uff0c\u4e0e\u7b54\u6848\u53d6\u6700\u5927\u503c\u5373\u53ef\u3002  \n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O((n+m)\\log(n)^2)$ \u7684\u3002  \n\n\u4ee3\u7801\uff1a  \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+10,M=3.5e7+10,K=18;\nint n,m,x,y,tt,tot,res,ans;\nint a[N],rt[N];\nstruct inq{int opt,l,r,x,d,t;}q[N];\nstruct trie{int s[2],sz;}t[M];\nvoid update(int &k,int kk,int x,int i){\n\tk=++tot;t[k]=t[kk];t[k].sz++;if(i<0)return;\n\tbool b=x&(1<<i);update(t[k].s[b],t[kk].s[b],x,i-1);\n}\nstruct node{\n\tint i,x;mutable int rt; \n\tnode(int _i,int _x=0):i(_i),x(_x){};\n\tbool operator <(const node &x)const{return i<x.i;};\n};\nint lowbit(int x){return x&(-x);}\nint p[N][2];multiset<node>s[N];\n#define msit multiset<node>::iterator\n#define f0 for(int i=1;i<=p[0][0];i++)\n#define f1 for(int i=1;i<=p[0][1];i++)\nvoid pre_update(int pos,int id,int x){\n\tfor(int i=pos;i<=tt;i+=lowbit(i))s[i].insert(node(id,x));\n}\nvoid update(){\n\tfor(int i=1;i<=tt;i++){\n\t\tint pre=0;\n\t\ts[i].insert(node(0,0));//\u4e0d\u585e\u4e00\u4e2a\u7a7a\u7684\u8fdb\u53bb\u5728lower_bound\u65f6\u4f1a\u51fa\u95ee\u9898 \n\t\tfor(msit j=s[i].begin();j!=s[i].end();j++)\n\t\t\tupdate(j->rt,pre,j->x,K),pre=j->rt;\n\t}\n}\nvoid inquiry_pre(int l,int r,int pos,bool b){\n\tfor(int i=pos;i;i-=lowbit(i)){\n\t\tmsit l1=s[i].lower_bound(node(l));\n\t\tif(l1==s[i].end())continue;l1--;\n\t\tmsit r1=s[i].upper_bound(node(r));r1--;\n\t\tp[++p[0][b]][b]=r1->rt,p[++p[0][b^1]][b^1]=l1->rt;\n\t}\n}\nvoid inquiry(int x,int k){\n\tif(k<0)return;int tmp=0;bool b=x&(1<<k);\n\tf1 tmp+=t[t[p[i][1]].s[b^1]].sz;f0 tmp-=t[t[p[i][0]].s[b^1]].sz;\n\tif(tmp){res+=1<<k;f0 p[i][0]=t[p[i][0]].s[b^1];f1 p[i][1]=t[p[i][1]].s[b^1];inquiry(x,k-1);}\n\telse {f0 p[i][0]=t[p[i][0]].s[b];f1 p[i][1]=t[p[i][1]].s[b];inquiry(x,k-1);}\n}\nvoid inquiry(int k1,int k2,int x,int k){\n\tif(k<0)return;bool b=x&(1<<k);\n\tint tmp=t[t[k2].s[b^1]].sz-t[t[k1].s[b^1]].sz;\n\tif(tmp)res+=1<<k,inquiry(t[k1].s[b^1],t[k2].s[b^1],x,k-1);\n\telse inquiry(t[k1].s[b],t[k2].s[b],x,k-1);\n}\nvoid inquiry_(int l,int r,int tl,int tr,int x){\n\tp[0][0]=p[0][1]=0;\n\tinquiry_pre(l,r,tr,1);\n\tinquiry_pre(l,r,tl-1,0);\n\tinquiry(x,K);\n}\nmain(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&x),update(rt[i],rt[i-1],x,K);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d\",&q[i].opt);\n\t\tif(q[i].opt)scanf(\"%d%d%d%d\",&q[i].l,&q[i].r,&q[i].x,&q[i].d);\n\t\telse scanf(\"%d%d\",&q[i].l,&q[i].x),++tt;\n\t\tq[i].t=tt;\n\t}\n\tfor(int i=1;i<=m;i++)if(!q[i].opt)pre_update(q[i].t,q[i].l,q[i].x);update();\n\tfor(int i=1;i<=m;i++)if(q[i].opt){\n\t\tif(q[i].d&&q[i].t)inquiry_(q[i].l,q[i].r,max(q[i].t-q[i].d+1,1),q[i].t,q[i].x);\n\t\tans=res,res=0;inquiry(rt[q[i].l-1],rt[q[i].r],q[i].x,K);ans=max(ans,res);\n\t\tprintf(\"%d\\n\",ans);res=ans=0;\n\t}\n}\n```",
        "postTime": 1627214552,
        "uid": 334380,
        "name": "Y_B_X",
        "ccfLevel": 7,
        "title": "\u9898\u89e3[P4585\u706b\u661f\u5546\u5e97\u95ee\u9898]"
    },
    {
        "content": "\u53ef\u6301\u4e45\u5316  01Trie+  \u7ebf\u6bb5\u6811\u5206\u6cbb\u3002\n\n\u9996\u5148\u7528  Trie  \u7b97\u51fa\u6240\u6709\u8be2\u95ee\u5bf9\u4e8e\u7279\u6b8a\u5546\u54c1\u7684\u7b54\u6848\u3002\n\n\u7136\u540e\u6211\u4eec\u7ed9\u6bcf\u4e00\u4e2a\u8fdb\u8d27\u7684\u5546\u54c1\u52a0\u4e0a\u4e00\u4e2a\u65f6\u95f4\u503c\uff0c\u6bcf\u4e2a\u8be2\u95ee\u5c31\u4f1a\u6709\u76f8\u5bf9\u5e94\u7684\u65f6\u95f4\u533a\u95f4\u3002\n\n\u6211\u4eec\u5f00\u4e00\u68f5\u65f6\u95f4\u7684\u7ebf\u6bb5\u6811\uff0c\u628a\u6bcf\u4e2a\u8be2\u95ee\u52a0\u5230\u7ebf\u6bb5\u6811\u4e0a\uff0c\u6bcf\u4e2a\u8282\u70b9\u7528\u4e00\u4e2a  vector  \u50a8\u5b58\u8fd9\u4e2a\u8282\u70b9\u7684\u8be2\u95ee\u3002\n\n\u663e\u7136\u6bcf\u4e2a\u8be2\u95ee\u6700\u591a\u4f1a\u5728 $ \\log $ \u4e2a\u8282\u70b9\u4e0a\u3002\n\n\u7136\u540e\u6211\u4eec\u628a\u6240\u6709\u8fdb\u8d27\u6309\u5546\u5e97\u6392\u5e8f\uff0c\u7531\u7ebf\u6bb5\u6811\u81ea\u9876\u5411\u4e0b\u8fdb\u884c\u5206\u6cbb\uff0c\u5206\u6cbb\u7684\u65f6\u5019\u8fd8\u8bb0\u5f55\u4e00\u4e0b\u8fdb\u8d27\u7684\u533a\u95f4\u3002\n\n\u6bcf\u6b21\u5230\u7ebf\u6bb5\u6811\u7684\u67d0\u4e2a\u8282\u70b9\u65f6\uff0c\u5148\u8ba1\u7b97\u51fa\u5f53\u524d\u8282\u70b9\u7684\u7b54\u6848\uff08\u56e0\u4e3a\u6240\u6709\u8fdb\u8d27\u662f\u6309\u5546\u5e97\u6392\u5e8f\u7684\uff0c\u6240\u4ee5\u4f9d\u65e7\u53ef\u4ee5\u7528  01Trie  \u7b97\uff0c\u7b97\u4e4b\u524d\u8bb0\u5f97\u6e05\u7a7a\uff09\uff0c\u7136\u540e\u628a\u65f6\u95f4\u5c0f\u4e8e\u7b49\u4e8e  mid  \u7684\u653e\u5230\u5de6\u8fb9\uff0c\u5927\u4e8e  mid  \u7684\u653e\u5230\u53f3\u8fb9\uff0c\u5411\u4e0b\u9012\u5f52\u3002\n\n\u4ee3\u7801\u5c55\u793a\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define pb push_back\n#define ls p<<1\n#define rs p<<1|1\n#define mid ((l+r)>>1)\nusing namespace std;\nconst int N=100007;\nint ch[N<<5][2],sum[N<<5],root[N],ans[N],stk[N],d[18],top,n,m,cnt;\nvector<int>vec[N];\nstruct node{int l,r,L,R,x;}q[N];\nstruct Node{int s,v,t;}a[N],t1[N],t2[N];\nint operator<(Node a,Node b){return a.s<b.s;}\nint read(){int x=0;char c=getchar();while(!isdigit(c))c=getchar();while(isdigit(c))x=x*10+c-48,c=getchar();return x;}\nint max(int a,int b){return a>b? a:b;}\nvoid split(int x)\n{\n    memset(d,0,sizeof d);\n    for(int i=0;i<=17;++i) d[i]=x>>i&1;\n}\nvoid insert(int &p,int pre)\n{\n    sum[p=++cnt]=sum[pre]+1;\n    for(int i=17,t=p;~i;--i) ch[t][d[i]^1]=ch[pre][d[i]^1],pre=ch[pre][d[i]],sum[t=ch[t][d[i]]=++cnt]=sum[pre]+1;\n}\nint query(int l,int r)\n{\n    int ans=0,i;\n    for(i=17;~i;--i)\n    if(sum[ch[l][d[i]^1]]^sum[ch[r][d[i]^1]]) ans|=1<<i,l=ch[l][d[i]^1],r=ch[r][d[i]^1];\n    else l=ch[l][d[i]],r=ch[r][d[i]];\n    return ans;\n}\nvoid update(int p,int l,int r,int L,int R,int x)\n{\n    if(L>R||r<L||l>R) return ;\n    if(L<=l&&r<=R) return (void)(vec[p].pb(x));\n    update(ls,l,mid,L,R,x);update(rs,mid+1,r,L,R,x);\n}\nvoid cal(int p,int L,int R)\n{\n    cnt=0;\n    int i,l,r,k,top=0;\n    for(i=L;i<=R;++i) stk[++top]=a[i].s,split(a[i].v),insert(root[top],root[top-1]);\n    for(i=0;i<vec[p].size();++i)\n    k=vec[p][i],l=upper_bound(stk+1,stk+top+1,q[k].l-1)-(stk+1),r=upper_bound(stk+1,stk+top+1,q[k].r)-(stk+1),split(q[k].x),ans[k]=max(ans[k],query(root[l],root[r]));\n}\nvoid solve(int p,int l,int r,int L,int R)\n{\n    if(L>R) return;\n    cal(p,L,R);\n    if(l==r) return;\n    int p1=0,p2=0,i;\n    for(i=L;i<=R;++i) if(a[i].t<=mid) t1[++p1]=a[i]; else t2[++p2]=a[i];\n    for(i=1;i<=p1;++i) a[i+L-1]=t1[i];\n    for(i=1;i<=p2;++i) a[i+L+p1-1]=t2[i];\n    solve(ls,l,mid,L,L+p1-1),solve(rs,mid+1,r,L+p1,R);\n}\nint main()\n{\n    n=read(),m=read();\n    int i,tot=0,T=0,l,r,x,d;\n    for(i=1;i<=n;++i) split(read()),insert(root[i],root[i-1]);\n    while(m--)\n    if(read()) l=read(),r=read(),x=read(),d=read(),split(x),ans[++tot]=query(root[l-1],root[r]),q[tot]=(node){l,r,max(1,T-d+1),T,x};\n    else x=read(),d=read(),a[++T]=(Node){x,d,T};\n    for(i=1;i<=tot;++i) update(1,1,T,q[i].L,q[i].R,i);\n    sort(a+1,a+T+1),solve(1,1,T,1,T);\n    for(i=1;i<=tot;++i) printf(\"%d\\n\",ans[i]);\n}\n```\n",
        "postTime": 1656667336,
        "uid": 655247,
        "name": "Octopus_Lady",
        "ccfLevel": 0,
        "title": "P4585 [FJOI2015]\u706b\u661f\u5546\u5e97\u95ee\u9898"
    },
    {
        "content": "$$\\color{#FFF}\\texttt{\u5148\u5410\u69fd\u4e00\u4e0b\u5783\u573e\u9898\u9762\uff1a\u6bcf\u5929\u7684\u4e8b\u4ef6\u6309\u7167\u5148\u4e8b\u4ef6 0\uff0c\u540e\u4e8b\u4ef6 1 \u7684\u987a\u5e8f\u6392\u5217\u3002\u6b63\u5e38\u4eba\u90fd\u4ee5\u4e3a\u6bcf\u5929\u7684\u4e8b\u4ef6\u957f\u8fd9\u6837\uff1a0 ...0 ...0 ...1 ...1 ...1 ...\u4f46\u662f\u8fd9\u6837\u6837\u4f8b\u90fd\u4e0d\u5bf9\u3002\u5b9e\u9645\u4e0a\u6bcf\u5929\u53ea\u80fd\u6709\u4e00\u4e2a 0 \u4e8b\u4ef6\u3002}$$\n\n------\n\n\u505a\u6cd5\uff1a\u7ebf\u6bb5\u6811 + \u53ef\u6301\u4e45\u5316 trie\n\n\u524d\u7f6e\u829d\u58eb\uff1a\n\n[\u7ebf\u6bb5\u6811](https://www.luogu.com.cn/problem/P3372)\n\n[\u53ef\u6301\u4e45\u5316 trie](https://www.luogu.com.cn/problem/P4735)\n\n\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u65f6\u7a7a\u5747\u4e3a $O(n \\log^2 n)$ \u7684\u505a\u6cd5\uff0c\u7a7a\u95f4 300MB \u5de6\u53f3\uff0cluogu \u53ef\u4ee5 AC\u3002\n\n\u679a\u4e3e\u65f6\u95f4\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5546\u5e97\u5e8f\u5217\uff0c\u7ebf\u6bb5\u6811\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u5f00\u4e00\u4e2a trie \u5b58\u50a8\u5f53\u524d\u8282\u70b9\u5bf9\u5e94\u533a\u95f4\u5185\u5546\u5e97\u7684\u8d27\u7269\uff08\u9700\u8981\u8bb0\u5f55\u8d27\u7269\u7684\u52a0\u5165\u65f6\u95f4\uff09\u3002\n\n\u8be2\u95ee\u5c31\u5728\u7ebf\u6bb5\u6811\u4e0a\u67e5\u8be2\uff0c\u6bcf\u4e2a\u8be2\u95ee\u81f3\u591a\u62c6\u6210 $\\log n$ \u4e2a\u533a\u95f4\u7684\u8be2\u95ee\uff0c\u6bcf\u4e2a\u533a\u95f4\u8bbf\u95ee\u5bf9\u5e94\u8282\u70b9\u7684 trie\uff0c\u4e5f\u662f $\\log n$\uff0c\u6545\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log^2 n)$\uff0c\u4f46\u662f\u7ebf\u6bb5\u6811\u76f8\u5f53\u4e8e\u6bcf\u5c42\u90fd\u4f1a\u5f00\u4e00\u4e2a\u5b8c\u6574\u7684\u5546\u5e97\u5e8f\u5217\u7684 trie\uff0c\u6240\u4ee5\u7a7a\u95f4\u590d\u6742\u5ea6\u4e5f\u662f $O(n \\log^2 n)$\u3002\n\n------\n\n\u6821\u5185 OJ \u8fd9\u9053\u9898\u7a7a\u95f4\u9650\u5236\u53ea\u6709 256M\uff0c\u9700\u8981\u7a7a\u95f4\u590d\u6742\u5ea6\u66f4\u4f4e\u7684\u505a\u6cd5\u3002\n\n\u65e2\u7136\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5e8f\u5217\u4e0d\u8ba8\u597d\uff0c\u90a3\u8003\u8651\u7ef4\u62a4\u8be2\u95ee\u7684\u65f6\u95f4\u3002\n\n\u5373\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u7684\u65f6\u95f4\u8303\u56f4\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u5c06\u5176\u62c6\u6210\u4e0d\u8d85\u8fc7 $\\log n$ \u4e2a\u8303\u56f4\uff0c\u6b64\u65f6\u8be2\u95ee\u5c31\u4f1a\u843d\u5728\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u4e0a\u3002\n\n\u540c\u65f6\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u518d\u5b58\u4e0b\u5f53\u524d\u8282\u70b9\u5bf9\u5e94\u7684\u65f6\u95f4\u533a\u95f4\u51fa\u73b0\u8fc7\u7684\u6240\u6709 0 \u4e8b\u4ef6\uff08\u6309\u589e\u52a0\u4f4d\u7f6e\u6392\u5e8f\uff09\u3002\n\n\u6700\u540e\u904d\u5386\u7ebf\u6bb5\u6811\u7edf\u4e00\u5904\u7406\u8be2\u95ee\u3002\n\n\u9012\u5f52\u5904\u7406\u5de6\u53f3\u513f\u5b50\uff0c\u7136\u540e\u5904\u7406\u5f53\u524d\u8282\u70b9\u7684\u8be2\u95ee\uff08\u8bb0\u5f97\u6e05\u7a7a\u53ef\u6301\u4e45\u5316 trie\uff09\u3002\n\n\u5bf9\u4e8e\u5f53\u524d\u8282\u70b9\uff0c\u6309 0 \u4e8b\u4ef6\u7684\u4f4d\u7f6e\u4f9d\u6b21\u6dfb\u52a0\u8fdb trie \u4e2d\uff08\u53ea\u6709\u8fd9\u4e9b\u4e8b\u4ef6\u5bf9\u7b54\u6848\u6709\u8d21\u732e\uff0c\u6ce8\u610f\u4f4d\u7f6e\u53ef\u80fd\u4e0d\u8fde\u7eed\uff09\uff0c\u5904\u7406\u8be2\u95ee\u65f6\u4e8c\u5206\u51fa\u8be2\u95ee\u4f4d\u7f6e\u5728\u4e8b\u4ef6\u4e2d\u7684\u771f\u5b9e\u4f4d\u7f6e\uff0c\u7136\u540e\u4eff\u7167 P4735 \u67e5\u8be2\u5c31\u597d\u4e86\u3002\n\n\u603b\u7684\u4e8b\u4ef6\u6570\u4e0e $n$  \u540c\u9636\uff0c0 \u4e8b\u4ef6\u9700\u8981\u5728\u8def\u5f84\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u8bb0\u5f55\u3001\u6392\u5e8f\u5e76\u52a0\u5165 trie \u6811\uff0c\u65f6\u95f4 $O(n \\log^2 n)$\uff0c\u7a7a\u95f4 $O(n \\log n)$\uff0c1 \u4e8b\u4ef6\u4f1a\u88ab\u62c6\u6210 $\\log n$ \u4e2a\u8282\u70b9\u4e0a\u7684\u8be2\u95ee\uff0c\u6bcf\u4e2a\u8282\u70b9\u9700\u8981\u4e8c\u5206\u5e76\u67e5\u8be2 trie \u6811\uff0c\u65f6\u95f4 $O(n \\log^2 n)$\uff0c\u7a7a\u95f4 $O(n \\log n)$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u65f6\u7a7a\u590d\u6742\u5ea6\u5206\u522b\u4e3a $O(n \\log^2 n)$\uff0c$O(n \\log n)$ \u7684\u4f18\u79c0\u505a\u6cd5\u3002\n\nCode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\ntemplate <class T> inline void read(T &x)\n{\n\tx = 0;\n\tint f = 0;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9')\n\t{\n\t\tf |= ch == '-';\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9')\n\t{\n\t\tx = x * 10 + (ch - 48);\n\t\tch = getchar();\n\t}\n\tx = f ? -x : x;\n\treturn;\n}\n#define N 100005\nstruct question\n{\n\tint id, l, r, v;\n};\nvector<question> que[N << 2];\nstruct operation\n{\n\tint pos, v;\n};\nbool operator < (const operation &a, const operation &b)\n{\n\treturn a.pos < b.pos;\n}\nvector<operation> opt[N << 2];\nvoid updateque(int root, int l, int r, int L, int R, question v)\n{\n\tif(L > R)\n\t{\n\t\treturn;\n\t}\n\tif(L <= l && r <= R)\n\t{\n\t\tque[root].emplace_back(v);\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tif(L <= mid)\n\t{\n\t\tupdateque(root << 1, l, mid, L, R, v);\n\t}\n\tif(mid < R)\n\t{\n\t\tupdateque(root << 1 | 1, mid + 1, r, L, R, v);\n\t}\n\treturn;\n}\nvoid updateopt(int root, int l, int r, int tim, operation v)\n{\n\topt[root].emplace_back(v);\n\tif(l == r)\n\t{\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tif(tim <= mid)\n\t{\n\t\tupdateopt(root << 1, l, mid, tim, v);\n\t}\n\telse\n\t{\n\t\tupdateopt(root << 1 | 1, mid + 1, r, tim, v);\n\t}\n\treturn;\n}\nint ch[N * 20][2], cnt[N * 20], tot;\ninline void clone(int &x)\n{\n\ttot++;\n\tch[tot][0] = ch[x][0], ch[tot][1] = ch[x][1];\n\tcnt[tot] = cnt[x] + 1;\n\tx = tot;\n\treturn;\n}\ninline void update(int *x, int v)\n{\n\tfor(int i = 16; i >= 0; i--)\n\t{\n\t\tclone(*x);\n\t\tif((v >> i) & 1)\n\t\t{\n\t\t\tx = ch[*x] + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tx = ch[*x];\n\t\t}\n\t}\n\tclone(*x);\n\treturn;\n}\ninline int query(int pl, int pr, int v)\n{\n\tint ret = 0;\n\tfor(int i = 16; i >= 0; i--)\n\t{\n\t\tint nowbit = (v >> i) & 1;\n\t\tif(cnt[ch[pr][nowbit ^ 1]] - cnt[ch[pl][nowbit ^ 1]])\n\t\t{\n\t\t\tret += 1 << i;\n\t\t\tpl = ch[pl][nowbit ^ 1], pr = ch[pr][nowbit ^ 1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpl = ch[pl][nowbit], pr = ch[pr][nowbit];\n\t\t}\n\t}\n\treturn ret;\n}\nint rt[N], Ans[N];\nvoid dfs(int root, int l, int r)\n{\n\tsort(opt[root].begin(), opt[root].end());\n\tif(l != r)\n\t{\n\t\tint mid = (l + r) >> 1;\n\t\tdfs(root << 1, l, mid);\n\t\ttot = 0;\n\t\tdfs(root << 1 | 1, mid + 1, r);\n\t\ttot = 0;\n\t}\n\tint cnt = 0;\n\tfor(auto x : opt[root])\n\t{\n\t\tcnt++, rt[cnt] = rt[cnt - 1];\n\t\tupdate(&rt[cnt], x.v);\n\t}\n\tfor(auto x : que[root])\n\t{\n\t\tint nl = lower_bound(opt[root].begin(), opt[root].end(), (operation){x.l, 0}) - opt[root].begin() + 1;\n\t\tint nr = upper_bound(opt[root].begin(), opt[root].end(), (operation){x.r, 0}) - opt[root].begin();\n\t\tAns[x.id] = max(Ans[x.id], query(rt[nl - 1], rt[nr], x.v));\n\t}\n\treturn;\n}\nint n, m, T;\nint a[N], op[N], l[N], r[N], x[N], d[N], t[N];\nsigned main()\n{\n\tread(n), read(m);\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tread(a[i]);\n\t}\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tread(op[i]);\n\t\tif(!op[i])\n\t\t{\n\t\t\tT++;\n\t\t\tread(x[i]), read(d[i]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tread(l[i]), read(r[i]), read(x[i]), read(d[i]);\n\t\t}\n\t\tt[i] = T;\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\trt[i] = rt[i - 1];\n\t\tupdate(&rt[i], a[i]);\n\t}\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tif(!op[i])\n\t\t{\n\t\t\tupdateopt(1, 1, T, t[i], (operation){x[i], d[i]});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tAns[i] = query(rt[l[i] - 1], rt[r[i]], x[i]);\n\t\t\tupdateque(1, 1, T, max(t[i] - d[i] + 1, 1), t[i], (question){i, l[i], r[i], x[i]});\n\t\t}\n\t}\n\ttot = 0;\n\tdfs(1, 1, T);\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tif(op[i])\n\t\t{\n\t\t\tprintf(\"%d\\n\", Ans[i]);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1642988691,
        "uid": 90027,
        "name": "GG_jok_er",
        "ccfLevel": 0,
        "title": "P4585 [FJOI2015]\u706b\u661f\u5546\u5e97\u95ee\u9898 \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5f88\u660e\u663e\u662f\u8981\u7528\u5230\u53ef\u6301\u4e45\u5316Trie\u7684\n\u5982\u679c\u4e0d\u4f1a\u8bf7\u79fb\u6b65[P4585](https://www.luogu.org/problemnew/show/P4735)\n\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u5206\u6cbb\u5bf9\u65f6\u95f4\u8fdb\u884c\u5206\u6cbb\uff0c\u5728\u6bcf\u4e00\u4e2a\u8282\u70b9\u7528\u4e00\u4e2avector\u5b58\u50a8\u8be2\u95ee\u5373\u53ef\uff0c\u53ef\u6301\u4e45\u5316Trie\u4e0d\u8981\u4f7f\u7528memset\u6e05\u7a7a\uff0c\u53ea\u9700\u8981\u628a\u8282\u70b9\u6570tot=0~~(\u5426\u5219\u5c06\u4f1a\u83b7\u5f97TLE10\u4e2a\u70b9\u7684\u597d\u6210\u7ee9)~~\n```\n#include <bits/stdc++.h>\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#define res register int\n#define ls (now<<1)\n#define rs (now<<1|1)\n#define N 1000005\nusing namespace std;\nint n,m,base[32],tot1,tot2,ans[N];\nchar op[5];\ninline int read()\n{\n  int X=0,w=0;\n  char ch=0;\n  while(!isdigit(ch))\n  {\n    w|=ch=='-';\n    ch=getchar();\n  }\n  while(isdigit(ch)) X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n  return w?-X:X;\n}\nstruct papa{\n    int id,w,day;\n    inline bool operator<(const papa &b) const{\n        return id<b.id;\n    }\n}thing[N<<2];\nstruct papa1{\n    int sl,sr,tl,tr,sec;\n    papa1():sl(0){};\n    papa1(int sl0,int sr0,int tl0,int tr0,int sec0):sl(sl0),sr(sr0),tl(tl0),tr(tr0),sec(sec0){};\n}Q[N];\nstruct Trie_con\n{\n  int root[N<<3],son[N<<3][2],tot,rtn,sum[N<<3];\n  inline void clear(){\n      tot=0;\n  }\n  inline void add(res &now,res last,res x)\n  {\n    now=tot+1;\n    for(res i=17; ~i; i--)\n    {\n      sum[++tot]=sum[last]+1;\n      bool b=x&base[i];\n      son[tot][b]=tot+1,son[tot][!b]=son[last][!b];\n      last=son[last][b];\n    }\n    sum[++tot]=sum[last]+1;\n  }\n  inline int query(res lt,res rt,res x)\n  {\n    if(lt>rt) return 0;\n    res ans=0;\n    for(res i=17; ~i; i--)\n    {\n      bool b=x&base[i];\n      if(sum[son[rt][!b]]-sum[son[lt][!b]])\n        ans+=base[i],lt=son[lt][!b],rt=son[rt][!b];\n      else\n        lt=son[lt][b],rt=son[rt][b];\n    }\n    return ans;\n  }\n} T;\nstruct Seg_div{\n    vector<int> tr[N<<2];\n    int top,st[N];\n    papa st1[N],st2[N];\n    inline void update(int now,int l,int r,int ql,int qr,int val){\n        if(ql>qr) return;\n        if(ql<=l&&r<=qr){\n            tr[now].push_back(val);\n            return ;\n        }\n        int mid=l+r>>1;\n        if(mid>=ql) update(ls,l,mid,ql,qr,val);\n        if(mid<qr)  update(rs,mid+1,r,ql,qr,val); \n    }\n    inline int find(int num){\n        res l=1,r=top,total=0;\n        while(l<=r){\n            int mid=l+r>>1;\n            if(st[mid]>num) r=mid-1;\n            else l=mid+1,total=mid;\n        }\n        return total;\n    }\n    inline void findans(int now,int ql,int qr){\n        top=0;\n        T.clear();\n        for(res i=ql;i<=qr;i++){\n            st[++top]=thing[i].id;\n            T.add(T.root[top],T.root[top-1],thing[i].w);\n        } \n        for(res i=0;i<tr[now].size();i++){\n            res j=tr[now][i];\n            res l=find(Q[j].sl-1),r=find(Q[j].sr);\n            ans[j]=max(ans[j],T.query(T.root[l],T.root[r],Q[j].sec));\n        }\n    }\n    inline void divide(int now,int l,int r,int ql,int qr){\n        if(ql>qr) return ;\n        int mid=l+r>>1,top1=0,top2=0;\n        findans(now,ql,qr);\n        if(l==r) return;\n        for(res i=ql;i<=qr;i++){\n            if(thing[i].day<=mid) st1[++top1]=thing[i];\n            else st2[++top2]=thing[i];\n        }\n        for(res i=1;i<=top1;i++) thing[ql+i-1]=st1[i];\n        for(res i=1;i<=top2;i++) thing[ql+i+top1-1]=st2[i];\n        divide(ls,l,mid,ql,ql+top1-1);\n        divide(rs,mid+1,r,ql+top1,qr);\n    }\n} S;\nint main()\n{\n  n=read(),m=read();\n  base[0]=1;\n  for(res i=1; i<=17; i++)\n    base[i]=base[i-1]<<1;\n  for(res i=1; i<=n; i++)\n    T.add(T.root[i],T.root[i-1],read());\n  for(res i=1; i<=m; i++)\n  {\n    scanf(\"%s\",op);\n    if(op[0]=='0')\n      thing[++tot1].id=read(),thing[tot1].w=read(),thing[tot1].day=tot1; \n    else\n    {\n      res L=read(),R=read(),y=read(),x=read();\n      ans[++tot2]=T.query(T.root[L-1],T.root[R],y);\n      Q[tot2]=papa1(L,R,max(1,tot1-x+1),tot1,y);\n    }\n  }\n  for(res i=1;i<=tot2;i++)\n    S.update(1,1,tot1,Q[i].tl,Q[i].tr,i); \n  sort(thing+1,thing+tot1+1);\n  S.divide(1,1,tot1,1,tot1);\n  for(res i=1;i<=tot2;i++)\n    printf(\"%d\\n\",ans[i]);\n  return 0;\n}\n```",
        "postTime": 1535028287,
        "uid": 26848,
        "name": "miaokehao",
        "ccfLevel": 0,
        "title": "FJOI2015\u706b\u661f\u5546\u5e97\u95ee\u9898"
    }
]