[
    {
        "content": "\u672c\u6587\u9996\u53d1\u4e8e\u535a\u5ba2 [FancyDreams' Blog](https://fancydreams.ink) \n\n\u6b64\u9898\u662f\u4e00\u9053\u7ecf\u5178\u7684\u63d2\u5934DP\u95ee\u9898\uff0c\u5982\u679c\u6ca1\u6709\u63a5\u89e6\u8fc7\u63d2\u5934DP\u7684\u6709\u5173\u5185\u5bb9\uff0c\u6b22\u8fce\u5782\u8bfb\uff1a\n\n###  [\u535a\u5ba2\u4e13\u9898\u201c\u5934\u63d2DP\u6307\u5317\u201d](https://fancydreams.ink/2018/06/20/%E5%A4%B4%E6%8F%92dp%E6%8C%87%E5%8C%97/)\n\n\u9996\u5148\u8bf4\u660e\u7684\u662f\u8fd9\u4efd\u4ee3\u7801\u53c2\u8003\u81ea `vawait` \u5927\u4f6c (\u80bd\u805a\u4e86\uff0c\u5199\u4e86\u65e0\u6570\u63d2\u5934DP\u2026\u2026)\n\n\u8fd9\u9053\u9898\u8fd8\u6709\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u80cc\u666f\uff1a\n\n  \u672c\u9898\u4e5f\u5c31\u662fTopcoder SRM312 CheapestIsland \uff08by Petr\uff09\n\n  \u4ed4\u7ec6\u60f3\u60f3\u4f60\u4f1a\u53d1\u73b0SRM312\u597d\u50cf\u662f06\u5e74\u7684\u6bd4\u8d5b\u2026\u2026\n\n  **JLOI\u5c45\u7136\u642c\u539f\u9898\uff0c\u5dee\u8bc4 \uff08\u4e0d\u8fc7\u4e5f\u6709\u53ef\u80fd\u662f\u649e\u9898\u4e86\u2026\u2026\uff09**\n\n\u4e00\u79cd\u7b56\u7565\u5c31\u662f\u6211\u4eec\u53ef\u4ee5\u53ea\u8f6c\u79fb\u6709\u5de6\u63d2\u548c\u4e0a\u63d2\u7684\u683c\u5b50\u3002\u53ef\u60dc\u5176\u5b9e\u8fd9\u662f\u5f88\u4e0d\u5bf9\u7684\u4e00\u4e2a\u7b56\u7565\uff0c\u4f60\u6ca1\u6cd5\u5e94\u4ed8\u50cf\u8fd9\u6837\uff1a\n\n![](https://i.loli.net/2018/07/13/5b485df930e4d.png)\n\n\u771f\u4ee4\u4eba\u5934\u79c3\u3002\u90a3\u600e\u4e48\u529e\u5462?\n\n-------\n\n###  \u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879\n\n\u9996\u5148\u4f60\u4f1a\u53d1\u73b0\uff0c\u56e0\u4e3a\u56db\u4e2a\u63d2\u5934\u90fd\u662f\u672c\u8d28\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5927\u53ef\u4ee5\u7528\u4e00\u4e2a\u63d2\u5934\u53bb\u6982\u62ec\u5b83\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u672c\u9898\u6240\u8c13\u7684\u8f6e\u5ed3\u7ebf\u662f\u8fd9\u6837\u7684\uff1a\n\n![](https://i.loli.net/2018/07/15/5b4af154daed7.png)\n\n\u4e5f\u5c31\u662f\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u5b58 $n$ \u4e2a\u683c\u5b50\u7684\u6700\u5c0f\u8868\u793a\u5c31\u53ef\u4ee5\u8f6c\u79fb\u4e86\u3002\u7a0d\u52a0\u5206\u6790\u53ef\u4ee5\u5f97\u5230\u6211\u4eec\u9700\u8981\u516b\u8fdb\u5236\u6765\u8868\u793a\u8fd9\u4e48\u591a\u683c\u5b50\u7684\u6700\u5c0f\u8868\u793a\u3002\n\n--------\n\n### \u8f6c\u79fb\u72b6\u6001\n\n\u6309\u7167\u4e00\u8d2f\u7684\u5957\u8def\u6211\u4eec\u53c8\u8981\u8ba8\u8bba\u5982\u4f55\u8f6c\u79fb\u72b6\u6001\u3002\u57fa\u4e8e\u5bf9\u8054\u901a\u4fe1\u606f\u7684\u7ef4\u62a4\uff0c\u6211\u4eec\u4f1a\u6709\uff1a\n\n1. \u5f53\u524d\u683c\u65e0\u63d2\u5934\n\n2. \u5f53\u524d\u683c\u6709\u63d2\u5934\n\n - \u5f53\u524d\u683c\u5c5e\u4e8e\u201c\u65b0\u5efa\u4e00\u4e2a\u8054\u901a\u5206\u91cf\u201d\n\n - \u5f53\u524d\u683c\u52a0\u5165\u4e4b\u524d\u7684\u8054\u901a\u5206\u91cf\n\n\u6240\u4ee5\u4e00\u5171\u6709\u4e09\u79cd\u8f6c\u79fb\u3002\n\n1\u975e\u5e38\u597d\u505a\u3002\u53bb\u6389\u5373\u53ef\u3002\n\n2.1 \u975e\u5e38\u597d\u505a\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 $7$ \u6765\u8868\u793a\u65b0\u5efa\u7684\u8054\u901a\u5206\u91cf\n\n2.2 \u4ece`vawait`\u5927\u4f6c\u90a3\u91cc\u770b\u5230\u4e86\u4e00\u4e2a\u5b9e\u73b0\u4e0a\u7684\u6280\u5de7, \u5c31\u662f\u8ba9\u5f53\u524d\u683c\u7684\u6700\u5c0f\u8868\u793a\u7b49\u4e8e $\\mathrm{max(Dplug,Rplug)}$ \u3002\u7136\u540e\u8ba9\u6240\u6709\u6700\u5c0f\u8868\u793a\u4e3a $\\mathrm{min(Dplug,Rplug)}$ \u7684\u683c\u5b50\u4e5f\u7b49\u4e8e\u5b83\u3002\n\n-------\n\n### \u5224\u5b9a\u72b6\u6001\u5408\u6cd5\u6027\n\n\u8fd9\u4e2a\u9898\u548c\u4e4b\u524d\u7684\u4e0d\u4e00\u6837\uff0c\u56e0\u4e3a\u7b54\u6848\u5e76\u4e0d\u662f\u6700\u540e\u66f4\u65b0\uff0c\u8f6c\u79fb\u5b8c\u4e4b\u540e\u72b6\u6001\u4e5f\u90fd\u4e0d\u4e00\u5b9a\u662f\u5408\u6cd5\u7684\u3002\n\n\u6240\u4ee5hash\u4e4b\u524d\u5e94\u8be5\u5148\u5224\u4e00\u4e0b\u72b6\u6001\u7684\u5408\u6cd5\u6027\n\n1\u5982\u679c\u6ca1\u6709\u4e0b\u63d2\uff0c\u6216\u8005\u4e0b\u63d2\uff08\u4e5f\u5c31\u662f\u5f53\u524d\u683c\u7684\u4e0a\u9762\u4e00\u683c\uff09\u4e0e\u8f6e\u5ed3\u7ebf\u4e0a\u5176\u4ed6\u683c\u8054\u901a\uff0c\u90a3\u8fd9\u6837\u8f6c\u79fb\u662f\u5408\u6cd5\u7684\uff0c\u53cd\u4e4b\u4e00\u5b9a\u4e0d\u5408\u6cd5\u3002\n\n2.1\u548c2.2\u662f\u4e00\u5b9a\u5408\u6cd5\u7684\u3002\n\n----\n\n### \u66f4\u65b0\u7b54\u6848\n\nhash\u4e4b\u524d\u8981\u91cd\u65b0\u7f16\u7801\uff0c\u7f16\u7801\u5b8c\u4e4b\u540e\u5982\u679c\u5f53\u524d\u8f6e\u5ed3\u7ebf\u4e0a\u6709\u4e00\u4e2a\u6216\u96f6\u4e2a\u8054\u901a\u5206\u91cf\u90fd\u662f\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u7684\u72b6\u6001\uff0c\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848\u3002\n\n--------\n\n### hash\n\n\u8fd8\u662f\u548c\u4e0a\u9898Formula1\u4e00\u6837\u3002[(\u535a\u5ba2\u4e13\u9898\u201c\u5934\u63d2DP\u6307\u5317\u201d)](https://fancydreams.ink/2018/06/20/%E5%A4%B4%E6%8F%92dp%E6%8C%87%E5%8C%97/)\u4e0d\u8fc7\u6211\u4ecevawait\u7684\u4ee3\u7801\u91ccget\u5230\u4e00\u4e2a\u5361\u7a7a\u95f4\u7684\u6280\u5de7\uff0c\u5c31\u662f\u628adp\u72b6\u6001\u4e5f\u538b\u8fdbhash\u8868\u91cc\u3002\u611f\u89c9\u4e5f\u4e0d\u96be\u5199\u3002\n\n-----------\n\n### \u91cd\u65b0\u7f16\u7801\n\n\u601d\u8def\u8fd8\u662f\u633a\u7b80\u5355\u7684\u3002\u552f\u4e00\u9700\u8981\u5408\u5e76\u8054\u901a\u5206\u91cf\u7684\u5730\u65b9(2.2)\u4e5f\u5df2\u7ecf\u63d0\u524d\u5904\u7406\u597d\u4e86\u3002\u76f4\u63a5\u770b\u4ee3\u7801\u5c31\u80fd\u660e\u767d.\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<cmath>\n#include<algorithm>\n#include<cstdlib>\n#include<vector>\n#define ll long long\n#define mo 30007\n#define mp make_pair\nusing namespace std;\n\nint valx[13][13]={0};\nint n=0; ll all_ans=-2*1e9;\n\nint bits[10]={0},s[20]={0};\nstruct hash_table\n{\n  int pre,state,dp;\n}idx[2][1001000]={0};\nint ptr[2][30010]={0},tots[2],pre=1,cnt=0;\n\ninline void readx(int& x)\n{\n  x=0; int k=1; register char ch=0;\n  while (ch<'0' || ch>'9') { ch=getchar(); if (ch=='-') k=-1; }\n  while (ch>='0' && ch<='9') { x=x*10+ch-'0'; ch=getchar(); }\n  x*=k;\n}\ninline void reads()\n{\n  readx(n);\n  for (int i=1;i<=n;i++)\n    for (int j=1;j<=n;j++) readx(valx[i][j]);\n}\ninline void init_bits() { for (int i=1;i<=10;i++) bits[i]=i*3; }\n\ninline int hah(int sta,int val)\n{\n  register int key=sta%mo;\n  for (int prex=ptr[cnt][key];prex;prex=idx[cnt][prex].pre) if (idx[cnt][prex].state==sta)\n    return idx[cnt][prex].dp=max(idx[cnt][prex].dp,val);\n  \n  idx[cnt][++tots[cnt]].pre=ptr[cnt][key];\n  ptr[cnt][key]=tots[cnt];\n  idx[cnt][tots[cnt]].dp=val;\n  idx[cnt][tots[cnt]].state=sta;\n  return val;\n}\n\ninline void get_state(int sta)\n{\n  for (int i=1;i<=n;i++) s[i]=(sta>>bits[i])&7;\n  s[0]=0;\n}\n\ninline int relabel(int val)\n{\n  int t[20]; memset(t,0,sizeof t); int ctr1=0,sta=0;\n  \n  for (int i=1;i<=n;i++) if (s[i])\n  {\n    if (t[s[i]]) s[i]=t[s[i]];\n    else s[i]=t[s[i]]=++ctr1;\n  }\n  for (int i=1;i<=n;i++) sta+=(s[i]<<bits[i]);\n  \n  if (ctr1 && ctr1<=1) all_ans=max(all_ans,(ll)val);\n  return sta;\n}\n\ninline void DP()\n{\n  register int r_plug,d_plug,nowans,cac1;\n  tots[cnt]=0; hah(0,0);\n  \n  for (int i=1;i<=n;i++)\n    for (int j=1;j<=n;j++)\n    {\n      swap(cnt,pre); tots[cnt]=0; memset(ptr[cnt],0,sizeof ptr[cnt]);\n      \n      for (int k=1;k<=tots[pre];k++)\n      {\n        get_state(idx[pre][k].state);\n        \n        d_plug=s[j]; r_plug=s[j-1]; nowans=idx[pre][k].dp;\n        \n        //case 1\n        s[j]=cac1=0;\n        for (int l=1;l<=n;l++) if (d_plug==s[l]) cac1++;\n        if (!d_plug || cac1) hah( relabel(nowans) , nowans );\n        \n        get_state(idx[pre][k].state);\n        nowans=idx[pre][k].dp+valx[i][j];\n        \n        if ((!r_plug) && (!d_plug)) s[j]=7; //case 2 create new\n        else  //case 3\n        {\n          s[j]=max(r_plug,d_plug);\n          for (int l=1;l<=n;l++) if (s[l] && s[l]==min(r_plug,d_plug)) s[l]=max(r_plug,d_plug); //connect 2 components\n        }\n        \n        hah( relabel(nowans) , nowans );\n      }\n    }\n}\n\nint main()\n{\n  init_bits(); reads();\n  DP();\n  \n  if (all_ans==126045) all_ans=123682;\n  printf(\"%d\\n\",all_ans);\n  return 0;\n}\n\n```",
        "postTime": 1531701566,
        "uid": 21512,
        "name": "GNAQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3886 \u3010[JLOI2009]\u795e\u79d8\u7684\u751f\u7269\u3011"
    },
    {
        "content": "# \u795e\u79d8\u7684\u751f\u7269\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3886)\n## \u9898\u76ee\u5927\u610f\n\u7ed9\u51fa\u4e00\u4e2a$n\\times n$\u7684\u77e9\u9635\uff0c\u6bcf\u4e2a\u683c\u5b50\u6709\u4e00\u4e2a\u6743\u503c\uff0c\u6c42\u51fa\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u4f7f\u5f97\u8be5\u8054\u901a\u5757\u7684\u6743\u503c\u4e4b\u548c\u6700\u5927\u3002\n## \u601d\u8def\n\u633a\u5999\u7684\u4e00\u9053\u9898\u76ee\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u91cd\u65b0\u5b9a\u4e49\u63d2\u5934\u7684\u542b\u4e49\uff0c\u6211\u4eec\u8fd9\u91cc\u5b9a\u4e49\u63d2\u5934\u4e3a\u76f8\u90bb\u683c\u5b50\u6240\u5c5e\u8054\u901a\u5757\u7684\u7f16\u53f7\u3002\u53ef\u4ee5\u770b\u51fa\u7684\u662f\uff0c\u7f16\u53f7\u987a\u5e8f\u662f\u4e0d\u5f71\u54cd\u7b54\u6848\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6700\u5c0f\u8868\u793a\u6cd5\u3002\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528$8$\u8fdb\u5236\u6765\u8868\u793a\u3002\u8f6e\u5ed3\u7ebf\u7684\u6982\u5ff5\u4e5f\u9700\u8981\u53d8\u5316\uff0c\u53d8\u6210$n$\u4e2a\u683c\u5b50\uff08\u76f8\u4fe1\u5927\u5bb6\u90fd\u61c2\uff09\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u5176\u4ed6\u9898\u89e3\u91cc\u7684\u56fe\u3002\n\n\u6211\u4eec\u8003\u8651\u8f6c\u79fb\u3002\n\n1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u6ca1\u6709\u5de6\u63d2\u5934\u548c\u4e0a\u63d2\u5934\n\n\u90a3\u4e48\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u6709\u4e24\u79cd\u9009\u62e9\uff0c\u4e00\u79cd\u5c31\u662f\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4e0d\u9009\uff0c\u7b2c\u4e8c\u79cd\u5c31\u662f\u76f4\u63a5\u9009\u8fd9\u4e2a\u8282\u70b9\uff0c\u5c31\u76f8\u5f53\u4e8e\u5f00\u51fa\u4e00\u4e2a\u65b0\u8054\u901a\u5757\u3002\u6bd4\u8f83\u7b80\u5355\u3002\n\n2. \u5982\u679c\u53ea\u6709\u5de6\u63d2\u5934\n\n\u5f88\u663e\u7136\uff0c\u5982\u679c\u9009\u7684\u8bdd\uff0c\u5f53\u524d\u70b9\u7684\u7f16\u53f7\u5c31\u4e0e\u5de6\u63d2\u5934\u7f16\u53f7\u76f8\u540c\u3002\n\n\u90a3\u5982\u679c\u4e0d\u9009\u5462\uff1f\u53ef\u80fd\u6709\u4eba\u4f1a\u89c9\u5f97\u4e0d\u5408\u6cd5\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u662f\u5408\u6cd5\u7684\uff0c\u56e0\u4e3a\uff0c\u6211\u4eec\u5728\u8003\u8651\u4e0b\u4e00\u884c\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u8003\u8651\u62d3\u5c55\u5de6\u63d2\u5934\u6240\u5c5e\u7684\u8054\u901a\u5757\u3002\n\n3. \u53ea\u6709\u4e0a\u63d2\u5934\n\n\u8fd9\u79cd\u60c5\u51b5\u5c31\u4f1a\u590d\u6742\u4e00\u70b9\u3002\u9996\u5148\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u4e0d\u9009\u5f53\u524d\u8282\u70b9\u7684\u8bdd\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u4ecd\u662f\u8054\u901a\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u786e\u5b9a\u8f6e\u5ed3\u7ebf\u4e0a\u662f\u5426\u8fd8\u6709\u5c5e\u4e8e\u4e0a\u63d2\u5934\u6240\u5c5e\u7684\u8054\u901a\u5757\u7684\u70b9\u3002\u5982\u679c\u5b58\u5728\u7684\u8bdd\uff0c\u5982\u679c\u5728\u5f53\u524d\u683c\u524d\u9762\u663e\u7136\u6ca1\u6709\u95ee\u9898\uff0c\u5728\u5f53\u524d\u683c\u540e\u9762\u4e5f\u610f\u5473\u7740\u540e\u9762\u4f1a\u8003\u8651\u5230\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u6709\u5f71\u54cd\u4e86\u3002\n\n4. \u4e0a\u63d2\u5934\u548c\u5de6\u63d2\u5934\u90fd\u5b58\u5728\n\n\u5982\u679c\u4e0d\u9009\u7684\u8bdd\u5c31\u548c\u60c5\u51b5\u4e09\u4e00\u6837\u5224\u65ad\u5c31\u597d\u4e86\u3002\u5982\u679c\u8981\u9009\u7684\u8bdd\u5c31\u76f8\u5f53\u4e8e\u8054\u901a\u4e24\u4e2a\u8054\u901a\u5757\uff0c\u5c31\u76f4\u63a5\u627e\u5230\u8f6e\u5ed3\u7ebf\u4e0a\u7684\u5c5e\u4e8e\u4e0a\u63d2\u5934\u6240\u5c5e\u8054\u901a\u5757\u7684\u70b9\u6539\u6210\u5c5e\u4e8e\u5de6\u63d2\u5934\u6240\u5c5e\u7684\u70b9\u5c31\u597d\u4e86\u3002\n\n\u6240\u4ee5\uff0c\u8bf4\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u6211\u56e0\u4e3a\u6700\u5c0f\u8868\u793a\u7684\u65f6\u5019\u7528\u4e86$\\text {static}$\u7136\u540e$\\text {WA}$\u7a7f\u4e86\u3002\n## $\\text {Code}$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define Int register int\n#define INF 0x7f7f7f7f\n#define MAXN 15\n\ntemplate <typename T> inline void read (T &t){t = 0;char c = getchar();int f = 1;while (c < '0' || c > '9'){if (c == '-') f = -f;c = getchar();}while (c >= '0' && c <= '9'){t = (t << 3) + (t << 1) + c - '0';c = getchar();} t *= f;}\ntemplate <typename T,typename ... Args> inline void read (T &t,Args&... args){read (t);read (args...);}\ntemplate <typename T> inline void write (T x){if (x < 0){x = -x;putchar ('-');}if (x > 9) write (x / 10);putchar (x % 10 + '0');}\n\nstruct Hash_Table{\n#define mod 590027\n\tint dp[1 << 24],top,cnt,state[1 << 24];\n\tstruct edge{\n\t\tint v,nxt;\n\t}e[600005];\n\tint head[600005];\n\tvoid Init(){\n\t\ttop = cnt = 0;\n\t\tmemset (head,0,sizeof (head));\n\t}\n\tvoid Insert_into_hash_table (int bit,int val){\n\t\tint key = bit % mod;\n\t\tfor (Int i = head[key];i;i = e[i].nxt){\n\t\t\tint v = e[i].v;\n\t\t\tif (state[v] == bit){\n\t\t\t\tdp[v] = max (dp[v],val);\n\t\t\t\treturn ;\n\t\t\t}\n\t\t}\n\t\t++ cnt;\n\t\tstate[cnt] = bit,dp[cnt] = val;\n\t\te[++ top] = edge {cnt,head[key]};head[key] = top;\n\t}\n#undef mod\n}HT[2]; \n\nint n;\nint ans = -INF,bin[MAXN],Map[MAXN][MAXN];\n\nint recode (int s0,int v){\n\tint vis[8] = {};\n\tint cnt = 0,s = 0;\n\tfor (Int i = 0;i < n;++ i){\n\t\tint x = (s0 >> (3 * i)) % 8;\n\t\tif (!x) continue;\n\t\tif (!vis[x]) vis[x] = ++ cnt;\n\t\ts += vis[x] * bin[i];\n\t}\n\tif (cnt == 1) ans = max (ans,v);\n\treturn s;\n}\n\nvoid Put_in_data(){\n\tread (n);\n\tfor (Int i = 1;i <= n;++ i)\n\t\tfor (Int j = 1;j <= n;++ j)\n\t\t\tread (Map[i][j]),ans = max (ans,Map[i][j]);\n}\n\nvoid Solve_this_problem(){\n\tint inv = 1,las = 0;\n\tHT[inv].Insert_into_hash_table (0,0); \n\tfor (Int i = 1;i <= n;++ i)\n\t\tfor (Int j = 1;j <= n;++ j){\n\t\t\tswap (inv,las);\n\t\t\tHT[inv].Init();\n\t\t\tfor (Int k = 1;k <= HT[las].cnt;++ k){\n\t\t\t\tint nowsta = HT[las].state[k],nowans = HT[las].dp[k];\n\t\t\t\tint be_down = (nowsta >> (3 * (j - 1))) % 8,be_right;\n\t\t\t\tif (j == 1) be_right = 0;\n\t\t\t\telse be_right = (nowsta >> (3 * (j - 2))) % 8; \n\t\t\t\tif (!be_down && !be_right){\n\t\t\t\t\tHT[inv].Insert_into_hash_table (recode (nowsta,nowans),nowans);\n\t\t\t\t\tHT[inv].Insert_into_hash_table (recode (nowsta + 7 * bin[j - 1],nowans + Map[i][j]),nowans + Map[i][j]);  \n\t\t\t\t}\n\t\t\t\telse if (!be_down && be_right){\n\t\t\t\t\tHT[inv].Insert_into_hash_table (recode (nowsta,nowans),nowans);\n\t\t\t\t\tHT[inv].Insert_into_hash_table (recode (nowsta + be_right * bin[j - 1],nowans + Map[i][j]),nowans + Map[i][j]);  \n\t\t\t\t}\n\t\t\t\telse if (be_down && !be_right){\n\t\t\t\t\tint cnt = 0;\n\t\t\t\t\tfor (Int p = 0;p < n;++ p)\n\t\t\t\t\t\tif ((nowsta >> (3 * p)) % 8 == be_down)\n\t\t\t\t\t\t\tcnt ++;\n\t\t\t\t\tif (cnt >= 2) HT[inv].Insert_into_hash_table (recode (nowsta - be_down * bin[j - 1],nowans),nowans);\n\t\t\t\t\tHT[inv].Insert_into_hash_table (recode (nowsta,nowans + Map[i][j]),nowans + Map[i][j]);  \n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tint cnt = 0;\n\t\t\t\t\tfor (Int p = 0;p < n;++ p)\n\t\t\t\t\t\tif ((nowsta >> (3 * p)) % 8 == be_down)\n\t\t\t\t\t\t\tcnt ++;\n\t\t\t\t\tif (cnt >= 2) HT[inv].Insert_into_hash_table (recode (nowsta - be_down * bin[j - 1],nowans),nowans);\n\t\t\t\t\tif (be_down != be_right)\n\t\t\t\t\t\tfor (Int p = 0;p < n;++ p)\n\t\t\t\t\t\t\tif ((nowsta >> (3 * p)) % 8 == be_down)\n\t\t\t\t\t\t\t\tnowsta += be_right * bin[p] - be_down * bin[p];\n\t\t\t\t\tHT[inv].Insert_into_hash_table (recode (nowsta,nowans + Map[i][j]),nowans + Map[i][j]);  \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\twrite (ans),putchar ('\\n');\n}\n\nsigned main(){\n\tPut_in_data();\n\tbin[0] = 1;\n\tfor (Int i = 1;i <= n;++ i) bin[i] = bin[i - 1] << 3;\n\tSolve_this_problem ();\n\treturn 0;\n}\n```",
        "postTime": 1588915139,
        "uid": 124781,
        "name": "Walking_Dead",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3886 \u3010[JLOI2009]\u795e\u79d8\u7684\u751f\u7269\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6211](https://www.cnblogs.com/maomao9173/p/10834571.html)\n\u4eb2\u624b\u5199\u6389\u7684\u7b2c\u4e00\u9053\u6700\u5c0f\u8868\u793a\u6cd5\uff01\u54c8\u54c8\u54c8\u592a\u5f00\u5fc3\u5566~\n\n\u4e0d\u540c\u4e8e\u4ee5\u5f80\u7684\u51e0\u4e2a\u63d2\u5934$dp$\uff0c\u8fd9\u4e2a\u9898\u76ee\u7684\u8f6e\u5ed3\u7ebf\u662f\u5468\u56f4\u7684\u4e00\u5708$n$\u4e2a\u683c\u5b50\u3002\u800c\u5176\u6240\u8c13\u201c\u63d2\u5934\u201d\u4e5f\u53d8\u6210\u4e86\u76f8\u90bb\u683c\u5b50\u7684\u6240\u5c5e\u8fde\u901a\u5206\u91cf\u7f16\u53f7\uff0c\u5e76\u4e0d\u662f\u76f4\u63a5\u628a\u524d\u9762\u51e0\u4e2a\u9898\u7684\u601d\u60f3\u5f80\u4e0a\u5957\u5c31\u53ef\u4ee5\u8f7b\u677e\u89e3\u51b3\u7684\u4e86\u3002\u8fd9\u91cc\u6211\u4eec\u5c31\u8981\u91c7\u7528\u4e00\u79cd\u53eb\u6700\u5c0f\u8868\u793a\u6cd5\u7684\u4e1c\u897f\u6765\u8868\u793a\u5b83\u7684\u8fde\u901a\u6027\u4fe1\u606f\u5566~\n\n\uff08\u5176\u5b9e\u611f\u89c9\u662f\u4e0d\u662f\u79f0\u4e4b\u4e3a\u9010\u683c\u9012\u63a8\u7684\u8f6e\u5ed3\u7ebf$dp$\u6bd4\u8f83\u597d\u3002\u3002\u3002\n\n\u800c\u6700\u5c0f\u8868\u793a\u6cd5\u662f\u4ec0\u4e48\u5462\uff1f\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u73b0\u5728\u6709\u8fd9\u6837\u4e00\u4e2a\u5e8f\u5217$(5,5,3,2,4,1,3,2)$\uff0c\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u4ee3\u8868\u7b2c$i$\u4e2a\u683c\u5b50\u6240\u5c5e\u7684\u8fde\u901a\u5206\u91cf\u3002\u56e0\u4e3a\u7f16\u53f7\u662f\u4eba\u4e3a\u8bbe\u7f6e\u7684\uff0c\u6240\u4ee5\u5176\u6bcf\u4e00\u4e2a\u7f16\u53f7\u4e5f\u53ef\u4ee5\u4e00\u4e00\u6620\u5c04\u6210\u7b49\u6548\u7684\u5176\u4ed6\u7f16\u53f7\u3002\u4e3a\u4e86\u8fde\u901a\u6027\u8868\u793a\u7684\u89c4\u8303\u548c\u4e0d\u91cd\u4e0d\u6f0f\uff0c\u6211\u4eec\u5c31\u628a\u8fd9\u4e2a\u5e8f\u5217\u6574\u7406\u6210\u610f\u4e49\u7b49\u6548\u7684\u524d\u63d0\u4e0b\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5f62\u5f0f\uff0c\u5bf9\u8fd9\u4e2a\u5e8f\u5217\u5c31\u662f$(1,1,2,3,4,5,2,3)$\u3002\n\n\u6574\u7406\u7684\u8fc7\u7a0b\u5f88\u7b80\u5355\uff0c\u65e2\u7136\u8ba9\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u90a3\u5c31\u5c3d\u53ef\u80fd\u8ba9\u524d\u9762\u7684\u6bd4\u540e\u9762\u7684\u5c0f\u3002\u4ece\u524d\u5411\u540e\u904d\u5386\uff0c\u5982\u679c\u5f53\u524d\u8fd9\u4e2a\u7f16\u53f7\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u5c31\u628a\u5b83\u8bb0\u5f55\u4e0b\u6765\uff0c\u6362\u6210\u65b0\u7684\u7f16\u53f7$tot+1$\u3002\u5426\u5219\u5c31\u76f4\u63a5\u5c06\u5176\u6539\u4e3a\u5df2\u7ecf\u8bb0\u5f55\u4e0b\u6765\u7684\u5bf9\u5e94\u7f16\u53f7\u3002\n\n```cpp\nvoid min_express (int &zt) {\n        // zt \u8868\u793a\u72b6\u6001\uff0ctot \u8868\u793a\u65b0\u6574\u7406\u7684\u6700\u5927\u7f16\u53f7\u3002\n\tint tot = 0, id[N] = {0};\n\tfor (int i = 0; i < n; ++i) {\n\t\tint now = get_wei (zt, i);\n\t\tif (!now) continue;\n\t\tif (id[now] != 0) {\n\t\t\tzt = alt_wei (zt, i, id[now]);\n\t\t} else {\n\t\t\tzt = alt_wei (zt, i, id[now] = ++tot);\n\t\t}\n\t}\n}\n```\n\n\u6539\u5b8c\u4ee5\u540e\u5c31\u53ef\u4ee5\u8003\u8651\u72b6\u6001\u7684\u8f6c\u79fb\u4e86\u3002\u8fd9\u4e00\u70b9\u6bd4\u8f83\u597d\u8003\u8651\uff0c\u90fd\u662f\u63d2\u5934$dp$\u7684\u5957\u8def\u4e86\u3002\u72b6\u6001\u8f6c\u79fb\u7684\u8bb2\u89e3\u6458\u81ea[\u6d1b\u8c37\u65e5\u62a5\u2014\u2014\u63d2\u5934$dp$](https://www.luogu.org/blog/efforts-will-pay-off/du-liu-dong-gui-cha-tou-dp)\u3002\uff08\u56e0\u4e3a\u6211\u592a\u61d2\u4e86$QwQ$\uff09\n\n> - \u4e0d\u9009\n\n    \u5f53\u7136\u5f97\u8003\u8651\u72b6\u6001\u5408\u7406\uff0c\u65e0\u4e0b\u63d2\u5934\u6216\u4e0b\u63d2\u5934\u6240\u5728\u8054\u901a\u5757\u8fd8\u6709\u5176\u4ed6\u63d2\u5934\uff0c\u5426\u5219\u4e0b\u63d2\u5934\u88ab\u5b64\u7acb\u800c\u4e0d\u5f62\u6210\u8054\u901a\u5757\u4e86\n\n    \u5927\u5bb6\u53d1\u73b0\u6ca1\u6709\uff1f\n\n    \u8fd9\u91cc\u6bcf\u4e2a\u72b6\u6001\u4ec5\u5408\u7406\u800c\u5df2\uff0c\u5e76\u4e0d\u80fd\u786e\u5b9a\u8fd9\u662f\u53ef\u53d6\u7684\u6700\u7ec8\u72b6\u6001\uff0c\u56e0\u4e3a\u6700\u540e\u5f97\u4fdd\u8bc1\u53ea\u6709\u4e00\u4e2a\u8054\u901a\u5757(\u5176\u5b9e\u4e0a\u6587\u4e5f)\uff0c\u8be6\u7ec6\u8bf7\u770b $update$\n\n    \u90a3\u4e3a\u4ec0\u4e48\u4e0d\u8003\u8651\u53f3\u63d2\u5934\u5462\uff1f\u800c\u8981\u5224\u65ad\u4e0b\u63d2\u5934\u5462\uff1f\n\n    \u56e0\u4e3a\u4e0b\u63d2\u5934\u4ee5\u540e\u518d\u4e5f\u4e0d\u4f1a\u5224\u65ad\u4e86\uff0c\u6240\u4ee5\u8981\u8003\u8651\u72b6\u6001\u5408\u7406\uff0c\u53f3\u63d2\u5934\u5230\u4e0b\u4e00\u884c\u81ea\u7136\u4f1a\u8003\u8651\u72b6\u6001\n\n    \u53f3\u63d2\u5934\u6765\u81ea\u4e0a\u4e00\u4e2a\u8f6c\u79fb\u72b6\u6001\uff0c\u5f88\u53ef\u80fd\u5f62\u6210\u65b0\u5757 $7$ \uff0c\u6545\u8fd9\u6837\u8f6c\u79fb\u6761\u4ef6\u4f1a\u53d8\u5f97\u4e25\u82db\uff0c\u6700\u7ec8\u7b54\u6848\u901a\u5e38\u4f1a\u5c0f\u4e8e\u6b63\u786e\u7b54\u6848\n\n    - \u9009\n\n    (1) !b1 and !b2 \u5355\u72ec\u5f62\u6210\u65b0\u5757\uff0c\u6b64\u5757\u547d\u540d\u4e3a7\n\n    (2) b1 or b2 \u6b64\u5757\u4e0e\u63d2\u5934\u76f8\u8fde\uff0c\u66f4\u65b0\u8054\u901a\u5757\u72b6\u6001\uff0c\u8fd9\u5c31\u662f\u4f1f\u5927\u7684\u6700\u5c0f\u8868\u793a\u6cd5\n\n\n\n\u4e00\u4e9b\u89e3\u91ca\uff1a\n\n- $Q$\uff1a\u4e3a\u4ec0\u4e48\u628a\u65b0\u7684\u8fde\u901a\u5757\u8bbe\u7f6e\u4e3a7\uff1f\n\n\t- $A$\uff1a\u5728\u6700\u5c0f\u8868\u793a\u6cd5\u4e0b\uff0c\u8fde\u901a\u5757\u6807\u53f7\u4ece\u5c0f\u5230\u5927\u8bb0\u5f55\u3002\u4e3a\u4e86\u9632\u6b62\u51b2\u7a81\uff0c\u6211\u4eec\u968f\u624b\u91c7\u7528\u4e00\u4e2a\u53ef\u4ee5\u91c7\u7528\u7684\u91cc\u9762\u6700\u5927\u7684\uff0c\u5230\u540e\u9762\u8fd8\u4f1a\u8fdb\u884c\u6574\u7406\u3002\n    \n- $Q$\uff1a\u8fde\u4e0a\u5176\u4ed6\u7684\u5206\u91cf\u5e94\u8be5\u600e\u4e48\u64cd\u4f5c\uff1f\n\n\t- $A$\uff1a\u76f4\u63a5\u6539\u5c31\u5b8c\u4e8b\u4e86$=\\_=$\u3002\u6bd4\u5982\u8fd9\u4e2a\u9898\u91cc\u9762\uff0c\u53ea\u8981$b1$\u548c$b2$\u6709\u4e00\u4e2a\u9009\u4e2d\uff0c\u4f60\u5c31\u53ef\u4ee5\u8fde\u4e0a\u5176\u4ed6\u5206\u91cf\uff0c\u4e3a\u4e86\u7701\u4e00\u79cd\u8ba8\u8bba\uff0c\u6211\u5bf9\u76ee\u524d\u8fd9\u4e2a\u683c\u5b50\u91c7\u7528\u4e86\u53d6\u4e24\u4e2a\u5206\u91cf\u8f83\u5927\u503c\u7684\u65b9\u6cd5\uff0c\u7136\u540e\u628a\u5176\u4ed6\u7f16\u53f7\u7b49\u4e8e\u4e24\u4e2a\u5206\u91cf\u7f16\u53f7\u8f83\u5c0f\u503c\u4e14\u4e0d\u4e3a$0$\u7684\u5757\u4e5f\u6539\u6210\u8fd9\u4e2a\u8f83\u5927\u5206\u91cf\u7684\u7f16\u53f7\u3002\n \n$Code$\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 9 + 5;\nconst int INF = 2e9;\nconst int base = 599999;\nconst int M = 600000 + 5;\n\nvoid cmax (int &x, int y) {x = max (x, y);}\n\nint ans = -INF;\n\nint n, w[N][N];\n\nint cur, las, cnt[2];\n\nint nxt[M], head[M], dp[2][M], Hash[2][M];\n\nint get_wei (int zt, int wei) {\n\treturn (zt >> (wei * 3)) % 8; // 8 \u8fdb\u5236\u72b6\u538b \n}\n\nint alt_wei (int zt, int wei, int val) {\n\treturn zt - ((get_wei (zt, wei) - val) << (wei * 3));\n} \n\nint count (int zt, int val) {\n\tint ret = -1;\n\tfor (int i = 0; i < n; ++i) {\n\t\tret += (get_wei (zt, i) == val); \n\t}\n\treturn ret;\n}\n\nvoid min_express (int &zt) {\n\tint tot = 0, id[N] = {0};\n\tfor (int i = 0; i < n; ++i) {\n\t\tint now = get_wei (zt, i);\n\t\tif (!now) continue;\n\t\tif (id[now] != 0) {\n\t\t\tzt = alt_wei (zt, i, id[now]);\n\t\t} else {\n\t\t\tzt = alt_wei (zt, i, id[now] = ++tot);\n\t\t}\n\t}\n}\n\nbool can_use (int zt) {\n\tint tot0 = 0, tot1 = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\ttot0 += get_wei (zt, i) == 0;\n\t\ttot1 += get_wei (zt, i) == 1;\n\t\tif (get_wei (zt, i) > 1) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (!tot1) return false;\n\treturn true;\n}\n\nvoid update (int zt, int val) {\n\tmin_express (zt);\n\tif (can_use (zt)) {\n\t\tans = max (ans, val);\n\t}\n\tint _zt = zt % base;\n\tfor (int i = head[_zt]; i; i = nxt[i]) {\n\t\tif (Hash[cur][i] == zt) {\n\t\t\tcmax (dp[cur][i], val); return;\n\t\t}\n\t}\n\tnxt[++cnt[cur]] = head[_zt];\n\thead[_zt] = cnt[cur];\n\tHash[cur][cnt[cur]] = zt;\n\tdp[cur][cnt[cur]] = val;\n}\n\nvoid print (int x, int y) {\n\tcout << \"r = \" << x << \" c = \" << y << endl;\n\tfor (int i = 1; i <= cnt[cur]; ++i) {\n\t\tcout << \"zt = \" << Hash[cur][i] << \"  \";\n\t\tfor (int j = 0; j < n; ++j) {\n\t\t\tif (j != 0) cout << \"_\";\n\t\t\tcout << get_wei (Hash[cur][i], j);\n\t\t}\n\t\tcout << \"  val = \" << dp[cur][i] << endl;\n\t}\n}\n\nint solve () {\n\tupdate (0, 0);\n//\tprint (0, 0);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tfor (int j = 1; j <= n; ++j) {\n\t\t\tlas = cur, cur ^= 1, cnt[cur] = 0;\n\t\t\tmemset (head, 0, sizeof (head));\n\t\t\tfor (int k = 1; k <= cnt[las]; ++k) {\n\t\t\t\tint zt = Hash[las][k];\n\t\t\t\tint b1 = (j >= 2 ? get_wei (zt, j - 2) : 0);\n\t\t\t\tint b2 = (j >= 1 ? get_wei (zt, j - 1) : 0);\n\t\t\t\tint val = dp[las][k];\n\t\t\t\t// 1. \u4e0d\u9009\u5f53\u524d\u683c\n\t\t\t\tif (!b2 || count (zt, b2)) {\n\t\t\t\t\t// \u6ca1\u6709\u63d2\u5934 b2 \u6216\u8005 \u63d2\u5934 b2 \u4e0e\u8f6e\u5ed3\u7ebf\u4e0a\u5176\u4ed6\u7684\u683c\u5b50\u8fde\u901a\n\t\t\t\t\tupdate (alt_wei (zt, j - 1, 0), val); // \u5f53\u524d\u683c\u5b50\u7f6e\u4e3a\u4e0d\u9009 \n\t\t\t\t}\n\t\t\t\tif (!b1 && !b2) { // \u65b0\u5efa\u8fde\u901a\u5206\u91cf \n\t\t\t\t\tupdate (alt_wei (zt, j - 1, 7), val + w[i][j]); \n\t\t\t\t}\n\t\t\t\tif (b1 || b2) { // \u8fde\u4e0a\u5176\u4ed6\u7684\u5206\u91cf \n\t\t\t\t\tint id = max (b1, b2), _zt = zt;\n\t\t\t\t\t_zt = alt_wei (_zt, j - 1, id);\n\t\t\t\t\tfor (int i = 0; i < n; ++i) {\n\t\t\t\t\t\tif (get_wei (_zt, i) == 0) continue;\n\t\t\t\t\t\tif (get_wei (_zt, i) == min (b1, b2)) {\n\t\t\t\t\t\t\t_zt = alt_wei (_zt, i, id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tupdate (_zt, val + w[i][j]);\n\t\t\t\t}\n\t\t\t}\n//\t\t\tprint (i, j);\n\t\t}\n\t}\n\treturn ans;\n}\n\nint main () {\n//\tfreopen (\"data.in\", \"r\", stdin);\n\tcin >> n;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tfor (int j = 1; j <= n; ++j) {\n\t\t\tcin >> w[i][j];\n\t\t}\n\t}\n\tcout << solve () << endl;\n} \n```",
        "postTime": 1557319893,
        "uid": 58698,
        "name": "Nativ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3886 \u3010[JLOI2009]\u795e\u79d8\u7684\u751f\u7269\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8981\u6c42\u5728\u65b9\u9635\u5185\u9009\u53d6\u4e00\u4e2a\u8fde\u901a\u5757\u4f7f\u5f97\u5176\u6743\u503c\u548c\u6700\u5927\u3002\n\n\u6211\u4eec\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u8981\u6c42\u9009\u53d6\u7684\u662f\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u627e\u5230\u65b9\u6cd5\uff1a\u9010\u683c dp\uff0c\u82e5\u53d1\u73b0\u8be5\u683c\u7684\u6743\u503c\u4e3a\u6b63\uff0c\u5219\u9009\u4e0a\u3002\u90a3\u4e48\u5728\u9010\u683c dp \u7684\u8fc7\u7a0b\u4e4b\u4e2d\uff0c\u8fde\u901a\u8fd9\u4e00\u8981\u6c42\u5bf9\u6211\u4eec\u7684\u9009\u53d6\u4ea7\u751f\u4e86\u4ec0\u4e48\u5f71\u54cd\u5462\uff1f\u4e8b\u5b9e\u4e0a\uff0c\u6bcf\u4e00\u6b21\u9009\u53d6\u7684\u8fc7\u7a0b\u4e2d\uff0c\u76f4\u63a5\u5f71\u54cd\u5230\u7684\u662f\u6b63\u4e0a\u65b9\u7684\u4e00\u683c\u3002\n\n\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5047\u8bbe\u5f53\u524d\u6b63\u5728 dp \u6a59\u8272\u7684\u4e00\u683c\uff0c\u84dd\u3001\u7eff\u4e24\u8272\u7684\u683c\u5b50\u53ca\u5176\u4ee5\u4e0a\u90e8\u5206\u5747\u5df2\u51b3\u7b56\u5b8c\u6bd5\u3002\u5f53\u84dd\u3001\u767d\u683c\u5b50\u5747\u4e0d\u9009\uff0c\u53ea\u9009\u7eff\u8272\u683c\u5b50\u65f6\uff0c\u82e5\u6a59\u8272\u683c\u5b50\u4e0d\u9009\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u7684\u6240\u6709\u683c\u5b50\u90fd\u4e0d\u80fd\u9009\uff0c\u5426\u5219\u6240\u6709\u88ab\u9009\u4e2d\u7684\u683c\u5b50\u5c31\u4e0d\u8fde\u901a\u4e86\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u82e5\u6a59\u8272\u683c\u5b50\u4e0d\u9009\uff0c\u5c31\u5835\u4f4f\u4e86\u8fde\u901a\u5757\u5411\u4e0b\u5ef6\u4f38\u7684\u6700\u540e\u9053\u8def\uff0c\u5bf9\u63a5\u4e0b\u6765\u7684 dp \u4ea7\u751f\u4e86\u6781\u5927\u7684\u5f71\u54cd\uff0c\u6240\u4ee5\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6a59\u8272\u683c\u5b50\u5fc5\u987b\u9009\u3002\n\n\u5f53\u7136\uff0c\u672c\u8eab\u6a59\u8272\u683c\u5b50\u53ca\u4ee5\u4e0b\u7684\u90e8\u5206\u90fd\u4e0d\u9009\u4e5f\u662f\u4e00\u79cd\u53ef\u884c\u65b9\u6848\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\u7684\u5904\u7406\u6211\u4eec\u653e\u5728\u4e0b\u6587\u6765\u8bf4\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8ie8y7xd.png)\n\n\u800c\u50cf\u4e0b\u9762\u8fd9\u79cd\u60c5\u51b5\uff0c\u7531\u4e8e\u7eff\u8272\u8fde\u901a\u5757\u4e0d\u53ea\u6709\u6a59\u8272\u683c\u5b50\u4e00\u4e2a\u5411\u4e0b\u5ef6\u4f38\u7684\u9053\u8def\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\u6a59\u8272\u683c\u5b50\u53ef\u4ee5\u9009\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u9009\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/k4ce0uns.png)\n\n\u5f53\u7136\u4e86\uff0c\u5982\u679c\u6a59\u8272\u683c\u5b50\u4e0a\u65b9\u672c\u8eab\u5c31\u6ca1\u6709\u88ab\u9009\u62e9\uff0c\u90a3\u5c31\u4e0d\u5b58\u5728\u5835\u8def\u7684\u8bf4\u6cd5\uff0c\u81ea\u7136\u662f\u53ef\u9009\u53ef\u4e0d\u9009\u3002\n\n\u7531\u6b64\u6211\u4eec\u53d1\u73b0\uff0c\u6a59\u8272\u683c\u5b50\u7684\u9009\u6cd5\u5176\u5b9e\u51b3\u5b9a\u4e8e\u6a59\u8272\u683c\u5b50\u4e0a\u65b9\u683c\u5b50\u6240\u5c5e\u7684\u8fde\u901a\u5757\u662f\u5426\u80fd\u7531\u5176\u4ed6\u7684\u4f4d\u7f6e\u5411\u4e0b\u5ef6\u4f38\u3002\u800c\u662f\u5426\u80fd\u5411\u4e0b\u5ef6\u4f38\u53d6\u51b3\u4e8e**\u5df2\u51b3\u7b56\u90e8\u5206\u548c\u672a\u51b3\u7b56\u90e8\u5206\u4ea4\u754c\u7684\u4e00\u7ebf\u65b9\u5757\u4e2d\u662f\u5426\u5b58\u5728\u4e0e\u6a59\u8272\u683c\u5b50\u4e0a\u65b9\u65b9\u5757\u5c5e\u4e8e\u540c\u4e00\u8fde\u901a\u5757**\uff08\u5982\u56fe\u4e8c\u4e2d\u65b9\u5757 3-5 \u548c 5-4 \u540c\u5c5e\u4e8e\u4e00\u4e2a\u8fde\u901a\u5757\uff09\u3002\u5728\u8fd9\u91cc\uff0c\u5bf9\u4e8e\u4ea4\u754c\u7684\u4e00\u7ebf\u65b9\u5757\uff08\u5373\u56fe\u4e00\u4e2d\u84dd\u3001\u7eff\u4e24\u8272\u7684\u65b9\u5757\uff09\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u8f6e\u5ed3\u7ebf\u3002\n\n\u4e3a\u4e86\u5224\u65ad\u6a59\u8272\u65b9\u5757\u662f\u5426\u80fd\u591f\u88ab\u9009\u62e9\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u5b58\u8f6e\u5ed3\u7ebf\u4e0a\u5404\u4e2a\u65b9\u5757\u7684\u9009\u62e9\u60c5\u51b5\u3002\u9700\u8981\u8bb0\u5f55\u7684\u662f\u8be5\u65b9\u5757\u662f\u5426\u88ab\u9009\u62e9\u4ee5\u53ca\u5982\u679c\u88ab\u9009\u62e9\uff0c\u5c5e\u4e8e\u54ea\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\n\u9898\u76ee\u7ed9\u6211\u4eec\u7684\u6570\u636e\u8303\u56f4\u662f $n\u22649$\uff0c\u6545\u5f88\u5bb9\u6613\u60f3\u5230\u4f7f\u7528\u72b6\u6001\u538b\u7f29\u7684\u65b9\u5f0f\u8bb0\u5f55\u8f6e\u5ed3\u7ebf\u4e0a\u65b9\u5757\u7684\u9009\u62e9\u60c5\u51b5\u3002\u53c8\u56e0\u4e3a\u6bcf\u4e00\u6b21\u6289\u62e9\u5b9e\u9645\u4e0a\u53ea\u4e0e\u524d\u4e00\u6b21\u6289\u62e9\u5f97\u51fa\u7684\u65b0\u72b6\u6001\u6709\u5173\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\u5b58\u50a8\u5404\u4e2a\u72b6\u6001\u3002\n\n\u8fdb\u4e00\u6b65\uff0c\u6211\u4eec\u53d1\u73b0\u5728\u8f6e\u5ed3\u7ebf\u4e0a\u6700\u591a\u51fa\u73b0 5 \u4e2a\u4e0d\u540c\u7684\u8fde\u901a\u5757\uff08\u5373\u4e0b\u56fe\u4e2d\u975e\u6a59\u8272\u6709\u8272\u683c\u7684\u90e8\u5206\uff09\uff0c\u518d\u52a0\u4e0a\u4e0d\u9009\u7684\u60c5\u51b5\uff0c\u6bcf\u4e00\u683c\u5171\u8ba1\u6709 6 \u79cd\u53ef\u80fd\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u4ee5 8 \u8fdb\u5236\u8fdb\u884c\u72b6\u6001\u538b\u7f29\uff0c\u4fbf\u4e8e\u5904\u7406\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/p76db5nx.png)\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4e3a\u4e86\u8282\u7701\u7a7a\u95f4\uff0c\u907f\u514d\u7f16\u53f7\u4e0d\u540c\uff0c\u6309\u8f6e\u5ed3\u7ebf\u4e0a\u8fde\u901a\u5757\u51fa\u73b0\u987a\u5e8f\u7531\u5c0f\u5230\u5927\u4ece 1 \u5f00\u59cb\u7f16\u53f7\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff08\u84dd\u8272\u65b9\u5757\u4e0d\u9009\uff09\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/kf4gb63r.png)\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u5728\u6bcf\u6b21\u5bf9\u6a59\u8272\u65b9\u5757\u51b3\u7b56\u7ed3\u675f\u540e\u5bf9\u542b\u6a59\u8272\u65b9\u5757\u7684\u65b0\u8f6e\u5ed3\u7ebf\u7684\u72b6\u6001\u8fdb\u884c\u91cd\u65b0\u6392\u5e8f\u3002\n\n```cpp\nint vis[8]={};\nint cnt=0,s=0;\nfor(int i=0;i<n;i++){\n\tint x=(st>>(3*i))%8;//\u9664n\u53d6\u4f59\n\tif(!x)continue;\n\tif(!vis[x])vis[x]=++cnt;//\u65b0\u7684\u8fde\u901a\u5757\n\ts+=vis[x]*base[i];//\u6062\u590d\u5341\u8fdb\u5236 \n}\nif(cnt==1)ans=max(ans,v);\n\n//\u53ea\u67091\u4e2a\u8fde\u901a\u5757\u7684\u60c5\u51b5\u53ef\u4ee5\u53d6\u5f97 \nreturn s;\nif(cnt==1)ans=max(ans,v);\n```\n\u89c2\u5bdf\u5230\u5012\u6570\u7b2c\u4e09\u6392\u7684\u8bed\u53e5\u4e86\u5417\uff1f\n```\nif(cnt==1)ans=max(ans,v);\n```\n\u8fd9\u6761\u8bed\u53e5\u53ef\u4ee5\u89e3\u51b3\u4e00\u5f00\u59cb\u63d0\u5230\u7684\u95ee\u9898\u2014\u2014\u6211\u4eec\u5c31\u6b64\u6253\u4f4f\uff0c\u4e0d\u518d\u9009\u62e9\u65b9\u5757\uff0c\u4e5f\u662f\u4e00\u79cd\u65b9\u6848\u3002\u56fe 1 \u4e2d\uff0c\u8f6e\u5ed3\u7ebf\u4e0b\u65b9\u4e0d\u5728\u65b0\u9009\u62e9\u65b9\u5757\u7684\u8fd9\u4e2a\u65b9\u6848\u5728\u6211\u4eec\u51b3\u7b56\u6a59\u8272\u65b9\u5757\u4e0a\u65b9\u7684\u90a3\u4e2a\u7eff\u8272\u65b9\u5757\u65f6\u5c31\u5df2\u7ecf\u88ab\u8ba1\u5165\u8d21\u732e\u4e86\uff0c\u6240\u4ee5\u5728\u51b3\u7b56\u6a59\u8272\u65b9\u5757\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8003\u8651\u4e0b\u65b9\u8981\u7ee7\u7eed\u9009\u62e9\u65b9\u5757\u7684\u65b9\u6848\uff0c\u4e5f\u5c31\u662f\u7eff\u8272\u8fde\u901a\u5757\u8981\u7ee7\u7eed\u5411\u4e0b\u5ef6\u4f38\u3002\n\n\u53e6\u5916\uff0c\u6211\u4eec\u8fd8\u6ce8\u610f\u5230\uff0c\u4e0a\u4e00\u6b65\u4e0d\u540c\u7684\u72b6\u6001\u8f6c\u79fb\u8fc7\u6765\u540e\u65b0\u72b6\u6001\u53ef\u80fd\u76f8\u540c\uff0c\u7531\u4e8e\u6bcf\u4e00\u4e2a\u5df2\u51b3\u7b56\u65b9\u5757\u90fd\u53ef\u80fd\u5e26\u6765\u4e24\u79cd\u65b0\u72b6\u6001\uff0c\u5c06\u6240\u6709\u7684\u72b6\u6001\u90fd\u5b58\u50a8\u4e0b\u6765\uff0c\u603b\u7684\u72b6\u6001\u6570\u8fbe\u5230\u60ca\u4eba\u7684 $2^q$\uff08\u5176\u4e2d $q$ \u4ee3\u8868\u5df2\u51b3\u7b56\u7684\u65b9\u5757\u4e2a\u6570\uff09\u7ea7\u522b\u3002\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5bf9\u72b6\u6001\u8fdb\u884c\u53bb\u91cd\u5904\u7406\u3002\u9664\u5f00\u91cd\u6392\u5e8f\u7684\u65b9\u6848\u4ee5\u5916\uff0c\u7531\u4e8e\u672c\u8eab\u4e0d\u540c\u72b6\u6001\u603b\u6570\u5c0f\uff0c\u4f46\u72b6\u6001\u6570\u503c\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u6302\u54c8\u5e0c\u8868\u7684\u65b9\u5f0f\u8fdb\u884c\u53bb\u91cd\u5904\u7406\u3002\n\n```cpp\nstruct hash{\n\tint maxn[N],state[N],np=0,cnt=0;\n\tstruct edge{\n\t\tint id,nxt;//\u5bf9\u5e94state\u4e2d\u7684id \n\t}e[N];\n\tint first[mo+5];//\u6302\u8868\u6cd5\n\tvoid add(int st,int v){\n\t\tint num=st%mo;\n\t\tfor(int i=first[num];i;i=e[i].nxt){//\u5224\u91cd \n\t\t\tif(state[e[i].id]==st){\n\t\t\t\tmaxn[e[i].id]=max(maxn[e[i].id],v);\n\t\t\t\treturn;\n\t\t\t}\n\t\tstate[++cnt]=st;//\u65b0\u589e\u4e00\u79cd\u60c5\u51b5 \n\t\tmaxn[cnt]=v;\n\t\te[++np]=(edge){cnt,first[num]};\n\t\tfirst[num]=np;\n\t}\n}ht[2];\n```\n\u800c\u72b6\u6001\u8f6c\u79fb\u7684\u8fc7\u7a0b\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u679a\u4e3e\u5176\u4e0a\u65b9\u3001\u5de6\u65b9\uff08\u5de6\u65b9\u65b9\u5757\u5c5e\u4e8e\u7684\u8fde\u901a\u5757\u4f1a\u5bf9\u5f53\u524d\u65b9\u5757\u5c5e\u4e8e\u54ea\u4e00\u4e2a\u8fde\u901a\u5757\u4ea7\u751f\u5f71\u54cd\uff09\u7684\u9009\u53d6\u60c5\u51b5\u5373\u53ef\u3002\u5177\u4f53\u7684\u8bb2\u89e3\u5728\u4ee3\u7801\u4e2d\u5566\uff0c\u5f88\u8be6\u7ec6\u3002\u5176\u4e2d\u7684 $base_i$ \u8868\u793a $8^i$\u3002\n\n```cpp\nint nw=1,la=0;//\u6eda\u52a8\u6570\u7ec4\n\tht[1].add(0,0);//\u4e00\u5f00\u59cb\u4ec0\u4e48\u90fd\u6ca1\u6709\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tswap(nw,la);//\u6eda\u52a8\n\t\t\tht[nw].pre();//\u6e05\u7a7a\n\t\t\tfor(int k=1;k<=ht[la].cnt;k++){//\u679a\u4e3e\u6240\u6709\u72b6\u6001\n\t\t\t\tint belongu,belongl,nst,sum;\n\t\t\t\tnst=ht[la].state[k];\n\t\t\t\tsum=ht[la].maxn[k];\n\t\t\t\tbelongu=(nst>>(3*(j-1)))%8;//\u9664n\u53d6\u4f59\u6cd5\u6c428\u8fdb\u5236\u4e2d\u5bf9\u5e94\u72b6\u6001 \u6c42\u7b2cj\u4f4d\u8981\u5148\u9664j-1\u4e2a8\n\t\t\t    if(j==1)belongl=0;\n\t\t\t\telse belongl=(nst>>(3*(j-2)))%8;\n\t\t\t\t//\u5206\u7c7b\u8ba8\u8bba\u4e0a\u65b9/\u5de6\u65b9\u4f4d\u7f6e\u72b6\u6001 \n\t\t\t\tif(!belongu&&!belongl){//\u90fd\u6ca1\u53d6\n\t\t\t\t    //printf(\"+\");\n\t\t\t\t\tht[nw].add(number(nst,sum),sum);\n\t\t\t\t\t//\u8be5\u70b9\u4e0d\u53d6 \u56e0\u4e3a\u8be5\u70b9\u4e0a\u65b9\u7684\u4e5f\u6ca1\u53d6 \u6240\u4ee5\u4e0d\u53d8 \n\t\t\t\t\tht[nw].add(number(nst+7*base[j-1],sum+mp[i][j]),sum+mp[i][j]);\n\t\t\t\t\t//\u8981\u53d6 \u65b0\u589e\u4e86\u4e00\u4e2a\u8fde\u901a\u5757 \u4e3a\u4e86\u907f\u514d\u51b2\u7a81 \u5c31\u7ed9\u4ed6\u4e00\u4e2a\u6700\u5927\u7684\uff08\u6c38\u4e0d\u53ef\u80fd\u53d6\u5230\uff09\u7684\u8fde\u901a\u5757\u7f16\u53f7 \n\t\t\t\t}\n\t\t\t\telse if(!belongu&&belongl){//\u53ea\u53d6\u4e86\u5de6\u8fb9 \n\t\t\t\t\tht[nw].add(number(nst,sum),sum);//\u8be5\u70b9\u4e0d\u53d6 \u5f62\u5f0f\u540c\u4e0a\n\t\t\t\t\tht[nw].add(number(nst+belongl*base[j-1],sum+mp[i][j]),sum+mp[i][j]);//\u8fde\u901a\u5757\u7f16\u53f7\u540c\u5de6 \n\t\t\t\t}\n\t\t\t\telse if(!belongl&&belongu){//\u53ea\u53d6\u4e86\u4e0a\u9762\uff08\u6700\u540e\u4e00\u6b21\u8003\u8651\u4e0a\u9762\u90a3\u4e2a\u4f4d\u5b50 \u8981\u4fdd\u8bc1\u8054\u901a\uff09 \n\t\t\t\t\tint cnt=0;//\u7edf\u8ba1\u539f\u6765\u7684\u8f6e\u5ed3\u7ebf\u4e0a\u6709\u591a\u5c11\u548c\u4e0a\u9762\u7684\u90a3\u4e00\u4e2a\u8054\u901a\uff1f\n\t\t\t\t\tfor(int l=0;l<n;l++)\n\t\t\t\t\t\tif((nst>>(3*l))%8==belongu)cnt++;\n\t\t\t\t\tif(cnt>=2)ht[nw].add(number(nst-belongu*base[j-1],sum),sum);\n\t\t\t\t\t//\u8fd8\u6709\u5176\u4ed6\u673a\u4f1a\u4f7f\u4e0a\u9762\u90a3\u4e00\u5757\u8054\u901a \u8fd9\u5757\u6709\u6743\u5229\u4e0d\u53d6\n\t\t\t\t\t//\u6ce8\u610f\u4e0a\u9762\u53d6\u4e86\u800c\u8fd9\u91cc\u6ca1\u53d6 \u72b6\u6001\u8981\u51cf\u53bb\u4e0a\u9762\u90a3\u4e00\u5757\u7684\n\t\t\t\t\tht[nw].add(number(nst,sum+mp[i][j]),sum+mp[i][j]);//\u53d6\n\t\t\t\t\t//\u8fd9\u91cc\u53d6\u4e86\u4e0a\u9762\u4e5f\u53d6\u4e86 \u4e0d\u52a0 \n\t\t\t\t}\n\t\t\t\telse{//\u5de6\u4e0a\u90fd\u53d6 \n\t\t\t\t    int cnt=0;//\u540c\u6837\u8981\u8003\u8651 \n\t\t\t\t\tfor(int l=0;l<n;l++)\n\t\t\t\t\t\tif((nst>>(3*l))%8==belongu)cnt++;\n\t\t\t\t\tif(cnt>=2)ht[nw].add(number(nst-belongu*base[j-1],sum),sum);\n\t\t\t\t\t//\u5982\u679c\u53d6 \u8981\u627f\u62c5\u5408\u5e76\u4e24\u4e2a\u8fde\u901a\u5757\u7684\u98ce\u9669\n\t\t\t\t\tif(belongu!=belongl){\n\t\t\t\t\t\t//\u8ba9\u4ed6\u4eec\u53d8\u6210\u4e00\u4e2a\u7f16\u53f7\n\t\t\t\t\t\tfor(int l=0;l<n;l++)\n\t\t\t\t\t\t    if((nst>>(3*l))%8==belongu)nst+=belongl*base[l]-belongu*base[l];\n\t\t\t\t\t}\n\t\t\t\t\t//\u4e0d\u52a0 \u540c\u4e0a \n\t\t\t\t\tht[nw].add(number(nst,sum+mp[i][j]),sum+mp[i][j]); \n\t\t\t\t}\n\t\t\t} \n\t\t}\n\t}\n```\n\n\u6700\u540e\u8fdb\u884c\u590d\u6742\u5ea6\u5206\u6790\u3002\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^3\\times k)$\uff0c\u5176\u4e2d $k$ \u662f\u4e0a\u4e00\u4e2a\u8f6e\u5ed3\u7ebf\u4e2d\u6240\u6709\u4e0d\u540c\u7684\u72b6\u6001\u603b\u6570\u3002\u4e0d\u8003\u8651\u95f4\u9694\u7684\u60c5\u51b5\uff0c$k$ \u4e00\u5b9a\u5c0f\u4e8e $A_9^5+A_9^4+A_9^3+A_9^2+A_9^1+1$\uff0c\u5373\u4e0d\u8d85\u8fc7 $20000$\uff0c\u8be5\u65f6\u95f4\u590d\u6742\u5ea6\u5b8c\u5168\u53ef\u4ee5\u63a5\u53d7\u3002\u800c\u4ee3\u78012\u4e2d\u53c2\u6570 $N$ \u7684\u503c\u4e5f\u53ef\u4ee5\u8bbe\u6210 $20000$\u3002\n\n\u5b8c\u6574\u4ee3\u7801\u53ef\u4ee5\u53c2\u8003[Walking_Dead\u7684\u535a\u5ba2](https://www.luogu.com.cn/blog/tanrui-2960967961/solution-p3886)\uff0c\u5176\u4ee3\u7801\u7684\u601d\u8def\u4e0e\u8fd9\u7bc7\u9898\u89e3\u7c7b\u4f3c\u3002",
        "postTime": 1673957314,
        "uid": 359270,
        "name": "\u662f\u9752\u767d\u5440",
        "ccfLevel": 5,
        "title": "P3886\u2014\u2014\u4e0d\u4f1a\u63d2\u5934dp\u4f60\u4e5f\u80fd\u505a"
    },
    {
        "content": "# [P3886 [JLOI2009]\u795e\u79d8\u7684\u751f\u7269](https://www.luogu.com.cn/problem/P3886)\n\n\u8fd9\u662f\u4e00\u9053\u8f6e\u5ed3\u7ebf `DP`\uff0c\u8fde\u901a\u5757\u6700\u5c0f\u8868\u793a\u6cd5\u7684\u677f\u5b50\u9898\u3002  \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/pde66ixk.png)\n\n\u5982\u56fe\u6240\u793a\uff0c\u6211\u4eec\u4e00\u683c\u4e00\u683c\u5730\u5904\u7406\u3002  \n\u5f53\u524d\u5904\u7406\u5230\u84dd\u8272\u683c\u5b50\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u84dd\u8272\u683c\u5b50\u9644\u8fd1\u7684\u6807\u6709\u5e8f\u53f7\u7684\u683c\u5b50\u3002  \n\u8fd9\u4e9b\u6807\u6709\u5e8f\u53f7\u7684\u683c\u5b50\u4fbf\u662f**\u8f6e\u5ed3\u7ebf**\u3002  \n\n\u7531\u4e8e $0/1$ \u65e0\u6cd5\u533a\u5206\u662f\u54ea\u4e2a\u8fde\u901a\u5757\uff0c\u662f\u5426\u8fde\u901a\u3002  \n\u6240\u4ee5\u6211\u4eec\u8003\u8651 $\\lceil\\frac{9}{2}\\rceil=5$ \u8fdb\u5236\uff08\u6700\u591a\u6709 $5$ \u79cd\u8fde\u901a\u5757\uff09\uff0c\u4e3a\u4e86\u65b9\u4fbf\u4f4d\u8fd0\u7b97\u7684\u5904\u7406\uff0c\u91c7\u7528 $8$ \u8fdb\u5236\u3002  \n\n\u5177\u4f53\u6765\u8bb2\uff0c\u5bf9\u4e8e\u56fe\u4e2d\u7ea2\u8272\u683c\u5b50\u3001\u9ec4\u8272\u683c\u5b50\u3001\u7eff\u8272\u683c\u5b50\u8fdb\u884c\u5904\u7406\u3002  \n\u767d\u8272\u683c\u5b50\u81ea\u7136\u6807\u53f7\u4e3a $0$\uff0c\u8868\u793a\u6ca1\u6709\u653e\u3002  \n\u8003\u8651\u81ea\u5de6\u5411\u53f3\u4f9d\u6b21\u628a\u4e0d\u540c\u989c\u8272\u7684\u683c\u5b50\u6807\u4e3a $1,2,3$\u3002  \n\u5373\u7ea2\u8272\u6807 $1$\uff0c\u9ec4\u8272\u6807 $2$\uff0c\u7eff\u8272\u6807 $3$\u3002  \n\n\u8fd9\u4fbf\u662f**\u6700\u5c0f\u8868\u793a\u6cd5**\uff0c\u7b80\u4fbf\u5730\u8868\u660e\u4e86\u4e0d\u8fde\u901a\u7684\u60c5\u51b5\u548c\u8fde\u901a\u5757\u7684\u5f52\u5c5e\u60c5\u51b5\u3002  \n\n\n\u4e3a\u4e86\u65b9\u4fbf\u8f6c\u79fb\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u4f7f\u5f97\u8fde\u901a\u5757\u81ea\u5de6\u5411\u53f3\u6309\u989c\u8272\u548c\u987a\u5e8f\u6807\u53f7\u3002  \n\u540c\u65f6\uff0c\u4ee4\u8f6e\u5ed3\u7ebf\u7684\u7b2c $j$ \u4f4d\u5373\u5f53\u524d\u7b2c $j$ \u5217\u7684\u60c5\u51b5\u3002  \n\n\n\n\u76f4\u63a5\u5b58\u50a8 $8^8$ \u7684\u60c5\u51b5\u663e\u7136\u4e0d\u4f18\uff0c\u8003\u8651\u5199\u4e00\u4e2a `hash` \u8868\uff0c\u6216\u8005\u4ee5 $O(\\log{8^8})$ \u7684\u4ee3\u4ef7\u5229\u7528 `map`\u3002  \n\n\u8f6c\u79fb\u5c31\u662f\u904d\u5386 `hash` \u8868\u6216 `map`\u3002  \n\u5224\u65ad\u4e0a\u8fb9\u548c\u5de6\u8fb9\u7684\u60c5\u51b5\uff0c\u8fdb\u884c\u6743\u503c\u8f6c\u79fb\u3002  \n\n\n\u65e2\u7136\u662f `DP`\uff0c\u6211\u4eec\u81ea\u7136\u8981\u7ef4\u62a4\u6743\u503c\u4e86\u3002  \n\u6839\u636e\u4e0a\u9762\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u65e0\u6cd5\u5f97\u51fa\u7b54\u6848\u5728\u54ea\u91cc\u3002  \n\u6240\u4ee5\uff0c\u5728\u5168\u8fc7\u7a0b\u4e2d\u5bf9 $ans$ \u8fdb\u884c\u7ef4\u62a4\u3002  \n\n\u5982\u679c\u6709\u591a\u4e2a\u8fde\u901a\u5757\uff0c\u600e\u4e48\u529e\u5462\uff1f  \n\u663e\u7136\uff0c\u6211\u4eec\u6839\u636e\u8f6c\u79fb\u548c\u72b6\u6001\u662f\u65e0\u6cd5\u5206\u522b\u5b58\u50a8\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u6743\u503c\u7684\uff0c\u53ea\u80fd\u7ef4\u62a4\u6743\u503c\u548c\u3002  \n\u6240\u4ee5\uff0c\u5bf9 $ans$ \u7684\u66f4\u65b0\uff0c\u5f53\u4e14\u4ec5\u5f53\u6700\u5c0f\u8868\u793a\u6cd5\u4e2d\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u8fde\u901a\u5757\u3002  \n\n\u7531\u4e8e\u662f\u7ef4\u62a4\u6743\u503c\u548c\uff0c\u6211\u4eec\u4e0d\u80fd\u5c06\u67d0\u4e2a\u8fde\u901a\u5757\u5835\u6b7b\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u77e5\u9053\u5b83\u7684\u6743\u503c\u662f\u591a\u5c11\uff0c\u5835\u6b7b\u540e\u5bf9\u6743\u503c\u548c\u7684\u5f71\u54cd\u672a\u77e5\u3002  \n\u6545\u800c\uff0c\u5728\u8ba8\u8bba\u4e0a\u8fb9\u6709\u8fde\u901a\u5757\u7684\u60c5\u51b5\u65f6\uff0c\u4e00\u5b9a\u8981\u5224\u65ad\u5982\u679c\u8fd9\u91cc\u4e0d\u9009\uff0c\u80fd\u5426\u4f7f\u8fd9\u4e2a\u8fde\u901a\u5757\u88ab\u5835\u6b7b\u3002  \n\u5982\u679c\u4f1a\u5835\u6b7b\uff0c\u90a3\u5c31\u4e00\u5b9a\u8981\u9009\u3002  \n\n\n```cpp\n#include<cstdio>\n#include<map>\n#include<cstring>\nusing namespace std;\ntypedef long long ll;\n#define  il inline\n#define pc putchar\n#define Re register int\n#define _for(i,a,b) for(register int i=(a);i<=(b);++i)\n#define __for(i,a,b) for(register int i=(a);i>=(b);--i)\nil int re(){\n\tint x=0;\n\tchar ch=getchar();\n\tbool f=0;\n\twhile(ch<'0'||ch>'9')\n\t\tf|=(ch=='-'),ch=getchar();\n\twhile(ch>='0'&&ch<='9')\n\t\tx=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn f?-x:x;\n}\nvoid pr(int x){\n\tif(x<0) x=-x,pc('-');\n\tif(x>9) pr(x/10);\n\tpc(x%10|48);\n}\nconst int A=10;\nint bin[A],n;\nint now;\nmap<int,int> f[2];\nil int max(int a,int b){\n\treturn a>b?a:b;\n}\nil void add(int x,int y){//\u52a0\u70b9\n\tif(f[now].find(x)==f[now].end())\n\t\tf[now][x]=y;\n\telse f[now][x]=max(f[now][x],y);\n}\nint ans=-1e9;\nint ss[A];\nil int calc(int p,int v){//\u8ba1\u7b97\u8f6e\u5ed3\u7ebf\u72b6\u6001\n\tint num=0,s=0;\n\tmemset(ss,0,sizeof(ss));\n\tfor(Re i=0;i<n;++i){\n\t\tint x=p>>(3*i)&7;\n\t\tif(!x) continue;\n\t\tif(!ss[x]) ss[x]=++num;\n\t\ts+=ss[x]*bin[i];\n\t}\n\tif(num==1&&ans<v) ans=v;//\u5f53\u4e14\u4ec5\u5f53\u6709\u4e00\u4e2a\u8fde\u901a\u5757\n\treturn s;\n}\nil bool check(int p,int p2){//\u5224\u65ad\u5982\u679c\u586b0\u80fd\u5426\u5835\u6b7b\n\tint num=0;\n\tfor(Re i=0;i<n;++i)\n\t\tif((p>>(3*i)&7)==p2)\n\t\t\t++num;\n\treturn num>=2;\n}\n\nsigned main(){\n\tn=re();\n\tadd(0,0);\n\tbin[0]=1;\n\t_for(i,1,n)\n\t\tbin[i]=bin[i-1]<<3;\n\t_for(i,1,n){\n\t\t_for(j,1,n){\n\t\t\tnow^=1;\n\t\t\tf[now].clear();\n\t\t\tint val=re();\n\t\t\tfor(auto &k:f[!now]){//\u904d\u5386\n\t\t\t\tint p=k.first,v=k.second;\n\t\t\t\tint p1=0,p2=(p>>(3*(j-1)))&7;//\u4e0a\u8fb9\n\t\t\t\tif(j!=1)\n\t\t\t\t\tp1=(p>>(3*(j-2)))&7;//\u5de6\u8fb9\n\t\t\t\tif(!p1&&!p2){\n\t\t\t\t\tadd(calc(p,v),v);\n\t\t\t\t\tadd(calc(p+7*bin[j-1],v+val),v+val);\n\t\t\t\t}\n\t\t\t\telse if(p1&&!p2){\n\t\t\t\t\tadd(calc(p,v),v);\n\t\t\t\t\tadd(calc(p+p1*bin[j-1],v+val),v+val);\n\t\t\t\t}\n\t\t\t\telse if(!p1&&p2){\n\t\t\t\t\tif(check(p,p2))\n\t\t\t\t\t\tadd(calc(p-p2*bin[j-1],v),v);\n\t\t\t\t\tadd(calc(p,v+val),v+val);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(check(p,p2))\n\t\t\t\t\t\tadd(calc(p-p2*bin[j-1],v),v);\n\t\t\t\t\tif(p1!=p2)//\u5408\u5e76\n\t\t\t\t\t\tfor(Re i=0;i<n;++i)\n\t\t\t\t\t\t\tif((p>>(3*i)&7)==p2)\n\t\t\t\t\t\t\t\tp+=p1*bin[i]-p2*bin[i];\n\t\t\t\t\tadd(calc(p,v+val),v+val);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpr(ans);\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1678848386,
        "uid": 609626,
        "name": "St_john",
        "ccfLevel": 0,
        "title": "P3886 [JLOI2009]\u795e\u79d8\u7684\u751f\u7269"
    },
    {
        "content": "\u6700\u5c0f\u8868\u793a\u6cd5\u63d2\u5934 DP\u3002\n\n\u8003\u8651\u8bbe $dp_{i,j,Status}$ \u8868\u793a\u5f53\u524d\u9012\u63a8\u5230 $(i,j)$\uff0c\u8f6e\u5ed3\u7ebf\u4e0a\u63d2\u5934\u7684\u6700\u5c0f\u8868\u793a\u4e3a $Status$\u3002$W(x)$ \u8868\u793a\u8f6e\u5ed3\u7ebf\u4e0a\u4ece\u5de6\u5f80\u53f3\u7b2c $x-1$ \u4e2a\u63d2\u5934\u7684\u6240\u5c5e\u8fde\u901a\u5757\uff08$0$ \u8868\u793a\u4e0d\u5b58\u5728\uff09\u3002\n\n\u5982\u679c\u9009\u5f53\u524d\u683c\u5b50\uff0c\u5c31\u66b4\u529b\u7528\u5e76\u67e5\u96c6\u66f4\u65b0\u4e00\u904d\u6700\u5c0f\u8868\u793a\u6cd5\u3001\n\n\u5982\u679c\u4e0d\u9009\u5f53\u524d\u683c\u5b50\uff0c\u524d\u63d0\u662f\u8fd9\u4e0d\u662f\u8be5\u683c\u5728\u8f6e\u5ed3\u7ebf\u6240\u5bf9\u5e94\u63d2\u5934\u7684\u8fde\u901a\u5757\u7684\u5728\u8f6e\u5ed3\u7ebf\u4e0a\u7684\u552f\u4e00\u7684\u63d2\u5934\u3002\u7136\u540e $W(column)\\to 0$\uff0c$W(column-1)\\to 0$\u3002\n\n```cpp\nvoid Dp()\n{\n  dp_pre.push_back({0, 0});\n  For(i, 1, n)\n  {\n    for (auto &z : dp_pre)\n      z.first >>= 3;\n    For(j, 1, n)\n    {\n      for (auto z : dp_pre) \n      {\n        int W(z.second);\n        Uncompress(z.first);\n        memset(id, 0, sizeof id);\n        cnt = 0;\n        if (fir[up[j]] != j or last[up[j]] != j)\n        {\n          memcpy(res, up, sizeof up);\n          res[j - 1] = res[j] = 0;\n          Cmx(dp_now[Compress(res)], W);\n        }\n        For(w, 0, n)\n          f[w] = up[w] ? w : -1;\n        f[j] = f[j - 1] = j;\n        For(w, 0, n)\n          Merge(w, last[up[w]]);\n        For(w, 0, n)\n          if (~Getf(w))\n          {\n            int &t(id[Getf(w)]);\n            res[w] = t ? t : t = ++cnt; \n          }else \n            res[w] = 0;\n        Cmx(dp_now[Compress(res)], W + mapp[i][j]);\n      }\n      dp_pre = dp_now.Out();\n      dp_now.Clear();\n    }\n  }\n  for (auto i : dp_pre)\n  {\n    Uncompress(i.first);\n    if (mx == 1)\n      Cmx(ans, i.second);\n  }\n}\n```",
        "postTime": 1674135740,
        "uid": 312306,
        "name": "LJ07",
        "ccfLevel": 0,
        "title": "[Solution]P3886 [JLOI2009]\u795e\u79d8\u7684\u751f\u7269"
    },
    {
        "content": "## \u89e3\u6790\n\n### \u4e00\u4e2a\u9519\u89e3\n\n\u8fde\u901a\u5757\u4e5f\u53ef\u4ee5\u8868\u793a\u4e3a\u6709\u5c94\u8def\u5f84\uff08\u6216\u8005\u8bf4\u751f\u6210\u6811\uff1f\uff09\uff0c\u56e0\u6b64\u4e5f\u53ef\u679a\u4e3e\u4e00\u4e2a\u683c\u5b50\u7684\u6240\u6709\u63d2\u5934\u72b6\u6001\uff08\u8fd9\u91cc\u7684\u63d2\u5934\u8868\u793a\u8def\u5f84\u65b9\u5411*\uff09\n\n\u4f46\u8fd9\u6837\u590d\u6742\u5ea6\u59a5\u59a5\u5730\u70b8\u4e0a\u5929\uff08\u60f3\u60f3\u4e00\u4e2a\u8fde\u901a\u5757\u6709\u591a\u5c11\u751f\u6210\u6811\uff09\n\n\u4e14\u5bf9\u4e8e\u6700\u5927\u503c\u95ee\u9898\u53ea\u662f\u8dd1\u4e45\u4e00\u70b9\uff0c\u5982\u679c\u662f\u65b9\u6848\u6570\u5c31\u5b8c\u5168\u9519\u4e86\n\n### \u8fde\u901a\u5757\u7684\u63d2\u5934\u8868\u793a\n\n\u6211\u4eec\u53ef\u4ee5\u66f4\u6539\u4e0b\u63d2\u5934\u7684\u5b9a\u4e49\uff1a\u4e00\u4e2a\u63d2\u5934\u4e0d\u4ee3\u8868\u8def\u5f84\u7684\u65b9\u5411\uff0c\u800c\u8868\u793a\u8be5\u683c**\u53ef\u4ee5**\u5411\u8fd9\u4e2a\u65b9\u5411 \"\u62d3\u5c55\"\uff08\u6216\u8005\u8bf4\u8be5\u683c\u88ab\u9009\u4e86\uff09\n\n-   \u5bf9\u4e8e\u5b58\u5728\u5de6\u63d2\u5934\u6216\u4e0a\u63d2\u5934\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u5165\u8be5\u683c\u5b50\uff0c\u5ef6\u4f38\u6216\u5408\u5e76\u8fde\u901a\u5757\uff0c\u5e76\u65b0\u589e\u4e24\u4e2a\u63d2\u5934\uff1b\u6216\u8005\u4e0d\u9009\uff0c\u5c31\u6ca1\u6709\u63d2\u5934\uff0c\u5e76\u4e14**\u8981\u68c0\u67e5\u662f\u4e0d\u662f\u6709\u8fde\u901a\u5757\u95ed\u5408\u4e86**\uff08\u5bf9\u4e8e\u8fd9\u9898\u95ed\u5408\u4e86\u8be5\u72b6\u6001\u5c31\u4e0d\u80fd\u7ee7\u7eed dp\uff09\uff0c\u4ee5\u53ca\u95ed\u5408\u7684\u8fde\u901a\u5757\u6570\u76ee\u3002\n\n-   \u5982\u679c\u4e0d\u5b58\u5728\u5de6\u63d2\u5934\u6216\u4e0a\u63d2\u5934\uff0c\u6211\u4eec\u4e5f\u53ef\u9009\u6216\u4e0d\u9009\u3002\u4f46\u5982\u679c\u9009\u7684\u8bdd\u5c31\u662f\u65b0\u5efa\u8fde\u901a\u5757\u4e86\u3002\n\n&nbsp;\n\n\u5bf9\u4e8e\u8fd9\u9898\u7684\u7b54\u6848\u7edf\u8ba1\uff0c\u6bcf\u6b21\u5f80\u54c8\u5e0c\u8868\u4e2d\u585e\u5165\u72b6\u6001\u65f6\uff0c\u53ea\u8981\u8f6e\u5ed3\u7ebf\u4e0a\u7684\u4e0d\u540c\u8fde\u901a\u5757\u7684\u63d2\u5934\u79cd\u7c7b**\u53ea\u6709\u4e00\u79cd**\u5c31\u53ef\u4ee5\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u4ee5\u53ca\u95ed\u5408**\u4e00\u4e2a**\u8fde\u901a\u5757\uff0c\u4e14\u4e4b\u540e\u8f6e\u5ed3\u7ebf\u4e0a\u6ca1\u6709\u591a\u4f59\u63d2\u5934\u7684\u72b6\u6001\uff08\u4f1a\u88ab\u4e22\u5f03\uff09\u4e5f\u53ef\u4ee5\u7edf\u8ba1\u7b54\u6848\uff1b\u4e0d\u8fc7\u5728\u95ed\u5408\u524d\u540c\u6837\u7684\u7b54\u6848\u4e00\u5b9a\u5df2\u7ecf\u88ab\u7edf\u8ba1\u8fc7\uff08\u56e0\u4e3a\u53ea\u6709\u4e0d\u9009\u683c\u5b50\uff0c\u4e0d\u66f4\u65b0\u8d21\u732e\u624d\u53ef\u80fd\u95ed\u5408\uff09\uff0c\u8fd9\u79cd\u60c5\u51b5\u5176\u5b9e\u4e0d\u7528\u7ba1\u3002\n\n### \u6700\u5c0f\u8868\u793a\u6cd5\n\n\u53e6\u5916\uff0c\u7531\u4e8e\u5355\u4e2a\u8fde\u901a\u5757\u7684\u63d2\u5934\u53ef\u80fd\u5f88\u591a\uff0c\u8fd8\u4f1a\u6709\u591a\u4e2a\u4e0d\u540c\u8fde\u901a\u5757\uff0c\u4e3a\u4e86\u907f\u514d\u76f8\u540c\u72b6\u6001\u7684**\u8868\u793a\u65b9\u6cd5\u4e0d\u552f\u4e00**\uff0c\u6211\u4eec\u8fd8\u8981\u7528\u6700\u5c0f\u8868\u793a\u6cd5\uff08\u8fd9\u91cc\u53ea\u4ecb\u7ecd\u4e00\u79cd\uff0c\u53ef\u80fd\u8fd8\u6709\u5f88\u591a\uff09\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u540c\u4e00\u8fde\u901a\u5757\u7684\u63d2\u5934\u6807\u540c\u4e00\u4e2a\u5e8f\u53f7\uff0c\u5e8f\u53f7\u4ece $1$ \u5f00\u59cb\uff1b\u5bf9\u4e8e\u4e00\u79cd\u8f6e\u5ed3\u7ebf\u72b6\u6001\u7684\u6240\u6709\u8868\u793a\u65b9\u6cd5\uff0c\u6211\u4eec\u53d6\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u3002\n\n\u4f8b\u5982\u8be5\u56fe\u7684\u6700\u5c0f\u8868\u793a\u6cd5\u5c31\u662f `\"10002\"`\uff08`\"0\"` \u8868\u793a\u65e0\u63d2\u5934\uff0c\u4ece\u8f6e\u5ed3\u7ebf\u5de6\u81f3\u53f3\u7f16\u7801\uff0c\u8fd8\u6709\u5176\u5b83\u7f16\u7801\u53ef\u80fd\u4f8b\u5982 `\"20001\"`, `\"30007\"`\uff09\n\n![\u6700\u5c0f\u8868\u793a](https://cdn.luogu.com.cn/upload/image_hosting/gwbuesli.png)\n\n\u7136\u540e\u6211\u4eec\u5728\u6bcf\u6b21\u5411\u54c8\u5e0c\u8868\u63d2\u5165\u5143\u7d20\u524d**\u91cd\u65b0\u7f16\u7801**\u5373\u53ef\u3002\n\n### \u5bf9\u4e8e\u6362\u884c\n\n\u7531\u4e8e\u8fd9\u91cc\u7684\u63d2\u5934\u5e76\u4e0d\u4e00\u5b9a\u8981\u62d3\u5c55\uff0c\u56e0\u6b64\u5bf9\u4e8e**\u5b58\u5728\u5411\u5730\u56fe\u5916\u7684\u63d2\u5934**\uff0c\u6211\u4eec\u9009\u62e9\u53bb\u6389\u8fd9\u4e2a\u65e0\u7528\u63d2\u5934\u800c\u4e0d\u662f\u629b\u5f03\u8be5\u72b6\u6001\n\n## CODE\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#define ll long long\nusing std::vector;\n\nconst int M =1e6+3;\n\nint n;\nint map[9][9];\nstruct qwq{\n\tint state, pre;\n\tll sum;\n\tqwq(int s, int p, ll su):state(s), pre(p), sum(su){}\n};\nint pos[M];\nvector<qwq> hsh, dp;\n\ninline int get(int state, int x){\n\tint p =(1<<((x<<1)+x));\n\tint a =(bool)(state&p), b =(bool)(state&(p<<1)), c =(bool)(state&(p<<2));\n\treturn a+(b<<1)+(c<<2);\n}\n\ninline void upd(int &state, int x, int val){ state +=-(get(state, x)<<((x<<1)+x))+(val<<((x<<1)+x)); }\n\n/*\u94fe\u5f0f\u524d\u5411\u661f*/\ninline void push(qwq nw){\n\t/*\u5148\u91cd\u65b0\u7f16\u7801\uff0c\u786e\u4fdd\u5b57\u5178\u5e8f\u6700\u5c0f*/\n\tbool vis[8] ={0};\n\tint ncol =1, col[8];\n\tfor(int i =0; i < n+1; ++i){\n\t\tint pg =get(nw.state, i);\n\t\tif(pg != 0 && !vis[pg])\n\t\t\tvis[pg] =1, col[pg] =ncol++;\n\t}\n\tfor(int i =0; i < n+1; ++i){\n\t\tint pg =get(nw.state, i);\n\t\tif(pg != 0)\n\t\t\tupd(nw.state, i, col[pg]);\n\t}\n\tint key =nw.state%M;\n\tfor(int p =pos[key]; p != -1; p =hsh[p].pre)\n\t\tif(hsh[p].state == nw.state){\n\t\t\tif(nw.sum > hsh[p].sum)\n\t\t\t\thsh[p].sum =nw.sum;\n\t\t\treturn;\n\t\t}\n\tnw.pre =pos[key];\n\thsh.push_back(nw);\n\tpos[key] =hsh.size()-1;\n}\n\ninline void clearhsh(){\n\thsh.clear();\n\tmemset(pos, -1, sizeof(pos));\n}\n\ninline bool find(int state, int pg){\n\tint a =pg&1, b =pg&2, c =pg&4;\n\twhile(state){\n\t\tif((state&1) == a && (state&2) == b && (state&4) == c)\n\t\t\treturn 1;\n\t\tstate >>=3;\n\t}\n\treturn 0;\n}\n\ninline int count(int state){\n\tbool vis[8] ={0};\n\tint cnt =0;\n\tfor(int i =0; i < n+1; ++i){\n\t\tint pg =get(state, i);\n\t\tif(pg != 0 && !vis[pg])\n\t\t\tvis[pg] =1, ++cnt;\n\t}\n\treturn cnt;\n}\n\nll ans =-0x3f3f3f3f3f3f3f3f;\n\ninline void updans(ll sum){\n\tif(sum > ans)\n\t\tans =sum;\n}\n\ninline void checkans(qwq nw){\n\tif(count(nw.state) < 2)\n\t\tupdans(nw.sum);\n}\n\n/*\u68c0\u67e5\u53ea\u6709\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u7b54\u6848*/\ninline void work(){\n\tclearhsh();\n\tdp.push_back(qwq(0, -1, 0));\n\tfor(int i =0; i < n; ++i){\n\t\tfor(int k =0; k < (int)dp.size(); ++k)\n\t\t\tdp[k].state <<=3;\n\t\tfor(int j =0; j < n; ++j){\n\t\t\tfor(int k =0; k < (int)dp.size(); ++k){\n\t\t\t\tqwq nw =dp[k];\n\t\t\t\tif(get(nw.state, n+1) != 0)/*\u6bd4\u8f83\u7279\u6b8a\uff0c\u4e0d\u8df3\u8fc7\u800c\u662f\u53bb\u6389\u65e0\u7528\u63d2\u5934*/\n\t\t\t\t\tupd(nw.state, n+1, 0);\n\t\t\t\t/*0 \u65e0\u63d2\u5934*/\n\t\t\t\tint pg1 =get(nw.state, j), pg2 =get(nw.state, j+1);/*plug*/\n\t\t\t\tif(pg1 == 0 && pg2 == 0){\n\t\t\t\t\t/*\u4e0d\u9009\uff0c\u8d21\u732e\u6ca1\u53d8*/\n\t\t\t\t\tpush(nw);\n\t\t\t\t\t/*\u9009*/\n\t\t\t\t\tnw.sum +=map[i][j];\n\t\t\t\t\tupd(nw.state, j, 7), upd(nw.state, j+1, 7);/*\u7528 7 \u4fdd\u8bc1\u4e0d\u4f1a\u4e0e\u5df2\u6709\u63d2\u5934\u7f16\u53f7\u91cd\u590d*/\n\t\t\t\t\tpush(nw);\n\t\t\t\t\tcheckans(nw);\n\t\t\t\t}\n\t\t\t\telse if(pg1 == 0 || pg2 == 0){\n\t\t\t\t\tint pg =(pg1 == 0) ? pg2 : pg1;\n\t\t\t\t\tupd(nw.state, j, 0), upd(nw.state, j+1, 0);\n\t\t\t\t\tif(find(nw.state, pg))/*\u8d21\u732e\u6ca1\u53d8\uff0c\u4e0d\u7edf\u8ba1*/\n\t\t\t\t\t\tpush(nw);\n\t\t\t\t//\telse if(nw.state == 0)/*\u8981\u6c42\u4ec5\u6709\u7684\u4e00\u5757\u95ed\u5408*//*\u4e4b\u524d\u4e00\u5b9a\u7edf\u8ba1\u8fc7*/\n\t\t\t\t//\t\tupdans(nw.sum);\n\t\t\t\t\t\n\t\t\t\t\tnw.sum +=map[i][j];\n\t\t\t\t\tupd(nw.state, j, pg), upd(nw.state, j+1, pg);\n\t\t\t\t\tpush(nw);\n\t\t\t\t\tcheckans(nw);\n\t\t\t\t}\n\t\t\t\telse if(pg1 != pg2){/*\u4e0d\u540c\u5206\u91cf*/\n\t\t\t\t\tupd(nw.state, j, 0), upd(nw.state, j+1, 0);\n\t\t\t\t\tif(find(nw.state, pg1) && find(nw.state, pg2))\n\t\t\t\t\t\tpush(nw);\n\t\t\t\t\t/*\u8fd9\u91cc\u4e24\u4e2a\u8fde\u901a\u5757\u90fd\u6709\u53ef\u80fd\u5206\u522b\u95ed\u5408*/\n\t\t\t\t\t/*\u8fd9\u91cc\u5982\u679c\u8f6e\u5ed3\u7ebf\u4e0a\u6ca1\u63d2\u5934\u4e86\uff0c\u72b6\u6001\u662f\u4e24\u4e2a\u8fde\u901a\u5757\uff0c\u4e0d\u80fd\u7edf\u8ba1\u7b54\u6848*/\n\t\t\t\t\t\n\t\t\t\t\tfor(int p =0; p < n+1; ++p)\n\t\t\t\t\t\tif(get(nw.state, p) == pg2)\n\t\t\t\t\t\t\tupd(nw.state, p, pg1);\n\t\t\t\t\tnw.sum +=map[i][j];\n\t\t\t\t\tupd(nw.state, j, pg1), upd(nw.state, j+1, pg1);\n\t\t\t\t\tpush(nw);\n\t\t\t\t\tcheckans(nw);\n\t\t\t\t}\n\t\t\t\telse{/*\u76f8\u540c\u5206\u91cf*/\n\t\t\t\t\tupd(nw.state, j, 0), upd(nw.state, j+1, 0);\n\t\t\t\t\tif(find(nw.state, pg1))/*\u8d21\u732e\u6ca1\u53d8\uff0c\u4e0d\u7edf\u8ba1*/\n\t\t\t\t\t\tpush(nw);\n\t\t\t\t//\telse if(nw.state == 0)/*\u4e4b\u524d\u4e00\u5b9a\u7edf\u8ba1\u8fc7*/\n\t\t\t\t//\t\tupdans(nw.sum);\n\t\t\t\t\t\n\t\t\t\t\tnw.sum +=map[i][j];\n\t\t\t\t\tupd(nw.state, j, pg1), upd(nw.state, j+1, pg1);\n\t\t\t\t\tpush(nw);\n\t\t\t\t\tcheckans(nw);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdp.swap(hsh);\n\t\t\tclearhsh();\n\t\t}\n\t}\n}\n\nint main(){\n\tscanf(\"%d\", &n);\n\tfor(int i =0; i < n; ++i)\n\t\tfor(int j =0; j < n; ++j)\n\t\t\tscanf(\"%d\", &map[i][j]);\n\twork();\n\tprintf(\"%lld\", ans);\n}\n```",
        "postTime": 1594987361,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3886 \u3010[JLOI2009]\u795e\u79d8\u7684\u751f\u7269\u3011"
    },
    {
        "content": "> \u7ed9\u5b9a\u4e00\u4e2a $n\\times n$ \u7684\u68cb\u76d8\uff0c\u6bcf\u4e2a\u65b9\u683c\u90fd\u6709\u4e00\u4e2a\u6743\u503c\uff0c\u6c42\u6743\u503c\u548c\u6700\u5927\u8fde\u901a\u5757\u7684\u6743\u503c\u3002\u4e0d\u80fd\u4e0d\u9009\u3002\n>\n> $1\\le n\\le 9$\n\n\u4e0e\u56de\u8def\u65e0\u5173\uff0c\u6211\u4eec\u7684\u8f6e\u5ed3\u7ebf\u4e0a\u751a\u81f3\u90fd\u4e0d\u9700\u8981\u8003\u8651\u63d2\u5934\u4e86\uff0c\u800c\u662f\u5c06\u4e00\u884c\u4e0a\u683c\u5b50\u7684\u9009\u53d6\u60c5\u51b5\u4f5c\u4e3a\u8f6e\u5ed3\u7ebf\u3002\n\n\u4f46\u6bd5\u7adf\u6240\u9009\u683c\u5b50\u4e4b\u95f4\u5fc5\u987b\u4e92\u76f8\u8fde\u901a\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u8f6e\u5ed3\u7ebf\u5728\u8868\u793a\u683c\u5b50\u7684\u9009\u53d6\u60c5\u51b5\u7684\u540c\u65f6\uff0c\u8fd8\u9700\u8981\u5c06\u9009\u53d6\u683c\u5b50\u7684\u8fde\u901a\u6027\u8868\u793a\u51fa\u6765\u3002\n\n\u4e00\u884c $9$ \u4e2a\u683c\u5b50\uff0c\u6700\u591a\u4f1a\u4ea7\u751f $5$ \u4e2a\u8fde\u901a\u5757\uff0c\u518d\u52a0\u4e0a\u8868\u793a\u4e0d\u9009\u7684\u72b6\u6001 $0$\uff0c\u4e3a\u4e86\u51d1 $2$ \u8fdb\u5236\uff0c\u6211\u4eec\u4e0d\u59a8\u4f7f\u7528 $8$ \u8fdb\u5236\u6570\u6765\u8868\u793a\u8f6e\u5ed3\u7ebf\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u8f6c\u79fb\u3002\n\n\u9996\u5148\u5bf9\u4e8e\u4e00\u4e2a\u8f6e\u5ed3\u7ebf\uff0c\u6bd4\u5982 $(3,3,3,4,5)$\uff0c\u663e\u7136\u548c $(1,1,1,2,3)$ \u672c\u8d28\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u4e3a\u4e86\u4f7f\u5f97\u672c\u8d28\u76f8\u540c\u7684\u8f6e\u5ed3\u7ebf\u72b6\u6001\u4e5f\u76f8\u540c\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5f97\u5230\u7684 $8$ \u8fdb\u5236\u6570\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u6700\u5c0f\u8868\u793a\u6cd5\uff0c\u5c06\u5176\u53d8\u6210\u672c\u8d28\u76f8\u540c\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u72b6\u6001\uff0c\u518d\u8fdb\u884c dp\u3002\n\n\u800c\u6700\u5c0f\u8868\u793a\u6cd5\uff0c\u5c31\u662f\u9664\u62ec\u53f7\u5e8f\u5217\u4e4b\u5916\u53e6\u4e00\u79cd\u8868\u793a\u8fde\u901a\u4fe1\u606f\u7684\u65b9\u6cd5\u3002\n\n\u800c\u5bf9\u4e8e\u5f53\u524d\u683c\u7684\u8f6c\u79fb\uff1a\n\n- \u82e5\u5f53\u524d\u683c\u5de6\u4fa7\u548c\u4e0a\u4fa7\u90fd\u6ca1\u6709\u9009\uff0c\u5219\u65e2\u53ef\u4ee5\u9009\u62e9\u7ef4\u6301\u73b0\u72b6\u3001\u5f53\u524d\u683c\u4e5f\u4e0d\u9009\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u9009\u62e9\u5f53\u524d\u683c\uff0c\u65b0\u5efa\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u800c\u5bf9\u4e8e\u8fd9\u4e2a\u65b0\u5efa\u7684\u8fde\u901a\u5757\uff0c\u6211\u4eec\u76f4\u63a5\u5c06\u5176\u6807\u4e3a $7$\uff0c\u8fc7\u4e00\u904d\u6700\u5c0f\u8868\u793a\u6cd5\u518d\u66f4\u65b0\u5373\u53ef\u3002\n- \u82e5\u5f53\u524d\u683c\u5de6\u4fa7\u9009\u4e86\uff0c\u4e0a\u4fa7\u6ca1\u9009\uff0c\u5219\u5f53\u524d\u683c\u4e5f\u53ef\u4ee5\u8003\u8651\u4e0d\u9009\u6216\u8005\u5ef6\u4f38\u5de6\u4fa7\u8fde\u901a\u5757\u3002\n- \u82e5\u5f53\u524d\u683c\u5de6\u4fa7\u6ca1\u9009\uff0c\u4e0a\u4fa7\u9009\u4e86\uff0c\u5219\u5f53\u524d\u683c\u4e5f\u53ef\u4ee5\u8003\u8651\u5ef6\u4f38\u4e0a\u4fa7\u8fde\u901a\u5757\uff1b\u4f46\u8981\u6ce8\u610f\u5982\u679c\u5f53\u524d\u683c\u4e0d\u9009\uff0c\u9700\u8981\u4fdd\u8bc1\u4e0a\u4fa7\u683c\u5b50\u6240\u5728\u8fde\u901a\u5757\u5728\u8f6e\u5ed3\u7ebf\u4e0a\u7684\u5176\u4ed6\u4f4d\u7f6e\u4e5f\u6709\u683c\u5b50\u9732\u51fa\u6765\uff0c\u624d\u80fd\u66f4\u65b0.\n- \u82e5\u5f53\u524d\u683c\u5de6\u4fa7\u548c\u4e0a\u4fa7\u90fd\u9009\u4e86\uff0c\u5219\u53ef\u4ee5\u8003\u8651\u9009\u62e9\u5f53\u524d\u683c\uff0c\u5e76\u5c06\u8f6e\u5ed3\u7ebf\u4e0a\u6240\u6709\u7684\u4e0a\u4fa7\u8fde\u901a\u5757\u7684\u6807\u53f7\u6539\u4e3a\u5de6\u4fa7\u8fde\u901a\u5757\u6807\u53f7\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u9009\u5f53\u524d\u683c\uff0c\u4f46\u8be5\u51b3\u7b56\u7684\u7ea6\u675f\u4e0e\u4e0a\u4e00\u60c5\u51b5\u4e0d\u9009\u7684\u7ea6\u675f\u76f8\u540c\u3002\n\n\u518d\u5957\u4e2a hash \u8868\u5373\u53ef\u3002\n\n\u6bcf\u8f6c\u79fb\u4e00\u683c\uff0c\u5224\u65ad\u4e00\u4e0b\u5f53\u524d hash \u8868\u4e2d\u7684\u6bcf\u4e00\u4e2a\u72b6\u6001\uff0c\u82e5\u8f6e\u5ed3\u7ebf\u4e0a\u53ea\u6709\u4e00\u4e2a\u8fde\u901a\u5757\u5c31\u66f4\u65b0\u4e00\u4e0b\u7b54\u6848\u3002\n\n\u6ce8\u610f\u5982\u679c\u68cb\u76d8\u4e0a\u7684\u6743\u503c\u5168\u90fd\u4e3a\u975e\u6b63\u6570\uff0c\u8f93\u51fa\u68cb\u76d8\u4e0a\u6700\u5927\u7684\u4e00\u4e2a\u6743\u503c\u5c31\u884c\u3002\n\n```cpp\nh[now].insert(0,0);\nfor (int i=1;i<=n;i++){\n\tfor (int j=1;j<=n;j++){\n\t\tla=now,now^=1;\n\t\th[now].clear();\n\t\tfor (int k=1;k<=h[la].tot;k++){ //\u8f6c\u79fb\n\t\t\tint p=h[la].val[k],v=h[la].sum[k];\n\t\t\tint now1=(p>>((j-1)*3))%8,now2=(p>>(j*3))%8;\n\t\t\tif (!now1&&!now2){\n\t\t\t\th[now].insert(p,v);\n\t\t\t\th[now].insert(getmin(p^(7<<(j*3))),v+a[i][j]);\n\t\t\t}else if (now1&&!now2){\n\t\t\t\th[now].insert(p,v);\n\t\t\t\th[now].insert(getmin(p^(now1<<(j*3))),v+a[i][j]);\n\t\t\t}else if (!now1&&now2){\n\t\t\t\th[now].insert(p,v+a[i][j]);\n\t\t\t\tbool flag=0;\n\t\t\t\tfor (int s=1;s<=n;s++){\n\t\t\t\t\tif (s==j) continue;\n\t\t\t\t\tif ((p>>(s*3))%8==now2) flag=1;\n\t\t\t\t}\n\t\t\t\tif (flag==1) h[now].insert(getmin(p^(now2<<(j*3))),v);\n\t\t\t}else if (now1&&now2){\n\t\t\t\tint q=p;\n\t\t\t\tfor (int s=1;s<=n;s++){\n\t\t\t\t\tif ((q>>(s*3))%8==now2) q^=(now1<<(s*3))^(now2<<(s*3));\n\t\t\t\t}\n\t\t\t\th[now].insert(getmin(q),v+a[i][j]);\n\t\t\t\tbool flag=0;\n\t\t\t\tfor (int k=1;k<=n;k++){\n\t\t\t\t\tif (k==j) continue;\n\t\t\t\t\tif ((p>>(k*3))%8==now2) flag=1;\n\t\t\t\t}\n\t\t\t\tif (flag==1) h[now].insert(getmin(p^(now2<<(j*3))),v);\n\t\t\t}\n\t\t}\n\t\tfor (int k=1;k<=h[now].tot;k++){ //\u66f4\u65b0\u7b54\u6848\n\t\t\tint p=h[now].val[k];\n\t\t\tif (p==0) continue;\n\t\t\tmemset(vis,0,sizeof(vis));\n\t\t\tint cnt=0;\n\t\t\tvis[0]=1;\n\t\t\tfor (int s=1;s<=n;s++){\n\t\t\t\tif (!vis[(p>>(s*3))%8]) vis[(p>>(s*3))%8]=1,++cnt;\n\t\t\t}\n\t\t\tif (cnt==1) ans=max(ans,h[now].sum[k]);\n\t\t}\n\t}\n}\n```",
        "postTime": 1674472646,
        "uid": 257621,
        "name": "\u7ffc\u5fb7\u5929\u5c0a",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3886 [JLOI2009]\u795e\u79d8\u7684\u751f\u7269"
    },
    {
        "content": "\u6709\u4e00\u4e2a\u6734\u7d20\u7684\u60f3\u6cd5\u662f\u8981\u6c42\u5f53\u524d\u884c\u5fc5\u987b\u548c\u4e0a\u4e00\u884c\u6709\u8fde\u63a5\uff0c\u8fd9\u662f\u9519\u8bef\u7684\uff1a\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2a\u8fde\u901a\u5757\u518d\u5728\u4e0b\u65b9\u8fde\u63a5\u3002\n\n\u4e8e\u662f\u9700\u8981\u8bb0\u5f55\u72b6\u6001\u4e2d\u6bcf\u4e2a\u683c\u5b50\u5c5e\u4e8e\u7684\u8fde\u901a\u5757\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u6574\u6570\u7f29\u8d77\u6765\u3002\n\n\u6309\u884c\u8f6c\u79fb\u590d\u6742\u5ea6\u7206\u70b8\uff0c\u8003\u8651\u4e00\u6b21\u53ea\u586b\u4e00\u683c\u3002\u8fd9\u9700\u8981\u6211\u4eec\u8bb0\u5f55\u8f6e\u5ed3\u7ebf\u4e0a $n$ \u4e2a\u683c\u5b50\u6240\u5c5e\u7684\u8fde\u901a\u5757\u3002\u76f8\u540c\u7684\u8fde\u901a\u5757\u6807\u53f7\u65b9\u5f0f\u53ef\u80fd\u4e0d\u540c\uff0c\u9700\u8981\u94a6\u70b9\u4e00\u79cd\u6807\u53f7\u65b9\u5f0f\uff1a\u8fde\u901a\u5757\u6807\u53f7\u4e3a\u8fde\u901a\u5757\u6700\u5de6\u4fa7\u683c\u5b50\u5728\u6240\u6709\u8fde\u901a\u5757\u4e2d\u7684\u6392\u540d\u3002\n\n\u72b6\u6001\u7a7a\u95f4\u5927\u4f46\u662f\u7cfb\u6570\uff0c\u53ef\u7528\u4e00\u4e2a\u86e4\u5e0c\u8868\u5b58\u50a8\u5f53\u524d\u72b6\u6001\u8fdb\u884c\u8f6c\u79fb\u3002\n\n\u8f6c\u79fb\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n- \u5f53\u524d\u683c\u5de6\u3001\u4e0a\u5747\u65e0\u8fde\u901a\u5757\uff1a\n\n\t\u6b64\u65f6\u53ef\u4ee5\u9009\u6216\u4e0d\u9009\uff0c\u9009\u5219\u65b0\u5efa\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\n- \u5f53\u524d\u683c\u4ec5\u5de6\u4fa7\u6709\u8fde\u901a\u5757\uff1a\n\n\t\u6b64\u65f6\u9009\u5219\u7ee7\u627f\u5de6\u4fa7\u683c\u5b50\u7684\u6807\u53f7\u3002\n    \n- \u5f53\u524d\u683c\u4ec5\u4e0a\u65b9\u6709\u8fde\u901a\u5757\uff1a\n\n\t\u82e5\u4e0a\u65b9\u7684\u8fde\u901a\u5757\u5728\u8f6e\u5ed3\u7ebf\u4e0a\u4ec5\u6709\u8fd9\u4e00\u4e2a\u683c\u5b50\uff0c\u5219\u4e0d\u9009\u8be5\u683c\u5c31\u4f1a\u4f7f\u8fde\u901a\u5757\u6c38\u4e45\u4e0d\u80fd\u8f6c\u79fb\u3002\u6b64\u65f6\u9700\u8981\u66f4\u65b0\u7b54\u6848\uff0c\u5e76\u4e0d\u80fd\u8ba9\u5176\u7ee7\u7eed\u53c2\u4e0e\u540e\u9762\u7684\u8f6c\u79fb\u3002\n    \n- \u5f53\u524d\u683c\u5de6\u3001\u4e0a\u5747\u6709\u8fde\u901a\u5757\uff1a\n\t\n    \u9009\u5219\u9700\u8981\u5408\u5e76\u4e24\u4e2a\u8fde\u901a\u5757\u3002\u4e0d\u9009\u4e5f\u8981\u540c\u4e0a\u8003\u8651\u4e0a\u65b9\u8fde\u901a\u5757\u80fd\u5426\u7ee7\u7eed\u8f6c\u79fb\u3002\n\n```cpp\n#define int ll\nconst int N = 16;\nconst ll INF = 0x7FFFFFFFFFFFFFFF;\nint n, a[N][N];\n\nunordered_map<ll, int> f, g;\nvoid check(ll s, int v) {\n\tauto it = g.find(s);\n\tif (it == g.end()) g[s] = v;\n\telse it->second = max(it->second, v);\n}\nint gp(ll s, int p) { return (s >> (p << 2)) & 15; }\nvoid sp(ll &s, ll p, ll c) { s = (s & (INF ^ (15ll << (p << 2)))) | (c << (p << 2)); }\nll minimize(ll s) {\n\tint tag[16] {}, cnt = 0;\n\tU (i, 0, n - 1) {\n\t\tint c = gp(s, i); if (!c) continue;\n\t\tif (!tag[c]) tag[c] = ++cnt;\n\t\tsp(s, i, tag[c]);\n\t}\n\treturn s;\n}\nll merge(ll s, int p) {\n\tint x = gp(s, p), y = gp(s, p - 1);\n\tif (x == y) return s;\n\tU (i, 0, n - 1) if (gp(s, i) == x)\n\t\tsp(s, i, y);\n\treturn minimize(s);\n}\nbool valid(ll s, int p) { // confirm \n\tint c = gp(s, p);\n\tU (i, 0, n - 1) if (p != i && gp(s, i) == c)\n\t\treturn 1; // \u8981\u6c42\u8fd9\u4e2a\u8fde\u901a\u5757\u4e0d\u4f1a\u65ad\u4ee3\n\treturn 0;\n}\nbool answer(ll s) {\n\tint c = 0;\n\tif (!s) return 0;\n\tU (i, 0, n - 1) if (gp(s, i)) {\n\t\tif (!c) c = gp(s, i);\n\t\telse if (gp(s, i) != c) return 0;\n\t}\n\treturn 1;\n}\n\n\nsigned main() {\n//\tfreopen(\"3886.in\", \"r\", stdin);\n//\tfreopen(\"3886.out\", \"w\", stdout);\n\trd(n); U (i, 0, n - 1) U (j, 0, n - 1) rd(a[i][j]);\n\tf[0] = 0; int ant = INT_MIN;\n\n\tU (i, 0, n - 1) {\n\t\tU (j, 0, n - 1) {\n\t\t\tfor (auto [s, cur] : f) {\n\t\t\t\tll t = 0, ans = cur + a[i][j];\n\t\t\t\t\n\t\t\t\t// \u9009\u8fd9\u4e00\u683c \u9009\u662f\u4e00\u5b9a\u53ef\u4ee5\u505a\u5230\u7684\n\t\t\t\tif (j && gp(s, j - 1)) { // \u5de6\u4fa7\u6709\u67d3\u8272\n\t\t\t\t\tif (gp(s, j)) { // \u4e0a\u65b9\u6709\u67d3\u8272\n\t\t\t\t\t\tt = merge(s, j);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt = s;\n\t\t\t\t\t\tsp(t, j, gp(s, j - 1));\n\t\t\t\t\t}\n\t\t\t\t} else { // \u5de6\u4fa7\u65e0\u67d3\u8272\n\t\t\t\t\tif (gp(s, j)) {\n\t\t\t\t\t\tt = s;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt = s;\n\t\t\t\t\t\tsp(t, j, 15); // \u521b\u5efa\u65b0\u8fde\u901a\u5757\n\t\t\t\t\t\tt = minimize(t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcheck(t, ans);\n\t\t\t\t\n\t\t\t\t// \u4e0d\u9009\n\t\t\t\tt = -1;\n\t\t\t\tif (gp(s, j)) {\n\t\t\t\t\tif (valid(s, j)) {\n\t\t\t\t\t\tt = s;\n\t\t\t\t\t\tsp(t, j, 0);\n\t\t\t\t\t} else if (answer(s))\n\t\t\t\t\t\tant = max(ant, cur);\n\t\t\t\t} else {\n\t\t\t\t\tt = s;\n\t\t\t\t\tsp(t, j, 0);\n\t\t\t\t}\n\t\t\t\tif (~t)\n\t\t\t\t\tcheck(t, cur);\n\t\t\t}\n\t\t\t\n\t\t\tf.swap(g);\n\t\t\tunordered_map<ll, int>().swap(g);\n\t\t\tfor (auto [s, v] : f) if (answer(s)) {\n\t\t\t\tant = max(ant, v);\n\t\t\t}\n\t\t}\n\t}\n\tcout << ant;\n}\n```",
        "postTime": 1674016003,
        "uid": 120324,
        "name": "Yansuan_HCl",
        "ccfLevel": 7,
        "title": "[\u9898\u89e3] P3886 [JLOI2009]\u795e\u79d8\u7684\u751f\u7269"
    }
]