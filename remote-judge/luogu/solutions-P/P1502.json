[
    {
        "content": "[\u7a97\u53e3\u7684\u661f\u661f](https://www.luogu.com.cn/problem/P1502)\n\n\u9898\u610f\u4e0d\u518d\u8fc7\u591a\u8d58\u8ff0\uff0c\u9996\u5148\u6211\u4eec\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5728\u4ec0\u4e48\u6761\u4ef6\u4e0b\u661f\u661f\u624d\u4f1a\u51fa\u73b0\u5728\u7a97\u6237\u4e2d\u3002\n\n\u8bbe\u67d0\u9897\u661f\u661f\u7684\u5750\u6807\u4e3a $(x,y)$ \uff0c\u5219\u5f53\u7a97\u6237\u7684\u53f3\u4e0a\u89d2\u7aef\u70b9\u7684\u5750\u6807\u51fa\u73b0\u5728 $(x\\sim x+w-1,y\\sim y+h-1)$ \u8fd9\u4e2a\u8303\u56f4\u5185\u65f6\uff0c\u661f\u661f\u5c31\u4f1a\u51fa\u73b0\u5728\u7a97\u6237\u91cc\u3002\n\n\u5982\u4e0b\u56fe\uff1a\n\n![\u661f\u661f1](https://cdn.luogu.com.cn/upload/image_hosting/koqij4kr.png)\n\n\u56e0\u4e3a\u9898\u76ee\u4e2d\u8bf4\u51fa\u73b0\u5728\u7a97\u6237\u8fb9\u6846\u7684\u661f\u661f\u4e0d\u7b97\uff0c\u6211\u4eec\u4e0d\u59a8\u5c06\u8fb9\u6846\u957f\u5bbd\u90fd\u51cf\u5c0f $0.5$ \uff0c\u6240\u4ee5\u8fb9\u754c\u5750\u6807\u8981 $-1$ \uff0c\u5373 $(x+w-1,y+h-1)$ \u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u661f\u661f\u90fd\u6269\u5c55\u6210\u4e00\u4e2a\u77e9\u5f62\uff0c\u8fd9\u65f6\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u82e5\u4e24\u4e2a\u77e9\u5f62\u4e4b\u95f4\u6709\u4ea4\u96c6\uff0c\u4ed6\u4eec\u4fbf\u53ef\u4ee5\u653e\u5728\u540c\u4e00\u4e2a\u7a97\u6237\u4e2d\u3002\n\n\u5982\u4e0b\u56fe\uff1a\n\n![\u661f\u661f2](https://cdn.luogu.com.cn/upload/image_hosting/p295zpbp.png)\n\n\u56fe\u4e2d\u7070\u8272\u7684\u90e8\u5206\u5c31\u662f\u4e24\u4e2a\u661f\u661f\u6784\u6210\u7684\u77e9\u5f62\u7684\u4ea4\u96c6\uff0c\u53ea\u8981\u7a97\u6237\u7684\u53f3\u4e0a\u89d2\u7aef\u70b9\u5728\u7070\u8272\u533a\u57df\u5185\uff0c\u5c31\u80fd\u540c\u65f6\u6846\u4f4f\u4e24\u4e2a\u661f\u661f\u3002\n\n\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u5e73\u9762\u4e0a\u6709\u82e5\u5e72\u4e2a\u77e9\u5f62\uff0c\u6bcf\u4e2a\u77e9\u5f62\u90fd\u5e26\u6709\u4e00\u4e2a\u6743\u503c\uff0c\u6c42\u5728\u54ea\u4e2a\u5750\u6807\u4e0a\u6743\u503c\u7684\u603b\u548c\u6700\u5927\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u626b\u63cf\u7ebf\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e86\uff0c\u82e5\u5f53\u524d\u661f\u661f\u7684\u4eae\u5ea6\u503c\u4e3a $l$ ,\u5219\u77e9\u5f62\u7684\u5165\u8fb9\u7684\u6743\u503c\u8bbe\u4e3a $l$ \uff0c\u51fa\u8fb9\u4e3a $-l$ \uff0c\u6b64\u65f6\u6211\u4eec\u53ea\u8981\u6c42\u626b\u63cf\u7ebf\u4e0a\u7684\u533a\u95f4\u6700\u5927\u503c\u5373\u53ef\u5f97\u51fa\u7b54\u6848\uff0c\u533a\u95f4\u67e5\u8be2\u53ef\u4ee5\u4f7f\u7528 lazy_tag \u7684\u65b9\u5f0f\u5b9e\u73b0\u3002\n\n**\u4ee3\u7801\u5b9e\u73b0\u4e0a\u7684\u4e00\u4e9b\u5c0f\u7ec6\u8282\uff1a**\n\n- \u5728\u5bf9 $x$ \u5750\u6807\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u65f6\uff0c\u5c06 $val$ \u503c\u6309\u964d\u5e8f\u6392\u5e8f\uff0c\u8fd9\u6837\u624d\u80fd\u5904\u7406\u4e24\u4e2a\u77e9\u5f62\u8d34\u5408\u7684\u60c5\u51b5\u3002\n- \u89c2\u5bdf\u5230 $0 \\leq x_i,y_i \\leq 2^{31}$ \u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u5750\u6807\u8fdb\u884c\u79bb\u6563\u5316\u5904\u7406\u3002\n\n\u65e2\u7136\u4f60\u80fd\u627e\u5230\u8fd9\u9898\uff0c\u6211\u76f8\u4fe1\u4f60\u80fd\u77ac\u95f4\u505a\u51fa\u6765\u7684\u3002\n\n```Code:```\n\n```cpp\n#include<bits/stdc++.h>\ntypedef long long LL;\ntypedef long double LD;\nusing namespace std;//\u4f60\u5728\u770b\u6211\u7684\u4ee3\u7801\u5bf9\u5427 \nconst LL N=100010;\ninline int max(int x,int y){return x>y?x:y;}\ninline int min(int x,int y){return x<y?x:y;}\ninline void swap(int &x,int &y){x^=y^=x^=y;}\nLL T,n,w,h,C[N];\nstruct Segment{\n\tLL l,r,h;\n\tLL val;\n\tbool operator <(const Segment &a)const{\n\t\treturn (h!=a.h)?h<a.h:val>a.val;\n\t}\n}Seg[N<<2];\nstruct SegmentTree{\n\tLL l,r;\n\tLL mx,add;\n\t#define l(x) tree[x].l\n\t#define r(x) tree[x].r\n\t#define mx(x) tree[x].mx\n\t#define add(x) tree[x].add\n}tree[N<<2];\nvoid init(){\n\tmemset(Seg,0,sizeof(Seg));\n\tmemset(tree,0,sizeof(tree));\n}\nvoid Pushup(LL x){\n\tmx(x)=max(mx(x<<1),mx(x<<1|1));\n}\nvoid Build(LL x,LL l,LL r){\n\tl(x)=l,r(x)=r,mx(x)=add(x)=0;\n\tif(l==r)return;\n\tLL mid=(l+r)>>1;\n\tBuild(x<<1,l,mid);\n\tBuild(x<<1|1,mid+1,r);\n}\nvoid Pushdown(LL x){\n\tmx(x<<1)+=add(x);\n\tmx(x<<1|1)+=add(x);\n\tadd(x<<1)+=add(x);\n\tadd(x<<1|1)+=add(x);\n\tadd(x)=0;\n}\nvoid Change(LL x,LL L,LL R,LL d){\n\tLL l=l(x),r=r(x);\n\tif(L<=l&&r<=R){\n\t\tmx(x)+=d;\n\t\tadd(x)+=d;\n\t\treturn;\n\t}\n\tPushdown(x);\n\tLL mid=(l+r)>>1;\n\tif(L<=mid)Change(x<<1,L,R,d);\n\tif(R>mid)Change(x<<1|1,L,R,d);\n\tPushup(x);\n}\nint main(){\n\tscanf(\"%lld\",&T);\n\twhile(T--){\n\t\tinit();\n\t\tscanf(\"%lld%lld%lld\",&n,&w,&h);\n\t\tfor(LL i=1;i<=n;i++){\n\t\t\tLL x,y,l;\n\t\t\tscanf(\"%lld%lld%lld\",&x,&y,&l);\n\t\t\tC[(i<<1)-1]=y;\n\t\t\tC[i<<1]=y+h-1;\n\t\t\tSeg[(i<<1)-1]=(Segment){y,y+h-1,x,l};\n\t\t\tSeg[i<<1]=(Segment){y,y+h-1,x+w-1,-l};\n\t\t}\n\t\tn<<=1;\n\t\tsort(C+1,C+n+1);\n\t\tsort(Seg+1,Seg+n+1);\n\t\tLL cnt=unique(C+1,C+n+1)-C-1;\n\t\tfor(LL i=1;i<=n;i++){\n\t\t\tLL pos1=lower_bound(C+1,C+cnt+1,Seg[i].l)-C;\n\t\t\tLL pos2=lower_bound(C+1,C+cnt+1,Seg[i].r)-C;\n\t\t\tSeg[i].l=pos1;\n\t\t\tSeg[i].r=pos2;\n\t\t}\n\t\tBuild(1,1,cnt);\n\t\tLL ans=0;\n\t\tfor(LL i=1;i<=n;i++){\n\t\t\tChange(1,Seg[i].l,Seg[i].r,Seg[i].val);\n\t\t\tans=max(ans,mx(1));\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1588233170,
        "uid": 137242,
        "name": "Dia\u043esi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1502 \u3010\u7a97\u53e3\u7684\u661f\u661f\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u8bf4\u662f\u4e3a\u4e0a\u4e00\u7bc7\u9898\u89e3\u505a\u4e00\u4e2a\u8865\u5145\uff0c\u5982\u679c\u4f60\u4f1a\u626b\u63cf\u7ebf\uff0c\u90a3\u4e48\u4e0a\u4e00\u7bc7\u9898\u89e3\u4f60\u80af\u5b9a\u80fd\u770b\u61c2\uff0c\u5982\u679c\u4f60\u4e0d\u4f1a\uff0c\u4f60\u53ef\u4ee5\u770b\u4e00\u4e0b\u8fd9\u7bc7\u9898\u89e3\uff0c\u6709\u4e00\u4e2a\u5165\u95e8\u4e86\u89e3\u3002\n\n\u9996\u5148\u628a\u7a97\u6237\u7684\u5de6\u4e0b\u70b9\u653e\u5728\u4e00\u4e2a\u70b9\u4e0a\u80af\u5b9a\u662f\u6bd4\u8f83\u4f18\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u6bcf\u4e2a\u661f\u661f\u90fd\u6269\u5c55\u6210\u4e00\u4e2a\u77e9\u5f62(x,y)-->(x+w-1,y+h-1),\u5982\u679c\u4e24\u4e2a\u661f\u661f\u7684\u77e9\u5f62\u76f8\u4ea4(\u6ce8\u610f\u51cf\u4e0d\u51cf\u4e00\u5e26\u6765\u76f8\u4ea4\u89c4\u5219\u7684\u4e0d\u540c)\uff0c\u6211\u4eec\u80af\u5b9a\u80fd\u591f\u5c06\u8fd9\u4e24\u4e2a\u661f\u661f\u653e\u5728\u4e00\u4e2a\u7a97\u6237\u91cc\uff0c\u53cd\u4e4b\u5219\u4e0d\u884c\u3002\n\n\u79bb\u6563\u5316\uff0c\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u662f\u57fa\u4e8ex\u79bb\u6563\u540e\u7684\u503c\u7684\u3002\n\n\u6211\u4eec\u628ax\u79bb\u6563\u540e\uff0cleft[i],right[i]\u8868\u793ai\u8fd9\u4e2a\u77e9\u5f62\u7684\u5de6\u53f3\u8fb9\u754c\uff0c\u79bb\u6563\u540e\u7684\u503c\n\n\u7136\u540e\u626b\u63cf\u7ebf\u4ece\u4e0b\u5f80\u4e0a\u626b\uff0c\u6bcf\u627e\u5230\u4e00\u6761\u77e9\u5f62\u7684\u4e0b\u8fb9\uff0c\u5c31\u5728\u5b83\u8986\u76d6\u533a\u95f4\u4e2d\u627e\u4e00\u4e2a\u6700\u5927\u7684\uff0c\u6240\u4ee5\u5c31\u662f\u533a\u95f4\u6700\u5927\u503c\u3002\n\n\u7136\u540e\u4e0d\u8bba\u662f\u4e0a\u8fb9\u8fd8\u662f\u4e0b\u8fb9\uff0c\u533a\u95f4\u52a0\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u6ce8\u610f\u628a\u4e0a\u8fb9\u7684\u8fb9\u6743\u8f6c\u4e3a\u8d1f\u7684\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cctype>\n#include<cstring>\n#define LL long long\n#define N (100001)\nusing namespace std;\ntemplate <typename T> void read(T&t) {\n\tt=0;\n\tbool fl=true;\n\tchar p=getchar();\n\twhile (!isdigit(p)) {\n\t\tif (p=='-') fl=false;\n\t\tp=getchar();\n\t}\n\tdo {\n\t\t(t*=10)+=p-48;p=getchar();\n\t}while (isdigit(p));\n\tif (!fl) t=-t;\n}\nint t,n,W,H,tot,cnt,maxans;\nint left[N],right[N]; \nstruct star{\n\tint x,y,l,id;\n\tbool fl;\n}a[N],b[N];\nstruct node{\n\tint l,r,lazy,v;\n}T[N<<2];\ninline bool cmp(star a,star b){\n\treturn a.x<b.x;\n}\ninline bool cmp1(star a,star b){\n\treturn a.y==b.y?a.l>b.l:a.y<b.y;\n}\nvoid build(int u,int l,int r){\n\tT[u].lazy=T[u].v=0;\n\tT[u].l=l,T[u].r=r;\n\tif (l==r) return; \n\tint mid=l+r>>1,kk=u<<1;\n\tbuild(kk,l,mid);\n\tbuild(kk|1,mid+1,r);\n}\nvoid pushdown(int u){\n\tif (T[u].lazy){\n\t\tint aa=T[u].lazy,kk=u<<1;\n\t\tT[u].lazy=0;\n\t\tT[kk].v+=aa;\n\t\tT[kk].lazy+=aa;\n\t\tT[kk|1].v+=aa;\n\t\tT[kk|1].lazy+=aa;\n\t}\n}\nint query(int u,int L,int R){\n\tif (L<=T[u].l&&T[u].r<=R) return T[u].v;\n\tpushdown(u);\n\tint ret=0,k=u<<1,mid=T[u].l+T[u].r>>1;\n\tif (L<=mid) ret=query(k,L,R);\n\tif (R>mid) ret=max(ret,query(k|1,L,R));\n\treturn ret;\n}\nvoid add(int u,int L,int R,int k){\n\tif (L<=T[u].l&&T[u].r<=R){\n\t\tT[u].v+=k;\n\t\tT[u].lazy+=k;\n\t\tpushdown(u);\n\t\treturn;\n\t}\n\tpushdown(u);\n\tint mid=T[u].l+T[u].r>>1,vv=u<<1;\n\tif (L<=mid) add(vv,L,R,k);\n\tif (R>mid) add(vv|1,L,R,k);\n\tT[u].v=max(T[vv].v,T[vv|1].v);\n}\nint main(){\n\tread(t);\n\twhile (t--){\n\t\tcnt=tot=maxans=0;\n\t\tread(n),read(W),read(H);\n\t\tfor (int i=1;i<=n;i++){\n\t\t\tread(a[i].x),read(a[i].y),read(a[i].l);\n\t\t\ta[i].id=i; a[i].fl=0;\n\t\t\tb[i].y=a[i].y,b[i].l=a[i].l;\n\t\t\tb[i].id=i;\n\t\t}\n\t\ttot=n;\n\t\tfor (int i=1;i<=n;i++){\n\t\t\ta[++tot].x=a[i].x+W-1;\n\t\t\ta[tot].id=i;\n\t\t\ta[tot].fl=1;\n\t\t}\n\t\tsort(a+1,a+tot+1,cmp);\n\t\tfor (int i=1;i<=tot;i++){\n\t\t\tint tt=0;\n\t\t\tif (a[i].x==a[i-1].x&&i!=1) tt=cnt;\n\t\t\telse tt=++cnt;\n\t\t\tif (!a[i].fl) left[a[i].id]=tt;\n\t\t\telse right[a[i].id]=tt;\n\t\t}\n\t\t//for (int i=1;i<=n;i++) printf(\"%d %d\\n\",left[i],right[i]);\n\t\ttot=n;\n\t\tfor (int i=1;i<=n;i++){\n\t\t\tb[++tot].y=b[i].y+H-1;\n\t\t\tb[tot].l=-b[i].l;\n\t\t\tb[tot].id=b[i].id;\n\t\t}\n\t\tsort(b+1,b+tot+1,cmp1);\n//\t\tfor (int i=1;i<=tot;i++) printf(\"%d %d %d\\n\",b[i].id,b[i].y,b[i].l);\n\t\tbuild(1,1,cnt);\n\t\tfor (int i=1;i<=tot;i++){\n\t\t\tif (b[i].l>0){\n\t\t\t\tint num=query(1,left[b[i].id],right[b[i].id]);\n\t\t\t\t//printf(\" %d %d %d\\n\",left[b[i].id],right[b[i].id],num);\n\t\t\t\tif (num+b[i].l>maxans) maxans=num+b[i].l;\n\t\t\t}\n\t\t\tadd(1,left[b[i].id],right[b[i].id],b[i].l);\n\t\t}\n\t\tprintf(\"%d\\n\",maxans);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1517807787,
        "uid": 15232,
        "name": "Michael_Li",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1502 \u3010\u7a97\u53e3\u7684\u661f\u661f\u3011"
    },
    {
        "content": "\u9898\u610f\u5927\u81f4\u662f\u7ed9\u51fa\u82e5\u5e72\u4e2a\u70b9\u4ee5\u53ca\u70b9\u7684\u6743\u503c\uff0c\u7ed9\u51fa\u4e00\u4e2a\u77e9\u5f62\uff0c\u6c42\u77e9\u5f62\u80fd\u6846\u4f4f\u7684\u6700\u5927\u7684\u6743\u503c\u662f\u591a\u5c11\u3002\n\n\u6211\u4eec\u5c06\u53cc\u65b9\u7684\u89d2\u8272\u8f6c\u6362\u4e00\u4e0b\uff0c\u5c06\u8fd9\u4e9b\u70b9\u770b\u505a\u662f\u4e00\u4e2a\u4e2a\u77e9\u5f62\u7684\u5de6\u4e0b\u89d2\u7684\u70b9(x,y)\uff0c\u90a3\u4e48(\u53ef\u4ee5\u6846\u4f4f\u8fd9\u4e2a\u70b9\u7684\u77e9\u5f62)\u7684\u53f3\u4e0a\u89d2\u70b9\u5750\u6807\u7684\u96c6\u5408(\u8bf4\u96c6\u5408\u4e0d\u592a\u4e25\u8c28)\u5c31\u53ef\u4ee5\u770b\u505a\u662f\u4e00\u4e2a\u77e9\u5f62\uff0c\u5176\u53f3\u4e0a\u89d2\u4e3a (x+w,y+h)\u3002\n\n\u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u7ed9\u51fa\u82e5\u5e72\u4e2a\u5e26\u6743\u503c\u7684\u77e9\u5f62\uff0c\u6c42\u6700\u5927\u7684\u77e9\u5f62\u4ea4\u3002\uff08\u7a0d\u5fae\u6709\u70b9\u4e0d\u540c\uff0c\u8fd9\u4e2a\u4e0d\u662f\u9762\u79ef\uff09\n\n\u9898\u4e2d\u6709\u8bf4\u7a97\u6237\u7684\u8fb9\u7f18\u4e0d\u80fd\u7b97\uff0c\u4e3a\u4e86\u8ba9\u6240\u6709\u7684\u77e9\u5f62\u533a\u95f4\u90fd\u662f\u95ed\u7684\uff0c\u4e0d\u59a8\u8ba9\u77e9\u5f62\u4e0a\u4e0b\u5de6\u53f3\u90fd\u7f29\u5c0f0.5\uff0c\u540c\u65f6\u9898\u4e2d\u6709\u8bf4\u6240\u6709\u5750\u6807\u90fd\u662f\u6574\u6570\uff0c\u90a3\u4e48+-0.5\u5c31\u6ca1\u6709\u5f71\u54cd\u4e86\uff0c\u6240\u4ee5\u6700\u7ec8\u5f97\u51fa\u7684\u77e9\u5f62\u5c31\u662f\u4e00\u4e2a\u5b9e\u8fb9\u7684\u77e9\u5f62\u3002\n\u5de6\u4e0b\u89d2\u5750\u6807\u4e3a(x,y),\u53f3\u4e0a\u89d2\u5750\u6807\u4e3a(x+w-1,y+h-1)\n\n\n\u6ce8\u610f\u5230\u56e0\u4e3a\u4e00\u822c\u7684\u626b\u63cf\u7ebf\u7b97\u6cd5\u4e2d\u7ebf\u6bb5\u6811\u91cc\u53f6\u5b50\u8282\u70b9i\u8868\u793a\u7ebf\u6bb5[i,i+1],\u4e5f\u5c31\u662f\u4e00\u4e2a[l,r] \u7684\u7ebf\u6bb5\u5728\u7ebf\u6bb5\u6811\u4e2d\u6db5\u76d6\u7684\u533a\u95f4\u662f[l,r-1]\n\n\u8fd9\u9053\u9898\u4e3b\u8981\u5904\u7406\u7684\u5c31\u662f\u76f8\u4ea4\u60c5\u51b5\u3002\u800c\u4e14\u95ee\u9898\u4e2d\u7684\u70b9\u5168\u90fd\u662f\u79bb\u6563\u7684\uff0c\u4e0d\u5b58\u5728\u6d6e\u70b9\u6570\uff0c\u6240\u4ee5\u6700\u540e\u7b97\u4e0b\u6765\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u6c42\u6700\u503c\u7684\u95ee\u9898\u3002\n\n\u8fd8\u6709\u4e00\u70b9\u8981\u6ce8\u610f\u7684\u662f\u5728\u6839\u636e\u6a2a\u5750\u6807\u6392\u5e8f\u7684\u65f6\u5019\uff0c\u5982\u679c\u6a2a\u5750\u6807\u76f8\u540c\u4e5f\u5c31\u662f\u7ebf\u6bb5\u91cd\u5408\u7684\u65f6\u5019\u3002\u6ce8\u610f\u5148\u52a0\u4e0a\u65b0\u7684\u518d\u51cf\u53bb\u65e7\u7684\uff0c\u5426\u5219\u91cd\u5408\u7684\u60c5\u51b5\u5c31\u6ca1\u88ab\u7b97\u5230\u3002\n\n\u6700\u540e\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define mid ((l+r)>>1)\nusing namespace std;\n\nconst int maxn=1e4+10;\nint n,tot,w,h;\nint yy[maxn<<1];\t\t\t\t\t//\u79bb\u6563\u5316\u7684y\u8f74 \nint rm[maxn<<3],flag[maxn<<3];\t\t//rm\u8868\u793a\u533a\u95f4\u6700\u5927\u503c\uff0cflag\u4e3a\u61d2\u6807\u8bb0 \u516b\u500d\u6570\u7ec4\uff0c\u56e0\u4e3a2n\u6761\u7ebf\u6bb5\uff0c\u7ebf\u6bb5\u6811\u89814\u500d\u3002 \nstruct seg\n{\n    int x,y1,y2,c;\n    seg(){}\n    seg(int xx,int yy1,int yy2,int cc){x=xx,y1=yy1,y2=yy2,c=cc;}\n}line[maxn<<1];\n\nbool cmp(const seg &a,const seg &b)//\u8fd9\u91cc\u6ce8\u610f\u6392\u5e8f\uff0cx\u76f8\u540c\u65f6\u5148\u5904\u7406\u5165\u8fb9 \n{\n\tif(a.x==b.x)return a.c>b.c;\n    return a.x<b.x;\n}\nvoid pushdown(int t,int l,int r)//\u4e0b\u4f20\u61d2\u6807\u8bb0 \n{\n    if(flag[t]==0)return;\n    rm[t]+=flag[t];\n    if(l!=r)\t\t//\u8fd9\u91cc\u4e3b\u8981\u9632\u6b62\u8d8a\u754c \n    {\n        flag[t<<1]+=flag[t];\n        flag[t<<1|1]+=flag[t];\n    }\n    flag[t]=0;\n}\nvoid modify(int t,int l,int r,int x,int y,int z)//\u533a\u95f4\u4fee\u6539 \n{\n    if(x<=l&&r<=y)\n    {\n        flag[t]+=z;\n        return;\n    }\n    if(x<=mid)modify(t<<1,l,mid,x,y,z);\n    if(y>mid)modify(t<<1|1,mid+1,r,x,y,z);\n    pushdown(t<<1,l,mid);\n    pushdown(t<<1|1,mid+1,r);\n    rm[t]=max(rm[t<<1],rm[t<<1|1]);\t//\u56de\u4f20\u6700\u503c \n}\nint main()\n{\n    int t=0;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d %d %d\",&n,&w,&h);\n        memset(rm,0,sizeof(rm));\n        memset(flag,0,sizeof(flag));\n        for(int i=1;i<=n;i++)\n        {\n            int x=0,y=0,c=0;\n            scanf(\"%d %d %d\",&x,&y,&c);\n            line[i]=seg(x,y,y+h-1,c);\n            line[i+n]=seg(x+w-1,y,y+h-1,-c);\n            yy[i]=y+h-1;\n            yy[i+n]=y;\n        }\n        n<<=1;//\u5904\u7406\u7684\u662f2n\u6761\u7ebf\u6bb5 \n        sort(yy+1,yy+1+n);//\u6392\u5e8f \n        tot=unique(yy+1,yy+1+n)-yy-1;//\u53bb\u91cd \n        sort(line+1,line+1+n,cmp);//\u6839\u636e\u6a2a\u5750\u6807\u6392\u5e8f \n        int ans=0;\n        for(int i=1;i<=n;i++)\n        {\n            int l=lower_bound(yy+1,yy+1+tot,line[i].y1)-yy;//\u4e8c\u5206\u79bb\u6563\u5316 \n            int r=lower_bound(yy+1,yy+1+tot,line[i].y2)-yy;\n            modify(1,1,tot,l,r,line[i].c);//\u4fee\u6539\uff0c\u8fd9\u91cc\u6ce8\u610f\u662fl\u548cr\uff0c\u4e00\u5f00\u59cb\u6211\u5199\u7684r-1\u7adf\u7136\u5bf9\u4e869\u4e2a\uff08\u4f46\u5b9e\u9645\u4e0a\u662f\u9519\u8bef\u7684\uff09 \n            ans=max(ans,rm[1]);//\u6bcf\u6b21\u66f4\u65b0\u6700\u503c \n        }\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```\n\n\u6700\u540e\u544a\u8beb\u81ea\u5df1\uff0c\u5177\u4f53\u95ee\u9898\u5177\u4f53\u5206\u6790\uff0c\u672c\u6765\u4e00\u5f00\u59cb\u770b\u5230\u8fd9\u9898\u76f4\u63a5\u5957\u4e86\u626b\u63cf\u7ebf\u7684\u677f\u5b50\uff0c\u540e\u6765\u81ea\u5df1\u8dd1\u4e86\u4e00\u904d\u624d\u660e\u767d",
        "postTime": 1536984335,
        "uid": 54825,
        "name": "ysj1173886760",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1502 \u3010\u7a97\u53e3\u7684\u661f\u661f\u3011"
    },
    {
        "content": "\u7f51\u4e0a\u7684\u9898\u89e3\u90fd\u662f\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42$N$\u4e2a\u77e9\u5f62\u7684\u6700\u5927\u9762\u79ef\u4ea4\u96c6\uff08\u611f\u89c9\u90fd\u4e00\u4e2a\u4eba\u5199\u7684\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u4e0d\u540c\u7684\u601d\u7ef4\u8fc7\u7a0b\n\n---------------\n\n\n\u6211\u4eec\u9996\u5148\u8003\u8651\u4e00\u7ef4\u95ee\u9898\n\n> \u7ed9\u5b9a\u4e00\u4e2a\u6570\u8f74\u4ee5\u53ca\u6570\u8f74\u4e0a\u7684\u4e00\u4e9b\u70b9\uff0c\u6c42\u7528\u4e00\u4e2a\u957f\u5ea6\u4e3a$L$\u7684\u533a\u95f4\u622a\u53d6\u7684\u6700\u5927\u7684\u70b9\u6743\u548c\n\n\u663e\u7136\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u961f\u5217\u5e76\u4fdd\u7559\u6700\u5927\u503c\u5373\u53ef\n\n\n------------\n\n\u6211\u4eec\u73b0\u5728\u5c06\u95ee\u9898\u6269\u5c55\u5230\u4e8c\u7ef4\uff0c\u5728\u7528\u961f\u5217\u4fdd\u8bc1\u7b2c1\u7ef4\u5ea6\u7684\u622a\u53d6\u5bbd\u5ea6\u4e0d\u8d85\u8fc7$W$(\u7a97\u53e3\u7684\u5bbd\u9650\u5236)\uff0c\u6211\u4eec\u8fd8\u8981\u9650\u5236\u622a\u53d6\u7684\u9ad8\u4e0d\u8d85\u8fc7$H$(\u7a97\u53e3\u7684\u957f\u9650\u5236)\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u6211\u4eec\u5f00\u4e00\u4e2a\u5168\u5c40\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u6c42\u957f\u5ea6\u4e3a$H$\u7684\u533a\u95f4\u7684\u6700\u5927\u548c\n\n\u663e\u7136\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e2a\u6700\u5927\u548c\u5e76\u4e0d\u5bb9\u6613\uff0c\u6211\u4eec\u5c06\u95ee\u9898\u8f6c\u6362\u4e3a\u533a\u95f4\u52a0\u51cf\u548c\u533a\u95f4\u6700\u5927\u503c\uff0c\u8fd9\u6837\u53ef\u4ee5\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\n\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define rep(i,a,b) for (int i=a;i<=b;i++)\nusing namespace std;\nint n,w,h;\nstruct point{\n\tint x,y,val,u,v;\n\tbool operator<(const point o)const{return x<o.x;}\n}u[10005];\nstruct node{\n\tint l,r,add,val;\n}a[1000005<<2];\n#define ls (x<<1)\n#define rs (ls|1)\n#define L a[x].l\n#define R a[x].r\n#define A a[x].add\n#define V a[x].val\nvoid build(int x,int l,int r){\n\tL=l;R=r;A=0;V=0;\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n}\nvoid updata(int x){\n\tV=max(a[ls].val,a[rs].val);\n}\nvoid pushup(int x,int val){\n\tV+=val;A+=val;\n}\nvoid down(int x){\n\tif(A){\n\t\tpushup(ls,A);\n\t\tpushup(rs,A);\n\t\tA=0;\n\t}\n}\nvoid change(int x,int l,int r,int val){\n\tif(L>=l&&R<=r)pushup(x,val);\n\telse{\n\t\tdown(x);\n\t\tint mid=(L+R)>>1;\n\t\tif(mid>=l)change(ls,l,r,val);\n\t\tif(mid<r)change(rs,l,r,val);\n\t\tupdata(x);\n\t}\n}\nint o[10005],b[10005],tot,ans;\nvoid init(){\n\tscanf(\"%lld%lld%lld\",&n,&w,&h);\n\tans=0;tot=0;\n\trep(i,1,n)scanf(\"%lld%lld%lld\",&u[i].x,&u[i].y,&u[i].val),o[i]=u[i].y;\n\tsort(u+1,u+n+1);\n\tsort(o+1,o+n+1);\n\trep(i,1,n)if(i==1||o[i]^o[i-1])b[++tot]=o[i];\n\trep(i,1,n)u[i].u=lower_bound(b+1,b+tot+1,u[i].y)-b;\n\trep(i,1,n)u[i].v=lower_bound(b+1,b+tot+1,u[i].y+h)-b-1;\n\tbuild(1,1,tot);\n\t//rep(i,1,n)printf(\"%lld %lld %lld %lld\\n\",u[i].x,u[i].y,u[i].u,u[i].v);\n    //rep(i,1,tot)printf(\"%lld \",b[i]);putchar('\\n');\n}\nvoid work(){\n\tint last=1;\n\trep(i,1,n){\n\t\tint j=u[i].x;\n\t\twhile(u[i].x==j){\n            change(1,u[i].u,u[i].v,u[i].val);\n\t\t\ti++;\n\t\t}\n\t\ti--;\n\t\twhile(last<i&&u[last].x+w<=j)\n\t\t\tchange(1,u[last].u,u[last].v,-u[last].val),last++;\n\t\t//printf(\"%lld %lld\\n\",last,i);\n\t\tans=max(ans,a[1].val);\n\t}\n}\nsigned main(){\n\tint T;\n\tscanf(\"%lld\",&T);\n\twhile(T--){\n\t\tinit();\n\t\twork();\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1576507366,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1502 \u3010\u7a97\u53e3\u7684\u661f\u661f\u3011"
    },
    {
        "content": "\u559c\u6b22\u8fd9\u4e2a\u9898\u76ee\u80cc\u666f~\n\n\u8fd9\u7c7b\u9898\u76ee\u6709\u4e00\u4e2a\u5f88\u5de7\u5999\u7684\u8f6c\u5316\uff0c\u628a\u79fb\u52a8\u7684\u7a97\u53e3\uff08\u9762\uff09\u548c\u661f\u661f\uff08\u70b9\uff09\u8f6c\u6210 \u53ef\u4ee5\u8986\u76d6\u5230\u661f\u661f\u7684\uff08\u9762\uff09\u548c\u7a97\u53e3\u7684\u5de6\u4e0b\u89d2\uff08\u70b9\uff09\n\n\u4ec0\u4e48\u610f\u601d\u5462\uff1f\uff08\u53ef\u4ee5\u7ed3\u5408\u4e0b\u9762\u7684\u56fe\u7247\u7406\u89e3\uff09\n\n\u628a\u6bcf\u4e00\u4e2a\u661f\u661f\u4f5c\u4e3a\u53f3\u4e0a\u89d2\uff0c\u5728\u5b83\u7684\u5de6\u4e0b\u65b9\u5212\u51fa\u4e00\u7247\u7a97\u53e3\u5927\u5c0f\u7684\u533a\u57df\uff0c\u8868\u793a\u53ea\u8981\u7a97\u53e3\u7684\u5de6\u4e0b\u89d2\u843d\u5728\u8fd9\u4e00\u7247\u533a\u57df\u91cc\u5c31\u4e00\u5b9a\u80fd\u8986\u76d6\u5230\u8fd9\u9897\u661f\u661f\u3002\n\n\u90a3\u4e48\u4e0d\u540c\u661f\u661f\u7684\u91cd\u53e0\u90e8\u5206\u5c31\u4ee3\u8868\u80fd\u540c\u65f6\u8986\u76d6\u8fd9\u51e0\u9897\u661f\u661f\u4e86\u3002\n\n\uff08\u4e0b\u56fe\u4e2d\uff0c\u53ea\u8981\u7a97\u53e3\u843d\u5728\u9634\u5f71\u90e8\u5206\uff0c\u5c31\u80fd\u540c\u65f6\u8986\u76d6\u5230\u4e09\u9897\u661f\u661f\uff09 \n\n![](https://img2018.cnblogs.com/blog/1397390/201811/1397390-20181108203303639-29141505.jpg)\n\n\u6240\u4ee5\u8fd9\u4e00\u9898\u7684\u89e3\u6cd5\u5c31\u662f\uff1a\n\n\u60f3\u8c61\u4e00\u6761\u626b\u63cf\u7ebf\u4ece\u5de6\u626b\u5230\u53f3\u8fb9\uff0c\u53ea\u8981\u8fdb\u5165\u4e86\u661f\u661f\u7684\u533a\u57df\uff0c\u626b\u63cf\u7ebf\u4e0a\u8fd9\u6bb5\u533a\u95f4\u5c31\u53ef\u4ee5\u53d6\u5230\u8fd9\u9897\u661f\u661f\u7684\u503c\uff0c\u7b49\u8fc7\u4e86\u533a\u57df\u518d\u51cf\u53bb\u8fd9\u9897\u661f\u661f\u7684\u503c\u3002\n\n\u90a3\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u505a\u5566\uff0c\u6bcf\u6b21\u632a\u52a8\u627e\u51fa\u533a\u95f4\u7684\u6700\u503c\u66f4\u65b0\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86\u3002\n\n \n\n------------\n\n\n\u770b\u5230\u9898\u76ee\u6700\u540e\u7684\u63d0\u793a:\u5c0f\u5361\u4e70\u7684\u7a97\u6237\u6846\u662f\u91d1\u5c5e\u505a\u7684\uff0c\u6240\u4ee5\u5728\u8fb9\u6846\u4e0a\u7684\u4e0d\u7b97\u5728\u5185\u3002\n### (\u60ca\uff01\n\n\u8fb9\u6846\u5c45\u7136\u4e0d\u7b97\uff0c\u597d\u5427\u90a3\u5c31\u53ea\u597d\u628a\u8303\u56f4\u7f29\u5c0f\uff0c\u5230\u4e86\u9634\u5f71\u90e8\u5206\u5916\u7684\u90a3\u6761\u5e73\u884cy\u8f74\u7684\u7ebf\u5c31\u53ef\u4ee5\u628a\u8fd9\u9897\u661f\u661f\u7684\u8d21\u732e\u51cf\u6389\u4e86\u3002\uff08\u7528Windows XP \u753b\u7684\u7684\u56fe\uff0c~~\u6709\u70b9\u4e11~~\uff09\n\n ![](https://img2018.cnblogs.com/blog/1397390/201811/1397390-20181108203314536-655138517.jpg)\n\n\u8fd8\u6709\uff0c\u661f\u661f\u7684\u5750\u6807\u5f88\u5927\uff0c\u8bb0\u5f97\u79bb\u6563\u5316\u3002\n\n\u5177\u4f53\u64cd\u4f5c\u7ec6\u8282\u53ef\u4ee5\u770b\u4ee3\u7801\uff08\u7528\u4e86vector\u6765\u7ef4\u62a4\u5750\u6807\u4e0a\u52a0\u548c\u51cf\u7684\u661f\u661f\uff09\n\n\uff08\u4ee3\u7801\u867d\u7136\u5f88\u957f\uff0c\u4f46\u7ed3\u6784\u8fd8\u7b97\u6e05\u6670\u5427)\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<vector>\n#include<algorithm>\n\n#define For(i,a,b) for(int i=a;i<=b;++i)\n#define Pn putchar('\\n')\n#define llg long long\n\nusing namespace std;\n\nconst int N=2e4+10;\n\nstruct LIS{\n\tint x,y,id;\n}Lis[N*2];\n\nstruct Star{\n\tint x1,x2,y1,y2;\n\tllg lgt;\n\tStar(){\n\t\tx1=0; x2=0; y1=0; y2=0;\n\t\tlgt=0;\n\t}\n}st[N];\n\nvector<int>ads[N];\nvector<int>mns[N]; \n\nint tot=0,n,m,W,H,x,y;\nllg tag[N*4],mx[N*4],ans=0;\n\nvoid read(int &v){       //\u8bfb\u5165\u4f18\u5316\uff0c\u548c\u8f93\u51fa\u4f18\u5316 \n\tv=0; bool fg=0;\n\tchar c=getchar(); if(c=='-')fg=1;\n\twhile(c<'0'||c>'9'){c=getchar(); if(c=='-')fg=1;}\n\twhile(c>='0'&&c<='9'){v=v*10+c-'0',c=getchar();if(c=='-')fg=1;}\n\tif(fg)v=-v;\n}\nvoid read(llg &v){\n\tv=0; bool fg=0;\n\tchar c=getchar(); if(c=='-')fg=1;\n\twhile(c<'0'||c>'9'){c=getchar(); if(c=='-')fg=1;}\n\twhile(c>='0'&&c<='9'){v=v*10+c-'0',c=getchar();if(c=='-')fg=1;}\n\tif(fg)v=-v;\n}\nvoid write(int x){\n\tif(x>9)write(x/10);\n\tint xx=x%10;\n\tputchar(xx+'0');\n}\n                        //\u6392\u5e8f \nbool cmpX(const LIS &a,const LIS &b){\n\treturn a.x<b.x;\n}\nbool cmpY(const LIS &a,const LIS &b){\n\treturn a.y<b.y;\n}\n                      //\u7ebf\u6bb5\u6811\u64cd\u4f5c \nvoid pDown(int o){\n\tllg tg=tag[o];  tag[o]=0;\n\tint ls=o<<1,rs=o<<1|1;\n\ttag[ls]+=tg; tag[rs]+=tg;\n\tmx[ls]+=tg; mx[rs]+=tg;\n}\nvoid Ins(int o,int l,int r,int lx,int rx,llg dt){\n\tif(lx<=l&&rx>=r){\n\t\tmx[o]+=dt; tag[o]+=dt;\n\t\treturn;\n\t}\n\tint m=(l+r)>>1;\n\tint ls=o<<1,rs=o<<1|1;\n\tif(tag[o])pDown(o);\n\tif(lx<=m)Ins(ls,l,m,lx,rx,dt);\n\tif(rx>m)Ins(rs,m+1,r,lx,rx,dt);\n\tmx[o]=max(mx[ls],mx[rs]);\n}\n\nint main(){ \n\tint T; read(T);\n\twhile(T--){ \n\t\ttot=0; ans=0;\n\t\tmemset(tag,0,sizeof(tag));\n\t\tmemset(mx,0,sizeof(mx));\n\t\t\n\t\tread(n); read(W); read(H);\n\t\tFor(i,1,n){                        //\u5b58\u4e0b\u661f\u661f\u533a\u57df\u7684\u53f3\u4e0a\u89d2\u548c\u5de6\u4e0b\u89d2 \n\t\t\tread(x); read(y); read(st[i].lgt);\n\t\t    st[i].x1=st[i].x2=st[i].y1=st[i].y2=0;\n\t\t\tLis[++tot].x=x;\n\t\t\tLis[tot].y=y,Lis[tot].id=i;\n\t\t\t \n\t\t\tLis[++tot].x=x+W-1;\n\t\t\tLis[tot].y=y-H+1,Lis[tot].id=i;\n\t\t}\n\t\tLis[0].x=-2147483600;\n\t\tLis[0].y=-2147483600;\n\t\t\n\t\tsort(Lis+1,Lis+tot+1,cmpY);        //\u5206\u522b\u5bf9X\u548cY\u79bb\u6563\u5316 \n\t\tint ty=0;\n\t\tFor(i,1,tot){\n\t\t\tif(Lis[i].y!=Lis[i-1].y)ty++;\n\t\t\tint ID=Lis[i].id;\n\t\t\tif(!st[ID].y2){\n\t\t\t\tst[ID].y2=ty;\n\t\t\t}else{\n\t\t\t\tst[ID].y1=ty;\n\t\t\t}\n\t\t}\n\t\t\n\t\tsort(Lis+1,Lis+tot+1,cmpX);\n\t\tint tx=0;\n\t\tFor(i,1,tot){\n\t\t\tif(Lis[i].x!=Lis[i-1].x)tx++;\n\t\t\tint ID=Lis[i].id; \n\t\t\tif(!st[ID].x1){\n\t\t\t\tst[ID].x1=tx;\n\t\t\t}else{\n\t\t\t\tst[ID].x2=tx;\n\t\t\t}\n\t\t}\n\t\t\n\t\tFor(i,1,tx+1){                  //\u521d\u59cb\u5316vector \n\t\t\tads[i].clear();\n\t\t\tmns[i].clear();\n\t\t}\n\t\t\n\t\tFor(i,1,n){\n\t\t\tint lx,rx;          //\u628a\u661f\u661f\u6302\u5230\u76f8\u5e94\u7684\u6a2a\u5750\u6807\u4e0a \n\t\t\tlx=st[i].x1;        //ads\u4e3a\u52a0\uff0c mns\u4e3a\u51cf \n\t\t\trx=st[i].x2+1; \n\t\t\tads[lx].push_back(i);\n\t\t\tmns[rx].push_back(i);\n\t\t}\n\t\tFor(i,1,tx){\n\t\t\tint sz;\n\t\t\t\n\t\t\tsz=mns[i].size();\n\t\t\tFor(j,0,sz-1){           //\u5148\u51cf\u540e\u52a0 \n\t\t\t\tint ID=mns[i][j];\n\t\t\t\tint lx,rx;\n\t\t\t\tlx=st[ID].y2;\n\t\t\t\trx=st[ID].y1; \n\t\t\t\tIns(1,1,ty,lx,rx,-st[ID].lgt);\n\t\t\t\t\n\t\t\t}\n\n\t\t    sz=ads[i].size();\n\t\t    For(j,0,sz-1){\n\t\t    \tint ID=ads[i][j];\n\t\t    \tint lx,rx;\n\t\t    \tlx=st[ID].y2;\n\t\t    \trx=st[ID].y1;\n\t\t    \tIns(1,1,ty,lx,rx,st[ID].lgt);\n\t\t\t}\n\t\t\tans=max(ans,mx[1]);\n\t\t}\n\t\twrite(ans); Pn;\n\t}\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1541682098,
        "uid": 86041,
        "name": "_LAUV_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1502 \u3010\u7a97\u53e3\u7684\u661f\u661f\u3011"
    },
    {
        "content": "[\u5b89\u5229\u4e00\u6ce2$blog$](https://ctz45562.github.io/2019/03/10/%E9%A2%98%E8%A7%A3-%E6%B4%9B%E8%B0%B7-P1502-%E3%80%90%E7%AA%97%E5%8F%A3%E7%9A%84%E6%98%9F%E6%98%9F%E3%80%91/)\n\n[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P1502)\n\n\u63d0\u4f9b\u4e00\u4e2a\u795e\u5947\u7684\u601d\u8def\u3002\n\n\u9996\u5148\u4e8c\u7ef4\u6570\u70b9\u80fd\u60f3\u5230\u626b\u63cf\u7ebf+\u7ebf\u6bb5\u6811\u3002\n\n\u8fb9\u6846\u4e0d\u80fd\u53d6\uff0c\u73c2\u4ee5\u628a\u957f\u3001\u5bbd\u90fd\u51cf$1$\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u8fd9\u4e48\u6846\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/53691.png )\n\n\u4e5f\u5c31\u662f\u8bf4\u8fb9\u754c\u4e0d\u53d6\u6574\u6570\u3002\n\n\u7136\u540e\u5c06\u5750\u6807\u7cfb\u4e0a\u6bcf\u4e2a\u70b9\u6269\u5c55\u4e3a\u4e00\u4e2a\u77e9\u5f62\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/53690.png )\n\n\u5927\u6982\u5c31\u662f\u8fd9\u79cd\u611f\u89c9\uff1a\u628a\u6bcf\u4e2a\u70b9\u5411\u5de6\u4e0b\u89d2\u6269\u5c55\u5f97\u5230\u5b83\u4ee3\u8868\u7684\u77e9\u5f62\u3002\n\n\u5bf9\u4e8e\u6bcf\u9897\u661f\u661f\uff0c\u628a\u5b83\u80fd\u5f71\u54cd\u5230\u7684\u77e9\u5f62\u52a0\u4e0a\u5b83\u7684\u8d21\u732e\u3002\n\n\u4e0d\u8003\u8651\u6a2a\u5750\u6807\uff0c\u5b83\u80fd\u5f71\u54cd\u5230\u7684\u77e9\u5f62\u4e3a:$y$\u5230$y+h$\u7684\u70b9\u6240\u4ee3\u8868\u7684\u6240\u6709\u77e9\u5f62\u3002\n\n\u8003\u8651\u4e0a\u6a2a\u5750\u6807\uff0c\u7528\u626b\u63cf\u7ebf\uff0c\u53ca\u65f6\u5220\u9664\u4e0d\u5728\u5f53\u524d\u6a2a\u5750\u6807\u80fd\u8986\u76d6\u7684\u661f\u661f\u3002\n\n\u8fd9\u6837\u628a\u6bcf\u4e2a\u53ef\u80fd\u7684\u77e9\u5f62\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u5927\u503c\uff0c\u8fb9\u626b\u8fb9\u53d6\u6700\u5927\u503c\u5c31\u884c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(t\u00b7nlogn)$\n\n\uff08\u8bf4\u7740\u8f7b\u5feb\u5176\u5b9e\u849f\u84bb\u8c03\u4e86\u597d\u957f\u65f6\u95f4\uff0c\u8fb9\u754c\u7684\u5904\u7406\u592a\u9ebb\u70e6\u4e86\uff0c\u5177\u4f53\u7ec6\u8282\u8fd8\u662f\u770b\u4ee3\u7801\u5427$QAQ$\uff09\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n\n#define maxn 10005\n#define inf 0x3f3f3f3f\n#define pn putchar('\\n')\n#define px(x) putchar(x)\n#define ps putchar(' ')\n#define pd puts(\"======================\")\n#define pj puts(\"++++++++++++++++++++++\")\n\nusing namespace std;\n\ninline int read(){\n\tint x=0,y=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn y?-x:x;\n}\ntemplate<typename T>\ninline T read(){\n\tT x=0;\n\tint y=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn y?-x:x;\n}\nstruct Segment_Tree{\n\tlong long dat[maxn<<2],tag[maxn<<2];\n#define ls(x) (x<<1)\n#define rs(x) (x<<1|1)\n\tinline void update(int node){\n\t\tdat[node]=max(dat[ls(node)],dat[rs(node)]);\n\t}\n\tinline void datadown(int node,long long d){\n\t\tdat[node]+=d;\n\t\ttag[node]+=d;\n\t}\n\tinline void pushdown(int node){\n\t\tdatadown(ls(node),tag[node]);\n\t\tdatadown(rs(node),tag[node]);\n\t\ttag[node]=0;\n\t}\n\tvoid add(int L,int R,int l,int r,int node,long long d){\n\t\tif(L<=l&&R>=r){\n\t\t\tdatadown(node,d);\n\t\t\treturn;\n\t\t}\n\t\tif(tag[node])pushdown(node);\n\t\tint mid=l+r>>1;\n\t\tif(L<=mid)add(L,R,l,mid,ls(node),d);\n\t\tif(R>mid)add(L,R,mid+1,r,rs(node),d);\n\t\tupdate(node);\n\t}\n\tinline void clear(){\n\t\tmemset(dat,0,sizeof dat);\n\t\tmemset(tag,0,sizeof tag);\n\t}\n}st;\nint dis[maxn];\n//\u79bb\u6563\u5316\u6570\u7ec4\nstruct POINT{\n\tint x,y,ll,rr;\n\tlong long d;\n}p[maxn];\n//\u661f\u661f\uff1ax\u3001y\u662f\u5750\u6807\uff0cll\u3001rr\u662f\u5b83\u80fd\u8986\u76d6\u7684\u77e9\u5f62\u8303\u56f4\uff0cd\u662f\u4eae\u5ea6\ninline bool cmp(POINT x,POINT y){\n\treturn x.x<y.x;\n}\nint main(){\n\tint t=read();\n\twhile(t--){\n\t\tint n=read(),w=read()-1,h=read()-1,len=0,head=1;\n        //\u957f\u5bbd\u5404-1\n\t\tfor(register int i=1;i<=n;++i)\n\t\t\tp[i].x=read(),dis[++len]=p[i].y=read(),p[i].d=read<long long>();\n\t\tdis[++len]=(1ll<<31)-1;\n        //\u52a0\u4e86\u4e00\u4e2a\u65e0\u7a77\u5927\u7684\u8fb9\u754c\n\t\tsort(dis+1,dis+1+len);\n\t\tsort(p+1,p+1+n,cmp);//\u628a\u661f\u661f\u6309\u6a2a\u5750\u6807\u6392\u5e8f\n\t\tlen=unique(dis+1,dis+1+len)-dis-1;\n\t\tlong long ans=0;\n\t\tfor(register int i=1;i<=n;++i){\n\t\t\tp[i].ll=upper_bound(dis+1,dis+1+len,p[i].y)-dis,p[i].rr=upper_bound(dis+1,dis+1+len,p[i].y+h)-dis;\n            //\u8981\u7528upper_bound\uff0c\u4e24\u8fb9\u662f\u53ef\u4ee5\u7b49\u4e8e\u7684\n\t\t\tst.add(p[i].ll,p[i].rr,1,len,1,p[i].d);\n\t\t\twhile(p[i].x-w>p[head].x)st.add(p[head].ll,p[head].rr,1,len,1,-p[head].d),++head;\n            //\u901a\u8fc7head\u5934\u6307\u9488\u5220\u9664\u70b9\n\t\t\tans=max(ans,st.dat[1]);\t\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t\tst.clear();\n\t}\n}\n\n```\n\n",
        "postTime": 1552202203,
        "uid": 111762,
        "name": "_ctz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1502 \u3010\u7a97\u53e3\u7684\u661f\u661f\u3011"
    },
    {
        "content": "## Description\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P1502)\n\n\n\u665a\u4e0a\uff0c\u5c0f\u5361\u4ece\u9633\u53f0\u671b\u51fa\u53bb\uff0c\u201c\u54c7~~~~\u597d\u591a\u661f\u661f\u554a\u201d\uff0c\u4f46\u4ed6\u8fd8\u6ca1\u7ed9\u5176\u4ed6\u623f\u95f4\u8bbe\u4e00\u4e2a\u7a97\u6237\u3002\n\n\u5929\u771f\u7684\u5c0f\u5361\u603b\u662f\u5e0c\u671b\u80fd\u591f\u5728\u665a\u4e0a\u80fd\u770b\u5230\u6700\u591a\u6700\u4eae\u7684\u661f\u661f\uff0c\u4f46\u662f\u7a97\u5b50\u7684\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\uff0c\u8fb9\u4e5f\u5fc5\u987b\u548c\u5730\u9762\u5e73\u884c\u3002\n\n\u8fd9\u65f6\u5c0f\u5361\u4f7f\u7528\u4e86\u8d85\u80fd\u529b\uff08\u900f\u89c6\u672f\uff09\u77e5\u9053\u4e86\u5899\u540e\u9762\u6bcf\u4e2a\u661f\u661f\u7684\u4f4d\u7f6e\u548c\u4eae\u5ea6\uff0c\u4f46\u662f\u5c0f\u5361\u53d1\u52a8\u8d85\u80fd\u529b\u540e\u5c31\u5f88\u75b2\u52b3\uff0c\u53ea\u597d\u62dc\u6258\u4f60\u544a\u8bc9\u4ed6\u6700\u591a\u80fd\u591f\u6709\u603b\u548c\u591a\u4eae\u7684\u661f\u661f\u80fd\u51fa\u73b0\u5728\u7a97\u53e3\u4e0a\u3002\n\n## Solution\n\n\u626b\u63cf\u7ebf\u3002\n\n\u76f4\u63a5\u60f3\u70b9\u548c\u9762\u7684\u5173\u7cfb\u5176\u5b9e\u4e0d\u592a\u597d\u60f3\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u8de8\u7ef4\u5ea6\u7684\u4e1c\u897f\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u663e\u7136\u4e0d\u80fd\u5bf9\u9762\u8fdb\u884c\u964d\u7ef4\u6253\u51fb\u3002\n\n\u6240\u4ee5\u8003\u8651\u628a\u70b9\u53d8\u6210\u9762\uff0c\u7136\u540e\u518d\u8fdb\u4e00\u6b65\u53bb\u60f3\u3002\n\n\u53ef\u4ee5\u628a\u6bcf\u4e2a\u70b9$(x, y)$\u6269\u5c55\u4e3a$(x, y) \\to (x+w-1, y+h-1)$\u7684\u77e9\u5f62\uff0c\u4e8e\u662f\u8fd9\u4e2a\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e8c\u7ef4\u7684\u95ee\u9898\uff0c\u5927\u6982\u53ef\u4ee5\u8868\u8ff0\u4e3a\u6c42$n$\u4e2a\u5e26\u6743\u77e9\u5f62\u7684\u5e76\u7684\u6700\u5927\u503c\u3002\n\n\u6ce8\u610f\u8fd9\u91cc\u7684$-1$\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u8fb9\u6846\u4e0a\u7684\u661f\u661f\u4e0d\u7b97\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u626b\u63cf\u7ebf$+$\u79bb\u6563\u5316$+$\u7ebf\u6bb5\u6811\u6c42\u3002\n\n\u79bb\u6563\u5316\u3002\u5426\u5219$2^{31}$\u7684\u6570\u636e\u8303\u56f4\u6211\u4eec\u65e0\u6cd5\u5904\u7406\u3002\u5bf9\u6a2a\u5750\u6807\u79bb\u6563\u5316\uff0c\u4ee5\u7eb5\u5750\u6807\u548c\u6743\u503c\u4e3a\u5173\u952e\u5b57\u6392\u5e8f\u3002\n\n\u4e4b\u540e\u5c31\u662f\u626b\u63cf\u7ebf\u7684\u7ecf\u5178\u64cd\u4f5c\uff0c\u6ce8\u610f\u5230\u6b64\u65f6\u6bcf\u9897\u661f\u661f\u6240\u9020\u6210\u7684\u5f71\u54cd\u5df2\u7ecf\u88ab\u8868\u793a\u4e3a\u4e00\u6bb5\u533a\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5dee\u5206\u601d\u60f3\u4f7f\u540c\u4e00\u4e2a\u77e9\u5f62\u91cc\u7684\u8fb9\u6743\u4e0b\u6b63\u4e0a\u8d1f\uff0c\u4ece\u4e0b\u5f80\u4e0a\u626b\uff0c\u540c\u65f6\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u52a0\u533a\u95f4\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u7531\u4e8e\u4e00\u5b9a\u5148\u626b\u5230\u4e0b\u9762\u7684\u8fb9\uff0c\u6240\u4ee5\u7b54\u6848\u663e\u7136\u4e00\u5b9a\u662f\u6b63\u6570\u3002\n\n\u4e8e\u662f\u8fd9\u9898\u51e0\u4e4e\u5c31\u548c\u6a21\u677f\u9898\u4e00\u6837~~\u53ef\u4ee5\u79d2\u6389~~\u4e86\u3002\n\n## Code\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define ll long long\n#define maxn 100005\nusing namespace std;\n\nll t, n, w, h;\nll xrow[maxn << 1];\n\nstruct node\n{\n\tll l, r, max, tag;\n}tree[maxn << 2];\n\nstruct lines\n{\n\tll l, r, h, val;\n\tbool operator <(const lines& x) const\n\t{\n\t\treturn (h != x.h) ? h < x.h : val > x.val;\n\t}\n}line[maxn << 2];\n\ninline ll read()\n{\n\tchar v = getchar();ll x = 0, f = 1;\n\twhile (!isdigit(v)) { if (v == '-')f = -1;v = getchar(); }\n\twhile (isdigit(v)) { x = x * 10 + v - 48;v = getchar(); }\n\treturn x * f;\n}\n\ninline ll lson(ll x) { return x << 1; }\ninline ll rson(ll x) { return x << 1 | 1; }\ninline void push_up(ll x) { tree[x].max = max(tree[lson(x)].max, tree[rson(x)].max); }\ninline void push_down(ll x)\n{\n\tif (tree[x].tag)\n\t{\n\t\ttree[lson(x)].max += tree[x].tag;\n\t\ttree[rson(x)].max += tree[x].tag;\n\t\ttree[lson(x)].tag += tree[x].tag;\n\t\ttree[rson(x)].tag += tree[x].tag;\n\t\ttree[x].tag = 0;\n\t}\n}\n\nvoid build(ll x, ll l, ll r)\n{\n\ttree[x].l = l, tree[x].r = r;\n\ttree[x].max = tree[x].tag = 0;\n\tif (l == r) return;\n\tll mid = (l + r) >> 1;\n\tbuild(lson(x), l, mid);\n\tbuild(rson(x), mid + 1, r);\n}\n\nvoid update(ll x, ll ul, ll ur, ll k)\n{\n\tll l = tree[x].l, r = tree[x].r;\n\tif (ul <= l && r <= ur)\n\t{\n\t\ttree[x].max += k;\n\t\ttree[x].tag += k;\n\t\treturn;\n\t}\n\tpush_down(x);\n\tll mid = (l + r) >> 1;\n\tif (ul <= mid) update(lson(x), ul, ur, k);\n\tif (ur > mid) update(rson(x), ul, ur, k);\n\tpush_up(x);\n}\n\nint main(void)\n{\n\tt = read();\n\twhile (t--)\n\t{\n\t\tmemset(tree, 0, sizeof(tree));\n\t\tmemset(line, 0, sizeof(line));\n\t\tmemset(xrow, 0, sizeof(xrow));\n\t\tn = read(), w = read(), h = read();\n\t\tfor (ll i = 1;i <= n;i++)\n\t\t{\n\t\t\tll x = read(), y = read(), l = read();\n\t\t\txrow[i * 2 - 1] = y;\n\t\t\txrow[i * 2] = y + h - 1;\n\t\t\tline[i * 2 - 1].l = y, line[i * 2 - 1].r = y + h - 1, line[i * 2 - 1].h = x, line[i * 2 - 1].val = l;\n\t\t\tline[i * 2].l = y, line[i * 2].r = y + h - 1, line[i * 2].h = x + w - 1, line[i * 2].val = -l;\n\t\t}\n\t\tn <<= 1;\n\t\tsort(xrow + 1, xrow + n + 1);\n\t\tsort(line + 1, line + n + 1);\n\t\tll tmp = unique(xrow + 1, xrow + n + 1) - xrow - 1;\n\t\tll ans = 0;\n\t\tbuild(1, 1, tmp - 1);\n\t\tfor (ll i = 1;i <= n;i++)\n\t\t{\n\t\t    ll L = lower_bound(xrow + 1, xrow + tmp + 1, line[i].l) - xrow - 1;\n\t\t\tll R = lower_bound(xrow + 1, xrow + tmp + 1, line[i].r) - xrow - 1;\n\t\t\tupdate(1, L, R, line[i].val);\n\t\t\tans = max(ans, tree[1].max);\n\t\t}\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1594205675,
        "uid": 246019,
        "name": "_came11ia_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1502 \u3010\u7a97\u53e3\u7684\u661f\u661f\u3011"
    },
    {
        "content": "## \u524d\u7f6e\u829d\u58eb\uff1a\u626b~\u63cf~\u7ebf~\n~~\u8fd9\u4e2a\u9898\u5176\u5b9e\u8fd8\u6709\u4e2a\u6e05\u6d41\u7684\u80cc\u666f~~\n### \u5c1d\u8bd5\u89e3\u51b3\u95ee\u9898\uff1a\n\u6211\u4eec\u5df2\u77e5\u4e86\u7a97\u5b50\u7684\u957f**W**\u548c\u5bbd**H**\uff0c\u53ea\u9700\u8981\u786e\u5b9a\u77e9\u5f62\u7684\u53f3\u4e0a\u89d2**M**\uff0c\u6574\u4e2a\u7a97\u5b50\u7684\u4f4d\u7f6e\u5c31\u786e\u5b9a\u4e86\u3002 \n\n\u5bf9\u4e8e\u4efb\u610f\u7684\u4e00\u9897\u661f\u661f **\uff08x\uff0cy\uff09**\uff0c\u6211\u4eec\u8003\u8651**M**\u653e\u5728\u54ea\u4e9b\u533a\u57df\u53ef\u4ee5\u5f97\u5230\u5979\u3002\n\n\u56e0\u4e3a\u661f\u661f\u7684\u5750\u6807\u662f**\u6574\u6570**\uff0c\u6211\u4eec\u4e5f\u4ee4**M**\u662f\u6574\u6570\u3002\n\n\u6ce8\u610f\u9898\u76ee\u8981\u6c42\uff1a\u8fb9\u754c\u4e0d\u80fd\u653e\u3002\u6240\u4ee5\uff0c\u8303\u56f4\u5c31\u51fa\u6765\u4e86\uff1a\n\n\u5de6\u4e0b\u89d2$(x,y)$,\u53f3\u4e0a\u89d2$(x+W-1,Y+H-1)$\u3002(\u5305\u62ec\u8fb9\u754c)\n\n\u6b64\u65f6\uff0c\u95ee\u9898\u8f6c\u5316\u6210\u4e86\uff1a**\u5e73\u9762\u4e0a\u6709\u82e5\u5e72\u4e2a\u533a\u57df\uff0c\u6bcf\u4e2a\u533a\u57df\u90fd\u5e26\u6709\u4e00\u4e2a\u6743\u503c\uff0c\u6c42\u5728\u54ea\u4e2a\u5750\u6807\u4e0a\u91cd\u53e0\u7684\u533a\u57df\u6743\u503c\u548c\u6700\u5927\u3002**\n\n\u6210\u529f\u8f6c\u5316\u6210\u4e86\u719f\u6089\u7684**\u626b~\u63cf~\u7ebf**\u95ee\u9898\u3002\n\n### \u5957\u8def\uff1a\n\n\u53d6\u51fa\u6bcf\u4e2a\u661f\u661f\u5f62\u6210\u7684\u77e9\u5f62\uff0c\u8bb0\u505a**\u56db\u5143\u7ec4**\u3002\n\n\u5de6\u8fb9\uff1a$(x,y,y+H,k)$\u3002\n\n\u53f3\u8fb9\uff1a$(x+W,y,y+H,-k)$\u3002\n\n**k**\u662f\u661f\u661f\u7684\u4eae\u5ea6\u3002\n\n\u7136\u540e\u4ee5**x**\u4e3a\u5173\u952e\u5143\uff0c\u5bf9\u56db\u5143\u7ec4\u8fdb\u884c\u6392\u5e8f\u3002\n\n\u65b0\u7684\u95ee\u9898\uff1a**x**\u76f8\u7b49\u600e\u4e48\u529e\uff1f\n\n\u7b54\u6848\uff1a**\u53f3\u8fb9\u754c**\u4f18\u5148\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u5982\u679c\u8fd9\u91cc\u540c\u65f6\u6709\u4e00\u4e2a\u5de6\u8fb9\u754c\u548c\u4e00\u4e2a\u53f3\u8fb9\u754c\uff0c\u53f3\u8fb9\u754c\u5df2\u7ecf\u5931\u6548\u4e86\uff0c\u8981\u5148\u4ece\u626b\u63cf\u7ebf\u4e2d\u5220\u9664\u3002\uff08\u524d\u9762\u63d0\u5230\uff0c\u6709\u6548\u8303\u56f4\u662f**x~x+W-1**\uff09\u3002\n\n\u89e3\u51b3\u4e86\u95ee\u9898\uff0c\u7ee7\u7eed\u8fdb\u884c\u5957\u8def\uff1a\n\n\u5bf9\u7eb5\u5750\u6807\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u5f97\u5230**tot**\u4e2a\u4ee3\u8868\u6570\uff0c\u8fd9\u6761\u626b\u63cf\u7ebf\u5c31\u88ab\u5206\u6210\u4e86**tot-1**\u6bb5\u3002\n\n\u7528 **c[i]** \u6765\u7ef4\u62a4\u8fd9\u6761\u626b\u63cf\u7ebf\uff0c\u6211\u4eec\u8981\u5f97\u5230\u626b\u63cf\u7ebf\u4e0a\u7684**\u6700\u5927\u503c**\u3002\u56e0\u6b64\uff0c**c[i]** \u8868\u793a\u626b\u63cf\u7ebf\u4e0a\u7b2c $i$ \u6bb5\u7684\u6743\u503c\u3002\n\n### \u8d70\u6d41\u7a0b\uff1a\n+ \u9047\u5230\u4e00\u6761\u8fb9\uff0c\u7528\u8fd9\u6761\u8fb9\u4fee\u6539\u626b\u63cf\u7ebf\u3002\n+ \u626b\u4e00\u904d**c**\u6570\u7ec4\uff0c\u627e\u5230\u6700\u5927\u503c\uff0c\u66f4\u65b0**ans** \u3002\n\n\u600e\u4e48\u4fee\u6539\u626b\u63cf\u7ebf\uff1f\u6211\u4eec\u4ee4\u7eb5\u5750\u6807**y**\u7684\u4ee3\u8868\u6570\u4e3a**val(y)**\u3002\n\n\u4fee\u6539\u626b\u63cf\u7ebf\uff1a**c[val(y)~val(y+H)-1]**\u90fd\u52a0\u4e0a**k**\u3002\n\n\u56e0\u4e3a\u8fb9\u754c\u4e0d\u80fd\u653e\uff0c\u6240\u4ee5\u662f**val(y+H)-1**\u3002\n\n### \u7ebf\u6bb5\u6811\u7ef4\u62a4**c**\u6570\u7ec4\n\n\u6bcf\u4e2a\u8282\u70b9\u4e3b\u8981\u662f\u7ef4\u62a4\u6700\u5927\u503c**dat**\u3002\u6ce8\u610f\u4e00\u4e0b\u4e0b\u4f20\u5ef6\u8fdf\u6807\u8bb0\u5c31\u884c\u4e86\u3002\n\n### \u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define R register int\n#define ll long long\nusing namespace std;\nconst int N=2*1e4+5;\nint n,nn,t;\nll H,W,ans;\nstruct node{\n    ll x,u,v,w;//u,v\u7eb5\u5750\u6807\n}da[N];//\u56db\u5143\u7ec4 \nstruct aaa{\n    ll dat,add;//\u6700\u5927\u503c\uff0c\u61d2\u6807\u8bb0 \n}tree[4*N];\nll row[N],tot;//\u79bb\u6563\u5316 \n\nll in(){\n    ll x=0;char ch=getchar();\n    while(ch>'9'||ch<'0') ch=getchar();\n    while(ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n    return x;\n}\n\nbool cmp(node a,node b){//\u56db\u5143\u7ec4\u6392\u5e8f\n    if(a.x==b.x) return a.w<b.w;//\u91cd\u70b9\uff0c\u53f3\u8fb9\u754c\u4f18\u5148 \n    return a.x<b.x;\n}\n\nvoid reset(){//\u9884\u5904\u7406\uff0c\u6e05\u96f6\n    ans=0;tot=0;\n    memset(da,0,sizeof(da));\n    memset(row,0,sizeof(row));\n    memset(tree,0,sizeof(tree));\n    return;\n}\n\nvoid scan(){//\u8bfb\u5165\n    n=in();W=in();H=in();\n    int a,b,c;nn=n+n;\n    for(R i=1;i<=n;i++){\n        a=in();b=in();c=in();\n        row[i]=b;row[i+n]=b+H;\n        da[i].x=a;da[i+n].x=a+W;\n        da[i].u=b;da[i+n].u=b;\n        da[i].v=b+H;da[i+n].v=b+H;\n        da[i].w=c;da[i+n].w=-c;\n    }\n    return;\n}\n\nvoid row_(){//\u79bb\u6563\u5316\n    sort(row+1,row+1+nn);\n    tot=unique(row+1,row+1+nn)-(row+1);\n    return;\n}\n\nint query(ll x){//\u79bb\u6563\u5316\n    return lower_bound(row+1,row+1+tot,x)-row;\n}\n\nvoid spread(int pos){//\u4e0b\u4f20\u61d2\u6807\u8bb0\n    int ls=pos*2,rs=pos*2+1;\n    tree[ls].dat+=tree[pos].add;\n    tree[rs].dat+=tree[pos].add;\n    tree[ls].add+=tree[pos].add;\n    tree[rs].add+=tree[pos].add;\n    tree[pos].add=0;\n    return;\n}\n\nvoid change(int pos,int pl,int pr,int l,int r,ll w){\n    if(l<=pl&&r>=pr){\n        tree[pos].dat+=w;\n        tree[pos].add+=w;\n        return;\n    }\n    if(tree[pos].add) spread(pos);\n    int mid=(pl+pr)>>1;\n    if(l<=mid) change(pos*2,pl,mid,l,r,w);\n    if(r>mid) change(pos*2+1,mid+1,pr,l,r,w);\n    tree[pos].dat=max(tree[pos*2].dat,tree[pos*2+1].dat);\n    return;\n}\n\nint main(){\n    t=in();\n    while(t--){\t\t\n        reset();scan();row_();\t\t\t\t\n        sort(da+1,da+1+nn,cmp);\n        for(int i=1;i<=nn;i++){\n            int u=query(da[i].u);\n            int v=query(da[i].v)-1;\n            change(1,1,tot-1,u,v,da[i].w);\n            //\u61d2\u5f97\u5efa\u6811\uff0c\u5c06\u8282\u70b9\u7684\u5de6\u53f3\u7aef\u70b9\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012 \n            ans=max(ans,tree[1].dat);\n        }\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n```\n\n\n",
        "postTime": 1556958794,
        "uid": 123159,
        "name": "IC_QQQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1502 \u3010\u7a97\u53e3\u7684\u661f\u661f\u3011"
    },
    {
        "content": "### **\u52a8\u6001\u5f00\u70b9\u505a\u6cd5**\n\n[ML](https://www.cnblogs.com/waterflower/p/11100970.html)\u535a\u5ba2\u6709\u56fe \u66f4\u52a0\u8be6\u7ec6\n\n\u8fd9\u9053\u9898\u7684\u4e00\u4e2a\u5173\u952e\u70b9\u662f\uff0c\u5c06\u661f\u661f\u4f5c\u4e3a\u4e00\u4e2a\u7a97\u6237\u7684\u5de6\u4e0b\u89d2\uff08\u5176\u5b9e\u662f\u4e3a\u4e86\u4e0d\u51fa\u73b0\u8d1f\u6570\uff09\uff0c\u5c06\u6bcf\u4e00\u4e2a\u661f\u661f\u90fd\u521b\u4e00\u4e2a\u7a97\u6237\uff0c\u4e4b\u540e\u5bfb\u627e\u91cd\u53e0\u90e8\u5206\n\n## **\u89e3\u91ca**\n\n\u770b\u8fd9\u4e2a\u56fe\uff0c\u8fd9\u662f\u4e24\u4e2a\u76f8\u4ea4\u7684\u60c5\u51b5\uff0c\u77e9\u5f62\u5de6\u4e0b\u89d2\u662f\u661f\u661f\uff0c\u7136\u540e\u5982\u679c\u6709\u91cd\u53e0\u90e8\u5206\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u8d34\u7740\u76f8\u4ea4\u90e8\u5206\u7684\u4e0a\u8fb9\u548c\u53f3\u8fb9\u5efa\u4e00\u4e2a\u7a97\u6237\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u76d6\u4f4f\u8fd9\u4e24\u4e2a\u661f\u661f\uff0c\n\n\uff08\u5bf9\u4e8e\u6d1b\u8c37\u7684\u56fe\u6211\u6709\u65f6\u5019\u5f04\u4e0d\u4e0a\u53bbQAQ\uff09\n\n\u7c7b\u6bd4\u5230\u6240\u6709\u661f\u661f\u662f\u4e00\u6837\u7684\uff0c\u6211\u4eec\u53ea\u8981\u5c06\u77e9\u5f62\u9644\u4e0a\u6743\u503c\u5373\u53ef\uff0c\u7528\u626b\u63cf\u7ebf\u5bfb\u627e\u3002\n\n\u4f46\u662f\u8fd9\u4e2a\u8fb9\u6846\u4e0d\u662f\u4e0d\u80fd\u5305\u542b\u661f\u661f\u5417\uff1f\n\n**\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5904\u7406\u4e00\u4e9b\u5c0f\u7ec6\u8282\uff0c\u5c06\u77e9\u5f62\u53f3\u8fb9\u7684\u6a2a\u5750\u6807\u51cf\u53bb1\uff0c\u4e5f\u5c31\u662f\u63d0\u524d\u51cf\u53bb\uff0c\u518d\u5c06\u626b\u63cf\u7ebf\u4e0a\u7aef-1\uff0c\u8fd9\u5c31\u5904\u7406\u4e86\u8fb9\u754c\u95ee\u9898\uff1b**\n\n**\u5e76\u4e14\u5728sort\u7684\u65f6\u5019\u5f53\u6a2a\u5750\u6807\u76f8\u540c\u65f6\uff0c\u5c06\u52a0\u4e0a\u7684\u6392\u5728\u524d\u9762\u3002\n\u8fd9\u4e2a\u7ec6\u8282\u8bf7\u4e00\u5b9a\u8981\u7406\u89e3\uff0c\u5426\u5219wa\u4e86\u4e5f\u4e0d\u597d\u8c03\uff08\u56e0\u4e3a\u4e0d\u7ed9\u6570\u636e\uff09\uff0c\u4ee3\u7801\u6211\u4f1a\u505a\u4e0a\u6807\u8bb0\u3002**\n\n\u77e9\u5f62\u6743\u503c\u76f4\u63a5\u9644\u5728\u626b\u63cf\u7ebf\u4e0a\u5373\u53ef\uff1b\n \n\u8fd9\u91cc\u6211\u4eec\u4ecb\u7ecd\u52a8\u6001\u5f00\u70b9\u505a\u6cd5\uff1b\n\n\u9996\u5148\u4e0d\u9700\u8981\u5728\u610f\u592a\u591a\u7684\u79bb\u6563\u5316\u7ec6\u8282\u662f\u4e00\u4e2a\u4f18\u70b9\uff0c\u5e72\u5e72\u7684\u4ecb\u7ecd\u4e0d\u662f\u975e\u5e38\u7b80\u6d01\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u9644\u4e0a\u4ee3\u7801\u8bb2\u89e3\uff1a\n\n```\n#include<bits/stdc++.h>\n#define maxn 10007\nusing namespace std;\nint t,n,w,h,cnt,lim,root;\nstruct node{\n\tint x,l,r,w,d;\n}a[maxn<<3];//\u626b\u63cf\u7ebf \nstruct tree{\n\tint le,ri,w,tag;\n}tr[5000007];//\u52a8\u6001\u5f00\u70b9\u7684\u4e0d\u540c\uff0cle\u548cri\u8bb0\u5f55\u7684\u662f\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u7684p\u503c \n//tr\u8bb0\u4f4f\u7a0d\u5fae\u5927\u4e00\u70b9 \uff08\u522b MLE \u4e86 \uff09\uff0c\u53cd\u6b63\u4e0d\u4f1a\u9519 \ntemplate<typename type_of_scan>\ninline void scan(type_of_scan &x){\n\ttype_of_scan f=1;x=0;char s=getchar();\n\twhile(s<'0'||s>'9') f=s=='-'?-1:1,s=getchar();\n\twhile(s>='0'&&s<='9') x=(x<<3)+(x<<1)+s-'0',s=getchar();\n\tx*=f;\n}\n\nbool operator <(node x,node y){\n\treturn x.x==y.x?x.d>y.d:x.x<y.x;\n}//sort\u7684\u7ec6\u8282*** \n\ninline void push_down(int p,int k){\n\tif(!tr[p].le) tr[p].le=++cnt;//\u6ca1\u70b9\u5f00\u70b9 \n\tif(!tr[p].ri) tr[p].ri=++cnt;\n\ttr[tr[p].le].w+=k,tr[tr[p].ri].w+=k;\n\ttr[tr[p].le].tag+=k,tr[tr[p].ri].tag+=k;\n}\n\nvoid add(int nl,int nr,int l,int r,int &p,int k){\n\tif(!p) p=++cnt;//\u6ca1\u70b9\u5f00\u70b9 \n\tif(nl<=l&&nr>=r){\n\t\ttr[p].w+=k,tr[p].tag+=k;\n\t\treturn ;\n\t}\n\tif(tr[p].tag) push_down(p,tr[p].tag);tr[p].tag=0;\n\tint mid=(l+r)>>1;\n\tif(nl<=mid) add(nl,nr,l,mid,tr[p].le,k);\n\tif(nr>mid) add(nl,nr,mid+1,r,tr[p].ri,k);\n\ttr[p].w=max(tr[tr[p].le].w,tr[tr[p].ri].w);\n}//\u4e0e\u7ebf\u6bb5\u6811\u76f8\u540c \n\ninline void work(){\n\tint ans=0;memset(tr,0,sizeof tr);\n\tscan(n);scan(w),scan(h);\n\tfor(int i=1,x,y,v;i<=n;i++)\n\t\tscan(x),scan(y),scan(v),lim=max(x+w+1,lim),//lim\u662f\u7ebf\u6bb5\u6811\u8303\u56f4 \n\t\ta[(i<<1)-1]=(node){x,y,y+h-1,v,1},//\u5f3a\u884c\u8f6c\u6362\u683c\u5f0f\uff0c-1\u7684\u7ec6\u8282** \n\t\ta[i<<1]=(node){x+w-1,y,y+h-1,v,-1};//\u7ec6\u8282** \n\tsort(a+1,a+1+2*n);//\u7ec6\u8282** \n\tfor(int i=1;i<=2*n;i++){\n\t\tadd(a[i].l,a[i].r,1,lim,root,a[i].w*a[i].d);\n\t\tans=max(ans,tr[root].w);//\u76f4\u63a5\u7528\u6574\u68f5\u6811\u66f4\u65b0\u5c31\u597d\u5566 \n\t}\n\tprintf(\"%d\\n\",ans);\n}\n\nint main(){\n\tscan(t);\n\twhile(t--) work();\n\treturn 0;\n}\n```\n\n\u5982\u679c\u4e0d\u6e05\u695a\u53ef\u4ee5\u8865\u5145\uff0c\u5982\u679c\u662f\u56fe\u70b8\u4e86\u8bdd\uff0c\u90a3\u5c31\u770b\u4e00\u4e0b\u535a\u5ba2\u5566\u3002\n\u9519\u4e86\u8bf7~~\uff08\u75db\u9a82\uff09~~\u7ea0\u6b63\u4e00\u4e0b\u849f\u84bb~",
        "postTime": 1563935629,
        "uid": 142518,
        "name": "Mr_Leceue",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1502 \u3010\u7a97\u53e3\u7684\u661f\u661f\u3011"
    },
    {
        "content": "\u79bb\u6563\u5316&\u626b\u63cf\u7ebf&\u7ebf\u6bb5\u6811\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9**(x,y)**\n\n\u6211\u4eec\u5b9a\u4e49\u5176\u5f71\u54cd\u8303\u56f4**(x,y)~(x+w-1,y+h-1)**\uff08\u4fdd\u8bc1\u5f71\u54cd\u6548\u679c\u4e0d\u91cd\u4e0d\u6f0f\uff0c\u53ea\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u5f71\u54cd\u533a\u95f4\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d8\u5c31\u53ef\u4ee5\uff09\n\n\u4e8e\u662f\u6211\u4eec\u5728**(x,y)**\u5904\u8bbe\u70b9\u503c\u4e3a**c**\uff0c\u533a\u95f4**[y,y+h-1]**+c;\n\n\u5728**(x+w-1,y)**\u5904\u8bbe\u70b9\u503c\u4e3a**-c**,\u533a\u95f4**[y,y+h-1]**-c,\u6d88\u9664\u8be5\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\n\n\u6ce8\u610f\u5bf9\u7eb5\u5750\u6807y\u4e0e\u6bcf\u4e2a(y+h-1)\u7684\u79bb\u6563\u5316\n\n\u5bf9\u6240\u8bbe\u6bcf\u4e2a\u70b9\u4ee5\u6a2a\u5750\u6807\u4e3a\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u4ece\u5de6\u5230\u53f3\u626b\u63cf\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4**\u5f53\u524d\u533a\u95f4\u6700\u5927\u503c**\n\n\u4e0a\u4ee3\u7801\u2193\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int MAXN=1e5+5;\n\nint T,n,w,h;\nint pou[MAXN<<2],maxn[MAXN<<2],add[MAXN<<2];\n\nstruct pnt{\n\tint x,y,c,kd,ymax,id;\n}st[MAXN<<2];\n\nbool cmp1(pnt a,pnt b){\n\treturn a.y<b.y;\n}\nbool cmp2(pnt a,pnt b){\n\tif(a.id==b.id) return a.kd<b.kd;\n\treturn a.id<b.id;\n}\nbool cmp3(pnt a,pnt b){\n\tif(a.x==b.x) return a.kd<b.kd;\n\treturn a.x<b.x;\n}\n\nvoid po(int k,int l,int r){\n\tif(add[k]==0) return;\n\tif(l==r){\n\t\tadd[k]=0;\n\t\treturn;\n\t}\n\tint i=k<<1,mid=(l+r)>>1;\n\tadd[i]+=add[k];\n\tadd[i|1]+=add[k];\n\tmaxn[i]+=add[k];\n\tmaxn[i|1]+=add[k];\n\tadd[k]=0;\n}\n\nvoid cadd(int x,int k,int l,int r,int le,int ri){\n\tpo(k,l,r);\n\tif(le<=l&&r<=ri){\n\t\tadd[k]=x;\n\t\tmaxn[k]+=x;\n\t\treturn;\n\t}\n\tint i=k<<1,mid=(l+r)>>1;\n\tif(le<=mid){\n\t\tcadd(x,i,l,mid,le,ri);\n\t}if(mid<ri){\n\t\tcadd(x,i|1,mid+1,r,le,ri);\n\t}\n\tmaxn[k]=max(maxn[i],maxn[i|1]);\n}\n\nint main(){\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\"%d%d%d\",&n,&w,&h);\n\t\tmemset(maxn,0,sizeof(maxn));\n\t\tmemset(add,0,sizeof(add));\n//reset\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tint x,y,c;\n\t\t\tscanf(\"%d%d%d\",&x,&y,&c);\n\t\t\tst[i]=(pnt){x,y,c,1};\n\t\t\tst[i+n]=(pnt){x+w-1,y,-c,2};\n\t\t\tst[i+(n<<1)].y=y+h-1;\n\t\t\tst[i+(n<<1)].kd=3;\n\t\t\tst[i].id=st[i+n].id=st[i+(n<<1)].id=i;\n\t\t}\n//init\n\t\tsort(st+1,st+n*3+1,cmp1);\n\t\tint cnt=0;\n\t\tfor(int i=1;i<=n*3;++i){\n\t\t\tpou[i]=st[i].y;\n\t\t}\n\t\tfor(int i=1;i<=n*3;++i){\n\t\t\tif(st[i].y==pou[i-1]) st[i].y=st[i-1].y;\n\t\t\telse st[i].y=++cnt;\n\t\t}\n//discretization\n\t\tsort(st+1,st+n*3+1,cmp2);\n\t\tfor(int i=1;i<=n*3;i+=3){\n\t\t\tst[i].ymax=st[i+1].ymax=st[i+2].y;\n\t\t}\n\t\tfor(int i=3;i<=n<<1;++i){\n\t\t\tst[i]=st[i+((i-1)>>1)];\n\t\t}\n//reinit\n\t\tsort(st+1,st+(n<<1)+1,cmp3);\n\t\tint ans=0;\n\t\tfor(int i=1;i<=n<<1;++i){\n\t\t\tcadd(st[i].c,1,0,cnt,st[i].y,st[i].ymax);\n\t\t\tans=max(ans,maxn[1]);\n\t\t}\n//answer\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1520512572,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1502 \u3010\u7a97\u53e3\u7684\u661f\u661f\u3011"
    },
    {
        "content": "\u628a\u661f\u661f\u770b\u6210\u5927\u5c0f\u662f$(W,H)$\u7684\u77e9\u5f62\uff0c\u7136\u540e\u95ee\u9898\u8f6c\u5316\u4e3a\u627e\u4e00\u4e2a\u70b9\uff0c\u8986\u76d6\u8fd9\u4e2a\u70b9\u7684\u77e9\u5f62\u7684\u6743\u503c\u548c\u6700\u5927.\n\n\u628a\u77e9\u5f62\u62c6\u6210\u4e24\u6761\u7ebf\u6bb5\uff0c\u4e24\u6761\u7ebf\u6bb5\u5206\u522b\u6709\u4e00\u4e2a$+w$\u548c$-w$\u7684\u6743\u503c\n\n\u7136\u540e\u626b\u63cf\u7ebf\uff0c\u533a\u95f4\u52a0\uff0c\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\n\n\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c\u56e0\u4e3a\u8fb9\u6846\u4e0d\u7b97\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a\u77e9\u5f62\u770b\u4f5c$(W-1,H-1)$\u7684\u683c\u70b9\u77e9\u5f62\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=5e5;\nlong long a[N],tag[N];\nstruct Q{long long x,l,r,w;}q[N];\nint n,W,H,cnt,T,qn;long long ans,lsh[N];\nint cmp(const Q &a,const Q &b){return a.x==b.x?a.w>b.w:a.x<b.x;}\nvoid pushup(int rot){a[rot]=max(a[rot<<1],a[rot<<1|1]);}\nvoid pushdown(int rot)\n{\n\tif(tag[rot])\n\t{\n\t\tint t=tag[rot];tag[rot]=0;\n\t\ta[rot<<1]+=t,tag[rot<<1]+=t;\n\t\ta[rot<<1|1]+=t,tag[rot<<1|1]+=t;\n\t}\n}\nvoid update(int rot,int lt,int rt,int lq,int rq,int w)//\u533a\u95f4\u52a0\uff0c\u533a\u95f4max\n{\n\tif(lq>rq)return;\n\tif(lt>=lq&&rt<=rq){a[rot]+=w,tag[rot]+=w;return;}\n\tint mid=(lt+rt)>>1;pushdown(rot);\n\tif(rq<=mid)update(rot<<1,lt,mid,lq,rq,w);\n\telse if(lq>mid)update(rot<<1|1,mid+1,rt,lq,rq,w);\n\telse update(rot<<1,lt,mid,lq,mid,w),update(rot<<1|1,mid+1,rt,mid+1,rq,w);\n\tpushup(rot);\n}\nvoid build(int rot,int lt,int rt)//\u6e05\u96f6\n{\n\ttag[rot]=a[rot]=0;\n\tif(lt==rt)return;\n\tint mid=(lt+rt)>>1;\n\tbuild(rot<<1,lt,mid),build(rot<<1|1,mid+1,rt);\n}\nint main()\n{\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tscanf(\"%d%d%d\",&n,&W,&H);\n\t\tcnt=qn=0;build(1,1,n<<1);ans=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tlong long x,y,w;\n\t\t\tscanf(\"%lld%lld%lld\",&x,&y,&w);\n\t\t\tlsh[++cnt]=y,lsh[++cnt]=y+H-1;\n\t\t\tq[++qn]=(Q){x,y,y+H-1,w},q[++qn]=(Q){x+W-1,y,y+H-1,-w};//\u62c6\u6210\u4e24\u6761\u7ebf\u6bb5\n\t\t}\n\t\tsort(lsh+1,lsh+cnt+1);\n\t\tcnt=unique(lsh+1,lsh+cnt+1)-lsh-1;//\u79bb\u6563\u5316\n\t\tsort(q+1,q+qn+1,cmp);\n\t\tfor(int i=1;i<=qn;i++)\n\t\t{\n\t\t\tint l=lower_bound(lsh+1,lsh+cnt+1,q[i].l)-lsh,r=lower_bound(lsh+1,lsh+cnt+1,q[i].r)-lsh;\n\t\t\tupdate(1,1,cnt,l,r,q[i].w);ans=max(ans,a[1]);//\u66f4\u65b0\u7b54\u6848\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n}\n```",
        "postTime": 1552203999,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1502 \u3010\u7a97\u53e3\u7684\u661f\u661f\u3011"
    },
    {
        "content": "\u79bb\u6563\u5316+\u626b\u63cf\u7ebf+\u7ebf\u6bb5\u6811\n\n\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u5904\u7406\u7684\u662f\u5de6\u8fb9\u6846\u653e\u5728\u5f53\u524dx-1\u4f4d\u7f6e\u65f6\u7684\u6846\u5185\u661f\u661f\u7684\u4eae\u5ea6\u5927\u5c0f\u2026\u2026\n\n\u9996\u5148\u6309\u7167x\u5750\u6807\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u5904\u7406\u79bb\u6563\u5316\u540e\u6bcf\u4e00\u4e2a\u5750\u6807x\u7684\u661f\u661f\u7684\u5f71\u54cd\u8303\u56f4\u2026\u2026\uff08\u5c31\u662f\u6846\u5b50\u653e\u5728\u54ea\u4e2ax\u2018-1\u65f6\u53ef\u4ee5\u628a\u8fd9\u4e2ax\u4e0a\u7684\u661f\u661f\u653e\u5728\u6846\u91cc\uff09\n\n\u7136\u540e\u626b\u63cf\u7ebf\u626by\u2026\u2026\u626b\u5230\u53ef\u4ee5\u52a0\u67d0\u9897\u661f\u661f\u5c31\u628a\u661f\u661f\u52a0\u8fdb\u53bb\u2026\u2026\u626b\u5230\u8be5\u51fa\u6765\u7684\u65f6\u5019\u5c31\u628a\u661f\u661f\u641e\u51fa\u6765\u2026\u2026\u5f71\u54cd\u8303\u56f4\u660e\u663e\u662f\u4e00\u6bb5\u533a\u95f4\u554a\u2026\u2026\u6240\u4ee5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u4fee\u6539\u67e5\u8be2\u5c31\u53ef\u4ee5\u4e86\u2026\u2026\n\n\u4e0a\u4ee3\u7801\uff1a\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst long long MAXN=10010;\nint n,imax;\nint w,h;\nint tree[4*MAXN],cha[4*MAXN];\nstruct STar{\n    int x,y,l;\n}star[MAXN];\nstruct CHA{\n    int lc,rc,t;\n    int val;\n}ch[4*MAXN];\nint top1;\n//xianduanshu\nvoid pushdown(int l,int r,int i){\n    if(cha[i]==0) return;\n    cha[i*2+1]+=cha[i];cha[i*2+2]+=cha[i];\n    tree[i*2+1]+=cha[i];tree[i*2+2]+=cha[i];\n    cha[i]=0;\n}\nvoid change(int fl,int fr,int k,int l,int r,int i){\n    if(fl<=l&&r<=fr){\n        cha[i]+=k;\n        tree[i]+=k;\n        return;\n    }\n    if(fl>r||l>fr) return;\n    pushdown(l,r,i);\n    int mid=(l+r)>>1;\n    change(fl,fr,k,l,mid,i*2+1);\n    change(fl,fr,k,mid+1,r,i*2+2);\n    tree[i]=max(tree[i*2+1],tree[i*2+2]);\n}\n//xianduanshu\nint con[MAXN],hh[MAXN],rank[MAXN],l[MAXN],r[MAXN],top;//\u79bb\u6563\u5316x \nbool cmp(STar xx,STar yy){\n    return xx.x<yy.x;\n}\nbool cmp1(CHA xx,CHA yy){\n    return xx.t<yy.t;\n}\nvoid init(){\n    memset(tree,0,sizeof(tree));\n    memset(cha,0,sizeof(cha));\n    memset(con,0,sizeof(con));\n    memset(hh,0,sizeof(hh));\n    memset(rank,0,sizeof(rank));\n    top=0;top1=0;imax=0;\n}\nvoid input(){\n    init();\n    cin>>n>>w>>h;\n    for(int i=0;i<n;i++)\n        cin>>star[i].x>>star[i].y>>star[i].l;\n    sort(star,star+n,cmp);\n    int tmp(star[0].x);\n    for(int i=0;i<n;i++){\n        if(star[i].x==tmp) {++con[top];rank[i]=top;}\n        else {hh[top]=tmp;tmp=star[i].x;++con[++top];rank[i]=top;}\n    }\n    hh[top]=tmp;\n}\nvoid xxj(){\n    int L(0);\n    for(int i=0;i<=top;i++){\n        while(hh[L]-1+w<hh[i]&&L<i) ++L;\n        l[i]=L;r[i]=i;\n    }\n    //cout<<top<<' '<<\"OK2\"<<endl;\n    for(int i=0;i<n;i++){\n        ch[top1].lc=l[rank[i]];ch[top1].rc=r[rank[i]];\n        ch[top1].val=star[i].l;ch[top1++].t=star[i].y;\n        ch[top1].lc=l[rank[i]];ch[top1].rc=r[rank[i]];\n        ch[top1].val=-star[i].l;ch[top1++].t=star[i].y+h;\n    }\n    sort(ch,ch+top1,cmp1);\n    for(int i=0;i<top1;i++){\n        int tmp=ch[i].t;\n        while(tmp==ch[i].t){\n            //\u5199\u5b8c\u52a0\u4e0a\n            change(ch[i].lc,ch[i].rc,ch[i].val,0,top,0);\n            ++i;\n        }\n        --i;\n        imax=max(imax,tree[0]);\n    }\n}\nvoid output(){\n    cout<<imax<<endl;\n}\nint main()\n{\n    int gg;\n    cin>>gg;\n    while(gg--){\n        input();\n        xxj();\n        output();\n    }\n    return 0;\n}\n```",
        "postTime": 1482885966,
        "uid": 26051,
        "name": "Xiaojian_xiang",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1502 \u3010\u7a97\u53e3\u7684\u661f\u661f\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u79bb\u6563\u5316\u52a0\u7ebf\u6bb5\u6811\n\n\u6211\u4eec\u628a\u6bcf\u4e2a\u661f\u661f\u90fd\u770b\u6210\u5c5e\u4e8e\u5b83\u90a3\u4e2a\u77e9\u5f62\u7684\u5de6\u4e0b\u89d2 \n\n\u518d\u6309\u7167x\u8f74\u548cy\u8f74\u79bb\u6563\u5316\n\n\u628ay\u8f74\u7528\u7ebf\u6bb5\u6811\u5904\u7406\uff0cx\u8f74\u626b\u8fc7\u53bb\n\n\u626b\u5230\u4e00\u4e2a\u77e9\u5f62\u5c31\u52a0\u76f8\u5e94\u7684light\u503c\uff0c\u76f8\u53cd\u626b\u51fa\u77e9\u5f62\u5c31\u51cf\u53bb\u76f8\u5e94\u7684light\u503c\uff08\u7ebf\u6bb5\u6811\u64cd\u4f5c\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nconst int MAX = 100010;\n\nint n, w, h, t;\nstruct Node {\n\tint light, x_1, x_2, y_1, y_2;\n}s[MAX];\nstruct node {\n\tint xx, yy, id;\n}L[MAX << 2];\nint tot;\nstruct nOde {\n\tint lazy, sum;\n}tree[MAX << 2];\nint f[MAX][101], g[MAX][101];\n\ninline int read() {\n\tint s = 0, w = 1;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9') {\n\t\tif(ch == '-') w = -1;\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9') {\n\t\ts = s * 10 + ch - '0';\n\t\tch = getchar();\n\t}\n\treturn s * w;\n}\n\nbool cmp_x(node a, node b) {return a.xx < b.xx;}\nbool cmp_y(node a, node b) {return a.yy < b.yy;}\nbool cmp_X(Node a, Node b) {return a.x_1 == b.x_1 ? a.x_2 < b.x_2 : a.x_1 < b.x_1;}\nvoid push_down(int u) {\n\tif(tree[u].lazy) {\n\t\ttree[u << 1].lazy += tree[u].lazy;\n\t\ttree[u << 1 | 1].lazy += tree[u].lazy;\n\t\ttree[u << 1].sum += tree[u].lazy;\n\t\ttree[u << 1 | 1].sum += tree[u].lazy;\n\t\ttree[u].lazy = 0;\n\t}\n}\nvoid change_1(int u, int x, int y, int a, int b, int k) {\n\tif(a <= x && b >= y) {\n\t\ttree[u].lazy += k;\n\t\ttree[u].sum += k;\n\t\tpush_down(u);\n\t\treturn ;\n\t}\n\tint mid = (x + y) >> 1;\n\tpush_down(u);\n\tif(a <= mid) change_1(u << 1, x, mid, a, b, k);\n\tif(b > mid) change_1(u << 1 | 1, mid + 1, y, a, b, k);\n\ttree[u].sum = max(tree[u << 1].sum, tree[u << 1 | 1].sum);\n}\nint ask(int u, int x, int y) {\n\tif(x == y) return tree[u].sum;\n\tint mid = (x + y) >> 1;\n\tpush_down(u);\n\treturn max(ask(u << 1, x, mid), ask(u << 1 | 1, mid + 1, y));\n\treturn 0;\n}\nint main()\n{\n\tt = read();\n\twhile(t--) {\n\t\ttot = 0;\n\t\tn = read(), w = read(), h = read();\n\t\tfor(int i = 1; i <= n; i++) {\n\t\t\tint x = read(), y = read();\n\t\t\ts[i].x_1 = s[i].x_2 = s[i].y_1 = s[i].y_2 = 0;\n\t\t\ts[i].light = read();\n\t\t\t\n\t\t\tL[++tot].xx = x;\n\t\t\tL[tot].yy = y;\n\t\t\tL[tot].id = i;\n\t\t\t\n\t\t\tL[++tot].xx = x + w - 1;\n\t\t\tL[tot].yy = y - h + 1;\n\t\t\tL[tot].id = i;\n\t\t}\n\t\tsort(L + 1, L + 1 + tot, cmp_y);//\u79bb\u6563\u5316x\uff0cy\u8f74\n\t\tint ty = 0;\n\t\tfor(int i = 1; i <= tot; i++) {\n\t\t\tif(L[i].yy != L[i - 1].yy) ty++;\n\t\t\tif(!s[L[i].id].y_1) s[L[i].id].y_1 = ty;\n\t\t\telse s[L[i].id].y_2 = ty; \n\t\t}\n\t\tsort(L + 1, L + 1 + tot, cmp_x);\n\t\tint tx = 0;\n\t\tfor(int i = 1; i <= tot; i++) {\n\t\t\tif(L[i].xx != L[i - 1].xx) tx++;\n\t\t\tif(!s[L[i].id].x_2) s[L[i].id].x_2 = tx, f[tx][++f[tx][0]] = L[i].id;\n\t\t\telse s[L[i].id].x_1 = tx, g[tx][++g[tx][0]] = L[i].id;\n\t\t}\n\t\t//for(int i = 1; i <= n; i++) {printf(\"\\nx_1: %d  x_2: %d  y_1: %d  y_2: %d  light: %d\\n\",  s[i].x_1, s[i].x_2, s[i].y_1, s[i].y_2, s[i].light);}\n\t\t//sort(s + 1, s + n + 1, cmp_X);\n\t\tint ans = 0;\n\t\tfor(int i = 1; i <= tx; i++) {\n\t\t\tfor(int j = 1; j <= f[i][0]; j++) {\n\t\t\t\tint v = f[i][j];\n\t\t\t\tchange_1(1, 1, ty, s[v].y_1, s[v].y_2, s[v].light);\n\t\t\t}\n\t\t\tans = max(ans, /*ask(1, 1, ty)*/tree[1].sum);\n\t\t\tfor(int j = 1; j <= g[i][0]; j++) {\n\t\t\t\tint v = g[i][j];\n\t\t\t\tchange_1(1, 1, ty, s[v].y_1, s[v].y_2, -s[v].light);\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", ans);\n\t\tfor(int i = 1; i <= tx; i++) f[i][0] = g[i][0] = 0;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1572179788,
        "uid": 54396,
        "name": "Lysus",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1502 \u3010\u7a97\u53e3\u7684\u661f\u661f\u3011"
    }
]