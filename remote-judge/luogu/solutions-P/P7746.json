[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5\u521d\u59cb\u6743\u503c\u5df2\u77e5\u7684\u6811\uff0c\u6bcf\u6b21\u64cd\u4f5c:\n1. \u5bf9\u67d0\u4e2a\u8282\u70b9\u5b50\u6811\u4e0a\u7684\u6240\u6709\u8282\u70b9\u52a0\u4e0a $ x $ \u3002\n1. \u67e5\u8be2\u67d0\u4e2a\u8282\u70b9\u7684\u6743\u503c\u3002\n\n\n------------\n## \u5177\u4f53\u601d\u8def\n- **1.\u66b4\u529b(112 pts)**\n\t\n   \u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u4eec\u628a\u4fee\u6539\u503c\u50a8\u5b58\u4e0b\u6765\uff0c\u7136\u540e\u6bcf\u6b21\u8be2\u95ee\u64cd\u4f5c\u6211\u4eec\u5386\u904d\u6240\u6c42\u70b9\u7684\u7956\u5148\uff0c\u8ba1\u7b97\u603b\u548c\u3002\n   \n   \u8fd9\u770b\u8d77\u6765\u662f $\\mathcal{O}( m\\log n )$ \u7684\u6b63\u89e3\uff0c\u4f46\u662f\u8fd9\u4ec5\u9650\u4e8e\u8fd9\u68f5\u6811\u662f\u5e73\u8861\u7684\u65f6\u5019\u3002\u5728\u9000\u5316\u6210\u94fe\u7684\u6781\u9650\u6761\u4ef6\u4e0b\u4f1a\u88ab\u5361\u5230 $\\mathcal{O}( mn )$ \uff0c\u5728 $ 1 \\le  n , m , \\le 5 \\times 10^5 $ \u7684\u6570\u636e\u8303\u56f4\u4e0b\u4f1aT\u6389\u3002\n   \n   \u6838\u5fc3\u4ee3\u7801\uff1a\n\t```c\n  int a=read();\n  int x=tree[a].fa,w=tree[a].num;\n  while(1){\n      if(x==0) break;\n      w+=tag[x];\n      x=tree[x].fa;\n  }\n  printf(\"%d\\n\",w);\n\t```\n- **2.\u6b63\u89e3(\u6811\u72b6\u6570\u7ec4)(140 pts)**\n\n\t\u6211\u4eec\u89c2\u5bdf\u4e24\u4e2a\u64cd\u4f5c\uff1a\n    \n   1. \u4fee\u6539\u6811\u4e0a\u7684\u4e00\u6bb5\u533a\u95f4\u3002\n   1. \u6c42\u6811\u4e0a\u5355\u70b9\u7684\u503c\u3002\n   \n   \u8fd9\u4e0d\u5c31\u662f\u6811\u72b6\u6570\u7ec4\u5417\uff01\n  \t\n   \u6211\u4eec\u53ef\u4ee5\u5c06\u6811\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5dee\u5206\u6570\u7ec4\uff0c\u7136\u540e\u5c31\u662f\u6811\u72b6\u6570\u7ec4\u7684\u6a21\u677f\u4e86\u3002\n   \n   \u8fd9\u9898\u5e76\u4e0d\u662f\u5b8c\u5168\u610f\u4e49\u4e0a\u7684\u6811\u4e0a\u5dee\u5206\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u7c7b\u4f3c\u4e8e\u6811\u5256\u7684\u65b9\u6cd5\u505a\u3002\n   \n   \u8fd9\u662f\u6837\u4f8b\u4e8c\u7684\u6811\uff1a\n   ![](https://cdn.luogu.com.cn/upload/image_hosting/l4s3uq2q.png)\n   \n   \u6211\u4eec\u5c06\u5176\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5dee\u5206\u6570\u7ec4\u3002\n   ![](https://cdn.luogu.com.cn/upload/image_hosting/f2arihlg.png)\n   \n   \n   \u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539\u7684 $ x $  \uff0c\u6211\u4eec\u5c06 $ head_{x+1} $ \u52a0\u4e0a\u8981\u52a0\u7684\u503c\uff0c\u5728 $ tail_{x} $ \u4e0a\u51cf\u53bb\u8981\u52a0\u7684\u503c\u3002 \n   \n   \u67e5\u8be2\u64cd\u4f5c\u5373\u4e3a\u6c42\u533a\u95f4\u548c\u3002\n   \n   \u8fd9\u6837\u5b9e\u73b0\u51fa\u6765\u5c31\u662f\u4e25\u683c $\\mathcal{O}( m\\log n )$ \u7684\u4e86\u3002\n   \n   \u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\u3002\n   \n\n\n\n   \n##   Code\n\n\n  ```c\n  #include<bits/stdc++.h>\n  #define int long long\n  #define maxn 1000005\n  #define maxm 1000005\n  using namespace std;\n\n    inline int read(){\n        int x=0,w=1;\n        char ch=getchar();\n        while(ch>'9'||ch<'0'){if(ch=='-')w=-1;ch=getchar();}\n        while(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n        return x*w;\n    }\n\n    int cnt,n,m,k,tot=1;\n    int head[maxn],h[maxn],t[maxn],num[maxn],c[maxn];\n    struct e{int to,next;}edge[maxm];\n    int tree[maxn];\n\n    inline void addedge(int u,int v){\n        edge[++cnt].to=v;\n        edge[cnt].next=head[u];\n        head[u]=cnt;\n    }\n\n    void dfs(int x){\n        h[x]=++tot;\n        for(int i=head[x];i;i=edge[i].next)\n            dfs(edge[i].to);\n        t[x]=++tot;\n    }\n\n    inline int lowbit(int x){\n        return x&-x;\n    }\n\n    void add(int x,int k){\n        while(x<=tot){\n            c[x]+=k;\n            x+=lowbit(x);\n        }\n    }\n\n    int query(int x){\n        int sum=0;\n        while(x){\n            sum+=c[x];\n            x-=lowbit(x);\n        }\n        return sum;\n    }\n\n    signed main(){\n        n=read();m=read();\n        tree[1]=read();\n        for(int i=2;i<=n;++i){\n            tree[i]=read();\n            int x=read();\n            addedge(x,i);\n        }\n        dfs(1);\n        for(int i=1;i<=m;++i){\n            char opt;\n            cin>>opt;\n            if(opt=='p'){\n                int a=read(),x=read();\n                add(h[a]+1,x);\n                add(t[a],-x);\n            }\n            else{\n                int a=read();\n                printf(\"%d\\n\",tree[a]+query(h[a]));\n            }\n        }\n        return 0;\n    }\n   ```\n\u7801\u98ce\u6bd4\u8f83\u4e11\uff0c\u8fd8\u8bf7\u89c1\u8c05\u3002\n \n------------\n\n\n\n\n\n\n   \n\n\n   ",
        "postTime": 1633440446,
        "uid": 212349,
        "name": "ChengJY_",
        "ccfLevel": 7,
        "title": "P7746 PLA\u0106E \u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6709\u6839\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u5e26\u6743\u3002\u6709 $m$ \u4e2a\u64cd\u4f5c\uff0c\u5171\u4e24\u79cd\uff1a\n\n- \u7ed9\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u4e0d\u5305\u62ec $x$ \u672c\u8eab\uff09\u7684\u6743\u503c\u52a0\u4e0a $a$\u3002  \n- \u8be2\u95ee\u8282\u70b9 $a$ \u7684\u6743\u503c\u3002\n\n## \u9898\u89e3\n\n\u5bb9\u6613\u53d1\u73b0\u8fd9\u5c31\u50cf\u662f\u4e00\u4e2a\u6811\u5256\u677f\u5b50\u9898\u3002\u4f46\u662f\u56e0\u4e3a\u4e0d\u9700\u8981\u652f\u6301\u94fe\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u751a\u81f3\u4e0d\u9700\u8981\u6811\u5256\u3002\u76f4\u63a5\u5bf9\u539f\u6811\u8dd1\u4e00\u6b21 $\\text{dfs}$\uff0c\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684 $\\text{dfs}$ \u5e8f\uff0c\u90a3\u4e48\u4e00\u68f5\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u7684\u6240\u6709\u8282\u70b9\u7684 $\\text{dfs}$ \u5e8f\u80af\u5b9a\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\u3002\u8bb0\u4e3a $[S_x,T_x]$\u3002\u5e76\u4e14\u53ef\u4ee5\u53d1\u73b0\uff0c$x$ \u7684 $\\text{dfs}$ \u5e8f\u5c31\u662f $S_x$\u3002\n\n\u6240\u4ee5\u95ee\u9898\u7b49\u4ef7\u4e8e\uff0c\u533a\u95f4\u52a0\u3001\u5355\u70b9\u67e5\u8be2\u3002\u5bf9\u4e8e\u64cd\u4f5c $1$\uff0c\u7b49\u4ef7\u4e8e\u8ba9\u533a\u95f4 $[S_x+1,T_x]$ \u52a0\u4e0a $a$\uff1b\u5bf9\u4e8e\u64cd\u4f5c $2$\uff0c\u7b49\u4ef7\u4e8e\u67e5\u8be2 $S_x$ \u4f4d\u7f6e\u7684\u503c\u3002\n\n\u5f53\u7136\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u5b9e\u73b0\u3002\u4f46\u56e0\u4e3a\u6211\u662f\u61d2\u72d7\uff0c\u6240\u4ee5\u5199\u4e86\u4e2a\u6811\u72b6\u6570\u7ec4\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O((n+m)\\log n)$\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define up(l,r,i) for(int i=l,END##i=r;i<=END##i;++i)\n#define dn(r,l,i) for(int i=r,END##i=l;i>=END##i;--i)\nusing namespace std;\ntypedef long long i64;\nconst int INF =2147483647;\nconst int MAXN=3e5+3;\nint H[MAXN],V[MAXN*2],N[MAXN*2],S[MAXN],T[MAXN],s,t;\nvoid ade(int u,int v){\n    V[++t]=v,N[t]=H[u],H[u]=t;\n}\nvoid dfs(int u,int f){\n    S[u]=++s;\n    for(int i=H[u],v;i;i=N[i]) if((v=V[i])!=f) dfs(v,u);\n    T[u]=s;\n}\nint A[MAXN],D[MAXN],n,m;\nvoid add(int u,int x){\n    while(u<=n) D[u]+=x,u+=u&-u;\n}\nint  qry(int u){\n    int r=0; while(u) r+=D[u],u-=u&-u; return r;\n}\nint qread(){\n    int w=1,c,ret;\n    while((c=getchar())> '9'||c< '0') w=(c=='-'?-1:1); ret=c-'0';\n    while((c=getchar())>='0'&&c<='9') ret=ret*10+c-'0';\n    return ret*w;\n}\nchar rdc(){\n    char c; while(!isgraph(c=getchar())); return c;\n}\nint main(){\n    n=qread(),m=qread(); A[1]=qread();\n    up(2,n,i){\n        A[i]=qread(); int f=qread(); ade(f,i);\n    }\n    dfs(1,0);\n    up(1,n,i) add(S[i],A[i]),add(S[i]+1,-A[i]);\n    up(1,m,i){\n        char op=rdc(); if(op=='p'){\n            int a=qread(),u=qread(); add(S[a]+1,u),add(T[a]+1,-u);\n        } else{\n            int a=qread(); printf(\"%d\\n\",qry(S[a]));\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1643774590,
        "uid": 330759,
        "name": "\u56e7\u4ed9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7746 \u3010[COCI2011-2012#3] PLA\u0106E\u3011"
    }
]