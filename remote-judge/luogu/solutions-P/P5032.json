[
    {
        "content": "\u89e3\u6cd51\uff1a  \r\n\u6211\u6709\u4fe1\u4ef0\uff0c\u6211\u662fMC\u73a9\u5bb6\uff0c\u8f93\u51fa-1\u3002\u9884\u8ba1\u5f97\u5206\uff1a15.\r\n\r\n\u89e3\u6cd52\uff1a  \r\n\u6211\u4f1a\u7279\u5224\uff0c\u5904\u7406ai=1,n=1\u7684\u60c5\u51b5\uff0c\u9884\u8ba1\u5f97\u5206\uff1a15.\r\n\r\n\u89e3\u6cd53\uff1a  \r\n\u6211\u4f1a\u66b4\u529b\uff0c\u76f4\u63a5\u6a21\u62df\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$ \u3002\u9884\u8ba1\u5f97\u5206\uff1a30.\r\n\r\n\u89e3\u6cd54\uff1a  \r\n\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u6b21\u53ea\u8981\u5408\u5e76\u6700\u5c0f\u7684\u4e24\u672c\u4e66\uff0c\u7136\u540e\u5408\u5e76\u3002\u518d\u5f80\u4e0a\u627e\u3002\u627e\u6700\u5c0f\u7684\u4e24\u672c\u4e66\u53ef\u4ee5\u7c7b\u4f3c\u4e8e\u5408\u5e76\u679c\u5b50\uff0c\u7528\u4f18\u5148\u961f\u5217\u505a\u5c31\u597d\u5566\u3002\u9884\u8ba1\u5f97\u5206\uff1a40-95(\u6570\u636e\u5c45\u7136\u6ca1\u6709\u5361\u6389\uff0c\u8fd8\u662f\u90a3\u4e2a-1\u7684\u70b9\u5361\u5e38\u5361\u6389\u768423333).\r\n\r\n\u89e3\u6cd55\uff1a  \r\n\u6211\u4eec\u7ee7\u7eed\u5bfb\u627e\u89c4\u5f8b\uff0c\u6216\u8005\u7531\u5408\u5e76\u679c\u5b50\u7684\u601d\u8def\u5f97\u6765\u3002\u8fd9\u4e9b\u9644\u9b54\u4e66\u5408\u5e76\u524d\u548c\u5408\u5e76\u540e\u5747\u6709\u5355\u8c03\u6027\uff0c\u6211\u4eec\u5f00\u4e24\u4e2a\u961f\u5217\u5c31\u53ef\u4ee5$O(n)$\u505a\u3002\u9884\u8ba1\u5f97\u5206100.\r\n\r\n\u89e3\u6cd56\uff1a \r\n\u7531\u4e8e\u662f\u4e24\u672c\u5408\u6210\u4e00\u672c\u9644\u9b54\u4e66\uff0c\u6240\u4ee5\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u9644\u9b54\u4e66\u7684\u6700\u5927\u7b49\u7ea7\u4e3a$a[i]+log_2N$\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u9012\u5f52\u6765\u6c42\u89e3\u3002\u5f00\u59cb\u53ea\u8981\u6876\u6392\u6c42\u51fa\u6bcf\u79cd\u9644\u9b54\u4e66\u6709\u591a\u5c11\u672c\u5c31\u53ef\u4ee5\u4e86\u3002\u9012\u5f52\u6709\u70b9\u5c0f\u5c0f\u7684\u96be\u6253\u3002\u9884\u8ba1\u5f97\u5206100.  \r\n\r\n\u5728\u8fd9\u91cc\u9644\u4e0a50\u5206\u4ee3\u7801\u548c100\u5206\u4ee3\u7801\uff1a\r\n\r\n50pts:\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nstruct Node{\r\n\tint cost,lev,lei;\r\n\tfriend bool operator < (Node x,Node y){\r\n\t\tif(x.lev==y.lev){\r\n\t\t\tif(x.cost==y.cost)\treturn x.lei>y.lei;\r\n\t\t\treturn x.cost>y.cost;\r\n\t\t}\r\n\t\treturn x.lev>y.lev;\r\n\t}\r\n}x;\r\npriority_queue <Node> q; \r\nint ans=0,cnt=214748347;\r\nint ex_gcd(int a,int b,int &x,int &y){\r\n    if(b==0){\r\n        x=1,y=0;\r\n        return a;\r\n    }\r\n    int e=ex_gcd(b,a%b,y,x);\r\n    y-=x*(a/b);\r\n    return e;\r\n}\r\nint main(){\r\n\tint n,qwq,orz;\r\n\tcin>>n;\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tscanf(\"%d\",&x.lev),x.lei=1,x.cost=0,q.push(x);\r\n\tNode fir;\r\n\twhile(q.size()>1){\r\n\t\tif(q.top().lev>ans)  ans=q.top().lev,cnt=q.top().cost;\r\n\t\telse if(q.top().lev==ans)\tcnt=min(cnt,q.top().cost);\r\n\t\tfir=q.top();\tq.pop();\r\n\t\twhile(q.top().lev!=fir.lev)\tfir=q.top(),q.pop();\r\n\t\tNode nxt,sec=q.top();\r\n\t\tnxt.cost=fir.cost+sec.cost+fir.lei+sec.lei;\r\n\t\tnxt.lei=max(fir.lei,sec.lei)*2+1;\r\n\t\tnxt.lev=fir.lev+1;\r\n\t\tq.pop(); q.push(nxt); \r\n\t}\r\n\tif(q.top().lev>ans)  ans=q.top().lev,cnt=q.top().cost;\r\n\tif(ex_gcd(ans,cnt,qwq,orz)!=1)\tcout<<-1<<endl;\r\n\telse{\r\n\t\tqwq=(qwq%cnt+cnt)%cnt;\r\n\t\tcout<<qwq<<endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n```\r\n\r\n100pts:\r\n```\r\n#include<queue>\r\n#include<cstdio>\r\n#include<iostream>\r\n#define int long long\r\n#define MAXN 10000200\r\nusing namespace std;\r\nint c[MAXN+50],d[MAXN+50],cnt,ans;\r\nint ex_gcd(int a,int b,int &x,int &y){\r\n    if(b==0){\r\n        x=1,y=0;\r\n        return a;\r\n    }\r\n    int e=ex_gcd(b,a%b,y,x);\r\n    y-=x*(a/b);\r\n    return e;\r\n}\r\nint dg(int x){//\u83b7\u5f97\u4e00\u672c\u7b49\u7ea7\u4e3ax\u7684\u4e66\u7684\u82b1\u8d39 \r\n    if(d[x]){\r\n        d[x]--;\r\n        return 1;\r\n    }\t\r\n    int p=dg(x-1),q=dg(x-1);\r\n    ans+=p+q;\r\n    return (max(p,q)*2+1) ;\r\n}\r\ninline void read(int &x){\r\n    char ch;x=0;\r\n    while(!isdigit(x))\tch=getchar();\r\n    while(isdigit(x))\tx=x*10+ch-'0',ch=getchar();\r\n}\r\nsigned main(){\r\n//\tfreopen(\"exp.in\",\"r\",stdin);\r\n//\tfreopen(\"exp.out\",\"w\",stdout);\r\n    int n,x,y;\r\n    cin>>n;//cout<<\"qwq\"<<endl;\r\n    for(int i=1;i<=n;i++){\r\n        scanf(\"%lld\",&x);\r\n        d[x]++;c[x]++;\r\n    }//cout<<\"qwq\"<<endl;\r\n    for(int i=1;i<=MAXN;i++){\r\n        c[i+1]+=c[i]/2;      c[i]%=2;\r\n        if(c[i+1])\tcnt=max(cnt,i+1);\r\n    } //cout<<\"qwq\"<<endl;\r\n    dg(cnt);\r\n \tif(ex_gcd(cnt,ans,x,y)!=1)\tcout<<-1<<endl;\r\n    else{\r\n        x=(x%ans+ans)%ans;\r\n  \t\tprintf(\"%lld\\n\",x);\r\n    }  \r\n //   cout<<ans<<\" \"<<cnt<<endl;\r\n    return 0;\r\n}\r\n```",
        "postTime": 1542153594,
        "uid": 20780,
        "name": "\u5357\u57ce\u5fc6\u6f47\u6e58",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5032 \u3010\u7ecf\u9a8c\u3011"
    },
    {
        "content": "\u5751\u70b9\u5982\u4e0b\n\n1.\u9898\u76ee\u4e0a\u9762mc wiki\u7684\u57fa\u672c\u90fd\u662f\u5e9f\u8bdd\n\n2.**\u4e0d\u8981**\u8003\u8651\u91cd\u547d\u540d\u3001\u8010\u4e45\u7b49\u4e00\u7cfb\u5217\u4e1c\u897f\n\n3.**\u6240\u6709**\u9644\u9b54\u4e66\u521d\u59cb\u60e9\u7f5a\u7b49\u7ea7\u90fd\u662f$1$\uff0c\u4e0d\u8981\u88ab\u4e0a\u9762\u7684wiki\u9a97\u4e86\n\n~~\u8bdd\u8bf4\u51fa\u9898\u4eba\u5728\u6bd4\u8d5b\u4e2d\u9014\u52a0\u4e86\u4e2a\u7b80\u7565\u7248\uff0c\u65b9\u4fbf\u540c\u5b66\u7406\u89e3\u9e2d~~\n\n~~\u8fd9\u9898\u76ee\u8fd8\u662f\u5f88\u6c34\u7684\uff0c\u6bd4\u8d5b\u7684\u65f6\u5019\u82b1\u4e861\u5c0f\u65f6\u5199\u5b8c\u4e86~~\n\n\u4f60\u9700\u8981\u5173\u6ce8\u7684\u8bdd\n\n1.\u4e00\u4e2a\u7269\u54c1\u6bcf\u6b21\u5728\u94c1\u7827\u4e0a\u64cd\u4f5c\u8fc7\u540e\uff0c\u5176\u7d2f\u79ef\u60e9\u7f5a\u90fd\u4f1a\u5148\u4e582\u518d\u52a01\n\n2.\u5f53\u5408\u5e76\u4e24\u4e2a\u7269\u54c1\u65f6\uff0c\u73a9\u5bb6\u4f1a\u540c\u65f6\u53d7\u5230\u4e24\u4ef6\u7269\u54c1\u7684\u7d2f\u79ef\u60e9\u7f5a\uff08\u5373\u76f8\u52a0\uff09\u3002\n\n3.\u5408\u5e76\u540e\u7269\u54c1\u7684\u7d2f\u79ef\u60e9\u7f5a\u662f\u8f83\u9ad8\u8005\u5148\u4e582\u518d\u52a01\n\n# \u6c42$x$\n\n\u8d2a\u5fc3\u7684\u601d\u8def\uff0c**\u80fd\u5408\u5e76\u5c31\u4e00\u5b9a\u8981\u5408\u5e76**\u3002\n\n## \u7a0b\u5e8f\u5b9e\u73b0\n\n\u5f00\u4e00\u4e2a\u6876\uff0c\u4e00\u65e6\u6876\u91cc\u9762\u7684\u5143\u7d20\u6709$2$\u4e2a\uff0c\u5c31\u8fd9\u4e2a\u6876\u5c31\u8bbe\u7f6e\u4e3a$0$\uff0c\u4e0b\u4e00\u4e2a\u6876$+1$\uff0c\u82e5\u4e0b\u4e00\u4e2a\u6876\u4e5f\u6709$2$\u4e2a\uff0c\u5c31\u91cd\u590d\u8fd9\u4e2a\u64cd\u4f5c\u3002\n\n~~\u6240\u4ee5\u8bf4\u7b2c\u4e00\u95ee\u8fd8\u662f\u5f88\u7b80\u5355\u7684\u561b~~\n\n# \u6c42$y$\n\n\u5f00\u53e6\u5916\u4e00\u4e2a\u6876\uff0c\u7528\u6765\u8bb0\u5f55\u6bcf\u4e00\u79cd\u9644\u9b54\u4e66\u7684\u539f\u59cb\u6570\u91cf\u3002\n\n\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u6c42\u51fa\u4e86$x$\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u4e00\u4e2a$x$\u53ef\u4ee5\u770b\u6210\u4e24\u4e2a$x-1$\u7684\u9644\u9b54\u4e66\u5408\u5e76\u5f97\u6765\u7684\n\n![](https://cdn.luogu.com.cn/upload/pic/43880.png)\n\n\u8fd9\u5c31\u662f\u89e3\u51b3\u7b2c\u4e8c\u95ee\u7684\u5173\u952e\u601d\u8def\n\n\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u6837\u4f8b$1$\n\n```\n5\n1 1 2 3 4\n```\n\n![](https://cdn.luogu.com.cn/upload/pic/43881.png)\n\n\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u51fa$x=5$\uff0c\u90a3\u4e48\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u672c$V$\u7ea7\u7684\u4e66\n\n\u5b83\u53ef\u4ee5\u5206\u6210\u4e24\u4e2a$IV$\u7ea7\u7684\u4e66\u5408\u6210\u7684\n\n![](https://cdn.luogu.com.cn/upload/pic/43882.png)\n\n\u6211\u4eec\u672c\u8eab\u6709\u4e00\u672c$IV$\u7ea7\u7684\u4e66\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528\u4e00\u672c$IV$\u7684\u4e66\u62b5\u6d88\n\n![](https://cdn.luogu.com.cn/upload/pic/43884.png)\n\n\u53e6\u4e00\u672c$IV\u7ea7\u7684\u4e66\uff0c\u53ef\u4ee5\u5206\u6210\u4e24\u4e2a$III$\u7ea7\u7684\u4e66\u5408\u6210\u7684\n\n\u6211\u4eec\u672c\u8eab\u6709\u4e00\u672c$III$\u7ea7\u7684\u4e66\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528\u4e00\u672c$III$\u7684\u4e66\u62b5\u6d88\n\n![](https://cdn.luogu.com.cn/upload/pic/43885.png)\n\n\u5982\u6b64\u91cd\u590d\uff0c\u76f4\u5230\n\n![](https://cdn.luogu.com.cn/upload/pic/43886.png)\n\n\u8fd9\u65f6\u5019\u76f4\u63a5\u7528\u4e24\u672c$I$\u7ea7\u7684\u4e66\u5408\u5e76\uff0c\u82b1\u8d39\u7ecf\u9a8c\u4e3a$1+1=2$\uff0c\u5408\u6210\u540e\u7684$II$\u7ea7\u4e66\uff0c\u60e9\u7f5a\u7b49\u7ea7\u4e3a$3$(\u4e66\u4e0a\u7684\u7c89\u8272\u6570\u5b57\u5c31\u662f)\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/43887.png)\n\n\u7136\u540e\u76f4\u63a5\u7528\u4e24\u672c$II$\u7ea7\u7684\u4e66\u5408\u5e76\uff0c\u82b1\u8d39\u7ecf\u9a8c\u4e3a$1+3=4$\uff0c\u5408\u6210\u540e\u7684$III$\u7ea7\u4e66\uff0c\u60e9\u7f5a\u7b49\u7ea7\u4e3a$7$\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/43888.png)\n\n\u5230\u6700\u540e\n\n![](https://cdn.luogu.com.cn/upload/pic/43889.png)\n\n\u82b1\u8d39\u5c31\u662f\u6240\u6709\u7eff\u8272\u6570\u5b57\u4e4b\u548c$30$\n\n\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\n\n```\npair<long long ,long long > dapai(long long  lv){\n\t//pair\u7684\u7b2c\u4e00\u4e2a\u6570\u5b58\u7684\u662f\u82b1\u8d39\uff0c\u7b2c\u4e8c\u4e2a\u6570\u5b58\u7684\u662f\u7d2f\u79ef\u60e9\u7f5a\n\tif(bucket[lv]){\t//\u5982\u679c\u6709\u5c31\u76f4\u63a5\u62b5\u6d88\n\t\t--bucket[lv];\n\t\treturn make_pair(0,1);\n\t}\n\tlong long  cost=0,punishlv=0;\n\tpair<long long ,long long > first=dapai(lv-1),sec=dapai(lv-1);//\u9012\u5f52\u4e0b\u53bb\u5b8c\u6210\u4e0a\u8ff0\u7b97\u6cd5\n\tcost=first.first +sec.first +sec.second +first.second;\t//\u8ba1\u7b97\u82b1\u8d39\n\tpunishlv=max(first.second,sec.second)*2+1;\t//\u66f4\u65b0\u65b0\u7684\u7d2f\u79ef\u60e9\u7f5a\n\treturn make_pair(cost,punishlv);\n}\n```\n\n\u4e8e\u662f\u95ee\u9898\u89e3\u51b3\u4e86\n\n373ms\u8fd8\u884c\n\n# \u6e90\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<cstdlib>\n#include<cstdarg>\n#include<algorithm>\n#include<iostream>\n#define il inline\n#define rg register\n#define MAXN (int (1e7+5)) \nusing namespace std;\nil int isdigit(char ch){\n    return ch>='0'&&ch<='9';\n}\nil int max(long long  a,long long  b){\n    return a>b?a:b;\n}\n\ninline void read(long long  &x){\n     char ch;x=0;\n     while(!isdigit(ch))   ch=getchar();\n     while(isdigit(ch))   x=x*10+ch-'0',ch=getchar();\n}\nlong long  n;\nlong long  a[MAXN];\nlong long  tong[MAXN];\nlong long  dp[MAXN];\nlong long  bucket[MAXN];\n\n\npair<long long ,long long > dapai(long long  lv){//a is cost b is chengfa_lv\n    if(bucket[lv]){\n        --bucket[lv];\n        return make_pair(0,1);\n    }\n    long long  cost=0,punishlv=0;\n    pair<long long ,long long > first=dapai(lv-1),sec=dapai(lv-1);\n    cost=first.first +sec.first +sec.second +first.second;\n    punishlv=max(first.second,sec.second)*2+1;\n    return make_pair(cost,punishlv);\n}\n\n\nlong long  getinv(long long  x,long long  y){\n    if(y==1||y==0)\treturn -1;\n    for(rg long long  i=2;i<=min(x,y);++i)\n        if(!(x%i)&&!(y%i))\treturn -1;\n    x%=y;\n    for(rg long long  i=1;;++i){\n        if(x*i%y==1)\treturn i;\n    }\n}\nsigned main(){\n    read(n);\n    if(n==1){\n        puts(\"-1\");\n        return 0;\n    }\n    long long  x=0;\n    for(rg long long  i=1;i<=n;++i){\n        read(a[i]);\n        ++bucket[a[i]];\n        ++tong[a[i]];\n        x=max(x,a[i]);\n        for(rg long long  j=a[i];tong[j]>=2;++j){\n            x=max(x,j+1);\n            ++tong[j+1];\n            tong[j]=0;\n        }\n    }\n    //std::sort(a+1,a+1+n);\n    long long  y=dapai(x).first;\n    //prlong long f(\"%lld %lld \",x,y);\n    long long  inv=getinv(x,y);\n    if(inv==-1)\tputs(\"-1\");\n    else printf(\"%lld \",inv);\n    return 0;\n} \n```",
        "postTime": 1542525068,
        "uid": 47863,
        "name": "Imakf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5032 \u3010\u7ecf\u9a8c\u3011"
    },
    {
        "content": "~~\u4f5c\u4e3a MC \u515a\u7684\u6211\u81ea\u7136\u770b\u5230\u9898\u89e3\u4e0d\u591f\u5c31\u5199\u8fd9\u9053\u9898\u7684\u9898\u89e3\u4e86\u3002~~\n\n\u8fd9\u9053\u9898\u76ee\u63cf\u8ff0\u5f88\u957f\uff0c\u4f46\u5f88\u591a\u90fd\u662f\u5e9f\u8bdd\uff0c\u53ea\u9700\u8981\u6ce8\u610f\u6bcf\u6b21\u9644\u9b54\u7684\u8d39\u7528\u662f\u4e24\u4e2a\u7269\u54c1\u7684\u60e9\u7f5a\u4e4b\u548c\uff0c\u65b0\u7684\u7269\u54c1\u7684\u60e9\u7f5a\u7b49\u7ea7\u662f\u539f\u7269\u54c1\u60e9\u7f5a\u7b49\u7ea7\u8f83\u9ad8\u7684\u4e24\u500d\u52a0\u4e00\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u90a3\u4e48\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\u8981\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9\uff1a\n\n1. \u7531\u4e8e $n$ \u5f88\u5927\uff0c\u5fc5\u987b\u8981\u7528\u5feb\u8bfb\u3002\n1. \u7531\u4e8e\u9644\u9b54\u7b49\u7ea7\u53ea\u4f1a\u5355\u8c03\u9012\u589e\u7684\uff0c\u6240\u4ee5\u8981\u5148\u7ed9\u6570\u7ec4\u6392\u5e8f\u3002\u4f46 $1\\le n \\le 10^7$ \u800c $1\\le a_i \\le 10^7$\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u8ba1\u6570\u6392\u5e8f\u6216\u57fa\u6570\u6392\u5e8f\uff0c\u672c\u9898\u89e3\u7528\u7684\u662f\u57fa\u6570\u6392\u5e8f\uff0c\u4e0d\u4f1a\u7684\u53ef\u4ee5\u770b\u6211\u7684[\u8fd9\u7bc7\u9898\u89e3](https://www.luogu.com.cn/blog/YCE-22/solution-p6038)\uff0c\u6548\u7387\u76f8\u5bf9\u8ba1\u6570\u6392\u5e8f\u7565\u4f4e\uff0c\u4f46\u53ef\u6269\u5c55\u6027\u66f4\u9ad8\u3002\n1. \u53ea\u6709\u4e24\u4e2a\u9644\u9b54\u7b49\u7ea7\u76f8\u540c\u7684\u4e24\u4e2a\u5408\u5e76\u624d\u662f\u6700\u4f18\u7684\uff0c\u5426\u5219\u53ea\u4f1a\u6d6a\u8d39\u7ecf\u9a8c\u3001\u5806\u79ef\u60e9\u7f5a\uff0c\u5e76\u4e0d\u4f1a\u63d0\u5347\u9644\u9b54\u7b49\u7ea7\u3002\u56e0\u6b64\uff0c\u53ea\u6709\u9047\u5230\u4e24\u4e2a\u9644\u9b54\u7b49\u7ea7\u76f8\u540c\u7684\u624d\u8981\u53bb\u5408\u5e76\u3002\u53ef\u4ee5\u7ef4\u62a4\u4e24\u4e2a\u5355\u8c03\u9012\u589e\u7684\u961f\u5217\uff0c\u7b2c\u4e00\u4e2a\u961f\u5217\u5b58\u7684\u662f\u539f\u6709\u7684\u9644\u9b54\u4e66\uff0c\u521d\u59cb\u60e9\u7f5a\u4e3a $1$\uff0c\u6d88\u8017\u7b49\u7ea7\u6570\u4e3a $0$\uff0c\u800c\u7b2c\u4e8c\u4e2a\u961f\u5217\u5b58\u7684\u662f\u5408\u6210\u7684\u9644\u9b54\u4e66\u3002\u6bcf\u6b21\u5faa\u73af\uff0c\u53d6\u51fa\u6700\u5c0f\u7684\u4e24\u672c\u9644\u9b54\u4e66\uff08\u600e\u4e48\u6bd4\u8f83\u5927\u5c0f\u4ee3\u7801\u4f1a\u8bf4\u660e\u7684\uff09\uff0c\u5e76\u5206\u522b\u4e0e\u76ee\u524d\u6700\u9ad8\u7b49\u7ea7\u6bd4\u8f83\uff0c\u82e5\u9ad8\u4e8e\u76ee\u524d\u6700\u9ad8\u7b49\u7ea7\uff0c\u5c31\u540c\u65f6\u66f4\u65b0\u6700\u9ad8\u7b49\u7ea7\u548c\u6d88\u8017\u7684\u7b49\u7ea7\uff1b\u5426\u5219\uff0c\u82e5\u7b49\u4e8e\u76ee\u524d\u6700\u9ad8\u7b49\u7ea7\uff0c\u5c31\u4e0e\u76ee\u524d\u6700\u4f4e\u6d88\u8017\u7b49\u7ea7\u6bd4\u8f83\uff0c\u53d6\u8f83\u4f4e\u7684\u3002\u63a5\u7740\uff0c\u82e5\u4e24\u672c\u9644\u9b54\u4e66\u7b49\u7ea7\u76f8\u540c\uff0c\u5219\u5408\u5e76\u4e24\u672c\u9644\u9b54\u4e66\uff0c\u5e76\u628a\u65b0\u7684\u9644\u9b54\u4e66\u52a0\u5165\u7b2c\u4e8c\u4e2a\u961f\u5217\u7684**\u961f\u5c3e**\uff0c\u5426\u5219\uff0c\u5c31\u820d\u5f03\u7b2c\u4e00\u672c\u9644\u9b54\u4e66\uff0c\u628a\u7b2c\u4e8c\u672c\u9644\u9b54\u4e66\u539f\u8def\u8fd4\u56de\u53d6\u51fa\u8be5\u9644\u9b54\u4e66\u7684\u961f\u5217\u7684**\u961f\u9996**\uff08\u4e00\u5b9a\u662f\u8981\u653e\u5728\u961f\u9996\uff0c\u6211\u56e0\u4e3a\u8fd9\u4e2a\u88ab\u5751\u8fc7\uff09\u3002\u8fd9\u6837\u76f4\u5230\u4e24\u4e2a\u961f\u5217\u53ea\u5269\u4e00\u4e2a\u5143\u7d20\uff0c\u6700\u540e\u518d\u6b21\u8fdb\u884c\u6bd4\u8f83\u3002\n1. \u6c42 $x$ \u5728\u6a21 $y$ \u610f\u4e49\u4e0b\u7684\u4e58\u6cd5\u9006\u5143 $k$\uff0c\u53ef\u89e3\u540c\u4f59\u65b9\u7a0b $kx \\equiv 1 \\pmod y$\uff0c\u6700\u540e\u89e3\u51fa\u6765\u7684 $k$\uff0c\u8fd8\u8981\u8fdb\u884c\u53d6\u6a21\uff0c\u5426\u5219\u53ef\u80fd\u5927\u4e8e $y$ \u6216\u5c0f\u4e8e $0$\u3002\n\n\u7ec6\u8282\u8fd8\u662f\u5f88\u591a\u7684\uff0c\u4e0d\u7406\u89e3\u7684\u53ef\u4ee5\u770b\u4ee5\u4e0b\u4ee3\u7801\uff1a\n```cpp\n#include<deque>\n#include<cstdio>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nconst int N = 10000000 + 10;\nFILE *fin, *fout;\ninline int read(int &x) {//n\u5f88\u5927\uff0c\u4e00\u5b9a\u8981\u7528\u5feb\u8bfb\n\tchar c = 0; int f = x = 0;\n\twhile (c < 48 || c > 57) {\n\t\tif (c == -1) return 0;\n\t\tif (c == '-') f = 1; c = fgetc(fin);\n\t}\n\twhile (c > 47 && c < 58) x = (x << 3) + (x << 1) + (c & 15), c = fgetc(fin);\n\tif (f) x = -x; return 1;\n}\ninline int write(ll x) {\n\tif (x < 0) return fputc(45, fout), write(-x);\n\tif (x > 9) write(x / 10);\n\treturn fputc((x % 10) | 48, fout), 1;\n}\nstruct node {\n\tll lvl, val, cost;\n\tnode(ll lvl = 0, ll val = 0, ll cost = 0): lvl(lvl), val(val), cost(cost){}\n\tinline friend bool operator <(node u, node v) {//\u6bd4\u8f83\u65b9\u6cd5\uff0c\u4ee5\u7b49\u7ea7\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u4ee5\u603b\u82b1\u8d39\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u4ee5\u7d2f\u8ba1\u60e9\u7f5a\u4e3a\u7b2c\u4e09\u5173\u952e\u5b57\uff0c\u90fd\u662f\u8f83\u5c0f\u65f6\u8fd4\u56de1\n\t\tif (u.lvl < v.lvl) return 1;\n\t\tif (u.lvl > v.lvl) return 0;\n\t\tif (u.cost < v.cost) return 1;\n\t\tif (u.cost > v.cost) return 0;\n\t\treturn u.val < v.val;\n\t}\n};\ndeque<node> q1, q2;//\u6ce8\u610f\u662f\u53cc\u7aef\u961f\u5217\nll lvl, cost, x, y;\nint n, cnt[256], a[N], b[N];\ninline void radix_sort(int* s, int* t) {//\u57fa\u6570\u6392\u5e8f\uff0c\u4e0d\u4f1a\u7684\u770b\u4e0a\u9762\u7684\u94fe\u63a5\n\tfor (int bit = 0; bit < 17; bit += 8) {//\u7531\u4e8ea[i]\u572810^7\u4ee5\u5185\uff0c\u6240\u4ee5\u6bd4\u4e09\u6b21\u5373\u53ef(10^7<2^24)\n\t\tfor (int i = 0; i < 256; ++i) cnt[i] = 0;\n\t\tfor (int* p = s; p < t; ++p) ++cnt[(*p >> bit) & 255];//\u8fd9\u4e2a\u5730\u65b9\u7528\u6307\u9488\u5199\u6cd5\uff0c\u66f4\u7701\u65f6\u95f4\n\t\tfor (int i = 1; i < 256; ++i) cnt[i] += cnt[i - 1];\n\t\tfor (int* p = t - 1; p >= s; --p) b[--cnt[(*p >> bit) & 255]] = *p;\n\t\tfor (int* p = s; p < t; ++p) *p = b[p - s];\n\t}\n}\ninline ll exgcd(ll a, ll b, ll& x, ll& y) {//\u89e3\u540c\u4f59\u65b9\u7a0b\n\tif (!b) return x = 1, y = 0, a;\n\tll res = exgcd(b, a % b, x, y);\n\tll z = x; x = y, y = z - y * (a / b);\n\treturn res;\n}\nint main() {\n\t#ifdef ONLINE_JUDGE\n\tfin = stdin, fout = stdout;\n\t#else\n\tfin = fopen(\"P5032.in\", \"rb\"), fout = fopen(\"P5032.out\", \"wb\");\n\t#endif\n\tfor (int i = read(n); i <= n; ++i) read(a[i]);\n\tradix_sort(a + 1, a + n + 1);\n\tfor (int i = 1; i <= n; ++i) q1.push_back(node(a[i], 1, 0));//\u521d\u59cb\u5316\n\twhile (q1.size() + q2.size() > 1) {\n\t\tnode u, v; int flag;//flag\u7528\u4e8e\u4e0b\u9762\u539f\u8def\u8fd4\u56de\u54ea\u4e2a\u961f\u5217\n\t\tif (!q1.empty() && (q2.empty() || q1.front() < q2.front())) u = q1.front(), q1.pop_front();\n\t\telse u = q2.front(), q2.pop_front();\n\t\tif (!q1.empty() && (q2.empty() || q1.front() < q2.front())) v = q1.front(), q1.pop_front(), flag = 1;//flag=1\u4ee3\u8868v\u662f\u4eceq1\u5f00\u59cb\u53d6\u5f97\uff0c\u4e0b\u9762\u4e00\u6bb5\u7c7b\u4f3c\n\t\telse v = q2.front(), q2.pop_front(), flag = 2;\n\t\tll ul = u.lvl, uv = u.val, uc = u.cost;\n\t\tll vl = v.lvl, vv = v.val, vc = v.cost;\n\t\tif (ul > lvl) lvl = ul, cost = uc;\n\t\telse if (ul == lvl && uc < cost) cost = uc;//\u66f4\u65b0\u7b54\u6848\n\t\tif (vl > lvl) lvl = vl, cost = vc;\n\t\telse if (vl == lvl && vc < cost) cost = vc;\n\t\tif (ul == vl) q2.push_back(node(ul + 1, max(uv, vv) * 2 + 1, uc + vc + uv + vv));//\u7b49\u7ea7\u76f8\u540c\u5c31\u5408\u5e76\n\t\telse if (flag == 1) q1.push_front(node(vl, vv, vc)); else q2.push_front(node(vl, vv, vc));//\u7b49\u7ea7\u4e0d\u540c\u5c31\u8fd4\u56de\n\t}\n\tnode u;\n\tif (!q1.empty()) u = q1.front();\n\telse u = q2.front();\n\tll ul = u.lvl, uc = u.cost;\n\tif (ul > lvl) lvl = ul, cost = uc;\n\telse if (ul == lvl && uc < cost) cost = uc;\n\tif (exgcd(lvl, cost, x, y) != 1) write(-1LL);\n\telse write((x % cost + cost) % cost);\n\treturn 0;\n}\n//\u672c\u4ee3\u7801\u6ca1\u6709\u5751\uff0c\u8bf7\u5927\u5bb6\u52a1\u5fc5\u505a\u5230\u5b66\u672f\u8bda\u4fe1\uff0c\u4e0d\u8981\u6284\u9898\u89e3\uff01\n```",
        "postTime": 1596942804,
        "uid": 181378,
        "name": "Alarm5854",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5032 \u3010\u7ecf\u9a8c\u3011"
    }
]