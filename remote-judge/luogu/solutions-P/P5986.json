[
    {
        "content": "\u5148\u8003\u8651\u66b4\u529b\u3002\u5bb9\u6613\u60f3\u5230\u8d2a\u5fc3\uff1a\u6bcf\u6b21\u5403\u6240\u6709\u80fd\u5403\u7684\u5c0f\u9c7c\u4e2d\u6700\u5927\u7684\u9c7c\uff0c\u4e00\u4e2a\u4e2a\u66b4\u529b\u5403\uff0c\u53ef\u4ee5\u5f97\u5230\u6b63\u786e\u7b54\u6848\u3002\n\n\u6211\u4eec\u518d\u8003\u8651\u4e00\u4e0b\u5982\u4f55\u4f18\u5316\u8d2a\u5fc3\u7684\u8fc7\u7a0b\u3002\u8bbe\u9ca8\u9c7c\u5f53\u524d\u91cd\u91cf\u4e3a $s$\uff0c\u6240\u6709\u4ed6\u5403\u4e0d\u4e86\u7684\u5c0f\u9c7c\u7684\u91cd\u91cf\u6700\u5c11\u4e3a $x$\u3002\u663e\u7136 $x \\ge s$\u3002\u5bb9\u6613\u770b\u51fa\uff0c\u5728 $s \\le x$ \u65f6\uff0c\u8fd9\u6761\u9ca8\u9c7c\u80fd\u5403\u7684\u5c0f\u9c7c\u7684\u96c6\u5408\u4e0d\u53d8\uff0c\u6211\u4eec\u76f4\u63a5\u7edf\u4e00\u5904\u7406\u5373\u53ef\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5f53\u524d\u6240\u6709\u7684\u9c7c\uff0c\u5148\u5168\u90e8\u8bfb\u5165\uff0c\u5e76\u4e14\u5c06\u91cd\u91cf\u79bb\u6563\u5316\uff0c\u6bcf\u6b21\u6c42\u51fa\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u9ca8\u9c7c\u91cd\u91cf\u7684\u91cd\u91cf\u6700\u5c0f\u7684\u9c7c\uff0c\u82e5\u5176\u91cd\u91cf\u4e3a $x$\uff0c\u90a3\u4e48\u5403\u5b8c\u8fd9\u4e00\u8f6e\u540e\uff0c\u9ca8\u9c7c\u81f3\u5c11\u8981\u5c06\u91cd\u91cf\u53d8\u4e3a $\\min(k, x +1)$\u3002\u82e5\u65e0\u6cd5\u5230\u8fbe\uff0c\u90a3\u4e48\u4e00\u5b9a\u65e0\u89e3\uff08\u56e0\u4e3a\u5230\u8fbe\u4e0d\u4e86 $x+1$\uff0c\u5403\u4e0d\u4e86\u5176\u5b83\u7684\u9c7c\uff09\u3002\n\n\u518d\u8bc1\u660e\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u82e5\u5f53\u524d\u9ca8\u9c7c\u91cd\u91cf\u4e3a $s$\uff0c\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u9ca8\u9c7c\u91cd\u91cf\u7684\u91cd\u91cf\u6700\u5c0f\u7684\u9c7c\u91cd\u91cf\u4e3a $x$\u3002\u7ecf\u8fc7\u4e00\u6b65\u64cd\u4f5c\u4e4b\u540e\uff0c$s$  \u7684\u6700\u5c0f\u503c\u4e3a $x +1$\u3002\u90a3\u4e48\u518d\u4e0b\u4e00\u6b65\uff0c\u5b83\u5c31\u4e00\u5b9a\u4f1a\u5403\u4e00\u6761\u91cd\u91cf $\\ge x$ \u7684\u9c7c\u3002\u800c\u521a\u5f00\u59cb\u65f6 $s \\le x$\uff0c\u6545\u8fd9\u4f1a\u4f7f\u9ca8\u9c7c\u91cd\u91cf\u7ffb\u500d\u3002\u56e0\u6b64\u6bcf\u4e00\u6b21\u6c42\u7b54\u6848\uff0c\u8fd9\u79cd\u6b65\u9aa4\u6700\u591a\u91cd\u590d $O(\\log k)$ \u6b21\u3002\u5176\u4e2d $k$ \u4e3a\u8981\u6c42\u8fbe\u5230\u7684\u91cd\u91cf\u3002\n\n\u518d\u52a0\u4e0a\u7ebf\u6bb5\u6811\u7684 $O(n \\log n)$\uff0c\u603b\u590d\u6742\u5ea6\u4e3a $O(n \\log n \\log k)$\u3002\u8f83\u4e3a\u5361\u5e38\uff0c\u539f\u9898\u65f6\u95f4\u9650\u5236 20s\uff0cloj 7s\uff0c\u5728\u4e00\u79d2\u7684\u65f6\u95f4\u5185\u8fc7\u5c31\u5fc5\u987b\u5f00 O2\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u65f6\u8981\u6ce8\u610f\u5e38\u6570\uff0c\u5426\u5219\u5f00\u4e86 O2 \u4ecd\u6709\u5f88\u5927\u53ef\u80fd\u4e0d\u8fc7\u3002\u597d\u597d\u60f3\u6e05\u695a\uff0c\u6bd5\u7adf\u8fd9\u9898\u7ec6\u8282\u633a\u591a\u7684\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 4e5 + 5;\nusing LL = long long;\nint n, m, tt;\nLL b[N];\nstruct {\n\tint op;\n\tLL x, w;\n} a[N];\nstruct Seg {\n\tstruct node {\n\t\tint l, r, cnt;\n\t\tLL sum;//\u61d2\u6807\u8bb0\u76f4\u63a5\u4e0d\u9700\u8981\uff0c\u5982\u679csum = 0\u5219\u76f4\u63a5\u8fd4\u56de\uff0c\u7c7b\u4f3c\u6c38\u4e45\u5316\u6807\u8bb0\u3002 \n\t} t[N << 2];\n\tnode stk[N << 2];\n\tint po[N << 2], tp;\n\tbool vis[N << 2];\n\tinline void Up(int p) {\n\t\tt[p].sum = t[p << 1].sum + t[p << 1 | 1].sum;\n\t\tt[p].cnt = t[p << 1].cnt + t[p << 1 | 1].cnt;\n\t}\n\tvoid build(int p, int l, int r) {\n\t\tt[p].l = l, t[p].r = r;\n\t\tif (l == r) {\n\t\t\tt[p].cnt = l == tt;\n\t\t\tt[p].sum = (l == tt) * b[tt];\n\t\t\treturn;\n\t\t}\n\t\tint mid(l + r >> 1);\n\t\tbuild(p << 1, l, mid);\n\t\tbuild(p << 1 | 1, mid + 1, r);\n\t\tUp(p);\n\t}\n\tvoid change(int p, int x, int v) {\n\t\tif (t[p].l == t[p].r) {\n\t\t\tt[p].sum += v * b[x];\n\t\t\tt[p].cnt += v;\n\t\t\treturn;\n\t\t}\n\t\tint mid(t[p].l + t[p].r >> 1);\n\t\tif (x <= mid) change(p << 1, x, v);\n\t\telse change(p << 1 | 1, x, v);\n\t\tUp(p);\n\t}\n\tint ask(int p, int x) {\n\t\tif (!t[p].sum) return 0;\n\t\tif (x <= t[p].l) {\n\t\t\tif (t[p].l == t[p].r) return t[p].l;\n\t\t\tint t = ask(p << 1, x);\n\t\t\tif (t) return t;\n\t\t\telse return ask(p << 1 | 1, x);\n\t\t}\n\t\tint mid(t[p].l + t[p].r >> 1);\n\t\tif (x <= mid) {\n\t\t\tint t = ask(p << 1, x);\n\t\t\tif (t) return t;\n\t\t}\n\t\treturn ask(p << 1 | 1, x);\n\t}\n\tvoid work(int p) {\n\t\tif (!vis[p]) vis[p] = 1, stk[++tp] = t[p], po[tp] = p;\n\t}\n\tvoid modify(int p, int r, LL &foo, int &cnt) {\n\t\tif (!t[p].sum || foo <= 0) return;\n\t\twork(p);\n\t\tif (t[p].r <= r) {\n\t\t\tif (t[p].l == t[p].r) {\n\t\t\t\tint cc = min((foo - 1) / b[t[p].l] + 1, 1ll * t[p].cnt);\n\t\t\t\tt[p].cnt -= cc;\n\t\t\t\tt[p].sum -= cc * b[t[p].l];\n\t\t\t\tcnt += cc;\n\t\t\t\tfoo -= cc * b[t[p].l];\n\t\t\t} else {\n\t\t\t\tif (t[p << 1 | 1].sum <= foo) {\n\t\t\t\t\twork(p << 1 | 1);\n\t\t\t\t\tfoo -= t[p << 1 | 1].sum, cnt += t[p << 1 | 1].cnt;\n\t\t\t\t\tt[p << 1 | 1].sum = 0, t[p << 1 | 1].cnt = 0;\n\t\t\t\t\tmodify(p << 1, r, foo, cnt);\n\t\t\t\t} else modify(p << 1 | 1, r, foo, cnt);\n\t\t\t\tUp(p);//\u5fc5\u987b\u8bb0\u5f97\u66f4\u65b0\uff0c\u5426\u5219\u5c31\u4f1a\u5c11\u51cf\u53bb\u4e00\u4e9b \n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tint mid(t[p].l + t[p].r >> 1);\n\t\tif (r > mid) modify(p << 1 | 1, r, foo, cnt);\n\t\tmodify(p << 1, r, foo, cnt);\n\t\tUp(p);\n\t}\n\tint calc(LL ss, LL kk) {\n\t\tif (ss >= kk) return 0;//\u4e0d\u7528\u5403 \n\t\tif (ss <= b[1]) return -1;//\u9700\u8981\u5403\u4f46\u662f\u6ca1\u5f97\u5403 \n\t\tint ans = 0;\n\t\twhile (ss < kk) {\n\t\t\tint pos = lower_bound(b + 1, b + tt + 1, ss) - b, vv = pos;\n\t\t\tvv = ask(1, vv);\n\t\t\tLL vvv = min(b[vv] + 1, kk) - ss;//\u9700\u8981\u5403\u591a\u5c11 t.ask(1, vv)\n\t\t\tint mfood = pos - 1;\n\t\t\tLL vvvv = vvv;\n\t\t\tmodify(1, mfood, vvvv, ans);\n\t\t\tif (vvvv > 0) {\n\t\t\t\tans = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tss += vvv - vvvv;\n\t\t}\n\t\twhile (tp) {\n\t\t\tt[po[tp]] = stk[tp], vis[po[tp]] = 0;\n\t\t\t--tp;\n\t\t}\n\t\treturn ans;\n\t}\n} t;\nint main() { \n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; ++i) {\n\t\ta[i].op = 2;\n\t\tscanf(\"%lld\", &a[i].x);\n\t\tb[++tt] = a[i].x;\n\t}\n\tscanf(\"%d\", &m);\n\tfor (int i = n + 1; i <= n + m; ++i) {\n\t\tscanf(\"%d%lld\", &a[i].op, &a[i].x);\n\t\tif (a[i].op == 1) scanf(\"%lld\", &a[i].w);\n\t\telse b[++tt] = a[i].x;\n\t}\n\tb[++tt] = 2e18;\n\tsort(b + 1, b + tt + 1);\n\ttt = unique(b + 1, b + tt + 1) - b - 1;\n\tfor (int i = 1; i <= n + m; ++i)\n\t\tif (a[i].op != 1) a[i].x = lower_bound(b + 1, b + tt + 1, a[i].x) - b;\n\tt.build(1, 1, tt);\n\tfor (int i = 1; i <= n + m; ++i) {\n\t\tif (a[i].op == 1) printf(\"%d\\n\", t.calc(a[i].x, a[i].w));\n\t\tif (a[i].op == 2) t.change(1, a[i].x, 1);\n\t\tif (a[i].op == 3) t.change(1, a[i].x, -1);\n\t}\n}\n```",
        "postTime": 1661080437,
        "uid": 162196,
        "name": "\u4f1f\u5927\u7684\u738b\u592b\u5b50",
        "ccfLevel": 6,
        "title": "P5986 [PA2019]Szprotki i szczupaki \u9898\u89e3"
    }
]