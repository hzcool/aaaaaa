[
    {
        "content": "\u597d\u9898\u3002\n\n\u8fd9\u9053\u9898\u6bcf\u6761\u8def\u6709\u4e24\u4e2a\u6743\u503c\uff0c\u4e14\u8981\u6c42\u7684\u662f\u73af\u5185\u6743\u503c\u4e4b\u6bd4\u7684\u6700\u5927\u503c\uff0c\u5f88\u5bb9\u6613\u8054\u60f3\u5230\u4e24\u4e2a\u7b97\u6cd5\uff1aTarjan \u548c \u5355\u6e90\u6700\u77ed\u8def\u5f84\u3002\n\n\u8003\u8651Tarjan\uff0c\u57fa\u672c\u601d\u8def\u662f\u6c42\u51fa\u5f3a\u8fde\u901a\u5206\u91cf\u518d\u8fdb\u884c\u76f8\u52a0\u6bd4\u8f83\u3002\u7531\u4e8eTarjan\u53ea\u80fd\u6c42\u51fa\u6700\u5927\u7684\u73af\uff0c\u90a3\u4e48\u5b83\u4fbf\u4e0d\u80fd\u7167\u987e\u5230\u6240\u6709\u53ef\u80fd\u89e3\uff0c\u663e\u7136\uff0c\u7528Tarjan\u627e\u73af\u518d\u76f8\u52a0\u4e0d\u73b0\u5b9e\u3002\n\n_____\n\n\u8003\u8651\u5355\u6e90\u6700\u77ed\u8def\uff0c\u663e\u7136\u8fd9\u9053\u9898\u4e0d\u80fd\u7b80\u5355\u7684\u5957\u6a21\u677f\u3002\u6211\u4eec\u8bbe$ans$\u4e3a\u6700\u4f18\u89e3\uff0c\u5219\u5176\u4e00\u5b9a\u6ee1\u8db3\n\n## $\\frac{\\Sigma V_{i}}{\\Sigma C_{i}}\\leqslant ans$\n\uff08\u5176\u4e2d\uff0c$V_{i}$\u548c$C_{i}$\u4e3a\u56fe\u4e2d\u4efb\u610f\u73af\u4e0a\u7684\u8fb9\u6743\uff0cans\u4e3a\u6700\u4f18\u89e3\uff09\n\n\u90a3\u4e48\uff0c\u6839\u636e\u4e0d\u7b49\u5f0f\u7684\u6027\u8d28\u8fdb\u884c\u53d8\u6362\uff1a\n\n\u7531\u4e8e$\\Sigma C_{i}$\u4e00\u5b9a\u662f\u6b63\u6570\uff0c\u6240\u4ee5\uff1a\n\n### $\\Sigma V_{i}\\leqslant ans*\\Sigma C_{i}$\n\n\u7b49\u5f0f\u4e24\u8fb9\u540c\u65f6\u51cf\u53bb$\\Sigma V_{i}$\uff0c\u5f97\u5230\uff1a\n### $ans*\\Sigma C_{i}-\\Sigma V_{i}\\geqslant 0$\n\n\u663e\u7136\uff0c\u53ea\u8981\u4e00\u4e2a$ans$\u6ee1\u8db3\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u89e3\u5c31\u4e00\u5b9a\u662f\u53ef\u884c\u7684\u3002\n\n\u4f46\u662f\u5982\u679c\u4e00\u4e2a\u89e3\u53ef\u4ee5\uff0c\u90a3\u6bd4\u8fd9\u4e2a\u89e3\u5927\u7684\u5176\u4ed6\u89e3\u5176\u5b9e\u90fd\u662f\u53ef\u4ee5\u7684\u3002\uff08\u5982\uff1a\u5bf9\u4e8e\u6837\u4f8b$ans=2.3$ \u65f6\uff0c\u6ee1\u8db3\u4e0a\u8ff0\u4e0d\u7b49\u5f0f\uff0c\u4f46\u53ea\u8981$ans\\geqslant2.3$\uff0c\u6240\u6709\u7684\u89e3\u90fd\u662f\u6ee1\u8db3\u4e0d\u7b49\u5f0f\u7684\uff09\n\n\u6211\u4eec\u8981\u6c42\u7684\u662f\u4e00\u4e2a\u6700\u5c0f\u7684\u6ee1\u8db3\u8be5\u7b49\u5f0f\u7684$ans$\uff0c\u6240\u4ee5\u5c31\u662f\u6240\u8c13\u7684\u201c\u6700\u5927\u503c\u91cc\u6700\u5c0f\u7684\u201d\uff0c\u800c\u8fd9\u5c31\u662f\u4e8c\u5206\u7b54\u6848\u7684\u6807\u5fd7\u3002\n\n** \u90a3\u4e48\uff0c\u6211\u4eec\u628a\u6bcf\u6761\u8fb9\u90fd\u6839\u636e\u4e8c\u5206\u7b54\u6848\u51fa\u6765\u7684$ans$\uff0c\u628a\u7b2c$i$\u6761\u8fb9\u7684\u6743\u503c\u4fee\u6539\u4e3a$ans*C_{i}-V_{i}$\uff0c\u7136\u540e\u8dd1SPFA\u5224\u8d1f\u73af\u5373\u53ef\u3002 **\n\n\u5927\u4f53\u601d\u8def\u6709\u4e86\uff0c\u63a5\u4e0b\u6765\u5f3a\u8c03\u4e00\u4e0b\u7ec6\u8282\u3002\n\n1. \u9898\u76ee\u8981\u6c42\u7684\u503c\u662f\u4e00\u4e2a\u5c0f\u6570\uff0c\u6ce8\u610f\u4e8c\u5206\u7b54\u6848\u7684\u6570\u636e\u7c7b\u578b\u3002\n\n2. \u4e0d\u8981\u7528BFS\u7248\u7684SPFA\uff0c\u4f1a\u8d85\u65f6\u3002\u7528DFS\u7248\u672c\u7684\u5dee\u4e0d\u591a\u3002\n\n3. \u56fe\u4e0d\u4e00\u5b9a\u8054\u901a\uff0c\u6240\u4ee5SPFA\u7684\u8d77\u70b9\u4e0d\u80fd\u968f\u4fbf\u627e\u4e00\u4e2a\u3002\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\u5f88\u7b80\u5355\u3002\u5efa\u4e00\u4e2a\u8d85\u7ea7\u70b9\uff0c\u8054\u901a\u5b83\u548c\u6240\u6709\u5176\u4ed6\u70b9\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5f88\u7b80\u5355\u3002\u7b80\u5355\u6ce8\u610f\u4e00\u4e0b\u8fb9\u7684\u5927\u5c0f\u5c31\u597d\u3002\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=7007;\nstruct edge\n{\n    int to,v,c;\n};\nvector<edge>G[maxn];\nint n,m;\nbool vis[maxn];\ndouble dis[maxn];\nbool spfa(double ans,int now)//DFS\u7248\u7684SPFA\n{\n    vis[now]=true;\n    for(int i=0;i<G[now].size();i++)\n    {\n        edge e=G[now][i];\n        double x=ans*e.c-e.v;//\u8fb9\u7684\u6743\u503c\uff0c\u6839\u636e\u4e8c\u5206\u51fa\u6765\u7684ans\u8fdb\u884c\u4fee\u6539\n        if (dis[e.to]>dis[now]+x)\n        {\n            if (vis[e.to]) return false;\n            else\n            {\n                dis[e.to]=dis[now]+x;\n                vis[now]=true;\n                if (!spfa(ans,e.to)) return false;\n            }\n        }\n    }\n    vis[now]=false;//\u8bb0\u5f97\u8981\u56de\u6eaf\n    return true;\n}\nint main()\n{\n    scanf(\"%d %d \",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        int x,y,v,c;\n        scanf(\"%d %d %d %d\",&x,&y,&v,&c);\n        G[x].push_back((edge){y,v,c});\n    }\n    for(int i=1;i<=n;i++)\n    {\n        G[0].push_back((edge){i,0,0});//\u8d85\u7ea7\u70b9\u4e0e\u6bcf\u4e2a\u70b9\u90fd\u9700\u8981\u8054\u901a\n    }\n    double l=0,r=1000001;//\u6ce8\u610f\u8fd9\u91cc\uff0cl\u9700\u8981\u4ece0\u800c\u4e0d\u662f1\u5f00\u59cb\u679a\u4e3e\u3002\u5177\u4f53\u4e3a\u4ec0\u4e48\u81ea\u5df1\u60f3\u3002\n    while(l+0.00001<r)//\u6d6e\u70b9\u6570\u7684\u7cbe\u5ea6\u95ee\u9898\uff0c\u5e94\u8be5\u4e0d\u9700\u8981\u6211\u5f3a\u8c03\u4e86\uff1f\n    {\n        memset(dis,127,sizeof(dis));\n        memset(vis,false,sizeof(vis));\n        dis[0]=0;vis[0]=true;\n        double mid=(l+r)/2;\n        if (spfa(mid,0)) r=mid;\n        else l=mid;\n        mid=(l+r)/2;\n    }\n    if (l==0) printf(\"-1\\n\");\n    else printf(\"%.1f\\n\",l);\n    return 0;\n}\n\n\n```",
        "postTime": 1531726305,
        "uid": 41953,
        "name": "\u5188\u5d0e\u68a6\u7f8e",
        "ccfLevel": 0,
        "title": "P1768 \u5929\u8def"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u76f4\u63a5\u627e\u73af\u80af\u5b9a\u8d85\u65f6\uff0c\u751a\u81f360\u5206\u90fd\u4e0d\u597d\u62ff\u3002\u6211\u4eec\u8fd9\u6837\u60f3\uff1a\u8bbeans\u4e3a\u7b54\u6848\uff0c\u5219\u5b58\u5728\u4efb\u610f\u73afE\u4fdd\u8bc1\u2211V(i)/\u2211P(i)<=ans\uff0c\u53ef\u4ee5\u5f97\u5230\u2211V(i)<=ans\\*\u2211P(i)\uff0c\u4e8e\u662f\u2211{P(i)\\*ans}-\u2211V(i)>=0\u3002\n\n\u6700\u540e\u5f97\u5230\u2211{P(i)\\*ans-V(i)}>=0\uff0c\u5373\u4ee5P(i)\\*ans-V(i)\u4e3a\u8fb9\u6743\u7684\u56fe\u4e2d\u4e0d\u5b58\u5728\u8d1f\u6743\u73af\u3002\n\n\u6240\u4ee5\uff0c\u4e8c\u5206\u7b54\u6848ans\uff0c\u7528dfs\u6539\u8fdb\u7684SPFA\u7b97\u6cd5\u5224\u65ad\u56fe\u4e2d\u662f\u5426\u5b58\u5728\u8d1f\u6743\u73af\uff0c\u82e5\u5b58\u5728\uff0c\u4fee\u6539\u4e0b\u754c\u5426\u5219\u4fee\u6539\u4e0a\u754c\u3002\n\n\n\n```cpp\n\n#include<stdio.h> //By C_SUNSHINE & JOHNKRAN\n#include<iostream>\nusing namespace std;\nint h[10001],next[130001],v[130001],n,m;\nfloat p[130001],w[130001],d[130001],low,high,mid;\nbool in[130001],flag;\nvoid dfs(int now)\n{\n    in[now]=1;\n    for(int i=h[now];i;i=next[i])\n      if(d[now]+p[i]*mid-w[i]<=d[v[i]])\n      {\n        if(in[v[i]]){flag=0;return;}\n        d[v[i]]=d[now]+p[i]*mid-w[i];\n        dfs(v[i]);\n        if(!flag)return;\n      }\n    in[now]=0;\n}\nvoid init()\n{\n    scanf(\"%d%d\",&n,&m);\n    int i,j,k;\n    for(j=1;j<=m;j++)\n    {\n        scanf(\"%d%d%f%f\",&i,v+j,w+j,p+j);\n        if(i!=v[m])\n        {\n          next[j]=h[i];\n          h[i]=j;\n        }\n    }\n    for(i=1;i<=n;i++)\n    {\n        v[i+m]=i;\n        next[i+m]=h[0];\n        h[0]=i+m;\n    }\n}\nint main()\n{\n    init();\n    low=0;\n    high=200;\n    while(low+0.01<high)\n    {\n        mid=(low+high)/2;\n        flag=1;\n        memset(in,0,sizeof(in));\n        memset(d,127,sizeof(d));\n        d[0]=0;\n        dfs(0);\n        if(!flag)low=mid;\n        else high=mid;\n    }\n    if(low==0)printf(\"-1\");\n    else printf(\"%.1f\",high);\n    return 0;\n}\n\n\n```",
        "postTime": 1383314482,
        "uid": 716,
        "name": "C_SUNSHINE",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1768 \u3010\u5929\u8def\u3011"
    },
    {
        "content": "## \u8fd9\u662fBFS SPFA\u7684\u9898\u89e3\uff01\u5e76\u4e14\u662f\u7b2c\u4e00\u7bc7Bfs\u9898\u89e3\n\u9996\u5148\u7ed9\u51fa\u8bc1\u660e \uff1a\n\n\u8bbeans\u662f\u6700\u540e\u7684\u89e3\uff0c\u6709\u03a3$V_i$ / \u03a3$P_i$ <= ans;  \n    \n\u03a3$V_i$ <= \u03a3$P_i$ * ans; \n     \n0 <= \u03a3$P_i$ * ans - \u03a3$V_i$;\n\n\u6240\u4ee5\u6211\u4eec\u8981\u627e\u5230\u4e00\u4e2aans\u4f7f\u5f97\u8fb9\u6743\u4e3a\u03a3$P_i$ * ans - \u03a3$V_i$\u7684\u56fe\u4e0d\u5b58\u5728\u8d1f\u73af\uff1b\n\n\u81f3\u4e8e\u66f4\u8be6\u7ec6\u7684\u8bc1\u660e\u8bf7\u770b\u8fd9\u4e2a\u4eba\u7684\u9898\u89e3 \n\nhttps://start-dash.blog.luogu.org/P1768\n\n\n\n\u8fd9\u662f\u6b63\u5e38\u7684BFS\u6c42\u89e3\u8fc7\u7a0b \uff1a\n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\n#define ll long long\n\nusing namespace std;\nconst int maxn = 20001;\n\ninline int read() {\n    int x = 0, f = 1; char ch = getchar();\n    for(; ch < '0' || ch > '9'; ch = getchar()) if(ch == '-') f = -1;\n    for(; ch >= '0' && ch <= '9'; ch = getchar()) x = (x << 3) + (x << 1) + (ch ^ 48);\n    return x * f;\n}\n\nstruct node {\n    int next, to, v, p;\n    double dist;\n}edge[maxn];\n\nbool vis[maxn], flag;\nint sum[maxn], h[maxn], n, m, num = 0;\ndouble dis[maxn], l, r, mid;\n\nbool SPFA(int s) {\n    for(int i = 1; i <= n; ++i) vis[i] = 0, dis[i] = 1000000.01, sum[i] = 0;\n    queue <int> q;\n    vis[s] = 1; dis[s] = 0; q.push(s);\n    while(!q.empty()) {\n        int u = q.front(); q.pop(); vis[u] = 0;\n        if(sum[u] > n) return 1;\n        for(int i = h[u]; i; i = edge[i].next) {\n            int v = edge[i].to;\n            if(dis[v] > dis[u] + edge[i].dist) {\n                dis[v] = dis[u] + edge[i].dist;\n                if(!vis[v]) {\n                    q.push(v);\n                    vis[v] = 1;\n                    sum[v]++;\n                    if(sum[v] > n) return 1;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\nint main() {\n    n = read(); m = read();\n    for(int i = 1, a, b, c, d; i <= m; ++i) {\n        a = read(); b = read(); c = read(); d = read();\n        edge[++num] = (node){h[a], b, c, d, 0.}; h[a] = num;\n    }\n    l = 0.; r = 200.;\n    while(l + 0.01 < r) {\n        mid = (l + r) / 2;\n        for(int i = 1; i <= num; ++i) edge[i].dist = edge[i].p * mid - edge[i].v;\n        for(int i = 1; i <= n; ++i) {\n            flag = SPFA(i);\n            if(flag) break;\n        }\n        if(flag) l = mid;\n        else r = mid;\n    }\n    if(l) printf(\"%.1lf\", r);\n    else puts(\"-1\");\n}\n```\n\n\u53ea\u670970\u5206 https://www.luogu.org/record/show?rid=13111155\n\n\u7136\u540e\u6211\u5c31\u7ffb\u8ba8\u8bba\u770b\u5230\u6709\u4eba\u8bf4\u8fd9\u9898\u6570\u636e\u6c34\uff0c\u5165\u961f\u53ea\u8981\u5224\u65ad\u8d85\u8fc720\u6b21\u5c31\u7b97\u8d1f\u73af\u4e86\uff0c\u4e8e\u662f\u6709\u4e86\u4e0b\u9762\u7684\u4ee3\u7801 \uff1a\n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\n#define ll long long\n\nusing namespace std;\nconst int maxn = 20001;\n\ninline int read() {\n    int x = 0, f = 1; char ch = getchar();\n    for(; ch < '0' || ch > '9'; ch = getchar()) if(ch == '-') f = -1;\n    for(; ch >= '0' && ch <= '9'; ch = getchar()) x = (x << 3) + (x << 1) + (ch ^ 48);\n    return x * f;\n}\n\nstruct node {\n    int next, to, v, p;\n    double dist;\n}edge[maxn];\n\nbool vis[maxn], flag;\nint sum[maxn], h[maxn], n, m, num = 0;\ndouble dis[maxn], l, r, mid;\n\nbool SPFA(int s) {\n    for(int i = 1; i <= n; ++i) vis[i] = 0, dis[i] = 1000000.01, sum[i] = 0;\n    queue <int> q;\n    vis[s] = 1; dis[s] = 0; q.push(s);\n    while(!q.empty()) {\n        int u = q.front(); q.pop(); vis[u] = 0;\n        if(sum[u] > 20) return 1;//\u53ea\u6709\u8fd9\u884c\u548c\u4e0b\u9762\u90a3\u4e00\u884c\u5224\u65ad\u5165\u961f\u6b21\u6570\u7684\u5730\u65b9\u628an\u6539\u6210\u4e8620\n        for(int i = h[u]; i; i = edge[i].next) {\n            int v = edge[i].to;\n            if(dis[v] > dis[u] + edge[i].dist) {\n                dis[v] = dis[u] + edge[i].dist;\n                if(!vis[v]) {\n                    q.push(v);\n                    vis[v] = 1;\n                    sum[v]++;\n                    if(sum[v] > 20) return 1;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\nint main() {\n    n = read(); m = read();\n    for(int i = 1, a, b, c, d; i <= m; ++i) {\n        a = read(); b = read(); c = read(); d = read();\n        edge[++num] = (node){h[a], b, c, d, 0.}; h[a] = num;\n    }\n    l = 0.; r = 200.;\n    while(l + 0.01 < r) {\n        mid = (l + r) / 2;\n        for(int i = 1; i <= num; ++i) edge[i].dist = edge[i].p * mid - edge[i].v;\n        for(int i = 1; i <= n; ++i) {\n            flag = SPFA(i);\n            if(flag) break;\n        }\n        if(flag) l = mid;\n        else r = mid;\n    }\n    if(l) printf(\"%.1lf\", r);\n    else puts(\"-1\");\n}\n```\n\n\u4e8e\u662f\u4fbf\u6109\u5feb\u7684\u53d8\u6210\u4e86~~60~~\u5206 \uff1a\n\nhttps://www.luogu.org/record/show?rid=13111251\n\n\u7136\u540e\u6211\u4e71\u641e\u4e86\u4e00\u4e0b \uff1a\n\n```cpp\n\t\tfor(int i = 1; i <= n; ++i) {\n            flag = SPFA(i);\n            if(flag) break;\n        }\n```\n\n\u6211\u628a\u8fd9\u4e2a\u6539\u6210\u4e86 \uff1a\n\n```cpp\n\tflag = SPFA(1) || SPFA(n) || SPFA(n >> 1);\n```\n\n\u7136\u540e\u53d8\u6210\u4e8690\u5206 \uff1ahttps://www.luogu.org/record/show?rid=13112652\n\n\u771f\u662f\u795e\u5947\u7b2c\u4e00\u6b21\u89c9\u5f97\u81ea\u5df1\u8138\u771f\u767d\uff1b\n\n\u8fd9\u5341\u5206\u6211\u5b9e\u5728\u4e0d\u4f1a\u4e86\uff0c\u5c31\u5077\u5077\u7ffb\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u8fd8\u662f\u521a\u521a\u90a3\u4e2a\u4eba\u7684\u9898\u89e3\uff0c\u6211\u77e5\u9053\u4e86\u8d85\u7ea7\u70b9\u8fd9\u4e2a\u4e1c\u897f\uff0c\u5c31\u8bd5\u4e86\u4e00\u4e0b\uff0c\u7136\u540e\u4e00\u4e0d\u5c0f\u5fc3\u5c31A\u4e86\uff0c\u5f53\u7136ac\u4ee3\u7801\u662f\u4e0d\u4f1a\u7ed9\u4f60\u4eec\u7684\uff0c\u6bd5\u7adf\u770b\u5230\u8fd9\u91cc\u4f60\u90fd\u80fd\u62ff90\u5206\u4e86\uff0c\u6700\u540e10\u5206\u9760\u81ea\u5df1A\u4e86\u5b83\uff0c\u4f60\u5c31\u6bd4\u6211\u5f3a\u4e86\u3002\n\n\u8fd9\u91cc\u662f\u6211AC\u8bc1\u636e\uff1ahttps://www.luogu.org/record/show?rid=13113904\n\n\u8dd1\u7684\u8fd8\u662f\u633a\u5feb\u7684\uff1b\n\nnoip\u524d\u5199\u4e00\u7bc7\u9898\u89e3\uff0c\u4e0d\u7ba1\u80fd\u4e0d\u80fd\u8fc7\uff0c\u90fd\u5148\u795d\u5404\u4f4dRP++\uff1b\n\nPS\uff1a\n\n\u6b63\u5e38\u7684\u7528BFS\u6211\u662fA\u4e0d\u4e86\u8fd9\u9898\u7684\uff0c\u4f60\u4e5f\u770b\u5230\u6211\u662f\u5224\u65ad\u5165\u961f\u6b21\u6570\u8d85\u8fc720\u5c31return 1\u7684\uff0c\u6240\u4ee5\u8fd8\u662f\u5b66\u4e60\u4e00\u4e0bDFS\u7684\u65b9\u6cd5\u5427\uff1b",
        "postTime": 1541326376,
        "uid": 87977,
        "name": "Wisbtsml",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1768 \u3010\u5929\u8def\u3011"
    },
    {
        "content": "~~\u56fe\u8bba\u5176\u5b9e\u86ee\u597d\u73a9\u7684~~\uff0c\u968f\u4fbf\u53c8\u8ba1\u6570\u542b\u91cf\u7684\u9898\u76ee\u90fd\u53ef\u4ee5\u519990+\u884c\u4ee3\u7801\uff0c\u7ed9\u4eba\u6210\u5c31\u611f\uff0c\u505a\u4eba\u561b\uff0c\u5f00\u5fc3\u6700\u91cd\u8981\uff0c~~\u6211\u624d\u4e0d\u5f00\u5fc3~~\n\n-------------------------------------------------------------------------------------------------\n\n\u5176\u5b9e\u5728\u505a\u8fd9\u4e00\u9898\u524d\u505a\u5230\u8fc7\u7c7b\u4f3c\u7684\u9898\u76ee\uff0c\u7528\u4e8c\u5206+spfa\u5224\u8d1f\u73af\u3002~~spfa\u5927\u6cd5\u597d~~\u3002\n\n\u7b54\u6848\u662f\u5355\u8c03\u7684\u8fd9\u4e00\u70b9\u53ef\u4ee5\u77e5\u9053\uff0c\u7136\u540e\u4e8c\u5206\u3002\n\nmid=(l+r)/2;\u5047\u8bbeans=mid\uff1b\n\n\u90a3\u4e48\u5728\u56fe\u4e2d\u4efb\u4f55\u4e00\u4e2a\u73af\u5185\u03a3vi/\u03a3pi<=ans\u3002\u5982\u679c\u8fd8\u6709\u66f4\u5927\u7684\u5c31\u4f1a\u6709\u03a3vi/\u03a3pi>ans\uff0c\u4e5f\u5c31\u662fans\\*\u03a3pi-\u03a3vi<0\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528spfa\u5feb\u901f\u7684\u627e\u51fa\u662f\u5426\u5b58\u5728\u8fd9\u6837\u7684\u73af\uff0c\u5728\u4e8c\u5206\u4e2d\u6b65\u6b65\u903c\u8fd1\u771f\u7684ans\u3002\n\n\u7c7b\u4f3c\u7684\u65b9\u6cd5\u5728\u5dee\u5206\u7ea6\u675f\u4e2d\u4e5f\u7528\u5f97\u5230\u3002\uff08~~spfa\u4e43\u4e00\u5927\u795e\u5668\u554a~~\uff09\n\n-----------------------------------------\u5410\u69fd\u4e00\u4e0b------------------------------------------------------------------------------------------\n\n\u4e00\u5f00\u59cb\u6ca1\u770b\u9898\u76ee\u76f4\u63a5\u628a\u7ec3\u4e60\u65f6\u9047\u5230\u7684\u7c7b\u4f3c\u7684\u9898\u76ee\u7684\u4ee3\u7801\u4ea4\u4e86\u4e0a\u53bb\u540e\u6765\u53d1\u73b0\u8fde\u6570\u636e\u683c\u5f0f\u90fd\u5bf9\u4e0d\u4e0a\u3010-\\_-\u3011\uff0c\u4f46\u662f\u62ff\u4e8610\u5206\uff01\n\n\u7136\u540e\u8fc7\u4e86\u597d\u4e45\u60f3\u8d77\u6765\u8fd8\u6709\u8fd9\u4e00\u9898\u6240\u4ee5\u6765\u505a\u4e00\u4e0b\uff0c\u7136\u540e\u4e0d\u77e5\u9053\u7b54\u6848\u4fdd\u8bc1\u5728200\u5185\uff0c\u7136\u540eTLE\u4e86\u4e00\u4e2a\u70b9\uff0c\u540e\u6765AC\u4e4b\u540e\u53d1\u73b0\u90a3\u4e2a\u70b9\u65f6\u6bd4\u8f83\u5feb\u7684\uff1f\uff1f\uff01\uff01\u5176\u5b9e\u5dee\u4e0d\u591a\u3002\u94fe\u8868\u5b9e\u73b0\u7684\u90bb\u63a5\u8868\u61d2\u5f97\u5199\uff08~~\u5176\u5b9e\u4e0d\u600e\u4e48\u4f1a\u5199~~\uff09\uff0c\u5c31\u7528vector\u4e86\u3002\n\n----------------------------------------------------------------------------------------------------------------------------------------------\n\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\nusing namespace std;\nconst int maxn=7000+50;\nstruct edge{int to;double v,p;double w;};\nint n,m;\ndouble l=0,r=500,mid,d[maxn],used[maxn];\nvector<edge>G[maxn];\ninline int read(){\n    char ch=getchar();int data=0;\n    while(ch<'0' || ch>'9') ch=getchar();\n    do{\n        data=data*10+ch-'0';\n        ch=getchar();\n    }while(ch>='0' && ch<='9');\n    return data;\n}\ninline void add_edge(int x,int y,int v,int p){\n    edge e;\n    e.to=y;e.v=(double)v;e.p=(double)p;\n    G[x].push_back(e);\n    return;\n}\nvoid init(){\n    n=read();m=read();\n    for(int i=1;i<=m;i++){\n        int x,y;double p,v;\n        x=read();y=read();\n        scanf(\"%lf%lf\",&v,&p);\n        add_edge(x,y,v,p);\n    }\n    for(int i=1;i<=n;i++)\n        add_edge(0,i,0,0);\n    return;\n}\nvoid adjust(double now){\n    for(int x=1;x<=n;x++)\n        for(int y=0;y<G[x].size();y++)\n            G[x][y].w=now*G[x][y].p-G[x][y].v;\n    return;\n}\nbool spfa(int x){\n    used[x]=true;\n    for(int i=0;i<G[x].size();i++){\n        double temp=d[x]+G[x][i].w;\n        int y=G[x][i].to;\n        if(d[y]>temp){\n            d[y]=temp;\n            if(!used[y]){\n                if(spfa(y))\n                    return true;\n            }\n            else return true;\n        }\n    }\n    used[x]=false;\n    return false;\n}\nbool check(double now){\n    for(int i=1;i<=n;i++){\n        used[i]=false;\n        d[i]=1234567890;\n    }\n    d[0]=0;\n    adjust(now);\n    if(spfa(0)) return true;\n    return false;\n}\nvoid solve(){\n    while(r-l>0.01){\n        mid=(l+r)/2;\n        if(check(mid)) l=mid;\n        else r=mid;\n    }\n    if(l==0)printf(\"-1\");\n    else printf(\"%.1lf\",r);\n    return;\n}\nint main(){\n    init();\n    solve();\n    return 0;\n}\n```",
        "postTime": 1470493736,
        "uid": 8874,
        "name": "Kwork",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1768 \u3010\u5929\u8def\u3011"
    },
    {
        "content": "\u8c08\u4e00\u4e0b\u8fd9\u9053\u9898\u7684\u4e8c\u5206\u65b9\u5f0f\u3002\n\n\u5b9e\u6570\u4e8c\u5206\u4e3b\u8981\u6709\u4e24\u79cd\u5f62\u5f0f\u3002\n\n### 1. \u5224\u65ad `l`,`r` \u4e0e `eps` \u7684\u5173\u7cfb\n```cpp\nwhile (r - l >= eps) {\n\tdouble mid = (l + r) / 2;\n\t// ...\n}\n```\n\n### 2. \u76f4\u63a5\u4e8c\u5206 $100$ \u6b21\n```cpp\nfor (int times = 0; times < 100; ++i) {\n\tdouble mid = (l + r) / 2;\n    // ...\n}\n```\n\n\u901a\u5e38\uff0c\u7b2c\u4e8c\u79cd\u7684\u7cbe\u5ea6\u662f\u8981\u6bd4\u7b2c\u4e00\u79cd\u9ad8\u7684\u3002\n\n\u5982\u679c\u91c7\u7528\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u8fdb\u884c\u4e8c\u5206\u7684\u8bdd\uff0c\u4f60\u53ef\u80fd\u4f1a\u8bf4\uff1a**\u8bf6\uff1f\u600e\u4e48 TLE \u4e86\uff1f**\n\n\u6240\u4ee5\u8981\u628a\u4e8c\u5206\u6b21\u6570\u7f29\u5c0f\u4e00\u4e9b\u3002\u7f29\u5c0f\u5230\u591a\u5c11\u5408\u9002\u5462\uff1f\n\n\u4ed4\u7ec6\u8bfb\u9898\uff0c\u53d1\u73b0\uff1a**\u300c\u4fdd\u8bc1\u7b54\u6848\u5728 $200$ \u4ee5\u5185\u3002\u300d** **\u300c\u4fdd\u7559 $1$ \u4f4d\u5c0f\u6570\u3002\u300d**\u3002\u65e2\u7136\u8981\u4fdd\u7559\u4e00\u4f4d\u5c0f\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u5230**\u767e\u5206\u4f4d**\u3002\u53c8\u56e0\u4e3a\u7b54\u6848\u4fdd\u8bc1\u4e0d\u9ad8\u4e8e $200$\uff0c\u6240\u4ee5\u603b\u5171\u53ea\u6709 $\\frac{200}{\\frac{1}{100}}=20000$ \u79cd\u53ef\u80fd\u7684\u8f93\u51fa\u3002$\\lceil \\log_220000\\rceil = 15$\uff08\u5373 $2^{14}=16384,2^{15}=32768$\uff09\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u4e8c\u5206 $15$ \u6b21\u5c31\u53ef\u4ee5\u5f97\u51fa\u7ed3\u679c\u4e86\uff1a\n\n```cpp\ndouble l = 0, r = 200; \nfor (int i = 0; i < 15; ++i) {\n\tdouble mid = (l + r) / 2; \n    if (check(mid)) l = mid; \n    else r = mid;\n}\n```",
        "postTime": 1540960433,
        "uid": 53062,
        "name": "Anguei",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1768 \u3010\u5929\u8def\u3011"
    },
    {
        "content": "## \u9898\u76ee\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P1768)\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20190706193630969.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0NDkzODQw,size_16,color_FFFFFF,t_70)\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20190706193642981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0NDkzODQw,size_16,color_FFFFFF,t_70)\n**\u8f93\u5165\u8f93\u51fa\u6837\u4f8b**\n\u8f93\u5165\u6837\u4f8b\n```cpp\n5 6\n1 2 1 1\n4 1 6 2\n5 4 8 1\n2 3 2 2\n5 2 4 1\n3 5 6 4\n```\n\u8f93\u51fa\u6837\u4f8b\n```cpp\n2.3\n```\n\n## \u9898\u89e3\n- \u672c\u9898\u6211\u4eec\u8981\u6c42$$\\max{\\frac{\\sum{v_i}}{\\sum{p_i}}}$$\n- \u8fd9\u662f01\u5206\u6570\u89c4\u5212\u7684\u57fa\u672c\u5f62\u5f0f\u3002\n- \u8bbe$ans$\u4e3a\u6700\u4f18\u89e3\uff0c\u5219\u6709$$\\frac{\\sum{v_i}}{\\sum{p_i}}\\leq ans$$\n- \u5316\u7b80\u5f97$$0 \\leq ans*\\sum{p_i}-\\sum{v_i}$$\n- \u6240\u4ee5\u53ea\u8981\u4ee5$ans*\\sum{p_i}-\\sum{v_i}$\u4e3a\u8fb9\u6743\u7684\u56fe\u4e0d\u5b58\u5728\u8d1f\u73af\u5373\u53ef\u66f4\u65b0\u7b54\u6848\u3002\n- \u5728\u5efa\u56fe\u65f6\u53ef\u627e\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9(\u5982\uff1a0)\u5411\u5176\u4f59\u70b9\u8fde\u6743\u503c\u4e3a0\u7684\u8fb9\u53ef\u51cf\u5c11\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n## code \n```cpp\n#include <bits/stdc++.h> \nusing namespace std; \nconst int maxn = 7e3 + 100; \nconst int maxm = 2e4 + 100; \n\ntemplate <typename T> \ninline void read(T &s) {\n\ts = 0; \n\tT w = 1, ch = getchar(); \n\twhile (!isdigit(ch)) { if (ch == '-') w = -1; ch = getchar(); }\n\twhile (isdigit(ch)) { s = (s << 1) + (s << 3) + (ch ^ 48); ch = getchar(); }\n\ts *= w; \n}\n\nint n, m, tot; \nint lin[maxn]; \nbool flag; \nbool vis[maxn]; \ndouble dis[maxn]; \nstruct node {\n\tint next, to, v, p; \n\tdouble dis; \n} edge[maxm]; \n\ninline void add(int from, int to, int v, int p) {\n\tedge[++tot].to = to; \n\tedge[tot].v = v; \n\tedge[tot].p = p; \n\tedge[tot].dis = 0.00; \n\tedge[tot].next = lin[from]; \n\tlin[from] = tot; \n}\n\n\nvoid spfa(int u) {\n\tvis[u] = true; \n\tfor (int i = lin[u]; i; i = edge[i].next) {\n\t\tif (flag) return ; \n\t\tint v = edge[i].to; \n\t\tif (dis[v] > dis[u] + edge[i].dis) {\n\t\t\tdis[v] = dis[u] + edge[i].dis; \n\t\t\tif (vis[v]) {\n\t\t\t\tif (dis[v] < 0) flag = true; \n\t\t\t} \n\t\t\telse spfa(v); \n\t\t}\n\t}\n\tvis[u] = false; \n}\n\nint main() {\n//\tfreopen(\"1.in\", \"r\", stdin); \n\t\n\tread(n), read(m); \n\tfor (int i = 1; i <= m; ++i) {\n\t\tint x, y, v, p; \n\t\tread(x), read(y), read(v), read(p); \n\t\tadd(x, y, v, p); \n\t}\n\tdouble l = 0.00, r = 233.33; \n\twhile (l + 0.01 < r) {\n\t\tdouble mid = (l + r) / 2; \n\t\tmemset(dis, 0, sizeof(dis)); \n\t\tmemset(vis, false, sizeof(vis)); \n\t\tfor (int i = 1; i <= tot; ++i) \n\t\t\tedge[i].dis = (double)edge[i].p * mid - edge[i].v; \n\t\tflag = false; \n\t\tfor (int i = 1; i <= n; ++i) {\n\t\t\tspfa(i); \n\t\t\tif (flag) break; \n\t\t}\n\t\tif (flag) l = mid; \n\t\telse r = mid; \n\t}\n\tif (l) printf(\"%.1lf\\n\", r); \n\telse puts(\"-1\");  \n\treturn 0; \n}\n```",
        "postTime": 1562541336,
        "uid": 145352,
        "name": "MILLOPE",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1768 \u3010\u5929\u8def\u3011"
    },
    {
        "content": "\u4e00\u79cd\u5b8c\u5168\u4f7f\u7528\u88f8 SPFA \u7b97\u6cd5\u7684\u505a\u6cd5\u3002\n\n\u4e00\u9053\u5206\u6570\u89c4\u5212\u9898\uff0c\u5b9e\u9645\u4e0a\u662f\u6700\u77ed\u8def\u7684\u7075\u6d3b\u8fd0\u7528\u3002\n\n### \u9898\u610f\n\n\u9898\u76ee\u8bdd\u5f88\u591a\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\uff1a\n\n$n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\uff0c\u6bcf\u6761\u8fb9\u6709\u4e24\u4e2a\u5c5e\u6027\uff0c\u5206\u522b\u4e3a\u82b1\u8d39 $\\text{cost}$ \u548c\u6536\u76ca $\\text{joy}$\u3002\u6c42\u51fa\u4e00\u4e2a\u73af\u4f7f\u5f97\u73af\u4e0a\u7684 $\\dfrac{\\sum\\text{joy}}{\\sum \\text{cost}}$ \u7684\u503c\u6700\u5927\u3002\n\n### \u601d\u8def\n\n\u5982\u679c\u6211\u4eec\u4ee4\u7b54\u6848\u4e3a $p$\uff0c\u5219\u5bf9\u4e8e\u56fe\u4e0a\u4efb\u610f\u4e00\u4e2a\u73af\uff0c\u90fd\u6709\uff1a\n\n$$\n\\dfrac{\\sum\\text{joy}}{\\sum \\text{cost}}\\le p\n$$\n\n\u5c06\u4e0d\u7b49\u5f0f\u5de6\u53f3\u4e24\u8fb9\u4e58\u4e0a $\\sum\\text{cost}$\uff0c\u5219\uff1a\n\n$$\n\\sum\\text{joy}\\le p\\times\\sum\\text{cost}\n$$\n\n\u6362\u4e2a\u4f4d\u7f6e\u53ef\u5f97\uff1a\n\n$$\np\\times \\sum\\text{cost}-\\sum\\text{joy}\\ge 0\n$$\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c$p$ \u662f\u6b63\u786e\u7684\u7b54\u6848\u65f6\uff0c\u56fe\u4e0a\u4e0d\u4f1a\u51fa\u73b0\u8d1f\u73af\u3002\n\n\u5bf9\u4e8e\u7b2c $i$ \u6761\u8fb9\u800c\u8a00\uff0c\u5728\u8dd1 SPFA \u7b97\u6cd5\u7684\u65f6\u5019\uff0c\u4ed6\u5b9e\u9645\u7684\u8fb9\u6743\u5e94\u8be5\u662f\n\n$$\np\\times \\text{cost}_i-\\text{joy}_i\n$$\n\n\u53e6\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u9898\u76ee\u8981\u6c42\u7684\u662f\u4e00\u4e2a\u5f0f\u5b50\u7684\u503c\u6700\u5927\u3002\u89c2\u5bdf $p\\times \\sum\\text{cost}-\\sum\\text{joy}$ \u53d1\u73b0\u8fd9\u4e2a\u5f0f\u5b50\u662f\u5177\u6709\u5355\u8c03\u6027\u7684\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u51cf\u5c11\u8ba1\u7b97\u6b21\u6570\uff08\u4ece $200$ \u6b21\u8ba1\u7b97\u4e0b\u964d\u5230\u4e86 $\\log_2(200)\\approx8$ \u6b21\uff09\n\n\u800c\u4e14\uff0c\u5728\u8fd9\u9053\u9898\u4e2d\uff0c\u9898\u76ee\u5e76\u6ca1\u6709\u544a\u8bc9\u6211\u4eec\u8d77\u70b9\u662f\u90a3\u4e2a\u70b9\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\uff08\u6211\u7684\u4ee3\u7801\u4e2d\u662f $0$ \u53f7\u70b9\uff09\uff0c\u7136\u540e\u5c06\u4ed6\u4e0e\u5176\u4ed6 $n$ \u4e2a\u70b9\u8fde\u63a5\u4e00\u6761\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\u7684\u8fb9\u3002\n\n\u6700\u540e\uff0c\u6211\u7f57\u5217\u4e00\u4e0b\u9700\u8981\u6ce8\u610f\u7684\u51e0\u4e2a\u70b9\uff1a\n\n- SPFA \u7684 $\\text{d}$ \u6570\u7ec4\u9700\u8981\u662f bool \u7c7b\u578b\u7684\uff0c\u800c\u4e14\u4e0d\u80fd\u4f7f\u7528 memset \u8fdb\u884c\u8d4b\u503c\uff0c\u5fc5\u987b\u4f7f\u7528 for \u5faa\u73af\u66b4\u529b\u8d4b\u503c\u3002\n- \u4e8c\u5206\u5de6\u7aef\u70b9\u521d\u59cb\u4e3a $1$\uff0c\u53f3\u7aef\u70b9\u521d\u59cb\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e $200$ \u7684\u6570\u3002\n- \u5f53\u4e8c\u5206\u7ed3\u675f\u540e\uff0c\u5de6\u7aef\u70b9\u662f\u7b49\u4e8e $0$ \u65f6\uff0c\u90a3\u4e48\u4ee3\u8868\u65e0\u89e3\uff0c\u8f93\u51fa $-1$\u3002\n\n---\n\n\u4f60\u4ee5\u4e3a\u7ed3\u675f\u4e86\uff1f\u5e76\u6ca1\u6709\u3002\n\n\u5f53\u4f60\u4ea4\u4e0a\u4e0a\u9762\u601d\u8def\u5199\u51fa\u7684\u4ee3\u7801\u65f6\uff0c\u4f60\u4f1a\u53d1\u73b0\u4f60\u53ea\u6709 90 \u5206\u3002\n\n\u4e0a\u9762\u7684\u601d\u8def\u552f\u4e00\u53ef\u4ee5\u518d\u51cf\u5c11\u64cd\u4f5c\u6b65\u6570\u7684\u5c31\u53ea\u6709 SPFA \u5185\u90e8\u4e86\u3002\u6211\u4eec\u8bbe\u7f6e\u4e00\u4e2a\u503c $\\text{delta}$ \u8868\u793a\u5f53\u4e00\u4e2a\u70b9\u5165\u961f\u6b21\u6570\u4e0a\u9650\uff0c\u8fdb\u884c\u4eba\u8089\u4e8c\u5206\uff0c\u53d1\u73b0\u5f53 $\\text{delta}$ \u7b49\u4e8e $10$ \u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\uff0c\u800c\u4e14\u8dd1\u7684\u98de\u5feb\uff0c\u603b\u5171\u53ea\u6709 67ms\uff0c\u6210\u529f\u8fdb\u5165\u6700\u4f18\u89e3\u7b2c\u4e00\u9875\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<cstring>\n#include<queue>\n#include<iomanip>\nusing namespace std;\n\nconst int maxn = 7010;\nconst double eps = 1e-3;\n\nint n, m;\n\nstruct node {\n    int v, joy, cost;\n    node(int vv, int jjoy, int ccost) {\n        v = vv, joy = jjoy, cost = ccost;\n    }\n};\n\nstd::vector<node> g[maxn];\n\nvoid add(int u, int v, int joy, int cost) {\n    g[u].push_back(node(v, joy, cost));\n}\n\ndouble d[maxn];\nbool inqueue[maxn];\nint cnt[maxn];\n\nconst int delta = 30;\n\nbool spfa(double p) {\n    for (int i = 0; i < maxn; i++) {\n        d[i] = 1e9;\n    }\n    memset(inqueue, 0, sizeof(inqueue));\n    memset(cnt, 0, sizeof(cnt));\n    queue<int> q;\n    q.push(0);\n    d[0] = 0;\n    cnt[0]++;\n    inqueue[0] = true;\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        inqueue[u] = false;\n        if (cnt[u] > delta) {\n            return true;\n        }\n        for (int i = 0; i < g[u].size(); i++) {\n            int v = g[u][i].v;\n            if (d[v] > d[u] + p * g[u][i].cost - g[u][i].joy) {\n                d[v] = d[u] + p * g[u][i].cost - g[u][i].joy;\n                if (!inqueue[v]) {\n                    inqueue[v] = true;\n                    q.push(v);\n                    cnt[v]++;\n                    if (cnt[v] > delta) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}\n\nint main() {\n    cin >> n >> m;\n    for (int i = 1; i <= m; i++) {\n        int u, v, joy, cost;\n        cin >> u >> v >> joy >> cost;\n        add(u, v, joy, cost);\n    }\n    for (int i = 1; i <= n; i++) {\n        add(0, i, 0, 0);\n    }\n    double l = 0, r = 200.0;\n    while (l + eps < r) {\n        double mid = (l + r) / 2.0;\n        if (spfa(mid)) {\n            l = mid;\n        } else {\n            r = mid;\n        }\n    }\n    if (l == 0) {\n        cout << -1 << endl;\n    } else {\n        cout << fixed << setprecision(1) << l << endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1652509140,
        "uid": 670262,
        "name": "Cerisier",
        "ccfLevel": 0,
        "title": "P1768 \u5929\u8def"
    },
    {
        "content": "### \u524d\u8a00\n\n\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019 addege \u5199\u9519\u4e86\u8c03\u4e86\u597d\u4e45\uff0c\u6240\u4ee5\u5bf9\u7740\u7b2c\u4e00\u7bc7\u9898\u89e3\u8c03\u7684\uff0c\u4ee3\u7801\u53ef\u80fd\u6709\u76f8\u4f3c\uff0c\u8bf7\u89c1\u8c05\u3002 wtcl\n\n### \u9898\u610f\n\n\u6709 $n$ \u4e2a\u70b9\uff0c $m$ \u6761\u8fb9\u3002\u6bcf\u6761\u8fb9\u6709\u4e00\u4e2a $v$ \u503c\u548c\u4e00\u4e2a $p$ \u503c\u3002\u6c42\u4e00\u4e2a\u56de\u8def\uff0c\u662f\u8fd9\u6761\u56de\u8def\u4e0a\u7684\u6240\u6709\u70b9\u7684 $v$ \u503c\u603b\u548c\u4e0e $p$ \u503c\u603b\u548c\u4e4b\u6bd4\u6700\u5927\u3002\n\n\u5047\u8bbe\u73b0\u5728\u5f97\u5230\u7684\u6700\u4f18\u89e3\u4e3a $\\lambda {}'$\n\n\u5219\u4e00\u5b9a\u6ee1\u8db3\n\n$\\dfrac{\\sum V_i}{\\sum P_i} \\leq \\lambda {}'$ \n\n\u7531\u4e8e $1 \\leq P_i$\n\n\u6240\u4ee5\u6211\u4eec\u628a\u4e0a\u9762\u7684\u5f0f\u5b50\u79fb\u9879\u5f97\n\n$\\sum V_i \\leq \\lambda {}' \\times \\sum P_i$\n\n\u8fdb\u4e00\u6b65\u53d8\u5f62\u4e3a\n\n$0 \\leq \\lambda {}' \\times \\sum P_i \\:-\\:\\sum V_i$\n\n\u8fd9\u4e2a\u56fe\u6ca1\u6709\u8d1f\u73af\n\n\u6211\u4eec\u4e8c\u5206\u7b54\u6848\u6c42\u51fa $\\lambda {}'$ \u3002\u7136\u540e\u628a\u6bcf\u6761\u8fb9\u8fb9\u6743\u53d8\u6210 $\\lambda {}' \\times  P_i \\:-\\: V_i$ \u8dd1\u4e00\u8fb9spfa\uff0c\u5224\u65ad\u6709\u6ca1\u6709\u8d1f\u73af\u3002\u5982\u679c\u6709\u5c31\u7f29\u5c0f $\\lambda {}'$ \uff0c\u53cd\u4e4b\u6269\u5927\n\n### AC code\n\n\u6ce8\u610f\u8981\u7528 dfs \u7248\u7684 spfa \uff0c\u5426\u5219\u4f1a\u8d85\u65f6\u3002\n\n```cpp\n#include<bits/stdc++.h>\ntypedef long long ll;\ntypedef unsigned long long ull;\n#define il inline\nusing namespace std;\nconst int N=200005;\nstruct edge{\n\tint next;\n\tint to;\n\tint v;\n\tint p;\n}edge[N<<1];\nint head[N],cnt;\nint n,m,vis[N];\ndouble dis[N];\nvoid addedge(int from,int to,int v,int p){\n\tedge[++cnt].v=v,edge[cnt].to=to,edge[cnt].p=p,edge[cnt].next=head[from],head[from]=cnt;\n}\nbool spfa(double ans,int now){//\u5224\u65ad\u6709\u6ca1\u6709\u6b63\u73af\uff0c\u6709\u8fd4\u56de0\uff0c\u65e0\u8fd4\u56de1\n\tvis[now]=1;\n\tfor(int i=head[now];i;i=edge[i].next){\n\t\tint to=edge[i].to,v=edge[i].v,p=edge[i].p;\n\t\tdouble w=ans*p-v;\n\t\tif(dis[to]>dis[now]+w){\n\t\t\tif(vis[to]) return 0;\n\t\t\telse{\n\t\t\t\tdis[to]=dis[now]+w;\n\t\t\t\tvis[now]=1;\n\t\t\t\tif(!spfa(ans,to)) return 0;\t\n\t\t\t}\n\t\t}\n\t}\n\tvis[now]=0;\n\treturn 1;\n}\nint main(){\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tint from,to,v,p;\n\t\tscanf(\"%d%d%d%d\",&from,&to,&v,&p);\n\t\taddedge(from,to,v,p);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\taddedge(0,i,0,0);\n\t}\n\tdouble l=0,r=1000001;\n\twhile(l+0.001<r){\n\t\tmemset(dis,127,sizeof(dis));\n\t\tmemset(vis,0,sizeof(vis));\n\t\t//printf(\"%.1f %.1f\\n\",l,r);\n\t\tdis[0]=0;\n\t\tvis[0]=1;\n\t\tdouble mid=(l+r)/2;\n\t\tif(spfa(mid,0)) r=mid;\n\t\telse l=mid;\n\t\tmid=(l+r)/2;\n\t}\n\tif(l==0) puts(\"-1\");\n\telse printf(\"%.1f\\n\",l);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1652433656,
        "uid": 100690,
        "name": "kawaii__yuyu",
        "ccfLevel": 0,
        "title": "P1768 \u5929\u8def \u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\uff1a\u6c42\u6709\u5411\u56fe\u4e2d\u5bc6\u5ea6\u6700\u5c0f\u7684\u73af\u3002\n\n\u4e00\u770b\u5230\u6700\u5c0f\u5c31\u80fd\u60f3\u5230\u4e8c\u5206\u5bc6\u5ea6\uff0c\u4e0d\u8fc7\u8981\u8003\u8651\u5355\u8c03\u6027\u7684\u95ee\u9898\u3002\n\n\u6211\u4eec\u8bbe\u4e8c\u5206\u51fa\u6765\u7684\u5bc6\u5ea6\u662f mid ,\u9700\u8981\u68c0\u67e5\u6bcf\u4e2a\u73af\u7b26\u4e0d\u7b26\u5408\u5bc6\u5ea6\u8981\u6c42\uff0c\u5373\u73af\u7684\u5bc6\u5ea6\u5927\u4e8e mid \u3002\u8fd9\u6837\u6839\u636e\u4e0d\u7b49\u5f0f\u7684\u4f20\u9012\u6027\uff0c\u5355\u8c03\u6027\u7684\u95ee\u9898\u5c31\u88ab\u6211\u4eec\u89e3\u51b3\u4e86\u3002\n\n\u76f4\u63a5\u68c0\u67e5\u73af\u7684\u5bc6\u5ea6\u662f\u5426\u5927\u4e8e mid \u6709\u70b9\u4e0d\u65b9\u4fbf\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u6761\u8fb9\u90fd\u6362\u6210 $mid \\cdot P_i-V_i$ , \u7136\u540e\u7528 SPFA \u5224\u65ad\u8d1f\u73af\u5373\u53ef\u3002\n\n```cpp\n\n#include<bits/stdc++.h>\nusing namespace std;\n#define debug; cout<<\"debug\"<<endl;\nconst int maxn=200000;\nstruct edge{\n\tint to;\n\tint w;\n\tint v;\n\tint next;\n\tdouble dis; \n}e[maxn];\nint n,m,first[maxn],cnt=0,vis[maxn];\ndouble dis[maxn];\ndouble eps=1e-3;\nint can=0;\nvoid add(int u,int vv,int w,int z)\n{\n\te[++cnt].to=vv;\n\te[cnt].w=w;\n\te[cnt].v=z;\n\te[cnt].next=first[u];\n\tfirst[u]=cnt;\n}\nvoid bfs(int id)\n{\n\tvis[id]=1;\n\tfor(int i=first[id];i;i=e[i].next)\n\t{\n\t\tif(can==1) return ;\n\t\tif(dis[e[i].to]>dis[id]+e[i].dis)\n\t\t{\n\t\t\tdis[e[i].to]=dis[id]+e[i].dis;\n\t\t\tif(dis[id]+e[i].dis<0&&vis[e[i].to]==1) can=1;\n\t\t\tif(vis[e[i].to]==0) bfs(e[i].to);\n\t\t}\n\t}\n\tvis[id]=0;\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint a,b,c,d;\n\t\tcin>>a>>b>>c>>d;\n\t\tadd(a,b,c,d);\n\t}\n\tdouble l=0.00,r=514.114;\n\twhile(l+eps<r)\n\t{\n\t\tmemset(dis,0,sizeof dis);\n\t\tmemset(vis,0,sizeof vis);\n\t\tdouble mid=(l+r)/2;\n\t\tcan=0;\n\t\tfor(int i=1;i<=cnt;i++)\n\t\t{\n\t\t\te[i].dis=e[i].v/1.0*mid-e[i].w;\n\t\t} \n\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\t\n\t\t\tbfs(i);\n\t\t\tif(can==1) break;\n\t\t}\n\t\tif(can==1) l=mid;\n\t\telse r=mid;\n\t}\n\tif(l!=0) printf(\"%.1lf\",l); \n\telse cout<<-1;\n\treturn 0;\n } \n```",
        "postTime": 1638268330,
        "uid": 173323,
        "name": "Yukinoshita_Yukino",
        "ccfLevel": 4,
        "title": "P1768 \u5929\u8def \u9898\u89e3"
    },
    {
        "content": "$\\color{blue}{\\texttt{[Problem]}}$\n\n- \u7ed9\u4f60\u4e00\u4e2a\u542b\u6709 $n$ \u4e2a\u70b9 $m$ \u6761\u6709\u5411\u8fb9\u7684\u56fe\uff0c\u6bcf\u6761\u8fb9\u6709\u4e24\u4e2a\u503c\uff1a$v$ \u548c $p$\uff0c\u5206\u522b\u8868\u793a\u8fd9\u6761\u8def\u7684\u4ef7\u503c\u548c\u82b1\u8d39\u3002\n- \u4e00\u6761\u8def\u7684\u6536\u76ca\u5b9a\u4e49\u4e3a\u6240\u6709\u8fb9\u7684 $v$ \u503c\u7684\u548c\u6bd4\u4e0a $p$ \u503c\u7684\u548c\u3002\n- \u6c42\u4e00\u6761\u6ca1\u6709\u76f8\u540c\u7684\u8fb9\u7684\u73af\uff0c\u4f7f\u5f97\u5176\u6536\u76ca\u6700\u5927\u3002\n\n--------------------------------------\n\n$\\color{blue}{\\texttt{[Solution]}}$\n\n**\u4e8c\u5206\u7b54\u6848\u3002**\n\n\u8bb0\u5f53\u524d\u4e8c\u5206\u51fa\u6765\u7684\u503c\u4e3a $\\texttt{mid}$\uff0c\u8868\u793a\u603b\u6536\u76ca $\\geq \\texttt{mid}$\u3002\n\n\u5982\u679c\u6ee1\u8db3\uff0c\u5219\uff1a\n\n$$\\begin{aligned}\n\\dfrac{\\sum v}{\\sum p} &\\geq \\texttt{mid}\\\\\n\\sum v &\\geq \\texttt{mid}\\times \\sum p\\\\\n\\texttt{mid}\\times \\sum p &\\leq \\sum v\\\\\n\\texttt{mid} \\times \\sum p - \\sum v &\\leq 0\n\\end{aligned}$$\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u4fee\u6539\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743\u4e3a $\\texttt{mid} \\times p - v$ \u5373\u53ef\uff0c\u6c42\u8d1f\u73af\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff0c`bfs spfa` \u6c42\u8d1f\u73af\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nm)$\uff0c\u53ef\u80fd\u4f1a\u8d85\u65f6\uff0c\u6240\u4ee5\u6211\u4eec\u8d4c\u4e00\u628a\uff0c\u7528\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u7a33\u5b9a\u7684 `dfs spfa`\u3002\n\n--------------------------------------\n\n$\\color{blue}{\\texttt{[code]}}$\n\n```cpp\nconst int M=20100,N=7010;\nstruct edge{//\u94fe\u5f0f\u524d\u5411\u661f \n\tint next,to,v,p;\n}e[(M<<1)+N];int h[N],tot,n,m;\nvoid add(int a,int b,int c,int d){\n\te[++tot]=(edge){h[a],b,c,d};h[a]=tot;\n}\nbool vis[N];double dis[N],l,r,mid;\ninline bool dfs(int u,double mid){\n\tvis[u]=true;register int i;\n\tfor(i=h[u];i;i=e[i].next){\n\t\tregister int to=e[i].to;\n\t\tdouble w=e[i].p*mid-e[i].v;\n\t\tif (dis[to]>dis[u]+w){\n\t\t\tdis[to]=dis[u]+w;\n\t\t\tif (vis[to]) return true;\n\t\t\tif (dfs(to,mid)) return true;\n\t\t}\n\t}\n\tvis[u]=false;\n\treturn false;\n}\ninline bool check(double mid){\n\tmemset(dis,127,sizeof(dis));\n\tmemset(vis,false,sizeof(vis));\n\tdis[0]=0;//\u6ce8\u610f\u7279\u522b\u521d\u59cb\u5316dis[0] \n\treturn dfs(0,mid);//\u8fd4\u56despfa\u7ed3\u679c \n}\nconst double eps=1e-5;\nint main(){\n\tscanf(\"%d%d\",&n,&m);//\u70b9\u6570;\u8fb9\u6570 \n\tfor(int i=1,a,b,v,p;i<=m;i++){\n\t\tscanf(\"%d%d%d%d\",&a,&b,&v,&p);\n\t\tadd(a,b,v,p);//\u5f80\u56fe\u4e2d\u52a0\u8fb9 \n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tadd(0,i,0,0);//\u8d85\u7ea7\u6e90 \n\tl=0;r=200;//\u521d\u59cb\u4e8c\u5206\u4e0a\u4e0b\u754c \n\twhile (l+eps<r){//\u6ce8\u610f\u7cbe\u5ea6 \n\t\tmid=(l+r)/2;//\u6c42\u51fa\u4e2d\u70b9 \n\t\tif (check(mid)) l=mid;\n\t\telse r=mid;//\u4fee\u6539\u8fb9\u754c \n\t}\n\tif (l==0) printf(\"-1\");\n\telse printf(\"%.1lf\",l);\n\treturn 0;\n}\n```",
        "postTime": 1590842845,
        "uid": 95624,
        "name": "HPXXZYY",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1768 \u3010\u5929\u8def\u3011"
    },
    {
        "content": " \u5410\u69fd\uff1a\n\n\u5f00\u59cb\u53d8\u91cf\u540d\u6253\u9519\u4e86\uff0cdebug\u534a\u5c0f\u65f6\uff0c\u6c14\u6b7b\u6211\u4e86\u3002\n\n\u8fd9\u544a\u8bc9\u6211\u4eec\u505a\u9898\u5c24\u5176\u662f\u6253\u4ee3\u7801\u4e00\u5b9a\u8981\u7ec6\u5fc3\u3002\n\n \n\n\u89e3\uff1a\n\u6839\u636e\u9898\u9762\u5219\u6709\u03a3vi/\u03a3pi=r\n=> \u03a3vi=\u03a3pi * r \n\u5982\u679cr\u4e0d\u662f\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709 \n\u03a3pi * r -\u03a3vi <=0\n\u5373\u56fe\u4e2d\u7684\u73af\u7684\u6ee1\u8db3\u4ee5\u4e0b\u6027\u8d28\u3002\n\u5bf9\u4e8er,\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\uff0c\u90a3\u4e48\u6b64\u65f6\n\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743\u4e3api*r - vi\n\u90a3\u4e48\u5982\u679c\u5728\u6b64\u65f6\u7684\u56fe\u4e2d\u5b58\u5728\u8d1f\u73af\uff0c\u8bf4\u660er\u504f\u5c0f\u5c31\u8c03\u5927\u3002\n\u5426\u5219\u8c03\u5c0f\u3002\n[\u4ee3\u7801](http://www.cnblogs.com/adelalove/p/8493662.html)",
        "postTime": 1519977991,
        "uid": 36397,
        "name": "\u6c89\u8fb0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1768 \u3010\u5929\u8def\u3011"
    },
    {
        "content": "\u9898\u76ee\u53ef\u4ee5\u603b\u7ed3\u4e3a\uff1a\u5b58\u5728\u4e00\u4e2a\u73af\uff0c\u4f7fsum(v)/sum(w)==ans\uff0c\u6c42\u6700\u5c0f\u7684ans\u3002\u5f0f\u5b50\u6574\u7406\u5f97sum(v)-ans\\*sum(w)<=0\u3002\n\n\u7136\u540e\u6211\u5c31\u9519\u8bef\u5730\u5f00\u59cb\u4e86\u4ee5\u4e0b\u5c1d\u8bd5\u2014\u2014\n\n\u4e8c\u5206ans\uff0c\u5e76\u7528\uff08dfs\u5f0f\uff09SPFA\u5224\u8d1f\u73af\u3002\u5982\u679c\u5b58\u5728\u8d1f\u73af\uff0c\u5219\u51cf\u5c0f\u7b54\u6848\uff0c\u5426\u5219\u589e\u5927\u7b54\u6848\u3002\n\n\u7136\u800c\u90a3\u662f<=\uff0c\u4e0d\u662f<\uff01\n\n\u6240\u4ee5\u6b63\u786e\u7684\u5f0f\u5b50\u5e94\u8be5\u662fans\\*sum(w)-sum(v)>=0\uff0c\u5373\u4e0d\u5b58\u5728\u8d1f\u73af\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u96be\u70b9\uff1a\u679a\u4e3e\u7b54\u6848\u65f6\u6709\u5c0f\u6570\u3002\u8fd9\u65f6\u6211\u7684\u6807\u51c6\u4e8c\u5206\u6a21\u677f\u5c31\u6ca1\u7528\u4e86\uff0c\u9700\u8981\u8fd9\u6837\uff1a\n\n```cpp\nwhile (l+0.01<r)//0.01\u7684\u7cbe\u5ea6\u63a7\u5236 \n{\n    mid=(l+r)>>1;\n    if (check(mid))\n    {\n        ans=mid;\n        r=mid;\n    }\n    else l=mid;\n}\n```\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\nusing namespace std;\nstruct node\n{\n    int t,nt;\n    double v1,v2;\n}a[400005];\nint n,m,len,head[200005],visited[200005],flag;\ndouble dis[200005];\nvoid spfa(double now,int x)//DFS\u7684SPFA\n{\n    if (flag)return;\n    visited[x]=1;\n    for (int i=head[x];i;i=a[i].nt)\n    {\n        if (dis[a[i].t]>dis[x]+now*a[i].v2-a[i].v1)\n        {\n            dis[a[i].t]=dis[x]+now*a[i].v2-a[i].v1;\n            if (visited[a[i].t]==0)spfa(now,a[i].t);\n            else\n            {\n                flag=1;//\u627e\u5230\u73af\n                return;\n            }\n        }\n    }\n    visited[x]=0;\n}\nbool check(double now)\n{\n    flag=0;\n    memset(dis,0,sizeof(dis));\n    memset(visited,0,sizeof(visited));\n    for (int i=1;i<=n;i++)\n    {\n        spfa(now,i);\n        if (flag)break;//\u627e\u5230\u73af\u5c31\u9000\u51fa\n    }\n    if (flag)return true;//\u627e\u5230\u73af\u771f\u597d\uff0cans\u964d\u4f4e\uff08\u4f7f\u7ed3\u679c\u6700\u5927\uff09 \n    return false;\n}\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    int u,v;\n    double w1,w2;\n    for (int i=1;i<=m;i++)\n    {\n        scanf(\"%d %d %lf %lf\",&u,&v,&w1,&w2);\n        a[++len].t=v;\n        a[len].v1=w1;\n        a[len].v2=w2;\n        a[len].nt=head[u];\n        head[u]=len;\n    }\n    //\u63a5\u4e0b\u6765\u4e8c\u5206\u7b54\u6848\n    double l=0,r=200.0,mid;\n    while (l+0.01<r)//\u7cbe\u5ea6\u63a7\u5236 \n    {\n        mid=(l+r)/2;\n        if (check(mid))l=mid;\n        else r=mid;\n    }\n    if (l==0)printf(\"-1\");\n    else printf(\"%.1lf\",r);\n    return 0;\n}\n```",
        "postTime": 1507353959,
        "uid": 33930,
        "name": "vani_prcups",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1768 \u3010\u5929\u8def\u3011"
    }
]