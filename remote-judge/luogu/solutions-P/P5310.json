[
    {
        "content": "\u5355\u8d70\u4e00\u4e2a\u9893\u5e9f\u8bb0\u5f55 ~~\uff0c\u8054\u8d5b\u524d\u7981\u6b62 $\\text{Ynoi}$\uff0c\u5982\u679c\u4f60\u770b\u5230\u4e86\u8fd9\u6761\u8bb0\u5f55\uff0c\u8bf7\u4e0d\u8981 $@\\text{devinwang}$~~\n\n\u9996\u5148\u5148\u65b0\u5b9a\u4e49\u5b57\u7b26\u4e32\u4e3a\u4e00\u4e2a\u5e8f\u5217 $a_{[1,n]}$ \uff0c\u518d\u5b9a\u4e49\u5b83\u7684 $\\text{rank}$ \u6570\u7ec4 $b$\n\n\u5b9a\u4e49\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\u4e3a\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\u4e3a\u4e24\u8005\u7684 $\\text{rank}$ \u6570\u7ec4\u76f8\u540c\u3002\n\n\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 $A,B$ \uff0c\u4f60\u6bcf\u6b21\u8fdb\u884c\u4e00\u4e2a\u5bf9 $B$ \u5b57\u7b26\u4e32\u5355\u70b9\u6539\u7684\u4fee\uff0c\u7136\u540e\u4fee\u6539\u5b8c\u540e\u8981\u8f93\u51fa $A$ \u4e2d\u5305\u542b\u51e0\u4e2a $B$ \uff1f\uff08\u6ce8\u610f\u5b57\u7b26\u4e32\u76f8\u7b49\u7684\u5b9a\u4e49\n\n\u4e8e\u662f\u4f60\u5f00\u59cb\u5206\u6790\uff0c\u4f60\u5e76\u4e0d\u60f3\u7528\u9ad8\u65af\u6d88\u5143\u540e\u4e0a\u62c9\u683c\u6717\u65e5\u4e58\u6570\u6cd5\u5957\u4e00\u4e2a\u6709\u9650\u5fae\u79ef\u5206\u7b97\u51fa\u7ed3\u679c\uff0c\u4e8e\u662f\u4f60\u4f7f\u7528\u4e86 $\\text{Hash}$ \uff0c\u5e76\u9009\u7528\u4e86\u4e00\u4e2a\u725b\u903c\u7684\u6a21\u6570\u3002\n\n\u4f60\u53d1\u73b0\u8fd9\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\u7684\u5b9a\u4e49\u5f88\u725b\u903c\uff0c\u8981\u6c42 $\\text{rank}$ \uff0c\u4e8e\u662f\u4f60\u4e0a\u4e86\u4e00\u4e2a\u5e73\u8861\u6811\u3002\n\n\u4e8e\u662f\u518d\u5b57\u7b26\u4e32 $A$ \u4e2d\u91cc\u6240\u6709\u957f\u5ea6\u4e3a $|B|$ \u7684\u5b50\u6bb5\u7684 $\\text{Hash}$ \u503c\u5c31\u51fa\u6765\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u8981\u52a8\u6001\u7ef4\u62a4 $B$ \u7684 $\\text{Hash}$ \u503c\u3002\n\n\u4f60\u9009\u53d6\u4e86\u4e00\u4e2a\u725b\u903c\u7684 $\\text{Hash}$ \u65b9\u6cd5\uff0c\u5c31\u662f\u5bf9\u4e8e $\\text{rank}$ \u6570\u7ec4 $b_{[1,n]}$ \uff0c\u503c\u4e3a\n\n$$\\sum_{i=1}^nb_i131^{n-i}$$\n\n\u4e3a\u4ec0\u4e48\u4e0d\u7528\u53e6\u4e00\u79cd\u987a\u7740 $\\text{Hash}$ \u5462\uff0c\u4f60\u624b\u6478\u4e00\u4e0b\u5c31\u4f1a\u53d1\u73b0\u8fd9\u6837\u7ef4\u62a4\u7684\u4fe1\u606f\u53d8\u5c11\u4e86\u3002\n\n\u7136\u540e\u4f60\u5c31\u4e00\u773c\u79d2\u4e86\uff0c\u76f4\u63a5\u4e0a\u4e00\u4e2a $\\text{YK}$ \u5e73\u8861\u6811\u5c31\u884c\u4e86\u3002\n\n\u73b0\u5728\u662f $2021.9.8\\ 21:32$ \uff0c\u6211\u5f00\u59cb\u5199\u3002\n\n\u73b0\u5728\u662f $2021.9.10\\ 10:43$ \uff0c\u6211\u5199\u5b8c\u4e86\u3002\n\n```cpp\n#define maxn 500010\ntypedef unsigned long long ull;\null pw[maxn];\nint n,m,q;\nint a[maxn],b[maxn];\nint rt;\nint val[maxn],rk[maxn];//\u5e42\u6b21 \nint dat[maxn];\nint ch[maxn][2];\nint siz[maxn];\nint tag[maxn];\null ha[maxn];//\u5e42\u6b21\u548c \null sm[maxn];//Hash \nint tot;\ninline void Pushup(int x){\n\tsiz[x]=siz[ch[x][0]]+siz[ch[x][1]]+1;\n\tha[x]=(ha[ch[x][0]]+ha[ch[x][1]]+pw[rk[x]]);\n\tsm[x]=(sm[ch[x][0]]+sm[ch[x][1]]+(siz[ch[x][0]]+1)*(pw[rk[x]]+ha[ch[x][1]]));\n}\ninline void Pushdown(int x){\n\tif(tag[x]){\n\t\tif(ch[x][0]){\n\t\t\ttag[ch[x][0]]+=tag[x];\n\t\t\trk[ch[x][0]]+=tag[x];\n\t\t\tha[ch[x][0]]=ha[ch[x][0]]*pw[tag[x]];\n\t\t\tsm[ch[x][0]]=sm[ch[x][0]]*pw[tag[x]];\n\t\t}\n\t\tif(ch[x][1]){\n\t\t\ttag[ch[x][1]]+=tag[x];\n\t\t\trk[ch[x][1]]+=tag[x];\n\t\t\tha[ch[x][1]]=ha[ch[x][1]]*pw[tag[x]];\n\t\t\tsm[ch[x][1]]=sm[ch[x][1]]*pw[tag[x]];\n\t\t}\n\t\ttag[x]=0;\n\t}\n}\ninline int Build(int x,int y){\n\ttot++;\n\tsiz[tot]=1;\n\tch[tot][0]=ch[tot][1]=0;\n\tval[tot]=x,rk[tot]=y,tag[tot]=0;\n\tsm[tot]=ha[tot]=pw[y];\n\tdat[tot]=rand();\n\treturn tot;\n}\ninline void Split(int rt,int k,int&x,int&y){//x is small y is big\n\tif(!rt)x=y=0;\n\telse{\n\t\tPushdown(rt);\n\t\tif(val[rt]<=k)x=rt,Split(ch[rt][1],k,ch[rt][1],y),Pushup(x);\n\t\telse y=rt,Split(ch[rt][0],k,x,ch[rt][0]),Pushup(y);\n\t}\n}\ninline int Merge(int x,int y){//x is small y is big\n\tif(!x||!y)return x+y;\n\tPushdown(x),Pushdown(y);\n\tif(dat[x]<dat[y]){\n\t\tch[x][1]=Merge(ch[x][1],y);\n\t\tPushup(x);\n\t\treturn x;\n\t}else{\n\t\tch[y][0]=Merge(x,ch[y][0]);\n\t\tPushup(y);\n\t\treturn y;\n\t}\n}\ninline void o(){\n\tPushdown(rt);\n\ttag[rt]++,rk[rt]++;\n\tha[rt]=ha[rt]*pw[1],sm[rt]=sm[rt]*pw[1];\n}\ninline void del(int v){\n\tint x,y,z;\n\tSplit(rt,v,x,y);\n\tSplit(x,v-1,x,z);\n\tz=Merge(ch[z][0],ch[z][1]);\n\trt=Merge(Merge(x,z),y);\n}\ninline void I(int a,int b){\n\tint x,y;\n\tSplit(rt,a,x,y);\n\trt=Merge(Merge(x,Build(a,b)),y);\n}\nmap<ull,int>M;\nsigned main(){\nsrand(time(NULL));\n\tcin>>n>>m>>q;\n\tfor(int i=1;i<=n;i++)cin>>a[i];\n\tfor(int i=1;i<=m;i++)cin>>b[i];\n\tpw[0]=1;\n\tfor(int i=1;i<=n;i++)pw[i]=pw[i-1]*13331;\n\tfor(int i=1;i<=m;i++)I(a[i],m-i);\n\tM[sm[rt]]++;\n\tfor(int i=m+1;i<=n;i++){\n\t\tdel(a[i-m]);\n\t\to();\n\t\tI(a[i],0);\n\t\tM[sm[rt]]++;\n\t}\n\trt=tot=0;\n\tfor(int i=1;i<=m;i++)I(b[i],m-i);\n\twhile(q--){\n\t\tint ccc,ccccc;\n\t\tcin>>ccc>>ccccc;\n\t\tdel(b[ccc]);\n\t\tb[ccc]=ccccc;\n\t\tI(b[ccc],m-ccc);\n\t\tcout<<M[sm[rt]]<<endl;\n\t}\n}\n```\n\u771f $\\text{tmd}$ \u96be\u5199\uff0c\u800c\u4e14\u81ea\u7136\u6ea2\u51fa\u6253\u7206\u5f00 $\\text{\\_\\_int128}$ \u6a21\u5927\u8d28\u6570\u3002\n\n\u539f\u6765\u725b\u903c\u7684\u6a21\u6570\u7adf\u7136\u662f $2^{64}$ \uff0c\u6211\u5927\u53d7\u9707\u64bc\u3002",
        "postTime": 1631106599,
        "uid": 100325,
        "name": "peterwuyihong",
        "ccfLevel": 7,
        "title": "P5310 [Ynoi2011] \u9065\u8fdc\u7684\u8fc7\u53bb \u8bb0\u5f55"
    },
    {
        "content": "http://www.elijahqi.win/archives/3774\nhttps://blog.csdn.net/elijahqi/article/details/80733262\n\n\u5728splay\u4e0a\u7ef4\u62a4\u6bcf\u4e2a\u4f4d\u7f6e\u7684hash\u503c hash\u503c\u7684\u5b9a\u4e49\u4e3a \u7b2c\u51e0\u5927\u7684\u503c\u51fa\u73b0\u5728\u54ea\u91cc\n$\\sum\\limits_{i=1}^{n} pos[i]* base^{rank}$\n\n\u7136\u540e\u5148\u628aa\u5e8f\u5217\u6240\u6709\u957f\u5ea6\u4e3am\u7684hash\u503c\u90fd\u5b58\u5728hash\u8868\u91cc \n\n\u7136\u540e\u6bcf\u6b21\u4fee\u6539b\u5e8f\u5217\u7684\u65f6\u5019 \u83b7\u5f97\u4e00\u4e2ahash\u503c \u7136\u540e\u76f4\u63a5\u53bbhash\u8868\u91cc\u8be2\u95ee\u4e00\u4e0b\u51fa\u73b0\u6b21\u6570\u5373\u53ef\n\n```\n#include<bits/stdc++.h>\n#define ll unsigned long long\nusing namespace std;\ninline char gc(){\n    static char now[1<<16],*S,*T;\n    if (T==S){T=(S=now)+fread(now,1,1<<16,stdin);if (T==S) return EOF;}\n    return *S++;\n}\ninline int read(){\n    int x=0,f=1;char ch=gc();\n    while(!isdigit(ch)) {if (ch=='-') f=-1;ch=gc();}\n    while(isdigit(ch)) x=x*10+ch-'0',ch=gc();\n    return x*f;\n}\nconst int N=1e5+10;\nconst int g=11117;\nconst int mod=100003;\nstruct node{\n    ll s;int next,v;\n}data[N];\nll p[N],hs[N],w[N],S;int size[N],fa[N],c[N][2],h[N],num,b[N],n,m,q,rt,v[N];\ninline void update(int x){\n    int l=c[x][0],r=c[x][1];\n    size[x]=size[l]+size[r]+1;\n    hs[x]=hs[l]+p[size[l]]*w[x]+p[size[l]+1]*hs[r];\n}\ninline void rotate(int x,int &tar){\n    int y=fa[x],z=fa[y],l=c[y][1]==x,r=l^1;\n    if (y==tar) tar=x;else c[z][c[z][1]==y]=x;\n    fa[c[x][r]]=y;fa[y]=x;fa[x]=z;\n    c[y][l]=c[x][r];c[x][r]=y;update(y);update(x);\n}\ninline void splay(int x,int &tar){\n   while(x!=tar){\n        int y=fa[x],z=fa[y];\n        if (y!=tar){\n            if (c[y][0]==x^c[z][0]==y) rotate(x,tar);else rotate(y,tar);\n        }rotate(x,tar);\n    }\n}\ninline void insert1(int &x,int id,int f){\n    if (!x) {x=id;fa[x]=f;update(x);splay(x,rt);return;}\n    if (v[id]<v[x]) insert1(c[x][0],id,x);\n    else insert1(c[x][1],id,x);\n}\n//unordered_map<ll,int> mm;\ninline void ins(ll s){\n    //++mm[s];return;\n    int x=s%mod;\n    for (int i=h[x];i;i=data[i].next){\n        if (s==data[i].s) {++data[i].v;return;}\n    }\n    data[++num].s=s;data[num].v=1;data[num].next=h[x];h[x]=num;\n}\ninline int query(ll s){\n    //return mm[s];\n    int x=s%mod;\n    for (int i=h[x];i;i=data[i].next){\n        if (s==data[i].s) return data[i].v;\n    }return 0;\n}\ninline void del(int x){\n    splay(x,rt);\n    if(!(c[x][0]*c[x][1])){rt=c[x][0]+c[x][1];fa[rt]=0;c[x][0]=c[x][1]=0;return;}\n    int succ=c[x][1],pre=c[x][0];\n    while(c[pre][1]) pre=c[pre][1];\n    while(c[succ][0]) succ=c[succ][0];\n    splay(pre,rt);splay(succ,c[rt][1]);c[succ][0]=0;fa[x]=0;update(succ);update(rt);\n\n}\nint main(){\n\tfreopen(\"4715.in\",\"r\",stdin);\n    n=read();m=read();q=read();p[0]=1;\n    for (int i=1;i<=n;++i) v[i]=read();\n    for (int i=1;i<=n;++i) w[i]=i,p[i]=p[i-1]*g;\n    for (int i=1;i<=m;++i) insert1(rt,i,0),S+=p[i-1],b[i]=read();\n    for (int i=m;i<=n;++i){\n        ins(hs[rt]-S*(i-m));if (i==n) break;\n        del(i-m+1);insert1(rt,i+1,0);\n    }rt=0;memset(c,0,sizeof(c));memset(fa,0,sizeof(fa));\n    for (int i=1;i<=m;++i) v[i]=b[i],insert1(rt,i,0);\n    while(q--){\n        int x=read(),cc=read();del(x);c[x][0]=c[x][1]=0;\n        v[x]=cc;insert1(rt,x,0);\n        printf(\"%d\\n\",query(hs[rt]));\n    }\n    return 0;\n}\n```",
        "postTime": 1529472880,
        "uid": 5037,
        "name": "elijahqi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4715 \u3010\u300c\u82f1\u8bed\u300dZ \u8bed\u8a00\u3011"
    },
    {
        "content": "\u4eba\u751f\u7b2c\u4e00\u9053Ynoi\u796d\uff01\n\n\u542cfz\u8bf4\u8fd9\u662f\u4e0a\u5348\u8bb2\u7684\u9898\uff1f\n\n>### [\u6d1b\u8c37\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5310)\n\n>\u7ed9\u5b9a\u4e24\u4e2a\u5185\u90e8\u5143\u7d20\u4e24\u4e24\u4e0d\u540c\u7684\u5e8f\u5217$a,b,|a|=n,|b|=m$\u3002\u5b9a\u4e49\u4e24\u4e2a\u5185\u90e8\u5143\u7d20\u4e24\u4e24\u4e0d\u540c\u7684\u5e8f\u5217\u672c\u8d28\u76f8\u540c\u5f53\u4e14\u4ec5\u5f53\u5b83\u4eec\u5404\u81ea\u79bb\u6563\u5316\u540e\u76f8\u540c\u3002\u652f\u6301$q$\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4fee\u6539$b$\u7684\u4e00\u6b21\u5143\u7d20\uff08\u4fdd\u8bc1\u4fee\u6539\u5b8c\u4f9d\u7136\u5185\u90e8\u5143\u7d20\u4e24\u4e24\u4e0d\u540c\uff09\uff0c\u8981\u6c42\u56de\u7b54$b$\u5728$a$\u4e2d\u6709\u591a\u5c11\u6b21\u5339\u914d\u3002\n\n>$n,m,q\\in\\left[1,10^5\\right]$\u3002\n\n\u9996\u5148\u5e26\u4fee\u7684\u8bdd\u5176\u4ed6\u5b57\u7b26\u4e32\u5339\u914d\u7b97\u6cd5\u57fa\u672c\u4e0a\u7528\u4e0d\u8d77\u6765\u4e86\uff0c\u60f3\u5230\u4e07\u80fd\u7684\u54c8\u5e0c\u3002\n\n\u8003\u8651\u5148\u9884\u5904\u7406\u51fa$a$\u4e2d\u6240\u6709\u957f\u5ea6\u4e3a$m$\u7684\u5b50\u4e32\u7684\u54c8\u5e0c\u503c\uff0c\u5b58\u5230\u4e00\u4e2a`map`\u91cc\uff0c\u7136\u540e\u64cd\u4f5c\u7684\u65f6\u5019\u5c31\u5b9e\u65f6\u7ef4\u62a4$b$\u7684\u54c8\u5e0c\u503c\uff0c\u5f80`map`\u91cc\u4e00\u67e5\u5373\u53ef\u3002\n\n\u8003\u8651\u6700\u5e38\u89c4\u7684\u6eda\u52a8\u54c8\u5e0c$hsh(x)=\\sum\\limits_{i=1}^{|x|}b^{|x|-i}x_i\\bmod p$\uff0c\u5176\u4e2d$b$\u662f\u54c8\u5e0cbase\uff0c$p$\u662f\u54c8\u5e0c\u6a21\u6570\u3002\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8fd9\u91cc\u4e0d\u8003\u8651\u53d6\u6a21\u8fd0\u7b97\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\u6709\u54ea\u4e9b\u64cd\u4f5c\uff1a\n1. \u5220\u9664\u5f00\u5934\u5143\u7d20\uff0c\u5e76\u5b9e\u65f6\u66f4\u65b0$x$\uff08\u8fd9\u91cc\u7684$x$\u662f\u6392\u540d\uff09\uff1b\n1. \u5728\u672b\u5c3e\u6dfb\u52a0\u5143\u7d20\uff0c\u5e76\u5b9e\u65f6\u66f4\u65b0$x$\uff0c\u5b9e\u65f6\u66f4\u65b0$|x|-i$\uff08\u5176\u5b9e\u5c31\u662f\u5168\u4f53\u52a0\u4e00\uff09\uff1b\n1. \u4fee\u6539\u5143\u7d20\uff0c\u5e76\u5b9e\u65f6\u66f4\u65b0$x$\uff1b\n1. \u67e5\u8be2\u54c8\u5e0c\u503c\u3002\n\n\u6ce8\u610f\u5230\u8981\u5bf9\u6392\u540d\u64cd\u4f5c\uff0c\u4e0d\u96be\u60f3\u5230\u57fa\u4e8e\u503c\u57df\u5efa\u4e00\u4e2a\u5e73\u8861\u6811\uff08\u8fd9\u91cc\u4f7f\u7528fhq-Treap\uff09\uff0c\u652f\u6301\u63d2\u5165\u548c\u5220\u9664\u548c\u67e5\u54c8\u5e0c\u503c\u3002\u90a3\u4e48\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u952e\u503c\u662f$x_i$\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u7ef4\u62a4\u5bf9\u5e94\u7684$|x|-i$\uff0c\u5168\u4f53\u52a0\u4e00\u518d\u7b80\u5355\u4e0d\u8fc7\u4e86\uff0c\u61d2\u6807\u8bb0\u5373\u53ef\u3002\u8fd8\u8981\u7ef4\u62a4\u54c8\u5e0c\u503c\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6b64\u65f6\u662f\u6392\u540d\u8fde\u7eed\u5f62\u6210\u533a\u95f4\uff0c\u800c\u4e0d\u662f\u4e0b\u6807\u8fde\u7eed\u5f62\u6210\u533a\u95f4\u3002\u4e00\u79cd\u7ef4\u62a4\u7b56\u7565\u662f\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u7ef4\u62a4\u4ee5\u5b83\u4e3a\u6839\u7684\u5b50\u6811\u5f62\u6210\u7684\u6392\u540d\u533a\u95f4\u7ec4\u6210\u7684\u5e8f\u5217\u4e2d\uff0c\u82e5\u8ba4\u4e3a\u5b83\u4eec\u7684\u6392\u540d\u662f\u4ece$1$\u5f00\u59cb\u7b97\u7684\uff08\u4e0b\u6807\u4ee5\u7ef4\u62a4\u7684\u4e3a\u51c6\uff09\uff0c\u8fd9\u6837\u5f97\u5230\u7684\u54c8\u5e0c\u503c\u3002\u5408\u5e76\u4e24\u4e2a\u5e8f\u5217\uff08\u5176\u4e2d\u7b2c\u4e8c\u4e2a\u5e8f\u5217\u7684\u4efb\u610f\u5143\u7d20\u5927\u4e8e\u7b2c\u4e00\u4e2a\u5e8f\u5217\u7684\u4efb\u610f\u5143\u7d20\uff09\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u672c\u6765\u8ba4\u4e3a\u7b2c\u4e8c\u4e2a\u5e8f\u5217\u7684\u6392\u540d\u662f\u4ece$1$\u5f00\u59cb\u7684\uff0c\u73b0\u5728\u53d1\u73b0\u662f\u4ece\u7b2c\u4e00\u4e2a\u5e8f\u5217\u7684\u957f\u5ea6\u52a0\u4e00\u5f00\u59cb\u7684\uff08\u7b2c\u4e00\u4e2a\u5e8f\u5217\u4e0d\u53d8\uff09\uff0c\u6839\u636e\u54c8\u5e0c\u51fd\u6570\u53ef\u4ee5\u5f97\u5230\u7b2c\u4e8c\u4e2a\u5e8f\u5217\u6bcf\u4e2a\u5143\u7d20\u5bf9\u5e94\u7684\u8d21\u732e\u90fd\u8981\u52a0\u4e0a$b^{|x|-i}$\u4e58\u4ee5\u7b2c\u4e00\u4e2a\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u603b\u5171\u5148\u5c31\u662f$\\sum b^{|x|-i}$\u4e58\u4ee5\u7b2c\u4e00\u4e2a\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u4e8e\u662f\u6211\u4eec\u8fd8\u9700\u8981\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u7684$\\sum b^{|x|-i}$\uff0c\u8fd9\u4e2a\u5408\u5e76\u7684\u8bdd\u5c31\u7b80\u5355\u52a0\u8d77\u6765\u5373\u53ef\u3002\n\n\u9884\u5904\u7406$b$\u7684\u5e42\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$\\mathrm O(n\\log n)$\uff08\u8ba4\u4e3a$n,m,q$\u540c\u9636\uff09\u3002\u5e73\u8861\u6811\u7684\u5220\u9664\u4f7f\u7528\u4e86\u5783\u573e\u56de\u6536\u3002\u4f7f\u7528\u4e86\u53cc\u6a21\uff0c\u8dd1\u5f97\u8fd8\u633a\u5feb\uff08\u4e0d\u5f00O2\uff09\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define mp make_pair\n#define X first\n#define Y second\nmt19937 rng(20060617);\nconst int N=100000,M=100000;\nint n,m,qu;\nint a[N+1],b[M+1];\nconst int hbase1=131,hmod1=998244353,hbase2=13331,hmod2=1000000007;//\u54c8\u5e0c\u53c2\u6570 \nint pw1[N+1],pw2[N+1];\nstruct fhq_treap{//\u5e73\u8861\u6811 \n\tint sz,root;\n\tstruct node{unsigned key;int lson,rson,sz,v1,v2,sum1,hsh1,sum2,hsh2,lz;}nd[M+1];\n\t#define key(p) nd[p].key\n\t#define lson(p) nd[p].lson\n\t#define rson(p) nd[p].rson\n\t#define sz(p) nd[p].sz\n\t#define v1(p) nd[p].v1\n\t#define v2(p) nd[p].v2\n\t#define sum1(p) nd[p].sum1\n\t#define hsh1(p) nd[p].hsh1\n\t#define sum2(p) nd[p].sum2\n\t#define hsh2(p) nd[p].hsh2\n\t#define lz(p) nd[p].lz\n\tstack<int> bin;\n\tvoid init(){//\u521d\u59cb\u5316 \n\t\tsz=root=0;\n\t\tnd[0]=node({0,0,0,0,0,0,0,0,0,0,0});\n\t\twhile(bin.size())bin.pop();\n\t}\n\tint nwnd(int v1,int v2){//\u65b0\u5efa\u8282\u70b9 \n\t\tint p;\n\t\tif(bin.size())p=bin.top(),bin.pop();\n\t\telse p=++sz;\n\t\treturn nd[p]=node({rng(),0,0,1,v1,v2,pw1[v2],pw1[v2],pw2[v2],pw2[v2],0}),p;\n\t}\n\tvoid recyc(int p){bin.push(p);}//\u5783\u573e\u56de\u6536 \n\tvoid sprup(int p){//\u4e0a\u4f20 \n\t\tsz(p)=sz(lson(p))+1+sz(rson(p));\n\t\tsum1(p)=(1ll*sum1(lson(p))+pw1[v2(p)]+sum1(rson(p)))%hmod1;\n\t\thsh1(p)=(hsh1(lson(p))+1ll*(sz(lson(p))+1)*pw1[v2(p)]+hsh1(rson(p))+1ll*(sz(lson(p))+1)*sum1(rson(p)))%hmod1;\n\t\tsum2(p)=(1ll*sum2(lson(p))+pw2[v2(p)]+sum2(rson(p)))%hmod2;\n\t\thsh2(p)=(hsh2(lson(p))+1ll*(sz(lson(p))+1)*pw2[v2(p)]+hsh2(rson(p))+1ll*(sz(lson(p))+1)*sum2(rson(p)))%hmod2;\n\t}\n\tvoid tag(int p,int v=1){//\u6253\u61d2\u6807\u8bb0\u5e76\u4fee\u6539 \n\t\tv2(p)+=v;lz(p)+=v;\n\t\tsum1(p)=1ll*sum1(p)*pw1[v]%hmod1;hsh1(p)=1ll*hsh1(p)*pw1[v]%hmod1;\n\t\tsum2(p)=1ll*sum2(p)*pw2[v]%hmod2;hsh2(p)=1ll*hsh2(p)*pw2[v]%hmod2;\n\t}\n\tvoid sprdwn(int p){//\u4e0b\u4f20\u61d2\u6807\u8bb0 \n\t\tif(lz(p)){\n\t\t\ttag(lson(p),lz(p));tag(rson(p),lz(p));\n\t\t\tlz(p)=0;\n\t\t}\n\t}\n\tpair<int,int> split(int x,int p=-1){~p||(p=root);\n\t\tif(!x)return mp(0,p);\n\t\tsprdwn(p);\n\t\tpair<int,int> sp;\n\t\tif(x<=sz(lson(p)))return sp=split(x,lson(p)),lson(p)=sp.Y,sprup(p),mp(sp.X,p);\n\t\treturn sp=split(x-1-sz(lson(p)),rson(p)),rson(p)=sp.X,sprup(p),mp(p,sp.Y);\n\t}\n\tint mrg(int p,int q){\n\t\tif(!p||!q)return p|q;\n\t\tsprdwn(p);sprdwn(q);\n\t\tif(key(p)<key(q))return rson(p)=mrg(rson(p),q),sprup(p),p;\n\t\treturn lson(q)=mrg(p,lson(q)),sprup(q),q;\n\t}\n\tint lss(int v,int p=-1){~p||(p=root);\n\t\tif(!p)return 0;\n\t\tsprdwn(p);\n\t\tif(v1(p)<v)return sz(lson(p))+1+lss(v,rson(p));\n\t\treturn lss(v,lson(p));\n\t}\n\tvoid insert(int v1,int v2){//\u63d2\u5165 \n\t\tpair<int,int> sp=split(lss(v1));\n\t\troot=mrg(mrg(sp.X,nwnd(v1,v2)),sp.Y);\n\t}\n\tvoid del(int v){//\u5220\u9664 \n\t\tpair<int,int> sp1=split(lss(v)),sp2=split(1,sp1.Y);\n\t\trecyc(sp2.X);\n\t\troot=mrg(sp1.X,sp2.Y);\n\t}\n\tvoid add(){tag(root);}//\u5168\u4f53\u52a0\u4e00 \n\tpair<int,int> hsh(){return mp(hsh1(root),hsh2(root));}//\u67e5\u54c8\u5e0c\u503c \n}trp;\nmap<pair<int,int>,int> hav;//\u6876 \nint main(){\n\tcin>>n>>m>>qu;\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",a+i);\n\tfor(int i=1;i<=m;i++)scanf(\"%d\",b+i);\n\tpw1[0]=pw2[0]=1;\n\tfor(int i=1;i<=max(n,m);i++)pw1[i]=1ll*pw1[i-1]*hbase1%hmod1,pw2[i]=1ll*pw2[i-1]*hbase2%hmod2;//\u9884\u5904\u7406\u5e42 \n\tif(m<=n){//\u9884\u5904\u7406 \n\t\ttrp.init();\n\t\tfor(int i=1;i<=m;i++)trp.insert(a[i],m-i);\n\t\thav[trp.hsh()]++;\n//\t\tprintf(\"(%d,%d)\\n\",trp.hsh().X,trp.hsh().Y);\n\t\tfor(int i=m+1;i<=n;i++){\n\t\t\ttrp.del(a[i-m]);trp.add();trp.insert(a[i],0);//\u53d8\u6210\u4e0b\u4e00\u4e2a\u5b50\u4e32 \n\t\t\thav[trp.hsh()]++;\n//\t\t\tprintf(\"(%d,%d)\\n\",trp.hsh().X,trp.hsh().Y);\n\t\t}\n\t}\n\ttrp.init();\n\tfor(int i=1;i<=m;i++)trp.insert(b[i],m-i);\n//\tprintf(\"\\n(%d,%d)\\n\",trp.hsh().X,trp.hsh().Y);\n\twhile(qu--){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\ttrp.del(b[x]);trp.insert(b[x]=y,m-x);//\u4fee\u6539 \n//\t\tprintf(\"(%d,%d)\\n\",trp.hsh().X,trp.hsh().Y);\n\t\tprintf(\"%d\\n\",hav[trp.hsh()]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1596445840,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "\u6d1b\u8c37 P5310 - \u9065\u8fdc\u7684\u8fc7\u53bb"
    },
    {
        "content": "\u5f88\u4e45\u4ee5\u524d\u80e1\u4e86\u89e3\u6cd5\u4e00\u76f4\u653e\u7740\u6ca1\u6765\u7ba1\uff0c\u6700\u8fd1\u60f3\u8d77\u6765\u4e86\u5c31\u6765\u8865\u4e00\u4e0b\u3002             \n\n\u5176\u5b9e\u548c [P4696](https://www.luogu.com.cn/problem/P4696) \u7684 hash \u505a\u6cd5\u6ca1\u6709\u592a\u5927\u7684\u533a\u522b\u3002                 \n\n\u6211\u4eec\u8003\u8651\u8fd9\u4e2a\u4e1c\u897f\u7528 kmp \u7684\u89d2\u5ea6\u6765\u601d\u8003\u5e76\u4e0d\u600e\u4e48\u4f18\u79c0\uff0c\u4e0d\u8fc7\u8fd9\u4e1c\u897f\u672c\u8d28\u611f\u89c9\u4ecd\u7136\u662f\u5b57\u7b26\u4e32\u5339\u914d\uff0c\u6240\u4ee5\u731c\u6d4b\u7528\u5b57\u7b26\u4e32\u5339\u914d\u76f8\u5173\u601d\u60f3\u89e3\u51b3\u3002               \n\n\u6211\u4eec\u53d1\u73b0\u9898\u76ee\u63d0\u793a\u7684\u5f88\u660e\u663e\uff0c\u7528\u4e24\u4e2a\u4fe1\u606f\u5c31\u53ef\u4ee5\u523b\u753b\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32\uff1a\u76f8\u5e94\u6392\u540d\u7684\u6570\u7684\u76f8\u5e94\u4f4d\u7f6e\u3002               \n\n\u8003\u8651\u5b57\u7b26\u4e32\u5339\u914d\u91cc\u9762\u5e38\u7528\u7684 hash\uff0c\u8fd9\u6837\u505a\u6709\u4e24\u4e2a\u539f\u56e0\uff1a\u4e00\u662f\u6587\u672c\u4e32\u4e0d\u505a\u6539\u52a8\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u628a\u6240\u6709\u957f\u4e3a $m$ \u7684\u5b50\u4e32 hash \u503c\u5b58\u4e0b\u6765\u5c31\u53ef\u4ee5\u9759\u6001\u8be2\u95ee\u4e00\u7cfb\u5217\u5b57\u7b26\u4e32\u5339\u914d\u6570\u91cf\u7684\u95ee\u9898\uff1b\u4e8c\u662f\u8fd9\u4e2a\u4fee\u6539\u53ea\u662f\u5355\u70b9\u4fee\u6539\uff0c\u611f\u89c9\u5c31\u5f88\u597d\u7ef4\u62a4\u7684\u6837\u5b50\u3002     \n\n\u521a\u5f00\u59cb\u81ea\u5df1\u8bbe\u8ba1\u7684 hash \u662f $\\sum_{i = 1} ^ n pos_i \\times Base^{rank_i}$\uff0c\u4f46\u662f\u540e\u6765\u53d1\u73b0\u597d\u50cf\u4e0d\u662f\u5f88\u597d\u5904\u7406\u6587\u672c\u4e32\u5c31\u6362\u6210\u4e86 $\\sum_{i = 1} ^ n rank_i \\times Base^{pos_i}$ \u4e86\u3002            \n\n\u8fd9\u4e2a\u4e1c\u897f\u5f88\u597d\u7ef4\u62a4\u3002\u7528\u503c\u57df\u7ebf\u6bb5\u6811\uff0c\u5012\u7740\u679a\u4e3e\u6240\u6709\u957f\u5ea6\u4e3a $m$ \u7684\u5b50\u4e32\u505a\u533a\u95f4\u4e58\u5355\u70b9\u6539\u5c31\u53ef\u4ee5\u5904\u7406\u6587\u672c\u4e32\u4e86\uff0c\u5bf9\u4e8e\u5339\u914d\u4e32\u5c31\u53ea\u6709\u5355\u70b9\u4fee\u6539\u3002            \n\n\u65f6\u7a7a\u590d\u6742\u5ea6 $O(n \\log n)$\uff0c\u5e73\u8861\u6811\u505a\u6cd5\u540c\u7406\u53ea\u662f\u4f1a\u5c11\u4e2a\u7a7a\u95f4\u4e0a\u7684 $\\log n$\u3002\n\n",
        "postTime": 1641001416,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5310 [Ynoi2011] \u9065\u8fdc\u7684\u8fc7\u53bb"
    }
]