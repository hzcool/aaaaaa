[
    {
        "content": "[\u53c2\u8003\u8d44\u6599](https://yhx-12243.github.io/OI-transit/records/lydsy4437%3Blg4356%3Bgym101480L.html)\n\n[\u66f4\u574f\u7684\u9605\u8bfb\u4f53\u9a8c](https://xyix.github.io/posts/?&sortby=id&postname=luogu-4356)\n\n> **\u9898\u76ee\u5927\u610f.**\n>\n> \u73b0\u5728\u6709\u4e00\u4e2a\u65e0\u9650\u5927\u5c0f\u7684\u683c\u5b50\u8ff7\u5bab\uff0c\u5b83\u662f\u7531\u4e00\u4e2a\u5df2\u77e5\u7684 $n\\times m$ \u7684\u56fe\u5f62\u65e0\u9650\u91cd\u590d\u5f97\u5230\u7684\u3002\u73b0\u5728\u6709 $T$ \u4e2a\u683c\u5b50\uff0c\u8bf7\u4f60\u56de\u7b54\u6bcf\u4e2a\u683c\u5b50\u80fd\u5426\u5230\u8fbe\u683c\u5b50 $(0,0)$\u3002\n>\n> $n,m\\le 100,T\\le 2\\times10^5$\u3002\n\n\u5bf9\u6bcf\u4e2a\u683c\u5b50\u6211\u4eec\u90fd\u53ef\u4ee5\u6c42\u51fa\u5b83\u7684**\"\u5757\u5750\u6807\"**\u548c**\"\u5757\u5185\u5750\u6807\"**\uff0c\u5373 $(x,y)=(nx_B+x_I,my_B+y_I)$\uff0c\u4e0b\u9762\u8bb0\u4e3a $(x_B,y_B,x_I,y_I)$\u3002\n\n\u8bb0\u683c\u5b50 $u$ \u80fd\u5230\u8fbe $v$ \u4e3a $u\\rightarrow v$\u3002\u7bad\u5934\u53ea\u662f\u4e2a\u7b26\u53f7\uff0c\u5176\u5b9e\u8fd9\u662f\u4e2a\u53cc\u5411\u5173\u7cfb\u3002\n\n---\n\n\u6bcf\u4e2a\u5757\u7684 $(0,0)$ \u662f\u5426\u53ef\u8fbe\u663e\u7136\u662f\u5341\u5206\u91cd\u8981\u7684\uff0c\u4e0b\u9762\u8fdb\u884c\u7814\u7a76\u3002\n\n\u6211\u4eec\u663e\u7136\u6709\u4ee5\u4e0b\u7ed3\u8bba\uff1a\n\n> **\u5f15\u7406 1.**\n>\n> \u82e5 $(x,y,0,0)\\rightarrow(0,0,0,0)$\uff0c\u5219 $\\forall \\lambda,(\\lambda x,\\lambda y,0,0)\\rightarrow(0,0,0,0)$\u3002\n\n> **\u5f15\u7406 1 - \u8bc1\u660e.**\n>\n> \u5bf9\u4e8e $\\lambda\\ge 0$\uff0c$(\\lambda x,\\lambda y,0,0)\\rightarrow((\\lambda-1)x,(\\lambda-1)y,0,0)\\rightarrow\\ldots$\u3002\n>\n> $\\lambda\\le 0$ \u4ea6\u7136\u3002\n\n> **\u5f15\u7406 2.**\n>\n> \u82e5 $(x_1,y_1,0,0)\\rightarrow(0,0,0,0)\\leftarrow(x_2,y_2,0,0)$\uff0c\n>\n> \u5219 $\\forall\\lambda,\\mu,(\\lambda x_1+\\mu x_2,\\lambda y_1+\\mu y_2,0,0)\\rightarrow(0,0,0,0)$\u3002\n\n> **\u5f15\u7406 2 - \u8bc1\u660e.** \u540c\u4e0a\u3002\n\n\u4ed4\u7ec6\u4e00\u60f3\u4f60\u4f1a\u53d1\u73b0\uff0c\u4f60\u597d\u50cf\u6784\u9020\u4e0d\u51fa $(2,0,0,0)$ \u80fd\u5230\u8fbe\uff0c$(1,0,0,0)$ \u5374\u5230\u4e0d\u4e86\u7684\u60c5\u51b5\u3002\u66f4\u8fdb\u4e00\u6b65\u6211\u4eec\u6709\u5982\u4e0b\u731c\u60f3\n\n> **\u5b9a\u7406 1.**\n>\n> \u82e5 $(\\lambda x_u,\\lambda y_u,0,0)\\rightarrow(0,0,0,0)$\uff0c\u5219 $(x_u,y_u,0,0)\\rightarrow(0,0,0,0)$\u3002\n\n> **\u5b9a\u7406 1 - \u8bc1\u660e.**\n>\n> \uff08\u9c7c\u5927\u539f\u6587\u5047\u5b9a\u8def\u5f84\u53ef\u88ab\u4e00\u4e2a\u8fde\u7eed\u51fd\u6570\u8868\u793a\uff0c\u6211\u8ba4\u4e3a\u8fd9\u4e2a\u8bc1\u6cd5\u4e0d\u7b97\u592a\u4e25\u8c28\u4e5f\u4e0d\u591f\u4f18\u7f8e\uff0c\u4e0b\u6587\u662f\u6211\u81ea\u5df1\u53d1\u73b0\u7684\u8bc1\u6cd5\u3002\uff09\n>\n> \u5047\u5982\u6211\u4eec\u4e00\u987f\u8d70\u4f4d\u8d70\u5230\u4e86 $(\\lambda x_u,\\lambda y_u,0,0)$\uff08\u8fd9\u6761\u8def\u5f84\u79f0\u4e3a $0$ \u8def\u5f84\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u5b83\u79fb\u52a8\u5230 $(x_u,y_u,0,0),(2x_u,2y_u,0,0),\\ldots$\uff0c\u8fd9\u4e9b\u8def\u5f84\u79f0\u4e3a $1,2,...$ \u8def\u5f84\u3002\n>\n> \u5982\u679c $0$ \u8def\u5f84\u548c $1$ \u8def\u5f84\u4e4b\u95f4\u76f8\u4ea4\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u7acb\u523b\u5f97\u51fa\u4e86\u4e00\u6761 $(0,0,0,0)\\rightarrow(x_u,y_u,0,0)$ \u7684\u8def\u5f84\u3002\u73b0\u5728\u6211\u4eec\u6765\u8bc1\u660e\uff0c\u5b83\u4eec\u771f\u7684\u4e00\u5b9a\u4f1a\u76f8\u4ea4\u3002\n>\n> \u5982\u56fe\uff0c\u6240\u6709\u7684 $0$ \u8def\u5f84\u6784\u6210\u4e86\u4e00\u6761\u65e0\u9650\u957f\u7684\u57ce\u5899\u3002\n>\n> [\u56fe\u7247\u94fe\u63a5](https://xyix.github.io/images/luogu-4356.png)\n>\n> \u8fd9\u6761\u57ce\u5899\u628a\u5e73\u9762\u5206\u6210\u4e09\u4e2a\u90e8\u5206\uff1a**\u4e0a\u9762**\uff0c**\u4e0b\u9762** \u548c **\u91cc\u9762**\u3002\u4e0d\u96be\u53d1\u73b0 $1$ \u8def\u5f84\u5982\u679c\u548c $0$ \u8def\u5f84\u65e0\u4ea4\uff0c\u90a3\u5c31\u5fc5\u5b9a\u5b8c\u5168\u5b58\u5728\u4e8e\u8fd9\u4e09\u90e8\u5206\u4e4b\u4e00\u3002\u4e0d\u96be\u8bc1\u660e\u5b83\u4e0d\u53ef\u80fd\u5728\u91cc\u9762\uff0c\u8981\u5728\u5c31\u5728\u4e0a\u9762\u6216\u4e0b\u9762\uff0c\u4e0d\u59a8\u8bbe\u4e3a\u4e0a\u9762\u3002\n>\n> \u90a3\u4e48 $2$ \u8def\u5f84\u5728 $1$ \u8def\u5f84\u7684\u4e0a\u9762\uff0c$3$ \u8def\u5f84\u5728 $2$ \u8def\u5f84\u7684\u7684\u4e0a\u9762\uff0c\u2026\u2026$\\lambda$ \u8def\u5f84\u5728 $\\lambda-1$ \u8def\u5f84\u7684\u4e0a\u9762\uff0c\u81ea\u7136\u4e5f\u5c31\u5728 $0$ \u8def\u5f84\u7684\u4e0a\u9762\u3002\n>\n> \u2014\u2014\u7b49\u7b49\uff01$\\lambda$ \u8def\u5f84\u96be\u9053\u4e0d\u5c31\u662f $0$ \u8def\u5f84\u81ea\u5df1\u5417\uff1f\uff01\u4e00\u6761\u8def\u5f84\u600e\u4e48\u53ef\u80fd\u5728\u81ea\u5df1\u7684\u4e0a\u9762\u5462\uff1f\u8fd9\u5f15\u51fa\u4e86\u77db\u76fe\uff0c\u539f\u5047\u8bbe\u4e0d\u6210\u7acb\u3002\n\n\u6709\u4e86\u4ee5\u4e0a\u77e5\u8bc6\u50a8\u5907\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ef\u8fbe\u7684 $(*,*,0,0)$ \u6784\u6210\u7684\u96c6\u5408\u7684\u5f62\u6001\u662f\u6781\u5ea6\u6709\u9650\u7684\u3002\n\n- $\\{(0,0,0,0)\\}$\u3002\u6700\u7b80\u5355\u7684\u5f62\u6001\u3002\n- $\\{(u,v,0,0)\\},\\gcd(u,v)=1$\u3002\u5373\u627e\u5230\u4e86\u4e00\u7ec4\u53ef\u8fbe $(u,v,0,0)$\u3002\n- \u5982\u679c\u627e\u5230\u4e86\u4e24\u7ec4 $(u_1,v_1,0,0),(u_2,v_2,0,0)$\uff0c\u90a3\u4e48\u4e0d\u96be\u53d1\u73b0\u4efb\u4f55\u4e00\u4e2a $(x,y,0,0)$ \u90fd\u80fd\u88ab\u8868\u793a\uff08\u5177\u4f53\u8bc1\u660e\u53ef\u4ee5\u89c1\u9c7c\u5927\u7684\u535a\u5ba2\uff09\uff0c\u5373\u5f62\u6001\u4e3a $\\{(x,y,0,0),x,y\\in \\mathbb Z\\}$\u3002\n\n\u8003\u8651\u6c42\u89e3\u8fd9\u4e2a\"\u5757\u53ef\u8fbe\u6027\u5f62\u6001\"\u3002\u6211\u4eec\u4ece $(0,0,0,0)$ \u5f00\u59cb BFS\uff0c\u9650\u5236\u6bcf\u4e2a\u5757\u5185\u5750\u6807\u81f3\u591a\u8bbf\u95ee\u4e00\u6b21\uff0c\u82e5\u8bd5\u56fe\u8bbf\u95ee\u591a\u6b21\u4fbf\u8bf4\u660e\u6211\u4eec\u627e\u5230\u4e86\u4e00\u7ec4 $(u,v)$\u3002\u8fd9\u6837\u590d\u6742\u5ea6\u662f $O(nm)$ \u7684\uff0c\u8fd8\u987a\u5229\u5b8c\u6210\u4e86\u5f62\u6001\u6c42\u89e3\u7684\u4efb\u52a1\u3002\n\n\u7136\u540e\u53c8\u53d1\u73b0\u8fd9\u4e2a\u5f62\u6001\u597d\u50cf\u53ea\u548c BFS \u51fa\u7684\u96c6\u5408\u6709\u5173\uff0c\u6362\u53e5\u8bdd\u8bf4\uff1a\u9664\u4e86\u90a3\u4e9b\u6839\u672c\u5230\u4e0d\u4e86\u7684\u70b9\uff0c\u5176\u4ed6\u6240\u6709\u70b9\u7684\"\u5757\u53ef\u8fbe\u6027\u5f62\u6001\"\u662f\u4e00\u6837\u7684\u3002\u76f4\u63a5\u7528\u76f8\u540c\u7684\u505a\u6cd5\u5957\u5c31\u5b8c\u4e8b\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n, m;\nbool H[105][105];\n\nstruct node {\n    int xB, yB, xI, yI;\n};\nnode calc(int x, int y) {\n    node ans;\n    ans.xB = x >= 0 ? (x / n) : ((x + 1) / n - 1);\n    ans.yB = y >= 0 ? (y / m) : ((y + 1) / m - 1);\n    ans.xI = x - ans.xB * n; assert(ans.xI >= 0 && ans.xI < n);\n    ans.yI = y - ans.yB * m;\n    return ans;\n}\n\nint U = 0, V = 0;\nvoid insert(int nU, int nV) {\n    if (U == -998244353) return; // case 2\n    if (nU == 0 && nV == 0) return; // meaningless\n    if (nU < 0) nU = -nU, nV = -nV;\n    else if (nU == 0 && nV < 0) nV = -nV;\n    int g = __gcd(nU, abs(nV)); nU /= g, nV /= g;\n    if (nU == U && nV == V) return;\n    if (U || V)  U = V = -998244353; // case 1 -> case 2\n    else U = nU, V = nV; // case 0 -> case 1\n}\n\nbool vis[105][105];\npair<int, int> pB[105][105];\nbool isvalid(node u) {\n    if (H[u.xI][u.yI]) return 0;\n    if (!vis[u.xI][u.yI]) {\n        vis[u.xI][u.yI] = 1;\n        pB[u.xI][u.yI] = make_pair(u.xB, u.yB);\n        return 1;\n    }\n    insert(u.xB - pB[u.xI][u.yI].first, u.yB - pB[u.xI][u.yI].second);\n    return 0;\n}\n\nint d[4][2] = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};\n\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; i++) {\n        char c = getchar();\n        while (c != '.' && c != '#') c = getchar();\n        for (int j = 0; j < m; j++)\n            H[i][j] = c == '#', c = getchar();\n    }\n\n    queue<pair<int, int> > Q;\n    isvalid((node){0, 0, 0, 0}); Q.push(make_pair(0, 0));\n    while (!Q.empty()) {\n        pair<int, int> u = Q.front(); Q.pop();\n        for (int i = 0; i < 4; i++) {\n            int vx = u.first + d[i][0], vy = u.second + d[i][1];\n            if (isvalid(calc(vx, vy))) Q.push(make_pair(vx, vy));\n        }\n    }\n\n    int T; scanf(\"%d\", &T);\n    while (T--) {\n        int x, y; scanf(\"%d%d\", &x, &y);\n        node qaq = calc(x, y);\n        if (!vis[qaq.xI][qaq.yI]) { printf(\"no\\n\"); continue; }\n        if (U == 0 && V == 0) {\n            if (qaq.xB != pB[qaq.xI][qaq.yI].first || qaq.yB != pB[qaq.xI][qaq.yI].second)\n                printf(\"no\\n\");\n            else printf(\"yes\\n\");\n            continue;\n        }\n        if (U == -998244353 && V == -998244353) {\n            printf(\"yes\\n\"); continue;\n        }\n        int nU = qaq.xB - pB[qaq.xI][qaq.yI].first,\n            nV = qaq.yB - pB[qaq.xI][qaq.yI].second;\n        if (nU == 0 && nV == 0) { printf(\"yes\\n\"); continue; }\n        if (nU < 0) nU = -nU, nV = -nV;\n        else if (nU == 0 && nV < 0) nV = -nV;\n        int g = __gcd(nU, abs(nV)); nU /= g, nV /= g;\n        if (nU == U && nV == V) { printf(\"yes\\n\"); continue; }\n        printf(\"no\\n\");\n    }\n}\n```\n",
        "postTime": 1626351227,
        "uid": 58567,
        "name": "x\u4e49x",
        "ccfLevel": 7,
        "title": "luoguP4356 \u9898\u89e3 - \u3010CERC2015\u3011Looping Labyrinth"
    }
]